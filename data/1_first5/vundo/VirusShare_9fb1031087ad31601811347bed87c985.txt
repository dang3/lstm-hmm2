and
mov
jmp
fld
jg
mov
add
nop
nop
nop
nop
pop
push
mov
push
xchg
or
rol
add
mov
jmp
jmp
jmp
jmp
jmp
xchg
xor
nop
inc
mov
jmp
jmp
jmp
jmp
jmp
jmp
push
xchg
mov
xor
ror
ror
or
mov
and
xchg
jmp
xchg
push
sbb
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
or
pop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
or
add
ret
mov
jmp
sub
xchg
mov
addr16
andl
nop
push
nop
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
or
nop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
xor
mov
jmp
push
mov
jmp
and
mov
mov
mov
sub
xchg
add
xchg
cmpl
xchg
je
push
mov
sub
and
shr
mov
shr
mov
sub
xchg
jmp
mov
mov
jmp
xor
push
pop
add
dec
or
pop
jmp
jmp
jmp
jmp
push
mov
sub
mov
sub
mov
push
nop
push
nop
jmp
jmp
jmp
mov
and
xor
mov
mov
sub
xchg
add
add
mov
jmp
mov
and
shr
and
mov
sub
xchg
pushl
dec
inc
inc
pop
push
nop
push
mov
jmp
or
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xor
mov
and
xchg
mov
mov
jmp
jmp
jmp
push
push
pop
mov
mov
sub
mov
push
xchg
push
mov
push
nop
call
xchg
jmp
xor
nop
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
nop
dec
nop
xor
ror
sub
xor
ror
mov
shr
add
pop
jmp
inc
mov
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
xchg
push
xchg
jmp
push
mov
jmp
jmp
jmp
push
mov
shl
and
or
mov
sub
mov
push
nop
push
nop
jmp
push
mov
push
push
pop
push
nop
push
xchg
push
mov
xor
mov
push
rol
sub
mov
and
push
ror
mov
and
push
shl
sub
xor
or
inc
pop
add
xor
shl
and
dec
test
jne
pop
pop
mov
call
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
jmp
call
nop
jmp
jmp
push
addr16
push
xchg
xor
mov
push
xchg
push
mov
push
mov
push
nop
jmp
push
nop
call
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cld
add
add
jmp
jmp
jmp
jmp
jmp
addr16
call
nop
mov
nop
mov
xchg
mov
push
pop
mov
mov
call
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
nop
or
pop
jmp
jmp
jmp
jmp
mov
call
addr16
mov
xchg
mov
xchg
mov
xchg
xor
or
mov
call
mov
jmp
jne
jmp
jmp
jmp
jmp
mov
cmpl
xchg
jne
push
nop
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xor
decl
mov
jmp
jmp
jmp
push
pop
sub
shl
and
and
mov
jmp
xor
mov
inc
nop
push
mov
jmp
jmp
jmp
jmp
xchg
shr
shr
and
xor
rol
mov
push
nop
push
mov
push
mov
push
xchg
pushl
xchg
jmp
mov
push
pop
andl
xchg
push
mov
add
xchg
rol
or
add
or
add
mov
xor
inc
xor
rol
xor
mov
push
xchg
push
nop
sub
shr
mov
jmp
jne
xor
mov
jmp
jmp
jmp
xchg
jmp
call
nop
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cmp
jmp
leave
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
ror
mov
shl
add
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
xchg
mov
push
pop
mov
nop
inc
mov
push
xchg
call
addr16
jmp
call
addr16
mov
mov
mov
rol
xor
mov
xor
or
mov
add
pushl
shr
shl
add
dec
pop
rep
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pushl
rol
mov
add
shr
mov
pop
and
sub
mov
jmp
and
or
sub
mov
mov
call
xchg
movl
xchg
push
xchg
pushl
nop
call
nop
or
inc
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
xchg
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
nop
push
nop
pushl
push
pop
jmp
push
nop
push
push
pop
add
mov
push
addr16
call
addr16
pushl
or
sub
or
pop
jmp
push
nop
and
add
or
mov
push
xchg
sub
and
add
and
sub
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
sub
pop
sub
pop
jmp
rol
pop
inc
add
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
or
and
ror
pop
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xchg
movb
xchg
jmp
jmp
jmp
jmp
jmp
jmp
call
push
pop
mov
nop
jmp
push
xchg
dec
and
and
mov
push
mov
call
nop
push
nop
sub
pop
sub
sub
mov
dec
pop
jmp
call
mov
shl
or
add
add
mov
inc
and
and
dec
dec
mov
mov
mov
mov
addr16
shl
xor
mov
jmp
ror
sub
mov
jmp
jmp
movzbl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
nop
mov
xchg
mov
addr16
movl
mov
xor
mov
shl
mov
add
add
and
mov
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
xchg
jmp
add
xchg
add
nop
add
xchg
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
movb
xchg
movb
nop
movb
addr16
movb
xchg
jmp
mov
xchg
mov
rol
ror
inc
or
mov
push
addr16
jmp
call
xchg
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
or
nop
cmp
xchg
jmp
add
sub
mov
xor
xchg
rorl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
mov
dec
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
or
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
addr16
call
xchg
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
ljmp
jmp
jmp
jmp
jmp
jmp
jmp
shr
sbb
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
js
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
and
mov
dec
rol
mov
add
xchg
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xor
incl
fadds
push
sub
pop
add
or
or
mov
pop
call
xchg
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cmp
add
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
jmp
and
addr16
mov
mov
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
dec
add
sbb
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
inc
addr16
push
xchg
mov
xchg
mov
mov
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
xchg
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jle
mov
mov
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
or
mov
jmp
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cmp
add
add
add
jmp
jmp
jmp
jmp
jmp
pushl
dec
add
xor
ror
pop
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
popa
add
add
ret
and
jmp
je
call
xchg
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
or
add
add
mov
or
add
shll
or
xor
shr
mov
mov
addr16
andl
addr16
add
xchg
mov
xchg
jmp
movb
xchg
movb
nop
movb
xchg
movb
xchg
movb
mov
movb
nop
call
xchg
sub
sub
mov
jmp
call
xchg
add
mov
pop
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
nop
movb
xchg
movb
nop
jmp
jne
inc
xor
mov
xor
or
pop
xor
nop
dec
inc
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
inc
das
inc
mov
or
rol
mov
jmp
sub
push
stos
mov
dec
or
rol
shr
mov
call
mov
or
and
pop
pushl
nop
push
nop
pushl
xchg
push
addr16
jmp
pop
cld
mov
xchg
movb
xchg
movb
mov
movb
xchg
movb
push
pop
jmp
call
xchg
xor
pop
mov
pop
sub
and
add
and
mov
pop
jmp
nop
jmp
jmp
jmp
rolb
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
and
mov
cmp
nop
jne
and
mov
add
mov
add
xchg
add
mov
push
mov
sub
xor
pop
add
add
jmp
cmp
mov
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
inc
in
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pusha
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
rol
mov
push
xchg
call
xchg
add
xchg
mov
movb
mov
movl
mov
call
nop
jmp
call
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
push
add
push
xchg
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
leave
nop
nop
nop
nop
nop
ror
inc
xor
or
or
mov
jmp
call
mov
shl
or
ror
xor
and
mov
movl
mov
call
xchg
jmp
movb
push
pop
movb
addr16
movb
mov
movb
mov
call
xchg
mov
mov
inc
mov
push
mov
call
nop
jmp
inc
push
pop
inc
mov
decl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
inc
add
xchg
cmpl
push
pop
jne
inc
and
and
pop
mov
xor
mov
jmp
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pop
hlt
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
jmp
jmp
jmp
jmp
jmp
jmp
jmp
popa
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xchg
pusha
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
xchg
popa
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
and
mov
call
nop
call
push
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
rol
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xor
mov
incl
xchg
shr
add
and
or
rol
mov
jmp
xor
xor
rol
sub
mov
mov
movl
xchg
jmp
mov
addr16
add
xchg
sub
rol
or
or
pop
push
popl
mov
pop
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xchg
add
add
leave
jmp
or
or
mov
sub
inc
or
mov
mov
addr16
jmp
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
nop
nop
nop
nop
call
nop
dec
mov
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
add
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
add
fsubr
decl
add
add
or
shl
mov
call
xchg
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
push
mov
jmp
movl
nop
call
nop
sub
mov
pop
or
sub
mov
call
nop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cmp
icebp
and
or
shl
sub
mov
nop
nop
nop
nop
nop
add
mov
mov
addr16
and
or
xor
and
xor
mov
shr
xor
ror
and
mov
mov
mov
dec
or
mov
dec
mov
rep
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
mov
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
incl
addr16
jmp
pop
lcall
add
jmp
sub
mov
sub
mov
mov
mov
mov
nop
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
shl
or
or
sub
xor
mov
cmp
xchg
jmp
mov
sub
fstpt
dec
cld
xchg
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jl
ror
or
shr
dec
mov
mov
add
shl
mov
add
jmp
inc
lods
pop
movb
xchg
jmp
je
incl
addr16
and
mov
cmp
nop
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
jmp
push
xchg
mov
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
call
push
pop
cmpl
xchg
je
jmp
rol
or
shr
and
mov
mov
or
rol
or
and
add
add
push
pop
mov
push
pop
and
rol
and
mov
add
nop
jmp
incl
mov
jmp
and
mov
movzbl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jg
cmp
jl
xor
xchg
jmp
add
xor
and
xor
mov
jmp
push
xchg
call
xchg
jmp
xor
mov
mov
ror
pop
sub
ror
add
pop
mov
pop
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
incl
xchg
xor
xchg
inc
xchg
or
shr
xor
ror
mov
and
xchg
inc
nop
inc
xchg
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pop
add
add
mov
inc
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
mov
add
mov
and
or
sub
sub
and
pop
mov
xor
mov
and
pop
and
xor
sub
pop
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cmpl
xchg
je
jmp
cltd
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
and
nop
add
xchg
xor
xchg
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
clc
add
or
jmp
jmp
jmp
jmp
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jge
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jge
pop
je
add
jmp
cmpl
mov
jne
mov
sub
or
mov
jmp
xor
mov
and
shr
and
pop
add
dec
add
pop
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
or
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jle
mov
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
nop
nop
nop
nop
nop
jle
inc
mov
mov
mov
sub
xchg
sub
xchg
decl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
shl
inc
mov
jmp
dec
inc
inc
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
rol
sub
mov
add
dec
mov
sub
mov
mov
push
pop
incl
xchg
dec
xchg
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
nop
nop
nop
nop
jne
jmp
mov
addr16
mov
nop
jmp
mov
nop
sub
mov
decl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
nop
nop
nop
nop
nop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
lret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
add
add
mov
popf
add
add
sbb
call
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
leave
jne
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
nop
nop
nop
nop
call
xchg
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
add
add
ror
add
mov
sub
xchg
shr
add
or
shr
add
mov
mov
push
pop
incl
nop
dec
xchg
jmp
adcb
jmp
rolb
cmp
leave
dec
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
jmp
mov
aaa
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
jmp
sub
xchg
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
add
ror
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cmp
addr16
dec
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
nop
nop
nop
nop
jne
push
xchg
pushl
addr16
call
mov
or
mov
mov
push
pop
call
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
fmulp
mov
add
rorb
mov
mov
nop
nop
nop
nop
nop
movzbl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
shl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
mov
jne
add
xchg
mov
mov
nop
nop
nop
nop
nop
dec
mov
mov
call
xchg
mov
nop
call
push
pop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
orl
xchg
or
inc
mov
jmp
pop
sub
add
mov
incl
nop
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
into
add
shl
add
or
mov
call
nop
cmp
push
pop
jmp
icebp
or
lock
sub
mov
jmp
xchg
add
add
fildl
add
add
add
nop
cmp
xchg
jmp
sti
das
pop
shr
and
add
rep
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
xchg
call
mov
push
mov
call
mov
dec
ror
or
ror
add
mov
mov
mov
jmp
push
inc
push
jae
inc
push
pop
inc
xchg
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
add
sub
sub
sub
shr
mov
dec
mov
sub
xchg
jmp
mov
or
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
xor
xor
mov
add
jmp
leave
jg
mov
xchg
incl
mov
dec
nop
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
mov
xchg
jmp
xor
xor
mov
add
addr16
sub
mov
jmp
or
or
or
mov
sub
addr16
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
js
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
lret
xor
push
pop
inc
nop
jmp
dec
ror
mov
shl
add
mov
jmp
outsb
lcall
mov
mov
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
rol
mov
and
xchg
cmp
nop
jne
and
nop
jmp
arpl
mov
mov
incl
xchg
nop
nop
nop
nop
nop
incl
push
pop
mov
nop
jmp
cmp
add
mov
add
addr16
add
xchg
or
or
add
shr
and
add
inc
addr16
inc
xchg
decl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
jmp
in
xor
addr16
cmpl
xchg
je
jmp
dec
icebp
add
nop
cmpl
push
pop
nop
nop
nop
nop
nop
jne
call
mov
mov
xchg
mov
nop
mov
push
pop
xor
or
mov
call
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jnp
imul
ret
sub
mov
sub
or
add
xor
pop
sub
nop
sub
add
sub
and
pop
add
and
add
sub
mov
xor
add
sub
add
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
or
nop
nop
nop
nop
nop
nop
push
nop
shr
sub
or
xor
mov
call
push
pop
push
xchg
mov
push
pop
call
mov
nop
nop
nop
nop
nop
mov
nop
shr
xor
mov
xor
xor
dec
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
nop
nop
nop
nop
nop
pop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
nop
nop
nop
nop
je
pushl
ror
ror
xor
mov
dec
pop
nop
nop
nop
nop
nop
add
nop
jmp
and
add
mov
add
xchg
push
addr16
call
nop
cmp
mov
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
nop
nop
nop
nop
je
nop
nop
nop
nop
nop
mov
add
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
nop
nop
nop
nop
nop
ror
sub
mov
or
mov
nop
nop
nop
nop
nop
rol
xor
mov
mov
add
nop
add
addr16
jmp
jns
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
nop
nop
nop
nop
nop
jmp
push
mov
pop
add
nop
nop
nop
nop
nop
add
xchg
add
mov
push
nop
pushl
xchg
call
xchg
mov
xchg
nop
nop
nop
nop
nop
add
xchg
add
push
pop
nop
nop
nop
nop
nop
rol
mov
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
add
addr16
nop
nop
nop
nop
nop
cmpl
nop
jne
nop
nop
nop
nop
nop
call
xchg
mov
nop
inc
sub
mov
pushl
and
mov
and
pop
nop
nop
nop
nop
nop
shl
inc
add
rol
sub
pop
sub
add
ror
xor
pop
and
shr
mov
shl
or
pop
mov
mov
cmp
mov
jne
nop
nop
nop
nop
nop
add
mov
add
mov
mov
push
pop
add
mov
add
nop
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
ds
into
inc
stos
pop
add
push
movsb
popa
adc
jne
aaa
xchg
jg
jg
insl
lcall
ret
lret
push
testb
add
leave
xor
faddl
lds
inc
test
or
or
iret
and
sbb
fsub
popa
aas
in
jmp
movsb
inc
cli
or
pop
push
iret
xchg
scas
mov
xor
in
mov
adc
jno
fsubs
push
test
xchg
ljmp
sub
fsubrs
pop
cltd
mov
pop
push
mov
jae
repz
pop
inc
mov
inc
lret
ljmp
xor
dec
hlt
out
mull
lahf
int
xor
push
aas
and
ret
push
jo
scas
sbb
dec
iret
pop
cli
sub
pop
inc
fidivrs
ffree
pop
sbbl
push
stos
or
mov
or
out
or
xor
mov
lret
fldt
xchg
xor
mov
cmp
test
lea
call
lahf
ffreep
shr
sbb
and
xchg
popa
push
aam
sub
in
push
frstor
pop
and
or
pop
rcl
push
mov
movsl
jb
inc
mov
jbe
rclb
xchg
sub
fisttpll
and
jns
pop
add
rcll
mov
ds
dec
rcll
adc
mov
mov
push
lock
pop
out
aaa
movsl
fldt
shl
cmp
mov
pop
push
insb
cmp
ret
das
push
aaa
push
orb
jns
cltd
in
mov
hlt
mov
dec
sbb
les
jg
jge
cli
lods
cltd
dec
or
sub
cmpsb
pop
popf
dec
xor
lret
pushl
cmp
cmpsb
sub
lahf
movsb
add
sub
idiv
inc
imul
enter
mov
mov
mov
leave
out
add
cmc
aas
mov
ds
xor
mov
xchg
sti
repnz
mov
mov
fnstenv
into
adc
push
int
adc
jle
jg
aad
stos
cs
add
add
int
cmc
ret
test
and
adc
jo
mov
pop
xchg
pop
lret
out
inc
dec
sub
or
movsl
adc
insb
test
test
loope
les
sub
outsl
pop
fcmovnbe
jbe
inc
jecxz
xchg
bound
mov
decl
xchg
lock
mov
loope
mov
push
test
push
dec
mov
orb
sbb
inc
jmp
inc
jle
stc
pop
xchg
and
sub
mov
push
and
imul
mov
outsl
xchg
mov
jae
dec
inc
jecxz
dec
fidivs
mov
pop
repnz
lahf
sub
mov
loopne
inc
jmp
repz
fistpl
repnz
mov
add
aam
adc
cs
mov
in
xorl
data16
fnsave
ss
lret
pop
mov
ds
shrb
sbb
add
popf
pop
repnz
sbb
das
mov
and
lods
lods
mov
cmp
and
sub
in
sub
push
cli
inc
adc
das
xchg
xchg
mov
shlb
jecxz
jp
xor
or
dec
aas
xor
inc
mov
leave
not
inc
lahf
js
inc
cli
test
or
lahf
insb
and
lret
sbb
test
mov
orl
inc
sti
add
mov
or
pop
inc
enter
push
pushf
mov
inc
pop
mov
fiadds
inc
dec
cmp
jnp
not
push
pop
cmp
add
jb
stos
out
sbbl
pop
xchg
pusha
pop
jle
and
xchg
ret
pop
aam
adc
shr
dec
pop
mov
das
leave
pop
pop
clc
addl
xor
icebp
mov
jmp
jge
bound
pop
inc
dec
lret
and
fcomps
mov
ja
jmp
jp
xor
imull
and
sbb
adc
inc
dec
inc
aad
imul
mov
and
adc
ss
mov
jbe
movsl
cs
sub
outsb
sbb
mov
loope
repnz
jnp
mov
adc
cmp
xchg
and
sub
aad
stos
dec
jl
inc
dec
mov
fidivrs
call
roll
xlat
outsb
aad
dec
in
ljmp
sbb
daa
jmp
push
sub
or
push
add
inc
jnp
jecxz
dec
shll
lret
out
dec
test
out
jnp
pop
add
in
paddq
mov
jns
push
scas
push
shrb
jl
lret
imul
xchg
imul
ja
xchg
in
jge
clc
mov
aaa
xchg
loop
and
pushl
sbb
cli
pop
movsl
loop
popf
push
jae
movsb
ja
cld
aad
or
xor
inc
pop
insb
xorl
adc
push
and
xor
ljmp
xchg
mov
gs
dec
add
and
pop
and
pop
in
stc
jb
popf
idivl
dec
out
mov
or
dec
jl
aad
mov
mov
inc
xchg
jns
aam
fsub
popf
mov
mov
pop
test
lods
adc
dec
mov
int
pop
ds
pop
mov
pop
mov
and
inc
into
out
out
aad
fcoml
mov
mov
cs
sbb
push
sub
pop
aam
lods
or
lods
int
out
inc
jne
imull
hlt
mov
add
jg
mov
shl
xchg
mov
dec
and
or
out
rcll
stc
cmpsl
imul
or
neg
sub
popa
icebp
add
rcl
mov
mov
js
and
andb
loope
adc
and
inc
xchg
cmpsb
fisubl
mov
es
cmpsb
mov
out
in
mov
shll
jb
lcall
sub
ret
hlt
fimull
adc
mov
loop
movsb
sti
adc
mov
rolb
shll
sbb
ret
or
dec
int
mov
pop
pop
data16
fsubl
jno
jae
into
pop
hlt
mov
inc
xor
call
inc
push
jae
adc
imul
adc
jmp
fistpl
pop
cltd
adcb
jecxz
stos
jo
lods
jmp
push
mov
and
sbb
das
add
add
subl
daa
xor
addr16
lea
sub
dec
sub
mov
data16
jge
push
ja
rol
jno
fists
push
xor
and
ds
outsl
movsl
je
push
repz
test
subb
dec
out
out
rorb
or
in
cwtl
inc
cwtl
sbb
xor
lcall
stos
push
int3
movsb
sub
insb
cmp
fnsave
pop
scas
jb
daa
jae
jecxz
test
xor
popa
jl
xchg
mov
shl
call
jb
adc
popa
mov
mov
push
arpl
dec
imul
jbe
mov
mov
hlt
jmp
roll
xor
dec
mov
push
dec
add
int
js
pushf
push
int3
xor
aad
jae
xchg
jp
lods
jmp
mov
aaa
icebp
sbb
fidivs
sub
mov
es
push
adc
rcll
das
cltd
pop
mov
sub
xor
xchg
fstps
fucomp
and
xchg
mov
aad
add
pop
dec
cmp
adc
lret
mov
and
push
aas
pop
jle
jl
pop
add
imul
inc
fdivl
aam
stos
in
mov
nop
and
pusha
lcall
dec
xor
lahf
ja
jnp
std
mov
inc
cli
aad
lds
jmp
push
ja
es
enter
gs
fimuls
add
add
mov
es
and
push
cmp
and
and
out
sbb
aam
in
mov
into
into
xor
and
mov
mov
scas
push
int
stc
add
mov
movsb
jp
cltd
decb
push
inc
dec
js
cmp
leave
dec
imul
icebp
daa
pop
ret
mov
pop
iret
xchg
add
mov
pushf
mov
mov
mov
stos
es
movsl
mov
inc
mov
fisubrl
gs
xor
mov
mov
adc
push
and
xchg
adc
sbb
call
adc
add
sbb
jbe
xchg
add
shl
outsl
mov
mov
add
cmp
popf
in
mov
fcmovne
push
mov
jg
adc
and
notl
lock
arpl
in
stos
lea
in
je
mov
mov
adc
jp
inc
das
icebp
repnz
push
bound
idivb
cmp
test
lods
dec
fcmovnb
xchg
shrl
jmp
or
lret
push
pop
cli
inc
lahf
imul
jno
mov
jmp
push
mov
cli
das
jb
or
xchg
or
outsb
arpl
mov
pop
lret
pop
movsl
test
in
aas
mov
push
aam
imul
add
sub
mov
cltd
lea
adc
arpl
and
hlt
inc
ret
push
ds
push
in
dec
inc
fldenv
sbb
adc
push
mov
es
test
fsts
xor
cmp
call
rcl
sub
enter
ret
cltd
dec
dec
subl
fucom
insl
popf
je
xchg
xchg
mov
push
call
adc
pushl
cmp
pop
out
lcall
icebp
into
or
mov
and
add
imul
push
jmp
rcrl
test
sbb
jle
cwtl
and
mov
lea
outsl
sar
shll
rcll
in
add
add
jp
ja
aam
gs
dec
fnsave
pop
jl
lods
xchg
popa
fisubrs
out
loope
aam
iret
test
das
test
cmc
sbb
and
shll
xor
into
lds
arpl
ret
cltd
cmpsb
in
xor
mov
xor
xor
pop
inc
adc
repz
mov
push
inc
push
fwait
in
jbe
addr16
or
ret
out
sub
jg
and
pop
dec
clc
add
mov
sahf
test
dec
rcll
cmp
dec
aaa
outsb
xor
js
test
sti
inc
mull
cmp
gs
insl
dec
adc
scas
xor
test
pusha
test
lret
fscale
stos
sbb
fimuls
sub
or
call
lahf
in
sbb
jb
sqrtps
mov
mov
int
xchg
insl
in
stos
cmp
test
clc
dec
sbb
lahf
arpl
adc
ss
scas
sub
loopne
int
testl
add
lcall
mov
cmpb
mov
stos
mov
pop
cwtl
and
add
inc
outsb
inc
jno
and
mov
out
testb
leave
sbb
xchg
xor
addr16
mov
ss
cld
push
popf
js
inc
aas
fs
cmp
and
push
daa
stc
jp
sahf
mov
lods
jl
push
inc
loope
mov
cmp
insl
clc
lcall
js
inc
adcb
test
aam
jae
lods
mov
sbb
das
xor
outsl
cltd
js
sub
or
pop
xchg
scas
movsb
ss
lods
fwait
popa
fisttpll
ja
sahf
jae
pusha
subb
inc
loopne
nop
lds
lods
enter
mov
xor
cmp
xchg
inc
orl
jno
cmc
pop
cmp
cmp
lret
add
mov
cmp
cmp
jmp
jecxz
divl
sub
adc
add
jecxz
aaa
xchg
sub
lock
pusha
popf
or
cmp
mov
pop
and
pop
mov
and
out
xor
shrb
mov
xchg
inc
add
sti
xor
aas
adc
f2xm1
nop
in
mov
test
push
pop
scas
cwtl
cli
ss
xchg
jae
dec
rcr
roll
movsl
push
push
pusha
mov
xor
mov
rolb
xchg
js,pn
jl
popf
inc
leave
inc
lea
push
sbb
mov
sti
push
and
pushf
movsl
jb
hlt
sbb
ljmp
movsl
mov
xchg
jne
jecxz
daa
sbb
int
push
ret
into
outsb
or
in
jo
orb
imul
in
push
int
xor
test
xchg
fs
adc
ljmp
pop
xchg
mov
sub
pop
inc
jo
sub
mov
cmc
mov
adc
mov
pushf
fucomip
push
aaa
imul
test
add
subl
fcoms
adc
stc
cmpsb
mov
cmc
pop
or
jb
pop
add
cltd
jle
rol
fdivs
sub
mov
ret
lea
fwait
inc
mov
mov
mov
jle
xchg
mov
fidivrs
movsb
out
adc
pop
push
mov
xor
cmpsl
mov
mov
xchg
add
mov
jb
xchg
xchg
dec
pop
adc
pusha
or
fisttps
sub
adc
out
mov
xor
bsr
xchg
jg
sub
or
fiadds
xor
cwtl
iret
cli
stc
rorb
cmp
add
int3
add
push
sbbb
hlt
shrb
gs
sub
push
lea
inc
mov
push
dec
cmp
xchg
sub
and
scas
stos
in
add
jle
and
out
mov
mov
mov
jmp
dec
in
xchg
pop
stc
and
imul
stos
sbb
adc
insb
ret
add
jp
insl
push
mov
adc
pop
xchg
adc
icebp
mov
out
mov
hlt
test
mov
shr
les
mov
sub
cmp
mov
test
sub
fucom
stos
xor
adc
movb
push
or
adc
pop
sbb
sbbl
lock
xchg
jge
cmc
loop
dec
dec
sub
int
int
mov
mov
push
enter
pop
arpl
pop
ret
mov
cmp
jg
cmp
mov
push
or
fs
inc
xor
scas
and
in
jle
aam
adc
mov
sbb
movsb
xchg
cmp
clc
je
add
idivl
movsl
mov
enter
sub
push
mov
xor
loope
or
jmp
mov
ljmp
sub
cmpsl
fldenv
pop
nop
divl
daa
xchg
push
mov
push
xor
cld
stc
ffreep
clc
dec
loopne
dec
test
xor
xlat
cld
pusha
push
push
scas
dec
test
dec
mov
aam
push
int
push
fs
inc
xlat
cmp
sbb
dec
cmpsl
enter
aam
orl
aaa
les
scas
int
ret
inc
mov
push
or
add
push
inc
dec
enter
jmp
insl
orl
clc
aaa
test
mov
cmp
sti
inc
iret
dec
out
or
cmp
mov
arpl
cs
xor
repz
mov
add
cmp
daa
dec
xor
popa
mov
es
lds
jne
push
scas
insb
push
rcrl
leave
data16
aaa
out
xor
jp
adc
into
jb
les
mov
insb
xchg
ret
cmp
in
cmp
test
ret
sub
mov
or
xchg
fs
mov
xchg
lahf
cld
lahf
add
push
pushf
fdivrl
dec
cld
jae,pt
dec
repz
adc
and
fbstp
inc
pop
shlb
mov
cs
add
popa
add
ficoml
push
dec
sbb
mov
sbb
loope
imul
int
or
cmp
std
aas
jl
insb
jg
sub
push
shl
fucom
sbb
dec
iret
je
aas
xor
or
inc
fwait
shll
into
fwait
cwtl
inc
or
and
pop
xor
cltd
lcall
stos
cmp
dec
mov
jle
dec
mov
push
and
mov
sbb
flds
push
sbb
xchg
adc
push
lcall
movsb
ret
mov
pushf
mov
sub
jbe
adc
jno
and
jb
loop
ljmp
push
inc
add
or
xor
cmp
stc
cmp
fnstenv
cmpsl
lds
jmp
imul
pop
push
out
dec
cmp
imul
inc
aas
push
mov
out
cli
jne
cltd
mov
jp
push
divb
jle
pop
cli
scas
pop
mov
mov
cmp
cmp
dec
jle
fldln2
mov
mov
inc
and
movsl
pop
push
add
mov
repz
xor
push
inc
cmp
clc
xchg
test
pop
aas
push
pop
sub
scas
pop
movsl
push
or
repz
insl
mov
in
out
mull
loopne
pop
test
inc
cli
xor
sub
out
and
push
in
in
loopne
rolb
aas
and
cli
gs
mov
int3
pmaxsw
push
pop
add
push
loopne
insl
js
xchg
mov
lcall
xchg
mov
unpckhps
gs
jno
jnp
mov
inc
movsb
movsl
inc
dec
loopne
lret
or
jmp
xchg
sbb
sbb
inc
fwait
es
dec
or
or
xchg
emms
faddl
bound
icebp
mov
mov
ljmp
stc
fdivs
push
adc
mov
lcall
dec
mov
cmp
fsubl
test
and
loop
push
lahf
rep
cmpb
mov
rorb
inc
ret
add
sub
pop
lahf
ret
out
int
pop
and
push
sti
into
pop
xchg
lret
xchg
mov
push
popf
jle
call
nop
idivb
inc
push
push
sbbb
leave
xchg
aaa
mov
fistpl
cmp
sub
adc
sbb
push
repnz
ss
jae
and
pop
xor
jnp,pn
lahf
cmp
js
inc
mov
push
lret
std
lahf
imul
dec
push
sbb
pop
das
sbb
jno
inc
sub
push
pop
sbb
jno
mov
or
scas
out
pop
fmuls
je,pn
xor
daa
lock
dec
sub
push
xchg
or
cmp
jne
pop
shlb
add
mov
ret
inc
stos
int
aad
sbb
sbb
lret
sbb
xor
pushf
jmp
or
mov
fxch
mov
mov
pop
jl
push
mov
xchg
pop
insb
mov
xor
mov
jnp
pusha
xlat
pop
loope
xchg
xor
mov
dec
rcr
clc
movsl
daa
das
hlt
xchg
xor
pop
into
sub
jns
enter
out
into
hlt
lods
fisubrl
mov
adc
mov
adc
aam
mov
sarb
mov
insw
dec
xor
xchg
mov
movsl
and
out
pop
mov
sub
pop
pop
cld
mov
in
jmp
hlt
shll
clc
imul
clc
adc
ds
lea
cmp
std
dec
xor
shll
push
xor
ror
jno
cmpsl
add
push
xor
cmp
push
cli
lahf
daa
call
test
aas
sbb
fucom
adc
rcrl
fisubs
push
pop
test
sbb
fcmovb
sbbl
xor
jne
dec
jp
into
inc
xchg
adc
shr
jne
pop
dec
or
pop
xchg
fisttpll
dec
lods
adc
out
ds
in
cmpl
pop
mov
pushf
inc
lods
push
push
and
aad
mov
lea
mov
dec
sub
into
push
out
xchg
jp
outsb
jne
sbb
dec
xor
xor
in
fwait
inc
dec
stos
pop
inc
xchg
aam
pushf
mov
int3
mov
mov
cli
xor
sub
mov
push
cmp
mov
scas
bound
pop
or
fnstsw
sub
add
cmp
aas
unpckhps
ja
pop
ss
popf
and
test
dec
hlt
pop
cmpl
pop
push
jnp
add
dec
mov
lret
sbb
xchg
scas
arpl
or
xchg
xlat
test
inc
lret
jmp
notb
xor
icebp
adc
lret
add
inc
outsb
cmp
cmp
sarb
cmp
mov
or
pop
adc
loop
shrb
adc
sti
inc
pop
push
xor
and
test
xor
cmp
idivb
sub
hlt
mov
inc
imul
clc
stos
popa
dec
dec
pop
iret
and
adc
cmp
je
pop
xlat
movsl
btr
inc
jns
int
jb
mov
add
mov
ja
cs
jmp
mov
jmp
fisttps
dec
std
jge
jg
pop
pop
xor
cld
mov
xchg
mov
mov
pop
lret
jns
call
mov
jno
xchg
pop
sbb
add
mov
add
fwait
ja
imul
mov
jno
call
lods
mov
mov
ljmp
inc
into
call
inc
sub
rol
testb
std
adc
repnz
fiaddl
pop
add
add
cltd
dec
into
mov
mov
test
push
cmp
sbb
je
or
jg
addl
pop
loop
jbe
mov
sub
pop
int3
mov
es
dec
jne
sub
push
lds
aad
mov
ja
jb
loope
fnstenv
xchg
int3
sti
jb
das
push
into
imul
mov
mov
loop
movsb
bound
subl
xchg
xlat
ficompl
aaa
push
notb
adc
idivl
inc
jg
and
mov
sbb
insl
xorb
cmp
cld
jecxz
or
cld
jns
ds
loope
xchg
pop
jo
into
pop
xchg
dec
out
mov
jp
fwait
inc
mov
push
lcall
push
jecxz
jl
push
sahf
cltd
addb
mov
cmp
push
pop
call
dec
fwait
insb
or
outsb
mov
mov
pop
shl
push
mov
loop
xchg
test
enter
push
mov
push
pop
mov
nop
pop
mov
or
cmpsb
mov
and
sbb
xor
cmp
push
push
aaa
jg
out
repz
xor
dec
das
fnstsw
daa
pop
orl
push
sub
add
jmp
mull
push
out
imul
xor
test
jl
lcall
daa
imul
xor
sbb
loope
add
push
pop
adc
out
xchg
sub
or
into
bound
js
orl
inc
sti
nop
jmp
and
out
adc
pop
daa
pop
aad
icebp
fistpll
sar
xor
push
push
lret
mov
in
pop
cmp
sub
jo
mov
aam
sbb
cltd
aaa
aas
push
sub
fdivs
iret
jge
ja
xchg
test
fs
inc
adc
dec
imul
imul
std
js
jb
neg
inc
icebp
fsubl
out
popa
popa
adc
xchg
jb
mov
cmp
mov
repz
fstps
mov
leave
mov
mov
and
das
pop
add
ffreep
mov
out
inc
xchg
xor
adc
repnz
push
popa
ret
jg
mov
sti
in
scas
push
pop
xchg
inc
pushf
cld
loopne
cmp
sub
test
out
movsb
pop
mov
xchg
stc
je
xchg
mov
movsl
or
rclb
pop
bound
fdivl
xchg
mov
mov
stc
push
inc
icebp
xchg
sub
cs
sbb
adc
aas
push
mov
fsubrs
dec
sub
cmp
fisttpll
cmp
mov
jae
dec
in
loop
insb
insl
dec
lds
sti
jecxz
mov
cmp
xchg
jo
jo
rclb
fidivl
int3
inc
pop
sarl
insb
fiaddl
addr16
rcrb
fninit
shlb
mov
mov
fmull
ss
dec
or
fcomps
mov
daa
lahf
sbb
out
push
sbb
lds
mov
and
inc
jno
sahf
pop
xor
sbb
push
jnp
push
or
xlat
stos
test
enter
repz
mov
out
aas
dec
mov
js
iret
and
xchg
cmp
scas
scas
inc
fidivrl
push
add
imul
enter
loope
les
jo
and
sub
pusha
fldl
pop
cmp
push
and
jo
dec
cmp
lods
adc
rep
cmpsb
xchg
cli
rol
lret
das
push
xchg
les
psrlq
sub
mov
xor
stc
lea
pop
jge
sahf
push
lretw
xchg
mov
and
dec
out
jl
dec
jo
fidivrs
and
sahf
lock
addl
mov
pop
lret
test
cmpsb
xchg
push
cld
push
rcll
scas
dec
aaa
test
push
shl
push
mov
loop
loope
sub
outsb
pop
xor
aaa
xchg
leave
and
ficompl
push
je
ss
fsubs
je
pop
adc
leave
icebp
daa
stc
mov
in
jecxz
pop
and
sahf
sub
or
imul
out
nop
dec
test
ds
fcoml
sbb
repz
add
xchg
cmc
out
lcall
and
fdivrs
inc
xor
loopne
mov
das
pusha
push
lea
and
jecxz
fwait
scas
mov
push
mov
ficoml
adcl
scas
adcb
xchg
shll
pop
jge
cmp
jb
or
pop
arpl
jmp
pusha
pop
dec
scas
push
sub
sub
mov
icebp
shrb
sar
icebp
jne
pop
add
scas
mov
mov
ret
add
sbb
push
fdivrl
jno
or
stos
mov
mov
cmp
hlt
mov
sub
and
cmp
sub
fs
lcall
jg
test
xchg
sahf
nop
dec
adc
call
xor
pusha
aaa
mov
mov
arpl
ret
mov
rcrl
push
dec
jge
insb
sbb
xchg
push
fldcw
sub
rcrb
hlt
ret
repnz
xchg
push
mov
gs
dec
inc
pop
jge
ss
mov
or
and
cmp
lret
push
mov
test
je
or
push
push
clc
xchg
ja
xorl
cmp
loope
xor
or
or
xchg
cmp
test
outsb
mov
cmp
pusha
push
std
test
loope
lret
les
cwtl
inc
xchg
test
cmp
jae
cwtl
stos
pop
inc
jb
into
and
or
aaa
push
xchg
pop
and
movsl
mov
std
ret
dec
jge
sub
pop
push
outsl
jb
out
adc
ss
pusha
and
or
mov
jbe
mov
add
push
in
stos
mov
cmp
sub
js
xchg
lcall
or
outsb
clc
daa
dec
incl
imul
sarb
ljmp
lcall
push
cmp
ss
lds
mov
rclb
fcoml
add
sbb
dec
pop
popf
add
push
dec
dec
out
push
imul
xchg
nop
les
cmp
lods
push
addr16
inc
iret
add
push
ljmp
ret
xchg
mov
mov
and
cwtl
testb
sub
or
notb
dec
jmp
je
cmpsb
cli
jo
inc
cld
mov
sbb
push
enter
shll
aam
mov
or
adc
fs
pop
sub
in
sbb
push
add
add
mov
sub
inc
or
mov
aaa
add
add
aaa
les
outsb
push
jge
mov
push
ja
jge
push
int
mov
in
test
inc
cmpsb
cwtl
movsl
and
push
xor
push
cmc
cmp
inc
xor
pop
shrl
dec
dec
adc
pop
ljmp
mov
and
xor
add
test
mov
or
leave
rclb
mov
fimull
push
repz
lahf
aad
xchg
movsb
add
ret
arpl
mov
stos
adc
pop
and
dec
pop
and
loop
cmpsb
mov
cmp
sbb
pop
lahf
or
mov
rolb
sar
les
jp
faddl
cmpsl
fistpl
sub
jl
out
popf
iret
outsl
call
cltd
add
mov
andl
jno
push
repz
loope
xchg
lods
nop
jle
lcall
rclb
add
xor
lods
cmp
push
xchg
and
in
cmp
leave
mov
push
pop
add
mov
aad
loopne
aaa
mov
or
push
pop
iret
cmp
jae
dec
pop
sbb
sbb
and
inc
adc
shll
sti
push
xchg
or
test
mov
fistps
inc
bound
in
inc
add
outsl
or
xchg
divl
fbstp
dec
jno
inc
adc
icebp
or
xlat
sbbl
adc
push
cmp
popa
in
arpl
pop
cmpl
lret
leave
loopne
adc
sbbb
pop
pop
inc
sbb
xor
and
clc
jp
ds
pop
imul
mov
sbbb
pop
cmp
shlb
mov
fldenv
jb
xor
mov
mov
push
add
js
shrl
dec
test
push
sub
add
add
loope
int3
scas
movsl
jne
push
push
stc
cmpsl
cmp
rorl
add
cltd
inc
out
or
sbb
lods
xchg
test
into
or
std
inc
lea
jbe
mov
push
cmpsl
shl
xor
lea
leave
fldenv
daa
mov
cmc
xchg
add
lahf
and
test
cmp
in
mov
sahf
and
es
mov
cmc
add
adc
rorl
mov
stos
cmp
sub
movsb
and
popf
addb
bound
scas
jecxz
cli
inc
pop
rolb
jnp
lret
hlt
pop
sbb
mov
mov
and
or
pop
mov
insl
xor
mov
enter
arpl
mov
cmp
jl
cmpsb
inc
scas
or
dec
stc
je
mov
jb
btl
dec
xchg
rcll
mov
jo
mov
sbb
mov
cmpsb
xchg
inc
pop
dec
push
insb
mov
sbb
mov
out
call
ds
js
sbb
xchg
dec
lret
gs
jno
jnp
rolb
mov
cltd
fists
aaa
iret
sbb
dec
hlt
out
jl
cmp
mov
jnp
loop
clc
scas
dec
adc
pushf
xor
fsubrs
sub
sub
sub
and
pop
lcall
sbbb
mov
cmp
jbe
sub
xlat
int3
das
pop
lods
nop
loopne
cli
mov
mov
push
jl
and
pop
push
dec
addr16
fs
mov
rorb
mov
aas
mov
loop
popa
sub
movsb
fmuls
jno
mov
loopne
xor
das
data16
and
pop
xor
es
popf
fimull
in
sub
jecxz
dec
sub
std
jecxz
pop
mov
insb
setp
arpl
nop
lea
lods
popf
pushf
xorb
out
andb
jg
pop
sbb
fcomp
push
inc
pop
inc
ffree
and
js
xor
popf
mov
psubb
dec
dec
mov
mov
cmpsl
insb
add
pushf
std
cmp
aaa
cltd
mov
add
jae
lcall
dec
fucom
and
pop
add
inc
sub
mov
test
cmpsb
movsb
mov
jp
leave
cmp
mov
mov
cwtl
mov
jnp
mov
push
andb
xchg
stos
enter
ss
call
cli
xor
lahf
jnp
es
jae
add
and
lea
push
jmp
ljmp
cmp
loop
xchg
dec
dec
into
jo
test
push
pop
mov
out
into
inc
stos
jnp
mov
sarb
das
loopne
sbb
int3
adc
mov
or
fisubl
adc
jge
out
cmp
push
and
call
xchg
mov
stos
cmpsb
sub
test
push
cli
xchg
sbb
cmp
mov
push
outsl
xchg
sub
arpl
lret
mov
xlat
mov
testl
mov
dec
lret
xor
stos
out
imul
pop
dec
jg
mov
fsubs
adc
fcomps
lock
mov
add
jbe
jae
das
and
push
mov
sub
dec
mov
and
rolb
xchg
lods
aam
icebp
push
stc
outsb
out
frstor
inc
pop
pushf
xchg
mov
sub
out
in
adc
subb
and
outsl
pop
pop
loope
stos
inc
shl
pop
and
cwtl
sbbl
fsts
and
pop
mov
pusha
push
lret
jg
repz
les
out
xor
mov
shrb
or
mov
ret
loopne
dec
add
jmp
sbb
sub
jl
jb
pusha
inc
mov
pusha
dec
xchg
push
adc
mov
mov
cld
popf
loopne
nopl
push
cmp
cmp
loop
iret
dec
mov
pop
hlt
lret
nop
and
adc
push
fistpll
push
mov
data16
jecxz
repz
out
cmp
cmp
pop
push
add
adc
icebp
subl
or
mov
lods
test
adc
test
cmp
js
pop
clc
xchg
push
adc
aam
jb
sbb
stos
jmp
aas
mulb
push
cltd
jnp,pn
pop
cmpsl
sbbb
int
add
movsl
pop
iret
popf
sub
sbb
mov
dec
aas
and
push
stos
je
movsb
push
cmpsl
sub
int3
mov
mov
mov
notl
nop
push
jne
ss
sub
cmp
sbb
aad
mov
inc
mov
test
icebp
pop
push
outsl
pop
fidivs
or
data16
ds
cmp
mov
pusha
xor
insl
dec
addr16
stc
inc
dec
add
add
mov
mov
ret
xor
adc
xor
xor
or
xchg
lock
add
outsl
cltd
out
bound
push
scas
lea
inc
mov
and
xchg
pop
push
push
jne
sub
mov
in
js
mov
push
setge
fistpl
lock
dec
or
cmpl
fidivl
sub
into
cmpsl
jle
mov
push
cmpsl
mov
or
stos
cmc
mov
test
mov
or
push
into
jmp
nop
mov
jmp
stc
mov
repnz
jp
xlat
clc
xrelease
cs
mov
cmc
faddl
imul
add
das
mov
jmp
ret
xor
pop
pop
mov
addr16
repz
stc
ror
add
pop
lret
rclb
inc
das
sub
js
cmp
sbb
jp
cmpsl
test
icebp
out
and
leave
icebp
sub
js
inc
faddl
xor
pusha
or
inc
pop
push
into
lock
jg
loopne
dec
pop
shrl
dec
and
jno
shl
icebp
fsubrs
mov
mov
cmpsl
mov
je
push
lods
xlat
adc
push
jb
icebp
in
pop
ljmp
lahf
jg
mov
shlb
fidivrl
mov
fsubl
xor
je
aaa
xchg
lret
movsb
mov
jge
xchg
in
or
int
xor
stos
faddl
jp
pop
mov
cmc
jg
add
aaa
sub
aam
jg
dec
mov
sbb
mov
in
arpl
and
in
fstl
pop
mov
push
push
jb
jnp
mov
mull
xor
xchg
iret
add
nop
mov
add
sti
jecxz
xor
sbb
add
sbb
sahf
dec
jno
pop
bound
sarl
sti
or
or
mov
adc
lock
adc
xor
mov
ficomps
out
and
jb
dec
xchg
movb
cmp
scas
mov
ret
push
hlt
icebp
lock
pop
popf
push
pop
mov
xor
xchg
test
cmp
loop
adc
cwtl
or
out
pop
pop
mov
xchg
mov
mov
scas
or
lds
dec
rcll
aas
stc
rorl
adc
test
add
imul
push
xchg
lea
call
push
mov
jae
icebp
push
xlat
test
mov
cwtl
pop
sub
vmulsd
popa
cld
inc
icebp
es
test
inc
aad
fcoml
popf
lahf
mov
dec
shll
sbb
hlt
add
mov
jecxz
fistl
mov
cli
mov
xor
xchg
and
daa
imul
mul
push
or
rcrl
push
push
ja
add
inc
mov
push
subb
inc
jbe
xlat
mov
xchg
pusha
les
mov
in
push
xchg
je
lods
scas
mov
add
push
mov
push
or
test
ror
sahf
enter
push
loop
lahf
pop
popa
sbb
pop
mov
add
adc
js
fcomp
fnstenv
notb
mov
aas
sbb
pop
cmp
cmpl
popa
push
out
sti
sbb
pop
mov
mov
push
into
imul
jmp
adc
fs
mov
outsl
ds
jb
jmp
out
inc
das
push
mov
add
mov
sar
sbb
dec
std
icebp
punpcklwd
es
and
mov
xor
dec
cmp
sub
pop
push
push
pop
xchg
ds
out
cmp
stc
loop
push
jns
aad
out
inc
mov
pushf
or
fdivs
das
lret
fcmovnb
jle
adcl
mov
mov
xor
cmpsl
and
test
dec
dec
mov
adc
repnz
ja
cwtl
pop
fsubs
pop
mov
movsl
mov
lahf
cwtl
xor
insl
xor
pop
fdivp
push
movsl
push
inc
sbb
pop
cmc
repnz
mov
cs
insb
sbb
pop
xor
sbb
inc
mov
repnz
jmp
sub
push
mov
fwait
imul
inc
imul
pushf
scas
sbb
push
xchg
mov
cld
inc
add
test
mov
aaa
adc
lret
adc
lods
xchg
dec
push
sbb
sub
inc
xor
xor
add
std
push
xchg
xor
loope
rol
aam
adc
mov
jbe
leave
push
in
push
fisubrl
sbb
mov
arpl
xor
jecxz
ret
fs
xor
mov
inc
sbbb
xchg
or
jl
fs
xchg
inc
insb
push
test
xor
jmp
inc
xchg
fdivp
xor
jmp
xor
inc
sti
cmp
arpl
jbe
ljmp
pop
mov
sbb
xor
mov
jle
add
int
scas
or
mov
out
out
add
std
push
and
sub
sub
in
lods
jns
nop
mov
in
pop
fcomps
xchg
outsl
aaa
fcmovnu
xor
push
inc
cld
sbb
mov
mov
into
or
and
arpl
push
mov
mov
stc
sub
or
mov
or
movsb
ror
inc
out
leave
xorb
mov
enter
inc
xor
pusha
inc
adc
fldt
dec
lcall
sub
cmp
or
mov
xchg
jg
in
pop
ss
outsb
mov
or
mov
and
cmc
adc
cmp
movl
adc
and
mov
push
ror
fbld
or
stc
and
adcl
pop
jae
push
adcb
mov
loope
dec
imul
idivl
push
cs
negb
jl
mov
mov
mov
insb
push
int
pop
pop
imul
mov
dec
xlat
cmpsb
cs
cmp
sub
adc
shlb
fwait
jns
sub
mov
stos
jge
sbb
je
push
sti
xor
pop
les
pushf
xchg
xchg
scas
jae
dec
filds
insb
add
and
dec
or
cmc
push
add
pop
shrb
adc
mov
shr
xchg
imul
xchg
js
mov
pop
jnp
out
sbb
cmp
lret
dec
jmp
stc
adc
add
push
inc
test
jecxz
pop
data16
jno
lods
test
xor
and
jns
sbb
mov
aaa
vpsubsb
leave
dec
fnstsw
push
ja
add
rol
inc
sbbb
mov
iret
and
fwait
pop
out
pop
xor
jbe
dec
subb
scas
leave
adc
int3
pop
lahf
mov
mov
scas
test
fisttps
push
out
lods
jb
push
in
add
stc
shl
xchg
push
arpl
push
mov
mov
cltd
hlt
cmp
xor
insb
and
loop
add
push
sub
cs
pop
jecxz
into
ret
dec
out
adc
pop
cmp
sub
and
js
arpl
xlat
sbb
push
sbb
mov
out
xchg
cmp
mov
pop
cmc
fmull
lret
mov
sahf
pop
loope
icebp
xor
mov
iret
fmuls
aam
mov
sar
mov
je
jp
push
xor
iret
or
jbe
pop
loope
push
sti
mov
ljmp
adc
pop
xor
outsl
xchg
jmp
addr16
je
and
xor
fadds
call
pop
push
rclb
loopne
mov
add
mov
cmp
and
scas
insl
aaa
dec
push
shll
cmp
ss
adc
aam
sub
repnz
arpl
push
shlb
or
mov
cld
mov
movsl
cwtl
mov
xor
sub
lods
sub
and
mov
and
jns
sub
add
enter
cmp
into
aad
or
test
adcl
test
cmp
cs
lahf
pop
in
add
addps
enter
or
sbb
lcall
add
add
lret
xchg
andb
inc
mov
and
mov
cld
and
rorl
dec
bound
and
jbe
jno
sbb
adc
lret
xchg
add
mov
sti
leave
inc
in
xor
ds
inc
sub
jb
add
and
imul
cltd
fcmovu
mov
pop
or
mov
cmp
sarl
xlat
repz
lahf
fisubrl
mov
imul
xor
imul
jle
or
inc
xchg
fcompl
loope
outsl
aaa
loope
mov
and
push
cld
outsl
mov
adc
and
clc
sbb
pop
pop
cwtl
cmp
cmp
cmp
popf
aas
cwtl
call
cmp
push
fs
cwtl
mov
inc
outsl
sbb
jmp
pop
mov
or
dec
lds
push
lret
std
leave
popf
cld
in
jl
jmp
or
cmp
mov
push
xlat
lea
testl
and
mov
insl
lahf
sti
in
out
push
aam
lahf
or
stc
cld
inc
test
pop
mov
popf
mov
jns
push
or
fcoms
lret
nop
inc
mov
inc
in
into
dec
sub
mov
sub
adc
in
loopne
arpl
mov
and
mov
aaa
cmc
jne
adc
add
outsb
jo
sbb
hlt
mov
pop
xchg
adc
lods
loope
xchg
lods
pop
dec
fcompl
jne
adc
xchg
fs
mov
inc
add
out
popa
dec
adc
mov
lods
ja
aas
add
push
mov
pop
mov
adc
add
pop
mov
pusha
cwtl
sbb
movsl
mov
jae
sub
scas
xchg
ror
in
cs
mov
and
lods
xor
lea
les
xor
pop
loope
pop
arpl
lret
jg
pop
sub
aaa
fstpl
imul
scas
fmull
push
mov
and
xor
insb
sbb
in
bound
pop
dec
xor
test
stos
aaa
sub
xor
sarb
mov
sar
inc
insl
mov
sub
xchg
pop
fists
addr16
ret
xchg
pusha
aas
rclb
dec
sub
jnp
add
mov
je
cmp
cltd
jne
mov
jbe
adc
jmp
jmp
out
imul
das
out
popf
imul
mov
aas
mov
inc
popa
xor
hlt
sbb
xchg
inc
mov
jno
movsb
dec
jle
cmp
call
outsl
mov
enter
inc
jb
les
addr16
dec
xchg
test
jns
nop
pusha
nop
cmpb
js,pt
lret
inc
cmp
dec
dec
call
push
push
fs
cmpsl
push
mov
inc
cmpsb
lock
mov
inc
xchg
daa
push
es
mov
stos
add
dec
outsl
lea
pop
lret
cmp
ja
pushf
int
xor
jl
inc
psrlw
es
int
adc
mov
into
iret
jge
stos
sahf
jmp
enter
mov
jle
jae
sbb
call
push
fdivs
xchg
adc
inc
adc
jne
push
std
popf
repz
mov
adc
shl
repz
mov
mov
jle
int3
push
inc
push
shlb
in
pop
sub
scas
aas
negb
int3
daa
xchg
xchg
cld
cmovg
sub
push
jno
sub
mov
repnz
popf
pop
add
faddl
outsl
fistl
pop
xchg
jb
cmp
fs
pushf
xchg
cmpl
das
cmp
mov
push
iret
cs
bound
call
divb
inc
ljmp
inc
mov
dec
pop
pusha
shlb
cmp
inc
imul
sbb
add
call
sub
xchg
es
push
xchg
and
mov
mov
mov
sub
xor
jae
fwait
daa
inc
and
out
insl
std
lcall
insl
mov
sub
lcall
inc
call
mov
arpl
mov
and
cmp
inc
mov
or
jbe
jg
pop
out
out
and
push
ret
mov
and
mov
xchg
xchg
mov
cmp
outsl
jge
js
mov
jno
mov
xor
xchg
inc
aas
dec
dec
loopne
lods
mov
and
adc
clc
xchg
adc
sbb
cmp
cmc
mov
mov
cmp
add
les
sub
adc
in
and
jmp
jl
mov
xchg
testl
movsb
mov
sub
into
cmp
inc
xchg
ficoms
or
pushf
pop
std
jecxz
mov
mov
in
jg
push
leave
xor
sbb
faddl
sbb
fldcw
andb
cmpl
mov
cmp
stc
jl
mov
das
dec
loop
mov
sub
stc
out
jg
loopne
sub
fdivl
mov
das
dec
xor
push
mov
imul
and
icebp
lret
push
xchg
outsb
dec
inc
imul
xchg
cmpsl
sbb
sbb
dec
loopne
jge
pop
dec
mov
cmp
or
imul
xor
pusha
test
sbb
leave
in
mov
fcomi
cld
rep
cs
fsts
rclb
or
sub
lret
movsl
pop
test
aam
mov
inc
cwtl
fmulp
iret
push
repnz
shrl
shl
movsl
xchg
adc
mov
pop
jl
cltd
movsl
inc
clc
scas
add
or
int
xchg
pop
add
call
test
fcmovne
cld
es
into
lods
mov
jae
fwait
and
je
aad
xor
lcall
push
dec
fdivrl
pushf
rcrb
push
sbb
in
mov
aad
test
mov
test
adc
sbb
in
inc
call
jecxz
mov
mov
aaa
and
adc
dec
test
adc
cmc
int3
lcall
jmp
mov
pop
addr16
jmp
les
jno
sub
cmp
clc
xor
cmpsl
jmp
adc
or
mov
out
sub
sbb
inc
add
daa
push
inc
xchg
aad
in
inc
iret
pop
imul
jo
popf
ret
test
mov
ret
fdivrl
rolb
out
jbe
insb
and
btr
mov
stc
cmp
dec
daa
lods
cmpsl
inc
mov
mov
int
movsb
and
js
mov
cmc
push
mov
xchg
jbe
ret
lea
adc
movsb
jmp
dec
aad
jl
cmp
cli
fidivl
out
movl
cwtl
mov
xchg
sub
imul
push
mov
sbb
push
loopne
jl
cltd
aaa
in
jle
inc
adc
mov
addr16
mov
cltd
out
jo
lods
push
push
insb
mov
mov
dec
lods
dec
dec
mov
test
add
add
ja
mov
outsl
std
leave
es
adc
push
pusha
xor
and
cs
out
push
or
inc
sbb
pop
pop
aaa
sub
les
repnz
test
adc
stos
cld
pop
test
test
cld
je
pusha
mov
xchg
mov
icebp
lock
dec
push
sbb
mov
rclb
jns
pop
shl
dec
fwait
out
js
push
sti
dec
sbb
sub
hlt
mov
add
dec
jg
xorb
xlat
dec
gs
ficoms
sub
or
bound
test
bndstx
test
sub
clc
inc
xchg
mov
lcall
and
lds
in
pop
sarb
mov
movsl
push
out
mov
pop
xchg
push
pop
call
scas
fwait
sbb
jecxz
jne
aas
jge
push
push
push
sbb
ja
adc
xchg
xchg
fisttps
mov
add
cltd
ss
mov
out
inc
inc
jl
stos
aas
xor
enter
adc
push
test
and
inc
or
sbb
repnz
sub
loopne
inc
xor
dec
push
loop
adc
sbb
mov
mov
push
js
fstp
pop
ss
or
repnz
push
sbb
js
mov
mov
inc
push
jg
pop
add
shrl
inc
mov
nopl
sbb
push
adc
into
sub
scas
into
or
and
mov
xchg
and
xor
adc
sbb
bound
dec
jmp
push
sbb
xchg
pop
shrb
and
or
scas
push
adc
test
pop
test
push
test
dec
bound
lods
add
sub
mov
stos
adc
test
dec
aaa
repz
filds
fs
sbb
and
sbb
fld1
aad
out
mov
mov
mov
push
hlt
xchg
and
testb
pop
push
lods
je
out
dec
pop
sub
mov
in
imul
inc
add
sbb
adc
xlat
sarb
out
test
mov
dec
jge
pop
lock
and
repz
mov
and
ljmp
xchg
mov
call
lret
loop
inc
pop
call
xchg
or
jecxz
inc
inc
jecxz
data16
or
jge
faddp
push
mov
mov
xchg
sbb
andb
cwtl
imul
xchg
cmp
outsl
scas
jns
loopne
cmpsb
sbb
aam
add
add
repnz
cli
loopne
jg
lret
in
ret
mov
sbb
jg
sbb
pop
or
xchg
daa
leave
pusha
xor
sub
in
push
rcr
int3
push
scas
mov
or
in
clc
jae
fs
mov
adc
jmp
mov
testb
ljmp
dec
cwtl
sub
jae
cli
icebp
fildll
popf
in
push
insl
mov
mov
xor
ret
inc
add
bt
orl
sbb
jge
lcall
mov
inc
mov
jne
fldcw
lods
xor
das
push
rcr
xchg
jecxz
cld
jae
int
mov
enter
mov
cmp
xchg
mov
aas
stos
adc
or
sbb
test
leave
int
pop
pop
hlt
push
add
hlt
sub
and
pop
cmpsl
movsw
push
es
fsubp
fildll
sahf
mov
jl
mov
mov
sub
std
insl
jns
add
lds
add
mov
out
add
push
lock
ja
add
dec
out
stos
fs
pushf
pop
cs
xlat
je
jnp
xor
pushf
lods
dec
ja
clc
and
cltd
lock
mov
cmp
xor
push
pop
int
testl
adc
fcomp
mov
mov
and
test
and
bound
aaa
enter
les
pop
fildl
sub
dec
xchg
lret
shl
xor
pop
in
inc
sbb
pop
scas
push
mov
sbb
ss
lahf
mov
xchg
jo
adc
add
add
jge
pop
arpl
ret
lods
insb
es
xor
test
jg
int3
stos
sub
xchg
adc
or
lcall
int
pop
js
adcl
mov
cmpsb
cmc
push
or
sub
mov
xor
push
mov
sub
lahf
repnz
push
pop
sub
jno
cld
and
leave
cwtl
or
pop
mov
pop
xor
xor
mov
shrb
and
int
or
cmpb
aaa
icebp
lock
xor
cmp
leave
push
dec
add
cltd
mov
sar
dec
inc
add
sub
mov
adc
xchg
mov
in
iret
enter
and
adc
jae
repnz
daa
mov
sub
in
into
lock
mov
jne
mov
xchg
ret
push
pop
mov
xchg
pop
mov
test
subl
push
sub
fsubp
rol
and
aas
in
out
stos
and
xor
pop
popf
pinsrw
test
adc
cmp
cmp
push
inc
and
out
imul
mov
cmp
data16
popa
adc
or
xchg
movl
cltd
push
add
and
pop
xor
test
xor
daa
icebp
ljmp
sub
mov
jl
xchg
call
and
sub
mov
add
inc
test
insb
mov
push
hlt
ljmp
adc
lods
lods
adc
ljmp
das
lea
mov
sub
std
fs
xchg
cwtl
mov
aaa
push
add
mov
nop
stc
adc
aam
cmpsl
pop
mov
adc
test
iret
push
clc
das
pop
xchg
mov
jge
out
cltd
test
jno
std
xchg
cmp
mov
pop
and
dec
xchg
push
and
jmp
push
test
adc
fs
jb
mov
shll
sbb
jns
mov
frstor
sti
mov
cmp
inc
dec
call
insl
jno
lret
push
push
inc
into
ret
adc
aas
mul
rorb
data16
fcmovu
pop
pusha
cmpsb
cmpsl
mov
adc
scas
jg
jnp
addl
sbb
cmpsb
dec
sahf
nop
iret
xlat
rol
movsb
call
test
neg
lods
fimull
fisubrs
jbe
add
js
pusha
rclb
xor
and
aaa
push
stc
sub
out
mov
lret
nop
lret
mov
cli
xchg
and
push
ret
shlb
jmp
fldcw
pop
mov
and
lcall
aas
mov
icebp
push
jg
lret
adc
arpl
add
fwait
xchg
mov
les
stc
cwtl
push
inc
or
xchg
std
insl
imul
adc
and
insb
ficoms
add
add
mov
or
loope
or
jns
sub
xorl
xchg
cmp
lret
adc
pop
mov
call
jp
lahf
inc
clc
mov
call
insl
and
pop
mov
lret
out
jp
sbb
int
jmp
out
nop
cmpsl
mov
cmp
lock
or
stc
addb
mov
cli
imul
fldt
sub
jmp
fwait
es
xchg
or
inc
jge
xlat
das
inc
ret
inc
out
inc
nop
mov
pop
fwait
pop
aaa
jnp
adc
out
xchg
lcall
push
mov
and
cmpsl
mov
sbb
pop
push
jp
dec
xchg
js
pop
sub
int3
jmp
scas
rcrb
push
jp
icebp
cmp
shll
or
aas
mov
mov
cli
bound
mov
xchg
sub
xor
cmpsb
cmp
push
les
mov
mov
out
filds
mov
adc
loopne
mov
pop
ret
push
add
mov
sahf
jle
inc
xchg
sub
and
sbb
insb
xchg
psllq
push
xor
mov
outsl
jmp
or
clc
cmpsl
cmp
cmp
and
sub
mov
psrad
jno
cmp
ret
push
inc
cmpsb
push
mov
xor
pop
sbb
dec
jnp
or
dec
sbb
scas
aad
cwtl
hlt
shll
fs
cmp
xchg
cmp
test
push
pop
repz
fdivrl
lret
xchg
jno
xchg
sarl
push
jae
popf
jle
pop
jle
gs
jecxz
mov
push
inc
pop
xor
lds
jno
dec
mov
adc
push
testb
cmp
test
xor
cld
cmc
ljmp
jmp
sub
or
loopne
push
cmp
shl
in
pop
mov
cmpsb
sub
cmpsl
loope
add
mov
add
or
jns
or
pop
mov
hlt
push
xchg
inc
scas
pop
popa
and
sahf
clc
jb
out
rcll
dec
dec
mov
mov
call
std
xor
sub
cmpl
data16
int
pop
loopne
fcomip
sarl
push
pop
and
leave
clc
fldl
cs
lods
xor
cmp
ret
std
xchg
and
sbb
fwait
add
rcll
leave
pop
dec
lods
sahf
push
cmpsb
xchg
pusha
jbe
push
dec
mov
stos
inc
dec
sbbb
int3
jle
xchg
jb
hlt
cmpsb
cltd
mov
data16
xor
loope
test
jmp
lea
stc
fsubrs
mov
jnp
out
imul
sub
xchg
xor
in
fucomip
pop
cwtl
hlt
dec
das
lods
and
jo
lea
mov
and
jne
pop
cmc
adc
push
and
popa
and
subb
testb
mov
lock
icebp
mov
sahf
jmp
mov
lret
sahf
push
int3
push
loope
fdivs
and
mov
adc
in
testb
xchg
pop
jg
es
mov
mov
movsb
push
ds
cmp
test
repnz
lret
add
sbb
xchg
int
mov
xchg
add
jns
leave
in
lods
mov
or
loopne
mov
shrl
xchg
pop
ret
psubb
mov
mov
push
jge
adc
arpl
push
icebp
pop
std
lret
sbb
xchg
call
arpl
fdivrp
lret
and
ds
mov
inc
ljmp
fxch
mov
xchg
or
xchg
xchg
push
mov
fstl
fiaddl
movsb
aas
gs
lcall
sbb
bound
mov
lods
xlat
shlb
sub
test
hlt
jo
mov
adc
sbb
jns
xor
cmp
lods
insl
mov
mov
mov
jae
dec
notb
clc
xchg
mov
mov
or
jbe
push
cmp
push
and
lock
cmp
xor
mov
xchg
es
pop
mov
jge
cmp
mov
push
cs
rolb
pop
jmp
lods
jo
dec
dec
imul
add
dec
in
sub
aaa
inc
mov
sarl
lea
movsb
adc
sub
jge
daa
xchg
outsl
mov
dec
push
test
mov
mov
test
sub
or
and
mov
ror
sahf
pop
out
or
mov
enter
cmpsb
int
dec
mov
cmp
jo
fsub
mov
aaa
roll
sub
mov
cltd
xchg
adc
mov
pushf
jl
loopne
jns
addr16
std
daa
add
imul
xor
je
shll
xchg
mov
std
xchg
xchg
cmp
xchg
mov
xor
out
shlb
xor
scas
stos
aas
pop
sti
ljmp
pop
shl
adc
sbb
sbb
in
fcomip
xchg
dec
push
cmpsb
sahf
js
or
push
cmp
mov
lods
lret
or
push
into
aaa
jns
loopne
cmc
cmp
outsl
mov
cmp
rorb
repnz
sbb
jns
cld
or
mov
fcoml
or
pop
int
movsb
ja
test
cmp
xor
inc
test
inc
xorl
xchg
adc
add
xor
jbe
enter
jecxz
cmpsb
inc
sbb
xchg
mov
mov
lock
jmp
data16
imull
jne
push
pop
and
ljmp
aad
and
mov
and
cli
bound
push
jne
mov
push
es
add
int
dec
cs
add
hlt
or
mov
adc
dec
push
and
fwait
jb
pop
add
outsl
nop
test
lcall
ret
and
add
xor
sbb
call
mov
fildl
sub
xchg
push
pop
mov
ljmp
dec
xlat
xor
movsb
mov
push
or
sarl
jp
and
dec
jb
rorb
clc
push
insb
fsubl
ds
aad
pop
adc
sub
mov
movsb
push
sub
in
mov
sarb
jo
cmp
mov
jno
in
inc
jge
push
cmc
ja
aad
jp
dec
loop
mov
cmp
cmc
lods
and
stc
adc
xorl
bnd
lahf
and
pop
test
mov
arpl
adc
sbb
into
movntps
and
out
add
clc
sbbb
jge
dec
sub
shll
inc
bound
xchg
pop
dec
stos
mov
mov
pop
out
out
sub
inc
mov
test
or
aaa
xchg
int
dec
out
sub
pushf
push
or
icebp
jmp
mov
stos
lahf
pop
icebp
cwtl
popf
test
je
dec
hlt
scas
push
mov
pusha
divb
outsb
cmove
ss
ss
jb
adc
test
cmp
aaa
mov
mov
adc
mov
jg
pop
faddl
jecxz
popf
jnp
sub
imul
push
add
sbb
inc
imul
mov
in
xchg
daa
adcl
sub
sub
je
or
pop
aas
push
inc
shrb
mov
mov
test
jecxz
js
jle
sub
jno
popf
fidivl
xor
cmpsl
aas
imul
jb
out
jb
xchg
int
sbb
and
fmuls
adc
loop
add
mov
xor
popa
jp
inc
popa
imul
in
mov
in
in
cmpsb
or
sbb
ret
ss
sbb
mov
cs
xor
cmp
dec
add
add
test
leave
push
scas
and
xchg
scas
loop
rdtsc
jl
repnz
or
push
mov
mov
mov
test
ja
and
scas
repnz
cmp
int
jns
nop
sub
xchg
sbb
test
test
repz
pop
mov
jl
mov
add
test
or
sbb
xor
std
xchg
popa
or
pop
daa
dec
sub
mov
mov
xchg
add
fmuls
into
loopne
lods
rorl
imul
sub
pop
jmp
dec
cmpsl
cmc
fidivrl
in
outsb
push
out
xchg
xchg
mov
test
dec
sti
jle
shrl
rcrl
sbbl
lock
rclw
hlt
jo
jmp
xchg
rorb
in
loop
lods
sbb
push
xchg
mov
shlb
mov
fimull
pop
xchg
cld
notl
lods
lds
bound
inc
push
enter
dec
mov
popf
bound
or
mov
jno
cmp
pop
xchg
test
imul
sbb
enter
push
and
loopne
test
jb
pop
popa
rolb
sub
inc
test
jmp
enter
push
xlat
loop
popa
loop
loope
adc
or
inc
sbb
xor
jmp
in
or
in
fbstp
cmp
ds
mov
or
sbb
shl
fstp
dec
fidivrs
or
das
sbb
cld
push
add
and
bound
and
jae
mov
add
sub
push
rol
push
rcrb
mov
fstpt
mov
es
in
lret
push
dec
adc
jbe
push
inc
jns
jge
cli
jecxz
xor
das
xor
lcall
in
jmp
mov
imul
pop
scas
int3
push
jl
es
insb
divb
cwtl
js
adc
pop
aam
fisubs
add
test
pop
dec
inc
out
stos
jl
imul
mov
shrl
daa
mov
stc
push
pop
aas
inc
js
jbe
mov
jg
cmp
lods
fs
cmc
lea
lret
int
push
pop
fnstenv
lcall
xlat
xor
cmp
inc
shl
es
std
fwait
leave
and
je
and
lods
pop
enter
fs
and
inc
mov
mov
inc
sub
aaa
repz
sahf
add
idivl
push
es
pop
mov
cmp
push
and
jge
lock
pop
sub
stc
fmuls
add
movsl
dec
mov
mov
xlat
aad
add
adc
loopne
sbb
mov
mov
xor
or
cmp
or
adc
xchg
test
es
inc
fldenv
jb
adc
rcrb
pop
aaa
pop
add
pop
jl
xor
ljmp
stc
call
add
rcll
mov
pop
test
xchg
lcall
cmpsb
fildll
adc
movsl
mov
stos
pop
sbb
std
out
xor
out
cmp
jle
jecxz
cmc
push
mov
xchg
jno
mov
daa
outsl
bound
mov
mov
xchg
sahf
es
jp
test
add
scas
inc
jmp
dec
lcall
sti
push
data16
and
clc
gs
inc
jmp
and
pop
xchg
pop
lret
leave
mov
dec
pmulhuw
iret
cmc
mov
adc
push
sbb
jmp
lahf
xchg
mov
pop
js
xchg
stos
inc
jmp
lods
les
push
mov
dec
jge
xchg
test
fwait
and
stos
stos
cmp
cmpsb
xchg
jg
xor
sahf
ja
pop
adc
addr16
aaa
rorl
adc
mov
roll
pusha
les
inc
aas
inc
pop
std
mov
push
push
and
lods
add
lds
push
lahf
loope
pop
push
out
out
jno
std
popf
push
adc
test
scas
pcmpeqd
cltd
dec
hlt
mov
notl
lods
lea
arpl
popa
loopne
inc
ja
les
inc
add
cld
sub
in
iret
lahf
sub
inc
repnz
sbb
and
push
pop
enter
loope
movsl
imul
sub
adc
push
sbb
mov
mov
idivl
inc
inc
xor
dec
repnz
daa
sub
fstl
jl
pop
dec
adc
mov
mov
cmp
shr
sbb
int
imul
cmc
nop
fildll
divb
enter
mov
lds
xchg
pop
sub
xchg
mov
xor
jmp
mov
mov
or
add
inc
xchg
dec
mov
int
and
jns
mov
in
scas
fcoml
mov
daa
adc
fidivs
idiv
add
aas
ret
les
jo
mull
or
mov
inc
imul
and
sti
sti
adc
push
mov
adc
stos
adc
shll
aam
cltd
mov
dec
cmp
mov
test
jecxz
mov
push
pop
push
sbb
test
cs
cmp
sbb
popl
ss
pushf
sbb
sbb
jle
cwtl
js
push
rcrl
cmp
mov
test
popa
fabs
or
fcoms
inc
mov
sahf
pop
scas
inc
in
ss
lods
inc
mov
pusha
jns
sbb
out
mov
aad
jo
cmp
ror
std
cmc
in
rcrb
inc
adc
pop
mov
mov
pop
cli
inc
outsl
xchg
fnsave
out
cmp
fsubrs
add
jno
xlat
lds
push
sub
in
sbb
mov
shlb
lods
and
pop
push
xchg
lock
popa
jmp
leave
sbb
mov
fcmove
das
addr16
or
loopne
xchg
cmp
jne
mov
data16
pop
imul
outsl
mov
out
cmp
mov
adc
jno
out
dec
xor
imul
int
push
mov
push
sub
test
push
dec
mov
cmpsb
jle
inc
jg
lcall
out
pop
or
pop
push
mov
icebp
arpl
das
jecxz
pop
addr16
pop
add
dec
pop
push
ja
push
jmp
xchg
push
pop
aad
aam
jp
adc
je
ds
enter
dec
mov
andb
mov
or
jmp
shr
popf
adc
inc
pop
sub
dec
sar
dec
adc
ss
xchg
xchg
add
and
sbb
mov
movsb
pop
jae
xchg
xor
dec
or
out
ds
pushl
das
arpl
mov
add
adc
xchg
pusha
add
and
mov
in
add
add
lret
mov
mov
test
cld
or
mov
nop
sti
outsb
push
loopne
sbb
push
xor
out
xchg
scas
icebp
bnd
popa
mov
iret
push
into
mov
mov
sbb
out
add
cmpsl
sahf
sarb
mov
mov
insb
mov
xchg
test
shl
add
scas
lcall
and
push
subl
stos
subl
outsl
mov
add
out
test
sti
bnd
sbb
movsb
mov
int3
sbb
test
mov
sub
test
jecxz
std
jae
ljmp
ret
inc
mov
mov
cwtl
hlt
in
pop
pusha
mov
adc
or
add
pop
faddp
xchg
or
jns
xchg
mov
mov
jmp
mov
push
jns
shrl
negl
mov
jg
dec
jno
test
imul
sub
clc
or
insl
outsb
mov
cmp
mov
lods
sti
xor
jp
mov
into
pop
xchg
pop
mov
jl
inc
push
add
call
pop
ret
aaa
jae
push
sub
imul
mov
cli
sbb
push
or
adcb
jne
fcomps
ret
nop
mov
pop
xchg
and
ja
and
test
adc
cmp
dec
push
fs
mov
gs
neg
jmp
insb
stc
sbb
push
pop
push
cltd
gs
lret
out
mov
cmp
and
jg
mov
cmp
jge
mov
cmpsb
bound
scas
xor
ja
pop
orl
mov
test
sbbb
add
in
mov
inc
push
rorb
fstpt
xchg
sbb
out
fcomps
sbb
dec
insl
aaa
std
push
out
addr16
cmpb
xor
jge
push
inc
mov
repz
push
adc
push
push
js
dec
mov
divb
fcomip
in
iret
mov
cmp
and
push
mov
or
sahf
sbb
mov
shrb
push
cmp
pusha
dec
jmp
and
jo
jnp
out
stc
xorb
inc
add
out
js
bound
aas
push
sbb
lea
fs
cld
call
and
inc
lcall
shl
enter
xor
rorw
adc
mov
add
and
mov
lcall
add
lret
movsl
add
leave
out
sbb
fwait
and
push
push
mov
mov
and
fdivr
pop
jnp
pop
test
mov
sbb
pop
add
add
shr
jle
pop
jno
cmp
in
xor
add
movsb
loopne
lods
inc
andb
mull
pop
adcb
pop
ss
lock
sti
cmp
push
ficoms
mov
aaa
push
xchg
pop
sub
push
pop
fisubs
cmpsb
out
into
adc
lods
pop
and
sarb
js
popa
sbb
roll
xchg
pop
fstps
adc
idiv
ret
iret
add
fidivrl
stos
pop
sub
mov
mov
mov
insl
add
cmp
repnz
jle
xchg
pop
addr16
push
inc
movsl
mov
movsl
and
ja
notb
inc
xchg
insb
mov
imul
inc
sarl
jb
outsb
loopne
andb
push
cmc
xor
pusha
xorl
jge
jne
call
fstps
into
jmp
leave
mulb
rcl
xchg
repnz
mov
outsb
sbb
add
fisubrl
gs
stos
pop
dec
ss
adc
cmp
ficompl
jmp
pop
arpl
mov
pop
fxch
imul
aad
aaa
out
push
pop
mov
adc
les
and
mov
mov
mov
lahf
negl
inc
mov
ja
sub
mov
stc
sbb
test
in
push
loopne
push
idivb
movsb
push
aam
xlat
outsl
pop
or
pop
fs
imul
jl
lahf
push
pop
mov
pop
filds
into
dec
mov
clc
shrb
loope
shrb
mov
aad
sahf
dec
jne
mov
aas
in
stos
lods
cld
out
mov
pop
cmp
sbb
jno
push
pop
mov
jle
cmp
loopne
jmp
sub
sbb
cmp
notb
mov
sahf
das
adc
sbb
imul
or
pushf
jge
inc
mov
adc
inc
sub
cmp
fldt
and
cmp
add
or
cli
ret
popa
scas
nop
lret
fisubrl
mov
cs
jns
sbb
push
fisttpl
leave
lods
movsb
xchg
pop
and
pop
pop
pop
sbb
js
in
ja
xor
mov
pop
imul
add
cmp
outsb
mov
mov
sbb
daa
jne
cltd
push
pop
std
aas
popl
clc
lock
iret
mov
pop
out
stos
cltd
pop
jo
frstor
lret
add
mov
outsl
inc
and
imulb
nopl
scas
movsl
out
or
lret
mov
add
pop
iret
dec
cmp
xor
inc
lods
jecxz
loopne
das
aas
xchg
loopne
pop
test
add
jecxz
and
push
xchg
adc
push
ret
arpl
mov
push
pop
adc
shl
and
jl
xor
gs
inc
jl
subb
shll
or
jns
mov
daa
sbb
insb
add
jge
in
add
cli
movsb
mov
push
push
cltd
addr16
fs
inc
fdivl
jge
ret
xchg
pop
mov
adc
or
or
xor
in
pop
inc
jg
mov
pop
test
push
and
mov
fst
inc
xor
add
cld
mov
or
nop
lock
outsl
idiv
cli
mov
pop
sub
mov
inc
shlb
push
gs
xchg
xor
pop
shrb
jne
sbb
inc
jmp
push
push
pushf
pop
addb
mov
mov
js
and
xchg
or
push
jg
sahf
jbe
jb
fndisi(8087
test
test
add
popa
xchg
sarb
add
xchg
push
mov
xor
xchg
mov
pop
mov
cltd
in
test
mov
push
xchg
lret
sbb
ficoms
stos
mov
xchg
xchg
mov
inc
lods
mov
push
mov
sahf
das
je
pusha
ret
cld
lret
shr
movsl
das
or
cmpsb
push
add
xchg
jp
jg
mov
sbb
add
jmp
or
xchg
sbb
sbb
lds
cmp
adc
jp
mov
cmpsl
mov
xchg
cmpsl
stos
sub
in
sub
arpl
push
or
mov
xor
mov
dec
ret
lods
rcr
aas
lcall
add
scas
inc
dec
or
xor
jns
call
add
pop
xor
aad
inc
xchg
fs
lahf
mov
mov
test
popa
sti
out
push
pop
sbb
mov
mov
std
mov
mov
and
add
cmp
sub
stc
add
in
aaa
sbb
repnz
add
sbb
push
incb
or
fsubs
inc
int3
mov
add
xchg
nop
jo
jl
testb
shll
fistpll
cmpsb
imul
shl
pop
jge
add
pop
xor
and
mov
add
js
movsb
mov
xlat
lret
push
ja
jns
dec
push
sbb
adc
shll
stos
arpl
fdivs
inc
or
xor
inc
pop
mov
sbb
adc
pop
sbb
mov
sub
lahf
lods
clc
data16
sbb
mov
xchg
dec
jae
mov
outsb
or
adc
mov
clc
lahf
lock
pop
movsb
add
sub
jmp
icebp
and
mov
xor
lods
sbb
fwait
xor
mov
mov
xchg
je
hlt
jns
stos
jne
lret
mov
call
xchg
aas
dec
jb
xchg
mov
insb
test
adc
xchg
rorb
repnz
orb
shlb
pop
fdivr
and
ss
lret
sbbb
adc
push
dec
jecxz
mov
xchg
sbb
sarb
mov
add
add
outsl
mov
jle
adcb
and
pushl
jmp
xchg
shl
dec
fimull
inc
adc
push
test
lods
movsl
jnp
push
lret
dec
sub
sbb
jns
outsb
jg
jno
daa
xchg
insl
in
rorl
das
push
clc
ja
hlt
out
jne
and
dec
or
shrl
mov
dec
jb
enter
fidivl
mov
mov
adc
inc
sbb
mov
cmp
mov
dec
jo
add
cmp
stos
sbb
and
fwait
test
inc
repnz
sub
movl
jmp
dec
into
outsl
pop
inc
add
sar
lahf
adc
mov
fsubl
dec
out
lahf
hlt
stos
clc
mov
push
jle
xchg
mov
sbb
cli
and
loopne
xor
add
inc
insl
pop
dec
std
xor
in
dec
pusha
aam
jae
lcall
rcll
xchg
add
sarl
hlt
ss
fldenv
ret
cmpb
aaa
nop
hlt
xlat
xor
lcall
gs
bound
mov
in
std
inc
xchg
inc
cmp
sti
sbb
mov
dec
and
data16
push
add
fwait
das
inc
push
sarl
sub
daa
sarb
pusha
mov
and
test
mov
mov
pop
orb
test
rol
push
jecxz
or
aaa
xchg
lods
dec
xor
xchg
or
out
cmp
xchg
sbbb
xor
pop
and
and
cwtl
jp
xor
std
mov
sbb
leave
and
jg
dec
into
sbb
fsubrl
stc
mov
cmp
les
pop
jo
adc
sub
out
or
in
jl
sub
xchg
fdivrl
mov
sub
sarb
mov
sub
lret
mov
xchg
jecxz
mov
divb
ret
xchg
and
in
subb
cli
shll
mov
cmpsb
add
ds
xchg
shlb
adc
adc
cltd
mov
jae
ror
popa
and
xchg
cmp
lods
sub
dec
jo
mov
popf
dec
arpl
in
pop
hlt
out
aam
sarb
mov
imul
fnsetpm(287
sub
fnstsw
mov
adc
inc
push
fistpl
xchg
int3
daa
repnz
nop
in
jmp
loope
or
jmp
icebp
je
push
orb
lret
out
inc
xor
xchg
dec
mov
xchg
mov
or
xchg
inc
sub
ljmp
sub
xor
outsl
inc
loope
mov
mov
lahf
adc
push
cmp
rcrl
inc
jecxz
aas
inc
es
mov
sahf
jge
lcall
cmp
adc
lods
call
incb
dec
dec
call
ss
loopne
sbb
test
inc
fists
adc
imul
cmc
pop
xlat
push
jbe
dec
add
pop
xchg
arpl
iret
out
sub
dec
push
cwtl
add
cmpsl
pop
dec
aas
push
fdivp
hlt
push
pushw
jae
xor
mov
loope
notrack
loop
es
jle
pop
andl
ror
arpl
sub
mull
add
lret
loopne
gs
in
cmp
mov
popf
adc
lds
sbb
jmp
or
ljmp
or
lahf
sbb
adc
jns
outsb
stos
push
fsub
sub
sbb
adc
cmp
pop
xchg
movsb
daa
movsb
inc
shrl
shl
cmp
test
popf
jle
lea
inc
sbb
xchg
enter
jge
std
mov
stos
dec
push
and
jle
sbb
xor
popf
enter
push
out
mov
adc
and
jnp
cmp
loope
cld
mov
and
mov
sub
out
test
mov
je
sbb
sbb
fdivrs
xor
rolb
insl
inc
jno
jns
inc
cmc
jo
fistps
push
dec
adc
sbb
jbe
inc
mov
mov
fwait
or
in
and
mov
decb
xor
adc
sbb
cmp
cltd
stc
je
xor
dec
sbb
outsb
sub
js
gs
idivb
in
push
test
inc
adc
mov
jp
jo
sub
mov
dec
xchg
add
xor
stos
jnp
xor
lret
iret
push
fcom
dec
xchg
cmp
pop
iret
enter
mov
pop
sbb
and
cmpsb
pusha
mov
lret
xor
cltd
push
lret
push
inc
in
out
and
iret
push
cmpsl
jg
fidivrs
add
insb
or
mov
es
leave
or
mov
mov
and
lret
mov
dec
mov
out
jle
mov
pop
push
data16
inc
mov
adc
dec
loope
push
mov
dec
inc
mov
dec
sub
adc
inc
test
outsl
adc
sahf
pop
fstl
clc
push
mov
sarl
or
pusha
jecxz
fnstenv
int3
fidivs
xor
mov
mov
jo
inc
and
push
flds
in
pop
sbb
push
push
out
jp
xor
ljmp
sbb
fcom
pop
cmpsl
jo
loop
aad
dec
ja
repz
shll
mov
sub
out
adcl
adc
xor
fnstsw
in
mov
jns
fldl
xchg
adc
shll
loopne
cltd
mov
scas
mov
imul
fsubrs
add
stc
mov
pop
push
in
mov
push
arpl
add
mov
shlb
sbb
adc
lods
fwait
mov
lds
aam
push
neg
shrb
and
pop
jl
inc
in
sbbb
pushf
popf
mov
jne
lahf
jp
das
lock
int
inc
in
adc
push
dec
fildl
repz
loop
mov
push
mov
daa
das
mov
test
sub
repnz
jnp
lea
clc
movsb
nop
pop
insb
jle
jne
pop
out
ss
ror
jns
and
hlt
sbb
or
cmc
push
movsb
mov
scas
lods
into
push
or
add
cltd
fnsave
add
aam
cwtl
mov
ffreep
fsubrl
lds
and
inc
out
inc
pop
push
adc
fnstsw
div
sub
xor
lea
mov
clc
jl
mov
jmp
ds
loope
fsubs
and
loopne
push
enter
hlt
sbbb
xor
fs
and
cmp
shlb
bt
inc
jo
sub
push
cltd
cmp
and
js
add
not
in
mov
ja
iret
sbb
mov
and
inc
jns
bound
cmp
adc
unpcklps
inc
cli
lods
mov
shl
or
sub
mov
xor
pop
repz
imul
outsl
int
vpsubsw
push
pop
inc
hlt
fcompl
leave
fcmovnbe
or
scas
cwtl
stos
imul
mov
dec
aam
dec
vcvtdq2ps
mov
mov
push
cmp
dec
sub
test
pop
jnp
push
lcall
push
loopne
scas
clc
sub
hlt
scas
lahf
push
add
jp
sub
test
xchg
lods
inc
mov
or
ja
fwait
and
push
cmpsl
shll
xchg
mov
jmp
jo
lods
pusha
mov
mov
xor
jns
pop
insb
gs
adc
cli
jne
xlat
mov
rorb
insl
lea
or
mov
and
nop
mov
clc
adc
and
push
shlb
and
xor
cmp
decl
cltd
mov
or
push
iret
pop
scas
aad
mov
lret
or
movsl
push
rorb
ficompl
push
mov
fistpl
adc
mov
ljmp
and
lods
cmp
test
or
test
hlt
mov
lret
cwtl
jle
dec
pop
outsb
rolb
cld
push
rcr
in
movl
mov
adc
aaa
sub
push
cld
xchg
xchg
into
jle
adc
loope
jno
xor
xor
fisttpl
fs
mov
call
inc
mov
dec
insl
jl
xchg
xchg
test
xchg
fistl
das
inc
test
fucomi
ja
push
hlt
cmp
js
mov
cld
rolb
xchg
or
inc
mov
fidivs
divb
in
aam
jmp
fistpl
cmc
les
jno
jb
mov
mov
push
and
int3
mov
mov
mov
push
add
sbb
mov
mov
push
adc
lock
sbb
lock
inc
das
rolb
loop
fdivs
cld
pop
jno
adc
mov
add
xor
cmpsl
out
int3
jb
mov
mov
cwtl
fiaddl
aam
inc
stc
int3
ret
loop
or
or
lret
repnz
xor
int
ja
cld
insb
and
daa
mov
mov
out
popf
push
nop
lahf
outsl
pop
mov
mov
pusha
hlt
lds
cmpsl
or
jmp
sbb
mov
inc
inc
push
mov
fstl
test
jnp
or
mov
test
mov
dec
aam
mov
xor
ret
addr16
es
inc
enter
push
inc
jge
stos
adc
idivl
xor
cld
rcr
scas
cmp
or
loop
pop
int3
outsl
pop
mov
jb
mov
mov
inc
jno
arpl
shl
fldenv
mov
cltd
mov
lret
sbbb
or
jae
in
cmp
rcll
addr16
insl
out
pop
rorl
es
lahf
xor
aam
xchg
fsubr
cld
imul
dec
stos
inc
sti
jne
sbb
je
xchg
jmp
push
mov
aaa
rol
das
pop
mull
xchg
dec
lahf
mov
adc
std
and
cmc
imul
fwait
cwtl
cmp
js
rcll
mov
fcomi
xchg
jg
mov
movb
out
mov
push
pop
out
jb
xchg
adc
sarl
icebp
fldl2t
int
push
ror
pop
lahf
or
add
xchg
jbe
ret
insl
dec
mov
cwtl
mov
js
sub
icebp
adc
jo
js
lea
push
push
adc
lods
push
pop
jg
mov
mov
jb
mov
push
in
pop
dec
out
adc
je
rcrl
pop
mov
je
adc
cmpsb
jnp
or
xor
lret
lds
jecxz
jp
jl
stc
mov
jbe
call
jle
int3
add
add
cltd
bound
inc
je
std
cmp
dec
bound
inc
cmc
fldenv
pavgb
roll
das
mov
sbb
or
push
int
mov
icebp
iret
mov
rorl
and
pushf
aas
dec
add
imul
in
add
out
lods
mov
mov
and
xlat
mov
ret
inc
push
jne
mov
aam
mov
mov
fdivs
inc
mov
test
add
das
lcall
enter
lret
jp
repnz
jnp
or
subl
pop
lods
jl
stos
jge
mov
add
bnd
ret
xchg
inc
cmpps
pop
jbe
jp
shll
iret
inc
cli
xchg
pop
ret
sbb
jb
leave
jge
mov
push
andl
sub
pop
adc
in
ss
or
xor
imul
subl
xchg
sub
mov
and
mov
sub
fidivrs
sub
int3
fcmove
pop
clc
sub
adc
dec
inc
cltd
bsr
sub
cmp
into
outsl
stos
mov
stos
pusha
or
adc
out
je
pop
test
mov
lret
push
mov
sub
inc
jno,pn
pop
or
cli
dec
and
pop
imul
add
push
jp
dec
sbb
pop
jmp
lcall
stos
aam
adc
rcll
out
ljmp
cmp
or
or
out
daa
inc
inc
xchg
mov
jnp
cmc
cwtl
adc
dec
sahf
popa
sbb
imul
test
leave
mov
inc
mov
bound
imul
call
ret
lahf
insl
daa
les
and
out
cmp
leave
vorps
ret
js
add
dec
stos
movsb
sub
imul
lea
in
stc
jmp
inc
mov
sbb
pop
call
int3
jmp
cmp
xchg
loop
mov
fsubrp
cmp
dec
insb
sub
test
and
ja
leave
xor
sbb
jo
jp
jne
ja
cmp
sub
repz
jmp
mov
pusha
in
inc
aam
mov
and
jg
xchg
xchg
and
clc
leave
adc
lret
jg
push
aam
cmp
js
inc
movsl
scas
adc
out
repnz
std
push
xchg
nop
mov
stos
add
mov
mov
mov
add
cmc
rcr
loop
cltd
push
sub
ds
cltd
neg
push
xchg
cltd
cs
sbb
gs
push
ucomiss
jg
psraw
mov
adc
js
pop
xchg
orl
lret
enter
int3
mov
dec
rorb
jp
out
add
xor
icebp
and
test
fadd
cmp
pop
lahf
cld
sub
mov
daa
jge
pop
or
sbb
leave
pop
pop
js
test
sbb
rcr
cmpsb
insb
sub
mov
in
sbb
lods
push
jmp
into
jne
sub
push
or
xor
xchg
xor
xor
movsl
mov
out
cmpb
cmc
pop
pop
dec
sub
mov
inc
enter
pop
push
insl
sahf
rcrl
lret
sti
dec
push
adc
pause
push
shrb
cmp
ds
push
fcmovnu
fwait
mov
pop
inc
push
inc
test
lock
int
fstps
ret
xorb
cmpsl
lcall
inc
xlat
movsb
es
and
test
insb
clc
rcrl
jecxz
lret
xor
add
adc
mov
paddd
js
mov
je
aam
pop
ljmp
xchg
nop
loopne
mov
inc
imul
mov
and
std
insl
insl
insb
repnz
in
int
sbb
pushf
outsl
cmp
add
movsb
cmc
xor
sub
fbstp
movb
pop
add
iret
pop
adc
push
inc
imul
mov
dec
dec
add
mov
daa
rclb
je
pop
popa
mov
xor
push
jno
inc
test
pusha
mov
lcall
dec
xchg
fimuls
fwait
je
push
push
es
cmp
mov
mov
or
popa
imulb
inc
fcompl
in
insl
insb
in
loopne
call
test
mov
mov
mov
dec
inc
loop
js
ljmp
inc
cmpsl
movsb
stos
mov
sub
iret
cwtl
adc
hlt
aam
push
xor
cmpsb
or
enter
sub
mov
pop
mov
nopl
add
outsl
stos
loopne
cmpl
movsb
hlt
out
in
mov
mov
xchg
movsb
pop
xchg
insl
push
in
pop
pop
jmp
fmull
in
jg
bound
cwtl
outsl
xor
lea
jmp
daa
cmp
jns
sbb
xchg
sub
mov
ds
mov
mov
out
or
cmp
cmpsb
xchg
lock
sbb
fs
loope
cmpsb
jmp
loope
adc
test
xor
js
mov
call
cmpsl
mov
jb
je
sahf
sub
mov
ds
movsb
inc
es
inc
mov
outsb
mov
loope
ret
lock
in
data16
jnp
adc
xor
loopne
mov
jns
lods
dec
and
sub
ss
xchg
cmp
inc
jb
fcoml
pop
sbb
jno
pusha
adc
add
push
das
sub
dec
inc
mov
pop
enter
shll
add
lret
push
repnz
fs
add
pop
xor
nop
sahf
movsl
and
pushf
fdivr
iret
mov
jno
gs
out
mov
cmpsl
jb
cmpsb
insl
out
jno
mov
mov
add
add
sbb
sti
push
je
out
xor
xor
or
jge
sbb
cmc
sub
stc
in
sub
rolb
pop
fdivp
jle
cld
dec
mov
xchg
and
out
jns
pop
xor
stos
jne
int3
adcl
in
ret
jo
and
cmpb
in
cmp
push
xchg
mov
imul
mov
push
sbb
pop
xchg
sub
jecxz
outsl
mov
ljmp
imul
jo
data16
sbb
push
xchg
add
cmp
mov
cmp
orb
punpckhwd
aam
inc
mov
popf
leave
xchg
adc
push
negb
adc
mov
icebp
xor
cmpsl
inc
enter
movsl
mov
stos
movsl
icebp
int3
sub
int
aam
in
mov
inc
lret
popa
insb
cmp
push
add
out
add
lds
inc
inc
cwtl
push
sti
xor
push
sub
dec
xchg
rcrl
push
psubq
inc
lcall
sbb
imul
jp
xlat
jnp
js
cmp
enter
clc
clc
insl
stc
ds
inc
ljmp
aam
outsb
orl
push
xchg
sbbb
cli
scas
mov
add
insl
outsb
shr
jge
rorl
fcmovbe
fsubs
xchg
lcall
xchg
push
dec
xchg
mov
cmp
lods
and
adc
sub
fcoml
in
push
jl
in
mov
dec
dec
les
mov
sub
ficomps
mov
psllq
inc
fstpl
sarl
in
mov
fists
fsubrl
inc
mull
adcb
mov
adc
inc
sbb
push
pop
mov
sub
loope
arpl
fadd
cltd
shl
and
and
idivl
pop
into
xchg
push
xchg
cmp
pop
sbb
loop
ja
notl
jne
sbb
insb
aam
mov
fdiv
shrb
test
push
lock
sbbb
mov
int
rcl
js
lahf
fisubrl
cld
ret
cwtl
sub
fsubr
mov
fsubrs
push
jns
push
xor
pop
movsl
sti
dec
jle
loop
cmpsl
mov
in
jl
fnstsw
mov
mov
or
mov
stos
shl
nop
add
test
add
inc
or
or
inc
das
sub
adc
xchg
lods
repnz
jp
ds
cli
lret
lret
pminsw
nop
jb
pushf
pop
xchg
push
stc
gs
outsb
push
xorl
daa
aam
btc
xor
pop
and
pushf
sahf
inc
into
mov
xchg
and
insb
adc
adc
daa
fwait
pop
pop
mov
je
ret
xor
push
iret
dec
out
add
xchg
js
add
sbbl
fidivl
mov
and
xor
mov
pop
repnz
pop
mov
movsb
and
sub
add
mov
push
pop
fdivrs
dec
in
call
inc
inc
cwtl
shlb
test
test
pop
xor
jae
movsl
and
sub
shll
mov
dec
stos
and
push
cmp
iret
jecxz
dec
lods
or
cmp
pop
shrl
pop
mov
mov
inc
push
roll
sti
jp
into
icebp
out
arpl
shll
in
xchg
sub
je
inc
push
mov
aas
cmp
mov
loope
and
adc
js
sub
stos
cmpsb
daa
mov
pushf
inc
adc
sub
cmc
stc
dec
mov
push
hlt
sbb
jle
addb
addr16
dec
mov
jp
cld
imul
mov
cld
mov
adc
dec
lock
and
test
out
insb
adc
negb
movb
pusha
popa
push
inc
aad
or
push
xchg
xor
or
dec
lcall
or
std
or
out
xchg
scas
clc
int
jle
cs
aas
inc
lret
int
ss
mov
movsb
int
cmpsb
sub
pop
xor
jo
into
fs
adc
mov
ja
xor
out
lahf
jg
addb
jne
imul
adc
cmpsb
frstor
adc
push
jbe
lock
sarl
call
popf
mov
mull
push
clc
and
cmpb
push
ret
fsts
mov
jmp
lahf
out
ds
test
xor
scas
cmpsl
loopne
xchg
jl
or
lods
xchg
stos
sub
cmpsb
pop
outsb
jbe
mov
dec
rorl
inc
stos
stos
inc
out
and
inc
insb
cmp
jnp
dec
jae
xor
mov
xchg
sub
push
gs
jb
or
push
mov
mov
imul
out
mov
das
stos
xor
cmc
leave
push
insl
out
xlat
dec
sub
call
mov
call
xor
mov
xchg
aaa
fcomi
pushf
jecxz
call
xchg
shrl
jmp
mov
add
cmp
mov
mov
in
sub
fwait
gs
mov
inc
frstor
scas
inc
and
lret
jno
jecxz
xchg
mov
nop
sbb
sbb
pop
mov
fsubrs
shll
dec
popa
pop
pop
sti
cwtl
ss
mov
fs
in
lods
push
dec
push
into
inc
fisubs
push
dec
outsl
mov
xchg
pop
pop
cmc
adc
in
in
xor
mov
adc
movsl
into
notl
ret
imul
sub
pop
jge
jecxz
push
mov
in
sub
ret
pop
or
and
icebp
sub
sbb
jmp
sarl
insl
mov
sbb
inc
sti
push
and
js
into
pop
jno
addr16
pop
mov
or
aas
inc
sti
inc
std
scas
xchg
in
or
add
push
and
cmp
mov
mov
mov
rcrl
movsb
movsb
stos
aas
adc
jae
insl
sbb
lods
pop
rcrb
add
dec
lahf
andl
in
popl
lds
mov
out
shrb
adc
mov
push
rclb
in
push
jmp
or
dec
int
pop
add
int
imul
ret
pop
les
mov
out
ja
hlt
sbb
mov
cmp
cwtl
mov
cli
scas
xor
fldl
adc
scas
mov
test
cmc
pop
lock
and
pop
inc
push
push
lods
iret
jb
sbb
out
addr16
add
xor
les
pusha
mulb
aaa
sub
loop
xchg
sub
das
cld
mov
addr16
push
leave
push
loop
fsubs
notl
sarl
jo
sbb
jbe
pushf
hlt
and
push
cmp
or
sub
loopne
adc
mov
into
enter
es
pop
jnp
sub
xorb
xor
push
jmp
adc
sbb
xor
xlat
aad
xor
fstpl
mov
xchg
mov
sahf
jns
cmpsb
dec
loope
std
pop
xor
dec
jecxz
sbb
insl
adc
pop
movsb
xor
scas
rorb
and
stc
in
test
dec
fsts
xor
lock
xor
into
push
cmp
adc
xlat
daa
dec
add
mov
jb
cltd
jl
mov
scas
aad
xchg
push
rclb
out
push
xchg
sbb
lock
mov
sub
push
insl
icebp
sbb
inc
hlt
rolb
xchg
mov
inc
mov
in
addr16
add
in
fs
notl
sbb
jns
leave
bound
push
fmuls
test
push
out
adc
scas
mov
aam
sbbb
adc
add
lret
sub
or
les
add
mov
and
adc
ret
mov
and
sub
cld
dec
sbb
jle
xor
xchg
jnp
sub
jbe,pn
sub
fildll
insb
and
cli
das
movsl
stc
dec
cwtl
in
mov
lret
pop
jge
xchg
decl
insl
test
faddl
inc
scas
add
in
mov
cmpl
gs
adc
dec
out
fildl
loopne
inc
clc
xchg
pop
inc
pop
call
movsb
xor
repnz
add
lock
and
push
xor
push
xor
pop
cmp
pop
cmc
inc
or
testl
dec
pop
xchg
bound
xor
adc
xlat
or
or
popa
jnp
cld
inc
sbb
or
ds
ds
or
shrl
sbb
das
sub
pop
pop
cmp
sub
das
idivb
popa
jl
fisubl
xchg
or
sub
add
fcomps
xor
mov
ret
mov
pop
lods
xor
popa
pop
int
pop
fisubrl
sbb
push
jbe
pop
mov
icebp
mov
subl
bound
hlt
shlb
jmp
mov
sub
inc
push
xor
push
mov
push
mov
push
rcrb
cld
xor
enter
sub
sbb
pop
xchg
stc
mov
jmp
dec
cmp
inc
fnsave
adc
or
scas
data16
jge
sub
int
int3
nop
scas
icebp
xchg
mov
jb
roll
adc
mov
or
xor
mov
leave
and
ret
mov
jle
mov
xor
cmc
cmp
jno
stos
dec
push
cmp
adc
ret
test
jp
faddp
mov
lcall
imul
insl
rorl
sub
sub
mov
pop
sub
dec
or
or
jge
push
fs
mov
stos
cwtl
mov
add
scas
lods
mov
cmp
adc
sti
mov
shl
ds
mov
scas
cltd
jns
pusha
or
int3
inc
push
lods
sbb
repz
add
mov
fadds
jbe
mov
or
cmpsb
mov
sbb
push
popf
testl
push
xchg
sub
dec
xorl
push
lods
loop
stos
pop
int3
cmp
rcr
push
inc
shrl
mov
jno
mov
pop
mov
jl
xor
sub
inc
mov
movsl
rep
mov
or
out
je
es
fnstenv
adc
xchg
push
jo
test
mov
fstl
imull
xchg
fnstcw
les
push
or
rorb
mov
xor
pop
dec
dec
lahf
lret
adc
jae
les
mov
xor
cmp
or
cmp
push
cmp
xlat
pop
loop
mov
cltd
push
pop
clc
mov
testb
jno
outsl
arpl
lret
push
stc
fs
jnp
stos
push
mov
xchg
xor
pop
push
mov
aas
dec
in
cs
arpl
jl
outsb
jl
mov
ret
and
leave
dec
sub
cmp
inc
fnstsw
mov
pop
mov
jbe
imul
mov
mov
push
cmpsl
imul
imul
test
lret
xchg
lahf
shlb
insb
cmp
cli
sub
jmp
test
mov
int
xchg
mov
mov
adc
lret
jg
inc
mov
stos
out
mov
leave
scas
jl
stc
movsl
cli
cld
fldcw
cld
add
fiadds
jecxz
sbb
lods
xor
cmpsb
lahf
adc
pushf
icebp
shrl
xchg
pop
mov
aas
cwtl
lods
or
mov
rcr
pop
and
jo
out
jae
mov
jno
jne
fdivl
mov
add
xor
fnstenv
shl
gs
sbb
test
push
mov
cmp
sar
aam
out
rol
mov
sub
pop
sbb
sbb
cmp
cld
xchg
std
jp
mov
add
and
add
mov
aaa
ret
or
mov
idivb
ret
mov
mov
test
mov
or
fst
rcrb
push
std
lcall
mov
sbb
mov
adc
mov
or
rcr
jg
add
pop
cmp
mov
jmp
dec
enter
xchg
pop
les
xor
sbb
add
mov
decl
pop
data16
lock
or
inc
add
pop
mov
js
add
or
fadd
push
cmpb
mov
mov
pop
inc
and
mov
fwait
js
call
enter
cmp
addr16
mov
stos
imul
das
mov
pop
push
sub
dec
out
int
cmp
pop
clc
or
fldt
cmp
add
and
idivb
repnz
std
cmp
add
and
mov
mov
mov
adc
int3
mov
inc
dec
daa
wbinvd
mov
pop
push
mov
cltd
mov
insl
adc
mov
sbb
push
mov
rcr
or
arpl
jle
pop
inc
hlt
and
mov
repnz
shlb
hlt
divb
inc
loop
int
and
jo
stos
xor
fstpt
xchg
arpl
jmp
add
insb
mov
jo
adc
sbb
xchg
js
sarl
out
lahf
or
ds
inc
or
inc
shl
out
sahf
stos
xchg
xchg
push
inc
and
inc
push
and
orl
dec
jl
inc
push
movsb
sub
cmp
sub
push
dec
push
xor
je
mov
push
sub
cld
jmp
pop
or
hlt
xchg
arpl
cmp
jmp
movsb
jno
stos
or
mov
cwtl
jbe
repz
inc
daa
pusha
repz
das
push
sbb
mov
cmpl
aaa
and
ficoms
jno
or
in
mov
mov
subl
pop
mov
jle
jno
fistpll
pop
jnp
inc
jne
or
rorl
dec
add
xor
pop
clc
mov
lds
jl
outsl
repz
stos
int
mov
inc
xor
push
call
sub
insb
and
xor
inc
or
data16
add
inc
lcall
xchg
add
inc
lods
and
dec
sub
push
lods
cmp
imul
add
pop
pop
leave
insb
jne
in
faddp
pop
sub
mov
ljmp
adcl
icebp
xchg
mov
data16
stc
pop
xor
andb
push
stos
movsl
add
cli
cmpsl
test
mov
cmp
pop
inc
cmp
pop
push
dec
mov
adc
fwait
stos
fiadds
push
or
jge
push
fnstsw
sbb
dec
lea
test
adc
push
cmp
jo
aam
add
rorb
push
jae
call
or
mov
push
insb
pop
mov
push
mov
jo
sub
push
cmpsb
sub
pop
adc
sbbl
adc
and
xor
push
iret
fstl
call
jp
aaa
mov
pop
jge
cmp
adc
popf
leave
mov
call
push
pop
testb
xor
xchg
pop
out
pop
sahf
inc
inc
int3
xchg
or
push
sbb
adc
ljmp
es
mov
mov
lret
pop
js
mov
xchg
shll
out
fcoml
cmpsl
ror
xor
rclb
rcl
roll
out
cmovbe
divl
ljmp
mov
shll
jb
ljmp
insl
pop
cmp
adc
dec
dec
repz
mov
mov
jle
jns
pop
add
cmc
mov
mov
clc
adc
cmp
sbb
jg
repz
inc
xchg
std
jge
and
add
xor
adc
add
adc
rcrl
mov
add
jns
dec
mov
loope
cmpsl
ds
cmp
lds
out
add
dec
and
iret
cli
lret
or
sahf
leave
insb
stos
out
xchg
sti
and
cmpsl
fistpl
cmpsb
and
test
es
and
cmp
jp
cmc
sbb
jge
xchg
sbb
mov
pop
pop
dec
stc
lea
fmull
jp
data16
and
filds
mov
fsubs
jo
adc
lea
sbb
inc
mov
push
cmp
outsb
out
das
mov
mov
jno
out
pop
pop
int3
daa
mov
mov
add
imul
es
xor
rclb
pop
adc
and
lods
push
arpl
cmpsl
mov
pop
sbb
mov
test
inc
jmp
pop
push
push
inc
and
mov
data16
notl
jbe
sub
fstpl
pop
or
lret
enter
jp
and
aas
cwtl
sub
pop
mov
cmp
jp
mov
jmp
xor
xchg
nop
hlt
pop
inc
addr16
bound
popf
dec
pop
and
xor
mov
or
push
cmp
mov
insl
adc
loop
pusha
sub
shl
das
scas
lahf
fadd
xor
mov
jbe
sub
cwtl
xor
repnz
pop
test
or
xor
ds
mov
and
ret
fs
mov
dec
mov
xchg
push
lods
lods
into
inc
sbb
fmulp
outsl
add
lock
rcr
sbb
subl
stos
fisubs
ret
stos
adc
cmp
mov
adc
bound
mov
ret
mov
repz
lahf
imul
dec
movsb
dec
insb
cmp
cmpsl
mov
insl
and
mov
xchg
mov
out
mov
jmp
leave
sbb
inc
jp
cld
call
pop
or
cld
inc
dec
pop
push
sbb
aas
fisttps
popa
push
lret
hlt
loope
jecxz
dec
leave
xchg
push
int
xchg
inc
bound
mov
ds
add
jo
shr
mov
cmpsb
add
cmp
push
pop
and
xchg
xchg
adc
xchg
jnp
jbe
sbb
inc
divl
mov
pop
jo
in
bound
adc
jne
rcrl
xor
pop
in
or
inc
lea
pop
mov
stos
shl
jnp
ret
test
cmpb
adc
aas
jecxz
fsubs
push
xchg
dec
lahf
lret
or
inc
insb
push
push
mov
flds
stos
mov
jnp
lret
adc
or
pop
enter
cwtl
jo
sbb
out
fnstenv
out
je
aad
out
dec
fisubrl
rep
pop
mov
cltd
xor
add
imul
xor
push
xchg
in
push
push
rcr
test
jecxz
aaa
jnp
les
fisttpl
sub
clc
jp
jb
push
inc
push
mov
add
loopne
insl
push
jp
add
jge
add
mov
cmp
add
sti
test
roll
cwtl
lods
push
lods
push
xchg
jb
mov
jb
pop
stos
stos
push
mov
aaa
aam
dec
loop
sbb
xchg
ljmp
insb
xchg
sbb
popa
push
mov
xchg
xor
bound
fcomps
cmpsl
mov
pop
xor
adc
mulb
sbb
mov
outsb
xor
mov
push
loopne
add
mov
cmp
sub
pop
sub
push
popf
ja
sti
scas
fmulp
mov
loopne
sbb
in
sbb
adc
sbb
insl
pusha
mov
addl
ja
rcr
flds
imul
jnp
pop
es
scas
clc
xchg
mov
add
mov
daa
push
fwait
mov
mov
sub
je
xchg
mov
adc
je
and
mov
or
stos
iret
ss
outsl
sbb
mov
shrb
loopne
fisubrl
xchg
inc
push
in
sar
mov
in
sbb
orl
daa
enter
dec
nop
pop
loop
mov
ss
pop
mov
jmp
not
xchg
sub
clc
or
test
cmp
sub
xor
or
xor
sti
out
das
fwait
mov
sub
inc
cld
sbb
add
in
xchg
add
add
cwtl
test
jo
add
scas
cmpsl
mov
push
and
add
mov
and
fwait
cmp
call
std
inc
or
mov
sub
jecxz
shll
jne
pop
jne
mov
inc
sbb
inc
repz
cmpsl
out
cmp
mov
jmp
std
call
mov
jbe
jbe
loop
out
mov
inc
dec
pop
cmp
and
popf
dec
clc
lahf
mov
mov
sub
into
xchg
or
cs
addl
popa
pop
mov
mov
pop
cmp
dec
jmp
add
notb
push
dec
icebp
sbb
mov
loope
sub
adc
loope
xor
movsb
faddl
xchg
pop
dec
lret
xor
into
push
pop
mov
daa
adc
pop
jno
sbb
popa
out
mov
add
pop
test
mov
out
or
stos
pushf
pop
imul
cmp
cmpsb
xor
in
cmpsb
pop
lcall
daa
js
popf
fidivl
decb
dec
push
dec
fadds
cmpsl
bound
xlat
sub
and
jb
and
push
pop
xor
inc
dec
out
and
jmp
jle
jge
js
mov
jnp
jnp
push
sarb
mov
push
push
sbb
add
xchg
inc
jmp
aad
lcall
outsb
or
icebp
incb
jmp
jnp
clc
ret
xchg
xlat
hlt
sbb
sub
or
cltd
push
push
leave
cs
push
popa
sub
stc
das
shl
jmp
push
mov
frndint
lods
or
out
inc
lods
aas
movsb
dec
lret
in
clc
aam
popf
sysenter
in
pop
pop
repz
lea
ret
xlat
jecxz
in
mov
data16
jne
jae
movsl
dec
mov
fildl
leave
mov
add
xchg
xchg
jb
cmp
cmp
shrl
inc
sub
fisubl
cmpsb
mul
lods
jle
out
test
cwtl
mov
sub
imul
mov
into
imul
test
lret
lahf
mov
add
test
bound
rorb
call
dec
cld
arpl
pop
aad
mov
sub
inc
mov
mov
push
fucomp
daa
or
xor
push
cld
aam
loop
jmp
inc
sub
aas
out
into
cwtl
xor
push
push
mov
or
xchg
cmc
insb
jns
mov
sub
cmp
adc
shl
vdivss
aaa
adc
leave
inc
cli
inc
lods
xlat
sbb
bound
xor
mov
sbb
and
jo
add
pop
les
inc
lods
cmp
das
leave
inc
adcl
mov
loopne
push
inc
sbb
fisubrs
aam
fiadds
mov
roll
lods
cmp
inc
mov
xorb
ja
sti
fmull
cmp
pushf
hlt
sbb
cwtl
shll
jno
lret
sub
mov
imul
mov
jecxz
fwait
mov
mov
mov
lret
dec
stos
lock
mov
pop
stos
es
adc
jb
loop
xchg
cmpsb
inc
adcl
fistpll
dec
mov
cli
inc
xchg
cmpsl
pop
pop
ret
test
xor
sbb
jg
lret
outsb
test
in
mov
imul
popf
dec
add
sub
mov
dec
cmp
data16
jge
dec
cld
add
pop
sbb
sbb
add
popa
int3
adcl
loop
out
pop
lret
or
push
or
repz
sbb
add
insl
push
jno
cld
das
jle
sub
scas
dec
int
mov
dec
add
ds
xlat
adc
aad
loope
rcrl
iret
faddp
xor
mov
loop
push
outsb
xor
jno
test
call
repnz
mov
inc
push
jnp
mov
sbb
bound
sub
fmuls
leave
xor
cmp
mov
mov
out
sbb
push
nop
adc
repnz
cmp
or
mov
mov
mov
dec
xchg
push
or
imul
sbb
or
lea
das
aaa
push
xchg
cli
xor
rcll
dec
xchg
mov
add
shlb
lcall
mov
popa
repz
adcb
ds
jns
in
pop
adc
andl
in
addl
stos
shrl
in
mov
adc
fldt
clc
pop
mov
jge
xor
mov
or
dec
jbe
daa
outsl
cmpsl
dec
data16
stos
outsb
inc
inc
sub
movsb
cmp
pop
fs
pusha
or
je
inc
jnp
adc
addr16
add
mov
xor
xchg
xor
imul
xchg
inc
mov
push
mov
pushl
repnz
out
aad
xor
mov
ret
out
lret
jp
dec
cmp
xor
shll
mov
pop
lret
bound
push
cmp
xchg
push
jbe
mov
adc
or
sub
cmp
ljmp
aam
xor
lret
adc
push
or
mov
add
lea
pusha
dec
lods
lcall
or
fldt
in
lods
sub
pop
out
mov
xchg
push
push
dec
pop
rolb
call
in
xchg
push
mov
inc
and
lods
dec
dec
fdivs
push
jnp
mov
stos
dec
fistps
inc
inc
shl
add
adc
push
jb
bnd
dec
in
adc
sub
mov
mov
nop
push
lret
stos
filds
and
xchg
mov
imul
xor
inc
data16
mov
xor
das
push
cltd
test
icebp
fists
and
data16
shr
inc
sub
adc
sbb
jl
stc
push
mov
dec
jecxz
xorl
xor
jecxz
in
out
xor
insl
xor
jbe
jl
mov
gs
rcrl
mov
jg
aaa
sbb
stos
aad
dec
pop
or
mov
iret
mov
cmp
sti
mov
xor
mov
sbb
data16
dec
test
sub
sub
mov
mov
mov
mov
aad
icebp
jne
out
xrelease
test
pop
imul
or
sete
adc
cmp
lds
rclb
into
or
xchg
out
arpl
and
or
pop
scas
mov
fnstcw
sub
mov
dec
cmp
je
iret
popf
and
jp
dec
cwtl
xlat
add
mov
cli
or
xchg
test
fiadds
cltd
popf
in
or
cmc
xlat
jne
xor
push
mov
shlb
fmuls
xchg
mov
mov
pusha
mov
mov
inc
gs
cmp
test
cmpsb
or
aam
repz
js
aas
jae
cmp
xchg
ja
nop
out
lea
les
pop
jo
pop
std
jge
push
jecxz
clc
add
movsl
fs
sbb
sbb
ficompl
call
int
into
and
cld
xchg
pop
and
cmpsl
sub
jne
mov
mov
cmp
ss
mov
jne
cld
mov
test
pusha
dec
jmp
stos
push
inc
mov
pop
mov
xor
ljmp
daa
lahf
dec
out
sbb
dec
js
and
iret
flds
cltd
mov
sbb
test
push
xchg
mov
xchg
fucomi
mov
cmp
loop
sbb
pop
or
test
inc
dec
pop
subl
mov
pop
fsubrl
lcall
out
cmp
mov
fistl
stos
bound
sar
adc
fcoms
push
inc
ret
adc
jge
add
lods
dec
pop
or
test
add
aam
lds
test
mov
and
das
xorb
cmp
out
push
scas
cmp
sbb
pop
jae
int3
adc
enter
out
or
aas
mov
faddl
pop
jne
iret
sub
out
in
fwait
js
jne
jg
mov
lcall
pop
sarl
xlat
iret
in
fst
mov
cmp
sysexit
addb
iret
gs
dec
xchg
adc
sub
xor
outsb
inc
xchg
testb
aas
push
xor
imul
xchg
push
push
xchg
cmc
vmwrite
out
fcoml
data16
sub
or
xchg
in
cld
in
rcl
push
dec
mov
daa
xchg
pop
js
stc
pop
sbb
sub
les
outsb
xor
jno,pt
mov
idiv
inc
jns
call
cmc
imul
loopne
mov
stos
xchg
and
int3
xor
insb
fcomp
adc
test
adc
loop
dec
imul
je
inc
hlt
sub
shll
stos
adc
cmpsb
lahf
bound
cmpsl
pop
imul
inc
mov
test
or
xor
in
sub
cmp
push
lret
ret
outsl
sbb
pop
jae
adc
add
sbb
insb
mov
pusha
inc
push
push
in
xchg
movsl
addr16
pusha
jbe
xor
out
push
pop
jne
inc
in
cmp
add
adc
mov
mov
dec
xchg
ror
mov
inc
mov
adc
cmp
jne
movsb
mov
stos
mov
inc
imul
in
push
cmp
sbb
pop
sub
xchg
push
push
dec
inc
je
push
int3
andl
add
cmpsb
xchg
cmp
cltd
daa
inc
sbb
iret
pop
jmp
xor
push
mov
pop
fsubl
test
mov
xor
les
xchg
sbb
mov
lahf
mov
dec
jle
or
or
stos
xchg
push
pusha
imul
negl
cmp
gs
mov
pop
push
lcall
or
popf
push
out
xchg
in
jbe
jne
stos
and
movlps
mov
popf
add
inc
mov
bound
xchg
mov
dec
add
popf
and
mov
subl
adc
lods
data16
cli
or
fs
aaa
mov
mov
push
test
cmpsb
fwait
ljmp
mov
cmp
jl
push
int
add
mov
push
dec
sqrtps
jne
and
fstps
xor
jb
imul
arpl
ja
xchg
pop
or
fwait
or
dec
in
in
test
out
cmp
sub
inc
loop
pop
inc
and
mov
movl
pushf
xchg
cwtl
jle
push
adc
mov
xor
xlat
inc
fcmovnu
inc
mov
pop
sbb
cs
mov
dec
cmp
inc
pop
add
add
dec
je
sbb
jmp
aas
pop
dec
mov
jp
test
std
jns
repnz
push
jg
fldenv
and
jo
fwait
push
popf
jb
into
fdivrs
ljmp
sub
dec
insb
or
scas
aam
lds
and
mov
stos
idivb
ljmp
xorb
and
iret
adc
ds
imul
ffreep
movsl
fisubrl
xor
fistps
adc
js
insl
fbstp
add
inc
insb
scas
inc
add
or
sbb
frstor
je
fwait
adc
cld
sbb
ss
lea
cwtl
ss
insl
push
dec
mov
xchg
insb
cwtl
cld
loope
dec
div
xchg
mov
clc
mov
hlt
or
sbb
dec
push
dec
mov
dec
jno
mov
je
xchg
icebp
sub
mov
and
into
outsb
xor
jne
xchg
fbld
sbb
lods
movsb
push
in
popf
add
sub
sbb
pop
fidivs
cmp
mov
mov
roll
insb
push
stos
imul
ja
mov
pop
adc
jae
mov
movsl
dec
enter
mov
adc
jbe
or
jmp
out
popa
and
out
pop
scas
icebp
aaa
data16
or
cld
mov
mov
xchg
and
lock
scas
cmp
fsts
daa
ljmp
js
in
cld
pop
dec
jecxz
stos
out
inc
repnz
inc
mov
jg
mov
es
cld
adc
xor
pop
movsb
mov
lahf
jo
fbstp
xor
xor
repz
jns
popf
jp
jl
fsub
fcompl
jmp
insb
sub
sbb
sti
daa
mov
inc
xchg
mov
push
jns
sbb
push
push
mov
mov
xchg
cmp
addr16
insb
sbb
loop
mov
push
icebp
cmp
aad
out
inc
rcl
or
jnp
fcmovne
sub
fildl
push
test
or
xchg
cmpsl
and
std
sbb
sbb
add
mov
fwait
and
imul
test
push
iret
or
pop
cld
inc
aad
btc
xchg
orb
shlb
adc
sbb
aaa
std
imul
xchg
fisubrs
xchg
mov
or
aam
sub
mov
push
and
cld
les
mov
jmp
adc
push
aaa
ds
push
dec
mulps
ret
or
sub
ljmp
inc
in
add
push
cld
test
push
add
xlat
xor
xor
or
cmp
jmp
cmp
mov
ljmp
call
xchg
sub
push
fidivl
fiadds
mov
clc
xchg
test
inc
jnp
test
loop
call
fdivrs
adc
lds
push
xchg
mov
ds
xchg
push
into
nop
cmp
jne
mov
cmpsl
xchg
mov
cmp
jp
inc
inc
mov
and
lret
int3
sar
push
inc
imul
lods
push
inc
and
push
jne
cmp
outsl
mov
mov
clc
aam
push
cltd
mov
sbb
push
push
xchg
pusha
jne
hlt
adc
mov
sarl
sub
mov
lods
call
mov
pop
lret
dec
shlb
xchg
adc
mov
into
add
add
dec
pop
arpl
sahf
pop
inc
sbb
stos
sarl
rcr
in
sbb
daa
adc
cltd
mov
js
pop
cmpl
dec
or
jno
add
lret
jp
xor
clc
loope
lods
ja
sub
js
fwait
loopne
mov
out
fisubs
imul
mov
and
pop
dec
dec
xor
mov
ret
fs
sub
push
mov
push
or
pop
icebp
cwtl
orps
push
fidivl
mov
stos
pop
outsl
lret
in
mov
clc
lods
inc
in
push
sbb
xchg
mov
scas
cmc
mov
mov
arpl
das
fadd
cs
jmp
in
cmc
andl
imul
stc
sub
pop
add
cmc
out
daa
mov
mull
cmp
mov
adc
cmpl
push
movsb
and
faddp
fnstcw
or
ljmp
jle
xlat
repz
mov
cmpsb
cmpsb
adc
lcall
int
clc
xchg
ds
jle
imul
cltd
push
lods
push
xor
pop
xchg
xchg
push
call
ljmp
fld
and
inc
mov
in
pop
iret
pop
sahf
sti
loope
lret
test
lods
sbb
lea
xor
jns
inc
dec
shl
test
in
mov
xchg
dec
pop
test
jbe
mov
outsb
xchg
and
cmpsb
mov
sub
mov
shlb
lahf
rorb
in
jg
pop
test
mov
xchg
out
ljmp
inc
sub
ljmp
lahf
or
mov
ljmp
pop
stos
push
dec
mov
push
lock
fs
hlt
int
adc
sarl
hlt
lods
add
cmp
mov
loope
xlat
mov
xchg
subl
stc
cmp
in
pop
cmpsb
fstpl
push
cmpsb
fwait
orl
pop
pop
test
sub
or
pop
jg
cmp
push
sbb
push
rcr
mov
cs
xlat
or
movsb
ljmp
or
fs
nop
add
pop
adc
mov
add
fdivrl
add
cmc
pop
push
enter
dec
xor
ret
dec
adc
push
cltd
outsl
jo
inc
insl
adc
xchg
cmp
fsub
rcr
mov
inc
sarb
bound
xor
sbb
cmp
ja,pt
mov
incl
sub
mov
js
push
or
or
xchg
jb
mov
sub
pop
shl
dec
hlt
rorb
sbb
adcl
out
outsl
xor
adc
xor
jg
sar
movsb
mov
mov
int
outsl
aaa
mov
out
cli
push
cs
jmp
das
fs
mov
jno
mulb
repz
adc
inc
add
es
stos
repz
xchg
cld
in
inc
mov
xchg
dec
andb
mov
rcrb
sti
inc
cmp
aas
enter
mov
dec
data16
adc
pop
cmp
jae
subb
cmp
dec
cwtl
sbb
mov
lds
mov
pop
loopne
stos
push
push
lcall
les
mov
jmp
pop
add
jl
jbe
add
aaa
pop
adc
dec
mov
mov
jmp
sub
cmp
sub
mov
fcoms
rcrb
pop
cmovge
jb
xchg
or
data16
out
dec
fidivl
daa
jmp
andb
or
lcall
push
mov
dec
sbb
and
xchg
inc
fisttpl
lods
sbb
fldt
leave
call
jb
and
notb
dec
ja
ja
jmp
jg
or
push
lahf
insl
sub
mov
pop
lods
iret
jmp
ss
sub
push
test
pushf
lea
xchg
scas
push
imull
jne
lods
mov
mov
jnp
or
rorl
and
sub
stos
add
jns
xor
sbb
popa
out
or
daa
mov
rcrl
idivb
mov
rclb
hlt
clc
mov
adc
mov
in
mov
jns
push
push
cmc
fwait
mov
insb
loope
mov
jnp
pop
in
xor
loopne
inc
jmp
mov
add
dec
sub
repnz
adc
gs
pop
in
inc
sub
add
outsb
arpl
cwtl
add
movsl
jno
cwtl
or
xor
out
xor
rorb
add
fadds
repnz
and
mov
adc
dec
and
xchg
inc
nop
aas
jp
jb
test
push
xchg
mov
xchg
decb
push
xchg
push
daa
repz
jecxz
in
push
decb
loop
sahf
test
or
leave
push
dec
and
stos
push
and
sub
out
movsl
adc
add
sahf
mov
inc
aad
es
cltd
rorl
pop
mov
mov
test
test
stos
push
nop
jecxz
inc
and
dec
mov
out
sub
mov
dec
pop
cmp
lods
inc
cmp
mov
scas
mov
test
fs
sti
bound
pop
std
xchg
sahf
adc
inc
mov
in
fwait
push
jp
in
sub
in
jae
or
fisubs
push
cli
mov
dec
fs
adc
mov
enter
shl
add
pop
movsl
aas
cmpsb
cmp
mov
xchg
jnp
testl
or
dec
mov
mov
sarl
mov
pop
lock
in
imul
inc
ss
mov
mov
icebp
fdivrl
pop
cmp
lods
outsb
add
out
aaa
ss
pop
aas
sbb
lods
cwtl
sahf
add
mov
cmp
fstpt
pop
mov
adc
mov
mov
popl
adc
aas
xchg
ret
jmp
add
loope
incb
ja
or
cmpsl
imul
dec
pop
fdiv
mov
inc
adc
push
scas
adc
xor
inc
lret
test
push
test
arpl
mov
jne
cld
call
and
insl
add
jbe
jb
add
add
mov
jecxz
and
add
add
roll
negl
or
mov
shrl
sub
or
sbb
cmp
mov
in
daa
std
lret
xchg
int3
sub
xchg
in
repz
pop
pop
shrb
icebp
xor
outsl
ror
mov
shrl
xchg
cs
cmp
mov
push
gs
mov
sbb
daa
pusha
push
int3
mov
add
mov
repnz
sub
mov
fwait
cmc
push
mov
repz
jge
repz
cmpsl
mov
mov
arpl
out
cmpsl
jp
xor
lods
gs
sub
mov
sahf
jecxz
shrb
andl
pop
jmp
shlb
cmpsb
jb
mov
push
in
inc
push
jnp
push
jae
cmp
jmp
pusha
pop
stos
aaa
xchg
jp
sbb
or
jmp
dec
leave
aas
sti
jns
ja
cltd
cmp
mov
cli
pop
or
mov
push
add
cmc
add
sbb
pop
insl
xor
aad
mov
mov
lods
fisubrl
js
cli
arpl
cmpsb
stos
out
cmpsl
out
mov
xchg
fwait
rcrb
mov
and
loop
enter
inc
jle
jae
sbb
jge
arpl
popf
push
inc
mov
mov
imull
mov
and
xchg
lret
xor
insb
mov
into
stos
cld
mov
push
xchg
mov
xchg
lods
aas
popf
lret
fwait
dec
into
aas
fstp
ror
mov
xchg
outsl
mov
fildl
add
pop
xchg
aas
jo
sub
pop
cmp
lret
push
scas
bound
mov
push
inc
mov
xchg
cmp
ds
inc
and
dec
mov
movsl
int3
dec
iret
jbe
xchg
mov
rcrl
in
movsb
push
mov
addr16
dec
rcll
divb
inc
hlt
idivb
mov
or
cmp
test
inc
lock
push
dec
cmp
scas
lods
outsl
push
loopne
das
jns
cwtl
std
mov
test
cwtl
das
push
test
lods
sub
xor
push
lahf
call
jp
mov
pop
mov
daa
sbb
gs
in
inc
jno
sbb
cld
loopne
sub
aas
imul
push
das
inc
cmp
das
sub
cltd
pop
mov
jno
sarl
pop
int
dec
xchg
adc
sbb
jp
aaa
or
and
mov
test
cmpsb
pop
in
xchg
aad
sti
pop
jl
movsb
xchg
cwtl
aam
mov
lods
shll
cmp
daa
sti
ret
mov
add
das
js
xlat
push
inc
sub
mov
cs
jbe
add
xor
test
call
pop
fists
out
jle
adc
ret
sbbb
push
or
das
add
sahf
jnp
xchg
lcall
rcrl
pusha
pop
push
movsb
ja
fs
dec
test
cmp
xor
shrb
out
fmull
ret
mov
pop
jge
aaa
outsb
mov
fs
xchg
cmp
and
pop
push
test
xor
call
mov
mov
mov
int3
inc
mov
lret
cltd
pop
pop
ss
pop
jp
fists
inc
push
mov
mov
add
popf
hlt
jnp
jmp
cwtl
cmpsb
popf
stos
std
enter
jbe
or
add
inc
sbb
sahf
cmpsl
daa
and
mov
stc
xchg
or
inc
sbb
mov
sbbb
out
push
call
ja
mov
rolb
faddl
ret
inc
lret
dec
sub
bound
addr16
cmp
pop
pushf
dec
cwtl
stos
fldl2t
xor
sub
out
mov
imul
xchg
cmp
jns
mov
sub
aaa
sbb
daa
aam
pop
and
cmp
adc
in
pop
fidivl
jne
imul
rorb
incb
push
test
and
addr16
imul
int
int
jle
or
dec
test
out
out
sbb
xchg
cmp
dec
popa
es
popa
mov
popa
popf
loop
js
imul
sbb
sbb
jmp
push
and
fsubr
flds
xor
ljmp
or
jmp
stc
dec
sti
cmp
mov
cmp
lret
mov
movsl
inc
je
jecxz
aaa
push
stos
popf
mov
or
into
insl
bound
mov
or
xor
xor
lods
imul
enter
repz
outsb
in
loope,pn
adc
in
shll
sub
sub
std
sbb
sbb
dec
sbb
and
cwtl
xchg
in
push
mov
fcoml
adc
mov
testl
imul
lea
shrl
out
cltd
sbb
sub
push
and
mov
xchg
popf
pop
jb
scas
cmpsb
ret
sbb
fstpt
fucom
and
ret
out
dec
test
ljmp
dec
xor
push
mov
repnz
fcoms
gs
mov
lret
hlt
mov
cmp
inc
sub
or
cwtl
ret
ret
xchg
outsb
lea
mov
cmpsb
inc
mov
mov
xchg
sbb
mov
jnp
int
pop
and
xorl
mov
or
dec
push
add
mov
jmp
sub
js
jle
push
adc
dec
push
jne
ja
add
inc
cltd
pop
jg
ret
orl
in
addr16
mov
fistpll
sub
or
adc
jno
and
lret
stos
add
cli
pushf
stos
es
rcl
mov
test
fucomip
addr16
aas
and
ret
pop
test
mov
mov
xlat
sub
decl
adc
enter
insl
ljmp
pop
shll
sbb
lea
and
ficompl
add
and
add
daa
inc
loope
inc
rorl
adc
push
cmp
jns
jae
xchg
push
mov
sti
shlb
adc
bound
shlb
cmp
rorb
fwait
sbb
cmc
and
aas
or
jl
push
lock
mov
sbb
xchg
mov
sbb
inc
cmovns
mov
lcall
jl
das
nop
jg
sti
mov
lods
les
mov
je
jp
stc
in
nop
jb
psraw
loope
test
loope
dec
adc
jmp
cmpsb
xor
inc
jmp
imul
mov
jo
or
psrad
jno
adc
ror
imul
push
inc
mov
push
jne
rorb
xor
lcall
or
add
sbb
je
mov
imul
sti
fdivl
jl
mov
test
dec
lret
pop
add
inc
push
fnsave
pop
inc
fcomip
cwtl
shlb
shrb
adc
sbb
and
jge
fistl
test
pop
jo
mov
mov
scas
jecxz
jnp
pop
fnsave
repnz
and
dec
ret
cmp
or
add
xor
push
dec
lods
scas
adc
mov
jle
and
dec
sub
call
ret
sub
push
or
lahf
push
sbb
into
pop
test
jae
cld
inc
mov
ja
xor
push
mov
sbb
dec
or
js
out
adc
cmpsb
out
jae
shll
mov
push
lock
pushf
or
pop
int
sbb
push
mov
adc
sti
popa
pop
push
cmpsb
testl
cltd
cmp
movsl
adc
push
insl
cmpsl
loopne
add
test
push
mov
pop
popf
mov
push
ret
push
cltd
in
inc
mov
mov
push
pop
cmp
cmp
pop
jge
add
fwait
out
loope
popf
out
imul
call
es
mov
int3
bound
hlt
test
xor
dec
outsl
xchg
pop
cwtl
inc
or
add
inc
mov
in
jnp
or
ljmp
adc
pop
popa
xor
xchg
push
mov
add
pop
nop
mov
sbb
add
into
scas
rorb
daa
shlb
cmp
nop
push
cmpb
fwait
ss
scas
stos
adc
xor
cmpsl
jno
xchg
jg
iret
or
mov
mov
in
nop
mov
pop
fcoms
mov
mov
xor
xor
cltd
xchg
jle
or
sbb
subb
test
mov
cmp
and
outsb
leave
sub
ds
xor
xchg
jns
mov
jno
out
in
and
ljmp
ffree
xor
sub
int
test
scas
divl
mov
jle
sub
push
lahf
into
mov
and
test
and
in
mov
pushf
je
jo
out
addr16
jmp
fs
adc
xchg
aas
inc
dec
dec
jmp
scas
stos
out
and
jg
mov
jb,pn
sbb
pop
inc
adc
sub
inc
cltd
or
and
mov
pop
nop
stc
test
je
jle
hlt
lock
cmc
fwait
add
push
xor
adc
into
js
jb
pushf
nop
adc
cltd
fscale
add
xorb
inc
inc
jg
movsb
add
nop
xchg
mov
int3
jmp
add
adc
clc
cs
or
xchg
jne
mov
pop
or
dec
jnp
movsl
mov
mov
or
push
je
sub
rclb
mov
popf
repnz
movsb
insl
mov
flds
shll
add
jno
dec
out
ss
jecxz
lcall
xlat
std
nop
cmp
cmp
lea
or
dec
out
mov
jecxz
sbb
hlt
in
mov
icebp
sub
in
push
mov
jnp
push
mov
roll
ljmp
jns
icebp
lret
jp
test
sahf
jge
sub
insb
mov
mov
out
add
out
ss
xchg
ret
pop
inc
idivb
in
jns
mov
inc
divb
xor
sub
loop
dec
fimuls
mov
add
push
inc
mov
xchg
xchg
into
sub
les
shll
add
stos
xor
jbe
xor
popa
xchg
fistl
mov
sub
jae
push
jb
xor
movsb
mov
xchg
ja
cmp
outsb
mul
inc
push
push
adc
add
rorl
mov
xor
pop
out
stos
xchg
push
xchg
mov
jg
xchg
shr
inc
hlt
cmpsb
adc
cmpsb
sub
xor
sbb
aad
cltd
outsb
pop
adc
and
xor
jne
mov
test
ljmp
fisubrs
mov
sub
setae
in
iret
cs
test
mov
inc
jo
add
jne
movsb
jbe
stc
pop
and
into
pop
out
outsl
imul
movsb
mov
pop
push
cmp
pop
sbb
xchg
dec
add
lds
mov
inc
pop
xor
add
or
cld
jp
out
bound
push
fisubrl
loopne
pushl
sbb
bndcl
push
cmpsb
mov
in
movsl
nop
adc
imul
pop
js
push
inc
je
cmp
inc
fsubs
dec
out
adc
push
mov
jmp
loope
pop
push
xchg
add
int3
jno
inc
xchg
sbb
jg
pop
sub
inc
loopne
lock
pop
dec
mov
adc
movsl
sbbb
xor
ret
xor
or
cmpsb
pop
out
dec
aas
arpl
fdivs
idivl
mov
xchg
fisttpl
push
add
hlt
adc
and
xchg
xchg
sti
xchg
mov
fcompl
mov
jb
or
nop
cli
cmp
shrl
testb
stos
dec
add
rcrl
xchg
ja
inc
add
fstpl
add
lods
pusha
cs
and
push
sbb
xchg
arpl
jnp
xor
idivl
mov
mov
mov
mov
dec
push
or
insl
xor
icebp
mov
push
sub
inc
cmp
cltd
inc
fucomip
ret
outsb
or
lcall
mov
icebp
xor
push
sub
nop
push
push
mov
mov
lea
in
mov
clc
or
les
faddp
inc
scas
cmp
movb
inc
cld
stc
mov
in
sbb
iret
cmpsl
frstor
pop
cmp
fisubrl
jle
push
sub
loope
cmp
push
pop
mov
in
fnsave
cmp
adc
lods
jmp
outsl
sbb
cli
lahf
inc
repz
mov
add
pusha
mov
push
pop
leave
sub
xchg
push
add
cli
iret
leave
push
push
push
int3
xor
pop
xor
inc
xor
fs
mov
cmp
loop
fildll
call
out
es
in
sbb
xchg
imulb
mov
jmp
enter
xchg
nop
lea
add
xor
sub
cltd
out
xor
or
xchg
jno
ror
inc
cwtl
add
mov
mov
stc
jo
xchg
cmp
ret
jne
jmp
pop
adc
mov
sbb
jmp
loopne
test
rcll
pop
arpl
and
inc
sti
sbb
out
sub
mov
out
pop
popa
inc
push
mov
dec
mov
or
cmp
jmp
iret
push
adc
cmp
out
mov
ret
mov
sti
push
pop
pop
pop
test
fs
ret
and
adc
scas
mov
insl
lods
aaa
mov
xchg
arpl
xchg
shll
push
and
sahf
mov
push
pushf
add
arpl
mov
xor
push
cmpsl
mov
jns
and
fwait
sbb
sahf
cli
inc
xor
lock
jns
sub
movsb
or
aad
arpl
jno
cmp
subl
add
mov
mov
push
stc
test
xchg
popf
sbb
sbb
pop
lea
cmpsl
and
sbb
aas
add
mov
or
xchg
xchg
cltd
cltd
out
mov
loope
jl
xor
push
insl
shrb
sbb
pop
adc
sbb
movsb
bswap
mov
sbbb
imul
pushf
xchg
rclb
push
push
and
mov
mov
outsb
sub
mov
movsb
imul
int
mov
mov
xchg
cwtl
movsb
mov
out
or
aam
inc
and
adc
pop
outsb
fs
nop
and
inc
je
int
fcoms
repnz
sub
in
sti
iret
ret
js
pushf
mov
push
adc
or
and
mov
jb
fcomps
fdivs
std
sbb
in
cs
jl
jge
push
fsubs
mov
xchg
jge
push
fisubrl
xchg
loop
xchg
push
xlat
sub
jg
lds
cmp
cmpsb
sarl
stos
mov
add
enter
push
jb
inc
add
pop
int3
pop
stos
sub
sahf
push
mov
out
flds
repz
push
jnp
mov
scas
mov
call
adc
ja
xor
aam
cmp
test
cli
jle
insl
and
lret
jmp
rcll
xlat
mov
lods
cmpsb
or
sub
cli
loope
inc
pop
adc
dec
mov
sub
mov
ds
outsl
sub
mov
mov
sahf
movsl
mulb
clc
fwait
adc
push
mov
sbb
mov
cltd
sbb
push
stc
inc
js
mov
adc
mov
mov
xor
and
call
fldcw
mov
add
test
cmc
cli
inc
lock
pop
sub
mov
adc
clc
stos
jbe
and
out
xchg
cmp
mov
push
inc
mov
loope
dec
into
sbb
adc
push
scas
stos
in
sbb
call
cld
pop
sub
outsb
push
add
cld
dec
inc
jns
pop
or
ja
dec
lock
or
cmpsb
cmp
fucomi
and
add
sbb
out
js
inc
jge
fisttpl
cltd
mov
into
xor
test
in
mov
ljmp
mov
scas
lret
orb
adc
cli
cwtl
hlt
das
cmpsl
jns
cmc
icebp
push
mov
loop
sti
ror
sbbb
mov
xchg
cmc
xchg
stos
lods
push
das
inc
adc
adcb
inc
inc
mov
fs
jecxz
push
faddl
sti
xor
mov
aam
insb
xor
and
lock
pusha
inc
dec
inc
xor
in
nop
cmp
sbb
cmpsb
and
pop
mov
cmpsb
pop
fisttps
clc
std
addl
dec
adc
lock
movb
and
es
sti
add
mov
cli
jge
js
fld
shl
rorl
gs
ret
xor
lcall
push
sbb
sbb
imul
sub
lahf
xor
and
jl
lods
sbb
int
adc
mov
jns
or
mov
fcmovb
mov
movsb
movsl
pop
test
jmp
ror
fimuls
movsb
mov
mov
mov
out
adc
and
sbb
and
jl
jnp
push
cmpsl
or
je
leave
mov
push
and
pop
ret
inc
inc
mov
test
cwtl
div
imul
add
or
and
xchg
dec
and
lret
pushf
mov
dec
stos
inc
cwtl
pop
mov
add
aam
pop
in
mov
and
das
jl
ds
hlt
dec
adc
xchg
iret
stc
mov
push
int
cmpsb
jg
faddp
in
add
dec
in
mov
stos
mov
nop
pop
shll
mov
out
rcl
push
jns
movsb
rorb
xor
or
cmp
lret
or
popf
inc
jg
push
out
int3
fdiv
jg
fnsave
popa
insb
aas
mov
cltd
pop
popa
lea
cmp
sahf
mov
enter
jl
repz
add
mov
mov
daa
fisubrl
xchg
ret
and
xchg
adc
push
xchg
sbb
mov
cmpb
or
lds
pop
ret
mov
fiadds
xchg
fisubrl
out
mov
add
out
xor
push
cmpsl
push
pop
pop
imul
jnp
cmp
push
sub
imulb
push
push
in
je
aad
push
mov
test
mov
adc
pop
mov
and
lea
je
js
jnp
dec
inc
xchg
dec
lods
add
pop
xor
jbe
outsb
lds
lods
sbb
push
xchg
testb
bound
xchg
out
data16
xor
jno
pusha
dec
fldl
nop
ret
mov
fbstp
push
shlb
loop
dec
sbb
mov
divb
fisubs
add
inc
cmpsl
mov
filds
mov
push
lods
adc
mov
sub
inc
call
in
add
scas
std
jae
mov
rorb
and
repz
jns
icebp
flds
pop
add
xchg
cmp
jp
popf
xchg
scas
test
and
outsl
dec
add
jp
jmp
jb
jne
das
lea
shlb
aaa
ror
leave
jo
pop
adc
in
xor
pop
jmp
popa
lea
inc
mov
insb
mov
push
or
and
add
xor
sti
enter
cmp
and
fcos
fs
and
add
mov
nop
test
ret
in
in
scas
mov
fmulp
sub
sub
push
sarl
pop
test
push
cmp
lcall
push
xchg
mov
jl
sub
cmp
repz
inc
je
notb
jae
add
icebp
dec
rol
xor
sarb
and
cmp
push
gs
insb
mov
into
sub
pop
xchg
loopne
cmpsl
enter
xor
scas
call
cmp
add
repz
and
and
sub
or
nop
mov
mov
popf
cltd
fs
push
imul
inc
jb
or
and
sarb
cmp
leave
sub
push
in
cmpsl
dec
aam
aaa
sbb
jmp
cli
sub
mov
xchg
bound
jbe
mov
jp
pop
movsl
dec
xlat
sbb
jmp
pop
outsb
jno
add
mov
mov
enter
in
jb
jnp
inc
cmpsl
and
rcll
ss
xchg
xor
or
xchg
push
mov
cmp
test
mov
std
push
icebp
xor
dec
push
xchg
jge
sahf
fcompl
mov
aaa
mov
int
cmp
and
sub
pop
leave
jbe
or
mov
mov
scas
int
or
xor
xchg
call
int
add
ljmp
nop
shrl
xor
inc
jecxz
fs
add
pop
popa
xchg
popf
and
sti
add
inc
aam
sub
and
popf
adc
or
mov
test
shll
test
add
into
pop
cmp
mov
out
mov
and
lahf
push
or
jnp
aam
repnz
cwtl
mov
sub
iret
mov
testb
add
fnsave
push
xor
jp
push
xchg
int3
or
in
jmp
out
in
inc
mov
lods
ljmp
jge
add
pop
pop
leave
mov
jae
pop
adc
and
rcll
fwait
jmp
das
test
data16
xor
jle
mov
mov
mov
mov
inc
je
je
pushf
mov
loope
ret
jo
mov
pop
aad
xor
stos
jnp
fwait
inc
push
and
cmpsl
popf
push
jecxz
push
stos
push
fbstp
lods
mov
divb
adc
mov
mov
sbb
push
addr16
movsb
insl
jns
icebp
jmp
or
xchg
sbb
sbb
into
sti
jb
iret
mov
push
fdivrs
xchg
sbb
push
inc
test
and
adc
nop
scas
xlat
mov
jae
push
lahf
out
pop
cmpsl
sbb
sbb
sbb
add
xor
pushf
call
mov
xchg
mov
inc
xchg
push
je
mov
hlt
pop
push
stos
push
sub
mov
out
jmp
fisubrl
push
lret
jne
lret
jns
and
loope
inc
push
mov
jno
mov
push
mov
xor
iret
daa
xchg
std
int
in
dec
push
cwtl
divb
xchg
mov
cmpsl
add
xorb
lock
bnd
rol
xlat
mov
jno
stc
mov
adc
js
xor
jno
test
mov
aas
aad
dec
lcall
pop
loope
push
mov
add
mov
lods
popa
xor
add
lret
sub
repz
cli
clc
cli
lock
dec
and
jno
shll
je
sahf
fists
mov
aaa
iret
add
shrl
jecxz
add
and
ss
xchg
aaa
cltd
cmp
sbb
and
sti
popf
clc
lret
and
mov
arpl
or
mov
push
mov
fdivr
rcl
sbbb
ret
lock
inc
aas
push
jl
dec
jle
out
mov
jne
dec
cwtl
outsb
pop
hlt
and
daa
add
xor
adc
lret
xor
out
fsts
mov
sti
pusha
cmc
adc
testb
mov
jns
sbb
mov
insl
jmp
in
pop
push
in
js
pop
lock
sub
push
and
pop
jnp
fbstp
push
in
icebp
jno
add
test
pop
pushf
sti
adc
repz
sahf
mov
rcrl
sbb
jne
addr16
push
fisttps
mov
sti
mov
add
xchg
mov
mov
inc
mov
and
lods
das
add
mov
cld
pop
lret
dec
dec
lds
push
adc
mov
push
dec
sti
sbb
pusha
into
mov
scas
jnp
pushf
movsb
add
daa
cltd
int
pop
jnp
dec
data16
sub
int3
xchg
inc
inc
push
jge
pop
and
std
and
idivl
aas
inc
cmpsb
pusha
dec
sahf
sbb
add
popf
pop
popf
shll
lret
sub
jge
int
jl
test
mov
in
add
jg
inc
inc
adc
lret
add
inc
mov
mov
push
loop
sti
fadds
mov
cmp
shl
clc
push
into
add
out
cmp
adc
sbb
xor
adc
fldl
sti
pop
mov
andl
fs
adc
pop
fs
sub
fwait
mov
cmpb
cmp
int
repz
enter
ja
sbbl
or
cwtl
push
lcall
add
jnp
xor
sub
dec
or
stos
jecxz
scas
jmp
cmpb
rclb
mov
mov
lds
push
adc
lahf
pop
lock
les
add
fnstsw
out
stc
pop
sahf
dec
insb
xor
adc
loopne
pop
aam
les
mov
mov
shl
or
or
or
sbb
and
sti
cmp
frstor
xor
movsl
add
jmp
inc
and
setge
pusha
dec
outsb
pop
cwtl
cltd
jbe
sub
lds
xchg
call
push
decb
or
and
xchg
das
jg
ret
call
orb
sbb
fldcw
push
pop
nop
loop
xchg
repnz
jo
popa
sub
dec
jne
add
mov
lods
je
fdivrl
xchg
push
adc
mov
cmp
insb
cli
ficoms
or
ljmp
popf
mov
jb
mov
pop
jnp
divl
stc
mov
aas
jns
push
push
mov
and
add
outsl
xor
jmp
dec
xor
adcb
pushf
add
shr
insb
adc
push
jmp
and
sbb
cltd
xchg
mov
jmp
jl
aam
pop
iret
or
lods
dec
inc
add
inc
mov
out
mov
or
movsb
inc
and
xchg
xor
add
mov
adcl
sbb
les
inc
popl
push
sub
in
mov
movsl
lea
cltd
imul
push
xchg
lret
je
mov
xchg
orb
push
lods
imull
testl
cmp
out
lods
lcall
sbb
cs
stc
and
and
aaa
mov
imul
ficomps
mov
sub
shrb
xor
cld
sub
flds
jmp
out
rclb
pusha
scas
mov
xchg
loopne
mov
xchg
dec
dec
inc
test
mov
loope
dec
lods
scas
cmp
inc
stos
shlb
rolb
fldt
js
dec
in
pop
ds
xchg
dec
das
lods
imul
cmp
inc
add
jbe
adc
dec
daa
pop
sti
jl
enter
mov
cmc
xlat
roll
aad
aad
xchg
xor
sub
inc
adc
in
xchg
sub
addr16
insb
rolb
lmsw
hlt
pop
testl
sub
int3
loopne
sbbb
enter
cmpsb
inc
movsl
cmc
cmpb
and
aad
aad
push
xor
insb
fisubrl
call
mov
sbb
mov
leave
add
ret
add
les
mov
mov
cmpsl
test
dec
dec
sub
lods
xor
rcrl
mov
or
fs
imul
pop
test
adc
and
or
push
inc
out
sbb
xchg
mov
jecxz
cmp
or
pop
jbe
mov
xchg
add
std
inc
lcall
cli
and
jbe
or
pop
movsb
dec
iret
lods
ja
pushf
jbe
cmp
incb
inc
sub
adc
aam
and
popa
xlat
adc
dec
or
in
js
ret
bound
out
add
stc
adc
dec
and
cmp
fistl
rolb
jae
stos
mov
mulb
add
bound
mov
and
mov
adc
jns
cmpsb
xchg
xor
stos
out
andl
jp
jno
fdivrl
cmp
cmpl
adc
mov
pop
std
aas
sub
adc
xlat
sbb
mov
aad
mov
test
ljmp
ret
stos
imulb
aad
add
stos
push
scas
cmp
test
sub
cmp
jl
dec
les
leave
fistpll
mov
pop
xchg
mov
cmp
push
cli
pop
lds
arpl
cmp
xor
mov
aas
and
xchg
das
dec
adc
mov
dec
lods
xchg
shr
add
popa
frstor
push
cmc
push
mov
xor
add
stc
cli
push
pop
mov
fstl
inc
push
xchg
and
mov
popf
mov
aam
xor
mov
lret
mov
mov
outsl
pop
test
mov
pop
push
pop
js
enter
sbb
cmp
dec
or
mov
jne
pop
bound
mov
pop
stos
dec
icebp
jbe
sbb
scas
inc
hlt
stc
cmp
inc
sbb
sahf
ja
xchg
pop
repnz
mov
push
mov
pop
fs
std
imul
push
jbe
movsb
cmpsb
loope
jb
xor
in
adc
inc
arpl
fcomip
fdivrl
repnz
mov
rcl
insb
andl
inc
adc
xchg
sbb
xchg
inc
adc
js
adc
add
hlt
mov
adc
lock
testb
aam
idivb
sarl
mov
aad
or
mov
cmp
or
and
mov
fdivp
push
xchg
cld
sbb
lcall
mov
pop
push
mov
mov
repnz
insb
add
mov
mov
add
stos
cmp
cmp
push
or
shlb
jns
or
xor
lret
pop
fcompl
fstpt
push
sbb
or
stos
pushf
scas
lock
stos
out
jo
repz
nop
fs
and
xchg
sub
sbb
push
loopne
lahf
jp
rorl
xor
mov
jb
jmp
fimuls
lahf
xchg
jmp
xchg
popf
adc
push
jns
test
cmp
ja
sub
ret
aas
idivb
in
and
inc
sar
or
and
cltd
or
test
sub
mov
test
ficoml
jno
movsl
popf
pop
mov
cmpb
aad
adc
enter
dec
xorb
add
lea
enter
fistl
in
pop
addl
cmp
loopne
outsb
push
sbb
or
push
xchg
xor
push
movl
repz
idiv
cmpsb
sti
push
push
arpl
sbb
icebp
aaa
pop
scas
mov
call
shr
mov
cltd
lahf
gs
mov
nop
cld
mov
jo
pop
hlt
inc
out
cmp
cltd
insb
jbe
mov
sub
mov
mov
insb
in
jnp
dec
imul
imul
mov
cs
ret
sbb
scas
repnz
fdivl
out
out
sbb
pop
mov
xchg
mov
mov
push
fcmovb
and
call
and
hlt
jl
imul
pop
ficoml
dec
in
jbe
dec
adc
mov
add
sbb
cmp
push
mov
or
mov
cmc
iret
loope
mov
notl
fwait
inc
inc
inc
out
xor
fdivs
ljmp
repz
addb
daa
test
sbb
daa
lock
sbb
ret
push
jle
fimuls
popf
imul
leave
daa
imul
jp
repnz
xchg
negl
lret
fnstcw
pop
fucomip
adc
mov
mov
mov
sbb
mov
mov
jecxz
jge
mov
les
sub
push
test
jo
ds
orl
inc
and
inc
outsb
addr16
aas
inc
outsb
jl
sub
jno
xorb
addr16
or
mov
adc
xor
shl
insb
aaa
or
in
ljmp
imul
repz
ret
xchg
add
scas
fisttps
in
out
and
ds
lds
pop
add
xchg
xlat
orb
lock
sub
cmp
loop
push
insb
mov
and
outsl
mov
push
inc
mov
repnz
sbb
dec
repnz
sbb
sahf
icebp
cltd
test
jge
mov
mov
sti
mov
pop
push
mov
rorb
lcall
push
loop
pop
lods
call
pop
sbb
test
adc
cld
mov
inc
cli
jecxz
jp
xlat
adc
push
loop
mov
pop
and
mov
fisubl
lret
ss
add
or
jmp
mov
mov
or
sar
outsb
fs
stc
mov
loopne
fisttpl
jno
aad
data16
mov
addl
inc
sub
scas
xchg
jbe
pop
aas
mov
insb
out
push
xor
rorl
cmp
pusha
mov
mov
mov
movsl
nop
xor
insl
fstl
push
sub
mov
stos
xchg
pop
xchg
inc
and
scas
xor
lock
xchg
pop
scas
fadd
push
xchg
jno
adc
mov
adc
xchg
ja
inc
test
mov
mov
cmpsl
xchg
lea
imull
pop
into
popa
daa
cmp
push
ret
nop
jecxz
push
fwait
std
rclb
ja
add
jecxz
cmp
mov
insl
xor
push
movsb
inc
cmp
movsl
add
or
xchg
mov
add
call
jl
sahf
lea
dec
int
and
or
sarb
mov
in
sub
xlat
push
shrb
cmp
rcrb
xchg
jo
cs
adc
cli
mov
addr16
test
jecxz
xchg
pop
sbb
out
or
sbb
and
addb
call
enter
mov
jns
cld
jmp
shll
adc
stos
sub
or
jecxz
aam
push
add
mov
mov
scas
lods
add
pop
adc
cs
sbb
lods
das
enter
test
push
jo
popa
mov
dec
outsb
sbb
lods
fsubl
jmp
or
xchg
mov
xchg
push
cltd
imul
or
add
addr16
jl
clc
mov
scas
imul
ljmp
loop
ljmp
enter
push
inc
cmpsb
dec
cmp
sub
inc
insb
pop
xor
negl
ljmp
ret
push
or
mov
fstps
mov
cmp
incb
push
cmp
lahf
fs
and
mov
fistps
ret
aad
or
addr16
or
xchg
xchg
je
push
insb
popf
sar
sbb
dec
stos
rorl
push
add
pushf
outsl
xlat
jne
jle
int
inc
push
aam
mov
ds
adc
mov
push
je
jmp
mov
repz
in
pop
aaa
mov
iret
ret
into
and
jae
loop,pt
jo
jne
push
test
rcrl
sbb
in
insb
aas
aas
pop
ja
cmp
lcall
mov
ret
add
add
add
cmp
fdiv
arpl
sbb
daa
xchg
mov
xorl
shlb
scas
outsl
loope
inc
mov
push
sbb
int
push
sbb
mov
cltd
fnsave
pop
xchg
repz
fldenv
xchg
pop
jae
inc
in
cmp
push
sbb
pop
mov
jl
mov
inc
sub
sub
rcr
or
fildl
pop
mov
mov
mov
xchg
lods
jae
in
notl
cli
mov
popa
ja
push
lods
ljmp
ljmp
or
cmp
mulb
arpl
in
inc
xchg
and
stc
sub
inc
int3
movsl
push
outsl
sub
mov
loope
faddl
push
pushf
push
stos
jg
aad
sbb
andl
pop
data16
mov
pop
mov
int3
xchg
mov
cmp
xor
out
push
inc
pop
xor
aad
xchg
ljmp
cmpsl
test
cmpsb
mov
leave
ja
cmp
je
pop
sub
nop
mov
stc
mov
xchg
mov
notb
sbb
mov
sbb
into
jl
pop
pop
lahf
jg
repz
mov
push
sarb
sbb
int3
popf
push
shrb
addb
test
push
push
lods
fistpl
je
xor
lock
mov
faddl
scas
adc
popf
aas
mov
xlat
pushf
push
inc
repz
aas
mov
fstp
mov
adc
insl
push
pop
bound
fldpi
dec
lret
xor
dec
sub
add
xlat
mov
xchg
cmp
daa
pop
lods
add
sbb
aaa
fistpll
cld
cwtl
mov
mov
faddl
into
dec
dec
jo
ds
push
or
mov
push
bound
std
cmc
sbb
movsb
cmc
pop
arpl
push
shlb
out
dec
cmp
out
popf
cmp
jecxz
insb
es
in
rorl
call
aad
push
lahf
fsts
les
jb
pop
mov
inc
lcall
mov
or
xor
aaa
push
jg
fwait
or
std
ss
mov
daa
pop
xor
sub
push
inc
scas
xchg
das
out
sbb
clc
adc
std
mov
cmpsl
ret
js
pop
jp
fcompl
int
ljmp
dec
lock
xlat
xchg
xchg
ss
sbb
outsl
into
rorl
popa
popf
ret
es
fcompl
movsb
push
pop
test
into
xorl
ljmp
adc
cmp
imul
mov
xlat
mov
sub
inc
fcompl
scas
or
inc
adc
inc
imul
aaa
cli
pushl
add
inc
dec
jbe
xlat
cmpsb
or
xchg
in
push
push
inc
in
aas
or
das
jo
fwait
sub
add
mov
ljmp
fs
xchg
mov
rclb
pop
xlat
jns
push
pop
movsl
dec
jo
adc
icebp
scas
dec
inc
add
clc
jp
xchg
cs
out
repnz
dec
shl
arpl
daa
cmp
cltd
out
scas
bts
mov
mov
bnd
dec
fiaddl
mov
movsb
orl
jne
daa
sub
adc
push
fwait
les
loope
sub
inc
and
push
imul
mov
sti
push
push
bound
cmp
sti
sub
mov
popa
adc
jnp
mov
lods
pop
cmp
and
imul
or
mov
push
pop
movsl
or
mov
dec
aad
xor
lods
scas
je
mov
inc
mov
je
stos
push
lea
fimuls
sub
icebp
loope
fistpl
lock
mov
insb
scas
imul
popf
ror
dec
adc
rcrb
add
iret
dec
stos
push
shlb
and
xorb
movsl
cmp
pop
adc
dec
push
pop
and
pop
imul
fsub
aam
sub
js
lods
dec
pop
movsl
adcb
pop
cmpsb
cmp
sbb
je
sub
jne
cmp
jg
and
mov
add
xchg
jbe
int
mov
scas
jmp
xchg
dec
pop
call
stc
fisttpll
inc
pop
or
out
jno
push
mov
out
add
xchg
sub
inc
arpl
or
movsb
pop
popf
pop
es
mov
jge
stc
mov
repnz
insb
inc
fists
out
ret
stos
mov
or
out
insb
cmp
arpl
adc
lock
fstps
xor
negl
cmc
push
jns,pt
flds
out
test
faddl
push
out
scas
fnstcw
mov
int3
cltd
into
cmp
push
daa
dec
and
pop
push
loop
in
pop
cwtl
mov
inc
out
idivb
mov
mov
sub
pop
cltd
xor
pop
mov
cltd
cs
das
dec
stc
sub
aam
cmp
jp
pop
jg
fstpl
lcall
idiv
enter
sahf
mov
daa
jae
and
xor
xchg
push
adc
and
das
mov
cltd
push
pop
addl
mov
cwtl
xlat
xchg
jbe
jbe
cmp
test
cmp
leave
add
loop
jnp
jne
fsubl
fisttpl
xlat
out
xlat
jle
and
ja
dec
cmp
stos
or
out
add
aad
sarl
je
jg
jbe
push
dec
cmpsl
sub
mov
mov
push
into
add
lods
adc
fwait
mov
imul
scas
stos
xchg
xor
rolb
int
shrb
jg
es
push
xchg
mov
into
filds
sbb
std
xchg
fstpt
add
pop
jne
lcall
outsb
inc
cltd
lret
daa
cld
inc
cmpsl
xchg
xchg
int
add
sbb
imul
sarl
mov
dec
push
insb
int
sar
cmp
xchg
sahf
jns
sti
std
pop
dec
or
mov
jns
insl
jl
add
jnp
pop
out
insb
in
mov
out
clc
shlb
xchg
dec
jnp
or
pop
jbe
fnstenv
jl
mov
jae
mov
int3
ret
js
popf
pop
popf
jno
or
xor
push
rclb
int3
mov
cmp
mov
push
mov
out
fwait
adc
testb
cld
scas
adc
add
mov
jbe
inc
call
add
out
adc
cld
test
add
xor
xchg
mov
outsl
fldenv
rcr
in
out
pop
orl
stc
sbb
ret
scas
cmc
shll
insb
cwtl
dec
inc
mov
clc
and
roll
mov
mov
mov
or
pop
leave
and
dec
adc
fadds
bound
dec
mov
inc
and
ljmp
inc
sbbl
dec
inc
xchg
mov
gs
js
lret
cmp
cmp
rorl
sub
out
sbb
dec
pushf
cmp
inc
dec
mov
or
out
dec
cmp
jp
inc
js
mov
mov
mov
xlat
add
out
mov
lock
testl
xchg
fs
dec
out
add
sbb
aaa
clc
idivb
int
mov
cmc
pop
cmp
fsubl
and
or
roll
sbb
shr
iret
sub
jns
paddb
insb
xchg
hlt
sub
shrb
mov
mov
in
adc
fs
fildll
nop
jl
jo
xor
lods
cmp
mov
dec
dec
les
jecxz
pop
push
andb
scas
test
xor
or
or
xchg
adc
sub
pop
js
hlt
pop
insb
into
push
decl
add
inc
stos
jae
sbb
popa
sbb
lock
fdivrl
mov
lods
inc
lods
in
inc
gs
das
lods
lods
stos
jecxz
das
lahf
add
mov
xor
cmp
adc
repz
cs
loopne
lea
addb
sbb
ds
mov
dec
mov
push
cltd
lods
dec
and
hlt
lock
lock
push
scas
test
pop
dec
or
xchg
hlt
ss
cmp
orb
iret
mov
lock
leave
lods
and
data16
loopne
jno
xlat
inc
or
pop
scas
lret
std
cld
fwait
mov
xchg
jg
xchg
push
je
push
insb
sub
push
shll
xor
addl
pop
push
in
and
jle
test
rcrl
push
mov
push
je
xchg
mov
jmp
mov
pushf
push
icebp
out
adc
stos
fdiv
push
int
cmp
or
addr16
sub
popf
aaa
mov
cmpsl
mov
xlat
pop
mov
cmc
xor
mov
dec
dec
pushl
test
adc
and
cmp
add
jae
sbb
psllq
push
in
lahf
incb
mov
lahf
or
mov
dec
imul
mov
data16
lods
xchg
pop
cmpl
mov
jmp
sbb
scas
mov
loope
popf
sbb
cwtl
add
cmp
in
inc
xor
add
nop
mov
pop
push
xor
mov
sti
cmp
inc
push
outsl
sbb
rorb
xchg
repz
or
jbe
xchg
dec
scas
jne
inc
cmp
testb
sub
jp
test
inc
mov
movb
adc
pop
xchg
lret
or
jnp
pop
ja
sbb
inc
int
rclb
sub
in
add
jnp
in
gs
xor
shll
xchg
inc
repz
rol
and
repnz
dec
dec
es
sub
adc
jg
repnz
mov
xlat
xchg
stc
pop
ret
mov
mov
movsl
dec
cmp
cmp
loop
or
sahf
lahf
mov
mov
push
dec
cwtl
mov
sti
inc
inc
stos
inc
test
mov
std
cli
hlt
mov
dec
xor
rclb
cmovnp
insl
fidivrs
aad
xor
adc
add
mov
cwtl
test
popa
mov
out
adc
lods
stc
xchg
jge
aam
fidivs
cmp
cmpl
cmp
xor
add
mov
out
outsb
mov
andl
mov
lahf
ficoml
and
cmp
push
daa
outsb
add
sbb
sub
inc
aad
jb
xor
imulb
xor
popa
dec
rol
test
xor
jo
aaa
xor
test
js
mov
dec
jp
test
or
roll
mov
or
lret
mov
fimuls
mov
dec
xor
repnz
sub
and
in
sbb
data16
nop
inc
shlb
sarb
lds
and
sbb
xor
inc
pushf
and
inc
jae
or
sbb
xor
push
fucomip
push
push
pusha
js
icebp
and
mov
sub
fldt
out
sahf
fmuls
mov
mov
dec
outsl
jne
xor
mov
adc
sbb
mov
mov
pop
pop
mov
xor
rcl
or
xchg
pop
mov
daa
popa
fidivrl
and
mov
add
sbb
sahf
inc
ror
dec
rorl
mov
and
dec
sub
sbb
es
mov
or
fisttpll
jl
sub
lds
lcall
add
cmp
cs
fmul
and
jp
stos
fldl
or
mov
rclb
out
or
ret
jmp
push
jb
add
je
dec
mov
mov
shll
xlat
mov
movsl
into
ss
decl
inc
dec
cmc
add
mov
mov
cltd
jnp
cmpsl
sahf
mov
or
pusha
push
mov
in
out
dec
daa
adc
rcrl
cmp
int
subb
sub
int
lds
gs
and
adc
add
sub
cld
pop
pop
enter
stos
mov
cmp
outsl
ja
and
daa
cld
out
jp
jmp
fiadds
ja
cld
mov
ret
fadds
jnp
mov
jp
jmp
stos
jp
int3
mov
sbb
add
pusha
sub
mov
sub
mov
mov
insb
and
mov
sbb
pop
fwait
iret
and
adc
xchg
push
or
fldcw
sbb
sbb
jne
pop
notl
cmp
testl
push
sbb
jmp
in
push
adcl
jge
add
ja
lea
jae
insl
push
xlat
mov
push
mov
icebp
xor
mov
jmp
lods
cmp
lods
roll
push
mov
jo
or
dec
cmp
ja
out
arpl
xchg
test
mov
inc
testb
aas
test
cmp
lcall
fiadds
cld
test
insb
pop
add
jns
dec
lock
lock
sbb
lahf
mov
dec
dec
xchg
or
lahf
testb
mov
daa
mov
add
xchg
repnz
out
mov
jae
xor
std
andb
ret
add
pop
mov
movsb
aas
xor
xchg
jae
jbe
or
daa
mov
test
cld
push
pop
sar
sbb
inc
fists
jns
loopne
dec
jle
or
push
xor
xlat
adc
dec
sahf
cmp
mov
pop
in
mov
add
repnz
and
and
xor
stos
js
cli
std
inc
mov
in
adc
jp
jle
jmp
mov
mov
dec
mov
mov
ljmp
mov
sbb
in
adc
cs
jbe
push
sbb
test
mov
mov
sahf
xor
or
xchg
ja
cmp
insl
jns
jle
push
les
loopne
lret
aam
icebp
out
push
sub
and
cmp
xor
std
punpckhbw
fcompl
lods
xchg
data16
lds
dec
adc
adc
test
push
test
hlt
cmp
pop
add
inc
lods
pop
jp
mov
test
or
mov
les
out
sarb
movsl
mov
lcall
lret
sub
enter
add
push
jns
jge
xchg
gs
mov
outsl
xor
daa
imul
rol
je
sbb
cld
movb
and
xor
sub
mov
les
dec
imul
in
loopne
sub
mov
jle
mov
and
fsubs
das
push
gs
inc
push
lds
fldcw
xchg
lds
or
push
lods
sbb
ret
push
xor
mov
ja
and
cs
adc
stos
xchg
fstpl
mov
imul
andnps
scas
mov
movsl
fcmovne
inc
mov
ds
pusha
call
push
lods
sbb
xchg
int
outsb
loop
cmc
jns
push
cmpsb
push
outsl
test
lret
mov
les
ficoms
lea
int3
stos
in
into
and
adc
ret
sub
sub
and
ja
fsubrs
ljmp
add
subb
sub
hlt
gs
xorb
int
popa
fwait
pop
push
mov
andl
cwtl
mov
stos
sbb
push
std
je
sub
pop
scas
clc
mov
filds
adc
sub
inc
ficoms
inc
mov
mov
les
xchg
mov
in
jmp
mov
sub
fwait
inc
jle
jns
pop
and
je
push
push
daa
call
cmp
imul
xor
pop
cmpl
dec
clc
loop
push
or
sarl
sub
bound
popa
repnz
das
dec
punpcklbw
jmp
and
bnd
out
shrb
fisttps
dec
cltd
mov
pusha
lock
push
mov
push
xor
lods
movsb
fidivl
scas
lret
pushf
outsl
mov
daa
jl
inc
push
movsb
inc
test
movsl
imul
loop
mov
out
pop
vmovaps
jae
sub
ret
out
mov
mov
or
mov
stos
in
or
in
lods
sub
jno
fbld
icebp
xchg
hlt
mov
jb
dec
pop
dec
pop
mov
idivl
sbb
rorb
push
scas
push
fcoms
les
je
inc
lds
adc
test
mov
lahf
jns
dec
xchg
fwait
xchg
js
mov
cs
add
in
repnz
nop
iret
jo
outsl
std
jg
push
movsb
dec
inc
pop
cwtl
sbb
xor
cmp
mov
mov
pop
icebp
scas
out
nop
test
add
mov
sbb
push
das
xor
inc
cmp
pop
dec
dec
cmp
push
fidivrs
cmpsl
psadbw
out
lea
mov
pop
arpl
out
mov
gs
into
imul
std
ret
jle
mov
xor
repnz
and
xchg
mov
mov
outsb
stos
imul
mov
adc
cmpsl
insb
sahf
ret
iret
push
xor
cmp
aas
lret
lock
hlt
mov
in
arpl
mov
dec
push
dec
dec
stos
iret
arpl
cmp
test
mov
and
and
lock
adc
mov
shl
inc
mov
sub
fsubrl
cmp
or
push
test
push
outsb
lahf
push
adc
mov
test
mov
mov
mov
pushf
aas
pop
mov
fnstenv
pop
insb
jecxz
std
add
sbb
push
mov
lret
cmp
adc
fs
into
jle
out
fs
dec
mov
pop
push
pop
negb
jbe
inc
add
test
rcrl
add
inc
cmp
cs
and
sarl
lret
sbb
pop
pop
push
mov
hlt
aam
imul
stos
fstps
int3
dec
sub
jle
loopne
fwait
and
sbb
out
into
xchg
repz
jmp
decl
pop
xor
dec
push
repz
aas
lea
jae
out
jg
das
int
xchg
dec
lods
sub
call
sub
dec
xor
fdiv
dec
sub
fnstsw
sbb
pop
fsubr
imulb
int3
int3
and
push
bound
call
cmp
cld
hlt
sub
lods
mov
enter
mov
or
call
jbe
pop
mov
add
or
jmp
push
repnz
rclb
pop
icebp
andb
pop
inc
popa
enter
dec
in
push
loopne
pusha
jne
inc
and
mov
inc
sbb
insl
das
pop
pop
dec
add
pop
or
cmpsb
test
mov
sbb
stos
lods
xor
sub
mov
popa
lret
sbb
mov
lahf
cmp
out
hlt
ds
mov
lret
jne
es
dec
outsl
xchg
in
pop
pop
mov
shr
insb
lock
xor
stos
xbegin
shl
add
popf
mov
mov
add
inc
xlat
adc
cld
and
in
nop
or
ret
cltd
shlb
std
idivl
push
jbe
lods
push
mov
imul
dec
repnz
and
sbb
ss
add
aas
lods
sbb
push
mov
pop
testb
repz
jg
sbb
pop
fidivrs
jns
movsb
jl
jo
sbb
aaa
xor
ret
out
stc
xchg
pop
lahf
insb
ljmp
mov
loopne
out
fistps
adc
inc
push
movl
addb
out
sub
inc
add
mov
aas
xchg
xor
pop
push
idivb
lahf
iret
push
jns
mov
insb
mov
cld
dec
mov
jp
adc
fwait
add
cmp
pop
jbe
xchg
xchg
hlt
add
shll
cmp
outsb
mov
push
push
push
jae
or
ja
push
or
push
inc
mov
sub
daa
and
jne
lock
and
in
inc
cld
in
lods
test
jno
mov
and
push
push
scas
dec
sbb
inc
add
cmpsb
test
mov
in
insb
dec
imul
jns
popa
movsb
xor
cmp
loopne
int
icebp
xchg
pop
fdiv
cwtl
pushf
xor
sub
pop
stos
popa
push
loopne
arpl
dec
imul
push
sar
sbb
les
xor
pushf
add
pop
jno
jmp
sub
jle
sub
sbb
lods
add
cmp
pop
mov
ret
adc
push
cmpsl
mov
and
sar
das
xchg
cmp
adc
xchg
add
inc
and
and
mov
iret
lret
mov
cmc
cmpsl
xchg
stos
xchg
insl
repz
call
add
dec
fidivrs
pop
fstp
adc
mull
sbb
dec
ss
ret
xchg
jnp
repz
jp
sbb
cld
push
xor
jne
lret
cld
or
pusha
or
int
popa
lret
sbb
ror
cmp
xchg
cmp
aam
mov
sbb
lea
jge
mov
mov
shll
jmp
mov
mov
mov
imul
lock
pop
adc
in
popf
mov
test
andb
xor
stos
add
sbb
mov
lea
mov
push
pop
pop
xor
mov
loop
jl
push
mov
mov
rol
jle
scas
lcall
jmp
dec
mov
imul
insl
sub
and
ds
lea
mov
icebp
les
pop
push
xchg
pushf
jmp
jg
jmp
mov
bound
shr
add
int3
mov
sub
test
adc
aad
jo
cmp
int
fsubs
rcll
and
sub
mov
jno
mov
add
clc
pop
cmp
jl
test
push
cmp
iret
outsl
add
sub
js
mov
xchg
pushf
dec
sbb
aaa
pop
out
cmp
ds
sbb
dec
mov
mov
lds
jge
gs
jle
cmpsb
or
pop
outsl
xor
repz
daa
test
mov
xor
jo
dec
repnz
pop
cmpsl
mov
pop
daa
fmuls
and
inc
adc
or
mov
cld
loope
pusha
loop
ret
mov
sub
std
dec
inc
fdivl
xchg
cmpsl
inc
mull
add
enter
stos
sahf
push
faddl
shll
mov
imul
stc
clc
fcoms
shrl
adc
lret
and
sub
enter
cmp
adc
inc
push
lea
cmpsl
dec
pop
push
dec
movsb
fadds
lea
pop
cmp
inc
int
aas
lea
fcoml
or
dec
mov
imul
mov
stos
add
sahf
lcall
lret
out
loopne
and
or
inc
push
cli
cmc
loope
stos
jbe
jns
outsl
imul
sub
xchg
dec
jge
int
xchg
cmc
imul
mov
dec
ss
mov
xor
pop
inc
fs
fucomip
sub
pop
and
sub
lret
fisttpl
sar
je
ret
and
nop
sub
mov
xchg
jmp
pop
mov
lock
xchg
xorl
mov
stos
test
imul
fwait
in
arpl
sahf
adc
jecxz
mov
xor
xchg
mov
pop
in
or
lock
in
movsl
repz
push
mov
mov
insl
jae
jp
aaa
lret
and
cli
ret
dec
scas
adc
jns
sbb
xchg
cmp
mov
cmpsb
xlat
pop
rorb
jp
enter
imul
or
xor
insl
jbe
sbb
mov
jbe
jp
es
cmpsb
test
xor
sbb
mov
addr16
arpl
mov
mov
xchg
sbb
mov
xor
dec
mov
int
insl
cwtl
test
fldenv
cld
aaa
xchg
repnz
jo
repz
sbb
leave
inc
pop
sub
add
mov
mov
and
js
xchg
and
cmp
mov
mov
mov
rol
ret
div
add
subb
pop
test
cmp
loope
ljmp
push
scas
xchg
ror
pop
adc
or
movsb
jmp
subl
adc
mov
negb
cwtl
jle
push
lock
inc
jne
xlat
bnd
mov
lods
mov
cmp
imul
mov
cmp
inc
into
ret
in
lahf
lods
mov
test
lcall
jno
cmp
ret
fnstcw
ds
scas
aas
cli
shlb
testl
pusha
fwait
lcall
fsubrs
je
fs
popf
mov
insb
xor
aaa
xchg
jnp
movsb
fdivrs
push
into
or
sub
cmc
sub
test
shrb
xchg
imul
xor
pusha
jl
insl
mov
lret
stc
adc
and
loope
and
push
sub
fiaddl
sahf
jg
cmp
push
imul
fwait
arpl
mov
lret
sub
in
jle,pt
cmpsl
mov
mov
sbb
addr16
ret
shrl
sub
sub
mov
and
loop
adc
js
iret
stos
imul
adc
test
cmp
xchg
in
inc
gs
cmpb
push
lock
jbe
icebp
adc
push
pop
sbb
or
dec
or
mov
mov
js
out
xor
lock
or
cltd
and
out
les
lret
cmp
mov
sbb
mov
inc
popa
loop
pand
cmp
addr16
pop
sbb
jbe
push
jmp
leave
xorl
or
push
imul
or
lock
push
jecxz
out
cmpsl
and
push
enter
add
xchg
ljmp
data16
mov
lods
inc
lret
jmp
push
cmp
sbb
out
imul
jecxz
jne
jnp
jbe
bound
dec
mov
pop
xchg
into
lds
fstps
outsb
test
movsb
push
lds
or
cmp
xor
pop
or
repz
mov
add
jns
sub
aaa
out
pop
adc
inc
movsl
xchg
push
insl
lea
hlt
dec
push
outsl
dec
sbb
insb
js
test
jg
test
scas
mov
in
cwtl
movsb
xor
xchg
dec
xchg
adc
test
xor
sub
jb
cmp
cmp
and
test
popa
add
push
jp
scas
pop
leave
repz
pop
cli
sbb
loope
das
jne
sub
leave
xchg
or
cmpsb
in
pop
push
xor
sbb
dec
iret
or
pushf
movsl
push
mov
add
das
je
lcall
xchg
movsl
dec
push
xchg
shlb
das
mov
xchg
shrb
xchg
cmpsb
xor
shl
movsb
cld
lahf
or
mov
outsl
out
cmp
xor
int
ljmp
orb
inc
add
jecxz
jmp
out
iret
out
aaa
shlb
pusha
jecxz
xor
jmp
addl
xchg
add
hlt
push
push
enter
or
repnz
in
sub
dec
imul
xchg
lahf
lcall
loopne
insl
jmp
pop
lahf
jb
in
int
andb
fstps
dec
push
push
scas
ss
adc
jb
addb
xchg
push
adc
call
test
sub
bswap
movaps
mov
pop
ja
cmp
ljmp
cmp
jmp
dec
sbb
filds
ss
aaa
fnsetpm(287
fdivl
or
rcrb
xor
dec
push
sub
pop
orl
sbb
aad
push
push
xchg
pop
or
pop
mov
push
cltd
leave
mov
je
daa
repz
push
lea
jo
add
stos
fadd
pop
aad
daa
sbb
shll
sub
scas
in
cmp
jg
jl
jb
int3
stos
sub
mov
mov
iret
imul
call
shll
jns
and
fnstcw
fisubs
pop
mulps
in
addr16
insb
ret
lea
fidivs
pop
ja
dec
insb
add
dec
mov
andb
pop
push
lods
sahf
aam
in
loop
cmp
mov
mov
cmp
mov
cmp
inc
push
repnz
data16
aam
adc
push
sbb
inc
mov
mov
insb
mov
jns
xchg
xchg
inc
and
push
clc
les
or
cld
sub
fdivp
xchg
jmp
xchg
rolb
fldenv
fmulp
pop
mov
fldcw
adc
jg
mov
mov
jecxz
pop
test
bound
xchg
std
adc
xchg
and
push
adc
adc
out
push
mov
mov
dec
dec
dec
std
jl
pop
movsb
mov
inc
jnp
push
pop
xlat
sbb
push
mov
or
add
adc
push
fstpl
push
cli
sbb
xchg
mov
cmpsb
xor
sub
jne
mov
xor
xor
cmp
adcl
push
or
jecxz
fbstp
into
fadds
or
mov
sbb
rcr
mov
rorl
lds
in
aam
lret
rcrl
pop
sbb
push
adc
sub
rcrl
in
add
lods
int
fsubl
out
inc
push
lret
mov
inc
xchg
jbe
add
cwtl
inc
repnz
fwait
and
cmpsb
sbb
push
les
sbb
enter
push
movsl
mov
adc
test
xor
aas
pushf
push
addl
push
push
xchg
mov
push
lock
and
arpl
push
in
int3
sbb
xchg
ret
sub
push
sub
test
jle
mov
aaa
pop
scas
mov
xchg
cmp
cwtl
addl
fdivrs
fadds
jbe
das
fs
in
push
test
hlt
push
les
popf
mov
or
dec
jle
roll
pop
lds
push
sbb
inc
in
pop
adc
sub
inc
dec
dec
cltd
adc
leave
add
add
push
pusha
mov
inc
shrb
inc
outsl
sub
movsl
push
jmp
repz
push
shrb
dec
dec
lds
jle
imulb
mov
xor
and
loope
popa
inc
mov
add
fdivrl
mov
adc
sub
je
add
sahf
iret
scas
insb
dec
ja
gs
inc
xchg
add
fs
cmp
mov
mov
lock
fidivrl
repnz
pop
dec
push
ret
sahf
outsb
fdivl
lock
push
adc
sbb
test
cmp
or
adc
mov
sub
dec
enter
add
mov
xchg
or
and
sbb
push
into
scas
mov
fs
xchg
add
ja
mov
in
dec
lock
add
bound
ss
dec
xchg
add
rorb
lods
mov
xchg
xchg
loop
mov
int3
js
out
or
jp
mov
mov
sarb
fadd
stos
mov
xchg
test
xchg
xchg
cmp
sbb
mov
int
fucomi
pop
jnp
sbb
xor
and
pusha
inc
and
adc
shr
inc
dec
pop
push
jp
mov
dec
imul
mov
fildl
leave
sbb
scas
mov
xor
testb
lret
negb
or
mov
jmp
mov
cmp
push
adc
dec
fcmovu
dec
repnz
ds
call
push
jne
adc
shlb
test
push
adc
push
pop
pop
out
dec
inc
mov
fdivrl
mov
into
out
stos
xlat
hlt
pop
jno
lahf
repz
add
mov
rcl
ja
in
adc
test
dec
push
inc
loope
ljmp
lods
jo
pop
lret
or
insl
adc
movsl
cmp
lret
mov
inc
mov
cmp
push
pop
es
les
mov
repz
test
mov
loopne
and
loopne
repnz
dec
lcall
lock
inc
and
jg
xorl
sub
push
loopne
adc
fstpl
jle
cld
pop
aam
pop
test
fldenv
jns
in
mov
xor
add
mov
repnz
out
adc
je
push
rol
iret
xchg
pop
sub
mov
std
jp
rdtsc
lock
test
pop
sub
mov
mov
inc
pop
test
test
xor
ror
adc
and
imul
leave
push
jp
nop
push
push
lahf
dec
mov
hlt
idivl
pop
mov
int3
movsb
add
mov
ret
and
push
in
jl
into
xchg
jmp
fisubrl
adc
les
xor
jp
lahf
daa
adc
mov
xrelease
cli
insb
aaa
mov
or
gs
cmp
fxam
cmp
jae
mov
inc
add
fcoml
orb
pushf
xchg
cwtl
pop
fwait
imul
mov
stos
addr16
or
lret
push
pop
rcrb
je
cmpsb
add
orl
xorb
daa
les
out
sbb
rdtsc
push
adc
sbb
mov
xchg
and
jecxz
loopne
shll
ljmp
fildll
in
mov
imul
pop
stos
cmpsl
jge
insl
and
push
scas
and
addr16
inc
cmp
stos
test
ja
pushf
ja
int
xchg
in
insl
stos
push
hlt
adc
mov
lcall
mov
pop
in
ret
xor
jo
dec
push
stos
mov
enter
ret
jp
mov
test
jo
add
xor
mov
imul
adc
ds
sti
inc
les
in
sub
or
cmp
bound
orb
add
stos
leave
lods
les
outsl
cmp
aam
jo
test
iret
xchg
adc
test
jb
inc
dec
adc
mov
jne
pop
xor
gs
cmc
xchg
scas
mov
cmp
icebp
add
lea
shll
jo
out
ds
test
jmp
fstpl
mov
push
pop
mov
scas
mov
push
push
lea
xor
inc
and
jmp
mov
add
sbb
enter
sub
pop
es
or
xchg
fcompl
rol
sub
in
push
fldl
push
repz
sar
in
jns
add
mov
test
pop
jl
ja
or
jne
hlt
call
xchg
pop
in
mov
xor
add
loopne
lcall
dec
std
add
xchg
pop
mov
imul
popa
sub
inc
sub
test
shll
jle
adcb
mov
mov
repz
scas
test
lea
pop
pop
pop
addr16
mov
hlt
incl
jns
dec
test
dec
jmp
insl
in
lcall
jl
sbb
add
jns
and
cmc
dec
pop
inc
clc
imul
int3
dec
inc
fidivrl
jge
inc
adc
adc
inc
lds
mov
lea
js
shll
lods
jo
in
mov
sbb
into
test
or
dec
mov
mov
into
cltd
lret
std
out
aaa
aad
jg
mov
pop
or
loope
outsl
mov
xor
push
das
clts
shrb
xchg
adc
mov
push
jle
xchg
cld
or
fisubl
xchg
lahf
loope
dec
mov
pushf
xor
aad
or
xor
shlb
hlt
add
fidivl
inc
fdivr
sub
lcall
add
push
popa
dec
ss
das
adc
sahf
jae
jo
inc
jl
mov
xor
jmp
sbb
adc
dec
xor
add
pushf
pop
sti
fcmovu
jle
mov
cmp
pusha
rorb
loopne
hlt
loopne
aad
sub
test
scas
mov
aas
and
add
ljmp
imul
adc
cli
push
or
jge
sahf
addl
cmc
add
dec
push
rolb
loopne
xchg
push
into
mov
mov
or
fs
pop
sbb
jb
pop
jnp
cmp
lods
inc
inc
stc
lret
mov
and
or
iret
clc
xchg
daa
hlt
sub
out
out
sbb
stc
mov
sbb
cmpsb
enter
jae
jp
pushl
lods
punpckhdq
repz
jb
sti
aaa
and
popa
js
xorb
mov
decl
mov
pop
mov
fcoml
daa
cltd
fbld
into
mov
shr
std
js
jne
sbb
sbb
cmpsb
push
jo
or
or
add
call
cmp
add
dec
bound
dec
push
cmp
inc
aad
popa
jo
jge
xchg
in
mov
jge
xchg
push
add
fs
pop
sbb
jp
daa
subb
out
clc
inc
xor
jns
aad
add
mov
push
adc
into
fnstsw
loopne
push
dec
shll
xor
and
dec
pop
pushf
xor
insl
lcall
xchg
and
or
cmp
sti
leave
pop
mov
call
cmp
sbb
outsl
sbb
js
mov
mov
rclb
gs
cmc
sub
fdivrp
mov
cmp
int3
aam
sbb
mov
and
dec
or
rorl
sahf
std
outsb
flds
test
icebp
inc
xor
out
sub
xor
jbe
add
sub
fwait
test
sti
push
inc
mov
out
xlat
stos
icebp
pop
push
lret
sub
push
mov
inc
inc
mov
mov
add
out
jb
ljmp
ljmp
jne
pop
pop
mov
aam
cwtl
outsl
sbb
nop
popa
xchg
insb
out
ljmp
fwait
cmc
out
or
mov
push
jmp
cmp
mov
sub
ds
ret
leave
fiaddl
pushf
test
mov
mov
and
pop
pusha
cmp
inc
adc
mov
inc
cld
inc
push
mov
mov
add
fdivs
mov
cli
lock
cs
inc
testl
pushf
cld
adc
in
test
gs
loop
mov
mov
mov
lods
pop
xchg
jmp
cli
cmp
mov
cmp
mov
test
jmp
mov
pop
out
xchg
std
std
inc
cmp
add
adc
pop
fistl
jo
das
loopne
push
sub
cwtl
dec
push
inc
inc
das
dec
iret
pop
iret
aam
push
add
ljmp
adcb
stc
leave
jae
lock
inc
xchg
clc
call
adc
aad
scas
add
pop
mov
call
and
sbb
loopne
cmc
mov
push
inc
sub
fdivp
sub
pop
xlat
jne
or
sarl
addr16
bound
enter
adc
jne
jns
add
lahf
dec
in
test
fidivl
dec
or
mov
in
cli
push
inc
push
mov
and
cltd
mov
lret
cmp
and
push
xor
lcall
cmp
mov
shlb
cmp
lahf
xor
dec
rcr
cwtl
call
mov
pop
divl
data16
add
push
fidivl
xor
subl
jl
insl
pushf
push
dec
xor
add
sbb
cmp
xor
lods
addr16
fiaddl
push
push
or
stos
fs
push
xor
out
cmp
add
aas
repz
bound
in
movsl
and
ds
cmp
sub
test
jg
test
lcall
lea
xrelease
mov
cs
mov
xlat
lret
ljmp
aad
sub
lods
lods
cmpsb
mov
inc
in
sbb
mov
dec
adc
jp
int3
pop
pop
fldcw
sub
mov
pop
mov
pop
and
pop
fiadds
insb
jp
and
add
mov
xor
loope
mov
sbb
jae
push
mov
rcrl
je
jbe
add
dec
and
mov
out
inc
and
dec
sahf
jmp
nop
les
pusha
sub
nop
sub
out
aaa
or
add
xchg
dec
into
pop
cmpsb
jle
pop
test
inc
stos
and
jb
in
out
jae
pop
negb
pop
inc
jo
popa
jl
sub
xchg
jmp
cltd
cmp
out
cs
sbb
cs
pusha
mov
iret
sub
pop
jecxz
mov
div
mov
jge
xchg
inc
lds
sbbb
lret
mull
mov
xchg
mov
and
adc
loopne
addb
rclb
in
jo
add
cld
sub
and
sahf
xor
test
xchg
jge
push
int
ret
imul
rorl
ljmp
cmp
push
pop
cmp
sbb
pop
je
inc
jecxz
fmuls
sarb
shll
hlt
push
or
sbb
out
aad
orl
sahf
aas
icebp
sarb
scas
mov
idivl
dec
mov
shll
test
inc
ds
hlt
test
ja
fcom
int
jno
sub
movl
pause
xor
xorb
scas
pop
push
add
dec
pop
pop
ss
dec
add
pop
xor
adc
jno
scas
loope
xchg
in
data16
jne
ret
adc
push
push
out
das
jne
add
and
or
in
nop
das
dec
dec
cmc
sarb
cmp
das
fstp
addr16
xchg
push
mov
fwait
cmp
test
out
dec
jl
mov
or
push
dec
or
das
sub
sbb
lea
mov
out
cmpsl
movsb
mov
pusha
xlat
adcb
push
sub
pop
sbb
jbe
pop
adc
shll
arpl
lods
iret
leave
pop
negl
or
test
icebp
or
dec
scas
sub
das
jbe
pop
lea
je
add
movsb
mov
inc
mov
stc
xchg
in
rcr
adc
mov
cs
out
sbb
test
in
mov
or
or
or
imul
xchg
mov
lret
popl
sub
inc
jb
jnp
jge
lods
repz
insl
clc
dec
test
jo
push
pop
cmp
sub
or
jge
jle
push
jno
int3
popa
pushf
adc
sarl
inc
in
pushf
out
fbld
lods
sub
lcall
xor
cltd
enter
dec
mov
adc
xor
shl
xor
or
daa
dec
xor
mov
lea
and
xor
mov
shlb
or
mov
mov
mov
jmp
aas
and
sbb
jne
mov
sub
outsb
jbe
pop
adc
push
imul
sub
dec
fwait
mov
jmp
mov
adc
sub
dec
inc
test
pop
mov
mov
xor
xchg
mov
cmp
or
add
and
jmp
xor
arpl
pop
or
push
sti
sub
cmp
sub
int
out
push
or
fdivr
or
sub
int3
data16
fwait
popa
loope
and
mov
push
pop
mov
mov
inc
sti
or
pop
xor
push
addl
fstl
cmp
cld
inc
jp
push
movsb
dec
movsl
push
push
mov
nop
push
dec
cli
jecxz
rcll
mov
enter
in
mov
sbb
fimuls
dec
test
cmpl
xchg
mov
gs
lock
mov
push
sbb
repnz
ljmp
cs
adc
pop
adcl
loope
xor
lret
fcomps
shr
fistpl
cmp
lea
or
fprem
fs
out
push
or
xor
mov
ljmp
inc
stos
xor
inc
mov
jne
mov
jno
cltd
enter
scas
push
pop
into
pop
and
call
sbb
rcll
xchg
mov
pop
pop
mov
dec
sahf
mov
add
cmp
cmp
movsl
out
cli
adc
cmp
addr16
dec
push
mov
outsl
mov
jne
popf
cmpsb
sarl
int
mov
push
jle
sbb
add
xor
fidivrs
xchg
mov
pusha
enter
out
lret
arpl
inc
daa
rcr
fstpt
mov
dec
and
or
push
test
imul
mov
sahf
std
sub
jo
test
movsl
sahf
pop
and
push
icebp
subl
fidivl
outsl
mov
xor
sub
in
int
cmp
inc
pop
cmpsb
sub
jb
lcall
mov
dec
mov
popf
xor
clc
and
or
mov
or
jno
xlat
jmp
push
jb
adc
gs
and
xor
lret
jnp
lods
mov
add
daa
loope
add
adc
and
std
sbb
fistps
addr16
mov
movsl
add
lret
dec
mov
sbb
cmpsl
add
mov
leave
jg
jp
in
jbe
adc
mov
and
out
mov
cmp
xlat
jae
int3
dec
pop
shrl
lea
test
inc
or
or
cmp
mov
jno
repnz
xchg
ret
in
imul
out
and
js
pop
jg
jnp
call
or
fnsave
or
shlb
mov
mov
pop
pop
mov
cmp
pushl
mov
shll
lea
mov
cmp
dec
xchg
fmuls
movsl
sub
adc
pusha
lret
mov
mov
inc
add
mov
inc
mov
mov
getsec
xchg
or
cmp
bound
ss
stos
xor
xor
scas
mov
add
mov
sahf
dec
stos
and
in
stc
fs
gs
or
adc
mov
lret
cwtl
fbstp
sub
mov
xchg
dec
and
sbb
js
lret
mov
xor
push
je
push
xor
cmpsl
and
adc
dec
fs
inc
lahf
mov
cmp
cmp
or
int3
mov
decl
inc
sbbl
aam
sub
pop
imul
jecxz
push
pop
sti
test
or
add
mov
shll
xorl
jae
add
scas
sbb
xchg
xor
inc
je
loopne
adc
sbb
fdivl
push
xlat
testb
jno
rcrb
push
rclb
add
jmp
sbb
mov
jmp
mov
pop
jno
sbb
pop
rcr
jg
mov
pusha
cmp
out
addl
inc
mov
sbb
cmp
adc
bound
mov
or
ret
jno
leave
out
mov
cmpsl
adc
pusha
bnd
xor
sbb
ret
jecxz
pusha
icebp
xorb
push
shrl
pop
and
add
ja
mov
loope
sti
movsl
lret
adc
sub
add
sub
dec
stos
xchg
pop
test
repz
sub
push
or
push
in
insb
xchg
rcr
push
mov
cmp
imul
sub
dec
int3
mov
rol
cltd
cmc
and
outsb
fs
sub
pop
andb
negl
lret
sbb
sbb
imul
fdivrs
xor
hlt
in
cmp
das
daa
addr16
pop
leave
xor
icebp
cmp
lock
arpl
cli
fcoms
imul
jns
add
outsl
repnz
in
into
jmp
in
outsl
das
insb
shrb
xchg
aad
repnz
and
shlb
call
jb
push
xchg
sub
fcomip
test
jecxz
add
psadbw
out
cwtl
and
pop
jne
mov
lods
inc
add
ja
cmp
test
push
mov
rolb
jmp
pushl
jp
shlb
ljmp
filds
xchg
ss
mulb
je
daa
jno
cmp
adc
lds
xchg
xchg
adc
popf
sub
jae
mov
xlat
cli
push
jbe
xchg
sbb
mov
xor
add
adc
lret
push
jb
mov
jmp
icebp
cmpsb
pop
xor
fwait
jns
add
lret
xchg
in
adc
jecxz
sub
cmp
ret
mov
jmp
and
dec
jmp
push
ss
mov
movsl
mov
and
nop
repz
pop
xor
sub
dec
jp
in
inc
jno
mov
sbb
mov
and
dec
sub
pop
out
cmp
add
loope
mov
pop
xor
fdiv
cmc
jmp
fs
pop
sbb
xor
test
dec
dec
popa
pop
and
inc
cmp
fwait
orl
push
fucomp
pop
pop
test
push
pop
fisttps
out
mov
push
push
dec
js
lahf
jne
insl
fildll
cmp
sbb
inc
loop
sbb
sub
add
leave
divl
pop
cltd
and
dec
test
addr16
cs
add
or
imul
jbe,pt
sahf
fidivs
inc
push
lea
ljmp
adcb
jge
cmp
lock
sbb
pop
jg
xchg
cmp
mul
iret
push
in
in
xor
jle
andl
xor
imul
test
les
aam
in
jle
movsb
fs
arpl
out
out
sub
aam
sbb
mov
xchg
enter
sbb
mov
pushf
or
clc
cltd
mov
js
inc
push
or
shr
add
les
add
mov
aaa
imul
push
jno
push
inc
mov
sub
mov
jo
xlat
dec
xchg
or
push
mov
inc
sti
mov
les
xor
mov
push
fcomip
cmp
fcmove
pushf
and
xchg
jge
movsb
out
cmp
dec
mov
mov
loopne
adc
lret
xchg
push
inc
lds
pusha
and
mov
cmp
inc
add
es
sahf
adc
push
stos
repnz
insb
cmp
pop
sbb
mov
int
jno
pop
shll
xchg
pushf
mov
out
aas
pop
sbb
dec
dec
fwait
icebp
addr16
test
daa
lock
xor
or
push
or
fisttpll
and
lock
jl
clc
cs
add
or
fincstp
lahf
mov
push
xchg
cwtl
sbb
pop
sub
dec
inc
jno
xchg
test
testb
sbb
jb
in
push
aas
or
push
test
rorl
rclb
test
outsb
cmp
or
xchg
in
add
fdivs
out
add
sahf
movsl
icebp
push
jbe
or
push
movsl
data16
out
mov
dec
xor
in
jp
movsb
inc
call
lods
insl
sahf
jle
gs
rolb
out
mov
loope
push
xor
dec
xchg
jge
pop
pop
mov
repz
sbb
nop
outsb
jmp
fisubrl
mov
cmpl
mov
repz
xor
insb
enter
std
and
icebp
pushf
lcall
addb
bound
mov
mov
xchg
insl
js
shlb
add
or
sub
scas
in
xor
lret
scas
mov
xchg
mov
mov
push
jb
test
inc
ljmpw
outsl
inc
sbb
fsub
mov
xor
out
movsl
or
pop
scas
cmp
cmp
inc
into
cld
add
in
mov
lds
dec
add
jg
pop
dec
jae
dec
or
adc
inc
add
in
push
hlt
and
sub
jno
jno
adc
in
lds
pushf
mov
std
sub
xor
ja
imul
mov
shlb
insl
pop
inc
sbbl
ret
fistl
clc
mov
sbb
add
jns
leave
mov
iret
enter
popf
cmpsb
divb
adc
lret
das
sub
mov
cmp
push
pop
pop
decb
pop
dec
mov
cmp
lea
push
sahf
mov
in
push
hlt
or
in
test
cmp
or
xchg
int
sbb
es
outsb
rorl
outsl
xchg
fldenv
cmp
lea
pop
aad
sub
xchg
dec
fs
mov
xchg
stos
jle
xor
lea
mov
arpl
jne
stos
adc
sbb
sahf
insl
lods
pop
cltd
jne
outsl
add
cmp
jo
andl
repz
inc
jo
scas
daa
sbb
jae
mov
sbb
xchg
push
jo
addr16
stos
inc
ds
adc
jp
sub
icebp
xchg
xor
xor
mov
jg
lahf
pop
cmp
xor
jo
aad
cwtl
shl
jecxz
mov
push
imul
je
data16
sti
popa
jge
test
xorl
enter
sbb
pop
xchg
push
ficoms
inc
push
ret
into
insl
mov
in
cs
push
frstor
js
lret
cmc
stos
add
outsb
and
insb
enter
movsb
popf
shl
jge
pushl
jp
out
xchg
insb
jmp
cmpsl
outsl
jae
int
outsb
addr16
jbe
loop
and
stos
adc
xchg
cmp
adc
pavgw
push
xor
cmp
icebp
cmp
xchg
xchg
mov
push
scas
jge
push
data16
lcall
sub
repz
in
jle
fimuls
mov
cmpsb
sub
lret
jge
sub
jl
xor
add
or
js
pusha
inc
inc
push
inc
push
stc
roll
jo
test
cmp
es
mov
push
mov
mov
xchg
push
dec
or
movsl
jle
popa
addb
test
mov
outsb
mov
leave
int3
pop
sbb
cli
lods
jo
cmp
xchg
movsl
add
jle
outsb
sarb
cmp
and
push
xlat
fldt
cmp
and
mov
mov
mov
add
cwtl
xor
aad
icebp
mov
mov
stc
movsl
out
cmpb
test
fs
fwait
pop
fdivrs
call
or
cmp
shll
dec
dec
insl
call
test
push
xchg
xchg
std
int
xchg
lahf
cltd
jne
iret
pop
mov
outsb
add
jg
out
pop
out
mov
mov
or
inc
mov
jns
xor
jp
repz
mov
movl
mov
add
dec
cmc
sbb
std
push
or
shlb
mov
inc
mov
fcmove
movsb
sahf
orl
ja
stos
lret
mov
vpaddw
lret
cld
cltd
push
enter
xchg
popf
pop
cmpsb
pop
pop
mov
outsl
jp
lahf
sub
icebp
jl
push
push
jno
add
adc
aaa
and
mov
arpl
pop
mov
jnp
popa
push
daa
fwait
inc
jae
add
jb
mov
mov
adc
in
test
dec
fidivrs
xacquire
and
push
popa
loopne
pop
sti
add
add
jne
ret
je
xor
mov
rcrl
imul
add
or
pop
sub
cli
sahf
xor
in
testb
scas
and
dec
push
shl
pop
push
mov
sub
mov
cwtl
sub
dec
xchg
mov
add
out
adc
adc
int
enter
push
adc
dec
pop
rcrl
mov
movsb
leave
add
and
fimull
sub
cmp
ret
and
dec
push
shll
xor
cmp
aaa
daa
ljmp
pop
imul
cmp
les
sbb
jno
ds
pop
in
dec
daa
sbb
or
and
daa
insb
ja
lret
popf
cmp
ja
dec
lods
pop
cmp
mov
pop
in
inc
pop
ds
dec
sub
sub
xor
jl
rclb
jle
jae
inc
dec
mov
push
lea
mov
lock
test
idivl
popf
js
dec
push
in
lahf
mov
cli
mov
test
cli
cwtl
arpl
bnd
inc
and
pop
sbb
aaa
test
mov
test
cmc
decl
scas
mov
cmp
xor
or
loopne
inc
rcll
or
mov
inc
shll
int
adc
cmp
push
adc
scas
adc
lahf
das
jbe
jns
js
pop
mov
inc
pushf
push
jmp
stos
popf
ret
ja
sub
je
fdivs
cmp
xchg
adc
or
mov
mov
push
pop
and
xor
mov
movsb
inc
gs
sbb
xor
daa
testb
push
inc
cli
arpl
daa
mov
cmpsl
data16
es
add
or
inc
stos
add
add
adc
xchg
dec
jo
js
dec
mov
ja
rcl
sub
and
adc
push
popf
fsubrs
jg
or
sbb
fdivr
aaa
ret
jae
bound
pop
ljmp
ficoms
sub
dec
popa
in
repnz
mov
shlb
pop
xor
push
out
xchg
frstor
sbb
aam
in
mov
lret
adc
mov
ds
dec
push
push
push
cmpsb
ja
std
or
repz
mov
pop
mov
cmp
fisttpll
pushf
push
xorl
jno
mov
or
rcll
mov
xor
cld
enter
xor
andl
pop
hlt
xchg
or
xchg
adc
fimuls
rolb
sbb
lods
xor
ret
inc
and
sub
push
xor
jle
jns
and
adc
test
mov
xchg
out
sbb
jns
jg
mov
xchg
mov
movsb
out
pop
mov
addr16
je
mov
sbb
lret
and
lods
dec
mov
and
xor
sub
xchg
or
sqrtps
aas
sub
mov
outsb
pop
or
ror
scas
xor
xchg
sbb
jle
test
mov
lock
std
adc
aas
mov
dec
xchg
setbe
cmp
jg
xor
lods
mov
mov
pop
adc
cmpsb
mov
cmp
popf
popf
mov
jmp
pop
add
xor
hlt
jne
dec
iret
pop
push
daa
iret
movsl
xchg
lret
mov
mov
xchg
mov
je
das
cmp
cmpl
std
or
lods
imul
cmpsb
pop
xchg
lds
mov
rclb
out
push
jmp
out
add
cltd
out
mov
cmp
aam
cmc
divl
xchg
mov
frstor
fwait
pop
sub
mov
jmp
sub
xchg
and
dec
imul
lea
add
mov
movsb
les
test
rcll
mov
int3
pop
shrl
into
repz
enter
lret
xchg
xor
roll
cltd
clc
ljmp
bound
xchg
fs
sub
test
mov
pop
repz
fdivs
fsubp
addr16
jg
mov
jnp
repnz
imul
push
cmpsb
jl
mov
je
adc
sbb
sub
sub
lods
or
ss
rorb
ljmpw
or
add
mov
cmc
scas
scas
jg
cmp
fadd
xor
pop
stos
clc
ds
push
jb
scas
stos
call
push
cmp
fidivrl
cld
sbb
and
mov
push
mov
daa
pushl
sbb
pushf
imul
ljmp
push
out
mov
pusha
cmpsb
mov
jl
jecxz
loope
add
cmp
sub
fwait
into
sbb
daa
std
cwtl
push
adc
inc
push
dec
mov
test
jnp
insl
adc
pop
adc
add
and
leave
shl
mov
ds
addb
or
mov
pop
inc
xchg
jl
imul
or
scas
fldenv
movsb
inc
insb
jg
js
loop
rcrb
rorl
dec
push
testb
adc
call
xchg
stc
mov
mov
xchg
clc
sbb
aas
or
pusha
cmc
jecxz
pusha
pop
jnp
mov
sub
cmpl
jo
nop
sahf
aam
int3
shlb
inc
lods
jnp
mov
xchg
and
sbb
inc
test
sub
test
mov
cmp
dec
jmp
lret
sub
push
mov
cmpsl
fs
into
add
testb
inc
sbb
jae
pop
repnz
lods
das
push
adc
sti
adc
fisttpll
jnp
subl
es
xchg
cmp
inc
xor
mov
and
push
rorb
push
in
divb
xchg
xor
mov
add
mov
or
fs
rolb
mov
int
jne
inc
mov
cmp
or
pop
jno
clc
mull
jno
sub
jmp
add
mov
mov
push
xchg
xchg
rcl
mov
sbb
push
mov
jb
xchg
push
push
jge
mov
adc
xchg
repnz
and
push
fs
mov
daa
mov
scas
jb
test
add
stc
jnp
ficoms
fadd
mov
or
sbb
or
es
pop
test
mov
mov
ja
int
fldcw
repnz
in
sti
inc
out
add
mov
push
mov
cmp
xchg
btl
popa
or
aad
cmp
xchg
fisubrs
popf
jmp
xor
pusha
sbb
or
mov
mov
cmc
mov
imul
cmpsl
mov
push
dec
dec
subl
int
lods
sbb
je
std
mov
mov
sarb
sub
add
sbb
and
sahf
popa
jnp
shrb
divb
js
pop
inc
dec
aam
jno
or
cltd
xorl
and
imul
loope
cli
push
je
fildll
loopne
sub
leave
xor
loop
jnp
mov
jl
sbb
pushf
sub
or
and
out
int
dec
xchg
jg
fcomp
xor
sub
jns
sahf
std
or
cmp
bnd
adc
imul
cmp
and
jnp
add
movsb
inc
mov
iret
mov
xorb
fdivs
adcl
xchg
xchg
icebp
push
mov
xor
cwtl
or
sbb
xchg
dec
or
mov
jns
sub
add
test
shl
and
daa
lahf
ljmp
aad
sbbl
push
cmp
xlat
sbb
xchg
push
mov
lcall
push
je
pop
inc
xor
pop
jb
imull
jbe
lret
test
fmuls
push
hlt
cmp
push
stos
or
jmp
mov
push
sub
lock
xor
popf
mov
push
dec
push
inc
cmpl
arpl
mov
inc
xchg
jg
fcmovu
scas
inc
fnsave
fcompl
mov
adc
pusha
stos
test
inc
or
mov
sub
push
mov
insb
mov
adc
lcall
movsl
loope
icebp
mov
data16
xor
sbb
popa
cmp
enter
jecxz
mov
or
.byte
inc
popa
add
xchg
leave
in
in
xchg
ss
out
test
mov
cmp
scas
push
jne
std
push
jne
leave
call
js
test
pop
jb
sahf
in
sbb
jb
mov
test
and
cltd
dec
push
in
sub
sbb
sti
data16
mov
enter
or
scas
cmc
jb
xor
in
pop
push
mov
repz
xlat
int
xchg
je
sar
shl
fistpll
mov
icebp
imul
js
push
mov
and
call
pop
xor
in
bound
loopne,pn
and
fiadds
in
or
mov
js,pn
enter
and
jle
rorl
adc
sbb
stos
roll
xchg
pop
das
in
rcl
adc
mov
jecxz
fimull
push
imul
loop
scas
pop
hlt
pop
adc
pushf
push
clc
imul
sub
or
int3
movq
rcrl
or
cmp
dec
fwait
push
sub
adc
cli
ss
pushf
xor
mov
repnz
dec
pop
pusha
in
cmc
mov
sub
xchg
imul
lahf
repz
leave
add
xor
bswap
and
movsl
lret
fwait
lcall
adc
sti
push
call
add
fidivrs
pop
std
jb
call
insb
insb
sahf
dec
jp
call
rcrl
pop
rcrb
sahf
ud0
pop
xchg
mov
dec
dec
fnstenv
mov
mov
in
ret
mov
mov
sub
and
std
jo
fs
add
cmp
mov
mov
xlat
push
ror
push
pop
mov
roll
sub
jle
xchg
push
add
mov
jp
sub
push
jle
movsb
loopne
cmp
cmp
pop
xchg
out
lods
sub
movsb
outsl
sub
push
repz
xlat
push
mov
int
mov
cmp
xchg
push
xchg
push
scas
aas
imul
and
jmp
sbb
int3
pop
les
loop
aam
push
add
xor
xchg
pop
mov
xchg
push
sbb
and
das
das
sbb
sbb
int3
sbb
int
dec
cwtl
jnp
das
push
sub
imul
aam
sub
or
dec
fidivl
arpl
int3
add
adc
movsb
mov
mov
xor
mov
adc
std
or
xchg
mov
mov
int
mov
mov
sub
cmp
jbe
cli
imul
test
nop
int3
loopne
dec
mov
and
dec
fisttpl
mov
add
mov
adc
sub
nop
daa
push
mov
pop
ss
lret
bound
je
adc
adc
in
xchg
inc
xchg
sbb
lret
jbe
push
xlat
push
push
faddl
hlt
xchg
std
hlt
adc
fldt
xor
sbb
cmp
mov
ss
sub
jg
mov
sbbb
cli
sbb
aaa
lret
stos
mov
fwait
jg
mov
push
xchg
testl
mov
aam
inc
div
les
addr16
xor
inc
jb
pop
loopne
pop
out
jns
movsb
cmp
cmp
add
into
sbb
ret
dec
sarb
ja
loopne
mov
sub
scas
pop
cmp
inc
add
push
add
xchg
dec
aam
or
jne
hlt
add
cmpsb
cmp
and
mov
sbb
ss
mov
dec
mov
stos
iret
fwait
pop
popf
pusha
xor
mov
and
iret
jmp
outsl
cmp
inc
repz
fcoms
lods
out
dec
fwait
push
jge
leave
sbb
loop
fistps
sbb
push
cli
jecxz
mov
sbb
sti
inc
call
leave
loope
out
daa
cs
int3
shrb
hlt
xorl
jp
lods
rorl
push
mov
mov
push
lcall
inc
pop
mov
les
sbb
mov
addr16
adc
mov
movsb
icebp
mov
rep
pop
lods
test
push
test
mov
push
ja
pop
or
inc
pop
movsl
or
popa
inc
ret
dec
mov
mov
and
stc
test
mov
aam
xor
jg
dec
mov
adc
push
lea
push
sub
ret
rcll
fnstcw
mov
sub
push
iret
test
cltd
sti
sbb
out
and
fnsave
inc
outsl
push
push
imul
jp
cwtl
and
out
loopne
cmp
inc
add
jg
shrl
jb
inc
jae
mov
lds
ret
loop
rcrb
enter
fwait
push
jns
sti
dec
xlat
inc
dec
xor
int3
mov
sub
add
push
nop
int
shll
xlat
lcall
fst
and
into
mov
ret
mov
inc
pop
pop
lods
jbe
sbb
xor
pop
imul
test
xchg
loop
sbb
sahf
repnz
sahf
jmp
fisubs
lcall
pop
push
daa
mov
insl
xor
psubsw
pop
bound
inc
mov
mov
stos
ret
push
mov
xor
sbb
call
xor
sti
mov
xor
xchg
add
and
add
es
sub
xor
pop
jmp
cmp
mov
int
xchg
fimuls
mov
push
test
push
mov
adc
pusha
in
gs
addb
mov
sbb
out
mov
into
popf
ja
xchg
add
aaa
lock
inc
add
inc
dec
inc
int3
or
scas
data16
lock
jno
stc
sbbl
sub
sbb
or
rorl
inc
imul
outsl
fbld
sbb
push
mov
lock
cwtl
rol
xchg
fs
and
cli
mov
test
aad
sub
sbbl
pop
in
and
lea
jne
xchg
aas
adc
mov
inc
jle
jmp
jbe
daa
sbb
ja
jbe
xchg
and
pop
shr
gs
or
push
pop
mov
sahf
inc
pop
and
xor
dec
out
arpl
xchg
clc
mov
xchg
sub
xor
jl
and
cld
aam
lret
shr
inc
inc
fcomps
adc
mov
insb
daa
mov
cmp
push
xchg
arpl
push
out
mov
pop
mov
pop
add
dec
gs
and
add
mov
test
in
out
adc
or
push
mov
cli
pop
std
jne
sbb
pusha
lds
xchg
test
test
aas
add
loope
fisubrl
pop
or
mov
ret
sbb
inc
aas
sar
call
fstpl
rcrl
jbe
filds
jecxz
inc
mov
cmp
lcall
fistpl
dec
push
add
rolb
cmp
popf
dec
push
jle
push
ret
movsl
adcb
push
push
add
movsb
adc
add
adc
movsl
stos
scas
inc
pusha
test
push
cmpsb
mov
sub
aad
clc
les
scas
test
icebp
inc
shlb
mov
orb
daa
jae
outsl
adc
mov
cmp
mov
aaa
pop
inc
push
aas
es
or
xchg
xlat
and
arpl
ljmp
inc
subl
pop
out
jbe
or
lret
in
ja
xchg
sub
jp
rorb
aaa
jo
xor
push
push
test
ljmp
jp
je
inc
mov
dec
fidivrs
xchg
fucomi
jge
adc
imul
add
adc
xor
mov
xlat
cmpsl
das
ljmp
gs
sub
test
es
push
cwtl
sbb
icebp
enter
mov
sbb
mull
lea
int3
pusha
sub
pop
int3
daa
data16
sub
rcll
jl
jmp
jno
je
je
sbbl
mov
mov
into
xchg
sbb
mov
pop
and
aad
loop
fistpl
repz
ss
push
loopne
out
fists
ss
data16
push
mov
dec
fidivl
or
in
cmpsl
adc
mov
push
inc
jl
popf
gs
in
dec
in
in
or
sbb
push
decl
pop
int3
dec
rcrb
push
push
stos
lods
aas
inc
sbbb
imul
or
or
inc
popa
pusha
push
fmul
sub
push
sub
ss
popf
imulb
jg
lods
jno
mov
sub
mov
mov
ret
bound
jl
sahf
insl
repnz
jno
in
in
mov
and
mov
inc
dec
push
pushf
push
out
mov
pop
orb
or
cmc
mov
out
out
fsubrl
mov
jle
pop
repnz
shr
cmp
clc
cmp
xchg
outsb
ds
icebp
or
out
gs
roll
cmp
push
mov
stos
push
cltd
fldt
repz
mov
mov
mov
aaa
orb
loop
gs
sahf
inc
int
or
in
test
clc
int3
inc
jp
insl
push
add
pop
push
inc
vmovntdq
les
sbb
fcmovne
sarl
mov
jge
fistps
add
adc
stc
mov
mov
jmp
mov
arpl
das
jnp
out
sub
cli
incb
pop
rorb
in
aaa
jnp
shlb
bnd
dec
xor
cwtl
sti
xchg
mov
pop
inc
movsl
je
pop
mov
cli
cltd
adc
pop
movsb
or
sub
pop
mov
in
xor
push
adc
idiv
adc
mov
sub
lods
popf
bound
sub
imul
and
pop
pop
xchg
dec
cld
fldl
int3
mov
movsb
jl
add
cmp
mov
daa
jns
and
push
lea
sbb
pop
xchg
movsl
pop
mov
cmp
adc
xchg
sarb
pop
pop
cvttps2pi
jnp
je
mov
lret
dec
fisttpl
std
rcll
xchg
dec
bound
pop
mul
mov
cmc
and
test
adc
fiaddl
fwait
lea
push
nop
aad
sahf
cmp
dec
inc
getsec
and
push
mov
push
sbb
scas
movsb
lcall
cwtl
fidivrs
jo
xor
or
or
ja
cmp
xor
add
adcl
leave
negl
daa
push
sbb
and
fdivs
cmp
pop
cs
dec
daa
xlat
and
pop
pop
jp
insb
inc
outsb
add
cmpsl
sbb
add
in
mov
xchg
call
pop
mov
sbb
add
mov
cwtl
fistpl
adc
loopne
pop
and
mov
add
aas
jnp
push
lret
mov
pop
xchg
jmpw
insb
xor
js
cmp
mov
adcb
jecxz
ds
ficompl
cwtl
sub
inc
cld
in
cmp
sub
sti
sub
mov
mov
inc
jo
outsl
clc
scas
xor
arpl
inc
push
int3
adcl
push
and
or
sbb
cmc
jbe
sbb
in
push
sub
mov
sub
mov
cmpb
les
roll
in
lods
sti
sub
inc
jle
jno
or
out
cmp
lahf
mov
je
xchg
inc
bound
and
loope
sbb
xchg
pop
and
test
loope
jp
mov
mov
fwait
jmp
xchg
fiaddl
insb
out
pusha
inc
fldl
les
sbb
cmp
cmp
addb
out
jns
in
jecxz
mov
push
adc
dec
jp
loop
mov
bound
jno
mov
mov
mov
loop,pt
stc
movb
fmull
mov
dec
xchg
mov
and
shll
mov
inc
xor
and
hlt
mov
pop
mov
loopne
lock
scas
out
jo
jle
sbbb
pop
dec
mov
movsb
divb
rclb
mov
cmc
or
xor
jmp
push
jbe
js
pop
sbb
sub
push
pusha
dec
addl
cs
popf
cs
outsl
xor
xor
aam
or
icebp
lcall
mov
out
and
in
and
loope
dec
enter
ljmp
test
mov
mov
jne
rcrb
or
sbb
movsl
pop
and
and
mov
ja
mov
in
jne
and
add
roll
xor
fisttpll
jmp
out
cmp
scas
dec
out
in
mov
sbb
in
mov
push
xchg
test
pop
pop
jle
mov
xor
sbb
dec
cmp
sbb
ljmp
add
pop
pop
scas
and
cs
inc
popa
sbbb
imul
fdivs
pushf
iret
orl
push
mov
cwtl
fst
sbb
cmp
sub
xchg
out
leave
add
sub
rcr
pop
out
scas
std
js
jge
in
adc
jmp
xorl
addl
inc
xchg
add
dec
push
xchg
cmp
push
roll
mov
imul
ret
shll
enter
out
mov
in
mov
andl
stos
idivl
jle
ja
mov
loopne
mov
jle
add
adc
mov
xchg
jns
inc
das
mov
mov
push
cli
inc
pop
stc
sub
inc
sar
daa
test
ljmp
aad
aam
int
lea
aad
and
cld
shr
aas
or
stos
adc
daa
mov
outsl
aad
jmp
xchg
jecxz
aad
mov
mov
push
icebp
pop
into
fcoml
sti
out
cld
testb
push
jge
sbb
dec
dec
pop
jge
mov
ljmp
push
pushf
or
push
shr
mov
js
xor
add
arpl
icebp
inc
insl
xor
pop
nop
xchg
pop
mov
sub
pop
insb
in
std
aam
cmc
cld
xlat
adc
insl
jl
popf
fcmovnbe
xchg
mov
daa
outsl
adc
dec
mov
mov
cltd
or
mov
loopne
sbb
jle
sbb
pushl
popf
ret
cwtl
mov
cltd
fidivrs
dec
cli
pusha
mov
divl
fwait
jge
push
in
ret
push
sbb
sub
xchg
ds
shl
subb
icebp
ret
pop
adc
nop
dec
outsl
jmp
mov
out
dec
nop
outsb
adc
ja
or
jle
das
in
std
adc
call
xchg
push
jl
mov
inc
cmp
sbbb
shr
pop
pop
icebp
push
aaa
and
or
adc
stos
add
and
and
xor
mov
jnp
imul
sahf
mov
xor
movl
inc
lock
ret
jnp
out
fldt
xchg
xlat
push
sub
lods
insl
and
ret
jno
xor
xchg
jbe
enter
cmc
xlat
test
rorb
ljmp
xor
stos
cmpsl
ss
scas
sarb
push
shrl
cmpsl
pop
pop
sub
das
push
shlb
icebp
cwtl
sub
pusha
inc
jmp
push
xchg
xchg
loope
fcmove
cmp
movsl
and
push
jecxz
mov
cmp
lahf
xor
mov
xchg
inc
sbb
cmp
lds
cmc
ss
push
into
mov
adc
add
adc
xchg
push
rcrb
mov
aad
dec
cmp
pop
test
cmpsl
scas
jno
jbe
in
pop
andb
loopne
mov
shll
outsl
adc
test
dec
adc
dec
iret
cmp
in
sti
shlb
aas
sbb
lods
sub
sti
or
xchg
mov
dec
or
xchg
fimuls
or
test
inc
jg
sbb
cmp
push
ja
cmp
pop
mov
xchg
imul
xor
mov
js
cmc
push
enter
js
nop
push
nop
mov
mov
stos
pop
ret
push
cmp
loop
and
movsb
push
sbb
mov
jae
out
js
mov
mov
jmp
sbb
mov
xor
mov
adc
push
push
fsubrl
mov
insb
and
pop
pop
loop
out
adc
xchg
andl
or
mov
flds
xor
push
pop
out
ret
sbb
push
clc
inc
sbb
pop
imul
jmp
mov
mov
movsl
dec
jb
xchg
mov
popl
and
stos
ror
aas
test
xor
rclb
fs
aaa
cld
mov
clc
jnp
shll
rcll
loop
pop
sbb
imull
imul
cmp
jmp
xchg
stos
sti
mov
or
mov
or
sbb
and
in
roll
movsb
lock
bound
cmpb
ss
xor
push
push
pop
pop
js
and
jmp
int
repnz
mov
inc
mov
std
int
sub
loop
fsubrs
and
flds
insl
pop
cmpsb
sub
mov
cmpsb
clc
inc
push
mov
les
xchg
in
fcomps
sarb
insb
mov
push
das
sub
sbb
dec
push
xchg
cmp
xchg
or
popa
loop
movsl
jns
repnz
mov
adc
add
push
shrb
lds
repnz
scas
nop
pop
popa
notb
inc
into
pusha
out
call
lods
sbb
jge
nop
push
fwait
sub
test
idiv
add
popf
xor
mov
mov
cmp
jo
test
xchg
das
inc
pushf
adc
fsub
popl
cld
movl
and
mov
mul
adc
imul
es
cmp
arpl
addr16
loope
mov
imul
shlb
jno
jmp
daa
mov
repz
xor
outsb
nop
das
cmp
push
pop
sbb
push
add
jne
mov
cmp
popa
xor
mov
ja
xor
rcrb
push
hlt
nop
pop
das
enter
xor
xchg
test
arpl
jle
adc
adc
pop
push
jp
cmp
fisttps
push
outsl
mov
mov
imul
lret
jge
jae
push
pop
ja
mov
or
pop
outsl
lcall
sub
inc
dec
push
lret
pop
xchg
ret
arpl
push
sbb
mov
ret
outsb
es
sub
rcrl
ror
sbb
sbb
mov
jg
cld
xor
aas
sub
sub
xchg
pop
push
xchg
cmpsl
ja
cmp
adc
jl
xchg
dec
xchg
fwait
dec
xchg
dec
movsb
add
popf
outsb
sti
leave
cwtl
push
jb
out
xor
adc
rorl
jno
outsl
inc
cwtl
scas
add
enter
jp
pop
mov
aas
icebp
jne
fs
dec
pop
arpl
push
mov
and
les
jns
push
cmp
add
xchg
push
leave
dec
xor
cmpsb
js
in
loopne
add
mov
pop
inc
and
lahf
adc
jne
push
xor
lods
push
pop
mov
pop
stos
and
ret
jl
jge
and
icebp
dec
mov
addl
das
mov
or
cmp
imul
push
sbb
mov
dec
mov
cwtl
push
xchg
adc
addr16
cli
movsl
jl
es
or
loopne
loopne
rclb
mov
lods
jno
add
jle
insb
mov
mov
add
stos
sbb
pop
negb
cmp
aaa
cld
pop
inc
inc
shlb
push
jns
aas
mov
cmpsl
stc
mov
adc
fadds
sub
shr
xor
push
ret
test
out
push
mov
dec
jecxz
sub
cmp
add
cltd
add
aad
leave
mov
mov
movsl
add
xor
xor
xchg
pop
jge
inc
vmovsd
cmp
pop
cmp
movsb
cwtl
or
inc
rorl
movsb
ror
xorb
fxch
imul
fmul
jle
mov
lds
add
mov
lahf
dec
scas
jns
stos
or
push
cmp
scas
lock
cmp
dec
add
movsb
xor
jo
xchg
xchg
cltd
xchg
cmpsb
xor
jns
insb
push
inc
insl
aaa
ds
xchg
icebp
imul
mov
push
cmpsl
cmp
pop
ror
enter
jp
pop
dec
pop
pop
pusha
popf
aas
out
sub
inc
mov
xor
mov
sub
or
or
enter
or
stc
repnz
jne
jg
or
icebp
cmp
jge
xchg
xor
in
dec
pop
into
pop
sti
ja
add
mov
sub
add
cmpsl
in
sbbl
dec
push
xor
pop
jb
add
pop
xchg
mov
fldt
hlt
insl
mov
in
dec
test
mov
andl
xchg
push
in
mov
jge
sbb
xchg
cmp
sahf
rclb
pop
aaa
add
jae
xor
sub
jne
ret
mov
xchg
lret
jp
xor
lcall
hlt
test
int3
sbb
arpl
jo
cmpsb
cmc
and
xorb
adc
aam
or
mov
push
mov
xchg
pop
test
jbe
mov
cmp
in
cmp
dec
in
insb
shll
imul
or
pop
push
inc
imul
mov
movsb
stos
xchg
fcoms
jge
xchg
lods
jo
test
loope
in
dec
out
mov
aas
xor
cld
setbe
xor
cmc
mov
imul
call
movsb
inc
mov
dec
mov
out
leave
les
testb
leave
sbb
dec
insb
mov
add
mov
shl
sub
outsb
outsb
sub
aad
inc
inc
inc
push
dec
push
or
es
test
xchg
adc
sub
add
test
dec
jno
paddusw
lea
adc
or
and
pop
mov
xchg
jg
adc
lea
jb
fs
pop
out
lcall
mov
inc
das
aas
je
lods
pop
mov
nop
rclb
fwait
lods
jecxz
mov
ds
pushf
add
out
sub
push
xchg
sbb
sahf
and
rcll
inc
push
loopne
pop
test
inc
test
dec
inc
rcll
mov
adc
adc
inc
loop
mov
clc
pop
mov
mov
dec
clc
and
iret
inc
sarl
jb
mov
out
jae
or
jbe
dec
lcall
and
shl
imul
adc
jl
outsl
subb
dec
out
outsb
or
push
pop
int3
daa
jno
push
mov
xor
push
movsb
movsl
addb
mulb
pop
adc
sub
push
outsl
out
pop
ret
adc
mov
out
out
adc
into
out
out
in
nop
xor
adc
and
push
mov
mov
mov
inc
sbb
push
add
fbstp
lock
mov
icebp
mov
notb
lahf
cli
fisttps
inc
cltd
gs
fisttpl
pop
aas
adc
jns
iret
loop
push
aas
sbb
and
ret
inc
call
cmp
pop
mov
insl
testw
in
fildl
sbb
add
cli
sub
push
mov
xchg
and
adcl
sbb
jmp
and
popf
xor
es
fs
loope
adc
mov
cs
shrl
mov
jl
and
add
loope
stos
or
and
arpl
rorl
inc
gs
aas
ljmp
leave
cmp
sbb
ss
mov
andb
jle
dec
addr16
jp
rolb
inc
dec
jb
fs
dec
lds
ret
leave
fsubrs
popf
add
add
push
lods
push
negl
jge
adc
lcall
pop
and
dec
icebp
push
xchg
dec
aaa
fsubr
aas
fdivs
jo
inc
cmovl
mov
cwtl
daa
cli
pop
push
clc
shl
push
xchg
dec
mov
sbb
sahf
std
pop
or
je
mov
inc
stos
es
sbb
mov
jo
push
jg
aam
inc
push
mov
xlat
je
xchg
aaa
stos
or
int
mov
xchg
aas
mov
add
imulb
leave
xor
inc
dec
jecxz
dec
mov
and
int3
jmp
cs
mov
mov
in
push
dec
scas
vmovupd
inc
imul
jae
mov
jno
pop
add
addr16
adc
cli
fisttpll
push
dec
sahf
xchg
jle
rclb
outsb
sub
ljmp
scas
mov
dec
mov
stos
sbbl
push
xor
mov
movzbl
dec
pop
mov
les
cmp
cmp
push
mov
movsb
pushf
out
mov
out
cltd
xorl
mov
jp
icebp
mov
jno
scas
xor
fdivl
xor
cmp
push
lods
gs
mov
sub
ja
push
sub
jno
lds
push
inc
popl
inc
mov
cltd
pusha
add
popa
mov
int3
pop
hlt
xchg
dec
jge
iret
or
dec
gs
int
arpl
pop
into
aaa
outsb
aad
lret
jne
push
test
out
popf
push
mov
repnz
fdivrs
int
jmp
sbb
sbb
negb
pop
test
dec
and
call
xor
mov
dec
push
jmp
pop
xchg
in
mov
movsb
movsl
sbb
repz
cltd
aam
aam
mov
dec
jp
daa
cmpsl
push
xchg
mov
cmpsb
subb
lea
test
or
cmpsl
cmp
shlb
movsl
test
ficomps
add
test
pushf
add
ja
mov
stc
lret
xchg
cwtl
stos
imul
mov
frstor
dec
cli
xchg
leave
pop
repz
pop
pop
mov
adc
dec
xchg
fwait
push
cmp
cli
gs
inc
stos
mov
fs
mov
aad
sahf
jne
addr16
stos
sarl
inc
ret
adc
bound
mov
pop
adc
dec
pop
in
bound
sbb
mov
rclb
movsb
test
loop
pop
movsb
in
iret
mov
frstor
ficoml
adc
sub
dec
addr16
mov
push
repz
and
fnstenv
mov
xchg
xchg
or
mov
jl
loope
cmp
mov
jecxz
sbb
push
jne
popf
fldt
cld
test
lcall
adc
es
out
and
xchg
aas
mov
shl
mov
fwait
or
inc
jl
or
mov
das
popf
les
push
das
jg
cmp
or
dec
fwait
aas
gs
lahf
movsl
and
lret
orl
jae
push
lret
dec
dec
loop
rol
int
test
sbb
dec
mov
mov
or
mov
mov
int
sub
pop
and
inc
les
sbb
stos
jmp
test
ss
sub
and
push
dec
bound
lret
sub
call
movsl
fisttpll
jg
cwtl
push
push
daa
icebp
jg
and
call
imul
dec
outsb
sbb
mov
cmp
and
mov
cmp
pop
pop
jb
mov
iret
addr16
mov
movsl
xchg
pushf
icebp
or
std
jb
mov
jbe
dec
pop
xlat
outsb
test
and
lods
ds
pop
sbb
or
mov
jle
orl
das
mov
pushf
jnp
aam
daa
loop
mov
and
or
loop
sti
xor
gs
daa
or
lods
aas
sub
mov
pop
xor
jg
inc
jo
cmp
add
xor
fs
cmp
jecxz
outsl
or
daa
sub
and
outsl
test
fwait
mov
mov
push
in
les
or
pop
sbb
in
out
lock
ss
mov
mov
inc
icebp
sub
insl
iret
or
and
sahf
and
and
lock
inc
idiv
add
push
stos
and
fdivl
testl
mov
and
decb
add
es
sub
push
cmp
lret
cli
cmp
add
mov
dec
stos
xlat
test
das
push
repnz
daa
add
push
cmp
sub
jne
push
stos
mov
mov
push
xor
sti
repz
adc
cmp
stos
mov
mov
jne
and
pop
fadd
and
sub
addr16
ja
lcall
stos
repz
dec
dec
xchg
es
mov
mov
in
test
movsb
adc
inc
call
xlat
lret
dec
push
pop
adc
shrl
xchg
aaa
sbbb
movsb
jb
jne
cltd
add
es
mov
or
scas
sub
xchg
xchg
mov
or
outsl
loop
mov
nop
push
xchg
sahf
dec
gs
mov
shlb
insb
fxch
mov
xchg
sbb
and
sbb
nop
lods
rcll
roll
lea
sbb
mov
mov
mov
xorb
js
jns
add
jp
scas
mov
setge
sbb
ss
sub
out
inc
repz
xlat
cmc
ret
and
xchg
insb
fcom
xor
inc
in
stos
test
sub
xchg
adc
cmp
out
fmulp
fnstsw
inc
xchg
test
xchg
cld
mov
cli
sarl
add
adc
mov
mov
js
inc
stos
dec
cld
test
lcall
in
mov
add
or
inc
lret
call
cmp
or
sbb
lcall
push
loope
mov
cmp
push
adc
push
cmp
and
pop
add
pop
push
mov
mov
lea
inc
adc
hlt
addr16
or
in
repz
and
and
test
test
fistpll
lea
loopne
cmpb
inc
xor
adc
movsl
sub
jle
lret
fs
push
and
int3
arpl
inc
clc
jecxz
inc
aam
push
leave
pop
dec
jo
push
pop
test
sub
jge
int3
fisubs
mov
scas
ror
jno
xchg
push
jbe
jmp
orb
cmp
pop
out
adc
clc
shrb
mov
or
or
or
test
in
lods
sahf
mov
je
daa
sbb
cmc
dec
cmp
lahf
and
dec
push
inc
push
lods
xchg
xchg
sti
notb
push
mov
movsb
insb
cmp
jne
mov
adc
lds
pop
inc
movsb
ss
arpl
jmp
add
btr
out
inc
pop
mov
jge
adc
shll
fsts
cs
add
orb
cmp
inc
inc
pop
dec
mov
in
mov
fsts
xor
xchg
pop
sbb
mov
loope
je
cmp
xchg
ljmp
mov
adc
xchg
popa
xchg
imul
cmp
cmpl
aam
adc
sub
or
out
imul
pop
push
and
xchg
adc
aaa
add
sub
int3
dec
sbb
pop
xchg
pop
imul
pavgb
iret
fwait
out
xor
sbb
les
cmc
fucomip
addb
roll
arpl
nop
mov
sub
imul
inc
les
xchg
lret
shlb
pushaw
hlt
inc
loopne
xor
or
xchg
jge
es
lds
sub
pop
adcb
pop
test
mov
mov
invd
sbb
adc
jno
out
aam
loop
xor
mov
push
and
and
jae
cli
shrb
inc
movsl
shrl
insb
push
and
xchg
push
cmpsb
movsl
fbld
aad
and
je
adc
js
cld
inc
adc
add
loope
pop
xchg
or
les
jle
xchg
and
dec
cmp
xor
inc
mov
sub
punpckldq
fiaddl
jae
dec
add
push
add
mov
out
nop
push
frstor
ret
sub
pop
cmc
pushf
mov
push
leave
dec
sub
fldt
pop
sarl
es
repnz
mov
jb
orl
xchg
mov
lahf
xor
sub
mov
xor
cli
inc
sbb
dec
stos
notl
je
ljmp
jae
jbe
pop
jno
xor
pop
sbb
cltd
rcrb
cld
icebp
inc
imul
xchg
lds
popf
inc
lahf
inc
ja
sub
rolb
mov
cltd
lcall
int
pop
repz
jge
pushf
mov
scas
mov
lcall
daa
in
jg
cmp
roll
sbb
int
pop
sbb
pushf
mov
dec
sbb
movsb
imul
sbb
mov
aam
or
outsb
mov
inc
lock
jp
mov
dec
leave
dec
dec
mov
mov
ret
xchg
js
inc
js
push
or
and
or
bnd
jbe
addr16
test
cmp
inc
shr
and
push
pushf
pop
jne
dec
mov
loope
lods
aaa
mov
cltd
ljmp
dec
xor
fildl
fiadds
cmpl
fmul
push
test
dec
sbb
xor
cld
lds
into
repz
loope
dec
arpl
insb
xor
call
movsb
addr16
fisttpl
dec
or
xor
std
sbb
dec
push
push
xor
js
xor
jecxz
xor
mov
jne
mov
pop
out
shrb
xor
dec
cli
movsl
add
out
shr
ja
add
nop
dec
jae
mov
inc
inc
adc
arpl
add
repz
int
pop
shlb
lret
out
jns
add
mov
or
fdiv
add
inc
iret
dec
nop
jbe
rcl
out
adc
inc
sbb
inc
add
cld
sub
dec
insb
sti
gs
jge
pop
mov
xchg
push
or
adc
jmp
jge
xlat
cs
test
mov
cmp
mov
adc
nop
dec
xlat
xlat
mov
cmp
jnp
icebp
fiaddl
mov
out
and
lods
aam
mov
das
faddl
in
dec
cmp
mov
fdivrl
push
pushf
sub
imull
adc
aam
ret
lock
enter
cmp
add
push
aam
push
sbb
pusha
pop
out
or
dec
xchg
out
xchg
icebp
arpl
push
push
cmp
mov
mov
or
mov
push
pusha
fistps
mov
ret
inc
jae
mov
lds
lds
and
xor
add
pop
lcall
pop
or
dec
shlb
js
jne
or
cmpsl
cmc
imul
in
in
aas
in
push
fwait
aas
cld
pop
mov
lahf
int3
scas
push
xchg
int3
pop
call
jo
pusha
lds
push
fadd
pop
jp
sahf
addr16
repnz
adc
fcomp
aas
les
xor
dec
call
lea
jbe
mov
in
int
fsubr
sbb
push
iret
bound
mov
lss
or
leave
popa
xchg
test
jg
and
and
sub
dec
xchg
mov
mov
xor
into
movsb
popa
cmp
hlt
push
out
pop
minps
daa
mov
dec
in
mov
data16
or
icebp
lods
mov
int
push
xor
fwait
xchg
pop
orl
fcmovnb
push
popa
movsb
push
mov
xchg
call
pushw
xor
mov
test
dec
pop
movsl
jmp
push
lret
pop
xlat
xor
ficoms
ffree
mov
fcomip
push
or
or
mov
xor
push
in
sub
aad
jl
jp
bound
loop
adc
xor
dec
adc
xchg
fdivrs
stos
insb
mov
mov
fnstenv
inc
dec
rcll
inc
in
pop
cmp
cmp
test
faddl
mov
push
xchg
jno
xchg
push
mov
dec
iret
mov
daa
popf
add
stos
mov
sbb
gs
cmp
fdivrs
cmc
add
cld
out
into
aas
sub
mov
popa
arpl
mov
xchg
add
lret
repz
sbb
into
test
pop
mov
push
push
rorb
mov
pop
mov
xchg
xor
xchg
sub
popf
pop
les
mov
mov
add
scas
ret
lds
cli
or
call
insb
arpl
pop
push
shll
adc
inc
sbb
xor
inc
push
jae
shrb
gs
in
mov
nop
pusha
lods
rorl
jo
notb
pusha
jg
cmp
push
bound
mov
ljmp
int3
arpl
idivl
xor
adc
lds
adc
ficompl
leave
fs
hlt
mov
divb
shlb
das
test
imul
pop
movsb
push
cmp
push
or
add
xor
push
mov
mov
mov
lods
sbb
int3
pop
and
mov
adc
cmp
sbb
ljmp
in
std
jg
push
sahf
jl,pn
or
xchg
int
std
dec
pushf
das
nop
dec
cmp
cld
mov
stc
stc
dec
mov
jge
push
movsl
inc
push
enter
lods
ja
mov
rclb
mov
xchg
lods
bswap
cmpsl
bound
imul
mulb
xor
and
jno
sti
jno
mov
addr16
loopne
lahf
cmp
fistl
mov
lock
or
cmpsb
xchg
xlat
fdivr
sbb
call
mov
cltd
mov
cwtl
pop
mov
ss
stc
daa
arpl
jp
push
scas
aad
jo
es
ss
mov
roll
xchg
push
repz
sbb
push
mov
mov
cmp
pop
js,pt
rcll
mov
cmp
xor
cmp
ret
cwtl
out
push
push
test
mov
sbb
adc
and
repnz
and
enter
mov
loop
scas
inc
push
outsl
pusha
xor
pusha
mov
aas
mov
in
loope
repnz
push
adc
mov
push
in
enter
xchg
push
cld
jg
sub
adc
je
push
in
jmp
in
mov
ret
data16
cmp
lods
dec
mov
lahf
shll
jl
push
mov
fdiv
push
xchg
sar
sbb
repz
adc
mov
xor
movsl
out
dec
dec
mov
mov
fistps
and
imul
pop
mov
fcmovb
jle
out
xchg
arpl
dec
dec
jnp
cli
sarb
iret
mov
xchg
or
jbe
xchg
loopne
ds
xor
inc
cmp
xor
rcrb
imul
or
imul
fists
bound
movl
sub
push
pop
lcall
andps
test
add
adc
xchg
sbb
push
cmp
cmp
add
aas
dec
or
subb
test
inc
mov
cwtl
std
jl
aam
mov
dec
nop
mov
in
bound
jge
shll
pop
cmp
pop
adc
push
lds
add
std
mov
mov
pop
rcrb
rcrb
xor
ss
andb
fcomp
sbb
push
pop
or
fdivl
mov
fwait
imul
icebp
pop
xor
and
jbe
push
sub
push
push
cmp
cmp
sbb
es
int
shll
std
in
sbb
addr16
bnd
hlt
in
ret
leave
cmp
adc
xchg
dec
jge
rorb
clc
clc
mov
fmuls
sbbb
adc
fsubs
test
test
loopne
fcoms
imul
adc
in
loopne
lea
imul
out
aam
daa
inc
orl
fdivrs
lea
cmpsb
loope
insl
fidivs
scas
gs
mov
mov
xor
push
cld
jecxz
inc
push
clc
or
sbb
scas
sub
lahf
gs
js
addr16
jp
fcmovb
dec
sub
pop
bound
mov
aad
mov
xchg
xchg
loope
shlb
jle
jae
xchg
ljmp
test
arpl
imul
lock
arpl
dec
dec
lock
inc
xchg
dec
cmp
insl
push
out
pusha
jl
dec
lea
in
scas
mov
out
xchg
sbb
outsl
inc
notl
or
or
ja
scas
ja
addr16
jecxz
dec
mov
flds
adc
xor
sti
stc
jmp
nop
ficoms
fisubrs
sbb
mov
or
xchg
pushf
fwait
inc
out
in
mov
jns
popf
dec
lahf
xchg
js
and
cmp
movsb
pop
shll
clc
sahf
add
rcl
cmp
lock
push
cmpsl
cli
cmc
cmp
addr16
mov
ljmp
sub
addl
mov
les
test
into
sub
pop
xor
push
xchg
cmp
ljmp
or
dec
inc
dec
jns
aas
lcall
sub
mov
push
in
std
jp
cmp
cmp
retw
test
dec
mov
or
popa
pop
enter
es
shrl
cmpb
mov
pop
jl
ficoml
and
cmpsb
sarb
xchg
mov
pop
pop
adc
mov
mov
jnp
xsaves
mov
rclb
dec
addl
repz
add
imul
lret
cltd
adc
gs
popf
xor
or
out
ret
xchg
in
inc
jnp
cmp
movsb
les
sarl
mov
loopne
jecxz
lods
iret
pop
nop
push
dec
mov
dec
lods
pop
xor
or
and
or
test
cmc
into
iret
ret
sbb
les
and
inc
daa
in
enter
out
mov
push
cs
xchg
in
sbb
jle
lcall
scas
sbb
sbb
add
cmp
pop
or
and
mov
mov
add
test
int
js
sbb
repz
add
push
xchg
push
movsb
push
or
outsb
movsl
scas
mov
jmp
push
fstps
inc
xchg
sti
ds
xchg
or
fsub
pusha
dec
repz
aam
arpl
enter
xchg
xchg
inc
mov
pop
xchg
pop
mov
test
pop
orb
xor
jl
iret
inc
aaa
mov
sbb
push
fcmove
adc
mov
call
lods
out
and
pop
pop
mov
lock
int3
aaa
je
cmp
or
ljmp
outsb
dec
sbbb
mov
push
jecxz,pn
test
xchg
fldenv
cwtl
dec
fidivrl
add
pusha
xor
push
push
or
iret
in
jno
pop
push
mov
push
shll
or
adc
fisttpll
fwait
aam
mov
cmp
jl
psubsw
or
mov
sub
mul
das
push
int3
dec
cmpb
xchg
popf
mov
dec
stc
stc
fsub
xor
inc
jb
mov
movsb
shlb
and
mov
stc
ljmp
cs
mov
orb
js
cltd
dec
mov
pop
sbb
fcompl
repz
out
xchg
xor
xor
stos
fcmovnbe
sub
push
cmp
sub
push
dec
mov
and
leave
js
dec
aaa
pop
sbb
and
aam
aas
or
cmp
pushf
mov
or
pushf
test
cld
leave
movsl
cli
jp
dec
push
andb
std
lock
sbb
jg
lods
cltd
mov
push
cmpb
shll
aas
mov
mov
dec
jmp
movsb
push
and
leave
out
push
test
jns
ljmp
out
xor
adc
loop
push
pop
adc
push
fdivs
xor
xor
test
out
or
aas
lds
loope
jp
loope
cmp
xor
sub
in
mov
dec
add
mov
sahf
and
xor
adcl
cli
imul
pusha
jmp
sbb
or
ss
jecxz
ja
pop
ljmp
pop
int3
imul
or
cmp
adc
push
and
mov
sub
xchg
xor
push
imul
mov
lahf
dec
enter
pop
rcll
jge
pop
gs
lock
push
mov
fs
dec
push
lahf
stc
fs
lcall
dec
sbb
jp
shll
xor
in
pop
jl
mov
jmp
xlat
fucomi
out
sbb
sbb
push
je
mov
movsl
and
add
sahf
push
push
loope
out
push
dec
addb
out
push
xor
xor
cwtl
arpl
pop
std
dec
fcompl
xlat
pop
repnz
sub
xor
mov
cmp
sbb
fldt
cltd
daa
sar
dec
mov
dec
jae
cmp
mov
in
jbe
call
mov
push
inc
and
and
dec
cmp
inc
sub
and
jge
lods
pop
xor
imul
dec
xor
nop
imul
adcl
add
xchg
push
push
and
lret
mov
inc
add
sub
inc
enter
and
loop
pop
shlb
cmp
or
mov
xlat
jb
dec
dec
cwtl
fcmovu
jns
adc
test
maxps
pushf
cmpsl
pop
inc
jl
sub
pop
mov
and
out
fcmovu
jne
mov
test
mov
push
stos
imull
rcrb
mov
push
jo
adc
mov
mov
dec
mov
mov
mov
jp
inc
dec
jo
pop
mov
lea
outsb
aad
mov
sbb
js
ljmp
mov
lcall
test
call
insl
xor
sbb
pop
add
jp
mov
push
add
or
and
lock
stos
or
das
inc
stc
scas
scas
clc
addr16
fcmovb
cs
hlt
push
mov
fldl
and
xor
cmp
dec
je
add
out
and
push
mov
test
inc
lods
jmp
std
mov
cli
stos
mov
in
mov
sub
les
xchg
sbb
lds
insl
sub
jb
sub
adc
jmp
dec
sahf
cwtl
mov
ljmp
cli
jmp
add
inc
sbb
sub
pop
push
push
gs
idivl
loop
cmpsl
mov
insb
lahf
dec
or
repz
xchg
push
loop
xor
inc
jmp
ds
add
aaa
inc
subl
fidivrl
lea
ret
dec
mov
sbb
xlat
repz
inc
cmp
push
sub
sahf
push
sub
sub
testl
push
push
cmp
cld
sahf
mov
shll
dec
dec
cltd
lahf
iret
loopne
or
inc
divl
or
dec
cmp
pop
pop
cltd
jle
mov
fsubr
into
fwait
and
fimull
push
scas
and
les
insl
fadd
test
out
idiv
or
xlat
cmp
xchg
sbb
js
in
xor
test
imul
in
mov
int
mov
jle
and
or
and
out
aaa
es
jbe
adc
fsts
divb
inc
vaddsubps
sti
int3
push
fs
pop
xchg
std
mov
add
rcll
mov
mov
repnz
shll
lock
dec
sbb
cli
and
jmp
stos
aad
div
or
bound
mov
test
mov
popf
cli
mov
js
stos
cltd
imul
mov
in
push
push
jbe
mov
out
subl
jo
in
xchg
pop
push
xchg
cwtl
sahf
dec
adc
cs
push
lcall
ja
mov
sub
adc
cmc
mov
pslld
xchg
and
jg
dec
in
fdivr
out
mov
nop
shrb
mov
cmpsb
bound
lahf
dec
mov
mov
jge
jecxz
out
fcompl
pop
inc
xorl
push
or
mov
push
lret
push
nop
orl
jbe
movb
repz
pop
rcll
pop
lock
or
in
cld
push
leave
mov
push
test
sub
stc
cmp
into
push
out
jo
sub
test
sbb
jbe
push
push
push
dec
pusha
outsb
cmp
mov
das
stos
in
pop
repz
int
popf
std
fmull
movsb
std
es
ret
addr16
jns
cs
jecxz
dec
push
imul
and
sub
ljmp
or
aas
jmp
add
inc
xlat
stos
jp
cmp
pop
jge
mov
mov
inc
sbb
loope
ds
push
aam
in
xor
dec
sbb
hlt
cmpsb
lahf
scas
pop
cmpl
movb
rorl
aas
mov
lcall
aad
test
mov
or
shll
hlt
mov
dec
lods
mov
ret
push
fstp
dec
sbb
cmp
lahf
or
jae
fildll
idivl
sahf
scas
xchg
stos
leave
das
test
loop
xchg
loop
adc
sbb
enter
push
aad
cmc
mov
inc
dec
xor
lahf
or
lods
jne
dec
cmpsb
mov
xor
int
icebp
dec
push
movsb
jge
sub
clc
insb
xor
or
jmp
push
push
add
mov
stos
pop
mov
fisttpl
pop
inc
mov
push
and
les
mov
push
repz
ja
xor
andl
lds
xor
or
insl
jae
lret
lods
inc
pop
pop
dec
cmc
sahf
jmp
stos
cmp
in
cmp
je
fidivl
in
lds
loop
iret
sub
gs
lods
mov
cli
jb
mov
adc
frstor
add
outsl
sub
sub
mov
push
push
jge
jbe
pop
fs
in
test
pusha
push
scas
jbe
mov
inc
mov
mov
xchg
dec
pop
mov
fwait
hlt
dec
fidivl
xchg
rcrl
cmpsb
sbb
inc
loopne
add
mov
repz
mov
cmpsl
push
sub
shll
adc
mov
mov
aaa
cltd
data16
test
and
sub
cmc
fists
sub
adc
or
cmp
into
or
xlat
inc
mov
adc
mov
je
test
popl
jge
jbe
mov
push
mov
sub
mov
xchg
outsw
outsb
xor
dec
js
add
xor
cld
out
rcrl
sub
dec
dec
or
dec
push
add
decb
adc
lcall
mov
popa
aad
cli
pop
cmp
xchg
faddp
mov
insl
adc
insb
popf
out
push
outsl
and
les
xchg
sub
mov
mov
fdivrp
mov
fwait
aam
xor
aad
mov
ja
add
pop
dec
xchg
bound
mov
adc
adc
xchg
stos
mov
mov
jmp
pcmpeqw
aam
xlat
cmp
popa
mov
ja
ret
call
jecxz
mov
push
add
mov
sub
push
cmc
mov
cltd
outsb
cld
xchg
stos
lea
push
dec
arpl
call
test
dec
popa
push
aaa
push
dec
cli
adc
rcr
push
js
sub
aaa
mov
and
xor
std
test
pop
mov
cltd
dec
push
pop
dec
mov
mov
pop
inc
popa
roll
mov
xchg
fists
test
sub
shlb
sahf
push
sub
testl
mov
js
in
into
mov
int
sub
repz
mov
into
cltd
xchg
xchg
lret
popa
xlat
sub
mov
insb
pusha
and
push
mov
incb
addr16
lea
test
mov
cmp
in
sbb
js
xor
sub
loope
jp
adc
testb
mov
inc
dec
pop
lcall
divl
sbbb
inc
jg
sbb
fimull
push
push
pop
push
or
lock
lret
gs
mov
push
cmpsb
leave
lods
lds
gs
in
jp
xor
ret
fs
sarl
mov
add
in
jge
mov
dec
jle
idivb
ljmpw
test
mov
aaa
pop
mov
fbld
or
adc
cmp
mov
ss
cmp
xor
fsubrl
mov
push
pop
inc
sbbl
mov
push
nop
popa
mov
mov
movsl
jb
mov
mov
loop
repnz
pushf
inc
lcall
lea
xlat
jg
enter
pop
fadds
jmp
sahf
es
fildl
loop
or
adc
adc
aas
dec
dec
pop
stc
xchg
push
xchg
or
push
outsl
out
dec
jns
fcoml
xor
adc
cmovl
mov
lea
test
daa
inc
movsb
push
rorl
bound
xchg
scas
fistl
decl
push
les
sar
dec
into
mov
shrl
xchg
add
in
pop
cmp
enter
push
cmp
mov
enter
sbb
inc
add
mov
roll
cmp
xor
mov
adc
or
test
xor
sbb
insb
bswap
add
idivb
lret
stos
insb
rep
sub
insl
rcrl
mov
dec
mov
mov
mov
xor
enter
popa
imul
mov
pop
insl
mov
enter
shll
outsb
or
mov
shrd
insb
inc
ret
jg
sbbb
sbb
pop
insb
push
sti
scas
fwait
cmpsl
fiadds
mov
stc
adc
jge
pop
sub
addr16
test
and
and
sbb
cmp
push
push
cld
fldl
jp
sub
out
cmp
or
rcrl
insb
pop
push
popf
push
cs
xor
mov
or
lea
xor
mov
cld
in
imulb
xchg
push
jp
push
or
mov
and
es
sub
aas
mov
add
pushl
js
ret
xchg
xchg
fwait
dec
adc
pop
nop
ficoms
and
je
rcl
loopne
jmp
lahf
dec
and
push
mov
jl
mov
mov
push
pop
mov
test
push
push
icebp
inc
lds
pop
xor
add
xchg
idivb
or
pusha
pop
ss
adc
xor
ljmp
jns
movsl
jmp
fxch
push
incb
fwait
inc
lret
mov
xchg
adc
fisttpl
lcall
fmul
std
lret
or
push
add
mov
cli
mov
inc
mov
pop
push
imul
adc
scas
fnstenv
cmpsl
and
push
cmc
adc
mov
inc
adc
xor
icebp
inc
sbb
clc
bound
mov
mov
movsb
je
cmp
nop
stos
addr16
int3
hlt
mov
adc
xchg
repz
test
outsb
stc
mov
adc
nop
add
mov
out
int3
pop
add
hlt
je
jb
mov
test
xchg
mov
lcall
mov
sahf
xchg
cmp
and
pushl
cmpsl
mov
inc
int3
out
sub
xor
xchg
dec
mov
fists
fwait
inc
adc
lods
mov
xor
out
sub
lods
outsb
ror
jge
out
xchg
jmp
push
cmp
sub
sub
test
mov
xor
jecxz
mov
sub
add
loopne
loop
mov
mov
lods
add
xchg
add
arpl
mov
notl
pushf
sub
aas
jo
lret
sub
mov
lock
jb
and
mov
lds
adc
orb
loopne
pop
sub
inc
out
jp
cmp
mov
xchg
and
idiv
mov
xor
decb
cmp
sarb
jg
cmp
fisttpl
and
jne
mov
push
ret
jae
push
push
sbb
outsl
xchg
dec
sti
sbb
aad
mov
add
aas
test
mov
inc
je
lods
fcomi
adc
shlb
leave
jo
fcmovu
sub
pushf
stc
leave
sbb
vpshaw
fimuls
es
test
dec
mov
bound
jo
repz
xor
out
and
lock
and
stc
lcall
xor
jb
push
xchg
dec
jno
and
fs
dec
cltd
hlt
pop
adc
outsl
add
jno
adc
sahf
jle
mov
insb
jle
xchg
mov
imul
adc
xorl
cmc
rcll
sub
je
adc
xor
pop
stos
cmp
imul
mov
add
jg
mov
xor
call
enter
mov
outsb
mov
outsb
xor
lods
fcmovnu
jns
adc
inc
cmc
dec
fidivrs
stc
addr16
lock
push
aam
inc
mov
sahf
pop
adc
nop
jno
pop
into
inc
xchg
jae
scas
jnp
stos
cmp
cmp
imul
mov
and
fcmovnbe
imul
mov
loopne
sub
lahf
sub
jae
jmp
lock
pop
cld
inc
in
jle
jecxz
lods
mov
stc
call
adc
mov
cwtl
fstpl
pop
mov
or
jge
in
add
push
or
or
decl
push
imul
mov
sahf
push
jle
fwait
push
lcall
fs
push
or
shll
and
subb
mov
negb
push
mov
je
rcll
lahf
in
push
or
aam
xor
pop
sarl
lret
xchg
call
into
push
daa
mov
cmp
daa
sbb
pop
das
adc
cli
out
ret
cmpsl
or
xor
mov
mov
cmc
gs
pop
jge
and
pop
xchg
push
xchg
mov
test
jl
fmuls
pop
adc
test
test
push
clc
adc
in
adc
shlb
adc
das
push
fsubl
push
loope
cmp
push
fbld
mov
mov
inc
cmp
and
jecxz
sbb
test
pop
add
push
cmp
fimull
icebp
test
jge
repnz
pop
mov
imul
adc
add
pop
iret
jle
adc
jb
loop
sub
fcmovnb
fcmove
xor
sahf
aaa
cmp
mov
push
add
xchg
add
adc
pop
sarl
xor
repnz
lahf
insb
push
repz
aas
xor
push
les
fidivs
xchg
add
push
mov
dec
cli
sbb
lock
lock
call
insb
iret
and
imul
mov
pop
sub
mov
sar
in
sbb
mov
in
xlat
std
and
push
pop
and
fcoml
pop
add
cli
adc
pop
test
in
test
mov
scas
sub
mov
jg
in
fmull
push
inc
push
inc
push
fadd
cmp
cmpb
pop
mov
scas
jns
aaa
in
notb
mov
jle
dec
mov
xchg
ret
loop
insb
cli
jle
movsl
adc
mov
iret
or
sbb
adc
inc
jb
call
pop
cli
pop
mov
sbb
sbbl
dec
pop
push
jno
lahf
pop
adc
sub
aaa
add
sub
mov
sbb
xor
out
mov
xor
and
in
add
das
lret
mov
sbb
mov
mov
popa
ss
and
xchg
lret
jecxz
enter
inc
sub
jg
push
call
cmp
fstpt
lods
or
jno
js
fimull
sahf
pop
jl
add
repz
and
iret
dec
mov
and
cmp
sbb
mov
mov
jmp
sub
icebp
jmp
bound
loopne
dec
add
jns
lcall
sahf
leave
mov
dec
push
loope
sbb
sbb
sbb
sub
dec
mov
xor
ret
cwtl
leave
jnp
mov
dec
jno
inc
cmp
or
test
mov
in
mov
mov
mov
ljmp
adc
mov
aam
dec
xlat
lret
and
adc
jb
xlat
dec
pop
jns
vpsadbw
mov
daa
negb
pop
push
mov
pop
rcrl
or
in
cld
dec
mov
int
mov
dec
lock
ficompl
cmp
aaa
add
imul
mov
clc
xor
cmc
add
pop
mov
shrl
sti
mov
ret
jno
pushf
out
imulb
or
sbb
pop
mov
in
lds
js
pop
aam
or
push
mov
jbe
in
xor
jnp
jae
pop
push
push
xor
xor
add
sub
dec
test
out
fs
jo
rclb
adc
lea
xchg
leave
std
dec
xchg
rorb
mov
cld
nop
popf
mov
mov
scas
add
push
das
mov
push
mov
pop
adcb
mov
and
sbbb
les
and
int
push
jecxz
in
pop
jmp
sbb
xchg
sbb
add
dec
cld
dec
movsl
pop
or
loop
loop
clc
inc
push
mov
imul
pop
test
std
lret
lea
add
aaa
or
mov
daa
inc
mov
and
or
mov
fdivrs
in
cmp
sbb
in
ret
ljmp
jp
icebp
push
fwait
movsl
sbb
inc
call
cmp
adc
jns
xor
loope
push
testl
cmp
sbb
imul
inc
or
add
push
outsl
aam
std
imul
mov
pop
sbb
xchg
sar
adc
out
ret
movsl
push
pop
jmp
aas
mov
addr16
in
xchg
jmp
out
divb
mov
mov
mov
subb
pusha
inc
fs
in
xor
fdivrs
unpcklps
movsl
add
mov
mull
sti
das
push
test
ja
xor
or
pusha
ja
and
int3
mov
mov
mov
data16
xor
out
loope
mov
pop
insl
xor
mov
sarl
cmc
dec
in
xor
notb
or
pop
xlat
push
int
in
in
mov
jp
pop
adc
nop
xor
xchg
xlat
enter
push
or
aaa
mov
add
fsubl
jg
dec
iret
xlat
push
les
dec
ret
js
out
icebp
sbb
aam
push
lods
enter
or
adc
push
nop
test
icebp
lds
dec
in
test
adc
push
or
cmp
cmp
mov
dec
xchg
and
mov
xchg
sbb
sbb
loope
arpl
in
sbb
push
dec
imul
lahf
push
mov
pop
stc
stc
sbb
ret
ds
sbb
nop
adc
mov
xchg
outsl
call
loop
aas
pop
js
mov
mov
filds
sub
stos
fists
scas
xchg
mov
sub
stc
faddl
out
insl
out
mov
jmp
fistps
mov
adc
and
out
aas
pop
pop
loopne
int3
push
rorl
stos
or
push
out
test
dec
nop
fcompl
dec
sub
out
mov
popf
push
inc
push
repz
ret
cli
xor
pop
xor
push
adc
jns
ljmp
cmp
mov
adc
push
mov
shll
test
push
stos
movsb
fwait
push
inc
shll
test
movsb
push
xor
xchg
and
int3
pop
dec
pop
add
pop
iret
jnp
rorl
xchg
popa
xchg
fwait
inc
inc
lret
adc
add
stos
aaa
lret
dec
lds
orl
insb
out
dec
out
or
jnp
outsb
sbb
xchg
int3
jmp
mov
sub
sub
test
add
test
push
add
adc
mov
cli
adc
pop
jmp
add
pop
sub
andb
mov
out
and
mov
cmp
ret
hlt
dec
push
sub
sub
jmp
hlt
pushf
sahf
dec
mov
ljmp
in
dec
mov
in
insl
sub
fcmovnbe
lock
sbb
int
repz
jg
js
jmp
pop
lahf
cmp
pusha
add
out
push
cmp
lcall
enter
xor
ret
mov
repz
movsb
and
lahf
dec
mov
adc
cwtl
stos
lret
cmp
mov
aam
xchg
clc
and
sub
xchg
adc
movsb
fistpll
sbb
inc
das
ret
cmpsb
xchg
cmpsb
dec
sbb
test
mov
and
inc
imulb
adc
imul
inc
adc
xor
inc
rolb
test
xchg
xor
hlt
inc
xchg
cmp
ja
cwtl
push
ja
fisttpl
cmp
jne
movsl
cmp
stos
sti
gs
sbb
in
pop
ja
sub
mov
rclb
xlat
mov
jns
out
shlb
cmp
shlb
iret
or
and
pop
xchg
sbb
mov
sbb
out
call
shll
push
lret
stos
lea
jle
test
xchg
outsb
mov
mov
int
iret
jg
push
pop
or
mov
jecxz
fistpl
cltd
xor
push
out
ljmp
fildl
mov
dec
and
fbld
mov
xchg
mov
or
and
sbb
loopne
scas
outsb
xchg
pop
lret
mov
jmp
int3
xchg
xor
aam
xchg
lret
insl
gs
mov
dec
dec
fwait
dec
dec
negl
cmp
clc
push
xor
dec
adc
movsb
into
mov
mov
jns,pt
cwtl
sbb
add
and
cli
mov
es
cmpsl
push
mov
xor
mov
popa
dec
jle
outsl
and
jns
inc
ret
sbb
fmuls
push
movsl
jge
cmp
in
push
jp
push
repz
mov
pop
mov
fiadds
push
sbb
lret
jg
pop
mov
cld
and
cmp
pop
hlt
js
daa
xor
mov
cmp
mov
mov
xor
int3
into
jmp
add
in
ret
xchg
iret
les
xchg
gs
mov
fwait
enter
dec
pop
cmc
out
js
int
push
sub
inc
shrl
int3
js
pop
add
sub
out
fs
add
out
sub
decb
push
mov
out
rorl
ljmp
inc
mov
jl
lods
add
push
int3
and
andl
loope
push
jo
outsl
or
cmpsb
mov
popf
lods
jmp
fidivs
daa
hlt
inc
cmc
lcall
leave
xchg
dec
push
jg
inc
adc
jo,pt
dec
dec
adc
lcall
ljmp
push
xchg
loope
sub
fs
mov
rcrl
jg
out
hlt
or
push
push
mov
fs
jnp
add
lahf
push
out
jle
aam
jbe
mov
repnz
dec
mov
push
imul
inc
sub
insl
adc
clc
mov
xor
adc
and
fsubs
jl
adc
cltd
jbe
dec
inc
repnz
lret
sub
mov
cmp
cld
insb
and
lahf
leave
and
xor
sbb
outsl
or
repnz
mov
sbb
jae
cmp
sbb
das
sbb
mov
jo
pop
pop
mov
sub
les
xchg
xchg
mov
fadd
lahf
sub
jecxz
and
scas
test
xchg
pop
xor
adc
mov
outsb
jge
stos
cmpsl
out
xchg
xchg
arpl
lods
jle
inc
dec
xor
rcll
cmc
sbb
stos
jmp
mov
adc
dec
xchg
das
adc
xor
push
arpl
aas
jne
imul
fnstcw
lock
insl
lret
scas
inc
cmp
mov
ja
leave
xchg
fstl
scas
call
mov
add
mov
test
shrl
mov
rcl
push
lock
movl
stos
pop
bound
sbb
outsb
fs
cmp
xor
sub
pop
subb
push
ja
mov
mov
pop
orl
mov
sarl
rcrl
cmp
in
into
jge
in
arpl
mov
sub
fwait
xor
dec
leave
mov
int3
movsl
mov
outsb
add
mov
mov
addr16
mov
push
xlat
mov
sub
imul
hlt
cmp
mov
rcrl
js
sub
dec
adc
mov
ret
inc
sbb
mov
test
jo
mov
mov
sbb
or
mov
add
add
sub
lods
ljmp
or
mov
insl
push
popa
push
mov
leave
xchg
mull
mov
ja
cli
pop
dec
loop
add
mov
mov
cmp
jl
cmpsl
imul
pop
cmp
dec
sub
into
int3
ss
cmp
aam
mov
xchg
xchg
loopne
sub
enter
and
dec
pop
pushf
ret
cwtl
sub
and
dec
push
dec
add
jmp
dec
lcall
ret
in
stos
lcall
loope
adc
inc
mov
or
fs
leave
js
adc
stos
mov
out
cmpsb
and
push
fiadds
and
mov
inc
and
pop
xchg
push
xchg
and
xor
or
aad
pop
pop
mov
dec
js
adc
lods
das
shll
inc
imul
fwait
mov
lods
jbe
insb
jp
out
in
mov
add
lidtl
sti
mov
sub
imul
jle
jge
pusha
add
orb
test
push
fists
fbstp
or
push
sub
mov
leave
ds
and
jo
mov
notb
addr16
imul
pop
movsb
mull
dec
es
fmuls
rep
lret
xor
jecxz
xchg
jecxz
mov
jp
jae
mov
or
addb
jle
push
pop
jecxz
jmp
push
int
xor
jb
stos
dec
enter
xchg
pusha
add
jl
sbb
inc
lods
xchg
mov
dec
adc
insl
ja
xchg
or
push
movsb
xor
out
inc
nop
xchg
sub
orb
fadd
insb
je
mov
mov
push
ds
jecxz
test
cmpsb
push
lret
xor
and
out
and
jmp
sub
push
or
adc
adc
or
pop
pop
xor
outsb
jns
dec
add
loopne
sbb
cmp
nop
add
addr16
stos
out
xchg
aam
pop
mov
mov
jmp
ds
xchg
outsl
push
call
ffreep
aam
shlb
std
call
xor
mov
std
push
arpl
cs
push
mov
rorb
inc
adcb
sbb
cmp
sbb
popa
cld
ret
sbb
cmp
inc
xchg
jbe
dec
mov
jl
jbe
and
in
std
shlb
add
mov
add
push
leave
icebp
arpl
jae
shrb
adc
push
inc
sbbl
imul
inc
lea
loopne
lea
inc
xchg
sub
or
or
addr16
dec
jp
dec
sbb
bound
into
add
cmc
xor
push
xor
popf
mov
sub
repz
jle
or
push
popa
sub
mov
daa
call
or
shll
js
outsl
push
cwtl
sar
fwait
vandps
enter
xchg
mov
icebp
dec
clc
orl
movsl
mov
mov
rolb
or
or
jmp
les
dec
push
data16
sbb
cmpl
out
sbb
cmpsb
das
xor
fwait
jge
leave
lret
lret
dec
cmp
jo
ss
jmp
push
cltd
shll
inc
cmp
aad
addr16
and
mov
pop
enter
dec
stos
mov
mov
pop
loope
lret
adc
mov
mov
leave
jp
orb
and
cmpsl
xchg
nop
inc
pop
enter
fwait
lgs
mov
mov
pop
mov
xor
jne
int3
mov
mov
mov
pop
jecxz
out
xchg
fcoml
shrl
jp
addr16
es
aad
outsl
pop
scas
push
adc
negb
mov
dec
mov
sbb
pushf
pop
jg
sti
mov
outsb
popa
cs
test
mov
cld
rol
lahf
xor
mov
pop
fmulp
ret
dec
mov
xor
cltd
icebp
sbb
add
movl
jbe
jns
mov
push
cmpsb
sub
dec
loopne
push
dec
jp
sub
inc
or
cmp
aas
inc
push
mov
pusha
lret
pop
dec
pop
pop
or
imul
add
and
or
arpl
xor
xor
push
aas
scas
hlt
addr16
mov
jge
idiv
inc
or
fsubrp
pop
call
sub
decb
stos
adc
and
jmp
or
dec
jbe
mov
mov
xchg
pop
insb
jb
imul
sbb
jecxz
shr
or
lock
pop
and
pop
vmaxps
mov
ret
xor
push
xlat
jmp
or
xor
mov
fisubl
jg
bound
aam
push
movsb
jno
cli
arpl
nop
rolb
ja
in
rcll
mov
mov
sub
into
enter
jbe
add
mov
xchg
loop
loope
test
fwait
lcall
out
test
pushf
testl
decb
dec
add
rolb
mov
mov
mov
sbb
addr16
or
inc
or
bound
push
and
ret
push
shr
loop
fstps
dec
inc
ss
mov
ret
mov
imul
xchg
test
rcll
mov
test
addl
xchg
ror
or
sbb
push
in
or
lods
mov
pusha
xchg
loope
into
cmc
jnp
adc
sub
mov
or
adc
call
cli
inc
in
xchg
bound
imul
clc
pop
aam
fnstsw
fiadds
jmp
xor
clc
insl
popa
mov
in
sub
add
nop
loop
rolb
mov
rcl
test
hlt
inc
mov
fstl
cmp
xor
pop
cli
pop
push
push
jae
xorl
mov
lahf
pop
xchg
xchg
cmpl
mov
sub
ss
xchg
or
xchg
push
sbb
add
jno
fs
out
mov
in
xlat
sbb
mov
in
filds
push
cltd
or
mov
sahf
lahf
pop
cmp
iret
push
push
mulb
jae
mov
adc
cmp
outsb
mov
mov
ss
mov
jp
inc
iret
into
adc
int3
sbbl
pop
loope
fbstp
rcll
gs
ficoml
divb
jmp
or
jmp
cmp
mov
fucom
or
jmp
icebp
inc
fnstcw
iret
movsl
dec
mov
mov
push
add
outsl
outsb
mov
imul
jo
mov
fcoms
sbb
clc
lock
negb
pop
shl
sub
mov
mov
dec
xor
mov
lret
movsb
xchg
mull
mov
jae
pushf
sti
testb
rcll
mov
push
xchg
stc
repnz
ljmp
sbb
pop
push
sbb
je
mov
push
xchg
mov
test
repz
mov
and
xchg
cmc
fistl
jne
popa
inc
dec
aam
xchg
iret
outsb
out
jb
in
push
insb
cmp
and
sbb
bound
sub
outsl
jo
push
xchg
insb
gs
cmp
outsb
jmp
lcall
arpl
mov
rorb
mov
cli
int
cmp
pop
mov
movsb
push
cmp
js
sbb
xchg
stos
nop
out
inc
iret
xchg
nop
dec
mov
push
inc
mov
and
stc
scas
add
dec
cmp
loope
push
dec
cmp
add
ret
shlb
sub
adc
or
sbb
adc
jecxz
movsl
pop
mov
cmpsw
fstps
mov
lret
xor
or
jb
cli
pop
pushf
add
std
leave
aam
loop
scas
cmp
stos
lret
xchg
insl
sub
add
mov
movsl
mov
mov
push
mov
jnp
mov
mov
shrb
mov
pop
push
inc
cwtl
xchg
dec
mov
push
inc
add
dec
mov
push
dec
xor
adc
movsb
psubusw
lds
divb
out
mov
xor
xor
sbb
cmpxchg
aam
pop
or
sub
sub
mov
pop
lods
xchg
imul
sbb
fwait
decb
lahf
mov
mov
faddl
or
and
jg
daa
adc
mov
ret
cwtl
adc
or
test
jnp
and
std
mov
movsl
and
lods
and
push
loop
sbb
in
bound
int
pushf
add
ss
cmp
add
sbb
mov
ljmp
je
mov
xchg
cmp
mov
cltd
jge
jo
testl
mov
and
mov
mov
fs
cmp
pop
jo
sbb
and
mov
inc
cwtl
and
gs
jno
lea
cmpsl
insl
lcall
rorl
push
push
dec
test
out
mov
lock
sub
rcll
repz
jge
adc
ljmp
ss
pushf
int3
cmp
pop
jecxz
adc
adc
shl
mov
or
mov
xchg
lahf
add
push
push
nop
rcr
sbb
ss
jp
mov
pop
jl
cld
mov
lret
pop
mov
push
mov
insl
pop
sahf
aad
lahf
xor
mov
test
cmpl
adc
int
and
mov
adc
out
fstl
push
and
dec
pop
mov
adc
je
sub
fxch
fistpll
out
dec
gs
xchg
aad
cli
push
insl
shlb
lods
ja
sbb
jecxz
in
push
mov
cwtl
cmp
mov
ret
jp
adc
out
push
xor
xchg
leave
cmpsl
int3
shr
je
push
add
push
fs
cli
leave
fcomps
jmp
jbe
les
mov
xchg
in
insl
mov
rolb
sbb
std
in
shll
xchg
lods
fimull
or
psubd
pop
mov
jge
test
ficompl
rcr
sti
popf
mov
cmp
jb
xchg
shr
in
fdiv
push
rclb
xchg
xor
cmp
ljmp
clc
xchg
inc
imul
mov
xchg
add
cltd
daa
mov
mov
pop
inc
repnz
out
push
iret
mov
inc
and
jge
inc
cmp
sbb
popf
lahf
fdivs
add
fidivs
cmp
jo
or
mov
mov
outsl
mov
lret
daa
sub
lods
xchg
insb
movsb
xor
scas
rclb
add
mov
fmull
sub
js
sub
jecxz
xor
push
add
inc
test
aaa
sbb
fbld
inc
or
sarl
ss
fdivr
cmp
sti
sti
idivb
fsub
cmpsb
daa
les
push
push
jb
jmp
stc
mov
push
mov
push
add
or
dec
jbe
dec
sub
mov
dec
imul
and
aas
pushf
pop
jmp
sub
dec
cmp
pushf
inc
xor
cli
mov
es
sbbl
jl
or
lods
test
mov
mov
ds
mov
out
xorl
dec
mov
jno
sbb
mov
pop
xchg
cltd
loop
cs
xor
test
lret
pop
jp
cmp
stos
sarl
lds
cmpsb
xor
mov
dec
push
cmp
imul
or
out
das
mov
int
jnp
sbb
xor
jp
enter
popa
popa
pop
out
out
pusha
mov
cmp
sub
mov
fisubrl
sbbb
and
rcll
dec
test
repnz
pop
rorb
int3
inc
jno
push
or
push
pop
xor
push
stos
in
cmpsl
xor
adc
sahf
rolb
call
xchg
xor
inc
fmull
mov
arpl
rcl
lahf
mov
push
add
aad
mov
add
cmpsl
adc
or
pop
adc
xor
dec
stos
cmp
push
mov
mov
mov
push
sahf
mov
add
sub
mov
hlt
sbb
jae
cmp
loop
loopne
lods
xchg
sbb
jo
lret
clc
cmpsb
dec
in
dec
fdivrl
add
jle
jmp
dec
aas
dec
in
dec
std
xchg
xchg
dec
xchg
mov
adc
stos
xor
xlat
dec
cltd
xor
test
xor
hlt
adc
imul
lahf
dec
stos
rcrb
push
or
sub
test
arpl
pop
jbe
pop
movsb
adc
lock
or
inc
pop
imul
mov
jg
xchg
subb
in
clc
add
lock
insb
pop
adc
mov
cli
inc
int
jno
repz
mov
add
das
and
outsl
pusha
ffreep
les
mov
fistpl
imul
cmp
push
dec
cli
dec
outsb
xchg
mov
push
sub
in
and
mov
dec
pop
int
int3
cltd
xchg
push
rcll
outsb
push
mov
pop
insl
mov
cld
or
in
adc
jp
scas
outsb
xchg
sbb
jge
jmp
fdivl
icebp
push
and
dec
ret
repz
pop
popf
xor
movb
cli
rol
lea
out
xchg
shll
pushf
mov
add
je
movl
aas
push
stc
je
xchg
xor
cmp
inc
stc
push
movsl
mov
jmp
and
sub
loopne
mov
fldl
dec
popa
jb
cltd
mov
mov
xchg
jb
sbb
jns
cs
mov
insl
adc
mull
shll
push
or
mov
or
xor
dec
cmc
in
pop
fwait
imul
es
mov
cmpsb
popf
sti
and
cmp
inc
int
pop
int3
das
mov
sbb
mov
inc
ret
xchg
sub
jmp
shl
scas
les
fistl
mov
arpl
mov
addr16
aaa
dec
and
and
test
xor
adc
dec
lea
jbe,pt
push
or
mov
dec
jmp
inc
shrl
lcall
push
lret
or
or
lcall
loop
fwait
mov
dec
sbb
adc
leave
dec
lods
cmp
push
jge
shrl
mov
shll
and
sub
cmpsb
pusha
shl
mov
loopne
pusha
fcmovne
rcrl
sub
fstl
mov
pop
jae
out
rolb
rol
inc
add
pop
ss
dec
cmc
xchg
or
mov
testb
shlb
shlb
and
sbb
push
or
rcr
add
jo
xchg
std
inc
pop
pop
pop
push
in
or
mov
cli
mov
adc
negl
clc
inc
mov
fdivrl
dec
jp
idivb
cmp
scas
mov
mov
aaa
mov
fistps
leave
sarl
push
mov
std
jge
cli
sub
and
stc
sahf
add
xor
loope
ret
adc
insl
xchg
add
arpl
scas
imul
test
repnz
push
dec
sarl
clc
test
pop
int3
cld
icebp
fistpll
xchg
mov
pop
and
pop
mov
sbb
dec
ret
lret
lock
sub
inc
xchg
iret
andl
int3
push
mov
cmc
mov
inc
and
shrl
push
jmp
mov
push
sub
call
loop
jge
mov
push
or
cmp
mov
xor
jg
movsb
sbb
mov
push
fistpll
mov
or
fwait
jp
pop
pop
xchg
sbb
orl
mov
lcall
dec
pop
xor
mov
push
add
cmc
das
stc
and
shlb
push
mov
push
and
mov
push
inc
mov
push
sbb
std
xchg
test
sbb
pop
mov
enter
jge
pop
xchg
out
jb
dec
mov
sub
sar
loop
sub
in
js
xor
push
in
mov
ret
xchg
pop
addr16
pushl
lea
mov
sbbb
jmp
push
cmp
out
in
out
icebp
or
xchg
dec
push
in
or
ljmp
ret
popf
sbb
popf
loope
jo
aas
mov
out
mov
jae
cld
adc
jno
sub
mov
cmp
inc
mov
push
ljmp
cmp
lahf
fsubrs
cmp
jns
sbbl
scas
fimuls
dec
out
cmp
in
xchg
jnp
cmp
sbb
cmp
pop
lcall
cld
jnp
lret
stc
pop
jmp
leave
lock
jno
mov
push
push
jge
xlat
mov
nop
mov
mov
test
add
dec
rcrb
test
lds
mov
jmp
shll
adc
pop
aad
int
insb
shlb
cwtl
sti
mov
mov
jge
inc
pop
mov
and
pushf
call
inc
or
sub
mov
adc
xchg
inc
shlb
rorb
pop
aad
pushf
popa
mov
fisttps
sbb
loop
repz
inc
pop
cmp
adc
pop
or
xor
adc
adc
test
test
jecxz
jne
mov
inc
cltd
mov
in
xor
cmp
ror
mov
jecxz
outsb
dec
pushf
mov
cld
fldenv
jecxz
sti
fsubrs
sbb
add
mov
inc
insl
push
sbb
and
outsl
xlat
mov
je
push
sbb
leave
cmp
push
lret
push
jo
ret
outsl
jp
pop
shlb
inc
test
sub
adc
ret
dec
jp
cmp
mov
jb
insl
dec
inc
cmc
jmp
jnp
in
pop
ret
push
inc
mov
push
jge
aaa
out
add
jg
mov
jle
roll
into
mov
inc
pop
frstor
adc
into
mov
lds
push
xchg
sahf
mov
in
cmp
mov
inc
in
stos
pusha
popf
pop
aas
sarl
js
call
cmp
cmp
and
xchg
adc
xchg
subl
sti
daa
mov
fildll
leave
mov
xor
int
mov
addr16
mov
cmp
adc
fmuls
and
jbe
mov
dec
cmp
xchg
movsb
mov
mov
pop
fisttpl
fdivrl
das
mov
jge
fisubs
jmp
mov
or
xchg
mov
and
dec
add
aas
pop
jb
hlt
sub
or
xchg
pusha
cwtl
rorb
xchg
sub
jns
jnp
cmp
xor
mov
shll
std
pop
movsl
icebp
adc
and
scas
or
add
dec
pop
mov
lret
paddusb
icebp
sbb
sar
dec
jmp
mov
out
and
je
mov
or
jae
shll
inc
jle
stos
fistps
cmp
shl
mov
xchg
mov
cs
inc
rcrb
incb
xchg
popf
cs
sahf
pop
addr16
xchg
mov
pushf
adc
dec
rclb
shrb
pop
sbb
shll
xchg
add
cmp
out
sub
cmpb
lret
popf
pop
adc
arpl
lds
inc
stos
call
sbb
cwtl
push
in
cltd
dec
lods
mov
shrd
aas
dec
inc
pop
fnstsw
in
call
addl
push
cmp
mov
imul
inc
cmp
xchg
or
loope
loop
jl
repnz
stc
les
jbe
das
fdiv
iret
or
scas
mov
js
pop
xchg
dec
xchg
push
subl
cmp
mov
xor
lret
mov
cs
jmp
jl
xchg
subb
hlt
mov
pushf
imul
pop
in
adc
enter
mov
je
psubusb
inc
orb
sbb
test
scas
sbb
pop
adc
mov
or
mov
leave
lock
lock
outsl
sub
adc
shll
pop
fadds
daa
test
mov
sbb
mov
and
mov
add
push
jecxz
xor
xchg
sbb
testb
jl
hlt
mov
or
xor
stc
dec
bound
push
shrl
mov
jmp
jmp
sub
push
outsb
imul
mov
cmc
xor
dec
imul
cs
adc
add
lds
cltd
daa
stos
and
inc
es
sahf
xor
mov
loope
mov
xor
cmp
testl
push
xchg
xchg
mov
cld
push
sbb
lods
cmp
inc
scas
pop
fbstp
lock
and
outsl
insb
cmp
test
rorb
in
stos
lahf
pop
fucomp
sbb
popf
stc
fimull
xchg
iret
out
jecxz,pn
lret
add
mov
lods
daa
adc
mov
arpl
daa
adc
pop
leave
inc
mov
jb
fs
adc
mov
push
mov
loopne
ret
pop
scas
mov
insl
jp
adc
insb
fistps
daa
and
add
out
adcl
xchg
or
shll
insl
and
repnz
fistps
in
xor
add
roll
daa
adc
mov
and
or
push
enter
fisttpl
xchg
in
xchg
ret
sbb
aam
lcall
cmpsb
loope
test
or
jmp
xchg
pop
pushf
icebp
jle
mov
out
std
enter
pop
dec
mov
pop
jmp
push
xorb
push
sbb
pop
std
imul
or
push
jnp
bound
pop
xchg
inc
inc
add
in
in
sub
enter
idivl
pop
jns
mov
sti
xchg
push
sub
add
icebp
mov
mov
xchg
mov
sbb
inc
sbb
rolb
sbb
mov
pusha
adc
push
pop
fadds
jp
cmp
xchg
aad
scas
mov
pop
inc
push
outsb
sub
movsl
jnp
movsb
cmpsb
vminss
mov
inc
mov
sbb
call
imul
lret
ss
sahf
stos
cwtl
lret
les
or
int3
fwait
sbb
loope
mov
mov
cs
rolb
iret
mov
or
sub
xchg
adc
mov
xchg
inc
mov
lahf
int
push
mov
in
sub
mov
mov
hlt
mov
push
pop
cmc
sbb
jge
addr16
mov
mov
lcall
jl
xchg
or
xchg
jmp
mov
aas
shrb
jecxz
movsl
sarb
je
or
popa
xchg
add
jg
js
lahf
sbb
lret
lock
dec
sub
jp
outsl
popf
mov
mov
lock
push
sub
xchg
into
pusha
pop
aaa
pop
fidivs
jecxz
add
les
pop
sbb
jb
loopne
data16
adc
and
xchg
aam
xchg
cmpsb
xor
lret
inc
adc
pop
in
mov
cltd
arpl
or
in
test
pop
jle
mov
dec
cmpsl
ficoms
sub
test
in
pop
call
movsb
scas
out
dec
jae
cs
aad
jge
scas
mov
nop
add
stos
fcoml
cmp
pop
mov
iret
dec
pop
rclb
mov
and
pop
or
xchg
mov
test
mov
mov
pop
cli
or
and
negb
or
xlat
xor
or
ljmp
mov
xchg
sbb
dec
push
aad
cmpsl
outsb
out
lds
xor
andl
add
mov
popf
or
repnz
sub
inc
fisubrs
mov
insb
inc
cltd
mov
mov
cli
jnp
movsb
in
pop
push
cmp
and
test
clc
data16
or
stos
int
cltd
cmovne
push
jns
pusha
xor
xchg
mov
or
sbb
jae
jp
pop
or
mov
xor
sub
push
ret
cltd
sub
adc
loope
xchg
sbb
xor
or
shlb
cmp
ljmp
dec
mov
dec
jae
mov
inc
mov
jb
inc
std
adc
jae
iret
inc
mov
xchg
mov
popf
inc
dec
pop
pop
fstl
xchg
in
inc
addr16
in
movsl
mov
sahf
and
pusha
jns
mov
adc
jg
outsb
xor
xor
shlb
loope
cmp
ss
cmp
repz
push
dec
push
popa
pop
lcall
or
push
leave
call
inc
jge
andl
fdiv
jae
cmp
or
je
and
push
int
mov
int3
int
jge
and
in
shl
mov
xchg
decl
adc
xchg
popa
xor
bound
lods
pop
inc
mov
das
push
xor
iret
shlb
push
cmp
xchg
mov
orl
or
jb
cmp
inc
addl
cmp
push
sti
pop
cmp
adc
jo
das
xor
call
adc
lret
rcr
or
mov
pop
repz
stc
pop
sub
push
dec
insl
push
mov
cmpsb
and
xchg
in
push
lea
inc
sbb
arpl
pop
popf
sbb
test
xor
fdivs
sub
sbb
dec
xchg
mov
andb
out
jg
mulb
inc
mov
cmp
test
jp
iret
push
call
aad
jp
cmc
mov
sub
xor
call
lret
fildl
into
sbb
inc
and
icebp
repnz
popa
clc
add
out
out
cmp
mov
ljmp
pop
shl
test
je
sbb
outsl
and
cs
inc
jns
pusha
dec
ret
out
test
mov
push
cli
insl
push
mov
in
movsb
in
dec
mov
adc
xchg
mov
inc
loop
cwtl
in
pop
fstps
adc
adc
sbb
xchg
hlt
or
bound
sub
mov
popf
sbb
arpl
dec
xchg
mov
cmp
mov
cmpsl
rcrl
outsl
mov
test
sti
add
jnp
jle
mov
outsb
xlat
add
aad
mov
pushw
frstor
jmp
das
loope
mov
movsb
xchg
sub
scas
arpl
pop
xchg
pop
or
and
aad
sbb
imul
xchg
pop
mov
repz
mov
mov
stos
bound
adc
dec
aaa
mov
inc
add
imul
and
jl
ror
inc
dec
push
pushf
mov
cmp
test
jnp
mov
les
sub
adc
jmp
pop
stos
into
je
daa
add
lods
adc
out
adc
push
jmp
int3
add
add
push
sbb
mov
and
mov
pushf
incl
xor
add
out
imul
jp
iret
mov
jp
out
adc
in
in
lods
repnz
aas
movsb
xor
scas
cld
dec
es
negl
sub
mov
rol
outsl
xchg
mov
cmp
pop
in
push
aaa
or
popf
je
je
or
rclb
and
orl
daa
lds
idiv
jle
mov
sub
jb
cmp
mov
xchg
sbb
iret
dec
cmp
outsb
clc
lcall
or
loopne
xchg
stos
loope
into
sbb
jecxz
mov
cmpsb
jo
std
cmp
clc
jge
lahf
push
shll
or
mov
dec
push
xchg
mov
mov
inc
xchg
xchg
cmc
mov
test
js
pop
or
aaa
and
pop
mov
outsl
js
xor
in
mov
sti
lock
pop
sub
xor
dec
lcall
cmc
testb
imul
lds
into
lret
add
in
xchg
idivb
xorb
jmp
outsb
stos
sbb
rclb
xchg
lcall
mov
adc
xor
dec
mov
repz
imul
aas
mov
insb
out
mov
add
push
jg
or
cltd
sahf
les
fwait
arpl
out
lock
mov
push
sarl
lods
push
sbb
div
xchg
movsl
divb
cmp
add
inc
inc
mov
push
stos
adc
in
xor
sbb
movsb
je
sarl
out
xchg
inc
adc
call
mov
fcoml
clc
pop
shll
rcrl
jne
loopne
imul
push
loopne
xchg
jmp
test
ljmp
push
pushf
js
add
lcall
adc
xor
mov
sub
xchg
push
in
and
sub
xor
xchg
pop
ds
es
in
insb
shlb
sbb
imul
shr
gs
test
imul
and
push
mov
mov
arpl
out
test
jno
in
shr
repnz
int3
gs
pop
xor
push
jns
or
push
pop
movsb
jle
push
lock
mov
inc
sarl
xor
lret
lock
out
sbb
stc
stos
shlb
sbbb
xchg
ffree
pop
inc
jmp
pop
push
jo
sbbb
add
mov
lret
imul
cmc
aam
test
lock
and
sub
daa
jb
jecxz
cmc
js
xchg
stos
jge
icebp
xchg
mov
cmp
sub
mov
and
lods
jne
lahf
xor
dec
mov
add
mov
mov
xor
repnz
je
adc
rclb
rclb
jle
jecxz
aam
ret
add
xchg
lds
lock
push
mov
clc
sub
int3
lcall
cmp
jmp
imul
pop
loop
sbb
pushf
jns
sti
push
cmp
push
sbb
push
cmp
sti
xchg
inc
or
xchg
idiv
nop
mov
in
int3
sub
int3
mov
adcl
ljmp
into
cli
mov
mov
cmovl
jo
mov
jae
xor
jo
pop
sub
pop
add
int3
inc
jmp
mov
scas
jb
inc
inc
and
push
mov
xchg
xorb
ss
les
add
es
dec
xchg
add
ds
test
jno
mov
and
rcrb
test
movb
loopne
pop
sbb
or
stos
inc
rorb
out
jmp
aad
cli
faddl
pop
into
minps
mov
pop
adc
loope
pop
js
inc
sub
pop
iret
mov
in
divb
adc
insl
lock
fistl
jb
test
xchg
inc
cmp
sbb
pop
push
jo
out
xor
inc
cmpl
push
xor
sub
cmp
dec
cmp
dec
mov
sbb
lock
ljmp
cmpb
shrl
mov
xor
push
inc
push
repnz
push
fldenv
ret
bound
mov
adc
lock
inc
jno,pn
cmp
stos
lcall
xor
inc
mov
mov
push
in
cmp
sbb
xor
push
mov
jno
or
addr16
sub
pop
repz
mov
clc
in
lock
xchg
decl
mov
sub
adc
add
in
mov
inc
pop
mov
leave
das
mov
insl
or
jg
inc
nop
movsl
push
arpl
lret
push
testl
into
data16
sub
ret
bound
add
adc
pop
cmpsb
sahf
out
repz
or
daa
fistl
xchg
or
pop
add
and
clc
cli
push
or
add
push
jecxz
hlt
xchg
mov
jmp
mov
push
js
test
push
fnsave
push
pop
mov
sub
lea
mov
jp
inc
adc
inc
adc
pop
xchg
mov
aas
imul
ret
sbb
fsubp
pop
enter
xchg
fdiv
popa
stc
mov
sarb
ret
inc
mov
pop
and
lret
into
jle
inc
inc
mov
sub
scas
inc
cmp
cld
inc
add
outsb
pop
dec
stc
push
jo
shll
std
sub
push
or
pusha
ficompl
test
push
clc
testl
out
std
cli
xchg
out
pop
loop
dec
dec
pop
mov
xchg
div
xlat
pop
mov
lods
popa
out
imul
les
push
ret
mov
sbb
cmpb
jl
jnp
cs
push
jmp
sbb
mov
push
jecxz
inc
nop
inc
dec
xchg
outsb
push
mov
inc
mov
xor
or
sub
enter
sub
sbb
insb
fstpl
mov
add
mov
mov
bound
mov
jl
and
jg
fucom
cmp
push
dec
jp
fistpl
xor
fstpt
mov
mov
scas
fists
dec
ja
lret
jne
adc
fwait
in
out
pop
scas
push
std
jp
mov
xor
sbb
ljmp
jae
ja
cmc
sub
push
or
mov
sbb
sti
or
in
jg
mov
jno
or
js
mov
mov
push
and
push
push
or
add
mov
jp
fidivl
cmp
es
sub
or
xor
cltd
bound
jge
pop
test
arpl
cld
xor
into
mov
xor
fcomip
mov
pop
rsm
out
dec
stos
scas
dec
les
mov
lods
imul
ljmp
sbb
jae
ljmp
test
pop
aad
fmull
push
adc
jmp
xor
popl
test
pop
adc
sbb
in
sahf
add
psrad
mov
ficompl
add
cmpsl
xchg
adc
out
cmp
jge
cmp
imul
pop
add
loop
push
or
and
sbb
mov
stos
test
mov
mov
xor
push
loop
xchg
or
inc
xchg
scas
inc
mov
mov
or
scas
hlt
outsb
aam
xlat
mov
xchg
repnz
movsb
ds
fs
push
out
and
xor
jbe
mov
xor
sbb
cltd
and
xor
mov
pop
sbb
scas
cmc
insl
push
dec
inc
dec
cltd
shll
js
sar
fwait
jno
or
xor
mov
jle
sub
mov
mov
or
xorb
inc
and
mov
lret
pushf
and
mov
sbb
daa
or
xor
push
mov
xchg
test
pusha
mov
testb
repnz
movsb
dec
ja
js
jle
xor
outsb
inc
mov
add
fldcw
jbe
sub
mov
das
sbb
mov
or
subb
fcomip
out
les
sub
daa
mov
adc
dec
movsb
push
mov
mov
jo
push
mov
jno
dec
stos
mov
add
fbld
mov
pop
andb
rorb
jae
jne
nop
loope,pt
sbb
cwtl
insl
mov
adc
insb
pop
fsubrp
orb
lods
imul
mov
mov
push
dec
in
lcall
daa
popa
adc
lret
xchg
rcll
cmc
xor
les
mov
mov
and
push
mov
jnp
xlat
lret
rcrb
ja
mov
mov
inc
pop
dec
popa
sub
xchg
and
clc
push
xchg
fldt
mov
xchg
lock
mov
sbb
cs
jg
repnz
mov
outsb
or
jno
or
add
icebp
sub
pusha
ds
jp
jnp
jecxz
xchg
cmp
out
ja
sarb
repz
dec
sub
adc
lcall
xchg
imul
adc
add
scas
filds
ss
lods
xor
icebp
cmpsb
jb
ret
push
std
jns
dec
cmc
ffreep
add
pushf
mov
push
fnstsw
mov
jb
ja
imul
pop
dec
out
out
and
push
mov
test
test
push
loop
adc
mov
or
jnp
add
pusha
das
cmpsl
stc
mov
movl
adc
jo
pop
sub
sub
xor
push
jo
push
xor
cmp
int3
push
out
xchg
jno
scas
mov
sbb
aas
push
pushl
pushf
pop
shlb
cs
mov
xchg
pop
enter
jl
testl
fldenv
jl
fcomip
mov
imul
cmpsl
cmpsb
dec
fisubl
cmp
lds
xor
and
jecxz
lret
xor
fimull
sub
sbb
cli
repz
push
jl
or
ds
pop
cmp
mov
push
push
adc
sub
inc
xorl
push
cmp
and
jle
jle
jge
jg
xchg
pop
sub
add
push
aaa
xor
mov
inc
sbb
cmpsl
mov
inc
sbb
es
cmpb
fiadds
lods
imul
pop
ds
jb
cmpsl
push
jg
mov
pop
xlat
ret
aad
pmaxub
or
xor
js
dec
out
and
pop
cwtl
mov
push
xchg
mov
js
mov
pop
imul
shlb
and
cmp
scas
les
pop
aad
mov
repz
cmp
and
mul
or
cmp
insb
push
and
int3
sub
mov
push
iret
popf
movsl
hlt
cmp
lock
xor
es
mov
fildl
outsl
mov
adc
mov
pop
mov
jno
cmpsb
xchg
push
loop
shlb
mov
xchg
or
adc
popa
sbb
sub
cmpsl
add
scas
mov
pop
leave
rcll
mov
cmp
lret
push
aam
xlat
sub
push
xchg
ret
push
dec
lds
pop
negb
push
sub
mov
mov
dec
pop
lods
addr16
xor
mov
jae
adcl
or
adc
daa
mov
stos
ja
mov
std
sbb
push
pop
addr16
sbb
jle
fisubs
mov
inc
mov
fwait
or
mov
push
sub
push
imul
arpl
movb
jo
push
add
xchg
push
jecxz
jne
ret
cwtl
push
and
fwait
cmpsb
inc
cmp
test
sahf
notb
push
adcl
popa
cltd
rclb
sub
mov
stos
add
loope
ud0
sbb
fwait
push
and
adc
fs
pusha
ds
jmp
out
lea
cmp
stos
jmp
xchg
nop
and
mov
mov
xchg
add
mov
clc
daa
dec
mov
push
xor
jmp
lret
xchg
cmp
std
fmuls
nop
ret
scas
fstp
out
xchg
fbstp
jl
mov
ficomps
aaa
dec
mov
add
mov
adc
stos
fldcw
into
mov
xchg
aas
mov
cs
inc
fwait
lcall
adc
mov
cs
ret
repnz
push
xor
imul
xchg
aas
adc
mov
inc
sbb
sub
fisubl
mov
push
adc
dec
andb
dec
push
sub
or
jne
inc
dec
push
les
fisttpll
icebp
fwait
and
sti
jns
xor
addr16
adc
daa
mov
and
imul
test
cmc
xchg
dec
aam
roll
mov
mov
nop
jb
push
movsl
xor
fidivrl
xor
sahf
cmp
mull
mov
in
into
pop
push
sbb
mov
and
in
add
pop
inc
adc
cltd
movsl
jle
test
pop
inc
jb
fidivs
pop
sub
jae
ljmp
cld
add
xor
push
imul
enter
test
and
jae
sub
dec
scas
cltd
pop
test
stos
mov
pop
lods
repz
sbb
sbb
movsl
movsb
cmc
xor
dec
or
jne
enter
lret
jae
pop
push
jge
cltd
mov
xchg
lret
repnz
movsl
sbb
fwait
add
push
out
push
fldt
repz
sti
push
mov
testl
xor
jne
ljmp
movsl
decl
addb
push
call
sub
lea
mov
testl
xor
in
dec
fildl
addr16
mov
lock
lods
popa
loopne
mov
mov
in
in
pop
push
lea
jge
addb
inc
out
out
push
pmaxub
jecxz
ret
sahf
dec
jo
rcrb
xchg
icebp
add
pop
test
sub
cmpsl
push
mov
call
test
cli
push
xchg
into
mov
push
mov
test
ds
mov
xor
add
gs
nop
jo
cmc
dec
sbb
daa
dec
fwait
pushf
add
or
pop
in
sbb
sbb
scas
in
das
and
mov
pop
dec
mov
dec
push
jg
sub
jbe
je
mov
out
jmp
or
xor
cmp
mov
sbb
fsubs
out
in
jbe
out
cs
cli
ss
cltd
mov
inc
dec
xor
cmp
mov
hlt
int
pop
cmp
and
orl
xor
mov
inc
inc
mov
std
fdivr
sub
es
mov
rdpmc
daa
enter
and
outsl
dec
inc
push
jmp
mov
push
sti
sahf
mov
rclb
or
mov
dec
cmpsl
push
ljmp
push
cmpsb
mov
jl
and
cltd
stos
add
xor
nop
gs
lcall
shll
jmp
sar
xchg
cli
aam
ja
inc
jmp
std
test
pop
push
inc
cmpsb
cmpsb
adc
aam
pop
insl
out
xchg
pop
cmp
xor
xchg
xor
icebp
or
mov
dec
pop
jnp
push
insl
mov
leave
push
addb
ret
js
xchg
incb
xchg
lret
out
mov
push
mov
ficomps
cmp
fisubl
fadds
cli
add
mov
mov
ds
ret
or
rclb
shl
cmp
jnp,pt
mov
lods
loop
in
aam
jle
adc
scas
sub
daa
popf
cmp
std
cld
adc
jbe
hlt
sbb
lock
repnz
cmp
nop
outsb
data16
lret
sbb
mov
sbb
pop
push
xchg
cmp
add
or
in
mov
sbb
iret
test
insl
bound
int3
aam
push
imul
add
adc
cs
xchg
xchg
repnz
pop
or
push
fs
pusha
sub
push
fadds
mov
jnp
ret
mov
push
adc
rcrl
movsl
sub
movsb
adc
and
cltd
xchg
outsl
ja
xor
out
pop
stos
mov
loopne
mov
adc
sub
lea
in
xchg
push
inc
lods
imul
aaa
out
mov
push
dec
adc
out
ds
lcall
scas
loopne
dec
pop
cmpb
lods
sbb
movsl
out
roll
dec
ja
jo
lcall
adc
jecxz
jg
jl
cmp
into
pop
sub
lds
cmp
xchg
stos
mov
push
int
sbb
mov
mov
cwtl
xchg
dec
or
js
xor
cmpsb
cmp
push
push
sbb
aaa
fsubrl
lock
sub
fwait
jg
stos
test
pop
mov
jge
imul
cmpsb
mov
xor
pop
lret
adc
pop
or
push
jbe
movsl
sub
push
rorl
imul
xor
or
int3
out
leave
sahf
sub
xchg
cmpsl
mov
sub
xchg
aam
fldcw
sub
cmp
or
sub
lea
test
adc
adcb
pop
scas
cli
add
jbe
inc
leave
pop
clc
lea
iret
subb
sub
adc
call
jno
popa
adc
xchg
adc
iret
cmp
add
ds
aas
add
aaa
lahf
imul
add
sbb
stc
imul
stos
popa
cmp
stos
mov
jmp
jae
dec
sbb
xor
jns
lock
lahf
popa
jmp
outsb
add
out
subb
fwait
sbb
xor
pop
cmpsb
mov
lcall
jg
test
cmp
add
fistpll
loope
push
sub
iret
mov
inc
push
mov
mov
notl
imul
popf
aaa
mov
mov
test
neg
mov
test
push
xor
jg
jo
gs
in
jle
cmpsb
mov
mov
adc
xor
dec
jge
jl
into
in
in
mov
mov
mov
rcrl
cmpsb
ret
sbb
scas
cmp
iret
pop
test
neg
mov
jae
cltd
cs
out
out
xchg
push
call
fisttpll
xchg
aad
in
inc
add
and
jle
outsl
cwtl
sbb
popa
pop
sahf
xchg
xor
arpl
sub
sub
mov
cld
xchg
ljmp
lret
loopne
mov
mov
dec
and
mov
arpl
adc
jae
push
out
mov
das
ss
lods
fwait
out
addr16
dec
mov
mov
cmp
sub
lock
push
mov
cmpsl
push
insl
cmpsb
lock
enter
sahf
mov
mov
jno
push
lods
mov
jg
adc
iret
loope
dec
pop
ja
imul
lods
int
ljmp
outsb
mov
sbb
jne
shrb
dec
pop
mov
or
push
pusha
loop
mov
inc
inc
das
int
test
inc
in
aas
push
push
and
out
and
jae
pop
popa
out
addr16
adc
xchg
pop
or
cmp
pop
es
std
shr
insl
lock
clc
push
adc
lcall
dec
imul
lds
out
cli
and
mov
xor
bound
pop
cmp
fs
scas
pushf
in
cmp
jmp
mov
mov
fistpl
and
dec
cmp
pop
pushf
push
mov
in
inc
fistpl
mov
inc
in
pop
push
dec
mov
lods
xchg
mov
dec
mov
imul
xor
add
pop
pop
dec
stos
sbb
in
dec
outsb
ficoml
cli
pop
aaa
fdiv
push
dec
and
and
dec
sub
iret
mov
sti
in
dec
fsts
xchg
push
cmc
popl
or
ljmp
and
pop
arpl
cmp
sbb
test
inc
mov
test
mov
cwtl
out
insl
fs
xor
inc
fwait
inc
inc
add
lea
or
je
popa
leave
fsubl
int3
mov
dec
dec
fs
mov
xchg
ficompl
sub
jbe
xchg
bnd
pop
int3
dec
add
jg
popa
divb
xchg
xchg
fildl
das
jb
inc
push
pop
fs
int3
mov
gs
int
inc
lcall
push
mov
push
outsb
inc
push
jne
outsb
jo
and
push
out
in
pop
mov
xor
mov
xor
mov
sbb
add
xchg
xor
loope
xor
xor
mov
and
shrl
xchg
lds
fwait
outsb
xorb
movsb
add
inc
mov
pop
mov
loopne
sahf
dec
imull
sub
in
dec
hlt
std
out
int
adc
in
fdivl
dec
push
das
mov
ljmp
loop
mov
or
ja
mov
jl
das
loope
push
push
iret
xchg
outsl
mov
mov
mov
add
lds
inc
sub
add
in
sub
push
dec
in
pop
sbb
inc
push
and
cmp
mov
mov
ja
xor
mov
int
hlt
sub
mov
jmp
mov
inc
outsl
pop
stc
stos
stos
cmp
jb
push
sbb
add
push
cmpsb
xchg
jb
inc
pop
and
cmp
inc
jle
dec
iret
adc
cld
jl
mov
js
fisubrs
je
and
cmpsl
dec
xchg
lock
hlt
inc
je
or
scas
daa
mov
test
enter
mov
xchg
dec
addb
mov
enter
lahf
lods
adc
sbb
mov
push
mov
xchg
or
lret
push
addr16
scas
jmp
int
test
ret
into
cmp
bound
pop
xchg
int3
subb
ficomps
xchg
int
push
inc
sbb
xchg
iret
sub
pop
sbb
fstps
mov
inc
out
shlb
cs
movsb
data16
xor
nop
insb
xchg
dec
out
addb
xchg
mov
lea
or
movsb
ret
pop
mov
push
imul
jl
les
adc
cli
in
cmpsl
clc
cmp
mov
in
popa
mov
cmp
jb
shrl
inc
insb
cmp
push
test
pop
bnd
sbb
sbb
in
aas
lea
and
jo
lock
and
dec
adc
fbld
pop
fwait
add
jecxz
cmpl
mov
aad
sbb
cmp
pop
push
mov
sub
dec
nop
add
sti
jb
ja,pt
lcall
fidivs
test
cld
test
imulb
leave
pop
xchg
gs
lea
mov
xlat
aas
adc
sbb
push
loopne
xchg
repz
lock
sbb
or
inc
dec
in
adc
adc
mov
xor
popf
pop
mov
jl
inc
sbb
xchg
mov
imul
loopne
cwtl
cmc
adc
mov
jp
xor
dec
pop
js
pop
and
andl
test
in
xchg
aas
mov
pop
cmpsl
mov
sbb
or
data16
adc
push
lock
lock
cs
mov
jle
mov
out
cmp
daa
dec
xchg
fwait
lods
int3
sub
or
rcll
inc
or
inc
sbb
cwtl
push
mov
push
repnz
out
and
lcall
notl
pop
push
aam
das
notb
insb
aaa
xchg
sbb
inc
or
lcall
mov
and
stc
jp
movsl
pop
add
lock
fisttps
push
inc
aaa
mov
push
xchg
dec
movsb
lods
sub
mov
scas
sub
pop
push
lock
sbb
cs
push
ds
fildl
decb
std
pop
mov
je
stos
movsl
push
dec
lret
insb
lret
ficoms
xor
dec
jno
mov
adc
xor
imul
outsl
xor
mov
iret
sbbb
pop
cmc
mov
test
popa
sub
and
pop
inc
jmp
mov
adc
orb
mov
mov
movsb
mov
inc
les
pop
movntq
pop
mov
or
xor
pushf
int
loope
pop
dec
push
jns
jmp
dec
jnp
mov
lods
testl
mov
xchg
mov
pop
dec
dec
incb
ss
pop
test
data16
dec
in
xchg
dec
ja
push
sub
jne
xor
add
jbe
jno
dec
mov
or
or
pop
jmp
mov
adc
bound
pop
sti
outsl
xor
jnp
cmp
loop
lea
dec
jl
or
test
cwtl
aam
mov
jl
sub
pop
push
cmp
or
mov
add
jle
adc
pop
mov
fldl
movsb
dec
leave
js
push
mov
bound
or
and
sub
push
mov
jl
cltd
fidivrl
mov
cmpsl
add
mov
je
jnp
arpl
add
inc
sub
pop
or
call
jb
shlb
xor
out
mov
jg
lcall
rorb
adc
jg
stos
xor
aam
cmpsb
cwtl
rol
push
pop
jl
inc
daa
jne,pn
inc
stos
xor
mov
out
jmp
imul
dec
mov
push
int3
leave
jmp
mov
outsl
lds
xchg
jge
or
cmpl
jmp
or
xor
clc
test
adc
shrb
and
mov
inc
and
js
cmp
mov
mov
inc
cmp
call
adc
fs
imul
fidivrs
mov
stc
xchg
das
dec
cmp
lock
pop
mov
mov
adc
test
jle
orl
push
das
adc
push
data16
outsl
ljmp
sbb
add
push
xchg
mov
and
addl
enter
rclb
cld
xor
cmp
cs
test
sahf
cli
add
mov
pop
mov
dec
pushf
inc
xchg
mov
pushf
cmp
cmpsl
shrl
test
shrb
add
jmp
inc
push
dec
out
or
subb
xchg
cmp
push
jbe
movd
inc
cmp
dec
scas
lahf
jg
push
mov
jns
sub
out
sarl
enter
sub
pop
inc
lea
sub
scas
mov
add
xor
cwtl
negl
add
test
dec
dec
xor
testb
insb
das
enter
push
outsb
push
pop
scas
cmpsb
in
push
mov
add
sub
jbe
or
lods
fisttpll
cmp
dec
es
roll
sarb
or
jl
push
ljmp
sbb
mov
ss
jb
call
inc
test
shll
mov
cs
cmp
cld
imulb
clc
dec
dec
pop
outsb
sar
clc
mov
pop
ss
fldl
xchg
movsb
arpl
sbbb
scas
cwtl
out
mov
les
out
addr16
shlb
or
bound
nop
test
rcll
inc
jns
jno
jmp
cmpsb
stc
cmp
das
pop
shlb
jge
mov
mov
inc
mov
fisubs
pop
dec
insb
fstp
sbb
sbb
push
jbe
xor
aas
rcll
fstpt
fnstsw
shll
inc
bound
aaa
repnz
jae
adc
jle
lret
lret
cli
add
push
cmpsl
scas
jns
out
mov
into
fstpl
cld
in
jo
push
es
pop
mov
sub
ljmp
lea
jb
test
repz
adc
lret
test
adc
push
ljmp
adc
stos
ja
add
sahf
xor
mov
mov
cmp
sub
and
stos
cmp
pop
and
pop
outsb
shr
insb
add
mov
adc
sbb
insb
daa
sbb
xchg
ds
xchg
push
xchg
in
sbb
rclb
mov
sub
pop
inc
sub
cli
and
pop
in
add
or
sahf
or
fdiv
dec
fbstp
ret
icebp
jle
pop
push
cwtl
push
insl
test
add
and
cmp
cs
nop
xor
addr16
and
jbe
clc
icebp
icebp
sub
mov
outsl
pop
ret
xchg
movsb
int
lock
push
push
cld
lcall
dec
xchg
cld
lcall
xor
dec
or
test
pusha
fbld
repnz
add
push
pop
mov
cli
pop
negb
mov
mov
pop
outsb
subb
rolb
incb
and
or
movsb
imull
xchg
andb
aad
lea
fwait
addl
adc
fyl2x
jns
jge
ds
cmp
sbb
push
jbe
mov
aas
jmp
addl
jmp
scas
repz
or
sbb
mov
daa
xlat
mov
push
and
add
mov
loope
pop
pop
out
mov
pusha
jecxz
out
dec
rolb
loopne
test
cltd
mov
lea
or
ss
lock
and
enter
in
and
and
xchg
ret
sub
push
sahf
or
lret
fwait
adc
mov
jo
and
jns
lea
stc
ret
rorb
cli
push
jne
jns
lea
mov
jmp
adcb
stos
aas
jae
mov
scas
jo
jmp
movsb
mov
ret
lea
mov
ficompl
or
clc
inc
adc
adcb
lock
inc
mov
mov
aaa
scas
daa
mov
pop
popf
jns
loop
daa
inc
in
xchg
and
inc
cmp
lea
fbld
or
mov
jnp
iret
mov
fwait
push
arpl
test
adc
addr16
adc
dec
fwait
imul
gs
cmp
test
lret
scas
jmp
mov
sub
xor
lret
popa
sub
pop
hlt
stos
roll
stos
cmpsl
rolb
xchg
fldenv
gs
add
gs
xchg
aaa
subl
sbb
ror
xor
sbb
push
dec
jno
cld
dec
cmp
std
js
rorb
mov
fsubr
sti
add
jmp
xor
cmpl
and
rcrl
cmp
sarb
iret
pop
xchg
fsubp
mov
jmp
and
add
push
jge
loop
xchg
ja
mov
or
nop
aaa
pop
sar
jb
nop
shll
mov
outsb
sbb
cmpsl
test
sbb
std
inc
int
ret
jmp
sub
xor
mov
pop
mov
push
mov
jb
mov
shrl
gs
shl
out
cs
fisubrs
inc
jecxz
or
fstl
push
popf
xchg
fmuls
sahf
outsl
add
shlb
or
add
popf
cmp
dec
adc
mov
pop
int
or
pop
or
pop
lods
dec
sub
lods
mov
icebp
dec
pop
sbb
addr16
cs
scas
push
lret
inc
fs
cmpsl
mov
pop
xchg
aaa
sub
addr16
pushf
cs
xchg
icebp
push
pusha
loop
or
imul
mov
mov
xchg
push
jno
lahf
daa
and
jns
mov
jae
inc
dec
dec
fisttpl
sbb
fistl
xor
stos
mov
stos
pop
pop
inc
pop
ror
jae
add
push
dec
das
bound
inc
popa
test
out
mov
and
inc
rcrl
cld
sub
mov
mov
rorl
aas
or
xchg
and
cmp
repnz
mov
cwtl
mov
lods
mov
cmp
jp
test
and
pop
popa
fwait
shlb
shrb
aam
adc
jno
mov
xchg
shl
lahf
cmp
mov
inc
insb
aaa
adcl
xchg
aaa
popa
stos
inc
add
push
dec
jl
sbb
outsb
mov
xor
sub
cmp
sbb
xor
lahf
add
movsl
xchg
or
imul
mov
and
iret
in
xchg
hlt
sub
jnp
stos
push
mov
insl
xchg
ret
mov
movsl
mov
cmpl
pop
pop
out
arpl
mov
ds
cmc
popa
cmc
mov
push
mov
daa
sub
dec
mov
pusha
test
sub
or
lock
int3
xchg
insb
cwtl
mov
cmp
mov
and
jecxz
cmpb
mov
add
ljmp
xlat
in
leave
mov
scas
sbb
and
lret
aaa
icebp
pop
movsb
add
or
cmp
mov
imul
je
xchg
fwait
nop
jno
idivb
rcr
enter
pop
fimull
add
stos
loope
cmp
int
scas
stc
or
test
inc
push
fimuls
adc
pop
pop
call
xchg
ss
loopne
adc
aaa
inc
sub
sbb
mov
and
rolb
out
pop
lcall
xor
cltd
jmp
xchg
pop
clc
out
in
xor
jmp
sub
dec
xchg
repz
mov
mov
cmp
fwait
pop
hlt
pop
add
out
lret
sub
les
mov
pop
cmc
into
je
test
mov
mov
mov
outsb
push
mov
pop
mov
pop
test
mov
jo
stc
jbe
pop
add
lret
sahf
jb
mov
scas
out
ja
push
pushf
pop
and
jmp
pop
lds
mov
lea
orb
dec
movsl
loop
mov
jb
inc
lea
push
out
jle
sbb
loop
orl
sbb
mov
mov
xchg
mov
cmpsb
in
inc
add
bound
and
cmpsb
scas
in
adc
add
sbb
xor
inc
decl
jnp
cs
leave
xchg
repnz
mov
add
int3
push
push
ficomps
outsl
cmpsl
mov
sub
es
daa
mov
dec
lea
test
push
repz
jae
xchg
lods
popf
iret
jnp
adc
mov
pop
push
leave
mov
mov
lret
nop
mov
ja
pop
sub
ss
xchg
mov
sbb
xor
xchg
fidivl
inc
pop
inc
negb
xor
push
or
movsb
pusha
mov
and
inc
jb
push
pusha
xor
push
out
or
popf
add
popf
ret
cmpsl
cmp
jmp
lds
lea
int
xchg
es
xor
add
movsb
jb
sub
gs
leave
jg
test
mov
call
sahf
imul
add
imul
popa
inc
sbb
inc
out
incb
xor
in
test
notl
adc
shll
inc
push
inc
mov
mov
insb
out
daa
and
push
fisubrs
xor
andb
push
or
xchg
in
fst
aam
test
push
aaa
inc
and
les
or
inc
push
cmpsb
xchg
cmpsl
xchg
mov
adc
adcb
test
aam
jmp
cmp
mov
outsb
test
adc
sbb
test
push
ret
xchg
scas
pop
and
xor
pop
pop
es
cli
push
xor
das
sub
xchg
xchg
cmp
int
ds
cmp
ja
int
mov
std
inc
inc
inc
arpl
fldt
mov
stos
idiv
loope
mov
mov
fldcw
test
dec
ss
lret
push
ret
adc
dec
dec
pop
or
addl
stc
cmp
mov
jae
icebp
lea
into
testb
test
imul
fldl
shr
mov
daa
jnp
stc
jg
mov
lock
fisttps
scas
dec
int3
in
add
fst
mov
adc
xor
push
mov
gs
test
aam
mov
hlt
lock
mov
outsb
out
adc
push
sub
mov
mov
in
add
in
incl
sbbb
jae
je
xchg
mov
aam
or
xor
in
jge
pop
mov
rcrl
sub
pop
adc
fistl
inc
mov
lods
push
add
mov
jge
adc
sarb
mov
jl
xchg
cmpsl
data16
movsl
sbb
push
jbe
pusha
fbstp
ds
pusha
jne
pop
imul
push
mov
adc
lock
fdiv
and
add
ljmp
dec
mov
dec
mov
mov
pop
push
jg
xlat
sub
clc
mov
push
arpl
inc
mov
add
int
inc
adcb
adc
jns
int
out
mov
mov
cltd
xchg
or
inc
mulb
je
push
sbb
xor
cmp
sub
dec
mov
popf
inc
sub
sbbb
hlt
xor
hlt
cmpl
std
pushf
stos
and
and
pop
outsl
and
aaa
and
ror
pop
lods
nop
loope
pop
ffree
es
mov
inc
test
call
inc
stc
ja
repz
dec
push
mov
insb
sub
sbb
jne
ret
adc
sub
int
fiaddl
jb
addb
xor
call
in
lds
adc
or
inc
cmp
dec
sahf
dec
out
jbe
jge
sub
call
iret
pop
loopne
mov
faddl
or
scas
inc
and
cmpsl
iret
data16
inc
loop
mov
mov
loop
jb
or
test
ja
stos
cmp
and
sbb
lods
adc
test
add
ret
sbb
ret
popa
or
push
cmp
adc
push
test
inc
mov
out
sbb
stos
push
and
xchg
mov
push
gs
dec
sub
ret
push
aas
fcmovb
ss
repnz
addb
and
repnz
pop
push
sbb
dec
lcall
lds
inc
mov
repnz
jne
mov
cmp
jns
test
loopne
enter
mov
adc
fimull
jle
call
xchg
push
add
inc
or
inc
nop
xlat
lods
mov
jae
inc
rclb
rcrl
cmp
fdivrl
jmp
sub
push
jae
out
mov
psubsw
jo
dec
mov
cmpsb
sbb
xor
mov
out
out
mov
sbb
movsb
push
fistpll
out
dec
dec
bound
test
nop
jg
push
push
cmp
pop
iret
cmp
and
lea
stos
pop
mov
sub
jmp
sbb
push
push
mov
notb
repnz
pop
lods
mov
je
push
shlb
add
sbb
sub
mov
clc
lcall
imul
les
inc
sbb
push
adc
xor
adc
dec
add
mov
and
in
add
fiaddl
dec
push
mov
cltd
or
push
mov
inc
mov
xor
jnp
mov
xchg
lahf
xor
js
ficoms
shrb
mov
or
aas
enter
cmpsb
fimull
cmp
and
mov
sbb
inc
insb
mov
jl
std
sub
mov
shlb
dec
cmp
xlat
dec
out
mov
sbb
jne
test
inc
jnp
jns
mov
pop
xor
mov
xchg
jge
mov
add
int3
call
push
mov
pop
fistl
sti
or
hlt
pop
movsl
adc
lcall
movsb
ret
sub
mov
or
mov
xlat
in
jp
outsb
mov
push
sbbl
xor
mov
daa
pusha
enter
sub
icebp
push
sbb
mov
notl
sub
mov
cltd
inc
test
fs
inc
push
adc
sub
sub
xor
push
push
stos
stos
mov
fisttps
stos
xchg
out
adc
pop
mov
mov
loop
push
sub
sub
mov
aas
add
cmpsl
sbbl
ds
mov
popl
sbb
fs
cli
dec
aam
inc
add
jg
xorb
mov
mov
push
out
movsl
or
mov
icebp
shlb
ret
enter
xor
movsl
pop
jnp
ret
pop
movsb
mov
dec
and
cmc
aad
aaa
ja
dec
inc
mov
shll
push
ja
pop
cmp
push
rorl
ds
fmul
adc
addr16
aas
push
gs
cltd
cli
outsb
lahf
and
cmp
mov
out
repnz
lahf
mov
cld
testb
sbb
sub
jbe
adcl
push
lea
hlt
push
movsl
lock
sarl
lea
sub
xor
mov
or
enter
pop
enter
dec
mov
cltd
negb
out
fists
inc
sub
iret
adcl
out
insb
ret
pop
push
push
mov
idivb
xchg
lock
jl
mov
decl
push
out
xchg
fwait
std
hlt
fstpl
loope
ret
inc
sub
cld
jg
adc
fisubrs
jae
push
cmp
mov
into
mov
and
mov
add
test
fdivl
mov
loope
addb
and
icebp
orb
test
cmp
ret
je
pop
cld
push
dec
test
into
out
repnz
jmp
nop
nop
lret
mov
add
test
xchg
mov
push
xor
in
sbb
mov
pop
loopne
or
scas
mov
insl
xchg
in
xchg
aad
jno
jne
push
lret
cmp
inc
jbe
aad
arpl
daa
repz
dec
into
lock
and
test
jo
repz
fisubrl
sub
push
cmp
sub
mov
ljmp
fmull
jno,pt
xchg
test
subl
jnp
out
pop
pop
pop
jns
xor
repz
aas
imul
sub
sub
mov
jecxz
pop
jnp
mov
fdivr
xor
push
popf
shrb
ret
xchg
mov
add
xchg
pop
shlb
xchg
cmp
jg
into
cmp
icebp
aas
xchg
fsubp
outsb
inc
lea
idiv
testb
vmwrite
and
and
icebp
nop
mov
dec
test
imul
arpl
jl
shl
xchg
ss
sbb
mov
mov
fidivl
jmp
push
in
mull
enter
loopne
insl
fistpll
into
add
push
cbtw
rorb
adc
stos
pop
inc
lcall
ror
idivb
int3
dec
lock
lock
clc
xchg
dec
jp
push
repnz
xchg
jge
hlt
mov
xor
xor
stos
lahf
fld
pushf
out
stc
cld
add
cmp
xchg
xchg
dec
ret
insl
xor
inc
mov
adc
sub
leave
ss
daa
mov
imul
and
inc
cmp
fstpl
add
jnp
cwtl
imul
and
xchg
or
fdiv
outsb
push
mov
xlat
xchg
aas
push
aas
xchg
push
adc
popa
add
xchg
mov
mov
imul
jnp
pop
imulb
sti
pushf
push
mov
sbb
mov
imul
ret
jp
mov
inc
int3
imul
imull
xchg
cmc
pushf
sbb
and
lret
sub
pop
lahf
inc
lock
sbb
or
cmpsl
jl
out
mov
inc
mov
sahf
xchg
push
jg
sahf
adc
xor
cmp
loopne
add
xchg
jecxz
pop
shrl
lds
mov
sub
mov
adc
arpl
sarb
dec
or
mov
jp
nop
pushf
jae
aaa
movsl
movsl
loope
sahf
mov
out
in
add
lds
lret
push
out
jmp
dec
test
jge
ss
jle
push
clc
loopne
mov
mov
insb
cmp
cmp
pop
mov
lds
ret
subb
xchg
lcall
sub
mov
sbb
rorb
xchg
repnz
das
test
push
and
lock
into
push
pop
faddl
in
sub
mov
scas
push
pop
fstpl
and
test
xchg
cmc
loopne
imulb
insb
xchg
jb
push
dec
outsb
push
sub
mov
enter
dec
inc
and
mov
repz
shr
lret
bound
lahf
cs
dec
push
pop
add
fs
mov
lcall
mov
movsl
push
out
push
jmp
mov
aad
or
xchg
jg
bound
rorb
or
hlt
mov
fs
dec
cmp
xor
pushf
sub
push
mov
cmp
aas
inc
ljmp
call
xchg
cmp
subl
mov
mov
or
inc
stc
int
cwtl
add
subl
cmp
jo
out
bnd
sti
aad
aad
sbb
dec
add
repnz
add
dec
adc
repz
cmp
mov
popa
lods
mov
loopne
pop
mov
push
cwtl
jge
iret
lahf
push
js
movsb
mov
inc
pop
data16
jge
cmp
fnstsw
ss
lods
lahf
hlt
sub
and
jo
jmp
jecxz
arpl
pushf
insl
cld
mov
mov
adc
mov
dec
or
fcomip
enter
mov
pop
fiadds
nop
cli
mov
fs
push
adc
push
into
jecxz
ret
add
jo
inc
jno
call
leave
loope
fsubrp
push
add
push
add
fs
dec
mov
mov
push
xor
mov
movl
pop
leave
test
pop
pop
push
jns
test
xlat
mov
lods
xchg
xor
cmp
push
shrb
jo
fisubs
or
mov
push
dec
mov
jno
mov
and
and
call
jecxz
xchg
out
push
xor
add
in
lea
lahf
mov
cmp
pop
shrb
lret
ja
out
mov
push
mov
adc
mov
pop
jno
pop
cltd
test
xchg
hlt
pop
out
sbb
pop
sub
xchg
adc
jg
jecxz
call
push
sub
addr16
adc
mov
cli
and
data16
inc
inc
dec
fcomps
bound
in
hlt
sbb
sub
sbb
dec
int3
or
out
push
add
push
pop
cmpsb
int3
push
iret
jl
or
jg
xchg
test
pop
call
cs
lods
pop
pusha
bound
fnstsw
bnd
or
jno
repnz
mov
push
mov
sbb
fbstp
mov
adc
mov
xlat
sbb
pop
iret
cmp
pushw
mov
fcompl
sbb
mov
add
dec
fsts
hlt
dec
repnz
fildll
xchg
push
push
fsubrs
iret
inc
lret
ds
setns
icebp
dec
inc
int
adc
mov
loopne
stos
push
aas
dec
sarl
and
pop
sub
cmp
and
cmp
fistps
xchg
shrb
xor
dec
jp
cltd
pop
add
imul
sub
cld
dec
sbb
int
aas
stos
loope
data16
fisubrs
fnsave
jp
repz
jno
ss
xor
lods
fstpt
repz
cmpsl
js
mov
outsl
fistpl
inc
movsb
inc
insb
pop
in
mov
rorl
jo
lret
jbe
xlat
pop
inc
push
test
add
in
mov
je
jmp
iret
fs
ljmp
les
xlat
cmp
add
pop
cmp
or
push
mov
jl
into
push
or
mov
jmp
jnp
loop
xchg
pushf
aaa
sbb
pop
cmpsb
hlt
push
and
inc
mov
mov
push
lret
push
jge
push
mov
or
fisubrl
cli
lahf
aad
ljmp
xchg
cmp
test
test
fwait
mov
dec
sub
push
test
xchg
stos
enter
mov
aad
pushf
push
js
test
addr16
lret
xor
jnp
out
outsl
inc
mov
lds
pop
adc
repz
pop
and
test
jmp
push
stos
adc
cmp
ret
and
icebp
mov
stc
push
xchg
jns
push
or
pfrcpit2
xchg
pop
sbb
inc
mull
and
adc
lock
or
or
cmpsb
ror
pop
mov
cmpl
and
mov
sarb
cli
add
inc
test
mov
js
add
push
pop
bnd
add
lods
xor
dec
lock
push
mov
insl
lret
push
cmpsl
push
lcall
lds
sub
iret
jle
movsl
dec
sub
inc
enter
xchg
lea
and
repnz
and
xchg
and
dec
mov
ja
pop
cli
arpl
shr
lea
xor
movsb
jb
mov
pop
dec
mov
cs
jno
jne
outsl
ret
or
leave
add
fldl
dec
jns
je
mov
push
popa
imul
dec
ret
ret
enter
ret
dec
imul
in
pop
pushf
shll
adc
or
sti
rcrb
in
or
xor
loope
xor
leave
pop
lcall
xor
arpl
aas
pop
std
dec
jl
popa
jb
into
sub
shlb
push
or
hlt
sub
dec
fcmovu
loope
sbb
or
pusha
mov
inc
push
sbb
or
ret
imul
sar
cs
dec
sbb
and
dec
std
jno
mov
pop
test
lea
inc
shlb
or
mov
xor
jmp
int
push
mov
pop
cmp
mov
sarb
jnp
push
adc
icebp
jmp
data16
andl
jg
movsb
xor
lea
fdivrl
lea
pushf
mov
imul
pop
lea
sbb
mov
cli
xchg
pop
mov
leave
lea
pop
stc
mov
cltd
and
xor
or
loop
fimuls
mov
fwait
into
and
jecxz
xor
testl
pop
mov
daa
mov
in
pop
loop
cwtl
cltd
push
inc
jmp
fs
leave
bound
mov
stc
sbb
cmp
movsb
xor
adc
xor
int3
push
loope
stc
aas
dec
dec
or
adc
adc
sarl
add
out
fcmovne
out
xchg
dec
mov
jg
dec
and
mov
aam
insb
push
and
xorl
cmp
sub
icebp
pop
jl
lea
xor
cmc
mov
imul
sbb
sub
sbb
cs
cmpsl
push
gs
push
push
push
test
pop
lcall
cmpsb
pop
mov
mov
stos
cmp
jbe
mov
insl
gs
int3
shl
add
push
push
shl
inc
loope
movsl
xor
or
enter
sbb
and
jle
sbb
rcl
pushf
aad
jo
push
mov
or
pop
inc
in
dec
sbb
data16
push
je
jae
insl
add
lahf
and
lret
push
jno
stos
ss
push
popa
cld
xor
dec
gs
xchg
inc
ret
test
repz
push
sub
cmp
dec
mov
lret
push
push
js
xchg
mov
pop
out
fs
pop
nop
imulb
fwait
insl
dec
jo
lea
repz
adc
inc
or
inc
cmp
ljmp
bound
clc
add
push
jl
icebp
movsb
gs
jns
fists
push
inc
int3
sti
ds
inc
or
cld
adc
stc
jbe
mov
push
adc
push
adc
test
jae
out
adc
insb
aaa
push
into
ja
mov
movsl
notb
lcall
sbb
jecxz
imul
sub
das
jp
push
fsubs
enter
out
hlt
ret
jmp
sbb
jge
filds
rclb
out
ja
sbb
push
mov
sub
sub
aas
jl
sbb
jmp
lret
adc
test
mov
imul
cmpsb
lods
mov
test
lods
pop
mov
insl
movsl
dec
and
in
shrl
fimull
cmp
adc
hlt
push
mov
and
mov
xor
jns
mov
insb
sub
xchg
pop
cmpsl
test
movsb
and
pop
pop
inc
mov
rcll
lret
cmp
daa
fwait
repnz
scas
outsl
cmp
fistps
push
or
jb
mov
xor
adc
fcomps
daa
pop
out
flds
cmpsb
in
cwtl
aas
ss
dec
inc
sbb
cmc
push
or
pop
mov
cmp
cwtl
push
aaa
jbe
cmp
xchg
into
ljmp
aam
ror
pop
jb
mov
push
cltd
jg
add
mulb
dec
and
sub
pushf
popf
mov
mov
adc
add
lret
pop
out
dec
jp
and
cwtl
pop
fs
jns
mov
scas
xor
mov
dec
and
pusha
xor
loop
fisubs
out
xchg
or
stos
mov
xchg
xchg
fsts
int3
orl
orl
stc
mov
dec
aas
mov
popf
cli
jp
sbb
lds
divl
or
xchg
dec
inc
aaa
pop
and
movl
lds
aam
mov
int3
xor
aas
xchg
jg
or
mov
in
dec
sbb
adc
out
dec
fstl
sbb
fs
cli
fstps
leave
fsubrs
or
inc
sbb
dec
xchg
push
ljmp
sub
push
loopne
dec
test
mov
inc
repz
pop
cmp
and
pop
fmull
ds
jg
mov
push
loope
bound
sub
cs
aas
pop
lahf
insb
rorl
or
in
inc
fildll
pop
xor
push
jmp
int
jns
ljmp
xchg
pop
push
xor
test
add
fucom
or
sbb
aas
lods
and
lds
mov
mov
dec
inc
lods
inc
jge
xchg
jmp
jae,pn
jae
push
data16
or
in
lods
leave
cmp
mov
movsb
xchg
in
in
mov
dec
sbb
mov
testl
mov
icebp
xor
inc
dec
or
icebp
mov
loopne
xchg
daa
xor
cld
movsb
int3
jp
mov
xchg
sub
dec
clc
lock
dec
mov
leave
test
out
lea
fcomp
xchg
sub
in
lret
xor
add
add
clc
add
sub
dec
stos
add
lahf
dec
add
lea
inc
or
popf
jnp
and
mov
sub
in
loopne
stos
or
divb
add
inc
inc
mov
inc
xor
stos
lea
mov
into
and
fwait
ret
fnclex
pop
ret
dec
mov
mov
sub
pop
clc
test
mov
pushf
fcoml
or
lret
jle
out
dec
fsubrp
inc
enter
idiv
and
adc
xor
and
stos
pop
popf
sahf
mov
sub
imul
icebp
idivb
xor
mov
pushf
push
enter
shrd
and
test
jp
rcll
xor
mov
dec
cbtw
sub
idivb
clc
cmp
push
push
stos
movsb
dec
xor
dec
lret
and
add
lea
mov
aaa
add
push
mov
leave
addl
clc
sbb
out
fxch
push
and
inc
stc
jmp
jecxz
xchg
xchg
inc
fcomps
pop
inc
sbb
insb
adcb
and
xchg
xchg
cmpsl
pushf
push
jae
test
and
in
flds
in
mov
dec
mov
lods
out
std
aas
lahf
movsl
loopne
xchg
jns
imul
or
push
pop
xor
fimull
mov
nop
and
popa
and
nop
aaa
or
clc
jge
or
cmc
stos
jp
or
adcb
cmp
test
mov
das
bound
frstor
jmp
xchg
xlat
std
aad
push
cmp
jg
insb
jl
or
rcrb
mov
and
xchg
mov
pop
pop
xlat
fldl
pop
mov
cmp
jo
push
xchg
mov
and
mov
jg
jmp
xor
rcll
or
stos
add
shl
jl
sbb
push
repnz
int3
push
jae
shlb
loope
fisubrs
js
sub
sti
ljmp
jg
adc
outsb
ss
bound
push
cmp
dec
mov
or
cmp
jb
jle
mov
sahf
push
insl
mov
inc
push
je
mov
dec
aas
and
or
insb
push
std
mov
dec
mov
hlt
mov
scas
int
xor
sbb
sbb
loopne
xchg
or
pop
daa
jmp
jnp
les
add
fcom
repnz
mulb
xor
mov
imul
ja
sbb
in
and
add
aas
push
addr16
in
cmpsl
test
xor
hlt
xchg
notl
mov
sub
fidivs
call
add
xor
movsl
incl
push
fimull
push
jecxz
rcl
mov
or
jbe
ret
notb
xchg
pushl
int
in
jne
mov
sti
dec
cmpsb
sub
cwtl
stos
mov
add
pop
inc
inc
outsb
adc
push
inc
mov
gs
shrb
mov
inc
mov
push
sbb
or
das
mov
sub
insl
or
mov
mov
mov
ljmp
jno
notl
or
sbb
sbb
jo
sbb
mov
call
shl
imul
stos
mov
in
xor
test
push
test
pop
xor
push
fsub
and
in
in
decb
test
mov
add
adc
cmpl
lea
aaa
push
mov
stos
stos
sbb
cmpsb
cmpsl
xchg
mov
or
and
push
lret
stc
push
insb
jno
jns
lretw
ret
je
sbb
aas
xchg
lods
pop
outsb
sub
mov
mov
lods
xchg
shll
cmpsl
dec
lcall
jbe
test
popf
rol
jae
or
mov
push
shr
push
jns
jge
and
push
mov
arpl
lea
sbb
sub
lods
mov
insb
jl
fidivl
aaa
stc
hlt
fdivrs
xor
scas
inc
sub
mov
add
js
add
js
inc
fstps
push
out
and
in
mov
subl
mov
and
cmp
cmp
ja
or
mov
sub
pushf
mov
mov
push
push
mov
sub
and
add
xchg
int
and
cmp
or
adc
mov
inc
dec
or
fistl
sbb
mov
psubusw
ljmp
pop
ljmp
jnp
mov
ljmp
cmp
add
inc
or
out
and
fs
push
fptan
loopne
push
test
mov
fstl
mov
jne
iret
and
sbb
fstp
xor
xlat
insl
leave
ficoms
cmp
push
jecxz
fdivs
push
xor
add
jns
mov
cmp
cmp
aam
inc
ret
add
cmp
mov
pop
std
into
iret
and
fildl
stc
std
push
movsb
inc
push
pop
jnp
scas
xlat
roll
adc
cmpsl
out
jae
and
inc
xlat
fldcw
sub
outsb
dec
popf
xor
in
std
orl
dec
add
popf
std
popf
fisttps
lds
mov
mov
dec
xor
fcoms
mov
and
lea
lods
xor
mov
and
sti
mov
insb
cmp
jae
lds
aaa
cltd
mov
jp
je
fisttpl
sbb
cmpl
lds
cmp
mov
jb
and
pusha
inc
in
jg
pop
lock
jo
push
mov
dec
adc
lcall
lock
pop
mov
clc
inc
cli
adcl
add
xchg
sbb
cmp
cmp
sbb
inc
and
xorl
push
jo
frstor
fildl
push
outsl
jmp
push
loop
push
pop
movsl
das
clc
pop
fsubl
aas
mov
jle
dec
fists
inc
mov
aas
inc
nop
dec
xchg
loopne
les
push
xor
out
enter
cwtl
dec
sbb
jo
jecxz
test
add
test
daa
lret
ret
jns
mov
or
bound
int
in
repnz
adc
dec
movsl
dec
mov
mov
bound
mov
pop
out
jno
in
loope
pop
das
rcl
mov
in
test
test
in
jne
pop
cmp
push
mov
and
jmp
xor
and
ss
test
rorb
cmc
dec
lahf
pop
xor
or
fsubp
es
adc
push
sub
das
jns,pt
int3
jo
imul
xor
mov
orb
add
mov
shrl
mov
jecxz
xchg
or
repz
test
mov
cmp
pop
out
jle
mov
adc
and
xor
std
aad
cmpsb
rolb
ficoml
push
adc
lock
and
out
mov
loopne
les
mov
adc
mov
mov
divl
divl
adc
adc
fwait
push
sub
xor
sbb
mov
fistl
jl
fcomip
pop
and
ficomps
sbb
mov
pop
sub
jns
sbb
jmp
push
xor
pop
outsl
stos
sbb
sbb
push
cmp
add
sbb
inc
mov
pinsrw
mov
icebp
sub
cmpl
mov
add
push
aaa
mov
rclb
ds
mov
mov
and
jmp
xorb
push
mov
pop
cmp
decl
leave
imul
ss
pop
add
ljmp
lret
cld
aam
or
insl
test
dec
rcl
sbb
fstl
jmp
and
xchg
push
rolb
xchg
jo
daa
int3
daa
dec
push
inc
xor
sti
lahf
scas
ret
pop
pop
rclb
inc
mov
test
jl
jne
add
ljmp
fs
ljmp
inc
inc
jg
jl
add
xor
lock
pop
or
jns
bound
aaa
push
and
and
jo
mov
loope
inc
and
sti
xchg
and
pop
or
insb
call
jo
xlat
pop
rcr
ss
mov
mov
dec
insl
mov
push
add
test
and
ljmp
lods
out
repnz
std
flds
sub
or
pop
scas
dec
sub
cmpb
shlb
jno
fwait
sbb
jecxz
iret
sbbl
movntps
pop
arpl
jle
lret
push
fldt
cmp
and
ljmp
xor
cmp
fisubl
cmp
jp
es
es
imul
loope
push
push
test
mov
jb
xor
cltd
roll
popa
mov
int3
jl
lret
iret
aaa
pop
in
sub
dec
jle
insl
in
xor
das
aas
mov
stc
mov
loop
ret
jle
test
sub
mov
cmpb
push
and
sub
fstpt
pop
sbb
add
ror
jnp
in
mov
mov
cmp
xor
mov
fldcw
push
dec
popf
pop
jmp
fsubs
popa
je
mov
xchg
mov
sbb
sub
mov
cmp
dec
adc
cltd
xlat
cmp
int
jnp
fdivrl
cmc
dec
xlat
insl
das
and
add
push
or
push
cltd
jp
fidivrl
xchg
adc
pop
jle
clc
jae
nop
repnz
jmp
mov
lret
ss
or
pusha
push
call
test
xchg
icebp
mov
push
dec
test
das
ss
lods
clc
push
jmp
fstpt
fidivs
push
xchg
cmp
je
lahf
mov
insb
add
mov
sarl
push
pop
push
int3
arpl
in
xor
sahf
iret
jl
adc
test
rcll
add
mov
pop
jmp
push
in
push
xor
lret
dec
jl
jmp
pop
push
pop
into
mov
and
add
and
inc
sbb
subl
push
or
test
pop
inc
negb
stc
xchg
add
jl
mov
std
mov
and
mov
and
adc
mov
hlt
popf
ljmp
push
lock
fcomps
sbb
int
stc
jne
lcall
mov
dec
in
in
pushf
and
test
adc
mov
in
scas
pop
out
cwtl
sbb
lret
in
mov
dec
dec
mov
arpl
lea
scas
sub
sti
jae
push
fldcw
dec
add
loope
mov
mov
lcall
adc
iret
loop
add
push
clc
and
sbbb
inc
xor
push
aas
aas
mov
jmp
mov
jl
and
add
mov
rcl
stos
inc
test
mov
test
lea
les
push
adc
xor
mov
pop
test
mov
jb
push
dec
adc
mov
insb
adc
inc
fsubrp
mov
negb
and
inc
push
cmpsb
xchg
das
xchg
jno
dec
mov
aad
lcall
xchg
lcall
in
cmc
shl
loope
jge
bound
add
push
aad
into
add
jbe
jg
mov
outsb
sbbl
sub
fmuls
push
adc
xlat
cli
adc
js
ds
push
or
lods
call
into
add
data16
loop
jb
mov
testl
icebp
jge
and
push
cmc
sbb
xchg
xchg
fnstcw
cmp
lock
sub
jle
repz
ror
fsubs
cmp
call
push
loopne
pop
mov
sub
or
test
cwtl
inc
stos
shll
inc
mov
dec
xor
lods
mov
stos
or
ret
fdivl
push
sbb
inc
inc
xchg
ja
sti
rcrb
mov
repz
xor
dec
sbb
inc
mov
and
es
fimull
xchg
pop
inc
rcll
jno
in
xor
or
ret
pusha
jle
pop
sbb
sbb
sbb
xor
js
sub
lock
sub
jle
sub
jge
jb
sahf
repnz
outsl
loop
or
in
bsf
dec
dec
popf
dec
pop
jge
jge
push
sarl
mov
movsb
test
and
cld
popa
xchg
jmp
idiv
push
mov
fsubs
ss
cmp
mov
popl
arpl
inc
mov
nop
push
mov
out
cmp
mov
and
or
adc
bound
lea
enter
push
lods
sar
pop
push
icebp
pop
cltd
stc
sbb
stos
pop
and
aam
mov
test
movsb
scas
clc
fldenv
dec
ja
hlt
out
jle
jae
inc
sbb
or
addr16
lcall
cmp
cmp
xchg
pusha
clc
repnz
test
mov
int3
ret
outsb
imul
outsb
lods
movsb
pop
aad
sub
cs
mov
popl
add
js
popa
sub
xor
jnp
aaa
jl
jg
jle
adc
cltd
jecxz
mov
adc
lret
pop
sub
mov
pop
push
fs
jne
or
add
mov
fnsave
pusha
rcl
or
mov
inc
and
roll
mov
aam
add
push
add
sbb
cmp
jno
sub
mov
cld
subb
aad
or
or
bound
mov
adc
xlat
adc
fstpt
cmp
leave
sbb
sti
adc
sub
adc
inc
or
lret
les
dec
movsl
and
or
inc
mov
iret
xor
ja
xchg
jno
std
cmp
js
and
mov
cmc
das
std
adcb
jp
jb
adc
or
scas
repnz
daa
test
fmuls
out
push
push
cmp
int
dec
cmp
adc
push
adc
std
bnd
xor
pop
clc
rcrl
xchg
xchg
pop
mov
xchg
sub
js
out
data16
mov
jmp
pop
xor
lahf
lahf
lds
int
clc
std
addr16
or
lcall
iret
aam
cltd
pop
popf
sahf
daa
cmp
lods
inc
scas
inc
mov
das
loop
jns
lock
aaa
negl
sub
rcr
mov
mov
sbb
jp
les
cld
and
sub
adc
cld
xor
xchg
add
pop
loop
mov
add
mov
and
outsb
leave
arpl
sahf
xor
addr16
dec
push
xchg
cmp
icebp
jp
popa
shlb
xor
add
push
or
cs
adc
jae
jp
cmpl
xchg
mov
pop
fs
stos
add
out
sbb
fwait
push
cmp
aas
lahf
lock
shrb
and
daa
add
mov
or
imul
test
sti
lock
out
inc
cs
or
push
push
cmp
movl
lods
movsl
push
int3
scas
inc
popf
mov
testl
repz
xchg
xor
inc
cmc
pusha
jg
adc
xlat
mov
stos
mov
cmp
and
jns
lods
pop
gs
xchg
in
sbb
ja
imul
out
inc
jge
dec
push
xchg
pop
dec
push
mov
jne
cmc
mov
nop
sub
in
mov
sets
sub
aaa
cmp
fstpt
push
xchg
xlat
xor
jbe
inc
in
ljmp
sbb
xchg
and
aad
repnz
add
cmc
mov
push
dec
inc
rcl
xor
sbb
dec
hlt
scas
subb
imul
xor
gs
push
das
das
fwait
shll
sbb
stos
xchg
shrl
mov
icebp
insl
adc
jg
sbb
jl
mov
imul
pop
inc
cmp
aad
xchg
xor
pop
frstor
divb
mov
pop
xchg
insb
sbb
jb
sub
in
add
in
out
pop
rorl
mov
or
loop
push
daa
iret
push
jp
cmpsb
loope
in
ja
jmp
cmp
mov
je
cmp
shlb
stos
push
cmp
test
stc
test
push
sarl
xchg
xchg
adcb
aaa
xchg
cs
sub
cmp
adc
scas
mov
xchg
sub
mov
imul
mov
and
inc
jp
iret
cmp
daa
ds
mov
push
xor
jns
jb
jl
insb
xchg
cli
enter
mov
cli
bound
cs
push
adc
adc
add
fstpt
adc
sub
mov
je
xlat
mov
repnz
push
mov
pop
cmp
inc
jbe
dec
in
xchg
xor
mov
lock
iret
push
std
shll
mov
jmp
cltd
es
jbe
jne
fcmovnu
mov
popa
into
mov
lods
fisubrl
xor
in
int3
or
shrl
xor
imul
sbb
shrb
adc
popf
movsl
cmp
add
jb
adc
mov
sbb
and
pop
cmp
sahf
mov
dec
cld
std
sub
mov
inc
mov
mov
pop
mov
xor
cmp
ret
adc
mov
dec
mov
sbb
mov
stc
push
cmp
add
js
and
pusha
mov
xor
lods
mov
sbb
cltd
push
sbb
cmp
iret
mov
xlat
ds
popa
call
xchg
fld
sbb
pop
imul
push
sub
xor
frstor
int3
xchg
xchg
sub
not
fildl
rcrb
hlt
mov
cs
out
adc
mov
lret
xchg
scas
sbb
fdiv
fsts
movsb
jecxz
repnz
jmp
test
stc
mov
xchg
pop
les
adc
outsl
decb
sub
adc
imul
test
hlt
inc
popf
mov
adc
xchg
fisubs
mov
xor
in
jle
xor
mov
in
adc
push
out
xchg
push
push
pop
mov
xor
lods
jge
dec
daa
sub
mov
repz
jo
sub
movsb
fstpt
mov
test
fwait
add
xor
jmp
push
add
mov
push
adc
inc
xor
mov
fimull
push
and
mov
jl
mov
adcl
sub
mov
clc
lahf
dec
or
scas
sbb
repz
sahf
xchg
fistpl
inc
dec
mov
jg
mov
add
sub
mov
xchg
or
adc
cld
js
sahf
and
cltd
imul
jns
mov
push
push
out
daa
sub
xchg
dec
outsb
or
outsl
jle
imulb
fstpl
imul
sub
divb
dec
scas
mov
iret
sbb
or
mov
cmp
push
xchg
call
bnd
data16
jl
loopne
push
lods
pop
push
pop
sub
iret
and
ret
movb
mov
inc
xchg
pop
shll
cmc
dec
inc
test
mov
add
inc
fwait
xor
clc
push
call
mov
lea
mov
or
cld
mov
iret
ds
jns
mov
cmc
scas
out
out
sub
in
outsb
push
pop
sub
int
bnd
pop
outsb
xchg
push
jmp
sub
cmp
jnp
stos
inc
aas
pop
aad
insb
mov
push
add
push
je
inc
sti
mov
cli
inc
mov
lret
and
hlt
jge
xor
mov
push
mul
and
bound
scas
sahf
dec
or
pop
lods
dec
xor
jae
scas
push
mov
cmpsl
jmp
out
es
mov
xor
test
movsl
loopne
adc
cwtl
xor
sub
mov
xchg
add
xchg
cltd
popf
sbb
pop
mov
bound
es
shrl
dec
dec
cld
mov
popa
aad
loop
xor
push
inc
xor
dec
xor
psubq
int
ret
sti
rorb
ljmp
sbb
jnp
and
loopne
arpl
int3
dec
xor
rcl
mov
sub
and
xlat
addb
or
add
jb
cli
popa
cmp
inc
mov
pop
insb
add
pop
pushf
divl
movsb
jl
push
addl
imul
mov
aad
movb
sub
sub
mov
inc
insl
xor
stos
cmp
xchg
subl
push
or
sub
fstpl
push
cli
xor
test
add
xchg
fcoms
insl
push
mov
pop
and
aad
push
jb
aam
pop
mov
pusha
pop
inc
aaa
jne
sub
fstpt
stc
mov
js
sbb
xor
mov
shrl
int
aas
pop
or
lock
das
xchg
mov
lea
xrelease
iret
scas
cmp
nop
add
cld
insb
sti
clc
ss
cmp
lods
mov
call
xor
scas
or
loop
or
pop
mov
pop
cmp
mov
jp
fcmovbe
pop
ret
mov
mov
dec
mov
pop
out
and
mov
aaa
vcvtpd2psy
out
outsl
cmc
je
xchg
jae
dec
jp
cmp
mov
pop
filds
push
ds
stos
dec
add
adc
push
bound
fildll
xchg
iret
inc
pop
adc
repz
jns
mov
and
sub
pop
push
mov
mov
shll
scas
mov
inc
popf
xchg
ss
mov
mov
ficoms
sbb
pop
jae
pushf
flds
pop
inc
popf
arpl
push
or
shl
in
adc
test
push
push
mov
pusha
jo
arpl
scas
adc
or
dec
in
or
stos
aas
das
fcomps
lcall
push
insl
jns
test
fiadds
ja
push
clc
int
cli
jge
ss
lea
repnz
inc
adc
faddp
shll
sbb
mov
shrl
push
int3
push
hlt
and
repz
pop
je
add
pop
roll
out
or
adc
fnstenv
inc
mov
cmpsl
shrb
xor
fisttps
xor
jge
mov
out
adc
mov
cwtl
mov
out
cli
pop
mov
insl
jl
into
cwtl
add
dec
sbb
cwtl
inc
mov
mov
cmpsl
out
addr16
icebp
or
mov
dec
lret
pop
mulb
xchg
push
add
lcall
lea
into
cmp
cmpsl
mov
arpl
dec
shrb
dec
push
sub
aad
nop
jb
dec
test
jp
test
int3
repz
out
and
gs
scas
mov
sbb
es
jmp
mov
enter
or
add
dec
int
push
rcr
lods
rcrl
jb
xstore-rng
cmpsl
inc
sti
inc
addl
loop
movsl
filds
out
popl
addr16
cli
iret
addr16
adc
inc
stos
add
pop
fisubs
push
inc
cmp
ficomps
aam
mov
mov
add
ds
push
mov
popf
ret
fbstp
xchg
stc
in
dec
adc
lea
mov
or
push
idivl
jl
in
lds
push
fs
xchg
pop
dec
je
mov
inc
loop
jno
push
or
hlt
fwait
dec
xor
mov
pop
je
fistl
and
push
push
pop
xchg
lcall
sub
out
xchg
and
or
dec
jle
fabs
xlat
in
packssdw
loopne
iret
iret
ds
cmc
cwtl
aaa
icebp
mov
lahf
in
mov
popf
frstor
shll
add
rcll
and
jge
cli
ds
addr16
setge
lock
pop
jno
cmp
mov
jae
inc
sub
into
sbb
aam
idivl
std
stos
lahf
mov
pushf
pop
pop
jecxz
daa
jl
lcall
fwait
mov
and
ja
adcb
inc
cmc
mov
push
xor
mov
sub
sub
mov
cmovo
ficompl
sarl
jnp
popa
enter
push
js
insl
mov
shrd
pushf
add
xor
adc
call
aad
clc
or
out
scas
sub
data16
xchg
sbb
jecxz
enter
scas
fildl
push
leave
lods
icebp
cmp
in
iret
dec
pop
sqrtps
inc
mov
pop
cli
sbb
inc
inc
sub
inc
leave
inc
outsb
mov
test
and
insl
and
adc
bound
icebp
pop
pop
lcall
xchg
js
lods
mov
jmp
out
lds
xchg
inc
outsw
fldt
pushf
pop
fcmovb
cmp
leave
pop
dec
push
pop
add
ret
sub
cmp
fsubs
adc
mov
jns
pop
shrb
fidivrs
ret
mov
inc
xchg
mov
push
jmp
ficoms
pop
pop
pop
cmpl
pop
jae
leave
outsb
ds
cld
xchg
pop
push
xlat
dec
push
push
icebp
or
push
pop
fistl
in
lea
insb
es
mov
jae
test
shlb
cmp
push
mov
push
movsl
or
test
xor
cmp
or
fisubrs
iret
ljmp
repz
or
and
push
jnp
cmpsl
dec
pop
shll
or
cmp
sub
ss
in
dec
pop
sbb
pop
mov
cwtl
pop
jae
mov
mov
add
dec
ds
idivl
xchg
aas
xor
mov
js
sbb
fldcw
mov
mov
dec
arpl
pop
cmp
popf
xchg
cwtl
push
loope
sbb
jb
xor
dec
cmp
test
cmpsb
add
adc
adc
push
outsl
in
test
cli
xor
lcall
out
or
cmp
ljmp
inc
add
out
xchg
idivl
xor
pop
pop
outsb
mov
fldcw
or
mov
xor
js
in
loope
call
mov
and
test
movsb
call
and
fdivs
sti
lcall
pusha
push
cli
orb
push
stos
jns
xor
add
sub
into
addr16
push
lahf
pop
mov
loop
or
pop
in
movsb
ja
mov
push
mov
shll
xchg
mov
push
sbb
out
push
mov
add
in
repz
push
aad
push
fsubrl
pop
fcos
into
pop
sbb
push
cmp
fs
add
cmp
mov
push
mov
cmp
notb
hlt
and
pop
test
popf
jge
iret
cmp
adc
test
fisubs
les
ror
clc
push
mov
cli
je
sbb
jnp
dec
mov
popa
xor
inc
movsb
out
cmp
ljmp
out
arpl
jl
inc
mov
cs
sbb
and
mov
inc
data16
jne
ss
scas
pop
shrb
sahf
outsl
sub
out
pop
xlat
fwait
cmp
popf
add
adc
mov
pop
jecxz
push
ja
filds
fnstsw
lcall
xchg
movsl
cmp
out
lea
jp
stos
mov
sub
jg
or
add
pop
ja
cmp
xor
cmc
test
mov
push
add
pop
pop
xlat
mov
and
or
imul
jmp
pop
ds
adcl
inc
int
stos
dec
and
scas
mov
pop
lret
sub
in
fldt
jecxz
inc
loopne
mov
lods
pop
aad
dec
adc
or
imul
mov
dec
mov
pushf
test
jg
hlt
jo
jg
cmpsl
jmp
test
lea
xchg
test
cmpsb
popf
imulb
movsl
push
gs
insl
add
jp
mov
jae
loope
enter
std
push
mov
mov
dec
push
mov
pop
rorb
and
jg
sbb
or
out
adc
dec
lods
scas
lock
repz
outsb
sbb
popf
fcmovu
mov
scas
add
into
mov
mov
jnp
jge
icebp
sti
add
sbb
ja
cltd
lods
int
sbb
mov
add
enter
mov
push
add
push
and
sub
pop
dec
ss
xor
sbb
cmp
pop
pop
mov
jg
stos
in
call
les
testl
lea
cs
mov
sbb
enter
mov
insb
out
loop
aad
aas
out
jne
negb
movsb
mov
sbb
inc
lock
ror
cli
push
mov
hlt
adc
and
imul
cltd
fisubs
stos
jmp
gs
and
or
push
xor
push
ss
cmp
mov
jmp
decb
fstp
sar
cmp
add
and
adc
jmp
imul
adc
scas
push
into
aam
add
sar
call
arpl
test
std
xlat
inc
push
bound
mov
inc
aam
mov
pop
dec
insb
and
add
enter
sbb
insl
xchg
add
rcrl
ss
icebp
leave
pop
stos
cmp
mov
iret
stos
gs
pushf
inc
fsubp
lods
pop
push
test
or
cmp
jp
sbb
cmc
sbb
es
push
aas
in
push
mov
xchg
aad
sub
mov
imull
cmc
or
in
adc
lret
in
or
push
lahf
std
mov
push
adc
insb
cmp
test
or
xchg
lret
jp
test
dec
xor
mov
adc
jmp
mov
frstpm(287
int3
xchg
xchg
sbb
push
insb
mov
add
push
popa
sbb
out
xlat
ljmp
jae
loope
push
push
scas
dec
pop
xchg
adc
cmc
testb
aaa
xor
cmpsl
or
mov
cmpsl
or
and
aaa
bound
xlat
xor
dec
aam
push
loope
mov
ret
push
dec
pop
push
enter
stc
xchg
mov
rcrl
inc
loop
test
mov
jae
jle
in
ret
outsl
clc
mov
mov
push
mov
outsl
jg
mov
sbb
and
rcr
add
subl
fwait
cmovbe
cli
adc
add
mov
push
in
addb
mov
or
icebp
dec
js
in
inc
mov
sarb
add
mov
in
jne
push
out
sub
or
out
inc
in
pop
jmp
mov
or
movsl
adc
or
pop
xchg
repnz
arpl
ja
xchg
adc
mov
pop
dec
outsl
loop
pop
mov
xchg
negb
scas
ja
pusha
jle
out
loop
xchg
in
lock
sub
add
test
in
xor
sub
jno
movl
loop
pop
aas
nop
pop
dec
sahf
jns
test
cmp
pop
mov
imul
stc
mov
mov
inc
lods
cmc
repnz
icebp
lds
andl
test
push
jne
inc
pop
cmp
test
das
adc
and
lods
xchg
rclb
jbe
rcll
es
xchg
push
mov
int3
test
xchg
bound
nop
inc
jge
or
and
cmc
pop
popa
icebp
sbb
cmp
cli
xor
and
jle
push
mov
int
shrb
xchg
je
pop
cltd
les
dec
fistl
xchg
lea
add
pop
shrb
cmp
in
cmpsl
mov
pop
test
shll
xor
dec
adc
in
mov
adc
jl
shl
adc
push
add
cs
imul
stos
mov
dec
loopne
mov
xor
mov
dec
mov
dec
cmp
mov
or
sbb
jbe
cmp
addr16
in
loop
int3
in
lcall
xor
repnz
movsl
push
xchg
daa
and
or
int
nop
sub
mov
cmpsb
out
je
cmp
shl
shl
aas
imul
pusha
icebp
sbb
pop
out
dec
jmp
dec
scas
cmovp
mov
pop
icebp
xchg
cmc
aam
xor
fdiv
les
cmc
popf
rcll
mov
gs
mov
out
fidivrl
rcrb
xor
sbb
hlt
or
pop
cmp
rcll
jg
push
incl
or
insb
call
mov
vmread
pop
stos
in
push
sbb
or
andl
mov
jnp
mov
pop
ds
sbb
jmp
push
ljmp
jp
xlat
lret
pop
jle
xchg
xor
addb
loopne
and
adc
gs
out
test
adc
test
out
push
jnp
dec
in
fadd
pop
sbb
push
sub
pop
data16
push
clc
dec
jg
pusha
lock
out
ror
and
or
aaa
sbb
xor
add
stc
sti
inc
push
lret
dec
pop
push
adc
aas
pop
mov
push
mov
dec
jns
dec
dec
jmp
xchg
fninit
push
std
jecxz,pn
push
scas
dec
cmp
in
dec
jecxz
jnp
fldenv
cmpsb
hlt
jbe
mov
bound
je
subb
in
mov
test
imul
rclb
sub
jb
arpl
test
lock
adc
aas
dec
insb
mov
pop
insl
dec
daa
xor
and
sub
movsl
lret
mov
jns
fmul
jne
js
test
pop
leave
sbb
pop
lods
decb
sbb
lock
or
das
insb
cs
orl
cmp
and
adc
scas
adc
cmp
aad
gs
scas
sahf
or
aam
aaa
push
pop
jno
sbbl
push
cwtl
adc
fistpll
push
dec
pop
inc
fwait
mov
sub
stc
pop
mov
xchg
sbb
adc
push
daa
dec
movsl
pusha
sbb
lret
xchg
mov
popa
lds
test
fiaddl
mov
outsl
and
movsl
pushf
inc
pop
add
add
cmp
pop
int
sub
push
xchg
outsb
imul
js
and
jecxz
push
mov
mov
je
mov
out
ds
xlat
sarl
movl
lret
shlb
push
jb
ficoms
inc
cmpsb
ljmp
cld
lahf
cltd
pop
pop
mov
cmp
pop
and
add
inc
out
jge
mov
inc
lcall
js
in
cwtl
ror
mov
popa
sbb
cmp
mov
dec
cmp
mov
cltd
shl
pop
mov
and
decb
imul
cmp
shlb
in
push
adc
hlt
repz
aaa
popa
roll
outsb
imul
js
push
jg
mov
out
jmp
leave
xchg
jno
sub
ja
dec
daa
jbe
bnd
adc
rcrl
fdivrs
jns
ja
pop
cltd
sarl
fnstenv
repnz
popf
stos
ljmp
mov
aaa
sti
cwtl
jecxz
xchg
out
cs
dec
mov
rorl
push
in
xchg
jmp
ja
ret
cmpsl
sub
inc
pop
pop
aam
das
dec
fcmovne
daa
adcb
js
gs
xchg
iret
sbb
ss
movsl
aas
jle
sub
cwtl
jo
cli
xor
shrl
scas
push
rcrl
loope
or
nop
or
notl
or
pop
pop
lret
loope
fcom
jae
push
jmp
ds
ret
insl
push
fidivs
repnz
xor
repnz
sub
pop
cmc
xchg
push
xchg
sahf
test
fidivl
lea
sbb
xor
pusha
imul
insl
std
adc
push
mov
call
fisttpll
daa
adc
jae
xchg
je
cltd
mov
das
mov
inc
mov
cwtl
sub
enter
mov
test
push
mov
xlat
jp
xlat
push
aam
aam
push
mov
pop
xchg
filds
dec
ss
scas
lret
mov
add
cmp
mov
jns
test
addl
repnz
mov
dec
sbb
popa
stos
dec
inc
ret
pop
cltd
mov
cmp
repnz
das
inc
pop
rcrl
mov
xchg
lods
xorl
pop
cmp
insb
push
xchg
mov
cmp
inc
fmull
jo
push
dec
cltd
jo
sub
lock
fbld
push
xchg
sub
and
cmp
sub
loop
pop
jge
jmp
and
adc
je
nop
in
rorb
xchg
lret
mov
or
dec
sbb
out
xor
mov
movsl
cmp
gs
xor
inc
daa
adc
jmp
adc
outsl
fucomi
arpl
hlt
ret
mov
rorb
cmp
lret
pop
add
inc
fdivrl
repz
sbb
mov
mov
test
mov
pusha
mov
repz
mov
pop
iret
push
push
sub
int
sbb
sbb
scas
pop
lahf
mov
fmul
and
aad
push
aam
mov
jb
mov
mov
inc
pop
addr16
jae
sbb
in
nop
lret
mov
ret
fbstp
popf
fcoml
and
dec
mov
lods
out
dec
pop
jno
and
iret
aas
rorb
orl
sbb
jg
and
mov
mov
loope
mov
subl
pop
lret
mov
mov
push
pop
loopne
in
das
pop
lods
adcb
cld
xor
dec
sub
aad
push
xor
loope
mov
scas
fs
pop
jg
mov
mov
hlt
jb
ret
jle
xorb
mov
and
sbb
aas
mov
mov
xor
outsb
and
xchg
mov
das
std
imul
repz
lret
xor
mov
in
xor
xorl
in
cs
hlt
arpl
dec
lea
push
rcrl
das
dec
pop
push
xor
mov
cli
fwait
cmp
pop
lock
cmp
xchg
push
clc
fcompl
adc
repz
imul
dec
xchg
addr16
add
rcr
jle
adc
adc
push
mov
inc
shrb
in
or
jp
mov
rorb
cwtl
stos
fsubl
scas
jae
push
inc
xor
cmpsl
pop
inc
mov
dec
mov
popa
loope
mov
sti
adc
imul
shrb
xor
inc
adc
pop
lds
add
test
push
in
xor
sbb
popa
int
mov
lahf
mov
sub
shrb
lods
iret
aas
in
cmpsb
xchg
out
sahf
sti
mov
add
negb
sbb
and
jbe
je
mov
and
lods
cmp
dec
adc
xchg
mov
or
xchg
fidivs
sub
fildl
inc
cli
push
pop
sub
ljmp
xor
mov
push
add
cmpsl
dec
lock
fnsave
fdivl
ret
sub
in
push
popa
test
enter
or
cwtl
sbb
dec
ret
sbb
dec
sub
filds
sub
inc
push
das
jl
jb
cmp
icebp
mov
daa
std
pop
in
pop
lods
mov
aad
jecxz
xor
xchg
fidivrl
outsb
ret
ljmp
loopne
push
rolb
fstps
sbb
pop
and
mov
and
jno
aam
imul
lea
test
test
cmp
and
mov
jno
inc
lds
scas
loopne
xor
les
xchg
rcl
adc
push
js
mov
pop
and
cld
jno
outsb
add
cwtl
fsqrt
inc
pop
xor
push
out
mov
push
ljmp
push
cmp
cwtl
and
mov
or
imul
addr16
push
stos
sub
aad
adc
push
and
clc
into
sbb
sar
lahf
or
sub
cmc
fwait
lcall
orb
xchg
les
adc
fmulp
push
jo
out
jp
and
mov
pop
and
ret
arpl
inc
and
shll
adc
aam
sahf
imul
leave
pop
push
call
cmp
push
jne
fidivs
jecxz
push
je
inc
fdivl
fdivrp
add
lods
xor
inc
rcr
cmp
fstp
lods
inc
mov
in
mov
aaa
clc
add
stc
iret
orb
int3
in
arpl
and
inc
in
and
mov
cmp
imul
lahf
mov
pop
jecxz
rcrb
stos
mov
lahf
inc
add
into
loopne
into
pop
out
hlt
fucomi
adc
jle
das
cmpsb
mov
push
out
mov
adc
cltd
rol
inc
jns
pushl
lds
dec
pop
mov
shrl
cmp
repnz
lock
lods
cmpsb
leave
mov
in
movsl
sbb
jnp
and
stos
mov
lret
scas
popf
mov
roll
mov
in
pop
pop
cmp
in
in
ret
pop
sub
push
sub
ret
mov
push
aas
adc
xor
aad
dec
pextrw
sbb
adc
mov
add
mov
xor
sbb
popa
test
in
lcall
xor
rcrl
out
mov
out
add
nop
shll
sub
setg
jle
mov
cmp
xor
mov
add
ds
push
mov
enter
pusha
jmp
cmpsl
pushf
pop
cli
cmp
sbb
push
adc
call
mov
fistps
sahf
xchg
bound
nop
jle
dec
cmc
mov
in
mov
jbe
xchg
out
scas
in
in
lret
add
and
add
cltd
inc
sub
xor
out
jmp
adc
mov
dec
js
jb
pop
or
add
nop
fwait
sbb
xor
cmp
dec
mov
aaa
mov
jg
pop
jg
ljmp
adc
sub
gs
subl
push
and
in
test
push
std
into
leave
shlb
adc
fsubs
fwait
iret
xor
js
sbb
adc
push
push
sub
cmc
dec
xchg
mov
movsl
out
mov
sub
jne
sti
jno
aaa
cmc
int3
imul
in
cld
fistps
xor
ja
push
dec
cmp
mov
mov
mov
adc
push
cmpsb
addl
lock
fwait
enter
mov
cltd
pop
cs
cltd
cmpsb
adc
stos
out
sbb
cmpsl
ret
pop
push
jmp
test
mov
je
jbe
push
test
mov
fidivl
jo
cltd
addl
stos
mov
xchg
outsb
ror
notl
dec
lods
adc
cli
jae
shll
inc
cmpb
ja
cmp
lds
les
xor
adc
jbe
cld
mov
cli
orb
dec
fs
fwait
mov
pop
cmpsb
ljmp
cmp
mov
xor
cmp
sub
pop
mov
daa
sub
bound
cli
sub
std
sub
dec
les
aam
lret
pcmpeqb
push
negb
mov
jp
insl
lods
adc
lcall
pop
and
pop
xor
aam
insl
std
stos
mov
mov
lods
pop
cmpb
in
xor
dec
pop
inc
aam
lcallw
or
or
cwtl
call
push
mov
cmp
push
push
fldenv
mov
mov
cmc
arpl
jae
adc
ja
xchg
jb
pushf
test
jae
out
out
jmp
js
or
loopne
sbb
fisubrl
scas
loope
adc
outsb
out
popf
jge
cmp
daa
popa
stos
nop
or
and
adc
xchg
in
scas
jmp
test
movsl
arpl
bound
xor
in
inc
sub
inc
insb
mov
lret
jo
hlt
sbb
pop
cmp
pop
cwtl
loope
fsubl
test
sbb
andb
jne
adc
js
lods
sub
cmpsb
add
in
sahf
pop
lea
adc
dec
fisubrl
mov
mov
std
arpl
in
push
icebp
push
jnp
pushf
cld
shr
icebp
jmp
adc
push
lea
xlat
ss
mov
das
xchg
loop
movb
xlat
sub
test
xchg
pop
push
mov
sbb
mov
cmpsb
mov
stc
sahf
pop
daa
xchg
cmp
pop
cwtl
inc
xchg
push
stos
out
mov
mov
sbbb
sub
jbe
pop
mov
cmpb
scas
pop
ret
jns
je
lret
fistl
pop
sub
nop
cmc
cwtl
aas
aaa
jle
orl
icebp
or
xchg
push
push
icebp
aam
es
repnz
push
lcall
imulb
es
push
pop
and
mov
repz
shrl
cmp
scas
fsubs
fadd
daa
arpl
add
cmpsl
ret
dec
push
mov
notb
jge
mov
les
and
mov
xor
adc
xchg
adc
mov
adc
out
and
sahf
mov
in
les
call
and
aas
cmpsb
inc
and
and
mov
dec
cs
mov
xchg
push
orl
mov
or
sub
fisttpll
mull
pop
rcl
inc
mov
sub
or
mov
je
jle
cmpsl
inc
mov
mov
clc
outsl
lods
movsb
lods
mov
or
xrelease
push
sbb
mov
and
subb
mov
lock
pop
fs
push
sbb
mov
sbb
mov
xor
sub
mov
xor
sub
rcrb
lahf
fsub
pop
insl
cld
popf
les
sub
and
stos
cld
mov
xor
xchg
lret
lods
sbb
in
pop
cmp
jno
jns
or
lcall
push
test
jne
add
fildl
mov
inc
jmp
mov
inc
pop
and
out
leave
clc
sbb
jmp
lock
cli
je
pushf
mov
scas
lcall
xor
cmp
ret
lahf
pushf
sbb
and
mov
cmc
push
xchg
ret
xchg
in
cmp
dec
loope
inc
xchg
add
adc
jb
mov
and
enter
mov
inc
stos
ljmp
int3
pushf
les
in
sahf
and
mov
shrl
ret
push
xchg
std
push
pop
popf
in
icebp
fbld
dec
sbb
mov
insb
das
ljmp
mov
in
xchg
mov
rcr
mov
push
xor
out
xchg
jle
loopne
aaa
or
insb
jle
push
pop
lahf
mov
or
pop
adc
ljmp
inc
mov
mov
jmp
dec
sub
mov
loop
or
enter
pop
fwait
lods
push
out
sbb
fisubrl
and
out
test
inc
stos
ja
test
or
jb
cmp
scas
popa
shrl
and
push
leave
ja
adc
sub
xchg
jecxz
imul
fdivs
push
pop
ljmp
in
sbb
pusha
in
mov
out
xor
jg
or
fwait
xchg
pop
cwtl
jo
es
lock
int
dec
subl
push
scas
mov
cmp
xor
ror
cmp
mov
mov
cmp
fdivrl
lret
test
or
push
push
mov
add
sub
cmp
mov
push
icebp
arpl
shlb
or
mov
ret
push
shlb
add
cmp
aas
push
pop
outsb
cmp
inc
enter
les
xor
xchg
fnsave
xchg
dec
outsb
sbb
insb
push
out
leave
inc
fistpll
subb
jb
adc
std
repnz
les
jo
xchg
mov
fwait
xor
add
dec
xchg
add
sbb
in
sbb
cwtl
adc
sahf
push
mov
pop
mov
cld
cmpsb
cmp
dec
add
pop
fimuls
inc
sbb
stos
xor
fdivrp
inc
inc
stos
pop
pop
mov
fcomps
push
jmp
xor
mov
mov
mov
mov
dec
or
push
push
sbb
mov
or
mov
bound
cli
repnz
rcl
mov
mov
test
mov
mov
js
add
mov
mov
sub
mov
and
xor
xor
jge
pop
in
sub
lcall
sub
outsb
and
mov
sbb
mov
xor
jmp
cltd
sub
pop
jns
mov
das
push
dec
adc
inc
imul
pushf
je
or
test
inc
iret
jg
mov
xchg
ljmp
adc
movsb
stos
or
insl
repz
or
xchg
mov
fnsave
loope
cwtl
mov
push
pop
add
ret
outsb
fs
pop
add
test
cmp
push
loopne
push
mov
mov
pop
lret
dec
icebp
inc
sbb
jle
pop
shrl
aam
in
xor
dec
flds
jo
xor
push
sti
notb
add
insl
or
orb
mov
push
std
mov
lahf
push
pop
arpl
sbb
scas
dec
add
lcallw
es
not
pusha
push
aam
pop
mov
lret
pop
jge
push
inc
cmpsb
add
rclb
loopne
pushf
loope
dec
pushf
jae
mov
cmp
imul
clc
ja
movsb
shl
adc
pushf
lods
scas
cltd
mov
gs
fninit
inc
mov
push
and
jecxz
xlat
adc
pop
js
enter
mov
xorb
lea
mov
lea
add
inc
mov
loope
push
mov
or
or
ror
or
cmpsl
push
iret
and
xchg
pop
pusha
addr16
loopne
fsts
mov
stos
fmulp
fidivrl
mov
inc
rorb
ret
inc
mov
sarl
out
rolb
mov
pop
out
call
out
inc
or
mov
sub
enter
mov
fstp
cld
adc
lock
clc
xor
sub
negb
pop
hlt
aad
sbb
cmp
jb
and
fildll
push
js
adcl
add
fsub
bnd
xor
rolb
mov
or
mov
test
cmc
sub
push
aas
cmp
icebp
pop
cmp
jge
push
sbb
or
mov
dec
or
add
adc
incl
mov
or
jae
pop
int
dec
pop
loop
jle
inc
shll
test
dec
ljmp
repz
cmpsb
inc
pop
xor
fs
insl
mov
sub
lcall
jns
jns
das
ds
in
ljmp
mov
adc
xchg
xor
jnp
sahf
dec
xor
push
adc
fcmovnu
add
jecxz
data16
dec
imul
xor
cmpsl
or
push
and
cld
pop
xorl
sahf
inc
push
fcmove
dec
mov
adc
fdivrl
insb
and
mov
aad
push
sbb
and
jl,pn
cmp
inc
cmp
test
in
aaa
mov
rcrb
push
or
mov
cmp
inc
push
dec
pop
das
aaa
xchg
nop
push
push
or
push
xchg
leave
test
in
mov
dec
test
test
sbb
ljmp
cmp
dec
repz
sbb
std
sbb
lret
xchg
push
in
jge
adcb
fnsave
xor
mov
fildl
xor
in
insl
imul
in
ret
inc
xlat
int3
mov
sarl
xchg
sbb
pusha
cmp
dec
iret
sbb
push
lret
rcr
repz
cs
andl
cwtl
sub
ficompl
or
xchg
fstpt
xor
or
aaa
fsubrs
mov
arpl
xchg
ror
mov
out
push
dec
mov
xor
xchg
inc
popa
aad
lcall
rolb
add
outsl
outsb
int3
push
arpl
aad
cmpsl
into
jb
paddusb
inc
pop
andb
lcall
ja
pop
sub
les
daa
mov
lds
pop
es
iret
adc
lahf
sub
push
cltd
fdivrs
dec
adc
aas
jnp
cmp
and
in
sbb
fbld
loop
loop
xor
andb
push
cmp
and
pop
pop
jmp
fs
inc
or
lods
sbb
jbe
leave
add
in
xchg
jecxz
mov
push
xchg
push
dec
lret
xchg
lcall
nop
mov
inc
or
jns
or
xor
je
mov
sti
scas
cmp
dec
mov
sbb
orl
xor
dec
insb
pop
jno
xchg
les
adc
popa
mov
popf
clc
fs
mov
jl
cmp
fs
jbe
cmc
sbb
mov
incb
je
aaa
or
mov
add
fisubrl
ja
lods
sahf
xor
leave
xor
xchg
mov
ds
mov
loopne
lds
jl
cmp
mov
mov
mov
in
sub
dec
leave
xchg
mov
mov
or
push
shll
pusha
sti
mov
cmp
xor
repnz
sub
adc
add
pusha
repz
xor
xchg
inc
dec
cmp
filds
fdivr
xor
pop
jbe
aad
fcomi
repnz
out
cli
clc
dec
push
ret
pop
adc
les
imulb
jae
mov
into
inc
add
ret
mov
not
out
or
and
or
sub
inc
sbb
loop
add
sub
pop
push
dec
xor
inc
mov
aas
lods
scas
or
pop
sbb
loope
or
das
adcl
push
repz
ss
pop
in
push
inc
mov
addr16
jne
ret
repnz
mov
dec
stos
mov
mov
shr
mov
orl
xchg
sti
mov
mov
and
mov
js
out
filds
inc
stos
cmp
movswl
les
andl
imul
fldcw
lahf
je
dec
adc
add
fiaddl
stos
xchg
jns
mov
add
sub
dec
pushw
jmp
std
xor
outsb
cmc
jnp
jmp
mov
aad
pop
jmp
push
jmp
or
inc
jne
not
or
out
sahf
mov
sbb
pop
xchg
pop
adc
sub
nop
cmp
or
outsl
inc
mov
fistl
jecxz
push
xor
xchg
xchg
cmp
sahf
mov
rclb
lret
movsb
les
notb
mov
je
xor
pop
das
loope
aas
pop
dec
rol
hlt
xor
mov
mov
dec
mov
sbb
or
mov
mov
fidivrs
js
push
add
and
lcall
pop
fisubs
stos
cmp
dec
pop
fucomi
xor
pop
sub
xor
adc
enter
lahf
push
addr16
mov
fstpl
cmp
lcall
jo
or
push
cmovno
stos
outsb
cmp
bound
xor
lret
pop
dec
inc
add
or
popa
cmp
pop
test
ljmp
jae
jno
mov
sub
shll
sbb
dec
cld
mov
cmp
and
xchg
push
and
rol
jg
cs
stos
xchg
and
mov
loope
scas
cmp
push
cld
sahf
jge
stos
xlat
pop
lret
cld
cltd
push
iret
dec
push
loop
jmp
inc
nop
fistpl
repz
xchg
adc
fimull
jmp
aam
ret
mov
push
dec
adc
inc
scas
adc
repnz
into
out
and
test
push
decl
sti
adcb
mov
sub
fbld
push
pop
lret
pop
aaa
test
mov
xchg
jns
sbbl
cmpsb
cltd
inc
xchg
aad
jp
jno
mov
pushf
insl
adc
push
sbb
jmp
or
aaa
pushf
mov
lret
les
andl
adc
mov
or
mov
sub
mov
out
mov
fs
and
adcb
inc
jge
sbb
or
lea
les
ficompl
inc
pop
inc
mov
sbb
mulb
subb
adc
adc
or
push
out
cmp
sub
insb
and
fld
add
add
adc
sub
lcall
jle
pushaw
test
imul
and
repnz
lods
fildl
pop
dec
lcall
leave
jle
mov
lods
scas
pusha
inc
or
out
dec
pop
sbb
sub
mov
lcall
mov
and
inc
movsl
shrb
outsb
hlt
lcall
mov
or
adc
mov
xchg
xchg
mov
cmpsl
outsb
add
pop
aas
push
mov
cltd
lods
pop
lds
or
jle
sbb
imul
xchg
fmull
add
pop
repnz
test
stos
insl
lods
insb
sbb
adc
bound
cmpsl
data16
inc
jge
sub
loop
mov
adc
xchg
add
inc
mov
or
fbld
popa
cmp
cmp
sub
add
sub
push
insb
or
xor
das
mov
and
pushf
ljmp
lds
shrb
es
movsb
inc
push
call
insb
loopne
imul
mov
xor
xchg
sbb
sbb
orb
add
mov
in
adc
iret
mov
jb
divb
scas
jo
or
iret
rol
enter
stos
inc
out
jp
rclb
dec
pop
xchg
mov
in
subl
cli
mov
roll
jge
dec
pushf
add
jno
dec
inc
pusha
lds
xchg
mov
shlb
int
loopne
es
pop
jp
stos
sub
das
mov
sbb
mov
bound
push
mov
or
push
sti
clc
cmpsb
sbb
sub
mov
mov
mov
cmp
imull
ss
bnd
cli
pop
sub
mov
xor
repz
cmpl
aaa
iret
in
call
jno
xchg
jo
inc
repnz
xlat
aaa
and
scas
stos
es
int
and
pop
add
push
xor
jb
jno
jae
loope
push
scas
cmp
mov
pushf
pop
ds
cmpsb
mov
flds
inc
mov
jmp
xor
imull
xchg
scas
mov
les
dec
outsl
insl
xchg
daa
dec
xchg
push
roll
and
lods
jl
mov
adc
push
pop
andb
mov
in
or
adc
push
mov
popf
pusha
mov
imul
test
jnp
lods
bound
mov
xor
mov
xor
shl
mov
jno
std
dec
outsb
mulb
push
adc
or
push
cmp
mov
fnsave
dec
arpl
jle
stc
hlt
lahf
add
cmp
add
sub
inc
xchg
test
lret
jne
popa
out
hlt
out
inc
xchg
arpl
push
jecxz
add
add
lods
cmp
in
push
cmp
leave
lock
jge
loop
xor
xchg
or
add
cmp
test
mov
or
sub
stos
or
sub
into
and
sti
cli
nop
stos
enter
adc
lret
std
sahf
in
push
sbb
outsb
jbe
sbb
lock
orl
add
push
and
xor
and
mov
insl
cmpb
add
and
imul
and
imul
lds
shl
cmp
jno
shll
rorl
xor
sub
or
js
fs
pop
in
cmp
sarl
adc
cmpsb
xchg
add
pop
mov
lea
test
dec
inc
and
fcoms
mov
pop
push
mov
test
dec
mov
sbb
pop
nop
xor
cltd
xchg
aad
shll
fildll
push
xchg
mov
nop
out
push
movsb
jl
or
mov
ljmp
std
in
sbb
adc
movsl
add
xorb
push
test
mov
repnz
jo
insl
cmp
mov
and
pop
in
fimuls
aam
loope
xchg
rorb
test
js
into
scas
and
mov
mov
jo
cmp
ja
and
push
push
jne
jmp
int
mov
sarb
xchg
xchg
je
push
cmpb
nop
iret
dec
mov
push
and
jnp
ss
nopl
pop
and
sti
push
fbstp
and
pop
jecxz
xor
fxch
sub
insl
or
jmp
jns
mov
mov
sub
into
jmp
cwtl
mov
popf
lods
iret
xchg
inc
in
jmp
gs
pop
mov
jecxz
call
loope
imul
orb
xchg
pusha
rol
icebp
jle
sbb
test
xor
fiaddl
iret
mov
inc
push
xchg
push
je
adc
push
sub
cmp
cmpsb
les
aas
bound
xlat
cmp
xchg
jle
add
mov
sub
out
xchg
adc
hlt
int
jns
cli
or
xlat
mov
stc
pusha
push
xchg
and
jle
sahf
out
xor
jns
push
adc
xchg
fistps
mov
or
out
cmp
js
int3
dec
push
add
inc
aaa
xchg
xlat
fwait
lea
je
jbe
lret
lret
add
inc
sbb
dec
fldcw
sbb
and
ss
hlt
sar
push
mov
cmc
wbinvd
jns
lcall
xchg
movsl
or
add
insb
sub
push
insl
ret
cld
cwtl
int3
sub
add
fsts
mov
or
mov
cmp
fstpl
das
mov
jno
data16
shlb
popl
jp
int3
jmp
pop
jns
arpl
xchg
shll
push
or
add
test
cmp
icebp
outsl
or
hlt
xlat
push
enter
inc
and
dec
pop
adc
ds
ret
rcll
test
mov
pop
fwait
aaa
add
pop
pushf
and
cmp
add
inc
aam
in
aaa
push
sub
stos
imul
jl
xchg
adc
push
xlat
ljmp
xchg
cld
xorb
int
xlat
sub
les
insb
icebp
xchg
cs
mov
mov
pop
pop
lahf
jne
dec
loopne
mov
jno
testb
xchg
popf
imul
pop
jns
punpckhdq
stc
xchg
pop
push
pop
fiaddl
inc
lret
mov
mov
aad
into
fstl
mov
pop
add
xchg
mov
xchg
push
jg
sub
lds
jnp
jo
jmp
sub
stc
ret
out
das
fucom
mov
cmpsb
cmp
mov
xchg
rorl
pop
inc
stc
xchg
jp
shrb
clc
test
jl
or
movsl
mov
adc
sub
scas
xchg
data16
xchg
xor
mov
shrl
adc
inc
ret
jg
jmp
int3
fwait
mov
pop
cs
stos
andl
mov
and
pop
mov
lock
mov
fmul
roll
cmc
and
jge
pop
cmpsb
sbb
out
nop
int3
imul
in
jmp
repz
in
and
inc
dec
xor
fdivrl
ss
and
outsb
sub
pop
in
sbb
mull
sub
inc
mov
ljmp
out
mov
cs
fistpl
in
pop
pop
push
pop
push
mov
push
and
jae
outsl
mov
fwait
mov
sub
add
sbb
inc
out
adc
in
imul
xorl
sbb
repz
data16
jo
mov
clc
fs
xorl
jle
outsl
lcall
cmp
jl
int3
jmp
adcl
push
sbb
ret
push
ja
in
jecxz
xor
xor
push
and
xor
fxch
lahf
mov
data16
stc
push
push
and
gs
or
push
sbb
mov
in
pop
add
pop
int
pop
insb
xor
cmpsl
push
iret
mov
outsb
jecxz
cmp
or
shlb
stc
xchg
pop
cmp
scas
or
fists
xchg
xor
jb
jno
jne
sti
loope
mov
mov
cltd
insb
sbb
jne
roll
cli
aam
std
mov
enter
jmp
lods
loopne
inc
cmpsb
test
lret
sbb
rcll
les
push
pop
test
sub
sbb
mov
cmp
mov
test
mov
mov
ja
sub
nop
push
test
ss
das
xor
sarb
jle
test
xchg
sub
mov
xchg
into
jb
popf
and
inc
xor
sbb
ss
push
mov
jbe
cmp
adc
mov
add
ss
xlat
add
xor
xor
aad
cmpb
sub
mov
in
push
outsl
cmpsl
jecxz
mov
mov
insb
aaa
lahf
ljmp
adc
ds
mov
sarl
dec
movlps
cmpsl
ds
sub
mov
jbe
jns
pushf
sbb
bound
lods
cli
xchg
cmp
jmp
fsubrl
dec
push
sbb
lods
jp
xor
stos
sub
pop
aas
sub
aas
nop
xchg
mov
test
inc
push
movsb
and
push
mov
or
sbb
jg
je
push
es
mov
imul
pop
add
ljmp
movsb
cmp
movsb
xor
mov
pop
mov
enter
or
mov
das
movsl
dec
shl
xor
push
je
in
sbb
data16
adc
lahf
or
stc
xchg
fstpt
xchg
mov
ljmp
sub
dec
repnz
dec
int
out
add
ficoms
dec
insl
adc
and
jb
out
pop
stos
or
insb
sahf
push
push
aaa
jle
jnp
cmc
sub
mov
fs
out
push
jle
pusha
call
movsb
je
push
mov
pop
pushf
outsl
lret
push
movsb
out
pop
out
std
dec
xrelease
imul
xor
lock
fstpt
mov
dec
add
mov
test
inc
lcall
cld
in
jmp
sbb
xor
pop
aas
mov
jmp
xchg
adc
addr16
loope
sub
outsl
adc
outsl
mov
inc
daa
jmp
mov
xchg
repnz
hlt
test
jle
inc
out
mov
adc
add
mov
loopne
or
mov
ds
outsl
pop
lock
lret
add
xchg
add
ficoml
mov
or
mov
add
mov
pop
jae
in
pusha
pop
xchg
shll
lods
jnp
popa
push
arpl
lea
xchg
jp
fst
and
in
clc
and
frstor
call
in
add
mov
mov
sbb
arpl
orb
push
mov
and
arpl
mov
jmp
sbb
pop
jge
test
pop
inc
fmulp
loopne
aam
sub
sub
adc
push
fld
rcrl
sub
out
and
inc
mov
inc
leave
bound
push
mov
adc
icebp
mov
pushf
sbb
sub
dec
lods
ficompl
sub
bound
mov
and
mov
dec
mov
and
lods
into
or
fisubl
scas
mov
jnp
push
inc
outsb
jno
and
xor
xor
into
lods
sbb
sbb
ret
mov
mov
xor
nop
mov
dec
xchg
sbb
scas
push
pusha
stos
mov
bound
notb
inc
into
imul
xor
movsl
gs
sub
sahf
jo
jecxz
adc
xor
fldt
ds
stc
adc
add
or
sbb
dec
les
stos
cmp
push
sbbb
fldenv
push
repnz
ss
cli
adc
sbb
jnp
mov
add
ja
mov
pop
sbb
imul
adc
in
cmc
lahf
int3
mull
cmp
push
into
sub
loop
enter
test
cmp
push
xlat
mov
mov
jl
jae
test
push
dec
clc
imul
jo
xchg
adc
lea
movsl
cmc
mov
and
out
ret
mov
mov
xor
dec
pop
rclb
inc
das
xchg
popl
leave
push
testb
orb
pop
loope
out
jl
rep
inc
pop
scas
fwait
icebp
mov
pop
mov
jo
mov
and
or
push
das
add
lret
inc
das
xor
inc
outsb
das
push
pop
bound
repnz
fwait
scas
sbb
iret
nop
addr16
daa
cld
adc
jmp
pop
mov
cmp
dec
notl
in
in
insl
mov
add
data16
lds
and
jbe
lea
mov
inc
pop
outsb
enter
pop
test
jb
sar
pushl
and
loope
push
jno
lods
mov
mov
imul
mov
and
aas
gs
jg
sbb
test
adc
add
mov
cmp
mov
xor
push
jg
mov
popf
icebp
inc
ret
mov
lret
adc
push
xchg
add
mov
sbb
add
pop
fdivrs
ss
inc
or
mov
dec
pop
adc
or
inc
xchg
jne
mov
mov
pop
lods
mov
out
inc
stc
xlat
adc
callw
ljmp
pop
mov
int3
inc
sbb
inc
ja
into
mov
gs
cwtl
inc
in
jle
std
cltd
out
shll
repz
movsb
push
mov
xchg
xor
sahf
sbb
sbb
lea
adc
mov
sub
aam
ss
mov
mov
fcoms
jbe
and
repnz
push
in
icebp
popf
mov
jb
movsl
or
in
cmp
mov
shrb
inc
pop
xor
movsb
jne
and
repz
adc
icebp
or
adc
rolb
mov
ss
jp
mov
shlb
ror
ljmp
shlb
dec
pop
xor
push
inc
mov
andl
xlat
ret
jne
pop
mov
stos
out
sbb
and
pusha
sub
adc
push
sbb
or
pop
cld
jmp
xchg
mov
or
aad
mov
sub
je
aas
mov
and
xchg
sti
js
shlb
mov
jmp
cld
lahf
cmp
fucomp
inc
shl
movsb
test
mov
adc
cmp
pop
and
cmp
cmp
gs
into
leave
inc
xchg
fcmovnbe
push
pop
xor
push
inc
mov
xchg
xchg
push
stos
into
fsubr
inc
inc
dec
clc
dec
into
out
fiadds
push
test
test
jge
pop
or
cmpsb
sub
lds
fidivrs
imul
inc
push
in
xchg
shl
ret
popf
add
scas
test
daa
dec
fldl
fdivrs
flds
inc
loop
cmp
repnz
mov
cmp
mov
in
out
dec
sub
aam
push
in
mov
test
in
add
inc
fiadds
imul
xor
sbb
in
xchg
push
lret
xchg
or
xchg
loopne
jle
mov
or
cmp
cmp
ret
mov
ds
loop
enter
mov
lods
push
pop
mov
daa
sbb
xor
xlat
lret
push
push
add
cmp
rol
movsb
push
repnz
mov
iret
and
dec
ljmp
dec
adc
mov
and
push
aas
push
or
mov
fs
xlat
int3
aam
sbb
push
push
add
mov
xchg
pop
movsb
jbe
push
dec
dec
inc
faddl
nop
loop
mov
sub
call
sbb
cmp
decb
pop
nop
pop
cli
lods
lret
sub
aad
js
or
adc
push
dec
pop
xor
pop
lea
hlt
clc
sub
je
add
daa
test
in
mov
sbb
cli
adc
inc
insb
mov
loope
adc
je
pop
mov
dec
adc
lret
jnp
jl
stos
jecxz
jno
xor
push
test
fs
cmp
jecxz
mov
xor
or
int3
pop
ret
or
repz
pop
cmp
jo
std
mov
scas
or
test
and
sub
xchg
incb
cmp
into
mov
mov
test
add
iret
in
stc
jno
cmp
movsl
sub
popa
mov
in
jae
or
and
and
push
adc
jo
mov
es
inc
push
mov
pop
adc
in
mov
shrb
dec
inc
jnp
jo
cmp
add
pusha
fwait
mov
mov
push
roll
shrl
cltd
cltd
inc
js
test
add
sbb
push
push
sahf
sbb
mov
mov
sub
sub
loop
js
pop
sub
in
pop
jp
adc
iret
mov
sub
ficomps
clc
shll
andl
dec
loopne
cmpsb
movl
inc
lea
outsb
icebp
sbb
mov
mov
inc
cmp
jae
xlat
sub
aaa
xchg
pop
cmp
and
ficompl
sbb
or
add
inc
out
ficoml
aas
add
xchg
sarl
adc
cmp
sub
sbb
or
nop
cwtl
or
xchg
sub
jmp
cli
lods
push
dec
xor
mov
sbb
mov
fdivl
cmp
out
cli
sti
jle
inc
or
adc
lods
push
add
add
adc
or
out
or
cltd
xor
mov
cli
pop
mov
repnz
dec
ret
push
lea
mov
fdivrl
or
pop
imul
out
mov
pop
pop
inc
out
jns
cli
inc
sub
xchg
pop
in
mov
call
movl
xlat
stos
out
jge
sub
mov
in
fxam
test
jl
repz
mov
sbb
lcall
out
add
mov
sti
jg
push
xchg
push
idivb
adcb
and
stos
out
cmpsl
test
mov
cmp
xor
adc
push
cmp
mov
mov
add
mov
jle
inc
hlt
mov
lea
int
and
push
imul
and
inc
mov
fucom
lret
cli
mov
mov
and
xchg
dec
jmp
ror
push
cmc
pusha
out
mov
imul
jge
rcrl
xchg
mov
pop
jb
push
sbb
sub
and
imul
out
cmp
js
mov
hlt
das
inc
sbb
xchg
mov
test
adc
in
fwait
pusha
mov
dec
mov
loopne
sbb
cmp
lret
negb
jno
pop
fisttps
in
pop
mov
adc
jbe
jno
push
cli
rcr
mov
push
lcall
xor
cmp
sahf
jne
not
mov
push
xchg
testl
fadds
adc
xor
in
popa
xor
dec
xchg
jb
shrb
add
imul
loope
aad
xchg
push
and
mov
pop
or
faddl
fiadds
int
jae
lret
int
mov
daa
test
inc
mov
ret
inc
lahf
or
mov
call
fmul
test
in
push
es
jl
pop
jno
repz
scas
pop
int3
xor
jne
iret
outsl
inc
adc
push
push
mov
outsl
sub
fs
insl
mov
xor
mov
in
inc
cs
mov
enter
arpl
and
scas
insb
mov
add
pop
cmp
jne
icebp
jno
cmp
jp
pushf
cmpsl
int
lock
push
test
cwtl
push
cmp
test
pop
fidivrl
sbb
adc
mov
movsb
pop
icebp
jg
mov
mul
mov
fcoms
clc
jbe
test
adc
add
or
jg
imull
xor
cmp
imul
sub
jo
add
ret
pop
or
mov
push
or
and
lods
jnp
xlat
stc
lds
lods
pop
pop
fcmovu
es
and
call
jbe
mov
sub
cmpsl
add
fbld
xchg
mov
imul
sbb
dec
out
push
add
jmp
das
icebp
mov
push
rolb
cmp
push
in
cmp
jle
dec
pop
int3
mov
jecxz
ficomps
add
xor
fwait
shll
es
sbb
xchg
mov
into
dec
xchg
insb
dec
cltd
xchg
jl
cs
in
jns
rcr
lret
aas
jmp
jbe
andl
inc
popf
in
movsb
in
add
xorb
loopne
xchg
mov
cmc
dec
movsl
fmuls
aaa
jo
rcll
ret
stos
jo
sub
pop
leave
jo
cmpsb
adc
dec
jnp
mov
mov
lock
loopne
addr16
ss
aad
sbb
lods
fcomps
data16
cmp
push
mov
cmp
mov
scas
and
sbb
xor
jb
lea
mov
push
loop
mov
test
add
aad
arpl
arpl
mov
int3
mov
mov
xor
out
adc
or
insb
pop
insb
inc
js
sub
xor
mov
repnz
dec
icebp
add
jle
mov
in
and
lret
fcomps
adc
lds
xchg
xlat
stos
mov
movsb
sub
das
cltd
add
jnp
pop
or
in
push
lretw
add
xchg
push
xor
sub
pop
pavgb
xorps
cltd
jo
sbb
mov
mov
fimuls
rcrl
cmp
ljmp
cmc
inc
nop
xor
mov
mov
mov
test
repnz
test
push
push
or
adc
fwait
int3
push
mov
test
sahf
sub
aaa
loopne
adc
movsb
je
andl
jl
pop
lods
adc
and
jl
sub
cmp
jae
inc
mov
incl
mov
push
int3
dec
fcmovnu
outsb
iret
xor
pop
sti
sbb
into
jl
les
sbb
mov
cwtl
rorl
add
jge
or
daa
mov
adc
hlt
out
js
mov
fidivl
xor
movsl
stc
sbb
daa
lock
add
aam
mov
add
cmpsb
xorl
aam
enter
mov
mov
mov
fnstcw
mov
push
aaa
out
xlat
lahf
sub
dec
lds
stos
cmp
inc
dec
ljmp
testl
inc
call
insb
lea
mov
rcrl
push
out
push
repnz
call
or
jp
or
jno
ljmp
pop
jecxz
push
ret
sbb
jl
fs
call
je
insb
jno
fucomp
mov
or
ja
cmp
xor
das
in
or
mov
lahf
add
jle
inc
imul
mov
sbb
scas
popf
lods
add
out
push
clc
in
in
test
sub
or
call
sbb
jno
ljmp
loopne
inc
mov
mov
sbbb
andl
aaa
sub
jmp
mov
xchg
and
js
add
movsl
inc
mov
mov
pop
pop
and
shr
in
in
scas
push
lea
pop
sub
lret
sbb
dec
and
mov
scas
std
xor
sbb
int
jbe
jb
shlb
imul
in
pusha
ljmp
and
push
test
or
sub
jno
sahf
pop
jmp
pop
aas
lds
addr16
push
xlat
and
sub
test
or
jns
out
mov
repnz
cld
add
popf
je
testb
mov
imul
and
lahf
bound
outsb
and
jl
xchg
mov
popa
and
sub
imul
in
sbb
in
loope
lea
outsb
add
or
jp
push
lcall
movsl
shll
adc
sub
in
mov
mov
add
adc
insb
inc
mov
rorb
rcrl
pop
repnz
cmp
subb
jl
andb
test
fistps
pop
jecxz
jnp
sar
negl
stos
std
jmp
cli
inc
fidivs
inc
int3
scas
sahf
xchg
dec
or
std
and
jmp
loopne
xor
sbb
insl
in
lods
lret
cmp
jb
cmpsb
shll
sbb
idivb
je
pop
cltd
xor
and
xchg
lret
mov
adc
aas
or
mov
ljmp
and
jmp
test
and
inc
sahf
test
push
pushf
jnp
cld
adc
in
or
jns
sbb
out
jmp
adc
fimuls
mov
out
scas
test
outsl
dec
shll
mov
xchg
pop
aaa
cltd
inc
mov
ss
shlb
jbe
push
or
test
adc
movsb
lret
inc
in
or
pop
out
decb
dec
repz
and
adcb
adc
jmp
loop
jmp
faddl
cmp
loop
out
jne
sahf
fisubrl
xor
push
cmp
xchg
jl
bound
jo
popf
jl
push
inc
cmp
xor
sub
and
adc
push
aad
fcomi
movsl
ljmp
cli
push
sub
dec
push
jl
cmp
dec
enter
inc
pop
and
pop
push
or
jbe
mov
pop
and
or
pshuflw
inc
sbb
in
in
push
push
mov
ret
shrl
loop
orb
out
pop
int3
jge
push
sbb
pop
or
lods
loopne
sub
popf
jb
jmp
pop
pop
sbb
xor
xchg
rolb
dec
imul
mov
out
xor
mov
lret
dec
lods
jnp
mov
or
ljmp
xchg
xchg
mov
movsl
xor
movsl
jle
addb
xor
cmp
clc
add
or
dec
mov
cmp
out
mov
int
dec
adc
mov
or
inc
mov
jmp
ds
arpl
cmpsb
or
es
mov
call
andl
dec
ja
mov
inc
daa
stos
insl
dec
push
cmpl
sti
es
mov
pop
push
xorl
xor
je
jne
cmp
shl
sub
sbb
cltd
mov
jecxz
repnz
into
push
dec
clc
sub
sarl
push
shl
jge
ss
aaa
jns
jne
dec
lock
sbb
out
out
leave
jnp
stos
in
arpl
mov
push
shrl
lds
nop
sub
dec
hlt
push
and
fsub
sub
cltd
pop
inc
scas
fs
mov
rorl
adc
je
cwtl
mov
jne
hlt
in
jns
pop
or
cmp
push
xchg
loopne
cmp
xchg
cmp
dec
mov
insb
fwait
jae
ror
xchg
orl
test
notb
xor
xor
pop
sbb
sub
cmpsb
or
jle
push
mov
scas
jle
or
jecxz
inc
pop
mov
or
sbb
fcmovb
addr16
inc
inc
jbe
out
mov
mov
add
push
jne
loope
leave
mov
push
ret
pushf
lds
sub
cmpsl
inc
fisubl
xchg
push
lret
test
sbb
mov
clc
xchg
push
mov
mov
inc
sub
sub
and
in
stc
xchg
dec
mov
push
test
test
fildll
call
in
mov
js
adc
mov
cmp
clc
in
jno
int
jmp
out
jbe
jb
ljmp
fimuls
push
int3
mulb
xor
sub
mov
xchg
clc
stos
mov
ds
jno
mov
in
jmp
xlat
xor
sbb
mov
fisttpl
bnd
out
jno
inc
push
or
or
mov
jp
rorl
or
lcall
dec
sbb
int
rorb
jl
pushf
aam
push
pop
adc
jg
xchg
or
movsb
sub
pop
outsb
stc
add
addr16
ret
mov
imul
fidivrl
cmpsb
lods
mov
mov
or
aas
add
aas
xor
push
xor
fs
push
cmpsb
ljmp
cltd
into
les
ficoms
xor
sarl
mov
jns
mov
cmpsb
xchg
mov
jmp
cmp
dec
adc
sbb
and
mov
xchg
jbe
insl
pusha
xchg
inc
push
mov
in
dec
mov
and
and
mov
push
xor
popa
pop
mov
fwait
popf
cmp
inc
clc
jle
add
jne
dec
hlt
add
in
fldt
mov
in
sub
bound
mov
aaa
pop
push
je
add
jmp
fs
cmp
sbb
mov
insl
fildll
cld
jge
ljmp
rcll
mov
jp
movsb
jecxz
popf
ja
outsb
xchg
rorb
mov
dec
in
pop
push
add
xor
jle
push
or
pop
popa
fimuls
cmpsb
and
out
cmp
xor
insb
subl
add
push
and
push
lret
jnp
add
mov
xchg
les
loop
mov
pusha
push
jb
clc
mov
cwtl
push
push
pop
inc
dec
test
xor
mov
fwait
cli
xchg
cmp
sub
bound
xchg
lret
lahf
mov
fsubrl
xchg
xor
jmp
inc
je
mov
out
push
push
and
rcrl
shlb
js
jge
push
lods
push
jo
call
je
inc
inc
and
cmp
mov
test
sti
js
adc
xor
div
sub
rcrb
je
pop
adc
ror
push
xor
xor
idiv
pop
mov
mov
outsb
pop
cmpsl
je
push
fstpt
loop
test
mov
imul
jbe
sbb
and
rcrl
jbe
arpl
pop
adc
sbb
mov
push
cld
adc
test
lcall
xchg
cltd
repz
ficomps
and
lock
clc
sarl
in
sahf
std
call
inc
push
and
hlt
movsb
js
scas
xchg
sahf
pop
insl
les
sti
bound
repz
push
aad
sbb
lds
xor
jb
pop
dec
aam
add
rorb
jb
push
into
xor
xor
pop
mov
loopne
adc
ret
and
adc
mov
xchg
iret
call
outsl
sti
popf
sahf
push
mov
lahf
add
enter
outsb
cltd
movsb
jno
sbb
push
gs
add
lret
lock
fldl
aaa
iret
xor
loopne
outsl
sbb
mov
int3
cmpsb
cltd
sar
xchg
decl
jne
popa
sarb
jge
aas
add
or
cmpsl
xchg
dec
andl
xchg
xor
daa
adc
fsub
aad
pushf
mov
cli
lret
cmp
orl
popf
mov
mov
xchg
and
lcall
xchg
jb
and
add
pop
movsb
leave
roll
sub
popf
and
fnstenv
jb
fisubl
ds
popf
orb
dec
mov
das
lret
inc
outsb
add
negb
push
ds
push
fnstcw
clc
ljmp
xor
ds
adc
popf
imul
in
xor
pop
mov
movsb
lock
lock
popf
test
int3
pop
pop
test
and
lods
sub
inc
mov
pop
imul
in
clc
and
ljmp
roll
add
mov
test
push
or
cmp
stos
psllw
or
out
negb
and
dec
xchg
scas
push
pop
sti
dec
mov
or
fdivrs
lods
popw
sbb
or
jb
dec
mov
push
pop
or
xchg
sub
inc
xchg
idiv
mov
lods
arpl
icebp
mov
jl
push
fwait
pop
imul
cmp
pop
adc
int
pop
sti
adc
sti
xchg
adc
adc
outsb
or
sbb
jns
ffreep
and
imul
rol
xor
repz
mov
clc
ja
mov
rclb
cmc
lods
loop
out
cmp
xor
add
mov
lods
in
pop
movsb
repnz
cmp
mov
inc
test
sbb
push
lods
arpl
cld
mov
add
sub
or
dec
xor
or
scas
and
pop
dec
fs
cmp
enter
aad
and
daa
lfs
sti
cmp
xchg
sub
mulb
fucomip
inc
cmc
pop
jo
inc
lods
or
jb
adc
mov
les
repnz
mov
sub
mov
sbb
es
sbbl
mov
icebp
shlb
and
mov
outsl
into
test
repz
sahf
push
inc
movsl
test
idivb
dec
sub
movl
push
aam
out
pop
mov
fdiv
inc
lock
flds
jge
and
lcall
mov
jmp
fistpll
sub
jbe
push
mov
cli
rcll
in
push
clc
sub
ret
mov
scas
fidivl
inc
stos
pushf
dec
and
push
cli
decb
push
pop
inc
lock
push
or
cmc
push
xor
cmp
test
les
xor
cmpsl
mov
insb
jo
mov
adc
or
je
fcoml
shrd
test
push
pushf
loop
aas
sbb
jg
xor
pop
imul
or
dec
iret
lods
mov
push
int3
cmc
arpl
shrb
cmc
ret
loopne
push
lcall
loope
fadds
xor
mov
and
in
fldenv
leave
fisttps
or
or
fsubl
dec
testl
add
arpl
sub
pop
test
xor
pop
cmp
mov
cmp
pop
sbbb
cmpsl
pop
xchg
or
mov
sub
xchg
adc
dec
aaa
lret
imul
mov
push
or
or
xlat
mov
sub
jmp
test
sub
xchg
movsb
mov
js
mov
notl
xor
ljmp
add
cltd
sbb
mov
scas
mov
add
idivb
cmpl
or
jmp
cwtl
fimuls
adc
and
pop
in
dec
dec
fstpt
push
xchg
mov
leave
inc
aad
mov
test
jo
sar
lahf
test
int
xor
pop
js
cmp
loopne
fsubrl
das
clc
icebp
add
iret
mov
test
das
pushl
dec
inc
mov
cmc
call
pop
xchg
pop
sbb
jo
mov
fcoml
inc
insb
sbb
push
pcmpgtb
test
ss
das
je
fcmove
imul
cmpsb
add
cld
in
push
jp
xchg
es
jg
mov
pusha
fmuls
inc
inc
cmp
and
inc
xchg
je
dec
xor
mov
inc
pop
xchg
and
arpl
fidivs
dec
icebp
pop
pushf
std
gs
out
in
sbb
loope
fiadds
and
jae
jl
fsubrs
xor
sub
fstpt
pop
mov
mov
aam
cmp
rorl
lds
push
cmpl
xchg
jae
bound
fs
js
insb
outsb
out
lea
lods
notl
sahf
and
or
in
or
or
mov
cmpsb
leave
in
cmp
fwait
mov
adc
dec
mov
loopne
and
int
or
leave
or
sub
jns
bound
sahf
adc
cmp
and
fcoms
fcoms
ss
lea
insl
fisubrs
addr16
inc
test
inc
sub
cmp
dec
sub
jae
out
aaa
xchg
sub
scas
dec
sbb
jp
ds
hlt
sbb
aam
ljmp
mov
jb
or
hlt
das
aad
pusha
mov
dec
jge
pop
pop
aam
or
stos
sti
xchg
cmpsb
movsl
jp
cmp
in
fdivs
sub
push
cmp
mov
push
sbb
sub
lea
imul
addl
jne
and
jae
sbb
in
xchg
push
rcrl
cwtl
push
aam
sbb
adc
mov
xchg
test
les
in
xrelease
loop
dec
popa
jne
inc
push
repz
jge
pop
cltd
insl
rorl
stos
rcrl
insl
adc
inc
pop
or
jo
xchg
fs
and
push
fcompl
orb
push
inc
jp
mov
push
mov
adc
arpl
push
div
pushf
and
cmpsb
lods
inc
pop
sub
test
fstpt
outsb
out
stc
shrl
push
pop
loope
mov
jne
into
test
jle
add
mull
js
int3
sub
in
test
xchg
jp
test
ja
in
push
addb
lcall
push
xchg
lock
pop
ret
xor
pop
fiadds
and
add
pusha
mov
test
aas
xlat
add
push
fmuls
call
inc
add
jns
shrl
divl
popf
les
mov
pop
sbb
gs
pop
fwait
cltd
cld
cmpsl
mov
pop
mov
pop
cmp
inc
inc
jbe
pop
mov
shr
aas
mov
mov
sub
or
inc
xchg
cmp
rcl
inc
jo
outsb
jno
std
pop
push
inc
mov
les
sbb
cmp
cmc
aas
inc
or
xchg
or
dec
inc
out
jg
movsl
push
mov
aam
push
dec
sbb
bound
jp
or
xor
leave
nop
pop
std
cli
and
stc
das
das
pop
jecxz
and
pop
iret
sbb
fdivrs
jbe
and
push
out
xchg
call
testl
fs
out
aam
or
cli
in
movsl
loopne
push
inc
out
and
xchg
mov
sbb
loope
xchg
dec
les
cltd
or
pop
xor
out
mov
ret
pop
sar
mov
adc
pop
xchg
adc
or
add
jge
push
and
pop
ss
push
sbb
mov
xchg
mov
scas
fimull
nop
push
or
mov
std
popf
test
int3
pop
push
ja,pt
inc
sbb
repnz
xlat
cmp
adc
rcrb
push
sbb
mov
or
sti
faddp
ja
xchg
cltd
push
pop
dec
test
and
negl
cmc
stos
ljmp
hlt
cmp
jg
fdivrl
fisttpll
fs
scas
jns
xchg
cmp
xchg
fwait
push
adc
testb
outsb
xorps
xor
insl
pop
inc
pop
cmp
rorb
jecxz
mov
add
xorl
sbb
add
nop
and
sbb
push
arpl
fwait
cld
sbb
add
adcl
loop
xor
lea
leave
xlat
aas
sub
mov
jns
stc
movsl
adc
pop
pop
pop
sbb
stos
sub
je
dec
std
xor
and
fs
popf
push
addr16
std
stos
out
ljmp
sbb
dec
sbb
arpl
stos
inc
cwtl
jo
in
stos
or
in
push
jle
cmp
movsl
cmc
aas
mov
lods
pop
call
scas
fs
stc
pop
lock
add
sarl
lahf
mov
mov
pop
inc
xor
fisttpl
mov
sub
fistpll
test
repnz
and
jmp
dec
sub
stos
mov
lret
mov
out
cwtl
pop
and
scas
push
aas
push
jno
aam
mov
loopne
ja
pop
mov
test
imul
clc
sub
mov
mov
cmp
add
repnz
or
xor
lret
xchg
in
aaa
mov
data16
testl
fistpll
mov
call
je
sub
add
iret
mov
mov
push
xlat
adcb
xor
in
test
adc
lahf
sti
jl
sbb
cltd
loopne
or
icebp
out
outsb
testb
sti
push
aas
not
call
leave
inc
adc
jnp
ljmp
jecxz
jle
pop
inc
or
cwtl
add
mov
fisttps
and
mov
mov
dec
out
adc
sub
sub
sahf
and
xchg
push
inc
mov
out
and
cmp
enter
pop
push
daa
and
add
aad
insl
mov
outsb
jl
jne
push
adc
xchg
in
andl
dec
sub
xchg
stc
sbb
jne
add
icebp
data16
repz
mov
test
sbb
cli
test
and
fistpl
std
push
loope
push
shll
cmp
mov
adcl
push
ror
xor
icebp
xchg
push
iret
mov
aad
push
sbb
add
push
loope
lret
sub
cmp
es
cmp
test
push
and
fs
pop
add
push
jno
and
jp
mov
sub
ja
insb
xchg
aad
aaa
mov
test
insb
pop
and
lret
xor
fdivl
cmp
xchg
push
or
mov
rolb
aas
repz
push
xchg
xor
pmaddwd
imul
fistpl
inc
adc
jb
addr16
in
bound
outsb
ja
lahf
inc
ss
and
ss
xchg
pop
stos
push
and
or
testb
xlat
jge
mov
jg
fwait
xchg
nop
lock
movsl
in
lret
push
imul
stos
into
ret
aaa
and
mov
sub
sbb
sti
stos
test
nop
mov
and
mov
or
out
xor
cld
into
ret
mov
test
pop
ret
jae
mov
pop
iret
mov
lret
mov
arpl
inc
std
sub
mov
push
ss
data16
test
imul
movsl
mov
jp
loopne
jnp
pop
stos
adc
push
mov
cmp
lods
idivl
out
xchg
test
loope
aaa
pop
add
popa
push
add
inc
daa
adc
add
shrb
dec
xchg
jae
pop
lods
fs
jnp
mov
mov
leave
cmpsb
pusha
xlat
dec
dec
jp
stc
mov
jl
mov
fldl
push
lock
push
cmp
ret
cli
mov
repz
hlt
rcl
les
push
sti
addb
loop
dec
loope
repnz
inc
xchg
shlb
call
cli
hlt
push
sbb
loope
mov
inc
cmc
in
xor
add
and
fisttpl
loop
cmp
sub
push
fwait
sub
add
sbb
into
arpl
clc
xchg
aad
insl
insl
aad
insb
pop
das
sbb
decb
int3
fwait
mov
sti
ss
add
imul
fldt
push
stc
fadd
mov
dec
pushf
aad
in
sub
add
add
std
cwtl
adc
jno
imul
add
push
pop
cmove
shll
sub
pop
add
data16
inc
frstor
out
cmp
dec
push
mov
lahf
push
dec
std
sbb
jmp
add
in
adc
pop
fiadds
mov
fisttpll
mov
mov
add
jns
int
xorb
xor
aaa
ds
mov
mov
xchg
mov
lahf
lods
xchg
dec
bound
aad
push
push
xlat
dec
negb
mov
inc
adc
sahf
inc
cmp
sub
pop
sbb
daa
pusha
daa
adc
cmpb
xor
push
jp
add
inc
stc
out
mov
sti
mov
mov
adc
mov
inc
push
js
dec
out
or
cwtl
popf
or
mulb
push
pop
or
stc
in
andl
test
popf
xor
imul
sub
sbb
pusha
jle
rolb
inc
inc
fisttps
pop
fnstenv
packsswb
es
int
mov
push
cwtl
sbb
push
imul
daa
mov
jno
aad
inc
popf
pushf
push
mov
push
movsb
add
mov
outsl
jmp
lcall
mov
scas
lret
jp
loopne
sbb
pop
cmpsb
xchg
mov
lea
iret
fadds
jne
in
mov
xor
lret
xor
scas
jmp
cmc
ljmp
mov
loop
sub
test
pushf
and
cmp
mov
pusha
cmp
or
dec
jecxz
stc
insl
mov
arpl
cmp
mov
in
xor
inc
sub
push
popf
xor
rclb
movsl
mov
mov
gs
and
push
nop
xchg
or
out
pop
cmp
les
pop
pusha
leave
xor
lret
pop
popf
mov
loopne
mov
je
ret
pop
push
jns
jmp
and
mov
sti
sub
adc
cltd
paddd
adc
sti
les
mov
sub
hlt
leave
test
jae
aaa
jb
inc
jbe
ja
mov
addl
xchg
adc
loopne
adc
jbe
dec
mov
jp
adc
pop
mov
xlat
stos
sub
rcr
bound
xor
cmc
dec
loop
fadd
and
jge
flds
inc
xchg
jp
push
add
bound
lods
jbe
pushf
and
cmc
cs
jb
dec
ret
lea
inc
pusha
ds
orl
das
push
mov
push
into
push
adc
ret
jmp
adc
cmpsl
nop
fcom
and
repz
lock
ljmp
mov
lods
push
push
jg
cwtl
xchg
not
inc
cltd
das
int3
mov
pop
jmp
addr16
fldcw
jae
fs
fsts
call
outsl
fimull
popa
add
mov
xchg
jmp
xchg
push
lret
imul
in
dec
stc
sbbl
push
in
popa
pop
dec
icebp
and
fadds
lods
imul
cmp
cmp
cmp
gs
sti
psubd
in
movsb
jmp
adc
jae
mov
mov
cmp
hlt
movsl
inc
in
lahf
jns
lcall
xlat
decl
mov
dec
aam
pusha
mov
pop
loopne
ljmp
lret
sub
push
xchg
addr16
lcall
mov
popf
push
push
test
aas
push
sbb
mov
mov
mov
stos
pop
add
pop
lods
ret
mov
iret
gs
outsl
sub
jo
mov
mov
shrl
sbb
mulb
and
in
das
decl
add
push
fldl
cmp
das
lea
outsb
scas
jl
stc
mov
inc
in
fs
lcall
movsl
gs
out
mov
mov
sbb
mov
push
mov
movb
or
bound
mov
jbe
test
mov
xchg
xchg
aaa
testl
xchg
jge
leave
sub
mov
jge
scas
fs
adc
or
sbb
mov
sub
xchg
inc
add
fdivrs
sub
cwtl
cmpsb
adc
fldl
mov
imul
jns
mov
icebp
lods
or
push
add
sub
sbb
aaa
mov
fisubs
pop
test
add
push
add
and
add
mov
out
ljmp
sbb
xor
xchg
mov
int3
fimuls
gs
mov
lds
and
sub
xchg
push
pop
sbb
stos
jg
frstor
cmpsb
loop
inc
popf
fistpll
xchg
pop
and
lret
std
scas
inc
dec
sub
filds
dec
mov
outsb
gs
pop
outsb
mov
mov
fwait
adc
shlb
dec
mov
pop
xor
xor
sbb
adc
or
shl
loope
fs
int
and
in
inc
int
clc
call
loope
incl
cmp
inc
cmp
scas
pop
push
stos
loop
stos
in
outsb
icebp
lea
jo
mov
fwait
add
sbb
in
lahf
sbb
inc
testb
movsb
xlat
or
mov
into
popf
jne
bound
xchg
loop
orl
mov
insb
adc
jg
repz
fimuls
adc
iret
inc
cmp
es
push
fidivs
ja
shlb
jne
push
imulb
cmp
pop
pop
xchg
push
popl
push
inc
jns
sbb
out
pop
mov
xlat
pusha
adc
idivl
dec
enter
jecxz
jb
dec
pop
lock
push
lods
cmp
bound
test
jbe
rcll
bound
rcr
jnp
mov
pop
push
fcomps
add
repnz
repnz
mov
xor
cld
push
cltd
push
add
dec
dec
mov
cld
pop
inc
dec
push
shlb
pop
pushf
lds
inc
add
cmpsl
jg
mov
aam
push
xor
jl
sub
inc
pop
out
xchg
sbb
addr16
test
sbb
das
lret
inc
xchg
xlat
fildll
fsubr
jo
popa
out
rdpmc
fistl
jo
in
inc
push
jae
cmp
lods
inc
js
nop
fisubrs
stc
mov
in
mov
jb
sub
or
bound
ss
or
or
sbb
pop
add
inc
lcall
jbe
inc
lret
xor
add
xor
addr16
add
js
pop
adc
cwtl
jmp
outsl
popf
and
mov
mov
sub
mov
out
push
pop
outsl
sbbl
cli
xor
push
rolb
arpl
in
and
test
cltd
or
sbb
inc
jg
insb
pop
fimuls
pop
sbb
add
push
adc
popa
dec
xchg
scas
hlt
pop
leave
or
sbb
cmc
dec
push
mov
pushf
xchg
or
lods
add
add
mov
daa
adc
mov
cmove
icebp
cltd
ret
fbld
cmp
lea
cmp
sub
inc
pop
ljmp
add
inc
jns
lret
or
xor
pop
xchg
cmp
das
mov
add
push
pop
out
out
inc
shl
test
lcall
jnp
and
push
out
mov
test
or
cmp
aas
and
and
sub
rcrb
inc
and
arpl
pop
xchg
push
inc
pop
sahf
sbb
mov
outsb
ficompl
mov
inc
sub
in
in
test
int
shll
jb
sub
adc
aam
js
fst
jl
mov
loopne
leave
aad
iret
xchg
popf
jo
data16
or
pop
sbb
ret
out
push
mov
sub
mov
insb
xor
mov
lds
cmpsb
pop
cmpb
adc
jmp
cli
mov
fimuls
pop
push
repz
push
cmp
push
mov
rolb
aaa
dec
jne
add
xchg
scas
sub
inc
repz
lea
jmp
jge
push
insb
shrb
popw
ja
movsb
enter
loop
movb
je
fs
cmp
pop
repz
mov
or
movsb
inc
dec
add
push
jp
scas
lock
push
push
adc
mov
and
das
ret
push
jg
inc
sub
and
fwait
mov
pop
inc
jg
push
scas
inc
movsl
mov
inc
mov
push
sub
sbb
out
repnz
aaa
addb
or
push
imul
imul
xchg
into
mov
sbb
loope
sbb
addr16
push
lahf
add
jnp
mov
adc
push
xor
pop
inc
or
or
jle
jl
cmc
mov
cmp
mov
je
inc
inc
xlat
inc
xor
sub
sarb
adc
mov
aam
mov
mov
add
inc
jnp
sbbb
cs
cld
mov
or
fcoms
lea
ret
pop
fwait
add
cmp
adc
lods
comiss
push
xchg
xor
lret
and
sub
mov
aam
out
enter
scas
inc
movsb
and
lret
std
lods
outsb
aaa
lret
mov
into
jge
xchg
push
mov
mov
mov
and
ret
adc
mov
lea
xor
lods
addb
xchg
inc
adc
push
je
sub
notl
dec
nop
or
hlt
std
icebp
out
push
loope
sbb
sbb
cmp
pop
aaa
nop
pop
cmpsb
jmp
jl
add
or
sub
lcall
dec
mov
out
jae
sub
popa
sub
mov
pop
xor
movl
rcrb
cwtl
loope
dec
fst
lds
adc
pop
movsl
mov
insb
pop
pop
sub
add
aaa
jnp
jbe
daa
pop
shlb
push
decl
ljmp
jnp
movsb
mov
sub
sbb
dec
add
call
sub
fs
xorl
push
je
clc
call
xor
movsb
out
imulb
pop
in
pop
pop
inc
out
xor
mov
rcrb
aad
mov
and
cmp
cmc
xchg
mov
cmp
mov
jno
es
mov
sbb
mov
out
jmp
call
cmpb
das
bound
ret
push
shll
jb
adc
push
test
fdivl
xchg
xlat
sar
cmp
test
mov
xor
mov
push
xchg
push
fiaddl
jb
nop
fs
in
xchg
xorl
in
movsb
mov
mov
sti
aad
cmp
call
dec
aas
mov
iret
sahf
dec
je
dec
jge
mov
imul
repnz
inc
add
or
mov
jge
add
sbb
out
push
lcall
cmpsl
call
ljmp
xorl
pusha
aam
sbb
fs
pop
lods
inc
ret
movb
int3
test
add
test
adc
stos
lahf
xorl
and
ror
add
xchg
std
jns
insb
repz
pop
cmp
push
sub
jecxz
cwtl
xor
pop
je
scas
mov
jg
jg
pop
rcl
mov
xchg
mov
clc
xor
aaa
hlt
mov
outsl
mulb
inc
aaa
fwait
or
jns
lret
mov
mov
notb
out
or
and
shl
outsb
mov
cmp
mov
orl
inc
and
rcrb
jne
popf
and
ja
or
dec
push
mov
inc
jg
sbb
lock
icebp
push
lahf
jmp
dec
arpl
les
dec
xor
std
mov
loop
adc
loope
testl
mov
or
sbb
sub
ja
xrelease
push
popa
imul
and
insl
fnstcw
push
les
shl
sbb
sahf
repz
add
cmp
lods
fadd
ds
mov
lock
pop
out
mov
push
xor
mov
jmp
popa
stos
xchg
sub
push
stos
xlat
or
xor
cmp
pushf
loopne
dec
add
inc
dec
and
add
dec
test
mov
lahf
xchg
xor
lcall
add
imul
and
xchg
jl
pop
or
inc
jns
outsb
push
pop
test
shrl
stc
es
push
mov
push
mov
into
cmpsl
xor
mov
in
mov
lods
or
gs
ja
test
pop
jle
mov
or
scas
fs
lods
mov
lods
jl
das
cwtl
push
int3
ja
lcall
push
mov
jne
inc
sbb
lea
xchg
out
imul
cli
test
sub
adc
mov
dec
xchg
test
daa
out
test
arpl
sti
jno
clc
inc
cmp
loopne
sbb
ds
in
lret
xor
jmp
pop
xchg
sub
std
mov
jg
inc
mov
mov
pop
ja
js
xor
je
adc
cwtl
js
inc
mov
xor
out
je
mov
mov
shl
ror
pop
pop
std
lods
xchg
pop
shrb
mov
and
scas
sub
in
orb
adc
ljmp
fistl
sarl
cmp
pusha
arpl
std
xchg
or
cmpsb
mov
in
mov
pop
jae
sbb
sti
fidivl
push
icebp
cmp
imul
test
add
mov
mov
stc
leave
cmp
jecxz
mov
test
xor
dec
addl
out
push
xchg
cmp
jae
sub
test
push
cmpsl
ds
push
jle
pop
jp
movsb
lock
inc
cld
jo
ja
push
jb
inc
lds
jae
arpl
sahf
lods
lods
or
adc
push
ss
out
jl
dec
rcrb
and
adc
add
mov
cmp
pusha
insb
or
gs
mov
fs
lods
clc
out
pop
pop
xchg
inc
jl
icebp
mov
jb
les
shlb
cmp
cmp
das
in
dec
xor
xchg
push
sub
adc
cmp
jg
aam
and
lds
push
inc
jmp
in
lcall
movb
mov
pop
into
sarb
add
bound
rcl
pop
lods
in
arpl
lock
cmpsl
aaa
into
lods
xor
lahf
jmp
jecxz
stos
out
mov
das
mov
js
pop
pusha
inc
scas
jnp
ret
and
loopne
out
adc
or
ret
pop
sti
call
sbb
push
mov
mov
mov
lds
inc
push
jge
sub
push
rorl
pop
inc
fistps
daa
push
and
hlt
mov
outsl
insb
ret
jb
or
jl
fucomi
fistpll
cs
mov
push
xor
in
popa
ja
mov
push
clc
out
jle
pushf
dec
jne
int
jmp
pop
lret
cmpsb
push
mov
mov
stos
icebp
enter
loope
and
pop
and
fimuls
mov
xchg
test
pop
out
xchg
dec
scas
jge
xchg
shlb
push
xor
push
leave
inc
push
idivb
popf
mov
jmp
repnz
push
stos
mov
mov
push
jl
repnz
xlat
push
ljmp
adc
sti
or
pusha
es
xchg
scas
nop
mov
and
xchg
jle
int
stc
sub
push
ss
movsb
and
repnz
or
mov
and
pop
and
ret
hlt
sub
dec
and
sub
xor
push
fnsave
jmp
ss
mov
xchg
inc
mov
popf
ud1
rcrl
jp
push
or
andl
ds
nop
aam
insb
jmp
adc
std
ss
orl
or
cwtl
mov
jp
cmpsb
mov
mov
dec
out
add
ss
movsb
jg
mov
xor
cs
pop
xchg
xor
or
adc
pop
rolb
popf
pusha
jns
adc
ss
ret
nop
lcall
jl
nop
in
js
jmp
and
fdivrp
jge
sbb
outsb
or
cmp
dec
cmp
mov
mov
push
adc
insl
test
into
shr
movsl
xchg
push
imul
push
xor
xor
pushf
add
push
pop
cmp
xchg
ret
push
mov
pop
sbb
daa
dec
cmove
inc
mov
add
mov
pop
cltd
jbe
lahf
orb
gs
inc
scas
push
push
clc
push
push
add
inc
lds
or
outsb
and
mov
dec
xchg
ret
mov
cmpsb
jb
dec
pop
stos
and
xchg
les
xor
fisttpl
test
sar
into
push
cmc
pop
jnp
popa
jp
test
in
sub
pusha
loopne,pt
jne
xchg
leave
or
je
lea
ds
addr16
fwait
mov
int3
insl
or
or
inc
sub
sti
sbb
int3
or
cmp
add
add
movsb
fucomi
xor
dec
mov
into
sub
mov
movsl
pop
cmpsb
pop
repnz
mov
or
stos
scas
xor
mov
pop
test
pop
inc
cmpsb
loop
mov
pop
stos
testb
cmpsl
fs
adc
aaa
mov
xor
jnp
inc
xchg
scas
loope
filds
xchg
loope
loop
notb
sti
test
lods
dec
xchg
daa
popa
push
cld
sub
hlt
loopne
jle
hlt
in
sti
inc
mov
push
xchg
or
push
push
mov
adc
std
rorb
cmp
loop
fisttpl
aam
and
cld
imul
pop
cmp
cwtl
mov
insb
int3
xor
xchg
fsubrs
pop
cltd
and
mov
mov
pop
stos
sub
mov
mov
lret
cmc
mov
ret
incl
out
push
push
sub
xor
leave
mov
jecxz
xor
clc
xchg
test
leave
fneni(8087
jge
std
cwtd
push
imul
aam
popf
push
dec
movsl
dec
adc
pop
movsb
xchg
int3
add
mov
daa
shll
pop
xchg
mov
fdivs
xor
xor
cmpsb
add
jo
stc
mov
fcmovu
cmp
inc
popa
sbb
fisttpl
mov
jns
mov
and
or
fistpl
and
mov
xchg
shl
test
cmpsl
push
add
ret
xchg
xchg
pop
push
and
lods
cmp
lcall
imul
jmp
push
int3
int3
lahf
mov
jo
mov
lds
and
cmc
jl
frstor
aas
pushf
dec
pop
sbb
sub
test
sub
repnz
loope
inc
mov
push
sub
add
mov
or
imul
std
mov
clc
rcrl
stos
dec
repz
repz
jne
sub
test
or
or
jmp
xchg
xchg
pushl
sub
sbb
push
inc
orps
dec
inc
sbb
popa
cmp
adc
leave
xchg
adc
adc
loopne
fsubrs
iret
xchg
mov
fs
jge
pop
ljmp
adc
pop
inc
loop
test
xchg
add
pop
movsb
adc
xor
mov
and
push
stc
mov
insl
aam
jp
cs
jb
fisttpll
fwait
cs
mov
push
bound
jge
aaa
jae
add
jbe
sbb
cwtl
adc
push
fwait
pop
sbb
loop
xor
adc
lret
fildl
loopne
adc
jg
shrl
mov
call
adc
out
cmp
or
shll
add
out
mov
scas
roll
das
lcall
inc
sub
jno
xor
add
mov
test
inc
pop
sahf
call
movl
pop
stc
xchg
test
sub
jb
pusha
fldcw
jp
xchg
pop
sbb
sub
stos
rcrl
lock
add
add
insl
sub
sub
aas
add
jl
push
fnstsw
lods
xchg
xor
add
mov
mov
lds
lret
add
enter
scas
ret
xchg
test
inc
insb
jns
fsubrl
fld
imul
push
xorl
fst
in
icebp
dec
test
repnz
jecxz
lods
push
xchg
ret
fdivrs
mov
dec
mov
jl
lea
movsb
mov
or
movsl
js
jb
mov
clc
into
aad
mov
imul
sti
adc
imul
add
lds
mov
or
add
xor
jge
imul
es
adcl
push
addr16
and
sbb
xor
nop
subl
dec
sbb
mov
xchg
ret
mov
roll
mov
ja
out
mov
xor
lock
xchg
lods
pusha
mov
sbb
cmp
fwait
imul
outsl
mov
iret
aad
sbb
xchg
push
xchg
mov
repz
sar
or
out
mov
fldcw
mov
add
insl
mov
mov
popa
bnd
loop
sub
jbe
pop
inc
inc
or
popf
outsl
lock
jge
xchg
adc
nop
in
inc
mov
icebp
das
pop
daa
pop
pop
and
add
and
inc
xchg
outsl
cmp
cs
lret
lret
mov
jmp
std
cmp
imul
loopne
sub
lret
mov
fdivs
or
mov
js
aam
stos
xchg
imul
loope
jb
repnz
ds
mov
in
pop
loop
repnz
stos
jbe
in
stc
loope
lret
jg
cmpsb
push
orl
jno
arpl
ret
cs
pushf
popf
pop
stc
pop
or
pop
cltd
sbb
sub
jno
stc
and
lds
mov
iret
add
test
or
or
repz
mov
add
nop
pushf
ret
movsb
or
pop
les
test
xchg
sub
jno
sbb
mov
cli
cmp
sbb
movsb
adc
push
inc
cmp
cs
mov
jb
xor
loop
jge
lret
sti
and
fcmovne
add
enter
loope
shll
rolb
lret
mov
fwait
push
sbb
or
dec
jo
add
inc
jecxz
mov
gs
adcl
xchg
mov
xchg
add
xor
sarb
push
inc
inc
test
dec
mov
inc
xchg
mov
lods
or
cmp
add
push
mov
pop
cs
je
and
lods
aas
dec
js
push
test
mov
sbb
lcall
pop
call
sub
fisubrl
dec
jb
lods
adc
and
shlb
push
daa
add
orl
arpl
lret
mov
pop
gs
pop
pop
dec
jmp
adc
daa
inc
add
sbb
gs
push
add
mov
adc
jle
add
je
push
xor
and
fists
dec
pushw
clc
ja
adc
test
mov
inc
jnp
rol
in
push
test
pop
mov
sahf
je
adc
and
dec
push
pop
dec
lea
xor
lock
adc
sti
mov
ds
adc
cmpsl
addr16
stos
aas
in
jecxz
stc
dec
std
jge
add
jne
dec
or
adc
adc
lret
jge
leave
jge
mov
jb
divb
das
xchg
into
mov
push
jmp
gs
test
loop
sarb
lock
mov
mov
aaa
out
jl
movsl
push
mov
cmpsb
das
ficompl
stos
push
bnd
pop
dec
pop
lahf
ror
or
push
daa
adc
stos
cmp
aam
stos
mov
add
xor
xchg
xchg
int
shll
add
or
aad
aad
arpl
or
sbb
xchg
call
hlt
divl
int
and
xchg
xor
pop
js
insl
dec
out
lret
shrl
lea
imul
sbb
pop
push
jbe
sarl
xchg
push
daa
cmp
icebp
mov
cld
inc
das
inc
ret
adc
push
xchg
fnstsw
out
clc
shl
mov
add
bound
jmp
dec
mov
icebp
negl
push
ja
lods
jp
push
sbb
sub
mov
rorl
stos
out
inc
fcomps
push
mov
imul
cmpsl
cmp
outsl
pop
cmpl
stos
push
sti
lret
add
sub
aad
xchg
xchg
test
push
adc
test
out
iret
mov
jbe
data16
mov
add
lods
addr16
fsubr
cmp
maxps
xchg
inc
notb
es
push
sti
pop
and
pop
inc
mov
pop
lcall
sub
enter
scas
mov
cld
sbb
or
int3
in
cmc
xchg
rorb
and
fists
into
test
lcall
test
scas
rorb
jp
jg
imull
jnp
sub
ds
mov
sbb
mov
call
mov
scas
pop
or
mov
jge
pop
mov
rcll
into
vmovsd
jae
imul
cwtl
movl
shl
out
popa
cmp
jb
cli
rolb
jp
fsubrl
pop
fsubrl
hlt
mov
pushf
enter
cmp
test
dec
cmpsb
ficoml
ja
jecxz
insl
mov
into
sahf
or
in
and
mov
pop
xchg
pop
and
in
std
push
cmp
outsb
je
adc
jb
aas
sub
imul
cmp
out
mov
es
and
fabs
push
popf
outsl
in
dec
pop
rolb
arpl
jbe
aad
add
inc
jbe
push
stos
pop
loopne
call
xchg
cmc
arpl
ss
push
or
push
xor
repz
adc
mov
jne
repnz
sub
adc
in
jmp
lret
or
inc
cmp
jo
repz
pop
pop
lahf
pushf
loop
rorb
push
push
sub
push
xchg
stc
shr
popf
dec
repz
mov
je
lahf
xchg
mov
pop
adc
add
fwait
lock
mov
shlb
arpl
jne
aas
jns
xchg
push
mov
insl
test
adc
mov
and
loop
mov
mov
jae
mov
mov
mov
ds
shr
ljmp
or
push
stc
and
dec
push
gs
sbb
jg
aaa
jg
adc
xor
mov
xlat
pop
test
lods
std
push
mov
adc
insl
rclb
inc
inc
dec
pop
pop
lret
sub
fnsave
repnz
ss
fcomps
test
pushl
stos
js
sbb
push
decl
cmp
and
insl
gs
adc
mov
mov
movb
cmp
sbb
cmp
mov
add
jns
aaa
mov
push
jo
jp
andb
push
xchg
jp
xchg
mov
inc
pop
and
mov
inc
fwait
jb
sub
add
cmp
cli
imul
jp
sub
or
jns
jge
rcrb
xlat
adc
xchg
out
jmp
jecxz
mov
push
test
jb
and
push
cmp
in
icebp
rcrl
pusha
sub
sub
dec
int
ja
dec
outsl
data16
cmp
pop
and
imulb
scas
jp
or
pop
ljmp
sarl
push
out
xchg
imul
hlt
xchg
fistl
lret
inc
dec
push
pop
paddusw
std
fistps
push
push
push
pop
insl
fndisi(8087
fiaddl
orb
jmp
dec
lcall
xchg
pop
push
jle
test
cmp
insl
add
arpl
clc
and
pop
nop
aad
fs
add
lret
hlt
fisubrl
clc
push
fisttpll
aaa
fildl
jnp
push
bound
cmp
xchg
jp
mov
sarb
mov
shll
stc
dec
cltd
test
pop
sti
push
std
or
rorl
mov
jp
addb
stos
repz
mov
and
rcll
mov
ret
cwtl
into
mov
pop
out
pop
push
sbb
jo
dec
mov
jne
sarl
mov
mov
data16
mov
adc
in
ficoms
repnz
and
jmp
jb
dec
cmpsl
dec
or
sub
cmp
mov
outsl
mov
mov
dec
in
lods
ja
add
jno
popa
push
inc
xor
lahf
daa
popa
pop
leave
fdivrl
in
push
cld
dec
xchg
adc
push
lock
mov
mov
or
and
push
dec
popf
hlt
cmpsb
pop
inc
mov
jmp
pushf
in
adc
inc
decl
mov
xchg
push
add
stos
loopne
pop
call
mov
arpl
inc
in
mov
push
inc
mov
ljmp
pop
leave
neg
lods
inc
push
aam
mov
in
test
pop
repz
xchg
aam
fcoml
aam
xchg
add
insl
pop
daa
dec
dec
div
push
mov
imul
inc
cmpsl
push
xor
pop
add
xorl
popf
in
lahf
fmuls
aaa
sub
inc
push
aam
cmp
inc
mov
mov
outsb
sbb
daa
lock
jmp
shll
repnz
xor
repnz
xor
add
fsubs
mov
fidivs
fnstsw
mov
add
fsts
xchg
mov
xchg
lret
rorb
inc
push
in
cmp
adc
xor
ljmp
mov
cmp
aaa
int3
int3
dec
aad
and
faddl
mov
push
jae
push
hlt
push
insb
outsb
pop
fisubrs
add
pop
pop
lret
mov
cmc
xor
out
push
mov
out
cmpsl
into
pushf
int
cmp
divl
icebp
stc
inc
jno
or
push
mov
sbb
test
add
insb
shl
push
mov
inc
pop
add
mov
lahf
mov
pop
adc
icebp
cmp
jg
dec
adc
adcl
ljmp
mov
xlat
test
lret
ror
fadds
repz
push
bound
mov
fs
repnz
sahf
stos
mov
int3
out
cld
jl
lea
roll
lods
lds
fstl
pushf
mov
push
popa
inc
popa
hlt
push
adc
mov
das
lret
rcr
fisubrs
push
jmp
jmp
cmpsl
out
xor
je
ljmp
mov
loop
cli
nop
lret
adc
or
push
push
inc
dec
mov
popf
lahf
enter
jae
sarl
and
push
push
inc
add
ret
stos
adc
jg
test
pop
sub
dec
cmp
inc
xor
in
xor
imul
loop
nop
mov
ja
les
or
and
addr16
sbb
int3
and
hlt
loopne
popf
xchg
dec
pop
cmpsl
aas
jg
sub
add
push
jns
sbb
cmp
testb
push
pop
xchg
ja
jnp
in
push
jne
lret
iret
dec
int
in
push
cmpsb
inc
xchg
cmp
inc
add
divb
cli
xor
shrb
or
xor
sti
or
loopw
out
and
or
cltd
sub
leave
dec
rolb
mov
jp
leave
and
rcr
lcall
jmp
jmp
xchg
lods
arpl
cmpsl
dec
nop
dec
dec
sub
mov
jmp
aas
mov
jb
xchg
cltd
out
rorb
mov
out
inc
ftst
and
or
popf
cmp
cmp
lahf
std
gs
int
aaa
fstpt
mov
sub
iret
loope
inc
lds
dec
push
mov
pop
popf
pop
rcll
mov
sbb
xchg
xchg
and
lret
or
mov
das
jno
jle
lock
pushf
sbb
std
and
enter
pop
imul
enter
fs
popa
pop
test
and
flds
mov
faddl
dec
iret
inc
pop
xchg
addl
inc
lret
cmpl
or
pop
or
outsw
xchg
arpl
cmpsl
and
mov
shl
xor
cld
jb
add
and
jp
xor
sub
push
in
movsl
sub
pop
push
incl
sbb
xor
gs
cmpsl
mov
wrmsr
add
mov
or
adc
jns
hlt
or
inc
push
aaa
dec
mov
add
ds
adc
pop
adc
lock
fldenv
xchg
addl
add
stc
les
fdivrl
pop
jno
adc
sti
popf
sub
imulb
adc
outsl
incb
out
mov
inc
arpl
adc
adc
mov
pop
lock
mov
jo
push
stos
push
cmp
pushf
das
loopne
fnsave
pop
lods
pop
mov
add
jnp
addl
push
ret
cmp
fcmovu
sti
pushf
loopne
jae
jle
nop
push
xor
popa
push
inc
es
les
loopne
cwtl
push
xor
jle
jecxz
pop
add
test
daa
out
cmp
ja
inc
sahf
inc
and
pop
jns
push
es
fadds
xor
cld
push
fcompl
in
lods
outsb
divl
xor
flds
sub
test
aad
rorl
subl
pop
js
fs
mov
les
lea
xor
pop
fbld
push
insl
jb
rclb
fnstsw
push
push
test
hlt
sub
rcll
cmp
stos
fs
popa
clc
dec
or
in
mov
aam
daa
mov
test
xchg
xor
bound
jl
inc
xlat
push
imul
cmc
mov
iretw
in
dec
arpl
xchg
cmp
sbbl
adc
and
fisttpl
scas
in
rcrb
scas
icebp
mov
pop
cmp
pop
xchg
push
dec
jecxz
lahf
jmp
test
out
pop
jg
and
int3
pop
mov
pop
and
jmp
pop
int
push
mulb
mov
cmc
roll
fstl
testl
mov
addr16
inc
push
mov
jbe
dec
repnz
add
mov
cmp
jge
movsb
cltd
sub
js
lods
pop
ds
dec
inc
int
pop
stc
loop
cld
mov
cmp
xor
and
shrl
adc
mov
je
pop
in
mov
std
in
jnp
push
bound
mov
imul
jg
dec
scas
sbb
mov
call
xor
push
mov
iret
jne
pop
js
xchg
sarb
add
test
dec
aad
repz
mov
cmp
lods
arpl
jb
xchg
int3
lods
mov
movsl
lret
inc
sahf
outsb
dec
xor
cmp
xchg
fldcw
lret
xchg
lods
inc
xchg
mov
cmp
dec
data16
ljmp
push
pop
in
rcll
cld
xor
repnz
sbb
adc
outsb
mov
jnp
xchg
lret
xchg
sbb
mov
jo
cmp
dec
jae
jl
push
jp
sub
cmpsl
lcall
in
js
aam
mov
jp
inc
in
movsb
add
stc
lret
push
adc
rorl
clc
pop
mov
ljmp
mov
inc
outsl
pushf
push
dec
out
mov
imul
jmp
movsl
push
push
loope
add
test
jge
and
out
insl
out
repnz
mov
sbb
add
cwtl
cltd
jecxz
add
pop
push
xor
or
sbb
je
xor
jge
jno
mov
xor
and
into
push
dec
repz
jb
call
ret
sbb
aaa
icebp
lret
into
lahf
mov
mov
or
and
std
sahf
mov
mov
mov
xchg
push
aad
add
pushf
push
mov
rcrl
call
inc
ja
mov
insb
test
out
imul
fcoms
in
shrb
dec
in
xchg
xor
sbb
roll
xor
jnp
xlat
fwait
push
pop
lahf
sbb
sub
es
rorb
pop
sahf
push
inc
bound
icebp
cltd
sbb
and
jge
cmpl
sbb
imul
aam
cmp
cmp
xor
mov
cld
mov
cwtl
mov
or
sub
sbb
dec
clc
inc
inc
mov
sub
faddp
sbb
out
jo
sti
xor
mov
pop
ret
dec
inc
inc
cwtl
fdivl
loop
out
lcall
add
jp
pop
xchg
stos
dec
ret
stos
cmc
jns
inc
rolb
orl
shlb
sbb
popa
dec
adc
roll
test
pop
loope
or
xchg
lock
mov
daa
lds
sub
push
mov
lock
add
inc
pop
push
push
mov
sub
insb
or
insb
pop
invd
orb
lahf
fldenv
adc
inc
mov
loopne
sub
sbb
dec
inc
or
outsl
dec
cltd
bound
adc
xlat
jge
or
enter
mov
cmp
std
mov
sub
mov
and
or
or
ja
dec
pop
popa
cmp
dec
aam
mov
cltd
push
mov
dec
mov
mov
inc
in
mov
lods
mov
pop
stos
sub
mov
mov
mov
dec
in
jle
and
imul
jns
hlt
dec
movsl
lahf
aad
pop
push
in
mov
sbb
popa
out
adc
lret
cmp
cmp
cmp
pusha
mov
mov
jne
shlb
repnz
or
fs
jl
sti
adc
mov
outsl
stos
movsl
sub
mov
nop
jo
les
sbb
cmpsl
sbb
bound
leave
adc
or
jl
xchg
into
scas
call
rclb
lret
lret
dec
aas
and
xchg
jno
sti
dec
scas
mov
dec
xchg
lock
inc
push
faddp
imulb
sub
nop
subb
jmp
xchg
iret
out
rcl
cld
bound
fwait
std
dec
iret
mov
rolw
dec
popa
fcoml
and
test
in
mov
lcall
adcb
sub
adc
cmp
lds
xor
mov
mov
cmp
daa
or
jnp
aad
out
pop
or
xchg
fwait
cld
push
shlb
cld
inc
or
outsb
xchg
in
cmpsb
fwait
in
xorl
inc
clc
push
pop
jecxz
jnp
and
fstpl
or
jge
or
sub
out
test
add
push
mov
out
in
ror
sub
sbb
das
in
pop
xor
je
adc
imul
pusha
cmp
test
sbb
push
js
lahf
mov
mov
mov
js
xor
repnz
cmp
jmp
fwait
cltd
ffree
stc
push
out
dec
mov
mov
out
mov
neg
mov
add
nop
cmp
mov
or
jmp
sbb
sarb
popa
dec
cmovae
mov
push
lret
aaa
pop
xlat
inc
and
pop
or
data16
repnz
dec
jo
icebp
in
xchg
and
jnp
sti
jge
dec
lcall
push
roll
repz
rcrb
push
or
clc
mov
popa
daa
into
jae
sbb
jb
mov
inc
mov
add
mov
and
dec
sub
mov
inc
call
inc
mov
aam
adc
pop
rcrb
jne
mov
mov
xchg
movsl
inc
mov
enter
jmp
mov
inc
ds
les
xor
dec
cmp
pop
adc
adcb
andl
aas
subl
in
aad
xchg
pusha
cli
mov
repnz
xlat
mov
enter
mov
cmpsl
sub
decb
push
xchg
push
jnp
jb
jbe
xchg
pop
and
cmp
pop
adc
sahf
push
lahf
push
fs
out
cmc
xor
aas
xchg
cmp
jge
push
ret
cmp
sbb
dec
mov
rcll
pushl
jb
ret
sub
push
mov
push
jne
mov
lahf
jno
dec
daa
fbstp
mov
pop
and
jns
dec
rorl
subb
aas
or
sahf
sarl
or
sbb
jmp
lret
rcrb
pop
je
aad
aad
adc
ss
jb
fdivr
lcall
imul
pop
into
cmpsl
in
addr16
lea
inc
mov
pop
sbb
mov
push
imul
mov
ret
lods
mov
imull
lods
cmp
mov
aaa
or
fcmovbe
jge
adc
xchg
mov
jle
fwait
mov
mov
mov
das
cmp
inc
xchg
fmull
mov
xchg
adc
push
or
stos
inc
ret
adc
in
fldl
or
roll
repnz
call
mov
scas
sub
std
pop
adc
lcall
idivl
cmp
ret
je
outsb
lret
jp
data16
jb
nop
testb
mov
int3
mov
xchg
mov
xchg
push
adc
hlt
sub
sub
jl
xchg
push
pop
loope
push
mov
lods
int3
mov
xchg
and
xchg
or
add
adc
inc
test
jl
pusha
jnp
std
pop
xor
or
lret
or
cmp
addl
lcall
pusha
and
sbb
dec
push
lea
push
out
add
lock
test
dec
cmp
lds
in
aam
lahf
dec
pop
xchg
mov
enter
out
mov
cmpsl
mov
push
lcall
mov
sub
pop
fstpt
sbb
ljmp
pop
scas
mov
or
pop
sbb
xor
mov
outsb
rcl
jno
xchg
or
ljmp
in
add
ljmp
add
ljmp
and
cmp
adc
out
enter
sub
aas
mov
and
sub
xor
or
inc
sub
scas
push
nop
xor
arpl
adc
mov
mov
sti
adc
push
mov
fucomip
add
imul
fidivs
jmp
inc
inc
cmp
shlb
dec
hlt
sbb
rorb
adcb
jl
mov
dec
subb
arpl
subb
pop
imulb
iret
cmp
clc
dec
clc
pop
inc
pop
stos
jecxz
push
sahf
adc
arpl
mov
add
out
inc
mov
adc
mov
jnp
sbb
or
xor
mov
add
fs
pop
fists
inc
ds
xchg
push
imul
jo
xor
mov
movsl
inc
insb
push
repnz
jns
leave
xor
ret
mov
dec
mov
and
test
clc
cmp
cli
inc
and
mov
pop
lret
movb
ss
aas
jl
pop
jne
outsb
bound
mov
xor
push
mov
out
popf
dec
push
mov
mov
or
mov
insl
add
cmp
out
icebp
dec
scas
xor
mov
push
xchg
mov
fwait
mov
movsl
xor
inc
mov
pop
andb
es
cmp
repz
arpl
aad
mov
fisttpl
test
es
add
data16
pop
xchg
gs
out
lock
loopne
fmull
pop
sub
cmpsl
cmp
xor
ljmp
frstor
fildll
out
scas
outsb
scas
lds
push
mov
dec
daa
loope
cwtl
adc
fldenv
push
pusha
lret
pop
or
outsl
in
aad
fildll
imulb
cmovno
lretw
cmp
mov
dec
push
popf
fcmovnb
popa
push
push
ss
testb
jmp
and
fcomip
xor
ret
daa
xchg
mov
insl
xor
or
rorl
subb
fiadds
push
jmp
pop
adc
div
push
or
into
xlat
push
fildll
push
adc
xchg
test
gs
adc
aam
or
mov
jl
shl
sbb
fsubl
faddl
pop
mov
test
outsb
test
shll
and
jmp
outsl
and
cmc
jp
bound
jae
jo
mov
loop
inc
out
loop
sbb
xor
sub
jecxz
stos
lahf
ja
mov
ss
sub
mov
lret
and
mov
mov
mov
add
mov
jne
jb
bound
movl
cltd
inc
dec
int
pop
lods
out
adc
sbb
subb
jmp
mov
out
orl
fdiv
stc
mov
hlt
mov
lahf
inc
inc
sub
lock
insb
sub
sbb
inc
adc
shrb
int
mov
mov
mov
jg
je
rcr
adc
shrl
inc
jp
cmpb
adc
mov
in
or
out
call
adc
icebp
nop
or
mov
adcl
push
inc
inc
dec
aam
loop
adc
cli
ret
jle
add
xchg
or
cmp
push
jns
fs
dec
inc
pop
in
add
xchg
lahf
inc
inc
push
mov
push
pop
ficoml
sbb
xchg
imul
or
pop
lds
cmp
popf
outsb
xchg
xor
xchg
dec
dec
scas
xor
xor
cmp
arpl
js
jbe
mov
les
jl
dec
xchg
ret
sbb
push
mov
rcl
orb
sub
adc
push
cli
scas
subb
jb
pop
mov
fcmove
mov
sub
cs
fidivl
lods
inc
add
adc
in
and
mov
cld
push
and
add
das
cmpsl
lahf
dec
inc
imul
mov
inc
lods
lret
mov
mov
cmp
jp
fdivs
rolb
lea
lret
mov
imul
jmp
sub
out
inc
xchg
jmp
dec
xlat
jge
cmp
push
leave
cmp
inc
push
movsb
sbb
ds
xbegin
iret
xor
out
sbb
pushf
rcr
gs
mov
loopne
fcompl
dec
mov
lcall
sbb
cwtl
loop
rolb
scas
cli
push
add
xchg
add
jo
bound
xchg
or
xchg
jmp
insb
pshufw
and
pop
or
stos
pop
and
xchg
adc
push
add
mov
mov
std
jns
pop
scas
outsl
dec
push
mov
push
sub
movsb
fucomip
into
adc
aad
repz
xlat
fisttpll
xchg
pop
pop
mov
inc
jecxz
push
ret
enter
sub
dec
mov
shrl
enter
xor
sbb
fstp
pop
push
out
shll
dec
cmp
xor
ror
sbb
repz
add
jmp
mov
mov
inc
out
mov
push
mov
call
jns
xor
mov
sub
add
push
or
add
js
push
add
stc
xchg
pop
bound
shll
sub
pop
lock
push
mov
iret
cmpsl
mov
pop
data16
mov
shrl
out
mov
stos
push
inc
leave
call
fsubrs
cmc
cmpsb
mov
sti
dec
and
inc
sbb
in
and
lahf
or
gs
mov
adc
ret
xor
loopne
inc
adc
adc
push
cmp
jl
push
inc
push
cs
jecxz
leave
fsqrt
popa
stc
pushf
pushf
pushf
lret
repnz
test
adc
dec
lret
or
jns
mov
iret
mov
push
jae
fdivrs
ds
stos
add
sbb
fwait
lret
pop
cmc
pop
ljmp
mov
aam
mov
in
in
sbb
and
lea
addb
cwtl
jo
mov
arpl
sahf
fdivrp
add
rcr
lds
insb
test
xchg
movsl
jo
in
jnp
insb
loopne
inc
or
aad
repz
in
mov
cmpsl
scas
xor
lret
ficompl
cmp
inc
mov
sub
sub
adc
fsubrl
adc
dec
lods
pop
sbb
pavgw
mov
adcl
mov
lahf
cmp
flds
stos
cld
scas
xchg
push
mov
jl
pop
adc
mov
or
fsts
adc
xchg
sub
xchg
cmpsb
das
jp
mov
jecxz
mov
shll
subb
dec
mov
or
xor
les
mov
aad
push
aas
jnp
jp
jb
and
dec
adc
aad
sub
imul
lods
fisubrs
or
scas
pushf
jle
cmp
pushf
pop
out
stos
inc
mov
xor
pop
mov
inc
je
rcll
daa
rorl
inc
sbb
sbb
push
pop
int
push
sarb
xor
mov
mov
mov
pusha
mov
shlb
cld
cmpsb
mov
call
testb
push
stos
aaa
outsb
scas
mov
adc
sub
mov
xor
stos
jecxz
xor
adc
mov
fsubrs
sarl
and
ret
push
mov
in
jg
fwait
xor
sub
ja
pop
jl
jae
int
cmpsb
cli
in
sub
mov
sub
xor
pop
sahf
and
hlt
cmpb
inc
adc
cmp
dec
test
adc
mov
sbb
xor
inc
or
add
ljmp
sbb
inc
mov
jo
ja
cmc
pop
xchg
jns
and
mov
loop
outsb
je
stos
daa
mov
xor
rcll
inc
fs
dec
adc
int
push
popf
dec
xchg
xor
mov
fists
push
mov
jnp
add
movsb
sub
out
mov
sub
sbb
jnp
insb
pushf
daa
iret
pop
inc
sub
dec
jnp
mov
xchg
or
sbb
ds
dec
fsubl
and
cmc
lods
fiadds
orb
mov
dec
pop
mov
cmp
rcr
subl
ficoms
and
addr16
ljmp
dec
sub
mov
mov
pop
xor
or
dec
inc
fcoml
fnstsw
cld
or
push
stc
dec
in
jnp
mov
clc
jae
adc
in
cld
ds
pop
pop
jbe
in
cwtl
pop
fcmovbe
inc
mov
lea
cmp
in
xchg
jge
seto
ret
ret
push
pusha
inc
fwait
pushf
scas
in
mov
push
flds
pop
and
mov
clc
mov
push
mov
imul
ljmp
sbb
test
aad
ljmp
inc
pop
mov
push
and
xor
icebp
fistpl
mov
xchg
jnp
cmp
add
or
test
adcl
add
lods
add
or
movsl
push
jmp
or
das
fisttpl
push
cli
ja
dec
or
mov
mov
xchg
mov
addl
inc
inc
aam
outsl
add
mov
in
jmp
dec
pushf
or
lret
pop
jae
aas
push
hlt
sbb
test
or
orb
aaa
cmp
test
mov
cmpsb
cmpsl
xchg
and
mov
insb
in
jecxz
mov
push
mov
sub
pop
clc
add
dec
cltd
xchg
sbb
push
jae
and
cmp
xchg
sub
outsl
cmp
mov
aaa
inc
rcl
xchg
lods
data16
cmp
inc
cmpsb
pop
mov
movsb
rclb
push
dec
xlat
sbb
aaa
sbb
lret
xchg
sbb
jbe
insl
mov
lea
jmp
int3
push
add
cwtl
aas
lcall
imul
ja
adc
sti
inc
das
fiadds
repz
mov
dec
pop
push
sbb
inc
loope
jae
pop
mov
filds
cmp
or
iret
jge
repnz
xor
fldl
fstps
aad
into
sub
std
jno
fadds
aam
xchg
jns
andb
cmpsb
add
scas
jns
in
and
scas
loope
push
adc
out
xchg
pop
inc
jae
lahf
ds
push
xchg
popa
push
push
mov
popa
notb
cmp
adc
ljmp
mov
pop
pop
xchg
lret
mov
push
adc
mov
mov
xchg
jl
push
ljmp
push
and
push
cli
jle
mov
push
inc
testl
mov
cmp
add
cmp
shll
inc
mov
add
popf
add
add
cmc
dec
xor
dec
jbe
sti
ret
push
out
pop
out
push
lea
pop
ljmp
inc
dec
push
shll
shll
push
xchg
rolb
icebp
mov
test
loopne
in
jns
lds
push
out
lret
cld
sbb
adc
repz
jns
xor
in
push
xchg
lcall
aas
rolb
sti
sub
dec
shr
sbb
lahf
in
ja
push
repz
into
sti
data16
scas
jne
inc
lcall
xchg
mov
out
inc
dec
aas
jmp
std
push
int3
pop
mov
aas
push
push
jnp
aad
call
and
mov
jecxz
cmp
pop
sbb
scas
cltd
aaa
lret
rolb
jne
dec
lods
jae
daa
add
add
jmp
sbb
mov
pop
dec
test
or
scas
nop
fcomps
adc
jp
jmp
mov
mov
sub
into
push
cld
and
dec
mov
sbb
mov
stos
nop
pusha
in
xor
fstps
loope
int
icebp
lcall
sub
fbstp
jbe
mov
and
outsl
cmp
jge
out
pop
xor
ss
jmp
repz
lock
loop
rorl
jp
lahf
negl
cwtl
aaa
push
mov
jmp
ret
cli
fs
inc
in
xchg
int
daa
adc
mov
lea
mov
add
in
dec
ret
iret
cs
mov
cmp
mov
mov
aas
mov
cmpb
lods
xor
imull
inc
out
rcrl
mov
jbe
popf
ret
push
ret
iret
aad
addr16
gs
jno
std
xchg
jne
adc
aad
pop
pop
stos
mov
adc
iret
cmp
insb
or
adc
cltd
arpl
mov
xor
sbb
jl
fistpll
rclb
add
lods
pop
int3
neg
pop
popf
add
adc
and
mov
cmp
mov
dec
cmp
aas
lock
cli
popf
les
jnp
lods
into
ljmp
jb
ret
enter
into
sub
jp
shll
xor
adc
push
pop
insl
inc
bound
loope
mov
or
hlt
cli
ret
jae
fsubl
mov
pop
or
ss
flds
dec
cmpsb
imul
int3
xor
and
mov
push
lret
popf
out
inc
out
dec
cwtl
ljmp
insb
add
add
sub
push
ret
stc
pop
xchg
mov
scas
xor
or
and
or
dec
sbbl
hlt
cs
cmp
add
testb
xchg
sarb
jp
jp
dec
adc
int
repnz
aad
jbe
repz
add
xchg
pop
sub
xchg
in
jb
mov
adc
in
jg
loope
movl
leave
ret
mov
dec
stc
dec
xor
mov
pop
pop
jp
lret
lods
or
cmp
gs
test
test
outsl
adc
cmp
sub
mov
push
jae
push
mov
inc
xchg
mov
xchg
out
pop
and
cs
es
adc
mov
ds
adcb
or
lods
dec
jmp
jp
xchg
stos
subb
mov
mov
popf
mov
shlb
out
pop
leave
repz
cli
aad
mov
cmpsl
imul
and
xchg
inc
pop
aaa
sbbb
nop
or
dec
adc
into
stos
push
int3
movsl
ja
jbe
imul
mov
adc
push
add
sub
es
cmpsl
sub
push
mov
arpl
in
jb
flds
mov
das
shrb
sbb
pop
shlb
inc
fsubl
sbb
cmc
insl
aas
cwtl
gs
sub
add
pop
insb
lods
ss
add
in
push
outsb
sub
inc
mov
jmp
fcmovu
and
and
sbb
lea
daa
mov
fwait
subl
add
rcrl
push
sbb
mov
repz
sub
and
bound
into
orl
jbe
push
sbb
into
test
call
mov
sarl
pusha
lcall
adc
add
xchg
in
xorb
cmp
lret
mov
adc
std
jl
data16
jecxz
mov
and
mov
push
outsb
rcrb
dec
adc
inc
jp
loope
lods
insb
jns
mov
in
lea
inc
push
cli
loopne
sub
ja,pn
int
jecxz
sbb
shl
mov
cs
lahf
fcompl
cmp
or
dec
daa
xchg
test
add
hlt
mov
in
jne
xor
push
insl
arpl
xchg
les
dec
pop
pop
pop
dec
jbe
ja
or
mov
test
jle
imul
xorl
adc
xchg
stc
adc
adc
pop
mov
daa
jmp
cwtl
gs
jl
or
mov
nop
or
xor
cs
push
call
test
jb
jl
out
lcall
mov
xor
xor
jb
jp
rcrl
jo
pop
imul
cmp
movsb
leave
sub
jne
shll
fs
lret
push
sub
rcr
mov
cmp
sar
sub
cltd
mov
in
mov
mov
cmp
inc
push
cmp
out
enter
shufps
cltd
mov
jecxz
add
sbb
or
cmp
mov
or
lahf
scas
dec
dec
pop
push
sub
cmc
enter
movsl
dec
arpl
loopne
std
sbb
fstps
in
add
daa
ss
or
pop
sub
or
push
ffreep
cwtl
jg
jbe
sbb
in
out
mov
cmp
xchg
jns
fs
data16
enter
jle
cs
xchg
fs
and
pop
clc
sbb
jne
repnz
xor
jno,pn
xchg
or
mov
cwtl
add
sbb
inc
inc
icebp
insb
lods
xchg
push
nop
jno
pop
pop
jno
pop
push
gs
cmpsb
xchg
pop
and
push
cmpsl
xor
loop
movsb
mov
push
or
lret
sbb
and
or
inc
std
sbb
xor
cmpsb
scas
sub
xchg
jge
jae
mov
ja
iret
and
push
divb
mov
cmp
and
jp
aad
cmpsb
mov
popa
adc
or
es
dec
push
pop
jne
or
cltd
test
pop
inc
clc
push
lret
adc
fistpl
push
add
adc
int3
mull
push
mov
andb
leave
scas
mov
jg
pushf
push
fdivl
insl
ret
cld
leave
sbb
cmp
fnstenv
adc
pop
pushf
jl
lods
mov
mov
cmpsb
jle
les
xor
dec
mov
or
js
insl
sbb
dec
or
mov
andl
inc
das
ficoml
lret
addl
pop
aas
and
insl
lods
in
xchg
push
testl
mov
dec
sbb
mov
pusha
cmp
outsl
ljmp
jnp
jae
minps
xor
sub
mov
lret
ret
ss
sti
in
insl
jg
sub
incl
cmp
fsubrl
aad
xor
pop
sbb
stos
sub
popa
jno
mov
jge
inc
jne
lcall
call
jbe
jl
xchg
sbb
inc
push
mov
stos
xchg
popa
pop
aam
cld
nop
imul
fcmovb
jecxz
stc
xlat
lret
sar
lahf
outsb
add
cwtl
sahf
cmp
ret
test
cmp
aam
sbb
scas
xor
insb
popa
pop
imul
fwait
jb
stos
outsb
and
pop
jnp
adc
idiv
outsb
cmpsl
mov
inc
orl
jle
mov
lea
cli
pop
or
aad
lret
jb
push
mov
and
mov
jmp
popa
jne
mov
sub
lea
loope
xchg
sub
xchg
bound
fsubs
lret
out
and
jae
dec
pop
sub
rcrb
scas
popf
xorl
imul
std
pusha
mov
inc
jns
mov
xchg
jnp
cmpsb
ds
pop
and
push
loop
lcall
cmpsl
daa
mov
xor
pop
or
hlt
fadds
movsl
lock
push
sub
pop
cli
mov
or
mov
push
rcr
sbb
subb
ret
iret
dec
or
xchg
jg
jp
scas
push
repnz
push
inc
xor
les
pop
stos
es
aaa
repz
xchg
les
dec
jecxz
mov
shl
mov
fnstcw
inc
xchg
lret
pop
sub
bound
nop
mov
mov
rcrb
ja
in
loope
and
jbe
stc
fwait
jecxz
and
loopne
adc
cmc
xor
pop
xor
lods
shlb
jne
insl
sbb
xor
cs
sub
sahf
in
pop
rcrb
or
add
loope
dec
and
sub
adc
rcll
shlb
cmpsl
mov
daa
xchg
dec
neg
negl
in
repnz
push
adc
pop
cmp
push
cwtl
cmpb
mov
testl
mov
cmpsb
pushw
dec
outsl
adc
add
test
fwait
or
cmp
sbbb
fsts
cwtl
insl
les
cmp
mov
pop
sbb
lea
test
arpl
orl
pop
arpl
cmp
and
xorl
and
or
sbb
daa
push
push
cmp
push
xchg
fisubl
adc
lret
je
mov
mov
mov
xchg
xor
imul
scas
movsb
inc
cmc
stos
in
dec
ss
out
test
stos
cmp
rcrl
push
test
fnsave
gs
add
popa
repnz
mov
xor
int
sbb
scas
dec
push
xor
mov
inc
and
ret
cmp
in
mov
imul
sbb
pop
mov
fucomi
loop
insl
les
mov
push
inc
jae
movsb
lds
adc
lret
push
mov
out
cmp
add
pop
or
push
daa
jno
mov
pop
xchg
fidivl
add
add
scas
rcrb
stos
mov
mov
adc
int
ss
sub
sub
out
data16
mov
test
dec
fildl
xor
push
icebp
icebp
mov
fisttps
xor
cmpsl
sub
mov
and
sub
cmpsl
cmp
bound
inc
fsubr
ja
cld
out
mov
jnp
pusha
aaa
scas
shlb
shl
fcmovnbe
inc
lock
lods
loope
shrw
cmp
inc
cld
sbb
add
aas
popf
jmp
ret
orl
mov
xlat
shlb
or
or
lret
push
dec
outsl
ret
test
shl
cmp
add
mov
mov
mov
dec
shr
int3
add
jno
mov
test
jle
mov
and
sub
ret
push
repnz
push
sti
add
xchg
fisttpl
mov
push
pop
pop
dec
xchg
js
adc
test
pop
add
sub
jbe
jae
push
mov
jmp
and
data16
mov
add
cwtl
daa
pop
nop
nop
sbb
xchg
mov
mov
adc
dec
push
and
std
xchg
in
test
sbb
imul
rorb
iret
out
push
popa
or
arpl
add
mov
or
sti
push
dec
mov
xor
xchg
mov
mov
xchg
inc
sub
or
call
test
bound
inc
cmp
push
sbb
andl
jle
and
sbb
jg
xchg
lret
fistpll
sbb
mov
sub
or
scas
push
int
adc
sti
mov
outsl
call
aad
or
dec
or
nop
cmp
shrl
sarb
fstpl
xor
inc
imul
cmp
test
in
sbb
mov
mov
cmp
xchg
repz
or
dec
add
mov
xor
push
daa
jle
cmp
xchg
test
add
jnp
jmp
add
out
cmp
dec
stc
mov
cltd
pop
popa
and
jo
cmp
sbb
push
lods
sbb
xor
ror
ss
mov
pop
sub
call
cmp
nop
repnz
popf
stc
pop
jns
outsb
adc
inc
dec
arpl
xor
inc
scas
cmp
pusha
ljmp
xlat
xchg
repnz
pop
sti
popf
cmp
jns
loop
insb
xor
adc
push
push
dec
xorl
ds
cmp
cmp
flds
lret
or
mov
push
cmpl
push
jecxz
in
fnsave
in
sahf
aas
sti
add
inc
jnp
cmp
push
loop
mov
cmpb
cs
rorl
mov
xchg
mov
aad
add
in
inc
add
pop
mov
lods
dec
and
xor
and
and
mov
test
cmp
out
or
js
jmp
jg
ficompl
sarl
ja
cmp
xchg
mov
push
or
and
push
out
imul
aas
xchg
push
enter
lds
lret
aam
aaa
nop
je
jecxz
shll
loope
aaa
call
lea
and
mov
sbbb
cmp
in
arpl
test
arpl
cmp
fwait
lret
movsb
lods
mov
leave
aad
and
rolb
iret
inc
xchg
imul
push
test
lock
mov
add
xchg
jle
xchg
cld
cmp
cltd
pop
add
aaa
sub
aaa
lods
fwait
movsl
imull
cmc
or
cs
pop
idiv
adc
nop
and
mov
out
imul
fs
cld
adc
mov
push
mov
jge
pop
adc
pop
aas
jge
fdivs
sub
rclb
gs
mov
pop
adc
add
gs
and
ds
dec
adcl
rorb
iret
popf
dec
xchg
mov
xor
imul
lret
xor
icebp
mov
rorb
jae
stos
inc
jl
dec
nop
jno
jl
sub
xchg
cmc
loop
push
mov
mov
jb
push
repnz
clc
add
rorl
lea
adc
lret
imul
xchg
sub
test
cmpsl
roll
mov
pop
push
jle
jg
jbe
xchg
idivl
pusha
adc
add
xor
setge
daa
or
adc
out
xchg
pushf
or
push
and
aas
int
xor
out
pop
shr
mov
pop
nop
stos
outsl
mov
and
mov
inc
daa
xchg
fbld
cmp
test
jnp
or
push
pop
jg
add
mov
aas
mov
cwtl
fistl
popf
pushf
out
testb
fs
das
push
mov
xor
std
rorl
cmpsb
pop
pop
lds
push
jne
mov
push
dec
and
repz
sbb
push
testl
mov
mov
mov
ljmp
adc
add
bound
stc
adc
call
cmp
adc
pop
repnz
lock
push
int
xchg
das
pop
dec
inc
mov
test
fildll
in
out
jecxz
push
pop
sbb
mov
mov
jl
add
cld
adc
fiadds
arpl
out
daa
mov
mov
call
int
popa
xlat
sub
test
aas
sbb
cmp
cltd
daa
divl
ret
cmp
test
mov
sbb
mov
mov
push
int3
add
or
xor
ret
xor
inc
scas
push
pop
in
out
iret
aam
mov
cmp
dec
jecxz
ja
mov
fs
sub
mov
pop
pop
sbb
int3
out
mov
into
leave
xor
outsl
mov
in
insb
jns
movsl
mov
sub
inc
push
xor
gs
pushf
jle
jp
cmc
sar
cld
call
xlat
in
xlat
mov
mov
mov
xor
ficoms
mov
pop
mov
mov
imul
push
fbld
out
outsl
loopne
subl
js
iret
sub
mov
das
dec
and
aas
jl
xchg
lcall
mov
out
jo
rcrb
lea
sub
mov
cmp
test
mov
sarl
xor
push
scas
mov
std
fbld
mov
in
loopne
xlat
and
pop
and
movsl
imul
pop
pop
inc
cld
jle
jle
negl
sub
out
fistl
push
jle
inc
mov
jae
dec
call
les
push
cmpsl
lds
sub
xor
mov
pusha
or
fbstp
inc
push
dec
adc
pop
stos
lcall
cltd
dec
bound
xor
fmuls
div
mov
cmp
aas
pop
xchg
cmp
jne
mov
ja,pt
sub
push
cmpsb
lcall
jl
inc
xchg
pop
ret
or
cmp
loopne
pop
xor
dec
fldl
or
shll
jp
adc
lret
mov
mov
xchg
add
cmp
pop
xor
in
daa
test
fisubrl
xor
jle
add
and
push
cmpsb
enter
mov
adc
mov
mov
rcll
cmp
add
out
pop
jl
testb
cmc
aad
fst
inc
mov
mov
lea
jno
jp
repz
sbb
or
movsb
mov
ljmp
and
or
jge
dec
ljmp
add
icebp
mov
hlt
pusha
xchg
xchg
fistps
mov
mov
pop
push
dec
imul
pop
roll
fistpl
jno
cmp
or
hlt
pop
hlt
loope
into
in
add
push
cltd
mov
fbstp
sub
mov
mov
stc
jne
jecxz
nop
and
jg
push
jp
je
je
cltd
push
sub
or
fcoms
arpl
sub
inc
cmp
in
outsl
mov
adc
out
cmp
mov
sti
js
pop
jae
fidivrs
lcall
into
push
xlat
cmpsb
arpl
adc
lcall
cmp
out
xchg
rcr
es
cmp
xlat
add
or
mov
iret
mov
mov
shll
movsl
pop
jo
fbld
mov
jl
mov
jg
dec
and
fidivl
sub
pop
mov
lahf
rolb
mov
leave
xor
adcl
dec
adc
mov
mov
loopne
shrb
adc
mov
jb
or
aad
add
aaa
in
cmc
pusha
out
mov
or
es
lock
xchg
pop
push
out
cmpsb
fstps
stos
pop
sub
leave
add
push
jle
sbb
fbstp
in
lods
sub
mov
insl
jle
jo
adc
jno
in
enter
enter
push
xchg
sbb
sarl
rol
inc
and
rorb
nop
xchg
lret
or
pop
scas
insb
xor
xchg
push
cs
jmp
pushf
xor
adc
in
mov
inc
std
lea
cmc
in
adc
fnsave
mov
fmul
in
jne
loopne
sub
pop
jo
aas
adc
sub
dec
jne
pop
mov
mov
lds
bnd
mov
push
enter
decl
cmp
pop
jecxz
lret
arpl
notl
sti
mov
push
ja
in
lret
jb
int
lods
popf
mov
sub
pop
jae
insl
xchg
sub
rolb
mov
fstp
mov
imul
fcomip
jmp
lret
cli
cmp
pop
add
imulb
add
pop
pop
push
mull
iret
push
push
xchg
mov
mov
xor
dec
xchg
push
xor
lock
enter
movsb
and
lret
dec
sbb
and
ds
insb
or
mov
dec
mov
test
fdivr
imul
mov
sbb
xchg
insl
ret
lahf
push
push
pop
and
test
fiadds
sbb
inc
mov
ljmp
lcall
fdivp
dec
shll
xor
mov
cmp
cwtl
xchg
mov
push
cmp
dec
jnp
out
aad
sbb
in
add
in
add
mov
jecxz
sbb
fmuls
je
xlat
outsb
lods
loop
mov
push
mov
and
mov
ds
mov
sbb
or
out
xor
dec
dec
and
into
mov
iret
mov
pop
daa
cmpsl
fsubl
lret
in
ret
cmc
cmp
dec
rclb
sub
mov
mov
sbb
mov
ret
stos
xor
xor
xchg
push
xchg
les
cmp
or
jbe
into
mov
xchg
call
shll
push
cmp
adc
adc
js
cmp
arpl
sbb
imul
fisubs
push
orl
cltd
cmp
pop
shll
xor
scas
mov
jp
das
lods
mov
jne
pop
lods
xchg
mov
add
mov
lcall
xor
push
sub
sbb
rorb
test
adc
mov
test
in
out
jno
add
adc
in
jmp
test
mov
dec
mov
andb
xchg
jle
out
adc
sbb
cld
or
rorl
jl
add
test
xorb
and
push
data16
arpl
mov
mov
and
inc
sbb
inc
aas
fwait
adc
cmpsb
test
imul
fisubs
hlt
sub
popa
sub
mov
testl
arpl
mov
jne
or
push
fwait
mov
fisttpl
mov
je
leave
xchg
imul
test
xchg
mov
dec
sahf
mov
xchg
mov
cmp
cmp
call
ljmp
ss
imul
movsb
ret
stos
push
mov
ret
jmp
arpl
insb
fwait
or
mov
idivb
xlat
addr16
dec
mov
addr16
xchg
imul
fwait
in
imul
aad
rcrl
in
ds
xchg
sub
cs
inc
mov
push
add
push
fs
jle
lds
lods
movsl
enter
and
xchg
rcll
mov
xchg
hlt
jo
scas
xor
mov
push
jnp
dec
shr
sahf
push
or
mov
mov
in
lods
jmp
sub
in
jp
aad
sbb
jne
mov
push
cltd
sbb
xchg
inc
pop
call
dec
fwait
ljmp
xchg
push
add
xor
add
cmc
popa
pop
jae
sub
and
mov
cmpsb
mov
sub
enter
in
ror
cmp
int3
xor
aas
ficomps
pusha
push
mov
idiv
pop
imul
ljmp
jo
pusha
subb
xchg
data16
mov
mov
in
sahf
pop
adc
push
adc
popl
addr16
pusha
icebp
std
xchg
jb
outsb
jmp
sbb
daa
test
sub
jnp
pop
inc
cs
fldenv
pop
and
imul
div
jecxz
push
add
loop
leave
cmp
lea
or
test
xchg
out
cmp
ds
popf
mov
mov
pop
add
dec
and
fdivs
jne
lret
pop
in
call
insl
mov
inc
xlat
cmpsl
icebp
loop
pushf
cs
decl
decl
icebp
arpl
adc
daa
iret
pushf
mov
cmpl
cld
call
sbb
bound
sub
fbstp
popf
inc
aaa
jg
mov
jl
jae
sarb
dec
xchg
fldl
mov
mov
dec
outsl
pop
scas
sub
xor
cs
jb
cmp
mov
aad
mov
xor
clc
ja
je
mov
mov
cmpsl
and
pop
mov
lret
inc
sbb
cmpsb
push
or
jl
insb
pop
ss
movsl
adcl
add
pop
and
das
hlt
stc
mov
fs
and
repnz
xchg
adc
dec
sbb
pop
fcoms
movl
sbb
pop
or
dec
imul
xor
sti
pop
mov
data16
ret
add
sarb
pushf
add
daa
mov
fwait
arpl
nop
sbb
gs
sub
shrl
loope
sti
xchg
lahf
mov
hlt
test
popa
add
dec
mov
in
js
or
lret
rcl
xchg
inc
enter
jg
out
in
mov
mov
inc
sub
fistpll
lahf
xor
stos
icebp
sbb
loop
shlb
bound
pop
cmp
jns
or
and
lahf
call
push
cmpb
pushf
scas
push
sbb
pop
add
cmp
outsl
xchg
xor
mov
iret
pop
xchg
or
xchg
mov
jns
shlb
rol
fldl
stos
jmp
xrelease
in
mov
push
jae
mov
push
gs
sub
dec
scas
push
outsb
jne
mov
and
pop
push
xor
aad
xchg
add
inc
cli
mov
push
cmp
push
lret
test
adc
xchg
lret
inc
insb
pop
or
pop
test
and
jmp
adc
aad
scas
int3
push
jae
test
sbb
out
jnp
adc
imul
movsl
cwtl
aaa
inc
call
mov
das
push
mov
lret
jae
mov
ja
push
jae
xor
outsb
xlat
enter
xchg
push
mov
leave
cmc
pop
fsts
mov
xor
stos
mov
into
xchg
or
push
ljmp
xor
fwait
push
jb
out
fists
test
test
aaa
dec
cmp
in
jl
mov
fcompl
imul
andb
push
sub
cmpsb
ficoml
lods
jno
push
inc
cwtl
xchg
xor
inc
int
clc
xchg
divl
lea
sub
jno
inc
pop
xlat
cltd
nop
stos
test
push
mov
rcl
mov
inc
dec
mov
repz
loope
pop
and
jle
nop
out
mov
add
and
or
clc
adc
inc
inc
or
jns
mov
xlat
cs
mov
scas
shl
fisttpll
or
int3
jecxz
push
mov
les
or
sub
inc
jnp
test
mov
stos
pop
adc
inc
push
dec
test
push
pop
sbb
sbb
pop
xor
and
sbb
inc
imul
lret
std
into
jp
fistpl
repz
ficompl
aam
pop
mov
jmp
ja
loopne
fnop
mov
rcll
adc
sbb
pop
dec
sbbl
dec
ljmp
hlt
jg
cmp
xchg
ja
jmp
rclb
fdivr
fildl
test
adc
sbb
scas
imul
stc
sub
leave
jb
xchg
or
outsl
push
push
xorb
ffree
jecxz
adcl
sub
cmp
xchg
sbb
das
stos
sti
inc
jb
xchg
test
test
sarb
sbb
mov
or
lcall
aas
gs
inc
mov
xor
cwtl
fidivl
iret
fwait
pushf
fistpll
bound
stc
test
jno
cmc
mov
out
xchg
xchg
mov
mov
mov
sbb
push
psubusw
sub
in
mov
adc
adc
add
jae
icebp
decb
repnz
jmp
insl
andb
xor
mov
mov
jp
push
cmp
and
mov
movnti
dec
adc
lds
bnd
lods
or
stos
mov
push
adc
mov
xor
cmpsl
out
fidivl
inc
inc
and
push
cli
lods
jmp
aaa
inc
sbb
pusha
std
or
push
push
and
outsl
cmpsl
dec
sarl
adc
fmuls
push
mov
dec
ss
in
mov
inc
ds
xor
inc
scas
mov
ret
imul
ss
rcrb
stos
or
xchg
cmp
mov
push
cld
movsb
stc
adc
jg
insb
mov
add
adc
addr16
std
idivl
aas
mov
lret
mov
and
jne
stos
pusha
lret
fs
inc
and
push
cmp
mov
cmp
push
popa
call
lods
outsl
pop
xor
push
mov
jp
sbb
out
ss
aad
dec
adc
iret
and
push
sub
cmpsb
xor
push
bound
ss
mov
gs
push
data16
push
and
jnp
les
decl
xor
adcb
or
add
cmc
push
push
dec
cmp
mov
inc
inc
sbb
out
xchg
adc
jecxz
lahf
add
sub
gs
xor
add
in
ret
cmp
inc
cmpsb
aam
cmpsb
jnp
mov
inc
insb
add
inc
rcl
insb
pop
mov
mov
jl
inc
cld
adc
out
inc
push
cmp
xor
mov
jecxz
pop
enter
mov
mov
xor
stc
sub
or
jmp
ss
sub
pop
es
ret
sub
and
pop
xor
test
arpl
xor
or
into
lods
loop
in
stos
ja
jg
push
mov
aad
cmpsb
lods
xchg
sub
inc
pop
arpl
pop
je
inc
and
sub
mov
xchg
cli
jg
lea
push
sbb
fwait
scas
int
cmp
dec
mov
and
fdivr
and
mov
mov
leave
repz
fwait
and
outsb
out
out
mov
push
aaa
sbb
cld
or
int3
aam
int3
xor
hlt
out
iret
orb
xor
and
sub
add
nop
sbb
cmp
loopne
icebp
nop
jmp
test
sub
xchg
pop
pop
adc
xchg
fdivs
stc
sbb
cli
xchg
daa
outsl
in
test
les
push
sbb
mov
fs
sarb
inc
pop
jno
inc
sbb
test
jb
pusha
mov
mov
fadds
xchg
mov
negl
inc
mov
sti
ret
jbe
fldl
and
pop
jb
incb
xchg
shll
stos
xchg
bound
mov
call
or
mov
or
iret
out
cmp
pusha
inc
sbb
lret
aas
push
clc
fsub
leave
enter
mov
pop
out
adc
divb
jl
movsl
loopne
pop
cld
in
shlb
in
cmp
mov
fistps
fsts
jp
testl
jo
or
leave
lret
dec
add
cmp
je
pop
rcl
and
fisubs
pop
je
cwtl
dec
test
push
dec
add
cmp
gs
jmp
adc
fldlg2
mov
add
ret
dec
lea
add
inc
mov
dec
mov
stc
and
jecxz
negb
std
sbb
mov
inc
enter
stos
mov
outsl
lods
sbb
rcrl
push
pop
add
xor
sub
int3
and
lea
mov
adc
jne
jge
sbb
inc
pusha
or
sbb
mov
inc
insl
xor
or
imul
push
add
inc
es
inc
subb
mov
or
mov
adc
nop
aas
push
into
cmp
push
rcl
fs
repz
fisubs
jns
ret
cmp
mov
xchg
test
nopl
bound
jo
inc
fimull
cld
sahf
cmc
cmp
pushf
and
ja
pushf
xor
add
and
orl
lods
dec
shlb
pop
jmp
xchg
pop
adc
pop
popf
jg
mov
mov
mov
lcall
mov
loope
xor
xlat
call
mov
fcomi
in
push
mov
dec
outsb
pushf
scas
fdivrs
sub
push
and
push
data16
jno
pop
xchg
fstps
fdivl
dec
inc
fldenv
stos
inc
jmp
out
cs
adc
in
or
inc
subl
xor
or
loopne
push
cld
jmp
cmp
cmp
and
jno
inc
add
das
mov
pop
sahf
pop
jl
ja
lock
and
jb
xor
or
nop
imul
dec
test
mov
add
sbb
shrl
mov
dec
outsb
cltd
pop
jae
mov
or
sub
mov
or
or
fwait
inc
outsl
jne
test
and
out
int3
shufps
les
xlat
aam
int
enter
filds
jns
jmp
jnp
cmc
mov
fsubrl
ret
jo
popa
js
fmul
xor
adc
mov
in
std
sbb
ss
inc
sub
stos
mov
lret
jo
pcmpeqd
or
push
adc
dec
sbb
cmp
xchg
add
pop
nop
mov
mov
mov
adc
xchg
or
add
outsl
xor
adc
sbb
mov
add
mov
out
je
xlat
mov
ss
dec
fsubrl
xchg
into
lret
adc
pop
or
sub
pushf
lahf
je
mov
xchg
shlb
mov
ljmp
mov
stos
xor
in
sarb
push
push
or
mov
xchg
icebp
pop
add
iret
ds
arpl
ds
pop
mov
mov
lahf
dec
inc
inc
test
jbe
outsl
ljmp
dec
mov
jl
jne
aam
mov
lock
or
imull
push
jg
push
jmp
xchg
xchg
hlt
sub
in
sub
loope
out
fdivrs
shlb
or
pop
add
ret
pop
cmp
sti
push
lahf
mov
xchg
mov
mov
xor
outsb
or
pop
jle
mov
or
popf
push
inc
and
cmp
lcall
push
fisttps
out
mov
rorl
pusha
mov
sarl
adc
out
fxch
rol
and
rclb
cmovne
shll
pop
fildll
aas
or
clc
mov
ja
es
aam
rclb
jbe
sbb
push
stos
or
popa
jbe
mov
imul
cmp
andl
mov
dec
adc
outsl
xor
cwtl
adc
sub
int
and
mov
inc
dec
dec
dec
insb
sub
nop
push
es
xchg
adcb
or
and
repnz
sub
cmpsl
mov
cmpsb
loope
xor
lods
mov
stos
xor
mov
lret
push
xor
xor
inc
fistpll
out
adc
das
out
jp
cltd
inc
cmp
mov
in
inc
inc
popf
pusha
sbb
lea
adc
mov
mov
test
scas
mov
add
mov
cwtl
push
fisubl
scas
or
and
and
cli
iret
xor
pop
rorl
adc
cmp
int
xchg
fimuls
push
cmp
push
loope
and
iret
jp
or
je
sbb
cmp
mov
pop
fidivs
pop
mov
rorl
fldenv
adc
dec
es
cld
ds
jne
iret
cmpsl
clc
push
int3
dec
push
repz
dec
and
jns
mov
pop
xor
andl
test
fisttps
xor
int3
inc
add
push
push
inc
xchg
mov
lcall
and
or
or
jmp
arpl
stc
in
or
pop
xor
jb
ss
loopne
pop
stc
pop
rcrb
aas
pushf
sbb
jmp
lea
xor
dec
adc
movsb
push
icebp
cmpl
and
ret
dec
sbb
cwtl
ret
aam
mov
in
pop
pop
cmp
sub
pop
push
pop
mov
ror
xor
shl
sarl
stc
pop
xchg
rcr
addl
dec
mov
into
fcomps
mov
mov
das
subb
orb
cmpsb
xchg
nop
pop
imul
int3
push
jne
or
divb
sbb
in
in
or
jg
xor
fsubrs
xlat
cmpb
sbb
repnz
pop
enter
sbb
fisubs
daa
lock
leave
push
adc
pop
mov
ficoml
subl
add
or
jnp
mov
cwtl
das
fsub
dec
push
pusha
and
out
jo
fimull
adc
test
mov
and
lahf
inc
insb
lahf
repz
dec
cmpsl
orl
fsubrs
imul
int
lea
test
or
or
scas
pop
pushf
movsl
lahf
test
fcom
mov
xchg
dec
adc
xchg
hlt
mov
pop
subb
fnstsw
js
sub
mov
shlb
xor
gs
mov
add
sbb
outsb
push
fnsave
pusha
fidivrs
xor
clc
mov
ds
in
imul
mov
lods
jmp
fidivs
and
jb
cmp
mov
subb
insl
lods
xorb
pop
and
mov
imul
xchg
mov
mov
cmp
int
mov
int3
sarb
iret
ret
data16
and
loope
shrb
pop
jae
mov
dec
push
insl
mov
int
push
ret
mov
jb
push
cwtl
lahf
push
fidivs
cmpb
insb
ja
sub
test
ss
scas
in
xchg
in
pusha
push
xor
lods
addr16
iret
aas
scas
mov
in
fnstsw
sub
mov
push
or
lcall
sbb
int
pop
pusha
hlt
mov
push
dec
push
mov
inc
inc
iret
sar
or
jb
sub
and
repnz
pop
inc
mov
add
test
xchg
mov
lcall
paddusw
movsl
out
lcall
sub
out
xchg
cmc
and
and
stc
fs
mov
mov
stos
aad
movsl
sbb
xchg
popf
lock
lret
push
pop
add
shrb
inc
cmp
cmp
mov
xor
jbe
xor
cmp
scas
pop
xor
lods
repnz
adcl
add
pop
les
imul
sbb
xor
push
mov
js
test
mov
sub
aas
das
mov
or
ja
cld
or
das
dec
nop
or
adc
mov
stos
insb
divl
shll
xchg
sbb
inc
adc
imul
mov
aam
scas
sub
add
cmpsl
jmp
std
sub
iret
rcll
sub
mov
fs
incb
xlat
movb
ret
sahf
ficomps
sahf
cmp
cmp
sub
adc
cmp
aas
dec
xlat
push
lret
fildll
ja
push
les
or
mov
cmc
sbb
inc
insb
jle
add
adc
and
sub
inc
lahf
push
inc
jns
fmul
in
jmp
fstps
ret
jo
clc
mov
sbb
scas
gs
cmp
mov
jg
and
in
es
sbb
dec
adc
mov
arpl
out
cwtl
xor
call
hlt
scas
nop
inc
inc
jecxz
imul
cmpsl
cmp
sub
pop
ret
or
sbb
sbb
ret
lret
xchg
push
aad
out
scas
data16
cmc
mov
sub
mov
nop
pop
fimuls
pop
std
mov
fstpl
mov
or
sahf
push
sub
jle
and
lods
mov
fcom
jle
xor
sub
das
iret
in
dec
mov
jecxz
aaa
inc
movsb
sbb
adc
repz
ret
pop
xchg
popa
push
int3
xor
add
inc
bound
mov
mov
xchg
arpl
sub
and
fistpl
ljmp
sub
inc
cmp
pop
or
enter
test
pop
jb
mov
sub
hlt
mov
xlat
and
dec
cli
cmpsl
dec
fs
clc
je
out
test
orb
repnz
sahf
sub
xor
push
scas
fstps
cmp
jb
loop
test
inc
lcall
fimuls
test
inc
jecxz
js
incb
mov
jnp
insb
xor
mov
pop
mov
ret
in
lret
mov
mov
lret
stos
push
cmp
addr16
mov
jne
mov
cmp
shl
jae
cmp
test
aam
push
jl
lock
aas
subb
add
popf
jecxz
aam
inc
loop
and
pop
lock
mov
movsl
fs
and
lret
xor
addr16
pop
lock
sar
imul
lret
stc
adc
xchg
flds
ja
mov
mov
add
jg
rolb
pop
jae
scas
aas
inc
jge
in
ss
pushf
int
fadds
loopne
out
inc
mov
mov
shrl
mov
fwait
std
inc
mov
scas
xchg
loope
ds
scas
cli
dec
mov
or
into
idivb
popa
xlat
sbb
out
cmp
sub
movsb
pop
mov
imul
mov
jnp
mov
scas
and
pushf
stc
xchg
adc
aaa
insl
loop
int
add
and
popf
lcall
add
data16
aad
push
add
movl
xor
xchg
dec
into
pop
in
and
fistl
push
and
and
jae
dec
adc
mov
and
jb
mov
dec
cmp
cmp
cli
outsl
in
cmp
lods
dec
add
addb
inc
out
jp
or
and
pushf
add
orl
addr16
into
aaa
xchg
inc
and
mov
jmp
cld
test
call
xchg
ret
test
push
mov
xlat
mov
jecxz
dec
aad
mov
jmp
loope
mov
lret
das
xchg
fdivrl
push
adc
or
push
lret
pop
sbb
and
dec
cs
push
pop
jno
xchg
push
xchg
add
les
or
jnp
cwtl
test
mov
xchg
rorl
jae
bndstx
rorb
pop
dec
push
out
xchg
push
adc
mov
adcl
es
pop
inc
ret
mov
iret
sahf
fldenv
sub
push
add
js
aad
pop
ret
shrl
outsb
in
lea
dec
bound
and
dec
or
xlat
and
mov
push
pop
mov
mov
filds
imul
mov
sbbb
jbe
cmp
icebp
mov
xchg
mov
mov
or
stos
xor
adc
xor
jmp
xchg
mov
xchg
aas
lcall
nop
pop
lods
mov
mov
mov
ret
mov
lret
in
sbb
or
push
dec
movsl
dec
mov
xchg
cmp
aas
mov
jle
xor
xor
shll
adc
push
inc
fisttpl
ja
xchg
fs
pop
mov
xchg
pop
sbb
xor
mov
hlt
lds
add
sub
test
scas
pop
mov
pop
adc
jg
std
mov
push
sti
addb
rcrb
imul
push
into
push
test
xchg
imul
mov
pusha
ja
or
shl
inc
mov
add
mov
cmp
pop
cli
push
xchg
pusha
sub
adc
into
mov
rorb
insb
out
or
sbb
cmpsl
pop
fistps
icebp
ret
add
push
test
jmp
or
mov
shll
adc
xchg
clc
add
outsl
push
push
xor
in
sub
mov
and
xchg
cmp
es
adc
insb
ret
pushf
in
lahf
hlt
sub
pop
push
je
out
fucomp
cld
xorb
insb
xchg
clc
mov
push
shl
int
mov
icebp
cmpsb
push
xor
pop
test
bound
or
nop
aam
xchg
sub
sub
or
nop
das
stos
call
sbb
das
enter
dec
mov
mov
pop
lds
out
mov
xor
mov
xor
xor
pushf
pop
icebp
stos
lods
mov
adc
pop
sub
test
aas
jl
test
daa
xchg
movsl
gs
lret
adc
and
lods
adc
xchg
push
dec
rorb
sti
sarl
add
sbb
hlt
push
dec
push
adc
mov
xchg
dec
dec
sbb
loopne
mov
mov
mov
scas
mov
xchg
adc
fsubrp
inc
rolb
pop
mov
sbb
push
insl
jo
inc
pcmpeqw
add
add
add
js
jecxz
mov
push
pop
test
cld
jne
jmp
jle
arpl
push
adc
and
push
jecxz,pt
sub
cltd
loop
test
or
lret
push
cli
push
dec
jecxz
aam
xchg
adc
repnz
sahf
fdivrl
arpl
xchg
lahf
outsb
sub
xchg
jle
jecxz
stos
xchg
mov
shr
cmpsb
in
ljmp
addr16
adc
xchg
cmp
into
push
mov
sbb
dec
jge
and
ss
loop
lahf
sub
push
pop
jno
lahf
stc
and
mov
dec
inc
fs
shl
jmp
xor
movsb
cmp
outsl
cmpsl
enter
mov
in
inc
repnz
sub
clc
pop
divl
pop
mov
inc
add
xor
mov
shr
adc
sub
out
nop
cmc
mov
mov
outsl
fisttpll
jne
icebp
imul
and
xlat
adc
push
mov
sub
imul
mov
adc
xor
cmp
xchg
sbb
cli
jb
jno
lret
addr16
push
sbb
andps
ret
dec
xor
mov
gs
adc
xchg
sti
daa
ret
mov
or
loop
jae
arpl
or
icebp
ss
sbb
dec
shlb
jne
inc
icebp
pop
pop
pop
sub
sbb
or
adc
xchg
test
xchg
rolb
xchg
pop
dec
adc
cld
push
subb
xorb
adc
or
ret
mov
mov
cs
outsl
xor
mov
aad
jns
cmpsb
rcrb
dec
negb
and
sbb
mov
sub
sub
hlt
ljmp
fwait
int3
test
lock
xor
push
jmp
sub
aad
jmp
pop
and
cmp
lds
xor
and
add
mull
std
lret
repnz
ret
imul
ja
cs
pop
xor
js
std
out
scas
test
enter
insl
ret
and
mov
aad
loope
dec
rcll
add
int
push
and
orb
call
mov
int3
mov
push
mov
jbe
lret
repz
xchg
and
loop
jge
imul
in
push
cmp
data16
cmp
aaa
mov
xchg
outsl
and
fst
sbb
movsb
mov
test
push
dec
inc
aam
cvtps2pi
inc
aam
repz
adcb
xor
insb
arpl
fwait
popl
lret
push
imul
push
push
push
cwtl
jae
gs
pop
mov
movl
mov
cli
pusha
popf
popf
xchg
pop
xchg
mov
mov
sbb
and
ret
sbb
insl
insl
test
fs
cltd
fmull
sbb
push
sahf
mov
out
clc
inc
sbb
fnstenv
adc
jbe
mov
ljmp
mov
and
dec
test
repnz
push
daa
imul
stc
pop
mov
std
mov
int
out
test
jp
ja
adc
imul
stos
fwait
int
mov
push
xchg
and
loope
inc
inc
dec
xchg
mov
mov
in
out
fisttps
int
adc
xor
mov
fstpt
aas
fldcw
test
pop
jp
andl
sub
sub
das
mov
or
mov
sbb
sub
cmp
mov
fcompl
mov
jp
lds
dec
xchg
mov
aam
jno
in
cmc
mov
jne
inc
fdivrs
ret
cmp
aad
mov
xchg
fmulp
testb
leave
mov
mov
sar
pop
push
add
addl
push
adcl
mov
mov
push
xor
sahf
add
lret
scas
cmc
rorb
addr16
icebp
mov
test
iret
pop
scas
mov
lock
jmp
sbb
dec
pop
gs
dec
add
xor
sbb
and
jle
fiadds
jnp
jmp
mov
or
inc
cwtl
cmc
sub
shrl
divb
inc
push
or
pop
mov
jg
sbb
jmp
out
lods
jle
xchg
enter
push
cwtl
add
push
jo
das
test
movsl
je
mov
sbb
lods
ret
xchg
pop
insb
sub
sbbb
ds
push
cmp
enter
and
or
adc
outsl
add
repnz
and
jb
cmp
push
cmp
lods
sub
sbb
std
in
xchg
xchg
dec
fld
mov
xor
mov
adc
cli
dec
int3
cmp
rclb
cmp
sti
xchg
mov
jp
lret
fcomps
xor
outsb
cmp
in
cmc
lds
into
pop
jecxz
pop
andl
and
jne
leave
push
sbb
mov
fnstcw
into
jge
xor
jo
cmc
sahf
push
fnstcw
shrb
push
xchg
cltd
sub
pop
cmpsb
stos
into
sbb
push
lcall
test
bound
nop
das
push
sbb
mov
int
inc
mov
xlat
jb
mov
adc
jle
pop
inc
inc
mov
dec
push
mov
jne
dec
push
cli
mov
imul
ss
icebp
xchg
popa
pop
push
rcrl
mov
ds
xchg
jmp
adc
int3
push
es
push
mov
dec
aas
insl
mov
cmp
pop
push
add
push
scas
in
arpl
pusha
icebp
push
push
and
dec
data16
add
pop
cmp
or
js
add
outsl
inc
insb
cmpsl
inc
jl
xchg
fadds
xorl
mov
and
cs
sti
pop
and
cmp
xchg
addr16
xchg
call
sub
jecxz
aad
aam
dec
subl
xchg
das
daa
adc
jb
cltd
loop
pop
mov
clc
xchg
cli
imul
jecxz
lret
pop
ret
out
fldenv
cmp
xchg
jecxz
xchg
int3
call
mov
cmp
pusha
imul
sbbl
mov
mov
mov
mov
test
ja
sbb
adcb
jecxz
or
dec
sub
stos
out
sbb
scas
notb
shlb
stc
rorb
fisttps
mov
inc
cmp
bound
lods
push
shr
xchg
out
lock
nop
and
mov
mov
push
orl
sbb
or
push
sbb
sub
scas
or
test
sarl
xlat
xchg
or
or
fwait
push
cld
sub
xlat
icebp
pushl
push
call
push
insb
sub
xchg
pusha
call
cmp
and
test
push
pop
inc
add
pusha
sub
dec
mov
pop
mov
aad
add
fiadds
sub
xchg
insl
adc
xchg
test
ja
cld
adc
mov
ds
insl
cmp
cmpsl
pushf
mov
sbb
lret
andl
fcoms
inc
jl
adc
cli
das
xor
enter
ret
push
je
out
push
imul
jo
mov
jb
fstpl
sub
fimuls
sub
aaa
test
xchg
and
and
or
fsubs
repz
loopne
push
xchg
int3
iret
mov
cmpsl
adc
ret
frstor
jp
mov
popl
insb
je
xchg
push
xor
sbb
jg
ret
out
xchg
cmp
lahf
jo
movsb
sub
sub
out
adc
mov
imul
jmp
fs
mov
mov
ljmp
mov
loope
dec
addr16
cmp
jecxz
jp
sbb
nop
sub
pop
pop
mov
push
pop
mov
adc
mov
mov
jbe
add
jne
mov
xchg
xor
movsb
inc
mulb
fnstcw
lret
loope
jo
mov
imul
stc
dec
adc
movsb
stos
pop
scas
fst
fnstcw
mov
jmp
jl
into
icebp
fiadds
shrl
pushl
into
lahf
iret
inc
cmc
sub
std
shl
adc
fcmovb
outsb
xor
imul
pop
and
adc
lahf
pop
daa
mov
mov
jno
in
adc
xchg
fstpl
xchg
mov
add
pushf
push
js
dec
sti
stos
push
mov
popf
int3
xchg
ror
filds
jmp
call
xchg
lds
mov
clc
and
push
jnp
lods
ds
jb
lods
stos
dec
jecxz
jge
inc
mov
inc
cli
and
pop
cmp
pop
addr16
cmc
and
cmp
and
inc
or
ret
mov
mov
xlat
test
xchg
pop
fsubrl
add
and
ja
cmc
cmp
cmpsb
std
call
fistpll
inc
insb
test
testb
jae
xor
out
lcall
jae
xchg
pusha
mov
xchg
cmp
std
test
mov
and
xor
push
ror
movsb
movsl
addr16
adc
idiv
xor
xor
bound
inc
xchg
and
mov
xchg
adc
in
add
mull
xchg
mov
cmpsb
add
jl
stos
dec
push
jb
push
fldenv
mov
xchg
ret
mov
stos
dec
pop
and
dec
loop
xchg
int3
jbe
inc
push
insb
lahf
push
js
fdivrl
push
push
add
cmpsl
pop
push
sbb
std
divl
es
jecxz
sti
ljmp
xor
popw
imul
mov
sbb
setle
xor
gs
and
cmpsl
mov
cmp
and
ja
xlat
cmpsl
jmp
and
shll
sub
stc
push
adc
test
sub
ficomps
pop
mov
fisubrl
push
mov
cmp
dec
push
adc
fidivrl
adc
cmp
jmp
test
and
loopne
les
add
jecxz
xlat
pop
pop
dec
into
lock
int3
haddps
mov
shll
cli
add
std
mull
pop
add
jb
cmp
bnd
push
popa
or
loop
dec
in
sub
leave
inc
xchg
sub
mov
sbb
xor
out
out
fidivs
add
dec
cmp
in
shl
xchg
fbld
js
inc
nop
adc
xchg
push
xor
fnstsw
daa
dec
push
loope
cltd
dec
cmp
and
pop
push
hlt
lret
aas
mov
jne
cli
jg
push
mov
test
lods
imul
ljmp
xor
add
mov
test
inc
mov
add
fbstp
lret
jecxz
push
cli
xor
scas
jns
push
or
jns
mov
dec
or
pop
mov
sub
gs
fnstcw
clc
jb
outsb
addr16
repz
inc
jle
sub
cmp
into
je
push
into
call
popf
dec
hlt
lret
mov
jge
add
xor
fs
and
decb
outsl
jge
pop
and
xor
pusha
ret
lock
mov
lret
or
and
imul
movsb
sbb
add
rcll
cli
pop
stc
push
jp
push
mov
xchg
mov
mov
xchg
fwait
push
orl
or
cltd
mov
mov
mov
sbb
inc
and
sbb
iret
mov
mov
mov
movups
loopne
test
jmp
jecxz
cmp
pop
fs
sub
push
loop
cmp
adc
fisubl
mov
lds
dec
arpl
lods
fldt
mov
test
lahf
sub
jbe
cli
and
call
jmp
std
xor
movsb
and
push
lods
repz
push
nop
shl
xor
add
lea
mov
mov
fistpl
ja
dec
xchg
aas
int
dec
ficoms
sub
sub
xor
pop
mov
and
sub
das
pop
sbbl
jle
lahf
or
stos
cs
mov
and
mov
pop
rclb
xchg
jge
jl
icebp
popf
jbe
dec
and
mov
mov
adc
and
jl
imul
dec
cli
jbe
and
xlat
fwait
cmp
sub
in
outsb
pop
push
outsl
inc
shl
mov
xchg
jo
arpl
xor
cmp
ljmp
cmp
xchg
sbb
inc
imul
pop
add
or
inc
ljmp
nop
mov
dec
xor
xor
ficoml
out
sbb
popf
movsb
sub
mov
popa
js
mov
test
rcrb
push
add
xor
scas
xor
ret
mov
mov
fcomip
sahf
mov
or
sub
add
ss
xchg
popl
xchg
lahf
pop
pop
popf
and
sti
pop
mov
int
addr16
fldl
insl
aad
dec
push
sahf
fidivl
push
jo
add
nop
fstl
jns
xor
push
stc
cmp
flds
xor
lds
dec
test
mov
std
out
lahf
cs
add
adc
sub
inc
push
jno
or
sahf
sbb
sub
insb
pop
lret
int3
nop
cli
xlat
call
mov
pop
int
sub
in
mov
cld
cmc
xchg
mull
and
lahf
or
cwtl
or
add
sub
cmpl
pushf
mov
lea
fwait
mov
rcll
aam
mov
ljmp
pop
loope
pop
mov
rclb
and
inc
inc
js
lock
push
mov
cmp
xor
dec
adc
sbb
aas
mov
push
mull
sbb
inc
repz
int
and
jecxz
push
int
rcrb
pop
mov
or
push
lock
mov
loop
lret
mov
int3
out
mov
sbb
cwtl
mov
movsl
ja
cmp
pop
popf
jmp
mov
adc
loop
shl
xchg
xor
sbb
push
cmc
scas
call
std
mov
lret
mov
mov
dec
fs
lock
test
into
stc
test
loopne
in
call
mov
fisttps
add
test
inc
pop
inc
jg
pushf
arpl
lret
aas
adc
dec
mov
sbb
negl
push
insb
ljmp
ljmp
loopne
sbb
dec
fs
pop
jo
outsb
pop
dec
cwtl
mov
mov
push
outsb
sub
sub
add
pusha
add
push
ret
fst
in
adc
pop
push
insl
push
dec
gs
add
data16
sub
jle
movsl
mov
fsubl
pop
lds
lods
jle
out
jno
and
stos
xchg
add
mov
dec
mov
dec
stos
pushf
pcmpeqb
scas
inc
cmpsb
cmp
adc
sbb
in
or
sar
lock
daa
rcl
xchg
mov
pop
push
out
inc
sub
cmp
cld
cmpsb
outsl
cmp
es
or
outsb
dec
pushf
fwait
jl
lcall
fwait
push
lods
jle
sbb
adc
inc
pop
cmpsb
dec
push
mov
mov
inc
sti
test
jbe
add
xor
inc
aas
stos
aas
sub
fprem1
add
outsl
mov
mov
ds
push
cmp
push
pushf
fdivl
lea
ficompl
dec
sub
mov
scas
xchg
pop
add
stos
movsb
jae
leave
cwtl
mov
fs
call
inc
lods
inc
addr16
ljmp
mov
and
jle
xor
std
dec
jnp
mov
xchg
clc
jmp
fldl
in
sbbb
add
jge
call
xor
cwtl
inc
pop
cmp
shlb
cmp
je
push
rcr
fdivrs
nop
cmovle
inc
xchg
push
fwait
out
sbb
test
les
out
not
into
xchg
scas
xchg
mov
fidivl
fwait
mov
sbb
mov
sub
inc
and
test
dec
or
cltd
stos
loop
push
or
mov
push
aaa
mov
lds
add
xor
xor
jne
popa
lret
cmp
push
sub
cmp
mov
push
push
lods
jae
cmp
lcall
inc
mov
cld
mov
adcl
loop
aaa
fbstp
fprem
daa
dec
scas
rcl
pop
inc
rorb
nop
jae
push
lds
ljmp
mov
loop
mov
das
addr16
mov
sbb
adc
dec
or
loopne
aad
inc
mov
push
mov
mov
ficomps
orl
xor
cltd
dec
mov
clc
and
ret
sti
scas
push
mov
cli
not
jmp
xchg
xchg
cmp
loopne
sarb
lahf
mov
out
and
push
dec
addr16
dec
xchg
pop
and
loope
mov
adc
outsb
push
sub
push
lea
ret
gs
rorl
out
pop
mov
cmpb
xchg
push
arpl
das
das
loope
lds
xchg
lahf
inc
mov
push
popf
movsl
stc
popf
rcrb
daa
movsl
xchg
push
inc
add
sub
outsb
mov
or
ja
bound
or
xchg
fs
sahf
insb
loope
lcall
fwait
mov
adcl
or
and
mov
shll
pop
xor
pusha
xor
push
add
inc
movsb
adc
or
ljmp
push
insb
lea
imul
in
add
add
ret
mov
gs
push
addr16
sbb
mov
shlb
pop
stc
jle
cwtl
cmp
pop
das
or
lods
jge
sbb
sbb
xchg
mov
out
xor
outsl
xchg
adc
mov
add
xor
cli
mov
push
mov
mov
cmp
push
push
xor
inc
outsb
adc
xchg
and
int
push
data16
and
mov
rcll
cmp
fbld
inc
or
mov
ljmp
jecxz
mov
into
mov
and
ret
push
hlt
imul
stos
stos
jae
inc
cmp
inc
jmp
mov
fsub
fs
cwtl
test
loope
jae
lret
inc
push
addr16
or
mov
jge
and
ljmp
xor
add
pop
and
scas
loopne
cld
in
andb
push
and
mov
fiaddl
or
es
addl
in
maskmovq
idivl
push
ljmp
pop
xor
and
into
call
ret
push
and
testb
xchg
mov
jno
and
cmp
push
repz
cmp
sahf
xor
cmp
inc
sub
outsl
mov
test
je
testl
mov
loope
cwtl
xchg
outsb
xchg
push
sub
mov
fadds
dec
std
and
mov
les
adc
es
shrl
push
push
pop
push
shll
push
dec
jg
dec
push
ror
mov
push
mov
test
movsb
cmpsl
test
dec
aaa
mov
add
pop
mov
call
mov
call
jl
inc
in
adc
inc
data16
pop
push
test
add
int3
xor
arpl
push
xor
mov
ds
ja
clc
es
dec
and
sub
mov
xchg
adc
inc
inc
scas
dec
mov
pop
cltd
mov
subl
in
cmp
popf
sbbl
mov
mov
cwtl
jmp
stos
je
mov
sub
aam
push
out
sub
icebp
mov
add
insl
mov
pop
ds
and
xchg
jmp
xor
sub
lds
push
into
mov
xor
inc
mov
xor
outsl
or
mov
mov
aaa
mov
xchg
stos
iret
jne
and
repz
add
fistpll
push
jle
adc
jb
stos
cli
dec
mov
mov
pop
cwtl
xor
add
pop
jae
jle
cwtl
cmp
cmp
xor
and
ret
js
mov
or
jbe
fstp
outsl
pop
or
cli
push
inc
jb
add
sub
fwait
outsl
xchg
test
mov
dec
mov
lods
sti
jo
xor
fwait
sub
cmp
mov
roll
xor
dec
fwait
inc
repz
cmc
mov
add
fwait
loop
adc
jno
ret
xchg
mov
lahf
cmpsb
or
pop
test
jg
pop
and
sahf
test
insb
push
out
dec
mov
mov
xchg
lods
pop
hlt
xor
xor
mov
xchg
das
xchg
push
lret
mov
dec
xchg
cmc
dec
push
jno,pn
stc
ret
cmp
clc
aad
testb
scas
cmp
rcrl
scas
mov
shl
cs
sbb
jbe
inc
xchg
adc
cli
xor
inc
stos
ds
cmp
sbb
repz
adc
hlt
xchg
dec
inc
inc
push
mov
ret
push
lret
filds
test
dec
or
test
es
mov
xor
shlb
pop
loope
dec
arpl
add
in
sub
iret
out
xchg
je
adc
mov
mov
int3
out
ljmp
movsl
xchg
test
aad
hlt
sub
iret
ret
xchg
sahf
insl
xchg
adc
rorb
or
add
mov
lea
xchg
adc
aaa
mov
jmp
pop
pop
and
ljmp
jmp
xchg
shrb
lret
in
xchg
mov
push
dec
jno
mov
add
inc
xlat
ljmp
cmp
cmp
xor
adc
jns
pop
and
add
inc
cmpsl
in
sar
xor
lds
pop
fisubs
mov
cmc
and
jg
or
shlb
ss
mov
push
pop
cltd
sub
cmp
fs
mov
test
mov
push
and
ss
push
test
fsubr
shl
xor
cld
test
or
loopne
sub
popa
aad
das
orb
dec
les
pusha
pop
dec
inc
and
stos
or
cmp
cmp
imul
push
or
fcomi
cltd
adc
pushf
call
pop
sbb
pop
cmp
mov
push
pop
dec
mov
mov
leave
inc
push
je
mov
mov
inc
and
cmpsb
je
inc
xchg
lock
fistl
mov
and
aaa
ret
mov
movsb
rcr
orb
cmpsl
mov
test
and
xor
dec
xchg
dec
dec
les
cmp
scas
ja
add
add
adc
in
into
loopne
pop
adc
dec
sti
xchg
add
insb
cmp
in
jno
mov
cmp
retw
lret
push
scas
sti
push
mov
loope
mov
lods
imul
jnp
pop
mov
es
loope
mov
ficomps
push
dec
xchg
pop
dec
fsubrs
xor
inc
mov
popa
mov
cmp
add
rorl
lods
push
pusha
stos
and
xchg
out
orb
negl
xchg
xor
adc
pop
pop
sub
int3
scas
cmp
movsl
push
and
jb
xor
mov
mov
mov
test
push
push
push
sbb
push
pop
cmp
xchg
add
add
icebp
popf
das
imul
cmp
sbb
lods
mov
xor
into
in
add
adc
dec
or
mov
cltd
xor
mov
loopne
shl
mov
xchg
aaa
outsb
mov
fs
inc
dec
push
mov
mov
movsb
xchg
in
lret
jae
inc
sti
mov
add
pop
inc
jecxz
sub
xchg
in
in
ret
push
je
xchg
sub
out
inc
cmp
jecxz
or
hlt
call
jle
notb
imul
mov
ds
repnz
int3
cmp
mov
and
or
inc
dec
test
les
or
xor
in
notl
ds
fwait
xchg
inc
mov
xchg
dec
pop
shll
test
fstps
inc
es
mov
pop
lock
cmc
stc
cld
jno
mov
mov
dec
xchg
or
xchg
cli
cwtl
xor
fcmovnu
cltd
andb
lods
std
pop
inc
test
xor
es
or
push
fs
pop
scas
jg
in
lds
add
pop
sbb
loopne
and
dec
or
push
mov
mov
addr16
cmp
mov
or
sub
ja
out
xor
mov
jg
loopne
in
mov
roll
cmp
sub
lea
cmp
rorl
xor
cld
mov
aas
in
add
or
pop
xor
js
cli
dec
inc
loopne
push
add
or
movsb
and
mov
dec
jae
jae
xor
push
xor
mov
or
fcoml
mov
or
cld
adc
leave
lahf
lret
sbb
or
out
pop
mov
sub
mov
push
in
js
out
or
inc
mov
lea
mov
outsb
xor
lahf
lds
push
addr16
push
push
pushf
int
nop
push
inc
ss
or
xchg
mov
je
js
test
pop
fldt
jge
adc
test
ret
xchg
cld
enter
std
arpl
std
mov
lds
cmp
cltd
push
inc
mov
loop
xchg
adc
cmc
inc
xor
fs
mov
fcomps
clc
lock
add
insl
out
imul
mov
or
jle
xchg
push
ss
xor
and
mov
adcl
inc
lahf
movsb
popf
aad
mov
sub
jo
and
imul
mov
cli
lahf
or
sahf
jle
xchg
adc
in
in
stos
decl
add
and
mov
jae
rclb
and
shl
lahf
lea
sub
mov
jle
adc
pop
or
sbb
xor
stos
sti
iret
cmp
aam
sbb
sbb
aad
sub
pusha
lds
jo
pop
cmp
jb
popa
es
cmp
xor
cmp
push
pop
mov
shlb
mov
aam
sub
xchg
ljmp
mov
aaa
xor
icebp
dec
lret
mov
inc
vandnps
lahf
and
mov
clc
push
test
jbe
addr16
out
fbstp
cmp
pop
push
add
pop
imul
dec
cmp
pop
ljmp
xor
mov
roll
mov
loope
xchg
sbb
mov
mov
decl
stc
mov
ss
mov
and
popf
lahf
adcl
pop
add
in
imul
cmp
imul
aam
clc
push
mov
lea
mov
scas
pop
mov
sbb
xchg
outsl
outsb
xchg
bound
cltd
scas
or
outsb
push
out
jae
add
mov
cld
mov
pop
adc
cmpsl
stos
push
test
xchg
movsl
sbb
sbb
imul
fs
nop
pop
adc
sbb
popf
lahf
and
jge
out
cwtl
bound
xor
jmp
cld
hlt
jmp
lea
subb
jp
insl
sub
or
pusha
dec
push
pop
iret
test
cmp
nop
in
sahf
add
cmpsb
sbb
sbb
inc
and
mov
clc
mov
cli
inc
hlt
das
fistl
push
mov
mov
bound
mov
pusha
fwait
mov
inc
push
in
cli
adc
call
in
in
cltd
fildl
cmp
jae
cmpsb
and
jo
sub
push
mov
xor
fistpl
sub
mov
inc
dec
leave
jb
int3
push
shrl
aas
add
xchg
sahf
xchg
push
fildll
test
aas
ss
data16
fldenv
and
les
adc
int
pop
fwait
scas
sbb
idivb
aam
test
sub
or
shl
mov
leave
aaa
xor
or
lea
outsl
mov
in
jmp
iret
jno
lods
arpl
mov
into
lret
and
pop
adc
mov
out
mov
xchg
sbb
test
sbb
cmp
std
push
dec
lea
xchg
adc
js
mov
inc
scas
add
or
mov
sbb
ds
lahf
jecxz
xchg
push
popa
push
xchg
pop
call
sub
sub
mov
mov
xchg
loope
xchg
cmp
jns
pop
movb
sub
in
dec
jg
sub
pop
shlb
shll
aam
pop
cmp
les
aas
cmp
inc
pusha
mov
imul
inc
mov
mov
test
dec
mov
xor
push
xor
shl
aas
shrb
std
idivl
dec
mov
add
jo
adc
mov
mov
sbb
aad
inc
js
adc
mov
push
ljmp
add
nop
in
nop
inc
js
dec
rorl
mov
jne
lock
out
in
pusha
jg
sbb
mov
mov
movsb
gs
pop
fisttpl
dec
filds
outsb
add
sarb
out
push
in
adc
mov
sbb
cmp
jmp
sub
mov
nop
pop
push
pop
push
arpl
xchg
mov
loop
push
shlb
cltd
cs
xor
call
std
sahf
or
pop
subb
xchg
mov
int3
mov
mov
jne
imul
pop
lds
mov
dec
mov
lock
les
dec
sbb
pop
cmc
pop
sub
xchg
inc
aam
mov
xor
fistl
inc
mov
push
aas
fistl
nop
dec
dec
cmpsb
movsl
jle
xchg
inc
mov
pop
aad
xchg
push
sarb
mov
add
imul
xchg
fwait
mov
push
leave
in
cmp
outsl
and
call
sbb
add
mov
cmp
and
pop
cmp
dec
xor
lds
imul
je
jmp
pusha
push
std
mov
xor
inc
mov
inc
gs
dec
shll
sbb
mov
leave
mov
fs
int3
inc
lahf
dec
sbb
shlb
push
fs
scas
adc
movsl
xorl
or
outsl
ds
xchg
pop
add
out
xchg
push
or
cmp
cmp
xor
cmp
sub
sub
cmp
or
xor
and
popa
push
sub
sbb
jg
xor
sub
enter
cli
sbb
xchg
in
pop
inc
jmp
lods
mov
lea
push
push
or
dec
out
mov
push
lock
aad
mov
ret
outsb
inc
ljmp
ret
insb
xchg
dec
fwait
pop
das
icebp
gs
jge
and
xchg
or
in
rorl
push
pop
push
rcrl
mov
cld
mov
mov
sbb
xchg
rcll
pop
cs
push
cld
std
and
push
icebp
in
mov
repz
outsl
lahf
loopne
mov
iret
push
mov
or
popa
push
cli
push
aas
mov
sub
and
jo
sub
mov
stos
arpl
push
sbb
fimuls
xchg
add
jecxz
cmp
adc
mov
ficoml
cld
int
jge
test
cmp
xor
stc
repnz
xchg
jnp
mov
mov
lods
jns
fidivs
push
mov
xchg
popf
xchg
dec
xchg
mov
or
add
shr
mov
inc
filds
adc
xchg
mov
sub
jmp
scas
gs
inc
loop
outsl
pop
mov
lea
rcrb
push
arpl
cld
hlt
dec
sbb
push
or
and
lods
push
cmp
pop
lods
inc
lret
sbb
repnz
mov
jle
out
aad
xchg
jne
xor
bound
in
push
sahf
dec
sub
scas
ret
aam
inc
fcom
and
push
ss
ret
fwait
jecxz
or
enter
cmp
leave
xchg
adc
mov
insl
mov
jge
mov
inc
ret
jno
in
test
sub
rolb
mov
sbb
mov
inc
pusha
in
lods
stos
or
jp
sub
lock
mov
movsl
shl
stos
dec
xchg
inc
insl
jge
stos
ficompl
fnsave
or
test
sbb
les
mov
mov
in
out
push
inc
stc
in
sbb
sbb
test
push
loope
out
pop
jb
popa
push
xchg
and
xor
xor
rcll
dec
add
sbb
jmp
mov
push
mov
mov
ljmp
add
jns
cli
push
sub
mov
aam
sub
mov
cmp
lods
add
jbe
push
lret
std
or
call
add
push
dec
into
stos
jno
fsub
xor
ret
jge
aas
mov
xchg
mov
push
movsl
scas
push
add
aaa
lods
fdivl
add
loop
xlat
imul
push
frstor
fcomps
fstl
sub
pop
leave
pop
fldenv
inc
scas
and
into
popf
subl
fwait
jns
pushf
add
adc
mov
cli
clc
das
sbb
scas
adc
in
cmp
jge
mov
fnstsw
add
test
outsb
arpl
dec
out
loope
cmp
add
call
push
lcall
adc
pushf
pushf
cmp
pop
cmc
outsl
das
lret
pop
jno
push
pop
push
leave
mov
gs
xchg
or
push
orb
hlt
cld
imul
pop
inc
and
pop
mov
ror
push
call
jl
mov
mov
inc
mov
push
jns
add
stos
sub
sbb
mov
sbb
or
imul
or
dec
mov
inc
or
mov
clc
es
repnz
or
pop
adc
es
adc
lret
or
sub
int3
hlt
xchg
ret
ret
sbb
or
xor
mov
inc
outsb
pusha
sahf
sub
cmp
loopne
mov
inc
pop
add
mov
cli
dec
jns
push
mov
xlat
mov
mov
jle
aad
jmp
lret
jg
insb
push
push
cwtl
pop
dec
cmpl
xchg
sub
into
inc
test
pop
cwtl
ja
or
and
jmp
xchg
stos
int3
rcll
ss
stc
adc
mov
push
in
enter
in
popf
inc
aaa
mov
in
sub
fstps
lret
sahf
sti
jle
push
mov
mov
gs
xor
aaa
pop
xchg
out
jmp
or
adcb
adc
jg
jno
sub
push
sarb
pushf
add
lock
mov
data16
enter
sbb
stc
cs
idivl
xchg
inc
int
dec
test
mov
insb
mov
push
incb
cwtl
rorl
insb
ss
or
xor
mov
subl
lcall
in
add
cmp
fimuls
sti
inc
mov
iret
in
call
lcall
sahf
lret
add
sbb
stos
cmp
lret
lock
mov
sub
outsl
pop
jno
mov
add
push
jb
or
sub
stos
xchg
hlt
sbb
dec
push
or
lret
inc
aam
xchg
int3
mov
cwtl
push
inc
jmp
push
ja
dec
fmul
push
je
mov
mov
addl
stos
inc
mov
dec
pop
mov
add
inc
xlat
rol
push
cltd
or
push
sbbl
jbe
imul
sub
mov
xor
or
push
lock
mov
sbbb
xchg
bound
cmpsl
daa
dec
inc
inc
mov
fisubrs
scas
cltd
sbb
ja
sahf
js
sarl
fsts
lahf
std
xchg
scas
out
xchg
add
pop
mov
adc
or
nop
clc
jle
frstor
popf
push
jge
xor
xchg
mov
push
sti
sub
push
sbb
mov
xor
cmp
inc
negl
jae
je
imul
aas
mov
sahf
movsb
adc
stos
and
aad
dec
data16
in
or
fidivrs
sub
insl
mov
mov
mov
mov
mov
hlt
scas
ror
push
pop
xor
ret
xchg
ret
in
rcl
inc
or
and
data16
jecxz
mov
sub
fnstcw
cmp
mov
ret
jg
pop
adc
lret
xchg
mov
xorb
cltd
mov
ss
outsb
mov
adc
iret
outsl
fisubrs
cld
pop
inc
lods
insb
std
gs
mov
sub
icebp
shlb
and
leave
fcoml
xchg
adc
in
pop
dec
aam
test
mov
cmpsb
ljmp
lods
cli
add
mov
inc
jb
dec
ds
jge
push
xchg
icebp
mov
sub
std
cmp
and
cmpsl
sub
cwtl
lds
daa
add
mov
push
or
pushw
push
dec
or
mov
fsubs
pop
xorb
int3
mov
out
popf
imul
xor
pop
sbb
in
inc
rclb
push
js
jmp
cmc
sub
xchg
add
cmp
hlt
aad
jp
mov
test
fnsave
cltd
popf
popa
ret
cmpsl
xor
inc
out
inc
lea
fwait
or
xchg
pop
lret
fistpll
xlat
call
rep
inc
test
sub
cld
fistpl
mov
test
arpl
adc
arpl
insb
imul
je
call
jl
mov
inc
in
loop
in
pushf
lret
scas
pop
push
out
sbb
inc
jmp
dec
dec
test
cld
sub
xchg
into
dec
sarb
inc
ds
iret
and
jecxz
and
push
pushf
shlb
sub
xlat
cmp
adc
mov
inc
test
jns
es
mov
scas
lret
sarl
sub
or
fidivs
sub
enter
pop
aaa
add
rolb
jg
push
sti
es
jns
mov
lods
sti
in
push
jmp
pop
ficoml
and
cmp
add
cmp
xor
popf
and
sub
add
adc
pushl
pop
mov
sbb
xchg
ror
push
cmc
xchg
repz
icebp
push
xchg
call
xor
sub
ror
lds
adc
mov
lret
mov
cld
mov
bound
cmp
fs
int3
push
adcb
xchg
cli
jg
mov
mov
out
popf
jo
sbb
mov
and
mov
bound
pushf
push
ret
les
movsl
fwait
test
into
push
nop
into
in
cmp
popf
outsl
mov
push
pop
inc
xchg
and
das
mov
ds
sbb
and
shl
dec
mov
in
je
imul
insb
inc
mov
sub
cltd
jnp
cmp
cmp
pushf
popf
pushf
pop
inc
jecxz
mov
push
xor
or
cli
outsl
fwait
add
lds
fchs
dec
cmp
xchg
in
fsubs
or
fwait
mov
enter
mov
popa
pop
mov
aas
xorb
sbb
hlt
popa
and
jbe
das
scas
clc
jns
xchg
xlat
add
xor
inc
mov
ffreep
fs
rcl
outsl
frstor
mov
pop
sbbb
std
cld
sti
repnz
or
mov
arpl
data16
rorl
inc
sbb
iret
ficoml
je
jo
or
ret
fadds
daa
mov
test
cmpsb
outsl
lcall
add
negb
mov
repnz
fadds
stos
lcall
xchg
orl
cmp
stos
cmc
add
xorl
fwait
int
inc
imulb
cmp
push
jle
mov
xor
ja
fsubr
imul
push
test
movsb
inc
fsubrp
imul
repnz
popa
pop
lods
fiaddl
popa
mov
xchg
jecxz
push
or
cmp
imul
insl
or
sub
mov
mov
das
jbe
insl
push
jne
cli
and
lods
xlat
out
jnp
test
outsl
repnz
adc
rcrb
and
test
movsb
sahf
aad
adc
in
imul
and
add
dec
jo
cmp
dec
push
fsts
xchg
cmp
or
notl
xlat
gs
xor
xlat
dec
into
testl
dec
jl,pt
jmp
ja
inc
popf
dec
test
in
movups
test
xor
aam
dec
lret
subl
jg
mov
sbb
lret
lds
scas
dec
mov
roll
sub
gs
shld
add
lods
ror
and
and
xchg
incl
mov
jb
add
mov
test
stos
into
test
addl
dec
fisttpll
out
mov
fisttpll
cwtl
mov
jle
sahf
mov
out
das
out
data16
sbb
cmp
push
and
mov
fisubrs
xchg
mov
pusha
pushf
mov
stos
aad
lea
xchg
sub
mov
add
stos
mov
cmp
sbb
repnz
aam
push
mov
xchg
inc
mov
push
insl
arpl
ja
fsubs
mov
mov
dec
add
jg
cmp
or
cmp
jnp
insl
nop
sbb
inc
mulb
and
push
test
xlat
in
iret
ds
xchg
mov
popa
test
lahf
inc
iret
mov
lods
pop
js
aas
dec
jl
je
mov
clc
push
gs
inc
rcrl
push
dec
adcl
sti
sbb
dec
imul
adc
test
xchg
xor
mov
iret
jno
lea
enter
fiaddl
pop
sub
fidivs
mov
adc
xchg
lea
push
pop
xchg
or
push
and
clc
shr
cmp
test
clc
hlt
sub
aad
insb
loop
out
mov
adc
pusha
lret
mov
mov
in
mov
dec
aad
mov
sbb
ret
push
and
sub
mov
pop
sub
adc
mov
int3
arpl
mov
push
cs
push
sbbb
aad
sti
jg
dec
mov
flds
mov
in
cmp
lcall
fs
sbb
dec
cmpsb
lret
mov
sub
int
movsb
cmp
popa
fimull
xchg
lods
push
adc
insb
xor
outsl
dec
pop
movsb
repz
stos
fisubrl
negl
fimuls
fbstp
enter
pop
sti
cli
mov
mov
arpl
push
fnstsw
ror
xor
imul
pop
adc
sbb
inc
pop
xor
cmpsb
addr16
dec
shrl
cld
or
mov
sbb
idivb
mov
shl
outsb
cmpsb
cmpsb
test
pop
jno
mov
fbld
das
and
stos
shll
lods
xchg
cmp
imul
lods
js
fadds
fbld
adc
mov
gs
mov
xor
xchg
lcall
into
push
fadds
out
pop
out
enter
mov
adc
adc
in
fcompl
loop
xorl
dec
insb
cmpsb
add
add
pop
cmp
imulb
out
mov
adc
ja
sub
stos
cmp
and
shlb
push
mov
push
jg
xchg
push
xor
xlat
test
cli
sahf
lods
xchg
rcl
pop
adc
pushl
and
xlat
and
fs
inc
xor
and
push
daa
mov
push
cmpsl
inc
into
imul
cmpsl
cli
sub
in
sbb
and
out
ficoms
inc
inc
std
inc
stos
adc
sbb
inc
test
mov
xor
xchg
movsl
push
pop
sahf
pop
cmp
sbb
sbb
test
fdivrs
jnp
and
lods
xchg
daa
adc
stos
or
jge
cli
pop
jecxz
add
popf
fnstsw
fidivs
push
loope
push
xchg
popf
and
jae
std
dec
jnp
test
push
je
and
stc
fs
push
sub
or
out
xor
dec
mov
inc
push
call
int3
cltd
movsl
cmpsl
xchg
in
pop
dec
inc
cmp
inc
push
inc
movsl
sti
sub
mov
mov
jl
cld
lret
dec
in
ret
sub
mov
xchg
aas
fwait
push
loop
in
jp
cmp
lds
fnstcw
lock
out
adc
repnz
and
pop
lock
sbb
mov
out
xchg
mov
or
pop
mov
jae
mov
push
jns
flds
rclb
and
sub
adc
and
and
ljmp
xchg
push
sti
jecxz
mov
ja
outsb
stos
xchg
push
sbb
mov
aaa
sbb
xor
sub
int
jecxz
hlt
add
popa
push
ds
out
mov
push
ja
mov
jl
dec
mov
pop
push
adc
xchg
inc
imul
movsl
loopne
jae
arpl
sub
std
pushf
jl
lret
rorl
out
in
clc
ljmp
sub
jae
repnz
nop
int
arpl
ja
sub
aam
sbbb
inc
mov
jp
daa
and
call
movsb
jecxz
cmp
mov
add
mov
fmull
jmp
sub
jo
testl
sahf
dec
inc
pop
in
mov
sbb
cmp
leave
sub
jbe
xor
jnp
subb
push
leave
int
and
pop
mov
mov
pushf
outsl
xchg
pop
adc
pushf
xor
and
jo
popa
mov
xor
in
xor
xchg
pop
inc
arpl
ds
sub
rcl
jecxz
iret
aam
jbe
jns
pushf
imul
jg
push
jmp
shl
or
sahf
push
pop
int
dec
lods
imul
pop
in
lret
pop
dec
insb
adc
mov
sub
mov
mov
lods
push
adc
push
mov
fiadds
mov
add
in
xchg
out
or
cmp
push
and
out
or
push
xor
insb
and
sti
sub
daa
fisubs
loop
or
jg
addl
aas
das
fimuls
sub
pop
scas
fadd
sti
test
xchg
cs
dec
jp
push
xor
pop
xor
dec
repz
mov
shll
jmp
mov
mov
xchg
pop
inc
sub
jp
push
push
jge
notl
lea
daa
push
stos
or
call
movsl
jp
ret
negl
faddl
adc
add
ss
lods
jb
fildl
out
sahf
pop
add
cmp
das
leave
lock
sub
call
xchg
mov
dec
pop
xchg
pusha
jbe
sti
imul
test
fs
in
push
cs
dec
or
mov
dec
xchg
int3
xor
xchg
mov
cmp
push
fwait
cmp
adc
add
sti
pop
pop
jp
mov
shl
popa
and
ret
vorps
jne
pushfw
push
mov
or
in
cmp
jge
rcll
ret
inc
dec
sti
js
inc
add
inc
divb
xchg
rcl
clc
ret
cmpsl
jae
adc
fists
in
and
sahf
add
xchg
dec
jp
push
int3
pushf
xor
fwait
jnp
jb
loopne
sub
adc
dec
mov
xchg
xchg
mov
cmp
fwait
cmpsl
adc
cmp
stc
das
dec
daa
jae
mov
scas
cmpsl
cltd
xchg
inc
mov
xor
insb
daa
jae
inc
lea
jle
ja
mov
mov
gs
pop
push
sub
push
push
push
xchg
dec
and
movsb
sub
dec
or
add
lods
xchg
aad
aad
or
xchg
xor
ljmp
push
cmp
cs
mov
jo
fidivl
pop
out
sub
mov
int
mov
cwtl
xchg
sub
cmpsl
movsb
pop
cmp
mov
lret
ss
movhps
insb
ret
or
loope
iret
xchg
add
rorl
fidivrs
mov
leave
cmp
mov
gs
sub
mov
faddl
pop
inc
jae
ret
add
adc
adc
testb
push
pop
xor
fisubs
pop
ret
jo
adc
cli
sbb
push
cltd
out
mov
inc
cmp
or
xor
popa
and
icebp
lret
sbb
popa
cmc
clc
loope
lret
pop
mov
jae
push
or
cmc
jp
mov
sub
out
sbbl
mov
jp
mov
add
mov
jno
fsubrl
push
or
inc
push
addr16
repz
mov
lcall
xor
xor
and
lahf
lret
int3
idivb
sbb
gs
mov
repz
test
cmp
fldenv
pop
inc
scas
add
add
xchg
push
test
imul
cltd
arpl
pop
pop
sahf
jmp
lcall
mov
std
gs
clc
xor
ss
es
movsl
sbbl
cmp
and
ret
ret
pop
loop
pop
adc
cmc
xchg
cmp
mov
cltd
xchg
insl
mov
mov
je
arpl
std
cmp
mov
dec
and
xor
mov
sbb
nop
out
dec
pop
pusha
cmp
add
pushf
xlat
adc
sbb
fcomps
xchg
into
mov
xor
pushf
clc
add
cmp
arpl
insl
mov
mov
loopne
add
fst
jg
xchg
xor
mov
scas
pop
insb
loopne
popf
push
push
leave
shlb
js
pushl
jp
add
imul
fsts
cmpsb
jo
pop
xor
enter
loope
push
lods
and
stc
sti
rolb
dec
sarb
into
icebp
mov
test
pushf
pop
repnz
pop
push
rcll
cld
sbb
ret
movsl
ss
push
out
cmpsb
jg
sub
cmp
add
in
xchg
das
or
pushf
test
sarl
nop
cmp
dec
leave
pop
xor
or
hlt
cmc
faddp
notb
xchg
stos
cwtl
rclb
push
xor
inc
std
jl
sbb
mov
inc
dec
inc
push
jne
sub
stos
stos
pop
ljmp
lods
xchg
sub
adc
out
mov
jg
sbb
adc
loopne
dec
xchg
inc
push
mov
and
adc
jge
dec
scas
dec
sarl
push
psubq
pop
inc
sbb
sub
xor
xchg
fnsave
jno
mov
out
lock
sbb
adc
and
popa
ljmp
lods
out
sbb
jo
push
daa
push
cmp
out
sub
div
in
jg
ret
and
mov
sub
push
xor
mov
iret
nop
out
mov
sti
mov
test
call
sahf
sbb
jbe
pop
repnz
sbbl
or
jp
dec
ja
jp
jle
icebp
movl
cmp
daa
jb
test
add
test
mov
xchg
sbb
inc
push
sbb
mov
sbb
stos
jp
rcll
subl
push
iret
push
cmc
jns
or
in
nop
loope
insb
bound
push
pop
std
mov
sub
jns
rcl
mov
push
add
repz
mov
int
gs
and
cli
mov
pop
and
rcrl
or
xchg
sub
fldt
pop
pop
xor
stos
jb
mov
mov
jmp
sbbl
std
push
xor
inc
int3
mov
pslld
out
test
mov
lods
push
jne
dec
mov
outsb
andl
pop
jl
lock
test
push
lret
pop
pop
and
jb
mov
subl
xchg
pushf
pop
aam
ret
andb
dec
jbe
sbb
cwtl
nop
push
cltd
mov
addr16
inc
xchg
and
shlb
xor
pop
jns
bound
push
nop
mov
cmp
or
sahf
shrl
sub
fildl
out
mov
data16
sub
xchg
add
stos
arpl
scas
test
or
scas
ja
pop
aad
inc
add
clc
movsb
test
jle
or
pushf
inc
test
aas
push
lahf
mov
or
arpl
cmc
lods
mov
les
fisttps
xchg
fs
adc
xor
ljmp
mov
and
enter
pop
cmp
icebp
out
pop
hlt
push
mov
push
xchg
sarb
rclb
lcall
adc
adc
lret
pop
or
inc
hlt
jae
cmpl
fisttpl
sbb
mov
mov
inc
adc
mov
nop
dec
sbb
je
jns
or
inc
sahf
jg
test
sub
enter
incl
mov
cmp
cmpsl
push
movmskps
iret
leave
mov
sbb
xor
adc
push
pop
cmc
aaa
pop
bswap
rcll
loopne
js
xlat
adc
imul
rcrb
mov
cmp
inc
pop
push
mov
data16
or
push
stos
cmpsb
or
dec
sbbl
leave
loopw
push
addl
das
sahf
int
scas
xchg
inc
addb
mov
lahf
dec
int3
data16
sbb
mov
out
lcall
mov
fs
inc
sub
movsb
stc
call
mov
in
add
fcompl
bound
push
faddl
and
and
mov
adc
sarl
shr
xor
mov
out
imul
sbb
subb
in
into
or
mov
cld
add
sbb
mov
push
pusha
fiaddl
or
mov
lret
dec
add
xchg
adc
inc
dec
shrl
test
pop
jecxz
dec
repnz
dec
dec
ljmp
imul
icebp
sub
cld
outsb
add
shrb
movl
iret
ds
mov
dec
mov
or
in
jp
dec
repz
pop
xchg
add
out
sahf
push
jne
dec
jbe
sbb
es
jg
xchg
aaa
and
jo
mov
test
test
out
sub
jmp
out
dec
mov
jns
push
popa
mov
rol
xor
movsb
dec
jnp
xchg
cmp
lds
ficoml
pusha
xor
in
popa
sar
rorl
fsubrs
stc
add
movsb
adc
test
loopne
orl
int3
fmul
fisubl
sub
cld
lret
pop
push
fisttps
fwait
jge
repz
pusha
or
mov
filds
mov
adc
jno
jmp
mov
jge
mov
inc
fs
xor
lock
sbb
dec
or
stos
lds
imul
dec
movsb
cmp
dec
push
fisttps
lds
adc
push
je
add
jmp
lock
xlat
xor
cmp
shll
loopne
insl
jne
mov
pop
jae
fwait
sub
insl
and
add
or
sarb
cmp
in
into
jo
dec
adc
cmp
xlat
cwtl
xor
loop
jne
loop
add
xor
ljmp
cld
sbb
mov
lods
sbbb
scas
inc
aaa
loope
mov
pop
cld
sub
cmc
cltd
xor
add
cmp
sbb
repnz
pop
mov
push
cmp
pop
ss
test
jp
mov
stos
jns
or
call
and
cltd
aad
shll
divl
sarl
and
arpl
iret
int3
jo
icebp
mov
jns
lods
xchg
mov
push
pop
out
cld
push
dec
and
call
mov
loopne
pop
ror
aas
dec
icebp
xor
fstpt
inc
pop
sub
mov
aam
dec
cmpsl
xlat
jne
cmp
into
jbe
in
mov
jle
pusha
pushf
mov
xor
or
out
repz
out
dec
fdivl
and
imul
das
hlt
icebp
adc
cmp
dec
fwait
jns
jg
pop
inc
push
mov
jmp
mov
outsb
xchg
and
push
out
mov
jg
pop
adc
add
pop
icebp
fistl
and
int
pop
inc
stos
mov
push
dec
mov
test
mov
pop
mov
jbe
and
into
add
outsb
out
dec
cmpsb
in
sub
ficompl
fwait
int3
test
push
aaa
faddp
push
fcmove
repnz
jge
es
jp
mov
cmpsb
fisubs
mov
and
outsl
mov
or
push
je
mov
in
stos
arpl
jge
clc
in
out
rcr
and
push
xor
loop
test
loopne
add
or
out
mov
push
jno
dec
add
test
fdivrs
sbb
mov
negl
add
popa
sub
pop
lcall
sub
mov
xchg
jo
mov
xor
xor
idivb
and
mov
jns
and
mov
decb
addr16
jbe
test
fildll
repz
mov
aam
lahf
lods
sub
aam
imul
pop
pop
out
outsb
xor
mov
movsl
jo
outsl
xchg
sbb
add
xchg
xor
rcrl
test
fcomip
lret
int
movsl
shll
movsb
out
mov
mov
dec
jo
mov
lret
mov
enter
lahf
xchg
sbb
ret
hlt
aad
arpl
pop
push
gs
mov
add
add
and
add
xchg
push
xchg
adc
loopne
cmpb
test
mov
or
icebp
sbb
xlat
mov
sbb
add
mov
mov
mov
pop
xchg
shll
sti
rorl
stc
lahf
push
into
mov
or
xchg
dec
mov
out
in
xchg
imul
aam
mov
mov
out
xor
or
pop
jnp
xchg
jmp
in
cltd
mov
es
out
dec
cmp
xorb
es
dec
ret
xor
imul
cltd
movsl
adc
out
dec
mov
dec
lcall
xor
std
xor
adc
inc
or
pop
jae
push
jp
dec
cmp
jae
adc
cmp
inc
lds
pusha
push
sarl
in
in
jne
jmp
pop
sbb
jmp
ljmp
cmp
negl
shll
mov
leave
dec
sbbl
inc
xchg
les
es
xchg
aaa
dec
sbb
rcrb
out
xchg
mov
fistps
push
mov
pop
and
jg
into
xchg
cmp
dec
cmp
fucomi
bound
repz
stc
jb
pop
jns
mov
lods
lret
mov
xorl
mov
pop
cmpsb
sbb
ds
sti
and
jae
mov
loop
loopne
call
jge
testb
gs
aaa
out
add
lods
push
push
mov
cmp
pop
jno
fmuls
push
mov
sub
mov
adc
jle
mov
inc
xor
mov
test
jmp
add
and
xor
out
or
inc
shl
movsl
fwait
lret
mov
fwait
xor
jp
aam
inc
jp
jle
cmp
lret
std
adc
jge
stos
cmp
mov
mov
mov
mov
pushf
int
shll
fdivr
xor
pop
divb
cwtl
mov
cld
xor
pop
aad
mov
sti
jle
and
ja
rcr
mov
subl
push
xor
pop
pop
push
sbb
pop
out
hlt
dec
pop
sti
faddl
pop
icebp
mov
loop
leave
lahf
es
dec
fmuls
xchg
cmpsb
mov
fsubrl
xchg
test
adc
sti
pop
add
mov
adc
shlb
fpatan
and
push
or
mov
jb
jne
xchg
icebp
gs
xchg
mov
push
inc
in
pop
scas
testl
mov
dec
adc
aam
mov
lea
stos
pop
inc
adcb
ja
stos
sbb
test
mov
mov
and
cmp
test
clc
lock
add
mov
cld
inc
dec
insb
neg
fs
popf
loopne
mov
cld
sub
jnp
push
in
pop
fnstsw
stc
inc
mov
dec
lahf
adc
ljmp
lods
ret
jmp
mov
imul
mov
inc
pop
movsb
push
pop
dec
xchg
dec
loop
jb
rcrb
mov
and
test
fbstp
gs
mov
jns
mov
pushf
cmp
aam
cwtl
push
xchg
jmp
out
inc
jg
test
pop
sub
xchg
notl
pop
cmpsb
xor
push
dec
push
outsb
cs
insb
ja
jge
aas
data16
mov
add
lret
adc
dec
mov
mov
jmp
push
aas
out
sbb
aam
cmpsl
cmp
pusha
push
jae
sbb
add
negb
adc
jns
imul
sarb
mov
pop
js
and
mov
fdivs
subb
daa
push
stos
cwtl
add
arpl
xchg
pushf
cld
cmpsb
push
sub
push
xor
les
mov
and
mov
add
mov
mov
test
adc
shll
xchg
and
jl
xor
add
cmp
ret
lcall
mov
sub
mov
stos
add
or
jl
out
jno
dec
ja
sub
xor
mov
mov
hlt
jmp
dec
mov
test
out
mov
int3
fistps
inc
in
lods
mov
aam
cld
lds
cmp
push
mov
aaa
loop
jle
aad
mov
mov
xlat
cmp
aam
dec
fimuls
mov
or
jl
outsl
insl
mov
pop
mov
test
hlt
dec
cs
mov
mov
cld
jle
mov
stc
xor
inc
adc
test
outsb
mull
pusha
xor
mov
cmp
adcl
scas
push
outsl
add
pop
cs
push
push
aas
jp
test
in
fdivp
dec
sarl
or
es
inc
push
dec
push
fsubrl
mov
sbb
push
lret
xor
jmp
adc
scas
inc
sbb
cwtl
lret
mov
mov
cmc
and
xor
xchg
mov
sub
inc
fwait
test
lods
adc
dec
sbb
inc
push
hlt
mov
je
jl
adc
or
dec
movsl
popa
into
inc
in
add
add
or
movsb
or
orl
push
fcom
out
mov
leave
add
adc
pop
leave
jecxz
xchg
sbb
clc
add
popa
or
mov
sbb
fs
mov
dec
fstpt
xchg
add
mov
adc
into
mov
cmp
dec
sbb
xchg
dec
add
imul
sarl
lahf
and
arpl
cwtl
dec
mov
mov
or
pop
adc
mov
push
pop
test
ja
pop
int
ljmp
sub
xorb
and
in
push
mov
insb
loopne
sbb
xchg
or
jno
lock
call
lods
xchg
stos
imul
mov
push
dec
inc
jecxz
xchg
lret
cmp
sbb
cmp
xor
bnd
fidivrs
add
add
fildll
sahf
aad
aaa
cld
dec
std
dec
mov
mov
dec
xchg
nop
pop
repz
leave
mov
xchg
mov
aam
shll
adc
jbe
jmp
fidivrl
and
or
pop
and
inc
fisttps
fdivr
or
bound
inc
pop
dec
xlat
dec
cltd
cmpsl
xchg
xlat
sti
rcr
xchg
add
inc
rolb
out
loope
push
pop
mov
dec
mov
or
mov
push
dec
inc
xchg
hlt
insb
or
mov
je
inc
inc
adc
pop
scas
outsb
inc
and
mov
adc
jbe
mov
add
mov
repz
jecxz
dec
inc
in
inc
cld
rcrl
jp
and
and
pop
shl
int3
jp
jb
jae
ror
out
adc
imul
enter
mov
dec
or
inc
ja
lcall
adc
push
mov
stos
add
mov
into
inc
jne
dec
clc
dec
imul
sbbl
xor
push
jne
cmp
pop
mov
sahf
push
lods
fmulp
adc
enter
das
sbb
mov
mov
test
xchg
xchg
idivb
cli
ficompl
loop
fimuls
dec
aaa
fwait
ja
dec
fs
pop
fbstp
mov
cmp
out
xchg
mov
sarl
movsb
xor
rcrb
fwait
stos
addr16
pop
add
dec
das
mov
psrlw
fsubr
sub
push
jb
sub
push
test
cmpsb
leave
pushl
cwtl
xchg
xlat
in
sbb
popf
cli
dec
out
cmp
ret
jl
sub
kmovw
daa
sbb
jg
push
adc
stc
adc
dec
inc
orb
pushf
lret
enter
sub
rorb
dec
xor
cmpl
pop
or
sbb
cmp
lret
in
push
jb
jnp
lock
ss
mov
das
iret
movsb
dec
lods
add
inc
cmp
mov
cmc
mov
and
movsl
bswap
mov
push
sbb
mov
sbb
pop
jg
xchg
aas
add
lahf
sbb
imul
icebp
sbb
push
icebp
leave
push
sahf
sub
xchg
fistps
mov
insl
cmp
ffreep
pop
jmp
mov
jp
ficoms
in
adc
inc
jns
mov
push
add
dec
jge
inc
std
push
xor
push
mov
sbb
cmp
dec
cmp
cmp
testb
std
fbstp
gs
mov
jg
add
int3
adc
xchg
pushf
push
xlat
js
cmp
mov
jbe
sbb
mov
mov
outsl
inc
and
test
xorl
cmp
jo
in
ret
xor
or
and
cmp
arpl
les
imul
lods
mov
inc
cmp
mov
test
cmp
dec
mov
xorb
nop
lods
imul
arpl
popf
inc
mov
add
sbb
rclb
mov
call
jae
dec
sub
ja
ss
xlat
dec
jnp
inc
add
push
lret
lock
mov
cltd
inc
inc
adc
popf
stos
mov
aas
mov
subb
ljmp
inc
test
std
stos
mov
loope
fadds
popa
jg
xchg
push
push
jne
out
mov
call
dec
push
lret
cld
add
es
and
push
xor
or
movsb
ljmp
cli
das
mov
aas
add
lret
mov
mov
sbb
imul
mov
xor
in
pop
lret
xor
lret
stos
les
dec
pop
int3
cwtl
dec
in
dec
or
inc
mov
add
loop
cli
mov
data16
mov
adcb
insb
sti
jne
dec
and
jge
pop
xchg
xor
mov
mov
xor
jmp
inc
mov
popf
push
testl
pop
lcall
out
mov
gs
rcll
cmp
and
in
sbb
xor
les
sti
fs
adc
mov
fldt
movsb
and
sub
add
orb
add
inc
repnz
data16
push
cmc
sub
xchg
sti
mov
pop
int
js
push
dec
pop
ret
filds
cmpsl
inc
ja
inc
sub
add
dec
push
xor
aad
jmp
gs
mov
out
xchg
lret
xchg
ret
shlb
ret
push
fisttpl
enter
xor
cs
dec
and
mov
sub
insl
jmp
aaa
mov
mov
jg
xor
nop
jg
cmp
daa
mov
rclb
ror
in
insb
lahf
rcrl
pop
lea
scas
inc
out
fisubs
pushf
xchg
xor
das
movsb
lret
lea
or
movsb
jmp
cmpsb
js
cmp
in
ja
test
xlat
jae
pop
test
sahf
insl
pop
aad
ljmp
or
push
sbb
pop
rorb
out
jnp
sbb
mov
mov
adc
xchg
imul
stc
int3
mov
mov
inc
and
jmp
pop
lea
test
add
cmp
pop
pop
repnz
xchg
test
xlat
jne
cmp
mov
insl
sbb
je
push
pop
inc
test
mov
stc
fcmovnb
data16
iret
lret
cmp
fildll
movb
stc
mov
cmpsb
dec
aas
loopne
or
mov
mov
jno
fisubrs
xchg
mov
sub
mov
inc
in
divb
mov
fstpt
push
xchg
add
leave
sbbb
mov
sbb
loopne
inc
dec
out
ret
mulb
pop
cmpl
ss
aam
add
pop
xchg
or
icebp
xor
cmp
mulb
adc
dec
cmp
into
out
inc
mov
fbstp
cmp
fstpt
push
mov
inc
adc
or
fwait
shll
adc
cmc
fsubs
stos
nop
insb
aad
repnz
inc
shlb
sbb
lock
dec
push
ret
adc
imul
imul
lock
nop
inc
xchg
sbb
daa
mov
and
xchg
js
lock
aas
fnstsw
mov
pop
pop
out
aas
shlb
ret
dec
cmp
mov
inc
shrl
or
cmp
movsb
ss
out
sarb
and
cs
cld
push
mov
sti
mov
inc
mov
xchg
pop
xchg
imul
adc
pop
mov
push
stos
icebp
call
loope
pop
sbb
lcall
mov
loope
subb
inc
inc
movhps
int
pop
dec
xor
sub
test
mov
stos
inc
subb
xor
pushf
sub
test
pop
lds
scas
lods
aas
cmp
inc
outsb
push
mov
cmpb
call
imul
es
cltd
pop
fldenv
mov
mov
push
arpl
lea
pop
clc
cmp
stos
pop
bound
fisubl
sub
sahf
cwtl
xor
dec
incb
and
sub
sbb
xor
mov
sub
mov
jno
push
jo
insl
lret
dec
adc
push
test
push
xor
in
jb
adc
pusha
cmp
fmull
add
incb
xlat
out
fs
hlt
and
cmp
mov
push
push
mov
xchg
scas
mov
notl
dec
cmp
out
sub
pop
add
sub
lods
pusha
xor
or
imul
fwait
jecxz
push
loop
xor
inc
loop
xorb
in
cld
fists
mov
mov
pop
imul
dec
jae
test
cmp
imul
adc
inc
movsb
cwtl
fsub
mov
jno
hlt
divb
jl
dec
leave
add
dec
adc
jl
sahf
add
pop
cmpb
mov
jge
fistps
fldt
jb
push
sbb
jmp
lods
dec
or
add
mov
dec
xchg
mov
inc
adc
stc
jb
dec
lahf
inc
lcall
xor
add
xchg
clc
push
rorl
rcr
jne,pt
loope
xchg
cmp
jmp
sbb
sub
loope
and
cli
mov
stos
and
xchg
xor
ret
add
pop
mov
icebp
jne
jnp
rcrb
insb
push
sub
pop
push
xchg
mov
cwtl
push
scas
pop
and
push
sub
cmp
pop
sub
jns
lods
mov
mov
int
ror
mov
mov
mov
sahf
sub
hlt
aad
int
loope
in
mov
mov
mov
insb
cmc
dec
fsubs
pop
mov
int3
movsl
out
xor
push
ss
lds
pop
mov
sub
popa
cmpsl
dec
sahf
dec
nop
xor
xchg
orb
push
lds
mov
xor
xor
sbb
imulb
xchg
lret
ret
add
not
adc
sbb
andl
pusha
mov
jb
cmp
cmp
icebp
sub
js
jo
pushw
sub
pop
movsl
out
hlt
std
pop
lahf
js
cmpl
mov
push
mov
lods
dec
fisubs
fcmovb
je
out
aaa
stos
adc
lahf
ja
pop
cmp
sub
imul
inc
rcrb
mov
repz
out
loope
sub
adc
adc
lret
sbb
insl
cmc
inc
push
sti
or
push
mov
testl
cmp
test
mov
inc
fucomi
adc
sub
pusha
inc
mov
mov
mov
jbe
fcomi
dec
mov
pop
jl
data16
push
sbb
insl
xchg
jnp
rcrb
cs
inc
sub
leave
pop
sbb
mov
sbb
sbb
push
int3
jp
inc
fidivrs
add
sub
ficomps
or
orl
jne
leave
jne
fisttpl
cli
mov
push
rcl
inc
xor
test
lret
arpl
mov
fcomps
int
mov
dec
cmp
xchg
mov
pusha
testb
xor
pop
dec
lcall
ljmp
aad
mov
insl
iret
jns
je
les
call
mov
les
je
xchg
add
add
orps
xchg
ljmp
into
lods
insl
add
pop
call
xchg
mov
loope
in
xchg
adc
push
mov
push
leave
cld
inc
add
adc
inc
fildll
inc
shrb
gs
and
test
arpl
mov
std
inc
mov
push
and
add
out
popa
mov
push
pop
pop
mov
mov
mov
loopne
stos
sbb
cmp
or
popf
mov
sbb
gs
mov
xchg
pop
es
dec
fwait
lods
in
arpl
dec
add
add
jecxz
out
lret
jecxz
mov
push
shll
cs
add
pushf
outsb
incb
mov
jg
out
scas
lret
sarl
mov
dec
mov
pop
sbb
inc
leave
and
xchg
clc
test
repnz
push
cli
sub
push
sub
mov
fistps
push
and
xor
and
mov
sbb
cmp
sbb
nop
arpl
pusha
test
mov
sub
mov
lds
out
lods
dec
dec
adc
push
ds
jp
outsl
out
nop
les
sete
pop
repnz
adc
xor
pop
pop
xchg
jl
ja
stos
jmp
lretw
pop
sub
jg
pop
pop
cltd
subl
add
cmp
fcoms
mov
rolb
sub
stos
pop
ja
adc
adc
pop
mov
notb
jne
shll
stos
lods
imul
jge
ret
xchg
lods
or
in
lea
stc
sahf
push
sbb
xchg
out
fcmovb
test
mov
add
enter
mov
or
adc
mov
cmp
lret
adc
arpl
cltd
fcomp
xor
nop
jecxz
pop
cmp
sbb
dec
test
insl
dec
adc
ret
xchg
inc
inc
lea
test
enter
jge
aam
sti
jp
dec
aas
insb
jg
out
sbb
out
nop
cmp
mov
aad
aaa
leave
clc
dec
and
outsb
xchg
mov
jle
cmp
or
jmp
mov
pop
insb
or
int3
jno
xchg
add
mov
inc
fsubrl
jmp
cs
lds
loop
repz
and
mov
adc
inc
jbe
lahf
test
cmpsl
pop
adc
in
or
inc
movsl
sbb
movsl
subb
mov
mov
icebp
gs
fmull
pop
fwait
test
xchg
pop
xchg
mov
add
int3
pop
insb
bound
add
mov
cmp
ds
mov
adc
cmpsb
jnp
jl
dec
xchg
rorb
ret
inc
mov
fcompl
mov
call
out
add
cwtl
aam
out
push
xchg
push
pusha
add
cwtl
adc
adc
test
mov
adc
ss
roll
mov
jp
xor
test
sub
pop
sub
dec
inc
pop
mov
pop
inc
cli
add
jb
xor
push
adc
ds
fldcw
jge
aaa
jo
add
add
outsb
movsb
dec
sbb
fisubrl
add
jge
and
aam
dec
push
cmp
fisubrs
ljmp
das
out
cmp
dec
cs
push
xor
xchg
cmp
mov
mov
mov
repnz
adc
inc
and
mov
push
sub
call
lahf
shrb
ret
ljmp
inc
lret
sub
xor
icebp
cmc
jae
loopne
sub
cwtl
dec
fwait
inc
mov
cmp
mov
sub
fstps
shlb
sbb
mov
cwtl
lock
pop
inc
dec
pop
jmp
scas
mov
imul
and
push
cmp
xchg
mov
sub
pop
mov
lods
into
or
jae
mov
loop
outsb
sbb
aas
clc
inc
jae
push
sub
lahf
decb
stc
shl
mov
pushf
in
push
mul
out
push
mov
mov
cmp
xor
rorb
aam
out
mov
mov
cmpsl
dec
fwait
pop
loop
inc
and
push
sbb
add
xchg
fstps
fnstsw
push
data16
inc
insb
pop
outsl
adcl
out
mov
cwtl
add
fisubrs
pusha
mov
or
jge
sub
cmc
add
dec
stos
icebp
out
lcall
loopne
ss
iret
mov
imulb
dec
bound
cmpsb
dec
xchg
xor
in
inc
jne
cltd
inc
shll
std
jmp
or
call
iret
xchg
jecxz
fidivs
ss
cmpsb
mov
push
popa
out
in
loopne
mov
dec
out
pop
xlat
addr16
lods
xchg
or
adc
negb
shll
push
test
and
pop
mov
cwtl
xlat
addr16
mov
mov
push
pop
or
inc
mov
out
mov
aaa
mov
cs
pop
inc
pop
push
and
hlt
insl
mov
adc
aam
xchg
lret
les
loopne
jne
mov
mov
mov
jo
cmp
test
jno
cmp
pop
jnp
fcmovb
inc
or
mov
lret
or
adc
sbb
jl
mov
cs
lret
and
pushf
popa
lea
out
xchg
int
bnd
sub
xorl
pop
dec
push
or
or
push
mov
in
incl
mov
and
adcb
cwtl
jae
js
mov
jp
cmovns
dec
fstpl
or
cmp
dec
imul
jb
and
cld
lcall
data16
mov
or
push
xchg
les
repnz
jne
jno
aam
or
xchg
xchg
test
jo
adc
sub
idivb
enter
inc
sub
test
xchg
push
adc
and
xor
rclb
popa
cmp
inc
inc
imul
inc
sbb
lock
inc
push
mov
xchg
sbb
push
xchg
pop
icebp
and
popa
add
lret
ds
fcomps
push
bound
jnp
scas
xor
addb
xchg
sarl
push
mov
mov
adc
iret
test
sahf
lcall
mov
push
mov
cmp
popa
mov
loope
and
jmp
decb
sbb
inc
xor
push
sbb
stos
shlb
mov
xlat
andl
popf
sarb
cld
hlt
adc
and
cwtl
es
mov
lret
jae
xchg
sbb
push
fimuls
test
scas
test
enter
popa
lods
scas
jne
pop
xchg
jecxz
sbb
pop
in
pop
xchg
fwait
jecxz
cwtl
jmp
sbb
push
enter
test
jne
jle
push
xchg
pop
xchg
pop
push
decl
sbb
cmp
push
jecxz
push
stos
pop
jno
sub
sub
push
lods
inc
mov
pop
sti
popa
mov
add
push
inc
jnp
cmp
cs
lods
je
adc
inc
mov
dec
sub
adc
inc
mulb
pop
sub
push
inc
jecxz
fidivs
in
es
scas
iret
and
aad
and
mov
aam
aam
adc
or
push
adc
mov
shlb
pop
mov
fnclex
arpl
int3
mov
add
lds
sub
stos
hlt
aas
ja
and
test
mov
adc
push
idivl
cmpsl
movsb
hlt
mov
dec
xor
sub
ljmp
int3
loopne
pop
push
or
ja
test
fs
outsb
sub
insb
pop
arpl
mov
lea
das
fsubl
lea
enter
adc
repz
scas
jb
inc
push
pop
mov
lods
sub
call
das
and
cmp
mov
cltd
dec
cld
ja
sub
mov
loope
sbb
mov
pop
lock
das
sbb
es
xor
es
push
xchg
int
jl
jmp
push
fsubrp
lods
ss
or
add
jae
test
sub
push
movsb
sahf
ss
mov
add
ret
push
adc
pop
mov
dec
xchg
test
jle
mov
shr
mov
xor
sub
add
jne
cmp
pop
es
aad
daa
fldcw
sbb
push
jp
repnz
sarb
nop
or
inc
call
ret
push
ret
cwtl
cld
fwait
je
pop
testl
cmp
rorl
or
dec
xor
pop
mov
xor
sbb
jp
out
add
outsl
dec
out
xchg
enter
sbb
inc
adcb
insl
or
pop
popa
cltd
lret
xchg
fwait
fs
dec
in
pop
test
push
fbld
push
pop
nop
or
and
mov
sbb
push
or
and
jnp
fmull
imul
aam
dec
int3
push
test
mov
stc
jb
inc
pop
leave
daa
mov
push
adc
ds
sub
mov
cmp
popa
mov
adc
clc
iret
cmp
add
mov
leave
xchg
xor
lea
stc
je
pushf
aad
out
aas
sub
fs
or
lock
mov
mov
xor
test
mov
jbe
rcll
outsl
or
sbb
add
pop
and
ljmp
mov
loope
rolb
cli
pop
pop
ljmp
dec
and
add
dec
movsb
jb
push
aas
loopne
add
pop
daa
int3
mov
mov
mov
pop
adc
sti
mov
dec
stos
jp
pop
je
bound
xchg
subl
push
sbb
or
pop
xor
lcall
pop
dec
mov
repnz
test
pusha
xchg
cmc
cmp
pop
sbb
pop
jo
pop
mov
out
enter
push
fildll
test
mov
add
loope
jecxz
pop
iret
pusha
inc
dec
jb
xchg
inc
lcall
lock
sar
add
mov
sbb
bound
mov
dec
dec
fwait
dec
xchg
sub
jb
and
movb
cvtpd2pi
sbb
inc
mov
pusha
fnstcw
lock
loop
push
or
adc
push
sbb
ffreep
shr
shl
cmp
xor
test
add
adc
cld
int3
rcl
mov
mov
icebp
sub
shl
in
bound
in
mov
ljmp
stos
and
inc
sbb
dec
dec
inc
xchg
js
jnp
mov
leave
lods
data16
mov
pop
aas
mov
and
push
push
outsl
dec
mov
xchg
push
outsb
sbb
push
testb
sbbl
insl
repnz
and
dec
popf
fildl
out
pop
push
sti
pusha
cmp
lods
sbb
adc
imul
fdivrl
popa
imul
mov
mov
stos
hlt
inc
hlt
xorl
lcall
pushf
dec
sbbb
lods
js
or
sahf
hlt
test
sti
or
jo
das
lret
pushf
dec
hlt
sti
inc
inc
sbb
mov
ljmp
cmovbe
dec
adc
insl
out
aad
push
loop
inc
cwtl
mov
inc
dec
lea
ss
stos
sbb
push
out
cmp
push
loop
mov
inc
dec
inc
add
xchg
ja
pop
jle
aaa
push
add
and
push
sub
mov
mov
inc
cmp
iret
aad
adc
xor
cmc
push
pop
in
sti
data16
leave
lods
mov
mov
and
stos
mov
test
ret
enter
pop
int
cmp
sahf
mov
sar
cmpsl
aad
in
clc
sub
arpl
adc
push
cmp
jle
jle
jnp
pop
shlb
inc
add
mov
push
mov
enter
sahf
dec
xor
cld
sub
cmp
aad
xchg
out
push
add
and
enter
stos
mov
push
loopne
int3
mov
mov
cmp
out
js
outsl
cmp
xchg
mov
add
push
mov
add
das
push
mov
mov
mov
loope
lds
xorl
adc
cmp
inc
lcall
inc
or
shlb
push
pop
cmc
and
xchg
jmp
mov
lods
dec
or
fs
fstpt
xchg
and
out
sub
mov
outsb
lret
cmp
mov
js
aad
xchg
lea
pop
mov
pushf
lret
pop
add
popf
pop
daa
jmp
imul
cmp
push
or
cwtl
dec
cmp
fisubrs
scas
stc
dec
cmp
jmp
push
mov
mov
xor
xchg
sub
scas
xchg
or
jecxz
out
add
loope
dec
sahf
cltd
jmp
out
mov
xchg
mov
fistps
add
inc
xor
inc
gs
cmpsb
test
rorb
sub
xchg
sub
pop
xchg
in
adc
push
adc
jb
adc
add
mov
jle
gs
cmp
insl
lahf
adc
jo
jle
jb
inc
into
sbb
jbe
sub
xorb
repz
adc
add
jbe
mov
int
les
test
and
bound
push
mov
dec
inc
sbb
movsl
jnp
test
and
xchg
adc
into
les
pop
inc
insl
adc
pop
xchg
js
xor
jmp
jl
jmp
or
stc
jecxz
hlt
repz
mov
xchg
xchg
pop
xor
xchg
pop
lret
cltd
cmp
ret
mov
mov
xchg
mov
cs
insl
out
ja
aas
ror
lods
add
add
jle
or
mov
jae
mov
in
mov
stos
enter
adc
xchg
fwait
jp
push
sahf
mov
and
lods
add
inc
cmp
imul
int3
push
dec
sub
mov
iret
or
cmpsb
cmp
xor
cmp
out
dec
xor
jecxz
add
call
or
add
subl
lret
jno
nop
pop
sti
cs
scas
xor
clc
sbb
xor
sub
shl
aas
jae
and
push
xor
icebp
sbb
dec
mov
inc
arpl
add
and
add
sub
aas
cmp
clc
aam
outsb
out
out
addr16
imulb
iret
aad
ret
jo
loope
fidivrs
sbb
scas
arpl
mov
fst
int3
adc
sub
ss
fimuls
out
imul
mov
cltd
insb
xor
or
jne
cmpsb
cltd
repnz
xor
aaa
push
jns
fstp
out
in
or
dec
cmp
dec
or
andb
sub
dec
imul
rcll
std
mov
or
popa
sahf
clc
pop
popl
xor
sbb
mov
mov
cwtl
and
cmp
push
inc
push
popa
cmp
stos
sub
push
fcompl
bound
cltd
movq
idiv
or
aas
mov
xchg
lea
int3
je
or
xchg
outsl
or
pop
fnstcw
setnp
fsts
fucomp
imul
push
ljmp
jge
lds
or
xlat
jno
leave
aam
or
movsb
lret
fmull
call
mov
xchg
cmp
or
test
insb
shll
push
dec
pusha
mov
jno
leave
mov
xchg
hlt
aaa
pop
insl
into
jecxz
test
adc
movsl
mov
test
mov
scas
adc
stc
int
mov
nop
cmp
pusha
and
mov
cwtl
test
lea
add
lcall
imul
adc
dec
pusha
sti
lock
jbe
mov
adc
aaa
imul
pop
xchg
xor
mov
pusha
jno
movsb
clc
sbb
cmp
pop
jns
fsubl
stos
mov
rcrb
dec
or
test
jnp
jmp
ljmp
fimull
rol
and
int
loope
xor
nop
lret
aaa
mov
stc
cmp
pop
sub
movsl
ds
lea
xor
mov
sbb
cli
xor
jo
adc
movsb
xor
mov
dec
sbb
xor
sbb
xor
push
icebp
mov
xchg
pop
sti
fwait
loop
sub
iret
popa
xchg
lea
pop
js
fs
cltd
shrl
ds
adc
rorb
dec
mov
sub
cmp
pop
sahf
sub
adc
shlb
in
rcl
jns
xor
jne
shll
xor
lret
push
cmpsl
jb
pop
pop
fwait
test
cmp
out
aad
int
sub
test
cmc
rol
test
mov
mov
icebp
mov
jg
cli
pop
enter
into
inc
in
xchg
xor
inc
in
push
add
mov
cld
enter
loope
std
imul
ss
jmp
cmp
popf
or
enter
imul
fists
jl
mov
mov
inc
jle
popf
jg
orb
in
push
aad
push
dec
xchg
lcall
xor
and
push
mov
add
inc
jl
subl
insl
leave
loope
mov
arpl
outsb
into
xchg
out
dec
enter
ret
or
icebp
sub
mov
fcomi
push
call
cld
and
jmp
jp
movsl
and
push
mov
inc
add
or
add
cmp
je
ja
cwtl
jnp
in
adc
pop
lret
or
cmp
mov
sub
fildl
inc
lcall
mov
in
cmpsb
xchg
popf
pop
adc
inc
push
mov
shll
lds
test
movsl
scas
jge
inc
into
sub
repnz
lods
cmp
sbb
fisubrl
push
pop
cwtl
and
mov
jne
cld
or
aaa
pop
and
and
ljmp
pusha
lods
das
mov
in
or
aas
push
roll
cmpsl
pop
push
pop
es
cmp
dec
pop
std
icebp
adc
xchg
pop
lahf
xchg
dec
enter
loope
xchg
pop
adc
outsl
xchg
daa
mov
jcxz
icebp
sbb
sbb
pop
ficoml
inc
mov
cld
into
stos
xor
jne
jge
sub
movl
push
negl
pop
cli
mov
push
repz
scas
dec
adc
ljmp
sbb
mov
jp
in
sahf
lret
mov
scas
cmp
adc
push
hlt
xchg
push
push
testb
pop
xchg
mov
xchg
test
inc
mov
lret
cltd
pop
pop
lcall
xor
test
inc
cmp
jne
jne
aad
add
arpl
push
outsb
mov
xchg
subl
mov
cld
test
xlat
loopne
test
mov
adc
push
ficoms
sbb
adc
add
mov
lods
lea
add
xor
and
adc
imul
xor
adc
or
mov
cltd
sub
xchg
pop
repz
mov
adc
mov
out
test
mov
cmpsb
sub
dec
movsl
call
mov
gs
or
mov
cs
cmp
cmpsl
cmp
mov
xlat
lds
in
xlat
or
imul
in
xor
movsl
jecxz
das
std
into
test
dec
cmpb
and
sbb
sub
mov
movsb
cs
rolb
pushl
mov
xchg
push
xchg
pusha
jne
cmp
pop
mov
sahf
icebp
scas
xor
add
xor
sti
lret
loop
ret
adcb
imul
sbb
imul
pop
add
hlt
imul
enter
aaa
in
scas
or
stc
adc
or
mov
or
dec
cwtl
jnp
pop
arpl
ror
pop
push
push
das
mov
add
jo
xchg
xor
imul
mov
add
movb
push
negb
fisttps
jge
mov
adc
enter
mov
clc
and
lods
jns
add
rcrb
aas
pop
mov
divl
in
fwait
push
mov
js
movsl
loope
xor
push
add
call
xor
mov
das
inc
repz
stos
push
push
test
sbb
inc
jno
push
xor
fdivrs
cltd
sub
push
xchg
gs
xorl
pop
adc
jmp
je
sar
iret
pop
pop
xchg
ds
xorl
fdivs
add
mov
rorb
and
xor
sbb
insb
nop
das
pop
sbb
ret
xchg
fadds
inc
aaa
mov
pop
jp
xchg
arpl
dec
fmuls
mov
std
outsl
mov
push
mov
sbb
test
testb
lcall
add
push
push
xchg
push
dec
std
out
jle
lods
adc
and
xchg
jno
std
mov
pop
rcll
jge
imul
out
icebp
es
and
jge
cmpsl
mov
push
add
lods
repnz
cli
and
sbb
xchg
out
jl
ss
jg
data16
std
lds
mov
dec
sbb
aas
lock
pop
xchg
aam
pop
sarb
cmp
push
mov
icebp
jbe
leave
pusha
mov
mov
pop
std
sbb
sub
or
jae
pop
aaa
cwtl
push
stc
mov
test
mov
xchg
dec
cmp
or
xchg
mov
dec
adc
pop
or
xchg
repz
mov
das
imul
cmpsb
sub
das
test
and
xchg
adc
mov
sbb
mov
test
push
add
cmp
in
mov
xor
xchg
add
xor
sbbl
shl
dec
out
sub
sbb
rclb
stc
lea
and
cmc
imul
cmp
xor
or
bound
pop
and
roll
mov
aam
xor
and
push
add
jp
shrl
mov
or
ret
leave
loopne
js
xlat
inc
into
call
mov
ret
shrb
add
pop
adc
mov
adc
or
scas
movsl
sub
and
in
adc
inc
or
cld
loop
xor
fwait
dec
je
addr16
fistps
ljmp
add
cltd
lods
test
push
jo
fisubrs
add
inc
push
arpl
or
lods
mov
cld
push
push
cld
shrl
or
lret
insl
pusha
ret
xor
add
mov
mov
or
outsb
cmp
xchg
mov
flds
adcb
bound
in
std
jo
push
pop
mov
lcall
call
loopne
jmp
into
fwait
add
adc
mov
jno
and
sbb
shlb
jo
or
stos
xchg
sub
pop
jg
test
inc
xchg
add
mov
or
inc
bound
jnp
push
jae
push
enter
mov
cmp
movsb
ret
fsubr
in
mov
es
mov
test
mov
popa
lcall
mov
push
popf
bnd
jne
rdpmc
fidivl
push
mov
jecxz
aaa
sub
fs
fistpll
es
sub
and
push
enter
mov
pop
jbe
test
and
mov
rep
scas
cmp
mov
lahf
xor
popf
dec
or
or
mov
dec
jb
js
stc
repnz
nop
dec
lea
and
xchg
mov
adc
mov
sbb
mov
jbe
xlat
push
imul
sbb
sbb
add
sub
jo
pop
filds
loop
aad
push
mov
arpl
sub
sub
pop
insb
ljmp
rol
dec
loopne
sub
sbb
adcl
push
and
sub
repz
push
xor
in
mov
jne
xchg
sbb
into
jmp
popf
in
mov
jmp
out
xchg
push
jo
lods
shll
or
sbb
aam
lea
fwait
sub
mov
mov
push
jmp
aad
inc
mov
sbb
cs
cli
push
xorl
dec
sbb
stc
pushf
loop
or
xor
jae
int
insl
inc
pushf
test
les
jb
or
in
and
mov
es
data16
pusha
pop
fsubs
daa
cs
divb
sbb
add
mov
aas
dec
add
cmpsl
pop
dec
dec
mov
out
scas
add
mov
xabort
jo
jge
cs
test
and
icebp
jecxz
lahf
imul
xlat
mov
mov
add
dec
jg
jo
xor
add
in
xchg
xor
bnd
jns
mov
push
sarb
pusha
xor
loop
jp
mov
aas
sti
xor
cmc
cmp
add
mov
xchg
xor
mov
adc
rorl
cmp
mov
adc
aaa
mov
jmpw
loop
jno
mov
rorb
movsb
push
fs
or
pop
cmp
mov
aaa
adc
inc
xchg
inc
dec
xor
outsb
mov
inc
sub
sti
das
adc
subl
dec
out
ljmp
scas
notl
repz
pushl
pusha
cmp
jg
push
nop
lock
xor
movd
xor
imul
jecxz
test
les
rcl
jne
or
xlat
sub
xchg
clc
cwtl
enter
fidivl
aas
shl
dec
mov
sub
mov
pop
push
sbb
mov
jecxz
lds
jnp
push
cmc
ljmp
out
inc
cmp
lods
cmpsl
outsb
ljmp
xchg
xor
push
popa
push
mov
jl
add
push
js
clc
stc
cltd
mov
outsl
pushf
mov
incl
inc
mov
rol
sbb
mov
test
mov
cmp
les
or
jecxz
mov
jbe
pop
ret
out
sub
pop
ja
jae
gs
lods
push
arpl
lcall
fnsave
and
in
inc
lock
aad
inc
adc
leave
fwait
cmp
push
pushf
jae
xchg
push
mov
xchg
and
cmp
test
dec
js
xchg
xor
cli
pop
mov
xor
mov
and
mov
sub
fldl
push
loopne
pop
setl
nop
pop
fmull
mov
pop
arpl
xor
mov
inc
pop
dec
outsl
sub
shlb
xchg
cli
mov
cwtl
out
mov
xchg
pop
jae
jno
mov
cmp
mov
shrb
adc
push
loop
pop
jge
xchg
mov
xchg
adc
rol
jb
mull
and
lcall
pop
cmp
cwtl
out
shlb
int3
mov
xchg
dec
hlt
pop
xchg
sub
mov
cmp
dec
lahf
pop
roll
inc
insl
or
movsb
jmp
push
dec
movsl
hlt
in
cmpsl
mov
fwait
inc
lcall
sbb
adc
andb
mov
mov
jl
xchg
pusha
fimull
shll
lods
mov
jl
fs
mov
int
xchg
dec
inc
mov
std
mov
orb
int3
nop
sub
outsb
ret
js
jl
pop
mov
push
scas
mov
test
lods
icebp
je
and
cmpl
lcall
int
push
mov
mov
gs
add
fists
mov
insl
mov
push
pushf
test
repz
fs
cld
inc
jle
pop
xor
xchg
push
xchg
add
hlt
mov
jl
cltd
test
and
mov
xchg
jno
push
and
fldcw
mov
jbe
fdivrs
int3
xchg
mov
pop
fs
and
add
inc
cmp
dec
pop
je
dec
dec
sbb
lods
xchg
loope
pop
adc
sahf
shl
jb
lea
adc
sbb
dec
xchg
push
cltd
cmp
or
test
lret
xor
stc
or
dec
push
cwtl
jbe
clc
xchg
aam
mov
jb
jge
add
roll
xchg
mov
lock
std
mov
push
or
fs
pushf
ficompl
pop
je
aaa
adc
insb
pop
add
xor
testl
stc
pop
ficoml
repz
jge
int3
fs
scas
call
xor
fcomps
adc
sti
mov
jne
pop
dec
sub
out
sub
sahf
push
ja
scas
mov
bnd
adc
sub
mov
out
fmull
or
mov
repnz
mov
shll
inc
jbe
hlt
mov
cmp
jno
jne
add
shr
mov
adc
inc
repnz
lods
mov
pop
push
add
jle
adc
nop
in
xor
imul
popa
hlt
loop
push
ds
les
push
sub
pop
incl
dec
adc
insl
js
mov
je
xchg
sbb
or
mov
jbe
ljmp
inc
in
pop
sahf
and
mov
push
adc
daa
push
shl
loop
pop
pop
test
add
inc
xor
mov
leave
mov
inc
lock
gs
or
jb
adc
mov
scas
fidivrl
out
repz
test
pop
cmp
mov
and
push
bound
push
fistpl
iret
leave
sahf
lret
sub
jne
and
and
cmp
fcompl
insb
mov
push
mov
jno
aaa
xor
xchg
repnz
push
es
aas
dec
jbe
lods
jne
jp
inc
xlat
in
push
adc
inc
outsb
pop
je
and
stos
sbbb
cmp
stos
popa
jb
mov
mov
lret
lret
xorb
sbb
bound
or
cmp
pop
inc
jmp
out
test
popf
sbb
adc
sbb
adc
mov
mov
push
repnz
popf
cmpsl
test
lods
hlt
mov
das
xchg
sbb
shll
aas
out
pop
ss
insl
insl
lcall
push
lods
sub
mov
mov
mov
loop
es
aad
movsb
ljmp
icebp
sbb
test
lcall
fdivr
js
add
call
inc
xor
mov
popa
mov
test
mov
mulb
jbe
das
subb
jnp
xchg
mov
adc
add
shlb
xor
andb
or
mov
mov
sub
into
jae
out
mov
imul
or
inc
scas
and
adcb
jl
jbe
test
jle
sbb
out
int
test
xchg
sbb
mov
test
sbb
xor
push
rclb
cmp
mov
sub
inc
pop
mov
push
cmp
test
ljmp
cmp
pop
pop
add
int3
stos
add
jae
mov
cli
pop
outsl
xlat
loop
sub
push
xor
mov
cmp
inc
cmp
ja
add
sub
jno
or
mov
push
dec
mov
inc
nop
xor
aam
or
lods
xchg
mov
ds
loopne
sbb
add
or
cwtl
push
test
inc
addr16
test
iret
ss
addr16
fmul
aas
pushf
fwait
addr16
push
cmp
in
inc
loop
ret
jnp
and
or
mull
jmp
dec
cmp
dec
imul
lahf
repnz
fcomp
or
pusha
ds
mov
cmp
loop
lods
test
in
and
fstpl
xchg
in
rcl
fistpl
dec
repz
push
dec
repz
sarl
in
jne
sbb
jae
pop
stos
push
mov
xchg
or
mov
mov
pop
jne
jb
addr16
mov
lods
hlt
je
fistpl
pusha
fstps
cli
je
rcrb
xor
notl
dec
jecxz
in
pop
jmp
dec
addb
pop
es
mov
iret
inc
xor
dec
mov
push
mov
mov
daa
cmpsb
inc
lahf
leave
sbb
jmp
outsb
leave
popf
cli
cs
and
aaa
sbb
stos
dec
adc
sarl
cwtl
dec
in
pop
sub
fdivrl
pop
mov
out
stc
in
push
and
xchg
sub
fnstsw
std
inc
bound
jns
mov
or
mov
xchg
adcb
aaa
adc
jle
adc
xor
mov
push
int
aad
adc
sub
cmpb
clc
mov
add
dec
push
mov
mov
pusha
push
in
push
mov
and
enter
ljmp
loopne
cmp
or
push
movsb
fadds
int3
mov
mov
popf
mov
rcrl
inc
mov
in
mov
sbb
jmp
sbb
jbe
dec
inc
cmpb
dec
std
pop
xchg
xchg
mov
jns
sarl
xchg
xchg
outsl
push
adc
push
scas
push
mov
sub
shlb
sti
xchg
jno
sub
rcll
rorb
les
pushf
js
das
mov
add
outsb
jecxz
sub
inc
nop
inc
out
rcrb
hlt
inc
push
ds
fcompl
mov
jg
jnp
outsl
add
loopne
and
jmp
mov
jl
out
push
xor
fsubrs
mov
add
nop
mov
dec
jne
add
mov
sbb
ret
add
loop
mov
xchg
aam
cli
arpl
sbb
sbb
xchg
lea
jb
xchg
jl
hlt
inc
push
push
scas
and
pop
mov
jae
push
adc
ret
movb
dec
and
aam
lretw
pop
and
cld
repz
aaa
shll
cmp
pop
js
mov
fimuls
cmp
mov
jp
inc
adc
jb
pop
repnz
dec
fnsave
ja
movsl
fdivl
stc
mov
divb
xchg
in
fs
jmp
iret
cli
lods
cld
add
iret
cmp
dec
and
loope
xchg
es
cmp
push
lret
andb
mov
jae
inc
and
jp
js
imul
loopne
aam
ret
shll
out
adc
add
movsl
dec
cmp
aaa
in
je
add
xor
mov
ret
sbb
aam
xchg
movsl
and
test
xchg
jno
push
or
sub
sbb
push
push
adc
out
mov
sti
and
add
xchg
sti
in
repz
daa
in
rolb
jp
adcl
insb
rcll
lret
movsl
pop
dec
imul
cmp
incl
mov
cld
push
xchg
xchg
xchg
pop
push
mov
xchg
push
mov
jo
fistpl
call
fisubl
movsb
loope
test
es
push
and
adc
mov
and
push
das
sbb
data16
sbb
sub
dec
mov
dec
arpl
pushf
fisttpl
lret
jg
add
aam
out
testb
push
in
aad
jl
stc
sbb
shlb
mov
rorl
in
popf
sahf
dec
clc
inc
lcall
arpl
popf
inc
das
outsb
or
or
jle
mov
mov
add
jmp
addl
int3
loopw
dec
call
test
lret
push
xchg
movsb
movsl
loope
lret
xor
in
sub
jo
mov
clc
cmpb
aam
and
jo
pushf
popa
enter
adc
add
in
mov
push
arpl
dec
mov
jae
and
movsl
dec
mov
repz
xchg
pusha
jb
mov
jae
stos
sub
and
adc
or
adc
mov
inc
inc
push
mov
mulb
lds
dec
sahf
add
mov
popf
dec
std
cld
add
and
mov
or
sar
jp
push
pop
or
pop
cmc
ja
xchg
mov
in
in
in
lods
add
pop
mov
jge
cmp
fistpll
ss
ret
lahf
sub
xchg
mov
ja
dec
pop
sbb
lret
mov
popf
jg
push
aad
out
mov
mov
outsl
aaa
hlt
cmpsb
xor
or
gs
subb
jmp
popf
sti
pop
ljmp
lahf
in
lcall
pop
xor
dec
call
mov
cmc
cmpsl
cmp
add
cli
ret
adc
mov
mov
xor
dec
mov
les
adc
shlb
xor
fldl
add
fwait
pop
stos
add
cmp
dec
and
mov
xchg
push
in
jmp
sub
adc
jae
mov
test
mov
cmpsl
ret
shr
dec
not
or
pop
xchg
cmp
sbb
hlt
imul
cli
and
push
push
dec
or
loopne
dec
and
sub
inc
and
xchg
dec
mov
cmp
jl
hlt
out
ret
mov
mov
mov
pop
sbb
sbb
rsm
mov
add
and
cmp
or
pop
push
lahf
cmp
shll
cld
cli
movsl
xchg
inc
lret
ret
popa
jae
outsb
xor
sub
outsl
pop
roll
daa
mov
cmp
cmp
addr16
mov
clc
fdivr
fisttps
in
jb
jmp
daa
inc
shrb
int3
cmp
mov
ds
mov
or
fsubs
sub
cmp
jbe
les
shrb
gs
fnsave
imul
inc
cmp
outsl
insl
xchg
adc
jns
ret
xchg
pushf
adc
pop
mov
sub
inc
faddl
cwtl
sub
ret
insb
mov
fsubl
sub
repnz
rcrb
loopne
jmp
and
dec
std
inc
mov
divb
movl
lods
data16
arpl
push
stc
jp
mov
push
or
nop
test
outsl
cmp
incl
js
inc
jo
lods
stos
pop
clc
out
clc
loopne
lea
out
mov
jmp
push
cmp
loop
mov
mov
rclb
mov
fbld
and
fsubrl
enter
int3
insb
out
and
pusha
lret
mov
out
mov
pop
and
cmpl
add
aad
inc
pushl
jl
loop
clc
subl
jmp
mov
cmp
dec
andl
xchg
sbb
or
and
in
ja
les
xchg
cmp
mov
push
cmp
add
icebp
inc
pop
pop
out
movsb
aaa
int
mov
cmpsb
sarb
int3
repnz
imul
jne
cmp
mov
adc
fwait
popa
mov
pop
scas
insb
jae
sub
arpl
nop
and
shll
or
xor
ds
push
shl
sbb
aas
push
dec
ds
sahf
xchg
inc
lock
dec
mov
pop
and
test
xchg
test
aam
lcall
aad
insb
inc
cmp
inc
mov
sub
daa
jbe
inc
xor
push
icebp
fdivrl
fs
pop
ja
mov
xor
je
adc
ficoml
mov
call
movsl
inc
cltd
jns
pop
je
fsubrs
fdivrs
xchg
popf
rorl
pop
jnp
inc
out
cs
adc
jnp
jecxz
xor
out
inc
sarb
cmp
jno
in
inc
pop
add
pop
test
leave
jmp
sub
push
cwtl
dec
push
out
adc
add
jbe
cmpsl
icebp
mov
fsub
jmp
mov
inc
aam
inc
outsl
imul
jae
push
sbb
push
or
adc
dec
or
jmp
xlat
dec
add
push
imul
mov
pop
and
jne
aam
bound
scas
cmpsl
gs
loop
pusha
das
aas
repnz
arpl
test
scas
jnp
leave
sub
mov
je
frstor
stc
sbb
add
push
pop
arpl
outsb
shll
pop
pop
inc
rolb
lods
xchg
pop
imul
cwtl
xor
pusha
sub
int3
in
outsl
pusha
ljmp
push
incl
pop
jno
in
in
sub
push
push
out
mov
push
bound
out
jecxz
mov
movsb
mov
sub
push
stos
aam
cmp
inc
loope
mov
adc
in
and
inc
xor
aaa
or
std
data16
pop
adc
in
test
jp
enter
xor
leave
cli
mov
gs
lea
cmc
push
test
mov
shrb
pop
push
jge
test
mov
and
dec
sub
dec
adc
sbb
inc
les
adc
int3
push
push
sub
mov
fiaddl
or
ds
jbe
mov
cwtl
jns
fidivl
in
and
in
inc
mov
fwait
icebp
movsl
pop
dec
jo
lcall
push
cltd
aad
stos
mov
jle
imul
pop
sarb
lret
add
or
sbb
scas
fists
ljmp
push
dec
sbb
push
cmp
mov
xchg
mov
or
rcll
lods
stc
pop
xor
mov
jae
add
xchg
jno
in
lcall
stc
adc
mov
push
jno
gs
dec
std
ret
inc
out
or
jp
cmpl
scas
xchg
adc
pop
adc
iret
or
repnz
and
dec
fmull
js
and
lcall
jp
inc
ret
scas
xchg
jne
xchg
xchg
popa
andl
sbb
jl
in
adc
lret
loope
push
xchg
movsb
loope
mov
fistl
lods
push
out
lret
andb
inc
jae
lods
ret
pop
or
imul
mov
and
push
ret
cmpsl
inc
lcall
daa
xor
stos
pop
aad
call
push
decl
cmp
pop
cmp
mov
notb
pop
icebp
cmp
push
popa
sub
lods
inc
mov
loopne
fnstcw
fistl
loope
sub
pop
scas
sub
arpl
push
sub
repz
jge
sub
or
sub
or
or
cli
mov
fdivrl
out
testb
fstl
xor
loopne
out
js
in
fcoml
jo
inc
cmpsb
sar
pusha
mov
inc
outsl
push
lds
cmp
daa
test
jo
pop
dec
decb
clc
push
outsl
rorb
or
fsubp
scas
jne
pop
ljmp
fnstsw
mov
cmpsb
gs
pop
stos
dec
roll
ds
xchg
or
mov
scas
je
nop
out
ret
loopne
dec
imulb
mov
pop
or
mov
fwait
xchg
sbb
and
test
push
js
stc
out
dec
add
and
movsb
cli
jle
cmpsl
fimuls
bound
imul
out
jecxz
push
subl
into
mov
add
dec
xchg
shl
dec
jbe
or
and
arpl
gs
add
and
es
loope
ror
pop
testl
ficoml
rorb
jg
sbb
inc
faddl
and
pop
movsl
idiv
roll
dec
and
jge
push
js
shll
jecxz
popl
xchg
xlat
sub
mov
pop
lods
adc
mov
rorl
mov
xchg
scas
pop
ss
scas
lods
cmpsl
rorb
jle
or
dec
call
lea
adc
loopne
inc
adc
push
ret
mov
lret
mov
add
and
cmc
mov
inc
incb
adc
cmpsb
stos
cmp
stc
imul
mov
sbb
mov
xchg
dec
xor
sti
or
push
fcmovu
sbb
and
int3
mov
inc
lahf
mov
orl
push
push
out
mov
test
sub
sub
sbb
push
adc
loope
icebp
les
push
sbb
push
cmc
mov
cld
xor
cmp
ja
cmp
or
movsb
dec
jp
loop
cmp
sub
inc
jns
inc
or
pop
push
jmp
in
icebp
stos
inc
sub
test
sbb
push
ror
bnd
mov
popa
fucom
fnsave
add
icebp
mov
jge
and
push
icebp
push
adc
mov
push
cmc
rcrl
jl
cli
ss
jnp
fidivrs
dec
ret
ljmp
outsb
xor
loopne
dec
bound
inc
rorb
or
pusha
xor
into
jmp
repz
sbb
mov
leave
mov
mov
xor
pop
popa
inc
out
iret
adc
cli
mov
imul
pushf
sbb
cmp
movsb
lcall
xchg
pop
rorl
leave
aam
lock
pop
add
pop
xor
mov
push
pop
aad
cmp
mov
jb
repz
sub
xor
adc
mov
adc
lret
pop
fs
or
fiaddl
push
sub
aas
bound
stos
inc
rol
push
cwtl
push
orb
mov
dec
dec
adc
sub
subl
and
popa
js
lcall
mov
nop
or
xor
movsb
fwait
outsb
pop
dec
inc
div
add
in
pop
jmp
icebp
dec
nop
adc
sub
jns
pop
xchg
out
mov
cltd
add
push
movsl
inc
mov
mov
and
adc
push
cmp
fwait
pop
sub
shll
aaa
pop
mov
test
inc
or
jns
hlt
or
xchg
pop
popf
adc
movsl
jp
sti
ret
lcall
insb
cmp
movsb
nop
jge
push
mov
aas
jp
in
icebp
sub
dec
xchg
int
xor
das
cmpsl
test
sti
or
xor
mov
pushf
cmp
pop
jbe
xchg
fcomp
mov
jno
fdivrl
add
loop
cmpsl
arpl
icebp
dec
gs
add
mov
mov
scas
aam
dec
xchg
inc
loope
das
stos
pop
movsb
jbe
fisubrs
dec
lret
mov
jle,pt
movsb
stos
xor
sub
inc
push
mov
or
push
mov
xchg
adc
xor
ret
or
cwtl
nop
xchg
test
pop
nop
imul
jg
orl
cmp
adc
sbb
mov
scas
fbld
inc
dec
mov
scas
sti
popf
dec
lahf
ljmp
out
mov
add
ljmp
jg
rolb
in
pop
test
hlt
dec
ljmp
test
rsqrtps
xor
cmp
pop
push
rcll
add
pop
sbbb
pop
and
sahf
mov
test
and
or
pop
pop
mov
stos
cli
xor
or
movsb
and
inc
jne
loop
rclb
mov
fdivs
mov
lcallw
push
mov
mov
scas
cmpsl
clc
pop
push
fldl
xchg
sub
inc
sub
gs
fsubrs
inc
cmp
ja
ret
jb
movsb
scas
mov
imul
xor
mov
mov
add
add
xor
inc
test
shll
sahf
fsubrl
sbb
sbb
pop
inc
inc
push
dec
jo
ds
sub
cmp
push
imul
fldenv
adc
mov
xchg
std
ss
andl
into
adc
inc
in
pop
sub
xchg
push
mov
pop
sbb
lret
lret
inc
xor
fidivs
xchg
rcl
dec
lret
pushf
cmp
mov
sbb
enter
jg
xchg
xchg
daa
add
scas
sub
jnp
aas
jae
dec
add
mov
mov
sarb
cmp
sub
jbe
mov
into
inc
mov
insb
mov
cmp
or
scas
or
test
or
mov
mov
mov
repz
nop
and
lds
sbb
popf
andb
jne
gs
lods
push
loope
xorl
and
das
push
xor
pop
pop
inc
je
cmpsl
push
pop
adc
shrl
and
adc
cmp
fldenv
pop
lahf
iret
jl
xchg
xor
arpl
push
out
icebp
mov
rolb
mov
or
mov
push
test
mov
mov
and
inc
std
lret
testb
fstl
pop
js
xor
xchg
mov
roll
aad
sahf
popf
cmpsb
mov
xorb
insb
out
aas
in
arpl
mov
loopne
mov
insb
pop
loope
shr
cmp
decb
lret
outsb
or
imul
sub
hlt
ja
pop
hlt
in
dec
mov
scas
ret
lret
mov
lods
insb
iret
test
mov
enter
add
pop
iret
push
xchg
fmul
aaa
or
jp
jns
data16
jo
push
out
mov
adc
pop
xor
lods
aaa
fs
fs
mov
mov
adc
fsubs
xchg
and
jne
push
popa
pusha
mov
lret
cwtl
xchg
mov
adc
cmpsl
pop
mov
jecxz
pushf
mov
leave
repz
push
xor
adc
shrb
sbb
cmp
xchg
mov
shll
inc
xchg
mov
and
movsb
lods
or
mov
mov
pop
scas
push
and
sahf
sub
mov
add
loop
imul
mov
mov
repnz
out
dec
test
cli
test
sbb
xchg
fcom
xor
pop
shl
push
mov
xor
daa
adc
int3
add
add
sub
pop
shlb
int
jo
bound
sbb
clc
inc
decb
arpl
and
jns
jo
mov
xor
jns
cmp
adc
enter
xor
or
inc
and
inc
add
test
cmp
add
xchg
cmp
jp
or
xchg
lods
mov
sub
jle
jb
or
pop
pop
sub
xchg
jns
add
add
push
jl
scas
lret
pop
jp
mov
clc
cmp
add
sbb
pop
jl
ffreep
movsb
or
adc
cmpsb
icebp
add
mov
imul
fsts
outsb
in
cmp
pop
iret
xor
cmp
inc
es
rcrb
movsb
jge
daa
in
lods
rorb
push
arpl
aas
fcmovnb
inc
ret
mov
add
mov
jb
lock
lods
cwtl
cmpps
in
cmpsl
loope
xor
ja
dec
xor
dec
sbb
shll
inc
add
xchg
fdivrl
movsb
pop
pop
pop
clc
push
sti
cld
fsubrl
clc
xchg
lods
rcll
mov
je
fxch
mov
pusha
lods
fidivl
je
test
adc
xchg
mov
inc
pop
cs
and
neg
jp
jne
pop
and
in
xor
nop
add
push
push
and
mov
scas
aaa
cld
or
sar
or
movsl
dec
stc
fcmovne
jg
push
adc
xchg
popf
push
pop
sahf
ds
test
cli
add
xor
push
pop
test
inc
dec
rcr
pop
call
xor
pop
cld
loopne
sub
enter
push
loop
gs
loop
mov
call
mov
pushf
mov
adc
test
lods
loopne
das
xorl
outsl
loop
mov
in
jg
pop
mov
xchg
dec
dec
pop
sub
jo
push
jne
enter
aas
sbb
sbb
and
xor
xchg
popf
imul
jb
jnp
notb
sarl
or
dec
mov
sbbl
adc
or
repnz
rcr
cmp
add
clc
inc
inc
xchg
xchg
or
jg
fimull
clc
das
mov
mov
push
inc
xchg
cmpsl
jg
mov
dec
inc
mov
sub
shl
pop
rclb
or
rorb
lret
pop
xchg
cmp
pop
add
pop
pop
roll
test
sbb
pushf
outsl
or
dec
jno
and
mov
in
decb
push
mov
mov
rorb
aam
push
cmp
gs
or
push
cmc
jbe
pop
and
inc
and
push
jne
fwait
jne
fs
jbe
xor
imul
jnp
scas
add
xor
xorb
mov
pop
dec
sub
push
imul
outsl
in
mov
push
es
jbe
sbb
mov
push
rolb
sti
xchg
pop
sahf
pop
lcall
hlt
outsl
rolb
xor
pop
dec
push
dec
pop
inc
hlt
test
jbe
or
lods
addb
rclb
cwtl
icebp
add
or
pop
add
jo
mov
in
mov
dec
cmp
sub
popl
sub
jmp
sbb
jmp
dec
loop
fs
test
int3
cmp
pop
insb
jo
cmp
int
cmp
and
lret
faddp
int
mov
cmp
inc
xchg
mov
jg
cmp
shrl
pop
loope
icebp
cmpsl
andl
mov
fisubrl
mov
pop
clc
or
popf
filds
mov
ljmp
fldcw
push
daa
or
test
int3
push
mov
fisttpll
movsl
arpl
jle
push
inc
aas
mov
gs
push
sub
xor
lods
in
cltd
aad
mov
xor
test
add
sbb
ret
mov
lds
mov
inc
jg
testl
xchg
test
inc
ret
cmc
adc
jo
push
and
dec
mov
jb
pop
popf
sti
dec
inc
inc
int
icebp
xchg
sub
sub
mov
xor
cwtl
pop
invd
mov
and
mov
lea
xchg
stos
push
or
inc
mov
mov
pop
lret
fstl
insl
mov
pop
xor
push
ret
mov
inc
scas
lods
inc
pop
mov
fsubs
imul
cmp
daa
jp
xor
sub
test
dec
inc
mov
lcall
popf
adc
arpl
movsb
adc
cli
or
add
push
adc
inc
xor
inc
or
neg
inc
dec
mov
bound
push
add
in
les
pop
push
sub
rcr
inc
mov
fildl
das
pop
jmp
xor
nop
cmpsb
cmpsb
clc
ja
dec
mov
dec
mov
insb
out
cld
push
cmp
je
test
aad
int3
ljmp
nop
icebp
aas
cmpsb
xlat
pop
imul
stos
mov
test
xchg
dec
in
sahf
mov
in
cwtl
push
dec
and
pop
cmp
pushf
lds
sub
sbb
jne
push
pop
sbb
mov
add
cli
add
andl
int3
fcomip
int3
add
sbb
xor
push
lea
nop
addl
push
les
enter
fildll
xchg
sub
adc
leave
sub
sbb
addr16
sarb
loope
shl
jge
sbb
daa
nop
adc
jle
lcall
in
popa
sahf
in
daa
mov
pop
imul
cmp
out
aas
arpl
jns
inc
add
pop
adc
sub
aam
jmp
jl
lods
pop
cmp
sub
inc
iret
jp
cmc
mov
fisttpll
test
outsb
fs
fs
or
lds
xor
out
pop
outsl
dec
jo
int3
das
sbb
test
movsl
sbb
ficoms
sbb
fildl
cmp
int3
cli
xlat
shlb
popa
lods
insb
in
aas
xchg
pop
push
rcl
jo
and
cmpsl
sub
mov
stc
fnsave
jl
xchg
shlb
lahf
sahf
adc
mov
ja
insb
jecxz
inc
push
cmpsb
subl
int
out
cmpl
imul
into
pop
pop
jp
sub
push
sub
ljmp
mov
dec
dec
jmp
mov
push
iret
clc
jge
pop
fs
push
push
jge
aas
cmp
adc
mov
dec
or
scas
arpl
cmp
or
scas
jmp
repz
fnstsw
imul
leave
xor
inc
into
xchg
sub
mov
mov
iret
sub
aaa
xchg
push
pop
xchg
test
popa
mov
xor
or
cmp
cmp
and
adcl
mov
lret
and
add
inc
je
into
sbb
adc
add
sub
inc
dec
inc
sub
shrl
loope
jmp
pop
xchg
loop
int
imul
jmp
insl
xchg
insl
xor
push
and
outsl
xor
sbb
push
pusha
jecxz
and
and
add
sub
repnz
mov
cmp
sub
adc
pop
push
cmp
into
push
sub
or
rcrl
repz
jl
dec
adc
xor
jo
push
jo
les
cmpl
sbb
es
sub
call
js
pop
shlb
popl
mov
mov
int
insl
pop
fdivrp
leave
and
pushf
pop
xchg
dec
orb
dec
push
and
mov
les
sbb
jb
adc
inc
sbb
adc
insl
xor
xlat
aaa
or
rcll
sbb
cli
jnp
aaa
jg
out
out
scas
add
xchg
clc
inc
jae
pop
mov
push
mov
in
arpl
and
xchg
push
xchg
mov
push
aas
push
fiadds
pop
xor
das
shlb
xchg
mov
pusha
mov
call
lds
xchg
pop
cwtl
mov
fcmovu
xchg
push
out
inc
and
xchg
pop
mov
imul
mov
ret
out
push
adc
ljmp
inc
push
test
cmp
test
loope
cmp
mov
or
or
and
in
push
and
mov
mov
inc
jmp
jno
cmp
xchg
mov
and
insl
xchg
mov
add
rolb
xor
movsl
lock
or
and
push
jb
clc
fstl
pop
out
lret
popa
notb
xchg
dec
aad
add
and
adc
adc
push
ss
inc
and
repz
push
rep
jnp
das
xor
sbb
xor
mov
pop
inc
imul
add
mov
lock
mov
cmp
inc
or
cmp
add
cwtl
xlat
scas
push
mov
popa
adc
xor
mov
sub
ficoms
xlat
les
inc
imul
cli
in
neg
icebp
mov
sbb
popa
les
mov
repz
dec
jle
mov
sbb
or
add
mov
sbb
pop
inc
loope
insb
cmp
add
ret
mov
hlt
inc
jns
mov
mov
dec
or
mov
jg
xor
mov
dec
loopne
js
mov
out
dec
push
jmp
xor
xor
jecxz
jae
stos
or
lds
cmp
addl
rorl
sarl
inc
int
push
call
out
xor
push
jg
jbe
jecxz
dec
and
data16
push
mov
into
test
push
adc
lods
jmp
std
and
or
iret
out
rcll
int
mov
inc
mov
jae
pop
in
mov
push
fstpt
or
cs
dec
mov
adc
cmp
mov
or
xchg
pop
xor
push
jbe
lret
ljmp
scas
mov
cmpsl
adc
cmp
cmc
lahf
pop
decb
div
push
jbe
xchg
idivl
mov
adc
and
das
xchg
cmp
jns
push
xchg
cs
dec
pop
lock
out
xlat
dec
out
sbb
rol
sub
push
inc
movsb
insb
add
addr16
mov
pop
ss
sbb
andb
subb
jmp
dec
stc
out
out
push
fs
push
arpl
pop
mov
and
pushf
cmp
add
sbb
fiadds
clc
push
jae
mov
push
mov
ret
arpl
mov
xchg
loope
xchg
les
in
sub
ljmp
jl
inc
mov
pop
movsl
adc
push
loope
cmp
cmp
loop
push
ficoml
sub
xchg
arpl
mov
mov
das
xor
ja
xor
xor
adc
aam
mov
jns
ds
rorl
aas
sub
xorl
movsl
xchg
sbb
xchg
inc
jae
xor
and
ja
or
xchg
inc
insl
imul
lods
mov
cwtl
jae
ds
dec
mov
push
les
inc
pusha
insl
inc
lcall
hlt
mov
xor
rcll
pop
sub
jmp
mov
or
sub
fdivr
cmp
std
pop
cs
dec
pop
pop
ljmp
and
adc
imul
dec
jns
les
mov
or
ljmp
fwait
adc
and
jbe
int
std
repnz
jnp
jo
inc
inc
jle
cmp
mov
pop
leave
aam
jbe
ret
jl
aam
xor
cmp
out
or
xchg
mov
adc
loope
xor
arpl
scas
jb
fmul
std
out
in
movsl
or
inc
stc
jnp
dec
test
pop
mov
ret
jae
xchg
dec
outsl
or
and
or
push
and
or
movb
adc
loopne
scas
cmpsl
jbe
cmc
cmp
out
push
push
call
leave
mov
sahf
sti
sbbb
jbe
cmpsb
lods
subl
outsl
mov
out
pushf
lock
popa
mov
ret
lock
and
fstps
mov
jo
push
fucom
adc
jnp
lock
repnz
loope
dec
or
sbb
rcrl
idivl
rcr
testb
sub
repnz
cmp
pop
sti
cwtl
or
sbb
mov
lcall
mov
xor
orb
adcl
jp
mov
adc
lods
out
daa
push
in
mov
or
jbe
sbb
movsl
pop
xchg
adc
icebp
aad
mov
sbb
jge
xchg
and
jmp
ja
inc
xchg
mov
dec
push
and
xor
pop
out
mov
lods
push
adc
push
enter
cli
sbb
add
testb
aaa
pop
leave
ret
push
jae
dec
dec
jns
xchg
xchg
and
or
mov
cld
out
add
mov
stos
out
dec
cmp
push
cli
fcoml
int3
fyl2xp1
inc
jcxz
dec
or
adc
int3
enter
mov
call
aam
or
arpl
jmp
dec
adc
cltd
iret
fimuls
sahf
sti
in
jo
jecxz
imul
mov
mov
aad
mov
xor
sarb
xchg
test
jecxz
fnstsw
add
mov
mov
mov
jns
insl
loop
or
adc
mov
inc
mov
lret
cmc
mov
xchg
ret
fs
mov
xchg
xchg
popf
jo
and
hlt
lods
test
add
fwait
in
int3
mov
xchg
int
jns
mov
mov
mov
add
xor
test
push
into
imul
bound
rcrb
push
dec
lock
aad
sar
mov
sub
loopne
cmp
mov
and
lock
add
xchg
jae
xor
mov
mov
int3
xchg
lods
in
mov
popf
pop
push
pushf
xchg
shrb
xchg
fsubp
in
test
mov
pop
mov
cs
pop
orb
pop
mov
jmp
dec
push
in
dec
das
mov
insb
wrmsr
dec
dec
add
sbb
int
lea
mov
repnz
fiadds
push
repnz
pusha
push
or
call
cmp
repz
bound
cmp
rorb
aas
inc
push
pushf
jbe
sbbl
mov
cmp
add
ss
and
popf
in
mov
cmpsl
xor
inc
movsl
dec
or
js
xlat
adc
sti
push
out
inc
cld
mov
jecxz
inc
test
aas
lea
cmpsb
mov
dec
xchg
or
push
push
adc
sbb
and
rcrl
mov
scas
cmp
mov
xchg
popa
sahf
into
rcr
push
xchg
call
call
jbe
data16
out
jnp
aas
dec
xchg
dec
xchg
clc
fcoml
xchg
imull
add
es
push
and
lods
adc
xor
jne
xchg
xchg
test
dec
sub
cmp
lods
cmpsb
pushf
cmp
pop
loope
insl
loop
out
repnz
fbld
push
xor
inc
in
inc
movsl
dec
aas
push
xor
leave
int
lea
lock
jno
cmp
dec
ja
inc
mov
mov
and
sub
jle
jp
cltd
mov
imul
xor
push
jg
xchg
xor
dec
mov
adc
xchg
int3
pusha
inc
jns
sub
push
adc
lcall
and
aas
shrl
leave
rolb
push
adc
sbb
mov
and
push
mov
pop
push
push
imul
rcr
pop
inc
aas
hlt
sarl
sar
clc
sub
mov
mov
xchg
or
add
js
or
dec
sbb
or
stc
scas
and
arpl
inc
out
mov
mov
in
faddl
pop
lcallw
out
fisubrs
std
and
in
mov
or
xchg
movsl
mov
xchg
hlt
in
add
xchg
xchg
pop
sub
addr16
jne
dec
cmpsb
jle
push
pop
lds
or
dec
dec
lahf
adc
andb
jmp
adc
repz
out
jge
scas
pop
rolb
test
je
rclb
or
add
popf
sbb
jnp
mov
push
es
loop
dec
xchg
adc
or
insl
jae
push
push
into
dec
push
stc
jle
stos
out
cltd
bound
push
mov
jae
jo
add
rsqrtps
cmc
shll
jns
jmp
add
mov
inc
pusha
xchg
leave
mov
stc
shlb
adc
mov
imul
mov
mov
sbb
adc
leave
lock
inc
xor
add
jb
pop
in
movb
sub
outsb
out
mov
dec
daa
inc
out
jmp
xor
push
fstl
hlt
es
div
out
cmp
es
stos
ss
pop
lods
jbe
rorl
dec
scas
ficoms
icebp
inc
in
sub
in
mov
fidivrl
mov
jnp
fwait
mov
dec
or
pop
inc
iret
or
sbb
xchg
lahf
arpl
sub
add
xchg
aam
outsb
lea
setno
lds
insb
cmpsw
ret
or
or
lret
sbb
xchg
adc
aaa
in
out
ret
adc
adc
and
inc
lcall
adc
daa
jo
adc
fcmovb
insl
mov
in
mov
sbb
flds
sbb
and
mov
xchg
dec
jns
dec
xchg
inc
jg
imul
in
jb
dec
pop
mov
out
ret
ds
mov
cmp
add
sub
cmp
add
sub
xor
sub
xor
jo
popl
je
hlt
mov
cmp
outsb
ljmp
xchg
xchg
adc
mov
dec
test
xor
cmp
adc
sarb
xchg
push
in
in
xchg
add
repnz
sarb
inc
int
xor
adc
or
pop
inc
test
fsubrs
inc
int
xchg
push
call
fiadds
inc
mov
cld
or
xchg
push
mov
imul
push
add
push
test
inc
add
mov
xchg
adc
js
xchg
mov
sub
cli
mov
adc
ja
scas
cmpsl
sbb
mov
subl
adc
lods
stc
xchg
pop
push
add
ss
nop
gs
inc
fldl
mov
das
loopne
leave
xchg
aaa
pop
adc
cs
sahf
fwait
mov
pushf
scas
xorb
stc
push
fdiv
ret
leave
mov
stos
cli
das
dec
pop
in
add
popf
jno
xchg
sub
dec
adc
sub
rol
mov
aas
dec
gs
jno
push
out
lock
les
push
lret
out
xchg
jne
cmp
cld
pop
lds
rcr
or
scas
push
pushf
test
mov
and
mov
sbbl
aas
dec
mov
sti
pop
mov
sti
and
mov
adcl
scas
lcall
movsb
xor
inc
xchg
leave
mov
mov
imul
movsl
stos
imulb
and
adcb
aas
bound
out
shlb
shrl
pop
das
cmpb
mov
les
and
outsb
stos
jp
stos
dec
dec
lods
fwait
or
xchg
aad
mov
mov
aaa
push
xor
xor
stos
sahf
std
subl
lds
add
enter
and
push
fisubrl
test
loop
xor
gs
shlb
fs
push
in
adc
add
push
adc
out
nop
add
ret
notb
mov
fs
xchg
mov
mov
mov
aaa
push
mov
mov
mov
jnp
pop
pop
mov
mov
lds
cmp
add
sub
mov
xchg
jae
or
movsl
decb
adc
ficompl
fnsave
push
mov
pop
xchg
xchg
sub
mov
adc
cld
xchg
imul
call
out
ficoms
lea
test
call
insb
mov
push
fidivl
xorl
into
das
xor
aas
sbb
dec
adcl
bound
cltd
into
inc
mov
cmp
es
or
xor
out
cmp
das
pop
pop
xchg
mov
je
mov
cmp
fidivs
mov
mov
xchg
push
popa
mov
mov
jno
mov
xchg
lret
pop
push
insb
xchg
fwait
xchg
push
jae
popa
scas
xor
fldt
imul
push
out
icebp
add
sahf
jns
adc
adc
sti
aas
sub
stc
adc
mov
in
test
call
mov
inc
loop
orb
int3
insb
cli
imul
ret
and
mov
mov
xchg
pop
out
xchg
mov
jp
cmp
xor
cmp
in
fadds
or
adc
fimull
cmp
mov
andb
aaa
cmp
gs
jo
mov
push
rcl
insb
out
ds
ret
cmpsl
inc
test
in
out
jnp
dec
mov
cwtl
jbe
cmp
jns
test
jge
push
mov
push
fcmovu
test
out
xor
inc
sbb
push
jl
cmp
mov
and
stc
call
sbb
sub
fimuls
imul
mov
dec
jne
popf
fisttpll
xchg
xor
pop
inc
mov
jge
inc
add
repnz
xor
push
daa
xor
dec
andl
sub
pop
fsubs
jecxz
mov
mov
pop
xlat
sbb
pop
outsb
aad
mov
add
adc
sub
sbb
out
js
xchg
das
or
adc
ret
mov
jbe
pop
mov
out
pop
daa
mov
nop
and
ds
subb
inc
cld
mov
in
mov
cmp
aas
pop
ret
out
ds
push
ljmp
xor
mov
pop
mov
xchg
add
inc
inc
pop
dec
lret
aas
xchg
and
push
pop
jmp
or
js
sub
push
inc
fs
cld
cmpsl
mov
pop
jg
je
fldcw
incb
cmp
push
adc
lahf
cli
aad
jl
sub
shl
inc
push
mov
add
jns
inc
icebp
sub
mov
lcall
xor
data16
fistps
cmp
int
and
es
in
jmp
or
pusha
sahf
mov
push
fnstsw
xor
and
and
dec
out
js
and
cld
push
cmp
mov
cwtl
mov
ja
fs
and
mov
imul
popa
js
inc
test
sub
lret
and
loop
stc
push
and
stos
gs
add
xor
ret
insl
das
outsl
es
inc
leave
dec
jg
fdivs
xchg
or
xchg
mov
rorb
pop
jae
inc
arpl
and
shr
mov
and
jmp
cmc
arpl
test
arpl
mov
jne
fdivrp
stc
fdivl
inc
sbb
sbb
jns
mov
lea
js
sbb
popa
push
cmpsl
loope
push
les
pop
sbb
ds
sahf
cwtl
out
and
negb
inc
out
ret
pop
dec
stc
pop
iret
sub
jmp
pop
lea
cmpsl
int3
push
inc
cmpsl
pushf
cmpsl
or
subb
jo
pop
push
dec
jo
arpl
cmp
movsb
sub
rcll
loope
aam
pop
add
sub
lock
fisubs
clc
mov
pusha
dec
pushf
jle
pusha
out
sbb
std
sub
sub
std
mov
mov
das
or
mov
sahf
mov
dec
andb
insl
sub
or
stos
mov
xchg
rorl
mov
aas
stos
jnp
xchg
pushf
push
add
sbb
enter
lret
push
dec
test
pop
adc
sbb
mov
lahf
sub
cwtl
mov
enter
push
jne
aam
adcl
bound
xchg
neg
mov
fnstenv
hlt
xor
jecxz
xor
fs
jg
cmp
jl
dec
adc
je
mov
and
adc
and
cmp
and
jge
out
sub
mov
ror
push
sub
mov
mov
je
dec
sti
outsl
in
loope
mov
std
fisubrs
gs
sub
frstor
lcall
xchg
add
add
mov
xor
imul
xchg
aaa
pop
push
test
mov
fs
mov
rcrl
rorl
sub
cmp
leave
push
fs
xorl
xchg
pop
aas
and
pushf
clc
popa
insb
lea
shrl
lds
enter
lds
pop
lret
mov
xor
jg
push
pushf
aad
std
or
xchg
mov
in
and
jl
push
inc
fiadds
xchg
clc
stos
std
outsl
and
xor
cmpsb
mov
sbb
jmp
sbb
aad
cs
icebp
out
mov
or
adc
sub
outsl
ss
sbb
adc
cmp
jg
mov
rcrl
push
test
imul
add
mov
mov
js
mulb
fwait
add
and
xor
lret
mov
imul
and
repnz
mov
scas
sub
jl
roll
cwtl
into
int
ja
es
fwait
out
fimuls
scas
mov
xorb
or
push
gs
out
and
adc
out
jno
in
test
movsl
jecxz
xchg
add
add
xchg
or
pop
loope
loopne
loop
pop
sbb
xor
das
xchg
jb
cmpsl
in
cmc
mov
sub
int3
xchg
rcll
orb
mov
adc
pop
inc
int3
push
in
imul
jg
xor
xchg
xorl
or
ds
call
int3
jl
loop
jnp
into
mov
push
push
ret
mov
adc
mov
mov
add
adc
dec
xlat
or
rcll
lret
xor
stc
test
pop
mov
mov
mov
fs
ja
jae
or
pushf
js
bound
inc
stc
xor
lds
in
sub
xor
inc
repz
nop
gs
cmp
mov
adc
mov
pop
mov
push
in
dec
cmp
and
xor
mov
cmp
shrl
pop
aam
dec
sub
dec
dec
int3
xchg
dec
jp
sbb
dec
mov
dec
outsl
push
jmp
lods
or
hlt
rorl
add
pop
notl
fwait
push
pop
fwait
xor
outsb
sub
mov
sub
mov
outsl
aaa
jecxz
push
xchg
test
lahf
cmp
sahf
cwtl
add
test
hlt
sbb
jmp
adc
adc
loope
cmp
daa
adc
sub
in
popa
aad
pop
xor
pop
and
cs
or
test
pusha
adc
adc
sub
js
in
lret
cmc
mov
or
or
adc
push
outsl
das
jge
ja
in
xorl
cmc
outsb
in
push
insl
cmp
dec
cs
roll
fwait
adc
mov
daa
jns
sti
xchg
inc
nop
or
add
push
in
les
adc
push
push
mov
in
leave
pop
and
shl
dec
sub
addr16
push
mov
add
xchg
lret
arpl
fstps
jbe
movsl
mov
jl
push
mov
sub
jae
mov
lret
ja
add
jle
cld
ret
mov
jne
dec
fiadds
sbb
repnz
popf
pop
bound
or
cmpsb
xchg
cs
clc
cmc
pop
insl
inc
icebp
and
into
jbe
cltd
ret
test
jge
in
rcrl
fidivrs
mov
mov
sahf
add
loop
push
imul
mov
in
test
adc
push
jns
inc
icebp
stos
mov
mov
stos
movsb
jge
xchg
andb
sub
pushf
mov
sbb
and
mov
sub
push
jno
std
daa
adc
inc
pop
xchg
fsts
hlt
pusha
stc
push
inc
pop
inc
add
lahf
mov
sub
lods
xchg
add
xchg
ja
jecxz
fwait
out
jl
mov
push
not
shrb
fmull
xor
xor
sub
jmp
pop
mov
cmpsl
xor
mov
adc
lods
pop
imul
les
mov
pop
insb
andb
loop
fsubs
lret
pop
add
cmp
sar
adc
in
mov
jb
icebp
rol
cmpsl
inc
push
push
fs
shrb
cmp
out
add
jb
xor
pop
inc
ret
sti
es
bound
xor
fidivs
aad
sub
das
bound
adc
into
popa
sbb
hlt
call
or
repnz
mul
cwtl
test
insb
arpl
out
pusha
jnp
out
xchg
stc
movsl
mov
sub
shll
insl
jo
mov
scas
sub
jl
clc
mov
aaa
fs
cmpl
popf
pop
dec
jmp
xchg
sub
fs
dec
jno
fldt
hlt
push
cmpsb
mov
or
jp
sbb
out
jne
std
test
out
dec
test
andb
jne
pop
sbb
add
out
jle
fwait
ljmp
mov
pop
sub
inc
jle
sub
push
dec
push
loope
jp
mov
and
fnstenv
xor
jl
jp
loope
dec
std
sub
push
inc
repz
lods
push
hlt
adc
aam
setb
push
mov
and
sub
inc
jecxz
mov
shl
es
stos
mov
jp
neg
add
push
sbb
xchg
mov
inc
sahf
pop
aam
sar
jmp
inc
mov
dec
sbb
sahf
shr
adc
mov
in
notb
ja
ds
jno
bound
mov
add
push
cmc
adc
adc
dec
pop
adc
out
nop
cmc
les
sbb
jl
inc
jg
xchg
or
enter
outsl
and
cs
fst
jecxz
cmpsl
fld
mov
dec
nop
jge
aam
jo
jl
testl
add
dec
sub
movaps
mov
push
repnz
lret
outsb
xchg
xlat
xchg
push
push
test
add
mov
jae
ret
addr16
test
mov
push
mov
out
repnz
into
inc
aam
push
out
xorl
fadd
inc
mov
push
repz
dec
xchg
cwtl
xor
mov
ds
xor
mov
or
outsb
jbe
outsb
add
lret
cld
inc
ficompl
cmp
inc
or
add
dec
cwtl
addr16
sbb
int
inc
nop
lcall
stos
int3
aaa
movhps
sbb
in
lock
repz
xor
mov
xor
xor
les
cmp
cmp
jnp
cmovno
or
cmpb
js
out
add
jle
push
jle
pop
in
cmp
and
sbb
cmp
adc
das
lret
mov
pop
stos
gs
mov
test
jl
outsl
or
cmp
sbb
inc
test
sbb
je
mov
cs
imul
add
pop
xchg
jmp
xor
mov
jg
inc
jp
pop
aad
cmp
or
and
adcl
addr16
cmp
std
pop
cmc
mov
fs
push
mov
mov
repnz
insl
ja
cmp
pop
inc
scas
or
jecxz
cltd
mov
es
cwtl
mov
sbb
xchg
push
pushf
scas
lods
cli
popa
pop
imull
jbe
leave
jno
jne
shlb
test
sbb
rclb
cmp
inc
stos
dec
or
fcoml
pop
repnz
mov
dec
push
xchg
add
mov
xchg
repnz
in
mov
pop
push
aas
jmp
cmpsl
xor
and
in
push
lcall
out
into
dec
movsl
insb
xchg
and
stc
cmpsb
cmp
sub
pop
js
jbe
xor
cld
js
ds
mov
fldz
inc
jae
dec
fs
ljmp
lods
incb
in
jg
push
mov
mov
stos
lds
int3
cld
jg
sub
inc
stos
andb
shlb
dec
out
xor
inc
out
ja
xor
mov
aas
or
adc
push
jnp
stos
jle
add
mov
add
outsb
lods
cmp
in
inc
movsl
push
lods
jmp
je,pt
outsl
mov
xorl
push
cld
ds
loope
sarb
pop
xchg
sbb
sarb
adc
icebp
and
lret
into
ja
outsb
cmpsl
movsb
shll
mov
mov
pop
cld
imul
push
xor
fcomps
fimuls
push
adc
cli
es
hlt
mov
sahf
xlat
mov
fdivr
sbb
movsb
testb
call
or
mov
lock
adc
push
sub
scas
pop
or
repnz
stc
jg
aam
idiv
into
add
inc
and
jb
mov
inc
push
sbb
aad
inc
cmp
lcall
and
ror
std
and
adc
mov
push
and
rdtsc
icebp
mov
adc
in
mov
sub
push
adc
dec
jle
into
daa
out
pop
mov
fnstsw
sub
subl
insl
out
push
cmp
pop
ljmp
jmp
call
mov
hlt
lods
cmp
std
xor
add
scas
loopne
cmpsb
mov
imul
and
adc
jns
jp
mov
aas
ret
mov
sbb
xchg
push
dec
xchg
pop
jns
xlat
mov
cmc
cmpsl
and
xor
jne
in
xchg
ffreep
cmp
jle
movsl
sbb
or
pop
repz
push
jbe
xor
lods
out
xchg
cwtl
scas
adc
mov
lretw
fcoms
lds
test
xor
je
pop
lock
aas
mov
mov
and
lea
mov
push
cld
xor
push
pushf
cmp
test
fsub
mov
dec
int
dec
adc
fistps
sti
inc
out
jo,pt
out
adc
inc
dec
aaa
imul
lret
daa
outsl
sbb
mov
mov
adc
adc
cmpsl
push
aas
lret
cmpsb
mov
add
add
push
jae
std
out
jo
pop
out
ret
stos
int
and
fisubl
in
imul
jns
sti
movsl
and
icebp
fcompl
fidivl
jmp
outsb
mov
test
mov
cmpsb
xor
repz
mov
mov
out
sbb
or
aas
insb
rcll
je
and
inc
pop
lock
lahf
adc
das
daa
add
xchg
js
movsl
cwtl
xor
lods
xor
movsl
popf
fisubrl
mov
sbb
mov
sub
enter
cmp
addl
pop
mov
inc
pushf
cmovnp
ss
std
lret
movsb
mov
insb
int3
push
dec
mov
mov
push
pop
ja
push
punpckhwd
iret
jb
or
jnp
xchg
les
sbb
stos
int3
lea
mov
sahf
mov
add
sarl
out
sahf
subl
jp
imul
jno
lret
aaa
fstl
andl
add
jp
outsb
dec
ss
add
jb
shlb
cmp
sub
fisttpl
push
sub
sub
or
inc
aas
adc
cmp
push
sbb
push
sub
xchg
pop
mov
sbb
cwtl
fisubl
xchg
sbb
ja
fsts
fldt
nop
pop
mov
int
xchg
in
and
shl
ret
mov
and
xchg
xchg
add
cld
ffree
lret
sub
stos
or
xchg
cmpsb
rorb
mov
push
aas
stos
in
mov
pop
push
push
jle
adc
pop
hlt
dec
jns
jnp
ljmp
lock
mov
dec
fsubp
pop
loopne
hlt
and
int3
pop
sbb
cmpsb
push
and
push
push
pop
jb
xor
dec
push
cmp
pushw
pop
outsb
gs
lods
cmp
cmp
pop
leave
stc
dec
iret
filds
xchg
inc
scas
call
mov
ficoms
xlat
rclb
cmpsl
sub
hlt
cmp
stos
hlt
scas
pop
les
sub
or
pop
add
mov
dec
push
cwtl
shlb
in
pop
aam
sub
iret
cwtl
xor
mov
or
fldenv
mov
je
pop
sbb
push
mov
jae
xor
dec
add
lret
cmp
push
ja
fdivrl
add
dec
pop
push
and
xor
jnp
rcl
xor
adc
pop
repnz
test
cmpb
cmpsl
push
jg
and
pop
andl
test
mov
pop
arpl
aam
xchg
pop
jg
xchg
sbb
xor
xor
push
pushf
pusha
mov
jmp
add
cmp
lock
push
sub
xchg
std
and
ret
shlb
sub
fidivrs
lret
pusha
les
icebp
mov
mov
lcall
in
mov
inc
cmp
xchg
pop
test
dec
ret
imul
out
in
lret
dec
es
lods
cmp
jmp
mov
in
scas
xchg
lret
mov
cmp
ret
cmp
or
push
icebp
mov
or
adcb
sti
arpl
push
cmp
loopne
aaa
dec
icebp
xor
hlt
jno
imul
in
lret
pop
fldcw
mov
adc
push
cli
jo
push
jo
cmp
push
loop
in
out
cmp
mov
adc
addr16
or
popf
ret
stos
scas
cmpsb
mov
aas
xor
lret
jle
mov
cwtl
int
lock
ds
pop
rolb
pushl
nop
cmpsl
jmp
ret
pusha
fs
push
or
js
popa
add
out
roll
or
mov
push
add
out
leave
ret
int3
out
je
adc
dec
popa
push
adc
cli
pop
sub
mov
loop
mov
in
push
mov
cmove
sbb
sub
in
cs
mov
outsl
rcr
jns
fldenv
imul
cmp
popf
xchg
cmp
outsl
xor
ss
insb
mov
xlat
negb
test
es
lock
insb
push
inc
pop
popf
iret
pop
inc
ret
out
mov
push
idiv
jmp
xor
cwtl
adc
adc
fcoms
jne
rcrl
ja
mov
repz
es
out
lods
stos
fisttpl
dec
hlt
mov
push
pop
std
xchg
ljmp
mov
push
lods
mov
pop
jge
out
mov
adc
movsl
adc
stos
cs
jnp
ss
mov
jb
cli
cltd
mov
add
dec
cmp
movsl
xlat
pusha
cs
inc
nop
or
adc
aam
mov
mov
adc
mov
loopne
fcomi
in
inc
push
flds
jecxz
mov
sbb
shlb
inc
and
arpl
or
cmpsb
mov
imul
cmp
pop
aam
mov
cmpl
fsubrs
adc
dec
repnz
adcb
iret
pushf
xor
int
dec
adc
test
aam
shll
push
mov
dec
ret
scas
je
and
xchg
scas
xor
pushf
jge
adc
push
sub
mov
int
jmp
js
fmulp
push
sbb
cltd
mov
test
or
xchg
fidivrs
sahf
and
xchg
mov
pop
mov
inc
pop
imul
push
out
and
mov
inc
inc
ja
je
dec
adc
mov
mov
les
xchg
scas
sub
cmp
sub
or
add
cmc
insl
mov
and
add
nop
or
les
addr16
popf
adc
mov
int
jo
xchg
xor
shl
jecxz
adcb
mov
insb
int
ficoms
lret
dec
xchg
jno
xchg
das
in
daa
pop
ficoms
insl
fbstp
pop
popa
sahf
push
jg
clc
sub
pop
push
xor
clc
shlb
loopne
cmpsb
lea
dec
xchg
push
rolb
lods
push
inc
add
fxch
cmpsl
cld
jbe
cmp
dec
imul
out
lock
loopne
jmp
lahf
jge
call
cmc
pop
adc
icebp
inc
cmp
fnsave
test
push
ret
int3
movb
cmc
in
popa
nop
inc
push
xor
mov
xlat
jnp
push
xor
inc
ljmp
scas
bound
gs
adc
fistps
sub
add
je
xorb
imul
nop
rorl
push
pop
jecxz
aaa
push
xchg
cmp
filds
int3
fnstenv
aam
lds
pop
mov
mov
push
es
sahf
js
loopne
xor
push
mov
les
ss
add
mov
jae
mov
pop
imul
fiaddl
jge
inc
mov
sub
loope
jmp
jge
test
sbb
pop
push
imul
xchg
push
mov
into
push
data16
insl
xor
push
stos
adc
and
mov
jge
inc
cli
mov
cwtl
push
fwait
mov
pop
daa
test
andb
push
pop
pop
mov
add
mov
pop
fstpt
arpl
js
ss
fsubl
add
inc
cmc
xlat
mov
mov
pop
pusha
jecxz
data16
xchg
cmpl
nop
push
or
test
incb
paddd
cmp
ret
xor
test
pushf
mov
dec
jns
adc
xchg
cltd
or
push
xor
and
nop
jmp
mov
or
pop
sbb
xchg
sarl
rep
cli
adc
roll
xorb
les
inc
push
sub
pop
scas
loope
mov
frstor
xlat
mov
aad
addl
lds
scas
xor
jne
jge
mov
cmpsl
push
cmpsb
lcall
xchg
pop
repz
pop
popa
xor
sub
and
stc
lret
dec
push
jle
push
cmc
add
xor
mov
jg
out
iret
sbb
pop
in
ret
lret
xor
sar
repnz
sbb
sti
xlat
inc
inc
neg
cmc
in
fnstcw
movsb
dec
notl
sti
cmp
mov
inc
xchg
mov
xchg
sub
cmp
jl
mov
sbb
pop
repnz
cmp
dec
and
push
cmovbe
pop
ljmp
and
out
and
sub
cmp
out
cmpsl
jae
mov
add
popa
lds
inc
gs
cmp
addr16
adc
outsl
lahf
lds
jl
fildll
xor
dec
repz
shrl
in
mov
mov
icebp
test
aad
lcall
mov
es
ds
out
outsl
inc
mov
xchg
sub
pusha
out
repnz
push
rolb
xchg
mov
jmp
lahf
ds
je
pop
icebp
and
test
inc
nop
out
jge
stc
dec
das
mov
mov
xchg
cmpsl
mov
out
xchg
and
mov
pop
lock
pop
fisttpl
mov
jecxz
push
ja
fsubrl
imul
incl
mov
push
xchg
ss
jge
rcrl
xchg
ja
dec
arpl
cld
outsl
pop
cmp
pop
mov
dec
add
mov
push
pushf
insl
xor
xor
gs
les
in
in
mov
pop
subl
imull
mov
aas
pop
out
test
mov
sub
add
pop
stc
mov
ret
iret
xchg
icebp
aas
inc
dec
pop
jnp
rclb
cmp
iret
sub
xor
jl
mov
sahf
inc
outsl
shlb
push
scas
adc
xor
jecxz
cmp
iret
or
negl
dec
rorb
jge
adc
movsl
push
push
andb
mov
cmp
push
fsubs
inc
mov
iret
pop
jnp
jmp
scas
xor
mov
mov
sbb
push
mov
fucomi
xchg
xchg
les
cmp
add
mov
xor
or
mov
and
xchg
ja
xor
pop
fisubs
testb
inc
popf
ds
mov
sub
cmp
ds
and
lods
sub
adc
xchg
dec
popf
negl
test
ret
scas
push
push
add
sbb
cmpsl
in
xchg
mov
test
xor
jle
mov
nop
orb
lret
cltd
or
adc
nop
fiadds
mov
pop
inc
add
push
cmc
sbb
xchg
jmp
fwait
in
cld
inc
pop
mov
inc
lock
mov
ret
mov
ss
push
mov
mov
mov
jge
cmp
pop
dec
xchg
cmp
popa
rol
test
jae
add
mov
imul
xor
jbe
jp
lret
dec
xchg
xor
jmp
add
mov
lahf
call
mov
mov
andb
aam
hlt
cmp
pop
inc
mov
or
inc
mov
xchg
xchg
mov
xchg
jecxz
sub
lret
xchg
xchg
push
in
push
push
faddp
xchg
jno
es
jmp
mov
cmp
sub
jle
jp
lock
out
pop
addr16
dec
xor
cmp
jae
mov
hlt
les
jle
push
sub
ljmp
dec
divb
and
push
mov
imul
scas
sbb
and
bound
jbe
push
add
fstps
insb
lret
push
flds
pop
and
add
mov
js
jg
xor
repz
xchg
dec
jge
fdivl
or
sti
sub
xor
add
frstor
cmp
jb
mov
mov
push
mov
jg
add
call
push
mov
enter
lahf
out
xor
daa
jl
stos
fldl
subb
or
js
test
jle
dec
adc
insb
cmp
data16
pop
fistpl
sub
xchg
aam
imul
test
adc
les
jno
mov
adc
out
cwtl
in
cwtl
add
ja
cmpsl
or
fucomp
ret
dec
movsb
add
xchg
or
int
scas
push
xchg
test
xchg
jo
insl
xchg
inc
or
lcall
mov
pop
test
xchg
push
sub
xlat
les
loopne
mov
cld
and
jae
loope
ja
ret
inc
les
push
xor
test
xor
xchg
cli
es
adcl
cmp
mov
icebp
dec
mov
mov
jnp
pop
mov
fwait
push
insl
xchg
add
push
outsl
lock
mov
mov
or
sbb
test
mov
arpl
mov
mov
and
nop
push
jb
pop
mov
mov
mov
xlat
mov
lret
push
sbb
sbb
sahf
test
repnz
cld
adc
mov
sub
pop
lret
adc
sbb
push
jae
pop
cli
loop
jmp
sbb
fldcw
mov
xchg
add
xchg
cmp
mov
jmp
mov
lds
leave
out
jbe
push
push
stos
mov
leave
fcomps
pusha
xor
int3
rclb
jne
pushf
das
out
in
push
test
call
sub
arpl
push
sub
fmull
outsl
aam
pushf
sbb
add
dec
mov
sbb
pop
enter
add
fidivs
push
pushf
pop
xorb
fstl
addr16
fdivrl
mov
shlb
testb
repnz
mov
dec
mov
mov
mov
cmc
pop
aaa
outsl
stos
ret
int
adc
sbb
add
in
cmp
push
add
int
dec
arpl
mov
inc
dec
iretw
out
inc
fsubl
sub
sbb
mov
mov
scas
pop
scas
sahf
lret
sbb
add
imul
lock
scas
sbb
sbb
pop
les
push
sti
lods
push
imul
pop
faddp
das
mov
leave
lds
out
lock
outsb
movsl
js
add
push
xorb
lahf
mov
dec
lcall
in
das
sub
xchg
xchg
jbe
test
lcall
mov
add
mov
out
cmp
leave
cmp
lahf
push
sbb
fwait
les
cmp
inc
xor
aam
cmpsl
cs
insl
dec
sbb
pop
and
lret
cwtl
adcl
lret
in
xor
or
daa
mov
out
clc
xor
jp
fists
testl
fists
cmp
jl
jp
xor
dec
jecxz
out
mov
push
mov
xchg
lahf
adc
pop
jno
cmp
jne
in
ja
dec
je
push
jb
mov
xor
mov
mov
and
pusha
lret
cmp
fisubl
repnz
mov
hlt
sbb
inc
aam
aaa
pop
mov
dec
decl
call
insb
sub
nop
pushf
cmp
call
dec
jbe
jg
pop
mov
in
sarl
outsl
bound
mov
sub
dec
mov
pop
push
xor
dec
sbbl
pop
jnp
lock
add
aas
jge
sahf
and
add
das
mov
movsb
xlat
and
repz
xchg
arpl
arpl
scas
incl
dec
outsl
sbb
sub
add
mov
sub
and
ja
das
cwtl
pop
and
stos
ss
pcmpeqd
mov
jnp
dec
cmpsl
inc
test
pop
stc
adc
fwait
out
punpckldq
inc
flds
fistpl
lods
pop
adc
loopne
orl
jmp
adc
sbb
push
cld
dec
insb
mov
scas
xchg
inc
add
xor
mov
xor
int3
pop
imul
in
xchg
ss
mov
pop
push
mov
lret
fwait
xor
fdivs
or
pop
repnz
pop
or
sub
adc
test
andl
cmp
mov
xor
lods
pop
dec
xor
loopne
adc
jmp
mov
and
add
adc
dec
xchg
or
sub
inc
dec
pop
stos
jmp
ror
iret
sarb
jl
lea
sub
out
xor
inc
shl
ljmp
xlat
mov
push
test
shlb
ljmp
push
es
lret
pop
leave
shrb
out
cmp
mov
popa
mov
rol
sbb
out
sub
push
inc
jmp
mov
stos
rclb
icebp
cmpsb
ljmpw
jmp
or
rolb
pop
mov
ja
or
add
aam
mov
dec
mulb
es
push
mov
mov
cmpsb
jmp
mov
add
fcmovbe
pop
shll
shr
stos
leave
adc
and
fwait
sub
shll
scas
xorb
call
inc
cmc
xchg
out
add
pop
or
mov
decl
rcrl
mov
mov
mov
jl
addr16
adc
pop
inc
jp
inc
xor
adc
ja
cmp
pop
push
add
movsl
ja
scas
cmp
sub
ret
cmc
mov
sbbb
test
or
loop
loopne
add
adc
sbb
sbb
stos
aaa
in
popa
fincstp
popf
fwait
ja
lods
inc
push
dec
loopne
sbb
push
push
icebp
outsl
and
scas
mov
sbb
xchg
idivb
nop
and
mov
arpl
mov
xchg
push
fs
and
jne
pop
ret
xchg
mov
fisttpl
aam
cmpsb
mov
imul
jecxz
push
sub
jbe
sbb
add
popf
cltd
pop
jge
hlt
jo
mov
test
jbe
out
sub
mov
test
sub
test
adc
imul
fs
mov
mov
add
std
js
rcll
mov
sub
jmp
push
cmpsl
scas
cmp
sbb
and
mov
stos
cli
inc
lock
or
lea
outsl
das
pop
cmp
je
daa
add
jae
mov
cmp
fisttps
mov
adc
cld
stos
mov
push
fnstsw
or
dec
rcll
jbe
ds
daa
and
cmp
xor
push
cmpb
push
pop
js
mov
divps
adc
subb
and
jg
js
cmpsb
jno
out
and
xor
inc
shl
add
nop
lods
fiaddl
pop
xlat
aaa
lods
sbb
leave
lret
outsl
movsb
gs
pushf
aad
les
sub
stos
mov
movsb
sub
cmpsb
mov
pop
adc
jns
in
es
adc
adc
das
adc
jp
jnp
pop
mov
enter
sbb
jle
pop
dec
into
ja
mov
and
sbb
stos
test
out
fistpll
mov
and
int
insb
and
je
push
pop
int3
sahf
cli
or
add
xchg
stos
fildl
xor
adc
xor
push
lret
aas
dec
cmp
decl
add
imul
push
insb
pop
outsb
in
dec
dec
daa
repz
sub
mov
imul
in
sub
cmpsl
cmp
mov
mov
push
testb
mov
popw
xor
pop
int3
xor
cmp
sahf
or
mov
and
or
mov
add
jns
xchg
fadds
and
aaa
and
xor
xchg
jno
sub
outsb
rorl
pop
pop
call
test
inc
jnp
loope
or
out
dec
pop
mul
repz
jae
popf
and
repz
mov
stos
sbb
fists
add
scas
out
mov
jns
and
dec
cltd
mov
int
jnp
jb
mov
lahf
je
aam
ret
xorb
fcoms
lret
inc
push
xchg
pop
adc
xchg
cmp
mov
lods
rolb
ficompl
mov
jge
mov
inc
lea
adc
push
push
or
in
mov
jae
in
ljmp
sti
lret
mov
push
arpl
xchg
outsl
jae
jbe
scas
add
into
jnp
cltd
fisttps
inc
pop
and
in
scas
sar
sbb
jle
mov
inc
mov
popa
cli
shlw
xchg
rclb
mov
push
mov
jno
xor
jns
dec
adc
shrl
mov
cli
xchg
shlb
aas
and
rclb
dec
cmp
jmp
cli
in
or
dec
outsl
dec
adc
gs
jp
xchg
cmp
pop
addl
inc
iret
push
adc
jg
insb
jecxz
mov
dec
lahf
in
adc
cltd
bound
cli
jne
in
sbb
cmp
aaa
xchg
lahf
inc
icebp
das
and
xchg
xor
enter
adc
or
mov
push
push
jne
mov
xchg
bound
pop
push
xor
jnp
shlb
inc
fs
adcb
neg
les
loope
jbe
adc
fisttpl
testb
adc
fsub
enter
into
cmp
mov
lret
stos
xor
xor
xor
cmp
add
sbb
inc
repnz
gs
ljmp
mov
cwtl
push
repnz
cmpsl
and
in
popa
sahf
and
mov
mov
sub
cmp
or
push
xor
scas
sahf
pushf
leave
dec
push
xor
fcoms
ficomps
push
stc
jno
je
jg
popa
cmp
pop
or
ficompl
sbb
lret
movsb
xor
mov
adc
or
or
inc
imul
xor
push
mov
and
sub
dec
cltd
xchg
mov
sarb
imul
sub
adc
mov
lock
add
mov
into
repz
mov
int
sarl
loop
nop
cmp
and
fldl
outsl
lret
rcl
bound
call
shl
or
or
sub
jp
inc
dec
xor
inc
sbb
ds
mov
dec
dec
dec
ss
mov
adc
loope
nop
mov
imul
and
push
es
lcall
push
mov
daa
and
sbb
insl
pop
roll
adc
mov
lret
sub
arpl
fstpt
ljmp
fisubrs
fwait
mov
jae
dec
jecxz
xlat
mov
mov
push
push
jo
and
jns
js
hlt
inc
fcmovnb
dec
mov
fcoml
inc
jmp
scas
ja
xor
xorl
or
xchg
movsb
sbb
mov
fstl
decb
mov
cli
in
jle
mov
adcb
mov
push
mov
xchg
cltd
adc
std
jl
push
shll
cmpl
mov
mov
roll
xor
push
pusha
iret
addr16
cmp
sub
aam
adc
cmpb
popa
pop
cwtl
cmp
sbb
inc
sti
jge
xlat
sbb
lret
es
push
or
out
add
loop
inc
fdiv
sahf
imul
and
movsl
out
cld
or
xchg
mov
push
or
push
push
es
sub
sbbb
dec
scas
into
jp
xor
sbb
xor
lds
mov
and
js
mov
sar
jl
adc
cmp
adc
pop
iret
dec
jmp
inc
pop
sbb
movl
sbb
addl
sbb
decl
outsl
cli
jns
inc
int
and
shrl
or
pop
imul
loopne
push
xchg
lock
or
shl
adc
mov
cltd
sti
inc
sub
push
or
add
add
xchg
sti
ret
mov
xor
and
dec
js
dec
sub
or
xchg
les
xchg
scas
add
xlat
sub
imul
mov
mov
sbbb
jae
mov
cld
push
lock
sbb
mov
ljmp
scas
mov
icebp
xchg
mov
stos
or
addl
push
adc
fcomps
pop
push
in
ds
lea
adc
dec
loope
subl
xchg
mov
lret
orl
mov
cmc
pop
or
in
fs
inc
stos
jae
stos
pop
and
push
shl
lret
fidivrl
jg
or
cltd
xor
pushf
mov
lahf
jp
jne
imul
dec
stos
dec
fiaddl
inc
test
cmpsb
cmp
les
fld
sub
xor
jl
std
stc
push
fwait
test
lods
inc
stc
nop
add
add
inc
dec
push
ffree
inc
or
dec
add
pop
mov
leave
pop
jns
xor
je
repnz
pop
sbb
mov
sti
inc
subb
push
pushf
repnz
jbe
dec
jmp
testl
jg
scas
les
push
add
popa
int3
jmp
add
test
xchg
add
dec
xchg
pop
xlat
cli
push
xchg
ljmp
mov
jge
pop
lahf
test
mov
pop
cmp
aad
int3
adc
mov
mov
dec
and
xchg
icebp
adc
fnsave
adc
enter
jge
jg
xchg
jg
loope
sbb
push
inc
imul
mov
pop
cmp
xor
cli
fadd
lea
sub
stos
mov
push
popa
outsb
adc
popa
notb
insb
inc
imul
in
divl
out
lods
scas
xchg
mov
shr
push
sub
lea
outsl
loopne
sub
inc
inc
cmpl
dec
and
popa
das
fbstp
xchg
into
and
out
jge
mov
icebp
mov
icebp
mov
push
fnstenv
push
lea
fists
je
jle
push
mov
cs
fs
xchg
into
imul
lock
jns
lods
fdivl
xor
push
lret
inc
add
sbbb
jnp
out
and
pushf
jb
lret
mov
push
movsl
or
jb
or
push
push
pop
test
fisttpl
mov
shlb
adc
add
dec
in
ror
out
xor
mov
or
cmp
loopne
out
push
int3
mov
mov
jno
add
ja
add
pusha
cltd
cmp
mov
bound
pop
fstpl
adc
adc
outsb
add
movl
adc
test
fcoms
adc
push
mov
sbb
xor
add
fisubl
hlt
cmp
lds
push
cli
hlt
mov
cmp
mov
inc
push
or
push
adc
or
pop
mov
xor
inc
dec
call
mov
mov
or
test
pop
jecxz
mov
repz
imul
mov
xor
shrl
mov
pop
add
push
mov
jmp
rol
loopne
sub
movsb
rorl
iret
sub
sbb
cmp
inc
mov
mov
in
xchg
out
stos
mov
push
push
lods
call
pop
dec
int3
aas
movl
jns
push
dec
std
jns
in
xchg
fldl2t
or
add
shrb
push
insb
add
loop
aas
fists
adc
mov
mov
stos
or
mov
pop
push
mov
js
adc
aaa
sbb
add
pop
orl
mov
pop
leave
xchg
pop
xchg
mov
arpl
jae
xchg
pop
andl
dec
cmp
arpl
mov
test
roll
pop
mov
xchg
pop
add
cs
fcom
dec
stos
leave
or
push
push
push
icebp
xor
in
sbb
xor
xchg
in
stos
cltd
xor
repz
mov
sub
push
push
test
cmpxchg
and
mov
xor
mov
lret
jp
inc
es
adc
cwtl
sbb
dec
add
xchg
mov
xchg
mov
mov
shr
stc
xor
push
ds
sub
pop
loop
out
inc
push
leave
xor
inc
fildll
jbe
cld
cmp
nop
pop
sahf
mov
nop
jl
xor
sbb
add
dec
dec
cmp
fcoml
jnp
insl
jnp
add
add
insl
xor
inc
lods
push
mov
das
iret
xchg
mov
je
shlb
arpl
jmp
pop
cmp
fistl
xchg
inc
repz
jo
lret
dec
std
ljmp
push
jno
add
push
mov
lahf
push
imul
shll
in
mov
leave
cmp
les
sbb
mov
rcrl
add
test
clc
mov
sub
add
or
sub
fistps
test
addl
cmp
pop
scas
xchg
xor
add
push
sub
je
ret
aad
bnd
js
and
cmpsb
pop
dec
int
mov
lahf
mov
fsubrp
andl
dec
jns
inc
mov
push
push
pop
fildl
push
xlat
lcall
xchg
jae
jae
pop
sti
and
mov
sbb
lds
push
fildll
bound
scas
idivl
mov
std
mov
add
push
add
xchg
add
shrb
sbb
push
outsl
pop
jle
notb
cltd
push
cmc
jge
daa
aam
cmp
and
jl
push
pop
ficomps
fstp
or
enter
adc
loope
daa
jmp
lods
dec
rcrl
add
mov
lcall
iret
dec
icebp
lea
test
mov
and
push
pop
js
leave
jle
sub
mov
scas
cwtl
mov
je
je
stc
popa
std
fstpt
adc
mov
xlat
dec
inc
push
jnp
mov
xchg
mov
js
test
jne
mov
in
out
imul
xchg
out
xchg
inc
jge
inc
sbb
and
pop
push
push
test
mov
mov
test
das
cmp
pop
test
fiadds
movsb
inc
mov
xor
pop
mov
int
jo
inc
and
negb
hlt
adc
shll
testl
fbstp
das
cmp
sub
into
jns
inc
adc
mov
or
xchg
add
fs
enter
xor
test
cwtl
push
dec
aad
popa
add
and
mov
xchg
icebp
test
int3
sahf
mov
jle
push
inc
cmp
pop
imul
test
fimuls
test
lods
push
rcll
enter
mov
insl
call
dec
inc
or
push
pop
push
mulb
out
xchg
pushf
es
inc
imull
dec
mov
mov
mov
push
mov
jg
mov
mov
je
jne
push
sbb
cmp
pop
cmp
pop
sub
sbb
pop
lea
pop
stos
dec
and
lods
cld
add
popa
xlat
jmp
sti
add
mov
lock
lcall
test
cltd
xchg
xor
pop
dec
int3
ljmp
stc
adc
or
pusha
pop
cltd
sub
in
in
inc
sbb
jmp
bound
push
and
xchg
add
cmc
jmp
lret
push
xlat
jl
and
popa
xchg
pop
int3
mov
push
in
aad
push
stos
mov
adc
insb
jmp
test
mov
inc
cmpb
icebp
xor
out
lds
and
imul
jmp
jmp
mov
call
shll
in
or
in
addr16
lods
int
xchg
adc
enter
pop
outsb
cmpsl
push
and
dec
int
sbb
pushf
inc
mov
and
add
mov
dec
aas
popa
sbb
and
notl
pop
xchg
sbb
and
push
imul
sbb
push
stos
mov
ds
insb
push
lcall
sbb
xor
pushf
pop
jp
ret
push
push
imul
sbb
sub
sub
cld
mov
sbb
cli
lock
inc
loope
dec
and
and
fsubrs
fsubrl
lahf
sub
push
into
xchg
pop
add
pop
adc
out
add
adc
mov
xlat
adc
mov
les
push
jg
mov
lahf
fmul
daa
sub
int3
xchg
outsl
adc
mov
mov
lahf
loopne
lcall
mov
and
ds
inc
xor
xchg
rcr
push
ss
mov
push
push
mov
stc
mov
nop
jbe
movsb
adc
push
lods
in
daa
push
mov
mov
js
shl
ds
push
dec
push
pop
orl
cmp
into
int3
in
push
pusha
or
repnz
mov
ret
popf
addl
lods
mov
mov
andb
out
ret
out
js
and
mov
cmpsl
loop
jbe,pt
sti
sti
dec
fstpt
xor
stos
cmc
clc
xchg
mov
aas
mov
mov
sbb
push
xchg
data16
and
jno
lahf
or
and
adcb
imul
fadds
insl
fdivrs
popa
adc
pop
shlb
sbb
add
xor
mov
add
push
mov
insb
add
mov
stos
adc
scas
push
push
icebp
mov
ds
in
jns
movsl
adc
push
into
stc
xlat
fisubrl
or
cmp
sbb
loop
mov
inc
pop
xor
aas
pop
push
les
lret
insb
dec
pusha
cmc
mov
or
rcr
dec
ficoms
mov
cmp
ret
ret
xchg
and
lcall
dec
mov
fidivrl
repnz
pushf
cmp
mov
arpl
addr16
test
xor
push
push
clc
popa
push
sarb
fwait
dec
dec
cmp
cmpsl
das
mov
mov
jbe
adc
jp
in
fwait
jne
ss
or
cmp
filds
test
inc
dec
ret
int
xchg
test
cmpsl
or
pusha
push
enter
xchg
jno
xor
lret
xchg
xchg
arpl
mov
fimuls
jecxz
iret
sbb
jmp
push
adc
lret
je
xor
ret
jg
test
lahf
or
mov
daa
dec
shrb
dec
stc
pop
adc
fmuls
cltd
sahf
lahf
dec
stos
xor
jbe
adc
rclb
lea
mov
mov
shll
cmp
add
adc
pushf
std
push
push
aaa
aam
sbb
mov
push
mov
dec
fmulp
adc
adc
test
push
pop
dec
sbb
mov
sub
in
rol
push
popa
mov
xchg
push
lret
std
xchg
negl
dec
or
and
lods
jne
mov
jecxz
xchg
ret
adc
repz
cmp
xchg
aaa
adc
addr16
pushl
cmp
adcb
jp
mov
pop
inc
mov
andw
into
loope
and
add
xor
mov
cld
dec
mov
loopne
push
js
leave
sub
push
sbb
in
test
mov
cmp
jmp
pop
adc
addb
pop
adc
inc
mull
pop
fucom
push
mov
orb
cmpb
mov
dec
stc
adc
dec
adc
pusha
and
fsubs
hlt
mov
into
out
push
mov
adc
sub
mov
in
mov
popa
mov
dec
pop
popa
addr16
test
and
repz
dec
and
pop
pop
cmp
aas
lret
inc
ret
sub
dec
and
enter
sub
xor
bnd
out
popf
lods
pop
lret
push
cmp
jne
call
fwait
jno
jle
testb
mov
ss
jmp
mov
lret
cld
push
xchg
jg
test
out
es
push
test
jae
les
mov
fimuls
repz
xchg
aaa
lods
sub
cmp
sbb
ret
xchg
add
mov
hlt
sbb
and
lahf
lret
ss
cmpl
popf
pop
imul
fadds
xchg
xchg
ja
out
leave
ret
fstp
enter
cmp
test
popa
mov
out
fisttpll
std
out
sub
sub
jne
sbb
stc
sbb
fstps
cmp
out
cmc
push
cmp
lods
in
pop
popf
call
outsl
mov
pop
cld
and
inc
add
adc
and
xor
int
mov
xor
pop
and
mov
aad
xor
mov
movsl
addr16
inc
mulb
adc
dec
cmp
lcall
xchg
add
dec
ljmp
stos
add
dec
pop
call
rcrl
loop
pusha
jne
aad
and
sub
fs
sbb
push
dec
jp
cmp
xchg
in
mov
inc
out
out
sub
dec
xlat
inc
pop
stc
mov
mov
orb
push
jp
mov
pop
mov
adc
mov
shl
add
out
imulb
mov
popf
dec
or
sbb
popa
xor
sahf
adc
dec
inc
in
test
pop
xor
cld
repz
adc
pop
out
jbe
mov
xor
jae
outsl
mov
js
fmuls
push
in
das
jge
jle
sti
repnz
xchg
cmp
xor
mov
insl
add
fnstenv
jp
sti
inc
dec
jge
stos
xor
scas
push
icebp
shll
fsubp
mov
xchg
mov
pop
xor
mov
cmc
jge
sbb
mov
sub
fnstenv
mov
test
xchg
gs
mov
pusha
aas
push
add
sbb
inc
sti
pop
scas
dec
sub
in
push
int3
popa
mov
dec
jge
jae
stos
jmp
cltd
int
pop
inc
insb
ficoml
xchg
xor
sub
jns
add
sub
xchg
cmpsb
sbbb
mov
popf
movsl
mov
mov
mov
xor
xor
pop
rorl
mov
jl
lret
sub
clc
and
xor
or
hlt
stos
sti
pop
add
jmp
mov
xchg
or
push
sbb
push
jle
loopne
aas
popf
mov
xchg
aad
xor
das
push
icebp
mov
cmp
sbb
outsb
xor
scas
mov
pop
and
subl
ss
sbb
and
mov
pop
lret
jb
inc
add
xchg
std
in
mov
mov
rol
shl
jg
add
push
inc
lods
xor
cmp
repz
lcall
cwtl
jo
aas
aas
mov
out
pop
jle
push
fildll
sahf
mov
les
xchg
cmp
push
jl
pop
jb
mov
xchg
cmp
xchg
testl
jnp
cmp
pop
repz
mov
cli
leave
test
mov
je
cmp
add
cmp
pop
jo
add
xchg
adc
aas
mov
lahf
outsl
lcall
jnp
rorl
cmp
inc
xchg
push
fcomps
and
or
push
ljmp
das
data16
xchg
mov
add
mov
inc
add
movsl
adc
test
loop
iret
enter
ljmp
test
lods
fstl
and
dec
adc
pop
sub
out
sub
ret
enter
int3
mov
pop
cmpsl
ret
aad
inc
xchg
jns
iret
adc
out
cmpsb
push
xchg
movsb
add
das
cli
iret
or
mov
push
aas
mov
mov
xchg
mov
shl
jmp
insb
xor
fldt
and
mov
mov
aaa
add
and
sbb
in
dec
push
rorb
mov
adc
cltd
push
bound
mov
imul
pop
adc
ja
push
bound
add
jno
rcrb
mov
pop
test
test
clc
ja
sub
test
outsb
arpl
rcrl
mov
and
scas
mov
les
sti
xchg
adc
jmp
mov
pop
mov
fs
iret
les
rep
xchg
mov
xchg
rorb
xor
arpl
cmc
sub
push
mov
and
outsb
imul
xor
dec
insb
and
cmp
clc
mov
and
shlb
jg
or
mov
mov
jge
lods
jp
addl
loopne
xor
inc
mov
test
sbb
jne
pop
mov
test
xchg
jo
bound
xor
xchg
cmp
xor
data16
cli
lock
imul
jno
in
jle
fldcw
loope
xchg
push
gs
fbstp
mov
mov
insb
xchg
out
mov
mov
test
lcall
push
or
jbe
dec
xchg
loop
push
adcl
push
insb
jns
sbb
add
lcall
or
or
popf
jbe
nop
test
cmpsb
inc
jg
dec
push
xorb
or
lret
cli
cltd
xor
xor
loope
jnp
fdiv
jae
in
cmpsb
scas
jns
mov
repnz
jmp
ss
cli
jo
dec
movsb
mov
inc
movsl
push
div
inc
cmp
fisubl
in
inc
adc
push
in
outsl
cmp
push
add
data16
out
add
push
inc
cmp
push
xchg
push
fcoms
idivl
imul
pop
rcl
mov
mov
jns
dec
clc
sbb
jmp
int3
jb
push
pop
xchg
push
icebp
inc
cmc
push
fdivr
nop
inc
fistpl
lret
icebp
cltd
push
sub
lods
push
sbb
cmp
movsl
mov
mov
or
popf
mov
std
pop
sbb
pop
add
in
lods
insl
fcomps
adc
ja
xchg
fidivl
jl
or
filds
loope
out
jg
cld
mov
dec
adc
insb
andl
sbb
cmp
lahf
inc
addr16
xor
das
jne
sub
frstor
adc
jle
into
mulb
scas
stos
add
cmpsb
in
les
push
aas
mull
fs
scas
sbb
fimull
push
enter
dec
jp
gs
push
ret
jle
lock
jnp
inc
dec
mov
or
jo
aad
mov
stos
and
lock
shll
lret
rolb
xor
scas
push
jl
adc
and
mov
js
push
and
xlat
sub
xchg
int
int
xor
add
jno
pop
inc
xor
into
cs
xchg
int3
add
incl
test
adc
dec
or
jp
jle
push
and
cli
jne
and
pushf
pushf
hlt
xlat
jle
sarl
push
cmp
mov
mov
xor
adc
ss
jl
add
jp
pop
cmpsl
dec
into
shll
outsb
mov
stos
mov
and
out
movsl
mov
cmp
cmpl
pop
mov
mov
pop
jb
loope
jg
xor
into
iret
outsl
ja
cmp
jmp
add
mov
jg
xchg
stc
dec
scas
into
add
scas
jecxz
cmp
jo
mov
mov
or
jp
pushf
mov
cmpsl
xlat
push
loope
fwait
xchg
push
sbb
roll
pusha
mov
push
lds
dec
pop
dec
lea
sbb
data16
in
pslld
xor
ret
or
push
scas
stc
cmp
adc
fwait
es
xor
push
and
push
adc
repz
jl
mov
movsl
inc
sbb
mov
cmpsl
jae
lcall
js
adcl
test
or
insb
mov
flds
sub
rorb
in
cli
leave
divb
std
pop
xchg
dec
sub
jno
pop
and
mov
mov
mov
jo
inc
adc
push
or
push
aam
push
xor
data16
jp
push
xchg
addr16
push
and
movsb
add
cmp
mov
outsb
mov
dec
mov
xchg
push
push
int3
mov
xchg
out
lea
mov
js
mov
sub
loop
imull
int3
xor
movsb
pop
xchg
out
sbb
add
xchg
popa
scas
lahf
imul
lcall
cs
mov
rol
gs
jo
lret
xlat
add
nop
xlat
cmpsl
aad
inc
insb
lret
sbb
dec
aam
fs
push
pop
mov
mov
ret
lea
in
mov
out
ficomps
pusha
inc
pop
push
push
adc
or
push
stos
test
jle
jge
adc
mov
add
fimull
mulb
mov
aad
push
sub
cmp
dec
lret
aaa
jle
xchg
mov
rol
fstps
dec
hlt
xor
fcmovne
add
insb
popf
lods
pop
xchg
scas
pop
add
faddl
jecxz
dec
cmpb
cmc
adc
or
push
pop
mov
rcl
and
ret
popa
pop
adc
out
or
ret
adc
push
pop
dec
test
enter
mov
popl
lahf
jbe
jle
in
mov
stc
hlt
jns
pop
xchg
mov
mov
sahf
pop
gs
in
test
xchg
push
ret
jg
lcall
xchg
pop
repz
pop
popf
loope
hlt
inc
xor
adc
adc
cwtl
add
mov
inc
aas
sub
stos
xchg
ffreep
lret
pop
ja
and
or
loope
jnp
shlb
movsl
outsb
or
adc
test
aad
rol
ljmp
in
scas
fldl
xor
movsb
dec
add
xchg
sti
sbbl
popf
test
cld
std
xchg
std
sub
sbbl
jae
sub
cmpb
mov
push
loope
dec
jae
lock
xor
xchg
rorb
outsl
mov
divl
and
mov
repz
lock
xor
sbb
sub
push
xchg
pop
sbb
inc
xor
sbb
je
or
ret
cmc
scas
and
cmp
pop
adc
jae
lea
cmpsl
js
mov
aam
ss
push
dec
pop
int3
mov
insb
xchg
sti
mov
mov
insl
faddl
std
pop
or
inc
and
push
push
xchg
add
add
and
sti
sbb
rcrl
fcoml
mov
xor
lret
lcall
jle
inc
roll
lret
xor
fwait
mov
add
dec
hlt
in
test
add
adc
ret
pop
filds
int3
icebp
or
mov
sub
cmpb
scas
sub
fs
out
lods
test
jmp
cmp
or
shrl
cmp
je
fisubs
mov
fcoml
xchg
xchg
pop
fwait
out
test
rcll
fildl
inc
sbbl
loop
in
subb
hlt
in
xor
cwtl
jmp
cmpsb
xchg
mov
inc
cmp
pop
bswap
mov
int
mov
cwtl
fs
push
sub
mov
mov
movsb
jg
das
ljmp
fcmovnbe
jbe
fwait
sub
enter
xchg
and
les
test
xchg
xor
dec
pop
dec
cmpsb
sub
loop
mov
hlt
fisttps
jne
das
cld
add
mov
adc
and
in
adc
lcall
push
inc
mov
push
mov
mov
add
int
imul
mov
pop
pop
fldenv
pop
sbbb
push
ficompl
pop
lret
lea
pop
pop
and
cmp
fistpl
push
add
and
out
mov
lds
mov
xchg
adc
pop
add
mov
lods
fisttpl
xor
adcb
mov
pop
das
aam
in
enter
add
jg
dec
test
fs
push
add
sbb
dec
push
js
out
and
ljmp
mov
fsts
push
mov
push
inc
xchg
orb
lock
inc
inc
push
cs
dec
lea
mov
dec
mov
and
mov
int3
es
inc
push
sub
push
push
sub
adc
sahf
test
adc
inc
jo
insl
movsl
adc
mov
jnp
outsl
dec
lret
inc
out
jo
das
bound
xchg
push
mulps
sar
repz
adc
or
aam
aad
shll
pop
inc
push
or
cwtl
pusha
andb
lcall
rorb
push
cs
sub
xchg
mov
or
cltd
pop
into
jo
lret
mov
call
mul
push
or
sahf
sub
sub
sub
f2xm1
call
daa
inc
dec
or
lea
into
adcl
sbb
movsb
loopne
mov
mov
jmp
mov
adc
mov
cld
in
cmp
ficoms
dec
sar
xlat
push
pushf
sub
cmc
or
les
outsl
je
inc
leave
test
aas
jae
repz
lock
push
mov
pop
push
jle
in
ss
into
ja
adc
mov
hlt
pop
pop
xor
mov
lods
ljmp
les
sbb
fneni(8087
sbb
or
mov
mov
xorb
bound
pop
or
loopne
scas
sub
push
jbe
add
mov
mov
inc
push
lea
mov
insl
mov
pop
out
xchg
lods
pushf
inc
mov
imul
jmp
stos
jo
ret
push
push
inc
daa
mov
pop
mov
adc
cmpb
push
sbb
shll
dec
push
inc
outsb
pop
jb
add
sub
rcrb
lcall
insl
test
jle
test
and
outsb
orb
lret
das
push
push
and
fwait
pusha
or
pop
nop
sbb
adcb
mov
hlt
pop
jo
push
jnp
cwtd
mov
les
punpckldq
pop
arpl
enter
movsl
fsubrl
call
pop
lret
jg
ja
scas
std
lret
sti
into
xchg
mov
incb
into
roll
inc
popf
add
mov
mov
sbb
xchg
es
sub
cmpsl
adc
xchg
jg
mov
push
inc
xchg
cmp
and
mov
xor
jecxz
inc
mov
sbb
xchg
lret
mov
gs
frstors
mov
insb
mov
stos
stos
push
lds
pop
mov
xchg
loope
xor
push
mov
and
push
push
or
dec
and
xor
xor
xchg
sti
dec
add
out
cmpl
out
or
in
xlat
cmp
cmp
mov
das
xchg
sub
jecxz
mov
xchg
daa
leave
jl
rcrb
ret
pop
xchg
cltd
pop
cmp
jmp
jg
xchg
jecxz
cltd
lds
mov
sub
lcall
aam
cltd
fiaddl
cmp
jg
pusha
and
jo
xor
aas
ficomps
insb
inc
fidivrs
aas
sbb
lret
push
stos
mov
addl
add
je
jecxz
testb
scas
int3
lods
dec
mov
sbb
inc
testb
mov
push
inc
iret
in
jnp
xor
les
xor
movb
in
call
and
sub
icebp
jg
mov
icebp
push
ljmp
ret
inc
xchg
mov
jns
testl
cmp
mov
xchg
mov
insb
ss
cwtl
pop
xchg
cmp
push
cmp
in
pop
cmp
pop
add
aas
mov
loope
push
sub
pop
push
mov
and
sbb
push
hlt
push
cltd
call
loop
mov
xor
shlb
shlb
in
cli
cmp
in
mov
cmp
fimull
sub
jp
mov
mov
add
mov
xor
rcrl
test
out
or
sarb
or
jp
iret
xor
in
mov
pop
xor
scas
pop
imul
sub
cmc
adc
lcall
and
ljmp
loopne
bound
jmp
adc
lret
or
aad
out
push
movsb
pop
push
dec
xor
frstor
push
add
test
cmpsl
stc
or
xchg
jns
fwait
dec
imul
xchg
or
mov
and
stos
sub
aam
fsubl
lds
out
cmp
push
movsb
loope
insb
stos
xchg
sub
xchg
outsb
fidivl
inc
ja
add
push
xchg
popf
xchg
out
pop
add
sbb
call
mov
scas
in
movswl
loop
in
mov
imul
test
sbb
cmp
lods
jne
and
jo
or
shrl
mov
mov
addl
mov
loope
mov
jns
popf
mov
arpl
js
jl
ds
xor
jg
mov
and
std
xor
mov
clc
add
pop
jns
jne
lahf
lret
lock
pusha
aad
ljmp
int
push
add
addr16
test
xor
cmp
test
mov
lcall
mov
dec
mov
mov
pop
xchg
xor
mov
jb
les
int
jb
lds
stc
sub
loop
jb
sbb
cmp
mov
xlat
lods
and
or
cltd
mov
or
imul
pusha
out
iret
jnp
outsl
jge
push
xchg
push
lea
adc
sub
adc
pop
enter
loope
addr16
pop
movsb
inc
outsb
pop
rolb
loop
leave
xchg
adc
stos
repnz
ja
sub
jge
push
jl
mov
fists
mov
xchg
les
scas
xor
test
push
fldcw
lea
xchg
add
lds
pop
pop
cs
cmp
dec
cmp
dec
and
cmp
aaa
pop
lret
in
arpl
add
cmpl
jo
sub
fists
adc
dec
push
in
insl
dec
fistps
xchg
mov
jp
jp
cmp
pop
repz
sahf
jnp
arpl
mov
enter
xchg
lret
add
ljmpw
adc
shrb
imul
inc
add
popf
dec
inc
pop
mov
bound
xchg
mov
das
std
xor
sub
inc
iret
fmull
out
inc
aas
xor
pop
outsb
mov
sub
mov
daa
jno
testb
dec
xchg
sub
scas
push
jl
push
popa
cmc
xchg
mov
mov
jp
add
xlat
push
push
sbb
in
sbb
cmp
lcall
cmpsb
test
enter
and
into
cmpsb
lcall
inc
pusha
int
push
lds
mov
jnp
pop
repnz
sub
pop
cmp
pop
adc
ficompl
bound
shll
mov
cmp
jbe
test
movsl
popa
cmc
adc
jge
push
push
and
inc
adc
fcompl
jae
jae
movsb
inc
pop
xor
loop
jae
sbb
push
inc
pop
lods
aaa
pop
movsl
inc
fstp
jge
cmpsl
sbb
jl
push
sub
pop
stc
in
loope
outsb
ljmp
lcall
pop
cli
imul
shll
sub
push
and
pop
cmp
mov
lea
dec
cmp
mov
leave
xor
xor
inc
les
add
inc
stos
push
pop
ds
cmc
es
pop
mov
mov
cmp
mov
enter
hlt
push
dec
roll
in
pop
mov
sbb
shlb
std
lahf
imul
push
scas
push
mulb
xchg
mov
test
in
fnstcw
addb
cld
cmp
mov
inc
dec
stc
cltd
gs
dec
dec
pop
mov
lahf
push
cli
xor
cld
insb
out
mov
imul
mov
aam
arpl
and
xchg
int3
fxch
pop
inc
imul
cmpsl
repnz
scas
jb
sbb
movsb
or
ja
xchg
icebp
adc
stos
cld
sbb
das
mov
mov
mov
cmp
xchg
sbb
out
bnd
fs
or
add
mov
ja
dec
dec
mov
lret
xchg
inc
pop
sub
jns
popa
cmp
inc
psrld
sbb
out
jg
lods
jo
shrl
nop
ret
aad
dec
mov
sub
adcb
xchg
and
fisttpl
jp
xor
cltd
sub
lds
pop
mov
fdivr
imul
iret
fwait
xchg
popf
fwait
aam
or
imul
mov
cli
push
mov
jno
inc
js
mov
aad
push
lock
sub
or
scas
imull
lret
and
push
mov
dec
sbb
cmp
ljmp
add
xor
int
jbe
and
sahf
push
sub
into
test
xchg
rolb
push
xor
mov
dec
jae
cmpsl
mov
out
add
dec
ds
jnp
lock
jecxz
sbbl
scas
and
fmuls
jb
xor
xor
sbb
pop
mov
dec
adc
fildl
mov
add
mov
sbb
into
pop
jp
pop
test
lahf
and
out
lock
xchg
mov
mov
cmc
xchg
icebp
fcomip
notb
sahf
mov
or
xor
cmpsb
xchg
dec
jae
bound
cmp
mov
xsave
push
add
in
mov
mov
and
cmpsb
mov
cld
jbe
xchg
test
aad
inc
hlt
dec
sbb
icebp
jno
jg
sub
cmp
fstl
push
lret
es
mov
in
mov
mov
xchg
cld
lcall
cmp
jb
sub
mov
addl
andb
inc
fs
pop
leave
fisttpll
push
aas
imul
push
push
adc
leave
pop
xor
testb
mov
nop
pop
dec
outsl
leave
and
cmc
mov
xchg
mov
sub
bound
popf
jae
icebp
dec
jo
out
and
hlt
cmp
xor
pop
pusha
sub
ret
pusha
cmp
repz
xchg
adc
mov
mov
mov
adc
adc
in
popa
in
int
lret
sbb
das
jl
adc
adc
loopne
cld
add
inc
int
sub
clc
gs
inc
insb
add
sbb
mov
pop
pop
mov
add
insb
jno
fmull
rorl
hlt
dec
cmp
shll
or
lret
fisubrl
sbb
lds
xor
les
mov
daa
leave
sub
rcll
test
shlb
outsb
sub
in
cwtl
pop
loope
roll
insl
insb
add
lahf
int
scas
je
popa
stos
mov
mov
lahf
jge
fsubl
xchg
mov
jno
xchg
idivl
xor
mov
lahf
nop
movsb
xchg
aam
jle
das
shrl
test
leave
sub
lods
mov
out
ljmp
mov
inc
stos
sub
push
ljmp
out
mov
pop
ds
push
xor
xor
push
cmpsb
add
cvtps2pd
sti
sbb
lret
lods
adc
cmpb
xchg
rorl
cmpsl
mov
pop
or
mov
notl
add
les
xor
mov
sub
iret
xor
xchg
mov
lea
fstl
cli
dec
fs
sbb
mov
imul
dec
addr16
jnp
cltd
or
repnz
cmp
push
daa
loope
pop
pop
xchg
mov
pop
dec
mov
push
outsl
aaa
push
cld
pushf
gs
pop
xchg
lret
mov
cmp
mov
cs
sub
pusha
push
mov
jb
sbb
iret
cmp
ss
push
adc
and
cmp
dec
sahf
jno
iret
lret
mov
sub
fnstcw
mov
xchg
notl
dec
adc
inc
insb
and
mov
add
repz
pop
scas
and
add
jmp
ljmp
sbb
add
pop
adc
sahf
iret
inc
in
jecxz
out
mov
in
mov
gs
aaa
lock
cmpsl
and
cmp
sub
xorb
inc
sub
jmp
sub
in
mov
popf
and
pop
scas
or
out
cs
mov
xchg
mov
repnz
cmp
cmp
cmp
cmp
mul
pop
mov
lock
pop
sub
pop
sub
stos
sub
aad
mov
or
dec
adc
in
mov
pop
aam
scas
mov
push
sbb
into
dec
xchg
or
fimull
lret
jmp
adc
pop
pop
and
idivb
sbb
ffreep
popf
imul
movsb
sub
jno
or
rcll
xchg
push
clc
pop
and
int3
loopne
insb
jns
adc
shlb
xor
jle
mov
ds
ret
popf
clc
or
fcomps
in
mov
jo
shrl
dec
and
popf
push
outsl
or
ja
push
rcrl
mov
jbe
cli
push
xchg
pushf
or
cs
pop
pop
imul
lock
push
out
xchg
int
mov
ss
xchg
cli
push
loopw
js
push
shll
jl
or
pusha
mov
lret
xlat
addr16
jo
roll
repnz
repnz
stc
sbb
fiadds
pushf
pop
mov
sub
lods
sub
outsl
outsb
repz
push
fs
hlt
fidivl
push
lahf
push
cs
stc
xchg
add
mov
inc
mov
xchg
popf
cmpsb
cmc
dec
insl
roll
push
mov
les
mov
xchg
mov
hlt
mov
jecxz
pop
cmp
and
mov
ficoml
ret
mov
cli
or
out
dec
inc
add
scas
mov
mov
and
cli
adc
test
cmp
lock
cld
cmc
addb
xchg
xor
repz
js
fdivrs
adc
push
dec
and
rcrl
xchg
and
gs
dec
cmp
and
jns
mov
dec
int3
xor
mov
movsb
inc
add
cltd
adc
or
fnstenv
addl
push
dec
xchg
pop
cmpsl
sbb
jo
cmp
xlat
add
adc
es
and
test
pushf
mov
push
xchg
inc
mov
mov
repz
jmp
pop
xor
cmp
lahf
add
aas
push
mov
jg
stos
ret
cmp
popa
cltd
sbb
es
and
sbb
sub
lea
mulb
and
stos
mov
mov
mov
or
cmp
shl
and
xchg
jp
sub
mov
pushf
jg
mov
call
xchg
inc
or
out
ror
mov
pop
adc
je
in
stc
mov
cli
arpl
sub
js
daa
and
add
repnz
cmp
xor
insb
xor
aaa
mov
loop
mov
cmp
loop
mov
sbb
cld
pop
movsb
cli
fcoms
in
lea
push
leave
addb
pusha
adcb
aas
jg
push
adc
mov
int
push
pop
fidivl
jmp
cmpsl
dec
or
lock
jbe
andl
insl
fnstsw
ss
xchg
dec
add
loope
addb
stos
jg
cli
aas
inc
mov
or
shrl
mov
xor
pop
adc
add
or
fisubrl
lret
xor
stos
jne
xchg
testl
mov
cmp
mov
andl
cmpl
ja
sub
pop
mov
out
test
xchg
xor
or
bound
movsl
pop
sahf
jmp
aas
ss
mov
dec
xor
jge
cmc
test
jge
jge
pusha
lock
jb
lods
cmp
out
fstpt
mov
pop
ret
mov
cmp
dec
xchg
clc
insl
adc
inc
mov
mov
jno
or
lds
jp
push
jl
jg
dec
add
ja,pt
mov
lret
bound
sbb
pop
clc
cmpsb
mov
add
jp
andb
es
ss
sbb
movsb
sbb
in
in
lcall
adc
aam
setns
icebp
mov
stc
out
ret
shlb
sti
bound
fmuls
dec
jo
xchg
jne
sub
pop
cmp
mov
mov
ds
sbb
sbb
fsubl
loop
rcr
jl
push
xchg
sti
sub
adc
pop
cld
jne
loopne
call
pop
push
mov
mov
cmp
test
add
jns
out
sub
out
rcrl
hlt
jmp
sbb
cmp
lods
ret
dec
xor
dec
mov
add
cmp
fdivl
pushf
mov
mov
inc
ss
aam
lret
andl
xchg
test
jb
mov
jecxz
dec
sub
pop
and
mov
adc
and
mov
in
mov
xor
or
pop
or
pop
xchg
movsl
sub
insb
fnstcw
mov
pop
dec
imulb
pop
cld
test
jb
in
mov
mov
and
sub
xchg
in
jno
add
lock
jp
and
enter
daa
lods
sbb
les
add
outsb
pop
ffree
popf
push
pop
addr16
push
xor
sub
inc
mov
or
dec
add
je
mov
aad
jmp
cltd
shrl
cmp
dec
xchg
pop
mov
lds
cld
pushf
jmp
mov
or
jp
sbb
cmc
scas
ljmp
das
int3
push
or
lods
mov
inc
mov
cmp
sbb
mov
fst
daa
mov
push
out
push
cmc
xor
jnp
pop
and
xor
push
rcrb
dec
cwtl
cmp
outsb
cmp
sub
out
push
int3
fidivs
in
sbb
sbb
idivl
xor
into
in
fwait
out
fsts
pop
pusha
cli
pushf
xchg
rcl
add
cmp
mov
push
popf
ss
cld
push
mov
push
out
scas
add
insb
adc
out
xchg
or
call
out
jg
adc
push
xchg
frstor
xchg
and
negl
push
mov
push
mov
mov
aaa
icebp
je
lea
imul
out
aam
leave
mov
gs
insl
push
or
push
adc
pop
negb
into
inc
movsb
xor
push
fldenv
cmc
fbld
add
sbb
xor
sbb
xor
sarl
and
jb
and
sbb
sbb
enter
dec
call
inc
pop
dec
ljmp
cmp
inc
enter
fdivl
insb
and
cmc
out
or
icebp
lods
hlt
cmpsb
pop
stos
out
jmp
pop
in
lcall
aam
adc
lret
pop
or
movsl
cwtl
adc
cmp
aam
pop
jne
mov
and
loopne
fwait
in
jnp
sbb
push
mov
iret
add
scas
adc
movb
insl
in
and
sbb
push
leave
lcall
je
lea
lcall
pushf
push
aas
sti
sbb
cmp
lret
in
push
dec
mov
dec
mov
jge
testb
inc
stos
push
mov
xchg
icebp
mov
adc
adc
cld
adc
add
test
mov
mov
ja
mov
rclb
scas
xor
sub
cmp
pop
add
sub
aaa
jecxz
mov
adc
add
cli
outsb
jle
fadds
es
or
sti
fstps
fnstsw
out
data16
xchg
enter
in
xchg
inc
jge
xchg
dec
add
pop
xor
enter
data16
aaa
pop
ss
sbb
fstpt
cld
frstor
jne
sub
gs
call
push
lds
xchg
cmp
clc
out
in
ljmp
mov
cmpb
leave
mov
xchg
adc
pop
mov
or
fstpt
or
imul
inc
pusha
lods
jge
je
jle
pop
cmpsl
or
pop
mov
xchg
cli
and
cmpsb
roll
fnstenv
or
incb
test
dec
push
add
or
cmpsb
mov
pushf
cmp
les
fbstp
lret
jecxz
mov
loope
mov
loope
fimull
jns
sbb
mov
rclb
inc
iret
add
mov
mov
dec
and
push
loopne
cltd
mov
lahf
xor
fnsave
dec
mov
aam
xchg
fs
rcrl
in
movsb
movlps
enter
insb
inc
mov
lea
cld
in
mov
movsl
call
mov
fiaddl
mov
shrl
fsubs
xchg
lahf
clc
enter
mov
loop
xor
sbbl
push
addr16
test
jge
rolb
cmpsl
mov
leave
add
aad
rolb
out
sbb
leave
or
cmp
adc
out
rclb
push
fcmovbe
jle
and
jb
out
xor
mov
scas
sti
add
jl
lret
xchg
loop
cwtl
cmp
or
imul
sbb
cmp
sub
sbb
ret
enter
mov
ds
sbb
pushfw
sub
add
lea
inc
decb
jmp
dec
jge
add
mov
push
roll
xchg
aas
xor
add
sbb
fimull
and
hlt
fsubrl
js
mov
cli
xchg
mov
inc
fs
nop
sub
aam
mov
lcall
jmp
insb
je
pop
xchg
mov
insl
sarb
fwait
loope
and
mov
repnz
addr16
sbb
inc
xor
pop
inc
std
mov
ljmp
out
in
add
push
push
pop
je
mov
push
xlat
pop
mov
jle
mov
adc
dec
mov
test
mov
shrb
cmp
scas
cmp
popf
cmpl
lods
xchg
fs
or
aas
add
lahf
fcom
jno
add
cmp
enter
daa
mov
push
stos
add
mov
jmp
pop
pop
or
push
test
dec
or
lret
and
and
inc
push
jo
ret
jnp
sbb
cli
divb
daa
fwait
adc
inc
imul
rorl
data16
or
dec
aas
or
inc
emms
push
insb
es
out
jnp
add
add
adc
cwtl
movsb
vmread
sarl
adc
enter
xorb
jge
push
outsl
lret
xchg
test
mulb
out
imulb
in
clc
leave
mov
cmp
xor
pop
iret
or
cltd
dec
push
jb
pushf
push
push
sbb
mov
dec
sbb
mov
pop
sub
scas
jecxz
aad
mov
cmp
sti
jno
aas
data16
decb
lret
mov
adc
dec
je
out
pop
sub
std
jns
adc
inc
adc
xchg
into
rclb
aaa
push
imul
pushf
fwait
jmp
inc
addb
jns
cmp
stos
ret
add
dec
push
mov
out
iret
stos
aaa
lahf
xchg
xlat
push
outsl
fbstp
dec
arpl
dec
lods
mov
add
addl
jg
arpl
cli
fldt
lret
push
mov
jne
add
or
mov
mov
in
push
xor
pop
sbb
aaa
enter
cmpsl
out
xchg
mov
dec
xor
and
dec
jp
ja
sub
pop
lret
mov
pop
enter
mov
jl
lcall
adc
shlb
adc
sub
in
xlat
mov
sbb
mov
sub
sbbl
in
fistpll
xchg
ret
cltd
data16
or
repz
fsubr
pop
int3
outsl
cmp
push
fidivrs
insb
aam
cmp
ret
mov
push
push
inc
fsubrl
cmp
loop
cli
xorl
int
mov
into
popa
addr16
or
call
cmc
pop
bound
push
stos
and
mov
sahf
mov
push
stos
outsb
xchg
ret
lret
das
stos
pop
gs
adc
lods
ja
insl
in
bound
pop
testl
adc
or
and
add
or
xchg
cmp
cwtl
mov
adc
mov
popf
cli
sub
dec
adcl
ficompl
push
jno
adc
mov
xor
je
xor
rol
push
adc
arpl
faddp
test
pop
es
scas
jle
add
insb
bound
outsb
inc
or
std
test
pushf
and
push
pop
mov
outsb
mov
cmp
mov
mov
and
cmpsl
fsubs
imul
lret
sbb
push
pop
or
sti
adc
pop
rcr
icebp
out
push
imul
pop
ds
xchg
push
push
shll
std
mov
sub
je
xlat
add
add
xchg
jo
jo
inc
ja
shlb
sbb
mov
rolb
bound
lcall
cltd
inc
jbe
add
jns
mov
ljmp
add
pop
adc
loopne
sbb
fistps
cli
pop
xchg
mov
dec
in
cmp
mov
stos
adc
xchg
xor
jecxz
xor
inc
ss
push
imul
sbb
mov
sbbb
xchg
add
cmpsl
mov
and
popa
mov
jl
pop
jno
xor
out
jmp
mov
push
jbe
xor
xchg
cmp
or
fwait
pop
repnz
ret
loop
jns
mov
andl
imul
fwait
cli
adc
sbb
inc
inc
fists
sub
insl
inc
daa
movsl
dec
lods
xor
call
adc
xchg
call
xchg
adc
repz
push
ret
out
aas
sbb
iret
stc
int3
inc
fldenv
les
fdiv
stc
je
adc
scas
into
mov
rol
inc
xor
icebp
fdivrp
mov
cmp
sbbb
shlb
repnz
shr
dec
loop
movsb
add
jl
fistl
ss
mov
in
sub
iret
cmpsl
xor
aam
push
movsb
inc
sub
ds
jb
call
outsb
out
cmp
icebp
and
and
xchg
insl
or
or
mov
loope
not
inc
adc
jg
mov
mov
ss
leave
xchg
cmpsl
xor
les
sti
or
enter
outsb
jle
outsl
sub
mov
jae
xlat
icebp
iret
scas
adc
fisubrs
fdivl
mov
add
pop
cmp
stos
add
dec
inc
xlat
stos
insb
movsl
sbb
clc
cmp
cltd
xor
pusha
dec
nop
out
fildl
pushf
xchg
mov
cmp
test
out
rolb
mov
stc
and
push
insl
movsl
cmp
int
lock
fnsave
add
and
dec
cltd
sbb
enter
pop
jbe
mov
and
and
inc
test
inc
ficomps
dec
pushf
cltd
rcl
or
loopne
pop
int3
or
mov
pop
xor
adc
xchg
jnp
fs
cmpsl
popf
imul
rcr
nop
fnstcw
es
pop
xchg
aam
inc
sahf
sbb
adc
mov
leave
and
jno
pop
xor
mov
cmpsl
mov
push
aaa
mov
push
mov
dec
pop
cmpsl
bound
inc
cli
push
leave
addb
fiadds
loop
call
add
dec
sbb
lret
je
jns
jnp
inc
jmp
fldl
jb
jmp
scas
jb
cmp
mov
sbb
fs
add
sbb
jno
push
mul
mov
or
shrd
push
and
add
cmp
rolb
bound
cmpsl
push
adc
sti
push
adc
outsl
test
in
dec
pop
lea
outsl
ret
xchg
sub
jl
js
pop
ljmp
cmp
mov
ficoml
mov
cmp
es
insl
hlt
int3
push
jae
add
addr16
push
mov
or
xchg
clc
adc
iret
outsl
push
mov
push
cmc
push
out
mov
mov
cltd
or
loopne
push
xor
lahf
mov
rcl
rcrl
push
es
xorl
repz
xchg
mov
lret
fisttpll
mov
add
inc
hlt
or
outsb
nopl
add
jno
or
je
push
jg
and
lea
inc
sub
and
inc
mov
mov
cmp
sub
push
add
jmp
sarb
push
or
test
nop
mov
je
loope
imul
push
popa
rcl
mov
leave
aas
inc
or
add
leave
addr16
in
mov
aad
jg
loope
daa
stos
es
stos
sbb
out
xchg
call
loope
shrl
and
cmpsb
jge
sub
and
inc
mov
xlat
inc
test
lret
jle
call
shl
cmp
loope
jecxz
jae
push
add
pop
fisubrl
repnz
imul
sbb
pushf
mov
or
scas
adc
push
jbe
xlat
fnstsw
push
stc
mov
inc
push
dec
int3
aad
lock
fsubrl
jno
add
jle
add
je
inc
inc
push
dec
cmp
jecxz
idivb
in
leave
sbb
into
inc
lret
dec
lret
add
arpl
jo
or
fildl
imul
fdivrs
push
pusha
xlat
pop
pop
pop
dec
fadd
xchg
loop
sub
push
xchg
and
setae
or
loopne
das
sti
xchg
mov
ljmp
sahf
pop
inc
loope
dec
scas
sbb
lods
scas
sub
cltd
icebp
subb
pop
mov
outsl
mov
mov
cmp
adcl
or
xchg
dec
pop
pop
fisubrs
sub
jmp
inc
dec
cmp
int
pop
sbbl
imul
nop
movsl
sub
movsl
pop
imul
iret
imul
pop
pop
test
arpl
push
cmpsl
xchg
leave
inc
cmp
cmc
push
scas
les
loope
mov
dec
int3
out
cs
pop
mov
pusha
sar
test
test
push
inc
in
ret
mov
ss
inc
sub
jle
rorb
mov
std
push
push
mov
loop
shlb
jae
mov
cmp
loopne
cltd
or
and
dec
ds
lea
pop
inc
inc
test
js
stc
adc
mov
outsl
iret
mov
movsb
lea
cli
mov
sbb
jo
or
pop
jbe
push
mov
jecxz
daa
dec
or
sbb
cmp
dec
das
gs
cli
xchg
movsl
jae
movsb
ret
mov
into
ja
roll
out
dec
mulb
mov
es
loop
jl
inc
test
je
test
mov
shlb
push
repz
and
xchg
sbb
lret
mov
lcall
ja
jnp
imull
xchg
cmp
inc
inc
sahf
incb
push
push
sub
ss
daa
pop
adc
push
adc
fidivrs
dec
pop
or
dec
mov
mov
adc
in
mov
fwait
sahf
cwtl
jge
push
inc
into
jae
xchg
fcoml
inc
cmc
sbb
adc
mov
push
insl
int
out
rcrl
leave
cwtl
jp
testl
pop
jl
push
out
clc
sbb
xchg
fisubrs
hlt
divb
aaa
xchg
mov
sahf
fidivl
scas
sub
int
push
xchg
dec
dec
movq
int3
ja
test
out
and
aad
fwait
enter
rorl
clc
scas
sbb
icebp
pop
cmp
bound
sbb
xor
push
mov
fsubrs
jbe
pop
adcl
inc
sub
mov
or
movsb
imul
rcr
pop
scas
pop
xor
adcl
jno
rol
push
push
cmp
je
ret
mov
test
dec
and
jge
outsl
xchg
xchg
mov
in
add
cmp
loop
mov
add
lea
sub
ja
cmp
mov
in
fcomp
mov
add
adc
mov
sbb
mov
xor
dec
gs
lea
scas
int
arpl
movsl
gs
sbb
inc
neg
add
shrl
and
cli
icebp
lea
mov
bound
cltd
xchg
sub
add
jbe
mov
push
xor
jnp
loopne
lods
add
dec
fsubr
mov
inc
lret
inc
mov
test
rcrl
mov
jge
xchg
push
pop
das
push
add
cwtl
scas
push
int3
adc
xor
aad
xchg
bound
xchg
or
das
movsb
mov
fisttpll
mov
mov
addb
sbb
mov
jb
call
das
adc
addr16
xchg
mov
cvttps2pi
loop
lcall
out
or
jge
test
call
dec
jns
xchg
cs
pop
outsl
cltd
ret
outsl
pop
mov
aaa
pop
mov
cmp
sub
bound
sbb
mov
aad
adc
mov
jg
mov
rorb
aaa
testb
hlt
xor
pushf
jno
cld
repz
call
lods
fstps
bound
es
sub
out
lahf
sbb
xchg
jg
or
xchg
lcall
mov
rcll
push
das
sub
in
imul
mov
in
call
test
jp
jo
or
scas
add
mov
inc
loop
pop
cmp
adc
sbb
xchg
mov
scas
pop
and
mov
lock
bound
stos
int
fsubs
and
cmpl
xchg
daa
cmp
aas
mov
bound
fwait
xor
fildll
fsub
push
in
stc
sbb
mov
movsl
sbb
and
shl
jg
fs
dec
in
add
push
xor
mov
xchg
data16
and
xlat
sbb
scas
sti
push
xchg
xchg
mov
je
ss
adcb
ljmp
call
or
xor
jns
stos
push
lcall
ret
add
xor
cld
aas
pop
fcomps
leave
outsl
sub
mov
pusha
fcoml
sbb
mov
xchg
pop
jmp
pop
hlt
mov
add
les
cs
dec
lea
or
or
in
cmpsl
jecxz
xor
loop
sbb
cwtl
es
sbb
ret
jmp
aam
fisttps
sbb
push
addr16
push
shll
cmp
adc
roll
adc
xor
add
mov
jb
in
arpl
enter
mov
xlat
pushf
or
addr16
adc
mov
pop
int
enter
cmp
pop
bound
test
in
adc
lods
push
mov
adc
fwait
stos
pushf
iret
les
add
xchg
ss
filds
sti
sbbb
lods
aad
jle
cmpl
jp
div
and
inc
pop
insl
std
sbb
loopne
popa
cmpsb
nop
and
or
xor
cld
or
mov
and
aaa
aad
add
arpl
lret
ljmp
test
mov
cli
lahf
loop
adc
scas
cmpsl
cmp
sub
loopne
popa
jge
cltd
and
mov
mov
jae
clc
leave
jle
in
addl
xchg
and
cs
outsb
add
mov
cmp
shl
add
mov
jno
push
jno
pop
daa
dec
subl
int3
adc
repnz
fistps
jmp
xchg
out
xchg
mov
test
pop
or
sarb
in
loopne
add
cmp
mov
scas
cli
or
dec
jge
dec
dec
adc
sub
or
inc
icebp
scas
xchg
orb
out
sub
lret
dec
cmp
loope
jp
or
pop
stc
sub
lcall
addr16
pop
mov
jno
pop
jne
scas
addr16
add
adc
fdivp
hlt
xchg
int3
test
jo
sub
jne
push
test
jbe
mov
ret
stos
jge
ja
mov
adcl
lods
je
dec
pop
and
inc
push
aaa
adc
mov
push
testl
sar
jns
test
out
mov
fdivrs
insl
shl
ret
inc
movl
push
jnp
xor
push
jecxz
cmp
or
fistpl
fmull
dec
lock
push
mov
loopne
js
adc
jecxz
xchg
lds
dec
dec
ret
rcrb
stos
icebp
movsb
push
add
scas
orl
nop
jne
jmp
loopne
sbbb
mov
jmp
or
cmp
stos
mov
shlb
mov
push
inc
idivl
lock
sti
das
outsl
popa
add
sbb
xor
cmpsb
pop
fiaddl
xor
pop
mov
xchg
jb
es
jno
push
jnp
sahf
ss
ljmp
or
out
enter
dec
jnp
js
jno
inc
and
cmp
arpl
rcll
add
lock
flds
outsl
insb
jae
cmpsl
mov
mov
aas
cwtl
jno
sbb
mov
adc
mov
add
sbb
push
push
fmull
lea
inc
push
push
adc
push
mov
iret
movsl
dec
push
mov
jmp
add
cld
mov
mov
push
test
jecxz
pop
or
imul
add
cmpsl
loop
fisubrs
das
aas
inc
mov
adc
aas
mov
out
pop
mov
adc
pop
dec
pop
loopne
push
push
mov
mov
mov
daa
ja
scas
inc
mov
popf
xchg
jns
into
push
pop
iret
mov
jecxz
cmp
enter
mov
enter
and
push
add
ret
mov
xlat
dec
sbb
add
or
or
xor
or
mov
push
cmp
in
stos
pop
and
xor
cwtl
fildll
pop
jg
jmp
mov
add
pop
push
outsb
jb
push
das
inc
inc
loope
scas
pop
mov
adc
in
jmp
gs
jp
mov
stos
push
xchg
repz
inc
lds
adc
pop
add
and
jnp
mov
add
mov
adc
iret
inc
dec
jmp
jecxz
push
cmp
xor
pcmpeqd
leave
mov
shlb
cmpsl
inc
push
adc
hlt
mov
sbb
cmp
mov
adc
iret
test
mov
mov
repnz
xchg
popf
aam
mov
in
pop
inc
push
push
hlt
iret
add
insl
sbb
or
adc
push
xlat
bound
je
dec
lahf
aas
call
cmp
loope
fldz
pop
add
fstpl
popf
cmp
inc
xchg
imul
jmp
and
cmp
xor
dec
push
mov
sbb
lock
jno
mov
int
fcoml
sub
push
mov
xchg
push
dec
enter
lahf
cmp
sub
and
insb
in
shr
push
int
testb
ljmp
out
stos
mov
cmp
or
data16
jo
push
push
pop
mov
and
pop
fidivrs
and
mov
push
cmp
outsl
mov
adc
add
testb
fmull
sub
adc
inc
ret
pop
fstpl
sbb
add
fldenv
imul
out
popf
movsb
les
mov
xor
mov
mov
les
int3
dec
mov
sub
pop
jl
fidivl
dec
or
pop
or
ja
ljmp
je
sub
call
int3
pop
ljmp
xchg
jecxz
sbb
shrb
sub
insb
sbb
cli
mov
inc
addb
and
and
pusha
fidivl
jnp
push
es
adc
xor
lahf
xor
xor
mov
stos
sub
jp
test
sahf
movsl
push
insb
and
cmp
sbb
jae,pt
xchg
lahf
pop
movsl
adc
push
mov
loopne
int3
repz
add
out
xor
lcall
iret
lahf
jb
insb
sub
dec
notl
push
imul
jno
mov
sbb
inc
pop
and
popf
xchg
mov
sbb
or
sbb
mov
sahf
rcll
js
and
fnsave
into
or
mov
cmpsl
push
xchg
lret
adc
mov
mov
stc
push
xor
and
push
or
stos
mov
out
and
shr
mov
mov
in
sbb
fs
movsb
divb
fdivrp
pop
xor
adc
jns
xor
lods
xor
and
jnp
inc
and
fcmovbe
int
or
adc
jo
jmp
int
out
adc
sbb
cmp
pop
js
and
mov
sub
inc
cli
push
loope
adc
pop
cmc
lock
ficoml
clc
inc
adc
sbb
out
cmpsb
mov
jns
cmc
addl
pop
dec
mov
mov
jo
mov
sbb
mov
cs
sub
mov
scas
xchg
inc
jecxz
sbb
or
aad
adc
push
sbb
shlb
mov
stos
into
cmpsl
cmc
pop
fbstp
shll
stos
mov
jl
pop
or
insl
inc
lds
lcall
cmpl
stos
xchg
popa
mov
cmp
add
js
mov
xor
pop
cltd
call
mov
mov
xchg
cmp
test
jo
ret
mov
dec
mov
aam
add
mov
movsl
sbb
or
cmp
xchg
loope
scas
test
sbb
push
jno
inc
mov
xor
push
push
xchg
push
mov
scas
mov
xchg
ret
add
cltd
cmpsb
rcll
pop
dec
mov
push
dec
clc
jecxz
sub
mov
mull
xor
jae
shll
pop
aam
mov
out
ret
pop
test
pop
mov
and
add
jmp
and
sbb
or
mov
mov
mov
out
pusha
pushf
push
push
shrb
xadd
in
iret
mov
jne
divb
jns
mov
adc
xchg
repnz
sarl
push
push
nop
mov
push
leave
sub
inc
cmpsl
xor
dec
addb
sbbb
mov
xchg
push
sub
xor
pusha
lds
js
xchg
sbb
call
pop
pop
add
insb
stc
mov
mov
dec
push
aaa
sbb
lret
adc
xor
lea
cmp
push
pop
push
lcall
jae
or
fiadds
or
fimuls
adc
insb
xchg
les
mov
test
sbb
add
pushf
jle
out
rorl
dec
lods
mov
aas
ja
fnsave
jg
cmp
mov
push
repnz
adcb
imul
jmp
jnp
and
test
sub
shrb
pop
in
jmp
lods
std
mov
inc
out
test
mov
or
xor
shll
bound
pop
sbb
adc
jne
push
rcr
mov
into
rolb
imul
or
cwtl
pushf
pop
cmp
mov
out
ds
out
xor
lret
out
faddp
pop
xor
stos
mov
repz
mov
aaa
xlat
and
shlb
mov
lahf
fs
dec
hlt
push
jns
rclb
pop
sbbb
imul
arpl
test
mov
mov
or
dec
sbb
jno
or
cmc
xchg
dec
mov
cmc
in
mov
add
lock
mov
xchg
shrl
aam
xor
inc
fsubrs
shlb
pushf
fisttpll
dec
push
movsb
fsubrl
shl
push
fcoml
outsb
aas
add
adc
std
fldt
test
pusha
xorb
inc
dec
pop
jno
sbb
loope
sbb
not
ficomps
data16
sti
shl
sahf
mov
sbb
add
mov
cmp
notl
push
cmp
call
pop
jge
push
mov
mov
mov
adc
or
mov
shrb
add
sbb
sbb
pushf
xor
test
lock
mov
and
sarl
adc
int
call
or
inc
or
fldenv
xchg
sbb
lret
std
test
sub
mov
clc
mov
inc
clc
pop
scas
iret
dec
jge
test
xchg
rclb
test
and
and
gs
cwtl
sub
cmp
jno
ss
pop
ljmp
jg
push
dec
or
mov
call
and
push
popf
push
dec
in
inc
xor
movsl
cs
sub
fists
add
inc
jmp
sub
mov
cltd
xor
cmp
jmp
imul
jle
fst
and
repnz
lahf
and
sbbb
das
mov
ss
sub
insl
call
add
push
cwtl
cld
in
mov
mov
fildll
lods
pop
sbb
push
stos
jge
pop
daa
int
js
add
add
sti
insl
cmc
popf
sub
test
or
mov
jl
rcrb
sahf
adc
add
or
jnp
or
test
leave
mov
jbe
iret
lds
scas
adc
add
outsl
ret
in
decb
out
cmp
pop
xor
cltd
repz
and
and
jnp
push
inc
push
mov
pop
sbb
sbb
jnp
jns
gs
or
push
das
fwait
sti
push
fs
or
push
das
loop
push
mov
sbb
cmp
and
adc
pop
xor
int3
pushf
fbld
sti
ja
das
inc
loope
mov
fwait
inc
sarb
push
popa
dec
loopne
repnz
sar
imull
dec
jb
pop
fwait
push
or
cmpsb
mov
dec
xchg
stos
jg
pop
daa
xchg
adc
outsl
inc
repnz
push
cmpsb
push
cmc
lret
cmp
sub
das
sbb
cltd
jb
push
dec
scas
inc
dec
notl
pusha
jl
dec
in
sahf
aam
leave
out
push
sub
lea
pop
adc
mov
mov
jecxz
rclb
out
xchg
cli
adc
cmp
ds
sbb
push
jl
fmuls
adc
mov
adc
gs
pusha
mov
into
push
cmp
jbe
ja
or
fdivp
sub
xchg
and
pop
addl
mov
out
lock
sbb
lea
mov
jne
push
mov
dec
inc
lea
cld
inc
loope
pop
lds
jne
jno
and
dec
subl
cwtl
pop
inc
and
lods
mov
push
in
xor
fnsave
test
or
adc
fs
and
aam
shll
pop
sbb
mov
sub
add
adc
pop
sub
scas
cmp
int3
mov
insb
dec
negb
cld
push
mov
xor
std
or
jae
dec
pop
jp
cmp
pop
or
ja
fistl
lods
loop
and
js
dec
cmc
mov
add
dec
sbb
scas
icebp
js
rcll
daa
int3
dec
sub
pushf
xchg
orl
cmp
dec
push
dec
mov
jge
inc
repz
mov
sti
push
enter
adc
and
jnp
ss
test
lock
adc
pop
popf
popa
sbb
sahf
jl
iret
jne
bound
sbb
cmpsl
fsubs
cwtl
xchg
xor
les
dec
push
movsl
cmp
add
pop
ja
sti
dec
sbb
xorl
sbb
fcomps
mov
icebp
xchg
cwtl
push
daa
aad
in
lahf
jecxz
or
mov
and
sbb
lods
cmc
ret
shrl
xor
ja
or
jno
pushf
mov
clc
pop
and
cld
sub
inc
movsb
jmp
loopne
fcomps
and
mov
out
adc
sub
clc
lock
lods
or
int
test
lahf
mov
sub
mov
cmpsl
sahf
nop
push
xor
inc
xchg
pmovmskb
adc
xchg
inc
rolb
add
stc
sub
cmp
adc
jge
push
mov
aaa
js
lret
pop
pop
jno
adc
xchg
or
sbb
shr
mov
negl
lods
pop
movsl
mov
sbb
jl
shrb
add
shll
xchg
inc
ss
dec
xchg
jbe
mov
sub
ja
scas
cmp
cmp
test
jnp
dec
hlt
addl
dec
xchg
mov
mov
or
pop
int3
mov
sbb
inc
xor
mov
outsb
add
out
lds
shlb
movsl
lds
mov
dec
and
ficomps
mov
cs
inc
jge
sbb
push
out
mov
test
leave
jns
pusha
mov
or
imul
movsl
push
rcll
aam
inc
loopne
push
aad
inc
mov
enterw
dec
push
mov
mov
out
xchg
mov
xchg
adc
adc
push
in
test
adc
jg
lahf
dec
add
std
jle
lds
out
ja
mov
pop
cs
aad
test
arpl
adc
mov
sbb
fcmovb
iret
cmpl
inc
hlt
iret
add
sub
ret
xchg
imul
add
pop
push
imul
cli
out
cli
sahf
sbb
mov
adc
mov
nop
hlt
lret
pop
test
ljmp
lret
ljmp
repnz
push
pop
jp
lds
dec
pusha
mov
jp
in
or
in
cmp
cltd
and
cmp
aam
jae
pusha
pop
sub
jne
out
dec
xor
xor
aam
fs
ret
das
cltd
push
jnp
pusha
jno
sbb
je
xchg
push
pusha
lahf
pop
sbb
xor
insl
xlat
sub
inc
adc
xchg
xchg
push
js
lods
and
movsl
iret
cmp
out
jl
scas
popf
sbb
and
popf
call
aam
mov
mov
push
inc
dec
cmp
repnz
and
imul
pop
push
mov
stos
ljmp
jle
iret
cmp
imul
dec
xor
pop
sub
pushf
jnp
add
add
cmp
cmp
loop
push
rcr
jae
fwait
loope
mov
xchg
into
pop
mov
fdivs
loope
mov
xorl
or
into
jg
mov
lock
cli
jecxz
jbe
imul
jmp
jge
sbb
sub
test
sahf
shrl
cmp
add
sbb
push
mov
int3
pop
xlat
xlat
lea
ljmp
cli
negb
icebp
sub
jg
xlat
movsb
push
hlt
aas
cli
mov
xchg
and
les
loopne
test
pop
jmp
int
xchg
ret
addl
clc
scas
mov
inc
stos
lods
push
push
sub
mov
xor
mov
imull
add
dec
xchg
or
or
sbb
cmpsb
inc
inc
mov
push
insl
xchg
fists
aas
cmpsb
mov
sbb
mov
loop
repnz
into
roll
scas
addr16
xor
insl
xchg
lret
inc
pop
das
jle
cli
lcall
jns
adc
add
fsub
inc
into
ja
mov
fistpl
fdivl
stos
stc
adc
dec
loopew
and
dec
add
lahf
push
mov
jg
push
adc
add
jbe
lea
inc
imul
aaa
pop
or
jnp
ret
and
jae
std
xchg
fdivrs
and
xchg
and
cwtl
cs
mov
shl
lds
mov
jmp
ja
mov
lock
pop
jle
repz
mov
mov
shlb
sbb
loope
xchg
rcll
test
mov
mov
ss
mov
jmp
jno
rorb
mov
jp
sbb
repnz
sbb
iret
mov
adc
sarl
js
pop
cmp
daa
add
aad
sub
add
dec
lods
inc
hlt
cli
es
or
pop
lods
push
fldl
vmwrite
leave
mov
pop
xchg
and
mov
mov
mov
sti
les
mov
mov
inc
leavew
mulb
sub
dec
int
mov
jno
inc
je
call
loop
fwait
mov
popf
xchg
jp
lcall
cltd
movsb
outsb
push
sub
sbb
or
inc
cwtl
movsl
mov
adc
pop
inc
jno
cld
push
push
adc
xor
jl
inc
mov
aam
sbb
lock
in
dec
push
mov
ret
mov
stos
xchg
mov
mov
fbstp
and
rcrl
nop
push
and
movb
fisubs
or
fisubs
jbe
inc
sbb
sub
fwait
ljmp
jecxz,pt
xor
ja
test
sahf
sti
negl
mov
jp
jns
sbb
movsl
and
ds
push
int
mov
les
mov
test
push
or
sbb
and
cmp
cs
in
fidivrs
fwait
je
mov
dec
xor
cmp
fs
fstl
jmp
xor
jnp
cmc
mov
insl
lret
pusha
mov
insb
dec
inc
out
add
adc
push
jmp
addr16
popa
iret
adc
sub
adc
jo
outsb
mov
jbe
int
lods
sarl
and
lea
mov
ss
push
out
dec
mov
scas
push
push
andl
enter
repz
lcall
push
and
xchg
shrl
pusha
xchg
jnp
aas
cmpl
sub
cwtl
push
stc
lods
sbb
push
sub
push
mov
cmp
mov
push
test
pop
mov
mov
lock
je
xor
jbe
push
loope
mov
sbb
or
int
idiv
jo
ret
cmp
popf
aaa
cli
arpl
gs
push
push
int
fsubrs
icebp
xchg
rclb
in
das
mov
lret
inc
mov
insb
loop
cs
movsb
enter
mov
stc
jmp
inc
mov
rorb
jbe
test
fisubrs
sub
pop
jns
inc
mov
sub
add
insb
sub
and
jmp
dec
adc
dec
push
xchg
je
daa
or
outsl
mov
and
leave
negl
cmp
add
sub
das
aam
dec
in
fwait
out
cmp
mov
and
cmp
jb
inc
jnp
xor
xchg
adc
das
cmc
pop
movsl
loope
jns
loope
mov
or
mov
popf
test
jnp
mov
in
jns
sbb
xorl
mov
repz
lock
sub
or
add
jne
and
inc
add
shll
roll
xorb
push
push
js
imul
fimuls
jp
mov
push
dec
dec
adc
icebp
mov
sbb
or
and
and
fwait
lods
shlb
sbb
mov
das
jo
mov
fnsave
mov
mov
add
or
push
add
mov
fldcw
sbb
stc
lret
mov
xchg
scas
push
jnp
arpl
dec
ret
dec
mov
cltd
ljmp
loop
mov
lock
iret
inc
lret
and
aam
insl
int3
movsb
add
shrl
sbb
cmpsb
sub
jmp
test
popa
lock
sbbb
jg
dec
andl
decl
loope
pusha
imul
sbb
aaa
or
mov
rcll
or
lea
in
jne
cmp
bound
shr
into
movsb
jle
adc
stc
loopne
and
ljmp
and
lcall
repz
add
ret
mov
ss
and
lock
lea
cmp
test
push
add
lahf
dec
shlb
int
std
cmp
mov
cmpsl
pop
ret
out
fdivrs
sahf
pop
mov
leave
out
arpl
fidivl
lret
and
repnz
push
add
ficompl
pushf
inc
cwtl
les
sahf
push
lock
jmp
insl
inc
test
cmpsb
xchg
push
dec
mov
daa
movsl
inc
mov
test
cwtl
jp
push
cmp
in
dec
stos
xor
mov
stc
mov
stc
and
out
mov
xor
mov
jb
mov
ret
pop
cmpsb
sbb
cmp
enter
imul
test
adc
mov
fimull
ja
mov
popa
mov
daa
cmpsb
loopne
push
jae
ret
repnz
xor
popa
adc
pusha
outsl
cwtl
jno
mov
mov
jle
and
ret
imul
sub
adcl
mov
clc
mov
and
in
pushf
fcomps
lahf
mov
xchg
adc
das
cli
arpl
into
fldt
jo
mov
mov
push
loop
add
mov
xlat
out
int3
mov
daa
push
faddl
push
hlt
add
mov
inc
mov
sbb
je
aaa
sbb
adc
cmp
clc
jne
in
ljmp
push
insb
sahf
dec
negb
push
mulb
dec
out
lret
xchg
push
pop
mov
gs
add
sub
ss
xchg
pop
push
nop
and
int3
mov
mov
pop
xor
fsub
mov
imul
lods
adc
add
rclb
mov
clc
fldcw
jle
fwait
movb
outsb
cmp
jo
lret
mov
dec
testl
and
mov
nop
addr16
sub
mov
mov
movsl
pushf
test
push
inc
mov
sbb
cs
push
das
or
mov
xor
cmp
mov
aas
dec
dec
ljmp
aaa
xchg
inc
jne
cltd
stos
bound
insl
mov
icebp
out
gs
mov
movsb
push
test
addr16
mov
jo
int
cmp
sahf
out
out
cltd
inc
repz
fisubrl
fwait
jne
xor
push
notb
adc
and
test
inc
test
ljmp
jnp
add
mov
cmp
mov
enter
dec
inc
mov
lods
mov
mov
push
pop
popl
popf
stos
in
mulb
jecxz
xlat
fsubrp
rclb
push
pop
bound
or
icebp
or
icebp
and
in
xor
daa
ljmp
sbb
jge
jne
xor
mov
sbb
hlt
xchg
sbb
sti
sub
pop
xchg
jmp
jns
cmp
push
or
dec
mov
repz
pop
jae
data16
sbb
xor
sti
mov
sbb
lock
cmp
rcl
cmp
pop
and
int
xor
jne
popa
out
fmul
out
test
pop
mov
sub
xor
repnz
or
push
adc
fldt
inc
cmp
xchg
adcb
mov
mov
cltd
inc
sar
pop
out
and
aad
adc
jg
loop
xchg
addr16
lahf
icebp
jo
dec
mov
movsl
shrl
lret
mov
sub
pop
xor
in
mov
and
inc
xchg
popf
mov
dec
pop
dec
int3
inc
jg
movsb
adc
movsl
or
mov
icebp
sbb
ret
pop
icebp
sbb
stc
loope
mov
jns
in
mov
xlat
cmpsb
filds
out
aam
sub
push
cmp
sub
jbe
mov
js
popf
dec
cmc
rclb
jecxz
aam
stc
adc
aas
mov
sub
jb
mov
xor
mov
sbb
stos
ds
fldt
xchg
or
xchg
mov
mulb
add
xchg
dec
je
aaa
cmpsl
das
and
cli
inc
insb
sub
mov
jno
xor
pushf
mov
popa
xor
test
repz
in
jns
insb
xor
ds
xor
daa
sti
mov
and
rcl
push
push
out
pop
lods
xchg
xchg
incb
inc
rolb
or
mov
iret
mov
gs
mov
inc
shlb
ljmp
setnp
and
sbb
add
repnz
adc
js
test
mov
cmp
arpl
jmp
addb
mov
xchg
ljmp
dec
shlb
in
sbb
movl
adc
xor
add
add
inc
dec
mov
add
add
push
arpl
movsb
outsl
inc
insb
mov
xchg
sarb
fsubrl
negl
push
xchg
adcb
mov
xchg
cld
mov
jp
hlt
repz
jle
mov
sbb
cmpsl
mov
test
in
inc
push
cmpsl
roll
jp
dec
or
push
fwait
mov
les
or
xlat
or
mov
popf
push
clc
and
push
stos
pop
push
imul
mov
and
sti
mov
loop
idivb
fwait
dec
dec
mov
out
mov
incb
dec
arpl
xchg
pusha
lahf
jne
cld
jb,pt
inc
mull
dec
cmp
sub
push
xchg
add
pop
push
xchg
mov
dec
scas
xlat
daa
insb
in
cmp
jp
cli
orl
addr16
ljmp
or
cmp
fdivl
in
fwait
inc
xchg
add
cmp
jae
sbb
push
jne
jno
scas
fs
bound
mov
cltd
cmpb
movsb
xchg
and
xor
pop
pop
cmpsb
dec
pushf
repnz
jb
cmp
xor
lea
cmpl
std
pop
adc
lahf
ja
popa
push
cmc
push
jle
loop
xor
in
jno
push
dec
pusha
push
jp
in
test
test
lcall
fwait
pop
adc
cs
rorl
sub
dec
or
dec
int
fsubl
sbb
sub
cmp
xor
out
out
jle
pop
jae
mov
or
divb
mov
popa
jb
jg
sarb
cltd
test
ret
cmp
push
imul
in
mov
cmp
lods
push
push
fcoml
sbb
sbb
ret
aad
sub
xchg
ss
nop
add
cwtl
idivl
push
shl
lods
daa
jne
loop
cwtl
mov
mov
dec
sub
inc
fs
adc
aas
lret
pop
cmc
cmpsb
mov
mov
push
mov
leave
jge
in
push
ljmp
imul
ret
fs
popf
call
aaa
jae
popf
addl
mov
fsts
shl
xor
or
mov
lcall
ljmp
and
xor
es
fcomps
mov
repnz
iret
fistps
faddl
inc
push
shlb
dec
push
negl
bound
stos
insl
dec
leave
add
pop
pushl
sub
inc
clc
icebp
or
mov
or
dec
andb
jno
push
fsubp
sbb
je
std
mov
sbb
push
shr
jge
xor
int
int
pushw
inc
imull
xor
in
xchg
xor
pop
mov
mov
inc
mov
inc
or
sahf
lcall
std
rolb
mov
adc
dec
repz
xlat
ss
fists
jmp
jge
sub
push
sbb
or
mulb
push
nop
xchg
pop
inc
hlt
xor
fcompl
xchg
pop
pop
lock
aas
push
adc
jno
mov
push
repz
mov
in
xchg
cltd
ljmp
inc
inc
lock
or
sbb
aas
and
sub
aas
movsl
fidivl
inc
cmp
adc
dec
test
das
push
dec
loope
jae
push
pop
mov
jmp
das
or
sbb
mov
xlat
push
mov
jbe
loope
mov
fcmovne
inc
shlb
and
je
shll
add
mov
and
jmp
xchg
shll
inc
je
mov
cmp
jp
rclb
cmp
or
adc
lods
jl
repnz
aam
mov
leave
das
push
push
jnp
cmc
cmpsb
loope
sbb
cwtl
aas
add
in
push
pop
and
pop
or
jmp
dec
call
and
cmp
adc
in
iret
icebp
cmp
xchg
xor
repz
scas
or
add
push
adc
in
push
insl
fmuls
jp
out
int
jbe
aaa
adc
and
dec
out
fwait
jae
inc
push
shr
add
xor
out
or
filds
mov
mov
lret
scas
cmp
push
es
mov
pop
mov
cld
fidivrl
xor
push
mov
dec
add
idivb
xchg
dec
adc
into
scas
stos
pop
pop
mov
jle
enter
mulb
ja
inc
ljmp
xchg
inc
popa
xchg
orl
scas
and
jg
lcall
in
lock
pop
ret
sub
leave
outsl
ss
clc
inc
int
add
in
movsb
push
movsb
xchg
leave
mov
aad
pop
jp
rcr
push
fistpl
mov
pop
lahf
mov
stos
adc
fiadds
add
fisubs
mov
stos
push
repz
jne
shrb
loop
mul
dec
jge
insb
pop
pop
cmp
xchg
push
xor
sub
es
ret
pop
sub
loop
js
sbb
or
jg
pushl
add
push
adc
testb
push
xchg
rcrl
popf
popa
ss
xchg
cmpb
inc
aaa
push
icebp
mov
mov
or
aaa
adc
shll
decl
fildll
pop
xchg
inc
sub
fbld
subl
xchg
xchg
sbb
insl
xlat
push
rcll
inc
lahf
xchg
or
fisttpl
scas
lds
cmovno
and
push
jne
inc
daa
push
inc
inc
shll
mov
popa
pop
pushf
fdivrs
testb
jmp
adcl
xor
scas
or
jmp
adc
addb
aam
fisubl
lea
or
sahf
stc
hlt
mov
in
das
xchg
jo
xchg
xor
push
daa
pop
inc
test
xor
sub
fldenv
or
sub
ja
in
imull
loop
loopne
out
lret
or
add
inc
andb
ja
add
jae
inc
pop
mov
jle
out
aad
adc
xchg
push
mov
mov
adc
cwtl
cmp
scas
mov
outsb
shrl
int3
cld
jne
ja
push
add
pop
lea
jl
add
and
and
pop
xor
push
setbe
fisubrl
jnp
pop
xor
popa
cld
mov
mov
and
fists
into
test
negb
ja
fidivrs
sub
out
div
mov
fnsave
mov
int
jae
sub
mov
adc
xor
mov
shl
inc
cmp
in
pmaddwd
pushf
loope
mov
negb
jns
dec
jecxz
xchg
mov
test
or
and
je
xchg
cmp
inc
les
xchg
hlt
xchg
scas
jle
lret
xchg
sbb
into
scas
test
pop
lret
jecxz
xchg
push
icebp
movsb
sub
mov
mov
xlat
imul
inc
mov
xchg
mov
jmp
out
inc
sarl
aad
jge
jmp
push
or
xchg
adc
sub
ljmp
addr16
cmp
repnz
mov
push
fcoml
stc
add
xor
add
mov
and
in
out
pop
dec
mov
lahf
and
mov
pusha
add
mov
pop
push
push
mov
or
jbe
or
fisttpll
or
loopne
jb
cmp
test
into
dec
leave
push
xchg
cmc
sbb
das
pop
mov
in
cmp
or
cli
jp
pop
cmp
inc
push
mov
cmp
fdivrs
imul
xlat
sbb
dec
scas
xor
pop
insb
scas
in
add
mov
cltd
mov
lods
popf
lahf
insl
aad
mov
fsub
int
jnp
push
push
and
stc
jmp
jg
nop
or
fwait
test
ficoms
hlt
hlt
test
jno
xor
int3
push
sub
rclb
fcmovu
popa
pop
lea
loopne
mov
movsl
pop
rorb
push
cmp
fildll
ljmp
adc
aam
or
nop
divl
testl
and
dec
jae
or
js
sbb
dec
xor
enter
add
test
loopne
arpl
add
sarb
cmpsb
lret
dec
adc
inc
outsb
sub
es
faddl
and
hlt
mov
xor
es
scas
sub
inc
add
and
or
mov
hlt
outsb
fsubp
and
fisubl
xchg
sbb
mov
jecxz
mov
out
ljmp
cmpsl
movb
dec
gs
lds
iret
add
cmc
push
bound
daa
jp
dec
mov
add
imul
fucomi
out
jbe
push
push
cwtl
imul
test
imul
sub
lcall
fdivs
mov
popa
mov
inc
pop
mov
mov
fdivl
and
je
jbe
xchg
imul
fst
rcl
fcoml
dec
clc
or
lret
fisttps
bound
addr16
push
inc
lahf
dec
and
cmpsb
or
ficompl
sti
popf
lret
jae
test
cmp
jbe
out
cmp
imul
fmull
push
hlt
jmp
mov
pop
jecxz
push
imull
ja
pushf
and
mov
mov
and
push
scas
sub
popf
jg
repz
adc
inc
ss
lock
jmp
or
inc
adc
xchg
jecxz
testl
cld
shlb
jp
or
pop
inc
and
inc
sbb
xor
lcall
insb
or
aad
dec
push
dec
loope
setae
dec
sbb
fadds
iret
cmpsl
dec
and
sub
cmp
icebp
mov
ret
sbb
in
daa
inc
loopne
in
or
push
outsl
sbb
mov
xchg
xorb
add
pshufw
mov
popf
popf
dec
bts
je
fs
adc
aaa
dec
inc
dec
cmc
data16
les
mov
or
aad
andb
or
cmpsl
sub
xchg
push
push
inc
rcrl
movl
push
sbb
fbstp
in
lods
insl
fwait
icebp
lret
fcmovb
mov
int
pop
ret
loop
les
pop
push
mov
daa
cs
das
popa
orl
hlt
loop
xchg
pop
jne
push
dec
xchg
jle
pop
mov
adc
imul
adc
lea
mov
lods
mov
pop
or
js
push
fdivrs
and
sbbb
adc
mov
clc
gs
dec
aad
dec
and
jne
sarl
add
inc
pop
outsb
je
pop
js
push
enter
cwtl
dec
dec
dec
cmc
mov
cmpsl
mov
jl
sbb
push
inc
orl
push
inc
les
and
and
rsm
sub
dec
jne
jg
arpl
add
dec
bound
daa
rclb
xchg
cmp
xchg
fists
je
loopne
cmp
lock
cmp
inc
mov
pop
enter
jb
and
or
cmp
cmc
pop
xchg
out
aaa
adc
pop
fldt
repz
cmp
pop
pop
in
imul
add
stos
lea
cmp
imul
clc
adc
and
dec
ja
jae
test
add
dec
push
stos
pop
pop
jo
pop
push
cmp
ret
cmp
loopne
dec
jno
and
mov
dec
mov
arpl
mov
in
test
mov
cmp
mov
addr16
or
sbb
lret
cwtl
push
push
pushf
ret
dec
and
xchg
jg
dec
or
cld
xor
push
das
mov
jno
mov
push
addr16
xor
fldcw
out
xor
dec
pop
push
call
inc
jmp
pop
out
jp
mov
dec
ds
faddl
les
pop
scas
loop
xchg
or
mov
sub
sbb
cli
jo
ja
inc
fdiv
dec
mov
xchg
adc
xchg
les
mov
fsubr
inc
shlb
daa
jae
fisttps
roll
enter
pop
into
sub
test
icebp
sbb
andl
or
inc
add
xor
pushf
cmpsb
xor
rcrl
push
das
and
mov
mov
addb
xor
bound
test
pop
xor
push
jl
shl
sub
nop
jmp
jns
push
mov
sti
test
fs
push
cmp
xchg
gs
jne
mov
ss
ljmpw
arpl
call
inc
sub
mov
sub
and
cld
test
sti
pop
dec
mov
sub
call
push
repnz
jo
enter
xor
xor
dec
ret
shrb
cmc
lcall
fisubrl
add
mov
lods
popf
push
div
lret
test
pop
jno
sahf
mov
test
xor
adc
and
adc
push
sahf
xchg
test
ret
lea
xchg
push
test
inc
pop
mov
sbb
repz
mov
sbb
stc
addl
int3
addr16
orl
jg
add
mov
call
lahf
rolb
cmpsb
sbb
adc
in
xchg
in
mov
in
push
out
call
div
adc
and
xor
lock
push
mov
cs
mov
imul
jb
mov
call
lock
mov
in
cmp
or
out
insw
fsubl
daa
and
inc
inc
test
dec
cld
mov
and
mov
and
mov
or
cmp
lret
and
push
inc
aad
inc
shr
jecxz
dec
sbb
mov
out
pop
push
and
lods
xchg
cltd
inc
clc
cld
add
shll
sbb
and
mov
aam
in
mov
xor
inc
fs
jno
int
out
inc
adc
adcb
and
jnp
and
stc
sbb
inc
adc
push
adcl
sbb
clc
add
repnz
xorl
sti
filds
out
shrb
cwtl
mov
cld
sbb
mov
mov
pop
out
testl
dec
mov
xor
sub
test
inc
in
dec
jle
pop
mov
push
push
inc
mov
orb
in
or
jge
ss
push
push
xchg
mov
ret
sbb
mov
fldenv
jo
add
andb
xor
or
mov
sahf
pusha
popf
bound
and
xor
dec
lret
sbb
jge
push
stc
and
rcl
cmpl
mov
xor
mov
cmp
mov
or
aad
jmp
push
cmp
cmp
rclb
add
bnd
jne
iret
lea
insb
or
inc
cli
mov
xchg
daa
xlat
adc
mov
push
mov
insb
mov
into
jle
push
pop
mov
je
pop
lret
lods
pop
outsb
insb
rcrl
cmp
dec
cmp
repnz
inc
push
bound
int
add
jl
lret
xlat
pop
push
cs
faddl
add
test
mov
sbb
ljmp
mov
mov
push
daa
scas
in
dec
jns
testl
xor
ja
int
jo
xchg
xor
out
sahf
mov
mov
lcall
arpl
push
shl
test
jb
adc
inc
mov
jnp
push
adc
cmpsl
jle
jmp
inc
or
sbb
and
test
sbb
dec
xchg
jo
sahf
fstpl
mov
add
cmp
sahf
add
daa
inc
repnz
loop
mov
add
mov
jge
xchg
add
fcoms
movsb
xchg
inc
stos
scas
sub
mov
xchg
adc
sti
rcrb
jle
addl
enter
sbb
call
pop
icebp
pop
pop
popf
cmp
dec
jo
push
out
mov
shlb
xchg
sbb
sti
mov
mov
lahf
outsl
mov
cld
mov
cmp
cmp
inc
cmpsl
push
mov
mov
out
in
repz
fwait
pop
dec
jns
xchg
scas
mov
jg
ja
dec
pop
mov
mov
add
ret
dec
pop
mov
cmp
sub
fadd
push
jg
pop
inc
mov
push
dec
test
mov
aad
cwtl
jne
pop
cmpsb
xchg
jg
fbstp
mov
adc
sbb
cwtl
xlat
popa
repnz
icebp
fdivrl
fisttpl
xorl
jge
hlt
cmp
and
cs
jmp
sub
fistpl
add
jl
adc
pop
or
xchg
outsb
mov
sbb
pop
push
jl
pop
mov
popf
jne
hlt
iret
cmp
cmpb
fnstsw
data16
stos
inc
fs
cmp
cmp
ja
cltd
stos
or
stos
mov
xchg
shrl
add
mov
es
ljmp
mov
sub
dec
jns
test
stc
mov
fldt
xchg
dec
or
orb
shlb
fildl
mov
mov
ret
cmpsb
subl
sub
mov
push
mov
addl
cmp
mov
sbb
inc
adc
sbb
inc
scas
mov
sbb
or
sbb
orb
xchg
and
icebp
pop
and
sub
mov
mov
mov
pop
lcall
push
mov
adcl
jno
ljmp
cmp
inc
cmc
push
fdivl
test
xchg
vmwrite
and
mov
jns
jo
inc
sub
pop
adc
sub
mov
js
orb
jae
cmpsl
sbb
jl
mov
and
push
cmp
jae
jmp
mov
loopne
cmp
and
jne
push
push
int3
lahf
add
push
int
xchg
fisubs
jmp
test
mov
lods
insb
arpl
aam
ljmp
push
enter
sbb
test
mov
lcall
adc
negb
outsb
jns
sub
adc
andb
enter
jp
repnz
push
cmpsl
sahf
jmp
or
mov
or
js
mov
mov
mov
adc
jp
stc
fld
cmp
inc
pop
mov
divb
mov
orb
adc
in
push
sbb
test
es
mov
xchg
leave
mov
and
sbb
repnz
shrl
mov
into
xor
imul
cltd
pop
add
sbb
int3
into
xstore-rng
cmpsl
add
mov
sahf
push
repz
arpl
inc
cmp
mov
push
outsb
xor
pushf
mov
pop
aam
sbb
and
ja
decb
add
push
or
jbe
scas
xor
movsl
cli
and
adc
movsl
xchg
push
in
push
in
mov
mov
pusha
mov
das
fdivrs
jno
shll
and
sbb
xchg
pop
push
inc
jge
sub
mov
pop
lods
push
mov
cmpb
movsl
in
jae
jecxz
bound
adc
lahf
sub
xchg
mov
stc
dec
aam
fcmovb
mov
int3
mov
mov
push
aas
popa
das
outsl
int
jns
mov
sub
lcall
xor
add
movsl
into
enter
mov
movsl
stos
in
push
xor
call
xchg
jge
mov
rorl
in
add
ds
sbb
mov
sub
imul
shl
fwait
and
and
cmc
jo
mov
push
insb
pop
inc
hlt
stos
rcrl
dec
cltd
dec
push
adc
iret
insl
xor
scas
xchg
int
stc
sbb
cmpl
call
dec
xor
popa
xor
mov
scas
mov
sub
movsl
frstor
mov
jle
cwtl
aaa
xor
fwait
mov
add
mov
mov
add
adc
xchg
xor
push
fistl
lods
insl
or
push
int
iret
movsb
scas
loopne
xor
add
imul
fdivl
data16
sbb
mov
inc
pushf
mov
lods
lret
shl
enter
out
push
out
cmc
insb
pop
imul
lock
mov
daa
or
divl
jnp
sahf
mov
fnop
inc
sbb
scas
out
das
shll
sbb
sub
xor
decb
mov
pop
aad
add
andl
jg
ljmp
and
jns
sbb
inc
push
mov
mov
cld
cmpsb
xor
xchg
ds
outsl
inc
popf
cwtl
mov
and
mov
inc
mov
jnp
cwtl
mov
in
jbe
andb
pop
and
xor
inc
rcll
movl
pop
inc
push
lret
mov
repz
fstpl
xor
ret
lods
adc
lock
in
mov
jp
out
jg
inc
inc
mov
pop
mov
lcall
andl
mov
aaa
pop
popf
push
cwtl
inc
mov
ret
shlb
push
mov
shlb
mov
jge
dec
in
pop
sub
and
test
add
cli
int
insl
lret
mov
adc
pop
inc
adc
orl
sti
jnp
xchg
mov
arpl
sbb
mov
adc
cmp
mov
insb
push
aad
sub
pop
fadds
enter
in
testl
popf
pop
data16
pop
mov
adc
pop
lea
out
push
popf
sub
fsubl
add
add
sbb
adc
mov
mov
dec
or
shrl
cmc
outsb
jmp
mov
jnp
mov
mov
and
xchg
arpl
scas
sar
jle
stos
cmpsb
mov
sbb
mov
push
push
and
or
insl
or
insl
sbb
mov
inc
pop
cs
cmp
cwtl
pop
mov
insb
or
ss
ja
sub
cmp
ss
sbb
ret
movsb
mov
fistpll
test
mov
sub
je
aam
insl
mov
subb
inc
pop
xchg
dec
aas
push
xchg
clc
jge
push
ds
push
fstpt
les
sub
push
pop
mov
call
pop
popf
movl
mov
mov
cs
fucomp
popf
xchg
jbe,pt
movsl
cmc
mov
fbstp
pop
inc
sbb
stos
cmp
xchg
inc
insb
inc
pusha
test
mov
js
aam
call
lds
rcl
sbb
inc
outsl
cmp
adc
test
fwait
cltd
loopne
jae
pop
jbe
add
mov
fwait
in
in
sbbl
lods
cmp
fsts
das
jb
xor
adc
and
or
push
sbb
loop
xchg
mov
movsb
sbb
cmp
jno
addr16
mov
push
mov
mov
mov
imul
xor
xor
push
outsl
jp
out
or
orb
aam
test
hlt
cmp
sub
test
in
add
out
jbe
jl
and
cmp
and
push
or
inc
fisubrs
lods
fwait
movsb
push
mov
push
adc
cmp
les
jnp
xor
sub
inc
cld
pop
in
inc
xor
dec
xlat
sbb
mov
jo
cmp
imul
out
push
mov
ja
mov
sub
in
xchg
dec
arpl
lcall
push
mov
or
and
int
xchg
inc
outsb
in
sbb
lods
push
xor
enter
testl
jne
insb
or
or
pop
cmpsl
mov
bound
fisttps
and
dec
test
sub
test
mov
stos
cmpsl
in
cmp
in
mov
xorl
push
pop
mov
pop
push
int3
movsb
dec
into
ret
pop
xchg
stos
outsl
sub
sub
push
cmp
mov
sub
push
movsl
pop
and
iret
vsqrtps
jle
lods
inc
adc
cs
dec
or
outsl
aaa
lods
adcb
pop
inc
iret
inc
mov
sub
subl
mov
mov
int3
xchg
pop
add
adcl
push
xchg
mov
movsb
xchg
scas
scas
in
mov
inc
mov
inc
je
loope
aam
inc
dec
push
in
sub
std
lds
or
loope
or
sub
xchg
fists
inc
jle
adc
xchg
arpl
mov
rorb
jae
and
cmpsl
sub
cmp
fcompp
mov
or
adc
lcall
sbb
push
lods
inc
aas
cs
cmc
lcall
not
fstpl
aad
subb
and
out
adc
mov
push
test
xor
mov
int3
or
jb
cmp
pop
mov
jle
or
fwait
pop
arpl
shr
push
loop
or
std
pop
push
inc
mov
pusha
and
fucomp
popa
jb
aaa
sub
inc
test
inc
push
mov
imul
mov
fcompl
test
hlt
stos
fwait
lahf
adc
in
lret
subb
into
inc
dec
inc
add
and
push
ds
push
sarb
addr16
lods
mov
jns
adc
out
shlb
cmpsb
mov
push
dec
in
xchg
clc
fcmovnb
or
lds
pop
dec
add
pop
pop
cmp
cltd
das
scas
cltd
enter
mov
mov
insl
lock
jo
mov
jb
jecxz
leave
ss
mov
push
adc
out
stc
les
movsl
inc
aas
dec
xor
mov
ret
out
fimuls
mov
xchg
mov
fnsave
xlat
loopne
shrl
pop
mov
xchg
dec
je
dec
jno
sbb
dec
cmc
aam
stos
js
push
mov
rcrb
shrl
ficoml
dec
mov
inc
and
rolb
mov
jge
push
push
pop
mov
jae
mov
adc
int
xchg
xorb
jle
outsl
divb
or
lock
popl
xchg
lahf
add
add
and
sar
loop
and
into
jnp
dec
rcll
mov
clc
popa
xchg
xor
xchg
out
scas
push
cmp
mov
mov
movsl
mov
enter
clts
inc
enter
add
dec
sub
gs
je
push
sub
rorl
cmc
roll
push
std
sbbl
sub
mov
aad
pop
shrb
push
sub
jne
ret
pusha
pop
fsubp
xchg
orl
jns
test
insl
jmp
sbb
ljmp
daa
pop
cmpsb
clc
sub
inc
loopne
arpl
lahf
mov
cwtl
cmp
popa
cmc
cmp
enter
decl
stos
jno
or
dec
and
int
ficomps
in
fiadds
std
jns
cs
call
fldt
imul
ret
push
andb
fisubrs
sub
stos
cli
mov
test
pop
fcomps
nop
fdivs
cmp
push
clc
ret
sahf
adc
dec
xchg
mov
jno
repnz
xor
adc
inc
call
testb
sub
negl
xlat
mov
dec
stos
pop
xchg
or
ret
push
cmp
stos
fdivr
xor
pop
pop
or
ret
inc
or
and
mov
divl
mov
sbb
and
push
in
fstp
dec
mov
push
push
add
iret
stc
xchg
pop
pop
jmp
and
pop
push
ficoml
das
test
push
ds
hlt
icebp
jmp
testl
jle
outsb
fxch
ljmp
shll
cmc
dec
in
das
loopne
jg
adc
aas
int3
divb
sbb
nop
mov
aam
insl
mov
pop
inc
jge
int3
and
mov
mov
pop
roll
lods
lods
cmpb
aam
pop
push
pop
clc
movsl
jne
mov
dec
cmp
fstps
dec
test
cmp
icebp
stos
cmpsl
jbe
sbb
clc
cmpsb
add
jns
mov
sbb
scas
jmp
sbb
mov
fistps
sar
dec
dec
in
jp
popf
pop
mov
and
cmp
cmp
je
push
les
in
mov
dec
jmp
or
inc
mov
push
mov
divb
ret
mov
dec
push
out
popa
jecxz
xchg
sbb
or
xchg
loopne
and
rorb
stc
icebp
dec
out
gs
sub
loop
sub
dec
leave
mov
jae
xchg
stc
cmc
sub
test
pop
jbe
xor
xchg
xor
in
popa
test
loopne
sbb
and
mov
out
mov
sbb
dec
movsl
sub
cmp
popf
stos
xor
mov
in
les
mov
xchg
xor
or
cld
test
shl
xor
int3
sbb
lods
and
mov
ljmp
js
jns
push
es
popa
dec
sarb
ss
sbb
or
lret
and
repz
and
lcall
pop
and
jg
jb
xor
std
and
xor
mov
sub
hlt
leave
mov
sbb
gs
jp
xor
xor
stos
pusha
pop
fmul
jge
jae
push
push
das
jno
out
mov
pop
scas
lret
dec
fcoms
pop
or
fmuls
popf
mov
pop
fnstenv
incb
inc
mov
fsubrl
jbe
fmuls
ja
xchg
add
jmp
dec
cmc
pop
std
jns
inc
sbb
fisubrs
jnp
push
jno
ret
divb
rorl
test
adc
test
add
and
cmp
mov
jle
pop
mov
xor
dec
das
repnz
mov
dec
fsubrs
jo
sti
pop
inc
cmp
iret
ret
sbb
add
inc
pop
dec
pop
lahf
adc
push
push
jno
je
xchg
push
xor
add
inc
loopne
inc
fisttps
mov
in
int
add
fisubrl
xchg
in
es
mov
outsl
daa
subl
or
push
sub
xchg
cld
jno
sbb
rclb
add
fwait
xchg
adc
push
pop
lock
add
out
mov
xchg
mov
dec
imul
xchg
sbb
call
mov
clc
js
jp
pop
mov
dec
rolb
mov
push
pop
movsb
fdivs
mov
xchg
fisubs
shlb
jmp
mov
and
orb
in
lret
stos
sub
leave
ret
push
jle
push
mov
fsubs
popa
mov
jae
add
or
add
xchg
and
imul
stc
pop
sti
dec
je
les
xor
pop
adc
xchg
inc
jmp
and
adc
add
in
mov
imul
jmp
fisubl
cmpsb
roll
aas
out
push
cwtl
pop
rcrl
lahf
xor
movsl
jbe
add
jmp
push
das
dec
push
mov
fidivs
sbb
mov
xchg
jp
mov
fldl
in
das
icebp
cld
pop
sbb
test
jle
ds
xor
xlat
push
fdivrp
fisubs
push
movsl
jmp
filds
sub
sub
mov
loopne
jmp
sub
push
mov
fsubl
ljmp
inc
pop
push
mov
cwtl
adc
imul
sub
inc
inc
sti
mov
loopne
dec
pushf
pop
dec
dec
dec
mov
stos
jle
adc
daa
and
popf
in
ss
push
ss
xchg
xchg
pop
cs
testb
inc
shrl
das
jne
jp
aam
and
xchg
pop
push
sbb
mov
sbb
mov
xor
and
je
filds
mov
cmp
dec
cmp
dec
adc
cmpb
out
jae
dec
mov
stos
test
cmpsb
xor
stc
imul
mov
loopne
adc
cld
sbb
add
dec
sub
mov
lahf
rolb
xor
push
cmpsl
xchg
sbb
ss
jecxz
enter
or
mov
ds
shl
or
xchg
arpl
mov
xchg
into
je
clc
jp
cmp
push
lock
jp
scas
add
inc
mov
rcrl
movsb
pop
cmpb
mov
xorb
and
stc
push
or
outsl
nop
daa
push
movsb
in
adcb
loope
data16
jmp
aaa
int
sbb
lock
test
outsb
fildl
and
mov
lea
push
push
push
imul
pop
xor
cmpsb
imul
icebp
cltd
dec
ror
push
ja
mov
jp
aam
dec
pop
mov
hlt
jo
dec
lods
mov
cmpsl
aam
mov
imul
sbb
add
xchg
sub
fldcw
pop
pop
fdivs
lahf
outsb
shrb
inc
popf
push
mov
dec
cmp
out
sub
adc
cmp
movsl
lea
jne
push
dec
in
jle
ret
push
daa
jae
pop
xlat
imul
ja
dec
bound
dec
pop
repnz
in
out
leave
xlat
repz
std
pop
pop
lahf
cs
in
out
in
cwtl
call
sbb
lds
stos
lcall
loopne
xlat
pushl
push
outsb
clc
adc
pop
fldt
fdivr
idivb
sbb
xchg
addr16
pop
cltd
into
mov
and
lods
add
inc
popa
and
mov
ljmp
mov
pushf
adc
es
std
enter
sbb
add
js
sbb
adc
adc
dec
mov
mov
jno
cltd
sub
mov
xchg
popa
xchg
dec
inc
not
imul
out
cmpsl
inc
movsb
pop
mov
cwtl
sti
divb
stos
mov
jl
adc
mov
rcrb
mov
loop
mov
push
xor
inc
dec
jle
push
cwtl
movsb
movb
mov
mov
aam
iret
jb
jb
push
pop
adc
mov
leave
mov
int
scas
je
and
ret
xor
inc
test
push
mov
stos
adc
lods
int
icebp
cli
dec
dec
inc
mov
xchg
mov
clc
adc
in
jo
and
vmovaps
cmc
lret
cmp
xchg
lret
out
lahf
call
subb
push
lock
or
out
and
int3
add
pusha
aad
pop
repnz
inc
sbb
into
adc
cmp
fcmovnbe
cmp
pushf
cmpsb
out
stos
jo
test
mov
push
scas
xchg
cmp
push
cmpsb
bound
jg
cmp
xchg
push
leave
pop
call
imul
addb
jno
push
ret
jbe
inc
sub
pop
sbb
cwtl
mov
sbb
stc
mov
mov
xchg
aam
je
stos
ret
xor
lret
repnz
mov
stos
mov
mov
pop
int3
mov
jne
mov
inc
fidivl
jge
jnp
cs
das
inc
out
ret
in
add
sub
mov
lcall
pushf
sbb
cmp
or
lret
mov
test
aaa
jno
cmp
mov
inc
add
mov
clc
and
hlt
xchg
mov
cmp
xchg
movsl
loopne
push
add
push
clc
mov
and
add
and
mov
cs
test
test
out
lcall
jle
imul
mov
adc
jb
jmp
ja
inc
sarb
test
xlat
fisubrs
dec
stos
lds
and
repnz
jnp
in
pop
clc
lahf
arpl
add
pop
jmp
xchg
insb
mov
xor
mov
add
push
enter
cmc
inc
lret
push
insb
sub
aaa
ss
lcall
or
pop
psrlw
xorl
or
push
in
xor
add
xchg
call
inc
add
fwait
pop
repz
jl
cmp
out
or
lcall
mov
pop
nop
addr16
cli
xchg
shrb
stos
repz
aad
mov
jge
push
arpl
cmpl
hlt
push
fcompl
mov
adc
sub
in
imul
nop
jle
jle
repz
adc
sahf
add
mov
jo
or
lods
inc
ljmp
mov
mov
outsl
test
fistl
add
mov
mov
dec
ds
inc
popf
and
xor
cmp
xorb
mov
sbb
xchg
lea
loope
inc
aad
add
clc
or
fucomp
push
adc
jnp
addr16
adc
out
inc
or
int3
and
sahf
jg
fs
int3
leave
or
in
je
enter
mov
rorb
xlat
mov
push
fstpl
xchg
cmpsl
pop
cmp
mov
sbb
xchg
enter
out
int3
cmp
xchg
movb
je
fs
shr
cmp
adc
out
cmp
jo
test
push
ret
pop
adc
push
ficoml
lea
inc
or
xor
popf
jmp
out
add
aam
fs
hlt
rol
in
scas
mov
stc
xchg
jne
iret
pop
bound
adc
mov
or
mov
lods
sub
or
pop
lock
and
mov
inc
mov
lds
imul
sbb
imul
lret
or
and
and
imul
das
or
lods
inc
jno
and
or
mov
shll
cmp
sub
fistpll
xor
mov
push
or
mov
jg
imul
shll
lock
push
out
call
pop
push
int
sub
ret
jl
pop
data16
mov
sub
fwait
stos
js
dec
out
out
loopne
mov
out
jl
inc
or
jne
shl
insb
mov
lret
in
cli
daa
cwtl
pop
push
cmp
testl
dec
or
outsb
xchg
popa
inc
enter
push
push
jp
fnsave
pop
imul
sbb
xchg
xchg
mov
mov
inc
jbe
sub
sub
jns
out
xor
adc
push
jne
faddl
scas
jo
mov
sub
sbb
jecxz
andl
stos
or
jl
lods
outsl
inc
mov
pop
mov
aad
cmpsb
adc
clc
xor
lcall
dec
jne
shr
ss
in
in
ljmp
das
fdivrl
test
adc
fwait
mov
repz
pop
aad
mov
shll
mov
std
sahf
mov
jl
xor
mov
ret
cmp
test
jecxz
sbbl
rcll
in
imul
leave
popa
popa
add
dec
js
cmp
popf
in
fwait
cld
mov
mov
jp
xor
loope
mov
add
dec
mov
or
and
loopne
outsb
in
push
mov
jb
leave
mov
dec
mov
jae
aas
cmc
inc
in
bound
jne
or
test
movsb
jnp
out
insl
adc
sarl
cmpsl
ja
or
cmp
int3
lahf
adc
xchg
dec
dec
lods
dec
and
cmpsb
xchg
push
addr16
xchg
repnz
mov
inc
mov
lods
das
push
in
out
xchg
cmpsb
sbb
sbb
jo
pusha
jmp
jmp
stc
mov
std
xor
inc
sub
cmpb
xor
xor
insb
pushf
and
mov
pusha
mov
test
and
push
mov
cmp
out
or
adc
jecxz
data16
adc
loopne
gs
cld
inc
mov
fistl
decl
cmpsb
rcrl
adc
mov
xor
xorl
cld
pop
pop
sbb
in
bound
pop
adc
or
std
int3
mov
push
xchg
fs
mov
inc
push
dec
int3
cli
jp
dec
out
jbe
adc
ss
xor
int
mov
test
adcl
cwtl
sub
mov
push
or
ljmp
sub
repnz
mov
imul
inc
fidivrs
dec
stc
mov
jl
je
imul
xor
stos
or
jmp
sub
out
js
xor
xor
addr16
int
push
mov
push
inc
sbb
and
in
imul
stc
lock
lds
call
lock
mov
pop
cmpsl
mov
out
out
js,pn
or
jmp
mov
loopne
out
jnp
cltd
and
xchg
sbb
add
clc
xlat
in
add
sbb
idivl
gs
sbb
lods
fadd
out
lods
pop
dec
in
inc
sbb
mov
stc
insl
ret
xchg
sarl
dec
mov
fcmovnu
inc
int3
dec
push
fcmovnu
in
sbb
pop
mov
or
xchg
pop
les
xor
aas
test
mov
xchg
dec
sti
popl
loop
out
imul
and
dec
pop
nop
jns
adc
cmpsb
rol
mov
xchg
repz
out
xchg
sbb
out
inc
pushf
cld
jnp
pop
cmp
adc
xor
mov
lahf
roll
sbb
push
sub
ds
stos
mov
adc
mov
dec
push
lds
sarb
inc
into
mov
adc
in
je
xchg
ds
mov
cmp
roll
pop
out
inc
mov
sbb
pop
fistpll
or
mov
add
dec
xor
inc
mov
pop
add
bound
movsb
cld
in
pusha
xchg
andb
sub
jns
out
adc
sub
adc
push
test
push
or
sbb
arpl
pop
or
lods
sbb
lret
aas
push
jg
pusha
repnz
xchg
rcrb
pop
add
adc
dec
jl
mov
or
xchg
mov
inc
rorb
scas
and
add
dec
cmc
fdivl
mov
jb
add
loope
ljmp
shll
push
adc
aad
stos
outsl
rol
xchg
in
ds
pop
mov
push
inc
mov
fsubrs
mov
icebp
add
movl
call
xor
aas
repz
xor
lds
mov
inc
mov
shll
xchg
push
adc
xor
imul
mov
adc
sbb
lret
sub
jle
rcll
cmp
sub
inc
addr16
stc
inc
push
push
pusha
push
xchg
aaa
ja
dec
jb
inc
test
jb
pop
sub
aaa
test
lahf
sbb
adc
cmp
inc
add
sti
pop
cltd
mov
pop
adc
pop
mov
insb
push
xor
repnz
push
jae
movsb
mov
or
adc
icebp
xchg
jp
or
out
dec
sub
popf
std
xorb
cltd
sbb
add
mov
pop
xor
adc
mov
cmc
push
mov
mov
cmpsb
sub
sub
push
cmp
jne
mov
adc
shrb
xchg
jecxz
add
jecxz
cmp
int
xor
arpl
mov
stc
test
mov
sbb
cmp
sub
addr16
fwait
jmp
and
cmp
punpcklbw
add
mov
sub
adc
cwtl
shrb
xchg
lret
push
push
jnp
xor
imul
leave
xor
popa
inc
aad
jp
hlt
sub
icebp
bound
jle
and
je
pop
testb
aas
xor
int
mov
cmpsl
cs
sar
adc
mov
enter
inc
or
addb
push
aaa
insl
inc
ficoml
pop
stc
xchg
add
pusha
add
addb
in
dec
xlat
pop
lea
sbb
mov
lret
fnsave
stos
sti
popf
out
mov
sahf
nop
iret
xchg
shlb
sbb
sub
lea
mov
scas
pushf
mov
cld
mov
in
fs
jg
mov
dec
mov
in
and
inc
ret
jle
push
sbb
hlt
mov
adc
jb
ffree
add
or
fildll
das
cmp
cltd
push
xor
testl
pop
scas
dec
push
add
xchg
adcb
mov
rcl
cmp
add
scas
out
inc
pop
lret
lahf
mov
es
lahf
imul
add
mov
loop
jg
ret
pop
jbe
sub
sub
jbe
icebp
add
add
xchg
push
push
push
aad
dec
fs
lock
xor
dec
lods
mov
or
loop
jne
sti
int
add
sub
sti
jmp
test
jl
dec
add
xchg
test
push
or
test
push
ds
dec
adc
cmp
out
pop
test
sbb
mov
mov
or
mov
frstor
hlt
jl
mov
cld
gs
push
and
iret
dec
mov
xrelease
ret
mov
pop
aad
xor
xor
sahf
sub
mov
out
ljmp
rcl
cmp
xchg
cmpsb
inc
and
mov
cmp
add
ficompl
xlat
stos
push
ja
mov
jae
push
outsb
imul
cli
cmp
push
mov
sbb
insb
das
mov
insb
mov
adc
es
mov
push
lret
cmp
mov
jl
in
mov
ja
inc
dec
mov
pushf
ret
adcl
mov
jecxz
xlat
jge
ja
insb
rol
popf
stos
jne
ljmp
fidivs
pop
jo
push
shlb
sbb
stos
xlat
aaa
jno
out
jge
xchg
fdivs
xor
or
lcall
push
add
icebp
push
jmp
sub
xchg
shl
sar
aas
add
gs
add
mov
lret
push
xor
mov
pop
jg
je
xor
sub
andl
sub
lret
dec
sbb
iret
fimull
das
and
and
mov
addr16
imull
in
test
sbb
lret
addb
sbb
loopne
dec
das
ja
mov
mov
scas
mov
js
or
and
imul
popa
cs
sbb
and
dec
mov
pushl
dec
jbe
das
and
call
das
cmc
xchg
int
xchg
out
loop
flds
xchg
ficompl
add
mov
pop
ljmp
je
shr
adcl
sub
xorl
pop
inc
fldt
negl
and
call
push
fimull
lods
mov
sahf
int
add
jo
nop
call
les
xchg
subb
xchg
inc
fxch
imul
movl
cmc
es
pop
and
pop
add
insb
adc
push
mov
adc
pop
movl
lret
ret
inc
cmp
jle
fsubs
pop
int3
dec
fidivrs
ret
inc
adc
sub
cmp
call
or
mov
mov
mov
sub
jecxz
ds
nop
mov
add
out
sti
call
sub
rclb
and
push
add
addr16
mov
push
imul
test
fisubrs
stos
push
gs
sar
xorb
pop
add
xor
in
data16
jno
mov
add
in
icebp
flds
int3
mov
or
mov
jbe
xor
scas
lea
xchg
lods
pop
cmp
sub
dec
or
dec
lds
xchg
sub
sbb
dec
in
sar
sub
mov
and
sarb
sahf
cmp
mov
inc
xchg
mov
inc
xor
inc
das
int3
test
gs
lds
movsb
into
scas
and
mov
push
pop
jb
inc
adc
cmp
jp
push
call
adc
popf
sub
leave
jne
out
incb
xchg
and
xchg
fwait
mov
mov
sbb
arpl
mov
cmp
pop
dec
sub
and
sub
std
jmp
and
bound
test
jo
xor
cld
shrb
mov
in
jne
jecxz
cmc
rclb
stos
clc
cmpl
mov
scas
in
stc
adc
ss
cmpsl
xchg
inc
shrb
mov
or
insl
out
je
fcmovu
inc
sahf
pushf
pop
enter
dec
call
dec
xor
shr
dec
testb
cltd
in
adc
xchg
in
pop
mov
jl
cmc
inc
arpl
mov
mov
inc
ret
gs
outsl
lods
dec
cmpsl
popf
scas
daa
xor
dec
sub
push
iret
int3
add
xchg
out
mov
iret
scas
je
add
gs
stc
xchg
xchg
das
dec
xor
or
shll
sub
mov
add
mov
test
in
sub
cmp
repz
and
push
inc
xchg
adc
mov
mov
mov
jne
in
sbb
sbb
cltd
pop
jnp
das
dec
or
sbb
cmc
cmpsb
mov
xchg
jp
sbb
stos
pop
xor
add
mov
push
xchg
xchg
sub
repz
add
outsl
je
mov
es
ljmp
pop
arpl
lock
dec
sahf
xor
jp
shll
hlt
fwait
mov
leave
mov
xchg
jg
pop
imul
test
mov
mov
out
push
addr16
mov
pop
jns
mov
fs
lods
lds
mov
mov
xchg
xor
cmp
popa
scas
jae,pt
pushf
jno
sub
rcrb
js
flds
dec
ffreep
mov
cmp
call
inc
pop
sahf
insb
lcall
adc
sub
cs
aas
insb
mov
scas
cmp
or
testl
xchg
jl
jo
dec
outsl
mov
iret
mov
add
cmp
and
arpl
jp
xchg
inc
in
inc
test
or
outsb
jnp
add
dec
leave
js
dec
push
inc
push
cld
shrl
jbe
not
adc
arpl
ljmp
fldl
add
je
iret
sub
iret
iret
push
xor
addr16
jne
and
insb
int
ret
pop
xor
leave
pop
xchg
xor
sub
or
xlat
sbb
lret
pop
cltd
mov
jae
xchg
adc
and
jge
mov
and
out
rol
sbb
lcall
pop
add
pop
jo
add
lock
jle
dec
outsb
cmp
call
adc
rcrb
mov
cli
scas
adc
pop
enter
loop
push
jecxz
cmpsb
outsb
jg
test
je
test
divb
fsubrl
shlb
jmp
pop
mov
lret
xchg
cltd
scas
pop
push
dec
bound
in
jmp
fstps
mov
jne
fisubl
mov
xor
jecxz
pop
dec
pop
fcomip
mov
mov
cs
mov
lahf
hlt
pminub
lahf
fwait
pop
cwtl
xchg
fcoml
mov
fbstp
loopne
aad
push
sarb
pop
and
ficompl
jmp
push
fildl
xchg
loop
fsubrl
xchg
xchg
enter
mov
les
lods
xchg
push
movsb
push
cltd
testl
cld
jae
dec
test
sbb
inc
lret
addb
repz
adc
mov
pop
aad
lods
lret
arpl
cmpsl
cmp
jno
jp
pop
dec
scas
push
dec
in
fsubl
push
icebp
dec
jbe
cld
xchg
repnz
movsb
cmp
mov
xchg
gs
mov
push
adc
fwait
sub
ret
test
inc
iret
xchg
rclb
sahf
out
lahf
push
hlt
icebp
xchg
pop
jo
daa
je
pop
loopne
or
lods
sbb
lret
inc
or
push
jmp
lret
insl
test
daa
add
xchg
cs
popa
sar
or
dec
call
xor
cmp
inc
sub
mov
cmp
pop
out
lock
pusha
mov
mov
sub
add
pushf
mov
or
loopne
or
dec
mov
pop
adc
jb
scas
mov
mov
aad
je
test
ss
std
fs
xchg
std
in
and
cmp
adc
stos
push
mov
dec
test
inc
js
shl
pop
jae
mov
sbb
inc
shlb
pop
jne
push
insb
pop
xor
xor
sbb
xchg
push
dec
jge
dec
cmpsb
lods
jb
push
lods
mov
fstl
adc
mov
xchg
popa
or
es
xchg
pop
scas
mov
add
add
jbe
adc
in
fmulp
mov
jmp
xchg
addb
mov
xor
ret
sbb
sub
dec
sub
aad
jmp
push
sub
leave
daa
dec
insl
pop
test
dec
mov
lret
fwait
mov
lock
es
test
ss
sub
and
xor
rcl
js
movsl
jbe
cld
out
movsl
inc
inc
loop
test
cmp
dec
lds
mov
jecxz
mov
xor
sub
sub
mov
mov
in
xchg
outsl
popf
lods
cmp
mov
pop
cmp
jg
xchg
jo
jbe
mov
jmp
ljmp
or
xchg
sub
mov
cmp
call
mov
jno
divl
mov
out
mov
mov
shl
cmp
movsl
fs
push
push
int
push
rclb
inc
lea
push
ret
jne
ja
pop
pop
pop
sti
dec
sahf
cmp
pop
fwait
lods
sub
and
daa
mov
dec
xor
sarl
orl
jecxz
pop
out
fdivs
stc
xor
int
lcall
rcl
movsb
iret
adc
push
or
fcmovnbe
stc
and
lods
loope
fnstenv
sub
cmp
out
sub
fcom
mov
mov
rcrb
xchg
dec
movsl
rsqrtps
pop
jne
test
addr16
xchg
insb
xor
cs
cwtl
out
sub
push
scas
imul
pusha
loope
dec
inc
hlt
lcall
out
inc
jge
stc
cmpsl
pop
sbb
jae
dec
push
or
cmc
inc
imul
adc
mov
lcall
imul
fbstp
pushf
lods
insl
scas
xor
cmp
xchg
pop
mov
outsb
mov
aad
cmp
pop
test
stc
loopne
pushf
ret
push
in
call
add
fwait
nop
ret
cmp
cwtl
or
mov
inc
fstl
fildll
mov
cltd
dec
fs
push
pushf
cmc
sbb
cmp
in
lret
mov
ljmp
mov
or
xchg
lahf
xor
repnz
lea
mov
gs
movsl
lahf
pusha
add
xchg
bound
sbb
push
inc
shll
inc
sub
mov
mov
loop
popf
push
fisttpll
pop
out
cmc
sbb
xchg
gs
mov
inc
jge
push
bound
imul
in
dec
adc
push
fisubrs
pop
jle
dec
popa
movsb
fs
repz
arpl
icebp
fildl
insl
outsb
xchg
inc
mov
fs
ret
cs
sbb
push
jl
enter
inc
je
loope
in
mov
shl
cmpsl
cmp
xchg
jns
pushf
inc
mull
clc
add
lahf
and
scas
in
sbb
mov
jns
adc
clc
or
imul
and
int3
fcomp
or
shlb
sahf
push
mov
and
arpl
std
mov
rorb
or
cli
xlat
lds
inc
mov
mov
jns
mov
lods
scas
mov
pop
movsl
test
je
or
mov
xlat
jge
imul
stos
aad
mov
orl
inc
add
aaa
jl
mov
cmc
mov
mov
out
stc
pop
mov
sbb
sub
jecxz
pop
mov
dec
shr
loope
mov
lea
mov
stc
dec
jae
cs
adcl
cmp
call
push
inc
rdseed
mov
in
pop
pop
adc
xor
jo
mov
out
sbb
lock
jmp
push
pop
inc
in
jo
mov
repz
arpl
sbb
sti
mov
push
orb
sahf
or
stos
sar
dec
iret
sbb
cwtl
mov
aas
mov
nop
sti
or
xchg
data16
inc
sbb
add
jg
mov
clc
dec
xor
push
mov
push
cmp
cmove
lds
xchg
jg
mov
and
into
lahf
or
xchg
aad
push
mov
lret
mov
xchg
fdivl
xchg
call
sub
ds
jne
pop
adc
pop
mov
out
lods
pop
lahf
fisttps
movsl
fwait
cmpsb
mov
lcall
push
push
mov
pusha
hlt
jg
pop
test
je
adc
mov
pushf
leave
push
mov
movsb
inc
cld
jmp
lcall
or
dec
pop
xchg
sub
jb
cmp
sbb
cmp
stos
das
fstps
push
mov
push
addl
outsb
iret
ss
adc
push
aad
lcall
dec
outsb
jl
push
les
adc
pop
sahf
lock
sub
push
lods
arpl
lret
loope
std
sbb
pushf
subb
cwtl
mov
out
loopne
iret
std
in
mov
pop
jmp
fists
jl
in
outsb
inc
addr16
adc
lods
lods
cmp
dec
jae
mov
mov
push
icebp
jl
sbb
in
dec
jp
push
mov
xor
in
and
and
aad
std
test
mov
fcoml
lret
shlb
cmp
ja
adc
lods
xlat
es
xor
xchg
pop
xchg
xchg
mov
cld
xchg
das
mov
or
repz
aad
cli
in
and
push
test
sbb
test
ror
lret
mov
call
add
fwait
mov
stos
mov
mov
xchg
sbb
mov
sub
mov
rolb
aam
sub
jl
pop
or
fsub
fdivrl
outsb
inc
or
jmp
test
sbb
ljmp
aaa
lods
dec
sub
sti
push
add
inc
nop
cli
push
enter
icebp
aas
add
jbe
jecxz
mov
sub
in
jg
cmpsb
jno
add
cli
xor
in
leave
icebp
fimuls
lea
xor
ret
push
lea
mov
std
mov
pushf
or
fwait
jno
std
cmp
out
mov
movsb
fsts
lret
mov
jns
mov
push
dec
mov
jno
les
xchg
sub
loop
dec
pusha
jo
or
int3
add
jo,pt
ret
and
ret
xchg
mov
pop
jne
stos
ret
pop
pushf
sbb
pop
pop
dec
push
adc
aad
mov
mov
ja
pusha
test
ret
subl
and
adc
or
pop
push
sbb
pop
pop
addl
xor
inc
enter
jne
ret
movsl
lcall
int3
and
jno
xor
fiaddl
mov
xor
mov
mul
push
shlb
in
inc
pop
pop
fs
mov
in
or
icebp
dec
ficomps
out
call
inc
mov
repz
nop
clc
movsb
sub
jbe
jp
out
pop
sbb
ret
dec
in
lcall
mov
sar
outsl
in
sarl
mov
nop
popf
enter
jle
aas
inc
dec
orl
mov
out
rorl
and
int3
mov
repnz
aaa
popf
mov
push
in
cmp
notl
push
dec
divl
sub
add
js
sti
jl
pop
xchg
pop
fildll
negl
std
fistpl
xor
and
pop
cmp
cmp
adc
cmovp
arpl
int
fnstenv
mov
js
sbb
rorl
inc
sahf
out
jne
dec
cmp
add
jnp
push
or
aam
mov
cmpsb
dec
ficompl
rcl
jo
std
cmpsb
aam
int
repnz
fs
loopne
cmpsb
cmp
rclb
lods
call
test
daa
or
inc
aaa
jl
jns
cld
ljmp
imul
or
out
push
pop
and
cwtl
add
push
adc
and
jbe
add
pop
push
cmp
mov
fstpl
insl
lock
and
in
in
add
cmp
subb
sbb
mov
pushf
sbb
es
outsb
or
gs
imul
aad
or
daa
mov
fs
push
dec
not
cmpsl
jb
push
jecxz
lret
or
and
add
insl
inc
imul
lods
push
adc
mov
icebp
dec
add
inc
cltd
in
sub
mov
fs
enter
hlt
iret
dec
push
bound
pop
or
shlb
jne
lret
psllw
dec
jbe
enter
int3
dec
shlb
rorb
cmp
or
xor
mov
and
sbb
mov
cmp
in
arpl
xor
adc
shll
inc
arpl
rcrl
sub
imull
inc
sub
fildl
sbb
jno
mov
mov
dec
inc
push
aam
xchg
mov
cmp
lret
movl
jp
jl
cmc
bnd
ljmp
push
in
cmp
cmpsl
push
pop
push
sahf
dec
in
xorb
shll
mov
roll
es
or
push
cltd
in
pusha
add
enter
lret
rorl
cmpsb
iret
dec
and
and
rorb
sub
and
sbb
sbbl
les
stc
inc
fmuls
cmc
ljmp
xchg
ds
nop
fisubrl
imul
jno
inc
shl
adc
inc
and
test
pop
inc
cmpsb
icebp
into
gs
imul
sbb
jge
sbb
or
add
sub
in
in
pop
jne
ret
dec
pop
push
fidivrs
xchg
loope
cmpsl
lods
jp
pop
lret
stos
mov
push
xchg
sub
sbb
xchg
and
popf
ja
sti
or
add
fstl
stos
push
mov
mov
pop
filds
pop
subl
mov
adc
mov
mov
sarb
sbb
sub
nop
je
mov
divb
cs
popf
xor
lea
lds
xchg
pushf
jo
cli
aam
call
jae
popa
adc
inc
lcall
inc
dec
aad
inc
fcmovu
sub
add
into
nop
pop
pop
ret
xorb
shlb
pop
xchg
inc
add
mov
in
repz
cmp
jbe
lods
add
inc
xor
xor
mov
aaa
sub
push
movsl
rcr
outsb
xor
xchg
pushf
test
xchg
decb
sub
mov
iret
pop
shll
xor
xchg
xor
inc
or
inc
addl
and
and
mov
fbld
mov
fstpt
inc
sbb
dec
xor
fisttpl
es
gs
gs
in
push
ja
fs
sub
jns
out
cmp
lods
outsb
rorl
std
decl
sub
andl
out
jb
cmpsb
insb
stos
sar
adc
sub
rolb
rcll
aas
loopne
sbb
cltd
scas
jg
enter
jmp
add
pop
and
sbb
adc
adc
iret
dec
push
cmc
loope
test
jg
cmpsl
loope
hlt
dec
sbb
dec
jecxz
arpl
ss
xchg
or
leave
icebp
push
push
lods
das
jge
mov
std
jg
test
lods
comiss
lock
cld
xchg
jp
adc
loope
orl
insl
push
mov
lret
push
mov
mov
pusha
xchg
and
into
jecxz
repz
push
sbb
xchg
loopne
popa
adc
inc
test
dec
pop
cmp
out
jnp
adc
out
pop
mov
xor
loope
push
pop
ds
shll
call
test
dec
jmp
and
test
cmc
add
xor
outsl
scas
pop
sbb
insl
inc
insb
int3
push
mov
scas
lret
sbb
mov
fnstsw
dec
fildl
xchg
ud2
pushf
xchg
jbe
ds
or
jbe
add
push
in
mov
add
sbb
or
test
cmp
movsb
loopne
dec
mov
jo
nop
xchg
jle
popf
orb
repnz
adc
outsl
pusha
mov
insb
movsb
mov
test
fbld
mov
adc
push
mov
xchg
imul
push
push
fstpl
shll
test
movsb
gs
pop
mov
stc
fsubs
dec
leave
hlt
push
enter
pop
loope
and
add
icebp
popa
mov
add
cltd
jo
xchg
mov
or
xchg
pop
pop
clc
mov
shll
cmp
scas
cmp
enter
shlb
aas
fists
lea
shlb
scas
in
imul
inc
xchg
cmpsb
pop
pop
push
out
cmp
and
scas
mov
into
shlb
pop
pushf
push
mov
movsb
sbb
jecxz
xor
pushf
push
movb
pop
lds
out
xor
test
mov
xorb
pop
mov
inc
aas
and
popf
push
loope
decb
cli
cld
pusha
gs
aad
cmpsb
repnz
mov
outsl
es
or
push
cmp
mov
or
or
bnd
and
dec
ja
popa
sarb
mov
mov
scas
push
sbb
add
loopne
pop
adc
pop
cmpsl
lahf
adc
bound
in
push
ja
cmp
lret
iret
decb
adc
xor
or
lods
inc
and
loop
hlt
aam
add
or
int3
push
mov
loope
rol
aas
and
mov
lods
pusha
cmpsl
fdivl
ds
jp
stc
sub
xor
sbb
enter
inc
and
call
push
push
sbb
push
inc
into
lods
jnp
lods
mov
lock
push
xchg
push
int3
ret
inc
pop
add
mov
push
jno
pop
jl
ret
mov
and
addr16
pop
bound
add
cld
sub
pop
ret
mov
jecxz
jl
test
push
inc
push
loop
cmpsl
lret
xor
mov
push
lods
xchg
ljmp
insb
lds
adc
gs
ds
jno
sbb
jmp
rolb
add
cmc
fistps
fcompp
fdivs
int3
jno
push
aad
fs
mov
jg
shlb
add
pop
movsb
adc
loopne
and
out
cltd
test
dec
imul
mov
sahf
int
test
lcall
push
in
call
jecxz
mov
sub
mov
call
mov
fimull
and
dec
insl
push
fstps
xor
cld
ftst
pop
orl
scas
sbb
aaa
cmp
dec
in
in
push
sar
push
insl
inc
inc
loop
inc
andl
movsl
aas
ds
xor
adc
lds
cmp
jnp
xorl
mov
mov
out
push
mov
negb
cmp
cwtl
and
adc
addr16
ret
test
out
cmp
add
pop
inc
mov
cmpl
mov
inc
mov
nop
ljmp
aas
mov
adc
into
mov
hlt
sbb
jo
rcl
dec
mov
ss
je
sub
and
xor
xor
cmp
andb
orb
jle
decl
sbb
mov
push
shr
jbe
mov
inc
mov
stos
sub
in
rorb
adc
lret
std
xlat
decl
and
test
jo
lcall
jbe
push
ljmp
xchg
je
repz
int3
dec
lret
daa
stos
mov
cltd
jbe
cwtl
xchg
test
fldt
push
jae,pn
jae
dec
ret
or
aad
out
in
adc
sbb
pop
add
cmp
push
shlb
cli
fnsave
inc
inc
jnp
xor
out
add
sti
je,pt
mov
push
mov
push
mov
mov
add
sbb
pop
add
xchg
adc
mov
mov
adc
push
pop
out
loopne
jge
mov
addr16
out
mov
sbb
fwait
in
icebp
add
mov
scas
aam
jae
dec
cld
mov
cmp
mov
xchg
pop
icebp
ja
mul
inc
andb
xchg
fidivl
dec
jno
inc
adc
sub
pop
test
dec
sub
ljmp
pop
mov
and
cmp
pop
andl
mov
cli
iret
jo
das
imul
jnp
inc
xor
lea
fcmovnu
daa
std
imul
adc
popa
outsl
das
dec
xor
and
mov
or
cmpsb
movsb
adc
cld
cmp
sbb
xlat
gs
push
fwait
xchg
lret
test
lds
fsubs
inc
mov
mov
ss
testb
xor
inc
es
stos
mov
enter
les
psubq
and
or
mov
dec
sub
inc
je
in
push
xor
xchg
enter
test
cld
arpl
js
and
and
insl
or
pop
add
imul
aaa
aam
in
or
es
xor
cmp
add
hlt
jnp
mov
testl
dec
or
dec
jmp
push
mov
movsl
in
xchg
stos
sub
iret
lds
xor
push
push
sbb
adc
push
or
xchg
mov
ss
in
int3
icebp
out
xorb
push
test
sub
inc
mov
jns
pusha
imul
cli
mov
jns
jne
sub
les
ficompl
aam
mov
or
mov
fdivr
out
mov
pop
lds
mov
movsb
cmpsl
test
xchg
test
pop
xor
mov
pop
iret
cmp
inc
lds
mov
mulb
xchg
in
lock
loopnew
pushf
mov
inc
or
cmc
push
and
inc
arpl
push
and
aam
and
out
int
push
cmp
stc
loopne
mov
lea
push
mov
pop
cwtl
ret
pop
aad
aam
add
popa
shrb
cmpsl
jne
xor
mov
sbb
push
testl
pop
or
aas
push
push
js
pop
inc
xchg
imul
es
xchg
test
adc
dec
fs
push
int3
jo
div
nop
mov
dec
out
mov
int
and
mov
rorl
mov
xchg
push
bound
movsb
adc
pop
cmpl
cld
loope
mov
jb
pop
add
xorb
popl
and
mov
push
imulb
movsb
pop
imulb
push
dec
pop
mov
call
pop
lock
lcall
jl
or
pushf
and
cli
sbb
sub
jne
negl
nop
vunpckhps
daa
fcmovu
jmp
add
mov
inc
inc
mov
xchg
or
mov
dec
lock
std
fwait
repnz
cltd
cmp
pusha
add
cs
sbb
jns
aaa
pushf
str
inc
shrd
ds
inc
loop
lods
xchg
push
test
sbb
jge
nop
in
mov
dec
jns
jle
sub
cmp
pop
je
ljmp
sti
out
pop
outsb
insb
xchg
pushf
lret
push
jecxz
jecxz
aas
push
xor
aas
adc
scas
in
push
adc
jb
test
in
add
push
xor
cmp
xchg
test
or
jno
jecxz
rorl
and
mov
inc
lahf
fisttpl
mov
ja
int
dec
popa
pop
mov
cmpsb
lods
jnp
xlat
fcoml
adc
int3
sbb
stc
sub
js
pushl
mov
sub
int
or
mov
mov
lods
cmp
mov
cli
adc
call
adc
icebp
mov
fcoms
mov
add
xchg
mov
and
mov
fs
xchg
push
movsl
or
cmpsl
movsl
inc
mov
shlb
mov
js
out
hlt
ds
mov
mov
mov
mov
out
mov
mov
mov
jnp
popl
scas
adc
mov
mov
dec
add
mov
clc
and
push
out
mov
dec
pop
ret
insl
ja
movsl
dec
fcompl
adc
push
xchg
fxch
add
sub
inc
push
hlt
out
stos
xchg
add
ror
push
add
mov
rclb
inc
cmp
cmc
sbb
adc
dec
lea
sub
gs
or
pop
xlat
adcl
cli
add
test
in
dec
xchg
fwait
xchg
xlat
inc
das
daa
add
xor
mov
cmp
xor
push
fstpl
sbb
sub
push
mov
sbb
adc
or
testl
clc
jnp
ret
sbb
cld
ss
jge
mov
inc
lods
in
pop
mov
es
jle
mov
sarb
test
cmp
or
jne
testb
pusha
orps
cld
mov
cld
out
or
adc
push
lret
movl
push
push
call
and
rcrb
xlat
push
cmp
out
scas
pusha
dec
cwtl
sti
out
repz
hlt
subb
add
adc
add
adc
lahf
inc
ss
rcl
in
das
add
arpl
shlb
ss
sbb
sub
cmp
pop
fnstenv
mov
movsl
movsb
stos
push
lret
movsb
push
lds
xchg
mov
imul
fstpt
sbb
andb
pop
and
shll
test
push
mov
mov
inc
out
or
enter
mov
sub
inc
add
enter
out
dec
add
insl
sbb
ret
pop
aas
add
leave
xor
cmp
loope
stos
mov
insl
data16
adcb
aam
out
pop
mov
pop
dec
cmp
jbe
lea
pop
sub
jl
mov
je
lret
xor
add
jl
xor
adc
adc
in
stos
jp
dec
xchg
test
lret
std
in
push
loope
add
sub
inc
xchg
aaa
mov
dec
fdivl
pushf
jne
test
movsl
push
sub
cmp
hlt
test
out
es
enter
popl
inc
test
push
and
jnp
mov
jbe
dec
insl
cld
sti
or
loopne
in
sub
stos
lahf
shlb
sbb
inc
mov
pop
or
dec
insl
ret
dec
adc
pusha
shlb
mov
aas
mov
shlb
xchg
mov
in
xchg
pop
mov
popw
int
loopne
cmp
aam
dec
ret
insb
sub
xchg
jbe
and
push
aad
ret
cmp
xchg
imul
mov
mov
pop
lds
or
loopne
fildll
push
pop
sub
cs
outsb
xchg
int3
and
cmp
mov
mov
shlb
sti
sub
pop
add
pop
and
dec
jge
sub
jne
fstpl
adc
ljmp
push
and
ffree
or
lcall
shlb
pop
xor
ficompl
xor
cmpsl
cmp
js
jnp
loop
out
sub
cwtl
jb
sbb
popa
xchg
jae
stos
fs
lea
inc
or
lcall
js
mov
pop
push
mov
push
pop
mov
mov
das
fstps
aaa
mov
repz
or
addr16
sub
mov
pop
cltd
enter
inc
insb
out
or
fcmovne
adc
aad
in
mov
imul
icebp
mov
pop
mov
xlat
mov
add
scas
arpl
fcmovu
subb
jo
fstps
push
lea
cmpb
or
pop
mov
popa
xchg
inc
icebp
adc
jl
xor
push
or
pop
outsb
xor
int3
adc
in
mov
sahf
mov
xchg
jns
push
push
inc
xchg
enter
push
daa
ficompl
jbe
mov
xlat
xchg
xchg
sbb
mov
out
cmp
mov
addr16
jmp
ret
jl
int3
jg
cwtl
mov
incl
pop
push
les
addr16
arpl
lcall
rcrb
repnz
dec
fcompl
adc
lret
inc
lahf
out
in
jmp
xchg
aas
adc
hlt
sub
add
imul
sbb
or
imul
out
and
pop
jne
shlb
cmp
sub
mov
push
inc
sub
test
stos
testb
jns
inc
daa
push
out
dec
fdivl
out
fldcw
add
fmuls
xor
dec
int3
xor
les
imul
adc
xor
roll
bound
mov
adc
je
es
push
sub
xchg
test
ret
mov
cmp
sub
repnz
xchg
push
aas
test
sbb
and
xchg
pop
int3
or
pop
leave
xor
xor
and
sbb
jle
and
daa
outsb
imul
das
fstl
and
inc
dec
outsl
loope
icebp
cmpl
rcll
aaa
sbb
arpl
add
pop
cmc
cmpsb
cmp
lcall
cmpsb
mov
sbb
pop
shlb
shll
or
sbb
pop
roll
push
adc
jg
mov
imul
je
dec
mov
lds
sahf
dec
push
xchg
test
inc
jne
and
clc
inc
xchg
dec
addl
loopne
adc
inc
xchg
push
cltd
lds
pop
std
pop
imul
push
dec
mov
bndldx
push
ret
xor
rorb
add
adc
orb
popf
cs
enter
jbe
pop
xchg
xchg
add
sbb
mov
dec
dec
jg
inc
leave
mov
je
clc
scas
add
and
fildll
xchg
hlt
sbbw
lret
push
push
hlt
pop
add
jge
pop
and
into
fsubs
mov
loope
dec
subb
or
mov
les
jp
push
movsl
fwait
mov
sub
movsl
and
mov
cmp
sub
mov
mov
inc
lahf
aas
pop
jbe
iret
movsl
les
inc
stos
pop
xchg
jbe
unpckhps
mov
sbb
and
jg
faddl
sub
inc
xor
jbe
cmp
or
cwtl
mov
insb
sub
sbb
add
jmp
add
mov
mov
addr16
xor
mov
ja
fsubrl
cs
mov
aaa
loop
cltd
push
push
lds
mov
in
dec
cmp
sub
ja
lcall
sub
push
subl
fwait
dec
stos
rep
or
pop
inc
pop
adc
out
shrl
enter
test
inc
ja
push
xchg
data16
fcompl
mov
xor
ret
test
mov
mov
stos
loopne
sbb
mov
push
inc
jmp
nopl
mov
cld
popf
push
leave
add
insl
mov
clc
scas
aaa
repz
add
sub
popa
xor
fcomps
mov
sub
stos
pushf
lds
int
mov
icebp
jno
xchg
sub
add
add
es
popf
lret
out
imul
push
sbb
cmp
je
loop
in
dec
insl
dec
cwtl
sub
lods
or
xor
cmp
cmpsl
stos
ja
hlt
in
stos
lods
lcall
fldenv
daa
sti
xor
dec
mov
dec
cmp
jo
pop
dec
aam
test
outsl
arpl
mov
imul
fldenv
insb
leave
call
mov
inc
sti
sub
xchg
ja
and
sub
dec
stos
adc
lret
mov
dec
jmp
ficoml
aaa
cmp
idivl
push
test
sub
out
lret
test
push
mov
in
jl
das
mov
iret
pop
inc
push
lret
mov
xor
ljmp
mov
push
test
fadd
dec
call
push
inc
dec
std
insb
dec
aad
mov
adc
push
xor
push
scas
xor
sub
jae
mov
xor
test
loope
xchg
cld
dec
mov
fwait
dec
pop
js
fsubrl
leave
insb
outsb
push
mov
mov
sub
test
dec
fistps
mov
jne
bound
mov
pushf
xchg
icebp
stos
dec
mov
jp
shr
xchg
lock
test
cltd
jecxz
jns
adcl
or
mov
adcb
push
stos
push
and
pop
or
xor
pop
ja
dec
hlt
add
cmp
jmp
stos
loop
xchg
mov
mov
sbb
in
imul
stos
xor
lock
loopne
mov
jle
setl
xorb
cmpsb
or
mov
adc
lods
push
push
adc
imul
push
lahf
pop
out
pop
ficompl
cmp
icebp
xor
and
movl
sbb
adc
sbb
out
insl
ljmp
gs
out
cmpsl
aam
repz
mov
adc
mov
inc
cmpsl
hlt
mov
jmp
jb
sahf
fadd
jle
lock
push
mov
mov
aam
or
clc
mov
call
cmp
loop
sub
push
ret
sbb
movsb
push
cmp
pop
mov
add
mov
sub
mov
push
call
test
and
nop
jns
or
pop
mov
mov
push
lcall
cmp
ds
cmp
sbb
outsb
inc
xchg
aas
ret
fucomi
into
mov
leave
sti
fmuls
sub
orl
mov
inc
sahf
jecxz
stos
stos
rorl
add
add
jg
ja
cltd
or
pop
addl
dec
cmc
pop
dec
movsl
stos
bound
cwtl
stc
jmp
push
fidivrs
jno
leave
jnp
in
jnp
sub
mov
mov
push
lock
mov
loop
xor
bound
aas
jo
lahf
push
movsl
cld
testw
inc
sbb
xchg
gs
test
sbb
fistpl
loope
fdivrl
adcb
mov
fistpl
jne
push
mov
mov
cld
je
enter
mov
sub
imul
pop
pop
arpl
push
cmp
cli
mov
mov
xchg
push
xchg
mov
ljmp
dec
jmp
popf
sahf
cmc
and
popf
shll
mov
lods
es
sub
adc
add
loope
sub
fs
pushf
scas
scas
mov
push
rcr
xor
and
inc
and
or
inc
or
insl
fidivrl
insb
movsl
out
jnp
push
and
push
inc
jno
pop
or
or
mov
jae
movsb
mov
pop
fcompl
xchg
lea
sbb
mov
out
mov
fnstenv
mov
negl
int
inc
push
xchg
stc
inc
cmp
popf
add
hlt
dec
xchg
push
and
xor
lods
neg
cmp
aas
xor
pop
fdivrp
fcomi
out
sti
lahf
mov
call
adc
sub
movsl
loope
push
xchg
push
ret
ss
notl
in
aam
or
cmpsl
add
ja
inc
les
jp
ret
mov
in
test
jg
imul
push
js
jae
lret
and
xor
xchg
aaa
mov
pop
add
mov
sub
push
dec
lods
addr16
fwait
adc
and
out
scas
cmp
fisubs
clc
xchg
outsl
adc
repnz
xor
jae
or
mov
cltd
movsl
fs
mov
mov
xchg
push
mov
ret
int3
test
xchg
sahf
adc
mov
mov
and
or
outsb
jne
cli
sti
icebp
push
adc
and
add
jnp
jp
pop
fstps
nop
xchg
jle
aad
sarl
out
mov
mov
sar
xor
subb
xlat
fnstcw
mov
test
scas
and
das
fdivrl
into
xorb
jle
shrb
sbb
imul
nop
jl
xor
xlat
push
add
bound
cmp
int3
decl
jb
or
lret
adc
es
jecxz
test
lcall
stc
mov
lods
insb
loop
inc
fidivl
icebp
xchg
dec
ljmp
scas
jmp
xchg
push
fs
aad
and
add
fcomps
xchg
jge
dec
lods
outsl
les
mov
sti
mov
mov
jno
fisttpl
fisubs
mov
sbb
daa
xchg
mov
mov
fldl2t
cli
cmp
mov
cld
mov
sbb
fstl
cmp
insl
rcrl
lahf
jl
jmp
outsl
aaa
dec
movsl
pop
sub
daa
ljmp
or
ljmp
int
pop
jno
repz
inc
mov
or
sub
rcrl
lcall
mov
cmpsl
mov
adc
sub
inc
sub
mov
stos
jb
rorl
mov
repz
mov
pusha
stc
adc
cmp
sub
push
lahf
cmp
bound
cmp
dec
movsb
sti
dec
mov
xor
xlat
lcall
call
js
sbb
inc
mov
inc
jb
cmc
cmp
fstp
aas
sub
jle
sbb
mov
lcall
aaa
inc
insb
pop
daa
sub
cmpsl
add
test
mov
xchg
cld
fnstenv
addr16
pop
mov
xchg
insl
or
mov
cmp
repz
mov
xorb
les
adc
inc
sbbl
or
xchg
adc
jns
xchg
insb
dec
mov
mov
push
dec
mov
das
add
insl
sbb
mov
scas
in
jno
rcll
inc
int3
mov
mov
aad
pop
clc
push
cwtl
fwait
sbb
mov
stos
and
or
fcoms
inc
decl
xlat
outsb
or
inc
or
stos
or
nop
fwait
ds
lcall
jns
dec
fwait
shrl
fidivrl
dec
jns
add
rcll
adc
jge
or
aas
insl
sahf
stos
xor
sbb
ret
std
xchg
xor
or
stc
pop
cmp
mov
pusha
jl
pop
jno
mov
push
or
jmp
enter
mov
sub
or
jo
lock
fadds
aas
loop
xchg
shlb
push
push
sahf
jle
push
push
cwtl
stos
cmp
mov
in
dec
test
xchg
loop
sub
mov
jae
int3
lret
jmp
pusha
dec
shl
sbb
and
push
pop
adc
insl
test
lret
or
mov
imul
loop
cmpsl
mov
repz
adc
push
inc
iret
in
and
scas
das
jl
push
xor
faddl
sub
jne
fildll
jne
in
inc
pop
jmp
mov
lcall
sarw
and
cmp
sub
in
pop
pop
sbb
out
xor
adc
xor
adc
dec
pop
cmp
loopne
addr16
jmp
or
aas
jbe
cmp
xchg
popf
xchg
push
inc
outsl
jo
jg
loope
mov
jle
out
pop
arpl
mov
test
xchg
mov
mov
mov
sub
dec
xchg
sbb
push
insb
mov
repz
jmp
mov
dec
mov
cwtl
ja
jbe
cmp
loope
andb
or
inc
sbb
pop
cmc
ds
ss
mov
add
pushf
and
fnsave
inc
xchg
enter
ret
stos
and
fiadds
out
test
xchg
nop
cltd
outsb
inc
int
aaa
icebp
jg
ds
mov
mov
shr
push
iret
jo
cmp
ljmp
add
mov
sub
and
mov
mov
push
rclb
fldt
sahf
les
mov
mov
in
add
popl
subb
dec
adc
icebp
test
icebp
stos
pop
push
pusha
shl
add
test
inc
xchg
bound
arpl
shll
sub
sub
xchg
aam
cmp
test
cld
aas
ficomps
mov
push
adc
pop
push
mov
or
sub
jmp
xchg
incb
adc
mov
daa
and
push
stos
mov
call
sub
cmp
xor
popw
out
js
sbb
mov
insb
in
cmpsl
sub
jb
push
xchg
xor
jecxz
push
cwtl
mov
cmp
xor
xor
movsb
arpl
test
adc
cmp
push
ja
test
sbb
mov
int3
inc
push
idivb
sub
scas
mov
lret
push
xchg
data16
sti
pop
daa
test
pop
sbb
popa
sub
sub
push
pop
xchg
jne
popa
mov
out
js
test
push
sbb
enter
inc
mov
add
mov
cmp
and
push
cs
sbb
mov
mov
lock
pushf
dec
cmp
stos
xchg
cmp
aam
jecxz
sti
push
mov
or
or
lret
pop
or
pop
incb
ds
mov
aas
pop
pop
stos
insl
push
mov
mov
testb
xor
sub
adc
cltd
mov
jnp
xchg
or
xor
jl
xor
outsl
dec
idivb
mov
cmp
mov
loopne
push
mov
xor
stc
mov
in
loop
outsb
outsl
mov
rcrb
lcall
fbstp
vpcomuq
sarl
jle
mov
adc
sub
xchg
ret
jo
push
sbb
mov
xorl
jecxz
pop
ret
ljmp
mov
cmp
xor
aad
xor
sti
in
jl
orb
lret
ds
inc
mov
adc
outsb
cmp
push
push
dec
xor
push
in
inc
inc
xchg
push
test
push
loope
mov
sub
add
or
sbb
aam
aam
bound
jne
sub
xchg
push
rorl
jnp
cmovne
stc
inc
sbb
cmpsb
inc
mov
xor
sarb
outsl
imul
push
ficoml
sbb
gs
std
mov
mov
fsubr
jns
lret
cmpsb
std
pop
cltd
daa
ret
and
fnstsw
les
lea
jecxz
ds
fldenv
xchg
cvtpi2ps
adc
call
mov
dec
mov
pusha
adc
pop
xlat
lods
dec
inc
inc
sub
and
xor
arpl
push
mov
insb
mov
imul
cwtl
stos
xor
stc
sub
push
inc
add
fs
xor
ljmp
stos
and
mov
insl
imul
cmp
fsubrl
cmpl
adc
stos
fmull
inc
fsubl
loopne
push
into
xchg
aad
call
ss
adc
cmp
outsl
in
dec
mov
mov
gs
xchg
ror
fcoml
or
xor
rorb
or
sub
mov
or
popa
sbb
test
decb
and
sub
lods
pop
push
sbb
adc
jae
or
mov
dec
repnz
adc
push
rolb
fldl
arpl
sub
fistpll
sbb
imul
insl
pusha
in
mov
hlt
in
mov
sbb
push
jae
lock
in
mov
out
fstpl
sub
popa
cmp
gs
and
or
xorl
jno
lret
xchg
icebp
pop
sbb
cwtl
lea
add
ljmp
push
mov
js
sbb
or
inc
add
add
mov
outsb
cmc
andl
pop
cs
cmpsb
jl
enter
or
push
pop
inc
out
mov
jae
sub
dec
or
mov
or
pop
mov
add
loope
hlt
pop
test
cmc
push
stc
cmpl
xlat
pop
lods
in
add
lahf
cmpsl
jns
dec
dec
popa
inc
push
add
mov
lods
dec
movsb
sub
sub
jae
dec
in
data16
and
pop
mov
xchg
lea
lcall
in
enter
out
inc
int
push
repnz
test
mov
mov
mov
xlat
or
dec
sub
mov
sub
stos
movsl
mov
out
sub
test
or
scas
xor
and
pop
dec
mov
call
pop
ds
scas
jp
add
fnsave
test
cmp
add
out
movsb
cli
mov
and
mov
adc
xor
hlt
fiaddl
loope
push
pop
mov
inc
ficomps
nop
out
jnp
insb
jb
and
jnp
gs
jb
jl
pop
pop
or
mov
ja
out
imul
lds
imul
sahf
mov
sbb
cmp
pushf
lods
rolb
fwait
sbb
jg
popf
and
imul
call
sar
push
jecxz
jmp
push
and
in
adc
hlt
mov
push
iret
icebp
sub
out
xor
jnp
stos
push
adc
xor
push
sbb
rolb
pop
and
and
pushf
push
cmc
sub
sbb
outsl
lahf
punpckldq
lahf
cmpsb
xor
aas
cmp
ficoml
icebp
dec
repnz
in
fsubs
xchg
fcompl
xchg
rol
dec
nop
pusha
inc
push
or
lods
pop
rcr
or
inc
sbb
and
inc
imul
sub
xor
das
mov
je
in
lret
add
sub
loopne
clc
mov
cmp
shr
xor
sar
pop
cmp
std
into
cmp
sti
jns
mulps
inc
push
sbb
and
xor
mov
mov
out
outsl
icebp
mov
into
cmp
cmp
pop
pop
pop
inc
addr16
push
mov
insl
lock
mov
es
mov
sbb
test
ret
pop
cmpsl
xor
adc
out
movsl
jg
insb
mov
loope
mov
adc
push
add
pop
ss
mov
lea
mov
scas
pop
mov
stc
mov
mov
xlat
loope
loopne
clc
cmp
mov
sbbl
stc
pop
roll
mov
push
inc
mov
sbb
int3
mov
dec
sub
jl
and
add
imul
jg
aam
mov
aad
mov
xchg
stc
pop
xor
pop
popa
sbb
ficoms
push
outsl
mov
data16
mov
inc
fcmovnbe
xor
xchg
xchg
ds
xchg
lock
insb
dec
dec
cmp
mov
mov
jle
xlat
data16
movsb
sbb
cmpsl
adc
adc
adc
in
or
imul
jo
sbb
sbb
push
jmp
xor
xchg
lock
loopne
sahf
jbe
and
cmpsl
mov
roll
xor
cmp
xor
outsl
gs
sbb
cmp
cmp
jg
lret
or
cmpsl
movsb
cmpsl
pop
lock
mov
mov
and
pop
dec
in
and
dec
ficoms
xchg
sahf
jne
inc
out
mov
jne
test
pusha
adc
and
fstp
sti
mov
das
or
sbb
pusha
adc
xchg
mov
push
std
lock
inc
pop
daa
lret
and
mov
sahf
sbb
ss
call
into
test
xchg
adc
and
or
ja
push
std
xchg
in
mov
mov
cmp
mov
lods
inc
divb
xchg
xchg
mov
cmc
add
repnz
rcll
push
dec
sbb
add
xchg
jecxz
pop
mov
lods
cmp
push
xchg
in
lret
in
outsl
rolb
outsb
outsl
cmp
and
fneni(8087
mov
xchg
imul
add
fcomp
in
arpl
pop
sti
pop
mov
or
or
xchg
fisubl
push
out
jecxz
lods
jg
testl
lahf
cmc
add
xchg
ret
loope
out
push
mov
out
add
js
push
add
repz
fwait
pop
pusha
in
jp
ja
loopne
stos
xchg
in
mov
push
lds
xor
ds
pop
inc
mov
sbb
pop
pop
je
cmpsb
mov
push
aam
inc
aaa
stos
mov
das
cmp
mov
push
jno
les
pop
arpl
mov
dec
push
out
loope
test
shlb
outsl
adc
cld
cmp
dec
stos
mov
pushf
xchg
lods
jecxz
stos
loop
insb
cmp
pop
inc
push
ret
add
pop
sub
mov
int3
or
sbb
pop
stc
in
mov
insl
addb
insl
push
xor
and
out
xchg
adc
sti
xchg
sub
lret
imul
inc
cmp
and
dec
test
jno
cmp
and
movsb
popf
popf
mov
repz
in
lret
mov
and
pop
imull
fcmovu
push
inc
call
sbb
ss
xor
adc
sbb
adc
lods
outsb
inc
jne
stc
and
in
jb
xorl
push
js
pop
cmp
out
adc
push
mov
das
inc
loop
icebp
insl
out
mov
pop
loope
or
leave
adc
int3
movsl
lahf
jle
cli
sub
aas
in
jp
xor
add
pop
repz
ss
pusha
mov
cltd
insl
dec
lahf
aad
cmp
and
mov
jmp
pop
xchg
xchg
inc
dec
imul
stos
dec
je,pn
fiaddl
iret
fildl
sub
cmc
cmp
rorl
jecxz
and
int3
inc
scas
xor
sahf
es
add
cmp
mov
addr16
sub
jl
mov
jnp
jb
out
ljmp
xlat
or
or
je
out
les
xor
cmp
or
inc
and
popf
lods
mov
outsb
push
cmpsl
in
mov
scas
into
clc
mov
jbe
outsl
out
sbb
mov
imul
testl
pushf
xor
mov
adc
rcrb
int3
add
imul
cltd
adc
das
jb
or
jb
pop
add
ljmp
icebp
cmp
imul
pop
push
arpl
push
arpl
push
jecxz
faddl
pop
jae
or
and
push
bound
ljmp
aad
lods
inc
jle
aaa
add
push
sbb
jns
jno
mov
das
repz
sbb
add
test
mov
and
in
mov
xchg
popf
lock
dec
aam
pop
rcr
push
mov
push
inc
jge
out
aad
xchg
push
xor
lret
rorb
into
sbb
sbb
int
push
iret
xchg
lcall
stos
subl
das
mov
testb
inc
adc
pop
in
sbb
push
imul
xor
push
push
adcb
add
pop
hlt
std
inc
iret
jmp
out
out
loop
sahf
push
sbb
les
js
cs
and
ja
sbb
lods
call
jb
nop
out
adc
insl
xchg
jmp
add
imul
clc
fimull
or
enter
roll
add
sar
aaa
stos
cmp
ficomps
jecxz
inc
ret
pop
leave
jo
pusha
fs
jbe
lods
mov
and
ficoml
pop
adc
popf
xchg
fwait
pop
mov
jo
imul
mov
adc
mov
xchg
mov
push
out
mov
mov
andb
stc
int
mov
jnp
add
add
loop
fwait
cmp
loopne
sbb
cmp
sbb
and
cmp
push
mov
gs
movb
jo
xor
jno
sub
and
xor
idivb
pop
cmp
jbe
sbb
xchg
push
mov
pop
push
int
push
imul
test
inc
sub
or
mov
dec
mov
inc
popf
mov
pop
lahf
push
fdivs
mov
xchg
mov
cmp
jno
into
and
lea
or
add
rolb
stc
and
and
leave
in
or
mov
add
in
imul
cwtl
popa
pop
sbb
inc
into
adc
hlt
mov
mov
mov
mov
push
cmp
mov
cltd
or
loop
sbb
push
xchg
xchg
jns
aas
pop
fidivs
adc
into
inc
lds
ss
shlb
aad
add
ret
cli
push
fistpl
icebp
cmp
sbb
or
pop
sti
mov
mov
imul
insl
xchg
mov
js
insb
push
in
fstps
jle
sub
xor
xor
jl
cmp
sub
sbb
data16
sub
xchg
loope
xchg
lods
pushf
mov
or
fucom
addr16
daa
es
pop
mov
dec
stos
shrl
int
outsw
add
cmc
lock
sub
mov
mov
gs
jo
mov
dec
mov
in
xchg
lea
jne
inc
lock
cli
mov
mov
mull
hlt
fbld
push
mov
pop
inc
stos
nop
and
mov
imul
pusha
push
into
lret
cld
mov
push
inc
jl
dec
sbb
dec
inc
popl
mov
clc
xor
or
cmpsl
and
bnd
ret
xorl
sbb
lret
imul
lret
xchg
repz
xlat
aas
outsl
sub
repnz
pop
jne
aam
sbb
das
aam
cmc
daa
loopne
in
fiadds
cmpsb
xlat
xchg
mov
loop
fnstsw
sbb
fbld
add
adc
xchg
pusha
into
ja
inc
ss
int3
pop
mov
aas
mov
loop
jge
popf
jae
add
push
mov
sub
dec
fmul
nop
fists
pushf
or
or
push
xor
jecxz
and
add
sahf
js
jb
insl
shl
adc
inc
flds
cmp
lea
lret
or
dec
stos
cmp
adc
jnp
fiaddl
fstl
mov
test
ss
jne
or
cmp
adc
popf
add
push
daa
scas
mov
mov
xchg
pop
les
mov
cld
repz
je
dec
sbb
or
lods
cmp
mulb
mov
jp
repz
inc
push
mov
adc
adc
iret
call
pop
or
cli
stc
shl
and
push
out
das
xor
scas
ds
repz
inc
ja
test
push
jo
push
mov
jl
xchg
sbb
fbld
or
xchg
mov
mov
leave
out
outsl
cld
mov
pop
jl
fcompl
clc
lahf
sbb
sbb
xchg
push
add
push
jne
lds
and
clc
rorb
cmp
pop
push
stc
arpl
clc
hlt
adc
or
insb
sbb
inc
into
mov
aas
mov
inc
fsubrp
jecxz
loope
adc
arpl
lahf
fwait
in
ret
lahf
xchg
sarl
jmp
aam
jmp
push
cltd
cmp
jno
movsb
mov
dec
push
shll
fwait
mov
jbe
jge
jno
insl
and
mov
insl
mov
shlb
insl
daa
pop
pop
retw
int
fwait
push
std
imull
mov
mov
or
xor
pop
fsts
xchg
outsb
sub
or
pop
cmc
lcall
fidivl
pop
cmpb
add
fcoms
sbb
movsl
and
and
enter
lcall
push
inc
std
add
ficoms
fwait
movsb
lea
dec
out
jb
xchg
ljmp
jb
sbbl
push
arpl
sub
mov
jns
add
fwait
dec
nop
mov
adc
cmp
xchg
inc
in
daa
mov
mov
repz
scas
mov
and
leave
pop
xor
adcb
inc
stos
xor
mov
out
jmp
or
dec
jns
mov
mov
push
ficoms
iret
jge
push
mov
mov
rcrb
shll
test
pushf
mov
lods
mov
xchg
dec
pop
add
xchg
cmp
cmp
out
dec
jns
cltd
xchg
mov
inc
dec
test
icebp
sbb
mov
pop
xchg
stos
aaa
les
ds
fwait
and
xchg
ffree
cmpsb
jmp
dec
jmp
jns
cmpsl
pushf
jmp
mov
xor
lahf
pusha
arpl
mov
dec
ljmp
pop
jae
jbe
mov
addr16
mov
call
movsb
or
shl
dec
repnz
in
pop
mov
into
pop
push
cld
dec
cmp
inc
dec
out
mov
jg
or
cmp
pop
or
stos
cld
cmp
scas
cld
or
leave
lcall
fsubp
push
cs
mov
lods
pop
dec
imul
clc
xchg
xor
jns
jne
lret
push
lock
sub
inc
inc
cmp
lcall
sub
vcvtsi2ssl
dec
fildll
jb
push
and
leave
or
cmc
das
cmp
adc
pusha
imul
mov
outsl
lds
xchg
mov
add
roll
and
lods
cwtl
lret
or
das
out
xor
aam
jl
hlt
rcrl
sub
ret
outsb
and
das
ja
icebp
cmp
mov
or
mov
in
dec
jmp
cmp
into
xor
scas
pop
sub
push
repz
jg
aad
dec
sti
push
cmp
aaa
cwtl
and
mov
and
repnz
xor
imul
cmc
xchg
int
outsl
mov
adc
jecxz
fstpl
cmpb
mov
jp
dec
les
test
loope
mov
cmp
cmpsb
xchg
loopne
inc
orb
ret
add
icebp
in
out
or
sti
popf
pusha
lahf
ss
test
nop
dec
xchg
fwait
and
js,pt
arpl
add
sub
mov
adc
xor
jo
pop
push
cmp
out
xchg
popf
add
push
aam
arpl
adc
addr16
pop
fisubl
and
shrb
insb
push
loop
sar
test
bound
insb
scas
ja
lds
xor
mov
mov
pop
daa
les
xchg
icebp
adc
idivl
daa
cld
cld
lret
shlb
into
loop
mov
push
movsl
jl
dec
lcall
add
and
dec
std
mov
pop
pop
fisttps
jns
jmp
sub
cmp
fisubl
xchg
and
ds
and
lea
fimull
or
adc
xor
mov
sbb
sbb
cli
mov
pop
movsl
dec
std
sub
aam
mov
xchg
das
sbb
lods
stos
mov
mov
mov
sbb
xor
xchg
movb
push
sbb
call
sub
les
data16
adc
int3
or
lock
bound
aam
ror
pop
test
scas
adc
call
ret
add
imul
loopne
icebp
outsl
imul
dec
lret
push
lret
comiss
mov
call
jg
adc
das
mov
je
jge
mov
xlat
repz
or
jg
ja
sarb
xchg
neg
xchg
lret
mov
mov
sub
mov
pushf
sti
int3
roll
call
fcoml
orl
fstl
shl
pop
cmp
in
shll
in
outsb
mov
xchg
xor
hlt
xor
mov
mov
and
pushf
inc
xchg
stos
es
sbb
ret
fnstsw
insb
sbb
inc
xor
inc
imul
xchg
mov
mov
mov
stc
mov
jl
loopne
cltd
in
or
lods
jge
imul
enter
push
in
jne
inc
jbe
mov
mov
hlt
adc
lret
add
mov
mov
mov
adc
pop
cmp
sub
iret
sub
push
fprem1
xor
sbb
cwtl
arpl
or
imul
or
stos
imul
fmuls
movsb
filds
or
push
jb
cmpsb
das
ret
pusha
bnd
adc
test
ret
ret
int
scas
push
push
lret
test
fwait
test
mov
inc
inc
enter
jne
ret
xor
mov
jg
int3
and
ss
xchg
jb
sbb
mov
mov
lods
imul
push
sti
fisubrs
ret
fwait
sub
insl
loopne
sub
sahf
enter
sbb
scas
loope
dec
adc
mov
outsl
lea
sahf
lcall
loope
fadd
and
jg
jb
push
sbb
dec
dec
repz
loope
xchg
or
jecxz
push
dec
fdivl
xchg
sbb
scas
push
cmp
test
addr16
rcr
adc
dec
loopne
rcrl
sbb
push
and
dec
xor
out
iret
xchg
test
push
sahf
inc
sbb
fdivs
movsl
cmp
test
and
fcompl
lock
cmp
cmp
loope
rclb
inc
push
inc
dec
popa
in
sub
loope
mov
into
inc
and
cmpsl
cli
filds
jp
dec
cmpsl
in
push
je
xchg
cld
into
ds
cmc
xchg
lret
sub
cmpsb
adc
shll
mov
loopne
xchg
rclb
cmp
lret
js
mov
mov
mov
lcall
test
mov
sub
push
cmc
jle,pt
lcall
mov
lahf
fbld
jmp
cmp
cmp
xorb
xchg
push
cmpsl
das
xchg
clc
shlb
pop
push
fs
cmp
pushf
push
push
pop
shl
dec
in
ja
mov
sub
data16
mov
mov
mov
icebp
push
add
repnz
and
xchg
and
outsb
int3
mov
and
mov
int3
in
jp
outsl
vcvttss2si
pop
push
push
pop
adc
sub
push
ljmp
scas
push
adc
shlb
push
pop
xor
adc
xor
pop
push
mov
push
pop
cmovp
inc
dec
loop
scas
xor
inc
ficoms
std
pop
cld
adc
inc
xor
jbe
pop
inc
pop
and
xlat
mov
popa
dec
addr16
sub
pushf
mov
push
jle
leave
repz
je
stos
mov
stc
xadd
jb
adc
call
outsb
add
pop
in
mov
adc
xor
xlat
push
add
sbb
mov
push
sub
sbb
dec
push
push
stc
xchg
xchg
fimuls
dec
nop
dec
sub
and
lret
pop
outsb
ss
jp
pop
popf
adc
or
pop
ljmp
jle
ret
lret
roll
xchg
and
aad
fs
lods
push
mov
mov
inc
mov
cmp
cmp
aam
gs
pop
pop
ljmp
xor
mov
clc
loope
or
push
mov
popw
lcall
in
cwtl
loopne
aas
push
mov
dec
lods
ja
xor
subb
or
sti
in
fwait
cmp
mov
jge
push
push
pop
sub
idivl
mov
aas
pop
fistl
fisttpll
jbe
mov
dec
or
pop
in
js
adc
lds
lret
xchg
inc
pusha
sarb
pop
inc
cmp
movsb
ss
sbb
arpl
pop
insb
inc
nop
popa
stc
mov
mov
push
shll
mov
sub
lods
fcompl
sub
add
clc
xchg
xchg
push
dec
cmpsl
jmp
arpl
cli
sbb
mov
adcl
sti
sbb
cmp
xor
std
inc
dec
out
mov
pop
adc
and
outsl
jecxz
popf
shr
cmp
sbb
fwait
nop
mov
pop
sarl
mov
mov
pop
cs
imul
out
sub
inc
pop
adc
adc
data16
les
lahf
cmp
data16
dec
iret
daa
inc
mov
lret
xchg
sub
lea
cmpsl
hlt
add
pop
xchg
mov
inc
and
sbbl
add
addr16
test
jno
and
mov
repz
pop
adc
mov
scas
jae
dec
popa
stos
dec
jbe
jp
dec
xchg
inc
fidivrl
xor
mov
iret
adcb
into
jle
push
xchg
test
scas
mov
inc
shrl
dec
test
lcall
mov
daa
mov
mov
andb
outsl
out
sti
cmp
test
shrl
xor
loop
outsl
fcompl
jle
add
lock
push
mov
popa
mov
jno
inc
dec
push
aad
aad
dec
mov
aad
or
mov
xchg
stos
int
in
jl
mov
or
push
jne
fdivrs
lock
mov
flds
fldenv
xor
movsb
jp
pushf
mov
mov
jns
hlt
mov
das
inc
roll
sbb
xchg
cltd
mull
inc
subl
ds
add
addr16
jne
movsb
in
cmp
aas
addr16
idiv
lret
je
mov
cmp
insb
pop
lock
andb
into
xchg
shlb
test
imul
jmp
es
fcoml
add
je
clc
sub
jge
call
adc
inc
push
cli
jno
adc
lcall
clc
cmp
aas
sti
dec
popf
xchg
iret
sub
sets
jnp
dec
lds
push
sahf
and
aaa
xchg
jae
or
adcl
fidivrl
dec
jae
sbb
jb
xorb
call
adc
sub
mov
adc
add
test
les
lods
inc
push
fidivrs
sub
mov
sub
cmp
sub
or
inc
mov
dec
mov
rclb
pop
mov
mov
mov
lea
int3
popf
cmp
rorb
pop
pop
pop
cmp
mov
lods
leave
adc
or
loop
mov
lret
inc
mov
sbb
cli
dec
dec
sub
in
sbb
jo
lret
xor
outsb
xchg
lar
popf
inc
jl
outsb
aas
scas
out
insl
adc
push
ds
push
iret
pushf
push
rorb
inc
sbb
or
xor
mov
sub
inc
jge
push
push
flds
lds
pushf
lods
out
repnz
xchg
icebp
push
negb
jl
stos
or
inc
xchg
je
push
lea
pushf
xor
pop
sub
rcll
inc
std
int
and
cld
xchg
jbe
mov
cmpsb
pop
add
cmpsb
add
sub
fcomps
jecxz
lods
js
hlt
push
pop
into
dec
push
jno
jp
das
movsl
push
or
mov
js
push
xlat
mov
pop
ja
rcr
idivl
mov
cmpsl
jge
adc
xchg
sti
shlb
mov
stos
push
push
mov
cmp
cmp
adc
add
mov
in
pop
insl
dec
aaa
movsl
xchg
jl
mov
loope
repz
mov
push
mov
xchg
mov
adc
mov
sub
mov
cmp
jns
lahf
or
imul
and
adc
pop
in
pop
xchg
iret
adc
ss
dec
add
mov
repnz
mov
add
dec
vcmpss
mov
out
pop
orl
jl
insb
rol
jb
sub
test
mov
add
or
and
mov
dec
rcll
push
mov
or
shlb
mov
jnp
push
test
or
lea
mov
or
movsl
aam
jge
int3
fmul
xchg
push
push
sbb
out
dec
sub
xlat
lret
push
xchg
jecxz
int3
sahf
stc
push
loop
or
xchg
out
xor
and
out
mov
cmp
and
inc
rcll
rclb
loope
aam
push
sti
sarl
imulb
sbb
pop
cmp
aam
inc
xchg
add
sbb
xor
fwait
movsb
popa
fmuls
lods
mov
aaa
cmpb
xchg
ja
cmp
dec
cmc
and
subb
lcall
popf
jne
adc
test
cmpsl
daa
inc
subb
xor
call
xorl
out
adc
inc
ret
and
sbb
inc
and
test
cld
xor
fimuls
stos
cld
out
addr16
cmc
adc
mov
xchg
pop
fistl
mov
jns
and
rcll
cwtl
loope
mov
stos
andl
loopne
xor
sahf
add
xchg
push
adcb
fucomp
xor
push
movsl
and
sahf
arpl
and
mov
pop
xchg
and
rcrl
push
in
rorl
push
inc
xchg
or
inc
dec
mov
or
repnz
dec
out
pusha
in
dec
sarb
popf
gs
cld
mov
mov
mov
dec
test
cmp
sarl
push
aas
push
xchg
cltd
adc
jnp
out
cmp
loope
subb
add
jns
lahf
xchg
mov
mov
pop
pop
adc
cs
inc
mulb
xor
cmc
xor
or
xor
cli
adc
ja
arpl
aas
imul
mov
push
dec
stos
pop
arpl
jno
xor
lods
or
das
ret
jecxz
es
int
inc
ds
mov
mov
cmp
das
sub
in
mov
iret
rolb
int3
into
pop
pop
in
repz
inc
xor
xor
sbb
sub
ret
cmp
and
out
xchg
negb
inc
cmp
mov
shrb
add
sub
or
push
fidivl
xchg
inc
dec
rol
adcb
mov
push
enter
lds
xor
pop
cmp
cmp
cmp
pop
mov
add
rcll
push
das
sub
push
out
dec
pushf
xchg
pop
in
or
jne
sbb
add
dec
sub
xchg
add
push
xchg
push
sbb
mov
out
push
shl
or
xorl
inc
dec
fs
adc
mov
jg
stc
adc
notl
insb
adc
add
loop
repz
push
bound
sub
jl
aad
popf
shrb
mov
or
leave
cmp
pop
dec
pop
add
xchg
inc
jecxz
mov
xchg
pop
inc
sbb
scas
pop
sbb
and
test
sbb
mov
cli
inc
pop
mov
and
xor
out
mov
mov
lea
pop
fldcw
mov
xchg
imul
xchg
sti
stos
push
test
add
pop
lret
sub
out
sar
sub
wrmsr
fists
nop
mov
jo
push
stos
shlb
mov
sbb
push
xchg
xor
sti
loop
pop
rcrl
xchg
xchg
push
ljmp
xor
insb
sahf
fneni(8087
dec
add
lcall
mov
aaa
xchg
test
test
push
jae
push
jmp
sub
lahf
test
aad
imul
pop
xchg
scas
in
les
sbb
insl
adc
xor
scas
mov
pop
cmpsl
fistps
enter
cli
sarb
fisubs
insb
jge
sub
dec
sbb
sti
pop
pop
rcrb
pop
push
lahf
icebp
fistl
lds
mov
inc
subl
xchg
lods
sbb
jnp
in
cmp
mov
mov
je,pn
in
adc
out
adc
out
cld
lea
mov
or
push
cmc
cmp
out
jb
inc
sub
xor
inc
pop
jg
mov
mov
or
xchg
cld
stos
sbb
xchg
jne
arpl
loope
pop
addl
test
and
jle
andb
out
bound
push
test
mov
adc
lret
mov
pop
or
xchg
push
pop
data16
xchg
cltd
or
sub
xchg
incl
cmp
mov
aaa
lret
jb
adc
hlt
jae
push
mov
mov
pop
inc
adc
int
inc
pop
adc
jmp
int3
add
jns
es
fs
div
test
ret
xor
pop
aam
dec
jno
and
mov
sti
sub
sub
mov
dec
add
and
cltd
sbbb
sub
mov
add
xchg
jmp
add
hlt
cld
sub
test
fnstsw
lahf
fisttpl
push
rcrl
push
mov
loope
dec
cli
mov
xchg
bound
in
jne
mov
mov
sbb
jmp
stos
mov
aad
in
repz
fistpl
cs
pop
mov
cs
ljmp
or
sub
ret
popf
arpl
add
jae
and
or
mov
ljmp
nop
aad
adc
xchg
fnstsw
jmp
sti
sbb
mov
xor
xchg
lret
inc
push
mov
push
add
sbb
jae
adc
rolb
das
das
xchg
roll
out
scas
dec
rcl
push
imul
xor
sbb
mov
push
jmp
hlt
jle
pop
ret
xchg
mov
pop
mov
test
sub
stos
out
std
jbe
cwtl
mov
and
inc
adc
out
push
pop
jno
jae
cmp
gs
xchg
pop
jge
inc
xchg
xchg
adc
ds
jbe,pn
pop
jb
in
push
dec
push
push
test
int3
cmp
rcr
sbb
or
fsubrl
fildll
add
in
push
insb
aam
jne
cs
xlat
lods
pushf
sub
push
add
repnz
inc
cmp
shld
adc
jge
cwtl
sti
les
jnp
inc
push
cmp
fsubrs
xor
add
add
sbb
or
or
fnsave
mov
jns
xchg
stos
adc
xchg
nop
stos
sbb
cmpl
mov
sub
mov
lock
in
mov
and
add
es
test
jno
xchg
aam
mov
inc
ss
dec
fidivrl
das
test
idivl
push
fsubr
lahf
fcmove
cmc
sbb
test
sub
popf
add
sarb
hlt
mov
jg
mov
mov
jo
jnp
clc
fidivrs
and
insl
sub
or
pop
test
jp
aaa
int3
ja
mov
inc
out
add
bsr
xor
les
scas
pop
into
movsl
in
nop
cli
or
xchg
rcl
loopne
fstl
outsl
jp
imul
sub
rorb
add
data16
mov
iret
mov
push
pop
test
arpl
add
out
inc
adc
push
xor
mov
cs
pop
scas
push
call
push
std
sub
fldt
xchg
je
ss
ds
dec
add
sub
call
jno
add
in
xchg
jbe
adcb
roll
sbb
add
jne
jp
xlat
jmp
in
pusha
mov
sahf
inc
scas
xor
les
out
pop
sbb
aas
aaa
mov
push
movsb
and
fmull
addl
push
mov
jbe
lods
and
pop
pop
outsb
xor
add
push
fwait
xchg
pop
add
xchg
mov
sub
mov
mov
orl
std
cmp
pop
cld
cltd
sbb
and
mov
shlb
fwait
cwtl
cmp
sbb
jo
cmpsb
in
inc
mov
push
cltd
push
lcall
xchg
push
pop
jno
clc
xchg
and
in
jp
movsb
sbbl
dec
fisttps
sbb
jo
mov
movsl
shr
dec
ss
mov
mov
shrl
cs
fwait
lods
fdivrs
orl
mov
andb
not
and
enter
dec
adc
fisttpl
xor
mov
aas
les
sbb
push
test
mov
cmp
mov
aaa
sbb
xor
mov
xchg
cmp
add
jge
shlb
punpckldq
mov
xor
jnp
outsl
mov
repnz
push
mov
sbb
popa
int3
dec
popf
dec
repz
ficompl
add
mov
imul
inc
andl
pop
adc
lea
push
mov
repnz
cmp
test
mov
fcompl
jbe
cmpsl
xchg
popf
ja
clc
jbe
push
popl
cltd
loopne
mov
mov
jp
int3
pop
pop
fst
mov
pop
push
fnstsw
adc
call
push
sarb
repz
mov
arpl
sbb
sub
jb
xor
in
test
pushf
pop
pop
pop
push
mov
repnz
imul
inc
xor
adc
inc
sub
xchg
aam
stc
aad
jp
mov
dec
mov
les
xchg
lret
ss
mov
cltd
es
push
rcr
rorl
sbb
push
jmp
cmpsl
xchg
push
add
fwait
movsl
test
mov
inc
rcll
les
jl
pop
jl
sbb
hlt
add
push
lahf
xchg
push
das
ja
popa
cmp
scas
test
xchg
xlat
std
dec
pop
shl
outsb
and
jne
leave
aam
sbb
jns
push
cmp
lahf
inc
sbbb
adc
icebp
or
push
dec
sbb
push
lcall
mov
or
jmp
xchg
pop
sub
scas
fwait
and
add
xor
or
leave
int
icebp
xor
mov
fisubrs
movsb
test
xchg
mov
push
jmp
insb
push
sub
push
xchg
daa
push
lock
jae
cmp
dec
dec
jl
scas
enter
fdiv
add
mov
cmp
mov
inc
sub
or
rolb
les
pop
cli
pop
xchg
jb
lcall
pushf
pushl
push
or
add
jmp
lret
pop
fmull
lock
jb
sti
enter
fdivs
cwtl
leave
cmpb
push
lds
out
ret
or
jne
xchg
popf
push
push
add
xchg
ret
pushf
mov
xchg
jg
jnp
mov
push
outsb
xor
mov
movsb
inc
pushf
pop
mov
repz
jmp
lret
xor
imul
xor
jae
test
sti
adc
jns
int
adc
xor
loope
sahf
hlt
jne
xor
add
mov
or
add
jg
sub
dec
and
mov
das
dec
push
dec
mov
and
gs
sbb
ljmp
sar
xchg
fstp
jge
rol
add
push
jnp
sbb
mov
inc
fwait
add
mov
imul
adc
test
inc
test
aas
xchg
add
fimull
test
pusha
mov
aam
xorb
sub
lahf
fadd
inc
jle
sarl
fidivrs
lea
insb
movsl
shlb
fildll
fbld
inc
dec
out
cmp
je
cli
mov
cmp
dec
stos
mov
cmc
mov
mov
inc
xor
repz
add
fbld
xchg
call
outsb
adc
push
sahf
rcr
push
lahf
mov
lret
jno
mov
aad
xchg
fmull
mov
popa
lcall
aad
jbe
ficompl
clc
pop
loope
mov
arpl
in
cmpsl
aam
mov
cmpsl
leave
data16
jnp
jecxz
subb
ds
push
mov
push
sar
sbb
adc
lea
add
adc
mov
mov
fs
mov
xchg
dec
out
and
mov
jecxz
shll
ja
cmp
mov
ja
dec
out
arpl
mov
and
nop
or
jo
push
jno
xlat
icebp
fiaddl
hlt
subb
cmp
popf
sub
add
in
in
shlb
cmpsl
jg
mov
out
in
ds
dec
xchg
push
add
ficompl
cs
sub
in
dec
inc
popf
cld
faddl
jecxz
pushf
xchg
clc
ret
ss
pop
pop
insb
fimuls
inc
jne
pop
jne
push
inc
xchg
and
xlat
xor
popa
movsb
lods
lods
and
add
lea
lock
imul
mov
stos
push
pop
fs
cmp
pop
xor
or
mov
jnp
xchg
and
jno
adc
mov
roll
mov
cmpsb
subl
pop
jo
std
andl
cmpl
lock
stos
dec
popa
inc
arpl
imull
add
and
pop
int
jo
test
out
lea
push
outsb
addr16
ljmp
add
sbb
call
fs
jp
fsts
int3
lahf
iret
inc
xor
pusha
icebp
and
cmpsl
jmp
mov
or
jge
adc
mov
and
in
inc
mov
push
xchg
movsb
bound
push
pop
push
push
push
cli
jmp
push
xchg
and
loop
call
adc
mov
cmp
add
xchg
sub
pop
fdivs
sarb
adc
xchg
cmpl
jle
cmp
jae
je,pn
jne
jl
dec
mov
lret
fisubrl
dec
les
imul
mov
sub
xlat
subl
xchg
or
xor
sub
in
sahf
add
popa
push
and
and
xor
movsb
sti
dec
or
pop
sub
rcr
and
adc
aam
in
fiadds
or
mov
jnp
or
into
jl
xlat
mov
clc
mov
arpl
stc
std
ss
push
bound
inc
movsl
movsb
sbb
adc
pusha
jp
and
push
cmp
push
stc
push
xchg
jns
and
cwtl
jp
das
rol
out
stc
dec
cmp
mov
in
sub
add
push
add
fisttps
push
adc
mov
mov
push
lock
in
xor
or
mov
outsl
imul
gs
dec
jmp
mov
out
jge
dec
push
mov
mull
sbbb
fisttps
mov
mov
setb
xchg
test
push
cmp
inc
inc
scas
out
pushf
push
popf
mov
and
adc
cltd
ds
daa
xchg
aad
add
mov
adc
frstor
push
jle
out
mov
inc
lock
mov
sub
fistl
lahf
jmp
xchg
mov
in
cmc
inc
nop
bound
outsl
push
jnp
sub
into
cld
mov
ja
or
mul
jp
xchg
sahf
mov
pop
fnsave
out
dec
push
scas
int3
mov
stos
push
jle
pop
xchg
leave
lahf
push
test
repnz
mov
iret
mov
push
jns
dec
cmp
out
nop
sbb
inc
xor
pop
jb
leave
and
js
dec
lods
push
arpl
push
movl
sbb
push
lss
xchg
scas
outsl
fsts
test
test
shlb
sub
lock
mov
sbb
sti
jo
mov
mov
lcall
jecxz
inc
pop
lret
mov
inc
cs
fwait
test
push
xchg
popa
and
push
cs
pop
push
push
aaa
sbb
test
fcmovnbe
mov
pop
sbb
inc
fldl
je
push
xchg
lret
mov
iret
int3
sbbl
fistpll
fildl
xor
test
sbb
inc
ljmp
mov
add
rorb
push
add
dec
push
dec
mov
mov
dec
mov
nop
je
mov
ret
hlt
xchg
and
stc
imul
sub
shrl
jae
adc
andl
gs
add
inc
dec
push
movsb
xor
fwait
movsl
push
arpl
imul
shr
lods
mov
ss
cmpsb
mov
and
or
xchg
sti
jbe
test
jo
push
adc
in
mov
mov
rol
fisttps
adc
dec
ljmp
jae
cli
mov
lods
lea
or
cltd
cmove
mov
hlt
adc
jmp
repz
jno
fimull
data16
adc
cmpb
pop
adc
cmp
jmp
testl
fisttpl
out
pop
rolb
mov
into
mov
push
cmp
cmp
xor
inc
in
fistps
jge
int
cld
push
aaa
push
sub
add
jmp
adc
cwtl
pop
je
fwait
cmpsl
testl
mov
xor
rcrb
and
ret
in
stos
lret
test
mov
cmp
cli
cli
ret
pop
pop
or
or
lods
mov
dec
into
orl
icebp
push
and
xchg
loopne
mov
adc
fstl
xor
andl
cmpsb
cmc
mov
jb
xor
movsb
imul
dec
ljmp
mov
cmp
cs
jnp
popa
sbb
cmpsl
leave
inc
stos
stos
andl
pop
pop
in
mov
testl
imul
movsb
add
rorl
scas
popa
mov
jp
ja
mov
mov
mov
jbe
push
or
push
mov
leave
xchg
aaa
dec
mov
icebp
lds
mov
cli
scas
sub
out
fbstp
cmpsb
rorb
sbb
cltd
mov
jmp
loop
xor
sub
pop
fcompl
and
repnz
aam
inc
cltd
cmp
push
cmp
mov
mov
cld
jmp
jnp
insl
sbb
outsl
out
shlb
xchg
inc
sarb
lahf
jp
or
push
hlt
and
dec
mov
xchg
dec
out
aas
mov
jbe
inc
inc
inc
inc
pop
sarl
popf
js
gs
sbb
enter
cmpsb
cltd
mov
sub
pop
hlt
in
in
push
adc
out
inc
cli
inc
add
xor
mov
cmpl
mov
mov
mov
out
js
mov
mov
dec
je
jne
mov
jns
cld
jne
hlt
push
xchg
lods
cmp
es
pusha
in
cmp
xor
rcll
xchg
add
add
add
mov
push
gs
adc
out
jb
jno
jl
cmp
inc
push
jg
xchg
cs
push
xlat
out
loope
cmp
mov
out
pop
cmpsl
cs
lea
or
popa
pop
push
aad
mov
sbb
cmpl
mov
mov
xchg
pusha
and
jmp
dec
add
jbe
mov
js
lock
or
icebp
mov
push
mov
shll
push
pop
pusha
int3
fmull
sbb
lcall
sti
xchg
mov
int
xchg
cltd
xchg
hlt
gs
ljmp
inc
out
loope
or
inc
add
inc
or
leave
repz
jmp
sbb
repz
pop
fwait
mov
adc
das
mov
stos
movhps
imul
orl
mov
js
pushf
pop
cmp
shlb
insb
lcall
fcompl
test
js
pop
pop
notl
and
popl
pop
adc
lock
movsl
rcll
fwait
push
inc
sahf
sub
cmp
das
pop
stc
fidivl
out
push
xor
xchg
enter
cld
dec
fs
add
jl
mov
fucomip
mov
jnp
xchg
xor
mull
popa
popf
adc
xchg
repz
xchg
dec
add
mov
xchg
mov
and
mov
xchg
mov
lds
jbe
sbb
pop
push
dec
jno
gs
dec
mov
out
stos
shlb
outsb
aam
pop
cmp
push
jnp
push
cmc
stos
push
mov
xchg
push
mov
or
das
pop
dec
xchg
mov
push
jecxz
pop
sbb
dec
lock
push
sbb
shll
clc
insl
sub
inc
test
add
stos
cmc
push
dec
aad
fisttps
fistpll
pop
mov
mov
jnp
xor
cmpsl
call
gs
adc
jecxz
fisubrs
jmp
cmp
repz
je
xor
js
sbb
mov
dec
jno
add
push
jmp
adc
jnp
mov
push
xchg
lea
push
ss
fnsave
sub
adc
dec
mov
call
popf
push
decb
adc
pop
mov
xor
inc
mov
cltd
call
sub
dec
jb
pop
pop
lods
dec
aad
and
xchg
xchg
and
push
aam
xor
jle
fld1
push
testb
scas
es
xor
rorb
imul
std
int3
lcall
clc
push
fwait
push
imul
jbe
inc
cmp
test
xchg
aam
xchg
dec
or
cmp
adc
xchg
inc
stc
bound
push
and
seta
and
push
arpl
aas
cmpsb
push
aaa
ss
mov
mov
dec
insb
in
and
jecxz
sub
or
xchg
lcall
je
mov
out
push
push
scas
jg
mov
mov
mov
xchg
inc
nop
arpl
out
adcl
test
imul
clc
lret
pop
pop
push
sub
notl
mov
mov
dec
sti
mov
enter
inc
test
stos
inc
les
pop
in
outsl
xor
mov
pop
jmp
iret
mov
adc
xor
or
mov
push
ja
push
loopne
push
cmp
sbb
movsl
jno
mov
test
push
lret
scas
enter
popa
cmpsb
pop
rorb
push
pop
mov
dec
mov
rorb
hlt
or
jecxz
sbb
imul
inc
or
cmp
mov
push
bound
jmp
sbbl
sub
add
je
lahf
pop
stc
fadds
loopne
adc
sbb
lret
fld
paddsw
adc
lahf
jne
out
mov
xchg
outsb
inc
xchg
das
xchg
add
ficomps
inc
pop
dec
test
fsubp
xchg
lea
xchg
repz
sahf
fisubs
rol
cld
nop
push
les
sub
shrl
daa
cld
into
push
push
sub
into
outsl
sbb
psubusw
and
mov
out
test
leave
js
lds
xchg
mov
stos
mov
addr16
jg
jae
push
mov
cmpsl
mov
movaps
hlt
mov
push
cmp
mov
pushf
clc
add
shll
lds
xchg
insb
pop
mov
cmpsb
nop
insl
test
inc
mov
stos
push
movb
icebp
mov
stc
cmc
adc
imul
js
jbe
mov
int
push
dec
cmpsb
push
imul
ficompl
push
in
push
adc
in
push
sbb
jmp
imul
shl
push
movsl
pushl
jl
call
jle
dec
or
xchg
pusha
cs
daa
push
nop
je
popa
pop
mov
lret
popa
dec
stos
push
in
mov
stos
inc
mov
and
shlb
mov
inc
repnz
fs
pop
sbbb
mov
gs
pop
cs
and
stos
cmp
push
iret
mov
fsubrs
stos
push
icebp
js
ja
dec
leave
test
dec
mov
sbb
dec
std
sarl
ljmp
dec
roll
pop
int3
cmp
sbb
sub
push
loope
iret
ja
pop
fld
xchg
out
inc
addr16
imul
inc
fistps
push
sbb
or
clc
jg
ja
loop
popa
sbb
inc
mov
pop
push
pop
cld
stos
mov
arpl
cld
into
sbb
pop
daa
fcoms
cli
pop
dec
arpl
decb
scas
adc
jb
lret
push
push
test
fwait
bound
adc
clc
sbb
add
jmp
jge
jnp
sub
lea
lods
mov
mov
aaa
mov
test
sbb
dec
ljmp
int3
pop
fstl
fsubl
sbbl
xor
xchg
or
sbb
jns
rcll
adc
mov
jle
aaa
mov
out
push
push
inc
adc
xor
insl
cmc
mov
fs
insb
sbb
test
fistps
inc
roll
add
cmpsb
iret
sub
repnz
inc
stos
and
shll
lcall
jbe
cmp
cli
inc
js
pop
clc
mov
outsl
jne
and
xchg
xchg
lods
jnp,pn
dec
inc
in
or
jle
insl
mov
out
jne
insb
in
pop
adc
cmp
enter
dec
mov
xchg
push
mov
jecxz
sub
pop
push
mov
cwtl
push
je
xchg
test
inc
cmpsb
imul
adcl
ret
pop
daa
sbb
fs
and
mov
or
insb
and
lock
popa
outsl
jns
or
cmp
outsb
sbb
xchg
pop
xor
adc
lea
cli
dec
fxch
in
xor
xchg
adc
pop
loope
push
sbb
orb
stos
or
xchg
in
mov
xchg
jle
pop
pop
mov
pop
dec
cmpsb
aas
jecxz
cmpb
mul
fldenv
test
mov
outsb
push
leave
push
sbb
adc
and
push
add
je
add
jle
or
gs
xchg
or
sbb
jp
cmp
sub
pusha
push
fs
mov
sbb
and
mov
fwait
in
dec
jbe
inc
pop
lret
lcall
and
aad
mov
xor
mov
mov
and
dec
xor
cmpsl
setae
addr16
push
mov
ja
fnstenv
icebp
clc
xor
add
push
shl
daa
daa
nop
xchg
gs
xor
repnz
add
leave
mov
into
adcb
fimull
mov
adc
sbb
push
lods
push
movsl
jg
mov
test
dec
jae
addr16
xchg
add
mov
inc
scas
xchg
pusha
ret
xchg
pop
es
loope
pop
cmp
cmpsw
push
xor
mov
inc
xchg
cmp
xchg
sti
leave
daa
xabort
stc
jno
adc
push
loope
inc
bound
sbb
add
add
mov
js
cs
insb
jno
jecxz
call
inc
adc
xor
mov
inc
sarl
imul
mov
cld
aam
ja
push
mov
xchg
ds
mov
push
push
adc
aad
mov
mov
sarl
cmp
outsb
lods
push
pusha
add
push
fistl
sub
dec
sub
lret
lods
inc
adc
arpl
out
aas
into
sub
out
xchg
es
and
pop
cmpsb
mov
jnp
mov
inc
pop
xor
sbb
mov
dec
dec
shrb
pop
dec
inc
cld
sub
enter
call
cli
icebp
stos
xchg
adc
decb
mov
or
cmp
inc
mov
cmp
xchg
sub
xchg
dec
test
popf
mov
fcmove
rcl
cwtl
shld
mov
rorl
insb
xchg
dec
add
mov
jge
adc
xchg
and
imul
pop
call
negl
repz
sbb
shll
out
ret
jg
cmp
or
adc
or
push
scas
loop
or
cmpsl
jp
push
jecxz
and
and
outsb
mov
jae
push
push
push
or
test
mov
pop
dec
daa
jl
enter
mov
movsb
pop
fsubp
sti
lret
loop
xchg
or
and
lcall
movsl
cwtl
cwtl
push
stc
das
and
mov
cld
and
inc
jno
inc
ss
pop
into
test
ret
daa
clc
aas
jp
inc
aaa
sahf
push
sbb
imul
pop
push
rolb
add
movsb
fbstp
xlat
fwait
pop
jl
aam
je
inc
add
loopne
rcrb
stos
dec
and
aas
add
scas
adc
notb
jg
fwait
sub
push
cltd
dec
add
mov
movsl
movsb
jno
cmp
jnp
push
bound
xchg
sub
mov
xchg
xchg
aas
pop
rclb
shlb
call
sub
sti
xchg
or
mov
push
shl
fs
dec
cmp
gs
int
test
pop
sarb
sub
pop
and
jge
xor
loopne
aaa
cmp
mov
mov
pop
mov
xor
movsb
sub
std
cltd
enter
pop
clc
mov
neg
lcall
sbb
call
lock
hlt
push
fsubl
shll
mov
pop
ret
adc
jne
cmp
xor
loop
lds
xchg
flds
pushf
cmpl
sbb
mov
mov
jb
in
push
jle
ss
mov
scas
mov
loope
mov
inc
fisttpll
mov
or
mov
mov
adc
js
rorl
and
scas
mov
push
dec
and
jae
inc
rcrl
ret
movsl
sti
fiaddl
mov
mov
rorl
fs
mov
test
pop
mov
adc
pop
je
and
sub
xchg
outsl
enter
outsl
lods
mov
test
jmp
les
xchg
rcrl
clc
add
dec
in
repnz
in
lret
mov
and
stc
lret
in
cltd
and
add
sarb
pop
or
add
jg
jae
inc
pop
popa
sbb
movsl
jl
xor
leave
or
inc
shrb
mov
test
pop
mov
addr16
lahf
test
and
push
cmp
cmc
js
jge
sub
aaa
push
mov
jp
ja
outsb
jmp
out
xchg
data16
shll
sbb
sbb
aad
int3
add
or
mov
es
cmc
pop
dec
adc
pop
js
mov
scas
repnz
int
push
push
cmpsb
inc
or
inc
into
inc
leave
jns
lods
leave
add
xchg
popa
push
enter
sbb
jbe
daa
mov
lahf
and
js
arpl
add
test
mov
sti
push
ds
or
adc
out
bound
mov
xor
in
js
shlb
mov
int3
insl
mov
test
mov
adc
loope
mov
mov
cltd
jle
xor
je
sub
cmpsw
fdiv
and
xor
dec
lret
cmpsl
xchg
push
and
adc
movsl
outsl
mov
std
call
cltd
xchg
test
cmp
lret
mov
and
jp
xchg
lods
into
addl
sbb
inc
out
ljmp
push
cs
mov
sub
daa
mov
jno
xchg
shlb
mov
lods
gs
dec
ljmp
jle
frstor
scas
mov
and
jmp
jg
pushf
das
bound
mov
mov
cmp
insl
repz
xchg
sub
imul
adc
mov
subl
rolb
iret
sub
inc
gs
xchg
mov
sub
lods
dec
fidivrs
pushf
lods
adc
and
sbb
mov
je
lahf
mov
or
cmp
lds
nop
push
fs
stos
je
add
out
xchg
jne
dec
jmp
mov
insb
xchg
pop
inc
pop
jl
mov
call
dec
xchg
push
sbb
repnz
jb
add
push
pop
fadds
cmpsb
xor
stos
inc
orl
sub
adcb
inc
xchg
hlt
xchg
jns
inc
imul
sbb
mov
daa
adc
gs
pop
orb
or
dec
lahf
or
and
jle
enter
sub
push
test
jb
xor
lock
dec
jnp
or
loope
out
out
lahf
lock
and
cli
inc
mov
mov
loop
or
jg
dec
fldcw
push
jo
aad
cmp
outsl
xchg
mov
adc
sbb
mull
xchg
or
mov
movsb
sub
xchg
cmp
out
cmp
push
xor
jle
xor
movsl
jmp
cltd
les
aad
xor
inc
aas
pusha
jmp
fs
sub
data16
cmp
std
cmp
push
jo
imul
addr16
test
jo
rcrb
outsb
pop
and
aas
incl
dec
gs
sbb
lods
icebp
mov
ljmp
decl
out
adc
inc
push
dec
lahf
mov
icebp
cs
pop
scas
aas
in
aas
xlat
imul
outsb
test
jae
fildll
pop
ljmp
jmp
fistps
aad
sub
out
pop
pushf
mov
fimuls
push
jp
jbe
inc
cld
cmp
jl
dec
arpl
push
xchg
sub
mov
movsb
pop
push
sbb
push
dec
push
push
ret
mov
jecxz
scas
sti
pop
ret
jbe
ja
and
mov
push
pop
cmp
jnp
pop
cmp
repz
pop
mov
and
popf
pop
push
pushf
out
clc
test
orb
pop
sbb
into
or
aaa
ss
dec
ret
jbe
or
dec
je
jnp
xor
jae
adc
adc
mov
insb
mov
push
xchg
ja
out
cmp
ljmp
insl
mov
adc
andl
ror
cwtl
daa
fists
or
jbe
xchg
or
ret
fidivl
cmp
pop
aaa
loop
iret
jge
xor
mov
pusha
insl
inc
fcoml
mov
in
dec
cmpl
ljmp
xchg
lea
mov
scas
jns
shll
out
jmp
sbb
fnstcw
imul
dec
mov
dec
jbe
mov
mov
mov
add
inc
loop
push
push
xor
lcall
les
fdivs
push
fnstenv
shlb
xchg
lods
fiadds
out
in
outsb
add
add
xchg
xchg
mov
mov
sub
add
xor
in
int3
push
sub
das
cli
into
sbb
lret
jne
mov
insb
inc
dec
inc
ret
ficoml
dec
mov
or
mov
mov
xchg
mov
cltd
push
jnp
fwait
push
addr16
es
pop
xchg
aam
add
lcall
into
cwtl
sbb
outsb
mov
rcpps
xlat
dec
sbb
outsl
gs
es
pop
notl
jmp
mov
popf
inc
sbb
sub
mov
mov
xor
xchg
out
fidivrl
test
lahf
sub
sbb
scas
cmp
sbb
shrb
jne
js
adc
cmp
push
jle
pop
jge
inc
adc
adc
outsb
shll
cmc
dec
inc
loopne
cmpsl
mov
mov
movsl
inc
shlb
inc
stc
adcl
add
pop
mov
lea
stos
sbb
imul
adc
and
mov
mov
jle
ja
les
cmp
or
ret
xlat
jb
push
sbb
frstor
sahf
and
fdiv
inc
insb
test
mov
loopne
adc
jp
stos
sbb
in
and
shlb
mov
mov
call
hlt
outsl
xchg
testb
notb
pop
xchg
lock
mov
jnp
stos
add
pop
lds
fnstenv
mov
test
hlt
in
out
test
mov
mov
xchg
icebp
cmp
out
out
idivl
mov
sbb
pop
dec
fsubl
loopne
push
inc
jns
push
or
dec
icebp
push
push
pop
mov
imul
xchg
ror
arpl
stc
orb
imul
xor
xchg
lods
cmp
das
dec
ljmp
push
adc
adc
mov
stos
sbb
xor
pop
sub
xor
jnp
gs
xchg
add
cmp
js
pop
jmp
lcall
arpl
lea
test
je
gs
sbb
inc
add
push
popf
inc
lret
cmpl
nop
test
jp
mov
cld
sbb
mov
and
xchg
in
pusha
jg
pop
mov
and
push
push
rcll
or
int3
std
xchg
cmc
or
adc
rorb
pop
js
sahf
push
jp
mov
movsb
fsub
jge
push
fwait
lahf
inc
ror
nop
dec
outsl
push
mov
dec
aad
xor
mov
popl
cltd
add
sub
imul
lea
test
insb
jge
xchg
call
push
arpl
aas
iret
scas
sbb
inc
push
jae
fwait
xlat
mov
dec
xor
push
jae
scas
clc
xor
jmp
mov
adc
sbb
push
adc
cmc
imul
jecxz
pop
es
aaa
cmpb
mov
mov
xor
call
aas
inc
std
pop
neg
in
inc
mov
shll
lods
test
pcmpeqb
mov
add
jmp
out
push
inc
jp
mov
aas
and
inc
leave
inc
pop
dec
pop
jge
mov
fimull
or
imul
mov
in
push
mov
jne
inc
push
mov
aaa
dec
sbb
or
xorl
stc
dec
aam
iret
mov
dec
jmp
test
in
stos
lods
andb
lret
mov
sbb
mov
scas
adc
sub
add
mov
gs
adc
xor
fwait
pop
nop
adc
xchg
negl
stos
loop
bnd
jno
cwtl
mov
jnp
leave
cmpl
fdivl
shrl
add
adc
sub
add
pop
outsb
fcmove
mov
shlb
sub
or
pushf
sti
fbstp
lods
sbb
popa
iret
test
mov
inc
jo
and
je
imul
inc
test
dec
dec
push
ds
loop
pop
mov
sub
sbb
roll
shrb
ss
fdivr
cld
pop
out
aaa
stos
das
das
xchg
je
sbb
jg
dec
pushl
adc
push
iret
jnp
dec
imul
ds
in
jae
std
mov
sbb
lahf
jne
jo
mov
test
fwait
stos
mov
scas
xlat
lock
in
push
dec
call
mov
adc
xchg
into
xlat
xchg
jl
dec
leave
push
scas
das
inc
cmp
iret
xor
js
xchg
roll
rcrl
insb
dec
inc
lea
pushf
lods
mov
out
addl
fldl
stc
into
push
and
xchg
lcall
cmp
movsl
ret
mov
add
loopne
addr16
test
aas
or
test
loop
clc
dec
js
fs
das
jmp
mov
jmp
lret
gs
dec
jp
xchg
inc
rol
push
loopne
lds
clc
cwtl
mov
je
pop
test
mov
cld
aam
adc
push
xor
fidivs
ljmp
jmp
loopne
nop
popf
cld
aam
and
mov
adc
test
aas
xchg
int3
lcall
fyl2xp1
and
fucomip
mov
lahf
sub
pop
enter
cmpsl
mov
outsb
cmp
add
hlt
pop
and
out
push
movb
pop
fnstcw
mov
xchg
arpl
inc
fwait
jnp
clc
mov
mov
fidivs
in
and
movsb
sub
mov
dec
add
out
sub
inc
out
fildll
mov
scas
adc
repnz
xlat
insb
jmp
mov
nop
xchg
dec
pop
mulb
dec
push
test
inc
lea
sbb
pop
xor
sbb
push
lret
stc
ret
xchg
or
push
mov
fisubrl
lock
mov
fsubrs
fstps
fcmovnu
pop
insl
es
push
or
pop
and
sub
ret
int
ret
data16
divb
outsl
push
jns
in
cwtl
add
daa
enter
adcl
sbbb
test
in
jle
lahf
int3
push
xchg
cmp
aaa
dec
mov
push
rsm
in
xchg
and
insl
adc
mov
mov
or
enter
push
adcb
sti
jae
loope
jae
std
mov
cltd
jne
idivb
inc
lea
inc
pop
ljmp
cmp
mov
iret
pop
add
pop
xchg
scas
push
je
push
push
pop
bound
sbb
mov
mov
cltd
inc
stos
push
pushl
and
dec
in
lock
in
cmc
cli
into
pop
jmp
xor
add
call
cmc
pop
and
icebp
add
xor
push
jmp
or
das
xor
dec
adcl
das
jno
push
les
dec
hlt
loopne
pusha
mov
pop
aaa
arpl
jmp
push
adc
je
rcrl
dec
shrl
mov
push
sub
mov
push
movsb
xor
movsl
imul
imul
sub
sub
xchg
push
lret
insl
cmp
call
movsl
cld
cmp
movsl
or
fsubrl
loope
xlat
shrb
jbe
out
incl
jmp
dec
lods
inc
push
push
mov
adc
icebp
stos
sub
stos
fs
xchg
popf
in
loop
or
cmp
dec
incl
sub
test
fsubrs
jg
icebp
mov
xor
push
fdivp
pop
arpl
or
leave
out
xchg
nop
fs
addr16
xor
dec
cmp
das
enter
ret
or
dec
incl
mov
test
out
mov
and
scas
mov
mov
add
dec
push
imul
sbb
pop
dec
or
add
cmpsb
push
mov
test
lahf
mov
dec
test
sub
cmp
mov
movsl
ja
mov
xchg
mov
add
inc
cmp
ljmp
movsb
adc
xchg
pop
cwtl
or
pushf
cmpl
jne
sub
xor
jnp
inc
test
ficomps
shr
pop
enter
fisubs
pop
in
lock
mov
inc
mov
mov
adc
sbbl
xchg
pop
jbe
cli
xor
pop
icebp
repnz
sbb
daa
arpl
cmp
sub
cmpsb
xor
mov
xor
iret
enter
cwtl
dec
adc
jb
mov
and
sub
aam
sbbl
sub
push
lret
sub
movsb
cli
in
mov
cmp
xchg
add
inc
bound
stc
aam
andl
inc
test
je
aas
test
cmp
sbb
xchg
fwait
pop
test
push
sahf
js
jecxz
jg
ret
test
imul
neg
push
jb
cwtl
adc
xchg
mov
out
insl
sub
mov
add
xor
les
jmp
mov
insl
cli
insl
jecxz
dec
xchg
sarl
fwait
dec
sbb
mov
push
mov
dec
into
and
in
adc
sbb
and
push
dec
cmp
xlat
xor
clc
lcall
shr
nop
pushw
popf
cmp
ds
lret
jge
xor
mov
add
cmp
add
push
mov
movsl
mov
jne
cmp
xor
call
xchg
fldenv
dec
sub
or
test
push
lea
push
stos
dec
les
pop
out
inc
xor
and
outsl
adc
pushf
sbb
and
and
sbb
or
rcrb
xchg
inc
mov
sub
or
push
and
lahf
cmp
push
mov
sti
addr16
mov
addr16
add
lahf
push
flds
int3
or
or
fimuls
scas
xor
and
mov
sbbb
mov
cmp
xchg
jmp
jge
add
or
jnp
xchg
mov
xchg
test
lods
ds
xchg
push
inc
jl
push
out
sub
std
addr16
iret
lds
mov
pop
aas
test
mov
sbb
repnz
es
ss
fisttpll
dec
sar
and
and
in
push
das
sub
das
xchg
mov
add
popf
test
ds
xchg
push
dec
enter
in
loope
leave
mov
ret
imul
pop
loopne
cmp
mov
xchg
mov
cmp
adc
imul
ficoml
jecxz
mov
fadd
sbb
mov
add
jl
and
add
pop
insb
and
or
lcall
jle
add
dec
pusha
xchg
add
test
dec
ror
repnz
or
pop
divb
lods
lds
mov
ljmp
nop
sbb
and
pop
sub
jp
testl
pop
and
xchg
dec
mov
jb
adc
data16
sub
pop
dec
adc
mov
push
xchg
imul
hlt
inc
std
add
test
cmpsl
sbb
dec
sub
fstps
adc
mov
dec
fstl
add
mov
pop
push
jge
add
ficompl
mov
outsb
mov
pusha
jne
sub
xchg
mov
loope
stc
lods
adc
jp
push
xchg
cs
and
push
insb
pop
xchg
cmp
and
fstpl
dec
mov
roll
es
loope
subb
bound
xchg
pusha
ss
sbb
arpl
out
out
stc
inc
orl
dec
fnsave
jl
cmp
inc
mov
adcb
fidivl
testb
daa
xchg
mov
sub
inc
pusha
mov
into
sbb
test
jo
in
mov
andb
pop
pop
hlt
cltd
xchg
jmp
dec
xchg
mov
outsl
or
and
push
adc
std
orl
insb
imul
lock
sub
out
scas
jo
std
aad
mov
and
out
and
and
dec
aam
repz
daa
es
jmp
shll
mov
dec
dec
or
xchg
lcallw
sbb
add
jp
mov
dec
lea
jns
mov
cmp
dec
pushl
cmp
js
lods
sub
adc
out
mov
sbb
rolb
mov
out
mov
push
sub
divl
in
pop
mov
rclb
xchg
and
outsb
inc
and
sarb
sub
fwait
ja
in
fsubs
sub
out
mov
adc
adc
mov
js
loopne
jne
rclb
jb
push
iret
lret
lods
push
dec
lods
insl
scas
sbb
cmp
and
mov
cmpsb
pop
inc
popf
lock
orb
fnstenv
icebp
pop
push
pop
mov
hlt
push
sub
adc
push
jmp
adc
in
shrl
int
or
mov
mov
mov
call
or
jo
xor
test
hlt
sbb
mov
dec
mov
insl
lret
or
mov
repz
insl
push
jp
fildl
jle
mov
pop
in
pop
xor
pop
cmp
dec
adc
fcom
xchg
lods
shlb
jle
cmp
nop
push
dec
mov
fs
mov
test
inc
xor
dec
xchg
pop
push
loopne
mov
lret
mov
ds
rcrl
negb
lret
jge
loop
and
add
jl
xchg
dec
pusha
in
sub
nop
jns
inc
jmp
test
xchg
or
adc
push
inc
mov
or
ds
cmp
mov
xchg
cs
and
fldl
xchg
push
jae
pop
testb
xor
dec
sub
inc
cmp
negl
or
repz
sar
mov
ret
movsl
outsb
cmp
mov
ja
outsl
test
mov
hlt
push
aas
inc
xor
add
mov
into
loope
clc
mov
dec
icebp
cld
rolb
cmp
xchg
jg
fnstsw
sub
dec
mov
mov
movsb
add
jmp
shl
in
push
xchg
insl
jno
insb
cmp
xchg
andb
or
pop
mov
loop
sbb
inc
pop
clc
push
or
push
shl
ror
jne
mov
pop
dec
mov
arpl
pop
add
jns
and
mov
push
jmp
test
repnz
sbb
inc
or
clc
add
aaa
add
negb
cli
or
lcall
std
sbb
scas
nop
adc
or
xchg
js
push
push
adc
ljmp
jle
cmpsl
lds
sub
call
inc
cmpsl
xor
pop
mov
repz
mov
or
jne
push
outsb
xchg
hlt
pusha
sbb
js
movsb
test
sahf
xchg
pop
xchg
into
ffreep
jo
in
push
xlat
xor
add
outsb
in
xchg
xchg
sub
adc
sub
sbb
inc
and
adc
jbe
xchg
pop
jge
cmpsb
mov
aam
mov
clc
pop
mov
ret
mov
stc
das
jmp
jb
out
sbb
es
es
adc
mov
mov
lea
dec
fst
ss
fs
rcrb
mov
push
test
dec
into
adc
xor
adc
lds
sbb
int3
dec
lods
or
add
xchg
lahf
movsb
or
add
insb
sbbb
mov
mov
add
push
jae
lock
addr16
or
adcb
sub
mov
dec
sub
push
repnz
pop
movsl
data16
loopne
inc
and
outsl
jge
xchg
stos
jne
and
aam
xchg
jmp
push
mov
mov
push
mov
pop
mov
scas
add
outsb
mov
push
jle
xorb
mov
push
dec
ficompl
fadds
or
pop
xchg
xchg
rorb
sub
mov
jge
push
es
data16
adc
lcall
mov
fisubl
jge
mov
pop
daa
xor
jno
sti
js
daa
aam
fdivp
push
loop
push
mov
push
lahf
aad
add
and
push
jecxz
jae
mov
mov
add
or
and
push
adc
mov
into
add
std
mov
sub
or
mov
loop
pop
mov
pop
xchg
xchg
inc
mov
adc
pusha
into
sub
xchg
mov
repz
add
push
ljmp
shrl
mov
cmpsb
ret
mov
lea
jg
cli
mov
jp
cltd
insl
xchg
dec
xor
stc
dec
sbbl
jae
push
inc
popf
push
loop
push
xor
inc
cmp
dec
les
and
fdivr
popf
push
aaa
and
add
ss
repnz
sarl
adc
xchg
js
adc
cli
dec
mov
push
sbb
faddp
movsl
out
xchg
cltd
test
fldl
and
push
mov
ja
sbb
leave
sti
and
dec
inc
scas
fmuls
into
andb
clc
movsl
mov
pop
outsl
ficoml
inc
mov
xor
idiv
sahf
xchg
and
xchg
fimull
inc
mulb
arpl
ss
push
stos
sti
xor
push
mov
test
cltd
stc
jno
es
pop
decb
xchg
call
hlt
jb
in
mov
cmpsl
pop
cmp
outsl
mov
mov
jmp
xchg
in
fnstcw
pop
adc
enter
push
je
jb
mov
pop
or
ds
scas
shlb
pop
sbb
jle
mov
push
in
adc
imul
mov
cli
stc
dec
hlt
notl
dec
addl
add
aad
add
aas
cli
and
movb
jo
les
rol
push
inc
jne
xorl
jbe
pop
mov
mov
fsts
or
sahf
pop
sarb
fiadds
clc
lret
scas
mov
outsl
mov
imul
jb
jecxz
nop
loop
mov
xchg
movsl
mov
mov
sbb
mov
xor
out
sbb
adc
shlb
xchg
fmull
leave
dec
cmp
push
dec
xor
push
and
stc
pop
dec
or
sbb
jno
sbb
jb
cwtd
loope
or
mov
dec
push
sub
lods
stc
iret
xchg
sub
inc
mov
cmpsl
rclb
adc
push
dec
jns
js
sarl
pushf
jbe
call
mov
inc
mov
inc
aaa
mov
in
decl
data16
aad
daa
bound
xor
in
popf
iret
jmp
cmpsb
loope
dec
out
inc
jmp
xchg
out
push
sti
jmp
xchg
aaa
outsl
mov
arpl
inc
rcrl
xchg
mov
sub
jg
inc
xor
xlat
test
js
cs
gs
jb
lar
lret
lcall
bound
jmp
out
fimuls
jge
imul
loopne
inc
cwtl
fs
aas
fidivs
push
cltd
mov
imul
cmp
xchg
loope
or
cld
mov
fcompl
xchg
fidivrl
inc
dec
ja
bound
sti
sub
pop
adc
popf
add
lahf
cmp
push
std
gs
push
shlb
or
in
ja
cmp
adc
sub
lcall
pop
repnz
cmc
mov
clc
into
mov
fwait
xorps
repz
adc
shrl
js
jecxz
inc
icebp
push
jne
aaa
call
mov
das
push
sub
jnp
jmp
subl
add
and
xlat
xor
mov
add
sub
xchg
outsb
es
sbb
sbb
sub
or
scas
cmp
sub
fucom
sbb
cwtl
insb
push
pop
and
out
add
add
shll
daa
mov
fstp
cmp
jp
mov
stos
jne
test
int
imul
leave
xor
push
inc
inc
popa
imul
test
aaa
je
aad
insl
ret
aas
mov
push
sbb
roll
jbe
cltd
jmp
in
mov
jo
fstpl
or
xlat
jge
insl
ret
xlat
pop
in
push
sub
mov
xor
push
inc
cltd
sahf
ret
cmp
sbb
mull
aad
inc
loope
in
sbb
add
rcrl
or
add
pop
jg
cmp
sub
add
loope
inc
ljmp
dec
cmp
stos
adc
xchg
arpl
dec
test
and
lods
mov
add
int3
sub
and
xchg
ja
xor
lds
mov
jb
xor
push
sbb
lea
in
aam
pusha
movsb
add
imul
add
add
adc
cld
xorl
mov
or
gs
jmp
fsub
jg
add
inc
pop
or
jp
mov
in
adc
rcrl
push
inc
addr16
lea
adc
sbb
sub
jp
jle
sahf
mov
aam
gs
mov
pop
test
and
push
mov
nop
push
pop
hlt
lea
add
xlat
inc
stc
inc
das
cmp
divl
xor
fs
js
rcll
pop
cmp
out
cmp
stos
jb
leave
mov
sub
push
and
xor
movsb
dec
inc
dec
stc
lret
mov
data16
das
mov
loop
mov
shr
dec
mov
mov
pop
into
sbbl
fimull
aam
cmp
jl
xchg
movsb
adc
jge
xor
jb
mov
pop
pop
loop
ljmp
pop
mov
cmp
ret
cmp
ja
inc
jp
sub
cmp
jge
je
sbb
ja
xchg
add
roll
mov
mov
lahf
cli
popf
jnp
mov
daa
mov
pop
pop
xchg
inc
pop
icebp
mov
mov
jbe
xlat
out
inc
ficoms
mov
fbld
adc
aad
idivl
test
inc
push
mov
mov
inc
sti
jecxz
movb
sub
ror
mov
push
adc
pushl
sti
cltd
xchg
ret
cmp
cmc
out
push
push
addr16
adc
sub
push
aaa
push
adc
and
ficoms
or
ljmp
aad
jno
or
stos
pop
movb
xchg
int3
pop
mov
scas
push
inc
inc
add
shll
add
fbstp
jb
push
gs
out
sahf
dec
imulb
mov
jbe
xchg
xchg
fnstenv
inc
jo
insb
push
push
and
mov
stos
orl
mov
inc
jnp
jmp
fwait
pop
test
out
jl
add
or
mov
pop
jl
dec
sub
popa
fcom
or
out
push
into
pop
lock
movsl
lods
fs
sbb
fnstenv
jae
dec
adc
mov
int3
mov
push
mov
fnstenv
mov
dec
jl
je
lcall
fs
jne
jp
cmp
loope
sbb
dec
test
and
xor
sbb
jno
sarb
cmc
bswap
iret
dec
mov
fcompl
cmp
js
inc
lahf
test
stc
adc
in
push
xchg
pop
in
stos
fbstp
sti
fs
push
mov
cli
loope
or
inc
xchg
inc
mov
fnsave
daa
addr16
sbb
js
sub
call
imul
mov
or
repz
lock
mov
mov
stc
idivl
or
pushf
andb
dec
push
outsl
out
js
push
inc
ss
inc
nop
mov
lods
out
inc
pushf
push
push
add
sbb
mov
enter
shr
mov
lret
loopne
test
add
dec
mov
dec
or
addr16
ljmp
jg
xchg
fsubrs
arpl
sub
daa
jmp
aas
mov
test
xchg
es
cmp
mov
fnstcw
xchg
pushw
scas
in
stos
icebp
mov
out
dec
outsb
push
roll
add
lods
lods
dec
or
sbb
out
lea
push
jmp
cmp
jge
ret
arpl
xchg
aad
push
mov
jns
lahf
fldz
xor
dec
adc
mov
pop
clc
mov
insb
cmp
loope
stc
das
jecxz
adc
jmp
lret
and
cltd
rorl
lods
icebp
sub
or
aad
or
sbb
fisubrl
mov
filds
push
dec
add
test
aas
or
mov
test
inc
xlat
mov
popa
push
push
movb
test
mov
pusha
mov
mov
or
es
lret
mov
loope
or
jae
and
inc
or
cmp
sarb
inc
or
push
testb
add
sbb
sbb
xchg
xor
lods
in
cmp
shrl
add
sti
not
adc
rcr
jne
lret
cmp
cmp
cmc
fs
lods
and
enter
mov
sub
rorb
sub
hlt
outsl
mov
enter
int3
test
adc
mov
and
mov
lahf
cmp
and
aas
add
stc
adc
push
xor
pop
cli
rclb
es
lahf
pusha
pop
lret
mov
xchg
dec
adc
sbbb
sahf
adc
sbb
lahf
or
mov
jle
or
in
jnp
inc
bound
cmpsb
adc
leave
pop
sbb
add
mov
dec
scas
call
adc
sub
shrb
sbb
sub
dec
notb
dec
mov
push
rcrb
cmpsb
inc
sbb
push
mov
dec
int
cmp
lret
mov
and
movsb
icebp
jnp
movsl
dec
mov
cmp
ror
pop
fstl
xchg
fiadds
xchg
std
xor
outsb
fstps
ffree
sub
xor
not
mov
popf
add
mov
adc
dec
and
dec
ljmp
xor
xchg
xor
cmp
sub
fnsave
iret
dec
psrld
mov
jmp
mov
inc
jno
cwtl
pop
inc
out
fnstenv
sub
lea
testb
jmp
movsb
pop
adc
decl
push
icebp
jae
call
and
roll
iret
xor
pop
mov
xchg
in
jbe
addr16
insb
adc
pop
orl
cwtl
push
cwtl
lods
xor
dec
or
sbb
dec
mov
add
lcall
pop
aam
js
xchg
call
xor
jae
dec
int
jmp
xchg
mov
outsl
and
cwtl
lret
scas
xor
mov
inc
sub
sbb
insb
adc
xor
push
xlat
popl
inc
or
xchg
femms
inc
jge
test
out
push
and
scas
mov
mov
mov
dec
fsubl
mov
cmpsb
xchg
lds
jnp
stc
fs
call
dec
inc
jecxz
cwtl
in
test
out
add
adc
add
out
daa
pop
mov
mov
sub
cld
jns
jnp
mov
aaa
insl
pop
xorb
adc
stos
dec
out
pop
or
push
nop
and
and
and
inc
inc
jno
xchg
add
stos
mov
jo
enter
and
loopne
push
dec
sbb
shlb
in
xchg
add
lea
jecxz
add
and
push
std
pop
orl
sarb
jne
pop
pop
sub
bound
adc
mov
les
out
fsts
clc
cwtl
xor
jg
rcll
xor
xchg
iret
cld
mov
mov
rcrb
lods
xor
mov
iretw
cld
jecxz
dec
addb
sub
aaa
jb
add
jb
gs
cmc
call
test
jl
cmp
shlb
xchg
mov
jno
out
sbb
jne
mov
cmp
cli
dec
lods
xor
pop
mov
loop
or
jb
cli
dec
add
mov
inc
roll
pushaw
cld
push
mov
xchg
shlb
xor
or
into
inc
out
fidivs
and
cmp
inc
sbb
jl
enter
loop
test
adc
and
add
mov
sahf
xor
jae
out
jbe
andl
or
pop
and
pop
pop
xchg
pop
sti
jne
push
sahf
dec
jmp
rcrl
subb
pop
lahf
dec
cli
dec
ret
dec
cmpsb
dec
shrl
add
lock
push
imul
add
loop
arpl
fs
loope
xchg
cwtl
popf
jge
aad
cmp
cld
inc
mov
fwait
sub
cs
fstl
stos
imulb
adc
and
dec
mov
outsb
movsb
push
push
es
call
cmp
aas
sbb
pop
lods
out
cmp
sbb
sti
jmp
out
xchg
mov
mov
in
lahf
test
mov
fwait
call
std
ljmp
movsl
pop
jbe
xor
mov
xor
ret
cmpsb
jge
call
leave
jbe
fildl
push
nop
sub
mov
cltd
cmp
lret
cmpsb
js
jmp
idivl
add
lock
out
sub
push
bnd
nop
arpl
mov
lahf
push
lret
or
push
xchg
mov
jl,pn
nop
push
push
pop
mov
push
lret
clc
clc
notl
mov
subl
outsb
lock
cmc
mov
jg
mov
es
loope
xchg
iret
test
testl
dec
js
data16
test
addl
testl
pop
loope
mov
ror
sbb
lods
mov
lahf
out
repz
repnz
push
and
mov
addr16
clc
add
jbe
or
mov
bound
mov
in
sbb
clc
jb
bound
fildll
iret
dec
fcompl
jnp
dec
or
cmc
pop
in
lea
lret
sub
aas
sbb
jecxz
loope
in
adc
xor
in
cs
cwtl
sub
push
fstp
ficomps
pop
pop
push
mov
icebp
leave
jp
repnz
adc
lret
jg
cmp
add
xor
outsb
adc
xor
dec
loope
mov
inc
adc
lock
pop
adc
xor
iret
sbb
addr16
mov
mov
dec
adc
movsl
stos
cmc
loop
nop
cli
adc
pop
cmp
cmpsb
sub
jno
xor
push
xor
cmp
shll
jmp
xchg
in
in
lahf
mov
dec
in
repz
into
in
in
ret
push
xchg
idiv
lods
dec
sti
dec
repnz
pop
mov
mov
xchg
inc
add
mov
inc
leave
adc
sub
movsl
lahf
sub
xor
inc
pop
rcl
adc
inc
cmc
jnp
ror
rcll
sarb
negl
push
es
sbb
xlat
sti
into
lods
sti
test
and
sbb
nop
outsl
sbb
mov
adc
pop
push
pop
dec
popa
xor
xchg
int
inc
mov
aam
dec
mov
in
mov
pop
out
lock
lds
out
test
xchg
push
xchg
iret
sbb
adc
lods
and
gs
add
add
lods
insb
jp
mov
xchg
cmp
mov
sbb
nop
je
cmp
mov
dec
pop
xchg
bound
adcb
add
loope
dec
loope
or
jno
adc
lds
xchg
mov
xor
or
fistps
es
push
ljmp
test
notb
push
sub
cmpsl
test
xlat
lret
dec
xchg
scas
insl
cmpsl
xchg
sbb
pop
mov
inc
jbe
jl
xchg
mov
add
cmp
xor
roll
cmc
adc
sbb
sbb
out
mov
sub
mov
stos
fstps
fbstp
repz
jb
mov
lods
mov
mov
repnz
jbe
sub
andb
dec
dec
mov
cmc
call
jae
in
add
movb
insb
lret
and
push
add
jl
nop
clc
insb
pop
ret
sub
scas
mov
add
call
sub
mov
sbb
or
pushf
data16
in
add
sbb
pop
pop
aaa
repz
dec
jg
cmp
push
rorl
jnp
js
dec
mov
cmpsl
jle
lret
push
pop
or
and
and
mov
jne
dec
aam
push
in
jae
cmp
popa
xlat
ljmp
jne
cltd
or
jnp
xchg
pop
dec
std
or
sbb
xchg
dec
mov
add
lret
addr16
cld
fldenv
sahf
xchg
inc
pop
in
imul
ds
pushf
mov
out
subb
pop
mov
sub
pop
fistpll
clc
push
ret
dec
jae
dec
test
loope
jo
push
add
fmull
sbb
loopne
add
and
nop
pop
adc
mov
mov
push
loopne
jl
shll
mov
inc
cmp
dec
or
add
call
mov
icebp
lahf
pop
aam
inc
or
push
jle
adc
pop
pushl
cmp
xor
add
int
scas
leave
cmp
lret
shl
test
pop
mov
in
and
mov
sbb
test
jge
js
mov
ljmp
mov
in
xchg
inc
add
jbe
inc
push
lcall
les
jae
aam
cwtl
cmp
cmp
and
test
xchg
and
mov
xor
xchg
call
in
xor
test
lret
mov
or
rclb
cli
adc
iret
gs
pop
jns
int
jo
sarl
mov
popa
scas
push
inc
fiadds
nop
xchg
mov
xor
sbb
repnz
fsubl
cmp
loopne
lods
hlt
pop
aad
outsl
mov
fdivp
jno
cmp
repz
mov
add
mov
xchg
xchg
clc
mov
and
sub
lret
insb
and
aaa
div
push
inc
shlb
pushf
push
cld
popa
dec
push
arpl
xchg
mov
adc
jb
fstpt
cmp
into
sbb
xlat
push
xorb
fsub
icebp
je
ds
movsb
mov
push
call
sbb
lods
repnz
mov
push
sub
loope
dec
mov
inc
xchg
inc
lret
out
mov
addr16
pop
lcall
jg
shr
pop
adc
sub
cltd
xor
push
loope
pop
mov
add
adc
les
sbb
mov
jae
aam
ret
insl
dec
pushf
sbb
dec
rep
xor
or
mov
pop
push
mov
xchg
loope
je
xchg
dec
or
or
xchg
and
inc
mov
lds
xchg
dec
cli
sar
xor
fmuls
imul
cmp
mov
and
std
cmp
pop
movsl
ss
adc
sbbl
pop
cmp
inc
incb
sub
xor
in
aad
mov
out
adc
xchg
in
inc
test
or
mov
mov
testb
shlb
out
out
outsl
sbb
jb
imull
and
call
ja
rcll
push
jne
mov
test
out
fwait
mov
sbb
shrl
rcr
dec
mov
frndint
aam
push
test
or
lods
lret
addr16
sarb
ret
and
cmpsl
jecxz
jmp
jae
jns
jge
sub
movsb
mov
or
jge
sarb
repz
xor
clc
sbb
mov
sub
adc
dec
sub
jg
lcall
inc
add
iret
es
sbb
insl
pop
jge
adc
pop
rcrl
call
lcall
stos
and
lea
or
out
mov
adc
or
adc
iret
xchg
jno
shrb
and
ds
or
xchg
dec
int
std
scas
xor
jmp
nop
jp
int
mov
std
mov
inc
jns
lretw
and
in
out
iret
pop
jl
adc
stos
sbb
jae
pop
cmpsb
call
outsl
ret
lahf
lea
lods
lock
adc
jge
sub
lea
jb
arpl
int
xchg
mov
xor
or
dec
or
inc
add
push
adc
adc
outsl
mov
insb
push
fsubrl
and
pop
insl
aaa
add
pop
push
out
jg
pop
and
xor
std
xchg
loop
lock
popa
int3
cmp
cli
addl
adc
jne
push
xchg
mov
sub
pop
mov
mov
lret
push
mov
jae
sub
xchg
jb
stos
adc
xchg
jnp
sub
sbb
mov
jge
xor
ret
pushf
jmp
pop
jmp
out
pop
sub
sub
lock
les
scas
push
test
mov
pop
sub
cwtl
mov
add
aad
sbb
dec
sti
push
xor
mov
mov
xchg
mov
mov
iret
or
rcr
sahf
sbb
test
pop
popa
sub
fcmovnu
sahf
xchg
loopne
sub
fsubl
jae
jmp
hlt
jbe
shlb
lcall
push
xchg
shll
arpl
push
mov
rcll
cmp
lahf
push
les
pop
inc
mov
in
js
out
add
sbb
adc
lea
jne
aaa
repz
cmp
jge
push
lea
mov
cltd
mov
sbb
sarb
sub
stc
pop
jnp
cmpsl
and
jmp
xor
stos
mov
lock
out
ficompl
sub
sub
daa
insl
add
jmp
lock
ljmp
push
mov
dec
sarb
mov
arpl
inc
push
es
xor
or
mov
or
mov
xor
lret
sub
aas
pop
adc
enter
pop
cmc
mov
adcl
test
das
push
xchg
out
mov
push
push
pop
imul
test
lock
jmp
leave
xchg
inc
xchg
xchg
push
in
popaw
sub
xchg
xor
adc
jle
push
or
mov
jl
push
cs
add
call
xor
mov
fcmove
int3
lret
adc
lret
jle
dec
fstps
aaa
mov
sub
or
xchg
mov
leave
sbb
push
adc
dec
cmc
adc
xchg
test
cmp
pop
mov
out
std
inc
aam
loopne
dec
movsl
and
jp
out
mov
outsl
insl
sub
stc
and
mov
shlb
mov
mov
dec
sbb
inc
jmp
add
stc
sbb
popf
cmpsb
ret
push
sbb
push
imul
sbb
stc
int3
or
icebp
mov
cmp
popa
sub
das
xchg
inc
cmp
pop
push
cmpsl
or
sbbl
imul
cmp
lock
faddl
pop
jae
inc
in
inc
ja
add
out
mov
inc
outsl
mov
push
xlat
mov
mov
lahf
inc
mov
inc
sahf
add
cmc
dec
or
mov
int
mov
scas
xlat
clc
pusha
loop
inc
xor
jmp
and
xchg
adc
mov
sbb
lret
hlt
imul
bound
in
js
mov
bound
addl
cmp
push
pop
mov
lret
aad
leave
into
push
lret
cmpsl
pop
sarl
xchg
pop
mov
imul
out
sbb
lret
push
or
stc
cmp
xor
and
sub
test
sbb
cmc
or
aam
je
dec
movsb
xchg
hlt
mov
jno
outsb
repz
aad
pop
pop
cmc
mov
mov
mov
nop
pop
jl
sbb
or
call
add
cmp
notl
mov
shrl
es
adc
shlb
xchg
jo
jb
lock
mov
inc
popf
decb
adc
movsb
inc
cld
sti
or
push
out
add
out
add
jno
sbb
ret
popf
inc
imulb
negb
mov
mov
jb
xchg
xchg
les
lret
insb
ret
cmp
or
cmp
into
inc
mov
dec
daa
add
xor
cmp
popf
shlb
cmp
ss
dec
xchg
fdiv
jle
mov
sar
lock
xchg
hlt
push
cmp
pop
push
mov
clc
clc
clc
pop
ds
fidivrs
dec
jg
call
lods
pop
push
jle
sahf
ja
push
mov
inc
lods
add
fnstenv
sbb
cmpsl
out
jl
test
decb
sub
or
pop
push
jbe
adc
jbe
jne
mov
inc
xchg
pop
in
adc
dec
int
inc
subb
loopne
test
jg
jl
pop
mov
add
pusha
gs
pusha
test
push
into
mov
jecxz
sbb
pop
or
jp
mov
adc
mov
cmp
clc
xchg
jb
testb
aas
and
arpl
mov
fcomp
rorl
test
inc
sbb
in
fsts
jmp
mov
mov
mov
cmpsl
sub
and
sub
iret
mov
outsl
leave
push
dec
and
lcall
sub
insl
jge
insb
int
cli
jmp
mov
out
stos
sbb
shlb
pop
fisubl
add
inc
outsl
fdivs
out
fcomp
jg
mov
loop
movsb
adc
sbb
filds
push
jns
out
fs
daa
adc
rcll
sub
cmp
mov
mov
mov
int3
push
jbe,pn
sub
lret
and
pop
lds
arpl
out
dec
jge
iret
sbb
or
fwait
in
mov
and
dec
cmp
and
je
and
inc
mov
xchg
add
or
into
and
xor
push
test
mov
xchg
or
pop
cmp
push
push
ret
leave
out
sbbl
and
jb
das
jnp
push
sbbl
rcl
cmpsl
sub
and
cwtl
cmpsl
sub
jo
lea
push
push
sub
fnstcw
fstps
inc
mov
mov
pop
and
push
dec
bound
or
pop
in
nop
fcoml
stc
mov
fildll
sti
cwtl
pushf
mov
out
movsb
sbb
loopne
mov
xchg
jb
cmp
and
push
add
dec
mov
mov
and
int
lret
push
shl
cld
loop
hlt
jbe
scas
xlat
and
fadd
arpl
inc
jo
cmp
mov
xor
jp
mov
les
and
popf
xchg
mov
mov
lahf
jbe
cmp
jb
mov
or
sbb
cmp
mov
xor
pmullw
jb
dec
jg
sub
sahf
lcall
cli
mov
jne
fst
adc
insb
cmc
test
bnd
out
add
fwait
mov
cs
shll
lock
cmp
test
in
cmpsb
push
dec
fstpt
stos
sub
sahf
xchg
pop
adc
in
es
scas
int3
dec
push
ss
pop
roll
mov
in
and
cmp
xor
fadd
mov
xor
scas
mov
push
scas
sahf
pop
shll
icebp
lahf
mov
imul
iret
xchg
movsl
into
les
aaa
add
movsl
arpl
add
xor
aaa
xchg
mov
mov
jo
insl
fiaddl
pop
mov
lds
rcrb
push
sub
xor
insl
pop
jmp
fs
and
add
outsb
sbb
push
rolb
push
movsl
sbb
push
push
pop
mov
or
add
movsl
sub
push
je
mov
and
into
mov
aas
or
mov
pop
stos
aaa
lods
pop
imul
orl
adc
mov
shl
outsb
push
sbb
fwait
cmp
and
fcomp
dec
sub
sub
or
jne
fcmovbe
cltd
inc
test
rep
or
icebp
femms
mov
mov
fadd
call
lret
jp
popa
icebp
stos
das
jbe
imul
loop
movsb
testb
push
xchg
jb
fstpt
jae
pushl
mov
enter
pop
push
dec
dec
movsw
jle
jge
jns
movsb
test
xor
add
lods
stc
in
gs
incb
decl
addr16
sub
in
ds
cmpsb
js
rcl
mov
xor
cs
insb
add
insl
fs
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
insb
dec
jnp
push
push
inc
dec
push
xor
jae
arpl
jg
pop
insl
xor
inc
cmp
push
cmp
and
inc
pop
aaa
jb
dec
dec
inc
cmp
push
sub
push
inc
sub
jae
gs
inc
cs
js
pop
push
pop
cs
jb
and
dec
imul
sub
xor
and
push
and
fs
inc
pop
pop
push
sub
push
inc
and
xor
sub
xorl
jne
xor
and
inc
jp
dec
and
bound
inc
pop
jae
ds
insl
push
andl
push
pop
sub
push
pop
pop
push
ss
push
dec
pop
cs
jge
jbe
jge
pop
inc
push
aas
dec
pop
inc
das
and
sub
push
arpl
xor
and
dec
inc
and
inc
jge
jnp
gs
outsl
xor
sub
arpl
pop
dec
and
inc
push
imul
cmp
das
pusha
push
push
outsb
pop
xor
jb
jnp
push
sub
inc
cmp
xor
cmp
inc
sub
jae
and
xor
dec
jbe
inc
push
insl
pop
and
push
push
push
daa
push
ds
cmp
jne
push
pusha
cmp
cmp
xor
outsl
dec
and
insb
cmp
pop
cmp
pop
pop
sub
jno
pop
gs
cmp
pop
bound
sub
pop
push
jns
push
cmp
jl
and
pusha
sub
outsl
inc
daa
inc
xorl
and
inc
dec
push
pop
push
cmp
ja
imul
cmp
gs
and
xor
aaa
push
insb
cmp
push
xor
pusha
dec
dec
addr16
bound
fs
push
je
cmp
pop
push
pusha
and
push
and
outsb
inc
pop
cs
jns
jp
jnp
gs
inc
ds
pop
jle
dec
jno
pop
addr16
cmp
xor
jnp
inc
jle
sub
pop
ja
push
cmp
js
inc
pop
js
push
aaa
pusha
pop
pop
adcl
xor
and
dec
and
sub
push
push
inc
aaa
gs
xor
inc
inc
pop
das
and
dec
pop
js
inc
inc
and
cmp
jge
addr16
sub
push
dec
outsb
push
push
push
push
dec
pop
arpl
jl
jo
cmp
sub
dec
pop
inc
and
aas
subb
inc
and
jg
and
dec
adc
and
xor
data16
sub
inc
sub
dec
push
es
xor
pop
arpl
push
push
push
bound
sub
inc
gs
inc
pop
outsl
jle
dec
imul
cmp
sbb
add
jl
or
jle
jg
jns
or
push
or
jns
jns
jl
or
inc
gs
dec
ds
dec
dec
dec
inc
dec
dec
cmp
cmp
cmp
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
cmp
ds
pop
imul
pop
xor
jb
dec
jl
inc
and
orl
js
push
bound
imul
jae
gs
inc
xor
inc
inc
ss
aas
sub
jae
sub
cs
push
jg
insb
jnp
sub
dec
sub
popa
inc
pop
aas
daa
dec
push
inc
and
cmp
push
add
push
inc
push
pop
push
add
push
push
popa
outsb
jno
popa
and
inc
jl
data16
and
jo
jns
jnp
pop
push
cs
cmp
fs
imul
cmp
push
and
push
pop
jle
dec
pop
js
xor
push
cmp
inc
gs
inc
push
outsl
jle
dec
imul
cmp
push
and
push
pop
jle
