add
add
outsb
add
add
push
add
ja
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
inc
add
jb
add
jb
add
add
inc
add
je
imul
inc
add
jb
add
jb
add
add
push
add
je
insb
add
push
add
js
je
add
push
add
outsb
add
add
push
add
js
je
add
add
dec
add
outsb
add
push
add
js
je
add
add
push
add
outsb
add
add
inc
add
popa
add
add
add
imul
outsl
add
add
add
dec
add
outsb
add
add
add
dec
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
je
imul
push
add
je
insb
add
add
inc
add
arpl
imul
add
outsl
add
outsb
add
add
add
arpl
jb
outsl
add
xor
nop
popa
jg
cld
faddp
js
in
add
add
add
add
push
add
push
add
add
add
add
jne
add
dec
add
mov
add
adc
add
add
add
add
add
jge
push
add
add
clc
add
add
add
add
add
add
add
pop
add
aad
add
pop
add
inc
add
push
add
add
dec
add
imul
inc
add
add
sub
inc
add
add
in
add
add
dec
add
add
add
addl
add
add
add
add
add
add
jo
mov
add
add
jo
push
add
inc
add
add
add
int
jge
in
add
add
insb
add
add
add
push
add
add
addb
add
add
add
add
into
add
add
dec
add
add
add
push
lret
add
add
fadds
inc
add
mov
mov
insl
add
add
stos
add
mov
cld
add
add
add
les
add
add
roll
add
add
jg
data16
dec
add
add
add
add
add
add
sub
add
out
add
sub
jge
dec
add
add
add
pop
add
add
add
sbb
insl
add
add
inc
add
add
data16
add
add
jmp
popf
add
or
lcall
add
add
add
add
popl
pop
add
add
cld
add
add
add
and
add
add
add
add
add
add
add
add
scas
add
add
push
sbb
add
add
mov
or
add
push
add
add
dec
add
add
add
add
inc
add
int3
add
add
add
add
xchg
add
add
add
xor
add
add
add
in
add
stos
add
pop
inc
add
add
or
mov
jns
push
cmp
add
add
add
add
add
popf
add
add
add
cwtl
add
add
add
add
add
add
add
mov
add
add
stos
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
rolb
daa
add
add
add
add
add
add
mov
add
add
sbb
add
dec
add
add
add
add
add
cmp
mov
add
add
inc
add
add
add
verr
add
add
add
add
add
or
adc
lcall
add
jmp
stos
add
or
or
pusha
add
inc
add
test
add
stos
add
mov
lcall
add
dec
add
imul
inc
add
push
add
add
jl
mov
push
add
dec
add
add
sbb
add
lcall
add
add
add
add
add
add
lcall
add
add
add
insl
enter
sbb
pop
clc
jne
jecxz
mov
mov
push
out
mov
insb
jecxz
adc
push
cmpsb
adc
xor
or
cmp
inc
mov
mov
subb
aam
in
adc
sbb
and
ss
popf
repz
jecxz
push
or
addr16
icebp
mov
jns
pusha
test
mov
inc
pushf
inc
inc
fs
lock
ljmp
cs
inc
insl
and
lock
mov
fwait
movsl
outsb
std
ds
dec
in
les
call
mov
mov
mov
cli
out
shl
mov
int
outsl
shll
jg
clc
rcrl
into
inc
faddl
sub
outsl
and
rclb
das
loop
inc
and
int3
cmc
outsb
mov
imul
mov
rcr
add
jns
ret
ljmp
cmp
lret
cmp
push
out
cwtl
js
cli
sbb
jns
ffreep
scas
sbb
sub
jecxz
loope
fcomi
xchg
lods
in
push
sarl
cwtl
imul
mov
xor
ret
jl
jb
and
push
jmp
sbb
in
ds
cmp
pop
fs
pop
mov
or
fstl
or
push
mov
pop
movhlps
lea
sbb
or
mov
push
push
inc
fstpl
jne
or
pushf
js
mov
gs
mov
inc
int3
jmp
mov
out
cltd
adc
sub
insb
mov
sbb
xor
pop
rclb
int3
lahf
mov
adc
testb
fdivrs
pushf
aam
pop
push
sbb
subb
daa
add
and
inc
sbb
mov
pusha
and
ljmp
xchg
mov
daa
mov
popa
cmp
jb
data16
imulb
std
mov
push
inc
jb
std
daa
mov
or
cwtl
imul
inc
push
ja
jbe
push
jno
cld
test
sub
xchg
movsl
inc
xlat
xor
test
imul
and
jb
mov
cmp
or
ss
repnz
adc
xchg
mov
push
adc
adc
clc
scas
lret
pop
xor
xchg
lahf
cltd
sarl
hlt
push
mov
into
mov
addr16
aas
incb
popa
shl
push
in
add
ja
stos
dec
ret
lods
sub
add
cmp
std
icebp
stos
mov
mov
sbb
xchg
xchg
sarl
out
clc
pop
jbe
jecxz
push
jmp
xchg
clc
shlb
shll
jmp
mov
iret
xchg
xor
jecxz
fs
dec
aam
addr16
cmpsl
mov
push
push
hlt
je
pop
loopne
pusha
dec
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
push
call
mov
movb
mov
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
call
call
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
pushl
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
add
daa
outsl
push
jg
add
jbe
pop
aaa
push
and
out
mov
mov
outsl
push
jg
getsec
pop
daa
das
pop
aas
sub
cltd
sti
cmpsl
scas
xchg
mov
mov
pop
pop
push
outsl
add
mov
mov
ret
rcr
int3
jecxz
xor
sub
and
cmp
cld
jl
sbb
xchg
je
push
outsl
fisubrl
inc
je
movsb
push
and
mov
add
mov
sbb
sub
or
xor
pop
pop
dec
outsl
push
pushl
pop
out
pop
mulb
notl
add
jo
adc
inc
loopne
or
adc
inc
push
and
pop
xlat
cmp
pop
ljmp
add
add
inc
sti
lret
lcall
pushf
es
sti
paddq
aaa
jl
lahf
mov
lret
mov
nop
and
xchg
cmpb
stos
movb
mov
add
lods
or
lahf
loop
jnp
in
jl
pop
inc
outsl
and
inc
getsec
pop
daa
das
pop
xchg
aaa
aad
sti
out
mov
mov
ja
or
cmp
sub
push
cmp
pop
inc
scas
mov
xchg
mov
lock
enter
out
dec
xor
and
and
sub
jle
inc
jle
xor
xchg
sahf
xchg
mov
cli
cmpsl
hlt
cmp
cmp
sub
pop
daa
das
pop
aas
pop
iret
neg
out
xlat
inc
mov
cmpsl
scas
xchg
mov
outsl
push
jg
getsec
pop
daa
das
pop
aas
pop
iret
neg
out
xlat
inc
mov
cmpsl
scas
xchg
mov
xor
sub
test
or
mov
pop
aad
mov
fcomp
lret
xchg
pop
aam
pop
cld
adc
lods
xchg
mov
popl
cmp
mov
xor
insb
jbe
lahf
fwait
lods
jno
dec
loopne
mov
and
mov
sti
enter
movsl
shll
shll
test
mov
xchg
xchg
dec
xchg
popf
sti
push
ljmp
push
inc
pop
in
arpl
pop
fldl
cmc
arpl
xor
aad
add
hlt
add
aad
inc
out
inc
insb
mov
jno
xchg
xchg
stc
in
bound
clc
mov
in
lea
bnd
cmpsb
sahf
sbb
xchg
cwtl
xchg
push
cltd
adc
pop
ss
lds
addr16
push
in
rcrl
outsb
xchg
shll
pushf
bound
pop
adc
jbe
in
mov
push
movsl
xor
xor
mov
push
xchg
mov
and
pop
pushf
out
cs
cltd
pop
inc
sbb
and
mov
fldcw
pop
lods
lock
xchg
shrl
in
adc
or
lods
push
push
inc
pop
cltd
cwtl
movsl
dec
lea
jnp
sbb
jmp
daa
push
inc
inc
push
decb
jno
cmp
mov
jl
js
mov
mov
pop
push
lods
adc
in
out
ss
mov
jl
xchg
sti
mov
fcmovb
jle
movsl
lods
mov
outsl
cld
push
mov
int
out
add
fwait
mov
mov
mov
lcall
mov
cmc
lcall
fsubs
adc
lahf
push
lods
cmp
cld
jb
jle
mov
mov
xchg
or
or
cmp
lret
cmp
stos
adc
aas
or
push
loopne
sbb
lcall
aam
stc
push
jo
sub
jmp
clc
and
lock
inc
outsb
push
dec
push
stc
mov
dec
pushf
ja
data16
or
cltd
stos
aas
std
cmp
ror
mov
mov
mov
cltd
popf
push
jo
mov
dec
lret
rcll
jp
mov
xchg
pop
adc
leave
sub
neg
shl
mov
and
addr16
out
in
fwait
and
sbb
adc
js
jecxz
sub
int3
sti
cmp
xchg
pushf
cltd
bound
jae
in
or
dec
xchg
push
adc
jle
cmpsb
test
outsb
jbe
sub
inc
push
xchg
pop
pop
xchg
pop
pop
mov
lret
outsb
testl
in
imul
in
cmp
jo
mov
cs
das
push
cld
sub
aad
and
lret
hlt
push
lea
data16
pop
mov
cltd
fsubrp
mov
rolb
mov
pusha
xchg
jmp
or
rcrl
or
sub
scas
add
push
xor
cmp
push
sub
int
adc
adc
mov
sbb
inc
scas
orl
movsb
sbb
movsb
adc
sarl
scas
in
sub
add
push
inc
mov
xor
lds
jbe
push
mov
mov
rcrb
or
mov
hlt
add
mov
push
pop
ret
les
inc
call
cmp
leave
and
mov
jge
or
mov
loop
loop
icebp
sbb
sbb
inc
pop
das
pop
popf
sub
out
inc
jmp
sub
hlt
insb
cmc
adc
push
cmp
imul
or
stos
dec
test
mov
pop
aas
shrb
and
fdiv
xchg
dec
pop
pop
insl
scas
shlb
mov
scas
mov
add
mov
and
adc
fisttpll
out
add
xchg
stos
jae
stos
fwait
jl
pop
or
and
inc
mov
in
in
and
bound
and
cmpsb
jl
or
or
les
sub
xchg
incb
jl
ret
mov
pop
cmpl
movsb
and
in
push
cmp
dec
movsb
lcall
cmp
sbb
jle
fnstcw
ret
stos
sub
mov
mov
add
sbb
stos
rcll
pop
adc
test
pop
mov
xor
dec
das
sub
mov
dec
xor
or
repz
dec
inc
mov
xor
fwait
lods
push
dec
pop
or
inc
xor
sub
mov
inc
mov
stos
fisubrl
lret
sub
cmpsl
jnp
in
mov
ds
jb
adc
jmp
push
fsubrs
pushf
pop
loop
jp
push
adc
sbb
les
or
and
push
popw
test
insb
rclb
dec
les
fisttps
cld
adc
int3
mov
mov
pop
mov
scas
insl
icebp
pop
rolb
push
jp
mov
adc
hlt
lea
add
pop
inc
adc
xchg
push
jmp
cs
push
rolb
pop
fadds
pop
sbb
xchg
adc
pop
jnp
jl
out
insb
hlt
hlt
push
shll
aaa
jg
daa
in
jns
fstpt
das
add
je
or
aam
jno
push
adc
rolb
jne
adc
in
in
mov
out
xchg
out
in
lods
lcall
lds
bound
mov
adc
sahf
inc
cmp
ljmp
aaa
scas
push
jns
xor
sbb
in
inc
push
sub
inc
and
std
rol
gs
or
cmp
lahf
push
ret
enter
stc
lods
or
or
inc
repz
jbe
jne
enter
fs
mov
xchg
stc
mov
loopne
inc
xchg
dec
fistpll
aas
repnz
stos
pop
dec
icebp
rorb
cli
mov
xchg
sbb
rol
push
dec
sub
insb
shll
aas
jne
add
push
iret
test
int
test
cmp
add
clc
cld
in
lcall
and
xor
sti
clc
cmpsb
add
and
jle
in
xchg
stos
push
push
or
mov
mov
test
pop
mov
cwtl
push
mov
cli
in
icebp
aam
jno
xchg
cmpsb
iret
ss
in
and
insb
mov
test
leave
mov
gs
fildll
adc
pop
js
dec
jne
xchg
out
sbb
pop
sbb
jl
in
sti
aam
iret
shl
loopne
inc
mov
sar
mov
sub
cmp
mov
jge
dec
sub
rcl
adc
pop
pop
test
movsb
mov
mov
cli
insl
mov
pop
xchg
dec
mov
pop
aad
sub
fisubs
adc
mov
fnsave
ror
pop
das
xor
and
daa
add
shlb
lret
rcrb
lods
xor
pop
je
aas
mov
outsb
aad
stc
fxch
mov
aaa
jb
je
in
aam
mov
cwtl
mov
in
iret
repnz
das
outsb
aas
in
add
je
insl
push
dec
decb
fnstsw
xchg
dec
and
clc
orl
mov
icebp
ret
inc
mov
inc
sbb
inc
jmp
cmp
and
mov
outsb
jbe
mov
aad
and
out
into
inc
jo
cli
ret
xchg
sub
jno
cwtl
aaa
push
inc
sub
xor
cmc
imul
and
cmp
cmp
mov
jp
imul
repz
dec
arpl
and
push
xor
sbb
ljmp
es
je
cmpsb
rcll
push
cwtl
and
dec
in
out
test
popa
pop
cltd
jns
mov
test
addl
and
lcall
xor
call
fldcw
add
sub
in
subb
sahf
mov
call
loopne
mov
cmp
into
or
push
sbb
lock
pop
loop
cmp
hlt
and
lock
cmp
test
sub
cmpsl
int3
or
push
popa
pushf
outsl
mov
mov
icebp
cmp
enter
jns
movsl
and
loop
mov
daa
lock
out
iret
out
dec
andb
push
je
xchg
push
movsb
push
lret
jbe
scas
xchg
clc
and
sbb
in
cmp
fisubl
mov
popf
or
xor
sub
fld
dec
pop
xorb
test
sbb
iret
leave
inc
push
adc
add
fidivl
je
cmc
sbb
fists
rclb
inc
pop
adc
pop
sarb
das
mov
hlt
inc
and
fwait
jl
add
roll
daa
pop
or
sbb
mov
push
mov
mov
fmulp
into
sbb
push
jb
push
into
xchg
mov
fdivrp
add
orl
adc
pushf
mov
cwtl
xor
mov
cli
xchg
jl
and
loope
dec
jecxz
leave
xor
add
sbb
add
xlat
push
loope
adc
fistps
jne
push
push
fucomi
and
imull
in
mov
shll
aas
jp
pop
sti
inc
push
leave
mov
das
das
sbb
gs
pop
ss
push
adcl
xor
scas
cmpsb
mov
sbbl
cltd
cwtl
out
add
pop
jmp
imul
stos
pop
mov
cmp
inc
push
dec
imul
mov
rclb
js
sbb
inc
mov
testb
push
fcoms
dec
add
lock
and
xchg
lods
add
je
fcomps
fmulp
adc
addl
movsl
push
cmpl
cli
fwait
pop
jne
cmp
movsl
jne
jbe
cmpsb
fwait
push
cmpsl
std
jb
push
ret
xchg
lods
lret
enter
xor
aad
dec
into
push
and
or
inc
dec
sub
mov
repz
dec
imul
jg
sbb
lret
imul
in
lea
mov
imul
inc
inc
push
pusha
shr
inc
xchg
lahf
xor
lds
cmp
or
out
imul
cmp
enter
lods
pop
call
xor
cs
insl
rclb
dec
aam
xchg
ror
push
and
arpl
mov
pop
pop
ret
in
dec
xchg
jmp
mov
out
and
ja
mov
lods
aaa
and
add
push
dec
repnz
lds
jnp
jne
pusha
frstpm(287
inc
pop
loop
jno
testb
inc
xor
xchg
inc
pop
iret
xchg
das
inc
fcmovnu
xlat
sub
imull
push
sbb
or
xor
xchg
lods
shr
jo
syscall
test
xchg
cli
mov
lahf
adcl
push
jle
cmpsl
dec
jp
cld
or
adc
jo
imul
push
out
add
xchg
movsb
push
push
std
push
cltd
test
fisubs
jb
lea
push
mov
andl
mov
jmp
in
xchg
call
mov
inc
adc
or
mov
mov
shll
movsl
add
cmc
dec
shll
dec
sbb
push
stos
test
or
dec
pop
andb
lods
or
cmc
push
add
shrl
out
mov
shll
loopne
aas
mov
scas
bound
mov
addr16
push
shl
inc
mov
and
mov
sarl
or
ret
outsb
fidivrs
add
or
pop
cli
aam
jbe
adc
ret
xor
xchg
into
in
and
lret
adc
mov
mov
scas
jno
adc
xchg
xchg
ret
data16
or
aaa
sbb
insl
int3
cmpsl
push
dec
subl
xchg
outsl
test
adc
jecxz
or
dec
int
dec
mulb
sahf
loope
push
mov
xor
lock
stc
push
cmp
inc
xor
int3
out
sbb
lock
mov
test
nop
jne
negb
jbe
mov
stc
lcall
xor
mov
pop
jo
test
cli
dec
adc
inc
cld
ds
sti
jno
out
dec
movl
gs
mulb
sbb
sub
xchg
or
cmp
int3
add
icebp
dec
inc
or
jnp
ja
fnsave
push
out
mov
mov
aad
pop
inc
mov
fsubl
ret
xor
rcrb
sti
repnz
aad
push
jg
or
jmp
cmp
js
int
movl
pop
and
mov
test
lcall
mov
mov
in
jp
clc
jmp
repnz
shlb
mov
jg
jle
fstps
xchg
push
cmpsl
lock
sbb
pusha
cmc
mov
sti
andb
push
pop
test
jo
inc
stc
mov
jmp
shl
adc
or
hlt
mov
fdivl
test
movsb
das
test
mov
push
ljmpw
insl
cmpsb
cmp
dec
iret
ja
insl
sub
sub
lahf
test
or
xor
mov
mov
mov
cltd
push
sbb
push
inc
lret
dec
shlb
jecxz
test
jp
xchg
mov
imul
xchg
outsl
mov
dec
and
jno
lcall
cmp
leave
cltd
pop
cmpsl
push
call
aam
fldcw
insb
jecxz
orl
add
ds
cmpsb
dec
inc
cli
cmp
sub
sbb
mov
into
jmp
ja
aam
ret
sub
adc
jle
dec
pop
test
dec
es
sar
mov
jno
ljmp
cmp
into
rorb
or
imul
sub
fmull
inc
and
lahf
lret
mov
movsl
sub
cmp
int
pushf
mov
or
push
hlt
jb
push
jne
mov
sbb
arpl
sbb
pop
push
ljmp
test
std
mov
xor
jbe
mov
aas
jne
xor
js
mov
mov
mov
negb
inc
stos
mov
in
push
in
xor
rolb
enter
add
mov
adc
add
push
int
pusha
mov
mov
loopne
adc
lock
ds
scas
push
subl
in
cmp
enter
sbb
sub
jmp
scas
inc
cmc
test
pop
sbb
lods
out
push
mov
or
into
dec
xchg
leave
mov
aad
sbb
mov
xor
push
aaa
mov
fsubrl
inc
out
cmpsb
mov
mov
ret
mov
xlat
mov
out
pop
cmp
mov
loop
and
add
jle
pop
repnz
dec
mov
int
ss
not
cmp
repnz
sbb
mov
jb
nop
movsb
jo
or
out
mov
sub
bound
mov
mov
dec
fcmove
cmp
cli
cmp
sbb
dec
sarb
pop
popf
mov
lods
pusha
push
stos
in
pushf
mov
in
mov
jne
int
mov
fwait
and
add
xor
cmpb
fisttps
mov
fwait
in
repnz
aam
leave
fsubp
pop
sbb
pop
or
aad
push
sbb
pop
xchg
sbb
or
dec
pop
in
in
pop
xchg
push
js
adc
or
xchg
pushf
push
jnp
lods
stc
clc
xor
or
fistl
lods
mov
movsb
pop
int3
dec
sub
dec
cmp
inc
int3
dec
jl
xchg
aam
mov
add
inc
out
and
xchg
or
in
xchg
jecxz
imul
lods
cmpsl
std
cmc
call
mov
push
and
push
adc
mov
idiv
lea
bound
imul
cmpsl
imul
nop
xchg
cmpsl
enter
pop
jae
shll
adc
xchg
aam
pushf
jbe
mov
mov
aam
jl
cmp
popf
xor
test
push
xor
fs
push
cmp
mov
adc
inc
loopne
push
out
lret
fnstcw
inc
mov
into
xorl
fdiv
jge
or
mov
out
jge
or
dec
adc
push
or
and
mov
fwait
lcall
scas
repnz
aam
push
bound
sub
cwtl
pushf
jae
dec
cwtl
sbb
in
xor
pop
dec
inc
sbb
movb
xchg
fcompl
fdivrl
in
cli
and
cmp
loopne
push
push
aaa
sbb
mov
fwait
stos
scas
ficoms
xorb
push
add
dec
jl
xchg
cltd
push
add
ffree
add
xchg
lock
dec
or
lods
push
dec
xchg
xchg
movsb
in
incb
js
mov
mov
cmp
and
mov
or
arpl
lret
jmp
or
out
iret
sbb
testl
inc
shrl
cmp
sbb
arpl
das
lods
cmp
aam
pop
xor
mov
lods
fimuls
ds
lahf
dec
mov
jne
ja
inc
in
out
stos
mov
dec
mov
ljmp
adc
jae
lret
xchg
jo
lret
scas
in
mov
das
arpl
dec
push
dec
movsb
les
jge
xchg
adc
lcall
mov
cmpsb
sub
ds
add
fldt
push
sbb
je
test
fildl
and
aaa
test
icebp
fcomi
sub
adc
mov
dec
movsl
inc
adc
dec
mov
sub
push
ret
shr
pusha
push
xor
test
repz
jp
out
fs
pop
push
or
int
jae
enter
cs
movl
or
ret
adc
sahf
sbb
repz
cmp
leave
lock
lret
inc
fnstenv
add
dec
lcall
push
or
bound
cmc
xchg
out
aam
inc
js
in
add
jo
mov
int
fadds
aas
mov
cmp
adc
sahf
sub
rolb
scas
ss
pusha
ficoml
data16
test
aad
hlt
inc
xchg
bnd
cmc
fimuls
in
push
aaa
cltd
ljmp
xor
push
mov
jbe
mov
xchg
dec
in
shlb
enter
and
push
mov
fisubrl
xor
mov
or
or
push
jg
mov
push
mov
lock
shl
xchg
mov
rcr
sub
cmpsl
mov
aam
js
sti
adc
call
push
add
adc
jb
sbb
xchg
shll
cmpb
testb
dec
xorb
loop
out
push
inc
mov
mov
pop
icebp
aad
inc
leave
in
or
cltd
add
sbb
fldenv
test
add
test
push
fimull
and
test
add
fs
mov
jo
test
ljmp
cmp
dec
ds
in
roll
and
mov
add
dec
adcl
jmp
mov
test
and
jb
imul
movsb
daa
or
sub
movzwl
adc
add
shlb
jb
outsb
push
mov
dec
mov
lret
and
mov
lods
arpl
outsb
cmp
cmpsb
cmp
or
fwait
sbb
push
pop
sub
cmp
insl
jae
dec
push
dec
aas
stos
jne
fs
sub
in
iret
dec
cmp
cmc
iret
lock
mov
std
adc
jo
pop
mov
jmp
dec
and
add
sub
in
sahf
sbb
rcrb
mov
dec
hlt
nop
test
mov
sbbb
adc
sarl
js
cmp
sbb
inc
fisttps
dec
cmpsb
in
test
sarl
ljmp
dec
and
and
xchg
add
jmp
loope
loop
addr16
dec
jmp
out
js
and
cmovns
mov
mov
mov
inc
sbb
xchg
mov
mov
daa
pop
push
dec
test
call
mov
imul
outsl
test
fldcw
shrl
cmpsl
push
das
fisubl
cmp
inc
or
xchg
add
mov
cmp
mov
pop
sbb
ret
mov
sub
push
mov
jbe
add
adc
sub
adc
add
jle
jae
mov
lahf
pop
bound
addb
jmp
adc
add
push
imul
and
sbb
mov
int
lods
jge
icebp
shl
pop
ss
cwtl
outsb
add
push
add
cmp
dec
js
ret
mov
lcall
mov
xor
mov
fsubrp
jp
jae
xlat
cmp
pop
fs
jnp
push
andl
jge
or
or
xor
imul
test
mov
fisubl
neg
adc
pop
mov
cmp
int
inc
addb
jecxz
daa
addr16
inc
getsec
pop
daa
das
pop
aas
pop
iret
neg
out
xlat
inc
mov
cmpsl
scas
xchg
mov
outsl
push
jg
getsec
pop
daa
das
pop
aas
pop
iret
neg
out
xlat
inc
mov
cmpsl
scas
xchg
mov
imul
sbb
ds
lret
neg
jecxz
xlat
sti
into
mov
cmpsl
stos
sahf
arpl
jae
out
push
pop
getsec
das
xchg
mov
dec
inc
xlat
pushl
push
out
inc
mov
mov
clc
stc
xchg
enter
push
jbe
es
jbe
push
push
push
push
icebp
div
out
cmpsb
mov
cmpsb
xchg
jbe
and
inc
es
aaa
es
push
push
push
push
out
out
into
mov
xchg
addl
or
jp
jae
jno
mov
mov
dec
mov
outsl
sbbl
mov
push
push
jmp
jnp
mov
dec
sub
pop
or
mov
lcall
push
imul
popl
add
sti
mov
xchg
dec
mov
jbe
addr16
push
test
sbb
out
es
pop
nop
xorl
push
mov
cltd
inc
nop
or
mov
arpl
push
push
or
lahf
sub
dec
xchg
movl
inc
mov
mov
out
scas
div
mov
into
sbb
cmp
setns
bound
daa
es
push
push
stc
es
out
rol
mov
cmpsb
xchg
outsb
pop
push
dec
inc
ds
push
cmovo
xchg
mov
ret
rolb
jbe
xor
cmp
dec
inc
push
popa
arpl
out
testb
cmc
fsub
ljmp
adc
xor
adc
push
inc
mov
jae
push
mov
mov
mov
mov
xchg
jbe
inc
push
push
inc
es
push
push
push
out
mul
cmpsb
mov
cmpsb
xchg
jbe
inc
push
push
inc
es
push
push
push
out
xor
add
gs
dec
stos
ret
xchg
add
xchg
test
es
les
inc
sbb
movl
inc
mov
sbb
fstps
sub
out
arpl
icebp
xlat
stc
clc
jae
sub
xchg
gs
je
pop
push
jno
mov
adc
pop
jo
push
cltd
out
push
and
shlb
inc
aad
xchg
cmp
sahf
xchg
cmp
shrl
nop
xor
lahf
enter
call
jne
adc
or
pusha
xchg
sub
xchg
cmp
sub
sub
lret
insb
push
ret
stos
xchg
stos
xchg
arpl
mov
push
shld
or
sbb
fwait
jae
fdivrp
xor
add
lcall
xor
dec
xorb
test
fdivl
push
fsubl
in
jge
repz
and
loop
and
mov
mov
push
mov
cli
cmp
and
cmp
bound
xor
inc
lds
cmpb
push
xchg
sti
add
stc
inc
push
bound
imul
andb
xor
mov
call
sub
jb
and
jp
xor
jo
shl
in
mov
jg
pop
repz
jo
fcomps
mov
test
xchg
xchg
imul
sbb
pop
imul
int
cmp
mov
xchg
and
lret
out
xchg
pop
sbb
pop
test
stos
push
daa
mov
enter
lods
out
and
xor
sarb
or
fwait
adc
test
jge
xor
outsl
push
in
cmp
sbb
test
bound
sbb
repnz
sar
mov
pop
sbb
xchg
fadd
xorb
sbb
jnp
stos
rorl
ffree
xchg
fs
imul
dec
cmpsb
in
imull
out
int3
in
shr
sbb
mov
adcb
xor
push
dec
scas
out
loop
pop
adc
and
cld
xor
pop
push
stos
push
popf
mov
mov
sub
and
dec
ljmp
dec
movsl
jmp
xor
test
data16
ljmp
ret
adc
push
mov
jb
cmp
inc
mov
adc
shrl
jne
mov
inc
jg
rol
xchg
adc
addb
mov
xor
xor
mov
clc
jno
das
and
cwtl
mov
hlt
and
fisubrl
push
push
outsl
lahf
shl
addr16
and
mov
int
dec
sub
fldcw
fwait
xchg
into
decb
int
movsb
dec
pusha
std
les
out
scas
mov
jne
inc
lahf
andl
and
rorb
mov
imul
jmp
lods
add
sbb
sbb
sbb
cmp
pushf
and
push
dec
add
testb
iret
adc
add
inc
imull
mov
loopne
add
movsb
js
imul
add
inc
rclb
fdivrs
pop
dec
and
xchg
cmc
pusha
add
jg
xchg
ja
and
jp
mov
int3
inc
fmul
std
stc
xchg
pop
and
sub
mov
stos
cs
icebp
mov
xor
fidivs
xor
das
fstpl
push
rcrb
or
std
iret
sahf
add
cli
inc
pusha
sub
inc
and
movsb
faddp
popa
pushf
shr
test
push
xchg
fnstcw
movsl
xor
inc
xchg
jg
or
jo
ret
mov
add
sub
bound
dec
lds
lds
frstor
in
sti
clc
mov
pop
fidivl
je
mov
js
jg
clc
adc
add
andl
jge
les
les
push
sahf
cmp
outsb
call
push
cmp
pop
inc
dec
sbbl
sub
leave
fcmovu
push
and
lock
cli
out
movsb
lret
rcll
jle
repnz
inc
mov
mov
pop
jbe
cld
and
dec
push
xor
in
push
cs
ja
in
scas
pusha
call
or
mov
xchg
push
lahf
push
rol
push
jb
dec
xlat
dec
setg
jg
ljmp
daa
pop
add
xchg
or
sub
sub
popa
rorl
fcompl
cwtl
push
adc
mov
jns
cmp
jge
ret
ja
and
pop
rol
jp
bound
inc
add
inc
into
out
cmp
in
mov
insb
repnz
mov
icebp
or
out
xor
shr
xchg
jge
push
cld
push
shrb
call
pop
xchg
mov
sub
push
jp
mov
iret
inc
rorb
mov
cmp
xchg
dec
push
inc
xor
push
test
pop
ljmp
stc
jnp
icebp
inc
and
or
or
out
push
mov
repnz
sahf
push
mov
bound
mov
push
mov
xor
adcb
test
insb
inc
and
outsl
xor
sbb
fdivs
inc
mov
addb
ja
xor
pop
scas
and
cmp
jg
ret
outsl
pop
mov
mov
insl
mov
out
xor
pop
int
and
icebp
and
pop
mov
outsl
fsubr
dec
cs
mov
lret
aam
cmp
push
jbe,pt
mov
cmp
pusha
adc
add
mov
push
add
adc
xlat
stc
loopne
cmp
mov
retw
mov
jnp
ds
cwtl
inc
movsb
or
cld
or
adc
inc
mov
dec
lea
cmp
lods
cmp
sbb
pop
notb
mov
cmp
or
addr16
and
pop
test
jno
or
hlt
jmp
orb
cwtl
jbe
mov
scas
mov
jbe
sahf
jb
mov
xor
jns
add
cmc
pop
xchg
shll
shr
fadd
adc
ret
inc
xchg
sub
cmp
fs
mov
psubsw
pop
and
sub
jl
call
pusha
dec
sbb
enter
loop
fwait
cld
cmp
xchg
popa
inc
xchg
pop
stos
sbb
pop
push
insb
xor
fs
adc
dec
and
dec
lods
sub
mov
cmp
mov
cmp
xchg
cld
repz
outsl
cmp
adc
push
fs
push
pop
mov
push
push
shl
je
loope
stos
mov
lcall
jg
mov
repnz
jo
cld
loope
fwait
push
push
add
in
jnp
cmp
sub
sub
lods
fidivrl
push
test
out
push
es
fwait
xchg
push
insl
cli
test
dec
dec
fsub
popa
jle
mov
jp
shl
jp
push
mov
jae
out
cmpsl
popf
es
pop
loopne
mov
lret
mov
out
arpl
pusha
and
xor
xor
roll
aad
pop
adcl
ret
mov
xor
cwtl
cmp
or
xor
xor
fildl
inc
mov
aam
add
lcall
das
mov
pop
nop
dec
pop
push
push
icebp
mov
pushf
dec
and
add
cmpsl
cwtl
xchg
inc
xor
stc
inc
add
sub
pushf
pop
add
jge
data16
fidivrl
push
mov
sahf
pop
dec
dec
add
ret
in
dec
and
imul
mov
outsl
xchg
adc
ret
jg
add
je
mov
dec
jno
mov
mov
cmp
es
mov
out
pop
inc
jg
fwait
clc
xor
or
pop
aam
dec
sti
jg
out
cltd
adc
jb
push
lret
data16
cli
or
push
pop
addr16
ret
data16
mov
leave
pop
sub
aad
mov
test
cmpsl
xlat
pusha
jno
in
stc
jo
dec
stos
sub
xor
into
xlat
fistps
ljmp
mov
int3
mov
sbb
adc
shlb
stc
rolb
xchg
repnz
lds
icebp
in
in
arpl
sbb
xor
dec
lahf
mov
pop
pusha
add
push
es
jb
mov
enter
jge
adc
shll
pop
jecxz
notl
jo
adc
rol
dec
in
inc
pop
pop
cli
int3
insb
aaa
adc
in
sahf
xchg
leave
and
out
sub
xchg
pusha
inc
imul
push
mov
mov
inc
icebp
sbb
xchg
out
or
addb
push
dec
pushf
jno
push
jecxz
js
dec
adcl
mov
adc
push
cmp
sti
jae
lea
test
je
arpl
cmp
aaa
stos
adc
jae
fwait
and
add
test
lret
enter
and
lahf
in
dec
or
mov
stos
aam
and
outsl
push
loop
stc
insb
mov
lea
cmp
sub
inc
lods
popf
sbb
xchg
arpl
push
push
push
pop
add
fldt
sub
cs
cmp
mov
mov
adc
xchg
mov
lods
inc
js
in
jno
fists
insb
loopne
jmp
or
out
xchg
jle
iret
sbb
daa
outsl
or
clc
cmp
jl
hlt
lods
xchg
sub
pop
popa
pop
pop
stos
mov
subb
xor
jne
sbb
outsl
js
mov
fsubl
or
or
dec
mov
aas
xchg
lret
test
push
cmc
imulb
out
repz
inc
dec
jae
in
add
pop
cmp
cmp
push
dec
fucomp
inc
outsl
data16
stos
in
lds
test
hlt
dec
sahf
or
xor
shlb
adcl
jae
pop
mov
cmpsl
sub
jo
add
test
lret
add
stos
xor
loope
xchg
inc
in
mov
inc
popa
jb
movsb
std
pop
ljmp
xchg
cld
jg
pop
sbb
je
push
mov
mov
xchg
jge
xchg
inc
jae
movsb
iret
loope
adc
xchg
imul
sahf
sbb
popf
pop
and
ja
movups
jbe
or
mov
jmp
xor
inc
outsb
push
or
test
lock
movsb
sub
cmp
adc
dec
icebp
loopne
gs
mov
xchg
push
sub
jmp
and
aas
popa
add
push
lods
or
mov
mov
aaa
ret
and
jae
pop
mov
or
dec
arpl
cmp
mov
pushf
jne
rol
mov
mov
mov
or
push
mov
test
je
mov
das
inc
mov
adc
adc
stc
insb
popf
cmpsb
and
push
hlt
sbb
push
jae
sbb
andl
fimuls
dec
iret
stos
fiaddl
js
xchg
loopne
xchg
pop
lods
inc
ret
out
or
outsl
push
add
stos
fcoml
jl
push
jge
mov
rcl
out
xorl
sbb
lds
lock
push
ret
test
push
cwtl
pop
loop
cltd
mov
repz
xchg
test
mov
lock
mov
sbb
jp
and
loop
cltd
mov
or
and
mov
mov
pop
sbb
and
ja
hlt
insl
sar
xlat
ficoml
test
cli
and
xchg
adc
fidivrl
sbb
inc
ljmp
sbb
inc
popf
and
and
xchg
cld
adc
das
xchg
stos
inc
add
in
pop
aas
xchg
adc
sbb
lret
lock
xor
test
sub
in
inc
das
rcrb
test
mov
cmpsb
mov
fwait
loopne
jae
xor
shrb
sbb
pop
sbb
out
movsb
sbbb
xchg
hlt
adc
ja
mov
xchg
xchg
jns
lock
mov
dec
ljmp
mov
in
cli
jns
mov
or
cmpsb
xchg
xchg
stc
stos
and
es
clc
sub
jno
into
sub
out
mov
setns
in
pop
jmp
xchg
xor
xor
lods
scas
shll
cld
jg
ret
movsl
outsl
aam
sbb
pop
pop
dec
add
sbbb
aad
dec
lea
loopne
xor
add
rorb
das
cmp
lahf
incl
mov
stc
jecxz
repnz
mov
mov
mov
aas
jg
jg
adcl
stc
lods
inc
test
push
repnz
dec
sbb
mov
insl
pop
xchg
inc
prefetch
sarb
xor
outsb
fiadds
insb
jmp
addr16
cmp
adc
loopne
or
out
mov
jecxz
sub
je
mov
mov
jbe
rcrb
lret
cli
test
mov
mov
mov
cmp
rcr
daa
or
cmp
ljmp
pop
or
jl
sbb
loope
xchg
rclb
cmp
out
mov
xlat
loopne
lds
or
dec
repz
lcall
fs
push
pusha
adc
es
repnz
and
jb
mov
cli
roll
and
mov
dec
and
sbb
sub
sahf
push
dec
xchg
shr
jecxz
cmp
add
and
cwtl
mov
sub
ss
lds
icebp
xor
push
pop
push
xor
bound
mov
or
imul
in
and
ljmp
mov
fiadds
int
add
jae
aas
fs
lods
sti
test
lods
dec
and
mov
insb
add
jns
inc
add
cmp
adc
adcl
pminsw
cwtl
aas
enter
sbb
fs
psraw
je
push
test
sar
imul
popl
inc
and
add
aas
sbb
jp
popf
sub
and
fwait
mull
jo
out
in
xchg
roll
data16
loop
cltd
repz
jbe,pt
or
mov
adc
cli
pop
cmp
movsl
sbb
xchg
push
pushl
fildl
incl
jae
pop
stc
push
test
lcall
add
sarb
mov
pop
fwait
jns
sub
popa
mov
scas
fldenv
and
sti
adc
scas
ret
pop
icebp
mov
add
cmp
cs
sub
push
loop
push
mov
add
sbb
cmpsl
lea
sbb
cmp
notb
adc
mov
pop
enter
sub
sub
cmp
data16
cmp
fildll
push
outsl
xchg
daa
into
jg
jne
js
adc
sbb
inc
sbb
sbb
leave
mull
fsubs
jp
mov
repnz
arpl
xor
or
lret
mov
mov
mov
jne
push
sbb
push
inc
jp
daa
push
aaa
lds
icebp
aam
push
xor
and
dec
jb
shlb
or
ficomps
adc
lds
cmp
adc
adc
add
adc
cltd
dec
cltd
lcall
ljmp
sbb
add
or
jo
push
mov
adc
scas
push
cmp
mov
mov
dec
ja
repnz
aam
iret
fcmovnu
lds
jmp
mov
lret
fidivrs
das
dec
inc
mov
sarl
cli
cmp
dec
push
pushf
sub
inc
data16
push
out
shl
mov
cld
loope
adc
and
pop
push
popf
jp
push
sbb
pop
rcll
out
leave
jecxz
mov
dec
jno
stc
addr16
xchg
cwtl
dec
jle
jp
pusha
fwait
stos
out
xor
je
push
jmp
mov
je
popa
shlb
lea
ljmp
cmpsl
cmpsl
and
faddl
sbb
ja
xor
xor
mov
enter
jle
xchg
mov
push
xor
aad
jno
sbb
adc
pandn
fiadds
or
or
sub
outsb
shrb
enter
xchg
pop
inc
xchg
add
jl
dec
jno
stc
inc
cmp
dec
and
aaa
xchg
mov
pop
js
repz
lock
loopne
xor
mov
sti
imul
mov
or
mov
sbb
mov
int3
inc
rcrb
mov
pop
and
xor
dec
inc
push
mov
and
and
popf
dec
xor
loopne
movsb
pushf
sbb
lods
jnp
jne
icebp
cmc
cmp
mov
adc
decl
inc
add
pop
hlt
leave
aaa
mov
sub
or
nop
arpl
cmp
rcrl
nop
sar
cld
in
push
pop
hlt
call
mov
lcall
push
ret
fdivrl
cmc
enter
sbb
icebp
movsl
roll
adc
jno
repz
cli
push
inc
out
lret
pop
push
ret
pushf
mov
dec
ret
cmc
mov
mov
dec
aad
cmc
pusha
dec
cmpb
xchg
in
xchg
repz
scas
jmp
sub
jns
or
loopne
out
rolb
xchg
jnp
movsl
or
mov
mov
fwait
cld
and
xlat
or
fcom
out
shrl
fisttpl
fiaddl
inc
fidivrl
mov
sbb
push
dec
stos
in
xor
cld
lods
scas
pop
jne
mov
insl
scas
sbb
lds
shl
pop
cmp
dec
cli
dec
mov
cmp
mulb
pop
mov
imul
and
sub
std
fidivrs
lcall
out
xor
mov
adc
add
sub
ret
pop
insl
dec
push
clc
sub
mov
mov
lcall
inc
cmp
dec
mov
xor
push
ret
in
jns
mov
jle
cwtl
push
inc
dec
sub
dec
sub
mov
icebp
int3
cmp
dec
xchg
dec
push
loop
cmp
pop
aad
and
adc
bound
aam
call
fadds
jno
push
ja
pop
inc
xor
sbb
push
popa
hlt
call
mov
fcmovnu
pop
leave
mov
fwait
push
daa
aas
or
inc
fadd
lret
xchg
jb
das
movsl
jg
std
mov
in
xchg
neg
jnp
roll
out
sbb
in
dec
or
mov
xchg
or
dec
jno
gs
scas
and
mov
push
aam
ret
cmp
jns
jp
fsubr
sbb
sahf
call
pop
mov
push
dec
enter
scas
cmpsl
cwtl
add
insb
in
insb
test
push
cmp
insb
fstl
int
lcall
mov
ficomps
enter
div
pop
pushl
adc
ret
outsl
jne
mov
cs
filds
add
scas
mov
push
mov
outsb
lahf
add
inc
out
dec
fwait
mov
cmpsl
pop
sbb
mov
push
int3
je
add
repz
jp
push
loopne
and
dec
fwait
scas
sbbl
cmp
dec
push
xlat
push
mov
divl
movsb
test
pop
cld
sub
out
lods
mov
sub
dec
push
daa
bound
sbb
jne
test
jns
sub
push
cwtl
cmp
negb
push
sti
push
pop
jecxz
pop
test
sub
mov
lods
pop
adc
in
and
cli
inc
jecxz
imul
lods
mov
dec
jbe
in
fs
insl
fs
push
add
mov
scas
sub
xchg
ds
sbb
push
cs
lods
jle
scas
cmp
adc
mov
jo
fdiv
xor
mov
xor
out
or
or
gs
push
dec
and
mov
mov
mov
xchg
push
sub
inc
mov
in
inc
imul
sub
push
fadd
push
enter
aad
jle
cwtl
sti
cmpb
adcb
inc
sbb
dec
repnz
sbb
mov
int
dec
push
and
or
mov
imul
xchg
gs
dec
pusha
decl
xchg
push
sahf
push
sub
int3
pop
xchg
xor
int
mov
lods
and
xchg
jnp
scas
add
stos
fldcw
sbb
frstor
push
and
or
sti
mov
mov
jmp
test
pop
loope
push
insl
add
cli
jno
xor
add
lcall
adc
ret
inc
pop
lcall
shr
jns
arpl
cmp
dec
adc
iret
cmp
test
push
sub
cmpsb
cmp
leave
test
out
mov
out
or
data16
mov
xor
loop
or
jnp
sub
cmp
rcrl
sbb
jnp
jne
ljmp
push
sbb
jno
adc
xor
mov
add
xchg
adc
add
or
mov
mov
pushf
jl
jge
cmp
inc
call
movsb
cltd
lea
outsb
jecxz
xchg
aam
mov
int3
mov
outsb
fbstp
fcompl
xchg
jnp
cli
mov
lods
scas
pop
ror
sub
lock
imul
inc
std
dec
inc
fdivs
inc
sub
adc
mov
xor
addb
lds
dec
cmpsb
mov
cmpsb
xchg
jbe
inc
push
push
inc
es
push
push
push
out
mul
cmpsb
mov
cmpsb
xchg
jbe
inc
push
push
inc
es
push
push
push
out
mul
cmpsb
mov
cmpsb
xchg
jbe
inc
push
push
inc
es
push
push
daa
push
shl
ret
cmpsb
mov
cmpsb
push
xchg
push
inc
cltd
jbe
int3
in
push
push
xor
mov
stc
push
mov
sub
push
push
mov
push
pushl
movl
movl
movb
push
push
call
mov
andl
push
movl
pushl
movb
call
andl
push
push
mov
movl
mov
movb
call
push
push
mov
call
mov
mov
mov
lea
push
movl
movb
movl
movb
movb
movb
movl
call
pop
pop
leave
ret
mov
xor
add
adc
fisubrs
and
loope
lds
xchg
cmc
or
mov
movsb
and
xor
add
adc
adc
xor
push
movsb
fdivs
in
hlt
xchg
mov
movsb
and
xor
add
adc
fs
push
movsb
aam
out
icebp
xchg
xchg
popf
lock
mov
xor
adc
fcoml
xlat
addr16
and
lock
insb
pusha
setae
fnsave
mov
xor
fs
into
lret
and
shrl
dec
cmp
movsb
sbb
sbb
or
int3
inc
sub
mov
inc
jne
pusha
lahf
das
iret
pop
and
aam
rcrb
xor
inc
mov
loope
or
and
clc
aaa
fs
adc
inc
push
mov
test
jl
add
cmpsl
add
dec
fidivs
mov
adc
push
dec
int3
sub
cmp
or
pop
mov
pushf
xchg
inc
out
and
stos
xor
mov
mov
pop
mov
sbb
nop
mov
aad
jnp
xor
add
adc
fs
add
xor
cmp
test
xchg
std
in
hlt
pushf
les
jo
push
push
adc
pop
xor
mov
lock
cmp
pop
or
adc
dec
inc
inc
sub
mulb
icebp
out
in
test
sbb
xor
and
xor
and
aam
les
hlt
test
mov
movsb
and
xor
add
adc
fs
add
xor
and
aam
les
hlt
test
mov
movsb
and
xor
repz
popw
lahf
add
std
roll
adc
push
inc
arpl
outsb
adc
xchg
addr16
xchg
cmpsl
jno
mov
pop
dec
stos
mov
loope
mov
pusha
push
push
pop
dec
jle
adc
or
ret
pop
ljmp
dec
pop
add
xor
fdivrs
js
add
lahf
jmp
insl
fsubl
xchg
cmp
mov
repnz
pop
iret
jg
test
aad
xchg
les
stos
sub
xor
int
add
pop
ljmp
ja
cmpsl
pusha
cwtl
lcall
hlt
xchg
cmpb
mov
scas
hlt
inc
sub
lods
sbb
mov
pop
outsl
jmp
cmp
repz
ds
jle
iret
xchg
sahf
xor
and
cs
out
lcall
sub
xchg
mov
and
jae
lods
adc
sbb
xchg
test
fistps
rorb
clc
dec
mov
lock
mov
mov
cmp
lret
push
dec
mov
xchg
loope
pop
in
arpl
sub
xor
lea
jmp
cmpsb
sub
ffree
sub
jge
cld
ret
sti
fwait
popf
jp
dec
inc
aas
xchg
scas
pop
and
into
jecxz
mov
bound
add
adc
inc
mov
mov
jmp
das
add
in
push
repnz
idiv
xchg
shll
inc
push
xor
pop
sub
sbb
and
mov
int3
and
sbb
or
push
pop
xchg
sub
gs
fldt
jae
cmpsl
dec
xchg
dec
lret
sbb
xchg
loop
outsb
and
dec
lcall
sub
in
mov
sti
adc
fsincos
lds
shl
data16
out
or
and
inc
mov
pop
mov
mov
xchg
lret
jmp
mov
inc
out
lods
popf
xchg
arpl
in
mov
xor
add
dec
or
pop
cmpsl
test
cmp
loopne
scas
jne
mov
imul
enter
sahf
into
mov
cmp
cmc
test
jae
dec
gs
in
ja
sbb
push
pop
add
mov
push
and
inc
leave
faddl
jg
ffreep
fucompp
mov
rorb
and
pop
rclb
into
movsb
ficoms
inc
dec
xor
roll
sub
in
mov
stc
mov
mov
ds
pop
pop
mov
pushf
inc
js
xchg
scas
cmp
add
hlt
insl
out
jo
insl
mov
add
aaa
lcall
add
into
mov
sarb
movsb
xchg
test
into
ja
xor
mov
fadd
sbb
cltd
adc
push
nop
cld
into
push
shrb
xchg
idivb
mov
xor
ljmp
out
add
xor
mov
pushf
ss
dec
push
xor
push
out
cmp
lods
jnp
jp
imul
arpl
fmuls
mov
pop
iret
push
xor
push
mov
push
adc
and
scas
jecxz
lock
ljmp
ss
cs
stos
fabs
pop
repnz
addr16
cmpsl
addr16
cmpb
cmp
das
addr16
fisttps
sbb
xchg
rorb
adc
xor
and
les
push
push
mov
sub
cmpsb
in
fwait
test
in
mov
scas
mov
inc
or
mov
mov
jns
aam
and
jge
out
adc
ljmp
fwait
xor
pushf
dec
ficoml
int
or
pmulhw
test
sbb
ficoms
cmp
fidivl
jns
int
cmp
sbb
mov
sbbb
js
popa
adc
sub
cmp
in
jecxz
pop
mov
sbb
mov
out
ret
pop
mov
mov
xor
test
adc
xchg
mulb
jno
fs
sub
mov
out
mov
xor
nop
daa
sub
add
imul
mov
shlb
mov
xchg
lret
mov
dec
dec
repz
dec
fdivs
jg
mov
maskmovq
imull
sbb
push
shlb
stos
ror
ror
push
xchg
jp
push
sub
data16
jge
push
jg
pop
and
cs
mov
pop
xchg
push
sbb
push
mov
lea
fistl
insl
sbb
push
jmp
mov
shl
or
fistpll
push
sarb
test
cmc
pop
loopne
inc
push
add
pop
je
pop
rcr
or
inc
mov
aad
lret
in
xchg
sbb
or
and
inc
js
adc
test
shll
shll
movsb
and
inc
jae
ret
out
fists
int3
dec
pushf
pop
inc
xor
bound
adc
adc
add
and
in
testl
adc
shll
iret
scas
aad
jnp
lods
outsl
and
mov
out
xlat
je
mov
mov
popa
jp
js
inc
dec
lea
les
inc
cs
mov
fisubrl
cmp
dec
sub
mov
out
out
pusha
jg
fdivl
push
notb
push
inc
fs
insb
mov
popa
and
cwtl
xor
xchg
and
sub
jns
mov
push
and
fwait
lods
xor
clc
popl
mov
lds
inc
fsubl
bound
cwtl
leave
daa
icebp
ds
out
mov
cmpsb
sti
addl
pop
rorl
cmp
aaa
jnp
xorb
sub
push
lods
clc
fcoms
jg
mov
sti
cli
mov
mov
push
inc
aad
dec
jl
aam
rolb
and
lock
jnp
sub
ss
fsubr
pusha
inc
pop
inc
stos
addr16
sub
in
adc
dec
test
mov
pusha
imul
popa
not
pushf
jge
iret
push
iret
test
xlat
and
xchg
je
cmpl
dec
xlat
adc
push
loope
test
mov
test
aas
cmpsb
cs
dec
or
inc
scas
dec
mov
fwait
dec
es
in
dec
pop
fisubs
test
fwait
adc
andb
adc
fcmovnu
movsb
and
lods
addl
call
xlat
scas
mov
adc
out
jl
out
imulb
repz
int3
pushf
bound
sub
or
and
xor
std
cwtl
xor
sub
push
jp
rol
jmp
adc
pop
cmp
sub
fidivs
sbb
jp
jae
out
and
bound
sub
scas
cmpsl
out
or
cltd
push
nop
repz
sbb
movsl
xchg
mov
mov
jg,pn
xor
mov
xchg
ljmp
inc
mov
repnz
mov
adc
pop
jns
sub
or
push
int
daa
pop
lret
xor
dec
cwtl
aas
xor
xchg
add
dec
stos
adc
cmp
push
movsl
outsb
mov
into
enter
inc
sbbb
jl
je
in
or
adc
rol
mov
cwtl
dec
clc
aad
cmp
sub
adc
push
sub
sahf
out
adc
out
cmp
scas
pop
rcll
lock
jne
std
jae
test
jmp
and
push
adc
mov
dec
outsb
lret
addr16
fistps
xor
fidivrs
addr16
scas
loop
or
pushf
dec
jno,pt
aad
cltd
xchg
jmp
lahf
sub
test
mov
loop
mov
lahf
pop
sahf
imull
mov
ror
push
cmpsb
push
xchg
jecxz
lods
mov
fldt
stos
jbe
ret
ja
clc
inc
sub
gs
shlb
punpckhwd
outsl
or
cwtd
xchg
inc
pushf
adc
pop
jmp
dec
sbb
ret
insb
fsubrl
inc
negl
stos
scas
mov
out
push
mov
sbb
xor
mov
mov
jno
mov
sub
cltd
inc
iret
addb
mov
push
clc
es
negb
pop
clc
cmp
pop
dec
xchg
dec
sbb
mov
stos
inc
stos
je
flds
xor
push
daa
int3
adc
push
enter
xchg
mov
adc
push
mov
lock
sbb
dec
je
loopne
popa
dec
mov
mov
cmp
loope
push
sbb
movsl
clc
mov
mov
in
data16
sbb
inc
adc
dec
lods
and
sbb
testb
dec
xor
jp
dec
lahf
xor
or
add
pushf
sbb
xchg
test
sub
mov
mov
or
inc
or
dec
movsb
call
lret
push
mov
add
aad
add
insb
aaa
mov
loopne,pn
push
xor
clc
out
fucomp
test
mov
loopne
daa
and
sahf
cmp
mov
sbb
in
mov
lret
mov
jecxz
cmpsb
xchg
mov
xor
mov
mov
fwait
and
dec
int
ljmp
mov
fs
or
lods
into
add
lahf
nop
inc
sub
je
jno
pop
clc
or
adc
out
mov
lds
fldl
xlat
stos
shlb
js
idivb
int3
and
xchg
scas
lahf
pop
mov
or
dec
in
test
lahf
mov
pop
fldcw
je
jno
lods
mov
mov
mov
cltd
popf
mov
lret
rclb
cmp
out
push
push
stos
xor
addr16
jp
stos
inc
mov
aad
xor
fmulp
pop
xchg
lret
insb
xchg
cmpsb
pop
cwtl
sbb
and
mov
sbb
fdiv
out
push
cmpsl
add
aad
enter
lret
mov
xor
adc
fs
dec
and
je
inc
inc
add
and
mov
push
out
fstl
fs
push
mov
nop
stc
mov
adc
add
inc
adc
fistpll
negl
jns
ret
xchg
int
das
stos
xchg
das
dec
inc
repnz
jmp
mov
jbe
icebp
imull
mov
jge
stc
shrl
stos
stos
pop
int3
push
inc
scas
pop
and
inc
pop
call
pop
imulb
das
inc
push
gs
mov
mov
data16
mov
cmpl
jnp
dec
push
cmp
jp
cltd
sbbl
sub
daa
cmp
ljmp
int
push
pop
adc
stc
add
sbb
xlat
rsm
xor
mov
inc
fistps
push
jno
cmp
sbb
sub
dec
xchg
outsl
jecxz
dec
rclb
lds
sbb
inc
outsb
inc
jl
negl
jmp
fs
mov
push
clc
fcmove
nop
push
frstor
inc
clc
out
mov
dec
sahf
jno
filds
ss
repnz
mov
pop
pop
insl
test
popf
pop
cmpsb
lods
cmpsl
sub
das
lret
test
dec
dec
pop
dec
dec
dec
mov
pop
loopne
add
sbb
xor
mov
outsb
sbb
xchg
testb
sbb
xchg
out
sbb
push
loop
test
fmull
jne
adc
add
mov
xor
mov
hlt
lea
dec
call
dec
ficomps
shl
xor
inc
dec
xchg
repz
dec
push
jle
movsl
aaa
pop
sub
fwait
out
xchg
test
mov
andb
sbb
and
mov
sbb
sub
mov
frstor
inc
clc
adc
xchg
sarb
xchg
mov
cmp
adc
jbe
add
pop
int
aas
out
cli
mov
fwait
dec
bound
mov
push
fistl
xchg
imul
and
jle
lahf
aas
lcall
orb
rol
mov
mov
insl
popa
mov
sbb
xchg
mov
test
add
pop
or
jp
insl
cli
dec
dec
lcall
shrb
rclb
and
scas
pop
ficoml
repnz
xor
push
decb
lods
pop
lahf
repnz
mov
sbb
xor
lea
in
fstpl
out
addb
sbb
mulps
ret
mov
xlat
loop
arpl
dec
imul
insb
fs
rcll
dec
jle
push
and
and
sahf
mov
imul
pop
movsb
sub
in
mov
stos
movsl
mov
test
enter
int
inc
cmp
push
test
and
std
cmp
popf
mov
sub
ret
push
xchg
std
inc
cmp
sti
xchg
mov
pop
push
xchg
sub
inc
sbb
jne
adc
loopne
aas
xchg
xchg
aaa
xlat
cmpsb
dec
test
ljmp
out
pop
push
das
sbb
pusha
cmp
inc
xchg
popf
ljmp
or
mov
leave
imulb
xchg
gs
xor
push
push
mov
dec
mov
sbb
aam
lret
inc
cwtl
ret
fcomps
mov
mov
push
into
add
xchg
int
lret
pop
fsubrl
scas
psrad
mov
ficomps
aaa
ret
or
js
pop
xchg
pop
jmp
mov
decb
subl
push
int
pop
cltd
das
in
pop
adc
lock
pop
push
movsb
jae
inc
dec
push
push
lods
or
lea
xbegin
test
sbb
inc
mov
test
dec
rorb
push
jae
push
aaa
jno
in
aas
or
pop
sub
jp
push
loopne
test
sbb
icebp
mov
jnp
cmp
push
scas
jle
cmp
or
aaa
fisubrl
push
push
mov
lds
pop
mov
jmp
lret
in
mov
test
ds
sbb
inc
jae
inc
not
mov
add
shll
inc
mov
fadd
aaa
js
call
out
arpl
jp
or
repnz
int3
adc
cli
xor
test
inc
popf
add
ss
in
es
mov
sahf
test
dec
sbb
mov
xor
movl
int3
into
inc
negl
out
jge
mov
mov
outsb
shl
rol
int
xor
mov
xchg
mov
sub
pop
into
jbe
sub
xchg
or
cli
dec
enter
pop
xchg
push
gs
push
add
push
pop
fsubr
xchg
dec
pusha
pop
out
mov
lret
ret
jo
scas
scas
pop
jmp
lods
dec
dec
pop
push
cwtl
aam
jle
dec
sbb
or
in
das
jl
mov
jne
mov
aam
lret
xchg
loop
push
sti
inc
mov
push
cmp
sub
mov
adc
adc
adc
imul
xchg
lock
pop
mov
inc
scas
xor
mov
aad
adc
sub
adc
pop
mov
jl
add
aas
and
or
dec
inc
lock
ffreep
and
sub
movsl
mov
vpmacssdd
mov
arpl
ret
xor
jmp
mov
repz
jg
gs
daa
jle
jnp
in
inc
aas
out
sub
sbb
addl
push
aam
add
cwtl
call
mov
in
inc
rolb
inc
mov
add
mov
mov
xchg
sbb
inc
lea
es
adc
addl
or
pop
xchg
pop
jle
insl
and
xor
sub
sub
xchg
sbb
mov
insb
cmp
push
pop
mov
call
sahf
ret
ret
push
xchg
xchg
jae
mov
dec
and
hlt
mov
mov
sti
mov
jbe
and
mov
mov
arpl
xchg
stos
orl
insl
add
cltd
ds
in
add
cmp
lcall
mov
test
sbb
out
add
into
rclb
stos
in
add
add
insb
test
ret
outsl
xchg
push
cmpsb
pop
sbb
push
mov
lcall
sub
dec
hlt
cmp
mov
adc
inc
mov
sbb
cmp
mov
and
sub
dec
add
cmp
mov
les
movsl
lock
mov
add
popa
jo
cmp
push
aaa
or
xor
push
lahf
jae
and
arpl
or
sub
xor
fstl
cli
cmp
test
jno
pop
mov
stos
dec
loopne
ror
repz
ret
jmp
pop
adc
repz
add
push
test
adc
cmpsb
mov
sbb
int3
lahf
enter
fdivrp
fldt
xchg
push
int
dec
mov
das
test
cwtl
popf
lret
push
rcll
lock
add
dec
daa
mov
hlt
jne
cmpsl
mov
popw
lods
aad
mov
icebp
inc
mov
sub
leave
in
mov
jmp
mov
cmp
sbb
xchg
jecxz
cli
cmp
out
fldcw
jns
and
daa
sub
loope
sbb
icebp
jo
out
push
jmp
cmp
mov
and
or
fwait
loopne
mov
aam
pop
shrl
sbb
in
movsl
push
pusha
mov
mov
inc
jmp
aaa
mov
adc
inc
mov
into
xchg
cmovg
outsb
push
adc
ljmp
push
cmpsl
pop
aas
jnp
pop
or
pop
sub
xlat
xlat
cmp
push
inc
fcmovb
mov
xor
shl
lock
fadd
push
pusha
stos
test
mov
mov
pop
stos
xor
pushf
mov
xchg
dec
xchg
lea
movaps
jbe
or
mov
add
xor
leave
fs
test
movsl
addb
mov
movsb
push
dec
ror
add
push
out
lds
xlat
sbb
into
aas
aam
xchg
or
push
or
xor
ret
mov
outsb
xlat
lret
movsl
subl
fsubrs
in
push
xor
std
in
cmp
movsb
and
cmpsb
ds
call
push
subl
fcmovnbe
scas
daa
or
lock
jg
inc
pop
sbb
xor
leave
cmp
and
jno
cmp
xor
dec
cmp
jl
loopne
pop
das
insb
outsl
das
xor
mov
mov
mov
fdivrs
push
scas
xchg
ljmp
jnp
inc
fisubrl
test
jb
cmp
mov
dec
cmp
dec
sarl
in
mov
jecxz
jno
imul
fld
push
lahf
xchg
aam
int
arpl
push
loope
jns
sar
pop
jae
push
arpl
leave
jge
scas
lret
loope
aaa
push
nop
enter
mov
es
fs
call
mov
mov
dec
push
mov
cmp
inc
cmp
test
dec
xchg
push
ds
fldt
jb
jge
mov
or
dec
mov
mov
je
aas
popf
sub
sbb
popf
inc
call
xchg
add
sahf
push
cmp
jb
lods
sub
lret
cmp
push
jg
lods
rcrb
sub
in
addb
outsb
imul
mov
push
imul
or
or
xchg
xchg
stos
jecxz
insb
sub
leave
mov
cld
sbb
popf
cmpsb
aam
stos
mov
adcl
dec
pop
mov
jns
fldl
int3
cli
adc
idivb
js
int
ja
push
in
mov
jmp
and
xor
push
js
lds
push
repz
std
stc
outsb
pop
mov
and
mov
insl
jnp
insl
cmpsb
xchg
hlt
fwait
mov
sbbb
sbb
in
sti
cmp
outsb
mov
xor
xchg
cmpsl
hlt
xchg
subl
mov
push
jns
mov
or
push
xchg
push
mov
das
or
mov
fistpll
adc
popa
add
mov
mov
mov
cmc
pop
rcll
xor
xor
sbb
adc
or
pop
std
pop
pop
lods
mov
insl
add
push
lds
xchg
adc
je
negb
or
cli
mov
adc
aam
lock
repz
mov
add
push
shrb
pop
mov
mov
mov
fld
sub
mov
cmp
xchg
test
aad
call
add
cltd
dec
push
cmp
pushf
mov
pop
shr
or
push
popf
and
stos
jo
dec
xchg
pop
faddl
ljmp
fldenv
push
dec
mov
add
adc
repnz
xchg
sub
dec
pop
outsl
popa
push
icebp
or
xlat
sub
jbe
insl
mov
mov
cltd
and
and
push
subb
repz
fsub
sti
adc
mov
pop
cmp
aaa
jb
rcrl
stos
pop
nop
cmp
in
mov
lods
insl
inc
stc
push
jns
or
adc
adc
mov
xor
mov
inc
fwait
push
movb
cld
ret
outsl
mov
mov
jo
sbb
not
cmpsb
mov
sub
add
lret
or
adc
fs
add
xor
and
aam
les
hlt
test
mov
movsb
and
xor
add
adc
fs
add
xor
and
aam
les
hlt
test
mov
movsb
and
xor
add
adc
fs
add
xor
and
aam
les
hlt
test
mov
mov
add
adc
add
xor
in
aam
outsb
cs
xchg
xchg
xchg
sbb
sti
cmp
sub
data16
xor
add
adc
xor
pop
sbb
out
divl
in
mov
les
xor
add
adc
fs
inc
push
push
out
divb
in
hlt
xchg
xchg
aam
and
xor
add
adc
fs
inc
push
push
out
aad
stos
hlt
xchg
cmpsb
mov
nop
repz
adc
pusha
cmp
out
mov
out
mov
mov
pop
ret
loop
repz
dec
xchg
sbb
sbb
ss
dec
jmp
sbb
jae
cmp
jg
les
sub
xor
inc
repz
xor
lea
aad
mov
push
mul
lret
jecxz
xchg
aad
sub
push
add
and
push
add
xchg
jae
cmp
imul
movsb
add
mov
test
mov
loope
mov
js
cmpsl
cmc
sub
mov
lds
int3
test
les
push
shll
cmp
negb
cmp
ret
rcll
aam
and
xor
add
adc
fs
inc
push
push
out
divb
in
hlt
xchg
xchg
xchg
daa
dec
add
das
inc
aas
push
or
and
out
xchg
ffree
ljmp
in
shlb
and
inc
add
jle
inc
push
and
fadd
rcl
clc
cmpsl
mov
fwait
ljmp
inc
sub
pusha
push
ss
inc
push
push
out
divb
in
hlt
xchg
xchg
aam
and
xor
add
adc
fs
inc
push
push
out
divb
in
hlt
xchg
xchg
aam
and
and
idivb
fsubs
sbb
sub
fists
js
pop
pop
mov
push
sub
add
xlat
push
mov
in
rclb
imul
cli
mov
mov
push
es
push
sbbl
push
jle
insb
dec
insl
mov
lds
test
addl
dec
mov
fidivs
aas
add
ja
enter
mov
mov
and
cmpsl
les
or
push
cwtl
add
pop
add
in
pop
enter
imull
mov
or
mov
addr16
in
arpl
cmp
xchg
test
rcrl
dec
push
xor
pop
mov
stc
in
xchg
push
xchg
mov
faddl
insl
mov
aas
cs
outsl
cmp
mov
icebp
cmp
rcrb
push
mov
adcb
sbb
fcom
out
sahf
pop
push
cs
xor
sub
fs
sub
pop
loop
pusha
or
nop
dec
je
add
cld
mov
repnz
mov
jp
test
jle
sahf
jp
popf
lcall
test
pcmpgtw
out
jne
stc
dec
xlat
divb
jae
and
scas
outsl
or
arpl
test
dec
clc
pop
inc
or
test
xchg
pop
fsubp
lods
xchg
add
es
ret
or
into
aaa
int3
fnstsw
call
stc
leave
pushf
fadds
cwtl
inc
lods
xor
outsl
loopne
imull
fdivp
dec
pop
and
and
repz
adcb
mov
icebp
outsl
fistpll
and
lret
mov
cmp
lods
pop
push
test
pop
icebp
cs
mov
cmp
cmp
cmp
in
xor
mov
aad
insl
mov
and
je
xchg
inc
out
ja
outsl
sti
lock
nop
icebp
aad
push
call
cmp
xchg
pop
inc
fnstcw
cli
xor
fisttpl
sub
ficomps
lods
outsl
xchg
lea
js
mov
gs
daa
xchg
sbb
xchg
xchg
fisubrl
dec
std
sbbb
pop
pop
pushf
bound
push
pop
mov
pusha
cmpsl
leave
mov
mov
add
shrl
jle
ds
pop
xchg
inc
inc
je
pushf
aam
push
xchg
lds
popa
push
subl
leave
and
jmp
lcall
psrad
mov
jecxz
pop
xor
pop
pop
jle
ja
jne
mov
mov
push
xchg
mov
add
sbb
test
cmp
mov
lea
insl
cmp
jecxz
jae
xor
dec
inc
cmc
in
in
gs
mov
mov
jg
add
shrb
movsb
jb
ljmp
lahf
dec
add
insb
mov
sub
sub
cmp
negb
movsb
or
rorl
stos
sti
inc
and
test
or
jnp
fimuls
inc
repz
cwtl
pop
xchg
inc
sbb
mov
jbe
int
lret
andl
pop
mov
in
sub
test
pop
and
dec
cltd
xor
jmp
into
mov
fcomps
popa
mov
call
iret
adc
mov
sub
mov
ss
aaa
in
inc
ss
cmpsl
ljmp
mov
sub
lcall
cmp
in
ret
jo
aam
adc
stos
insl
cmp
add
sbb
shlb
mov
or
enter
jno
cmc
adc
cmp
adc
add
mov
cmp
ja
stos
fldcw
dec
xor
xchg
movsb
cmp
sbb
fwait
xchg
cltd
inc
adc
fistpll
les
inc
sub
lahf
dec
insb
rcrl
mov
mov
daa
dec
ja
inc
push
or
sub
and
fwait
or
and
outsl
push
fcoml
insl
mov
out
add
mov
fs
xor
lea
sbb
fists
push
aaa
and
in
xchg
add
jne
fucomp
sbb
pop
pop
cmpsb
pop
push
xchg
xchg
fidivs
add
jbe
test
cmpsb
fidivl
aas
mov
imul
cmp
clc
test
loope
nop
sub
push
fwait
mov
xchg
mov
ss
dec
jecxz
xchg
movsb
dec
int
daa
out
fdiv
lret
into
gs
mov
outsl
cmpsl
mov
pop
jns
aad
push
addr16
and
cmp
test
push
mov
mov
mov
ret
sbb
push
dec
mov
ljmp
sbb
lods
enter
iret
shll
sbb
dec
mov
push
lock
fcoml
sbb
aad
cli
sub
lods
stos
sbb
mov
ret
sahf
mov
std
adc
pop
sbb
inc
jg
lods
dec
mov
sbb
fwait
loopne
and
ss
push
cmpsl
mov
dec
in
les
or
xchg
in
fdivl
fsubrs
dec
or
shll
rorb
daa
push
pop
rorb
movsb
test
movsw
popa
xchg
icebp
mov
xchg
push
lret
inc
jnp
mov
dec
sbb
dec
nop
loope
jge
add
cmp
cmp
mov
movl
hlt
jle
stos
mov
cmp
das
test
add
rorb
out
ljmp
cmpb
sbb
sub
xchg
mov
push
sbb
aas
sub
jae
sbb
mov
cmp
clc
adc
mov
push
popf
inc
jp
dec
cmp
push
out
add
jo
stos
sahf
adc
retw
insb
dec
std
sbb
push
inc
les
out
cmp
add
sbb
dec
add
fs
dec
inc
sub
insl
outsl
add
mov
mov
in
mov
dec
dec
xchg
imul
divl
in
lea
jne
mov
xchg
fwait
imul
jle
mov
sub
sub
ljmp
push
popa
test
add
mov
lcall
fstps
and
fsub
pop
adc
movsb
inc
push
in
fmull
es
sub
out
sub
test
in
mov
sbb
test
push
jl
in
dec
ljmp
fmul
dec
imul
sub
clc
mov
incb
or
fsubr
cmpl
in
ds
sbb
mov
scas
and
mov
sahf
stos
adc
mov
pop
add
jno
iret
jecxz
dec
leave
xor
adc
jmp
sub
cs
or
vunpcklps
movsl
cmpl
test
adc
in
or
shll
ljmp
jbe
pop
push
mov
sti
jnp
mov
mov
cs
adc
jmp
pop
das
shlb
pop
fdivs
jle
inc
test
sbb
add
lds
jae
mov
or
mov
testl
outsl
icebp
popa
xor
lea
jb
mov
cmp
out
xchg
movsl
shll
mov
ffree
jl
in
imul
popf
jl
inc
jle
fistl
and
mov
adcl
jge
lahf
jb
call
push
mov
cmp
xchg
in
jae
jge
push
popa
xor
mov
enter
jnp
test
fcomp
fisubl
push
xchg
push
fdivp
sbb
push
push
mov
inc
pusha
pop
mov
mov
mov
fistpll
jecxz
jbe
and
repnz
mov
push
stos
pop
fwait
adcb
sbb
xor
inc
jno
cmp
fsubrp
loopne
pop
loope
scas
arpl
dec
mov
mov
in
in
mov
data16
mov
je
and
ja
xchg
and
jl
pop
idivl
lods
mov
xchg
pop
stos
xchg
sub
jp
inc
xchg
dec
dec
scas
add
int3
push
dec
cli
push
addr16
or
adc
cmp
mov
out
std
mov
push
jne
out
loopne
add
push
pop
xchg
int3
rol
sbb
popf
fmuls
movnti
sub
adc
fcmovnu
pop
repnz
int3
in
scas
push
mov
rcrb
cltd
push
and
fstl
je
sti
insl
cmp
ret
push
fcompl
pop
test
mov
mov
xor
sub
std
cli
xchg
mov
adc
mov
fiadds
pusha
outsb
jns
cmp
rcll
fcomip
cmpsb
enter
mov
mov
xchg
sbb
dec
test
test
idivb
jae
les
out
ds
popa
sub
pop
cmc
sub
lods
xchg
cmp
hlt
pop
sbb
outsl
scas
pop
popa
sbb
cld
daa
sbb
nop
aas
jbe
scas
cmp
stos
sbb
mov
mov
ret
cmp
test
arpl
shr
adc
or
mov
sbb
mov
mov
mov
pop
sbb
xchg
mov
stos
lods
sub
sub
or
add
je
rcll
lea
aas
pop
add
xlat
push
mov
or
andb
fwait
clc
cmp
gs
popa
jb
daa
xchg
cwtl
pop
jp
int3
fcoml
pop
imul
cmpb
sub
inc
mov
das
cmp
jecxz
dec
stos
pushf
or
sub
or
add
or
imul
in
sbb
mov
adc
rol
or
xor
iret
lea
push
std
std
mov
and
jmp
mov
in
dec
jne
mov
sbb
lds
push
std
int
add
inc
out
jge
enter
call
lock
and
mov
repnz
sub
adc
inc
cli
and
xchg
mov
adc
jbe
pop
dec
repnz
out
hlt
xchg
mov
popw
sarb
cwtl
gs
es
mov
mov
sub
dec
mov
pop
mov
cmc
call
ljmp
jnp
into
sbb
pop
sub
cmp
int3
jl
xchg
xor
seta
cmc
test
aam
adc
pop
jae
xor
test
out
fsubl
les
push
test
hlt
dec
ret
fnstcw
aad
cli
push
in
jmp
jg
fwait
shl
pop
lds
mov
push
inc
shrb
addr16
aad
xchg
xchg
aaa
or
and
mov
or
rcrl
sub
xchg
shll
lcall
mov
ds
sbb
popa
out
shll
dec
shlb
insb
stos
push
out
subl
pop
int3
jle
jns
clc
cs
out
xor
sub
and
lret
stos
adc
jg
movl
push
xor
pop
test
popa
cltd
hlt
lea
xor
aam
push
jnp
jp
add
rorb
in
loopne
cmpsb
push
ffreep
inc
add
inc
push
mov
lret
aaa
push
fldenv
jbe
loope
lret
pop
add
cmp
jne
dec
in
repz
sub
adc
mov
and
je
repz
cli
daa
jbe
lock
in
pop
cmp
lods
scas
adc
cmp
add
test
pop
lock
xchg
jo
and
lcall
push
std
ss
add
cmp
xchg
add
cli
dec
jge
mov
inc
outsb
jns
push
xlat
mov
imul
add
movsl
fs
mov
mov
jmp
sub
adc
sbb
mov
xorb
push
call
push
cmp
jo
xlat
push
jp
stc
push
mov
sbb
mov
imul
and
jns
gs
and
cltd
int
out
insb
mov
pop
fnstcw
jl
inc
xor
inc
in
cmp
orl
cmp
pop
shrb
mov
sbb
add
jmp
scas
dec
repnz
cmp
and
lea
out
mov
insb
rep
mov
or
int3
movsl
lods
test
fnstsw
outsb
xchg
aad
loope
test
pop
out
ffree
addr16
jl
hlt
inc
fistl
out
stc
mov
mov
addr16
sbb
fs
lahf
cmp
pop
lahf
std
and
ret
and
jg
icebp
fcmovbe
jmp
push
jno
cmp
push
scas
mov
test
out
xchg
lret
aas
sub
shlb
mov
and
mov
mov
loope
mov
mov
adc
outsb
fwait
call
mov
stos
in
jp
nop
or
mov
orb
data16
enter
jecxz
sbb
sub
loopne
mov
inc
divb
push
or
xchg
sub
dec
hlt
jmp
bnd
xchg
jg
push
push
sbb
push
xor
outsl
add
je
cs
jge
cmp
sub
push
ja
aam
lock
pop
add
rcll
adc
sub
fstpl
mov
adc
mov
faddp
sub
and
dec
insl
push
add
jne
mov
testl
es
jbe
jo
arpl
sub
mov
in
roll
mov
lods
fcomps
aad
dec
fistpl
mov
or
testb
sbb
and
push
pop
mov
shrb
std
mov
mov
cmp
andl
mov
cmpl
scas
scas
xchg
add
xchg
xor
das
unpckhps
jecxz
movsb
mov
and
mov
push
mov
jne
es
lret
call
sub
xchg
and
mov
add
bound
inc
inc
mov
outsb
jbe
push
bound
cmpsl
lock
sbb
clc
decb
jnp
mov
jb
mov
sub
push
jbe
push
mov
rcll
inc
popa
mov
stc
pop
or
jbe
int3
loope
lods
dec
adc
jle
cli
adc
out
sbb
cmp
and
jbe
push
pop
adc
pop
test
ficoms
push
flds
fwait
inc
rclb
jne
je
push
loopne
ret
cmp
pop
mov
inc
mov
xchg
enter
sahf
lcall
std
dec
push
mov
rep
nop
fisubrs
repz
movl
jp
ss
sub
popa
lahf
into
sbbb
ret
dec
and
mov
mov
pop
movsl
mov
orl
jmp
pushf
int
dec
sub
hlt
xor
mov
stos
das
adc
mov
xor
xchg
addr16
mov
and
dec
or
and
mov
mov
adcb
enter
xor
and
mov
insl
ss
es
xchg
flds
pop
jmp
inc
adc
xchg
xor
mov
pop
sub
pop
xchg
mov
cli
inc
cmp
nop
daa
stc
ljmp
cmp
stos
add
cwtl
arpl
lahf
scas
xchg
xchg
ds
xlat
popf
or
cld
mov
dec
mov
or
mov
jecxz
or
outsl
ss
push
and
rcl
les
adc
cmp
xor
daa
add
icebp
xchg
imul
lds
jnp
xchg
mov
cmp
lea
pusha
xor
mov
adc
xor
or
adc
sbb
mov
adc
mov
add
nop
mov
hlt
xchg
ds
sbb
lea
or
mov
gs
js
mov
dec
in
add
lock
pop
jge
cmc
out
aaa
mov
insl
mov
insb
or
aaa
push
fs
or
hlt
pop
add
push
stos
in
fcompl
sbb
pop
sar
popf
and
inc
pop
shrb
mov
ret
mov
and
test
pop
pop
js
mov
daa
xchg
xorl
ja
std
addr16
imul
sub
ret
stos
sub
xchg
sbb
aad
stos
sahf
inc
subb
in
add
pop
ret
test
jns
mulb
repnz
mov
mov
bound
icebp
cmpsl
lahf
call
adcb
loopne
push
push
fistpll
lods
jno
add
lcall
xchg
add
cli
or
bound
fistps
ljmp
xor
lods
cwtl
add
lahf
pop
dec
das
aas
or
test
aad
sahf
rclb
xchg
mov
pop
sbb
insb
push
add
mov
stos
dec
xchg
stos
or
scas
pop
inc
mov
testl
jle
cltd
mov
lea
jbe
shll
mov
inc
cmc
stc
add
mov
push
bound
push
cmpsl
mov
arpl
arpl
icebp
xchg
cs
mov
repz
cmp
out
sbb
adc
roll
stc
loop
roll
aaa
fs
sub
push
dec
or
xchg
or
lock
aas
pop
dec
fnsave
jnp
or
xor
lods
mov
rol
dec
cltd
popf
xchg
mov
push
repz
insl
lret
out
addr16
push
add
xchg
jne
inc
jb
ds
cwtl
lcall
shll
push
add
push
inc
bndstx
mov
fimuls
cmpsb
stos
fnsave
fcmovb
lcall
cmp
rcr
mov
lock
xchg
xchg
fdivrs
fwait
jl
xorb
dec
test
mov
stos
xchg
addr16
adc
mov
inc
and
and
testl
push
push
int3
fcoms
addl
push
enter
dec
xorl
fcomi
mov
movsl
loopne
or
push
jae
and
push
faddl
movsl
cwtl
into
mov
cmpsl
lret
dec
gs
push
insb
pop
cmpsl
das
cmpsl
loope
or
es
and
pushf
adc
add
push
add
aad
xorl
shrl
hlt
sti
push
shr
adc
mov
stos
lahf
dec
fildl
clc
push
cli
xor
cmp
mov
inc
stc
or
add
in
add
clc
das
sbb
jns
rclb
or
jle
jae
sub
push
arpl
scas
ret
mov
sub
push
mov
cmp
pop
lcall
fisttps
mov
cmp
fs
jae
mov
fdivrp
sub
or
imul
imul
push
sti
rclb
jge
or
shlb
pmulhw
pop
inc
mov
dec
mov
push
mov
mov
shrw
pop
ficomps
pushf
cli
xchg
mov
shl
ret
cmpsl
adc
movsl
mov
dec
ljmp
andb
adc
rcr
out
lods
data16
sbb
aam
sahf
lahf
mov
sub
pop
daa
mov
jb
push
cld
lock
mov
adc
cld
cld
mov
sbb
xor
lds
sarb
shlb
into
push
scas
repz
mov
jno
mov
mov
jg
jnp
mov
lcall
jl
add
scas
lock
js
scas
sbb
movsl
ret
pusha
sub
pushf
adc
cmp
adc
sbb
mov
cmc
adc
inc
pop
loop
and
addb
push
push
test
pop
inc
xor
push
mov
ds
push
sbb
xchg
sub
int3
push
lret
lahf
into
push
std
pushl
pop
test
inc
aam
inc
dec
pop
cmp
mov
add
add
push
or
ja
xor
test
adc
daa
pop
inc
and
outsl
and
std
loopne
rcll
adc
addb
int
into
int3
out
loope
clc
dec
mov
mov
out
adc
pushf
int3
sub
mov
test
jmp
mov
dec
xchg
repz
shrl
ljmp
pop
lahf
jecxz
movsl
mov
rorl
das
fimull
push
mov
movsl
cmp
mov
stos
aam
pop
mov
sbb
jo
xor
popa
xchg
inc
sbb
lahf
push
jmp
das
xor
mov
movsb
cmp
xchg
fadd
xchg
out
sub
dec
incl
mov
cld
jecxz
shrb
movsb
jecxz
or
sbb
cwtl
fwait
sahf
movzbl
insb
ret
or
arpl
movsb
mov
jg
outsl
jns
call
out
xchg
adc
xor
fcomp
push
lret
adc
jne
lea
push
cmp
icebp
jno
call
fs
push
fwait
lcall
pop
dec
add
xor
add
ss
inc
push
push
out
divb
in
hlt
xchg
xchg
aam
and
xor
add
adc
fs
inc
push
push
out
divb
in
hlt
xchg
xchg
aam
and
xor
add
adc
push
inc
xchg
push
out
divb
cmpsb
in
hlt
xchg
xchg
aam
and
xor
add
adc
fs
push
les
stos
out
negb
insb
test
jecxz
insb
or
cmp
sub
in
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
xor
and
adc
add
jge
adc
ss
movsl
mov
mov
gs
ret
and
adc
add
jae
arpl
mov
mov
gs
add
xor
and
adc
add
jae
arpl
mov
mov
add
inc
adcb
lods
push
jp
and
mov
sbb
mov
xor
rcrb
pop
mov
lahf
dec
out
mov
xchg
out
pop
mov
lea
or
test
xor
test
fistpl
jb
cs
lods
lock
leave
enter
xor
mov
add
fldl
test
stos
mov
push
icebp
movsl
test
aas
shll
push
xchg
jns
cmp
sbb
inc
test
mov
popa
jle
loope
xor
sbb
in
movsl
mov
loopne
inc
leave
push
imul
push
shll
and
adc
add
jae
arpl
mov
mov
gs
ret
dec
jne
dec
test
in
lock
ss
repnz
inc
lock
adc
dec
xchg
imul
push
mov
xor
faddl
push
mov
add
arpl
dec
pop
xchg
inc
lea
add
push
mov
movsl
mov
mov
gs
ret
and
adc
add
jae
arpl
mov
mov
gs
ret
and
test
daa
daa
test
dec
popa
enter
out
adc
inc
jns
sarl
xor
mov
mov
push
push
pop
stos
inc
bound
add
enter
cmp
test
push
add
rcrb
inc
fisttps
or
mov
cld
rdtsc
xchg
and
imul
adc
mov
into
xor
cmpsl
jecxz
add
movsb
adc
adc
mov
jnp
inc
in
push
push
xchg
cmp
outsl
push
dec
fbstp
clc
mov
mov
scas
fbstp
jno
imul
js
push
pushf
adc
enter
mov
mov
pusha
and
shll
out
add
mov
ss
mov
xchg
sub
inc
add
xor
cmp
pop
cmpsb
lds
je
jnp
es
divb
mov
frstor
lret
ror
fnstsw
pop
xchg
fisubs
xor
cwtl
out
repnz
and
cmpsl
mov
inc
test
cmp
scas
aad
fisubrl
mov
inc
repz
mov
mov
repnz
sub
xchg
scas
or
arpl
xchg
dec
sub
mov
pop
das
lods
sbb
mov
ds
popa
arpl
cmp
mull
test
mov
push
lret
mov
dec
push
xor
je
fs
icebp
test
and
push
push
out
mov
nop
sbb
ret
addb
adc
xor
adc
insb
cli
xor
addr16
daa
jno
daa
aad
call
aas
in
daa
stos
or
inc
dec
shl
and
cli
dec
aam
inc
arpl
jmp
mov
rcrl
dec
icebp
aaa
mov
es
adc
pop
out
xchg
push
xor
sbb
mov
flds
jge
enter
fcomps
out
iret
adc
out
ja
xchg
out
mov
xchg
fucomp
pusha
stos
stos
xor
and
lods
cmc
movsb
shlb
mov
ret
inc
add
xchg
pop
mov
inc
xor
jg
call
aaa
mov
mov
loope
sub
jle
imul
insl
shll
lcall
and
mov
addr16
push
xchg
mov
jo
out
fadds
push
pop
mov
inc
movl
adc
cld
mov
cmp
xor
xor
inc
xlat
sub
cmpsl
mov
mov
cmp
add
jecxz
fbstp
insl
fisttps
and
xor
inc
movsb
jle
int
mov
xchg
repz
das
jg
cli
iret
inc
sbb
icebp
sbb
mov
and
pop
sbb
ret
jnp
push
pushf
mov
or
pop
dec
repnz
addr16
push
pop
dec
lock
mov
in
roll
push
ja
add
mov
pop
scas
bound
add
sbb
fbstp
call
and
xchg
aad
xor
add
cmp
imul
loop
adc
es
inc
xor
jnp
jae
pushf
repnz
push
sbb
ljmp
mov
push
mov
pop
roll
xor
lahf
inc
or
movsb
loopne
pop
nop
sbb
push
pop
push
dec
cmp
lods
mov
rorl
mov
fidivs
out
leave
out
push
adc
stos
loopne
std
jno
data16
sti
aaa
popf
aas
xor
add
mov
out
xchg
push
fisubrl
in
out
loopne
pop
pop
fstps
mov
adc
in
ja
outsl
cmp
sub
inc
aaa
xor
add
jp
cmp
jo
ret
movsl
push
or
pushf
mov
shrl
dec
rclb
arpl
icebp
fisttpll
xchg
lcall
dec
sbbb
jmp
je
sti
add
adc
and
adc
dec
clc
pop
adc
mov
nop
scas
imul
xchg
pop
cmpsb
aas
in
mov
or
test
dec
jmp
jle
ljmp
cmp
jnp
adc
jecxz
out
adc
scas
xchg
subb
lcall
adc
jbe
scas
jbe
sbb
sub
pcmpeqb
stos
cmpsl
loope
jge
sti
xchg
adc
sub
dec
mov
inc
std
xchg
pop
pop
pop
cld
sub
push
jne
inc
mov
test
lods
dec
dec
mov
fwait
insb
push
jo
ljmp
pop
imul
jecxz
das
cltd
popa
jb
je
pop
lds
cltd
xchg
add
mov
and
dec
or
xchg
adc
fdiv
cltd
enter
fs
ficoms
xchg
inc
gs
jae
addr16
loope
loopne
sub
xor
sub
xchg
push
xchg
scas
inc
nop
fimull
sub
sahf
and
push
or
cmp
mov
xor
aam
ret
fidivs
jle
cmp
int3
mov
sub
mov
jo
in
xchg
and
cld
inc
out
jecxz
call
shll
iret
mov
sbb
xor
mov
int3
cmp
sbb
xor
arpl
sub
cmp
xor
out
push
dec
ljmp
fbstp
push
xor
pop
subl
fdivl
imul
jne
pop
ret
adc
fstl
dec
sbb
stc
dec
adc
pop
daa
jno
sub
aad
bnd
add
push
add
xchg
inc
push
stos
push
lahf
cmpsb
arpl
cmc
dec
or
pop
lods
xor
sub
jnp
pop
inc
mov
testb
call
js
mov
mov
lea
mov
inc
jno
inc
push
lahf
shll
movsb
mov
xchg
adc
stc
adc
lret
xchg
jp
xor
push
push
xlat
scas
ret
pop
and
clc
fwait
into
imul
pop
fdivs
enter
test
iret
push
xchg
or
jb
dec
add
popa
out
stos
mov
adc
dec
loope
insb
ds
ss
cld
sbb
xchg
sub
int
aad
sar
sbbb
add
scas
sbb
lret
roll
ret
pushf
rep
and
lcall
sub
imul
or
loopne
out
cmp
and
jno
xor
js
inc
aas
sahf
jns
fs
ss
movsb
mov
cmp
dec
dec
insb
add
mov
jbe
xchg
cltd
lahf
rcll
jmp
insb
jp
lods
inc
xchg
xor
pop
cs
jo
inc
dec
push
or
fisubl
out
jmp
mov
cld
add
push
xchg
or
lods
xchg
popf
loop
inc
ficoml
daa
jg
cli
pop
pop
shl
rorl
xchg
pop
inc
movsl
ss
lret
dec
pop
cmp
jbe
cmpsl
push
iret
aam
push
addb
or
xchg
mov
imul
lods
adc
scas
mov
xchg
and
mov
mov
pushf
mov
mov
cmp
cltd
adc
or
adc
lret
inc
dec
cmc
dec
mov
cs
clc
test
cmp
push
mov
shll
or
mov
in
fucomi
lods
enter
dec
out
pop
das
add
js
pop
mov
sub
jnp
dec
daa
mov
pop
xor
fisttps
lods
frstor
sbb
xor
pop
test
mov
cmp
xchg
insb
jae
pop
mov
das
es
mov
stos
sbb
sub
roll
pop
subl
ret
jae
dec
adc
sbb
dec
loope
push
jno
loopne
or
imul
loop
or
jo
std
in
fs
sbb
clc
mov
lret
fs
neg
mov
add
pusha
stos
and
inc
adc
loopnew,pt
out
mov
lods
test
dec
cmp
cld
and
mov
add
imul
xor
imulb
cli
aam
scas
inc
and
cs
leave
jne
add
stos
xchg
xchg
enter
fimull
mov
ret
mov
push
add
and
js
dec
jp
sub
sbb
mov
push
mov
stos
loop
jae
xor
xor
adc
inc
jge
sbb
fisttps
push
add
cs
imul
sub
addr16
scas
fcomps
adc
add
adc
sub
test
test
inc
mov
daa
push
jbe
into
jmp
mov
fidivs
test
add
lods
aad
and
mov
cmc
jl
cmpb
ja
mov
dec
lret
xchg
insb
dec
mov
jbe
iret
in
rolb
dec
xchg
xor
loope
jb
fidivrl
xchg
mov
mov
sbb
xchg
addl
movsb
adc
loopne
xor
or
jge
mul
fld
int3
inc
dec
out
sbb
sbb
push
cltd
pop
lret
ja
in
jmp
pop
mov
mov
cltd
ficoms
adc
pop
not
and
xchg
je
xchg
cmp
rcll
mov
stos
in
ljmp
negl
pop
mov
jg
lds
mov
add
gs
adc
push
inc
xor
and
jle
jne
cmp
stos
scas
dec
or
mov
jle
lods
xor
xor
aam
adc
inc
sti
loop
fsubl
bnd
std
add
or
jmp
jb
jge
cli
test
sbb
roll
mov
and
dec
out
add
cs
adc
sti
es
lahf
mov
dec
mov
lret
out
xor
daa
adc
mov
movsl
sbb
popf
sub
mov
cmpsb
adc
jo
es
les
sahf
jecxz
into
pop
sbb
leave
sbb
dec
push
je
repnz
out
inc
mov
pop
add
pop
dec
adc
jp
add
cmp
sahf
mov
adc
out
test
xor
xchg
insl
fwait
imul
mov
notl
icebp
loope
into
adc
or
fildll
sbb
jne
sub
mov
pop
lret
pop
push
sbb
xor
xor
ljmp
mov
xchg
jp
sub
xchg
das
or
xchg
lahf
leave
add
cmp
mov
popa
mov
push
push
insl
jmp
sarb
cmp
test
dec
test
subb
into
sbb
and
sbb
or
rclb
push
fwait
cmp
mov
movsl
jne
add
pop
or
icebp
jae
mov
add
or
xchg
ss
stos
dec
and
clc
mov
jns
push
inc
adc
out
fsubrs
mov
pop
dec
scas
ret
cmpsb
cmp
hlt
inc
rcl
push
jecxz
xchg
pop
cmpsb
xchg
sub
cwtl
leave
out
jecxz
bound
mov
or
imul
push
xchg
dec
cmpsb
inc
fstl
or
les
mov
data16
fs
es
push
adcl
fimuls
stos
and
or
push
std
jbe
mov
mov
shlb
pop
inc
cmp
out
and
cmp
jle
dec
add
pop
fildll
adc
xchg
mov
inc
inc
mov
pop
dec
loope
dec
js
int3
add
mov
sti
xchg
fwait
sbb
rcll
push
adcb
pop
loopne
stos
sahf
mov
inc
sbb
leave
imul
sbb
and
out
orb
inc
push
inc
or
inc
xchg
xor
sub
pusha
push
mov
jb
std
jg
fsubl
out
sub
sbb
adc
shrb
mov
mov
add
ret
sbb
xchg
dec
lods
test
push
lock
add
hlt
adc
lcall
cmpsb
lcall
xor
shrl
push
subl
mov
fdivrl
shrl
fnstenv
pop
imull
in
mov
xor
adc
loope
outsb
dec
push
mov
cmp
stos
dec
sbb
lods
push
jno
loopne
fs
sub
dec
movsl
pop
decl
xlat
push
std
inc
push
adc
in
xor
std
inc
fwait
adc
lret
sbb
mov
repnz
lret
arpl
xor
or
jl
or
adc
or
lods
test
aad
call
mov
mov
mov
push
push
xchg
pop
add
mov
pop
jle
cmpb
xchg
jecxz
mov
negb
adc
cmp
dec
das
bound
in
roll
ja
popf
sbb
test
inc
arpl
out
jg
adc
iret
pcmpgtd
fs
mov
psubsw
repnz
lods
add
int
fidivs
jno
aam
mov
fwait
popa
popf
daa
dec
jo
xor
pop
mov
pop
movsb
jmp
mov
fistps
sahf
int
movsl
and
test
popl
mov
lea
rcrb
sbb
jecxz
push
dec
mov
roll
popf
inc
mov
push
gs
incl
jmp
shlb
jb
jns
frstor
out
cmp
push
mov
xchg
mov
push
rcl
or
mov
inc
fs
outsl
xor
in
push
xchg
pop
mov
cli
pusha
imul
icebp
cmpsl
call
arpl
inc
lods
ja
mov
les
adc
pop
fmull
jmp
fmuls
push
enter
push
fs
adc
or
int3
adc
out
mov
gs
lea
fsubl
popf
clc
inc
jmp
or
repnz
mov
adc
jmp
sbbl
pop
cmp
enter
adc
xchg
mov
cmpsl
pop
movswl
cwtl
add
notb
adc
mov
sbb
loopne
cmpsl
cmpsl
stc
rorl
fcoml
insb
dec
xchg
cmp
jnp
dec
xchg
mov
pop
shl
adc
jg
pop
add
xor
jp
xchg
sbb
cwtl
adc
popf
jmp
xchg
lahf
ljmp
cmc
stos
and
add
ss
loopne
and
push
xchg
mov
fiadds
test
dec
push
mov
and
cld
fcoms
popa
movsl
inc
cli
addr16
and
push
jl
imul
dec
add
nop
cmp
and
add
es
rcrl
shl
clc
mov
xchg
xor
lahf
ss
xor
ret
iret
movsl
cmpsl
push
push
mov
mov
add
push
fldcw
inc
jmp
inc
pop
insl
xchg
and
movsb
imul
ljmp
sbb
cmp
sahf
xor
xor
repnz
sahf
cmp
add
daa
xor
ss
test
leave
or
out
cmp
add
xchg
push
clc
add
pop
ds
mov
ss
fbld
jo
cli
ljmp
cmp
mov
and
sub
jns
jmp
mov
stc
fsubl
das
dec
jecxz
fstl
fsts
sub
cs
ret
xor
fists
stc
imul
cmc
or
outsl
pop
cli
int
inc
stos
push
insl
adc
xchg
lret
and
push
push
cmc
sbb
rclb
enter
and
adc
incb
jecxz
or
dec
int
pop
test
dec
testb
shr
mov
adc
inc
mov
push
pop
xor
inc
ja
ja
or
ljmp
inc
mov
push
mov
cli
cltd
mov
shll
cmp
mov
aad
iret
fwait
sbb
mov
mov
sbb
push
bound
sub
sub
test
mov
gs
lea
stc
adc
in
stos
icebp
dec
icebp
push
sbb
fs
mov
jo
inc
scas
inc
outsb
adc
cmc
adc
xchg
and
aad
ds
sbb
lods
scas
dec
out
xchg
mov
insl
sub
sub
dec
mov
dec
gs
aas
pop
sbb
sbb
xchg
fsubl
cmp
inc
or
shrl
test
cmpsb
lock
aaa
test
adc
add
and
in
fildll
sub
cmpsb
popf
adc
push
rcr
sub
mov
xchg
jmp
lea
test
dec
fdivp
hlt
pop
pop
jp
sub
push
or
incb
shl
pop
inc
sbb
and
sbb
sub
sub
adc
iret
dec
push
cmp
xchg
pusha
or
les
pop
push
divl
fwait
sbb
es
cmp
mov
and
stos
das
negb
jl
pop
lcall
repnz
sbb
fsubrp
and
cmp
out
fucomi
test
pop
push
in
cmp
cmp
pop
loop
stc
inc
or
pop
fwait
push
add
push
pop
jl
xor
add
sbb
pop
je
out
repnz
sub
adc
mov
out
mov
movsl
inc
or
mov
int3
or
adc
mov
xchg
ret
popa
sbb
adc
xchg
push
mov
pop
movntps
xor
add
bound
sahf
add
lretw
and
jno
inc
test
lods
cmpsl
in
insl
stos
mov
aaa
dec
movsb
xor
sub
negb
enter
cmp
jno
in
sub
filds
neg
dec
ret
das
gs
or
mov
fsubp
mov
repz
insl
ja
or
push
jo
inc
aas
loop
outsl
sarl
pop
loope
mov
popa
movsl
and
das
rcrb
jno
xor
mov
fcoml
bound
out
xchg
or
jmp
test
jl
and
xor
pop
sub
lcall
jno
dec
mov
adc
dec
cmp
and
movsl
jns
adc
and
inc
sub
add
sub
mov
xor
jno
stos
ja
ret
dec
xor
imul
sbb
mov
fwait
and
jle
je
lahf
insb
scas
repz
addr16
sbb
rcll
shrb
jb
xor
jmp
push
in
gs
mov
rcrb
stos
fwait
push
mov
lret
mov
outsl
jl
aaa
movzwl
jmp
jecxz
xor
insb
es
movsb
mov
outsb
inc
insb
mov
mov
inc
pushf
mov
jp
mov
in
mov
shrb
scas
jnp
test
cltd
leave
xchg
sbb
adc
dec
outsb
repnz
pop
adc
jmp
jmp
std
mov
cmpsl
test
push
adc
jns
fsubrl
jae
andl
pop
cld
shrl
fidivrl
addr16
pop
inc
fisttpll
mov
push
cltd
hlt
inc
pop
pop
fstl
and
imul
rcll
les
movl
push
push
mov
adc
fdivrl
and
and
pushf
loope
ret
adc
xor
pop
das
sbb
out
lods
dec
scas
mov
lcall
leave
mov
mov
xor
in
out
xor
sub
imul
bt
xor
pop
mov
andl
in
sbb
cmp
xor
push
jl
lds
and
jle
add
orl
std
add
sub
cmpsl
fidivrs
out
das
ficoml
pop
sar
neg
pop
add
inc
fiaddl
fisttpll
cmp
sub
in
fwait
aad
clc
mov
add
popl
xchg
fidivl
loop
cwtl
ljmp
fchs
dec
cmp
cwtl
addb
gs
imull
push
mov
jae
mov
aad
adc
out
xor
sub
test
stc
jg
roll
lods
setnp
sbbl
mov
xchg
jle
mov
arpl
data16
or
cmp
jp
xor
test
inc
fldenv
fisttpll
push
mov
mov
add
scas
xor
push
or
pop
in
shrb
jmp
or
dec
adc
push
push
pop
lret
test
push
in
ret
pop
aam
daa
iret
xchg
pop
push
cwtl
outsl
scas
mov
push
pop
mov
xor
push
hlt
out
pop
xchg
mov
int
push
pop
pop
bound
repnz
insl
jne
cmpsl
scas
mov
pop
push
out
int
dec
ss
sub
aaa
sbb
out
cmp
or
jmp
push
movsb
jb
inc
add
cvtps2pd
or
dec
dec
and
cmpsb
inc
push
lahf
mov
mov
add
mov
out
jns
pop
into
mov
mov
add
add
mov
mov
fldl
jp
lods
xchg
cmp
inc
pop
lret
push
cmpsl
in
pop
movsb
jle
outsl
repz
push
pop
or
mov
add
jae
arpl
mov
mov
gs
ret
and
adc
add
jae
arpl
mov
mov
gs
ret
and
adc
add
jae
arpl
mov
mov
gs
ret
and
adc
add
jae
arpl
mov
mov
adc
cmp
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
jb
push
ret
inc
roll
mov
loop
rolb
push
mov
mov
adc
push
ret
inc
shll
mov
add
rolb
push
mov
xchg
xor
jecxz
repz
ret
pop
shrl
mov
add
lea
mov
pop
into
jno
adc
jecxz
lods
push
lods
xor
popa
and
pop
lds
pop
push
lcall
or
jae
movsl
sub
and
dec
xchg
test
mov
inc
cmp
loop
mov
xchg
push
jge
lea
add
icebp
cmpsb
bound
sahf
sbb
scas
mov
pop
repz
cld
sbbb
pcmpgtd
int
and
jns
jecxz
out
cmp
int3
sbb
sbbb
inc
mov
cmpsb
pop
xchg
repnz
lahf
and
sarl
iret
insl
cld
xchg
sahf
lcall
sub
and
loope
or
push
outsl
jae
push
xchg
push
divl
icebp
hlt
xchg
pop
adcb
jecxz
repz
ret
inc
shll
sbbl
jmp
cli
jae
inc
fistl
and
jp
mov
repz
stos
ss
pop
int
ret
repnz
mov
mov
inc
movl
jecxz
icebp
cmp
jmp
xlat
adc
push
xchg
mov
xchg
shlb
cmpl
leave
pop
in
out
pop
stos
push
mov
jp
and
repnz
jae
inc
ret
and
adc
push
ret
inc
shll
mov
add
rolb
push
mov
mov
adc
dec
mov
pop
outsl
push
inc
jo
cmp
cmp
dec
dec
dec
jg
xor
mov
cmp
fdivp
iret
arpl
dec
mov
shll
mov
fcmovnbe
outsl
insl
nop
stc
lret
imul
pop
mov
xorl
inc
stos
xor
sub
std
dec
fmull
sbb
mov
inc
mov
out
push
push
out
sahf
shrl
fcomps
filds
xchg
and
das
and
jbe
jp
pusha
loopne
inc
push
and
xchg
cmpb
addr16
mov
push
push
das
cmp
movsb
out
imul
fbstp
mov
stos
push
sub
repnz
in
inc
mov
movsl
cmp
ljmp
pop
stc
xchg
mov
in
ljmp
jge
pop
out
dec
ss
aad
dec
pop
cmp
aas
sbb
subb
sbb
and
or
sub
mov
adc
ret
dec
pop
in
cmp
and
add
pop
subb
jmp
mov
fidivrl
jo
nop
add
ja
sbb
out
test
push
clc
xchg
test
stc
push
fistps
sbb
mov
cmp
inc
scas
lahf
cmp
lea
push
stc
mov
imul
aas
mov
cmp
loopne
xchg
xor
or
inc
stc
sub
and
fcompl
aaa
sbb
ds
adc
jmp
jns
lods
jae
js
cmpsb
mov
pop
pop
pusha
stos
inc
add
fwait
add
mov
push
aad
cmp
fldl
and
jno
loop
or
adc
sub
sbbl
mov
call
movsl
fs
shll
fisttpl
jo
pushf
aaa
mov
jmp
jnp
sbb
imul
cmp
dec
adc
mov
aam
jo
push
aam
and
adc
dec
cld
xchg
popa
mov
in
mov
rcl
cmp
sbb
jno
fs
push
lods
int3
scas
pop
jb
nop
cltd
testl
adc
outsl
and
push
icebp
aas
mov
or
mov
mov
mov
idivl
sub
das
or
scas
fcoms
out
xchg
in
xor
movsl
inc
xor
std
lcall
push
adc
jb
sub
mov
or
dec
jle
sub
mov
insb
fadd
rclb
mov
sbb
push
lret
mov
js
add
std
mov
stos
jmp
in
movsb
inc
adc
shll
mov
cmp
and
imul
or
mov
cli
cmp
dec
negl
mov
xor
xor
movsl
sbbb
rorl
add
andl
xor
fidivrl
and
shlb
adc
mov
jo
insl
test
aaa
lods
inc
pusha
stos
jl
stos
fstps
fbld
pop
mov
dec
in
loop
fists
sbb
sub
pop
xorb
pop
add
cli
aaa
test
lea
mov
lcall
and
aam
or
shlb
das
xchg
xor
add
dec
in
lcall
sbb
sbb
and
loope
mov
jbe
pop
sbb
rcrl
jae
jae
faddp
adc
pop
push
sub
filds
test
mov
sbb
adc
adc
lods
jo
sub
cmp
jo
fisttps
pop
loop
pop
xchg
enter
jmp
imul
pop
adc
adcl
mov
pop
nop
into
jno
ret
jp
shlb
icebp
dec
js
adc
xchg
cmpsb
adc
dec
sub
inc
fs
xchg
lret
lret
mov
mov
out
outsb
push
dec
int3
ret
aas
pop
sbb
orb
ljmp
pop
xchg
sub
jecxz
cmc
or
xor
mov
jo
xchg
jns
jg
push
arpl
imul
jbe
shlb
ja
call
mov
cwtl
std
mov
inc
shlb
shl
mov
pop
pop
mov
dec
or
es
in
inc
mov
out
and
cmc
adc
xchg
dec
dec
pop
xchg
in
es
sbb
inc
dec
add
xor
lock
xchg
lahf
mov
out
aas
lcall
test
std
xchg
out
mov
and
cmpsb
cmp
cwtl
repz
lock
std
dec
mov
fisubl
fs
es
cmc
lock
aad
insb
xchg
in
cmp
cltd
push
push
and
cmp
sarb
shl
cmp
les
jecxz
pop
incl
pop
mov
cmp
inc
mov
jecxz
mov
xlat
cld
nop
leave
jo
xor
into
test
lods
xchg
loopne
adc
jg
xor
int3
xor
sbb
sub
leave
pusha
xchg
inc
pop
sub
dec
popf
in
jp
popf
nop
loop
inc
push
inc
btc
sbb
out
popa
pop
fildl
imul
clc
jbe
xchg
jp
cmc
cmp
add
or
test
mov
iret
add
test
stos
inc
jbe
shll
andl
mov
and
mull
negl
mov
rclb
test
insl
or
xor
adc
hlt
cli
pop
mov
xor
shrb
push
cmp
iret
lahf
inc
fsubp
push
rolb
out
and
add
sbb
sbb
add
clc
jg
cwtl
test
fwait
cmp
int
push
and
xor
das
cs
imul
sub
mov
sub
push
add
test
in
push
pop
dec
addr16
call
shrl
roll
cmc
pushf
scas
dec
int3
daa
adc
arpl
xchg
ret
nop
xchg
mov
dec
cwtl
shlb
lods
jo
sbb
add
rcrl
loope
lods
or
dec
imul
xchg
clc
mov
loop
movsbl
pop
pop
xlat
pop
inc
and
mov
xor
je
nop
push
jmp
mov
lcall
addr16
and
push
cs
or
push
mov
jae
push
add
mov
pop
mov
outsb
fnstcw
loop
mov
add
cmp
adc
pop
imull
adc
or
mov
pop
repz
loope
cmpsl
loope
adc
sub
push
cld
xlat
inc
add
imul
mov
rcrl
sbb
leave
push
jle
push
push
std
sub
lahf
cmc
mov
shlb
pop
mov
jmp
dec
xor
dec
jb
and
dec
ljmp
inc
mov
jecxz
mulb
sbb
cmpsl
mov
xor
pop
cli
ljmp
mov
mov
adc
in
xor
push
lcall
push
dec
loopne
dec
jns
cmp
pop
inc
dec
in
cwtl
mov
xor
mov
inc
pop
in
cmp
imul
mov
ljmp
push
push
ret
add
sub
add
mov
fxch
bound
add
dec
cld
in
pop
scas
fcomip
fldt
cmp
sbb
shrb
das
movb
lahf
xor
push
xor
rcrl
popf
aam
cmpsb
not
aad
sub
outsl
xchg
or
inc
lahf
aam
inc
dec
pushf
mov
add
push
dec
inc
cs
seto
sbb
jmp
jmp
mov
inc
adc
jb
jb
cmp
lock
incl
jb
adc
mov
out
ljmp
jae
push
or
sub
int
fsubl
jecxz
jne
add
and
cs
aad
sbb
cli
mov
lock
test
push
push
test
aam
and
mov
jbe
insb
sub
ljmp
pop
jne
sub
cmp
dec
cmp
pop
pop
add
mov
dec
vrsqrtps
mov
orl
inc
movsb
jb
xchg
ret
jno
adc
pop
pop
outsl
mov
shlb
fmuls
aaa
adc
xchg
lret
fistpl
add
xchg
push
out
bound
insl
les
xchg
imul
jecxz
and
push
test
mov
out
cld
rcrb
rolb
add
pop
inc
je
clc
pop
add
js
cmp
rolb
popf
mov
aad
int3
jmp
addr16
ja
pop
and
pop
xchg
push
pop
jo
lea
sub
inc
inc
les
sbb
fsubp
jno
lock
sbb
pop
mov
cmp
cmp
fstpl
cltd
xlat
out
imul
pop
dec
pop
lds
sub
adc
stos
dec
lock
add
pop
lret
mov
xchg
addl
shlb
outsb
scas
movq
loopne
loope
adc
loope
sbb
out
cmp
test
orb
mov
aad
cli
xlat
ljmp
sub
jp
inc
insb
cld
lock
popf
mull
enter
mov
inc
dec
mov
pop
jb
jmp
and
stc
das
mov
frstor
daa
cld
repnz
and
jge
xchg
decb
nop
jle
jae
jbe
inc
jno
and
loop
or
and
mov
push
imul
push
test
inc
or
data16
mov
out
lcall
push
push
imul
ja
out
int3
mov
sbb
or
int
imul
jbe
addr16
ja
sub
xchg
aas
lret
mov
pop
ss
loope
jo
imul
sti
in
cmp
mov
push
xchg
pop
in
add
sub
add
arpl
rolb
in
subl
and
lea
popf
popf
and
pop
mov
repz
test
mov
outsb
add
inc
mov
inc
or
or
mov
loopne
rolb
into
mov
adc
negb
ja
fdivl
cmp
sbb
aad
mov
aas
xchg
pop
pop
bound
mov
sub
fwait
dec
xor
mov
sub
data16
lret
sbbl
aam
pop
mov
aam
notb
out
lods
lods
aam
or
inc
jecxz
ret
mov
add
stos
or
nop
xchg
sub
xor
ret
test
dec
pop
or
lods
jle
add
jp
in
push
inc
dec
push
pop
xchg
mov
sub
cmp
nop
icebp
in
add
jg
jnp
mov
cmpsb
fbld
jg
mov
adc
or
push
mov
pop
sub
pop
lcall
dec
mov
jg
push
data16
lods
stos
xchg
pop
aad
in
int
negb
ret
sub
or
or
push
mov
fnstenv
cmp
mov
cmpsb
test
imul
adcb
adc
and
jg
mov
jne
in
pop
je
jge
sti
push
aaa
inc
cmp
in
sbb
and
and
push
fstpl
push
test
int3
popf
dec
cmp
dec
add
mov
fldenv
push
and
das
and
in
in
repnz
in
cmp
pcmpgtb
std
push
gs
iret
testl
fidivrs
test
xchg
sbb
jmp
mov
out
mov
fsts
push
and
gs
push
jns
das
adc
faddl
fs
pop
test
test
rorl
shl
pop
xor
push
cmpsl
jne
loopne
xchg
dec
idivl
out
pop
mov
push
dec
lahf
mov
pushf
push
pop
imul
das
roll
jne
cmp
xor
cmp
sbbl
insl
lods
push
stos
fadds
mov
andb
popa
pop
xchg
les
movsb
push
sub
ds
or
sbb
fisubrl
int
into
sar
out
xor
dec
jno
movsl
jns
cmp
movsb
mov
bound
jbe
aam
adc
mov
dec
push
mov
mov
sbb
xchg
lods
jne
lahf
push
rcl
xchg
popf
aad
xchg
test
hlt
repnz
sub
xlat
mov
std
jp
mov
jp
jnp
in
adc
push
lcall
push
leave
in
sub
fsubrp
inc
inc
out
mov
push
cwtl
mov
test
jb
xchg
sarb
pop
add
andb
movsl
xor
mov
dec
clc
shlb
fstl
mov
test
sbb
out
cmp
pop
shr
insb
adc
or
mov
jae
js
mov
shl
popf
jns
pop
clc
shrl
sti
and
xor
ds
jne
jge
xchg
push
fimuls
aaa
jns
lcall
loope
adc
sahf
pop
mov
xchg
dec
inc
aas
push
xchg
repz
mov
xor
inc
ret
inc
ja
sbb
andb
fcomps
lcall
out
and
cwtl
mov
outsb
loope
lods
and
mov
mov
repz
adc
adc
sub
pop
pop
arpl
pop
xchg
pushf
and
into
jnp
scas
cmp
test
xchg
cld
mov
imulb
dec
jb
mov
sbb
cmp
aad
fadds
std
sbb
jp
sbb
repz
add
mov
cwtl
adc
ficoml
xor
decl
xor
adc
add
pushf
xor
dec
and
aaa
or
out
aam
mov
gs
mov
xorb
rcll
mov
outsb
xlat
lret
arpl
xor
nop
loop
add
xlat
pop
mov
lods
mov
dec
inc
xchg
repnz
or
mov
jb
xor
push
test
cld
cld
scas
sub
repnz
add
ficoms
jnp
jmp
mov
inc
dec
loop
adc
cs
arpl
jl
popa
test
add
data16
dec
lods
negl
ror
fisttps
insl
push
inc
mov
int3
lea
dec
mov
xchg
cmpsl
add
lahf
xchg
push
sbb
xchg
and
insl
in
mov
fsubrl
xchg
sti
xchg
sarl
inc
and
inc
xchg
xorb
cld
inc
je
push
mov
xlat
jae
icebp
inc
lcall
inc
mov
scas
add
mov
or
fsts
mov
pop
xchg
std
out
mov
outsl
imul
fiaddl
sbb
lahf
mov
popf
push
aam
mull
mov
jb
in
stc
add
xchg
mov
pop
add
hlt
push
inc
lods
test
cld
sbbb
pusha
mov
dec
pop
jecxz
loop
nop
outsl
fldcw
push
cld
cmp
mov
mov
in
push
js
inc
ret
xlat
pusha
mov
cli
or
and
insb
xorb
add
aam
popa
jae
xchg
lea
xsaves
sbb
movsl
push
or
popf
sbb
cmp
inc
test
mov
icebp
xor
loope
test
jmp
aas
jmp
outsl
mov
iret
and
daa
cmp
push
xor
std
push
mov
popf
ja
test
push
push
ficoms
dec
test
jns
mov
jae
cld
rcll
setle
jb
cmc
mov
lea
and
stos
pop
inc
fldcw
popa
sbb
outsb
out
jns
sub
outsl
outsb
arpl
repz
loopne
push
pop
cmp
div
repz
sub
inc
mov
data16
stc
push
daa
outsb
cmpb
mov
sbb
sbb
in
cmp
cld
bound
fiadds
movsl
ljmp
add
jb
xchg
mov
jae
add
mov
xor
xor
push
rcrl
mov
fwait
dec
mov
xorb
cmpsl
dec
outsb
int
jmp
jge
or
mov
insb
mov
lret
mov
push
in
xor
adc
nop
mov
cmc
push
xor
faddl
xchg
cmp
loope
stos
in
push
into
push
icebp
mov
popa
dec
fst
fcoml
inc
dec
out
inc
xchg
push
sbb
in
mov
jge
cwtl
mov
push
adc
and
mov
lcall
scas
pusha
xlat
lds
nop
dec
add
push
add
mov
jmp
mov
repz
and
hlt
lahf
std
sub
rcrb
cmc
mov
add
gs
cmc
fildl
fwait
inc
aaa
insb
cmc
int
rolb
pop
into
testl
int3
dec
lods
mov
lahf
loop
add
das
movsb
push
push
lods
movsb
call
in
cwtl
int3
test
cwtl
aaa
sub
icebp
repnz
or
jo
push
dec
test
sahf
arpl
fldl2e
je
lcall
fwait
out
xchg
xor
in
dec
xor
xor
push
xchg
in
xor
add
push
sub
daa
cmp
xor
mov
cwtl
sbb
adc
outsl
mov
mulb
cmpsb
pop
les
xlat
addr16
add
dec
inc
rcl
xorl
shlb
push
xor
cltd
shll
lret
cwtl
fmull
mov
adc
repnz
setl
mov
stc
in
in
dec
fisubrs
pop
sbb
decl
out
aaa
jae
jle
inc
in
xchg
xchg
sub
sub
sbb
lret
mov
pop
cmp
sbb
and
xchg
sbb
jge
or
cwtl
fdivp
mov
xchg
dec
mov
push
push
pop
fsubr
lahf
mov
and
jg
jne
repz
xor
ds
rol
and
xor
out
mov
dec
xor
loopne
or
outsl
pop
ret
movsl
xlat
scas
jg
shlb
fnstenv
and
push
pop
cs
popf
mov
jno
mov
cmpb
cld
in
jb
jge
sbb
pop
mov
repz
out
and
dec
xchg
pusha
push
stos
daa
and
aam
loope
call
enter
clc
fbstp
aad
cltd
das
in
mov
std
imul
insb
icebp
mov
test
stc
xor
mov
cmp
sti
or
sarb
jmp
inc
pop
or
push
stos
push
scas
and
pop
shlb
inc
sub
lods
fildl
mov
push
xor
lret
pushf
mov
lahf
cmp
push
cmc
divl
push
cmp
jl
cmp
sti
andb
sahf
mov
fistpll
or
stos
xchg
mov
lret
lret
cmp
shlb
push
jle
aas
inc
pop
cmp
stc
imul
and
cs
lds
push
inc
in
fists
push
mov
add
pushf
dec
insl
xor
sti
mov
test
adc
adc
loope
mov
jge
add
cs
mov
stc
ljmp
pop
scas
lahf
js
jg
push
idiv
mov
test
mov
dec
int3
imull
into
cmp
cwtl
cli
add
repnz
call
jmp
mov
js
nop
xchg
cmpsb
mov
cltd
sub
add
ss
inc
xchg
inc
orl
xlat
push
js
xchg
out
and
push
in
xor
pop
push
and
shlb
fistl
psrlq
popa
push
sahf
xor
ret
xchg
mov
sbb
sbb
cs
mov
mov
movsl
cmpsb
ja
rolb
imul
mov
mov
mov
fmull
lds
adc
push
xchg
or
fstpl
pop
pop
cmp
lret
pop
jmp
jae
push
enter
cmp
ljmp
shlb
push
scas
int3
lret
dec
push
lods
add
mov
idivb
mov
mov
aad
jb
insb
daa
sti
cmpsb
cltd
lahf
pusha
and
test
fadds
ds
mov
and
stc
jge
jnp
cmc
es
push
loop
daa
and
jge
mov
xchg
cmp
sub
cmp
push
add
xor
call
inc
push
mov
jmp
mov
sti
ljmp
mov
push
pop
push
mov
div
add
push
mov
mov
pop
bound
inc
dec
lock
jge
jp,pn
sub
cmpsl
inc
data16
add
xor
enter
insl
jbe
pusha
lret
loope
iret
daa
xor
rorb
fs
inc
xlat
test
aas
xchg
sub
lret
adc
mov
pop
lds
dec
push
dec
xchg
shrb
hlt
dec
fidivs
or
and
mov
add
movsl
sbb
dec
ret
nop
mov
pop
pop
inc
cmp
push
sub
mov
pusha
enter
xor
cmp
cmc
cmp
test
mov
xchg
inc
mov
dec
mov
cmp
popf
push
sbbl
repnz
push
repz
ret
inc
shll
mov
add
rolb
push
mov
mov
adc
push
ret
inc
shll
mov
add
rolb
push
mov
mov
adc
bound
inc
inc
shll
mov
add
rolb
push
mov
mov
adc
pusha
repz
ret
inc
shll
mov
adcb
inc
ret
stos
sub
insl
cld
jge
push
mov
mov
dec
dec
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
push
mov
call
xor
pop
ret
xchg
mov
inc
fists
dec
sbbl
adc
lds
push
mov
movsl
jbe
test
push
cmpsb
inc
xor
out
push
testl
lds
inc
jne
xchg
test
dec
cmpsb
pop
sub
cmp
push
push
and
lds
xor
test
jne
or
and
into
xchg
cld
sbb
jle
outsb
cmp
and
sahf
imul
and
fstpl
mov
push
lea
vpextrw
lds
xor
and
in
loop
or
and
popa
mov
and
push
movsl
int
cmc
imul
and
mov
in
dec
out
out
mov
xlat
xor
inc
pop
mov
in
out
lds
test
stos
pop
movsl
sub
insl
add
js
in
nop
lods
lds
ffree
sub
jp
test
dec
les
testb
rorb
adc
xchg
push
jne
jb
inc
cmpsb
pop
xor
out
push
in
push
std
ss
fcoml
inc
mov
xchg
data16
adc
gs
loopne
mov
test
push
inc
andb
fadds
notb
xchg
push
call
aad
out
mov
lea
mov
mov
test
xchg
stc
or
icebp
xor
add
xor
xor
adc
push
in
aad
lds
inc
movsl
jbe
test
push
cmpsb
inc
xor
out
push
cmc
push
in
aad
lds
inc
movsl
jbe
test
je
push
push
or
adc
pop
dec
or
into
stos
adc
rcll
xchg
cmp
dec
movsl
add
sti
stc
daa
js
sbb
nop
test
mov
add
ret
dec
mov
popa
xlat
enter
mov
xor
scas
pop
and
je
xchg
add
push
jmp
or
cli
jns
sbb
iret
mov
inc
or
jnp
jb
test
push
icebp
jmp
xchg
fbstp
push
inc
scas
sbb
add
push
js
mov
mov
sub
pop
iret
jge
fdivs
adc
mov
aam
lahf
mov
rolb
push
jg
xor
stos
mov
sbb
hlt
dec
mov
mov
repz
jge
imul
mov
push
push
jne
cmp
mov
sub
rcll
jbe,pn
enter
sarb
pop
sub
out
mov
dec
aam
pop
jno
and
js
add
in
adc
push
jne
jp
arpl
pop
jnp
repnz
out
subb
test
int3
orb
xchg
cs
pop
loopne
xorl
pusha
cmp
mov
jne
cmp
jns
cs
clc
xchg
fstl
dec
add
outsl
out
daa
xchg
dec
push
and
out
pop
stos
mov
cmpsb
mov
inc
xchg
fists
sub
and
pop
or
aad
fisttpl
mov
loopne
mov
sarl
sub
fmuls
pop
rcl
add
jbe,pt
das
loope
jae
fcmovu
jg
int
cs
xor
lret
lcall
les
and
push
je
sbb
sbbb
in
sbb
hlt
and
arpl
push
out
mov
fistl
xor
jae
scas
pop
test
and
nop
movsl
jno
mov
mov
and
popa
movb
lcall
push
mov
les
popf
inc
out
out
inc
cltd
xchg
xor
iret
add
clc
add
sub
mov
sbb
scas
jns
or
mov
inc
test
xchg
fbstp
lahf
iret
in
pusha
imul
mov
adc
pop
jl
in
push
int3
mov
lahf
sahf
xchg
es
mov
data16
sti
jnp
sbb
cmp
bound
std
es
inc
lods
jge
xchg
add
stos
mov
xor
mov
sub
cltd
push
bound
insl
arpl
mov
mov
add
push
lcall
xchg
mov
inc
mov
mov
pop
adc
xor
pop
or
das
lahf
inc
pusha
and
fisubrl
dec
std
nop
jno
call
test
cmp
xlat
aad
fwait
jle
ret
out
mov
mov
push
add
lea
leave
sti
int3
mov
lret
fistpl
fcoml
inc
pop
outsb
or
push
ja
adc
js
in
inc
insb
cmpsb
pushf
xchg
ja
push
jo
adc
rcrb
sbb
lcall
xor
mov
popf
dec
lds
cmp
popa
cmp
aas
lret
das
ret
shrb
mov
add
int
mov
rcrb
xlat
and
ret
leave
push
jnp
sbb
ljmp
push
nop
cli
outsl
mov
imul
pop
add
sbb
push
xor
les
jns
xor
leave
or
pushf
testl
mov
insb
cld
inc
in
jbe
inc
sub
cmpsl
push
push
and
mov
mov
push
or
jbe
loopne
loope
aad
out
lret
bound
lahf
ret
repz
imul
pop
ret
pop
dec
andl
pop
incl
mov
mov
pcmpgtb
xadd
jle
loopne
and
pop
movsl
lahf
cmpsb
in
xchg
ss
fwait
jns
in
movl
fcmovnb
int3
and
dec
iret
les
fwait
in
ds
hlt
sub
jno
fiadds
xchg
mov
push
scas
or
out
pop
enter
inc
push
mov
adc
or
mov
int
out
and
out
clc
shlb
arpl
inc
add
pop
je
test
add
pop
movsl
inc
push
in
out
pop
jecxz
or
in
push
das
pop
xor
repz
ja
jnp
sub
jge
aas
int
xchg
out
sti
mov
cmp
mov
fistl
adc
fdivrs
int3
pop
inc
gs
sub
xor
test
cwtl
sahf
jle
cmp
clc
out
or
xchg
xchg
clc
into
hlt
cmp
or
lds
bound
test
push
push
sti
nopl
xchg
cltd
inc
and
insl
test
add
dec
pop
ja
into
cmc
and
sub
jge
or
ljmp
add
sbb
mov
mov
mov
fidivs
pop
push
mov
sbb
call
repz
insl
and
fidivrl
repz
icebp
dec
pop
lock
jmp
clc
push
add
rcrb
adc
fs
push
lret
cmp
stc
dec
mov
mov
jne
pop
ss
rcrb
pop
xchg
jns
sub
gs
or
fisubrs
nop
and
sub
mov
pop
mov
test
pop
mov
push
ret
xchg
and
jg
loope
repnz
pop
jecxz
lods
and
cmpsb
mov
jecxz
jb
sbb
fisttps
mov
cmpsl
sahf
jmp
push
inc
imul
les
and
sub
aas
lock
or
inc
mov
or
mov
mov
leave
push
scas
fisubrl
sub
mov
loop
lock
adc
sub
push
lds
sbb
inc
hlt
cmp
std
and
push
ds
cmp
das
jae
aam
mov
cwtl
scas
xor
js
push
rcrb
stc
mov
fstps
adc
fs
xchg
movsl
pop
dec
js
and
sbb
jo
xchg
and
mov
test
add
jnp
jge
shlb
xor
jg
stos
fidivrl
xchg
mov
push
xor
pop
cmpsb
and
popf
and
shll
adcl
add
mov
or
jp
es
mov
xchg
scas
xlat
test
xchg
sub
lahf
stc
lods
cmp
jne
ljmp
push
xor
xchg
mov
cwtl
add
shll
push
in
sub
pop
jecxz
ja
fstpl
mov
and
inc
or
mov
push
rol
pop
pushf
cmp
pop
push
stos
push
xorl
movsb
test
in
adc
inc
int
cmp
aam
pop
sahf
cmp
into
jno
cmp
stc
nop
and
xchg
dec
ljmp
xchg
mov
addr16
icebp
adc
sbb
sub
int
sub
jl
leave
paddusw
in
lods
inc
push
push
xor
mov
inc
idivl
addr16
inc
pop
shl
push
fstl
dec
test
aas
jecxz
sarl
ficoms
push
sub
inc
add
push
cmp
js
cmp
mov
add
dec
and
sbb
mov
leavew
lds
push
cs
cmp
sbb
lea
clc
mov
mov
fcom
mov
ss
xchg
repnz
loop
out
xchg
icebp
movsl
mov
inc
dec
repz
cmpsl
sbb
sbb
test
pop
cmp
jp
sbb
icebp
inc
or
daa
dec
rcrb
jle
xor
pop
sbb
jmp
push
test
ds
fcoms
lahf
dec
adc
and
add
loopne
push
adc
fsubrp
fstp
out
in
sbb
jns
repz
xor
aaa
adc
icebp
stos
inc
sbb
dec
mov
inc
adc
push
mov
pop
mov
dec
mov
mov
cld
in
pop
dec
clc
xchg
add
pop
int3
add
jmp
and
mov
pop
jp
dec
pop
pop
inc
xchg
dec
loope
mov
dec
dec
ljmp
and
pushl
pop
and
sbb
mov
pop
insb
ja
scas
fsubrl
sbb
imul
push
or
lret
cmp
or
out
and
es
orl
pop
push
push
mov
fsub
subl
xlat
popf
jg
dec
lcall
inc
adc
push
ret
repz
cmp
jnp
mov
xchg
mov
mov
rcrb
shrb
xchg
xchg
adc
std
xchg
into
pop
into
aas
clc
mov
xchg
push
mov
iret
jg
sub
adc
rcr
mov
sub
lcall
rolb
mov
pop
sub
fpatan
jno
jge
test
cmp
add
and
pop
push
mov
sub
ret
adc
cmp
repz
jle
xchg
sub
int
add
in
pop
and
inc
repnz
ja
cmpsb
jne
fs
ret
mov
cltd
pop
xchg
inc
cmpl
stos
lods
dec
iret
or
add
movb
outsb
pop
cld
and
and
push
sub
out
xor
shll
fstl
xor
adc
inc
leave
in
xor
adc
js
dec
inc
popa
movsl
push
ja
pop
jl
mov
daa
push
mov
and
sub
sti
jns
push
mov
lahf
and
rolb
xlat
clc
outsb
jp
mov
wrmsr
pop
es
mov
repnz
fnstenv
ss
inc
and
js
cltd
flds
xchg
negb
cmp
adc
push
cmc
aad
sub
push
and
repnz
mov
incb
jno
fadd
mov
mov
sbb
adc
lods
lret
xchg
pop
rorl
cmp
divl
ja
mov
push
add
fs
push
sbb
sbb
cmpl
push
fwait
lods
jo
rorb
lea
or
xchg
lahf
dec
mov
jecxz
ljmp
js
pop
xchg
cwtl
xchg
pushf
inc
ja
inc
fcmovu
adc
ret
cs
int
mov
xchg
adc
push
add
jnp
loopne
out
sub
add
popa
ljmp
lahf
je
outsl
push
sbb
pop
xchg
xor
xor
stc
int3
ret
xor
and
jle
ljmp
loopne
notl
or
add
out
add
rep
jae
stos
imul
push
cmpb
data16
or
es
je
xchg
in
jp
addr16
cmp
sahf
xchg
aaa
and
lods
outsl
aam
sub
push
mov
subb
bound
insl
int
xor
push
dec
mov
bound
jb
aam
pmaxsw
pop
xchg
jb
lods
pop
imul
stos
dec
mov
lret
clc
xor
add
add
xor
pop
inc
adc
out
pop
adc
push
inc
arpl
jno
mov
pop
cli
xchg
push
out
dec
cmp
cld
cmp
arpl
sub
mov
or
cmp
jae
movb
jmp
sub
cltd
push
in
mov
mov
in
pop
mov
add
call
xchg
sub
ljmp
out
arpl
aas
pop
cmpsl
jbe
outsl
gs
jns
push
dec
stc
scas
int
je
xchg
adc
mov
stos
out
or
pop
pop
mov
add
out
push
dec
inc
int
add
loop
ja
out
imul
stos
sbb
lahf
out
clc
pop
pop
push
push
lcall
fldt
push
out
and
cli
sub
sub
sbb
pop
fwait
push
std
addr16
ror
ja
pusha
rorl
out
sbb
push
push
pop
daa
and
sti
mov
jbe
lahf
xchg
push
vmovq
and
add
repz
xchg
js
insl
mov
clc
xchg
mov
fstpt
dec
cmp
mov
dec
les
mov
mov
mov
xchg
stos
mov
rol
cmpsl
xor
mov
lds
aam
cmpsb
jl
fldt
inc
mov
out
and
pop
test
inc
mov
push
test
mov
or
xchg
scas
xchg
sahf
xchg
cld
movsl
in
sti
pushf
sbb
out
loopne
push
pop
lock
inc
sahf
inc
imul
push
cld
sbb
or
je
or
pop
stos
pop
sbb
insl
push
cs
or
test
outsb
and
popa
add
lahf
fstp
xorl
adc
xchg
fmuls
rolb
out
mov
ret
hlt
or
aam
xchg
adc
adc
dec
push
jmp
and
in
mov
je
pushf
xchg
add
inc
mov
std
aad
lahf
xor
lods
add
xor
dec
push
call
xor
hlt
or
pop
movb
mov
inc
pop
sbb
mov
arpl
lods
sbb
outsb
addl
pop
das
sbb
stos
sbb
sub
inc
jne
fisttps
int3
aad
jmp
in
ljmp
fucom
cltd
pusha
jae
jae
imul
mov
adc
aaa
stos
jae
loopne
notb
gs
in
push
jl
mov
mov
rclb
fdivl
mov
xchg
nop
imul
inc
pusha
ret
cwtl
adc
or
xor
test
mov
xchg
push
call
or
mov
mov
jnp
out
mov
jb
leave
mov
mov
mov
mov
sbb
hlt
sbbl
test
sub
jl
push
scas
mov
adcl
rep
xchg
insb
cmp
pop
fidivl
push
mov
icebp
repz
xor
inc
or
outsb
scas
inc
in
rcl
xor
fistps
jecxz
mov
cltd
xchg
sub
sub
aaa
das
setg
jmp
outsl
int3
gs
push
mov
sbb
pop
mov
dec
jbe
mov
push
fbld
mov
xor
pop
ljmp
mov
in
insb
pop
gs
mov
and
mov
test
push
fldt
mov
aas
add
sbb
adc
fstpt
and
aam
jb
cmc
popa
sub
xor
jb
mov
inc
jle
bound
lds
enter
xor
mov
adc
gs
scas
loope
std
sub
mov
xchg
sub
enter
xchg
sbb
fimuls
pop
jne
cmp
loopne,pt
ficoms
mov
push
out
mov
xchg
fwait
dec
stos
adc
pop
xor
mov
das
xchg
jb
mov
sub
cmp
in
insl
into
push
ds
and
loop
es
test
rorl
inc
test
out
sub
cltd
fwait
arpl
mov
mov
jae
lock
inc
insb
mov
adc
jg
ret
mov
cs
outsl
fdivrl
fcoml
inc
sti
sbb
lahf
test
ror
aas
push
mov
int
int
xor
jnp
pop
pop
stos
aad
rcrl
int3
cmp
das
adc
lods
jmp
inc
push
cmp
aas
sub
cmp
dec
push
jno
lret
dec
pop
in
call
xlat
stos
scas
movsb
jne
and
shrl
mov
arpl
jmp
cmp
ficoml
pop
cmpsb
lods
shlb
xlat
rolb
test
scas
dec
lsl
stc
jnp
outsl
dec
jne
xchg
shll
add
jo
sti
popa
and
sub
icebp
mov
cltd
mov
sti
mov
inc
adc
push
cmp
dec
jl
and
aas
ret
adcl
add
mov
mov
pushl
sbbb
mov
xrelease
fmuls
aas
iret
in
inc
sub
sbb
add
lea
mov
int
and
jnp
sbb
in
pop
sti
adcl
aas
aaa
jne
in
in
out
inc
in
jne
add
xlat
or
test
jae
daa
pop
jb
lahf
sbb
mov
mov
jns
adc
shl
shll
das
outsb
neg
adc
jo
add
das
incl
sar
cmp
mov
bound
subb
lds
hlt
clc
jns
xchg
std
mov
mov
push
sbb
lods
test
fmuls
xchg
sub
mov
std
pop
dec
les
pop
icebp
and
xchg
std
popa
xchg
add
sbb
xchg
enter
jl
inc
fnstsw
jg
sahf
ljmp
or
adc
jns
cltd
stos
sarl
mov
jmp
jmp
dec
sbb
push
outsb
cltd
in
cmp
imul
sub
fs
ds
jp
or
push
sarl
lods
sbb
inc
test
inc
mov
fimuls
subb
jnp
push
rorb
ffreep
outsb
mov
pop
inc
xchg
fsubp
push
push
ja
push
into
icebp
jno
fnstsw
pop
or
mov
pop
jmp
pop
mov
jbe
dec
push
lods
scas
divl
out
mov
or
jg
push
push
outsl
fwait
mov
sbb
rcrl
je
aad
mov
add
icebp
test
shll
mov
or
insb
dec
popf
cmp
in
mov
inc
mov
add
js
jne
push
add
stos
jmp
xchg
sub
push
dec
bound
ja,pn
ja
shr
xchg
mov
cmp
insb
cmp
daa
mov
daa
shll
cmc
sub
cmpsl
mov
das
aaa
stc
push
adc
dec
push
enter
or
mov
movsb
mov
xchg
lahf
lret
sbb
sub
hlt
dec
add
mov
sub
cltd
movsb
push
sbb
cmp
add
sbb
stos
jle
mov
pop
mov
jmp
sub
jmp
pop
in
aas
cmpsl
push
loop
nop
and
stos
adc
push
dec
dec
clc
icebp
pop
iret
push
xchg
mov
shll
aas
jmp
addr16
cmc
lahf
push
rol
adc
cmp
and
jle
inc
imulb
or
inc
push
and
shr
adc
pushf
pop
cmpl
lret
xchg
cmc
fwait
mov
int3
lahf
call
sub
jg,pn
mov
pop
or
jecxz
mov
dec
stc
sbb
loopne
outsb
jecxz
adc
cmp
js
fidivl
je
and
jecxz
scas
addl
xchg
pop
xor
adc
jnp
push
in
leave
inc
in
add
xor
pushf
addr16
mov
cmpsl
xchg
push
lret
push
ds
push
int3
adc
imul
mov
lcall
sub
into
lds
cs
sahf
sahf
shll
ja
movb
test
sbb
aam
jp
insl
pop
xor
outsl
jbe
lods
mov
rcll
push
or
xchg
pop
mov
pop
daa
mov
dec
add
insb
mov
xchg
addr16
jmp
jbe
fisttps
add
fldenv
xor
jnp
lcall
inc
cmp
lret
xchg
xor
push
xchg
std
fucomp
mov
rcll
enter
in
movsl
loopne
sub
and
in
dec
xor
mov
xchg
or
fisttpll
cmc
mov
pop
xchg
pop
jne
fsubrs
shlb
ficompl
pop
cwtl
in
push
repnz
push
in
push
adc
in
lret
and
mov
jg
and
clc
xor
xor
pop
shrb
dec
push
frstor
rol
faddp
dec
in
imul
adc
inc
jmp
xor
pop
add
inc
cmp
test
iret
loop
leave
push
movsb
mov
cltd
loopne
xchg
mov
inc
pop
xchg
gs
cmp
scas
std
ror
stos
and
jno
ja
pop
test
adc
jne
xor
lcall
or
mov
loopne
jl
sub
push
mov
push
lret
movb
or
hlt
fnstcw
inc
mov
stos
dec
add
xor
mov
mov
add
xchg
roll
in
push
shl
xor
jnp
lea
insb
jns
push
add
adc
xchg
jge
outsb
lahf
jae
mov
scas
mov
inc
jmp
imul
rolb
or
sahf
xor
inc
out
xchg
jbe
pop
fs
cld
and
cmp
fdivrs
push
fisubrl
popa
stos
xchg
push
cmp
idivl
mov
aaa
cmp
int3
xchg
sti
and
movsl
loope
push
aas
mov
test
and
je
adc
adc
mov
test
pop
mov
sbb
jae
test
negl
cmpsl
jp
in
mov
push
into
in
or
test
mov
je
lret
mov
sbb
mov
dec
mov
sbb
adc
sbb
lds
mov
adc
leave
or
fwait
hlt
mov
mov
and
push
cmc
push
in
aad
lds
inc
movsl
jbe
test
push
cmpsb
inc
xor
out
push
cmc
push
in
aad
lds
inc
movsl
jbe
test
push
cmpsb
inc
xor
out
pop
cmc
push
in
aad
les
inc
movsl
ja
test
push
cmpsb
inc
xor
add
stc
dec
pushf
aad
mov
cmp
sahf
jp
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
insl
xor
dec
in
pop
jge
inc
dec
cld
cs
push
pop
into
insl
fidivrs
or
mov
and
pop
std
lea
adc
lods
push
leave
out
dec
jge
insl
fidivrs
bound
cmp
faddl
pushl
mov
mov
mov
mov
je
pop
ret
int
mov
cwtl
aaa
test
mov
xor
out
scas
push
cmp
mov
arpl
mov
inc
add
lcall
push
and
or
fimuls
int3
cmp
cmp
dec
shl
fidivrs
push
or
fcomp
loopne
lock
in
mov
int
std
mov
rorl
push
inc
out
mov
or
push
or
loop
lds
xor
shrb
xchg
mov
into
stos
fwait
jge
pop
mov
ret
jecxz
dec
cld
mov
push
icebp
in
sub
dec
cli
xor
and
mov
dec
imul
push
ja
cmp
mov
and
pop
lahf
or
cmp
push
bnd
push
fsubr
or
adc
shrb
insb
sti
pop
and
aas
fadds
pop
scas
sti
ret
dec
rorl
or
push
out
fists
fwait
adc
jge
ds
push
lods
push
mov
into
insl
fidivrs
or
sahf
cmp
dec
in
pop
std
lea
popf
push
lods
push
mov
into
insl
fidivrs
or
sahf
cmp
mov
shl
adc
dec
neg
leave
popa
mov
ret
cmpsl
pop
jbe
loopne
jecxz
mov
and
sbb
mulb
pop
xor
xor
push
ficomps
fisttps
fcmovne
add
sub
dec
mov
adc
and
sub
pushf
mov
xor
inc
enter
movsb
stos
mov
cmpsb
or
inc
fistpll
fmulp
jb
outsl
nop
push
and
pop
in
sub
lds
movsb
nop
mov
lods
scas
xor
clc
loopne
jg
bnd
pop
inc
push
mov
push
stos
mov
mov
ljmp
icebp
lea
and
adc
push
mov
loope
pop
aam
adc
sub
adc
xchg
pop
add
imul
jp
adc
ss
or
das
lds
xchg
in
jp
push
or
mov
add
gs
rcr
lahf
xchg
incl
adc
sub
xchg
add
ljmp
xorl
add
adc
pop
mov
and
adc
push
dec
push
fsts
and
xor
push
xchg
dec
and
cmp
bound
cmp
aaa
test
stos
inc
dec
sub
in
jne
adc
push
in
mov
enter
dec
adc
imul
out
jp
and
mov
or
iret
xchg
out
pop
rcrl
es
add
cmp
sub
inc
fisttps
loop
aad
aam
call
outsl
hlt
push
notb
cwtl
xchg
add
lea
sbb
rcr
in
mov
outsb
push
push
and
in
rclb
xchg
out
shlb
and
inc
mov
imul
pop
shll
sub
cli
hlt
jge
dec
mov
data16
jnp
stos
inc
cmp
aad
jmp
lret
std
rcr
lods
cmp
cli
inc
pop
shll
xlat
fwait
gs
insl
mov
jge
adc
subb
and
jmp
jo
shr
movsb
sbb
push
scas
jae
movsl
rsm
adc
inc
mov
push
or
dec
sbb
out
orb
icebp
iret
mov
mov
dec
ret
adc
mov
mov
test
mov
std
pop
iret
jb
enter
fisubs
in
ficomps
mov
xor
int3
cmp
arpl
stc
fstps
adc
sbb
test
pop
out
js
cli
sbb
adcl
neg
fucom
xchg
fidivl
mov
inc
inc
clc
dec
cmp
inc
aas
aad
dec
or
in
mov
or
fadd
dec
outsl
fsubr
filds
call
push
out
pop
nop
ljmp
mov
out
inc
lods
rclb
dec
jno
xor
in
mov
roll
or
adc
jp
pop
imul
popa
jge
jecxz
xchg
pop
scas
mov
bound
cmp
adc
sti
adc
ret
or
enter
xchg
div
jnp
push
loop
jb
or
in
imul
jo
push
xor
cmp
pop
or
pop
mov
and
xchg
mov
inc
jns
pop
mov
jbe
sbb
sbb
sarb
xor
ljmp
mov
lret
fwait
push
cmp
mov
rcr
cmpsl
jecxz
dec
lods
and
or
je
mov
mov
lret
dec
shll
push
lret
pop
adc
lahf
je
or
jb
push
push
jne
pop
cmp
or
jge
sbb
rclb
sbb
call
sub
out
xor
subb
sub
mov
mov
insb
mov
jl
cwtl
xchg
shrl
mov
push
rcll
shll
arpl
int
push
cmp
cli
icebp
inc
xchg
mov
cmc
mov
and
pop
gs
fldpi
les
fldlg2
sbb
pop
cmp
sbb
test
add
add
pop
xchg
jae
xor
xchg
mov
sub
adc
rcr
push
jb
push
cmp
push
push
push
andb
subl
lds
adc
dec
mov
cmpsl
pop
stos
push
bound
sub
push
out
xor
divb
subl
dec
adc
cmp
xlat
repz
je
dec
les
jns
jecxz
js
insb
adc
dec
sub
scas
pop
mov
jno
movsb
popf
mov
es
fiaddl
sbb
ret
insb
jg
push
lret
adc
add
or
pushf
movsl
cli
push
mov
shl
cmp
inc
aas
iret
adcl
in
cmpsl
ret
sub
scas
xor
mov
mov
aam
pop
pushf
adc
or
or
mov
in
jns
and
flds
stos
cmp
sbb
push
sub
xchg
xchg
push
and
call
mov
xlat
setb
test
sbb
int
call
jnp
cltd
sub
dec
aam
das
and
add
adc
sti
pop
nop
fst
add
cli
cmpsb
outsl
push
rol
cmp
xchg
cld
jno
mov
mov
nop
mov
mov
push
adc
out
ja
sub
mov
cmp
pop
je
cli
iret
xchg
jle
cmp
jp
cmc
lcall
mov
aam
fwait
mov
cltd
xor
ret
or
xor
xor
mov
and
pop
jo
popa
pop
divl
fs
pop
mov
lods
popf
dec
cmp
dec
dec
rorl
inc
mov
shl
push
outsb
jo
ficoms
movsb
sub
popa
pop
jo
or
sbb
testb
sbb
push
in
mov
mov
sub
iret
cmpsl
push
loope
lea
cmp
popf
ljmp
cli
mov
jp
push
rcrb
and
or
lahf
dec
adc
adc
inc
add
lods
inc
nop
add
jb
mov
rcrb
lea
jb
loopne
mov
shll
fsubrp
lock
lods
pusha
jecxz
pop
mov
jno
xchg
js
jg
mov
push
iret
outsb
fadd
sbb
outsb
sti
jmp
dec
mov
cmp
jmp
mov
cltd
or
inc
stos
add
ljmp
mov
fdivrs
dec
stos
pop
mov
rorb
jg
ret
int
cmpsb
sub
inc
jne
mov
mov
call
mov
cmp
shlb
mov
push
negl
mov
mov
pop
mov
lods
fdivl
mov
loopne
xchg
out
pop
add
jne
addb
ds
mov
loopne
lret
xchg
sub
insl
adc
push
adc
ja
bound
pop
bound
cmpb
aad
adc
push
fwait
sbb
stc
aam
xor
fiadds
push
in
jnp
xchg
xor
or
repnz
pushf
loope
push
or
fsub
mov
ret
in
jae
ret
scas
mov
push
sub
pop
sbb
iret
jno
jb
cmp
cmp
sub
ret
addl
dec
test
in
lods
xor
ljmp
or
outsb
scas
nop
pusha
dec
in
out
pop
lret
sub
orl
xor
xchg
add
inc
jbe
cmp
dec
mov
stos
xor
and
inc
mov
scas
gs
out
ret
shrb
in
loopne
xchg
mov
mov
sbb
aad
xor
mov
adc
mov
ljmp
fwait
dec
adc
push
sub
insl
add
add
cmpsb
pushf
lods
mov
das
iret
add
push
inc
stc
cmc
fucomi
adc
adc
jl
popa
or
call
xlat
pop
popf
xchg
inc
mov
subl
add
add
addr16
adc
in
jge
lods
sub
xor
cmp
adcl
add
sahf
sahf
outsb
push
shr
push
loopne
call
jbe
movsb
adc
out
push
popf
sti
add
pusha
lret
sbb
stos
imul
arpl
push
gs
or
add
stos
mov
test
pushf
ss
mov
or
pop
std
sub
in
xor
outsl
sub
pop
xchg
out
add
and
sub
imul
push
fwait
mov
mov
push
sbb
lods
dec
rcl
rorl
adc
mov
pop
mov
mov
dec
and
xchg
or
inc
les
loopne
add
in
lcallw
inc
cmc
or
popf
cmp
sbb
iret
loope
mov
cmp
outsl
and
mov
jp
cmp
xor
cmp
sub
int
xlat
mov
insb
bound
sbb
ljmp
sub
aaa
pop
int3
adc
push
movsb
ja
adc
mov
ds
shr
add
mov
xor
leave
sbb
or
cwtl
jne
sub
inc
insl
jmp
idivb
jo
outsb
dec
hlt
jns
xor
in
dec
andb
out
add
arpl
hlt
outsl
loopne
popa
xchg
xchg
xchg
xor
push
push
rcrl
adc
addr16
xor
dec
xor
inc
pop
xor
xor
pushf
xor
jge
push
arpl
shlb
fwait
cmpsb
addr16
movsl
mov
mov
sub
sub
mov
ret
pop
pushf
xchg
fcompl
adc
adc
fstpl
sti
test
jnp
cmp
ja
nop
pusha
mov
jnp
cmp
jb
mov
movsl
pop
lea
in
adc
push
push
neg
popa
mov
in
push
pusha
int
orb
gs
or
mov
in
mov
or
or
jmp
es
aaa
add
pushw
sbb
xor
sbb
push
leave
sbb
push
lds
test
xlat
shl
and
inc
dec
push
sub
jno
iret
pop
mov
or
insl
lods
mov
fstpl
sbb
cwtl
ret
mov
inc
pop
shrl
mov
cmp
cwtl
fstpl
es
push
stos
sbb
and
pop
mov
mov
popl
add
adc
je
fbld
int3
rolb
sub
jg
es
push
push
lret
shlb
jp
jns
mov
outsb
and
fucomp
insb
shl
sub
add
xchg
enter
pop
hlt
jl
bound
lea
insb
pusha
pop
sub
and
es
cmp
adc
shrb
call
lds
out
rcll
fimull
test
in
pop
xor
in
jnp
cmp
ja
mov
call
sti
in
pop
jl
pop
sub
outsb
test
push
test
movl
out
mov
pop
idivl
or
addr16
mov
push
ja
mov
es
mov
in
mov
loop
inc
pop
push
mov
fbstp
mov
adc
imul
pop
sub
add
xor
movsb
add
xor
dec
pop
xchg
int
add
mov
sahf
pop
leave
clc
out
mov
mov
jmp
jne
icebp
lret
in
mov
add
divb
jg
jnp
stos
scas
shll
add
fwait
add
fld
test
leave
pop
out
and
add
add
scas
mov
std
daa
xchg
rcrl
or
pop
enter
mov
sub
xor
in
sbb
repnz
imul
outsl
sbb
imul
or
xor
inc
pop
jno
je
sub
ja
arpl
nop
sbb
mov
dec
shr
cmp
inc
jbe
sbb
fisubrl
mov
jae
iret
pop
push
inc
push
fwait
subb
cltd
jmp
outsl
jmp
das
cmp
adc
call
push
jbe
sarb
pop
jne
dec
pop
sub
and
aam
jecxz
sarb
fcomi
ss
pop
test
jg
shll
inc
mov
icebp
fsubs
jmp
dec
mov
xchg
aaa
xchg
mov
pop
add
loope
jne
fs
adc
xchg
lahf
loopne
inc
aam
or
xchg
call
and
pop
ret
sub
inc
push
fs
xlat
mov
nop
popf
scas
xchg
and
mov
adc
sbb
sbb
pop
and
push
inc
out
cld
int3
inc
jl
fsubl
mov
imul
jb
aad
mov
add
cli
aad
mov
mov
mov
adcl
and
fistpll
jecxz
jns
xor
mov
push
fneni(8087
mov
into
cmp
add
jecxz
xchg
lahf
sub
fdivrl
adc
pop
and
ficoms
or
outsb
int3
stos
iret
pusha
mov
or
inc
cmp
cmp
addr16
std
mov
movsb
pushf
and
dec
push
inc
jne
std
mov
adc
sbb
xchg
insl
xor
jmp
jbe
insb
xchg
xchg
xchg
adc
outsb
sub
clc
sub
jg
loop
scas
or
shll
fstpl
xor
pop
inc
mov
add
sbb
insb
cltd
sub
add
add
pushl
lret
xchg
cwtl
ss
push
int
or
cmp
nop
xchg
lds
outsl
or
lcall
rcrb
push
fs
mov
mov
fs
jns
xor
push
lea
aas
repz
into
mov
fcomps
push
push
mov
popa
out
xchg
ds
inc
xor
pop
push
ret
sarl
lods
imul
pop
loopne
jmp
jl
aam
cltd
imul
out
clc
pop
mov
push
jnp
clc
mov
jecxz
jo
mov
xchg
in
jmp
xchg
xlat
cmp
or
mov
add
push
adc
jns
lret
imul
add
push
or
xchg
mov
jmp
out
lret
clc
pop
jge
cmp
rolb
imul
and
or
sbb
mov
mov
sbb
fstl
mov
jg
divb
roll
jo
add
inc
xchg
pop
roll
out
jne
mov
add
dec
xchg
mov
pop
sarb
pushf
pushf
pop
jns
mov
fdivrp
ret
andl
lret
pop
pop
push
imul
xor
inc
mov
or
subb
insb
das
das
or
mov
add
int
jnp
les
xor
fistpl
jle
sbb
daa
es
jge
mov
push
push
and
jae
cld
testl
sbbl
lods
pushf
sahf
jge
je
das
jge
jmp
dec
jmp
repnz
test
test
test
fdivl
insb
sbb
stos
lea
dec
sbb
loope
pushf
scas
andl
and
adc
sub
js
pop
lock
loopne
push
xchg
adc
mov
dec
sub
jp
sbb
add
xchg
cmpsl
out
sub
testl
jmp
sub
add
repnz
das
pop
imul
dec
ljmp
lods
or
pop
daa
mov
jle
jb
jg
cmc
mov
or
sbb
add
in
fs
mov
popf
repz
jl
movmskps
sub
flds
jno
sbb
jne
mov
ds
adc
dec
jge
pusha
or
or
mov
mov
mov
shl
in
sub
push
sarl
mov
mov
aad
fisubl
lea
xor
icebp
push
and
mov
mov
mov
mov
xchg
dec
iret
mov
push
mov
or
je
jo
push
lcall
sub
addl
movsb
inc
sahf
jo
loopne
mov
mov
cwtl
mov
fisubs
les
jnp
sub
and
add
hlt
call
in
push
jmp
popa
call
into
jg
or
jge
sub
cmp
xchg
mov
iret
imul
fcmovnb
jbe
pop
and
xor
nop
pop
xorl
addr16
adc
in
mov
mov
dec
enter
push
es
add
sbb
mov
jnp
or
bound
insb
lods
jecxz
lret
aad
jne
cmp
cmp
lds
or
icebp
push
push
and
sub
fwait
in
sub
push
loop
dec
les
stos
add
pop
fistpl
pop
dec
ret
fimull
mov
mov
fsub
xchg
xor
push
jbe
outsl
dec
mul
mov
daa
mov
fisttpll
and
pop
pop
mov
adc
push
add
loope
inc
xchg
stos
mov
popa
inc
lods
mov
lods
in
lds
dec
mov
push
fwait
lcall
mov
dec
add
push
pop
leave
ja
sub
sbb
jb
mov
aas
loop
and
xor
mov
xchg
lcall
adc
test
or
and
adc
mov
popa
adc
shrl
ret
or
and
lcall
xorb
jns
test
scas
ret
mov
mov
ds
imul
and
cld
dec
push
and
jnp
sub
push
or
mov
mov
dec
xchg
nop
mov
or
mulps
lret
int3
push
hlt
pop
mov
xchg
mov
in
add
or
adc
sub
insb
push
jecxz
fcomip
sub
adc
lret
xchg
sub
ret
adc
adc
insl
adcl
push
adc
adc
ret
fnstenv
daa
xor
cmc
ja
xlat
dec
dec
mov
dec
and
aam
bound
pop
cltd
push
lret
or
push
enter
imul
or
cmpb
xchg
imul
sub
in
push
lret
in
jnp
or
bound
scas
sbb
mov
ret
in
cmpsl
cwtl
xchg
and
popa
inc
pop
lahf
pop
lret
repz
stos
icebp
lea
rcr
dec
adc
and
hlt
pop
out
imulb
into
repnz
repz
dec
gs
stos
mov
pop
leave
sub
or
sahf
and
mov
jo
das
pop
push
push
mov
jnp
insb
fmull
pop
decb
sbb
xchg
aas
movsl
ror
je
arpl
lahf
xchg
scas
inc
jg
hlt
subb
mov
test
loope
inc
insl
xchg
mov
out
push
mov
push
sub
arpl
imul
outsl
shll
test
xchg
pop
dec
jmp
sbb
jl
sbb
adc
pushf
push
and
in
lcall
std
jge
add
lahf
fwait
sub
aaa
mov
sbb
loopne
arpl
ret
dec
jnp
repz
shll
mov
or
and
cltd
xchg
mov
add
sbb
xor
or
push
jecxz
inc
inc
mov
test
testb
and
mov
iret
icebp
pop
mov
or
inc
fcomps
sarl
mov
adc
mov
test
pop
cs
iret
pop
jp
mov
pop
call
dec
or
and
int3
je
clc
dec
lea
call
sub
dec
outsb
lea
push
icebp
movsl
es
in
inc
add
aam
push
pop
out
lret
fsubs
sahf
aaa
aam
and
and
mov
xchg
jb
sub
sbb
jle
imul
orb
push
enter
cmp
mov
adcl
adc
cli
pop
cmp
push
and
push
sub
stos
mov
fisubs
imul
mov
ja
xor
shlb
mov
dec
add
xor
ret
sub
mov
cmpsl
xchg
dec
inc
pop
and
dec
push
mov
fdivs
mov
mov
in
push
lret
in
adc
int
insb
mov
xchg
les
cmp
mov
add
int
outsb
pop
mul
movsl
aad
jecxz
xor
inc
mov
into
xlat
cwtl
sub
dec
leave
fidivl
popa
jae
movsl
cmp
xor
inc
xchg
aam
das
shrl
jo
jl
mov
jnp
cli
push
leave
sub
shlb
rcr
mov
aaa
shlb
mov
jmp
in
xor
sub
fcmovnbe
vdivss
insb
xchg
push
lahf
daa
push
lods
das
pusha
cmp
push
loop
out
out
or
fstpl
mov
push
iret
aas
arpl
fldcw
std
pop
sbb
inc
mov
jno
adc
subl
pushf
fisttpll
sbbl
push
lods
push
mov
into
insl
fidivrs
or
sahf
cmp
dec
in
pop
std
lea
popf
push
lods
push
mov
into
insl
fidivrs
or
sahf
cmp
cs
pop
std
mov
lods
fidivrs
ds
fidivrs
or
jbe
jp
and
adc
jle
lea
popf
push
sub
add
fs
fimuls
flds
popa
ret
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
push
hlt
add
jl
add
mov
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
cmc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
in
add
fdiv
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
inc
cmc
add
dec
cmc
add
pusha
cmc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
fdiv
add
clc
cmc
add
and
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
je
add
jl
add
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
shl
add
fdiv
add
call
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
add
fdiv
add
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jg
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
inc
clc
add
cmp
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
clc
add
mov
clc
add
sar
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cmp
add
pop
stc
add
cmp
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
aam
add
fdivr
add
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
pop
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
add
cmp
add
dec
cli
add
pop
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
