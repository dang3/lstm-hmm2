and
add
mov
and
mov
jmp
call
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
nop
jmp
nop
push
xchg
xor
mov
inc
mov
call
mov
jmp
nop
nop
push
mov
or
mov
sub
mov
and
mov
sub
mov
mov
addr16
andl
mov
push
xchg
xor
xchg
jmp
push
and
and
and
xor
push
mov
and
sub
xor
push
dec
dec
xor
pop
mov
dec
add
sub
dec
test
jne
pop
pop
mov
call
test
nop
nop
nop
nop
nop
nop
nop
je
push
xchg
push
dec
add
inc
push
dec
or
ror
sub
pop
shr
mov
or
dec
test
jne
pop
shl
or
mov
add
add
call
neg
nop
nop
nop
nop
nop
nop
nop
sbb
nop
nop
nop
nop
nop
nop
nop
nop
nop
neg
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
add
mov
test
nop
nop
nop
nop
nop
nop
jne
xor
xchg
jmp
jmp
push
addr16
push
cld
rol
add
sub
sub
mov
push
addr16
call
addr16
jmp
je
push
cld
mov
xor
or
add
rol
mov
call
mov
and
pop
jmp
nop
nop
push
xchg
push
addr16
jmp
call
cld
dec
xchg
jmp
nop
nop
nop
nop
push
xchg
or
mov
sub
add
and
mov
sub
mov
or
shr
rol
and
mov
mov
addr16
andl
xchg
jmp
mov
xchg
add
xchg
add
addr16
add
cld
test
nop
nop
nop
nop
jmp
mov
nop
nop
nop
nop
jne
jmp
xor
cld
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
xchg
push
xchg
xor
addr16
nop
nop
nop
nop
nop
pushl
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
sub
xor
pop
mov
cld
mov
mov
mov
cld
inc
mov
xor
sub
mov
test
nop
nop
nop
nop
nop
nop
jne
xor
nop
jmp
nop
nop
nop
pushl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
rol
pop
mov
addr16
mov
xchg
mov
push
pop
jmp
jne
jmp
nop
nop
nop
nop
pushl
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
pop
mov
xchg
mov
xchg
mov
mov
rol
mov
jmp
nop
nop
nop
nop
nop
nop
push
nop
cmpl
nop
jne
push
nop
jmp
push
xchg
push
xchg
jmp
call
xchg
jmp
inc
cld
push
push
pop
jmp
nop
push
addr16
dec
sub
and
mov
push
addr16
call
push
nop
jmp
inc
mov
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
push
mov
push
nop
jmp
test
nop
nop
nop
nop
nop
nop
nop
nop
lea
nop
nop
nop
nop
jmp
lea
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
mov
test
nop
nop
nop
nop
nop
nop
nop
jne
xor
rol
shr
sub
xor
mov
xor
shl
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
and
xchg
mov
nop
lea
nop
nop
nop
nop
nop
nop
jmp
lea
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
pop
jmp
jmp
xor
rol
mov
jmp
cmp
xchg
jl
jmp
nop
nop
nop
push
mov
xor
add
ror
or
mov
sub
cld
pushl
or
shr
and
sub
pop
push
xchg
push
xchg
jmp
push
xchg
add
push
pop
mov
mov
xor
sub
mov
xor
add
and
mov
push
mov
push
push
pop
or
and
mov
jmp
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jne
xor
cld
jmp
push
nop
call
xchg
movl
cld
push
nop
pushl
xchg
jmp
push
or
mov
push
xor
xor
ror
or
rol
shr
ror
mov
add
add
sub
or
inc
and
dec
test
jne
pop
pop
mov
call
test
nop
nop
nop
nop
jmp
pushl
xchg
call
nop
ror
inc
or
mov
push
popl
call
xchg
push
cld
mov
xor
and
shr
push
add
push
add
or
mov
and
pop
sub
mov
inc
inc
and
dec
test
jne
pop
lea
mov
call
test
nop
nop
nop
nop
nop
nop
nop
je
jmp
jmp
push
ror
push
dec
sub
pop
add
shl
and
dec
test
jne
pop
pushl
sub
sub
mov
add
add
pop
call
push
xchg
pushl
inc
inc
push
xor
push
xor
inc
pop
rol
xor
dec
test
jne
pop
pop
call
test
nop
nop
nop
nop
nop
nop
je
call
xchg
test
nop
nop
nop
nop
jmp
push
mov
call
mov
xor
shl
add
xor
pop
pushl
mov
push
xchg
pushl
mov
push
mov
call
xchg
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
je
call
mov
lea
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
xchg
pushl
mov
pushl
push
pop
jmp
jmp
movb
xchg
jmp
nop
nop
nop
nop
push
mov
push
mov
push
mov
push
mov
test
nop
nop
nop
nop
jne
and
rol
and
add
mov
pop
jmp
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
je
call
xchg
pushl
xor
shl
and
pop
mov
and
mov
jmp
add
dec
xor
shl
mov
jmp
nop
add
add
add
mov
push
xchg
call
mov
and
mov
inc
and
dec
mov
mov
cld
push
and
xor
push
sub
rol
rol
inc
dec
and
mov
rol
add
or
dec
test
jne
pop
pop
call
push
xchg
push
or
add
or
or
push
mov
add
push
shl
xor
and
inc
pop
add
or
dec
test
jne
pop
pop
mov
call
jmp
or
pop
dec
pop
inc
add
xor
pop
call
mov
cmpb
xchg
je
cmpb
mov
je
pushl
dec
pop
jmp
push
mov
ror
shl
add
or
pop
add
add
shr
or
add
mov
rol
mov
add
add
mov
mov
add
rep
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
and
add
add
shl
or
add
rol
and
add
lea
nop
nop
nop
nop
nop
nop
nop
jmp
or
inc
sub
mov
add
mov
movzbl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
mov
mov
cld
mov
push
pop
movl
mov
jmp
mov
xchg
mov
addr16
lea
nop
nop
nop
nop
nop
call
push
pop
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
je
call
xchg
jmp
mov
nop
nop
nop
nop
jle
shr
rol
mov
mov
mov
andl
nop
add
mov
mov
mov
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
push
mov
xor
pop
dec
ror
ror
and
mov
dec
add
and
pop
push
xor
pop
add
xor
addr16
rorl
nop
nop
nop
nop
add
cld
jmp
call
nop
leave
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
pusha
nop
nop
nop
nop
nop
nop
nop
nop
rol
xor
mov
push
xchg
jmp
xor
mov
and
sub
mov
shr
nop
nop
nop
nop
add
nop
and
xchg
mov
addr16
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
test
nop
nop
nop
nop
je
call
xchg
test
nop
nop
nop
nop
nop
nop
nop
je
push
addr16
xor
xchg
inc
or
xor
pop
lea
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
je
mov
mov
shl
shl
sub
xor
mov
movsbl
nop
nop
nop
nop
nop
nop
rol
nop
nop
nop
nop
nop
xor
nop
jmp
and
shl
rol
ror
ror
mov
pushl
xchg
pushl
xchg
pushl
xchg
pushl
push
pop
call
nop
xor
pop
inc
sub
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
nop
nop
nop
nop
nop
nop
jne
add
sub
ror
sub
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
addr16
sub
sub
mov
mov
call
xchg
push
xchg
push
dec
push
ror
pop
add
mov
dec
test
jne
pop
or
shr
sub
and
add
mov
call
test
nop
nop
nop
nop
nop
nop
nop
nop
jmp
mov
nop
movzwl
nop
nop
nop
nop
nop
nop
push
xchg
shl
xor
or
add
pop
jmp
pop
inc
je
call
addr16
jmp
dec
xor
mov
sub
push
pop
shr
nop
nop
nop
nop
nop
nop
nop
nop
nop
test
nop
nop
nop
nop
nop
nop
lea
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
cmp
addr16
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
lea
nop
nop
nop
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
jbe
lea
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
jmp
call
cld
add
cld
mov
movb
addr16
movl
cld
call
push
pop
jmp
incl
mov
shl
mov
sub
mov
mov
cld
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
nop
jne
mov
mov
cmp
xchg
je
incl
xchg
jmp
jle
shl
add
shr
shr
mov
movzwl
nop
nop
nop
nop
nop
nop
jmp
inc
and
mov
inc
and
shl
mov
mov
xchg
or
mov
add
mov
mov
addr16
jmp
popa
nop
nop
nop
nop
nop
jmp
cld
pusha
nop
nop
nop
nop
nop
nop
nop
nop
call
addr16
popa
nop
nop
nop
nop
nop
jmp
xchg
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lea
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jne
test
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
nop
je
or
or
shl
mov
sub
xchg
mov
nop
mov
mov
jmp
or
shr
sub
shl
sub
mov
cmp
cld
jl
xor
addr16
jmp
dec
dec
sub
xor
xor
mov
movzwl
nop
nop
nop
nop
jmp
dec
dec
mov
xor
or
mov
and
mov
xor
xor
mov
or
ror
sub
mov
rep
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
mov
jecxz
lock
pop
cmp
nop
jne
pushl
rol
or
and
mov
pop
jmp
sub
shr
or
mov
add
mov
movzwl
nop
nop
nop
nop
nop
nop
nop
nop
incl
addr16
add
mov
jmp
incl
push
pop
jmp
or
or
add
mov
shl
mov
jmp
jp
scas
mov
xchg
add
mov
dec
add
sub
pop
inc
or
xor
pop
inc
xor
xor
shr
pop
leave
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
movzbl
nop
nop
nop
nop
nop
incl
push
pop
xor
push
pop
jmp
and
xchg
add
mov
add
xchg
add
mov
inc
mov
inc
mov
dec
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jne
add
mov
nop
nop
nop
nop
nop
cmpl
mov
jne
inc
or
and
add
inc
sub
xor
sub
add
mov
mov
cld
sub
pop
jmp
and
ror
mov
add
shl
shl
mov
ror
sub
and
mov
push
add
pop
add
add
xchg
mov
nop
inc
mov
and
mov
mov
add
xchg
shr
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
int
pop
shr
shl
xor
rol
xor
mov
and
xchg
inc
cld
inc
push
pop
shr
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
je
jmp
add
nop
inc
sub
add
sub
add
pop
push
popl
shl
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lea
nop
nop
nop
nop
nop
nop
nop
nop
cltd
nop
nop
nop
nop
nop
nop
nop
nop
nop
and
xchg
add
nop
xor
cld
sar
nop
nop
nop
nop
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jle
mov
xchg
test
nop
nop
nop
nop
nop
nop
jle
jmp
int
push
test
nop
nop
nop
nop
nop
nop
je
sub
mov
and
mov
jmp
mov
loop
adc
fldt
push
hlt
mov
sub
mov
decl
nop
nop
nop
nop
nop
nop
nop
jne
mov
mov
jmp
sub
push
pop
mov
push
pop
incl
mov
dec
mov
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jne
jmp
jmp
mov
icebp
sub
push
pop
decl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jne
test
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jle
sub
mov
mov
add
addr16
jmp
mov
and
xchg
mov
nop
jmp
call
xchg
test
nop
nop
nop
nop
nop
nop
jne
cmp
nop
jmp
add
xchg
dec
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jne
test
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
jle
ror
nop
nop
nop
nop
nop
nop
jmp
sbb
cmpsb
lea
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
xchg
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
je
or
mov
sub
xchg
mov
and
sub
or
rol
mov
mov
push
pop
jmp
push
xor
xchg
add
xchg
jmp
dec
out
sar
and
xchg
nop
nop
nop
nop
nop
dec
mov
mov
nop
nop
nop
nop
jne
jmp
adc
dec
nop
nop
nop
nop
nop
nop
nop
nop
jne
jmp
mov
aaa
jmp
sub
xchg
jmp
dec
xchg
jmp
jp
ljmp
xor
mov
call
xchg
mov
xchg
push
inc
or
push
ror
sub
mov
xor
pop
rol
sub
dec
test
jne
pop
or
inc
xor
and
dec
mov
call
push
xchg
jmp
cmp
mov
xor
mov
movzbl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
shl
nop
nop
nop
nop
nop
nop
add
cld
incl
xchg
lea
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
jmp
xor
bound
rol
add
and
or
add
mov
xor
dec
or
dec
test
jne
pop
ror
and
mov
shl
mov
mov
call
test
nop
nop
nop
nop
nop
nop
nop
je
call
push
pop
nop
nop
nop
nop
nop
test
nop
nop
nop
nop
nop
nop
jmp
jbe
loopne
mov
xchg
cmp
push
pop
jb
inc
mov
cmp
addr16
jb
inc
xchg
nop
nop
nop
nop
nop
cmp
mov
jae
inc
mov
inc
push
pop
test
nop
nop
nop
nop
nop
nop
je
ror
shl
sub
ror
mov
shl
dec
inc
dec
add
mov
jmp
mov
mov
test
add
nop
nop
nop
nop
nop
and
shr
shr
xor
mov
add
xor
mov
call
mov
mov
dec
dec
or
rol
mov
mov
xchg
jmp
xor
adc
into
xchg
mov
cld
nop
nop
nop
nop
nop
incl
push
pop
dec
mov
jmp
jmp
orl
push
pop
or
and
add
or
or
mov
shl
shr
mov
shr
shr
ror
or
and
add
nop
nop
nop
nop
nop
rep
nop
nop
nop
nop
pushl
nop
call
xchg
pushl
xchg
call
mov
and
mov
xor
or
sub
mov
test
nop
nop
nop
nop
nop
nop
nop
nop
je
pushl
and
pop
jmp
sarb
nop
nop
nop
nop
nop
nop
jne
mov
xchg
xor
cld
jmp
push
push
ror
mov
add
xchg
sub
addr16
jmp
and
shl
rol
sub
sub
mov
sub
addr16
shr
nop
nop
nop
nop
nop
jmp
push
mov
inc
mov
jmp
xor
and
mov
sub
xor
mov
rol
rol
dec
dec
rol
mov
mov
mov
incl
push
pop
incl
push
pop
mov
cld
xor
mov
jmp
lock
mov
leave
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lea
nop
nop
nop
nop
jmp
loop
in
jl
or
xchg
je
sub
and
mov
and
pop
sub
addr16
or
pop
shl
sub
xor
xor
mov
mov
shr
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
jle
mov
xchg
ror
mov
movzwl
nop
nop
nop
nop
nop
nop
nop
nop
nop
or
or
or
or
mov
and
cld
nop
nop
nop
nop
nop
cmp
xchg
jne
nop
nop
nop
nop
nop
and
addr16
add
xchg
add
mov
add
mov
pushl
or
xor
xor
pop
addl
nop
decl
nop
nop
nop
nop
nop
nop
jne
add
xchg
nop
nop
nop
nop
nop
cmpl
addr16
jne
pushl
nop
nop
nop
nop
nop
xor
xor
add
and
sub
pop
mov
xchg
mov
mov
mov
cld
sub
add
mov
push
xchg
nop
nop
nop
nop
nop
call
xchg
push
xchg
nop
nop
nop
nop
nop
mov
xchg
call
cld
nop
nop
nop
nop
nop
mov
cld
nop
nop
nop
nop
nop
test
nop
nop
nop
nop
nop
pop
nop
nop
nop
nop
nop
nop
nop
nop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
je
nop
nop
nop
nop
nop
and
mov
inc
mov
add
mov
lea
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
shl
mov
add
mov
push
mov
call
xchg
cmp
cld
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
je
mov
mov
and
mov
test
nop
nop
nop
nop
jne
ror
mov
xor
sub
add
mov
mov
add
sub
rol
xor
and
add
shr
sub
add
mov
add
xchg
nop
nop
nop
nop
nop
add
xchg
jmp
nop
nop
nop
nop
nop
jns
movzwl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
mov
xor
xor
or
mov
nop
nop
nop
nop
nop
add
xchg
add
xchg
push
xchg
pushl
addr16
call
mov
mov
cld
add
mov
nop
nop
nop
nop
nop
add
push
pop
shl
mov
shr
mov
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jne
nop
nop
nop
nop
nop
add
mov
cmpl
push
pop
jne
pushl
nop
nop
nop
nop
nop
nop
nop
mov
add
sub
ror
pop
mov
cld
and
and
xor
sub
mov
sub
mov
add
mov
push
pop
nop
nop
nop
nop
nop
cmp
xchg
jne
xor
xor
xor
and
add
add
mov
sub
shr
mov
pop
mov
xchg
pushl
and
pop
nop
nop
nop
nop
nop
add
xchg
or
sub
pop
sub
or
pop
leave
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lahf
add
mov
das
xor
inc
ljmp
test
movsl
inc
fcmovb
sbb
dec
and
mov
jecxz
andb
ret
mov
shll
fcomi
icebp
mov
out
loop
in
pop
je
cltd
inc
ljmp
movsb
xchg
shrl
loop
adc
clc
push
lods
add
mov
outsl
pop
roll
addr16
sbb
jo
cmc
adc
into
pushf
lea
clc
pop
popa
xchg
or
pushf
inc
cltd
jnp
pop
aam
jbe
xchg
mov
push
jecxz
push
int
call
push
outsb
pop
xor
sub
aad
push
clc
dec
sbb
jns
inc
jno
shr
popa
ljmp
lret
and
aam
mov
cmc
gs
sahf
fcoml
dec
jp
sub
push
add
fnsave
pushl
lods
in
jne
xor
add
mov
popa
cmp
adcl
clc
or
push
sarl
push
fbstp
scas
inc
dec
add
test
push
jl
sbb
out
int3
push
add
test
int3
xchg
mov
aaa
mov
mov
out
les
popa
and
xchg
pop
lret
nop
adc
mov
pop
pop
xchg
lcall
and
pop
mov
lea
xor
rorb
mov
popf
pop
mov
adc
or
mov
pop
push
cmp
shr
cmp
mov
out
sti
into
mov
cmp
xor
cmp
inc
pop
sbbl
or
sbb
popa
dec
or
sbb
ret
es
xor
insb
adc
mov
adc
mov
leave
cmp
mov
mov
cld
frstor
mov
pop
cmp
addl
mov
xchg
cli
in
scas
jae
inc
.byte
sbb
pop
adc
aad
mov
stc
dec
push
aas
iret
sahf
data16
loope
mov
push
negb
stc
jno
lds
sbb
inc
pop
cmp
or
test
cld
loop
xchg
sub
xchg
jae
or
scas
in
cs
stc
popf
push
in
lret
sub
xor
out
sbb
sbb
mov
or
sbbl
movsb
loopne
movsl
or
mov
enter
mov
out
adc
stos
pop
or
enter
adc
das
insb
addl
scas
sbb
jg
cld
adc
stc
pop
jbe
nop
xor
ja
pop
enter
aas
test
mov
enter
add
std
pop
jae
xor
addr16
data16
push
shlb
es
cmp
add
incb
or
push
hlt
pop
aaa
cmp
mov
sbb
aaa
inc
aas
sub
and
arpl
inc
adc
xchg
mov
push
ja
push
and
out
daa
int
fistps
negb
shl
add
mov
push
idivl
xchg
lea
mov
add
cmp
push
sbb
cmp
push
add
xchg
sahf
sbb
xlat
push
inc
arpl
sarb
cmp
xchg
fsub
pop
popa
rol
adcl
xor
jmp
jnp
ja
mov
daa
aaa
xchg
cmpl
xchg
sarb
sub
pop
xchg
sbb
jp
pop
fidivl
mov
cmp
dec
test
mov
inc
mov
cwtl
lcall
daa
dec
pop
push
rorb
mov
jmp
call
in
roll
mov
sub
sbb
mov
push
sarl
add
lea
mov
sbb
or
ss
dec
mov
pushf
repz
mull
jne
loope
adc
dec
dec
decl
je
pop
lea
out
bound
mov
push
movsl
lods
dec
sbb
mov
fdivl
mov
and
push
aam
jno
jae
popf
in
push
cs
cmpsb
call
data16
xchg
int
mov
push
cld
pop
clc
mov
cmp
std
cmp
adc
jnp
ret
sbb
rcll
scas
inc
mulb
pushf
sarl
or
ret
sbbl
cmp
orb
sbb
cmp
mov
scas
cli
jno
cmp
and
xor
fcomi
in
pop
push
adcl
rcr
jle
negl
xor
dec
mov
das
inc
inc
and
mov
ss
popa
and
push
divl
iret
das
jnp
add
push
mov
inc
dec
mov
adc
shll
iret
adc
into
das
insb
mov
imul
loopne
test
lahf
xchg
pop
push
ret
jns
cwtl
into
gs
pop
dec
popa
movsb
sti
fbld
inc
pop
jnp
adc
imul
xchg
mov
add
xchg
push
cmp
jmp
not
rol
push
dec
addr16
pop
popa
bound
adc
xchg
bound
xchg
dec
dec
push
jge
cltd
std
popa
and
fisubrl
xchg
mov
mov
xor
mov
sti
sbb
in
sbb
outsb
lods
mov
adc
mov
cmp
cltd
jnp
add
push
push
lods
jg
je
cmp
sbb
sbb
aad
xchg
dec
xor
sbb
xor
loope
xor
aaa
bound
push
sahf
mov
jbe
push
xor
xchg
jnp
cmc
ds
gs
mov
sysret
mov
aam
sbb
and
loope
je
int3
ficomps
lock
xchg
ror
mov
insb
or
adc
jae
stc
mov
mov
aaa
adc
jle
in
dec
jg
cmpsl
cli
fsts
sub
mov
loop
aam
and
xchg
mov
into
jg
xor
imul
pop
movd
aaa
mov
jb
dec
xchg
and
mov
das
rolb
iret
dec
fdivs
pop
inc
pop
lret
mov
lea
and
sahf
in
mov
sbb
fmuls
add
stos
repnz
pop
jge
lahf
add
mov
xor
sahf
push
dec
pop
fdivr
push
mov
jl
in
push
mov
xor
add
inc
jae
inc
sti
jno
xchg
pop
cltd
jmp
jne,pt
dec
js
pop
xchg
hlt
mov
mov
adc
ret
repnz
shll
or
jo
push
fwait
in
mov
jns
popa
push
dec
and
mov
xor
xchg
fwait
sub
shrl
outsb
jp
xchg
jle
jmp
inc
jg
shl
and
lea
jp
adc
xor
sbb
jmp
dec
sub
fdivrl
lods
jae
cmpsl
fbstp
inc
push
repnz
out
push
push
mov
lret
mov
cmp
jae
adc
xor
sub
aas
add
iret
pop
mov
sbb
shld
lea
sahf
sahf
lea
loopne
call
movsl
outsb
jns
mov
mov
mov
or
sub
negl
xchg
pop
mov
push
out
inc
rcll
push
ljmp
jp
cmpsl
mulb
fldt
popf
loopne
jl
fcompl
sti
shlb
aad
popa
sti
inc
andb
imul
enter
jne
jnp
cli
add
arpl
sti
and
clc
aas
cmp
xchg
lcall
repz
ret
adc
cmp
in
scas
testl
push
arpl
jae
jge
add
pop
jnp
jmp
call
push
add
stc
xlat
mov
inc
mov
mov
into
mov
jg
lock
mov
and
pop
cwtl
sub
stos
xchg
mov
cmp
repz
cwtl
aas
popa
out
stos
mov
pusha
push
sub
andb
lods
int3
jne
add
cmc
idivb
ss
push
lods
jecxz
jns
ret
push
push
push
stos
xchg
jae
dec
in
and
dec
mov
mov
dec
or
cmp
pop
clc
movl
addr16
ds
std
pop
pop
push
cmpsl
hlt
and
dec
dec
fxch
mov
push
and
push
adc
adc
cld
andl
das
xor
frstor
adc
cmpsb
dec
adc
or
sahf
and
inc
sbb
sbb
jmp
aad
cmp
jmp
sbb
fwait
mov
sub
fistps
movsl
adc
pop
sbb
ret
in
mov
add
adc
insb
out
push
mov
stos
je
jno
xor
je
sub
mov
in
lock
xor
cs
in
mov
inc
adc
imul
lcall
pop
movsl
adc
in
out
leave
inc
movsb
cmp
and
int3
mov
lret
push
jge
sub
das
in
lahf
loop
test
mov
and
mov
jno
jae
in
mov
js
insb
movsb
icebp
mov
test
test
mov
lea
std
addr16
aaa
lcall
and
pop
mov
outsl
sbb
hlt
push
lret
ja
test
add
xor
mov
jg
sbb
mov
loopne
xchg
cmp
jle
adc
xor
in
lea
lret
inc
add
dec
cmpsl
jecxz
sub
fistps
mov
cmp
cmp
or
or
mov
mov
scas
ret
movsb
cmp
lock
or
fmuls
jle
inc
sub
insb
adc
inc
add
lods
cmp
repz
andb
or
cltd
test
clc
enter
push
mov
cmc
aas
bound
enter
clc
mov
dec
push
fabs
imul
in
mov
out
jg
ret
inc
inc
add
jne
cmp
decb
adc
pop
cli
in
jb
cvttps2pi
mov
jl
push
sbb
xchg
mov
dec
push
inc
idivl
xchg
sbb
sub
jmp
adc
jmp
pusha
shrl
pop
jle
adc
insb
lret
pop
inc
push
les
sub
xor
aaa
or
add
ja
mov
jbe
stc
sets
cmpsb
inc
rcll
shrl
addr16
ljmp
repnz
push
mov
jp
mov
adc
sbb
mov
xchg
mov
jnp
cmc
call
sbb
or
or
pop
imul
jecxz
and
test
mov
push
loop
sbb
jbe
bound
je
push
xor
cmp
mov
adc
mov
push
cmp
fisubrs
lahf
insb
shrl
bound
stos
je
test
add
loop
pop
in
dec
push
xor
mov
ss
dec
in
jbe
push
inc
aad
push
sub
or
out
inc
fstpl
sub
xchg
xor
sub
pop
int
fsts
cmp
fiadds
and
lds
movsb
fidivrl
movsb
add
rcrb
insb
push
mov
or
jg
or
push
scas
xor
mov
js
lret
and
lods
bound
push
leave
add
sbb
daa
andb
outsl
mov
push
pop
mov
lock
inc
push
loope
mov
pop
mov
addb
mov
or
sahf
jb
iret
push
daa
dec
jo
out
sub
arpl
test
mov
mov
outsb
notl
shlb
lock
ds
push
sub
fistpl
out
cmpb
movsl
aad
movsl
test
test
mov
xchg
add
and
add
add
jecxz
fists
loop
mov
adc
push
cwtl
push
cmp
test
sbb
push
pop
push
pushl
push
repz
push
adc
aam
fldt
dec
mov
std
push
mov
fsubl
jo
jmp
inc
sub
pusha
mov
pop
clc
push
cld
leave
and
dec
je
addr16
scas
dec
popf
xor
mov
adc
lock
cld
add
sbb
jae
movsl
mov
mov
sbbl
arpl
mov
loop
adc
inc
pop
adc
lods
pop
dec
jo
mov
mov
std
xchg
out
call
imul
push
stos
jbe
pop
iret
pop
in
cmpsl
cwtl
adc
jg
std
lods
mov
and
jp
push
call
xor
ret
add
mov
push
lods
cmpsb
cmpsb
jno
adc
int3
lods
pop
pop
mov
xchg
jo
mov
push
addr16
xchg
mov
pop
inc
mov
pushf
push
sub
ljmp
pop
fxch
pop
pop
roll
lret
in
xchg
fcompl
repnz
adc
jbe
add
hlt
loopne
loop
xor
xchg
fisubl
mov
and
mov
adcl
fmuls
stos
lods
in
xchg
rcll
jge
cmp
and
scas
ret
inc
lcall
mov
into
sbb
ror
lret
fs
or
jo
test
adc
movsb
cld
adc
cmpsl
jae
adc
xor
int3
shlb
xchg
pop
cmp
push
fistl
or
shrb
loop
lret
or
sub
inc
test
lcall
ja
mov
aas
and
notl
mov
mov
in
xchg
stos
out
scas
nop
mov
pop
aad
add
inc
fcomps
rclb
arpl
dec
xchg
sbb
adc
cmpsb
cmp
aaa
jmp
stos
and
push
add
pop
ss
push
out
lret
sbb
xchg
adc
ss
sbb
sub
adc
or
add
push
and
jp
in
or
jg
hlt
or
out
add
adc
js
mov
and
jl
or
push
das
adc
sub
outsb
movsb
out
cmp
mov
mov
pushf
and
inc
fistpll
mov
jae
push
adcb
mov
sarb
int3
inc
sbb
or
add
pop
icebp
xor
push
dec
dec
sbb
lods
fbstp
pop
pop
cmpsl
dec
test
xchg
call
mov
adcb
push
push
adc
insb
or
popf
inc
out
mov
ljmp
lock
nop
sahf
fildl
gs
adc
adc
in
ret
dec
push
mov
movsb
and
into
mov
gs
mov
subb
test
cli
lret
add
negb
outsl
mov
add
out
jl
int3
push
pop
test
jmp
xor
cwtl
scas
lock
or
sub
enter
leave
sub
daa
and
xor
int3
and
mov
loope
out
adc
lods
cmc
pop
xchg
ds
out
sbb
call
ljmp
shrl
xor
dec
dec
lea
and
and
pop
jnp
loopne
scas
pop
or
outsl
mov
mov
mov
xchg
dec
push
lock
add
pop
dec
mov
sub
adc
jg
fidivrs
xor
sti
xchg
xchg
jne
out
xor
icebp
shr
shl
sub
andl
test
cmp
dec
pop
push
std
hlt
shll
jp,pn
adc
xor
nop
cmpsb
xchg
adc
push
add
xchg
int
mov
mov
pop
inc
inc
dec
cmc
pop
out
in
icebp
je
popf
sbbb
sti
pushf
ret
xor
sbb
stc
cld
mov
in
mov
dec
xchg
adc
jp
imul
stos
stc
mov
cld
mov
ss
mov
and
pop
sbbb
or
clc
stos
lcall
ja
xor
dec
out
xchg
mov
mov
data16
xchg
mov
push
xchg
push
mov
jp
adc
popf
arpl
js
testl
aaa
mov
adc
push
or
daa
and
ret
pop
cmp
cmp
hlt
repz
fstpt
push
xor
das
push
mov
inc
pushf
pusha
lods
icebp
xchg
in
iret
fstl
pop
add
pop
sub
loopne
inc
shl
nop
inc
outsb
cli
pop
mov
fs
int
cmpsb
sub
popf
ret
data16
scas
sbb
lds
in
aad
movsl
out
lods
xor
inc
push
fcoms
xchg
adc
out
sub
cli
in
cli
inc
out
cmp
pop
andb
sbb
cmpb
cmp
push
push
and
in
pop
xor
xor
jns
shll
xchg
ficoml
fsubrs
xchg
in
jns
and
xchg
mov
or
dec
jg
insb
pop
push
xor
xchg
ficoms
fdivr
outsl
dec
pop
lds
scas
and
dec
pop
xor
pop
andb
les
and
test
sbb
fmull
pop
mov
xchg
inc
test
int
pop
cmp
pusha
fisubrs
push
xchg
inc
mov
jne
and
and
dec
shll
dec
sti
out
movsb
or
out
dec
aam
lea
and
cmpsb
or
lods
pop
dec
movsl
les
aam
mov
inc
loope
test
mov
adc
mov
push
sbb
cmp
div
sub
jg
dec
xchg
fcmove
in
enter
stos
xchg
sbb
or
popf
jb
icebp
jl
cmp
mov
xor
cmp
into
cwtl
push
dec
pushf
cmp
dec
mov
sub
mov
mov
and
xor
inc
aad
jecxz
fdivl
pop
out
xchg
push
les
cmp
push
xor
leave
in
mov
shll
jle
sub
outsl
cwtl
fisubs
iret
add
sub
clc
mov
outsb
repz
dec
adc
testb
popa
cs
movsl
lret
pop
cmp
xchg
jb
cmpsb
mov
dec
jnp
dec
sub
lods
pusha
sbb
cmc
jo
insb
sub
xor
popf
mov
inc
mov
cmp
xchg
clc
outsb
mov
dec
jecxz
in
xchg
lret
jl
flds
dec
cmp
jl
xor
in
shll
sub
call
cmc
int
cmpsl
in
lds
movsl
aas
sub
sub
test
into
or
xchg
push
inc
add
sub
xchg
es
frstor
sahf
in
cmp
mov
iret
fnstsw
fmul
fstpt
mov
xchg
push
push
cld
aad
inc
pop
mov
xor
mov
popf
pop
sub
sub
jne
in
js
ror
jbe
movsb
jb
shrl
rorl
addb
xor
nop
lea
loopne
ficomps
ret
ret
idivl
sbb
lret
sub
sbb
negb
notl
jne
aaa
and
jmp
sub
mov
scas
rorl
pushf
lea
in
mov
inc
sbb
or
add
xor
xor
ja
sbb
push
jnp
mov
in
sub
lods
mov
push
out
test
jae
lods
nop
lcall
sbb
mov
pop
add
and
dec
mov
pop
les
mov
loopne
mov
fmuls
fcom
sbb
adc
stos
mov
mov
out
sub
std
loop
and
hlt
xlat
aam
pop
adc
mov
int3
mov
nop
xchg
mov
mov
in
and
gs
or
inc
call
add
pop
fistpll
shll
ds
jge
inc
ljmp
out
sub
and
push
ds
or
dec
mov
mov
inc
dec
inc
scas
adc
ja
and
daa
sbb
pop
js
xchg
into
xchg
push
std
pop
outsl
test
mov
push
jo
pop
faddl
mov
push
shlb
jge
cld
sub
mov
mov
mov
insl
aad
shr
ret
pop
xlat
sbb
sub
mov
cld
inc
mov
call
xchg
cmpb
mov
xchg
aam
loopne
out
out
repnz
sub
mov
test
pop
jge
adc
dec
in
and
xchg
jae
mov
shlb
stos
sub
in
int3
push
pusha
bound
out
int
mov
mov
fs
add
stos
add
push
lods
pop
lds
cmp
in
sbb
push
xchg
loopne
enter
repz
cmpsb
ja
loope
jno
jge
popa
mov
dec
int3
loop
mov
add
mov
push
popa
mov
jle
sub
fisubl
cli
cmp
push
dec
repz
cmpsl
leave
xlat
cmp
mov
fisttpl
mov
mov
dec
loope
arpl
jg
nop
xor
and
and
lods
in
push
pop
lods
and
xlat
sub
scas
orl
add
and
negl
aaa
mov
sbb
data16
loopne
adc
mov
int3
and
push
push
cmpsb
pushf
jmp
rclb
mov
enter
pop
stc
mov
xchg
cmp
inc
fstpt
mov
testb
ljmp
stc
lret
mov
push
add
fsubrs
push
sub
mov
enter
pop
out
bound
sarb
test
mov
lock
dec
pop
inc
adc
in
pop
push
je
imul
ret
xadd
outsl
addb
sub
fmuls
pop
mov
push
jl
les
sar
dec
pop
movb
pop
xchg
jmp
xchg
and
ficompl
and
test
lods
push
dec
fwait
sub
push
ret
adcl
inc
mov
test
dec
xchg
nop
jl
pop
sbb
cmp
push
out
stos
int3
mov
xor
pop
mov
sbb
mov
cmp
stos
dec
cmc
in
mov
mov
mov
mov
xor
dec
push
cmp
out
xor
outsl
pushf
sti
sub
mov
sub
pop
adcl
test
gs
lahf
xorb
cmp
aaa
shr
pop
mov
insl
fdivrp
or
out
cmpsb
rolb
les
inc
aas
hlt
inc
mov
mov
fcoml
pop
insl
out
xchg
cmp
mov
mov
jecxz
jne
in
popf
call
mov
pop
stos
repnz
dec
insl
dec
scas
out
into
and
insb
dec
cmp
in
fs
push
ss
inc
or
out
cmp
inc
jnp
pushf
pop
daa
ret
into
into
repz
mov
mov
and
dec
scas
movsl
addl
dec
pop
and
mov
sbb
inc
jecxz
push
mov
jge
ds
mov
dec
sbb
cmpsl
ret
push
inc
sub
fistpl
cmc
cmp
das
mov
jecxz
xchg
mov
mov
adc
pusha
lock
sti
pop
inc
lahf
in
mov
repnz
xor
cmp
inc
and
jns
mov
hlt
js
hlt
xchg
cmp
sti
mov
mov
outsl
sbb
adc
sub
js
mov
jae
cmpb
and
mov
pop
sub
adc
mov
sbb
leave
mov
imul
xor
mov
insl
adc
ret
sti
adc
js
mov
sub
fs
jle
dec
pop
cmp
lods
mov
fcomps
std
add
push
into
scas
xchg
fstps
push
pop
jmp
repz
xor
das
push
repz
iret
push
inc
mov
cltd
jmp
fwait
scas
push
adc
dec
faddl
mov
mov
sub
paddd
icebp
sbb
adc
jbe
stc
div
lods
fcompl
lcall
xor
loopne
jns
loopne
push
movsb
pop
xchg
faddl
pop
push
in
cmc
aas
addl
adc
cmp
inc
add
ss
jle
mov
push
insb
ret
and
dec
adc
xchg
pop
mov
pushf
xor
mov
insb
xor
mov
sbb
outsl
or
ja
test
adc
lahf
ret
cmpl
and
add
add
dec
daa
adc
add
popf
adc
cmpsb
ret
sbb
inc
lock
xorb
les
mov
outsl
pop
movsb
fisttps
xor
sub
jg
popa
xchg
movsl
pop
shlb
xor
cmpsb
sahf
inc
fcomp
or
cmp
cmpsl
popf
inc
out
xchg
pop
mov
repz
int
imul
jnp
and
push
popf
xchg
das
imul
scas
xchg
test
xchg
lods
popf
cmpsl
ljmp
or
mov
fcmove
int
or
mov
scas
mov
pop
or
insb
mov
addr16
mov
lret
or
mov
pop
push
adcb
and
dec
dec
mov
dec
inc
xchg
pushf
aas
cli
and
jp
lret
stos
in
sahf
nop
pmuludq
sti
sbb
aas
pop
mov
sbb
cltd
into
sbb
repz
mov
inc
mov
jle
xchg
test
out
aam
and
xchg
pushf
push
out
ret
pop
jg
mov
in
sbb
incl
jle
fidivs
aam
jae
jbe
cmp
prefetch
xor
orl
lods
cmp
cwtl
insb
dec
pop
aad
jo
cwtl
xchg
dec
mov
sar
push
sub
js
imul
call
or
and
sub
fwait
cmp
mov
aam
dec
or
out
xchg
push
mov
loopne
ret
frstpm(287
jp
push
aaa
mov
sahf
test
and
mov
mov
lret
orb
adc
mov
or
jecxz
jo
sbb
jge
dec
xchg
push
ret
cmp
mov
loope
push
testl
inc
push
std
out
xor
sbb
out
xor
test
subb
sub
bnd
dec
xor
ret
out
dec
mov
cmpsl
xchg
or
repnz
rorb
fnsave
das
push
daa
shr
sbb
pop
mov
sbb
fstps
aas
cwtl
jmp
inc
adc
out
pop
enter
nop
stos
lahf
xchg
mov
pop
daa
int
xchg
test
jns
mov
stos
cmpb
add
in
push
sbb
ja
inc
fnsave
test
adcl
scas
outsl
fs
sub
mov
repz
adc
fwait
or
iret
push
sbb
ffreep
pop
dec
call
push
adc
les
inc
daa
test
aaa
lcall
push
mov
pop
dec
or
fcoml
fldt
aam
sbbb
ds
cmc
xchg
pop
jl
les
mov
jmp
xor
lea
aad
cltd
inc
out
idivl
outsl
outsb
sbbb
inc
ret
cmp
and
std
dec
movsb
jg
add
or
insb
pop
dec
mov
xor
dec
xor
mov
stc
jno
push
sub
sbb
jmp
stc
add
jns
sbb
cmpsl
adc
les
xorb
addb
sub
dec
ffree
sahf
ret
mov
cli
clc
movsl
pusha
add
and
xor
in
inc
sbb
test
mov
cltd
sbb
fistps
jmp
sub
ss
ret
sub
dec
pusha
out
into
or
xchg
jecxz
movb
push
test
mov
adc
dec
jb
push
cmp
out
or
pop
addr16
insb
push
inc
loope
adc
movsb
cmp
inc
fbld
int3
and
fcom
inc
mov
sbb
xchg
cltd
fwait
push
xor
xchg
jle
mov
mov
push
and
hlt
mull
sbb
jmp
push
cmp
push
mov
roll
fnstcw
mov
loopne
xlat
xchg
test
das
jb
xor
push
xchg
cmp
pop
jge
ds
jns
mov
jl
add
inc
xchg
inc
sti
push
jne
xor
jmp
popa
and
leave
mov
test
iret
bound
xchg
and
mov
dec
mov
leave
cmp
popa
clc
lock
iret
insb
push
out
jp
mov
jle
and
cmpsl
mov
xchg
mov
inc
arpl
jae
mov
out
ljmp
or
test
clc
stos
scas
mov
test
ljmp
leave
int
rorl
jae
movsb
sti
xchg
ja
cmp
jmp
lea
jle
pop
or
rcrb
mov
testb
fwait
push
dec
cltd
pushf
jmp
cmp
fidivs
mov
lret
lods
rcrl
mov
fidivrs
pop
pop
xchg
or
sahf
leave
les
inc
bound
loope
je
sbb
clc
mov
rorl
int3
sub
or
daa
daa
inc
lea
cmp
out
mov
jo
out
enter
scas
out
push
aam
nop
popa
or
add
fnclex
test
mov
cmpsb
aaa
adc
mov
cmp
and
sbb
fdivrp
jnp
mov
call
int3
and
cmp
test
outsl
lcall
negb
sub
lock
add
and
aas
sbb
cmp
outsl
mov
bound
jbe
sbb
fwait
adc
xchg
pop
cmp
mov
imul
sub
add
add
daa
push
outsb
daa
mov
push
pop
stos
mov
jmp
xchg
push
xchg
add
into
std
lret
dec
fcom
dec
ds
pop
xchg
inc
xchg
pop
mov
xchg
repnz
in
or
fwait
mov
orb
cmpb
add
xor
push
and
mov
ret
lret
lods
in
inc
xchg
in
mov
inc
inc
dec
in
xor
dec
push
stos
xchg
ja
jl
mov
dec
aam
fisttps
movsl
sbb
fsubs
pop
push
jp
int
and
push
jo
mov
lahf
in
dec
mov
pushf
jb
filds
mov
push
mov
dec
inc
ret
mov
cmc
fwait
mov
mov
push
hlt
frstor
pushf
pop
push
loop
mov
test
or
out
shlb
xchg
jmp
sbb
pop
lds
inc
fldt
movsb
outsl
shlb
iret
lods
fists
mov
dec
scas
or
cltd
mov
mov
or
ret
mov
test
push
faddp
mov
jno
or
in
xchg
insl
pop
scas
xor
insl
insb
dec
push
pushf
rorb
inc
sbb
push
subl
xchg
hlt
xor
popf
cmp
add
add
xchg
push
sbb
xchg
xchg
jae
in
and
mov
inc
imul
sub
pop
cmp
push
sub
lahf
cli
mov
fdivrs
int3
fdivrp
test
fildll
pop
inc
mov
daa
rolb
mov
lret
push
adc
lods
mov
lds
push
sbb
aas
dec
testb
mov
mov
dec
ret
rorl
repz
adc
scas
add
xchg
xor
mov
les
sub
clc
nop
mov
jns
out
mov
cmp
testl
ret
mov
add
xor
outsb
outsb
sub
cld
outsl
loop
les
xor
fmuls
test
stos
stos
pop
dec
pop
dec
pop
pop
ficoml
push
outsb
fisubl
and
mov
pop
outsb
test
mov
cli
insb
lds
push
xstore-rng
cmpsl
inc
rcr
mov
xor
dec
xchg
xchg
das
stos
lods
or
sti
in
daa
mov
ror
js
int
mov
testb
test
xchg
mov
pop
mov
lods
jo
cmp
aad
fld
shll
filds
mov
mov
sbb
std
pusha
cmp
mov
sbb
and
lods
mov
dec
cmpsb
ficompl
popl
pop
jl
rorb
lahf
test
test
sub
test
int3
pop
adc
push
addr16
imul
je
popa
sti
or
inc
cwtl
fmuls
mov
inc
push
xchg
jge
lret
adc
cltd
inc
sub
pop
mov
ja
clc
insb
pop
fnstcw
inc
jnp
or
sub
sub
mov
aas
leave
xchg
ret
repnz
inc
inc
loope
add
fistpll
push
hlt
inc
push
mov
mov
notb
test
xchg
punpckhbw
cld
fwait
cmp
adc
xor
adc
mov
sbb
mov
ss
jnp
aaa
fcomi
jae
or
mov
lds
pop
or
xchg
dec
mov
cmp
sbb
imul
cmc
add
mov
push
xor
mov
addl
sbb
inc
icebp
mov
xor
jo
dec
xchg
notb
and
je
lods
jb
nop
lods
mov
mov
xlat
rcrl
jbe
scas
lret
jnp
xlat
int
inc
sub
insl
jbe
lods
pop
mov
cld
mov
push
xor
daa
push
dec
pop
arpl
mov
rol
jg
lret
sub
pop
or
jge
mov
dec
xchg
inc
mov
or
insl
iret
inc
sub
int
mov
push
sub
sub
inc
mov
push
pop
clc
jae
pop
cs
pop
scas
jecxz
or
call
xchg
push
pushf
add
push
sahf
xor
in
repnz
jns
sbb
lds
inc
and
sub
bound
ljmp
dec
pusha
mov
xchg
gs
add
mov
add
loop
cli
or
cmp
repnz
inc
push
mov
leave
cmc
mov
out
sbb
test
and
rcl
movsb
jle
rclb
dec
sbb
xor
cld
mov
mov
xor
xor
adc
mov
lods
imul
gs
cmp
adc
xlat
subb
addr16
push
add
xor
fsubrl
xchg
xor
inc
sbb
dec
jg
jae
in
push
lods
jp
adc
stc
jl
and
push
mov
push
sub
push
rclb
sub
in
in
dec
mov
lret
sahf
and
cmpsl
iret
lahf
xor
lods
scas
adcb
add
pop
cmp
adcl
mov
cmp
and
js
in
mov
xchg
xchg
test
insl
pop
dec
add
into
pusha
pop
push
xor
das
adc
mov
pusha
iret
xchg
pushf
dec
mov
mov
loope
lds
negb
push
jmp
push
dec
leave
pop
sub
sub
pop
fiaddl
cmp
and
cmp
cmp
jge
shll
or
inc
cmp
test
push
push
pop
xchg
iret
imul
pop
push
fidivrl
xchg
js
adc
icebp
enter
add
push
inc
add
or
jmp
aam
jb
fcomps
push
jo
xchg
or
mov
test
add
push
push
jae
stc
push
add
mov
or
sbb
cmp
sar
dec
sub
in
fldl
aas
pop
shl
enter
movsb
dec
aaa
scas
add
add
fsubrs
push
mov
push
cmp
cmp
das
cltd
aaa
lea
addr16
repnz
inc
imulb
jnp
cmp
inc
push
xor
mov
jmp
sahf
repnz
cmp
xchg
xchg
mull
setb
or
sub
jo
lods
adc
jmp
jge
jae
int3
mov
arpl
lahf
inc
stos
scas
fs
ljmp
scas
mov
loopne
lret
sub
mov
repz
and
pop
imul
ds
xchg
out
mov
ljmp
ret
push
or
add
in
cmp
mov
ljmp
cmp
sbb
or
pop
lods
cmp
rolb
and
mov
jl
adc
sub
fisubrl
lods
lahf
pushf
xor
mov
int3
test
pop
sub
cltd
xchg
jb
adc
and
clc
popf
push
pushf
add
and
push
mov
int
int
sbb
inc
xchg
cmp
fldt
es
in
mov
dec
in
mov
fcmovnbe
popf
stc
movsb
lret
scas
shl
sub
jmp
pop
lods
lock
imul
mov
data16
mov
jae
popf
cmp
jmp
fcoml
mov
mov
dec
sub
imul
pusha
call
cld
add
sarb
and
js
aad
dec
xchg
inc
jno
push
rorb
movsb
cmp
xchg
lods
sub
mov
mov
movsl
jp
out
push
roll
add
and
xchg
das
leave
push
pop
arpl
pop
push
and
xor
testl
sarl
data16
fdivrs
ss
in
in
add
and
mov
cmp
jno
pop
or
movsb
sahf
popa
in
int
jne
jmp
int3
mov
sub
mov
jnp
insl
sub
xor
dec
push
adc
lds
in
xor
jno
dec
test
adc
and
fidivs
cwtl
inc
xchg
pushf
add
jle
das
icebp
in
xchg
add
mov
push
enter
mov
sti
jno
pop
orb
pop
mov
or
popf
sahf
and
je
sbb
loop
sti
nop
jecxz
ja
add
xchg
push
enter
inc
mov
arpl
cmp
or
pop
js
pop
ds
mov
adcl
add
jp
push
push
or
fwait
in
lret
sahf
push
jae
sub
addl
add
push
es
xchg
outsl
jl
adc
push
cmpl
leave
daa
movsl
ss
lods
inc
sub
pop
sub
test
mov
xchg
cmpsl
stc
ror
cmpsb
or
adcb
pop
insl
insb
and
push
jecxz
jge
mov
sub
push
hlt
fidivrl
pop
das
xlat
jg
pop
dec
jmp
aas
je
iret
iret
xchg
rorl
adc
mov
mov
hlt
push
jge
daa
sahf
cld
xchg
push
sti
neg
movsb
inc
lcall
jo
jno,pn
stos
loop
pushf
pop
sarl
fwait
lea
push
es
jge
out
jge
mov
test
iret
cmpsl
push
xor
pop
test
lds
jmp
ss
xchg
mov
adcl
stc
popf
mov
cmp
iret
cltd
sub
ljmp
dec
xor
mov
rcl
push
test
sbb
pop
inc
popa
xchg
mov
notl
ljmp
leave
lahf
jmp
inc
jmp
add
bound
mov
aaa
add
test
mov
dec
insb
stc
mov
mov
pop
add
arpl
adc
les
xor
fldcw
fcomip
sarb
sub
sbb
sub
fsubs
lods
inc
sbb
sub
push
nop
xchg
aam
pop
xlat
jmp
repnz
fildl
xchg
loope
outsl
and
mov
sub
ja
sti
pop
sti
ret
lods
je
pop
ja
sub
inc
push
scas
sbb
cmp
push
mov
fs
xchg
and
ret
add
inc
int
dec
jae
mov
mov
and
out
or
xor
aas
adc
or
shrb
in
ds
mov
out
orl
cmp
out
mov
in
sarb
mov
dec
xchg
sub
addr16
cmp
push
jno
pop
sahf
sahf
mov
loopne
dec
sbb
or
ljmp
jle
imul
enter
adc
scas
lods
pop
mov
call
scas
push
das
cmpsl
or
in
dec
pushf
loop
inc
xorb
outsl
jb
push
into
ja
xorb
pusha
or
adc
dec
out
icebp
add
jns
in
lds
scas
inc
pop
pop
mov
sbb
mov
dec
jmp
inc
aas
cmp
inc
jo
imul
dec
ss
lds
xor
lahf
std
cmc
dec
mov
adc
push
xor
in
and
mov
scas
test
push
fisubs
sbb
dec
adc
cs
cmp
fwait
push
sahf
sbb
mov
inc
add
xchg
not
inc
inc
stos
mov
jg
sbb
enter
cmpl
dec
jbe
jmp
jae
adc
xchg
push
adc
pop
jge
mov
loop
push
hlt
xchg
std
mov
adc
dec
mov
ss
dec
les
adc
and
dec
mov
mov
gs
fistps
mov
es
lea
dec
ss
std
jmp
insb
fcom
sbbb
jae
mov
or
add
bound
mov
mov
int
xlat
call
mov
xor
hlt
xchg
push
pushf
pop
out
or
bnd
imul
mov
shrl
jle
or
push
cltd
popa
gs
lret
jg
add
sub
rol
dec
cmp
sbb
mov
and
pop
sbb
out
repz
fs
push
cld
aaa
mov
fistl
add
cmc
xchg
dec
sarb
sahf
or
ljmp
icebp
cmp
xchg
insb
sub
roll
cwtl
inc
cmp
rcrb
inc
sahf
inc
adc
pop
push
jb
mov
loope
idiv
rcrl
ljmp
gs
and
jle
sub
jne
mov
out
push
mov
xchg
lret
xor
jg
pop
repnz
push
push
fisubs
add
nop
outsl
imul
cmp
repz
mov
cs
jecxz
sub
mov
adc
adc
lds
adc
mov
add
cmp
sbb
jle
sbb
ds
mov
ja
push
and
mov
sub
inc
popf
sbb
sub
xor
sub
xchg
das
and
adc
jmp
ret
clc
movaps
mov
jecxz
ds
mov
mov
xor
lcall
mov
int3
add
add
push
shrb
sbb
mov
push
mov
dec
jo
test
xchg
cwtl
int
leave
dec
mov
bound
cmp
ret
mov
xor
push
add
es
cmp
aad
jo
sub
mov
std
mov
push
lret
push
add
pop
imull
push
out
sbb
mov
loopne
arpl
inc
adc
and
dec
pop
aas
add
into
in
inc
jb
shl
inc
jae
out
out
scas
add
fwait
insb
lods
adc
mov
cmpb
add
movsb
and
mov
or
xchg
jo
xchg
pop
and
cmp
cltd
fstpl
mov
sub
xor
in
jle
in
stos
push
jp
cmpsb
mov
cmp
push
je
add
mov
out
scas
mov
popf
lret
adc
lret
and
repnz
in
xchg
or
adc
fstl
lock
xor
cltd
jae
fstpl
or
popa
sti
stos
repnz
jns
xchg
and
movaps
cmp
ljmp
push
and
test
dec
mov
add
outsl
mov
and
and
pop
addr16
pop
sub
push
adc
imul
jne
test
pop
aad
call
or
sub
bound
inc
loope
inc
inc
sti
sarb
ljmp
pop
loope
fabs
mov
in
sbb
adc
xor
cltd
jne
lock
pop
mov
sub
arpl
inc
dec
mov
pop
pop
pop
add
sub
ja
test
imul
ds
mov
mov
rorb
sub
cmp
sub
xchg
mov
xor
outsb
mov
sbbb
add
xchg
dec
adc
jbe
cli
ja
popf
jle
rcl
stos
repz
pop
in
dec
inc
sbb
mov
add
clc
jmp
and
hlt
rcl
popf
sub
pop
inc
addr16
push
and
fldl
xor
push
xor
xchg
lcall
fcmovnbe
push
pop
cmp
xchg
jbe
push
out
xchg
ret
mov
outsb
cmpsb
nop
push
sub
xchg
xchg
gs
jb
jae
je
mov
ret
cmp
xchg
sbb
adc
sbb
shlb
push
mov
add
mov
lds
lret
push
and
add
cmp
xor
std
add
adc
add
shll
arpl
ret
and
mov
shl
jne
scas
mov
and
adc
or
in
adc
scas
jb
loope
mov
sahf
mov
inc
mov
scas
fs
xor
add
jno
psraw
cmp
pop
push
jp
pop
mov
nop
flds
pop
addr16
cmpl
call
cli
aam
repz
push
inc
mov
jecxz
mov
repnz
hlt
cmp
add
call
pop
inc
in
mov
test
stos
inc
xor
sbb
xlat
or
xlat
jnp
sbb
inc
test
cmpsb
add
pop
push
mov
sbbl
xchg
xor
into
add
sar
and
mov
out
movsl
inc
loope,pt
aas
mov
stc
xchg
mov
mov
outsl
sub
and
cld
pushf
mov
xor
jo
jmp
lahf
pop
xchg
jmp
cmp
push
and
movsl
push
cmp
outsl
addl
mov
xchg
cmp
cs
arpl
int3
jo
cs
mov
andb
ds
push
loope
mov
aas
xor
lock
pop
push
loop
std
sbb
xchg
lds
mov
and
insl
sbb
xor
jns
pop
sbb
out
test
and
je
aam
push
xlat
fdivrs
xor
xor
mov
mov
insb
cmpsb
push
xlat
into
nop
adc
nop
or
mov
sbb
rcrl
xchg
push
aas
loop
mov
sti
mov
sti
mov
sbb
add
lods
or
std
sub
add
cld
pop
imul
xchg
add
fcomi
sbb
pop
jg
or
and
call
pop
sbb
dec
pop
mov
xchg
repnz
and
xchg
pop
mov
and
mov
adc
adc
adc
pushf
inc
fistps
leave
mov
or
dec
dec
les
jge
pop
popf
pop
pop
popf
and
leave
popa
push
aad
fwait
xrelease
and
ret
jb
aad
out
les
sub
sbb
sahf
aaa
hlt
sti
push
jmp
sahf
in
stos
sub
int
fiadds
jecxz
and
bound
adc
dec
in
push
scas
xchg
adc
stc
and
rcl
mov
hlt
fistpll
pop
or
cltd
pusha
cmp
xchg
jbe
pop
mov
adc
into
pop
idiv
clc
xchg
rcrl
pop
inc
and
mov
and
scas
leave
scas
lcall
mov
lock
test
and
sbb
scas
and
mov
es
push
adc
cmpb
push
mov
xchg
adc
jb
push
cli
pop
loop
loop
mov
mov
dec
orl
mov
stc
mov
sbb
icebp
mov
lret
test
lcall
or
mov
push
mov
decb
loope
and
stos
or
push
imul
sahf
sbb
sub
in
stos
pop
stos
dec
jno
es
jmp
pusha
push
pop
into
sbb
xorl
js
jne
mov
mov
pop
dec
leave
xchg
xchg
adcl
mov
cmp
das
xchg
jle
mov
jmp
dec
test
xchg
cmpsb
negl
fsubrs
test
fsts
or
lods
fisubrs
cmp
push
aad
cmp
or
loopne
sub
adcb
fnstenv
imul
push
inc
push
push
das
jl
push
sbb
mov
jecxz
jp
dec
push
movsb
nop
mov
dec
xlat
das
jae
and
push
jl
aam
jl
push
xlat
add
sarb
xor
sub
insb
fprem1
pop
out
aam
xor
jge
adc
cmp
pop
in
ror
mov
adc
dec
divl
mov
jne
mov
jne
cmpsl
sub
in
jno
mov
fldl
xlat
cmp
mov
fsubrs
pop
stos
cs
lock
push
pop
jo
aam
lret
jnp
imul
dec
pop
jae
and
fsubl
push
js
repnz
iret
jne
insl
jbe
inc
je
jmp
cmovs
jle
ja
roll
notl
pushf
ds
jg
repz
lret
push
loopne
loope
rolb
xor
out
dec
adc
push
mov
sub
in
mov
es
call
add
sbb
nop
jae
mov
xchg
sbb
jmp
cmp
test
mov
pop
mov
and
push
cwtl
mov
aad
sbb
pushl
cmp
outsb
sbb
adc
adc
push
popf
cld
loopne
xchg
pop
test
xor
mov
subb
push
cmp
test
int
rcrb
test
mov
hlt
lea
in
pop
sbbl
lods
fwait
out
lea
pushf
dec
repnz
mov
addb
mov
lret
sti
jle
push
repnz
mov
test
lahf
mov
addb
pop
pop
push
popf
orb
stos
dec
push
imul
cmc
xor
popf
jbe,pn
push
add
dec
lcall
or
stos
and
test
xchg
mov
mov
fsubrl
and
xchg
roll
xchg
sub
stos
and
lock
or
sub
dec
insb
add
cmp
pop
or
je
jno
es
dec
push
push
adc
or
push
or
xchg
sub
daa
fmuls
loop
ret
test
clc
addr16
cmp
jp
jne
dec
aam
jo
mov
jp
jbe
or
fcoms
fstps
or
outsb
mov
nop
cmp
xor
sbb
or
inc
arpl
rcrb
scas
cmp
sbb
adc
mov
movb
xchg
in
sbb
loop
push
sub
xchg
push
xor
mov
mov
aad
ficoml
sarb
cmp
sub
adc
hlt
leave
lret
and
mov
movsl
dec
lods
and
mov
inc
imul
xchg
push
sbb
orl
mov
pop
test
cmp
fbstp
dec
jnp
enter
movsb
mov
sub
mov
mov
inc
push
mov
pop
addr16
jecxz
out
pop
fadd
lea
or
jb
xor
jne
lret
cld
pop
fidivrs
in
out
in
bound
mov
andb
andl
mov
add
xlat
test
xor
loopne
in
pop
sbb
popa
mov
fucomp
rorb
cmp
fidivl
pusha
xor
pop
inc
jmp
xchg
jo
xlat
add
jmp
lcall
mov
and
jnp
inc
pop
dec
stc
lahf
pop
mov
std
pop
sbb
int
leave
bound
mov
stos
push
jecxz
and
test
adc
mov
sbb
hlt
js
sub
out
cmp
mov
add
and
push
lods
jns
and
lret
xor
daa
popf
aad
jecxz
pop
repz
mov
or
add
imul
mov
jge
push
stos
arpl
xchg
int3
xchg
inc
cmpsl
mov
xchg
jns
cld
push
push
stc
fstl
iret
or
adc
sbb
sti
pop
mov
mov
insb
cmp
stos
xchg
xor
idiv
aaa
mov
or
cmp
adc
or
dec
je
fcmovnu
aad
or
inc
dec
imul
sub
fnstenv
adc
xor
sub
sbb
lock
stc
pusha
mov
or
std
into
add
pcmpgtw
jnp
ret
push
data16
cmc
ficoml
test
xor
pusha
mov
fcmovu
mov
cltd
cmp
pop
xchg
ss
lcall
test
push
inc
sarl
push
mov
js
scas
shl
scas
mov
daa
jbe,pn
jb
sbb
push
jg
ja
mov
jg
repz
clc
cmp
xor
pop
pop
and
mov
mov
fisubrs
push
lret
adc
and
cli
arpl
mov
sbb
cmp
sbb
out
pop
sbb
mov
mov
call
loopne
or
sbb
mov
dec
test
mov
int
cs
mov
xor
inc
dec
jg
jae
adc
dec
xor
jbe
fstpt
movb
orl
sub
fdivrs
add
ret
push
loope
lret
sbb
mov
sub
jne
dec
testb
and
icebp
loope
xchg
adc
fbstp
inc
push
je
cmp
inc
xchg
ret
dec
lcall
pop
in
test
incl
stos
mov
mov
aas
insb
jnp
mov
pop
ficoml
jle
lcall
aaa
test
loopne
pushf
xchg
inc
and
inc
iret
mov
popf
mov
outsb
dec
adc
jle
push
xchg
adc
cmpsl
jg
fucomp
sub
call
jbe
aam
fldt
mov
daa
jecxz
pusha
loope
mov
mov
mov
jle
inc
pop
test
push
popa
stos
popa
mov
pop
xchg
sub
mov
scas
es
mov
lahf
sub
jl
clc
jecxz
imul
adc
pop
xchg
scas
or
adc
movsb
mull
test
cvtps2pi
dec
adc
lods
fmuls
inc
sbb
idivl
inc
adc
test
and
xchg
mov
mov
test
cwtl
out
cli
scas
aad
or
in
ds
and
call
cmp
xor
push
xorl
pop
inc
sub
ret
lcall
ficoml
ljmp
repz
fmull
arpl
das
pop
shll
shll
aas
popw
fdivrl
cltd
scas
stos
sbb
fcomi
or
in
pop
lret
daa
fisubrl
xchg
aad
adc
push
mov
sbb
cwtl
push
sbb
lock
pop
stc
insl
pop
cmp
fbld
pop
jmp
pop
fnstenv
cmpsb
dec
loop
test
pushf
rcl
or
testb
clc
rol
shll
adc
jne
fsubrl
dec
test
mov
push
xchg
xchg
sbbb
jle
orl
dec
mov
mov
mov
loopne
mov
add
mov
addr16
cmp
mov
div
pop
add
xor
movsb
or
cmp
stc
and
xchg
in
iret
push
lret
xchg
add
imul
push
and
dec
js
jb
insb
cmp
add
or
pop
sub
push
push
dec
jnp
jne
outsl
cmp
add
bound
push
jle
and
push
dec
jnp
fsubr
jmp
out
jmp
fwait
or
stos
sbb
dec
adc
.byte
.byte
