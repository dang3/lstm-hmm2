inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
inc
add
jb
add
jb
add
add
inc
add
je
imul
inc
add
jb
add
jb
add
add
push
add
je
insb
add
push
add
js
je
add
push
add
outsb
add
add
push
add
js
je
add
add
dec
add
outsb
add
push
add
js
je
add
add
push
add
outsb
add
add
inc
add
popa
add
add
add
imul
outsl
add
add
add
dec
add
outsb
add
add
add
dec
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
je
imul
push
add
je
insb
add
add
inc
add
arpl
imul
add
outsl
add
outsb
add
add
add
arpl
add
arpl
loopne
stc
xchg
cmp
add
push
add
add
or
add
add
add
add
add
addb
add
les
sub
add
add
add
add
add
add
add
add
add
movsb
add
add
cltd
add
add
repz
add
add
add
lea
pop
add
cltd
add
add
add
add
aam
lea
push
add
push
add
add
add
dec
add
add
add
add
add
add
xchg
add
cltd
add
cld
add
add
add
add
add
add
add
add
add
add
xchg
add
add
mov
and
add
loop
cltd
add
add
add
add
add
add
add
push
and
add
add
cltd
add
add
add
outsb
add
add
add
and
ja
lea
mov
add
add
add
add
add
add
add
add
add
add
add
les
push
add
add
add
add
add
add
add
leave
add
add
add
hlt
add
lea
mov
add
add
int
add
add
add
outsb
add
add
add
add
hlt
add
lea
jl
xor
pop
add
push
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
cltd
add
add
add
add
add
sbb
lcall
add
add
sub
and
hlt
add
add
add
add
add
add
add
add
and
push
add
add
push
add
add
add
ja
dec
add
xchg
add
add
cltd
add
add
add
add
add
lea
cmp
in
add
lea
xor
and
add
add
add
add
add
add
ret
add
add
add
add
add
add
add
add
and
add
add
add
xor
daa
add
ret
add
pop
add
add
add
jp
push
add
add
add
add
add
add
add
add
lea
push
add
add
add
add
hlt
add
add
add
add
adc
add
add
lea
ret
add
push
add
adc
add
ja
lea
xchg
add
add
add
add
add
add
add
add
add
add
add
lea
lods
add
add
add
add
lea
inc
add
add
gs
add
add
leave
add
add
add
mov
mov
outsb
add
add
add
test
push
add
add
add
add
add
add
mov
add
add
add
mov
out
in
movsl
adc
orl
outsb
jecxz
loopne
dec
push
xchg
jecxz
jo
inc
pushf
pop
filds
testl
inc
ror
scas
mov
sub
mov
mov
stos
pop
in
jmp
arpl
cmp
jns
mov
outsb
dec
out
ss
xchg
test
notb
xor
mov
cmp
leave
test
sbb
mov
insl
mov
push
aaa
pop
out
cli
pop
inc
cmp
push
stos
add
mov
xchg
or
adc
inc
xor
mov
mov
sub
ljmp
fldl
mov
inc
pop
xchg
ficompl
cli
popf
ja
jge
inc
outsb
jl
xor
aam
popf
in
mov
outsb
inc
xchg
dec
push
add
mov
rcrb
mov
loopne
insb
add
mov
inc
adc
push
lcall
cmp
imul
pushf
loope
xlat
push
pop
test
jb
aam
bound
pusha
pop
sbb
cmp
mov
mov
push
subl
lods
imul
mov
stos
dec
in
xlat
jns
adcl
stos
inc
data16
cmc
call
push
or
cmpsl
mov
inc
mov
mov
or
sub
scas
and
out
mov
scas
cmp
or
js
pushf
pop
dec
sahf
ja
lods
out
xchg
sahf
dec
sbb
test
insb
add
xlat
flds
fadds
in
cmpsl
adc
addr16
push
push
mull
ljmp
dec
and
ficompl
nop
push
lods
mov
outsl
pop
loopne,pn
and
pop
out
sbb
mov
dec
lcall
insb
mov
in
adc
sti
repz
jl
je
mov
scas
push
xor
jnp
lret
jne
lahf
and
stos
jnp
adc
dec
xor
mov
cmp
mov
insb
mov
and
ficomps
sti
cld
cmp
jo
cmpsb
push
sub
test
adc
inc
stc
xchg
imul
std
int
imul
daa
cmp
or
add
clc
sarb
pop
adc
popf
addr16
adc
mov
out
push
push
mov
sbb
mov
xor
test
cld
jno
je
jne
xchg
xchg
nop
call
test
addr16
imul
push
out
jge
cmc
hlt
iret
xchg
jnp
mov
sub
loop
int3
sub
cmp
jo
rcll
adc
std
add
cmp
mov
adc
xchg
xchg
jl
popa
adc
add
shl
mov
add
xchg
add
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
push
call
mov
movb
mov
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
call
call
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
lret
sbb
sbb
ss
cmp
cwtl
daa
test
mov
addr16
xchg
sbb
dec
xlat
pop
out
idivl
mov
cwtl
or
xor
addr16
pop
sbb
sub
xlat
dec
lahf
pop
lret
push
jnp
inc
fcoms
addr16
or
aam
mov
fwait
xor
adc
sub
adc
and
xor
cmp
xchg
mov
cmpsl
int3
fs
xorl
mov
out
cli
add
sbb
aaa
push
dec
pop
cmpsb
rcll
dec
call
js
enter
pop
sub
ret
sbb
sub
sub
dec
sub
xor
lea
push
enter
push
mov
mov
add
ja
cmp
cmpsl
mov
int
cltd
fcoms
mov
push
popf
aaa
jmp
xchg
loopne
sub
dec
dec
subl
bound
out
mov
lods
aaa
mov
and
addr16
mov
xchg
sbb
dec
xchg
pop
out
dec
js
mov
mov
addr16
loope
jecxz
fnstcw
daa
mov
or
push
icebp
ja
push
movsl
cmp
xchg
push
loopne
jl
scas
sub
test
int
hlt
inc
pop
aam
cmpsl
xor
cmc
pop
movsb
insb
xlat
pop
testb
pop
out
idivl
mov
cwtl
daa
test
mov
addr16
xchg
sbb
dec
xlat
pop
out
idivl
mov
cwtl
daa
test
mov
addr16
push
or
mov
push
lods
roll
sbb
pop
or
xor
push
adc
xchg
negb
mov
xchg
xchg
int3
pop
adc
add
sub
movsb
dec
push
xchg
mov
dec
jp
and
std
sti
movsl
into
out
pop
repz
call
cli
cwtl
pop
addb
decl
repz
push
jo
bound
push
insl
fistpl
stos
pop
xchg
or
or
gs
cwtl
sub
je
shrd
inc
mov
pop
sbb
icebp
xchg
inc
movsb
shl
rcrl
test
lock
imull
dec
out
inc
jb
lahf
mov
jno
sbb
loop
in
dec
iret
and
shrl
jbe
cmpsb
and
pusha
and
jge
adc
sbb
adc
lods
stos
add
imul
push
inc
xlat
lret
dec
push
mov
movsb
lret
popa
leave
arpl
xor
sbb
and
clc
mov
add
addr16
mov
in
pusha
or
into
sbb
daa
push
scas
rcrl
stc
jo
sbb
mov
jo
insl
mov
mov
jg
jne
loop
push
push
mov
mov
lcall
mov
xor
stc
arpl
faddl
or
lods
and
cmpsl
fsts
push
repz
push
pop
cmp
inc
repz
mov
xchg
pop
test
dec
inc
mov
xchg
mov
or
jb
fidivl
mov
jnp
and
xlat
sub
ljmp
mov
nop
leave
test
pusha
sub
pop
test
push
stc
jle
out
inc
sbb
aam
inc
add
mov
lock
stc
pop
cmp
lret
push
fbld
int3
xchg
sahf
mov
push
loopne
sub
adc
movsb
mov
mov
mov
ds
push
xchg
leave
mov
mov
jecxz
mov
or
mov
idivl
and
jp
sbb
pop
es
pop
mov
movsl
outsb
popl
repz
push
add
or
roll
psubd
jo
popf
pop
dec
push
stos
jmp
push
inc
push
jne
fdivp
test
subb
add
mov
pop
fcoml
insb
rcrl
lods
lcall
inc
out
lret
cmp
shlb
push
lret
add
dec
lcall
sbb
inc
mov
fucom
mov
mov
lcall
das
or
and
pop
repnz
adc
popa
and
out
daa
jp
mov
push
mov
jle
test
xchg
or
or
pop
pop
jecxz
out
out
inc
inc
jno
call
sub
dec
jne
cmc
scas
sbb
dec
jae
push
jmp
in
push
mov
mov
and
push
pusha
aad
stos
scas
dec
or
xor
sbb
pop
add
aas
or
inc
movsb
adc
add
adcl
add
insb
aaa
jbe
xchg
or
lcall
cwtl
movsl
out
inc
sub
out
xchg
daa
mov
and
xchg
scas
sar
xor
push
pop
push
or
fadd
sub
cld
shlb
sahf
mov
jae
add
pop
or
inc
cld
orb
pop
jle
push
rol
loope
leave
enter
lds
push
ret
jle
mov
mov
rcrb
add
or
pop
and
xor
mov
rclb
adc
call
out
loope
mov
sub
notl
in
jle
es
push
cmp
cmpsl
insb
sarl
lock
dec
insl
sahf
dec
divl
adc
int3
pop
dec
clc
sub
cmp
cmp
test
loop
push
mov
arpl
ljmp
adc
popa
pushf
in
cmp
jp
mov
loop
clc
sub
adc
inc
adc
pusha
push
test
sub
cld
cmpsl
mov
adc
pusha
mov
jae
xchg
xor
pushf
or
repz
leave
and
aaa
popf
and
jbe
add
add
sub
jmp
in
aam
mov
arpl
dec
mov
repz
sub
jnp
sub
xor
push
dec
or
scas
add
xor
sbb
movsb
cmp
fstpl
mov
subl
mov
sbb
popf
pop
xchg
sbb
or
add
and
inc
inc
imul
cltd
sub
fs
push
mov
das
subl
jno
jg
lock
sahf
push
das
push
rclb
out
sbbl
jge
xchg
jmp
or
sub
pop
inc
rcrl
in
pop
or
xchg
sbbb
mov
int
test
cmp
xchg
pusha
mov
cmpsl
adc
push
je
icebp
pop
add
es
out
cmp
addr16
push
or
sbb
sub
pop
outsb
andb
and
jns
adc
pop
repnz
ret
lods
cmp
fstl
or
mov
test
fwait
add
stc
stc
push
mov
sbb
in
out
pusha
divl
mov
xor
and
loopne
pushf
xor
ja
es
jmp
aad
cmp
cli
inc
test
dec
adc
jp
mov
push
push
das
das
push
adcb
push
pop
or
jp
sub
sahf
rcrl
popw
xor
filds
xchg
mov
addr16
nop
sbb
psubq
mov
sbb
pop
cmc
out
mov
in
dec
mov
popa
xor
cmpsl
fsubrs
cmp
adc
scas
add
jae
fiadds
aam
ljmp
sub
dec
lock
pop
les
xchg
mov
in
mov
cmp
mov
cmp
sub
fwait
pop
lcall
js
mov
sbb
push
loop
dec
stos
pushf
cmp
bound
mov
mov
mov
adc
xorl
fnstcw
loope
insb
ljmp
shrb
dec
xlat
sbb
cmp
or
xor
aam
aaa
ja
loop
bound
adc
test
daa
push
adc
loope
das
rcrb
and
loope
in
jle
mov
mov
jne
adc
scas
ja
pop
cmpsb
pop
in
mov
gs
sub
dec
cmc
clc
popa
add
jae
cmp
and
inc
mov
mov
mov
push
push
stos
jle
orb
mov
mov
jns
cmp
out
test
lret
sub
loop
jo
fldt
dec
sbb
std
jne
jle
mov
push
pushl
dec
loopne
mov
enter
pop
lcall
rcll
fwait
lods
xchg
lods
rcrb
xor
or
stos
pop
ret
cmp
push
add
push
insl
aaa
sbb
lcall
add
push
pop
jae
cmp
jge
mov
add
inc
jnp
pop
in
data16
fdivrs
add
loope
push
inc
sub
xchg
mov
pop
repz
fs
sti
add
negl
aam
push
loopne
jns
repnz
fwait
popl
jb
cmp
incl
pop
and
icebp
test
fmuls
imul
pop
push
iret
iret
dec
neg
dec
push
scas
push
les
sub
adc
popf
mov
lods
jne
std
rcll
push
pop
mov
outsb
pop
dec
int3
clc
xor
pop
inc
test
cmp
lods
cmpsb
mov
pop
cmp
sub
xor
push
xchg
jo
and
scas
test
repz
inc
rolb
dec
stc
jo
mov
insb
mov
push
jge
sub
jmp
outsl
xor
incl
mov
push
and
mov
and
cwtl
xchg
jmp
xor
movl
or
sahf
mov
sub
xor
pop
mov
fs
sub
push
or
lcall
jns
stc
inc
jecxz
in
fwait
inc
pop
xor
in
cmp
push
add
fcoml
inc
popa
pop
adc
daa
pop
cltd
outsb
clc
insb
es
outsl
fadds
sahf
pop
aas
daa
pusha
repnz
popa
xor
mov
and
sahf
push
test
cmp
les
jae
push
adc
mov
arpl
dec
lcall
int3
pop
push
rclb
dec
vmovapd
into
jge
xchg
jbe
in
push
xor
sar
js
es
enter
cmpsl
lea
lahf
mov
adc
mov
push
xchg
or
sbb
xchg
push
fs
jo
xchg
cltd
movsb
cli
neg
ret
jmp
jle
ljmp
cld
jle
pop
les
das
cmp
push
cmp
push
orl
add
mov
stos
clc
xchg
cmp
push
fidivl
sahf
scas
dec
js
mov
add
out
mov
mov
lock
xor
not
cltd
fcomp
adc
pop
hlt
test
lods
loopne
jae
mov
pop
mov
ret
cli
clc
inc
adc
jmp
fdiv
inc
icebp
xor
jge
in
xchg
mov
addr16
pop
cmp
sbbb
daa
clc
xchg
sbb
and
fcomip
jo
push
int3
sti
aas
xchg
shlb
movsb
cmp
cmp
mov
iret
hlt
mov
adc
pop
mov
fldenv
faddp
sahf
push
adc
mul
inc
mov
mov
fwait
mov
sahf
or
and
sbb
cmp
loope
pusha
mov
std
mov
pop
std
dec
jp
icebp
aaa
mov
clc
scas
or
addr16
and
loopne
mov
mov
addr16
aam
or
xchg
repz
jb
mov
dec
cmp
imul
add
push
pusha
test
imulb
pop
insl
dec
pop
movsb
pop
jo
inc
push
gs
cmpsl
inc
ljmp
cmp
pop
sub
xchg
rcrl
ljmp
das
jnp
mov
jbe
cmp
xor
cmp
ret
das
jmp
arpl
repz
and
loop
lret
das
inc
rorl
mov
jno
iret
insl
sub
out
sbb
xor
clc
mov
add
and
inc
stos
and
js
imul
test
mov
sbb
frstor
clc
inc
mov
movsl
sarl
scas
imul
and
ret
imul
mov
sti
shll
inc
outsb
cmp
mov
scas
dec
adc
test
xor
or
push
xor
cmp
jb
jnp
lret
fistpl
cmpsl
or
out
jbe
dec
fwait
bound
cmpsb
inc
inc
lock
das
jl
pop
xor
or
cmpsl
mov
push
mov
out
cmp
std
push
dec
push
clc
xor
or
ljmp
xchg
nop
lods
mov
adc
lea
cld
add
gs
out
jmp
and
cwtl
loopne
push
pop
mov
adcl
fcoml
mov
sub
sub
inc
ds
jecxz
push
inc
test
cmp
pop
aaa
cmpsl
mov
push
pop
out
xlat
push
mov
sub
inc
notb
mov
mov
mov
inc
fildll
mov
push
imul
icebp
xor
repz
out
mov
sti
mov
add
mov
and
pushf
push
loopne
mov
std
popa
je
dec
mov
jno
dec
packuswb
jge
rcrl
hlt
imul
call
xchg
ss
mov
sub
fbstp
push
pop
and
mov
xor
ljmp
jns
scas
bswap
out
out
stos
sub
mov
test
jo
jecxz
sub
loopne
sbb
in
jp
and
mov
push
jl
push
cmp
sub
mov
aaa
mov
scas
adcl
imul
out
clc
push
adc
inc
mov
adc
lock
loope
lea
pop
sub
inc
and
lock
xor
mov
jecxz
orl
xor
mov
or
push
frstor
into
pop
cmp
test
sbb
jp
mov
and
or
jbe
pushf
xchg
sbbb
cmp
push
pop
pop
xor
jecxz
mov
or
fwait
stos
in
mov
cs
es
xchg
xlat
js
cmp
aam
or
cmp
mov
scas
xchg
mov
inc
pop
mov
cmp
push
test
xchg
xchg
popf
cmp
sub
lret
or
lret
sbb
mov
inc
lods
ss
mov
pop
push
xor
cmpsl
fidivs
push
call
push
jne
outsl
cli
jge
daa
add
inc
fbld
psubsw
dec
jo
xchg
inc
jae
rcl
rcrl
sahf
sbb
cld
clc
cli
xor
xor
mov
push
push
scas
adc
in
test
popf
inc
or
jbe
int3
mov
push
popl
jle
or
sti
iret
lods
xor
in
xchg
mov
and
adc
loope
in
mov
roll
jne
pop
fstpl
dec
sti
mov
jb
stos
dec
rclb
lcall
pop
in
push
xchg
add
pushf
cmpsb
fcompl
das
xor
sbb
jg
sub
jns
fmuls
mov
in
or
adc
lret
in
out
or
sarb
jle
aam
repz
jp
fnstenv
cs
dec
sbb
jge
sbb
pop
dec
roll
sbb
jbe
imul
pop
loope
cmp
fadds
cmp
decl
add
andb
sub
imul
mov
sbb
aas
xchg
notb
cld
mov
mov
mov
mov
out
jmp
rolb
enter
or
popa
jl
bound
mov
cmpsb
lss
and
mov
mov
ret
orl
jmp
sbb
int3
xorb
mov
add
cmp
push
sbb
in
jns
inc
xchg
and
sbb
or
add
sbb
leave
sub
mov
iret
add
movsb
daa
xor
shrl
loop
inc
pop
mov
mov
out
or
inc
lea
lock
sub
cmp
jl
stos
and
and
test
cmp
js
dec
push
insl
je
and
ret
jge
push
jno
aam
push
ret
adc
sbb
mov
push
jp
inc
outsl
je
cmp
cld
cmp
int
mov
mov
sub
loopne
mov
mov
adc
lea
push
or
fisttps
cli
sub
pop
dec
arpl
iret
mov
mov
cmc
jo
lock
xor
jns
and
lret
pop
mov
pop
mov
sahf
lock
xchg
daa
cmc
jl
in
test
outsl
jmp
xchg
movsl
mov
sbbl
push
mov
in
nop
push
in
popa
in
jb
mov
fildll
outsb
aaa
movsl
push
and
mov
rolb
dec
pushf
pop
adc
push
ja
js
ret
stos
mov
fnsave
add
push
pop
mov
mov
xlat
bound
gs
sbb
mov
mov
fwait
jns
inc
lret
push
pop
sbb
jnp
lcall
nop
push
lock
push
fs
sbb
flds
addr16
pushf
mov
jmp
jmp
dec
popf
packssdw
cmp
ds
repnz
mov
push
xlat
xor
sbb
scas
jecxz
fcompl
cld
jb
fwait
sarl
je
lods
jmp
repz
cmc
jge
jnp,pn
cmp
add
dec
or
lahf
shrl
push
sub
cmp
jno
sti
jb
pop
xlat
js
push
mov
or
cmp
lret
out
imul
or
lds
out
addl
sbb
pavgw
and
bound
fsincos
adc
xor
fwait
in
repz
xchg
sti
xor
adc
shlb
jne
inc
fidivl
pop
sbb
pop
add
negb
dec
mov
insl
sbb
outsb
out
push
lock
in
lock
inc
in
leave
dec
or
mov
jne
and
js
in
mov
inc
push
jo
mov
push
sbb
lea
inc
push
sub
xlat
data16
inc
mov
adc
cld
mov
cmp
test
dec
int3
push
mov
sbbb
pop
iret
mov
lock
sbb
push
clc
in
lret
push
mov
add
or
dec
sti
sbb
movsl
aaa
iret
arpl
nop
in
test
and
cwtl
jecxz
cmpsb
rorl
pop
nop
insb
loope
sbb
dec
dec
cmp
enter
and
inc
sbb
data16
xchg
lock
adc
xor
adc
or
sub
fsubr
in
inc
idiv
or
ret
dec
mov
movsl
mov
leave
sahf
jmp
aad
imulb
inc
sbb
out
rcl
push
xchg
sbb
mov
inc
pop
data16
push
popl
adcl
ret
jno
rorl
mov
mov
lds
outsb
testb
js
xchg
cltd
lock
adc
sbb
fnsave
inc
clc
loope
or
add
mov
stos
mov
cmp
mov
dec
xor
dec
daa
jae
or
and
jno
xor
mov
push
inc
push
sahf
ret
mov
stc
sub
cs
push
dec
stos
aaa
out
insb
fimull
add
or
lods
rorb
aad
or
mov
nop
lret
xor
lods
test
or
jmp
aad
dec
ss
pop
decl
or
div
imul
push
pop
xchg
add
mov
add
shlb
lea
roll
sti
cmp
outsb
or
dec
cmp
ret
fcoml
inc
add
dec
test
mov
adc
cmp
pop
sbb
mov
push
out
arpl
mov
ret
jecxz
addl
inc
push
test
sbb
test
repz
sbb
jnp
push
cmp
mov
stc
push
push
gs
aad
mov
push
jnp
mov
inc
mov
mov
in
imul
mov
mov
pop
shll
jmp
fstcw
stos
das
or
dec
scas
sbb
inc
inc
pop
inc
mov
test
or
fidivrs
mov
jle
and
or
outsl
mov
push
pop
dec
es
dec
xor
xor
imul
jg
jle
stc
xchg
test
xor
pop
xchg
cmp
imul
in
sub
sub
ds
xor
imul
mov
sub
scas
sbb
lock
insl
mov
mov
or
cli
mov
mov
mov
adc
mov
aad
out
hlt
bound
or
inc
jge
xchg
into
dec
xchg
shr
jbe
or
add
insb
inc
daa
or
mov
cmpsb
jl
push
cld
dec
sub
xlat
adc
push
add
stos
push
cli
inc
lcall
dec
stos
jmp
adcl
out
xchg
dec
add
jb
enter
add
dec
pusha
push
and
mov
je
and
stos
xchg
loop
sbb
in
scas
test
fs
sbb
xchg
push
jg
sbb
aaa
jne
mov
push
cltd
pop
and
aam
imul
mov
xor
fsubp
add
hlt
fstpl
rclb
sti
fstl
push
fsub
fwait
testb
bound
adc
stos
or
in
not
repz
adc
shlb
idivl
pop
icebp
test
imul
cs
lods
in
imul
pop
popa
frstor
es
jmp
xchg
repz
mov
loopne
mov
xor
sbb
adc
ret
lahf
sub
lods
dec
inc
sbb
test
and
jl
insb
insl
xor
lods
pop
push
popf
dec
xor
pop
mov
xor
cmpsl
dec
out
imul
inc
adc
rorl
inc
mov
fdivs
mov
mov
cmp
and
cmpsb
push
xchg
scas
loopne
pop
pop
xor
fimuls
ds
in
mov
jecxz
lcall
cmp
mov
mov
inc
aas
or
push
mov
leave
cmp
inc
xchg
sahf
out
outsb
lahf
imul
pop
mov
lock
leavew
jmp
add
mov
frstor
clc
pop
pop
test
pop
and
cmpsb
jae
scas
mov
inc
test
int3
push
imul
xor
sahf
dec
xlat
push
cmp
les
pextrw
pop
jp
pop
pop
loope
repz
lcall
sub
cmpsl
sbb
sub
pop
out
idivl
mov
cwtl
daa
test
mov
addr16
xchg
sbb
dec
xlat
pop
out
idivl
mov
cwtl
daa
test
mov
addr16
xchg
sbb
dec
rcrl
imul
cltd
cs
mov
arpl
inc
clc
lahf
or
cmp
dec
fsub
call
call
iret
xor
daa
cwtl
pop
mov
adc
lods
lahf
mov
mov
xchg
sbb
or
cmp
sub
pop
ret
jl
insb
adc
lods
push
faddl
jb
in
xchg
sbb
insb
mov
mov
dec
repnz
adc
lods
push
faddl
jb
in
xchg
mov
or
pop
mov
and
pushf
shlw
rorl
fwait
sbb
das
jns
lcall
imul
mov
lret
outsb
fcmovu
push
lods
pop
inc
xor
pop
repz
cmp
ret
mov
inc
les
sahf
xor
push
aaa
sbb
xchg
loope
repz
sbbb
xchg
and
adc
and
jae
adc
movl
jl
xorb
jl
jae
cmp
push
or
inc
fyl2x
jmp
aam
aaa
ret
fucomip
orl
out
or
jae
fisubrl
inc
decl
jb
dec
sub
sub
mov
bound
pushf
add
faddl
jb
in
xchg
sbb
or
cmp
sub
pop
ret
jl
add
pop
aad
lds
xor
push
mov
mov
mov
fisubrl
cmp
movsb
sub
push
mov
pop
test
mov
in
mull
mov
mov
daa
sahf
sbb
fistps
dec
leave
push
faddl
jb
in
xchg
sbb
or
cmp
sub
pop
ret
jl
insb
adc
lods
push
faddl
jb
in
xchg
sbb
or
cmp
sub
pop
ret
jl
insb
adc
jmp
adc
cmp
sub
jne
xor
push
jg
jae
call
inc
push
gs
bound
mov
test
and
adc
cmp
sub
adc
jnp
lret
int3
in
add
mov
push
sub
xchg
inc
idivl
pop
lea
jecxz
aaa
xor
in
push
stos
adc
pop
lret
dec
xchg
pop
xchg
xchg
adc
frstor
inc
fdivr
and
xchg
sub
outsb
sbb
cli
hlt
adc
cmpsb
xor
cmp
inc
scas
xor
dec
out
popf
jne
mov
mov
addr16
rolb
xor
fdiv
inc
pop
sub
out
jo
pop
fldenv
push
pop
jecxz
mov
mov
sbb
enter
sar
notl
scas
dec
cmpsl
sub
adcb
gs
push
icebp
mov
jno
lds
dec
sahf
sub
iret
xchg
scas
out
inc
daa
lcall
ror
jecxz
jmp
mov
push
test
jmp
mov
sbb
push
addb
cmp
dec
fstps
mov
out
xor
sub
pusha
and
pop
mov
xorb
push
in
jp
jne
xor
dec
mov
or
xchg
popa
xlat
jb
fwait
jmp
rorl
imul
sbb
out
pop
sub
shll
xchg
push
aaa
movsb
enter
jne
cli
mov
iret
lea
sub
popa
sub
xor
scas
popa
hlt
and
cmpsb
xor
out
xor
test
es
je,pt
jmp
push
mov
cmc
mov
sbb
jge
std
enter
add
stos
xor
enter
and
cmp
out
cmp
hlt
int
fiaddl
mov
arpl
adc
movsl
jl
mov
inc
jg
loope
sub
shr
push
popa
inc
fstpt
test
stos
mov
std
xchg
aas
into
jbe
mov
add
nop
out
scas
adc
aaa
adc
data16
or
add
sbbl
sub
xchg
mov
scas
std
cli
fcomps
push
cmp
add
add
fld
adc
lahf
les
psubsw
ret
and
xor
cmpsb
subl
ss
cmp
mov
in
movsl
inc
or
test
sbb
cwtl
xchg
or
pop
out
push
mov
lods
mov
out
arpl
ja
mov
movsb
jbe
loopne
add
mov
pop
cmc
xor
jns
xchg
sub
dec
loop
out
sbb
outsl
ret
pop
lds
cmpsl
adc
sub
fucom
sbb
int
mov
xchg
xor
add
xchg
outsb
xchg
stos
dec
sahf
pusha
adc
repnz
inc
push
add
mov
cmp
shlb
mov
out
lahf
clc
adc
aam
pop
cmpb
call
ss
sub
adc
arpl
aas
sub
cmp
mov
outsb
dec
mov
jg
pusha
xchg
subl
enter
icebp
mov
or
dec
orb
pusha
push
stos
mov
inc
jge
test
das
lret
inc
adc
out
fldl
lea
pop
xor
ljmp
or
push
into
xor
jmp
js
imul
and
scas
jnp
push
jae
pop
adc
pushf
cmpsl
add
adc
aad
popf
dec
sbb
xor
sti
jmp
popa
shl
cmpsl
sbb
cmp
cmp
fst
in
mov
cltd
and
xor
popf
or
lcall
jl
sti
adc
inc
in
xor
xor
jno
push
repnz
out
jne
xchg
xor
in
push
es
movsb
in
int
inc
jmp
popa
sbb
into
andl
int
add
sub
cwtl
scas
rorb
sti
cmp
jb
fsubl
inc
insb
mov
add
xchg
mov
push
outsl
mov
aas
das
dec
gs
cmp
and
test
cmpsl
mov
idivb
data16
scas
int
pop
sub
cmp
imul
jp
cltd
movsl
fwait
xchg
jg
and
cmpsb
nop
add
push
divb
inc
and
shl
das
repz
stc
repnz
fiaddl
mov
call
adc
cmpsl
inc
inc
in
lods
pop
into
sub
lods
aam
ds
icebp
adc
xchg
movsb
sbb
aaa
lds
jno
mov
subl
lret
out
fbstp
enter
mulb
lcall
rol
or
and
sub
pop
dec
jns
pop
jge
add
inc
out
outsl
ret
scas
js
adc
std
push
add
inc
outsl
fiadds
push
clc
stos
dec
xchg
mov
repz
xchg
jno
sub
push
pop
push
mov
xlat
mov
jp
mov
ljmp
mov
push
xor
adc
mov
sarl
mov
mov
or
and
pop
icebp
and
iret
adc
mov
bound
pop
movsl
mov
sbb
jl
jecxz
stc
test
je
mov
push
testl
push
sbb
test
xor
pusha
inc
jmp
sbb
inc
xchg
js
addb
iret
push
insl
mov
jmp
loop
scas
xor
js
sbb
ljmp
xor
aam
rorl
lea
dec
movsl
mov
in
mov
cmpsl
dec
adc
int
test
sub
dec
pop
dec
into
fwait
xor
sub
mov
push
aaa
pop
mov
add
in
pop
stc
pusha
inc
jns
sub
das
mov
daa
and
dec
and
mov
sbb
add
pop
jg
xor
cli
data16
ret
cld
mov
jbe
dec
jno
adc
mov
jmp
andnps
aaa
jb
int
aam
cmc
popf
cmp
ds
xchg
and
je
sub
daa
rolb
sub
sbb
fsubr
fs
and
call
scas
push
pop
adc
movsl
cwtl
pop
lret
mov
js
daa
inc
loope
arpl
fsubl
inc
ja
addr16
sahf
jne
clc
cmc
cld
jle
sbb
ds
xor
les
cwtl
inc
popf
adc
orl
repnz
mov
cmp
adc
add
mov
in
call
scas
mov
shrb
pop
add
push
pop
mov
mov
ret
push
xchg
jmp
ljmp
loopne
push
insb
jnp
ret
outsb
push
cmp
loop
cmp
in
sub
aam
out
inc
push
push
and
sub
and
jns
cmpsl
scas
stos
inc
pop
fildl
notb
dec
push
daa
movl
notb
add
icebp
push
decl
rclb
mov
jae
outsb
aas
xlat
jbe
adc
xor
lahf
sarl
fidivrl
fstps
idivl
leave
pop
mov
test
xlat
cs
and
pusha
mov
mov
pop
cs
fwait
xchg
inc
lahf
push
std
cmp
sub
popf
ds
jmp
ss
sbb
xor
mov
pop
sbb
cmp
inc
add
shld
cmp
sub
sbb
mov
dec
mov
pop
xchg
pop
mov
incl
push
icebp
cwtl
popf
addb
or
jl
call
enter
out
mov
adc
xor
fwait
pop
mov
stos
pop
stos
xchg
cwtl
int
mov
negb
add
aas
ja
adc
int3
add
sbb
pop
pushf
adc
or
in
mov
sbb
mov
or
inc
in
addr16
xchg
lds
stc
pop
sub
mov
in
xor
push
pop
leave
sub
jb
jno
mov
push
imul
lea
inc
xchg
cmp
adc
repnz
je
inc
call
or
push
pop
test
sbb
lods
sbb
jnp
mov
sbb
movsl
imul
push
add
xchg
popa
adc
movsl
outsb
movsl
mov
mov
push
syscall
test
jmp
push
jne
sbb
lea
cmpb
lret
and
int3
jb
pop
cltd
mov
popl
sub
sub
push
mov
xchg
addl
ds
push
add
dec
push
adc
aaa
mov
push
pop
mov
push
xlat
imul
inc
jg
xchg
fdivp
push
inc
pop
ss
dec
ffreep
imul
shrb
cmp
movsb
sub
jns
js
xor
cmp
mov
dec
ds
xor
dec
push
sbb
out
dec
clc
mov
xor
mov
inc
addr16
jnp
mov
pop
out
stos
filds
roll
pop
shrb
mov
sub
inc
xor
adc
sub
cld
scas
rcr
negb
sarb
ja
add
popa
mov
lret
iret
lods
adc
or
inc
and
andb
push
dec
cli
in
add
xchg
cmc
test
push
pushf
add
loope
in
xor
les
add
dec
push
or
mov
jl
push
lods
lret
shrb
popf
outsl
or
jbe
divb
add
mov
mull
push
adc
and
sbb
adc
lcall
and
rorl
jb
jle
or
in
sbb
popa
sahf
into
icebp
dec
add
dec
pop
in
int
fistl
jmp
sbb
pop
aad
test
push
aaa
shrl
push
sahf
and
pushf
addr16
xchg
into
jbe
cmp
xor
jmp
stos
sub
push
lock
js
and
push
jg
shl
gs
mov
scas
fwait
pop
push
sbb
mov
inc
sub
icebp
push
jae
adc
sbb
push
cwtl
inc
scas
xchg
ds
pop
nopl
xor
arpl
push
fisubl
mov
stos
test
inc
ss
sbb
loopne
mul
or
inc
movl
sbb
into
lods
mov
jge
jle
lock
or
push
fnstcw
lret
rcrl
jecxz
fbstp
xchg
jge
pop
sbb
mov
xor
lahf
xor
inc
leave
pop
ja
cmp
movl
mov
adcb
adc
mov
gs
or
mov
or
lock
jne
pop
push
lret
movsb
sub
clc
jns
outsb
sub
pop
dec
dec
dec
clc
xchg
loopne
sub
jge
dec
aas
xchg
mov
insl
lahf
jb
repnz
lea
sbb
mov
lret
mov
adc
insl
in
bound
mov
jmp
xchg
sbb
mov
call
stos
rclb
pop
in
mov
mov
pop
subb
aas
add
sub
adc
sbb
dec
ja
andl
cmc
dec
jl
push
adc
jp
ds
jne
and
xchg
add
add
and
push
shrb
xchg
ret
adc
loope
mov
or
xchg
sub
xorb
sub
mov
data16
fildl
inc
lods
xlat
sub
mov
pop
cmp
jp
push
aam
inc
test
scas
lahf
lahf
jns
fimuls
pop
xchg
andl
aas
fmull
das
aad
jns
aaa
cmp
pop
xchg
mov
data16
mov
and
xor
xchg
cmpsl
mov
dec
xorl
int
lds
mov
js
add
fidivrl
mov
inc
outsb
adc
add
lock
cmpb
xor
mov
adc
movsb
jno
fisubl
es
addr16
push
cli
inc
inc
les
lods
mov
in
and
pop
lcall
jbe
inc
or
mov
pop
push
insl
cmpsb
mov
movsl
mov
fwait
jae
cmp
jmp
es
adc
mov
popf
mov
and
jb
aaa
xlat
adc
add
pop
rorb
into
dec
popl
inc
jne
test
rcrb
lock
inc
mov
rorb
mov
push
out
jnp
inc
movsb
push
push
in
dec
stos
adc
sahf
lods
sbb
push
xchg
mov
fdivl
inc
mov
or
mov
add
push
mov
je
subb
mov
xchg
icebp
pop
xchg
mov
pop
adc
repnz
aas
xchg
fcmovu
enter
insl
test
pop
arpl
xor
jge
cmpsl
fildl
xchg
dec
call
out
fmulp
mov
sarl
adc
movsl
loop
mov
dec
fisttpl
std
aas
lea
into
mov
fistpl
push
xor
xor
call
insb
outsl
and
adc
mov
loop
and
enter
mov
fadd
add
sub
dec
and
cmp
scas
sbbb
icebp
push
cli
sub
mov
shr
daa
push
out
add
scas
mov
mov
sub
std
loope
shl
mov
into
ret
or
adcb
pop
fimuls
pop
mov
insb
push
gs
mov
lods
or
gs
into
mov
ret
gs
push
xchg
stc
inc
lods
dec
and
add
xchg
xchg
inc
push
mov
lret
push
push
jl
notb
add
mov
xchg
int3
std
or
xor
push
loope
fsts
xor
in
aas
jecxz
test
ss
dec
mov
sub
addb
mov
ss
add
dec
outsb
or
xor
xor
fwait
mov
mov
cmp
xor
lcall
add
hlt
movsb
xor
pop
cmpl
mov
outsb
jmp
addr16
or
cld
mov
inc
inc
and
mov
sub
and
and
pop
xor
out
jbe
rolb
or
inc
aas
movsb
jecxz
adc
das
jnp
add
sub
addl
cmp
jmp
jmp
cmp
imul
fdivl
pop
movsb
lcall
ret
xor
pop
iret
test
iret
call
fwait
repnz
pop
ret
rcrb
inc
loopne
dec
lods
jae
adc
les
inc
jmp
ja
je
jle
daa
ret
xchg
mov
xchg
cmpsb
sbb
sub
push
dec
add
mov
cmp
clc
aad
and
mov
aaa
fsubr
jno
or
sbb
inc
jbe
mov
mov
in
fldenv
mov
mov
inc
pop
and
mov
loop
jae
jl
or
jns
test
jno
jle
sbb
jb
cmp
out
pop
in
pop
rolb
pushf
mov
and
mov
dec
stos
sbb
mov
sbb
pop
in
rolb
xor
ror
xchg
mov
or
ja
inc
xlat
dec
in
jl
dec
sbb
mov
pop
mov
stos
lcall
rorb
xchg
movl
lds
pop
inc
iret
push
dec
pop
insb
dec
push
imul
ret
movsb
or
and
testl
pop
xchg
mov
xlat
movsl
lods
imul
jb
aam
addb
lret
sbb
cmpsl
ret
push
inc
movsb
fisubl
lock
ss
loop
or
mov
int3
mov
fs
cwtl
outsl
aas
stos
imul
jnp
xchg
js
fwait
push
aam
outsb
ret
mov
push
popf
adc
sbbl
in
movsl
mov
fbstp
addr16
std
jne
out
dec
xchg
xchg
lods
add
mov
dec
mov
mov
in
adc
sbb
fcoml
out
add
mov
test
dec
jl
int3
outsl
or
push
pop
aas
stos
stos
pop
mov
jmp
int3
int
mov
inc
pop
sbb
xlat
test
data16
cmp
or
sbb
mov
pushf
inc
mov
jmp
aad
mov
lea
arpl
ja
push
into
mov
jl
lods
repz
popl
stc
mov
lods
pop
sbb
xchg
cmp
cmpsb
mov
fidivrl
and
add
add
imul
movl
out
mov
vcvtsi2sdl
and
pop
jns
jg
adc
add
ja
jge
ljmp
shrb
xor
inc
scas
jmp
inc
or
leave
cmpsl
and
jmp
xchg
adc
outsb
outsb
and
cli
test
adc
int
scas
xor
xchg
jp
inc
ljmp
mov
push
int3
shll
repnz
and
subl
mov
mov
sbb
inc
mov
clc
mov
imul
lods
push
mov
testl
ja
scas
pop
insb
aaa
mov
push
pop
mov
movsb
adc
stos
jge
inc
daa
sarb
std
aas
sub
js
jmp
out
in
fwait
scas
xor
imul
imul
jb
insl
call
fmuls
icebp
ja
dec
aad
test
aaa
jno
mov
sbb
cmp
jb
adc
pop
mov
add
in
add
cmp
mov
jle
inc
xchg
sbb
ja
and
aam
pop
inc
pushf
in
sbb
xor
into
cmp
jge
addr16
sub
mov
popf
jbe
add
cli
into
xchg
outsb
adc
aas
mov
sub
das
pop
mov
ljmp
dec
sti
mov
int
pop
sbb
xchg
sbb
mov
clc
dec
push
arpl
ljmp
inc
js
je
ficomps
push
subb
daa
notl
mov
stos
out
mov
mov
popa
cmpsb
and
push
push
or
pop
or
mov
test
imul
lds
mov
xchg
out
mov
je
mov
popf
popa
xchg
std
cmp
in
stc
and
in
jae
xor
pusha
jg
ds
and
inc
cmpsl
cmp
push
ss
xchg
xchg
pop
test
xor
packssdw
dec
rolb
mov
ds
mov
jl
repnz
cmp
jge
or
add
and
mov
xchg
lret
xor
add
xchg
mov
inc
scas
mov
sub
jns
int3
aam
mov
inc
pop
push
sbb
idiv
jecxz
outsb
fmuls
pop
mov
push
pop
and
not
jp
add
sub
leave
dec
jnp
nop
dec
call
das
outsl
push
jecxz
xchg
andl
xchg
add
add
jno
mov
xchg
or
dec
xor
lds
lock
cmc
cli
or
repz
daa
jge
cmc
add
stos
sub
aad
and
test
add
and
pop
mov
xchg
icebp
sahf
push
pop
adc
lods
xor
fs
jp
lods
test
aas
movsb
rcll
sysenter
stos
notl
push
xor
pop
cltd
adc
cli
bound
lock
movsl
sub
adc
shl
mov
pop
jns
mov
adc
scas
add
xor
arpl
cltd
dec
push
arpl
xor
sub
xor
ret
aaa
mov
sarl
sti
rorl
inc
clc
pop
lcall
popf
jmp
pop
in
mov
fidivs
mov
cmp
push
and
lods
shrl
addr16
xchg
or
mov
hlt
adc
dec
test
iret
jns
rcrl
xchg
rclb
call
mov
sbb
or
mov
xchg
pop
sbbb
mov
jno
mov
rcrl
daa
rorl
mov
fnstcw
dec
add
jecxz
loope
dec
mov
ss
ficomps
in
stos
or
mov
fadd
out
icebp
add
ljmp
stos
jge
cld
das
cs
adc
inc
fsubs
xor
and
leave
lret
mov
jg
std
xchg
cli
inc
fs
xchg
int
rclb
into
repnz
fisttps
adc
or
ja
cs
adc
sub
call
pop
stc
loop
out
pop
inc
fs
jo
xchg
test
imul
rolb
je
gs
cmp
pop
loopne
mov
ficoml
aam
hlt
int
aad
dec
ss
rcl
push
lahf
xor
dec
xor
jl
movsb
dec
dec
test
rcr
mov
mov
shll
loope
pop
inc
mov
push
mov
sub
add
neg
xchg
das
mov
adc
sbb
or
or
repz
pop
out
mov
cmp
mov
xor
pusha
jle
xor
inc
repz
mov
mov
push
cs
fst
xchg
adc
pop
fidivrl
xchg
testb
jge
cmpsl
insl
add
data16
push
xor
inc
xchg
cmpsl
mov
les
fs
inc
leave
popl
shr
pop
and
int
js
and
xor
int3
jb
in
xchg
sbb
or
cmp
sub
pop
ret
jl
insb
adc
lods
push
faddl
jb
in
xchg
sbb
or
cmp
sub
pop
ret
jl
insb
adc
lods
rcr
inc
dec
jb
loop
xchg
pushf
orb
mov
dec
bnd
insb
adc
lods
push
faddl
jb
in
xchg
sbb
cmpsb
sbb
pop
mov
adcl
in
xor
mov
push
push
push
push
movl
movl
movb
call
mov
andl
push
movl
pushl
movb
call
andl
push
push
mov
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
pop
pop
leave
ret
fdivrl
insb
mov
cmp
dec
lods
pop
repz
add
pop
in
xor
xor
jae
jae
sbbl
jl
or
sbb
sub
cmp
int3
add
adc
and
dec
lcall
or
sbb
sub
cmp
int3
loopne
sub
add
cmp
cmp
pop
cli
and
sub
xchg
or
jge
xor
fistps
subb
sub
rcrb
sub
sub
mov
xor
jno
arpl
movsb
arpl
jl
adc
cld
sbb
shll
xchg
xor
push
das
popf
stc
jae
rcrl
mov
xor
int3
mov
sbb
in
ret
adc
insb
adc
lods
mov
mov
imul
mov
repnz
mov
xor
sub
fisubrs
arpl
mov
pop
jae
mov
aam
aam
cli
jle
add
pop
cltd
ss
clc
adc
adc
jl
or
sbb
sub
cmp
int3
sbb
or
cmp
sub
mov
xchg
add
jns
imul
imul
rolb
shll
adc
pop
xchg
sbb
xor
imul
mov
xchg
push
cltd
jo
xor
cmp
bt
cmp
jb
cmpps
sbb
sub
cmp
int3
add
adc
and
xor
mov
xchg
insb
mov
sbb
sub
cmp
int3
add
adc
and
xor
mov
adc
subb
jg
push
mov
int3
sbb
popa
andb
or
scas
mov
jmp
lret
fucom
dec
adc
lcall
xchg
adcb
push
in
call
ficomps
pop
jge
insl
xchg
loope
pop
daa
into
int
out
subl
cwtl
cltd
dec
jp
int
adc
stos
rcrl
subb
clc
mov
adc
inc
loop
fldenv
in
xor
push
add
fdivs
loopne
xchg
and
dec
cld
pop
sbb
cmp
in
aaa
repnz
negb
sub
mov
or
xchg
pushf
out
jno
loope
jne
sbb
jbe
inc
adc
adc
aaa
jge
adc
push
jne
cld
push
fmul
insl
push
lock
lea
cmp
lock
pop
in
jmp
les
pushf
lret
cld
xchg
inc
subl
stos
je
or
orb
inc
jmp
xchg
popa
adc
outsl
xchg
and
lock
sti
jge
leave
xchg
shll
add
mov
or
fdivrs
pop
jmp
jp
sbb
jp
jb
arpl
dec
movsb
lea
xchg
adc
inc
mull
nop
les
and
lahf
or
rorb
les
in
push
loopne
sahf
arpl
inc
fstps
ficompl
mov
repnz
sub
aas
lcall
jnp
icebp
pop
push
insb
inc
mov
in
inc
fmulp
xor
testl
cmp
mov
add
xor
aad
int
lahf
dec
jnp
push
out
mov
sbb
pop
sbb
mov
xchg
stos
jb
xchg
adc
daa
sbb
push
pop
jge
mov
cmp
in
cmpsb
mov
cli
and
js
ljmp
fisttps
sti
in
fnstsw
fwait
stos
sbb
fs
cmp
insl
mov
out
ss
sub
mov
adc
mov
sub
add
loope
lods
pushf
add
jg
test
jns
lret
push
cltd
add
dec
loope
mov
mov
add
sub
cmpsl
aad
pop
mov
nop
pop
rcll
jmp
clc
pop
fdivrl
insb
add
xchg
gs
lret
pop
aas
adc
popa
pop
aam
sub
fcompl
and
repz
jb
xor
loopne
fs
out
pop
push
mov
or
mov
lahf
add
sbb
inc
out
xlat
mul
cmpsb
jecxz
xor
lahf
cld
mov
inc
jb
mov
inc
sub
mov
fnstsw
add
enter
stc
sahf
fmuls
ror
loop
mov
jns
movsl
or
sti
idivb
sub
jo
mov
xchg
cmp
add
sbb
dec
dec
ja,pt
lret
add
sub
loope
ljmp
cmp
fimuls
ret
sbb
das
jne
sti
push
push
xor
jmp
repnz
pop
mov
mov
sub
cld
adc
inc
jb
and
xchg
xor
push
shrl
int3
xchg
lea
pop
lods
cmp
dec
bswap
xchg
xchg
insb
or
mov
mov
loopne
xor
aad
push
jb
push
inc
movsl
pand
cld
popa
idivb
dec
add
xchg
mov
lret
sub
or
jge
outsb
imul
mov
jl
push
insb
mov
js
inc
ficomps
je
push
cs
cs
pushf
add
mov
adc
pop
int
scas
jmp
add
sbb
push
fmul
inc
mov
dec
dec
xor
jecxz
xchg
aaa
or
ror
mov
aas
ja
repz
xchg
lock
jecxz
push
in
aas
or
nop
inc
mov
mov
and
mov
fs
ficompl
push
stc
mov
in
pop
sbb
or
xchg
inc
push
frstor
test
inc
pop
ret
and
push
call
mov
push
adc
pop
adc
adc
cmc
jg
dec
es
jbe
scas
or
pop
mov
dec
test
in
xor
push
mov
pop
ret
pushf
shl
pop
push
jg
mov
imul
dec
fwait
add
mov
push
mov
xor
jp
out
dec
pop
pushf
sub
mov
cmc
mov
aaa
out
push
sub
or
mov
fcoml
cmp
lcall
ljmp
les
dec
in
mov
jle
ss
cs
push
adc
cmp
std
inc
ffree
mov
push
imul
inc
insl
stc
in
sub
stc
stos
mov
cmpsb
in
dec
inc
cmpl
mov
mov
mov
scas
stos
fistpll
sahf
and
jno
lcall
cmp
dec
sar
clc
xchg
xor
xor
gs
mov
jae
jns
push
mov
xor
mov
jo
xchg
add
mov
pop
fcomp
pop
cld
mov
jbe
sahf
into
xor
jns
in
filds
sbb
subl
cmc
sbb
xor
or
mov
sarl
test
dec
xchg
lret
lea
sub
test
fs
lds
fcoms
push
loopne
pop
in
mov
sahf
xchg
xor
pop
fidivl
scas
sbb
cmc
mov
test
mov
ss
mov
inc
mov
loope
popf
hlt
call
jns
dec
cmc
imul
xchg
aad
dec
pop
or
or
or
mov
test
xchg
cltd
mov
push
sbb
aaa
jne
lahf
rcr
mov
xchg
out
add
loop
jecxz
mov
xchg
cmp
xlat
andl
insb
pop
pop
adc
in
xor
adc
les
xchg
lods
mov
xchg
orb
jp
add
inc
push
mov
mov
pop
sub
hlt
iret
stos
mov
xchg
or
jp
xor
lods
push
fstpl
pop
xchg
inc
adc
orl
mov
out
inc
adc
ljmp
push
sbb
push
sbb
jne
or
sbb
cmp
mov
ja
aam
rcrb
cmp
push
add
scas
xchg
lods
dec
dec
lods
iret
jg
add
shll
xor
insl
div
test
push
dec
add
pop
ds
or
ds
cmp
add
jmp
fwait
outsb
stc
call
adc
mov
ret
xchg
int3
les
ljmp
outsb
mov
fmuls
push
push
cwtl
icebp
add
push
or
sub
outsb
mov
outsl
xlat
lods
push
push
mov
mov
xchg
cmp
mov
sub
or
push
scas
xor
subl
jmp
ljmp
inc
pop
ss
jbe
adc
lds
or
mov
jmp
and
inc
push
mov
inc
xchg
mov
pop
outsl
mov
inc
bnd
out
scas
in
adc
fcmovne
fistpll
sahf
test
pop
in
push
push
shl
loop
nop
sbb
add
push
mov
mov
arpl
jmp
imul
dec
mov
adc
outsl
decb
push
mov
and
daa
sti
lret
fwait
push
shll
orb
mov
push
add
sarl
pop
dec
mov
mov
sbb
dec
mov
mov
test
cmpsb
lods
fadd
push
and
sub
sbb
scas
pop
push
mov
divl
test
movsl
aam
fs
icebp
fdivr
arpl
mov
aam
gs
or
icebp
scas
fnstsw
xchg
insl
mov
mov
jecxz
js
insb
jne
mov
push
pop
xor
pop
dec
test
imul
push
xchg
xlat
imul
cmp
insb
push
pop
push
sar
mov
sbb
or
inc
sub
mov
sub
inc
outsl
jmp
xchg
lea
xlat
xor
dec
cmc
pop
mov
xchg
push
stos
lcall
in
push
insb
out
inc
jnp
xor
dec
cmp
lahf
xchg
mov
sbb
stos
ficomps
jae
sub
pop
out
push
arpl
stos
xchg
lahf
clc
dec
pop
out
jne
scas
fiaddl
fs
adc
push
push
addr16
dec
push
aaa
mov
push
and
hlt
dec
mov
inc
ffree
gs
cmp
xor
fstl
jmp
xchg
push
pop
mov
fnsave
sbb
fidivs
add
lea
inc
or
pop
jns
loop
xchg
dec
mov
push
shrb
cmp
sub
aas
fbld
mov
xor
push
das
es
sahf
mov
cmpsl
adc
xor
mov
cltd
inc
sub
pop
push
test
adc
in
mov
mov
outsl
and
outsb
pop
mov
dec
jg
adc
ss
addr16
cmpl
add
dec
scas
lcall
add
sub
cmpsb
jge
mov
mov
push
pushf
add
cmpsb
js
inc
pop
stc
add
outsl
and
rorl
push
fmull
in
dec
mov
cmp
push
lds
in
mov
xchg
enter
jmp
inc
dec
sbb
mov
dec
in
xchg
xchg
jle
jmp
xchg
rcll
imul
stc
jl
mov
pop
cmc
adc
out
testb
psrld
bound
adc
test
je
sub
or
xchg
movsl
pop
pusha
mov
xchg
daa
mov
and
mov
in
push
pop
mov
push
shlb
push
pop
jb
das
jge
mov
mov
and
dec
cld
out
out
sbb
movsl
inc
out
imul
mov
arpl
sbb
in
into
lcall
ret
stc
das
daa
cmp
push
and
push
add
xor
arpl
xchg
dec
mov
in
mov
pop
test
cmc
in
jo
xor
bsr
data16
cmc
push
mov
sub
outsb
js
jg
arpl
icebp
insl
inc
xor
dec
mov
inc
test
loope
pop
inc
sbb
or
pop
pop
dec
outsl
js
or
mov
scas
dec
adc
push
loopne
lods
fldenv
mov
test
addr16
mov
or
inc
cmpsl
imul
movsb
ss
das
shlb
test
test
sbb
xor
jecxz
nop
xchg
push
cltd
xchg
sti
loope
xchg
imul
cmpsl
lea
loop
in
loopne
mov
mov
inc
std
clc
icebp
xor
mov
cwtl
xor
out
outsb
jle
cmp
ljmp
push
popa
cmp
push
idiv
rcrl
jge
popa
loopne
jns
sti
shrb
dec
and
jbe
mov
add
xor
xchg
cwtl
jmp
mov
ss
xor
lcall
decb
lret
push
cmpsl
loopne
mov
xchg
mov
mov
push
cs
rcrb
sbb
inc
cmpsl
rol
enter
sub
xchg
cmp
pop
add
jp
lcall
push
xor
and
dec
adc
or
or
ja
jmp
jmp
inc
mov
xor
insl
jo
mov
sub
jns
adcl
popa
dec
shll
pop
add
add
sarl
out
and
pop
mov
adc
mov
fstl
mov
and
xchg
sbbl
sahf
adc
mov
push
das
test
les
push
scas
cmpsb
jno
sbb
add
movsl
adc
jg
dec
je
xlat
mov
dec
cmp
mov
push
push
xchg
pop
jmp
in
pop
jmp
dec
xchg
pop
mov
mov
pop
nop
jle
mov
rcrb
sbb
jbe
cmpsb
pop
mov
in
sub
icebp
cmp
movsl
jne
insl
pop
das
clc
mov
sbb
mov
out
sub
idiv
imul
or
sar
dec
xor
cmp
jns
mov
adc
inc
add
outsb
xchg
repnz
pop
dec
push
push
add
lods
pop
dec
sub
ret
sbb
cmp
pop
es
icebp
mov
adc
inc
pop
int
loope
stc
fldenv
sti
push
mov
in
mov
jbe
dec
dec
out
cld
lahf
xchg
daa
mov
sub
mov
loop
xchg
pop
sub
fadds
sti
out
dec
sub
push
lret
and
enter
mov
mov
ss
push
hlt
subl
sub
popf
mov
in
roll
add
leave
sbb
mov
mov
mov
loope
test
ret
xchg
sbb
clc
inc
cmp
xchg
or
ror
dec
ret
shrb
inc
xchg
pop
psraw
jne
into
jb
orb
lahf
bound
or
dec
inc
roll
fisubl
rclb
pand
mov
fsin
imul
push
cmp
push
sarb
dec
mov
adc
ja
sahf
dec
xchg
jmp
jp
fisttpll
sub
inc
sub
add
sbb
inc
cld
inc
jle
cmc
or
xchg
jae
cmp
xor
mov
xchg
outsb
cmp
cltd
xor
into
add
imul
jnp
jno
xchg
xchg
cmc
cmp
dec
jg
outsb
imul
and
add
push
fdivrp
test
mov
mov
pop
int3
jg
inc
popf
cmp
arpl
lahf
inc
pop
rclb
and
inc
adcl
adc
std
or
aaa
into
arpl
adc
pop
aam
push
cmpsb
jg
mov
dec
mov
mov
leave
idivl
lret
aas
or
mov
push
movsb
and
jns
sbb
add
call
sub
lahf
xchg
std
imul
mov
cli
cs
or
and
cmc
out
adc
pop
daa
adc
in
xchg
add
push
dec
pop
jbe
jbe
lahf
fimuls
add
cmp
lea
mov
xchg
insl
jnp
aad
mov
push
pand
mov
test
push
sub
addr16
movsb
sub
sbb
adc
xor
sub
mov
scas
lahf
dec
adc
repz
jle
mull
push
mov
stos
sahf
jle
xorl
std
push
jb
inc
push
loopne
adc
jp
jo
addr16
fisubrs
lock
cmp
xor
das
stos
pop
cltd
fistpll
or
push
push
outsb
dec
adc
mov
jg
lcall
loope
sbb
movsb
push
xchg
xor
arpl
jl
jge
xor
popa
jnp
ds
push
addr16
sub
xchg
adc
repz
jmp
xor
add
or
mov
call
push
ret
jge
nop
popa
sub
dec
sti
dec
dec
insl
sahf
test
ljmp
push
lods
push
xchg
add
dec
aam
mov
sub
orl
popf
dec
push
mov
sti
pop
and
add
add
mov
clc
outsb
xchg
cmpsb
cmp
fsubrl
jg
das
bound
stc
dec
cmp
aas
push
test
jno
add
mov
mov
loop
cmc
mov
stc
dec
and
inc
push
xchg
pop
mov
aam
xor
jb
sbb
add
dec
loopne
sub
pop
jle
insl
cmpsb
les
cmpsb
nop
cwtl
pop
lock
xchg
ljmp
stos
push
push
adc
push
jl
xchg
lea
push
xchg
nop
or
test
jno
cmp
pop
stos
scas
adc
sbb
mov
lds
sub
inc
mov
sub
fisttpl
das
adc
loopne
movsl
jbe
push
pop
mov
sbb
mov
push
or
xchg
xor
jnp
mov
push
mov
int
in
in
lahf
out
data16
testl
adc
in
loopne
dec
arpl
pop
movb
sub
jno
sub
sbbb
daa
push
out
clc
es
mov
orb
add
outsb
stc
cmp
lahf
cwtl
inc
hlt
and
mov
sbb
mov
or
jno
popa
or
push
insl
dec
icebp
jge
lds
out
out
cmp
dec
push
call
sbb
jbe
jne
pop
adc
fidivrs
mov
xor
xchg
mov
mov
and
pop
imul
adc
pop
xor
adc
notl
jne
mov
insb
testb
push
dec
out
std
out
cmp
es
sub
pop
fstps
mov
pop
push
sbbl
push
mov
mov
inc
pop
push
xchg
cmp
sub
scas
jp
jmp
jnp
mov
adc
mov
and
pop
mov
push
iret
and
dec
lods
xchg
push
cmp
mov
sub
mov
xchg
es
push
jae
add
js
xor
fwait
mov
pop
mov
or
xchg
fimuls
shrb
sbb
dec
pushw
mov
pop
add
loope
mov
cmpsl
js
stos
inc
fcompl
mov
add
jnp
out
lods
fsub
popf
push
sub
sub
sub
stos
sarb
ret
xchg
in
lea
jle
mov
cmp
roll
mov
push
cmp
inc
loope
cltd
cmpsl
or
mov
dec
lods
pop
pop
in
mov
ret
xchg
sbb
xchg
sbb
push
mov
pushf
orl
sub
or
cmpsb
mov
shr
inc
sub
in
frstor
rorl
or
sub
mov
mov
jmp
xorl
int
mov
movsb
ficomps
lods
adc
jae
lea
stc
pop
mov
fdivrp
mov
clc
inc
xchg
loop
add
out
sar
mov
mov
les
repz
popf
mov
rorl
movl
adc
adc
imul
daa
pop
or
xor
mov
lods
outsl
sti
push
daa
sbb
push
xchg
es
sti
pop
mov
int
ds
and
adc
nop
arpl
hlt
mov
fwait
mov
in
adc
sbbb
fistpll
popl
mov
sbb
je
sbb
pushf
popl
xchg
or
aas
cmp
iret
neg
sbb
out
pushf
ret
stos
push
lret
cs
cmc
jbe
pop
ret
pop
inc
cwtl
test
test
test
and
test
ss
int
shl
clc
in
xor
jno
stc
mov
je
and
decl
jae
or
arpl
mov
xchg
imul
dec
push
jo
icebp
sub
out
push
xor
adc
or
push
and
mov
test
push
fiadds
das
xor
mov
lock
add
sbb
xchg
jno
cmp
cmp
ljmp
sub
in
das
sbb
push
mov
iret
fwait
mov
pusha
aaa
cs
pop
cld
jg
jne
adc
repnz
sbb
adc
sar
test
and
int
inc
ds
or
inc
mov
gs
repnz
pop
call
in
lea
ds
mulb
sti
mov
mov
xchg
jo
pop
mov
repz
inc
mov
popf
cmp
imul
sbb
or
das
mov
shr
gs
or
enter
jp
scas
mov
or
int
cmpsb
arpl
ret
daa
mov
and
fstl
mov
dec
or
mov
sti
sbb
lret
inc
call
pop
popw
push
jne
xchg
push
jmp
out
loopne
leave
pop
dec
cmp
call
fcompl
adc
incb
pop
shlb
ds
jle
xor
outsb
add
lret
xlat
pop
mov
push
mov
or
xchg
xchg
push
sub
mov
lcall
es
hlt
int
stos
das
fisubrs
test
and
aas
rcrb
cmpl
xchg
mov
test
push
test
cmc
inc
lahf
xor
inc
xor
std
cmpsb
jge
adc
xor
iret
sti
loop
add
xchg
lret
pop
xchg
cmp
sbb
pop
loop
adc
dec
gs
aaa
inc
addb
pop
push
mov
xor
mov
adc
jmp
mov
cwtl
mov
push
les
dec
xchg
mov
xchg
cmp
std
lret
cmp
sbb
or
mov
cmp
out
stos
in
insl
popf
outsb
pop
je
lret
out
data16
out
mov
sbb
popf
ret
xor
pop
imul
pop
lock
dec
pop
sbb
xlat
pop
sbb
pop
shll
roll
addr16
ds
movzbl
test
lret
push
xchg
or
ret
sbb
sub
cmp
int3
add
adc
and
xor
mov
xchg
insb
mov
sbb
sub
cmp
int3
add
adc
and
xor
mov
xchg
insb
mov
sbb
sub
cmp
int3
add
adc
and
xor
mov
xchg
insl
mov
sbb
sub
cmp
int3
add
mov
sti
lret
adc
push
pushf
inc
mov
jbe
inc
mov
pop
test
out
testb
cmp
sub
jp
push
lcall
fidivl
lret
push
xchg
negb
testb
cmp
sub
jp
push
lcall
aas
fisubrl
lret
push
ljmp
scas
dec
cmpsb
push
fstps
psubsw
ret
inc
shlb
stos
jne
ss
jno
popa
pusha
stc
or
push
scas
pop
mov
pop
icebp
cmpsl
xor
ds
das
or
ss
xor
loopne
outsb
fcomip
cmp
sub
pop
cmpsb
addl
mov
in
mov
lea
mov
arpl
cmpsb
dec
dec
dec
xchg
xchg
shlb
data16
xchg
jb
fnstcw
lret
stc
nop
pop
adc
in
cmc
repz
mov
or
out
sti
fcmove
ljmp
dec
nop
out
out
xor
lds
cs
or
xchg
mov
xchg
pop
add
xor
cmc
repnz
scas
sbb
jnp
mov
pop
in
xchg
jg
lcall
xor
es
pminsw
sbb
or
cmp
sub
jp
add
sahf
adc
and
push
mov
out
lcall
sbb
das
hlt
add
and
call
out
sub
es
dec
mov
xchg
xchg
inc
mov
imul
add
sub
ds
outsb
hlt
ss
push
ljmp
sub
jp
push
lcall
fidivl
lret
push
ljmp
sub
jp
push
lcall
dec
scas
inc
push
add
xchg
sti
push
mov
pop
pop
adc
ss
lret
mov
jbe
xchg
sub
pop
inc
sti
cmp
int3
mov
sub
cltd
or
cmp
cmp
fidivl
test
out
xchg
cltd
xlat
sbb
or
testb
pop
mov
lock
andb
mov
pushf
ljmp
shl
adc
jl
and
or
jmp
rolb
xor
shr
pop
divl
jmp
test
in
xor
sbb
mov
jmp
cmpsb
data16
mov
cmp
jb
jae
jecxz
dec
adc
shll
gs
lret
and
fs
xchg
loope
mov
xor
xchg
or
mov
fsubrp
stc
pop
movsb
push
lret
aam
dec
add
in
inc
sahf
outsl
enter
push
sub
cmp
gs
xchg
or
xchg
pop
pop
in
mov
mov
mov
and
daa
rol
lret
sub
test
popa
insb
dec
pushf
or
xchg
es
sbb
int3
pusha
mov
or
call
out
mov
lods
xor
enter
xorb
cmc
xchg
idivb
inc
stc
push
cmp
mov
mov
and
aam
xchg
inc
cs
ja
and
popa
gs
ret
push
mov
mov
rcr
xchg
dec
inc
cmp
pop
jne
jle
add
or
mov
mov
mov
fcompl
xchg
xchg
loopne
sbb
push
pop
shll
xor
dec
inc
das
pop
mov
imul
adc
repz
dec
xor
scas
dec
sub
xchg
fcomi
out
mov
jno
aas
add
rcrl
into
fidivs
ret
xchg
test
xor
add
xchg
jno
mov
shr
ja
sahf
in
pusha
jb
ja
xor
test
push
lods
inc
mov
fldenv
mov
mov
add
add
repz
cmpsb
or
ror
jg
jae
and
push
ret
pop
jl
call
gs
jle
inc
lods
iret
fsqrt
adc
fs
fiaddl
fstpt
inc
fldcw
out
test
insl
mov
out
nop
add
push
les
jg
xchg
adc
pop
or
push
dec
loope
pop
push
lock
lcall
data16
sbb
aad
int
jp
jne
pop
es
or
mov
mov
outsl
push
push
mov
jbe
cmp
cmp
cltd
dec
mov
test
daa
ret
popf
rep
cmp
std
xchg
in
fsubrl
cli
lret
add
add
dec
dec
test
push
push
mov
jecxz
shlb
sbb
jp
pop
mov
mov
inc
push
mov
dec
pop
stos
cltd
cmp
xorb
in
inc
cmp
cmpl
pop
adc
push
push
stos
mov
mov
pop
andb
cli
add
xor
push
jge
shrl
lock
jo
jge
xor
lahf
and
xchg
rorb
or
cltd
test
or
lret
mov
inc
inc
and
xchg
adc
pusha
and
test
negl
pop
sbb
stc
test
cmp
dec
push
roll
aad
jg
hlt
cmp
call
mov
outsl
mov
cli
call
and
aad
or
sub
icebp
in
xor
xchg
jecxz
repnz
fdiv
mov
jnp
cs
adc
lea
cld
rorb
xchg
cli
xor
add
in
xor
push
pcmpgtd
adc
mov
mov
mov
dec
nop
adc
jae
pop
fnstcw
ret
dec
loope
jg
dec
out
les
and
aas
shlb
or
cwtl
ret
dec
add
fbld
xchg
or
and
adc
inc
sbb
lods
mov
mov
test
lds
inc
es
dec
and
and
fs
cmp
gs
loopne
ficoml
gs
jb
ds
add
mov
daa
adc
scas
inc
mov
imul
mulb
lods
vunpckhpd
xor
push
fiadds
fdivl
mov
int3
cmp
xor
and
pop
ret
add
push
xchg
shlb
sti
mov
or
repnz
xchg
mov
data16
fdivs
dec
xchg
popa
stc
addr16
insl
lret
outsl
inc
dec
std
clc
std
insb
sbb
test
sti
fs
ret
outsl
jmp
les
int3
cld
fsubl
push
lea
lods
mov
shrb
cmp
pushf
lock
adc
movsl
pushf
sbb
cmp
iret
fdivr
aam
daa
ljmp
xchg
jb
xor
test
je
adcl
pop
popf
andb
pushf
sbbb
insb
push
add
sbb
xchg
pusha
ja
jne
insb
mov
lret
xchg
mov
pop
mov
popa
adc
mov
push
and
into
rclb
outsb
pusha
xorb
dec
push
sbb
mov
fnsetpm(287
adc
adc
xor
movsb
cmc
adc
adc
bound
aas
mov
cmp
in
daa
inc
cmc
sbb
aaa
stos
sub
or
mov
pushl
cmp
inc
xchg
lods
xchg
mov
sub
jg
pusha
mov
or
into
xchg
dec
mov
push
das
jbe
pop
icebp
aad
adc
adc
mov
xor
filds
or
inc
cmp
inc
sahf
gs
rolb
inc
arpl
ficoml
fdivl
stc
inc
mov
push
cmp
sub
mov
and
and
shlb
out
cmpsb
pop
dec
mov
out
out
and
jg
int3
test
jmp
andb
sub
shl
shlb
aaa
cmp
inc
inc
test
stos
repz
pop
and
ja
cmp
gs
inc
ret
pop
lds
or
fwait
mov
insb
and
and
cmp
imul
imul
mov
pop
outsl
lret
lahf
in
fidivs
jno
add
hlt
sbb
lds
sub
xor
das
orb
sub
hlt
xchg
cmp
and
and
dec
test
mov
das
pop
int
pop
std
push
jecxz
sub
int3
cmp
adc
cmp
sub
inc
leave
mov
aam
addl
jno
sub
mov
add
cli
sub
adc
xchg
xor
rclb
push
cmpsb
loope
repnz
jge
lods
jmp
inc
cld
divb
js
ss
mov
out
std
sti
scas
adcl
push
mov
xchg
xor
call
iret
dec
test
adc
std
push
test
push
orb
add
mov
test
shr
pop
insl
adc
aam
add
into
add
xlat
pusha
mov
mov
xchg
frstor
enter
mov
push
lahf
shlb
push
sub
cmc
jno
inc
int3
in
adc
jb
ficompl
push
arpl
sub
and
xor
jmp
mov
jns
hlt
ja
push
ja
mov
repnz
adc
and
sub
sahf
push
or
xor
iret
sahf
cltd
xchg
in
push
sar
shrl
push
js
loope
sub
mov
js
pop
adc
es
push
push
std
gs
sbb
push
xor
lret
sub
push
mov
scas
sahf
movsl
xor
jae
pop
add
insl
mov
shlb
fidivrs
jle
je
and
add
push
in
bound
and
adc
repnz
jns
xor
es
xlat
add
in
lcall
cwtl
mov
fsubrl
sub
push
into
cmp
mov
idivl
add
in
mov
or
push
sahf
push
scas
cmp
dec
or
lret
mov
mov
pusha
dec
xchg
fsub
mov
xlat
dec
fstpt
and
mov
sub
cmp
xchg
icebp
pop
repnz
into
mov
xor
cmp
int
pop
jb
xchg
iret
cmp
aad
sbb
jnp
and
mov
imul
cltd
mov
xor
and
mov
or
shlb
sbb
gs
lret
fdivr
sti
cmc
inc
push
ret
inc
aaa
push
mov
and
icebp
stos
xlat
or
lods
add
data16
jmp
movsb
in
cmp
scas
dec
sbb
add
mov
pop
popf
mov
aaa
or
fnsave
push
inc
dec
xor
dec
xchg
div
cmpsb
into
add
mov
inc
fdivrs
sahf
adc
jecxz
xchg
mov
push
dec
gs
call
in
adc
and
adc
enter
lods
bound
pop
scas
jbe
stc
mov
cmpl
outsb
dec
lock
aam
xor
mov
add
and
shl
add
add
fisttpl
push
add
fmuls
and
inc
pop
or
jo
insb
adcl
inc
mov
and
jo
les
cmp
shlb
sub
rcr
inc
push
xchg
adc
dec
sti
es
dec
inc
mov
pop
xchg
sub
or
xchg
mov
inc
sarl
hlt
jb
jb
inc
out
mov
xchg
xchg
mov
imul
jge
inc
dec
out
test
inc
cmp
add
testb
call
xchg
fcompl
in
push
scas
iret
test
inc
sub
pop
push
inc
inc
les
push
or
rolb
jae
sub
fnstcw
divl
mov
mov
lea
mov
mov
push
loope
icebp
aas
fdivp
push
jb
aam
ss
imul
add
and
jbe
jb
pusha
or
imul
push
or
in
adc
mov
decl
movsb
pop
jmp
subb
shrl
jg
pop
scas
mov
cli
dec
test
add
mov
insb
push
push
or
sub
mov
mov
or
fsts
ja
popa
xchg
outsl
xchg
ror
inc
sub
add
cmp
les
or
lods
mov
and
inc
loope
fsubl
pop
add
ds
sbb
xor
cmc
out
ja
cmpsl
divl
movlps
dec
insl
sub
out
stos
or
jp
jo
scas
add
mov
test
mulb
in
jge
inc
sub
js
ret
xchg
xor
out
sub
cmp
mul
push
inc
or
jno
leave
std
int3
lret
sub
xchg
sbbl
push
dec
or
add
pop
jae
jbe
ficoms
mov
repz
adc
into
ljmp
popf
mov
xchg
xor
test
sahf
mov
sbb
pop
imul
push
dec
loopne
imul
xlat
xchg
ja
stos
aaa
shll
das
mov
lahf
sub
xor
call
or
loope
mov
pop
dec
lds
xor
xchg
fwait
stos
adc
mov
push
ds
ret
packuswb
mov
adc
dec
sbb
outsb
or
imul
in
jns
push
and
test
stc
and
jbe
movsl
sub
mov
inc
or
fcompp
mov
icebp
cmp
into
cmpsl
insl
ja
je
test
aad
xorl
out
sbb
mov
scas
std
cmp
add
out
stos
mov
sub
cmp
push
mov
movsl
stos
cs
lret
adc
jo
stos
out
or
jg
push
insl
lcall
and
cmp
inc
jns
pop
cmc
jno
and
inc
mov
push
sbb
fwait
sarl
and
and
pop
loope
icebp
push
cwtl
loope
mov
dec
sbb
xchg
mov
xlat
rcl
push
sahf
cld
mov
inc
loope
fidivs
imul
leave
jecxz
movq
sub
mov
mov
lock
aam
int3
xchg
out
jns
rol
movsb
movsl
incl
mov
data16
sbb
mov
mov
insb
gs
sbb
imul
es
pushf
mov
fisttpll
sbb
iret
jmp
adc
inc
lods
mov
inc
push
cmp
mov
mov
std
sub
mov
push
lods
or
jns
insl
outsl
adc
xchg
das
push
or
dec
jp
ficoms
sub
mov
cmc
cmp
inc
xor
push
inc
mov
push
mov
mov
in
stos
in
pop
push
add
popf
movsb
stc
scas
and
push
sbb
aam
rcl
xor
xchg
int
fidivrs
mov
push
pand
inc
adc
mov
sub
add
pop
push
repnz
nop
mov
mov
jle
mov
mov
out
cs
lea
xlat
adc
xchg
xor
jmp
sbb
fldcw
jno
out
popa
push
jae
fcmove
pop
movsb
aas
or
pop
test
sub
sub
in
dec
enter
mov
push
andl
ret
lret
mov
mov
and
jl
add
add
mov
xchg
sub
cmp
push
cwtl
sahf
lret
adc
sub
imul
inc
aas
jbe
bnd
hlt
sbb
pop
bound
sub
xchg
add
cmpl
pop
cmp
lret
out
cmpsl
fs
pop
lock
lret
xor
mov
aaa
and
iret
scas
loope
and
jbe
int3
mov
mov
adc
or
push
sbb
pop
out
pop
rorl
cmp
sub
in
xchg
data16
int
lds
test
mov
cmp
mov
xchg
jmp
inc
jnp
stos
sub
xchg
scas
xchg
test
cmp
and
jnp
in
sub
out
or
sbb
xchg
scas
push
negl
insl
xchg
les
fiadds
cmp
inc
sub
into
cmpsb
push
jne
dec
mov
popf
cli
rorl
xorl
adc
and
jg
into
rol
iret
std
jnp
repz
ret
cwtl
dec
dec
jno
pop
cwtl
or
jge
fs
lret
adc
leave
cs
in
icebp
nop
aaa
mov
stc
gs
push
adc
imul
jg
aaa
testl
push
aad
and
jb
or
dec
jnp
and
push
add
jnp
adc
dec
into
lret
cmp
mov
mov
enter
repnz
xlat
stos
dec
add
pop
imul
jp
adc
stc
in
mov
mov
cmp
sbb
lds
fldt
sbb
or
shlb
mov
push
inc
cmp
cmp
dec
sbb
jo
pop
lret
stos
dec
aam
add
lds
or
movsl
rclb
or
push
cmp
mov
add
cmp
inc
mov
cmp
leave
or
pushf
aaa
arpl
xlat
ds
lcall
movsl
ret
loopne,pn
pop
inc
xchg
in
out
pop
xchg
add
out
push
dec
js
fldl
mov
nop
imul
lcall
jecxz
pushf
dec
pusha
dec
notb
jb
in
mov
dec
add
out
aas
cmpsl
scas
test
js
xchg
and
hlt
testl
sti
out
out
int
fwait
loope
loope
jecxz
call
and
mov
jle
or
sbb
push
mov
xor
call
fs
adc
sti
test
jno
jb
jecxz
aaa
and
loop
sub
adc
pop
out
aaa
shlb
outsb
push
insl
xor
inc
rcrb
dec
mov
or
fcmovu
pop
inc
jnp
sub
lods
cmp
and
sub
sahf
enter
and
lret
ljmp
iret
arpl
add
adc
in
xchg
sbb
sub
pop
nop
ficomps
adc
inc
enter
lods
jg
sbb
inc
cltd
mov
push
lret
shlb
call
cli
jb
movsb
jge
rorl
lret
ficompl
sub
add
sub
sahf
pop
test
mov
add
fs
divb
inc
cld
cmp
cwtl
flds
pusha
out
popa
testl
vpmaxub
hlt
or
add
push
lahf
jno
jge
sbb
jbe
adc
push
aad
inc
or
dec
pop
fstl
or
fiadds
call
aad
cmp
jae
xchg
mov
push
add
and
jp
cmp
lret
fnsave
inc
movsb
or
mov
loope
icebp
mov
inc
xor
scas
leave
pop
or
outsb
js
lcall
push
loop
ljmp
imul
lods
mov
sbb
xchg
and
adc
jnp
xor
sub
dec
inc
add
imulb
add
stos
out
popf
nop
lahf
dec
std
es
out
mov
mov
lods
jne
sbb
inc
push
dec
xchg
vcomisd
adc
lods
stc
jae
xor
jle
in
pop
fs
sub
rcll
jle
sarb
aaa
jne
and
imul
leave
repnz
jecxz
clc
mov
mov
dec
das
test
or
lods
daa
push
cs
xchg
push
sub
lods
sub
adc
inc
lret
in
xlat
test
inc
popa
or
popa
xchg
inc
scas
jns
ror
insb
in
mov
int3
pop
mov
loope
dec
or
aam
fsts
add
cmp
mov
popf
aad
push
iret
std
inc
mov
mov
xlat
jmp
mov
dec
cmp
and
and
fldt
mov
out
inc
cmp
test
stc
adc
dec
cmp
and
ljmp
sub
shl
dec
ret
adc
bound
mov
xor
rcrl
xlat
mov
jg
mov
lds
addl
fldl
loopne
pop
call
leave
enter
push
pop
adc
mov
adc
mov
popa
sarb
rorb
sub
sbb
ret
xor
lret
rolb
into
mov
test
sub
ret
loope
out
jge
mov
adc
punpckhbw
dec
les
cmp
js
push
fnsave
mov
outsb
jp
ljmp
out
lcall
dec
out
mov
push
mov
xchg
push
cmp
andb
shlb
call
scas
insb
fwait
pop
clc
orb
das
cld
lret
mov
sti
les
mov
fcmove
add
adc
cmp
inc
push
jecxz
inc
pop
loop
test
lret
cmp
decl
push
int3
outsb
sbb
cmc
bound
arpl
adc
push
mov
or
nop
cmpsb
dec
lods
mov
dec
inc
push
fimuls
es
pusha
or
adc
aaa
popl
dec
adc
fidivrl
es
cwtl
mov
outsl
adc
xor
sbb
pop
outsb
pop
mov
movsl
cmc
das
inc
xchg
pop
sbb
mov
sbb
loopne
subb
cmp
js
ret
ja
test
das
mov
add
lret
or
into
rolb
jae
push
mov
imul
frstor
add
lock
cmpsb
jmp
rol
repz
mov
dec
mov
push
xchg
dec
cld
pop
stos
xchg
mov
dec
jle
jb
jne
dec
mov
and
fadds
sub
sub
sbb
inc
stos
lock
rcll
or
mov
repnz
stos
in
xchg
jle
and
je
in
and
add
sbb
aas
cmp
pop
xor
out
mov
or
movsb
and
xor
pop
and
add
ror
and
push
lds
mov
pop
in
push
int3
inc
mov
cmpsb
fbstp
lahf
jmp
sub
xchg
lods
sti
xchg
repz
pop
aad
cwtl
ja
inc
dec
subb
orb
xorb
pop
mov
test
xchg
les
dec
sbb
xchg
jnp
xchg
jmp
into
std
rolb
and
cmp
adc
mov
xchg
and
inc
es
sub
mov
das
pop
or
cld
pop
cmp
dec
jne
in
mov
movsb
mov
push
sbb
and
es
jl
pop
in
and
cmpl
ljmp
sbbl
xlat
lds
cmp
sbb
mulps
or
xor
pop
push
es
cs
jmp
mov
loope
shlb
push
int3
sub
add
jg
sub
mov
stos
fidivl
lret
push
ljmp
sub
jp
push
lcall
fidivl
lret
push
ljmp
sub
jp
push
lcall
fidivl
lret
push
ljmp
sub
jp
push
lcall
and
ss
xchg
ljmp
pop
rcl
ds
test
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
insl
enter
pop
pop
xchg
pop
push
js
adc
mov
cmpsl
int
fldl
xlat
popf
insl
aaa
jge
dec
pop
pop
pop
sub
push
sbb
xchg
xchg
fldl
lea
jge
dec
mov
cmp
pop
in
push
mov
mov
mov
sbb
dec
bound
and
in
out
xchg
lahf
and
push
fcmovb
and
ss
xchg
ficompl
mov
mov
fwait
icebp
pop
cmc
add
xor
and
fcmovnbe
int3
dec
xchg
ss
and
or
out
pop
icebp
inc
int3
push
cmp
and
sbb
lods
xlat
ss
pop
popf
xlat
insl
negl
mov
pop
mov
push
lods
sbb
imull
and
idivb
xchg
ds
iret
enter
rclb
and
pop
xchg
inc
in
in
mov
push
push
xchg
movsb
cmp
cmp
test
push
xor
mov
cmp
imul
sbb
lahf
inc
scas
aaa
jge
dec
xchg
pop
or
or
xor
popa
int
lods
fstpt
test
or
dec
add
bound
cltd
and
jecxz
out
sub
in
cmpsb
sbb
data16
and
jbe
dec
cmp
lahf
rcrb
loopne
cmpsl
fsubrs
or
pusha
or
fs
push
sbb
cmpsl
int
fldl
xlat
popf
insl
aaa
jge
dec
pop
pop
pop
sub
push
sbb
cmpsl
int
fldl
xlat
popf
insl
aaa
sbb
shlb
mov
and
pop
ljmp
inc
push
pop
and
ja
mov
push
insl
sub
cmp
mov
cmp
mov
inc
lret
iret
stc
andb
mov
cmp
not
cmpsl
push
in
leave
push
push
dec
adc
push
pop
push
sbb
add
icebp
push
jno
repz
insl
rcll
add
popl
mov
sti
and
and
mov
aas
sahf
pusha
call
push
pop
xchg
lcall
in
scas
cmp
cld
add
stos
rcrb
es
ss
dec
jg
aad
sar
push
mov
pop
mov
fsts
xor
wbinvd
insl
js
jmp
movsb
stos
rclb
jg
and
dec
imul
scas
fwait
xor
inc
jno
pop
sbb
dec
dec
cmp
out
imul
xchg
bnd
outsb
lds
hlt
sti
inc
sub
add
icebp
push
xchg
xor
or
jnp
stos
rcrl
xchg
xchg
mov
inc
dec
popf
pop
bound
xor
fdivr
pushf
mov
iret
cmp
fsubr
xor
ss
lahf
iret
int3
adcl
add
dec
sub
sub
add
dec
dec
icebp
cmpsb
sbb
cmpsb
sub
sbb
scas
lea
in
scas
addb
add
fdivl
rcl
ret
xchg
pop
jno
imul
pop
mov
dec
in
addl
mov
sti
out
mov
push
inc
pop
pushf
add
fildl
rsqrtps
int
xchg
popf
add
add
jbe
push
mov
loope
test
sbb
cwtl
ret
je
ds
repnz
cmpsb
adc
and
mov
cli
cmp
sarl
dec
mov
mov
push
fildl
xchg
and
push
fnstcw
pop
sbb
inc
xchg
mov
push
cmp
push
xchg
jae
sub
rorb
push
or
adc
mov
and
and
mov
inc
sub
lahf
lock
and
xchg
mov
scas
lds
sarl
pop
mov
dec
or
jmp
es
ret
js
orb
xchg
repnz
cmp
or
pop
mov
mov
jns
test
mov
ficompl
cmp
pop
xor
imul
mov
mov
loope
rcrl
outsl
mov
mov
pop
or
sbb
dec
into
add
aam
mov
inc
jno
mov
les
imul
xlat
popa
inc
dec
aas
repz
xor
xchg
jp
lret
mov
inc
mov
pop
mov
or
dec
movsb
ljmp
push
mov
cmpsl
and
mul
loopne
bound
or
mov
loop
pusha
loopne
scas
cmpsl
or
mov
jecxz
fwait
inc
ret
cmp
fcomi
test
push
inc
fwait
sub
mov
fnsave
out
imulb
xor
adc
ja
test
les
loope
fbstp
in
fildll
imul
loopne
push
xor
pop
mov
frstor
lock
pop
fcmovnu
lcall
or
inc
xor
sub
pop
xor
hlt
cmc
mov
insb
sub
incb
inc
in
nopl
sbb
fidivs
xchg
xchg
and
sti
fidivs
lcall
xchg
or
mov
sub
xor
dec
xchg
mov
movsb
pop
add
jecxz
or
hlt
cmp
fdivl
and
dec
adc
pop
dec
pusha
push
mov
outsb
cltd
jbe
cmp
push
loop
cli
lret
movl
das
shlb
inc
popa
xchg
lret
sub
cld
outsb
mulb
and
push
dec
insl
test
out
shl
jns
out
das
pop
push
es
int
cli
fdiv
dec
shrl
lods
inc
outsb
jno
movsl
pop
ss
test
sahf
cld
mov
sti
in
adc
mov
or
and
shlb
mov
scas
shll
adc
les
rcll
cmp
filds
jg
pop
push
int3
es
test
xchg
mov
xchg
das
adc
cli
loop
mov
leave
sbb
scas
sub
stos
in
push
or
inc
or
scas
js
adc
sbb
sahf
xlat
adc
cmc
cmp
lods
hlt
adc
cmp
push
test
dec
mov
xchg
movsb
and
adc
andl
outsb
into
xlat
loopne
dec
sub
ret
arpl
ss
testb
inc
xor
add
adc
divb
xbegin
and
mov
adc
sub
fsubrl
push
sahf
loope
jbe
inc
pop
repz
mov
je
dec
mov
dec
xorl
sbb
out
clc
arpl
push
cmpsb
rcrl
cmc
or
jle
popa
xor
pop
inc
jo,pt
push
add
sbb
int
sub
pop
popf
aad
stc
fcomps
mov
sub
addl
shll
add
test
lods
out
fisttpl
test
pop
and
dec
aam
stos
leave
sbb
mov
sbb
lret
pop
cld
fxch
cmc
testl
pusha
out
cwtl
fwait
jg
outsb
bound
fmuls
jb
das
fs
mov
loope
das
std
mov
inc
pop
fs
push
adc
lea
les
fucomip
faddl
aam
in
inc
and
lcall
in
mov
mov
dec
je
jne
push
dec
push
icebp
js
push
test
rorl
lds
lea
out
and
cmovbe
push
add
cmp
inc
xchg
xchg
and
int3
adc
jno
insb
mov
cmc
xchg
add
xor
ds
iret
add
nop
cmp
sub
adc
sub
movsb
lea
pop
lahf
push
frstor
xchg
push
add
dec
push
iret
xchg
mov
decb
mov
clc
rorb
scas
xchg
clc
cmp
xor
cli
subb
movsl
in
lods
lcall
or
cs
dec
pop
mov
std
xor
ds
sbb
int
lcall
mov
xchg
gs
push
adc
loope
xchg
mov
dec
push
mov
mov
adc
add
cld
pop
and
xchg
add
push
xchg
sub
das
mov
and
pop
jne
dec
push
and
cmp
inc
pop
mov
sahf
push
lret
lods
pop
or
mov
stos
mov
lea
lahf
lods
movsb
pop
mov
cs
sar
push
mov
sbb
fwait
ss
mov
jmp
lock
in
cli
xor
jb
dec
inc
mov
jp
repnz
inc
push
add
dec
das
mov
sbb
adc
xlat
add
out
xchg
jmp
xchg
mov
pop
jbe
fistps
sub
mov
sub
inc
cmp
push
jmp
mov
pop
movsl
or
pop
sbb
dec
adcl
mov
inc
dec
rorb
jmp
jne
fcmovnb
arpl
arpl
dec
inc
push
push
jae
or
mov
sahf
dec
mov
shlb
outsb
mov
popf
push
int
jbe
or
fdivp
xchg
pop
xor
pop
enter
sbb
push
xor
fisttps
push
and
les
je
inc
lea
into
inc
enter
jg
add
mov
mov
iret
in
mov
nop
std
loop
pop
adc
aas
pop
idiv
jl
pushf
ret
shlb
ret
sbb
add
cmp
mov
and
aas
fisubl
ret
pop
pop
and
stc
jmp
aas
pushf
insl
and
loop
lret
iret
add
arpl
test
mov
sub
ss
cmpl
pop
popl
push
jbe
ds
or
ds
fldenv
movsl
lret
into
rcl
xor
int3
cmp
lds
dec
test
adc
lret
outsl
add
loopne
outsl
mov
xor
sub
test
jmp
mov
ret
xchg
cmc
mov
dec
xchg
xchg
mov
or
add
out
aad
sbb
dec
or
lds
inc
pop
jge
and
int
outsl
mov
mov
or
pop
sub
pop
pop
movsl
daa
dec
mov
inc
or
mov
lcall
inc
xchg
inc
mov
add
in
ret
nop
addb
sbb
ss
lods
add
les
out
outsb
hlt
fcoms
xor
push
divl
xchg
jg
ja
xorl
cmp
cmc
pop
lods
cmp
icebp
lea
inc
and
into
mov
adc
lcall
lods
jecxz
mov
daa
jle
sbb
lret
clc
adc
pop
xchg
cld
mov
inc
test
xchg
into
or
pop
push
inc
in
out
in
mov
dec
das
mov
jb,pt
pop
stc
cmp
lret
hlt
jg
mov
xchg
xchg
xor
mov
lods
inc
aaa
test
scas
fstpt
or
enter
inc
cs
and
mov
or
pop
dec
inc
pop
andl
je
out
mov
outsb
mov
nop
and
pop
lret
insl
sbb
insb
flds
divl
aam
loop
cs
mov
jne
incb
cld
jge
outsb
pop
mov
fimuls
subl
imul
in
sbb
shlb
add
sahf
xchg
adc
push
xchg
mov
xchg
js
mov
icebp
jg
es
popf
or
aas
int3
daa
cld
add
cmp
and
dec
insl
mov
mov
push
jecxz
mov
scas
jbe
scas
xchg
adc
sbb
fidivl
mov
push
and
mov
mov
xchg
jne
mov
sahf
lock
ret
dec
or
xorb
inc
xor
dec
jo
xor
jb
subl
icebp
sar
push
push
rorb
arpl
aam
aam
mov
int
fcomp
aas
imul
mov
fnsave
les
pop
ret
movsb
dec
dec
les
mov
dec
xor
in
pminub
jns
ficoms
ja
lock
push
pop
icebp
insl
shrl
cli
fwait
xchg
fiaddl
pop
mov
jge
mov
test
mov
jl
repz
mov
or
mov
hlt
or
leave
clc
loope
cmp
wrmsr
cmp
sub
stc
test
mov
or
sbb
lea
das
fs
hlt
adc
lock
into
hlt
push
and
pop
mov
sub
idivl
xorl
mov
xchg
cmp
xor
imul
cmpsl
sub
xor
push
arpl
rcll
push
cmpl
mov
mov
adc
pop
bound
fldcw
lret
ret
add
cmp
shl
clc
push
popf
dec
mov
lods
dec
jb
out
jmp
stos
ret
in
jns
jge
push
xchg
maskmovq
mull
int3
add
push
rolb
pop
cmp
cmp
imul
data16
mov
mov
clc
sti
out
loope
and
call
xor
jnp
push
push
jmp
cmp
mov
fxch
imul
adcb
adc
pop
hlt
and
pop
jbe
fldl2t
jae
xchg
add
in
rclb
mov
sub
xchg
ljmp
jecxz
pop
mov
adc
add
jge
xchg
imul
mov
xchg
sbb
xchg
pop
sub
mov
movsb
movsl
dec
mov
imul
repnz
mov
insb
imul
mov
into
stc
xchg
mov
push
rolb
mov
jle
enter
cmpsl
lods
xchg
jl
dec
ljmp
and
and
test
cld
pop
sub
xchg
fmull
and
or
push
sub
cs
clc
or
cmp
out
fdivp
out
insb
adc
dec
fdivl
jno
adc
or
fcoms
js
mov
cmp
mov
gs
push
or
aas
jnp
scas
jmp
pop
fistpl
xor
fbstp
icebp
gs
imul
add
dec
xchg
cmp
lahf
adc
movsb
jle
sub
pop
mov
jmp
fninit
pop
lea
push
mov
ret
fcompl
mov
imul
mov
test
loop
pop
je
popf
xor
xchg
and
dec
das
stos
fs
xor
push
shrl
push
ficomps
fsub
pop
xchg
pop
fstl
jmp
push
xchg
lods
out
push
mov
push
ret
frstor
mov
pop
mov
xor
xor
mov
scas
ficoml
mov
cmpb
inc
mov
add
mov
cwtl
or
mov
in
loop
pop
adc
add
cli
xor
push
cmp
jnp
aad
mov
fmuls
jne
adc
jo,pn
leave
dec
jl
lahf
xchg
fdivr
and
sbb
mov
inc
adc
sbb
imul
sbb
cmpb
xchg
cmp
xor
jbe
cli
sub
loopne
cld
pop
add
andl
sbb
pop
mov
cmp
inc
aaa
lret
sub
adc
push
pop
sbb
inc
push
js
loope
scas
mov
pop
adc
pop
dec
adc
dec
push
mov
lahf
inc
mov
xchg
lods
test
aas
mov
cli
cli
scas
sub
sbb
fcompl
insb
mov
inc
push
jge
xchg
cmp
loope
jp
fldt
xchg
dec
dec
xchg
movsb
adc
ljmp
mov
xchg
xchg
lock
sbb
xor
and
adc
add
mov
mov
mov
push
or
popa
out
cwtl
push
ret
aad
push
cmp
ret
inc
popa
add
mov
dec
or
add
jge
push
cwtl
or
jp
test
cli
lret
xchg
addr16
push
dec
dec
fidivs
fists
mov
cmpb
jp
gs
sub
iret
sub
mov
repz
cltd
cmp
sub
jb
outsb
xchg
aam
pop
aaa
jo
mov
sbb
jno
test
or
pop
sbb
cltd
filds
jp
sbb
call
add
es
data16
int3
lods
loop
pop
sub
call
into
popf
dec
inc
and
and
cs
or
inc
pop
repnz
cmpsl
ret
or
fildll
mov
cmpsl
pop
adc
lret
adcb
mov
lea
or
push
aam
mov
inc
xchg
and
adc
pop
addr16
addr16
sbb
stc
push
dec
fcmovne
outsb
cmpsb
xor
imul
out
outsb
adc
fiadds
leave
das
popf
movsb
in
hlt
inc
fldpi
mov
mov
adc
jmp
jns
aas
shlb
xchg
test
xchg
loop
lahf
in
sarb
push
jae
std
lock
pop
push
rcr
jbe
jb
test
aas
inc
sbb
and
dec
xchg
xchg
xor
scas
xor
inc
js
cmp
mov
push
and
add
xor
cs
dec
push
dec
push
icebp
outsb
loopne
xchg
fists
ret
in
lret
sub
sub
loope
into
pop
pop
shlb
lcall
xor
scas
sahf
into
add
cwtl
cmp
cli
and
inc
into
sbb
xor
mov
dec
outsb
fcoms
dec
lds
inc
out
shll
xchg
push
mov
xor
fdivr
dec
mov
add
gs
out
mov
pop
xor
xchg
dec
xor
sarb
out
xor
or
jne
dec
in
add
rorl
arpl
pop
sbb
insl
test
mov
out
push
mov
and
fnstenv
push
or
jnp
hlt
inc
pop
cmpsb
push
cmp
xchg
pop
or
imul
mov
pushf
push
mov
mov
test
pop
pop
jge
cmp
mov
mov
nop
or
fdivl
adc
push
mov
aad
jo
shrl
cmp
mov
pushf
and
shrl
mov
cltd
out
call
add
aas
in
dec
dec
jp
inc
mov
in
test
sub
ja
pop
dec
inc
jbe
repz
repz
xor
loope
jnp
push
sarl
pop
incb
stc
inc
mov
xor
push
push
rcrb
out
insl
sbb
mov
nop
cmpl
lret
loopne
enter
mov
pop
sbbl
out
mov
pop
mov
aas
cld
ret
mov
mov
shrb
dec
mov
ss
push
lret
push
in
mov
aam
scas
xchg
movsl
dec
out
outsl
pminub
pop
aam
fcmove
js
clc
xor
or
dec
cs
not
xor
rclb
push
dec
out
mov
fstpt
pushf
push
push
push
dec
mov
adc
mov
cld
fwait
lahf
stc
arpl
adc
mov
push
lret
sbb
pop
std
fstpl
sbb
dec
cmp
data16
sub
xor
push
mov
xchg
mov
xchg
mov
shll
jl
movsb
jecxz
push
addl
icebp
mov
push
jmp
mov
int3
push
stc
fidivs
fstp
or
jmp
push
or
pop
mov
mov
dec
push
hlt
ss
adc
sahf
shll
test
pop
scas
subps
cmp
mov
in
movsl
out
aad
mov
add
fisubrl
adc
inc
out
fldl2e
mov
jno
dec
rol
push
mov
out
incl
hlt
out
loop
sbb
jmp
push
cmp
fisubl
mov
cwtl
sub
std
mov
cvtdq2ps
lcall
dec
cmp
stos
xchg
nop
xor
out
movb
out
add
lcall
lock
or
out
lret
call
fists
scas
rcrb
sarb
inc
jmp
xor
testb
les
jb
inc
shrb
jne
lret
pop
enter
jnp
out
mov
cmpsl
mov
sbb
mov
pop
mov
aas
mov
frstor
xchg
addl
push
xchg
jbe
sbb
jb
pushf
jmp
adc
pushf
xchg
cltd
popf
jno
sub
mov
pop
outsb
ss
leave
xlat
sub
dec
ds
clc
out
out
sti
inc
pop
jg
sub
mov
shl
xchg
push
add
push
mov
pop
pushf
hlt
jmp
inc
bound
out
sbb
push
out
add
mov
xor
xchg
mov
mov
push
push
out
jg
pop
aam
inc
or
ret
adc
xor
sarb
sti
lea
xchg
daa
xchg
add
adc
inc
inc
outsl
cmp
xchg
fs
or
jne
js
xor
pop
adc
adc
pop
testb
and
lcall
push
lods
test
rol
push
scas
add
in
push
mov
mov
pcmpgtw
add
es
pushf
mov
sti
icebp
js
jecxz
outsb
fbstp
dec
testb
fstl
mov
cmp
push
div
bound
cmp
add
mov
inc
inc
cmp
sub
pop
out
sti
aam
jns
mov
cmp
inc
outsl
push
stos
pop
mov
push
fistps
sbb
add
mov
aad
xor
mov
and
push
mov
int
mov
mov
inc
inc
je
sahf
fdivrs
stos
loope
xor
jle
xor
fistpll
call
xor
sbb
cld
xchg
sub
jp
dec
movsb
inc
das
inc
stos
cmp
xchg
or
mov
sub
fldt
pop
out
arpl
adc
cs
pop
mov
out
mov
xor
popf
mov
gs
pop
icebp
out
arpl
inc
mov
pop
jbe
sbb
cmp
shrb
in
xchg
inc
or
mov
imulb
test
ret
mov
mov
fdivl
sbb
enter
loop
stos
cmp
inc
jmp
iret
xor
andl
test
lods
test
scas
mov
and
jnp
cltd
push
xchg
inc
xchg
cmpb
cmp
lock
or
std
and
sub
pop
idivl
and
out
cmp
mov
js
add
into
jno
jp
push
push
loope
or
mov
sub
inc
push
leave
cli
add
test
dec
data16
mov
pop
or
xor
sbb
jle
daa
jb
pop
pop
sub
push
sbb
cmpsl
int
fldl
xlat
popf
insl
aaa
jge
dec
pop
pop
pop
sub
push
sbb
cmpsl
int
fldl
xlat
popf
insl
aaa
jge
dec
outsl
pop
pop
sub
push
sbb
cmpsl
int
faddl
mov
popf
insl
aaa
jge
dec
pop
pop
push
sub
xlat
popf
inc
adc
or
fidivrl
sbb
cmp
in
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
repz
in
cmc
ret
test
fwait
orl
mov
gs
jne
add
add
jecxz
shl
ret
test
mov
inc
jae
arpl
jne
inc
push
adc
add
daa
jecxz
shrl
mov
and
inc
or
jne
jg
jbe
je
mov
pushf
cmpsb
orl
sahf
xchg
lock
cmp
clc
or
adc
sub
sub
gs
adc
or
lods
mov
and
and
jecxz
and
aam
lods
dec
xchg
jae
bound
jne
adc
sahf
or
sbb
testb
sbb
pop
fwait
mov
inc
push
pushf
loope
mov
cli
and
add
xor
sbb
sub
into
jns
sbb
andl
jbe
lods
xor
pusha
adc
jecxz
stos
dec
cmc
in
or
jp
jl
pop
sbb
addr16
cmpl
repz
shl
ret
popa
mov
mov
xorl
adc
inc
dec
xor
and
adc
lcall
sti
xlat
shl
mov
inc
add
jp
add
xor
jnp
dec
popa
push
data16
xchg
mov
push
loopne
and
pop
adc
or
mov
jbe
push
test
mov
mov
movsl
xchg
mov
inc
jae
arpl
jne
add
adc
jecxz
shl
ret
test
mov
inc
jae
arpl
jne
add
adc
lret
daa
mov
ljmp
mov
mov
in
mov
inc
pop
and
mov
pushf
ret
sub
jge
mov
xchg
inc
test
sub
xor
lahf
mov
cmp
mov
fs
sub
push
sarb
lahf
hlt
loop
jne
adc
stos
lods
in
mov
cltd
ja
xchg
pop
cmp
cmp
pop
cmp
sbb
cwtl
add
jecxz
pop
movsb
add
cld
loopne
sbb
and
mov
dec
or
std
sub
in
push
mov
scas
cmp
cld
scas
sbb
enter
and
mov
mov
loope
fldenv
je
notl
xor
pop
dec
mov
and
add
push
jle
inc
sub
fs
cmpsl
aad
mov
add
xor
pop
jp
lods
push
fs
and
jbe
rclb
test
sub
cmp
pop
test
in
imul
test
and
push
sub
dec
loopne
sahf
test
les
insl
pop
mov
push
nop
dec
mov
in
aaa
clc
pop
mov
mov
cmpsb
cmp
pop
pushf
fidivrs
mov
rorl
mov
stos
out
divb
out
dec
lock
cmp
in
nop
sub
cwtl
or
lods
xchg
pushf
hlt
fcmovbe
stos
cmp
mov
out
fcomps
xchg
aaa
jg
addl
lret
mov
popf
scas
add
popa
and
pop
jecxz
gs
sbb
jge
jbe
and
pop
sbbl
addr16
xchg
std
sub
inc
rorl
jp
pop
and
or
mov
sub
inc
sbb
push
lods
pop
dec
inc
xor
sbb
aad
add
pop
or
dec
push
mov
pop
mov
mov
andb
in
lods
sbb
jne
lds
mov
or
cmpsb
in
mov
sahf
loopne
sahf
dec
push
nop
lock
inc
scas
mov
xchg
pop
xor
jnp
es
inc
orl
icebp
lods
and
cmp
or
imul
mov
cmpsl
push
out
add
out
pop
jg
jmp
xchg
fadds
mov
and
cmc
jne
addr16
adc
sarl
push
pop
jge
in
xor
pop
mov
mov
mov
sbb
cmp
dec
aad
ja
pop
xor
nop
movsl
adc
and
icebp
int
cmpsl
jl
add
aam
or
arpl
mov
jb
enter
cmp
js
or
int
dec
pop
push
push
in
clc
sbb
dec
mov
repz
test
das
jnp
lods
sbb
cmp
dec
imul
daa
shlb
cmpsl
mov
sbb
add
fdiv
ljmp
mov
mov
mov
pop
mov
gs
inc
mov
pusha
rclb
or
jb
addr16
leave
push
jmp
xor
fs
xor
jb
dec
hlt
adc
pop
out
imul
in
jnp
dec
outsb
out
mov
adc
rcl
jmp
aam
and
cmpb
inc
sub
arpl
dec
mov
sub
cmp
insl
xchg
ret
mov
ds
pop
js
lret
mov
xor
pop
jnp
repz
and
xchg
or
or
mov
jge
cmc
mov
jbe
pop
xor
inc
cmp
iret
imul
leave
outsl
or
dec
cli
xchg
sbb
sarl
jge
sbb
mov
ret
scas
insl
lea
or
imul
lock
enter
add
pop
ljmp
das
xor
stos
imul
adc
je
xor
testb
or
div
data16
dec
es
popf
lret
cmpsb
push
out
lret
xchg
adc
adc
cmp
dec
xchg
jbe
mov
push
pop
popf
xchg
out
mov
outsb
dec
xor
mov
cmp
stos
dec
or
lcall
out
sbb
pop
loopne
addr16
sbb
out
sub
mov
xchg
push
dec
lcall
adc
pop
test
dec
push
xchg
adcl
in
mov
std
xchg
push
scas
addr16
mov
movsb
push
icebp
nop
lret
mov
repnz
addr16
cmp
inc
jecxz
or
out
orb
hlt
cmp
add
fisttpl
test
cmp
and
scas
imul
lods
pop
jle
or
dec
cmp
mov
fbstp
mov
mov
fcmovbe
fistl
push
cmpsb
je
iret
lea
pop
out
loop
jb
rcrl
stos
jnp
xchg
cmp
xor
andl
ret
fldt
xchg
int3
ret
mov
dec
dec
mov
fdivrl
pop
in
mov
mov
sbb
pop
roll
jno
xchg
mov
add
clc
iret
xor
outsl
xchg
aaa
adc
inc
jnp
jge
mov
popa
push
popf
mov
rolb
push
pusha
jo
test
fistpl
imul
aas
mov
jecxz
gs
dec
out
mov
aaa
cld
movsb
orl
call
ljmp
out
sbb
cltd
adc
lret
sub
sub
into
jne
jp
cmp
fmuls
dec
push
sub
loope
xchg
or
addr16
ffreep
fistpll
xchg
stc
cwtl
xor
fwait
xlat
add
cs
aam
pusha
mov
sbb
daa
push
fisttpl
jle
addb
jo
lcall
pop
xor
daa
mov
gs
or
mov
or
out
lea
add
cmp
mov
lret
cltd
addl
nop
cmp
xchg
ja
inc
stos
push
sarb
or
sub
jmp
sbb
fisubs
testb
sbb
clc
mov
mov
cs
jmp
sub
jns
js
aas
aad
icebp
xchg
inc
gs
or
aaa
arpl
push
out
inc
jae
adcb
lods
cli
fadds
and
xor
adc
scas
or
cltd
jg
outsb
lock
lods
xor
inc
pop
add
nop
mov
adc
sub
xchg
push
mov
mov
mov
xchg
jmp
adc
test
rorb
in
andl
xorb
add
push
clc
lret
jns
jb
xor
in
mov
add
add
xchg
push
and
adc
in
movsb
enter
addr16
cmpl
imul
sub
out
icebp
shll
aam
movsl
cmp
sub
mov
cmp
xlat
loop
push
pop
pop
inc
scas
push
loope
hlt
fiaddl
fcomi
scas
pop
lods
adc
movsl
sbb
stc
shl
insl
dec
cmpsl
push
inc
loopne
lea
lahf
rcrl
pop
push
bound
push
inc
mov
add
aas
movl
aaa
pop
push
cmp
and
dec
clc
mov
lods
in
xchg
mov
mov
andl
test
cmpsb
insb
daa
mov
fnsave
shrl
push
cmp
mov
mov
lahf
loopne
les
cld
adc
dec
and
pop
jb
mov
andl
dec
insl
or
loope
jge
outsl
and
out
pop
push
and
inc
xor
cs
or
loopne
and
cmp
push
in
lret
in
movsb
fisttpll
push
in
adc
push
dec
enter
xchg
mov
cli
dec
or
nop
mov
stos
iret
cmpsb
int
fadds
inc
cmp
inc
jmp
jne
cmp
cmc
sbb
pop
lods
imull
sbb
orl
xchg
inc
ss
pop
int
loop
lds
and
dec
into
pop
fadds
test
jle
sti
sbb
pop
test
mov
int3
mov
loope
fsubl
xchg
adc
out
xor
repz
lods
mov
stos
pop
jg
es
cmp
lds
addl
outsb
andb
cmpsl
mov
fwait
add
lds
int3
sti
ret
cmp
mov
push
mov
repz
enter
bound
mov
ja
ror
loop
and
test
xor
xor
cmp
test
mov
je
cltd
movsb
push
and
adc
mov
out
icebp
jmp
lds
add
inc
sub
sub
sahf
enter
sbbb
insb
mov
xchg
clc
mov
rcll
push
jne
xchg
or
scas
jo
fstp
insl
mov
add
lret
sbb
fwait
repnz
mov
pop
dec
xchg
and
fisubl
fwait
cmpsl
and
aaa
push
mov
in
es
pop
movq
jns
jmp
insl
push
sub
loope
rcrb
xchg
pop
jle
add
dec
adc
adc
inc
pop
pop
enter
push
iret
aas
in
arpl
push
mov
jl
fcompl
mov
xchg
stos
adc
clc
je
adc
ss
pop
mov
push
mov
call
cmp
in
xor
mov
setbe
daa
bnd
mov
fwait
adc
jb
pop
mov
inc
and
dec
outsl
xor
add
icebp
out
fwait
mov
imul
pop
sbb
ficoms
fsubp
das
mov
insl
fptan
sbb
lahf
icebp
inc
enter
lock
dec
daa
xchg
lahf
dec
sti
or
push
sub
cld
jae
cmc
iret
xchg
ljmp
aas
sub
push
sbb
filds
push
mov
sbb
int3
mov
dec
ret
rorl
pop
mov
out
sub
das
jp
mov
sub
test
and
add
jmp
pop
insb
shlb
sub
mov
lds
push
or
mov
dec
xchg
mov
mov
aam
adc
out
adc
mov
jecxz
pop
or
jge
ficoms
clc
push
jae
xor
cmp
insb
popf
lcall
dec
test
lea
add
lret
cmp
adc
mov
push
add
sbbl
es
pusha
pop
bound
leave
push
dec
push
lods
iret
daa
bound
leave
inc
dec
mov
shlb
adc
lds
mov
enter
mov
pop
addr16
xor
xchg
lods
in
addl
push
jg
and
and
mov
aam
rcrl
push
aaa
sbb
popl
cmp
ret
cmp
ljmp
pop
inc
or
leave
xorb
popa
mov
xor
mov
ficomps
fcmovne
xchg
notb
dec
cmp
call
movsb
push
mov
mov
push
sbb
in
jno
imul
jno
pop
pop
jmp
mulb
push
mov
mov
popa
xchg
inc
push
jno
and
or
addr16
cltd
jg
pop
ret
inc
xchg
jmp
call
cmpsb
imul
adc
insl
andl
in
dec
sahf
adc
dec
out
adc
fidivrs
les
adc
adc
rcrl
xchg
int3
jne
shrb
jmp
sbb
push
mov
or
jns
jle
mov
pop
rorb
inc
jae
sbb
pop
jp
test
ficoms
jp
loope
clc
in
mov
pop
adc
add
insl
insl
aaa
rcrl
jmp
jo
jecxz
and
dec
mov
sahf
cmp
inc
add
and
xchg
subb
ret
scas
dec
fdiv
jno
sbb
jle
cwtl
sbb
adc
lds
std
cmp
jmp
std
cmpsb
jl
imul
lods
mov
mov
pushf
cmpsb
push
sbb
test
cmpsb
adc
xchg
mov
mov
testb
jg
scas
xlat
mov
fidivl
les
mov
or
adc
insb
fs
hlt
repnz
rorl
mov
mov
roll
notl
dec
cmpl
addb
or
xorl
add
mov
je
push
jns
and
mov
leave
xor
sbb
or
lods
out
bound
sbb
in
pop
ficomps
push
jae
jl
in
push
clc
in
fs
sbb
dec
xlat
and
in
mov
pop
pop
dec
push
aad
lret
lods
jle
ss
mov
mov
clc
stos
jo
aad
push
sbb
push
dec
cmp
cwtl
fcmovnb
and
outsl
mov
lods
sahf
mov
mov
pop
xchg
jmp
push
mov
or
adc
aaa
or
into
popa
pop
sub
or
aas
xor
movsb
lods
jbe
call
push
cmp
ret
mov
aad
les
rcll
mov
sub
jge
cmc
or
jne
in
scas
fldcw
jae
pop
iret
jb
inc
adc
or
jg
mov
or
cmp
lcall
fisttpl
mov
xlat
shlb
notl
dec
fists
sub
popf
xchg
lret
loopne
mov
mov
leave
dec
ja
inc
hlt
movsl
sti
sub
arpl
adc
xchg
dec
xor
pop
icebp
aaa
and
into
loopne
call
ds
jbe
into
sbb
scas
jno
or
scas
fisubs
mov
and
subb
sbb
stos
adc
cs
outsl
jge
std
iret
or
in
repz
xchg
aad
sbb
test
pusha
or
push
adc
nop
pop
mov
jmp
loope
push
test
mov
cmpl
call
jnp
sbb
orl
popa
mov
pop
aad
imul
shl
mov
pop
lcall
insb
lahf
cmp
sub
adc
sub
dec
or
pop
std
fldt
dec
fildl
movsl
std
addl
test
jle
fists
xchg
fisubrl
jae
inc
cmp
sbb
in
test
mov
ds
shlb
sar
jno
push
sbb
in
out
or
xchg
sbb
add
sbb
add
and
test
xchg
movsb
sarl
cmp
fidivs
and
xchg
lods
fsubrs
inc
sub
fsub
push
xchg
mov
fiadds
push
cltd
iret
mov
sbb
mov
jecxz
push
sahf
lcall
mov
mov
das
pop
adc
lahf
ffree
les
movsb
insb
cmpb
loopne
and
icebp
test
int3
pop
pusha
and
out
or
shrl
pop
push
and
mov
mov
mov
repnz
mov
cmp
ds
mov
lock
addr16
aas
ret
sub
leave
dec
inc
cli
add
mov
jecxz
xchg
and
testb
filds
lahf
je
loopne
dec
jge
xor
out
fprem
xchg
cld
sarb
dec
les
and
ljmp
jne
and
lods
fistpll
cwtl
inc
out
dec
jnp
xor
rcrb
cmc
ficoms
mov
bound
mov
stos
push
add
insb
stos
fisubs
outsb
pop
imul
cltd
or
lock
pop
pop
lods
dec
xchg
pop
inc
mov
mov
xlat
jg
pusha
rol
out
pusha
push
fldcw
dec
pushl
adc
lods
sbb
idivb
xchg
dec
mov
push
inc
mov
lods
or
sub
arpl
icebp
icebp
loop
and
pop
stos
leave
out
shlb
mov
mov
and
insl
or
std
sbb
pop
mov
mov
mov
dec
cmp
lods
pop
mov
cmp
pop
and
push
sbb
rclb
nop
stc
xor
cmovno
stc
shrb
dec
mov
jbe
icebp
jbe
loopne
xlat
rep
sub
repz
pop
mov
xor
cmp
inc
xchg
pop
mov
pushf
inc
fisubs
cmp
subb
xchg
inc
jg
xchg
rcl
jl
cltd
lods
xchg
sub
les
xor
jne
cli
out
push
outsl
xor
pop
lods
fdivrs
jge
jg
push
xor
jo
stos
or
mov
cmpsb
xor
xorb
loop
ds
int3
cmp
adc
sbb
loop
sarb
andl
adc
and
movaps
call
sbb
push
fwait
nop
add
pop
testl
mov
or
sbb
adc
and
cmp
pop
mov
mov
dec
ja
cmp
fsubs
xor
fldenv
adc
xchg
das
add
in
pusha
sbb
sbb
arpl
imul
xor
mov
fldt
out
ljmp
mov
lock
mov
pop
inc
cmpsl
add
lods
fcoml
mov
in
mov
outsb
jno
or
jno
sti
push
inc
popf
imull
loope
filds
pop
dec
xchg
out
jnp
mov
lods
and
aad
into
loopne
sub
jl
dec
jecxz
cmp
or
jne
loopne
mov
js
push
pop
aaa
push
daa
add
mov
add
inc
out
stc
fs
arpl
push
outsl
imul
ja
mulb
push
pop
movsb
shl
cwtl
xchg
in
shlb
jmp
dec
test
dec
lcall
rorb
daa
sbb
loopne
cld
int3
push
aas
in
in
add
repnz
mov
pusha
out
adc
adc
fisubl
repnz
leave
pop
add
ret
adc
jne
popf
lods
xlat
jp
add
subl
je
xchg
push
xlat
in
or
jb
sub
ja
mov
addb
xor
xchg
dec
xor
inc
cmp
xchg
mov
ret
or
or
fcomps
loope
arpl
push
xor
mov
and
push
adc
xor
popa
and
jge
adc
call
jb
out
cmc
outsb
mov
bound
cmc
iret
lret
mov
fisttps
cmpsl
out
sub
dec
pop
ja
or
xor
sbb
xor
pop
std
xorb
lds
in
loopne
iret
add
rolb
jmp
pop
mov
mov
loope
sub
sti
lods
sahf
jnp
aam
fldcw
lret
imul
cli
lods
shlb
pop
adc
xor
jb
jbe
cli
cmp
mov
in
jno
mov
dec
adc
push
add
adcl
push
int3
sti
js
loopne
gs
shlb
jp
mov
and
popa
sbb
adc
adc
lds
jl
int3
shll
pop
jbe
shl
mov
addr16
ja,pn
xor
jecxz
jecxz
push
cli
ds
jmp
pop
mov
mov
add
and
lret
popa
inc
cmp
aam
aas
rcl
mov
nop
das
lcall
inc
mov
pop
js
ljmp
arpl
jbe
xchg
or
gs
or
mov
test
lods
gs
stc
popa
cmc
ficoms
sub
jo
inc
mull
fisttpll
mov
or
pop
out
xlat
pop
dec
sub
sti
in
push
mov
add
or
xchg
das
call
sar
rolb
mov
call
and
inc
int
jae
das
sbb
pop
in
out
cmp
sbb
jbe
adc
fisttpll
dec
push
loope
mov
loop
add
jle
adc
jno
push
mov
gs
inc
mov
movsl
sub
xchg
fimull
xor
dec
mov
mov
mov
xor
rcll
mov
sbb
inc
out
js
adc
jge
jae
imul
test
sbb
lods
mov
xor
movsl
cwtl
stos
pop
mov
out
scas
adc
out
mov
std
clc
test
outsl
test
jnp
and
ret
add
inc
inc
xor
fwait
imul
adc
out
xlat
hlt
icebp
push
dec
scas
mov
fwait
xor
repz
iret
mov
data16
cmpsb
push
push
push
scas
pop
insl
and
test
pop
dec
jb
xor
mov
mov
repz
ja
call
adc
rolb
nop
inc
std
mov
or
cmc
mov
push
mov
jnp
add
add
rcrb
sub
dec
xlat
push
xor
mov
icebp
rolb
mov
mov
jp
out
and
cmp
and
ja
dec
dec
mov
imul
fistps
mov
mov
mov
inc
jae
arpl
jne
add
adc
jecxz
shl
ret
test
mov
inc
jae
arpl
jne
add
adc
jecxz
shl
ret
adc
xchg
jne
inc
jae
arpl
xor
add
repz
mov
mov
mov
inc
jae
leave
iret
push
jne
jb
popf
in
lret
mov
mov
dec
dec
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
push
mov
call
xor
pop
ret
mov
enter
mov
mov
sbb
pop
jns
imul
mov
enter
test
mov
cmp
js
inc
or
push
imul
mov
push
mov
flds
sub
sub
sub
jnp
pop
pop
jp
jl
lods
test
mov
push
or
pop
sti
jecxz
xchg
or
bnd
aam
or
jmp
cmp
daa
sarl
aas
addr16
xchg
pop
test
jl
pop
xorl
push
xchg
add
cmpsl
inc
clc
inc
movsb
js
ret
cmp
push
loopne
cmp
mov
cld
call
or
stc
mov
mov
cwtl
xchg
mov
pop
xchg
dec
fs
fldl
inc
fwait
loop
fmuls
sub
das
or
imul
pop
xchg
pop
fidivrs
sub
clc
inc
cltd
imul
dec
xor
push
jb
fs
fdivr
test
mov
cmp
rcrb
dec
or
imul
call
in
mov
or
mov
js
sub
cmp
add
jl
jno
scas
fstpt
mov
loope
stos
pop
or
or
sbb
cmp
imul
int
lock
mov
mov
cwtl
cmp
js
dec
or
sub
pop
or
mov
enter
test
mov
cmp
js
dec
or
sub
pop
or
mov
mov
ss
jno
out
jmp
mov
leave
cwtl
gs
adc
out
xchg
inc
test
ljmp
xlat
inc
push
lock
cmc
sahf
insb
pushf
fnstcw
mov
and
sub
jp
rcll
inc
rolb
jmp
mov
outsb
in
icebp
mov
add
sub
inc
pop
inc
lods
push
mov
mov
inc
cmpsl
cmc
sbb
xchg
lahf
rcrb
ljmp
call
fwait
push
out
lods
repz
push
fstpt
out
cmp
inc
adc
xor
stos
or
sahf
or
add
je
les
cmp
test
pop
jp
movsl
cltd
xor
add
add
les
add
jmp
loop
insl
mov
aad
jae
xchg
pop
pop
cmpsb
sbb
pop
gs
cmp
mov
mov
sti
sub
sarb
jl
adc
out
enter
cmp
cli
inc
insb
xchg
sub
scas
pop
out
ljmp
and
xchg
iret
xorl
mov
lret
out
cmp
mov
test
idivb
punpckhwd
mov
mov
jo
hlt
sar
imulb
xor
scas
orl
nop
stos
mov
test
jns
xchg
xchg
fidivrs
xchg
push
push
lds
fwait
mov
shll
inc
arpl
shrl
fs
scas
repnz
lods
arpl
mov
jg
sub
mov
dec
int3
inc
sbb
sahf
and
sub
int
jp
add
hlt
cli
or
dec
mov
push
repnz
push
or
movsl
sbb
or
pop
shrb
cli
daa
push
cltd
gs
jne
xlat
mov
in
xchg
les
mov
adc
mov
push
dec
adc
out
jne
push
dec
push
adc
jnp
xchg
xlat
fwait
mov
or
adc
mov
adc
xlat
ja
test
jb
jmp
shlb
in
mov
push
sub
pop
decl
lds
jge
mov
mov
aad
ds
sbb
push
inc
pushl
sarl
dec
push
sub
push
outsb
dec
add
popl
lods
fcomip
pop
adc
lahf
add
adc
daa
imul
movb
test
sub
cmc
jnp
dec
push
adc
cwtl
inc
cmp
std
pop
mov
in
addl
mov
dec
ja
or
pop
add
cmpsl
int
mov
jbe
sub
insl
xor
push
negl
lods
popa
in
jb
ret
mov
mov
pusha
ja
or
arpl
pop
cmp
stc
setg
xchg
sub
add
push
xchg
jns
cld
test
iret
xchg
mov
sbb
inc
sbb
in
and
jl
mov
pop
outsl
add
js
std
pop
loopne
stc
push
dec
adc
ret
xor
push
cmp
push
fs
lret
inc
popa
inc
or
lds
aaa
in
and
sbb
dec
pop
mov
sbb
fidivrs
dec
sub
xchg
add
fld
push
fucomip
dec
das
sub
pop
pop
and
pcmpeqw
stos
jb
ret
xchg
nop
cmpsl
sub
push
inc
loopne
aas
rorl
mov
into
inc
xor
nop
jnp
inc
andb
mov
jns
rcrl
in
enter
cmp
ss
iret
dec
dec
adc
cltd
test
add
cwtl
pushf
lds
push
xor
sbb
pop
fs
and
pop
loope
inc
lods
sub
hlt
les
lds
int3
lods
xchg
in
ret
push
rclb
inc
dec
cmp
roll
lret
iret
xor
mov
adc
cmp
pusha
movsb
lods
and
and
pop
jle
or
jmp
lret
mov
arpl
dec
push
mov
cwtl
and
sub
fnstcw
pop
sahf
idivl
das
iret
aas
shrl
loope
jle
cmp
pusha
insl
jno
or
mov
cmp
lds
stos
js
jo
je
mov
xchg
mov
or
pop
push
ja
inc
xchg
push
inc
cmpsb
jo
into
mov
cmc
or
ss
out
xchg
mov
push
std
mov
sbb
xor
int
mov
fildl
subb
mov
js
cmp
mov
out
lock
sbbl
in
repnz
aad
or
shll
sbbb
cmp
mov
cld
int3
es
nop
popf
loopne
sub
cmpsl
sbb
fisttpll
jne
jnp
pop
mov
inc
and
repz
je
and
jmp
push
pop
inc
popa
mov
mov
out
dec
imul
jae
dec
push
out
push
lods
movsb
cs
fs
cmc
pop
inc
es
jmp
loopne
sbb
mov
and
inc
xchg
inc
xchg
iret
aaa
cld
cld
rcrl
jg
lock
push
sbb
divb
sahf
mov
lea
xor
mov
rcrl
push
cmp
xchg
mov
dec
adc
or
aaa
fcomps
dec
addl
jae
divl
int
push
jbe
icebp
lds
sub
nop
jp
ja
or
xchg
scas
xor
lock
xchg
adc
loop
inc
ret
xchg
xor
add
xor
bound
pop
fnstcw
jl
fidivrs
xor
cmp
sub
mov
out
inc
and
push
imul
mov
push
leave
rcrl
out
sub
imul
adc
les
int3
popf
xlat
xor
fisttpl
mov
fstpt
dec
call
loope
mov
xor
ss
je
test
jmp
mov
dec
mov
fnsave
in
fcom
cmp
jb
cld
test
dec
jmp
lds
sbb
arpl
pop
sbb
in
mov
sub
and
jbe
push
shll
jmp
out
insl
addl
mov
dec
out
push
sti
out
mov
adcl
or
push
aaa
mull
and
iret
xchg
xchg
loop
xor
js
iret
jg
xor
arpl
cld
sbb
fstp
mov
xchg
add
lret
xchg
popf
sarb
pop
cltd
das
pop
mov
push
mov
or
pop
or
fs
adc
sbb
jl
mov
andb
orl
mov
pop
jo
and
arpl
loope
daa
je
add
aam
cmp
fdiv
xor
cmp
sbb
lcall
inc
sub
shrb
les
repz
mov
rcl
xlat
rolb
push
inc
jb
add
sub
bswap
icebp
scas
cmp
icebp
xor
popa
das
rcll
mov
mulb
push
sub
in
pop
fwait
imul
pop
sub
dec
or
data16
cmpsl
adc
aam
add
sbb
in
lea
inc
ljmp
scas
xor
jns
lods
stos
hlt
repz
pushw
jecxz
mov
fneni(8087
jne
add
xor
xor
push
xchg
mov
xor
fisttpl
inc
xlat
jl
xchg
cmp
imul
ja
mov
iret
fmul
ret
add
and
adc
mov
add
ja
add
inc
xchg
fdivrl
sbb
jns
sbb
cmp
add
cld
or
push
and
lock
push
dec
icebp
jp
fwait
xor
imul
nop
and
repz
push
mov
add
ja
adc
dec
das
jo
jne
lcall
and
lret
xor
jb
ret
add
sub
dec
sti
jmp
and
ja
bound
dec
mov
fistpll
out
jno
dec
outsb
cld
push
mov
enter
insb
inc
mov
stc
push
nop
hlt
inc
push
data16
sub
push
and
xlat
or
push
cmp
out
or
xchg
les
add
dec
scas
in
loopne
shr
fmull
push
lahf
lcall
lods
cmp
shll
sbbb
adc
cmc
xor
pushf
pop
icebp
repz
es
faddl
cmc
sarb
and
mov
sub
ds
jge
fmuls
aas
pop
and
fisttps
pop
rorl
scas
push
call
aad
dec
repz
roll
sbb
pop
push
jg
icebp
push
push
adc
jp
sbb
pop
add
jo
dec
xchg
push
mov
sub
sahf
std
xor
stos
mov
mov
xlat
test
push
lods
out
xchg
lcall
test
inc
das
int
lret
inc
sbb
inc
add
xchg
add
jge
enter
iret
out
mov
mov
mov
pushf
pop
push
arpl
in
pop
cmp
js
subb
xchg
pop
fcomps
loop
rclb
mov
push
dec
rolb
inc
cmp
insb
xor
cmp
push
sti
and
or
and
jns
and
and
js
push
arpl
sub
scas
aad
pusha
ja
rcrb
cmpsb
clc
repz
dec
jns
push
cli
js
pop
mov
xchg
pusha
repz
lds
or
in
test
nop
and
jo
xchg
or
fmuls
push
jnp
pop
jne
fdivrs
mov
mov
jne
clc
lretw
ljmp
push
sti
mov
addr16
outsb
iret
call
pop
icebp
xor
sbb
scas
sbb
fimull
lods
sub
lock
aam
mov
mov
rcrb
jae
mov
xchg
outsb
fstps
lods
imul
inc
scas
jbe
or
jl
cmp
mov
sbb
or
pop
enter
mov
nop
cmp
or
iret
das
lds
sbb
push
shl
push
rep
xor
cmp
add
rcrl
cmp
dec
cmpsl
xchg
mov
fstl
lret
enter
mov
mov
jle
add
das
daa
dec
ljmp
fmull
test
inc
in
mov
jne
jbe
sbb
insb
lods
add
scas
ret
push
add
push
pop
jo
xchg
icebp
jne
dec
inc
nop
aad
out
xor
adc
mov
push
pop
aad
out
cwtl
enter
sahf
add
push
loope
cmp
hlt
mov
cmp
mov
add
mov
inc
cmp
popa
sub
mov
mov
jbe
notb
sub
add
ja
jl
ja
cwtl
test
hlt
mov
inc
cmp
shrb
pop
push
fbstp
push
adc
xchg
popf
daa
jle
hlt
pop
fdivl
xor
sbb
and
stc
push
push
cmp
bound
cltd
sub
cltd
mov
jns
mov
into
xchg
outsb
adc
sahf
cmp
fcomps
mov
xor
data16
push
pop
add
and
mov
out
popf
push
and
xchg
sbb
cs
rcrl
insb
cmp
into
and
mov
ret
jl
icebp
rolb
ja
jmp
int
mov
mov
sbb
inc
and
cmp
in
adc
push
mov
jnp
push
xor
repnz
addr16
outsb
lods
arpl
dec
jge
lret
daa
push
xor
dec
push
xor
cltd
movsb
loope
fcomip
arpl
xchg
dec
push
loop
mov
fstps
adc
aas
sahf
lret
nop
aad
cmpsb
pop
movsl
lods
xchg
repz
data16
shll
cmovp
hlt
nop
sub
hlt
js
daa
xchg
das
daa
xor
xor
lret
adc
inc
mov
cmpsb
in
mov
mov
cltd
jge
int
inc
les
or
test
aas
mov
mov
enter
cmp
push
insl
stc
std
push
insl
add
fwait
outsb
dec
push
lret
mov
push
and
push
sar
adc
mov
mov
jmp
mov
xor
mov
or
mov
pop
cmp
mov
mov
push
cmp
jb
hlt
and
lret
ret
sahf
cmp
pop
mov
hlt
jns
sbb
mov
movsb
das
cld
cmpsl
int3
adc
hlt
and
and
fistpl
int
movsl
stc
icebp
mov
cmp
int3
stc
jb
jns
ficomps
jg
sub
mov
xchg
xlat
add
push
push
xchg
push
ret
mov
jne
add
xchg
scas
adc
lcall
out
xor
mulb
test
push
out
insl
cld
xor
sti
or
scas
mov
mov
outsl
xor
movsb
pop
mov
ss
pop
add
mov
mov
pusha
adc
out
flds
mov
cmp
stc
xor
xchg
push
adc
jge
pop
push
adc
int3
or
add
jo
je
aaa
mov
stc
pop
jg
jb
popa
dec
pop
mov
push
pop
pop
and
sar
cmc
shld
mov
outsb
fsubr
mov
aaa
and
rcrl
mov
mov
repz
adcl
pop
cmp
hlt
add
lcall
xor
lock
je
adc
dec
lods
mov
push
jmp
in
loope
jnp
jns
inc
repz
pop
stos
xchg
in
cmp
xchg
test
xchg
rclb
rcll
cmpl
dec
add
addr16
inc
sbb
jp
push
bound
test
sbb
jno
mov
cmpsb
inc
add
mov
push
fdivrs
lock
dec
loop
jle
test
push
pop
stos
fisttpl
loopne
cmc
and
pop
nop
test
lcall
arpl
mov
rcrb
adc
movsb
xchg
outsb
add
lods
scas
ret
fimull
inc
call
or
test
aaa
dec
inc
daa
jge
cwtl
cld
stos
ftst
mov
push
sbbb
lds
mov
cmp
out
sbb
push
mov
mov
ljmp
cld
test
sti
push
jp
ret
test
pusha
arpl
or
lds
lret
stc
mov
icebp
mov
out
sbb
ficompl
test
mov
outsb
add
pop
mov
mov
mov
inc
xlat
lahf
mov
mov
jae
and
lcall
mov
rcll
add
inc
fisttps
and
mov
sarl
mov
sub
adc
das
push
mov
cli
pop
cmc
mov
mov
in
xor
stos
imul
pop
fcmovu
fwait
repz
mov
push
fistl
mov
clc
jl
xorl
inc
pop
aas
cmp
je
orb
ret
cmp
sbb
mov
insl
sysenter
pop
cmpsl
xchg
js
adc
xlat
jns
lret
and
fistpl
flds
test
adc
cmpsw
dec
fs
mov
jo
cmpsl
out
sub
enter
out
xor
fidivrl
pop
aam
lahf
fcomps
pop
sub
and
aaa
sub
outsl
inc
lods
jbe
cltd
jne
xor
and
dec
mov
lods
icebp
pop
lods
push
mov
stos
out
lea
insb
int3
ret
mov
fists
xchg
push
mov
pusha
shlb
mov
out
in
test
test
jne
adc
jmp
mov
mov
or
repnz
das
loope
xor
mov
mov
or
mov
jmp
fiadds
outsb
push
lods
je
icebp
cwtl
mov
sarb
jl
les
cs
lea
aas
mov
xor
pop
mov
and
jge
lods
mov
mov
xor
out
and
or
jne
fnsave
cmc
mov
xor
mov
push
test
inc
pusha
movsb
ss
inc
dec
in
sbb
idivl
aam
out
mov
pop
pop
xchg
stos
sbb
xor
or
rcrb
mov
mov
jne
stos
and
lret
cmp
std
cmp
dec
pop
inc
dec
cli
aaa
nop
popa
lods
adc
es
jno
lock
or
cli
dec
or
xorb
icebp
rcr
push
add
pop
fstps
sub
adc
xor
mov
or
rolb
aam
jbe
adc
lcall
xchg
stos
inc
mov
dec
shrl
fs
stos
cs
jnp
push
mov
test
and
pop
sarb
add
pop
jbe
divb
fdivrl
mov
inc
in
fwait
insl
push
adc
dec
dec
push
adcl
mov
cwtl
negb
push
ja
dec
into
push
dec
mov
cltd
xchg
mul
or
jmp
xchg
rcrl
mov
popa
mov
pop
sbb
gs
xchg
cli
push
jae
jno
shll
cs
lock
lret
cmp
cld
rolb
aas
and
adc
out
push
aad
xchg
add
add
pop
jp
cmp
test
push
and
rol
lret
fs
imul
pop
aas
notl
xor
aas
fnsave
out
or
mov
stc
sub
push
int
pop
adc
or
inc
dec
ljmp
ficoml
nop
in
inc
pop
dec
orl
popf
and
add
or
sbb
push
push
push
xlat
push
stos
mulb
mov
xchg
out
in
mov
jmp
pop
mov
rcl
xor
rcrb
aam
pop
pop
dec
test
fstps
add
mov
dec
pusha
das
int
aam
mov
sbb
lock
nop
pop
xchg
jle
sbb
add
mov
aas
rorl
push
push
orl
push
shr
sti
call
mov
xor
ja
dec
mov
lea
je
push
test
mov
mov
insl
add
and
mov
repz
leave
test
fwait
mov
dec
dec
sbb
les
rorb
sbb
cmp
gs
dec
das
dec
rcl
and
jecxz
or
sub
dec
push
test
sahf
sbbb
aaa
scas
pop
jo
add
lea
push
aam
imul
clc
xor
sub
mov
arpl
cltd
cli
test
imul
jge
in
dec
lods
jp
xchg
out
and
pusha
cmp
mov
sub
dec
pop
out
jl
cmpsb
mov
fcomi
add
push
fwait
out
adc
popf
arpl
jle
sub
int
jle
ljmp
or
xchg
push
icebp
xchg
cli
js
mov
add
fimuls
icebp
les
sub
xchg
push
shrb
sarl
sbb
xchg
pop
icebp
mov
pop
or
sbb
lds
mov
xchg
rcl
xchg
mov
push
movsl
lcall
mov
xchg
push
lcall
adc
mov
mov
aad
gs
aas
xor
mov
dec
into
inc
daa
sub
pop
push
sbb
push
jp
mov
pop
pop
mov
stos
xchg
dec
pop
cmp
mov
adcl
mov
inc
dec
or
es
pop
xchg
cmc
sti
jns
test
sub
clc
lcall
mov
cmp
loope
push
pop
mov
and
stc
aas
sbb
mov
nop
xchg
in
jns
loope
stos
xlat
movb
frstor
aam
push
mov
js
orb
push
faddp
mov
adc
in
add
mov
push
sbb
mov
sahf
fmull
lods
pop
fldl
ret
les
mov
insb
pop
stos
fsubp
jmp
or
jmp
cmpsb
outsl
and
adc
mov
jnp
mov
cmp
jae
push
mov
sub
mov
and
mulb
dec
sub
push
or
and
icebp
repz
mov
sbb
mov
fcmovne
in
mov
mov
adc
aad
lcall
clc
lret
jbe
xchg
sbb
inc
pop
pop
push
push
pop
mov
cwtl
push
mov
mov
mov
cwtl
xchg
fsubr
xchg
cwtl
jbe
cs
push
sub
sti
xchg
mov
aad
jb
outsb
adc
or
jl
sbb
std
pop
sar
and
adc
rclb
lret
push
test
mov
and
pop
xor
sub
adc
add
clc
xor
lds
pusha
stos
js
gs
int3
and
lret
jns
inc
dec
sub
das
in
pop
ret
cmp
pop
xor
jo
hlt
mov
adc
out
sub
nop
mov
mov
aas
jae
adc
inc
or
clc
sbb
mov
stc
test
mov
cmp
js
dec
or
sub
pop
or
mov
enter
test
mov
cmp
js
dec
or
sub
pop
or
mov
rorb
rcr
mov
cwtl
cmp
jl
dec
or
sub
cmp
dec
cld
mov
sub
cwtl
stc
test
mov
cmp
or
push
push
loope
cmpsb
jo
pusha
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
jae
cmp
jbe
or
and
add
push
mov
popa
ds
cmp
imul
pop
xchg
mov
xor
jmp
jno
popa
xor
add
push
jmp
mov
in
in
push
push
mov
mov
fnstsw
icebp
inc
aam
popa
sbb
push
push
lret
inc
dec
inc
xor
add
sbb
xchg
mov
or
xchg
mov
out
inc
pushl
xchg
ficoms
scas
pop
and
or
daa
pop
js
pop
ret
stos
adc
fstps
ficoms
hlt
mov
and
iret
sub
dec
xchg
repnz
shrl
test
popf
icebp
sar
mov
lds
mov
jno
adc
jle
dec
insl
aad
adc
mov
leave
cltd
cwtl
inc
push
clc
push
inc
and
in
outsb
cmp
inc
dec
xchg
sub
pop
repnz
jns
imul
fisubrs
jns
mov
jmp
test
mov
dec
icebp
inc
clc
mov
mov
cmp
dec
loope
leave
imul
pop
xchg
pop
rep
aam
les
popf
xor
fnstsw
add
xor
popf
inc
lods
push
mov
call
sbb
test
stos
gs
and
fsts
insb
aad
in
loop
rorl
loope
adc
and
push
stc
inc
leave
jno
popa
sub
sbb
dec
icebp
pop
loope
adc
and
push
stc
inc
leave
jno
popa
sub
jno
inc
pop
gs
push
ja
stos
popf
cli
aad
sbb
pop
pusha
outsb
test
mov
jge
call
pop
xlat
repnz
shl
inc
int3
lock
mov
fldt
lods
adc
jb
hlt
incl
inc
ret
inc
aas
sub
inc
adc
leave
lock
mov
lahf
or
nop
dec
dec
fsubr
lret
jl
les
gs
roll
clc
orb
inc
loop
iret
insl
lds
jno
sbb
repnz
test
mov
int3
repnz
fstpl
fstpt
add
lods
push
inc
leave
push
lods
mov
lock
daa
pop
int
and
stos
nop
dec
leave
push
sub
and
rolb
enter
xchg
in
aas
dec
fwait
mov
xor
mov
jb
xchg
icebp
pop
jp
sub
dec
dec
test
sti
movsl
inc
cli
bound
mov
fldenv
add
and
push
ds
jno
popf
mov
xor
push
push
pusha
sub
and
cmp
mov
sbb
ljmp
fisttpl
aas
ds
xor
and
xchg
inc
cld
and
or
adc
jmp
jno
push
in
and
loope
sub
jne
fisttps
popa
push
xlat
enter
shlb
bound
ret
shll
repz
mov
cld
or
cmp
div
lods
sub
fldcw
aas
cmc
and
fcomip
mov
mov
add
xor
fucomi
push
push
pop
push
cmp
or
dec
pop
adcl
fwait
imul
push
enter
xchg
pushw
add
vcvtsi2ssl
mov
fsubs
inc
les
pusha
addr16
jecxz
jb
jnp
dec
sbb
je
push
int3
lret
mov
dec
test
mov
jb
adc
add
test
mov
pusha
push
into
dec
in
push
mov
sub
in
rcrb
outsl
inc
arpl
in
xchg
fcompl
and
hlt
icebp
inc
mull
aas
inc
or
lock
inc
subb
mov
inc
jg,pn
add
mov
int3
jecxz
cmp
icebp
pop
mov
test
add
lock
pop
int3
and
lods
xchg
je
mov
jecxz
das
push
fucom
lock
jae
push
push
ds
adc
dec
cltd
shlb
pop
div
daa
cmp
je
in
push
mov
mov
xor
arpl
jmp
ret
pop
push
scas
or
sub
jo
or
xchg
and
push
fisttpll
dec
pop
mov
rcll
xor
mov
insb
mov
and
and
scas
pop
cs
out
lods
mov
mull
jg
dec
test
lahf
ja
fnsave
cs
and
into
cmp
cmp
popf
test
int
and
sub
fs
mov
pop
call
push
and
mov
push
shlb
push
jmp
addr16
loop
call
and
lahf
xor
aam
jle
or
pop
push
jmp
sub
push
mov
rclb
nop
fcomp
out
arpl
aaa
mov
cmp
sbb
call
sahf
push
jecxz
dec
test
lret
mov
shlb
cli
lds
jno
inc
jge
lret
aad
add
push
mov
cmpb
incb
nop
fcmovnbe
xor
inc
adc
fwait
test
ja
push
aas
call
loope
jg
into
and
scas
scas
push
subb
xchg
rcl
out
enter
arpl
sarl
ret
mov
cmp
xor
ljmp
cmp
xchg
adc
aas
fwait
int3
push
push
add
mov
data16
nop
xor
in
jge
loopne
mov
xor
inc
xchg
loope
rorb
cmp
fwait
xchg
dec
inc
cmpsb
aam
or
in
mov
adc
out
cmp
lret
bound
push
jl
popf
push
test
inc
push
dec
push
fidivs
mov
into
xor
dec
insb
mov
dec
push
inc
mov
out
arpl
pop
mov
ss
sub
outsl
inc
sub
in
nop
mov
shll
mov
inc
sbb
out
cmc
in
pop
fnstcw
insb
neg
pop
mov
xchg
cmc
xchg
xor
cmp
adc
jge
jge
push
mov
xor
loope
add
in
in
dec
cmp
adc
pop
dec
mov
and
mov
repnz
les
sub
adc
push
push
jns
out
mov
bound
mov
aaa
shlb
cltd
inc
out
xor
pop
enter
mov
jns
insl
mov
out
outsl
mov
andl
pop
dec
ds
push
test
mov
scas
mov
roll
lods
jne
xor
out
mov
xor
aas
stc
lahf
jge
sub
xor
sub
iret
jl
int3
loope
xor
mov
push
fwait
cmc
pusha
fbstp
jl
clc
ljmp
mov
mov
gs
push
popa
or
aam
cmp
xchg
loopne
fimull
jmp
jbe
mov
jns
pop
cmp
lea
push
sub
call
lret
test
lock
jae
insb
jge
outsb
adcl
out
hlt
push
pop
cmpsl
gs
xor
push
mov
push
dec
or
sbb
cmp
int3
or
push
bound
cmp
cld
jbe
xor
or
push
mov
push
ret
xchg
jno
shl
jecxz
mov
mov
lret
xor
adc
add
mov
out
rorl
cmp
lock
insl
lret
jp
mov
inc
push
mov
mov
andl
pop
dec
scas
pop
push
add
mov
pop
sbb
sub
add
mov
fildl
sub
repz
and
push
jmp
lahf
dec
and
mov
fcomp
fldenv
mov
sub
pop
jne
adc
push
inc
cmp
popf
daa
insl
insb
mov
mov
cmp
jge
cmp
mov
adc
push
cmp
pop
call
mov
pop
and
adc
orb
cmp
call
xchg
cmp
ds
pop
inc
cmc
data16
pop
fadds
psubusb
out
cmp
insb
scas
jl
sub
lret
add
mov
ja
les
lods
sbb
loop
or
inc
dec
aad
ret
sub
cmp
loope
cmpsl
sub
dec
dec
lahf
hlt
sbb
cmp
popa
es
dec
fisubl
addr16
jp
shl
jnp
and
cmp
into
lahf
arpl
xor
pop
out
sub
fdivrs
icebp
fiaddl
lods
sbb
sub
dec
aad
mov
pop
rcrb
add
fsubl
lds
inc
or
and
xchg
xchg
push
loope
xchg
aad
test
out
cmp
test
clc
pop
xor
aaa
push
ljmp
out
inc
out
inc
in
jp
push
cmp
jg
mov
push
pop
and
fsubrl
push
pop
stos
leave
xor
mov
mov
icebp
addr16
test
mov
mov
mov
push
xor
mov
into
lock
mov
adc
sbb
stos
not
rcll
cwtl
lods
test
in
mov
inc
jns
icebp
cltd
mov
test
in
xchg
and
rclb
imul
rcr
or
sub
leave
mov
push
repnz
xchg
pusha
divb
daa
mov
test
addr16
divl
pop
xor
xchg
push
pop
push
adc
xchg
add
mov
loope
std
sub
cmp
insl
mov
inc
dec
push
ss
int
mov
nop
pusha
stc
mov
aaa
daa
hlt
dec
imul
mov
outsb
ror
cmpsl
inc
mov
bound
rcrl
popf
gs
jne
jge
mov
mov
stc
arpl
inc
ljmp
sub
stos
data16
outsb
rorb
sub
and
divb
sub
push
jo
addr16
rclb
jnp
fsts
dec
inc
mov
pop
nop
cld
cmp
cmp
xchg
or
sbb
dec
sub
mov
adc
inc
add
fbld
and
jae
xchg
xor
add
fcoms
sbb
xchg
cmpsb
push
pop
mov
xor
insl
mov
lock
rcrl
test
cmp
push
jp
daa
cwtl
pop
jecxz
push
popf
dec
inc
push
loopne
xchg
inc
xchg
loope
in
jle
push
add
sti
mov
and
inc
add
dec
adc
xchg
and
add
lods
adc
out
sub
ja
pop
xor
jnp
jge
add
or
jge
sub
add
out
movsb
lret
clc
mov
jne
stc
mov
fwait
and
xchg
pop
mull
ds
sbb
sbb
imul
cltd
loopne
mov
in
inc
mov
cmp
jne
adc
stc
sbb
mov
xchg
imul
or
loope
pop
xor
leave
mov
shll
bound
lcall
sbb
mov
fists
jmp
sbb
xor
sarb
mov
faddl
pusha
in
xchg
xchg
int
or
mov
mov
push
inc
pop
lahf
ja
inc
sbb
xchg
nop
cmc
jno
adc
test
test
sub
jecxz
xchg
mov
inc
push
in
lcall
sub
jmp
mov
pusha
mov
leave
fildll
add
sub
repz
mov
push
clc
int
mov
lods
push
mov
mov
mov
xchg
gs
stos
or
iret
aam
stos
inc
clc
and
xchg
cli
nop
shrl
push
jne
fcoms
pop
mov
mov
sti
popf
xor
arpl
adc
inc
cmc
lahf
ret
aaa
lods
pop
roll
hlt
xor
xor
loop
mov
mov
ret
nop
or
adc
jp
or
jns
mov
aas
sbb
int
aas
xchg
ret
inc
in
repz
fst
in
sub
jne
inc
into
or
das
xchg
js
test
test
loop
fcmove
fisubs
cmp
enter
mov
jns
xlat
fmuls
push
aas
lahf
lea
jmp
imul
arpl
dec
sbb
movsb
ja
push
sarb
cltd
stc
jae
sbb
je
dec
hlt
gs
movsl
leave
sub
cwtl
mov
sub
das
ror
loope
movsl
pusha
lock
cmp
mov
add
adc
jb
repz
aaa
adc
mov
xchg
call
adc
add
pop
adc
push
mov
xchg
mov
push
loopne
je
out
faddl
test
pop
insb
notb
push
sbb
xor
rorl
stos
sub
mov
jl,pt
pop
dec
add
adc
push
mov
or
rcl
loopne
fidivrs
ja
pop
daa
sbb
jle
and
xor
aad
xor
les
fildll
mov
push
out
popa
mov
or
mov
and
or
cltd
jmp
lods
pop
mov
sub
leave
fwait
ja
xchg
fcompl
int
cmp
mov
mov
xchg
cmpsb
lock
jno
mov
push
dec
adc
pop
movsb
add
ret
push
inc
add
cld
sub
call
call
xor
cmp
push
mov
pop
repz
lds
out
or
fldenv
push
xchg
jo
adc
icebp
add
inc
test
inc
js
pop
inc
mov
insl
shrb
sti
inc
out
lock
inc
sbb
dec
fwait
push
inc
fdivl
or
fadds
pop
jp
test
sub
push
insb
jo
sub
xor
mov
or
mov
dec
stc
int3
das
sbb
xchg
into
jecxz
out
ret
repnz
add
aad
popa
aas
sub
adc
push
or
movsb
and
adc
add
inc
lea
ss
and
cmp
or
mov
add
in
cmp
fidivrs
jae
pop
test
stos
insl
or
inc
xchg
adc
ljmp
jae
insl
dec
mov
push
adc
cmc
ss
or
stos
imul
pusha
insl
adc
jl
das
fsubs
jne
cmc
dec
jge
imul
push
cltd
sahf
adc
fs
sub
or
and
jecxz
and
and
aas
sub
lret
dec
cmpsl
insb
lods
cmp
dec
sbb
mov
xchg
inc
sahf
xchg
lcall
ficoms
mov
out
cmp
leave
mov
mov
iret
repnz
mov
sbb
lahf
jmp
and
jmp
push
pop
mov
inc
sbb
imul
dec
or
xor
push
shll
push
mov
retw
roll
jnp
fildl
cwtl
jge
out
pop
cmp
push
cmc
rcl
cwtl
loope
mov
inc
loope
cwtl
adc
loop
lcall
lret
aam
mov
ja
cmp
xor
jb
xor
mov
mov
fs
jo
xor
dec
add
imul
jb
int3
jge
incl
pop
sub
xlat
or
pop
sub
adc
leave
xchg
sub
jae
jp
inc
lds
das
lods
cmpsl
repz
fdivrl
insb
adc
push
mov
adc
addr16
push
arpl
ret
cwtl
in
leave
jns
sbb
test
std
ret
popf
lea
das
stos
cmp
or
mov
loopne
and
cmpsb
lea
into
into
test
ja
adc
movl
jns
lods
jns
mov
add
pushf
push
arpl
test
inc
cmp
add
jl
neg
loope
pusha
outsb
lea
negl
in
inc
inc
cltd
aad
jl
dec
pop
xchg
push
dec
inc
test
mov
jb
and
jp
xor
push
pop
rcl
pop
aaa
mov
or
jle
mov
fmuls
call
push
lods
test
cmp
lahf
push
dec
and
loope
mov
mov
popl
cmp
cmp
rolb
push
mov
popa
pop
jecxz
inc
xchg
push
mov
adc
pushf
or
xor
pandn
sbb
aam
jb
daa
movsb
nop
lcall
loopne
test
iret
sub
mov
roll
sti
dec
push
and
rcrl
aam
repnz
pop
movsb
adc
or
inc
in
sbb
inc
ret
clc
mov
mov
adc
arpl
mov
jle
stos
pop
pop
repz
repz
rclb
inc
and
jge
dec
push
scas
add
adc
or
add
pop
xor
rorb
adc
jne
pop
mov
jbe
aas
pop
lcall
es
imul
rclb
mov
aas
aas
and
cs
mov
xchg
mov
das
xchg
ret
sbb
lods
mov
mov
jle
pop
ret
or
push
faddl
sub
sub
fcoml
push
inc
mov
and
sti
stc
addr16
xchg
ret
scas
sbb
std
mov
mov
or
inc
inc
in
push
sub
cld
xchg
sbb
inc
fisubrl
push
std
test
imul
cli
rorl
or
add
jbe
sub
fimuls
ja
push
jmp
in
jl
mov
inc
je
test
mov
negl
ds
inc
jnp
sbb
push
bound
shr
jl
xchg
and
out
push
je
popa
inc
aam
mov
cmp
cli
mov
inc
outsb
out
push
jp
inc
movsb
fists
pop
pop
pop
cmpsb
xchg
ljmp
hlt
xchg
xchg
mov
dec
mov
int
ljmp
inc
mov
scas
movsb
adc
jecxz
pop
jle
fs
add
mov
jle
inc
mov
jb
fbld
cmp
ljmp
gs
pusha
movsl
mov
lods
cmp
or
jg
test
test
ja
int3
mov
fcoml
dec
pop
inc
xor
mov
nop
into
call
fwait
aam
out
sbb
and
data16
cmp
sbb
test
cmp
js
dec
mov
jns
insb
jo
sbb
xor
lds
nop
xor
dec
push
lret
inc
jo
sbb
pop
aam
fisttpll
and
xor
pop
or
cmp
stc
nop
inc
out
dec
jp
in
or
xor
test
and
pop
movb
sar
xchg
push
mov
jg
mov
ljmp
and
fiadds
je
test
jge
and
dec
pop
loopne
loope
test
push
aad
or
dec
cltd
dec
push
call
mov
xchg
pushf
push
int
jecxz
push
and
rol
sbb
in
daa
jns
mov
out
xor
fiaddl
mov
push
mov
pushl
mov
sbb
lea
adc
cmc
out
add
xor
mov
inc
push
lock
push
outsb
jl
bound
aam
cmpsb
sbb
push
xor
fdivl
sub
cmp
cltd
dec
fs
mov
adc
and
xlat
mov
push
add
adc
cmpb
rcl
xchg
fdivp
rcll
mov
mov
xor
mulb
add
xor
or
sarb
cld
js
xchg
mov
jg
push
mov
mov
or
ss
pop
xchg
out
sbb
out
sub
imul
shlb
push
roll
loopne
cs
jle
into
stc
xchg
cltd
subl
xlat
pusha
scas
stc
sbb
iret
pop
insb
push
add
or
mov
iret
data16
gs
or
pop
mov
xor
nop
roll
rorl
out
clc
push
aad
xchg
popf
push
clc
mov
sub
cmp
and
add
inc
pop
adc
pop
lods
sub
les
pop
lcall
fisubrs
movsl
jecxz
push
push
jle
sbb
pop
xchg
repz
inc
xor
iret
sbb
xchg
aam
mov
lock
mov
push
sbb
jo
std
ret
loop
pushf
out
loope
fsubs
imul
rcrb
sbb
mov
xor
xor
int3
test
leave
cmp
cmp
mov
dec
or
cmpsb
into
push
adc
push
jg
push
lcall
push
inc
dec
adc
mov
cmp
jg
push
sbb
aaa
lods
test
insb
mov
lret
push
inc
mov
insb
mov
dec
repnz
test
popf
sbb
jb
cwtl
dec
es
test
cmp
jecxz
stc
dec
mov
mov
sbb
mov
fidivs
mov
push
test
mov
pop
into
lahf
les
shrl
xorb
inc
mov
jne
cmp
cmp
cmp
imul
cmp
push
mov
sbb
cmp
outsb
iret
jne
inc
scas
outsb
fistpll
add
andb
js
arpl
cmpsb
and
shl
imul
shr
leave
mov
decl
call
repz
in
jg
hlt
cltd
fsubrs
dec
stos
mov
lcall
and
test
lods
fstpl
pop
in
in
int
jno
fbstp
mov
sbb
sbb
icebp
push
jl
sub
sbb
pop
sarb
cmp
push
sar
jns
ss
add
test
sub
jns
pop
std
clc
aam
outsb
imul
or
or
lods
sub
sub
pop
sbb
pop
xchg
xor
add
adc
dec
mov
xchg
in
movsb
mov
fstpl
rcl
inc
fdivrl
aas
sarl
inc
sarl
sub
jecxz
cmpsb
outsl
stos
cmp
sbb
jl
pop
mov
adc
pusha
inc
jae
dec
test
xor
fisttps
xchg
test
iret
and
enter
xchg
repnz
out
cmp
lret
lcall
pop
shlb
pop
sahf
jg
add
popa
add
stc
cmp
inc
shl
xchg
bound
or
xchg
push
hlt
cli
pop
fsts
xchg
xchg
xchg
incb
inc
jae
pop
sar
jp
push
xor
pop
lcall
out
sub
cmp
jno
inc
xchg
addr16
pop
je
scas
das
xor
add
mov
inc
mov
add
lcall
sbb
dec
icebp
pop
loope
adc
and
push
stc
inc
leave
jno
popa
sub
sbb
dec
icebp
pop
loope
adc
and
push
stc
inc
leave
jno
popa
sub
sbb
dec
icebp
pop
loope
adc
and
leave
jne
gs
mov
mov
leave
icebp
fldenv
push
adc
and
cltd
push
sahf
fnstenv
ss
es
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
push
hlt
add
jl
add
mov
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
cmc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
in
add
fdiv
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
inc
cmc
add
dec
cmc
add
pusha
cmc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
fdiv
add
clc
cmc
add
and
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
je
add
jl
add
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
shl
add
fdiv
add
call
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
add
fdiv
add
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jg
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
inc
clc
add
cmp
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
clc
add
mov
clc
add
sar
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cmp
add
pop
stc
add
cmp
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
aam
add
fdivr
add
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
pop
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
add
cmp
add
dec
cli
add
pop
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
