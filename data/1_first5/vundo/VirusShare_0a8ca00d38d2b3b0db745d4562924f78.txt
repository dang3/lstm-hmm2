incl
pusha
add
pop
push
add
add
add
and
lods
add
add
xor
pop
or
add
or
add
push
add
dec
add
add
or
mov
add
add
outsl
add
add
nop
add
add
xchg
inc
add
or
add
mov
add
or
adc
ljmp
add
xor
loopne
pusha
add
add
nop
add
lock
or
add
add
add
or
add
pop
inc
add
add
add
pop
mov
fldl
add
fs
inc
add
add
add
pop
rolb
int
mov
add
or
nop
add
or
add
rolb
or
mov
add
add
add
push
nop
add
or
add
add
add
or
add
or
pusha
add
or
add
mov
inc
or
add
or
add
lock
or
add
or
pusha
add
push
and
pop
push
add
add
clc
add
add
or
lods
or
scas
push
and
mov
or
add
add
add
add
add
add
add
or
add
or
add
adc
add
add
add
mov
add
add
pusha
add
loopne
adc
add
add
or
add
lock
or
add
or
add
pusha
add
jo
inc
add
add
loopne
push
inc
add
pusha
add
or
add
or
call
or
add
add
add
add
or
aam
nop
add
or
add
add
add
add
push
or
add
push
rolb
inc
or
or
nop
add
add
push
loopne
and
nop
add
wrmsr
add
add
add
add
inc
add
add
or
add
push
add
or
std
add
pusha
add
pusha
add
add
add
push
lock
or
imul
pusha
add
and
pop
add
add
add
loopne
movl
add
or
add
or
add
lock
in
mov
movw
mov
mov
mov
movb
call
push
popl
cmp
jne
movw
push
popl
ret
movw
push
popl
push
push
popl
push
sbbb
mov
addl
andl
pusha
xorl
call
push
popl
mov
sbbb
push
sbbl
xorl
push
popl
addl
addl
push
popl
push
popl
push
push
popl
call
and
orw
cmpl
jne
xorl
call
push
popl
and
ret
push
popl
jmp
push
popl
xor
orl
mov
or
orb
shl
orl
mov
push
popl
sbbw
shl
or
push
popl
mov
push
popl
cmp
jne
xorl
mov
sbbl
sub
subb
mov
call
push
popl
push
popl
popa
push
popl
pusha
sbbw
andw
call
push
popl
movw
mov
push
popl
push
push
popl
xorl
addb
addl
or
subb
push
movb
call
and
push
sbbl
sbbw
xorl
subb
orb
addl
addl
pop
orw
cmp
jne
xorw
ret
addb
popa
sbbl
push
popl
call
push
popl
push
xorl
sbbb
xorl
push
popl
push
popl
addl
push
popl
push
addl
call
movb
push
popl
push
push
mov
mov
add
xchg
subw
xorb
mov
sbbb
shl
andw
push
push
popl
addw
xor
andl
push
push
popl
or
call
subb
push
movw
mov
addb
push
movl
jmp
movl
mov
pop
xor
mov
subl
push
addl
push
add
add
push
orb
push
popl
mov
andw
push
popl
mov
addl
rep
subb
pop
andl
pop
push
sub
ror
dec
mov
add
xchg
push
xor
mov
dec
add
mov
sub
xchg
push
popl
push
popl
xor
and
push
popl
jmp
orl
sub
orw
mov
or
xorw
sub
addw
movb
sub
orw
mov
movb
sub
sub
or
jne
push
popl
add
push
popl
jmp
push
popl
orb
mov
push
popl
xorl
shr
push
popl
shl
orb
mov
push
popl
push
popl
add
push
popl
orw
jmp
subw
and
sub
push
popl
mov
push
popl
xorw
add
movl
addl
cmp
jne
movl
andb
mov
sub
push
popl
add
andl
push
popl
mov
sbbl
add
push
popl
andl
cmp
jne
push
popl
sub
ret
sbbl
subl
push
push
popl
xor
sbbb
xorl
pushl
andb
pop
push
popl
and
lea
xorb
and
or
push
popl
mov
orl
push
popl
mov
xor
lods
push
popl
addw
mov
movb
mov
pop
andw
ret
push
popl
push
popl
push
xor
sbbw
mov
xor
push
popl
add
movw
addb
push
push
popl
push
popl
push
sbbw
push
push
popl
push
andw
orl
push
push
popl
orl
mov
add
mov
push
popl
or
add
orw
push
popl
pushl
movl
mov
push
popl
addw
add
push
popl
push
popl
add
subb
subb
mov
orw
subw
add
movw
subl
xor
xorw
or
lea
andb
mov
push
popl
orl
add
xorb
orl
mov
sub
xor
subw
xorb
rol
xorl
xor
push
popl
mov
inc
xor
cmpb
jne
orb
push
popl
cmp
je
sbbl
push
popl
inc
sbbl
cmp
jb
xorb
addb
mov
sbbw
xorw
add
xorb
push
popl
movzwl
orb
sub
mov
addw
or
add
sub
mov
push
popl
xor
add
push
popl
pop
push
popl
add
cmp
jbe
or
cmp
jae
push
popl
pushl
addl
sbbb
pushl
xor
push
popl
push
push
popl
movl
xorl
subw
xorl
addl
andl
push
popl
pushl
push
popl
movl
call
push
popl
call
sbbb
pop
movb
pop
mov
orw
pop
sbbl
pop
orb
pop
orl
leave
push
popl
or
ret
addb
call
pop
mov
out
dec
and
loopne
lock
js
dec
add
add
jbe
inc
js
sub
nop
and
cmp
fwait
mov
pop
out
cltd
sub
sarl
adc
cmpxchg
inc
mov
in
cmpsb
mov
cltd
and
fcoms
xor
cmp
inc
ljmp
xlat
jns
popa
out
sbb
dec
mov
movsl
cmp
int
mov
call
into
inc
sub
and
out
repnz
mov
lret
nop
lock
mov
loope
and
adc
ret
xchg
xor
jb
or
mov
into
mov
dec
push
inc
mov
mov
inc
xor
cmp
test
inc
pop
ss
jns
call
ds
nop
rolb
sarl
test
call
lods
rcrb
adc
jae
xchg
andl
int3
orl
hlt
jl
jno
outsl
test
jl
ret
xor
outsb
mov
roll
aam
or
adc
pop
iret
xor
out
pop
xor
outsl
ljmp
or
push
ljmp
rcrb
pop
sahf
int
and
xchg
xor
xor
mull
pop
and
xor
mov
inc
lds
adc
inc
outsl
js
std
adc
sahf
std
inc
popf
push
fs
jae
cmp
dec
add
dec
lea
filds
test
xor
dec
xor
and
into
jmp
ficompl
ret
popa
pop
clc
xor
pop
test
loopne
mov
cmp
and
fs
sub
data16
pop
jg
mov
ljmp
jg
mov
mov
add
aad
pusha
lret
sbb
fs
outsl
insb
mov
es
xor
sub
movsb
rcrl
repnz
mov
in
leave
scas
outsb
xor
inc
repnz
iret
call
or
pop
adc
xor
xchg
cmp
cmp
fcomps
out
out
pop
xor
adc
ds
add
daa
mov
cmp
pop
xchg
nopl
fdivp
lret
enter
mov
jg
out
adc
inc
outsl
mov
jb
js
pop
repz
xchg
cmp
mov
in
fstl
popa
pop
loop
push
test
loopne
inc
mov
sub
stos
mov
in
or
cmp
ss
mov
jb
js
shl
mov
jle
xchg
cmp
sbb
out
mov
mov
sub
pop
jg
repnz
leave
lock
ret
subl
push
into
inc
push
xor
lahf
test
sbb
mov
stos
and
and
mov
adc
adc
enter
sub
aas
cwtl
loope
cmp
inc
mov
or
pop
inc
jns
mov
pop
push
dec
mov
fsubl
out
cmp
imul
and
fistpl
lret
sub
xchg
jnp
nop
aam
inc
adc
je
xor
outsb
xchg
mov
dec
and
jl
lods
pop
inc
mov
rorb
lock
jbe
int3
test
or
add
ja
cmpsb
scas
sbb
jno
idivb
mov
sbb
pop
add
mov
jg
mov
mov
inc
adc
ret
sub
jb
inc
fst
cli
cmpsl
jl
mov
sub
scas
adc
arpl
cmp
mov
das
ret
iret
inc
push
loopne
int3
shl
sbb
arpl
popa
push
scas
inc
or
mov
jp
call
lcall
ror
xor
pop
cltd
pop
aad
cmc
sub
addr16
addr16
dec
inc
or
ret
xchg
pop
addr16
loope
sbb
mov
popa
ficompl
mov
pop
cltd
ret
stos
mov
lods
pop
pop
pop
mulb
xor
insb
sahf
and
pusha
popf
jno
add
aaa
jle
jno
pushf
add
mov
inc
jno
dec
or
loopne
xor
lret
sbb
nop
fiaddl
in
add
idivl
lret
dec
out
add
mov
loopne
loopne
xor
loopne
pop
outsl
push
push
xchg
push
mov
out
ficompl
xchg
int
push
add
outsb
jbe
xchg
sbb
ret
sub
cmp
test
sbb
call
jb
jb
xchg
std
mov
xor
leave
std
in
ljmp
ljmp
xchg
mov
adc
ror
lret
data16
cwtl
test
add
mov
xchg
add
or
dec
and
xchg
addr16
call
ss
mov
inc
xor
lret
jbe
or
jecxz
out
not
in
and
bound
nop
in
and
lock
divb
mov
inc
cmp
cld
in
dec
addr16
dec
jnp
dec
add
mov
js
cmc
mov
dec
movsl
outsb
insb
jno
cmp
rcrl
sub
jns
mov
fistps
addr16
in
into
dec
pop
out
jl
clc
add
push
pop
out
push
subb
mov
jecxz
out
or
mov
into
sarb
xchg
lock
mov
pop
cmc
mov
leave
xchg
fwait
outsb
pop
dec
adc
sbb
mov
jecxz
push
sahf
jns
fs
in
stos
popf
pop
in
mov
inc
cmp
dec
add
mov
int
les
lock
test
jge
pop
loope
and
or
jp
sub
mov
sub
or
jl
negl
ljmp
and
popa
jae
xorl
inc
in
fadds
add
test
jb
mov
aaa
jo
icebp
inc
rcl
cmpsl
js
inc
inc
cs
mov
lret
push
addr16
clc
movsl
push
dec
pop
out
jl
ss
or
or
loope
subl
mov
sbb
xor
stos
cwtl
push
jg
sbb
aaa
loopne
inc
leave
push
sbb
call
aad
pop
push
jb
sub
pop
sbb
cld
and
scas
inc
cmp
pop
sti
xchg
sbb
xor
test
mov
outsb
inc
stos
in
pop
add
fcmovnbe
sbb
sahf
in
xlat
adc
fcomps
sbb
push
gs
jno
pop
dec
sbb
mov
mull
inc
xor
mov
sbb
xor
repnz
jle
aam
ret
lock
js
adc
push
insl
mov
jne
xchg
xchg
push
cwtl
mov
stos
leave
jo
xor
dec
xchg
sbb
ljmp
cmp
mov
das
nop
ljmp
mov
mov
mov
sub
loope
and
bswap
adc
fcomi
clc
pop
daa
gs
jno
pop
pop
sub
sub
inc
mov
xchg
js
add
pusha
mov
filds
jmp
push
daa
ljmp
pop
xor
sub
cmp
push
in
loop
dec
push
loope
dec
icebp
nop
fwait
dec
add
push
or
outsl
ret
pop
sub
xchg
dec
jne
sub
scas
xor
xchg
fiadds
push
or
in
int
inc
pusha
xor
pop
mov
mov
popa
sub
jne
mov
pextrw
popa
pop
pop
add
pop
fisttpll
push
sbb
jmp
dec
subb
pop
loop
lahf
mov
jb
ljmp
lret
xorl
fsub
jbe
dec
je
xor
or
daa
xor
xor
dec
cmp
sbb
pop
fld
addl
pop
or
test
dec
pusha
push
addr16
shl
and
sub
cmp
xor
loope
dec
sbb
enter
xlat
dec
out
cmp
rcrl
or
add
imulb
pop
add
lods
jmp
leave
ss
rcrl
movsl
xor
je
mov
into
mov
push
push
ror
aam
jns
enter
in
hlt
mov
inc
push
addr16
addr16
cmp
inc
mov
xchg
inc
outsl
or
int
mov
mov
and
pop
je
mov
mov
dec
in
leave
push
adc
mov
cltd
and
stos
push
inc
jl
lds
push
outsl
jmp
stc
and
pop
icebp
xlat
push
dec
js
sub
out
sub
xor
mov
leave
cmp
mov
ss
inc
rclb
out
dec
shl
sub
dec
stos
loope
mov
pop
hlt
jb
test
cmp
or
jno
mov
pop
inc
push
shll
imul
push
xlat
xchg
in
inc
fsubrp
outsl
pop
add
push
xchg
xor
add
sub
lock
pop
or
pop
outsb
jb
ja
adc
push
jmp
decb
iret
push
mov
repz
mov
lods
out
dec
sub
into
xchg
jmp
cmp
faddl
xchg
push
sbb
add
mov
nop
ftst
stc
cmp
adc
mov
xor
push
dec
jns
push
mov
xor
sub
pop
insb
inc
pop
mov
add
or
xor
mov
int3
mov
mov
adc
xchg
mov
sub
cmp
ja
punpckhbw
lods
outsb
stc
mov
mov
imulb
inc
cmp
xor
adcb
mov
push
arpl
mov
push
pop
mov
sarb
xor
pop
mov
test
popa
xor
rcrb
cmp
mov
addr16
roll
adc
fists
imul
addr16
add
jbe
pop
pop
scas
mulb
mov
repnz
cmc
iret
roll
sub
pop
cmp
pop
jecxz
inc
popa
pop
lea
loopne
aad
std
pop
fistl
ror
aam
js
pop
test
into
inc
xor
dec
add
std
mov
inc
push
loopne
jo
enter
je
xor
in
daa
sub
nop
pop
or
jecxz
das
jb
mov
lock
loopne
xor
cli
ljmp
mov
dec
lds
sbb
outsb
mov
call
sbb
adc
inc
imul
jmp
loopne
adc
inc
sbb
test
cmc
ficoml
jmp
sbb
mov
mov
adc
ret
in
icebp
lods
pop
or
cwtl
cmp
lea
mov
mov
stos
in
negb
add
popa
push
out
int3
lcall
ja
sub
clc
ljmp
sbb
lahf
sbb
shlb
sarl
shl
dec
sub
cmp
mov
sbb
imul
adc
ljmp
shrb
mov
or
adcb
add
xor
xchg
xor
xlat
push
aam
mov
addr16
cltd
mov
mov
push
jp
out
fisubrs
data16
mov
push
sarl
inc
bswap
adc
in
sarb
mov
cli
pop
mov
fwait
cltd
popa
pop
lret
inc
rorl
sarb
xor
pop
mov
mov
popa
pop
add
add
pop
inc
or
xor
mov
xchg
arpl
repnz
fsubrl
cmp
mov
pop
stc
push
or
add
inc
in
fsub
and
dec
jg
pop
shl
test
outsb
cmp
xlat
jbe
sbb
imul
leave
mov
sub
push
push
loop
cmp
std
adc
add
inc
mov
sahf
push
pushf
nop
inc
push
pop
rcl
cmpsl
cwtl
aaa
pop
lret
clc
or
in
lret
daa
mov
xor
lret
mov
out
es
pop
inc
jg
shrl
cmp
mov
dec
sbb
jnp
add
jmp
push
jnp
adc
xchg
xor
rcrl
or
xchg
jno
hlt
pusha
sahf
mov
popf
mov
mov
into
dec
pop
mov
adc
call
pop
inc
mov
int
and
xor
jmp
or
cld
jo
xor
sbbl
mov
lock
enter
imull
ret
sbb
mov
xchg
repnz
pop
add
inc
aam
push
xor
fmulp
loop
sti
dec
sbb
shlb
or
cmc
movsb
cmc
fs
int
test
movsb
dec
sti
dec
inc
pop
dec
std
xor
out
mov
pop
or
rclb
sub
sub
push
lods
push
ret
mov
pop
inc
lahf
fdiv
jno
mov
loope
sub
enter
mov
lods
fdivrl
mov
pop
in
mov
js
cmpl
jl
lret
cmp
out
ss
xor
jb
js
lahf
repz
xchg
cmp
fidivs
mov
lahf
adc
xchg
pop
push
pop
rcl
je
mov
out
mov
mul
mov
inc
cmp
mov
mov
xor
or
inc
pop
ja
es
lock
dec
adc
in
fsub
mov
jno
cmp
adc
jb
hlt
repz
sbb
inc
mull
xor
mov
cmpsl
test
inc
arpl
jb
lret
mov
mov
push
mov
mov
pop
out
addr16
negw
scas
lods
out
ficompl
push
adc
jg
outsb
repnz
push
sub
stos
pop
jne
movsl
aad
data16
dec
mov
jb
leave
inc
adc
pusha
popf
jbe
cmp
dec
pop
sub
fcompl
jl
sbb
pop
out
push
add
ror
lret
fs
bound
dec
add
test
ret
mov
vcmpsd
lock
push
test
loopne
xchg
popf
dec
aad
ja
sarl
js
cmp
lds
out
push
iret
inc
sbb
mov
mov
movsl
mov
nop
popa
push
pop
rol
std
sahf
das
push
cmp
out
mov
out
les
adc
je
mov
push
lret
clc
cs
adc
xor
xchg
daa
aad
leave
outsb
addr16
jmp
push
jno
xor
push
lock
xchg
xchg
fdivrl
xchg
or
push
sbb
dec
xor
das
aam
pop
in
in
jg
pop
idivb
pusha
adc
daa
add
mov
push
push
fiaddl
jl
shl
lahf
cmp
movsb
ret
loope
in
loope
cmp
pop
in
aad
sub
imul
add
mov
shll
push
in
aad
ret
lcall
push
inc
ljmp
ret
adc
mov
stos
nop
mov
push
sub
xor
bound
sub
push
lods
lahf
jmp
rcr
sbb
dec
push
imul
ret
hlt
pop
ds
sbb
addr16
int3
js
out
inc
loop
dec
pop
mov
std
xlat
subb
cmp
adc
stos
not
in
mov
nop
sarb
jno
mull
or
ljmp
cmpsl
adc
xlat
into
pop
mov
mov
cli
inc
jp
mov
jns
jae
mov
pop
adc
mov
pop
testb
jno
imull
inc
lahf
imul
loopne
push
addr16
jmp
xor
jl
mov
xlat
xlat
loopne
xchg
sbb
out
ja
xor
lock
add
neg
jbe
mov
mov
jg
dec
mov
in
inc
pop
test
outsl
pop
sarl
dec
add
xor
jno
mov
mov
cmp
pop
inc
mov
out
push
scas
mov
cld
mov
loope
or
xchg
andb
stos
pushf
call
out
cmp
repnz
mov
ror
js
xchg
sbb
xchg
mov
jo
rorb
insb
mov
or
mov
dec
into
push
ret
xor
std
cmp
in
jmp
adc
stc
scas
push
cmp
stos
jae
jecxz
in
mov
inc
pop
inc
inc
dec
pop
repz
pusha
in
icebp
jne
adc
div
add
xor
sub
cmp
iret
lcall
add
ret
jle
push
xor
mov
mov
jb
paddusb
cld
bound
mov
filds
push
in
inc
imulb
xchg
int3
lret
gs
andb
call
cmp
lret
sar
cmpsl
mov
inc
inc
and
xchg
sub
cmp
sub
js
cmp
xchg
jle
xchg
cmp
jge
enter
mov
mov
xor
sub
cmp
outsb
mov
ror
jne
ljmp
mov
cli
sub
xchg
cmp
jmp
xor
aas
lret
push
cmp
out
dec
jb
js
cmp
js
jle
xchg
aas
mov
inc
push
loopne
adc
in
push
dec
cld
subb
fisubrs
movsl
mov
jg
push
push
ljmp
mov
push
gs
inc
pop
dec
add
fsts
pop
lcall
lret
push
jbe
inc
orb
cwtl
jmp
mov
test
adc
add
pop
in
xchg
pop
div
fisubs
popa
or
lods
orl
push
hlt
ja
adc
push
pusha
xor
int
mov
ds
push
movsb
in
repz
mov
jnp
pop
repz
pusha
in
icebp
iret
pop
adc
lods
leave
dec
sub
fdivrs
in
pop
cmp
out
sahf
push
or
push
call
mov
pop
sub
pop
js
sub
aas
mov
inc
cmp
inc
mov
lea
enter
pop
mulb
inc
inc
pop
hlt
pop
pop
xor
xor
js
mov
sub
mov
add
xor
inc
icebp
xor
and
inc
push
pop
mov
mov
pushl
mov
mov
cmp
jo
adc
mov
or
stos
cmpl
add
sbb
sub
mov
mov
mov
and
jge
jno
aam
shl
dec
out
enter
jns
mov
xchg
pusha
aam
xor
daa
outsb
stos
cld
and
add
pop
dec
scas
loope
mov
imull
arpl
jno
mull
hlt
fisttpl
aam
inc
inc
ret
adc
je
mov
cltd
dec
pop
mov
data16
sti
xchg
lcall
push
push
ljmp
shlb
sbb
mov
pop
inc
xchg
jae
push
loopne
dec
imul
mov
or
jns
mov
cltd
or
mov
data16
in
aaa
fcmovnbe
rorl
mov
fistps
jle
stos
jbe
test
adc
data16
in
mov
mov
mov
movsl
out
loop
pop
push
pop
shlb
ljmp
arpl
add
loop
xor
cltd
push
lds
movsl
mov
or
mov
and
test
inc
test
addb
dec
pop
lahf
or
mov
jbe,pn
mov
jnp
jp
jl
arpl
pop
mov
sub
sub
inc
icebp
pop
push
add
std
stos
push
cmp
mov
jno
je
sti
cmp
push
pop
lret
mov
and
std
mov
adc
jge
out
inc
fidivrs
inc
or
stos
mov
xor
cltd
mov
out
fldenv
add
pop
les
push
ret
mov
fdivs
sti
adc
mov
push
inc
sahf
ret
sarl
jmp
lcall
popa
xchg
fidivrl
cmp
cmp
mov
jb
js
out
pop
bnd
xchg
cmp
test
pop
mov
jl
pop
jecxz
push
jae
sub
fldcw
test
xchg
popf
clc
arpl
out
or
in
fimull
shlb
xchg
inc
push
pop
rcl
mov
out
mov
add
call
xchg
mov
aad
pusha
shr
lret
sbb
inc
aad
add
pusha
out
in
pop
ds
push
dec
pop
les
pop
js
cmp
in
or
cmp
jb
ds
mov
jle
adcb
adc
dec
in
cli
jle
lea
das
loop
jle
xchg
mov
inc
mov
test
jno
or
cmpsb
fisttps
repnz
imul
push
adc
faddl
cmp
dec
xor
mov
lock
add
xor
xchg
popa
push
mov
fwait
imul
icebp
jo
add
and
jb
adc
in
nop
inc
jae
push
cld
lods
sbb
int3
dec
pusha
push
out
jnp
outsb
enter
mov
inc
jo
lret
lahf
test
mov
stos
test
dec
add
jno
add
sarl
inc
pop
ss
mov
into
mov
outsb
jne
shrl
dec
bound
out
push
popf
xchg
cltd
movsl
lods
out
leave
adc
cmpsl
test
or
pusha
adc
jb
push
xchg
xchg
cmp
jge
cmc
jecxz
in
aam
jo
test
adc
icebp
mov
std
pop
xchg
fsubrl
jle
sti
fstl
ljmp
ftst
movb
or
test
pop
cmp
mov
mov
jmp
fwait
push
xchg
push
test
shll
cmp
imul
adcl
popf
in
push
cmp
shrl
mov
shrb
cmpsb
aaa
cld
das
fsts
pop
movsb
mov
stc
outsl
mov
test
pop
xchg
test
jecxz
repnz
js
sub
out
mov
mov
cli
adc
lds
subb
adc
jnp
mov
inc
scas
loop
incb
ret
ss
sub
mov
outsb
mov
daa
push
test
pusha
xor
adc
leave
add
lods
mov
pop
outsl
push
inc
push
xchg
mov
jge
aad
inc
mov
pop
outsl
cmp
and
in
push
push
pop
sub
xchg
mov
push
adc
loop
imul
lret
xor
dec
iret
lea
cld
mov
and
lock
mov
fcmovnu
sbb
fdivs
shlb
jae
mov
ret
lea
ljmp
sbb
inc
and
loope
call
movsl
and
sub
cmpsl
lock
dec
dec
mov
add
icebp
pushf
mov
push
into
xor
push
cmp
insl
cmp
jp
rep
sub
jmp
cmp
jl
cld
xor
repnz
pop
add
inc
xor
stos
movsl
out
scas
loop
dec
sbb
pop
dec
shr
imul
pop
and
sub
std
loope
mov
scas
int
sub
mov
xorl
jg
sbb
adcl
rol
popa
pop
imul
mov
xor
js
xchg
mov
mov
addr16
push
pop
dec
add
mov
cltd
cmp
dec
push
inc
mov
jecxz
jmp
filds
cmp
jmp
in
sarl
xor
pop
mov
mov
scas
js
shlb
cld
mov
addr16
outsb
out
inc
add
mov
shrb
dec
adc
dec
fwait
enter
add
int3
mov
push
into
jp
mov
out
inc
stos
popf
xor
mov
cmpsb
repnz
push
dec
jns
mov
popa
jle
shlb
pop
sub
cmpsb
mov
out
lcall
fwait
sbb
pusha
push
adc
mov
insb
dec
inc
pop
inc
in
in
and
and
roll
fidivl
adc
in
dec
popf
stos
xor
je
sarl
jecxz
in
mov
popf
pop
and
push
push
imul
gs
subl
xchg
mov
shrl
sbb
or
popa
jmp
xor
pop
loopne
adc
inc
cs
shlb
jae
lret
sub
dec
cmp
jge
sub
mov
pushf
into
jl
arpl
pop
sbb
in
adc
test
jb
dec
pop
js
sbb
cmpsb
movsl
pop
jle
sub
popa
push
and
fs
pop
mov
loopne
cmp
sbb
jp
pop
mov
or
js
cltd
out
in
in
inc
stos
xchg
dec
add
pushf
ss
call
dec
and
or
imul
mov
dec
out
lea
pop
call
mov
xchg
or
adc
mov
pop
out
push
loop
vpshuflw
pop
aaa
cmp
pop
outsl
and
mov
mov
aas
mov
and
sarl
rorb
ss
lret
ds
out
mov
adc
lods
cmp
shrl
jns
aaa
adc
stc
jno
or
pop
inc
or
lods
les
or
loopne
xor
leave
cmp
call
in
add
dec
es
or
inc
pop
aaa
inc
ret
popa
pop
mov
cltd
xchg
cmpsl
js
pop
incb
icebp
mov
inc
xor
dec
add
dec
clc
or
filds
jno
mov
jne
mov
scas
sub
stos
mov
mov
aad
pusha
popf
out
imul
pop
add
mov
aad
mov
xchg
pop
cltd
pop
lret
inc
xchg
jmp
mov
not
loopne
mov
das
clc
dec
mov
sbb
or
rolb
cmpsl
adc
inc
pop
loopne
out
shl
cmp
arpl
orb
and
push
sbb
dec
xchg
mov
add
xchg
es
mov
xlat
mov
pop
jno
xor
push
repz
iret
lock
cmpsb
push
pop
or
stc
or
imul
int3
ja
jmp
mov
fmull
cmp
cmp
loop
jae
repz
repz
ds
mov
aaa
mov
inc
cmp
in
and
popa
cmp
jb
jmp
fcmovnu
push
leave
xor
fsubp
sub
stos
cltd
rolb
sti
pop
xchg
mov
das
out
jle
shrl
sub
cmp
mov
jae
shl
lret
insl
rorl
jmp
inc
into
cmp
xor
lret
mov
mov
pop
mov
pop
push
lods
inc
lret
push
shlb
ror
imul
xor
into
adc
adc
leave
lret
sbb
jmp
shll
std
fbld
ss
xor
jb
js
jle
enter
das
jle
xchg
cmp
mov
aaa
pop
add
mov
mov
cmp
push
fmull
in
in
cmc
cmp
leave
jno
sarb
cmp
std
mov
jb
js
mov
movsl
mov
jmp
cmp
out
or
mov
cmpsl
inc
push
popf
pop
cmp
call
jl
push
push
cmpsl
xchg
shl
sti
inc
nop
daa
xchg
stos
mov
sbbl
mov
cmp
jb
mov
mov
mov
repz
out
jo
cmpl
jecxz
ss
cmp
jnp
pop
repnz
jmp
lret
jo
sarl
subl
lea
ret
cltd
rolb
mov
lock
cmpsl
lds
aas
adc
stos
loopne
std
mov
cmp
in
add
push
and
in
in
scas
shrl
push
jp
push
sub
int3
rcl
daa
push
stos
xchg
mov
push
scas
xor
sbb
clc
pop
xchg
imul
mov
sub
loop
pop
add
mov
lods
rcr
in
mov
sub
xchg
and
popa
pop
cmpb
jmp
lret
jo
sarl
and
mov
inc
pop
addr16
addr16
addr16
jge
jno
aam
shl
sbb
xor
inc
and
xchg
stos
xchg
cmpsl
push
lret
ljmp
js
and
mov
push
inc
cmp
out
cmp
mov
in
stc
pop
sbb
push
inc
pop
cmp
jnp
inc
mov
iret
pop
pusha
xchg
in
dec
pop
movsl
xor
loope
das
jns
xchg
std
pop
jno
frstor
aad
int3
jbe
repnz
movsl
mov
jecxz
aam
jns
jge
jno
pushf
mulb
fisubrs
in
and
out
jg
shll
bound
mov
pop
dec
scas
mov
orps
out
jl
lds
ljmp
addb
sub
lock
mov
mov
jno
roll
shrb
jno
mov
call
enter
test
lea
movsl
popa
jmp
xor
movsl
in
fiaddl
in
out
jl
mov
push
cmp
inc
mov
jb
js
xchg
repz
orb
sti
xchg
aas
mov
ljmp
movsb
adc
gs
shll
push
pushf
jmp
int
loop
pop
xor
mov
jno
cmp
jno
push
pop
lcall
fdivl
bound
dec
jae
inc
inc
xchg
setge
add
gs
inc
mov
movsl
mov
sub
mov
call
stos
mov
pop
lcall
in
lock
add
adcb
push
out
ds
jmp
pusha
lahf
jae
mov
jmp
testb
jns
dec
xor
pop
mov
sbbb
inc
pusha
sti
and
mov
cmp
cmp
push
cmpb
mov
mov
pushl
outsl
lcall
mov
out
ficompl
jo
shld
lods
dec
fdivl
mulb
sbb
cld
inc
hlt
lock
pop
fwait
or
pop
pop
push
or
rolb
rcl
and
in
cld
into
mulb
mov
into
mov
pusha
call
je
sbb
push
pop
loopne
mov
loope
inc
imul
in
mov
jmp
cmp
dec
add
jecxz
mov
leave
mov
mov
loopne
dec
add
in
jbe
xchg
dec
add
incl
xor
pop
dec
adc
pusha
jg
fistl
push
mov
jmp
nop
push
stc
jae
aad
cmpsb
jb
jmp
sbb
cmp
jo
imul
popa
repz
push
mov
cld
sbb
dec
loop
dec
sbb
loop
inc
ficomps
fidivl
xor
faddl
dec
js
sub
xor
fcmovnb
inc
or
pop
movsl
adc
enter
mov
nop
int
loope
out
jl
out
dec
das
push
xchg
jmp
movsb
jmp
aam
call
jg
lea
inc
xchg
fisttpll
imul
lods
hlt
cmp
out
je
mov
pop
popf
mov
or
inc
dec
cmp
add
fistps
sti
into
and
imul
mov
mov
fsubl
faddl
adc
adc
fstps
mov
mov
pop
cmp
jp
and
in
out
mov
mov
sbb
test
dec
add
xchg
dec
jecxz
in
mov
inc
pop
sbb
mov
cmp
pusha
shlb
jae
mov
pop
fwait
xchg
lods
lcall
cld
jns
adc
mov
lcall
nop
out
push
les
and
sub
pop
mov
movsb
mull
inc
inc
add
jne
pop
aaa
sub
pop
cmp
dec
test
out
mov
mov
aas
mov
clc
push
xchg
and
xorl
mov
mov
in
add
aas
lahf
cmpb
adc
pop
lods
xchg
cmp
pop
loop
add
popf
fildl
loop
mov
into
mov
jmpw
push
mov
outsl
add
test
popa
mov
and
fsubrp
jecxz
sbb
mov
fistl
into
mov
mov
sbb
sub
jg
mov
and
sarl
std
adc
les
xlat
addr16
push
xor
inc
mov
lret
leave
pop
jp
mov
es
mov
icebp
shl
imul
jle
jmp
pusha
mov
dec
pop
jmp
lds
in
icebp
xchg
pop
or
inc
pop
lret
es
movsb
repnz
not
xor
daa
xchg
stos
mov
mov
mov
xor
add
fnsave
jb
into
pop
fsub
aaa
xchg
jmp
pusha
mov
dec
adc
adc
adc
cltd
stc
adc
rorl
cld
push
std
enter
aas
adc
jb
pop
xor
pop
xor
pop
mov
lcall
pop
roll
mov
into
mov
mov
ret
aad
iret
int3
lret
fs
shrl
inc
xor
mov
sbb
sub
and
inc
lods
sar
cmpsl
xchg
repz
addr16
mov
jecxz
cmp
or
loope
dec
mov
xchg
pop
test
icebp
fcmovnbe
sbb
dec
fs
cmp
cmpsl
inc
mov
cmp
dec
sbb
cwtl
jecxz
cmp
add
cmp
out
dec
and
inc
mov
js
pop
clc
loope
xbegin
cltd
cmp
mov
xor
add
cmp
mov
dec
cmp
aaa
or
push
jnp
pop
mov
int
pop
out
mov
adc
and
repz
push
into
push
jg
jno
mov
mov
push
pop
rcr
je
sahf
or
push
out
mov
adc
push
cmpsl
jmp
xorl
neg
out
je
jo
xor
push
pop
sti
testl
jb
pusha
xor
loop
js
sub
xor
jnp
pop
cmp
lock
push
fstps
pop
jae
mov
jae
mov
leave
lahf
ja
push
xor
dec
sbb
xor
lret
xchg
mov
into
jp
movsl
jmp
mov
call
sub
sarl
shl
dec
es
out
cmp
js
lahf
xorl
adc
mov
pop
pop
jge
cmpsb
fnstenv
dec
notb
push
fistpll
pop
outsb
jb
aaa
mov
cli
mov
and
and
xchg
jo
outsb
mov
push
mov
adc
cmpsl
push
loope
push
shll
mov
les
lds
scas
mov
xchg
ficompl
int
insb
enter
jbe
push
in
dec
pop
cld
sbb
cmp
push
add
dec
or
call
test
test
lods
in
ret
leave
xchg
adc
add
fbstp
aad
shr
arpl
scas
jmp
repnz
push
adc
or
inc
loopne
add
mov
pushl
dec
inc
scas
cmpb
cmp
pop
cmp
jp
cmp
repz
or
or
int3
scas
cmp
xor
adc
xchg
cmp
out
dec
sub
cmp
adc
enter
loop
mov
sub
lahf
push
arpl
jg
xchg
mov
push
repnz
add
xor
sahf
in
inc
dec
cmp
test
data16
fistps
inc
pop
mov
into
sarl
mov
sub
push
sarl
int
mov
cmp
and
jge
call
adc
aam
shl
mov
cld
int
sbb
out
ficompl
add
xchg
lods
push
fisubs
sbb
imulb
pop
xchg
push
add
bound
scas
push
add
movsb
imull
filds
xchg
data16
mov
jbe
out
shl
jmp
jl
jle
ljmp
xchg
add
or
arpl
jmp
jg
and
jns
mov
adc
test
aad
lret
mov
mov
shr
cli
jp
lock
mov
mov
inc
pop
pop
aam
aaa
cmp
pop
mov
movsb
push
inc
subb
add
and
call
pop
imul
adc
pop
lahf
loopne
push
test
mov
push
fprem
dec
pop
out
mov
call
out
add
add
loope
or
mov
pop
inc
push
xchg
mov
scas
in
cld
ret
inc
mov
jmp
pop
xchg
pop
loop
mov
pop
or
lret
in
sahf
cwtl
and
inc
cmp
add
inc
cmp
add
jno
mov
in
mov
lahf
pop
cs
jb
xor
pop
je
xor
sub
add
mov
imul
or
push
sub
pop
inc
pop
int3
lock
jp
jle
jle
or
sti
jecxz
pop
dec
repnz
pop
in
xchg
mov
repnz
mov
into
sarb
jb
lcall
jmp
cltd
mov
aas
pop
loope
std
enter
jp
mov
xchg
arpl
in
and
jo
pop
icebp
xchg
push
add
fcmovnbe
sbb
sub
divb
aam
shl
mov
inc
adc
fnsave
frstor
sub
inc
repz
neg
in
adc
mov
in
push
sbb
pop
out
aaa
dec
test
fimuls
xor
sti
nop
fs
pop
shrb
stos
adc
lret
mov
out
jecxz
mov
sahf
iret
insb
xchg
dec
push
pop
rcr
scas
orl
xchg
and
in
push
cmp
test
repz
sub
mov
pop
leave
mov
mov
pop
sarl
mov
jmp
in
mov
push
cmp
imul
mov
inc
repnz
adc
mov
fs
scas
test
inc
xor
dec
add
cmpb
mov
mov
movsl
addr16
dec
push
pop
rcl
mov
out
mov
push
in
mov
repz
pusha
in
icebp
daa
pop
or
in
inc
sub
into
cmp
pop
loopne
mov
jmp
sbb
sarb
pushf
sub
shlb
sti
int
fwait
je
mov
out
push
mov
ret
and
sub
mov
sub
fsubl
clc
dec
cmp
into
inc
and
sbb
mov
mov
pop
addr16
and
clc
xchg
inc
ss
fstps
not
and
pop
outsl
stos
mov
add
xor
pop
inc
cltd
cwtl
rcrl
test
mov
testb
shll
xchg
inc
loopne
xchg
inc
inc
imul
mov
lock
fists
imul
adc
pushf
loopne
push
imul
cli
nop
movsl
mov
mov
outsl
mov
or
add
out
cwtl
or
pop
sbb
pop
inc
aas
add
cmc
shl
lods
idivl
and
mov
sbb
shll
gs
ret
out
cmpsb
jb
pop
pop
push
push
shl
popa
out
push
jmp
pop
je
xor
in
in
lds
adc
pusha
cmp
cld
push
bound
std
fstl
icebp
cmc
aad
les
pusha
cmp
mov
lcall
repz
mov
cmpsb
add
sbb
loopne
sbb
out
test
mov
ret
mov
pop
or
int
mov
sbb
cmp
lret
out
pop
jmp
shlb
cmp
cli
sub
out
dec
cltd
mov
lods
add
inc
roll
or
xor
mov
test
and
fstpt
push
enter
add
fcmovnu
sbb
out
jnp
xorb
cld
dec
or
in
in
bound
repz
inc
xor
dec
push
push
js
inc
push
pop
xchg
std
enter
jle
aad
in
into
inc
push
loopne
in
jo
mov
in
nop
fadd
adc
je
xor
int
adc
loop
dec
sbb
jl
insl
sahf
xor
ret
pop
lcall
sti
xor
add
push
jns
hlt
mov
rcr
ficomps
inc
cmpb
push
addr16
add
add
mov
movsl
pop
repnz
out
mov
lcall
pop
loop
inc
imul
push
lea
mov
cmpsl
sub
lret
dec
repnz
mov
adc
scas
or
ljmp
nop
xor
in
lock
adc
aam
add
adc
pop
sahf
fistps
push
jl
sbb
nop
xor
xbegin
pusha
mov
xchg
jmp
mov
jg
scas
xor
aad
add
loopne
adc
repz
push
cli
js
dec
ret
rcl
lahf
ror
out
push
cmp
cmpsb
and
mov
pop
enter
pop
sbb
pop
mov
movsl
dec
outsl
sbb
cmp
aaa
adc
loop
inc
out
mov
sahf
andb
rcll
mov
pop
dec
addr16
cltd
repz
out
jl
fwait
lret
ja
sarl
insl
or
je
adc
mov
pop
mov
pop
pop
cmp
cmp
mov
jb
js
push
repz
jmp
cmp
jge
jno
mov
fildll
arpl
in
add
jecxz
icebp
aas
adc
jg
and
inc
pop
cmp
jns
jno
vpaddsb
ret
fstps
mov
gs
jmp
lods
lret
jae
sarl
dec
pop
int
add
pop
adc
in
fistpl
icebp
in
test
pop
jecxz
in
push
movsb
jo
aas
rcrl
xor
jnp
int3
mov
cmp
pop
lret
xchg
cmp
pop
xchg
xor
jl
mov
cmp
bound
mov
and
cltd
rclb
sub
and
sbb
xor
inc
sbb
test
fisubrs
xchg
mov
in
call
gs
jb
mov
sub
imul
xor
jb
js
in
fcoms
cltd
dec
mov
ret
xchg
cmp
jl
mov
jb
js
sbb
mov
gs
jno
sti
xchg
aas
mov
dec
mov
mov
stc
das
dec
xchg
fsubl
std
pop
cmp
ja
push
add
fcmovnu
sbb
cmc
cmp
mov
fisubs
push
cmp
push
movsb
lcall
stos
jne
addb
jle
stos
jns
je
mov
mov
cmp
xchg
jno
mov
sahf
cmp
or
sub
adc
fstps
repz
cmp
mov
pop
sbb
rcll
movsl
ds
push
js
in
loop
icebp
dec
adc
fiaddl
and
mov
and
mov
push
out
xor
icebp
sub
xchg
sub
sbb
mov
pop
std
inc
aad
cli
cmpsl
mov
mov
inc
fsubr
sbb
fwait
shl
adc
leave
mov
mov
adc
shrl
nop
dec
rcrb
lret
insl
rclb
push
mov
inc
xor
inc
jl
cs
push
mov
int
jmp
nop
mov
out
cltd
adc
push
ret
popa
inc
jmp
mov
xor
lret
mov
mov
les
sbb
int
ja
xchg
cmp
mov
mov
aaa
andl
shlb
adcb
pushf
push
xchg
in
lret
icebp
je
test
mov
mov
adc
fsubl
fiadds
gs
jno
pop
iret
pop
addr16
pop
lock
xorl
dec
mov
ret
jno
aam
jo
mov
adc
imul
nop
ja
repnz
and
sub
mov
mov
xor
pop
inc
sub
push
dec
pop
jmp
orl
lea
mov
jg
scas
xor
fsubp
sub
stos
cwtl
bound
ljmp
stc
loopne
out
repz
mov
sbb
inc
or
mulb
xor
xchg
outsl
ja
stos
ret
xor
popa
insl
lahf
imul
inc
sbb
jl
loop
cld
pop
mov
test
pop
cmpsb
aam
push
rcrl
aas
les
mov
pop
mov
and
loope
js
and
cmp
add
xlat
sbb
imul
jns
aaa
mov
jl
sub
dec
dec
add
bound
cmp
pop
in
out
cmp
push
cmp
mov
jns
lods
pop
call
and
jl
ljmp
mov
jle
stos
jae
pop
out
inc
mov
cmpsl
ss
sub
js
pop
ljmp
jmp
cmc
cmpsl
fs
gs
seto
insb
mov
mov
pop
push
cmp
iret
sar
cmpsl
sahf
fidivl
fistpll
jmp
and
xchg
into
not
pop
in
add
push
dec
ret
test
sbb
xchg
pushf
and
cmp
mov
sub
into
aad
mov
ja
sub
jmp
lcall
xchg
or
imul
repz
push
ret
ret
jno
pop
pop
ror
aad
je
and
arpl
cwtl
sbb
jl
lret
aas
mov
loop
mov
jb
js
xchg
repz
jg
adc
ret
xchg
cmp
adc
ret
pusha
in
icebp
jnp
add
push
xor
cmp
xor
outsl
jmp
xchg
sahf
dec
out
pop
sub
push
sbb
mov
pop
mov
ret
jl
pop
cwtl
inc
sub
mov
subb
or
mov
fdivp
aas
push
or
arpl
paddq
repz
faddl
lds
pop
pop
pop
cwtl
push
subb
cmp
mov
mov
mov
popa
jbe
xor
in
in
lret
out
mov
inc
cmc
mov
jl
int3
dec
pusha
jg
fildl
add
or
xor
xchg
hlt
pop
or
sub
sbb
push
aad
pusha
xlat
and
cmp
xchg
mov
sub
loop
dec
sbb
mov
ja
xlat
jae
int
in
cmp
ret
in
and
pop
inc
loopne
sahf
and
into
jmp
mov
dec
testb
fsubl
fnstsw
inc
push
pop
mov
fstps
and
mov
push
out
jl
mov
fldt
imul
das
in
fdiv
xor
push
cmp
jmp
loop
pop
outsl
repz
jle
xchg
cmp
jl
xchg
out
jecxz
out
jl
cmp
mov
lret
mov
and
add
pop
inc
xchg
jmp
jl
aam
cmp
xchg
cmp
jae
cmpsl
mov
out
std
ljmp
xor
jb
and
mov
int3
pop
jp
mov
and
pop
fnstsw
mov
pop
mov
mov
dec
mov
xchg
mov
and
mov
cwtd
push
cmpsl
jmp
insb
pusha
cmp
cwtl
lret
mov
outsl
pop
aas
ljmp
and
add
fucompp
in
loope
jo
jg
cmp
popa
pop
or
jl
pop
ficompl
pop
hlt
mov
int3
fisubrl
hlt
cli
hlt
inc
cmp
dec
add
outsl
pop
ret
sub
inc
pop
fnstsw
mov
xor
jl
hlt
test
push
imul
cmp
fdivs
lahf
fucomp
jle
scas
or
out
push
fucomi
add
mov
int3
pop
or
mov
mov
in
pop
jb
lret
or
in
fsubrs
mull
leave
adc
in
out
jl
repz
xchg
int3
fs
pop
adc
add
jmp
mov
clc
push
push
adc
jle
stos
jbe
loope
inc
mov
pop
sub
pop
in
lods
shlb
push
mov
push
pop
rol
mov
out
mov
adc
cmp
mov
out
jl
ja
pop
aaa
or
xchg
out
mov
jb
js
mov
out
insb
jle
xchg
cmp
inc
enter
aaa
loop
xor
mov
mov
outsl
sbb
dec
xor
or
ljmp
push
push
idivb
inc
shlb
sahf
dec
in
mov
ja
sub
dec
sbb
sub
or
dec
imul
lret
ret
push
mov
mov
sub
pusha
in
or
jno
loop
call
loopne
dec
imul
arpl
mov
rorb
dec
in
fcmovbe
aad
aad
lods
cltd
ret
popa
sub
cmp
cmc
aad
cmp
mov
jl
bound
movsb
sbb
jae
popa
push
mov
mov
in
mov
into
mov
xchg
cmp
lret
xlat
stos
jns
or
cmc
mov
in
mov
fidivrs
pop
lahf
mov
dec
add
ja
outsl
in
out
mov
mov
bound
into
iret
lret
bound
adc
inc
pop
loop
xor
popf
fisttpl
mov
cmp
pusha
shlb
jae
mov
mov
xor
and
xor
popl
popa
jb
das
movsl
or
or
push
and
shrl
fsts
pop
cwtl
jecxz
testb
int3
jno
mull
and
std
pop
mov
mov
in
add
in
and
cmp
jb
add
call
fcmovnu
sbb
movsb
fs
inc
pop
mov
into
mov
jg
mov
sbb
add
jp
cmpb
pop
in
aad
cmp
cmp
mov
jb
js
ret
xor
dec
jne
repz
ds
xor
outsb
test
add
jno
bnd
ljmp
lret
das
push
lret
addl
mov
scas
ret
mulb
xchg
daa
repnz
mov
adc
or
std
or
jbe
sbb
lds
pop
jno
shr
pop
push
mov
or
cli
jg
shrl
xor
pop
clc
jne
adc
out
add
leave
adc
cmp
shr
adc
sub
inc
or
std
pusha
lahf
mov
mov
cmp
test
cmp
cmp
cmp
loop
pop
jb
js
lcall
mov
jl
shlb
in
mov
mov
popa
and
rcrl
mov
sub
loopne
push
dec
add
ss
jae
sarl
subl
fisttpl
call
icebp
sbb
adc
roll
mov
inc
pop
addr16
setle
inc
cld
cmpsb
shl
rcr
mov
popa
lods
add
cmpsl
in
pop
mov
inc
jecxz
lret
lock
mov
add
pusha
cltd
push
xor
push
rcll
lods
sub
cmp
fdivrl
adc
pop
inc
adc
pop
adc
mov
mov
sub
or
faddl
cmp
inc
mov
or
add
into
cmp
jns
ret
cltd
aas
popa
mov
lock
xchg
dec
sub
loope
and
adc
push
ret
ss
mov
movsb
pop
ljmp
sub
cmp
xchg
sbb
push
or
pop
dec
mov
xlat
push
shr
in
fistl
pop
jp
in
jge
lds
lock
rcll
shl
jnp
inc
adc
repz
out
push
cmc
adc
sarl
not
pop
sarl
push
jge
aas
outsb
xchg
push
pusha
sbb
in
push
cmp
test
ret
cltd
jmp
mov
xlat
xor
and
adc
cmpsl
cmp
cmp
push
xor
mov
je
xor
push
mov
pop
mov
in
out
jmp
loop
not
in
scas
in
lods
and
xchg
std
push
add
jo
test
mov
into
sarl
sub
dec
lret
jae
sarl
subl
cltd
xlat
dec
out
bound
aam
sti
lea
pop
mov
cmpsl
xchg
popa
push
and
push
pop
cmc
jbe
pop
jmp
mov
cvtpi2ps
jns
push
loope
and
stos
mov
ds
lret
test
jne
vcvtdq2pd
mov
mov
sarl
jecxz
out
jle
jo
mov
mov
out
jl
or
data16
mov
repnz
push
inc
jns
aaa
xchg
fimuls
sahf
imul
mov
cmp
cmp
in
jge
xor
inc
inc
mov
int
jecxz
int3
mov
out
xchg
jl
ret
xor
mov
push
xor
cmp
adc
popa
or
adc
dec
cmp
loope
sbb
mov
pop
ljmp
mov
pop
sahf
lcall
fcoms
jp
add
out
mov
inc
pop
imul
push
push
xor
jmp
jbe
pop
mov
pop
jle
inc
dec
and
push
push
loop
inc
mov
subl
fcomp
xchg
dec
jp
dec
pop
jb
int3
inc
imul
call
cmpsl
inc
jnp
inc
add
adc
xorb
jo
test
in
jg
mov
mov
push
lds
sahf
aaa
push
inc
int
pop
push
jle
add
push
xor
call
fcomip
or
ja
xor
dec
in
fabs
stos
jae
or
bound
ret
mov
xor
dec
jno
inc
incl
xchg
and
in
add
pop
aam
jno
repnz
lret
mov
add
pop
push
sarl
or
pop
in
outsl
and
dec
mov
mov
shl
arpl
out
mov
cmp
ret
sbb
cld
lret
jge
in
push
mov
cmpsb
xor
jb
xor
fadds
lock
adc
in
lret
das
rolb
fdivrl
shlb
jae
mov
pop
push
adc
loop
pop
rorb
cmpsl
pop
cwtl
in
and
mov
xor
cmpsl
out
rcl
aam
cwtl
mov
push
je
pop
pop
lret
pop
adc
xor
fwait
cmp
cmp
sarb
xor
pop
mov
popf
sahf
popa
cmp
rcrb
adcl
sti
mov
call
repnz
push
out
add
sbb
and
adc
ljmp
inc
js
jmp
fsts
pop
sahf
pop
jne
stos
inc
mov
pop
or
adc
cmp
mov
mov
inc
in
ja
sarl
subl
mulb
scas
jno
mov
mov
pop
inc
push
and
fisttpl
and
rorl
dec
cmpsb
adc
cmp
das
lretw
js
in
clc
jno
jns,pn
fbstp
pop
push
pop
mov
push
pop
mov
outsb
xchg
xor
push
filds
or
lods
leave
ss
pushf
outsb
dec
xchg
fsubl
cmc
int
pop
mov
sbb
ficompl
imul
lods
out
ficompl
mov
jge
sub
int
das
pop
cld
adc
scas
push
std
mov
dec
mov
sbb
and
pop
int
movsl
xlat
fimuls
jmp
lock
repnz
adcl
mov
dec
inc
inc
ret
push
insb
dec
addr16
int3
push
enter
mov
lret
xchg
bound
lret
fs
jo
jae
xor
dec
pop
loop
cwtl
mov
mov
cwtl
js
pop
dec
lds
xor
imul
sub
sbb
mov
pusha
shlb
sbb
loop
dec
adc
pop
pop
xor
mov
loop
fs
test
pushf
imulb
test
cmp
jno
jl
scas
ds
ja
mov
adc
sahf
in
and
jmp
not
lcall
fcmovnu
sbb
addr16
adc
movsb
dec
add
mov
push
loope
dec
push
aas
mov
outsb
mov
popa
add
cmpl
pop
jmp
push
mov
movsb
cwtl
add
imul
loop
dec
sbb
jne
call
pop
sahf
fnstcw
add
cmc
shl
lods
or
mov
jmp
imul
mov
pop
jno
mov
cmp
jne
test
out
mov
mov
sarl
daa
jae
jl
stos
je
lret
adc
cltd
ret
popa
inc
jmp
mov
xor
lret
nop
mov
xor
xor
xchg
pop
nop
mul
dec
aam
leave
jnp
int
or
jmp
sarl
out
mov
loope
xchg
xchg
jb
add
pop
and
movsb
mull
sahf
aaa
movsl
es
xchg
stc
jae
test
insb
xor
cli
mov
fs
call
mov
adc
jno
dec
scas
cmp
mov
fdivrs
adc
aam
shl
loopne
lret
push
divb
ficompl
pop
loop
sahf
into
cmp
outsb
and
push
jno
xor
cmp
mov
xchg
lcall
mov
ja
mov
cld
invd
mov
inc
lret
int
sub
mov
sub
imul
push
jae
adcl
ja
push
mov
js
xor
addr16
mov
mov
cld
adc
mov
stos
jp
daa
push
xchg
push
adc
filds
jno
lea
repz
mov
arpl
mov
mov
add
and
cmp
lret
pop
daa
bound
cs
jno
xor
adc
pusha
jmp
in
rcr
or
dec
cmp
lea
ret
loope
push
dec
mov
pop
jecxz
in
push
lods
push
in
incl
out
jnp
int3
adc
add
scas
mov
mov
mov
xchg
xchg
jb
add
pmullw
cmp
inc
insb
jg
sbb
popa
pop
pop
push
fisubs
sbb
mov
pop
lock
xchg
gs
das
notb
jno
mov
mov
aas
or
mov
pop
fsts
xchg
je
mov
pop
andl
push
test
push
mov
xchg
insb
lds
flds
loope
and
inc
adc
pop
ret
lock
shll
mov
jge
pop
cmp
loopne
jae
mov
inc
mov
out
scas
mov
mov
enter
jne
sbb
out
adc
aam
not
in
mov
add
mov
mov
mov
cwtl
jge
or
xchg
mov
xor
int
shrb
sub
cmp
jmp
fst
stos
insb
aam
shr
jns
leave
adc
test
sti
push
dec
mov
mov
cmp
jne
aas
push
int
sub
jns
dec
cmp
cltd
and
adcl
aas
fdivs
mov
loope
add
sub
addr16
in
fidivrl
stc
punpckhbw
cmp
icebp
mov
nop
push
jmp
lret
push
cmp
mov
into
mov
sbbb
arpl
ja
data16
dec
filds
cmp
mov
into
mov
and
clc
adc
mov
subb
jns
data16
sbb
cmp
mov
out
dec
add
and
punpckhbw
test
repnz
add
xor
dec
add
lret
sarb
mov
pop
cmp
cmp
js
xchg
repz
jle
xchg
cmp
iret
cmc
jo
in
movsb
jb
pop
pop
clc
addr16
gs
leave
mov
pop
jns
subl
loope
dec
sbb
xorl
pop
dec
jbe
cwtl
iret
loope
sti
pop
js
sub
jecxz
push
and
mov
loope
fnstsw
repz
movsl
jb
pop
pop
pop
push
bound
cmpb
sbb
xchg
mov
mov
mov
aas
outsb
mov
nop
xor
loope
mov
xchg
roll
jns
lret
mov
scas
inc
repnz
cld
fidivs
push
in
call
jl
jmp
andl
jge
inc
lds
hlt
sub
aad
in
xchg
adc
int
or
loopne
lcall
test
mov
sub
sub
jb
loop
dec
sbb
icebp
and
pop
xor
mulb
xchg
xor
add
mov
icebp
sbb
push
je
pop
int
cmp
ljmp
scas
test
xor
in
stc
lcall
cli
pop
popa
cmpb
out
fdivp
ljmp
lods
popf
push
inc
or
mull
aas
mov
lock
clc
mov
movsb
mov
pop
rcr
jae
fiaddl
sbb
shrb
aaa
loop
sar
imul
dec
sub
inc
aad
push
sbb
aad
mov
mov
pushf
mov
pop
mulb
pop
inc
lea
mov
mov
out
dec
mov
out
movb
jo
pop
pop
cmp
jns
addr16
mov
ljmp
adc
sub
jp
aaa
loop
add
lds
xor
mov
xor
jb
or
dec
xor
pusha
push
outsb
negl
push
jmpw
jg
jne
out
fucomi
ret
dec
adcl
fsts
pop
lcall
in
fs
lret
in
das
push
jbe
aas
sub
mov
lock
jmp
and
xchg
pop
jb
fldcw
mov
lret
jp
es
xor
pop
inc
jl
sbb
sub
cvtps2pd
pop
jp
inc
push
pop
outsb
jns
mov
rorb
aaa
loope
push
scas
addr16
ljmp
dec
jecxz
dec
or
or
daa
addl
sub
xor
xchg
pop
push
pop
rcl
incb
out
mov
push
pop
mov
ds
or
test
mov
icebp
pop
jle
negl
loop
dec
push
jmp
test
push
mov
mov
xchg
xor
in
addr16
jne
andb
dec
in
popf
mov
add
mov
cmp
dec
testb
mov
into
sarb
in
popf
mov
mov
in
cmpsl
mov
je
repz
jne
adc
dec
out
call
mov
into
mov
pop
ljmp
loop
call
and
xchg
sbb
jnp
int3
roll
pop
xchg
repnz
pop
or
push
xor
dec
fst
cmp
scas
and
cmpsl
stos
nop
mov
cwtl
popf
movsb
push
fidivs
and
sbb
loope
xor
xor
mov
push
pop
inc
adc
push
inc
mov
mov
in
mov
mov
in
xchg
sbb
in
cmpl
dec
add
cltd
fidivl
push
filds
inc
adc
popf
mov
outsl
xchg
jmp
sbb
js
cmp
dec
xchg
outsb
push
mov
jl
push
xchg
daa
in
fabs
or
out
mov
xor
aad
leave
push
jecxz
enter
xor
mov
mov
adc
fsubrl
jns
jo
loope
lods
daa
inc
lea
test
mov
push
addr16
lcall
jl
jge
imul
mov
xchg
jae
pop
loopne
inc
into
lret
mulb
jl
ret
lcall
addr16
or
mov
xchg
mov
jmp
addr16
or
mov
inc
jbe
dec
orb
xor
lds
inc
dec
cmp
hlt
pop
hlt
mov
cmp
insl
lea
fwait
test
int
sub
stos
repnz
fs
inc
icebp
das
ret
lret
jnp
repz
in
fsub
add
shrb
jae
movsb
mov
jns
mov
adc
ret
call
cmp
loop
dec
mov
lods
or
aaa
jle
xchg
cmp
cmpl
inc
aas
adc
mov
lock
mov
loope
and
ds
aaa
loope
push
sub
or
pop
in
pop
popf
jecxz
mov
push
pop
loope
subb
jg
int
adcb
mov
mov
test
out
jl
sub
jne
sarl
and
sarl
xchg
stos
add
mov
test
xchg
enter
cmpl
and
ror
push
sub
incb
mov
inc
pop
sbb
inc
out
lahf
test
ljmp
adc
pop
repz
stc
inc
adc
jns
stos
je
dec
dec
adc
adc
cltd
addr16
lock
mov
int3
out
add
adc
outsl
fistps
sbb
int
insl
imul
mov
cs
cmpl
add
pop
add
movsl
mov
mov
mov
lods
mov
mov
sbb
ss
sub
fisttpl
ds
loopne
sarb
in
jno
cmpb
add
lds
pop
xchg
add
mov
and
lods
repnz
or
int
xor
inc
sbb
and
jo,pn
loop
dec
sbb
leave
ror
pop
popf
iret
adc
pop
jbe
roll
xchg
in
stos
das
aaa
inc
cmp
cs
gs
xor
mov
cmp
loope
mov
cli
cmpsl
jp
inc
inc
inc
out
mov
jmp
imul
jl
jno
add
or
data16
in
add
mov
push
loope
push
mov
add
push
push
movsb
push
lds
inc
mov
out
fcoms
pop
mov
pushf
shrb
pop
std
mov
cmpsb
bound
inc
test
fsubs
cmp
xchg
mov
in
mov
mov
ja
xchg
push
pop
out
sub
test
sbb
cmpsl
gs
inc
xchg
sub
iret
in
mov
fsubrl
stos
xchg
int
adc
subb
hlt
pop
xor
test
outsl
mov
lds
xor
fnstenv
fsts
pop
movsb
les
movsb
cli
in
lods
pop
lds
mov
iret
ss
hlt
cmp
lret
xchg
dec
xor
ficompl
inc
push
call
out
jmp
inc
mov
push
hlt
jne
mov
inc
aaa
fistl
stos
mov
repz
in
incb
inc
mul
adc
cmp
inc
mov
push
sahf
xor
push
roll
jecxz
cmp
xchg
jg
stc
fisubs
mov
xchg
fsubrs
test
shll
jmp
mov
into
mov
adc
cli
adc
test
mov
imul
aas
jb
push
mov
rorb
sarb
xor
mov
and
rorl
imul
in
icebp
lds
pop
cmpsl
lret
arpl
neg
sahf
mov
test
mov
jge
fdivrs
inc
pop
inc
fs
pop
popa
pushl
sub
xor
int3
data16
mov
jle
pop
js
in
cmp
in
mov
into
mov
sbb
mov
pop
jmp
mov
es
mov
xor
int3
adc
pop
test
loopne
out
mov
mov
dec
push
andb
xor
dec
add
jecxz
add
mov
mov
inc
jae
pop
push
in
push
xor
pop
mov
lahf
add
mov
mov
ljmp
sub
xor
and
add
pop
std
dec
jne
adc
cmp
stos
ja
push
xchg
cltd
scas
dec
data16
sub
test
daa
cmpb
dec
dec
pop
inc
cs
lret
dec
sbb
insl
lods
ljmp
push
jb
js
insl
repz
xchg
cmp
jge
xchg
cmp
mov
bound
xor
xor
xchg
xchg
push
lret
sarb
outsb
aas
mov
mov
sub
insb
cmp
push
nop
pop
lods
test
sbb
push
pop
pushf
dec
xchg
dec
mov
mov
mov
shr
nop
in
jl
ret
adc
test
jg
pop
xor
ds
add
push
jge
jno
loope
jbe
mov
in
in
pop
stos
xchg
sub
lret
call
rcl
lret
adc
or
cmp
stc
inc
stos
sar
cmpsl
test
hlt
cmp
mov
ljmp
loopne
push
cmp
imul
push
sub
cmp
jmp
or
mov
into
sarl
jmp
in
addr16
push
lret
jae
sarl
jecxz
out
mov
lret
cwtl
mov
in
mov
dec
mov
mov
movsl
leave
adc
int
je
cmp
or
out
mov
das
ss
xor
jb
js
lock
test
ret
xchg
cmp
mov
xor
pushf
outsl
mov
outsb
mov
jge
jle
popa
sbb
adc
add
cmpsb
cmpl
lret
mov
xlat
mov
shll
mov
imul
xlat
enter
daa
subb
mov
and
cmp
cmp
add
sbb
in
lcall
sub
push
in
lahf
cmpl
je
jne
test
add
testb
outsl
sbbb
mov
enter
cld
sub
bnd
or
inc
cs
movsl
mov
push
mov
lcall
pop
imul
inc
mulb
rolb
jne
int3
iret
cld
xor
cs
mov
xlat
dec
push
pop
inc
aaa
xchg
int
sub
or
push
addr16
jge
jno
aam
shl
fcoml
cld
and
mov
scas
mov
shrb
inc
dec
mov
fnsave
sub
xchg
test
dec
add
fs
leave
jne
push
inc
push
push
xor
ret
sub
std
mov
shll
push
push
imul
mov
out
ficompl
sahf
pusha
insb
std
clc
push
inc
ljmp
lahf
or
les
std
cmp
lock
jno
mull
aas
loopne
out
shlb
mov
shrl
xchg
xchg
leave
xchg
outsb
call
ja
mov
negl
pop
scas
out
xchg
jmp
and
jge
rcrl
out
neg
or
and
das
mov
pop
outsb
into
into
testb
in
test
out
dec
and
cwtl
xchg
fstps
not
mov
mov
mov
clc
insl
xorl
pop
inc
fidivrs
leave
push
push
push
push
dec
push
fwait
cmpsl
inc
or
cmpl
push
mov
jb
js
mov
mov
jle
xchg
cmp
mov
in
jae
mulb
popa
in
iret
jns
sbb
leave
pop
mov
xchg
pop
popa
inc
or
cs
rolb
jg
not
pusha
in
lret
or
je
mov
cmp
pop
xchg
repnz
mov
lret
jg
mov
gs
mov
push
cmpsb
data16
nop
xor
je
out
lock
jmp
pusha
sahf
pop
mov
jb
out
scas
jl
mull
jl
cld
sub
jge
aad
mov
shrb
lret
jo
test
rorb
sub
movsl
stos
dec
lret
mov
push
pop
js
lret
xor
cmp
loop
add
cmp
mov
les
pop
lahf
pop
pop
adc
cmp
fcmove
movsb
out
mov
mov
rol
xlat
stos
jbe
leave
andb
inc
les
push
in
fdivrs
cld
pop
int
cs
mov
aaa
cmp
jne
mov
je
fistps
arpl
arpl
add
inc
or
mov
pop
mov
push
push
pop
loope
movsl
sbb
cmpsb
addr16
pop
add
and
popf
fldt
sub
aas
dec
sub
xchg
mov
sub
movsl
stos
scas
mov
in
adc
loop
dec
sbb
xchg
iret
mov
sub
js
sub
pop
add
mov
lret
push
sub
pop
les
ja
push
arpl
pop
or
das
ror
stos
js
fildl
xor
dec
add
cmp
dec
rol
xor
xor
push
pop
inc
dec
or
mov
and
cmp
lret
scas
jnp,pt
pop
lret
ret
in
mov
xor
movsl
iret
jecxz
push
cmp
inc
add
mov
lock
dec
cmpsb
mov
repz
pop
inc
rorb
mov
pop
cmp
dec
jecxz
arpl
inc
ficompl
aaa
movsl
and
or
and
push
mov
shlb
mov
rolb
xchg
mov
xorl
pop
add
cmp
add
nop
inc
inc
inc
lret
rorb
fdivl
rorb
jno
pop
in
popf
shrb
add
xchg
fs
pop
aas
loope
out
jge
andb
in
mov
in
in
jno
pop
push
addr16
das
in
adc
out
jl
xchg
pusha
stos
xchg
mov
push
clc
cmpsb
pop
imul
in
repnz
in
mov
loopne
and
and
sbb
loop
orl
ja
mov
stc
out
adc
mov
scas
adc
in
pop
jmp
mov
ja
sub
outsl
repz
dec
into
idivl
leave
aad
adc
add
in
int
sub
iret
scas
sub
imul
cld
stc
jb
adcl
lret
scas
jmp
or
fistps
sarb
sarl
repz
cmp
mov
cmp
cmpsb
addr16
pop
test
arpl
cld
icebp
pop
inc
pop
add
or
adc
xchg
mov
not
ss
fsubrl
pop
movsb
imulb
sub
lret
xor
jns
jnp
out
hlt
mov
mov
mov
add
add
xor
and
mov
outsb
mov
lods
jl
mov
inc
mov
loope
jo
xor
pop
call
pop
adcb
jmp
mov
cmp
in
loopne
add
sub
sub
inc
lcall
addr16
mov
jnp
fs
jp
pop
mov
mov
or
jne
rcll
xor
jo
sub
arpl
xor
movsb
in
mov
mov
mov
in
xchg
imul
out
or
movsl
jb
cmp
adc
mov
insb
mov
loopne
and
push
cmpsb
movsl
shl
rcl
scas
movsb
jecxz
dec
out
jb
out
sahf
jmp
and
sub
pop
jno
lret
aam
data16
mov
sbb
sub
jb
arpl
pop
movsl
push
mov
sbb
nop
jmp
pop
mul
lds
iret
sti
rcr
loop
jl
mov
mulb
in
cmpsb
loop
dec
pop
jne
lret
jne
mov
je
dec
jno
inc
inc
arpl
iret
in
pop
add
aaa
cmp
adc
out
mov
mov
rol
aad
jae
loop
ljmp
pop
jo
jnp
bound
mov
push
mov
and
bound
pop
dec
dec
and
add
fcmovnu
sbb
out
jb
repz
xchg
hlt
and
pop
imul
jno
sarl
cmp
jns
stos
jae
pop
loope
cmp
mov
mov
xor
or
loopne
cli
inc
adc
mov
cld
bswap
cmp
lods
jmp
stos
iret
xchg
xor
sub
xchg
xor
push
or
cmp
iret
ucomiss
mov
xchg
adc
cmpps
mov
cmpsb
inc
cli
into
jmp
arpl
ds
or
mov
movsb
insb
stos
nop
jo
pop
rcl
std
mov
or
leave
out
mov
cmp
shlb
jae
mov
cmp
xchg
ljmp
xlat
outsb
mov
adc
or
jl
push
stos
pop
xor
rep
xchg
call
push
xor
les
dec
sbb
mov
inc
inc
hlt
mov
fwait
in
leave
arpl
popa
pop
into
cli
or
jl
pop
insb
sub
mov
je
inc
andb
pop
loopne
ljmp
scas
pop
test
dec
or
mov
pop
pop
ja
testl
gs
jecxz
pop
push
cmc
movsl
addr16
push
mov
push
in
fimull
and
mov
mov
push
add
mov
std
fcmovne
jae
sarl
jecxz
call
dec
scas
push
in
xlat
dec
std
push
jl
aaa
or
aad
mov
jb
js
adc
rcll
repz
sbb
xchg
cmp
adc
frstor
shlb
lds
pop
cmp
addr16
lret
fs
popf
faddl
jecxz
add
jmp
mov
mov
into
mov
dec
push
inc
mov
in
subl
or
lods
enter
sub
mov
mov
xor
adc
mov
cmp
jns
cs
cmpsb
out
mov
mov
hlt
adc
shrl
push
fildll
filds
cmp
rcll
les
jns
dec
ljmp
jae
test
fcmovb
cld
stos
mov
loope
fstpl
imul
bound
push
enter
pop
in
aaa
mov
lret
push
stos
sbb
sbbb
jp
adc
cmpps
mov
push
xchg
jno
loope
and
jo
mov
roll
bound
ret
je
xchg
cmovg
mov
dec
or
cmc
cmpsl
push
adc
mov
mov
stc
xor
lock
stc
js
add
jle
rol
sub
inc
mov
cmpsb
out
icebp
outsb
pop
lret
lock
xchg
push
jns
and
test
mov
jbe
repnz
movsb
jle
nop
push
int3
std
enter
out
mov
mov
mov
adc
in
jns
pop
inc
loope
sub
cmp
test
cmp
ret
cltd
sub
mov
xlat
jecxz
lods
push
imul
adc
cmpb
dec
sbb
cmpsl
inc
lods
lret
out
ficompl
sbb
pop
cmpsl
add
push
xor
out
xchg
jmp
mov
cmp
mov
cwtl
ss
popa
incl
cmp
les
aas
stc
cld
stc
jno
in
in
jl
mov
outsb
xorb
jl
arpl
pop
sub
inc
ljmp
in
cli
fdivrl
cmpb
shrb
push
insl
push
jnp
sub
cmp
add
stos
xor
push
jae
popf
in
cli
mov
jle
xchg
adcb
push
fiaddl
push
imul
rcrb
out
mov
mov
notl
push
add
mov
jecxz
in
fadd
inc
xor
sti
mov
jmp
mov
jle
in
rcl
aam
jp
sub
negb
and
sarl
int3
jo
mov
sbb
cli
cwtl
adc
popf
add
mov
lock
jecxz
js
and
mov
inc
adc
cmp
out
dec
emms
repnz
pop
or
inc
out
lret
xchg
mov
inc
sub
mov
mov
pop
sub
cmp
in
into
mov
ja
sub
fimull
loopne
fwait
mull
ds
dec
je
mov
out
jne
push
push
mov
int
dec
pusha
shll
out
mov
or
pop
ds
adcb
mulb
pop
jno
imul
fsts
pop
lcall
lea
dec
dec
pop
inc
push
fs
in
sbb
push
insb
add
jno
loope
out
jl
out
dec
es
mov
dec
icebp
call
jbe
sub
and
stos
push
push
cmp
mov
test
push
pop
jno
rorl
cmpsb
and
pop
or
popa
cmp
scas
push
inc
repnz
in
repnz
test
mov
dec
adc
int3
popa
sub
adc
mov
in
dec
ret
arpl
in
int
xchg
arpl
add
mov
dec
xchg
cwtl
sub
xchg
and
xor
push
mov
mov
pop
pop
mov
pmullw
add
push
pop
mov
jg
in
aam
pop
loopne
in
or
mov
xor
cmpsl
pusha
iret
lret
push
outsb
dec
mov
scas
mov
pop
inc
push
cmp
leave
mov
dec
dec
pop
dec
mov
shll
pop
in
into
call
adc
out
shrb
repnz
in
cld
les
push
pop
ljmp
xor
adc
xor
sub
shl
je
je
lret
imul
sbb
push
fisttpl
repz
jae
ss
jno
pop
shl
cmp
xchg
dec
add
add
in
pop
mov
pop
xor
std
psubusb
cmp
loope
popa
jl
jo
ljmp
jbe
test
popa
mov
mov
lods
mov
cmp
pop
aas
and
.byte
