add
add
jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
and
out
pop
adc
or
aam
fisubs
or
add
add
add
arpl
fiadds
and
mov
add
mov
add
add
and
sub
add
add
add
mov
and
fiadds
mov
xor
jne
jne
jne
flds
push
add
add
add
add
add
fiadds
dec
add
add
and
xor
fiadds
pop
add
inc
add
add
add
addl
and
repz
add
add
add
inc
add
and
popa
add
add
add
add
add
add
add
dec
add
add
cmpsl
add
and
add
mov
test
add
add
xor
inc
add
add
add
add
add
add
adc
dec
add
add
mov
popf
add
fiadds
and
cmp
and
je
and
jl
mov
je
arpl
dec
add
add
daa
add
add
add
and
dec
add
gs
add
add
xchg
incb
inc
add
add
mov
add
add
add
add
mov
fiadds
stc
add
add
jne
pop
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
jno
jl
incb
jge
cmpsl
add
add
add
add
pusha
add
add
add
in
add
add
fiadds
xchg
add
add
add
add
repnz
add
add
add
add
add
roll
add
or
add
add
add
add
push
add
out
add
add
push
add
mov
add
mov
and
xor
inc
add
add
pop
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
mov
mov
pusha
add
and
mov
add
xchg
add
add
add
and
and
xchg
mov
pop
test
fiadds
xor
daa
add
add
add
add
add
add
add
add
add
jne
mov
cmp
mov
add
jno
adc
xchg
add
add
add
add
add
roll
add
add
add
add
add
add
insl
add
add
push
add
add
add
add
add
add
jne
mov
inc
add
add
add
jae
sbb
mov
add
add
add
add
push
add
add
add
fiadds
mov
add
add
or
mov
add
add
xlat
add
add
add
adc
dec
add
add
dec
add
push
pop
add
add
add
data16
add
test
arpl
aad
and
cmp
je
inc
add
add
add
add
adc
add
fiadds
gs
add
add
add
add
add
arpl
and
addl
fiadds
arpl
and
mov
mov
sbb
mov
test
and
cmp
mov
outsl
add
add
add
add
add
add
add
add
add
push
add
add
dec
add
xor
sbb
add
jle
mov
xlat
add
add
add
dec
add
add
add
sub
mov
add
insl
add
add
add
add
add
out
into
push
mov
and
out
lahf
push
sub
add
shr
clc
lret
pop
cmp
out
inc
jns,pt
je
sbb
sub
mov
mov
mov
out
add
arpl
inc
xor
sbb
int3
adc
insl
and
lods
out
cmovo
in
cmp
cmpl
jnp
push
jmp
cmpb
hlt
mov
add
or
ja
fcomps
add
mov
pop
les
xchg
es
add
icebp
adc
fwait
push
sub
mov
in
sub
cmp
inc
sub
fwait
cmc
jge
mov
rcrl
push
dec
inc
adc
pop
movsb
add
push
aad
mov
sub
jecxz
inc
push
xchg
stos
mov
icebp
adc
gs
stos
inc
hlt
ja
lea
je
cltd
and
lea
lods
mov
test
ds
ss
cld
mov
xor
fstps
shr
popa
mov
push
pop
dec
mov
add
in
fs
sub
pop
xrelease
ret
dec
pushf
or
loop
je
stc
in
pop
dec
sub
inc
inc
cltd
adc
outsb
mov
loopne
add
cltd
and
aad
cmp
jne
mov
jns
push
negb
into
push
adc
popa
pop
imul
sarl
or
shlb
add
sub
pop
mov
and
rorl
lcall
insl
mov
jns
sub
sbb
xchg
adc
and
dec
pop
mov
cli
or
inc
jb
sbb
ja
dec
and
mov
cmp
xchg
pop
jle
jnp
arpl
sub
daa
sub
js
push
jle
jno
icebp
testl
inc
ds
mov
mov
lds
mov
sarl
outsl
test
dec
call
mov
and
sahf
out
xchg
adc
cmp
xor
xor
dec
sub
sub
push
inc
pop
inc
in
fnstsw
test
xchg
jbe
xchg
jg
repnz
mov
das
mov
pop
or
fimull
cmp
icebp
mov
imul
scas
fisttpl
notl
mov
mov
pop
mov
stos
ret
daa
mov
ret
push
adc
and
pop
fldz
or
pop
pop
ljmp
test
sbb
and
add
sbb
bound
gs
push
mov
aaa
jns
jne
test
and
add
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
insb
daa
mov
add
adc
push
sbb
xor
pop
mov
cmpl
or
cmp
sub
fdivs
enter
call
inc
mov
mov
scas
js
push
sarl
sti
dec
mov
xchg
ljmp
test
sub
daa
lock
dec
lods
popa
mov
mov
cmpsb
inc
lea
ljmp
jo
pop
mov
mov
mov
test
jbe
push
data16
mov
mov
aad
and
adc
sbb
inc
cmp
fldenv
int
loop
jmp
push
imul
jle
outsl
in
cmp
clc
mov
sbb
jl
inc
push
pusha
cwtl
mov
inc
inc
push
push
mov
loop
xchg
dec
outsb
xchg
insb
sbb
not
shrb
jnp
int
and
stos
shrl
mov
sbb
jle
xchg
push
xchg
sub
jmp
mov
clc
test
pop
pop
dec
and
sbb
testl
jge
popa
cwtl
xor
sub
and
xorl
inc
push
mov
inc
mov
add
push
shll
int
push
lock
mov
jl
jns
dec
and
fcmove
or
adc
cltd
cmp
std
setb
inc
mov
nop
inc
push
mov
jno
push
mov
jno
inc
mov
mov
cmpl
or
cmp
sub
fdivs
enter
call
inc
mov
mov
cmpl
or
cmp
sub
fdiv
pop
test
add
gs
je
loope
or
mov
mov
mulb
sub
mov
mov
cmp
mov
adc
mov
push
and
test
push
mov
inc
sbb
int3
jge
int3
cmp
pop
add
cmpsl
or
adc
loopne
out
or
or
sahf
aaa
mov
cmovge
cmp
jnp
leave
inc
push
cmpl
inc
jo
cmpsb
jne
dec
dec
dec
lds
imul
rcll
xor
aad
sahf
mov
lods
jl
das
cld
pop
mov
es
jmp
mov
lods
fidivl
inc
into
xor
insb
das
sbb
pop
sbb
cmp
clc
cmp
cmp
push
push
inc
or
out
call
add
insb
fsin
adc
dec
and
push
ret
dec
std
inc
mov
jae
cwtl
push
cmp
pop
sub
insb
mov
hlt
add
inc
adc
jg
jbe
mov
ss
and
in
stos
cld
in
adc
mov
popa
insb
inc
in
int
xor
xor
or
jns
test
or
pop
cmp
push
mov
insl
push
cld
or
sub
adc
call
jnp
or
frstpm(287
scas
push
xor
jp
out
sbb
in
pop
xchg
cvttps2pi
ljmp
sub
xlat
lea
mov
mov
rolb
or
stos
jns
mov
lds
mov
mov
icebp
lahf
mov
mov
fidivl
mov
push
jp
cwtl
mov
lock
mull
sahf
mov
push
scas
addr16
dec
loope
fwait
push
xchg
daa
testl
pop
jecxz
pop
adc
xchg
cmp
xchg
aad
dec
push
mov
mov
sti
roll
out
adc
rcr
dec
mov
mov
jne
push
add
insl
cmp
xor
ja
imul
inc
out
sbb
loop
xchg
ret
movsl
and
pop
je
fdivrs
or
cs
leave
popa
cmpsl
cmp
mov
sbb
mov
scas
inc
jecxz
pop
lret
xchg
sbb
inc
mov
les
cltd
cmp
sti
in
jnp
out
jae
push
popf
sub
rcr
scas
lods
push
xchg
je
mov
inc
adc
stos
incl
cmp
inc
xor
mov
jnp
stos
loope
das
stc
mov
pusha
in
data16
movsl
xlat
xor
ljmp
les
pop
xorl
repz
imul
mov
out
loopne
repz
pusha
sahf
push
or
popa
popa
cltd
dec
dec
sarb
mov
sub
lds
shl
jg
shll
xor
daa
arpl
mov
cld
mov
xchg
daa
imul
xchg
mov
and
xchg
outsb
inc
icebp
jge
ret
mov
mov
mov
lock
rorb
xchg
mov
iret
jg
push
mov
outsb
adc
rorb
je
popf
call
scas
sbb
push
and
pop
js
jle
inc
icebp
pop
clc
pop
cmpsl
fmul
fisubrl
xor
into
sbb
notb
stos
cwtl
mov
mov
mov
adc
ja
test
adc
mov
adc
loopne
das
imul
scas
cmp
sbb
add
mov
shlb
or
cmc
inc
cwtl
loop
push
mov
movsb
push
insb
imul
sbb
ret
andl
stos
mov
adc
cmp
push
lods
outsl
decl
dec
xor
mov
xor
dec
nop
clc
push
sub
inc
push
mov
mov
js
xchg
fidivrs
dec
dec
dec
pop
xchg
lret
fs
faddl
add
mov
add
stos
jl
mov
or
adc
pop
jne
and
call
add
xchg
aas
xor
dec
adc
dec
push
das
cmp
pop
dec
iret
aas
pushf
adc
outsl
dec
ret
add
push
shrl
rcll
mov
jecxz
ret
data16
and
jo
test
xchg
repnz
xchg
sbb
arpl
lret
mov
mov
jecxz
sub
inc
sub
lcall
jbe
je
sub
movsb
iret
sbb
fildl
in
add
mov
xchg
adc
or
mov
mov
pop
adc
std
imul
mov
addb
or
jmp
insb
or
xchg
push
mov
dec
mov
xorl
sbb
outsb
mov
dec
fbld
leave
lds
mov
mov
test
incl
inc
aaa
ja
inc
test
jl
xchg
in
test
out
aam
fdiv
xor
add
addr16
mov
adc
sti
push
test
mov
outsb
insb
mov
push
sbb
fldt
sub
arpl
dec
xchg
dec
pop
and
les
push
icebp
les
push
fwait
mov
dec
mov
inc
lea
shll
por
std
xor
fidivrs
xchg
xor
mov
aad
inc
jmp
movl
mov
mov
inc
sub
inc
insb
inc
dec
mov
jg
lods
stos
cli
cmpsl
data16
push
out
xchg
push
dec
push
adcl
push
fistpll
ficoml
fdivs
cmp
mov
testb
mov
mov
cmp
inc
xor
jle
xchg
cmp
dec
fs
jle
mov
pop
add
add
sbb
sub
das
fiadds
sbb
mov
mov
ret
inc
cmc
xchg
movsb
cltd
add
inc
cmpsl
adc
xchg
rcr
adc
mov
orl
mov
xor
subb
xchg
outsl
xchg
nop
repnz
in
in
add
out
pop
sub
adc
xchg
in
add
jns
jne
add
lds
aad
adc
adc
popf
fwait
int3
xchg
lea
stos
jle
mov
push
enter
movups
cwtl
outsb
repz
ss
hlt
das
lcall
call
shl
shl
mov
pop
pop
inc
stc
pop
lock
jne
xor
cmp
sub
sbbl
outsl
jmp
test
les
sbb
mov
jo
mov
cmc
sti
jo
sar
mov
jo
add
add
pop
sbb
push
mov
scas
or
rcl
mov
out
jb
cmp
lahf
sub
popa
js
loopne
sub
sahf
fdivr
aam
ret
cmp
push
bound
fpatan
xor
jb
dec
jmp
jl
bnd
sar
add
jo
lea
rclb
cli
loope
lods
es
mov
pop
add
xor
xchg
arpl
xor
in
xchg
scas
fistps
jle
mov
mov
shlb
iret
fbstp
inc
sub
cmpsb
xchg
leave
push
sti
ja
xor
imul
push
push
repz
ja
aas
int3
pop
cmp
fldl
add
jbe
mov
xchg
xor
xor
pop
ds
aam
iret
push
pusha
in
push
outsl
cltd
fbld
xchg
sub
add
loopne
mov
dec
mov
jecxz
xor
stos
popf
sub
insl
dec
cltd
pop
inc
mov
fbstp
lret
jmp
pop
sbb
in
adc
outsl
push
out
push
out
mov
cmpsb
add
in
repz
pop
popf
test
movsl
lret
cmc
popa
les
movsl
and
pop
gs
ja
cwtl
mov
in
rcrl
dec
mov
pop
cmpsl
mov
push
ss
and
fisttpl
push
xor
adc
shrb
inc
mov
mov
adc
test
loopne
cmpsb
test
jmp
or
bound
mov
lret
insl
mov
iret
cmp
pop
jmp
jle
fmul
in
sbbb
loop
div
ss
add
pop
and
in
cmpsl
pop
add
sub
jns
or
jb
bt
gs
aaa
fdivp
fmulp
aaa
pop
and
pop
fstpt
addb
dec
idivl
jmp
adc
stc
fld
xchg
bound
cmc
mov
push
sbb
imul
push
fistps
repnz
push
inc
mov
and
movsb
inc
xor
test
repnz
adc
pop
insb
cmp
inc
scas
inc
inc
inc
push
outsl
and
dec
sub
pop
popa
mov
hlt
jb
bnd
mov
dec
inc
xor
xchg
out
jne
dec
test
mov
xorl
mov
js
ljmp
ds
movsl
scas
insb
xor
pop
mov
push
mov
mov
idiv
orl
sub
jg
pop
push
rclb
pop
push
sbbl
pop
mov
push
ljmp
lods
mov
inc
add
mov
dec
jmp
sbb
jae
sahf
clc
movsb
pop
test
dec
cmc
mov
adc
pop
dec
call
mov
lds
stc
fsts
ret
xchg
add
pushf
cmp
or
stc
aam
inc
fwait
add
data16
cmp
xlat
push
pop
gs
jge
pop
repz
ss
stos
inc
lods
fldt
inc
pop
out
push
dec
out
inc
sbb
repnz
xor
sub
push
pushl
add
jns
lods
mov
daa
lret
dec
int3
add
movsl
lcall
movl
mov
adc
rcl
cwtl
roll
sahf
nopl
dec
mov
cmc
adc
out
lahf
test
pop
inc
cmpsb
inc
arpl
cmpsl
sti
mov
in
mov
pop
push
adc
xchg
aam
int
fildl
lds
lahf
sbbb
cs
scas
sbb
dec
icebp
loopne
or
or
sbb
add
rolb
jo
fistps
es
mov
lahf
hlt
push
adcb
jecxz
dec
sbb
push
in
test
pusha
pushf
and
sbb
mov
add
jbe
jecxz
pop
repz
xor
inc
imul
fstpt
xor
mov
aam
sub
in
cmc
out
ret
push
mov
rclb
cld
cmp
into
xchg
lahf
shll
sbb
repnz
outsl
mov
imul
scas
mov
mov
shl
dec
repz
ljmp
sbb
cs
pop
pop
pop
xchg
inc
es
push
pop
pop
popf
out
jbe
add
or
pop
xchg
and
mov
icebp
inc
fcomip
lfs
xchg
lods
inc
stos
sub
pusha
pop
je
insb
test
push
mov
sub
rclb
std
addl
je
dec
jo
sub
pushf
sahf
xor
push
inc
popa
pop
cld
inc
imul
lret
cmp
lock
jnp
je
loop
mov
jmp
mov
in
ljmp
inc
divb
mov
hlt
stc
fs
mov
roll
rolb
pop
imul
jno
add
faddl
jnp
mov
mov
xor
or
fildl
and
into
mov
loope
test
pop
fisubs
push
lock
ja
xor
adc
cs
iret
xor
push
push
mov
xchg
test
scas
fdivrs
clc
pop
sub
jl
pop
cmp
pop
mov
sub
cld
sbb
cmp
orl
xor
add
jbe
icebp
cwtl
mov
jecxz
push
and
or
sbb
jmp
test
arpl
jmp
lods
dec
and
inc
jmp
bound
or
mov
add
aaa
lea
push
push
insb
das
dec
icebp
fwait
rorl
enter
sahf
push
sbb
pop
in
neg
sub
pop
out
sarb
mov
pop
sbb
ja,pn
lcall
and
pop
aas
jo
mov
mov
in
pop
repz
or
imul
bound
jecxz
bound
jg
std
movsl
fisubrl
aaa
enter
cwtl
mov
jg
cld
mov
leave
dec
insb
lods
mov
xchg
inc
inc
adc
dec
mov
jb
and
shll
lods
push
adc
lahf
push
xchg
mov
mov
ljmp
outsb
out
movsb
shrb
leave
jmp
addr16
sbb
imul
adc
fsubl
pop
ds
pop
jmp
mov
insl
cmp
or
inc
jns
pushf
pop
xor
pop
pop
fdivs
and
scas
pop
fsubs
dec
addl
xchg
test
inc
sub
mov
mov
adc
repz
jbe
negb
dec
hlt
xor
xlat
lcall
or
dec
cmp
clc
sahf
clc
mov
fcomip
push
aas
mov
mov
aaa
fcomps
pop
aaa
cmpl
add
xor
ficompl
cmpsl
bound
dec
mov
inc
lods
jb
dec
mov
scas
iret
scas
cld
iret
and
ret
mulb
dec
shll
js
movsl
cld
stos
inc
or
mov
and
or
pop
cmp
vcmpss
aad
cld
push
mov
add
pop
adc
fistps
aas
adc
loopne
movsb
ret
loopne
push
mov
xchg
fldl
lods
pop
lahf
sub
inc
outsl
xchg
sbb
lcall
and
cmp
or
xor
out
shl
cmpsl
xchg
push
cli
pop
shlb
roll
dec
mov
std
scas
pop
imul
lods
aaa
pop
scas
xchg
enter
imul
fstps
cmp
xor
jbe
roll
stos
mov
in
filds
ret
push
fistps
inc
fdivrs
jbe
lret
cmc
sbb
xor
sbb
outsl
lods
dec
jae
nopl
jno
cmp
jo
mov
popf
cmpsl
adcb
test
sahf
dec
fmull
jne
lods
imul
mov
jge
sbb
xor
mov
inc
fwait
and
xor
mov
jle
ljmp
dec
fldenv
arpl
xor
push
mov
mov
mov
add
test
sub
push
push
push
mov
and
fstl
test
push
fwait
dec
mov
dec
clc
fwait
xchg
pop
dec
mov
rep
cmp
ss
fcomps
sub
int3
cmp
jl
dec
or
xchg
outsl
or
outsl
jmp
lahf
fmuls
jge
scas
jmp
jmp
lret
cmpsl
repnz
dec
clc
mov
mov
dec
daa
inc
adc
xor
call
aas
lea
orl
inc
jl
scas
add
mov
push
cltd
cmpl
aad
xchg
ds
out
push
enter
pop
bound
jne
ret
adc
orb
cmp
out
sub
mov
sbbl
push
test
sub
jl
faddp
mov
lahf
cmp
ret
lods
xchg
jbe
icebp
nop
icebp
icebp
out
daa
dec
pop
dec
daa
jl
cltd
xor
fisttpl
push
in
pop
sub
into
mov
xor
pop
lret
shrb
push
call
test
lods
xor
fistps
sbb
jecxz
pushf
xchg
out
pop
enter
rorb
jle
dec
shr
aam
xor
or
cmpsb
push
test
cltd
cmp
int3
and
adc
int
int3
in
fs
mov
push
mov
sub
jns
mov
dec
popf
xor
jmp
fldcw
divl
test
jo
and
jae
shlb
pop
pop
sbb
cmp
jl
fistps
pop
jmp
xlat
rcrl
and
jb
sub
hlt
pop
sub
or
outsl
orl
dec
cmp
push
dec
cmp
hlt
mov
dec
or
gs
adc
add
add
aas
push
call
jns
jl
imul
mov
dec
dec
push
mov
les
outsl
mov
dec
cs
mov
mov
mov
xchg
cmp
sub
or
pop
or
imul
xchg
inc
push
mov
sbb
loope
adc
jnp
lds
jge
pop
dec
outsl
dec
and
xor
mov
cmpl
sub
sub
push
mov
rorb
cli
fwait
push
in
add
nop
mov
fstp
negl
imul
gs
push
jns
xor
sub
sbb
add
dec
sbb
sub
test
mov
jno
movsb
lock
movsl
and
jge
stos
lea
mov
inc
outsb
rcrb
aas
push
jp
rcl
xchg
dec
mov
movsb
xor
mov
popa
push
mov
mov
hlt
les
in
inc
lods
mov
cmpsb
push
inc
sarl
mov
jmp
add
push
ljmp
adc
fwait
inc
push
adc
cmpsl
mov
inc
adc
sbb
or
int
mov
pop
add
inc
push
loopne
leave
fildll
xor
cmp
jbe
les
sbb
mov
add
push
js
paddsb
or
push
std
sub
sahf
jg
push
dec
mov
mov
loope
jg
sbb
fmul
sub
jg
mov
xchg
xchg
movsl
leave
xor
adc
call
aad
mov
or
pop
in
jg
inc
mov
negl
in
ret
and
icebp
fildll
jb
mov
cwtl
movsb
in
sub
pop
inc
inc
mov
sub
jecxz
cs
dec
adc
out
int
int
sbb
mov
sarl
fs
mov
jae
test
clc
pop
pop
inc
lods
stos
into
xchg
mov
xchg
outsb
or
fstpt
add
push
mul
sahf
mov
dec
lret
dec
sbb
mov
aaa
sub
sbb
sbb
jno
push
test
jp
pop
xor
or
pushf
add
xor
push
mov
fs
xor
xchg
lcall
mov
pop
xchg
in
mov
xor
outsb
add
xor
push
sbb
mov
add
add
arpl
lods
sbb
cmp
pop
cmc
jns
lea
or
test
divb
jl
pop
mov
out
fdivl
and
insl
sub
add
loope
mov
mov
mov
mov
std
xchg
lcall
fs
cmp
dec
jbe
mov
out
fcmovbe
mov
xlat
mov
jbe
and
imulb
mov
repnz
jne
repz
rcrb
pop
mov
popf
mov
add
mov
sar
xchg
xchg
movsl
mov
cwtl
adc
mov
xor
mov
rcr
xor
pushf
imul
idivl
std
addl
mov
xlat
in
test
loopne
cmp
fisubrs
cmp
mov
outsl
sub
inc
or
dec
push
clc
popf
cld
pop
in
ret
inc
pop
movsb
jge
ds
fdivl
lret
jae
pushf
mov
icebp
and
out
cwtl
pop
cmc
imul
loopne
mov
pushf
inc
or
cmp
push
int
pop
fwait
cmc
cmpsb
fistpl
push
mov
loopne
lock
jne
or
test
pop
cltd
xor
or
mov
fiadds
daa
add
inc
mov
and
scas
xlat
sarl
lds
add
adc
xchg
or
sahf
sbb
xor
out
idivl
out
shll
scas
fcmovnu
add
stc
test
outsl
shll
imul
lcall
mov
ret
add
mov
mov
cmpsl
fistl
xor
and
stos
sub
dec
cmp
out
leave
push
paddusw
mov
fwait
jmp
leave
mov
jmp
or
cwtl
dec
or
or
sbbl
cld
out
xchg
ja
jb
ljmp
in
xchg
outsl
mov
mov
popa
mov
lret
loope
sub
jl
scas
inc
stos
mov
sub
dec
add
fidivrl
gs
std
xchg
adc
mov
fldl
out
lcall
cltd
aam
or
call
and
test
icebp
shll
imull
outsl
scas
mov
push
or
add
mov
andl
in
lods
xchg
and
cmp
cli
push
fisubl
or
imul
aas
xchg
lock
inc
outsl
es
inc
pusha
cwtl
dec
push
fnstcw
lea
lods
pop
push
mov
or
and
push
and
adc
in
lock
adcb
cmc
es
subl
sbb
mov
mov
movsb
add
test
les
inc
gs
mov
jne
jb
fcompl
ret
or
push
shlb
aam
pop
cmp
enter
call
inc
mov
mov
cmpl
or
cmp
sub
fdivs
enter
call
inc
mov
mov
cmpl
or
cmp
sub
fdivs
adcb
adc
pusha
cwtl
jne
inc
mov
mov
mov
push
lds
loope
cmp
sbb
jmp
inc
cmp
test
cmpsl
dec
loop
js
pop
xchg
nop
jns
ds
xlat
test
lock
loopne
shr
mov
in
mov
push
jo
pusha
xor
arpl
xor
and
shl
shl
ret
loopne
nop
mov
mov
aaa
jo
pusha
xor
and
adc
add
ljmp
loopne
nop
mov
mov
aas
add
pusha
sbb
outsb
fs
push
push
adc
mov
xchg
lods
or
push
pop
inc
mov
dec
fwait
adc
inc
pop
sbb
outsb
adc
rcrl
je
pop
jg
mov
pushf
and
je
pushl
mov
jle
jecxz
lcall
or
nop
pushf
mov
int3
adc
mov
das
repz
dec
hlt
xchg
xchg
mov
jnp
xor
arpl
push
push
mov
lahf
mov
jo
push
into
ljmp
es
jecxz
arpl
dec
xchg
idivb
pushf
inc
inc
mov
cltd
fsubs
inc
sahf
xor
jo
push
jecxz
pushf
icebp
dec
xchg
push
pop
sub
mov
inc
pusha
repz
xor
repz
jecxz
shl
aam
mov
mov
mov
dec
jo
pusha
sub
cmp
adc
sbb
mov
cmpsl
cmpsb
xlat
dec
rcll
arpl
and
sub
jns
mov
inc
repz
jecxz
mov
shll
ffreep
mov
push
es
jg
outsl
arpl
dec
lcall
xchg
lret
cld
mov
mov
push
jo
pusha
xor
and
adc
add
repz
rcl
ret
loopne
nop
mov
mov
push
jo
pusha
xor
and
adc
add
repz
aad
add
jle
fisubrs
push
mov
cmp
xor
or
shlb
pusha
aad
push
test
imul
pop
jae
adc
stc
jle
daa
push
dec
daa
inc
cmp
aas
push
pop
std
les
out
frstor
push
lock
outsb
stos
mov
jb
dec
add
push
or
out
mov
in
xchg
std
movsl
mov
mov
cmp
mov
add
daa
jl
inc
xlat
setnp
int
test
inc
dec
clc
or
lcall
dec
or
xor
call
pop
aam
push
in
pop
stos
and
lret
les
cmc
lds
pop
push
jns
pop
xor
cmp
test
in
cmpsb
mov
scas
mov
pop
outsl
enter
inc
cmpsb
adc
push
ljmp
jne
jmp
fcomps
in
imul
daa
xor
js
and
jb
shlb
arpl
nop
cwtl
xchg
push
std
jge
shlb
jb
ss
loopne
popf
stos
test
add
jmp
push
icebp
addb
out
into
das
mov
mov
push
push
inc
mov
sub
pop
jno
cltd
and
xchg
jmp
bound
mov
jno
dec
stc
lret
lock
pushf
or
fs
cmp
inc
mov
push
push
movsl
scas
xchg
movsb
out
lds
xrelease
or
ss
inc
dec
aas
mov
ljmp
cmpsl
bound
push
jp
adc
mov
stos
jmp
lods
mov
sysenter
cmp
inc
xor
xor
cmp
add
movsl
lods
jle
fldcw
sahf
lret
add
mov
sbb
pop
add
imul
dec
divb
in
out
and
pop
repnz
cs
cltd
lods
sub
mov
scas
xchg
aad
cmp
jo
in
cmc
sbb
pop
mov
pushf
jb
jno
addl
mov
mov
icebp
shl
lret
call
sar
jge
lahf
jecxz
and
adc
imul
sbb
dec
lea
hlt
out
push
gs
jge
sti
or
cmpsb
shr
sti
pop
cwtl
sub
imulb
dec
mov
cli
fdivrl
gs
sbb
lods
in
insb
mov
mov
sub
mov
cwtl
jge
push
jno
dec
ret
push
lea
sub
dec
pop
mov
negl
jmp
cmp
aaa
shrb
xor
mov
fldl2t
fnstsw
test
scas
inc
into
sub
dec
pop
pop
mull
lods
nop
insl
push
pop
sub
jae
mov
pushf
adc
gs
xchg
jno
lock
sbb
sbb
out
in
pop
pop
add
and
pop
insb
stos
loopne
add
fiadds
xor
hlt
icebp
test
push
test
sub
add
mov
or
add
cmc
ss
cmp
aas
push
fwait
sub
cld
ret
jae
subl
pop
or
call
cmp
ljmp
cmpsl
pusha
mov
push
mov
push
or
jge
sub
adc
enter
into
lcall
fstps
jnp
daa
std
pusha
pop
mov
cld
ja
and
adc
ret
mov
inc
aam
fwait
xor
push
mov
sub
mov
jo
pop
js
or
cmpsl
mov
test
add
aad
mov
stc
inc
add
aas
push
cld
or
inc
dec
icebp
les
es
xor
mov
test
stos
pop
jp
loope
push
dec
add
xorl
mov
jno
sbb
push
add
rclb
lock
and
push
xor
loope
mov
clc
test
jecxz
jnp
jecxz
mov
insl
push
xor
out
pop
xchg
xor
lcall
scas
ret
xchg
add
shl
loope
in
sub
inc
in
xor
mov
and
xor
pop
dec
and
nop
into
mov
mov
push
dec
test
inc
decl
test
dec
das
movsl
jecxz
in
or
jae
aaa
iret
adc
adc
sbb
mov
aad
xor
lods
adc
jg
pop
outsl
inc
sti
in
add
xor
in
lahf
movsb
sub
xchg
inc
in
mov
pop
add
and
mov
data16
icebp
cmp
push
lods
push
loopne
int3
cmp
xchg
sub
out
pop
pop
movsl
popa
js
fnstcw
push
jecxz
pusha
add
orb
addr16
lret
dec
movswl
in
mov
stos
std
cmp
xchg
xor
divl
pop
cmc
lret
jge
dec
and
ja
lock
fsubrl
nop
mov
mov
inc
add
adc
scas
lcall
jmp
lods
push
loop
hlt
enter
add
lock
sub
add
mov
xchg
add
xchg
mov
and
jo
mov
int3
aad
jl
mov
push
pushf
js
js
push
xchg
inc
mov
push
cmc
arpl
mov
cmp
inc
mov
cmpsb
int3
lods
mov
fcmovu
iret
xlat
lea
sub
pushf
stos
fistl
mov
pop
fdivrs
jno
jnp
pop
addl
shl
or
test
and
fdivrl
cmp
mov
mov
mov
sti
jp
pop
mov
aas
jle
adc
stc
inc
sbb
adc
xor
stos
pop
test
xchg
mov
inc
lahf
fistpll
jl
sbb
mov
adc
pop
aad
add
rcrb
sbb
adc
paddusb
sub
lods
sahf
ret
std
push
cmpsl
xchg
mov
pop
mov
push
scas
test
fists
stc
sbb
lods
daa
lcall
jae
bnd
pop
repz
xchg
and
adc
xchg
cmpsb
dec
cmp
push
mov
mov
lock
lods
pusha
sti
pop
jge
movsb
roll
sbb
or
mov
jne
insb
inc
sub
mov
stos
pop
xlat
cmpsl
and
int
das
loope
jae
mov
lea
inc
pop
add
mov
dec
rclb
das
and
lock
pushf
out
orl
cli
mov
push
cmp
dec
push
rcrb
mov
jle
cwtl
jecxz
pop
aad
mov
mov
aam
and
add
ljmp
and
or
aad
cld
sar
inc
orl
jg
or
mov
fbstp
ficoms
adc
lret
cltd
testb
mov
cmp
add
int
test
cld
test
dec
test
cmp
divb
and
inc
nop
std
mov
sub
cmp
xchg
repz
push
fisubrs
xor
imul
loopne
test
stos
stos
and
in
jnp
cmp
or
dec
sahf
fs
xchg
cmp
cmp
idivl
les
in
scas
cmpsl
aas
test
fidivrs
xchg
pop
loop
mov
nop
mov
insl
push
push
pushf
rcll
mov
inc
icebp
pop
mov
pop
pop
add
lcall
push
adc
xchg
in
fldcw
int3
aam
or
outsl
pop
dec
xchg
mov
cs
pop
cmp
mov
stos
std
leave
mov
cmp
pusha
and
push
inc
sub
xor
jno
jge
push
cmpsl
cmpsl
mov
sub
lods
and
pop
arpl
pop
xchg
arpl
adc
cmpsl
out
sub
icebp
int3
xor
rcl
sbb
sub
inc
xor
test
sub
rol
in
divb
sbb
rolb
xlat
aam
ds
dec
scas
mov
jmp
sbb
inc
mov
test
mov
xor
roll
dec
andb
jge
outsb
sbb
mov
jno
and
inc
cltd
cmp
scas
movsb
inc
mov
xchg
out
jge
jl
mov
push
cmp
test
jmp
sbb
and
test
jno
loope
jb
call
jl
jne
mov
xor
out
rorb
dec
jmp
test
mov
add
dec
dec
das
or
or
or
sub
fsubs
adc
adc
iret
dec
sbb
ds
out
outsb
test
xor
imulb
repz
sbb
mov
xorl
xchg
inc
adc
jle
jo
cli
or
movsl
xchg
sub
pop
push
test
clc
fsts
push
cmp
jae
add
daa
cli
mov
pop
ja
add
pushl
dec
aaa
scas
xor
shll
das
rclb
sbb
movsl
mov
je
pop
jl
mov
xchg
call
jge
into
fildl
lods
cmp
fs
cld
test
popf
mov
frstor
lahf
lods
cli
add
dec
outsb
mov
adc
pushf
xlat
loop
mov
or
xor
adc
sub
xchg
cmpsl
std
mov
jl
jmp
fs
hlt
inc
fcoms
mov
jg
add
mov
mov
and
inc
loopne
das
fnstcw
divl
aad
mov
out
out
inc
add
incl
inc
mov
stos
and
lcall
jp
jecxz,pt
aaa
or
cmp
fwait
mov
push
mov
sarl
and
pop
sbb
fbld
mov
filds
ficomps
inc
aas
stc
jbe
push
xorb
sub
fsubl
popa
adc
test
loope
mov
loope
std
xchg
jp
aaa
mov
mov
push
sahf
daa
sahf
xor
mov
jmp
mov
outsb
cmp
add
dec
ret
movsl
pusha
sti
dec
jbe
pop
outsb
sahf
xlat
mov
shlb
stc
in
pop
insb
jle
add
xor
xchg
sbb
jnp
sub
adc
nop
xor
jno
xchg
insl
mov
fisubrl
add
jg
mov
push
data16
fsts
stc
xchg
into
enter
push
sbb
test
mov
jle
jnp
into
stos
mov
in
enter
orl
mov
std
cmpb
inc
jl
mov
pusha
xchg
sub
add
add
inc
and
outsl
stos
xchg
push
faddl
dec
loop
aad
pop
jne
cmp
lret
jnp
fsubrl
in
xchg
in
push
dec
sti
pop
xchg
divl
in
sub
rclb
pushf
adc
adc
outsb
jne
lds
subl
sub
arpl
dec
hlt
stos
push
fsin
xor
repz
and
or
mov
lods
jb
inc
lret
scas
sbb
std
es
stc
adc
imull
sti
lgs
nop
xchg
pop
loop
sbb
lahf
push
outsb
sbb
xor
jg
js
out
mov
jle
divl
int
xchg
lcall
jp
mov
fstpt
mov
or
out
das
fldcw
lahf
xor
dec
aam
sbb
mov
xor
mov
jg
fldt
inc
adc
mov
mov
jae
inc
jmp
cs
and
xchg
dec
inc
mov
mov
sub
inc
dec
cltd
popa
push
imul
sbb
aaa
popa
adc
lock
aam
stc
mov
adc
cmp
test
sbb
in
xchg
adc
push
mov
pop
and
jb
btr
insb
push
sub
xlat
out
or
cmc
daa
mov
xchg
add
inc
pop
or
cmp
stos
mov
mov
adc
sti
dec
xchg
mov
xchg
test
push
mov
pop
or
ret
stos
pop
xlat
jl
push
push
in
mov
popf
push
fildl
xor
xor
mov
clc
ja
bound
and
leave
pushf
and
sub
dec
icebp
gs
mov
mov
pop
xlat
fisubrl
xlat
xor
dec
cltd
mov
gs
shl
add
adc
jne
lcall
push
hlt
xchg
mov
fildll
or
or
pop
mov
loopne
mov
dec
mov
loopne
fisubs
sbb
scas
and
jmp
je
jg
sub
filds
xor
xchg
popl
out
jne
stos
add
cmp
mov
mov
and
xchg
add
outsb
push
insl
and
or
loopne
sti
in
mov
nop
or
xor
cs
ret
cmp
nop
leave
or
popa
cmp
shll
lcall
mov
ljmp
bound
pop
scas
repz
mov
fisubrl
dec
adc
dec
inc
movsl
hlt
rorb
sbbb
dec
ljmpw
xchg
stc
hlt
fidivs
adc
sahf
sbb
or
data16
int
das
jmp
test
insb
aam
sub
loop
sub
lods
dec
stos
mov
and
xor
fs
scas
inc
cmp
sbb
mov
pop
mov
insl
jp
sub
mov
insb
outsl
mov
push
or
or
les
dec
mov
mov
inc
lret
jge
loop
popa
and
popl
dec
stc
mov
mov
or
in
out
nop
dec
pop
rorb
push
xlat
cmp
in
into
sti
scas
push
push
xchg
xchg
sahf
dec
aaa
jp
popa
ljmp
icebp
mov
pusha
xchg
pop
xor
imul
and
push
pop
inc
int3
jb
xor
imul
insb
roll
jg
cwtl
call
adc
fstpt
jns
mov
fwait
ret
arpl
loop
add
orl
lahf
dec
loope
aad
mov
stc
xorb
fwait
adc
jb
cmp
and
push
movsl
xor
cmpsl
mov
and
pop
or
call
leave
sbb
mov
in
or
mov
mov
push
mov
push
ds
xchg
cwtl
pop
lods
push
adc
in
dec
data16
cmp
orl
cmp
xor
jbe
sub
imul
sti
push
shlb
aaa
ret
pop
and
and
jbe
push
ret
xor
stos
push
in
inc
das
aad
jmp
push
push
inc
mov
stos
pop
pop
push
sbb
mov
and
sti
mov
push
stos
scas
dec
mov
stos
xlat
das
bound
insl
inc
orb
shlb
rorb
ret
lahf
pusha
adc
add
mov
pop
xchg
ret
or
add
inc
xchg
inc
call
xchg
cmp
mov
sub
sbb
sbb
jno
outsb
loope,pt
mov
cs
xlat
gs
mov
cwtl
aas
gs
mov
aaa
out
loope
mov
and
inc
and
stos
inc
xchg
push
dec
hlt
imul
push
fisubrs
mov
popf
lods
inc
test
jmp
ja
fs
cld
inc
push
decl
nop
popf
sub
cmp
pop
jbe
push
mov
xor
xor
push
shll
es
xchg
fidivs
fmuls
sbb
je
in
inc
mov
in
push
dec
push
ror
cwtl
clc
push
mov
sarl
in
lds
fnstenv
stos
lahf
inc
iret
xchg
adc
icebp
sub
sarl
mov
les
pop
inc
and
aam
inc
and
lods
lock
sub
jo
arpl
and
pushf
outsb
sbb
push
aas
insl
stc
pop
mov
mov
push
push
out
loop
adc
or
inc
cmp
fnstenv
imul
jo
stc
mov
jmp
jbe
push
mov
jl
fistpl
mov
aad
xchg
aaa
pop
xor
in
loopne
xchg
outsl
rcr
xchg
test
adc
add
int
cli
xor
mov
arpl
test
xor
pusha
jnp
mov
pop
clc
sub
subb
jl
xchg
movsb
push
pop
hlt
sub
push
add
jns
xchg
jge
and
sar
es
pop
imul
push
xor
fistps
mov
dec
lds
mov
cmpl
fimull
ret
pop
cltd
ret
mov
or
cld
stos
pop
popa
push
pop
mov
fdivrs
int
cmpsl
mov
jo
sub
enter
int3
push
pop
pop
pop
out
int3
sahf
and
jb
ret
popa
xchg
xchg
jb
mov
fwait
dec
fcmovnu
in
stc
sbb
mov
fcompl
and
loopne
inc
push
test
xorl
push
mov
mov
mov
push
fistpl
loopne
pop
orl
mov
movsb
cmp
jb
repnz
test
or
cmp
aaa
inc
xchg
icebp
mov
cmp
mul
or
ds
inc
into
cmpsl
aas
hlt
mulb
movsl
shrl
xor
add
loopne
jl
rcrb
je
xlat
add
inc
push
icebp
repz
movsl
rorb
mov
out
pop
test
ret
mov
fs
out
inc
hlt
in
sbb
lea
inc
popf
mov
add
cs
mov
sbbl
pop
mov
cmp
test
repnz
addb
inc
aas
or
scas
aas
cs
add
clc
imul
idivb
or
int
push
inc
data16
sbb
push
push
lock
ss
ret
inc
fmuls
xchg
repnz
dec
stos
jb
mov
push
pop
hlt
fwait
shrb
sbb
push
jp
adc
sub
mov
cld
mov
leave
dec
or
scas
clc
dec
js
add
in
daa
pop
mov
jecxz
mov
inc
lods
push
loope
fmuls
sub
mov
or
sti
inc
sbb
push
ja
fmull
shrl
lods
xor
lds
jge
hlt
pop
mov
xchg
lods
and
cmc
cmp
dec
inc
pop
mov
ds
fbstp
mov
icebp
lea
int
lods
jmp
lods
sub
fwait
xchg
popa
stc
mov
std
xor
push
xor
outsl
pusha
xor
push
and
sub
mov
jno
cmp
adc
push
inc
mov
mov
test
int3
in
outsb
sarl
dec
fs
lcall
or
scas
gs
sub
xlat
xchg
mov
add
cmovne
jne
fsubr
ljmp
scas
out
add
push
mov
cmp
scas
sub
jge
insl
lods
out
pop
push
push
lret
repnz
idivb
loopne
subl
xchg
test
or
xchg
shrl
sub
cmp
fnstenv
push
pop
and
rcrb
pusha
push
orb
sbb
in
sub
insl
sbb
xor
movb
sahf
xchg
jmp
mov
mov
movsb
movsb
lea
sub
xlat
mov
imulb
sbb
movsl
xor
pop
inc
xor
sub
mov
popa
or
mov
mov
aaa
mov
inc
pop
pushf
add
sub
mov
fisttpl
mov
outsb
push
and
xor
cs
aaa
lahf
xor
loope
mov
cs
loope
xchg
out
mov
popa
jbe
test
sub
lret
cmp
lret
or
or
xor
addb
test
pusha
aaa
sub
push
loope
push
add
add
dec
pusha
andb
sbb
xor
pop
jmp
sar
push
dec
ret
add
icebp
push
lret
int3
mov
icebp
adc
sti
push
inc
insb
nop
loop
roll
lea
mov
jl
push
push
ret
add
sbb
inc
mov
pop
nop
xlat
imul
mov
sarl
fisttps
mov
jae
testl
imul
aam
sti
ficompl
or
into
sub
js
ljmp
push
or
or
fs
mov
inc
hlt
fbstp
sahf
fdivrs
dec
pop
dec
dec
mov
adc
mov
ja
mov
jmp
lock
fcmove
in
out
xor
nop
rolb
cmp
push
loope
mov
and
das
xchg
adc
sbb
xrelease
xchg
adcb
xchg
les
test
or
adc
test
leave
addl
jo
xor
jg
std
insl
and
xor
arpl
aad
ror
ljmp
outsl
call
mov
push
dec
inc
movsl
es
jmp
jbe
adc
xor
es
outsb
scas
lea
cmc
xchg
pmullw
frstor
aam
ret
cmpl
mov
jb
psllw
pop
arpl
sub
adc
inc
sub
adc
test
add
fs
lahf
shlb
loopne
nop
mov
mov
push
jo
pusha
xor
and
adc
add
repz
rcl
ret
loopne
nop
mov
mov
push
jo
pusha
xor
and
adc
add
repz
rcl
ret
loope
nop
mov
mov
push
jo
pusha
xor
daa
add
xor
and
rcl
shl
ret
in
nop
mov
pop
mov
inc
pop
inc
cwtl
stos
in
iret
cld
fists
in
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
jl
cld
pop
int3
outsl
fdivrl
cs
jno
pusha
clc
aas
insb
iret
jl
dec
lcall
cmp
mov
int
fdivrl
bsf
mov
pushf
aas
insb
int
fildll
in
cmp
or
sbb
in
push
cld
pop
int3
ja
data16
push
mov
and
sub
into
push
icebp
sub
jae
pushf
dec
cld
sbbb
hlt
daa
loopne
ja
scas
in
inc
jg
inc
jmp
test
pop
push
xchg
in
adc
mov
test
mov
dec
xorl
call
call
or
lret
in
imul
ss
pop
pop
jmp
pop
sbb
jp
lahf
cld
lahf
push
pop
mov
in
outsl
xor
das
nop
fildll
sarb
dec
lfs
int3
fsubrl
sbb
push
aad
ja
mov
inc
das
mov
mov
ds
or
sbb
pop
jg
push
adc
inc
cld
mov
dec
xor
pop
mov
into
stos
lret
cmp
shr
pop
fdivrl
or
dec
cld
dec
int3
jg
lods
bsf
mov
pushf
es
xlat
jl
dec
negb
xchg
cmp
or
sbb
cwtl
sub
jle
pop
fnstenv
inc
stc
push
add
into
cmpsl
and
jo
popa
scas
push
pop
mov
jl
sub
ds
mov
addr16
dec
lock
ret
add
lcall
or
arpl
insb
iret
jl
dec
out
pop
ljmp
cmp
or
sbb
in
dec
cld
pop
int3
outsl
fdivrl
bsf
mov
pushf
aas
insb
iret
jl
dec
out
pop
ljmp
cmp
or
sbb
in
dec
stc
fadds
mov
enter
dec
jne
xor
push
je
inc
movsb
adc
adc
and
cmp
enter
dec
loope
movsb
mov
push
or
add
xchg
jnp
and
fcoms
sub
ljmp
pop
mov
push
sbb
push
xchg
push
loopne
adc
cld
push
cmc
xchg
sbb
push
js
mov
cmp
mov
in
sbb
fwait
mov
add
daa
popa
mov
mov
xchg
int
jle
xor
inc
mov
pop
mov
leave
outsl
repz
out
jecxz
lret
sbb
dec
push
mov
sub
in
push
ficomps
int3
out
fsts
sarb
cmp
outsb
xlat
xchg
pop
daa
xchg
mov
sbb
addb
sub
jmp
hlt
xor
mov
mulb
jb
dec
jnp
mov
mov
leave
xor
and
cmc
cltd
adc
std
push
sub
add
loop
orb
shrb
mov
into
push
sub
xor
shrl
movsl
cmp
fldcw
in
sub
pmulhw
out
addb
jae
test
ret
out
orb
notl
cmpsb
and
mov
inc
sub
fsubrs
ror
add
stos
dec
jo
dec
not
out
or
movsl
mov
repnz
xchg
subb
lods
xor
pop
inc
enter
sbb
xor
cmp
enter
sub
push
fisubs
adc
pop
xchg
and
test
inc
inc
mov
inc
sub
dec
jnp
cmpb
inc
hlt
push
test
bound
imul
xorb
adc
mov
push
lret
aaa
inc
add
cmp
jns
test
nop
dec
jno
cld
jg
mov
lea
scas
outsb
or
push
in
not
addr16
mov
sbb
lock
xor
aam
fs
mov
stos
xchg
hlt
jns
sub
push
mov
xchg
out
push
sub
lret
out
test
push
stos
mov
lcall
sahf
mov
mull
jbe
clc
xchg
stc
fs
repz
cltd
xor
xchg
dec
in
hlt
sbb
lods
in
push
xchg
mov
cmp
scas
lods
and
adc
xorb
cmp
hlt
add
xchg
rclb
insb
out
loope
rclb
sub
pop
xlat
les
pop
out
cmc
bound
dec
mov
mov
push
mov
cli
fs
es
hlt
adc
adc
jg
data16
or
sbb
lret
jo
mov
out
mov
cmp
pusha
lcall
je
out
mov
mov
push
in
mov
xor
mov
mov
add
cmpsb
push
aas
into
add
jmp
push
push
cmp
orl
adc
cmp
or
cmpsb
cwtl
iret
inc
inc
fwait
out
mov
movsl
jb
gs
ja
mov
je
cmp
xor
ss
cmpsb
sub
pop
andl
cmp
fcmovu
aam
movsb
sbb
sahf
lahf
and
addl
sbb
dec
lds
xchg
or
or
adc
sbb
or
movlps
and
pop
in
aas
es
pushf
pop
cli
dec
dec
jmp
leave
push
bound
mov
add
xor
jne
mov
icebp
adc
test
out
sbb
mov
bound
mov
inc
outsl
xlat
daa
add
loop
sub
into
shll
fwait
das
inc
std
insl
inc
pushf
pop
and
mov
arpl
pop
leave
push
adc
sbb
xchg
mov
call
sbb
outsb
or
jne
push
jle
or
mov
lods
ret
xchg
mov
and
jno
mov
mov
daa
jnp
inc
nop
inc
or
fcoms
rclb
mull
repz
mov
push
in
jae
cwtl
mov
cmp
outsl
sahf
arpl
push
lds
pop
fsub
lahf
scas
or
repz
lret
inc
mov
cmp
cwtl
test
or
pop
pop
lret
and
cmp
aad
mov
in
cmp
lea
or
jnp
std
xor
or
rolb
dec
nop
fisubs
dec
xor
xor
jecxz
rcll
call
dec
push
mov
orb
xchg
or
mov
cmp
dec
cmp
aas
popf
mov
add
pop
out
insl
fstpt
js
mov
movsb
js
mov
popa
or
lret
adc
inc
or
les
adc
imul
je
xchg
cmp
ljmp
mov
orb
pop
out
cmp
mov
mov
ss
cltd
nop
loope
push
fwait
int3
nop
mov
in
sub
sbb
sbb
insl
adc
icebp
ret
pop
insb
inc
aas
or
insl
mov
aam
pop
ss
dec
mov
sub
mov
dec
inc
lret
push
sar
push
pop
fwait
xchg
xchg
cmpsb
pushf
push
iret
push
pop
push
sbb
scas
test
imul
fs
xor
sbb
imull
std
pop
insl
mov
cmp
nop
mov
dec
cmpb
xchg
ret
inc
sbb
dec
into
adc
lret
and
stos
jno
into
in
dec
movb
in
pop
cli
xchg
xchg
or
mov
dec
pop
lahf
and
rcr
fwait
add
dec
imul
adc
dec
xchg
stc
cmp
enter
mov
js
mov
jno
xor
sahf
cli
pop
and
cmp
and
or
pop
pushf
cmc
mov
dec
fs
aaa
fnstenv
lea
jmp
xchg
cmpsl
pop
mov
nop
or
push
fbld
sub
lods
rcl
std
dec
aad
les
loope
mov
call
pop
dec
lcall
mov
test
xchg
mov
cmp
jne
mov
lretw
inc
cmp
mov
adc
mov
mov
push
pop
test
sub
cmp
xchg
dec
lret
and
loope
xchg
dec
cwtl
xor
lret
hlt
push
out
push
xchg
mov
xor
pusha
fsubl
cmp
daa
shrl
xchg
xor
test
push
lea
jo
ss
sub
frstor
push
lock
mov
xchg
xchg
mov
dec
jecxz
fcomp
pop
inc
add
xor
pop
mov
repnz
xor
xor
pminub
pop
retw
ret
inc
sub
xchg
pop
xor
and
jge
test
pop
jo
xor
jae
xor
xchg
push
clc
hlt
xchg
daa
arpl
xchg
sti
enter
mov
je
lods
ljmp
lea
push
popa
and
lock
lock
pusha
int3
movsb
lret
add
add
xor
adc
in
cmp
adc
out
mov
pop
jne
mov
loopne
ja
movsl
lods
fsubr
inc
push
stos
lock
stc
sbb
or
ja
bound
rorl
or
enter
es
mov
push
xchg
imul
mov
lds
adc
in
push
xchg
pop
push
xchg
sti
cmc
ficompl
pop
xor
test
sar
mov
pop
mov
dec
cwtl
sub
or
rcll
lods
icebp
jp
fildl
fldl
stos
xchg
and
cmpsl
push
or
les
sbb
mov
dec
movsb
data16
pop
cmp
cltd
inc
mov
push
shl
push
inc
push
or
icebp
inc
pop
mov
pop
outsb
xchg
add
adc
mov
scas
fwait
pop
sbb
dec
sbbb
ret
jae
jmp
jmp
xchg
inc
test
jns
lock
jo
push
mov
pop
dec
test
mov
push
xchg
or
sub
insb
imul
cs
xor
sub
aas
jb
fs
dec
add
in
pop
lret
in
cmp
rclb
mov
jle
add
test
xchg
jg
nop
cli
xlat
pop
dec
and
xchg
push
lods
inc
insb
mov
xor
fmul
in
bound
fistl
sub
loope
int
andb
imul
sbb
fcmovnb
inc
scas
out
call
pusha
dec
push
out
add
jmp
mov
add
loope
push
out
mov
pop
jmp
xor
push
adc
fcompl
hlt
adc
pop
leave
xchg
sarb
xchg
sub
imul
in
jmp
push
dec
ljmp
stc
ret
lods
pop
ss
pop
repz
xchg
fnstsw
jae
nop
pop
jae
pop
sbb
mov
fdivs
mov
or
fwait
pop
xchg
push
cmpsb
cmp
pop
sbb
leave
fadd
add
push
xlat
xor
push
dec
xlat
lods
cltd
loope
xchg
add
jns
mov
dec
xchg
jmp
iret
mov
ret
and
lahf
mov
inc
inc
jmp
shl
sbb
jp
cmp
pop
xchg
dec
adc
call
decb
adc
mov
js
mov
cs
movsb
imul
xchg
in
testl
jnp
or
xor
push
xchg
mov
sbbl
addl
dec
push
in
adc
pop
sub
pop
int
lahf
int3
mov
popf
fistl
movsb
shlb
mov
inc
inc
lods
scas
fnstsw
xchg
push
fwait
in
mov
stc
insb
and
or
psrlw
jge
lds
pusha
jge
add
test
mov
gs
pop
mov
out
push
xor
jp
add
dec
mov
sub
mov
addr16
lcall
push
cmp
lock
pusha
push
icebp
in
cmp
rol
rclb
stos
sub
xor
and
test
cmp
scas
mov
js
test
sub
xor
out
mov
mov
xor
iret
add
pop
movsb
mov
pop
fistps
pusha
sbb
xchg
fsub
loopne
jl
notl
or
iret
fs
xor
xchg
rclb
adc
inc
mov
lcall
sub
inc
nop
ret
push
mov
lcall
ss
fidivl
js
pop
sahf
lahf
outsb
and
mov
rolb
push
div
lret
cmp
gs
push
pop
es
pop
or
dec
fmuls
scas
lahf
jnp
out
gs
cmp
pop
rolb
pop
rcl
add
xor
pop
fldt
pushf
jnp
pop
adc
out
dec
loop
jmp
nop
mov
cwtl
stos
add
pop
jae
out
push
enter
pop
xor
movsb
mov
jmp
dec
jns
and
fildll
sub
sub
mov
sbb
xorb
mov
insb
mov
xchg
pop
sbb
lret
repz
pop
testl
bound
insb
aad
dec
scas
dec
clc
add
addr16
xor
inc
cmp
push
push
adc
pop
mov
out
and
adc
mov
in
push
dec
mov
repz
add
call
dec
ret
imul
stos
test
jbe
clc
xor
or
cmc
cwtl
loope
rcl
pop
test
mov
fldt
jns
dec
imul
imul
sbb
mov
int3
and
cmp
xchg
xor
es
loopne
mov
rcrb
out
cmc
les
mov
nop
xor
decl
clc
mov
jnp
lahf
pop
inc
in
xor
test
fisubrs
push
out
push
mov
push
cmp
lods
xchg
mov
sbb
cwtl
push
mov
fwait
push
push
and
sub
sbb
loop
das
mov
ja
pushf
lahf
fwait
push
xchg
repz
sub
adc
cmc
inc
mov
int
push
repnz
inc
dec
call
mov
loopne
xchg
lahf
pop
arpl
dec
aam
in
sub
out
enter
in
fcmovne
mov
pop
nop
insb
movsb
test
jo
xor
test
mov
fnstcw
mov
push
and
add
sbb
pop
jno
ret
or
xlat
add
and
jb
leave
xor
mov
push
jg
rclb
or
pop
call
sub
inc
and
popa
pushf
insl
fldcw
arpl
mov
push
cmp
mov
and
xlat
pushf
mov
mov
mov
sbb
lods
movsl
and
pop
enter
movsb
ret
or
insb
add
nop
add
pop
jecxz
xor
in
popf
and
loop
add
sbb
or
sbbl
lret
add
inc
in
xorl
pop
not
jb
hlt
clc
mov
call
js
arpl
lahf
or
test
and
adc
xor
cld
call
sub
ljmp
ret
xor
aad
imul
fs
sbb
loopne
fs
push
test
sti
mov
in
lea
fs
or
cltd
cmp
divl
mov
les
movsl
test
test
loopne
lea
mov
pop
ret
push
jmp
fsubrp
es
inc
icebp
pop
xchg
popf
add
xchg
jnp
bound
mov
mov
cli
lcall
and
cmpsl
mul
adc
roll
fwait
jne
pop
imul
xchg
and
add
scas
outsb
dec
sbb
inc
out
cmp
popf
icebp
adc
pop
fs
pop
jle
sbb
leave
ret
push
ds
mov
jnp
pusha
mov
call
popa
adc
adc
icebp
inc
addr16
mov
mov
repnz
jecxz
in
adc
bound
xor
shll
jecxz
jle
aam
and
popa
icebp
out
cmp
push
push
sbb
push
loopne
adc
shlb
xchg
sti
or
iret
popf
inc
std
std
lds
iret
mov
and
xor
cmp
cmp
cmc
xchg
aam
pop
cmc
sbb
int3
cmp
or
xor
inc
int
movsl
add
cltd
rorl
jo
xor
mov
stos
mov
jnp
mov
vandps
pushf
pop
and
add
lock
dec
out
push
pop
mov
cli
push
sub
popa
dec
stc
ja
jp
subl
movsb
int
sbb
pop
sub
inc
ret
cmp
mov
insl
cmpl
or
mov
add
xchg
pop
jecxz
inc
loope
out
cwtl
sbbb
loop
mov
jmp
xor
dec
dec
cmpsb
outsb
cmpsl
xor
inc
aad
lret
xor
pop
sub
jae
pop
fsubrp
pop
bound
mov
jl
dec
fs
mov
lods
sbb
andb
dec
mov
jo
aam
add
and
push
pop
cld
out
sbb
pop
int
xchg
sub
jl
outsl
xchg
mov
fcmovbe
push
dec
imull
dec
and
inc
pop
repnz
sbb
dec
or
aaa
dec
mov
xor
cli
sbb
je
pop
cwtl
in
ss
or
scas
add
dec
lds
jle
add
lahf
add
inc
lods
jae
popa
mov
xor
scas
inc
in
mov
ja
rcll
scas
notl
cmp
and
pop
and
push
iret
subb
sbb
sarb
jb
push
pushf
xchg
dec
test
cmpsl
adc
xor
lea
lea
mov
mov
in
or
clc
jbe
push
test
cmp
dec
add
mov
out
mov
adc
sbb
mov
sub
jo
in
and
mov
jbe
icebp
cmp
arpl
les
cs
push
fidivrl
enter
sub
mov
mov
inc
push
push
lcall
sub
test
loope
adc
pusha
jp
faddl
loope
test
sarl
sbb
sub
leave
hlt
fimuls
pop
shlb
mov
pop
pop
jae
adc
aas
mov
out
iret
or
mov
ret
mov
sub
jmp
ficomps
mov
push
add
adc
fsts
push
stos
jo
jmp
loop
lcall
jo
mov
fxch
and
enter
mov
sbb
rclb
add
pop
xor
outsl
shll
adc
xorb
fbstp
and
fldenv
xchg
icebp
pop
pop
or
into
and
lcall
je
std
sbb
ss
and
push
icebp
sub
std
movsb
mov
pop
fdivs
adc
enter
bound
sub
fnstenv
adc
mov
add
push
mov
xor
scas
or
push
aas
dec
addr16
rorl
iret
lea
push
in
mov
jge
mov
dec
jl
lret
mov
js
out
adc
fnstsw
lods
cld
mov
pusha
add
mov
jecxz
in
sub
pop
xor
jp
js,pn
je
adc
popl
lret
adc
in
mov
mov
cmc
arpl
popf
out
cmc
inc
popf
pop
outsl
mov
pop
gs
inc
inc
popa
cltd
xor
inc
adc
sub
pop
xor
jnp
cmpsb
daa
call
xor
lcall
add
movsl
in
pop
jmp
add
es
mov
push
clc
test
mov
or
out
out
cmp
push
outsl
sbb
jg
inc
andb
mov
adcb
out
pop
xchg
bound
and
push
xor
inc
xchg
fcmovne
jbe
lahf
and
cmp
arpl
mov
jnp
sub
cmp
lock
pop
mov
pop
or
out
dec
and
aas
fistpll
and
repz
push
cli
out
aas
xchg
inc
pop
adc
cmp
sub
ret
sbb
mov
xor
icebp
rolb
loopne
bound
mull
push
data16
insl
shrl
es
sarb
dec
imul
bound
mov
cmp
jg
mov
sub
jecxz
sbb
dec
out
sub
or
add
and
sbb
jmp
aaa
mov
adc
jae
stos
incl
push
lds
fadds
lret
pop
out
xchg
enter
faddl
mov
jmp
mov
outsl
jb
out
mov
sub
pushw
or
ds
gs
push
loopne
rol
cmp
out
cltd
daa
sbb
adc
xchg
sub
pop
outsl
sbb
dec
ficoms
xchg
xchg
pop
outsl
out
push
mov
jae
push
sbb
insb
xchg
or
push
xor
mov
push
addb
dec
aas
xor
jp
xorl
mov
int
icebp
xor
dec
pop
aas
xchg
sbb
movsl
push
pop
insl
adc
ficompl
xor
in
je
sub
sbb
lock
std
lcall
xor
popa
or
cmp
ficomps
out
iret
ret
test
popf
mov
mov
sub
fstps
addl
jo
sti
gs
lret
aad
adc
dec
mov
mov
int
pop
xchg
inc
mov
mov
popf
mov
mov
mov
rcr
pop
movsb
call
xlat
mov
xor
enter
jmp
mov
dec
xchg
xchg
adc
cmp
jle
cmp
jle
movb
int3
lock
push
jns
push
pop
push
inc
push
mov
ds
fisubs
test
jp
or
mov
add
outsl
xchg
mov
mov
lds
dec
aaa
mov
fwait
je
dec
ss
lds
xchg
inc
jle
std
add
adc
sub
mov
sub
pop
fwait
cli
pop
cmpsb
ljmp
sti
sub
into
cmp
adc
cmc
xchg
clc
mov
pop
fsubrs
jnp
fidivs
lock
scas
mov
mov
and
jge
jns
cmp
dec
add
ret
movsb
movsb
movsl
inc
jne
out
cmpl
cmp
sub
cmpsl
mov
push
std
shr
push
loop
mov
stos
xchg
push
mov
cmpb
mov
mov
mov
mov
pop
inc
jecxz
cmp
inc
test
lret
jle
inc
loope
jg
mov
sub
out
jg
mov
and
loope
movsb
cwtl
xchg
subb
cmp
insb
push
dec
sbb
sbb
jo
loope
aaa
ds
mov
rcrl
fs
into
mov
int3
fldl
jmp
mov
pop
bound
sar
stos
cmp
or
fcomps
xchg
xchg
push
xor
in
sub
xor
data16
into
into
iret
stos
push
daa
icebp
int3
iret
add
orb
sti
fidivl
aad
fisubl
cs
jns
pop
sahf
sbb
lods
bsf
mov
pushf
aas
insb
iret
jl
dec
out
pop
ljmp
cmp
or
sbb
in
dec
cld
pop
int3
outsl
fdivrl
bsf
mov
pushf
aas
insb
iret
jl
dec
out
pop
ljmp
cmp
or
sbb
in
dec
cld
pop
int3
outsl
fdivrl
bsf
mov
pushf
aas
insb
iret
jl
dec
out
pop
sub
cmp
or
sbb
pop
int
fdivrl
bsf
mov
pushf
aas
insb
iret
jl
out
pop
mov
mov
repz
jecxz
subb
cmp
es
pop
add
adc
inc
ljmp
subb
cmp
push
jp
dec
repnz
stos
adc
inc
xchg
lret
fwait
sub
sbb
push
jp
dec
repnz
sbb
dec
sti
inc
mov
and
jae
les
xchg
dec
sarb
shll
stos
inc
push
dec
scas
push
ljmp
insl
mov
push
push
lahf
call
inc
addr16
xchg
cmp
lahf
int3
adc
inc
xor
lea
push
pusha
hlt
sbb
bound
imul
mov
cli
bound
bound
and
jnp
and
movsb
mov
inc
pop
push
int
mov
shlb
pop
pop
push
pop
push
xchg
cmp
and
jp
push
aam
and
sahf
mov
lret
push
jb
in
dec
pop
cmp
inc
cli
pop
std
mov
bound
lret
dec
sub
sbb
push
jp
dec
jmp
sbb
sub
js
jb
out
idivl
or
sbb
or
push
add
jle
push
out
push
out
inc
test
pop
xchg
in
dec
repz
int
ret
push
shlb
loop
mov
ret
and
jae
inc
test
sti
adc
push
mov
outsb
jb
js
jg
inc
sarb
dec
repnz
add
xor
lret
subb
cmp
push
jp
dec
repnz
add
xor
lret
subb
push
sbb
push
cmpsb
out
mov
aaa
lret
mov
imul
mov
clc
inc
sti
pop
lcall
scas
and
cli
sub
in
or
andb
and
jne
adcl
mov
jb
insl
pop
imul
scas
dec
aaa
mov
sbb
xor
pop
jge
fsub
jmp
loopne
and
adc
push
lods
push
cmp
mov
cli
cmp
imul
imul
cmp
lret
inc
fldl
add
dec
sub
or
push
jmp
popa
call
daa
test
inc
jecxz
jl
imul
push
mov
mov
adc
aas
xlat
jb
sub
mov
jns
xchg
inc
mov
xor
sub
add
and
dec
pop
cmpsl
dec
push
inc
test
xor
xchg
inc
fsubl
mov
xor
pop
lods
hlt
int
push
fstps
sbbb
fnsave
dec
testl
sub
sub
lock
push
push
cmp
push
lds
xor
roll
les
pop
filds
daa
cmpsb
sbb
mov
or
sub
sbb
add
mov
jge
pusha
jle
jp
and
jle
mov
ficomps
adc
or
aas
xchg
cmpsl
loope
cmp
or
and
imul
xor
jmp
cmp
cli
xchg
push
jae
sbb
sti
test
pop
repnz
mov
add
cmp
ror
and
pop
mov
jbe
les
xchg
dec
adc
and
repz
mov
aas
and
repnz
hlt
lea
dec
js
gs
lahf
pusha
fisttps
test
xchg
dec
push
and
insl
cmp
push
push
sub
sub
sub
lods
lret
or
into
xlat
mov
popf
jle
pop
movsb
aad
xor
jne
jne
pop
sti
xor
pop
jl
pusha
clc
scas
popf
cwtl
outsb
jg
bound
stos
loope
addr16
movsb
xchg
rorl
mov
ror
iret
mov
pop
ss
adc
lods
arpl
inc
dec
inc
out
sub
xor
fwait
sub
cmp
add
insl
loope
jb
mov
push
sbb
cmpsl
push
das
xor
xchg
ds
lea
and
lea
and
pop
mov
leave
or
pushf
mov
scas
popl
or
mov
prefetch
or
or
js
jno
enter
sub
adc
and
jmp
enter
out
int
ja
pop
cli
xchg
rorl
loope
mov
repz
dec
pop
lret
addl
push
push
sub
icebp
xchg
sub
mov
sbb
pushf
xchg
push
fistps
pushf
sbb
push
lret
push
cmpsb
sbb
lods
push
dec
mov
les
sub
inc
jp
xchg
xlat
xchg
pop
cmp
into
dec
mov
lret
fstpt
leave
push
and
popf
scas
and
sbb
mov
jge
or
push
mov
sub
mov
ficompl
mov
decl
mov
repz
pop
icebp
enter
jbe
mov
ss
inc
adc
add
jb
orb
out
or
xchg
jbe
popa
or
jno
call
xchg
xor
sub
lds
shufps
iret
adc
ljmp
mov
xlat
mov
out
add
mov
outsl
in
fprem
imul
mov
jge
ret
fdivs
cmp
sub
sti
into
dec
mov
sbb
lods
and
inc
mov
fwait
daa
xor
add
xlat
inc
cmp
aas
repz
cmp
fidivrs
push
xor
cs
fcompl
hlt
wrmsr
mov
xchg
xor
fisttpl
xchg
outsb
push
xlat
jmp
hlt
push
jne
sar
ds
xor
jno
icebp
sbb
sub
pop
in
orl
sar
sbb
incb
jp
mov
adc
mov
mov
enter
cmpsb
mov
int
sbb
sbb
pop
mov
xchg
or
lret
shrl
inc
sti
xchg
enter
inc
std
into
mov
mov
xlat
out
std
mov
push
and
jmp
and
lret
std
fidivl
rcl
mov
lahf
mov
ds
scas
lods
sub
clc
rorb
cmp
adc
inc
aaa
ljmp
insb
sub
push
stos
scas
testl
jbe
sbb
fs
push
push
xchg
cltd
xchg
push
inc
repnz
xor
xor
hlt
scas
fcompl
xchg
push
mov
outsl
xor
dec
dec
dec
mov
push
inc
fisttpll
sti
xchg
jecxz
hlt
jne
push
ret
cwtl
out
mull
enter
gs
adc
imulb
xlat
outsl
add
jle
in
and
imul
adc
xchg
xor
xor
lods
sub
maxps
inc
test
mov
ret
fyl2xp1
fwait
push
push
xor
add
faddp
add
in
cmp
in
cmp
jnp
jmp
nop
scas
inc
arpl
mov
fs
xor
cld
scas
data16
sbb
jbe
cmp
pop
push
sti
lods
idivb
sub
cli
or
inc
dec
adc
and
xchg
sub
add
test
add
lods
push
cwtl
push
test
mov
adc
mov
sub
jmp
sbb
into
es
add
inc
jl
leave
testl
xchg
imul
or
cmp
int
or
lods
aas
push
loop
inc
xor
rcl
jecxz
test
shll
icebp
into
insb
js
cmp
outsb
push
scas
gs
out
pushf
or
out
in
or
movl
frstor
fwait
adc
popf
shl
xchg
ret
into
ljmp
in
filds
lret
xchg
jecxz
and
mov
or
jmp
jle
stos
iret
and
icebp
inc
lcall
mov
mov
xor
decl
sahf
imul
sbb
dec
je
pop
rcll
xor
lcall
mov
ds
pop
dec
mov
add
jle
aas
enter
pop
out
inc
ds
jo
inc
decl
xchg
lock
mov
pop
leave
add
out
mov
xor
sbb
rcl
outsb
pop
mov
and
ljmp
push
mov
cmpsl
loop
inc
push
mov
scas
inc
add
incb
fprem1
xchg
stc
cmp
jmp
imul
add
and
das
xchg
adc
cmp
test
xchg
lods
aas
inc
fistl
jbe
sbb
xchg
es
inc
or
mov
rcrl
clc
lahf
cmpsb
sti
fisubs
mov
ljmp
nop
cmpsb
pop
repz
scas
js
mov
loop
pop
arpl
sti
fucomip
ljmp
or
fstps
insb
stos
insb
mov
adc
rolb
dec
and
adc
clc
push
add
sbb
cmp
mov
inc
das
push
xor
lret
leave
movl
lret
lods
sbb
aas
idivl
xchg
rorl
mov
jbe
ljmp
adc
cltd
or
arpl
push
pop
sbb
dec
sbb
arpl
sti
jg
popf
loop
imul
mov
adc
mov
push
cli
lds
ret
das
repz
lcall
pop
lret
fisubs
ficoml
sub
js
cmp
push
xchg
ret
insl
outsb
dec
call
nop
loopne
test
dec
fnsave
loope
fwait
dec
pop
xlat
push
mov
in
mov
jle
aaa
push
aas
mov
popf
fistpl
bound
mov
addb
ds
cmpsl
jle
faddl
mov
push
clc
xor
push
xchg
iret
sub
push
xchg
xor
dec
inc
pop
mov
leave
mov
test
xor
je
mov
jae
icebp
movsb
lods
out
push
fisttps
in
dec
sahf
ret
inc
cmp
aas
pop
jge
aaa
repz
ja
cmp
loope
call
or
xlat
xor
iret
add
ret
int
notl
ss
xor
push
sar
cmp
mov
dec
mov
mov
jg
pop
sbb
ja
jae
js
cld
mov
mov
lods
movsl
repz
cs
mov
dec
data16
sub
notb
test
add
xchg
leave
daa
mov
adc
test
xchg
sub
sub
xchg
ljmp
fsubs
push
std
inc
test
scas
sbb
rorl
movsb
and
mov
outsl
bound
inc
sbb
push
xor
movsb
add
arpl
jae
idiv
test
push
div
nop
cs
pop
xchg
aam
cs
cmp
push
repnz
pop
jge
fldenv
out
hlt
movsb
movswl
lret
mov
pushf
mov
and
jns
mov
mov
leave
addr16
imulb
push
hlt
test
es
repz
movsl
aad
dec
add
mov
fxch
into
loop
sti
out
into
jbe
dec
inc
loop
jle
nop
andl
imul
ds
pop
stc
dec
in
push
or
push
dec
in
ficoml
jb
in
sbb
mov
sbb
cmp
jle
xor
or
cmpsb
into
xchg
adc
pushf
into
ret
jmp
loope
bound
int
outsl
push
fwait
dec
mov
in
xchg
push
push
xor
in
js
pusha
pop
inc
or
into
lods
pop
sub
jne
pop
insb
jle
nop
test
pop
push
push
and
je
dec
test
out
rolb
xchg
repnz
sub
or
or
pop
dec
mov
std
sub
loope
into
inc
adc
mov
in
inc
repz
jg
ljmp
hlt
jmp
rcll
fnstsw
mov
jne
pusha
mov
je
mov
push
sar
sub
dec
rcr
pop
mov
add
bswap
aad
pop
sub
adcb
mov
mov
mov
inc
inc
mov
push
fcompl
insb
adc
lods
inc
or
lock
lcall
ja
fwait
mov
xor
mov
jle
popa
or
mov
adc
clc
push
ljmp
sahf
pop
mov
lods
mov
decl
add
bound
dec
sub
xor
push
pop
add
inc
or
mov
fnop
cmp
xor
sbb
jl
dec
jae
jmp
jnp
xor
xchg
jmp
pop
mov
adc
mov
lods
rcl
mov
push
sbb
clc
mov
lods
nop
xchg
iret
aas
ja
leave
xchg
push
cmc
repz
popf
and
adc
scas
dec
fsubr
loopne
sarb
clc
in
mov
fdivrs
pop
fdivrl
lcall
ret
fwait
push
testl
inc
push
outsl
out
xchg
mov
adc
sub
bound
mov
pop
and
cmpsl
cmpsb
fsubl
loope
aam
pop
xor
add
jl
add
inc
mov
nop
aad
test
hlt
int3
and
add
dec
sahf
test
outsl
mov
xor
fldln2
dec
dec
inc
pop
mov
clc
mov
mov
fldcw
fwait
dec
adc
mov
and
incb
ljmp
xor
movsb
cmpsl
xchg
test
pop
xchg
scas
outsb
sbbl
cmp
popf
sub
xchg
push
mov
mov
push
add
fildl
decw
cmpb
ss
xchg
or
add
icebp
cltd
insb
cmp
cmp
cwtl
aad
cmp
jnp
cmc
push
dec
jne
xchg
push
addb
pusha
in
test
mov
pop
aas
adcl
push
mov
fimull
jnp
xchg
loopne
mov
stc
in
jb
mov
iret
popa
xlat
and
mov
dec
xchg
lds
dec
aas
push
lahf
pushf
mov
mov
loopne
test
xor
push
ja
inc
out
and
mov
pop
out
sbb
loop
test
mov
cmp
sti
addb
sti
icebp
mov
stos
enter
add
sti
ljmp
jg
or
in
loop
or
fstpl
and
pop
push
rclb
mov
fldl
xor
es
fsts
inc
lret
popf
ret
adc
addr16
fdivrl
push
pusha
frstor
inc
or
jmp
loopne
pop
jle
jge
movl
inc
xchg
dec
lret
mov
into
mov
call
inc
push
icebp
imul
push
clc
cmp
jo,pt
pop
mov
push
inc
add
icebp
xchg
inc
xor
jle
stc
sbb
pop
repnz
dec
stc
iret
imul
push
jmp
movsl
adc
andb
sub
fcoml
push
mov
jl
icebp
push
pop
ret
xor
int3
dec
rorl
push
sub
pop
outsb
addr16
sbb
xchg
add
pop
incl
fcmovbe
cmp
pop
rolb
cs
push
into
mov
ljmp
int
add
jae
call
push
sub
aas
jne
shr
adc
imul
fsts
mov
add
jns
orb
pop
sub
lods
adc
jno
test
aad
jg
bnd
rcl
clc
ret
mov
fstpt
shrl
mov
add
ret
mov
rorl
adc
sub
xor
push
mov
ret
fidivl
cmp
jae
mov
push
or
cmpb
push
inc
lock
popf
test
ss
nop
xchg
sbb
xchg
out
fwait
lock
adc
pop
dec
imul
cmpsl
in
aam
push
sub
jne
inc
fdiv
in
bound
fbstp
push
jb
dec
lea
adcl
ja
lods
pop
aad
adc
lahf
pushl
lret
stos
and
inc
xchg
repz
lret
addr16
divl
pop
xor
stos
sarl
mov
cli
mov
dec
mov
xchg
lret
jle
in
cmc
ret
pop
stos
scas
aam
inc
inc
inc
jb
sbb
scas
adc
cli
adc
les
xchg
xchg
adc
repz
hlt
xchg
cs
cltd
jae
ja
sarb
and
push
out
mov
xorb
hlt
out
cld
push
jnp
int3
xchg
imul
or
insb
mov
nop
sbb
ds
mov
int
lahf
or
xorb
mov
add
cmpsb
stc
mov
push
and
cmpl
int3
push
jo
out
lcall
xchg
ljmp
lret
or
mov
xchg
out
and
sbb
outsb
movsb
ja
pop
or
cmp
adc
jmp
pop
cli
les
dec
fdivr
ljmp
mov
mov
mov
fwait
je
pop
fdivl
cld
adc
pop
add
test
lret
popa
leave
or
adc
mov
push
sahf
lret
sbb
sbb
cltd
inc
flds
cmpsl
test
push
sbb
jge
xchg
in
aaa
jmp
add
adc
aam
mov
jg
mov
lods
and
adcl
loop
push
and
push
call
imul
cmp
cmp
stc
es
mov
fwait
mov
ss
in
out
test
pop
mov
xchg
setp
pop
sub
jno
das
mov
jae
sbb
outsb
pop
test
sahf
and
repnz
pop
mov
mov
fdiv
mov
add
sub
lahf
lcall
xchg
inc
pop
mov
push
ljmp
repz
sbb
push
jp
push
pusha
adc
xor
in
cmp
adcl
xor
or
shlb
xchg
rcrb
xchg
adc
push
mov
popf
lahf
jp
daa
jle
mov
dec
xchg
popf
movsl
imul
push
sbb
pop
leave
out
mov
or
pop
pop
adc
or
lods
or
or
repz
xchg
scas
lret
in
xchg
pop
push
pop
call
js
arpl
sub
sbb
xchg
xor
or
dec
and
ljmp
inc
enter
inc
mov
lock
fs
in
leave
jo
add
ja
imul
cmp
dec
out
mov
mov
arpl
jge
mov
xchg
lods
andl
mov
xchg
add
dec
jl
into
aas
pop
lret
jae
cmp
out
or
xchg
clc
sbb
sbb
test
adc
lret
dec
xadd
popf
mov
jmp
adc
dec
sti
repnz
pop
sbb
les
out
mov
push
les
mov
cmpsb
and
mov
mov
push
push
add
add
in
lahf
xchg
xor
ficoms
sbb
nop
or
inc
mov
aas
sbb
xchg
in
mov
movsb
add
sub
push
push
insl
jg
js
push
lods
fisubl
sub
jbe
jge
adc
inc
inc
jle
jbe
add
or
push
repz
aam
mov
ds
scas
dec
cmp
test
fisttps
add
imul
cli
mov
pop
test
inc
mov
out
jno
fldcw
sbb
cmp
es
mov
push
lds
sbbb
test
shl
nop
jle
inc
or
ds
mov
flds
mov
lcall
out
or
push
test
lock
cwtl
repnz
mov
adc
aas
fldt
jge
jno
loope
lea
shll
dec
negb
out
loope
pop
fcompl
dec
and
xor
push
inc
cmpsl
and
sub
or
jle
adc
clc
aaa
in
stc
negl
outsl
add
xchg
ret
xchg
clc
jb
xor
fwait
enter
and
xchg
mov
in
repz
jmp
repz
push
popf
rcll
imul
je
push
cwtl
mov
sub
xchg
add
add
or
imul
or
jb
adc
divb
lock
inc
outsl
out
out
xor
cmp
lock
mov
jl
and
rcll
lds
mov
bound
jge
mov
or
fisubl
mov
xchg
repz
mov
int3
xchg
jne
sahf
sub
add
mov
jge
pusha
dec
jmp
mov
xor
dec
test
mov
fdivs
insl
leave
sahf
fimuls
shll
pop
push
mov
xchg
nop
or
sub
and
dec
jmp
ret
das
push
mov
lret
inc
cmpsb
btr
and
cld
add
insb
sub
cmpsb
cmp
and
xchg
shll
aaa
sarl
lods
pop
test
or
jl
mov
mov
xor
cld
lahf
adc
fs
sbb
loop
test
cmpsb
add
ret
int
shrb
mov
and
aad
inc
fcompl
mov
movsb
cmp
imul
shll
popf
fs
fdivr
xchg
fcmovnu
das
dec
mov
or
or
in
clc
inc
jns
rolb
push
mov
test
cmc
mov
pusha
inc
lods
fistpll
stos
iret
test
bound
pop
fcoms
aad
and
das
push
bound
lds
aas
adc
mov
shlb
inc
adcl
loope
and
fsubrs
xor
pop
xchg
pop
push
loopne
sub
inc
cltd
inc
sub
cmp
lea
push
ljmp
xchg
mov
sbb
sub
push
sub
cwtl
adcb
inc
cmpsb
lret
adc
pop
inc
mov
inc
mov
mov
xor
dec
pusha
add
int3
add
mov
mov
arpl
cmp
inc
ds
push
push
data16
mov
cmp
jge
mov
and
pop
push
xchg
dec
jp
mov
rorb
pop
insl
cmc
xchg
xor
shlb
push
pushf
and
inc
test
aam
cwtl
pushf
dec
dec
scas
sbb
setbe
or
push
in
push
add
stos
jl
push
jbe
mov
loope
xlat
mov
xorb
mov
sub
es
jge
rorl
xchg
dec
loop
ss
fstps
xlat
loope
shlb
mov
stos
add
stos
sbb
daa
daa
lret
sbb
adc
lahf
cld
loope
push
pop
push
cmpsl
xor
fisttpl
jb
dec
lahf
adc
and
ljmp
push
les
clc
mov
xor
sbb
inc
xor
jg
push
pop
sub
jb
mov
cmp
in
pop
aaa
dec
hlt
xchg
or
jp
dec
repnz
add
xor
lret
subb
cmp
push
jp
dec
repnz
add
xor
lret
subb
cmp
push
jp
dec
repnz
add
xor
lret
subb
cmp
push
jp
dec
jb
std
stos
in
adc
fiaddl
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
icebp
stos
loope
rorl
xchg
in
mov
jb
arpl
push
or
xor
call
dec
add
stos
loope
rorl
mov
fidivl
popa
pop
push
or
xor
jp
or
pop
icebp
stos
loope
rorl
mov
fidivl
inc
cmp
outsb
and
xor
push
adc
test
test
mov
adc
fidivrs
pop
inc
lahf
mov
inc
inc
cwtl
sbb
in
cmp
mov
mov
lcall
mov
xchg
inc
sbb
push
repnz
in
jae
pop
mov
ss
xlat
je
inc
lret
xor
mov
icebp
mov
lcall
andl
popa
add
test
mov
xlat
mov
gs
jmp
out
insl
fisttps
pop
jo
imul
jp
xchg
mov
xlat
int
sbb
in
arpl
mov
and
mov
jg
mov
xor
rcrl
lret
jno
popa
cmp
inc
sbb
push
jp
dec
add
xchg
lds
repz
into
cli
incb
dec
and
pop
mov
pusha
or
sbb
mov
sahf
aam
fiaddl
push
push
dec
sub
inc
jne
or
das
imul
jecxz
jmp
hlt
ljmp
jno
popa
cmp
inc
sbb
push
jp
dec
add
stos
loope
rorl
mov
fidivl
popa
cmp
inc
sbb
push
jp
dec
add
stos
xor
cmp
or
aas
jae
icebp
test
into
jae
fidivrs
xor
jmp
sbbl
pop
aam
jo
jb
mov
inc
pop
dec
icebp
mov
icebp
and
nop
mov
pcmpeqb
adc
adc
mov
dec
pop
jbe
out
cmp
sub
fwait
sbb
scas
sub
mov
cmp
inc
jecxz
sbb
test
add
orl
adc
repnz
int3
ret
movsl
int3
push
loop
or
push
sub
outsl
pushf
and
xor
pop
add
xchg
aam
jnp
dec
mov
rcrb
inc
lahf
lcall
sbb
leave
sub
cs
and
sub
jmp
xor
aad
icebp
call
sbb
cmp
xorb
std
scas
fs
imul
dec
and
jo
xor
adc
je
stc
in
and
inc
mov
pushl
mov
cmpsl
mov
cwtl
xor
loopne
pop
mov
lret
insb
je
mov
jle
mov
pop
dec
das
mov
imul
cmc
sbb
scas
mov
loop
fadd
xchg
jno
fsubl
rclb
fldl
mov
gs
xorl
ss
add
data16
jno
push
aas
ljmp
insb
fwait
xor
inc
push
add
push
and
xor
scas
aam
test
pop
ja
rorb
or
or
pusha
scas
sub
mov
rcrl
in
aaa
pop
das
push
addl
jle
and
add
mov
xchg
popa
adc
xor
xor
out
dec
mov
leave
fcomp
popf
fbstp
push
pushf
into
repz
loopne
dec
sti
add
lcall
data16
mov
lods
mov
das
insl
xchg
outsl
push
or
cmpsb
mov
mov
add
mov
arpl
sar
fnstcw
push
sub
add
pop
ss
push
loop
sub
stos
mov
and
push
lahf
xchg
add
aad
mov
xor
ljmp
loopne
xor
xchg
icebp
insl
push
sbb
call
fs
dec
popa
sub
mov
lret
fmuls
lea
or
mov
ljmp
xchg
ljmp
cmpsl
ja
cmpsl
imul
dec
pop
fst
or
into
inc
pop
test
and
cs
xor
popa
mov
jo
shlb
test
dec
int
test
test
dec
pop
cmp
jb
pop
repz
out
and
loope
cs
leave
shll
or
stos
ret
outsl
mov
fldlg2
mov
xchg
ja
adc
mov
xchg
lret
inc
cmpsb
arpl
mov
out
test
dec
sub
fsubl
push
or
or
test
nop
call
ret
dec
jge
andl
jp
sahf
or
push
repz
mov
gs
dec
rcrl
xlat
sbb
lock
ds
push
cmpsb
add
nop
pop
rclb
je
push
adc
or
sahf
cmp
daa
cmc
push
movsl
and
sarb
lret
js
or
je
in
imul
add
add
stos
inc
xor
es
and
mov
imul
into
dec
hlt
insl
hlt
fnstenv
imul
and
mov
shl
xlat
repz
sub
int3
aas
cmp
dec
pop
into
jmp
or
jb
jne
push
popf
movsl
inc
add
push
pop
sub
push
aaa
xor
mov
insl
sub
loopne
addb
pop
mov
std
sub
ljmp
mov
orb
shl
jo
adc
pop
call
stos
jle
mov
fdivrs
iret
mov
and
stos
mov
dec
xor
outsl
rcll
sbb
dec
lds
fsubrl
mov
cmp
cs
adc
jle
xorb
push
mov
out
idivb
mov
xchg
out
jp
mov
cltd
jne
jno
cmpsb
loop
outsb
pop
mov
pop
inc
xchg
mov
and
pushf
mov
cmp
out
sbb
xlat
aam
inc
xchg
and
lds
ja
mov
insb
mov
std
mov
fld
rolb
cs
jne
out
stos
and
pushf
iret
imul
xchg
lds
xor
push
ficomps
push
lock
shl
mov
stos
xchg
mov
les
sbb
movsb
icebp
mov
xor
sbb
mov
and
pop
ret
mov
or
daa
movsl
mov
adc
xor
mov
jmp
mov
outsb
cmp
cmp
sub
aaa
pop
add
or
cmp
loope
pop
jmp
and
inc
adc
scas
inc
out
inc
insl
add
jo
and
inc
cld
js
dec
sbbb
inc
push
in
jb
jno
pop
pusha
lcall
scas
pop
mov
std
lods
hlt
inc
lock
mov
cwtl
out
inc
cs
ss
dec
and
mov
cmp
rclb
gs
cmp
cli
mov
mov
mov
sub
cmc
mov
icebp
mov
jo
cltd
sahf
out
push
sbb
leave
das
push
clc
ret
test
dec
mov
data16
sbb
arpl
or
and
ss
xchg
fbld
xor
mov
or
clc
and
fs
mov
cmc
lret
mov
pop
call
pop
out
fdivrl
jae
nop
aam
sarl
roll
mov
adc
rclb
xchg
sbb
cmc
xchg
xor
sub
test
cmpsb
es
sub
scas
daa
lret
xchg
stos
push
inc
lahf
fs
loop
lods
push
dec
jbe,pt
inc
or
inc
push
fdivr
sub
mov
in
pusha
cmp
adc
push
xchg
addr16
jae
jp
scas
push
jl
jnp
pushl
mov
xor
push
fldl
add
cli
pop
lds
and
shrb
ss
sbb
popfw
ret
mov
jmp
add
add
int3
xor
lret
nop
add
inc
shll
xchg
lret
enter
push
test
fisttpl
lret
js
loopne
dec
lcall
jnp
or
sbb
lret
hlt
inc
pop
frstor
popf
pop
shlb
or
in
xor
mov
xor
int3
ffree
popf
stc
mov
mov
hlt
scas
aaa
fdivr
pop
ret
imul
call
scas
jb
and
popf
cltd
ja
and
call
mov
pop
ss
sahf
lahf
lea
pushf
or
loop
ds
sub
jbe
arpl
cmp
mov
cli
add
fadds
xchg
cmc
movsb
adc
dec
mov
and
imul
cmp
ljmp
cmp
xor
xlat
pop
push
lahf
sbb
jbe
lea
xchg
call
sbb
leave
loopne
addr16
jge
into
mov
fisttpl
in
les
in
adc
fisttpll
push
in
xchg
mov
lds
out
jno
mov
lcall
mov
lret
insb
cmc
mov
outsl
pop
push
mov
dec
jno
pop
adc
pop
xor
outsl
jp
jle
xchg
pop
rcpps
sub
dec
mov
test
data16
shll
inc
loope
nop
mov
nop
pop
or
push
mov
subl
sub
into
movsl
daa
neg
jo
ds
bound
sub
shlb
in
adc
dec
jecxz
sti
jge
rcrl
repnz
psrad
sbb
inc
gs
push
int
das
jo
inc
leave
or
dec
cmp
add
add
sbb
inc
gs
fwait
bound
xchg
lcall
fwait
adc
sbb
call
in
sti
pop
clc
sub
dec
ret
or
or
inc
push
jb
add
xor
dec
cli
xchg
mov
jg
pop
mov
test
in
int3
cmc
ud1
out
ja
jle
push
sarb
dec
dec
ss
push
in
push
outsl
lahf
mov
mov
int
pusha
imul
pusha
cli
adc
popa
push
push
in
aam
jp
mov
xor
stos
pop
push
insb
push
adc
or
pop
mov
add
mov
inc
pop
sbb
adc
jbe
loopne
xchg
mov
insl
mov
push
das
cld
mov
sti
test
addr16
mov
sbbl
mov
mov
cmc
mov
sbb
aam
push
cmpl
adc
aad
mov
out
inc
pusha
jecxz
and
bound
mov
ret
jnp
push
or
mov
subl
pop
ja
ljmp
push
sti
notb
cmp
jle
lds
mov
lret
or
jae
jmp
and
stc
stos
data16
mov
scas
sahf
jecxz
mov
mov
cwtl
je
cmp
pop
lock
sub
pushf
pop
and
shll
xchg
in
aad
xchg
cmc
xchg
pop
ror
push
mov
jnp
outsl
dec
dec
jns
pop
sahf
aad
dec
mov
inc
aad
pusha
pop
jns
movsb
xchg
add
ficomps
inc
dec
sub
mov
and
test
ret
je
out
repz
jg
xor
push
incb
pushf
jg
je
adc
lods
test
leave
ss
iret
aad
dec
pushf
xor
push
int
stos
xor
aaa
sbb
nop
ret
xor
mov
mov
inc
pop
ffree
xchg
ljmp
jns
and
jge
lcall
xchg
add
dec
adc
jb
xchg
mov
rcl
das
and
inc
xchg
gs
popa
insl
je
and
stc
sbb
xor
ja
pop
cmc
enter
inc
and
aas
xchg
push
cmp
enter
mov
call
mov
loopne
ljmp
adc
or
not
dec
lret
aaa
push
orl
stc
mov
enter
aad
popf
push
mov
jo
cmpsb
pop
jae
xchg
arpl
pop
lea
sbb
lcall
dec
mov
insl
mov
sbb
mov
mov
movl
cwtl
adc
ds
jnp
fsubrl
pushf
and
dec
jnp
lock
iret
mov
int
inc
pusha
lahf
fisubl
fidivrs
adc
mov
push
sub
or
xor
pusha
movsb
mov
cld
or
popf
mov
sbb
test
jne
cmp
inc
inc
xchg
mov
outsl
add
mov
cmp
jecxz
js
aam
out
push
mov
mov
mov
dec
adc
dec
xor
push
inc
aaa
daa
shrl
subl
imull
sub
cmc
push
cmp
stos
cmpl
adc
stos
ljmp
inc
cmp
int3
gs
rorb
lea
cld
xchg
test
push
dec
imul
je
jns
lock
outsl
and
outsl
xor
cs
add
jg
cmp
in
add
jo
lret
pop
lret
fwait
dec
xor
xlat
xchg
jne
sbb
push
notb
mov
shll
enter
mul
sti
shr
inc
lods
mov
cmp
sbb
add
mov
stc
sub
nop
out
jne
xchg
push
adc
lret
lea
mov
lcall
les
sub
mov
cmp
dec
push
aad
lods
sub
out
lahf
addr16
xchg
xlat
enter
in
imul
mov
lret
and
pop
outsl
mov
gs
cmp
push
mov
xor
lock
or
pop
dec
cli
push
mov
imull
lahf
aas
mov
ss
inc
call
push
aas
dec
push
sub
push
push
pop
xchg
mov
imul
stc
sub
in
stos
sbb
and
dec
sbb
pop
arpl
jne
sub
push
adc
shl
adc
test
jno
or
mov
in
cmp
sub
insb
stos
dec
fs
jmp
mov
push
imul
and
add
mov
lahf
lock
stos
adc
rcrb
ds
add
sbb
fadds
pushf
dec
or
jle
mov
lahf
mov
mov
das
or
mov
cwtl
call
nop
jle
cltd
bound
sbb
out
add
daa
adc
mov
cmp
sbb
dec
pop
inc
add
mov
push
adc
dec
loope
mov
xchg
and
icebp
aaa
test
pop
clc
mov
addl
test
lret
jg
faddl
aaa
push
sub
imul
std
rcrl
adc
dec
rolb
test
cmp
dec
in
mov
mov
inc
cmpsl
sbb
movl
mov
mov
xor
dec
stos
xchg
or
inc
mov
mov
mov
mov
dec
shrl
cmp
into
sbb
lahf
aam
and
jae
push
xchg
or
test
sbb
sbb
mov
int
and
cmp
mov
lock
nop
lcall
sbb
pushf
aas
push
xchg
sub
inc
push
sbb
inc
dec
nop
insb
fcoml
lock
loope
pusha
jbe
and
frstor
mov
lods
mov
aaa
add
sbb
repz
ljmp
jo
sub
jb
xor
test
mov
insl
jle
jb
mov
dec
data16
push
add
jo
and
aam
dec
xchg
xor
dec
lea
mov
fdivrl
adc
jecxz
fwait
jb
xchg
cmc
aam
fdivs
sahf
inc
push
adcb
mov
movsb
test
adc
aam
xor
mov
mov
inc
inc
adcb
stos
int
movb
jns
aaa
cltd
mov
sbb
xchg
mov
pop
cmp
cltd
popw
pop
pop
xchg
fmulp
mov
repnz
mov
loopne
xor
scas
jae
cmc
cltd
js
pop
repz
and
pop
jne
test
aaa
push
pop
int
insl
jp
dec
ja
repnz
in
fwait
push
stc
mov
fs
fadds
negb
cmp
dec
bound
sbb
out
cmp
dec
sub
sbb
dec
stos
in
popa
xchg
ljmp
out
icebp
add
push
into
jno
outsb
out
and
aam
adc
add
dec
out
icebp
pop
sub
cmpsb
cmp
shlb
js
ljmp
in
xor
cs
xor
mov
aaa
or
adc
cmp
mov
jne
into
js
arpl
shlb
insl
adc
sub
add
hlt
and
dec
xchg
ss
lods
insl
jmp
push
cmc
mov
xor
sbb
fdivp
xchg
xor
cwtl
out
outsl
sar
insb
in
dec
jecxz
nop
and
sub
mov
fs
pop
xor
movsl
lret
lods
fwait
sbb
outsb
dec
xchg
lahf
jb
aad
shll
ss
push
add
insb
xlat
lcall
adc
incl
xlat
repz
cli
mov
xor
cvttps2pi
push
fadds
test
sub
mov
aaa
lahf
dec
add
int
xchg
pop
fwait
dec
out
sti
lret
lods
into
adcb
push
out
call
int
sub
rolb
popl
aam
xor
and
mov
sbb
adc
cmpsl
add
adc
sub
mov
or
sub
sub
mov
xchg
test
add
cld
pop
dec
push
shll
ficompl
out
jl
cmp
mov
lahf
push
bound
fnstcw
dec
sub
rolb
mov
pop
xchg
cmp
mov
push
pop
out
test
pop
leave
idivb
shll
ds
clc
mov
shl
cmpsl
inc
and
and
dec
cmp
xchg
imul
mov
data16
insl
inc
mov
lret
mov
xchg
popf
outsb
jb
pop
jp
iret
jmp
and
xchg
icebp
les
mov
sbb
test
ret
ds
mov
aam
jg
repnz
sbb
stc
pop
jecxz
sub
adc
jle
in
int
lods
pop
int
jb
jl
push
cmpsl
fistps
out
add
popf
ss
push
mov
jo
inc
enter
lock
xchg
cmp
jns
test
dec
xchg
int3
and
jecxz
leave
ljmp
mov
xchg
xchg
out
mov
sahf
ret
nop
addr16
or
fidivs
jno
out
mov
mov
mov
lds
inc
mov
cmp
cltd
dec
into
cli
inc
or
add
add
gs
stos
xor
int3
xor
imul
jns
pop
mov
lret
arpl
repz
outsl
push
fidivrs
mov
loop
jge
sub
lds
sbb
ret
or
ja
adc
fldcw
inc
sub
adc
jecxz
pop
in
cld
jl
ret
daa
sbbb
insl
pushw
cmp
lods
fildl
xor
xchg
xor
jg
mov
pop
scas
lds
push
out
sbb
ret
movb
dec
aad
sbb
ja
cltd
jecxz
addr16
scas
xchg
mov
mov
push
dec
mov
jle
stc
push
stc
inc
test
or
mov
into
imul
pop
pop
outsl
sbb
popf
mov
iret
shrl
add
cmp
jno
jne
push
test
sub
mov
xchg
rcl
mov
imul
loope
in
push
cmpsl
mov
stos
pop
cmp
jo
por
pusha
rcrl
jbe
jae
and
mov
xor
cmp
or
shrb
xchg
pop
dec
jbe
ja
test
cltd
mov
aad
dec
ds
adc
mov
cmp
shlb
and
movsb
stos
or
leave
push
add
lcall
inc
mov
push
les
xor
ret
and
lcall
iret
std
xchg
sar
fldenv
pusha
mov
mov
subl
xor
mov
movsl
aam
or
das
cmpsb
arpl
mov
mov
lods
mov
aam
jmp
inc
sbb
mov
inc
das
jno
jnp
shll
or
negb
xor
in
dec
out
or
push
punpckhbw
sub
cli
je
jbe
lcall
nop
cld
push
sbb
popa
jnp
adc
pop
push
fnstcw
ds
xchg
jmp
adc
and
lret
cmpsb
in
stos
les
out
in
push
nop
cmpsb
js
in
int
sub
dec
aas
sbb
adc
inc
inc
mov
push
pop
imul
mov
mov
cmp
nop
mov
jnp
popf
inc
push
xchg
xlat
adc
or
ljmp
mov
pop
sbb
add
test
add
js
dec
bound
xchg
ret
test
mov
fwait
mov
sbb
sub
sub
adc
inc
cmc
dec
lahf
ja
out
jge
outsl
test
pop
arpl
fmull
jp
aam
xchg
mov
nop
mov
inc
push
pop
xchg
stos
cmpsb
jmp
mov
push
inc
std
cmp
mov
out
stos
sbb
cld
inc
jns
inc
ja
mov
cmp
fwait
or
add
xchg
push
inc
shr
pop
inc
jns
sub
clc
and
aad
lahf
jl
ret
scas
inc
xchg
popa
shl
sbb
cmp
add
jle
cmc
xchg
hlt
xlat
jl
push
arpl
and
in
mov
or
xchg
push
adcl
jbe
xor
xchg
dec
xchg
icebp
cwtl
add
int3
fcompl
push
xchg
cmpsb
lods
xchg
aad
mov
jns,pn
je
filds
ret
push
clc
sbb
int3
fimuls
cmc
mov
mov
dec
lahf
jne
mov
or
push
and
add
inc
xchg
icebp
cmpsl
ficoml
jo
or
jno
ss
or
push
xor
mov
inc
sbb
mov
scas
cmp
clc
iret
adc
repnz
sbb
mov
or
dec
push
cli
xor
lahf
push
cli
into
ret
les
insb
add
xchg
adc
mov
pop
and
fdivrl
out
test
add
sbb
js
sub
cmp
std
call
jle
dec
aas
ret
out
shlb
aad
negl
cmpl
xor
or
mov
ret
inc
lahf
nop
mov
add
jp
aad
rcrb
insb
xlat
mov
mov
insl
add
test
fidivrl
shrb
and
sub
dec
mov
mov
inc
in
jecxz
xor
sbb
push
add
adc
dec
insb
add
sbb
out
mov
lcall
sbb
push
or
xor
jp
dec
add
stos
loope
rorl
mov
fidivl
popa
cmp
inc
sbb
push
jp
dec
add
stos
loope
rorl
rcrl
lret
jo
popa
cmp
inc
sbb
push
jp
dec
add
stos
loope
rorl
mov
fimull
or
inc
loop
test
mov
movsl
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
pop
cmc
dec
mov
adc
dec
movsl
fidivs
out
inc
sahf
xor
int3
mov
icebp
dec
loope
shrl
push
mov
mov
fidivs
popa
mov
inc
sahf
pop
mov
mov
push
dec
daa
jle
outsb
mov
orl
mov
jno
inc
lea
shlb
in
inc
lock
gs
mov
mov
pop
mov
aad
sbb
adc
adc
sub
aad
repnz
movsb
mov
xor
mov
popf
jae
imul
and
jle
lcall
mov
out
inc
pop
pop
pop
inc
popa
rcr
jo
jno
push
test
fcmovnb
outsb
sbb
dec
loope
aad
rcrl
push
xchg
rclb
fdivp
fiadds
pusha
and
lods
mov
daa
cmp
sub
movsl
addb
into
push
xor
out
mov
mov
pop
mov
inc
mov
push
cmp
push
shl
orb
stos
sub
std
imul
dec
sarl
rcrl
push
mov
fidivs
leave
push
out
jge
or
scas
xor
icebp
daa
mov
mov
inc
int3
pop
in
lahf
xor
adc
jbe
dec
cli
gs
push
mov
mov
adc
adc
add
and
je
jb
subb
pop
mov
push
mov
fidivs
popa
push
out
inc
sahf
xor
add
dec
loope
shrl
push
mov
mov
fidivs
popa
push
out
inc
sahf
xor
add
jmp
lds
inc
add
lock
lds
clc
fcompp
xor
jmp
xchg
aam
shlb
testl
in
mov
lock
stos
insl
out
pusha
cmpsb
push
add
add
clc
xchg
sbb
lahf
lret
sahf
out
test
sbb
mov
pop
sub
adc
test
imul
pop
subl
dec
mov
pop
xchg
nop
cli
dec
popa
lcall
push
stos
in
int
test
cmp
mov
jo
les
xchg
mov
dec
dec
addb
lcall
subl
leave
add
lods
aam
cmpsb
inc
mov
rclb
push
addb
sbb
jecxz
inc
add
and
insb
fs
ljmp
mov
in
jns
pop
xchg
fwait
xor
data16
sub
cwtl
cmp
pop
aas
cli
test
and
mov
addr16
dec
sbbb
jl
fistpll
out
push
in
out
data16
cld
fldenv
mov
add
mov
cmp
repz
or
out
je
push
cmp
dec
sbb
jl
inc
adc
outsb
ficoms
xorl
pop
push
imul
daa
imul
sbb
xor
in
test
pusha
test
pop
mov
aas
sbb
mov
cmp
add
sbb
lret
clc
xchg
daa
mov
lret
insb
dec
and
mov
lret
xor
ss
dec
pushf
add
xor
or
test
sahf
xchg
stc
mov
ja
sub
imul
mov
jp
js
out
and
in
fnstcw
jo
in
pop
add
fs
enter
loopew
xchg
or
lret
enter
push
or
inc
into
addr16
sbb
test
stc
or
mov
cwtl
cs
xor
pop
jae
xor
test
outsb
jnp
shll
mov
fimuls
leave
icebp
movsb
mov
mov
cmp
cmp
dec
sub
mov
pop
add
je
insb
pop
pop
aas
push
and
insb
loope
add
dec
xchg
jno
sti
mov
add
fisttpll
movsl
mov
add
sbb
and
stos
sub
imul
xchg
scas
mov
or
add
lods
scas
call
jo
bound
sbb
je
cli
enter
and
xchg
mov
arpl
lods
jo
sbb
or
lods
aad
dec
push
in
mov
sub
mov
inc
sbb
xor
push
ret
test
lcall
xchg
in
ds
pop
filds
adcl
rorl
cwtl
or
nop
stos
jns
vmptrld
loopne
roll
mov
pop
xchg
jnp
pop
jb
mov
enter
inc
jbe
mov
push
gs
xlat
mov
outsb
clc
inc
push
call
mov
adc
adc
test
sbb
mov
in
icebp
mov
cmp
jne
fldcw
leave
sub
sub
push
xchg
and
call
es
push
ljmp
js
cmpsb
xchg
fld
pop
push
jg
insb
sarb
int3
xor
imul
insl
cmpsb
xchg
ret
ss
push
je
iret
addr16
jnp
call
cmpsl
je
sbb
dec
mov
cmp
push
and
add
ljmp
stos
jo
enter
adc
push
dec
sub
out
fwait
mov
push
mov
scas
ret
push
push
dec
mov
or
push
mov
mov
dec
dec
dec
push
test
out
dec
sahf
jo
push
jge
sbb
jb
shll
cld
mov
push
mov
out
sbb
fcoml
jge
xchg
xchg
and
dec
and
pop
inc
test
sbb
fwait
gs
cmp
dec
xor
scas
xchg
pop
xchg
enter
add
in
mov
mov
outsb
jmp
jb
inc
cmp
pop
mov
pop
adcb
bound
sub
rcr
or
and
push
lcall
inc
movsl
cmp
sub
mov
lods
xchg
mov
sar
movsl
lds
mov
mov
cli
jge
cli
mov
or
daa
enter
or
in
xchg
fsub
loope
push
pop
cmpsb
mov
scas
movsb
pop
mov
pop
cmp
lods
lock
and
and
xchg
mov
lret
pop
fiaddl
xchg
dec
mov
add
pop
adc
lods
ret
out
sub
jae
rorl
dec
call
xchg
pop
in
in
shr
pop
mov
push
pop
cmp
dec
incb
sub
sub
dec
test
xchg
dec
mov
or
and
loop,pt
outsb
test
xor
and
mov
arpl
mov
insl
outsl
push
mov
mov
jae
test
push
mov
movsb
shll
insl
mov
inc
xor
aam
pop
pop
dec
lret
mov
inc
and
inc
addr16
testb
pop
out
pushf
insl
add
mov
add
ficoml
lcall
adc
insb
and
enter
vpmadcsswd
cli
fdivrl
mov
fcompl
xchg
pop
inc
mov
and
popa
adcb
sub
pmulhuw
jp
xor
inc
iret
enter
repnz
cli
sbb
ret
mov
insl
enter
add
mov
add
inc
xor
cmp
mov
push
pop
dec
push
add
incl
adc
fisttpll
gs
pop
fcmovnu
jns
push
imul
mov
xchg
cmp
cli
pop
flds
cld
pop
inc
xchg
mov
cmpsb
xchg
push
inc
inc
notb
xor
pushf
lret
aas
shlb
imul
dec
dec
xchg
test
lret
repnz
cmp
loope
in
dec
pop
adc
add
mov
xchg
fidivl
aas
mov
push
daa
aaa
dec
xor
neg
cmp
and
arpl
imul
dec
bound
adc
jl
mov
jo
loope
cmp
inc
cmp
dec
popa
cmc
push
je
add
mov
gs
pop
cmp
mov
mov
repnz
and
xor
daa
cs
pop
and
in
xlat
cmp
movsb
mov
mulb
bound
out
mov
int3
cmp
hlt
cmpl
stos
mov
imul
sbb
rclb
ja
lods
adc
incl
sar
cltd
ficomps
and
jg,pn
cld
mov
call
in
int
call
cmpsb
dec
bswap
sbb
mov
mov
scas
test
cmpsb
dec
dec
and
call
std
mov
mov
mov
subl
shlb
and
pop
data16
in
cltd
push
cs
cmp
movsl
aas
out
jns
fstl
cmp
add
loop
fcompl
aas
cmp
cld
pop
popa
mov
and
icebp
or
jl
sbb
rcl
inc
mov
sub
out
lret
dec
xorl
jne
adc
adc
xor
ds
pop
inc
ret
mov
add
das
sub
mov
leave
dec
int3
aas
into
fdivp
jmp
test
in
aas
jle
sti
hlt
ljmp
lret
jbe
idivl
jg
aas
cld
insl
mov
out
icebp
inc
ljmp
add
imul
test
ffreep
sbb
inc
adc
add
insb
rolb
mov
sub
cs
fsub
icebp
push
jbe
mov
test
jb
mov
lea
adc
push
das
dec
sub
jl
lods
clc
jg
jle
cmpsb
dec
and
out
sbb
fucomi
jb
sub
xor
sahf
pop
sbb
sahf
mov
xchg
in
mov
cmpsb
mov
xor
jle
or
pushl
push
call
cmp
inc
repz
in
ret
and
ljmp
ljmp
sti
push
mov
pslld
sbb
clc
mov
xor
aam
jmp
add
adc
push
outsb
mov
jno
sarl
inc
lods
sbb
jno
rolb
xor
cmp
pushf
dec
sub
in
mov
xchg
repz
jmp
inc
dec
loop
pop
loopne
or
or
xlat
push
dec
lock
fs
cli
fcomi
mov
scas
mov
add
jle
fildl
and
rclb
stos
push
mov
sub
decb
popa
in
shlb
rcl
aam
inc
sbb
cmp
ror
cmpsl
aam
les
fs
mov
ds
add
pusha
xchg
out
ss
adc
fnsave
xchg
sub
and
or
bound
push
ja
mov
xor
imul
mov
out
rorl
jns
push
ss
loopne
orl
dec
or
or
jl
adc
and
lret
jp
repnz
inc
jp
mov
fwait
add
mov
jg
imul
rcr
add
fnstcw
xor
cwtl
scas
mov
xlat
xor
mov
or
jl
push
adc
cmp
insb
jge
push
adc
movl
push
aaa
xchg
xchg
inc
das
mov
out
and
xchg
insb
sub
pop
cmp
rcrb
cmp
sti
arpl
lods
stos
push
std
mov
or
xor
in
mov
scas
out
inc
fcoms
incl
adc
dec
in
cmp
pop
and
mov
push
mov
fwait
jp
cld
mov
popf
inc
outsb
pop
xlat
cwtl
pop
or
rcrb
jg
lret
jg
push
rcll
cmp
gs
fdiv
test
outsb
mov
add
mov
sbb
mov
scas
add
jne
push
mov
add
jp
or
outsl
sbb
push
mov
cmpsl
mov
inc
mov
fcmovnbe
daa
aam
dec
ljmp
jecxz,pt
mov
mov
mov
addr16
jecxz
in
call
inc
stos
mov
lret
popa
inc
jb
jl
inc
mov
xchg
xchg
jnp
or
and
push
add
lret
mov
outsl
inc
or
hlt
call
sbb
ja
pop
fmuls
div
cld
push
mov
test
movl
lds
sub
les
fisubl
push
outsl
inc
addl
fldcw
or
jl
adc
sub
mov
pop
and
sbb
fs
aam
stos
fists
test
test
cmpsb
pop
outsb
jp
adc
shl
aam
mov
shr
ss
aad
ret
or
adc
nop
dec
in
inc
ss
inc
cltd
inc
ret
push
pop
outsl
mov
in
iret
cs
int
out
jae
cmp
int
xlat
jno
stos
mov
into
push
mov
sub
into
xorb
and
mov
sbb
or
rorl
out
or
movsb
test
lahf
rclb
or
clc
movsl
sbb
popf
call
mov
adc
mov
daa
shlb
test
push
sub
test
orl
daa
add
sar
mov
pop
inc
rorl
aaa
xchg
jmp
mov
loop
clc
outsb
mov
adcb
cmp
pop
lods
push
in
jb
shrl
adc
sub
jnp
cmpsl
ret
push
fdivl
pop
sbb
hlt
stc
xchg
jne
and
stc
mov
fldcw
jle
test
test
lahf
inc
jge
xchg
push
dec
mov
sti
leave
nop
mov
push
test
in
movsl
add
jns
xchg
outsl
pop
push
dec
test
sbb
stos
sbb
bound
jmp
out
sbb
fcoml
pusha
dec
fldl
addl
jb
xchg
in
mov
call
jnp
das
sbb
jns
pop
inc
cmp
enter
mov
jg
jns
inc
xchg
lcall
shll
push
xor
fwait
xchg
popl
lods
cs
jge
lock
jno
mov
sub
ret
xchg
pop
scas
push
mov
popa
shlb
call
sbb
mov
adc
inc
sahf
iret
ljmp
adc
fwait
cli
or
mov
mov
pop
sarl
sbb
and
push
push
push
sub
adc
mov
push
mov
add
push
mov
xor
xchg
dec
add
cmp
push
ss
js
mov
aaa
mov
sub
inc
xchg
test
pop
enter
ja
xor
mov
outsb
push
xor
push
jl
bound
jne
cmp
out
iret
add
xor
push
adc
test
jo
push
scas
pop
adc
dec
lods
jae
aad
mov
xchg
or
pusha
push
adc
aaa
popf
xchg
out
jl
bound
sbb
inc
stos
pop
jbe
dec
sahf
ss
cmp
sbb
loopne
and
push
fwait
testl
pop
lds
sbb
hlt
das
cwtl
push
fistpl
test
push
adc
mov
push
orl
lock
cmp
xchg
idivl
cmp
movsl
iret
scas
les
push
mov
mov
inc
fwait
in
mov
imul
add
or
mov
dec
shrb
push
mov
loop
xor
movsl
cmp
pop
xchg
mov
lds
insw
mov
mov
mov
mov
stos
pushf
sub
es
cmp
aas
popa
inc
jno
adc
test
push
test
incb
mov
mov
push
dec
mov
aad
or
pop
xchg
xor
out
repnz
cmp
inc
lds
adc
cld
dec
fsubrs
jl
insl
push
push
daa
icebp
aaa
mov
mov
in
test
jb
sub
fadds
sub
mov
movsb
sbb
cmc
pop
popa
mov
hlt
mov
pushf
pop
push
es
mov
mov
ret
ljmp
add
and
lcall
orl
into
test
testl
aas
stos
push
subb
sbb
mov
sarl
lret
nop
popa
adc
lret
cmp
out
ror
sarl
mov
xchg
lahf
mov
add
cmpsl
inc
ljmp
cmc
or
adcl
data16
lods
repnz
dec
sbb
mov
stos
inc
les
popa
stc
adc
sbb
push
mov
xor
sub
pop
dec
mov
std
pop
push
dec
lods
aad
jns
out
xchg
repnz
gs
xchg
jge
adc
inc
or
mov
data16
ret
clc
stc
sbb
cltd
stc
jmp
cmpsl
shrb
jl
popf
and
xchg
xchg
lods
mov
cmpb
mov
and
aaa
rclb
push
ret
xchg
xlat
or
jnp
jns
xchg
repz
cmp
inc
xchg
xlat
push
or
sbb
sub
sub
pop
mov
mov
nop
inc
and
mov
outsl
xchg
gs
sarl
lea
xchg
cmp
pop
cmp
aaa
sahf
shll
clc
loopne
divb
repnz
divl
rcrl
mov
popa
push
popa
lret
jge
sub
mov
cmp
rcr
scas
ljmp
aam
mov
jp
inc
cmp
pop
rcrl
das
xorb
cmp
rcr
pop
mov
xchg
xor
in
test
push
mov
subb
adc
cmp
inc
fwait
cmp
dec
scas
dec
add
in
add
or
pusha
cmp
bnd
popf
call
jbe
sarl
shl
push
push
shlb
lret
lock
leave
cmp
pusha
sbb
loope
dec
mov
xor
pop
sbb
cltd
mov
aaa
and
jno
or
xchg
ret
cmpsl
mov
mov
mulb
dec
shrb
push
cmp
pop
pusha
adc
inc
cmp
mov
pop
test
cli
push
xor
inc
test
pop
cmp
adc
inc
sbb
loop
mov
pop
or
sub
test
sbb
sub
call
loop
jns
sti
add
ja
in
cmp
inc
sbb
shrb
xchg
push
mov
push
and
sbb
mov
testb
dec
add
mov
in
popa
test
mov
mov
xor
pop
rcrb
mov
out
jmp
jmp
lahf
inc
mov
push
or
xor
scas
pushf
inc
push
jbe
ljmp
decb
pop
nop
sub
shll
pop
icebp
cmp
inc
leave
fs
fldl
ret
andb
xchg
fdivrl
push
inc
xchg
insb
sbb
jne
ds
jo
adc
push
out
jge
cmp
mov
add
and
mov
addr16
loope
jg
mov
mov
imul
call
mov
sti
inc
mov
jo
repnz
cmc
xor
cmp
mov
repz
addr16
pop
hlt
mov
jns
mov
bound
jo
fisttpll
loope
into
ds
adc
repz
inc
mov
adc
jnp
mov
mov
aam
adc
xor
int3
cmpl
fmull
pop
and
ds
mov
not
fcmove
sub
fnstcw
sbb
cmpsl
fimuls
cmpsl
adc
test
stos
cli
or
mov
adc
jmp
mov
jp
push
mov
adc
test
popf
cs
iret
inc
loope
iret
adc
popl
inc
xor
mov
sub
stc
jge
adc
lcall
ljmp
testl
lahf
stos
cltd
pop
lret
andl
lret
rcrb
sub
mov
cs
sti
out
call
ljmp
test
dec
fwait
rcrl
add
ljmp
sub
mov
mov
sbb
test
decl
xchg
sti
mov
ret
jge
movsl
out
cmc
dec
cltd
pop
dec
jp
xor
pushf
dec
in
xor
lods
fmuls
and
les
andl
cmc
sub
movsl
jno
xchg
xor
xchg
cld
sub
sub
sbb
dec
xchg
cmpb
mov
xor
sub
mov
cmp
iret
dec
dec
repnz
dec
adc
mov
ss
cmp
flds
les
sbb
xchg
arpl
sub
data16
mov
pop
adc
imul
adc
loopne
test
adc
push
mov
mov
adc
cmpsb
push
mov
add
push
sub
not
in
movsl
sub
stc
incl
aaa
cmpsb
fisttps
xchg
jns
int3
xor
mov
pop
pop
mov
sub
jnp
cmpsl
inc
adc
loop
out
adcl
enter
test
adc
jbe
cmp
xor
jns
push
lret
cwtl
lods
add
iret
test
and
adc
sbb
xor
ds
dec
dec
adc
and
fmulp
insl
sahf
scas
fadd
loopne
lods
std
pmulhw
das
mov
jno
in
inc
negb
cpuid
ret
xor
adc
push
movsb
cmpsb
xchg
sbb
bound
lods
add
pop
and
or
inc
sub
mov
jb
inc
jne
mov
jmp
jmp
gs
int
adc
flds
mov
fistl
or
or
pop
sti
std
je
enter
mov
push
mov
scas
int
dec
adc
push
sbb
lods
rclb
sub
aad
mov
jmp
xor
adc
mov
add
gs
cmp
lock
fstps
or
std
cmp
push
cmpsl
lock
out
aaa
icebp
mov
and
mov
push
rorl
jb
adc
sub
cmp
mov
push
or
orl
xchg
movsb
cltd
ja
pop
xchg
rcl
les
fs
in
lods
psubw
rolb
mov
mov
enter
or
pop
push
daa
icebp
xchg
dec
mov
mov
mov
push
add
pop
mov
mov
fsub
movsl
in
add
xchg
mov
adc
inc
out
add
pop
cmc
enter
and
dec
cmp
mov
fs
in
aad
loopne
sarl
xor
sahf
fildll
mov
inc
movsb
add
or
pop
mov
dec
pusha
aad
and
mov
stos
test
sbb
push
cmp
mov
or
jecxz
fisttpl
pop
xchg
aaa
cli
aad
lret
paddusb
bound
in
push
lret
xor
jg
out
cmpsl
pop
push
popa
mov
mov
pinsrw
mov
inc
mov
xchg
data16
push
call
ljmp
scas
movsl
push
xchg
dec
pop
bound
mov
fstl
test
test
rcl
rcrl
push
mov
fidivs
popa
push
out
inc
sahf
xor
add
dec
loope
shrl
push
mov
mov
fidivs
popa
push
out
inc
sahf
xor
add
dec
out
jle
outsb
lds
mov
lret
cs
push
out
dec
sahf
xor
scas
in
adc
outsb
sbbl
adc
inc
fimuls
out
ss
imul
in
inc
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
lahf
push
push
mov
inc
mov
jbe
cmp
pushf
aas
cmpsb
cs
dec
xlat
jg
outsl
negb
es
filds
push
jmp
adc
xchg
xchg
aas
cmpsl
das
mov
mov
outsl
negb
es
filds
push
jmp
jbe
xchg
pop
andb
or
jmp
mov
cld
inc
mov
jle
shrb
out
std
sbb
mov
xlat
push
add
jecxz
push
mov
add
adc
loop
mov
pop
shlb
sub
cmpsl
iret
push
xchg
mov
or
mov
xchg
aas
mov
xor
sbb
cmp
xor
push
jp
out
xchg
xchg
jp
imul
cld
xchg
pop
mulb
outsl
jmp
xchg
iret
mov
idivl
cmpl
mov
das
mov
bound
add
ds
in
out
decl
call
pmovmskb
xchg
out
or
push
mov
inc
iret
push
jmp
jbe
xchg
xchg
aas
cmpsb
das
mov
dec
jg
outsl
mov
push
sti
outsl
addr16
ja
add
add
imulb
aas
cmc
push
pop
mov
xchg
sbb
sub
fisubrl
push
filds
mov
in
shrl
pop
mov
sbb
rolb
dec
xchg
je
push
jmp
jbe
xchg
xchg
aas
cmpsb
das
mov
dec
jg
outsl
negb
es
filds
push
jmp
jbe
xchg
xchg
aas
cmpsb
das
mov
dec
jg
outsl
negb
dec
xor
mov
lahf
dec
xchg
in
mov
loope
imul
notl
sub
daa
push
fsubl
dec
fstl
sbb
xor
xchg
mov
and
imul
push
stos
inc
sub
dec
mov
xchg
movsb
lret
pop
popf
cwtl
testb
xchg
imul
mov
scas
stos
push
or
aam
rcrb
sbb
xchg
mov
call
pop
insb
imul
lcall
adc
es
jmp
mov
xchg
outsb
pop
repnz
shrb
pop
insb
pop
dec
in
cwtl
mov
jbe
xchg
inc
out
sub
sub
pop
push
repz
pop
dec
sbb
or
cmp
mov
xchg
push
cmpsl
add
ja
pop
iret
cli
aaa
push
popa
insl
ljmp
cmpsb
aad
std
cmp
mov
das
leave
jl
jnp
cmpsb
sbb
fs
jmp
icebp
inc
testl
mov
call
arpl
cmc
cmp
inc
hlt
xor
jle
into
daa
lahf
mov
add
push
fcomps
add
jo
fsts
stc
and
notb
lods
loope
mov
imul
je
mov
xchg
xchg
popf
xor
bnd
jns
jge
popa
jno
jae
pop
imul
popl
ss
cmp
adc
inc
jl
add
and
mov
mov
xor
sub
push
cmpb
mov
and
add
arpl
lret
ret
mov
sbb
sbb
inc
cli
mov
mov
rcrb
push
mov
mov
inc
in
xchg
xor
stc
call
xchg
jb
insb
mov
inc
fsubs
lods
cmpsl
and
push
daa
cs
movsl
adc
mov
scas
sahf
adcb
jns
xchg
add
inc
dec
or
push
push
lahf
in
and
sub
mov
in
es
push
mov
sub
jmp
mov
in
loopne
jl
xor
fsub
aas
mov
sbb
fbstp
or
pop
addr16
xor
mov
or
orb
mov
pop
lods
mov
sarl
or
xchg
out
add
mov
fiadds
out
cmp
sahf
out
inc
adc
or
xor
cmp
mul
jmp
test
pop
ffree
jnp
xchg
sbb
popf
lcall
pop
push
daa
inc
or
stc
fs
sti
enter
sub
mov
jb
mov
mov
fstps
cmp
mov
and
js
pop
push
mov
repz
andl
nop
cmpl
loop
je
das
push
pushf
xchg
out
aad
pop
mov
test
sbb
insl
xor
mov
fcoml
dec
sub
insb
test
sti
icebp
mov
push
sub
mov
push
outsl
jns
fmuls
and
pop
fisttpll
jecxz
iret
mov
lcall
stos
or
mov
es
dec
push
je
ret
lods
fs
cmp
lods
mov
mov
mov
popa
loope
test
repnz
aam
jge
add
mov
cmp
clc
decb
lret
out
xor
test
addr16
sub
cltd
jmp
iret
sbb
div
jnp
test
out
jge
dec
out
ret
test
sarb
je
scas
jle
fcos
shlb
aas
fwait
je
or
adc
dec
in
sbb
orl
fsts
cmp
jmp
cmpsl
cltd
mov
adc
sub
neg
or
mov
adc
jbe
int3
ficoml
mov
shrl
enter
lock
gs
jecxz
dec
rorl
or
jmp
out
cmp
pop
add
jmp
cmp
mov
lds
push
les
jne
pop
mov
sahf
sti
mov
and
mov
outsb
sub
xchg
dec
sub
xchg
push
mov
cmp
scas
sub
adc
xor
movsl
lret
setbe
and
xchg
mov
ja
out
in
imul
sbb
aas
mov
in
pop
dec
mov
stos
adc
ljmp
stc
xchg
pop
xor
and
daa
push
arpl
fsubl
imulb
shll
jb
pop
bound
sub
insl
aam
inc
movsb
sbb
outsl
out
clc
adc
scas
fisttps
addb
dec
icebp
sbb
jnp
jnp
hlt
xor
cmp
jmp
or
cmp
push
push
daa
cmpsl
or
push
inc
stos
ret
and
mov
pop
mov
xor
into
in
inc
in
mov
cltd
lretw
pop
fstps
pop
pop
clc
adc
mov
xor
sti
mov
mov
jo
je
out
sbb
mov
insl
cmpl
sub
scas
xlat
rol
pop
adc
dec
pop
fcompl
push
cmpl
jnp
and
cmp
xor
fsts
mov
and
mov
xor
inc
mov
ficompl
movsb
pop
sbb
push
adc
mov
fstpt
mov
pop
mov
dec
jb
inc
iret
fs
fsubrl
mov
add
adc
out
or
fs
cmp
scas
cmp
pop
inc
adc
cwtl
push
lcall
pop
shrl
mov
fisubrl
or
lret
xchg
sbb
add
pop
dec
xchg
jne
aaa
shrb
notl
jo
das
aad
mov
mov
cmp
mov
sub
mov
xchg
out
push
aaa
repz
or
sub
sub
arpl
fimull
in
repz
sbb
shrb
xchg
pop
mov
or
in
lods
or
inc
jge
and
pop
pop
je
xchg
jge
loope
cmp
push
and
cmpsl
mov
pop
and
mov
add
bound
cld
cmp
call
movsl
inc
int3
jp
and
jnp
movsb
adc
outsl
sar
pop
sbbb
decl
mov
dec
mov
lret
repnz
xchg
push
mov
push
iret
pop
xchg
add
inc
push
int3
iret
daa
jbe
popa
icebp
mov
lahf
push
stos
mov
repz
jl
dec
jmp
xchg
lahf
or
push
negl
stc
shlb
mov
cmp
push
adc
jns
xor
lds
sbb
fstps
push
push
imul
adc
xchg
das
mov
clc
dec
jp
xchg
or
xchg
hlt
cltd
sub
adc
jp
negl
push
add
push
lret
adc
cwtl
dec
mov
popa
ss
xlat
aaa
sub
fisubl
mov
or
lods
fldenv
loop
jo
scas
movsl
mov
sbb
mov
sbb
fsubrl
mov
mov
lahf
dec
scas
pop
imul
sbb
cmc
fbld
cmp
xchg
movsb
sti
mov
sbb
sbb
mov
cmp
sub
cmpsl
cmpsl
stos
pop
adc
pusha
scas
out
ficomps
popa
push
int
add
push
leave
pop
jno
loope
ja
sub
sbb
icebp
imul
ja
push
ret
push
lret
fidivrl
into
push
sub
daa
sub
pop
push
lret
jnp
mul
fistl
sub
popa
xchg
dec
idivb
mov
adc
clc
loopne
inc
stos
cmpsb
sbb
leave
iret
add
jo
mov
cmp
push
xchg
push
sti
outsb
pop
shll
scas
jmp
cli
aam
aas
shl
xchg
shr
or
mov
lcall
jo
inc
out
movl
pop
inc
xchg
inc
inc
add
subb
pop
out
out
or
das
shlb
sub
and
and
mov
xlat
add
aas
add
repnz
add
aam
jmp
scas
aas
imul
xlat
fldenv
ja
push
roll
mov
cld
xlat
mov
ret
fs
xchg
push
std
cld
mov
int3
sub
adc
sahf
cmp
mov
popa
fwait
js
icebp
sbb
rorb
fs
xor
adc
call
inc
sbb
clc
jp
imul
pop
fs
push
mov
cmp
lods
inc
jo
inc
push
outsb
mov
pusha
or
and
pop
lds
icebp
fisubrs
lods
inc
int3
lret
das
pop
adcl
scas
sub
int
incb
popa
adc
push
mov
scas
mov
das
iret
and
jno
mov
mov
sbb
jp
rcr
mov
mov
pop
sbb
pop
mov
rcl
mov
jns
push
inc
mov
jno
or
jp
or
imul
jl
mov
sub
adc
fmul
sbb
dec
lea
stos
xchg
imul
mov
xor
sub
int3
jne
pushf
lods
ja
dec
push
and
push
mov
lods
andl
xchg
test
push
jns
negl
dec
push
ficompl
and
daa
aaa
or
imul
dec
imul
and
xchg
fmull
cmp
lods
es
push
rcrl
lock
std
push
scas
jecxz
addr16
les
inc
or
stc
xchg
adc
cltd
mov
dec
test
adc
sarb
stos
xchg
int3
mov
jne
or
add
pusha
xchg
and
mov
fs
adc
test
pushf
cmc
iret
lock
jp
fcomi
adc
scas
outsb
ror
insb
inc
out
push
and
jge
and
push
sub
fsubs
fdivrl
and
add
inc
ds
inc
or
sbb
fistpll
ret
in
loopne
xchg
mov
das
repnz
adc
fs
sbbl
pop
adc
jecxz
push
lea
adc
test
xchg
pop
mov
aad
inc
mov
dec
mov
cmp
popf
add
icebp
pop
lea
std
cs
out
jg
cmp
fs
and
jp
in
mov
ss
outsl
xchg
cwtl
cwtl
fs
pusha
imul
dec
int
xor
repz
cmp
adc
fdivl
jo
in
packssdw
cmc
sahf
and
shrl
adc
jae
cltd
icebp
mov
mov
jmp
stos
mul
jge
int3
scas
rcr
lret
dec
aad
push
mov
cmp
jbe
xor
push
pop
test
sbb
cmp
mov
in
jge
xor
mov
iret
xchg
out
xchg
test
sub
filds
shld
mov
movsb
pop
jnp
sbb
repz
aad
movsl
cwtl
dec
les
insb
stos
mov
mov
fsubs
cmpsl
ds
add
test
lcall
scas
jge
or
xchg
mov
loope
pop
cltd
out
pop
aam
mov
mov
push
out
jg
xor
out
mov
repnz
xchg
rol
cmp
cmp
jb
mov
data16
mov
inc
shlb
add
loope
dec
icebp
cmp
jne
fnsave
fcmovu
outsb
lods
jmp
mov
mov
push
pop
bound
cmp
mov
sbb
mov
jl
rorl
cmc
fs
rorl
jl
inc
lods
cmp
cmpsb
sub
outsl
fldcw
sub
xor
add
or
mov
mov
fwait
pop
in
out
lret
into
mov
push
push
testb
adc
xchg
xor
adc
sbb
lcall
jecxz
xor
mov
jg
and
sbb
cltd
cmpsl
test
mov
iret
nop
mov
jbe
sbb
dec
and
mov
loop
mov
or
in
sub
mov
mov
nop
and
aam
pop
inc
ret
lcall
leave
sahf
repnz
out
fxch
ret
push
lcall
lahf
loopne
mov
xor
and
add
rcll
adc
pushf
xchg
mov
mov
test
psubusw
mov
inc
add
movd
lea
orl
xor
or
xor
push
pushf
stos
call
nop
mov
test
lods
sbb
xor
mov
mov
mov
stos
mov
jp
lds
xor
mov
shll
push
jb
jle
scas
dec
scas
cmp
mov
xchg
lods
jno
adcb
or
and
sub
push
bound
rolb
jb
inc
imulb
push
daa
fstpl
mov
repz
jecxz
scas
xchg
xchg
leave
stos
inc
inc
in
and
cmc
stos
xchg
push
xor
xor
scas
xchg
aaa
cli
sbb
call
and
push
hlt
and
stos
jecxz
repnz
sbbb
fwait
add
mov
xchg
adcl
call
sub
inc
orl
xor
pop
fldenv
mov
push
out
pop
int
adc
add
repnz
xchg
in
mov
aas
fcmovnu
xor
sub
pop
pop
xchg
lret
insl
mov
pop
mov
aam
push
dec
jo
mov
ja
add
lcall
icebp
frstor
mov
push
repnz
mov
jns
mov
daa
and
pop
pusha
repz
imul
jmp
xchg
push
xor
cmp
popf
mov
sbb
lods
xchg
add
add
iret
es
xor
cld
imulb
xor
jecxz
loop
push
jbe
inc
lds
dec
jl
cs
push
shlb
dec
or
daa
testl
mov
pusha
popa
push
ret
jmp
test
pop
and
enter
xor
aaa
xchg
xchg
ljmp
mov
std
xchg
or
inc
fmuls
push
jp
mov
enter
xor
mov
addb
into
jp
sysenter
daa
out
push
fldcw
dec
loopne
and
pop
fs
insb
sbb
int3
add
fs
cs
mov
mov
pusha
lds
xchg
mov
jns
jno
filds
adc
push
dec
or
push
lret
and
stc
mov
popf
lds
and
ljmp
mov
lahf
in
ds
xor
mov
adc
dec
stos
lahf
adc
pop
out
adc
jge
push
sbb
decl
gs
shl
adc
insl
jbe
mov
shll
mov
fdivs
movsb
inc
sbb
in
pop
mov
repz
aam
loope
dec
pop
pop
test
inc
mov
push
mov
sbb
sub
and
faddp
jne
and
inc
iret
imul
andb
rol
sbb
call
ja
xchg
scas
add
into
mov
sbbb
push
jo
mov
stos
mov
cmpsb
jno
call
cmpsl
pusha
cmp
cli
jnp
dec
and
and
and
call
pop
imulb
mov
pop
xchg
xchg
xchg
das
push
test
cmpl
and
xor
adc
mov
pop
xlat
inc
inc
cmpsb
ja
mov
shrl
lods
arpl
pop
inc
jb
lock
loope
sub
jbe
or
movsb
imul
push
test
cmpsb
mov
xchg
dec
push
jmp
mov
aas
or
stc
shlb
jle,pn
jp
or
pop
xor
push
xor
imul
rcrl
lret
out
pushf
jbe
mov
ret
sub
xchg
lahf
cmp
pop
jne
bound
sbb
ficoms
movsb
jne
in
xlat
in
js
sbb
in
sub
cmp
jp
sub
aam
lcall
dec
cwtl
idiv
push
sub
pop
add
lahf
popa
jae
aas
pop
xchg
popa
loope
mov
cmp
push
cli
push
out
mov
icebp
es
inc
out
test
xchg
xlat
sub
mov
pop
cli
jbe
testl
shl
mov
jmp
add
adc
mov
ljmp
popf
aam
fwait
and
js
out
push
pusha
insb
pop
mov
mov
inc
shrl
aaa
flds
sbb
js
jb
xor
ja
das
xor
repnz
cmp
cltd
repnz
lret
push
inc
xor
mov
les
addl
push
jne
cld
andb
insb
mov
fidivrl
or
xchg
mov
adc
mov
xchg
push
pushf
sub
jne
ds
fidivrs
cmp
xchg
rcrl
jne
jnp
into
mov
ds
sbb
aam
lea
movsb
pushl
mov
xchg
xchg
inc
pop
add
xlat
fists
mov
sbb
aaa
push
cltd
pop
push
addb
movsl
fbstp
inc
setnp
scas
in
jle
mov
pop
xchg
add
push
cld
shrl
loope
mov
movsl
dec
movsb
mov
ret
cmpsl
dec
or
or
push
pusha
or
cmovne
repz
jl
mov
subb
sub
push
and
push
negb
data16
insb
std
loop
pop
pop
in
pop
test
mov
icebp
cltd
jae
js
repnz
xor
sbb
mov
stc
data16
test
inc
sbb
rcl
sub
cmp
sbbl
jmp
sti
idivl
jb
fimuls
mov
loop
xor
les
xchg
lea
arpl
jno
ret
mov
inc
mov
sub
jbe
add
jmp
push
mov
fdivl
sahf
inc
ljmp
inc
hlt
and
mov
test
out
pop
sbb
loop
pop
sbb
pop
bound
cwtl
sub
xor
or
leave
mov
js
inc
in
xor
inc
cmp
mov
sbb
cmp
ds
xchg
xchg
sub
sub
enter
mov
sub
push
dec
sub
inc
int
notb
in
xor
rcrb
imul
pop
cs
xchg
cmp
repz
cmp
int3
xor
dec
xchg
push
inc
xchg
stos
lret
dec
xor
inc
jne
decl
dec
sti
out
test
ja
adcb
adc
add
push
loopne
xor
mov
divb
insb
stos
pop
xchg
lahf
fwait
je
cmp
mov
ds
mov
in
out
fldcw
mov
and
adc
aam
cmpsl
popf
sarb
dec
pop
lds
mov
cmp
ror
idivl
test
repz
fwait
or
dec
out
or
fildll
std
loope
cli
fsubrl
dec
filds
imul
and
push
xchg
addr16
and
mov
jns
lcall
arpl
mov
mov
sbb
in
pop
inc
and
mov
add
sti
test
dec
lock
das
out
mov
popa
call
cmp
mov
ficompl
dec
imul
ljmp
enter
mov
adc
dec
add
mov
sbb
sbb
push
cwtl
inc
pop
sti
dec
dec
adc
iret
xchg
sti
fucomi
cmpl
data16
pusha
pop
inc
adc
cmc
fwait
xchg
pop
fistl
loope
add
adc
imul
and
mov
lds
sbb
sub
rcrb
push
fists
aas
pushf
daa
mov
jae
nop
mov
sbb
mov
daa
sub
outsl
and
cli
cmp
jno
sbbl
add
aas
in
inc
pop
dec
xlat
pop
pop
notl
loop
fiadds
inc
jg
mov
jg
and
adc
mov
ss
loop
add
ret
sbb
mov
mov
inc
mov
jbe
jl
das
fs
mov
jno
pop
mov
sbb
mov
stos
pop
mov
pop
aam
hlt
shlb
int
notb
test
jmp
mov
inc
ret
lret
arpl
cmp
not
mov
mov
lds
icebp
notl
add
fimuls
stc
pushf
repnz
add
pop
xchg
sbb
lods
dec
or
dec
mov
or
fidivrl
jae
sahf
pusha
adc
mov
je
enter
scas
mov
sti
test
adc
gs
mov
mov
and
or
ja
out
jp
pop
push
cmp
jge
dec
enter
imul
cld
dec
xor
add
sbbl
lea
sbb
popf
mov
jno
das
and
or
add
push
sarl
sbb
dec
pop
add
cltd
sub
inc
mov
or
addr16
jne
lret
jp
insb
xchg
lods
push
xchg
rorb
push
js
rorb
sar
sbb
or
dec
aam
lods
push
mov
aas
jns,pn
xchg
push
jb
inc
repnz
xor
mov
mov
dec
or
je
mov
in
pop
ljmp
mov
enter
push
jno
shrb
inc
mov
hlt
jecxz
mov
loop
movsl
fs
mov
inc
iret
push
jmp
jbe
xchg
xchg
aas
cmpsb
das
mov
dec
jg
outsl
negb
es
filds
push
jmp
jbe
xchg
xchg
aas
cmpsb
das
mov
dec
jg
outsl
negb
es
ss
inc
iret
push
jmp
jbe
xchg
xchg
aas
cmpsb
das
mov
dec
jg
outsl
negb
es
filds
push
jmp
mov
xchg
cmp
cmpsb
das
shrl
aas
sub
sbb
or
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
adc
mov
xor
push
xchg
dec
in
fisubrl
data16
sub
ret
imulb
popf
push
lea
lods
push
fldl
jbe
cwtd
xchg
adc
sub
idivb
insl
scas
test
xchg
movsb
movsl
mov
les
aad
in
div
sbb
ret
pop
mov
add
dec
std
fmuls
push
adc
dec
add
mov
jmp
movsl
mov
and
cli
popf
cli
pop
mov
mov
ds
add
adc
repnz
shrb
cmp
sbb
inc
mov
repnz
push
pop
out
into
push
mov
sbb
cmpsb
rol
clc
xor
jge
sub
ret
outsb
jb
inc
lret
fldl
mov
xchg
xor
pop
mov
testl
mov
mov
mov
add
xchg
xchg
pop
pop
push
cs
inc
fsubs
test
cld
push
mov
aas
ret
pop
jne
lods
idivb
imul
popf
movsb
lods
mov
ds
std
shl
sbb
xchg
xor
inc
int3
push
les
insb
jg
je
inc
fcomps
cmp
sub
jb
or
movsb
cmp
add
arpl
inc
into
inc
ret
and
icebp
imul
das
scas
sub
cmpsl
sbb
push
push
fnstenv
add
std
in
xchg
sbb
cmpsb
sub
idivb
insl
push
popf
push
lea
mov
inc
int
std
in
xchg
sbb
cmpsb
sub
idivb
insl
push
popf
mov
scas
cltd
push
cmp
mov
mov
lret
xchg
mov
add
cs
mov
int
sbb
dec
xor
jge
xchg
mov
cmp
sub
inc
jae
xchg
pop
push
std
leave
inc
test
xor
mov
jge
mov
dec
mov
pop
movsl
cwtl
mov
mov
cmc
jecxz
dec
in
and
lret
mov
adc
fimull
sub
fstpt
pop
addb
cmp
sub
inc
int
push
movsl
inc
adc
fdivp
mov
jl
sbb
xor
cmp
add
roll
lods
pushf
ljmp
test
dec
sarb
inc
int3
daa
fisubrl
xor
pop
mov
mov
testl
cltd
lea
xlat
mov
pminsw
sbb
pop
ret
dec
dec
sub
icebp
xchg
out
daa
rcl
and
flds
mov
sarb
push
aas
push
sub
aas
lods
cmp
mov
scas
test
mov
inc
sahf
mov
add
and
cltd
cmpsb
sub
insb
and
packuswb
push
mov
jns
int3
inc
jne
dec
add
gs
adc
popa
lcall
ljmp
pop
ret
pop
mov
sub
xchg
push
and
mov
jmp
jns
inc
in
mov
or
jno
mov
enter
mov
adc
jo
ret
mov
testl
test
movsl
push
cmp
repz
inc
test
test
lret
lods
ja
fstps
stos
arpl
jl
xchg
movsl
xor
inc
or
or
sarb
pop
ss
xor
pusha
test
pop
sti
fnstsw
fsubrs
lcall
out
jne
and
out
xor
and
aas
and
addr16
ds
dec
jg
mov
mov
xor
test
pop
xor
insb
jg
mov
or
hlt
sub
inc
pop
pop
dec
push
xlat
sbb
shlb
testb
jg
dec
mov
cli
fs
clc
add
sub
mov
mov
cmp
mov
mov
test
arpl
dec
jno
cmp
sbb
add
adc
xor
ss
ret
adc
cmp
pop
push
jne
mov
pop
fs
sti
outsb
dec
insl
mov
dec
mov
lcall
add
dec
out
daa
insb
fwait
pop
mov
outsl
in
cmpl
fcomps
idivl
add
daa
xchg
arpl
int
int3
jno
push
shlb
lahf
mov
fwait
lods
sbb
cltd
ss
repnz
shlb
dec
jno
cmc
outsb
out
mov
stos
mov
mov
dec
testb
je
lret
fs
shl
ds
jmp
jbe
mov
in
repnz
mov
inc
int3
ss
cmp
or
les
adc
out
pop
clc
loopne
pop
cwtl
add
mov
and
jb
xchg
imul
push
outsb
in
mov
loop
inc
ja
int3
and
movsl
or
enter
dec
or
sbb
cwtl
mov
cmpsl
push
in
push
daa
lds
push
int
and
mov
data16
adc
pop
jle
cmp
bound
lods
add
mov
xchg
mulb
inc
adc
push
jp
jmp
lret
scas
jl
movsb
mov
jno
cmpsl
movsb
aaa
adc
daa
mov
mov
add
stos
icebp
xlat
inc
jno
pushf
jle
dec
dec
sbb
jns
cmpsl
push
dec
outsb
xchg
dec
and
call
push
add
shrb
lea
push
pop
cmpsb
or
sub
pop
xor
fisubl
loop
call
adc
test
push
ret
insl
out
cmp
popa
shl
addl
fnstenv
out
lods
jg
sub
fs
imul
fistl
ljmp
cmpsl
scas
lock
push
dec
push
lret
ret
mov
lods
fwait
xor
sub
push
int
insb
sbb
push
imul
xchg
popa
nop
bound
xchg
imul
call
jl,pn
jnp,pn
lret
push
jmp
je
pop
sub
xor
in
cmp
movsb
ja
lea
sub
jp
in
xchg
push
jp
stos
xor
push
jmp
sar
addr16
enter
mov
ficoml
adc
fcomps
in
loope
jecxz
rcl
fcmovnu
in
push
shlb
lea
jecxz
fnsave
mov
inc
outsb
into
sub
iret
sub
popa
repz
pop
insb
adc
push
mov
push
int
mov
dec
popf
outsl
push
push
fldcw
mov
shlb
inc
mov
icebp
std
pop
ret
xor
xchg
inc
in
jne
inc
repnz
ja
cmp
xchg
aas
push
cli
sbbb
popa
dec
aam
xchg
mov
stos
add
je
pushl
test
loop
das
jae
inc
sub
mov
and
or
push
gs
pop
mov
lds
sarb
and
out
jp
fldenv
add
or
push
andb
ffree
xor
inc
stc
loopne
loop
sub
pop
jecxz
inc
enter
mov
addl
inc
int3
popa
loope
rcr
push
xchg
pushf
clc
into
adc
movsb
sbb
push
push
mov
sbb
shrl
pop
dec
std
xor
enter
xchg
arpl
push
lds
bound
mov
sbb
mov
push
mov
inc
dec
scas
sbb
stc
out
stos
pop
fldcw
ja
dec
inc
jl
ja
frstor
mov
mov
xor
daa
enter
ss
add
mov
outsb
hlt
inc
mov
out
test
ja
sbb
js
dec
popa
daa
loopne
mov
add
shl
xor
mov
ja
out
popf
cmpsl
jl
nop
mov
dec
xchg
mov
or
fildll
push
movb
sbb
fisttps
xor
out
stos
dec
and
js
inc
sub
inc
pop
imul
sub
std
xor
sub
adc
inc
jae
adc
push
mov
add
pop
adc
in
pop
mov
adc
adcl
cmp
push
jmp
mov
test
mov
ret
stos
dec
mov
inc
mov
lods
insl
ds
lahf
sahf
cmpsl
sbb
sbb
outsl
adc
push
notl
jmp
pop
addr16
loopne
cmc
pop
adc
adcb
inc
xchg
rclb
fwait
mov
push
aam
in
shlb
pop
xchg
xor
aad
test
test
sbb
xchg
sbb
mov
pushf
in
push
cmp
or
xor
popf
or
mov
repnz
mov
jg
and
mov
sub
add
mov
push
movsl
pusha
enter
jecxz
sahf
js
ja
sub
push
cli
dec
cmp
jae
repz
cli
mov
mov
sbb
mov
mov
push
fimull
shrl
cmp
jnp
push
inc
imul
push
and
test
fbstp
incl
shrl
push
or
mov
test
or
adc
dec
pusha
jp
loope
mov
bound
sti
jnp
pusha
add
inc
call
or
fldenv
and
sarl
mov
cmpsb
cmp
cmp
pop
fnstcw
add
xchg
mov
adc
jae
mov
cltd
and
movsl
rorl
push
shrl
push
nop
stc
pop
mov
call
in
pop
icebp
cmpsl
mov
icebp
adc
xor
imul
xchg
pop
fwait
jb
std
insb
je
es
mov
xor
shlb
test
lods
push
pusha
in
mov
mov
jle
in
es
iret
add
mov
sub
in
ja
jge
sub
jmp
jnp
cmp
and
popf
cltd
adcl
jmp
arpl
popa
xchg
aad
repnz
xchg
and
ja
imull
xchg
shrb
mov
xchg
xor
jl
xchg
dec
fbstp
je
lock
cs
jbe
jb
xchg
out
stc
ret
testl
xor
lock
loopne
xchg
mov
je
sbb
and
xchg
pcmpgtd
mov
js
popa
mov
fistl
es
aaa
pop
push
cmpsl
es
sbb
cmp
gs
mov
pop
mov
imul
icebp
ds
stos
ret
jmp
inc
pop
fcompp
xchg
xchg
arpl
aad
icebp
jl
sbb
js
nop
pop
xchg
xchg
xor
int
ds
cmp
lret
sbb
cmc
gs
aas
pop
dec
and
std
cwtl
data16
adcl
sbb
push
xchg
sti
pop
xor
scas
mov
mov
sti
in
icebp
imul
outsl
out
add
xor
insl
dec
stos
or
pop
je
scas
or
push
dec
ja
cli
inc
push
lahf
xchg
out
jmp
loopne
clc
mov
daa
xchg
movsl
rorl
negl
out
xchg
pop
jp
xchg
push
add
loopne
xorb
jne
call
sbb
stos
or
pop
inc
fstpt
mov
xchg
js
inc
incb
out
xchg
push
loope
call
aam
testb
cwtl
xchg
addl
inc
mov
movsl
stc
pushf
rolb
and
cld
pop
aam
mov
mov
insb
add
aad
int
inc
es
xchg
pop
lret
dec
lock
jns
or
jnp
and
out
dec
jle
lock
repz
cltd
mov
cwtl
lds
or
dec
and
leave
pusha
outsl
insb
pop
mov
shlb
into
ljmp
data16
out
icebp
push
inc
cmp
sub
cmp
push
into
jae
repnz
aad
xchg
jb
or
out
cmp
push
cwtl
push
inc
cmpsb
or
push
cmp
jle
xor
sub
mov
dec
rolb
mov
mov
hlt
test
adc
cmpsb
aad
fistl
mov
mull
divb
pop
dec
sarl
or
push
lcall
mov
pop
cmp
xor
sbb
dec
cwtl
mov
xchg
mov
sub
fsubrs
mov
testb
nop
xchg
pusha
adc
daa
addb
xchg
inc
mov
arpl
out
jb
imul
testb
push
mov
xchg
mov
pushf
mov
mov
repnz
imul
leave
xorl
mov
or
je
jle
push
dec
xor
add
shlb
cld
jle
aad
dec
mov
int
shll
sar
xchg
add
pop
push
jecxz
sbb
inc
cltd
jae
or
sub
in
and
lock
lret
das
orl
mov
clc
pop
add
in
out
or
mov
inc
in
dec
cmp
adc
lahf
je
adc
pop
mov
mov
popf
or
fdiv
or
xor
push
and
sahf
aas
lea
or
push
sub
add
rolb
pop
push
pop
xor
sub
addb
imul
inc
imul
sbb
fbld
jl
jb
das
sbb
cmc
fidivrl
sbb
rclb
lods
dec
lahf
mov
cmpsl
clc
aad
andb
hlt
ljmp
sahf
fldcw
daa
dec
jnp
push
inc
mov
adc
mov
das
mov
add
lret
js
mov
inc
or
std
push
aaa
call
dec
push
and
push
xchg
imul
fidivrl
sub
popf
jge
hlt
push
test
stos
mov
mov
lock
pop
idiv
xchg
stc
fdivs
or
mov
dec
or
outsb
dec
sti
mov
ss
out
xchg
call
or
add
mov
stos
fsts
jg
mov
mov
sbb
inc
loope
ret
shr
mov
test
xchg
cmp
inc
popf
shll
clc
mov
dec
repz
lds
pop
stos
andl
je
push
cmp
jb
sbb
and
icebp
pop
fsub
imul
add
inc
add
test
ss
mov
mov
fs
fistpl
xchg
push
push
mov
cs
cli
test
into
int3
je
dec
test
test
adc
jge
dec
push
ret
hlt
inc
nop
fsubl
and
or
rolb
pop
testw
mov
jnp
jae
fst
notl
cmp
lret
fisttpll
js
push
jp
repz
pop
sub
xor
jl
loopne
scas
push
call
sub
xchg
inc
ds
sbb
dec
sub
div
pop
nop
test
inc
sbb
xchg
stc
pop
push
mulb
cmp
pop
sub
xchg
xchg
jns
pop
aaa
dec
shlb
addr16
pop
mov
jg
les
scas
and
mov
sub
arpl
pushf
inc
add
add
lods
cmp
int3
add
in
outsb
aad
adc
in
sarb
mov
sub
out
ficomps
cmp
and
mov
xchg
fsubrs
inc
sub
sub
mov
int
fcoml
mov
mov
xchg
loope
sti
pop
xchg
cmpsb
sbb
and
popf
push
inc
mov
dec
mov
pop
int
daa
mov
dec
dec
inc
mov
push
cwtl
data16
adc
mov
push
scas
cmp
aaa
cmp
inc
repz
push
mov
mov
aad
xchg
jne
or
pop
lods
lahf
loope
inc
cmp
add
cmp
jno
cmp
and
cmpb
sub
int
mov
dec
cli
cs
aam
lahf
xor
sub
aam
sbb
scas
rorb
mov
neg
outsl
outsl
js
and
std
and
inc
push
mov
rcll
popf
adc
std
xor
cmp
and
mov
enter
enter
cmp
mov
sbb
pop
jp
in
icebp
push
dec
icebp
lock
xor
ja
and
inc
push
nop
mov
scas
xor
addr16
dec
mov
mov
outsb
xrelease
aas
mov
pop
xor
or
adc
stos
cmpsl
xor
pop
push
add
cld
xor
inc
pop
sbb
sbb
add
xchg
pop
cs
pop
cmp
pmulhw
dec
not
rol
add
imul
pop
push
adc
dec
out
xchg
jmp
pop
push
pop
cmp
push
int3
ljmp
jno
sub
mov
mov
lea
mov
sar
pop
pop
faddp
adc
push
xor
inc
add
rol
jo
lret
sahf
fstpl
rorb
sub
and
push
aas
xor
adc
shl
mov
or
les
jp
ficoml
jge
adc
and
popa
mov
pop
xchg
fld
jl
std
mov
jo
push
push
xor
gs
adc
jecxz
lock
pop
pushf
hlt
int3
cmp
xor
and
ljmp
add
mov
ljmp
jp
xor
gs
icebp
lock
xor
lds
push
pop
movsl
cmpsb
jg
repnz
pop
xor
mov
pusha
ds
cmp
sti
je
loop
jge
dec
push
push
aaa
xchg
les
xor
pop
mov
fildl
dec
push
cmp
xchg
lds
jl
lods
out
cmp
mov
sub
int
cmpsb
push
mov
sbb
mov
imul
lock
or
xchg
pop
gs
or
daa
loop
mov
icebp
add
cmp
mov
mov
xor
xchg
mov
pop
test
push
scas
sahf
mov
fcoml
das
scas
stos
movsl
mov
cmp
add
mov
out
push
inc
xor
sarl
push
xchg
push
xor
outsb
insl
jecxz
adcb
loopne
pop
cmc
mov
push
enter
or
in
fwait
outsl
xor
jle
mov
leave
jge
push
push
lods
and
mov
dec
pop
mov
ss
jg
in
or
leave
repz
movsl
aas
cmp
jmp
jl
mov
xor
mov
jae
fs
mov
push
aaa
es
lea
fsts
iret
mov
cmp
add
xor
mov
cld
lods
jns
cwtl
in
sti
in
aam
sbb
fidivrl
sbb
dec
orl
cwtl
mov
mov
sub
leave
clc
push
sbb
imul
jo
add
xchg
enter
push
push
adc
test
lret
enter
mov
jns
aad
jp
jle
call
pop
popa
xchg
mov
xor
and
sahf
xchg
inc
enter
jmp
add
push
mov
sbbl
pushf
sbb
mov
push
les
lret
cmp
and
inc
sbb
adc
loope
mov
data16
pop
mov
cmp
sti
inc
movsl
leave
out
jp
sti
pop
push
xlat
and
sbb
test
push
in
push
imul
mov
xor
pusha
mov
xlat
je
push
in
mov
xchg
pusha
pop
lcall
push
loope
inc
arpl
insl
lea
loope
mov
xchg
popa
push
shrl
lods
inc
lods
notl
jl
inc
out
outsl
insl
cs
inc
sub
pop
pop
lods
fwait
lret
mov
sbb
in
jg
adc
icebp
and
mov
push
mov
insb
pusha
mov
aas
mov
out
push
popf
jbe
adc
push
xor
cmp
repz
fwait
ja
adc
or
push
inc
shll
xlat
add
jbe
add
mov
jl
movsb
sahf
cmpsl
push
and
dec
sub
cld
stos
mov
or
mov
scas
pop
mov
lahf
adc
pop
enter
sub
rorb
jecxz
mov
data16
cli
rclb
jmp
xor
enter
clc
xchg
sub
cmp
outsl
fiaddl
pop
mov
mov
sub
lcall
shrl
xchg
lock
dec
dec
leave
xchg
sbb
outsb
push
pop
xor
lahf
jo
pop
pop
add
cwtl
lret
sbb
mov
subb
push
aad
pop
xchg
stc
add
inc
mov
loop
cli
lock
jno
int
add
push
jnp
nopl
in
rcll
aam
sub
movsb
adc
out
popa
mov
sub
stc
cmc
loopne
movsb
push
enter
dec
push
cs
push
xchg
add
pushf
iret
jb
sti
les
and
frstor
sbb
divl
sub
or
dec
scas
adc
fwait
call
shll
arpl
lock
sbb
out
lods
pop
jae
out
add
stc
iret
pop
lret
sub
repz
mov
inc
xor
idivb
ret
and
fnstcw
adc
cmp
inc
insb
nop
je
push
jae
andb
lret
insl
std
mov
xor
push
xor
adc
mov
ja
cmpsl
lea
and
pusha
add
add
scas
mov
mov
jne
mov
lea
lods
dec
ja
js
cmp
stc
cmp
mov
sub
in
sahf
ds
fstl
repz
jge
enter
inc
jmp
jne
loop
stc
shrl
mov
push
ficomps
mov
or
jns
mov
and
mulb
mov
push
out
pop
cmp
mov
je
shr
test
mov
stc
xor
xor
mov
inc
das
mov
icebp
decl
inc
and
adc
cmp
and
mov
inc
icebp
adcb
push
mov
imul
mov
fucomip
out
call
das
das
xor
scas
xchg
xor
mov
lods
out
arpl
bound
rorl
aas
repnz
adc
dec
or
roll
jbe
pop
mov
xchg
lcall
xchg
mov
jbe
mov
inc
mov
ljmp
rcrl
dec
jne
xchg
std
or
pop
adc
iret
mov
ss
xor
inc
xorl
test
add
mov
cs
sahf
lahf
in
xchg
shrl
mov
int
sub
lock
push
scas
push
jmp
fidivrs
jl
shll
mov
popa
sbb
enter
lock
rcll
fcmovnbe
in
dec
ds
cltd
pop
sbb
aam
jno
lods
push
fldl
jbe
in
xchg
sbb
cmpsb
sub
idivb
insl
push
popf
push
lea
mov
inc
int
std
in
xchg
sbb
cmpsb
sub
idivb
insl
push
popf
lea
lods
fldl
jbe
cmpsb
in
xchg
sbb
cmpsb
sub
pop
dec
idivb
imul
mov
push
int
std
out
xchg
sbb
cmpsb
pop
mov
add
adc
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
