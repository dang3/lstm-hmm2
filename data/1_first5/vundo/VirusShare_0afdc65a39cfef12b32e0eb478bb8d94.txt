jmp
pop
push
jmp
pop
pop
jg
push
pop
push
push
fs
push
outsb
jbe
push
gs
pop
outsb
pop
imul
js
push
push
js
je
pop
push
push
push
jae
outsb
push
js
push
js
push
pop
jo
jmp
gs
push
push
push
imul
pop
imul
out
jnp
imul
je
gs
outsb
jbe
je
jne
popa
push
push
bound
push
pop
push
jb
jp
gs
push
push
jg
pop
jns
jne
aad
outsl
push
jp
jno
popa
jb
jno
pop
data16
pop
jne
popa
push
push
jmp
insl
bound
push
push
fs
jbe
pusha
pop
insl
pop
jnp
jl
outsb
jge
outsl
imul
jp
outsb
outsl
fs
push
jl
jno
push
outsb
arpl
addr16
imul
pop
arpl
insl
jne
jl
imul
shll
push
jne
push
data16
imul
jne
insl
fs
jmp
insb
push
pop
insb
push
jbe
pop
push
pop
js
js
outsb
jg
pop
jle
jg
in
push
mov
jmp
jno
jg
jb
push
pop
arpl
push
jp
pop
push
outsb
imul
jl
jmp
jne
jae
fs
arpl
push
jl
jl
push
outsl
fs
jge
pop
ja
pusha
addr16
ja
loopne
data16
pop
jl
push
pop
imul
imul
push
outsl
ja
jo
jns
pop
jmp
imul
push
jns
addr16
fs
pop
pop
jns
jno
popa
pop
push
jp
push
je
jbe
jnp
js
jae
push
jnp
push
jbe
push
jne
pop
push
fs
push
ja
pop
pop
popa
jmp
pop
arpl
pop
push
jmp
jbe
push
bound
jle
push
jmp
jbe
push
push
pop
jne
push
jnp
jno
jg
arpl
pop
outsb
push
push
jle
insl
push
jge
push
push
push
je
push
jmp
imul
pop
pop
fs
push
pop
insl
bound
pop
pop
push
jno
push
jns
jl
jae
push
jns
imul
pop
jb
jo
insl
jb
push
imul
enter
jle
jle
fs
cmp
jne
jmp
imul
pusha
insb
imul
insw
jae
outsl
ja
jbe
jnp
imul
jg
jg
jnp
popa
je
jp
jl
arpl
pop
insb
insl
pop
imul
push
popa
pop
imul
jg
js
js
imul
push
insl
js
jne
data16
je
jmp
push
pop
popa
push
fs
push
push
jbe
jns
insb
gs
addr16
jne
jmp
pop
jge
ja
ds
insl
imul
pop
push
push
push
push
je
outsb
jp
push
jmp
jp
push
jg
jl
outsl
js
jno
imul
jns
ja
jg
jo
push
add
cmp
jo
inc
jae
push
jae
jo
insb
jnp
outsl
insb
je
jbe
outsl
imul
push
jo
pop
bound
push
pop
pop
push
push
pop
pop
jge
pop
insb
pusha
jb
bound
jmp
push
jb
cmp
pop
push
jle
ja
jge
bnd
arpl
push
outsb
jg
imul
pop
popa
jae
jne
jl
addr16
bound
jl
pop
imul
jle
jp
ja
cmp
je
jmp
pop
pop
jl
push
push
pop
pop
pop
popa
je
jae
pop
push
pop
push
imul
outsb
jmp
jae
jp
jnp
push
jle
push
push
push
push
jno
outsl
pop
jbe
outsl
popa
jns
pop
jle
jp
jmp
jmp
outsl
push
outsl
outsl
je
jb
jo
push
insb
pop
jb
pop
push
pop
jns
push
pop
push
jne
loope
push
push
imul
pop
push
pop
push
jl
push
jne
pop
push
arpl
gs
push
jge
jmp
jg
pop
push
jae
push
pop
pop
jp
pop
push
popa
jg
jge
pop
pop
imul
jne
pop
ja
bound
pop
jno
jp
mov
jmp
pop
jae
jmp
jnp
jns
push
jnp
push
ja
pusha
jge
pop
addr16
push
popa
js
js
pop
jnp
push
push
jno
jb
outsl
push
push
bound
jns
ja
push
jbe
jb
enter
pop
jb
push
data16
jp
push
ja
pusha
jge
push
push
push
jmp
add
stos
loope
fidivs
pop
jmp
xchg
scas
xor
jmp
xor
movsb
mov
pop
jmp
arpl
jmp
jl
push
push
pop
popa
push
push
jg
ja
push
pop
outsb
push
pop
outsb
je
bound
popa
data16
ja
jae
push
pop
push
jae
pop
imul
arpl
data16
jmp
addr16
jmp
jns
pop
push
je
popa
push
jae
js
push
push
jmp
push
pushaw
bound
insl
jmp
push
pusha
jnp
fs
jp
push
jg
imul
bound
jns
jl
push
fs
pusha
popa
jo
popa
jp
insl
push
arpl
pop
push
pop
pop
pop
insb
addr16
pop
push
jge
pop
jmp
fs
fs
push
push
pop
jbe
pop
jne
jle
insb
pop
push
pop
jle
arpl
push
jge
jnp
insl
push
ja
pop
push
arpl
imul
jb
insb
push
pop
outsl
push
gs
gs
jns
jge
pop
jnp
jns
push
jmp
arpl
jne
push
push
pop
addr16
pop
push
jp
pop
pop
fs
arpl
ja
jp
push
push
jmp
push
pop
jmp
inc
push
push
lods
mov
mov
idivb
add
add
inc
mov
pop
jmp
push
push
pop
jmp
push
pop
jbe
jl
push
bound
push
pop
push
push
push
insb
insb
addr16
push
push
push
pop
push
ja
pop
insl
bound
pop
pop
popa
push
push
pop
outsl
jbe
pop
jbe
push
jmp
pop
js
inc
outsl
jle
outsl
pusha
insb
push
ja
jns
push
jmp
jmp
pop
popa
outsb
jge
je
push
jns
outsl
pop
jge
jae
pop
jns
insb
pop
jno
jg
jge
push
push
push
arpl
pop
push
push
jo
push
pop
pop
jmp
ja
addr16
popa
jns
popa
imul
addr16
pop
jmp
push
gs
push
push
pop
jmp
pop
pop
pop
jnp
jae
pop
jb
imul
jp
push
push
popa
pop
push
ja
jmp
push
pop
push
ja
pop
imul
jo
outsl
jnp
jno
pop
arpl
jl
jnp
jmp
push
push
jo
outsb
pop
jg
jg
push
jg
jo
jg
jb
jg
fs
push
jno
aas
addr16
pop
jnp
push
jmp
jl
pop
jp
push
je
arpl
imul
pop
jb
imul
jno
arpl
jl
jl
js
js
jbe
outsl
arpl
pop
je
jns
push
insl
push
jmp
jmp
jnp
jae
jp
insb
pop
ja
jns
jge
push
pusha
push
push
push
push
imul
pop
gs
push
pop
pop
pop
pusha
gs
pop
imul
push
fs
push
pop
outsl
jmp
jae
jmp
push
push
js
ja
pop
arpl
gs
ja
fs
jo
outsb
arpl
imul
jb
jae
pop
pop
jbe
push
pop
pop
push
pop
jbe
jnp
jb
push
outsl
jmp
imul
popa
outsb
pusha
push
jnp
push
jle
cli
add
test
add
jmp
push
arpl
push
jbe
jle
jne
jns
pop
pop
insl
jb
push
imul
push
pop
addr16
jl
je
pop
je
outsb
push
bound
push
pusha
push
jno
jl
jae
push
jb
insb
outsl
pop
fs
jno
push
push
jmp
jle
jmp
push
jae
pop
outsl
jge
pop
jge
jbe
jle
jo
pop
imul
push
pop
jb
pop
push
push
pop
pop
pop
push
push
insb
addr16
outsl
push
jno
je
jns
pop
jb
jmp
push
outsl
jne
data16
pop
pop
ja
jge
jne
pop
jg
jne
insl
outsl
pop
pop
pop
jno
js
adc
jmp
jnp
push
jmp
jbe
arpl
pop
push
push
gs
jg
outsl
je
push
bound
pop
outsb
jge
pusha
ja
gs
jge
pop
pop
jg
imul
push
outsb
jb
pop
je
outsl
data16
jo
push
je
imul
gs
bound
jns
jp
add
cmp
push
jmp
jnp
push
addr16
gs
pop
outsb
push
push
imul
jb
ja
pusha
outsl
ja
push
push
pop
insb
push
ja
popa
jns
pushw
pop
je
outsb
popa
pop
jge
jnp
bound
jge
push
js
jmp
gs
push
jge
push
pop
push
gs
out
insl
insb
addr16
push
ja
push
jne
jb
jne
jge
imul
insl
pop
jl
jnp
pop
push
jne
pop
push
popa
insb
pop
outsl
insb
bound
pop
jl
ret
jmp
insl
pushaw
jmp
pop
bound
push
push
bound
jl
pop
push
jge
pop
imul
push
je
push
pop
ja
loopne
jl
ja
jmp
push
pop
push
jo
outsl
pop
jle
jae
push
push
jne
insl
pop
jae
fs
jmp
jbe
pop
jle
push
jne
pop
pop
push
jns
ja
jbe
jle
pop
jnp
jo
pop
jbe
addr16
push
pop
outsb
push
xchg
jmp
push
pop
pop
jmp
pop
addr16
insb
pushaw
jge
push
jg
jne
push
push
jne
push
pop
jns
push
push
pusha
jne
insb
insb
pop
jl
jmp
push
pop
jg
jo
jmp
push
jg
jne
push
je
imul
push
insl
outsl
jmp
insb
jmp
fs
push
bound
push
push
push
pop
imul
jo
pop
jnp
data16
jae
jbe
pop
push
gs
jl
fs
insb
addr16
jae
push
jo
jl
insb
pop
pop
jbe
ja
jle
ret
jo
cmp
addr16
insl
pop
jne
push
jne
pop
jbe
jne
outsl
bound
jo
pop
jge
push
push
fs
outsl
push
pop
imul
imul
jge
pop
insl
push
pop
pop
jmp
insb
outsb
insl
jns
jmp
pop
je
addr16
push
imul
jg
outsl
push
push
jo
pop
addr16
jb
popa
imul
push
jp
insl
jg
jl
push
push
jo
bound
push
pop
pop
arpl
jb
add
jmp
jnp
push
jmp
imul
pop
arpl
bound
push
pop
jns
push
push
jl
pop
pop
jne
jnp
js
ja
jle
jb
gs
pop
push
push
pop
jp
outsl
imul
jge
imul
jmp
popa
push
push
gs
outsl
pop
pop
jbe
bound
push
pop
dec
jne
jmp
arpl
jmp
pop
push
jl
ja
push
push
jne
jle
outsl
push
pop
fs
popa
pop
pop
jb
pop
pop
data16
push
ja
pop
jl
gs
push
fs
fs
bound
jge
gs
pop
addr16
pop
outsl
push
cmp
jns
push
jnp
addr16
data16
push
jmp
pop
jb
jnp
ja
jp
pop
outsb
jbe
jae
jns
jl
popa
push
pop
push
imul
pusha
push
insl
jge
gs
push
pop
push
push
outsl
arpl
arpl
addr16
jbe
pop
push
push
jl
push
pop
fs
je
bound
js
jbe
arpl
jbe
pop
jp
push
pop
outsb
ja
pop
pop
outsl
jne
jl
ja
outsb
imul
pop
jo
pop
pop
jmp
outsb
jae
jg
pusha
pop
jle
js
outsb
push
out
imul
addr16
js
jl
jb
pop
push
jbe
pop
gs
push
je
fs
je
imul
imul
popa
outsl
pop
jnp
jns
jnp
les
cmp
ja
dec
outsb
push
push
bound
jp
jb
jb
push
jp
pop
push
push
data16
jb
jbe
imul
push
jae
push
jnp
pop
jno
popa
jge
jns
push
jmp
imul
pop
jae
jae
bound
imul
pop
jae
jmp
push
data16
fs
pop
jnp
pop
push
jle
jbe
push
pop
jbe
je
jle
outsl
pusha
pop
push
push
push
jb
push
push
push
outsl
push
jne
pop
jmp
jg
jb
gs
pop
outsb
jb
imul
jg
jmp
jle
push
jb
push
jge
outsl
insl
push
jno
insb
push
js
jae
push
push
pop
push
popa
bound
fs
jl
jnp
push
pop
insl
pop
ja
push
pop
fs
pop
bound
bound
push
addr16
push
pop
pop
pop
pop
jae
push
mov
jmp
push
arpl
pop
jbe
imul
jae
jns
addr16
pusha
arpl
push
pop
push
push
pop
fs
push
push
jbe
jb
jge
pop
push
jnp
pop
jg
jae
jmp
jae
pop
insb
bound
addr16
push
jmp
outsb
insl
gs
pop
push
jns
pusha
js
data16
pop
jns
push
pop
jne
jno
outsl
jb
addr16
jb
imul
push
jmp
fs
pop
jmp
jle
push
jb
jo
jg
imul
outsl
push
insb
push
js
push
jmp
arpl
jg
jle
pop
jns
popa
jb
push
pop
jl
jbe
ja
push
jns
jp
push
imul
push
jp
jl
jb
jo
push
push
jnp
imul
insb
pop
fs
pop
push
push
outsb
pop
pop
push
pop
pop
addr16
cmp
je
addr16
addr16
ja
pop
bound
jbe
pop
jb
popa
pop
jmp
jmp
jbe
insl
gs
push
imul
jbe
fs
push
pop
fs
bound
outsb
jl
insl
addr16
jmp
pop
jmp
insb
jne
insl
push
pop
pop
gs
data16
gs
imul
jne
js
jmp
push
jg
gs
push
jg
pop
arpl
push
jns
imul
jb
outsb
pop
jo
insl
fs
mov
sub
push
push
xor
mov
mov
mov
and
xor
shl
sub
dec
or
dec
jne
mov
mov
mov
jmp
xchg
jge
test
fidivrl
push
jae
cmp
outsl
out
and
jmp
mov
adc
or
jmp
inc
push
mov
pop
call
outsb
xchg
add
push
jmp
lret
stos
aad
sbbb
mov
and
or
push
fxch
jl
ret
and
dec
loope
add
add
leave
ret
push
mov
sub
push
jmp
pop
nop
js
lods
add
push
jmp
leave
inc
insl
and
and
rorb
mov
add
and
sub
xor
sub
xor
xor
add
add
or
and
add
dec
jne
mov
mov
mov
jmp
add
ss
cmpsl
ljmp
les
add
mov
jmp
mov
adc
add
add
or
scas
popf
fwait
loope
insl
jle
pop
in
xor
leave
ret
push
mov
sub
push
push
xor
mov
mov
mov
and
sub
push
jmp
cmp
imul
adc
cmp
jmp
pop
pop
add
bound
repz
shl
and
xor
add
sub
push
jmp
test
xor
push
and
sldt
add
out
fptan
dec
add
jg
mov
push
outsl
pop
xchg
xor
xor
add
add
sub
or
inc
add
xor
xor
dec
jne
mov
mov
xchg
jmp
mov
lock
pop
jmp
jmp
jge
or
pop
add
mov
jmp
in
jbe
rcrl
push
adc
dec
pop
or
add
add
leave
ret
push
mov
sub
push
sub
jmp
dec
hlt
push
cwtl
dec
or
jmp
push
aam
in
inc
test
or
mov
add
add
xor
mov
mov
mov
sub
add
and
and
ror
ror
lea
sub
sub
and
xor
dec
jne
mov
mov
push
jmp
sbb
and
andl
adc
pop
jmp
mov
out
mov
jmp
or
jmp
out
push
sti
faddl
add
add
mov
jmp
and
add
or
add
in
lock
scas
mov
adc
jne
leave
ret
call
lahf
adc
xchg
icebp
mov
movsb
jl
movb
xor
pop
sbb
push
sub
and
das
mov
xor
pop
lods
in
pop
cmpsl
popa
fists
push
sub
pushf
mov
icebp
int
sub
movsl
pop
sub
cltd
lds
lea
sbb
stos
jnp
ss
sub
jmp
aaa
pop
xchg
mov
push
mov
or
xor
repnz
nop
in
testb
push
cmp
rcll
inc
sahf
pop
sub
shl
jp
jae
pop
orb
cmpsl
push
rol
adcb
and
mov
sub
enter
mov
sub
scas
cmp
sub
fsubl
into
push
mov
idivb
cmp
not
arpl
cmp
enter
xchg
mov
in
out
ret
push
xor
xor
cmp
nop
add
dec
insb
mov
test
pop
std
cmp
fiadds
cmp
and
cmp
lret
into
outsl
sub
xchg
ret
out
inc
ret
cs
and
and
out
push
jge
xor
xchg
outsl
in
test
or
mov
lret
insb
pop
sbb
xor
lcall
iret
jne
xor
lret
or
inc
inc
or
insl
pop
and
jp
gs
jp
bound
add
cmpb
add
xchg
add
pop
into
jle,pt
clc
mov
xor
jg
loop
cld
mov
sbb
xor
jmp
lahf
bound
pop
lea
xor
pop
leave
xor
cmpl
add
cmp
pop
test
stc
lret
mov
test
mov
push
aam
jb
das
add
mov
push
add
xchg
mov
add
xor
push
or
sub
jle
cmp
cmc
sub
int
jl
cmpsb
or
jno
js
lods
cmpsl
sub
inc
decb
bound
aam
pop
mov
and
test
lods
and
sahf
fcoml
add
lahf
or
mov
mov
mov
jmp
mov
xor
xchg
cld
and
dec
pop
cmp
mov
inc
imul
sub
stos
addr16
and
mov
cltd
movups
in
scas
jae
xchg
cmp
dec
aas
add
and
push
xchg
cmc
cmp
repnz
lret
inc
insb
and
adc
pop
pop
sti
pop
xor
ret
loopne
jge
xchg
stos
rcrb
mov
movsl
pop
lods
xchg
mov
sub
out
shrl
mov
xor
mov
enter
mov
cmp
xchg
rolb
mov
fsubrs
xor
mov
mov
xchg
cmp
scas
test
aam
aaa
pop
out
jle
push
adc
das
shll
in
push
cmp
cmc
pop
xor
cli
cmp
loop
das
mov
xor
adcb
add
add
sbb
inc
loop
xchg
xor
sbb
cmpsb
addr16
loop
jle
and
sub
jg
adc
mov
jmp
xor
popf
xchg
inc
add
lahf
sub
mov
orb
mov
mov
xchg
mov
sub
xlat
push
sub
outsl
cwtl
cli
jnp
pop
push
daa
inc
je
sub
cld
add
pop
cmp
jmp
mov
add
inc
xchg
aam
xchg
mov
movsb
leave
dec
inc
and
std
enter
je
lock
out
hlt
scas
push
fcmovb
sub
or
in
ret
enter
dec
fnsave
xor
adc
sbb
xor
adc
and
stos
mov
dec
sub
iret
push
push
mov
push
xor
xor
test
lret
inc
xchg
cmp
adc
es
inc
push
mull
sub
popa
xchg
push
mov
divl
sub
les
push
pop
xor
jle
sub
nop
add
lahf
pop
mov
fwait
scas
insl
sarb
sub
inc
mov
jmp
mov
push
sub
aaa
mov
jnp
addb
mov
xor
das
xor
cmp
pop
fsubrs
xchg
mov
jno
lods
jg
pop
fdivl
repnz
jns
mov
push
jb
xchg
add
xor
in
dec
pop
sub
push
inc
sub
out
fs
inc
adcl
push
dec
mov
cmp
push
std
out
jp
stos
insl
pushf
cmp
ss
sbb
or
sub
mov
xchg
mov
sub
insl
jo
mov
loop
push
jb
push
xor
lods
and
popa
mov
xchg
cmp
gs
xor
mov
mov
xor
in
jg
lea
arpl
or
sub
gs
inc
inc
iret
jp
call
shrb
rolb
loopne
pop
push
das
add
inc
push
icebp
ss
cmp
repnz
div
sub
mov
add
pop
add
cmc
cmp
push
add
jecxz
cmc
sub
xor
lret
je
das
add
mov
jecxz
rolb
mov
mov
test
shll
mov
push
jo
int
das
repnz
xchg
jns
cmp
pop
mov
sub
or
je
xor
addl
jmp
xchg
negl
sub
push
std
adc
imul
xor
mov
cmp
aad
sbb
jo
xchg
pop
jg
lcall
add
pop
and
cmpsb
lds
xor
cmp
push
filds
sub
frstor
cli
inc
cmp
push
add
sub
lock
popl
adc
cmp
lods
sbb
testb
xor
divb
dec
incb
xor
mov
push
cltd
push
dec
inc
enter
pop
icebp
pop
push
sbb
xor
mov
push
leave
and
repz
mov
mov
in
iret
push
cmp
and
add
xor
mov
xor
xchg
or
cwtl
jl
xor
push
js
jae
sub
pop
mov
cmp
sbb
pop
and
fdiv
rclb
icebp
sbbl
ficomps
mov
cmp
xchg
pop
push
faddl
movsb
lods
cmc
mov
sub
jle
fcmove
mov
push
sahf
fsubl
xor
sbb
jo
sub
test
and
push
movsb
sbb
push
sub
and
push
sub
push
sbb
clc
pop
imull
mov
divl
xor
dec
mov
sbb
ds
xorb
mov
imulb
cmp
and
subl
clc
add
int
shrb
jge
push
xchg
lods
push
scas
add
sub
cmp
sub
sub
cs
jns
sub
mull
push
test
cmp
or
lahf
out
sbb
xlat
cmp
pop
and
sub
js
cmc
inc
xor
xor
or
ss
xor
std
mov
cmp
test
in
mov
idiv
xor
repz
sbb
jle
jg
in
ret
test
mov
cs
push
cltd
mov
test
xor
cmp
insb
pop
test
mov
sbb
fwait
xor
mov
lock
gs
sub
mov
mov
sub
cmp
inc
sub
stos
flds
in
mov
dec
inc
rolb
inc
sub
mov
adc
pop
dec
jle
int
scas
cmc
repnz
mov
out
fisubl
test
xor
dec
sub
daa
nop
sub
sub
xor
xchg
sub
xor
or
xor
cltd
cmp
or
dec
cmpb
ljmp
mov
jb
insl
push
sbb
popa
cmp
insl
sbb
pop
iret
pop
xor
mov
pop
adc
in
in
int
pop
xchg
mov
int3
mov
lock
add
xchg
inc
mov
sub
mov
jecxz
dec
out
pop
sub
jg
and
adc
fcoml
fs
imul
mov
or
in
pop
mov
cmp
ds
sub
sub
and
xlat
repnz
add
push
push
movsb
dec
cmp
fisubs
sub
xchg
inc
shll
cmpsl
pop
int
pusha
push
xchg
xor
stos
and
rclb
pop
sbb
xchg
imul
lods
gs
aaa
push
data16
cmp
mov
push
xor
in
fwait
dec
dec
add
xor
out
inc
test
lods
loope
push
xchg
dec
cs
outsb
sub
jle
test
xor
es
ret
aaa
sub
cmp
cmp
int3
jg
outsb
lods
test
mov
lds
or
int
dec
stos
adc
pop
push
adc
mov
mov
lods
xorb
pop
sub
xchg
leave
nop
adc
jbe
cmc
sbb
sbb
pushl
mov
in
cmp
xchg
sbb
in
pop
dec
sarb
mov
adc
popa
xor
jle
mov
fucom
mov
jl
xor
sub
subb
or
das
shlb
test
xor
rdpmc
insb
addl
push
sbb
xchg
into
negb
sub
sub
sub
fadds
xchg
pop
xor
sbb
or
iret
add
sub
xor
scas
cmc
pop
xlat
jl
xor
cld
sbb
push
popa
sub
test
jp
lea
pop
stos
ficoml
test
ss
dec
mov
jno
xchg
loope
xor
scas
fidivs
insl
mov
aaa
fstpt
inc
stos
add
jge
adc
mov
outsb
sbb
out
call
mov
cmpl
rolb
mov
repnz
in
push
xor
cmp
jge
leave
xchg
mov
cmp
inc
mov
adc
cmp
pop
push
hlt
mov
xor
dec
push
and
mov
jge
flds
scas
movl
jmp
add
lret
es
push
int3
push
ror
mov
mov
xor
cmp
add
pop
aaa
lcall
int
cmp
fistl
lods
cmp
mov
push
lock
xchg
loopne
jo
out
int3
pop
lahf
movsb
scas
pop
cmp
sub
and
mov
ja
rcrb
xchg
lea
out
cmp
test
and
push
mov
test
jb
push
rorl
dec
aaa
xor
psubq
rcrl
aas
sbb
sub
add
xchg
mov
hlt
test
xchg
fwait
mov
bound
and
or
out
pop
or
adc
mov
mov
add
xchg
repnz
sub
mov
and
imul
sbb
in
xor
dec
aam
popf
mov
sbb
sbb
mov
xor
in
or
cmp
jg
loop
and
mov
rdpmc
mov
pop
cmp
sub
push
jmp
mov
xor
ds
mov
jo
pop
push
lock
out
mov
or
and
mov
add
xchg
xor
jp
mov
xchg
push
cmp
daa
fwait
adc
test
pop
xor
int3
mov
pop
xchg
gs
cmp
inc
or
mov
cpuid
inc
std
sbb
repnz
push
adcl
pop
jle
enter
xchg
mov
push
cltd
xchg
test
je
mov
mov
or
xor
enter
xor
rcr
cmp
cmp
mov
mov
out
cmc
mov
and
orb
inc
js
mov
repnz
mov
push
stc
xor
fildll
icebp
je
mov
pop
int3
cmp
xor
mov
and
push
sbb
cs
and
push
sbb
xor
in
mov
xor
cmpl
sub
out
das
mov
xchg
mov
lods
sub
int3
xchg
xor
aaa
rclb
arpl
mov
or
out
push
sbb
or
inc
cltd
rorl
cmpsl
js
xor
cmpl
and
mov
sub
dec
sub
lahf
dec
jae
addb
icebp
adc
lea
ss
sub
arpl
mov
xor
mov
jge
and
in
push
push
cs
sub
outsb
ret
dec
pop
sub
push
adcl
xchg
aas
popf
xchg
in
cmp
test
call
in
int
mov
adc
xchg
lea
mov
jmp
xor
addr16
xchg
xlat
xor
mov
mov
fsubrp
add
adc
ret
mov
fwait
mov
adc
xor
mov
addr16
jge
hlt
test
xchg
mov
xor
icebp
std
mov
mul
xor
imulb
movb
clc
inc
out
sbb
sub
push
div
sub
pop
fcoms
cltd
push
push
xor
lret
cli
xchg
adc
out
mov
aaa
dec
adc
mov
icebp
sub
or
loop
xor
stc
jge
pop
inc
jecxz
cmc
push
jle
flds
mov
cmc
cmpsb
pop
xor
mov
movsl
mov
add
int
repnz
cmp
ljmp
jns
rorl
mov
xor
mov
aaa
js
push
add
pop
and
sahf
add
xor
mov
sti
out
xor
insl
inc
push
or
inc
dec
addr16
xor
xchg
lds
dec
subb
ds
mov
sub
adc
jle
push
or
push
sub
mov
or
fsqrt
mov
push
leave
mov
push
dec
fists
push
xor
inc
mov
inc
xchg
sub
sbb
adc
jmp
adc
xor
cwtl
and
xor
adc
sub
dec
dec
pop
sub
mov
sbb
xor
imul
push
test
sarb
jge
popl
push
jbe
sub
sub
sbb
jp
pusha
cmp
and
andl
pop
sub
loopne
leave
push
out
mov
xor
mov
and
or
subl
jns
call
loopne
test
inc
imul
addl
adc
inc
sub
sub
dec
mov
shll
mov
mov
in
push
inc
enter
out
mov
mov
sub
xorl
loop
sub
cltd
cmp
xor
xor
pop
cmp
jle
clc
jp
nop
lods
aad
jge
cs
mov
lods
inc
cmp
sbb
cmc
push
dec
pop
or
jmp
adc
xor
nop
rorl
xor
cs
mov
ss
pop
ss
xor
xor
fidivl
int
xor
cmp
mov
cli
pop
xor
dec
test
push
imul
leave
adc
push
sub
mov
inc
addl
sub
lret
scas
loopne
mov
movsl
and
out
loop
fcomps
and
push
adc
dec
stos
mov
mov
lret
ret
pop
push
int
dec
lock
mov
sbb
cmpl
clc
insw
repnz
mov
cmp
pushf
push
and
cmpb
mov
mov
aam
xchg
loop
cs
cli
stos
or
and
cmp
jo
es
push
sub
mov
sub
into
and
shrl
mov
xchg
push
test
in
cmpsl
mov
fstps
push
jle
out
xchg
mov
push
sub
xchg
or
into
push
sub
jnp
xor
sbb
pop
sahf
aad
sbb
xchg
sbb
sahf
inc
cwtl
outsb
test
out
cmpsb
adc
mov
xor
xor
push
sub
fisttps
fcmovu
sbb
cmpsl
daa
jecxz
mov
mov
jns
jo
or
test
mov
cmp
imulb
sahf
jmp
mov
sbb
cmp
jl
mov
ja
push
xor
and
dec
mov
out
add
dec
xor
bound
xchg
in
std
mov
out
xor
fs
cmp
icebp
leave
push
icebp
gs
xchg
sahf
jp
fstps
cmp
jae
add
popa
or
fisttps
in
jmp
mov
in
stos
fst
dec
push
sub
mov
jl
sub
ficoms
xor
xchg
daa
fwait
adc
mov
mov
test
pop
scas
xor
test
mov
mov
add
addl
push
lahf
cs
test
iret
imul
jns
cmp
mov
jns
es
mov
mov
add
cmp
cmp
jnp
mov
jp
mov
jp
xor
sbb
inc
test
cmp
xchg
movsb
push
mov
mov
daa
in
ret
test
sbb
push
or
lea
xchg
lahf
inc
mov
test
mov
or
out
xor
push
adc
jnp
imull
ja
cmp
sbb
aad
cmp
mov
movsl
xchg
xchg
sbbb
jp
fidivrs
inc
or
out
mov
test
std
mov
cmp
cmp
sbb
mov
sub
inc
popf
inc
sar
std
stos
xor
or
filds
je
sahf
sub
inc
js
sub
pop
and
xchg
add
mov
cmp
pop
mov
xchg
cwtl
mov
inc
call
cmpsl
into
jge
das
sub
add
je
xchg
mov
cmpsl
mov
out
xchg
sub
daa
inc
pop
push
sbb
inc
push
fildl
pop
stc
push
xor
lcall
inc
les
jno,pt
inc
jnp
arpl
ret
cs
daa
adc
insb
lock
and
sub
outsl
mov
test
adc
xor
jae
je
loope
jo
sub
ss
imul
fprem
cmp
mov
xor
jl
xor
test
test
push
sbb
cmpsl
sub
test
mov
jno
popa
push
pop
xor
test
jecxz
jp
xlat
xor
jns
dec
sub
xor
scas
stos
sub
xor
inc
add
cs
mov
lods
inc
push
lret
ds
test
jmp
add
pusha
int
pop
sub
je
fcmovnb
push
xchg
mov
xor
mov
mov
int
test
insl
adc
inc
xchg
sbb
negl
and
test
cmpsl
cmp
push
mov
inc
dec
adc
dec
ds
addl
adc
sarb
in
cmp
xor
mov
sub
in
mov
hlt
lods
icebp
lods
and
inc
xor
xor
mov
xor
lds
repnz
popa
icebp
iret
mov
mov
xor
cli
jb
lea
xor
sarl
sbb
add
fistpll
pop
clc
rolb
fbld
mov
insl
stc
inc
dec
test
sahf
icebp
mov
test
sub
mov
int3
inc
xor
les
xor
sbb
mov
sub
add
xchg
cmp
or
push
lock
mov
xor
push
fistps
test
stos
mov
loop
xchg
sub
jge
cmp
cli
and
sub
cmp
xor
lea
mov
sbb
pop
mov
cmp
mov
sub
sbbb
mov
push
cwtl
jnp
and
xchg
aad
xchg
dec
xor
fnstcw
xchg
pop
sub
sbb
mov
fildll
mov
jg
mov
xor
imul
jns
inc
inc
jl
xor
add
mov
inc
xchg
sti
jg
and
popf
cli
aad
jo
or
je
pop
adc
shlb
mov
out
mov
sbb
cmp
xor
hlt
inc
jg
sbb
mov
dec
add
jne
out
js
scas
popl
push
mov
mov
insl
call
test
loope
xchg
jmp
mov
loopne
lock
jle
cmp
addb
dec
xor
mov
stos
fldcw
mov
xor
outsb
out
inc
clc
xor
mov
mov
stc
mov
addb
mov
std
push
push
xor
or
inc
mov
bnd
cmp
jbe
mov
sub
push
sub
cwtl
sub
dec
xorl
es
scas
and
addr16
or
jl
cmp
stc
cmp
nop
xchg
or
in
mov
jae
sbb
xor
mov
mov
imul
xor
inc
push
mov
js
pop
jle
or
sub
inc
orb
fidivs
push
mov
inc
daa
add
sbb
movb
out
jnp
adc
cmp
outsl
mov
imul
testl
outsb
leave
sbb
xor
inc
aad
sbbb
daa
mov
dec
das
mov
pop
cwtl
xor
xor
push
popa
sub
or
scas
cli
mov
cwtl
sbb
pop
xor
cmp
push
cmp
xor
push
es
daa
adc
xor
adc
mov
mov
fidivs
xor
dec
rcll
and
push
sbb
and
ds
scas
cmc
rclb
xor
es
jo
xchg
sbb
xor
xor
xor
outsb
xchg
std
sbb
stos
pop
xor
push
cmp
daa
xor
sub
or
cmpsb
xor
out
mov
pop
test
cmp
repz
xor
jmp
aaa
cli
pop
xor
and
mov
lret
xor
push
clc
repz
and
outsb
jle
cs
out
and
xor
adc
adc
ret
daa
mov
js
xor
es
adc
jnp
sub
fnsave
ss
sub
std
pop
cmpsl
cmpsb
push
jp
scas
push
xor
mov
cmp
roll
xchg
jl
xor
cmp
push
in
sahf
scas
sbb
cmp
repnz
mov
scas
sbb
stc
xor
mov
adc
xor
inc
or
and
cltd
push
xor
xor
or
pop
stc
ljmp
imul
xchg
ret
lahf
in
sub
or
adcl
cmp
xor
es
cmp
ss
jecxz
lods
cmp
pop
fwait
aaa
jg
nop
jecxz
cltd
mov
push
into
pop
inc
push
pushf
xor
cwtl
mov
ret
xor
and
sbb
push
aas
jge,pn
mov
xor
pop
mov
xor
inc
cs
lcall
xor
push
clc
mov
mov
xchg
sahf
cmp
pop
test
inc
mov
leave
ret
and
cmc
aas
pop
jne
pop
into
je
fcompl
lcall
movsb
cld
mov
arpl
ds
pop
ja
jmp
pop
ja
jmp
xchg
out
mov
push
mov
sbb
adc
ret
cmp
cltd
in
sbb
xchg
dec
out
xor
lret
fmul
mov
hlt
fcom
in
sbb
mov
sub
test
xchg
out
out
sti
arpl
fsincos
in
jp
pop
fcoms
xor
jno
or
cs
mov
mov
inc
test
je
movsb
jmp
shll
mov
je
cs
and
ja
clc
xor
testb
dec
push
or
loop
test
jns
xor
iret
repnz
add
xchg
xchg
pop
arpl
ds
pop
ja
jmp
xchg
sub
les
in
data16
xor
add
loope
dec
outsl
cmp
or
push
in
pushf
adc
inc
aad
mov
fucomp
pop
clc
or
fwait
lock
arpl
aas
cmc
je
repz
cltd
movsl
aas
cmc
je
repz
cltd
movsl
push
xor
ljmp
sub
dec
xorb
xorb
call
cmpsb
rcpps
adc
xor
loope
xchg
pop
ja
jmp
pop
ja
jmp
pop
ja
jmp
cmpsl
mov
repnz
ds
pop
ja
jmp
pop
ja
jmp
pop
ja
jmp
pop
ja
jmp
pop
ja
jmp
pop
ja
jmp
and
in
pop
ja
jmp
pop
ja
jmp
mov
das
fstl
xchg
inc
xchg
movsb
in
fwait
jmp
xor
test
arpl
ds
mov
int
adc
insb
test
btrl
ja
jle
cmp
mov
ds
jne
or
rcrb
js
cmpsb
movsl
dec
popa
sahf
repz
shlb
test
icebp
arpl
ja
jmp
xchg
es
lods
jb
arpl
ds
pop
ja
jmp
pop
ja
jmp
pop
ja
jmp
pop
ja
jmp
pop
ja
jmp
pop
ja
jmp
pop
ja
jmp
pop
ja
jmp
pop
ja
jmp
pop
ja
jmp
pop
ja
jmp
pop
ja
jmp
pop
ja
jmp
pop
ja
jmp
pop
ja
jmp
pop
ja
jmp
pop
ja
jmp
pop
ja
jmp
pop
ja
jmp
pop
ja
jmp
pop
ja
jmp
pop
ja
jmp
pop
ja
jmp
pop
ja
jmp
pop
ja
jmp
pop
ja
jmp
pop
ja
jmp
pop
ja
jmp
pop
ja
jmp
pop
ja
jmp
pop
ja
jmp
pop
ja
jmp
pop
ja
jmp
pop
ja
jmp
pop
ja
jmp
pop
ja
jmp
pop
ja
jmp
pop
ja
jmp
pop
ja
jmp
pop
ja
jmp
pop
ja
jmp
pop
ja
jmp
pop
ja
jmp
pop
ja
jmp
pop
ja
jmp
pop
ja
jmp
xor
inc
dec
adc
and
fdivs
out
xor
out
inc
jno
lcall
inc
or
sbb
les
outsl
movsl
jns
jns
inc
imul
jmp
mov
mov
adc
jne
data16
sbb
gs
test
stos
jle
adc
cmpsl
ss
mov
lcall
inc
and
mov
iret
outsb
xchg
popf
adc
xchg
shll
je
das
test
test
scas
or
and
pop
jg
push
pop
add
adc
xor
shrb
cmp
push
pop
jl
pop
push
js
psubd
jp
lret
mov
mov
pushf
js
aas
rolb
call
add
xor
mov
enter
pop
outsb
xchg
loope
mov
mov
xor
cld
mov
data16
mov
mov
bound
mov
int
push
sbb
and
lds
rclb
pop
sub
push
fstps
fcmovbe
sbbb
dec
and
mov
mov
sub
nop
xchg
and
in
pop
mov
dec
addr16
call
pushw
sarb
lea
or
pusha
push
sub
sub
lea
sbb
jp
xchg
sbb
mov
fdecstp
mov
insl
mov
ret
aam
or
loope
repnz
cmp
pop
iret
sub
add
xchg
mov
pop
mov
js
cmp
call
mov
jno
es
xchg
mov
insl
mov
lock
out
and
std
sbb
fistl
pop
in
cmp
aas
lods
sbb
adc
ds
jp
or
jmp
test
lea
dec
dec
stos
into
pop
out
fs
arpl
dec
add
icebp
push
lret
test
jle
and
push
lcall
jge
jbe
pop
std
jbe
fidivrs
dec
and
loope
and
mov
mov
xor
aad
or
jnp
jne
scas
adc
push
adc
divb
dec
mov
sbb
xor
in
outsl
out
mov
testl
cwtl
or
ds
and
faddl
loop
inc
sti
xchg
xchg
ljmp
push
xor
outsb
out
lea
daa
push
sub
roll
lods
sti
clc
push
inc
shll
xchg
push
inc
loopne
or
xchg
or
cmpsb
push
inc
sub
pop
adc
mov
jl
loop
xor
add
push
pushl
sahf
negl
mov
jge
cwtl
xorb
in
mov
pop
outsb
rep
and
test
lds
sti
xor
jne
mov
cmp
jns
aas
je
sub
insb
xchg
pop
rcrl
into
adc
jo
test
cmp
insb
add
mov
ds
jne
inc
hlt
pop
push
leave
test
fisubs
inc
and
push
sbb
adc
cmp
dec
inc
js
jne
adc
lret
stos
adc
loopne
or
mov
in
jmp
dec
push
outsl
adc
cmp
xchg
ja
cmpsl
icebp
in
ss
test
mov
xor
clc
addr16
xchg
pop
jns
inc
cmp
push
fnsave
pop
stos
mov
fidivrl
mov
stc
idivl
sub
call
mov
ja
mov
jae
jb
jp
rolb
repnz
xchg
je
pushf
inc
in
mov
lahf
aam
scas
jge
mov
aad
je
add
outsl
xor
or
in
dec
xchg
aam
push
mov
and
xor
and
xor
and
mov
pusha
leave
lcall
fnstenv
pop
jp
pop
pusha
aad
xchg
cmp
jne
xchg
mov
fistpl
fnstsw
mov
mov
mov
lds
sbb
xchg
in
jp
sbb
adc
and
cmp
sub
xchg
lea
enter
lret
stc
mov
lods
push
sbb
decl
imul
xchg
adc
aas
clc
flds
lahf
sub
mov
cmpsb
pop
inc
sbb
bnd
xchg
sbb
lret
dec
ss
xchg
mov
fistpll
dec
mov
adc
test
flds
sbb
pop
fdivrs
cmp
scas
mov
rcll
rorb
push
inc
mov
push
daa
cld
gs
xchg
sub
jne
fwait
mov
fs
aad
clc
xchg
lcall
jg
sub
hlt
mov
data16
dec
outsl
lods
push
lock
cmp
int
clc
push
xchg
push
inc
mov
dec
mov
imul
xor
rolb
mov
fsubp
sbb
pop
lods
dec
mov
mov
mov
add
and
cmp
jno
popf
leave
xchg
jo
sbb
cmpsb
xor
pop
and
cli
lcall
adc
cmp
or
out
shrl
stos
push
jp
mov
jp
gs
mov
in
pop
arpl
inc
adc
adc
aad
data16
mov
popa
cmpsl
jmp
mov
xor
push
test
imul
add
mov
stos
xor
imul
jmp
pop
loop
adcl
cs
jmp
jp
pop
jl
adc
sahf
clc
push
sub
dec
cmp
es
add
xor
test
out
mov
mov
movsl
mov
sbb
inc
inc
mov
cmc
adc
push
ficomps
pop
leave
test
ret
iret
popf
test
push
jns
repz
mov
or
add
mov
push
mov
addl
sub
and
mov
js
repnz
fstps
je
jo
xor
dec
sub
ja
xor
ret
jecxz
fisubs
fwait
inc
mov
dec
jecxz
jbe
pop
lret
xchg
inc
jl
mov
jecxz
stos
clc
mov
shll
mov
mov
sbb
pop
das
mul
lret
push
adc
fisubl
mov
in
mov
jg
jno
cmc
dec
inc
shll
xchg
mov
dec
pop
into
cmp
call
fisubrs
jno
mov
xlat
xlat
push
fcos
ja
jle
outsb
inc
lret
or
fnsave
mov
hlt
stc
cmp
fisubrl
outsl
jle
lds
fistpl
cwtl
pop
pop
fmul
jge
xchg
dec
mov
stc
nop
inc
or
int3
jle
shrl
ja
clc
add
xor
shlb
mov
pop
push
cmp
sub
or
enter
jnp
inc
inc
mov
jns
xor
sbb
out
jmp
pop
or
into
popf
add
imul
andb
inc
xchg
js
lods
xor
push
and
xchg
lret
mov
mov
testl
sub
jp
rorl
add
cmp
xor
rolb
icebp
imul
jns
sbb
in
shll
sub
pop
inc
movsb
aam
imul
lcall
sbb
sbb
lods
stos
out
cmpxchg
xchg
addps
add
or
add
outsb
push
jbe
push
jns
mov
jg
sub
and
mov
in
xchg
xchg
mov
sub
or
sti
add
imul
adc
xchg
xor
shll
movsb
addr16
in
sub
scas
or
add
mov
adc
gs
lcall
loope
cs
sarb
repz
aaa
loopne
dec
in
insb
and
fs
std
mov
sub
jmp
cs
jae
into
jnp
sub
mov
adc
and
pop
mov
and
scas
xor
adc
sahf
imul
and
dec
ret
cmc
xlat
push
jg
jb
lret
xorl
je
mulb
xchg
or
mov
lret
ficoms
popf
pop
test
adc
int3
sbbb
outsb
adc
push
xchg
mov
pop
stos
dec
dec
mov
ljmp
push
cli
mov
pusha
mov
das
jo
les
imul
sbbl
mov
cmp
inc
cmp
lods
and
pop
pop
jp
push
jmp
nop
xlat
mov
pop
pop
stc
adc
imul
jns
mov
repz
lds
push
popa
je
jo
mov
rcr
popa
sbb
test
dec
dec
imul
push
shr
xchg
add
popf
xchg
jl
ja
lock
jae
xlat
or
push
adc
fimull
stc
jecxz
lea
psubq
test
sub
stc
das
in
lea
push
imul
bound
adc
mov
pop
and
add
sahf
xlat
jbe
lret
loop
scas
call
insl
stos
and
dec
xchg
fucomp
test
data16
pusha
cmc
sti
pop
push
sub
or
xlat
icebp
sbb
add
pop
lret
int3
cmc
push
jmp
xchg
xor
lods
aam
mov
mov
data16
insb
les
in
push
mov
pop
fsub
jns
out
shrl
jae
lea
fimuls
cmp
pop
test
xor
insl
aam
std
adc
cmp
add
and
aad
jge
cmp
movsb
adc
and
add
dec
xor
neg
std
div
outsl
xor
adc
ret
sahf
jnp
mov
lods
mov
mov
mov
jp
outsl
inc
push
jb
in
mov
outsl
xor
jecxz
leave
inc
sarb
hlt
push
addb
add
xor
sarl
dec
add
sub
jle
pop
push
ror
push
cmp
stos
mov
xchg
mov
movsl
scas
cld
mov
push
add
ret
sbb
mov
scas
outsb
jne
shl
test
in
adc
jg
cs
jb
fists
push
mov
xor
loope
mov
in
xchg
cmp
movsl
sbb
inc
lods
mov
adc
mov
bound
xchg
icebp
es
pop
and
lock
xor
pushf
add
add
cs
lcall
mov
ss
cmpb
xchg
xchg
xchg
mov
jp
push
and
pop
inc
mov
pusha
shlb
xchg
lahf
jmp
jp
sahf
cli
data16
es
sbb
adc
xor
rcrb
mov
and
adc
mov
add
xchg
cli
dec
xchg
outsb
dec
lea
mov
xchg
xchg
inc
xchg
test
pusha
test
repnz
jae
popa
clc
inc
push
xor
jp
jns
xchg
inc
in
and
lahf
pop
lods
xchg
sub
jb
xchg
dec
aas
into
fcomp
cmpxchg
dec
cs
jns
cmpsl
divb
lds
cli
pop
aam
loope
ficomps
stos
push
jae
int
mov
ss
and
or
mov
call
sbb
cltd
jp
repnz
pop
sub
cli
lahf
and
sub
roll
add
adc
jg
in
jne
mov
iret
xchg
sbb
or
lret
sub
dec
fmull
xor
sarl
lods
sahf
dec
push
cmp
push
addb
or
call
stc
mov
jle
xor
push
popa
idiv
cltd
lods
sub
push
ss
mov
cmp
push
loop
push
add
jp
cmc
nop
and
cmp
loopne
push
or
sbb
cmpsl
mov
mov
cmpsl
lock
push
enter
std
iret
lock
cmp
out
pop
cmp
stc
cmp
mov
mov
inc
dec
sbbl
push
xor
aad
pop
loopne
negb
jns
inc
sarl
jecxz
jno
mov
daa
xchg
lods
addr16
pop
adc
popa
mov
inc
mov
and
or
sti
jg
mov
cltd
xchg
fdivs
dec
loop
jns
pop
insl
fidivrs
jb
call
cmp
sbb
inc
mov
pop
cs
xor
ret
in
xchg
xor
cmp
scas
push
pop
fidivrl
nop
mov
jo
xchg
rcl
lret
sahf
pop
pop
and
mov
popa
out
mov
shll
test
sbb
rep
xor
in
or
xor
mov
or
push
cwtl
xor
push
xor
cltd
mov
test
dec
hlt
mov
sbb
cli
sub
push
insb
popf
xlat
jmp
fistps
popf
call
pusha
ret
inc
js
stos
in
push
push
lock
inc
cltd
mov
dec
shrl
pop
jo
inc
dec
lock
dec
mov
and
sbb
pushf
mov
mov
out
jmp
loope
mov
sbb
pop
ljmp
call
pop
mov
test
fadd
into
push
push
das
push
adc
jnp
rclb
test
xchg
and
mov
out
dec
aam
shlb
cltd
push
fnsave
pop
mov
mov
pop
inc
mov
jbe
mov
push
push
mov
add
lock
rsqrtps
rcll
mov
test
mov
cltd
adc
lahf
out
or
mov
stc
mov
xchg
dec
mov
jb
xor
out
clc
add
iret
outsl
das
loop
cmc
xorb
cmp
adc
leave
shl
mov
cwtl
and
rorl
loopne
mov
and
mov
insb
mov
pop
push
add
and
scas
jle
enter
jo
inc
cmp
and
rorl
xor
mov
andb
jae
sarb
adc
sub
and
inc
sbb
adc
ljmp
outsl
outsl
xor
aam
cmp
xchg
sbb
sti
mov
mov
inc
jns
xor
xor
icebp
inc
repz
or
nop
outsb
mov
aam
push
jl
into
icebp
and
loop
jbe
mov
mov
push
inc
add
push
push
or
sbb
or
int3
aad
add
mov
mov
sbbl
int3
pop
jno
dec
sub
icebp
xor
and
out
cld
xor
jp
movsl
enter
xor
outsl
sti
loopne
aad
mov
lahf
test
jl
mov
arpl
fxch
mov
mov
ds
mov
hlt
add
fisubrl
jge
adc
pop
orb
jne
pop
inc
clc
jnp
fcmovnb
jmp
mov
shll
out
jns
push
cmp
or
cmp
lods
pop
mov
push
inc
mov
addb
push
orl
sub
je
movsb
jp
decl
and
cmp
add
psraw
addl
mul
add
call
and
cmp
lea
icebp
lods
mov
push
imul
jnp
gs
fldenv
inc
sub
mov
lods
pop
or
lret
fucomi
adc
in
and
sbb
fcoms
inc
xchg
and
or
mov
aam
in
dec
ret
lcall
xor
fcomip
inc
icebp
pop
push
sub
mov
xchg
ds
inc
enter
cmpsb
inc
test
fs
ficomps
cmp
mov
mov
sub
xor
aam
daa
inc
lcall
ja
int
fbstp
test
lods
cmp
cli
and
cmp
mov
sti
bnd
lods
orb
inc
or
pop
or
ror
call
lret
adc
xchg
and
call
mov
and
or
jle
fcoms
cwtl
mov
push
adc
test
ljmp
inc
adc
iret
cmp
and
pop
je
in
and
and
dec
jle
and
mov
roll
xor
leave
shl
test
push
mov
gs
iret
dec
imul
jl
mov
xchg
pop
xchg
mov
mov
xor
add
jl
mov
mov
fsts
pusha
xchg
in
dec
lods
mov
xchg
cwtl
mov
out
or
aad
fiadds
popf
push
gs
mov
mov
ds
ss
add
sub
or
sbb
iret
test
sbb
lods
je
push
sbb
out
test
sub
xchg
loop,pn
mov
scas
mov
mov
cmpsb
lcall
daa
sahf
xchg
jl
mov
jp
lcall
bound
test
rolb
xor
cmp
lock
mov
xor
dec
xlat
js
ljmp
stc
mov
mov
mov
push
xlat
call
movsb
mov
js
sar
hlt
out
sarb
nop
sti
out
repz
ss
insb
xchg
jae
dec
cmp
cwtl
sbb
in
ljmp
out
push
ficoms
clc
inc
jae
or
popa
add
lea
push
xor
mov
mov
stos
inc
aaa
repnz
sub
mov
and
out
and
pop
and
xor
je
fstl
addl
in
inc
sbbl
lods
adc
adc
push
lea
dec
mov
adc
loopne
mov
push
mov
adc
inc
xchg
push
pop
cmpsl
push
ds
cmp
pushf
ret
popa
xor
daa
repz
inc
push
mov
pop
subl
loope
push
sbb
xor
andl
clc
ja
ljmp
dec
addr16
shll
mov
or
push
das
inc
xchg
dec
mov
dec
and
leave
fwait
mov
pop
cmp
out
sub
inc
js
leave
fldl2e
je
mov
fcompl
mull
adc
xchg
sbbl
add
or
ror
popa
xchg
aas
push
popf
mov
loopne
std
rcrb
push
mov
pop
mov
sbb
scas
lret
xchg
insb
pushf
nop
and
mov
lret
cpuid
push
dec
jecxz
call
aad
jae
sbb
cwtl
stos
sar
jne
dec
loopne
insl
hlt
jl
dec
shl
lock
jnp
inc
sub
mov
in
cmpsl
daa
lcall
dec
fwait
push
aas
cwtl
clc
int3
inc
jp
dec
add
dec
jo
fcomps
cmp
mov
arpl
add
je
dec
outsb
rorb
xchg
sbb
sub
mov
cmp
jae
imul
sti
mov
mov
stos
les
out
add
lods
lock
mov
ds
add
inc
jle
or
xchg
mov
jne
dec
push
or
out
sub
andb
mov
inc
cmp
test
stos
popa
xor
mov
bound
or
nop
frstor
or
cmpsb
mov
mov
xor
loope
divb
test
and
aas
adc
xor
test
jmp
jmp
je
outsl
test
out
mov
dec
lock
insl
and
cmp
push
mov
movaps
andl
rcrb
mov
xchg
adc
jns
sub
or
mov
pop
popl
push
repnz
cli
mov
cli
imul
cmp
jl
cmp
es
out
adc
xor
lea
jecxz
aad
sbb
xor
int
aaa
addr16
int
push
push
aad
xchg
fwait
sbb
fs
jbe
mov
mov
movsb
sbb
andl
stc
scas
jnp
jecxz
sub
sahf
mov
cmp
cmpsl
dec
dec
ficompl
loop
jge
out
inc
lcall
adc
cld
test
cmp
adc
flds
insl
or
hlt
shll
test
mov
lock
scas
sbb
xchg
mov
push
dec
fs
std
sub
cmpsb
mov
enter
rolb
clc
repnz
cmp
and
or
mov
sub
filds
sarb
mov
loop
aad
std
mov
add
mov
in
dec
add
ja
ret
mov
pop
pop
inc
pop
in
in
cmpsl
and
cmpsb
jmp
enterw
dec
push
bound
loop
call
pop
jne
enter
adc
sbb
jb
movsl
push
ss
push
mov
jl
push
jp
aam
mov
movsb
popf
shll
loop
mov
in
fsub
inc
bound
jne
dec
jnp
xchg
call
and
cmp
ds
test
nop
push
in
dec
sub
out
sbb
div
or
cmpsb
imul
imul
add
and
dec
mov
int3
xchg
cmc
xchg
pop
jge
data16
cmp
arpl
sbb
stos
test
sub
jo
fidivl
jns
sub
daa
and
mov
call
sub
add
loopne
call
xor
pop
push
xchg
pushf
shl
xchg
inc
sub
clc
push
jne
ja
sub
inc
call
inc
push
out
add
mov
mov
adc
cmpsl
jg
push
adc
imul
pop
ficompl
or
cs
cli
inc
cmpsl
fdivr
sub
movsb
cmp
mov
and
imul
loop
in
in
aas
in
mov
push
jae
jmp
jbe
fisubrs
mov
sbb
adc
mov
popa
jmp
xchg
dec
fucomi
or
jp
mov
and
rcrb
xchg
das
mov
jbe
dec
addr16
push
xor
outsl
scas
mov
shlb
rcll
adc
hlt
repz
mov
shrb
loopne
cld
push
cmp
mov
mov
add
fistpll
enter
or
and
mov
dec
sub
rcrb
xlat
mov
stos
call
stos
loopne
and
dec
mov
mov
negl
das
outsl
mov
sbbb
dec
and
pop
or
adc
jl
push
or
cld
cmp
popf
mov
and
lret
or
push
stos
xchg
outsl
in
fisubs
mov
lahf
cld
mov
fcmove
cmpsl
cwtl
test
pop
pop
int
sub
sub
dec
inc
lods
fsubs
adc
scas
inc
mov
lds
cmp
cmp
sbb
inc
mov
lock
orl
les
into
out
outsb
fsts
push
or
xchg
jge
adc
fstpl
xor
mov
das
push
sar
or
imul
xchg
inc
sbb
jecxz
xchg
mov
repnz
out
sbb
cmp
cmp
pop
fldenv
sbb
mov
daa
push
lahf
push
int
sbb
stos
testb
aas
imul
sbb
and
loopne
mov
xchg
cmp
outsl
imul
xchg
and
xor
dec
cmpsb
inc
xchg
and
adc
xchg
jp
dec
jnp
int
push
psrld
cmp
xchg
movsl
ss
andb
mov
inc
xor
lret
or
in
jne
push
ror
lock
sbb
ja
mov
push
hlt
pushf
std
scas
xchg
mov
fs
pop
ret
cmp
or
iret
pop
inc
add
stos
ret
pop
dec
jl
je
lock
shrl
jl
jle
adc
sbb
iret
sbb
xor
cmp
ljmp
out
or
mov
and
adc
cmp
add
jns
mov
stos
dec
icebp
movsb
gs
cmp
notl
mov
cwtl
inc
and
add
lds
sub
pop
pop
push
cwtl
adc
ljmp
adc
jp
dec
sbb
xchg
mov
cmpsb
jmp
sub
arpl
xchg
pop
mov
mov
sahf
jbe
cmp
sarl
push
xorl
bound
adc
ja
and
dec
dec
out
mov
push
loop
and
loope
cli
sarb
repz
inc
dec
jo
push
add
nop
loopne
gs
sbb
cmp
add
xchg
add
push
xorl
mov
fcompl
mov
divl
sbb
push
push
mov
sub
and
roll
fimuls
mov
or
aam
dec
out
adc
incl
lret
cmpsl
ret
fsubrs
into
xchg
orl
add
mov
mov
outsb
out
stc
dec
das
and
push
jmp
push
mov
push
lret
mov
out
call
and
popa
lea
adc
mov
or
cmp
aam
pop
push
loope
scas
jb,pn
movsl
dec
les
dec
sbb
int3
fistl
cli
cmp
jnp
mov
cs
dec
inc
push
push
sub
sub
test
adc
pop
mov
and
mov
stos
aaa
lahf
mov
sbb
fs
jmp
push
sub
cmp
loopne
dec
cli
fwait
outsl
ret
xchg
clc
sbb
cmp
cli
push
aas
cli
aam
mov
push
jne
xor
sbb
fistps
mov
shrl
dec
test
dec
push
test
inc
cli
inc
cmp
mov
push
mov
or
xchg
rcrb
out
outsb
in
in
mov
and
xchg
pushf
ljmp
jle
sti
pop
dec
xor
mov
mov
mov
movb
add
in
movsl
stos
pop
mov
xor
inc
pop
sbb
aaa
mov
sub
shll
xchg
xor
lods
mov
add
sbb
cmp
stos
xchg
outsl
movsb
and
cmpsl
inc
sub
adc
roll
dec
add
testl
xor
nop
mov
and
aad
cmp
sub
adc
jl
stc
andl
sti
lahf
cmp
xor
clc
movb
shll
xchg
sub
aad
add
mov
cwtl
pop
dec
push
cmp
adc
and
ss
mov
scas
mov
sbb
sbb
jg
imul
imulb
add
pushf
mov
cltd
jbe
sbb
test
outsb
addl
cmc
andl
jecxz
push
jge
inc
pop
test
out
and
add
jbe
stos
rol
dec
or
int3
mov
mov
out
clc
cmp
jecxz
leave
xchg
in
out
addl
xorl
or
sub
getsec
jecxz
fs
jno
xor
rclb
inc
sbb
sbb
fsubl
dec
inc
and
fcoml
nop
js
dec
push
mov
and
sti
fwait
nop
icebp
aaa
jnp
dec
inc
into
sbb
xor
sub
cmpsl
adc
push
add
cmp
cmpsl
aad
rcr
sbb
mov
orl
add
mov
in
movsl
fisttpll
mov
pop
mov
fidivrs
xor
adc
mov
xchg
xor
inc
fnstsw
sub
pop
cli
jno
dec
dec
xor
repz
repz
test
adc
add
nopl
icebp
xor
jge
nop
test
and
cltd
repz
and
into
aaa
nop
stos
in
mov
add
je
icebp
ja
in
cltd
sbb
stos
subl
scas
xorl
test
xchg
or
mov
fildll
push
mov
adc
xchg
cmpsb
lret
pop
cmp
rorl
cmpsl
in
push
pop
lea
lods
mov
mov
ret
ret
add
cwtl
xor
xor
mov
mov
add
movsl
sbb
mov
xchg
dec
mov
push
pop
fimull
test
roll
and
je
incb
xchg
es
mov
xor
sub
movsb
sub
test
cmp
dec
aam
std
in
push
out
clc
mov
mov
aam
sbbl
in
cltd
popl
and
push
insl
int
lahf
jns
xchg
or
and
mov
aam
shlb
gs
adc
mov
sbbl
push
xor
push
mov
bound
adc
hlt
inc
jb
sub
aas
cmp
stc
rcr
ja
mov
das
sbb
jp
mov
pop
mov
mov
fcomp
and
cli
outsb
cmp
stos
push
fistps
mov
inc
cs
xchg
push
cs
nopl
mov
inc
stos
notl
in
in
insb
shrl
loope
fldenv
out
add
jp
mov
pop
loopne
cmp
jle
lods
pop
xor
mov
into
sbb
bnd
xchg
mull
gs
push
and
es
rolb
mov
add
or
sbb
add
ds
inc
sti
and
insl
cmp
cmp
roll
pop
push
hlt
and
lret
xchg
mov
rolb
mov
and
sahf
lock
bswap
mov
push
ror
xor
stos
sub
fwait
ljmp
mov
shll
inc
jne
jmp
test
mov
and
adc
lds
pop
addr16
subl
mov
rol
sub
and
cmp
cmpsl
sbbl
scas
test
aaa
push
ret
lock
shr
push
adcl
rclb
out
clc
xor
mov
mov
inc
xor
shr
sub
xlat
pop
ljmp
cwtl
sub
pop
rorl
jo
das
cmp
pop
xchg
push
sbb
dec
xor
dec
mov
push
dec
pop
cmp
rolb
pop
inc
mov
enter
cmp
jne
in
ret
lahf
xchg
and
xchg
dec
mov
xlat
push
sarl
fldenv
mov
icebp
mov
icebp
cmp
dec
cld
jl
repnz
xchg
jns
cmp
push
lods
pop
mov
bnd
add
sbb
outsb
mov
insl
hlt
mov
imul
leave
pushf
push
call
insb
push
sbb
imul
std
adc
and
addr16
pop
int3
mov
ret
insb
pop
inc
add
lea
popf
adc
andl
incl
dec
dec
mov
rcrl
lcall
imul
out
cs
rorb
xchg
mov
jns
xor
in
and
sub
xchg
rorl
inc
xchg
aad
mul
mov
cmp
in
xor
fisttpll
dec
push
stc
sub
outsb
add
in
test
es
cmp
stc
stc
outsb
mov
add
fwait
cltd
pushf
xor
cs
nop
test
aam
sbb
mov
pushf
xchg
loop
mov
js
std
lea
into
std
nop
dec
pusha
lock
push
rep
cmp
sub
or
mov
and
lds
lret
aas
adc
sbb
in
daa
stos
push
shlb
and
pop
clc
je
mov
pop
inc
adc
divb
aas
rcr
flds
mov
sbb
test
mov
and
sti
mov
and
fwait
daa
je
faddl
cmp
add
push
sti
insb
dec
adc
xchg
aaa
pop
ret
and
pop
and
incl
loope
mov
dec
cmp
mov
push
je
sub
lret
or
jmp
sub
add
int
sub
jnp
das
and
push
sti
push
jg
cmp
int
aas
mov
cli
sbb
jnp
negb
aad
test
fnstcw
cltd
std
pop
loope
outsb
xor
test
or
ret
add
mov
xor
sub
mov
adc
shlb
pop
mov
in
xchg
sub
inc
push
imul
incb
mov
ret
fisttps
jae
dec
fmuls
push
test
mov
sub
ljmp
ss
cmp
dec
test
divps
ljmp
adc
popf
outsb
ss
aaa
fstpl
push
lods
cmp
sbb
dec
call
orb
xchg
inc
add
jnp
rorb
inc
call
leave
roll
les
shlb
ror
mov
rcr
cli
xchg
rcr
in
cmp
fldt
push
stos
icebp
ret
mov
popa
sbb
fisttpll
mov
or
cwtl
ret
xchg
push
cmp
rcrb
and
adc
fisttpl
adc
ret
mov
js
xchg
arpl
sbb
dec
adc
jecxz
mov
add
rep
es
push
or
jmp
in
sbbb
and
setno
std
popl
or
aaa
lock
mov
push
add
add
mov
cli
loope
adc
xor
inc
and
outsb
sahf
xor
mov
fldcw
jg
xor
scas
les
call
pop
rolb
inc
scas
xor
stos
jb
cmp
out
sub
xchg
jge
leave
mov
stos
xlat
jg
es
daa
adc
inc
xchg
or
push
jbe
mov
fs
and
jmp
or
mov
ret
mov
ds
pop
adc
jecxz
mov
add
sbb
aas
xchg
inc
ret
dec
and
iret
sub
or
dec
inc
cli
or
subl
outsl
mov
mov
dec
and
lcall
test
mov
mov
adc
ds
mov
aaa
cmpsl
stc
lahf
pushf
movsb
bound
xchg
sti
adc
inc
std
fcoms
jnp
popa
in
jecxz
lcall
popf
pop
mov
arpl
arpl
adc
or
fildll
push
inc
lcall
pop
adc
adc
fstpl
lods
push
adc
or
mov
jns
push
pop
in
pop
xor
bound
add
cmp
into
test
pop
stc
sbb
stos
cmc
and
push
fisttpl
add
mov
jne
ds
sub
jecxz
rdtsc
outsl
push
out
scas
dec
incl
mov
outsl
subb
daa
cmc
stc
sbb
jae
jl
pop
push
mov
mov
inc
shrb
mov
into
lret
and
xor
out
xchg
sub
rcrl
pop
inc
mov
insb
sub
insl
inc
add
push
dec
pushf
int3
pop
insb
adc
int
fnstsw
orl
dec
popf
mov
mov
ljmp
push
ret
in
push
mov
jns
in
jle
mov
fiaddl
fsubl
imul
jo
xor
or
ret
mov
mov
test
stc
cmp
pop
push
push
inc
insl
pop
dec
sub
fst
xor
movsb
dec
jg
mov
out
cmp
xchg
inc
cli
lea
fdivl
scas
mov
mov
dec
jle
push
mov
fwait
loopne
xor
mov
js
dec
repz
cwtl
out
movsb
xchg
or
push
fidivl
sbb
mov
scas
push
mov
gs
add
sub
sub
in
inc
cmpsb
adc
jne
push
rcrb
inc
cltd
cmc
inc
dec
push
sub
lcall
sbb
sub
xor
out
jle
dec
cmpb
or
xor
cli
loopne
pop
mov
std
push
insl
scas
push
pop
mov
sub
je
xchg
sbb
fdivs
mov
testb
enter
mov
out
insl
sub
fs
sbb
adc
xor
push
sub
pushf
insb
ja
out
add
ret
in
cmc
inc
int
mov
cmp
shrb
mov
mov
push
mov
aam
xchg
repnz
sbb
cs
cmp
push
add
testl
pop
and
data16
cmp
adc
or
inc
ficomps
int3
inc
aam
cmpsl
cmp
dec
pop
ss
xchg
and
jbe
mov
cmpsl
leave
hlt
cmp
or
jle
jmp
pushf
call
enter
flds
rolb
je
adc
mov
je
test
or
jb
mov
cmpsl
push
outsb
pop
aas
mov
sbb
out
add
inc
sub
repnz
loop
ret
bound
sbb
lock
cmp
aaa
outsb
bound
xchg
stc
and
std
daa
idivl
loop
out
push
mov
inc
das
sahf
jmp
jle
and
sbbl
sbb
add
rcr
movsb
cmp
mov
or
movsl
shlb
mov
sbb
stc
and
inc
test
cwtl
pop
and
adc
sub
imul
sub
cmp
aad
adc
in
aaa
xchg
rcr
jmp
pop
cmp
divb
ja
int3
shrl
jmp
or
cmp
dec
gs
lea
mov
jmp
xchg
cmp
cltd
inc
mov
int
mov
xor
or
in
adc
sub
sbbl
inc
stc
test
jno
mov
mov
ss
xchg
mov
mov
testb
sbb
sahf
leave
or
and
ds
bound
add
xchg
hlt
pop
sbb
movswl
pop
sti
sbb
xor
pop
pushl
sub
sub
jbe
mov
jmp
push
cmp
jmp
inc
pop
sbb
sbb
enter
fcmovnb
push
stos
xor
or
repnz
cmpsl
loop,pn
xchg
addr16
pop
fisttpl
in
fisttpll
or
bound
xchg
stos
cmpsb
sub
in
or
push
lock
cld
in
daa
jmp
in
mov
stc
movsb
test
jecxz
icebp
or
jecxz
jae
roll
shll
and
scas
mov
repz
insl
das
stc
pop
sbb
and
out
imul
jecxz
lds
shl
xchg
shll
repnz
rclb
data16
mul
imul
subb
xor
or
in
add
add
push
addr16
insb
sbb
cltd
pop
fistpll
stc
mov
push
iret
mov
inc
lret
scas
ds
xchg
mov
sbb
outsb
sub
pop
cwtl
push
dec
in
sub
push
jo
andb
std
sbb
mov
rcll
fimuls
adc
imul
rcrb
repnz
or
pop
popf
mov
test
call
mov
les
lea
inc
inc
movsl
and
push
pop
icebp
ficoms
gs
ss
iret
lods
popf
inc
jbe
sub
repnz
int
jecxz
xchg
movsl
ret
xchg
fildl
cmpsl
xchg
shrb
xchg
adc
push
sub
test
xchg
test
or
push
adc
cltd
das
jle
lcall
jbe
cmp
ret
pop
scas
cmp
lahf
pop
xchg
pusha
fcoms
repnz
xchg
dec
mov
mov
push
loop
xor
dec
pop
xor
push
jnp
pushf
jnp
adc
cwtl
les
into
fnstenv
push
out
pushf
mov
subb
imul
lret
dec
push
daa
push
rcr
jbe
add
mov
lea
jnp
movsl
ficompl
and
inc
ljmp
lcall
jle
leave
mov
inc
pop
cmc
mov
push
pop
or
out
adc
iret
mov
repnz
sub
les
sub
or
mov
lea
out
clc
and
stos
sbb
push
mov
insb
je
subb
pop
push
mov
fstpl
inc
and
fninit
dec
imul
sbb
xchg
movl
test
inc
adc
fstpt
stos
add
push
xor
mov
rolb
dec
sbb
inc
or
decl
into
xor
fstp
xchg
cmp
pop
inc
sarl
ret
jae
adc
push
jmp
xor
fwait
mov
je
fmul
out
cmp
xchg
test
inc
ret
adc
sbb
es
push
cld
push
inc
pusha
jo
inc
xchg
jle
das
mov
xlat
shlb
xchg
les
push
dec
aad
inc
stc
test
test
loopne
and
test
daa
mov
push
in
orb
or
ljmp
jp
sbb
scas
inc
repz
mov
bound
nop
sub
outsl
add
das
or
arpl
out
negb
mov
push
pop
xor
bound
sbb
and
push
sarl
add
incb
and
andb
push
jl
dec
xchg
jl
and
jge
push
sub
fisttps
jge
scas
xchg
cli
cmpsb
cld
push
ljmp
fiadds
add
sub
es
inc
test
push
inc
sub
push
ret
jl
and
pop
out
mov
sub
sbb
fcomps
std
push
rolb
stos
cld
aam
mov
sbb
fadds
leave
andl
add
pop
imul
popf
sub
or
fninit
mov
xor
push
push
sbb
inc
jp
lret
xchg
xchg
cmc
mov
xor
pop
fisttpl
dec
push
fisttpl
rolb
sbb
cmp
repnz
bound
push
in
fs
ds
push
sub
cld
push
clc
sti
or
jns
inc
push
mov
js
cmc
rcrb
loop
cmp
push
out
pushf
aam
push
fwait
sbb
lahf
mov
icebp
sbb
mov
mov
dec
shlb
xor
pushf
and
icebp
xor
test
test
cs
in
cltd
mov
pop
mov
sar
push
jge
cmp
mov
and
popa
add
push
add
cmp
add
sti
pop
mov
ljmp
testb
cmp
int3
jno
mov
inc
mov
cmc
inc
pushf
pop
pop
repnz
pop
push
std
dec
cmp
jmp
lcall
pop
mov
movsb
mov
push
push
jb
sub
jl
mov
mov
jge
or
dec
mov
sarl
test
push
test
cltd
in
add
xchg
mov
sbb
cli
xchg
inc
jmp
or
in
inc
aam
cmc
jecxz
pop
mov
lahf
jo
mov
lret
mov
sarl
sub
rol
aas
test
xchg
mov
jp
pop
adc
inc
pop
lds
pop
xor
cmp
cmp
dec
out
bound
aad
jg
mov
loopne
ficoms
pop
adc
dec
scas
stos
fidivrs
test
push
push
ja
mov
mov
jns
xchg
xchg
pop
sar
sarl
and
and
mov
cltd
pop
mov
shlb
jmp
xor
xchg
fstps
mov
xor
insb
rolb
mov
push
call
sbb
clc
fcoms
mov
gs
loop
in
pop
int
xor
pop
js
pop
ss
jae
or
mov
ret
mov
jno
jb
nop
push
xor
mov
jns
sbb
jmp
pushf
add
mov
xchg
in
fmul
or
inc
jne
mov
imul
push
shrl
mov
mov
sub
xor
fcmovnu
mov
or
inc
je
jmp
fstl
cmp
xor
test
xchg
sub
shr
pop
int
pushf
mov
pushf
mov
push
dec
dec
dec
jb
js
lret
push
je
pop
push
hlt
xor
ds
cmpsb
xor
pushf
push
jb
cltd
stos
bound
jns
ja
mov
lock
inc
mov
push
int3
pop
lcall
pop
call
das
mov
dec
sbb
xchg
pop
pop
stc
dec
cmc
or
into
out
pushf
dec
cmp
fsts
rorb
mov
negb
jno
inc
cmp
push
call
testb
lret
push
enter
lcall
cmpsl
rclb
and
jge
xor
loop
insb
push
cmp
mov
loopnew
lods
ljmp
jbe
pop
mov
xor
mov
lods
inc
cmp
mov
gs
mov
jo
ljmp
sub
cmp
mov
shll
mov
lds
push
lds
repz
or
mov
push
cltd
mov
xchg
cltd
out
dec
inc
fimuls
xchg
aad
out
sbb
and
cltd
or
xchg
cmp
test
pop
sub
shll
inc
add
sub
and
mov
mov
push
dec
cmpsb
xor
adc
lods
outsl
dec
dec
push
mov
push
and
and
mov
xor
dec
fisubrs
orl
lds
mov
in
addr16
cwtl
pushf
aas
bswap
shll
je
jbe
pusha
mov
pop
ja
idivl
jbe
repz
adc
ja
xorl
leave
movsl
dec
pop
stos
arpl
lcall
gs
cmp
pop
cmp
mov
stos
xchg
fwait
mov
das
test
ret
and
inc
decb
test
pmuludq
xchg
loopne
sti
xchg
jo
pop
xor
cmp
and
lods
pushfw
xlat
gs
insb
subb
or
mov
aas
hlt
sbb
pop
jmp
jle
sbb
aas
shr
pop
insb
negb
sub
aam
arpl
add
cltd
cmp
xchg
sbb
jp
into
nop
add
shr
ss
push
out
mulb
xchg
out
jb
shll
imul
adc
loopne
mov
cmpsl
jmp
das
jnp
push
pop
mov
pop
sub
cmpsl
mov
out
popf
add
daa
fstpt
cmpsl
jmp
cmp
inc
je
dec
push
push
lods
push
or
mov
mov
out
inc
sub
lods
jae
sbb
sti
jnp
add
xchg
nop
pop
dec
clc
xchg
and
pop
mov
add
mov
pop
out
in
negb
push
lods
sbb
aas
add
lahf
inc
movd
lds
das
clc
jnp
fsubl
cmp
adc
dec
xchg
mov
fnstcw
xchg
sbb
jnp
jae
mov
dec
lods
ja
inc
fistpl
inc
push
mov
std
inc
fwait
inc
in
cmp
adc
popf
xor
and
jp
movsb
adc
daa
pop
ret
push
movsb
shl
shlb
cmp
mov
and
nop
out
pop
cmp
stc
mov
out
lahf
popa
mov
or
pushf
xor
arpl
pop
or
es
push
pop
dec
mov
inc
in
aaa
dec
gs
lret
add
ret
jle
cmp
mov
xor
and
jg
addr16
movl
jo,pt
icebp
mov
rcll
mov
test
stos
xor
scas
es
pop
push
xchg
dec
mov
pusha
jbe
jbe
ror
out
arpl
mov
rol
cmp
daa
test
shll
insb
mov
ret
mov
scas
stos
inc
sahf
out
mov
jnp
xor
lcall
add
sbb
lock
lds
sbb
loope
ret
adc
fwait
cmp
fdiv
jge
in
sbb
lock
dec
loopne
add
cmp
and
ret
jo
and
cli
aad
mov
mov
pop
cmc
xchg
sbb
movsb
filds
jne
fs
outsl
xor
pop
hlt
or
movsl
sbb
dec
jno
pop
mov
mul
ret
xor
xchg
and
mov
add
and
pop
cmp
fld
mov
test
popf
aam
aaa
mov
pop
sbb
adc
mov
lret
push
jno
add
mov
lcall
aad
movsl
jbe
cmpsl
cmp
add
sbb
hlt
icebp
or
mov
xchg
jo
push
test
addr16
dec
sahf
and
ds
jbe
sbb
fnsave
mov
aam
jbe
bnd
arpl
pop
inc
js
or
ficompl
mov
pop
arpl
xchg
pop
stos
call
mull
push
fsub
mov
iret
movsb
ret
jecxz
and
adc
mov
mov
mov
sbb
rorl
and
mov
loop
divb
or
sahf
mov
cmp
test
pop
or
into
cld
test
cmp
mov
out
push
and
or
fadd
andb
sub
pop
pop
push
push
test
insl
pop
xchg
roll
mov
dec
ss
lahf
stos
jnp
pop
lahf
cmp
jns
pop
aaa
cmp
sbb
xor
mov
jmp
jbe
pop
or
mov
pusha
pop
mov
scas
addl
inc
arpl
fucomp
imul
cmp
push
inc
cli
insl
and
mov
or
mov
das
js
hlt
fsubr
inc
pushf
stc
push
inc
xor
and
cmpsl
pop
mov
cmp
or
jae
aas
adc
stos
sbbl
cmp
rcll
jge
mov
icebp
and
pop
fidivrl
ss
xor
loop
jno
loope
popf
mov
and
shll
fisubrl
data16
push
mov
adc
inc
mov
inc
mov
sti
pop
pop
or
cltd
push
push
pop
sub
imul
sbb
mov
sbb
adc
aaa
xchg
cmpb
mov
sbb
pop
or
sub
int
mov
mov
cmp
and
xor
fwait
dec
ret
dec
mov
in
movsl
mov
and
and
in
mov
out
in
xor
adc
mov
daa
mov
xor
rcrl
pop
test
adc
dec
outsl
add
xchg
xorb
lret
mov
jae
out
dec
cmp
mov
data16
orl
sub
pop
mov
xor
xor
imul
mov
inc
out
outsb
sar
leave
bnd
or
out
int
inc
adc
add
nop
ret
pop
add
jecxz
fcoms
or
fstps
cmp
test
pop
push
dec
repnz
add
imul
int3
popl
in
test
sub
jmp
test
or
xor
push
dec
lahf
mov
pop
jae
xor
popa
cltd
outsb
or
je
pushf
mov
mov
xchg
cmp
sub
pop
outsl
jmp
push
add
scas
jge
inc
loope
mov
stos
sti
jae
pushf
mov
add
dec
insb
stc
insb
jno
add
fbld
in
cmp
pop
dec
cwtl
lock
sbb
push
stc
xchg
xchg
sub
lret
stc
xlat
or
mov
mov
inc
lds
push
cmc
jp
xchg
inc
test
sub
clc
sahf
outsl
sub
imul
insl
inc
lret
fisubrs
mov
test
es
out
pop
test
rcrl
push
ret
cmp
movsb
mov
sub
dec
jns
jecxz
add
push
xor
xchg
jg
jp
divl
adc
inc
test
lret
gs
lahf
push
sub
inc
dec
jg
adc
mov
xor
ja
jmp
stc
xchg
dec
push
xchg
xor
lods
ffree
inc
mov
mov
fistpll
int3
je
push
js
dec
ja
hlt
lock
sbbl
insb
stos
cmp
inc
jb
icebp
sbb
cmp
fnstenv
lcall
sub
and
das
push
cmp
lea
xchg
pop
push
lahf
push
movsb
cmpsl
loopne
fsubs
in
js
imul
mov
movsl
fucomip
jmp
cmc
fisubrs
jns
sbb
pop
je
jb
cwtl
and
ds
adc
mov
idivb
sub
xor
and
xor
or
dec
mov
dec
lock
test
jl
adc
les
cmp
or
push
ljmp
inc
gs
and
adc
dec
xchg
popa
xchg
push
fsub
outsb
shl
inc
mov
push
daa
stos
dec
adc
cmpsl
mov
xchg
shl
insl
dec
out
or
cld
pop
inc
hlt
fldt
inc
repnz
lcall
xchg
cmp
pop
pusha
pop
or
cmp
mov
movsb
into
xlat
lock
pop
imul
cwtl
dec
adc
push
pop
cmp
imul
xchg
mov
notb
stc
movsl
lret
outsl
pop
mov
push
imul
push
cmp
mov
sub
cli
adc
pop
sub
fsubrs
mov
rcll
add
cmpsb
call
stos
das
push
shrb
les
outsl
cmpsl
sub
push
popf
or
pop
fwait
clc
scas
add
and
mov
in
sbb
aam
xchg
xchg
lret
pop
xorl
mov
in
mov
dec
ljmp
mov
outsb
cmp
ljmp
in
xchg
xchg
sti
fistpl
std
dec
inc
cmpsl
lea
lret
sbb
dec
xor
jno
and
cmp
test
dec
xor
add
jmp
jecxz
pop
stos
loopne
xor
test
fisubl
je
jmp
xor
hlt
mov
mov
xor
jbe
int3
insl
mov
dec
jecxz
aad
add
je
cmpsl
sub
xchg
lret
outsb
cs
sbb
add
test
mov
decb
add
scas
and
nopl
push
repz
hlt
jp
inc
arpl
mov
mov
fistpl
push
mov
addr16
into
mov
jno
insl
and
xorb
leave
lret
lcall
xor
hlt
mulb
mov
ret
push
es
and
idivb
xchg
xchg
mov
inc
or
cmpsl
adc
popf
repz
jl
adc
ss
repz
int3
adc
xchg
inc
in
insb
sar
rol
pop
xlat
scas
mov
cs
in
gs
data16
es
mov
aad
add
cmpb
std
dec
popa
call
xor
out
outsl
mov
mov
pop
int
mov
xor
adc
pop
jne
ficoms
rorb
pop
jg
xlat
or
add
jmp
repz
jp
lds
dec
adc
movsl
subl
push
push
push
and
jl
popa
inc
push
mov
xlat
dec
movsl
stc
xor
mov
in
mov
pop
clc
mov
and
sbb
cmp
pop
rcrl
call
in
movsb
fs
flds
imul
mov
sbb
adc
loopne
shlb
add
and
pop
rorb
cld
adc
cwtl
pop
outsb
xor
lds
inc
jne
fldenvs
cld
call
lcall
jns
pop
rorb
pop
mov
adc
punpcklwd
sahf
cmp
sub
pusha
xchg
mov
les
rcrb
adc
sub
int
mov
addr16
mov
push
adc
gs
jbe
imul
cltd
enter
pop
movsl
fcomp
test
test
mov
add
mov
stc
mov
cmp
dec
sbb
lret
or
insb
fistpl
les
imul
and
rclb
insl
int
add
inc
sub
out
jnp
xor
test
xchg
setne
adc
popf
jb
sbb
adc
add
out
repz
sbb
cmp
ja
sub
popf
inc
mov
cmp
mov
into
mov
jg
push
subb
pop
jl
mov
pop
pop
xchg
or
mov
xor
jp
out
cmpsb
loopne
cltd
les
aaa
imul
jmp
aaa
mov
or
in
push
push
and
inc
loop
loopne
popl
dec
xchg
aas
mov
aas
lcall
add
xor
lods
incb
mov
fstpt
or
test
test
push
xlat
push
jae
mov
xchg
sbb
add
cli
leave
out
insb
icebp
xchg
repz
pop
jb
adc
jl
loop
into
pusha
sbb
push
sub
jne
std
cmc
imul
mov
shll
es
fcomps
push
inc
dec
test
outsl
lret
sbb
mov
movsb
adc
pop
stos
pop
sbb
int3
sbb
pop
fwait
das
jle
scas
xor
xchg
xor
inc
sub
jge
jg
arpl
dec
es
jae
mov
test
push
ret
mov
pop
fnstcw
sbb
clc
std
inc
mov
fstpl
dec
stc
cmp
repz
push
imull
mov
in
outsl
repz
jg
fwait
or
lods
mov
mov
pushf
and
push
mov
mov
pop
dec
icebp
sub
enter
mov
mov
aam
jp
mov
or
adc
cmc
in
inc
jo
lods
push
sarb
int3
xorb
popf
idivl
popf
mov
push
mov
adc
jno
dec
cmpsb
fcoms
dec
jl
mov
mov
jg
stc
jb
into
cld
push
popf
push
ja
jne
std
or
xchg
xchg
aaa
xchg
out
rorb
fwait
pop
out
push
rol
nop
dec
icebp
sbb
jo
in
aas
pushf
cmp
mov
mov
nop
rolb
mov
cmp
popa
mov
das
dec
mov
out
shrb
enter
sub
mov
imul
inc
mov
adc
push
hlt
jl
jl
cltd
pop
or
lret
xor
jbe
push
add
test
push
mov
neg
jp
mov
cmp
hlt
es
subb
jnp
nop
popf
add
adc
pop
frstor
ss
ss
mov
stos
xchg
pop
addb
dec
mov
popf
jno
mov
jg
mov
cwtl
shl
mov
inc
nop
xor
mov
notl
mov
xchg
and
jp
lahf
mov
or
sbb
dec
xorb
mov
stc
int
mov
ret
sub
xchg
fcmovnb
daa
xchg
mov
xor
aas
in
pop
pop
sub
sbb
add
mov
loop
dec
and
push
push
jae
xor
ljmp
leave
mov
add
out
xchg
mov
aad
sub
out
mov
push
adcl
jecxz
sar
ss
imul
movb
add
push
aaa
test
lret
imul
stos
or
in
mov
jecxz
fsin
clc
stc
sbb
mov
xchg
xchg
rcl
add
rcrl
ds
int
or
rorl
jne
cmp
push
add
cs
test
dec
sub
sub
roll
hlt
adc
sub
js
pop
inc
mov
sub
imul
test
jecxz
jle
or
xchg
fildl
mov
mov
lock
add
popa
push
inc
jl
fwait
push
adc
fsubs
jg
push
jle
imul
int
push
xor
jecxz
xor
fs
jnp
lds
mov
addr16
sbb
in
pop
in
movsb
arpl
pop
test
iret
test
frstor
pop
push
stos
lods
sub
in
daa
lret
push
shll
cs
ds
ja
add
fstl
jge
out
or
rorb
mov
mov
iret
add
fists
divl
jnp
out
adc
testl
xchg
into
sub
int3
mov
dec
pop
push
fildl
pop
jae
les
xchg
test
add
nop
mov
lcall
daa
pop
lret
and
mov
arpl
cmp
mov
out
mov
lds
lahf
lds
imul
subb
or
mov
je
test
aam
inc
lds
jl
int3
clc
push
sub
mov
gs
sub
add
aad
dec
fcomps
dec
std
stc
imul
adc
out
inc
dec
xchg
popf
add
out
add
pop
mov
xchg
inc
cvtpi2ps
mov
push
std
out
ret
xchg
jno
xchg
mov
rorb
sbb
scas
pop
cmp
aad
fcmovu
lcall
dec
xchg
call
mov
ljmp
pusha
jmp
or
jge
mov
sub
sbb
jo
jnp,pn
lods
outsb
and
or
imul
cmp
sbb
bnd
cmp
cmp
iret
cmp
adcl
insb
out
xor
dec
dec
and
arpl
sti
sub
sbb
fists
cwtl
mov
ss
jecxz
jnp
orl
std
mov
out
xchg
cli
std
lret
out
xchg
inc
sbb
push
inc
jl
push
xchg
add
xchg
cmp
pushf
fprem
xlat
stc
ror
jae
mov
and
bound
lds
and
je
ja
in
cmp
jmp
in
cmp
loop
insb
loop
out
dec
mov
and
std
sub
adc
push
cmp
jnp
mov
jecxz
cli
pop
fdivrs
call
xchg
pop
pop
test
pop
popf
mov
insb
stos
out
dec
xor
enter
or
pop
pop
sub
in
sarb
jg
xchg
in
aad
jbe
inc
test
add
in
std
pop
test
in
mov
xor
xchg
mov
inc
clc
fldl
clc
mov
cmp
ljmp
enter
cmpsl
inc
mov
addr16
adcl
fcomps
call
add
jmp
fbld
icebp
data16
dec
xor
cwtl
imul
gs
inc
xchg
push
cli
ficoml
jmp
xchg
addr16
notb
inc
ss
aam
push
in
mov
mov
aas
adc
ds
jbe
pop
dec
dec
outsl
pop
test
cmp
jne
popa
mov
pop
sbb
add
sahf
sbb
fdivs
push
jne,pn
xor
dec
fsubl
push
fldl2t
dec
mov
cmp
es
and
mov
and
nop
jmp
in
loope
je
jbe
fistpll
add
fcomps
cld
rclb
mov
push
adc
add
idivl
aad
popf
js
jl
jl
cmpsb
cvtps2pi
adc
mov
ret
rolb
mov
and
push
mov
push
ja
cmc
movsbl
or
bound
sub
push
dec
inc
leave
out
or
inc
dec
pushf
or
inc
jo
cmp
cmp
mov
xor
xchg
xchg
test
ds
pop
jae
repnz
repnz
add
sub
dec
jg
inc
mov
jno
and
subb
xchg
cmp
xchg
fwait
hlt
xor
lds
and
pop
add
adc
cmp
jle
jl
aam
push
in
mov
bound
push
addr16
xchg
pushf
sub
pop
loopne
in
mov
jne
mov
das
mov
mov
enter
cs
js
sub
add
push
nop
fisubs
fisubrs
mov
sub
xor
dec
rcrb
psubusb
adc
dec
and
addl
or
push
aaa
outsl
sub
dec
loopne
addl
xchg
ret
push
stc
repnz
xchg
cmpsl
add
mov
das
inc
test
jl
lods
mov
cmc
or
outsl
jo
adcl
xor
xor
xor
mov
mov
cld
adc
fcomps
mov
sbb
stos
cmp
pop
enter
faddl
xchg
cmc
bswap
out
cltd
push
fwait
loop
xor
jmp
pop
adc
pop
fcoms
mov
sti
into
fstps
lods
mov
add
in
into
mov
dec
push
push
mov
ss
outsl
jnp
sbb
insb
xor
xchg
mov
lds
aad
add
insl
dec
cmp
in
jae
sbb
fs
addr16
xchg
fwait
xchg
and
add
pushf
sbb
xor
xlat
xor
xor
outsb
aad
mov
mov
aam
negb
add
rcrl
cmpb
pop
icebp
jge
xchg
mov
ds
std
jp
xor
or
xor
sbb
or
pop
mov
xchg
imul
lds
jmp
jle
or
fidivl
xchg
sbb
lds
movsb
dec
cmp
mov
jge
into
mov
mov
xor
push
add
lret
rcr
mov
int
scas
mov
jae
stos
add
movsb
lea
add
push
jecxz
mov
int3
fwait
cmp
je
pop
sti
adc
das
lret
insl
out
idiv
mov
adc
and
cmp
ss
add
out
mov
arpl
aas
sub
aaa
in
pop
add
pushl
ret
ret
mov
out
cmp
stc
test
idivb
js
mov
cmpl
dec
xor
sub
icebp
xor
enter
xor
sti
pop
push
or
rcrb
xchg
pusha
and
inc
push
xchg
or
inc
jne
lret
mov
push
orl
mov
dec
mov
in
push
mov
push
lcall
cwtl
scas
dec
mov
lret
dec
ficomps
dec
and
xchg
mov
sbb
imul
sub
jl
lock
mov
clc
insl
int
andl
or
cld
movsb
mov
push
pop
or
mov
je
test
fxch
sbb
fdivs
xchg
jbe
int
loopne
or
mov
add
popa
notl
cmp
jl
xor
and
fisttpll
dec
lahf
mov
mov
dec
lret
xor
lret
push
into
sub
push
xchg
leave
pop
ret
push
lahf
repnz
in
mov
testb
pop
les
stos
add
push
popa
pop
jne
pop
sbb
outsb
inc
in
shrl
cmp
pop
pushf
and
jl
lcall
mov
lods
ret
or
ret
addr16
adc
inc
push
cwtl
sub
in
mov
fwait
adc
bswap
sbb
push
or
cmpsl
test
dec
sbb
sbb
ficoms
jns
cli
aad
mov
xchg
std
adc
fcmovbe
out
in
clc
ret
add
add
decb
shr
mov
and
and
les
sub
js
jg
xor
das
movl
add
cmp
mov
frstor
enter
push
mov
sub
push
sahf
mov
cmp
push
dec
mov
cmpsb
data16
popa
lahf
enter
push
jge
adc
pop
jmp
and
jp
rolb
cmp
and
jne
inc
out
imul
sub
pop
push
mov
rcll
push
push
popa
mov
test
xorb
push
push
stos
and
cmpsb
shlb
xor
test
cmc
in
ficoml
xchg
mov
xor
adc
loope
lea
adc
dec
repz
dec
fwait
add
add
dec
into
loope
cltd
fisubrl
test
jbe
dec
mov
mov
add
sub
jne
in
arpl
mov
mov
cmpsb
add
popf
xor
lcall
shrl
jnp
scas
lds
jno
fwait
jge
and
adc
cmp
jle
xor
xchg
inc
adc
es
push
and
inc
push
adc
ss
inc
sub
int3
push
test
xor
je
in
mov
and
jno
mov
outsb
jmp
xchg
and
dec
cmp
cmc
pop
repz
pushl
stos
cmp
pop
push
add
mov
jno
adc
std
in
inc
sbb
testl
cwtl
xor
int3
add
sub
popf
insl
movsb
pop
cli
lock
lret
ror
sub
or
fwait
xchg
adc
mov
in
loope
adc
xor
xchg
xor
adc
loopne
jge
icebp
or
inc
xchg
clc
or
mov
mov
hlt
xor
scas
pop
jmp
add
xchg
call
aad
cmc
jno
in
mov
data16
shlb
fisttps
mov
lea
mov
mov
or
dec
xor
neg
mov
in
iret
cmp
and
mov
movsl
test
mov
daa
pop
mulb
xchg
rorl
sahf
jmp
push
mov
test
mov
dec
les
add
mov
add
add
add
push
xchg
add
sbb
add
xor
add
pop
xchg
add
outsb
xchg
add
adcb
add
nop
add
inc
xchg
add
add
add
fcoms
add
rclb
add
add
add
out
add
cmp
add
movsb
nop
add
cwtl
xchg
add
adc
add
xchg
add
add
add
les
add
mov
add
add
add
push
xchg
add
sbb
add
xor
add
pop
xchg
add
outsb
xchg
add
adcb
add
nop
add
inc
xchg
add
add
add
fcoms
add
filds
dec
gs
popa
addr16
outsl
js
add
inc
push
xor
cs
insb
add
xor
inc
insb
outsl
jae
dec
popa
outsb
fs
add
je
jb
arpl
jae
arpl
inc
gs
imul
jg
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
mov
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
add
je
jns
je
insl
push
imul
insb
gs
imul
popa
imul
jo
imul
push
outsb
insl
popa
jo
imul
insb
add
gs
imul
je
arpl
imul
inc
dec
xor
cs
insb
add
lret
add
addr16
insb
outsl
jae
dec
gs
in
add
addr16
jo
outsb
dec
gs
js
add
add
addr16
jne
jb
push
popa
insb
jne
inc
add
inc
inc
push
inc
push
dec
xor
cs
insb
