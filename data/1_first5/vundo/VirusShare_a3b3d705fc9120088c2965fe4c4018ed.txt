lods
cmp
add
add
or
loopne
add
test
movsl
add
add
adc
add
push
mov
sbbl
orl
movw
pop
jmp
push
cmp
es
pop
xchg
pop
jns
mov
dec
mov
insb
es
cwtl
sbb
xchg
insb
cs
daa
lea
fwait
mov
into
jne
xor
jmp
push
xor
mov
mov
mov
lods
mov
pop
ret
push
push
popl
jle
call
cmp
xchg
jmp
dec
sub
or
iret
repz
push
int
push
fwait
dec
sub
test
dec
sbb
insb
fdivl
dec
in
repnz
or
clc
enter
popa
mov
incb
add
add
negl
push
push
jecxz,pt
addr16
loopne
popl
mov
add
push
push
popl
push
push
push
mov
mov
add
jmp
or
xchg
push
shll
rcrl
clc
out
clc
decb
dec
ficompl
das
movsb
adc
addr16
arpl
rol
imul
mov
mov
jmp
push
cli
test
in
mov
cmp
cmp
cmp
jl
sub
jns
inc
iret
ds
cmp
jne
xor
aam
pop
and
call
ret
leave
orl
and
sub
pop
aas
lods
pushl
mov
add
add
mov
add
xor
lea
mov
add
push
popl
jae
push
mov
andw
addb
pop
mov
xor
rol
xor
inc
cmpb
jne
cmp
je
inc
orw
cmp
jb
mov
add
movzwl
mov
add
jmp
mov
fdivrs
sti
es
mov
ucomiss
xor
pop
cwtl
jle
mov
add
pop
pushl
popl
cmp
jbe
cmp
jae
pushl
pushl
push
inc
rol
inc
mov
xor
xchg
addl
pushl
call
call
pop
xorl
pop
pop
pop
leave
ret
call
xor
jns
push
mov
orl
subb
addb
pop
test
jne
ret
push
jmp
fs
dec
int
mov
mov
les
adc
test
into
into
fs
mov
fbstp
lret
cmp
mov
sub
incb
and
pop
in
fnsave
inc
cmp
mov
test
jno
jg
outsl
xor
fsubr
dec
std
ljmp
daa
push
ret
rorb
xor
pop
addl
subw
push
call
push
push
dec
lea
not
mov
xor
xchg
mov
pusha
call
mov
push
add
mov
xor
xchg
jmp
hlt
in
dec
sbb
das
push
pop
arpl
inc
pusha
insl
aas
mov
fidivs
push
es
sbb
and
push
jl
jno
push
fstpt
jmp
mov
sbb
mov
orb
or
adc
mov
sub
arpl
daa
inc
out
jecxz
lcall
shrb
fldcw
cmpsl
dec
outsl
xor
mov
clc
push
add
push
call
cmpl
jne
jmp
jmp
jmp
repnz
fnstcw
rcrb
std
stc
sub
ds
dec
lods
lahf
leave
fsubr
xor
mov
mov
imul
and
add
xor
rclb
shr
pop
xchg
ljmp
insl
and
mov
cltd
ss
lock
pop
sbb
cmp
in
push
cmp
jo
jle
je
sub
jmp
mov
dec
mov
stos
fldt
add
cmpsb
xchg
pop
fldl
sub
push
mov
fmuls
pusha
call
mov
push
inc
rol
mov
xor
xchg
addl
push
call
mov
pushl
popl
jne
push
mov
orb
movl
andw
pop
mov
xor
xor
rol
inc
dec
jne
cmp
je
xor
cmp
jne
popa
shl
push
xor
push
call
int3
jmp
popa
shl
push
push
mov
add
popl
mov
xor
push
call
push
mov
push
jmp
push
popl
pop
mov
push
push
push
mov
jmp
es
addr16
ljmp
inc
jmp
int
hlt
add
push
orb
cmp
adc
pop
stos
jbe
lods
lods
jmp
pop
or
cmp
add
add
sbb
mov
aad
inc
in
mov
xchg
bound
pop
mov
mov
or
sub
mov
dec
jmp
adc
dec
test
imul
call
popa
jecxz
mov
rep
pop
pop
push
add
not
rol
mov
xor
xchg
push
xor
jmp
jmp
cltd
popf
cmp
pop
call
pop
sbb
push
sahf
push
jp
lea
test
sbb
pop
mov
shll
daa
movsl
adc
aaa
cld
in
movsb
push
loop
or
add
add
sub
mov
add
jb
push
mov
xorl
movl
movb
addb
pop
add
or
jne
add
sub
jmp
mov
push
popl
jp
push
mov
subl
subl
xorw
pop
shr
shl
mov
jmp
push
popl
je
push
mov
sbbw
andw
pop
sub
mov
cmp
jne
and
jl
call
outsb
inc
jbe
paddw
adc
pop
enter
mov
mov
inc
sti
and
movsb
inc
xor
mov
jg
lea
nop
out
data16
rcrb
scas
add
mov
or
sbb
incl
movsl
int3
mov
add
mov
push
adc
movsl
mov
int3
lods
xor
or
push
fs
cmp
int
shl
sbb
push
popl
mov
add
cmpw
jne
ret
call
jle
lods
xchg
adc
add
mov
bound
ss
sbb
lods
xchg
adc
xchg
pop
lret
add
or
xor
in
daa
xor
cmpsl
cld
test
mov
stos
ret
pop
pop
push
aam
dec
sub
xor
je
and
and
filds
or
xchg
rcrl
jl
add
inc
repnz
rorl
jge
loope
adc
lret
lods
xchg
xchg
nop
or
jle
hlt
xor
scas
inc
adc
mov
movsb
pusha
jl
int
ja
fcomps
test
mov
mov
lods
xchg
adc
lods
xchg
push
xor
fistpl
cmp
sub
ja
jo
test
adc
xchg
mov
adc
xor
mov
dec
nop
push
inc
jno
mov
push
fiadds
dec
pop
test
rcrl
cmp
pop
xchg
stc
inc
js
xchg
loope
nop
mov
mov
push
inc
xchg
mov
cli
aad
leave
pop
push
rorl
xorb
movsb
shrl
push
enter
mov
dec
gs
mov
push
jbe
add
scas
int3
jb
adc
mov
loopne
mov
xchg
and
lods
xchg
xchg
aas
jno
fmull
nop
jecxz
cmp
sub
jle
mov
push
jmp
lock
mov
cs
pop
loopne
lret
enter
xchg
sti
pop
mov
cvtdq2ps
xchg
push
rcll
mov
dec
xor
jb
mov
fwait
scas
test
loop
lods
mov
jg
mov
dec
in
scas
push
stc
iret
xchg
sahf
adc
aas
insb
pusha
mov
into
xchg
divb
xchg
mov
out
rcrl
inc
shrl
pushf
mov
gs
fs
jnp
cmp
and
sbb
pop
inc
mov
and
fcmovnu
pop
mov
shr
ljmp
je
sub
push
in
mov
addb
fwait
call
call
in
int3
push
push
cld
cmp
inc
or
xor
ljmp
icebp
popf
pop
negb
cmp
lods
xchg
inc
popa
jp
mov
loopne
adc
pop
mov
leave
outsl
mov
jle
pop
xor
mov
divps
and
jp
cmp
or
pushf
in
mov
jnp
xor
stc
pushf
inc
jns
push
repnz
fs
loop
icebp
clc
cmp
xchg
cli
cmp
xor
lods
dec
shll
leave
shl
popa
jo
out
and
cltd
cmp
adc
arpl
mov
push
enter
es
pop
pop
push
sub
je
adc
xchg
mov
aam
mov
mov
mov
loope
mov
inc
insb
inc
lea
mov
imul
call
or
jns
mov
push
fldcw
pop
inc
jg
xchg
mov
es
loopne
stc
ss
cld
js
scas
rol
les
pop
mov
push
xchg
fildl
leave
mov
icebp
aam
sbb
scas
loope
sub
mov
push
push
sarl
cmpb
adcl
pop
mov
movsb
mov
adc
and
or
popaw
test
add
jae
xchg
adc
mov
mov
loop
push
arpl
fldcw
pop
pop
mov
mov
mov
les
push
inc
mov
jle
lods
xchg
adc
push
xchg
adcb
lret
test
jne
mov
insb
pusha
daa
and
outsb
fcmovb
gs
imul
pop
leave
inc
lods
and
pop
dec
lret
mov
adc
and
lock
lea
popf
cmp
leave
popl
pop
sub
sti
push
dec
inc
cmpl
xlat
dec
push
addl
adc
fbstp
pop
and
or
jne
scas
iret
lahf
call
pop
or
push
fstpl
cli
xor
mov
cld
daa
mov
pop
pop
out
xor
ret
repz
rol
push
xchg
sti
push
push
xor
fisubrs
xchg
mov
in
cmp
inc
sbb
fwait
sbb
mov
sbb
cmp
into
popa
sub
or
mov
dec
jnp
subb
fs
push
adc
mov
cmp
adc
xchg
iret
mov
rcrl
push
jb
inc
fstl
push
jae
xchg
adc
mov
mov
sbb
inc
incl
sub
cwtl
jg
pop
jmp
adc
out
sbb
fsubl
sbb
ja
stos
jbe
orb
into
jmp
mov
xchg
add
outsb
lret
sbb
sub
ret
movl
sbbb
xor
cmp
lretw
pop
lds
xchg
mov
test
in
movsw
pop
sbb
mov
sub
mov
adc
out
dec
mov
push
test
js
xchg
mov
loopne
repnz
in
add
adc
xchg
imul
and
push
lds
add
sbb
popf
mov
fs
sbb
mov
xchg
mov
loopne
loop
scas
ret
repz
ss
sbb
mov
dec
cld
push
mov
das
dec
xchg
mov
mov
call
js
add
test
dec
scas
sub
cmc
enter
shlb
inc
sbb
xchg
add
or
dec
mov
aam
in
push
push
mov
aas
popa
mov
jno
faddp
in
fisttps
inc
jp
push
jbe
jmp
push
in
scas
xchg
sti
pop
cmc
sub
cmpsb
in
xchg
fimull
xlat
push
mov
in
xchg
cli
dec
pop
jbe
ja
shrl
xlat
das
mov
test
lret
ror
dec
lds
test
test
lahf
jnp
popf
into
xchg
sub
pop
xor
insb
fs
jl
in
jae
in
cmpsl
sti
xchg
jg
jae
or
pop
iret
inc
scas
cmp
das
mov
mov
int
pop
call
or
les
xchg
movsl
lret
lods
sub
add
incb
jl
xor
ds
xchg
push
and
lock
jle
into
ror
jp
aad
sahf
jns
pop
test
popl
adc
and
daa
mov
pop
or
stos
in
repnz
adc
out
sti
out
inc
pop
std
inc
adc
push
lcall
cmp
sahf
mov
lds
enter
xlat
dec
fwait
in
mov
lcall
push
jmp
in
sbb
add
loopne
je
add
dec
adc
xor
push
xor
cmp
scas
sbb
jo
jl
in
repz
mov
jg
mov
inc
aad
jno
andb
xor
mov
mov
mov
dec
fidivrs
adc
mov
fstl
popa
pop
subl
xchg
mov
push
pop
or
jle
outsl
push
das
iret
adc
in
inc
mov
pop
xor
cmp
ss
xor
jge
xor
inc
rolb
dec
sub
stos
sti
mov
xor
pusha
loop
mov
jnp
pusha
js
and
fisttpl
loopne
mov
inc
int3
out
push
push
inc
mov
pusha
int
dec
scas
push
sub
gs
lcall
jmp
ss
stos
inc
scas
adc
js
test
jmp
inc
push
cli
les
out
pushf
imul
xchg
fwait
clc
arpl
daa
int
add
nop
in
or
mov
mov
lahf
mov
jp
ret
aam
pop
lock
xchg
push
jno
and
and
jne
xorb
aam
ret
sub
call
rol
ss
cmp
out
mov
data16
cmc
lret
call
xor
xchg
outsl
cmp
lods
test
ret
es
std
jge
jne
les
sbb
das
lods
loop
sbb
mov
stos
std
icebp
push
lds
jl
lea
xchg
mov
jbe
pop
insl
mov
push
push
movsl
sub
pop
jge
fsts
sbbb
xor
pushf
divb
xchg
arpl
xlat
pop
dec
std
arpl
and
xor
mov
insb
clc
xchg
mov
nop
lret
cmc
push
push
push
fstpt
je
dec
push
int
or
sub
mov
or
inc
or
out
sti
adc
in
push
mov
mov
cmp
jmp
or
pop
adc
loope
call
dec
shl
faddp
and
sbbb
push
xchg
pcmpeqw
dec
cltd
rclb
xor
insl
fildll
jle
sub
jae
push
or
sub
ljmp
or
cmp
stc
pusha
lret
lods
xchg
sbb
mov
jb
sub
test
mov
dec
enter
aaa
in
mov
add
xchg
adc
xchg
outsb
js
xchg
lods
lods
int3
adc
pusha
xchg
fs
mov
adc
sbb
xor
mov
xchg
pop
fsub
fcmovnu
das
cmpsl
movsl
and
daa
dec
loop
mov
xor
fsubrs
nop
sbb
lret
fadds
pop
test
xchg
mov
xlat
int
mov
jne
sti
pop
adc
rol
fwait
sub
test
or
in
add
stos
es
jmp
mov
stos
test
xchg
xlat
cld
sub
and
out
push
clc
or
ret
popf
cwtl
push
dec
jne
mov
inc
add
sbb
dec
mov
and
dec
sbb
xchg
mov
loop
xchg
mov
xor
repz
mov
cmp
jmp
or
rorl
fs
ud2
inc
push
xchg
cmpsl
cmp
xor
adc
sbb
jno
in
das
sbb
repnz
popa
aad
int
je
and
xchg
cmc
test
into
aad
jl
add
mov
lahf
jp
fs
lods
leave
lahf
jp
int3
les
cmp
and
add
insl
mov
adc
and
flds
xchg
xor
fiadds
inc
js
mov
xor
int3
popa
sbb
xchg
inc
les
xchg
inc
and
enter
sbb
sarl
out
fwait
xlat
push
and
xlat
mov
push
mov
push
xchg
push
mov
xorl
add
jmp
mov
insl
cmp
frstor
xchg
in
lods
mov
cmpsb
xchg
lea
lods
jge
pop
add
dec
pop
lcall
movsb
cld
clc
sub
stos
lret
jbe
cs
dec
insl
xchg
pop
divl
loope
lods
xchg
pusha
push
mov
rcll
cli
call
push
or
jmp
mov
xor
clc
pop
loop
hlt
and
js
int3
mov
inc
add
fs
add
imul
sbb
sbb
scas
xor
unpcklps
out
sbb
sbb
sub
enter
in
aam
push
lea
jns
sbb
scas
xchg
adc
xchg
adc
dec
adc
sub
dec
cltd
lret
jecxz
sbb
push
insl
dec
jp
pop
inc
jae
and
andl
sbb
addr16
xor
cmp
sub
xchg
lcall
loope
push
or
jbe
jae
lahf
jl
xchg
mov
fmull
fstl
inc
cmp
dec
xchg
fnsave
icebp
in
inc
ret
popf
stos
hlt
cmc
je
xorb
sub
xchg
lret
jmp
scas
sub
sbbl
inc
pusha
xchg
leave
mov
mov
stos
jge
lea
in
scas
lahf
js
and
repnz
mov
sbb
push
shlb
pusha
pop
mov
lods
xchg
test
lods
jnp
xor
and
aad
nop
and
sub
es
mov
data16
insb
ljmp
lret
lods
xchg
out
mov
pop
mov
inc
mov
inc
cmp
lds
push
into
ret
jmp
js
icebp
push
add
jne
decl
sti
push
arpl
mov
adc
mov
cmp
fisttpll
inc
das
gs
fisttps
xchg
xchg
sbb
xor
scas
xchg
jp
arpl
clc
loopne
addr16
add
mov
push
sbbb
push
add
sti
push
bound
pop
mov
test
lock
pop
mov
std
push
andl
lds
stos
js,pt
notb
mov
xor
ljmp
aas
dec
push
in
js
pop
pop
arpl
xor
cli
push
repz
fwait
adc
js
push
cmp
and
xchg
xor
in
mulb
jne
icebp
int3
jp
fcompl
sub
add
cmp
mov
pop
out
cmp
xor
mov
leave
bound
ja
push
sti
ljmp
aaa
inc
js
jle
lods
xchg
adc
scas
lcall
jg
test
sti
sub
mov
ret
pop
imul
jl
xor
dec
jns
xchg
xorl
orl
mov
xchg
test
fwait
andb
lcall
repz
cltd
scas
mov
adc
push
mov
cmpsl
pop
pop
rcrl
orb
std
in
cmp
mov
adc
pusha
mov
in
pop
add
leavew
imul
jle
dec
jne
or
xchg
scas
jae
loope
sbb
mov
mov
movsb
add
pop
push
ljmp
jns
lds
jle
xchg
ss
xor
shll
sarb
stc
dec
js
xchg
stc
in
pinsrw
into
sub
and
mov
or
push
pop
pop
pushf
mov
adc
lcall
outsb
dec
push
dec
sub
js
push
sbb
adc
data16
aaa
jbe
xchg
push
and
xor
dec
les
sub
adc
aam
iret
aaa
call
mov
orl
adc
mov
adc
add
mov
pop
jle
xchg
lea
call
mov
loopnew
xlat
mov
shll
push
xor
hlt
std
sbb
mov
add
mov
mov
shrl
pop
fisubs
stos
test
hlt
xlat
mov
fnstenv
scas
mov
pop
andb
or
fstps
adc
xchg
cmpsl
js
xchg
fstl
bound
xor
iret
xchg
adc
inc
inc
jp
xlat
add
xchg
test
rep
add
mov
nop
or
arpl
dec
js
vunpcklps
mov
pop
imul
in
jo
movsb
dec
scas
xor
add
xor
add
mov
mov
push
xor
lea
int
and
mov
loopne
divl
mov
cs
lcall
fistpl
lahf
lcall
cmc
lcall
mov
xchg
in
jl
ljmp
xchg
pop
xchg
cmpsl
xor
scas
dec
and
add
xchg
xor
xor
dec
js
xchg
and
dec
lea
mov
dec
aam
and
and
call
cmp
and
jb
adc
in
mov
movsb
paddw
xchg
mov
lret
lock
sahf
out
dec
xchg
out
push
inc
pop
xchg
xor
pop
mov
lds
jl
fmul
cwtl
lods
pop
lea
insl
pushf
adc
adc
mov
cwtl
add
mov
ret
xchg
mov
inc
adc
lods
rcrl
outsl
adc
ret
mov
sub
cmpb
ds
xchg
aaa
outsb
xor
ret
imul
je
out
cli
stos
jno
inc
cwtl
push
or
push
ficomps
arpl
jne
xchg
int
sti
xchg
mov
subl
ficompl
jge
inc
jmp
cmp
inc
negl
xchg
mov
xor
sbb
call
imul
jl
loope
push
cmp
lret
pusha
outsb
pop
fimull
jb
mov
or
jecxz
xchg
popa
cltd
scas
movsl
test
movsl
jb
mov
xor
xor
lcall
subl
and
mov
adc
lods
adc
mov
xchg
mov
sbb
cltd
push
jno
movsl
adcb
ret
inc
fildl
xchg
dec
mov
hlt
dec
nop
push
lahf
rorl
bound
dec
das
jbe
xor
aam
adc
fcmovnu
dec
shlb
cmpsl
pop
fisubrl
mov
pop
outsb
sub
push
xor
xchg
sti
push
insb
scas
cmp
lret
inc
mov
adc
mov
cmpsl
push
cmp
mov
mov
dec
nop
xchg
stc
dec
js
xchg
push
xchg
fnstenv
or
in
jne
gs
adc
insl
and
sahf
roll
ds
je
xchg
adc
fildll
jmp
cmp
dec
pop
mov
nop
shl
or
and
jle
ss
sbb
xor
scas
leave
repnz
push
pop
adc
pop
fdivrl
pusha
shl
cmpb
arpl
repz
cmp
jne
inc
jecxz
cltd
shll
mov
push
cmp
test
xchg
cltd
scas
xor
jbe
inc
or
sub
ret
jle
inc
xor
enter
std
sub
push
cmovnp
addb
add
mov
andb
test
sti
adc
lods
xchg
adc
or
cmp
push
sarb
mov
adc
das
mov
dec
ss
and
sub
xchg
sub
mov
xchg
adc
xor
outsl
out
mov
fmul
or
sbb
lret
pop
divb
pop
sub
loopne
push
js
enter
outsb
and
cs
mov
es
pop
dec
mov
loopne
mov
fcmovne
pop
in
cmpsb
test
mov
mov
roll
enter
negb
or
insl
fidivrl
jnp
xor
adc
mov
inc
lcall
pop
and
xorb
xor
or
jecxz
or
bound
jnp
xor
icebp
xchg
int
repnz
inc
cmpb
ds
jnp
aaa
leave
lret
inc
cli
xchg
inc
adc
ss
test
ret
adc
sub
cltd
pop
mov
mov
clc
pop
jns
xchg
jae
xchg
adc
icebp
pop
int3
or
adc
fucomip
imul
push
pop
or
and
jb
arpl
push
xchg
out
jmp
cmp
push
jp
or
inc
add
add
divb
xor
xchg
test
xor
sahf
jg
iret
or
and
insb
dec
cltd
loope
rclb
js
jp
shl
mov
mov
jae
xlat
in
std
fs
cmp
xchg
mov
in
leave
pop
mov
jl
clc
mov
jb
xchg
jp
in
stos
test
mov
in
cld
xchg
mov
mov
loop
mov
sbb
sbb
sti
jo
lods
loop
fcoml
push
mov
nop
sub
addb
xor
mov
andb
aam
or
xchg
rolb
ljmp
and
pop
rolb
lret
lods
add
imul
mov
cmp
jne
sub
adc
js
std
in
add
add
mov
mov
push
add
out
sbb
lret
inc
xor
mov
clc
ss
loopne
mov
cmpsl
bts
mov
xor
jo
push
test
rolb
scas
and
mov
aam
cli
sbb
jmp
test
cmp
xchg
fistps
lahf
shr
test
sub
sub
xchg
add
inc
test
repnz
cwtl
nop
cmp
inc
imul
sbb
adc
popa
cltd
scas
movsl
test
lret
lods
insl
xor
pusha
sbb
cwtl
ja
inc
cmpsb
ljmp
jmp
inc
mov
mov
cmp
lods
out
out
rep
cmp
pusha
sub
dec
ja
movsl
mov
lahf
sti
dec
dec
lods
inc
mov
inc
sbb
pop
popf
dec
ret
movb
xchg
test
lods
insb
adc
out
jne
scas
loope
or
cmp
pop
mov
push
mov
xchg
lds
stos
push
fs
scas
ja
pop
dec
mov
push
xchg
inc
sub
fs
sbb
add
outsb
fldenv
scas
aaa
imul
stos
lahf
push
ljmp
push
xor
loopne
es
shll
jl
sbb
lods
imul
or
pop
arpl
or
mov
lock
shrb
faddl
pusha
mov
mov
lods
jge
jge
out
insb
test
xchg
mov
push
inc
add
test
add
out
inc
lret
add
movsb
cs
adc
cmp
push
lds
jl
lea
js
xchg
dec
rcll
pusha
ret
inc
dec
pop
fidivrl
ja
ficoml
push
fsub
jnp
jmp
cltd
sbb
pop
push
sub
ja
jne
fimuls
stc
pusha
and
sbb
sbb
outsl
testl
popf
add
fsubrs
cwtl
loope
scas
push
scas
pop
adc
leave
xchg
adc
lock
add
mov
les
jl
icebp
loop
jnp
js
push
push
dec
mov
dec
mov
jge
sbb
cmp
pop
ret
cs
icebp
mov
cmp
mov
sub
mov
lcall
lock
mov
and
mov
cmp
cmp
nop
mov
cmp
stc
je
subb
jne
popf
loop
mov
pushf
rcr
pop
pop
int
add
or
jbe
cmpsl
push
pop
inc
arpl
inc
dec
outsl
cmp
ss
push
out
sbb
test
inc
cltd
xorl
andb
sbb
adc
repz
push
jne
pusha
xchg
lret
popa
xchg
sub
fs
ret
lds
inc
mov
repnz
push
sbb
lods
add
enter
mov
and
in
shll
pop
mov
xor
cmp
loopne
mov
xchg
xchg
mov
jecxz
cmp
cmpsb
mov
notb
mov
sub
divl
hlt
xchg
out
cmp
rclb
fwait
loopne
fisttpll
das
ret
sahf
cwtl
loop
cwtl
mov
popa
xrstor
ja
pop
inc
mov
pop
sub
cmpb
xor
outsl
jbe
dec
lea
popa
repnz
mov
push
mov
fucomi
pop
sub
sbb
clc
xor
orl
adc
ljmp
cmpsl
shlb
inc
mov
loopne
xchg
add
test
push
mov
or
sbb
mov
lock
and
adc
cltd
mov
xchg
mov
xchg
in
test
xchg
dec
leave
inc
push
pop
data16
sub
pushf
cmpsb
ds
jle
shr
popa
in
push
sub
stc
cmp
or
out
cld
rclb
or
mov
push
je
xchg
adc
jecxz
mov
push
push
adc
push
into
aad
jo
dec
ret
dec
insb
adcb
mov
xchg
jne
mov
rep
repz
cmpsl
jecxz
iret
push
push
xor
popfw
push
lods
xchg
adcb
stc
daa
mov
popf
adc
in
mov
and
iret
js
inc
lods
pop
lods
lea
addr16
mov
add
movsb
or
push
adc
scas
loopne
mov
loop
jns
mov
mov
xchg
sbb
adc
lods
xchg
cmp
jge
xorb
cmp
popa
mov
cmp
mov
add
das
sub
xor
jbe
sub
pop
repnz
rol
jae
jg
mov
add
roll
push
xchg
lods
jge
fimull
push
movl
repz
test
push
jo
rcll
sbbb
xorb
insl
sub
pop
lods
lcall
pushf
in
mov
cmp
xor
imul
xchg
loopne
mov
pop
imul
int3
pop
stc
test
and
jle
lods
xchg
adc
sbb
out
push
mov
add
sub
cmp
pop
in
and
xor
push
pop
adc
mov
jle
inc
xchg
repnz
mov
loope
fincstp
jl
ljmp
lret
jg
mov
jp
mov
add
jb
mov
leave
jae
cld
adc
pushw
nop
loopne
mov
loopne
lods
sti
xchg
rclb
jmp
cmp
mov
loope
sarb
mov
sahf
pushf
nop
push
pusha
inc
sub
mov
in
push
cli
cmp
cmp
cmpsb
sub
repnz
ret
adc
lods
xchg
inc
sbb
mov
fs
dec
insb
push
lods
cli
jp
sbb
jle
adcb
sahf
stc
dec
js
xchg
sar
xchg
push
cmpsb
push
jp
hlt
or
cld
mov
dec
sub
add
push
cmp
outsl
pop
jae
mov
in
ret
pushl
pop
mov
xlat
xrelease
cmp
jmp
jmp
dec
lahf
or
xchg
dec
or
pop
sub
jl
xor
call
aad
mov
sub
xor
lock
in
lret
fwait
jl
ds
add
cmp
add
and
cmc
mov
xchg
or
add
aaa
cmp
dec
or
ja
pop
inc
repz
xchg
enter
xor
cmp
lret
rclb
stos
cltd
das
fldt
mov
xor
or
pop
int
mov
in
sub
jecxz
inc
iret
das
mov
sarb
xor
pop
movsb
loopne
mov
mov
inc
and
adc
clc
fimuls
cmp
xor
mov
leave
fwait
jge
or
pushf
mov
xchg
xchg
mov
ficompl
ds
jo
call
xor
xchg
sbb
mov
mov
mov
bound
or
jge
mov
xor
cmpsb
adc
pop
adc
sti
shlb
mov
mov
pop
dec
mov
stos
mov
mov
rorl
add
leave
jae
out
mov
xchg
jae
jle
jnp
adc
add
xchg
fdivp
dec
pushf
das
pop
int
sbb
cmp
mov
jo
shrb
repnz
js
push
shrb
lock
lods
xchg
adc
mov
std
pop
mov
add
clc
js
xchg
stos
mov
loopne
mov
cmc
cmpsl
stos
inc
aaa
pop
pop
out
je
mov
inc
fs
or
xchg
mov
adc
aaa
popa
or
mov
inc
in
or
push
and
loop
popf
iret
out
arpl
out
sub
adc
aaa
cmpl
xchg
mov
loopne
mov
imull
aaa
nop
inc
ljmp
sbb
js
xchg
inc
mov
jge
mov
gs
dec
js
xchg
cmp
pushf
dec
test
add
scas
inc
lods
pop
call
stos
lods
xchg
adc
out
xchg
mov
mov
inc
std
ljmp
js
jle
lods
xchg
adc
icebp
xchg
adc
add
push
or
xlat
adc
push
into
push
pop
lods
fbld
aad
out
jp
xchg
mov
leave
stos
mov
imulb
fsubrp
std
outsb
fwait
cmp
push
sbb
pop
cs
loopne
mov
adc
cmp
xchg
mov
cmp
daa
cmp
jno
pop
leave
repz
ljmp
xchg
cwtl
in
or
xchg
test
push
popf
mov
xchg
stc
jl
jle
lods
xchg
adc
je
xchg
pop
cwtl
in
aas
inc
out
push
movsb
xchg
add
movsb
mov
pop
repz
inc
jge
fisubl
jg
outsl
test
xchg
sbb
daa
cwtl
mov
in
fincstp
test
jle
lods
xchg
adc
sub
pop
imul
adc
jne
mov
mov
jecxz
ljmp
loopne
test
or
mov
sbb
pusha
dec
cmp
lds
or
lods
push
daa
mov
into
aaa
enter
std
mov
pop
mov
push
stc
ret
xorl
stc
inc
orb
lret
icebp
dec
pop
pop
cmp
sub
andb
loop
cmp
sbb
mov
mov
loope
daa
test
loopne
jmp
cmp
int3
adc
mov
inc
out
xor
adc
orb
int3
cmpsl
sub
or
fs
dec
outsl
dec
xchg
xchg
dec
or
mov
mov
jle
hlt
adc
adc
sarb
jg
add
jle
addb
fs
insb
mov
test
sahf
mov
popa
hlt
test
cmp
das
outsl
mov
inc
lock
jl
dec
mov
loopne
jl
lods
movsb
xor
aaa
add
mov
adc
jmp
xchg
stc
je
mov
lods
xchg
dec
adc
fwait
jecxz
mov
ffreep
push
into
pop
add
xchg
or
ss
jae
xchg
adc
pop
lock
into
inc
iret
lcall
sti
mov
pop
xor
jb
movsb
adc
push
jl
xor
push
hlt
ds
mov
inc
pop
fs
mov
dec
loope
push
cmpb
clc
jbe
add
push
xchg
popa
cltd
scas
movsl
test
jecxz
lods
xchg
fwait
sub
and
stc
data16
xchg
push
sahf
cmp
sub
orb
call
mov
xchg
callw
pushf
aam
adc
out
dec
fbld
dec
rorl
cmc
pop
adc
mov
cmp
cmpsb
lea
je
pop
mov
js
jle
lods
xchg
adc
adc
add
inc
inc
cmp
ds
lods
insl
ja
rorb
mov
sbb
jge
lds
test
adc
and
ret
xor
icebp
lods
pushf
mov
cltd
cs
push
cs
pop
push
inc
dec
xchg
cld
cld
xor
insb
pop
push
je
sti
fisubrs
aas
jle
icebp
outsl
push
int
xor
stos
icebp
test
imul
inc
cmp
lahf
or
inc
bound
fs
stc
ja
xor
sysexit
js
rorb
xor
call
in
mov
mov
xchg
jp
imul
push
mov
enter
add
xor
sarl
dec
sub
adc
pusha
bound
mov
call
adc
enter
rcll
sub
dec
and
cmpsb
add
sbb
mov
lcall
lcall
push
add
data16
fs
xchg
lret
js
scas
aad
mov
cmp
xor
nop
pop
lret
fistpll
lods
pop
cmp
aas
push
xlat
lret
repnz
sub
pop
ljmp
cmp
call
arpl
loop
xor
adc
jae
test
hlt
dec
pusha
mov
sti
mov
add
jo
fwait
and
lret
cmpsb
push
stos
and
enter
out
call
out
dec
js
xchg
or
lods
jle
aaa
cli
sbb
lret
roll
adc
push
or
cmp
iret
adc
in
xchg
xchg
mov
cmpl
int
icebp
push
out
jecxz
pushf
push
lret
orl
xchg
adc
popf
cwtl
fwait
xchg
xchg
lret
mov
test
test
mov
popf
jns
fldcw
adc
rcll
addl
add
push
outsb
mov
gs
jnp
enter
rolb
into
mov
push
lret
aam
push
fs
lret
call
adc
jne
inc
xchg
test
xor
add
mov
incl
pop
shr
cld
int
adc
push
into
add
call
jno
lahf
xchg
das
and
ljmp
cmp
je
sub
call
pusha
pop
inc
jecxz
movsl
int3
pop
fnstsw
mov
sbb
mov
test
scas
mov
pop
fistpl
icebp
jle
fcomps
jecxz
dec
ret
outsb
sbb
scas
jl
sti
rclb
dec
or
cmp
movsl
sbb
mov
mov
pop
and
int3
mov
out
dec
mov
icebp
sub
out
jmp
js
cmp
and
push
adc
sbb
mov
xchg
mulb
mov
into
iret
jge
sub
pop
jecxz
push
dec
out
fcmovnb
push
das
push
push
mov
lods
xchg
adc
notl
in
arpl
pop
xor
js
in
push
ja
pop
mov
jae
repnz
ss
sysexit
add
out
jne
mov
addr16
and
je
pop
pop
in
stos
mov
adc
fbstp
enter
push
das
loop
pushf
sahf
xor
inc
push
cmpsb
in
repnz
mov
cmp
mov
loope
out
orb
cs
mov
xchg
pop
jo
fmull
mov
cmp
dec
stos
jle
lods
xchg
adc
sub
inc
lds
dec
ror
xor
test
mov
jbe
jo
cmp
add
pop
rcr
pop
and
pop
data16
incl
add
in
jae
xchg
adc
xchg
loopne
xorl
xchg
jno
sahf
jns
pop
push
cmpsb
lock
add
xchg
mov
data16
push
insl
inc
add
mov
lods
xor
subl
iret
inc
push
inc
push
cmp
andl
cmp
jmp
repz
lock
lods
xchg
adc
mov
sbb
loop
ds
mov
call
out
js
pop
cmp
sti
xchg
daa
jne
add
push
fisubl
mov
fcoml
add
mov
mov
mov
inc
sbb
sbb
and
out
clc
jle
lods
xchg
adc
fbld
jge
arpl
mov
dec
push
dec
test
sub
subb
push
test
stos
test
mov
iret
je
xchg
jbe
cmc
adcl
cmc
mov
shlb
insb
push
iret
out
cltd
mov
mov
xchg
je
xchg
adc
cwtl
inc
xlat
mov
es
mov
arpl
push
out
cmpsb
adc
or
iret
cmp
and
pop
out
mov
jno
lea
repnz
push
add
pop
and
cmp
popf
mov
cmp
push
mov
add
arpl
push
imul
adc
fs
jmp
sbb
sub
fsub
adc
or
and
xor
jno
dec
cmpsl
sbb
sub
fldt
jmp
sub
mulb
ja
jmp
and
mov
inc
xor
sub
xchg
cmp
or
or
add
decb
insb
jne
repnz
mov
adc
mov
bound
lock
shr
mov
cltd
int3
mov
rolb
pop
or
xchg
and
out
and
cltd
ss
cmc
lock
lea
push
mov
stc
clc
and
push
lcall
in
imulb
dec
mov
loopne
ret
xchg
inc
dec
add
rep
cmp
xchg
outsl
movb
cmpl
cltd
dec
test
aam
ret
xorb
scas
das
xchg
andb
fistps
loope
popa
outsb
dec
cmp
push
loopne
imul
inc
int3
sbbl
xchg
cmc
xchg
mov
xchg
movsl
lret
sbb
scas
inc
dec
add
cmpsl
xchg
xor
sahf
lods
or
in
imul
xchg
jbe
or
lds
xor
jp
push
loope
popf
add
int3
xlat
sub
mov
mov
iret
in
fiaddl
addr16
jp
add
and
nop
fcmovu
mov
and
xlat
jbe
out
mov
mov
xor
test
jo
pop
out
sub
inc
idivb
xchg
pop
ret
sbb
jo
movsb
adc
imul
xor
mov
and
cltd
js
call
cmp
dec
push
aam
jno
dec
aam
cld
dec
sbb
and
lcall
insl
out
add
loope
push
xorl
push
adc
shll
mov
mov
imul
lods
pop
dec
mov
scas
sub
mov
add
cmpsb
lods
xchg
adc
mov
imul
push
pop
adc
lea
adc
enter
aaa
fidivl
add
mov
sysret
sbb
fst
mov
lret
pop
mov
lods
xchg
movnti
mov
sahf
jnp
mov
ljmp
cmp
xchg
stos
push
push
or
push
push
cmp
aas
std
mov
sysexit
add
jle
lods
xchg
adc
inc
cli
mov
loop
std
ja
pop
mov
jb
repz
add
cld
push
stos
loopne
mov
clc
or
xchg
mov
inc
out
fs
mov
scas
fcoms
or
mov
inc
fyl2x
scas
into
add
push
pop
mov
adc
popf
adc
adc
and
mov
push
sbb
testl
jmp
aad
xlat
int
sbb
in
mov
adc
inc
add
xchg
adc
fdivrs
rclb
lret
push
sub
mov
adc
push
pop
inc
gs
dec
xor
out
or
aad
sub
push
inc
adcl
test
pusha
insl
or
push
jbe
loopne
push
mov
xchg
mov
xchg
aam
xor
fstl
jle
lods
xchg
adc
jl
cmpsl
call
mov
push
xor
sti
inc
xchg
cmc
xchg
lods
xchg
sti
outsb
idivb
jb
xor
mov
daa
mov
push
test
inc
divb
iret
frstor
test
out
cmp
sub
pop
add
pop
jns
shlb
arpl
test
jae
lods
xchg
stc
outsb
js
xchg
xor
cmp
fstps
mov
out
push
sbb
int
jbe
outsl
mov
in
imul
addr16
pop
pop
push
cld
out
sub
sbb
pop
jbe
inc
out
xor
mov
xchg
es
js
push
lcall
cltd
mov
js
xchg
ljmp
jnp
pop
test
hlt
and
add
or
adc
jnp
dec
adc
pop
sahf
xchg
fucompp
inc
mov
in
out
leave
call
ret
and
cltd
jnp
xor
jle
lods
xchg
adc
cmp
fldl
out
xchg
adc
mov
mov
icebp
repnz
iret
addr16
ret
iret
std
ret
lods
and
ja
dec
arpl
popf
imul
out
fdivl
ficoms
gs
pop
js
repz
dec
xor
dec
leave
in
dec
aam
enter
mov
xchg
push
repz
lods
xchg
stc
data16
xchg
aas
insb
je
addb
cmp
fimuls
or
ds
ret
dec
push
lahf
fidivrl
mov
mov
out
xchg
hlt
mov
cmp
add
lret
lods
xchg
and
and
popf
jl
cmp
push
mov
push
in
xchg
adc
loopne
ret
loopne
sbbb
dec
mov
mov
xor
sub
mov
cmpsb
lret
test
ljmp
xchg
push
xchg
push
or
andb
in
push
scas
xchg
push
jmp
loopne
or
in
insl
lods
and
stos
test
lret
cltd
sbb
repz
jne
push
aaa
addr16
popf
cmp
loopne
adc
test
fidivl
lods
adc
pop
fsubrl
fiaddl
sub
pop
fadds
ljmp
push
out
sbb
les
jae
std
movsl
mov
xchg
shlb
ja
and
xchg
cs
adc
mov
cs
pop
addr16
xchg
fmull
push
and
xchg
dec
jmp
cmp
icebp
sbb
lret
bound
push
dec
lock
lods
inc
cwtl
or
es
jle
pop
mov
xor
mov
cmp
add
insb
adc
movsb
sti
dec
sub
push
lahf
test
aad
pop
pop
sub
push
fsubs
repz
js
xchg
outsl
inc
outsl
or
idivb
int
in
loope
mov
lods
mov
push
add
test
lods
add
inc
push
push
shrb
stos
nop
adc
out
sbb
jge
cmp
jnp
xchg
adc
mov
dec
js
xchg
call
pop
dec
xchg
cmc
sub
hlt
mov
add
xchg
out
adc
iret
sbbl
ret
add
add
xchg
xchg
mov
pop
mul
jns
pop
mov
or
jne
xchg
out
les
jne
mov
inc
inc
or
ljmp
fninit
aad
arpl
xor
xor
lea
js
and
cltd
jle
pop
call
cmp
pop
mov
ret
fisttps
lret
pop
dec
cmpsl
inc
lea
jne
and
add
lret
lods
xchg
into
popa
lock
les
fidivrl
mov
adc
xlat
mov
test
lods
xchg
adc
inc
loopne
loopne
out
push
mov
push
xchg
daa
dec
sbb
std
cmp
mov
cwtl
fadd
and
add
movsl
cmp
add
aam
lcall
sbbl
outsl
in
xor
xor
fs
mov
outsl
pop
aad
adc
jg
scas
pop
sbb
aaa
lds
es
gs
lods
xchg
stc
imul
sti
rolw
xchg
lret
je
inc
ja
cmp
jp
push
gs
out
stc
fcom
xchg
adcl
data16
mov
movsb
test
xor
adc
out
inc
inc
lret
lods
xchg
pop
jge
sbbl
inc
rorb
in
dec
xchg
jbe
out
inc
out
test
pop
je
out
or
jp
icebp
push
sub
mov
gs
outsb
scas
or
mov
outsb
loop
cmp
xchg
je
xchg
adc
inc
lcall
loopne
fs
adc
lds
in
xchg
sub
adcb
and
insl
pushf
pop
pop
cmp
mov
jo
leave
lds
adc
js
xchg
lret
adc
js
movsb
or
xchg
adc
lods
add
int
aaa
fnsave
sahf
movsb
adc
mov
push
adc
adcb
shr
push
push
mov
xchg
mov
sahf
add
inc
fstpt
push
mov
insb
pop
out
out
aaa
jg
dec
add
imulb
rorl
add
imul
inc
dec
xor
fisttpl
push
mov
loopne
cltd
xor
adc
inc
pop
sbb
push
xor
shll
das
pop
popa
push
jae
xchg
adc
es
lods
adc
lea
fs
fldt
mov
mov
scas
jmp
mov
pop
sbb
ds
mov
xchg
loop
cmp
insb
xchg
and
lods
xchg
adc
xchg
or
into
gs
fadds
push
jmp
xchg
cmc
xchg
lods
xchg
fwait
subb
xor
std
int3
testb
icebp
cltd
dec
xor
arpl
push
fists
rorl
push
sti
mov
dec
arpl
ja
iret
mov
mov
sbb
xchg
ljmp
and
sarb
lods
xchg
adc
enter
mov
or
aad
ja
mov
in
and
mov
jb
push
adc
ficompl
mov
aaa
or
push
lods
xchg
inc
adc
xchg
test
cwtl
flds
sub
ss
lods
or
mov
popa
xchg
mov
test
bound
xchg
mov
adcb
pop
movsl
fdivrl
inc
mov
add
pop
lods
sub
leave
jmp
mov
cmpsl
push
and
mov
jbe
clc
lods
fdivr
mov
cmp
lcall
or
movl
sbb
jmp
add
test
dec
addr16
cmp
jb
inc
jle
movsb
stos
sbb
stos
xchg
pop
mov
cmp
add
lods
xchg
mov
or
lcall
dec
and
faddp
push
in
daa
lods
movsb
pop
popa
cld
mov
push
mov
ret
pop
cwtl
dec
sub
rcll
arpl
xchg
incb
push
xchg
lods
call
xchg
mov
push
fs
sbbb
jbe
sub
pop
cmp
push
je
mov
orb
icebp
icebp
xchg
mov
pop
dec
jns
movsb
push
xor
push
cmp
pop
mov
mov
enter
sub
in
rcrb
push
out
sahf
sbb
popa
push
xchg
mov
dec
loop
stc
pop
rorb
mov
mov
std
push
xor
jle
fstpt
cmpsl
mov
ret
xchg
pop
clc
jb
fsts
lock
leave
jge
inc
mov
movsl
sbb
adc
push
cs
and
lcall
lods
xchg
inc
inc
mov
int
add
sub
rcrb
pop
push
and
or
mov
mov
jge
movsb
leave
xchg
cmpsb
in
add
push
cld
mov
xchg
mov
xor
imul
inc
cmp
mov
fadds
push
fwait
popa
outsb
push
mov
mov
xchg
adc
repnz
add
add
repz
imul
mov
es
ljmp
dec
pop
lea
and
fwait
xchg
subb
jmp
inc
push
xchg
xchg
imul
rcrb
lcall
push
popa
pop
adc
jmp
jp
xchg
out
pop
sub
icebp
push
sbb
sbb
sub
lods
movsb
mov
inc
adc
fsubrs
jle
push
mov
or
stc
push
js
xchg
stos
pop
fs
xchg
into
inc
insb
imul
jne
push
arpl
je,pn
pop
hlt
imul
cltd
mov
out
daa
popa
es
fdivr
jl
stos
inc
and
dec
mov
jne
enter
mov
pop
mov
aad
adc
movsl
in
mov
jp
pop
jb
pop
xor
dec
pop
test
sbb
gs
and
cmp
mov
mov
pop
inc
data16
cmc
insb
xor
repz
pop
adc
pop
fucom
jecxz
add
les
mov
inc
int3
xor
sbb
push
cmc
dec
je
xchg
adc
loopne
ror
xor
push
mov
mov
sub
bound
lock
fisubrl
adc
aaa
or
jae
movsb
mov
sbb
stos
stos
add
and
xchg
mov
enter
cmpsb
inc
mov
pop
arpl
andb
ja
xlat
ret
mov
cltd
mov
mov
dec
fs
into
nop
cli
std
sti
int
dec
es
xorb
jmp
imul
push
push
xchg
mov
inc
sti
xor
aas
jnp
and
lock
loop
or
xchg
pop
mov
jmp
setne
fldt
and
dec
push
fcoms
fisubrl
aam
dec
test
dec
loopne
cltd
xchg
xchg
in
mov
and
xchg
mov
out
cmp
dec
lahf
pop
jl
xor
lahf
adc
loope
dec
ljmp
mov
mov
mov
and
loope
fisubl
out
add
push
icebp
scas
adc
add
and
clc
xchg
mov
loopne
iret
xor
push
iret
push
sub
xchg
frstor
int
out
or
xor
pop
mov
pop
mov
sbb
sbb
addr16
sbb
mov
movsb
or
ja
xchg
mov
fwait
js
dec
sahf
mov
jecxz
adc
jmp
stc
sbb
cltd
arpl
jnp
push
hlt
adc
jg
test
lock
sbb
paddusb
inc
xor
inc
loop
std
adc
jo
cwtl
mov
xchg
mov
insb
test
xor
sti
sti
cmp
xlat
loop
xor
jbe
mov
mov
subl
out
lea
xor
in
in
mulb
jle
push
aas
lret
data16
sarl
xchg
or
mov
fstps
mov
and
and
jp
shlb
gs
aas
je
add
cmp
jae
xchg
adc
mov
cld
imul
sbb
xchg
lods
xchg
.byte
.byte
js
