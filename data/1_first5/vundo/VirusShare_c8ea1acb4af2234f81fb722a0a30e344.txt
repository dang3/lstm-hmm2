push
mov
sub
mov
andl
andl
test
push
push
push
lea
jle
lea
mov
xor
cmp
jle
mov
mov
mov
cmp
jne
cmp
jge
mov
mov
cmp
jle
mov
mov
inc
cmp
jl
incl
mov
addl
cmp
jl
cmp
jge
xor
jmp
mov
sub
sub
inc
xor
dec
test
jle
lea
lea
lea
mov
mov
mov
sub
inc
add
add
dec
cmp
jl
sub
xor
inc
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
push
pushl
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
call
pushl
mov
call
push
push
pushl
call
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
xor
test
jle
push
lea
push
mov
cmp
je
inc
add
cmp
jl
pop
pop
cmp
jl
xor
jmp
test
jle
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
inc
xor
test
mov
jle
lea
mov
inc
add
cmp
jl
pop
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
pushl
pushl
jne
push
pushl
call
jmp
dec
push
call
pop
ret
int3
int3
int3
int3
int3
call
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
pushl
mov
pushl
mov
push
call
mov
mov
add
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
call
mov
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
add
adc
and
xor
inc
in
repz
mov
iret
dec
jae
mov
or
cltd
jecxz
jecxz
addr16
adc
dec
in
xor
inc
mov
arpl
cmp
insb
mov
orl
jecxz
repz
int3
loope
mov
jmp
pop
mov
pushf
jge
jae
out
mov
lret
or
jl
dec
mov
cmp
int3
pop
andl
pop
lods
inc
dec
push
jg
jbe
mov
cld
cmp
stc
xchg
rcll
out
lcall
insl
psrlq
stos
cld
jne
out
es
dec
icebp
cmp
lock
or
std
xchg
push
into
push
sbb
dec
imul
push
aad
xchg
mov
rorl
iret
mov
fnstcw
and
cld
mov
and
adcb
sub
shl
loop
repz
sub
and
imul
aas
mov
xchg
idivb
sar
mov
pop
mov
and
mov
pop
mov
xchg
pop
sub
dec
sbb
cmp
and
xor
cmpsl
mov
pushf
arpl
pop
aad
cmpl
sbb
sub
push
push
popa
fcoml
dec
xchg
sub
cmp
in
subl
sub
add
cmp
cs
jge
int3
jbe
push
in
push
mov
les
clc
xchg
mov
mov
outsl
mov
insb
outsl
test
inc
test
adc
mov
mov
or
sbb
sub
cmp
int3
adc
and
xor
inc
mov
arpl
pop
mov
or
sbb
sub
cmp
int3
mov
loope
repz
ljmp
xchg
sbb
stc
and
icebp
nop
add
scas
jb
sbbl
sub
testb
sub
jno
daa
repz
adc
xor
xchg
lcall
or
lahf
in
mov
lds
mov
in
dec
in
push
andl
mov
loop
xchg
sahf
notl
add
cmp
imul
or
fdivrl
das
sbb
je
jle
xchg
leave
dec
movsb
pop
test
leave
sbb
ss
pop
std
loop
add
loopne
xor
add
inc
in
or
mov
call
lahf
lods
xor
jno
mov
lea
mov
daa
xor
std
cmc
inc
mov
leave
aaa
ss
cmp
sub
in
ja
loope
daa
cltd
push
mov
mov
andl
add
xchg
lcall
test
les
lods
outsb
mov
xor
fisttps
loopne
cld
xchg
or
add
mov
ret
arpl
enter
push
or
es
iret
ljmp
xor
dec
jns
dec
rorb
rcll
or
ret
cmp
dec
cmpsb
mov
fdivl
das
xchg
and
aas
mov
call
jns
cld
dec
loop
push
xor
dec
push
sbb
jno
and
les
movsl
lock
inc
sub
mov
imul
jae
sbb
pusha
push
push
clc
shll
adc
repz
push
xor
outsb
mov
inc
inc
sub
shrl
repz
shll
mov
add
mov
ljmp
cmp
imul
cwtl
inc
scas
mov
sti
out
sub
leave
je
add
cli
adc
xchg
inc
cmpsl
std
pop
adcl
pop
jb
sub
jne
arpl
shll
les
je
mov
outsb
lret
bound
orl
ret
insl
mov
repnz
into
je
repnz
mov
jns
fmull
stos
cmp
nop
mov
sbb
cmp
mov
mov
cwtl
and
cmp
mov
mov
inc
testb
push
out
out
lods
aam
add
cmp
loopne
out
repz
imul
icebp
pop
jnp
push
popf
std
jmp
xchg
dec
mov
fimuls
mov
xor
mov
sbb
ljmp
sbb
sub
iret
mov
fwait
jge
lea
or
out
je
mov
sbb
jl
push
adc
add
jp
dec
fpatan
xchg
mov
xchg
sub
mov
bnd
pusha
shr
ljmp
in
sbb
outsb
xor
js
lcall
mov
jbe
fisubs
adc
and
in
into
ss
ret
sub
jecxz
fimuls
scas
out
mov
cmp
aam
gs
pop
sbb
sbb
fcmovnb
pushaw
ja
ja
sbb
mov
adc
aaa
push
xchg
pop
mov
pusha
dec
push
mov
iret
sbb
mov
pop
and
mov
js
jne
clc
imull
sarl
insb
punpckhbw
call
lcall
lock
and
sub
xchg
push
daa
jo
ss
sub
add
add
test
add
mov
hlt
push
lahf
rcll
stos
pusha
cmp
cli
and
arpl
dec
cmpsb
jp
ja
imul
imul
aad
push
shlb
sahf
mov
fidivrl
xchg
cmp
jnp
lock
add
push
lahf
stos
sub
adc
fdivr
imul
arpl
push
loop
jl
mov
push
sub
notb
jge
adc
mov
or
or
mulb
or
or
in
xchg
scas
sar
insl
sub
insb
push
sbb
lea
inc
enter
test
push
jl
sub
mov
push
cmpsl
jb
push
outsb
cmp
out
sbb
mov
or
sbb
stos
jb
int3
xor
adc
xor
mov
shrb
cmp
push
mov
push
mov
adc
xchg
mov
pop
test
and
or
cmpb
les
and
enter
mov
cmpsb
test
cmp
add
sbb
in
push
push
dec
mov
mov
stos
aad
xchg
arpl
loope
mov
and
sub
icebp
adc
mov
xchg
push
xor
dec
lods
jnp
cmp
fdivs
stos
mov
jecxz
lcall
fwait
pop
lods
outsb
xchg
mov
mov
cmpsb
pextrw
or
add
inc
jle
mov
enter
lock
in
dec
push
push
pop
dec
shlb
mov
xchg
ss
jnp
xchg
stc
les
into
outsl
mov
adc
fistpl
in
addb
ljmp
aad
repz
dec
mov
sbb
pop
mov
mov
sbb
xor
mov
pop
movl
scas
xchg
pusha
cmp
xchg
mov
mov
push
arpl
loope
es
inc
mov
xchg
xchg
in
dec
push
jmp
stc
ja
jo
les
iret
inc
outsb
loopne
and
push
pop
or
mov
das
mov
dec
aaa
ljmp
push
leave
push
rorb
mov
dec
add
dec
mov
lods
jmp
dec
mov
inc
mov
bound
js
das
sbb
cmp
and
jo
mov
test
fbld
and
lock
cmpl
sub
and
cmp
out
jp
inc
jge
and
mov
fld
inc
dec
or
jge
ja
lock
and
dec
push
pop
push
inc
push
xor
sbb
cwtl
out
dec
outsb
xorb
je
mov
aad
iret
ficoms
xor
xor
enter
and
data16
cmpsb
jae
in
aaa
or
rcrb
jmp
adc
pushf
pop
xor
arpl
faddl
mov
lcall
gs
sbb
adc
fidivs
out
inc
imul
repz
mov
aaa
test
leave
fisttps
sub
ja
jge
mov
cli
and
xchg
sub
pop
and
loop
movsb
push
xchg
and
scas
subl
es
loop
clc
inc
push
cmp
ja
add
sub
cmp
xor
je
add
adc
jle
test
cmp
mov
cmpsb
adc
xchg
xchg
xchg
idivl
dec
loope
jns
push
cmp
and
xchg
xchg
add
lcall
addr16
es
jae
rol
and
push
and
es
loopne
mov
inc
imul
jbe
or
jbe
sub
cmpb
cltd
dec
xchg
int3
mov
out
xor
xor
imul
and
ret
add
mov
dec
push
sbb
mov
dec
ret
imul
pop
sub
xchg
rorb
sbb
sbb
out
mov
sbb
lds
sahf
sarl
jl
or
fwait
and
notb
icebp
call
inc
push
cmp
sbb
sub
int3
cwtl
sub
mov
mov
add
mov
jnp
jecxz
std
dec
adc
inc
xchg
add
xchg
test
pop
mov
sbb
push
dec
xor
push
mov
mov
loop
mov
lea
inc
jp
cmc
je
xchg
dec
fmull
fwait
push
adc
jecxz
popf
dec
mov
mov
xor
movsb
jno
mov
cltd
jge
xlat
lods
cmp
mov
xchg
dec
dec
outsb
mov
xchg
push
ja
rorl
loopne
pop
ljmp
mov
xor
dec
adcl
idivb
add
fimuls
add
scas
rolb
stos
int
addr16
les
js
fwait
in
loop
mov
or
push
aam
mov
sub
adc
in
xor
sub
pop
inc
push
dec
ror
sub
enter
push
mov
xchg
fsubrl
cmpsl
jns
inc
jae
cmpsl
popa
cmp
cmp
mov
jp
sbb
int3
shlb
jae
sbb
pop
jbe
mov
in
or
outsb
cmp
outsl
fs
std
cmp
push
jp
cmpsl
pushf
xor
movl
xchg
loop
stos
lds
xchg
stos
test
jnp
fidivrl
cli
pusha
aas
mov
sbb
cwtl
mov
movsb
mov
xor
pushf
insb
xchg
out
push
mov
ja
or
scas
unpckhps
jecxz
push
and
jp
iret
dec
jge
andb
jo
outsb
bound
mov
or
lret
cld
sbb
stc
pushf
and
mov
sbb
data16
jne
add
movsl
fwait
xchg
pop
jnp
fidivs
pop
das
push
add
cmp
push
js
fs
or
mov
sub
cmp
mov
add
mov
imul
daa
jnp
mov
lcall
dec
icebp
mov
mov
aaa
data16
pxor
loop
mov
dec
sbbb
js
mov
cmp
add
dec
push
fbld
jno
hlt
mov
int
and
mov
das
dec
and
cmp
or
inc
fwait
call
scas
push
and
sahf
cmp
or
mov
mov
dec
pusha
ss
cmp
cmpsl
add
ja
push
mov
lret
scas
into
lret
rorb
mov
push
loopne
bnd
in
mov
ss
in
repnz
out
rorl
flds
push
jge
jle
cmc
lods
and
or
add
push
sub
push
outsl
cmpsl
jle
sub
add
movsb
ja
or
aas
push
push
in
sti
sub
icebp
fmuls
loopne
lahf
push
mov
push
std
sbb
dec
sub
pop
pop
xor
xor
aad
les
lock
fsubrl
xchg
xor
fisttpl
loope
or
in
outsb
adc
pop
mov
std
pushf
adc
bswap
repnz
iret
xchg
aad
rcr
mov
leave
pop
shl
test
push
dec
mov
adc
cmp
lds
dec
jae
push
mov
aam
roll
dec
movsl
inc
push
jae
mov
into
jle
jle
mov
sub
pop
ret
jno
xchg
data16
pop
xchg
int3
mov
aas
imul
daa
ret
inc
jp
mov
scas
sub
xchg
add
xchg
dec
ja
add
outsl
test
and
mov
xchg
or
mov
mov
inc
push
jne
inc
sbb
ss
rol
into
sti
gs
sbb
pop
jbe
inc
leave
cmc
js
mov
roll
push
sub
stc
mov
test
inc
std
push
lcall
test
inc
sbb
push
stos
fmuls
or
shrl
stos
icebp
inc
popa
sbb
imul
test
jno
sbb
xor
jnp
mov
jae
mov
and
int
add
out
push
int3
divb
lret
adcb
arpl
ja
inc
xchg
icebp
arpl
sahf
stos
pop
adc
in
out
mov
jo
mov
daa
imul
sbbb
ss
xor
fld
lods
outsb
movsb
jb
arpl
decb
cld
mov
daa
insl
cmp
push
out
loopne
mov
xchg
std
ja
push
fsubp
jae
pop
cmp
in
pusha
jb
clc
fsub
lds
je
loop
sbb
mov
mov
xorl
push
mov
mov
lcall
ja
xlat
or
lret
in
ja
mov
xorl
inc
push
mov
dec
adc
mov
adc
cs
insl
fwait
mov
enter
push
mov
rcr
jp,pt
dec
ljmp
repnz
mov
fstl
movsb
int3
push
repnz
daa
sarl
fnstenv
dec
or
or
xchg
or
inc
scas
xchg
popa
popa
mov
push
lcall
or
xor
fldl
sbb
lcall
rep
or
arpl
imul
int3
or
cmpsb
out
fidivl
sub
movsb
mov
dec
repz
xchg
pop
add
mov
add
mov
push
cmp
or
xor
arpl
jge
or
xchg
test
mov
push
push
out
xchg
inc
inc
shll
insl
push
or
mov
dec
lds
pop
and
dec
jp
mov
mov
cli
sub
test
sub
ret
or
dec
mov
lds
outsl
add
fs
ja
inc
nop
hlt
lret
je
push
push
mov
outsb
or
lcall
lcall
push
inc
mull
test
sbb
sar
sub
int
mov
aam
scas
pop
cmpb
loop
xchg
lock
jecxz
out
sarl
xor
push
scas
jle
dec
xchg
dec
sbbl
into
insb
cltd
mov
fisubrs
cmp
fs
out
imul
mov
push
les
push
les
repnz
sbbb
xor
lret
ljmp
int
cld
xchg
dec
insl
push
pop
mov
adc
lahf
jmp
sub
cmpsb
dec
cld
dec
mov
jle
ljmp
xchg
mov
cli
stos
jo
faddl
adc
rclb
cli
mov
cs
fs
push
xchg
fcom
stos
jns
xchg
cmp
js
adc
adc
push
push
mov
cmp
push
pop
mov
inc
nop
dec
insl
filds
xchg
leave
lods
mov
outsb
adc
push
sar
mov
mov
lcall
lcall
int3
sbb
sarl
mov
xchg
mov
mov
imul
outsb
loopne
jns
mov
add
add
adc
dec
push
mov
push
and
xor
adcl
das
xchg
hlt
lods
daa
and
insl
mov
cmp
pop
mov
mov
testb
dec
pop
inc
into
or
adc
or
cmp
or
cmp
xor
xchg
xchg
loopne
loopne
add
rclb
inc
imul
lea
stos
movsl
push
sub
push
xor
cmp
enter
xchg
aad
pop
movsb
js
push
inc
jp
pushl
insl
lahf
cmp
icebp
and
and
jns
in
or
inc
imul
out
scas
fwait
ret
aaa
leave
mov
iret
out
sub
jo
sbb
adc
es
dec
xchg
into
adc
mov
enter
clc
leave
xchg
pushf
ds
or
add
inc
sti
jae
xorb
arpl
sahf
xchg
pop
mov
sub
push
adc
cmp
cmp
add
cmp
or
xchg
into
inc
and
push
decb
inc
imul
mov
xor
cltd
je
leave
daa
ja
push
jmp
push
sti
mov
scas
adc
jl
inc
aam
pusha
push
xor
mov
shrl
fstps
ret
xlat
push
daa
cltd
loope
scas
mov
or
testl
outsb
stos
adc
icebp
frstor
xchg
test
in
xor
push
cmpsl
out
xor
cmp
cmp
test
mov
sub
fidivl
or
in
mov
leave
in
or
mov
mov
pop
mov
add
cmpsb
ret
in
fwait
pop
out
mov
stos
lahf
lods
push
mov
fcomps
test
ret
xchg
clc
movsl
leave
cmpsl
push
mov
cmp
push
stos
ss
and
add
xor
jne
cmp
mov
jae
iret
shrl
ficomps
rcr
movsb
ss
out
mov
push
ja
ret
subb
push
pop
rcr
xchg
lahf
and
lahf
sub
mov
push
ja
inc
popl
xchg
loope
sub
inc
adc
bndstx
test
mov
sbb
inc
jbe
insb
mov
and
fcomi
notl
lcall
test
test
xor
scas
adc
repnz
inc
push
jae
add
out
repz
mov
repz
lds
jp
mov
pop
aam
and
filds
and
lods
pop
test
out
ja
lock
fwait
cmp
inc
sub
and
in
das
sub
mov
pop
ja
dec
inc
popf
and
ds
bound
pop
out
addr16
fists
ret
arpl
xor
mov
mov
aas
dec
jle
pop
cmp
cmp
test
sub
clc
push
dec
dec
add
or
cmp
dec
mov
dec
int
insb
fisubrs
aad
cltd
fwait
icebp
pop
pop
lods
dec
xor
or
in
lret
lods
sbb
insb
push
adc
xor
lea
js
push
push
mov
xor
insb
lcall
inc
jg
mov
push
mov
movsb
pop
cmpsb
movsb
sub
in
scas
scas
inc
ja
movsl
pop
xor
in
outsb
addr16
nop
mov
cld
inc
sub
push
push
aad
in
mov
pop
in
into
cmp
push
add
inc
jbe
mov
xor
adc
sahf
cmp
cmp
xchg
jg
into
outsl
scas
leave
xor
push
imul
ds
xchg
add
sub
in
sbb
sbb
js
imul
xchg
adc
push
sub
repnz
dec
mov
xchg
in
cmp
jne
inc
stos
es
out
lret
jno
push
enter
pushl
add
ja
ficompl
hlt
push
popf
mov
subl
cli
aad
jecxz
add
mov
mov
rcrl
int3
cmp
sarl
dec
inc
cmp
lcall
out
pop
sub
pop
xchg
adc
leave
pop
dec
popf
inc
hlt
pop
shl
xor
dec
test
dec
mov
dec
flds
ret
add
loope
mov
fdivrs
inc
je
mov
lret
mov
iret
dec
and
cmp
sbb
inc
push
add
push
inc
lcall
cmp
ljmp
test
std
jmp
cmp
mov
mov
add
pop
ret
enter
add
mov
or
inc
or
loopne
push
fucomip
repz
std
add
or
fnstenv
lods
insl
aaa
mov
cld
add
hlt
cld
jno
inc
movsl
mov
shll
rclb
and
add
xchg
iret
lcall
sub
mov
push
enter
pop
pop
and
xchg
add
jecxz
xlat
cmp
orb
mov
lods
sbb
bound
mov
fsubrp
push
inc
lods
ss
ljmp
add
imull
inc
pop
clc
dec
add
mov
push
adc
daa
loope
add
cltd
jmp
imul
shr
scas
jmp
push
arpl
xchg
cmp
inc
inc
cmp
mov
in
lock
jecxz
and
sti
outsb
pop
or
cmp
lock
cmc
sbbl
push
xlat
andb
xchg
sahf
bound
adc
shll
dec
adc
cld
sub
loope
adc
outsl
mov
adc
outsl
dec
xchg
jne
lock
fisubl
aas
mov
push
sub
std
mov
das
ljmp
shr
sbb
mov
mull
mov
ljmp
mov
fs
push
push
aaa
xlat
popa
stos
jl
push
push
dec
arpl
inc
repnz
pusha
push
mov
cmp
repnz
xchg
das
daa
test
es
adc
sbb
dec
in
mov
std
cmp
push
rolb
addl
cltd
mov
stos
pop
jne
sbb
mov
mov
lahf
test
pop
or
cli
dec
lods
cltd
scas
int
out
ja
jne
cli
test
mov
insl
mov
cmpsb
sub
pop
daa
shrl
or
mov
leave
inc
mov
mov
pop
jmp
es
mov
mov
pop
xorl
sub
push
or
out
jecxz
rcl
inc
neg
lock
fs
cs
adc
rcll
nop
pop
mov
inc
ds
fsubrl
push
adc
lds
lcall
and
jl
xchg
nop
inc
rorl
in
loope
rolb
mov
lret
push
cmc
add
shll
xchg
inc
sub
lahf
mov
out
enter
inc
add
add
cld
inc
mov
arpl
pop
mov
or
sbb
sub
cmp
int3
adc
and
xor
inc
mov
arpl
pop
mov
or
sbb
sub
cmp
int3
and
xor
rorl
mov
push
insb
mov
ret
or
sbb
sub
cmp
int3
dec
fdivrl
adc
inc
mov
arpl
testb
mov
mov
pop
jecxz
rorl
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
xchg
dec
sbbb
mov
addb
adc
aam
out
and
push
popl
bound
sbbb
mov
push
repnz
add
add
xor
sub
push
jmp
sahf
jb
bound
stos
outsb
mov
push
ljmp
std
insl
mov
push
enter
lret
xor
cs
aam
xorl
and
pop
inc
jmp
push
push
jp
dec
jge
lret
repz
push
ret
cmpsb
ja
xchg
fisubrs
and
adc
jmp
sahf
push
lds
popf
out
insl
pop
jle
inc
mov
inc
sarb
and
inc
into
std
fisttps
call
mov
jb
ret
xchg
dec
jnp
xchg
sub
es
cltd
xor
and
sub
jnp
sahf
inc
jle
ret
mov
sub
jg
adc
lret
xor
sar
stos
fldl
jb
jp
bound
rcrb
sub
movsb
ljmp
fwait
jb
pop
lahf
adc
jb
bound
dec
fwait
pop
mov
mov
push
repnz
ds
sbb
sub
cmp
dec
mov
push
dec
out
xlat
das
aas
mov
dec
loop
adc
inc
mov
daa
flds
fmull
and
xor
rcrb
bnd
adc
lods
xor
sub
add
push
ljmp
lret
cmp
push
repnz
adc
add
xor
and
push
mov
jb
bound
mov
mov
push
repnz
adc
add
xor
and
push
mov
jb
bound
or
sti
mov
adc
es
js
es
lock
or
ja
out
mov
xor
aam
jno
pop
leave
push
push
test
fneni(8087
out
pop
sub
test
and
inc
ja
push
pop
fistpl
test
scas
jl
fsub
loopne
je
js
mov
and
rclb
adc
xor
push
or
mov
popf
into
ret
mov
xchg
cwtl
and
and
subl
xor
and
std
nop
out
dec
lods
rcrl
fdivr
jmp
mov
mov
cmp
ret
and
in
push
jno
and
push
mov
test
dec
and
mov
dec
lea
mov
clc
pushf
icebp
loopne
jg
mov
xchg
int
in
push
pop
jnp
mov
xor
adcl
shrb
cld
movsb
inc
xor
ja
loope
or
scas
jmp
xchg
incb
mov
xchg
call
scas
add
sbb
jge
mov
sahf
mov
sbb
lahf
mov
mov
jmp
in
hlt
add
pop
gs
mov
jecxz
fsubrs
inc
rol
dec
repnz
imul
push
xchg
or
push
pop
fists
das
cmp
lahf
jne
icebp
in
test
inc
pop
arpl
sbb
sub
mov
outsb
out
push
lret
mov
dec
outsb
lret
jecxz
fadds
mov
std
in
int3
dec
mov
dec
and
daa
xchg
rclb
stc
leave
movsb
popa
test
dec
or
gs
mov
and
icebp
lahf
inc
jp
je
lods
js
add
cmp
sub
test
stc
fucomi
xchg
fucomi
push
cmpsb
xor
push
mov
sbb
int3
mov
cmpsb
lahf
stos
dec
dec
xchg
stc
cld
scas
xchg
imul
iret
sbb
arpl
push
insl
mov
out
xchg
sub
sbb
dec
mov
or
jae
xchg
or
lea
fldcw
and
pusha
fsubs
cld
loop
or
pusha
mov
mov
arpl
leave
adc
les
pop
out
jg
dec
pop
lcall
andb
loop
fsubr
and
jge
mov
xchg
scas
adc
jge
stos
mov
es
aad
leave
sub
insl
sub
call
sub
add
sbb
xor
mov
arpl
fcomps
sub
dec
jae
fdivs
pop
clc
test
cmc
jae
xchg
dec
icebp
xchg
or
aam
xchg
jmp
cmc
add
scas
lods
push
push
popa
ja
xchg
sbb
loopne
loopne
push
das
sbb
sub
jne
loop
fstl
xchg
clc
scas
cs
mov
or
ret
in
das
mov
xor
mov
sbb
scas
in
sti
sub
add
jp
cmp
int
fstp
mov
xor
lods
push
cmove
push
push
mov
decb
xor
mov
mov
leave
jno
int3
addr16
loop
shrb
jle
mov
enter
fcompl
sub
in
cmp
lods
sub
inc
ljmp
adc
cmpsl
mov
xchg
sub
mov
jmp
mov
dec
outsl
mov
ljmp
jae
dec
test
dec
push
xchg
or
rcrl
add
jo
lods
adc
mov
mov
pop
in
rclb
mov
popf
stos
xchg
ret
loopne
xor
repnz
scas
je
cs
fstps
adc
pop
iret
in
xor
cwtl
add
add
cmp
ds
push
sbb
mov
jp
xchg
inc
sub
xor
pop
dec
mov
aaa
xchg
push
js,pn
or
xchg
lods
push
dec
ja
out
dec
stc
icebp
lock
pop
push
cmp
loopne
dec
int3
sbb
mov
into
mov
daa
xlat
xchg
push
gs
dec
add
out
mov
orb
mov
sub
movb
sbb
lods
sbb
sbb
fsubs
sub
push
add
pushf
push
aad
and
daa
pop
and
pop
scas
iret
in
das
inc
push
cmp
dec
jmp
fwait
mov
stos
fwait
push
or
sahf
shll
pop
lret
test
lret
icebp
loope
rorb
iret
jnp
lret
orl
xchg
int3
sub
push
xchg
mov
mov
imul
inc
int
mov
test
pop
inc
push
das
pop
xchg
movd
xlat
addb
or
dec
stc
and
sahf
js
incl
repnz
sbb
test
add
mov
pop
sbb
lret
jge
inc
mov
pop
test
push
xchg
rcrb
xor
test
test
jge
mov
addr16
movsl
pop
popa
xchg
test
ds
adc
movsb
inc
cs
sbb
pop
orb
in
mull
out
out
stos
addr16
and
cmp
sbb
or
xchg
mov
or
subl
sub
and
stc
or
xchg
push
mov
mov
dec
mov
and
jl
fcoml
and
add
mov
std
clc
push
mull
mov
mov
xchg
hlt
aas
nop
or
sbb
inc
mov
fmul
mov
jg
in
dec
cwtl
mov
push
fdivrl
ret
call
push
sbb
push
scas
repnz
call
push
out
mov
inc
push
cmpsl
lods
mov
das
loopne
ficoms
mov
imul
test
lret
pop
rorl
adc
inc
and
jl
dec
xorb
add
loopne
rcr
sti
fstpt
cwtl
enter
outsb
f2xm1
mov
mov
push
cli
testl
daa
add
mov
jo
cld
mov
insl
fiadds
add
add
and
lcall
leave
xchg
std
in
jmp
popa
lds
xchg
mov
lock
inc
xchg
pop
test
icebp
pusha
pop
mov
in
in
sbb
and
xorl
lods
push
adc
loopne
shll
shlb
popa
std
das
or
movsl
push
cs
push
xchg
pop
adc
iret
outsl
jecxz
cli
add
fildl
cmp
adc
nop
mov
in
dec
lods
sbb
dec
adc
out
repz
dec
iret
sbb
inc
xchg
jmp
mov
and
mov
dec
shrb
mov
mov
cmp
dec
pop
sbb
dec
push
mov
mov
push
sbb
inc
jns
push
cmpsl
xchg
cs
xchg
xchg
xchg
pop
push
cmpsb
lds
mov
or
std
aaa
xor
mov
jge
mov
sbb
cltd
jno
and
ljmp
jae
mov
clc
lret
clc
or
mov
fs
push
jp
xchg
mov
cwtl
je
xchg
and
and
cmp
pushf
mov
jb
jae
stos
jae
xchg
pop
aam
and
push
inc
jg
repnz
cmp
mov
jnp
add
or
insl
pop
cmpsb
sbb
test
mov
in
addr16
leave
loopne
popa
pop
aaa
jo
dec
sub
imul
and
mov
sarb
sti
and
sub
add
iret
inc
call
shrb
jmp
jle
or
mov
cs
into
in
iret
bound
lds
sub
mov
mov
fldcw
arpl
aaa
mov
inc
sub
inc
jb
pop
ror
insl
dec
mov
into
in
lret
mov
ret
push
inc
fldenv
adc
sub
mov
jb
pop
sbb
dec
adc
and
faddl
and
ds
nop
gs
pusha
dec
mov
jo
hlt
jbe
setno
pop
push
inc
push
into
and
sbb
mov
test
inc
cltd
gs
or
sbb
pop
or
or
mov
add
cmp
shrl
mov
jb
mov
or
inc
mov
xchg
push
ds
out
pop
or
dec
xchg
daa
imul
out
sbb
lcall
sbb
sub
pusha
sarb
lock
or
push
repz
mov
mov
adc
sbb
add
in
xchg
icebp
add
cmpsb
cwtl
and
daa
jmp
xchg
xor
xor
pop
jo
frstor
xchg
test
mov
adc
aaa
cmp
pop
cmp
nop
xchg
jns
push
cmp
or
mov
mov
idivl
mov
repz
sahf
add
stc
cli
sti
into
mov
jp
adcl
inc
fdivrs
xchg
test
dec
pushf
mov
in
pusha
scas
rcll
jae
adc
stos
aam
jo
cltd
cmpsl
test
xchg
pop
xor
dec
jmp
or
sub
insl
or
mov
add
adc
or
jo
or
xchg
mov
mov
xchg
xchg
jne
shr
pop
imull
js
loop
imul
push
mov
notb
negl
pop
inc
mov
cmp
mov
nop
sub
jg
push
xor
addr16
inc
adc
and
mov
mov
int
mov
in
sahf
jo
mov
movsb
pushf
xlat
or
lock
ror
adc
lahf
mov
ss
mov
push
or
enter
in
add
dec
mov
pop
repnz
je
add
out
cmp
mov
rcrb
sbb
ficomps
sub
mov
mov
sub
ljmp
or
test
and
ret
xor
cld
fistpl
mov
jl
lods
push
xchg
cli
add
push
xor
mov
mov
ss
inc
sarb
mov
mov
les
fidivrl
jae
mov
cli
movsb
cmp
adc
or
roll
imulb
dec
sub
xchg
cmp
test
adcb
loopne
icebp
jg
gs
xchg
xchg
decl
lods
pop
fs
or
dec
add
scas
cmpsb
add
mov
ret
rcll
outsb
repnz
mov
push
fisubrs
sbb
xchg
mov
pushf
enter
insb
lock
or
xchg
cwtl
or
xchg
sbb
inc
mov
dec
mov
cmp
enter
sbbl
pop
test
sub
sbb
sahf
mov
sub
in
push
pushf
push
cmp
repz
dec
ret
or
in
jns
outsl
xor
cmpl
jnp
fisubrl
enter
sbb
xchg
aas
inc
je
cmc
aaa
fnclex
scas
xlat
push
mov
push
mov
xchg
inc
insb
int3
add
cmp
jp
lods
inc
sub
aad
ja
or
aam
adc
int3
push
cmc
gs
ret
hlt
add
imul
icebp
cld
shll
shll
pop
mov
jo
aaa
jmp
filds
sub
xlat
inc
pop
mov
pop
adc
test
out
daa
jne
outsb
dec
int
pop
jg
adc
leave
push
adc
xchg
xchg
fs
pop
lcall
stc
jl
pushf
icebp
xor
stc
adc
sarb
jo
cmp
pop
fisttpl
add
adc
ja
cltd
std
xor
xchg
mov
clc
movsb
add
sbb
xchg
mov
mov
mov
shr
in
push
jmp
arpl
fisubrl
adc
mov
dec
cwtl
iret
insl
push
cld
mov
cmpsb
inc
pop
and
sti
xor
or
or
mov
and
das
fsub
jecxz
cmp
cld
test
iret
inc
rol
adc
push
loop
int
inc
inc
test
or
mov
add
rclb
sbb
adc
lods
xor
xchg
inc
ret
mov
adc
in
mov
inc
mov
jo
loopne
syscall
addr16
pop
sbb
add
jl
inc
icebp
xchg
dec
fistpll
fnstsw
push
mov
dec
xchg
jge
arpl
jmp
in
scas
dec
push
icebp
mov
xchg
inc
xor
and
pop
daa
pop
lock
mov
das
lods
pop
cmp
cmp
jns
stos
out
std
outsb
xor
pop
adc
mov
pop
dec
push
fs
dec
ret
xchg
and
out
xchg
pusha
sti
dec
pop
loopne
test
sarl
and
or
push
sar
cmp
fdivp
mov
notb
js
push
bound
xchg
cmp
mov
push
imul
test
dec
xchg
cmp
jno
or
adc
je
push
mov
orb
repz
mov
or
xchg
repnz
jg
and
imul
mov
lock
cmc
aaa
decl
loop
jne
iret
popa
sbb
das
and
je
adc
frstor
dec
es
out
cmp
dec
std
push
push
flds
mov
mov
inc
ficomps
pop
inc
sbb
mov
cmp
lods
pop
sbb
ret
push
test
test
iret
sub
cwtl
jns
fbstp
aam
xchg
jge
insl
add
loope
add
mov
into
and
stos
mov
fisttps
jnp
outsl
and
add
fdivs
arpl
sbb
enter
adc
mov
mov
pop
int3
lods
or
out
popl
cld
stos
in
rorb
adc
fldcw
cmp
rcrl
jmp
test
xchg
lret
loopne
mov
addl
dec
pop
push
dec
stos
or
inc
mov
mov
jno
dec
dec
out
pop
xchg
js
push
into
pop
add
je
dec
aaa
pop
mov
jbe
daa
xchg
and
jae
sub
add
and
hlt
pushf
mov
aaa
subl
dec
popf
mov
movsl
cmp
insb
xchg
xchg
dec
mov
and
lcall
jmp
xchg
mov
js
jne
inc
filds
outsb
mov
push
adc
ret
stc
dec
lret
push
mov
fwait
aaa
bound
aam
cli
fldl
loope
call
das
test
outsb
data16
mov
inc
in
cmpsl
popf
adc
movsb
test
insl
dec
notb
add
mov
cltd
js
ds
inc
mov
mov
stos
cmc
fldcw
jb
popa
std
inc
fidivs
pop
lds
xchg
and
in
push
in
xor
dec
add
cwtl
pushf
xchg
sbb
dec
mov
fdivr
cmpb
xchg
xor
or
xlat
xor
aaa
nop
dec
pop
xlat
leave
cltd
jne
jnp
jbe
insl
out
mov
and
push
push
dec
imul
or
fidivs
je
and
or
cmpsb
pop
mov
sub
adc
ja
nop
push
sbbb
stc
aad
jbe
pop
hlt
xchg
fwait
mov
or
rclb
loop
arpl
pop
fucomi
lock
jo
sub
xor
sarl
pop
aam
orl
bound
sub
sbb
or
aam
dec
and
dec
inc
jecxz
test
sub
inc
push
push
call
xchg
mov
and
aam
jmp
push
cmpb
xor
sbb
sbb
test
negb
mov
ds
pop
ja
pop
sbb
aas
xchg
cmpsb
xchg
std
shr
xchg
insb
lret
mov
mov
lcall
mov
jno
dec
xor
adc
sar
insb
nop
jno
cmp
mov
cmpsl
jae
das
das
cmp
mov
xchg
fs
rorl
ljmp
mov
int3
lods
dec
lock
mov
cmpsl
adc
mov
cmpsb
inc
call
je
incb
push
or
lock
sbb
repz
ds
je
cmp
mov
mov
mov
cmp
mov
rcrl
inc
mov
mov
mov
xchg
testb
movsb
mov
sub
pop
xchg
dec
mov
int3
call
inc
fistpll
test
mov
stc
bound
loope
sbb
xor
int
fbstp
sbb
xchg
in
mov
sbb
add
add
cmpsb
mov
jb
jmp
addr16
sub
xchg
dec
jp
sarb
fists
sub
pop
jno
adc
sub
dec
div
shr
push
mov
push
cmp
adc
pop
push
add
daa
in
and
inc
cltd
enter
xor
mov
mov
jmp
loopne
ret
arpl
pop
pusha
dec
test
xchg
cwtl
shrb
fcomip
pusha
jbe
sub
loopne
pop
imul
mov
inc
cmpsb
loopne
jno
fcom
sti
int
mov
loope
lds
cwtl
xor
lcall
lcall
jle
inc
in
sub
lret
sub
popa
outsb
xlat
sub
xchg
jb
les
xor
test
dec
pop
sti
enter
movsl
cmpb
das
inc
shll
test
das
outsl
xorl
cmp
mov
popa
mov
lods
stc
push
cli
ss
and
mov
je
lret
ja
dec
dec
mov
inc
adc
mov
fbstp
mov
jbe
mov
lret
mov
inc
xor
mov
mov
and
mov
enter
hlt
push
popa
push
mov
and
in
clc
icebp
and
js
sbb
js
addr16
sar
scas
sbb
dec
in
es
mov
out
mov
jbe
or
std
lock
jle
addr16
cmp
outsb
stc
adc
imul
in
insb
xchg
push
lods
sub
mov
add
inc
stc
cltd
cmp
insl
pop
aas
and
lods
adc
leave
out
sub
gs
sub
dec
out
or
push
mov
add
clc
sub
call
sub
loop
lret
pop
sbb
and
rorb
add
out
lds
mov
pinsrw
mov
sbb
cmp
sub
roll
pop
xor
adc
mov
imul
je
push
adc
jmp
sub
movsb
cmp
cld
sub
and
or
inc
jmp
push
jno
push
sbb
pop
lret
xor
add
mov
orl
push
into
les
jns
sbb
jns
push
insl
push
inc
adc
add
xor
xor
xchg
xlat
inc
popa
mov
aam
pushf
and
push
test
inc
xchg
fstps
pop
push
xor
ljmp
leave
mov
loopne
setg
stos
jae
sbb
dec
dec
scas
call
rcrb
dec
jns
xorl
repz
dec
pop
fldcw
cmp
int
sahf
mov
push
lret
pop
dec
add
shlb
cmpsl
and
aaa
push
in
in
add
insb
stc
adc
in
outsl
data16
shl
xchg
dec
push
xorl
sti
add
lds
cmp
outsb
pop
xlat
iret
dec
and
xlat
mov
fisubrs
mov
dec
pop
aas
inc
sub
aas
xor
mov
test
movsb
arpl
jns
jns
repz
insb
nop
stos
lcall
fldcw
les
xchg
jae
sahf
mov
pop
mov
repnz
and
mov
mov
adc
mov
add
sti
aaa
in
mov
insb
jp
mov
pop
xor
inc
mov
pop
dec
aad
add
gs
jge
in
inc
lds
xchg
lret
pop
sbb
mov
push
sub
pop
mov
push
fucomp
loope
jl
mov
mov
loopne
repz
xchg
add
jecxz
mov
xor
leave
and
push
push
in
out
clc
stos
insb
add
cmp
and
dec
lcall
cs
mov
dec
mov
or
jecxz
xchg
xor
pop
push
push
ss
add
jb
jle
push
fisubrs
xor
mov
movsl
decl
test
hlt
es
jge
xchg
and
ds
stos
stc
sbb
js
out
jl
into
adc
xchg
subb
jae
subb
lret
dec
and
mov
xchg
ret
call
in
scas
lret
sub
jns
je
mov
xor
pop
inc
mov
in
icebp
fimuls
leave
adc
pusha
lcall
fisubs
prefetch
mov
fdiv
outsb
adc
add
jne
arpl
jl
mov
jp
cs
movsl
aaa
and
and
sub
cmc
push
in
and
lods
hlt
cmp
adc
pop
shrb
pushw
sbbl
outsl
pop
push
mov
stc
out
add
and
dec
sbb
ja
and
fidivrl
and
mov
in
cmp
retw
mov
mov
insl
imul
bound
outsl
add
mov
mov
decl
add
xor
inc
sub
mov
sub
mov
push
dec
outsl
jb
lds
idivb
cmp
in
xchg
sub
lret
cmp
mov
jp
jns
scas
mov
fsubs
mov
inc
mov
dec
jno
adc
stos
arpl
psllw
cld
pop
mov
jle
push
ret
loop,pn
adc
add
xor
and
push
mov
jb
bound
mov
mov
push
repnz
adc
add
xor
and
push
mov
jb
bound
mov
mov
push
repnz
adc
add
xor
and
push
mov
jb
pusha
mov
mov
mov
push
jb
in
into
std
je
out
and
lea
inc
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
scas
lea
mov
stos
test
sbb
cmp
sub
dec
insl
pop
jge
lea
mov
iret
in
fisttps
jnp
pop
cmp
dec
insl
pop
jge
xchg
mov
movsl
out
aam
das
or
xor
add
add
xor
out
mov
fisubrl
push
and
in
xlat
in
sub
mov
ret
add
lea
pop
jp
adc
lds
sub
fptan
adc
cmpb
nop
sub
mov
testb
loop
inc
out
divb
or
jne
iret
call
lahf
cmp
sarl
out
out
int
int
cltd
mov
das
in
das
jecxz
sarb
mov
jno
fmuls
pop
insl
push
or
in
cmpsl
leave
push
or
ficoms
pop
aad
test
dec
jge
scas
ds
clc
push
jb
jmp
pop
inc
js,pt
in
push
lods
jg
push
ja
rcrb
push
gs
dec
outsl
aaa
jnp
lcall
out
int
in
das
or
pop
and
push
jg
dec
ja
jl
out
ljmp
mov
outsb
bound
sbb
or
push
pop
or
or
lods
in
hlt
cli
shrb
cltd
dec
jns
js
dec
pop
aas
or
pop
or
fistpl
out
in
das
or
pop
cmp
dec
insl
pop
jge
lea
mov
iret
in
das
or
pop
cmp
dec
insl
pop
jge
lea
mov
mov
xor
movsb
test
xchg
notb
aas
add
add
jg
insb
ret
lea
sbb
mov
cltd
add
mov
cmp
gs
add
decb
test
mov
lret
fisubl
aad
and
stos
dec
and
popf
or
lea
jmp
das
sub
test
xchg
and
push
and
fildl
dec
and
push
frstor
sub
aam
mov
test
mov
out
clc
int3
les
cmp
sbb
dec
icebp
xor
or
push
stos
push
mov
xchg
dec
xchg
pop
or
shrb
push
enter
mov
adc
mov
adc
inc
mov
rcrl
bound
mov
mov
xor
pop
outsl
sbb
pop
stc
add
xchg
insb
pop
fsts
fwait
test
jg
fs
loop
mov
jb
mov
mov
mul
shll
ret
out
mov
imul
or
pop
repz
dec
pushl
test
cli
xchg
mov
das
dec
cwtl
or
clc
sbb
lcall
sbb
iret
cmp
xor
in
xor
sub
cwtl
stc
sub
fidivs
popa
push
mov
iret
xor
inc
out
lahf
cs
jg
lea
addl
add
push
into
sub
sub
xor
sahf
ret
or
and
shlb
test
popf
xor
jns
cmpsl
dec
lret
loope
mov
sub
fninit
ds
xchg
xchg
mov
insb
lods
cmc
add
enter
xor
xchg
dec
in
jecxz
lds
adc
mov
cmp
push
adc
cmp
jecxz
imul
sbb
sbb
sahf
add
es
pop
cltd
dec
rorb
leave
or
pop
sahf
mov
cmc
push
sub
sarl
push
xor
bound
mov
mov
mov
xor
or
in
sub
sbb
add
mov
inc
sub
in
pop
mov
call
nop
sahf
push
mov
xlat
ljmp
cmp
pop
in
xor
or
or
xorb
push
hlt
rol
xor
jbe
adc
pop
push
xchg
lds
sti
xchg
mov
in
mov
add
cmp
inc
push
dec
add
add
cmp
outsb
sub
mov
iret
add
add
loopne
out
push
mov
xchg
add
push
xchg
jmp
test
cld
xor
in
xlat
pop
lret
das
jb
fistl
xchg
in
mov
xor
daa
aas
outsb
jb
sbb
int
xor
out
pop
and
sbb
and
lods
sub
fs
fucomi
xchg
addl
jge
add
mov
mov
sbb
inc
mov
xchg
movl
xchg
jno
lock
out
hlt
xchg
add
ror
shr
and
add
lods
sbb
inc
xor
and
or
imul
lret
inc
into
repnz
dec
mov
mov
mov
pushf
test
adc
arpl
push
jne
or
sub
or
aaa
xchg
xor
mov
cmp
mov
xchg
aaa
mov
test
inc
jge
jmp
pusha
mov
movsl
add
mov
mov
das
ljmp
cs
and
popf
adc
cmp
fsts
push
push
je
aam
rorl
cmp
inc
push
xor
and
aad
adc
fcmovne
adc
dec
mov
rolb
pop
xchg
jle
cwtl
cmp
or
cmp
and
adc
push
shufps
out
xchg
sub
lcall
adc
cmpsl
push
mov
xchg
or
test
sub
les
xchg
fimuls
out
popf
aam
push
mov
push
adc
cwtl
call
enter
inc
aad
popa
cmpsl
jae
sar
stos
shll
test
lea
xchg
or
add
sub
xchg
xor
lods
pop
out
repnz
mov
pushf
in
lea
fdivl
insl
es
out
jb
je
dec
xor
jecxz
sub
pop
sub
jnp
sbb
insl
ds
popa
pop
in
xor
mov
movsl
fmull
dec
notb
sbb
push
sahf
sbb
xor
aam
cli
jno
push
inc
cmpb
xchg
cmovg
jnp
aaa
inc
mov
sub
subb
mov
int3
out
in
xchg
cli
xor
xor
mov
jp
xchg
lcall
adc
jle
cmp
add
xchg
jle
in
filds
mov
insb
or
push
add
add
cmpsl
adc
jmp
inc
dec
mov
pop
dec
fcompl
pop
sbb
mov
push
xchg
sbb
xor
outsb
bound
int3
mov
inc
ss
xchg
data16
cld
xlat
xchg
std
mov
rolb
test
mov
xor
jbe
into
jns
out
hlt
sbb
or
fcoml
fists
and
jno
dec
shl
jns
cmp
xchg
stos
das
ja
in
sub
xchg
les
data16
pop
xchg
dec
leave
ret
cmp
out
test
cmp
sar
lcall
add
dec
adc
cwtl
add
sbb
dec
ss
rol
and
stos
cld
cmp
inc
lahf
icebp
inc
sub
fcmovnu
push
push
mov
into
fsts
stos
adc
ljmp
gs
and
cmp
lcall
fwait
shrb
loop
add
mov
outsb
pusha
pop
cmc
nop
pop
test
imul
mov
cmpsb
outsb
cltd
xchg
mov
imul
mov
outsb
sbb
aas
cmp
and
test
imul
sbb
pop
jo
or
xchg
out
aam
pop
cld
call
das
add
xchg
pusha
inc
loop
mov
rcrb
dec
adc
movsb
lea
dec
fistps
xchg
and
stos
jge
push
and
imul
inc
leave
sahf
popl
sub
mov
in
cmpb
cmp
jbe
repnz
and
mov
orb
push
or
jg
pop
xor
mov
inc
das
rorl
ljmp
cs
add
jo
mov
xchg
xchg
xchg
loop
push
push
adc
jmp
cmpsb
es
repnz
jb
xchg
adc
lods
repz
and
ss
ljmp
ret
lret
aaa
sarb
mov
push
mov
repnz
adc
push
sbb
pop
test
mov
mov
fcmovnbe
pusha
push
lret
push
add
aaa
pop
cmp
or
sbb
test
add
pop
jp
cmp
push
fwait
dec
dec
mov
mov
call
jnp
jge
pop
inc
clc
or
or
push
xor
push
test
fsubl
loope
outsb
jle
mov
scas
movsl
xchg
outsl
cmp
and
pop
dec
dec
jle
sbb
test
addl
ja
cltd
mulb
lcall
loop
test
pop
data16
sahf
pop
dec
mov
fdivl
dec
bound
std
mov
aad
xor
xchg
and
sub
mov
cmc
gs
sub
std
adc
out
mov
incl
adc
fadds
rcrl
mov
jb
mov
pop
cmp
mov
fisttpll
sbb
or
hlt
iret
jmp
adc
mov
int3
add
cwtl
iret
ja
push
mov
push
test
jo
sti
insb
xchg
sub
je
ret
dec
in
pop
sub
xchg
lods
push
ja
add
mov
or
push
rcll
xchg
mov
addl
sbb
ja
dec
ja
out
sub
cmpsl
adc
push
or
lret
or
push
fdivrl
xor
mov
add
mov
inc
ja
xor
sbb
mov
std
aad
mov
fildl
adc
add
test
mov
cmpsb
test
stc
addr16
enter
mov
mov
scas
push
or
pop
mov
outsb
es
rorl
dec
andb
sbb
ret
leave
adc
fwait
lret
lea
shl
mov
ljmp
ja
mov
adc
inc
in
pop
ss
sbb
mov
aad
dec
xchg
push
xchg
sbb
dec
sbb
mov
fwait
lock
cmp
xchg
xchg
outsl
pop
loope
popf
divl
daa
mov
icebp
cmp
jmp
cmp
out
daa
sub
nop
rcr
mov
cmp
push
sarl
andl
ds
scas
mov
pop
jp
mov
xchg
fnstsw
and
mov
fsubrl
fildll
scas
in
out
jno
add
gs
outsb
sub
add
pop
dec
mov
and
and
pop
xor
jno
push
xchg
xorl
arpl
fsubl
repnz
push
xchg
cmpsl
sbb
lret
push
insb
pop
pop
jle
test
popf
test
adc
inc
mov
shr
dec
popa
addb
xchg
jle
neg
mov
sub
nop
repz
sarb
aas
out
idivb
cmpsb
xor
sbb
aad
bound
xchg
mov
pop
fstl
lock
mov
xor
test
jle
sbb
daa
mov
xor
push
adc
jge
xor
lods
loope
clc
mov
orb
jecxz
xor
enter
movb
pusha
mov
xchg
pop
out
mov
xchg
cmp
push
fs
gs
arpl
pushf
lret
push
add
pop
loopne
pop
or
ljmp
test
sbb
out
dec
iret
test
ljmp
jns
imulb
cmpsl
rorb
push
sti
cli
fldt
test
test
insl
push
jecxz
cmpsb
jge
cpuid
andl
push
xchg
nop
or
adc
stc
push
or
in
aad
aam
inc
daa
mov
xchg
or
jmp
adc
aam
sub
pop
fsts
std
push
jmp
nop
xor
mov
mov
mov
pushf
lea
test
imul
adc
xchg
jmp
pop
rcll
xor
or
mov
pop
mov
xchg
xchg
inc
sub
sub
ds
dec
xchg
push
insb
pusha
popf
adc
and
ret
inc
inc
lods
mov
addr16
dec
into
mov
sbb
push
dec
dec
sub
xlat
pop
push
inc
insl
int3
std
add
adc
inc
repnz
cmp
lahf
orb
fdivrl
fdivr
adc
push
shl
orb
and
ljmp
add
or
stos
inc
jns
imul
jo
bound
mov
push
pop
ficoml
ss
lahf
aam
cltd
mov
sti
jns
flds
add
insl
gs
lret
cli
sbb
js
add
xchg
jne
int3
loope
repz
jae
mov
pop
sbb
xchg
fs
fdivp
into
sub
inc
xchg
pop
mov
fdivr
jbe
call
seto
sub
fimuls
fildl
out
cltd
adc
cltd
movl
xchg
fwait
adc
xchg
pop
lret
pop
outsl
ret
clc
inc
repz
mov
push
and
hlt
fsubl
cmp
aad
ret
jmp
cmp
lods
ljmp
cmp
cld
rcll
test
imul
nop
lods
dec
adc
xchg
decl
lea
stos
inc
push
cld
push
lea
mov
sub
mov
jl
sbb
mov
add
int3
mov
mov
mov
mov
imul
icebp
dec
pop
pop
hlt
clc
mov
in
decl
cmp
add
pop
loope
das
mov
add
xchg
adc
pop
jne
xor
lods
idivb
xorl
stc
mov
test
mov
ss
das
addr16
push
mov
repnz
push
std
ficomps
sbbb
xchg
mov
shll
addr16
mov
stos
mov
push
adc
pop
cmp
pop
push
adc
sbb
scas
dec
mov
jg
jno
sbb
in
dec
sbb
mov
jo
mov
inc
jle
cmpsb
lds
dec
imul
cs
mov
test
xchg
or
pusha
dec
mov
pop
mov
hlt
out
out
inc
mov
sbb
fistl
pop
leave
loop
dec
das
mov
sub
cmp
jnp
push
in
lods
ja
mov
add
mov
push
aam
mov
les
stos
pop
lea
lea
rcrb
in
leave
cld
pop
lahf
testb
stc
andb
add
rorl
mov
mov
in
mov
sbb
icebp
loope
push
lret
dec
xlat
lods
fnsave
fcomps
push
pusha
mov
or
inc
cwtl
push
stos
repnz
js
lds
push
pop
enter
je
fsubl
or
xor
test
xor
xorb
icebp
mov
cmc
mov
push
std
jno
push
adc
sub
lret
test
ss
push
testl
sub
mov
lods
add
mov
sub
and
lcall
loopne
fpatan
movsl
lcall
int3
enter
mov
cmp
daa
lea
stos
jg
jae
sbb
negb
std
mov
jp
lcall
cld
adc
loope
rorb
gs
and
fwait
xchg
push
loop
shl
or
mov
mov
xor
cmpsl
or
in
shl
push
cmp
lret
mov
cmp
idiv
or
cmp
fstpt
fsub
sbb
das
loopne
or
and
in
in
dec
leave
sbb
shrl
mov
incb
sahf
sahf
and
jb
subb
jno
cmp
popa
mov
cwtl
aam
inc
pop
call
adc
xorl
stos
jle
and
add
xor
daa
jnp
shll
push
pop
fildll
xorb
movsl
mov
adc
push
push
pop
adc
stos
leave
lock
xchg
or
cmc
jae
mov
mov
cld
lea
push
and
mov
popf
or
sbb
jl
outsb
shl
jne
inc
push
and
pop
cmp
xchg
mov
rol
ds
push
lret
out
dec
sahf
jle
mov
mov
mov
scas
sti
aaa
outsl
inc
enter
mov
cs
out
mov
dec
xchg
dec
mov
insb
cs
in
jp
mov
or
fisttps
pop
xchg
jge
sbb
notb
sbbl
push
repz
stos
sub
jg
pop
jl
sti
jno
jle
ja
aaa
jne
xchg
dec
adc
inc
or
and
lret
js
pop
push
sbb
notb
xchg
ret
jmp
sub
mov
jb
pop
cli
add
mov
xchg
and
pop
xor
xchg
cmc
fcomp
and
and
clc
cmp
shrb
pop
insb
into
test
scas
loope
jmp
pop
movsl
dec
cmp
adc
stos
jne
aam
jo
mov
je
fcomip
add
sub
addr16
fwait
mov
mov
jnp
inc
jg
lret
and
jne
in
scas
mov
ret
sahf
mov
and
mov
xchg
sbb
inc
jne
mov
inc
mov
mov
pop
lods
jo
jge
push
movsl
mov
mov
rcl
dec
aam
push
dec
cs
loopne
sahf
out
mov
leave
lcall
in
data16
mov
std
rolb
pop
sarb
pop
mov
or
scas
push
xlat
mov
imulb
cmp
movsb
repz
insb
mov
mov
in
or
ret
je
adc
lcall
xchg
mov
xchg
inc
jno
lret
daa
mov
cmpl
push
fs
out
mulb
std
xchg
pop
ror
lahf
sbb
sub
push
xchg
mov
cld
sbb
jmp
jmp
imul
shlb
ja
rolb
xor
cmp
mov
push
push
sahf
inc
loope
pop
push
cmp
enter
sbb
xor
xchg
push
rcrl
pop
push
daa
cld
cmc
or
cli
cld
outsl
ret
or
test
shr
fsubrl
in
jb
inc
fcoms
mov
stos
sub
push
sbb
add
inc
ss
cmp
mov
shl
mov
lea
test
jbe
imul
push
xlat
es
sbb
xchg
add
cmp
scas
inc
loope
mov
icebp
mov
stc
sbb
dec
sbb
hlt
mov
xchg
sub
pop
gs
or
and
mov
xlat
and
push
ror
pop
in
cmp
sahf
mov
imul
push
mov
push
cmpsl
pusha
sbb
fstps
dec
repnz
outsb
mov
sbb
inc
sub
pop
jno
lock
je
jns
adc
push
and
imul
xstore-rng
cmpsl
mov
mov
sub
push
jnp
lods
push
push
pop
cs
push
imul
mov
imul
xchg
dec
mov
mov
and
es
notl
cli
lret
jbe
rcr
xchg
jo
xchg
ret
popa
ljmp
xor
push
jg
or
dec
or
sbbl
inc
cmp
sti
sub
int3
rcrl
pop
stos
sbb
aad
scas
jb
dec
fldl
shrb
cmc
dec
stos
xor
xor
push
xor
js
cmpl
push
jp
ljmp
inc
test
add
sbb
aam
mov
push
dec
fwait
or
and
test
movsl
mov
enter
jecxz
andl
xchg
sbb
sbb
jnp
in
and
or
enter
ror
imul
int3
cld
inc
sub
shll
and
mov
stc
test
sbb
mov
stos
dec
xchg
and
pop
pop
jle
mov
lcall
and
insl
scas
fsubs
loop
adcb
jnp
xchg
shl
in
xchg
push
iret
mov
daa
mov
xchg
shll
clc
les
push
imul
jge
popa
dec
jmp
out
ret
push
dec
cmp
les
int
rcrb
sub
add
sahf
ja
xor
sarl
pop
or
out
mov
and
pop
cmp
xor
int3
nop
cmp
mov
insl
test
fsubr
rolb
mov
mov
push
xor
ss
xchg
jle
pop
mov
push
rcrl
imul
jns
sahf
test
ja
adc
ret
loopne
daa
stos
inc
mov
ljmp
xor
loopne
int
push
lahf
mov
xor
xlat
mov
or
sub
movsb
ja
dec
aas
stc
fisubl
adcl
and
push
push
pusha
scas
adc
aaa
shl
jle
fsubrs
dec
leave
in
mov
enter
negb
lea
stc
dec
xchg
das
push
filds
cmp
enter
and
js
in
mov
push
xor
ficomps
inc
out
ficoms
xchg
mov
sahf
jo
and
sub
or
xchg
and
sbb
and
jl
in
push
sbb
lock
nop
cmpb
pusha
push
or
neg
or
stos
imul
push
and
add
jno
in
mov
dec
push
es
inc
fwait
clc
int3
mov
icebp
mov
xchg
adc
test
rcll
mov
sub
outsl
xchg
jo
scas
mov
xchg
mov
cld
rolb
mov
push
push
pop
lcall
add
jle
icebp
sarl
add
sbb
dec
xchg
out
cmp
sti
push
movsl
and
inc
test
adc
mov
xchg
push
xchg
mov
sub
fidivs
fnstcw
frstor
pop
in
rorl
jl
inc
js
scas
sbb
fsubl
add
and
cld
pop
in
sub
sbb
jl
loop
cmp
xor
addr16
pop
push
stos
inc
sbb
lret
jb
mov
cmpsb
push
cmpb
or
test
mov
lods
mov
pop
xchg
fucompp
mov
daa
ret
jne
mov
push
popa
jmp
jno
sub
loopne
sub
ficoms
sub
push
add
ss
push
xorl
adcl
pop
sahf
repnz
pop
jnp
cwtl
lea
push
jl
std
cmp
adc
fstpl
pop
lods
lahf
mov
iret
in
das
or
pop
cmp
dec
insl
pop
jge
lea
mov
iret
in
das
or
pop
cmp
dec
insl
pop
jge
lea
mov
iret
in
das
or
pop
cmp
jg
dec
imul
out
int
in
fistpll
movsl
sub
mull
mov
mov
xchg
aam
cmpsb
xchg
mov
and
xor
add
adc
push
ss
movsb
mov
test
xchg
out
xchg
hlt
xchg
mov
mov
xor
gs
data16
ss
movsb
jo
add
hlt
into
les
gs
jno
pop
inc
sbb
inc
aam
mov
enter
outsl
cltd
aam
aas
xor
aaa
mov
push
leave
fildll
aad
add
in
sti
or
push
test
cltd
ss
add
imul
mov
mov
jle
dec
inc
mov
push
push
ja
cwtl
mov
loop
loope
mov
movsb
bnd
in
fdivs
xor
repnz
add
add
mov
pop
pop
add
xlat
or
xchg
ja
pop
dec
jne
adc
xchg
aaa
jl
adc
gs
stos
pop
sub
add
cmp
cmp
adc
jno
cltd
or
jle
inc
inc
ficoml
sti
pop
mov
test
hlt
xchg
mov
xor
push
xor
add
adc
sub
cs
adc
lock
cmpsl
xor
loope
adc
jo
adc
imul
nop
testl
fildll
jl
jno
das
pop
pop
push
adc
dec
push
shlb
mov
movsl
xchg
mov
cmpsb
and
xor
add
adc
fs
je
inc
ss
movsb
mov
test
xchg
out
xchg
hlt
xchg
mov
cmpsb
and
xor
add
adc
fs
je
inc
ss
movsb
mov
or
add
sahf
outsb
mov
sahf
pushl
fistps
dec
adc
ja
mov
sbb
insb
ficoms
test
add
in
pusha
push
jg
push
iret
movsl
mov
cmp
mov
jns
jle
out
rclb
repnz
inc
dec
cs
push
movsl
lea
sbb
jne
fbstp
jo
sub
jle
in
lret
cmc
ss
sbb
inc
in
outsl
jl
daa
stos
sbb
cmpsb
and
in
shll
or
rcr
push
jno
jnp
insl
mov
mov
xor
push
int
cmpsl
out
mov
fbstp
cmp
dec
or
sahf
or
xchg
mov
xchg
xor
xchg
adc
fistpll
ficompl
test
dec
inc
pop
and
out
jne
mov
push
or
subl
or
mov
fdivr
jno
or
imul
inc
in
pop
push
aaa
cli
popa
dec
add
shl
lret
nop
dec
ja
jae,pn
cmpb
sbb
mov
repnz
mov
xor
jb
mov
mov
sbb
jg
push
mov
std
gs
jbe
orl
sbb
jnp
into
scas
xchg
cmp
out
adc
scas
sti
adc
push
jnp
mov
push
jae
icebp
xchg
xchg
ljmp
in
mov
sbb
ljmp
insb
aam
aad
mov
xor
push
mov
push
jae
mov
inc
lods
mov
xor
push
mov
dec
shlb
pop
jp
xchg
in
pop
data16
aad
or
mov
popa
push
jge
cmp
shll
fldenv
pop
sbb
mov
ds
shl
add
js
adc
loop
shrl
sub
aas
cli
push
daa
and
pop
outsb
pop
push
inc
add
or
inc
push
jl
popa
repnz
cli
icebp
cmpl
fisubs
mov
mov
fcmovne
sti
mov
or
jmp
mov
incb
push
inc
adc
cli
adc
cmpl
repz
lahf
sub
mov
xchg
fscale
add
shlb
jnp
inc
mov
dec
jb
icebp
xor
fcmovnu
test
repnz
outsb
mov
and
and
movsb
pop
push
mov
test
pop
sub
out
pop
pop
cmp
mov
cmp
aaa
mov
call
outsb
dec
xor
push
je
mov
mov
ret
push
push
sarb
adc
pop
cli
adcb
jp
lret
or
mov
pop
adc
outsb
or
add
iret
and
clc
add
xor
and
push
daa
in
dec
dec
push
dec
mov
mov
push
fwait
xchg
data16
fnstcw
push
push
mov
cli
mov
in
test
jb
xchg
jmp
mov
cwtl
jnp
fisttpl
neg
adc
jae
lahf
nop
jno
sub
xchg
scas
jg
mov
repz
sahf
call
or
jb
mov
xchg
gs
xor
movsl
jno
lea
sbb
add
lods
cmpsl
mov
cs
xchg
pop
mov
push
pop
cmc
mov
fdivrs
and
mov
cld
cwtl
lock
mov
insl
push
jecxz
into
inc
sub
fs
fiaddl
cld
cli
aaa
fisttpl
rcrl
adcb
xor
sbb
aad
dec
mov
inc
adc
adc
lahf
pop
mov
or
xor
mov
and
int3
imul
push
stc
idivl
inc
inc
sarb
ds
popf
inc
push
or
jp
inc
jg
lahf
dec
test
and
cmpsb
aaa
cmp
cmp
hlt
or
and
xor
fistps
popf
data16
loopne
idivl
jo
xchg
xor
push
jne
arpl
lds
pop
jne
ljmp
pop
mov
ja
mov
push
int3
push
call
fdiv
push
xchg
leave
rorb
push
mov
cmp
sub
jmp
sub
xlat
pop
jmp
outsb
ss
mov
cmp
int
adc
enter
or
adc
mov
sar
pop
bound
mov
addr16
xor
xchg
push
daa
jns
push
fidivs
mov
ret
xchg
jg
mov
or
sub
nop
ret
pop
pop
pop
lods
jb
jl
sub
mov
cmp
jbe
mov
loopne
mov
shlb
cs
ret
cmpsb
out
mov
movsl
pop
arpl
pushf
mov
fwait
loopne
adc
ljmp
dec
dec
sbb
jmp
xchg
jbe
jb
add
outsl
inc
insl
stc
stos
sbb
push
sub
xchg
dec
popf
ljmp
in
and
and
mov
mov
xchg
incb
scas
xlat
hlt
inc
shlb
add
mov
cmp
xor
push
sub
dec
in
add
sub
adc
cmpsl
dec
mov
mov
int
and
or
movsl
cmpsl
mov
or
stos
inc
xor
mov
and
jne
orb
out
mov
adcl
push
xchg
sahf
push
roll
out
mov
outsb
mov
in
mov
pop
mov
mov
in
mov
push
in
sub
mov
push
nop
cmpsl
and
pop
shl
dec
push
lods
mov
stos
push
mov
aaa
addr16
sbb
scas
sub
pop
cmp
pop
adc
push
scas
lds
dec
add
hlt
sub
aaa
pusha
fisttps
leave
push
sbb
aaa
pop
sub
outsl
jae
cmp
sbb
int
and
inc
and
or
ss
jnp
jne,pt
add
inc
arpl
adc
jmp
test
inc
xor
dec
inc
cmp
mov
and
jae
pop
pop
loopne
jmp
pusha
lea
push
add
inc
sarl
fnstcw
loop
stos
ljmp
dec
scas
jecxz
repz
sbb
mov
dec
dec
out
mov
cmp
pop
aas
dec
pop
cmp
lods
xor
cmp
js
cmp
mov
sbb
jnp
or
and
imul
cmpsb
mov
shll
mov
mov
aas
mov
mov
mov
xor
add
imull
movsb
xchg
dec
scas
jmp
loopne
fistl
data16
jg
cmp
adcb
jge
push
adc
ret
addr16
pop
xchg
test
add
mov
inc
lret
jmp
cli
jl
aas
repz
adc
cmp
incb
xor
mov
jno
and
cmovp
sub
test
xchg
inc
es
aam
mov
dec
lea
pop
insl
inc
insl
mov
fbstp
xchg
xchg
mov
sbb
iret
pop
insl
sub
arpl
mov
add
test
and
pusha
sbb
inc
out
xor
sub
jne
sub
sbb
jne
push
lret
test
or
mov
sbb
cmc
pusha
adc
or
jge
js
out
push
add
out
int
arpl
jmp
pop
outsb
pop
repnz
les
adc
sbb
push
or
loope
movsb
ljmp
cmc
ret
rcrb
outsl
data16
mov
out
sets
jecxz
dec
into
int3
sahf
movsb
into
lea
ljmp
jo
cmp
inc
pop
outsl
pop
imul
add
cltd
test
pop
jecxz
lcall
xlat
push
cmp
test
sbb
push
les
ret
lahf
roll
out
adc
stc
pop
call
push
jb
inc
sub
push
scas
cmp
mov
mov
jnp
ja
fistps
data16
int3
lcall
insl
insb
scas
or
ljmp
jg
push
lods
hlt
sbb
test
fisubl
pop
dec
mov
lds
and
out
pusha
outsl
cwtl
je
fildl
insb
xor
imul
cmp
or
movsl
mov
jae
dec
addr16
jg
cmpps
ficoms
mov
fildll
adc
pop
popa
cmp
pop
xchg
gs
sub
insl
sbb
ret
mov
pop
jle
in
pop
rolb
or
arpl
js
pop
push
or
inc
jecxz
sub
shlb
push
inc
lret
pop
ret
dec
pop
daa
or
stc
jns
std
and
inc
or
mov
std
jno
sbb
dec
lea
xor
pop
or
loope
nop
repz
pusha
cmp
and
loopne
xchg
push
pop
arpl
mov
notl
jae
xor
sbb
add
mov
jo
rcll
push
or
rolb
rorb
sahf
aas
sti
mov
lea
test
ljmp
adc
stos
rorl
mov
jmp
sti
pop
repz
xlat
scas
cmp
dec
je
dec
ficoms
sarb
cmp
jns
out
pop
sub
sub
sbb
fsubrl
inc
gs
jne
mov
ret
mov
cmp
jae
out
sub
aam
insl
add
add
mov
mov
pusha
fcomps
sub
popa
sahf
mulb
sbb
jns
push
inc
in
clc
jb
push
dec
repz
jl
inc
popf
vrsqrtss
loope
dec
sbb
int3
pushf
inc
roll
jmp
in
loopne
sub
push
mov
xor
fs
pop
lock
outsl
inc
mov
sbb
lock
lahf
ret
push
pushf
pop
inc
scas
aas
xor
xorb
fiaddl
shrl
cmp
pushf
cwtl
test
je
ds
fmull
mov
cltd
movsb
xchg
dec
ficompl
mov
xchg
push
xchg
movb
pop
push
add
jecxz
ss
pusha
xor
sub
xchg
mov
adc
cltd
push
adcw
out
das
jmp
cwtl
out
pop
fidivs
cli
jl
cmpsl
ret
cld
test
add
sub
mov
inc
pushf
shlb
pushf
lock
dec
dec
xor
pop
outsb
or
mov
mull
mov
inc
sti
inc
mov
sbb
jmp
fidivl
cli
jge
stos
in
xor
sahf
pop
pushf
jge
push
adc
in
add
sbb
add
add
stos
pop
pop
xor
insl
data16
stos
fdivr
jno
aad
add
rorb
outsb
daa
sub
cltd
and
mov
or
xor
fldcw
roll
jg
mov
decl
and
push
push
sub
out
sub
les
test
je
or
fimuls
in
leave
xor
pop
mov
frstor
add
fists
cmp
pop
lds
xor
push
and
fldt
pop
out
mov
push
cmpb
hlt
push
fbld
lods
jmp
jo
xor
mov
mov
or
int3
in
mov
push
imul
ror
mov
shl
enter
inc
dec
push
push
loop
repz
inc
sbb
aaa
arpl
pop
xchg
mov
aam
ret
mov
fdivrl
in
add
aaa
mov
movsl
add
sbb
adc
addl
cmp
xchg
or
adc
out
push
insl
fimull
jl
and
clc
lret
in
xchg
and
loopne
mov
push
subl
dec
mov
mov
or
testl
dec
enter
or
add
insl
aaa
nop
jg
inc
mov
shl
or
xchg
das
mov
pushf
pop
add
mov
in
jno
jno
gs
fidivrl
loope
xchg
sub
mov
sbb
lret
fimull
adc
leave
jle
pop
xchg
inc
mov
sbb
subb
scas
popf
aas
mulb
movsb
cmpb
pop
imul
mov
stos
ljmp
lock
xchg
jge
xchg
lcall
push
pushf
push
jmp
adc
or
aaa
and
sub
roll
stc
mov
shrl
mov
jge
push
mov
ss
mov
inc
int
in
cmp
and
lcall
ret
vpsubsw
aad
ja
add
dec
fldcw
and
add
inc
adc
int
loopne
dec
xor
das
inc
add
test
inc
push
std
push
sarl
sahf
in
dec
dec
mov
dec
push
xor
sub
imul
push
and
jmp
roll
pop
sti
pop
mov
jl
aad
movb
adc
int3
jb
cwtl
mov
push
sbb
mov
mov
add
lea
sahf
and
das
mov
ds
out
push
push
lea
sbb
aas
addb
xlat
or
mov
mov
mov
lret
inc
lcall
mov
insl
pop
ret
hlt
xchg
dec
cltd
mov
inc
and
sub
imul
in
lock
push
lret
aad
negl
sbb
clc
or
or
pop
pop
outsl
add
adc
ljmp
fildll
xchg
repz
rol
arpl
popf
sbb
xchg
sbb
into
out
lock
xchg
add
or
sub
aad
cmpsl
aas
inc
cmc
push
lret
adc
in
or
icebp
outsb
cltd
bound
add
or
ja
cmpsl
dec
push
scas
hlt
xchg
icebp
outsb
adc
fcomip
lret
inc
out
filds
mov
rol
popa
std
rcr
mov
pop
xchg
cli
sub
mov
pop
and
outsl
adc
nop
sub
adc
sarl
cmp
sub
das
adc
pop
decb
insl
xor
lods
icebp
js
imul
xchg
ds
sub
pop
popa
out
leave
pop
mov
xchg
and
test
je
fwait
mov
xchg
cmpsb
daa
fists
sub
dec
jnp
out
jmp
leave
leave
arpl
test
xor
rolb
push
jno
fwait
cmp
sub
mov
lcall
ds
xor
or
out
xor
xor
fiaddl
mov
lahf
data16
daa
adc
and
scas
or
arpl
aad
aam
sub
xchg
test
pop
bnd
add
jmp
fists
xchg
sbb
icebp
mov
cmp
adc
sbb
xchg
dec
adc
mov
xor
pop
aaa
sahf
pop
jnp
dec
inc
mov
xchg
jg
jecxz
dec
push
jb
jecxz
bnd
xor
or
pop
mov
sbbl
movsb
cmp
adc
lret
mov
mov
sbb
js
idiv
rclb
adc
stos
out
pusha
aad
das
cmpsl
into
scas
outsb
cmp
test
popf
out
xchg
imul
add
addr16
pop
xchg
bound
aad
sub
xor
out
sub
les
fmull
cmpsb
push
push
jg
push
ds
nop
mov
jo
inc
dec
cmpsb
sbb
mov
and
gs
xor
jecxz
pop
daa
lock
jo
xchg
insl
popf
xchg
movb
rorb
ret
inc
negb
mov
pop
inc
xor
jae
cld
lret
inc
dec
push
je
adc
mov
cli
jno
leave
aad
pop
enter
sbb
xchg
cmpsl
xor
mov
push
push
sahf
add
test
xchg
int3
aas
lahf
sti
sahf
cmp
rol
mov
sahf
mov
ljmp
mov
fs
jle
dec
add
arpl
jecxz
cmp
add
imul
push
mov
in
push
cmpsb
add
shlb
push
cmp
and
jbe
jns
push
inc
fdivrs
test
out
xchg
insl
xor
loopne
hlt
xchg
dec
fnstcw
ret
lds
mov
mov
xor
adc
leave
pop
jae
int3
mov
or
out
or
int3
ret
bound
xchg
lcall
es
ds
jp
push
push
jo
cmp
cmp
jge
dec
ss
push
jp
xchg
fcomps
mov
cwtl
sbb
call
and
in
mov
dec
dec
pop
dec
sbb
adc
cmpsb
clc
mov
ret
sub
sub
lods
or
lret
out
push
sub
mov
cwtl
jo
jp
sbb
addr16
xchg
in
dec
dec
or
clc
xor
ret
xchg
push
loope
xchg
negb
cmp
sub
jmp
sahf
jnp
bound
inc
push
nop
jp
push
out
arpl
add
add
pop
int3
mov
mov
pop
or
test
dec
lcall
or
mov
sub
and
jae
push
mov
xor
mov
cltd
xchg
and
inc
lret
clc
sbb
or
inc
fsubl
in
je
gs
lret
cmp
jns
lret
rolb
xchg
xchg
test
notb
jns
dec
or
pop
dec
mov
mov
arpl
imul
push
mov
gs
out
xlat
add
enter
cmp
sarb
or
xor
hlt
pop
aas
inc
fimuls
sbb
cmc
mov
mov
out
loopne
scas
cld
ficoml
mov
sub
pop
jle
mov
push
rcll
xchg
xor
imul
xchg
push
cmp
ds
enter
cwtl
jo
sbb
les
sub
iret
mov
jnp
lods
loope
dec
and
mov
push
sbbl
sbb
cmp
inc
je
fcomps
adcb
jge
jno,pn
pop
lea
cmpsl
and
mov
add
sbb
jns
xchg
iret
dec
pop
add
mov
xor
mov
push
out
adc
pop
cld
ds
outsl
xor
loope
bound
push
fildll
inc
pop
rclb
outsl
adcb
push
cmpsb
into
in
jbe
jns
push
out
or
test
inc
pop
in
stos
mov
push
pusha
and
add
jmp
sbb
iret
lcall
fisubrl
cmovno
popf
fsubl
ss
andb
cmp
sbb
push
jecxz
std
test
popa
mov
popf
pushf
xor
and
add
pop
in
out
sbb
push
repz
sbb
into
inc
push
jo
mov
scas
pop
xchg
pop
adc
pop
lods
std
xchg
pop
xor
mov
outsl
sbb
push
aad
dec
xor
xor
jp
mov
dec
insb
mov
mov
pop
fsubs
mov
loopne
adc
das
rcl
nop
fstpl
addb
dec
out
push
clc
repnz
inc
mov
leave
push
push
mov
inc
or
lahf
loopne
lret
mov
and
sub
and
inc
push
por
scas
xor
cmp
inc
xchg
mov
icebp
les
test
aas
push
stos
add
pop
cmc
hlt
cmpl
test
fiadds
addb
cmp
daa
cmp
stos
test
push
scas
jle
mov
jmp
gs
pop
jne
inc
push
mov
pop
jl
push
fwait
dec
mov
xchg
pop
mov
in
jmp
out
pop
fs
fcmovbe
pop
or
push
push
add
roll
sbb
jae
adcl
jb
mov
adc
inc
xchg
and
push
pusha
icebp
dec
add
xchg
pop
incb
leave
sub
mov
std
ja
xor
mov
lretw
in
imul
ss
sbb
mov
jns
mov
lret
jno
aam
sbb
sbb
fsub
sbb
inc
push
sbb
ja
sub
sbb
mov
dec
mov
lds
push
loop
cmp
and
shrb
pop
ljmp
mov
or
repnz
pusha
inc
mov
push
into
fiaddl
fstl
sbb
ret
mov
sbb
dec
ficoml
or
pop
cmc
out
and
cmpb
pop
jo
sub
inc
pop
mov
push
lahf
sbb
mov
iret
aas
mov
xlat
dec
jno
or
mov
dec
xchg
xchg
push
adc
mov
loopne
jb
sarb
cmp
push
xchg
std
insb
jno
fldenv
mov
xchg
xchg
xlat
rcrl
fidivs
pop
aas
sbb
adc
adc
mov
arpl
pusha
push
mov
jnp
xchg
out
xchg
hlt
xchg
mov
cmpsb
and
xor
add
adc
fs
je
inc
ss
movsb
mov
test
xchg
out
xchg
hlt
xchg
mov
cmpsb
and
xor
add
adc
fs
je
inc
ss
movsb
shlb
in
hlt
in
les
xor
add
adc
adc
aas
push
ret
mov
test
xchg
cmpsb
in
hlt
xchg
ss
and
xor
scas
jbe
adc
outsb
cld
jle
dec
stos
pop
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
insl
mov
addr16
push
pop
inc
push
pop
sub
repnz
cmpsl
cmpsl
xlat
xchg
xchg
ja
addr16
push
pop
inc
ja
addr16
push
pop
inc
pop
mov
testl
xlat
xchg
movl
outsb
jle,pn
dec
sbb
sti
mov
stos
leave
movsb
shrl
pop
and
jg
fwait
mov
insb
pop
shrl
sbbl
imul
aaa
sub
mov
cmpsl
popf
mov
push
xor
lret
daa
loopne
or
and
popa
data16
inc
arpl
mov
pop
daa
imul
cmpsl
mov
xchg
daa
aaa
notl
ja
pop
jb
mov
cmpsl
iret
sbb
in
pop
xchg
sbb
fadds
daa
pop
cmpsl
fildl
push
push
mov
xchg
xchg
pop
sub
aas
js
js
xchg
mov
sub
pop
repz
in
shlb
push
daa
jo
inc
adc
aaa
jge
push
push
pop
push
scas
out
mov
fsubrp
scas
pushl
inc
adc
jb
arpl
popa
or
jnp
push
sahf
cmpsl
lahf
in
jmp
hlt
mov
mov
addr16
add
adc
mov
cmpsl
xchg
mov
xchg
enter
loop
ss
xor
pop
addr16
push
pop
inc
pop
mov
cmpsl
out
xlat
xchg
divl
movl
ja
addr16
push
pop
inc
pop
mov
cmpsl
out
xlat
xchg
divl
movl
pop
or
scas
nop
push
dec
js
pop
mov
adc
jbe
xor
jmp
outsl
mov
push
dec
push
pusha
mov
fdivr
cmpl
mov
stc
xorb
icebp
ret
hlt
andl
stc
push
or
dec
push
xchg
rcll
push
lret
mov
sub
and
add
ds
cmp
sarl
mov
mov
or
sbb
scas
sti
into
fdivs
mov
ret
test
clc
xor
cld
add
ds
gs
pop
jo
loop
shrb
bound
sti
xchg
xor
test
mov
stc
jo
pop
adc
pop
aam
jns
mov
mov
jle
inc
jl
lock
push
or
cmc
lcall
lahf
lcall
push
xchg
push
sbb
xor
jae
cmp
mov
int
mov
adc
and
into
pop
and
test
iret
rcl
jo
add
sbb
xor
repnz
icebp
inc
jl
sbbb
stos
push
mov
fwait
scas
sub
mov
dec
cmp
add
jmp
mov
push
in
mov
inc
clc
mov
insb
pusha
add
cltd
sahf
mov
pushf
mov
fists
outsl
cld
adc
cmp
ljmp
scas
mov
adc
inc
test
mov
lret
ljmp
movsb
xchg
lock
xor
repnz
out
fstpt
pop
out
cmpsb
push
push
inc
insb
adc
stos
stos
mov
mov
pop
mov
jg
sbb
mov
fdivrl
add
fstps
push
aad
mov
roll
add
xlat
xor
cmp
pushf
es
notb
push
mov
repz
fwait
testb
test
add
ret
out
add
mov
es
ljmp
jns
inc
jp
push
pop
adc
iret
imul
dec
iret
dec
dec
add
cwtl
bound
xor
rcl
ret
xor
xchg
sub
cmp
xchg
push
orb
pop
inc
pop
iret
ss
fdivrl
or
stos
jg
daa
pop
ja
ds
es
mov
pop
and
fists
fwait
out
out
dec
roll
jge
stos
pop
shll
or
pop
orb
aas
loop
mov
pusha
jae
test
les
aaa
add
inc
movsb
in
lea
and
push
insb
out
mov
sub
pop
jb
scas
inc
in
xor
pop
stc
or
and
movsl
jmp
repz
push
pop
adc
es
mov
shl
mov
push
popa
shlb
add
dec
cmp
cmpsl
push
cmp
pop
repz
popf
mov
dec
add
rolb
mov
xchg
push
test
loope
xlat
pop
cwtl
bound
cltd
out
jns
pop
outsb
sub
push
add
xchg
repz
pop
fidivl
stos
mov
test
inc
mov
insl
mov
sarl
jg
jns
jl
sarl
xor
es
mull
pop
gs
sbb
hlt
cmp
add
adc
mov
dec
xor
dec
pop
jmp
in
push
sub
jecxz
into
sahf
fstps
inc
and
cmpb
mov
push
push
insb
push
lea
mov
pusha
or
and
jb
es
lock
out
mov
cmpsb
scas
dec
inc
movsl
jmp
and
cmp
mov
dec
pop
add
lods
and
jg
outsl
push
jmp
mov
testl
push
mov
or
fs
or
imul
loope
add
add
jne
cmc
sub
inc
sub
adc
mov
mov
fs
es
loop
add
stc
out
jnp
cmp
mov
jno
sbb
shrb
subl
pop
mov
push
adc
inc
sbb
mov
pop
enter
sub
and
fs
repz
call
add
sti
xor
nop
pushf
sarl
mov
jae
js,pn
adc
push
adc
jp
sub
aas
adc
xor
pop
dec
xor
test
lcall
cmp
out
push
push
pop
mov
test
mov
xor
es
sub
dec
pop
call
sub
int
sub
in
mov
jb
dec
mov
hlt
lahf
clc
mov
pop
imul
inc
xchg
sbb
and
fcoms
fcom
and
lcall
push
mov
jmp
mov
mov
xchg
nop
mov
cmp
popl
lret
in
icebp
adc
ret
inc
push
adc
add
mov
into
mov
fmuls
add
and
mov
cltd
cmp
push
and
dec
lahf
adc
push
mov
sarl
loopne
inc
mov
jl
repnz
shlb
cmp
clc
jae
mov
add
xchg
add
dec
arpl
xor
push
movsb
je
out
inc
mov
xor
pop
inc
mov
cmp
xlat
lret
andb
ss
cmpsb
int3
call
mov
ficoms
mov
fidivs
sub
push
and
xor
lock
mov
mov
cmpb
push
mov
jmp
mov
jge
cmpsl
aas
data16
fdiv
mov
cwtl
or
inc
xlat
imul
push
add
xchg
daa
xchg
int3
or
cli
out
in
push
in
das
add
int
outsl
cmp
divps
pop
mov
sbb
int3
movsb
fwait
cmpsl
push
movsb
psrlw
lea
push
ljmp
lods
out
and
add
in
stos
sbb
add
sbb
out
out
lret
popf
pop
cmp
rclb
stos
popa
cmp
mov
add
ja
fistpl
xor
add
mov
in
cltd
add
or
dec
pop
xor
xor
adc
adc
insb
lcall
lret
addb
rol
lods
insb
sti
or
jae
je
mov
and
pop
stos
aaa
xor
jg
push
mov
adc
mov
jo
and
dec
cmp
fs
lret
out
lods
in
add
fisubl
adc
cmp
jmp
jle
imul
ret
push
jnp
mov
bnd
jge
push
mov
dec
pop
inc
les
fldl
hlt
outsl
cmpsb
mov
repnz
mov
out
inc
adc
daa
xchg
push
lret
pop
popa
add
or
jge
lds
in
dec
shrb
aaa
mov
in
shlb
inc
inc
lret
fisubrl
push
out
out
mov
push
sbb
push
shl
add
mov
in
cmp
or
dec
jle
adc
add
jle
mov
pop
jmp
mov
mov
ds
cmc
mov
adc
sbb
es
pusha
daa
jmp
push
push
xor
out
imul
data16
sub
jno
je
or
push
call
imul
sbb
in
jne
jbe
dec
call
sbb
mov
adc
test
gs
imul
repz
push
mov
mov
scas
insb
ffreep
jg
mov
faddl
jle
mov
add
daa
mov
addr16
push
mov
sub
lods
lcall
sbb
cs
dec
fwait
lcall
sbb
adc
loopne
mov
push
xchg
lret
cmp
sub
sahf
xchg
test
movsl
adc
xchg
mov
dec
in
enter
cmp
test
ja
xchg
cli
stc
lods
mov
xchg
sub
out
sbb
and
xchg
jnp
cmp
ds
insl
and
gs
sub
daa
cmp
inc
fldcw
ret
xor
lods
jne
mov
jge
add
jge
imul
mov
pop
dec
addr16
lret
cmc
push
lahf
or
push
push
in
jae
adcb
jle
popf
decl
adc
xlat
adc
sub
ret
or
inc
pop
jg
cmp
xchg
mov
sbb
dec
sti
jns
outsb
dec
sbb
int3
adc
adc
sub
loop
cmp
out
jle
add
roll
jnp
enter
dec
icebp
scas
loop
push
jecxz
or
mov
mov
push
or
movsl
mov
loope
data16
outsb
xchg
das
cmp
icebp
std
aaa
fucomp
inc
das
cwtl
mov
cmpsl
mov
sbb
mov
mov
stos
inc
daa
mov
xor
sahf
notl
test
add
dec
cld
cmp
push
vpandn
aad
push
ljmp
push
adcb
xor
cmp
lret
cmpsb
lcall
mov
push
cmp
mov
dec
mov
jmp
push
cld
sbb
stc
nop
aam
push
cld
xor
mov
divl
dec
xchg
sub
add
ss
loopne
mov
jns
lea
addr16
inc
bound
inc
and
ret
imul
cli
lret
and
fldenv
sub
loope
movl
les
test
xchg
inc
cmp
or
mov
or
clc
out
xor
mov
or
add
stos
mov
dec
dec
popf
test
ret
inc
rcrl
cwtl
pop
mov
dec
pop
test
aad
pop
hlt
sbbb
dec
mov
sub
lea
nop
mov
mov
dec
mov
ret
sbb
inc
jne
inc
sbb
jg
jle
cmovns
testl
pushf
in
fistpll
jp
jbe
aas
jbe
and
add
mov
loope
xchg
adc
jge
cltd
mov
xor
mov
xchg
outsb
sub
xchg
add
mov
jl
dec
mov
dec
or
mov
mov
push
stc
ret
faddl
xchg
arpl
lods
jbe
push
mov
ficoms
enter
sbb
jmp
test
rcr
inc
adc
lock
std
arpl
jnp
mov
ret
push
nop
adc
jo
lods
divl
leave
repnz
aam
dec
cltd
mov
mov
pop
cmp
pop
cmpsl
cmpsl
jmp
jp
cwtl
insb
cmp
dec
jae
clc
jb
dec
arpl
std
ljmp
je
out
fsub
test
mov
lods
testb
mov
sub
outsb
and
filds
sti
fwait
test
and
or
lcall
out
into
cmpsl
and
dec
dec
mov
push
mov
fucompp
test
cvtdq2ps
icebp
test
inc
and
jge
lahf
scas
cmp
sub
pop
movsb
cmpsl
mov
js
jmp
cmp
loopnew
pusha
add
fs
cli
je
add
xor
neg
mov
imul
jl
mov
aad
or
jg
icebp
xor
push
or
mov
inc
mov
xchg
gs
adc
outsl
iret
xchg
add
hlt
dec
add
test
pop
pop
sbb
mov
mov
add
fildll
int3
nop
xchg
lods
mov
lods
push
lea
icebp
mov
mov
push
push
addr16
lds
bound
sub
mov
xchg
pop
pop
mov
pop
add
or
lret
aam
loopne
mov
pop
arpl
xchg
push
jg
dec
shll
sbb
popf
xor
and
sub
aaa
jno
inc
bound
shlb
xorl
adc
jmp
pop
inc
add
lea
loope
add
xchg
jmp
int
mov
xor
mov
lock
pop
scas
pop
mov
pop
leave
cmpsb
jo
jge
and
sub
clc
add
mov
mov
ljmp
pop
mov
icebp
fucomp
test
sti
fstps
icebp
cltd
cmpsb
mov
mov
push
mov
aad
dec
fbstp
mov
mov
loopne
orb
sbb
xchg
or
sub
xchg
sbb
in
fisttps
je
int3
mov
and
sbb
imul
int
call
jp
imul
sbb
std
jmp
adc
iret
mov
movsb
xchg
es
jmp
ss
xor
cmpsb
push
mov
add
inc
or
call
xor
mov
leave
dec
cmpsb
sub
add
das
mov
pushf
int3
call
movsl
into
add
cli
test
pop
adc
add
mov
mov
sbb
pop
pusha
xchg
lods
ds
cltd
push
push
push
push
lock
pop
sub
pop
lock
mov
mov
lods
sub
mov
inc
pop
cltd
pop
jge
adc
mov
and
mov
sbb
out
fcmovu
test
cmp
push
sbb
out
inc
xchg
xchg
mov
sub
lahf
cmpsl
xchg
loop
add
call
repnz
imul
roll
shl
pop
cli
jecxz
dec
jns
mov
or
addr16
inc
cli
call
pusha
mov
ficoml
sub
imul
ret
mov
ficoml
xchg
hlt
jo
mov
aas
mov
xchg
push
jo
sub
xlat
sahf
cltd
adc
mov
sahf
cmc
ja
add
or
jns
jle
and
cmp
sahf
mov
loope
sbb
nop
mov
pushf
dec
push
jnp
mov
and
xchg
add
orl
add
scas
fstpl
dec
mov
out
pop
sub
int
gs
jl
push
mov
and
mov
imul
in
mov
lods
rclb
pop
jno
les
jge
jl
aam
test
fwait
ret
testl
mov
jns
ds
sti
int3
mov
mov
mov
hlt
mov
mov
popa
test
mov
mov
and
out
pop
xchg
loop
lcall
xchg
int
in
cmp
add
xchg
loop
pop
cmp
push
pop
ret
mov
sub
sub
add
cmpsl
in
mov
ja
cli
rorb
pushf
dec
movb
fwait
jmp
orb
jle
sbb
repnz
in
movsl
in
jg
dec
mov
xchg
int
adc
inc
xchg
pop
xlat
stos
sub
lods
and
fiadds
push
xor
bound
jbe
and
push
rcrb
or
in
sub
mov
pop
insl
adc
in
push
adc
and
jl
xchg
das
xlat
inc
cmc
pop
movsl
and
popa
adc
icebp
loop
add
sti
inc
xchg
cmp
xor
mov
push
mov
push
orl
cmp
mov
jmp
rclb
xchg
inc
out
cmp
sbb
jbe
adc
lock
mov
call
mov
mov
les
fcmove
out
jb
sbb
lcall
push
cmpsl
jno
iret
mov
mov
add
out
fbld
loop
mov
out
popf
adcb
outsl
iret
aam
sub
xchg
insl
neg
sbb
jns
lret
mov
inc
inc
pop
outsl
sbb
lds
mov
lcall
vmovupd
adc
test
in
imul
adc
cmp
shr
loop
imulb
xchg
dec
test
jecxz
jl
jge
jle
add
rorl
sbb
dec
aad
mov
adcl
inc
ficoms
adcb
stc
dec
mov
mov
daa
imul
jno
scas
gs
insb
pushf
ja
or
cli
rorb
xor
pop
jo
inc
xor
les
cmp
movsl
ss
aam
inc
adc
pushf
fdivp
sub
pop
sbb
mov
int
in
xchg
bound
jb
mov
mov
adc
ficomps
push
lock
jnp
xlat
add
bound
fistpll
hlt
jmp
iret
outsb
dec
jge
adc
pusha
adc
inc
jmp
push
push
loopne
sbb
in
in
aam
inc
stos
stc
mov
imul
repz
dec
movsb
push
fs
mov
cmp
ficomps
adc
aam
scas
cltd
adc
xchg
sbb
lock
aad
lods
push
mov
pushf
in
xchg
inc
xchg
inc
or
lds
xor
fldcw
add
jns
xchg
lock
out
or
xor
mov
fldl
loopne
cmpsb
jge
test
aaa
push
xchg
xor
dec
gs
fimuls
jb
cmp
ret
adc
sbb
je
adc
lea
repnz
cmpsb
ds
in
stos
mov
ret
add
mov
push
into
fimull
mov
sub
pop
mov
lahf
jns
mov
push
or
nop
adc
push
push
test
leave
xor
mov
in
add
xor
int3
popa
pop
push
sar
xchg
es
jmp
sbb
pop
xor
outsb
sbb
cmpsl
cmc
push
mov
iret
or
stc
lock
inc
push
fisubl
stos
adc
sbb
inc
pop
mov
aaa
dec
lcall
icebp
in
and
lea
das
lret
movsb
jge
jb
push
rcrb
jo
add
jno
add
lret
push
in
cmc
pop
fwait
jb
xchg
mov
xchg
xor
cmpsl
daa
pusha
inc
fldenv
pop
repnz
mov
sbb
shrl
and
lret
out
mov
insl
jle
rorl
lds
clc
test
dec
orb
lahf
cli
pop
mov
pop
sub
fnsave
inc
gs
repnz
jo
sub
lret
add
jg
jb
shl
addr16
pop
aam
pop
cmpsl
dec
sbb
out
in
xorl
adc
push
dec
mov
and
leave
xor
push
in
pop
xchg
jmp
adcl
in
inc
adc
popl
xor
cmp
xchg
or
and
xor
sbb
pop
inc
cmp
jp
out
imul
fists
fiadds
mov
xchg
stc
mov
ret
jno
mov
mov
sub
rcr
iret
add
xchg
test
jae
mov
fs
mov
div
dec
cmovo
jmp
sti
xchg
cmp
adcl
jecxz
fs
mov
add
rcr
dec
nop
pop
jae
inc
jnp
mov
decl
sub
add
mov
ljmp
js
pusha
sub
in
xchg
jmp
adc
jg
stos
in
fstp
ss
pop
pop
lock
out
repz
cld
push
cmp
sbb
stos
cmp
mov
bound
in
xor
testl
call
cltd
cmp
enter
xor
push
pop
push
adc
mov
mov
jne
pusha
adc
loop
test
mov
pop
cld
mov
jl
test
jnp
test
adc
pop
jmp
ds
sbb
xor
dec
aam
arpl
jns
push
push
lret
and
push
cmp
repnz
adc
mov
out
lret
test
cmpxchg
inc
xchg
add
cmp
ret
mov
cld
dec
sti
lahf
iret
mov
lods
popf
insb
mov
and
imul
xor
sahf
sahf
xor
daa
idivl
ficomps
and
jge
and
popf
jo
xchg
or
fists
xor
or
dec
lahf
or
pop
sbb
jb
xor
mov
rorb
rcrl
or
and
adc
and
xor
xor
inc
les
sahf
fcompl
loop
add
mov
add
fwait
dec
sbb
push
test
mov
incb
std
pop
in
push
xor
pop
sub
ret
dec
sbbl
hlt
jbe
notb
add
and
push
mov
js
mov
push
das
movsb
dec
sub
push
loopne
or
inc
movsl
lods
lea
mov
mov
xchg
adc
shll
xchg
ljmp
popa
or
adc
dec
jg
fidivl
add
lods
add
popa
jmp
mov
sub
lahf
jg
insb
leave
xchg
cmp
inc
jno
test
jmp
push
fdivr
mov
aas
mov
icebp
push
jge
test
adc
aaa
xchg
jae
mov
mov
mov
push
stos
in
xor
mov
push
jae
fildl
inc
fistpll
ret
shll
jne
mov
xor
rolb
push
push
sbb
jl
in
ss
sbb
pop
icebp
pop
push
or
jmp
in
and
adc
loopne
pop
mov
jnp
lret
cwtl
fnsave
sub
pop
scas
xchg
gs
or
dec
rclb
cwtl
sarl
or
lahf
cmp
adc
mov
loope
push
loopne
aam
pop
inc
ja
addr16
push
pop
inc
pop
mov
cmpsl
out
xlat
xchg
divl
movl
ja
addr16
push
pop
inc
pop
mov
cmpsl
out
xlat
xchg
divl
movl
ja
addr16
push
pop
inc
pop
mov
cmpsl
out
xlat
xchg
divl
testb
push
pop
inc
ja
addr16
xlat
pop
movl
cmp
aas
outsl
pop
sub
js
sti
lret
jmp
fucomi
lret
push
idiv
enter
mov
dec
imul
dec
sbb
or
cmp
sub
lret
jmp
fucomi
lret
fwait
mov
stos
repz
jnp
imul
dec
fistl
sub
sbb
or
sti
lret
jmp
fucomi
lret
fwait
mov
stos
mov
push
sub
outsl
fs
jne
js
mov
lret
push
fwait
add
cmp
stos
xor
dec
cmp
das
push
xchg
test
arpl
mov
push
andl
cmp
loop
sbb
out
mov
int
mov
sub
push
pop
out
add
sub
sub
xchg
repz
mov
icebp
stos
jne
test
xchg
test
add
mov
sub
ret
and
icebp
out
stos
mov
sbb
dec
dec
push
sub
es
data16
pusha
mov
jns
ss
stos
into
or
mov
pop
dec
cmp
push
pop
sti
lret
jmp
fucomi
lret
fwait
mov
stos
mov
dec
imul
dec
sbb
or
cmp
sub
mov
lret
fdivrp
ret
test
push
adc
sbb
dec
pop
bound
mov
mov
into
out
repnz
out
xor
adc
imul
push
sub
pop
fs
test
mov
pop
jnp
imul
dec
sbb
or
cmp
sub
lret
jmp
fucomi
lret
fwait
mov
stos
mov
dec
imul
dec
sbb
or
cmp
sub
out
andl
or
cs
mov
andb
fnstenv
xchg
leave
mov
add
fldl
scas
dec
into
cmp
or
sbb
iret
arpl
dec
jg
out
cld
scas
xor
inc
jnp
jmp
cmpsb
sbb
fdivl
adc
sarl
cmp
sub
loope
data16
loope
xor
sub
xor
pop
iret
or
jb
adc
outsb
or
xorl
cmp
push
xchg
or
jb
add
out
jmp
jmp
aad
cmp
in
std
leave
outsl
push
cmp
push
leave
mul
in
mov
jmp
lods
sub
out
xchg
loop
adc
add
cmp
fs
cmpsb
cs
jmp
bound
leave
push
sbb
js
xor
lea
xchg
int3
dec
mov
jo
in
ja
jnp
lods
push
push
cmpsl
les
pusha
call
add
pusha
push
scas
fcomp
add
inc
jb
int
sarb
ja
in
push
ss
inc
mov
dec
sarb
mov
outsl
mov
xor
sub
mov
rclb
stos
ja
pop
mov
iret
inc
mov
dec
shll
and
pushf
sarl
mov
pushf
pop
push
adc
cld
sbb
ja
icebp
es
stos
clc
in
add
std
incl
movsb
push
outsb
stc
clc
mov
and
pop
cli
nop
jecxz
sbb
xchg
fsts
and
jae
push
nop
sbb
fwait
inc
inc
mov
popf
sbbl
jns
push
pusha
outsl
push
adc
sub
inc
jp
jle
mov
lea
dec
xlat
outsb
push
xchg
sub
xor
mov
push
bound
shll
pop
mov
pop
push
mov
stos
mov
cmpl
icebp
mov
xchg
mov
add
mul
or
inc
jbe
icebp
lea
test
insl
mov
mov
jo
adcl
fistpll
clc
js
ds
movsl
push
daa
mov
cvtpi2ps
mov
js
test
dec
adc
cmp
ret
leave
and
mov
xlat
fnstsw
xor
jg
ret
ret
lret
xor
popf
out
push
xorb
xchg
cli
jp
inc
dec
jp
cmp
dec
dec
mov
insl
add
and
ret
cmp
ja
push
negl
adc
adc
adc
sahf
int
mov
fadd
and
lcall
ss
insl
adc
and
movsl
dec
sub
orb
inc
dec
xor
mov
data16
dec
inc
testb
pop
dec
daa
out
mov
into
lods
je
push
mov
addr16
dec
add
imul
int3
lds
ja
fwait
add
mov
xchg
lret
cmp
iret
insb
lcall
add
mov
cmp
pushf
sti
xor
push
dec
daa
sub
mov
or
or
in
or
lret
test
pop
sbb
mov
xor
repz
push
mov
add
push
sub
xchg
sub
fidivl
xchg
cli
cwtl
cli
or
cmp
xlat
cmp
lock
mov
fimuls
xchg
xor
push
jbe
es
fcompl
lret
pop
mov
sbb
dec
lods
adc
aam
mov
mov
inc
lods
dec
cli
imul
js
mov
fwait
cli
aad
mov
testl
adc
imul
lret
sub
cmp
in
jbe
shl
xchg
lahf
insb
dec
test
xchg
sbb
xchg
lret
jge
jg
push
push
out
xchg
js
mov
adc
jns
je
daa
xchg
outsb
mov
maskmovq
push
and
fimuls
jno
jo
sbb
lock
fsubr
in
xlat
mov
nop
jle
pop
push
push
mov
mov
iret
xchg
popf
mov
push
or
aam
xchg
stos
sub
mov
push
add
sbbb
lea
gs
mov
xchg
xor
stc
leave
imul
or
pcmpeqw
les
test
sub
pop
imul
dec
cwtl
nop
xlat
stc
jl
jnp
jns
xchg
pushf
cmp
add
dec
push
cmp
xchg
jmp
sbb
or
cmp
notb
outsb
mov
add
out
cwtl
pop
scas
sbb
out
dec
les
adc
jns
pusha
scas
je
pop
js
fisubl
xchg
inc
arpl
dec
gs
in
xchg
loope
push
fldenv
xchg
mov
ret
xchg
xor
insl
popf
dec
add
fwait
loop
pop
sub
push
mov
dec
in
lods
cli
imul
data16
sbb
mov
movsl
xchg
jp
mov
dec
mov
add
ret
jns
xor
insl
add
pop
mov
cmc
mov
jecxz
add
jmp
xlat
divl
mov
inc
test
jno
imul
jg
xor
jmp
pushf
mov
repnz
sbb
mov
fsubrs
push
psubb
mov
testb
hlt
sbb
mov
in
jns
adc
out
pxor
ljmp
and
lahf
pop
add
rcrb
movsl
sub
xchg
jae
dec
mov
dec
mov
lea
jne
jp
mov
jns
xchg
fstl
push
inc
addr16
fwait
iret
pop
cmp
ret
lea
jg
gs
pop
mov
xor
push
xchg
pop
dec
addl
gs
gs
insl
sbb
xchg
ret
mov
push
cmp
mov
int
adc
shrl
movsl
pop
mov
jmp
in
ljmp
pushf
push
xor
sub
xor
loopne
or
int3
and
shll
call
xchg
pop
lret
and
xchg
scas
ds
ljmp
fsubs
pop
jo
push
loop
mov
add
mov
cmpsb
test
nop
mov
inc
pusha
movsb
cli
xchg
subb
mov
xchg
push
divb
arpl
es
mov
xor
or
cmp
andl
subb
stos
dec
in
push
pop
or
lock
xor
stos
aad
pop
repz
fistps
cmp
mov
sarl
mov
repnz
xor
and
aad
gs
test
repz
xchg
insl
insl
addr16
adcb
js
sbb
sbb
clc
dec
sti
arpl
dec
je
pop
bound
icebp
xchg
adc
repz
out
movsb
sub
xor
mov
dec
insl
rorb
test
mov
push
ficoml
cmp
and
push
cmp
cmp
mov
and
mov
adc
ds
adc
cmp
pop
jno
movd
pusha
bound
and
xchg
mov
ret
fwait
shr
inc
inc
jb
and
in
mov
dec
ret
or
xchg
test
add
cmpl
xchg
and
addb
leave
std
mov
inc
push
mov
push
sbbb
iret
xor
sub
sbb
loop
add
push
into
sub
insl
and
lods
fs
mov
adc
aad
xchg
subl
sbb
cmpb
jecxz
jno
nop
clc
jne
dec
mov
jp
pusha
push
and
sub
sbb
mov
adc
push
lret
sbb
dec
inc
sbb
mov
mov
dec
rcrb
fcom
addr16
push
push
xchg
leave
sub
mov
pushf
push
adc
push
or
jae
and
outsl
sbb
pushf
pop
mov
out
shrb
jl
fmuls
mov
mov
aaa
inc
sub
pop
std
movsb
dec
iret
mov
hlt
pop
and
mov
data16
adc
rcrb
rorl
in
loopne
ffreep
lods
addr16
pop
outsl
incl
mov
push
push
fnstcw
xchg
rolb
pop
mov
shll
dec
pushf
sub
adc
sbb
lock
mov
mov
addr16
lret
pop
cmp
sub
mov
push
jl
pop
sbb
adc
int3
fistps
iret
cs
adc
dec
imul
fnstsw
push
cmp
xchg
dec
out
cwtl
adc
loopne
add
popa
into
cmpsl
push
out
xor
in
out
or
adc
adc
cmp
pop
push
ds
cmp
aam
sbb
arpl
bound
pushf
adc
xchg
add
hlt
xor
xor
mov
sub
sub
int
dec
rcll
and
xchg
or
cmp
pop
dec
adc
rclb
adc
cwtl
pop
roll
icebp
dec
pop
pop
mov
jne
pop
insb
ljmp
pop
insl
jno
push
int3
jge
daa
je
loop
cmp
push
popf
push
push
mov
mov
adc
xchg
push
in
les
cmc
adc
xchg
in
lods
lock
mov
and
imul
rclb
pusha
rcr
sbb
jecxz
loopne
sub
pop
mov
mul
mov
xor
test
std
mov
fmul
sti
add
mov
pop
es
mov
daa
pop
fstpt
sbb
bound
mov
pop
insb
dec
addr16
dec
cmc
dec
clc
jmp
dec
mov
in
push
xchg
cltd
adc
add
jno
jne
lods
js
movsl
cmp
sbb
mov
or
stc
jp
mov
ljmp
fisttpll
sub
mov
cmpsb
sub
ret
push
stos
jne
nop
mov
lock
cmc
inc
xor
fadds
jl,pt
outsl
clc
cltd
and
test
hlt
and
push
aad
pop
xchg
mov
lret
scas
mov
out
xor
pop
test
add
add
xchg
mov
jg
stos
xchg
daa
inc
dec
cmc
push
cwtl
inc
lock
sbb
out
pop
adc
iret
sbb
xchg
xor
mov
jo
pop
repz
hlt
imul
je
out
fiadds
push
or
loopne
rol
fs
in
lcall
test
xchg
mov
xchg
ljmp
pop
xor
je
mov
xlat
push
cmc
xchg
jle
pop
dec
js
and
or
adc
inc
fidivrl
and
imul
mov
leave
cmp
andl
cmp
fsubs
mov
fnstsw
push
mov
xor
outsb
leave
mov
xchg
xor
ret
cmp
imul
mov
ljmp
xor
xor
xorb
pop
into
bound
jmp
mov
or
das
and
es
and
inc
push
pusha
icebp
nop
xchg
sub
adc
dec
scas
call
les
std
sub
pop
lods
je
adc
repz
lock
push
jnp
and
shlb
dec
lret
pop
jg
adc
movsb
lods
divl
fsubr
adc
sbb
mov
mov
or
xlat
shrd
push
daa
lock
and
mov
mov
clc
idivb
pop
jno
popf
cmp
lcall
aas
out
push
clc
cld
in
pop
pop
inc
adc
lods
movsl
or
push
and
stos
cmp
movsb
stos
adc
push
add
sar
mov
add
inc
fsub
mov
add
add
inc
push
jp
xor
loope
sub
mov
lods
test
inc
andb
or
xchg
inc
dec
xchg
jae
mov
mov
xchg
call
ja
mov
insl
sahf
pop
push
js
lods
mov
or
and
in
push
rcl
in
sbb
out
xlat
jo
cld
jae
dec
xlat
add
inc
jbe
out
and
arpl
push
ds
push
add
popf
pop
mov
xchg
and
jno
jmp
lcall
jb
xchg
int
inc
test
sub
dec
bound
and
xor
cwtl
in
add
ja
jp
xchg
or
aad
loopne
lods
add
mov
in
fcompl
xchg
push
pop
add
inc
add
cld
jge
mov
jle
jo
xor
jae
into
out
push
mov
mov
or
repz
inc
loop
fwait
in
jecxz
jmp
fiadds
add
enter
pop
ficompl
cmp
mov
mov
adc
or
adc
push
fstps
out
mov
insl
add
jbe
xor
fcmovnu
or
jge
inc
sbb
xchg
iret
mov
dec
cltd
add
pop
aam
clc
sub
adc
xchg
push
add
cwtl
pop
mov
fsubl
mov
stc
and
mov
sbb
lea
pop
mov
arpl
outsl
scas
out
xchg
setnp
xor
call
jns
cmp
fstps
pop
aas
lea
xor
negl
adc
pop
mov
insb
sub
jge
ss
push
xchg
mov
sbb
mov
sti
and
int3
std
cmp
scas
cmpsb
ljmp
in
push
push
test
push
in
nop
in
cmpsl
das
pushf
inc
out
into
sub
idivl
mov
out
push
test
rorl
and
js
and
imul
mov
and
push
pop
idivb
jno
mov
mov
outsl
sbb
in
ljmp
out
into
dec
dec
dec
les
insb
imul
dec
sbb
xchg
mov
rorb
imul
mov
xchg
push
lods
mov
fdivs
add
dec
adc
cmc
int3
push
shl
test
sub
out
sahf
fidivs
xchg
aas
ljmp
ret
dec
lds
mov
ljmp
mov
or
mov
test
fs
xchg
icebp
inc
cli
stos
sbb
out
add
add
jne
mov
pop
xchg
xchg
movsb
ror
jle
xchg
add
or
scas
in
dec
pop
fidivrs
aas
shll
xchg
mov
sub
sbb
insb
inc
ror
adc
jnp
xchg
loope
mov
add
xchg
mov
dec
hlt
adc
xchg
fdivl
or
aad
pop
xchg
les
pushw
mov
add
lcall
lods
add
mov
sbb
lods
xor
das
orl
pop
mov
flds
pop
ljmp
cmp
xor
sub
push
sti
mov
mov
fnstsw
imul
inc
sub
scas
add
push
call
mov
push
mov
jecxz
lret
fisubrl
fmull
aas
loop
sbb
dec
lea
idivb
inc
push
inc
cli
cmp
mov
lea
jne
push
rcll
cltd
mov
pop
cld
cmp
icebp
inc
jnp
aaa
lret
xchg
jno
mov
loopne
mov
outsl
adc
imul
ror
cmp
xchg
int3
incl
sarb
cld
mov
xor
in
jmp
nop
add
adc
dec
repnz
sarb
jl
lds
mov
fnstenv
xchg
add
mov
fwait
mov
push
jg
fldenv
out
jge,pn
js
and
fldl
stos
cmpsb
in
sbb
mov
gs
xor
loope
mov
ffree
stos
or
cmpsl
imul
orb
jb
cmp
dec
add
mov
enter
xlat
adc
jb
cs
nop
shlb
fbstp
cmpsl
lret
xchg
loope
push
jmp
lea
xchg
cmp
push
cmp
outsl
aad
sbb
ds
cmp
lret
and
jno
push
xor
mov
scas
mov
nop
lcall
inc
cld
xchg
inc
popa
pop
pushf
fwait
sbb
push
popf
add
mov
fsubrp
inc
outsl
fs
arpl
test
mov
sub
and
daa
dec
dec
pop
movsb
inc
jmp
mov
inc
jle
jns
iret
sbb
sub
dec
mov
std
inc
es
and
xchg
push
or
pop
xor
pop
sbb
xchg
dec
lods
shl
jnp
or
int
jo
pop
pop
sti
mov
pop
lods
xlat
xchg
int
dec
xchg
mov
mov
cwtl
xchg
lcall
xor
fcoms
lahf
sub
fwait
repz
mov
loop
jns
pop
pop
scas
dec
lret
jo
mov
push
jo
ret
and
loopne
lock
movsl
ljmp
lret
arpl
fdivl
ja
cmp
inc
pusha
inc
pop
pop
xor
lahf
sub
or
mov
pop
sbb
mov
add
mov
je
mov
test
push
pop
or
fdivl
hlt
sahf
jge
idivl
sub
mov
popf
xor
aas
fcmovnb
mov
testb
push
dec
fmul
in
aad
mov
push
xor
andl
mov
xor
jmp
popf
dec
loop
ja
test
mov
das
hlt
ja
scas
adc
inc
and
cmp
movsl
xor
arpl
rorb
out
int
fprem1
adc
arpl
cmp
mov
ret
shlb
pop
sbb
lock
adc
fs
or
mov
loopne
pop
jl
adc
pop
fdivrl
mov
out
clc
dec
xchg
jecxz
inc
fiaddl
out
aam
xor
insl
inc
imul
push
ficompl
sub
mov
orl
mov
iret
dec
cmp
pop
xor
out
or
push
jo
rcrb
popf
outsb
in
push
mov
or
ljmp
cmovge
adc
pop
mov
cmp
mov
dec
lret
lret
mov
pop
and
lcall
adc
lcall
jbe
testl
aad
pop
push
mov
out
nop
push
adc
fbstp
jno
or
pop
xorl
mov
pushf
sarl
loopne
pusha
mov
xor
dec
cmp
push
cmpsb
movsb
pop
sbb
xchg
cltd
ja
shrl
addr16
aas
sub
stos
cmc
lock
daa
cli
mov
faddl
mov
daa
icebp
jmp
push
jne
bnd
addl
or
cmp
ror
sbb
orl
inc
repnz
enter
xchg
jmp
add
mov
adc
movsl
push
cmpsl
sbb
xchg
lcall
aam
pushw
jo
or
or
cmp
shrb
jle
jnp
pop
xor
sbb
mov
pop
sub
and
lret
fstps
xlat
rol
lods
mov
xchg
sub
fisubrs
dec
jmp
inc
dec
fcoms
mov
in
adc
mov
loopne
test
sub
out
lcall
sbb
enter
ds
rep
insl
xchg
mov
fdivl
xor
movsl
call
clc
inc
cltd
add
sbb
mov
roll
scas
rorb
call
dec
inc
adc
adc
mov
stos
cltd
sahf
iret
jge
push
lock
or
scas
cmc
fs
pop
or
mov
movsl
jp
ret
xlat
in
lcall
in
add
cmp
scas
fisubl
lods
mov
pushf
pop
ficompl
loop
mov
arpl
imul
movsb
adc
aaa
fsts
inc
mov
es
outsb
lock
mov
jno
aaa
and
test
mov
mov
sahf
inc
mov
pop
cltd
loop
inc
bsr
lret
mov
insl
scas
cmp
inc
ds
clc
sub
xchg
test
sbb
mov
pushf
xchg
int3
mov
xchg
popa
push
push
inc
adc
sbb
lock
icebp
adc
clc
cmp
xchg
repz
mulb
gs
mov
gs
mov
ret
cli
add
mov
in
scas
xchg
jmp
cmp
mov
mov
nop
mov
ljmp
scas
scas
shlb
insb
pop
push
cmp
pop
adc
into
xchg
ja
add
xor
sub
sbb
add
sub
cmp
movsb
jns
mov
inc
jp
stc
scas
inc
jbe
mov
lahf
aam
fs
mov
sbb
xor
mov
mov
dec
leave
int3
in
sub
ljmp
mov
dec
push
aaa
jbe
fs
test
mov
jecxz
fisubl
sarl
sbb
add
xor
push
scas
pop
cmp
jns
cli
ja
daa
loopne
xor
mov
xor
push
xchg
adc
dec
xchg
sti
int
loope
lods
push
outsb
fcomps
cmp
mov
mov
std
xor
movsb
push
leave
js
inc
dec
iret
int3
cwtl
pop
jmp
fucomi
lret
fwait
mov
stos
mov
dec
imul
dec
sbb
or
cmp
sub
lret
jmp
fucomi
lret
fwait
mov
stos
mov
dec
imul
dec
sbb
or
cmp
sub
dec
jmp
fucomi
lret
sbb
sub
jnp
imul
or
cmp
sub
lret
jmp
fucomi
lret
fwait
mov
stos
mov
dec
rcl
imul
jnp
dec
in
hlt
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
mov
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
call
push
mov
call
xor
leave
ret
lods
mov
mul
rcrb
mov
inc
ds
or
sbb
insb
push
jl
dec
es
lods
mov
imul
xchg
xchg
int3
cmpsb
fdivl
or
sbb
insb
push
jge
dec
es
lods
mov
imul
xchg
xchg
int3
cmpsb
fdivl
jl
jns
insb
push
cmovae
mov
jecxz
stos
push
daa
movsl
push
push
in
pop
add
sbb
loope
test
inc
into
inc
xchg
jae
popa
or
jle
imul
sti
mov
repnz
cmp
jl
sbb
or
add
adc
lcall
xorl
xchg
test
arpl
and
lods
cmp
loop
xchg
xchg
jne
inc
in
cwtl
jecxz
cmp
jl
mov
xlat
pop
lcall
sub
xor
adc
push
loopne
add
sbbl
pop
xchg
inc
inc
cs
arpl
push
mov
jbe
mov
das
loop
xor
outsl
mov
imul
xchg
xchg
int3
cmpsb
fdivl
or
sbb
insb
push
jl
dec
es
jo
stos
filds
mov
xchg
xlat
mov
sub
jg
pop
sbb
imul
fiaddl
frstor
mov
cltd
mov
add
jno
sbb
fwait
imul
pop
lret
xchg
mov
subb
fdivl
or
sbb
insb
push
jl
dec
es
lods
mov
imul
xchg
xchg
int3
cmpsb
fdivl
or
sbb
insb
push
jl
dec
es
lods
ffree
adc
daa
cmp
std
pop
sarb
imul
xchg
stc
scas
or
dec
aam
pop
ds
int
sahf
mov
cmp
hlt
stos
in
inc
add
jmp
daa
into
jle
scas
adc
mov
xchg
add
jne
cmp
push
push
repz
dec
fdivrp
aad
das
lea
or
push
cwtl
pop
in
test
iret
pop
mov
sub
and
lcall
dec
sub
pop
cmp
stos
sbb
adc
mov
and
sbbb
xchg
in
leave
pop
rcr
mov
cs
insb
jecxz
dec
inc
push
or
pop
adc
push
ss
mov
test
xlat
cs
mov
pop
sub
cwtl
adc
lods
pop
cmpsl
xchg
mov
sbb
cmp
xor
mov
jae
lods
inc
cltd
inc
jno
not
dec
pop
pop
jg
loop
lods
insb
xor
inc
push
insb
mov
jle
jbe
mov
test
cmpsl
bound
out
scas
sub
leave
push
and
sbb
mov
xchg
scas
mov
push
ljmp
inc
iret
add
sbb
mov
mov
pop
push
xor
inc
lret
int3
je
inc
sub
addr16
dec
je
imulb
push
adc
dec
bound
or
pop
test
sahf
mov
leave
pop
push
pop
out
in
movsb
subl
cs
fistpl
mov
push
mov
test
add
jp
mov
jle
fistl
scas
arpl
cmp
js
mov
loope
ds
lds
mov
loop
les
fadd
push
ja
mov
mov
adc
mov
adc
adc
mov
xchg
jl
mov
cmp
sub
imul
or
mov
sbb
dec
clc
fadd
aaa
xor
daa
xor
pop
xor
sub
push
or
jecxz
insb
fsubr
je
mov
inc
xchg
adc
pop
jno
push
dec
cld
loopne
pop
lds
inc
mov
cmpb
clc
mov
cmpsl
xchg
cs
or
test
mov
stos
jg
test
scas
lahf
pop
mov
shlb
mov
push
adc
pop
lea
xor
cmp
out
in
stos
es
fiadds
fnstenv
mov
mov
mov
inc
int
xchg
flds
lahf
cmpb
aaa
add
inc
adc
loopne
dec
hlt
imul
adc
out
iret
iret
std
dec
mov
stos
xchg
shll
adc
inc
or
sahf
mov
mov
cmp
pop
mov
cmp
fistps
pop
xor
xchg
lea
cmpsl
cmp
mov
mov
negl
xchg
dec
aaa
inc
push
push
or
arpl
ficoms
dec
cmp
cmp
push
iret
inc
insb
lea
insb
outsl
pop
pusha
mov
jbe
jle
mov
repz
ds
cmp
das
cmpl
aam
aas
push
xlat
add
sbb
jns
es
push
cs
xchg
pop
bound
dec
bound
fwait
imul
or
pop
jp
jp
ret
js
loop
movl
pop
jne
ret
loop
test
mov
lcall
mov
and
out
sub
cmpsl
sti
adc
jmp
pushl
jg
jbe
lret
xchg
das
out
pop
imul
mov
xchg
outsb
xchg
fmuls
arpl
shl
lods
mov
push
jb
movsl
rorl
cmp
call
sahf
rcrb
aad
flds
and
xor
cmp
pushf
mov
push
dec
scas
int
cmpsb
pop
outsb
xor
pop
push
out
mov
negb
ljmp
cwtl
les
pop
pushf
mov
and
and
daa
mov
xor
mov
cmp
aam
xlat
jge
xor
loop
mov
xchg
or
je
pop
inc
and
jmp
sarl
or
in
imul
pop
loopne
subb
add
dec
xchg
pop
pop
cld
xor
imul
sti
outsl
lret
mov
jge
fdivrl
ficoms
sub
negb
les
sarl
adc
test
daa
icebp
or
cmpsb
test
push
fwait
lahf
push
std
xchg
jae
cmp
call
repz
loope
shl
loop
loope
enter
repz
add
aam
ja
addr16
out
mov
pop
bound
insl
sub
adc
cwtl
pop
adc
nop
je
or
arpl
sar
sub
aad
shll
repz
mov
mov
xor
jno
add
loope
test
lret
sub
xor
stos
out
stc
xor
or
mov
dec
in
mov
lds
dec
xchg
mov
loopne
inc
sbb
mov
movsl
imul
or
ljmp
xchg
xchg
mov
bnd
pop
jbe
lea
mov
pop
loopne
ss
sub
pop
or
sbb
clc
into
insb
iret
in
push
arpl
bound
popa
push
int3
lea
sahf
les
cli
fcompl
and
mov
insl
push
es
or
scas
repz
rcll
mov
inc
xchg
fdivs
inc
sub
push
sbb
lock
jmp
mov
cmc
mov
lods
inc
fsubrs
cli
jnp
push
popf
ds
jbe
and
sbb
xchg
ret
rclb
jns
ret
jl
inc
movsl
pop
jge
stos
push
jmp
xor
outsl
jns
rcll
je
in
loop
lods
scas
mov
mov
mull
out
pop
cmp
fistps
clc
lahf
es
sti
mov
lock
outsb
std
popf
mov
daa
arpl
je
out
in
test
repz
rcrl
cmp
mov
js
push
dec
xor
ss
cltd
lcall
addr16
shrl
dec
or
fmulp
mov
popf
sbb
sbb
jnp
fwait
cmp
daa
add
mov
in
mov
inc
adc
arpl
cmpb
daa
iret
sahf
cld
mov
cmp
lock
loopne
enter
mov
jns
decl
jge
xchg
loopne
ret
cmp
stc
dec
outsb
xor
ret
mov
aas
movsl
hlt
mov
stc
rcrb
enter
sub
fldcw
rcrl
ds
rorb
mov
mov
push
sbb
mov
loopne
cmp
cmpsl
lret
push
mov
clc
daa
fwait
inc
mov
movsb
out
aad
clc
call
push
xor
lret
xor
test
xchg
shrl
ret
jecxz,pt
and
daa
pusha
cmpsb
imul
in
aad
gs
and
and
xor
adc
xchg
inc
and
jmp
add
aad
jmp
mov
jl
sahf
mov
cmp
sbb
xchg
jg
cmpb
lahf
jmp
mov
and
ret
jns
mov
fiadds
pop
add
sub
fwait
fwait
rcrb
or
mov
mov
add
cs
dec
loope
xchg
outsb
cmc
cmc
in
xchg
xlat
aam
mov
mov
cmp
shl
ljmp
cmp
push
out
cmp
cmp
or
push
ffreep
bnd
jb
dec
mov
shrb
lret
arpl
in
mov
dec
jno
loop
jge
outsl
ret
inc
movsl
adc
loop
in
jecxz
lods
lahf
pop
xor
sti
add
mov
dec
sahf
jno
jo
cmpsl
xchg
icebp
inc
pop
aam
or
bound
push
sub
loope
push
mov
inc
sbb
ffree
pop
xchg
pop
mov
mov
test
jae
or
mov
fcmovnbe
mov
mov
nop
inc
fidivl
xchg
mov
jp
out
xchg
cmpsb
std
sti
cltd
inc
push
in
jne
mov
dec
inc
sbb
push
adcl
iret
push
jb
roll
dec
jp
stc
dec
insb
loope
imul
ljmp
sti
push
push
loop
lea
or
cmp
or
in
jp
fnstsw
jl
mov
mov
jg
jb
jns
push
xchg
out
loope
cltd
popa
push
in
mov
std
roll
fs
mov
lahf
dec
pusha
sub
scas
xchg
xorb
mov
scas
mov
pop
fisttps
pop
cli
jno
mov
sahf
adc
mov
mov
lahf
popa
sbb
fcmovbe
popf
adc
dec
sub
iret
cwtl
add
js
cmp
pop
movntps
notl
aaa
mov
xlat
mov
sbb
mov
xchg
rcr
mov
add
dec
fsqrt
sub
mov
out
out
scas
dec
mov
mov
push
mov
lds
lcall
dec
insb
adc
jb
mov
mov
loope
sbb
test
es
dec
nop
fistps
mov
sbb
and
loopne
sub
sub
ss
outsl
mov
mov
jmp
dec
cmp
ret
jno
push
sbb
or
or
push
inc
enter
push
lea
daa
je
sub
out
fwait
sub
lahf
jecxz
adc
xor
jo
and
add
add
sub
dec
hlt
jb
lods
xchg
pop
int3
imul
mov
fwait
nop
xchg
push
and
push
sub
mov
pop
jle
ret
inc
or
fwait
dec
cmpsl
shll
inc
pusha
sub
adc
pop
movsb
add
xchg
adc
fisubl
pop
fdivs
inc
arpl
xor
sub
iret
adc
movsb
xchg
stos
pop
mov
in
rol
dec
outsl
push
add
mov
and
stos
add
sub
adc
sbbb
jb
sbb
test
dec
addr16
adc
ret
mov
jb
mov
xchg
idivl
lock
cld
dec
mov
cmpsl
imul
mov
add
aaa
push
mov
and
adc
mov
jne
cmpsb
packssdw
xchg
in
push
cs
jle
mov
pop
adc
in
cmc
sarb
gs
pop
pop
push
pop
jp
jmp
or
test
jo
pushf
xchg
xchg
xor
sub
stc
mov
push
push
mov
dec
lret
kxorw
and
not
aad
sti
test
ljmp
push
jbe
mov
stc
js
rcl
pop
je
mov
dec
mov
xor
arpl
push
test
lret
lret
jg
mov
sbb
xchg
xlat
sahf
cmpb
dec
les
jne
or
movsl
push
push
sbb
aas
loopne
daa
nop
sar
int
movsb
push
lods
in
cmp
ss
cmp
stc
mov
fwait
lock
lret
push
adc
outsl
shll
cld
mov
out
rcll
or
mov
or
pop
pop
mov
mov
xchg
js
addr16
inc
cmp
popf
int
test
pop
test
rol
movsb
cmpl
cmp
and
jb
jne
add
shll
mov
pop
and
stos
jno
mov
movsl
pop
cmc
push
sbb
push
loopne
popa
push
stos
sbb
pop
jb
sar
das
mov
lods
mov
pop
mov
pushl
clc
jbe
pop
pushf
test
inc
cmp
test
cmp
inc
add
inc
fcoml
sub
mov
sub
pop
push
pop
decb
dec
int
ltr
jo
out
xchg
mov
jae
dec
cmpsl
inc
or
outsl
xchg
inc
in
dec
out
or
jne
mov
push
xor
test
cmp
push
dec
fnstcw
rcrb
leave
cli
mov
inc
repnz
adc
jp
cmc
in
inc
sbb
rcrl
repnz
in
mov
lea
jle
jno
aad
cld
push
sbb
pop
and
fsubr
jge
cmp
jecxz
decl
shrb
sbb
jnp
ljmp
pop
scas
inc
js
imul
cmp
dec
mov
push
movsl
aas
int3
xor
add
pop
aas
sub
repz
pop
aam
sub
addr16
xchg
and
push
add
cmp
mov
cwtl
cmp
popf
xor
sub
jg
mov
jbe
and
jle
lret
cmp
cmp
or
push
push
in
sbb
xchg
jbe
daa
inc
shrb
inc
xchg
test
aad
cwtl
pop
xlat
aaa
and
adc
mov
or
subb
std
insb
pop
faddl
icebp
sub
les
push
arpl
nop
xchg
xlat
icebp
dec
sarl
xor
mov
and
fwait
mov
xchg
repz
js
push
addl
adc
into
xchg
pop
shll
insl
mov
jns,pt
scas
les
fsubrl
jae
dec
inc
int3
cs
test
xlat
push
adc
daa
mulb
push
dec
push
lret
mov
loope
xlat
mov
xchg
les
popa
jg
adc
insl
daa
jbe
lcall
mov
leave
into
not
push
mov
mov
icebp
pop
xchg
inc
xor
mov
cmp
xor
stos
xorb
xor
ja
lahf
mov
out
xor
and
ljmp
pop
shl
xlat
aad
aas
dec
in
das
outsb
cmc
mov
xchg
rol
fdivl
mov
lea
inc
push
inc
pop
ror
enter
out
shlb
push
mov
out
lock
pusha
mov
pop
in
inc
cmc
pop
push
inc
dec
dec
test
js
enter
push
adc
mov
test
mov
jbe
addb
out
arpl
movsb
out
ffreep
pop
loopne
data16
adc
xlat
dec
mov
sub
aaa
adc
lds
pushf
sub
xlat
test
pop
sub
repnz
cmp
in
xchg
out
add
inc
add
cs
xchg
inc
subl
sub
and
in
ljmp
cld
jae
or
jecxz
stos
call
xor
pop
out
xlat
xor
sub
sub
xlat
jl
cltd
sti
jb
clc
rolb
mov
aaa
jp
mov
push
imul
push
or
mov
sti
pop
insl
add
push
dec
insb
adc
push
fdivrl
les
mov
fwait
or
add
push
addr16
or
imul
mov
out
adc
dec
dec
arpl
jl
in
add
stos
sub
sbb
xchg
adc
scas
cmp
gs
sarl
in
xchg
lds
outsl
dec
mov
mov
fisttpl
fldl
aam
push
or
mov
mov
movsl
cwtl
and
cld
mov
xchg
mov
repz
and
push
fldl
dec
imul
into
lea
dec
push
sbb
mov
leave
test
mov
test
fists
and
jl
xor
push
pop
xor
inc
xor
shlb
mov
fst
shl
ljmp
stos
fisttpl
stc
and
call
les
rclb
in
dec
movsb
jns
sbb
xor
hlt
push
dec
sbb
add
lret
pop
clc
ja
pushf
fistpl
cwtl
ret
loope
push
pushf
xchg
imul
inc
cwtl
fdivr
ret
inc
mov
xor
sbb
es
lods
xor
push
jle
loop
mov
pop
sbb
gs
imul
sub
mov
js
pop
movsl
mov
dec
pop
push
push
popl
xchg
jae
femms
xor
cltd
mov
inc
pop
lcall
sbb
inc
pslld
cmpsb
mov
fcompl
mov
shll
xchg
into
adc
lea
add
sub
inc
test
stc
xchg
xchg
sbb
cs
aaa
jns
cmpsl
sbb
add
push
ret
mov
stos
lret
pop
out
push
sarl
push
divb
mov
xlat
or
cmp
add
add
jns
insb
or
or
xchg
ds
je
jb
push
adc
push
xor
test
cld
cmpsb
mov
dec
out
lods
inc
cmp
lret
shrl
rolb
iret
jge
sub
inc
push
mov
out
lcall
xor
es
adc
shlb
dec
xchg
or
adc
ret
jp
mov
adc
addr16
roll
dec
inc
xchg
imul
sbb
xchg
data16
scas
scas
push
adc
push
lcall
ret
daa
xor
mov
fnstcw
daa
add
mov
sbb
movsl
jp
xchg
xor
sbb
cmp
sti
xchg
pop
mov
mov
std
stos
push
jae
std
and
loop
inc
sbb
stc
push
das
test
pop
inc
call
dec
mov
movsb
stos
pop
mov
shrl
loopne
xchg
xor
ja
mov
mov
mov
iret
fcmovnu
and
jno
loop
pop
add
push
cltd
cmpsb
inc
movsb
scas
lret
in
fidivrs
xor
lea
mov
imul
mov
adc
imul
mov
mov
push
pusha
jnp
jo
scas
dec
sub
xor
fucomi
out
inc
sub
push
test
sub
test
std
pop
inc
cmpsl
ljmp
cmpsl
dec
in
aaa
fs
lret
jnp
sarb
test
dec
xchg
sub
mov
adc
rep
pop
scas
sub
outsb
or
ret
js
movsb
jp
xchg
xchg
jb
icebp
xchg
call
inc
mov
fwait
insl
fmuls
xor
sbb
les
or
decl
and
mov
adc
cmc
lea
fucomip
xchg
mov
pop
or
push
shlb
pop
lea
lock
push
pop
jns
sbb
lret
xchg
push
negl
jge
fdivrs
fnstcw
fdivl
pusha
roll
out
mov
sbb
fcmovne
es
das
inc
cwtl
sub
cwtl
cs
mov
loop
fmulp
ror
inc
cmp
mov
add
or
xchg
pop
xchg
mov
call
jns
aam
or
add
mov
push
dec
scas
mov
popa
cmpsb
dec
dec
mov
push
lods
stos
push
or
repnz
sub
xchg
sarl
mov
or
into
xor
fcoms
addl
cmp
aam
mov
icebp
mov
xor
adc
mov
jb
jmp
inc
int3
xchg
lcall
add
popf
ds
popf
xchg
and
mov
cmpsb
pusha
jp
push
xchg
or
iret
testl
andb
mov
sub
mov
dec
pop
inc
shlb
cmp
or
icebp
fwait
jns
mov
pop
fsubrs
jnp
in
fildl
lods
xchg
pop
das
and
inc
mov
fwait
jnp
ss
pushf
dec
jge
xor
es
mov
sbb
cli
pusha
aas
scas
popa
mov
cmp
test
push
adc
sub
out
mov
in
jns
lahf
xchg
iret
xlat
pop
cmpsb
test
pop
mov
sub
test
inc
push
mov
aam
xor
mov
xlat
jmp
lods
shlb
repz
jno
cmp
xor
adc
xor
lea
or
movsl
ds
test
rol
cmpb
shll
sbb
stos
push
push
xor
pop
aaa
jo
cli
inc
jo
dec
cmp
mov
cmp
xchg
ss
addr16
and
clc
mov
insb
rcrl
xchg
jp
jo
das
shll
loope
and
mov
xrelease
lds
mov
mov
loop
jge
les
push
icebp
push
mov
jl
repz
jl
pop
ret
xchg
pop
mov
push
push
clc
andl
outsb
aam
and
inc
in
inc
mov
call
lds
or
inc
popf
adc
lcall
jne
cltd
sub
jns
js
pop
and
stos
in
add
xchg
push
dec
push
pusha
decl
xor
xor
sub
pshufw
dec
in
lods
push
es
mov
outsl
pop
mov
jno
arpl
sub
sbb
test
mov
push
jb
cmpsb
inc
mov
push
les
lock
cmp
std
out
stos
adc
push
xchg
les
sarl
scas
jae
bound
pop
out
stos
xor
and
sahf
ljmp
test
mov
ja
xor
aam
mov
jo
ret
jecxz
int
jae
ret
inc
test
mov
shl
in
fstp
add
and
dec
cmc
push
rorb
or
jg
fsts
in
sbb
inc
mov
pushf
imul
xchg
xchg
int3
cmpsb
fdivl
or
sbb
insb
push
jl
dec
es
lods
mov
imul
xchg
xchg
int3
cmpsb
fdivl
or
sbb
insb
push
jl
dec
es
lods
ret
mov
pushf
imul
xchg
xchg
int3
cmpsl
fdivl
or
sbb
push
dec
es
lods
mov
repnz
xchg
push
dec
es
dec
sarl
sbb
sbb
movsb
leave
push
mov
addr16
imul
cli
bound
push
inc
pop
mov
lret
out
xlat
jmp
sahf
mov
movsl
mov
ja
addr16
imul
or
mov
lret
aad
jmp
fsubr
cmpsl
mov
in
addr16
ljmp
sbb
stc
rcrl
fldt
cmpsl
test
loopne
into
int3
jecxz
xchg
ja
or
and
nop
add
aas
or
fucomip
hlt
enter
pusha
xchg
into
sub
rcrb
jbe
or
hlt
fistl
push
scas
inc
pop
shlb
mov
mov
sbb
or
jbe
bound
jmp
xchg
fs
dec
mov
mov
pop
adc
cmpsl
dec
push
hlt
xchg
push
mov
ja
inc
lcall
aaa
hlt
dec
cmp
sub
into
or
cmp
mov
pop
scas
jg
aam
bound
ret
mov
pop
arpl
sbb
push
xchg
js
mov
fiaddl
rep
mov
divl
cli
sub
fistps
mov
pop
xchg
mov
xchg
jnp
pop
dec
sbb
dec
daa
cmp
xchg
xchg
jno
and
cmc
sti
fwait
xchg
pop
mov
and
add
dec
sub
bound
mov
in
iret
in
out
xor
es
mov
adc
jns
imul
mov
call
imul
in
sub
js
or
sub
push
or
cmp
sub
fcomi
lret
out
xlat
jmp
fwait
mov
cmpsl
mov
ja
addr16
imul
or
cmp
sub
fcomi
lret
out
xlat
jmp
fwait
mov
cmpsl
mov
ja
mov
hlt
xor
push
scas
push
icebp
loope
jnp
shrl
mov
stos
mov
pop
mov
mov
mov
inc
insl
insl
add
push
out
loop
sub
xchg
jge
xor
scas
arpl
mov
add
daa
lds
mov
mov
dec
cmp
or
pop
sub
rolb
into
push
cs
idivl
mov
pxor
xlat
int3
cmp
gs
cld
insb
lods
mov
cmp
add
xchg
mov
jmp
stc
lret
lcall
add
lods
or
pop
loopne
cmp
out
adc
adc
add
cld
notl
shrl
jl
rcrl
ret
rcl
gs
stos
dec
jg
inc
xchg
jecxz
outsb
cmp
dec
sub
jno
test
mov
xchg
mov
add
mov
lods
mov
enter
push
adc
mov
adc
addr16
enter
push
pop
jle
pop
sarb
xor
dec
dec
jl
cld
mov
cmp
push
movsl
rorl
xor
mov
dec
lret
rorl
fldenv
and
shl
jp
mov
mov
jns
inc
jle
xor
je
in
add
xlat
and
lock
ret
pop
rorl
call
xchg
int3
pop
out
ret
sub
push
shll
push
mov
lcall
or
lret
mov
cmpsb
sub
addl
or
jmp
xchg
pusha
mov
loope
rclb
xchg
pop
xchg
cmp
into
xchg
push
lret
lea
stos
adc
test
aam
xor
jecxz
lret
push
es
mov
clc
mov
outsl
jl
push
insb
out
sub
mov
stos
int3
pop
fldt
movsl
sbb
dec
stos
and
xorl
or
int
push
into
sub
sub
ljmp
sarl
add
cltd
mov
mov
cltd
ja
jno
imul
js
call
sub
in
insl
mov
pushf
rcll
inc
mov
stos
jns
and
sahf
sub
mov
cwtl
es
rcrl
lret
aas
push
imul
mov
push
push
jbe
lret
xor
ds
sub
jnp
sbb
mov
xchg
scas
push
sub
fstl
gs
pop
cs
subl
mov
and
fstl
adc
test
mov
add
dec
in
cmp
mov
je
inc
fdivrp
int
sub
popa
pop
test
ficoms
cmp
stc
lock
jno
adc
mov
inc
scas
pusha
pop
push
pop
adc
fwait
or
das
push
or
add
jnp
inc
push
inc
jns
pop
push
test
push
jns
pop
aad
dec
mov
call
cmp
add
out
fwait
dec
and
xlat
fcomi
mov
xor
jo
xor
lahf
mov
movaps
rcll
or
gs
cltd
in
add
hlt
das
clc
cmp
push
mov
es
adc
aas
neg
aaa
mov
aad
iret
hlt
jg
movsb
lret
pushf
inc
les
xchg
mov
lods
sbb
bound
out
aaa
ret
jmp
sbb
sti
dec
das
jb
loop
xchg
push
stc
pop
aas
iret
add
inc
test
jmp
cmp
jne
inc
push
xchg
shrl
addr16
flds
movsl
fidivrl
inc
outsl
push
hlt
lods
cmp
or
push
in
loop
xor
lds
test
xchg
faddl
xor
scas
imul
jbe
outsl
aaa
dec
fstpl
jecxz
ds
pop
lcall
subb
mov
sbb
lds
cmp
jns
jb
and
test
scas
stos
shlb
and
int3
pop
fsts
lods
lcall
push
mov
arpl
push
xchg
arpl
popf
data16
jmp
mov
xor
cmp
fldenv
mov
outsb
cmp
in
and
dec
push
enter
xor
sub
out
push
bound
in
cmp
ret
dec
loopne
mov
mov
nopl
lods
xorb
mov
sbb
mov
inc
xchg
nop
dec
fstps
mov
aad
add
push
jp,pt
push
push
inc
dec
test
pop
movsl
lods
lods
jo
xor
lods
fistpl
sbb
lahf
mov
push
imul
fdivr
inc
or
imul
pop
sti
mov
mov
xlat
bound
in
test
push
push
or
and
nop
mov
bound
outsl
imul
js
mov
mov
ds
add
mov
loope
popf
sbb
mov
mov
pop
fdivrs
jp
inc
outsb
fs
sub
or
les
jbe
jno
jbe
lahf
pusha
jbe
pop
ljmp
jno
fs
add
and
repz
and
addr16
dec
addb
aad
push
xchg
ret
aas
out
mov
mov
mov
jae
leave
jle
mov
inc
dec
and
adcl
shlb
jbe
push
scas
sbb
sahf
loopne
lret
fstl
dec
mov
xchg
pop
adc
aas
inc
cmpsl
push
pushl
add
mov
dec
push
jnp
out
xlat
add
leave
dec
mov
lds
sbb
mov
ja
insb
xor
movsl
jl
xchg
in
xchg
xchg
addb
pop
jmp
and
push
push
cmp
mov
xchg
lods
out
ret
push
mov
and
push
push
loope
xchg
into
fsubl
iret
lods
mov
aad
aaa
jo
xor
mov
loop
enter
hlt
pusha
andl
adc
or
add
outsb
jb
in
jb
mov
adcl
je
fwait
sub
dec
jae
lahf
xlat
mov
push
add
cmpsl
test
popa
faddl
pop
or
xchg
nop
push
mov
mov
rcll
xchg
xlat
loopne
fisubl
out
xor
sarb
inc
mov
adc
fwait
cmp
xchg
jbe
xchg
rorb
jp
jp
sub
int
iret
cld
and
test
jbe
sarb
adc
lahf
fcmovbe
mov
lds
xchg
fldcw
lea
iret
std
pop
inc
movsb
aas
push
lahf
sbb
adc
clc
frstor
mov
ficompl
jnp
mov
push
mov
or
adc
fisubrs
inc
adc
pop
dec
jg
pop
aaa
fldl
sbbb
cmp
cmp
sahf
cmp
fnstsw
mov
jnp
outsl
arpl
or
sbb
xchg
and
mov
rorb
pop
mov
into
in
dec
pop
lret
or
mov
push
xor
fs
pop
or
jbe
push
sub
or
aad
scas
icebp
jae
sbb
imull
insb
fisubs
fildl
ja
xorl
mov
into
dec
and
cli
mov
dec
cld
and
dec
xchg
and
iret
lret
push
jae
adc
popf
popf
lea
xchg
jnp
arpl
scas
imul
sti
iret
rcrb
mov
aaa
popa
ficompl
fdivrl
dec
jnp,pt
sbb
push
out
mov
and
push
stc
lcall
imul
divb
std
jns
lea
cmp
cli
cmp
ret
fadds
mov
sti
ljmp
insl
loop
test
out
inc
fistpl
cmp
data16
xchg
push
daa
cli
push
gs
lret
repz
inc
dec
mov
test
outsb
dec
sub
push
loopne
mov
pop
stos
jecxz
jbe
hlt
mov
seto
xor
add
cmc
and
mov
cmpsl
or
push
in
add
in
xor
mov
mov
dec
dec
ljmp
sub
popa
push
xchg
int
jb
inc
fdivs
cmp
leave
dec
mov
call
cmp
lar
scas
push
mov
divb
mov
push
fisubl
jle
jo
iret
aaa
push
mov
or
inc
pop
sbb
dec
jbe
inc
mov
mov
aad
xor
mov
dec
aaa
dec
push
jge
into
xchg
inc
dec
pop
sbb
loopne
push
cmc
pop
inc
out
out
js
push
pop
lea
ficomps
push
mov
mulb
lods
fdivl
and
cmc
inc
fsubrl
xchg
mov
adc
mov
cli
rclb
xor
test
push
fsubp
lcall
xchg
sti
sub
mov
add
insb
push
mov
sub
test
push
rclb
push
xchg
mov
pop
in
int
shlb
jl,pt
fadds
adc
out
mov
loop
push
mov
test
rcr
popl
bound
es
pop
dec
xchg
fmull
adc
pop
ljmp
or
repz
dec
idiv
jmp
jbe
cmp
pushf
xorb
xchg
xor
iret
mov
xor
out
xorb
lods
xchg
stos
lods
sbb
je
adc
cli
and
out
dec
push
xor
loopne
sar
cmp
mov
fstps
out
fs
push
cmp
push
test
mov
rol
xor
andb
mov
xor
rol
icebp
aas
decl
or
xor
lods
jo
mov
fs
dec
cli
fiaddl
pop
cmp
out
movsl
sbb
outsb
jns
mov
pop
lds
add
cmpsb
dec
lret
hlt
and
aaa
mov
insb
std
out
pop
out
add
add
mov
pop
mov
test
lcall
and
call
fdiv
mov
jns
cmp
inc
jne
enter
sbb
dec
mov
repnz
mov
cmp
dec
arpl
cmp
mov
mov
mov
dec
mov
dec
sbb
cmpb
out
repnz
push
sbb
inc
js
daa
scas
xchg
mov
lret
fcmove
inc
mov
inc
jmp
movsl
enter
bound
xor
push
inc
fsubrs
mov
xchg
push
loope
sbb
mov
and
repz
push
or
pusha
aad
clc
mov
es
xlat
pop
dec
cwtl
inc
cmpsb
or
testl
pusha
dec
stc
popa
mull
fimull
je
pop
cmpsb
add
cmp
cmc
cmp
push
shlb
mov
cs
push
stc
pop
jp
sarb
lods
nop
or
pop
jmp
adc
int
dec
inc
fs
fstl
push
ret
pop
xchg
ror
lahf
cs
negl
repnz
jp
push
loope
rolb
test
and
scas
test
mov
sbb
movsb
jne
and
stc
subb
nop
int
mov
rcrl
inc
fcomps
mov
stc
popl
ss
sbb
or
xor
push
pop
shl
ss
lret
insl
sub
sahf
push
jno
test
xchg
addr16
inc
pop
enter
repz
fidivrs
out
sub
and
arpl
xchg
cld
out
xchg
cmpsl
repnz
cmc
sbb
inc
lcall
ss
mov
pusha
scas
sub
and
in
add
add
inc
lock
lods
push
mov
add
push
or
test
out
jg
xor
push
xchg
stos
xor
sub
add
xchg
pop
inc
inc
pop
pop
inc
push
mov
mov
inc
les
dec
mov
cs
or
les
leave
push
cmp
xchg
rcrl
hlt
inc
in
and
loope
push
mov
lods
cmp
pop
add
insb
test
in
test
sti
into
sub
jnp
pusha
out
dec
out
adc
xchg
hlt
imul
arpl
cmp
mov
inc
add
cmpsb
dec
and
push
jne
pop
outsl
dec
adc
insl
lds
inc
mov
jns
daa
mov
push
push
lret
fst
inc
mov
jp
sub
shll
xor
bound
loop
or
mov
push
pop
inc
mov
add
mov
fldl
lret
aad
inc
mov
movsl
xchg
test
js
hlt
test
sub
std
cld
ljmp
lcall
cli
test
cmp
jmp
mov
in
lock
lcall
out
sub
push
shr
mov
int3
push
mov
mov
mov
cld
scas
cmpsb
cli
sbb
in
out
lods
fucomip
scas
mov
mov
andb
shll
push
add
out
sbb
repnz
adc
jmp
mov
mov
lock
in
mov
andb
clc
mov
xlat
mov
xor
jbe
add
pop
aas
inc
add
and
sub
mov
mov
xchg
push
inc
ds
mov
cmp
sahf
xchg
jb
pop
or
dec
pop
adc
stos
and
push
mov
sbb
xor
popaw
xor
iret
push
pushf
hlt
std
js
jl
in
mov
insb
xchg
pop
push
cmp
xor
xor
xchg
pop
push
fs
push
mov
inc
dec
imul
sbb
rcl
out
or
aad
mov
inc
sbb
out
mov
jns
stos
jle
testb
inc
mov
sub
inc
pop
add
scas
cmp
dec
aaa
jl
sub
fsubrl
subl
scas
push
pop
jge
in
xor
inc
add
inc
popf
pop
adc
adcl
jp
cmp
rcrb
call
packuswb
pop
sbb
dec
outsb
mov
xor
xchg
or
mov
rorl
jmp
cltd
fstpl
xor
cmpsl
adc
pop
push
or
mov
lcall
mov
fldenv
push
dec
add
cmp
ficompl
addr16
fldl
xchg
inc
cmp
aam
mov
scas
cmp
sbb
jmp
xor
ds
fsubrl
inc
lahf
dec
jmp
cmpsb
addl
dec
mov
inc
sub
xor
ret
sti
sbb
scas
int3
mov
imul
jbe
lea
jns
sbb
movsb
inc
add
add
aas
add
or
dec
sahf
dec
sbb
sbb
repz
addl
and
es
cwtl
sub
xchg
sahf
icebp
and
and
jne
xchg
in
or
repnz
push
mov
cmc
lret
xchg
mov
mov
push
cwtl
mov
mov
or
push
jl
fadds
cmp
push
imul
jae
jle
std
sub
movsb
inc
inc
pop
cwtl
dec
or
stos
rcll
and
icebp
xor
addl
jns
cld
xchg
mov
xchg
sub
adcl
aaa
sti
je
cli
mov
lret
or
cwtl
enter
or
inc
das
leave
cwtl
and
popf
repnz
or
jnp
xlat
std
jbe
mov
adc
fdivr
lret
pop
add
push
scas
jno
fcompl
into
cli
out
sbb
push
arpl
repz
push
das
or
sub
push
jp
jl
aam
or
mov
and
in
nop
and
ret
dec
mov
sbb
subl
mov
repnz
pop
add
stos
icebp
inc
out
pop
stos
jl
imul
xlat
or
cmovne
and
roll
roll
sti
jmp
sahf
dec
sbbl
testl
mov
lcall
fisttpl
mov
mov
daa
fcompl
shrl
jmp
xlat
cwtl
jo
jmp
lods
lods
mov
add
loope
add
push
sub
mov
pop
data16
jb
and
aad
pop
xor
out
add
xchg
mov
pop
jg
rcll
std
cwtl
xchg
add
or
in
gs
scas
aaa
jl
xchg
push
xchg
ret
or
ds
in
sub
mov
xor
fwait
push
jp
pop
cltd
jne
mov
xor
out
xchg
lods
pop
mov
dec
idiv
lea
push
inc
cmp
or
mov
add
push
push
rcll
les
mov
push
lods
xchg
push
xor
rcrb
idiv
jns
repnz
sbb
das
int
cmpb
enter
xorb
mov
cmp
mov
aas
cmpsl
cmp
jge
sbb
lock
push
imul
aaa
push
ja
or
mov
rcll
jne
cmpl
push
cmp
cwtl
add
dec
and
add
rcrb
mov
jle
in
je
pop
jo
sub
lods
xchg
mov
mov
or
aaa
cmpb
cmp
mov
scas
test
incl
inc
lcall
lret
ret
sub
xor
jno
push
mov
fcomip
in
sub
push
sub
in
mov
mov
mov
aam
movzwl
jl
out
pop
test
cmp
push
fsts
cmp
jge
inc
loope
xor
jno
stc
dec
pop
pop
xchg
mov
fsubrl
fadds
out
xorl
mov
pop
cmp
iret
ja
inc
nop
mov
sbb
jecxz
cmp
fnstsw
mov
push
jno
in
cwtl
dec
lcall
and
fidivrl
dec
mov
xor
out
iret
cs
adc
xchg
xchg
imul
mov
push
shl
add
jnp
inc
xor
je
xlat
jl
cltd
daa
mov
xchg
lea
adc
adc
jecxz
gs
add
imul
mov
jl
je
and
inc
mov
push
mov
rcrb
push
pop
push
fadds
scas
cld
sbb
stc
es
lret
ret
test
xchg
aaa
bound
sub
push
clc
lret
in
xor
and
int3
loop
out
xor
push
ja
cwtl
pop
ret
inc
and
xchg
dec
jno
mov
pop
mov
rclb
sbb
in
fdivs
cmp
and
shll
xchg
sub
inc
repz
and
jge
mov
insb
lret
mov
aaa
out
pop
push
insb
jo
test
test
xchg
xchg
ss
int
jno
and
adc
aas
lock
aam
mov
lods
jmp
insb
sub
xchg
ss
mov
lods
push
scas
xlat
cmp
jp
or
adc
mov
pop
push
adc
or
js
push
xchg
inc
mov
xlat
or
mov
lcall
insl
sub
inc
pop
sub
je
sub
pop
imul
push
cmpsl
sahf
pushf
pop
ljmp
sbb
fnsave
mov
stos
in
push
out
outsl
add
pop
popa
jno
testb
xor
scas
popa
imul
je
add
test
cmp
lods
mov
xor
outsl
or
sbb
insb
scas
into
insl
dec
pusha
pop
stos
outsb
es
cld
data16
in
js
push
in
sbb
std
xchg
sub
and
cmc
xchg
ds
scas
or
add
in
imul
lods
js
jmp
repnz
mov
ret
mov
ds
adc
jb
dec
push
movsb
xlat
push
mov
fmuls
jno
sti
jl
sbb
aad
and
mov
je
cmpsl
mov
das
mov
iret
mov
push
and
leave
shll
fbstp
in
push
fcmovbe
add
dec
adc
sti
jle
pusha
int
mov
and
or
jno
cld
sbb
push
scas
fabs
push
add
scas
and
cli
aam
adc
divb
aaa
and
sti
push
fmuls
int
popf
or
lods
xor
sti
inc
add
xchg
lret
stc
mov
pop
sbb
movsb
adc
fstps
inc
push
adc
icebp
ss
jne
test
push
pop
and
push
inc
jmp
mov
mov
inc
cmp
add
sti
push
push
testl
cs
push
dec
and
or
fdivr
adc
outsb
adc
std
test
testb
outsl
test
ss
inc
cs
inc
add
or
inc
pop
imul
pop
pop
notb
dec
lcall
adc
movsb
add
pop
jae
leave
jnp
lcall
inc
ja
lahf
scas
sbb
insl
and
mov
push
gs
jl
jle
push
adc
pop
inc
push
push
shrl
sbbl
sbb
sti
das
in
dec
pushf
pop
inc
int
aad
sbb
scas
sub
jecxz
int
in
xor
mov
arpl
mov
cmp
aam
jns
cmpb
leave
addr16
stc
push
gs
push
xchg
cmp
and
popa
jne
aas
dec
into
lea
pop
adc
popf
cmc
xlat
scas
mov
test
stos
addr16
cmp
sbb
or
cmp
sub
fcomi
lret
out
xlat
jmp
fwait
mov
cmpsl
mov
ja
addr16
imul
or
cmp
sub
fcomi
lret
out
xlat
jmp
fwait
mov
cmpsl
mov
ja
das
imul
inc
sbb
jg
fildll
lret
out
xlat
out
fwait
mov
cmpsl
mov
ja
addr16
inc
inc
sbb
sbb
cmp
xor
push
xlat
jmp
in
aas
add
push
in
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
call
push
push
pushl
push
push
call
call
mov
leave
ret
pop
cmpsb
lods
pop
xchg
stos
test
jp
ret
or
pop
push
add
add
or
dec
add
add
add
add
add
fildl
sbb
inc
add
add
add
and
add
add
add
add
add
add
push
add
add
addb
add
add
add
add
add
add
add
add
add
stc
add
rolb
lret
add
push
add
add
add
add
add
add
add
inc
add
mov
cmpsb
add
add
add
or
mov
loop
mov
fldl
mov
outsb
add
add
ja
clc
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
mov
cmp
push
add
add
add
add
mov
mov
loop
gs
add
filds
add
add
add
push
add
add
dec
add
add
add
stc
add
and
add
and
add
sbb
push
add
add
add
mov
mov
add
sub
xor
mov
jno
popa
add
add
mov
add
add
lock
add
jle
js
int3
add
mov
lret
add
ja
add
add
add
test
add
add
add
add
ss
add
add
add
add
add
add
add
add
scas
add
mov
push
push
add
les
sbb
movsb
add
add
dec
add
outsb
add
pop
add
add
or
pusha
add
xchg
add
add
add
add
add
add
mov
add
add
add
add
add
popa
add
add
int3
add
movsl
add
add
roll
mov
add
add
add
push
add
add
add
and
add
dec
add
es
add
add
add
add
add
xor
and
add
add
roll
and
push
add
mov
xor
insb
add
int3
add
dec
add
add
sbb
data16
add
add
add
add
xchg
add
add
add
add
clc
add
add
and
add
and
add
lods
add
add
jns
sbb
cmpsb
add
add
add
add
add
add
add
add
add
lahf
add
jns
pop
add
add
push
or
add
add
add
jle
pop
add
cmp
outsb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
and
in
add
add
add
add
add
add
mov
mov
add
push
add
das
add
add
add
add
or
push
add
pop
add
add
cmp
push
add
dec
add
add
add
stos
add
mov
les
loop
ja
jno
pop
add
dec
add
xchg
xchg
add
add
addl
add
add
pop
add
add
add
add
pop
add
add
add
add
add
add
add
add
mov
daa
sahf
fcmovu
sbb
ja
int3
pop
jo
mov
mov
mov
xor
mov
test
in
dec
xor
andb
sub
imul
push
jbe
arpl
push
adc
xrelease
xchg
inc
dec
pop
enter
sbb
test
xchg
je
push
push
push
scas
bound
mov
xchg
pushf
xor
cmpsl
fsubrp
call
mov
clc
int3
std
rcr
mov
mov
mov
gs
ds
cltd
lds
jg
pop
xor
pop
push
sbb
fstl
out
sbb
rep
test
jno
cmpsb
lcall
or
and
and
mov
push
dec
les
xchg
inc
mov
cli
cli
dec
or
testb
aad
and
mov
push
inc
imul
pushf
rcl
adc
cmp
lds
shlb
xor
jnp
lock
sub
sahf
lods
push
mov
xor
push
xchg
int3
cmp
jno
xor
adc
imul
inc
mov
sbb
fmuls
aam
ljmp
movsb
pushf
popf
mov
stc
std
sbb
mov
pop
mov
xchg
cmp
push
and
adc
movsl
xor
inc
lds
int3
xor
jmp
ja
aas
pop
pop
lret
jnp
out
aam
mov
mov
mov
stc
and
and
or
adc
aas
adc
cmp
inc
dec
and
punpckhdq
mov
aad
pop
test
shll
pop
xor
dec
aas
iret
xor
test
sbb
dec
dec
andl
inc
adc
imul
roll
xor
loopne
mov
cs
adc
fadd
xchg
movsb
fmuls
sbb
cmpsl
cld
cmp
js
daa
daa
cmp
xor
mov
sub
out
add
mov
mov
inc
pop
jbe
and
cltd
ja
cmp
scas
xchg
pop
push
js
lahf
inc
pop
lods
ljmp
lods
in
add
push
fisubl
adc
xchg
out
push
lahf
add
ret
rcll
sbb
and
data16
int3
cmp
loop
fs
int3
xchg
sub
jbe
jae
inc
mov
daa
jl
enter
or
dec
and
bound
sti
pop
lods
mov
iret
in
aad
fwait
fcoml
sarb
movsl
sub
jge
push
jge
ss
xchg
aas
mov
sahf
push
sbb
and
pop
mov
outsl
jle
xchg
adc
outsb
push
adc
dec
ret
jmp
jle
mov
mov
cmp
inc
dec
fldenv
and
push
sub
inc
dec
pop
add
add
add
add
rolb
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
cmp
add
pusha
repnz
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
fcomip
add
int3
repnz
repnz
mov
repnz
lods
repnz
movsb
repnz
pushf
repnz
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
repnz
add
add
or
add
and
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cwtl
repz
mov
repz
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xor
add
cmp
add
inc
hlt
add
dec
hlt
add
push
hlt
add
pop
hlt
add
fs
add
ja
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
hlt
add
cwtl
hlt
add
test
add
mov
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
loopne
add
or
add
xor
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
scas
pop
add
pushf
pop
add
xchg
pop
add
mov
add
test
add
jl
add
je
add
insb
pop
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
rclb
add
fcoml
add
lock
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
push
sbb
add
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
inc
sbb
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pusha
sbb
add
add
js
add
mov
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
