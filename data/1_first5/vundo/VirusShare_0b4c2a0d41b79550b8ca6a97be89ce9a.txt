sbb
add
mov
xor
inc
lods
cmp
cltd
cmp
lds
xchg
loopne
mov
mov
pop
ret
lea
inc
dec
aaa
xchg
nop
pop
rorl
pop
pop
sbbb
sub
push
lret
jbe
ss
xor
push
and
lds
or
jl
push
cwtl
xlat
scas
movsl
in
adc
add
pop
xchg
mov
jl
mov
sbb
in
jno
es
popf
mov
and
das
jnp
test
or
xor
ss
loopne
dec
sbb
push
mov
inc
and
lret
add
rep
push
orb
cli
pop
fucomp
lret
lcall
mov
mov
test
fs
or
jbe
or
ret
push
loope
ljmp
adc
pop
push
jne
adc
or
sub
sbb
cli
push
push
or
aam
hlt
addr16
hlt
add
add
mov
aad
out
xchg
pop
and
sti
movsb
dec
es
push
icebp
cltd
mov
ds
cmp
stos
xchg
daa
and
sub
sub
or
js
mov
iret
lds
push
mov
push
ret
mov
incl
adc
mov
in
shll
xchg
jne
mov
stos
pop
mov
cmpb
cmp
sahf
pushl
cmp
imul
fdivrp
out
xchg
js
fstpl
in
loopne
adc
js
mov
cli
push
outsl
test
and
xchg
push
mov
mov
mov
pop
fwait
adc
xchg
stos
mov
mov
fsts
leave
mov
movsb
inc
sub
loope
and
std
mov
call
das
push
xor
pop
jmp
test
push
pop
pop
pop
aas
das
pop
leave
push
and
jl
xchg
roll
cmpsb
cwtl
scas
adc
cmp
xlat
or
ljmp
popf
ds
jbe
xor
ja
nop
lret
mov
gs
push
mov
xor
repz
and
mov
rclb
inc
pop
xchg
add
push
cmp
shlb
aaa
or
or
inc
sub
ret
mov
ljmp
pop
and
or
js
fcoml
jge
jne
imul
mov
mov
in
aas
cltd
or
test
dec
fmul
xchg
sub
js
xchg
mov
out
movsb
or
or
repz
mov
pushf
pop
insl
pop
push
enter
xchg
add
xlat
add
imul
push
clc
jecxz
xchg
out
ss
ja
movsb
pop
loop
sti
aad
insb
inc
popf
in
cmpsb
sbb
adc
clc
movsb
in
fidivl
rcrb
inc
lods
inc
sub
lds
out
or
inc
repnz
sub
pop
repnz
sti
aam
stos
ds
inc
mov
sub
push
loopne
push
dec
mov
addr16
mov
inc
mov
cmp
mov
in
js
daa
push
sahf
leave
mov
lcall
xlat
hlt
jbe
jo
sbb
adc
out
dec
pop
out
test
cmp
movsl
movsl
sti
ja
adc
xchg
hlt
pop
mov
jecxz
and
xor
shll
mov
jge
repz
mov
jnp
lret
hlt
fiaddl
dec
rorb
and
pop
pop
imul
dec
xorb
mov
lock
or
mov
xor
leave
adc
mov
pop
fsub
scas
test
jno
test
es
xor
jg
add
dec
pop
arpl
add
or
movsb
shrb
fwait
imul
jnp
out
cmp
mov
inc
aas
int3
pmaddwd
sbb
subb
in
xlat
jae
mov
testl
loopne
aam
lcall
push
mov
arpl
mov
dec
xchg
cltd
lcall
test
sahf
decl
jg
shlb
mov
jo
into
scas
out
pop
xor
insl
sub
mov
push
pop
mov
int3
sub
dec
stos
xlat
add
lahf
and
outsb
dec
stc
sbb
and
mov
jg
add
push
sahf
and
mov
mov
das
jo
push
xchg
mov
jmp
mov
mov
dec
loop
nop
lret
loopne
jno
aad
mov
mov
adc
gs
fiadds
mov
add
maxps
into
mov
ljmp
pop
in
cmc
or
scas
fsubs
imul
jne
sbb
jae
daa
push
mov
subb
xchg
fiadds
push
and
divl
scas
jg
and
popa
xor
std
cmpsl
roll
pop
pop
mov
xor
adc
mov
jo
jae
cmp
loopne
sti
inc
mov
scas
jmp
or
xchg
mov
adc
mov
lret
add
and
ds
ja
and
out
sbb
xor
in
dec
mov
and
outsb
in
mov
aaa
inc
addr16
fiaddl
shlb
mov
or
ja
ja
inc
mov
mov
mov
dec
xor
cwtl
leave
rolb
insl
mov
into
mov
in
femms
mov
mov
dec
sbb
and
add
fadds
sbb
lahf
loop
jle
and
pushf
dec
andb
fsts
push
mov
fcompp
lret
gs
add
sbbb
fs
dec
enter
xchg
sub
nop
les
out
and
pop
jle
mov
cmpsl
mov
adc
repnz
scas
pop
mov
insb
adc
mov
std
sub
cmc
fnstsw
push
popl
xorl
dec
repnz
add
test
jbe
jb
jae
lea
in
xor
mov
mov
sahf
ficoms
lock
jo
leave
pusha
xchg
xor
push
pop
cltd
jl
sub
stos
sub
jae
push
mov
aaa
out
dec
into
pop
mov
and
and
mov
out
mov
fcomi
inc
jge
in
mov
or
addb
stc
shl
or
push
js
push
pop
test
fsubrl
ret
xchg
push
xchg
add
fcos
or
addr16
xor
test
sbb
push
mov
ds
daa
int3
sbb
out
fcoms
mov
fwait
leave
add
jle
push
dec
and
push
lock
jnp
pushf
in
push
sub
popa
out
fists
fs
ror
jg
test
mov
push
push
sbb
cwtl
inc
add
and
dec
cmp
fsubrs
icebp
imul
adc
loop
xchg
sbb
xor
mov
daa
adc
out
fldt
xor
popf
push
adc
mov
push
in
gs
test
clc
shrl
fstpl
and
sub
or
test
inc
and
mov
stc
adc
mov
and
fnstenv
pop
fs
sub
insb
xor
sti
jmp
fcomp
pop
sbb
mov
rol
movsl
cmpsb
add
adc
and
inc
and
mov
jle
sub
lret
xorb
pop
cmp
movsl
mov
mov
fiaddl
sbb
les
std
imul
fsubs
mov
pop
fcoms
adc
mov
insb
add
xor
jb
xor
dec
imulb
add
jb
sub
in
out
cmp
shll
leave
push
push
jle
xorb
stc
repnz
cs
xor
lods
push
and
call
popa
cmc
lret
leave
loopne
movsl
adc
mov
ljmp
jle
jnp
jmp
adc
mov
rolb
jne
jnp
lods
jge
add
xor
cmp
cmp
hlt
cwtl
int
sub
push
cmp
fucom
out
test
xchg
rorb
xchg
and
dec
xor
xlat
fcomps
inc
shll
dec
sub
adc
ret
lds
mov
pop
cmp
test
and
add
mov
jecxz
in
mov
outsb
mov
lock
pop
push
jecxz
push
pop
mov
mov
repnz
divl
jmp
sbbl
idivb
cmp
sarb
jno
data16
test
in
nop
push
fisubl
cmp
lods
jmp
aas
lods
repnz
int
lcall
mov
pop
pop
shl
pusha
dec
lea
ffree
imul
outsl
sahf
xchg
or
pop
lods
mov
sbb
xchg
fildl
sub
leave
sbb
leave
push
sbb
pop
lods
test
insb
sub
rep
movsb
xchg
in
cmp
insb
xor
sbb
lret
mov
or
scas
pop
repz
add
mov
pop
ds
pop
mov
scas
mov
leave
jnp
jno
nop
sbb
xchg
jecxz
lods
outsb
int3
testl
push
gs
fcmove
jae
aad
xor
jg
sbb
shlb
pop
dec
adc
ficoms
int
sahf
inc
fisubrs
js
sbb
mov
scas
in
les
fmul
dec
jmp
rcrl
dec
dec
mov
andb
bound
mov
push
mov
daa
mov
jns
mov
xor
mov
jmp
cs
inc
xbegin
sub
and
or
in
inc
bndldx
lret
movsl
jg
mov
xorl
sub
ljmp
or
cmp
xor
cmc
test
mov
sbb
insl
pop
repnz
das
push
inc
fnstenv
push
rcll
test
push
jne
mov
and
ret
mov
jge
push
push
jge
lds
mov
cmp
scas
movsb
pop
aas
popa
xchg
add
push
inc
clc
jnp
aad
mov
xor
sub
sbb
pop
xchg
into
lea
stos
jp
shl
pusha
mov
mov
xor
mov
and
sbb
fstps
out
lret
loop
stos
dec
das
test
mov
stc
adc
pop
out
test
imul
sbb
jp
push
sbb
cmp
lret
sbb
lahf
jecxz
xchg
sbb
jbe
inc
mov
call
insb
mov
movsl
lret
cmp
mov
fincstp
fisttps
leave
sbb
push
sub
add
enter
mov
inc
and
or
pop
shl
inc
rcrl
ret
or
iret
cli
std
in
jne
dec
scas
push
cwtl
xor
xchg
sbb
js
fldenv
mov
or
es
push
push
and
inc
mov
mov
imul
inc
mov
rorb
lods
call
lock
or
push
add
dec
jo
pop
test
lds
mov
in
and
cmpsb
or
pop
push
push
mov
xchg
das
push
fisttps
jmp
xchg
gs
dec
test
test
aas
seta
incb
nopl
outsb
mov
or
shrl
sbb
sahf
test
test
push
push
xchg
inc
sahf
mov
cmp
ja
test
les
mov
jne
lahf
xchg
inc
dec
pop
in
xchg
lods
ljmp
jnp
iret
movsl
test
inc
xchg
arpl
les
pop
mov
lods
pop
movsb
imul
call
mov
cmp
bound
xchg
sbb
stos
leave
jo
mov
push
push
xchg
das
jle
adc
jecxz
dec
pop
jo
inc
imul
out
cmpsl
lahf
jmp
mov
xor
jb
out
inc
inc
int3
aad
jle
scas
inc
xchg
out
inc
mov
cmp
test
test
or
clc
mov
add
lret
pop
mov
cmc
push
pop
lock
loop
xchg
sahf
lock
test
aam
aaa
movsl
loopne
mov
imul
addr16
sub
and
jmp
lret
dec
pop
pop
mull
ljmp
and
mov
xchg
mov
in
xor
gs
adc
rorb
xchg
cltd
je
jb
shll
mov
test
testl
adc
mov
jbe
cwtl
mov
cmp
pop
clc
pop
sub
out
or
fs
or
pop
jmp
sbb
xchg
sub
js
sti
test
repz
inc
xchg
push
enter
lcall
lods
jo
inc
js
push
fs
lret
mov
add
mov
and
sbb
enter
fcomps
aam
jnp
cmp
addr16
dec
scas
dec
pop
mov
mov
xchg
popa
sbb
add
adc
loopne
lds
or
pop
pop
in
or
dec
addr16
loop
shlb
or
jo
stos
mov
scas
lcall
in
pop
jb
inc
sbb
adc
mov
adc
ret
adc
mov
addl
repnz
dec
jo
xchg
xchg
pop
loopne
mov
sub
xor
ja
mov
int3
xchg
pop
ret
stc
syscall
dec
or
ja
xchg
clc
arpl
sti
cmp
push
subb
out
inc
fstpt
push
pop
xchg
inc
adc
lret
popf
jmp
out
xlat
cmp
subb
inc
pop
scas
fucomp
mov
sub
pop
fistps
andl
movsl
movsb
adc
push
movsl
pusha
out
cmpsl
lcall
fwait
jb
mov
enter
lcall
movsl
xor
sarl
cld
repnz
scas
pop
jp
inc
dec
dec
push
push
add
sbb
scas
ret
add
out
out
or
push
push
fadds
mov
add
push
mov
test
cmc
icebp
inc
movsb
xchg
xorb
sub
add
add
xchg
inc
pop
test
scas
mov
xor
or
mov
addr16
xchg
daa
push
out
jle
lea
movsl
and
add
dec
mov
insb
push
inc
or
push
stc
sti
mov
sub
mov
xchg
mov
test
dec
sahf
cwtl
cmp
xor
push
jl
and
push
push
push
jno
jmp
sahf
sbb
loope
int3
pop
out
inc
and
jecxz
mov
jg
in
imul
mov
cmp
pop
test
andb
jns
les
leave
or
sub
in
inc
mov
in
insb
out
repz
decl
xor
jecxz
sbb
insb
popa
pop
pop
push
test
mov
cmp
jg
cmpsb
arpl
and
clc
inc
fcmovnb
fcomps
cmpb
iret
xor
pop
cmc
mov
dec
or
push
lcall
rcrl
fimull
add
imul
sbb
lret
xlat
push
jle
inc
insb
lret
andl
bound
push
and
jp
js
sub
ja
ja
ret
mov
mov
xor
repz
mov
adc
nop
ss
mov
imul
push
imul
pop
or
fs
fsubrl
movsb
loope
pop
cld
scas
cmp
and
cltd
jb
dec
pop
sub
add
shlb
mov
out
inc
ljmp
lods
iret
mov
imul
mov
popf
jo
sbb
mov
jbe
sbb
leave
test
ljmp
or
shll
and
sub
sub
pushf
mov
sbb
sub
sti
imul
mov
jo
int3
sbb
aad
adc
jbe
pop
stos
pop
cmp
cmp
mov
pop
aam
movsl
cmp
arpl
lea
pop
xor
xlat
int3
stos
xor
scas
adc
xchg
inc
es
mov
xchg
sbb
jns
sub
dec
inc
rcrb
int
addr16
pop
cmc
sbb
or
jge
in
gs
test
pop
scas
or
cmpsb
adc
pop
les
pop
fisubl
push
lods
mov
imul
add
adc
xchg
sar
aad
xorb
jne
outsl
jl
adc
cmpsl
mov
adc
push
idiv
jg
and
pop
xchg
sub
popl
mov
sbb
jne
or
imul
push
cmpsl
sub
xor
xchg
andl
xchg
ds
xchg
and
push
scas
xchg
mov
pop
test
cmp
xor
test
jmp
lods
test
arpl
sbb
out
and
pop
movb
mov
pop
add
inc
sarb
sar
adc
aam
je
mov
dec
xchg
fists
fwait
jb
ret
mov
mov
ss
in
sbb
das
mov
jno
fs
sub
or
scas
int
shll
inc
pop
shlb
jp
test
dec
popf
inc
mov
jge
push
loop
pop
ljmp
and
fidivl
jle
ror
sbb
jle
jmp
lods
test
mov
clc
jnp
jge
dec
int3
push
jns
rcrb
jle
pop
movsb
mov
mov
mov
jle
pusha
dec
jge
js
lahf
popl
pop
loop
aas
inc
jb
mov
cli
sub
ret
xor
sub
adc
and
addl
icebp
and
jg
adc
lock
pusha
or
vmovaps
and
mov
dec
sub
inc
daa
adcb
jmp
out
push
pushf
push
push
faddp
fucomi
aas
push
and
movsl
popa
cmc
lret
mov
lcall
jo
nop
inc
scas
imul
push
mov
lods
jl
cmp
lods
mov
inc
add
and
insb
push
gs
hlt
insl
jno
mov
jge
movsl
outsl
sti
mov
dec
pop
sub
sbbl
pop
xor
xor
xor
bound
dec
push
pop
lahf
jns
loop
xor
dec
andl
mov
mov
dec
mov
pop
test
xor
mov
fbstp
popa
jae
dec
inc
xchg
adc
adc
mov
xor
jno
insb
enter
mov
xchg
add
and
dec
mov
cmp
mov
mov
mov
sub
sbb
dec
and
loop
mov
mov
cltd
out
xchg
jbe
hlt
cmc
outsl
pop
add
mov
data16
xchg
xor
rol
pop
mov
push
inc
fistps
test
xchg
jnp
aam
mov
jp
xchg
mov
pop
lods
add
push
cwtl
jge
push
sub
or
lahf
push
dec
sahf
movsl
inc
adc
cmp
les
xor
xor
popf
mov
add
mov
fwait
mov
leave
scas
arpl
and
pop
data16
mov
and
lea
imul
hlt
shlb
xor
aad
in
adc
idivl
pop
inc
in
fildl
cli
pop
ss
xchg
push
gs
scas
lcall
mov
cmpsl
hlt
add
mov
pusha
xor
inc
push
push
loop
or
push
insl
adc
lods
insb
bound
jae
push
inc
icebp
lahf
and
movsb
loopne
mov
sbb
outsb
cmp
and
xchg
cmpsb
adc
pop
in
mov
mov
sbb
stos
movsl
daa
imull
sbb
inc
iret
iret
sub
arpl
cmpsl
and
xlat
sti
and
inc
lods
ja
lods
out
xchg
xlat
test
out
cmpsb
loope
pop
sarb
adc
add
roll
and
dec
xchg
fmul
and
out
xchg
push
lcall
inc
or
movsb
or
cmp
jmp
sbb
fsub
lret
ror
inc
jp
adc
dec
add
repz
aas
and
or
add
push
jg
int
ret
mov
pop
or
cs
pop
int
in
das
push
ljmp
xlat
and
sbb
ds
fisubrl
mov
rorb
push
pop
fstpl
push
repnz
in
lods
cmc
jae
xor
out
call
pop
fsubrs
loopne
outsl
sbb
jo
push
inc
pop
mov
mov
movsb
lcall
loope
in
jge
sub
and
out
jecxz
sbbl
fstps
stc
cld
xchg
sub
dec
add
scas
das
mov
movsl
sbb
insl
xchg
test
ret
fistpl
inc
add
mov
ja
clc
sub
xlat
pop
pop
or
xchg
shl
fidivl
jle
mov
mov
jae
imul
scas
inc
fcmovne
repnz
sbb
mov
xchg
mov
repnz
imul
or
dec
movsl
cmc
push
dec
fwait
stc
ficompl
lahf
cmp
stos
into
and
lret
popw
inc
sbb
mov
cld
icebp
stc
mov
jne
sub
je
je
xor
adc
in
loopne
stos
or
outsl
mov
mov
mov
push
pop
jo
fdivs
in
ja
popl
inc
cmp
std
int
icebp
gs
mov
mov
std
mov
repnz
xor
sbb
sub
mov
jnp
sbb
xchg
add
arpl
iret
mov
push
push
pop
push
xor
in
jb,pn
or
ss
test
or
pop
or
outsb
movsb
test
or
xchg
dec
in
jle
pop
ss
add
push
adc
jbe
fiadds
dec
mov
cmp
fisttpl
fistpll
add
int3
aaa
inc
fisttps
adc
cwtl
insl
lds
pop
xchg
iret
repnz
pushf
mov
cmp
mov
xchg
out
out
or
or
fnstenv
in
add
shll
jmp
mov
cmp
mov
ret
ret
jmp
andb
adc
push
inc
dec
jae
ret
push
dec
push
mov
addr16
mov
lods
outsl
pusha
jb
imul
pop
jb
std
xchg
add
sbb
stos
pop
clc
lods
fsubl
inc
jns
jle
cmp
xor
cs
ljmp
xor
and
aas
mov
inc
xor
les
loope
xor
std
adcl
rcrb
test
icebp
inc
push
mov
es
stos
sbb
fsubrs
jle
pop
int
scas
std
xor
sti
add
xor
xchg
pmulhuw
sbb
lret
adc
xchg
loope
pop
pusha
adc
popf
fadd
orl
shll
lret
fidivrs
xchg
jecxz,pt
hlt
or
pop
cmpsb
lret
dec
xchg
xchg
mov
push
xchg
jo
popa
jge
fsubs
aas
pop
je
sbb
jecxz
lret
jns
repnz
cmpsl
jnp
clc
push
int3
bound
cmc
sbb
aam
movb
scas
xchg
imul
xorl
xchg
xor
pop
paddq
or
in
xchg
pop
cmp
mov
mov
push
xor
pop
movsl
idivb
jno
push
mov
inc
dec
call
xor
mov
jnp
xlat
mov
dec
in
pop
mov
daa
jle
lea
inc
or
stos
pop
sub
adc
cmp
adc
sub
mov
cmpsb
sub
leave
pop
jmp
push
jle
fldcw
repz
outsl
cmp
mov
mov
repz
popf
rolb
jmp
addr16
pop
adc
test
add
sub
mov
cmpsb
jge
cmp
shlb
xchg
out
xlat
js
jns
push
mov
add
pop
adc
sub
adc
pop
mov
fwait
lcall
jae
cwtl
xchg
test
push
fbstp
popf
and
or
dec
pop
push
stc
pop
sub
sub
icebp
xchg
std
lahf
push
rcll
mov
shrl
xor
lcall
inc
push
jb
test
xchg
scas
pop
jle
in
mov
mov
pop
movsb
jge
pop
push
and
push
je
push
xorb
xchg
xchg
pop
pop
imul
into
lahf
insl
insb
shll
sbb
mov
ljmp
sbb
cmp
ljmp
icebp
or
mov
aaa
pop
add
push
sbb
cmc
add
or
imul
cmc
xchg
jle
pop
jb
adc
xcrypt-cfb
cmpsl
mov
mov
mov
scas
in
push
cmp
rcrl
fisubl
jbe
jmp
xchg
xor
sti
jle
pop
sub
dec
jl
je
adc
and
pop
pusha
mov
scas
inc
xchg
xchg
and
add
push
ret
aad
cmc
xchg
cwtl
mov
push
cmpsb
dec
cltd
rcll
sub
jmp
fs
mov
cs
fsubrl
mov
jg
subl
clc
in
xchg
insb
aad
insb
jge
shrl
jp
xor
add
push
pop
xor
xchg
or
int3
rep
jne
inc
push
mov
sbb
push
mov
call
rcll
cmc
aas
test
pop
jno
jp
mov
mov
sub
js
jle
and
jae
int3
jl
xchg
add
mov
aad
jp
mov
jbe
xchg
aas
fucomi
push
ljmp
add
icebp
mov
push
pop
push
aam
sarl
or
clc
push
movl
lods
mov
push
ret
mov
aas
inc
jg
cli
cmpsl
adc
mov
mov
inc
xchg
or
call
and
pop
push
int3
ret
imul
or
in
and
faddl
in
aam
nop
loop
loopne
xchg
dec
mov
gs
repz
sbb
lods
push
shlb
mov
loope
cmp
faddp
xor
call
dec
jo
cmp
lahf
mov
pop
pop
jl
mov
dec
mov
leave
mov
scas
inc
lret
jle
enter
xchg
imul
fldl
std
or
sbb
out
divb
mov
push
scas
movsl
roll
aaa
mov
stos
sets
lds
into
xor
xor
jo
sbb
xor
ret
fcom
dec
or
fbstp
jle
jne
and
in
or
push
dec
sbb
jl
ds
dec
xlat
in
cmp
bt
cld
inc
and
in
shll
sub
cmpsl
fists
aam
iret
push
inc
add
sub
sbb
adc
js
push
enter
aam
sbbb
lret
cld
call
pop
inc
and
jge
fiaddl
inc
adc
mov
mov
es
in
jg
pop
add
ret
mov
leave
pop
sub
lahf
mov
jno
jmp
fwait
test
mov
pop
pusha
ljmp
aaa
push
dec
hlt
out
test
push
sbb
shlb
sbb
pop
sub
add
mov
fs
cmp
fwait
inc
arpl
push
mov
or
jnp
lahf
aam
mul
mov
or
or
mov
xor
int
fisubrs
push
fstpt
dec
pop
inc
sbb
aam
stos
and
push
fists
inc
xor
add
ror
mov
mov
loope
lods
jmp
dec
cli
mov
inc
push
popf
scas
faddl
or
adc
out
lea
jnp
call
sti
push
push
or
jnp
jg
mov
push
mov
aad
mov
mov
pop
dec
repnz
mov
jg
icebp
fisubrl
loope
insl
inc
and
adc
mov
or
ficoms
or
or
sub
cld
pop
testb
fwait
iret
daa
sbb
incb
add
arpl
cmp
mov
pusha
sbb
push
mov
dec
in
and
into
faddp
adc
adc
cmp
pop
ret
ficoml
popf
add
mov
aas
jo
xor
mov
sahf
and
jge
adc
jp
lods
je
dec
mov
mov
gs
mov
and
adc
cmp
mov
sarb
sbb
mov
rcr
mov
loope
fwait
scas
mov
adc
out
adc
and
add
add
add
jmp
xor
lcall
movsb
sbb
movl
cld
cmp
ja
jp
lock
outsl
mov
and
xchg
mov
ja
mov
sbbl
inc
movsl
and
add
nop
inc
sahf
bound
scas
pop
in
cmp
cmpsb
sub
mov
pop
fstpl
cmp
jne
in
jmp
dec
push
icebp
jge
iret
je
sbb
mov
rcll
addr16
mov
cld
cmp
repnz
jecxz
arpl
ret
lahf
ds
lret
push
fwait
das
test
add
sbb
push
push
test
dec
xor
xchg
xchg
xchg
orb
push
push
int
outsb
test
push
fdiv
imul
push
adc
dec
int
xchg
xor
lcall
mov
sbb
inc
xor
sub
push
push
addb
call
insb
arpl
pop
xchg
je
pop
cmpsl
mov
fnstcw
ss
cmp
sub
jle
sbb
vpandn
gs
out
push
sbb
jbe
pop
mov
scas
cld
lods
xlat
testb
mov
or
add
fs
jae
mov
sub
or
jnp
sub
xchg
dec
dec
movsb
lods
pop
sbb
mov
sbb
pop
add
dec
lods
les
popa
or
sbb
iret
insb
cmpsb
fndisi(8087
mov
jns
cmp
aad
imul
aas
lret
xchg
mov
or
pop
inc
cmp
cs
push
cmp
pop
pop
mov
jns
cmpsb
inc
cmp
aad
xor
sub
sub
xor
push
mov
lret
hlt
adc
or
jb
sbb
das
and
cmp
add
xor
xchg
hlt
shr
xchg
popf
fcmovu
dec
push
sub
and
jl
and
lret
jo
push
or
jp
aaa
jmp
sub
aam
clc
int3
das
aad
inc
and
cmp
pushf
test
ss
imul
adc
fcomps
dec
rolb
popa
mov
mov
sahf
test
stos
mov
push
mull
adc
lea
div
jae
inc
xchg
mov
loopne
jb
out
in
pop
cmc
int3
push
out
inc
cli
fildl
shll
pop
cmc
cmp
add
lods
pop
xor
popf
gs
push
push
in
xchg
int3
xchg
mov
dec
push
fwait
cld
aaa
stos
div
lods
sti
pop
dec
cmp
xchg
sbb
aam
scas
int3
sub
or
push
call
scas
jb
cmp
xchg
fldenv
inc
nop
cmpb
lods
test
lods
inc
push
xor
pop
out
dec
mov
lahf
hlt
aad
dec
lahf
lcall
lods
xchg
sub
xor
mov
sub
push
mov
fs
push
add
mov
sub
jo
sbb
mov
insl
lcall
sub
fdivrp
sbbl
and
aam
cmpsb
enter
lret
sbb
sbb
dec
gs
into
and
loop
repnz
xor
and
dec
cmpsl
scas
icebp
push
sbb
fdivrl
jo
jg
insb
insb
mov
pop
sub
mov
cltd
imul
into
inc
pop
jmp
bound
sbb
cmp
addb
sahf
mov
jmp
mov
aam
mov
dec
cmc
ja
adc
dec
scas
mov
sub
imul
not
cmp
in
js
popf
sahf
or
stos
in
sbb
lea
out
mov
dec
sub
rcrb
mov
jle
daa
call
and
clc
repnz
add
aad
stos
clc
push
dec
add
adc
jo
aad
xor
daa
inc
test
andb
xchg
loop
fcoms
in
mov
jae
push
addl
stos
stos
fildll
cwtl
push
popa
adc
push
push
fdivrl
xorl
jg
cmpb
inc
ffreep
cmpl
sbb
push
jle
bswap
adc
loope
fdivr
testb
bts
mov
sbb
sub
clc
push
bound
out
cmp
mov
push
int
dec
fisttps
stos
sbb
fdivs
adc
sbb
xlat
pop
sti
icebp
loope
or
shrl
mov
mov
ret
cli
shll
push
call
psubusw
jns
push
fs
cld
mov
scas
out
lcall
add
mov
pop
cs
mov
testb
scas
xchg
hlt
xchg
jns
or
clc
jne
pop
push
test
push
int3
lods
lret
test
xor
xchg
mov
inc
mov
jne
shlb
adc
adc
int
orb
lahf
insb
das
sub
or
mov
xchg
cld
push
cmpsb
add
cmp
cld
cmp
xor
fmul
xchg
sbb
cld
nop
aad
inc
mov
sbb
sahf
adc
xor
inc
dec
fidivrl
xchg
stc
lcall
rolb
cmp
mov
in
push
pop
sbbl
lock
mov
jmp
push
pop
dec
nop
cmp
jae
mov
les
into
lods
or
iret
push
add
or
jne
outsl
push
imul
pop
pop
fldt
mov
mov
jo
xor
xchg
pop
mov
sub
sti
data16
mov
rcr
mov
bound
jne
dec
leave
sub
jnp
outsb
jbe
dec
xor
out
push
pop
and
filds
inc
or
mov
pop
mov
out
jb
or
xchg
cmp
pusha
add
jae
jg
das
cmpsb
push
sbb
nop
imul
or
les
imul
push
mov
cld
iret
popf
div
xlat
xor
into
add
shrb
test
ljmp
xchg
sub
mov
push
push
inc
jb
dec
mov
and
lock
jbe
aam
popf
and
std
aaa
pop
mov
add
or
mov
pop
nop
adc
mov
jo
lds
push
mov
pop
mov
pusha
nop
adc
xor
jp
es
test
orps
fisubs
dec
sub
fmull
cmc
js
adc
fildl
inc
xor
bound
in
xor
dec
sti
dec
leave
outsl
pop
sti
aad
cmpsl
jns
mov
cli
jl
pop
fsub
clc
int3
adc
and
mov
test
in
cmp
mov
ja
cs
jnp
stos
ljmp
xchg
mov
jge
xor
mov
cwtl
es
xchg
cmpsl
cmp
ret
and
xchg
outsb
adc
dec
jge
cwtl
push
inc
mov
cs
mov
pop
add
loop
dec
push
shrl
and
ss
mov
xor
loope
jne
and
xchg
loope
fistl
cmpl
xchg
imul
in
dec
jp
xchg
sti
jmp
push
push
test
or
fs
aaa
adc
xor
inc
jg
lods
negb
dec
nop
jl
fdivs
rol
mov
aas
aad
cmpsb
mov
js
add
sub
aad
push
sbb
testl
mov
push
shl
mov
and
pop
popf
xchg
popf
sahf
cmp
cwtl
ljmp
cmp
pop
mov
clc
int
fsubl
scas
xor
mull
adc
xor
mov
aam
xor
inc
stos
lock
sub
push
jbe
js
je
xchg
sbb
divb
sub
pop
pop
push
into
or
es
cwtl
int
andb
cmp
movsb
mov
push
mov
mov
push
mov
xor
rclb
outsb
lcall
icebp
mov
dec
sbb
xchg
mov
mov
mov
cmp
jne
into
mov
repz
test
enter
jle
out
xor
xchg
mov
sub
pusha
inc
movsb
dec
jmp
cmc
aad
into
fsubr
mov
fsubs
lods
xor
into
mov
dec
xchg
lahf
xor
xor
mov
cld
fbld
push
mov
test
sub
inc
add
xchg
and
push
pop
inc
icebp
loope
xchg
add
push
orl
jle
and
aam
pop
arpl
dec
or
push
push
mov
cli
stos
mov
ret
mov
scas
push
repz
arpl
mov
repnz
mov
mov
insb
arpl
shl
fbstp
cmp
pop
cld
fdivrl
fs
sbb
js
or
xchg
mov
mov
mull
mov
lcall
or
out
push
std
adcb
sub
mov
rorl
std
pop
mov
jnp
fsave
rol
jmp
xlat
mov
cmp
xchg
sar
outsb
and
mov
adc
lret
sbb
inc
or
enter
aam
and
ror
mov
mov
inc
cmp
jns
add
xchg
xchg
popf
pop
mov
jnp
sbb
in
sarb
or
adc
repnz
and
lahf
push
scas
and
roll
cmp
inc
int3
lods
repnz
stos
mov
cmpb
outsb
outsl
ret
push
inc
and
sahf
imul
daa
into
adc
out
dec
lods
cmp
shrl
pop
jge
adc
call
xor
push
sub
into
call
aaa
lcall
pop
stos
addr16
inc
mov
dec
fnstsw
xchg
adc
mov
push
imul
les
pop
jecxz
pop
outsl
lcall
aad
cltd
fs
inc
aas
and
lea
adc
mov
stos
push
xchg
push
jmp
xor
testb
cmp
fwait
xchg
insl
adc
inc
loop
rolb
jmp
ja
mov
inc
mov
incl
mov
xchg
out
popl
cmpsl
decb
dec
mov
cld
fsubl
xor
leave
add
mov
jo
das
es
cmpb
push
aas
stc
pop
push
sbb
xor
adc
adc
daa
and
inc
popf
sbb
daa
jmp
push
jp
outsb
inc
inc
fcmovne
lock
xchg
mov
mov
lcall
adc
lods
mov
mov
add
pusha
push
xchg
and
lcall
ljmp
add
xor
outsl
mov
icebp
pop
inc
loope
adc
das
jge
rol
popa
xor
scas
pusha
pop
push
and
xchg
jno
mov
call
mov
js
push
divb
mov
cli
pop
dec
mov
mov
leave
sbb
push
leave
je
mov
fs
adc
imul
decl
dec
mov
adc
sarl
pop
pop
stos
push
in
aam
mov
loope
idivb
and
daa
mov
inc
push
add
imul
shrb
add
add
inc
sub
iret
clc
dec
mov
xchg
sar
mov
imul
sti
mov
scas
or
lcall
and
stos
adc
ss
int
call
rorb
add
in
inc
or
fisubrl
add
inc
fwait
aam
sbb
shll
mov
repnz
insl
lods
arpl
xchg
xchg
xchg
stos
sbb
ret
rcr
or
xchg
mov
pop
or
lock
sbb
je
pop
push
and
andb
test
cmp
jo
addb
movsb
repnz
enter
mov
sub
sarl
cmp
cmp
rolb
aaa
das
lods
mov
sbbl
sub
cltd
mov
mov
dec
mov
add
bound
out
push
lahf
add
popa
loop
popa
mov
xchg
data16
movsl
arpl
push
jge
or
cmpsl
add
and
cmc
stos
and
insl
inc
mov
imulb
and
cmp
inc
dec
ljmp
pop
stos
sub
jne
mov
or
lea
fiaddl
ret
dec
sbb
push
test
pop
sub
icebp
sets
jl
lds
xchg
pop
mov
push
mov
add
call
adc
inc
clc
pop
mov
clc
jo
fisubrs
mov
std
xorl
cmp
comiss
sub
xor
or
cmpsl
xchg
sbb
cwtl
popf
loope
inc
push
data16
push
pop
xchg
addr16
adc
sbb
xor
adc
adc
ds
jge
enter
and
push
pop
pushf
fstpt
or
imul
clc
and
test
xchg
fdivs
aas
push
push
imulb
jmp
adc
push
mov
pop
les
and
dec
gs
lea
test
jo
adc
aas
mov
dec
popa
fwait
pusha
mov
jle
pop
popf
popa
xchg
jne
inc
inc
scas
ljmp
mov
iret
inc
inc
jl
rcrb
add
push
xlat
mov
clc
repnz
popa
inc
lea
jo
xchg
pop
push
mov
fcoms
mov
add
or
pop
mov
scas
les
test
inc
pop
sahf
sbb
insb
jns
lcall
outsb
pushf
leave
push
fimuls
add
sub
or
pop
add
aaa
jae
jno
fdivs
stc
sbb
in
mov
mov
dec
stos
js
pushf
sbb
push
sbb
xchg
addr16
sbb
or
shlb
mov
mov
cmp
inc
addr16
in
jecxz
jge
dec
cmp
or
fdivrp
push
in
pop
xchg
adc
inc
stos
dec
imul
call
sbb
popa
fldenv
pop
out
mov
rcr
add
enter
xchg
adc
dec
mov
jbe
sbb
dec
xchg
mov
mov
mov
pop
xchg
dec
cltd
jmp
mov
or
sarb
push
push
jp
push
mov
aam
mov
add
cli
or
xchg
mov
mov
int3
mov
jg
dec
movsb
push
adc
pop
andb
inc
pop
inc
jae
pop
test
lahf
push
enter
fistpll
inc
and
in
popf
sub
pop
and
in
pop
xor
nop
cmp
push
dec
pusha
in
lods
pop
pop
fwait
ret
jge
sub
push
in
idivb
push
mull
push
inc
sbb
call
movsl
dec
testb
sbb
add
ret
add
ss
mov
mov
cmpsl
adc
push
or
sub
ret
lods
mov
xor
test
fs
int3
stos
aam
dec
adcb
inc
cmpsb
imul
push
add
mov
lea
pusha
push
or
iret
fisttpl
in
iret
and
je
sarb
gs
dec
mov
cwtl
cli
int
inc
mov
sub
ror
lret
roll
imul
fldenv
lea
adc
dec
test
xchg
jle
mov
add
loop
es
lock
das
cmpsl
sarb
adc
sbb
jg
pop
and
inc
and
stos
sbb
inc
cli
or
popl
dec
repnz
cltd
push
jnp
lcall
lock
gs
pop
xor
mov
lret
icebp
in
xchg
mov
rolb
jne
stos
xlat
xor
loopne
mov
in
xor
fmulp
inc
mov
rorl
jle,pt
bnd
or
stos
mov
sti
in
pop
or
xchg
in
fildl
arpl
adc
adc
pusha
scas
out
mov
ljmp
addr16
jmp
dec
gs
sbb
fst
dec
imul
push
sbb
xchg
mov
gs
call
pushl
icebp
mov
cmp
xchg
sub
mov
jmp
mov
fdivl
in
cs
xlat
frstor
fs
push
gs
pushf
sbb
jne
mov
sub
iret
push
outsl
mov
xlat
aam
repnz
fnstsw
movsb
dec
stos
push
repnz
out
push
cmpsb
pop
inc
loopne
pop
shr
mov
xchg
outsb
in
adc
xacquire
ss
cmp
in
ror
daa
arpl
out
movsl
movsb
mov
adc
daa
and
stos
push
push
dec
ljmp
or
lret
jnp
xor
ljmp
cli
or
loopne
push
jmp
insl
int3
out
or
aad
cmpsb
pop
jno
adc
mov
mov
add
lods
in
push
dec
xchg
ds
mov
daa
shrb
dec
icebp
and
jmp
and
push
cmp
frstor
roll
xor
sbb
push
or
inc
or
push
and
jecxz
mov
loop
inc
jnp
in
aaa
popa
das
es
xlat
lcall
jp
in
push
cmp
cmpsb
sti
jle
add
repnz
sbb
sub
jg
sbb
lcall
mov
clc
popa
or
push
ss
mov
xlat
jbe
mov
jmp
in
push
mov
sub
lea
shll
sub
outsl
pop
dec
lahf
xlat
int
mov
fisubl
fldl
mov
jo
jmp
ret
sub
xchg
data16
enter
pop
cmp
cmp
dec
pusha
sbb
fistpl
lahf
push
out
mov
sub
inc
ficoms
lcall
cmp
pop
inc
lret
mov
lahf
stos
sahf
pop
adcb
clc
in
add
shrb
fxch
movsb
cwtl
ret
call
xchg
ret
inc
pushf
mov
xor
cmp
mov
test
mov
stc
or
andb
xor
fldt
xor
mov
add
xor
push
loopne
roll
lock
dec
add
mov
jg
dec
sub
mulb
push
xor
sbb
jnp
push
mov
push
sub
pop
inc
loope
mov
sahf
add
pop
cmpsl
aam
cmp
fimuls
sub
mov
sbb
mov
fadds
ds
cmp
push
pop
sub
test
xchg
and
pop
add
outsl
es
imul
fimuls
sti
repz
mov
mov
inc
shl
xor
jns
mov
mov
xchg
mov
xchg
add
mov
mov
and
pop
push
ljmp
cli
xor
out
jle
fcompl
movsl
dec
inc
cmp
pushf
andb
test
aad
popf
out
push
mov
ds
outsl
lcall
mov
in
xchg
push
xchg
dec
lret
es
add
xchg
add
sub
aaa
pop
and
pop
pop
cltd
and
lcall
ja
sbb
hlt
jp
jmp
adc
lock
mov
int
mov
outsl
test
fwait
ret
push
aas
or
imul
dec
pop
mov
dec
es
pop
aad
out
dec
inc
cmp
cmp
dec
out
xchg
fmull
fadd
movsl
sub
aas
lds
mov
or
and
std
mov
mov
or
cs
cli
push
decl
js
push
cmp
mov
mov
shrb
das
xchg
sti
loopne
xchg
outsb
cmp
push
push
push
fldl
sub
xor
test
adc
mov
dec
test
les
aas
out
sti
sar
mov
fcompl
es
sub
out
scas
test
andl
jl
lcall
lcall
fcmove
sub
pop
pop
scas
inc
ffreep
jae
pop
cmp
xlat
test
inc
pop
insl
xlat
and
addr16
aam
mov
mov
dec
test
adc
bound
out
movsb
inc
stos
lds
pop
xchg
and
xor
dec
mov
gs
shrl
xor
pop
aam
sti
push
sar
orl
adc
sbb
ja
jns
out
xchg
and
subb
test
or
cli
int3
cmpsb
add
and
rorl
push
fbld
cmp
int3
fldt
ja
movb
cmp
mov
popa
inc
mov
in
into
cmpsl
jne
dec
jno
outsl
sub
and
outsl
in
aas
mov
cwtl
sub
sub
cmp
add
test
ds
inc
mov
rcrl
lcall
add
sub
jge
sub
sbb
lret
daa
xor
cld
jmp
mov
ds
ja
js
stos
in
adc
add
inc
push
lret
nop
cwtl
pusha
cmpsl
cmp
push
lahf
gs
push
rcl
pop
dec
sahf
test
movsb
addr16
cmp
addr16
loope
jb
pop
sbb
and
das
orl
leave
les
int
cmp
xchg
pop
push
sub
sbb
push
ret
addb
fcmovbe
lcall
pusha
push
push
sub
outsl
in
in
or
pop
pop
dec
out
stos
or
inc
push
cmpsl
pop
jnp
jp
sub
outsl
ja
es
jns
mov
mov
and
sbb
xchg
mov
cmpsl
add
test
call
push
xor
popf
inc
pop
sahf
dec
aaa
in
push
std
adc
jbe
imul
jno
stc
fcoms
leave
repz
movsl
leave
xlat
or
dec
inc
adc
insb
gs
mov
insl
or
movsb
shrb
lods
js
popf
scas
pop
cli
frstor
mov
mov
fisubrs
call
adcl
xchg
or
pop
lds
push
dec
jle
movd
inc
test
sbb
sbb
jae
cmp
or
nopl
sub
mov
inc
repnz
xor
inc
jl
lcall
ljmp
loope
sub
int3
pushl
inc
in
cwtl
mov
push
loop
sti
or
leave
xlat
sub
pop
jecxz
xchg
mov
in
or
mov
aad
mov
sub
push
sbb
insl
pusha
add
mov
lds
dec
cmp
mov
cmp
shrl
fsubrp
out
mov
loop
sbb
dec
test
scas
fildll
cmp
cli
jge
jnp
pop
push
mov
jnp
fld
iret
sarl
ljmp
push
ss
test
and
in
push
xor
fs
lahf
in
mov
jmp
sub
imul
inc
loop
and
mov
icebp
jno
pushf
sbb
mov
xor
pop
push
sbb
xchg
out
xchg
dec
rol
call
jne
bound
movsb
cmc
ljmp
mov
sbb
pop
enter
cld
pop
das
dec
pop
in
push
cmp
ja
lret
aas
shll
fcmovb
adc
repz
cmpsl
push
inc
jp
sub
xor
sbb
and
jbe
jnp
and
into
out
jmp
fs
je
jo
adc
sub
movsb
ret
cmpsb
mov
imul
out
or
cmpsb
cs
xor
jnp
dec
push
lods
adc
cwtl
jp
int
inc
dec
aas
int
stos
mov
jnp
sbb
cmp
fcoms
cmpsb
bound
push
xchg
jge
sub
sbb
push
push
pop
test
lock
push
cmp
cmp
pushf
dec
jge
jg
and
in
and
mov
ljmp
arpl
cltd
fimuls
and
subl
stos
xor
sahf
imul
dec
push
mov
bound
and
jbe
outsb
cltd
sbbb
out
cld
repz
addr16
cmp
shrl
mov
or
fadds
jl
push
push
xchg
xor
fidivs
cli
inc
push
insl
pushf
stc
iret
add
rcrl
or
sub
into
pop
sub
gs
ljmp
sub
jp
in
movsl
mulb
test
add
adc
push
and
mov
pop
pop
sub
nop
xor
inc
ficoml
xchg
dec
dec
sub
pop
jmp
pop
xor
push
jae
jp
push
jnp
push
insl
or
scas
inc
xchg
pop
jno
mov
orb
lret
ficompl
xor
push
adc
xchg
mov
cwtl
jae
fwait
popf
daa
xor
xor
and
xchg
and
jg
xchg
jmp
cwtl
inc
std
sbb
xchg
or
sti
aad
into
out
repz
pop
xchg
sub
adcb
cmpsl
ljmp
lds
pop
scas
mov
inc
mov
jp
cmp
popf
inc
outsb
inc
lea
ja
shlb
jb
jo
inc
call
cwtl
bound
mov
cmp
shrb
test
cmp
faddl
cs
xchg
sbb
lret
cs
jnp
cs
pushf
push
sbb
xchg
lahf
cwtl
hlt
gs
lahf
or
mov
push
pop
std
xor
rolb
mov
cmpsb
js
pop
push
dec
pop
sti
xchg
daa
cld
cli
popa
in
dec
bound
inc
cmp
or
inc
clc
ret
pop
xor
jne
subb
sbbl
lret
pop
ficoms
add
jge
in
lods
inc
and
ret
orl
sarl
inc
scas
test
ja
stos
scas
inc
sbb
xchg
and
cld
ror
in
arpl
pop
testb
imul
mov
mov
cmpsb
test
cmp
mov
mov
sti
pushf
sbb
sti
std
inc
loop
dec
push
fistl
mov
mov
test
xchg
add
push
je
sahf
push
dec
sub
pop
xor
sbb
push
push
inc
andl
dec
ror
sbb
ljmp
dec
es
cmp
fists
mov
push
fidivs
rclb
out
jg
pop
pop
dec
xlat
or
cmpl
insl
mov
mov
jne
lods
adc
adc
inc
mov
jne
fidivrl
push
cli
or
movl
lds
jns
insl
pop
out
pop
xorb
xchg
dec
jle
mov
mov
out
loope
jns
sarl
or
scas
pop
mov
jae
and
adc
pop
inc
or
jl
cmp
repz
xchg
mov
mov
adc
mov
das
mov
adc
loopne
jo
shr
and
cli
jg
adc
pop
push
or
idiv
mov
insb
loop
xchg
cmpsl
mov
push
mov
bound
pop
adc
outsl
cs
sbb
inc
mov
cltd
outsb
insl
testb
adc
sbb
fistps
aas
lcall
push
pop
inc
push
les
in
stc
push
into
push
dec
add
popa
nop
dec
into
fcompl
xor
popl
aam
and
fistpll
xchg
push
mov
xchg
push
xchg
xlat
jno
mov
aas
inc
push
cmc
cmp
fs
push
sub
int3
rorl
pop
stos
fidivrs
cld
mov
jmp
mov
movsl
movsb
push
cmpsl
js
pop
jne
dec
push
push
dec
jecxz
xchg
test
jb
dec
lahf
push
jne
dec
arpl
xchg
lock
jae
xchg
pop
repnz
cmpl
sub
fdivrs
sub
inc
mov
xchg
dec
sar
inc
sti
not
pop
sub
adc
icebp
cld
and
sub
mov
dec
pop
sub
arpl
mov
and
das
frstor
cs
jmp
popf
je
sub
mov
fisubl
aad
scas
rcrb
and
ficoml
mov
out
lods
popf
mov
fisubrs
add
les
test
and
dec
int3
std
bound
fistpll
xor
push
mov
in
stc
in
and
sahf
repnz
insb
jo
mov
push
or
aaa
call
and
mov
popf
xchg
and
dec
cmp
adc
cld
fcompp
call
mov
fidivs
sub
repz
jne
push
and
pushf
ljmp
inc
sbb
adc
mov
je
and
movsl
pop
push
jnp
movsb
mov
in
in
pop
add
arpl
adcb
js
mov
inc
sub
dec
jnp
push
shlb
pop
push
dec
inc
mov
gs
stos
push
ljmp
psubsb
inc
inc
mov
xor
xchg
pop
out
fnsave
in
out
fmuls
pop
inc
nop
push
mov
add
mov
imul
cmpsl
fisttps
leave
cmc
xor
and
sub
cmpsb
xlat
stos
push
cltd
or
lods
push
adc
jp
cmp
xchg
mov
lds
out
dec
or
push
lahf
inc
in
cmp
lahf
mov
leave
xlat
jecxz
pop
sub
loop
cltd
imull
adc
or
cmp
mov
mov
mov
push
in
mov
pop
pushf
clc
orb
sub
lret
out
ja
mov
lcall
cmp
inc
adc
lock
sub
cwtl
mov
scas
es
fdivr
lret
push
mov
mov
jo
mov
sbb
cmp
out
jp
into
cs
sbb
sub
in
sbb
or
fnstsw
push
inc
imul
movsb
pop
fcmovu
loop
test
dec
and
out
out
inc
sub
cmp
imul
jo
stos
sub
xlat
jno
adc
lahf
mov
mov
or
out
out
jbe
clc
insl
lahf
bound
js
mov
ror
sahf
test
inc
imul
jo
testl
sub
addb
rolb
jmp
inc
lahf
loope
fsts
jle
repz
dec
out
loopne
test
push
lret
iret
xor
cltd
push
inc
xor
imul
testb
pop
rol
hlt
in
imul
ret
sbb
jl
rdtsc
dec
sbb
cmp
jns
rcl
push
add
add
sub
mov
testb
les
fisubrl
adc
xchg
nop
push
pop
jecxz
xchg
rcrl
or
mov
leave
in
sbbb
inc
outsl
xchg
andl
lods
push
pop
or
mov
dec
lods
mov
add
jo
cmc
cs
stos
mov
pop
lcall
adc
mov
popa
stos
mov
sbb
cld
mov
shrl
push
ljmp
cmpsl
or
push
stos
sar
lret
cmp
inc
and
out
push
push
mov
jl
loope
sbbl
and
pop
sahf
cmpsl
ss
in
push
xorb
test
outsb
sbb
and
adc
in
int
out
andb
fmuls
icebp
pop
cmp
jnp
xchg
out
xchg
popf
jno
pop
std
rorl
lock
popa
sbb
xchg
mov
fisttps
sub
lods
adc
ret
sub
adc
cmp
inc
add
cltd
stc
jae
sahf
mov
dec
add
cmp
push
cmc
mov
sub
sub
ficoms
mov
adc
lret
test
xlat
pop
nop
dec
mov
mov
loope
sbb
xchg
pop
cmp
stc
ret
adc
test
adc
jecxz
icebp
or
and
mov
jnp
lcall
sbb
mov
add
push
xor
pop
insb
dec
popa
add
xor
pop
push
and
jae
jl
dec
mov
mov
cs
popa
mov
clc
in
jb
mov
loop
in
andb
out
xchg
pop
fwait
mov
jo
pop
insb
adc
notb
push
push
dec
data16
push
in
les
in
xor
aam
cwtl
lea
bound
mov
xchg
fwait
jge
and
shlb
jnp
lods
scas
sbb
ret
or
add
cmp
popa
jp
jle
xchg
pushw
in
inc
push
and
add
jns
pop
mov
dec
outsb
gs
mov
ret
pop
mov
push
cmpsl
ja
jns
movsb
ljmp
dec
jo
sbb
imul
push
inc
shrl
xor
jmp
pop
lods
inc
arpl
lret
inc
inc
loop
push
cmp
rorl
repz
xchg
jmp
popa
dec
mov
adc
push
les
out
bnd
addr16
jecxz
dec
in
xor
cmc
pop
mov
out
sbb
stos
mov
sub
inc
jns
popf
lret
cmpl
inc
arpl
mov
adc
repnz
stc
rcll
xchg
shll
inc
movsb
cmp
xchg
test
push
cmpsb
jns
rclb
xchg
aad
lods
cmp
sbb
or
stos
adc
or
add
negb
and
andb
lcall
or
scas
clc
cmp
or
lock
imulb
fstl
int3
jl
xchg
out
lcall
mov
loopne
jno
push
pushf
add
in
sbb
rcrb
imul
ja
imul
push
mov
jge
sub
push
aad
imulb
fwait
jbe
arpl
push
cmp
or
test
lock
lock
dec
mov
mov
sbb
into
jg
lret
repnz
jecxz
test
insb
cwtl
arpl
mov
ret
fld1
push
inc
xlat
or
cmpsl
cmp
mov
imul
cmp
mov
jecxz
imul
leave
cmp
dec
sbb
imul
inc
push
aaa
fidivs
hlt
fldl
jp
mov
xor
pop
add
stc
lds
pop
stc
push
subb
movsb
dec
jb
pop
mov
jge
xlat
dec
xchg
mov
lods
push
mov
jle
jle
jae
xchg
fwait
cmovno
jo
aas
out
pop
cmc
js
mov
and
stos
sbb
inc
mov
dec
clc
dec
bound
jne
cmp
pop
sub
or
call
out
lahf
dec
js
out
pushf
cmp
jo
cld
mov
pop
aas
rorb
or
stc
hlt
pop
cmp
jmp
and
sbb
inc
je
imul
dec
ss
xorb
daa
into
arpl
inc
push
mov
or
xor
jl
ret
int3
push
inc
or
mov
pop
call
outsl
jmp
xchg
nop
mov
cli
sub
jne
inc
pop
xor
jne
test
cmpsb
ja
pop
aad
push
push
inc
scas
pop
test
mov
icebp
fnstenv
fnstsw
pop
sbb
rcr
dec
loop
inc
jne
add
dec
add
mov
in
mov
pop
mov
scas
push
add
push
or
push
sbb
xchg
fsubrs
and
jnp
dec
jmp
stos
dec
push
nop
xchg
inc
fdiv
dec
jb
jmp
lods
sbb
or
jne
fisttpll
das
xor
jno
adc
out
idivb
ja
mov
or
adc
out
insb
mov
popf
push
and
mov
jle
xchg
sub
push
cmp
mov
in
mov
shrb
pop
push
dec
pmaxsw
push
push
stc
cmp
inc
rcll
push
pop
dec
dec
and
imul
add
dec
jle
push
dec
xor
and
jne
or
mov
inc
fcmovnb
jo
cmp
ret
out
sub
jnp
xchg
xor
cmpsl
push
push
mov
push
into
ja
popa
addr16
add
test
mov
adc
mov
cmpsl
mov
dec
imul
or
adc
jo
fisttpll
adc
adc
add
dec
lods
sub
dec
iret
loop
mov
cmp
stc
add
lods
mov
in
mov
mov
pop
xchg
jne
lret
push
mov
dec
hlt
enter
movsl
sbb
call
fldt
xor
js
subb
dec
out
sub
sbb
aaa
mov
sbb
xor
mov
scas
std
inc
pusha
rolb
ret
fbstp
data16
sbb
adc
in
cld
push
dec
mov
cmc
xchg
mov
out
jl
jns
sub
sbb
dec
pop
mov
out
fldcw
les
mov
xor
push
mov
clc
ds
pop
cmp
fwait
lcall
test
jle
data16
fisubl
xor
int
leave
mov
mov
loope
xchg
nop
adc
fs
cmp
or
int
shr
mov
cmp
arpl
mov
mov
jg
jmp
lods
pop
outsb
scas
jns
scas
jge
mov
cmp
outsl
add
lds
jnp
xchg
xchg
jns
pop
lock
bound
push
lds
pop
mov
or
sbb
rclb
mov
cmpsl
mov
loope
jbe
or
sub
cld
xor
pushf
fisttpll
dec
sti
rorb
cmc
cwtl
push
sbb
sub
mov
test
callw
vmptrst
pop
xor
inc
inc
sub
outsb
mov
notl
jbe
cld
cld
xor
lods
adcb
sbb
in
scas
pusha
xchg
and
lock
aas
adc
bound
inc
adc
cmpsl
mov
bound
sub
jnp
ror
ljmp
fdivr
jo
cmpsb
divb
aas
add
data16
mov
mov
push
push
scas
mov
adc
inc
jmp
push
bnd
shl
out
mov
jp
inc
or
ja
sub
sbb
mov
fiadds
dec
jne
xchg
loope
cmp
stos
stc
and
cld
cmpsb
pop
xor
stc
lret
sub
dec
ss
cmp
cmp
test
stos
out
sbb
jp
mov
and
call
ds
ljmp
cwtl
xchg
push
mov
xchg
icebp
aas
fadds
pushf
xchg
mov
mov
daa
rorl
sub
sub
test
or
rcrb
aad
push
inc
and
sarl
mov
fldcw
mov
test
mov
out
dec
rcrl
mov
ss
xchg
js
imul
sti
sub
out
xchg
insl
xor
sti
imul
or
or
sub
push
sti
fisubl
cmp
and
add
xchg
hlt
jp
push
decb
sbb
push
jmp
xor
mov
movsl
test
daa
mov
xchg
fnstcw
stc
add
std
and
push
jbe
subl
add
imul
sub
jp
xchg
stos
pusha
cli
xchg
cld
dec
cs
and
call
xchg
test
lcall
addr16
mov
test
xor
cmpb
lahf
pop
leave
push
cmp
cmp
mov
xchg
push
push
xor
ret
jnp
push
xchg
fldcw
lret
in
stos
pop
lods
inc
adc
inc
es
fs
int
add
pop
inc
popa
lcall
repz
push
fisubl
enter
sbb
dec
jmp
int3
inc
mov
push
add
pop
push
repnz
jnp
out
lret
inc
movl
cltd
dec
inc
in
jge
lods
mov
inc
mov
jno
mov
pop
mov
int3
push
stos
hlt
jmp
stc
movsb
fisttps
mov
test
das
lods
data16
daa
add
mov
ror
sub
sahf
inc
pop
jp
shl
cmp
fists
cmp
mov
pushf
jle
mov
mov
cmp
jmp
inc
mov
hlt
lret
xchg
inc
loopne
jnp
jge
addr16
push
sub
sbb
rcl
pop
push
out
push
imul
adc
mov
xor
notl
fwait
push
jg
and
jl
es
sub
iret
mov
adc
test
inc
rorl
push
loop
jmp
test
dec
aaa
push
movsl
in
pusha
leave
add
outsb
ljmp
jns
cmc
sub
ror
int
arpl
add
sbb
das
std
out
jo
cltd
inc
out
add
ror
int3
push
or
cs
movsb
push
mov
into
pop
mov
inc
inc
inc
test
push
and
in
cmp
cwtl
lock
xchg
arpl
or
sbb
loopne
enter
setns
mov
jne
lock
jmp
in
fistl
es
sub
dec
xchg
and
movsl
subl
enter
shlb
aaa
fistpl
or
cmpsb
mov
cli
sarb
sbb
mov
daa
pushf
jo
and
jle
or
push
push
hlt
sub
aaa
in
idivb
fwait
cmp
mov
test
loop
stc
popf
cmpsl
enter
jo
add
and
mov
jo
and
adc
mov
ja
gs
outsb
dec
stc
lock
leave
adc
jmp
mov
mov
xchg
pop
pop
sbb
popf
jb
movsb
call
mov
lahf
es
fistpll
out
ret
xor
xchg
lret
call
aaa
inc
cmp
pop
add
cmp
sub
mov
lods
mov
push
int3
rolb
sub
sub
add
bnd
xchg
mov
xor
inc
add
xchg
not
adc
adc
insl
fwait
out
pop
popa
push
adc
add
adc
sbb
jae
pop
js
outsl
cs
and
push
aad
fucomip
testl
xor
call
mov
fbstp
lea
cmp
sbb
adc
mov
mov
in
xor
push
xor
push
xlat
push
dec
popf
movsb
je
out
clc
hlt
mov
push
dec
in
ret
sub
mov
ret
out
popa
gs
inc
daa
lahf
jecxz
loope
rolb
push
test
data16
daa
test
movsb
pop
and
in
sbb
scas
cltd
cmpsb
xchg
inc
dec
jp
test
sbb
inc
xchg
ss
push
fidivs
adc
in
call
les
push
aad
outsb
sub
pop
shl
push
out
mov
or
jmp
add
int
sub
leave
out
xchg
pop
sbb
in
xchg
icebp
and
or
arpl
dec
cmp
shlb
fbstp
and
pop
fdivl
xchg
lcall
scas
in
int3
jp
lds
mov
int
in
mov
loop
jns
and
test
pop
pop
pusha
jmp
cld
mov
pushf
xor
xchg
inc
rcr
mov
into
popa
mov
cltd
mov
fnsave
aas
fdivl
pushf
dec
or
sub
mov
loope
roll
sbb
inc
out
repz
leave
jecxz
or
push
sbb
je,pn
int
stc
into
cli
mov
mov
jnp
hlt
xchg
sbbb
repz
jmp
into
jge
sub
sbb
imul
push
es
or
mov
sub
xchg
xchg
loopne
sahf
add
mov
cmp
cmp
xor
incb
adc
std
insl
or
and
xor
sbb
outsl
insb
daa
pusha
inc
mov
dec
mov
subb
xchg
xor
sbb
fsubl
loop
fdiv
mov
rcll
or
push
sbb
lock
xchg
dec
pop
mov
adc
jnp
ds
clc
out
jecxz
mov
cs
in
sbb
out
inc
out
dec
scas
sub
mov
rclb
inc
cli
xchg
adc
out
pop
cwtl
push
cltd
rorl
lods
add
loop
xchg
or
dec
jg
fiadds
fiaddl
add
or
ljmp
xchg
leave
addr16
dec
xchg
adc
inc
push
cld
xlat
cltd
js
sarb
rorb
les
sub
add
clc
and
cltd
push
loopne
sti
popa
pushf
test
sbbb
pop
imul
jge
inc
je
xor
jge
aas
in
mov
push
push
add
loop
adc
and
adc
mov
mov
push
pop
lcall
fistpll
movsb
arpl
jnp
xchg
dec
scas
data16
or
mov
scas
mov
lods
icebp
mov
movl
arpl
push
mov
insb
adc
out
xor
lds
ja
push
pop
cmpsl
or
adc
stos
out
outsl
adc
dec
lret
out
sbb
xorl
pop
adc
stos
in
pushf
adc
pop
jbe
sbb
mov
outsb
jg
mov
jmp
push
stc
jne
movsl
stos
and
xchg
jecxz
push
enter
xor
rorl
add
subb
call
jo
push
push
pop
xchg
xor
sub
imul
add
mov
push
scas
push
lds
movsb
inc
lret
movsl
sub
pop
scas
les
mov
pop
hlt
imul
inc
pop
hlt
add
je
xor
pusha
cli
adc
and
mov
in
mov
std
or
cwtl
insl
xor
add
mov
inc
cmovae
dec
mov
push
stc
or
pop
cmp
adc
mov
in
mov
insb
cli
push
dec
cmp
imul
xchg
shlb
and
inc
sub
inc
pop
rclb
push
xor
out
in
dec
and
sbb
mov
jns
jo
rcl
pop
loop
shl
pop
rcll
xchg
out
cmp
sbb
pop
cltd
int3
mov
mov
push
or
jg
popa
fwait
int
daa
stos
adc
movsb
jno
in
jne
and
hlt
cli
test
push
ficomps
into
pop
fwait
add
push
aad
sahf
int
mov
daa
mov
rcll
cs
lea
roll
cli
mov
insb
push
js
jecxz
insb
mov
adc
cmp
pushf
and
out
mov
inc
stos
jnp
fcomp
jge
mov
ret
jmp
clc
dec
rorl
jmp
out
cmovge
jp
mov
orb
jae
cmp
cld
les
loopne
mov
dec
push
or
jo
mov
loop
into
jge
lret
mov
mov
cmp
in
aad
push
cltd
bound
pop
adc
add
in
popf
addb
call
mov
fisttpl
fcmovnbe
mov
pop
je
cs
cmc
popf
jnp
ret
test
cmp
inc
xchg
imul
cwtl
imul
jns
imul
dec
test
sti
imul
xchg
mov
stos
push
ret
sub
std
xor
popf
adc
mov
mov
inc
fs
add
inc
test
test
sbb
dec
ja
pop
jle
cwtl
pop
outsl
ficoms
sbb
dec
jbe
jb
in
rcrb
jmp
sti
push
jle
test
movsl
push
mov
mov
inc
pop
loop
push
sarl
inc
xchg
fsubrs
icebp
scas
das
or
mov
out
hlt
inc
inc
scas
xchg
int
out
push
iret
sbb
bnd
push
push
sbb
sbb
and
jg
insb
add
pop
int
je
mov
fwait
cmc
sub
push
sbb
adc
mov
xchg
shll
int
mov
lcall
rorb
jns
xlat
out
lds
fsubrl
adc
add
mov
jne
ret
inc
test
ss
fldt
ds
dec
mov
xchg
out
loope
sub
nopl
xor
inc
sub
andl
sub
leave
cwtl
xchg
jne
int3
adc
addr16
les
jge
xor
out
in
sti
js
imulb
sbbb
inc
add
cs
jae
sbb
ljmp
scas
inc
push
mov
inc
fmull
movsb
pusha
mov
fisubrl
cmp
stos
inc
add
jb
enter
ljmp
pop
enter
pop
aam
add
add
clc
or
inc
add
mov
in
dec
or
xchg
orl
lds
push
pusha
xor
pop
add
fwait
push
and
enter
pushl
xor
jg
sahf
dec
xor
cmpl
xchg
push
cmp
ss
andb
pop
loopne
loope
cmp
sbb
imul
lds
add
lods
std
jno
loope
movsl
divb
jne
cmp
out
mov
ljmp
out
jne
rcrb
pop
in
pop
cmp
sbb
cmpsl
mov
fsubrl
xchg
jbe
jo
mov
add
mov
xor
mov
xor
movsb
mov
jp
mov
push
adc
sbb
xor
push
pop
adcb
sub
jae
push
mov
mov
out
pop
in
ja
push
jmp
aam
jg
jo
lahf
inc
jbe
jns
movsl
add
cmp
inc
sub
fisttpll
pop
std
das
inc
fwait
je
movsb
inc
ljmp
jnp
or
xor
mov
cld
fsts
loope
mov
jns
ds
dec
xor
out
shll
neg
ret
mov
push
sbb
push
lahf
mov
cmp
mov
test
pop
popf
clc
inc
xor
cmp
xchg
fbstp
sti
inc
ljmp
adcb
mov
or
push
mov
pop
cmpsl
cmp
sbb
cmp
inc
sub
jae
lock
jne
push
lock
ret
pop
enter
gs
mov
inc
aad
pop
cmpsb
sub
sbb
movb
dec
cltd
pop
hlt
sbb
fildl
adc
popa
int
push
pop
mov
and
mov
cwtl
inc
mov
cltd
subb
out
nop
push
xlat
loope
xorl
iret
pop
add
adc
in
outsl
sub
test
xor
mov
out
in
cmc
pop
int3
ret
jp
adc
adc
dec
xchg
mov
div
pushf
outsl
jl
xchg
aaa
out
pop
bound
mov
push
cli
or
mov
sub
cmpsl
repz
add
adc
mov
test
push
andb
popf
out
mov
and
out
push
mov
enter
mov
and
scas
or
or
jns
aam
and
pushf
fwait
mov
bound
mov
xchg
pop
jbe
mov
inc
push
or
mov
pop
mov
inc
xchg
mov
xchg
loopne
jecxz
inc
dec
and
pop
pusha
aam
and
push
xor
and
mov
dec
ret
mov
jo
fs
in
out
adc
mov
xor
das
xchg
and
fcmovnbe
or
mov
cwtl
lret
imul
push
mov
lret
adc
loopne
mov
xchg
shl
mov
test
fsubrl
loop
sub
push
cs
fndisi(8087
xlat
in
aam
dec
lahf
insl
pusha
sub
mov
andb
aas
ljmp
mov
fdivs
xchg
mov
mov
cld
mov
inc
add
out
aam
and
shr
out
mov
in
cmc
hlt
xchg
call
mov
ret
loopne
xchg
lret
push
out
push
push
cld
xchg
jecxz
dec
jg
and
sti
popa
inc
outsb
fidivrs
xchg
in
inc
pop
imul
ds
data16
mov
mov
jns
dec
jb
xor
jle
mov
insl
push
int
leave
push
pop
push
sbb
jnp
jle
pop
incb
dec
testl
lahf
mov
je
mov
je
outsb
jb
push
jp
fsts
in
enter
push
adc
push
xchg
div
and
inc
dec
add
jg
mull
dec
pop
mov
sub
shll
adcb
sub
ljmp
sub
pop
sti
xlat
sbb
fdivrs
cmp
faddl
lret
pop
sarl
cmp
iret
loopne
aam
lahf
pop
iret
das
pushf
subb
push
mov
dec
inc
stos
dec
pop
adc
lcall
xchg
fiadds
adc
cmp
stc
xor
cmp
mov
pop
push
mov
jne
pop
and
pop
pop
mov
dec
loopne
xchg
inc
mov
sbb
loopne
cltd
inc
call
mov
popa
dec
dec
pop
push
addb
inc
out
jmp
mov
cwtl
add
ds
arpl
mov
xchg
ja
pop
imul
lds
mov
out
test
xlat
shll
incb
call
sub
dec
sub
icebp
pop
mov
sbb
pop
cmp
xor
dec
pop
push
mov
mov
jns
sbb
addr16
xlat
pavgw
adc
ficompl
xor
push
dec
xor
icebp
inc
push
scas
sub
sbb
mov
mov
fwait
xchg
xor
or
xor
dec
mov
shrl
je
dec
jmp
jmp
lcall
testl
jnp
push
xchg
adc
add
push
inc
sub
out
push
mov
cmp
jb
cmp
in
ds
sbb
addl
popa
cmc
sbb
cli
jno
xchg
cmp
cld
sub
aam
mov
jae
dec
jecxz
adc
or
das
cmp
repz
dec
xor
xchg
add
xchg
or
jp
cmp
push
add
ss
sbb
pop
gs
fmull
rorl
push
jmp
enter
push
pop
fcoms
jmp
jae
and
mov
daa
les
jmp
test
mov
dec
pop
leave
xchg
shll
fists
scas
std
xor
push
mov
aas
call
rcrl
dec
dec
push
cmp
int3
gs
lcall
jnp
xchg
xchg
das
shll
mov
sub
mov
sbb
daa
stc
addr16
mov
std
pop
stos
not
jge
mov
rorl
sbb
xor
and
shlb
ret
js
mov
das
inc
add
andl
sbb
jae
test
push
lock
push
mov
inc
nop
xchg
jmp
btsl
int
out
xchg
in
xor
gs
std
test
mov
dec
andl
inc
cwtl
jb
push
in
scas
mov
popa
cwtl
mov
sbb
hlt
dec
mov
jnp
lods
sub
jmp
and
not
lret
pop
mov
hlt
jb
fwait
jno
clc
addr16
jmp
sar
mov
repnz
imul
incb
mov
aaa
mov
xchg
imul
bound
dec
xor
cmp
jo
cmp
cmp
fidivrs
je
jns
ja
fwait
push
pusha
mov
mov
jno
out
insb
fs
popa
sub
xor
fsubrl
das
jg
dec
mov
nop
ds
sub
sbb
icebp
js
jle
ss
pop
or
test
or
movsb
dec
inc
frstor
mov
int
push
addr16
mov
test
fistpl
insl
push
push
dec
les
das
hlt
adc
lea
mov
dec
inc
int3
inc
fs
aad
push
jae
test
cwtl
inc
sbb
push
maskmovq
rclb
sub
pop
add
hlt
push
popa
cld
repz
mov
cmp
cld
push
repnz
imul
pop
loop
int
aas
and
into
int3
mov
jmp
pop
push
cmc
test
jle
pop
insb
pop
jge
mov
mov
sti
jp
and
enter
out
xchg
mov
sti
rdpmc
enter
lret
rclb
mov
data16
stos
bound
out
adc
insb
imul
dec
inc
dec
syscall
push
int
xlat
mov
sub
dec
mov
jmp
daa
stc
fst
and
into
push
pop
jno
movsl
loopne
into
sub
test
cmp
hlt
sbb
or
inc
jno
adc
pop
push
mov
pop
stos
in
and
xchg
sub
jge
cmpsb
in
sub
gs
in
mov
add
push
xchg
aaa
jge
cs
mov
je
cli
arpl
inc
mov
xlat
ja
jmp
fiaddl
outsb
shrb
movsl
jnp
cmp
stos
lds
cltd
lods
dec
hlt
cld
aam
push
bound
ljmp
mov
imul
mov
cmpsl
cmc
push
adc
push
or
fisubrl
or
hlt
push
test
push
repnz
and
repnz
lahf
cld
loop
je
inc
xor
mov
orb
les
add
lret
scas
outsb
dec
outsl
xchg
push
dec
cmp
lods
addb
lcall
in
shll
xchg
jle
sti
dec
sub
push
repnz
sub
test
negl
movsb
xlat
int3
cmp
aas
into
repnz
add
scas
jge
shl
pop
dec
mov
jbe
mov
lock
or
cld
push
ret
or
dec
jno
mov
fstpt
nop
cmp
mov
jl
cld
sbb
cmp
fildll
scas
gs
or
jae
jge,pn
ficomps
xor
hlt
and
in
xchg
jae
shrb
pop
ffreep
dec
mov
fwait
test
dec
subl
xchg
pop
or
pop
out
in
cmp
out
stc
fdivrl
jge
enter
jbe
or
or
jmp
inc
xor
pop
mov
and
dec
mov
insb
jl
mov
pop
mov
int
hlt
inc
pop
or
sbb
jb
push
out
je
push
inc
ss
jnp
fwait
sub
fstpt
xor
sbb
dec
mov
mov
dec
fldl
mov
out
bound
jmp
xor
and
mov
add
or
xor
push
xchg
adc
adc
cmpsb
out
cmp
roll
cmc
add
rcrl
push
jno
out
lahf
mov
fcmovne
lods
jecxz
cmpsb
push
fwait
jge
jne
cmpsl
jne
mov
add
call
push
ret
fiaddl
push
adc
out
add
sbb
test
xor
stc
loopne
xlat
adc
test
mov
xchg
add
jb
clc
cmc
adc
sub
adc
add
movaps
mov
pop
sbb
add
fistpl
mov
lret
push
xor
xlat
mov
pop
pop
mov
dec
mov
ficomps
or
sub
into
repz
mov
pop
sub
popa
add
ror
movsb
mov
test
push
fwait
adc
dec
fbld
enter
lahf
fldenv
cmpsl
decb
sbb
stos
fstp
mov
lahf
out
push
or
and
cmp
xlat
int
lret
or
ds
scas
jmp
ret
insb
in
addr16
push
xor
aaa
cmc
testb
outsl
xchg
clc
xchg
mov
rorb
loop
rorb
ret
adc
push
popf
xor
push
lcall
sub
or
and
into
js
scas
mov
aaa
xchg
into
lock
fadd
in
pushf
fs
mov
lret
jl
fidivrl
rorl
cmp
pop
lods
dec
lret
insl
aad
mov
sahf
pop
aad
adc
pop
fisttpl
push
mov
inc
xchg
or
in
ja
out
xchg
fstps
fsubrs
xchg
inc
cmp
adc
push
mov
pcmpeqd
shll
pop
mov
jl,pt
mov
cmpsb
ljmp
andb
adc
jno
mov
fists
cmp
sbb
jb
ds
jno
mov
into
cmpsb
test
inc
sbb
jno
pop
rcrb
cmp
lahf
xor
push
stos
iret
test
shl
mov
mov
jl
in
nop
sbb
xor
in
or
push
test
cmc
push
pop
mov
sub
xchg
fiaddl
idivb
adc
jmp
jl
testl
in
and
popa
xchg
jl
cmpsb
loop
fcompl
rolb
incb
ljmp
xchg
dec
mov
and
pop
das
aad
mov
lock
xchg
ret
movsb
rorb
and
out
aas
hlt
xor
sub
loop
std
ffreep
dec
scas
je
adc
mov
test
jnp
loope
add
lea
fisttpll
leave
push
push
sbb
pop
lods
lea
or
daa
fs
rcrb
jb
mov
out
icebp
inc
aam
sub
fpatan
jnp
sbb
mov
nop
mov
adc
repz
int
push
in
cli
pop
leave
jno
mov
push
push
std
int
add
insb
inc
lahf
mov
push
adc
cmp
test
shl
loop
in
xor
les
push
jns
xor
mov
xchg
cmc
adc
fs
xchg
mov
into
fstps
loop
pop
mov
cmp
ljmp
sub
nop
jb
mov
mov
les
push
in
lret
cmp
clc
dec
je
std
push
inc
cmpsl
xor
popa
std
notl
add
icebp
jns
popf
int
lea
inc
xor
sub
lea
xchg
loop
lahf
inc
icebp
loopne
mov
loopne
mov
sub
xchg
mov
sti
shll
mov
and
dec
mov
andb
xchg
jecxz
fsubrl
and
bound
aad
sbb
xor
mov
push
aam
or
dec
stos
mov
sub
inc
leave
mov
out
shl
insl
ja
je
lret
lock
cmp
xorb
cmp
inc
sub
daa
mov
add
jp
xchg
lods
in
jecxz
push
aam
sti
fisttps
dec
testl
roll
jae
js
sbb
fiaddl
push
push
xor
iret
xchg
imul
out
lret
adc
fstps
dec
mov
cmc
loopne
xchg
test
pop
movsb
jmp
mov
addr16
dec
sahf
mov
jns
bnd
jo
test
dec
sub
hlt
js
sub
sub
lea
xchg
adc
andb
adc
xor
jnp
in
filds
jbe
ret
icebp
adc
mov
dec
mov
dec
cmpsl
mov
mov
fildl
xor
call
outsb
arpl
in
adc
mov
push
pop
movb
icebp
cmpsb
nop
out
mov
pop
clc
repnz
call
pop
add
mov
inc
jae
push
xchg
fnstsw
sbb
cltd
inc
int3
js
mov
hlt
arpl
xor
je
dec
dec
lret
int3
imull
stc
lret
jae
pop
dec
sbb
or
aaa
pop
inc
pop
pop
dec
call
icebp
dec
icebp
jne
lahf
pop
pop
adc
push
xchg
movl
loope
push
addr16
int
jo
add
xchg
sub
data16
jb
sahf
jmp
mov
add
or
cmpb
xor
je
mov
sbb
lds
push
gs
unpckhps
gs
test
aas
ljmp
in
cltd
mov
fwait
das
or
push
push
xchg
xchg
stc
stos
stc
mov
sub
xor
sub
mov
push
sbb
dec
cli
sub
jmp
mov
mov
out
stc
int
cld
fcomip
inc
arpl
cmp
xor
pop
outsl
mov
faddl
aad
stc
mov
movsl
cmc
imul
subl
pop
lret
sbb
test
mov
test
mov
dec
je
mov
push
cld
leave
push
test
sahf
mov
lods
repz
and
shrl
arpl
and
jge
adc
jnp
mov
in
cmp
and
test
jecxz
cwtl
sbb
xor
shlb
push
test
dec
scas
or
mov
outsb
js
or
or
jmp
pop
lods
dec
and
jl
je
outsl
fmuls
xor
and
adc
jmp
inc
sub
cwtl
sbb
xor
lds
push
or
ret
push
ret
pop
in
lods
cmc
pop
fcomi
insb
shll
cltd
ss
arpl
dec
jb
or
mov
fucomip
fldl2t
push
fsubrl
mov
popf
mov
jp
add
inc
cmp
sbb
dec
pop
cld
loope
lahf
jnp
or
and
jbe
push
je
lods
imulb
inc
aam
push
popf
mov
fwait
mov
inc
gs
aam
cmpsl
sbb
sahf
jb
popa
dec
jmp
dec
xor
push
pusha
jns
jmp
pushf
lock
dec
sahf
jb
xchg
rcrl
xor
pop
and
mov
sbb
insl
inc
cmp
and
and
adcb
inc
push
sbb
fdivr
dec
in
daa
add
sets
mov
cld
cli
sbb
xchg
in
test
push
xchg
cmp
lret
adc
cmp
push
data16
inc
pop
aad
cmp
mov
inc
inc
xor
xor
mov
dec
cmpsb
aaa
addr16
xchg
jb
inc
sahf
adc
xchg
loopew
sbb
dec
mov
cmp
jmp
sbb
jg
xchg
fsubl
fists
cmp
sbb
add
lea
addl
mov
push
lea
into
pop
inc
aad
shlb
mov
dec
mov
xchg
push
cmp
adc
mov
xor
or
stc
dec
xchg
add
sbb
mov
es
add
adc
jmp
lahf
cmpsb
xchg
fs
fcompl
dec
mov
sti
into
and
orb
outsl
dec
popa
push
int
pop
sbbb
push
dec
mov
push
jno
pop
loop
pop
mov
cmp
mov
mov
push
call
sub
jl
mov
xor
mov
in
sub
int3
movsb
mov
mov
dec
push
hlt
inc
sar
xchg
add
cltd
mov
hlt
sbb
cmpsb
ja
sub
js
lcallw
ss
cmpsb
cmp
repnz
xor
insb
xor
sbb
fwait
out
mov
mov
ljmp
es
repnz
std
jecxz
jecxz
loope
incl
mov
mov
cli
repnz
and
inc
out
insl
sbbl
mov
dec
or
pop
inc
lcall
add
dec
lods
jecxz
ljmp
lods
iret
je
fs
push
repz
clc
mov
sub
adc
inc
inc
pop
test
aas
push
jne
pop
jno
adc
adc
or
adc
pop
sub
std
xchg
shld
stc
adc
jl
pusha
mov
xchg
push
add
movntps
andl
cwtl
sti
add
adc
sub
jp
ds
movsb
dec
enter
imul
mov
test
out
fistpll
shll
ret
cmp
and
xchg
xchg
in
xchg
stc
cmpsl
jne
movsl
rcrb
cmp
movsb
pop
imul
mov
and
sar
jnp
sub
inc
pop
shrb
xchg
fldcw
adc
mov
stos
cltd
inc
push
je
insl
movhps
cmpsb
stos
mov
lret
cmp
cmp
ret
sub
pop
cmp
adc
pop
in
imul
mov
jp
mov
or
xor
xchg
mov
popf
and
clc
movb
xchg
test
out
sub
jbe
cli
xor
xor
or
inc
push
test
in
jmp
or
xlat
cmp
loope
lea
repz
sbbl
test
insb
pop
pop
and
push
add
shrb
jbe
les
jge
add
imul
call
mov
repnz
int
push
addl
jns
clc
scas
data16
inc
ds
movsl
paddb
int3
repnz
sub
loopne
imul
mov
xchg
loopne
popf
pop
repz
pop
lock
mov
in
pop
std
fs
mov
jge
js
out
pusha
loopne
arpl
testl
pop
stos
test
mov
sarl
js
push
lret
jo
dec
or
ja
insb
jl
int
mov
sbb
push
adc
loope
popf
iret
pop
js
mov
sti
adc
adc
adc
les
ficompl
pop
jmp
loop
mov
mov
xor
cmp
dec
add
loopne
push
xlat
fadd
sbb
lods
cmpsl
jl
fwait
xchg
fcompl
mov
fimuls
or
dec
popf
insl
mov
mov
ret
leave
test
push
add
sub
loop
pop
mov
sub
mov
xchg
add
mov
out
jne
sahf
fimuls
repz
into
fdivrs
ret
and
ret
in
push
jo
fistps
jmp
mov
adc
jne
mov
dec
lret
add
cs
psubsw
test
call
sarl
inc
inc
xchg
mov
push
xor
mov
outsl
mov
pusha
rol
ret
fs
inc
ret
sub
stc
cs
js
push
jbe
jae
and
call
push
add
xchg
xor
movl
jmp
sub
jns
in
test
fistpl
lea
popa
mov
inc
scas
cmp
icebp
daa
outsl
jnp
mov
push
push
mov
sbb
pop
popaw
test
dec
nop
jne
cmp
arpl
push
xor
scas
xchg
fwait
pushf
push
jno
addl
and
jmp
fs
div
sub
cmp
enter
inc
aas
push
dec
mov
les
cmp
loopne
dec
scas
mov
pushf
or
mov
cmpsb
ficoml
cmp
scas
xor
jo
push
mov
push
push
cmp
dec
add
add
xchg
ds
test
and
ret
rcrl
test
ss
mov
rclb
sbb
adc
fidivl
dec
out
jne
push
inc
pop
pop
mov
pop
mov
cltd
clc
call
ljmp
jge
pop
mov
cmp
push
dec
fcomip
jae
sbb
cld
xor
push
xor
inc
les
inc
inc
popf
gs
push
shlb
stos
jl
movsl
ret
jbe
add
xlat
mov
and
xor
aam
imul
xor
mov
jg
dec
test
sbb
fistps
push
cmp
mov
popa
pop
es
cwtl
repnz
cwtl
sti
in
out
sub
rorl
andl
sub
jbe
adc
fists
aas
cli
pushf
mov
xchg
sub
cmp
xor
subb
add
out
add
pop
movsb
icebp
add
pushf
mov
loop
or
push
xor
fucomi
nop
xchg
shll
cmp
dec
scas
push
fadds
fwait
clc
inc
cltd
and
sub
stc
push
mov
aad
popf
fs
fnstsw
daa
imul
sub
jb
ja
pop
movsl
pop
hlt
fistps
jl
or
push
sub
pop
pop
fidivs
imul
inc
add
and
cltd
pop
ror
insl
cmc
pop
fildl
mov
aas
mov
mov
fstpl
adc
dec
scas
jmp
and
fisubl
pop
jecxz
and
in
xchg
std
add
pop
xor
mov
clc
xlat
and
in
jne
cmpsl
cmp
mov
mov
popa
scas
sbb
pop
and
call
jns
orl
or
xchg
ficoml
inc
mov
nop
jo
mov
mul
arpl
lea
fwait
in
pop
inc
xorb
pop
jp
loop
jo
dec
inc
hlt
leave
and
add
xor
jl
fucomp
imull
lcall
adc
cs
repz
and
mov
push
mov
out
fmul
adc
dec
or
ret
mov
out
pushf
mov
bound
xlat
sbb
repnz
xor
out
dec
xor
push
adc
mov
cmpsl
cld
xchg
mov
aaa
cltd
pop
jle
mov
js
mov
bound
rcll
xchg
adc
sub
pop
cmp
rol
add
mov
or
and
cmp
push
push
filds
push
lea
pop
pushf
ffree
add
jle
xchg
je
xchg
test
mov
enter
scas
test
jnp
mov
fcomps
jnp
dec
sbb
pop
add
cmp
sbbb
xor
lods
push
push
jecxz
dec
out
add
pop
inc
mov
lea
out
ds
mov
ficoms
inc
sbb
loope
out
pop
jae
inc
cmp
xchg
mov
xchg
and
out
mov
sti
lcall
mov
push
jno
sub
xchg
jnp
add
mov
mov
ret
jb
leave
adc
mov
fwait
mov
xor
jns
cs
test
sbb
mul
lcall
adc
fwait
sub
sub
int3
jnp
sbb
and
inc
push
in
cmp
ds
dec
imul
incb
negl
dec
add
xchg
test
mov
pop
dec
pushf
adc
jnp
ret
adc
add
add
add
in
je
push
xor
jmp
iret
outsl
ret
test
mov
ds
ret
pop
or
loop
mov
cmpl
jne
out
jo
stos
xlat
neg
cltd
adc
and
or
fst
ret
out
cmp
test
jnp
jecxz
lahf
cmp
rcr
or
mov
xor
sti
and
ljmp
xchg
das
cmpsb
jae
es
adc
lret
hlt
fwait
mov
sarb
sahf
outsl
jle
mov
jl
xchg
adc
repz
or
push
and
out
jg
aam
aam
test
xchg
aaa
or
incb
jb
test
xor
cmp
jmp
push
push
inc
stc
fidivs
shlb
jnp
or
cli
or
loopne
addl
scas
test
adc
jp
ret
fimull
dec
nop
mov
dec
stos
bound
fdivs
fs
push
push
push
lds
sub
mov
sahf
cli
movsb
adc
mov
xchg
popa
fadd
mov
dec
xchg
pushf
jecxz
cmpsb
loop
pop
jle
lods
jbe
cmpsl
in
pop
dec
test
icebp
mov
adc
dec
in
mov
aas
add
out
mov
mov
xchg
push
not
test
hlt
inc
leave
scas
in
sub
push
lods
bnd
fisttpl
notl
lods
fs
cld
or
sbb
pop
std
popf
or
push
dec
fs
jb
mov
pop
ja
pop
mov
dec
mov
mov
nop
loopne
outsb
scas
or
or
stos
dec
mov
daa
addb
lods
in
scas
jo
pop
mov
sub
sbb
aaa
sub
mov
lods
dec
sbb
test
jae
fisubrl
ljmp
arpl
cmp
mov
outsl
adc
xchg
jmp
imul
or
stc
adc
pop
sub
repnz
addr16
pop
popa
aam
xchg
out
cmp
and
sbb
cmpsl
pop
dec
jle
sbb
rorl
in
pop
out
adc
dec
cltd
inc
bswap
inc
mov
outsl
pop
and
jl
xchg
mov
cmp
cmp
sub
aad
repz
cmp
add
cmp
scas
rcrb
add
test
in
mov
in
cmc
cmc
jle
or
jae
outsb
lds
pop
sbb
push
pop
xor
mov
popf
xchg
fucomp
clc
mov
loopne
imul
mov
movsl
xchg
in
sub
js
xor
stc
jo
addr16
sahf
ds
push
test
dec
cwtl
mov
mov
pop
sbb
cs
mov
nop
leave
rcl
mov
push
xchg
push
mov
hlt
pop
pop
insl
pop
xor
push
int3
popa
or
stos
and
jecxz
loopne
mov
sbbb
sub
sub
mov
xchg
xchg
sbb
fs
jge
nop
popa
xor
mov
jecxz
scas
mov
adc
mov
ret
mov
popa
shrl
xchg
adc
rorl
divl
push
xchg
nop
stc
pop
movsb
cltd
mov
clc
xchg
add
push
jae
loope
aad
mov
insl
in
repnz
pop
sbb
mov
pop
test
nop
mov
test
loopne
jl
std
inc
and
or
pop
in
mov
mov
xor
push
mov
pop
inc
sbb
mov
sarl
aaa
or
std
push
pop
inc
daa
or
aad
in
jl
pop
push
push
adc
repz
sti
sbb
mov
add
out
dec
add
or
pop
ffreep
xchg
addb
iret
xchg
loope
xorl
pop
or
ret
dec
jne
insl
jbe
pusha
jnp
test
cmc
fsubrl
ret
movsb
xor
cmp
icebp
sbb
fs
xchg
mov
xchg
push
dec
adc
negb
xor
mov
pop
lock
imul
jle
loop
iret
inc
imul
icebp
test
sbb
fstpt
lods
js
pop
mov
shl
das
pop
jno
out
cmpl
ja
pop
das
clc
mov
dec
sahf
push
sbb
add
loop
mov
push
mov
rcr
push
movsl
mov
xor
sub
frstor
pop
pop
movsb
aas
mov
aad
cmpsl
fsub
rolb
aas
mov
ret
xchg
icebp
loopne
mov
adcb
sub
es
aad
insb
add
repz
push
mov
xor
cmp
push
push
cld
pop
and
mov
js
mov
test
out
popf
adc
sbb
roll
pop
fadd
jb
and
orl
notl
or
and
faddp
inc
cmp
dec
sti
adc
stos
push
es
cli
imul
xor
adc
mov
xchg
bound
and
mov
je
inc
cmp
lods
dec
hlt
inc
je
add
mov
jno
arpl
adc
sbb
mov
out
mov
nop
inc
mov
popa
add
fsub
insb
or
outsb
cmp
xchg
or
fisubrs
sbb
popf
hlt
pop
pop
popa
std
adcb
mov
and
mov
sbb
jo
pop
out
mov
push
fmuls
lret
mov
jmp
xor
add
ss
cmp
pop
mov
add
adc
inc
mov
lahf
idiv
daa
mov
loopne
ss
lahf
jmp
lds
cmp
mov
ret
loop
lcall
mov
dec
mov
and
fcomp
sub
nop
call
xor
pop
je
jns
jbe
mov
jp
lcall
or
jnp
cmp
add
push
int
mov
mov
into
out
mov
cli
jle
js
push
js
lahf
inc
fcmovb
mov
pop
mov
lea
pop
ja
out
aad
and
mov
pusha
in
or
mov
insl
scas
das
inc
add
notb
xchg
fwait
test
dec
es
loopne
sbb
lods
into
mov
jl
insl
add
add
icebp
adc
mov
jne
idiv
push
cmp
stc
arpl
xor
mov
test
pop
popf
mov
sbb
fwait
lcall
mov
xor
xchg
pop
pop
xchg
push
lcall
push
outsb
sbb
inc
pop
in
cmp
jp
dec
fsubs
add
sti
or
test
lahf
jle
or
or
push
xlat
in
mov
cmc
daa
xchg
fidivl
mov
pop
xor
xchg
je
adc
mov
cmpsb
in
std
xor
addr16
negb
and
mov
mov
iret
xchg
outsl
in
lods
jo
mov
lods
or
test
pop
arpl
and
adc
hlt
mov
pushf
and
dec
dec
call
inc
dec
int
cwtl
lea
xor
lock
clc
scas
lods
push
loopne
sub
stos
push
jle
rcrb
jge
cs
sti
sub
lods
sub
pop
cmpl
not
out
cs
test
xor
int
jmp
popa
mov
jns
pop
outsl
iret
rclb
cmp
loopne
imul
mov
outsb
cmp
and
inc
test
or
cmp
pop
adc
mov
gs
mov
call
fmuls
dec
xor
cmp
cmp
xor
idivb
fsts
pop
add
cs
das
ret
sub
cwtl
pop
sbb
rolb
mov
jns
cmp
hlt
in
push
mov
ljmp
call
inc
sub
jmp
push
sti
or
rclb
popa
pop
lcall
xchg
xchg
pop
lret
pop
push
ret
push
jge
lcall
mov
icebp
addb
mov
bound
jmp
mov
bound
mov
or
sbb
dec
adc
xor
add
and
pop
or
add
aad
mov
cmp
add
push
shll
or
aad
xor
add
push
jae
xor
inc
in
pop
std
push
cmp
xchg
xlat
cvtpi2ps
sarb
add
hlt
sub
ja
push
cmp
jg
ja
push
pop
outsl
and
mov
ret
or
jmp
cmp
stos
xchg
sub
scas
dec
clc
addr16
std
sbb
mov
xor
jl,pt
cmp
notb
icebp
pop
xchg
stc
fsubrs
test
push
popf
fdivl
push
add
out
push
jp
push
mov
push
mov
incb
lock
or
loopne
xchg
xchg
dec
or
mov
and
out
mov
push
sub
ficoml
sub
fcmovb
inc
xlat
mov
movb
jbe
push
push
adc
push
cld
mov
mov
rorb
fsubp
imulb
or
iret
mov
push
xchg
jne
cld
es
xchg
dec
sub
jmp
adc
xchg
mov
mov
mov
xlat
and
dec
inc
sbb
lahf
push
adc
test
cltd
lcall
mov
ja
sahf
adc
lahf
mov
ljmp
mov
lods
in
lcall
sbb
loope
push
push
cmp
sub
in
cld
sub
mov
sbb
addr16
cmpsl
pop
lods
jo
mov
xchg
mov
mov
push
inc
push
fst
lahf
cmpsb
dec
jmp
ltr
adc
mov
pop
in
push
cwtl
cltd
push
mov
push
jb
mov
cmovae
loop
jg
adcl
test
jnp
enter
push
popf
sbb
jl
jp
fcomps
pop
fdivl
jmp
pop
repz
ret
nop
lea
test
mov
data16
repz
mov
mov
ljmp
sarb
mov
xchg
mov
movsb
data16
out
sahf
call
or
mov
dec
insl
push
mov
repz
insb
inc
or
push
neg
jle
repz
jns
push
pushf
daa
push
mov
sub
add
mov
test
aaa
sbb
clc
or
shll
inc
cmp
xor
inc
ja
add
insl
push
fcmove
repnz
in
cwtl
fistpl
push
cmp
rcl
and
bound
fldt
inc
sub
dec
mov
pop
cwtl
popf
push
xchg
lock
or
sub
stc
outsb
lret
and
fstp
jns
push
test
mov
xorb
shrl
mov
shrl
mov
xor
mov
cmp
mov
cmp
mov
and
aaa
mov
mov
jmp
inc
jo
pop
add
lea
sbb
xchg
push
sbb
and
jl
les
inc
xlat
mov
test
imul
inc
pusha
sub
mov
hlt
dec
ffree
push
ret
cmpsl
dec
jle
pop
cwtl
push
out
mov
and
xlat
mov
or
repnz
test
push
lock
push
mov
xlat
cwtl
adc
push
cmp
cmp
scas
pop
das
shl
lea
push
std
adc
mov
sbb
xor
jl
sub
mov
lock
pop
adc
js
fwait
mov
sub
imul
add
sub
xor
xchg
adc
stos
loopne
sub
xchg
insb
insl
mov
add
int
in
xorb
adc
sbb
test
cmp
lea
cmp
arpl
lea
dec
clc
and
fwait
cmc
cmpsb
fdivrs
lea
xorl
rcrl
outsb
es
data16
and
mov
outsl
sbb
shl
cmp
notl
std
rcrb
mov
cld
inc
outsb
adc
cmp
inc
test
test
and
hlt
dec
mov
mov
mov
shrb
and
negl
aas
xor
outsl
mov
sub
pushf
cmp
and
out
and
or
mov
sbb
push
cmpsb
mov
mov
push
inc
xchg
push
call
out
push
xchg
out
out
xlat
and
sub
stc
and
in
movsb
mov
adc
dec
ljmp
add
sbb
call
push
inc
push
or
fdivs
outsl
repz
dec
cmpsb
iret
in
and
cmp
push
or
mov
dec
inc
gs
popf
jle
fstps
cmpsl
js
jg
movsb
adcb
je
pop
sqrtps
lods
scas
cmp
nop
add
or
jne
jnp
sub
xchg
mov
xchg
ljmp
adc
jecxz
push
xchg
mov
jo
adc
inc
sarl
stos
outsl
sarb
xchg
xlat
mov
and
out
dec
add
jno
inc
inc
push
push
add
jge
popf
adc
in
clc
mov
xor
inc
loopne
sbb
mov
push
dec
imul
cmp
mov
insl
xor
pop
loopne
mov
xor
mov
jmp
mov
in
fbstp
sti
push
insl
mov
fcomps
sbb
fdivs
sbb
fs
cmpsl
enter
filds
xchg
mov
nop
ret
mov
sub
out
cmp
and
call
sbb
fucom
push
xchg
daa
rcr
cmp
cmp
pusha
xchg
fstpl
push
jmp
xor
scas
mov
jo
adc
test
aaa
add
mov
sbb
insb
jbe
xsavec
push
js
push
lahf
fs
jge
in
jle
mov
or
ja
pop
jp
das
push
in
neg
lcall
xchg
mov
jno
test
mov
xor
pop
stos
or
cmp
lret
mov
mov
sub
rol
out
mov
fs
mov
aas
cmp
xchg
and
xchg
push
bound
mov
pop
push
lds
mov
mov
adc
ficoms
cld
in
dec
xlat
jmp
and
leave
jmp
or
cmp
hlt
pop
daa
jb
mov
roll
lock
mov
push
mov
or
cld
call
sahf
push
and
ret
push
or
js
scas
pop
fisubl
loop
std
es
setge
into
cli
mov
hlt
subl
mov
clc
das
pop
pop
enter
stos
mov
adc
cmpsb
jnp
js
sub
outsb
ss
jbe
push
sbb
test
pusha
test
insb
leave
dec
add
pop
lret
pop
mov
xchg
sub
mov
and
popa
xor
dec
pop
xor
movsb
loope
sbb
in
mov
int3
inc
cmp
jnp
rclb
in
add
out
sahf
cmp
xchg
sbb
fiadds
push
cltd
in
mov
cs
jl
pushf
pop
sbb
xor
negb
clc
add
insb
pop
sub
mov
mov
lcall
push
ret
aad
sti
sbb
out
sti
imul
xchg
cltd
xor
divl
mov
or
adc
xchg
add
mov
lods
jno
jae
icebp
daa
fnstcw
add
jne
cmc
dec
jnp
dec
add
movsb
fidivrl
imul
movsb
sbbb
pop
icebp
fstps
xor
jne
mov
aaa
imulb
lods
mov
stos
mov
dec
push
jp
cmpsl
pop
sbb
and
test
dec
cmp
cmp
ja
cmpb
jl
xor
imul
push
fdivr
adc
jecxz
stos
sbb
stc
pusha
test
repz
push
int
sub
mov
inc
jl
adc
mov
movsl
mov
cmp
icebp
pop
push
int
add
dec
shr
pop
scas
pop
fmuls
inc
xorl
test
pop
loop
cli
or
sarb
pop
scas
xor
shll
popf
add
dec
add
adc
pop
xor
add
fmuls
pop
dec
and
push
jmp
sbb
and
dec
in
xchg
lock
aas
mov
sbb
test
lods
loopne
mov
pop
mov
scas
jae
xor
xchg
push
les
push
push
mov
pop
sub
sbb
xchg
jne
or
dec
lcall
dec
sbb
push
add
inc
sub
push
add
clc
mov
bound
jmp
or
cli
test
ljmp
pop
xchg
mov
leave
dec
xor
in
inc
push
dec
add
dec
in
lods
aad
scas
mov
add
mov
push
push
insl
xchg
std
pop
mov
aas
hlt
fimuls
jns
out
cs
sbb
or
dec
xchg
add
jmp
aaa
add
scas
test
jb
xchg
out
sub
icebp
lret
into
xchg
sub
idiv
lret
imull
mov
outsb
xorb
dec
dec
cld
js
mov
lahf
lret
fmuls
adc
mov
mov
cmp
sbb
mov
mov
dec
popf
pop
push
jns
lcall
mov
cld
orl
xchg
imul
xchg
fstps
pop
pop
inc
test
lahf
fdivrp
jmp
aaa
cmp
jno
int3
ds
jnp
stc
pop
mov
mov
mov
sbb
shrl
mov
add
sub
cmp
or
xchg
jg
jb
mov
subb
and
shrl
mov
or
adc
imul
idivl
popa
cld
fcmovnu
call
fwait
and
insl
push
mov
mov
xchg
adc
xchg
cmp
lea
call
popa
popa
out
pop
mov
dec
push
lds
dec
mov
pop
sbbb
lds
lret
icebp
dec
and
into
mov
stos
pop
daa
insb
xor
or
in
pop
jp
je
int3
cmp
mov
cmp
xlat
sbb
ret
add
dec
inc
sbb
jg
rorb
xor
jl
sub
outsl
out
ljmp
push
push
insl
xchg
mov
cmpsl
sub
jae
icebp
sbb
mov
or
push
push
cmp
arpl
mov
sti
mov
dec
fistpl
mov
sbb
sbb
sarl
aad
push
or
lea
pop
mov
sub
out
jmp
je
push
sbb
test
movsb
mov
xchg
and
mov
cli
add
subl
imul
mov
mov
enter
daa
sub
movsb
scas
mov
dec
arpl
call
or
cmc
mov
sub
inc
sarb
out
pop
pop
xchg
fidivs
cltd
mov
mov
cmp
adc
push
adc
and
lcall
popf
mov
jg
imulb
sbb
dec
mov
in
ja
adc
lods
sbb
lret
inc
mov
fs
pop
xchg
or
mov
mov
mov
movsl
sub
add
pushl
inc
scas
xor
xorl
loop
out
inc
lock
and
and
xchg
test
iret
imul
mov
pushf
in
adc
xchg
mov
or
test
insl
inc
sub
and
inc
cmp
xchg
insl
clc
outsb
stos
inc
fwait
mov
or
fcoms
push
out
das
push
cmp
daa
imul
sti
sbb
enter
mov
mov
daa
outsb
testl
mov
xor
push
xor
mov
pop
lcall
jmp
lcall
pop
rcrb
insb
bound
jl
mov
sbb
and
cmp
jno
pusha
les
test
out
mov
push
arpl
mov
outsb
bound
xor
xor
test
mov
or
outsb
cmp
push
sar
outsb
xor
cmc
jns
addl
xchg
adc
dec
mov
mov
adc
push
scas
fcoml
lret
push
jbe
clc
sti
ficompl
push
in
fcmovnbe
out
jge
or
xlat
bound
orb
test
shlb
jnp
stc
arpl
xchg
jg
test
sub
pop
xor
std
mov
fdivrs
mov
ja
mov
push
nop
stc
dec
xor
pushf
shll
dec
int3
sarl
leave
popf
pop
push
and
das
stos
idivl
test
in
imul
scas
loope
imul
lods
rclb
lods
sub
push
popa
or
xor
cmpsl
jmp
ljmp
cld
pusha
cmpsl
or
std
mov
pop
xor
or
inc
and
adc
add
insb
inc
lret
dec
or
xchg
scas
or
imul
dec
stos
or
ss
rcrb
jns
leave
lret
bound
pop
sbb
imul
mov
add
jne
add
sub
pop
push
fcompl
fstl
push
dec
aaa
mov
cmp
aam
pop
mov
push
mov
xor
mov
ds
imul
mov
ret
sbb
daa
jmp
xchg
push
xchg
dec
jno
dec
pop
lahf
daa
mov
push
xchg
std
jnp
push
insb
mov
addl
push
mov
cs
je
push
test
push
push
mov
es
shlb
lods
mov
sbb
lcall
jae
mov
call
mov
push
addb
push
jno
aaa
jne
cmp
push
pop
sub
mov
fnstsw
inc
pop
sbbb
repz
addr16
scas
ret
popf
sbb
imul
lret
aad
jbe
sti
data16
mov
fimuls
push
push
popf
jl
rcl
and
mov
fiaddl
mov
cld
adc
sbb
loopne
sbb
faddp
push
mov
adc
stos
dec
push
fbld
sub
lods
je
notb
test
sbbl
je
stos
add
ja
sbb
lret
cmpsb
pushf
insb
add
mov
sub
sbb
loope
aaa
push
jp
sbb
or
cmp
int
das
into
or
repnz
js
stos
cmp
mov
xchg
sbb
xchg
lds
xchg
fmul
adc
dec
jbe
call
xchg
jne
int
pop
mov
add
fwait
mov
stos
rep
mov
push
loope
insb
dec
test
stc
scas
mov
push
lcall
rcll
jg
mov
add
shlb
fildl
jl
mov
fldcw
outsl
pop
aas
rcll
pop
push
pop
fcmovnu
cmp
leave
lar
mov
pop
jnp
out
cld
test
insl
in
shlb
popf
cs
fldl
xchg
jmp
cmc
stos
call
inc
or
add
int3
mov
mov
xchg
and
adc
jbe
and
ds
pop
or
cwtl
mov
or
jle
inc
lds
daa
sub
clc
fs
pop
jae
or
push
xor
mov
dec
test
pop
dec
gs
rcrl
fcmovne
ficompl
lcall
xor
ret
jg
ja
xchg
inc
inc
shr
jp
test
sbb
sub
cmp
xchg
mov
mov
xlat
lcall
xchg
dec
pop
xchg
mov
xchg
je
cld
and
mov
imul
push
in
in
xor
xchg
and
lods
adc
xor
out
das
into
mov
mov
pop
jg
cmpsl
inc
push
dec
adc
dec
dec
ja
xchg
clc
movsl
rcrl
jle
pop
int
sub
sti
xor
aad
pop
push
in
imul
cltd
test
mov
call
cmpl
dec
add
ljmp
jmp
pop
and
jle
scas
xchg
xchg
dec
jl
negb
in
and
xchg
sti
cld
mov
adc
add
ret
push
cmpl
aad
dec
dec
or
das
faddl
shlb
push
jns
mov
out
sub
dec
in
push
sub
jmp
jnp
shlb
cmp
xor
mov
loope
jge
jnp
data16
cltd
mov
mov
int
push
inc
scas
push
and
ljmp
xor
mov
dec
jae
scas
adc
hlt
lock
pushf
pusha
push
cmpsb
xor
in
scas
in
xlat
mov
mov
arpl
das
push
call
mov
jns
fstp
icebp
mov
loopne
pop
cmp
sub
bound
scas
lds
inc
ds
mov
jne
sub
je
insb
lods
pop
adc
add
out
mov
mov
scas
popf
sahf
xorl
push
push
std
lret
test
jb
mov
mov
sub
ljmp
lods
ret
sbb
lret
mov
lds
jno
mov
xchg
incb
mov
xor
pop
inc
int
mov
adc
int
cmpsl
fistpll
jle
jmp
lret
mov
into
mov
mov
jmp
jge
jne
xchg
test
cmp
and
xchg
xor
mov
imul
data16
or
ret
and
mov
leave
sbb
nop
pop
mov
mov
imul
lcall
cltd
mov
sub
push
clc
ret
mov
movb
decl
dec
or
push
fstenv
mov
mov
test
out
push
pop
insl
popa
lods
sahf
roll
jb
ret
inc
popf
mov
cmp
push
pop
ss
dec
dec
and
or
addr16
mov
outsl
dec
pop
push
push
lea
add
out
sarl
mov
ljmp
ja
mov
ja
push
cld
push
pop
aam
imul
xchg
and
enter
daa
ss
mov
movsb
popa
popa
lods
cmpsb
js
call
in
mov
sti
jp
mov
in
into
enter
mov
loopne
in
sbb
cmp
mov
xchg
xchg
loop
push
imull
into
ja
pop
mov
push
in
fnstcw
lds
out
and
repnz
push
pop
imul
mov
cmp
add
stos
ds
mov
int3
adc
loope
xor
inc
ficompl
mov
push
lret
push
pop
sub
adc
enter
and
mov
sbb
sbb
xor
and
sbb
mov
xor
imul
pop
sar
and
cwtl
ljmp
stc
mov
dec
inc
cmp
xor
decb
pop
xchg
adc
push
ds
lods
sbb
in
dec
push
push
roll
in
push
lods
call
cmp
adc
repnz
ss
xchg
inc
sti
fs
inc
dec
nop
inc
xor
or
js
fwait
ljmp
stos
xor
push
or
jmp
clc
xchg
mov
pop
pusha
test
xor
out
shlb
pop
nop
or
aad
push
stos
cwtl
sub
mov
or
mov
loopne
cmc
mov
dec
lcall
inc
push
shll
test
push
mull
mov
loopne
and
mov
adc
jge
pop
push
daa
fidivs
xor
cmpsb
pop
fs
lret
jno
test
fnsetpm(287
subl
push
stos
push
jecxz
add
jle
out
mov
fdivr
pop
or
int
sbb
test
cld
push
repnz
fnsave
scas
xchg
js
adc
cmpsl
xor
add
data16
test
xlat
dec
int3
sbb
and
std
lret
push
ret
add
movsb
rorl
mov
add
rolb
dec
jecxz
pushl
xor
add
pop
ja
cmp
call
pusha
aas
inc
cmpsl
std
mov
imul
ret
xchg
mov
in
mov
imul
rcrl
fmul
push
sub
cmpsl
into
cmp
ret
mov
mov
arpl
hlt
push
inc
test
push
popf
and
dec
push
subl
addb
mov
into
call
fnclex
pop
addl
cmc
cmp
nop
lock
imul
inc
sahf
jmp
sbb
sbb
testb
shrl
jne
mov
fstpt
rol
add
fisttpll
jb
mov
out
pop
cld
aas
cs
lods
jb
mov
fwait
push
into
sub
jle
sub
inc
mov
aam
hlt
int
mov
dec
add
int3
aad
push
cmp
jl
lds
cld
sbb
or
aam
mov
icebp
out
js
push
pop
in
mov
inc
lahf
push
add
dec
mov
pop
sbb
or
daa
test
pop
xor
mov
loop
push
and
ret
inc
and
cmp
je
push
cld
int3
adc
push
dec
add
pop
mov
shrb
roll
mov
lds
xchg
es
jne
and
pop
inc
push
into
pop
cwtl
xchg
inc
add
lret
or
aaa
js
rclb
and
mov
sbb
pop
inc
lock
out
icebp
sub
sbb
xlat
jbe
stos
lods
lea
ficoms
sub
dec
ljmp
dec
int3
inc
pop
cmp
push
mov
imul
lcall
iret
push
xchg
sub
js
popf
sub
pusha
jle
mov
xlat
popf
or
push
cmpsb
test
cwtl
and
or
mov
and
out
nop
iret
mov
mov
stc
aam
mov
repz
pop
loope
mov
std
fdivr
xor
mov
sbb
xor
fbstp
adc
jmp
add
test
arpl
ret
jnp
divl
xor
and
inc
gs
add
xchg
adc
loopne
mov
test
lods
ror
nop
adc
push
and
movsl
dec
int3
lds
sbb
subl
inc
pop
clc
push
dec
dec
stos
push
fwait
mov
mov
sub
adc
jbe
and
into
pop
mov
int
inc
mov
sbb
lea
mov
mov
insl
std
or
jno
and
sti
inc
xchg
push
into
hlt
scas
out
mov
cmpsl
sarl
sbb
js
insb
movsl
sahf
pop
mov
jg
sbb
dec
loop
sub
cmp
xchg
pop
imul
imul
sbb
push
xchg
stos
xor
xor
je
sbb
test
push
cmc
int3
add
push
out
aas
xlat
sbb
push
rep
sbb
cltd
jge
sti
pop
ljmp
dec
push
out
ret
cs
sarl
pusha
cltd
pop
mov
adc
nop
add
lods
lods
mov
lods
pop
or
push
cmc
ret
and
insb
add
lret
inc
or
or
lods
xchg
sbb
mov
sbb
lds
jne
ss
sbb
dec
fsubl
push
in
sub
xlat
mov
insb
cmpl
lods
jbe
mov
scas
outsb
in
jg
sti
mov
imul
mov
loopne
jg
pop
pop
jle
pop
outsl
sub
lret
hlt
adc
jmp
lods
mov
imul
stc
ss
mov
rcr
mov
xorl
push
sub
pop
mov
and
xchg
mov
out
aam
cwtl
mov
jp
into
pusha
or
adc
mov
in
sub
addr16
icebp
stc
jne
aas
or
pop
fmull
roll
push
mov
jge
divb
lds
mov
ss
out
cmp
push
int3
mov
fcomps
cmp
data16
pop
lea
push
insl
stos
std
push
mov
repz
idivl
movl
jns
icebp
and
jmp
leave
cs
lods
dec
mov
test
aas
lods
mov
outsl
nop
dec
adc
inc
xchg
aaa
mov
call
mov
dec
adcb
ja
clc
dec
out
sbb
cmp
enter
cmp
lahf
insb
enter
add
lcall
and
jae
mov
jnp
out
fwait
loop
xor
dec
adc
lahf
sub
inc
cmp
rcrl
aas
iret
mov
call
and
stc
cmp
lock
or
imul
mov
dec
shr
xchg
scas
insb
movsl
jnp
inc
mov
rcrl
dec
sub
sub
mov
loop
rcrl
bound
sbb
mov
push
cwtl
call
push
fmull
mov
jb
out
int3
mov
and
jp
push
cmp
clc
push
hlt
xor
pushf
loopne
mov
clc
cltd
sbbb
subl
adc
leave
call
jnp
aam
mov
pushf
xor
rcrb
pop
and
inc
add
hlt
mov
cmp
sub
inc
and
fmulp
and
xchg
loopne
or
adc
scas
ja
adc
mov
icebp
sti
cmpsb
repnz
jb
pop
out
mov
les
lock
jl
inc
lds
sbb
scas
cld
push
mov
or
cli
add
adc
and
mov
jae
fistps
fisttpll
call
imul
stos
lods
ss
pop
es
cmp
add
dec
jnp
sub
sti
clc
shlb
jb
sub
aaa
outsl
and
outsb
and
push
jge
xchg
sbb
popl
loop
rcrb
test
je
in
addr16
jecxz
or
pop
mov
mov
xchg
shll
ret
sub
inc
addr16
jmp
xchg
negl
sbb
lret
stos
gs
pop
int3
lods
subl
or
xchg
push
stos
add
in
push
movsl
mov
bound
lds
call
in
mov
mov
jp
inc
or
pop
fmuls
scas
addr16
lret
lods
in
xor
xor
pusha
dec
sub
lret
mov
mov
or
xchg
out
xor
repz
xor
lods
xchg
mov
inc
mov
ret
test
ja
scas
jmp
mov
mov
lcall
and
cmp
xor
fiaddl
in
fdivs
movsl
aam
stos
stos
lods
jmp
js
arpl
aaa
fmulp
cmc
mov
adc
pop
mov
je
mov
inc
xchg
out
jle
mov
or
jle
pop
adc
pop
xor
mov
inc
mov
in
jno
jmp
cmp
adc
and
and
sub
mov
push
enter
mov
push
xchg
in
pusha
xor
cmp
mov
push
mov
push
dec
hlt
xor
or
fidivrl
inc
sbb
insb
mov
out
dec
mov
add
add
call
mov
push
sub
mov
push
dec
rcrb
fmull
ror
imul
mov
xor
lea
outsl
jg
in
lock
ja
jmp
sbb
sub
test
out
mov
ja
cmpsb
retw
mov
sub
addl
pop
lds
mov
add
add
rorl
jno
aaa
pop
cld
jb
push
or
adc
fadd
cli
lcall
or
fs
ljmp
xchg
xor
sub
sbb
test
adc
sub
mov
jecxz
push
dec
scas
lahf
xor
inc
mov
ss
test
xacquire
mov
and
pop
add
popa
popf
dec
inc
jnp
shl
outsl
mov
outsl
inc
jge
bound
mov
xor
imul
dec
mov
in
sti
popa
in
cs
ret
sub
fwait
and
fcomps
addr16
adc
inc
dec
pusha
movsb
fdiv
daa
jmp
popf
mov
lods
and
aaa
stos
sub
mov
and
out
adcb
and
push
scas
dec
lods
add
aam
push
loope
pop
mov
mov
clc
or
and
cmova
adc
ja
pop
test
push
xchg
inc
dec
and
aaa
cmpsl
push
nop
dec
leave
mov
rolb
cmp
xor
cmp
mov
dec
cld
pop
push
jo
add
pushf
cltd
lock
or
inc
pop
movsl
lea
xor
orl
rcrb
push
arpl
mov
and
rolb
or
out
mov
add
sbb
sbb
add
dec
dec
mov
mov
xor
rcl
stos
ret
inc
scas
xchg
cmp
dec
sub
lods
jmp
add
stc
xchg
daa
repz
push
repz
jl
dec
or
fnstsw
inc
fcoml
cli
mov
cmp
ja
jnp
mov
mov
push
and
pop
stc
andb
mov
ljmp
loope
movsl
cmp
jae
jne
test
mov
jns
mov
fwait
in
and
iret
xor
cli
dec
xchg
or
pop
and
cmp
mov
stos
imul
pop
inc
jle
xor
sub
mov
xchg
or
mov
test
cmp
xor
aam
or
addl
xchg
in
sahf
sub
cmp
enter
xor
out
outsl
out
in
insb
loop
bound
sti
ficomps
jbe
and
dec
aam
pop
arpl
inc
or
or
aas
add
xor
shr
aam
xor
mov
mov
ret
jb
pop
outsb
out
iret
inc
fbld
mov
mov
test
sahf
nop
stos
cmp
ds
ret
xchg
outsb
mov
rcl
pop
sub
cld
sti
je
dec
ret
xor
lret
mov
inc
and
rcrb
scas
insl
lock
in
lret
cwtl
xlat
pop
popf
pop
call
clc
in
push
dec
orl
cwtl
push
testb
pop
lods
orl
movsb
xchg
push
insb
test
ss
addb
mov
jo
and
adc
cmpsl
ds
pop
jmp
xchg
fsubrl
addr16
testb
out
lock
cmp
push
cmp
mov
add
pop
sbb
mov
call
sbb
out
xor
sbb
addr16
dec
mov
lds
jp
leave
inc
or
adc
test
inc
dec
mov
xor
ljmp
cld
cmp
movsb
jecxz
fs
aaa
cli
icebp
sub
pop
imul
mov
jbe
mov
ficompl
push
fadds
enter
pop
xchg
pop
or
insl
and
mov
pop
and
cltd
adc
lea
pop
and
cld
inc
xchg
shrb
test
and
aam
jo
add
jae
stos
mov
jnp
cmp
test
add
movsb
sub
int3
outsb
adc
mov
pop
test
sub
cmp
nop
pop
das
das
xchg
arpl
jge
es
pop
xchg
les
jno
sahf
lret
jecxz
sub
dec
rclb
xor
out
je
push
xor
jnp
mull
add
mov
cmp
cmp
test
test
mov
sub
pop
cmp
sti
sub
fstpt
hlt
sub
inc
mov
mov
xor
mov
hlt
or
aas
xor
lcall
adc
cmp
out
and
jmp
mov
sarb
daa
mov
jecxz
repnz
ud0
push
inc
inc
jo
inc
mov
inc
shl
mov
and
mov
rolb
adcl
push
outsb
loop
out
sarl
inc
push
adc
push
xchg
es
jae
inc
flds
sbbb
mov
lahf
dec
sti
inc
ljmp
cmp
into
pushf
insl
inc
gs
arpl
inc
out
jno
fidivrs
inc
je
mov
and
mov
adc
ja
imul
jp
push
fwait
mov
add
push
push
in
adc
adc
add
xchg
out
int3
cmp
inc
into
lods
scas
clc
pop
insb
daa
fisubs
sbb
dec
and
test
push
xor
sbb
stos
pop
mov
xchg
loope
mov
pop
pop
and
and
xchg
mov
sub
xchg
and
pop
movsb
mov
sbb
mov
lock
scas
mov
leave
xor
jp
push
es
ret
xchg
loopne
ret
stc
mov
fnstsw
sub
in
fisubrs
adc
aas
jb
sub
push
cmp
sub
or
xor
mov
or
ss
outsb
mov
fwait
xchg
das
in
loop
shrl
dec
data16
rcl
in
lds
addr16
icebp
inc
rcl
or
inc
ja
xchg
sub
pop
jbe
cltd
jno
dec
pop
xor
mov
sub
sub
dec
mov
std
test
mov
lahf
jp
icebp
and
sbbb
jo
cmc
clc
pop
out
xor
inc
mov
push
sahf
jp
and
out
jb
xchg
add
xchg
imul
push
sub
fnsave
shrb
dec
cmp
adc
cmp
outsb
cmp
ss
add
popf
mov
sti
push
cmp
mov
rclb
int
nop
jmp
repnz
outsl
pop
add
or
rcl
pop
lret
int3
push
jnp
mov
in
cmp
insl
cmp
shrb
flds
sbb
les
in
jmp
imul
lahf
out
or
inc
push
in
mov
cmp
sti
xor
or
sbb
jp
fidivrl
add
or
mov
scas
das
mov
push
sahf
ds
cmc
aas
mov
xchg
call
enter
es
das
mov
xchg
add
nop
xchg
outsl
pushf
outsl
pop
inc
test
cmp
jp
mov
cmpsl
mov
stc
xchg
jl
daa
mov
jns
push
xchg
pop
mov
scas
mov
ficoms
cltd
push
inc
into
sub
pop
dec
jnp
sub
movsl
pop
imul
hlt
xlat
mov
dec
and
les
mov
mov
not
stc
and
dec
in
jno
out
in
mov
push
sub
cmp
fisttpl
or
hlt
inc
enter
or
mov
cmp
jge
outsl
test
sub
stos
mov
sub
pop
ds
jmp
stos
or
or
movsl
into
lds
add
sub
icebp
pop
bound
popa
popf
ljmp
sub
lock
inc
pop
test
ret
ret
pop
xlat
ret
stos
sbb
icebp
xchg
cs
fwait
pop
mov
inc
or
insb
rcrb
xor
xor
sub
jp
testb
sbb
adc
mov
das
sbb
je
inc
aad
mov
mov
sbb
xchg
out
dec
fcoms
mov
or
lods
repz
inc
dec
mov
lds
dec
int3
xchg
ret
sub
icebp
out
outsb
or
sbbl
sbb
cmpsb
sub
add
mov
pushf
push
adc
das
mov
shll
mov
leave
stos
push
inc
or
mov
rcll
jmp
lea
or
mov
jo
out
inc
in
push
ret
and
cmpl
je
cmp
int3
or
pop
stos
in
aam
jecxz
push
mov
pushl
jle
or
mov
loop
movsl
in
loop
pop
sub
lret
lods
lahf
sub
inc
sub
stos
call
into
push
jnp
das
lods
and
sbb
fsubrp
test
out
mov
out
xchg
mov
cmp
dec
fsubs
das
out
and
and
jbe,pt
sub
jg
mov
mov
lret
xor
and
xor
jno
mov
xor
mov
add
xchg
xchg
pop
sub
jns
in
xor
adcl
mov
mov
add
les
cmp
xor
xchg
fcomps
jg
in
insb
and
cmc
inc
jne
dec
pop
or
sub
cwtl
fisubl
lcall
ret
fistps
into
xor
loop
push
mov
jp
lret
jecxz
mov
fldl
testb
or
loopne
ljmp
pusha
or
leave
xlat
add
int
jb
sahf
mov
aas
dec
mov
sbb
dec
mov
sbb
icebp
fs
cmpsl
loope
lcall
enter
cmp
and
orl
imul
mov
sti
jge
stos
in
mov
scas
in
cltd
in
ds
arpl
mov
pop
xchg
inc
cld
cmp
sidtl
mov
loopne
push
imul
xlat
mov
sbb
pop
lret
fdivs
hlt
aam
and
sbb
push
push
and
lock
mov
pop
xchg
cmpsb
sti
and
inc
xor
sub
push
jp
sub
ret
lret
test
das
xor
mov
pop
pop
push
xor
mov
and
inc
outsl
daa
adc
add
or
cmp
cmp
icebp
mov
add
mov
push
insb
push
stc
mov
outsb
inc
mov
mov
insb
aad
inc
lds
pushf
movsb
test
cmpsb
pusha
mov
xchg
fadds
dec
jo
bnd
test
jns
xorb
inc
xchg
rcrb
push
xchg
sbb
fsubr
mov
ds
clc
push
jbe
sbb
push
les
mov
inc
les
add
mov
xor
arpl
sbb
xchg
insl
mov
cmp
icebp
push
daa
daa
dec
dec
cwtl
sahf
sbb
cs
mov
sti
xchg
mov
sbb
scas
scas
into
pop
pop
xchg
dec
adcl
and
xchg
ljmp
icebp
and
out
cmp
rol
aad
ret
xlat
out
lret
cmpb
push
mov
mov
mov
divl
jae
adcl
rolb
dec
mov
jecxz
push
mov
in
shrb
mov
mov
int3
mov
cmpl
pop
push
data16
loop
loop
fcompl
xchg
fstpt
push
xor
out
movsb
sahf
rclb
repnz
push
lock
ljmp
jp
mov
daa
sarb
inc
insb
or
jae
ret
sbb
or
int3
mov
mov
nop
push
jnp
imul
inc
sub
je
pop
scas
scas
push
inc
mov
xchg
stc
or
pusha
push
stc
std
add
test
push
inc
pop
cmp
add
cltd
lret
das
shlb
mov
mov
jle
inc
jb
test
inc
in
push
and
ja
je
test
push
jle
mov
pop
push
inc
cmp
lcall
cmpsl
and
enter
xchg
push
pop
loop
add
inc
cli
daa
aaa
xchg
adc
repz
and
imul
jne
cmp
mov
out
adc
repz
mov
inc
insl
ret
cltd
popf
pop
push
icebp
dec
leave
arpl
cmpsb
stos
fmulp
pop
mov
out
dec
ss
dec
sbb
fwait
cwtl
lcall
repz
test
outsb
xchg
mov
lock
ret
gs
lods
dec
ljmp
mov
pop
xor
mov
mov
jmp
jg
xchg
in
divl
mov
or
xor
mov
rcl
push
mov
movsl
daa
mov
xchg
jne
orl
jae
lock
leave
lcall
xchg
int3
outsl
adc
cmp
cltd
or
sti
sar
sbb
or
jle
xchg
std
int
mov
mov
sub
sahf
jecxz
arpl
pusha
in
fnstenv
outsb
push
xchg
fcmovnbe
in
daa
insl
test
orl
xchg
push
sbb
fdivrl
mov
mov
push
jo
inc
sbb
sti
pop
push
lcall
push
mull
adc
jnp
out
or
or
fwait
test
sbbb
sbb
jmp
sbb
jnp
inc
addr16
pusha
daa
lahf
lahf
arpl
out
push
dec
sbb
inc
mov
and
lods
add
and
pushf
popf
add
mov
push
xchg
dec
pop
jge
pushf
pusha
adc
cld
pop
jne
mov
bound
pop
jne
fimull
daa
xlat
adc
ret
mov
aas
pop
daa
pop
xor
stos
adc
and
cmp
cltd
leave
orl
scas
pusha
or
cmp
add
subl
aas
or
sub
cmp
hlt
sbb
lds
or
ffreep
adc
mov
or
xor
dec
xor
push
jge
js
jle
pop
lret
xchg
inc
sahf
pop
adcl
insl
jnp
fstpl
lock
sti
je
push
mov
cltd
aad
inc
pop
mov
in
adc
dec
out
sub
divl
mov
in
movsb
add
push
xacquire
scas
mov
pop
in
dec
dec
mov
loope
inc
jb
push
jmp
adc
jo
lods
insb
idivl
add
pop
imul
xchg
stc
xchg
sbb
or
mov
ret
add
icebp
sbb
repnz
js
and
roll
rcrl
add
and
sub
mov
jno
xor
in
mov
adc
popa
popl
add
in
cmp
sub
rol
into
add
xor
xchg
cltd
mov
movsb
jb
stos
pop
xor
pop
dec
mov
jp,pt
stc
jb
in
or
je
rorb
loopne
iret
test
adc
xchg
jg
jl
movsb
aad
fldl
andb
arpl
cmp
lods
mov
jecxz
test
jecxz
cmpsl
dec
lods
pop
std
pushl
and
aam
push
ss
or
push
push
pop
lods
gs
out
lea
lret
repnz
xor
dec
out
les
cmp
cmc
popa
mov
vpunpckhwd
dec
fstpl
mov
or
pop
mov
push
movsl
push
inc
cli
fs
jne
sbb
lret
lcall
sbb
add
jecxz
add
fmuls
push
adc
mov
movsb
push
in
icebp
stos
xchg
xor
adc
fldt
rcrl
fbstp
mov
in
adc
jp
mov
xor
cmp
add
mov
jp
aas
cmp
incb
insb
lods
loope
leave
mov
cwtl
out
xorb
add
jno
jge
cmpsb
and
cmp
stos
adc
add
or
jns
jb
mov
and
aam
insb
xchg
aad
pop
or
dec
push
shr
rclb
test
jecxz
push
or
xor
push
sub
push
iret
ret
adc
stc
out
sub
ret
or
inc
hlt
add
out
inc
dec
ja
movsl
pop
int3
xchg
js
mov
and
xchg
pop
mov
xor
and
sub
lods
cmp
je
jl
inc
xchg
push
push
xchg
imul
sbb
push
shrb
call
icebp
push
fdivrl
cmp
mov
cmp
aam
adc
sbb
out
in
push
insl
adc
jge
std
add
sbb
movsb
mov
loopne
and
incb
lcall
sub
push
add
and
mov
mov
rcr
js
dec
pop
lret
leave
fisttpll
pop
fwait
and
int3
xor
aad
sbb
cmp
mov
inc
or
cli
mov
or
mov
bound
xlat
xchg
flds
cmp
xor
inc
cli
dec
mov
mov
cli
cltd
movsb
pop
xor
jp
adc
rcll
push
xchg
movsl
lock
aas
lock
jge
push
in
add
pusha
pusha
cmpsl
lret
mov
add
adc
stos
sub
mov
test
mov
movsb
xor
ds
or
testb
cmpsl
pusha
xor
fsts
les
jge
mov
xor
bound
enter
xchg
and
sub
aam
sub
xor
mov
inc
or
xorl
and
adc
sub
dec
stos
lahf
mov
ljmp
and
push
fs
ds
or
leave
dec
pop
add
aas
dec
jb
ret
ret
imul
pop
or
and
inc
gs
popf
in
cs
stos
jne
lret
inc
xor
xchg
cmp
jbe
das
and
loopne
loope
sub
mov
and
in
xor
sub
insl
lods
notl
push
leave
xchg
jl
movsl
lret
and
idiv
sar
scas
xor
stos
cmpb
pop
mov
jl
fldl
sub
add
inc
in
jae
shl
inc
ret
jae
std
fwait
push
je
pop
xchg
sti
rolb
or
hlt
inc
sbbl
xor
add
out
xor
shll
mov
xchg
push
or
mov
ss
adc
mov
jecxz
lock
addr16
and
push
pop
jne
inc
insb
xor
loope
xor
js,pn
mov
fstpt
aam
adc
dec
sub
pop
mov
mov
xchg
pop
lahf
rclb
sub
orl
mov
mov
std
dec
loopne
jge
out
leave
adc
js
adc
fnstsw
or
out
rorb
mov
push
jle
sub
push
rcll
add
aad
cmpsl
mov
mov
jge
faddl
add
bound
push
adc
inc
divl
dec
adc
sub
ds
pop
add
pop
js
xchg
scas
push
mov
mov
bnd
and
push
loopne
xor
cltd
aam
mov
idivb
fnstcw
push
addr16
and
mov
out
cld
dec
bound
push
popf
shll
adc
or
adc
cs
inc
loope
adc
and
push
push
xchg
mov
sub
fimuls
adc
xor
repnz
das
shlb
test
out
cli
roll
cltd
adcl
mov
dec
or
and
xlat
loopne
das
dec
mov
orl
inc
jb
pop
mov
xchg
jl
jns,pn
fistpl
inc
in
push
inc
sti
int3
fwait
out
imul
dec
jp
pop
xor
cmpb
mov
enter
stos
jb
idivl
fs
lds
aas
push
in
arpl
or
stos
loopne
loop
mov
sub
sub
aam
incb
cwtl
int3
sub
lcall
insb
push
mov
sbb
aaa
hlt
je
pop
out
out
repnz
repnz
into
out
pop
mov
stos
imul
jbe
pop
mov
repnz
mov
jns
jno
out
push
xchg
mov
bound
xchg
scas
jbe
mov
stos
inc
jle
inc
push
pusha
lock
pop
xor
orl
popa
inc
xchg
jg,pt
jb
in
jl
ret
push
dec
or
js
out
pusha
into
and
push
sub
fs
or
mov
ror
push
jnp
test
out
ds
sbb
loope
les
xchg
push
pop
mov
std
fistps
movsl
push
or
incb
jno
out
js
dec
mov
push
xlat
sbb
jmp
push
inc
dec
roll
or
loop
adc
std
cltd
lock
xlat
loope
sub
mov
adc
jo
jle
push
dec
add
add
xchg
mov
ss
cmp
gs
push
stos
aaa
xor
and
mov
pop
ret
add
lods
sbb
sub
in
mov
orl
stos
push
sarl
call
sbb
scas
clc
and
jecxz
fistps
loopne
pushf
pop
nop
cmpsb
xchg
movsb
ljmp
inc
add
ror
fwait
in
movsb
lret
dec
xchg
mov
out
fnsave
popa
mov
nop
orl
stos
lcall
shr
add
into
pop
adc
imul
icebp
mov
push
sub
cmp
jno
iret
and
dec
cltd
pop
cmp
scas
shlb
push
jg
sbbl
ljmp
in
iret
mov
xchg
aad
or
outsb
mov
xchg
test
stos
push
into
adc
sub
xor
aas
jns
in
push
pop
sub
dec
mov
mov
and
sub
adc
sub
dec
dec
xchg
pop
push
cmpsb
push
popa
pop
xor
jmp
jl
xchg
or
sub
scas
or
pop
inc
pushf
mov
imul
loope
adc
add
pop
testl
jns
mov
push
push
push
xor
lods
pop
or
ljmp
add
dec
outsl
adc
and
mov
ret
mov
adc
mov
or
adc
mov
xchg
ja
push
ja
sahf
int
icebp
mov
xchg
pushl
orl
mov
sbb
rcr
mov
in
add
mov
into
fisttpl
nop
and
add
popa
push
inc
or
jmp
mov
leave
outsl
add
xor
cmp
out
adc
test
loop
dec
add
pop
fcoms
add
iret
cmc
push
test
lcall
ret
fadds
test
rcll
mov
ss
mov
push
loopne
mov
jns
push
scas
sub
fmull
ljmp
mov
add
sahf
subb
or
sbb
cmp
dec
mov
jge
or
cmp
cs
ret
sbb
call
imul
mov
pushf
mov
add
mov
xchg
enter
cmp
test
push
sbb
pop
loop
pop
mov
or
or
or
mov
pop
hlt
mov
les
pop
sbb
inc
loop
clc
int
cmp
push
das
int
sbb
mov
lock
push
shrl
shll
bts
cmp
jb,pn
movsb
push
jbe
ret
out
and
push
out
dec
out
je
push
push
inc
mov
sbb
add
and
adc
repnz
cltd
loopw
std
bound
inc
or
jmp
pop
sub
or
and
shll
mov
int3
jmp
fsubrp
sbb
dec
xorb
popa
cmpl
and
fcompl
push
add
lcall
add
data16
xchg
fsubrl
jmp
orb
xor
icebp
add
das
push
or
and
sub
jle
inc
in
lods
jb
mov
xchg
sbb
push
jmp
cli
sbb
sbb
out
adc
push
scas
dec
push
inc
shrl
mov
outsb
mov
cmp
push
pop
lods
sub
jns
and
in
out
popa
jb
mov
adc
mov
jno
ljmp
popa
dec
stc
mov
cmovle
mov
jae
insb
dec
insl
int
arpl
test
pushf
rclb
pop
push
sub
pop
xor
mov
fldenv
sti
pushf
shrl
add
fwait
insl
test
mov
adc
leave
jbe
test
xchg
int
sahf
int3
push
es
test
jno
sub
mov
lret
or
sub
popf
js
sti
shl
or
test
add
repnz
nop
pop
insb
or
dec
popf
pop
pop
cmp
out
add
ret
sti
fucomip
mov
sub
mov
jg
loopne
outsl
loop
inc
icebp
cli
xchg
pusha
xchg
push
in
pop
loopne
mov
xchg
jo
test
pop
cmp
rclb
xchg
lock
cmp
jae
mov
adc
inc
rcr
mov
cwtl
repnz
cmp
or
jno
out
call
mov
pop
jmp
jle
adc
pop
xor
cmp
add
push
mov
stos
ljmp
mov
pop
mov
mov
data16
mov
mov
loop
pop
or
sub
fimull
xchg
mov
clc
mov
mov
fwait
sub
dec
mov
pop
andl
in
mov
add
rorl
ljmp
mov
or
lcall
sub
mov
leave
jge
mov
cmp
mov
xchg
pop
outsb
mov
loop
sbb
jae
in
ljmp
lahf
data16
pop
xor
mov
les
sub
lock
or
mov
dec
push
lds
push
out
jmp
pushl
or
aam
sbb
push
lock
ds
lret
mov
pop
aas
mov
in
push
scas
movsb
mov
outsl
daa
cmp
mov
jb
xchg
stos
rol
popf
movb
out
imul
sbb
cli
insl
test
std
push
fdivs
jge
movsb
insl
sbb
dec
mov
outsb
mulb
xorb
bnd
xlat
add
adc
jge
cmp
test
sub
cmp
repnz
add
sub
rorb
mov
xchg
or
dec
or
cwtl
lea
dec
aas
enter
rcr
jg
pop
lahf
add
mov
jl
mov
sub
lods
ss
enter
mov
in
add
adc
fsubrs
xchg
or
imul
dec
sbb
dec
lods
cwtl
lods
mov
jo
mov
pop
jns
jno
adc
fldt
inc
fcomip
mov
repz
or
pop
dec
sub
pop
mov
call
fldl
int
outsb
mov
jmp
ja
sbbl
mov
stc
pop
mov
in
lret
pop
lret
xor
sti
aaa
push
mov
dec
or
lcall
divb
dec
xchg
daa
sub
push
cmp
loope
mov
and
lea
sub
xorl
dec
xchg
std
notl
or
nop
daa
lret
pop
aad
dec
lds
cmpsl
inc
sub
inc
pop
or
inc
mov
sub
out
inc
xor
dec
enter
dec
shrl
fcomi
aas
mov
bound
pop
cmpsl
pop
mov
jbe
ja
sbb
repz
add
fildll
jge
std
rolb
hlt
xor
imul
cmpb
mov
repnz
sub
and
and
xor
inc
sub
mov
pop
cmpsb
lods
out
sbb
lock
leave
test
mov
push
adc
jb
in
iret
faddl
mov
aaa
loopne
mov
orl
xor
jno
mov
cltd
mov
xlat
sub
sarb
xchg
inc
inc
mov
mov
dec
add
and
call
aaa
cmp
cwtl
jl
xchg
sub
push
in
xchg
je
cmp
mov
adc
or
sbb
negb
scas
or
mov
dec
popa
rcll
or
iret
dec
fcmovnbe
sarl
xor
popa
xor
in
subl
cmp
mov
mov
rclb
push
sub
adc
adc
incl
je
test
inc
push
push
add
jne
gs
or
test
jmp
or
out
test
xor
das
out
push
insl
cmpsb
mov
push
ret
mov
pop
or
jne
sub
push
test
mov
sahf
or
add
divb
test
and
enter
fwait
jne
or
or
ja
xor
aam
sarb
movsl
mov
loope
pop
jnp
fisubrs
pop
stos
mov
push
mov
sub
xchg
adc
movsl
in
scas
sbb
in
push
stc
js
jp
mov
inc
sbb
mov
sub
insb
dec
cmp
lret
ret
mov
int3
dec
add
lcall
mov
jge
outsb
sbb
inc
inc
in
into
xchg
shl
das
xchg
test
pop
das
jge
sbb
pusha
fwait
sahf
ror
dec
push
push
ss
xchg
pushf
inc
in
xor
xchg
inc
jmp
xor
arpl
cmc
push
or
aam
mov
imul
sub
mov
adc
pop
pop
or
inc
and
stos
icebp
and
inc
scas
mov
ret
in
or
pop
popf
push
es
fbld
divb
lret
and
and
scas
xor
and
cwtl
adc
and
test
xorb
leave
adc
movsb
add
adc
mov
mov
sbb
inc
or
push
orl
push
pusha
rorl
fimull
sbb
mov
mov
mov
hlt
imul
loope
mov
jmp
test
psubd
mov
jmp
cmp
mov
sbb
push
mov
mov
push
ss
fdivs
aas
xchg
dec
dec
test
shrl
lret
bound
sub
subps
fmuls
push
fildll
insl
mov
scas
shrb
mov
insb
nop
jmp
xlat
cmpsb
ret
scas
fwait
stc
pop
fst
jg
push
clc
insb
xor
pop
notl
mov
push
int
dec
int3
xchg
aad
clc
pop
xchg
out
cmp
cmp
and
popf
mov
or
aam
incl
jle
sub
add
jno
add
mov
imul
cwtl
pop
into
daa
sbb
dec
mov
push
mov
jp
cmp
pop
sbb
nop
jecxz
frstor
sbb
pusha
inc
cltd
pop
cmp
daa
xor
xor
jecxz
fwait
pop
in
or
cld
inc
cmp
out
or
push
xor
push
push
fcmovbe
iret
inc
xchg
mov
adcb
sub
dec
daa
adc
jecxz
bound
mov
adc
out
inc
fnstenv
jae
jns
xor
cwtl
ret
mov
mov
inc
pushf
repnz
pop
adc
jns
inc
lret
or
adc
dec
insl
add
pop
cmp
add
inc
notl
ret
in
pop
adc
jle
aam
nop
loopne
roll
push
cmp
mov
js
je
inc
or
inc
mov
cmpsl
stc
xchg
aaa
outsb
lret
in
aaa
outsb
jno
push
sbb
aad
gs
adc
inc
xchg
repz
ficompl
movsl
out
cmp
aaa
xchg
shl
fs
dec
outsb
xchg
fsin
fadds
ja
jp
negb
pop
mov
mov
mov
inc
inc
leave
mov
sti
lret
imul
test
xor
je
sbb
mov
mov
or
std
pop
fwait
addr16
shl
lds
in
lds
loop
test
mov
push
lea
test
lcall
pop
movsb
popa
mov
icebp
adc
insb
mov
lcall
in
testb
xchg
rol
orb
out
jp
mov
ret
movsl
shrl
cs
loope
stos
mov
lcall
xlat
outsl
mov
lret
flds
out
lea
popa
ss
lret
bt
push
adc
sbb
nopl
and
pop
inc
int
or
sbb
dec
jl
rolb
jmp
cld
mov
into
ret
jae
outsb
push
jo
xchg
pop
jle
add
dec
addb
push
leave
rcl
mov
pusha
movsb
cmp
cmc
xchg
xor
test
js
icebp
mov
jno
cmp
jbe
cmp
pop
xchg
push
stc
clc
push
add
jbe
scas
cmp
mov
jmp
inc
mov
sub
mov
push
filds
movsl
jmp
addl
sbb
sub
jns
jecxz
fldcw
lcall
neg
into
sub
leave
push
leave
and
iret
jl
cmpsb
dec
pop
sti
and
outsb
mov
imul
loopne
fldcw
daa
push
sub
wrmsr
or
jbe
pop
add
dec
inc
orl
daa
loopne
xchg
mov
movsl
inc
sarb
in
je
fists
xor
mov
mov
lods
and
aaa
inc
fwait
cmpsb
jno
cmp
out
mov
xchg
jne
ficoml
iret
xchg
or
mov
ret
sbb
dec
enter
push
insb
pop
scas
fs
mov
fists
adc
ficoml
iret
adc
inc
xchg
es
mov
inc
push
mov
xor
int
cwtl
imul
insl
fwait
mov
xor
or
mov
insl
cmpsb
add
fsubrs
inc
mov
ds
inc
mov
les
mov
pop
pop
push
ret
xorl
jmp
outsl
in
leave
push
add
int3
data16
jnp
lds
mov
lahf
xor
loope
cmp
mov
xor
pop
mov
xor
outsb
aaa
sbb
rclb
add
scas
push
xor
and
inc
jbe
push
hlt
cmp
mov
add
pop
addr16
push
fs
mov
sbb
cmp
ret
sub
js
cmc
outsb
enter
aam
loope
ja
in
dec
leave
pop
sbb
mov
bound
das
and
jno
aas
rolb
xchg
or
cmc
mov
cmp
test
and
pop
add
cmp
ret
jbe
loopne
push
xchg
dec
xchg
lods
mov
loope
adc
jle
jl
std
lods
dec
les
mov
pushf
push
push
push
movsl
dec
and
push
push
insl
sahf
cld
mov
push
jno
pop
out
fnsave
add
stos
sbb
push
and
xlat
push
js
scas
cwtl
test
mov
or
push
mov
and
fnsave
and
pop
xor
sub
xchg
fldt
in
out
adc
test
and
cmp
aad
nop
testb
lahf
mov
adc
lahf
xchg
pushf
stos
or
dec
in
jmp
fimuls
mov
xchg
iret
loope
fwait
mov
insl
xchg
lds
jle
jp
jmp
insb
popf
sbb
fisttpl
fldl
scas
gs
mov
movsb
sub
and
mov
scas
mov
adc
repz
mov
xor
sub
fildll
pop
sbb
jno
test
es
shrb
enter
mov
xchg
lret
add
in
inc
mov
aaa
xchg
scas
pop
jge
addl
cs
outsb
mov
int3
push
cmp
cli
loop
adc
aam
sti
mov
pop
popf
or
mov
adc
adc
xlat
sbb
sub
or
mov
daa
push
bound
inc
imul
jmp
mov
cmp
gs
pop
jne
or
jns
mov
call
cld
call
or
jmp
inc
push
push
scas
jbe
mov
fwait
loope
jnp
jb
lock
stos
sub
cmc
sbbl
shl
sbb
jmp
loope
fsubs
jnp
mov
xor
sbb
xchg
sbb
xchg
xchg
and
out
and
pop
rcrb
or
sub
repz
or
mov
rcrl
xchg
je
inc
sub
pop
jg
mov
imul
lcall
cmp
mov
les
mov
insb
lods
daa
adc
stos
and
cmp
in
adc
mov
or
shrl
fstpt
jb
movl
push
sbb
sub
mov
inc
or
gs
push
sbb
enter
add
les
add
mov
xor
inc
je
fs
push
jg
pop
stc
add
xchg
xor
jo
repz
cmp
jg
rcll
imul
popa
call
mov
cmp
and
xchg
cmp
jge
sub
stc
mov
push
in
xlat
jbe
lret
push
xchg
in
stos
test
or
xor
ds
and
test
sub
dec
sbb
out
cmpl
add
scas
jbe
pop
jl
mov
pop
push
sub
rcll
stos
je
orb
push
mov
std
pop
rclb
cs
mov
gs
sbb
js
orb
or
lods
dec
ds
lret
lds
dec
outsb
mov
cs
mov
ret
sbb
lret
and
xchg
les
mov
andl
jge
xchg
pop
scas
xor
iretw
call
hlt
pop
test
shlb
jmp
repz
int
mov
test
add
push
xchg
or
mov
pop
or
fcmovu
fldl
sahf
icebp
insb
mov
in
test
int
loope
rclb
push
xchg
pop
adc
mov
inc
cltd
loope
aaa
sbbl
jp
popf
adc
mov
push
mov
mov
repz
shl
sub
fists
sbb
mov
icebp
inc
push
cmpsl
sub
filds
mov
pop
and
es
addr16
pop
inc
cmp
push
adc
aad
jmp
xchg
fs
dec
jns
outsl
cmpsb
mov
sbb
je
dec
lds
loop
sub
mov
pop
mov
out
jb
mov
ds
jne
fisttpl
mov
jno
mov
cld
push
orb
ret
daa
mov
rorb
xchg
add
pop
adc
lods
push
mov
mov
push
les
das
dec
jp
in
mov
and
insb
mulb
jl
filds
xlat
mov
inc
arpl
or
xchg
sub
xchg
or
cmp
je
xchg
add
sti
sarb
push
xor
sti
gs
mov
je
inc
jle
cli
fistps
xor
jecxz
movsl
cmpb
pop
xchg
hlt
or
test
lods
repz
imul
ja
jmp
cmp
cmp
rolb
push
sub
mov
sbb
xor
popa
dec
les
or
call
add
rorb
iret
arpl
pop
push
pop
jbe
mov
sub
pop
aas
std
push
ret
inc
push
sub
rorb
loopne
mov
push
in
inc
xchg
fsub
int3
push
push
out
and
mov
sarb
loopne
hlt
push
ljmp
test
or
xchg
loopne
cmp
loop
mov
mov
repz
sub
clc
add
es
lds
loopne
inc
cmpl
xor
sbb
jne
mov
or
add
xor
loope
mov
xchg
mov
mov
arpl
mov
loope
into
mov
movsb
fsubrs
ss
mov
add
xchg
xor
hlt
in
pop
cwtl
xor
popf
xor
add
das
sbb
mov
ret
mov
dec
cld
or
mov
imul
cli
jno
xchg
push
or
pop
push
enter
cs
mov
sub
loopne
sub
pop
cs
es
jb
push
push
sbb
jo
adc
mov
decl
in
cmc
and
inc
out
inc
loop
or
sub
cmp
dec
sub
cltd
aaa
push
cwtl
rcrl
pusha
push
cwtl
cmp
pop
jecxz
sub
mov
adc
dec
jecxz
sbb
movsb
add
xchg
hlt
mov
dec
jns
xor
and
xor
stc
leave
mov
push
cmp
xchg
test
xchg
stos
lahf
sbb
stos
mov
mov
cltd
lret
push
push
push
mov
push
jbe
ficomps
xor
push
jg
out
mov
hlt
cmpsl
pop
roll
mov
inc
xlat
add
pop
insb
in
mov
jae
imul
push
hlt
subb
inc
pop
sub
sub
mov
lahf
mov
mov
in
pop
fidivrs
push
cwtl
jb
fdivrl
adc
inc
xchg
cmovae
pop
call
test
aas
clc
loop
int
pop
xchg
jle
inc
leave
testb
fld1
std
pop
mov
jmp
call
jae
ret
adc
test
shll
lock
es
add
and
leave
jp
sub
popf
ljmp
xchg
popf
push
arpl
sub
ss
insb
mov
lock
xchg
lock
xor
or
pmuludq
xor
pop
fmuls
hlt
repz
insl
movsb
les
clc
sbb
push
shll
sbb
sub
lret
mov
aaa
push
jns
data16
lahf
xchg
sbb
inc
inc
shrl
sub
imul
lock
mov
xlat
pop
xor
mov
mov
ret
mov
lret
mov
shlb
mov
sub
jnp
rorb
xor
imul
inc
std
add
in
xor
js
ret
ljmp
mov
mov
or
lock
and
mov
fmul
mov
cmp
push
add
sti
test
std
xor
xorb
lahf
es
xor
fdivs
mov
adc
je
iret
pop
mov
repnz
mov
les
mov
and
cmp
adc
pop
cmp
xchg
mov
repz
aam
push
fbld
add
es
fbstp
xchg
ret
fs
xchg
sbb
fldcw
test
mov
imul
loopne
pusha
add
fs
pop
jmp
push
cltd
loopne
dec
ret
push
push
stos
jge
mov
mov
mov
dec
inc
pop
cmp
pop
push
xchg
int3
push
jp
sbbb
negb
or
xchg
repz
rorl
jecxz
jp
fidivrl
std
test
or
add
inc
fs
aas
movsb
cmp
push
and
pop
xchg
cwtl
movsl
rcr
in
sub
stc
or
rclb
adc
les
insb
push
addr16
jle
xor
popa
add
fs
sbb
add
mov
imul
shll
sbb
pop
mov
mov
mov
push
cltd
mov
data16
and
lret
sti
mov
sbbl
dec
sbb
fcoml
add
jo
repz
pushf
stos
int3
and
aad
adc
sbb
in
push
mov
push
inc
sbb
mov
push
fwait
aam
dec
and
pop
or
aam
jecxz
mov
dec
push
add
jmp
mov
jp
ret
push
mov
scas
mov
sub
inc
lahf
ss
mov
test
inc
mov
dec
dec
or
pushf
test
mov
insb
pop
ja
lret
cmpsb
pop
xorb
xchg
jne
xor
insb
add
sti
push
xorb
mov
out
push
data16
push
mov
pop
and
pop
dec
fcmovbe
cli
inc
movsb
xchg
cwtl
jmp
jle
adcb
xlat
push
test
mov
inc
stc
ret
mov
fsubs
or
sub
and
jns
andb
je
lds
aam
pop
dec
int3
or
mov
xchg
add
mov
sub
xorb
fistpl
arpl
fsubrl
lock
sarb
dec
dec
mov
cmp
mov
in
jnp
sbb
adc
fistpl
and
ret
rcll
inc
cmpsl
and
in
aaa
into
or
inc
adcb
lret
paddb
cmp
mov
popf
lods
xor
mov
cmp
out
push
xor
xor
and
aaa
sub
xor
mov
filds
divl
mov
push
daa
pop
leave
mov
cmp
dec
cmp
nop
sbb
cmpl
aam
inc
shll
and
icebp
inc
adc
mov
test
mov
loope
inc
test
rcrb
and
in
jecxz
sbb
push
mov
pop
cmp
pop
sbb
sub
add
ror
xor
movsl
xorb
std
mov
adc
or
pop
xchg
cmp
push
sub
xor
mov
stos
test
fsubrs
xor
mov
inc
mov
pop
lods
push
jecxz
in
dec
fisttpll
adc
adc
fdivrs
aas
das
ficomps
or
sahf
jg
outsl
xor
xchg
arpl
inc
jle
cmc
aam
pusha
mov
push
test
xor
jle
inc
adc
aaa
cmc
int3
xchg
sub
dec
out
mov
daa
cmpsl
sub
cli
or
divl
test
xor
dec
xchg
pusha
imul
xchg
push
cmp
into
dec
pushf
cli
mov
ljmp
mov
push
push
adc
aad
pop
jno
xchg
shlb
ss
xor
add
inc
in
jo
jp
add
rcrl
cmp
iret
imul
xchg
pushf
jo
daa
push
sti
jno
xor
lret
cmp
adc
inc
sar
sub
adc
shlb
out
loope
cmp
mov
dec
nop
jp
lahf
mov
push
ret
mov
cmpsl
adc
std
aad
pop
push
push
loope
sbb
repnz
xchg
pop
push
mov
shrb
push
int3
mov
ja
imul
jno
inc
fsubrp
test
int
insb
sbb
data16
pushf
xor
sub
xchg
pop
adc
shlb
mov
xorl
imul
test
out
mov
dec
cmp
adcl
movsl
xchg
ds
mov
int
js
pushf
add
xor
ja
rep
incb
cmp
mov
inc
subl
out
push
in
mov
test
repnz
stc
lahf
addr16
in
adc
push
xchg
mov
add
sbb
add
xchg
xor
flds
inc
outsb
sar
or
and
mov
loope
repz
inc
sub
ss
xchg
mov
es
mov
lret
sbb
sbb
das
ret
add
pushf
mov
and
or
dec
daa
dec
cltd
mov
adc
adc
mov
xchg
daa
dec
jae
ret
gs
es
jmp
std
inc
cmpsb
hlt
mov
lret
inc
pop
and
jle
rclb
mov
mov
je
cli
js
mov
adc
popf
gs
les
pushf
mov
cmp
pusha
movsb
popf
jns
cld
incl
dec
push
mov
push
arpl
out
push
ja
push
in
xor
scas
lea
xchg
lods
dec
rol
inc
pusha
jle
ret
pushf
jmp
in
mov
add
ret
mov
jo
inc
ja
nop
loopne
cmp
cmpsb
xor
repz
inc
cmpsb
or
jno
shl
fs
mov
dec
push
stc
push
or
fmulp
dec
cmp
hlt
dec
icebp
add
popa
imul
sub
adc
fimull
sbbb
sbb
fdivrp
push
jg
or
hlt
jne
out
adc
push
or
xlat
pop
mov
inc
aam
lret
mov
jae
jle
pop
mov
xchg
lcall
sub
pop
cmp
mov
call
sbb
shlb
xchg
loop
pop
xchg
mov
rclb
test
mov
es
aam
jmp
les
rcrb
pop
test
dec
mov
aam
cmp
rorl
xchg
jge
jle
lahf
mov
sub
mov
sub
lret
mov
scas
shll
dec
pop
aam
popf
notl
js
or
and
dec
mov
scas
roll
push
push
sub
arpl
adc
sti
adc
or
sub
test
push
mov
jnp
mov
push
add
mov
add
dec
insb
sarb
sub
jb
sub
pop
inc
inc
adc
adc
adc
sub
mov
aas
jl
lods
push
cmp
xchg
cmpl
pop
in
int3
lret
adc
push
xor
loopne
out
clc
push
mov
addr16
xor
inc
pop
out
jge
jno
cmp
add
inc
xorl
add
lds
shlb
mov
cmpl
outsl
mov
js
mov
xlat
inc
std
or
jecxz
fisttps
add
or
and
sbb
lahf
xchg
push
dec
adc
xor
xor
loop
out
xor
js
out
dec
xor
mov
and
sbb
push
pop
jno
jb
sti
pusha
and
imulb
pushf
and
dec
ja
fistps
cmc
and
iret
mov
sub
hlt
inc
adc
shl
jl
push
inc
addl
mov
cmp
and
fnstenv
test
mov
bswap
idivl
cmp
out
sbb
lcall
dec
int3
aam
dec
adc
jecxz
and
mov
aas
sbb
cmpsb
inc
mov
cmp
es
jp
sub
sub
call
add
clc
push
jecxz
imulb
int
scas
pop
flds
mov
mov
mov
xor
icebp
test
cmp
pop
mov
cmc
pop
sub
mov
sbb
sbb
mov
dec
std
add
iret
loopnew
xor
cli
jno
insb
xchg
and
mov
test
cltd
or
shl
jno
xor
pop
aam
xchg
mov
test
jg
add
mov
ret
cmp
xor
mov
add
sub
rolb
jge
mov
inc
out
nop
pop
mov
inc
xor
push
add
loopne
sub
mov
xchg
and
les
xorb
sub
mov
mov
adc
adc
add
adc
xor
fwait
imul
das
js
sbb
outsb
cs
std
lds
push
rol
cld
mov
call
ret
rorl
xlat
sub
jo
inc
pusha
js
add
dec
dec
dec
push
lret
sub
out
jle
sub
popa
out
dec
jmp
scas
jno
into
in
push
mov
add
pop
movl
xor
xchg
popa
jnp
jecxz
stos
dec
mov
arpl
iret
sahf
pop
iret
aaa
xchg
mov
fbstp
mov
jge
in
jno
fldl
adc
jp
and
jecxz
ds
push
sub
hlt
rorb
sbb
and
pop
sbb
repnz
popf
sbb
fs
pushf
pop
data16
push
nop
and
bound
pop
mov
scas
daa
mov
jp
int
sub
ror
outsb
mov
jno
cmp
mov
mov
fisubl
jl
pop
jbe
pop
cmp
ljmp
repz
dec
pop
dec
cli
icebp
cltd
mov
les
jae
or
or
daa
repz
adc
shll
mov
repnz
push
jge
cli
mov
in
pop
in
repnz
out
js
lret
popf
mov
sbb
push
ror
dec
jb
int
pop
inc
pop
subl
shl
dec
add
sarb
inc
inc
push
pop
scas
dec
icebp
movsl
cmpsb
ret
repz
xor
lods
cmp
xchg
pushf
cmp
ret
arpl
mov
lds
test
daa
andl
jb
mov
loopne
cmp
into
and
leave
xlat
push
ret
in
or
dec
aam
push
and
pop
xchg
dec
xor
test
mov
jl
push
push
push
cltd
jecxz
jae
cmp
or
or
cld
mov
pminsw
out
jnp
sub
and
or
add
add
xor
xlat
xor
dec
add
and
imul
lea
orb
cmp
mov
pop
je
cmp
out
mov
flds
dec
int3
ret
mov
pop
push
mov
jmp
es
jmp
lcall
in
out
lods
loopne
and
xchg
xchg
in
test
les
jmp
adc
insl
aaa
pop
mov
xchg
loop
or
mov
cmp
lret
test
sbb
in
subb
test
out
xchg
das
les
and
jnp
sbb
push
pop
cli
xor
cmp
mov
jno
mov
fs
movsl
insl
xor
xor
andb
cmpsb
pushf
cmp
sbb
hlt
pop
adc
daa
popa
jbe
clc
mov
push
inc
adc
jp
jbe
rolb
push
pop
push
add
pushf
sub
arpl
in
push
xlat
loope
stos
pusha
enter
call
popf
lods
hlt
sub
lea
ja
ss
xchg
push
stc
das
or
iret
arpl
cwtl
mov
lea
popa
flds
jl
or
push
jecxz
mov
dec
aas
push
mov
mov
xchg
call
lahf
push
pop
mov
mov
and
shll
push
mov
push
cwtl
mov
andl
pop
lods
or
push
sbb
rcr
in
ret
testb
mov
mov
mov
cmpsl
adc
pop
test
sbb
jno
setl
je
or
push
xchg
jge
mov
mov
pop
in
jmp
sbb
cmp
repnz
btr
imul
fadds
jl
lods
add
in
hlt
dec
stc
rcll
ljmp
repnz
repz
js
mov
ds
popf
dec
rcll
jb
movsb
scas
mov
xor
and
xchg
jno
jl
scas
das
lods
ret
into
push
sbb
inc
icebp
xchg
cld
les
repz
jl
iret
and
pop
xor
loop
movsb
jge
cwtl
pushf
or
lods
xchg
insb
scas
in
adc
xchg
dec
aas
out
insb
sti
add
push
adc
shlb
push
mov
outsl
test
cmpsb
rol
mov
repz
sub
lcall
cmp
not
enter
fsts
imul
imul
mov
pop
pop
bound
fsubl
adc
or
xchg
xor
ret
les
jb
loope
stos
inc
and
push
rolb
push
push
addr16
push
xor
xor
lcall
stc
cmp
mov
jb
loopne
lcall
cwtl
out
shrb
inc
fimuls
sbb
sbb
addr16
movsb
out
fsubrl
xlat
mov
fbstp
dec
insb
mov
ds
and
jmp
xchg
cmp
mov
and
adc
outsb
sub
xchg
xchg
bound
out
shlb
lods
icebp
call
in
adc
mov
lods
and
push
out
pop
loop
pushf
mov
inc
mov
addr16
inc
cmp
aaa
xchg
mov
xor
pop
mov
test
sub
outsl
fldcw
or
push
andl
dec
notb
push
sbb
cmp
jl
and
jb
outsb
and
mov
ret
push
cmp
add
out
push
cmp
sub
imul
add
pop
xchg
sub
lods
push
aad
aaa
cli
and
push
outsb
push
push
movsl
and
popf
imul
push
movsl
std
push
and
notl
jns
js
lret
and
scas
out
fwait
movsl
adc
jns
lock
ret
mov
and
and
sub
sbb
mov
sbb
jnp
dec
in
xchg
and
xchg
sbb
lock
lds
test
xor
cltd
dec
xorb
and
inc
xchg
ficoms
and
adc
cmp
notb
lcall
je
sub
cld
pop
aaa
inc
sub
push
ss
rorl
cmpsb
imul
sub
int
fs
sub
inc
mov
cmp
dec
dec
inc
clc
lock
loopne
dec
push
xor
inc
mov
dec
jb
test
inc
rcll
xchg
sub
in
sahf
dec
mov
inc
movsl
dec
sarl
ss
cmp
jo
sub
pusha
insl
or
and
fcmovu
pop
push
movsb
mov
call
and
dec
jg
push
add
push
xchg
mov
ljmp
sub
inc
aas
jl
test
call
arpl
jg
pop
push
daa
leave
sbb
mov
lea
cmp
jbe
fcompl
push
mov
cwtl
andb
mov
push
sub
je
negl
mov
movsb
mov
scas
ljmp
push
ficoml
adc
dec
cmp
test
sbb
sbb
cltd
imul
pop
pop
arpl
loop
push
xchg
into
cmpsl
dec
ror
adc
ss
lcall
hlt
popa
mov
adc
pop
fnstcw
pop
jl
mov
out
insl
cld
inc
pop
ja
icebp
or
lock
divb
movsb
mov
mov
or
out
das
ret
push
inc
cmp
mov
pop
mov
pop
imull
mov
inc
cltd
lods
sbb
cmc
imul
cmpsl
cmp
mov
jge
cld
push
xchg
dec
xchg
pop
jo
ds
pushw
movsl
inc
in
push
clc
dec
jecxz
xor
cld
outsb
sbbb
pop
mov
adc
je
mov
test
adc
fisttps
push
in
fs
popf
fcoml
pop
mov
dec
jb
arpl
fiaddl
cmp
imul
daa
shlb
and
sub
fldl
xchg
ja
sub
sub
sti
arpl
lods
iret
repnz
jbe
or
or
iret
popf
cmp
movsb
pop
arpl
cltd
scas
dec
ret
sbb
arpl
mov
inc
jge
rolb
jnp
inc
cmc
sahf
sub
daa
faddp
mov
dec
sbb
mov
jp
mov
cwtl
pop
pop
sbb
push
insl
mov
insb
test
jmp
enter
pusha
and
mov
mov
fs
into
subl
mov
insb
mov
mov
sub
popa
push
add
xchg
adc
jmp
out
push
stc
test
push
jl
adc
pop
hlt
shl
bound
outsb
mov
sub
jae
sub
and
lret
mov
call
inc
stos
jb
into
mov
inc
dec
repz
push
lcall
xor
mov
dec
mov
arpl
sub
inc
add
push
pushf
sub
jge
addb
jmp
stos
lods
ror
and
dec
dec
aaa
lahf
add
push
into
jo
mov
add
neg
mov
jmp
in
in
or
add
mov
sub
nop
imul
mov
ds
cmpsb
jmp
xor
pop
popf
dec
and
repnz
js
aaa
push
adc
out
push
bound
stos
and
mov
inc
push
ret
jl
in
push
dec
xor
std
ds
mov
arpl
mov
out
enter
pop
adc
gs
dec
popf
adc
cmp
push
cmpsb
fld
std
cmp
stc
jle
and
fildll
outsl
or
das
jns
sub
cs
dec
in
out
mov
shll
ja
pop
lock
jl
push
cs
pop
imul
jne
sub
and
pop
xchg
adcb
cld
push
in
xchg
stos
xor
mov
jge
add
cmp
cmp
je
pop
dec
outsl
jns
inc
push
lods
pop
lahf
fbld
adc
inc
ljmp
fs
mov
xchg
es
imul
es
dec
arpl
sbb
pop
add
lock
push
ja
in
and
adc
push
jns
fsubrs
xchg
repz
les
loope
daa
repz
jmp
jae
adc
sbb
jbe
cmpsl
push
add
pop
je
imul
mov
fs
mov
cwtl
mov
mov
inc
test
inc
mov
jecxz
xchg
inc
aad
sub
jae
mov
sbb
cmp
fwait
cmp
xlat
or
fidivrl
xchg
js
aam
negb
repz
cmp
inc
dec
jecxz
dec
pop
movsl
mov
mov
scas
push
clc
mov
push
out
xlat
add
xlat
sahf
in
pop
mov
and
pop
mov
push
cmpl
mov
xor
inc
push
pop
lret
inc
mov
pop
adc
fs
jge
js
imul
sbb
cwtl
fs
loop
or
jo
fs
sarb
pop
lock
aad
jg
rcl
adc
mov
sub
add
jbe
jl
fidivrs
xor
jno
pushf
add
push
dec
imul
fnstsw
fnstcw
shll
test
adc
xor
fs
and
push
push
sub
cmpsb
test
ss
ds
out
cmp
scas
data16
jb
mov
or
dec
and
popa
insl
test
call
push
xor
psubsw
notl
popf
xchg
outsb
inc
aad
pushf
in
mov
and
icebp
inc
jl
xor
inc
mov
aad
iret
mov
or
adc
shrb
xchg
sbb
scas
call
sbb
add
mov
jmp
xor
int3
sbb
int3
or
mov
push
test
call
stos
mov
jbe
push
hlt
adc
jno
repnz
push
adc
icebp
jl
dec
test
loop
cmp
pop
or
aad
arpl
into
mov
shrl
dec
pop
push
xbegin
adc
outsl
pop
jg
push
pop
xchg
pop
mov
cmp
add
ret
pushf
jns
stc
xchg
jge
call
fcoms
imul
xlat
xor
mov
pop
xor
push
mov
leavew
pop
xchg
ja
add
mov
fs
aaa
stos
pop
sub
lret
pop
xlat
int
dec
adc
sahf
dec
decb
paddusw
movsb
inc
xchg
sahf
nop
fidivrl
aad
rcrl
xchg
cltd
sub
outsl
mov
lods
sar
hlt
jno
push
cmc
adc
sub
push
mov
fdivrs
mov
jle
insl
in
scas
dec
addr16
pop
call
insl
roll
fmull
ss
sbbb
mov
aas
push
push
sbb
stos
jl
repz
out
xchg
lahf
or
add
out
dec
nop
or
pusha
pop
cmc
cld
cltd
cltd
or
sbb
xchg
xchg
lods
push
xchg
repnz
andl
or
push
test
insb
fbld
jle
dec
mov
cs
jge
jge
inc
int3
clc
or
scas
popl
pop
adcb
mov
xchg
cmp
mov
jle
jmp
pop
dec
jmp
test
dec
mulb
sbb
dec
stos
mov
mov
push
and
out
nop
fldt
insb
aas
sbb
adc
push
jecxz
jne
stc
add
mov
int
adc
orb
in
lock
scas
mov
dec
in
push
mov
pushf
pop
push
dec
push
fisttpl
add
mov
push
in
jp
push
iret
mov
and
mov
inc
sarb
cwtl
jmp
xchg
push
mov
out
mov
adc
push
icebp
add
pop
xchg
xchg
rolb
inc
mov
fwait
mov
push
and
fadds
ret
mov
adc
jnp
xor
or
enter
inc
push
nop
xchg
das
imul
inc
push
int3
push
lahf
pushf
jb
fmull
mov
inc
or
fwait
inc
xlat
shrb
or
xchg
jge
out
pop
mov
cmp
neg
mov
cli
and
adc
push
sbbl
lock
out
dec
adc
out
xor
imul
cmp
or
or
es
xor
stc
push
and
and
adc
xchg
mov
xor
addb
sub
bnd
or
pop
fcmovne
loop
enter
int
sub
ret
mov
outsl
stos
divb
mov
adc
arpl
mov
nop
inc
sbb
mov
xor
ljmp
mov
push
daa
mov
xchg
jle
pop
push
gs
dec
inc
insl
lods
adc
pusha
mov
rcrl
sub
mov
repz
or
xchg
push
jns
push
into
sub
lock
jp
ds
push
cmp
fildl
xor
cltd
mov
test
adc
cmpsl
jle
and
jl
cmp
sbb
xchg
mov
cmpsb
imul
dec
lret
lret
push
pop
xlat
mov
cs
lahf
int3
rol
mov
add
pop
lock
jnp
add
mov
adc
mov
xchg
ss
cltd
add
out
xor
js
or
sub
inc
pop
xchg
mov
loope
ret
in
gs
lock
push
pop
xor
xor
lods
mov
inc
sbb
fbld
notl
pop
inc
adc
cld
mov
lcall
imul
xor
adc
push
push
mov
mov
idivl
jb
subb
inc
push
adc
add
xor
fldcw
jmp
enter
ret
test
add
push
pop
mov
xor
push
adc
xchg
hlt
loop
mov
push
and
or
in
inc
fmulp
push
movsb
adcb
adc
add
fsubl
insb
xchg
addl
cli
es
adc
out
inc
lret
adc
xor
addr16
int
sbb
jmp
leave
mov
and
out
test
cmp
and
insl
xchg
jno
mov
scas
fwait
dec
dec
and
adc
lahf
inc
xchg
inc
push
daa
jmp
jne
sarb
loop
and
add
cmp
pop
mov
hlt
mov
or
fisubs
dec
push
ljmp
int3
sarb
ljmp
mov
xchg
mov
mov
test
inc
test
notb
inc
test
into
test
int3
out
or
mov
mov
mov
popa
cli
pop
or
sbb
loop
jl
sub
adc
push
jle
push
add
test
aaa
addb
leave
jo
in
inc
mov
addr16
iret
mov
mov
hlt
dec
dec
adc
arpl
push
aas
pop
add
sub
mov
clc
xor
xor
pop
dec
jge
enter
or
or
cmc
scas
pusha
pop
and
jbe
mov
inc
inc
clc
inc
mov
xor
fwait
or
lret
push
adc
sti
cmpsb
test
xchg
sarb
or
pop
adcb
stc
sti
fwait
adc
cmp
mov
or
dec
lahf
scas
pusha
iret
scas
push
cmp
pop
repz
cmpsb
sbb
iret
mov
outsb
movsb
and
cmc
test
sub
jno
mov
mov
pop
lea
aad
rcr
lret
sbb
out
inc
mov
pop
push
insb
shrl
mov
push
clc
mov
sbb
std
push
add
clc
addr16
pop
lock
mov
dec
pushf
or
mov
dec
ss
ret
sbb
insl
fmull
and
lds
dec
pushf
sub
jg
mov
mull
fiaddl
lods
push
cmp
cmp
or
xor
adc
xor
add
iret
fisubrs
add
jecxz
repnz
cmp
add
sbb
sbb
cmc
hlt
hlt
aaa
sbb
pop
mov
ret
xlat
testl
subb
sbb
or
cmc
das
mov
jl
pop
es
mov
leave
scas
mov
xchg
mov
and
sbb
and
sub
test
jecxz
pop
or
bound
stos
cmpsl
pop
test
cld
jb
push
in
adc
pop
loop
das
int
popf
daa
jo
add
adc
inc
stos
push
xor
ret
inc
loopne
dec
shll
iret
push
push
and
fs
jl
aam
add
insb
cmp
pop
fsincos
cmpsl
push
mov
dec
jl
pop
cwtl
mov
dec
inc
or
inc
fdivrs
xchg
movb
xchg
mov
in
stos
ss
les
inc
and
and
jmp
cwtl
mov
xor
test
mov
inc
jg
xchg
loopne
jae
fisubrl
mov
mov
sub
dec
mov
dec
in
jl
imull
add
int
stos
ss
or
inc
out
fsubs
arpl
jbe
cmp
ds
jbe
and
movsl
out
stos
jbe
or
lods
rcrl
jmp
xchg
xchg
in
sbb
insb
pop
fidivl
pop
pushf
push
push
outsl
adc
push
out
push
jne
mov
pop
mov
lock
jp
icebp
dec
xchg
or
xchg
data16
push
mov
mov
jl
ljmp
and
xchg
jbe
cmp
push
cwtl
push
sti
jne
cwtl
xchg
imul
rcl
push
push
sub
push
jle
push
clc
jne
negl
jbe
xchg
mov
fsubl
test
sub
scas
adc
mov
pop
jl
adc
js
ret
adc
enter
mov
sbb
mov
movl
in
cltd
add
dec
fstpt
sbbb
or
xor
cs
lods
fldl
push
cmp
fisubl
call
inc
sar
jg
fstps
pop
inc
or
movsb
inc
pop
xor
out
add
arpl
arpl
mov
and
add
mov
or
pop
xor
jbe
fsqrt
sub
pop
cmp
stos
jecxz
fdivrp
arpl
xchg
sub
sbb
mov
mov
into
bound
arpl
mov
sub
push
or
mov
outsl
push
js
insb
xchg
ja
leave
shrl
pop
sarl
shlb
fsubrs
out
mov
cmp
cmpsb
lods
call
jmp
add
iret
add
aas
inc
sub
cmpsl
and
adc
icebp
sbb
mov
test
std
movb
sysenter
inc
clc
les
shlb
pop
jne
enter
data16
push
cmp
push
testl
dec
lock
xor
testl
jp
call
lahf
pop
mov
xor
outsl
inc
cmp
ds
insl
cs
xchg
and
lea
je
dec
loope
jg
jae
icebp
lods
cli
sub
lds
rcrb
out
repz
jnp
cmpsb
adc
jmp
mov
sub
mov
add
xor
ret
jp
inc
pop
mov
out
test
hlt
cmp
scas
dec
daa
outsl
dec
lahf
cmp
lods
sahf
dec
pushf
and
pushf
jae
fbstp
mov
lea
xchg
test
xchg
jge
nop
mov
pop
lods
or
adc
add
arpl
fsubrl
jns
adc
negl
jns
mov
mov
ficomps
inc
jmp
mov
mov
xchg
jns
ret
lds
shr
inc
cmc
mov
je
and
or
rorl
or
lods
lahf
dec
stc
jmp
jns
rcll
adc
stos
cmp
add
cmp
pop
inc
pop
popa
scas
sahf
aad
lods
aad
les
lea
fdivp
xor
inc
xor
das
pop
push
add
lods
pop
cmp
fstpl
ljmp
xor
imul
movl
fdiv
nop
push
mov
faddl
or
mov
jp
lds
aaa
jp
sub
mov
orl
dec
jnp
outsb
inc
movsb
push
lock
dec
mov
aam
cmp
shrl
int
loop
scas
es
adc
lods
push
scas
adc
add
adc
mov
outsl
ss
push
mov
mov
out
js
xor
stc
inc
insb
mov
dec
pop
jp
xchg
cmp
mov
inc
outsl
inc
sbb
xchg
fdivr
xor
lods
cltd
push
pop
or
pop
out
cltd
xchg
das
cmp
das
push
dec
sbb
cs
das
push
in
mov
pusha
pop
xorl
les
repnz
out
rol
loopne
in
sub
xor
and
clc
aaa
ds
mov
add
inc
inc
out
sub
aad
out
and
sti
fwait
push
xor
mov
xchg
cltd
scas
xor
ret
call
push
fucom
stos
mov
jmp
das
jae
adc
mov
push
fldenv
lea
sub
out
xor
lret
cwtl
lods
movsl
sub
ret
negb
scas
daa
fstps
push
rorl
std
cmp
push
pop
ret
mov
add
fistpll
and
clc
pop
cwtl
and
pushw
cmp
inc
cld
in
pop
xor
pop
push
dec
fisubl
mov
mov
rclb
mov
jb
fsubrs
icebp
mov
pusha
loop
cmp
popa
out
and
mov
jle
popa
jbe
test
sub
dec
push
cmp
jp
ljmp
fldt
jb
sarb
or
xor
or
add
or
flds
out
gs
mov
lods
xor
pop
cld
out
sub
leave
repz
scas
sub
je
test
xorl
xchg
push
pop
nop
imul
cwtl
leave
fldcw
insl
icebp
lock
sti
xor
test
icebp
dec
add
push
xchg
mov
or
out
addr16
mov
push
lahf
aam
mov
les
sbb
and
les
aad
js
test
adc
push
jp
stos
ret
popf
hlt
sub
and
call
jae
push
mov
mov
lds
aam
mov
sti
ljmp
inc
mov
bound
cmp
jg
out
adcb
and
js
push
pusha
add
adc
inc
call
mov
mov
addr16
jo
adc
dec
and
inc
out
inc
jno
sbbl
mov
pop
fmull
jbe
cmp
clc
ret
sbb
ss
mov
xchg
cmc
popa
jge
and
mov
nop
ror
cmp
push
mov
pop
ret
mov
xchg
push
cmp
pop
mov
cmp
pop
pop
sub
out
fisubrs
addr16
jns
aad
mov
sub
inc
push
mov
fs
aas
push
mov
adc
push
adc
andl
xchg
rclb
aas
xor
mov
dec
sub
push
xor
nop
ret
js
inc
jae
lods
mov
push
aas
adc
push
dec
gs
ret
xchg
les
inc
push
fwait
xorl
xchg
sub
and
fistl
push
mov
mov
jmp
orl
sub
in
adc
jne
hlt
mov
loope
mov
push
loop
mov
out
movsl
inc
int
add
insl
and
incb
loopne
aas
ror
iret
mov
dec
std
insb
sub
sub
pop
icebp
das
ja
fs
inc
xor
or
gs
mov
cmp
je
push
ljmp
jo
mov
incb
push
push
lock
add
and
inc
sub
test
and
xchg
pop
enter
leave
and
add
rcrl
mov
pop
pushf
fstpl
dec
je
stc
pop
inc
sahf
dec
pop
hlt
push
mov
jae
adcb
push
or
nop
mov
rcr
cmp
push
and
inc
xchg
int3
ret
jmp
outsb
pop
fwait
push
lahf
aas
cmpsl
or
mov
xor
push
icebp
jmp
cwtl
repnz
mov
imul
mov
dec
stos
xchg
lods
xchg
jge
xchg
imul
xchg
push
test
mov
pop
mov
je
adc
data16
fcoms
pop
adc
cmp
push
push
cmp
imul
orl
lcall
mov
cmpsb
xor
lods
enter
mov
mov
iret
sub
sti
clc
lods
xor
fmuls
inc
sarb
mov
sbb
mov
test
push
mov
lds
cs
js
adc
dec
adc
add
push
push
std
add
xor
pop
lock
inc
sarl
popa
push
data16
sub
xor
push
cmpb
xchg
mov
mov
inc
fdiv
add
xchg
pushf
mov
or
lcall
dec
mov
shlb
das
xchg
push
mov
insb
je
fwait
jecxz
sbb
in
inc
movsb
xchg
cmp
addr16
jl
xor
ljmp
cmpsb
clc
mov
sub
jg
push
stos
adc
into
jmp
mov
inc
cmp
sti
cmp
gs
push
sub
inc
xor
leave
add
movsb
sahf
push
adc
mov
pop
mov
repnz
sub
cli
sub
pusha
push
scas
pop
and
clc
leave
mov
jns
cmp
imul
cld
add
push
xor
popf
sub
add
adc
lahf
inc
inc
push
enter
push
adcl
cld
jl
stc
push
iret
pusha
pop
or
or
pop
mov
sbb
push
mov
scas
cmpsl
adc
mov
sub
xor
dec
rcrl
mov
les
loop
decl
sbb
daa
jb
dec
jno
cmp
addr16
push
ljmp
in
mov
int3
pushf
jno
aas
hlt
aas
cld
lods
fwait
add
test
jne
sub
not
test
add
sbb
inc
mov
cmp
jge
dec
dec
cmp
iret
je
mov
sbb
jns
fstpl
cld
push
mov
sahf
xchg
movsb
xor
notl
and
inc
xchg
sub
push
and
out
ret
inc
adc
add
or
mov
mov
je
and
pmaxub
add
cmp
adc
add
out
dec
jns
mov
mov
aam
add
call
in
xor
shl
das
sbb
arpl
repz
ds
inc
in
stos
mov
adc
dec
sub
xor
mov
push
dec
xchg
mov
cmp
pop
mov
lock
sbb
pop
fwait
jecxz
fldenv
add
cmpb
xor
aas
scas
movsl
xlat
inc
ja
pop
daa
xor
or
inc
cmp
cld
in
push
daa
adc
xchg
aad
adc
arpl
cli
inc
xchg
mov
fwait
mov
pop
das
mov
pop
sbb
cld
std
imull
add
mov
cmpl
push
sbb
push
jbe
outsl
sbb
ret
scas
rcr
sub
aas
lea
test
push
iret
jns
pop
lret
mov
cmp
out
xchg
std
push
jno
lock
add
add
sti
lock
push
insb
cmp
sub
hlt
rcr
mov
pop
mov
sub
pusha
lret
inc
stos
addr16
dec
hlt
sub
js
jp
pusha
enter
adc
or
or
sahf
or
xor
pushf
in
jns
add
jns
push
dec
inc
adc
add
popa
xchg
adc
cmp
mov
movzbl
jge
sub
push
push
sub
gs
popa
pushl
push
jne
add
iret
gs
jecxz
mov
fdivr
fisttps
mov
test
xor
cmp
lods
loope
das
sub
or
xchg
scas
popl
out
cmpsl
dec
xor
mov
cwtl
movl
subl
and
inc
mov
cltd
fs
sbb
adc
cmp
cmpsb
mov
into
stos
insb
jmp
in
repnz
pop
mov
mov
xorl
fbstp
and
cmc
ds
pop
clc
pop
mov
push
push
mov
cs
pop
out
dec
loop
mov
add
push
sbb
or
xchg
jecxz
je
rcr
lods
in
pop
ret
jno
loopne
pop
adc
push
icebp
in
loope
mov
mulb
movsl
xor
push
clc
cmp
dec
jnp
sub
iret
mov
shlb
pop
inc
iret
ret
xlat
lds
inc
jp
xor
out
adc
push
ret
mov
push
insl
xlat
leave
stc
nop
cwtl
nop
in
pusha
inc
pop
es
dec
pusha
pop
lahf
lret
dec
sbb
lds
fmulp
shrb
loop
fcomi
push
enter
and
js
int
adc
mov
sbb
popa
call
scas
mov
ficoms
mov
mov
inc
cmp
dec
jl
jmp
or
push
mov
push
sarb
push
cmp
ds
dec
jl
clc
xor
jno
adc
jmp
in
cmpsb
inc
cmp
xchg
ja
sbb
push
jne
mov
pop
dec
xchg
test
les
mov
dec
clc
xor
aam
out
sbb
and
gs
in
lahf
movsl
jmp
subb
dec
pop
push
outsb
or
pushf
cmpl
push
push
sub
arpl
adc
push
cmpsl
jne
mov
add
out
cmp
ss
mov
ret
stos
mov
mov
push
cmp
xchg
push
or
xor
shlb
dec
insb
mov
push
jmp
popa
int3
push
lea
mov
ret
dec
cmp
adc
add
cld
sub
stos
cwtl
negl
mov
mov
inc
lods
add
adc
sub
xor
mov
mov
push
mov
cmp
movsb
jno
inc
push
sbbb
push
sbb
jmp
mov
inc
repnz
stos
mov
dec
mov
sbb
fimuls
jl
lods
aas
add
jle
and
jnp
icebp
mov
mov
out
and
pop
pop
lret
jbe
cmp
push
add
push
out
clc
xor
push
and
push
xchg
cltd
cwtl
cmc
fnsave
cmp
icebp
les
fistpll
xchg
push
jnp
inc
cmp
sub
aam
dec
mov
xor
pop
fs
sbb
rcll
addl
push
stos
jae
je
mov
stos
in
aaa
bound
std
push
pushf
daa
dec
push
sbb
push
dec
out
insb
fimull
cmp
ja
cmpsl
jg
mov
push
sti
rorl
dec
mov
shrb
lods
fistpl
lcall
jp
and
subl
cmpl
and
push
nop
icebp
loope
fs
xlat
add
arpl
lods
popa
sbb
insl
movl
sbb
es
push
aad
fcoms
xor
pop
popa
push
xchg
orb
addl
ljmp
outsb
mov
stc
pop
fidivrs
inc
push
loop
ds
pop
push
mov
in
mov
and
andl
adc
incb
cmp
xchg
sbb
out
in
addb
push
xchg
call
lcall
lret
push
fsubp
out
and
xchg
dec
ret
jnp
ret
and
insl
mov
mov
in
pop
pop
dec
mov
xor
push
push
lcall
xor
fcompl
fstpl
in
push
jbe
das
inc
mov
mov
es
lcall
cmpsb
lods
loope
rcl
std
jecxz
das
pop
and
xchg
filds
xchg
push
daa
push
scas
je
dec
lahf
int
xchg
loop
xor
xchg
jle
enter
xor
in
adc
fwait
shl
jge
mov
cmp
pop
aas
lock
or
fsubp
mov
push
aaa
jecxz
mov
inc
stos
sbb
sub
mov
ja
pop
test
es
pop
data16
mov
and
dec
sti
call
lea
inc
dec
bound
jnp
iret
push
sub
into
hlt
dec
fsubs
adc
pop
xchg
sub
add
and
and
das
sub
push
jne
clc
enter
push
fwait
dec
dec
push
sarb
aad
mov
fnstsw
sub
pop
jae
icebp
popf
leave
xchg
cmp
repnz
push
dec
xchg
mov
mov
mov
add
lret
dec
in
nop
sbb
sub
xchg
aas
inc
and
push
adc
lret
testb
stos
sahf
faddl
rclb
inc
adc
mov
mov
push
sbb
dec
xchg
mov
or
pusha
int3
out
lahf
push
movsb
pop
xchg
mov
cmp
xchg
cld
sbb
das
insl
data16
cmpsb
lahf
mov
sarl
mov
imul
inc
ss
sbb
cmp
movsl
dec
incb
js
inc
push
test
jge
sub
inc
iret
adc
sub
notl
pusha
jmp
xchg
cwtl
jle
mov
iretw
test
pop
mov
and
cwtl
cmp
enter
loop
repnz
or
sub
mov
gs
cmpsl
fcomps
mov
xchg
lds
jae
mov
fwait
push
sbb
fwait
rclb
out
imul
fsubr
push
add
faddp
test
es
insl
cltd
pop
aam
loope
jp
into
adc
or
cmpsl
sbb
pop
push
jle
shlb
cmpsl
cmp
push
inc
lock
adc
inc
sbb
add
cmpb
imul
mov
xchg
xchg
push
mov
outsl
divb
mov
pop
inc
adc
and
mov
push
xlat
ss
adc
pop
mov
insb
pop
xchg
jnp
insl
ret
decl
or
ret
jmp
jmp
lcall
xor
es
sub
lret
out
aaa
xchg
push
es
dec
mov
out
clc
mov
loope
add
addr16
push
fdiv
push
cld
sarb
cmc
iret
adc
out
lret
push
ficoml
cld
pusha
imul
rolb
adc
pop
pop
sarl
test
sub
fcompl
sub
aad
xor
add
daa
cwtl
xorb
pusha
shlb
stos
dec
ljmp
movsl
inc
pop
adc
cltd
push
imul
lods
mov
jo
das
ret
loope
loopne
push
cli
nop
sbb
addr16
mov
jecxz
outsb
push
and
push
cs
sahf
or
loop
cwtl
hlt
lret
or
jl
mov
rol
les
cmpsb
cli
adc
inc
cmpb
adc
sub
pop
dec
pop
sub
xchg
pop
rorb
jo
popf
lods
jo
imul
nop
imul
enter
add
daa
jbe
jbe
mov
pop
stos
xchg
repnz
aam
mov
les
push
add
movsb
lret
pop
xor
aam
sub
js
cmp
fcmovb
jo
cmp
mov
pop
adc
push
stc
sub
push
push
js
add
sbb
pop
cmp
repz
icebp
lret
sahf
xor
cltd
sarb
sbb
test
sbb
sbb
in
movsl
stos
inc
mov
xchg
sbb
repz
js
ja
fdivs
arpl
test
pop
les
in
cmp
sti
into
into
orb
gs
push
lretw
mov
xor
mov
cmp
das
jns
test
add
cmp
pop
mov
je
out
mov
dec
nop
and
mov
adc
mov
pop
push
rcrl
pop
mov
lods
cmp
fbstp
xor
jp
mov
gs
nop
sub
add
sub
rorb
dec
out
ja
cmp
les
cmp
pop
pop
es
dec
xchg
out
sahf
loope
and
aad
out
pop
mov
xor
movsb
insl
int3
jo
adc
adc
jno
push
and
stos
rcll
insb
cmpsl
mov
dec
ret
push
jns
rcr
mov
cmp
ljmp
mov
cwtl
xchg
cs
pop
xlat
scas
cmp
add
xchg
repnz
sub
into
mov
add
sub
mov
scas
int
stos
push
sub
aaa
insl
pop
js
psraw
nop
add
ljmp
arpl
inc
mov
in
mov
lret
and
into
scas
mov
stc
rolb
lret
lret
in
movb
adc
jmp
cmp
jns
lock
leave
test
xor
mov
out
or
mov
push
aad
jno
push
ja
arpl
mov
push
enter
loop
lret
add
or
lods
lds
clc
ficompl
xchg
repnz
jmp
mov
movsb
xor
and
loope
aas
pop
aaa
jo
jo
rol
cmp
sarl
adc
inc
adc
lahf
aam
arpl
test
repnz
shl
cwtl
addl
push
mov
xchg
andl
dec
dec
lahf
iret
sub
in
arpl
loope
or
jle
sub
fisttps
mov
sbb
inc
outsl
fldt
aam
and
out
jge
movl
lahf
lahf
sti
push
sub
xlat
adc
aas
adc
jbe,pt
mov
pop
adc
aam
cmpsb
test
inc
jmp
outsl
test
je
or
fwait
das
cmpsb
ret
stos
cltd
sbbb
adc
dec
and
push
lods
fisttpll
dec
adc
pop
xchg
xchg
mov
imul
and
lods
xchg
in
cmp
jmp
cmc
xlat
mov
jp
movsl
divb
movsb
cmpsl
lods
outsb
fisttpll
sbb
test
add
jge
adc
push
std
sahf
push
roll
sub
test
rorl
jnp
adc
dec
or
jle
jmp
int
mov
fimuls
mov
popf
xchg
sub
and
inc
fisubl
cld
xchg
mov
mov
aam
outsb
nop
mov
ljmp
mov
cmp
add
push
jecxz
pop
popf
stos
sbb
insb
xor
jge
imul
xchg
adcb
dec
hlt
ljmp
cld
popf
dec
aaa
mov
movl
jns
or
cld
cmp
mov
icebp
cmpsl
mov
fsubs
xlat
shll
add
or
sbb
in
pop
outsl
sbb
sbb
rolb
add
push
in
loop
mov
in
jecxz
icebp
shll
fwait
leave
enter
fwait
iret
push
jge
lock
in
push
xchg
mov
xchg
or
jmp
mov
cli
adc
add
xchg
sar
jmp
dec
cld
aaa
clc
popa
shll
cmpsl
cmpsb
add
pop
rcr
sub
hlt
mov
push
sub
scas
es
or
xor
sub
cmc
cmp
pushf
jle
fwait
cmc
jl
pop
cld
out
iret
iret
stos
mov
ja
outsb
testb
push
mov
adc
dec
jo
lods
and
cmp
outsb
jg
inc
mov
mov
test
ja
pop
mov
imul
aaa
rolb
in
pop
mov
iret
nop
cmp
rorl
xor
push
or
and
xchg
jbe
nop
test
sub
xor
dec
movsl
ss
xor
out
cmp
das
push
sub
sub
movsb
fisubrl
clc
and
fsubp
fs
push
push
mov
mov
popf
cmpsl
cli
lahf
loope
les
scas
scas
sbb
enter
mov
imul
or
inc
pop
incb
sub
outsb
pop
jbe
mov
nop
mul
mov
or
ret
lock
lret
shlb
cli
pop
ljmp
shrb
or
in
add
lcall
andl
mov
mov
xor
out
mov
test
inc
or
repz
cltd
xchg
cmp
sub
loop
xchg
xlat
mov
add
test
sub
loop
div
pushf
cmp
test
jl
stc
xorb
sbb
inc
mov
xchg
jp
inc
dec
inc
cmpb
cmpsl
jmp
or
cmc
pop
and
xor
mov
movsb
popf
xchg
dec
pop
pop
daa
daa
ja
cmp
scas
addr16
xchg
jno
lret
lcall
pop
sete
jge
lcall
add
stos
sub
and
push
xor
and
mov
mov
lods
je
sbb
std
pop
sbb
sub
xor
adcl
mov
dec
sti
jp
cmpsb
push
movl
add
cltd
ret
mov
repz
ret
push
lea
pop
cld
mov
loopne
sub
push
dec
jne
inc
ret
pop
out
adc
sub
adc
lcall
lock
test
lods
call
dec
inc
lret
xor
mov
das
sub
mov
in
jp
mov
jp
xchg
fidivs
dec
sub
and
push
xor
add
and
mov
mov
xchg
mov
fldl
enter
call
lods
pop
fmuls
mov
fmuls
sar
sbb
jmp
fwait
int
sbb
scas
dec
xchg
popf
movsl
ja
imul
out
test
mov
popa
mov
sbb
arpl
out
mov
rcrb
repnz
sub
outsb
push
clc
repnz
stc
mov
pop
mov
inc
dec
dec
leave
pop
stos
test
fistps
and
mov
dec
inc
jbe
xor
repz
data16
xchg
popf
test
outsl
add
add
fucomip
xor
out
fisubl
push
ret
dec
jmp
pushf
std
arpl
test
add
add
int
push
pop
xchg
sbb
in
outsb
cmp
int
mov
test
push
ss
sub
pusha
imul
jmp
ret
outsl
addr16
mov
ss
mov
aam
outsl
call
loop
cltd
out
scas
lods
xor
out
or
pop
rorl
xchg
mul
xor
test
cmp
xor
xchg
dec
mov
adc
push
push
sub
pop
js
scas
ds
cli
popa
cmp
mov
jns
cmp
add
mov
js
lea
pop
mov
xor
xchg
mov
mov
cmp
xor
sbb
mov
iret
sbb
xchg
outsl
sub
cmp
adc
aaa
call
ret
fwait
cmp
jb
and
aad
sub
shrl
repz
leave
mov
outsl
push
cmc
pop
lods
out
cmpsb
jg
es
ret
pop
divl
sub
add
push
cmp
cld
cmp
adc
cmpsb
jae
and
dec
push
js
jo
jns
std
mov
add
test
sahf
out
and
imul
movsl
ljmp
mov
cmp
sbb
lahf
ss
xlat
inc
or
mov
pushl
jb
lea
clc
mov
jbe
scas
mov
test
lahf
mov
cltd
fcmovu
jle
sub
push
xor
jne
or
jo
addr16
fs
pop
push
pop
rorl
cli
and
inc
mov
mov
cld
insb
push
xor
call
mov
iret
mov
mov
mov
push
lahf
pop
mov
gs
outsl
lods
aas
gs
ret
cli
xor
shrb
mov
sar
enter
imul
push
inc
out
clc
xor
ds
mov
mov
popa
dec
filds
out
add
daa
scas
jb
pusha
imul
jg
mov
sub
ja
dec
popf
fildl
mov
pop
pop
cmpsl
inc
sbb
dec
push
unpcklps
pushf
aas
test
addb
inc
shrb
xor
stos
adc
inc
mov
popa
aam
mov
sub
add
movsb
dec
jp
pop
xchg
jo
xchg
mov
lret
lcall
fcoml
fsubs
in
add
xor
stos
std
and
mov
push
nop
jmp
push
mov
adc
fwait
iret
jo
lods
cmc
jmp
dec
and
imul
mov
inc
sbb
int3
xchg
fsubp
fisttpl
das
mov
repnz
imul
push
mov
shll
into
or
cmpl
dec
mov
mov
daa
cmpsl
mov
jge
add
push
incb
sbb
jmp
leave
in
lods
inc
sbb
lret
fcmovnu
xchg
mov
cmp
xlat
sub
sub
mov
mov
adc
jl
test
mov
inc
mov
sub
sub
inc
stc
mov
or
cwtl
lods
jecxz
push
mov
shrb
int3
and
fimuls
pusha
into
jbe
or
sbb
xchg
fcmovnu
mov
cld
sbb
and
inc
lahf
mov
pop
or
cmp
movsl
or
xchg
or
mov
lods
mov
jb
inc
iret
ss
lret
adc
rol
sub
fisttps
int3
int3
movsl
call
les
adc
lahf
scas
sub
push
pop
shlb
fsts
or
cmp
loop
push
clc
and
lahf
mov
rcl
aaa
sbb
mov
pop
std
imul
clc
pop
xchg
icebp
incl
sti
xor
push
gs
notb
ss
pusha
lock
dec
xor
jae
jno
push
and
lret
std
jo
mov
push
push
jecxz
fdivs
cmp
popa
push
push
adc
cld
ja
sbb
aas
push
or
jne
enter
loope
inc
stos
jbe
add
pop
in
pop
pop
pop
pop
shll
push
xchg
xor
adc
push
outsb
cli
stos
in
in
sahf
fldt
into
xchg
jbe
in
insl
loopne
sub
arpl
adc
xor
mov
and
xlat
daa
lods
push
lods
sahf
aam
out
mov
add
loopne
cmpl
push
outsb
mov
mov
stos
xlat
sub
icebp
test
lds
icebp
xchg
xchg
or
sahf
cmp
cmp
pop
jnp
pop
push
dec
mov
subb
mov
sub
xor
push
mov
push
fisubs
rol
aas
flds
sub
mov
lock
mov
mov
push
mov
rcr
aad
cmp
sbb
mov
fwait
aad
xor
js
sar
xor
aaa
in
loopne
jp
sahf
cmp
lahf
mov
push
test
dec
outsb
mov
sar
mov
dec
xchg
xor
andb
shll
pop
add
pop
adc
nop
imul
pop
pop
or
xor
push
sbb
out
xchg
cmpsb
mov
add
xchg
fs
or
pop
in
push
ficomps
mov
or
shrb
scas
jmp
pusha
mov
test
cmp
mov
add
or
es
pop
and
cmp
leave
bound
jno
xor
ret
loope
push
fidivl
xchg
or
outsl
cmpsb
mov
mov
imul
fs
or
popf
mov
xor
xor
scas
sarb
pop
sbb
aaa
pop
ljmp
std
mov
jecxz
or
stos
cmp
and
or
lock
shlb
out
or
aam
fsts
mov
jg
sti
test
push
xchg
dec
pusha
je
pop
popf
test
dec
ss
and
and
xchg
lock
sbb
mov
mov
fbld
xor
mov
jecxz
cmp
jo
dec
push
push
jecxz
ja
out
xchg
sub
pop
mov
xor
cltd
mov
mov
lahf
inc
jg
dec
dec
ret
out
repz
mov
repnz
xchg
mov
popf
loop
cmp
fwait
scas
je
pop
mov
cmp
mov
cmc
clc
repnz
xchg
mulb
jb
lds
dec
insl
jmp
arpl
je
ret
adc
mov
push
div
mov
imul
adc
mov
pop
inc
push
rcrb
arpl
fistl
out
xchg
out
lds
adc
fistpl
pop
pop
add
ficoml
mov
test
icebp
pop
mov
push
sbb
fxch
int
mov
fwait
mov
aaa
int
mov
jmp
ljmp
icebp
fildll
mov
xchg
fs
nop
fdivs
jg
aad
adc
jl
stc
scas
in
xchg
sub
hlt
movsl
imul
mov
nop
and
out
mov
sub
jns
jp
arpl
lret
mov
and
loope
push
push
cwtl
scas
neg
mov
push
or
shrl
mov
and
mov
int
ds
adc
lcall
and
xchg
xchg
inc
dec
cwtl
add
gs
sbb
xor
jmp
mov
pop
sbb
pop
adc
lods
dec
jmp
bound
mov
jnp
cmp
fimuls
cs
lods
mov
out
sti
cli
les
sbbl
pop
dec
iret
mov
push
push
add
mov
adc
jno
push
xchg
movsb
sub
lds
jb
std
push
mov
xchg
fistpll
and
xchg
add
jo
pop
icebp
jecxz
inc
sbb
movsb
out
imul
mov
xchg
mov
or
push
popf
mov
push
pop
fcomi
push
aaa
rcl
cli
lret
lods
std
mov
add
aad
xchg
rolb
mov
mov
aas
test
and
jns
aas
push
and
ja
mov
or
or
movsl
lahf
std
add
lock
xchg
cmpsb
or
test
popa
sbb
jmp
popa
popa
repz
insb
adc
fildll
push
pop
int
adc
stc
cmp
test
mov
mov
pop
in
mov
inc
xor
cli
dec
lcall
aaa
xchg
pop
rcll
les
iret
rclb
fimull
mov
cmp
hlt
mov
cwtl
movsb
push
aaa
add
orl
xor
sbb
push
fcmove
push
xor
stos
shl
dec
and
push
sbb
adc
sub
xchg
mov
int3
jne
out
mov
rcll
mov
fmul
scas
pop
lcall
jmp
imul
sarl
jge
xchg
loope
das
dec
data16
push
mov
scas
adc
add
rcrl
add
inc
pop
lret
daa
popa
dec
aaa
cmp
icebp
jg
and
mov
dec
les
xor
add
add
cmp
popf
outsl
push
loope
inc
mov
pop
jg
ljmp
add
push
jge
mov
out
popa
aaa
pop
ret
mov
push
pop
addr16
outsb
xor
push
push
sub
push
insl
mov
pushf
int
push
adc
push
pop
xlat
cmp
imul
je
fadds
mov
fcmovne
pop
pushf
xor
mov
cli
and
dec
jno
int3
sub
push
mov
lods
or
rclb
pop
jmp
mov
mov
rcrl
std
cmc
lcall
loope
inc
sbb
sarl
imul
pop
fldcw
lahf
add
xchg
ljmp
adcb
filds
push
fbstp
test
outsb
fisttps
std
shr
and
lods
push
lcall
daa
push
js
int
jae
test
jbe
jmp
dec
lret
mov
fcoml
mov
mov
push
xchg
push
jge
dec
lock
mov
ds
xor
mov
fnstenv
call
sub
shlb
int
sbb
pop
push
add
mov
xchg
fwait
push
xchg
push
mov
pop
mov
pop
add
or
xlat
test
ret
stc
add
std
pusha
jmp
xchg
stos
mov
in
mov
inc
fdivr
adc
out
ret
fwait
xchg
jbe
in
mov
cmp
add
cwtl
scas
out
push
add
repnz
or
testb
jge
shlb
sub
cs
iret
or
jecxz
hlt
sbb
dec
lea
out
mov
cmc
hlt
cmp
adc
jmp
shr
dec
js
mov
push
cmpsl
shr
loopne
fs
xor
fists
jp
fwait
and
test
pop
neg
inc
inc
ret
aam
popa
dec
repnz
int
inc
into
fisubl
xchg
xchg
mov
mov
lods
test
and
loope
cmp
mov
lahf
sahf
scas
inc
cmp
into
push
jmp
jecxz
ja
aas
lea
stos
insb
jge
xor
pop
xor
insl
sarb
outsb
lcall
dec
xor
push
cmpsb
insl
imul
xlat
mov
push
add
dec
jnp
roll
sbb
les
xor
and
call
test
les
jne
sbb
rcrb
xor
lds
pop
inc
jmp
sbb
in
push
add
mov
sub
adc
jmp
cmpsb
push
scas
mov
add
lret
sbb
mov
in
movsb
fldenv
cli
jnp
sub
lock
sbb
cmpsb
pushf
xchg
jns
sub
and
xor
and
scas
je
dec
aam
loopne
aad
and
or
inc
mov
cmp
mov
sar
daa
clc
iret
insl
les
jno
sub
cmpsb
fs
nop
or
pusha
sbb
aaa
cmp
or
xchg
fidivrl
xchg
inc
movsb
and
lock
in
aam
xlat
dec
jg
ja
and
mov
enter
loopne
adcb
idivb
lret
iret
loop
add
pushf
mov
cmp
out
and
adc
cltd
and
ljmp
mov
sbb
sub
add
fists
fdivrs
pop
dec
adc
hlt
test
movsb
dec
js
pop
sbb
push
pop
and
sub
popa
subl
mov
push
mov
mov
popl
mov
mov
mov
inc
int3
cmp
test
or
pop
add
xchg
xchg
pop
jnp
xor
sarb
test
dec
iret
outsl
push
pop
sub
add
sbb
imul
repz
movsb
out
inc
mov
and
faddl
mov
stos
jae
cli
test
cld
jmp
push
mov
sbb
iret
push
mov
stc
iret
ret
adcl
xchg
inc
gs
sub
out
gs
test
cli
dec
sahf
outsl
and
mov
movsb
inc
dec
test
loopne
mov
leave
push
xchg
inc
cmp
repnz
jg
pop
loopne
in
sub
push
repz
lret
gs
frstor
xchg
repnz
mov
scas
repz
xchg
ds
sbb
loop
scas
sub
pop
fwait
pop
test
andb
adc
idiv
jb
insl
xchg
cmp
add
mov
jbe
mov
mov
dec
mov
push
mov
pop
insl
push
pop
xchg
mov
inc
iret
fwait
imul
loope
arpl
dec
jne
cmp
test
dec
outsb
call
jge
pop
sub
push
daa
shl
sub
int3
popf
mov
xor
cmp
push
pop
imul
and
pop
aaa
aaa
xchg
repnz
fcmovnu
add
stos
lahf
aad
push
jb
push
xor
movsl
ja
or
sub
pop
sbb
addb
nop
les
sbb
mov
mov
mov
fst
dec
or
dec
aaa
rorb
xlat
pop
sbb
cmc
rcrl
inc
jne
sub
lret
xor
movsb
dec
js
fs
adc
imul
inc
hlt
push
in
pop
xor
aas
lret
js
rorb
cmpsb
dec
sbb
mov
js
sbb
mov
mov
xchg
out
enter
loope
add
rep
xor
cli
lahf
mov
pop
jecxz
sbb
cltd
sarb
pop
sub
dec
jae
push
into
cmp
jne
cli
and
call
loope
and
add
aas
ret
lods
cwtl
mov
push
fidivl
mov
add
dec
pop
clc
xor
xchg
xchg
pushf
out
orl
sbb
jo
xchg
jp
mov
notw
jle
loop
adc
jmp
scas
sub
xorl
sub
and
cmp
lods
cmp
mov
outsl
inc
add
aam
xchg
sub
leave
shll
loopne
hlt
popa
mov
roll
dec
push
add
gs
jge
js
cli
mov
stos
jl
std
jne
dec
lcall
test
mov
dec
pop
and
fisubs
add
add
adc
scas
nop
cmp
or
imul
test
xchg
mov
jmp
xor
pop
inc
push
test
imul
mov
outsb
out
dec
inc
xchg
es
xchg
stos
in
add
es
mov
sub
jno
or
mov
call
aaa
fiadds
sbb
or
ss
dec
xlat
and
sbb
iret
dec
movsb
cmc
mov
dec
pop
idivb
add
pop
int
fprem1
sub
jb
pop
lods
nop
bound
aas
mov
lea
shlb
inc
bound
push
jg
lods
or
mov
mov
inc
dec
mov
sub
sub
cmp
lcall
outsb
push
and
dec
pop
cld
pop
dec
enter
xor
jge
lret
shlb
inc
aad
cmp
mov
push
lret
or
sub
aas
outsb
stos
test
lret
xchg
call
ret
fisubrs
stc
fs
sub
mov
shll
or
cmp
imul
ds
jge
xchg
dec
cmp
out
xor
jmp
mov
bound
xchg
movsb
in
mov
mov
mov
out
lock
iret
xchg
add
adc
adc
je
arpl
fadds
jmp
fstpt
mov
mov
in
popf
andb
mov
add
lret
loopne
mov
shrl
push
mov
test
push
repz
mov
scas
adc
pop
cmc
lcall
scas
and
or
cmp
fcoml
cmpb
dec
fstps
add
pop
les
subb
and
xchg
out
leave
into
jg
jmp
insl
push
icebp
loope
loop
add
and
or
sbb
iret
sbbb
aad
mov
nop
std
mov
mov
es
xor
outsb
inc
mov
in
cwtl
std
sbb
mov
sahf
pop
cmp
arpl
push
adc
mov
pop
pop
fucomp
loope
lcall
inc
xlat
mov
insl
mov
mov
mov
data16
ffreep
in
xchg
imul
jnp
or
cmp
inc
fistpll
xor
movsb
out
arpl
call
inc
in
mov
imul
mov
dec
xor
lret
ret
cmp
fisubrs
adc
push
in
pop
mov
cmpsb
mov
ret
sub
sarb
mov
aaa
adc
mov
imul
sub
fstl
lods
mov
idivb
jge
cmp
sbb
cmp
addr16
jl
inc
out
adc
sti
mov
test
in
orl
pop
cwtl
mov
dec
mov
jbe
lea
fists
sub
mov
int
aas
jmp
push
mov
pop
stos
push
cmp
lods
mov
push
xchg
cmp
cmpsb
inc
add
or
mov
negl
cmpsl
popa
sti
cmc
xlat
setl
jnp
inc
mov
xchg
mov
inc
movsb
sub
xor
loop
inc
cltd
sub
stos
inc
aas
test
sub
cwtl
insl
xchg
gs
in
xchg
and
jne
mov
push
ja
xchg
mull
leave
outsb
and
lcall
add
mov
sahf
mov
push
dec
mov
lods
mov
mov
adc
lock
pop
ljmp
repnz
popf
movsb
rorl
mov
test
aam
sbb
call
outsb
dec
xor
je
inc
mov
add
leave
jp
lcall
mov
test
rcr
or
cmp
dec
jl
dec
ret
xor
mov
lret
mov
fistps
or
mov
fwait
xchg
loop
jmp
subl
sub
cs
xor
int
in
sub
rorb
xchg
jmp
adc
pop
int
out
push
push
pop
jmp
add
inc
and
jmp
fdivrl
add
paddsb
and
pop
shl
mov
andl
xor
cmp
adc
sarb
push
inc
xchg
jl
jecxz
mov
cmp
icebp
jnp
mov
dec
mov
inc
xor
pop
mov
aam
dec
aam
or
cmp
gs
enter
fcmovnb
je
repnz
dec
mov
and
ret
shl
subl
mov
xchg
add
adc
movsb
loop
rep
out
test
les
and
scas
pop
mov
jno
pop
inc
cmc
inc
pop
add
push
push
cmp
clc
fsubl
dec
shlb
mov
insb
push
xlat
cmpsl
in
push
int3
inc
xor
inc
cmp
aaa
jmp
cli
and
jle
cmp
lret
test
test
adc
xor
jl
ret
xchg
jecxz
adc
push
jns
imul
cmpsb
lods
mov
mov
insl
mov
ja
mov
rcrb
xchg
int
pop
xor
stos
es
scas
adc
pop
mov
push
or
dec
daa
xchg
jno
cmp
aad
rcrl
cmp
mov
and
jne
pop
sub
loopw
sub
lds
dec
mov
or
sbb
inc
and
pop
testb
mov
in
mov
lods
js
aad
incb
das
sbb
addb
pop
fsts
adc
inc
and
mov
mov
arpl
push
mov
and
inc
arpl
sub
mov
push
sbb
push
push
aaa
sbb
sbb
adc
fnstcw
mov
call
xchg
add
mov
adc
or
loope
pop
in
out
out
shrb
repz
cmp
add
les
cmc
push
sbb
imul
adc
loope
testb
loopne
sbb
clc
cmpsl
xlat
je
ja
jae
setno
pop
fiaddl
cmpb
sub
sub
fs
and
mov
in
mov
pop
outsl
lea
sbb
fnclex
jbe
icebp
int
cli
xchg
out
xchg
scas
pop
jg
sub
rol
or
fstpl
aaa
xlat
ljmp
pop
cmpsb
addb
ja
scas
pop
mov
inc
scas
jns
push
scas
xor
sbb
fildll
adc
mov
adc
sbb
das
ss
mov
xlat
fisubrs
push
mov
mov
loop
in
insl
bound
cmp
mov
rcll
repz
rolb
test
xchg
jmp
call
mov
in
ret
addb
ds
lret
mov
jl
sbb
stos
push
cmpsb
inc
xchg
shll
mov
sub
xorl
mov
enter
lea
scas
stc
jle
stos
lods
sub
xor
scas
and
sbb
add
shll
movsb
mov
sub
add
pop
jle
mov
fisttpll
fbstp
rcll
adcl
inc
lods
rcrl
clc
subb
icebp
add
test
sub
or
cmp
xlat
std
mov
inc
shrb
pop
rorl
mov
xor
push
cmpsl
shll
stos
push
aam
into
jle
jle
add
popf
imul
or
and
aad
jnp
mov
loope
and
push
xor
cmp
mov
sbb
mov
test
jb
pop
xor
pop
iret
or
shlb
es
cmp
iret
mov
pop
lret
mov
push
ljmp
xchg
jg
sub
inc
jge
adc
test
dec
movb
sbbb
push
adc
cmpsb
stc
add
lcall
jge
sub
rclb
add
out
pop
inc
xor
test
imul
mov
push
pop
call
dec
js
adc
sub
add
sub
mov
push
adc
and
lcall
dec
or
jae
adc
pop
and
ret
and
mov
js
mov
pop
test
sbb
cld
pop
cmp
aaa
loop
movsl
hlt
xchg
xchg
dec
xor
push
or
adc
mov
loopne
outsb
add
in
or
pop
mov
cmpl
clc
inc
rcr
sbb
and
push
dec
and
movsb
icebp
inc
nop
cltd
and
mov
push
scas
test
lret
stc
and
mov
imul
inc
loope
ss
or
sti
lcall
mov
bound
pop
cmp
rorb
pop
out
fnsave
cmp
movsb
cmp
mov
and
ljmp
popf
enter
dec
ds
or
pop
cmp
andl
mov
mov
addr16
mov
stos
mov
lds
mov
fimull
subb
xchg
jl
push
cli
add
push
insl
add
test
dec
cmp
mov
mov
cld
pop
cwtl
pop
movsb
inc
xor
daa
mov
xor
stos
cmp
testb
jmp
div
cmpsl
sbb
mov
testl
lock
xor
leave
stos
call
cmp
leave
nop
sti
dec
xor
sub
jg
cltd
imul
loopne
add
adc
lods
inc
aas
fcmovb
icebp
stos
lds
and
and
xchg
mov
push
push
push
mov
sbb
enter
or
aam
fstp
and
mov
loope
mov
dec
pop
rorl
ja
push
test
mov
rorl
addr16
loopne
sbb
paddsw
rorl
es
popf
pop
inc
push
mov
call
repz
das
cs
imul
loop
or
subb
mov
sbb
stos
lret
push
jae
out
pushf
pop
mov
insb
btc
outsl
fimull
out
pop
add
mov
mov
sub
outsb
cwtl
mov
in
cld
push
cmp
push
cmp
cmpsl
mov
push
sbbl
sbb
xlat
movsb
jns
adc
addr16
and
or
lods
js
adc
and
and
sbb
pop
dec
stc
testl
sub
xchg
mov
jae
addb
push
in
rcl
push
push
outsl
adc
mov
mov
cmp
into
dec
xchg
sbb
lcall
sub
shr
sarb
stc
jg
mov
loopne
cwtl
jmp
popa
xlat
inc
das
ljmp
mov
mov
xchg
insb
xor
pop
je
movsb
fsubl
xor
lret
and
add
hlt
mov
in
jmp
push
test
xchg
ret
sub
jnp
and
adc
popa
jl
or
adc
jp
sub
ret
cmp
and
adcl
into
lods
xchg
jge
jb
and
or
and
jo
fcmovne
push
sahf
inc
roll
out
fsubs
repnz
vpmuludq
or
add
sahf
and
sbb
insb
cld
mov
pop
bound
shl
out
cmp
ret
shll
pop
xor
ret
stc
lahf
fistl
aad
mov
pop
push
adc
mov
dec
or
add
iret
mov
xchg
cmp
test
mov
movsl
fstpl
shr
ds
xchg
and
push
pop
in
jnp
int
imul
and
fisttps
insl
ljmp
shrl
push
outsb
jecxz
loop
test
jl
iret
lods
sbb
dec
pop
pop
aaa
mov
outsb
cs
inc
adc
cmp
repz
push
add
das
out
dec
jl
stos
int
fsub
xlat
xchg
lret
adc
push
xor
imul
ds
jmp
es
stos
inc
mov
jbe
pop
pop
leave
xchg
movsb
stos
dec
iret
mov
stos
repnz
jmp
ds
xchg
inc
adc
pushf
pushl
mov
pop
mov
and
repnz
stos
xlat
xor
fwait
or
das
sahf
cmp
jae
test
movsl
cmp
xor
sub
fstl
sbb
xor
mulb
sbb
jp
inc
pop
insl
xchg
adc
addr16
stc
add
add
and
sub
mov
das
pop
into
mov
jb
stc
dec
mov
dec
test
jecxz
and
pop
cmp
cld
adc
cmp
clc
jp
inc
or
loopne
mov
sahf
in
out
int
fisubrs
out
pop
andl
sbb
xchg
lock
fimuls
insb
test
scas
sarb
fwait
jb
sarl
push
lcall
jno
lock
repz
or
mov
movsb
icebp
hlt
sahf
lea
sub
jle
cltd
adc
outsb
cmpsb
iret
pop
aad
mov
adcl
mov
scas
cmp
divl
mov
adc
andl
mov
pop
and
movl
in
es
adcl
push
lock
bound
push
loope
aad
inc
sub
sub
lahf
pop
jecxz
fstl
lods
jp
adc
fstpt
add
xchg
lret
jp
pusha
cltd
icebp
lods
sti
sub
subl
jmp
mov
jns
aad
and
insl
cld
add
out
aas
or
sbb
insb
test
pop
data16
push
xchg
push
sbb
fildll
rcrb
gs
out
push
or
bound
sti
jne
pop
lcall
out
clc
scas
and
push
and
rorl
sbb
fnsave
pop
cmc
dec
dec
and
movsb
subl
add
popa
sti
push
or
sti
jo
lods
mov
push
ror
adc
fs
pop
imul
xlat
push
mov
add
mov
pop
mov
inc
xchg
inc
inc
cmpsb
psrlw
push
cltd
sti
jnp
into
mov
jl
in
push
lret
bound
pop
add
pushf
fs
aam
sbb
call
jge
shlb
repnz
push
adc
out
arpl
sub
icebp
scas
rcl
sbb
mov
in
cmp
adc
enter
sahf
ja
scas
bound
xor
dec
and
in
mov
fwait
jb
sub
xchg
in
arpl
adc
mov
fisubs
shrb
popf
das
dec
xor
adc
fs
cs
pop
pop
push
jne
inc
push
lea
enter
push
ret
mov
mov
mov
jecxz
sbb
adc
test
and
pusha
imul
pop
add
cli
push
mov
fbld
fists
popa
leave
xor
push
inc
jb
mov
cmpsb
insl
lea
out
xor
adc
imul
inc
push
insl
mov
cmp
jl
cld
dec
daa
push
mov
inc
adc
rdmsr
fs
mov
popa
cmp
pop
gs
cwtl
lds
or
cld
lret
lcall
push
inc
enter
add
cmp
pop
fldl
mov
mov
pushf
std
or
xor
mov
scas
adc
mov
xchg
cmp
inc
scas
and
pop
dec
nop
or
popf
sbb
cmpl
ljmp
mov
stc
gs
inc
dec
mov
lods
andb
popf
call
ret
mov
stos
dec
lock
push
jmp
lahf
push
fadd
fcomip
das
cmp
in
lds
lods
orl
out
mov
jl
adc
sbb
arpl
adc
cmp
sbb
sub
or
testl
mov
inc
and
test
je
xor
xchg
pop
cli
and
int
in
mov
bound
movsb
or
popf
imul
sbb
inc
and
lock
add
xor
sahf
xchg
jle,pt
add
mov
shr
jmp
subb
lock
push
int
into
mov
test
mov
cmpl
repz
add
sub
test
pushf
xlat
push
nop
outsb
out
loop
cltd
aad
sub
xchg
scas
or
mov
out
js
cmpsl
test
out
jmp
xlat
roll
fcom
hlt
fcmove
push
aas
xor
push
stos
stos
dec
pop
jmpw
pop
or
shll
and
movsl
lock
enter
jp
adc
pop
loope
dec
sbb
cmp
mov
jmp
xchg
fiadds
mov
jmp
lret
mov
cmp
cwtl
icebp
dec
into
xchg
cld
adc
outsb
ret
cmp
cmpsb
or
jle
test
or
filds
cwtl
aaa
xchg
in
mov
xor
cmpl
ss
xchg
push
pop
push
lds
test
jnp
pusha
in
insl
inc
in
ja
lret
stc
test
mov
or
jl
repnz
movsb
and
xchg
orb
cmpsb
nop
add
stos
int3
mov
push
enter
dec
push
pop
mov
xchg
cmp
fadds
insb
les
or
pusha
add
xchg
fistps
xchg
inc
push
cmp
int3
popa
add
pop
rcrb
pop
ret
jmp
push
iret
loop
sahf
xchg
inc
js
sti
andb
lods
and
xchg
dec
mov
add
jns
cltd
xchg
cli
cmp
mov
call
aaa
xchg
pop
sub
je
pop
cmp
sub
repnz
adc
push
imul
es
cwtl
call
jne
dec
mov
mov
add
mov
push
shll
stos
jne
mov
out
loop
mov
mov
jns
out
imul
cmp
adc
pop
test
cli
psraw
mov
pop
mov
pop
jmp
mov
insl
dec
mov
je
ror
xor
mov
divl
sbb
outsb
sbb
push
mov
ds
push
push
daa
js
aad
cmc
sub
ffreep
addl
xchg
mov
mov
add
gs
adc
jnp
xlat
mov
stos
icebp
lret
push
dec
fwait
clc
aas
pop
jge
mov
aaa
mul
sahf
xor
adc
fsubrl
cli
loopne
cmp
mov
jg
cltd
fcmovbe
out
test
adc
or
jle
jecxz
mov
lods
lods
ficoml
mov
dec
out
dec
and
shl
mov
sub
cwtl
cmp
test
sbb
cld
shll
mov
sub
xor
push
icebp
hlt
in
adc
jno
lea
out
xor
test
add
roll
sub
push
sub
stos
iret
cltd
inc
std
orb
pop
push
leave
cmpsb
sbb
jp
add
popf
mov
adc
ss
cmp
mov
sti
pop
and
adc
dec
pop
adc
lods
gs
imul
pop
add
sub
lret
push
int3
cmpsb
mov
aas
jmp
movsb
adc
jmp
mov
out
inc
leave
xor
cwtl
aas
xchg
or
cmpsb
mov
int3
dec
das
inc
add
stc
xorb
fistpl
dec
pop
pushf
cmpsb
mov
jp
test
int3
xchg
and
xor
xchg
and
mov
movsb
mov
inc
sahf
jp
shll
inc
lods
mov
daa
jne
call
addr16
es
sub
or
mov
arpl
bound
pop
cli
or
jb
inc
lcall
pop
movsl
test
fs
in
mov
stc
sub
test
xchg
insl
shrd
test
or
pop
inc
outsb
adc
sub
lret
lcall
xchg
or
sbb
fsubrl
dec
popa
repnz
push
pushf
fwait
cs
pushf
adc
dec
aad
xchg
xor
int
lahf
push
jge
jg
ljmp
and
fsubs
out
mov
in
mov
xchg
in
lcall
xchg
sub
xor
inc
rcll
mov
cltd
mov
iret
iret
in
mov
jle
push
jae
pop
stos
ret
int
cmp
out
cmp
xchg
or
mov
push
inc
push
cli
ret
push
movsb
hlt
dec
fcmovb
movsb
xchg
inc
addl
pop
mov
mov
pop
fstl
pop
mov
mov
jg
mov
jl
adc
in
movsl
pushl
loop
arpl
dec
out
or
bound
fiaddl
mov
or
outsb
neg
pop
jo
add
mov
mov
xor
push
lods
cmpsl
and
icebp
dec
mov
scas
push
stos
sub
xchg
ja
mov
xchg
cmp
loopne
mov
adc
shr
test
iret
sub
add
fst
jnp
or
mov
cs
daa
fldl2e
pop
sub
sub
cmp
push
mov
push
shrb
test
adc
in
push
out
xchg
lods
pop
push
adc
ss
sbb
inc
cmp
cmp
in
ja
fstl
fs
xor
xchg
add
fwait
nop
sti
fisubs
outsb
cmc
int3
sub
ja
and
inc
push
fs
dec
daa
cli
sub
jg
xorl
mov
fcomip
sahf
js
push
inc
mov
leave
cmp
test
push
adc
hlt
inc
sbb
dec
dec
out
bound
jl
jne
frstor
lods
xchg
dec
push
bound
loope
cmc
cmp
ds
pop
mov
leave
mov
repz
aad
loope
or
movsb
push
ljmp
sti
inc
frstor
xchg
rcl
and
pop
lret
mov
mulb
je
inc
add
xchg
lcall
mov
js
outsl
in
lret
lds
lds
je
pop
mov
sub
pop
je
xchg
mov
push
dec
and
sbb
cmp
add
push
mov
pop
jge
aaa
cmp
pop
popf
or
aas
add
test
aam
ja
loopne
mov
adc
mov
jecxz
cmc
stc
ja
cmp
arpl
mov
adc
jno
in
in
mov
icebp
inc
xor
fwait
addr16
lcall
int3
xchg
push
xchg
mov
mov
sbb
scas
and
inc
xchg
xchg
or
lret
add
sub
jmp
xchg
fnstsw
fwait
and
imul
adc
das
pop
dec
leave
adc
dec
push
xchg
int3
loope
xchg
push
int3
lods
mov
jge
rcrb
addr16
addr16
addr16
sub
cmp
mov
jl
jmp
sub
aaa
pop
ret
mov
or
jnp
add
and
pushf
movsb
out
test
push
xlat
cmpsb
dec
aas
mov
test
incl
fnsave
add
adc
fiaddl
dec
pushl
inc
hlt
jle
out
push
inc
or
xchg
shlb
jg
sti
mov
add
and
cmpsl
jp
add
adc
mov
mov
shlb
shlb
and
int3
incb
pop
add
out
mov
addr16
pop
and
fnstenv
adc
cli
call
addr16
pop
aam
dec
mov
rcll
xchg
inc
sti
mov
rcrl
pop
shll
dec
push
ljmp
add
or
xchg
out
sub
add
stos
pop
movsl
flds
cmpsl
enter
les
jno
lea
add
mov
fisubs
or
call
push
in
les
das
dec
cmp
cld
call
fisubrl
mov
into
fidivs
repz
repnz
sti
dec
jae
push
xchg
movsb
sbb
daa
push
fidivs
mov
inc
cmp
ss
movsb
loopne
ja
nop
out
pop
pop
out
jnp
out
fwait
mov
scas
mov
sbb
in
in
mov
push
addr16
cwtl
sarb
enter
adc
loope
adc
lea
dec
pop
xchg
aam
push
lret
neg
int3
inc
cmpsl
jecxz
aaa
js
arpl
scas
mov
xchg
jp
movsb
or
cmp
in
jne
jnp
inc
adc
nop
xchg
stc
jmp
push
or
repz
data16
scas
test
adc
xchg
mov
jbe
rcrb
lds
or
jmp
pop
test
popa
roll
jno
or
sub
popa
aaa
jmp
sbb
cmp
pusha
lods
in
negb
xor
stc
dec
rolb
inc
push
je
std
cli
xchg
push
sarb
lret
mov
test
jb
out
dec
jo
repnz
inc
lcall
les
dec
add
pop
pop
insb
fadd
movsb
xchg
dec
fwait
adc
mov
call
rclb
out
shr
jle
mov
insb
xchg
mov
push
repz
mov
mov
pop
test
ds
dec
push
inc
sbb
push
enter
sub
and
imul
cmc
in
xchg
xlat
fwait
xor
xor
xor
pop
int
pop
jl
call
shrb
daa
movsb
adc
dec
pop
and
inc
push
ss
adc
push
loopne
jge
addr16
iret
js
imul
cmpsb
mov
dec
pop
pop
faddl
add
test
jmp
jne
xchg
insb
cmpsb
leave
and
jp
jmp
in
pop
xlat
aas
and
shrb
outsl
das
movsb
lret
inc
dec
mov
test
lret
or
popa
xchg
mov
dec
mov
push
divl
dec
inc
cmp
outsl
icebp
push
cmpsl
xor
aam
aam
gs
mov
xor
jb
iret
adc
lea
loopne
sub
fsubrs
repz
test
out
cwtl
ret
jmp
iret
nop
mov
jecxz
sub
xor
ret
imul
pop
pop
std
cmp
cmp
insb
mov
push
je
jmp
push
jge
xor
in
fwait
in
mov
aam
sti
xchg
xchg
xor
int
mov
xchg
jle
std
pop
inc
mov
ret
jp
fldcw
ljmp
jo
or
mov
mov
xchg
arpl
dec
dec
cmp
add
jmp
lahf
adc
xor
movb
out
mov
cld
push
xor
inc
loop
or
mov
lods
jno
sub
push
dec
mull
and
outsb
repz
sub
mov
xor
mov
test
dec
adc
jb
roll
dec
ret
pusha
test
xchg
nop
push
add
sub
ds
int3
add
rorb
inc
loopne
push
push
cmp
mov
inc
pushf
push
mov
ret
bound
mov
mov
mov
outsb
and
push
cmpsl
lret
out
push
ficoms
ret
cmpsl
push
or
dec
icebp
sub
jb
cmp
lods
sub
aaa
push
sub
jl
cmpsb
rol
in
xchg
pushl
jmp
into
push
fdivrs
push
in
xchg
or
test
test
xor
mov
lahf
add
push
sub
and
push
mov
aaa
xor
push
cs
inc
movzbl
data16
sub
cmp
ljmp
lods
fwait
adc
dec
in
mov
pop
sbb
mov
loop
cwtl
adc
mov
lock
repz
adc
imul
clc
lea
add
jecxz
dec
hlt
add
fcomip
xchg
test
sub
mov
pop
inc
mov
pop
mov
sbbb
in
pop
stc
mov
ret
cmc
in
inc
ja
and
xor
mov
xor
mull
mov
mov
xchg
std
leave
je
xchg
enter
stc
movsl
je
xor
icebp
cmp
int
mov
jmp
push
lods
or
shl
call
mov
cmp
mov
cld
bound
shlb
jb
nop
ss
mov
pop
test
jno
and
mov
fidivrl
pop
push
mov
aaa
mov
mov
add
mov
in
sub
mov
inc
and
push
pushf
adc
lahf
jp
nop
pop
xchg
and
or
mov
adcl
test
jmp
jecxz
sbb
int3
mov
sbb
cwtl
fwait
add
xor
fdivs
ja
pop
dec
push
adc
arpl
xlat
andl
push
mov
gs
pop
je
aad
in
mov
in
fisubrs
adc
mov
mov
fstps
addl
repz
mov
and
xchg
mov
pop
test
adc
addl
and
ss
icebp
dec
dec
xchg
xchg
gs
aas
xorl
outsb
mov
jbe
je
dec
xor
mov
jmp
in
inc
cmc
xor
std
xchg
scas
inc
lcall
push
sahf
in
add
jbe
push
scas
fisttps
iret
scas
dec
movsb
mov
iret
mov
dec
pop
in
or
insb
negb
popf
mov
sbb
dec
idivb
out
imul
lcall
cmp
or
pusha
xor
add
sbb
ficoml
sbb
cmp
mov
sub
popa
pop
hlt
xor
iret
jns
cmove
push
inc
imul
lahf
mov
dec
xor
inc
into
inc
lock
pusha
in
or
cmpsl
mov
xor
push
cs
test
add
xor
pop
fildl
arpl
pop
jae
mov
bound
mov
int3
pusha
inc
in
ds
cmpsl
dec
jbe
loop
cmpsl
push
popa
xor
stos
faddl
adc
cmp
xchg
cmc
and
aad
inc
mov
cmp
pop
lahf
cmp
add
scas
push
push
push
out
stos
push
sbb
mov
pusha
mov
and
mov
loop
call
jl
jno
mov
jmp
testb
mov
arpl
xchg
lods
add
ret
mov
sub
insb
imulb
test
out
sub
pop
dec
dec
cmp
sti
lret
mov
popf
mov
xchg
notl
in
and
mov
or
sub
nop
dec
out
gs
sub
jae
xchg
inc
hlt
imul
mov
ja
xchg
inc
cmpsl
pusha
sbb
test
and
xlat
mov
or
mov
mov
scas
inc
xor
jge
cmp
add
xchg
jne
xor
fs
dec
out
jnp
adc
shlb
mov
add
jle
inc
inc
mov
push
lock
mov
or
jno
or
xchg
mov
in
outsl
mov
mov
and
jle
sub
push
xchg
jo
adc
lret
adc
negb
cmp
xchg
aas
push
out
sbb
lods
insl
shl
in
loope
imul
xchg
jb
mov
rorb
adc
jo
movb
cmp
xchg
push
add
in
pop
pop
ret
dec
cmp
add
cmp
pusha
mov
adc
or
aaa
jno
or
mov
mov
or
jge
cli
sbb
cmp
mov
in
iret
fsubrl
jle
clc
mov
outsb
rcll
in
arpl
jecxz
inc
adc
mov
and
xor
popf
jns
cmp
push
mov
add
fs
adc
mov
add
negl
out
dec
arpl
sbb
mov
add
pushf
idiv
ja
enter
enter
mov
into
fnstcw
jno
mov
cmpsl
jne
jp
push
dec
scas
loope
pop
sbb
out
sub
rorb
aas
call
std
addl
fmulp
addb
pop
inc
xor
mov
adc
rorl
cmpsb
arpl
sub
pop
mov
add
daa
imul
popf
dec
sbb
rorl
clc
or
and
movsl
mov
sub
ficoml
int
addr16
das
xor
mov
rorb
lcall
push
fmulp
jmp
inc
or
dec
popa
add
or
mov
push
cwtl
loopne
imul
push
fistps
cmp
loop
es
dec
push
daa
push
sarl
xchg
ljmp
add
pop
test
ljmp
or
in
dec
cmpsb
xor
in
dec
xor
inc
imull
cld
popf
jg
js
fwait
lods
xchg
jo
cmpb
sub
pusha
xor
int3
ss
mov
add
sbb
sub
mov
sbb
xor
cmpsb
stos
cwtl
icebp
cmp
push
dec
mov
sub
shl
sub
sub
mov
data16
sti
cmpsb
add
ret
xchg
sti
push
ds
jnp
jp
xor
cmp
sbb
sub
std
fwait
test
test
sub
sbb
push
sahf
fstp
mov
aam
or
iret
mov
inc
xor
sbb
cs
push
jno
scas
das
hlt
inc
jge
sbb
fstpl
cmc
inc
lahf
icebp
jmp
gs
aas
js
std
out
pushf
push
push
insb
popf
les
mov
pop
pop
in
jecxz
rclb
imul
aaa
xor
mov
adc
pusha
lods
aad
icebp
ret
and
push
fcmovu
adc
vsqrtss
das
xchg
out
sbb
lahf
repz
mov
rcrl
fldenv
dec
jmp
sbb
in
cmp
jno
cltd
in
dec
xor
ljmp
in
adcl
mov
and
mov
movsl
outsb
mov
or
int
scas
pop
xchg
mov
dec
mov
mov
andb
adc
jbe
out
push
inc
dec
dec
mov
jnp
icebp
sub
pop
pop
call
dec
xchg
test
stos
mov
leave
push
stos
enter
stc
xor
cmp
clc
mov
shl
fs
pop
push
loop
push
fnstcw
cs
pop
cmpsb
sub
xor
sahf
adc
or
lcall
cld
adc
clc
jl
pop
jl
mov
sbb
sub
mov
lret
cwtl
movsl
faddl
mov
outsl
mov
adc
xor
imul
mov
les
imul
dec
push
cmp
xchg
pusha
sub
jle
or
adc
mov
jnp
jno
bound
pop
fs
push
rolb
lods
jp
pop
xor
mov
cltd
decl
stc
lods
push
shlb
outsl
popf
push
push
in
daa
xchg
pop
ds
dec
sub
dec
mov
addr16
test
add
int
icebp
cmp
xor
das
in
jg
jae
dec
fs
mov
dec
lods
sub
jecxz
inc
or
repnz
loopne
fildl
insl
add
shll
inc
sbbb
mov
sub
lea
add
ljmp
int3
fstl
scas
mov
testl
inc
test
insl
or
mov
ficoms
dec
sbb
xchg
mov
arpl
outsb
mov
or
in
and
sub
and
pop
loopne
cwtl
inc
in
cmp
mov
add
mov
or
cmp
dec
jae
pushw
sbb
inc
adc
add
sub
cmp
and
jb
fsincos
dec
adc
cmpsl
jo
or
inc
inc
or
jo
fcompl
hlt
aam
sbb
movsl
rolb
lret
and
fwait
adc
and
cmpl
ljmp
pusha
sub
push
push
mov
mov
cltd
jmp
arpl
and
xchg
jmp
adc
movsb
out
cmp
push
dec
faddl
or
leave
push
sub
push
popf
or
pushl
mov
cmp
jg
xor
dec
js
mov
inc
divl
mov
cmp
xor
dec
jae
jae
lea
or
loop
movsb
dec
xchg
sbb
push
inc
in
sub
mov
gs
jmp
es
inc
cltd
jge,pt
inc
clc
push
xchg
rolb
loop
popa
loopne
adcl
andb
jp
pop
lret
ret
mov
xchg
xchg
in
pop
das
test
xchg
and
jecxz
and
stc
lret
mov
scas
int3
dec
and
xor
cmp
nop
xor
jl
sbb
pushf
ret
cltd
test
sahf
in
dec
jne
in
fsubrl
stc
scas
pop
leave
outsb
fldenv
or
dec
je
test
push
dec
ret
mov
mov
test
jg,pt
into
test
dec
push
mov
or
xchg
bound
clc
arpl
stc
in
lds
xlat
cmp
ret
test
sbb
lea
mov
pop
pop
loop
dec
sbb
xor
cmpsl
cmp
cmp
cli
dec
push
jecxz
into
enter
mov
imul
and
pop
pop
in
das
fcompl
push
das
xchg
jnp
xchg
lea
lret
push
lret
add
ret
movsl
ret
mov
lcall
mov
out
loop
mov
xchg
inc
sbb
jns
mov
pop
fnstsw
inc
pop
jne
pop
pop
push
cmpsl
mov
cld
jae
inc
into
fidivl
add
shrl
das
imul
jg
lock
add
popa
jo
push
and
pop
ret
lods
pop
and
fimuls
das
inc
lock
add
popf
popf
pop
and
mov
jg
pop
mov
hlt
loop
and
imul
imul
das
or
xchg
push
adc
lods
stos
inc
icebp
dec
mov
push
xorl
stc
cmp
pop
fistps
mov
adc
aam
or
cwtl
cmp
nop
int
iret
iret
addr16
pop
addr16
pop
mov
dec
xchg
int
scas
insb
pop
sbb
inc
xchg
movsb
sbb
sbb
add
shll
jl
push
push
cmp
repz
mov
cmpsb
mov
xor
push
dec
and
leave
inc
lea
dec
or
dec
fbld
lods
and
leave
subb
cld
insl
daa
aas
mov
cmp
popf
xlat
xchg
and
adc
push
sbb
call
iret
or
jecxz
shl
stos
jl
repz
and
repz
mov
cmp
and
mov
mov
mov
xlat
icebp
repnz
jae
cmp
loope
das
mov
loopne
mov
dec
adc
xchg
cld
pop
lock
xor
sub
pop
pop
sub
out
mov
popf
scas
dec
adc
pusha
les
orb
test
adc
insb
inc
push
pop
jbe
jmp
push
addb
xchg
adc
push
in
fcoms
xchg
cltd
out
jbe
daa
cli
inc
xchg
mov
mov
ja
repnz
icebp
push
pop
mov
mov
out
push
adc
testb
test
enter
mov
add
ljmp
add
mov
xchg
es
test
cmp
xchg
movsb
dec
push
stos
insl
outsb
data16
mov
les
mov
xchg
xorb
inc
xchg
push
in
lcall
ret
cld
adc
xchg
push
leave
in
dec
sti
cmp
or
mov
inc
outsb
push
xchg
das
add
sub
iret
fsubrs
mov
inc
call
jmp
insl
fcomps
push
dec
lcall
stos
les
and
insb
lds
pop
or
pop
add
cmpsb
xor
add
jns
imul
dec
inc
test
inc
and
sbb
xchg
or
ljmp
inc
xchg
xor
dec
out
jecxz
push
mov
in
mov
shll
cs
pop
add
outsb
test
ljmp
insl
outsl
testb
cmp
lds
mov
pop
hlt
dec
mov
out
jecxz
mov
jecxz
icebp
mov
xchg
add
in
pop
sub
sbb
arpl
sub
cmp
data16
stos
es
jns
out
sub
insb
push
and
adc
mov
aaa
cwtl
cld
scas
mov
xor
icebp
xchg
xlat
loopne
test
push
mov
jns
mov
dec
bound
dec
iret
cmp
mov
int3
cmc
gs
sbb
add
pop
xor
movsl
daa
sti
fs
mov
icebp
inc
jl
push
xchg
sahf
pop
pushf
mov
adc
test
pusha
sub
cmp
sub
rcrl
insb
adc
push
popa
jae
jecxz
test
push
lret
dec
lock
inc
shlb
inc
pop
push
push
or
or
dec
xchg
dec
testb
insb
inc
sub
in
sub
adc
cltd
and
sub
push
xchg
or
add
xchg
add
and
pop
mov
xor
repnz
out
aad
sar
push
shll
stc
fcoms
lea
clc
cmp
push
bound
repnz
ljmp
push
pop
shrb
add
mov
aam
popl
test
out
mov
mov
and
es
push
push
jl
in
xchg
bnd
jae
out
jno
mov
inc
and
fcompl
push
fwait
leave
and
sbb
mov
rcll
movsb
jno
enter
test
mov
popa
or
enter
pop
push
jno
aas
adc
jg
adc
pushf
ja
jnp
xchg
mov
jnp
sub
xor
ja
out
mov
inc
aaa
shl
adc
clc
rol
or
add
pusha
testl
mov
jno
xchg
ficoml
out
sti
fimull
repz
mov
daa
cmp
test
call
and
mov
adc
ljmp
je
mov
sub
repz
sbb
xor
cmp
push
jo
test
sahf
mov
mov
fdivr
fdivrl
xor
sbb
aam
mov
enter
daa
add
lcall
pop
push
xchg
xor
bnd
mov
or
sbb
and
mov
outsl
aad
out
ds
sub
push
inc
cmpsl
mov
es
into
mov
push
mov
push
xor
sub
or
rcll
jnp
adc
shl
gs
sarl
cmp
and
cmp
xchg
adc
bound
daa
add
mov
aad
ret
setno
or
int3
cmpsl
xchg
hlt
inc
jp
outsl
in
push
jmp
mov
imul
or
in
mov
inc
cmp
movsb
in
ja
test
out
sub
push
jo
or
jl
das
mov
clc
mov
mov
dec
mov
fnstcw
nop
adcl
testb
xlat
adc
repnz
mov
sbb
mov
inc
in
xchg
mov
mov
jmp
add
xor
push
cltd
mov
sbb
in
mov
push
mov
dec
mov
lcall
in
jno
je
decb
mov
push
cmp
out
and
dec
leave
adc
inc
xchg
sub
mov
clc
mov
scas
xor
in
inc
add
cmc
or
cltd
in
mov
int3
xlat
xchg
dec
xor
imul
or
mov
or
mov
ljmp
xchg
xchg
pusha
cltd
pop
adcb
sbb
inc
or
push
sub
push
stos
sub
xchg
aaa
push
xor
xchg
pop
fidivs
xchg
ljmp
mov
inc
mov
add
xor
mov
scas
es
cmc
dec
cwtl
sbb
jbe
pop
in
hlt
cmp
or
add
aaa
xor
test
push
cmpsl
push
xchg
mov
push
icebp
jg
cwtl
scas
pop
inc
repnz
push
dec
arpl
sti
jp
repz
lcall
pushf
jno
ret
xchg
mov
sarb
jae
addr16
lahf
xlat
mov
imul
repnz
mov
popa
into
lods
jg
aad
pop
stos
aad
lcall
inc
lea
cld
dec
jp
sbb
stc
mov
xor
push
rcll
pop
push
sub
add
mov
jnp
xchg
adcl
orl
xor
outsb
adc
push
push
sbb
movl
push
pop
dec
inc
sub
std
xchg
ret
hlt
sub
inc
push
subb
mov
call
inc
dec
int
mov
cld
nop
add
test
pop
test
xchg
in
mov
addl
or
scas
js
adc
jbe
in
outsb
ret
outsl
xchg
loop
gs
mov
negb
xor
call
or
inc
cmp
jns
push
add
jg
orl
mov
int3
sbb
ret
int
lea
ret
pop
mov
shll
sbb
cwtl
test
insl
cmp
lret
nop
add
cmp
data16
mov
sub
lea
mov
and
sahf
jnp
and
or
jbe
cmp
lds
test
mov
sti
pop
in
push
sbb
fisttps
aaa
movsb
pusha
andl
in
sti
cmp
popf
mov
sar
das
cltd
jae
dec
aas
push
mov
pusha
aad
sbb
data16
jne
loopne
and
mov
fstps
mov
push
add
add
addr16
cmp
or
mov
testl
pop
nop
sbb
adc
lea
xchg
insb
jae
cmpsb
jecxz
ds
mov
inc
cmpsb
push
or
andl
popf
fdivrs
cltd
pop
add
sub
push
jmp
mov
cmc
adc
xchg
cld
sbb
xchg
xchg
out
adc
pusha
in
xor
jg
popf
mov
out
xchg
dec
sbb
mov
mov
xor
cmp
xor
sub
xor
cltd
inc
icebp
sbb
mov
mov
jae
subl
inc
adc
xor
cmc
jmp
mov
xchg
test
fcmovnbe
add
cmp
aam
lds
int
pop
outsb
xchg
das
pop
sbb
ret
stos
pop
mov
xchg
notl
mov
sub
les
movsl
push
dec
cmp
add
sarl
icebp
mov
or
cmp
pushf
mov
and
fcompl
nop
cmc
in
mov
dec
mov
fcoms
scas
dec
adc
pushf
out
mov
pusha
lret
and
sbb
icebp
sti
daa
xchg
out
popa
movsl
bound
jecxz
loope
xor
jne
fwait
xchg
fnstenv
test
ficomps
mov
cltd
jno
or
in
sti
jle
mov
and
scas
inc
jp
cmp
cmp
dec
lea
fiaddl
loopne
imul
sbb
repz
es
mov
jbe
pop
gs
ja
dec
rcrl
loope
jae
js
shll
clc
mov
push
or
push
sub
fwait
add
arpl
aaa
outsb
in
jae
test
xor
mov
sti
sbb
iret
jecxz
adc
inc
jbe
imul
in
das
fsubrs
cs
lahf
xchg
dec
clc
data16
mov
shrb
adc
andb
add
dec
add
int3
xchg
push
fwait
es
mov
inc
mov
xchg
cmp
sbb
add
inc
jle
inc
lea
jae
imul
out
adc
push
sbb
in
push
jbe
mov
hlt
mov
dec
xchg
iret
cltd
jmp
jae
imul
and
fs
pusha
rep
lcall
inc
pop
push
fimuls
into
add
imul
xchg
cmc
cltd
add
repnz
or
dec
inc
inc
out
mov
lods
push
out
shrl
nop
je
sarb
insl
push
and
movsl
dec
or
addr16
push
adc
sub
lcall
xor
xchg
sbbl
popf
jecxz
and
out
push
inc
mov
stos
pop
sbb
cld
imulb
adc
divl
jmp
pop
or
test
js
mov
cmp
pop
mov
stos
shll
add
push
and
notl
xlat
sub
or
repnz
add
jnp
roll
xchg
cmc
imul
push
in
jb
enter
adc
bound
inc
pusha
xchg
cld
mov
jl
enter
jmp
jg
push
daa
xchg
xor
inc
sbb
adc
aas
jl
mov
or
lcall
mov
push
or
push
arpl
in
xchg
sbb
mov
loope
or
addr16
pop
cmpsl
mov
cmp
mov
shrb
aad
xlat
or
mov
add
jb
mov
dec
ds
cmpsw
outsl
pop
jmp
push
std
push
jg
xor
test
ja
lea
jne
cmp
sarl
mov
sbb
cltd
lahf
sbb
call
jp
add
loopne,pn
mov
pop
cmpsb
cmp
jle
in
jmp
mov
popl
inc
nop
out
mov
or
dec
mov
sub
or
mov
popa
ret
hlt
imul
mov
test
ret
or
pop
mov
push
les
xchg
fcomps
push
das
je
and
loopne
dec
aaa
fldcw
mov
arpl
shr
add
loop
inc
insb
dec
dec
fstpl
in
mov
mov
dec
jle
mov
jb
xchg
aas
rcr
mov
mov
aad
lods
fldt
addb
push
sub
push
xor
lcall
sub
inc
mov
repz
aad
in
cmp
xchg
mov
nop
into
lret
xor
mov
xor
dec
nop
je
pminub
mov
in
repz
push
fidivrl
icebp
inc
adc
sahf
mov
push
xchg
xchg
sub
mov
sbb
push
sbb
int3
jge
jnp
in
mov
pop
mov
xorb
imulb
lds
insl
mov
push
ja
into
jp
push
sub
add
mov
scas
fs
push
sub
sbb
push
pushf
lds
out
inc
fsubr
cmp
mov
push
add
scas
mov
mov
hlt
push
pushf
sbb
fdivrl
and
or
inc
lods
andl
xchg
stos
jmp
jno
mov
xchg
scas
cmp
or
cmp
inc
jp
out
shl
mov
adc
xlat
pop
mov
pop
pop
sbb
xor
xor
sub
test
je
mov
subl
mov
insb
fneni(8087
popf
pop
cmp
lcall
rolb
push
scas
je
cs
jle
and
shlb
bswap
movsl
xchg
pusha
mov
xchg
inc
test
aam
mov
xchg
sbb
jge
das
inc
inc
out
dec
cmpsl
imul
mov
xchg
pushl
sbb
aaa
lods
lods
out
adc
xchg
jmp
lret
test
jp
repnz
or
push
les
cs
les
stos
add
mov
jle
adc
adc
adc
pop
orl
adc
pop
loopne
stc
xchg
jb
stos
sub
mov
jnp
xchg
jl
sub
call
push
add
hlt
test
setg
pop
jmp
fiadds
mov
stc
fdivp
ss
adc
negb
jbe
cmpl
or
stos
aas
xchg
inc
xchg
push
out
jmp
mov
divl
bound
pop
cmpsl
xchg
leave
or
fcoms
mov
rol
mov
das
dec
jne
pop
movsb
jg
xor
sub
pop
loopne
dec
add
xchg
es
jle
stc
push
pop
std
mov
cmp
cmp
or
xchg
or
outsl
sahf
or
divb
test
maskmovq
mull
jns
gs
mov
daa
mov
mov
sbb
push
mov
jnp
movsl
mov
pushf
in
cs
pushf
inc
icebp
jbe
cmp
inc
cmpl
adc
icebp
push
insl
repz
idivb
xchg
rol
xchg
xchg
mov
cwtl
cmp
mov
and
ficompl
arpl
shll
sbb
mov
jp
out
push
cmp
cmc
mov
and
xlat
sbb
das
inc
xchg
mull
mov
imul
int3
adc
or
and
das
ss
stos
adc
lret
and
inc
pop
jmp
jg,pt
in
push
cmc
cmc
add
jl
das
mov
inc
jge
pop
fidivl
imul
add
mov
daa
leave
add
adc
sub
jne
adc
xor
loopne
adc
inc
outsb
fidivl
rolb
push
mov
adc
es
xlat
pop
ds
push
imul
or
dec
sub
mov
lods
pusha
repz
imul
stos
dec
scas
lret
out
out
aam
call
scas
mov
xchg
mov
stos
popf
jg
call
addr16
sbb
mov
push
ja
add
ss
xor
sub
scas
scas
outsb
es
enter
adc
xchg
sub
iret
and
sbb
mov
pop
jmp
xlat
sub
lds
in
scas
xchg
js
mov
xor
push
mov
pop
in
sub
pmaddwd
aad
xchg
xor
add
cmpsb
xor
pop
and
inc
cmp
push
xchg
cmc
pop
lret
dec
pop
pushf
cmp
xor
push
enter
push
repz
jg
jecxz
push
mov
push
adc
push
sbb
lods
pop
addl
fists
inc
pop
xchg
jecxz
aaa
add
sar
stc
dec
fidivs
mov
shll
test
in
mov
shlb
mov
pop
mov
inc
outsl
idivl
mov
lret
sahf
clc
ljmp
xchg
shrb
insb
cmp
std
add
jge
jb
sbb
out
insl
sbb
in
lods
fdivrl
mov
bound
je
in
out
fsubl
lock
adc
dec
add
fstpt
inc
sbb
jp
pop
xchg
xchg
in
xchg
xor
mov
pop
lcall
cmp
aaa
jp
jle
enter
or
cld
ljmp
mov
sahf
outsl
leave
into
aam
insb
push
shrb
lea
mov
and
dec
nop
xchg
xchg
cmpsl
mov
mov
movsb
mov
sub
push
out
mov
loope
inc
imul
add
xor
pop
es
inc
stc
sbb
inc
bound
jne
aas
pop
push
xlat
lahf
sbb
js
mov
mov
cmp
sub
outsb
adc
stos
pushf
fwait
xor
push
mov
and
mov
fisubrl
pop
push
push
mov
push
mov
sub
stos
cmp
xor
cmp
xchg
push
fld
xorb
lods
dec
cs
cmp
pop
in
sbb
sti
xor
int3
dec
dec
mov
inc
pop
xorl
xor
xchg
xor
add
xchg
push
stos
lds
push
xor
leave
adc
adc
enter
out
mov
test
mov
mov
sti
xchg
mov
or
loop
mov
in
rorl
push
or
in
push
mov
repnz
dec
test
pop
iret
adc
out
dec
sub
lret
mov
push
shll
mov
inc
int3
mov
and
lahf
mov
pop
adcb
mov
movsl
push
or
adc
and
movsb
sub
out
mov
aaa
cs
sbb
scas
cmp
cwtl
outsl
fsubrs
push
ror
push
loop
xchg
repz
jp
sbb
cwtl
cs
bound
mov
stc
jl
mov
fnstcw
out
pop
insb
in
cmp
out
in
jmp
mov
push
sahf
aad
lcall
or
jb
sbb
in
lret
xchg
sub
jl
or
shll
int3
mov
iret
dec
jp
mov
bound
cwtl
loop
push
lret
loope
fsts
mov
pushf
sets
arpl
mov
xlat
popa
lods
pop
clc
aam
pop
and
push
fisttpl
jp
add
cmp
stos
mov
scas
push
pop
pop
cmp
mov
add
mov
cmpsb
repnz
sub
loop
or
sbb
pusha
popa
dec
push
jl
lock
sbb
out
and
in
jge
inc
push
xchg
adc
mov
ja
arpl
cld
lock
cmpsb
fnstcw
out
sbb
aaa
cltd
pop
push
push
out
add
pop
mov
mov
jne
mov
add
add
sbb
mov
mov
pop
arpl
loop
xor
stos
mov
or
movsb
leave
xchg
js
shlb
pop
pop
nop
es
iret
fwait
xchg
sbb
cmp
mov
dec
iret
adc
fsts
imul
add
sbb
sbb
push
iret
inc
push
inc
aas
cmpsl
sbb
xchg
test
daa
sbb
dec
pop
cmp
push
fcompl
push
movsb
movsl
sub
adc
or
daa
outsb
add
addb
inc
jo
sti
stos
mov
mov
sti
xor
imul
inc
pusha
inc
lods
outsb
enter
imul
mov
es
repz
cli
fidivrs
out
int
jns
fcomi
das
jg
sbb
ja
adc
xchg
mov
cmp
iret
cmpsb
mov
notl
addl
movsb
fcompl
stos
xchg
xchg
int3
clc
movsb
lret
sub
test
call
in
jle,pt
sub
movsl
sbb
daa
stos
out
jge
jbe
or
je
push
sti
loope
xor
dec
into
ret
mov
and
xchg
or
shlb
test
movsb
push
adc
aas
mov
movsb
addr16
movb
es
fisubrl
das
ficomps
aam
mov
xor
pop
leave
iret
ds
aas
scas
jbe
stos
dec
in
cltd
add
aas
mov
push
adc
pushf
mov
js
pushf
xchg
add
imul
lds
out
icebp
dec
push
sbb
sub
cmc
cs
pop
daa
sbb
sbb
dec
mov
mov
xor
jl
jl
pop
sbb
mov
int3
daa
lcall
mov
into
popf
into
dec
push
stos
popf
and
cmp
and
int3
ror
lods
dec
jge
sbb
data16
sbb
fisubrs
and
xor
dec
dec
scas
pop
fsubr
fmuls
xchg
scas
dec
sahf
subb
fisttpll
sti
insl
int3
xor
stos
mov
jmp
xchg
shll
adc
mov
mov
shlb
aad
lock
loop
cmc
gs
mov
mov
shrl
lock
ret
sti
jne
enter
dec
leave
lcall
dec
aaa
or
push
mov
jo
push
hlt
pop
xchg
in
inc
xor
xchg
cmp
jbe
jbe
cmc
sar
fsubs
lods
cmpsb
pop
pop
xchg
call
inc
sub
sbb
movnti
or
push
pop
aas
in
and
outsl
outsb
push
out
lret
fstsw
loop
pop
inc
jle
loope
sbb
xchg
push
or
ljmp
pop
inc
test
xchg
aad
mov
sarl
xlat
outsb
mov
jp
outsl
movsb
lcall
jge
call
mov
aas
sub
mov
adc
ret
adc
sarb
adc
xor
inc
jp
daa
add
mov
dec
fistps
mov
jb
and
sub
adc
cmc
push
xchg
sub
in
repnz
sbb
sbb
pop
mov
jl
push
inc
xor
cs
inc
scas
inc
sarb
jno
bound
mov
ja
jg
inc
lods
sahf
ret
addr16
andl
das
leave
xlat
add
jns
sub
movsl
imul
cmp
or
xor
inc
push
pop
and
sbb
jp
clc
pushf
dec
add
xor
arpl
jmp
in
ljmp
xor
sahf
sahf
and
cwtl
leave
xchg
jge
mov
mov
xchg
push
aad
xor
mov
clc
test
xchg
sbb
or
inc
lods
xor
mov
das
mov
das
xor
lret
xor
push
mov
out
lcall
and
mov
or
outsl
lock
mov
jb
rorb
fs
fcmovnb
sub
test
adcl
sub
mov
arpl
insb
aad
and
fwait
ja
cmp
into
jbe
sub
insl
and
or
mov
sub
into
cmp
jbe
mov
mov
sti
pop
mov
call
pop
push
clc
enter
rorb
jnp
inc
imull
sbbl
and
adc
nop
fists
popf
subb
mov
jbe
jmp
das
jno
dec
aas
sysenter
repz
jno
jbe
jmp
dec
icebp
push
ss
mov
pop
cmp
cmpsl
mov
push
ljmp
lock
sub
xor
imul
jne
lret
cmp
jb
mov
and
mov
fnstcw
fcom
push
sub
mov
fdivr
sahf
test
jns
in
xor
jae
adc
out
arpl
jmp
mov
lock
into
push
je
jns
or
int3
lods
fildll
and
or
loope
ja
mov
dec
add
pushf
add
arpl
loop
cmp
outsl
in
lea
orl
int
dec
xor
mov
mov
sbb
addr16
outsb
push
pop
pusha
cmp
xchg
xchg
jmp
xor
out
in
pop
loope
mov
cmp
insb
add
jecxz
or
mov
divb
push
dec
testb
inc
xor
inc
insl
push
pop
push
add
jno
lock
cli
mov
repnz
sub
jmp
in
lcall
leave
shl
sbbb
call
or
pop
cmp
std
out
roll
repnz
fldcw
mov
mov
and
push
scas
es
pop
or
add
leave
mov
xchg
xor
jmp
ret
push
inc
sbbb
popf
inc
test
mov
std
inc
mov
fs
std
mov
mov
nop
pop
ret
push
mov
sub
pop
repz
mov
xor
mov
fxch
cmp
or
cmp
enter
lods
ret
add
nop
pushf
mov
cli
jbe
mov
cs
mov
std
repz
sbb
dec
pop
xor
mov
js
mov
or
sub
mov
sbb
or
push
or
mov
insl
popf
push
mov
adc
xor
loop
fs
xor
xchg
jo
out
mov
pop
rcrl
add
mov
xor
cmp
fimull
mov
xor
pop
adc
adc
jp
sahf
pop
movsl
repz
std
mov
pop
ret
jg
add
add
or
sahf
jo
xchg
fxch
push
adc
cld
ljmp
dec
movsb
mov
or
add
sub
mov
fists
test
daa
stc
mov
add
pop
and
sbb
iret
sub
or
loopne
jecxz
aad
mov
imul
call
jns
push
mov
cmp
mov
stos
icebp
int3
add
movsb
jnp
addr16
sbb
data16
adc
in
mov
inc
outsl
mov
mov
jno
pushl
xor
sub
ret
or
loopne
mov
xchg
inc
cld
sub
fwait
dec
fs
shl
loopne
add
push
adc
jge
xor
jle
mov
mov
jb
cs
hlt
rol
ja
mov
daa
mov
icebp
jle
popa
test
in
push
xchg
xchg
xor
int
enter
xlat
lods
outsb
and
xor
add
jg
outsb
rolb
xor
adc
xchg
lea
mov
ja
inc
adc
shr
dec
xchg
lret
pusha
int3
pop
mov
lret
xchg
mov
mov
xchg
xchg
adc
insl
or
push
outsb
addr16
fnsave
mov
sbb
mov
mov
mov
inc
jnp
gs
and
cltd
out
fsubrl
push
jecxz
xchg
push
loop
inc
sbb
jmp
jp
mov
aad
push
push
addr16
addl
mov
inc
cmp
clc
bound
gs
adc
addr16
push
out
xorb
js
sub
je
das
shl
mov
mov
inc
mov
jno
or
pop
mov
lahf
or
or
mov
enter
push
insl
fistpl
xchg
mov
push
mov
in
inc
int
and
push
lahf
jge
imulb
lds
clc
dec
icebp
mov
jmp
xor
mov
popf
push
data16
fisubl
gs
push
inc
aam
mov
cmpsb
cmp
out
jmp
jb
lcall
push
call
jb
lret
js
mov
fdivl
pop
leave
test
outsl
xor
pop
dec
and
iret
outsb
shl
ret
ficoml
cmp
cmp
bnd
cld
cld
fildll
pop
adc
stos
mov
inc
push
cmp
jmp
loop
lcall
xor
inc
xchg
jl
fsts
dec
fsubrp
push
fwait
sbb
xchg
xlat
lcall
dec
jbe
ret
jmp
cmpsl
dec
lock
pop
js
daa
jns
xchg
cmp
mulb
cmp
loope
int
cmp
cmp
sbb
int
jne
fcmovbe
ret
push
inc
js
push
jne
add
or
scas
lds
push
rcrl
sub
or
loop
cs
inc
lret
and
xor
addr16
and
inc
inc
pop
inc
mov
mov
jne
stos
cmpsb
lods
in
test
lahf
in
sbb
dec
movsb
orb
fsubrl
adc
stos
fldcw
sar
jge
dec
xlat
mov
out
adc
mov
sbb
xor
and
dec
in
xor
mov
in
adc
mov
pop
sub
adc
xlat
ss
std
add
push
jecxz
fistpl
mov
ja
mov
sbb
sub
xchg
mov
lea
pop
mov
or
jmp
pop
jl
jns
punpckldq
jge
inc
cmp
rorl
in
xchg
clc
mov
repnz
sbbl
sub
xor
pop
xchg
xor
xchg
and
es
icebp
sti
in
shll
and
shlb
mov
ss
mov
mull
fidivrs
mov
test
xor
cmc
out
and
aas
xchg
js
inc
mov
ret
arpl
sub
out
fdivl
jle
and
jbe
andl
mov
pop
ja
sub
and
int3
iret
das
and
or
js
insb
mov
jmp
loope
jnp
mov
and
push
scas
or
add
daa
mov
mov
test
ds
push
roll
mov
movsb
rcr
stos
push
sub
call
pop
push
mov
mov
jg
mov
lcall
push
jns
jmp
xchg
inc
and
jbe
mov
mov
insl
or
fs
jb
cmp
lret
push
shl
and
fwait
in
mov
fidivs
movsb
cmpb
aas
rorb
adc
inc
movl
fisubrs
sahf
lods
jmp
inc
and
inc
pop
mov
adc
div
or
hlt
pop
jge
aam
push
push
xlat
arpl
sub
inc
aam
lods
pop
mov
xor
push
ret
mov
push
std
fcompl
push
ficoms
dec
mov
jg
inc
test
sub
test
repnz
popf
pop
adc
mov
pop
adc
sbb
sarl
xor
rcr
movsb
jns
not
daa
dec
push
jp
xchg
aad
xchg
cmpsl
cmp
xchg
mov
add
dec
xchg
cwtl
int
lods
ret
xchg
out
push
add
out
movsl
sbb
inc
mov
cli
out
lock
cmc
inc
xor
jge
sbb
scas
push
std
icebp
dec
std
pushl
and
aad
add
xchg
push
cmp
jns
shrb
inc
cmp
in
cwtl
out
pop
lods
lea
mov
je
xchg
mov
in
lea
sbb
mov
int3
xor
push
xchg
pop
sub
mov
cs
dec
jl
ds
loope
lods
adc
mov
push
gs
stos
imul
and
add
je
stc
xor
jp
xchg
jg
cmc
daa
lret
or
lock
frstor
ds
repz
not
into
cmp
nop
aas
xor
in
loop
daa
mov
divl
inc
ds
gs
insl
pop
xchg
mov
or
bound
inc
and
xchg
imul
aam
lcall
scas
enter
jns
jb
mov
test
into
inc
or
sbb
cmp
aas
or
adc
or
lahf
jmp
icebp
xchg
ret
push
lock
adc
add
or
pop
filds
stc
mov
fstps
in
lret
jne
sbb
iret
lahf
arpl
movsl
and
movsl
fst
xor
jae
scas
ficoml
push
xchg
clc
enter
and
cmc
imul
ljmp
test
sbb
dec
aam
out
jae
xor
jp
pushf
xor
shl
mov
pop
imul
pop
aas
or
test
inc
fcomp
and
push
mov
imul
in
loop
add
test
add
nop
sub
mov
adc
pusha
inc
push
in
cmp
andb
popa
add
xor
addr16
push
fnstenv
mov
aaa
lods
das
jbe
jns
jge
adc
test
insl
cli
cmpsb
xchg
mov
in
movl
mov
std
pop
and
loop
inc
xor
inc
scas
jnp
sarb
mov
mov
mov
pop
add
test
adc
call
or
sbb
mov
mov
cmp
aad
in
insb
inc
push
fucomi
ds
dec
sbb
adc
cli
imul
fwait
add
mov
movsb
and
les
fisttpll
pop
and
idivl
lcall
loopne
mov
rcrl
xchg
sbb
cltd
dec
adc
pop
cmp
mov
pop
mov
shr
mov
add
mov
out
add
jle
jl
jle
push
aas
jno
gs
jg
lea
ljmp
pop
aas
mov
sub
jnp
and
inc
add
jmp
mov
in
repz
into
test
mov
test
mov
adc
xchg
ljmp
inc
or
mov
fisubrl
fcoms
mov
push
mov
inc
inc
and
inc
pop
jne
xchg
cli
rorl
push
xchg
iret
les
dec
xchg
sub
add
dec
cmp
pop
xor
jne
inc
sbb
mov
in
rep
out
push
insl
pop
inc
xor
mov
and
adc
xor
push
jns
addr16
leave
mov
call
mov
or
fsubs
testb
sub
lods
pop
cmc
lcall
or
inc
pop
fistps
arpl
sbb
push
ljmp
or
inc
inc
gs
jb
movsb
xor
fcomi
xchg
mov
pop
sub
jge
push
fwait
test
mov
test
bound
or
addb
fildll
out
out
xor
mov
daa
jns
sbb
xlat
mov
pop
mov
xchg
cwtl
push
rcrl
mov
xchg
stos
aas
add
mov
dec
jmp
cs
pop
sbb
cmpsl
int3
sub
in
movsb
mov
inc
mov
push
mov
mulb
inc
add
enter
test
shlb
mov
xchg
or
or
mov
and
pop
lods
lods
sti
xchg
xchg
ds
test
sbb
xor
pop
shll
pop
pop
pop
push
rorb
js
jecxz
inc
stos
cli
inc
cmp
ja
push
out
out
xchg
fsubs
mov
aaa
sbb
xor
jne
pushf
sbb
push
ja
adc
sbb
xchg
xor
or
pop
push
fsubr
mov
inc
clc
cltd
lret
jo
adc
dec
loopne
xchg
cmp
jno
test
fiaddl
cmp
into
stos
adc
mov
jge
lea
pop
jecxz
sub
fsub
pushw
jne
mov
addr16
mov
jb
movsl
push
xor
pop
sti
mov
cltd
mov
xorb
scas
adc
nop
dec
fildl
mov
push
test
sbb
aam
gs
insl
sub
mov
repz
filds
movsl
lock
xchg
ret
add
pushf
mov
clc
fldenv
add
inc
orl
mov
movsb
dec
dec
cmp
xchg
bound
push
lea
cwtl
xchg
mov
std
test
add
sbb
cli
sub
jmp
sub
dec
in
cmp
lret
inc
arpl
push
fisttpl
movsb
arpl
xchg
adc
or
sbb
mov
loop
adc
hlt
jnp
mov
pop
clc
adc
jg
cmpps
inc
pop
and
insl
xchg
jns
test
cmc
js
push
push
xchg
popa
inc
loopne
xchg
dec
push
loop
test
in
mov
fiadds
adc
push
push
stos
into
lret
xor
sahf
bnd
outsb
in
sub
xchg
sub
mov
or
mov
push
enter
jecxz
ss
decl
shrb
xchg
add
mov
jns
lea
sub
stos
or
sub
xor
add
mov
and
ret
pop
adc
cmp
mov
test
add
js
les
jl
push
sarb
and
or
mov
xchg
adc
lret
pop
fnstenv
test
mov
or
mov
or
sbb
mov
push
fsts
loopne
dec
out
push
sub
mov
jae
hlt
push
push
pop
mov
dec
adc
sbb
push
outsb
mov
mov
mov
sbb
cli
mov
fisubrs
mov
mov
negl
sbb
push
aas
cld
shrb
imul
xchg
insb
test
push
leave
sahf
push
scas
xchg
push
jb
test
push
pushf
or
jb
xor
je
in
bound
inc
inc
insb
clc
sub
fsts
push
call
fsubr
mov
sahf
leave
sbb
shll
mov
sub
cli
xchg
fistpll
pop
inc
jo
into
rolb
or
lahf
pop
pushf
inc
aam
rcll
adc
lock
jns
fwait
movsl
das
mov
jnp
sti
sbb
jle
stos
pop
aad
sarl
loope
cli
imul
mov
mov
iret
mov
push
fcmovnu
mov
push
pop
add
sbb
lods
xor
xor
cmp
movsb
jle
mov
arpl
inc
inc
push
push
jp
xchg
jecxz
cmp
inc
xchg
dec
sarl
pusha
push
in
inc
sbb
enter
repz
test
dec
adc
andb
int3
movsl
adc
mov
sbb
mov
mov
hlt
orb
or
mov
pop
cmpsl
inc
mov
pop
out
adc
mov
and
inc
mov
mov
cmp
dec
jbe
mov
popa
push
mov
arpl
cmp
outsl
jge
dec
stos
mov
mov
mov
adcl
inc
popf
leave
jo
xlat
jae
data16
nop
orl
or
jb
add
sub
enter
cmp
les
push
cs
shlb
sub
xlat
movsl
pop
data16
cli
cs
jl
in
jo
jl
test
das
and
rorb
lock
fnstenv
icebp
je
out
dec
ja
idiv
jb
sbb
enter
xor
push
iret
cmp
inc
cmp
pop
lea
push
mov
shrl
xor
lods
idivb
outsl
insb
aad
cmp
sbb
ret
or
fbld
sub
pop
stos
fwait
adc
test
cmp
iret
ror
push
inc
sbb
cli
jle
shl
dec
test
popa
mov
es
rol
xchg
xor
test
dec
pusha
lret
pop
lret
cmp
xor
iret
rcrl
sub
std
mov
adc
decl
pop
imul
cmp
mov
dec
sti
andb
and
dec
sbb
xor
cmc
adc
push
popa
ja
rcrl
aaa
mov
data16
mov
mov
or
sti
pop
adc
xchg
fwait
jno
fcomps
mov
push
add
in
rcll
or
add
push
pop
mov
cli
push
stc
pop
lods
loope
imul
out
mov
xchg
pop
push
sub
mov
add
stos
nop
clc
ret
and
push
test
inc
adc
cwtl
mov
add
inc
jae
in
mov
push
xlat
insl
pusha
push
loop
std
nop
ljmp
add
ret
inc
mov
int
ljmp
mov
mov
sbb
sub
xchg
cmp
fnstcw
shrb
add
sub
pop
lret
cmpsb
in
loope
or
rorb
fsubrs
push
push
lahf
ret
pop
in
fdivs
hlt
cmpsl
mov
loop
ja
into
fwait
inc
arpl
cmp
sub
iret
je
xor
cmc
pop
ret
mov
pusha
mov
sub
jp
ja
cmp
dec
cmc
cmc
insl
mov
sub
mov
mov
add
jmp
push
jg
mov
cmp
int
xor
jp
pushf
mov
cmp
lds
xor
cltd
mov
pop
xchg
dec
dec
push
loope
les
mov
or
orl
inc
sub
clc
rcrl
adc
movsl
and
shr
inc
ljmp
or
mov
sahf
je
arpl
hlt
in
in
jb
stos
adcb
sbbl
int
faddl
pop
gs
jbe
and
insl
xchg
pop
xchg
ret
mov
icebp
pop
push
sub
cmp
mov
cli
cmpsb
push
repz
callw
orl
fnstcw
pop
adc
mov
mov
lea
and
sub
add
insb
stos
add
mov
sub
push
out
sub
inc
cmpsb
sahf
inc
pop
sbb
test
sub
in
fdiv
and
jns
cmc
decl
pop
push
shl
insb
sub
cmp
dec
rorl
dec
sbb
out
les
popa
aam
loopne,pt
rcll
lahf
fsubs
jae
cmpsl
xchg
inc
out
ss
inc
insb
mov
arpl
mov
or
adcb
cmp
cmp
lret
scas
dec
push
into
cld
adcl
jle
int
lret
pop
jae
xchg
inc
jns
xor
jl
mov
jae
xchg
stc
jb
xlat
lds
outsb
incb
arpl
cmpsb
imul
ds
cmp
call
sub
add
xchg
sub
loop
fwait
sarb
mov
or
dec
les
xlat
inc
fs
movsb
push
cmpsb
mov
cmc
push
xor
mov
clc
sarl
pop
popa
mov
dec
xchg
mov
mov
mov
xlat
pop
lock
loope
jno
sub
arpl
xlat
dec
sti
xor
fidivrs
xor
mov
notb
pusha
and
cmpsl
pop
jo
dec
fidivl
cmp
scas
fwait
sahf
mov
cmpsb
jecxz
adc
enter
cmp
daa
mov
jnp
aas
push
insb
add
rolb
sti
stc
insb
add
fcmove
int3
das
cmc
xor
aas
imul
roll
mov
dec
xor
xchg
imul
pop
les
push
xchg
in
cltd
xchg
ja
lret
xor
lock
push
shrb
test
or
lcall
cmp
lods
scas
ret
repz
sti
sbb
mov
aaa
stos
roll
push
jo
xor
insl
je
mov
mov
icebp
dec
call
mov
adc
in
in
xor
loopne
std
mov
jg
pop
mov
test
repz
imul
or
dec
pop
pop
or
cmpsb
fnstenv
add
push
jmp
popa
cmpl
dec
jle
mov
mov
outsl
out
mov
lahf
pop
xlat
aam
pop
les
or
movsb
pop
shlb
pushf
fistps
sbb
sub
js
loop
dec
jne
xor
push
popf
dec
imul
in
xor
movsl
call
outsl
inc
inc
xchg
xchg
dec
dec
push
cmp
xchg
push
imul
outsb
jle
xor
inc
cmp
push
sub
orb
inc
add
add
jb
fwait
test
sbb
dec
mov
mov
xchg
push
fiadds
push
lahf
add
push
pop
jae
mov
add
mov
out
inc
cli
sahf
std
lods
loopne
int3
adc
sbbb
js
leave
sub
orb
pushf
out
ds
ja
cmp
push
pushf
inc
jge
pop
pop
into
xor
adc
fildll
movsl
jecxz
adc
psrld
ffreep
fwait
ret
pop
dec
inc
sbb
inc
pop
or
orl
ds
adc
push
or
jo
pop
cmc
pop
pop
enter
insb
mov
adc
or
sub
test
dec
jno
mov
dec
adc
lods
cmpsb
pop
mov
test
push
mov
lods
js
fsts
adc
and
outsb
sbb
iret
pop
movsl
sbb
test
push
xchg
cmpsl
stos
or
adc
data16
test
xchg
mov
shr
cmpsb
ss
imul
movsl
dec
movsl
mov
cmpsl
add
in
push
arpl
push
jnp
push
mov
call
cmp
into
imul
inc
jge
dec
mov
cmp
ds
pop
xchg
aaa
aad
mov
fsubl
ss
adc
jns
ret
fdivr
lcall
or
push
inc
and
pop
jp
out
out
shl
pop
jecxz
out
xchg
sub
xchg
mov
sbb
or
je
enter
fisubrl
in
xor
mov
push
cltd
out
and
or
sbb
lret
shrl
fs
popa
xorl
icebp
push
lea
rclb
lahf
push
jmp
push
test
mov
inc
xor
mov
popa
mov
lea
aaa
iret
icebp
jmp
inc
orb
xor
shll
cmp
jp
xor
mull
inc
cmp
push
js
sarl
rorl
dec
dec
mov
jo
xor
into
mov
push
negb
cli
fmuls
out
mov
into
dec
filds
sbb
rcll
mov
push
push
stos
lret
pop
roll
adc
movsb
lock
jno
mov
push
xchg
sahf
fs
dec
pop
xor
push
mov
xchg
jo
ljmp
xchg
mov
jle
stc
inc
dec
pusha
sub
lret
xor
int
inc
pop
mov
mov
jmp
test
mov
jge
sub
int3
xor
sbb
sub
or
test
or
sub
mov
xlat
push
jp
add
pop
movsl
add
test
add
add
jne
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
popa
xor
ret
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
