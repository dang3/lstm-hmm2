mov
sub
mov
andl
andl
test
push
push
push
lea
jle
lea
mov
xor
cmp
jle
mov
mov
mov
cmp
jne
cmp
jge
mov
mov
cmp
jle
mov
mov
inc
cmp
jl
incl
mov
addl
cmp
jl
cmp
jge
xor
jmp
mov
sub
sub
inc
xor
dec
test
jle
lea
lea
lea
mov
mov
mov
sub
inc
add
add
dec
cmp
jl
sub
xor
inc
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
push
pushl
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
call
pushl
mov
call
push
push
pushl
call
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
xor
test
jle
push
lea
push
mov
cmp
je
inc
add
cmp
jl
pop
pop
cmp
jl
xor
jmp
test
jle
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
inc
xor
test
mov
jle
lea
mov
inc
add
cmp
jl
pop
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
pushl
pushl
jne
push
pushl
call
jmp
dec
push
call
pop
ret
int3
int3
int3
int3
int3
call
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
pushl
mov
pushl
mov
push
call
mov
mov
lldt
in
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
push
call
mov
mov
movzbl
sub
je
incl
call
call
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
lcall
subb
mov
xor
cmp
sub
pop
jb
bound
push
lcall
sbb
lret
shr
ret
or
cmp
and
pop
adc
jp
push
subl
fwait
ret
jmp
cli
loop
ljmp
addr16
add
and
inc
repz
lret
mov
sbb
sub
test
push
cltd
dec
pop
mov
out
jne
ret
jle
jns
sbb
pop
jg
lahf
mov
lret
aam
or
pop
aaa
jp
xchg
pcmpgtw
and
sbb
cs
mov
loop
scas
cmpsl
xchg
mov
jp
push
fwait
loop
mov
and
mov
cmp
pslld
std
movsl
and
icebp
fsubrs
lret
inc
aaa
insl
dec
bound
sbbb
sbb
fiaddl
mov
push
jp
jb
push
std
xchg
push
dec
and
call
xchg
inc
pop
jp
pop
and
pop
jp
push
push
mov
mov
subb
cli
lret
repz
sub
cmp
or
sbb
push
jne
push
push
not
out
mov
test
mov
pop
dec
inc
dec
insl
pop
pop
das
xor
push
pop
das
cmc
lret
aad
fiaddl
cli
mov
scas
pop
dec
outsl
inc
cmp
inc
pop
add
or
push
out
repz
sahf
lret
shr
ret
or
cmp
sub
pop
jb
bound
push
lcall
sbb
lret
shr
ret
or
cmp
sub
pop
jb
bound
push
lcall
xchg
mov
into
push
pop
mov
or
out
stos
pop
dec
loopne
ret
adc
adc
or
in
ret
cmp
mov
jmp
jl
sbb
pop
fadds
push
add
xor
mov
lock
jns
ds
inc
jns
cmp
inc
jno
lcall
dec
addr16
lahf
mov
ficoml
or
lock
sub
mov
test
xor
into
push
cmp
mov
clc
cmpsl
into
aas
shr
hlt
jg
lods
dec
sub
ror
xor
jge
insl
movsl
mov
jge
jmp
ljmp
lret
imul
jae
cmpsb
sarb
cmp
call
mov
add
cltd
push
out
jmp
jl
stos
jae
enter
sarl
cmp
jle
jmp
test
and
lods
icebp
fidivrl
test
push
sub
imul
cmp
jbe
int
popa
outsl
push
lods
lods
into
out
mov
nop
lock
aas
mov
nop
cmc
nop
pop
dec
lea
push
xchg
sub
daa
scas
pop
cmpsb
and
cmpsl
sahf
icebp
test
pop
sub
xchg
insl
data16
jmp
nop
pusha
mov
in
jb
push
push
push
stc
xor
stos
imul
push
lea
push
and
or
or
xchg
imul
repnz
and
jae
ja
cmpsb
add
mov
addr16
sbbl
lea
push
js
les
mov
dec
lock
popa
adc
push
int
adc
jecxz
jl,pn
out
pop
jno
xchg
mov
aad
scas
inc
sbb
sub
inc
mov
add
rcrl
inc
xchg
aam
in
push
movsb
sbb
cmpsl
and
rcrl
and
gs
add
shl
lods
jl
loop
cmp
push
rol
hlt
adc
addl
push
movsb
rol
xor
xor
mov
ds
mov
arpl
stos
int3
daa
gs
in
loope
jle
mov
lds
lahf
add
jge
jg
lret
push
and
nop
icebp
sub
std
mov
cli
inc
mov
cmpsb
mov
jmp
cmovp
mov
jbe
xor
or
sbb
mov
fiadds
push
test
inc
xchg
pop
mov
nop
loope
cmp
cmc
imul
dec
aam
and
add
pop
js
and
jnp
sbb
addl
lods
xor
scas
xor
inc
dec
cld
inc
and
xchg
sar
rcr
in
xor
mov
jnp
cmp
mov
sub
and
xchg
cs
enter
pop
scas
sbb
scas
test
mov
addr16
adc
mov
call
xchg
mov
mov
xchg
and
or
sti
movsl
les
lock
mov
sub
loopne
jmp
fists
shrb
dec
xchg
jmp
ss
int3
add
shrl
pop
adc
aas
dec
aad
jmp
das
notl
lods
mov
cs
dec
enter
push
aaa
and
out
andb
inc
push
push
xor
adc
imul
inc
mov
dec
das
lret
cmp
mov
or
push
or
nop
shll
xchg
insb
mov
hlt
lock
arpl
mov
test
mov
xor
arpl
inc
push
test
cs
lret
pop
sub
mov
in
sub
test
fistl
push
std
jbe
loopne
mov
arpl
push
cmp
jae
les
aaa
mov
xchg
test
mov
xchg
sti
outsl
cmp
sbb
lea
je
jns
cld
clc
sub
stos
fs
out
pushf
sti
adc
rcl
push
in
sbb
cmpsb
inc
in
xlat
or
fstpt
pop
cli
insb
adc
and
mov
stos
push
or
or
adc
xor
sbb
pop
lods
cmp
rcr
or
sub
pop
push
test
push
or
cmpsb
mov
shll
jge
test
aam
stos
xor
inc
jl
sbb
mov
jno
lret
and
inc
scas
outsb
das
jno
insb
pop
add
and
or
shlb
jmp
sub
cltd
insl
xor
inc
stc
xor
pop
jo
add
and
loopne
fadd
pop
cmp
dec
or
into
sbb
push
cmp
adc
sub
mov
xchg
aam
sbb
jge
mov
push
pop
sub
and
mov
add
addr16
xor
sbb
or
loopne
clc
dec
test
aad
lds
movsb
jp
icebp
das
mov
push
lss
les
dec
andb
pop
and
xor
mov
and
je
mov
loopne
std
fwait
out
mov
adc
adc
sbb
dec
loop
push
or
sbb
dec
xchg
mov
jae
jmp
sbb
into
sbb
arpl
loopne
rcr
sti
ficoms
pop
fsub
pop
scas
loopne
or
push
cmc
sbb
andb
iret
lcall
sub
push
insl
mov
movsb
sub
or
mov
subb
movsb
dec
xlat
mov
sbb
lds
ds
je
adc
mov
add
dec
out
cmp
call
pop
cwtl
cmovp
lahf
ss
in
dec
fadd
sub
mov
inc
sub
lret
in
in
mov
mov
ret
adc
sbb
fnsave
fdivrs
xorl
mov
pop
enter
das
dec
jbe
popa
lds
cld
shrl
cmp
jne
call
push
lret
or
dec
scas
dec
sbb
mov
jle
dec
ret
dec
push
dec
scas
xlat
outsb
pop
sahf
push
sub
fisubrs
sub
add
push
and
subl
out
cmp
mov
inc
loope
sub
into
xor
scas
mov
pop
inc
js
ret
fnsave
test
loopne
idivl
fdivp
fldcw
and
stos
cmp
aaa
mov
cmc
clc
jmp
jecxz
mov
fbld
push
push
dec
mov
mov
fs
push
push
sahf
mov
shll
xchg
push
bound
jge
cli
rcr
addr16
cwtl
fcmovb
pushf
in
pop
dec
nop
xchg
mov
lret
jne
mov
push
mov
add
xor
pop
mov
inc
jnp
ds
add
sarl
adc
fcomps
lds
sub
or
push
lcall
mov
inc
push
enter
cmp
std
sub
pcmpgtd
idiv
adc
dec
mov
push
inc
cmp
or
mov
pop
jge
dec
aaa
cmp
pop
pop
fs
add
fsubs
repnz
in
test
nop
jl
jo
int3
out
pop
mov
push
scas
shlb
xlat
pop
out
test
loope
les
cmp
jg
push
xchg
into
xchg
sub
push
xchg
adc
ljmp
rclb
jmp
sbb
aaa
rcrb
push
rcrl
xor
add
mov
lods
fisubrs
inc
inc
pop
lret
gs
or
add
fld
add
int
dec
into
les
jae
hlt
bound
dec
and
ljmp
repz
mov
mov
cmp
jnp
test
pop
mov
push
mov
pop
clc
inc
addr16
cmc
sbb
jg
dec
fnstsw
lahf
adc
rclb
mov
fs
xorb
mov
cmp
dec
sub
jns
mov
and
shlb
mov
mov
inc
std
cmpsl
fsubrs
sarb
test
lcall
adc
pop
insl
inc
jle
cli
inc
and
ss
cmp
arpl
pop
pop
inc
nop
rolb
mov
and
nop
push
and
xchg
rolb
jb
push
jnp
mov
dec
jmp
inc
push
mov
sbb
test
jnp
jl
movsl
sub
push
jecxz
lods
pop
jg
adcb
es
mov
adc
dec
jmp
movsb
mov
lock
pop
bound
movsl
aad
add
test
xchg
cmc
and
cli
inc
adcb
sub
xor
ret
xchg
add
aad
xchg
out
inc
pop
or
div
push
push
mov
mov
and
iret
outsb
int3
sbb
int
cmp
cmp
mov
mov
loopne
or
data16
testl
sbb
cmpsb
mov
aad
lahf
push
xchg
mov
push
roll
push
dec
sub
jb
cmp
inc
stos
jae
jo
mov
ljmp
lds
jp
out
nop
jl
mov
lret
jns
lods
decl
adc
std
xchg
adc
jo
pop
mov
push
or
psubusb
pop
push
and
addr16
mov
not
popa
dec
clc
xor
das
pcmpgtw
sarl
pop
sbb
icebp
push
test
outsb
bound
ja
jp
jnp
jg,pn
call
ficompl
sbb
mov
mov
cmp
cmp
mov
out
adc
push
push
rcr
lods
das
pop
inc
inc
popf
xchg
inc
fistpl
pop
lods
add
push
pop
popf
lea
out
inc
jb
mov
imul
gs
mov
mov
mov
xchg
cld
leave
hlt
xor
dec
sarl
bound
xchg
pop
sub
ds
icebp
movsl
test
sbb
inc
sahf
or
lret
mov
gs
popf
jg
xchg
and
xchg
xchg
or
movsl
andl
pop
pop
psubusw
rcll
lcall
or
dec
cld
daa
hlt
movsl
sbb
scas
mov
cmpsb
mov
push
rcrb
mov
pop
mov
cmp
jb
sub
cmp
xor
cmp
sbb
cmp
mov
lods
push
gs
push
into
cmp
dec
cmp
divl
scas
pop
cmp
pop
push
ja
mov
fimuls
push
mov
rclb
and
push
insb
es
push
add
outsl
xchg
dec
pushf
xor
jns
das
loopne
ret
push
ss
inc
cwtl
cmpsl
sbb
imulb
adc
and
mov
lods
or
sahf
xlat
pop
xor
sbb
into
test
mov
fisubl
lods
dec
add
int
mov
stos
adc
es
and
icebp
jl
sbbl
roll
push
cli
mov
adc
std
jmp
sub
mov
sbb
cmpsl
ljmp
stos
sahf
fildl
icebp
push
add
popf
jbe
je
daa
push
inc
sbb
push
cmpsl
or
jecxz
or
cmp
les
les
shrl
dec
int3
pop
ret
test
xor
std
add
movsl
add
push
jp
pop
add
jnp
stc
sub
data16
push
addr16
inc
dec
sbb
or
dec
lret
dec
push
out
adc
inc
dec
xchg
jg
pop
subl
mov
pop
inc
fiaddl
test
sti
adcb
dec
das
cmp
mov
daa
adc
lret
adc
sub
push
arpl
icebp
inc
mov
xchg
cli
pop
stos
cltd
das
loope
sbb
pushf
lds
gs
jge
dec
mov
mov
inc
xor
pop
shll
jae
pop
loop
push
jp
or
mov
aas
shr
es
mov
icebp
mov
dec
sbb
aad
roll
cmc
je
push
pushf
mov
cli
dec
js
push
in
movsb
stos
mov
insl
lret
pop
push
dec
sbb
xlat
sbbl
or
fadds
insl
sbb
icebp
cltd
lods
lods
fists
mov
xchg
sahf
lods
add
test
xchg
imul
sbb
push
stos
mov
ss
lahf
pop
xor
insl
daa
cmp
adcl
xor
sub
jns
hlt
iret
popa
cmp
daa
push
pop
sub
inc
or
movsb
and
inc
mov
push
cld
or
inc
sarb
inc
fidivl
pop
mov
mov
cmpsl
cmp
adc
adc
movq
mov
mov
jmp
xchg
cmp
mov
out
outsb
xor
fisttpll
loopne
dec
sub
mulb
add
mov
jge
rol
mov
js
adc
aad
mov
ds
jb
test
mov
dec
mov
std
les
cmpsl
sbb
aaa
mov
js
push
cs
add
test
mov
shll
jb
in
mov
add
sahf
adc
inc
xchg
push
or
or
adc
xchg
and
daa
cltd
mov
les
and
iret
jle
aad
adc
mov
jbe
pop
test
or
dec
fwait
lcall
or
ljmp
hlt
lret
and
push
xchg
fisubrl
xlat
adc
push
push
mov
add
iret
dec
sub
xchg
in
imul
mov
outsl
pop
sub
mov
push
pop
push
call
push
dec
xor
mov
mov
inc
mov
fisubs
xchg
outsb
mov
out
inc
add
jno
push
or
jp
push
stc
or
cmpsb
xchg
push
xor
mov
out
std
inc
rorb
mov
sahf
xchg
mulb
aad
xor
pushf
add
mov
insl
add
insb
rcrb
cwtl
sbb
adc
sbb
lock
ror
aaa
sahf
push
add
jb
popl
out
fmull
pop
out
adc
or
ret
xchg
push
in
aaa
or
xchg
push
cmpsl
movaps
push
jp
inc
sbb
lock
dec
add
xchg
popf
mov
mov
clc
rclb
inc
test
adc
cld
popf
sahf
jbe
push
in
ds
jg
bound
lret
jecxz
jo
and
cmp
aad
movsb
iret
js
adc
das
xor
loope
fldt
and
cmpsl
jge
xchg
mov
add
fldcw
dec
jns
shrl
inc
lds
mov
inc
fwait
out
sti
jle
mov
mov
cmp
cmpsl
xor
and
or
dec
xchg
jae
ret
das
lea
cs
repnz
dec
int
fcomip
mov
sbb
test
cmova
cmp
popa
mov
pushf
mov
test
insb
pmaxsw
and
imul
jp
mov
jne
out
mov
subb
lea
push
mov
mov
lock
pop
mov
jae
jb
mov
push
inc
bnd
xorb
xor
fs
jl
aas
in
repnz
pop
inc
mov
mov
std
bound
fs
push
test
icebp
jo
test
ja
jo
daa
sbb
mov
mov
jnp
das
nop
pop
movsl
nop
in
stos
mov
pop
jne
ret
std
ja
push
cwtl
and
test
fs
cwtd
pop
mov
mov
inc
xor
pop
adc
sub
fisubs
lock
rorb
lock
pop
jae
lock
xchg
pop
mov
pop
shr
inc
xor
int
scas
pop
adc
cmp
dec
lret
test
add
jbe
and
nop
into
and
in
sbb
fmul
xor
adc
pop
icebp
std
add
sbb
dec
lret
gs
fcmovnbe
dec
inc
jle
loope
enter
cmp
pop
je
lds
fs
mov
aam
jae
in
dec
mov
jmp
pop
add
pop
fsubrs
inc
dec
sbb
in
jle
and
out
mov
push
data16
insl
fsubp
lods
and
mov
jmp
stos
and
and
xor
cld
sub
pop
mov
test
xor
les
insl
dec
or
fs
push
mov
popf
jno
jp
cmp
dec
xchg
cmp
jnp
mov
test
les
test
ret
nop
ret
mov
data16
dec
fucomip
add
inc
push
jle
outsb
pop
sti
jmp
mov
jge
xor
or
push
mov
aam
and
cld
aad
jne
fmull
xorl
or
inc
scas
out
mov
mov
xchg
lods
js
out
xor
in
mov
add
test
xchg
add
pop
mov
add
push
hlt
repnz
xchg
mov
ret
imul
sbb
push
lret
mov
or
mov
sub
adc
mov
fimuls
js
lahf
inc
sub
std
adc
dec
add
fsts
pushf
les
mov
test
in
sub
sbb
cmp
pop
sbbb
popa
lds
and
test
mov
cli
cmpsb
aam
repz
sub
stos
inc
push
fmuls
pop
inc
inc
insl
add
stos
sbb
xchg
pop
scas
cmovge
scas
xor
cmp
and
jno
cmp
mov
mov
arpl
jbe
loopne
aad
inc
mov
ljmp
in
mov
repnz
imul
ss
xor
pop
add
pop
int
push
xchg
jp
mov
cwtl
ffree
adcb
lds
mov
mov
mov
cmp
mov
dec
push
jb
test
and
add
imull
cmp
mov
mov
xor
pop
jge
xchg
mov
aas
adc
inc
push
int
or
mov
and
popa
cmpsl
sti
in
fsubr
pop
cmp
inc
sub
xchg
pop
xchg
out
cmp
fstps
lret
hlt
clc
nop
and
add
in
sbb
rcl
inc
icebp
imul
jle
movsb
push
or
inc
cmp
jmp
xchg
lcall
sub
pop
lret
cmp
stc
xchg
fstpt
xchg
mov
sarl
lods
mov
ficoms
ljmp
bound
fstpt
cmp
cmc
pushf
mov
xchg
push
push
add
cmpsl
outsl
addb
dec
test
sbbl
imul
pop
push
or
mov
aam
cld
push
mov
fbld
in
jge
cmpsb
scas
lock
sub
inc
mov
fldenv
mov
gs
mov
sub
mov
push
push
mov
ret
mov
out
shll
pop
insl
mul
fs
sahf
pop
cld
lds
lea
nop
out
cmp
ja
outsl
mov
jae
mov
std
rcll
adc
adc
xor
test
out
mov
ret
sti
sub
mov
addr16
fisttpll
iret
out
je
out
mov
cltd
mov
jg
inc
xor
fucomi
andb
sub
rolb
cs
adcl
scas
addb
imul
jbe
nop
clc
xchg
cmp
lods
or
imul
xchg
or
in
mov
cli
xchg
repnz
fnstcw
xor
pop
fstps
mov
out
idivl
jg
outsb
xchg
mov
mov
vandnps
jnp
xor
push
or
push
lcall
mov
mov
xor
fmuls
dec
cs
jae
movsl
aas
test
out
in
adc
sbb
fdivrs
insl
or
cld
or
xchg
sbb
xchg
inc
or
lock
xchg
fnsave
xchg
xchg
pop
aaa
mov
inc
sub
inc
sarl
loope
and
insl
je
lret
mov
xchg
mov
arpl
sub
nop
in
outsl
pop
sbb
popa
xchg
mov
mov
hlt
mov
and
add
in
test
imul
es
cmc
add
jmp
stc
cmp
int3
pop
push
add
mov
dec
xor
sub
loop
ret
lret
adcb
sub
pop
movsb
int3
movsb
cmp
loop
test
mov
ljmp
inc
xchg
in
rorb
mov
insl
pop
int3
xor
fcomps
adc
and
insb
mov
lahf
adc
xlat
data16
in
xor
inc
test
pop
sbb
xchg
or
pop
rcr
imul
addr16
inc
sub
mov
daa
pop
sbb
test
inc
dec
pop
idivl
arpl
lods
xchg
sbb
xor
inc
pop
xor
out
inc
or
in
sahf
arpl
jae
lods
shll
repz
jmp
dec
mov
clc
dec
or
loopne
adc
cmp
cli
fdivrl
sbb
int3
cmc
outsb
xor
inc
xorb
cmp
jne
rcpps
pop
aas
adcb
aam
or
pop
ficompl
xchg
stc
sbb
sti
icebp
dec
xchg
or
mov
pop
cmp
pop
in
aam
stos
xchg
xchg
cmp
add
lcall
jmp
lods
jno
fadd
xor
hlt
push
mov
adc
jnp
push
pop
ss
lds
lock
in
loopne
inc
mov
jne
jnp
cmpsl
fidivs
and
das
or
pop
stc
cltd
daa
and
sahf
scas
repz
jae
adc
mov
insl
jae
mov
fsts
or
leave
sbb
push
pop
jmp
out
sub
mov
sbb
lret
xor
xchg
mull
inc
sti
add
cmc
push
jmp
std
adc
mov
cltd
test
jle
aam
mov
mov
pusha
xor
cmp
jb
push
xor
add
adc
mov
int
mov
jo
fwait
add
dec
data16
mov
daa
and
mulb
aaa
cmp
scas
cmp
xor
xor
add
or
add
cmp
pushf
inc
std
cmp
sub
adc
fisubrs
inc
mov
mov
mov
test
push
std
push
and
mov
loopne
push
push
outsl
dec
xchg
cs
out
test
jae
sub
or
xlat
arpl
adc
mov
paddusb
fstpt
push
mov
xchg
loopne
pop
adc
jnp
mov
or
dec
cmpsb
mov
data16
dec
in
cmp
rcll
or
dec
xchg
inc
xchg
sub
cs
nop
jae
cmpsb
rcll
mov
test
or
pop
lods
mov
inc
or
mov
stos
sbb
lret
shr
ret
or
cmp
sub
pop
jb
bound
push
lcall
sbb
lret
shr
ret
or
cmp
sub
pop
jb
bound
push
lcall
sbb
lret
shr
ret
or
cmp
sub
pop
jb
bound
push
mov
fdiv
lret
shrb
in
cmc
mov
cli
ret
lods
xchg
mov
int3
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
lods
xor
and
mov
jae
inc
sub
cmp
subl
dec
rcrl
xor
in
jae
arpl
push
faddl
mov
ret
or
sbb
lods
repz
dec
xchg
pop
ret
lods
xor
in
jae
arpl
push
faddl
sbb
mov
insb
mov
mov
mov
fdivrs
lock
and
mov
dec
sub
fldl
sub
push
in
aaa
mov
adc
cld
pushf
xor
add
pop
mov
push
xchg
xchg
sbb
mov
mov
jmp
mov
adc
pop
or
fdivrl
repnz
sub
dec
lods
es
add
jb
arpl
fdivrl
insb
jbe
xchg
cltd
cmp
iret
sub
dec
push
rcrl
xchg
arpl
mov
cld
jbe
inc
cltd
rol
push
mov
aas
jecxz
pop
sbb
pop
dec
push
movsl
inc
fmull
pop
cli
cs
push
out
inc
fsubl
repz
out
and
fadd
pusha
xor
in
jae
arpl
push
faddl
mov
mov
insb
repz
dec
rcrl
pop
enter
cmc
push
pop
mov
sbb
pop
xlat
or
lds
jl
das
rcrl
or
fldenv
jmp
cmp
inc
dec
lret
insl
push
repnz
insl
nop
adc
leave
jp
jo
jnp
data16
push
faddl
mov
mov
insb
repz
dec
rcrl
xor
in
jae
arpl
push
faddl
mov
mov
insb
repz
dec
rcrl
xor
inc
adc
repnz
in
add
push
or
jg
mov
lds
sbb
or
add
inc
into
pop
push
cmp
adcl
xchg
adc
inc
sbb
and
pop
cmp
ljmp
xor
mov
jb
fwait
lods
out
push
stos
xor
les
xor
mov
js
lock
pushl
inc
add
adc
xchg
push
daa
dec
and
mov
sbbl
pop
adc
mov
test
mov
or
int3
xchg
out
sub
jbe
sbb
outsl
push
dec
sub
jns
push
lods
mov
fwait
mov
es
js
rcr
shlb
dec
or
insb
hlt
lea
pop
nop
mov
push
inc
inc
nop
cmp
out
loope
pushf
cmp
test
and
pop
leave
sbb
aad
sbb
dec
mov
sub
ljmp
mov
int3
aad
jecxz
jno
cmp
loopne
add
hlt
cmp
enter
inc
sbb
mov
push
inc
ffreep
dec
push
sbb
int3
adc
cltd
js
daa
or
je
dec
mov
add
pop
dec
js
add
mov
push
sub
sbb
pop
sub
bound
jbe
fwait
push
out
cld
outsb
sub
pusha
pop
aad
mov
mov
out
add
prefetch
out
aam
out
and
sbb
les
pushf
jp
push
pop
icebp
gs
dec
ret
push
std
adc
divl
mov
pusha
xor
inc
in
daa
push
adc
shll
xor
mov
inc
lret
cmp
pop
push
jmp
push
movsb
rcrb
add
movsb
nop
dec
inc
enter
mov
adc
push
aaa
sti
rcrb
mov
popf
enter
cmp
adcl
arpl
xor
sbb
and
pusha
xchg
dec
jo
scas
and
push
xchg
push
pushl
loope
aam
fs
iret
adc
cmp
leave
pop
popa
push
and
dec
mov
push
xchg
mov
in
repz
arpl
movb
ja
inc
inc
mov
movsl
sub
or
testb
dec
and
les
dec
pop
cmp
xchg
fmuls
jbe
or
jle
push
mov
testl
ds
push
push
bound
sub
add
pop
fdivr
mov
fbstp
stc
hlt
push
daa
push
xor
or
loopne
flds
push
mov
insb
subb
add
and
xor
or
xor
push
repnz
dec
xchg
lods
out
enter
loop
xor
test
mov
mov
cwtl
sub
mov
pusha
ljmp
jnp
leave
mov
in
fimull
xchg
jo
test
add
jg
addr16
and
inc
rcr
add
pop
mov
adc
lahf
pop
mov
and
test
push
movsb
mov
jl
and
pop
sbb
lcall
adc
xor
out
xchg
and
adc
dec
filds
faddl
cld
shll
pop
sbb
out
inc
xor
inc
jae
and
fisttps
mov
addr16
enter
and
and
ja
sahf
aad
xchg
adc
jg
and
xor
mov
cmovo
leave
ja
mov
lods
rorb
imul
xchg
xor
icebp
jge
push
enter
test
push
repz
sub
sbb
divl
mov
cmp
mov
inc
ret
and
add
popa
mov
mov
and
push
daa
pop
lods
insl
adc
jo
pop
in
cmp
mov
sbb
scas
and
add
or
mov
out
out
pop
pop
push
stos
adc
ja
std
aam
out
jbe
sub
push
daa
aas
jl
ret
dec
xlat
xchg
or
and
or
icebp
movl
fsubl
push
leave
pop
sarb
and
fst
scas
mov
push
push
scas
mov
jmp
and
push
adc
xor
fwait
dec
pop
movsl
das
orb
pop
jle
cs
ja,pt
xor
scas
push
aad
dec
insb
scas
out
mov
jo
notb
xchg
jg
test
add
das
out
cs
in
loopne
and
mov
xlat
in
mov
lret
loope
shlb
sub
mov
fidivrs
repz
icebp
and
mov
mov
and
mov
mov
jl
pop
jl
mov
jp
divl
lds
or
inc
pop
ss
sbb
inc
leave
out
rolb
inc
push
jo
mov
push
jbe
in
leave
add
cltd
cmp
jae
fisubrl
inc
rorb
push
jbe
inc
pop
pusha
cmp
mov
rorb
sbb
dec
icebp
aaa
fsts
mov
imulb
xchg
imul
and
aas
push
dec
jge
sbb
inc
inc
divl
adc
xchg
call
add
pop
ljmp
dec
subl
add
ror
out
stc
push
jb
mov
push
jnp
xchg
xlat
insl
pop
test
xor
xor
lret
mov
or
pop
xchg
lahf
imul
sub
xchg
dec
je
inc
cld
ja
lret
add
shll
pop
lret
mov
movsl
cwtl
lcall
push
jg
pushf
adc
adc
pop
loope
cmpsb
dec
fs
scas
jp
xchg
xchg
sbb
loopne
addr16
and
jg
push
movsb
sbb
shrl
or
adc
or
push
enter
adcb
fildl
roll
fnsave
shlb
mov
das
sub
pop
mov
sub
lods
adc
pop
leave
jnp
add
aas
repz
lahf
xchg
jle
mov
mov
shrl
cmp
popf
mov
sbb
js
lods
fldcw
mov
dec
jb
in
sbb
shrl
dec
les
ret
testl
fcompl
pusha
inc
insl
mov
pop
mov
js
inc
insb
mov
adc
std
loop
sub
pop
inc
icebp
pop
pusha
push
arpl
mov
pop
ja
and
xchg
dec
mov
push
movsl
add
fstl
jo
pusha
fldenv
bndstx
in
inc
fldl
and
inc
imul
mov
add
sub
xor
sub
cwtl
ja
sub
push
cli
lds
enter
sub
not
mov
shlb
hlt
rcrl
push
out
stos
stc
pushf
dec
mov
add
cmpsb
push
les
and
outsl
sbb
ljmp
hlt
mov
out
sub
es
les
jle
mov
jae
sub
cmpsb
jle
sbbb
mov
pop
adc
inc
shrl
stc
insl
and
add
shll
push
cwtl
mov
cltd
mov
hlt
cs
add
jge
stc
add
notb
xor
push
subl
fxch
adc
pop
mov
int
or
xchg
popf
ret
cmp
mov
or
pushf
mov
lods
and
and
das
push
pop
outsb
call
loop
push
adc
jbe
adcl
adc
jecxz
popf
insb
icebp
sbb
and
jge
jbe
movsb
push
push
add
cmp
or
mov
jp
push
adc
xor
out
lret
mov
jbe
push
jg
lcall
cmp
shlb
lret
xor
sbb
or
or
dec
out
leave
mov
push
xlat
inc
filds
imul
loope
inc
jnp
xchg
sar
popf
add
arpl
mov
test
ret
sub
mov
dec
add
inc
sbb
or
mov
xchg
sub
or
lods
insl
mov
cmp
inc
or
cmp
mov
push
call
jp
addr16
sahf
sub
mov
test
or
mov
fidivrs
aam
xchg
mov
repz
test
into
insl
test
mov
pop
mov
and
xchg
or
push
in
repz
xchg
dec
outsl
bound
sbb
sub
sbb
sub
sub
addr16
dec
lahf
add
inc
notb
jmp
sbb
push
xchg
leave
fwait
pop
outsb
adc
mov
push
loope
sahf
sarb
popa
cmp
cmp
sub
vpaddusb
std
pop
xor
inc
push
inc
in
out
out
pop
push
in
sub
adc
fstpt
fiaddl
adc
bound
shlb
push
inc
dec
or
xor
into
mov
cs
call
inc
xchg
cld
gs
pop
or
inc
rcr
gs
out
cwtl
sub
lcall
mov
loop
ret
pop
lcall
add
push
inc
jns
fiadds
dec
fucom
test
adc
mov
or
mov
mov
xchg
stos
jle
sbb
or
add
aas
adc
popf
jo
sub
in
stc
dec
mov
lds
aam
mov
jl
fsubs
fldt
aam
add
loop
xlat
mov
stc
mov
push
es
cwtl
add
out
movhps
cmpsl
mov
insb
jg
fsubs
jbe
mov
pop
dec
add
add
loope
push
sbbl
and
jbe
mov
mov
mov
cmp
pop
std
cmp
ffreep
jge
dec
mov
std
pop
mov
xor
jp
add
xchg
stos
dec
ret
ja,pt
inc
in
and
fs
push
add
fldcw
push
jbe
lcall
push
out
test
int3
pop
jnp
in
push
jle,pt
pop
inc
hlt
jno
pushf
or
cmp
inc
pushf
mov
xchg
data16
lcall
or
out
aam
cltd
inc
cmp
jmp
xor
movsl
jp
cmp
cmpsl
out
adc
sbb
sub
jns
xchg
jo
ds
sbb
pop
jnp
hlt
mov
and
adc
ret
cmp
xchg
xor
lock
push
scas
insl
addr16
xchg
or
ljmp
xor
insl
mov
push
add
sbb
sahf
sbb
adc
divl
push
sub
inc
fcmovne
add
ds
pop
mov
pop
jns
sbb
mov
or
push
cmp
lret
stos
pop
mov
lret
popa
mov
cmp
push
lods
repnz
lock
inc
dec
cmp
sbb
mov
mov
cmp
inc
lret
and
ljmp
jo
xchg
xor
sub
cmp
cmp
mov
xlat
push
test
cs
pop
cli
lods
int3
jbe
sbb
dec
jns
mov
pop
fs
xchg
test
sbb
inc
xor
cmp
dec
mov
fwait
push
roll
sbb
sub
xor
mov
dec
dec
loopne
cmpsl
or
sbb
lds
fdivs
xor
dec
scas
pop
cmpsb
and
adc
jnp
sub
decl
cmp
stos
mov
mov
inc
int3
cwtl
xchg
add
les
cld
mov
xchg
push
dec
push
loop
pop
js
lret
pop
xor
lods
pop
loopne
xor
imul
push
sub
test
imul
pop
sahf
repz
xor
imul
aad
fistps
loope
int3
jbe
mov
push
mov
xor
mov
or
in
mov
in
xchg
int
add
repz
adc
jbe
outsl
jbe
dec
sub
mov
in
mov
icebp
mov
xchg
or
add
push
decl
jnp
and
mov
daa
push
jmp
mov
lods
mov
jno
insb
or
mull
insl
pop
mov
push
push
pop
ret
ret
cmp
adc
int
pop
sbb
mov
jne
adcl
pusha
call
or
lods
addl
sub
jne
push
mov
or
sbb
pop
inc
and
test
mov
sub
in
push
xchg
arpl
and
fwait
sub
push
push
rolb
ret
imul
outsb
jnp
popf
mov
cmc
enter
fcomip
cmpsl
jmp
lock
add
push
add
jl
rorb
sub
and
in
aaa
sarl
es
fdivrl
xchg
mov
jl
jbe
pop
jae
mov
call
pop
cmp
sbb
pop
sbbb
pop
add
dec
push
sbb
test
sub
sbb
fbstp
push
fiaddl
inc
inc
pop
push
pop
and
inc
xlat
sub
push
movsb
aaa
inc
push
outsl
jb
ja
lret
jno
cmpsb
aam
push
push
repz
pusha
rclb
lret
adc
inc
push
jp
pop
mov
arpl
sbb
adc
lcall
or
adc
rcr
data16
sub
mov
lods
inc
mov
push
lock
pop
mov
mov
rclb
popa
out
push
rclb
enter
iret
pusha
clc
loopne
cmp
inc
pop
pushf
mov
jle
add
gs
sbb
inc
insl
clc
push
loope
cs
mov
fdiv
xchg
xor
out
xchg
in
out
imul
push
lea
outsb
fidivrs
lret
dec
push
loopne
xchg
xor
inc
sub
movb
rcl
cli
xchg
sbb
in
add
aaa
mov
xchg
jo
stos
loope
mov
sbb
sbb
fisttpl
mov
lret
mov
add
mov
loope
adcb
xor
fdivr
mov
cmp
mov
cld
pop
sub
adc
sti
loop
ss
out
es
clc
clc
mov
frstor
or
ljmp
test
std
or
jno
jl
in
sbb
mov
xlat
imul
test
push
aad
mov
or
add
xor
xor
aas
and
jle
jge
inc
fiadds
lods
push
dec
aam
lods
bound
bound
js
ss
orl
pop
mov
repnz
cwtl
jp
gs
das
push
sbb
out
out
je
call
and
data16
inc
inc
ja
js
add
in
xchg
jbe
std
and
add
nop
xchg
xor
cmp
push
mov
mov
mov
cmp
mov
inc
movsb
ffree
xchg
fs
loop
mov
dec
mov
scas
add
adc
sbb
or
lea
movsl
sub
or
or
or
xchg
gs
jo
push
mov
arpl
xor
data16
js
data16
insl
cli
inc
leave
mov
bound
sbb
or
sbb
outsl
sbb
inc
xchg
xor
shr
or
push
inc
xlat
mov
xor
out
icebp
mov
das
sti
and
push
push
mov
test
clc
stos
out
xchg
shrl
sbb
cmp
xchg
sahf
mov
jmp
add
mov
test
movsb
add
cmp
aaa
dec
adc
sub
inc
cmpsl
sbb
mov
adc
ss
bound
jns
mov
pop
stc
sbb
mov
test
push
js
sahf
or
push
mov
filds
idivl
out
jecxz
mov
fwait
mov
faddl
mov
push
sub
enter
scas
pop
sbb
jmp
jmp
push
call
aam
mov
sub
and
sbb
jmp
sbb
xorb
inc
cli
adc
stos
loopne
push
out
or
jl
ret
imull
lock
cmp
lods
xor
sbb
out
or
int3
stc
aad
and
sbb
iret
ret
add
pop
movsl
xorb
xchg
cmp
pop
add
les
bsr
out
adc
or
pop
inc
dec
lods
test
xor
or
js
xchg
cmp
dec
xor
into
fmul
dec
imul
cmc
cmp
adcl
icebp
push
rol
pop
adc
push
push
dec
sbb
lret
sbb
movsl
mov
push
les
shr
mov
aas
adc
mov
dec
out
pop
mov
adc
push
inc
call
hlt
mov
push
cmp
dec
mov
popa
adc
xchg
scas
mov
mov
insb
xchg
into
movsb
xorb
mov
in
mov
adc
adc
adc
jbe
sbb
xor
push
ja
push
inc
in
lret
aad
cld
nop
or
dec
cmc
not
cmp
xchg
adc
movsb
fcmovnb
cmp
sub
pop
pop
fldl
jecxz
xchg
dec
dec
lods
addr16
mov
inc
sbbl
sbb
rcll
xor
or
lock
rcr
xor
xchg
jl
sub
xchg
loope
pop
int3
mov
ja
aas
fmul
popl
mov
inc
mov
mov
add
stc
xor
insb
in
test
add
test
testb
or
jle
aaa
mov
jg
xor
out
out
testb
gs
lret
movsl
xchg
push
dec
sub
int
pop
stos
pop
insb
cli
mov
jl
cwtl
dec
mov
insl
imul
adc
fsubs
push
aad
test
pop
pusha
sbb
sahf
jnp
lahf
jne
or
insb
aas
sub
xor
int3
ret
orb
pop
hlt
or
mov
ret
stc
sbb
ja
mov
push
jmp
rcrl
popf
sbb
mov
repnz
cmp
and
adc
and
mov
out
pop
rolb
cltd
cli
stc
inc
ret
data16
orl
jl
aaa
push
mov
xchg
mov
test
mov
inc
lds
mov
aaa
adc
rcll
call
xchg
dec
dec
push
jmp
bound
js
popa
jo
lock
inc
xchg
mov
jnp
and
push
xchg
push
pop
add
lds
mov
das
fs
fldcw
dec
mov
lods
sbb
lret
jb
shll
lcall
cmpsl
cmpsb
mov
mov
jecxz
inc
insb
jg
daa
dec
stos
xor
jmp
fcoml
mov
mov
mov
out
and
sub
lret
xor
jnp
cmpsb
jbe
mov
inc
adc
xorb
xor
and
insl
in
mov
enter
cmp
test
cmpsb
out
addb
aam
in
adcl
cmp
outsb
cltd
jle
jle
or
in
loopne
out
mov
mov
fisttpl
sub
lods
hlt
fwait
pop
push
inc
hlt
push
movsb
jae
mov
mov
lcall
jno
or
pop
out
aam
mov
decl
sub
repnz
imul
popf
mov
divb
or
aad
mov
test
xor
adc
mov
dec
push
pop
cmp
gs
xchg
push
call
lahf
test
leave
mov
arpl
nop
sbb
mov
stc
dec
push
dec
daa
push
xchg
jno
and
jp
push
mov
mov
cmp
mul
xor
pop
dec
add
out
lcall
test
jg
mov
xor
bndldx
popa
insl
pop
imul
pop
sub
xorb
aam
xchg
sub
out
insl
xchg
mov
jne
sub
mov
xor
and
cmp
push
pop
scas
xor
orb
hlt
jecxz
arpl
mov
dec
daa
mov
out
mov
xchg
sub
ret
ss
shlb
stos
jb
mov
adc
dec
movb
sbb
pushf
iret
outsb
lds
cwtl
push
adc
cli
adc
adc
xchg
add
mov
xor
test
in
xchg
test
sti
dec
nop
cli
add
pop
clc
jae
xchg
or
and
and
or
mov
orb
sub
nop
pop
daa
mov
jnp
sahf
push
sbb
adc
dec
sbb
mov
adc
mov
xchg
inc
adc
out
aaa
jge
mov
xlat
sarl
dec
xchg
xor
add
loopne
jp
dec
xchg
mov
adc
pushf
das
mov
mov
and
dec
sbb
shlb
rsqrtps
jno
and
das
jo
lds
cld
stos
mov
fwait
into
aaa
repz
arpl
fstpt
pusha
push
mov
mov
das
inc
nop
mov
lods
jg
ret
adc
push
mov
icebp
mov
push
and
gs
push
and
add
movsl
popa
xchg
scas
shll
test
sbb
mov
jecxz
pop
mov
mov
clc
inc
dec
call
inc
out
call
clc
fs
fidivrl
test
cmp
cmp
dec
clc
push
push
in
repnz
adc
fstps
adc
je
repz
test
jecxz
jmp
iret
push
adc
sbb
fwait
dec
movsl
xor
pop
pop
fucomip
lret
inc
sbb
dec
imul
jbe
pop
mov
nop
mov
jnp
mov
add
xor
or
into
cs
cld
or
aam
leave
add
mov
dec
mov
lret
and
imul
fnstcw
push
insb
push
xor
sub
in
sbbl
loop
aad
inc
adc
nop
xor
push
push
add
in
and
xchg
int3
xor
in
sub
lock
in
jl
mov
xchg
add
lahf
enter
lock
scas
std
inc
nop
jge
ds
sahf
xchg
mov
or
adc
frstor
mov
push
cmp
dec
pop
aaa
leave
add
mov
lea
xor
std
movsl
dec
xchg
mov
lcall
ret
inc
repz
pop
in
add
mov
ja
repnz
push
dec
into
and
mov
jb
insl
xchg
out
mov
add
fadd
sub
mov
inc
xchg
cli
sub
and
int3
xlat
mov
repnz
jl
imul
aad
and
pop
xchg
pushl
xchg
or
mov
xchg
add
push
pop
and
jge
lcall
enter
mov
mov
jbe
jne
push
pop
push
cmp
adc
int3
push
faddl
mov
mov
insb
repz
dec
rcrl
xor
in
jae
arpl
push
faddl
mov
mov
insb
repz
dec
rcrl
xor
or
pushf
add
jecxz
push
pop
inc
sub
cmp
or
sbb
insb
repz
dec
rcrl
xor
in
jae
arpl
push
faddl
mov
or
jnp
sbb
sub
cmp
int3
int3
int3
int3
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
lret
outsb
fstpt
dec
sti
pop
andb
fisubrs
mov
dec
mov
jnp
or
cmp
jmp
sti
pop
mov
fwait
ds
push
mov
imul
fimuls
ret
sub
fstpt
dec
sti
pop
mov
fwait
ds
push
mov
fstpl
mov
push
in
mov
es
pop
test
int3
cmp
xor
popa
pop
jl
xchg
nop
scas
ret
add
and
adc
push
fisttpl
push
push
adc
lcall
pop
scas
sbb
mov
xor
mov
andl
mov
cmc
mov
decb
test
cmp
lret
sub
pop
sub
or
lea
fs
add
scas
sbb
test
outsb
push
push
shll
mov
xor
dec
adc
out
lock
fwait
mov
imul
and
rcrl
push
mov
push
stos
pop
or
push
lods
fwait
ss
out
scas
dec
in
in
mov
mov
outsb
fstpt
dec
sti
pop
mov
fwait
ds
push
mov
imul
fimuls
scas
sbb
scas
push
aas
lods
dec
mov
push
les
dec
cmp
ds
in
pop
fisttpl
dec
sarb
sub
jb
addr16
jp
movsl
cmp
push
popf
jnp
cld
sarb
fcoms
lods
sub
lods
cmp
cmp
add
push
dec
out
pop
imul
fimuls
scas
sbb
lret
outsb
fstpt
dec
sti
pop
mov
fwait
ds
push
mov
imul
fimuls
scas
sbb
lret
outsb
mov
pushf
pop
pop
lcall
mov
and
pop
mov
jmp
loopne
gs
dec
sub
les
adc
mov
aad
mov
test
lods
out
xor
repz
mov
je
jbe
xchg
sub
lcall
inc
pop
into
and
add
adc
sbb
fwait
jne
jb
inc
mov
mov
scas
in
add
adc
imul
rolb
movsl
testl
adc
pushf
cmp
fdivs
scas
push
or
das
aaa
stos
rcrl
mov
hlt
frstor
xchg
loopne
clc
mov
aam
mov
cmp
push
xchg
sbb
clc
daa
sub
pop
movsl
movsb
andl
fistpll
je
jno
push
mov
pushf
aaa
int3
pop
xchg
testl
cmp
push
dec
mov
std
push
jle
mov
mov
xchg
addr16
sub
pushf
ret
dec
or
notb
mov
and
push
js
out
xor
mov
dec
xchg
insb
jns
or
sbbl
sub
push
add
sub
mov
mov
jl
nop
sbb
aam
negb
xchg
sbb
enter
and
mov
das
int
mov
iret
popl
xchg
in
push
test
jno
sbb
shlb
mov
insl
fstl
scas
lcall
or
nop
outsl
rolb
fisubl
leave
xlat
test
das
cwtl
xor
sub
mov
iret
push
jmp
in
or
pop
jge
fdivrs
xor
dec
mov
cli
loope
dec
rcrl
cmpl
inc
movsb
xor
popw
inc
jo
pop
push
cli
stc
jns
push
xchg
ret
pop
xor
cltd
stos
or
mov
mov
fisubrl
adc
cmp
aaa
lods
into
clc
testb
push
pop
push
mov
add
pop
jmp
int
inc
add
insb
lds
lds
rcrb
cmpsb
cmovno
cwtl
les
push
stos
stos
cltd
or
call
ss
das
out
or
je
outsb
mov
imul
sbb
push
movsl
jp
rcrl
mov
lods
pmaddwd
imul
loope
sbb
adc
sbb
or
addr16
pop
pop
dec
xchg
aaa
adc
push
icebp
stos
adc
push
lods
and
mov
pop
push
ror
jo
fstps
imul
sbb
dec
xchg
bound
jne
leave
cmp
push
push
xlat
loopne
inc
jp
ljmp
repnz
aam
cmc
cmp
mov
fistpl
cmc
mov
outsl
fildl
fsubrs
test
les
int
mov
xorb
mov
pusha
mov
addl
jl
stos
jns
mov
mov
lahf
outsl
shlb
fwait
add
or
das
mov
add
lret
cwtl
out
jnp
sub
add
inc
in
outsl
push
pop
cmp
dec
shll
cltd
mov
mov
inc
cmp
pop
jns
dec
mov
scas
rcr
push
pop
js
loope
jb
xchg
ljmp
and
rcl
shl
jmp
jnp
sahf
gs
or
lret
pop
dec
dec
stos
popa
shl
xlat
fsts
pusha
mov
jecxz
lret
dec
inc
inc
mov
aad
es
pop
arpl
scas
test
add
xor
gs
repnz
test
xor
aam
sub
sub
lahf
cmpb
jmp
mov
mov
mov
xor
pop
mov
addr16
mov
mov
xchg
and
mov
mov
pop
pop
push
mul
sub
mov
jg
iret
fs
ret
cmp
sbb
adc
jmp
mov
or
mov
sysret
in
sbb
imul
inc
icebp
sbb
test
icebp
je
cmp
aam
fmuls
inc
fwait
jecxz
nop
dec
mov
adc
cmc
sysret
inc
pop
aad
and
xchg
mov
std
mov
in
adcl
push
pop
cmpsb
test
adc
sub
mov
push
mov
test
xor
into
cs
push
fnstsw
stos
dec
push
mov
cmp
insl
movsb
pop
xchg
mov
mov
sbb
in
or
lock
pusha
inc
sbb
int
outsl
xchg
adc
add
sbb
fwait
popa
lret
nop
inc
popa
scas
inc
push
xchg
mov
adc
inc
push
out
test
pop
jo
lods
enter
std
and
cwtl
xchg
pop
adc
test
scas
cmpsl
scas
int
adc
int
or
sbb
pop
xchg
sbb
out
imul
mov
rcr
push
andb
pop
push
adc
bnd
das
sbb
test
mov
and
cmp
popa
insb
repz
and
outsl
aad
jp
inc
push
shll
or
pop
mov
flds
cmpsl
push
push
dec
xor
sub
popf
mov
aas
mov
test
sahf
sbb
xor
insl
push
cmp
lods
sub
testb
repz
add
int
inc
push
out
push
inc
dec
call
inc
shlb
out
in
outsb
push
add
jmp
cli
mov
fimuls
cmp
int
outsb
push
aas
xchg
test
das
pop
popf
or
lods
shll
jl
or
cld
stos
xchg
cmp
inc
or
mov
sbb
cmpsb
sub
push
jb
aaa
add
cli
lret
gs
sbb
test
and
sbb
in
pop
xor
jne
cmp
mov
popa
push
pop
fimull
cmpsb
push
jo
push
popw
mov
call
jmp
jge
ret
fbstp
das
outsl
stos
icebp
push
mov
inc
icebp
mov
movsl
loopne
push
dec
imul
lock
test
or
mov
out
icebp
pop
mov
test
inc
or
ljmp
adc
in
jns
pop
mov
push
xchg
cs
mull
outsl
gs
adc
fs
cltd
adc
sub
inc
popa
mov
cld
out
insb
push
dec
mov
inc
mov
push
mov
stc
es
fucomp
cmc
xorl
mov
jno
pop
outsl
adc
sbb
jecxz
cmp
out
push
xlat
jns
xor
pushf
jbe
add
xchg
jl
je
mov
sbb
in
mov
jbe
mov
in
rcll
xchg
xchg
out
adc
xor
adc
andb
and
dec
fstl
push
pop
cmp
mov
std
sub
movsb
or
add
sarb
or
mov
xlat
sbb
add
mov
lea
sub
adc
add
and
repz
xchg
sub
scas
cs
out
pop
cmp
cmp
rol
cmc
pop
mov
enter
mov
mov
xor
sbb
popf
sbb
or
mov
jle
dec
xchg
lock
stc
ss
in
sub
push
shll
lods
xchg
pop
cmp
scas
xchg
arpl
dec
jo
or
lret
adc
dec
push
sub
xlat
es
bound
jp
pop
notb
in
setge
dec
jge
mov
repnz
sbb
jg
into
jbe
jp
fistpl
inc
or
jg
dec
popa
sub
cli
mov
xchg
push
addl
and
pop
clc
cmpsl
inc
pop
adc
sub
pusha
pop
insl
push
push
jl
fisubrl
mov
into
mov
jp
mov
rclb
ds
push
add
into
mov
int3
popa
dec
lock
pushl
pop
enter
push
cmc
sub
adc
or
jb
and
loopne
pop
or
gs
in
scas
dec
push
std
xor
lds
clc
dec
ret
xorb
push
in
fsts
je
cmp
xchg
dec
pusha
xor
mov
cmpl
into
addr16
das
pop
xlat
sbb
push
push
mov
and
push
jns
stos
arpl
xor
loope
sub
cmp
lcall
adc
jmp
and
and
std
dec
sub
sti
enter
cmp
cwtl
dec
repz
imul
jnp
mov
stc
lds
bnd
rcrb
arpl
data16
mov
sti
icebp
dec
out
fnsave
pop
es
cli
jge
jnp
mov
jg
mov
int3
imul
xchg
sar
mov
sub
lods
out
loope
shrl
repz
aam
push
imul
mov
xor
call
adc
pop
sbb
mov
inc
jmp
roll
xchg
adc
dec
ja
in
out
inc
mov
push
cs
inc
xorl
mov
mov
pop
shll
mov
mov
xchg
inc
stos
cmp
jae
test
mov
out
and
insb
inc
adc
sahf
out
iret
xchg
jae
inc
hlt
dec
push
push
sub
inc
pop
jno
sbb
push
xor
jae
test
adc
shrb
dec
stos
lods
push
movsb
stos
ja
sub
cmp
mov
jns
insb
imul
push
outsl
adc
mov
repz
push
xchg
xor
lret
jmp
xlat
pop
mov
negb
sbb
movsb
xchg
mov
aas
pushf
pushf
cmpb
cmp
fistpll
imul
inc
mov
push
sbb
bound
loop
jmp
push
fstps
std
push
vpaddusw
sbb
xchg
mov
insb
add
or
and
add
icebp
stos
lret
push
inc
mov
pop
test
add
js
in
or
out
push
add
mov
les
jae
push
pop
dec
xchg
jno
mov
pop
std
ds
and
into
lret
mov
push
or
imul
adc
mov
pop
xchg
ret
sahf
mov
cmpsb
cmp
mov
in
and
aaa
mov
pop
sub
lock
cmp
aas
popl
cltd
movsl
xchg
test
enter
xlat
movl
aam
mov
mov
pop
out
das
aad
sbb
dec
inc
lods
adc
andb
xchg
jnp
inc
add
cmp
mov
or
lods
pop
xor
mov
push
movsl
xchg
in
mov
stc
mov
push
jecxz
aad
lret
insl
pop
mov
mov
arpl
jl
inc
imul
dec
xchg
repnz
jle
jnp
outsb
jge
cwtl
dec
roll
lahf
loopne
mov
pop
imul
bound
and
loope
sub
pop
or
clc
mov
xchg
lcall
or
les
cmp
ss
mov
mov
add
and
lret
jbe
mov
push
fistps
add
stc
xor
in
dec
xor
bound
icebp
jmp
cld
das
pop
mov
push
xor
sub
cmp
imul
lods
out
bound
mov
push
push
jmp
pop
dec
adc
sbb
lods
push
mov
pop
addb
fsubrs
adc
or
fstpt
xchg
jmp
aaa
dec
xor
mov
pop
inc
shl
pusha
sarb
outsb
loope
xchg
add
mov
pop
mov
add
push
cmc
insl
push
aam
shl
emms
pop
pop
xchg
insb
sbb
mov
pop
mov
sub
xor
mov
fmuls
xchg
mov
lods
rep
js
in
sbb
aaa
xor
test
sbb
or
mov
sub
mov
pushf
lahf
aaa
rorb
cmp
jp
nop
add
dec
mov
and
js
cmc
and
std
xor
adc
filds
in
inc
mov
sbb
rorb
mov
jo
jle
testl
sbb
pop
jge
adc
mov
push
pop
sub
fwait
cmc
cmp
cmpsl
popa
inc
cmp
push
sbb
mov
sarb
outsl
jecxz
and
add
push
jp
mov
mov
push
jo
jns
mov
ljmp
gs
push
xor
adcl
sbbl
testb
test
shlb
rcrb
adc
mov
mov
mov
jl
lds
rcl
scas
out
mov
adc
pop
faddp
imul
xor
in
incb
cmpl
out
jle
push
dec
push
sub
pusha
jae
dec
test
add
ja
pop
cmp
sub
and
mov
push
xchg
or
mov
mov
jno
mov
fcoms
and
cmp
cmp
aas
ret
dec
loope
gs
push
add
sub
cmp
adc
or
jns
insl
sbb
scas
cmp
or
dec
imul
xor
movsb
jecxz
push
enter
das
mov
pop
stos
scas
add
fs
push
mov
iret
lret
hlt
cmp
add
outsb
mov
imul
xor
fcomip
jb
adc
mull
outsl
mov
icebp
push
outsb
idiv
dec
jne
shll
aas
hlt
mov
clc
cmpsl
lahf
cmpsl
shll
adc
fcoml
cmc
mov
pop
adc
loopne
inc
fcomi
mov
mov
icebp
push
or
adc
pushf
loopne
ficomps
call
mov
mov
iret
and
fistl
inc
adc
adc
leave
std
repz
aaa
ss
push
gs
pop
jmp
or
daa
or
cmp
test
insb
mov
xchg
push
or
adc
scas
inc
cmp
testl
aas
push
mov
scas
ffree
das
mov
jo
jbe
pop
popa
decl
in
add
inc
mov
popa
mov
ja
inc
inc
lcall
nop
int3
and
cmp
cli
lock
sub
xlat
cmp
popl
sub
add
jb
cltd
subl
lret
addb
fwait
scas
add
arpl
movsb
das
or
lock
lock
pusha
fidivrl
or
jl
cmp
dec
sub
push
rcl
movsl
mov
int
and
int
stos
out
fldt
stos
xchg
xchg
xchg
push
jmp
fs
xor
js
aam
jl
inc
pop
inc
aas
inc
jp
lods
or
xor
or
pop
pushf
imulb
lods
mov
inc
xchg
mov
add
mov
sub
imul
fcompl
out
ljmp
push
dec
int
or
or
into
xlat
push
enter
in
lret
push
lret
mov
imul
ljmp
repnz
inc
gs
fstpl
ds
outsl
xchg
mov
mov
addb
mov
jg
xchg
enter
and
dec
fildl
mov
inc
sub
add
dec
add
or
mov
sub
mov
js
cmpsl
jmp
mov
cmp
cmp
mov
stc
inc
cmp
pop
fwait
inc
lods
push
imulb
arpl
jae
add
inc
imulb
cmc
push
loope
icebp
sbb
xbegin
lret
addl
sahf
xchg
mov
test
mov
sub
xchg
popf
cli
lods
dec
inc
je
pop
mul
push
xchg
or
std
ss
test
inc
mov
es
into
insb
jno
sbb
inc
test
loope
loope
and
mov
test
mov
aad
add
out
xor
or
outsl
xor
gs
mov
lds
cmc
or
xchg
mov
in
scas
gs
fdivrl
roll
push
push
repz
jp
push
xchg
jle
les
xor
gs
scas
decl
in
jns
push
sti
mov
ret
mov
aaa
xchg
sub
jmp
mov
in
push
movsb
mov
add
jecxz
enter
fcmovu
push
xchg
into
mov
rcll
fcmovbe
xor
lods
lret
mov
adc
add
loop,pn
loop
push
xor
out
push
cmp
jp
mov
fcoml
sbb
sub
jno
jae
dec
adc
das
and
pop
mov
adc
shrl
movsb
ficoml
test
pop
test
popl
scas
imul
jl
inc
or
mov
mov
sbb
cs
icebp
mov
xor
adc
adc
pop
pop
push
push
and
dec
jle
adc
cmpsl
push
sub
jo
or
roll
test
pusha
lahf
adc
mov
addr16
std
jbe
aad
fmuls
xor
and
push
imul
hlt
push
and
mov
lret
add
xor
imul
insb
cld
inc
aad
cli
push
loopne
bound
loopne
mov
xchg
mov
jbe
cmp
lods
push
mov
xchg
cvttps2pi
mov
sub
cmp
pop
popa
andb
movb
xchg
mov
push
pop
mov
lahf
push
out
inc
push
sbbb
mov
sbbl
cbtw
jge
arpl
cmp
xor
in
loop
jg
xor
dec
adc
or
jl
pop
mov
ja
les
ss
aas
ror
push
sahf
leave
xor
lret
jb
pop
xorb
jg
addb
xchg
das
lret
mov
sarb
lret
andl
push
cltd
fmull
in
push
mov
mov
jns
cltd
pop
and
and
in
mov
movsb
scas
aad
aad
or
push
push
add
mov
shll
mov
xchg
mov
or
mov
mov
int3
mov
js
xchg
aam
call
adc
pop
lock
outsl
add
ficoml
dec
push
int3
aaa
lock
xchg
add
or
sub
ficomps
mov
inc
test
ret
push
addr16
ss
out
mov
cld
icebp
repnz
sub
inc
rcrb
dec
cld
sbb
mov
xchg
push
xchg
movsb
xor
sbb
xchg
fwait
aaa
test
sub
jl
xchg
fs
jo
xchg
xchg
leave
push
test
imul
lcall
jne
ja
jp
test
add
lcall
shr
imull
sub
sbb
or
cmp
inc
in
xchg
jecxz
dec
adc
mov
or
cmpsl
jne
popf
cmp
jbe
or
mov
cltd
jg
fists
adc
jmp
dec
lret
adc
cmp
test
movsl
xlat
jl
mov
add
in
jle
mov
loope
push
xor
aad
pop
dec
clc
jecxz
adc
jne
inc
fwait
insb
xor
insl
add
dec
shl
adc
hlt
xchg
sbb
jo
sahf
fs
outsb
int3
push
pop
lods
xor
shlb
mov
and
mov
popa
arpl
push
into
rorb
inc
add
adcb
pop
xchg
inc
xor
xor
inc
push
aas
fdivs
cmp
adc
scas
pop
and
outsl
xlat
xchg
lret
pop
out
out
repnz
sbb
cmovg
out
in
pop
mov
lea
and
adc
ret
ljmp
push
rorl
imul
loopne
shll
xor
cmpsl
out
add
iret
dec
or
jb
add
mov
cltd
aas
mov
mov
ljmp
or
adc
jb
xchg
xchg
jl
xchg
adc
push
incl
movsb
inc
cmp
mov
cmp
js
dec
sbb
popa
sub
jbe
add
jmp
jle
push
sub
inc
xchg
sub
cmp
lahf
mov
adc
in
enter
jp
cld
int3
aad
out
icebp
cmp
xchg
xchg
in
scas
sbb
xchg
cmp
test
cmp
inc
jae
jb
sbb
push
xlat
push
xchg
adc
pop
mull
out
adc
adc
scas
and
inc
inc
xor
and
aad
lret
cmp
add
daa
gs
orl
sti
xor
hlt
pop
iret
sub
jecxz
test
mov
lods
mov
jg
daa
jnp
mov
add
dec
in
mov
adc
inc
mov
inc
jbe
in
aad
or
or
inc
xchg
in
std
mov
fs
rcl
push
or
mov
je
je
orl
or
fiadds
ljmp
shl
and
mov
adc
xchg
mov
jbe
fbstp
cld
adc
inc
push
scas
std
decb
bound
outsb
dec
test
mov
stos
pop
arpl
xchg
or
ja
or
fwait
xor
icebp
inc
push
arpl
or
pop
rolb
push
pop
sbb
es
xor
les
sar
lahf
repnz
cwtl
cwtl
mov
pop
sti
or
add
jmp
or
dec
insb
rcrl
lock
or
push
decb
shr
repz
pop
daa
icebp
out
mov
jno
push
xchg
movsl
xchg
lods
addr16
iret
les
xchg
clc
lock
bound
mov
lea
xchg
shrl
sbb
cmp
mov
aas
lods
imul
iret
mov
dec
xor
stos
fdivrl
lds
jecxz
jae
xchg
mov
es
arpl
aam
das
ds
insl
mov
add
dec
mov
outsb
fnsave
sub
push
lcall
pop
inc
les
push
push
inc
or
cwtl
out
mov
ret
jae,pt
mov
fisttpll
cmp
shll
shl
jmp
dec
push
xor
ret
dec
lock
shrl
jecxz
cmp
in
jmp
ljmp
lret
sbb
std
or
repz
in
adc
xor
inc
pusha
out
scas
mov
in
fwait
hlt
jle
dec
cli
es
push
cmpsl
nop
pop
mov
inc
fiaddl
lret
or
dec
andb
sbb
pop
clc
ss
cli
sub
mov
mov
xor
stc
pop
jl
iret
adc
inc
fidivrl
mov
cmp
sbb
inc
xchg
ljmp
adc
ja
jg
in
movsl
inc
ret
cmp
lea
aaa
cmp
fwait
pop
std
leave
pop
daa
and
insb
ret
es
and
jnp
out
leave
imul
lcall
aam
sti
pop
mov
fwait
ds
push
mov
imul
fimuls
scas
sbb
lret
outsb
fstpt
dec
sti
pop
mov
fwait
ds
push
mov
imul
fimuls
scas
sbb
lret
outsb
fstpt
dec
sti
pop
mov
lcall
out
pop
imul
fimuls
scas
sbb
lret
outsb
fstpt
dec
sti
pop
mov
fwait
sub
cmp
mov
movsb
push
ror
test
shll
popa
int3
int3
int3
int3
int3
sub
bound
add
push
adc
gs
jno
popa
loop
shlb
loop
xchg
lds
xor
xor
jne
inc
add
movsl
loop
mov
adc
xchg
lds
repz
lahf
pop
arpl
push
cmp
repnz
jmp
out
mov
xchg
loope
jmp
add
je
push
sub
cmp
mov
sti
xchg
or
sbb
jle,pn
cmp
lea
push
jno
ljmp
lret
stos
cmp
dec
sub
lock
stos
jle
sets
dec
bound
and
mov
mov
mov
push
lock
sbb
imul
or
adc
mov
add
adc
cli
test
fadd
and
xchg
aaa
lock
js
cmp
xchg
repz
enter
ljmp
adc
gs
mov
pop
xchg
fisubl
sbb
sub
push
or
push
ret
pushl
mov
jb
cmpb
jno
adc
adc
jmp
cli
sbb
stos
fnstcw
out
and
es
rorb
xor
xchg
loop
mov
mov
out
jb
bound
jbe
jns
aaa
dec
daa
jle
inc
data16
xlat
mov
xlat
stos
shl
loop
andb
imul
adc
push
repnz
loop
rolb
mov
aad
and
inc
adc
adc
push
repnz
loop
rolb
mov
aad
and
sub
sbb
or
cmp
xchg
not
jns
mov
mov
dec
ret
lret
loopne
xchg
test
cwtl
sahf
xor
or
outsb
xor
out
packssdw
push
jecxz
sahf
jns
push
js
das
das
push
push
mov
push
in
xchg
sub
mov
andl
mov
cmp
mov
ret
data16
adc
sbb
incl
aas
pop
xchg
popf
pushf
jno
ja
mov
in
imul
sbb
adc
pop
jge
jmp
rcrb
addr16
xor
xor
push
aaa
ja
mov
lcall
xchg
or
pop
inc
mov
dec
cmpsb
std
cmp
int3
sbb
sahf
mov
add
mov
mov
incb
pop
stos
cwtl
movsb
or
in
je
in
dec
shrb
pusha
inc
sti
movsb
push
fsubr
and
jg
jne
ficoml
push
push
mov
scas
mov
or
mov
test
and
dec
add
movsl
popf
push
daa
das
daa
or
pop
adc
ja
inc
cmp
stos
add
pusha
mov
inc
mov
iret
iret
imul
add
lcall
or
push
dec
scas
js
fs
cmp
pop
push
dec
cmpsb
ss
mov
cmp
scas
inc
jmp
sbb
out
iret
xchg
push
cmp
fwait
inc
sahf
pop
push
cmp
xchg
gs
fcoms
adc
sti
stos
je
push
dec
mov
out
loope
mov
jno
lahf
js
mov
inc
add
jmp
es
jmp
fidivs
jno
adc
sub
and
mov
inc
iret
arpl
rcrl
pop
mov
arpl
rcrb
and
ds
imul
jecxz
add
mov
push
test
dec
scas
mov
and
fucomp
stos
cli
sub
add
test
popf
xchg
sbb
das
push
jg
mov
xchg
popf
mov
xorl
jne
xor
cld
adc
or
dec
xchg
xlat
jl
repz
pusha
fistps
sbb
sti
test
cwtl
mov
sbb
mov
inc
cmp
aam
fs
or
aam
das
jl
fcom
sbb
das
jmp
fwait
loopne
loopne
stos
out
cmp
sub
jge
sbb
dec
mov
gs
sbb
dec
lea
inc
pop
or
lret
push
sub
test
imul
jnp
pop
sarl
add
pop
shrb
cltd
cld
pop
stos
mov
in
mov
cs
dec
mov
fmull
push
add
pop
mov
pop
dec
ljmp
fwait
jg
add
pushf
and
andb
cli
mov
push
fisubs
xchg
popf
subl
pop
mov
push
mov
push
arpl
add
shll
and
adcl
inc
mov
mov
adc
in
sbb
add
jecxz
jmp
test
or
mov
icebp
aad
dec
test
mov
insb
fiadds
mov
dec
mov
add
cld
xor
dec
jb
pusha
test
das
nop
sbb
mov
mov
lods
cmpsb
mov
das
push
jbe
mov
orl
stos
sbb
inc
adc
sahf
std
sub
js
sub
xchg
xchg
or
add
or
cwtl
andb
std
sub
sub
cmp
jnp
int
sbb
rclb
sbb
imul
andl
nop
inc
lret
add
adc
pop
pop
or
mov
inc
dec
in
test
out
push
sbb
sub
dec
pop
cmpsb
jnp
test
lret
xor
and
push
adc
loopne
mov
ret
push
idiv
mov
lahf
in
mov
movsb
hlt
movsl
loop
lahf
mov
push
dec
dec
lahf
fldenv
imul
adc
lret
jl
mov
lret
xchg
adc
sbb
mov
push
aaa
adc
stos
cld
jb
adc
lcall
inc
push
ljmp
jecxz
push
or
repnz
adc
or
out
xchg
adc
pop
jl
daa
int3
rorb
push
clc
jg
jle
pop
sbb
and
mov
jle
fs
ja
dec
popa
mov
push
mov
dec
lret
clc
inc
clc
inc
inc
fcompl
add
outsb
sti
adc
in
xchg
dec
ret
and
shl
xor
jmp
inc
or
stos
int
jmp
adc
sbb
jl
pop
int
adc
mov
pop
jnp
leave
shrl
ja
enter
pusha
mov
mov
testl
sub
xchg
xor
out
mov
repnz
cmc
xor
add
cmp
cs
add
push
fadd
inc
lods
inc
dec
pop
pop
dec
cmp
inc
mov
jle
imul
jo
aas
sti
dec
push
out
or
cltd
mov
faddp
lock
xchg
dec
inc
movsl
stos
mov
cmp
sub
xor
cs
sti
sti
pop
push
loopne
mov
test
sub
dec
rorl
aaa
cmpsb
in
jne
pop
je
imul
pop
jp
pop
sbb
into
sbb
dec
lret
mov
int3
sbb
adc
outsl
cmp
rorl
jo
or
mov
add
or
into
sbb
xor
adc
and
sbb
pop
jle
sbb
or
mov
mov
pop
push
gs
cli
mov
adc
sub
ret
in
fisubl
lods
js
loop
stos
loope
sub
fs
imul
push
cmpsb
mov
into
arpl
mov
jmp
pop
dec
jecxz
cbtw
stc
scas
sti
xchg
out
mov
leave
ds
mov
nop
repz
sub
cmp
sarb
repz
add
xor
xor
bound
dec
xchg
add
imul
cli
pop
xor
bound
mov
ja
test
sub
cmc
dec
jecxz
out
orl
mov
cli
mov
xor
loopne
cmpb
jae
mov
or
repz
inc
and
outsl
ret
fwait
iret
sbb
pop
enter
xor
cld
push
mov
and
push
sahf
aam
xchg
cli
pusha
jb
int
or
and
push
imulb
out
dec
aas
js
xchg
imul
stc
cmp
test
cmp
pop
and
pushl
sbb
xor
push
stos
push
xor
fs
stc
push
cmp
adc
pushf
push
cmp
rcll
adcb
loope
repz
into
es
adc
xor
aam
hlt
mov
jbe
push
adc
sub
mov
jnp
aam
and
jp
lea
lock
mov
mull
fxtract
sahf
xor
negb
and
sub
push
sub
pop
test
lea
sysenter
sub
sarb
inc
sub
pop
loop
pop
jns
jne
mov
sbb
jae
repz
pandn
inc
jg
push
mov
out
xor
int3
mov
jmp
xor
adc
sub
inc
add
push
and
and
mov
mov
stc
dec
pop
mov
jmp
gs
hlt
xchg
outsl
idiv
dec
lcall
scas
cmc
gs
loope
arpl
inc
popa
outsl
adc
pop
dec
pop
in
jge
jge
rcrl
stos
mov
fbstp
sub
pop
fisubrs
xchg
cmpb
sub
scas
xchg
cmpsl
push
xor
mov
add
call
sbb
sbb
jmp
sbb
cmp
cltd
or
sar
cmp
daa
stos
outsl
sub
mov
sbb
and
bound
jmp
out
ucomiss
adc
push
cmpsb
and
pop
lods
repnz
sbb
iret
mov
sub
and
jmp
jbe
jg
xchg
ja
mov
mov
xchg
xchg
int
add
sub
pushf
lahf
or
fs
jb
lcall
rcrb
js
jb
subb
dec
add
sub
mov
push
sarb
inc
addr16
inc
sub
shrl
out
cmp
pop
cmp
insl
cld
lret
in
int3
sub
ret
add
or
popf
cltd
mov
insl
scas
push
push
jnp
mov
in
dec
add
mov
add
sbb
pop
call
test
jp
and
sub
mov
fisubrl
ret
xchg
push
sbb
aad
rcll
cmp
cmp
mov
int
mov
mov
test
lret
fldt
pop
ret
ds
cmpsl
push
push
adc
mov
test
test
jnp
mov
xor
adc
mov
pop
daa
jmp
mov
loop
stos
cld
cwtl
or
pop
inc
sub
int3
icebp
cmp
mov
in
push
adc
jne
fidivs
jg
jno
loop
sbb
pushf
mov
stc
push
aas
ucomiss
sbb
mov
and
sbb
in
bound
ficompl
stos
xchg
add
dec
jp
xchg
sbb
cmp
xchg
mov
out
cs
jo
inc
sbb
and
enter
loop
pop
jno
cltd
adc
ljmp
sarb
test
adc
pop
dec
mov
cmc
sbb
aaa
test
dec
xchg
fnsave
andl
jae
push
insl
sar
add
fwait
scas
scas
adcl
adc
jmp
fmul
jno
cmpsl
adc
imul
xchg
sti
push
and
mov
in
add
mov
mov
mov
les
or
inc
or
popw
lods
and
dec
aam
sub
jmp
icebp
xor
jno
adc
daa
jecxz
ffreep
adc
sub
mov
mov
pop
sub
push
jmp
or
iret
cltd
insb
push
cmpsl
in
mov
in
lcall
mov
jl
jmp
in
sbb
add
popa
mov
push
ljmp
lret
mov
clc
jmp
dec
or
imul
pop
mov
loop
mov
push
push
into
enter
push
mov
add
lds
das
fisttps
pop
imul
lcall
sub
cmpsl
xor
add
xor
push
adc
int
out
cmpsb
cltd
inc
lret
xor
inc
jae
or
sub
push
pushf
jbe
shl
and
cs
lods
fstpl
shll
sbb
adc
or
lods
mov
decl
dec
fs
aad
cmp
hlt
add
dec
in
or
data16
dec
cmp
pusha
sahf
xorb
cli
jecxz
scas
push
imul
xchg
out
lea
frstor
ljmp
call
in
or
pop
fs
jge
lods
jae
push
cmpsb
or
repz
add
push
push
int3
jmp
xor
pusha
adc
inc
adc
notl
push
mov
ja
scas
shll
test
cld
mov
fadds
pop
mov
popl
lods
mov
add
leave
mov
sub
pop
dec
xchg
push
push
xor
mov
les
and
movsb
mov
hlt
aaa
in
bound
add
int
xchg
mov
add
arpl
stos
sti
xor
push
mov
lods
dec
leave
aas
mov
jae
dec
dec
les
xchg
mov
mov
or
mov
ss
and
push
adc
and
pop
lret
int3
sub
dec
out
es
sub
pop
in
into
std
fsubp
xchg
xor
fmul
roll
pushf
jge
in
push
lret
icebp
adc
dec
test
fs
fdivs
xlat
mov
scas
xchg
insb
in
jg
ss
xchg
pop
xor
and
xchg
sbb
cli
imul
fsubr
imul
ret
jg
into
imul
push
xchg
loop
popf
lea
adc
andl
sarl
xor
push
push
aas
mov
or
cwtl
movsl
cltd
sbb
pop
pop
scas
xchg
sbb
das
add
scas
add
sti
mov
stc
jl
dec
fisubrl
mov
adc
and
jnp
dec
xchg
sbb
mov
mov
push
outsb
in
movsl
in
enter
sarl
sbb
decb
insb
lret
dec
xchg
or
lods
idiv
push
jnp
les
and
sarl
cmp
inc
or
in
hlt
repz
jp
inc
xchg
sub
repnz
mov
inc
test
rol
ljmp
xchg
add
add
dec
or
cwtl
sti
bnd
pop
sbb
mov
stos
jge
test
ret
jno
ss
fistpl
out
enter
xchg
pop
dec
les
inc
sahf
xchg
ret
out
or
dec
jno
xchg
cs
and
jmp
es
adc
pop
addr16
or
lds
xlat
andb
out
ficoml
filds
cmpsb
lahf
push
sub
mov
push
jle
mov
in
adcl
dec
cld
dec
mov
mov
jb
mov
push
and
popl
push
dec
sarl
int
xchg
and
push
fstpt
jno
fistpll
mov
and
int3
xchg
nop
icebp
cmc
stos
fisttpl
pop
jp
out
rcl
rorl
jmp
ja
jns
aam
mov
jnp
push
lock
je
stc
scas
pop
xchg
or
int3
or
cld
xor
ljmp
add
sbb
mov
xchg
pop
or
push
mov
es
add
enter
lods
repnz
pop
and
pushf
scas
pushf
xorl
cmp
mov
push
mov
call
idivl
mov
xchg
or
dec
jp
cwtl
xchg
ja
lret
and
rclb
enter
add
or
xor
dec
add
adc
fsubrl
ja
ja
inc
sub
add
add
xchg
mov
and
mov
pop
mov
jmp
cmc
fs
out
out
inc
lret
nop
inc
test
es
dec
mov
xchg
pop
out
movsb
or
sub
mov
pusha
sub
stos
movsb
jno
outsl
cmp
cs
push
mov
pop
inc
bound
and
stos
sub
js
mov
sub
dec
add
inc
adcl
test
out
inc
addl
test
in
loopne
out
lods
cs
cmp
ret
xchg
int3
into
push
xor
and
adc
dec
inc
or
stos
inc
outsb
inc
call
push
push
in
mov
rcrb
mov
aad
xor
or
push
popf
add
inc
pop
dec
pop
push
imul
inc
mov
in
test
jne
lcall
into
or
sbb
pop
loopne
scas
enter
call
dec
testb
not
mov
les
aas
pusha
lds
cmc
and
mov
cmpsb
xor
dec
sub
insb
push
jmp
mov
mov
mov
xor
jb
aas
dec
das
add
ret
push
sub
negl
fucom
mov
jno
mov
and
iret
ljmp
dec
xchg
shr
rcl
scas
jg
sbb
loope
sbb
mov
call
adc
mov
mov
in
dec
rcll
repnz
mov
pop
enter
mov
aas
push
sahf
sub
fwait
mull
and
adc
es
fadds
xchg
push
mov
add
mov
sbb
arpl
cli
mov
stos
outsl
mov
mov
in
repnz
mov
inc
stos
das
fldt
cli
dec
pop
jbe
and
inc
sub
into
lret
sahf
sbb
dec
adc
cltd
mov
sarl
pop
outsb
jns
rcr
dec
push
mov
xlat
xor
mov
or
cmp
jae
mov
movsl
inc
filds
enter
outsl
fucomi
sbb
leave
mov
and
lock
push
fwait
dec
clc
sub
mov
jecxz
stc
pminsw
test
stos
mov
aas
lea
adc
cmp
lcall
lret
mov
icebp
dec
fbld
das
inc
pop
push
mov
mov
cld
jno
sahf
seta
fisubl
sbb
scas
lea
lea
mov
imul
cld
sub
cli
pop
lret
les
and
pop
shlb
cmp
test
or
mov
mov
sub
cmc
ror
repz
adc
or
out
insl
outsb
sub
dec
inc
ljmp
inc
adc
arpl
or
mov
push
pop
movsb
fbld
outsl
das
jmp
xchg
pop
dec
loopne
imul
jg
imul
outsl
rcrb
push
inc
xor
idiv
sub
loopne
mov
in
sub
outsb
xor
mov
dec
mov
jg,pt
lret
int
mov
fmull
xorb
fs
add
aam
xchg
xor
and
xor
pop
jo
and
lret
sub
aas
push
jp
mov
popa
lahf
cmp
jo
pop
jle
ljmp
and
jno
mov
xchg
sbb
in
lahf
cmpsl
push
xchg
mov
inc
sarb
scas
push
imul
inc
stos
cs
sub
loope
sub
call
pusha
cli
xlat
ss
adcb
orb
xor
ret
add
jp
add
les
or
adc
mov
mov
out
jno
xchg
popf
int
push
pop
push
xchg
ret
loope
and
jge
mov
add
mov
jbe
pusha
sub
xor
xor
mov
data16
in
mov
adc
pop
fdivr
sbb
inc
in
mov
mov
lods
fiaddl
call
mov
aaa
sub
fisttpll
sub
lret
lods
mov
insl
jnp
add
inc
mul
inc
mov
pop
in
or
fsubr
test
stos
xor
lods
lods
xlat
int3
mov
ds
xor
int
insb
cmp
mov
and
jo
imul
jo
or
nop
fisttps
xchg
unpckhps
movsb
push
mov
inc
push
fbstp
mov
je
xor
cmpsb
xchg
out
ficoms
rcrl
cli
cltd
xchg
push
es
sub
inc
pusha
fcomps
jne
pop
loopne
es
sbb
push
lcall
outsb
xchg
mov
cwtl
rcr
mov
shr
and
xor
sahf
and
ja
cmp
add
mov
test
sub
popf
or
adc
xchg
mov
add
push
insl
adc
aad
dec
push
repnz
pop
jnp
sahf
cltd
sub
ret
mov
jp
stos
push
and
into
cmp
js
push
xchg
add
insl
fnstcw
mov
sub
and
mov
cmp
mov
scas
sub
or
inc
cli
test
fadd
dec
mov
popa
sub
xchg
je
pop
add
jo
add
testb
push
rorb
rclb
icebp
adc
mov
add
lods
flds
pop
inc
jbe
sbb
daa
push
mov
decl
imul
dec
jmp
dec
pop
icebp
adc
mov
and
pushf
aad
sbb
lods
add
push
jg
pop
addr16
jnp
mov
fsubs
mov
push
jecxz
mov
xor
outsb
repz
jp
jnp
outsb
out
add
popa
and
sub
addr16
mov
lock
xchg
add
dec
cmp
xchg
push
sbb
push
mov
sahf
ss
push
and
inc
es
sbb
clc
rorl
or
pop
insl
inc
push
mov
adcb
test
je
xchg
xchg
xorb
jae
mov
add
clc
insb
dec
add
das
call
inc
mov
or
jno
add
cmp
sbb
test
and
mov
ror
mov
enter
ja
jae
data16
inc
sbb
ret
filds
outsl
push
push
bnd
xchg
cmp
jp
faddl
aam
push
mov
jl
xorl
mov
push
pop
mov
cmp
adc
adc
imul
icebp
xchg
pop
aam
mov
mov
push
subl
push
sbb
outsb
fnstenv
pop
ljmp
inc
cld
xor
adc
sbb
push
pop
cld
sub
int3
push
leave
clc
inc
jb
stc
out
dec
or
add
sub
mov
pop
sahf
and
pop
pop
mov
mov
ret
inc
in
jne
jg
movd
sub
mov
dec
iret
mov
push
adc
pusha
xchg
or
les
mov
sub
ffree
mov
in
outsl
in
shl
jns
test
jle
fwait
push
mov
lret
mov
add
mov
out
push
push
mov
adc
cmpsl
mov
test
ret
push
jecxz
fildll
ret
hlt
push
iret
popf
gs
sub
out
mov
std
inc
frstor
sbb
or
mov
lret
test
sub
cli
push
sahf
adc
lods
jge
and
jnp
cmp
arpl
mov
cmp
lods
and
mov
inc
in
and
ret
and
mov
mov
ficompl
test
adc
movsb
fiadds
and
fucomp
push
cmp
xchg
out
sbb
inc
shrb
xchg
mov
cli
ja
js
lret
rolb
call
mov
sarl
mov
addr16
or
jne
or
xchg
mov
push
sti
sub
pushf
mov
mov
add
jge
and
imul
adc
aad
xor
and
jne
cwtl
fs
jmp
cld
test
lods
mov
aad
sbb
and
cmpsb
ja
adc
jle
mov
cmpsb
xchg
fstpl
push
fstpt
xor
iret
xchg
xchg
sti
je
les
clc
jo
add
sahf
push
js
adc
adc
jne
cwtl
adc
push
mov
mov
adc
inc
aam
push
mov
jmp
popa
xchg
sar
xchg
imul
mov
and
ret
cld
fwait
pop
cmp
mov
xor
xor
jne
inc
add
movsl
loop
rolb
mov
aad
and
inc
adc
adc
push
repnz
loop
rolb
mov
aad
and
push
sbb
and
adc
push
repnz
loop
test
pushf
mov
cmpsb
cmc
xchg
int3
mov
inc
rcll
loope
push
xor
jne
lds
pop
js
ret
popf
sub
int3
int3
int3
int3
int3
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
push
sub
cmp
or
sbb
push
aam
inc
pop
push
mov
mov
add
adc
xor
xor
shrb
cmp
or
sbb
dec
mov
inc
test
jo
add
fld
sub
cmp
or
sbb
dec
mov
inc
test
adc
movsl
add
dec
lods
pop
mov
xchg
pop
dec
sbbl
inc
outsl
shlb
rorb
test
sub
xchg
arpl
hlt
sub
mov
std
mov
stc
out
mov
inc
cmp
stc
out
fistl
mov
xchg
lds
ss
mov
lds
movsb
shrb
sbb
dec
subb
inc
inc
mov
push
push
xchg
inc
popa
dec
cwtl
sbb
stc
inc
sbb
mov
das
mov
in
push
sbb
lods
xor
cltd
push
mov
iret
cmp
jo
das
push
jne
pusha
es
repnz
ret
jbe
mov
cld
std
data16
adc
lahf
sub
cmp
or
sbb
dec
mov
inc
test
jo
add
adc
and
xor
mov
pop
ret
cs
or
sub
loop
pminub
je
pop
mov
lahf
inc
xchg
push
xchg
inc
mov
cmp
push
enter
cmp
lret
dec
mov
jo
das
lea
insb
shlb
pop
nop
jns
dec
mov
inc
test
jo
add
adc
and
xor
shrb
cmp
or
sbb
dec
mov
inc
test
jo
add
adc
and
xor
shrb
adc
mov
inc
jne
lods
cli
and
pop
into
mov
sbb
ljmp
cmpsb
mov
fimuls
rorl
sbb
adc
jecxz
clc
adc
shrl
inc
sbb
cli
or
lcall
mov
xchg
popa
jg
mov
mov
in
push
test
and
lret
sub
xor
imul
movsl
mov
mov
or
repz
lcall
and
mov
sbb
xchg
test
dec
rcrb
pop
rcr
jmp
jg
dec
ret
daa
push
inc
jmp
push
icebp
imul
pop
orb
and
dec
das
sarl
iret
xor
sub
sahf
jnp
test
jae
mov
add
pandn
loop
pop
cmp
mov
add
inc
pusha
dec
ds
pop
jns
mov
cld
imul
es
xchg
cmc
pop
cli
xlat
inc
leave
pop
jmp
test
adc
jbe
xchg
push
lds
cmp
jb
test
aas
jb
aad
fxam
jo
iret
sbb
adcl
xchg
sub
add
cld
push
mov
int
and
lods
ret
xchg
add
push
xor
lcall
rcl
mulb
pop
or
aas
cltd
add
jge
rorb
or
ja
in
mov
lcall
or
stos
inc
sbb
jmp
aad
mull
cmpsb
jo
sbb
lods
popa
mov
lea
inc
aas
out
adc
inc
imul
fs
jns
notb
push
pop
pop
push
jo
sub
int
aaa
insb
shll
xchg
xchg
nop
push
mov
xchg
jl
cmp
dec
sub
or
cmp
dec
push
and
fisttpll
lods
lock
dec
fsubs
hlt
in
xor
push
push
push
xchg
sarb
push
lock
lock
sti
hlt
jns
inc
mov
xor
cs
or
ret
je
leave
cmp
sub
adc
loope
inc
and
adc
dec
pop
cs
mov
sets
js
lret
les
cmp
scas
jl
mov
pop
fisttpll
scas
sub
icebp
test
popa
mov
les
sbb
les
inc
or
or
pop
push
xchg
pushf
jnp
fsubrp
and
push
sbb
fcmovu
pop
jge
push
test
push
pusha
inc
add
sub
xor
rcrb
loopne
pop
inc
fsts
cld
lahf
imul
add
outsl
mov
int3
out
fldenv
jg
aaa
adc
mov
mov
xor
xor
lock
mov
aaa
xlat
scas
imul
repz
insl
add
imul
das
lods
xchg
gs
and
stos
mov
and
mov
mov
lret
stos
sbb
shr
test
bound
mov
fdiv
call
jne
or
lods
push
adc
add
rcrl
push
or
jl
aaa
jle
lret
out
lods
adc
push
jp
push
push
cld
sbb
add
push
pop
mov
andl
pop
cwtl
and
mov
loop
mov
sub
inc
enter
jl
mov
cltd
xchg
sub
jae
cmc
cld
scas
jp
scas
inc
out
add
fiaddl
in
fs
jmp
cmp
pop
mov
xchg
xchg
pop
cmp
sti
add
push
cld
mov
xchg
pushf
mov
inc
jg
sbb
jne
smsw
xchg
mov
dec
imul
add
and
sbb
dec
or
jae
pop
dec
mov
daa
add
or
pop
lods
aam
mov
hlt
inc
mov
cmpsl
jbe
loope
imul
fldcw
stc
fwait
je
xor
es
sub
pop
movsl
popf
cmpsl
adc
pop
inc
outsb
stos
imulb
bound
test
xchg
xchg
data16
jns
outsl
cmp
ljmp
fcomip
mov
mov
rclb
mov
aas
mov
and
mov
pop
mov
dec
in
cmp
pop
leave
sarb
xor
mov
add
xor
or
xchg
ss
and
mov
mov
sub
pop
or
mov
inc
xor
pop
sub
in
sub
lea
mov
fwait
jl
push
fstl
xchg
sub
or
and
inc
shr
mov
dec
xchg
jne
push
sti
fstl
jmp
dec
add
hlt
xor
sahf
movl
lahf
fcompl
xchg
ret
xchg
xlat
cmp
cld
mov
sub
pop
adc
inc
mov
dec
popa
mov
ds
andb
mov
jno
mul
push
jne
insl
int
outsb
jg
scas
daa
aaa
lods
mov
cs
test
ja
in
jge
mov
ret
clc
les
outsl
push
enter
andl
dec
lea
sub
push
add
add
inc
inc
into
ficompl
cmp
xorb
insl
or
rolb
inc
popa
imul
push
ficomps
mov
xor
push
fs
jg
icebp
push
xchg
shl
push
xchg
das
ret
push
fbstp
mov
aaa
loop
ljmp
aam
jge
insb
rolb
pushf
add
dec
out
out
inc
mov
icebp
sub
js
jnp
mov
enter
pop
in
push
sti
mov
jo
adc
pop
lret
js
mov
repz
out
cmpb
out
lahf
enter
insb
push
jnp
out
out
cmp
mov
fcomip
fcoms
out
mov
mov
arpl
pushf
out
js
mov
pop
imul
in
dec
xchg
or
pop
adc
addr16
jp
scas
clc
xor
pop
dec
bound
dec
push
cmc
xchg
sub
mov
ljmp
xchg
dec
outsl
movsl
lahf
test
pop
scas
std
subb
pop
in
xchg
lret
mov
inc
gs
aad
das
cs
fisubl
mov
cmp
in
test
outsb
mov
mov
pop
xchg
mov
nop
shrl
aas
xor
loop
iret
pop
mov
es
adc
xorb
cld
rep
inc
or
nop
pushf
fwait
ds
push
push
jp
mov
xor
mov
sub
aad
lods
notb
in
and
sti
pop
leave
cmc
mov
loope
ret
xchg
cld
xor
mov
loopne
shlb
lahf
out
sbb
cltd
xchg
shr
push
fdivr
add
xchg
fnstsw
add
mov
lret
rol
loope
cltd
jge
int3
ja
fidivs
popl
std
jns
lahf
and
and
xor
std
push
or
aaa
sbb
dec
sahf
mov
push
mov
inc
lcall
push
out
je
pop
push
arpl
psrlw
pop
jecxz
inc
adc
pusha
fidivrl
cmp
in
lea
jg
pushf
jns
push
aam
repz
in
adc
pop
or
inc
shlb
inc
cltd
cmpsb
into
sahf
push
pop
imul
sbb
inc
pop
js
std
orl
adc
mov
sbb
popf
icebp
xchg
sub
or
pusha
or
daa
mov
push
xor
lahf
add
in
out
sahf
lcall
add
xchg
pop
xchg
scas
cmpsl
xchg
mov
inc
sub
xchg
add
adc
imulb
add
jne
std
cmpsl
loope
mov
jecxz
adc
cmc
dec
cmc
or
in
push
xor
xchg
icebp
lods
pushl
arpl
xchg
enter
fldcw
sub
pop
out
add
cwtl
pop
mov
push
cmpsb
out
xlat
lret
lods
cs
cltd
push
icebp
pop
je
outsb
pop
mov
in
in
test
cli
stc
into
jle
xor
test
pcmpeqb
jp
call
cmp
andb
repz
push
mov
dec
and
add
cmc
hlt
xchg
jne
add
test
lcall
sbb
add
daa
imul
and
cmp
or
inc
pop
fcomps
popf
sbb
and
sub
adc
mov
add
in
mov
std
jle
mov
outsb
cmp
jmp
loopne
or
sub
mov
aam
aad
cmc
stc
addl
dec
xchg
ljmp
je
hlt
out
push
or
jb
inc
inc
dec
test
inc
push
in
adc
sub
packssdw
and
inc
rcr
loop
mov
cmp
int3
sbb
xor
cwtl
or
imul
xor
shrb
ss
mov
aad
mov
sub
xchg
jae
outsl
inc
icebp
std
push
pop
iret
push
data16
xchg
repnz
dec
xchg
adc
pushf
add
pushf
inc
sub
les
or
call
mov
lods
xlat
xor
lock
xor
cwtl
xchg
std
in
mov
lret
cli
enter
xor
test
imul
lds
cmp
rclb
in
sub
ret
enter
test
inc
sub
or
dec
or
ljmp
cmc
push
sahf
repnz
leave
stc
add
ljmp
lcall
or
mov
in
add
std
mov
pop
daa
mov
cwtl
into
jno
jno
mov
loopne
shll
sti
sub
sub
mov
and
out
pop
rcr
mov
das
jmp
push
inc
cltd
arpl
jbe
xor
push
mov
je
fwait
gs
bound
adcl
cmc
cli
ljmp
popa
sbb
mov
push
push
dec
and
gs
jo
add
fsub
push
dec
fimull
cld
add
test
repnz
jge
adc
jne
sub
ds
lret
into
pop
mov
lea
push
push
push
shlb
cmpl
mov
mov
dec
mov
aas
test
mov
xchg
xchg
mov
in
sbbb
shll
pop
push
mov
lcall
iret
fwait
int3
and
xor
or
jl
jae
pop
pop
js
mov
imul
and
jo
adc
es
or
fnstenv
call
jbe
jle
jb
fdivrs
cltd
dec
cmc
mov
sti
fs
dec
popa
xchg
dec
xchg
inc
xchg
jmp
xor
jecxz
or
adc
jns
stc
cwtl
fmul
xor
in
lods
xor
addb
seto
in
stos
or
mov
and
movsb
inc
xor
dec
rclb
dec
dec
and
cmp
push
in
xlat
and
repnz
jno
gs
xacquire
mov
add
addr16
cld
push
scas
loope
arpl
xchg
das
sbb
fcoms
xchg
mov
adc
aaa
sti
xchg
inc
bound
mov
jl
ss
cltd
mov
inc
mov
sub
sub
stos
ret
lahf
and
loop
mov
jno
xchg
mov
push
idivl
icebp
mov
in
rol
sti
lret
test
das
hlt
add
test
mov
pop
cmpsb
xor
mov
aam
pop
dec
pusha
inc
mov
xchg
mov
and
pop
jns
aad
lock
mov
stc
adc
inc
add
xor
xchg
mov
int
lret
xlat
jecxz
jmp
and
and
dec
mov
push
sub
push
lahf
xor
jmp
mov
mov
inc
lods
cmp
fwait
adc
fldt
std
xchg
mov
push
dec
push
jge
adc
and
adc
mov
pop
dec
mov
pop
dec
xchg
jno
adc
xchg
sub
sbb
test
and
pop
int3
add
lahf
xlat
xor
nop
dec
pushf
and
stos
jmp
mov
popf
xor
and
paddusb
add
xor
decl
into
jl
inc
sahf
loopne
or
mov
ljmp
out
sub
pop
bound
ftst
cmp
cli
and
xor
mov
and
and
push
mov
pusha
dec
or
lods
xchg
and
inc
sub
or
xor
bound
mov
mov
adc
inc
adc
test
dec
xor
sub
mov
inc
jb
addb
xor
movsb
jecxz
in
and
fiaddl
push
and
xor
inc
pusha
sbb
mov
adc
nop
cmc
sbb
and
jns
and
sar
sub
inc
sbb
push
enter
mov
pop
adc
movsl
cmc
cmpsl
lods
cld
mov
xchg
popa
adc
mov
cmp
enter
or
bnd
xchg
inc
adc
test
in
jo
jns
cmpsl
or
nop
dec
jb
jg
mov
pop
mov
dec
mull
outsb
in
cmp
ja
fidivrl
popf
mov
js
xor
lock
popf
xor
mulb
fisttpl
sub
mov
fsts
push
jle
mov
sub
add
xor
stos
ret
adc
jne
xchg
xor
adcb
dec
sub
cld
sbb
pop
dec
xor
push
sarl
mov
push
test
dec
cmp
lcall
lret
das
out
shlb
mov
pop
push
pop
test
mov
and
std
in
imulb
nop
fadds
cld
scas
notl
cwtl
cmp
fldcw
or
repz
setnp
pop
inc
sbb
push
jno
xchg
push
in
imul
push
mov
or
sbb
xchg
mov
lea
dec
stos
or
or
and
insl
inc
push
adc
std
popa
cmp
sub
inc
xor
das
pusha
xlat
sub
nop
jp
cltd
imulb
fcomps
addb
xchg
mov
add
adc
pusha
mov
xlat
lret
movsb
daa
les
xchg
sub
scas
cmp
cs
inc
adc
mov
adc
shll
mov
aad
dec
rclb
mov
fcmovbe
push
movl
scas
cs
mov
cmpl
das
sub
jecxz
mov
lcall
ret
jecxz
out
aad
and
or
int
push
dec
xchg
jmp
out
outsb
icebp
dec
notl
inc
lds
and
mov
sub
fldl
inc
testb
andb
xchg
es
mov
sub
mov
pusha
fistps
xchg
stos
xchg
add
sti
cmp
or
sub
mov
outsb
dec
mov
jmp
mov
xchg
lds
xchg
fildl
and
jb
lahf
cltd
test
loope
scas
mov
test
adc
cmc
in
fmull
rcrb
cmp
sub
or
repz
mov
addr16
dec
sbb
into
inc
adc
adc
jmp
adc
xor
push
cmp
mov
pop
cmp
cmp
sbb
aas
dec
cmp
mov
cmc
jge
movsl
xchg
jne
dec
dec
jo
fnsave
cltd
push
aad
outsb
les
loope
add
insb
ret
xchg
xchg
ficoms
daa
and
mov
add
mov
ficomps
iret
or
sub
sub
push
and
jne
cmpsl
test
iret
ret
or
push
ret
test
or
and
push
sub
add
pop
into
stc
cmpsl
test
push
subl
mov
push
add
pop
add
das
pushf
sub
pop
dec
xchg
mov
inc
lahf
movsb
pop
imul
cwtl
inc
roll
and
cmp
inc
pop
push
add
add
in
push
shlb
imul
ss
mov
dec
cwtl
inc
and
ret
push
loope
and
adc
pop
div
sbb
inc
sub
fadds
das
je
pusha
push
adc
and
imull
mov
add
push
xor
lret
lret
mov
jno
enter
add
lahf
mov
mov
ds
fists
sbb
enter
inc
dec
insb
sub
sbb
cmp
pop
ss
lea
push
fsubp
jge
loop
aad
pop
jns
mov
push
xor
int3
stc
inc
stc
mov
sub
mov
xor
loope
pop
mov
divl
js
sbb
fwait
imul
lods
aas
push
and
fsub
and
shrl
out
sti
cld
fisttpll
adc
jne
loope
push
scas
add
sbb
xchg
xchg
sahf
jmp
inc
push
ficoml
push
test
sub
popf
hlt
cmp
push
push
fcmovbe
cs
dec
cmp
or
xor
sub
testl
xchg
and
jno
addb
mov
fisubs
stos
jbe
insb
ds
and
xchg
int
mov
mov
jnp
outsl
sbb
stos
or
push
out
fildll
dec
mov
addr16
scas
jmp
idivb
xchg
pop
mov
aad
jmp
xchg
data16
addb
inc
in
pop
and
pop
xor
daa
outsb
lock
inc
fwait
sbb
xor
add
inc
or
stc
jp
out
call
xchg
inc
pop
xlat
insl
lret
jae
inc
and
cmp
sarb
mov
jge
loopne
rcrb
pusha
mov
imul
or
xchg
mov
imul
test
push
adc
mov
rcr
pop
movsb
cmc
mov
aas
xchg
fcos
pop
mov
add
out
call
pop
adc
int
out
std
je
test
in
xchg
sub
xor
clc
popf
adc
pusha
mov
dec
mov
and
and
inc
pop
mov
adc
sbb
mov
push
aam
popf
subb
xor
mov
insl
mov
insl
insb
int3
out
push
push
jge
popa
fistpll
imul
push
das
lea
add
jne
jecxz
add
and
cmp
and
mov
dec
dec
scas
cli
lods
cmpsl
negl
push
or
adc
call
sbb
divb
dec
mov
stos
sub
orb
out
lret
mov
daa
jecxz
lods
stc
icebp
sarl
shr
pop
mov
push
push
int
push
cmp
ret
fs
xor
mov
pushf
sbb
push
jb
icebp
adc
cwtl
pop
std
negl
and
pop
xchg
loop
push
sub
jno
nop
into
cmp
xchg
dec
mov
mov
dec
jno
iret
xchg
and
dec
rcl
mov
mov
cmp
out
fstp
jb
das
insl
dec
test
and
cli
sbb
inc
in
inc
adc
mov
loop
in
xchg
and
and
in
pop
clc
sbb
jae
jae
scas
sub
sub
mov
mov
push
aam
nop
sbb
mov
jo
add
xchg
xor
dec
nop
adc
daa
out
mov
mov
aaa
popa
cmp
ljmp
ret
pushf
pop
xor
sbb
fildl
pop
dec
fcoml
call
loopne
cs
or
push
std
jo
loopne
xchg
pop
movsb
dec
loope
mov
mov
push
push
dec
lock
sub
fstpl
jno
cmp
mov
jo
pop
mov
mov
inc
imul
mov
xchg
sbb
popf
dec
cmpsl
fistpl
das
dec
add
arpl
push
ljmp
adc
mov
sbb
cmc
sarb
mov
imul
mov
xor
lock
xorl
push
nop
arpl
mov
sbb
arpl
imul
test
push
mov
out
mov
ds
lds
shrb
iret
test
lods
idivb
add
mov
jne
stc
aaa
cli
push
sub
shl
cmc
lcall
mov
cmpsl
int
lret
jecxz
dec
mov
jo
int3
mov
adc
cmp
pusha
gs
and
xchg
test
mov
nop
push
cwtl
pop
sti
xchg
jb
out
pop
mov
xor
cmp
int
push
jmp
loopne
push
movsl
int3
xor
push
arpl
aaa
jmp
push
movsb
les
cld
jb
push
insb
pop
pusha
xor
add
out
pushf
icebp
out
mov
mov
mov
cltd
out
incb
aaa
pop
pop
sbb
and
adc
jno
push
mov
mov
mov
xor
jae
mov
xor
outsl
sahf
cmp
pop
negl
add
test
int3
xchg
ret
jns
mov
andl
fildl
xor
pop
pusha
adc
push
movsl
add
je
cmp
inc
jecxz
or
enter
aaa
aaa
xor
or
inc
arpl
mov
pop
mov
nop
xchg
sub
xlat
daa
xlat
jae
sbb
xor
dec
pop
pop
xor
xchg
xor
add
imul
sbb
and
sahf
xchg
imul
mov
push
jmp
lea
or
inc
jp
pop
lahf
test
or
adc
cmp
movsl
add
mov
pop
mov
jo
xchg
mov
testl
jl
push
or
mov
inc
xor
xchg
xchg
fidivl
push
fs
int3
aas
scas
frstor
inc
jecxz
xorl
xchg
mov
mov
adc
addr16
add
jne
imul
dec
jmp
xchg
sahf
mull
aas
push
or
sub
lret
loopne
and
adc
jbe
cli
adc
mov
jne
or
daa
mov
arpl
xchg
dec
mov
aaa
repnz
gs
setle
shl
or
pushf
mov
sahf
push
mov
pop
mov
imul
into
fst
jbe
lods
push
aam
push
jle
popf
mov
push
cmp
pop
enter
dec
inc
fldenv
test
inc
mov
dec
mov
in
xlat
push
mov
popf
jb
ret
mov
mov
fstpl
sti
adc
jge
xor
jecxz
and
insl
clc
sub
test
and
mov
fstl
jp
mov
xor
and
xor
sbb
sub
add
fmul
test
shlb
lret
orb
or
lret
cmp
jnp
adc
stos
jae
pop
ds
and
fiadds
loope
pop
push
stos
add
add
ds
lret
adc
sub
push
or
mov
inc
gs
sbb
jecxz
mov
mov
in
pop
nop
fwait
pop
inc
iret
add
pop
cs
leave
enter
push
pop
in
in
jae
mov
js
sbb
negl
mov
leave
ret
pop
insl
dec
or
fsubr
cld
lea
in
xor
js
sbb
shlb
cwtl
in
mov
imul
mov
add
adc
and
xor
shrb
cmp
or
sbb
dec
mov
inc
test
jo
add
adc
and
xor
shrb
cmp
or
sbb
dec
mov
inc
test
jo
add
adc
and
xor
shrl
cmp
or
sbb
dec
mov
inc
test
jo
ja
cwtl
push
fbstp
iret
es
int3
int3
int3
int3
mov
mov
lods
cld
xchg
xchg
sub
xor
lods
jb
into
push
cld
inc
in
mov
mov
sub
pop
loop
sarb
xor
lods
jb
int3
push
mov
mov
cs
loop
rclb
and
popa
jecxz
fistps
mov
movsl
sbb
sub
sti
sbb
dec
lock
imul
pop
pusha
cmp
jle
in
stc
and
fistpll
push
sbb
fcomps
mov
cmp
les
xchg
std
mov
or
or
lods
psllq
sub
xor
dec
or
xor
sar
jmp
aaa
cmp
cld
neg
mov
xchg
repnz
repnz
xchg
fcompl
fisttpll
xor
inc
mov
clc
outsl
mov
or
je
insb
and
ficomps
pusha
int
in
push
adc
lcall
sbb
iret
sub
pushf
dec
in
inc
inc
mov
frstor
push
cld
sub
sbb
cld
xchg
mov
loop
shlb
and
lods
add
jb
bound
cld
inc
xor
lret
or
jg
add
adc
es
jno
outsb
lds
mov
mov
mov
rorb
pop
out
mov
mov
adc
add
and
push
flds
pop
mov
andb
inc
xchg
dec
dec
sti
insb
orl
loop
sarb
xor
lods
jb
int3
push
cld
inc
in
mov
mov
sub
pop
loop
sarb
xor
lods
jb
int3
push
cld
inc
in
mov
pop
fldt
lahf
cmpsb
add
lds
cmpsl
mov
adc
mov
mov
mov
xor
aaa
jbe
ss
inc
push
jl
adc
int
lods
sete
dec
mov
nop
sub
inc
ficoms
sub
cmp
cmpsb
aam
mov
mov
sbb
loopne
ljmp
hlt
test
addr16
xchg
inc
push
sub
mov
in
jbe
aaa
icebp
lock
pop
rolb
cmp
ds
out
mov
push
fisttpll
inc
lret
shlb
xor
inc
fdivrs
movsb
xlat
imul
sbb
lock
pop
icebp
sbb
popa
sub
stos
loop
pop
outsl
jmp
jno
dec
sbb
xor
cmp
push
mov
cmp
out
jnp
sbb
add
pusha
jno
mov
ds
mov
stos
ja
push
xchg
shlb
jp
inc
dec
addl
xor
pushf
sub
dec
mov
stos
out
movsb
xchg
in
pop
enter
in
shlb
push
idivl
mov
jge
push
jecxz
into
lods
mov
lds
adc
cmp
cmp
sbb
lret
xor
pop
test
ficompl
das
cs
inc
fs
out
repnz
repz
and
add
test
cmp
xlat
pop
scas
mov
adcb
roll
jl
cmp
inc
cmp
hlt
push
mov
aaa
add
add
out
filds
lods
mov
dec
adc
cmp
jb
loopne
nop
sub
jl
and
bound
or
je
mov
sbb
sub
decl
push
mov
negb
aas
or
stc
xchg
mov
idivb
dec
fcoml
imul
push
imul
xlat
xchg
popf
cmp
mov
push
jb
xchg
pop
sti
mov
jns
jnp
and
mov
lods
lcall
dec
iret
out
in
jo
sahf
xchg
mov
lret
jbe
in
lds
pushf
lret
mov
inc
cmp
sbb
out
mov
mov
inc
fbstp
mov
mov
test
ds
and
aas
das
cmp
xor
adc
shll
adc
popa
push
add
testb
ja
int3
adc
rcrl
cmc
cmpsl
push
leave
mov
xlat
pop
popa
rorl
push
fistl
shll
imul
jmp
sbb
jbe
fldt
pop
movsl
add
loopne
xchg
ret
add
jnp
adc
daa
sti
push
fs
cltd
jmp
jo
pop
jl
lds
ffree
fucomi
les
jnp
daa
adc
fisubrl
cld
adc
enter
jno
pop
subw
cs
cltd
mov
pop
mov
inc
push
inc
adc
inc
rcr
inc
scas
jno
int
loopne
shlb
insb
outsb
add
add
cli
mov
pop
daa
insl
mov
add
shr
jmp
cmpsb
lcall
or
lods
mov
outsl
and
inc
adc
dec
inc
outsb
pop
fiaddl
and
push
out
push
sub
inc
xorb
stos
push
cmp
scas
jle
hlt
sbb
mov
mov
sbb
sub
jecxz
fwait
bound
xchg
sbb
push
cmc
jmp
xchg
jae
dec
jnp
xchg
out
xchg
pop
jno
pusha
rol
mov
cmp
sbb
enter
inc
inc
bnd
fldpi
aam
mov
push
stc
cmpsb
ret
sbb
mov
imul
mov
rclb
xor
in
pop
xchg
rcl
or
rclb
into
iret
rorl
push
js
pop
imul
outsl
sti
pop
jecxz
test
or
in
mov
jne
mov
lahf
test
push
je
leave
pushf
pandn
sub
imul
sbb
lahf
imul
jmp
adc
or
push
or
imul
or
mov
jle
lret
push
fs
push
xor
mov
in
fistpll
xor
cmpsb
dec
rcrl
dec
outsb
sub
pop
adc
loopne
jp
std
inc
pop
mov
jno,pt
sbb
sti
and
mov
sub
add
insb
push
dec
add
or
pop
ja
jae
fs
push
xchg
jle
push
add
xlat
sahf
push
push
or
test
jo
pop
push
jp
lods
scas
lods
into
test
outsl
cmp
mov
orb
mov
sti
push
mov
cmpsl
sub
lret
xchg
sbb
add
cmp
aam
fstl
dec
mov
xchg
mov
mov
out
mov
xor
movsl
xor
sbb
aaa
or
adc
push
jge
xchg
pop
or
cwtl
cmova
aaa
rcll
fbstp
jae
xchg
pop
cmpsl
push
and
sub
mov
cld
test
or
out
mov
es
dec
xor
lahf
sbb
icebp
enter
mov
xor
pop
dec
sbb
mov
and
lahf
ds
ljmp
mov
xchg
scas
ljmp
in
inc
push
test
and
ja
push
jmp
adc
xor
out
push
ja
mov
or
jge
pop
rol
repz
mov
out
xchg
loopne
sub
sbb
dec
movsb
stos
xor
fs
or
enter
lcall
sti
aaa
repz
cli
cmpsl
adc
imul
test
add
scas
inc
int3
dec
xor
adc
cmp
adc
sub
sti
popf
add
sbb
inc
addr16
cmp
sub
mov
repnz
out
inc
pop
shrl
push
mov
scas
popl
inc
mov
pop
xor
mov
les
and
mov
dec
adc
adc
add
xchg
and
mov
rorb
loope
adc
rcll
and
mov
cltd
and
xchg
scas
mov
inc
movsl
pop
dec
push
sbb
and
mov
cltd
jbe,pn
movsb
sub
mov
sub
imul
jle
push
xor
push
push
pop
aad
sbb
mov
aaa
or
or
xor
out
mov
xchg
enter
cmc
mov
push
sub
data16
movsb
inc
aas
push
dec
sbb
mov
push
or
or
repnz
ret
push
sbb
std
mov
jbe
cmpsb
xor
or
repnz
fsubrp
frstor
dec
jge
hlt
popa
pusha
jne
dec
out
pop
cli
mov
insl
push
jmp
dec
test
data16
lods
mov
enter
adc
cmpsl
divb
dec
bnd
sbb
xchg
inc
adc
iret
out
fisttps
sub
push
push
push
movsb
outsb
push
jbe
ficoms
in
sbb
arpl
mov
sbb
andl
inc
and
jmp
jmp
pushw
pop
loop
or
mov
lods
mov
xor
int
jae
test
pop
push
push
test
and
add
cltd
decl
fdivs
fdivr
cmp
push
stc
jns
dec
sbb
mov
push
xchg
es
jg
fimull
rcll
xor
push
repnz
jbe
pop
jp
inc
aad
sbb
fildll
test
or
dec
jo,pn
fcomps
out
jp
cmp
loope
or
xchg
daa
adc
jle
das
push
das
xchg
cmp
iret
mov
sahf
inc
loope
inc
add
xor
and
call
and
in
test
jne
jge
scas
inc
add
js
aad
dec
imul
sbb
xor
or
aam
addr16
ror
mov
inc
sub
mov
mov
adc
dec
add
in
jmp
xchg
mov
sub
and
int
ss
xchg
out
fdivrs
cs
push
xor
fsub
fwait
dec
sub
xor
inc
pop
cmp
test
fadds
jle
xchg
push
mov
notb
xor
jno
test
xchg
push
std
pop
scas
sbb
and
in
pop
dec
cmp
and
and
rcrl
bound
insl
mov
aad
rclb
dec
cli
xor
pop
push
dec
push
dec
cmp
pop
addr16
pop
sbb
push
in
lahf
addb
sahf
add
and
roll
inc
inc
mov
sub
inc
adc
push
add
adc
inc
mov
lcall
fwait
sbb
mov
dec
add
adc
arpl
inc
pushf
xor
lock
pushl
aad
repnz
test
push
inc
pop
jns
sbb
jle
js
fadds
inc
jns
aas
daa
xchg
mov
inc
lods
outsl
adc
test
mov
stos
stos
jnp
test
push
shlb
je
cmp
rcrl
ret
fdiv
mov
dec
jno
movsb
or
in
test
jg
adc
rclb
cmpsb
pop
loop
incl
xlat
scas
mov
or
or
add
or
sbb
pop
and
push
push
or
movsl
cmpsb
xor
repz
jbe
add
push
outsl
and
in
jno
dec
inc
daa
in
pop
sub
imul
cmc
out
data16
cmc
mov
iret
mov
push
add
push
push
sub
xchg
mov
daa
arpl
les
std
sarl
and
data16
jae
ss
test
jne
sub
sar
stos
jmp
push
jmp
push
decl
in
popf
mov
repz
sbbb
test
cmp
mov
mov
dec
fwait
cmp
jbe
movsl
mov
xlat
jg
fldenv
cltd
add
ja
xor
mov
jle
mov
cmp
push
inc
xchg
adcl
or
mov
inc
or
push
leave
repnz
lods
mov
xorl
xor
push
cli
pop
mov
loopne
sub
iret
lcall
xor
ja
mov
in
xor
jmp
out
addr16
loope
sub
pop
sar
mov
dec
imul
out
outsl
loop
es
fbstp
push
mov
out
xor
cld
rcl
insl
cld
jmp
negb
lods
or
xor
sub
aas
aas
cmovp
fstl
popa
push
sahf
xor
inc
dec
mov
imul
ss
cmpsl
or
and
pop
insl
sub
adc
cld
mov
pop
inc
mov
flds
mov
or
mov
add
outsl
dec
sbb
xor
xor
mov
shlb
pop
and
lret
jl
in
mov
cmp
pop
std
cmpl
cmp
bound
sub
roll
xchg
push
cmp
jnp
lods
aad
int
mov
lods
cmc
cmpl
add
lahf
push
aad
sbb
jl
cmc
push
adcl
stc
lret
mov
ljmp
ja
push
cmpsb
pop
dec
mov
or
add
popa
pop
aad
cmpsl
xlat
out
pop
imul
jp
pop
subl
jb
and
in
jmp
adc
dec
sbb
das
adcl
push
xchg
ja
mov
adc
ret
loopne
cmp
in
pop
xor
loope,pn
fdivrs
mov
mov
add
nop
arpl
clc
mov
stos
jae
testb
dec
clc
inc
cmp
in
sub
jnp
jb
daa
cmpsb
data16
xor
pop
cld
inc
icebp
dec
addr16
clc
mull
jecxz
fiadds
dec
xchg
cmp
pop
adc
adc
pop
mov
into
and
addr16
add
outsb
push
test
jo
cli
shlb
sbb
mov
sbb
sub
sbb
aam
jg
aad
lock
test
push
jg
outsl
clc
js
inc
pop
pushf
les
cli
out
or
callw
push
pop
jp
mov
and
in
rcrl
int
dec
xor
cmpsb
out
mov
sub
stc
sbb
stos
pop
sbb
or
sahf
scas
inc
enter
divl
pop
pop
test
pop
loop
jecxz
and
mov
test
daa
mov
popa
ficoml
int
adc
mov
mov
rcll
rcr
mov
test
mov
pushf
jmp
scas
add
mov
sub
sbb
xor
and
sub
jne
mov
xchg
hlt
mov
jg
or
cmpsl
sahf
bnd
stc
jg
scas
mov
test
mov
jle
mov
jo
inc
mov
xor
negb
mov
mov
and
sub
mov
cli
cmp
arpl
xchg
add
sti
call
mov
or
cltd
and
sub
dec
sub
mov
out
or
cli
adc
inc
push
cmp
xchg
mov
repz
push
pop
xor
dec
test
cmp
lods
sar
aas
push
mov
mov
lahf
inc
cmp
shlb
dec
loop
dec
lret
imul
cmp
mov
add
imul
push
cmp
sbb
or
std
ds
nop
cwtl
xchg
int3
inc
push
add
pop
jne
sarl
fstpt
js
test
aas
lds
repnz
xchg
aad
lock
jl
sub
ret
push
in
push
repnz
push
inc
fisttps
ss
pop
xchg
int3
cmp
popa
gs
add
push
daa
fs
or
jmp
lcall
sub
or
inc
push
movsl
sub
cltd
cmp
out
outsl
test
sub
cs
in
sbb
rorl
imul
lods
mov
mov
push
dec
out
and
dec
push
enter
lds
pop
stc
shrb
pop
nop
jge
aad
or
iret
xchg
lcall
sub
jne
push
jo
mov
int
fs
subl
dec
or
popa
cmpsb
sti
or
cmpsb
out
cltd
adc
js
fistpll
mov
cmc
cmpsl
jo
leave
push
jle
jle
pop
into
cld
mov
sbb
ret
shrb
loopne
cmpsl
cltd
adc
and
sahf
shl
popa
cli
cltd
rcr
icebp
cmp
adc
jo
dec
mov
daa
mov
adc
mov
jnp
sbb
cmp
mov
int
popa
xor
or
sti
cld
sbb
into
sbb
jge
sahf
loop
jmp
popa
mov
addl
shlb
sub
pop
scas
mov
cli
dec
sbb
jo
movsb
push
or
in
bound
or
pop
push
mov
inc
push
fsts
loopne
sbbl
and
sub
shr
inc
scas
out
loop
adc
push
addr16
dec
lods
out
xchg
out
in
pop
cli
out
or
test
leave
sbbb
es
incl
arpl
cmc
rcl
mov
std
and
xorb
outsb
sub
xchg
out
ja
popa
push
aad
xor
subb
lods
ljmp
mov
out
jp
loopne
gs
mov
out
ficompl
sbb
movsb
push
dec
in
xor
or
test
xchg
push
scas
movsb
inc
testb
push
or
sbb
lods
xchg
adc
mov
test
mov
stos
mov
lods
xor
cmp
mov
xchg
inc
in
adcb
cmp
imul
xorb
xor
mov
pushf
lret
cmc
es
mov
ss
jbe
in
lcall
mov
hlt
xchg
or
les
les
sub
in
mov
xor
shrb
xchg
enter
xchg
sbb
or
push
xchg
clc
inc
lds
outsl
add
cmp
dec
pop
fmul
jge
xor
jmp
sub
sbb
mov
pop
push
lret
repz
push
lods
mov
push
lods
aad
mov
fstps
test
xlat
test
and
sub
in
pushf
je
inc
mov
jns
or
inc
divb
lcall
rclb
icebp
in
push
nop
adc
push
cltd
push
lods
push
outsb
jmp
xchg
data16
jne
adc
rcrb
int
scas
fisubrl
popa
ljmp
cld
fistpll
cmpsl
negl
dec
outsl
sub
cmp
iret
cltd
or
adc
repnz
mov
push
fsubl
mov
aad
dec
nop
out
loopne
mov
xlat
lods
or
lcall
clc
push
or
mov
sub
or
xchg
xchg
mov
push
ds
fmulp
arpl
hlt
mov
imull
rcll
adc
push
mov
xchg
mov
outsb
mov
mov
add
add
int
sahf
les
repnz
mov
push
inc
mov
stos
outsb
xlat
mov
pop
inc
mov
xor
stos
inc
imul
sub
out
adc
shrb
repnz
inc
sbbl
push
mov
addr16
cs
aas
push
dec
or
ds
jle
xchg
aam
arpl
mov
roll
lret
popa
notb
push
lea
out
xor
stc
rcr
and
cli
lahf
push
lahf
dec
in
cmpl
pop
fdivp
mov
lods
xchg
in
xorl
inc
mov
lods
xor
aaa
adc
imull
std
popa
ja
pop
stos
jmp
repnz
inc
inc
push
inc
jo
pop
clc
push
and
mov
hlt
lds
movsl
cmpsl
sub
js
jg
repz
dec
dec
mov
mov
push
frstor
ljmp
sahf
sub
sbb
jg
lahf
sbb
or
in
mov
std
jp
push
pop
sub
add
mov
xor
fstl
lahf
je
call
and
xor
push
iret
inc
cs
mov
push
sar
push
xchg
arpl
xchg
daa
mov
test
push
mov
les
loop
outsb
jns
out
sbb
mov
es
inc
dec
and
fisttps
lea
shlb
cmp
push
jg
vminps
test
jg
xchg
mov
sub
jnp
jmp
inc
xchg
mov
out
shrb
mov
out
mov
xor
imul
xorl
jbe
push
push
loope
pusha
jmp
nop
xchg
mov
shrl
adc
or
xor
hlt
aad
fnstsw
mov
sub
mov
sahf
cmp
adc
insl
mov
fdivs
adc
in
pop
shl
in
mov
xchg
pop
adc
leave
dec
out
adc
shlb
pop
sbb
and
mov
mov
mov
pop
cmp
cmc
or
dec
dec
lods
add
adc
insl
mov
lret
add
aad
shrb
jo
mov
mov
mov
inc
out
pop
jmp
mov
mov
mov
mov
dec
rcrb
inc
movsl
ret
ret
mov
lods
mov
jno
inc
xor
arpl
mov
bound
jno
out
popa
daa
test
dec
jns
add
pop
scas
push
mov
outsb
ror
mov
pop
inc
andb
daa
in
inc
stos
rclb
ja
outsb
or
jns
sub
js
leave
mov
sub
icebp
mov
cmp
cltd
xor
mov
fisttpl
jg
mov
jo
mov
push
aam
insl
cmp
repz
adc
push
stos
mov
fs
insb
mov
stos
data16
scas
lock
out
repz
idivl
pop
lret
xor
icebp
fwait
xchg
fiadds
rcll
mov
jecxz
rorl
mov
xchg
add
adc
or
sti
aad
sahf
push
fldt
mov
popa
dec
sbb
ficoml
inc
and
dec
int
add
pop
lcall
sub
imul
inc
aas
rcl
dec
inc
fmul
clc
pushf
sub
push
add
jb
test
sub
lcall
push
mov
or
push
ljmp
and
movsl
inc
pop
jg
ljmp
mov
cmp
adc
jmp
enter
push
push
ror
sbb
sbb
jbe
jnp
sub
sti
mov
mov
xor
mov
xor
daa
cmp
mov
jno
push
cmp
jo
rcrl
aad
int3
outsl
push
repnz
adc
insl
ds
jo
adc
mov
aam
dec
jge
add
movsl
cmp
jmp
cmpsb
push
fwait
push
pop
jae
mov
into
call
mov
sub
fisubrl
mov
mov
popa
mov
pop
cmpsl
pushf
fsub
adc
sub
movsl
cmpsb
in
mov
xor
mov
fldcw
push
jmp
mov
fstpt
push
add
mov
inc
cmp
cwtl
mov
sbb
rorl
mov
call
xchg
into
and
pop
rcr
ss
test
test
out
cmp
aad
inc
movsl
xchg
push
enter
xor
scas
jne
loop
ss
call
sub
xlat
cmp
and
add
cld
int3
pusha
popf
iret
movsl
mov
js
jb
jnp
ds
adcl
aaa
shll
jbe
sub
cmp
cltd
adc
loope
push
cmc
cmp
push
nop
jp
mov
xchg
sub
rol
cmp
mov
ret
loope
roll
xchg
mov
xchg
dec
cmpsb
aad
incb
and
pop
popa
pop
fcmovne
jae
inc
push
ret
xchg
inc
jbe
lock
dec
hlt
xlat
clc
das
lea
push
adc
mov
jg
xchg
cmp
aas
lret
daa
icebp
pusha
mov
out
int
movsl
mov
loop
iret
inc
stc
cmp
xor
cmp
push
lret
loope
inc
pop
jno
fcompl
ret
out
xor
data16
mov
xor
dec
dec
lret
shrl
idivb
dec
xor
cli
leave
leave
stc
mov
xor
lea
call
test
xchg
mov
sar
inc
cmpl
mov
aam
testb
subb
loop
sarb
xor
lods
jb
int3
push
cld
inc
in
mov
mov
sub
pop
loop
sarb
xor
lods
jb
int3
push
cld
inc
in
mov
mov
sub
pop
loop
sarb
xor
adc
int3
push
faddl
mov
mov
sub
sar
ret
arpl
es
push
ljmp
int3
int3
int3
int3
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
mov
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
call
push
mov
call
xor
leave
ret
aam
movl
cmpsl
mov
sbb
add
xor
and
push
pop
add
je
fs
movl
hlt
cmpsl
in
adc
add
xor
and
push
pop
inc
aaa
je
outsl
xchg
xor
movsb
mov
out
test
sub
inc
add
push
jne
arpl
jnp
mov
rorb
add
adc
je
sub
jae
push
pop
pushf
xor
and
ja
bound
sub
cmp
clc
sub
mov
xor
and
aaa
je
cwtl
sub
icebp
enter
dec
mov
aam
cli
bound
addr16
push
inc
ja
mov
or
test
mov
mov
aad
aam
sbb
inc
adc
lret
call
mov
inc
sub
lret
bound
imul
cmp
sub
ja
les
push
pushf
pop
add
jne
xor
adc
divb
outsb
dec
aas
xchg
popa
fs
adc
lcall
mov
movsb
jae
inc
mov
add
xchg
adc
add
xor
and
push
or
and
repnz
loop
mov
cmpsl
xchg
push
js
insl
adc
dec
cmp
pop
testb
aad
into
test
ljmp
adc
dec
outsb
cmp
pop
add
mov
shlb
hlt
cmpsl
in
adc
add
xor
and
push
pop
inc
aaa
je
xlat
xchg
movl
hlt
cmpsl
in
adc
add
xor
and
push
pop
inc
aaa
je
xlat
xchg
popa
xchg
xor
adc
insl
xor
leave
rcll
faddl
xchg
outsl
ret
or
mov
in
movsl
mov
fisttps
inc
push
cs
ret
jmp
mov
sbb
pushw
rcrb
out
leave
scas
ret
xchg
mov
dec
jno
test
adc
xchg
adc
or
jb
push
in
movsl
inc
ret
ljmp
jge
mov
daa
push
or
xor
pushf
dec
leave
popa
outsl
xor
or
pop
hlt
sub
mov
pop
fidivrl
mov
stos
and
or
xchg
cmp
movsb
lret
cmpsb
inc
int3
scas
adc
cmpsl
jecxz
cld
stos
and
mov
lret
or
push
pop
clc
push
lds
xor
inc
ss
insl
jp
push
ja
aas
cmpsl
pop
iret
mov
lret
scas
mov
xchg
popf
mov
mov
incl
add
fbld
adc
aas
out
loop
iret
popf
push
adc
pop
aad
stc
sub
std
mov
push
add
xchg
lods
mov
sub
xorl
das
les
cmp
das
cmc
lods
mov
or
lret
pop
jl
fnstcw
cmp
or
out
mov
mov
push
jno
push
xchg
imul
mov
notw
popf
js
mov
stos
or
sahf
dec
mov
shl
xchg
ret
cmpsb
outsb
mov
fildl
jle
cld
sbb
test
jne
ds
push
call
xlat
or
push
lretw
fs
jae
mov
xor
and
jnp
push
int3
shl
cli
or
out
inc
outsb
sbb
or
loopne
mov
call
sbb
addr16
shlb
loope
sbbl
adc
mov
mov
add
xchg
iret
inc
fldl2e
fwait
or
loop
inc
or
lret
cltd
popa
stc
xlat
andl
mov
movsb
data16
incl
sbb
mov
xor
mov
icebp
outsb
leave
adc
cmpsl
inc
je
and
test
push
pop
outsl
xchg
xor
outsl
add
test
pop
and
dec
add
je
mov
fdivr
sbb
ss
movsb
mov
jne
sti
mov
sti
sub
pop
fsubr
mov
dec
dec
in
cmp
mov
nop
dec
cld
or
cmp
les
hlt
aaa
push
push
call
xor
leave
in
mov
xchg
dec
fwait
int3
les
out
pop
xchg
push
pop
orb
mov
jno
jl
and
mov
jmp
pop
xlat
mov
pop
outsl
xchg
fbstp
push
testb
lcall
test
mov
jno
insb
stos
inc
bound
push
mov
aaa
and
inc
out
xchg
inc
lea
mov
lds
mov
pop
or
std
icebp
lcall
pop
dec
push
or
mov
jb
fs
jae
shr
addl
jmp
xor
mov
aad
dec
pop
testl
cmpb
cltd
xchg
out
mov
xorl
fdivs
jb
mov
icebp
push
mov
rorb
push
mov
dec
shrb
add
push
mov
sub
adc
mov
adc
mov
ss
lahf
cmp
iret
int3
imul
xor
repnz
movsb
dec
insl
mov
sbb
insl
mov
pushf
lahf
lods
cltd
xor
xor
stc
js
nop
popa
xor
jne
inc
lock
xchg
hlt
mov
xor
int3
dec
pop
cli
std
sub
dec
out
loope
pop
bound
mov
and
repz
or
es
mov
jne
mov
sbbl
rcl
pextrw
cltd
xor
cmp
jle
xor
mov
decb
gs
out
mov
xchg
push
push
dec
jae
sbb
int3
mov
repnz
outsb
test
sbb
sub
mov
pop
cmp
inc
and
pop
js
xchg
push
repnz
fdivrl
dec
sbb
lret
mov
orb
or
cli
or
mov
or
rcll
mov
inc
xor
inc
dec
cs
sub
mov
sub
inc
lock
cmp
or
dec
fs
jb
mov
xchg
into
enter
mov
cmpsb
test
mov
lcall
aaa
repnz
push
cmpsb
es
cmc
je
aam
sub
xor
cmp
mov
fstp
mov
outsl
dec
push
xlat
rclb
inc
iret
inc
shrb
fs
push
ret
mov
xor
movsl
ror
jge
inc
jno
mov
push
push
jle
jns
sbb
fidivs
xchg
cmp
cmc
cmp
xchg
xor
mov
ret
cmp
test
addl
xor
in
ja
in
pop
aam
cmp
mov
xchg
pop
imul
mov
mov
sbbb
cmp
mov
xchg
imul
jl
mov
cld
call
in
mov
lret
hlt
les
pusha
pop
in
int
divl
pop
idivl
add
addr16
test
lcall
sbb
jl
inc
mov
mov
ret
and
mov
lret
cmp
jne
and
flds
sub
add
xor
add
mulb
ficoml
xor
insl
pop
outsb
sbb
out
rcl
out
pop
inc
pop
divb
mov
dec
es
xor
jb
push
jns
lds
test
sbb
mov
jmp
inc
call
cld
sbb
cmp
popa
cli
mov
push
push
mov
gs
mov
fldl
sbb
xchg
es
push
int
ss
add
cmc
mov
cltd
mov
push
fimull
test
cmp
mov
fs
xchg
stos
aaa
push
add
cmp
adc
fwait
xchg
xlat
into
push
movsb
data16
inc
js
popa
pop
add
and
sti
cld
in
push
int
and
mov
mov
hlt
stc
enter
jg
add
popa
sti
fmuls
mov
enter
lahf
inc
fsubr
or
and
sbb
inc
pop
pop
push
jle
xchg
fwait
xchg
xchg
dec
fdiv
cmpl
push
mov
mov
lahf
push
mov
xchg
outsl
jge
stc
sub
movsl
push
leave
test
or
mov
bswap
jp
sbb
lods
xchg
push
lcall
rdmsr
xor
das
lods
sbb
pop
loop
mov
pop
lds
xor
jns
and
pop
dec
ja
ret
rorb
mov
xchg
cmc
mov
dec
pand
jp
jp
pop
fcmovu
mov
test
int3
push
test
and
fwait
mov
lds
push
lds
mov
jle
and
sti
jb
mov
adc
add
out
adc
sub
cmc
mov
add
lret
in
pop
push
arpl
add
in
das
gs
sub
or
decb
fistpl
cwtl
xor
scas
fstpt
loopne
loopne
arpl
cmpb
cmp
pop
pop
in
ret
data16
jmp
scas
mov
jnp
js
fucomp
or
enter
bound
insl
sbb
aaa
sbb
fadd
push
jb
ret
sbb
icebp
mov
xor
xor
sbb
adc
test
and
push
xchg
loope
push
ret
mov
jecxz
push
cmp
pop
outsb
dec
imul
or
jo
xchg
popf
mov
nop
test
es
sub
dec
xchg
fdivs
mov
scas
sti
pop
sbb
push
cmp
jg
cwtl
inc
adc
push
in
push
in
push
repz
arpl
mov
dec
jns
test
not
dec
push
mov
dec
hlt
xor
aam
hlt
js
aaa
sbb
decl
insl
ds
fs
out
pop
jle
das
subb
push
sbb
negl
mov
jb
mov
mov
cli
inc
call
adc
cwtl
out
aad
dec
inc
testb
inc
xor
in
push
lds
pop
sarb
ja
sub
pop
xor
xchg
push
pop
mov
ljmp
mull
insb
cmpsb
jp
scas
cmp
fildl
mov
push
fldenv
mov
sub
sub
loope
test
ljmp
pop
jno
pop
mov
push
and
stc
push
add
mov
mov
sub
loope
pop
cltd
push
mov
sbb
sub
sbb
gs
pop
and
das
pushf
inc
es
push
fsubp
pop
in
pushf
fadds
shr
mov
loop
cmp
or
clc
call
dec
add
xor
and
repz
cmp
lcall
movb
loop
test
jno
add
sub
jge
pop
mov
sbb
lahf
or
sub
or
xor
out
xor
int3
xor
jns
sbb
lea
aas
inc
push
cmpsb
int
mov
cmp
sbb
shrb
mov
sub
out
cmc
stos
sub
subl
jae
fs
adc
pop
dec
xchg
popa
mov
mov
mov
xchg
mov
pop
xor
inc
pushf
js
leave
xchg
mov
rolb
mov
cmpsb
ss
cmp
dec
aaa
ds
ret
jmp
add
pop
inc
sbb
pop
mov
lret
loop
into
jg
mov
int
xor
xchg
test
mov
mov
dec
cltd
enter
out
or
mov
mov
iret
pop
lods
pop
add
mov
inc
scas
xchg
repnz
out
inc
int
dec
sbb
and
jns
mov
outsb
shl
xchg
sub
jl
in
add
int
test
mov
mov
push
pusha
inc
fsubrl
xchg
push
inc
mov
in
push
lret
adc
test
cld
jns
les
fsubrs
pop
pop
inc
sti
js
mov
pushf
shll
xor
or
not
loope
mov
sbb
das
sbb
test
in
adc
adc
or
adc
xchg
stc
mov
mov
cltd
icebp
in
cmpsl
ss
testb
jg
jle
sbb
adc
rorl
addr16
and
test
push
arpl
iret
ss
or
popf
xor
adc
add
pop
mov
push
sbb
sti
in
leave
fisttpll
jo
cmpsb
mov
pop
jbe
xor
sti
jg
mov
jg
fsts
inc
cmpsl
dec
aam
xchg
xor
jb
sub
sbb
orl
cwtl
jae
andb
jne
in
call
arpl
adc
test
jb
cmp
shrl
inc
push
aad
iret
or
lret
mov
adc
pusha
adc
jnp
mov
loop
loopne
jg
addb
jbe
pop
gs
inc
or
pop
xchg
lods
push
ljmp
shlb
leave
movsb
inc
push
add
loop
sbb
xchg
inc
add
lea
adc
mov
and
mov
xor
mov
fstpt
hlt
push
loopne
ss
add
imul
int
mov
in
sub
lea
out
sbb
sbb
cs
or
int3
pop
pushw
dec
dec
repnz
cwtl
mov
push
mov
in
jp
mov
cmpsl
and
push
jne
popf
sub
call
add
stos
adc
xchg
fcmovnbe
test
pop
push
test
lret
push
sub
cmpsl
jae
hlt
add
popf
pop
insb
imul
movsl
in
jnp
in
mov
sbb
imul
xor
add
es
jge
jle
std
jne
jnp
aam
pusha
xchg
push
inc
xlat
or
sbbl
cli
stc
ja
mov
fdivl
sub
jb
cmpsl
js
or
out
inc
adc
hlt
insl
xor
rol
add
inc
adc
mov
sar
mov
out
xchg
loop
pop
dec
outsl
mov
cmp
xor
xchg
ret
in
stc
fdivr
xchg
fcmove
mov
xor
cs
inc
call
or
xor
inc
std
jae
imul
push
lcall
push
cmpsl
push
xchg
ja
add
jne
loop
roll
sub
stos
mov
into
xor
cltd
and
cwtl
lcall
push
std
mov
les
mov
es
jo
push
fcoms
jb
test
repnz
sub
pushl
and
addr16
push
xchg
mov
push
out
cmc
sahf
iret
and
xor
mov
jne
fsubrs
sub
lods
inc
and
xor
adc
pop
mov
fcoml
push
dec
aaa
xchg
sbb
or
jl
and
dec
inc
insb
test
mov
inc
sbb
mov
inc
sbb
int
jne
dec
xchg
pushl
pop
lret
inc
test
push
inc
adc
shr
mov
add
jge
loop
fildl
cs
adcl
cmp
aaa
cmpsl
or
in
lods
dec
adc
cltd
push
arpl
xchg
cmp
shrl
repnz
cmp
es
cltd
sbb
sub
test
xor
fs
in
lret
push
xor
add
mov
addr16
stc
daa
sti
push
or
ss
adc
push
xor
sbb
jmp
stos
orps
pop
sub
lcall
jmp
cmp
or
daa
jl
arpl
dec
mov
inc
outsb
cmp
sub
data16
sub
mov
les
in
negl
mov
sarb
adcb
je
pop
rcl
popa
mov
lcall
sub
popf
push
fisttpll
mov
in
scas
mov
rcrb
sahf
das
lods
inc
push
lods
movsl
mov
test
push
cmp
xor
xchg
add
lock
shr
adc
ret
push
pop
xchg
jne
mov
sub
in
or
cmp
xchg
inc
fldcw
jne
push
lock
fistpll
hlt
pop
jp
mov
arpl
data16
add
sbb
add
pop
xchg
or
outsl
ss
sub
pushl
fbstp
or
test
jecxz
sub
add
enter
xchg
mov
xchg
push
daa
or
inc
or
sti
sbb
pop
cmpsl
fldl
lods
adc
ja
ljmp
enter
and
stc
lods
je
aaa
jbe
push
mov
pop
daa
jbe
mov
jl
pop
mov
add
push
pushf
insb
iret
cmpsl
std
mov
sub
lods
iret
jae
cmp
movsb
and
inc
mov
xlat
mov
xor
vpsubb
add
and
cmp
mov
sbb
sti
sub
inc
daa
xchg
scas
push
cmpsl
outsl
dec
jle
cmpsl
mov
rorl
xor
cmpsl
pop
and
fldcw
adc
and
cmp
loope
cmp
push
cmpl
movl
or
scas
sbb
lock
add
cmp
lret
call
pop
in
or
push
jl
mov
repnz
rclb
cmc
loop
push
xor
lods
cmpsb
fcomps
mov
push
in
cmp
push
or
cld
sbb
dec
iret
pop
xchg
push
scas
mov
sbb
bswap
es
cmp
inc
xor
sub
sbb
popl
ja
or
fxch
aad
loope
dec
pop
sahf
and
out
rorl
ret
or
aad
clc
mov
ret
adc
pop
cmp
sahf
fwait
or
or
cmp
xchg
inc
xchg
out
and
call
jg
incb
int
cld
in
add
addl
cli
and
sbb
sub
scas
js
bound
sbb
sub
aam
punpckldq
shrl
pop
dec
dec
into
lea
mov
or
adc
mov
push
inc
in
or
or
jecxz
inc
es
jmp
cli
jns
adc
decb
jmp
in
mov
jnp
clc
std
lock
repz
mov
mov
jno
movsl
test
or
stc
add
push
dec
cli
pop
stc
and
lret
fldt
sbb
pop
jb
cld
cltd
das
xchg
jecxz
xorl
xor
lock
push
cmpsl
hlt
negl
int3
adc
sub
mov
dec
xchg
repnz
mov
pop
data16
popf
sbb
cmpsl
ljmp
ror
sahf
jne
and
mov
sub
loopne
inc
mov
jbe
pushf
lea
loope
and
inc
xchg
rol
pop
and
or
dec
fucomip
ret
mov
and
scas
cmp
or
xchg
dec
jae
in
in
iret
or
std
lea
xor
pusha
enter
xchg
mov
stos
lret
es
pop
dec
xchg
mov
xor
dec
lea
in
arpl
fwait
inc
out
sub
jnp
aad
cmp
add
test
hlt
imul
jno
fadds
fwait
sbbb
mov
dec
js
movsl
sub
int3
pop
mov
in
cmp
mov
shr
divb
clc
ret
loope
jns
mov
adc
outsl
out
mov
sub
scas
aas
lods
mov
inc
dec
xchg
add
jle
je
popf
cmp
in
stc
and
jbe
int3
out
daa
and
std
push
pop
addr16
jns
dec
inc
cs
iret
loope
and
push
fwait
jl
lds
jae
or
or
ja
outsl
rclb
jb
fidivs
popf
outsl
iret
inc
and
enter
out
cmp
xchg
orl
jmp
xchg
inc
pop
inc
dec
shrb
fisubrl
pop
iret
pop
and
test
add
daa
xor
cli
push
in
sti
pop
adc
and
repz
inc
add
dec
call
cmp
icebp
dec
pop
idivb
jns
cli
sar
jb
stos
jl
push
into
cltd
mov
inc
pop
pushf
jge
lret
pusha
or
imul
pusha
or
dec
dec
add
jmp
pop
add
sbb
sbb
pop
fadds
mov
push
stos
inc
pop
stos
cwtl
sub
leave
into
in
inc
rol
sub
addr16
mov
js
aaa
cmp
pushf
xchg
icebp
push
jg
mov
ficompl
int3
sbb
call
flds
fcmovbe
popa
xchg
mov
xlat
dec
dec
mov
jne
xor
jne
push
mov
lret
pop
xchg
pop
call
dec
es
push
lds
or
dec
orl
pop
push
aam
mov
jbe
loope
loope
xchg
dec
fs
sti
rolb
stc
popf
imul
dec
mov
and
and
rclb
cmp
mov
cmp
push
adcb
lods
sub
cmp
sbb
pop
push
int3
ds
push
shll
mov
mov
movsl
daa
ss
and
cmp
int
mov
popa
imul
cmp
mov
stc
les
lahf
leave
xchg
loopne
push
into
mov
dec
or
or
es
xor
pop
or
lods
adc
xchg
dec
cmp
jmp
int
mov
sti
scas
icebp
pop
mov
lcall
or
mov
sbb
popf
add
or
sbb
in
rcr
cmp
mov
subb
xlat
push
mov
xlat
xchg
and
into
andb
mov
fwait
test
fisubrl
leave
cmpb
jae
sahf
rclb
mov
dec
and
jecxz
jb
inc
mov
mov
jle
call
pushf
dec
sti
mov
test
xlat
or
inc
data16
pop
cmpsl
adc
sbb
push
hlt
sahf
adc
enter
clc
lret
push
cmp
lods
xchg
jmp
outsl
sub
in
jb
je
sbb
test
adc
leave
aam
push
out
lds
jb
and
out
xor
add
cmpl
bound
fsubrs
ret
jg
mov
dec
or
jnp
mov
addr16
in
fistps
cmp
inc
lods
stc
bound
sub
xor
ret
loop
jo
movsl
mov
movsl
jp
in
shll
push
mov
cmp
jae
jecxz
das
and
in
mov
jns
jno
je
dec
std
jns
inc
fdivr
js
pop
enter
push
lcall
dec
ror
dec
push
lret
rclb
dec
xchg
shrl
dec
push
mov
outsl
dec
cmp
cmp
in
arpl
xchg
ds
adc
cltd
daa
call
dec
pop
sub
nop
or
fldt
repnz
adc
sub
inc
cwtl
ror
sub
mov
andb
outsb
in
mov
fidivrl
push
ds
out
loope
mov
ror
cmp
insl
dec
mov
jno
jne
fxch
out
fsubs
dec
test
jnp
fidivl
add
aad
mov
mov
cmp
fistl
ds
in
push
dec
lahf
mov
and
lcall
inc
dec
xor
ffreep
mov
repz
mov
xchg
inc
mov
aad
cli
sbb
lcall
stos
lahf
lret
out
inc
dec
out
inc
and
jge
stc
loopne
stc
shr
push
int3
xor
jle
mov
mov
repz
pop
cmp
adc
pop
pop
push
dec
inc
es
addb
pop
mov
in
mov
fs
push
jg
lds
push
mov
mov
mov
xor
aaa
push
xlat
fsubrl
shlb
cmp
mov
xchg
mov
cld
ret
xchg
out
movsl
dec
dec
fwait
lock
popf
mov
fistl
scas
divl
popa
idivb
fdivs
mov
inc
dec
dec
inc
add
dec
push
pusha
mov
push
out
clc
xchg
lahf
pop
sbb
sbb
clc
loop
ds
out
push
jmp
arpl
xchg
cmp
hlt
scas
lret
test
lock
je
add
pop
xor
pop
jns
and
jmp
insb
jecxz
add
out
dec
pop
push
dec
adc
jge
mov
adc
rorl
jb
push
out
jl
rorb
cmp
fbld
popa
shll
test
pop
jo
call
ljmp
loopne
sbb
mov
mov
pop
mov
call
push
les
lret
xchg
loope
js
or
outsl
xor
dec
sub
mov
mov
cltd
pop
or
dec
aam
popf
push
into
addl
mov
dec
sub
jle
and
or
jne
mov
jne
pop
test
aam
les
adc
add
xor
and
push
pop
inc
aaa
je
xlat
xchg
movl
hlt
cmpsl
in
adc
add
xor
and
push
pop
inc
aaa
je
xlat
nop
testl
cmc
addr16
adc
add
pop
push
pop
inc
aaa
je
fs
xchg
fwait
test
aam
inc
mov
daa
sbb
mov
push
pusha
fmull
fwait
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
call
push
push
pushl
push
push
call
call
mov
leave
ret
jl
cltd
dec
adc
push
and
in
mov
clc
hlt
cwtl
loope
sarl
and
js
push
push
cmp
loope
mov
call
sarl
mov
jo
add
adc
mov
jmp
and
cld
cmpsb
lret
jo
add
push
sbb
and
push
fildl
addb
test
pusha
movsb
add
jbe
sub
cmp
push
daa
pop
outsb
test
pop
je
jo
push
dec
dec
push
popa
les
and
dec
xorl
and
fcomps
outsb
xchg
jg
push
cmp
sahf
in
je
pop
mov
xchg
sbb
lods
movsb
cmp
addl
jecxz
les
mov
out
xchg
sbb
fsub
jge
xor
inc
jno
icebp
aaa
outsb
add
cwtl
sub
and
andb
cmp
mov
je
loope
xchg
mov
and
popa
insl
push
push
cmp
xor
xor
dec
loope
icebp
xchg
cmp
shll
push
cmp
outsl
or
inc
push
and
mov
enter
lea
xlat
xchg
xor
test
pop
sbb
add
dec
xor
mov
ljmp
sbb
pop
adc
sbb
sub
push
cmp
mov
mov
call
sarl
and
js
push
push
cmp
mov
mov
call
sarl
in
mov
xchg
add
fwait
mov
inc
push
adc
std
xlat
sub
sbb
or
push
mov
test
add
xor
jle
aaa
pop
push
stos
push
loop
ret
popf
fs
adc
aaa
leave
inc
iret
xor
sbb
int3
stos
aaa
clc
push
insl
ret
nop
jae
in
iret
jae
int3
stos
jno
fsubrs
mov
pusha
in
adc
jnp
call
dec
ret
sbb
test
popa
mov
sbb
cmp
push
movsb
pop
lods
das
push
adc
repnz
in
add
rorl
inc
sub
lds
test
cld
jns
pop
stos
cld
dec
std
and
cmpsl
xchg
push
in
or
in
mov
sbb
sahf
lock
daa
adc
insb
insb
pop
outsl
stos
sub
mov
out
lret
dec
sub
repz
int
ss
jl
clc
xchg
xchg
add
dec
mov
inc
sub
inc
xor
jmp
out
out
movsb
lret
mov
scas
jg
lds
add
popa
push
in
push
gs
sub
scas
dec
nop
ss
scas
loope
aad
fdivs
jl
ja
dec
pop
stos
out
mov
xchg
xor
negb
in
lea
xchg
jno
std
sub
sbb
lcall
sub
jb
sub
js
mov
jp
xchg
jbe
inc
fyl2xp1
fld
cli
add
xor
cs
test
scas
jne
xchg
inc
fidivl
sub
mov
xlat
cltd
cmp
cmc
mov
jns
inc
push
aas
jo
xor
or
lahf
push
clc
test
inc
out
xor
dec
cmp
pushf
cmp
mov
test
xchg
addr16
mov
sahf
mov
mov
scas
sbb
icebp
and
push
mov
sub
xor
popa
pop
divl
cs
xchg
mov
push
fldlg2
dec
dec
iret
push
or
sub
in
cmp
add
arpl
scas
add
xchg
lcall
lea
xchg
lods
insl
leave
cmp
arpl
shlb
cmp
into
lret
mov
out
loope
cmc
lea
sub
gs
mov
stos
mov
adcl
or
es
mov
loope
sub
aad
jo
sub
xchg
fdecstp
mov
sti
sahf
fwait
mov
hlt
orb
loope
into
mov
aaa
jecxz
jp
test
cmp
repnz
sti
inc
fwait
lods
sub
movsb
aad
xchg
mov
dec
int
mov
or
mov
sbb
mov
fcomps
adc
aas
and
lret
adc
dec
mov
adc
mov
notb
js
clc
push
jnp
dec
mov
mov
lahf
xchg
adc
jp,pt
add
lret
fidivs
jb
imul
inc
int
arpl
push
mov
roll
mov
test
add
xchg
leave
mov
lods
push
dec
in
adc
adc
or
pop
xlat
test
jbe
cmp
sub
sbb
repnz
jl
test
mov
scas
cmp
jb
sub
ljmp
jo
in
pop
push
fstpt
mov
jno
iret
inc
sub
ss
xor
xor
bound
je
xchg
lcall
jp
in
out
xchg
gs
sbb
or
push
mov
pop
cmp
dec
gs
push
std
sbb
das
push
shr
lock
insb
fiaddl
lds
mov
fdivrl
in
jno
inc
or
scas
in
in
imul
push
cmp
mov
lock
cld
in
pop
mov
xchg
pushf
fmull
or
push
mov
cwtl
push
stc
jnp
enter
loopne
arpl
loop
dec
add
inc
aam
aad
test
iret
loopne
sub
cltd
mov
adc
aad
push
push
stc
mov
rcrb
push
sarb
xchg
push
jge
mov
and
gs
push
movsb
inc
int
push
mov
nop
xchg
cmp
jle
mov
cltd
mov
cltd
movsb
rorl
jo
mov
je
ret
lcall
cltd
cmp
pop
xor
fimull
mov
imulb
xor
cmp
pop
mov
clc
xchg
rcll
xor
fimull
aas
pop
shll
movsl
mov
inc
sbb
add
fs
push
ud2
stc
xchg
xchg
aaa
inc
test
or
mov
sti
cwtl
mov
cld
ja
out
paddw
sbb
leave
test
ja
pop
in
sub
leave
xor
mov
aam
sarl
push
mov
aad
push
gs
cmp
inc
mov
lahf
sahf
fldcw
jle
arpl
mov
lret
mov
rorb
je
lahf
adc
insb
pop
in
jmp
pushf
mov
int3
outsl
dec
sahf
fisttpl
icebp
sub
cmp
push
loop
jecxz
adc
inc
mov
pop
push
and
xchg
movsb
in
orl
jmp
pop
jl
fsubrs
push
jge
pop
mov
int
or
jl
sbb
sbb
dec
mov
out
mov
in
xor
pop
in
loop
push
sub
jmp
inc
xchg
cmp
mov
rol
stc
lret
repz
jbe
int
nop
or
das
fsub
inc
idivl
stos
push
cmpsl
in
das
pop
cmp
ss
add
scas
dec
cltd
repnz
addb
and
fwait
rolb
jmp
add
jge
and
repz
jb
shrl
add
jle
push
mov
jno
cmpb
dec
lds
xor
inc
mov
daa
dec
add
lds
hlt
into
adc
js
jbe
xchg
sbb
add
iret
int
mov
pop
je
mov
je
outsb
mov
add
std
mov
push
daa
scas
ss
add
iret
xchg
cmpsl
movsb
jecxz
addr16
int3
addr16
cmp
pushf
and
add
insb
fcomi
jecxz
jecxz
and
dec
insl
cwtl
lea
int
lret
push
xchg
mov
jp
stos
ret
int
or
js
in
mov
lahf
ljmp
icebp
js
std
mov
arpl
in
sub
inc
jb
movsl
fwait
cmpsl
mov
xlat
adcb
adc
mov
iret
add
jl
out
cmp
and
mov
ffree
push
pop
pop
xor
dec
ljmp
das
jns
jbe
movb
sbb
in
fildll
jle
pop
sub
ss
scas
xor
loope
sarl
shlb
and
inc
sbb
int3
out
int
cmp
mov
xchg
inc
orl
lret
out
insl
or
xlat
xor
push
jl
mov
adc
fcmovbe
jmp
and
mov
incl
lcall
outsl
and
negb
jl
lods
jg
mov
std
xchg
pop
loopne
ret
xchg
adc
xor
adc
inc
inc
mov
rclb
mov
adc
fiaddl
das
mov
push
call
xchg
push
jge
pusha
pop
mov
jle
xchg
xchg
and
shrl
pop
add
jl
scas
xor
cmp
mov
mov
mov
rolb
popa
das
add
clc
jae
push
push
pusha
out
aad
repz
into
popl
dec
inc
jo
outsl
sti
lods
xor
jle
leave
mov
adc
or
jo
sub
mov
addr16
adc
sbb
inc
pop
xlat
in
mov
out
roll
xor
dec
push
lcallw
loop
cld
testb
xor
pop
inc
pop
inc
inc
mov
add
fdivrl
imul
imul
shlb
pop
leave
iret
mov
sub
testl
sbb
xchg
inc
mov
or
push
jbe
xchg
sub
out
jno
cmp
popa
jbe
push
mov
jns
jecxz
mov
jle
mov
jecxz
mov
adc
divb
stc
add
pop
lret
test
push
and
inc
mov
fcmovbe
mov
xchg
push
dec
imulb
jns
insl
scas
loope
adc
test
dec
hlt
xchg
in
mov
insl
lea
cwtl
daa
cmc
fcomps
ret
in
adc
push
lock
ja
and
les
xchg
pushf
mov
push
adc
or
cmp
dec
sbb
xchg
push
mov
mov
icebp
adc
les
dec
xor
lock
mov
sbb
adc
jg
rclb
jno
gs
pop
jb
decl
nop
sahf
sti
imul
xor
push
push
fstp
and
out
inc
cwtl
subl
sbb
push
mov
mov
push
sbb
sbb
xchg
push
in
call
adc
or
and
imul
lods
and
movsl
push
jle
test
xchg
in
sub
inc
mov
xlat
clc
cmp
inc
mov
lret
fisubrl
jns
push
cs
lea
addl
cmp
mov
loope
dec
or
cmp
rolb
jns
mov
cmp
rorb
push
clc
outsl
lret
daa
repz
xchg
xchg
and
push
sbb
xchg
or
ds
pop
add
inc
mull
sahf
repnz
push
out
clc
int3
ret
mov
xchg
mov
call
cltd
cmp
outsb
in
imul
xchg
mov
scas
mov
mov
and
adc
in
push
subb
xchg
sbb
stos
fsubl
xchg
dec
and
jg
mov
into
fidivs
inc
sub
test
ljmp
nop
xchg
xchg
xchg
push
loopne
or
pusha
or
sbb
jae
adc
pop
dec
out
xor
sbb
adc
sbb
add
push
imul
xor
push
mov
cmc
mov
xchg
data16
cmp
jae
lret
mov
sahf
mov
xor
pushf
push
lret
mov
jbe
movsl
xor
cltd
xor
sbb
xchg
and
es
mov
out
ficompl
xor
xor
std
inc
cmp
jp
jo
lea
mov
inc
mov
lock
and
xchg
inc
aam
add
lods
mov
push
pop
or
cli
js
repnz
movsb
movsl
popf
push
idivb
xchg
push
pop
xchg
out
bound
fldln2
mov
and
sub
dec
add
jmp
sub
push
lock
adc
outsl
fcoml
into
xor
lret
or
loopne
pop
dec
cmp
mov
mov
cmpsb
xor
jb
xchg
push
sub
addr16
aad
dec
mov
lds
lahf
mov
mov
stos
outsb
insb
push
jle
insb
pop
cmp
test
pop
movsl
push
stc
stos
xchg
inc
cmp
pop
in
jmp
daa
icebp
xchg
cmp
or
push
dec
pop
adc
rol
push
xchg
cwtl
push
or
daa
dec
xchg
add
push
clc
push
push
pop
daa
jb
movsl
out
loop
imulb
sub
scas
test
cmp
dec
adc
inc
or
fnstsw
lods
and
sub
or
cwtl
in
mov
adc
jp
adc
lods
or
sub
dec
sbb
sti
pop
mov
sti
mov
insl
fnstsw
mov
hlt
mov
cwtl
adcl
movsl
out
out
inc
xchg
or
jno
add
sbb
add
push
or
xchg
in
icebp
outsl
scas
fdivrs
cmp
dec
test
jmp
in
loop
jle
mov
hlt
es
cmp
lret
sub
push
mov
stc
ficompl
incl
jmp
add
add
cmpsb
es
sar
fucom
pop
and
aad
inc
ss
xor
pop
cld
dec
xor
mov
cs
lods
gs
sahf
xor
fs
sbb
jp
lcall
dec
jl
ficoms
stos
xor
dec
test
daa
dec
xchg
push
mov
push
stos
es
rorb
adc
imul
mov
pop
or
cld
and
jnp
add
andl
cmp
cmp
inc
and
xchg
push
or
and
cmp
push
and
insb
fdivs
ret
dec
rorb
sbb
data16
fs
mov
outsb
mov
fidivrl
test
sbb
out
sub
imul
in
test
mov
aam
or
sub
inc
popl
mov
shll
push
mov
mov
mov
fstps
rcr
and
xor
cmp
inc
outsb
std
mov
loope
rcl
pcmpeqb
out
cmpsl
repz
adc
adc
loop
or
mov
mov
or
dec
xchg
add
dec
xor
jp
insb
inc
call
jecxz
mov
dec
rcll
cmp
leave
or
ljmp
xchg
jl
loopne
insl
push
cltd
ja
mov
in
sub
push
pop
stos
inc
inc
cmp
cwtl
adc
out
scas
and
dec
xchg
loop
xchg
sbb
or
pop
pop
popf
cltd
mov
push
hlt
dec
in
adc
xchg
pop
and
cli
push
in
xchg
or
neg
jg
xor
ljmp
popa
mov
out
shll
scas
adc
cmpsb
cmp
sub
inc
mov
pop
sub
das
jl
or
push
inc
movsb
mov
ret
sbb
add
cmp
mov
xchg
arpl
add
xlat
cmp
out
pusha
cmpsl
jg
test
test
push
adc
enter
xchg
pop
negb
sarb
push
jle
xchg
pop
cmpsl
ret
cmp
movsl
dec
mov
jecxz
into
xchg
int
test
movsb
cmpsb
push
scas
int3
lods
sbb
inc
adc
ret
jg
push
and
push
add
and
inc
mov
add
lcall
mov
xchg
cmp
iret
mov
mov
xchg
stos
subb
mov
ret
sub
jge
sbb
icebp
push
pop
mov
xor
gs
xor
xchg
outsl
andl
call
sub
dec
xor
iret
filds
das
mov
ret
xor
cmpsb
adc
xchg
adc
repnz
add
xchg
test
stc
out
or
data16
add
fsubs
sbb
push
movups
or
and
xor
mov
jbe
insl
fistps
mov
into
sub
lret
in
push
popl
xchg
pop
xor
jae
and
cli
movsl
scas
xor
xorl
mov
push
mov
js
stos
lock
add
push
lds
je
lea
mov
xchg
cmp
xchg
pop
jge
pop
sbb
test
push
iret
add
cmp
cwtl
arpl
mov
in
es
sub
xor
mov
and
rorb
pop
repnz
xor
or
sub
repnz
push
and
xor
test
pop
orl
sub
xchg
jns
movsb
hlt
cmp
sub
movsl
mov
fistpl
aaa
jb
into
dec
adc
nop
xchg
inc
jge
in
add
mov
gs
roll
aaa
and
push
cmp
imul
fidivl
jmp
in
sbb
inc
lock
stc
subl
add
mov
mov
ja
jmp
test
in
les
jae
pop
data16
mov
lock
add
pop
inc
xor
xlat
push
cwtl
pushf
dec
mov
xchg
js
mov
ds
lds
inc
push
mov
test
adc
out
gs
icebp
lcall
inc
inc
loopne
dec
stos
sbb
fwait
sbb
test
mov
xchg
xchg
push
test
mov
push
add
stc
sbb
dec
std
lock
addr16
std
sbb
addr16
push
icebp
stc
movsl
pop
sti
andl
lret
fidivl
push
ret
cmp
mov
mov
cmc
push
jg
pop
jge
mov
stc
xor
std
sub
flds
in
cmp
mov
adc
mov
push
loop
aad
ror
mov
cltd
cmp
pop
inc
clc
cli
or
fisubrs
xor
pusha
sub
add
dec
frstor
cli
fwait
lds
mov
jle
shrl
scas
or
sahf
enter
into
pop
add
in
int
sub
mov
mov
in
xor
popf
imul
or
outsl
pop
or
out
or
fnstsw
fwait
pop
pushf
push
sbb
lods
push
aaa
xchg
push
dec
idivb
ds
xchg
repz
xorl
sub
popf
pop
outsb
and
add
insl
mov
sub
daa
xchg
daa
sub
sub
add
cmp
add
push
shll
out
lahf
sub
add
stc
inc
mov
or
dec
inc
push
sub
sbb
idivb
in
jae
adc
pop
scas
dec
sub
sarb
mov
gs
xchg
lret
nop
cli
mov
pop
dec
push
dec
jbe
filds
outsb
jle
mov
cmp
ret
pop
xor
sub
sub
adc
mov
adc
xor
bound
dec
stos
add
imul
divl
pop
dec
lea
jecxz
orb
dec
push
and
fwait
lds
mov
lcall
aas
jecxz
fidivs
dec
in
cltd
or
pop
iret
fbld
adc
enter
mov
in
lret
and
xor
mov
movsl
push
enter
mov
cli
dec
insb
lea
insb
pop
sub
insb
add
fstpl
repz
jle
ds
jmp
aas
or
push
pop
xor
adc
insl
stos
pop
push
pop
dec
cmp
lret
xchg
scas
jbe
cwtl
inc
sub
aad
mov
adc
out
dec
por
add
add
je
add
push
adc
dec
out
lods
negl
mov
inc
add
lahf
movsl
and
xlat
jge
mov
dec
out
shrb
sub
adc
dec
jns
cmpsl
pop
das
repnz
dec
sub
pop
iret
cmc
mov
cmpsl
leave
mov
jb
mov
adc
or
sub
inc
add
and
ret
aam
data16
mov
mov
aas
adc
lock
loope
cmc
jo
mov
ja
pushf
rclb
pop
pop
icebp
insl
lcall
xor
in
push
pop
icebp
ja
pop
lcall
cwtl
add
xchg
dec
andl
sub
cld
or
loope
addb
push
ja
sub
add
negb
iret
or
mov
repnz
andb
pushf
pop
push
mov
mov
jo
rolb
xchg
cmp
xchg
mov
clc
out
sbb
push
push
call
push
stc
jle
ret
jo
adc
pusha
cmp
hlt
test
mov
and
frstor
nop
pop
dec
sub
mov
push
pushf
adc
inc
inc
je
cmp
test
ja
test
fsubr
in
sti
movsb
mov
push
cmp
lds
hlt
xor
sbbl
inc
push
xchg
iret
repz
mov
cwtl
ljmp
push
outsl
out
cld
adc
into
fcmovnu
fs
lock
daa
test
xor
dec
mov
mov
cmc
push
push
ret
bound
shlb
adc
ret
repnz
dec
stc
xchg
popa
js
mov
dec
sbb
daa
jnp
lret
icebp
mov
pusha
cmpsl
scas
lds
or
xor
enter
ret
lods
jnp
dec
bound
lahf
andl
popa
sahf
pop
push
jb
jmp
jle
and
mov
pop
call
jg
loop
xchg
inc
mov
dec
inc
adc
rcr
movsl
std
xor
adc
insl
pushf
andb
sub
pop
cmp
aam
mov
sub
cmp
push
ffreep
mov
fbstp
stos
inc
enter
das
mov
xor
pop
or
and
les
arpl
sub
or
or
popf
lock
or
insl
inc
sbb
mov
push
std
mov
and
nop
inc
mov
dec
js
pop
lcall
popf
adc
or
dec
push
int3
addr16
inc
xor
xlat
in
imul
insb
sbb
dec
fisubs
scas
fstl
clc
lods
mov
xorb
ds
shrd
mov
stos
fistps
push
imul
test
cmc
scas
in
rolb
and
inc
mov
into
aad
push
les
adc
cmp
jg
push
mov
outsb
jmp
cmpsl
jg
jg
movsb
mov
inc
pop
xchg
stc
mov
inc
xchg
mov
jo
pop
inc
stos
loopne
in
filds
rcrb
inc
or
jns
cmp
mov
mov
lods
xchg
pop
pop
outsb
jg
mov
and
jbe
lods
fcompl
outsl
icebp
sub
or
xchg
rol
daa
decb
test
lahf
inc
cld
ljmp
pop
xchg
jb
and
pop
into
jo
jmp
jbe
das
es
and
fisubs
dec
inc
aad
mov
or
jo
pushf
repz
inc
and
leave
fdivs
adc
fsubrp
dec
jno
enter
int
pop
mov
lret
or
gs
sbb
mov
addr16
orl
and
call
cmp
sub
inc
mov
jp,pt
sub
out
mov
repz
jp
cli
add
jmp
jg
jno
mov
stos
mov
fwait
movsl
pushf
jmp
out
stos
jge
or
inc
jbe
out
inc
out
fs
push
pushf
fsub
dec
add
and
sti
pop
xchg
and
mov
repz
or
and
data16
mov
fbld
sub
mov
test
andl
add
loopne
pop
cmpl
inc
jmp
in
mov
int3
or
jbe
dec
adc
out
lcall
shll
and
sbb
pop
ss
test
mov
sbb
and
push
inc
xchg
bnd
ja
pop
js
and
stc
sbb
insl
jo
scas
pop
add
pop
lahf
fsubrp
lock
pop
sahf
and
rcrl
hlt
inc
mov
rep
cmp
outsb
andb
mov
gs
int
cld
xorb
jg
imul
das
das
ss
dec
lea
imul
pop
cld
jg
fistl
xor
mov
and
xchg
mov
cmpl
jno
popa
or
inc
sub
clc
sub
sarl
and
js
push
push
cmp
mov
mov
call
sarl
and
js
push
push
cmp
mov
mov
in
icebp
cwtl
clc
mov
mov
or
push
push
cmp
call
cmp
sbbl
int3
int3
int3
int3
int3
xor
mov
lahf
int
sub
mov
add
add
add
add
add
add
sub
mov
add
push
add
add
mov
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
leave
add
add
add
testb
add
testb
add
add
add
add
add
add
add
add
add
add
add
testl
call
add
mov
add
add
add
add
add
add
add
add
pop
add
add
add
add
mov
sahf
add
aam
mov
dec
add
add
add
add
add
add
add
push
push
add
add
add
add
add
add
push
add
add
add
add
add
add
add
adc
add
mov
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
cmpsb
add
add
add
add
push
add
add
add
add
add
add
add
add
adc
mov
sub
lock
add
add
add
add
add
adc
jo
sahf
add
add
add
add
add
rolb
jo
bound
out
add
push
add
add
add
add
dec
add
add
add
movb
add
and
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
or
adc
add
add
add
in
mov
lods
add
add
xchg
add
add
repnz
add
xor
mov
je
nop
add
add
and
add
add
add
add
add
push
mov
xchg
add
mov
sub
mov
add
add
xchg
add
cmp
mov
inc
add
add
test
insb
add
add
xchg
add
add
add
bound
sbb
dec
add
push
add
add
add
into
add
add
add
test
and
sbb
stos
add
add
add
add
add
sub
mov
add
add
add
lcall
add
add
add
add
mov
add
incl
sti
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
xchg
add
push
nop
add
add
add
add
add
je
nop
add
add
push
add
add
add
add
add
fadds
mov
nop
add
pop
xchg
add
add
mov
add
add
add
add
add
insl
add
adc
jne
or
dec
add
add
stc
sub
cmp
inc
jmp
sub
outsl
xchg
repnz
cmp
das
fdivl
out
test
fisttpl
jns
add
or
mov
pop
cmp
sub
lcall
sub
mov
and
add
cmpsl
sbb
fcoml
rorl
mov
ret
mov
dec
pushf
dec
xchg
dec
sbb
xchg
daa
and
fcompl
pinsrw
ror
fwait
jo
out
test
out
js
addr16
int3
jae
inc
add
inc
out
ds
jecxz
adc
push
popf
cmp
icebp
and
shl
mov
lahf
lcall
adc
xor
jo
add
rcrl
pop
mov
inc
sti
inc
mov
addb
adc
mov
sub
and
btcl
xor
mov
shlb
jne
pop
dec
jns
inc
mov
scas
or
lcall
ljmp
adc
mov
add
in
ret
lods
add
or
lods
outsb
pop
inc
pop
lcall
xchg
jno
dec
rorl
fdivs
cmp
push
mov
and
scas
stos
adc
out
sbb
push
mov
dec
scas
lock
stos
nop
or
rcll
and
or
mov
inc
stos
fs
inc
pop
sarl
repz
mov
cltd
mov
pop
rclb
cmp
adc
inc
jo
cmpsl
loop
pop
popa
rcrl
sbb
out
sub
xchg
dec
cmp
int3
jmp
jmp
popf
movsl
fwait
inc
push
sbb
pop
jl
xchg
jle
xchg
lods
arpl
xchg
idivb
mov
stc
test
and
dec
rcr
aad
movsb
inc
iret
sarl
dec
scas
mov
sbb
jmp
add
xchg
rcll
into
jo
sbb
fldcw
je
addr16
mov
jnp
rolb
jmp
fcomps
mov
xchg
arpl
add
jnp
imul
jnp
cli
stos
dec
xor
insb
icebp
adc
mov
dec
in
inc
and
xchg
inc
loope
xor
movsl
cmpsb
pop
push
pop
ja
mov
sub
jg
mov
movsb
and
sub
fsubrp
push
jnp
mov
adc
dec
outsl
pop
inc
xchg
sbb
pop
sbb
lcall
cmpsl
bound
addr16
fsubl
push
inc
cmp
cmc
les
andl
call
adc
daa
das
inc
xor
daa
pop
mov
add
add
add
add
loop
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
push
add
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
add
add
add
add
add
cld
add
add
add
add
add
add
add
add
add
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
inc
add
add
add
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
fadds
add
clc
add
add
add
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
je
add
jl
add
test
add
add
pushf
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
rolb
add
add
add
add
add
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
daa
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
daa
add
fsubl
add
aam
add
int3
daa
add
les
add
mov
daa
add
lods
daa
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
sub
add
add
add
add
add
add
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
sub
add
sub
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
