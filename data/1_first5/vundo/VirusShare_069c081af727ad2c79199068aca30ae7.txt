push
push
and
sub
addb
or
iret
or
rolb
or
call
or
add
and
cmpsl
or
add
xchg
pop
and
inc
add
add
or
add
add
add
push
inc
add
rolb
or
add
add
nop
add
pusha
add
add
lock
pop
inc
add
push
loopne
or
adc
xchg
or
add
add
push
add
cltd
or
add
pop
mov
fisttps
push
add
pop
inc
add
add
add
nop
add
add
add
or
add
inc
add
and
inc
add
add
adc
push
add
add
add
add
or
jne
push
add
add
repnz
xor
jg
adc
inc
add
add
add
add
add
add
add
mov
add
push
lock
add
add
add
rolb
add
add
loopne
fadds
xor
dec
add
js
add
sbb
mov
or
lret
push
mov
add
or
add
push
nop
add
add
add
add
add
adc
add
push
add
mov
add
inc
mov
add
fisttps
add
pop
mov
pushf
or
addb
movups
mov
mov
add
add
add
push
add
adc
push
pop
xor
and
jo
mov
push
xor
lods
or
add
add
add
pop
inc
add
pop
nop
add
push
adc
or
nop
add
add
add
or
add
add
add
mov
addb
add
add
or
add
add
add
push
rolb
add
add
or
push
add
xor
pop
add
add
or
add
loopne
xchg
or
add
rolb
rolb
lock
or
inc
add
mov
movw
mov
mov
movw
push
popl
mov
movl
call
push
popl
push
popl
cmp
jne
mov
movb
ret
movb
mov
push
push
popl
push
popl
push
or
subl
mov
push
popl
addb
pusha
push
popl
call
or
mov
push
popl
push
subb
xorl
push
popl
addl
push
popl
push
popl
push
push
popl
call
push
popl
push
popl
cmpl
jne
andw
call
andl
xorb
ret
andw
jmp
andl
xor
push
popl
mov
push
popl
andw
shl
andw
subw
mov
add
shl
xorl
subw
mov
push
popl
subw
cmp
jne
subb
mov
addw
sub
push
popl
orw
call
movw
subb
popa
xor
pusha
xorw
call
push
popl
addl
mov
addw
push
popl
push
movb
push
popl
xorl
sbbl
addl
addb
push
push
popl
add
call
xorw
push
push
popl
xorl
push
popl
addl
subw
pop
mov
addl
cmp
jne
xorw
ret
push
popl
popa
andl
mov
call
movb
subb
push
and
subl
xorl
push
popl
addl
mov
sbbb
push
xorl
sbbl
call
subb
push
push
push
rol
mov
xor
pop
sbbw
push
popl
mov
push
popl
movl
shl
andl
push
popl
push
push
popl
xor
push
popl
push
popl
push
push
popl
push
popl
call
sub
orl
push
push
popl
push
popl
mov
subw
sub
push
push
popl
subl
jmp
push
popl
addl
pop
push
popl
push
popl
mov
andl
push
orb
push
popl
push
xor
push
subb
mov
push
popl
mov
addw
xorb
rep
xor
push
popl
pop
push
popl
or
pop
push
push
shl
add
mov
xor
pop
push
push
sub
dec
mov
xor
pop
addb
subl
xor
xorw
jmp
push
popl
sub
andl
mov
and
sub
xorl
push
popl
sub
andl
movl
mov
xorw
xorl
sub
push
popl
or
jne
movb
andw
add
push
popl
addl
jmp
movw
xorl
mov
orl
shr
sbbb
shl
push
popl
and
mov
xorl
add
orw
jmp
push
popl
sub
subl
mov
push
popl
subl
add
xorb
add
cmp
jne
push
popl
mov
xorb
add
xorb
mov
push
popl
push
popl
add
andl
cmp
jne
movb
xorl
ret
sub
push
push
popl
push
popl
xor
push
popl
pushl
push
popl
xor
pop
subl
push
popl
lea
orw
xorl
or
movw
movw
mov
push
popl
addb
mov
push
popl
lods
push
popl
sbbw
mov
sbbl
push
popl
pop
or
push
popl
ret
xorw
push
push
popl
orb
mov
sbbl
or
add
movb
sbbw
push
sub
push
addw
push
popl
push
push
popl
push
movw
push
movl
movb
mov
xorw
push
popl
mov
movb
add
push
popl
add
pushl
push
popl
mov
andl
orw
add
push
popl
add
push
popl
mov
subw
push
popl
add
movb
addb
xor
push
popl
lea
xor
push
popl
mov
mov
orl
add
push
popl
movw
mov
xor
xor
subb
rol
push
popl
andw
xor
andw
sub
inc
movl
cmpb
jne
or
sbbb
cmp
je
or
push
popl
inc
subl
push
popl
cmp
jb
push
popl
orl
mov
push
popl
and
add
xorl
movzwl
xorb
movl
mov
and
add
subl
mov
xorb
orw
add
push
popl
subw
pop
sbbw
subw
cmp
jbe
push
popl
cmp
jae
push
popl
pushl
xorb
subb
pushl
sbbw
movl
push
push
popl
push
popl
xorl
push
popl
addl
push
popl
subb
pushl
push
popl
call
andl
addl
call
push
popl
push
popl
pop
sbbb
push
popl
pop
xorb
push
popl
pop
orb
pop
push
popl
push
popl
pop
orl
leave
push
popl
add
ret
push
popl
push
popl
call
fildll
mov
bound
xor
rcll
fnstsw
inc
mov
push
adc
lds
in
cmp
fldl
cmp
xlat
sub
dec
cmp
rorl
xor
fcmovb
push
cmpsl
out
repz
in
pop
out
cmpsl
mov
mov
jmp
and
sarl
sbb
mov
jo
popa
ja
outsb
push
sahf
aam
mov
sbb
pop
mov
mov
test
mov
in
std
test
pop
std
jne
mov
mov
into
dec
sub
jl
add
mul
jmp
fmuls
dec
lret
inc
or
adc
fcomps
cli
cmp
sub
mov
rcrb
sub
push
and
es
setg
sti
adc
shlb
jo
adc
lret
adc
sub
inc
lahf
je
aad
mov
mov
or
shrb
sbb
pop
fldt
repnz
mov
dec
jnp
xchg
sbb
iret
add
xor
fldcw
scas
push
cmp
xor
nop
iret
in
addr16
mov
mov
fistpll
cmp
js
stos
mov
hlt
push
xchg
mov
or
jmp
rolb
xchg
loop
push
mov
out
mov
sbb
and
mov
jp
mov
das
push
dec
adc
pushf
and
adc
lcall
in
addb
les
or
fwait
test
and
lock
push
les
pop
inc
sub
std
pop
lock
xlat
push
mov
sbb
imul
mov
fiaddl
jbe
pop
scas
pop
lea
push
les
rclb
xchg
fcmovnu
rcrb
movsb
xchg
push
push
cmpsl
mov
mov
add
sub
xchg
mov
into
xor
push
sub
ficoms
mov
or
push
or
and
dec
sbb
les
scas
inc
xor
mov
sub
outsb
stos
loope
fwait
xchg
paddsw
jne
cmpsl
or
hlt
sbb
pop
mov
loopne
lea
les
aaa
mov
ljmp
pop
pop
pushf
loope
sbb
sub
aas
mov
shlb
lret
or
mov
sub
ja
mov
cmp
aam
or
push
sahf
inc
sub
dec
jg
inc
test
or
xor
push
std
test
cmpl
mov
and
add
aaa
imul
inc
icebp
or
lcall
push
adc
dec
xchg
fists
dec
jo
xchg
push
dec
pop
imul
test
loope
std
mov
test
dec
fildl
lahf
mov
lret
mov
call
xchg
inc
mov
mov
mov
jecxz
xor
cmp
mov
das
dec
cmp
pop
stos
and
fildl
pop
cs
add
das
pop
aas
in
pushf
mov
loopne
push
cmc
loop
test
cmpsb
xchg
in
icebp
push
inc
cmpsl
mov
or
out
sub
dec
or
or
daa
add
and
cmp
aam
insb
gs
pop
sub
xlat
jne
mov
mov
mov
push
sub
mov
icebp
pop
mov
mov
jae
mov
fisttps
stos
jmp
jne
xchg
mov
scas
shrb
stos
dec
loopne
sub
lds
or
int3
mov
out
mov
pop
adc
movsl
cld
scas
into
push
stos
xlat
mov
sbb
or
out
mov
mov
add
jo
imul
stos
push
dec
jne
mov
pushf
mov
xor
scas
or
pop
push
test
jnp
mov
mov
lods
ret
cmc
cmp
stos
cmp
je
cmp
mov
push
jge
push
sub
xchg
ljmp
lret
push
fildll
test
jle
lea
lret
or
jne
or
sub
push
sub
fildl
xchg
fistpl
add
sbb
xchg
lahf
push
add
stos
sti
mov
lahf
adc
cld
mov
xchg
pop
inc
lcall
add
inc
out
pop
jns
sbb
xchg
js
mov
iret
adc
inc
mov
xor
loope
js
stos
mov
add
xchg
xchg
mov
nop
inc
pop
mov
jp
add
and
pop
fcmovnu
xchg
ljmp
mov
scas
mov
out
insl
dec
push
cmpsl
mov
call
mov
movsl
sbb
jnp
ja
popf
or
ljmp
icebp
pop
repz
xlat
test
mov
sbb
or
xchg
push
pop
xchg
icebp
sbb
and
ret
mov
ret
or
je
faddl
jb
inc
mov
cs
mov
lds
jne
mov
xchg
rclb
std
cmp
pop
shll
ds
negl
iret
lds
addr16
or
adc
pusha
mul
pop
ret
fcoms
push
cmpsl
mov
pop
testb
sub
shrl
ss
inc
scas
dec
mov
and
dec
ret
lret
test
pop
mov
testl
mov
stc
sti
cli
push
cmp
negl
dec
subb
ja
mov
or
pop
loopne
adc
jle
in
inc
mov
and
and
stos
jae
int3
enter
and
jno
push
mov
jno
cmp
int3
xchg
ja
rol
add
stos
cltd
pmuludq
push
sbb
mov
adc
loope
mov
js
stos
mov
testb
insb
mov
xchg
cmp
xchg
orl
pushw
addr16
and
xor
cld
mov
adc
sub
je
dec
jae
jbe
jl
or
mov
xchg
mov
and
data16
les
lods
stos
xor
inc
mov
sub
les
jmp
sub
dec
add
out
lea
or
xor
pop
je,pt
mov
cmp
push
mov
adc
mov
and
test
icebp
lds
icebp
fldl
loopne
jge
insb
std
jb
mov
fsts
imul
push
mov
addr16
insl
loopne
std
repnz
imul
inc
mov
bound
out
mov
jecxz
or
rcll
rclb
sub
nop
mov
xor
inc
fstp
ficompl
mov
lret
sub
mov
test
hlt
jbe
push
nop
mov
xor
jo
cmp
adc
or
aaa
les
adc
add
in
sbb
dec
lahf
mov
sub
mov
push
lea
insl
sub
xchg
inc
std
pop
adc
pop
jp
mov
rcr
lock
adc
pop
pop
and
roll
stos
rcrl
add
repnz
stos
scas
pop
lods
mov
lret
or
out
mov
fistpll
dec
push
js
stos
mov
aam
xchg
lcall
cmp
adc
xchg
jge
pop
pop
jle
clc
ljmp
lret
aas
fisubrs
mov
addr16
addr16
or
lock
lods
jne
pushf
jle
and
mov
inc
lock
addr16
push
xchg
repnz
jo
fidivrl
movsb
pop
mov
mov
mov
adc
mov
lds
and
stos
js
jmp
testl
add
test
aad
jle
cmp
mov
mov
ja
sbb
mov
in
imul
mov
dec
fs
daa
cmp
jp
add
push
push
in
stos
add
cmp
mov
popl
dec
add
mov
arpl
lcall
sub
mov
data16
xor
dec
hlt
mov
mov
out
jbe
cmc
and
rcl
xchg
and
jnp
mov
test
and
stos
jo
cli
aam
push
xor
ds
out
icebp
and
call
out
ret
cmpsl
mov
fildll
jecxz
xchg
sub
data16
gs
dec
mov
js
xchg
mov
jmp
fld
dec
fcoml
jle
mov
test
icebp
insb
push
cmpsl
mov
push
add
mov
fsubrl
js
adc
lods
fwait
push
cmpsl
add
aaa
lcall
mov
dec
repz
mov
sub
push
mov
clc
scas
mov
cwtl
icebp
sbb
mov
push
negl
pop
dec
and
imul
or
and
je
mov
xchg
xchg
out
push
mov
fcmovnu
cmp
mov
and
pushw
scas
xchg
cltd
imul
ret
cs
scas
lahf
cmp
inc
or
es
jb
lret
mov
lret
outsl
aaa
cmc
push
cmp
mov
dec
push
pop
or
pop
add
jae
sar
orb
mov
mov
jns
sbb
xchg
sub
loope
lahf
mov
jae
int3
std
add
adc
mov
hlt
outsb
pop
into
sbb
push
xchg
jecxz
lock
cmpsl
mov
pop
sbb
adc
and
mov
lods
hlt
cmpsb
and
fwait
sbb
or
xchg
dec
leave
fwait
jno
stos
and
jl
xchg
out
lcall
roll
dec
xlat
sub
push
mov
pop
cltd
call
nop
and
mov
cmc
imul
rcrl
pop
aad
mov
sbb
scas
jb
sub
add
jmp
arpl
dec
mov
adc
and
movsl
mov
in
aaa
out
sub
dec
push
jge
idivl
or
sub
add
pushw
stc
in
add
and
pop
dec
jns
sahf
push
inc
add
xchg
jbe
sub
sbb
sahf
mov
loop
xlat
xorb
inc
dec
and
xchg
sbb
xchg
insl
lods
aaa
mov
sub
cli
or
hlt
sbb
inc
xchg
push
cmp
std
or
or
sub
inc
mov
sbb
cli
pushf
in
sub
mov
ja
icebp
ljmp
subb
sbb
sub
pushf
xchg
push
xor
jb
decb
add
xchg
mov
mov
pop
adc
test
loopne
es
pop
ljmp
rcll
bound
xor
pushw
push
mov
pop
adc
mulb
scas
iret
add
dec
je
std
jb
jg
xor
mov
in
xchg
and
scas
mov
adc
adc
testl
popa
das
pop
rcr
mov
int
fidivl
pop
xchg
dec
sbb
insl
sub
mov
dec
mov
mov
inc
add
sbb
dec
addr16
bound
jb
fidivrl
fsubrl
icebp
aaa
enter
lods
shll
mov
mov
ja
mov
or
push
test
orl
jecxz
inc
inc
push
fcompl
xorl
sahf
mov
xchg
call
inc
sub
sbb
stos
rcrb
lock
or
imulw
dec
fsts
imul
cmp
cli
add
aaa
out
sbb
aaa
subb
lea
sub
push
mov
out
cmpsl
mov
mov
scas
insb
mov
popf
sub
dec
or
lock
dec
stos
add
cs
pop
jg
ret
daa
dec
add
fs
jecxz
cmp
mov
movsl
adc
adc
hlt
test
fwait
nop
adc
xchg
mov
icebp
insb
push
cmpsl
mov
and
add
jmp
sbb
mov
inc
mov
mov
mov
xor
push
mov
sub
ficoml
aaa
mov
add
push
inc
or
bnd
jb
add
xorb
xchg
je
or
loope
mov
xchg
fcmovnu
inc
cmpsb
in
cmp
pop
add
xlat
je
mov
pop
test
pop
jmp
sti
or
shlb
add
data16
xor
lahf
pop
mov
lds
pop
orb
je
or
std
jl
iret
shlb
int3
xchg
lret
xchg
ja
cltd
ds
jno
out
mov
push
xchg
mov
gs
add
xchg
out
pop
and
xchg
sub
fwait
push
xchg
addr16
lret
adc
mov
sub
inc
add
xchg
push
lahf
mov
addr16
lret
adc
cmpsl
mov
add
hlt
xchg
mov
xor
mov
jns
sub
lcall
mov
push
mov
cmp
orl
and
stos
jno
jmp
and
fisubrl
lgs
insb
sub
xchg
imul
lods
outsb
cmpsl
sub
les
xlat
xchg
lahf
push
dec
and
sbb
mov
cli
je
jle
sbb
fildll
sbb
hlt
popf
dec
inc
adc
adc
push
dec
cmp
fucomp
mov
insl
shlb
cmp
pop
or
stos
and
dec
xchg
mov
xchg
cmpsl
sub
pop
dec
xchg
test
out
jl
xchg
ja
add
scas
mov
push
or
xchg
fsubr
pop
mov
andl
scas
jecxz
rcr
xchg
jmp
ljmp
loopne
adc
fcoml
mov
cmc
jmp
or
cmpsl
sub
ja
pop
dec
push
pop
mov
pop
rcr
shll
into
pop
sbb
sarl
shl
push
shll
std
jno
mov
push
push
sbb
inc
xor
mov
mov
scas
pop
xor
rclb
mov
shll
mov
cmp
daa
sahf
fs
xor
pop
mov
and
sbb
outsl
sti
xchg
xor
xchg
jmp
jmp
jl,pt
mov
bound
jmp
sub
dec
and
out
subl
jl
mov
push
mov
sub
inc
mov
xorl
hlt
ja
xchg
mov
add
sub
ja
dec
testl
mov
xchg
pop
and
pushw
lea
and
sub
ja
sub
mov
jg
aas
sub
mov
or
lods
pushf
cmp
sub
jae
cmp
dec
ljmp
std
pop
push
cmpsb
adc
xor
sbb
jg
and
and
cli
ljmp
lret
cmp
rorb
lret
setb
jb
mov
push
xchg
icebp
outsl
push
cmpsl
mov
xor
lea
pop
or
clc
xchg
pop
adc
inc
cmc
out
adc
cltd
testl
cmp
pop
mov
pushf
outsl
sub
mov
pop
das
push
fbld
add
test
test
pop
xchg
ss
dec
loopne
adc
pop
sub
lock
std
mov
jmp
mov
stc
pop
adc
popf
jbe
sub
xchg
xchg
into
add
sti
or
mov
sahf
mov
enter
mov
and
push
lods
push
jno
pop
enter
inc
cs
and
xor
mov
mov
aas
addr16
cmp
mov
push
xor
aad
xchg
or
add
push
ss
jle
pop
jecxz
xchg
jmp
inc
mov
pusha
aam
pop
es
xlat
nop
mov
mov
rcrb
cwtl
stos
or
jnp
fisubrs
pop
pop
xchg
sub
popw
cmp
bound
arpl
neg
cmpsb
push
cmpb
jmp
ja
ja
movsl
xorb
sbb
sub
pop
xchg
cmp
nop
orb
je
or
jge
les
sbb
add
sub
xchg
mov
gs
add
cmc
jmp
jns
push
push
inc
fsubrs
pop
push
decb
out
add
addl
sbb
outsb
in
add
jl
push
inc
mov
testb
subl
sub
dec
mov
mov
or
or
ja
add
adc
or
xchg
out
xchg
sub
scas
adc
jge
pop
or
fbld
iret
cltd
and
mov
daa
mov
cmpsl
cmp
jl
dec
enter
dec
cmpsb
push
add
or
xchg
inc
nop
xchg
movsl
or
fwait
aas
or
xchg
or
cmpsl
or
in
sbb
pop
push
je
lea
les
xor
add
stos
mov
push
mov
pushf
xchg
addr16
xor
adc
iret
xor
data16
aaa
sbb
push
sbb
inc
mov
adc
inc
cmpl
sbbb
stc
hlt
adcl
xor
sbb
mov
imul
cmpsl
rorb
xchg
and
jno
or
fwait
mov
push
lods
ret
ja
push
sbb
js
imul
fisttps
dec
jae
xlat
push
mov
jecxz
test
mov
imul
jge
sbb
sub
xchg
ja
std
jmp
push
fs
xor
addr16
xchg
xlat
push
mov
aaa
test
pop
in
icebp
sub
cmp
and
mov
addr16
insl
and
adc
cltd
or
adc
mov
adc
pushw
cmpsl
sub
pop
jne
test
inc
dec
and
xchg
icebp
sbb
mov
push
add
das
ja
cmpsb
cmp
pop
sbb
xchg
jnp
mov
lods
rol
xchg
dec
xchg
add
dec
insl
ss
xor
fstpl
out
daa
imulb
xchg
pop
orl
jbe
out
lahf
dec
jmp
adc
and
dec
cmp
loop
jmp
sahf
call
pop
cmp
sub
pushw
std
or
sub
fimull
jbe
push
scas
out
les
les
add
dec
sub
mov
icebp
add
push
popa
mov
xchg
inc
stos
or
xchg
push
push
push
sub
jnp
xchg
mov
jmp
imul
ss
icebp
lds
test
divb
pushw
lcall
sbb
insl
shrl
cwtl
stos
xor
gs
push
or
mov
jg
add
sub
pop
ret
mov
jns
out
xor
fildl
mov
cmpsb
movsb
pop
pop
scas
xor
push
clc
orb
daa
out
add
andl
dec
push
mov
pop
aam
or
sbb
pushl
mov
rcll
test
movsl
sub
ja
adcb
shll
jge
mov
fildll
mov
sbb
fimull
pop
add
mov
xchg
into
jbe
or
out
jp
sbb
stos
into
mov
cltd
cs
add
scas
ss
arpl
sbb
out
pusha
mov
inc
ja
mov
dec
aaa
out
sbb
das
out
xor
mov
jecxz
enter
test
xchg
jle
add
cmp
adc
shll
mov
pop
pop
jge
xlat
imul
and
pusha
mov
ror
movsb
mov
call
xor
mov
shlb
xor
push
cmpsb
xchg
nop
je
sbb
push
fbstp
jecxz
js
bound
mov
cmp
popf
mov
aad
dec
pop
daa
and
ss
and
cmp
adc
mov
push
sub
sub
ret
shr
xchg
or
push
cmpsl
push
aaa
loop
adc
mov
fildll
or
adc
push
or
jae
jle
add
cltd
and
cli
mov
xchg
mov
adc
and
lods
mul
sahf
push
filds
enter
cmp
fildll
sbb
xchg
jns
push
ficoml
and
pop
jb
push
scas
mov
jl
xor
mov
lahf
popa
fnstsw
repnz
mov
rcrl
enter
fwait
pop
sbb
cmpsl
cmp
daa
das
add
push
jge
pushl
jmp
lahf
cmpsb
das
sbb
je
sub
jecxz
lock
mov
xchg
movsb
stos
ficoms
pusha
or
pop
and
xchg
xchg
shlb
call
adc
add
int
adcl
divb
in
push
mov
push
mov
mov
cmc
mov
pop
jns
pop
add
shll
fldt
or
cmc
sbb
std
lahf
mov
fisubrs
mov
mov
or
addr16
mov
frstor
int
into
inc
add
or
dec
mov
lods
pop
subb
int
pop
or
dec
call
mov
push
pop
or
ss
repz
cmp
lcall
and
xchg
sub
out
jmp
mov
adc
push
cmc
fnstenv
jle
xor
cmp
and
sbb
push
int3
cmpsb
adc
or
js,pn
stos
mov
clc
and
mov
adc
js
pop
mov
push
mov
add
adc
pop
ret
fcoms
mov
push
fcmovnu
xchg
fdivl
or
in
cmpsl
cmpsb
cwtl
into
cmpsb
aam
and
loop
insl
int3
shrb
cmp
sbb
stos
pop
xchg
xor
icebp
cli
and
iret
je
jne
or
cmpsl
sub
test
cmpsl
sub
fsubrp
inc
push
pop
shlb
stos
add
inc
sbb
mov
shrb
movsl
xchg
ljmp
out
or
pop
or
cmp
daa
imulw
std
add
adc
test
xor
mov
mov
fldt
in
stos
add
lret
lcall
ss
out
sub
mov
pop
and
mov
pop
adc
jnp
aaa
imul
push
fsts
or
cwtl
sbb
int
das
fsubrs
add
lods
or
or
sbb
ja
addr16
sbb
mov
add
dec
je
mov
pushw
cmpsl
sub
sub
push
pop
fistpl
and
mov
ret
sub
xlat
loop
sbb
scas
je
jo
push
and
stos
jne
hlt
cmp
inc
and
adc
pop
jle
fdivl
sub
lods
add
xchg
sub
data16
sbb
fs
push
jp
jge
jecxz
pusha
lea
js
ja
aad
adc
jg
dec
push
cmpsl
mov
add
hlt
mov
and
jg
nop
sar
outsl
cmp
mov
adc
jge
sub
aam
out
stos
pusha
mov
add
sbb
sbb
mov
inc
mov
mov
pop
add
ret
xchg
mov
push
ds
mov
mov
push
sub
cmp
lock
xchg
sub
ja
pop
xchg
mov
lcall
outsl
mulb
aam
adc
push
cmpsl
mov
mov
cmpsb
mov
dec
cltd
push
or
xor
inc
adc
sbb
fisubrs
add
cmp
xchg
sub
data16
lret
jp
push
es
iret
insl
add
xchg
gs
add
pop
mov
cmp
cmpsl
mov
fsubrl
and
sub
ja
leave
fisubl
mov
sub
sub
fistpll
pop
add
stos
mov
add
xchg
xchg
jp
sti
add
cmpb
adc
add
sub
jl
add
divl
mov
mov
adc
lcall
add
mov
sub
outsw
das
ja
arpl
xchg
push
stos
aas
inc
jecxz
in
rcrb
or
adc
insl
out
sub
dec
adc
pop
xchg
mov
pushl
sahf
xlat
testl
mov
lret
push
popa
mov
loop
adc
xor
repnz
push
cmpsl
mov
adc
mov
add
stc
push
sub
ja
mov
xor
mov
arpl
mov
std
mov
divl
lcall
sti
loope
cmp
xchg
xchg
xlat
and
ret
lods
lahf
aas
xchg
sbb
aad
or
jl
test
xor
repnz
scas
mov
mov
insb
sbb
ljmp
std
xchg
pop
adc
cmc
test
in
cmc
gs
add
movzwl
mov
outsb
push
cmpsl
mov
or
mov
xchg
lret
xor
mov
sub
ja
loop
int
lea
or
sub
inc
adc
or
xor
inc
out
pop
out
push
roll
push
cmpsl
in
xchg
xor
mov
and
sub
ja
jge
clc
add
push
mov
xchg
ljmp
lret
pop
out
sub
addr16
or
pop
inc
xchg
in
stos
scas
mov
sarb
xor
xchg
jbe
jo
mov
movsl
jp
ds
inc
hlt
jg
decb
add
mov
pop
aaa
cld
add
out
xor
jae
ret
sahf
mov
push
cmp
and
mov
mov
or
dec
mov
pop
addr16
cmpsb
or
sub
add
fsubs
and
mov
add
fisttpl
insl
stc
inc
aam
shl
cld
jmp
into
and
or
ljmp
add
xchg
sub
data16
inc
pop
repnz
mov
xor
mov
ja
ja
insl
test
mov
sahf
js
mov
jne
fnstenv
into
popf
xchg
sub
sub
sub
addr16
lret
adc
iret
xchg
jge
xlat
jb
mov
mov
xchg
test
pop
out
dec
mov
mov
or
add
ss
xchg
jmp
or
adc
mov
or
pop
popf
cmp
mov
or
jmp
mov
in
rcll
and
sbb
or
es
in
add
hlt
mov
mov
jo
repz
shll
dec
push
das
fiadds
jnp
stos
add
out
inc
insb
mov
dec
rcll
push
adc
cld
or
sub
gs
or
dec
pop
out
in
mov
imul
cmp
lea
lds
jne
adc
pushw
sahf
js
mov
jne
leave
mov
mov
mov
repnz
push
cmpsl
mov
into
pop
sbb
add
hlt
push
mov
mov
cmpsb
mov
or
mov
shrl
sbb
dec
test
fists
fistpl
xor
lahf
mov
mov
xchg
fwait
push
jo
mov
mov
pop
push
push
popa
mov
lahf
sbb
clc
jmp
add
inc
and
stos
jb
fldl
outsl
inc
testl
sub
add
xor
jl
mov
mov
cs
jo
enter
fs
push
add
lea
cmp
mov
js
ja
jge
jmp
jbe
dec
sbb
adc
loop
pop
cli
js
stos
mov
iret
mov
pop
jns
lcall
pop
xchg
call
sub
inc
jo
jae
out
xchg
cmp
mov
push
addr16
sbb
insl
repz
pop
inc
add
fadd
and
fildll
cwtl
shrb
xor
sub
incl
lds
xor
push
add
test
xor
loope
xor
push
xchg
sub
add
popa
push
sbb
mov
fsubs
sbb
mov
cmp
sub
frstor
movb
mov
mov
push
cmp
out
xchg
cmp
push
mov
adc
adc
pushw
cmpsl
sub
in
push
push
sub
mov
ljmp
repnz
mov
out
addr16
ja
sahf
mov
out
fiadds
jns
push
push
dec
xchg
pop
mov
popa
mov
cltd
dec
stc
xchg
push
xlat
test
push
xchg
add
mov
sbb
shlb
cmpl
fildll
in
mov
dec
xchg
pop
cmp
add
or
stos
pushf
aas
mov
bound
xor
outsl
sbb
mov
fidivl
mov
ja
hlt
push
jb
push
mov
fnstsw
xchg
mov
out
cli
es
cmp
mov
add
shll
pop
mov
pop
xor
imul
mov
mov
hlt
jns
xchg
mov
sub
xchg
mov
push
and
xor
insl
stc
fisttps
add
stos
mov
jle
nop
mov
ss
sub
push
xchg
and
pop
inc
int3
inc
xchg
mov
cmpsb
icebp
and
sbb
lock
xchg
and
cmpsl
mov
or
push
mov
mov
ja
bound
pop
mov
daa
sbb
xchg
stos
mov
insl
imul
call
adc
xchg
or
jmp
jmpw
push
mov
rorl
push
sub
mov
add
pop
movsl
stos
aaa
loop
sbb
mov
sub
loope
pop
push
idivl
or
pop
lcall
rcl
push
xor
insb
push
mov
je
lret
jae
mov
jo
js
stos
mov
hlt
mov
xchg
cmp
cmpb
adc
xchg
sub
xchg
aaa
mov
xchg
fstl
cmp
mov
xchg
stos
pop
dec
mov
jg,pn
lahf
dec
dec
lcall
and
stos
je
ja
jbe
aas
ss
adc
mov
pop
int3
jmp
fisubrl
pusha
mov
andl
cmp
and
jecxz
xchg
jmp
cli
pop
adc
jl
push
xchg
jns
ud0
lret
push
jge
jne
jo
aaa
addr16
or
pop
adcb
out
xor
jno
arpl
movsb
in
xchg
pop
loope
sub
nop
ret
xchg
test
and
ja
arpl
pusha
addl
fldln2
rolb
xchg
mov
andb
xchg
jmp
pop
mov
insl
fiadds
je
add
testl
cmc
lret
jb
testl
mov
icebp
add
dec
cmp
xor
cmp
mov
aaa
pop
fadds
push
dec
jns
sbb
xorb
jmp
or
lods
cmpsl
comiss
sbb
hlt
js
xchg
mov
pxor
push
sbb
mov
nop
push
pop
mov
mov
mov
jp
pop
movb
filds
fwait
cmp
aad
dec
outsl
negl
mov
push
jb
mov
adc
xlat
sbb
mov
hlt
je
xchg
mov
daa
push
xchg
mov
mov
arpl
mov
lods
cwtl
jg
pusha
pop
mov
or
imul
sub
mov
sub
mov
sub
into
mov
out
jg
adc
mov
mov
mov
nop
and
ret
jbe
ja
jb
fcomip
cwtl
pop
add
mov
cs
iret
add
lods
mov
mov
mov
cmp
ljmp
sub
mov
fsub
inc
lret
out
sub
dec
add
push
push
sub
or
js
xor
jnp
popa
or
mov
lods
out
xchg
jns
add
inc
mov
mov
jb
cmpsb
xchg
cmp
dec
inc
lock
push
mov
and
sbb
pop
outsb
push
or
jae
cmp
fsts
imul
mov
push
pop
ss
bswap
xchg
stos
fmuls
addr16
adc
pop
out
jl
xlat
cwtl
mov
out
rcrb
pop
mov
pushf
pop
xor
call
test
jle
cmp
andl
fcomps
mov
sub
icebp
flds
idivb
add
cmpsl
jmp
lock
idivb
popf
aad
sub
mov
mov
pop
inc
je
or
sbb
sub
pop
sbb
inc
mov
push
test
or
and
pop
jmp
ja
hlt
cmp
or
cs
out
or
xchg
push
cwtl
cmp
loop
jecxz
jne
scas
in
ret
mov
add
int3
sub
mov
in
loopne
dec
std
jne
pop
lret
mov
add
movsl
es
push
sub
icebp
clc
mov
adc
cmp
cltd
ss
leave
fisubl
les
mov
inc
test
stc
pushf
sub
mov
in
inc
icebp
insb
push
cmpsl
mov
and
jmp
cs
imul
xor
insl
and
sub
sti
sbb
cld
add
or
add
or
xchg
ja
arpl
lret
dec
out
lds
lahf
ds
sub
sub
lea
outsb
xchg
movsl
cmpsl
mov
mov
jne
loope
add
xchg
sub
addw
and
cmp
jb
insb
mov
mov
nop
push
pop
mov
dec
clc
push
aaa
in
mov
jb
mov
mov
negl
aas
jns
jno
push
lods
notl
call
jle
pop
pop
loope
pop
jns
add
mov
aaa
cmp
sbb
mov
or
pusha
cmp
add
and
mov
and
in
mov
pushf
sub
data16
mov
push
cmp
mov
das
push
dec
lcall
cld
mov
stos
call
es
mov
xchg
cmp
mov
aas
mov
sarb
rclb
aas
or
push
cmpsb
sub
cs
fidivrl
outsl
pop
push
and
popf
sti
adc
jnp
popl
out
aas
pop
pop
cs
add
rcrb
xor
mov
call
cmpsl
or
out
sub
dec
add
out
iret
lods
mov
jno
inc
and
icebp
add
lds
cmpsl
mov
cs
hlt
jp
xchg
mov
jmp
push
je
pop
in
push
jb
sbb
cmp
imul
ja
jmp
pop
ret
les
cltd
add
aad
sbb
cmp
dec
add
outsl
fldt
imul
out
mov
add
or
rolb
rol
sbb
inc
jl
jle
das
mov
lahf
addr16
xchg
lock
cmp
mov
cs
mov
mov
jp
add
dec
repnz
xlat
scas
insl
enter
mov
insb
sub
jmp
in
loopne
mov
push
int
sub
or
fnstsw
pop
mov
jbe
mov
fisubrl
inc
imul
cmp
push
add
mov
fsub
pushf
add
xchg
xor
in
test
jne
sub
adc
aas
js
stos
mov
ljmp
les
jb
add
lahf
test
xor
mov
mov
stc
and
mov
lock
fs
sbb
cmp
insl
add
lret
cmpsb
cwtl
xchg
loop
dec
jl
cmpsl
sbb
xchg
jl
mov
sub
push
add
push
popf
mov
mov
inc
loope
jns
dec
jbe
enter
sahf
push
nopl
roll
fimull
mov
cmpsb
sbb
push
sub
je
ja
mov
bound
add
pushw
sub
aam
and
push
or
xor
leave
mov
jo
aas
and
jg
and
cld
test
ljmp
lret
sub
cwtl
loopne
and
lret
setb
jg
jmp
ja
scas
pop
jle
and
ljmp
dec
outsl
pop
mov
stos
mov
dec
pusha
cli
ficompl
lahf
repz
add
mov
push
sbb
scas
fwait
mov
stc
jecxz
sub
dec
jne
movsl
in
ljmp
aaa
add
xchg
cmp
mov
xchg
sub
ds
and
cs
jno
fildll
sbb
jmp
pop
mov
cltd
inc
jmp
sub
inc
adc
or
cld
or
push
fimull
mov
push
insb
into
shlb
mov
sub
xchg
repz
cmp
enter
repnz
inc
lret
repz
jecxz
mov
push
adcl
or
mov
pop
insl
stos
mov
mov
cmc
jne
xchg
mov
jmp
dec
sub
rcrb
cmp
lea
jne
je
mov
pusha
cmp
pushw
cmpsb
push
sub
scas
shll
push
shlb
mov
sub
cmpsl
xchg
nop
out
pop
out
dec
in
stos
mov
adc
cmpsl
xchg
andb
add
data16
jmp
pslld
push
sbb
push
or
sbb
mov
test
rclb
fdivs
or
adc
out
mov
mov
or
mull
aam
sub
pop
cmpsl
jmp
and
add
sbb
scas
insb
fwait
std
dec
sbb
adc
adc
sbb
lods
jl
ret
xchg
jecxz
cld
xor
fdivr
mov
mov
push
dec
cld
sbb
xchg
ja
push
push
cmc
cmp
xchg
push
sbb
jp
ja
sbb
push
repz
sub
ret
sbb
icebp
mov
out
hlt
out
sub
dec
lock
icebp
loope
sub
add
rolb
mov
push
enter
pop
pop
in
into
mov
repz
ret
aad
or
push
pop
mov
mov
sub
push
add
push
and
lods
xchg
icebp
scas
lret
push
jle
xchg
pop
sub
test
add
xchg
lcall
mov
add
test
inc
xchg
cmpsl
outsb
sbb
fdivrs
xor
pop
inc
fmull
test
lds
or
jle
ja
loope
lds
or
add
xor
xor
xchg
or
call
sbbl
hlt
xchg
jne
add
add
cmc
loop
shll
mov
jl
jns
sbb
jl
push
ret
pusha
mov
ja
shll
shll
nop
loopne
or
lret
into
xor
shll
push
rcrl
add
out
imull
mov
ret
bound
mov
push
mov
or
push
mov
mov
test
adc
jae
mov
arpl
aaa
jbe
bound
fldl
sub
ja
data16
add
cwtl
mov
outsb
push
mov
mov
mov
add
hlt
xchg
sbb
mov
and
gs
cs
lret
sub
cmpsl
cmpsb
pop
sub
mov
cmp
mov
add
add
sbb
sar
pop
mov
loopne
sahf
out
addr16
adc
hlt
jno
inc
sbb
or
leave
fcmovnu
xchg
ficoms
jo
les
mov
and
sub
adc
cwtl
insb
sub
jl
cs
add
mov
hlt
push
rcll
jnp
jbe
inc
push
fs
mov
jb
out
rclb
xchg
cmp
push
xchg
sub
subw
je
mov
push
cltd
insl
mov
imul
xor
mov
cmp
and
pop
mov
xor
cmc
hlt
test
jle
jge
jp
shrb
or
addr16
shll
bound
setne
movsl
sbb
aad
test
add
xchg
dec
xor
mov
and
cmpsl
mov
hlt
mov
lahf
inc
in
minps
in
sqrtps
mov
fisubl
jl
out
sub
dec
sbb
out
cmp
sub
or
je
sub
cld
out
add
xchg
cmpxchg
sbb
xchg
fisubl
iret
enter
ja
jbe
add
fcomps
push
adc
inc
repnz
pop
mov
add
lahf
xor
pop
cmpsl
repnz
and
andb
sarb
xchg
push
mov
add
sbb
rcll
adc
mov
adc
fisttpll
sub
addr16
out
mov
adc
xchg
adc
mov
lret
mov
daa
fdivs
cmpsl
and
pop
cld
fdiv
xchg
pop
std
inc
jno
ja
es
add
adc
mov
mov
cld
lret
mov
mov
pop
and
cwtl
int3
mov
decb
mulb
mov
or
add
push
mov
xor
sbb
pop
adc
jecxz
dec
nop
lock
test
pop
in
add
push
cmpsl
mov
fwait
mov
pushw
cmpsl
aaa
decl
test
and
add
subl
cwtl
fstl
xchg
push
loop
fcoms
and
jne
dec
enter
fildll
pusha
repz
sbb
aad
xchg
sub
pushw
daa
les
cltd
outsl
mov
jmp
cmpsl
mov
loope
add
xchg
sub
data16
pop
in
pop
and
add
inc
aam
push
cmp
xchg
pop
adc
jp
mov
jae
lds
mov
cltd
pop
cmpsl
mov
test
sbb
insl
cmpsl
mov
loope
add
xchg
sub
cwtd
das
sbb
push
sub
cmp
push
inc
cmp
xchg
pop
cvtps2pd
inc
jno
adc
cmpsl
mov
jne
or
stc
xor
sbb
scas
mov
mov
fistl
ja
inc
out
or
cltd
imul
mov
pop
cmpsl
mov
inc
insl
or
cld
xor
or
mov
hlt
jle
xchg
mov
es
jp
ja
push
xor
xor
dec
jae
dec
aaa
mov
mov
andl
es
out
int
jecxz
xchg
jmp
add
sub
mov
mov
jns
add
xor
popf
fbld
rcr
xchg
jmp
cmpsl
popf
mov
sub
lds
jo
pop
sbb
add
imul
test
or
sub
pushw
cmpsl
outsb
cmp
xor
shl
push
cmpsl
mov
and
cmc
jnp
xchg
mov
mov
sub
ja
cld
outsl
adc
xor
sbb
pop
faddl
mov
add
hlt
mov
sahf
sub
pop
or
es
mov
pop
jns
add
fsubrl
mov
jmp
add
out
addb
jecxz
mov
sub
out
loop
jo
cwtl
and
push
jl
cmp
mov
leave
jo
push
or
decl
add
dec
or
sbb
sbb
mov
fcoms
insb
shrb
adc
jns
mov
ret
out
jns
add
rorb
js
movsb
jbe
orb
leave
arpl
sbb
sti
fildll
imul
xor
lcall
loope
out
pushw
cmpsl
mov
mov
ds
mov
xor
mov
in
cmp
mov
fcom
jae
test
test
test
pushf
negb
and
out
and
stos
outsb
in
jge
cmp
nop
mov
call
fdivs
jle
add
dec
cli
dec
fistpll
lods
sub
hlt
lret
mov
xchg
xchg
inc
push
fadd
and
aad
and
stos
je
jno
push
add
es
pop
inc
pushf
es
shrb
sbb
mov
or
or
and
cmc
cs
pop
sbb
popa
pop
inc
and
sbb
mov
neg
push
pusha
adc
icebp
sub
push
xchg
dec
nop
mov
cli
loop
loopne
add
fldl
clc
pop
bound
ss
pop
fcmovnu
xchg
ljmp
mov
aad
inc
add
cmp
dec
ret
out
add
sub
ret
icebp
mov
cltd
lret
ja
scas
xor
stos
orb
xor
cmp
pop
test
or
pusha
sub
rorl
fmuls
pop
mov
or
cmp
cmp
sub
rcrb
pop
adc
fs
lcall
xchg
mov
gs
add
jo
out
sub
dec
and
stc
xor
pop
cs
nop
push
cmpb
mov
bound
pop
fidivs
lods
sahf
cmpsb
daa
push
cmp
lret
jns
movl
les
fwait
scas
jp
cmp
rcll
sbb
xchg
je
movsb
stos
and
xchg
add
mov
shrl
flds
mov
mov
repz
aaa
cld
nop
pop
adc
lea
out
ret
imul
xchg
or
filds
add
je
enter
jge
testl
ss
jg
xor
aaa
mov
sub
ja
xchg
mov
mov
mov
ret
jns
xor
sbb
jne
cltd
imul
dec
lock
nop
sub
pushw
inc
out
or
imul
mov
jle
pusha
push
out
je
or
mov
xor
sahf
mov
push
out
ret
cmpsl
or
add
add
hlt
mov
lea
lds
mov
rclb
orb
mov
pop
ficompl
popf
hlt
mov
adc
insb
pusha
neg
imul
test
xchg
shlb
lret
sub
subb
in
adc
sbb
icebp
shll
or
push
xchg
inc
nop
lea
mov
xchg
sbb
insb
push
cmpsl
mov
movsb
jmp
mov
mov
or
lods
cmpsb
sub
mov
pop
and
xlat
push
mov
push
test
xchg
pop
mov
imul
mov
or
ret
fcoms
sbb
jnp
mov
out
arpl
enter
mov
mov
mov
std
jmp
jg
mov
dec
push
mov
das
dec
jns
cmp
mov
icebp
outsl
push
cmpsl
mov
xchg
jne
mov
sbb
subb
js
ja
cmpsb
jno
sahf
mov
out
push
outsb
jle
les
mov
xchg
sub
arpl
sub
addr16
lret
adc
cmpsl
or
sbb
arpl
pop
testl
xor
or
cmpsl
sub
ja
mov
pop
mov
dec
mov
xor
inc
adc
push
filds
pop
jmp
xchg
jns
adc
sbb
movsl
inc
cmp
add
xchg
cmp
xchg
test
inc
add
mov
jmp
in
inc
pop
xor
mov
cs
adc
jbe
cld
add
mov
or
es
lahf
mov
mov
jg
int3
jo
pop
pop
mov
mov
loopne
push
nop
add
mov
cmpsl
mov
mov
jg
add
push
sbb
fstpt
mov
and
jnp
and
enter
sahf
test
cli
mov
fildll
sbb
cmpb
jge
adc
dec
ljmp
roll
pop
mov
jno
add
cld
aam
loopne
pop
rcr
xchg
jmp
stos
fadds
push
cmpsl
sub
pop
pop
and
je
cmp
sub
adc
add
cmpsb
pop
and
jmp
lock
mov
or
jo
out
mov
fcoml
mov
sub
xlat
sahf
and
mov
mov
xchg
mov
icebp
imul
mov
stos
inc
hlt
ja
xchg
mov
sub
xchg
mov
gs
add
pop
jno
mov
or
ja
mov
dec
das
hlt
addr16
xchg
xchg
mov
sbb
les
icebp
sbb
mov
jns
dec
mov
push
and
push
repz
sbbb
sub
aas
jge
sbb
cmp
lahf
xor
pop
jno
push
xchg
loope
or
jb
push
nop
sub
pushw
xchg
mov
push
das
testb
sub
dec
jge
lcall
inc
in
je
or
je
mov
fs
sbb
mov
jmp
das
sub
rcr
mov
push
nop
js
stos
mov
clc
sbb
dec
or
pop
sbb
adc
xchg
call
push
cmpsl
push
inc
cmp
shrl
xchg
xchg
scas
jmp
mov
sub
mov
ljmp
pop
and
cmpsl
cmove
fs
sbb
lea
sbb
in
shrl
mov
mov
mov
incb
sub
push
inc
inc
cmp
clc
into
cmpsb
in
pop
and
add
cmp
cmc
inc
lods
bound
jp
pop
push
mov
pop
dec
mov
lods
add
fucomi
les
xchg
sub
data16
xor
cltd
test
push
pop
or
mov
pusha
aad
jnp
pop
xchg
icebp
sbb
and
bound
fcmovnbe
and
add
jnp
or
leave
pop
or
sub
aad
dec
cs
xchg
shll
xchg
insl
inc
jecxz
push
pop
cmpl
mov
and
std
mov
ret
xchg
cmpsl
mov
fidivrs
xchg
aad
lahf
stos
mov
jecxz
xchg
cltd
xor
testb
cmp
cmpps
data16
inc
fnstcw
in
sub
mov
pop
in
mov
testl
scas
mov
insl
xor
fcmovu
insb
and
or
fcmovnb
push
xor
in
orl
inc
rcll
lret
xor
push
daa
popa
xchg
adc
jae
in
mov
addl
jmp
adcl
hlt
cmp
jo
mov
dec
in
lea
dec
cmpsb
sbb
cld
fistps
call
adc
fstpt
inc
cmovge
push
icebp
imul
aaa
call
dec
mov
dec
jge
inc
sub
push
sbbb
xchg
ljmp
lret
dec
enter
mov
push
addr16
setb
dec
adc
loope
sub
jl
xor
sub
jecxz
ret
mov
add
xor
imul
add
xlat
xchg
push
mov
push
loopne
jmp
stos
scas
ret
mov
imul
pushw
sahf
aaa
outsb
mov
jl
add
call
push
pslld
push
sbb
icebp
mov
push
sbb
xor
icebp
imul
inc
push
clc
stos
jmp
inc
shrl
jl
ja
scas
mov
jmp
jecxz
adc
jmp
bound
mov
xor
push
mov
pop
aaa
or
iret
sbb
in
lret
mov
clc
sahf
push
cwtl
fmul
ret
movsl
push
push
jl
or
dec
popf
in
add
jbe
adc
push
xchg
mov
icebp
imul
mov
addr16
hlt
js
xchg
mov
daa
sbb
ret
mov
xchg
fdivrl
ljmp
dec
xchg
ja
in
xor
push
decl
fwait
mov
arpl
jge
pop
daa
cltd
xchg
ljmp
lret
dec
shrb
sahf
enter
addr16
or
mov
pop
je
jo
cmpsl
mov
jg
insb
jae
mov
hlt
insl
inc
std
leave
ds
cmp
lock
push
jle
movsb
sub
mov
ja
int3
add
cmpsb
and
xor
sub
sahf
gs
push
js
push
fcomi
lods
and
stos
je
mov
das
and
testl
orb
add
cmc
test
outsl
mov
mov
jns
add
jl
xchg
ja
dec
cmpsb
sbb
add
test
punpckhdq
mov
mov
add
lret
fsts
imul
dec
mov
arpl
pop
fcmovnu
repnz
sub
sub
add
inc
in
or
cltd
inc
movsb
lods
xchg
push
arpl
arpl
mov
mov
inc
testl
mov
iret
shlb
cmp
or
movsb
fwait
pop
mov
push
cltd
push
and
jnp
or
in
rcl
mov
cli
add
pop
enter
pop
in
shrb
jg
nop
lds
hlt
mov
jp
pop
cmpsl
and
sub
lea
lahf
hlt
sbb
add
mov
sbb
cmp
je
clc
cli
jne
insl
aas
mov
pop
stc
loop
inc
adc
push
xor
add
mov
mov
int
sbb
lds
lods
xchg
stos
negb
pop
jmp
insl
pop
xchg
aas
outsl
cmpsb
pushf
xchg
paddsw
mov
pop
and
xlat
xchg
mov
out
adc
jmp
xchg
mov
out
sbb
mov
xor
fs
xchg
test
and
xor
mov
jle
add
and
dec
mov
xchg
sub
xchg
sub
inc
or
repnz
outsl
cmpb
xor
aad
mov
daa
cmc
fucom
mov
leave
xor
inc
lahf
or
orb
push
mov
push
adc
aaa
cli
nop
pop
adc
xchg
shll
cmpsb
sub
jge
pop
jl
inc
mov
push
jb
dec
in
setbe
pop
push
xor
in
or
pop
popf
in
enter
cmpsb
xchg
je
add
xor
outsl
mov
test
jg
stos
jge
xor
dec
lret
adc
cltd
nop
mov
adc
xor
xchg
lods
mov
mov
push
push
mov
sbb
and
aaa
nop
pop
or
push
jmp
lds
mov
sarb
mov
ss
inc
jge
and
xor
xchg
push
mov
mov
inc
push
add
adc
pmaxsw
push
sbb
mov
testl
mov
aas
ret
sbb
pushw
fsubl
and
cmpsl
test
gs
push
cmc
push
push
sbb
jnp
push
jmp
pop
mov
cmp
or
mov
push
inc
pop
mov
in
cmc
mov
sub
mov
loopne
hlt
mov
movsl
fs
int
xchg
mov
sbb
push
xchg
cmp
imull
mov
push
andb
aas
add
cltd
mov
insb
stc
push
icebp
sbb
jbe
subb
aaa
mov
hlt
xchg
std
or
mov
mov
pop
add
push
les
dec
add
aaa
and
mov
and
adc
adc
pop
sbb
dec
xor
imul
stos
out
sub
mov
jecxz
dec
jnp
sahf
sub
dec
adc
out
or
mov
jle
cwtl
sub
xchg
fistps
and
stc
adc
mov
mov
jns
add
cmp
enter
pop
xor
sub
cs
add
cmp
insb
sub
add
jns
add
cwtl
mov
rolb
push
popf
inc
mov
cli
push
outsl
scas
or
mov
insb
pushf
add
notl
popf
mov
lahf
mov
inc
outsb
sub
inc
adc
mov
inc
cmp
frstor
mov
loopne
fwait
xor
cs
addr16
or
hlt
subl
dec
jmp
ret
roll
pop
jno
xchg
jb
sub
cmpsl
repnz
xor
xchg
in
ds
mov
adc
and
pushw
cmpsl
push
outsb
dec
shll
in
or
repnz
ja
pop
testl
or
xor
aas
fistpll
push
ret
stos
mov
in
or
bound
cmpb
adc
dec
sbbl
mov
lret
cmp
sub
addr16
lret
adc
call
aad
xor
mov
add
stos
fwait
mov
xor
ja
mov
gs
rcrl
ret
mov
imul
sub
mov
jle
push
add
sbb
pop
fcmovnu
xchg
ljmp
and
ret
xchg
pushl
sbb
aad
hlt
pop
jp
movsb
push
call
dec
sti
pop
jnp
mov
jne
mov
loopne
xchg
xor
jl
lds
sti
xchg
push
or
sahf
xchg
jecxz
cld
xchg
lahf
shl
imul
out
xlat
in
and
add
cmpsl
test
test
mov
or
sub
popf
fisubrs
xor
xchg
mov
pop
adc
cmpsb
loope
jno
js
stos
mov
sub
cmp
adc
xchg
or
les
or
insl
pop
pusha
pop
mov
mov
add
xorl
hlt
or
jp
add
or
mov
cmc
loopne
leave
jne
pop
pop
lcall
sub
nop
xchg
das
nop
lea
sub
xor
mov
pop
mov
push
add
mov
mov
pop
xor
aad
pop
lret
jb
in
out
adc
add
jae
xchg
scas
push
incl
adc
mov
ret
cmc
jp
fidivrl
xor
cs
lds
pusha
rcr
dec
and
push
sbb
enter
pop
decl
push
and
jne
and
ja
jo
addl
adc
fstl
jo
cmpsl
mov
and
icebp
popa
sub
add
mov
xor
lret
outsb
add
push
gs
add
pushf
test
add
or
insb
push
cmpsl
mov
repz
pop
push
sub
mov
mov
pop
or
sbb
mov
jb
sub
dec
pop
cmpsl
mov
fistpll
and
imul
xor
push
adcb
dec
popf
stos
mov
push
fdiv
test
ljmp
lret
push
xchg
sub
sbb
lret
or
adc
pop
mov
ja
add
sub
ret
fcoms
push
cld
xor
mov
push
push
mov
neg
push
and
jo
outsl
inc
mov
pop
dec
and
sub
inc
lahf
xor
cli
mov
rorb
cmp
lcall
push
ret
insl
xor
daa
adc
fs
pop
cli
jl
xlat
mov
scas
mov
mov
xor
stos
mov
mov
hlt
jae
xchg
mov
pxor
push
sbb
outsb
xchg
cmp
dec
cmp
pop
push
cmpsl
mov
prefetchw
loope
and
pop
sbb
out
add
addl
cmc
sbb
mov
dec
and
xorb
mov
sbb
std
pop
fbstp
nop
mov
xor
mov
adc
sbb
inc
stos
mov
loop
push
cmp
jnp
pop
xchg
sub
ljmpw
sbb
les
mov
xchg
out
push
adc
aaa
cmp
xchg
pop
push
sub
jno
ss
icebp
mov
cmpsl
mov
dec
cmp
sbb
cmpsl
mov
nop
jge
pop
inc
pop
xchg
ljmp
lret
das
cwtl
sub
jne
test
lret
or
mov
jae
add
push
push
mov
jmp
xchg
mov
stc
add
pop
mov
fiaddl
xchg
mov
mov
mov
cmp
mov
mov
ja
iret
js
xchg
pop
call
and
adcb
je
and
popf
sub
cmp
in
xchg
cli
or
and
scas
stos
fstl
lcall
mov
inc
jl
mov
jne
mov
test
les
push
push
lahf
mov
push
mov
adc
fldenv
dec
je
add
mov
pop
fistps
and
lds
das
mov
cs
sarl
lahf
cld
cltd
imul
sub
pop
enter
das
sbb
push
movsb
sahf
movsb
int
in
addl
or
shll
rorl
jbe
xor
pushw
jb
xor
pop
hlt
ja
xchg
mov
pop
sub
ja
push
gs
add
pushw
cli
out
add
xchg
inc
into
cltd
icebp
sbb
mov
cmp
xchg
dec
fwait
jle
fcomps
loop
jnp
xchg
inc
adc
rcr
jae
mov
dec
mov
hlt
rclb
iret
pushw
cmpsb
cli
fidivrs
popa
inc
js
stos
mov
sti
scas
xchg
mov
or
add
and
mov
out
sub
dec
incb
call
mov
add
in
mov
std
jb
popf
std
iret
fsts
imul
inc
addr16
mov
addr16
fucomip
aas
std
fsubrl
pop
xchg
sub
push
add
jae
aas
popa
push
sbb
hlt
insb
push
push
push
adc
lret
loop
add
push
fadds
data16
mov
sub
std
mov
adc
sbb
lea
sub
les
mov
pushw
sub
inc
adc
xor
dec
lods
mov
mov
add
mov
in
mov
out
push
daa
mov
imul
sub
shll
add
mov
pop
push
lcall
add
sqrtps
pop
sahf
cmp
mov
lcall
jg
push
mov
ret
sub
xor
stos
subb
arpl
lret
cmpsl
xor
movsl
sbb
jno
mov
sahf
popf
and
cmpsl
jmp
push
adc
popf
jle
and
push
xchg
ljmp
lret
push
lret
addr16
push
xchg
mov
mov
ja
mov
mov
popf
dec
dec
xchg
sub
push
dec
sbb
pop
fs
mov
enter
imull
mov
cmp
hlt
and
cwtl
das
ret
xor
adc
push
jbe
ss
adc
pop
and
setp
mov
pop
add
pop
or
push
mov
call
test
mov
push
jge
mov
jecxz
add
pop
nop
sub
inc
fcomps
fwait
cmp
adc
cmp
add
loop
xchg
call
inc
pop
data16
fcomi
and
das
pusha
addr16
sub
insl
fsubs
or
into
cmp
jbe
inc
sbb
mov
fcmovu
push
jp
mov
add
popa
pop
stos
xchg
xor
das
sbb
popa
test
iret
adc
ja
or
inc
lods
mov
hlt
xchg
pushw
sbb
sbb
pop
xchg
nop
jecxz
fldt
mov
adc
cmp
ret
mov
test
sbb
dec
test
ss
add
jp
push
pop
xchg
sub
data16
cmp
mov
adc
insb
pslld
sbb
mov
stos
adc
sbb
mov
fsubp
je
out
sub
dec
pop
cmp
call
cs
negl
cmpsl
add
aaa
bndstx
dec
into
enter
cmp
daa
loop
data16
xchg
stos
mov
fisttps
xchg
mov
mov
lcall
xchg
fildl
xor
mov
jmp
sub
dec
adc
out
xchg
into
jp
cs
jl
jg
cmp
pop
fs
call
xchg
cmp
arpl
inc
jns
add
icebp
xchg
mov
cs
aam
fwait
lods
pop
fisubs
mov
std
lods
mov
pop
fimull
jns
fdivrs
fdivrs
notb
xchg
cli
add
jge
sub
inc
and
push
leave
sbb
js
jmp
or
pop
jb
mov
mov
xchg
cmp
and
das
or
mov
shl
imul
pop
fmul
nop
scas
cwtl
sub
sahf
mov
or
arpl
pop
cld
mov
mov
and
mov
ja
arpl
xchg
fldenv
cltd
imul
mov
fs
arpl
pop
push
sub
xchg
ljmp
lret
dec
ret
inc
mov
addr16
or
dec
or
xor
mov
lahf
pop
aaa
call
mov
mov
daa
add
jl
lds
movsl
cmc
push
imul
and
fildll
sbb
pop
nop
xchg
jae
or
popf
lock
mov
repz
or
sbb
and
ss
jg
sub
cmpsb
xchg
or
dec
adcb
inc
pusha
xlat
pop
xor
push
and
stos
jb
xor
pop
mov
push
nop
mov
mov
sub
call
mov
mov
cmpsl
mov
loop
out
sub
dec
adc
popf
xchg
sub
cmc
mov
sub
ss
mov
cmpsb
imul
in
fsts
imul
fdivs
push
mov
fs
sub
jg
cmpsl
mov
int3
jg
and
add
xor
sub
addr16
setb
in
sbb
adc
push
neg
push
xchg
out
ss
frstor
add
orl
push
cmc
mov
pop
push
and
leave
dec
push
cmp
fadds
xchg
jno
inc
dec
xchg
xor
test
rcrb
imul
jg
iret
xchg
pop
jp
xchg
in
or
cmpsl
xor
jbe
scas
out
sub
cmp
ret
mov
sub
data16
pop
cmp
cs
leave
fildl
pop
sahf
cmpsb
dec
push
mov
ret
scas
rorb
jo
xchg
das
add
pop
mov
repz
sbb
stc
leave
mov
pop
nop
mov
xor
inc
cs
jecxz
js
lods
pop
into
xor
pop
xchg
sub
data16
mov
sbb
mov
js
scas
lahf
cmp
mov
jmp
cmpsb
mov
jecxz
enter
mov
xchg
sahf
lea
push
adc
add
adc
pop
mov
xor
xor
ljmp
mov
mov
sub
test
lea
sbb
or
pop
jb
icebp
arpl
sti
jg
mov
mov
lahf
test
imul
leave
imul
ja
sti
dec
or
xor
xchg
or
popf
and
adc
sub
in
test
fldenv
push
mov
and
sub
adc
jns
lea
imul
das
push
aaa
fwait
lret
in
xchg
mov
mov
pop
sti
jl
xlat
xchg
stc
mov
sub
test
pop
ljmp
mov
sub
mov
loop
push
and
pushf
clc
push
xchg
sub
mov
and
xlat
aaa
std
pop
shufps
xor
pop
xchg
adc
fucom
mov
xor
lahf
out
mov
adc
bound
pusha
out
cmpsl
mov
mov
leave
and
divb
xor
add
inc
stos
pop
pusha
pop
mov
push
daa
xor
adc
repz
in
add
and
rorb
adc
fsubrl
add
xchg
sub
data16
fdivp
push
xchg
mov
fldcw
sub
ja
lock
inc
inc
push
mov
or
and
popf
inc
mov
push
add
push
shrb
cmc
ja
xchg
mov
sbb
shrb
add
div
mov
xchg
cmpsb
cli
xor
call
mov
daa
aas
pop
sbb
mov
idiv
jmp
cmp
jl
adc
cmp
mov
add
sub
jl
in
aad
and
nop
les
add
test
pop
fimuls
rclb
jl
data16
sub
fwait
pop
out
jo
push
inc
add
adc
lcall
shl
mov
adc
pushw
cmpsl
inc
hlt
pop
cmp
xchg
xchg
enter
pop
jo
icebp
shrb
stos
sahf
sahf
mov
arpl
mov
in
jle
add
sbb
lds
mov
pop
push
jns
cmpsl
out
sub
xor
imull
fdivr
and
sub
add
je
test
dec
sahf
xchg
testl
incl
jg
pop
pop
push
xor
xor
pushw
repz
repz
arpl
jo
push
inc
jo
add
imul
sbb
adcl
adc
dec
or
push
mov
mov
jmp
or
xchg
popf
cmp
or
jge
pop
cltd
addr16
xchg
add
mov
mov
arpl
stc
push
icebp
sbb
fiaddl
mov
repz
cmpsl
cmp
stc
xor
jp
scas
mov
mov
inc
pop
push
mov
in
shl
mov
sbb
data16
pcmpgtb
jae
pop
bound
and
push
mov
mov
rclb
pushf
mov
sbb
jnp
xchg
pop
dec
push
pusha
inc
pop
imul
mov
inc
daa
inc
jb
xor
insl
pop
outsb
jno
cmpb
push
xor
xor
stos
mov
mov
push
lcall
push
loope
shll
aas
xchg
add
loop
xchg
mov
icebp
imul
cmp
cmp
lea
in
inc
adc
mov
addr16
add
push
inc
add
push
arpl
fistpl
flds
in
inc
xchg
rcrb
adc
add
or
jae
xchg
mov
dec
imul
sbb
mov
jo,pt
int
add
lods
das
add
scas
dec
fidivl
mov
lret
enter
push
bound
or
cmpsl
sub
cmpsb
cmpsb
xchg
mov
cmp
mov
stos
cltd
dec
addr16
es
cmpsl
arpl
daa
lods
mov
cmpsl
pop
bound
sbb
pop
push
fsubl
in
mov
adc
sub
call
stos
test
dec
sub
dec
sti
out
pop
and
lcall
add
test
lcall
lcall
pop
cmp
repnz
int3
add
and
lds
and
jmp
mov
out
ret
dec
test
addr16
subl
out
push
stc
or
sbb
jno
cmp
jb
cmp
ljmp
mov
pop
push
int
xor
pushw
loopne
call
ja
xchg
mov
mov
sub
ja
jnp
testl
mov
cmpsl
mov
fists
aaa
push
sbb
outsl
inc
adc
fiaddl
fwait
test
cmp
dec
lcall
pop
pop
jae
mov
sub
xor
inc
jns
lahf
popf
das
and
xchg
nop
fwait
jecxz
fsubrs
xchg
aaa
add
insl
xchg
mov
mov
clc
test
sbb
lods
adc
sbb
and
stos
jp
mov
adc
mov
loopne
push
outsl
sbb
sbb
dec
or
push
xor
dec
sbb
jmp
nop
ja
push
ljmp
in
ss
out
or
lods
mov
aaa
or
mov
aad
bnd
xchg
add
fimuls
xchg
fdivs
and
test
movsl
sbb
imul
jle
outsb
xchg
rcll
in
pop
out
or
aaa
mov
adc
cmpsl
and
adc
and
dec
in
fsubrs
dec
jo
lock
fwait
mov
addr16
cmpsl
out
negl
cmpsl
add
push
aas
enter
adc
cs
add
mov
adc
insb
cmpsb
lock
cli
dec
nop
rol
aam
decb
xlat
repnz
cmp
test
mov
bound
sub
mov
mov
mov
gs
or
inc
mov
dec
jo
cmc
push
dec
mov
mov
hlt
addb
inc
mov
das
adc
mov
sbb
xor
mov
add
ds
adc
pop
incl
or
xchg
or
test
cmpsl
mov
repz
sub
mov
xchg
test
jb
dec
xor
push
out
cmp
dec
jecxz
lock
cmpsl
mov
out
xor
pop
add
push
mov
in
mov
cwtl
arpl
push
sbb
orb
iret
lahf
add
xor
shlb
pop
xchg
sub
xor
adc
jg
add
jecxz
sub
in
or
xor
cmp
cmp
dec
sbb
sub
fcmovnbe
inc
adc
jnp
adc
loope
mov
cmp
aaa
loope
mov
loopne
dec
aaa
loopne
sub
lds
icebp
add
jbe
push
repz
mov
xor
das
mov
mov
enter
fidivs
push
mov
adc
push
jmp
shrb
push
cmpsl
mov
