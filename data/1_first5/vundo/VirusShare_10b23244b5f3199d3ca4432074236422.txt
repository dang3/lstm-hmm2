sbb
add
jg
sbb
ret
jae
addl
cltd
sti
int
sahf
cmc
imul
xor
movsb
adc
cmpsl
jmp
leave
jg
leave
js
outsl
sbb
xchg
insb
mov
jecxz
pop
dec
icebp
mov
sub
add
cmp
nop
or
les
cmp
inc
cmp
ret
add
push
mov
aad
jp
movsl
popa
cmp
pop
subl
jle
pop
das
jno
dec
aas
cwtl
push
mov
add
cmp
loopne,pn
cs
pop
jns
cs
out
js
dec
jle
xchg
fadd
xorl
xor
cmp
xor
pop
ds
into
or
jmp
inc
or
andl
inc
jg
out
ja
pop
mov
xchg
mov
jbe
imul
inc
out
mov
inc
shlb
sahf
add
jne
cmpsb
mov
inc
hlt
fstpt
mov
push
dec
and
mov
in
fcomps
testb
addr16
jb
adc
cmpsb
stos
in
inc
mov
cmp
push
push
and
sti
mov
testb
xchg
int3
pop
das
les
inc
xor
in
xchg
sbb
sub
popf
movsb
cmp
arpl
or
imul
inc
cmp
sub
dec
mov
andl
push
sub
popf
cli
mov
mov
jne
mov
mov
repz
pop
adc
fwait
push
cs
xchg
push
xchg
add
stc
int
inc
popa
fdivrs
cs
sbb
test
add
xor
adc
inc
inc
xor
pop
popf
loope
pop
outsb
inc
fwait
js
les
push
pop
into
outsb
in
aad
out
loope
movsl
bound
cltd
lds
pop
addr16
push
popa
push
movsb
loop
fwait
xchg
push
add
pop
divb
inc
mov
mov
mov
aaa
push
outsl
cmc
clc
sub
cltd
adc
sbb
mov
jae
jns
dec
mov
popf
mov
push
add
mov
dec
ja
add
cmp
dec
cltd
out
dec
sbb
fisttpll
sbb
sbbw
adc
test
roll
lahf
jb
jb
xlat
lret
inc
mov
pusha
rclb
lods
outsb
adc
and
out
frstor
popa
inc
out
sbbl
call
pushf
repz
mov
in
cmpsb
mov
aaa
mov
xchg
icebp
in
lds
sub
pop
fisttps
xchg
adc
loopne
or
addb
dec
jmp
repnz
mov
mov
mov
stos
flds
dec
pop
pushf
fwait
or
jne
loopne
std
and
movsl
mov
mov
inc
scas
sub
divb
jmp
xchg
out
pop
push
repz
pop
or
in
mov
ret
jnp
arpl
fcomps
pop
and
and
jne
pop
mov
outsb
adc
sub
std
in
and
adc
jge
in
mov
test
popa
mov
inc
aam
push
mov
xor
test
mov
jnp
sbb
add
add
leave
fldcw
mov
iret
adc
push
mov
xchg
call
sbb
test
ljmp
or
std
nop
fistps
pop
stc
rolb
fsts
into
test
mov
mov
mov
lods
lret
adcl
in
js
cwtl
out
mov
out
pop
iret
cmp
pushf
cmp
mov
iret
shll
aad
sbbl
mov
popa
aas
repnz
mov
test
andb
mov
mov
and
repz
sahf
stos
add
or
mov
imul
sbb
mov
scas
in
gs
stos
pop
sub
std
scas
and
mov
aaa
sub
mov
iret
or
or
cmp
and
out
int3
mov
jg
mov
fnstcw
repz
mov
mov
aam
ret
lods
xor
jae
xchg
repnz
lods
outsb
cli
inc
dec
notb
add
dec
and
repnz
dec
push
dec
negb
cltd
shll
sbb
stos
lds
sub
fldl
imul
cltd
sub
pusha
faddp
sub
or
fisttpl
or
lods
mov
repz
in
xor
rol
stc
sub
sub
mov
push
out
adc
sub
loopne
dec
inc
cmc
lret
sahf
sub
mov
stc
mov
lcall
hlt
test
cmpsb
in
inc
xchg
pop
jl
xchg
sbb
cltd
aaa
pop
mov
cli
push
lock
cs
int
xchg
aas
ss
xchg
in
push
push
mov
pusha
pop
test
test
push
test
add
push
cltd
lret
mov
or
xor
inc
mov
in
inc
pop
push
pusha
lret
frstor
mov
or
mov
add
dec
jmp
out
push
das
or
subb
mov
mov
inc
lret
shll
mov
cwtl
ret
cmp
mov
insl
and
xchg
xchg
xor
pop
loop
sub
jge
fdivrl
loop
jbe
xchg
jno
xor
cltd
in
loope
xchg
sbb
xchg
or
and
mov
add
test
inc
dec
sbb
fwait
es
faddp
mov
idivl
xchg
pop
jns
sbb
outsb
xchg
cld
cmc
out
das
jb
dec
test
loope
jnp
mov
rcrb
push
fstps
les
sub
out
lods
fcmovbe
lret
push
addr16
jnp
fstps
sub
lahf
stos
sbb
xor
adc
jo
push
and
cmpsl
xchg
cmp
cmp
jbe
test
mov
addb
call
movsb
int
cmc
mulb
imul
stos
lret
jecxz
fs
push
dec
dec
in
mov
xchg
xchg
jbe
mov
xchg
inc
xchg
dec
ds
loopne
ret
cltd
push
imul
enter
ret
sub
xchg
dec
adc
dec
mov
int
test
or
cmp
cmp
pushf
sbb
jg
or
and
test
cmpsl
lret
outsb
mov
inc
inc
adc
xchg
dec
ret
jl
cmpsl
imulb
pusha
imul
add
jo
stos
sarb
sti
jne
mov
xchg
adc
push
fcoms
push
lock
push
xor
mov
push
loop
cmpsl
dec
dec
fiadds
pop
inc
sbb
ret
push
clc
ja
add
cmc
jno
aad
repz
testl
rcll
jle
aad
filds
pop
inc
out
xchg
das
jmp
repz
popf
lds
imul
aas
popf
add
repz
push
in
jns
outsl
xlat
xor
xchg
pushf
mov
js
in
mov
sbb
sub
xchg
jp
jg
aad
xchg
xchg
sbb
mov
add
mov
pop
cmpsb
jne
or
jb
fcmovb
cmpsl
mov
nop
sbb
mov
or
adcl
jbe
jns
sar
pop
push
inc
push
into
xchg
dec
sbb
popf
push
cmp
add
lock
add
std
mov
or
ljmp
xor
aaa
push
int3
pusha
jl
push
cmp
dec
stc
cmpsb
or
xchg
orl
dec
stos
cmp
faddl
push
fdivrs
ss
aad
sti
jae
mov
xor
imul
sbb
mov
stos
call
iret
sbb
cmpsl
sub
rcrb
lret
ds
cmc
sbb
lods
push
xor
adc
mov
jg
clc
lods
pop
push
pushf
dec
jae
and
xchg
lods
cli
mov
inc
push
or
adc
cld
fs
dec
pop
shrb
mov
adc
cmpsl
lret
push
cmc
jo
cmp
bound
and
mov
jge
add
jns
dec
pop
jne
cli
or
sub
dec
xchg
shlb
mov
stc
cmp
clc
xchg
inc
xor
sti
and
cltd
insb
pop
mov
out
testl
jge
adc
jne
into
xchg
stc
std
adc
jg
inc
std
arpl
dec
into
sti
mulb
loop
cmp
jbe
es
sub
dec
aad
xor
into
test
pop
pop
data16
adc
pop
mov
mov
add
lahf
add
mov
out
neg
lahf
push
out
arpl
outsl
into
sub
loope
mov
jl
in
sarl
iret
sub
in
bound
lret
lret
or
push
mov
dec
jmp
mov
push
daa
mov
add
mov
in
mov
dec
xchg
mov
or
xor
clc
pop
lea
loope
es
addl
sarl
rorl
dec
in
or
rorb
sarb
js
xor
sarl
pop
aaa
leave
mov
aas
mov
cmp
faddl
mov
out
and
arpl
lods
mov
test
lret
adc
into
popa
ljmp
outsb
addr16
dec
pop
push
dec
mov
adc
and
movsl
xor
sbb
cmp
clc
in
hlt
push
sti
jne
addr16
mov
or
testl
pop
cwtl
sub
rcpps
out
mov
hlt
mov
mov
push
pop
sub
std
mov
add
sbb
and
loopne,pt
add
mov
lcall
js
cmp
in
xchg
mov
xchg
out
cmpl
push
cmp
pop
movsb
pop
fs
outsb
cmpsl
and
jge
iret
mov
xchg
push
jge
pop
sub
test
cld
lcall
loopne
pop
mov
mov
lods
lahf
aam
loop
jmp
fidivrs
xor
mov
jecxz
mov
inc
sub
int3
in
sbb
test
xchg
cli
mov
cmp
pop
pop
push
lahf
xchg
cs
popa
shll
xchg
jp
xlat
cmpsl
sbbl
xor
fs
pop
xor
iret
mov
into
ret
rorl
mov
xor
ja,pt
push
inc
mov
and
aaa
das
popf
pop
jns
pop
xor
push
call
cltd
jg
push
or
sub
or
mov
fwait
shll
xchg
pusha
or
add
and
mov
pop
push
icebp
jg
in
lock
subl
js
cwtl
ror
sub
xor
ret
push
ljmp
loop
jl
push
push
push
cmpsl
lock
xor
push
lret
sbb
mov
fisubrl
dec
ret
addr16
ret
inc
adc
iret
mov
test
mov
push
ret
and
or
mov
sub
jbe
adc
dec
in
push
dec
adc
std
add
mov
pop
jg
rclb
lahf
ficoms
mov
dec
subl
or
xchg
push
sbbl
jecxz
push
int3
adc
cmpsb
movsb
test
rorl
dec
mulb
adc
rcl
aas
mov
idiv
xchg
or
xor
lcall
cld
imul
jb
adc
or
push
lods
cmp
out
cwtl
mov
lds
sarl
bound
stos
ret
xchg
jb
jecxz
mov
enter
inc
sarb
aam
out
movsl
cmp
dec
mov
addl
shrl
and
adc
popf
xor
stos
jmp
xchg
mov
pop
imul
movsl
xor
ss
sub
jmp
push
fsubrl
daa
andl
nop
stc
dec
push
repz
js
mov
pusha
notl
mov
insl
and
jb
mov
or
push
sbb
mov
lret
inc
add
push
sub
and
nop
xchg
pop
mov
sub
fidivl
mov
fmull
or
int3
adc
mov
int3
mov
jb
imul
lahf
mov
xor
iret
mov
int
cmp
in
inc
lock
push
fs
sarl
fidivrs
subb
inc
jnp
lahf
inc
arpl
xor
sub
std
jg
cmp
mov
add
pop
loopne
or
sbb
push
js
repnz
rorl
cwtl
movsb
dec
pusha
xlat
sub
mov
lods
lods
loope
lahf
rcrb
push
jmp
leave
pushf
loope
rorb
or
dec
add
push
inc
or
lods
out
jle
in
and
mov
cmp
andb
add
mov
xchg
cld
mov
ds
cmp
pop
insl
adc
xor
imul
mov
lret
insb
xor
push
lcall
popa
dec
lea
or
pop
pop
sahf
shl
movq
negb
sbb
cmp
pop
lret
mov
loop
adc
xor
mov
movsl
cmpsb
sbb
jno
andb
imul
pop
call
sti
dec
std
adc
cs
sub
cmpb
fdivrl
std
into
into
fs
pop
outsb
sbb
sub
addl
mov
inc
repz
call
fimull
sahf
xchg
push
add
jbe
mov
out
xor
mov
xor
insb
jmp
jg
mov
and
or
push
mulb
push
push
imul
aas
test
and
xor
sarb
mov
sti
mov
aam
dec
or
int3
frstor
mov
cmp
loop
in
xor
mov
fdivrs
cmc
or
test
ret
adc
int
test
dec
push
dec
movsl
lahf
mov
mov
add
scas
movb
xorl
cmpsl
dec
jnp
jge
mov
nop
je
ffreep
bound
sub
int
int3
lds
js
imul
mov
push
xchg
lahf
cmp
mov
dec
mov
adc
mov
jmp
and
ficompl
in
push
das
xchg
add
fadds
push
xchg
inc
xor
dec
lock
inc
push
pop
push
push
add
add
pop
jbe
ret
sub
pop
fstpt
pop
in
bound
ja
shl
repz
mov
xchg
pop
minps
sbb
and
jns
bound
jl
jo
add
mov
fwait
sbb
jns
in
add
outsb
lahf
iret
rcll
scas
lret
test
push
repz
cmp
fnstenv
push
pop
mov
jb
aam
mov
in
pop
out
xchg
push
xchg
mov
imul
xor
jecxz
push
jp
mov
lahf
fdivl
xor
jle
jecxz
fstpt
jecxz
pop
and
aas
cmp
movsb
movsl
push
pop
sbb
mov
insl
leave
mov
insl
fbld
xlat
sub
sub
ret
pop
loop
inc
mov
sub
adc
test
lods
icebp
sti
mov
xor
cwtl
cmp
and
mov
icebp
subl
cld
js
shlb
jge
sub
std
aam
adc
mov
lock
mov
shrl
fwait
mov
push
adc
add
sbb
or
ret
jae
test
push
mov
rcr
sub
mov
inc
lahf
xor
out
add
or
mov
mov
fdivs
mov
inc
jno
inc
loop
jnp
daa
cmc
outsb
sbb
stc
sbb
dec
jp
out
mov
js
jge
xor
inc
adc
sbb
stos
mov
mov
sbb
push
mov
mov
mov
push
cmc
dec
pop
cld
jb
sbb
add
ret
adc
sbb
jle
push
xchg
dec
test
stos
test
into
stc
out
push
aam
je
mov
mov
add
mov
add
pop
and
aad
sbb
incb
sbb
pop
repnz
scas
cmpsb
and
ds
push
insl
shlb
mov
pop
fdivrl
xor
cs
fildll
je
mov
int3
add
sub
mov
mov
int3
cwtl
inc
stc
repz
mov
mov
push
and
test
and
rclb
lods
movsb
mov
test
daa
push
pop
pusha
fs
cwtl
pop
jne
imul
fwait
inc
or
mov
add
sub
xchg
mov
cmp
pop
push
loop
pop
cmpb
cmp
push
stos
dec
cmpsb
dec
sub
dec
sbb
shrl
js
and
in
insl
pushf
aas
aad
gs
pushw
mov
mov
mov
shl
cli
xchg
daa
push
pop
lcall
cwtl
dec
push
mov
in
mov
pusha
out
leave
sbb
jg
cmpl
outsl
inc
dec
push
cmp
jb
popa
movsl
pusha
popf
sub
inc
and
jl
sbb
or
mov
push
jae
jne
testl
dec
dec
add
dec
hlt
jmp
andb
cmp
pusha
jno
fwait
sbb
inc
mov
les
push
pop
mov
add
mov
ds
or
jecxz,pt
jl
push
ret
fldt
mov
aad
mov
test
lds
jg
out
in
mov
push
cmpsb
lahf
cli
rep
int
cmpsl
stos
sahf
out
bound
mov
push
pop
xor
jecxz
pop
pop
fcomi
and
out
out
sub
mov
dec
jb
repz
ds
sbb
pop
adc
xor
mov
sbb
cwtl
sbb
jbe
sbb
clc
scas
into
mov
insl
fsts
push
mov
aas
cmp
add
call
imul
jno
pop
adc
push
push
aas
ds
mov
mov
pop
and
cltd
enter
push
sub
mov
and
dec
mov
icebp
jg
dec
popf
clc
mul
add
out
jg
and
sbb
xchg
push
aaa
xchg
repz
mov
insb
xchg
xor
outsb
jmp
divb
inc
int3
negl
iret
arpl
stos
daa
or
adc
in
sbb
cmp
pop
jns
push
cmovg
jge
aam
dec
add
mov
out
out
jmp
stc
adc
stos
push
test
or
xchg
push
cs
adc
leave
lods
sbb
pusha
or
mov
outsl
loope
or
addr16
add
ret
mov
neg
nop
xchg
std
cmp
testl
aaa
jno
inc
mov
or
mov
jle
int
pusha
xchg
xchg
insb
ljmp
int
xchg
outsl
push
mov
rorl
sub
sub
in
scas
addr16
sbb
push
dec
out
jmp
aas
jp
test
mov
xor
mov
nop
jge
js
into
mov
insb
jge
inc
movsb
jns
adc
test
cmp
add
and
popf
callw
insb
fs
sbb
sahf
jge
ficomps
cmpsl
add
push
mov
xor
mov
out
inc
mov
mov
stos
loop
push
loopne
jge
adc
xchg
mov
sbbl
insb
push
stos
xor
aam
inc
popa
inc
add
ss
mov
pop
jnp
ds
mov
adc
fcoml
stc
mov
xchg
or
pusha
nop
jae
mov
push
dec
mov
pop
enter
nop
add
jno
push
mov
test
adc
mov
fmuls
fdivs
pop
inc
rcll
mov
sbb
imul
movsl
rol
js
in
rclb
movb
sti
mov
outsl
loopne
sbb
jns
into
sub
or
xor
sbb
cs
aad
mov
in
push
pop
out
sub
xchg
js
lret
lcall
mov
xor
sbb
xor
leave
cpuid
es
ja
jl
dec
pop
mov
out
mov
add
std
and
add
pusha
mov
rolb
inc
jo
mov
data16
stos
sbb
fst
out
jno
xchg
es
stos
dec
int
mov
mov
stos
cmc
clc
mov
jne
mov
sub
repz
xchg
push
rorl
stos
imul
mov
pushf
outsb
shlb
fcomp
add
xor
iret
int3
ss
movsb
xor
push
jo
loop
xor
push
xchg
ss
outsb
out
ja
mov
dec
ljmp
mov
cmc
jge
scas
stos
jnp
in
jmp
cltd
push
xchg
adc
adc
xor
pop
sbb
mulb
in
xchg
sub
mov
or
xor
push
cmova
pop
hlt
sti
fistl
sub
inc
mov
mov
loop
sub
in
cld
pop
andb
in
jecxz
or
fcoms
adc
fistps
lods
jl
cli
xchg
and
jo
sbb
add
inc
decb
cmp
jae
in
sub
mov
arpl
rcrl
sarb
jo
and
enter
not
pop
ljmp
jmp
jp
icebp
lods
xor
loop
sbb
inc
pop
jo
cltd
xor
ljmp
fisubs
bound
daa
xor
aaa
add
loopne
iret
jl
idivb
fstps
aad
xchg
clc
fwait
push
addb
cltd
enter
cmp
push
jg
mov
pop
push
jae
push
xchg
mov
outsl
sar
sbb
lock
cs
push
lods
mov
or
loope
sti
pop
adc
jmp
int3
mov
cli
xor
imul
scas
jge
mov
dec
sarl
add
adc
movsb
jp
lea
fsubs
test
xchg
ret
mov
lahf
sti
ret
push
fidivrs
sahf
mov
xor
cmp
adc
into
and
push
inc
adc
push
mov
not
fs
push
sbb
xlat
mov
pop
popf
movb
addl
jae
ljmp
pop
add
inc
add
or
data16
fisubrl
jmp
xchg
imul
mov
xchg
sbb
ficompl
pop
das
jg
jbe
jg
or
or
dec
stos
dec
outsl
push
dec
adc
sbb
out
mov
jle
cmpsb
cmp
dec
inc
or
test
loop
leave
pushf
mov
dec
stos
cmp
inc
outsl
xchg
iret
inc
lods
adc
xchg
push
dec
sbb
sbb
and
pop
cld
stos
mov
addr16
rcll
mov
outsb
addr16
push
rcrl
sub
cmpsl
insl
inc
sub
scas
mov
jne
mov
pop
sbb
out
inc
cs
add
dec
mov
fdivp
cmp
or
lea
jo
repz
pop
adc
leave
mov
sbb
inc
mov
mov
push
cmp
jbe
mov
jle
pop
sub
sbb
sbb
sar
jbe
out
adc
xorl
pusha
pop
in
das
inc
mov
pop
mov
popf
out
fildl
in
outsl
mov
clc
xchg
sbb
or
xchg
out
les
adc
nop
stc
fdivl
mov
mov
js
lahf
stos
scas
aaa
mov
push
and
sub
in
mov
inc
sub
movsl
sbb
in
movsb
out
xchg
sbb
outsb
sub
movsl
sbb
xchg
and
aas
cmp
dec
call
jp
jne
fxch
popa
lahf
out
mov
xor
lret
push
lret
add
inc
cld
jns
add
and
and
sbb
mov
push
jecxz
idiv
insl
ja
adc
pop
stc
adc
cwtl
aad
fwait
ja
inc
movsl
or
dec
sub
and
call
int
inc
mov
xchg
mov
jl
dec
fidivrl
xor
les
adc
pusha
or
pop
add
push
into
mov
pushf
dec
loop
pop
sub
fstpt
jae
and
roll
cmp
out
and
push
xchg
mov
push
mov
mov
and
icebp
cwtl
push
inc
stc
sub
dec
lahf
hlt
rcr
adc
sbb
inc
xchg
lcall
fisubs
clc
dec
add
mov
fs
dec
movsb
fcom
inc
xchg
out
xor
shlb
jo
mov
push
adc
pop
adc
sub
sub
pushf
sbb
insb
aas
addr16
movsb
inc
stos
fidivrl
jo
xor
or
cmpsb
sub
or
push
push
aas
jl
push
jnp
fwait
das
cmpsl
ret
pop
jnp
mov
mov
mov
xchg
ret
aad
lcall
sar
fadds
jns,pn
push
in
pop
pop
push
jmp
mov
adc
adc
mov
in
adc
mov
mov
mov
icebp
gs
inc
jl
sub
cmp
mov
and
lret
sbb
lahf
stos
dec
lds
push
cmc
loope
loop
cwtl
cmp
testb
mov
inc
push
jge
lahf
jmp
test
cmp
jl
mov
pusha
or
dec
stos
movsb
popf
cmp
icebp
pop
xchg
xor
scas
pop
aas
fcoms
out
xchg
lcall
sbb
push
cmp
inc
out
sbb
mov
int
pop
fcmovu
or
mov
aaa
mov
jne
sbb
inc
pop
aam
add
sub
push
lea
inc
loope
pop
xchg
mov
stos
or
div
sub
int
dec
mov
mov
popf
push
out
repz
int
mov
sahf
xchg
clc
push
ds
addl
push
add
int
mov
xchg
xchg
mov
fmul
pop
cmpl
arpl
filds
rorl
enter
pop
xlat
xchg
das
pop
or
lret
inc
fldt
fisubrs
lods
xor
cmp
pusha
popa
mov
fisttpll
outsb
je
iret
mov
negl
imul
dec
pop
stc
enter
test
mov
test
stc
pop
pop
sub
xchg
mov
mov
int
sub
je
push
jecxz
cmp
orl
xor
nop
sub
xchg
imul
push
lret
int3
mov
inc
jge
mov
test
insb
insl
lret
jl
xchg
sub
sub
pop
sahf
daa
jo
inc
dec
xlat
add
loopne
or
std
inc
cmp
pop
bound
add
mov
mov
out
push
jp
das
dec
mov
inc
jl
subl
xlat
mov
jb
mov
testl
in
mov
jmp
shlb
rorb
sbb
dec
and
dec
pop
jl
cmpsb
fcmovu
outsb
cmovo
xor
xor
mov
mov
lods
xchg
mov
lock
out
pop
sub
xchg
stos
sbb
cwtl
add
inc
sub
ss
push
jno
jns
into
stos
jnp
addr16
cmp
lock
or
cmp
pop
ljmp
xor
stos
fisubs
sbb
xor
cmp
cmp
fcmove
mov
loope
das
mov
sarb
test
mov
push
mov
sar
or
adc
xchg
inc
dec
pop
cli
adc
fmuls
add
insb
inc
xchg
stos
xorb
rorb
push
fsub
sbb
inc
cwtl
mov
pop
test
leave
xchg
cltd
shrb
insb
call
lods
mul
fmul
testl
mov
aad
and
into
testb
fnstsw
add
fmull
lods
cmp
xchg
cmp
loopne
and
jp
and
js
leave
ret
push
frstor
negl
mov
fildll
jle
or
add
jae
repnz
jecxz
loop
cmp
lods
xchg
call
dec
xchg
fldcw
xchg
dec
imul
scas
mov
push
sbb
mov
xchg
xchg
in
addb
bound
adc
fmull
hlt
loope
lret
addl
repz
shlb
sbb
in
push
push
push
negl
rorl
mov
cmpsl
inc
test
adcl
sub
out
repnz
loop
xchg
adc
scas
push
in
lcall
rcr
out
cmc
adc
adc
test
sbb
cmc
mov
push
or
xchg
pop
or
mov
xchg
ret
mov
cmp
jg
insl
ret
sti
lret
and
pop
stos
icebp
sub
sub
push
xchg
mov
sub
sbb
mov
pop
shll
mov
add
mov
sbb
fwait
inc
sub
adc
fstps
ficoml
jnp
add
pop
movsb
inc
push
cmp
inc
movsb
pop
dec
ja
je
mov
jmp
mov
lahf
leave
xadd
cmc
adc
out
and
out
mov
jmp
nop
pushf
sbb
push
mov
mov
mov
jno
jno
mov
lea
push
mov
or
inc
adc
or
shll
sub
adc
sbb
jle
rorl
pop
add
xor
and
pop
ret
mov
xor
repz
adc
mov
fsubp
xor
cltd
add
push
ja
cmp
lahf
cld
cmp
adc
insb
cmc
and
or
lea
mov
and
in
push
addr16
push
or
push
push
daa
or
xchg
jg
jne
pop
ret
mov
fmul
inc
bound
movsb
fldt
mov
sti
add
or
pop
jmp
ljmp
xchg
setns
outsl
jl
xchg
fildll
push
int3
mov
fmul
insl
mov
xor
movsl
outsl
scas
in
cmp
lret
jbe
leave
mov
sbb
stos
loope
test
mov
mov
xchg
out
out
dec
pop
jg
arpl
xchg
inc
cmp
adc
lret
shll
pop
sub
jae
dec
mov
inc
daa
mov
repz
pop
shll
aam
push
es
jbe
faddl
sbb
lods
mov
stc
pop
dec
xchg
ja
aaa
cmp
pop
data16
nop
fsubs
mov
inc
movsl
out
mov
dec
aad
dec
movsl
or
testb
inc
dec
push
mov
fwait
mov
mov
test
imul
push
inc
pop
rorb
stos
pop
cmp
sub
xor
movsl
je
jne
add
pop
cwtl
notl
adc
fstpt
sti
nop
push
xchg
outsb
sbb
lods
outsb
push
out
shl
jecxz
and
add
adc
add
cmpsb
mov
shll
fisubrs
and
sti
push
out
repz
stos
dec
fstpl
fsts
movsb
call
jecxz
dec
fsubp
test
sbb
cmp
fnstcw
or
xor
scas
sub
lods
mov
push
mov
jmp
ljmp
dec
stc
dec
mov
aam
out
ljmp
testb
cmp
loop
fs
sub
cmp
repz
inc
rol
push
fisubrs
fcomi
outsb
les
jb
scas
pop
mov
sti
loopne
mov
add
aaa
call
lds
xor
insb
xor
loop
or
pusha
mov
fiaddl
int3
out
daa
sub
jae
mov
mov
imul
loop
xchg
lock
aam
ja
scas
push
fcompl
mov
xchg
sub
insl
fcomps
xchg
mov
or
mov
daa
dec
jb
cs
push
sbb
jmp
mov
cmp
nop
ret
inc
mov
push
xchg
shrl
xchg
notb
aam
pop
push
ret
outsl
cmp
das
dec
push
aam
pop
inc
inc
jp
mov
jae
fiadds
lds
or
cmp
mov
fcoml
jns
out
adc
xor
sub
mov
outsl
jge
mov
std
dec
lahf
xchg
js
pop
cs
fadd
das
shrb
mov
mov
fs
inc
in
mov
fwait
jno
lahf
repz
lods
pop
leave
out
leave
fldln2
xor
mov
jmp
adc
cmp
sbb
or
out
mov
xchg
jne
fmuls
lods
rcr
movsl
cmpsb
sbb
dec
jo
cwtl
jbe
xor
or
call
ret
minps
fadd
adcb
clc
xchg
jns
les
xchg
mov
test
enter
ret
test
shlb
mov
push
add
push
rolb
pop
sub
cmp
cld
sub
pop
sub
sbb
cld
in
popa
int
daa
shl
dec
cmp
cwtl
aas
rolb
inc
or
mov
jge
mov
js
test
cmp
cmp
adc
xchg
or
jns
jp
in
sub
xor
aam
add
aaa
add
inc
mov
pop
push
in
mov
fwait
ss
xchg
cmpsl
lods
push
out
sub
mov
mov
xor
stos
sar
repnz
mov
scas
push
jmp
jnp
or
in
pushf
out
notl
sub
dec
adc
sbbb
dec
dec
pop
jecxz
adc
push
push
xor
repnz
pop
pusha
in
mov
and
outsb
inc
pop
stc
test
imul
shlb
aam
sbb
movsb
lret
sbb
loope
jecxz
dec
lock
push
enter
scas
xlat
stc
popf
mov
mov
or
mov
mov
cmc
dec
arpl
out
pop
dec
repnz
repnz
cmpl
adc
lahf
jne
leave
jo
xchg
and
sbb
nop
inc
int3
jo
in
dec
fidivrl
out
cmp
test
sti
dec
push
dec
mov
push
loope
in
inc
cs
jae
inc
xor
push
push
mov
inc
icebp
in
pop
xchg
push
int
aaa
push
bound
mov
int
xchg
sbb
fsts
mov
sub
push
shll
jns
dec
xchg
pop
incb
subb
loopne
pusha
mov
cld
dec
lcall
les
fdivr
fcoml
out
lods
cmp
and
faddl
xchg
mov
loopne
pop
pop
sti
pop
imul
cs
out
bound
test
leave
out
jle
sub
hlt
cmpsb
out
stc
and
xchg
or
cs
xor
imul
xchg
out
das
xor
orb
aam
fldl
shlb
xchg
lods
or
das
fildll
xchg
in
pop
jnp
loopne
push
aam
mov
xor
int3
scas
or
jno
ljmp
outsl
clc
fsub
cltd
pop
xchg
sub
fisubl
imul
or
push
mov
sbb
dec
push
mov
lcall
insb
enter
mov
outsl
ja
movsl
pop
repnz
scas
int
jnp
push
sbb
push
lcall
cmp
push
add
dec
xchg
popa
xchg
ljmp
inc
fwait
push
mov
xor
and
mov
loope
jmp
jb
test
inc
cs
data16
cmp
xchg
stos
or
cmp
inc
pop
push
mov
shrb
addr16
aaa
inc
jecxz
jecxz
ds
iret
xor
repnz
pushf
add
shlb
rorb
add
xchg
ret
cmc
insb
push
inc
adc
xor
inc
loopne
roll
cmp
daa
cs
push
pop
int
stos
out
ret
mov
out
sub
je
xorb
and
hlt
test
ljmp
sbb
cmp
pop
data16
pop
and
push
sbb
sub
lods
cli
sub
and
hlt
leave
stc
inc
and
std
icebp
mov
ja
xchg
movsl
xor
mov
mov
jno
or
mov
cmp
cmp
cli
in
jge
xchg
aad
out
jae
and
hlt
push
sub
inc
in
in
lahf
pop
push
loop
das
pop
fsts
pusha
mov
lahf
or
sbb
add
leave
jno
movsb
ljmp
pusha
mov
in
cmp
xchg
sti
jg
dec
pop
test
adc
mov
movsb
xchg
jno
cli
jmp
imul
add
sbb
xor
stos
loop
jp
sub
orb
cltd
loope
mov
ror
inc
ds
sub
clc
jg
inc
repnz
clc
js
push
jl
dec
mov
xchg
sbb
std
or
mov
add
dec
fisubrl
out
mov
outsl
sub
sbb
push
aas
jecxz
push
cmp
push
and
nop
pop
lds
dec
or
sahf
daa
cmp
or
xchg
in
and
mov
stc
jb
pusha
mov
addr16
scas
addr16
dec
dec
test
shll
sub
pop
andb
push
lcall
sub
js
sti
add
leave
add
clc
js
and
push
ljmp
lds
daa
rorl
pop
aam
cmp
movsl
xor
cwtl
int3
stos
les
outsb
push
pop
push
imul
scas
hlt
and
add
loopne
mov
adc
jmp
mov
movsb
cmp
xchg
aaa
ret
cmp
sub
mov
mov
call
dec
xlat
push
dec
repz
mov
jmp
mov
xchg
pop
das
ljmp
imul
shlb
push
dec
or
psrld
cmc
cmp
and
xor
xchg
cmp
insl
in
pop
sub
nop
fstp
and
dec
scas
ficoms
sub
hlt
jo
cmp
mov
ljmp
imul
mov
ds
je
rolb
neg
icebp
sub
leave
inc
fimuls
inc
leave
scas
punpckhbw
ret
icebp
fcomi
mov
push
xchg
lock
lods
sbb
jle
scas
dec
adc
or
test
imul
std
dec
cli
sbb
xchg
xchg
or
fsubrp
loop
stos
mov
addb
or
mov
dec
push
dec
push
test
lret
push
sub
push
addr16
out
jb
lods
mov
dec
ja
lods
ret
push
xchg
mov
fmulp
xor
lock
sub
andb
xorl
insb
mov
or
fdivl
rorl
and
jl
lods
lds
in
jle
jns
fwait
inc
xor
sub
cli
mov
pop
lods
or
scas
jnp
sub
fs
ret
mov
movsb
testb
jg
inc
call
addr16
fadds
je
orb
jo
popf
push
cmp
sbb
xor
xchg
jnp
bound
pop
movsl
fsubr
das
addl
dec
loop
jmp
ret
dec
jnp
push
movsb
add
cmp
mov
mov
fwait
pop
aas
sub
pop
call
pushf
jp
mov
push
xchg
push
scas
sti
dec
xlat
lret
sbbb
add
int
sub
sbb
mov
jo
rorb
enter
sub
in
push
jp
aad
pop
lcall
das
in
mov
lcall
test
inc
fstpt
dec
mov
and
mov
in
fs
stos
inc
out
sbb
and
xchg
mov
bound
mov
xchg
pop
cmpsl
clc
dec
data16
popaw
call
cmp
bound
sbb
cmp
mov
sbb
enter
fstpl
xchg
adc
push
dec
aaa
mov
jg
call
push
insl
shrl
aas
pop
push
jne
inc
fmuls
xchg
mov
xchg
sub
adcl
fdivp
ficomps
fiadds
mov
or
xchg
imul
fistpll
popa
outsl
sub
dec
imul
insb
lods
jmp
adc
xchg
xchg
sbb
sub
out
repz
rcrb
add
fs
xorb
out
add
push
add
lods
mov
mov
scas
xor
mov
call
in
mov
mov
jmp
mov
mov
sbb
mov
les
repz
mov
or
fwait
pop
mov
inc
adc
inc
stos
nop
push
idiv
push
pop
xchg
jne
ljmp
inc
ret
mov
fwait
pop
xorl
je
xchg
xlat
cli
xchg
nop
xchg
jecxz
lea
push
mov
jns
outsl
jp
xor
mov
subl
or
cmc
push
lods
mov
aaa
push
aas
and
cmp
in
inc
daa
ret
cmp
push
insb
inc
add
sub
cmp
sub
cmpsl
fcoml
sbb
xor
ds
xor
xchg
adc
fs
jb
outsb
jg
jne
or
or
inc
sbb
mov
in
ds
ss
pusha
push
nop
xchg
mov
mov
jp
hlt
and
hlt
jmp
push
test
cmp
xor
push
mov
fdivl
or
and
adc
daa
mov
dec
add
movl
aam
pop
orl
jnp
cltd
pop
subb
stos
aaa
xchg
adc
aad
test
mov
lret
pop
js
loop
out
mov
clc
cs
jecxz
mov
adc
fidivrl
loop
jl
jno
hlt
std
sar
sub
outsb
adcl
and
mov
fisubrs
push
mov
mov
cmp
ficoms
inc
pop
dec
cmp
push
lret
enter
mov
mov
push
icebp
faddl
adcb
aam
and
mov
dec
pop
jmp
mov
dec
hlt
and
mov
movsl
jns
jle
repnz
inc
das
mov
popf
pop
nop
out
fwait
addr16
pop
inc
dec
aad
dec
pop
das
cmpsb
adc
test
cli
add
mov
mov
insl
dec
fwait
test
cmp
xchg
mov
inc
shl
mov
pop
add
mov
xchg
out
mov
xchg
sti
ljmp
fidivrl
xor
jle
pop
insl
popa
into
xor
push
pop
jno
outsb
cs
pop
sti
sub
push
mov
jne
repnz
xchg
in
inc
dec
xchg
push
add
fsts
add
cmp
add
push
sbb
dec
jmp
mov
inc
pusha
pop
and
mov
sahf
inc
clc
aas
into
pop
aaa
outsb
xchg
pushf
sbb
adc
outsl
aad
mov
xchg
dec
cmp
xchg
inc
andl
leave
jecxz
enter
or
add
pop
scas
xor
jae
dec
imull
mov
push
pop
aam
lret
out
mov
hlt
mov
and
fisttpll
fcoml
outsb
mov
adc
sub
ja
xchg
ss
aam
filds
sbb
fdiv
cltd
or
sub
xchg
out
mov
add
addl
lods
pop
mov
or
movsl
insl
dec
scas
mov
inc
aad
cmp
iret
mov
lahf
out
lods
mov
mov
les
mov
test
imul
mov
stc
in
sbb
push
not
cmp
jno
cmp
push
dec
lahf
das
fbld
int
std
cli
inc
pop
jae
int
add
cmpsb
aaa
mov
bound
xchg
mov
cmp
mov
add
cs
push
mov
sub
xchg
movsl
mov
jbe
pop
and
or
pop
daa
xchg
pop
adc
icebp
inc
aam
insl
mov
mov
out
aad
mov
je
push
stc
int
dec
jmp
loop
and
int3
xor
xchg
or
pop
sbb
push
inc
filds
insb
and
add
pop
jecxz
add
mov
shll
push
ret
mov
movsl
imull
sub
jns
scas
pop
pop
pop
push
or
mov
adc
xchg
mov
dec
pusha
sub
cmp
scas
sbb
mov
stos
clc
cmp
js
cld
loop
jp
jae
mov
fdivs
cmp
dec
stc
or
sbb
in
xor
inc
ret
loope
dec
out
data16
aas
sbb
xchg
sbb
or
mov
arpl
lret
shrl
xchg
jmp
iret
outsb
not
in
push
in
dec
inc
cld
pminub
aas
adc
push
and
in
es
mov
daa
jae
adc
and
jnp
xchg
mov
sbb
sbb
fildl
xorl
add
dec
leave
stc
cwtl
mov
sub
xchg
ds
rcrb
hlt
test
sub
xor
push
and
out
sahf
lods
sub
mov
cmc
cmp
mov
loope
int
and
pop
push
pop
andl
ret
js
inc
subl
int
xorl
loop
dec
xor
or
cli
cmp
leave
mov
pop
mov
or
mov
mov
test
fcoms
cmp
aad
mov
add
pushf
mov
and
and
add
mov
lds
inc
clc
hlt
leave
sbb
adc
cmc
clts
arpl
jno
lods
jp
aad
movsl
ja
es
xchg
loop
dec
sub
les
mov
jecxz
mov
scas
pusha
xchg
pop
pushf
scas
mov
fsubr
jmp
sbb
jo
xchg
pusha
rcrb
sub
in
push
push
jmp
sub
jecxz
sub
or
loope
add
in
jmp
test
rcl
mov
jne
sbb
lret
cs
pop
cmp
sub
pop
push
ss
dec
or
les
call
sbb
jae
mov
cmp
je
dec
clc
cmp
imul
ret
outsb
pop
dec
cmp
rorb
push
mov
and
mov
fisubl
lock
out
andl
sub
dec
adc
add
sbb
pop
pop
cmp
mov
add
sti
jp
mov
call
push
sub
stos
mov
mov
xchg
adc
call
mov
or
ret
lahf
inc
and
fists
loopne
and
jo
xor
push
adc
jno
and
pusha
jno
xchg
out
mov
repnz
aam
gs
xor
pushf
mov
push
nop
mov
dec
es
inc
add
add
xchg
jnp
sub
push
add
pop
into
sub
sbb
xchg
xor
add
sub
push
std
jecxz
or
adc
xor
adc
dec
lret
xor
xchg
inc
jae
sub
adc
xchg
loope
test
jns
adc
scas
sbb
popf
gs
js
or
mov
movsl
and
push
push
cmp
subb
cmp
arpl
fldt
fcoml
das
xorl
adc
clc
popa
fiaddl
inc
and
push
lds
adc
int3
and
inc
shl
out
lods
es
push
icebp
push
pushf
push
dec
sub
sub
cli
push
xchg
test
mov
cs
das
dec
mov
cmp
jb
mov
outsb
in
xor
call
inc
pop
jne
test
xlat
mov
out
mov
dec
test
pusha
sahf
in
fwait
push
pop
pop
xchg
or
clc
test
fs
push
dec
adc
xchg
sub
cmp
lds
ret
das
mov
mov
inc
mov
pop
arpl
scas
mov
adc
aas
pop
in
enter
xor
out
mov
shl
fs
gs
sarl
iret
loop
mov
mov
lret
add
mov
sub
sub
jge
push
rcrb
jae
cmp
lods
pop
add
bnd
push
mov
pop
test
push
enter
jne
stos
fdivl
cmp
pop
outsl
push
xor
cmp
aas
repnz
pop
test
jle
jne
sub
cmp
mov
int3
jge
adc
fs
cmpsb
loope
mov
push
and
lods
cwtl
sbbl
dec
add
pop
sub
into
mov
pop
in
push
hlt
jle
ficoms
fsubrs
mov
push
xor
xchg
pop
mov
mov
mov
sub
cmp
das
fwait
je
or
out
cli
push
int
xor
inc
add
pop
fldl
mov
dec
in
sub
or
mov
sahf
imul
xchg
popf
or
fistl
fcmovbe
jge
dec
movl
cmpsl
das
scas
pop
xor
sti
cmp
add
jmp
push
cwtl
cmp
push
aam
sbb
add
and
ret
js
xchg
adc
dec
cmp
cld
xor
es
insb
mov
lea
loop
std
cmp
jae
adc
cmpl
mov
loopne
mov
insl
test
sub
inc
xlat
pop
mov
adc
cltd
inc
imul
in
adc
inc
sub
pop
mov
fidivs
push
fprem1
sub
mov
popf
lods
pusha
mov
jo
push
rcrl
cwtl
das
jnp
clc
js
xor
jae
gs
or
stc
ret
dec
dec
push
dec
frstor
fdivl
mov
cmp
mov
movsl
or
mov
mov
or
dec
int3
cltd
mov
pop
jmp
call
and
out
bound
into
adc
dec
js
push
inc
addb
out
or
ficomps
imul
pop
mov
xchg
mov
into
pushf
adc
inc
mov
loop
add
movsb
ljmp
sub
inc
dec
divb
test
push
mov
add
ljmp
loop
stc
into
stc
lahf
dec
addl
pop
in
outsb
xor
pop
and
test
lods
xchg
in
sbb
stos
xlat
xor
dec
jge
cwtl
jmp
clc
mov
sbb
out
mov
push
rcrb
js
clc
jecxz
sbb
stos
mov
rorb
mov
ss
or
fiadds
mov
fidivrs
sbb
sbb
loope
jl
lret
xchg
mov
jge
repz
dec
popa
in
mov
repz
dec
insl
dec
cmp
inc
dec
mov
mov
add
push
push
jge
mov
rorl
add
dec
int
sub
out
cli
push
cld
xchg
or
cmp
cs
rorl
pop
add
mov
into
xchg
in
xor
scas
lret
mov
push
push
aam
and
or
mov
mov
sbb
push
lods
mov
mov
mov
xchg
das
push
ss
xlat
scas
subl
cs
cltd
sbb
xchg
into
or
pusha
mov
pop
ss
xchg
enter
lret
pop
out
mov
int3
push
pop
lea
and
cmp
jp
scas
les
or
xchg
aam
push
mov
scas
sub
mov
push
divl
aam
insb
inc
lahf
push
push
shr
and
mov
leave
cwtl
pop
mov
cmp
xor
addr16
pop
jne
sbb
or
clc
insl
gs
sti
test
daa
stos
out
loope
pusha
iret
cmp
sbb
dec
cmp
or
add
jg
stos
scas
adc
and
dec
jl
or
aas
inc
pop
mov
xchg
std
ret
adc
movsl
mov
jmp
jb
popa
xor
xchg
loopne
test
nop
out
cld
repnz
movsb
mov
sahf
mov
sub
jge
aas
add
dec
cmc
mov
jmp
inc
jl
adc
into
aam
pop
push
or
inc
sbb
adc
lcall
push
clc
cwtl
repz
pop
xchg
cltd
int3
in
sbb
dec
ljmp
mov
loopne
in
inc
push
sti
mov
or
mov
inc
icebp
xchg
and
mov
dec
cwtl
cli
add
jg
cld
loop
scas
addl
jno
push
int
in
xchg
mov
mov
add
nop
scas
mov
shlb
and
imul
mov
rcll
sub
stos
fs
leave
cmp
dec
pop
adc
inc
inc
cld
ds
jno
mov
jbe
cld
jmp
mov
mov
andb
lock
xchg
out
pop
stos
ret
and
mov
xor
insl
in
roll
pop
pop
push
stos
add
mov
fisubrl
xchg
dec
fwait
sti
out
dec
mov
loope
fwait
cmp
lock
xor
mov
cld
je
xchg
and
sar
inc
pop
es
adc
int
add
imul
jmp
dec
movsl
scas
sub
adc
dec
mov
inc
add
xchg
pop
aam
pop
sub
mov
subl
fdiv
fistl
push
testb
sbb
mov
lods
sub
jge
pop
loop
mov
icebp
out
xor
cmpsb
sti
dec
nop
cmp
and
sbb
lods
pop
je
or
inc
mov
mov
pop
cli
mov
jmp
out
sub
loop
fwait
mov
out
mov
jecxz
cld
jmp
jno
das
mov
das
popf
je
shr
in
sbb
in
xor
add
lea
scas
fildll
and
lds
rol
stos
push
mov
loope
rcll
ss
mov
mov
lds
movsb
mov
push
out
xchg
movsl
push
dec
cmpsl
cmp
sub
mov
dec
push
mov
adcb
or
add
sbb
loop
in
inc
loope
and
pop
enter
mov
xchg
cmp
push
sbb
in
and
jnp
popf
jae
xchg
dec
fnsave
into
subb
adc
loope
imul
cmpsb
jo
xor
mov
push
or
dec
pop
push
rcr
fucomip
cmp
xchg
mov
imul
xor
or
push
outsl
jp
jmp
xchg
addb
inc
fisttpl
scas
inc
xor
pop
mov
cmovge
daa
pop
mov
dec
in
loopne
dec
push
xchg
sbb
cli
or
shlb
ljmp
outsl
xor
add
sbbl
xor
loope
inc
inc
mov
mov
push
mov
fbld
repnz
mov
insb
push
popf
pop
xchg
mov
add
aam
je
iret
pop
cmc
sub
inc
xor
lds
shll
lea
fistpl
cmp
pusha
and
xor
and
cmp
push
test
insb
inc
in
mov
pop
adc
orb
dec
dec
and
lahf
jg
inc
dec
push
jmp
test
shl
repz
mov
jae
fmull
inc
jmp
jae
insb
es
sub
insl
rcl
movsb
xchg
or
clc
gs
in
push
cmc
dec
ja
mov
dec
mov
into
sub
fsub
lods
jl
mov
jecxz
es
and
insl
arpl
pusha
popa
out
adcl
call
mov
fisubrs
xor
jg
pop
and
fs
mov
mov
push
sahf
test
sbb
outsb
rolb
cltd
inc
nop
add
or
loop
xchg
inc
mov
aas
push
mov
mov
sbb
rclb
aas
xchg
inc
imull
or
testl
xor
mov
cld
fwait
es
xchg
pop
mov
add
aad
sub
jmp
dec
mov
test
sahf
aaa
cmp
sbb
fwait
cmp
pop
std
lds
push
incl
aaa
cmp
int
dec
pop
outsl
shrl
sbb
jge
dec
pop
inc
pop
pop
lea
jle
ds
cmp
and
ret
je
xchg
push
nop
xor
inc
xor
lods
pushf
nop
sbbb
pop
mov
xchg
iret
sbb
add
xchg
cmp
push
std
mov
orl
inc
xchg
cwtl
dec
test
dec
sub
enter
lahf
mov
icebp
dec
push
mov
ret
mov
rolb
jns
dec
ja
cmp
jmp
out
inc
dec
sbb
push
test
sti
or
and
pand
bnd
jge
out
stos
mov
nop
pop
xchg
mov
les
pop
xchg
lcall
jne
lcall
mov
int
or
lods
inc
and
ficompl
insb
add
jno
nop
adc
inc
xor
inc
test
fnstsw
pop
adcl
dec
out
lds
pop
jnp
mov
jbe
adc
pop
mov
jp
push
stc
mov
fisttpl
outsb
loope
mov
ja
in
or
cmpsl
add
mov
mov
ficoms
mov
fdivs
imul
scas
or
mull
fldl
xor
sbb
mov
jo
outsl
bound
fisubrs
push
push
mov
mov
push
daa
push
cltd
sti
cld
sbb
shl
mov
xchg
adc
push
and
inc
arpl
pop
push
into
jg
fimull
push
push
outsb
in
jns
and
das
xchg
or
push
test
rcll
mov
sub
int
mov
mov
shlb
cmp
mov
xchg
les
xor
fdivs
popf
roll
mov
fs
jno
pop
adc
mov
lds
push
sub
and
pop
int
je
jecxz
mov
loop
add
fstpt
out
jo
jge
sbb
daa
sub
cmp
cld
out
repnz
jae
out
mov
call
or
push
pop
ret
inc
push
mov
inc
in
imul
stc
or
sbb
jo
add
push
cs
push
pushf
cmp
or
aaa
mov
inc
or
cmp
leave
arpl
cmp
cwtl
xor
inc
sub
jnp
fidivl
test
sti
lcall
sub
test
xchg
push
push
pop
dec
mov
push
popa
mov
pop
push
imul
inc
test
aam
xchg
jmp
scas
stos
test
orl
sub
je
xor
lock
dec
idiv
mov
dec
cs
xor
insb
dec
ds
sub
inc
xchg
popf
dec
push
pop
int
ret
add
mov
push
cmpsb
mov
mov
push
lods
push
dec
jle
loop
dec
sub
lds
pusha
sub
popf
daa
movsb
aad
popa
nop
in
out
dec
or
inc
pop
mov
inc
dec
outsb
adc
cmpl
xchg
dec
sub
or
mov
push
ss
fisubl
push
mov
fs
pop
sub
or
mov
push
mov
mov
adc
aaa
jo
xor
xor
lods
call
test
insl
jae
pop
sub
mov
lock
movsb
jl
xor
inc
or
cmp
cmp
pop
pusha
or
pop
jge
add
pushf
and
div
jge
add
and
sbb
mov
movb
loopne
fistps
imul
jg
inc
cmpb
cmp
adc
shl
lcall
pop
out
sub
dec
movsb
sub
lods
mull
rorl
mov
aam
nop
jae
repz
mov
mov
cmp
mov
pop
xchg
xor
ss
sti
xchg
cmpsl
xchg
and
test
fstp
inc
adc
or
push
movsl
je
inc
add
loopne
lahf
sub
inc
sbb
in
icebp
mov
inc
outsl
cld
fdivs
jmp
fstpt
imul
cmpsl
sbb
fldenv
adc
setne
out
shrl
mov
int
mov
cmc
les
jl
add
lea
scas
sbb
bound
xor
insb
add
mov
jge
xchg
mov
test
adcl
cmp
sbb
jo
and
pop
movsb
push
push
sub
xchg
imul
imul
mov
dec
mov
sbb
pushf
sub
push
iret
mov
fisubs
ja
ds
dec
sar
mov
mov
add
std
sahf
dec
sbbb
out
adc
rclb
mov
jne
inc
scas
push
stc
xchg
mov
sarb
popa
mov
das
shll
pop
xor
inc
stos
and
xchg
pop
in
sbb
cmp
aam
out
lret
ficoms
shlb
sbb
pop
mov
adc
mov
ss
leave
scas
pop
scas
push
push
lock
jmp
push
hlt
mov
and
dec
xor
jg
adc
inc
xor
lock
push
mov
aam
outsl
xchg
test
mov
cmc
fisttpll
pop
sub
add
cmc
xchg
rcll
lret
cld
mov
insb
loopne
mov
dec
xchg
and
or
push
mov
sbb
sub
stos
lcall
inc
jb
add
jnp
fmulp
adc
lods
xchg
ss
push
sub
mov
repz
mov
xor
pusha
lcall
sbb
bound
inc
jo
loope
sub
or
test
mov
sbb
ret
push
jne
out
lock
push
add
stos
inc
add
mov
mov
xchg
pop
clc
dec
inc
insl
in
hlt
add
mov
pop
out
push
pop
mov
andb
jp
jp
and
pop
mov
or
and
mov
mov
mov
fistpll
outsl
xchg
enter
in
daa
in
adc
add
and
out
mov
xor
cwtl
xchg
or
in
jmp
sbb
inc
jns
fidivl
add
lea
or
adc
in
pop
ret
adc
lods
gs
xchg
sbb
inc
stos
mov
ret
xchg
sti
roll
sbbl
mov
inc
popf
mov
push
test
call
out
lods
sub
shl
jb
push
mov
or
pop
clc
mov
mov
cmp
jecxz,pt
cmp
jnp
inc
out
push
imul
ret
push
dec
sti
mov
add
xchg
jns
lret
mov
jecxz
xor
stos
sets
fidivrl
mov
xlat
cmp
pop
jno
pop
sbbl
data16
dec
xchg
add
lret
fcompl
dec
jne
int
js
adc
sbbb
jecxz
sub
repnz
leave
rcrl
inc
fbstp
jge
sti
mov
mov
ss
cmc
xor
rcll
repz
xchg
stc
in
dec
push
lret
jmp
icebp
cltd
popa
cmp
rorb
xchg
movsl
xor
ds
xlat
lds
das
jl
scas
cmp
call
jo
lods
jle,pt
xchg
mov
arpl
or
aaa
popa
sub
lret
je
divl
jns
repz
stos
cmp
cs
jns
scas
jno
out
xor
mov
stos
ja
pop
xor
mov
xor
lea
cwtl
adcl
jno
inc
rcr
jo
and
inc
data16
insl
add
push
jl
in
cmc
cmp
out
add
sti
inc
lea
dec
push
add
jo
inc
xor
jecxz
shrb
adc
out
mov
mov
fcomps
out
ret
xor
mov
arpl
cmp
sub
call
mov
mov
dec
sub
mov
xor
jbe
xor
inc
rcll
ljmp
sbbb
or
ss
xor
mov
mov
xchg
clc
adc
add
movsb
ds
fwait
mov
ljmp
adc
adc
jp
xchg
add
rclb
or
aaa
ja
cli
sub
push
int
cmp
jmp
out
sub
sub
sarl
xlat
sti
push
jp
and
int
and
sahf
adc
cmp
icebp
mov
jno
xchg
in
pop
into
inc
cli
mov
ja
loope
sahf
sarl
or
wbinvd
inc
popf
add
cmp
fisttpll
mov
aaa
mov
cwtl
jae
bound
and
inc
inc
pop
xor
and
jbe
xchg
sbb
out
cmc
sahf
lcall
lcall
jg
jno
lea
push
sbb
in
movsl
mov
xor
lret
xchg
and
mov
cmp
out
mov
sub
adc
testb
xor
fbld
inc
add
mov
pop
push
or
cmc
das
cmpsb
cmp
xchg
cltd
popl
pushf
ss
loop
xchg
test
jno
fs
stc
mov
sub
fstps
outsb
mov
cmp
ud0
test
sub
inc
push
test
adc
lea
mov
inc
adc
aam
sahf
jae
jne
xchg
mov
testl
mulb
inc
out
push
or
shl
into
out
mov
dec
shr
and
nop
rcr
mov
mov
movsl
addr16
pop
xchg
adc
xchg
dec
fisubs
pop
in
jecxz
loope
jnp
mov
cmp
pop
dec
and
cmp
pop
pop
int3
into
faddl
jno
out
mov
les
push
fs
push
inc
xlat
fwait
lea
jl
dec
push
lods
jl
pop
lahf
and
inc
mov
fcomps
sti
loopne
push
xor
cmp
std
jge
mov
pop
xor
xchg
dec
mov
bswap
lahf
xchg
inc
sti
or
or
add
dec
cmp
mov
adc
push
aaa
lcall
fwait
negl
addr16
sti
and
shrb
dec
mov
loope
xchg
mov
outsb
sub
pop
dec
les
xchg
push
aam
fisubl
orb
mov
xor
dec
loope
adc
cmp
mov
dec
fbstp
gs
xchg
outsl
xchg
mov
lahf
and
das
or
call
fnsetpm(287
out
rclb
sbbl
sahf
jo
push
push
pop
and
ret
repnz
or
shll
xlat
add
ret
push
outsl
xchg
loop
bswap
lret
inc
jl
adc
sbb
in
inc
or
lock
pop
xor
adc
push
les
push
adc
aaa
inc
aaa
in
sbb
jge
imul
cmp
push
clc
lods
sub
cmp
and
xor
ret
or
cmp
or
and
dec
jb
cmp
repnz
and
or
das
into
testl
cwtl
ja
test
or
mov
add
fldcw
push
sub
test
cs
arpl
test
aam
or
xchg
pushl
int3
mov
cmpsl
xchg
jmp
cmp
jp
fdivp
pop
cld
jb
mov
jbe
adc
jecxz
dec
aas
rcll
fildll
je,pt
lcall
sbb
lret
dec
adc
test
fucom
jecxz
sti
arpl
xor
add
icebp
movsb
leave
or
subb
test
movsl
daa
mov
push
stos
cmpsl
add
or
sub
clc
sub
adc
loop
hlt
cmp
call
and
insl
cmc
insb
pop
mov
es
lock
and
jns
enter
mov
sub
int
push
inc
fiadds
cmpsb
cmpl
in
xorl
insb
jle
push
sbb
loope
cli
dec
sbb
mov
mov
jl
loop
movhps
and
pop
test
in
jge
mov
gs
lahf
test
push
mov
sahf
pop
fsts
rolb
and
jmp
test
xchg
fisubs
pop
cmp
cld
xor
iret
je
mov
sub
pushf
xchg
insl
data16
lods
das
dec
jle
lock
add
nop
xchg
stos
rcrb
imul
cmc
jl
adc
cltd
xchg
xor
lcall
jmp
loop
jmp
dec
mov
cmp
adc
shll
mov
cwtl
mov
in
dec
pop
lock
xor
mov
movsb
xchg
or
fwait
and
mov
mov
inc
adc
mov
mov
jg
add
les
pop
outsl
inc
push
aam
push
and
movsl
nop
inc
rcll
std
and
xchg
xchg
rcll
jns
sbb
nop
inc
xchg
jp
or
pusha
push
dec
and
mov
inc
mov
popl
inc
dec
enter
arpl
or
test
nop
mov
pop
dec
int
jp
mov
in
push
lock
iret
jmp
add
mov
outsl
mov
adc
jge
add
shll
xchg
and
sarb
fidivl
inc
gs
shrb
cmpsb
xor
lret
dec
mov
mov
hlt
rcl
sub
bound
dec
enter
inc
push
mov
jns
lock
loop
mov
mov
repz
adc
fidivrl
jno
fs
sbb
or
jle
adc
es
enter
dec
sub
jno
xchg
mov
shr
ficomps
cmpsl
jae
mov
xchg
push
pop
test
imul
leave
push
jg
jge
stos
je
xchg
lock
cmp
in
test
rorl
and
sbb
out
inc
test
push
loope
out
mov
jl
xchg
mov
mov
stos
sub
sbb
call
or
cmp
mov
test
cmp
insb
imul
dec
adc
insl
insb
jnp
int3
lcall
out
mov
gs
fwait
rcll
push
ja
sub
in
add
into
aaa
imul
ret
loop
push
test
mov
inc
inc
fcomps
cwtl
adc
mov
mov
repnz
les
das
das
out
jnp
imul
xorl
cmc
addr16
popa
mov
lods
lcall
pop
dec
xchg
sarl
enter
loope
jp
aam
loope
jbe
add
push
shlb
sarl
mov
jg
xchg
insl
mov
sar
repz
cmpsb
jge
xor
dec
rorl
mov
mov
mov
adc
xor
jns
mov
mov
mov
loope
lret
mov
popa
popf
mov
inc
movb
xchg
loope
test
add
fcmovbe
stc
push
mov
inc
xchg
dec
cld
mov
sub
ds
push
cmp
fcompl
inc
add
xor
decb
cwtl
repnz
jle
push
xor
pop
pop
sub
fcmovu
jnp
cli
fldt
mov
cmp
fsubrp
mov
into
cmp
shlb
cs
ds
sarb
jp
push
adc
sbb
clc
xlat
mov
sub
es
or
jecxz
scas
out
add
in
scas
pop
cmpsl
addr16
addr16
iret
cwtl
call
jnp
adc
jns
xor
popa
sahf
dec
idivb
push
insl
stc
scas
cltd
jns
or
add
jnp
into
and
xor
mov
add
cmp
jmp
jg
dec
aas
sti
dec
xchg
cmpl
adc
inc
in
jp
mov
inc
stos
add
dec
out
or
mov
pushf
sbb
addb
mov
push
clc
aas
rcrb
imul
cli
add
lret
push
add
jnp
insl
lods
gs
sub
pop
rep
aaa
ljmp
loop
jl
stc
mov
shrb
pop
pop
js
sbb
xchg
xchg
leave
mov
out
push
out
lds
mov
imul
or
fdivr
xor
xor
pop
xor
ret
testl
pushf
jae
aad
lret
sub
and
cltd
aad
jns
xchg
dec
into
lods
cmc
dec
nop
xchg
ljmp
sub
je
add
popa
mov
cmpsl
fisttps
insl
jg
int
push
xchg
push
dec
cmp
shll
or
cmp
fdivl
or
hlt
inc
ffree
loopnew
push
jp
mov
and
adc
push
ja
shlb
and
jnp
pop
mov
push
sub
jle
jb
outsl
aas
mov
movb
out
add
repnz
pop
das
ret
sbb
or
mov
adc
int
or
out
mov
ret
fdiv
dec
call
mov
and
jae
jbe
jecxz
jb
and
mov
aad
xchg
loope
cli
mov
add
pop
jle
or
ljmp
test
call
mov
lea
fs
add
jmp
and
lcall
fistpl
jmp
mov
dec
lds
dec
sbb
push
popa
mov
add
jbe
mov
pop
test
sub
push
pop
hlt
scas
or
scas
call
rorb
negb
or
pop
in
xor
subb
imull
xchg
pop
roll
shlb
lock
adcb
imul
mov
push
pop
lods
xor
shr
gs
andb
sahf
or
cltd
sbb
lret
shlb
dec
stos
jp
jg
fstps
push
lret
cmp
mov
mov
icebp
add
out
leave
ss
mov
pop
mov
cmp
push
push
lcall
in
ljmp
mov
dec
xor
sarb
xchg
sbb
lea
push
ja
mov
nop
push
addr16
sub
xor
add
clc
pop
fnstcw
mov
int
xchg
stos
out
movsb
in
mov
mov
mov
insl
cmp
popa
cmp
icebp
insb
mov
mov
sti
push
and
push
adcl
sbb
enter
mov
lret
jmp
test
mov
mov
orb
and
shl
movsb
add
sbb
arpl
stos
dec
subb
jmp
jecxz
sar
adc
orl
and
in
sub
inc
loopne
lds
outsl
inc
rol
fs
push
sbb
mov
xchg
lahf
mov
mov
arpl
shll
cmpsl
mov
outsb
xchg
mov
cmp
rcl
int3
jne
sub
cmpsb
xor
je
sti
add
add
pop
push
hlt
sti
jge
push
push
int3
xchg
and
subl
jmp
lock
mov
ljmp
sbb
ds
cmp
or
jns
mov
cwtl
mov
fsts
stc
cs
adc
sbb
insb
sub
rcrl
outsl
ds
dec
outsl
call
sbb
stos
jl
ja
mov
lods
xchg
xchg
dec
das
and
add
test
in
cmp
dec
pusha
mov
pop
add
fisttpll
test
in
xor
add
call
push
or
sub
outsl
bound
adc
xlat
jne
sub
ss
pop
cmp
push
sbbb
ljmp
outsb
adc
mov
dec
inc
mov
push
lods
ds
aam
mov
into
xor
icebp
shrb
outsb
imul
gs
into
add
or
gs
lea
pop
inc
or
mov
cli
inc
shll
test
imull
int3
sub
and
sbb
mov
cmp
mov
dec
scas
xchg
in
out
sub
cwtl
insl
dec
stc
imul
jbe
pop
mov
lret
hlt
push
cmp
sbb
mov
mov
mov
sti
inc
ja
mov
fnstsw
mov
lret
adc
shlb
pop
add
xor
roll
mov
lahf
fbld
cltd
dec
cmp
add
inc
mov
addr16
cmp
and
test
orb
ficoml
dec
inc
lret
inc
cmp
cmp
outsb
lods
jns
sbb
push
mov
repz
or
mov
inc
xchg
movl
popf
mov
repnz
sub
bound
pop
int
xor
popa
xor
aad
pop
test
cmp
inc
imul
sub
aam
mov
mov
mov
ret
sbb
jmp
mov
and
es
mov
mov
fcomps
xchg
sarb
fisttps
test
shld
cmp
in
in
add
add
arpl
movsl
push
popa
xchg
sub
pop
adc
push
leave
out
ljmp
dec
insl
fwait
pop
gs
imul
ret
sbb
fcmovbe
mov
repz
xor
ss
pop
out
hlt
ja
adc
push
push
int3
cmc
daa
and
adc
push
out
loopne
or
mov
shrl
addr16
pop
ret
push
loope
cmp
pushf
xor
xchg
add
mov
mov
fistpl
pop
pop
push
add
in
mov
repz
mov
add
cltd
mov
jl
mov
sti
pop
aas
icebp
mov
pusha
push
sbb
inc
cmp
lock
movsb
sub
bound
enter
popa
inc
fistpl
jns
adc
sbb
jg
lcall
and
pop
mov
jno
repnz
stos
rorl
test
inc
imul
and
mov
push
lock
jne
call
inc
out
pop
sbb
pop
sub
cmpl
or
xchg
lret
sahf
xchg
fsubl
xchg
or
mov
mov
ljmp
outsl
xchg
out
es
test
cmp
cmp
in
movsl
pop
call
mul
cs
in
cmpsb
inc
mov
call
js
repz
iret
cmc
add
mov
pop
stc
sub
xchg
inc
sub
sub
and
xchg
and
ret
nop
je
or
outsl
dec
ds
xor
mov
mov
outsl
or
xchg
in
mov
mov
cltd
std
xor
inc
loop
mov
cmp
stc
aas
in
scas
clc
and
std
rorb
andnps
sub
fidivl
push
jnp
mov
mov
xor
sub
fcomps
sbbb
nop
and
mov
lods
sbb
mov
mov
stos
jne
sbb
jnp
xor
aad
add
ja
imul
or
movsb
rcr
adc
cmp
and
lahf
and
jbe
xchg
mov
icebp
add
nop
sbb
inc
push
call
add
aas
inc
mulb
mov
jge
sbb
aad
pop
pushf
pop
subl
push
xchg
mov
inc
sahf
fstps
sbbb
and
mov
xchg
hlt
fs
add
lods
dec
sub
test
xor
imul
push
shlb
adc
repz
scas
fisubrl
jno
sbb
sub
lods
cmp
cmc
out
jno
pop
andl
lcall
scas
arpl
aas
xchg
sahf
push
sub
sbbb
push
mov
daa
pop
adc
rclb
loopne
cld
jge
std
out
jo
sbb
jbe
out
mov
xchg
xor
in
adc
push
push
imul
or
pop
jbe
fistl
addr16
cmp
add
xchg
jg
movsl
mov
mov
aad
sub
mov
fldl
inc
pop
in
lret
fst
xor
xchg
jecxz
mov
or
sbb
cmc
or
lods
imul
dec
loopne
and
xor
jge
pop
adc
arpl
lods
cs
or
xchg
inc
or
ss
and
inc
or
jno
xchg
xchg
out
jo
sub
pop
push
cmp
aad
sbb
push
movsb
sub
pop
jno
cmp
jae
pushf
mov
mov
jle
mov
fwait
sbbb
dec
sarb
test
push
add
add
and
xor
cmp
pop
mov
pushf
pavgw
xchg
push
int3
inc
jno
inc
push
ss
mov
jge
imul
pop
mov
jb
xlat
dec
xchg
subl
into
sbb
pop
pop
dec
cmpsl
test
push
adc
add
ja
sub
pushl
jno
out
inc
enter
in
sbb
mov
dec
out
pop
mov
pop
or
stc
add
pop
lea
jecxz
inc
inc
test
cli
mov
add
push
loop
jle
jo
pusha
and
call
sub
mov
jecxz
movsb
mov
in
scas
inc
sbb
pop
arpl
ret
dec
bound
hlt
pop
lret
push
popa
aad
cltd
sbb
mov
test
pop
xchg
pop
mov
ret
inc
test
stc
adc
js
ds
ficompl
push
pop
dec
icebp
sbb
cmpl
cmp
pop
mov
fwait
dec
out
xchg
mov
or
jmp
add
ljmp
sbb
shl
mov
inc
lods
pop
dec
and
outsl
cmc
jmp
idiv
push
lock
pop
mov
mov
add
sahf
push
movsb
mov
sbb
iret
sub
sbb
jno
push
ret
sub
pop
sub
bound
test
mov
adc
mov
popf
cmp
rcrb
mov
cmp
push
dec
push
sbb
out
and
xchg
cmp
mov
push
or
test
push
dec
mov
xchg
cmpsb
pop
inc
imul
shll
and
mov
fwait
mov
xchg
insl
lret
scas
shrb
jecxz
mov
push
push
enter
lea
cmp
in
sub
push
fabs
movsb
insb
or
xor
ffreep
xchg
or
ljmp
lea
mov
inc
jle
xchg
movl
or
mov
lret
hlt
pop
xchg
in
xchg
iret
add
out
xchg
and
inc
and
push
test
mov
rcll
add
add
test
xlat
mov
inc
dec
in
pop
es
mov
dec
shrl
leave
or
rol
je
out
cwtl
push
outsl
jns
and
pop
cmp
shl
jno
adc
sbb
and
cltd
jne
cmp
or
dec
in
xor
jae
mov
xlat
push
inc
addr16
dec
in
jb
popa
xor
out
fs
mov
aaa
in
xor
and
sbb
jns
in
push
mov
imul
lea
xchg
dec
or
out
imul
add
mov
out
dec
add
call
popf
sbb
test
mull
jmp
idivb
xchg
movl
dec
stos
sbb
mov
cmpb
mov
and
outsb
and
cld
sahf
xor
call
ds
ds
inc
add
ret
xor
push
imul
cmp
leave
jns
mov
lret
add
leave
call
jmp
add
xchg
push
loop
jns
dec
and
fisubrl
rol
popf
xor
xchg
ja
pop
cmc
mov
lret
push
pop
sbb
dec
xchg
sbb
xor
cmp
call
sbb
sbb
mov
xlat
cmp
jge
ret
lret
xor
test
insl
push
inc
push
cmpl
mov
inc
jne
in
xchg
pop
inc
rolb
aam
out
jp
sub
fsubr
mov
adcb
mov
push
lret
out
cmp
ja
push
mov
cmp
jp
pushl
cmp
hlt
and
and
sti
pusha
aad
fsubrs
mov
xor
pop
lea
out
in
ss
div
mov
cmp
xchg
jge
les
mov
lods
inc
mov
jb
dec
cmc
ljmp
push
ficoms
ljmp
cwtl
and
jns
in
gs
xor
add
push
scas
cmp
fs
fistpl
pop
push
insl
push
or
pop
inc
cmp
cmp
subl
cmpsl
lret
and
lea
sti
push
pop
inc
fdivrs
push
add
mov
ror
mov
out
adc
test
stos
jne
stc
push
xchg
cmp
lods
dec
repz
stos
inc
pop
aas
lret
mov
push
popf
mov
adc
dec
adc
pop
cmp
mov
xchg
push
lock
das
push
cmp
aaa
jne
and
jmp
aas
into
jmp
push
dec
rcll
push
int3
or
dec
sbb
cmpsl
push
js
xor
mov
inc
add
insb
clc
movsb
mov
mov
cld
mov
aaa
popa
popf
cs
sbb
xor
add
mov
inc
mov
jl
and
test
mov
mov
sbb
push
lahf
insb
fimull
ja
aas
dec
movsl
xchg
sbb
inc
lret
xor
xor
data16
lretw
mov
fcompl
ret
out
jb
push
lods
es
pop
ss
std
jge
outsl
or
inc
pop
dec
and
push
or
mov
cs
ret
fnstsw
sarl
add
xor
out
popf
mov
inc
add
mov
adc
mov
rorl
shll
pop
stos
popa
dec
mov
adc
out
insb
fdivs
dec
pop
call
adc
xor
dec
stc
lods
mov
pop
outsb
xchg
jmp
sub
aad
mov
and
cmp
sahf
xor
mov
mov
jno
jnp
pop
sbb
popf
xor
sub
mov
sub
lods
fnstcw
lret
push
inc
lcall
fcoml
sbb
mov
mov
adc
enter
lea
movl
lock
mov
cltd
jbe
mov
out
fisttpll
hlt
out
into
xor
xor
aaa
loopne
mov
push
mov
mov
inc
or
insb
xorl
ljmp
cltd
dec
gs
mov
or
pop
cmp
push
call
jae
dec
xorb
add
dec
dec
lret
xor
out
xlat
sar
es
pop
test
mov
cmp
inc
inc
outsb
sbb
push
orl
aas
adc
or
je
mov
outsb
mov
push
pop
in
idivl
out
add
pop
loopne
xchg
addl
cli
pop
dec
pop
addl
mov
mov
scas
imul
aad
inc
sub
inc
hlt
push
mov
xchg
pop
leave
outsb
xchg
mov
fnstsw
xchg
shrl
ja
jno
dec
into
test
enter
jbe
pop
xchg
push
cmp
stos
and
in
or
xor
es
nop
stos
jp
loopne
loope
inc
pop
sbb
iret
or
sub
test
in
lods
xor
cwtl
les
xchg
lea
jo
sti
pop
push
out
lock
testb
insb
loopne
xchg
mov
pushf
mov
inc
mov
xor
outsl
dec
mov
cmp
adc
sahf
xor
ret
xlat
insb
cmp
fists
jne
lret
inc
lods
jne
pop
lods
xchg
fst
cmp
jns
in
loopne
daa
jp
inc
movsl
sub
int3
inc
out
fisttpl
out
movd
rcr
ss
xchg
pop
out
cmc
je
in
xchg
or
dec
scas
cs
scas
movsl
pop
es
pop
lahf
aas
jp
cmc
sbb
jo
iret
dec
in
mov
outsl
das
hlt
leave
ss
xor
jg
cmp
loopne
add
mov
pop
mov
sub
mov
mov
pslld
call
dec
lock
repnz
fptan
inc
sub
iret
in
mov
sahf
into
pop
loopne
push
ds
cmp
test
jns
incb
push
mov
and
loope
rolb
fbld
jne
and
call
mov
xor
in
and
add
inc
cltd
pop
repz
adc
fwait
movl
daa
mov
add
lds
add
push
cmp
andl
nop
push
jecxz
jmp
jno
sub
add
jl
xor
pop
lods
mov
push
mov
rcrl
push
outsl
dec
sub
scas
adcb
aaa
lahf
sbb
ss
mov
movl
pop
int
mov
cs
adc
shlb
sbb
pop
sub
shl
add
stos
rorl
xor
push
jae
pop
jno
inc
rol
or
xor
fs
stos
out
and
shll
aam
je
mov
sub
lods
cld
int3
iret
test
mov
xchg
outsl
push
aam
enter
add
iret
and
les
aad
adcb
inc
sbb
sub
mov
cmp
adc
hlt
push
and
cld
fnstcw
out
in
and
jmp
and
in
stos
ss
sbb
jae
mov
push
out
cmp
pop
sbb
sbb
addb
xor
ret
fcomps
ret
xchg
movsl
inc
aaa
mov
fwait
clc
loopne
int
or
les
out
xor
aas
insb
pop
and
push
repnz
or
repnz
nop
in
inc
sbb
ror
sub
ds
cs
cmp
jg
and
data16
lcall
mov
rcrb
rclb
xchg
inc
sbb
sbb
dec
ljmp
sbb
add
imul
push
clc
js
mov
leave
pop
dec
das
adc
nop
sbb
dec
pop
je
pmaxub
or
cmp
push
cmp
dec
sbb
sahf
dec
jp
icebp
push
repz
push
push
mov
push
in
outsb
repnz
int3
pop
orl
ds
or
lea
rorb
pop
dec
imul
scas
xchg
and
push
and
mov
testb
pushf
and
jne
lcall
lds
scas
enter
jmp
mov
add
push
aas
xchg
and
sbb
xchg
add
fs
cs
adc
pop
test
push
push
int
cs
mov
mov
dec
sbb
mov
push
jbe
adc
jno
add
repz
rclb
scas
mov
lds
stos
inc
ficomps
mov
sub
push
adc
shrb
in
clc
xchg
pop
mov
mov
mov
or
mov
pop
or
lods
leave
adc
outsl
out
cmp
bound
push
pushf
dec
mov
ret
mov
adc
mov
repnz
push
inc
sub
add
xor
or
aaa
out
or
pop
xlat
sub
jns
push
enter
fisubrs
pop
cmp
cmp
movsl
ja
cmp
mov
pop
jecxz
lret
pop
adc
dec
dec
imul
in
push
sbb
negb
scas
dec
xor
in
push
pop
mov
nop
ja
mov
xchg
pop
popf
pop
clc
enter
sti
fcmovu
mov
rorl
cmp
or
jnp
nop
hlt
ja
mov
pusha
pop
repnz
jmp
leave
xor
ficoms
testb
shrl
push
xchg
jmp
cmp
dec
test
dec
insl
call
and
sub
cmpsl
push
gs
pop
stc
popa
stc
lcall
cld
push
mov
mov
shrl
mov
pop
adc
mov
cld
adc
xchg
pop
dec
dec
xor
pop
call
insl
lock
ljmp
mov
xchg
in
add
nop
xor
stos
inc
add
ret
pop
cs
mov
fs
fwait
adc
cmp
lret
xchg
rcll
stos
cwtl
cmpsl
push
lret
xor
jp
push
jle
mov
adcb
jp
lea
mov
inc
fmuls
fs
mov
push
testl
fldl
and
xchg
cmp
add
xlat
fisttps
in
aas
inc
dec
push
cs
cmc
mov
inc
int3
lret
jae
dec
cmpsl
mov
aaa
pop
into
jne
sub
mov
popa
sahf
inc
pop
pop
cmp
ljmp
or
shr
rcr
loopne
push
out
cltd
je
test
ss
scas
mov
jb
mov
adc
paddb
popf
inc
subb
push
int
mov
jne
ret
fcompl
adc
rorl
inc
jb
mov
roll
lret
daa
push
int3
clc
sahf
cwtl
xor
or
push
or
jnp
gs
popa
mov
popa
inc
sub
stos
inc
or
clc
icebp
xor
and
jne
or
pop
xchg
je
repz
adc
hlt
fnsave
cld
movsb
inc
mov
int
cmc
daa
cwtl
mov
push
arpl
ret
and
jae
int3
pop
and
ljmp
cmpl
xor
imul
sub
lods
push
xor
dec
insl
pop
popa
jecxz
dec
lea
mov
mov
sub
mov
add
cld
push
adc
adc
fimull
mov
in
orl
rcrb
icebp
scas
sub
sub
xchg
mov
or
fwait
aam
rcl
stc
loopne
movsl
adc
es
loop
jo
dec
ret
xlat
popa
in
aaa
insb
fidivrs
mov
cs
inc
sahf
jecxz
je
paddq
mov
fsubrl
cmc
lods
je
cmp
bound
xchg
pop
cltd
xchg
int3
or
icebp
inc
sahf
inc
xor
mov
ljmp
or
push
pop
mov
xchg
ret
pop
dec
idivl
xor
or
pop
out
andl
pop
xor
inc
fistpll
sahf
add
popf
sub
inc
sar
xchg
hlt
inc
fcmovu
sbb
pop
sbb
fldcw
mov
hlt
jo
bound
cmp
pop
test
adc
pop
lock
jne
jne
dec
aas
outsb
cltd
cmp
cltd
jne
adc
mov
pop
iret
jb
cwtl
and
jp
add
lock
mov
pop
push
cwtl
andl
cmp
mov
mov
add
dec
mov
lcall
inc
add
scas
decl
mov
ja
or
push
daa
xlat
lea
add
xor
inc
lret
cmpsb
mov
jae
add
dec
jbe
push
repnz
ljmp
and
bound
mov
mul
dec
xor
pusha
inc
imul
adc
or
cmp
flds
sarb
push
movsl
enter
insl
fcmovb
or
fst
in
xor
mov
inc
adc
push
lcall
ljmp
addl
xor
push
mov
mov
or
rcr
cltd
and
dec
adc
or
leave
lds
pop
subb
xchg
fstpl
xchg
inc
les
loopne
rclb
icebp
adc
cmp
in
xlat
xchg
test
dec
mov
mov
cld
fidivl
sbb
xlat
dec
fdivrs
icebp
ficomps
aam
and
push
repnz
cmpsl
jge
nop
jp
cmpsl
xor
ficompl
dec
sub
fdivl
and
test
cmpsl
xchg
aaa
xor
fsubl
push
mov
mov
or
sub
pop
pop
ds
arpl
jle
mov
shrl
js
je
decl
les
jno
aaa
jmp
sti
mov
flds
rcll
sti
popf
adc
inc
shl
xor
or
js
test
sbb
jmp
sbb
dec
jl
dec
inc
mov
xorl
out
mov
scas
in
inc
pop
jo
data16
shl
cmpsl
out
push
push
stos
sub
sub
xchg
loop
sub
jo
add
mov
or
mov
stos
push
insb
imul
cmpsl
ret
aam
out
mov
dec
bound
jp
mov
xor
mov
repnz
fsts
test
lods
mov
xchg
mov
mov
inc
mov
mov
push
inc
add
adc
loop
lcall
jmp
xchg
jge
data16
ret
andl
insl
push
mov
push
cld
sbb
inc
dec
sub
decb
inc
sbb
add
ds
fsubrs
jne
mov
lcall
mov
loop
xor
mov
xchg
insl
pusha
cmpsb
push
cmpsl
test
mov
rcll
aaa
call
ja
repz
imul
and
inc
xor
sbb
pop
lret
imul
cld
dec
iret
and
or
jp
mov
sbb
insb
pop
jge
add
loope
xor
ret
mov
insb
push
push
shll
xor
adc
xchg
test
pop
push
test
dec
nop
dec
inc
push
filds
cwtl
inc
mov
sub
inc
xchg
pushf
adc
pushf
test
or
iret
adc
outsb
addl
cs
sub
aam
sti
out
push
insb
pop
dec
lock
xchg
mov
cli
mov
test
pmulhuw
out
cmpl
lcall
sbb
sub
lcall
repnz
add
popf
test
aas
push
negl
add
pop
xor
aam
mov
hlt
mov
push
xchg
jo
inc
dec
and
stc
jne
xchg
mov
cmp
ret
test
mov
mov
jp
add
mov
mov
add
jg
sbb
rorb
mov
dec
roll
cmp
loope
fs
cmp
mov
adc
xchg
std
addr16
mov
jecxz
in
add
jno
roll
mov
sub
inc
icebp
mov
sbb
stos
mov
mov
stc
add
out
lret
push
jnp
sbb
ss
jge
xchg
mov
gs
add
aam
mov
aaa
popf
repnz
in
clc
jg
xchg
js
mov
xor
jae
inc
loop
mov
dec
flds
fcompl
jbe
add
mov
cmp
pop
fmuls
cmp
fisttpl
dec
clc
sti
pop
aad
lds
mov
arpl
sub
or
pop
push
dec
ret
cmp
icebp
mov
add
sbb
repz
dec
call
loopne
adc
sbb
test
int
mov
ds
ja
das
daa
adc
pop
pop
rolb
mulb
cmp
push
gs
push
out
gs
dec
iret
insb
xor
lret
adc
sarl
dec
inc
cmp
mov
or
mov
or
push
test
mov
cmp
push
or
inc
mov
lock
mov
loopne
adcl
loop
mov
pop
loope
ret
add
xor
addr16
or
ljmp
jb
xchg
outsl
imul
jbe
mov
icebp
sbb
jp
or
pop
popf
xor
icebp
fsubrl
add
rol
jnp
sbb
ds
mov
insb
je
repnz
jecxz
clc
dec
ds
sbb
lock
in
inc
push
cli
js
clc
cli
popf
dec
fisubrs
xchg
mov
inc
push
jle
call
inc
test
or
aam
push
push
and
std
pop
mov
std
aam
adc
in
and
adc
pop
sbb
xor
and
cltd
arpl
cmp
jmp
push
dec
and
cwtl
js
mov
nop
repnz
data16
push
sub
cmp
repnz
mov
insb
xchg
or
dec
sarb
loop
add
cmp
movsl
popl
inc
fs
xor
sarl
mov
test
mov
aam
lret
xchg
sbb
addr16
out
mov
test
inc
dec
pop
push
sbb
fcomip
inc
repnz
or
enter
push
rcrb
push
lahf
mov
sbb
push
pop
jmp
xor
lea
and
xchg
mov
dec
movsl
cmp
stos
mov
out
xor
loopne
fmul
ljmp
je
das
inc
scas
sar
add
scas
or
cwtl
xchg
inc
ficoml
add
mov
sbb
int3
scas
mov
sub
repnz
aas
adc
mov
mov
cmc
mov
out
lcall
xchg
xor
dec
rorb
dec
movsb
outsl
push
js
jmp
xlat
sarl
cmp
cwtl
imul
in
sbb
xor
adc
jb
adc
inc
xchg
jecxz
fdiv
cmp
or
and
xlat
sub
pop
les
add
jecxz
inc
pop
out
jge
jb
out
inc
sahf
mov
ret
add
out
and
pop
jp
roll
dec
int
add
pop
out
jmp
outsl
hlt
int
pop
mov
pop
in
mov
push
pop
and
add
cmpsb
daa
idivb
cmp
je
ljmp
mov
sbb
sbb
ja
xchg
sbb
jmp
loop
inc
stos
and
jb
add
in
pop
mov
inc
data16
mov
jae
jae
pop
mov
jnp
fwait
sbb
mov
dec
push
xchg
insl
sub
xorb
leave
add
shrb
adc
loope
sti
push
daa
lds
nop
push
add
add
in
daa
std
sub
pop
repnz
sti
loope
data16
xor
lds
xchg
lret
and
ljmp
add
xorb
jbe
xchg
jno
push
or
mov
add
push
xchg
ret
ret
imul
adc
cmpsl
sti
or
push
call
iret
xor
sub
cmpsl
loop
pop
in
push
mov
and
dec
out
pop
lea
pop
imul
ja
fadds
sbb
dec
and
push
sbb
xchg
sbb
dec
popf
jae
movsl
pop
push
leave
in
movsb
jle
ret
jecxz
sbb
add
mov
xchg
punpckhdq
std
test
es
popf
aaa
mov
inc
popf
pop
fs
popf
xchg
icebp
sbb
sbb
fwait
and
sbb
push
dec
fs
orl
xchg
adc
jg
lock
xchg
nopl
xor
push
push
enter
mov
xlat
add
jle
dec
in
add
test
pop
out
mov
aad
jne
sti
and
add
fbld
andl
add
mov
mov
jp
sbbb
cmpsb
xorb
jecxz
mov
mov
flds
pusha
andl
dec
mov
insl
cmpsl
mov
loop
xor
push
jmp
sar
push
push
lret
inc
flds
lock
ret
xor
decb
das
sub
mov
sbb
popa
jmp
add
inc
sbb
pop
cmpsl
adc
test
movsl
insl
and
inc
pop
inc
jno
mov
call
pop
test
sub
mov
lahf
arpl
xchg
fstl
jbe
cmp
fs
xchg
out
shlb
dec
cmpsb
adc
inc
outsb
sarl
sub
adc
in
mov
dec
mov
xlat
pop
pop
cld
xlat
dec
fmull
test
je
push
adc
inc
sub
lcall
pop
add
stos
push
lds
movsl
xor
sub
jge
in
mov
sub
or
test
nop
adc
test
popa
mov
lods
ret
and
or
mov
cmp
andb
gs
and
adc
sbb
mov
jl
loop
dec
jmp
push
int
jae
cs
outsl
dec
sub
mov
je
inc
xor
dec
clc
cwtl
push
test
clc
push
lock
mov
repnz
fwait
or
jns
xor
mov
pop
rolb
add
mov
add
lret
in
add
mov
mov
icebp
inc
sub
adc
clc
hlt
scas
loopne
jp
loope
roll
int
leave
int3
pusha
inc
cmp
sub
cld
ret
subb
loopne
xchg
movsb
pusha
rorb
cmp
mov
stos
insb
test
push
gs
in
ja
xlat
pushf
jp
in
push
or
sub
arpl
sbbl
mov
cmc
add
pop
jge
xchg
pop
and
and
adc
loop
iret
les
pop
jle
pop
inc
lahf
pop
lods
push
jp
sub
pushf
dec
cld
outsb
xchg
xor
xor
js
sub
fwait
adc
mov
or
aad
mov
mov
shr
push
push
shlb
mov
ret
jnp
cmp
sub
lods
repz
das
xor
push
jns
xchg
out
cmp
mov
jnp
add
xor
leave
xchg
ss
mov
jg
push
push
mov
int3
inc
push
div
push
mov
xor
lods
hlt
push
mov
stos
sahf
push
xchg
xchg
aad
adc
pop
jl
mov
inc
inc
jg
jmp
add
sub
ds
and
fwait
scas
faddl
sahf
mov
push
jmp
xor
xor
out
jp
dec
popf
mov
xchg
in
nop
bound
mov
testl
inc
or
lds
or
je
rcll
outsb
aad
shrb
jl
in
ljmp
aas
mov
jge
push
sbb
lret
mov
rol
dec
mov
roll
imul
jmp
out
xchg
push
popa
add
cwtl
adc
adc
imul
mov
sub
cltd
sbb
sbb
in
jae
ds
mov
mov
aad
sub
fwait
les
xchg
xor
dec
and
daa
cmp
add
jne
cltd
dec
pop
adc
div
sbb
pop
dec
push
sbb
mov
or
adc
sbb
push
sbb
xchg
test
les
ret
aam
adc
add
cmpsl
shrl
sub
pop
int3
mov
jp
or
mov
and
jmpw
cmp
mov
loopne
push
xchg
test
out
mov
inc
pusha
nop
lret
xor
mov
xchg
sub
mov
cwtl
mov
jg
cmp
ds
imul
aam
push
adc
sub
fldt
xor
dec
mov
mov
test
jb
stos
lcall
sti
jmp
dec
and
push
xchg
icebp
cmp
jmp
sarl
push
add
rorl
pop
dec
or
jo
imul
imul
push
mov
decl
sbb
scas
aaa
jns
jae
mov
jmp
mov
mov
sar
mov
stos
icebp
aas
xor
jbe
xor
shll
adc
inc
sub
jle
push
cmpsb
add
popf
jae
xchg
in
mov
jns
nop
push
push
jp
cmpsl
push
pop
movsl
jb
lea
and
shr
add
or
negl
mov
jo
pop
test
pushf
sub
cmpsl
inc
cmp
sbb
stos
jnp
cmpsl
sub
cmpsl
outsb
fnsave
add
mov
or
add
xchg
adc
push
or
outsl
pop
fisttps
push
sahf
mov
xchg
dec
ss
cmp
lods
rcl
mov
imul
ss
mov
push
or
iret
cmp
sbb
stc
adc
cmc
pop
inc
and
cli
frstor
inc
outsb
ret
scas
mov
leave
sbb
inc
lea
add
jg
mov
into
arpl
add
sbb
pusha
jp
ret
jge
out
push
into
clc
hlt
adc
test
push
lret
repz
adc
insb
pusha
pop
popa
mov
icebp
and
dec
ja
out
dec
jae
xchg
gs
mov
mov
jmp
sti
cmc
roll
jle
pop
jecxz
sti
out
ljmp
cmc
fisubrs
pop
gs
insl
fnstcw
test
std
ffreep
stos
pop
jno
push
nopl
dec
sbbb
out
lea
outsb
jno
push
popa
out
lret
lcall
cvtps2pi
adc
xchg
xchg
fsubr
inc
pop
lods
outsb
testb
in
mov
lcall
dec
icebp
jl
mov
cmp
or
testl
test
stc
dec
push
in
xchg
out
and
pushl
push
jp
xchg
loop
push
mov
daa
in
mov
fdiv
fldenv
icebp
int
fnsave
fldcw
mov
test
lret
jb
pop
stos
insb
subb
mov
lods
loop
mov
jl
push
fcmovbe
or
mov
call
aam
add
adc
push
addb
and
dec
je
pop
arpl
lods
imul
pop
mov
and
mov
mov
push
mov
sahf
mov
sbb
or
and
and
pop
jmp
cld
inc
int
mov
aam
push
pop
shr
and
add
pushf
sbb
and
test
xchg
and
or
mov
imul
mov
ficompl
and
loope
aad
leave
push
dec
inc
cli
cltd
and
rorb
dec
gs
cmp
add
mov
lahf
dec
rorb
std
sub
aad
loope
sub
jbe
pusha
cmp
add
in
adc
jl
incb
push
cmpsb
data16
mov
jmp
ret
push
aaa
mov
inc
pop
cld
dec
lahf
mov
xor
sbb
or
lds
clc
les
lea
rcrb
insl
shl
inc
cmp
push
inc
adc
nop
arpl
push
pop
cmp
sbb
jb
or
push
mov
ret
sbb
loopne
push
pop
adc
xchg
movsb
push
mov
xchg
sbb
fnstsw
stos
pusha
imul
orb
dec
pop
je
sub
std
les
popf
inc
cmp
arpl
adc
movsb
or
jl
loopne
and
mov
dec
fs
movsb
in
nop
push
test
mov
cld
data16
jae
pop
pop
mov
push
stos
mov
cmp
xchg
push
in
cmp
lret
xor
xor
inc
popf
or
fs
fs
orl
icebp
jl
cltd
imul
pushf
rcll
or
outsl
mov
xor
cmp
fdivrs
xchg
out
pop
je
jae
adc
dec
sbb
push
jno
mov
je
xchg
add
in
mov
lods
pop
test
and
sbb
sbb
jnp
testb
jmp
mov
mov
ret
mov
addl
repz
mov
xor
loop
xchg
mov
pop
xchg
mov
imul
addr16
and
movsl
mov
mov
or
int
jmp
fnsetpm(287
leave
adc
and
mov
inc
adc
inc
add
inc
jge
rorl
pop
popf
pop
rolb
into
popf
pushf
clc
xor
push
or
sub
jnp
xchg
xchg
out
aas
int
ret
xor
call
rcll
or
pushf
outsl
fldl
icebp
lahf
lock
std
jg
pop
rcrl
fwait
int
popf
in
sarb
psubusb
xor
orl
pop
mov
movsb
cmp
lods
outsl
cmp
in
mov
pop
mov
dec
sbb
orl
gs
push
or
movl
cld
jle
push
stc
loope
xor
int
push
pop
jnp
int
and
sub
pop
or
lods
push
pop
lcall
dec
xor
inc
imul
jmp
int
icebp
adc
xchg
shrb
mov
loope
adc
lock
int3
pop
jl
stos
jp
frstor
add
pop
out
xchg
dec
rorb
aad
in
loopne
jae
jge
dec
cmpsl
cmc
sbb
mov
lods
dec
sub
gs
in
push
and
test
dec
mov
test
call
inc
ljmp
xchg
mov
ja
mov
lods
add
in
stos
or
ss
data16
incl
sahf
cmp
scas
jmp
mov
xchg
inc
pushf
push
sub
add
scas
push
aas
push
and
lret
pop
jp
test
dec
xor
mov
rclb
lea
push
or
repnz
xor
out
in
dec
inc
cmp
pushf
les
and
or
ja
push
fmulp
nop
shlb
fstpt
sub
out
or
fmull
imul
mov
lret
stc
sub
sub
jo
loope
pop
repz
out
test
jae
jb
std
mul
popa
fld
jb
fs
shrb
test
aad
ret
lods
push
inc
dec
pushf
mov
dec
add
addl
adcl
das
js
and
sbb
dec
inc
shlb
push
shll
das
rclb
stos
in
test
outsb
movsb
pop
lea
push
xor
pop
out
or
dec
jge
xor
js
sbb
jo
push
sbb
into
aaa
and
and
cld
sub
lar
push
xlat
mov
mov
mov
jno
sbb
popf
sub
cwtl
cwtl
stc
cmp
iret
inc
jnp
jbe
arpl
inc
xchg
push
pop
mov
xchg
sub
dec
xchg
push
mov
sub
sbb
imul
mov
mov
adc
pop
and
aam
jno
or
xchg
fldt
fstpl
inc
imul
in
jle
pop
sub
aam
xchg
or
push
repz
int3
sbb
pop
inc
imul
xchg
insl
mov
inc
sbb
mov
das
sub
loop
inc
pop
cmp
xchg
sbb
cmp
cmp
je
clc
push
movsb
adc
movsl
add
dec
pop
popf
xchg
negl
mov
out
sub
mov
or
xor
cwtl
scas
dec
dec
dec
xchg
daa
add
pop
rolb
lcall
jae
cltd
mov
lea
out
out
fdiv
cmpb
ror
sub
clc
cwtl
mov
and
loop
fprem
add
stos
in
stos
cwtl
mov
call
in
notb
mov
sub
inc
mov
jno
sahf
sub
cmpsb
or
and
add
jge
imul
jns
int3
incl
adc
jge
out
into
cmp
fbstp
fs
into
mov
lea
je
ret
adc
inc
dec
pop
cmp
xor
sbb
sbb
cmpsl
add
or
roll
dec
xor
xlat
mov
sbbl
adc
dec
int3
or
cmp
movsb
push
dec
aad
mov
shll
mov
mov
jl
ficompl
inc
cmp
daa
mov
xchg
aaa
pusha
flds
jb
xor
jae
pop
push
cmp
mov
stos
dec
and
inc
xchg
pop
orb
jecxz
pop
adc
test
sbb
xchg
fisttpll
mov
pop
fistl
sub
xor
adc
imulb
mov
int
push
jns
sahf
dec
adc
daa
out
fsubrl
cmp
iret
lret
mov
pusha
fprem1
mov
cmpsl
xchg
stos
pop
inc
adc
fistpl
push
loopne
fmuls
imul
sbb
mov
nop
sbb
sbb
imul
and
inc
mov
jge
sub
xor
clc
or
push
mov
call
imul
subl
movb
popf
sbbl
xchg
and
loopne
fnstsw
adc
mov
mov
mov
stos
mov
jp
and
mov
lahf
mov
stc
fsts
sbb
sbb
fildll
mov
add
jbe
mov
mov
rol
push
and
movsb
bound
or
imull
ret
test
cmpsl
imul
lds
pop
sbb
inc
cmp
dec
rolb
cmp
test
jnp
rcr
cmp
dec
jmp
lcall
outsb
sbb
jl
sahf
clc
rcr
sbb
shrl
pop
xor
dec
dec
or
xchg
imul
dec
lahf
and
add
outsl
adc
repnz
jecxz
lea
adc
jecxz
jl
jns
mov
pop
aas
pop
pop
mov
arpl
adcl
mov
sbb
fsubrp
scas
imul
mov
and
in
pop
mov
mov
mov
jb
call
rcll
mov
cmp
adc
ljmp
push
add
ret
popf
dec
pop
mov
scas
popf
in
daa
lea
cmpsb
sbb
data16
sbb
inc
inc
pop
dec
gs
mov
sub
pop
sub
xchg
or
fidivrs
sub
cs
and
sbb
adc
repz
cmp
outsb
lret
mov
int3
mov
clc
jns
jmp
daa
pop
out
and
jp
cmc
fwait
xchg
pop
shll
mov
repnz
movsb
dec
addl
push
add
dec
xchg
pop
ret
sti
popf
aam
lock
out
jne
das
adc
lock
pop
andl
into
jbe
pop
cmp
stos
call
roll
xchg
cld
adc
pop
insl
rcrb
sbb
mov
sbb
pop
jecxz
xchg
outsl
movsl
int3
scas
cmp
and
scas
push
jl
push
inc
jns
and
ja
push
mov
jb
sbb
xor
inc
mov
jge
sbb
xchg
mov
in
loop
xor
dec
adc
scas
jge
and
and
and
mov
xchg
cmp
jle
add
js
mull
and
fs
out
pop
mov
mov
cld
jnp
test
cmp
xchg
mov
fistl
mov
gs
jnp
xor
pusha
sub
mov
leave
and
mov
lret
cli
dec
inc
repz
push
xorb
fwait
xor
mov
stos
jp
fdiv
add
mov
xor
adc
in
and
fldt
insl
or
shll
iret
fsubl
jge
adc
mov
dec
sub
pop
xor
mov
loop
sbb
aas
leave
fsubs
sub
fcmovne
mov
enter
mov
jmp
test
mov
sub
addl
in
xchg
lret
mov
or
jbe
cld
orl
je
mov
test
insl
cmpsb
out
addr16
popa
imul
ret
cmp
xchg
or
adc
cmp
xchg
in
je
sub
mulb
inc
das
push
pop
test
out
mov
jo
jl
jo
xchg
cmp
out
xchg
rep
xchg
out
push
fs
cmp
mov
mov
and
or
lea
fbld
lds
adc
jnp
pop
sbb
push
icebp
and
mov
sahf
sub
xor
or
mov
int
leave
jbe
and
out
dec
inc
xchg
dec
cmp
gs
dec
ret
push
cmp
dec
sti
adc
stc
jge
mov
ljmp
fstp
sahf
mov
divl
sub
mov
insl
aam
xor
mov
fldcw
push
jp
cmp
xor
push
scas
adc
jb
lahf
add
mov
jp
mov
cwtl
push
mov
pop
cmpsl
add
inc
lahf
daa
adc
push
jo
loopne
mov
jb
xchg
ret
mov
cmp
incl
aaa
add
lret
jmp
mov
sub
data16
jno
cld
mov
mov
lret
fnstsw
data16
xchg
push
cmp
inc
adc
in
cmp
and
mov
mov
add
cld
bsr
mov
sbb
scas
mov
sbb
into
jbe
jne
mov
stos
xor
dec
popf
add
push
into
jecxz
lcall
aam
in
jge
mov
clc
sarl
rcrl
test
loopne
daa
test
pop
mov
cmpsb
enter
jb
test
mov
test
dec
push
cmpsl
out
ja
ret
arpl
mov
std
mov
shr
lock
test
in
xlat
leave
inc
scas
rorl
sbb
test
push
pop
mov
aas
xorb
lods
ss
adc
or
dec
push
movsb
push
or
xor
pop
lds
cmpsb
scas
repnz
out
xchg
int
sbb
idivl
add
cmp
stc
bound
cmp
sbb
xchg
lahf
mov
fwait
fs
add
xchg
mov
mov
lods
insl
mov
ret
push
add
mov
sti
jnp
and
mov
lahf
jl
jecxz
adc
test
in
out
aam
xor
pop
push
cmp
jl
xor
xor
aad
dec
mov
fistpll
mov
mov
push
mov
nop
or
sub
shll
in
jnp
jno
mov
cmp
adc
mov
add
cld
add
fiaddl
sub
sub
pusha
addr16
push
xor
lahf
repz
jns
mov
shl
push
mov
inc
dec
xorb
arpl
jbe
leave
nop
add
sbb
out
gs
adc
adc
dec
xchg
xchg
pop
mov
lahf
mov
sti
bound
dec
add
push
es
mov
lcall
jp
and
adc
inc
loope
and
cmpsl
loope
push
adc
mov
sbb
xchg
mov
mov
push
jae
mov
lcall
fldl
repz
xchg
dec
jne
jmp
dec
in
test
mov
sahf
xor
sub
popa
mov
sahf
and
sub
mov
or
or
aad
inc
cmpsb
dec
or
stos
jg
movsb
ret
je
pop
mov
pop
repz
jne
lea
shl
test
loope
push
shll
sbbl
iret
add
add
dec
rcrl
xor
xchg
je
mov
sbb
mov
imul
sbb
clc
lahf
xorb
negl
pop
mov
cli
add
test
iret
push
imul
and
add
sbb
out
cmp
arpl
xor
hlt
push
push
mov
test
sbb
fcmovnb
pop
mov
ss
or
repz
inc
sub
pop
stc
jbe
push
jle
ds
adc
stos
fldenv
push
dec
xchg
adc
popf
dec
xor
mov
sahf
jae
and
mov
add
or
inc
inc
or
adc
les
push
dec
icebp
cmp
rorb
mov
andb
out
mov
js
adc
push
imul
sub
movsb
in
lods
test
inc
jmp
sahf
addr16
sti
repnz
sahf
iret
ret
jo
sbb
je
cmp
mov
xchg
test
jecxz
push
pop
push
adc
lahf
test
push
or
ret
push
add
push
and
xchg
push
mov
adc
andl
lcall
dec
sub
xor
cmpl
ds
sbbl
jecxz
enter
pop
imul
jae
mov
dec
js
sbb
xchg
sbb
neg
sub
push
or
scas
xor
dec
les
cmp
out
xchg
lods
mov
mov
xor
xor
sbb
mov
mov
ret
out
jl
imul
movups
pop
jmp
sub
mov
in
imul
incl
into
and
push
sarb
mov
popa
pop
dec
sbb
xchg
repnz
out
out
bound
movsl
lret
mov
and
cmp
jg
inc
fwait
xchg
jecxz
lods
and
cmovge
cld
push
inc
xor
aaa
xor
inc
ljmp
dec
xchg
scas
push
lret
mov
pxor
lock
fcompl
cmp
movsb
daa
imul
jne
xor
jne
sbb
outsb
add
push
imul
cmpsb
dec
loope
je
jmp
aad
push
shl
fbld
scas
movsb
loopne
mov
mov
bound
xchg
xor
or
pop
ret
in
hlt
cmp
imul
and
dec
out
dec
pop
inc
nop
add
pop
ja
out
xchg
xlat
push
cwtl
cli
add
sub
sbb
or
xor
cmp
and
fcmovnu
movsl
xor
inc
mov
jne
cmpsl
repnz
xchg
xchg
ss
push
js
xchg
rcl
jmp
hlt
in
or
mov
aad
ficoms
jo
mov
xchg
dec
in
imul
cmp
mov
insl
pop
adc
bound
outsb
mov
ljmp
xor
dec
push
mov
push
mov
jb
lret
leave
mov
popf
mov
leave
fisttps
xor
mov
fldenv
mov
xchg
mov
cli
ret
mov
sahf
je
inc
adc
js
pop
inc
scas
pop
mov
outsb
sahf
out
mov
or
xor
sbb
rcr
xchg
fcompl
add
out
pop
out
push
les
push
mov
cmp
imul
jle
fbld
mov
mov
in
jl
insb
pushf
cmp
cmp
push
lahf
rep
aas
add
repnz
push
test
add
std
outsl
cmp
mov
sti
adc
sub
mov
fbstp
jae
les
inc
testb
sarl
cs
into
mov
sub
jg
and
loopne
dec
cmpsl
addb
int
test
movsb
cmc
inc
gs
cs
popa
jbe
sbb
pop
xchg
jbe
inc
push
sub
xchg
js
and
pop
test
sbb
in
xor
push
mov
rorl
mov
scas
jne
int3
stc
mov
pop
or
fwait
loope
fiadds
mov
sar
repz
loopne
fwait
mov
sub
fisubrs
clc
sub
sbb
sarb
loope
adc
xchg
dec
and
jb
jne
dec
mov
dec
jns
mov
imulb
xchg
out
mov
sbb
add
inc
xchg
mov
or
dec
xor
ds
sbb
push
pop
mov
subb
adc
jbe
and
lods
inc
out
ja
dec
inc
mov
and
imul
lcall
ds
fs
dec
je
mov
movsb
xchg
call
loope
lcall
sub
cmpsb
aaa
outsb
daa
sbb
or
sub
out
inc
mov
inc
or
addr16
ret
push
xchg
iret
mov
scas
repnz
adc
enter
call
xor
pop
popf
popa
inc
mov
dec
outsl
imul
jne
sbb
hlt
out
jne
dec
cmpsl
mov
xor
sbb
add
ret
sbb
mov
or
jne
mov
dec
scas
test
enter
cmpb
gs
dec
xchg
lock
mov
cwtl
aad
movsb
cmp
push
pop
pop
clc
xor
and
push
loop
xor
ret
or
jne
add
sbb
pop
lret
adc
movsl
outsb
in
mov
pop
in
push
hlt
jae
lock
lock
xor
push
cmc
xor
mov
jge
cmc
aad
lea
cld
aam
or
xchg
ja
mov
sub
and
scas
scas
mov
jnp
test
lahf
push
pushf
xchg
pop
jb
orb
test
dec
icebp
rcrb
sbb
jge
roll
sub
cmp
xor
mov
xchg
popa
inc
mov
sbb
or
dec
out
pusha
cmc
push
bound
and
dec
push
cld
mov
fwait
test
ret
fs
shlb
push
mov
adc
mov
cmpb
into
mov
jb
sbb
clc
xchg
xor
push
sub
leave
fldl
mov
pop
adc
subb
aad
push
repnz
repnz
xchg
sub
daa
insb
jns
lea
mov
pop
shrb
aaa
stos
pop
sbb
xor
mov
icebp
jmp
imul
scas
or
cli
cmpsb
jl
sbb
or
xor
jecxz
repnz
xchg
movsb
xor
inc
lods
or
arpl
adc
fmul
lcall
push
cmp
add
decb
nop
dec
aaa
ljmp
mov
mov
loopne
sub
xchg
inc
dec
call
je
mov
xchg
mov
push
fisttps
jge
fcmovnu
sti
cmc
mov
or
mov
mov
roll
jmp
mov
lcall
ss
push
lcall
addr16
testb
jmp
in
sahf
popf
in
loop
in
xlat
jmp
xchg
jbe
ss
repz
xchg
push
xlat
ret
and
clc
out
push
clc
add
mov
jl
fmul
jbe
data16
fsubrl
sti
insl
shl
cmp
and
fidivrl
xchg
add
mov
add
sahf
mov
gs
outsb
cmpsb
push
fldl
mov
mov
cltd
cwtl
jno
jg
into
cmp
shlb
mov
into
mov
sub
fistps
cs
xor
imul
outsb
jge
ja
jo
inc
mov
int3
jns
dec
scas
in
ss
push
sbb
cmpb
fdivrl
jnp
inc
aas
icebp
daa
dec
jae
jae
rcl
cs
dec
xor
call
mov
fyl2xp1
je
mov
pop
dec
outsl
xchg
xor
fisubs
and
iret
nop
adc
lods
sbb
filds
bound
loop
pop
inc
aam
jb
push
movlps
xchg
and
or
imul
adc
ljmp
xor
push
mov
test
pop
fs
dec
movsl
decb
or
xchg
pusha
ja
mov
popa
repnz
dec
sarl
pushf
insb
fsubr
dec
push
pop
fisubl
mov
mov
xor
jmp
iret
or
xchg
inc
data16
imul
xchg
jns
push
mov
sarb
xor
cmpsb
jecxz
movb
mov
ss
pop
scas
rclb
dec
add
ficoms
scas
push
orl
push
clc
in
fcom
cmpsl
scas
mov
mov
xor
jb
gs
cli
jmp
cmp
imul
push
cmc
or
adc
or
lret
cmp
pop
push
mov
push
ficompl
mov
pop
cmp
dec
xchg
sbb
cmp
enter
dec
push
mov
dec
int3
je
mov
cmp
dec
rcrb
imul
insb
dec
and
movsb
scas
clc
test
fwait
or
pop
arpl
fs
incb
mov
xor
jnp
inc
loop
xchg
or
lods
sbb
mov
and
sub
or
je
push
in
mov
cld
or
mov
fimuls
adcb
fnstcw
push
adcl
out
jae
sbbb
int3
cmpsb
mov
notl
mov
out
inc
xor
gs
xlat
int3
pop
bound
add
shl
cmc
int
jl
movsb
adc
xor
sub
int
jno
xchg
jge
dec
lods
cmp
aas
push
pop
jecxz
mov
ret
add
das
add
icebp
cli
arpl
in
cmp
or
pop
inc
xor
push
mov
sbb
in
jmp
mov
lds
mov
nop
pushf
subb
xchg
mov
gs
test
jmp
dec
daa
sbb
pop
sub
xchg
xor
sbb
shl
in
and
cmpsb
jp
cmpsb
rclb
jae
mov
mov
sbb
lea
sbb
sub
jl
mov
push
les
call
fmuls
mov
sub
mov
movsl
mov
mov
lea
jl
mov
fldcw
jo
or
push
mov
mov
pop
and
dec
sub
xchg
cli
push
mov
popa
repnz
sti
lea
jne
xor
xchg
fs
push
divb
hlt
into
mul
adc
scas
repnz
out
popf
xchg
adc
ret
out
mov
lret
mov
jmp
mov
cwtl
and
std
jne
lods
fbstp
outsl
ror
out
roll
fadd
daa
jg
jecxz
arpl
cs
add
std
inc
mov
cmpsl
int
add
sbb
add
lret
or
popa
sub
sbb
mov
jp
adc
imul
lods
dec
in
int3
adc
pop
inc
cmpsb
jns
push
iret
dec
mov
xchg
push
or
lret
das
xlat
push
sub
ja
aaa
xchg
test
cmova
push
stos
rorb
cmp
jno
mov
ret
out
idivl
pop
jecxz
inc
data16
xchg
adc
xchg
add
cmp
pop
out
daa
data16
mov
add
pop
and
push
pusha
loop
jg
push
lock
mov
push
cmp
cmp
xchg
push
push
add
dec
dec
aad
adc
pushf
lods
dec
mov
lods
int3
mov
jg
or
dec
pusha
test
mov
mov
repz
jns
test
adc
fwait
in
fistl
scas
call
jp
dec
pop
add
push
stos
stos
adcb
sti
cmp
mov
xchg
xchg
test
jge
adc
cltd
cld
divb
adc
inc
push
aas
pushf
fmuls
fiaddl
sbb
stos
mov
cmp
push
sbb
cs
int3
insl
ror
cmp
xchg
orl
xchg
inc
das
int
push
call
lret
mov
dec
aaa
mov
pushf
sub
test
cmp
js
fimuls
xchg
dec
push
add
fwait
scas
in
int3
mov
test
dec
incl
xchg
adc
test
stos
jp
scas
int3
sti
sub
mov
xor
cwtl
cmp
cmp
cmc
mov
xchg
ficompl
jbe
fisttps
push
loope
push
in
cmpsb
mov
aad
addr16
test
mov
xorb
les
mov
mov
pop
mov
enter
inc
push
jecxz
frstor
jno
inc
mov
popa
gs
mov
xor
adc
push
xchg
add
or
imul
jge
daa
call
hlt
pop
push
repz
push
inc
roll
das
mov
enter
xchg
mov
dec
push
or
je
jge
cmp
out
sbb
and
sub
leave
mul
addb
cmc
and
pop
clc
fadds
inc
push
pop
shr
and
pop
mov
xor
bound
pop
sbb
cmp
lcall
scas
out
jno
mov
fisubs
and
jp
xchg
push
int3
sub
enter
pop
out
fstps
cltd
push
sbb
mov
loope
cmp
xlat
dec
rol
cmp
rcl
lods
in
mov
mov
inc
into
cmpsl
subl
ja
int3
out
mov
lds
dec
mov
pop
and
lods
movsb
in
pop
sub
mov
cltd
xchg
out
add
sub
mov
or
rcll
test
jbe
popf
dec
in
dec
xchg
repz
pop
sbb
cmp
in
jge
sbb
repnz
push
lcallw
test
ljmp
jp
mov
jge
fidivs
aaa
int
pop
pushf
jne
cmpsl
rcr
jbe
add
in
xchg
std
lods
fmulp
std
cltd
sub
jne
std
xchg
lods
into
xchg
dec
dec
mov
or
mov
sbb
inc
repz
xchg
fcoms
sbb
jl
inc
in
popa
imul
enter
inc
pop
or
or
icebp
sbb
test
jp
rcl
add
mov
dec
sbb
jl
add
mov
jae
pop
pop
jb
push
das
outsl
sbb
sub
sub
stos
xlat
add
imul
cmpsl
cmp
and
popf
out
shr
sti
das
mull
pop
inc
dec
hlt
or
ret
test
mov
cmp
arpl
and
fldt
dec
lahf
inc
cwtl
icebp
mov
ret
dec
cltd
rorl
sbb
xor
aas
inc
loop
xchg
dec
test
sahf
jge
push
fcompl
mov
test
outsb
shll
mov
lcall
inc
add
aas
in
adc
dec
lcall
xchg
loop
adc
in
lock
out
cmp
pop
xchg
jl
sub
fdivrs
ja
sbb
mov
std
pop
nop
jns
push
pop
jle
jb
mov
nop
pop
pop
ljmp
leave
lock
pop
insb
test
leave
arpl
push
xor
mov
mov
lea
pop
aaa
cs
sub
stos
mov
loop
out
shl
jnp
lret
jecxz
test
pop
inc
mov
and
ds
inc
insl
inc
aam
push
mov
popa
clc
lret
push
sub
in
mov
mov
shrl
decl
outsl
mov
cmp
leave
mov
lods
sub
lret
pop
dec
mov
or
push
push
cmpsl
popa
and
lods
inc
ja
xchg
and
test
into
cmp
jns
loope
xor
inc
cwtl
outsl
hlt
jo
rcrb
jl
mov
jge
mov
mov
ss
sbb
rorb
data16
in
enter
sub
cmp
icebp
in
pop
and
testl
xchg
sbb
enter
daa
in
sbb
push
nop
mov
insl
or
loope
pop
mov
repnz
or
test
addl
jb
xchg
sarl
xchg
mov
cmp
adc
faddl
sbb
xor
movsb
fcomps
sahf
pusha
jle
scas
pop
add
adc
mov
icebp
xchg
pop
out
sbb
sbb
dec
ret
mov
mov
xor
jbe
or
sub
mov
push
pop
add
jmp
subl
ljmp
testb
cmp
xchg
mov
pop
pop
test
sub
dec
adc
das
rorb
xor
subb
xorb
dec
orb
mov
out
push
cmp
inc
je
js
and
or
mov
mov
ss
and
and
inc
lahf
mov
pop
daa
jnp
jbe
fcompl
xchg
adc
and
js
popa
xor
push
aas
cmp
push
push
add
mov
arpl
bound
rol
jg
xlat
or
sbbb
adc
pop
or
les
test
xchg
mov
fists
ja
pop
push
shl
arpl
loop
in
fidivrs
sub
add
cwtl
mov
cld
mov
mov
add
out
in
daa
aaa
dec
cli
addr16
inc
inc
mov
push
push
jae
sbb
in
mov
sub
xchg
sub
mov
add
xor
push
adc
std
mov
or
fiaddl
dec
ret
lds
pushf
dec
iret
xchg
into
adc
inc
gs
jmp
adc
mov
sbb
xchg
dec
sub
mov
ret
test
xor
cmpsb
inc
sbb
imull
inc
incl
fists
fnsave
negl
push
or
inc
xor
mov
mov
data16
movsb
mov
or
xor
sarl
push
push
inc
mov
mov
loopne
and
out
int
outsb
popa
xor
xchg
idivb
fdivr
cmpsb
fisttpll
mov
cld
and
add
ja
mov
jae
addb
sub
cld
inc
inc
sbb
mov
out
xlat
mov
sbb
int
jb
push
push
mov
cmp
cmpsl
dec
cs
mov
mov
int3
test
xor
arpl
shrb
adc
imul
xor
fildl
not
add
rclb
or
enter
movsl
jecxz
jbe
cltd
pmulhw
cld
jnp
cmpb
cmp
cs
daa
inc
jns
lds
mov
es
mov
iret
fldcw
dec
sbb
mov
jmp
les
pop
jge
cmp
test
adc
xor
push
leave
jmp
out
ljmp
lret
lds
push
in
into
mov
test
xchg
pop
jbe
adc
call
sti
mov
mov
or
fs
or
mov
pop
fs
lea
ret
clc
imul
pop
icebp
fwait
sar
std
dec
jcxz
adc
ret
pop
push
leave
xchg
in
jmp
test
out
mov
jle
clc
in
popf
dec
push
and
or
gs
test
adc
jmp
clc
sub
inc
mov
mov
inc
insb
sbb
roll
mov
jno
jl
mov
pop
mov
lcall
inc
aam
jne
cmp
sub
jae
cmp
xchg
insb
stos
jno
insl
andl
inc
xlat
sub
jmp
cltd
daa
xchg
enter
lret
jmp
cmp
mov
mov
dec
pop
push
mov
xchg
das
xorb
mov
push
jl
pop
loope
inc
js
mov
das
sahf
in
mov
mov
stc
cld
jno
xchg
loop
stos
jle
sub
fdivs
rorl
jp
pop
sahf
jnp
pop
pusha
mov
cmp
pop
movsb
nop
push
and
push
xchg
mov
sar
pop
popf
lods
mov
jnp
inc
and
ljmpw
push
idivl
fisttps
test
fwait
lods
imul
shlb
ret
cmpsb
mov
mov
int
subl
cmpsl
ds
popa
xchg
mov
aaa
xor
push
popw
adc
mov
jbe
cwtl
rcrb
jae
iret
cli
jle
nop
out
dec
imul
jmp
decb
cwtl
sub
repz
jge
mov
pmulhw
push
jmp
mov
mov
call
mov
mov
fildl
rolb
ss
lods
pop
xchg
dec
cmp
mov
inc
rcr
movsb
sub
stos
inc
cmp
outsl
mov
shlb
and
fimuls
fistps
xor
in
inc
adc
xor
js
repnz
pop
jmp
and
mov
out
add
push
daa
stos
js
out
and
aam
jl
rclb
cmp
popa
lret
in
sbb
xchg
xchg
jb
dec
push
mov
je
aam
pop
mov
lahf
orb
int
xchg
pop
pop
inc
outsl
sahf
sbb
cli
mov
mov
lret
dec
jl
push
jmp
aam
in
cs
sub
push
xor
cld
and
push
popf
or
add
xchg
push
xchg
jnp
mov
and
sti
mov
xor
rolb
cmp
imul
inc
mov
not
lods
xchg
dec
jge
pop
fistpll
sub
or
test
filds
imul
xlat
mov
jge
dec
idivb
fimuls
dec
xchg
mov
xchg
cmp
lret
dec
iret
mov
loopne
movsb
inc
pop
mov
pop
mov
cltd
push
and
cmc
sub
shlb
push
or
rolb
rcll
rolb
push
std
jae
xlat
push
out
scas
pop
adc
mov
or
ja
fs
mov
xor
xchg
add
push
aas
notl
xchg
inc
out
jl
test
mov
out
pop
jl
jecxz
adc
add
in
roll
sti
out
hlt
and
loope
cs
inc
iret
dec
xor
cli
aas
lds
jbe
popa
sub
xor
loopne
mov
imul
test
add
push
adc
das
mov
jge
mov
xchg
dec
dec
aaa
add
daa
pop
sbb
jg
xor
mov
scas
test
cs
das
int3
icebp
and
jb
pop
adc
adc
cmpsl
rclb
loop
xchg
lea
es
imul
fs
aas
in
cs
sbb
adc
sbb
inc
and
cmp
and
fistpll
imul
enter
jg
fbstp
loope
test
mov
add
rcrl
aam
or
loop
clc
stos
mov
push
js
repnz
ljmp
loop
rcrl
call
xchg
stc
or
sub
test
and
push
adc
movsl
in
dec
js
insl
cmc
loopne
pop
xor
push
xchg
mov
pop
roll
dec
or
shr
adc
inc
mov
popf
enter
lods
mov
andl
shl
rorb
pushf
jle
jecxz
testl
fldt
mov
orb
mov
imul
loopne
and
ret
mov
and
cmp
scas
shlb
add
and
xchg
inc
lock
xor
loope
test
xchg
cmpsb
imul
xor
adc
xchg
arpl
or
pop
pop
jbe
sbb
push
mov
iret
test
mov
xlat
pop
sbb
mov
adc
jnp,pt
mov
jne
into
mov
iret
outsb
push
jnp
adc
sbb
adc
mov
cwtl
pop
sbb
and
arpl
testb
pop
inc
xor
pop
negl
jns
and
enter
inc
aaa
lret
flds
cmp
int
inc
icebp
pusha
sbb
push
mov
cmp
cmovb
int3
sbb
icebp
sub
cmp
jp
cmpsl
rolb
mov
mov
dec
inc
adc
popa
sarb
fbstp
xor
sbb
cltd
add
cld
and
cmpb
and
or
aad
xchg
xchg
mov
mov
aam
dec
aas
pop
out
pop
xor
out
loopne
insb
and
cwtl
scas
inc
int3
out
hlt
inc
cmp
mov
xor
test
push
out
push
adc
sub
mov
xor
jl
dec
cmpsl
imul
xchg
in
enter
mov
add
mov
pop
inc
push
iret
adc
cmp
sbb
loopne
mov
pop
push
mov
push
ret
add
mov
stos
mov
adc
in
cmpsl
push
bound
shrl
cmc
mov
xchg
out
and
push
mov
sbb
movsb
and
pop
xor
mov
pop
pop
dec
or
adc
sbb
mov
sbb
ret
sbb
daa
jl
push
pop
add
mov
loop
and
xlat
imul
cmp
imul
aad
loopne
xchg
sbb
xchg
push
test
rcrl
icebp
es
jae
push
fcmovu
iret
mov
push
outsl
pop
mov
and
jbe
shll
dec
std
lcall
adc
sub
push
xchg
dec
mov
or
lds
jmp
adc
adc
sbb
repnz
cld
test
mov
je
jbe
sbb
push
xor
mov
pop
or
xor
shlb
xchg
xchg
jnp
sbb
test
mov
lahf
jge
cltd
adc
ret
or
sub
mov
fsubl
loop
cld
jae
add
pop
sub
dec
jno
mov
stc
outsl
ret
lcall
dec
hlt
lock
pop
fwait
lods
into
cli
js
xchg
pop
adc
jge
stos
lods
push
add
in
mov
test
loopne
push
fcoms
sbb
sbb
or
jecxz
dec
fisubl
popa
cltd
xor
adc
cmp
add
or
lock
cmpsb
xlat
cmp
sbb
mov
cmpsb
sub
jle
lret
xor
dec
xchg
subb
jmp
sub
fxrstor
popa
clc
fisubs
mov
out
dec
in
pop
push
aaa
stos
sbb
stos
push
mov
lods
mov
and
or
fnstcw
flds
jne
push
jp
jno
fisttpl
jge
int3
clc
lea
pop
hlt
in
ret
jle
dec
jl
mov
sub
or
lds
or
jne
cmp
jecxz
push
add
add
sbb
out
xchg
iret
mov
cmc
out
lahf
jl
and
push
lahf
cmp
cmpsb
inc
push
inc
mov
lcall
insl
push
cmp
mov
lock
pop
dec
pop
mov
outsb
mov
movl
xor
dec
dec
push
ret
leave
jo
sub
xor
cmp
xchg
into
loopne
std
ds
add
inc
mov
pop
mov
shll
xchg
and
xlat
dec
lahf
cmpl
hlt
mov
and
fwait
mov
cmpsb
sbb
mov
pushf
sbb
xor
fidivl
movsb
stc
add
jge
push
xor
push
in
push
test
in
js
ret
xchg
mov
ret
inc
clc
mov
adc
inc
xor
leave
fmul
pop
aas
pop
mov
lea
mov
adc
mov
add
jae
in
dec
lret
in
jecxz
lea
pop
xor
pop
pop
addr16
test
in
dec
neg
iret
push
pop
xchg
nop
push
jg
jbe
push
cmc
sarl
lcall
out
jg
dec
fsubrs
or
bound
mov
ds
pmulhuw
mov
inc
mov
sub
pusha
mov
in
fst
or
push
loop
int3
sub
fnstsw
cmp
dec
std
xchg
jecxz
mov
jmp
mov
cwtl
pop
and
scas
notl
pusha
push
subl
jne
and
pushf
pop
pop
inc
outsb
in
push
dec
pusha
xor
xor
pop
ret
and
insb
stc
lcall
adc
cmp
xchg
pop
popf
mov
es
or
cmp
dec
shrb
dec
pop
stos
cltd
xorb
inc
push
xchg
inc
dec
add
mov
and
pop
outsl
xor
push
adc
test
inc
dec
mov
lods
leave
aas
jg
out
mov
aas
inc
sbb
push
sbb
lea
pushf
inc
inc
repz
cmpsb
and
daa
mov
fcmovnbe
test
aam
inc
and
outsl
add
sahf
jle
dec
add
shrl
shll
data16
pop
lock
cmp
xor
jo
ja
mov
fwait
push
mov
stc
inc
es
xchg
mov
das
ffreep
push
xchg
ret
pop
and
push
das
sti
std
push
push
pop
enter
stos
mov
xor
pop
sub
ja
lret
cmpsl
mov
bound
add
mov
movsl
jl
jbe
xchg
cmpsl
mov
scas
jecxz
mov
and
leave
push
fisubl
cli
ss
or
in
and
sti
xchg
lea
loop
cld
pop
cmp
jbe
cli
divb
cmp
cmp
or
test
int
les
lcall
out
iret
out
inc
fisttps
fistps
lret
hlt
mov
nop
cmpsb
dec
mov
lahf
mov
xchg
cmpsl
ret
out
fnstcw
popa
jo
out
dec
mov
push
jno
sbb
push
adc
mulb
lds
sub
les
or
inc
cmp
mov
ret
test
dec
lods
hlt
je
sbb
mov
sbb
pop
popl
test
fadd
fsts
or
cmp
dec
cmp
xchg
mull
test
scas
pop
pop
or
lret
ret
adc
inc
or
mov
sub
inc
loop
and
adc
push
sbb
fsubl
imul
xchg
movsb
mov
addr16
pop
cmp
cltd
cld
faddl
jne
xchg
jg
cli
lock
lods
insb
pop
xor
dec
mov
pop
jecxz
scas
incl
mov
jl
fbld
xor
add
pop
fists
mov
and
inc
pusha
insl
sub
pop
sub
enter
lahf
xchg
aad
jp
addr16
xor
or
jb
and
fwait
dec
stos
scas
les
adc
push
pop
into
xlat
push
sbb
shll
ja
jecxz
mov
mov
jno
push
mov
xchg
insb
lea
sarb
inc
clc
adc
in
fcomp
xor
sbb
mov
or
imul
out
xchg
addr16
sbb
test
cmp
push
mov
cld
aas
adc
add
pop
fsts
pusha
es
adcl
int
mov
xor
cs
mov
fld
fadds
push
mov
gs
out
mov
jno
pop
adc
sub
icebp
push
mov
std
lods
ficomps
push
inc
mov
jbe
pop
cld
xor
cmp
flds
sahf
enter
add
push
out
aaa
movsl
adc
in
jl
sahf
sbb
push
leave
dec
loop
shr
xlat
out
fsts
ss
xor
xchg
pop
or
fmuls
push
and
mov
sbb
outsb
arpl
pop
xor
push
rclb
fmuls
popa
aam
mov
stc
push
jl
mov
std
lcall
jbe
mov
mov
arpl
and
inc
fisttps
xchg
pop
push
adcb
lcall
inc
push
jg
inc
sbb
push
inc
jecxz
jp
fdivs
cwtl
dec
test
out
imul
adc
xchg
dec
cmp
mov
mov
sahf
xchg
mov
mov
pushf
jb
sahf
push
daa
lahf
outsl
std
ret
ss
xchg
add
inc
rcrb
cmc
shr
sbb
in
cmp
pop
test
aam
mov
sbb
bnd
imul
adcl
push
xchg
jmp
icebp
mov
xchg
cltd
loopne
jl
xchg
or
sub
jle
mov
push
aas
push
mov
push
out
adc
adc
ljmp
test
dec
ljmp
test
loopne
xor
popf
push
xchg
shrb
sbb
jno
push
mov
clc
adc
xor
pop
cld
stos
jmp
mov
jmp
pop
ret
pop
les
ret
lahf
sub
stc
add
inc
mov
iret
mov
and
and
lock
loopne
popa
adc
or
xchg
dec
pop
loop
aas
sahf
out
movsb
scas
adc
repz
popf
loope
lock
jp
jnp
or
add
cmp
fidivrl
les
and
aad
shrl
cmc
pop
shll
push
ret
pop
sbb
test
negl
fiadds
xchg
or
mov
movsl
and
imul
dec
mov
jnp
nop
pop
in
and
addr16
es
mov
imull
adc
test
lahf
mov
jg
push
fcom
test
or
and
std
inc
int
daa
movl
in
test
mov
orb
dec
add
xor
xchg
jae
push
cmp
jo
fdivrp
cmpsb
cmpsl
add
addl
dec
ret
adc
push
sbbb
add
push
or
and
adc
outsb
call
iret
or
out
dec
mov
xchg
sti
inc
xchg
pop
adc
xor
shll
xor
or
test
outsl
mov
movsl
lahf
add
mov
mov
cmp
push
das
repz
cmp
mov
xor
cmp
push
je
inc
outsl
mov
sub
subl
int3
test
xor
imulb
enter
xchg
push
adc
cmpsl
repz
add
mov
adc
xlat
nop
hlt
dec
shrb
push
mov
pop
flds
add
push
repz
cld
pop
pop
adc
sbb
cmp
ja
jle
push
sub
mov
pop
mov
test
push
mov
pop
inc
xchg
dec
aaa
rcrl
and
mov
out
mov
and
repnz
dec
mov
fimuls
sub
jbe
pop
clc
outsb
jno
mov
in
lret
inc
or
jp
cs
int
pop
jo
adc
xchg
popf
rclb
lret
push
fnsave
pop
sub
test
and
push
sbb
mov
lea
mov
pop
inc
xchg
fdivrp
sub
insl
jae
cld
std
mov
loopne
xchg
inc
inc
das
mov
jecxz
out
pop
adc
aaa
xorl
mov
fwait
xchg
lods
adc
mov
sub
xchg
scas
outsb
cld
inc
gs
out
cld
dec
js
sbb
lahf
lahf
cld
jg
add
clc
cmp
xlat
test
movsb
lahf
push
out
pop
pusha
popa
mov
mov
pop
mov
sub
and
ret
imul
sbb
loope
inc
movsl
sub
cwtl
sub
push
xorb
adc
fs
cmp
repnz
out
and
or
cmp
shrb
test
movb
xlat
mov
mov
test
dec
scas
aad
outsb
push
ret
mov
add
or
xor
out
loopne
sub
test
jl
insb
pop
jo
xchg
sub
jae
mov
mov
dec
cmp
xor
jg
add
mov
sbbb
xchg
mov
imul
push
add
sbb
or
sti
push
jmp
fnstcw
fnstcw
sub
mov
std
mov
adc
loop
mov
mov
rorb
xor
or
sub
sahf
repz
or
fstp
ret
sub
loope
adc
jae
pop
pop
lods
or
mov
xor
xchg
push
les
add
aam
mov
in
stos
cmp
adc
push
xor
popl
sub
adc
xchg
sbb
cmp
xchg
ret
cld
push
fistpll
push
call
inc
loopne
loopne
rolb
pop
and
out
dec
int
dec
inc
lods
inc
xlat
fcoms
dec
lcall
loopne
cmp
xor
pop
scas
cmp
adc
jb
ficoml
jnp
or
adc
sti
and
push
in
jne
add
cmpsl
mov
add
pop
aas
cmp
popf
push
in
mov
pop
pop
es
ja
cmc
repnz
cmpsb
pushf
pop
pop
push
push
fwait
andb
inc
adc
scas
lret
orb
dec
movsl
sub
andl
dec
jge
push
add
add
or
movl
test
icebp
mov
jecxz
adc
add
jno
es
xchg
scas
xor
fldt
xor
xor
popa
mov
dec
add
shlb
enter
movsl
sbb
rol
daa
mov
jmp
jns
sbb
inc
push
mov
xchg
push
aaa
sub
cmc
inc
xchg
pop
inc
rorb
or
sbb
mov
lahf
and
mov
test
add
jecxz
mov
sti
cmp
jge
push
sub
je
cwtl
lahf
inc
xor
jae
push
sbb
adc
insb
sbb
push
decb
adc
mov
add
mov
repnz
leave
jl
sub
sub
jmp
pop
sarb
cmp
fnop
aas
jb
daa
cmp
pusha
in
xchg
stos
mov
push
and
mov
sbb
shrl
or
sbb
pop
int3
adc
push
stos
or
fs
ss
jno
cmp
icebp
fstpl
xor
dec
mov
inc
xchg
inc
cmp
out
or
xchg
outsb
cmp
test
sub
sbbb
push
inc
faddl
jo
mov
ss
sub
mov
int
fwait
jns
das
out
mov
pusha
sub
mov
push
and
fsubr
iret
pushf
and
adc
and
fstpl
inc
push
add
cmpsb
sub
mov
cwtl
out
mov
std
test
adc
sti
mov
push
mov
dec
and
and
pop
mov
sbb
aaa
int3
loopne
sub
push
pop
push
pop
data16
add
fldenv
dec
push
imul
in
cmp
adc
out
xor
incl
sub
dec
xchg
sub
xchg
adc
addr16
push
ror
scas
adc
ds
mov
jbe
pop
ds
sbb
addr16
xor
and
out
push
push
sbb
popa
out
pop
adc
ret
adc
cmp
icebp
inc
push
aaa
test
mov
adc
adc
jmp
imul
test
ljmp
sti
fisubl
mov
pop
stc
sbb
scas
cwtl
dec
mov
frstor
xchg
pop
sbb
inc
loope
add
cmpsl
insb
add
lret
inc
popf
out
test
push
out
pop
popf
mov
lods
ret
movsl
push
cmp
pushf
sub
scas
fs
mov
xor
jb
test
or
dec
lahf
push
inc
test
xor
mov
push
xor
mov
loopne
and
push
mov
test
adc
imulb
sbb
and
cmp
push
mov
or
sub
ja
lcall
adc
inc
out
mov
and
jecxz
ds
lock
xor
nop
ja
mov
jne
jnp
add
add
sbb
inc
gs
xor
call
mov
stos
repnz
enter
aas
fisubl
dec
inc
ret
mov
sti
sahf
aam
adc
lcall
inc
movsl
hlt
push
inc
stos
pop
mov
insb
xchg
jae
push
cs
cmpsb
add
push
rcrb
pop
inc
popf
add
jp
je
mov
mov
imul
cmp
sbb
mov
push
bound
xchg
iret
mov
outsl
lds
outsl
fstl
cli
rclb
mov
outsb
mov
sti
or
popa
push
into
mov
data16
jne
ret
mov
out
push
and
test
pop
stos
pop
jmp
inc
or
jne
cmp
mov
or
sub
mov
mov
xchg
add
cwtl
ret
inc
pop
sbb
insl
data16
pop
mov
pop
or
mov
sahf
adc
and
sbb
fwait
lods
pop
scas
sbb
mov
mov
cmp
xor
ja
dec
or
mov
and
jmp
pop
and
or
pop
mov
outsb
sub
jge
xor
mov
jl
or
icebp
out
jo
and
int
pusha
lods
shlb
mov
es
mov
adcl
xor
lds
dec
xchg
inc
setno
sub
xchg
push
mov
mov
and
jno
pop
mov
or
jecxz
mov
xchg
aaa
xor
jge
xor
sub
scas
outsb
jb
jno
mov
pop
test
or
inc
xchg
push
dec
mov
repz
lods
test
icebp
mov
add
sbb
or
ffreep
xchg
stos
add
stc
fcmovne
ja
cmp
into
push
divb
xchg
mov
scas
gs
ret
shrb
es
cs
inc
inc
loope
adc
cmp
dec
mov
clc
cmc
or
mov
into
pop
bound
xor
fwait
cmp
cmp
mov
sti
jnp
addr16
mov
outsb
aaa
ljmp
in
lods
cmpsl
dec
loop
dec
les
push
cli
pop
ljmp
dec
icebp
fisubrs
popa
sub
dec
pop
rcrl
shl
push
fs
pop
cltd
ljmp
and
insb
imul
push
sbb
sub
hlt
bswap
mov
sbb
and
or
sub
stos
sbb
in
inc
aad
pop
rcr
rolb
rcll
inc
add
mov
add
inc
sbb
lock
sub
xchg
add
data16
cmp
xor
outsb
cltd
test
fwait
push
xchg
bound
cmpsl
ja
mov
mov
int3
mov
lods
adc
aas
aam
and
fsubs
and
add
imul
dec
sub
sbb
cmpsl
fs
pop
pop
xor
push
fadds
adc
xor
push
shll
data16
sbb
movsl
jns
or
insb
data16
ja
xchg
enter
jb
xor
push
jecxz
add
sbb
cmpsl
fisttps
jmp
sub
jl
rcll
jbe
and
repnz
repz
in
icebp
xchg
stc
mov
mov
xchg
sub
sti
bound
clc
xchg
lods
jge
and
ret
xchg
mov
leave
push
lahf
insl
gs
and
inc
or
nop
add
decl
push
ljmp
jmp
mov
dec
and
hlt
adc
jne
mov
fstpl
inc
jne
fs
arpl
push
fcomip
mov
enter
mov
push
dec
sbb
stc
fnstsw
ret
mov
sub
xchg
stos
std
stos
sbb
mov
xor
xchg
test
jmp
mov
daa
enter
push
inc
leave
jg
inc
out
test
nop
mov
push
xor
and
add
push
cmpb
scas
or
push
daa
ss
rorb
mov
lods
ja
ret
mov
aaa
or
insl
out
test
sbb
pop
sti
xor
xchg
out
or
xchg
lahf
adc
mov
add
push
rcrl
add
sub
pop
cwtl
clc
sub
jmp
or
push
jns,pt
out
sbb
xchg
mov
popa
jl
aad
and
push
ljmp
les
inc
out
add
fisttpl
sub
mov
js
pop
xlat
data16
sar
push
ss
jmp
orb
push
sbb
or
stos
mov
push
inc
clc
mov
inc
and
mov
inc
mov
loopne
test
mov
adc
in
sub
mov
xchg
xlat
repz
mov
in
ret
dec
adc
push
fidivl
test
and
jl
adc
inc
pop
repnz
shll
mov
mov
or
test
stos
ja
stc
outsb
mov
cmp
pop
sbb
mov
lea
jb
sub
daa
pop
inc
gs
sbb
or
imul
test
aas
push
mov
sbb
stc
mov
pop
lret
push
out
push
pop
gs
push
fwait
rcll
adc
push
cmp
std
jne
repnz
movsl
dec
gs
andl
sub
fwait
inc
sub
hlt
int
mov
mov
fwait
nop
fstpl
add
ds
jge
mov
inc
inc
sub
lret
mov
mov
loopne
shr
insl
in
lcall
ljmp
push
ljmp
sbb
loope
dec
mov
push
daa
jb
inc
out
lret
rolb
xchg
ljmp
mov
pop
adc
push
mov
and
loop
jg
roll
ds
fldt
mov
pop
jmp
adc
inc
dec
cmpsl
subl
shll
repz
push
xor
and
adc
fisttpll
pop
pop
data16
lds
xchg
mov
push
lods
xlat
pop
in
nop
xchg
sarb
add
incl
push
mov
out
jae
adc
or
in
ljmp
jnp
std
hlt
sti
pop
ss
sub
pop
dec
adc
mul
outsl
xchg
leave
jne
enter
hlt
and
mov
sbb
mov
xchg
pop
xchg
push
dec
leave
outsl
cs
xor
cmc
daa
popa
jnp
pop
pop
ljmp
adc
dec
xor
sub
iret
xchg
sbb
add
rcl
fists
cli
cmpsb
lods
cmc
js
mov
rclb
xchg
dec
fstpt
adc
push
mov
sbb
and
stos
out
mov
lea
jp
xlat
pop
add
lods
in
stc
out
and
dec
addl
mov
dec
icebp
dec
and
fildl
lods
push
cmp
popa
xchg
std
adc
jg
daa
xchg
jge
mov
push
test
jne
loopne
in
sub
pushf
xchg
jecxz
pop
pop
clc
and
dec
jb
ffree
xchg
xchg
arpl
push
adc
mov
mov
outsb
push
sub
xchg
cmp
pop
push
stc
mov
cmp
pop
into
jbe
push
push
pop
cli
rorl
pop
inc
int
ret
add
cmpsb
ret
pop
insl
sbbb
push
mov
mov
lahf
add
sbb
jns
ds
sar
jge
movsb
mov
xchg
out
sub
cs
sub
cmp
jle
shrl
sbb
mov
sbb
in
mov
cmp
daa
and
mov
sub
cmp
enter
mov
js
xchg
mov
xchg
dec
jb
push
add
inc
or
adc
mov
mov
loope
imul
and
mov
fwait
push
add
in
notb
ss
or
xorl
cmovle
dec
and
and
cli
gs
mov
fs
sub
nop
jns
mov
call
icebp
jmp
inc
cmp
loopne
stos
mov
ret
aaa
add
repnz
mov
push
test
fcmove
xor
scas
lahf
cmp
mov
mov
inc
repz
cs
scas
adc
ds
dec
add
inc
icebp
je
sbb
fiadds
sbb
push
inc
gs
rorl
mov
push
and
clc
es
jae
movsl
mov
ljmp
xchg
fs
popf
ret
mov
push
or
je
or
pusha
or
gs
shlb
mov
lea
popf
adc
mov
mov
lahf
lcall
in
push
int3
xchg
fwait
adc
ds
adc
in
mov
pushf
adc
mov
enter
xchg
sub
cmp
cmp
cmp
mov
push
dec
add
cmp
pop
mov
fnstcw
fwait
dec
loopne
sub
mov
leave
shrl
jae
sbb
dec
sub
outsl
pop
push
adc
movsb
cltd
inc
cmp
rcll
out
xchg
inc
cwtl
push
pop
pop
lret
and
pusha
pop
lds
pop
mov
imul
xor
ffree
mov
sti
xchg
push
inc
mov
lds
jnp
mov
fisubl
lods
jle
push
sahf
imul
or
push
scas
push
inc
xorb
call
fisubrl
xor
je
data16
mov
pop
pop
mov
andl
sbb
out
inc
orl
sub
insb
fldl
stos
pusha
imul
or
mov
lahf
mov
cmpsl
inc
pop
loopne
pop
adc
ljmp
call
sbb
lcall
cs
addr16
xorl
adc
lods
shrb
cmp
sbbl
push
imul
ds
sbb
pop
or
cmpsb
and
add
push
cmp
fcomps
or
fs
mov
ficoms
lock
mov
enter
test
mov
bound
cmpsl
xor
leave
mov
sub
inc
sub
dec
testl
aad
cmp
cmpl
jmp
or
test
push
lea
mov
fs
xor
ss
aam
ret
add
aad
dec
inc
add
std
rcr
jg
out
test
adc
int
test
inc
call
mov
movsl
loope
cmp
ds
add
orb
push
pop
mov
pusha
mov
out
push
dec
in
loope
xchg
les
cmpsb
mov
jnp
push
lcall
data16
adc
jmp
add
mov
sbb
push
jg
or
jne
push
xor
arpl
mov
nop
mov
push
xchg
dec
nop
or
and
jp
hlt
or
aaa
add
clc
mov
call
fcompl
pop
das
jne
cs
and
enter
jecxz
rolb
sub
mov
inc
add
popa
dec
push
jns
xor
inc
push
loope
fcomip
push
hlt
repnz
lds
in
aaa
aas
bound
cld
sub
push
lods
or
sub
iret
cmpsb
push
sub
dec
cmc
popf
add
xlat
pop
and
popa
xchg
mov
mov
xchg
out
cmpsl
in
movsb
repz
loope
jmp
jg
pop
cld
inc
push
rolb
add
mov
pop
insl
loope
mov
jns
ret
inc
aam
jge
lahf
pop
cmp
lea
popf
lds
popf
sbb
icebp
nop
mov
push
xlat
adc
xchg
cmp
in
or
mov
jle
les
push
inc
sbb
test
je
mov
fwait
jbe
rep
test
dec
sti
xor
pop
lret
push
and
adc
and
xor
std
cmp
jp
push
pop
out
jb
cmp
sbb
cmc
xor
dec
jb
mov
in
clc
test
add
jp
sbb
or
rep
cld
xchg
fimull
lret
pushl
xor
sub
push
insb
in
imul
dec
add
insb
iret
jae
stc
leave
popa
cwtl
aaa
movl
mov
or
xor
cld
jae
notl
sbb
das
add
jmp
ljmp
pop
mov
inc
adc
push
push
inc
mov
jbe
cmp
icebp
loop
mov
xor
mov
pop
push
cmp
push
pop
pop
or
jae
aas
sbbl
add
pop
dec
sbb
imul
fwait
jne
ret
push
xchg
inc
push
and
add
dec
ja
out
enter
shl
or
xor
enter
sbb
pop
pop
jns
push
es
das
push
movsb
xor
and
xor
xor
push
dec
test
leave
cmp
sbb
fsts
fnsetpm(287
cmp
dec
daa
lock
divps
xor
cmp
push
addr16
std
sub
push
out
fildll
aaa
add
xchg
sbb
ret
lds
movb
pop
iret
sarb
xchg
les
inc
mov
jns
and
in
subl
jbe,pn
hlt
pop
sar
sbb
das
jg
jmp
mov
daa
cmp
sbb
push
xchg
mov
popf
mov
push
sub
js
lods
shlb
push
popf
jle
leave
pop
mov
setl
shl
mov
popf
mov
in
mov
enter
out
pop
inc
pop
lods
mov
push
loopne
xorb
aas
cwtl
jge
test
inc
pop
pop
push
js
jp
fs
mov
out
sbb
mov
sbb
inc
inc
cmp
clc
push
push
adc
and
adc
addl
pop
add
sbb
lret
inc
add
cmp
in
xchg
and
pop
adc
flds
outsb
sub
push
mov
lods
jbe
hlt
lret
push
sbb
dec
orb
nop
inc
inc
bound
je
jne
pop
mov
xchg
in
cld
add
push
stos
movsb
add
mov
inc
sbb
inc
mov
pop
ds
pusha
jle
inc
dec
test
pop
pop
mov
loope
add
xchg
test
and
sbbl
pop
sbb
scas
aas
leave
in
inc
xadd
loopne
jmp
sbbl
lret
int3
stos
rorb
mov
mov
aad
mov
jno
sub
repz
test
push
push
cmp
pop
push
pushw
and
xchg
and
loope
out
test
mov
mov
mov
ret
popf
cmpsl
icebp
sub
das
or
lods
mov
fstpt
mov
adc
mov
mov
testb
sahf
add
cwtl
jo
lds
clc
iret
sub
gs
push
rcrb
fnsave
mov
repnz
insb
and
js
xchg
xchg
mov
push
fdivrp
cmpsb
iret
lret
add
in
movsl
in
repnz
in
and
sbb
push
jo,pt
call
mov
repz
cmpsl
lods
or
insl
xchg
das
roll
test
mov
std
int
add
cmp
fidivl
fidivl
test
mov
pop
xor
pop
fldt
stos
mov
mov
push
ds
out
mov
adc
cmp
movsb
cmp
push
dec
pop
pop
lock
inc
cmp
sbbb
jno
mov
cmc
xchg
push
into
repz
popa
pop
inc
push
loope
add
xor
dec
rcrl
leave
xchg
pop
fistpl
add
outsl
sbb
mov
mov
adc
outsl
pop
jne
sub
pop
pop
call
dec
or
lahf
and
aas
lock
arpl
pusha
push
ja
lock
sbb
test
fnstenv
movsl
insl
outsb
js
inc
xor
ret
pop
in
shlb
fidivl
pop
sti
ja
lea
and
fcomp
jle
fldt
add
jmp
shr
rcl
sbb
dec
sahf
test
test
xchg
xchg
in
loopne
gs
clc
fidivs
or
test
sbbl
xchg
hlt
inc
js
addr16
inc
sub
mov
add
pop
mov
xor
ffreep
data16
pop
ret
jg
movsl
pop
cmp
pop
popa
insl
es
outsb
push
movsb
leave
add
jmp
fisubl
mov
xorb
mov
lods
or
sbb
jb
sub
sbb
out
shrl
add
xor
lea
leave
fdivrl
ja
xchg
mov
enter
mov
xchg
add
mov
decb
jl
xor
xchg
cmpsl
inc
into
mov
mov
push
or
add
fisubrl
sub
insb
or
aas
pop
test
in
jb
daa
mov
adc
jge
push
setb
sti
mov
shrl
out
andb
lahf
cmp
push
xorl
dec
stos
in
jg
js
gs
inc
dec
dec
jecxz
in
ss
sbb
dec
test
mull
mov
mov
xor
inc
inc
icebp
jbe
into
mov
push
and
push
adc
mov
leave
cltd
xor
inc
sbb
and
mov
lahf
push
jnp
lea
xor
shrb
lret
adc
xor
push
pop
jnp
xchg
push
or
dec
fistps
fstpl
bound
sbb
xor
xor
fcomps
leave
adc
push
ret
xlat
mov
call
xorl
es
and
jmp
test
sahf
std
cmp
mov
xor
mov
jno
dec
jne
add
in
or
imul
testl
aam
and
xor
lret
hlt
into
clc
into
jmp
cld
imul
imul
test
icebp
sahf
dec
mov
mov
mov
mov
xchg
popa
std
xchg
data16
mov
lods
sbb
mov
bound
out
xor
and
lret
int3
mov
jg
fiaddl
xor
mov
jne
push
adc
imul
mov
jns
and
jg
in
sbb
das
lock
rcrb
leave
mov
adc
jae
mov
cmpsl
xlat
imul
fsubr
sbb
jge
clc
dec
stos
shrl
fidivrl
mov
sbb
xor
ja
decl
ret
imul
movl
fwait
add
mov
cmp
sub
pop
mov
pop
fsubrp
outsb
fstpl
out
sbb
push
dec
jns
test
aas
adc
lods
mov
mov
mov
jmp
fprem
pop
push
pushf
ds
cli
mov
hlt
xchg
sbb
sbb
pop
and
cld
xchg
ljmp
pop
xor
dec
and
orb
jl
stos
jp
mov
push
sub
mov
jno
push
lock
out
lods
shl
test
dec
xor
jnp
add
dec
push
in
mov
adc
or
xchg
and
test
fstl
cmp
rcr
add
fwait
out
mov
mov
cmc
ret
insl
pushf
sub
stc
cli
repnz
out
jmp
xor
mov
xor
ss
push
outsl
movsb
lock
pop
push
test
insl
add
imul
or
ljmp
pop
jne
cli
fisubs
and
hlt
cmc
nop
fs
icebp
push
in
mov
cwtl
gs
insb
dec
test
rcr
and
ljmp
push
sbb
mov
jo
inc
fsubr
insl
fidivrs
shrb
inc
xor
add
mov
or
arpl
xor
or
mov
adcb
push
jb
dec
lds
sbb
ficoml
mov
sub
jns
lods
fstps
mov
mov
push
cmpsb
lock
fldt
fwait
or
test
cld
and
loopne
lcall
into
fldcw
jp
mov
jle
dec
aas
adc
mov
jns
into
jmp
fwait
jb
aad
mov
insl
dec
dec
leave
andb
jbe
cmc
inc
xchg
stc
sbb
push
push
pop
cmp
ja
xchg
push
and
mov
and
inc
pop
push
pop
dec
lea
gs
iret
fisubl
pushf
or
js
dec
aaa
cli
mov
lock
shlb
lahf
frstor
add
cwtl
push
sbb
je
gs
push
mov
mov
xor
shrb
fildl
sub
rcrl
lret
and
dec
outsb
fistpll
xor
jno
aaa
icebp
sub
cmp
fsubs
mov
push
sbb
fdiv
mov
or
fldcw
xchg
cmp
dec
fistpll
mov
fistpll
out
jnp
out
mov
in
mov
mov
mov
sahf
pop
mov
adc
pop
cmpsl
xor
callw
adc
lahf
sar
xor
cmp
das
andb
sub
inc
push
push
outsb
or
cld
leave
int
popf
sub
stc
rorl
push
cmp
mov
dec
mov
ja
sub
stos
fildl
fists
cmp
and
cld
mov
fs
and
lret
dec
ds
inc
pop
mov
push
push
das
lahf
ret
dec
jp
mov
in
stos
addb
push
xchg
fcmovb
dec
cmpsb
or
test
xor
xchg
sub
sbb
loop
xchg
xchg
mov
xor
jnp
cmc
les
xchg
inc
add
xor
xlat
mov
fadds
scas
mov
push
cmp
jnp
or
aaa
js
add
stos
outsl
cmp
faddl
fldl
test
jo
jbe
aam
test
roll
and
cmp
call
adc
lods
ds
movsl
xor
cmp
lods
les
fwait
and
xchg
call
mov
inc
push
lea
pop
xor
dec
dec
cmpsb
lret
inc
aad
pushf
and
popf
jecxz
xchg
xchg
xor
cwtl
cmpsb
jl
xchg
cmpsb
sbb
push
add
jnp
bound
inc
add
daa
pop
or
jb
push
mov
daa
push
dec
inc
jmp
ljmp
mov
xor
jmp
mov
mov
mov
js
sub
bound
adc
push
movsl
xor
ret
in
ljmp
subb
std
add
pushf
stos
xlat
push
stc
push
lcall
cld
push
rorb
and
mulb
mov
push
outsb
and
loop
sbb
add
mov
movsb
lods
sbb
fxch
or
test
xlat
jbe
std
jb
stos
loop
out
daa
mov
sub
push
icebp
sub
iret
out
js
pop
sbb
outsb
mov
jo
rclb
cmp
cmp
add
inc
std
es
inc
pop
lret
mov
lcall
dec
mov
scas
js
xor
in
lret
sbb
call
bound
stos
cmpsb
in
mov
pop
mov
xorl
sbb
mov
xlat
or
into
jge
pushl
fdivl
dec
sub
xchg
mov
mov
cmc
call
and
sbb
mov
shlb
adc
pusha
jns
subl
fabs
or
xchg
sub
mov
adc
dec
lahf
fs
cmc
je
jno
in
fsts
adc
add
scas
dec
pop
outsl
jmp
add
lods
and
xchg
and
scas
jns
leave
bnd
aad
pop
cmp
sub
push
push
jecxz
fstpt
cltd
scas
adc
lcall
imul
mull
cmp
ret
add
addl
adc
les
out
push
push
out
push
push
xor
bound
out
scas
outsl
and
cli
cmp
or
addb
xor
mov
push
std
xchg
or
sub
iret
hlt
nop
mov
dec
cltd
out
pop
adc
mul
subl
cmpsb
aaa
fcompl
pop
jb
cmp
or
or
cs
insb
cmpb
mov
mov
push
cmp
or
ret
sbbl
repz
inc
mov
push
in
mov
push
push
jg
and
lock
repnz
incl
out
repnz
rcrb
xchg
mov
subps
fcomi
and
push
sbb
call
rcrl
sbb
and
mulb
fneni(8087
jne
or
roll
cltd
fstl
cs
xchg
push
notl
dec
lahf
push
xchg
not
movsb
and
out
stos
fs
and
mov
lods
popa
movsb
mov
enter
or
into
lock
rsqrtps
jbe
mov
pop
cmc
push
or
pop
andl
cmp
dec
cmpb
add
mov
or
dec
test
lods
push
push
jp
add
cli
mov
xor
std
inc
in
cmc
sbb
sbb
arpl
in
pop
imul
out
push
loope
xchg
add
fbld
dec
pop
or
add
in
into
stos
dec
sub
stc
lcall
in
pop
aam
jmp
mov
mov
shrb
jne
arpl
sbb
imul
inc
add
jp
jns
cld
mov
aad
mov
mov
adc
sarb
push
daa
add
pop
cwtl
fildll
cmp
or
and
fwait
pop
cmpsl
push
ret
mov
mov
jb
push
sbb
mov
in
pop
dec
aad
jecxz
pop
push
add
jl
lret
cmp
je
call
jl
fnsave
pop
jns
push
add
jle
enter
shll
jg
pop
addl
push
or
jmp
xchg
and
int3
lods
inc
sbb
in
das
push
cmp
cmp
mov
push
xor
icebp
les
push
jbe
pop
pop
test
leave
fmul
jo
cli
xchg
in
push
int3
pushf
cmp
jne
push
cmpsb
push
xchg
fistpl
inc
mov
dec
dec
cmp
inc
in
leave
and
jns
aaa
cmp
add
jbe
sahf
addl
adc
insl
xor
outsl
ljmp
ret
jns
jo
mov
in
mov
insl
stos
mov
sbb
mov
std
dec
pop
xlat
sub
push
mov
jmp
cmp
adc
cmp
pop
jg
cwtl
xor
jnp
push
loopne
outsl
imul
jae
dec
mov
mov
jle
lods
ret
in
mov
push
adc
test
sub
pop
pop
fidivl
call
push
inc
lcall
push
std
cmp
mov
sbb
and
or
push
push
out
pop
sbb
cli
cltd
cmp
jnp
mov
and
mov
loope
arpl
mov
lea
add
aam
cmp
outsl
lock
adc
leave
adc
mov
fcomps
push
pusha
jae
mov
mov
and
fcomps
dec
cmp
out
idivl
repnz
mov
mov
outsl
mov
adc
nop
ds
out
mov
dec
outsl
rorl
repnz
lret
in
into
push
lods
jns
inc
jmp
mov
pop
or
inc
in
repnz
sbb
xchg
shrl
xor
cmp
je
xor
and
add
push
shll
mov
jne
mov
xchg
inc
fmull
pop
mov
sbb
movsl
lahf
push
adc
sub
bound
outsb
in
loope
movsl
andl
ldmxcsr
jno
nopl
shlb
cmp
add
pop
sub
inc
in
xchg
movsl
inc
outsl
cwtl
lahf
jne
xchg
cmpsl
mov
sub
xchg
jae
mov
sti
or
dec
arpl
jnp
ljmp
xchg
pusha
xor
std
jno
movsb
lahf
push
call
inc
test
test
mov
ds
adc
sub
dec
data16
movsb
shrb
pop
popa
clc
das
or
scas
xor
xor
lahf
loopne
incb
mov
out
xchg
xchg
push
xchg
xchg
xor
inc
xchg
pop
jo
adc
push
mov
add
push
mov
in
outsl
cmpb
mov
cmp
pusha
add
out
push
lods
addb
dec
loop
mov
jo
push
mov
scas
dec
testb
dec
inc
push
movb
adc
dec
mov
loopne
push
xor
outsl
popa
xchg
pop
mov
cmp
push
jb
rorb
push
and
mov
insb
cmpsb
fisttpl
push
shll
dec
sbb
cmp
inc
jg
pusha
insl
enter
mov
rcrl
mov
jp
push
dec
std
fsub
xlat
pop
jnp
popa
cld
lcall
imul
xor
enter
enter
inc
xor
and
pushf
aaa
mov
repnz
sbb
add
dec
adc
inc
and
mov
int
lock
xor
and
je
dec
mov
push
es
sbb
popf
movsb
xor
ret
sub
push
cwtl
mov
ficoms
ss
orb
stc
sub
pop
sarb
shr
repz
xor
mov
daa
pop
hlt
xchg
jg
mov
xchg
roll
cmp
out
rcrl
sbb
xchg
dec
out
imul
dec
mov
scas
xor
lods
jne
stc
divb
loope
push
jg
aas
cmp
pusha
sahf
push
adc
sbb
loop
rcll
cmp
jo
jg
dec
pop
adc
cmp
lret
imul
outsb
xlat
inc
mov
mov
mov
adc
out
mov
aas
mov
jecxz
inc
inc
hlt
cmp
pusha
int3
adc
into
mov
push
pop
fistl
cmc
jae
push
cmp
adc
fcoms
mov
mov
cmp
push
mov
xor
adc
aad
int
fstps
cld
jns
xchg
or
subl
les
cltd
fstl
repz
jecxz
cwtl
outsb
int
and
xchg
xor
and
fcmovu
aam
push
or
int
adc
nop
fdivl
xchg
or
adc
or
mov
xlat
mov
xor
mov
rorl
dec
fiaddl
icebp
pusha
fistps
leave
stos
sbb
into
sahf
jns
aam
int
enter
push
das
mov
and
jecxz
nop
mov
scas
mov
cld
pop
loopne
push
sub
stc
fildl
movsb
sbb
out
dec
cli
addr16
les
stos
les
add
add
xor
mov
and
sar
in
sbb
in
test
xor
xor
push
cmc
xchg
sbb
push
lcall
notl
adcl
inc
jl
xor
sbb
scas
inc
in
repz
in
pop
adc
cpuid
inc
sarb
pop
xchg
nop
mov
shlb
xlat
shlb
jns
enter
loope
inc
and
filds
and
sbb
cmp
sub
cs
push
dec
cltd
dec
xor
cmp
mov
xor
aas
lret
mov
adc
push
or
add
pushf
rolb
cmp
sub
jns
test
jge
test
or
jbe
aas
xchg
test
movsl
cmp
xlat
pop
jmp
and
clc
xor
inc
aas
divb
sub
jb
sub
arpl
sub
jae
stc
adc
lahf
lds
aas
jle
mov
subb
jae
add
dec
sub
xchg
or
dec
adc
ffreep
cli
ss
les
popf
push
mov
mov
cs
test
movsb
roll
sbb
push
fsubr
repz
sbb
popa
dec
lea
shrl
jns
arpl
arpl
pop
call
cmp
add
les
mov
rclb
and
shl
jbe
xor
mov
push
xor
insl
bound
popf
imul
mov
dec
movsl
lods
push
cmp
enter
mov
aas
sbb
adc
mov
jle
mov
cmpsl
mov
fdivrl
dec
arpl
nop
mov
and
mov
mov
mov
cmp
aas
neg
jne
shlb
inc
push
sub
mov
lret
adc
repz
xor
pushf
into
jg
test
sub
sub
lcall
cmp
xor
gs
mov
pushf
pop
punpckldq
scas
pop
outsl
fsubrl
hlt
jg
loop
and
mov
push
mov
dec
push
outsb
ret
cmp
test
stos
imul
mov
mov
inc
das
and
dec
aam
loopew
ja
das
jns
mov
mov
adc
pusha
sub
jl
xor
jp
sbb
iret
call
push
push
imul
pop
cltd
js
dec
rol
shll
test
out
sbb
mov
push
addb
sbb
push
cwtl
ja
sbb
xchg
fs
pop
xchg
popa
mov
cwtl
mov
int3
int
inc
cwtl
insb
dec
stos
jecxz
dec
mov
out
adcb
ja
adc
out
scas
or
xor
xorb
mov
xchg
mov
sbb
rorb
es
mov
stos
flds
mov
repnz
in
cmp
hlt
xor
daa
popa
imul
stos
es
inc
push
jo
dec
stos
mov
add
mov
inc
out
test
pop
push
jecxz
scas
sti
fbstp
fdivl
add
das
push
iret
sarb
popf
sbb
push
push
mov
mov
lret
cmp
add
cmp
fcom
jecxz
dec
or
mov
jae
adc
dec
cmp
cli
pop
sub
in
jo
cmp
jge
loope
add
pop
add
shrb
push
aas
dec
and
mov
pop
inc
test
mov
int
mov
push
jle
dec
fbld
inc
int3
push
faddp
jb
cltd
add
inc
xor
push
lcall
stos
sub
rcl
xchg
jb
into
mov
dec
scas
mov
pop
bound
sbb
rcrb
inc
or
js
andb
mov
notb
in
xor
push
xchg
sbb
or
aam
dec
inc
imul
mov
jnp
cmp
ucomiss
adc
fistpll
pop
orb
dec
cld
or
mov
cmc
mov
and
pop
imul
mov
xor
push
xor
and
std
pop
push
jns
ret
and
test
test
inc
sbb
and
int3
outsl
jo
test
jge
inc
fwait
pop
es
loop
int3
rol
pop
hlt
ljmp
dec
mov
sbb
sbb
or
les
aad
lods
and
jae
sbb
mov
je
adc
sbb
lock
idivb
jnp
xor
inc
test
out
inc
fs
inc
aas
cmpsb
ror
xor
mov
faddl
mov
inc
icebp
mov
pop
imul
xor
out
sbb
jae
push
mov
mov
divw
pop
loope
cmp
pop
push
jns
cmpb
add
enter
add
popf
pop
shrb
inc
int
pusha
getsec
movlps
adc
subl
out
jno
jb
push
imul
aas
in
inc
out
leave
outsl
movsl
rcrb
ljmp
cltd
daa
cli
loopne
or
out
shll
scas
mov
inc
aas
add
aaa
adc
xchg
faddp
aam
fucom
int3
pusha
and
icebp
in
fwait
dec
negb
popf
mov
rorb
out
cli
syscall
cltd
jno
inc
jnp
shll
aam
fld
jae
sub
js
dec
push
das
sbb
push
sbb
outsl
mov
ret
pop
jle
inc
aad
cwtl
icebp
mov
lds
lea
movsl
cmp
ds
notl
stos
cmc
jl
shll
or
or
pushf
add
add
xchg
xchg
mov
cli
jae
cmpsb
fcoms
mov
lahf
test
mov
mov
les
leave
mov
out
test
stos
out
jae
jns
dec
xchg
push
jg
pop
sbb
bswap
push
out
test
rcll
cmpsb
scas
test
sbb
lcall
je
pop
jecxz
cmp
negb
sbb
sub
inc
inc
pop
dec
xchg
add
dec
xchg
aam
xchg
mov
pop
insl
adc
fadd
sbb
xor
pshufw
adc
mov
scas
cmpb
gs
lahf
and
mov
fcmovnb
das
xor
mov
cmp
adc
adc
sbbl
mov
and
pop
loop
or
repnz
inc
sub
mov
iret
push
fwait
aad
jle
cmp
push
push
and
mov
std
ja
test
xor
mov
dec
clc
cs
leave
and
data16
adc
sbb
cmp
mov
or
es
mov
loope
mov
shlb
andb
adc
out
pop
xchg
dec
push
jl
xchg
or
in
les
aad
jns
add
insb
sar
ror
lret
ja
cmp
pusha
add
int
cmp
fcompl
push
movsl
std
mov
jecxz
xor
popf
adc
pusha
aaa
pop
repnz
std
insl
sahf
push
orl
loopne
out
fstps
adc
push
xchg
iret
sub
int
sub
fildll
adcl
mov
add
iret
adc
inc
and
in
or
adc
loopne
dec
popf
imul
cmp
out
or
sub
clc
mov
mov
dec
add
popa
sbb
aaa
out
pmuludq
repnz
mov
push
sub
cltd
fdivrl
xchg
mov
xor
jbe
add
js
call
pop
fcomps
xchg
inc
mov
add
loope
xchg
sub
and
fidivrl
inc
jns
push
dec
ror
jmp
jp
xorl
pushf
jmp
rorl
out
outsl
sub
jne
or
push
push
mov
push
dec
fdivrs
enter
mov
add
dec
add
leave
les
sbb
sbb
xlat
fdivrl
or
fimull
aad
jae
or
xor
push
ljmp
jno
mov
xchg
sub
dec
idivl
push
subl
lods
and
cmp
push
aas
cmpsl
clc
enter
stos
dec
pop
push
adc
dec
out
fwait
rcll
shll
and
mov
xor
push
mov
or
jmp
push
push
xchg
cmp
data16
push
jae
mov
call
ja
shlb
and
inc
fmuls
incb
and
inc
stos
arpl
jge
pop
leave
add
mov
notb
packsswb
test
mov
mov
lock
dec
add
cmp
and
les
pop
cmp
arpl
inc
xchg
lds
pop
cmovg
imul
xchg
call
in
push
scas
and
movsb
aaa
ja
int
inc
cmpl
pop
das
mov
sbb
icebp
or
adc
xchg
ljmp
repz
xlat
repz
mov
rorb
out
lcall
jno
out
adc
mov
jg
push
mov
add
out
out
out
mov
inc
jno
xor
pop
rclb
pop
test
rcrb
jbe
push
xchg
pop
int
mov
mov
dec
xchg
daa
sbb
pop
clc
shrb
mov
cmpsl
dec
and
sahf
bound
xchg
lods
out
fadds
inc
loop
inc
stos
dec
scas
sbb
pusha
fisubrs
icebp
fildll
test
insl
and
jnp
and
bound
jne
jne
fsubrs
int3
out
jle
andb
in
push
or
fcoml
adc
push
insl
mov
loope
sbb
std
add
dec
xor
cwtl
orb
push
jle
dec
sub
add
cltd
adc
jge
scas
cltd
xor
ret
cmpsl
sub
mov
mov
jecxz
enter
ss
negb
fldenv
fbld
repnz
lock
seta
stos
data16
das
popa
or
mov
fistpll
jmp
test
inc
in
xchg
or
aas
ret
popa
push
or
shlb
jnp
jecxz
in
jle
or
lret
in
in
cmp
xor
stc
ret
pop
stos
loopne
in
shll
add
adc
mov
scas
addl
repz
shr
pop
pushf
fsubl
ds
cmp
std
inc
dec
out
ret
pushf
cwtl
addr16
les
das
sub
push
add
mov
pop
mov
les
pop
push
inc
mov
adc
bound
jle
or
into
jmp
xchg
dec
jmp
adc
scas
cld
dec
inc
inc
jno
daa
fucomip
inc
push
fwait
push
fwait
pop
cltd
cli
sbb
pop
rorb
leave
pop
cmp
mov
cmpsl
popa
mov
popf
into
mov
add
hlt
push
sarl
adc
loop
and
add
loop
xchg
das
sahf
jno
rorb
dec
movsb
xor
jl
mov
push
cld
movsb
pop
push
stos
push
cmpsl
movsl
std
pusha
ret
lret
inc
mov
sbb
xchg
dec
sbb
add
inc
mov
or
mov
sbb
hlt
pop
mov
push
cwtl
mov
adc
lret
or
dec
mov
lahf
push
call
jno
arpl
mov
pusha
lret
mov
jge
inc
hlt
idivl
or
or
inc
fstpl
nop
and
jns
pusha
in
loope
mov
scas
in
inc
jns
cmpsb
mov
push
enter
or
mov
dec
stos
popf
divb
push
pop
cs
bound
stc
dec
call
stos
push
cmpsb
outsl
dec
or
dec
ret
push
lcall
dec
mov
sti
popa
mov
lahf
jne
inc
fwait
lods
cmp
mov
imul
jmp
sbb
pop
sbb
mov
adc
jae
call
pop
imulb
cmp
pop
push
mov
add
pop
xchg
test
popa
xor
mov
test
adc
mov
jae
inc
sahf
push
sub
setge
sub
dec
mov
cwtl
jp
test
hlt
adc
add
mov
mov
pop
add
adc
mov
fldt
fidivl
cs
mov
xor
inc
inc
mov
test
mov
pop
inc
movsb
xchg
js
xor
xchg
xor
str
push
fiaddl
movsl
push
and
jbe
and
jne
cld
loopne
insl
subl
sbb
sbb
jmp
mov
xchg
xchg
dec
xorb
das
aad
jp
and
jl
jg
rolb
jecxz
outsl
push
xor
mov
mov
and
mov
adc
test
mov
adc
sbb
lcall
sbbb
mov
and
mov
dec
iret
lret
xchg
push
push
imul
adc
rol
sbb
adc
das
sub
mov
sbb
iret
out
add
inc
pop
sub
mulb
cli
lret
mov
xor
sub
aaa
in
and
dec
jno
test
pop
push
mov
lock
imull
sub
dec
jns
pop
scas
mov
add
sub
in
pop
rorb
ja
popa
mov
mov
push
dec
inc
jecxz
mov
popl
dec
out
mov
sub
push
sub
cwtl
and
jo
mov
jo
ret
jge
iret
lea
xchg
sub
lahf
xchg
mov
pop
jo
lret
mov
icebp
rorb
imul
pop
inc
jmp
dec
cli
push
insl
jecxz
jnp
jl
loop
mov
sub
lret
lds
ficoms
lret
out
negl
sub
dec
fs
repz
mov
sbbl
dec
test
inc
lahf
addr16
test
pop
mov
xor
in
pushfw
xchg
adc
pop
sbb
std
cli
inc
xchg
shl
add
pop
aam
movsl
cmc
or
lcall
cmpsl
jae
or
mov
roll
out
pusha
test
pusha
or
xor
xor
adc
sbb
sub
jle
xorb
pop
inc
pop
dec
movsb
jecxz
mov
cld
jbe
js
fidivl
subb
ror
cmp
xor
loope
mov
aas
insl
stc
test
insl
cmp
or
cwtl
xchg
jecxz
pop
insl
clc
aam
pusha
and
int
cmp
adc
cmp
pop
push
loope
xchg
jno
sti
out
js
inc
sarb
mov
xor
lea
sub
scas
dec
add
lods
cmp
movsb
jo
test
xchg
cmp
cmp
loopne
pop
popa
stos
sbb
mov
mov
aad
mov
aam
sub
cmpsl
ss
fdiv
test
je
cmp
jl
test
bound
iret
lods
dec
add
jno
rorb
push
dec
inc
dec
in
decl
xchg
add
jno
pop
scas
je
fmull
test
add
lret
lret
ljmp
mov
cmp
pop
sbb
xor
fisttpll
fdivs
ficoml
and
movsb
lea
mov
test
xchg
dec
lods
stos
mov
in
movsb
cltd
subb
mov
xor
subb
mov
test
movsl
push
add
cmp
sub
push
push
pop
adc
add
add
push
xor
push
sbb
adc
xor
out
out
out
xor
fsubr
rcrb
iret
mov
cltd
add
repnz
stos
mov
fidivrs
add
insb
stos
data16
shlb
and
lods
mov
outsl
insb
fistpl
add
add
out
shll
xchg
mov
rolb
jecxz
sbb
scas
pop
fcoml
shll
sbb
pushf
dec
adc
pop
xchg
xor
push
ret
loope
xchg
cwtl
cmpsb
in
xchg
icebp
orl
in
shll
xchg
push
mov
dec
scas
pop
sarl
add
loopne
mov
cmc
outsb
mov
cmpsb
mov
mov
xchg
add
xor
push
xchg
inc
xor
mov
aas
imul
mov
js
add
inc
rorl
ljmp
cmc
je
mov
xlat
cltd
jb
mov
aam
mov
mov
mov
add
hlt
xor
pop
je
loope
insl
and
sbb
loope
xchg
mov
arpl
jae
andl
jo
mov
dec
sub
xchg
cmp
aam
mov
pop
mov
or
outsl
push
jl
mov
or
into
stc
xchg
ret
sub
insl
pop
cmp
popf
lds
hlt
lret
lds
fiadds
jle
or
les
loopne
add
es
push
cmp
leave
push
sub
sub
xor
dec
fwait
xchg
imul
loop
popa
jns
push
lret
sub
pop
scas
add
and
push
push
xchg
adcl
push
test
xchg
shrl
je
push
cmp
and
ja
adc
imul
fucomp
push
repnz
cmpsb
push
icebp
cmp
pop
sbbl
mov
and
enter
dec
dec
mov
pop
jp
sbb
jno
jge
xor
ja
mov
clc
shl
sub
adc
mov
push
nop
bound
into
call
adc
adc
inc
dec
mov
xchg
mov
ja
call
aaa
es
jge
cwtl
insb
inc
and
daa
push
out
les
notl
stos
lcall
dec
or
lods
sub
loop
int
mov
or
sbb
dec
cmpsl
mov
loope
mov
xchg
jno
sbb
or
pop
cmp
xor
add
fs
push
dec
test
add
add
adc
loopne
stos
int3
push
lods
shr
insb
xor
mov
inc
addl
dec
mov
mov
cmpb
notl
es
jb
stos
addr16
sbb
adc
inc
insb
xchg
pop
ss
push
sbb
into
xchg
mov
test
int
cmp
cs
push
xchg
xchg
jecxz
push
xorb
repnz
divl
ja
dec
sbb
mov
loop
jp
and
xchg
and
xchg
lock
cmc
outsl
test
dec
call
out
orb
mov
dec
mov
add
cmp
ret
insl
loop
rclb
mov
jno
add
cld
push
cmp
lods
jns
int3
loopne
sarl
sahf
add
pop
sub
cld
mov
repz
shrd
inc
clc
nop
mov
cmp
xor
fsubrl
sbb
fisttpll
sbb
and
fstl
inc
fimull
outsb
leave
inc
mov
pusha
inc
and
outsl
xlat
lock
inc
fadd
and
jp
add
ja
cmp
xchg
scas
shlb
fdivrl
push
sahf
sbb
jge
inc
or
je
pop
pop
addr16
scas
sub
rcll
add
xchg
xchg
es
inc
jmp
mov
sub
push
aad
mov
xchg
call
xchg
arpl
fstpt
or
js
pusha
push
push
test
pop
cmp
pop
dec
pushf
mov
aam
lret
jl
inc
lahf
test
hlt
sahf
push
shlb
andb
clc
lea
fsubl
mov
fdivrl
jmp
push
inc
mov
mov
cmc
movhps
loopne
lods
push
out
andb
cmp
pop
aad
iret
pop
dec
or
mov
stc
fbld
cli
movsl
push
push
in
nop
dec
inc
test
pusha
pop
mov
inc
ret
fdivs
push
mov
and
adc
pop
add
dec
call
popa
xchg
or
out
xor
jge
sbb
and
fidivs
push
int
sbb
mov
fwait
out
scas
scas
push
fldl
insl
fsts
pop
and
fwait
pop
and
into
ds
cmp
insb
and
pop
add
mov
jo
push
cmpb
pop
jge
xor
test
mov
add
push
inc
mov
sahf
add
dec
pop
jmp
xor
jo
mov
mov
mov
mov
sub
and
cwtl
sbb
pop
inc
xchg
orb
stos
xor
loope
pop
push
shlb
mov
jnp
xchg
mov
mov
clc
les
lods
pusha
jmp
cmp
and
adcl
cmp
icebp
inc
scas
mov
pop
push
sbb
mov
fs
cmp
mov
mov
pop
sub
repnz
adc
mov
mov
lds
xor
lret
lcall
dec
iret
cmc
push
sub
ja
push
sbb
inc
cmpb
stos
xchg
and
jne
mov
scas
push
xchg
lock
pop
sub
test
or
int
or
into
push
jns
cmp
adc
pop
fucomp
xchg
arpl
sbb
aad
dec
sti
cmp
mov
cmp
cmp
lcall
pop
cli
cmp
mov
lahf
fidivl
and
cmp
iret
adc
cmp
popf
aad
sbb
cmp
sarl
mov
ficoms
fildl
inc
xor
mov
or
xchg
es
pop
mov
pop
fwait
pop
icebp
pop
mov
out
sbb
jecxz
push
mov
add
mov
and
dec
dec
leave
add
push
dec
sub
sbb
xorl
dec
jl
mov
cmp
push
call
in
cmp
mov
dec
mov
cmpl
js
test
cmpsb
lea
incb
sub
adc
arpl
sar
xor
and
mov
cmc
fistpll
jno
xchg
dec
jecxz
add
inc
nop
push
ds
popa
jne
cltd
mov
pushf
adc
dec
pop
jg
dec
sbb
inc
mov
xchg
subl
pop
jno
scas
mov
dec
adc
daa
pusha
sbb
mov
mov
jns
mov
or
aaa
mov
leave
mov
mov
lds
and
and
idivl
cli
mov
test
movsl
cmpsl
jle
inc
xchg
jge
setne
es
mov
out
mov
insb
mov
repz
push
sbb
and
hlt
jnp
xlat
jo
jno
pop
loop
data16
dec
jns
inc
in
pop
inc
xchg
sub
inc
mov
push
outsb
sbb
xor
pop
xchg
mov
shll
subl
sub
fldenv
ljmp
xchg
nop
dec
std
arpl
lret
and
out
rorl
add
jg
bound
xor
pop
pop
add
pushf
and
jmp
mull
mov
outsl
leave
sub
xor
es
mov
add
xchg
mov
xor
mov
dec
xor
imul
and
pop
movsb
adc
in
cmpsl
or
fistl
adc
jmp
lock
ja
cmpsb
in
testb
hlt
test
or
adc
popf
pop
scas
adc
loope
xlat
les
jl
lret
popa
pop
das
pop
nop
mov
xchg
fidivrl
mov
mov
and
movsb
test
add
ja
jle
fists
test
and
mov
add
add
js
inc
xchg
add
subl
outsb
mov
pusha
pop
icebp
cmpsl
cld
dec
or
mov
les
in
and
ss
push
cmp
enter
and
inc
bound
push
or
loop
ret
pop
in
adc
iret
dec
sub
jp
and
dec
pushf
shll
sbb
or
jbe
pop
add
pop
mov
adc
enter
xchg
or
je
cli
jb
mov
xor
cli
adc
fdivrp
adc
ret
mov
mov
rcll
mov
pop
mov
inc
mov
sbb
push
or
dec
in
iret
xchg
adc
sbb
sbb
mov
mov
jmp
out
addr16
and
mov
inc
add
in
outsb
sbb
or
and
lcall
xchg
ret
pop
in
xor
xchg
cld
and
pop
push
xor
ja
add
cmp
sub
mov
jg
jmp
xor
or
xor
gs
icebp
jns
jno,pt
fsubrp
sub
andb
inc
pop
dec
pop
and
sub
loopne
fsts
lds
pop
inc
enter
and
cmp
cmp
jg
jge
fldl
andb
ret
or
clc
pop
inc
or
int
clc
push
jnp
xor
popa
aad
add
dec
cmp
push
clc
ret
push
stos
pop
sub
and
aad
and
adc
mov
fdivr
mov
iret
xchg
mov
push
in
mov
mov
inc
add
or
sub
lods
rclb
mov
mov
mov
jge
push
fdivrl
arpl
enter
push
cmp
mov
sarb
add
js
out
js
mov
loope
add
sahf
shlb
loop
mov
and
into
imul
std
pop
inc
iret
mov
dec
push
lret
lahf
add
and
inc
jle
pusha
fxtract
in
mov
xchg
mov
stos
and
rolb
dec
sbb
pop
jle
adc
pop
addr16
ljmp
or
jp
loopne
mov
ret
pop
dec
loopne
scas
les
mov
jbe
cmpsl
xchg
lcall
lock
adc
mov
xchg
clc
jne
repz
movsl
mov
addr16
outsl
or
mov
adc
push
sar
rorb
sbb
fdivrs
xchg
cmp
out
fbstp
jnp
outsl
sub
loope
cmp
jae
jbe
xchg
xchg
shlb
xchg
dec
aas
mov
in
popf
in
or
inc
aad
add
cmp
cld
and
mov
mov
inc
or
sub
roll
mov
xchg
sti
inc
adc
dec
mov
repz
popf
pop
cli
mov
jecxz
mov
xor
call
jo
lea
and
es
xor
cmp
mov
imulb
pop
push
scas
cmpsb
into
dec
or
shlb
dec
push
sub
aad
lds
push
sbb
adc
lds
sarb
push
add
clc
lods
pop
xor
test
imulb
inc
and
in
mov
sbb
filds
lcall
inc
cmpsl
mov
mov
mov
lods
hlt
rorl
aas
and
addb
xor
arpl
ret
xchg
or
sahf
mov
das
loope
xchg
jae
cmc
pop
outsl
and
popa
jp
das
inc
in
sub
mov
jnp
xchg
jle
negl
out
xchg
orb
bound
and
push
loopne
pop
add
ror
fs
fnstcw
js
in
push
lods
popl
jb
movsb
icebp
in
sbb
xor
outsl
in
xchg
pop
adc
cmp
icebp
push
pop
adc
push
pop
iret
push
shl
cltd
push
jl
push
clc
inc
clc
push
mov
pushl
out
lods
inc
jnp
jl
inc
dec
pop
inc
bnd
rorl
adc
cmp
das
and
and
push
xlat
bound
mov
enter
adc
fldt
adc
sbb
scas
xor
sub
hlt
in
add
out
nop
jo
loope
insl
faddp
pop
test
pushf
mov
ljmp
lret
and
jo
loopne
imul
shll
mov
push
jnp
inc
ljmp
mov
addr16
loopne
xchg
xchg
jno
icebp
sub
repz
fs
xlat
ret
push
push
in
idivl
or
sbb
ret
mov
adc
daa
xchg
mov
adc
lcall
test
repnz
out
inc
inc
stc
je
sti
sti
pop
aad
sub
fnsave
loop
add
xor
jnp
movsb
movsl
cli
mov
push
mov
cmpsb
dec
add
xor
xchg
cmp
imul
pop
dec
daa
daa
leave
inc
aaa
mov
cmp
and
insl
inc
add
mov
push
es
xor
adc
les
fisttpl
pop
mov
lcall
cwtl
xchg
xor
popf
bound
push
xchg
pushf
push
jnp
sub
fadd
sbb
daa
inc
enter
mov
lods
mov
add
jecxz
jno
inc
enter
hlt
rcll
jmp
xchg
pop
mov
outsb
inc
mov
adc
sbb
cmpsb
and
inc
roll
add
jbe
and
adc
or
push
js
xchg
mov
cmpb
dec
arpl
or
adc
inc
xchg
cs
out
das
std
filds
cwtl
mov
cmp
data16
inc
push
mov
loop
std
mov
cmp
jl
dec
push
shl
scas
pop
repnz
fcmovb
movsb
xchg
dec
add
xchg
push
inc
leave
mov
into
mov
scas
fsubs
adc
add
enter
or
nop
add
inc
dec
xchg
int3
shr
data16
jae
daa
inc
lret
ficoml
fstpt
mov
lcall
ja
sub
push
mov
rorl
sub
cmp
fucom
aas
push
out
out
cltd
clc
aas
gs
fisubrs
nop
pop
jne
enter
stc
push
mov
fwait
or
xchg
test
in
lods
sub
push
or
in
sub
shrb
rol
rorb
aaa
fcoml
lahf
out
dec
push
sub
adc
outsl
or
in
subb
mov
fbld
lret
mov
adc
mov
mov
imul
push
and
lods
sub
cmp
popf
inc
and
xchg
mov
add
dec
adcb
push
gs
mov
xchg
jns
add
mov
mov
pop
xchg
stc
or
insb
scas
popa
loope
and
cltd
leave
xchg
dec
inc
mov
xchg
sbb
add
lds
jo
into
push
cmp
jb
scas
sahf
sub
mov
fcomps
jmp
test
xor
jb
pop
enter
das
sahf
pop
xlat
jge
mov
call
fmulp
sbb
or
scas
into
lret
repz
loop
cmp
iret
and
je
dec
rcl
sbb
adc
cs
mov
test
sarl
fnstenv
or
in
sbb
mov
pusha
inc
dec
cmp
or
jecxz
push
pop
jge
stc
mov
movsl
and
mov
push
xor
fs
loopne
jne
outsl
mov
aaa
push
xor
in
leave
push
std
pop
jns
into
enter
push
cmp
jb
adc
hlt
adc
and
push
insl
bound
inc
mov
dec
mov
mov
xchg
pop
push
dec
mov
ret
pop
add
enter
pop
mov
pop
xor
std
aad
fisttpll
xchg
test
sbb
mov
not
cld
mov
lahf
push
nop
scas
or
jg
cmp
repz
jle
rorb
and
mov
outsb
sbb
dec
dec
dec
sahf
jnp
push
jo
cmp
sub
sarb
nop
iret
loop
fimuls
inc
and
divl
loope
fistl
mov
inc
rorl
or
cmpps
and
lcall
inc
xor
sub
dec
lret
fucomp
cmp
addr16
xlat
dec
fldlg2
mov
pop
sbb
sub
sub
imul
xor
imul
pop
and
fdivs
pop
mov
dec
sub
scas
shrb
fwait
pop
mov
imul
outsb
dec
aaa
pop
mov
mov
rcl
mov
jbe
pop
lcall
jne
ds
loop
mov
mov
js
movsb
or
mov
leave
jno
cmpsl
or
ret
ret
jp
mov
mov
in
fs
dec
dec
aaa
int
cmp
cmp
xchg
mov
jnp
scas
out
push
jecxz
movsb
xlat
loopne
cmp
pop
cld
clc
mov
out
cmc
and
lock
mov
adc
jle
xchg
sub
jg
or
out
shll
sbb
fistpll
and
or
pop
je
fistpll
sbb
inc
sahf
sbb
dec
shl
int3
push
dec
or
lods
ficompl
push
call
mov
or
cmp
inc
inc
sub
fwait
fs
add
push
pop
and
loopne
pop
adc
add
rcr
cmp
rcrb
mov
lret
push
jp
loop
push
jmp
lret
dec
dec
and
fadds
and
movd
popa
push
jns
mov
push
mov
jecxz
testl
mov
das
js
cmpsb
dec
lds
sub
lret
clc
lods
mov
adc
mov
and
xchg
mov
xor
inc
push
pop
mov
cmp
xor
int3
call
xchg
and
or
shlb
or
loop
push
adc
outsl
out
xchg
lods
cmp
mov
adc
jno
ret
and
push
enter
jmp
dec
cld
jmp
jle
cmpsb
pop
pusha
add
inc
movb
rorl
sub
or
mov
pop
xchg
lcall
xlat
dec
and
lret
repz
dec
ds
in
outsl
or
repz
xchg
ret
sbbl
ss
mov
clc
aas
cwtl
add
mov
sub
loopne
pop
and
jmp
mov
shlb
push
mov
dec
test
push
xor
sub
push
inc
pop
sub
inc
mov
sbb
add
aam
sbb
fildl
push
inc
out
ret
push
ds
std
jb
mov
test
inc
jp
ja
or
push
pop
int
sub
sub
sbbb
sub
cltd
sub
test
stc
lds
iret
xlat
pusha
push
xchg
dec
scas
cld
dec
inc
mov
mov
negl
scas
jae
in
push
int3
xchg
xchg
lahf
lret
push
inc
mov
mov
dec
es
inc
and
mov
lea
not
sahf
in
xchg
mov
lret
cmovg
dec
add
gs
inc
or
lcall
xchg
jecxz
cmpl
shlb
test
in
adc
inc
cmp
push
push
int
pop
movsb
je
inc
addl
daa
or
xchg
adc
mov
add
adc
iret
fcmovu
sub
jle
sbb
or
cs
cld
push
cmpsb
push
and
push
cmp
mov
sbb
cli
mov
pop
les
sahf
loope
loop
adcl
xchg
neg
inc
loopne
cmp
mov
cmc
and
sbb
adcl
jge
ss
pop
pop
add
or
push
repz
fstpt
stos
adc
insl
push
push
pop
test
aaa
sahf
dec
movsl
jp
dec
fs
push
sbb
adc
rcr
xor
xchg
jg
mov
push
dec
enter
mov
xor
fmul
dec
add
inc
or
sahf
push
daa
lahf
xchg
cltd
ss
xor
sub
mov
scas
and
pop
dec
setae
mov
fistpll
add
lcall
cmc
xor
rorb
mov
icebp
sbb
lods
jp
imulb
push
sub
in
aas
jecxz
pop
nop
dec
aad
scas
xchg
mov
mov
xor
rclb
loope
push
stos
das
les
pop
ja
cmp
and
jns
xor
cmp
aad
push
clc
dec
pop
leave
mov
ror
push
insb
int
movsb
into
addr16
mov
push
xchg
dec
pop
jns
je
rcl
push
or
icebp
stos
inc
fwait
adc
es
or
outsb
int
aam
push
mov
cltd
in
cwtl
fcmove
les
lods
add
mov
std
js
xlat
das
push
and
pusha
jge
stc
dec
sub
cmc
jne
or
cmp
sti
adc
inc
ret
mov
neg
pop
mov
pop
xor
lea
mov
push
loopne
imul
nop
adc
mov
or
sub
dec
lret
push
inc
mov
test
sbb
rcr
push
rorb
imul
stos
loopne
int3
les
push
or
cmp
sbb
ds
and
add
xor
jbe
pop
inc
mov
call
leave
insl
sysenter
sti
gs
repnz
sbb
xchg
mov
fldcw
mov
mov
lcall
movsb
andl
push
shll
jno
cs
xlat
movsbl
inc
cmp
jmp
adc
popa
ja
leave
xchg
loope
test
inc
pusha
jns
jp
and
fbld
dec
addb
pop
inc
pop
popf
jmp
mov
mov
cltd
divb
inc
popa
dec
and
adc
mov
ja
testb
cli
cmpsb
fmull
popf
jbe
lret
push
xor
sub
jo
test
test
inc
pop
inc
sahf
rolb
push
arpl
fs
in
adc
push
mov
jnp
mov
xchg
cmpsb
inc
rorl
gs
and
add
xor
nop
cmpsb
out
push
js
adc
sub
jle
ds
xchg
cmp
xchg
push
sub
mov
add
daa
pop
adc
add
jbe
sub
rcl
push
xchg
das
jns
cmp
cmp
sub
or
lock
mov
pop
out
xchg
scas
insb
cmp
adc
insb
pusha
cmc
in
jne
or
jbe
arpl
test
cmc
adcb
mov
cmp
and
in
fcoml
pop
cmp
adc
std
jno
jg
xor
outsl
aam
and
stc
adc
add
insl
adc
adc
jne
push
jmp
lcall
pause
pop
movl
xor
test
dec
cwtl
pop
nop
es
aas
push
stc
and
xchg
fs
jmp
mov
aam
or
mov
inc
cwtl
pop
inc
dec
xchg
or
jno
jl
push
es
lods
pop
dec
jns
sub
inc
dec
lret
add
pop
popf
std
and
dec
clc
ja
iret
jno
dec
fsubp
fs
or
dec
mov
imul
xor
ds
inc
daa
or
mov
sbbb
testb
shlb
imul
xchg
ror
ss
out
lock
movsb
jb
shlb
xchg
ja
sub
popa
push
jbe
fmuls
addr16
movl
call
mov
in
inc
ds
add
rolb
jle
fldl
xor
pop
les
aam
js
mov
or
inc
scas
daa
xor
popa
cmp
movsb
bound
cltd
cli
cmp
cmp
aad
aaa
test
bound
xor
loop
push
cltd
push
into
es
inc
lret
jb
scas
popf
out
lahf
dec
mov
imul
outsb
dec
sbb
xlat
inc
int3
mov
or
leave
int3
mov
push
rolb
das
into
mov
adc
fwait
lods
out
push
loopne
int3
jle
cmp
mov
popa
icebp
aad
sar
les
push
jecxz
adc
aaa
fildl
insl
imul
adc
mov
mov
les
pop
out
cmp
adcl
pop
dec
das
stos
repnz
mov
or
fs
in
movsb
in
add
iret
int3
mov
hlt
jl
out
mov
les
ds
jae
xor
cmp
adc
jb
lret
and
mov
mov
not
daa
aad
rcrl
idiv
test
or
shlb
cmc
lods
inc
sub
lds
or
popf
dec
outsl
movsl
fiaddl
xchg
and
add
xchg
out
xor
fcoml
cltd
mov
xchg
lcall
cli
push
test
xchg
icebp
sub
and
ficompl
inc
mov
dec
cmpsb
stos
inc
xchg
lahf
stos
pop
and
or
std
push
pop
dec
lcall
inc
sarl
scas
dec
cmp
mov
or
jnp
mov
jg
nop
mov
cmp
out
jg
jmp
sbb
insl
sbbb
dec
aas
adc
or
jl
push
dec
sahf
or
jmp
adc
mov
inc
inc
jg
rcrb
test
jno
mul
daa
cmp
pop
sbb
sar
push
dec
jns
or
orb
add
icebp
push
pop
std
jmp
and
lods
xor
sub
jle
daa
pushf
mov
sahf
fsubr
mov
cmp
inc
dec
cltd
dec
enter
js
mov
cs
int3
in
test
je
or
dec
test
aaa
sbb
or
sbb
rcl
xchg
jmp
or
sbb
sbb
insl
jecxz
add
or
insl
add
mov
pop
xchg
mov
push
ret
imul
pop
sbb
jle
cmp
dec
xchg
inc
fnstenv
imull
jb
std
int3
adc
rcrb
sbb
sarb
popf
push
cltd
add
cmpsl
cmp
mov
push
jb
mov
ret
cmpsb
sub
cmp
aad
test
in
lods
push
push
adc
mov
shll
cmp
sbb
adc
sbb
aaa
not
xchg
repz
xchg
stos
mov
and
push
jl
sbb
push
call
std
inc
or
dec
adc
into
mov
arpl
sub
add
push
or
xchg
jne
jb
inc
inc
add
dec
cmp
add
sub
xchg
pop
call
cmpsb
mov
dec
sub
repnz
pop
and
xchg
mov
or
dec
jmp
je
dec
insb
and
imul
sbb
in
dec
add
ret
popf
mov
xor
xor
push
lea
test
xchg
lret
cld
hlt
scas
push
pop
push
cmp
xlat
xchg
enter
sbb
popa
push
stos
adc
test
mov
jecxz
mov
pop
sub
sbb
es
sbb
add
adc
repz
imul
mov
daa
sahf
mov
jo
or
scas
aas
sarl
mov
lret
jmp
dec
xchg
int
add
outsb
mov
sbb
or
adc
sub
mov
sti
addr16
push
test
adc
sti
push
or
pop
adc
or
sbb
in
shlb
aas
push
cmp
mov
fwait
mov
cmp
xsha256
cmpsb
aad
shl
xor
inc
cwtl
mov
imull
push
jno
stos
dec
cmp
rcr
rcr
test
sbb
push
movsl
in
adc
pop
mov
xchg
divl
popl
jge
or
jae
cmp
push
cmp
incb
push
or
loopne
mov
fcmovu
or
in
imul
or
cmp
xchg
ret
push
int3
mov
inc
xor
mov
lcall
shl
or
add
pop
inc
push
lret
cmpsb
xchg
cmpsb
and
icebp
add
stos
daa
dec
inc
addr16
dec
dec
ljmp
push
insb
scas
lea
das
jne
shlb
sbb
adc
add
pop
or
mov
lds
push
sbb
mov
loope
nop
sub
xor
adc
cmpsl
ljmp
xor
fldcw
push
add
fs
popf
add
ss
sub
mov
jl
mov
and
sbb
lcall
mov
loop
mov
imul
dec
inc
inc
xor
mov
and
scas
or
popf
xor
add
int
or
xchg
outsl
jmp
xchg
pop
ja
int3
dec
in
mov
scas
xchg
repnz
sahf
mov
gs
jns
jae
jge
jo
dec
and
or
popa
adc
push
mov
movsb
adc
mov
jg
sub
or
shll
cwtl
pop
cmpsb
cltd
loopne
cmp
mov
stos
out
jae
xchg
pop
in
in
lret
mov
mov
push
jne
pop
aas
fcompl
pop
mov
pop
mov
mov
inc
clc
dec
push
sbb
jl
sbb
stc
or
cmp
mov
sub
clc
insb
xchg
jecxz
jl
jecxz
outsl
cld
and
jp
pop
dec
xchg
loopne
mov
or
std
and
lds
outsl
rcrb
fadds
mov
loope
hlt
sub
repz
imul
mov
cmp
dec
stc
xchg
sub
mov
or
mov
jge
push
add
mov
mov
test
and
add
scas
pop
popa
orl
lds
das
cmp
mov
imul
scas
rorl
sarl
jp
ja
mov
addb
push
jae
orl
add
sahf
bnd
xchg
xor
lret
out
stos
inc
test
add
push
mov
sbb
adc
repnz
cmc
mov
and
out
jmp
bound
inc
movsb
stos
jmp
repz
mov
lret
sub
outsl
mov
addr16
cmp
aad
leave
mov
xchg
sti
jbe
das
jns
test
xor
dec
mov
push
scas
loop
cmp
cs
and
sub
sub
lcall
scas
pop
xor
fbld
bound
push
fldt
xor
pop
cs
in
push
in
dec
insl
cmpsl
pop
mov
out
lahf
add
lods
push
lods
push
cltd
mov
sub
adc
cmp
push
test
xor
xor
cmp
jmp
or
sbb
rorl
fs
dec
data16
iret
sbbb
bound
subb
ficoml
push
shll
pop
inc
xchg
inc
nop
pop
in
bound
movsb
fldt
cltd
sbb
movb
jae
int3
mov
xchg
xlat
xor
push
std
movsl
out
ret
sub
dec
subb
mov
mov
push
pusha
and
sbb
gs
movsb
mov
mov
jnp
subb
ss
xchg
pusha
inc
subps
nop
dec
ror
sbb
or
mov
arpl
sbb
int3
inc
sub
push
sbb
mov
push
pop
mov
outsb
cmp
mov
ret
lcall
in
lods
popa
dec
test
jbe
jae
mov
mov
pop
or
and
repnz
daa
mov
push
cld
imul
and
jle
in
mov
mov
cmpb
repz
ss
lcall
call
sarl
shlb
mov
dec
cmp
popa
cmpsl
popa
imul
mov
test
dec
push
xchg
fiaddl
ss
or
jge
mov
sub
and
fidivl
int
orl
add
mov
pop
mov
mov
or
into
mov
icebp
push
lock
add
xor
or
fisttpl
mov
sub
subb
aad
mov
and
aas
push
mov
lods
mov
stc
leave
roll
out
adcb
fidivrs
lcall
bound
add
clc
addr16
xor
ja
shl
lods
popf
mov
pop
pusha
cmp
test
shl
cwtl
fidivl
aam
mull
lret
clc
sti
mov
cmpb
jmp
loop
pmuludq
cmp
mov
scas
add
js
popa
jb
mov
fsubrs
rcll
int
fs
dec
int
icebp
pop
cld
in
fdivr
jbe
adc
ja
mov
inc
mov
xchg
mov
push
add
jb
pop
daa
shrb
imul
int
icebp
and
dec
std
jl
xchg
mov
icebp
dec
popa
in
leave
sbb
pop
out
dec
neg
outsb
popf
adc
add
mov
scas
inc
fdivrp
leave
push
xchg
ja
lods
mov
int
pop
repz
repnz
xor
ret
aad
orl
mov
inc
xor
mov
std
mov
dec
cmp
dec
mov
dec
xchg
sarl
xor
lret
insl
inc
adc
xchg
cmp
push
sbb
inc
enter
mov
int
push
loop
sub
xor
dec
or
out
addr16
cmp
lret
dec
repnz
decb
and
mov
out
jbe
loopne
in
jb
adc
xchg
pop
out
pop
jp
and
ss
clc
mov
call
xor
and
aas
mov
fisttpl
dec
repz
aad
popf
and
loope
jne
cwtl
cmp
repz
enter
pop
nop
int
out
xor
out
push
cmpsl
scas
shlb
jb
roll
dec
jo
cmp
mov
and
mov
adc
iret
ljmp
cmp
pop
sub
mov
pop
popa
pushf
mov
inc
cmpsb
mov
push
jp
and
lds
push
dec
jp
bnd
pop
xchg
lret
ret
mov
xlat
test
add
mov
movsb
jge
sbb
das
xchg
lret
xchg
mov
jb
or
dec
or
fdivrp
sbb
mov
ret
pop
sub
sbb
mov
xlat
ret
xchg
out
pop
push
imul
insb
and
cmp
jecxz
std
repnz
inc
ret
icebp
fcomi
rol
jo
cltd
lea
dec
jb
fmul
mov
xchg
ret
movsl
sub
push
adc
imul
adc
push
pop
nop
adc
lahf
imul
lret
fnstcw
mov
jo
ret
lcall
cmp
pop
pop
push
shrb
fisubl
sbb
xor
jge
outsb
xchg
adc
xchg
jg
stc
lods
xor
mov
lock
outsl
in
ja
sbb
xor
mov
dec
xor
leave
mov
xor
lret
lds
fistps
jbe
inc
repz
out
imul
popa
xchg
push
aas
les
fistps
mov
cwtl
xchg
xor
sahf
mov
adc
cld
or
adcl
xor
stos
cltd
dec
sbb
mov
inc
hlt
popw
push
aam
bound
pop
ss
push
cmp
cltd
sub
arpl
shl
adc
cld
les
and
xor
add
lods
in
xchg
push
pop
in
and
ret
rcl
add
adcb
add
outsl
mov
ja
jmp
push
xor
sbb
inc
mov
mov
stos
jno
mov
mull
pop
mov
jb
xchg
mov
sub
push
pop
pop
daa
fwait
orb
hlt
dec
and
cmp
fldt
les
cmp
in
lcall
or
popf
xchg
leave
fbstp
mov
pop
sbb
cmp
pop
xor
stos
lahf
pop
mov
popa
test
outsl
cmp
andl
sbb
fmulp
pusha
cld
pop
stos
pop
nop
dec
mov
repz
push
mov
sbb
push
jnp
sbb
sbb
outsl
pushl
enter
pop
enter
mull
loop
sub
cmpsl
pop
incb
lock
pop
out
jne
xor
mov
aas
fcmove
or
and
mulb
or
cmp
xor
pop
xchg
pop
cmp
out
hlt
sub
ret
inc
idivb
into
dec
add
push
lcall
cmp
mov
in
xchg
cld
test
jmp
push
movsb
addr16
mov
sbb
cmpsl
scas
popa
fsubrl
mov
inc
xchg
les
jecxz
pop
ffree
mov
push
repnz
fistl
inc
and
lahf
xchg
and
lcall
inc
fists
cs
xor
sbb
aad
and
orb
lret
std
mov
mov
jns
out
xchg
test
sub
jno
mov
adc
in
addr16
or
xchg
or
and
decl
jbe
push
hlt
sub
push
fnstsw
ja
out
inc
jp
lahf
and
pop
test
jmp
push
add
pop
idiv
js
mov
gs
addr16
pushf
fcmove
lock
mov
mov
shl
inc
adc
shll
shl
xchg
stos
push
sub
cmp
aas
loop
daa
icebp
pop
push
aam
xchg
outsl
and
jmp
inc
repnz
mov
aam
pop
mov
stos
xchg
adc
shll
xchg
push
and
stos
std
stos
sub
pop
pop
ss
push
mov
outsl
jecxz
xchg
fldl
dec
xor
pop
mov
sub
push
mov
stos
test
or
int3
cs
cmpsb
stos
cwtl
lds
out
fwait
adc
cmp
xchg
lods
jmp
cwtl
ljmp
fsub
lea
orb
pop
add
mov
push
test
dec
sub
sub
push
rcr
fcoms
fs
cs
in
sbb
loop
movsb
jp
cmp
pop
push
jns
hlt
fcom
mov
ret
fistpl
sub
push
push
push
pop
loop
fcoms
int3
push
stos
fwait
add
jae
sub
mov
ja
inc
or
in
cmp
repz
lock
inc
sarl
andb
cmp
pop
dec
sbb
mov
out
cwtl
or
mov
imul
add
xchg
psrad
add
inc
jnp
pusha
imul
adcl
popa
mov
int
in
mov
jg
cltd
fstps
mov
jnp
jno
sub
adc
into
xchg
xchg
pop
dec
cmp
inc
jge
mov
inc
rcl
mov
and
inc
mov
push
fwait
sti
out
push
in
test
clc
dec
sub
sti
or
push
pusha
out
jo
push
bound
mov
cli
stc
rolb
pop
mov
mov
cmpsl
loop
mov
sbb
in
scas
add
ds
add
scas
das
fs
jns
incb
xor
sbbb
js
lods
insb
subb
mov
in
test
jae
sbb
iret
add
loope
shrl
mov
test
dec
jle
out
pop
mov
add
or
lahf
imul
in
loopne
add
stos
sub
lods
sub
popa
cmp
adc
fld
fcomps
sbb
fisubrs
mov
xchg
pop
shrb
inc
aad
cmp
or
mov
addr16
fsubs
daa
and
lea
mov
mov
mov
cli
dec
iret
std
std
icebp
mov
pop
popa
les
fcomps
jo
xor
sub
pop
ds
test
psllq
mov
jb
pop
jecxz
es
pop
adc
lret
pop
adc
sub
push
jne
xor
jle
xor
out
int
inc
clc
cmp
and
int
fstps
leave
sbbb
into
mov
rcr
fwait
sub
adc
xor
out
push
sub
mov
or
andl
test
mov
pusha
or
loop
jnp
dec
test
mov
pop
adc
pop
negb
push
in
fwait
stos
push
cmp
in
dec
aas
mov
dec
inc
pushf
inc
mov
test
shll
ret
push
sti
pusha
mov
test
ret
inc
and
out
lret
sub
jo
jmp
sub
dec
mov
mov
in
mov
cwtl
iret
xchg
jae
sarb
mov
cmpsb
sub
pop
cmp
cmovno
divl
xor
jne
mov
cmp
pop
adc
xchg
xor
sub
lods
sbbb
and
aam
dec
es
int
and
add
pop
inc
push
push
or
mov
lret
adc
leave
add
lds
fisttps
ret
or
cmp
inc
std
arpl
or
adc
cltd
xor
adc
cmp
jae
jg
inc
dec
push
std
inc
ja
inc
lcall
cmpb
pop
mov
rcll
pop
push
fldt
out
push
mov
lea
adc
pop
or
test
sahf
je
hlt
adc
xlat
clc
js
adc
cld
pop
out
add
xchg
cli
mov
ret
add
loopne
arpl
out
lahf
test
sub
jne
mov
pushf
xchg
and
fidivrl
cltd
sar
std
aam
into
inc
outsl
add
inc
cld
ret
pop
lret
test
and
sti
xor
add
fbld
adc
rclb
data16
popl
gs
or
iret
inc
lds
push
jno
push
in
mov
ds
lock
bswap
loop
addl
pop
inc
pop
push
fiadds
push
jo
shr
out
stos
fidivrl
les
cwtl
scas
pop
dec
rorb
adc
hlt
fisubrs
push
lock
lea
aam
push
mov
add
push
sbb
outsl
popf
sbb
push
mov
dec
push
xor
lahf
aaa
push
test
jne
jb
or
mov
jge
push
mov
outsl
and
xlat
subl
idivb
jbe
dec
vpavgw
xor
pop
scas
mov
pushf
leave
pop
push
cmc
jge
lret
aas
mov
mov
mov
dec
popa
iret
and
sbb
clc
fidivrs
inc
in
sub
movsl
aad
mov
popa
cmp
push
dec
je
aad
out
xor
inc
sbb
subb
in
in
in
pushf
shl
das
add
or
jns
rcrl
adc
and
fwait
add
shlb
call
fbld
sub
lret
test
test
mov
jge
aad
ja
out
inc
and
std
and
cs
pushf
or
adc
loopne
sub
cmp
sbb
es
push
shlb
movsl
and
dec
mov
lahf
mov
sbb
out
sti
sbb
inc
test
in
inc
dec
jmp
insb
xor
mov
xchg
loope
mov
cs
mov
jns
jmp
out
dec
mov
inc
inc
pop
sbb
xlat
jae
sub
cwtl
jmp
mov
lahf
push
je
add
jge
cld
adc
xlat
and
cmpsb
into
xchg
mov
push
xor
adc
rclb
pop
inc
xor
jle
xor
das
aaa
mov
mov
andb
cs
sub
jle
fisubrs
popf
ja
sbb
out
leave
ss
fsts
xor
pop
or
ljmp
mov
add
mov
mov
jg
or
out
cltd
jne
je
xor
mov
pop
mov
xchg
xchg
push
repnz
faddl
push
outsb
js
lcall
addr16
xchg
sub
push
fs
test
scas
insb
pop
sarb
dec
inc
hlt
jle
fbstp
iret
add
pop
jecxz
fiaddl
fwait
ss
je
sarl
ja
test
je
outsl
ss
aas
shrl
shll
lds
fstl
xlat
lods
xor
cwtl
sbb
shlb
int3
inc
int3
lcall
cmp
sub
mov
add
das
mov
push
fwait
sbb
add
sbb
fsts
cmpsl
add
jbe
imul
sub
loopne
cli
xor
mov
push
stos
push
dec
sbb
js
aad
cmpsb
jp
inc
sti
add
xchg
mov
push
sbb
jg
dec
mov
aam
jno
into
cld
mov
out
lods
or
and
jecxz
lods
lahf
cmpsb
xchg
fisubrs
rcll
decb
flds
mov
xor
call
pop
stc
fbld
adcl
ss
xchg
pushf
xor
mov
les
lret
mov
xor
rcl
popf
roll
fcmovu
jecxz
xor
add
xadd
adc
inc
jg
push
popf
ret
hlt
and
pop
mov
cld
stc
popf
push
jo
icebp
xor
sbb
fnstenv
outsb
jnp
or
xor
xor
jbe
mov
test
out
dec
sbb
lret
movsb
imul
sub
or
and
sbb
fcomps
mov
test
imul
shlb
ss
iret
arpl
add
sub
ljmp
and
pop
cmpsl
pop
clc
popa
hlt
adc
mov
adc
sbb
push
pop
jno
mov
aas
and
cli
arpl
hlt
add
pushfw
push
aas
mov
fimuls
push
mov
and
sbb
cmpsl
pop
jp
test
dec
idivl
sahf
ss
pop
sub
add
pop
repnz
sbb
and
cs
sub
push
mov
jle
or
xor
xchg
outsl
fchs
gs
inc
xor
cmc
xchg
mov
mov
insl
xchg
dec
repz
mov
loope
out
mov
into
dec
or
es
data16
mov
dec
adc
ds
fistl
daa
mov
xorl
pushf
icebp
arpl
fmuls
std
inc
dec
movsl
xchg
sub
sbb
xchg
scas
testl
mov
xchg
push
xchg
mov
xchg
lret
por
inc
iret
es
cmc
adc
xlat
mov
int3
sti
je
jae
test
sti
push
ja
outsl
push
es
mov
cld
pop
and
xchg
das
mov
mov
cltd
stos
mov
mov
cmpb
gs
ljmp
inc
jb
aam
push
lock
dec
aad
and
ret
or
scas
aad
outsb
loopne
and
push
ret
mov
inc
inc
add
sub
rorl
arpl
fcom
dec
mov
cmp
cmp
jns
mov
xor
int
das
jmp
data16
pop
sbb
or
sub
imul
test
lock
inc
mov
inc
cmp
repz
xchg
out
mov
sub
shlb
arpl
and
ja
mov
sbb
or
mov
jno
pop
add
mov
cmp
fcompp
mov
sbb
pop
pushf
xor
xor
fldl2t
push
das
lahf
cmp
inc
ret
mov
es
xchg
xchg
in
mov
movsl
inc
xchg
das
and
sbb
popf
stos
in
ljmp
bound
adcb
xor
xor
imul
ret
push
add
cmpsl
jge
xlat
les
push
cmp
in
sub
adc
out
clc
jo
sbb
and
fcomps
stos
fwait
cmpsb
shll
incl
lret
scas
out
mov
pop
jnp
js
fidivrl
pusha
jecxz
xchg
or
mov
out
mov
aam
stc
mov
mov
out
jecxz
mov
inc
pushf
dec
lcall
fisttpl
or
push
adc
icebp
sbb
int3
xchg
fs
lret
add
xchg
movsb
jle
stos
ds
xor
push
aam
iret
lcall
pusha
adc
jbe
enter
pop
aas
cmpsl
xchg
mov
xchg
xor
and
sbb
jecxz
ret
test
ret
stos
jb
jnp
popa
sub
push
xor
lods
iret
inc
cmp
lea
into
lcall
iret
xchg
movsb
aad
test
enter
jle
pop
dec
aad
add
jo
push
xchg
out
iret
arpl
inc
push
lea
or
rcrb
cmp
cmpsl
inc
loope
add
pop
popf
int
addr16
addr16
add
ret
loop
mov
pop
cmpsb
pop
inc
loope
cwtl
mov
aas
mov
mov
out
loopne
sbb
mov
jmp
inc
sbb
pop
iret
push
in
dec
jns
outsb
push
push
ret
icebp
mov
xchg
xchg
mov
or
jne
mov
jp
lods
in
and
lods
aam
mov
jbe
dec
sub
mov
push
inc
ss
cmpb
arpl
sbb
jmp
pop
xchg
xchg
out
inc
daa
cmp
push
jo
or
cmp
adc
sbb
sbb
inc
inc
jbe
mov
and
stc
cmpsl
imul
iret
rolb
int
push
xchg
add
sahf
sub
movsb
pop
sbb
loop
icebp
sub
xor
leave
into
xor
sub
jne
adc
sahf
ds
fistpl
rolb
ret
stc
jnp
loop
xor
lods
popa
sbb
filds
sbb
mov
clc
sub
cwtl
lcall
adc
clc
sti
insb
in
loop
pushf
and
add
repnz
dec
pop
out
mov
iret
popf
cltd
loopne
dec
or
test
je
jp
inc
lcall
sahf
mov
test
repz
adc
adc
orl
mov
jmp
ljmp
mov
push
cwtl
cmp
fsubrs
push
mov
add
leave
int
xchg
in
test
sahf
inc
or
fldt
cmp
fldt
inc
and
dec
sub
sub
shrl
adc
inc
fnstcw
fwait
rol
stos
add
int
pop
lcall
cmpsb
jp
aas
dec
mov
out
xor
adc
xor
sbb
jmp
outsl
mov
sbb
xchg
pop
minps
xchg
cmp
js
mov
aas
mov
aad
pop
filds
jecxz
pop
dec
jg
sub
sbb
sub
popf
adc
push
mov
jo
pop
in
movsl
xor
lock
popf
sub
mov
push
addr16
stos
and
mov
mov
scas
lods
scas
push
nop
mov
mov
jne
sbb
lea
sbb
hlt
mov
incl
mov
insb
add
jle
arpl
inc
mov
add
xchg
push
mov
ret
test
andl
divps
xchg
mov
mov
dec
test
rolb
mov
jnp
pop
divb
cmp
mov
add
loopne
adc
and
in
lret
mov
es
adc
je
jge
push
not
aam
xor
cmp
xchg
mov
es
inc
movsl
push
push
insb
mov
fists
iret
lahf
scas
in
lcall
and
mov
sub
mov
sar
jnp
and
adc
xor
xor
mov
popf
fisttps
int3
arpl
dec
or
out
popa
or
xchg
clc
xor
fsubrp
ret
jnp
into
cmpsb
push
repz
adc
das
aam
pop
lods
lret
pop
test
mov
or
rcrb
add
scas
adc
imul
das
push
mov
in
or
sub
call
sarl
sub
scas
mov
clc
mov
test
adc
loope
push
push
jg
mov
lods
xor
in
sahf
sub
movsl
leave
pop
daa
mov
mov
adc
call
sub
push
das
mov
fwait
clc
sub
sbb
aam
out
jne
shlb
lods
imul
mov
movsb
outsl
push
add
or
dec
mov
cmp
cmpsb
pop
mov
sbb
aad
rclb
daa
out
lahf
pop
inc
enter
stos
adc
dec
dec
or
xlat
fs
sbb
xchg
in
push
xor
je
jmp
xchg
dec
xchg
inc
or
addr16
mov
push
int
xchg
pop
push
mov
leave
aad
push
roll
inc
inc
add
test
out
fistps
neg
cmp
ss
add
pop
xor
test
cmovnp
outsl
and
mov
pop
adc
rorl
pop
lods
pop
icebp
pop
mov
sbb
pop
pop
jecxz
pop
sub
mov
aam
rclb
pushf
sbb
frstpm(287
pop
xchg
out
jo
mov
mov
mov
adc
mov
int
daa
and
sub
xchg
mov
jl
bound
pop
pusha
mov
subl
insl
scas
sbb
mov
push
cmp
cmp
jge
incl
xor
jae
mov
cwtl
shr
ljmp
negb
addl
pop
push
in
sar
mov
or
sbb
lods
into
sti
aas
pushf
jmp
bound
imul
vminps
das
subl
ss
inc
sbb
mov
add
clc
aaa
hlt
pop
stos
adc
repz
mov
add
negl
add
mov
jmp
out
dec
sbb
cmpsb
and
jbe
lds
sbb
cli
jp
xor
cmpsb
dec
jnp
dec
cmp
lods
and
mov
or
lock
mov
pop
adc
sbb
mov
ss
cmp
lods
aas
dec
or
mov
sbb
adc
je
scas
jl
pop
vshufps
icebp
int3
pushf
sub
push
aam
test
fs
dec
loopne
xchg
test
mov
pop
dec
jmp
js
cmpsl
stc
aaa
movsb
call
xor
loop
loopne
out
icebp
xlat
orl
mov
fsubs
xchg
addb
pop
cmp
push
cmpsb
sub
lcall
mov
test
pusha
aaa
movsb
adc
scas
sarb
clc
arpl
mov
sbb
cmpl
insb
and
push
inc
inc
jecxz
sub
sub
pop
push
sub
adc
cmpsb
jmp
es
aas
in
in
add
in
push
dec
sub
jp
dec
repnz
bound
cmpsl
mov
rolb
ss
fs
adc
dec
lock
out
ja
lret
add
addb
or
mov
into
pop
cmp
cmp
pop
cmp
aas
into
xchg
int
and
add
int3
push
ja
add
mov
adc
mov
or
lea
sti
cmp
stc
push
xor
mov
negl
xor
ret
leave
popa
fldcw
out
and
cwtl
and
or
adc
mov
test
and
xor
es
pop
imul
pop
mov
jge
fadds
adc
dec
xor
or
xchg
cmp
sahf
popa
cld
add
nop
mov
cmp
xor
int
xchg
mov
dec
xor
call
or
sub
test
cmc
cwtl
sub
shr
push
xor
xchg
cltd
push
mov
movsl
dec
or
dec
lret
inc
xchg
and
inc
leave
mov
test
aas
inc
fldl
mov
or
fiadds
jge
push
lods
mov
icebp
push
aaa
lcall
pop
sbb
pusha
cmpsl
sub
outsb
mov
fs
cmpsl
cld
test
cli
jne
jmp
hlt
cmp
lret
xor
cmp
sbb
gs
das
gs
mull
in
mov
in
jmp
jnp
push
imul
addr16
icebp
pop
in
test
xchg
adc
push
adc
xchg
lock
loop
or
mov
or
push
into
push
js
test
mov
mov
sbb
or
outsb
incb
push
loope
rcr
cltd
xor
leave
cs
sbbl
push
push
bound
js
jle
mov
jo
adc
stos
flds
ljmp
push
add
out
loop
icebp
mov
jge
jno
pop
xchg
jl
mov
rorl
jne
inc
shr
push
repz
sbb
cmp
inc
xchg
mov
out
pop
cli
scas
xchg
push
push
loop
loop
pop
xchg
out
mov
inc
daa
bnd
cmc
cmc
xchg
imul
add
cltd
je
rcrl
push
push
in
xor
inc
sub
sti
loope
mov
es
enter
mov
adc
cmp
mov
or
mov
cmpsb
ja
adc
fs
mov
sti
test
jp
iret
cmp
cltd
jle
and
jecxz
scas
sbb
aaa
mov
mov
mov
cmp
lea
xor
adc
dec
fdivrs
xchg
jbe
cli
jnp
ja
in
daa
mov
aad
dec
push
inc
pop
test
fcmove
std
lcall
fwait
xchg
push
xor
and
lahf
mov
cmp
jle
outsb
mov
aad
out
scas
or
ds
xchg
inc
sarb
imul
loopne
out
lret
mov
adcb
mov
adc
xchg
cmp
sbb
xor
pop
cld
jne
sub
mov
xchg
dec
ja
roll
ljmp
test
enter
jns
imul
pop
xchg
rcrl
lds
das
cvtps2pi
fs
push
jbe
push
int
loop
mov
int3
fistpll
movsb
mov
mov
sbb
pop
mov
cmc
ficoml
in
xor
inc
push
cwtl
pusha
out
fucomip
pop
push
nop
subl
jg
push
mov
mov
dec
inc
mov
inc
mov
push
rclb
mov
push
xlat
and
xchg
xchg
iret
cmc
inc
in
xchg
xor
lods
lds
shr
sarl
sbb
ret
loop
mov
sbb
loopne
lea
ror
or
stos
adc
adc
stos
ret
xor
aaa
push
mov
lds
dec
jno
dec
dec
lock
mov
dec
movsb
jge
cmp
mov
sbb
loop
movsl
adc
int
arpl
xchg
das
sub
mov
sub
es
xchg
dec
xor
shlb
and
mov
fstl
mov
add
jno
nop
mov
adc
or
mov
xchg
cmp
or
sarb
cld
dec
mov
jbe
push
mov
pop
jmp
sbb
push
mov
call
sbb
adc
push
and
in
scas
xchg
stc
insb
push
int3
adc
push
xchg
insl
or
xchg
inc
adc
mov
mov
std
fdivl
add
xchg
rolb
or
aas
mov
or
std
scas
jnp
push
dec
cmc
jne
mov
out
sbb
or
cmp
je
cmpsl
mov
hlt
ret
xor
test
pop
icebp
jle
mov
mov
lods
addl
test
mov
ret
arpl
sahf
jae
xchg
mov
imulb
inc
adc
dec
mov
inc
jmp
jecxz
add
xor
sub
pop
mov
sti
out
ja
fdivs
sbbb
jae
decl
cld
adc
sub
jg
loopne
jmp
int3
mov
lds
xchg
dec
popf
sti
cmpsb
movsb
cwtl
scas
mov
in
sub
pop
pop
push
pop
pop
and
mov
mov
add
movsb
ds
jo
push
jns
xchg
pop
sub
push
push
xlat
cmpsl
xor
cmp
mov
gs
lcall
add
movb
mov
stos
jae
sub
lcall
push
sub
or
scas
iret
inc
out
adc
cmp
adc
test
or
sub
sub
cmp
imul
insl
das
int3
cmp
mov
imul
xlat
xchg
icebp
mov
cmc
pushf
fwait
dec
cmc
mov
cld
or
jb
shll
mov
jb
stos
insb
jno
in
or
aaa
adc
push
jae
ds
adc
dec
aad
adc
pop
xchg
xchg
push
shll
lods
xor
in
fldt
dec
stos
mov
xchg
inc
push
inc
adc
mov
xchg
loope
and
lcall
and
jno
imul
pop
dec
bound
pop
sbb
addr16
sbb
push
mov
cmp
jae
mov
ja
fisubrs
fsubs
pop
shr
addr16
lret
jno
pop
push
imul
sbb
cmpl
loopne
stos
xchg
icebp
out
leave
lret
pop
dec
add
sub
mov
hlt
dec
and
or
sahf
mov
or
idiv
add
dec
scas
cs
xchg
scas
sti
add
insb
sbb
xchg
sbbl
inc
mov
insl
orb
pop
aad
repnz
fsts
test
test
insb
movsb
or
push
std
ljmp
cmp
jg
jecxz
mov
adc
cmp
push
fildl
mov
mov
std
clc
mov
push
adcl
sbb
mov
push
add
mov
lret
stos
mov
mov
lea
jmp
testl
adc
xor
lcall
enter
cmpl
idiv
arpl
ja
stc
sbb
daa
lods
sbb
mov
sub
rol
mov
push
arpl
hlt
in
cmp
inc
jae
or
cmp
test
and
cs
sbb
ljmp
in
dec
rcrb
jns
stos
cmp
insl
mov
test
jo
out
sub
lret
data16
sub
adc
inc
call
mov
or
clc
inc
and
loopne
sbb
mov
push
add
andl
lods
push
sti
lcall
mov
loop
lods
sbb
outsl
push
jmp
mov
dec
jo
sub
cwtl
cs
push
imul
inc
push
shlb
popa
push
test
sar
repnz
out
fs
dec
xchg
inc
dec
jmp
push
imul
notb
rorl
jae
jae
push
cltd
pop
jle
sbb
inc
jmp
cmp
adc
mov
pop
andl
test
adc
push
push
jnp
pop
mov
xchg
in
xor
lock
mov
adc
mov
push
in
std
adc
xchg
sub
push
lock
dec
js
andl
xlat
pop
popf
adc
mov
enter
cltd
fs
js
jns
sub
xor
lds
cmpsb
je
lock
adc
out
movl
sub
lahf
mov
jo
ljmp
pop
push
mov
or
mov
inc
out
cltd
sbb
push
fimuls
cld
ds
out
or
jg
xchg
mov
pop
adcb
mov
push
cltd
add
scas
dec
cmp
dec
movsl
push
bound
pop
add
roll
addl
sbb
lods
mov
cld
pop
mov
sti
leave
sbb
cmovo
or
jo
add
loopne
fbstp
and
mov
xchg
xlat
loope
loope
addr16
out
jne
ret
aam
ret
lret
lcall
cld
js
xor
sbb
xlat
lret
movsl
push
xor
cmp
fucom
push
in
das
subl
push
testl
jno
mov
sub
insb
mov
inc
add
adcl
imul
enter
cwtl
mull
lret
insl
lahf
leave
xor
fsubr
inc
sub
and
idivl
push
cmp
ljmp
call
and
jmp
popl
pop
cld
mov
out
dec
lea
cmp
pop
push
mov
roll
test
test
xchg
and
sbb
addl
sbb
pop
std
push
adc
cmpsl
int3
cli
mov
iret
mov
pop
fildll
mov
jne
add
pop
sahf
dec
mov
in
mov
into
pop
js
xchg
call
scas
leave
loop
jmp
subb
roll
xchg
adcl
mov
jl
imul
and
inc
pusha
mov
mov
or
sbb
out
cmp
shlb
mov
push
mov
ret
push
mov
or
xchg
dec
imul
push
pop
imul
ja
and
xchg
jle
cmp
iret
orb
push
xor
push
sbb
dec
popa
cmp
add
dec
inc
lods
mov
lods
cmpsl
lea
in
mov
jb
push
or
gs
push
push
int3
in
and
lret
sbb
and
mov
das
inc
fsubp
ret
xor
cmp
stos
lods
sbb
into
add
xchg
mov
push
sub
mov
xlat
dec
flds
mov
or
rcll
bound
xor
lods
aad
ret
cmpsl
std
aam
lock
xor
cmc
and
mov
sub
mov
jl
enter
mov
ret
sbb
shll
sub
inc
or
nop
xchg
ja
add
pushw
jnp
nop
das
mov
insl
fcmovbe
pop
add
insb
mov
fisubrs
lahf
push
shrl
mov
dec
mov
nop
shl
push
or
sub
cld
pusha
lcall
sarb
fistl
mov
adc
mov
add
lods
test
into
dec
cmpsb
mov
test
inc
mov
xor
loop
das
popf
cmp
push
sbb
mov
and
aam
ljmp
pop
repz
sub
pushl
jl
jl
or
xor
inc
repnz
cwtl
add
dec
jecxz
adc
jl
out
mov
loopne
pop
pop
fcomps
pop
mov
jle
out
cmp
add
filds
xor
mov
mov
adc
adc
jne
bound
bound
aad
pop
fadd
mov
ss
adc
pop
imul
lcall
test
adc
mov
jle
adc
cmp
mov
std
add
repz
in
jo
or
mov
sbb
repz
ds
cwtl
call
pop
sub
add
lret
xchg
sub
pop
ror
int
scas
push
out
jmp
addr16
notb
hlt
mov
add
push
mov
inc
pusha
dec
xor
cmp
cltd
cld
pop
dec
inc
add
push
sub
add
cmpsl
mov
ret
xor
and
sub
dec
fmulp
adc
jle
shll
inc
shll
loope
mov
push
mov
add
push
enter
push
mov
movsl
cmc
or
jno
xlat
mov
lret
gs
xor
and
jg
or
stos
push
ljmp
sub
jb
sbb
mov
fdivp
jo
fsubs
xchg
lea
mov
jp
or
mov
dec
enter
cmp
pop
loopne
scas
inc
arpl
lods
js
push
cli
pop
enter
xchg
std
fsub
xor
movb
or
inc
add
daa
lret
sar
out
sbbb
movsl
in
fwait
or
inc
fldl
inc
mov
test
es
and
shl
jne
pop
js
jge
in
aaa
mov
stos
pop
inc
stos
lds
inc
lods
sbb
lods
xchg
xchg
out
bound
or
dec
mov
aas
subb
imul
push
movsl
or
mov
daa
lret
xchg
loopne
push
inc
push
adc
or
lahf
jecxz
xor
mov
sahf
xchg
leave
mov
lea
sbbl
fdivs
cmpsb
movsl
jno
js
or
imul
mov
movsb
frstor
xor
add
xchg
push
xchg
fisubrl
push
sbb
pop
mov
inc
push
das
pusha
out
cmp
cmp
repz
and
rcll
dec
sbb
pop
test
out
mov
cs
or
out
add
aaa
out
notb
ret
add
push
add
lret
inc
dec
inc
test
out
mov
adc
mov
test
push
imul
scas
lahf
idivl
mov
mov
loope
push
cld
fcmovnb
jnp
sarb
fwait
add
xor
and
fistpl
rcr
in
push
add
aad
pop
outsl
ss
push
fs
shll
xlat
mov
push
add
out
sub
and
in
and
test
mov
mov
xor
ss
xor
jle
dec
cmp
cld
arpl
ja
fidivrl
jns
push
xor
xchg
dec
bsr
stc
pushf
push
arpl
arpl
movsb
push
ljmp
inc
int
adc
pop
and
roll
es
sti
lret
push
xchg
stc
pop
push
arpl
dec
pop
xorl
jl
adc
aaa
roll
imul
loope
add
inc
out
mov
xor
out
dec
dec
xor
arpl
out
xor
test
fsubp
xor
out
repnz
out
or
roll
xor
push
inc
sti
jb
cmpsl
imul
outsl
lock
negb
sbb
repz
mov
and
pop
fstpl
cmpsb
pop
adc
jecxz
lods
in
pop
fstps
es
ja
ja
xchg
fnsave
mov
out
in
pop
fdivrs
repz
pop
pop
sbb
push
add
pusha
push
hlt
mov
push
hlt
rorl
mov
sub
adc
mov
ja
mov
sub
adc
das
leave
ja
cmp
xchg
mov
xor
push
mov
outsl
dec
ss
xchg
daa
xchg
sub
cmc
fucomp
push
fdivrp
jmp
sbb
cwtl
or
cmp
dec
inc
test
loope
or
int3
push
add
sub
mov
sbb
lcall
mov
loopne
sub
insb
xchg
test
scas
xchg
stc
mov
mov
das
ljmp
ja
mov
adc
push
out
fildl
lret
and
mov
push
fidivs
leave
mov
ret
add
mov
shlb
sub
xchg
or
test
adc
add
sbb
or
push
dec
xchg
xchg
push
jmp
inc
ret
jbe
lret
stos
adc
fisttpll
push
xchg
sbb
inc
dec
sti
sbb
adc
mov
pop
sti
ljmp
adc
lods
jecxz
jb
adc
sbb
outsb
dec
add
add
mov
cmc
sub
stos
movsl
rolb
rcr
or
lock
int
sub
jp
jle
sbb
jle
mov
ja
xor
dec
out
mov
enter
cli
rclb
jecxz
mov
or
shll
incl
daa
or
cmp
inc
cli
pop
cmp
cld
and
in
mov
xchg
in
pop
mov
add
mov
js
cmpsb
pop
cmp
int3
or
sub
push
lahf
mov
test
inc
lret
outsb
mov
imul
mov
adcb
mov
inc
stos
and
aad
lds
repz
pop
in
ja
clc
cli
inc
cmp
daa
jbe
sbb
out
sti
fists
aad
jne
repnz
and
jne
scas
jns
mov
insl
stc
pop
out
in
loope
dec
pusha
arpl
loopne
mov
mov
in
jmp
add
add
mov
adc
and
lods
mov
sub
mov
mov
push
pop
jb
stc
stos
add
call
mov
mov
adc
add
aam
pop
dec
imul
aas
cmpsb
imul
cs
imul
xchg
scas
add
push
bnd
faddl
lea
scas
in
sub
es
cltd
out
mov
cmc
mov
aam
pop
movsb
dec
cmpsl
jl
add
popf
mov
incb
xor
lods
dec
pop
cltd
sarb
mov
iret
outsl
adc
ljmp
cmp
jne
test
inc
and
cltd
xchg
arpl
out
pop
and
jb
mov
idivl
dec
sub
pusha
dec
add
jge
mov
sbbl
out
sbb
jl
jne
fnsave
mov
les
dec
sbb
mov
movb
inc
pusha
fistpl
pop
fildl
js
out
sub
stos
jb
cmp
inc
scas
in
add
push
push
mov
pop
clts
and
xchg
cs
adc
nop
mov
jne
jp
cmp
dec
lret
inc
inc
rorb
mov
xor
ds
out
and
pop
xor
pop
outsl
mov
adc
xor
inc
ja
adc
jmp
add
fdivs
mov
das
push
pop
jle
testb
ret
inc
cmc
push
jno
mov
mov
ss
pop
insb
mov
mov
add
mov
inc
shlb
and
movsb
pop
loope
cmp
cmp
int
inc
dec
arpl
ds
hlt
dec
dec
jae
scas
in
shl
inc
mov
scas
mov
adc
pop
das
inc
and
mov
xchg
jl
push
mov
mov
test
test
and
aad
jmp
jne
lea
pop
ljmp
cmp
lods
aam
push
subl
lock
hlt
jns
xor
xchg
or
fiadds
icebp
in
cltd
leave
ss
fisttpl
pop
aas
sbb
cmp
mov
sub
inc
shrb
ds
les
andl
std
mov
ret
stos
shrb
popa
lds
xchg
mov
jl
ret
mov
outsb
sar
mov
xchg
or
mov
in
xor
cmp
fwait
in
sub
adcb
add
loop
or
and
popf
cmp
lahf
sub
inc
mov
in
or
dec
mov
in
lcall
test
imul
sbb
stos
aad
or
mov
add
and
mov
mov
mov
outsb
call
and
loop
popa
adc
out
jne
jmp
xlat
jo
xor
orb
xchg
inc
repz
mov
cmp
test
jmp
mov
inc
bound
loop
cltd
test
add
dec
lcall
sti
mov
push
ljmp
push
mov
cli
adcl
fsubrl
negb
mov
push
insl
cmc
inc
push
xor
cltd
int
mov
sbb
movsb
push
inc
in
outsl
nop
nop
cmp
mov
cld
sub
sbb
xor
loope
hlt
xlat
xchg
loop
mov
les
lret
lret
leave
dec
popa
adc
imul
shlb
mov
push
mov
test
cmp
scas
enter
inc
outsl
hlt
push
jbe
jnp
mov
mov
jne
dec
push
cmc
mov
jno
mov
cmp
or
lahf
cmp
sub
gs
inc
into
add
push
mov
test
mov
inc
lock
xchg
xor
popf
jbe
jge
cld
jge,pt
cld
fnstenv
mov
mov
mov
faddl
insl
cmp
cmpl
aas
lcall
adcl
and
lea
int3
mov
mov
adc
push
rorb
in
lcall
dec
xor
mov
pop
jno
inc
jns
mov
mov
push
dec
out
scas
in
leave
bound
cmp
xor
sub
in
leave
pop
leave
jnp
lock
push
lret
scas
push
xchg
out
pop
mov
fxch
cli
push
repz
mulb
pop
inc
mov
inc
fs
lea
dec
popa
lock
or
sbb
or
leave
xor
xor
and
fwait
hlt
out
jo
out
fldl
fistl
andl
jmp
jns
out
adc
insb
adc
outsb
adc
inc
xchg
and
xchg
xor
mov
mov
or
sahf
test
dec
push
es
xchg
insl
adc
mov
jge
inc
incb
les
inc
cmp
xor
xchg
push
addr16
ret
fbld
outsb
jmp
pop
pop
mov
sbb
int
sbb
andb
push
sbb
xchg
adc
mov
call
xor
pop
loop
or
dec
inc
iret
sahf
enter
add
jg
mov
std
fcomps
jecxz
les
loopne
dec
jecxz
add
movb
xlat
mov
xor
and
and
xlat
lods
jecxz
push
subb
mov
push
and
jo
pop
pusha
and
push
arpl
push
jae
inc
push
mov
test
lock
sbb
popf
add
jg
xchg
aas
fsubp
push
mov
cmp
sbb
repz
push
rcrl
mov
mov
je
adc
pusha
pusha
jge
mov
mov
or
int3
push
mov
jb
dec
add
inc
enter
jb
sub
bound
push
movsb
dec
push
dec
test
push
scas
popa
pop
pop
imul
sub
xor
inc
mov
pop
stos
lret
in
add
xor
notb
push
roll
mov
and
aam
lods
sub
xchg
das
test
sbb
daa
add
lds
sub
loope
and
je
or
scas
scas
popa
mov
popf
in
cmc
mov
add
aas
cmp
sbb
roll
ljmp
or
imul
xchg
fcoml
xchg
mov
pop
popa
xorl
cmpsb
jo
ficoml
cli
es
loop
xchg
js
das
or
jbe
das
into
sub
loop
xor
inc
ret
mov
and
push
arpl
in
ret
jg
xor
push
cwtl
addb
add
and
stc
mov
lret
out
faddl
xor
imul
jge
xchg
repnz
mov
mov
sarl
adc
in
mov
dec
sbb
push
sub
loope
dec
xor
lret
and
ds
xchg
aas
das
mov
inc
movsb
inc
outsb
sbb
jle
mov
or
in
xchg
daa
and
mov
adc
mov
mov
cmpsb
lds
int3
outsb
xchg
inc
enter
xor
pop
test
sub
dec
xchg
dec
lahf
or
ret
jp
cmpsl
jl
or
dec
dec
mov
add
lods
ret
out
sbb
les
mov
and
pop
cmpl
sub
int3
into
scas
iret
or
xchg
xchg
adc
loope
push
push
fidivs
mov
ss
cmp
xlat
ficompl
push
mov
inc
addb
lods
out
std
popf
or
addl
test
adcl
push
out
scas
push
inc
aad
dec
xor
std
scas
or
pop
jmp
cmp
dec
scas
mov
add
scas
fadds
adc
rcrl
lea
in
imul
cmc
arpl
ret
inc
dec
mov
push
inc
and
sbb
enter
bound
add
pop
movl
dec
fcompl
fwait
inc
sbb
call
lea
inc
int
fisubs
mov
cli
cmp
xchg
jno
pusha
xchg
push
addr16
inc
push
mov
lods
sub
test
mov
aam
mov
sbb
jecxz
xor
sub
mov
ljmp
pxor
out
testl
adc
repnz
inc
lds
imul
ret
adcb
and
out
sbb
xor
jecxz
nop
jmp
mov
xchg
adc
out
adc
mov
into
outsl
fistps
inc
orps
int3
jp
sbb
outsl
mov
iret
or
add
add
in
icebp
push
jmp
mov
call
mov
mov
incl
xchg
dec
mov
movsb
mov
inc
sbb
cmp
iret
cli
fs
decl
xlat
jo
cmp
in
mov
cmp
jo
mov
cs
bound
popf
xchg
dec
adc
sbb
xchg
pusha
outsb
lcall
push
xchg
mov
sbb
clc
shlb
push
arpl
sahf
icebp
xor
and
jmp
ja
scas
jne
movsl
scas
popf
adc
fadds
inc
incb
cmp
scas
out
int
das
mov
mov
test
daa
and
push
rolb
mov
pop
sbb
sub
lret
adc
inc
outsb
arpl
lea
mov
lret
mov
lock
pop
jns
xor
mov
std
push
testb
inc
xchg
cmp
jp
adc
test
neg
lods
subb
pop
imul
xchg
jl
movsb
add
dec
lcall
push
loop
mov
pop
jecxz
int3
add
test
cltd
pop
sub
sbb
inc
or
ffree
in
jge
sub
addr16
aam
imul
add
fistpl
adc
mov
enter
xchg
nop
hlt
push
rolb
dec
or
jno
sar
sbb
lods
inc
shl
add
cs
pusha
test
push
pop
lret
or
add
ret
xorl
push
and
test
andb
icebp
inc
ja
imul
xor
aaa
in
cwtl
js
cmpl
cmc
stos
sub
xor
xchg
test
jg
push
int
pop
push
push
jno
jmp
or
out
lods
lea
mov
pop
lcall
mov
fimuls
outsb
adc
and
mov
mov
push
clc
mov
mov
out
push
stos
and
cld
sahf
sti
pop
lahf
dec
jge
dec
repnz
xchg
sub
mov
decl
mov
jge
cmp
jge
sub
jge
add
filds
jp
enter
add
subb
or
xchg
pop
inc
mov
sub
add
out
aas
push
push
push
or
mov
or
mov
das
inc
cmp
es
cltd
iret
or
int3
hlt
pop
jecxz
pop
outsb
rcll
cwtl
mov
lea
pop
jae
cwtl
jp
xor
scas
out
ja
sub
mov
adc
data16
es
lcall
clc
repnz
add
cmp
mov
dec
repnz
test
ret
int3
jmp
mov
std
inc
into
fld
mov
loop
sbb
adc
iret
adc
sub
mov
pop
sbbl
leave
cmp
push
xor
sub
jb
pusha
cmp
adcl
out
xor
adc
cmp
pop
shrl
push
test
test
inc
dec
dec
adc
sbb
repz
aas
mov
mov
mov
or
xchg
aaa
and
sub
sbb
adc
push
ja
push
mov
adc
push
mov
jne
ljmp
mov
pop
jecxz
xor
mov
or
sub
aaa
inc
out
fs
pop
scas
iret
repz
gs
mov
ror
std
fisubs
into
test
jl
mov
pop
in
cltd
arpl
std
pop
add
mov
push
inc
jo
pop
jmp
outsb
lea
mov
shlb
jbe
xchg
faddl
aas
jecxz
jl
push
jp
xchg
insb
icebp
test
stos
inc
pop
xor
jbe
sbb
test
popf
or
sbb
scas
not
xor
xor
dec
add
mov
stos
adc
repnz
xor
ret
cltd
jo
or
scas
pop
mov
mov
mov
idivl
adc
lods
mov
popa
test
inc
adc
iret
jge
xchg
push
movsb
cld
push
jae
mov
mov
inc
mov
ds
js
jmp
add
jo
push
mov
mov
stos
xchg
mov
sbb
int
wbinvd
mov
mov
out
mov
icebp
push
scas
lret
pop
jmp
cs
inc
stos
std
cmpsl
rcll
inc
pushf
les
pop
mov
push
jbe
jno
rol
push
inc
out
mov
jnp
fidivs
divb
cmp
ret
pop
xor
push
adc
sahf
mov
or
bound
lods
xchg
push
xor
add
stos
stos
and
rorb
add
add
dec
insb
ja
leave
pop
dec
std
push
jmp
push
mov
mov
jl
lcall
hlt
mov
fwait
sar
icebp
cli
and
shrl
addr16
fisubrs
jl
xchg
and
push
push
sub
stos
das
movsl
ret
xor
int
jnp
shlb
or
cmp
outsb
sub
inc
push
int3
cld
ret
cli
aas
test
or
jp
pop
push
pushf
mov
icebp
add
xlat
inc
hlt
insb
cmp
lods
push
pop
pop
dec
sarb
mov
int
mov
pop
loope
push
cld
jp
imul
sub
loopne
and
xor
fldt
cmc
nop
or
and
sbb
std
mov
jge
xlat
ds
cmp
inc
aaa
add
mov
jo
mov
push
jg
rcrl
mov
enter
pop
pop
pop
lret
jnp
mov
lret
xchg
xchg
xchg
scas
lods
mov
cmovae
popa
inc
cltd
jl
adc
push
dec
lock
sbb
mov
pop
and
jmp
inc
inc
stos
jmp
adc
movsb
xchg
mov
jno
inc
aaa
xchg
dec
mov
xorl
adc
loopne
arpl
aaa
mov
and
fs
je
mov
aam
mov
sarb
imul
loopne
pop
dec
inc
popa
test
in
icebp
shl
jp
dec
das
pusha
jne
lods
xor
ficoml
nop
and
ficoml
and
pop
inc
jecxz
pop
xchg
adcb
int3
adc
shlb
mov
cmpsb
jb
xlat
daa
xchg
xor
or
fdivrs
jp
adc
sbbb
adc
mov
fldt
cmp
loopne
data16
xor
out
sbb
dec
pop
xchg
testb
jo
loope
test
pop
sbb
adc
mov
cs
pop
lcall
push
dec
cmp
out
dec
sbb
dec
xchg
adcb
mov
inc
mov
add
out
mov
ljmp
mov
jmp
sub
movsl
gs
jl
mov
insl
jle
scas
dec
adc
icebp
adc
cltd
popa
dec
aaa
fists
fnsave
push
xchg
imul
mov
add
add
leave
out
xor
xor
dec
ret
shll
notl
out
jecxz
jns
mov
fcomps
fidivs
stc
or
in
adc
iret
lds
xor
arpl
mov
sbb
sbb
mov
outsl
inc
adc
std
xor
lcall
adc
test
mov
push
scas
pop
shr
dec
andb
cmp
or
adc
lods
dec
inc
fstps
lds
data16
dec
adc
mov
mov
inc
cmp
jns
std
sbb
push
mov
mov
popf
andl
jecxz
sbb
js
fnstenv
xchg
loope
push
popa
mov
daa
push
insb
in
out
loopne
xor
sbb
xchg
fnsave
lcall
xor
jmp
cwtl
iret
repz
into
jb
sub
movhps
addr16
mov
push
pop
shrl
insb
or
sahf
lcall
loopne
xor
hlt
and
mov
mul
push
jp
add
pop
stos
mov
jb
mov
filds
xchg
cwtl
fiadds
inc
adc
mov
sti
xchg
pop
push
ret
sarl
and
jae
iret
je
bound
in
pop
gs
xor
jae
push
add
mov
sub
cmp
mov
jg
jae
fstps
sub
or
test
add
sbb
adc
sbb
pop
cld
mov
leave
inc
insl
test
aam
dec
sbb
jg
in
gs
cs
adc
filds
pushf
popf
xchg
push
bound
mov
jbe
xor
xor
push
adc
push
loopne
push
ret
adc
jp
pop
cmp
xor
mov
mov
sahf
cmpsb
mov
int3
sbb
push
pop
mov
fisubl
and
push
ljmp
cltd
movups
xchg
cmpsl
ja
lods
pop
sbb
call
sbb
aas
or
push
hlt
in
add
jns
xor
testl
jae
jle
dec
mov
add
xchg
hlt
pop
push
cmp
jo
fldl
jns
daa
mov
xor
movsb
mov
sub
cmp
arpl
inc
shlb
shlb
getsec
push
cld
fs
sub
mov
and
add
add
in
dec
fldenv
pop
xchg
das
sahf
movsl
mov
adc
leave
pusha
inc
or
jmp
movsb
stos
fbld
out
and
xchg
cmp
daa
sub
in
and
mov
adc
test
popa
xor
cmpsb
test
push
or
or
inc
xchg
das
jecxz
xchg
test
jb
inc
jge
out
mov
xor
pop
mov
das
push
fbld
xor
cmp
xor
jecxz
das
loop
pop
imul
cmp
filds
or
cli
dec
cmp
jne
or
sbb
loop
adc
or
adc
daa
shrl
cmp
stos
sbb
imul
jae
adcl
ret
cmp
mov
iret
pop
adc
or
mov
loopne
sub
sarb
or
sbb
add
cwtl
dec
stos
or
mov
xchg
lea
ret
ja
mov
data16
xor
add
mov
push
mov
decl
add
daa
push
push
cmpsb
or
mov
sub
lods
mov
push
xor
mov
pop
icebp
add
out
add
add
inc
cli
mov
cmc
pop
pop
sub
push
test
aas
and
out
and
addr16
xchg
mov
dec
adc
or
sti
sub
imul
stos
lret
mov
xchg
inc
daa
loop
mov
mov
jle
or
or
sbb
ljmp
in
cmp
mov
mov
lret
ret
mov
popf
cmpsb
xchg
movsb
add
addl
add
fnsave
add
testl
cmp
fadd
or
out
adc
add
xchg
cli
jg
jo
push
xchg
xchg
arpl
add
cmpsl
jle
int
sub
loope
pop
outsb
and
push
cmpl
adc
jp
sbb
cmp
pop
jg
fsubs
int3
or
icebp
daa
std
pop
xchg
bound
loopne,pt
scas
push
andl
into
frstor
sti
and
ret
clc
jmp
inc
adc
push
pop
lcall
out
mov
or
dec
movsl
inc
cmc
push
mov
cs
sbb
mulb
cwtl
fadds
aad
das
aaa
fsubl
lret
xor
cmpsl
add
data16
xor
inc
inc
dec
push
js
outsb
bound
dec
adc
sub
mov
movsl
mov
mov
mov
pop
icebp
fisttps
add
faddp
mov
mov
adc
test
jae
jge
sahf
sub
stos
dec
dec
xorl
sbb
bound
out
cmpsl
cmpsb
lret
or
imul
xchg
enter
aas
mov
scas
cmp
cmpsl
xor
xor
ja
lahf
push
popf
pop
inc
fisubrs
lea
frstor
cmp
sbb
or
jne
cmp
scas
add
dec
mov
add
aas
mov
lock
sub
ja,pn
hlt
dec
ds
sbb
rep
pop
cmp
or
lcall
stc
mov
lds
iret
xor
imul
sub
sbb
sub
notl
sbb
enter
or
aam
cmp
dec
faddl
ret
push
xchg
cmp
mov
stc
fdivl
shl
add
cld
push
xor
es
inc
mov
and
in
shrb
pop
jbe
cmp
ret
xor
push
add
mov
sub
adc
or
jle
rorb
repz
test
jne
mov
pop
icebp
movsb
xlat
movsl
sub
movb
adc
pop
pop
fnsave
pop
cli
xor
lock
loopne
pop
jge
ss
ss
cmp
add
and
push
pop
adc
push
dec
lods
xor
and
shll
pop
sbb
and
addr16
mov
mov
cli
out
and
adc
faddl
xor
add
push
in
fs
xor
inc
cmp
es
fcompl
pop
cmp
pop
in
test
jnp
sbb
sarl
inc
sbb
sbb
bound
push
inc
sub
scas
push
movsl
push
mov
xchg
arpl
jbe
call
in
shrl
add
fnsave
div
aas
out
arpl
adcl
jb
mov
dec
mov
xor
jecxz
add
inc
lds
add
mov
xchg
jp
dec
jo
mov
inc
scas
cmp
sbb
sub
mov
xor
movsb
jnp
shl
cmp
jno
fdivrl
jge
cli
adc
les
sub
icebp
mov
sysexit
jmp
js
push
fs
imul
push
lea
and
and
pop
lret
fldcw
lcall
mov
imul
push
push
mov
sub
test
shl
sti
imul
or
lods
or
xor
arpl
mov
jnp
dec
pushf
out
mov
adc
jbe
pop
iret
sub
nop
loop
pop
stos
xchg
insb
adc
jmp
shlb
mov
clc
std
sub
js
cld
out
sti
in
add
xchg
cmp
dec
loope
cmp
gs
ds
test
mov
lea
inc
sub
lret
sub
jle
and
mov
ret
insb
andl
dec
push
movsl
mov
lods
fisubrs
in
mov
popa
loop
lahf
loop
fs
enter
mov
sub
inc
sahf
std
mov
pop
push
pop
roll
dec
add
je
mov
jb
stc
jecxz
dec
jl
and
scas
dec
pushf
aad
cmp
or
cwtl
sahf
orl
sti
loopne
push
ret
inc
or
xor
xchg
inc
pusha
je
pushf
jns
pushl
mov
jp
leave
loope
lds
cmp
jnp
cmp
loop
ds
pusha
cli
sahf
push
xchg
mull
push
or
popf
or
test
clc
xor
sbb
leave
sub
scas
push
cmp
cmpsb
mov
js
xchg
or
add
adc
roll
rorb
dec
xchg
outsl
movsl
hlt
push
in
mov
insl
pop
mov
xchg
sbb
pop
mov
sbb
fsubrs
ss
add
inc
dec
aad
cmp
in
test
push
daa
fbld
pushf
adc
testb
jno
loopne
stos
aam
popf
mov
arpl
mov
subb
fisubrl
jp
ficoms
xor
and
lods
dec
scas
or
fisttpll
jbe
pop
cmp
je
das
lea
repnz
xor
mov
aas
int3
jnp
adc
fimull
cmpsb
das
sbb
mull
mov
xor
or
jl
insl
mov
rol
in
xchg
in
and
inc
lcall
xchg
jmp
dec
test
cld
lods
lods
xchg
and
fistps
inc
push
sbb
scas
shrl
fdivrl
mov
push
rorb
ret
lods
js
movsl
nop
cmc
cmp
xchg
xor
pop
shl
adc
mov
push
ljmp
repz
jnp
inc
jg
ljmp
lcall
push
aaa
xlat
rcrb
js
inc
xchg
pop
jle
push
dec
sbb
add
outsb
xchg
inc
sub
jmp
mov
mov
adc
push
or
mov
add
shll
imul
jge
iret
loopne
out
inc
inc
xor
cmp
stos
xor
aad
data16
mov
push
in
movsb
data16
std
inc
sub
sbb
insb
call
pop
pop
sub
adc
mov
adcl
xchg
fisttpl
push
ret
hlt
cmp
pushf
inc
leave
adc
sub
mov
push
data16
mov
cmpsb
add
xor
adc
mov
sbb
add
ja
loope,pn
sbb
adc
scas
jne
inc
addr16
imul
popf
inc
jns
js,pt
pusha
loop
inc
aaa
sbb
out
lock
xchg
mov
mov
cmpsl
in
xor
repnz
ss
mov
push
in
push
push
rcll
test
clc
or
jbe
xchg
mov
das
daa
loopne
xlat
call
mov
push
roll
mov
mov
aad
inc
mov
test
fs
adc
aam
mov
jle
mull
add
ss
lods
cmp
jb
movsb
cmp
add
lcall
addl
leave
pop
cwtl
in
push
push
inc
or
xchg
in
into
inc
sub
cs
lock
pop
sub
pop
insl
out
pusha
pop
rcrl
pop
arpl
xlat
jmp
cld
inc
mov
scas
xchg
lea
push
ja
push
push
aaa
stos
outsl
mov
scas
push
push
fiadds
ljmp
test
mul
cwtl
in
mov
shlb
imul
pop
or
pusha
mov
mov
dec
push
jl
ret
rorl
fistpl
sub
lods
les
pop
xchg
in
int
xor
add
jbe
mov
jge
loopne
enter
scas
inc
adc
mov
jl
int
adc
int
loope
sbb
clc
push
lea
shrl
push
xchg
addr16
or
dec
aaa
xchg
mov
pop
mov
scas
ds
sbb
push
loope
loopne
loop
out
or
repnz
dec
xchg
lea
nop
push
fiadds
and
fisttpll
mov
lahf
mov
stos
lock
push
xlat
movsl
add
xlat
lods
push
and
into
fcompl
mov
add
add
scas
dec
lods
out
cmp
inc
xor
xchg
push
cltd
mov
mov
jae
out
jbe
and
fistpll
mov
jno
sub
cwtl
or
fisubrs
fwait
lahf
ret
mov
in
shl
push
jno
add
ljmp
mov
test
add
jmp
imul
and
cmpsl
ljmp
das
xor
cmp
test
cmp
shlb
sbb
mov
or
std
imul
adcl
shll
jns
jl
jo
xchg
inc
icebp
sbb
fs
shll
mov
scas
xchg
fistpll
mov
sbb
dec
mov
xor
and
cmpsb
or
xchg
ss
rcrb
push
dec
xor
xchg
mov
add
pusha
fnstcw
sbb
mov
push
jg
in
and
jmp
pop
push
inc
sbb
popa
arpl
cmp
in
push
xor
pushf
or
in
and
and
adc
inc
mov
jbe
outsb
mov
call
aaa
sub
jnp
lds
popf
mov
jb
jno
ret
pop
mov
sbb
xchg
lea
cmpsb
test
push
pop
mov
jb
stos
lret
and
fisttpl
push
sub
sbb
test
or
fucomi
jmp
data16
and
adc
push
or
push
sti
gs
mov
or
mov
cmpsl
mov
out
mov
or
and
pop
mov
lret
ljmp
add
into
icebp
inc
aad
fimuls
daa
push
push
andb
adc
in
push
dec
sub
in
loopne
ds
cmp
push
jle
into
pop
mov
mov
fxch
in
sti
pop
jg
sub
gs
jae
shr
sti
dec
jns
inc
fwait
sarl
add
xchg
inc
lods
push
jnp
popf
mov
imul
jp
mov
fdivrp
fs
sub
add
sbb
sub
push
jo
or
inc
mov
pusha
pop
cltd
aad
loop
and
pop
mov
xor
addr16
aad
aaa
xchg
jmp
lea
lret
mov
shrb
lret
aas
jmp
mov
repz
jnp
or
dec
mov
inc
mov
sbb
fs
sub
out
call
lcall
dec
dec
push
nop
fwait
scas
ret
jge
movsl
inc
inc
pushf
cmove
ret
test
inc
out
hlt
dec
pop
fstps
push
inc
test
mov
aam
incb
xor
xchg
cmp
jns
sub
std
sub
jg
test
movswl
xchg
icebp
lods
gs
decl
mov
dec
pusha
lods
mov
xchg
sub
or
dec
cmp
in
dec
cli
add
mov
cmp
dec
push
mov
lret
sub
pop
jb
rcll
subb
sbb
cmpsl
sub
jecxz
and
daa
dec
jp
rclb
push
fsubrs
out
outsl
or
pop
pushf
pop
repnz
in
sub
mov
outsl
pop
mov
dec
pop
and
dec
sbb
daa
inc
enter
dec
xlat
push
pop
push
mov
jmp
lcall
dec
sub
xchg
gs
popa
push
shll
aad
inc
aaa
rorb
into
in
jecxz
xchg
rclb
mov
lock
imul
imull
mov
in
cwtl
xchg
mov
enter
jo
xor
mov
sarl
or
rorb
fwait
push
shll
push
mov
xchg
stos
scas
outsl
fnsave
mov
jbe
outsb
sub
and
cs
sbb
jno
pop
mov
mov
pop
scas
and
and
pand
fs
fnsave
ds
push
test
stos
int3
sahf
cmpl
enter
stos
cltd
imul
inc
imul
aaa
lret
pushf
sbb
add
inc
xchg
iret
sbb
dec
push
cmp
pop
cmp
push
or
repz
inc
das
lahf
shlb
and
jne
cld
rcrl
pop
xchg
test
xchg
mov
cmp
loope
pop
aam
sbb
cmp
rclb
cmp
outsl
lahf
push
xor
mov
sub
imul
jmp
and
test
cmp
imul
mov
xor
imul
insb
cmp
xor
ljmp
adc
add
movsl
adc
cmpsl
mov
or
aas
lcall
adc
and
cmc
std
adc
js
jbe
pushf
jnp
in
push
sbbl
jnp
xchg
xchg
pop
jne
iret
fidivl
mov
and
movsl
and
mov
xor
pop
sbb
push
stos
xor
jle
popa
lret
xchg
movsb
xor
pmulhw
pop
pop
stos
mov
jbe
daa
cld
push
xlat
mov
aam
lahf
xor
adc
push
sub
inc
dec
adc
jns
out
addr16
xchg
and
into
arpl
push
mov
pop
aad
hlt
mov
sub
jg
loop
inc
clc
int3
addb
into
gs
daa
xchg
inc
inc
cld
cmpsl
mov
jle
sub
insb
mov
add
and
add
mov
clc
sti
push
lahf
push
test
outsl
xor
pop
push
decl
call
in
dec
mov
cld
hlt
pop
je
sahf
sub
dec
int
pop
in
push
mov
mov
stos
mov
mov
shrb
leave
jp
mov
sbb
fcomps
arpl
pop
mov
dec
out
cmc
das
rolb
mov
xchg
xor
repnz
je
jb
std
punpcklwd
xchg
lret
pop
int3
xchg
shrb
and
cmp
test
lock
mov
adc
mov
gs
pop
sbb
ret
mov
inc
pop
xor
outsb
mov
stc
aad
fwait
adc
jbe
sbb
add
mov
test
mov
push
addr16
out
shlb
dec
mov
lds
mov
sub
sbb
jne
and
dec
inc
push
test
mov
mov
mov
sbb
pop
jne
push
mov
xchg
push
bswap
push
add
mov
ja
or
enter
adc
adc
js
xor
mov
hlt
fcomps
push
je
int3
mov
xor
pop
cmp
adc
ja
dec
and
pop
push
lea
pushf
repz
dec
in
rcll
insl
add
xlat
outsl
int3
lcall
mov
notl
stos
mov
xchg
cmp
mov
inc
pop
mov
pop
test
xchg
aas
lahf
fimuls
cmpsb
add
or
gs
out
cmp
fidivl
adcb
out
dec
scas
imul
test
add
scas
mov
lea
pop
jne
sub
mov
sub
mov
icebp
mov
and
add
in
sti
cmp
dec
cwtl
xor
das
adcb
loopne
jp
mov
cmp
xchg
stos
mov
frstor
pop
ss
cmp
fcmove
dec
cwtl
dec
jae
lcall
lods
icebp
loopne
int3
cmc
mov
push
jg
fcomp
fcmovnbe
push
inc
mov
outsl
cmp
lods
push
mov
jb
mov
push
aaa
dec
mov
lds
mov
jmp
push
call
pushf
adc
add
jg
pop
nop
mov
mov
outsl
iret
dec
xchg
mov
jb
jp
xchg
iret
movsl
addb
pop
push
popf
jns
arpl
inc
xor
lea
not
cmp
add
xchg
sub
shlb
das
adc
jne
pop
leave
jns
jmp
mov
icebp
xchg
inc
ret
scas
adc
push
xchg
pop
xor
sub
or
jl
test
ror
scas
mov
pop
pop
roll
fsub
loopne
pop
sub
mov
mov
mov
movsb
mov
cli
pop
dec
mov
iret
xchg
push
pushf
inc
and
adc
in
rcll
test
in
mov
pop
in
sbb
outsl
shrl
leave
jp
stc
jmp
adc
lret
jl
sbb
mov
mov
out
outsl
add
das
cs
dec
movsb
xchg
xchg
or
push
repz
lret
mov
and
pop
aad
sarl
dec
or
std
movsb
sahf
test
push
mov
frndint
mov
push
jns
sbb
das
mov
and
pop
jl
push
aas
sub
xor
bswap
inc
repnz
clc
int3
faddl
setno
mov
push
or
bound
xor
cmpsb
fisubs
enter
pop
inc
sbb
fnstcw
push
sbb
andl
cmpsb
jl
push
pushf
aam
push
aad
pushf
jl
shlb
fstpl
cmp
sbb
mov
fadds
andl
jle
pusha
lret
lods
sub
dec
xor
clc
jae
lret
cs
add
push
fsts
adc
xlat
stc
cli
sub
mov
jmp
or
ror
stos
xchg
cmp
in
add
or
jmp
xchg
adcl
dec
xor
icebp
movb
cmp
in
jecxz
inc
fwait
and
push
fxch
out
fimull
test
mov
adc
popa
fidivrs
pusha
enter
in
jg
out
jne
out
imul
orb
mov
jle
sub
roll
andb
test
jl
jbe
loopne
inc
push
bound
in
roll
repnz
mov
ror
cmp
cmpsb
daa
pop
cmp
sub
mov
pop
lret
fcompl
add
xchg
rcrl
ret
es
addr16
lea
lock
out
inc
cli
cmp
jge
xor
add
add
mov
pop
rolb
aam
div
outsb
sti
cmp
in
cmp
lcall
mov
xchg
xor
cmp
lds
loop
mov
ret
stos
sbb
int
popa
inc
in
cmpsl
xchg
enter
mov
jae
into
cs
cmp
xor
inc
lahf
mov
lret
dec
push
movsb
dec
xorps
jmp
dec
test
add
and
mov
je
test
shr
cmp
dec
shl
cld
cmp
test
hlt
movsb
stos
sbb
pop
push
ljmp
adc
loope
mov
adc
enterw
mov
mov
add
test
fwait
pushf
fcmove
data16
sub
push
call
pop
or
std
vpmulhw
add
xor
les
pop
inc
jns
insb
ret
dec
sub
aad
push
or
sbb
in
and
aaa
inc
jbe
or
pop
out
das
out
xchg
sahf
and
fs
std
nop
scas
test
or
cld
and
in
loope
pop
cmp
xor
popa
sub
sti
fistps
loope
mov
iret
cmp
xlat
mov
aad
loope
adc
cmpsl
mov
pop
dec
ja
idivb
dec
pop
pop
mov
imul
add
push
fnstsw
inc
xlat
loopne
push
xor
mov
push
ljmp
repz
repnz
jae
in
rclb
add
cmpl
add
mov
loopne
jl
xor
push
jmp
fstpl
ret
xchg
jmp
loop
shlb
push
test
data16
mov
aad
out
and
add
mov
sub
cmp
dec
clc
lds
add
mov
sti
imul
mov
sub
cli
mov
stc
inc
jno
imul
push
push
cmp
add
into
sbb
inc
ljmp
xor
xchg
mov
les
jb
movl
or
in
dec
out
stc
mov
adc
cmp
xor
repnz
jp
daa
dec
std
xor
je
jo
pop
sub
lods
push
sarb
pop
fwait
mov
movsl
fcmovnu
pushf
test
testl
outsb
and
mov
and
fs
pop
aaa
sti
add
imul
enter
cmp
outsl
aad
push
rcll
aam
ljmp
mov
mov
mov
mov
and
loopne
rclb
pusha
mov
cld
sbb
stc
push
outsl
bound
push
in
lods
loop
mov
xor
dec
fsubs
out
sub
jecxz
jo
or
jne
mov
test
dec
xchg
sbb
jg
push
mov
in
add
or
and
loope
sarl
test
test
mov
enter
ficompl
dec
in
je
push
ficoms
imulb
cmp
cmpsb
sbb
pushf
xchg
dec
fdiv
pushf
sahf
aad
mov
sub
mov
scas
enter
or
and
lcall
int3
sub
aad
dec
mov
pop
sahf
and
jmp
mov
xor
stos
mov
mov
mov
mov
pop
xor
sub
xchg
jmp
push
cmp
dec
fs
mov
scas
stos
loop
mov
je
insl
inc
add
inc
cmp
frstor
rorl
adc
pop
mov
fwait
add
loopne
out
shrl
xor
jecxz
dec
rclb
jae
bswap
pop
xor
mov
out
and
cmp
std
xchg
and
ss
lock
imul
pop
pop
sub
test
cmp
sahf
sub
loope
push
mov
push
inc
aas
cltd
xlat
pop
nop
and
out
dec
ret
jbe
dec
cmp
mov
xor
mov
popf
jecxz
cmp
enter
pusha
jnp
adc
inc
leave
cmp
fdivl
jae
insl
sbb
cmp
scas
xchg
push
jno
sbb
cmp
shrl
dec
in
das
jecxz
shrl
sub
adc
pop
push
and
mov
in
adc
mov
movsl
sub
sarl
les
cltd
add
fcoms
push
dec
xor
test
xlat
into
sahf
mov
aaa
mov
clc
jmp
mov
shll
or
jge
or
hlt
cmp
in
setb
cmp
aam
ja
je
add
ret
pop
push
pop
lahf
mov
cmp
or
push
orl
mov
daa
cwtl
jns
dec
data16
testb
aas
cwtl
je
adc
sti
inc
pop
sbb
add
nop
push
lods
mov
xchg
add
push
loope
push
repnz
push
in
xchg
push
cmp
pop
xor
fwait
rcrb
mov
xchg
mov
fldt
pop
pusha
shlb
xor
test
popa
aaa
pushl
jp
shll
pop
cmpsl
dec
in
inc
fadds
mov
xor
or
xor
jmp
shrl
or
bound
xchg
ss
fmuls
sub
cld
add
pop
jbe
aas
jbe
mov
or
sbb
insl
negl
xchg
mov
and
inc
cmp
mov
in
dec
cmp
subl
decl
pop
jmp
adc
jns
jmp
pop
xchg
adc
jbe
sub
xor
lea
call
adcb
scas
incb
icebp
mov
or
jbe
lods
or
jecxz
cmp
mov
sar
xchg
xchg
jns
test
mov
insl
xlat
popf
xor
jno
and
mov
dec
add
cs
mov
inc
dec
jl
mov
push
sbb
xchg
add
sbb
adcb
pop
inc
and
dec
xchg
shll
ret
pusha
cmpsb
mov
adc
out
int3
and
cmp
jb
mov
cmpsb
xchg
xchg
push
cld
fucomi
mov
mov
adc
scas
hlt
fildll
cmp
xchg
in
adc
jns
mov
hlt
push
push
sbb
mov
cmpsl
push
mov
jmp
icebp
sub
mov
cmpxchg
xchg
mov
data16
je
add
ror
shlb
inc
lods
lds
rcrb
xchg
adc
fdivl
sub
std
sub
insb
loop
cmp
ljmp
cmpsb
or
mov
pop
jnp
outsb
insb
and
into
inc
xor
lds
nop
iret
addr16
sub
and
sbb
add
int
sub
inc
mov
cmpsl
push
sbb
jne
dec
inc
mov
add
jge
mov
sarl
loop
pop
mov
adc
dec
frstor
icebp
mov
mov
push
ljmp
test
cmp
xchg
cmc
jno
xchg
mov
aad
int3
jbe
fs
cmc
shl
add
sbb
pop
stos
inc
dec
cli
or
and
frstor
and
repz
xchg
shrl
mov
lea
je
pop
leave
aad
cli
lret
push
out
cmc
dec
or
xlat
lock
dec
call
xlat
push
fs
jo
inc
sbb
cmp
add
mov
lea
mov
mov
and
in
mov
cltd
outsb
cmp
movsb
stc
sbb
mov
mov
dec
ficoml
stos
inc
dec
in
dec
das
cwtl
xchg
outsl
cmp
inc
mov
sbb
cmpsb
lret
fisttpll
pop
inc
jecxz
xchg
stos
psrlw
xlat
pusha
ja
and
ljmp
in
add
dec
xchg
mov
dec
fistpl
daa
rorb
rcl
inc
jmp
jp
inc
xchg
jp
dec
scas
push
dec
cmp
pop
out
jnp
sub
test
dec
lods
xchg
cli
adc
and
jno
loop
add
or
jecxz
pop
mov
data16
jnp
inc
into
fld
fnsave
scas
je
push
loope
jne
pop
add
mov
sbb
outsl
sub
testl
xchg
inc
or
fidivrl
mov
sarl
mov
push
out
inc
mov
mov
adc
int
popa
dec
xchg
rcll
mov
sbb
adcb
pop
sbb
clc
and
inc
sub
inc
and
fcompl
xorl
repnz
pop
fdivp
fists
dec
in
or
push
in
mov
std
sarb
add
mov
aam
hlt
lods
xchg
jo
adc
cmp
mov
add
cmpsb
aam
es
subl
std
or
into
pop
sub
lret
push
neg
lds
shll
xlat
cs
enter
mov
or
mov
cmc
jns
sti
ret
fwait
mov
sbb
fwait
bound
cmp
ds
sub
paddusw
andl
mov
inc
orl
jae
jge
sub
fnstcw
xchg
inc
imul
xor
add
pop
shll
notl
jne
jbe
xorb
sub
push
add
jno
pop
cli
sti
outsb
test
shlb
leave
out
mov
xor
out
rcrb
push
mov
cmp
repz
mov
sbb
fsubs
addr16
dec
pop
mov
mov
ja
xchg
push
decl
pop
les
stc
push
push
push
push
pop
jge
cmpsl
test
cld
sub
es
movsl
sbb
rcrb
sahf
sbb
push
ja
xor
fldl
mov
xor
stos
adc
es
cwtl
push
sub
inc
cmp
outsb
jae
bound
xchg
hlt
or
cmp
icebp
mov
xor
push
outsb
dec
mov
mov
inc
push
push
xchg
jns
sbbb
enter
add
or
fisubrl
bound
and
in
cltd
xchg
rolb
rorl
cmp
mov
add
push
je
loope
inc
out
mov
mov
mov
sub
mov
sbb
and
inc
mov
aam
push
xor
lock
out
ret
pop
mov
je
pusha
imul
mov
test
repnz
pop
inc
or
pop
rorb
popa
loop
adc
loopne
scas
add
into
pop
adc
fistl
pop
sub
pop
ficompl
popl
adc
ret
lret
movsb
inc
repz
stos
insl
push
aad
es
and
ja
xchg
movsb
xlat
or
pop
inc
jnp
sub
push
mov
pop
mov
cmp
mov
out
push
pop
jo
inc
push
fcomps
xor
test
jno
aas
sbb
lock
sub
push
pop
mov
lret
pop
lods
out
dec
dec
adc
aam
rolb
test
pop
int3
mov
mov
xor
in
inc
sbb
decl
dec
lock
inc
inc
and
mov
in
push
iret
shll
lods
xchg
lds
shlb
pop
xchg
add
fucomip
loope
daa
ljmp
lods
adc
inc
enter
outsl
ret
sbb
insb
imul
lods
mov
aaa
jb
stos
xor
jge
adc
pop
or
xchg
loope
aad
sub
pop
into
inc
ds
outsl
mov
dec
push
js
jle
mov
mov
cmc
sbb
test
aas
sub
cli
cmpsl
addr16
cmovle
sub
test
jmp
in
pop
js
and
xor
add
insb
jg
pushf
fcomps
dec
xchg
rcr
sar
xor
mov
fidivl
bound
inc
std
cmp
push
add
lods
add
jno
lcall
mov
orl
js
sub
paddusb
xchg
cmp
xor
cs
sub
xor
sarl
jae
xor
gs
cwtl
cmpl
aad
arpl
imulb
mov
lock
push
fmuls
outsl
jmp
pusha
lock
popa
or
scas
mov
roll
or
aas
fisubs
pop
movsb
ss
jl
jae,pn
pop
cmp
push
cltd
lds
out
sub
addl
mov
stos
push
cmp
and
call
mov
out
outsl
mov
mul
push
add
mov
dec
add
icebp
test
movsb
push
sbb
aas
popf
mov
cmp
push
adc
ljmp
in
jl
xor
mov
pop
jmp
xor
jb
push
ret
shr
mov
adc
adc
adc
loop
fbld
mov
enter
push
pop
aaa
push
jb
sub
xchg
call
fisttpl
nop
jbe
js
inc
pop
roll
xlat
jg
adc
scas
push
or
mov
out
push
cmc
or
in
jecxz
mov
int3
pop
sti
jmp
loop
lods
testl
cmpsb
bound
cltd
mov
popa
or
cltd
push
xchg
pop
shld
jbe
lods
mov
add
divl
jl
fdiv
jb
icebp
cmp
jb
cmp
adc
or
push
loopne
mov
in
mov
sub
orl
out
ss
dec
adcl
loop
test
pop
and
inc
push
sbb
sbb
mov
mov
pushf
and
pop
cs
inc
js
pop
pop
arpl
cs
cltd
adc
inc
pop
add
jns
mov
mov
jle
mov
jmp
xchg
or
add
loopne
cmp
dec
lret
inc
call
ret
pop
mov
push
repz
jo
mov
movsl
sbb
or
xchg
mov
outsl
push
in
cmp
fistpl
dec
js
jns
pop
jae
inc
mov
cltd
mov
jecxz
push
das
movsb
out
mov
xorl
push
shll
mov
mov
add
or
mov
jns
enter
push
mov
add
pop
cmpsl
xor
xor
aam
mov
adc
aam
repnz
cs
and
push
xchg
jle
xchg
xor
push
int
xor
inc
dec
sbb
cld
test
xor
das
call
inc
lahf
lods
add
lock
jmp
add
mov
lcall
mov
cmp
mov
push
out
mov
mov
jp
fsubrp
es
dec
daa
xor
mov
adc
sahf
ljmp
cmp
add
ljmp
sub
cmp
sub
out
ss
movsb
mov
repnz
ss
pop
and
sbbl
es
bound
mov
mov
mov
fwait
sub
jnp
push
enter
push
test
mov
xchg
js
fdivrl
cmpsb
lock
mov
sbb
jge
dec
lods
pop
rorb
push
ljmp
mov
xchg
or
lcall
inc
or
pop
add
inc
cmpsb
popf
iret
inc
jge
dec
repnz
jne
sarl
imul
mov
add
aam
mov
inc
inc
mov
outsl
fmuls
iret
mov
jae
push
mov
jb
and
mov
push
push
pop
fildll
cmp
dec
mov
adc
ret
fimull
dec
iret
out
jmp
sbb
push
jmp
mov
subl
fdivrl
sbb
mov
rclb
sbb
je
adc
repnz
jle
dec
adcb
mov
mov
lret
and
lock
arpl
sbb
dec
int
inc
mov
cmp
push
popl
mov
inc
pop
jb
mov
lods
dec
jecxz
leave
movsb
and
dec
fwait
cmp
and
dec
mov
lret
push
pop
mov
inc
xchg
pop
fstp
mov
mov
mov
imulb
mov
pushf
aas
into
mov
ss
outsl
pop
sbb
xchg
sub
mov
lcall
ror
into
mov
xor
sbb
mov
sbb
aas
rol
inc
cmp
stos
or
inc
and
adc
cmp
add
std
repnz
test
xchg
sub
mov
adc
int3
imul
xchg
dec
and
leave
inc
bound
push
cmc
xor
repz
incl
pop
jmp
mov
inc
jp
or
fucomp
pusha
test
in
sti
mov
cmpsl
mov
push
xchg
imul
pop
mov
xlat
and
jg
mov
shl
aam
ja
imul
xor
fistpll
mov
imul
fdivrl
xchg
addr16
xchg
push
stos
cmpsb
rolb
repnz
jb
addr16
out
test
jno
stos
mov
pop
fidivl
ret
or
push
and
push
aad
push
jne
js
pop
and
mov
dec
out
fcompl
repz
cmp
hlt
jne
mov
in
cmp
shrl
popf
mov
sub
add
aam
push
enter
fsubrl
mov
je
lea
out
push
mov
mov
jmp
jle
andl
mov
xchg
mov
aas
jns
movsb
xchg
jo
faddl
pop
aad
adc
xchg
inc
cmpsb
sbb
test
xchg
push
mov
fisubl
jg
je
je
sub
and
sub
mov
mov
into
iret
ja
push
dec
pop
aas
cmc
mov
xchg
aaa
jae
fldz
pop
adc
dec
xchg
adc
sar
jle
fwait
adc
xchg
aad
pop
lahf
cmp
jnp
add
lcall
packuswb
push
cmp
mov
push
mov
addr16
test
push
rcl
xchg
or
bnd
popa
loopne
cmp
and
ficomps
lahf
lock
sub
xor
mov
push
fstpt
mov
test
orl
in
cli
mov
imul
pop
imul
xchg
sbb
mov
inc
enter
loop
pusha
cmp
out
int3
out
hlt
adc
pop
bound
or
cmp
pusha
jl
hlt
or
std
divb
xchg
inc
dec
jmp
out
xor
pop
jnp
pop
fistps
es
lods
inc
rcrb
xchg
insl
stos
xchg
hlt
jnp
sti
add
pop
scas
loop
jns
cmp
mov
push
pop
mov
sub
mov
add
mov
into
test
lret
jbe
jg
push
add
loop
pop
cmpb
out
data16
dec
and
cld
and
scas
outsl
scas
mov
movsb
cwtl
xchg
frstpm(287
pushf
and
decl
addr16
repz
lcall
sti
roll
cmpsb
push
test
int
in
xor
adc
adc
fisubrl
lods
movsl
pusha
repnz
mov
shrl
aam
insb
loop
inc
push
stc
add
js
je
push
jne
lods
add
or
leave
aas
jl
or
xchg
adcl
in
adc
insl
es
mov
movsb
hlt
push
sbb
xchg
mov
and
sub
jbe
cmp
fnstenv
subb
mov
xchg
je
mov
aad
fwait
ret
clc
movsb
and
sub
dec
mov
jg
and
mov
jnp
stos
cmc
jle
cmp
jecxz
jno
mov
call
mov
cmp
clc
leave
roll
mov
and
mov
mov
inc
inc
sbb
mov
sub
insl
lock
push
mov
add
jns
jp
push
orb
pop
jo
mov
mov
or
sbb
in
mov
or
shlb
cld
iret
jp
imul
test
cmpsl
dec
add
popa
inc
dec
xor
pop
enter
out
scas
dec
lock
add
jp
xchg
push
subb
mov
lods
out
xor
and
movsl
pop
in
arpl
jbe
mov
pop
xchg
lret
jp
scas
mov
cmp
add
xchg
fwait
add
es
push
sbb
nop
loop
xchg
and
xor
mov
stc
pop
mov
xor
popa
test
ret
jbe
or
div
xlat
cwtl
int
sbb
ficoms
cmp
dec
lret
add
push
ficompl
jg
xchg
adc
lcall
in
cmp
dec
stos
mov
and
xor
sbb
clc
push
loope
in
inc
add
mov
je
jnp
sbb
das
mov
test
fdivrs
adc
lret
arpl
out
and
fidivl
mov
leave
dec
xor
mov
mov
out
int
inc
pusha
xlat
add
cs
cld
cmp
in
mov
pusha
adc
outsl
cmp
xchg
mov
push
sbb
xchg
jmp
fdivl
inc
cmp
xlat
inc
mov
xchg
push
cld
fwait
adc
mov
or
mov
loop
movsb
call
ljmp
sub
or
adc
mov
jns
cmp
or
dec
push
in
test
dec
outsl
add
lea
pusha
jl
inc
push
scas
test
cwtl
adc
adc
mov
scas
jg
mov
stos
lcall
jo
push
jnp
pop
pop
push
jns
test
cmc
aad
mov
cltd
jle
pop
daa
nop
mov
fbstp
ja
leave
dec
cmp
dec
in
sbb
lods
fistpll
popf
add
daa
ret
in
jo
jns
push
in
cs
aaa
repz
pop
and
fsubs
imulb
add
imul
ret
imul
xchg
lret
data16
dec
out
fdivrl
test
inc
jne
adc
inc
lock
xchg
out
jne
cmp
push
ret
mov
nop
push
data16
mov
xor
jp
paddsw
ja
pop
cmpps
out
mov
pop
popa
int
popf
pop
out
aaa
sub
mov
fcomi
iret
push
xchg
add
mov
insb
gs
je
fisttpl
jbe
ljmp
cmpsl
daa
cmpsl
fildll
test
sub
push
fdivrs
dec
dec
ds
repz
je
sub
cmp
or
sbb
imul
movsl
daa
push
push
xchg
xchg
movsb
xor
jbe
arpl
stc
or
std
jg
int
sub
jae
punpckhdq
cwtl
mov
mov
push
and
sbbb
shrl
insb
jb
dec
shr
pop
cwtl
mov
les
pop
mov
inc
mov
lds
aam
pusha
loope
add
scas
pop
movsl
jae
sahf
bnd
lods
sahf
popa
insl
xor
stos
out
cmp
dec
scas
movl
lret
cmp
out
aaa
cmp
pop
hlt
andb
adc
mov
aam
cmp
xor
xor
repnz
aaa
adc
adc
out
stc
out
and
ret
adc
push
jl
mov
stc
loope
fsubl
es
jp
addr16
sti
cltd
push
je
aas
adc
push
mov
imul
int
loopne
ss
jle
cmp
jg
add
or
ret
rcll
mov
and
shrb
mov
fwait
xor
call
je
cmp
jmp
cmp
and
xor
imul
xchg
dec
pop
andb
ret
xchg
iret
xchg
mov
dec
mov
mov
mov
mov
insl
stos
sub
push
xchg
or
ja
lds
mov
stc
sub
shl
cmp
clc
and
mov
das
sub
add
std
jno
sub
out
je
push
mov
leave
adc
cmp
mov
imul
nop
les
push
push
icebp
outsl
pop
jl
mov
out
bound
xor
movsb
pop
fistpl
lcall
push
int
push
fdivrs
mov
add
mov
add
adc
rorb
in
das
cmp
xor
or
xchg
xchg
mov
xor
sub
xor
fidivs
fstpt
cs
push
mov
addr16
sub
stos
and
mov
out
mov
jl
xlat
jmp
repz
adc
fs
mov
sbb
push
pushf
pop
les
inc
movsl
subl
int3
sub
push
cld
jmp
ss
lods
jns
insb
lods
pop
cmp
mov
aam
nop
sbb
lret
js
push
clc
enter
insl
pop
in
popf
lahf
mov
add
xor
push
mov
mov
mov
stos
scas
lcall
sub
daa
xor
sub
xchg
out
out
adc
add
xchg
arpl
cmp
xor
lods
test
inc
add
pop
cli
push
dec
xchg
mov
mov
jge
sbb
imul
xchg
mov
push
stos
pop
rcll
jecxz
and
popl
xor
sbb
in
push
imul
lret
inc
adc
sbb
push
fs
inc
in
out
and
sub
cltd
gs
pop
cltd
add
and
in
outsl
mov
jmp
out
aas
lea
popf
and
not
mov
fcompl
xor
je
adc
imul
aaa
cmp
mov
roll
pop
pop
xchg
repz
dec
dec
int3
add
mov
pop
lea
cs
and
loop
xchg
icebp
push
pusha
or
mov
jne
fnstsw
lock
sub
popa
daa
sbb
gs
adc
mov
pop
sahf
or
mov
fidivs
xor
pop
push
inc
fs
iret
int3
push
insb
push
dec
push
dec
shll
gs
aas
sub
xor
sub
sbb
test
xchg
pop
nop
jmp
sbb
push
jae
xchg
mov
jne
jne
xlat
lret
test
inc
leave
loopne
cmp
and
add
jae
push
mov
dec
lods
dec
inc
push
call
sarl
insl
imul
cltd
mov
cmpsb
pop
loopne
lcall
inc
adc
sub
negl
and
pop
push
in
and
outsb
sahf
mov
add
cwtl
push
das
mov
cmp
popf
lea
push
fildll
imul
clc
hlt
jge
mov
sbb
aaa
push
push
pop
or
jb
push
imul
sub
jno
mov
mov
insl
jno
xor
cmp
ret
inc
cmovs
add
push
jecxz
outsl
and
orb
nop
cld
mov
jno
rol
adc
xchg
xchg
mov
loop
repz
test
adc
jnp
xor
lds
or
fisubrl
push
int3
ret
inc
jnp
popf
dec
movsl
cmp
jp
rcr
jp
lods
xchg
ficompl
stos
dec
mov
or
es
int
ret
arpl
in
add
pusha
dec
sbbl
mov
addb
pop
ljmp
fiaddl
lea
xor
jle
loopne
sub
shlb
jg
test
sbb
out
adc
jl
aas
aaa
sub
and
xchg
mov
pushw
inc
int3
xchg
pop
adc
mov
push
lahf
and
pop
sti
ret
mov
jle
xchg
or
push
inc
jp
mov
lret
lret
jge
mov
xlat
int3
jl
nop
sti
mov
jg
cmpsl
push
ret
sub
adc
ss
imul
mov
pop
pop
mov
inc
dec
dec
out
or
lods
cltd
mov
rcrb
xchg
dec
ficomps
je
hlt
sbb
jl
adc
aas
ret
or
adc
mov
cmpsl
loopne
jecxz
test
fsubl
pop
pop
std
arpl
mov
sub
dec
push
pop
mov
addl
outsb
popf
enter
push
cmpsl
xor
sar
lock
lret
ja
aaa
addr16
adc
sub
adc
sub
dec
roll
cwtl
mov
push
sti
jnp
mov
cli
ret
aaa
mov
mov
std
sbb
adc
iret
hlt
rclw
mov
pop
inc
lahf
and
cmp
repz
cmpsb
adc
insl
push
aam
lret
insl
mov
je
in
dec
repz
xchg
lcall
leave
push
iret
lods
mov
iret
ljmp
sbb
aam
orl
cltd
jge
jecxz
rcrb
sub
jae
nop
and
fldl
xor
ss
or
push
adc
and
bswap
or
mov
add
push
daa
inc
xchg
pop
into
and
dec
push
mov
fucomi
leave
jae,pt
jp
ret
aam
mov
xchg
movsl
and
xchg
nop
jne
shrb
int
das
xchg
xchg
sbb
xor
rcrb
jo
inc
popa
jp
and
in
xchg
std
mov
gs
sbb
mov
shll
pusha
and
test
add
push
add
mov
ja
cli
int
in
cmp
and
fimull
or
and
dec
cmc
mov
loope
adc
out
dec
sti
xchg
jne
rcll
out
xchg
push
mov
fidivrl
inc
sahf
repz
in
mov
in
rolb
mov
stos
ficoms
mov
and
pusha
pop
or
push
into
lret
sub
pushf
sbb
push
pop
xor
pop
stc
cmp
jl
dec
mov
adc
jl
pop
sub
cmpl
pop
cmp
mov
iret
or
mov
loope
jo
cld
inc
js
mov
enter
aad
enter
mov
xor
push
and
sub
adc
jle
js
sub
js
repnz
mov
jb
jmp
flds
loopne
sub
data16
or
adc
mov
insl
icebp
jno
rolb
sub
and
or
push
push
sarb
dec
sub
fadds
jecxz
cmpsl
xor
jl
sahf
push
xchg
mov
aas
cmp
in
cmp
mov
jp
and
adc
fcmove
add
push
push
ds
popa
out
in
mov
int
rcrb
stos
xor
xorl
mov
adc
testb
clc
out
jp
loope
out
imul
outsb
mov
nop
mov
pcmpeqd
cmpl
pop
dec
adc
test
mov
pop
adc
das
or
pop
mov
lods
push
mov
scas
push
lret
out
xor
fnstcw
mov
push
js
or
push
ret
ficoms
mov
xchg
push
sarl
sbb
jo
je
dec
fadd
xor
rol
aad
adc
mov
adc
dec
gs
shlb
sbb
imul
xchg
push
test
jp
jle
scas
jecxz
push
xchg
dec
or
mov
sbb
out
mov
addr16
imul
js
push
mov
sub
xor
inc
aaa
test
pusha
filds
push
shll
pop
jne
push
xchg
sti
lea
dec
jge
jl
jp
add
mov
inc
xor
push
lods
mov
xor
mov
loopne
lods
xchg
sbb
or
imul
test
jl
dec
mov
call
add
mov
scas
mov
pop
sub
outsb
and
mov
daa
xor
xor
insl
lret
lods
into
ret
mov
into
clc
jae
add
mov
repz
call
dec
mov
jae
sahf
xor
sub
mov
in
std
cli
dec
jg
arpl
push
dec
add
ret
push
cmp
mov
sarb
ror
orl
push
loop
pop
sbb
lret
fisubrs
jns
cltd
jmp
mov
or
cmp
pop
jecxz
pop
adc
arpl
insl
aam
jno
ret
je
push
scas
test
popa
xor
adc
add
mov
fdivrl
push
fstpl
fdivs
and
sub
adc
ret
inc
xchg
lods
ljmp
lret
jg
push
rorl
lds
mov
pop
push
push
xlat
in
cmp
pop
add
imul
iret
mov
ss
cltd
rcrl
int
pop
mov
loopne
or
mov
fwait
daa
shr
hlt
pop
sub
data16
mov
or
xor
xor
in
loope
aaa
insb
sbb
mov
data16
loope
out
xchg
mov
adc
ja
push
sbb
std
std
bound
jge
nop
aas
aam
mov
jmp
dec
dec
cmc
es
movsb
sub
int
push
mov
fcom
and
push
lcall
dec
bound
xorb
out
sub
push
idiv
inc
or
adc
ja
call
insl
test
xchg
cmp
ret
mov
xor
push
or
push
pop
repnz
leave
mov
lret
sub
dec
push
jae
lea
push
lods
loope
je
sub
int
cmp
cwtl
out
xor
cld
inc
xlat
cs
jae
adc
aam
mov
mov
xor
push
loop
movsb
pop
insb
mov
lods
shll
fidivrs
mov
inc
leave
dec
jle
stc
lea
dec
push
xlat
xor
imul
insb
cli
xchg
mov
xchg
lods
and
push
mov
mov
add
mov
add
test
mov
daa
test
push
sbb
or
and
dec
cmpsl
ljmp
loopne
or
aam
xchg
inc
or
jmp
loopne
adc
lret
mov
push
dec
jl
inc
sysexit
dec
lahf
test
mov
test
jne
pop
les
xor
xchg
cmpsl
js
mov
sub
push
lock
repnz
call
sub
add
outsb
mov
mov
leave
and
mov
ret
pop
push
es
sub
aam
mov
xor
xchg
or
pop
mov
bound
jns
hlt
add
xor
std
adc
mov
orb
outsl
imul
adc
sub
iret
int
sub
xchg
and
xchg
test
out
push
jne
dec
sarl
lret
loope
imul
dec
test
add
push
dec
push
jge
lods
in
rcr
xor
je
loopne
jnp
test
mov
lcall
xchg
xchg
sbb
stos
out
push
mov
sub
push
jne
cmpsb
sub
imul
int3
add
in
cmp
cld
scas
mov
push
cltd
pushf
sub
jns
aad
xchg
shr
dec
das
dec
sub
jo
roll
inc
insb
xor
cmp
scas
xchg
push
dec
test
jnp
cmpl
dec
movsb
stos
mov
sbb
clc
lret
and
cmp
imul
push
push
and
push
data16
mov
mov
mov
lcall
loop
xchg
push
mov
xchg
mov
es
add
push
scas
in
dec
jle
in
sbb
jb
push
push
push
xor
lea
inc
push
icebp
std
call
and
nop
fcmovnb
mov
xchg
aam
inc
mov
add
xchg
dec
add
cli
push
sub
stos
insl
mov
mov
pop
decl
or
jne
faddp
xor
inc
jo
xor
movsb
sub
jge
inc
xchg
pop
bound
loop
addr16
repnz
out
sbb
jge
adc
int
lds
mov
and
sarl
dec
insb
mov
push
xor
pop
test
iret
pusha
pop
sbb
mov
and
lret
pusha
dec
fisttpll
lods
cmp
add
jb
mov
loopne
je
add
sbb
jno
mov
sub
add
add
mov
cld
jmp
stos
adc
xchg
or
das
cld
mov
or
fwait
or
shrb
cmpsb
subb
test
scas
add
daa
mov
stos
fcomp
sbb
call
stc
cmc
jae
hlt
lret
push
and
cmc
sub
movsl
fmuls
mov
sahf
leave
rclb
or
mov
xor
cmp
iret
xor
out
pop
pop
int
inc
jae
push
aad
arpl
and
push
testl
loope
cmp
ret
jno
xchg
cmc
out
jno
sbb
cmpsl
jl
in
push
sub
dec
pop
sub
sub
mov
fiadds
outsl
aad
shlb
pop
jle
cld
nop
sbb
dec
mov
lds
cmpsl
cmp
sub
xlat
push
ss
mov
cli
sub
std
loopne
addr16
push
rorb
xor
int
adc
mov
push
add
dec
subl
ljmp
in
fwait
lahf
test
cmpsl
mov
in
dec
adc
lods
sbb
xlat
pop
sbb
sub
sahf
and
ret
add
subl
inc
adc
adc
adc
adc
xchg
dec
pop
mov
std
or
fisubl
sub
xor
lock
cwtl
push
mov
insl
jle
test
adc
mov
mulps
xor
mov
test
notb
lcall
add
xchg
popf
addl
dec
scas
add
repnz
aam
hlt
and
movsl
test
out
push
jo
test
out
adc
pop
rorl
bound
cmp
mov
dec
call
mov
test
mov
dec
cmp
imul
out
cld
or
sub
dec
mov
mov
clc
adc
dec
enter
adc
or
mov
mov
lahf
mov
xchg
sub
xlat
xchg
mov
dec
movsb
add
inc
arpl
xorb
rol
dec
pop
std
clc
sbb
sub
xor
repz
xor
aam
or
movsb
mov
sbb
cmp
push
sub
pop
loope
sbb
dec
pop
or
mov
xchg
lret
xor
test
mov
pop
popa
gs
xchg
stos
jmp
cmp
rorb
push
sbb
aad
cmp
push
stos
jb
loop
hlt
push
es
movsb
xchg
and
adc
call
cmc
pop
enter
inc
fs
xchg
and
enter
je
flds
xlat
ret
mov
and
in
outsl
lea
shlb
and
or
fimuls
pushf
xchg
xorl
out
out
mov
ja
popf
and
xchg
push
movsb
pop
aas
mov
dec
add
cmp
cli
out
and
cmp
xchg
movsl
call
dec
mov
inc
push
cmpsb
jbe
ficomps
dec
sahf
scas
xchg
fadds
roll
inc
or
pop
cmp
bswap
mov
add
out
inc
and
jno
push
loopne
push
inc
pushf
mov
jl
and
jecxz
mov
lock
sub
xchg
cs
cs
test
mov
jae
lock
sbb
xchg
pop
lock
xorb
inc
aaa
daa
enter
add
inc
aaa
js
adc
sahf
sub
mov
pop
dec
add
jb
dec
les
and
outsb
int
add
jb
or
scas
fwait
and
mov
push
ss
mov
popf
fucomi
pop
sub
xchg
mov
or
dec
add
add
adc
das
push
pop
call
jne
xchg
lret
aad
or
mov
mov
out
and
bound
pop
inc
call
sub
or
repnz
stc
jns
mov
inc
mov
push
pop
aad
mov
cli
push
popf
jo
pop
cli
lods
dec
push
mov
ja
mov
loopne
fsubrs
or
flds
add
aaa
inc
mov
adc
repz
int
xchg
dec
pop
pop
cmp
push
jmp
adc
xchg
lret
dec
lods
adc
jnp
ret
or
adc
sbb
mov
lret
cwtl
fcmove
into
bound
icebp
jae
jp
jge
jnp
jp
clc
xlat
mov
adcb
loope
jbe
fistpll
cmp
add
add
mov
push
cltd
push
xlat
mov
sub
add
roll
sarb
bound
add
pop
push
rol
aaa
dec
or
pop
rcl
jg
cld
adc
stos
les
jno
lahf
arpl
jbe
mov
imul
ss
outsl
jne
stos
cmpsb
push
clc
and
push
jns
inc
cmp
aaa
cld
shll
call
lahf
stos
xchg
push
pop
cmp
lds
mov
xchg
xchg
imul
dec
mov
xchg
jp
andl
xchg
std
push
outsl
mov
movsb
jecxz
fidivrl
cmp
scas
mov
out
insl
jbe
push
insl
adc
inc
pop
xor
out
or
inc
add
lahf
repnz
push
scas
xchg
push
out
cmpb
adc
out
sbb
xchg
xchg
not
sbb
mov
ds
scas
xor
fnsave
fldt
pop
jg
dec
dec
xor
cmpsl
loopne
je
andb
lret
cmpsl
push
roll
pop
sbbb
call
jbe
sub
lock
jnp
aaa
push
or
dec
and
andl
push
mov
cltd
mov
test
mulb
test
and
jno
adc
rorl
repz
jbe
in
mov
sub
aaa
pop
mov
push
and
dec
inc
es
int3
cmp
or
xchg
mov
cmp
pushf
cmp
aam
adc
inc
or
outsl
sbbl
cmpsb
push
pop
mull
mov
push
das
sbb
lock
jno
dec
leave
mov
push
jle
into
xor
popl
push
jmp
movsl
lret
dec
or
or
fisubl
sub
xchg
dec
mov
arpl
inc
inc
insl
outsb
cmc
mov
stc
xchg
subb
cmp
xchg
xchg
out
adc
fidivrl
mov
mov
flds
cwtl
jo
ret
xor
jge
loope
mov
adc
mov
jge
lds
mov
lret
cmc
pushf
dec
aas
stos
xor
pop
aad
hlt
call
or
jge
xlat
fcmovbe
sbbl
js
leave
mov
and
aas
sub
jae
dec
fwait
adc
sti
andb
xchg
push
ds
cmc
scas
daa
xor
pop
arpl
jge
jle
movsb
daa
leave
xor
mov
std
int
js
imul
or
call
mov
orb
lret
push
cmp
das
loopne
lea
inc
pop
xchg
test
pusha
xor
fidivs
cmp
inc
xchg
xchg
pop
repnz
imul
cmp
fstpt
add
lea
xor
notb
jnp,pn
mov
mov
cs
cwtl
mov
js
insl
cltd
addl
loope
fdivrp
divl
jo
pop
sahf
adc
add
loopne
ds
lcall
mov
sbb
stos
jno
jns
outsb
sbb
lods
data16
push
pop
xor
adc
adc
insb
mov
aas
cmp
dec
or
str
lock
aad
sub
adc
or
stos
sub
cld
and
sahf
sbb
inc
addr16
les
adc
lods
in
aam
or
cmpsl
js
or
xchg
fisttps
adc
sar
sahf
out
int3
scas
fildl
lcall
mov
test
jmp
and
das
popf
xchg
ss
sub
nop
lods
or
test
mov
and
cmp
mov
xchg
stc
in
fimuls
shlb
pusha
sahf
bnd
mov
push
fcoml
mov
or
out
jg
outsl
ror
stc
jg
leave
sub
dec
repz
mov
pop
mov
imul
mov
xchg
add
out
cli
lcall
outsb
pop
xor
push
lcall
mov
in
int
arpl
nop
shr
mov
pop
adc
mov
inc
dec
and
imul
iret
les
shll
xchg
aad
testl
test
outsb
mov
and
test
imul
das
clc
cmc
outsl
stos
push
les
mov
push
rcll
lods
xlat
int3
aaa
inc
mov
push
inc
enter
xchg
mov
xor
ss
into
and
mov
hlt
std
or
adc
xchg
into
les
sahf
mov
mov
jne
jl
shlb
jbe
scas
in
fwait
ljmp
lds
into
sub
mov
xchg
push
stc
sbb
ret
aam
jno
mov
popa
mov
sbb
mov
jmp
mov
pop
rorb
adc
sahf
xchg
cs
pop
xchg
mov
pop
adc
outsl
or
inc
xor
rorl
or
and
mov
ret
ret
inc
xchg
es
ljmp
mov
or
loope
push
mov
and
loop
sbb
repnz
loopne
xor
loopne
dec
cld
enter
sub
imul
test
sbb
and
enter
cmp
ror
out
call
push
movsb
ffreep
xor
and
lret
cmp
push
popa
sbb
or
aaa
and
cs
cmp
push
ret
lock
adc
test
jmp
jecxz
push
into
sbb
push
les
shll
dec
mov
push
loop
lret
in
jbe
leave
xchg
xor
sub
dec
pop
mov
adc
cmp
add
xchg
scas
clc
mov
rcrb
hlt
xor
push
jae
daa
cltd
lret
jl
or
icebp
aad
stc
pop
out
aaa
dec
aad
xor
arpl
inc
movsl
pop
fists
enter
adc
outsl
mov
adc
lret
jg
imul
std
cmp
into
sbb
or
mov
push
enter
jmp
jp
int3
mov
push
and
sub
adc
add
popa
ds
dec
test
adc
xchg
jnp
fisubrl
aad
test
mov
mov
cmc
ds
sti
add
sub
add
mov
lret
mov
xlat
ds
aas
adc
or
test
pop
mov
cs
sahf
sub
add
pushf
pushf
adc
mov
popa
push
idivl
pusha
loopne
in
mov
lret
xchg
pop
imul
push
xchg
lret
xchg
mov
inc
ret
in
sbbl
fistpll
xor
fists
pushf
fwait
push
pop
push
inc
icebp
repz
scas
xchg
in
mov
jmp
mov
sbbb
iret
sahf
inc
je
addr16
and
jno
or
sarl
movsb
fs
adc
xor
mov
scas
cmp
xor
ja
test
mov
mov
pop
fdivr
or
push
cld
sbb
adc
cmp
cli
addr16
in
mov
shlb
inc
loop
lahf
push
lds
xchg
inc
mov
lea
inc
lret
int
mov
lret
cmc
in
pop
fimull
mov
test
xchg
mov
or
popa
sbb
call
fistpll
shrb
mov
pop
jno
imul
int3
fists
fimuls
lret
cmp
sti
sub
pop
xchg
xor
fnstsw
rcrl
les
clc
jo
jno
pop
dec
sarl
xor
mov
js
out
inc
lock
psubw
pusha
pusha
jg
add
inc
stos
cmpsl
les
icebp
xchg
or
aaa
in
cmp
dec
mov
jle
sti
jns
je
inc
outsb
mov
xchg
jg
addb
sbb
leave
icebp
xchg
dec
inc
adc
insl
loop
jnp
imul
enter
push
popa
mov
sub
cmp
cmpb
xchg
pop
jne
mov
mov
mov
fnstenv
leave
push
xchg
cmpsb
ljmp
ljmp
ja
into
xor
repnz
arpl
cmp
push
xchg
cmp
jnp
add
cmpsb
cmp
es
in
pusha
popl
sarl
jge
popf
lock
enter
add
xor
xchg
mov
aad
sti
punpcklbw
in
arpl
mov
sbb
orl
cmp
and
cld
dec
push
sub
pop
lods
mov
insb
enter
jp
ja
fnstsw
stos
daa
cli
lods
jae
xor
sbb
mov
pop
fmul
stos
pop
mov
or
jmp
addr16
sbb
mov
mov
enter
push
dec
sbb
gs
stos
fisttps
out
jmp
dec
shl
jp
inc
fs
testl
push
sbbl
jno
cmpsb
addr16
and
and
roll
orb
xchg
loopne
gs
push
or
xchg
dec
xchg
jg
push
out
lea
out
sub
pop
jo
outsb
xchg
insl
cmp
jae
sub
arpl
ss
mov
mov
je
das
sub
add
sbb
lcall
pop
sub
movsb
loope
cmp
sti
mov
xchg
mov
loopne
pushf
data16
aam
outsb
dec
add
pushf
outsl
iret
dec
mov
mov
lea
and
dec
sub
int
movsb
sub
xchg
repz
mov
xlat
fisubs
mov
mov
sbb
jae
imul
inc
shrl
jl
mov
or
mov
es
inc
pop
xchg
sarl
adc
ja
loopne
movq
pop
xchg
or
adcb
cwtl
dec
and
xchg
aam
adc
sub
loope
popl
push
and
jns
pop
jno
sub
jmp
mov
lods
scas
cwtl
icebp
pop
mov
bound
push
pop
inc
inc
mov
xchg
inc
fsubl
gs
push
mov
cmc
fnsave
sti
xor
adc
test
in
pop
mov
xchg
mov
int
sbb
push
jne
inc
inc
test
xor
jno
lret
and
inc
xchg
scas
and
mov
fistps
dec
adc
inc
cmp
lods
xchg
repnz
cmpsl
add
int
arpl
xchg
shl
stos
es
sbb
ficompl
cmc
dec
jbe
xlat
shlb
bound
jns
or
mov
pusha
inc
mov
loope
sbb
sahf
lods
sbbl
sbb
dec
inc
xchg
lret
sbb
outsb
testl
outsl
fistps
adc
adc
cmc
shlb
and
add
pop
xchg
add
loope
mov
mov
repz
and
xor
ljmp
in
and
jp
adc
pop
fs
pop
test
test
mov
jb
xchg
jo
xchg
imul
popf
mov
push
and
dec
mov
data16
stos
pop
outsb
push
loopne
sub
sub
ja
lahf
cmc
gs
mov
cmp
pop
shrb
jle
xchg
add
cmp
stos
movsl
call
xchg
jne
movsb
in
add
add
add
cmpb
jne
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
popa
xor
ret
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
