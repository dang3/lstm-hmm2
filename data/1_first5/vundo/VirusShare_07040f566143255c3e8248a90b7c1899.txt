add
inc
or
dec
mov
test
nop
nop
nop
nop
nop
nop
nop
nop
jmp
andl
xchg
push
cld
xor
addr16
and
cld
jmp
nop
nop
push
cld
xor
cld
inc
xchg
call
xchg
jmp
nop
nop
nop
nop
push
mov
or
or
xor
ror
mov
sub
mov
nop
nop
nop
nop
nop
mov
mov
jmp
push
or
xor
inc
add
inc
shl
and
add
add
and
or
dec
test
jne
pop
or
mov
add
mov
mov
call
xor
xchg
mov
xchg
mov
xchg
jmp
jne
xor
mov
jmp
push
xchg
jmp
leave
add
mov
pop
jmp
xchg
nop
nop
nop
nop
nop
call
xchg
movl
push
pop
push
mov
pushl
cld
call
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
shr
pop
and
add
pop
call
addr16
cmpb
mov
je
cmpb
addr16
je
add
or
shr
add
mov
jmp
jmp
pushf
lcall
dec
add
nop
nop
nop
nop
nop
jmp
xor
sub
inc
mov
jmp
add
xchg
jmp
nop
nop
nop
nop
nop
push
addr16
mov
mov
sub
xchg
jmp
add
mov
push
mov
call
xchg
xor
add
sub
shr
sub
mov
jmp
nop
nop
nop
nop
nop
nop
push
cld
xor
mov
sub
xchg
nop
nop
nop
nop
nop
and
mov
mov
mov
mov
jmp
icebp
test
nop
mov
xchg
inc
mov
mov
test
nop
nop
nop
nop
nop
nop
nop
jne
xor
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
xchg
call
xchg
jmp
andl
xchg
push
xchg
jmp
add
xchg
inc
push
pop
jmp
nop
pushl
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
add
rol
pop
mov
xchg
jmp
nop
nop
nop
nop
pushl
nop
nop
nop
nop
nop
or
and
add
or
pop
mov
mov
mov
mov
mov
mov
jmp
insb
adc
add
xchg
jmp
nop
nop
pushl
nop
nop
nop
nop
nop
nop
nop
nop
nop
and
add
pop
mov
xchg
mov
cld
mov
nop
xor
mov
test
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
push
xchg
cmpl
mov
push
nop
nop
nop
nop
nop
jne
pushl
nop
nop
nop
nop
nop
nop
nop
nop
jmp
or
mov
test
nop
nop
nop
nop
jne
xor
xchg
jmp
push
mov
jmp
nop
nop
nop
nop
nop
nop
nop
push
cld
inc
add
mov
push
cld
call
xchg
jmp
nop
nop
nop
nop
nop
nop
push
push
pop
push
addr16
jmp
lea
nop
nop
nop
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jne
xor
rol
mov
jmp
xor
or
pop
mov
mov
mov
push
pop
mov
xchg
and
or
mov
xor
xor
mov
test
nop
nop
nop
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
je
lea
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
rol
sub
dec
mov
pop
jmp
nop
nop
nop
push
mov
mov
and
mov
and
push
pop
sub
xchg
mov
mov
push
xchg
push
mov
push
xchg
push
xchg
jmp
lea
nop
nop
nop
nop
nop
nop
nop
nop
push
xchg
push
cld
pushl
mov
pushl
xchg
call
xchg
leave
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
pushl
xchg
call
addr16
push
popl
call
xchg
pushl
add
and
mov
ror
or
pop
pushl
sub
or
pop
or
mov
add
rep
nop
nop
nop
nop
jmp
enter
mov
push
mov
push
mov
push
mov
test
nop
nop
nop
nop
nop
jne
xor
xor
pop
jmp
call
cld
rol
add
pop
pushl
nop
push
xchg
pushl
addr16
push
xchg
call
xchg
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
pop
push
nop
push
mov
jmp
pushl
or
and
dec
and
pop
pushl
shr
sub
pop
lea
nop
nop
nop
nop
nop
nop
jmp
mov
addr16
call
mov
push
mov
add
sub
shr
pop
add
add
mov
dec
shl
shr
sub
mov
add
xchg
movzwl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
pop
or
mov
pop
jmp
and
outsl
movzbl
nop
nop
nop
nop
nop
nop
nop
nop
inc
xchg
mov
nop
jmp
mov
addr16
lea
nop
nop
nop
nop
nop
nop
push
xchg
push
push
pop
movl
nop
jmp
sub
mov
add
xor
sub
sub
mov
call
cld
cmpl
mov
jmp
cmp
xchg
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lea
nop
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jbe
lea
nop
nop
nop
nop
nop
nop
nop
jmp
jmp
add
xchg
xor
and
mov
shl
shl
dec
xor
rol
mov
push
xchg
push
nop
jmp
push
mov
jmp
inc
out
je
push
xchg
jmp
nop
nop
lea
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
push
pop
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jne
mov
mov
and
ror
mov
mov
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
pop
call
mov
add
shr
pop
call
mov
push
xchg
jmp
pusha
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
add
add
inc
or
add
add
and
mov
ror
rol
mov
shr
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
addr16
and
addr16
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pushl
sub
add
inc
push
shr
rol
add
dec
and
push
dec
xor
pop
sub
or
xor
or
mov
dec
test
jne
pop
pop
call
cmp
xchg
jne
xor
xchg
cmpl
mov
setne
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
sub
sbb
clc
add
and
rorb
and
xor
or
pop
rol
mov
mov
addr16
xor
add
add
or
mov
add
xchg
jmp
inc
xchg
push
mov
mov
xchg
mov
nop
jmp
leave
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
movl
nop
nop
nop
nop
nop
nop
nop
nop
xor
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
leave
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
shl
mov
mov
xchg
add
mov
jmp
mov
and
sub
xor
mov
jmp
shr
mov
sub
xchg
shr
nop
nop
nop
nop
nop
nop
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
lea
nop
nop
nop
nop
nop
jle
xor
mov
mov
mov
jmp
mov
mov
or
mov
mov
rol
add
mov
mov
mov
rep
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
lea
nop
nop
nop
nop
nop
call
addr16
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
je
call
xchg
test
nop
nop
nop
nop
nop
nop
nop
je
call
mov
test
nop
nop
nop
nop
nop
nop
nop
jmp
lds
pop
and
mov
push
xchg
call
xchg
add
mov
push
popl
movb
cld
movl
xchg
call
addr16
popa
nop
nop
nop
nop
nop
nop
jmp
je
push
mov
xor
cld
shl
rol
pop
lea
nop
nop
nop
nop
nop
nop
nop
call
mov
dec
xchg
lea
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jne
jmp
add
addr16
test
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
nop
nop
jmp
and
pop
inc
add
shl
mov
xor
mov
add
xor
addr16
jmp
movzwl
nop
nop
nop
nop
ror
dec
mov
and
xchg
jmp
sub
and
xor
rol
mov
add
addr16
movzwl
nop
nop
nop
nop
nop
nop
incl
mov
add
xchg
cmp
mov
jl
jmp
jmp
xchg
pusha
nop
nop
nop
nop
nop
nop
call
cld
popa
nop
nop
nop
nop
nop
nop
jmp
cld
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
je
jmp
jle
or
mov
dec
mov
jmp
rorl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
cld
dec
nop
nop
nop
nop
nop
nop
nop
jne
and
shr
xor
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp
mov
jne
shr
mov
and
addr16
add
push
pop
jmp
and
mov
jmp
push
and
rol
and
or
xor
mov
sub
xchg
mov
xchg
mov
xchg
jmp
movb
cld
jmp
mov
xchg
andl
xchg
add
nop
mov
cld
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
je
jmp
shl
shr
dec
xor
mov
and
add
dec
inc
mov
or
mov
andl
xchg
and
ror
xor
add
sub
and
add
add
mov
mov
nop
nop
nop
nop
nop
nop
inc
add
mov
jmp
incl
xchg
jmp
shl
add
mov
jmp
adc
mov
xchg
mov
rol
xor
add
sub
mov
movsbl
nop
nop
nop
nop
nop
nop
nop
nop
nop
rol
nop
nop
nop
nop
nop
nop
nop
nop
xor
nop
incl
xchg
inc
mov
xor
sub
mov
mov
mov
nop
jmp
and
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
incl
mov
xor
xchg
jmp
test
nop
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
jne
add
add
mov
jmp
inc
xchg
dec
nop
nop
nop
nop
nop
nop
jne
add
nop
cmpl
xchg
jne
mov
dec
shl
pop
xor
mov
and
add
add
jmp
mov
push
add
xchg
cltd
nop
nop
nop
nop
nop
nop
nop
nop
nop
and
xchg
add
cld
sar
nop
nop
nop
nop
nop
shr
nop
nop
nop
nop
nop
nop
nop
nop
test
nop
nop
nop
nop
nop
nop
lea
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
nop
nop
nop
jmp
fmuls
mov
je
incl
addr16
ror
shr
mov
cmp
cld
jl
jmp
shl
mov
xor
add
mov
mov
mov
add
push
pop
sub
ror
sub
rol
pop
push
popl
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jle
mov
push
pop
test
nop
nop
nop
nop
jle
shl
xor
mov
mov
mov
mov
xchg
sub
xchg
sub
xchg
decl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
sbb
jae
xchg
jmp
or
jne
test
jmp
shlb
ror
or
mov
jmp
rol
mov
and
xchg
inc
mov
inc
xchg
shr
nop
nop
nop
nop
nop
nop
nop
nop
nop
je
test
nop
nop
nop
nop
nop
nop
nop
nop
jmp
jmp
stc
xor
mov
jmp
or
mov
inc
add
mov
jmp
xchg
mov
add
add
ret
and
dec
xor
mov
jmp
movzwl
nop
nop
nop
nop
nop
nop
nop
nop
mov
addr16
add
mov
and
or
dec
mov
pop
xor
dec
mov
pop
sub
xor
pop
leave
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
pop
sub
xchg
decl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jne
test
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
jle
add
add
xor
ror
xor
mov
nop
nop
nop
nop
nop
or
add
or
sub
mov
add
addr16
add
xchg
dec
nop
nop
nop
nop
nop
nop
nop
jne
test
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
jle
rorl
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
popf
nop
xchg
sub
sub
add
mov
sub
xchg
mov
cld
incl
mov
dec
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jne
jmp
mov
nop
jmp
xor
shrb
xchg
add
push
mov
xor
addr16
add
nop
dec
nop
nop
nop
nop
nop
nop
nop
nop
nop
jne
push
xchg
jmp
dec
jbe
mov
nop
jmp
call
xchg
test
nop
nop
nop
nop
nop
nop
nop
nop
jne
cmp
cld
jne
lea
nop
nop
nop
nop
nop
call
xchg
jmp
mov
enter
xor
call
xchg
mov
cld
call
xchg
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
je
mov
inc
mov
mov
or
inc
mov
or
mov
jmp
pop
stos
lahf
test
nop
nop
nop
nop
nop
nop
nop
je
sub
mov
sub
mov
mov
mov
jmp
iret
stos
jp
arpl
incl
mov
or
add
mov
mov
mov
jmp
orl
addr16
rol
add
mov
and
mov
add
and
add
add
rep
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
adc
pop
mov
addr16
jmp
push
lahf
pushl
xchg
call
nop
pushl
xchg
call
push
pop
jmp
in
incl
xchg
dec
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jne
jmp
sub
xchg
jmp
dec
push
pop
nop
nop
nop
nop
nop
dec
nop
and
mov
movzbl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
shl
nop
nop
nop
nop
nop
nop
nop
add
xchg
jmp
dec
add
inc
xor
dec
ror
or
mov
test
nop
nop
nop
nop
nop
je
shr
or
and
add
or
mov
jmp
rcrl
incl
cld
lea
nop
nop
nop
nop
add
or
and
ror
mov
mov
call
xchg
jmp
ret
add
xchg
sub
xchg
jmp
mov
add
xor
mov
mov
sub
xchg
nop
nop
nop
nop
nop
shr
nop
nop
nop
nop
nop
nop
nop
test
nop
nop
nop
nop
nop
nop
nop
nop
jmp
push
inc
xor
add
add
add
in
cmp
xchg
jb
inc
xchg
cmp
cld
jae
inc
xchg
jmp
pop
lods
inc
lea
nop
nop
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
jle
mov
push
pop
jmp
adc
rolb
nop
nop
nop
nop
nop
nop
je
add
shl
mov
nop
nop
nop
nop
nop
sub
add
inc
add
xor
mov
sub
xchg
mov
addr16
incl
cld
dec
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
jne
jmp
inc
mov
or
mov
movzwl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
add
mov
and
mov
cmp
cld
jne
jmp
jl
mov
cld
xor
push
pop
inc
cld
jmp
mov
rol
and
mov
shr
and
mov
add
sub
mov
mov
xchg
incl
mov
nop
nop
nop
nop
nop
incl
addr16
mov
xchg
xor
xchg
cmpl
xchg
je
inc
and
mov
and
mov
jmp
aam
push
and
addr16
add
addr16
add
xchg
add
addr16
add
ror
mov
addl
addr16
decl
nop
nop
nop
nop
nop
nop
nop
nop
jmp
sub
not
out
or
sub
pop
sub
mov
rol
xor
add
and
pop
leave
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jne
add
nop
cmpl
xchg
jne
pushl
nop
nop
nop
nop
nop
nop
nop
mov
shl
pop
nop
nop
nop
nop
nop
mov
mov
nop
nop
nop
nop
nop
mov
xchg
mov
xchg
add
mov
push
xchg
call
xchg
shr
or
xor
xor
add
pop
push
xchg
mov
addr16
call
cld
nop
nop
nop
nop
nop
mov
xchg
test
nop
nop
nop
nop
nop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
nop
je
and
sub
add
mov
lea
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
add
mov
nop
nop
nop
nop
nop
add
xchg
push
mov
nop
nop
nop
nop
nop
call
xchg
cmp
mov
mov
nop
nop
nop
nop
nop
nop
je
ror
sub
mov
dec
mov
test
nop
nop
nop
nop
nop
jne
nop
nop
nop
nop
nop
xor
and
and
mov
mov
mov
inc
dec
rol
mov
add
addr16
add
cld
jmp
jns
movzwl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
dec
shr
xor
mov
nop
nop
nop
nop
nop
add
xchg
add
mov
push
push
pop
pushl
push
pop
call
xchg
mov
mov
add
mov
nop
nop
nop
nop
nop
add
mov
xor
mov
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jne
add
mov
cmpl
mov
jne
pushl
nop
nop
nop
nop
nop
shl
mov
shl
and
xor
pop
nop
nop
nop
nop
nop
mov
xchg
sub
or
inc
shl
mov
nop
nop
nop
nop
nop
pushl
or
shr
shl
shr
sub
pop
mov
xchg
cmp
xchg
jne
nop
nop
nop
nop
nop
add
inc
xor
mov
add
mov
add
or
sub
sub
and
pop
mov
cld
pushl
or
or
add
xor
rol
pop
add
nop
rol
sub
pop
mov
shl
xor
or
pop
xor
or
mov
and
mov
nop
nop
nop
nop
nop
add
and
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
adc
ss
fbstp
jl
cwtl
and
gs
imul
bound
jecxz
rclb
dec
pop
mov
ss
out
cmp
adc
jae
xchg
inc
dec
pop
cmp
arpl
hlt
dec
psubsb
fisubrs
push
push
jmp
int
and
jecxz
fsubrs
sbb
sbb
loope
mov
int
movsb
or
lret
cmp
cmp
stos
and
or
jo
scas
sbb
jnp
data16
add
flds
mov
add
jg
nop
sub
pop
mov
cmp
jp
adc
loop
ret
push
mov
arpl
insl
popf
gs
mov
mov
pop
ss
in
adc
outsb
inc
repnz
push
pop
xor
pop
fisubs
inc
jo
ds
add
idivl
cltd
setg
jge
jmp
imul
adc
mov
jg
sti
xor
adc
mov
faddl
dec
pop
xor
js
mov
js
shrb
shl
xlat
ljmp
daa
test
shll
repz
daa
dec
outsb
orl
dec
loop
xchg
or
mov
fisubrl
xlat
jmp
test
mov
push
leave
xor
cld
cli
cs
dec
mov
ja
inc
hlt
std
add
cld
mov
jp
test
into
mov
xchg
ljmp
or
stc
negb
pop
pop
cmp
fs
subl
push
stc
pop
add
push
aas
and
dec
jecxz
or
test
xor
fcoml
cmp
adcb
mov
test
fwait
push
jo
inc
mov
adc
add
and
andb
jo
pop
dec
xchg
sahf
pop
xor
dec
les
arpl
sbb
push
outsb
loope
stos
or
data16
loopne
repnz
cmp
mov
pop
pop
inc
adc
shlb
or
fistps
jge
dec
pop
cmpsl
mov
mov
xchg
dec
cwtl
shrb
pop
xchg
sbb
lea
sbb
stos
insb
stos
jbe
mov
das
test
out
incl
cmp
mov
sub
lcall
jg
or
mov
sub
mov
fnstsw
enter
mov
popa
call
pop
pop
push
mov
hlt
mov
in
loop
fwait
aas
icebp
cmc
outsl
fwait
and
insl
shrb
pusha
inc
leave
adc
data16
scas
push
jbe
cmp
shrl
mov
xor
mov
jo
pop
pop
xor
fstl
jb
fcoms
hlt
inc
or
push
movsl
and
lahf
xor
or
mov
jle
divb
xor
xor
dec
faddp
inc
cs
lock
jns
xchg
aam
aas
mov
scas
jecxz
ret
xchg
into
loopne
dec
jecxz
out
enter
out
jge
cmp
or
rcr
push
rcr
or
sbb
test
ret
leave
or
mov
test
es
jmp
jmp
xchg
ss
test
mov
cmp
xlat
pop
int3
repz
mov
mov
rolb
cs
or
mov
mov
hlt
lret
push
dec
mov
cli
inc
ds
shrb
in
nop
fwait
out
fsubl
mov
mov
das
fistpll
nop
inc
pop
sarl
les
mov
fwait
.byte
lahf
.byte
and
pop
aam
cmpl
pop
test
push
lahf
inc
ds
mov
or
sub
push
fsts
mov
inc
dec
xchg
test
adc
mov
rep
lcall
ret
daa
loop
pop
rorb
popf
push
ss
loop
push
sub
ret
pusha
psubb
xchg
rorb
std
sbb
jno
scas
test
dec
pop
rol
fidivrl
jmp
xor
fdivrl
sbb
xor
push
sub
lods
mov
pop
ret
xchg
mov
and
int3
les
dec
shlb
lock
jbe
ljmp
push
insl
sarl
xor
xor
pop
icebp
lcall
push
hlt
push
or
jle
rorb
cmp
aam
add
sbb
sti
insl
dec
inc
aam
mov
inc
xchg
push
hlt
sub
mov
rcl
jbe
repz
lahf
mov
inc
nop
ret
add
out
push
in
fsubl
loopne
or
adc
xchg
ja
into
pushf
cmpsl
and
in
icebp
cli
aas
sbb
sbb
adc
xor
jnp
sbb
ret
inc
mov
ret
sbb
dec
ret
subl
fmuls
adc
or
in
shll
adc
inc
adc
dec
inc
mov
sti
or
and
rorb
xor
xor
scas
pop
hlt
pop
ljmp
mov
jle
mov
and
imul
or
mov
ror
imul
out
mov
jle
sub
or
scas
mov
xor
and
or
jge
lret
addr16
stos
adc
mov
and
test
enter
adc
out
addr16
cwtl
es
jne
int
out
cmp
mov
bnd
add
and
xchg
sub
push
in
fldl2e
xchg
std
mov
inc
call
inc
ljmp
repnz
mov
outsb
rcl
adc
bound
test
fxtract
insl
jnp
xor
mov
loop
push
dec
mov
les
je
stos
mov
scas
xor
xchg
add
ret
daa
jne
out
fidivrl
add
push
xchg
push
das
movsl
or
insl
jp
into
inc
ret
pop
out
popa
xor
mov
jno
dec
pusha
fdecstp
ffree
dec
in
xor
dec
lds
mov
xchg
popf
sbb
ja
call
cltd
and
sbb
lahf
push
push
dec
sub
fnstsw
add
mov
insl
ljmp
jb
aad
jecxz
sub
lds
aaa
insl
sbb
jg
int
inc
jns
add
or
iret
fsubs
jno
pop
ret
inc
jb
std
or
lods
pop
loop
in
pop
inc
pop
sti
out
sbb
add
cmp
push
inc
cwtl
jl
mov
movsl
or
jno
movsl
cmovae
negl
dec
incb
mov
sahf
dec
cmp
cltd
xchg
mov
or
movsl
lret
and
leave
call
add
movsb
ret
in
cmc
jle
xor
pop
push
and
sbb
lds
and
ljmp
iret
xor
ds
sbb
lret
and
cmc
add
ffree
sbb
pop
repz
imul
mov
inc
pop
jmp
fcoms
gs
subl
in
jg
inc
shl
add
imul
mov
add
popa
sub
jae
movsl
and
add
mov
in
and
mov
pop
mov
test
and
jae
mov
int3
mov
cld
out
fisubrs
sub
or
rcrb
cmc
jbe
xor
loope
enterw
add
xchg
and
mov
adc
loope
sti
adc
inc
sub
and
jecxz
in
cs
in
push
xor
out
push
cmp
imul
jl
xchg
shrb
adc
xchg
mov
cmpsl
mov
js
add
js
test
adc
and
stc
movsb
loop
dec
dec
in
jno
adc
mov
or
push
jnp
jae
and
push
js
arpl
push
mov
sarb
sub
lds
jbe
xor
sarb
xchg
movsb
aad
repz
mov
mov
xor
leave
push
pop
jl
pop
jl
hlt
lods
lea
adc
push
jmp
sub
in
inc
xor
adc
or
aam
outsl
aam
cli
xor
test
shlb
es
gs
dec
fstl
nop
scas
push
inc
xor
loop
push
ret
pandn
in
lahf
test
pushf
cmpsl
mov
jl
stos
inc
sti
xor
jne
inc
insl
call
or
sub
in
jno
cmpsl
inc
sbb
fwait
jne
xchg
sbb
sub
dec
nop
jnp
add
pop
pop
mov
mov
clc
cltd
inc
popa
shll
lcall
aam
push
jnp
fists
inc
lret
or
fnsave
lods
push
leave
mov
jg
mov
mov
fs
bound
sub
inc
test
jbe,pn
clc
lret
xor
les
not
mov
sub
inc
iret
sbb
xor
adc
push
pop
out
int3
dec
inc
dec
sub
and
mov
pop
jg
insl
iret
das
and
outsl
movsl
push
mov
sbb
sahf
mov
lds
aas
cmc
dec
sarb
clc
sahf
popf
inc
aam
dec
ficomps
mov
mov
mov
jp
pop
adc
iret
repnz
popa
lahf
mov
cmp
and
push
jg
imul
les
pop
mov
ret
movsb
push
cmovg
mov
sbb
pop
dec
ficompl
loope
je
mov
test
cmc
jnp
xlat
ret
sub
push
cli
js
mov
sub
mov
rep
pop
dec
jnp
mov
inc
or
push
cwtl
push
out
cmp
pusha
sub
fsubs
mov
mov
test
cmp
adc
icebp
inc
roll
js
scas
mov
je
movsb
fnstcw
push
xor
mov
mov
or
loope
sti
adc
cmp
dec
and
sbb
sar
xlat
dec
icebp
je
aam
mov
test
repz
clc
insb
adc
inc
lret
lahf
inc
sbb
cmp
nop
stc
push
jne
and
push
sarl
stos
xchg
push
mov
adcl
fistpll
push
cmp
loope
mov
les
adc
arpl
push
je
std
lods
or
in
cltd
std
bound
pop
stos
in
mov
push
iret
push
stos
nop
push
pushf
mov
test
xor
xor
addr16
jp
push
xor
pop
insb
hlt
and
inc
pop
mov
test
sbbl
add
nop
std
adc
adc
inc
dec
mov
pop
sub
mov
mov
ret
and
loope
arpl
mov
out
sub
in
xlat
int3
pushf
ds
and
stc
sub
fimuls
pop
jno
sbb
pop
outsl
add
nop
jecxz
mov
mov
xchg
test
jmp
sti
mov
cmp
loope
aas
push
adc
leave
push
and
clc
mov
inc
scas
xor
subl
mov
mov
push
arpl
fbld
mov
mov
and
lock
lds
inc
xchg
sahf
xchg
pop
fadd
dec
arpl
cld
cmpsb
push
repz
fbld
mov
adc
gs
sub
cmovb
adc
xchg
hlt
in
xchg
popa
and
pop
fisubl
dec
add
fcoml
inc
data16
jge
les
test
lret
pop
out
into
mov
in
fwait
repz
mov
jecxz
int3
int3
jmp
cwtl
cmp
lods
test
pop
and
cli
out
cmc
cmp
inc
iret
push
arpl
call
cmp
cmp
loop
je
mov
or
repz
push
fwait
dec
or
mov
adc
pop
or
and
lds
sub
push
daa
mov
mov
pop
sub
pop
and
testl
repnz
std
les
push
shlb
decb
sbb
in
test
outsl
adc
adc
xchg
mov
inc
mov
push
xchg
mov
jp
out
inc
loopne
cmpsl
in
aad
push
or
lahf
push
cld
mov
test
stos
jmp
push
pop
scas
shlb
hlt
dec
std
xlat
outsl
add
ret
test
es
mov
push
mov
sahf
mov
dec
jnp
and
adcb
add
pushf
sarl
cmp
repnz
mov
dec
jge
icebp
jbe
enter
and
mov
aad
subl
decb
shl
push
movsb
ja
ds
xchg
loopne
dec
cmpl
sbb
xchg
sub
ljmp
sub
cmpsl
pop
xlat
mov
mul
push
mov
pop
leave
lock
jmp
in
adc
pusha
mov
pop
and
push
daa
scas
out
sbb
ret
lods
loopne
iret
jns
outsl
pop
cmp
cmp
push
sbbb
mov
jns
lods
jmp
sub
arpl
dec
xlat
lcall
push
xchg
jge
aam
call
sub
les
inc
outsl
aaa
push
xor
mov
push
dec
inc
xor
cmpsb
pop
adc
fiadds
xor
jg
push
add
mov
sub
hlt
rorl
icebp
call
jne
xor
jg
arpl
fsubrp
insb
push
imul
push
out
pop
pop
std
mov
daa
dec
mov
leave
lds
pop
shlb
xchg
add
fdivr
loopne
decl
jne
dec
jo
inc
cwtl
pop
lret
decl
and
loop
xor
dec
mov
pop
fldenv
lcall
sub
xchg
push
ja
sub
inc
pop
adc
leave
test
xchg
pop
inc
aam
and
dec
mov
sbb
arpl
mov
jo
test
and
psrld
or
lret
icebp
out
rolb
push
or
jmp
pop
gs
daa
mov
cmp
xchg
mov
push
sub
adc
or
outsb
lock
sub
js
jp
icebp
aas
cli
sub
out
hlt
dec
stos
into
stc
les
cs
xchg
jle
fsubl
fwait
adc
jecxz
bound
movsl
ljmp
subl
mov
xlat
fidivl
mov
xchg
mov
shll
inc
or
ret
mov
jecxz
sti
rorb
pop
nop
incb
add
xlat
push
fadds
stc
repnz
mov
andb
sbb
pop
enter
and
push
pop
je
sahf
movsb
adc
hlt
push
sub
pop
ss
test
xor
mov
jae
sub
std
movsl
sahf
add
ss
jae
aad
adc
insb
cmp
dec
add
outsb
adc
mov
shrw
sub
xlat
rclb
or
dec
mov
enter
xor
jg
adc
rcrb
xor
je
mov
and
add
or
push
lcall
enter
popa
inc
or
ljmp
jle
mov
orb
int3
xchg
xchg
and
sbb
pop
mov
jae
push
mov
pop
mov
mov
pop
xor
add
clc
mov
lods
fst
leave
mov
push
fnstsw
pushf
xor
shlb
sti
jmp
cs
sbb
mov
sbb
ds
shlb
ss
jnp
sbb
movsl
bound
into
outsb
mov
sti
mov
mov
fsubr
push
xor
and
test
lods
popf
push
inc
pop
adc
sbb
cmp
cmp
xorb
fistps
test
roll
test
loopne
loope
or
hlt
jnp
jb
loop
mov
adcb
xlat
xchg
rolb
inc
adc
cmp
adc
sti
sahf
dec
lcall
leave
sbb
xchg
cmp
add
jecxz
and
stc
outsl
cmp
and
pop
imul
adc
xchg
int3
cwtl
dec
aam
mov
das
sub
cmp
add
mov
and
enter
xchg
cmpsb
dec
sub
cmp
test
or
cli
mov
sbb
cmp
xchg
mov
and
dec
sub
lret
jmp
xchg
divb
bound
or
adcb
arpl
iret
sahf
mov
mov
fildll
mov
pop
cmpsb
cmp
mov
sub
mov
mov
pop
sub
mov
ja
nop
roll
movsl
adc
jno
fiadds
inc
jb
aad
mul
cmp
jo
cmp
mov
inc
mov
cltd
or
icebp
mov
add
push
pop
les
stc
mov
add
sub
sbb
mov
lods
and
add
mov
sub
daa
stos
adc
or
shlb
cmp
faddl
push
push
pop
cmp
cmp
jl
cmp
mov
loope
inc
repz
jo
xor
inc
clc
enter
bound
lret
sub
nop
xor
mov
mov
test
mov
dec
mov
push
inc
popf
jnp
dec
ret
jae
outsl
repnz
jle
fsubrs
xchg
push
inc
jle
and
in
negl
repnz
aas
test
push
push
imul
push
sub
cs
dec
iret
cmp
pop
lcall
pusha
stc
movb
jge
out
in
sahf
inc
mov
out
xor
and
lods
jnp
outsl
nop
dec
aaa
mov
mov
outsl
adc
rorb
popa
popf
sub
repnz
xchg
xor
cmp
sbb
xchg
sbbl
lcall
xor
xchg
out
pop
inc
mov
xor
addr16
push
orb
jae
or
mov
inc
pop
sbb
mov
mov
xchg
mov
fcompl
imul
adc
aaa
loopne
inc
sbb
sub
jno
idivl
gs
jno
lods
inc
stc
adc
xchg
pop
sub
and
jbe
icebp
out
imul
or
shll
ret
push
out
gs
mov
or
imul
aam
mov
addr16
xchg
cltd
mov
popa
js
pushf
or
mov
jo
pop
inc
lock
pop
inc
fisttps
add
pop
repnz
xchg
xchg
xchg
imul
xchg
in
xchg
xchg
xchg
xlat
stos
cmp
sub
dec
into
inc
loopne
test
xchg
xchg
mov
fcoms
ja
pop
mov
jmp
mov
jne
mov
in
add
scas
arpl
push
bnd
push
arpl
or
add
jne
fiadds
pop
dec
icebp
icebp
mov
jno
sarl
into
lock
test
and
adc
push
push
rorb
xor
add
push
cmc
pop
xchg
lret
add
out
pusha
shll
stc
addr16
dec
mov
xchg
mov
pop
aad
mov
and
das
add
adc
incl
mov
xor
xchg
ss
dec
sbb
in
mov
in
ljmp
sahf
dec
pop
dec
pop
xchg
mov
jb
inc
cmc
pop
in
push
in
ret
cmpsl
std
aam
dec
cli
in
dec
push
fiadds
out
add
pop
and
push
fldenv
out
scas
push
sbb
int3
cmpsl
push
xchg
adc
gs
push
into
sbb
mov
jle
repz
in
rorb
std
cmp
push
and
mov
fwait
js
lods
lcall
ret
xchg
int3
das
enter
jl
data16
pop
pop
mov
arpl
in
pushf
rclb
mov
rorb
mov
lahf
pop
sbb
bound
and
push
clc
das
pop
arpl
icebp
cmp
add
shl
mov
jle
inc
push
pcmpgtd
inc
sbb
cmp
outsl
cmp
outsl
mov
fldcw
in
imul
jnp
jle
sub
mov
xchg
loop
hlt
cmp
outsl
xchg
mov
imul
daa
dec
mov
push
call
and
out
sbb
scas
xor
adc
mov
jo
insb
adc
ss
add
fldenv
test
fwait
jle
cli
add
cmp
mov
jle
fwait
stos
insl
pop
fcompl
add
xchg
mov
in
sub
adc
pop
mov
push
out
daa
add
cmpl
jo
dec
mov
rclb
enter
push
cli
adc
mov
pushf
fistpll
jb
fsubl
cmp
sbb
xchg
adc
cmp
iret
cmpb
out
or
and
or
shlb
lret
out
pop
test
call
sbb
cwtd
scas
sub
cld
fiaddl
add
or
xor
mov
mov
mov
sub
xchg
into
lret
out
mov
mov
cmc
sub
bound
xchg
gs
pushf
cltd
pop
jo
repz
ret
and
push
stos
jge
sub
movsb
mov
fldenv
xchg
and
sub
setns
and
int3
sbb
adc
push
clc
adc
xor
inc
loopne
xchg
sbb
in
pop
cli
mov
or
sahf
mov
fsubs
scas
dec
out
inc
in
jl
mov
lret
adc
cmpsl
cmp
sub
fsubr
inc
stos
jae
cmovo
rcrb
xchg
lods
and
xchg
test
dec
and
push
not
fidivrs
out
inc
mov
int3
and
xchg
add
dec
and
les
pop
fdivrs
cmp
inc
test
rorl
sti
movsl
jge
mov
or
ljmp
mov
fidivl
jb
f2xm1
add
lret
sub
test
sbb
les
xchg
jnp
aad
fisttps
or
or
enter
sar
in
loopne
test
pop
addr16
movl
sub
pop
cs
lret
sub
mov
ja
mov
std
push
xorb
inc
std
je
scas
pop
cmp
ret
imull
sbb
push
cmc
fidivrs
sbb
xor
mov
pushf
scas
imul
xchg
ja
aas
sub
jp
mov
adc
ja
mov
arpl
pop
cmp
aad
jecxz,pn
mov
popf
push
push
lret
dec
push
out
sbb
dec
imul
test
cwtl
xor
or
out
pop
into
jae
dec
push
add
mov
pushf
iret
sub
push
or
ss
fnsave
sbb
add
je
cs
sub
addr16
pop
and
pop
hlt
into
sub
cmp
add
out
daa
adc
pop
mov
add
repnz
jmp
sbb
xchg
sbb
out
scas
xlat
mov
ud1
inc
jo
out
pop
sub
minps
jne
push
mov
mov
mov
dec
mov
in
cmp
xchg
jb
das
sbb
inc
mov
cli
push
push
sub
push
cmpsb
sub
loop
fs
mov
mov
das
test
gs
cmp
cmpl
insl
test
mov
ds
dec
ds
sub
pop
xor
jnp
sbb
pop
cld
mov
in
cli
lret
aaa
push
cmpsb
sub
jns
push
subb
clc
mov
lds
movsl
inc
ss
inc
mulb
cmp
adc
xchg
cli
dec
dec
jae
pop
xor
cmp
ljmp
mov
add
repnz
add
leave
out
aam
testl
or
pop
inc
in
addb
mov
sbb
mov
jp
insl
scas
mov
inc
lret
pushf
call
and
inc
add
dec
sub
push
add
inc
mov
or
push
loop
jmp
out
pushf
ja
xchg
sub
or
push
clc
mov
mov
rcll
lods
mov
and
das
sub
inc
sub
lahf
inc
pop
mov
lods
add
shl
lods
jae
sbb
std
std
flds
rclb
cwtl
stos
xlat
mov
stc
in
cs
inc
enter
test
jl
mov
sti
call
mov
jae
adc
clc
aad
add
cmp
imul
andl
subb
fs
das
jmp
adc
pop
fmuls
leave
es
shll
xchg
lock
es
jnp
aam
in
fsubp
adc
or
fstl
sbb
xchg
mov
jp
adc
in
push
jmp
push
push
mov
in
sbb
loopew
jmp
mov
pop
add
mov
roll
jns
sbb
mov
test
xchg
ss
pop
dec
mov
jmp
popf
mov
inc
xchg
rcr
mull
pop
and
or
inc
jmp
xorb
and
or
xor
fwait
mov
push
das
data16
or
sbb
xchg
in
adc
cli
out
adc
xor
sarb
call
jmp
loopne
jecxz
or
pushf
push
shlb
shrl
shlb
aad
cmpsb
pop
and
push
cs
je
push
arpl
pop
dec
iret
jne
mov
mov
andb
inc
add
push
jb
pop
nop
fisttpll
or
stos
ss
ljmp
inc
sbb
rorb
cmp
and
cli
loop
or
setb
push
pop
push
pushf
data16
aaa
xchg
fmulp
bound
mov
fdivr
jmp
cltd
mov
mov
cmpsb
clc
insl
jg
pop
outsl
jns
mov
mov
adc
adc
jno
aam
dec
xchg
aad
ret
dec
jb
jnp
inc
dec
std
mov
ja
sbb
je
xchg
and
dec
arpl
bound
adc
pusha
cli
mov
mov
mov
xor
enter
adc
xchg
or
cltd
push
jle
lahf
inc
sub
adc
cmp
cmc
cmp
dec
repnz
xchg
cmp
push
outsb
dec
xchg
outsl
repz
sub
add
jns
popf
sbb
shll
xchg
cmc
imul
mov
or
mov
in
pop
pop
mov
pop
testb
jne
cmpsb
je
adc
stc
ficoml
sbb
adcl
dec
lret
add
fwait
xor
push
mov
lcall
aad
ss
adc
das
add
mov
jle
shlb
jg
shr
lret
jnp
ret
nop
jl
inc
jl
mov
insl
les
sbb
inc
inc
fists
popa
cmp
les
jo
xchg
inc
sub
mov
cmp
push
push
cmp
imul
push
mov
inc
add
xor
addr16
xchg
dec
or
jge
dec
push
scas
xchg
jge
push
arpl
xlat
insl
adc
fmuls
and
sti
lea
or
fsincos
loope
lock
fwait
jnp
popa
int
pop
dec
pop
test
push
scas
adc
arpl
pop
imul
pop
sub
push
ss
add
scas
sbbl
inc
mov
jns
shrl
out
incb
fisttpl
insb
xchg
xor
push
jnp
pushf
filds
ljmp
ss
clc
jl
sub
add
test
xorl
xlat
inc
cwtl
mov
add
in
dec
xor
push
or
fcoms
xor
mov
push
or
xchg
cmp
sub
push
or
mov
mov
add
stos
adc
pop
xchg
scas
or
xor
mov
ret
dec
pop
jne
stos
jp
sub
inc
and
out
adc
sbb
cmc
adc
mov
push
imulb
bound
mov
or
shll
push
aam
pushf
inc
cld
sub
test
jns
cmpsl
mov
xchg
cwtl
inc
test
pop
mov
xchg
fildll
push
sarb
push
into
or
loop
mov
xor
cmpsl
mov
sbb
nop
push
or
icebp
add
mov
add
push
and
imul
inc
insl
rcrl
adc
adc
addr16
xor
push
push
in
sub
scas
mov
cmp
jmp
lcall
xchg
lock
aad
xor
mov
cmpsl
cs
ret
cld
inc
jmp
ret
inc
cmpsb
push
push
dec
jnp
jne
outsl
cmp
bound
adc
daa
push
and
dec
js
jb
insb
aaa
xor
pop
pop
aaa
xor
push
push
dec
jnp
jne
outsl
cmp
bound
sub
sub
sbb
shll
xor
cwtl
