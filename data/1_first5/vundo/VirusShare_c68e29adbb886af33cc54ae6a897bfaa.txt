add
add
jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
cld
push
cs
mov
call
lret
jmp
fimull
add
add
add
add
add
add
add
cltd
add
add
add
jno
dec
add
add
add
mov
xchg
jecxz
or
mov
add
add
add
add
add
push
add
add
pop
add
or
mov
jae
jno
sldt
add
mov
xchg
inc
add
int3
add
add
add
jecxz
testb
add
add
add
mov
add
add
add
add
inc
add
add
add
add
add
add
add
add
mov
popf
add
jo
mov
pop
add
add
cltd
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
in
add
lret
add
add
add
pusha
add
add
add
add
add
add
add
add
mov
add
and
jno
xchg
add
jle
test
sub
xchg
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
roll
lods
add
add
jno
test
and
filds
cmp
mov
jo
sbb
dec
add
add
add
add
add
add
add
add
add
add
popf
add
add
add
add
add
or
ret
add
roll
testb
add
add
add
or
add
xchg
add
and
hlt
add
add
add
add
add
add
mov
nop
add
add
add
add
add
add
add
add
add
add
add
mov
ds
add
xchg
add
xor
mov
outsb
add
add
mov
pushf
add
pop
add
add
add
xlat
or
add
add
add
add
mov
add
add
add
add
insl
add
add
add
inc
add
push
add
mov
add
add
or
cmpsb
add
jno
push
add
or
xor
out
add
add
add
add
and
add
dec
add
mov
add
add
or
int3
add
add
add
testb
add
add
add
add
add
add
add
add
aad
mov
inc
add
add
mov
pusha
add
add
add
add
popf
add
add
lret
add
mov
adc
add
mov
or
add
mov
mov
dec
add
add
add
cltd
add
add
add
outsb
add
add
jecxz
mov
cltd
add
mov
lret
add
mov
add
add
add
add
in
add
add
add
add
add
dec
add
add
add
test
xlat
sub
repnz
aad
pop
add
xchg
xchg
cmpb
and
fs
mov
cmp
scas
aam
int3
aas
dec
pop
shlb
or
xlat
pushf
out
andb
loope
mov
js
adc
dec
insb
loop
cmpsb
push
inc
movsl
push
call
aam
cld
pop
xchg
subb
pop
jns
pop
out
xor
out
ror
cmp
jp
inc
sbb
cmc
call
nop
repnz
imul
pop
into
outsl
sbb
pop
stos
jbe
or
fnstcw
lret
sbb
and
sub
inc
insl
jb
out
in
ds
cwtl
dec
mov
pop
mov
push
scas
xor
clc
xor
aad
jae
bound
jne
or
push
dec
cmp
pusha
test
and
fs
ficoml
sub
stc
gs
mov
retw
fs
mulb
insl
aad
sbb
add
mov
inc
xchg
cli
mov
cmpl
mov
mov
jp
jmp
xor
in
pop
in
out
js
sub
into
jns
lods
dec
sub
dec
clc
nop
lods
jne
test
pop
rol
add
jmp
mov
cwtl
jne
sbb
adc
pop
cmp
mov
lret
shrl
in
fs
hlt
pop
push
cmp
jne
and
adc
mov
aad
mov
rcr
xor
iret
and
arpl
adc
adc
out
push
lods
push
mov
test
push
into
push
pusha
pop
inc
jp
sub
mov
es
mov
push
and
pop
mov
dec
int3
xor
iret
inc
movsb
arpl
dec
sarl
fmull
adc
cmp
into
push
pop
xchg
imul
and
cmc
push
negl
insb
cmp
xor
mov
inc
xchg
cli
adc
cmp
or
scas
cs
insb
repz
push
or
jecxz
sbb
scas
aad
mov
or
out
shr
loope
xchg
outsl
les
movsl
hlt
mov
cs
pop
or
rol
getsec
loop
xor
pop
pop
and
popa
lds
and
rolb
sub
fldcw
data16
out
mov
push
xchg
sub
mov
out
jp
jne
int3
sbb
shlb
cmp
ret
stc
cmc
daa
arpl
xor
dec
sub
xor
sahf
push
adc
push
outsb
and
pop
jo
addr16
mov
pop
pop
repz
jae
andb
mov
push
cmp
mov
push
push
sub
sub
mov
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
inc
lods
bsf
mov
pushf
inc
mov
add
fisubl
cmp
or
sbb
insb
jl
dec
out
pop
or
pushf
pop
in
dec
cld
jg
outsl
movsb
xchg
sub
cmp
or
sbb
add
jl
dec
out
pop
push
lods
push
mov
inc
in
push
cld
addr16
js
lahf
sub
pop
sarl
jge
cmp
das
outsl
fisttps
cmc
jae
inc
pushf
push
int3
mov
dec
inc
xchg
push
fs
ja
jbe
inc
fs
sub
insb
test
xorb
aas
sbb
les
ret
inc
sbb
mov
dec
bound
jbe
in
lcall
ja
popf
jp
mov
push
push
dec
and
jl
leave
sub
iret
jmp
movsb
lret
jp
pop
std
xchg
cmpsb
outsl
and
mov
cld
pop
insb
pushf
cmpb
lock
data16
pcmpgtb
cld
xchg
shll
stos
repz
sbb
into
jl
dec
pop
mov
jo
mov
xor
les
cmp
scas
or
insb
fildll
pop
dec
out
dec
fildll
pushf
dec
in
push
cld
jg
jbe
xchg
cmp
or
sbb
insb
xlat
jl
dec
divb
pop
mov
cmp
add
int
shrl
stos
sbb
leave
psubusw
sub
mov
movsl
sub
cli
pop
fidivrl
add
jbe
cmp
stc
daa
ret
jg
outsl
fcompl
or
sbb
insb
iret
jl
dec
out
pop
pop
lods
bsf
mov
pushf
pop
in
dec
cld
jg
outsl
fcompl
or
sbb
insb
iret
jl
dec
out
pop
pop
lods
int3
aam
popa
inc
pop
jo
push
popa
pushl
int3
daa
cmp
js
daa
fcos
pop
sub
insl
pop
gs
xor
mov
scas
jp
fildl
fnstcw
lock
les
mov
or
jb
pop
xlat
lret
xchg
sub
idivb
and
mov
dec
xor
or
add
xchg
lock
outsb
jne
leave
stos
fistps
push
call
add
cltd
enter
aad
addr16
lret
mov
scas
pop
xchg
out
xchg
cmc
sbb
daa
popf
decl
pop
lods
ret
mov
rclb
jle
lret
xor
out
mov
sub
xchg
insl
imul
test
mov
pop
jnp
add
and
and
and
aas
popa
add
xchg
xchg
outsb
push
mov
pop
es
mov
inc
inc
rorl
sbb
push
gs
test
scas
repz
nop
mov
lods
popa
aas
jbe
mov
std
and
xor
loopne
xchg
ds
ret
outsl
and
mov
and
mov
imul
xchg
idivb
pop
test
mov
lret
push
or
pusha
adc
push
cmp
push
dec
pop
inc
ficomps
mov
cmpsl
or
clc
pop
insb
das
mov
or
outsb
and
cmpsb
cmpsl
xchg
cmp
ret
addr16
pop
test
or
in
stc
divb
int
push
xchg
repnz
mov
adc
pop
loopne
lahf
insl
in
lock
outsb
cmp
mov
negb
faddl
jne
push
out
popf
inc
out
fwait
mov
imul
sbb
fsts
repnz
popf
adc
mov
test
loope
outsb
jbe
mov
jne
aad
outsb
lahf
mov
xchg
mov
push
fidivrl
rol
arpl
int3
pop
xor
das
cmc
fcoml
pop
loopne
adc
andl
inc
xor
or
jnp
and
jmp
pop
cmp
or
int3
sbb
cmp
inc
inc
pop
scas
ret
out
adc
lahf
xchg
movsb
ss
push
cmp
jle
outsb
xlat
faddl
fcomi
push
jg
call
mov
cli
and
fmul
into
std
popa
testb
out
mov
jp
adc
sbb
dec
ja
test
stos
pop
cltd
leave
bswap
mov
call
push
pusha
xor
mov
hlt
out
jbe
addr16
mov
xor
push
aad
std
repnz
int
mov
add
daa
stos
lds
pop
jle
pusha
xor
jns
add
out
jl
sbb
les
cmc
xor
add
sbb
shlb
jecxz
and
aad
in
outsb
and
cmpsl
jmp
xor
not
nop
inc
mov
pop
inc
xor
pop
loope
lds
imul
push
mov
xchg
fsubs
outsb
mov
aas
or
int3
mov
dec
jmp
and
iret
dec
dec
pusha
in
movsb
rorl
adc
mov
inc
mov
loopne
jl
daa
dec
es
fadds
cmp
sbb
lret
sub
adc
out
xchg
mov
xlat
inc
cmp
loop
stos
push
ds
jl
pusha
mov
cli
push
adc
dec
ljmp
in
dec
xor
out
adc
xchg
mov
pop
push
rcrb
out
xor
das
inc
jo
xor
xor
shlb
loopne
mov
or
fcompl
jle
lock
push
loopne
adc
mov
inc
add
adc
pop
gs
cmpsl
xchg
jge
sbb
xchg
xchg
dec
xchg
int3
lods
out
add
mov
popf
pop
js
pop
int3
imul
mov
sbb
stos
ret
sbb
cmp
jl
cmp
or
fsubp
inc
dec
shrb
out
out
pusha
leave
adc
bound
adc
out
jl
imul
jno
movsl
jecxz
adc
out
inc
xor
mov
or
cli
pop
xor
jge
dec
pop
dec
or
shl
int3
sub
movnti
jecxz
add
push
jns
ds
push
mov
pushf
mov
dec
or
clc
repz
and
mov
pop
iret
mov
daa
aam
out
jne
out
jne
dec
in
or
call
and
pushf
imul
jo
mov
mov
ret
hlt
hlt
cli
shll
push
fadds
xlat
into
adc
push
adc
pop
mov
xchg
adc
pop
add
dec
sub
call
sbb
lods
imul
push
imul
xchg
xor
inc
mov
dec
lock
test
paddsw
adc
stc
movsb
xor
sbb
push
jle
inc
push
inc
push
stos
imul
aad
fwait
mov
mov
pop
inc
xor
cmp
dec
pop
into
cmp
add
aad
pop
jmp
pop
dec
xor
add
in
inc
xorl
jnp
xor
xorb
fsubl
and
decl
adc
push
pop
in
imulb
dec
cli
ret
sub
lods
xchg
inc
mov
push
in
in
pop
ret
jp
je
das
stos
test
cs
inc
sbb
xor
add
and
aad
jg
pop
xchg
in
ljmp
clc
adc
in
xchg
js
mov
jb
or
mov
mov
fwait
test
cmp
xor
in
out
jne
mov
pop
xchg
jmp
mov
jnp
outsb
addr16
mov
jl
cli
test
jmp
ljmp
clc
les
or
or
fldenv
jl
ficoml
or
pop
outsl
jns
or
push
pop
or
cmc
int
out
mov
sub
xlat
test
mov
or
xor
sbb
mov
sub
mov
cltd
jae
lds
test
aad
loopne
loopne
mov
and
icebp
add
scas
inc
sub
stc
inc
add
test
repz
sbb
ljmp
das
add
jge
jge
xchg
inc
xor
lcall
addl
add
jg
out
push
ret
fcompp
xchg
mov
jnp
fistps
loope
xorb
xchg
mov
sar
int3
in
inc
pop
aam
jle
push
addr16
adc
rcrl
inc
test
cmp
dec
xor
pop
lret
cmp
cli
dec
fists
fistpll
call
outsb
das
and
pop
les
cmpsb
sub
adc
mov
aad
xchg
dec
jb
mov
lcall
mov
inc
cli
cwtl
or
xchg
xor
dec
imul
dec
xchg
lret
xor
idivl
inc
dec
xlat
xchg
adc
je
mov
push
jle
aam
bound
xorl
push
pop
adc
jmp
jmp
cmpsl
sbb
pusha
movsl
jp
mov
in
sub
bound
pop
sub
mov
inc
mov
outsb
jb
sarb
dec
jo
sub
fistpl
subb
cmpsb
arpl
jb
sub
andb
ret
pop
sub
push
outsb
fldcw
push
sti
notb
cmpsl
dec
in
sub
data16
sub
das
sub
lds
adc
jmp
pop
jns
pop
mov
icebp
in
mov
mov
add
clc
movsb
xor
mov
cmp
mov
frstor
xchg
ds
dec
cwtl
lea
ljmp
cli
and
xchg
cmpsl
mov
push
xchg
sub
xchg
imul
or
in
leave
hlt
mov
cmpsl
repnz
add
cmpsl
mov
mov
push
sub
xchg
inc
fcmovb
rolb
cmp
mov
jno
mov
movsb
rcrl
sub
fs
testb
sbb
pop
xchg
xchg
incl
loop
repnz
mov
push
aas
sub
push
xlat
fcmovb
faddl
stos
repnz
inc
in
pop
cltd
clc
pusha
shll
in
cmp
stos
mov
inc
gs
out
pop
lcall
popf
rol
stos
cmp
xor
call
mov
push
push
xchg
mov
dec
aaa
pushf
das
pop
or
repz
dec
je
and
cltd
xor
jb
stos
mov
div
test
mov
fisttpl
insl
inc
jne
mov
lcall
out
movsl
add
mov
push
inc
scas
lods
movsl
fisubrl
imul
xor
mov
adc
adc
js
cltd
push
sub
push
mov
mov
idivl
and
cmp
lods
mov
hlt
clc
xor
sbb
pop
cmp
sahf
ret
cltd
repz
das
dec
mov
movsb
cmp
adc
push
and
pop
pop
cmp
inc
xchg
fistpll
jae
test
and
jmp
xchg
stc
shl
xchg
aad
adc
xchg
jecxz
out
mov
pop
sbb
lea
into
push
imul
adc
add
repz
insl
ds
cli
push
std
idivb
pop
es
arpl
inc
lock
leave
cli
and
repz
jl
mov
pop
xor
hlt
push
adc
inc
movsb
pushf
dec
shrb
stos
in
ret
shlb
sahf
or
aam
push
cmpsl
adc
or
lcall
inc
cmp
repnz
or
jbe
movsl
loop
into
mov
sti
pushf
xchg
or
jmp
movsb
sti
mov
push
push
pop
enter
popa
mov
rolb
fildl
cmpsb
packsswb
push
jle
mov
mov
pusha
les
jmp
cwtl
in
mov
imul
add
out
je
xchg
pop
loopne
add
mov
rolb
pusha
into
add
adc
dec
int
sub
jno
xchg
test
push
mov
cmp
add
enter
push
and
or
daa
mov
test
ds
lret
push
cld
mov
insl
in
bound
push
or
push
ret
and
push
and
repz
cmp
xchg
test
test
dec
fnstenv
jge
mov
ret
mov
xlat
mull
sub
filds
hlt
pop
lods
and
pop
mov
mov
lock
repnz
sub
push
push
out
cld
sub
jl
out
dec
ljmp
mov
rorl
dec
repnz
fiadds
das
subl
pop
decl
std
sbb
addr16
adc
cmovno
mov
hlt
lods
sbb
int
addr16
jp
mov
in
dec
xchg
pop
rcrb
jne
cmp
jmp
mov
fsubl
mov
lock
out
add
das
iret
stc
fnstenv
shrb
pop
outsb
popa
notb
aad
mov
inc
sbb
sub
hlt
stos
jl
repz
xchg
cmc
adc
add
test
push
and
cld
lret
das
push
rorb
fwait
pop
or
xchg
dec
jg
out
add
xchg
adc
jbe
lahf
inc
add
les
jg
lea
xchg
sti
ss
jb
sbb
in
and
adc
jne
inc
iret
mov
xor
lahf
leave
les
mov
pop
mov
addr16
cmpsb
insb
popl
push
pop
andl
cmp
jnp
imul
xchg
daa
inc
subb
mov
pop
xchg
sbb
xchg
out
stc
add
pop
popf
hlt
inc
cltd
xchg
lea
loopne
stc
xchg
shl
repz
mov
int
mov
pop
mull
out
push
push
cs
cltd
frstor
xor
pop
xchg
fs
cmpl
in
inc
out
add
imul
cwtl
les
shlb
jno
mov
scas
and
xchg
push
add
xchg
fsts
sbb
stos
inc
and
ss
cmp
dec
dec
sub
int3
mov
mov
mov
jno
mov
insb
mov
lret
dec
mov
scas
fs
repnz
movsb
ljmp
dec
rclb
jge
sub
mov
test
jg
or
std
mov
jp
aam
insl
lock
js
test
dec
dec
sub
pop
orb
jbe
lea
cmp
dec
sahf
rorl
imull
mov
outsl
jnp
in
mov
cmovo
dec
xchg
push
jecxz
push
mov
add
mov
mov
push
cli
clc
mov
pop
mov
xchg
jbe
and
sub
push
mov
out
outsb
cli
das
lret
fadd
xlat
arpl
push
mov
xchg
push
test
xchg
mov
xor
mull
fs
add
fsubl
lds
mov
bound
movsl
sbb
jge
and
sbb
mov
pop
cmp
push
mov
sub
xchg
in
sbb
fs
js
insb
inc
sbb
jb
stc
or
iret
roll
in
mov
int3
sub
leave
lea
adc
popf
sbb
arpl
add
mov
jbe
sahf
xchg
lahf
fldt
jp
sahf
mov
movsb
push
xlat
out
sbb
js
dec
inc
jmp
sub
cmp
daa
add
sahf
mov
clc
push
mov
shll
lods
subl
push
jno
in
sbb
mov
and
inc
add
pop
xor
mov
dec
sbb
jnp
mov
jbe
xlat
xchg
add
sbb
int
pop
mov
add
mov
mov
ficoml
ret
sub
fwait
cli
test
mov
cmp
or
and
loopne
daa
sub
pop
out
cwtl
adc
daa
sti
mov
or
jmp
outsb
sarb
xor
add
push
test
push
sbb
sub
pop
call
lds
mov
cmp
pusha
sub
andl
push
push
in
test
sub
test
loope
insl
or
jle
test
js
fsts
lcall
out
pop
mov
sbb
cld
lods
jmp
gs
scas
xor
push
jnp
mov
inc
add
orl
dec
xchg
jge
int3
inc
jp
cmp
jne
inc
in
jge
repnz
icebp
push
sub
add
js
imul
jmp
inc
jecxz
lcall
es
inc
push
cmpsb
pop
pop
orl
adc
xchg
lods
xlat
negl
xor
inc
fnsave
test
adc
shll
bound
sbb
aad
ret
cmp
adc
ljmp
cmp
pop
sub
pop
xchg
imul
loope
leave
enter
lret
lods
mov
pop
pop
adc
mov
sbb
sahf
add
stos
dec
mov
or
fs
cld
cmc
xchg
sbb
out
push
sub
push
sbb
in
jmp
sub
nop
negl
and
ret
sub
xchg
jle
inc
call
pushf
flds
in
and
push
inc
icebp
in
outsb
jg
adc
call
arpl
icebp
out
sub
divb
je
mov
mov
rol
mov
and
jo
insl
sub
dec
push
pop
inc
repnz
imul
dec
mov
sub
stos
iret
inc
or
adc
cmp
popa
stos
cmc
and
out
lret
in
aaa
cltd
scas
arpl
cmp
les
mov
push
mov
daa
fwait
lds
scas
lret
insb
fimuls
subl
cmpsb
out
mov
push
mov
pop
sbb
movsb
or
pop
xor
push
cmp
lds
mov
mov
fildl
add
lahf
mov
frstor
enter
inc
mov
jg
jg
push
cwtl
loope
cs
cld
mov
jle
pop
cmp
pop
lods
shll
inc
mov
je
addr16
loop
loop
push
pop
xchg
pop
jnp
lret
repnz
jno
gs
add
fs
or
loope
movsl
pop
pop
push
lsl
mov
push
mov
mov
clc
in
or
clc
mov
les
stc
cli
sbb
jle
adc
jno
sbb
dec
cmp
sbb
sar
and
xchg
sub
adc
fwait
jb
sbb
xor
mov
or
pop
cmp
xchg
inc
cmp
gs
gs
pop
pop
mov
mov
xlat
fsubs
pop
push
cwtl
inc
aam
mov
mov
add
mov
sub
pop
xor
insb
cmp
shlb
mov
adc
cmp
pop
rcrb
sub
pop
mov
pusha
mov
aad
adc
int
sub
adc
nop
xchg
lods
call
adc
mov
test
mov
adc
add
push
jae
loop
fmuls
xchg
enter
or
jge
aam
mov
xchg
imul
add
sti
fdivl
leave
subl
cmc
cmp
rolb
sbb
push
jmp
jo
sbb
pop
cld
shr
and
xchg
jl
dec
jmp
sbb
jle
mov
pop
push
push
push
adc
lahf
fcomp
loop
ret
add
enter
rcr
add
xchg
xchg
or
fcompl
pop
shr
pop
push
pop
fwait
push
and
nop
adc
cbtw
call
sbb
mov
add
xchg
nopl
jno
or
daa
test
mov
idivl
call
mov
mov
cwtl
xchg
mov
rorl
push
les
pop
mov
xchg
push
je
mov
pop
jae
push
jge
mov
fisubrs
mov
xchg
scas
movsl
jg
shr
call
loopne,pn
enter
das
jbe
into
xor
inc
daa
cmc
lea
in
xor
lret
mov
das
pusha
push
insb
loop
adc
mov
and
nop
in
dec
mov
mov
sub
xor
movsl
cmpsl
inc
jmp
sti
flds
repz
sahf
sub
pop
sbb
and
adc
push
or
adcb
mov
setl
fistl
mulb
sbb
pop
in
pop
call
fadd
stos
jo
imul
mov
pop
roll
push
pop
iret
mov
pop
arpl
cmp
xchg
add
add
inc
mov
jb
sbb
add
xchg
leave
aam
repnz
inc
shlb
ljmp
test
shrb
lret
fcoms
loopne
add
xchg
ljmp
dec
add
in
stc
ja
insb
testl
imul
xchg
inc
movsb
dec
outsb
and
cmpsb
aam
imul
rclb
lds
cmc
mov
out
add
mov
sub
dec
icebp
inc
ljmp
outsb
inc
repnz
mov
jle
mov
mov
xchg
xchg
lea
cmp
dec
mov
addr16
mov
jmp
jno
jae
jg
adc
ret
add
sbb
cwtl
shlb
or
xorb
jae
push
rorb
push
lret
movsb
and
aam
inc
push
hlt
push
sbb
add
dec
pop
pop
xchg
imul
pop
adc
insl
daa
icebp
sbb
push
pushf
push
pop
mov
das
push
cwtl
xor
and
sub
fsts
mov
shlb
mov
xchg
js
loopne
imul
fwait
sbb
mov
ret
push
lahf
lock
ljmp
pop
in
lcall
aas
insl
pop
inc
adc
stos
sti
adc
push
pop
lds
leave
lcall
sub
pop
lcall
repnz
leave
mulb
fnstenv
push
mov
dec
inc
stc
out
pop
add
cld
in
repnz
cmc
js
sbb
xchg
sbb
inc
mov
cmp
jecxz
cmp
mov
movsl
adc
stc
xchg
dec
jbe
dec
adcb
scas
dec
add
outsb
fsub
jge
sbb
fistps
mov
sarb
mov
push
mov
loopne
cltd
sbb
imul
inc
faddp
mov
xor
insb
cli
sub
mov
mov
pusha
lret
fstps
cmpsb
adc
jg
mov
mov
fiadds
adc
and
or
mov
outsb
and
fisttps
repz
pop
movsl
cmp
inc
lahf
jl
jbe
andl
je
mov
and
ret
fcomp
in
mov
cltd
inc
aas
adc
add
push
insl
mov
icebp
in
cld
sahf
icebp
fiaddl
xlat
int
movsl
aas
cmp
lahf
sti
sub
stos
push
std
repnz
jmp
lahf
out
insb
js
xor
cmp
dec
xor
jp
sub
outsb
clc
cld
xor
leave
and
out
xlat
inc
or
xchg
loopne
cmpsb
adc
aam
pop
fnsave
aam
mov
pop
in
dec
cld
jg
outsl
fcompl
or
sbb
insb
iret
jl
dec
out
pop
pop
lods
bsf
mov
pushf
pop
in
dec
cld
jg
outsl
fcompl
or
sbb
insb
iret
jl
dec
out
pop
pop
lods
bsf
mov
pushf
pop
in
dec
cld
jg
outsl
fcompl
or
sbb
insb
lret
jl
dec
ficomps
cmp
in
dec
cld
dec
out
fsubl
jo
adc
in
addl
adc
lds
aad
stos
sub
lock
gs
push
mov
fsts
sub
sbb
or
pop
xchg
dec
gs
push
mov
fsts
sub
sbb
or
pop
xchg
dec
xchg
ss
push
lea
jnp
lods
cmp
pop
mov
cmpsl
in
mov
outsb
stos
cmpsl
movsl
scas
cld
lea
and
add
dec
imul
xorl
inc
xchg
add
leave
enter
fidivrl
and
fldpi
xor
or
movsb
loop
pop
jnp
gs
push
mov
stc
mov
enter
sub
js
jns
mov
sbb
gs
fldt
pop
call
scas
iret
in
hlt
push
jns
xchg
test
mov
test
aaa
lods
in
add
sbbb
jl
mov
push
xchg
push
int3
xor
popf
adc
add
cmp
sub
sbb
or
pop
xchg
dec
gs
push
mov
fsts
cli
mov
push
cld
sub
cmp
cmp
cmp
inc
xchg
pop
nop
inc
pop
inc
lods
out
xchg
sbb
inc
test
xchg
dec
add
ja
add
adc
inc
xchg
popa
xchg
adc
pop
lods
insl
aam
movsl
adc
xchg
dec
gs
push
mov
fsts
sub
sbb
or
pop
xchg
dec
gs
push
mov
fsts
cmp
jmp
fdivrs
sub
int
loopne
andl
add
inc
pop
push
lods
sub
ficomps
push
push
jl
jb
dec
bound
fs
pop
shl
pop
or
pop
adc
jmp
pop
inc
pushf
or
repnz
mov
sarb
subl
dec
ja
in
imul
fs
imul
add
xchg
cli
bound
and
icebp
incb
fbstp
adc
add
cmp
popf
mov
fst
push
push
stos
popa
es
sbb
stos
mov
and
lcall
pop
sbb
sub
push
push
nop
cmpsl
and
stc
push
in
push
sub
mov
shlb
mov
sub
ss
in
pop
push
lea
pop
jno
adc
sbb
int3
mov
inc
push
fidivrs
es
push
js
xor
das
mov
shrl
fldenv
dec
sub
stc
pop
loope
nop
les
rcr
filds
xor
push
mov
adc
ss
xchg
sti
int3
inc
loop
add
stos
pop
cltd
or
repz
stos
add
rcr
cmp
outsl
ja,pn
mov
add
sbb
push
lret
ret
sbb
faddl
stos
jl
fisttps
sti
fimull
sbb
push
enter
repz
sahf
cmp
push
insl
xchg
xchg
dec
jnp
or
daa
dec
and
pusha
xchg
sub
jbe
enter
rcl
ljmp
mov
dec
pop
jae
out
adc
aaa
mov
mov
rorb
jmp
subl
imul
jp
cmp
insb
cmc
add
repnz
mov
pushf
inc
cli
or
push
jae
pop
mov
cmpsb
popf
push
sbb
or
xchg
jns
mov
adc
mov
inc
inc
adc
fs
mov
rcrl
lahf
ss
sub
shlb
repnz
lahf
add
push
mov
mov
aad
sbb
inc
mov
push
jb
and
out
sahf
repnz
push
loopne
aas
rol
jl
jp
xchg
push
aas
jg
mov
inc
cmp
pop
add
xchg
inc
xchg
cli
sbb
cmp
jl
mov
jmp
xor
pop
xor
adc
xchg
jne
mov
pop
mov
test
adc
jns
xchg
and
iret
imul
insb
test
adc
enter
jnp
pusha
mov
lods
in
jmp
inc
call
lret
fucomi
mov
jno
inc
cmp
mov
stc
loopne
lods
lods
lods
cwtl
pop
cmpl
mov
aam
mov
mov
sub
loope
dec
xchg
jb
inc
gs
clc
pop
orb
inc
mov
sti
mov
push
cwtl
test
dec
mov
clc
mov
mov
sarl
in
insb
outsl
pop
mov
leave
popf
jmp
mov
cld
in
cmp
int3
in
or
mov
mov
mov
cmp
data16
sub
dec
lret
lret
lea
lea
push
adc
and
or
and
cld
pop
xlat
pop
loope
enter
or
lods
cli
outsb
gs
mov
test
sbb
in
sbbl
stc
add
lret
mov
int
lods
aam
jb
mov
cmp
cmove
stos
lods
xor
xchg
mov
cmp
jg
xchg
addr16
cmp
movb
mov
cmp
xchg
arpl
or
insb
pop
insb
test
es
push
adc
iret
mov
push
and
xchg
or
jnp
push
aam
add
mov
xchg
push
dec
mov
test
push
mov
lds
jecxz
xor
push
push
cs
sbb
clc
lcall
hlt
xchg
clc
xchg
jbe
loope
leave
dec
out
iret
test
xor
pop
std
in
xlat
jns
pop
mov
adc
scas
mov
lret
cwtl
mov
mov
sbb
cmp
stc
lcall
dec
inc
adc
pop
cli
dec
and
lods
inc
dec
inc
xor
adc
adc
repz
dec
jl
jns
adc
ss
out
lds
popa
out
dec
imul
push
jo
icebp
imul
adc
cli
dec
out
pop
or
lea
and
fcomps
mov
dec
pusha
outsl
clc
mov
mov
mov
inc
fwait
orb
lahf
mov
into
cmp
lahf
imul
xor
jl
jecxz
ficomps
jg
dec
push
mov
mov
sbb
mov
lret
lods
shlb
cmc
into
adcb
arpl
jl
clc
setle
lret
imul
sbb
pop
mov
jmp
mulb
sub
adc
sub
clc
and
xchg
jl
lds
mov
fs
lret
mov
lods
add
or
push
jmp
inc
xlat
mov
xchg
or
dec
jnp
sti
jno
push
int
outsl
sbb
adc
cmp
les
xor
jnp
aas
inc
in
xchg
insl
mov
jp
xchg
test
sarb
fucom
stos
lock
out
mov
dec
add
out
add
jb
lds
or
xor
fidivrl
push
push
or
test
jp
ret
xor
jo
js
xor
sub
iret
lahf
xorb
or
dec
lahf
mov
scas
dec
adc
rcll
iret
sbb
out
pushf
insl
and
dec
sub
dec
pop
jle
movsb
xor
cmp
and
dec
and
cmp
and
cmc
inc
adc
loope
mov
push
push
pop
jg
pop
pop
int3
sub
decl
in
notb
jbe
adc
aam
cmp
pushf
sub
sbb
adc
imul
jmp
push
mov
xor
sub
sbb
ret
xchg
cltd
inc
jnp
movsl
int
hlt
popf
inc
pop
in
mov
repz
mov
loope
adc
rcrl
xchg
push
mov
test
fsts
sub
movsl
das
icebp
out
aam
push
push
mov
fwait
repnz
std
dec
push
std
push
push
sub
leave
push
pop
push
push
push
cmp
aam
pop
sbb
xor
xor
insb
adc
imul
push
pop
mov
lods
scas
adc
aas
or
xor
jp
aas
cwtl
pop
dec
jnp
aas
xor
xchg
jb
imul
mov
xchg
in
hlt
out
jne
popa
inc
lds
sbb
imulb
rorl
push
in
sbb
cmp
dec
add
lcall
cwtl
sub
xchg
push
aas
pop
fsubl
sub
aam
jg
add
inc
xor
and
or
xchg
es
lret
sbb
shr
mov
scas
cwtl
mov
call
fisubs
and
inc
jge
push
jle
inc
jle
imul
fs
test
xchg
jb
inc
ret
lock
dec
mov
and
iret
aad
xor
sub
xor
adc
fdivl
mov
and
add
inc
daa
dec
jnp
jne
add
sbb
cli
inc
xchg
or
pushf
icebp
and
insb
ror
push
adc
xchg
xchg
mov
push
xchg
sub
and
jge
mov
sti
icebp
pusha
mov
fwait
jle
jno
or
and
inc
jns
shl
loop
sub
pop
xor
dec
jo
lret
addr16
fidivrs
movsb
inc
jle
mov
sub
sub
outsl
stc
negb
add
pop
pop
sbb
xor
jae
cwtl
int
mov
add
clc
mov
inc
mov
pop
mov
xor
add
bound
add
add
add
push
imull
loopne
ljmp
fwait
test
lock
fwait
jge
lods
pop
hlt
mov
adc
cmp
jno
mov
mov
fcoml
leave
mov
les
mov
xor
es
inc
cld
imul
xor
pop
andl
add
xchg
pop
inc
mov
xlat
mov
hlt
jp
mov
stos
inc
jp
vmaxsd
cmp
idivl
push
test
hlt
add
repz
jns
adc
je
cmp
mov
dec
movsl
sbb
aad
shll
pop
ret
mov
xchg
pop
or
xchg
lahf
pop
enter
ljmp
add
lods
or
add
mov
push
rolb
mov
lds
jl
insb
js
repz
loopne
push
insl
inc
loop
imul
inc
movsb
push
xor
shll
or
pop
inc
inc
aaa
mov
dec
pusha
mov
lret
jle
add
in
xor
scas
xorb
jg
push
sarb
lea
lahf
cmp
mov
jo
lret
mov
xchg
mov
jg
pop
fistps
insl
es
xor
mov
ss
add
add
push
push
dec
mov
das
mov
lret
aam
mov
in
pop
mov
leave
shll
or
out
cmp
into
sub
push
sbb
sbb
push
dec
push
cs
ja
enter
les
js
xor
ljmp
movl
or
lcall
gs
loop
loope
push
jns
dec
insl
add
mov
jb
sbb
hlt
inc
mov
dec
lret
cs
sbb
sub
shl
outsl
adc
inc
xlat
outsb
in
or
mov
and
push
mov
sub
es
pop
push
rcll
ret
xor
cli
test
mov
xchg
lods
xchg
out
or
adc
aam
hlt
and
or
pop
cmc
pop
popf
sti
dec
dec
mov
rcrb
jecxz
ret
lods
jo
lea
mov
pusha
pusha
test
call
rorb
xchg
mov
loopne
iret
arpl
loopne
lods
outsb
or
mov
cwtl
insl
xchg
sti
lock
stos
flds
inc
mov
cmp
outsb
or
fiaddl
pop
sbb
and
inc
sti
sahf
sarb
xor
nop
xor
xor
in
roll
cmp
pusha
pushf
or
dec
repnz
mov
sbb
mov
and
inc
ffreep
inc
jg
push
ljmp
lcall
mov
dec
pop
mov
sub
xchg
bnd
mov
push
push
xchg
xor
dec
inc
mov
mov
lods
jb
fisubl
xchg
aad
and
leave
dec
add
data16
mov
dec
sbb
insb
pop
adc
add
fwait
sbb
incl
loopne
xor
xchg
xchg
scas
ljmp
lcall
dec
sub
les
data16
dec
mov
les
jnp
cmc
xor
add
movsb
cmc
xchg
xor
ss
inc
mov
data16
fstl
mov
add
fcom
gs
pop
lret
fbstp
cli
in
divb
ucomiss
in
adc
test
std
add
mov
pop
inc
fwait
jbe
xor
cli
sbb
xchg
clc
aaa
ljmp
xchg
push
mov
cmp
cmc
lahf
pop
shrb
hlt
inc
rorb
or
imul
je
mov
sbb
arpl
add
fwait
sbb
ret
pop
je
data16
test
add
xchg
xchg
jp
add
pop
cmp
roll
xor
and
xchg
int
or
inc
movsl
xchg
and
mov
test
xchg
and
ds
inc
pop
pop
jno
lret
pop
cltd
sub
sub
lcall
mov
cmp
cmp
dec
inc
pop
sub
orl
dec
jl
lds
cs
cmp
loopne
xor
negb
cwtl
fwait
pushl
add
pop
and
insb
sbb
xchg
leave
pop
sub
sbb
movsl
clc
xchg
int3
xchg
cltd
pop
pop
push
sub
adc
aam
fimull
idivb
imul
pop
or
insl
xchg
pop
rcll
add
test
mov
cmpsl
cwtl
aaa
lods
popa
pusha
mov
mov
ja
test
dec
ret
jmp
imul
lods
pop
jns
hlt
xor
outsl
sub
push
add
or
cmp
xchg
mov
pop
daa
mov
sub
and
pop
jl
int
nop
xor
cmp
sbb
or
xchg
sbb
movsl
lret
sbbl
mov
pop
gs
pop
xchg
leave
jg
cli
pop
or
push
push
adc
mov
in
pop
shll
push
or
and
call
das
dec
into
jmp
fildll
leave
ja
and
movsb
dec
bound
sbb
push
jo
xor
xchg
mov
mov
xor
rcr
sub
mov
push
mov
xchg
cmc
cmp
cs
int
and
bt
sbb
lcall
data16
cmp
or
mov
adc
and
mov
inc
test
and
aam
push
sub
cs
and
movsl
pop
push
pop
in
mov
aad
cmp
in
shll
dec
movsb
sbb
wbinvd
or
sar
mov
dec
scas
rorb
sbb
outsb
dec
xchg
lock
xchg
cwtl
mov
jbe
xor
ja
xor
sbb
xor
icebp
fsubrs
std
notb
sub
adc
mov
add
aaa
pop
mov
mov
lcall
dec
pop
bound
sub
arpl
stc
sbb
cld
cltd
dec
push
lods
cmp
mov
notb
sbb
and
push
pop
inc
xor
les
sbb
mov
movsl
mov
scas
jmp
incb
aas
sub
inc
xchg
cmpsl
xchg
mov
stc
inc
lahf
ret
rcrb
int
aas
sahf
mov
jg
jmp
mov
rolb
pop
push
cmp
ret
adc
sbb
das
xor
jbe
cmpsl
into
or
sub
hlt
fsts
push
xor
adc
outsb
sahf
mov
int3
repnz
movsb
arpl
in
push
adc
mov
adc
fwait
xchg
add
sub
pop
nop
fcoml
sub
scas
mov
mov
add
add
jle
aaa
pop
ja
push
std
ret
fs
jo
lahf
aas
and
fwait
rcll
push
loopne
pop
or
jge
rolb
lret
popf
imul
in
sbb
ljmp
fistps
jbe
cltd
insl
cltd
push
sub
out
pop
fs
aas
jp
sub
shl
push
loop
cmp
inc
cmpsl
cmp
and
push
popf
enter
fldl
or
jmp
lea
stos
jns
loopne
and
gs
mov
sti
fistps
aaa
bound
pop
fldenv
inc
xchg
lret
adc
loop
jp
cmp
cmp
roll
arpl
mov
mov
imul
pushf
jb
adc
popf
test
xor
or
leave
jb
jbe
adc
rol
movsl
cwtl
mov
iret
std
push
movsb
fcom
xchg
arpl
or
push
or
movsl
aam
adc
hlt
sub
xlat
outsl
inc
and
leave
cmp
enter
clc
jp
fisubrs
popa
lock
push
sbb
cmpsl
mov
mov
sti
push
repz
mov
out
out
fmull
fcmovbe
ret
cmc
adc
cmc
cld
ret
leave
stc
jge
inc
aam
inc
sbb
in
mov
lret
repz
out
clc
cld
and
cmp
push
imul
push
mov
addr16
push
test
ljmp
in
mov
in
cmp
enter
jl
mov
test
sbb
aaa
pusha
cld
xchg
repz
inc
push
jbe
jge
inc
cli
bound
pop
lock
mov
addr16
lock
xor
rolb
popf
sub
popa
inc
add
mov
fisubrl
fcoms
cmpsl
mov
or
xchg
outsl
sbb
sti
xchg
insl
out
addr16
and
mov
popa
sub
add
stos
cmc
fsubl
sbb
xchg
inc
inc
arpl
pushf
test
inc
fsubrs
gs
adc
inc
rcrb
repnz
mov
jecxz
lods
movsl
cld
push
test
cmc
xor
push
out
jb
and
xor
jns
stos
cmpxchg8b
fs
mov
mov
inc
xorl
mov
sbb
jmp
js
in
iret
add
sbb
sti
sub
iret
insl
enter
fucomi
pop
mov
loope
rol
aam
dec
dec
mov
cltd
popa
sbb
jns
out
bound
jnp
push
pusha
xor
jle
or
push
stos
mov
cmp
xchg
xchg
xor
repnz
insb
int
lods
call
mov
and
popf
ja
popf
ret
lret
ficoml
addr16
add
fidivs
ja
popf
repnz
xchg
xor
in
out
cmp
cmp
out
lock
dec
mov
fistpl
push
dec
pushl
aaa
mov
xlat
adc
jno
jns
inc
inc
imull
or
std
pop
xchg
inc
shrl
lret
ss
call
cmpsl
lret
andb
xor
add
jle
in
pop
gs
or
inc
sub
add
rorb
mov
push
push
and
dec
ret
push
rolb
push
mov
adc
movsl
das
jmp
test
cwtd
cltd
xor
push
xor
adc
and
sahf
arpl
lret
and
aas
jb
pop
jle
xchg
fstpt
aad
aam
and
sbb
push
jbe
inc
aas
jbe
insb
stc
and
add
xchg
iret
in
cld
shlb
adc
sbb
push
ret
adc
dec
lods
shlb
test
stos
pop
repnz
adc
repnz
loope
adc
adc
inc
mull
stos
in
pop
push
jo
inc
xor
scas
mov
sbb
imul
sti
adc
lret
fidivrs
subl
fs
adc
sub
mov
inc
dec
std
cmp
clc
addl
cli
lock
dec
push
call
das
lret
outsl
xchg
loope
jg
xchg
mov
outsl
xorl
adc
pusha
ret
jnp
outsb
pminsw
sahf
or
sbb
ljmp
int3
inc
bound
inc
aam
sahf
xor
xchg
add
sbb
xchg
hlt
fwait
jae
sbb
rorl
stos
pop
into
add
insb
mov
add
cmp
movsb
pop
lcall
sub
loope
mov
add
pop
icebp
push
mov
ds
ss
adc
data16
sbb
sahf
hlt
xor
or
lahf
stos
js
push
scas
outsl
ljmp
sahf
lret
pushf
inc
sub
sub
and
aas
test
cmpl
xchg
push
pop
adc
adc
sbb
inc
mov
repnz
in
mov
mov
clc
inc
lcall
sub
inc
fmuls
fstpl
and
arpl
push
je
adc
scas
loopne
lahf
mov
add
add
pop
stos
das
test
add
inc
mov
adc
nop
xor
lds
stos
ljmp
add
xor
add
into
inc
mov
outsl
push
fsubr
outsl
fs
ret
dec
fnclex
mov
jno
cwtl
xchg
sub
addr16
dec
push
ljmp
out
dec
sbb
addr16
adc
int3
jle
mov
dec
push
iret
mov
lcall
or
divps
mov
jne
push
add
dec
cmc
add
adc
push
pop
test
imul
mov
bound
gs
ds
es
shrl
lret
mov
and
pop
mov
notb
mov
pop
insl
pop
js
je
add
data16
or
ror
mov
or
lcall
enter
sti
fadd
stc
je
pop
pop
call
cs
push
jp
sbb
insl
aaa
sub
ja
fists
push
cmp
add
push
in
inc
rorb
fldenv
cmc
repz
xor
cmpl
lods
lods
test
int
les
repz
mov
mov
cmp
inc
mov
or
ficoms
fcmove
nop
test
sbb
int
shr
mov
imul
pusha
clc
jb
sub
xor
incl
lods
fstpt
inc
jge
pop
dec
nop
and
inc
out
mov
nop
xlat
adc
repnz
inc
sbb
push
push
cltd
cmpsl
cmc
outsb
adc
outsb
mov
jbe
cltd
xchg
mov
jecxz
jbe
push
mov
sub
lcall
jns
imul
cltd
push
mov
fsts
sub
sbb
or
pop
xchg
dec
gs
push
mov
fsts
sub
sbb
or
pop
xchg
dec
gs
push
mov
fsts
sub
sbb
or
test
xchg
mov
inc
jne
out
cltd
push
push
jno
push
cli
es
xor
faddl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
mov
aad
pop
test
sti
cmp
lea
inc
in
xor
and
add
cmp
or
mov
movsl
dec
xchg
pop
loopne
jne
gs
push
pushf
inc
in
push
cld
and
sub
cmp
or
sbb
insb
mov
movsl
dec
xchg
pop
test
stc
sub
jo
jb
mov
dec
mov
mov
outsl
subb
int
loopne
push
sarl
cmc
jns
pop
dec
insl
movsl
jae
sbb
inc
lcall
add
lods
and
test
pop
jge
push
dec
sub
jne
ficoml
mov
dec
cwtl
cltd
leave
jmp
cmp
sub
lock
insb
mov
movsl
lods
popf
pop
gs
xchg
je
or
scas
add
pop
sub
enter
dec
dec
les
mov
jo
stos
pushf
inc
mov
jge
in
lods
cmp
xchg
int
cli
mov
mov
lcall
and
mov
int
jae
cmp
or
sbb
insb
mov
movsl
dec
xchg
pop
test
pushf
inc
in
xor
faddl
cmc
js
pusha
xchg
push
test
repnz
or
cmp
les
clc
xor
mov
cltd
jg
js
push
cmpsb
or
sbb
dec
ret
adc
pop
hlt
xor
pop
cmpsl
push
mov
jo
push
pop
mov
mov
mov
mov
dec
xchg
pop
test
pushf
inc
in
xor
faddl
or
sbb
insb
mov
movsl
dec
xchg
pop
test
pushf
inc
in
xor
faddl
cmpl
mov
dec
fucomi
ds
sbbl
add
jge
repz
shlb
shrl
add
or
or
xor
scas
mov
aaa
test
push
sahf
xchg
and
sub
cmp
loop
mov
cmp
jne
mov
lret
cs
mov
mov
jmp
sti
xor
mov
sub
lcall
xor
mov
addr16
jne
inc
lret
gs
aad
mov
dec
inc
inc
repnz
cmp
divb
adc
in
push
cmpsb
loop
pop
and
mov
mov
divl
xchg
add
xor
call
xchg
inc
add
cwtl
cmp
scas
adc
cs
sbb
in
cmpsb
out
test
pop
shrl
test
inc
int
inc
daa
mov
push
push
mov
rcll
fwait
loop
jl
pop
push
inc
add
jno
cmp
cmp
aad
imull
push
outsl
mov
lock
mov
xchg
in
pop
adcb
pop
repz
adc
fadd
popa
cli
stc
daa
sahf
and
xor
inc
jnp
mov
mov
mov
test
lret
inc
mov
and
scas
data16
loope
sbb
into
xor
clc
mov
mov
or
filds
add
fildll
sbb
xchg
out
push
out
mov
jne
aaa
or
and
inc
lea
mov
insb
enter
cmp
jp
leavew
std
mov
mov
or
jmp
adc
xchg
push
stos
idivl
push
loope
scas
fnstcw
pop
sbbb
jmp
mov
fistpll
outsl
push
insl
sbb
sbb
add
mov
mov
enter
cmpsb
jnp
das
dec
cli
test
faddl
scas
jecxz
inc
call
data16
mov
pop
mov
cmp
imul
cmpsl
jbe
or
aam
loopne
xchg
outsl
aas
fwait
dec
jbe
xchg
cld
mov
pop
dec
and
fnstcw
mov
mov
aad
mov
movsl
or
testb
lods
sub
lret
sub
sub
test
jl
or
mov
lret
mov
jns
gs
push
cmp
cltd
dec
adcl
adc
popa
pop
fwait
test
jbe
mov
dec
xchg
lea
je
or
push
mov
clc
inc
add
insb
xlat
pop
xlat
mov
xor
mov
pop
push
xchg
lret
lahf
push
lcall
lods
je
push
subl
mov
xchg
aam
add
inc
mov
or
add
add
sti
lds
and
shll
adc
add
mov
inc
inc
arpl
cmpb
push
andb
hlt
popf
mov
dec
mov
inc
push
inc
mov
push
imul
cmpsb
in
mov
stc
add
out
cmpsl
jg
int3
cwtl
leave
popa
push
cld
popf
add
das
push
cmp
test
aas
xlat
nop
xor
fidivrs
in
mov
xchg
dec
pop
fs
pop
inc
fwait
loop
add
jl
cs
lcall
sub
cs
xlat
sbb
cmp
push
jle
call
decl
mov
je
dec
push
into
cs
cmp
popf
call
mov
arpl
xchg
lea
push
cmp
pop
push
mov
pop
fwait
scas
mov
pop
js
dec
cmp
mov
jbe
lds
jmp
xor
jne
ret
or
hlt
rcl
ficoms
cli
cs
mov
repnz
or
and
icebp
test
pop
lods
lea
lret
sub
adc
sub
inc
pop
movsl
out
inc
addr16
shll
jmp
dec
push
xchg
cmpsb
clc
stos
test
jl
pop
fnstsw
push
push
in
cs
cltd
adc
and
pop
in
push
cmp
sbb
and
icebp
sti
push
negl
cli
or
mov
mov
and
push
jnp
jne
push
aam
cmpsb
xchg
dec
ret
mov
and
cmpsl
leave
sub
mov
negl
or
insb
sbb
add
jg
enter
cltd
mov
js
ret
in
cmc
gs
test
paddb
fiaddl
call
bound
cmp
mov
popf
jb
imul
imul
pop
out
stos
dec
lods
divl
orb
mov
adcl
xor
test
inc
rcrb
cmpb
push
insb
xor
jo
mov
loop
push
adc
sahf
sbb
xchg
shr
daa
lcall
and
cmp
lods
int
xor
lahf
in
ror
stos
mov
insb
xchg
rolb
fisubs
aam
jb
scas
scas
insl
mov
mov
xor
cli
cld
xor
enter
imul
in
aas
notb
xlat
fsubs
stos
and
cmp
cltd
and
xchg
jle
cld
in
js
aaa
fldenv
shrl
mov
cli
fcmovne
sbb
stc
shll
mov
psrlq
cmp
cmc
push
jle
mov
mov
in
scas
xchg
cmp
adc
aaa
cld
daa
jg
dec
into
ljmp
push
push
add
pop
mov
lahf
inc
pusha
xchg
mov
add
idivl
add
nop
cmpsb
ret
inc
dec
cmp
or
mov
mov
fists
lds
mov
movsl
pop
xchg
xlat
fidivl
dec
push
or
mov
rolb
sub
imul
dec
stc
mov
jmp
enter
js
push
adc
popa
jmp
jae
pop
mov
stc
inc
stos
inc
test
sbb
mov
js
fsubl
mov
pop
mov
out
xor
inc
in
ds
cmp
or
sbb
xor
adcl
pop
enter
xchg
test
icebp
add
cmp
rolb
pop
mov
jb
sbb
decb
pop
sbb
dec
push
push
jns
es
test
fs
mov
or
cmc
std
mov
sbb
or
lods
ficoml
push
jp
cmpsb
push
push
mov
jl
lock
fsubr
sub
ret
mov
outsb
sbb
ret
das
repz
into
iret
loopne
std
jbe
cli
or
fstpt
mov
and
mov
push
addr16
call
lods
psrld
xor
xchg
adc
add
leave
dec
popa
sbb
int
mov
xor
dec
ss
mov
aad
call
or
cmp
sbb
pop
mov
ds
out
jne
or
and
stos
lds
inc
sub
or
inc
or
les
rclb
cwtl
in
jae
std
and
mov
mov
dec
xor
pop
sbb
call
push
add
sahf
in
mov
les
loopne
decb
pop
fcompl
mov
sti
pop
adc
cmp
pop
scas
inc
in
cmp
dec
xchg
lahf
cmp
pop
xchg
ljmp
push
adc
dec
pop
mov
jecxz
inc
in
fsubl
std
cltd
loopne
mov
jp
jge
sbb
lcall
mov
jbe
xor
fmul
lret
xor
pop
jae
jl
je
lds
test
adc
push
add
aas
inc
imul
or
mov
cmp
mov
clc
insl
jge
lcall
mov
in
adc
pop
mov
and
int
fwait
test
xlat
adc
cmp
sbb
dec
push
ret
sub
ljmp
add
and
xchg
push
mov
inc
adc
imul
inc
lret
mov
cmpsb
jle
fcmovb
push
cld
neg
pop
test
rcrl
fucompp
negb
adc
mul
cli
sub
add
push
ljmp
ljmp
in
in
sbb
cmp
gs
dec
outsb
jae
fdivl
jb
sbb
or
scas
xchg
cmp
sbb
fs
ljmp
je
scas
daa
mov
jp
xchg
push
rcrb
push
cwtl
fst
cmp
rclb
shrl
add
jo
cmp
call
push
imul
dec
aad
jns
xchg
pop
xchg
add
pop
and
mov
lahf
push
sbb
imul
jmp
pop
pusha
repnz
enter
mov
test
shrb
sub
add
xchg
push
xor
test
adcl
sub
jecxz
inc
or
xchg
add
xor
loope
adc
jl
inc
clc
lea
sub
xor
sarb
cmpsl
dec
inc
hlt
leave
clc
mov
adc
cmp
stc
cltd
mov
into
jns
fcos
dec
stos
jle
insb
lahf
sub
inc
js
popf
push
mov
in
ret
popf
jno
mov
mov
out
bound
pop
outsb
cmp
insl
inc
cltd
push
inc
out
fldpi
jl
mov
orb
pop
adc
ror
xchg
cmp
fwait
jl
dec
sahf
cld
xor
mov
negl
mov
push
cmp
mov
mov
mov
cmpsb
ficomps
bound
jge
stos
push
into
push
and
shrl
cmp
data16
dec
lcall
sub
pop
sub
aaa
sbb
mov
push
sti
cmova
mov
push
lcall
push
inc
mov
mov
clc
push
mov
push
int
ljmp
mov
pop
jp
jg
push
pop
test
jle
add
xor
or
stos
popf
or
mov
fistpl
call
aas
fstps
fcoms
jge
sbb
shrb
sub
dec
mov
rcrb
test
data16
cld
jne
jb
fiadds
shlb
stc
adc
cmp
cmp
jno
rclb
dec
jns
dec
xchg
sub
inc
stc
inc
or
lods
ljmp
cli
inc
xchg
sub
loop
arpl
rcrl
sahf
cmp
or
mov
iret
cmp
pop
sbb
into
jb
inc
xor
cmp
in
add
xor
lcall
pop
hlt
lea
shl
xchg
adc
xchg
negb
inc
imul
hlt
das
push
ret
lcall
and
cs
inc
out
and
sub
and
lret
xchg
and
sbb
fcmovne
sbb
inc
bnd
ficompl
lods
adcb
jmp
cli
pop
sub
pop
mov
inc
scas
insl
or
shl
or
mov
test
dec
loop
mov
adc
test
sub
fsubs
ret
cmp
aad
or
test
aaa
int3
sub
in
ret
cmp
dec
lock
adc
jecxz
inc
push
mov
incb
pop
daa
inc
xor
xor
repz
fdiv
xchg
aad
xchg
adc
insl
aaa
mov
scas
in
ds
aad
push
dec
int3
push
aaa
add
pop
mov
inc
imul
dec
mov
aad
ja
and
dec
test
cld
and
popf
scas
adc
gs
hlt
add
into
pop
pop
das
outsl
xlat
sub
jecxz
cltd
xor
mov
sbb
xorb
inc
jle
ret
sbb
xor
ja
test
ja
push
jb
inc
pushf
push
outsl
push
pop
or
dec
popf
inc
jg
mov
mov
in
jmp
inc
pop
mov
jg
sbb
dec
mov
adcb
cmp
jns
test
shlb
rorb
bswap
mov
std
mov
pop
push
cs
inc
xchg
jns
cltd
push
fcmove
callw
add
or
fidivl
dec
cmp
adc
mov
loope
add
loop
mov
ljmp
pop
lods
fucomip
or
sub
sub
addr16
adc
cmpsb
movsb
mov
or
mov
add
lahf
or
cld
cld
or
cmpsb
lea
xor
push
add
dec
in
icebp
push
dec
dec
vphaddudq
cmc
fisubs
bound
sub
mov
fsubrs
adc
outsl
mov
xor
and
imul
gs
outsb
sti
pushf
lcall
sbb
and
cmpsb
in
cmp
jmp
outsl
test
mov
popa
add
adc
imul
mov
jmp
adc
add
es
push
jns
js
mov
adc
out
cmpsb
dec
mov
movaps
xchg
cs
imul
or
cmp
cmpsb
loop
js
inc
adc
mov
fiadds
add
inc
gs
pop
aad
push
mov
xlat
push
xlat
ror
sub
out
xor
cmc
pop
fistpll
jge
xchg
out
or
aad
shll
ret
dec
xchg
xor
sub
das
push
inc
outsb
out
fildl
mov
bound
push
sub
and
lret
dec
jbe
push
or
xor
push
mov
mov
lock
adc
cmpb
outsl
mov
xor
and
adc
hlt
pop
ficoms
out
mov
in
lds
iret
xchg
inc
arpl
loop
into
inc
push
in
pop
jge
mov
or
add
aad
rolb
iret
jle
out
scas
add
aam
push
mov
lcall
call
push
lcall
int3
jo
shrl
or
lea
mov
lahf
das
int3
lea
add
cmp
adc
jae
adc
mov
ret
or
pop
cs
bound
test
push
xchg
jp
mov
inc
lea
mov
sbbl
sbb
lret
xchg
mov
das
cs
fnstenvs
mov
push
push
adc
push
dec
aaa
xor
push
mov
mov
shlb
loopne
aad
lock
enter
mov
adc
or
dec
shrl
bound
cmpsb
mov
mov
push
sub
int
dec
push
inc
cmpsb
mov
pop
add
mov
jbe
test
sub
cmpsl
xor
loope
cmc
pop
cmpsl
out
aaa
push
fstl
inc
jg
mov
ja
fildll
fistl
rcll
mov
dec
jp
jnp
inc
xchg
shl
inc
and
cmp
mov
fld1
dec
das
add
aam
mov
ja
mov
lods
and
test
mov
data16
std
mov
movsl
daa
shl
lods
and
add
into
dec
pop
movsb
icebp
xchg
js
mov
pop
dec
mov
outsl
pushf
popa
adc
addr16
popf
pop
jl
sub
xor
sub
cmp
movsb
hlt
cmpsl
push
cmp
and
aam
cli
insl
inc
stos
into
sbb
cmp
imul
fcoml
call
int
dec
sbb
fsubrs
insb
xor
hlt
ret
sbb
xlat
test
or
or
std
xor
mov
xchg
dec
xchg
pop
lods
int3
xor
lods
inc
xchg
sti
pop
loop
pop
adc
les
mov
aad
jo
mov
imul
xor
jg
fisttpl
push
ds
xchg
gs
pop
nop
movsb
icebp
pushf
outsl
aaa
in
dec
pop
mov
iret
jge
aaa
lcall
adc
cmp
push
loop
pop
out
addl
icebp
stos
dec
inc
std
outsl
iret
mov
fnstcw
add
xchg
sub
adcl
fs
mov
dec
movsb
sub
lea
repnz
sbb
cmpsb
shlb
lcall
mov
in
pusha
rcrb
add
mov
out
or
sub
xlat
rorb
int
mov
pop
and
call
jb
push
movl
popf
test
xor
call
xchg
jmp
fcmovne
pop
sbb
mov
ds
stos
addr16
and
cmp
pop
imul
mov
cmp
out
sbb
xorl
pop
mov
popa
fistl
mov
lret
inc
pop
inc
add
push
jno
insl
jae
cmpsb
pop
icebp
and
add
jne
sbb
test
sub
and
insl
cltd
jmp
fstpl
mov
les
stc
adc
jns
xor
outsl
dec
push
ret
mov
pop
sub
mov
jge
or
mov
xchg
or
popa
push
push
cmc
popf
outsl
pop
dec
aaa
lock
jmp
ja
fmull
inc
or
incb
dec
sarb
xor
pop
sub
sub
popa
sub
pop
pop
push
imul
mov
push
mov
xor
adc
adc
pop
ret
and
push
mov
jb
lahf
xlat
fists
mov
push
dec
add
jg
dec
icebp
sub
jl
movsl
inc
fsubrl
ljmp
rorb
psllq
inc
ja
mov
lret
cld
lods
cmpsb
stos
lcall
lds
xchg
cltd
in
mov
add
mov
inc
jne
add
fdivs
cmp
cmp
pop
int3
enter
push
ss
pop
fwait
int3
adc
sub
push
imul
inc
out
xchg
imul
and
fadds
outsb
loopne
roll
xor
sti
mov
mov
fwait
jecxz
xchg
outsb
sti
mov
cltd
nop
popf
sbb
jne
and
ljmp
sub
call
movq
fmul
xchg
xor
out
daa
adc
icebp
dec
sub
xor
gs
sub
or
pop
jecxz
pop
mov
cmp
insl
sbb
sti
loope
clc
imul
out
cld
jmp
inc
test
test
es
notl
mov
test
mov
xchg
mov
mov
loope
dec
les
lods
dec
jmp
push
iret
aas
sbb
mov
and
and
jecxz
mov
arpl
es
cmpsb
xchg
addl
inc
fmul
movsb
push
outsl
push
aam
mov
xor
les
scas
in
pop
ja
push
xchg
mov
xchg
push
mov
cs
arpl
push
adc
fildl
mov
or
add
std
inc
pop
xor
ja
mov
inc
inc
cmpsl
out
stos
mov
push
add
mov
pop
faddl
ret
movsb
lods
popa
shlb
jmp
cmpxchg
or
lods
jmp
pop
stos
push
insl
sbb
adc
xlat
and
inc
sub
xchg
stos
push
shrl
mov
pop
loop
sub
loop
xchg
daa
add
fcoml
rol
gs
mov
insl
mov
mov
inc
inc
mov
lea
lds
fmuls
push
aam
jg
jmp
ljmp
loope
xorb
mov
fcoms
leave
push
cmp
ja
jge
pop
shlb
dec
jge
int
sahf
ret
mov
and
mov
jmp
cmc
push
je
or
test
mov
or
mov
fisttpl
outsl
dec
repz
xchg
inc
inc
ja
loop
pop
mov
jge
adc
and
mov
sti
xor
dec
inc
clc
cmp
outsl
or
xchg
pop
leave
sub
push
xchg
xor
rorb
icebp
lret
sbb
fs
orb
in
jo
jmp
repz
insl
orl
inc
popf
fwait
in
pop
mov
xor
scas
incb
cli
sbb
xchg
push
xchg
inc
mov
sub
stc
and
stos
pusha
push
xchg
cmp
jmp
add
ja
cmp
jae
add
dec
outsb
data16
hlt
sub
addr16
std
pop
orb
insl
imul
push
cs
test
test
mov
inc
and
and
jo
in
jle
mov
sbb
pop
jecxz
ret
ss
lcall
into
sarb
imul
int3
dec
or
adcl
mov
pop
mov
adc
or
cs
roll
push
push
lcall
inc
stos
std
arpl
push
pusha
pusha
ja
pop
in
mov
dec
xchg
sub
jo
stos
add
push
cli
cmp
aaa
sahf
jg
jns
dec
int
jo
nop
fstl
cmp
lods
jmp
aas
mov
jmp
jmp
int
xlat
inc
mov
cmp
out
dec
psubusb
pushf
rorl
shrb
pop
sub
arpl
xor
ss
jno
imul
faddl
or
andl
mov
out
mov
loop
sub
ja
cs
aam
imul
sbb
insb
mov
movsl
dec
xchg
pop
test
pushf
inc
in
xor
faddl
or
sbb
insb
mov
movsl
dec
xchg
pop
test
pushf
inc
in
xor
faddl
or
sbb
insb
mov
movsl
dec
xchg
pop
test
pushf
inc
in
xor
fldl
or
mov
movsl
dec
xchg
pop
inc
lods
jne
iret
es
pushf
xor
ljmp
iret
out
ja
dec
int
loope
xchg
mov
inc
jle
dec
addr16
ja
pop
aas
adc
out
call
iret
out
imull
cmpsl
lahf
ret
outsl
inc
jg
dec
addr16
ja
push
pop
aaa
out
push
call
iret
dec
fcomip
scas
mov
lahf
scas
outsl
cwtl
pop
xor
cmp
das
push
push
jle
push
jno
mov
fwait
mov
data16
sbb
mov
mov
movsl
sahf
aaa
imul
lcall
je
xchg
mov
mov
cmc
xchg
cli
pop
mov
mov
aam
es
mov
enter
and
lret
add
cmp
lret
dec
ljmp
push
pop
daa
out
pop
inc
movsl
neg
dec
mov
lahf
dec
loop
cli
pop
mov
xor
call
adc
pop
aas
das
mov
jb
mov
fidivl
lret
ja
push
rclb
ss
enter
push
notb
rorb
out
dec
cmp
aas
mov
ja
jg
mov
dec
daa
lahf
mov
jmp
iret
arpl
std
scas
xchg
aaa
outsl
sarl
ja
aas
das
sub
out
pop
pop
scas
xchg
mov
cmpsb
movsb
mov
scas
repz
jmp
popf
shrb
sbb
dec
adc
push
cs
pop
push
mov
mov
scas
call
int
or
add
pop
adc
push
push
pop
arpl
pop
mov
mov
jecxz
mov
mov
inc
jg
dec
addr16
ja
pop
aas
pop
pop
aaa
out
call
iret
out
imull
cmpsl
lahf
mov
inc
jg
dec
addr16
ja
pop
aas
pop
pop
aaa
out
fiaddl
push
inc
lock
int
rclb
popa
cmp
adc
pop
and
dec
xor
clc
dec
out
jne
hlt
sub
int3
lea
mov
xchg
daa
xor
or
pop
sub
cli
mov
arpl
jecxz
pusha
xor
leave
rorl
jle
icebp
cmc
lds
push
fwait
outsb
das
jg
loope
push
ljmp
popa
sub
xchg
pushf
movsb
test
and
xchg
adc
xchg
and
fld
loope
mov
aam
xchg
je
ds
mov
rcrl
add
and
call
cmp
jno
test
push
outsb
push
rolb
pop
push
leave
scas
xor
pop
xor
repnz
dec
lock
push
lds
sti
sbb
out
lods
lock
mov
data16
cltd
dec
mov
in
sbb
in
test
mov
xlat
in
and
add
ret
add
scas
adc
testl
aad
ret
dec
xchg
out
and
imul
sbb
fistl
call
push
fildl
hlt
jmp
lahf
jb
sahf
or
inc
shll
cmp
jno
mov
mov
sbb
scas
pushf
mov
call
push
in
mov
fisubs
out
dec
or
inc
pop
cmp
pop
xchg
filds
inc
pop
test
cmp
xchg
aad
loop
inc
pop
inc
aad
xchg
enter
xlat
sbb
stc
mov
dec
xor
outsl
push
std
idiv
popa
xor
jl
pop
or
jb
push
jae
cmp
call
lods
aad
pop
adc
jl
cmp
lahf
daa
mov
inc
cmp
inc
subb
mov
mov
out
gs
push
sarl
js
jae
fstpl
int
lret
in
cltd
insl
subl
inc
shlb
mov
pop
mov
add
mov
push
mov
inc
pop
ror
push
pop
and
aam
sti
adc
push
push
sti
mov
fsubr
shll
dec
into
insl
out
cli
lea
mull
gs
jg
mov
cmp
push
dec
fsts
mov
les
or
idiv
jbe
shlb
jns
dec
push
lods
lock
sbb
pop
stc
mov
pop
loope
push
pusha
daa
fs
pop
outsl
fwait
pushf
cmp
ret
aas
mov
repz
into
mov
std
xchg
lock
icebp
leave
cmp
hlt
add
and
aas
sub
push
std
jecxz
popa
push
imul
out
cltd
fs
in
mov
mov
or
iret
pusha
leave
loopne
scas
outsb
adc
shl
test
icebp
fucompp
out
cltd
bound
inc
mov
push
push
inc
inc
xchg
dec
push
test
xor
jae
ret
jae
cmp
loope
push
add
in
int3
scas
xor
clc
dec
imul
mov
ret
pop
jae
mov
pop
lret
mov
add
jnp
pop
lea
insb
mov
or
dec
adc
add
in
aam
and
subl
test
test
les
mov
adc
scas
in
mov
push
mov
cmpsl
mov
mov
mov
push
mov
ret
rclb
inc
inc
jle
cmpsb
imul
in
mov
xor
mov
or
hlt
sarb
add
sbb
xchg
out
and
push
mov
enter
jp
sub
mov
jae
and
pop
jne
cmp
dec
mov
mov
jle
sub
jns
rcrl
in
cvttps2pi
mov
or
int
pop
dec
adc
adc
ucomiss
xor
push
mov
cs
mov
stos
fidivs
leave
fistps
adc
ret
sbb
clc
nop
pop
dec
push
cmp
xchg
add
pop
int3
ljmp
and
xchg
setg
imul
xor
xchg
jge
ret
out
cmpsb
jmp
dec
inc
orb
sti
addl
ret
inc
mov
cmp
insb
cld
rcll
lds
dec
fadds
in
add
add
sbb
rclb
test
or
mov
dec
jle
das
adc
stos
lret
xor
movsb
dec
push
add
dec
add
mov
mov
inc
movsl
ret
or
roll
stos
mov
fcmove
addr16
cmp
out
xor
lret
hlt
jae
sub
xor
hlt
inc
jno
sahf
sub
sahf
inc
stos
loop
in
or
dec
mov
mov
pop
push
pop
les
or
push
fidivs
lcall
fadd
loope
xchg
jae
insb
into
push
push
mov
ja
out
cmp
xchg
and
int
xor
pop
std
fmulp
pop
test
mov
popa
sub
test
aad
stc
xlat
loopne
outsb
add
sub
call
repnz
movl
leave
stos
mov
jo
test
adc
in
lea
and
mov
test
xor
repz
mov
arpl
mov
cltd
adc
fstpt
jmp
outsb
hlt
mov
xor
or
and
inc
daa
pop
jo
push
adc
in
inc
pop
ljmp
push
adc
sub
xlat
out
les
dec
push
gs
cltd
jle
hlt
or
les
pop
popf
decb
jo
adc
mov
cmp
cwtl
rolb
jmp
add
cmc
bound
lret
sar
shl
test
xor
incl
lret
or
push
sbb
mov
mov
inc
sub
mov
xchg
inc
outsl
jno
loopne
pop
rorl
or
pop
fs
out
sub
jecxz
insl
pop
mov
dec
dec
data16
mov
adc
jl
fcmovnbe
sti
cmc
dec
jno
stos
adc
out
cmp
outsb
xchg
insl
popf
inc
cmp
sbb
adc
ret
pop
pushw
aam
pop
and
xchg
jb
adc
push
xchg
pop
popf
xor
roll
push
mov
fsqrt
sub
leave
push
dec
ret
adc
cs
fnstcw
nop
xchg
pop
repnz
arpl
in
dec
dec
fcomps
repz
rcll
cmp
cmp
mov
stc
arpl
aad
add
frstor
test
sarb
leave
adc
scas
out
movsb
xchg
rep
test
mov
cmpsl
xor
mov
lcall
cwtl
jne
fucomip
or
inc
cmp
imul
mov
scas
dec
or
xor
bound
in
ret
or
leave
jg
mov
ret
cmp
or
jg
inc
imul
pushf
std
or
popa
xor
push
jecxz
popa
inc
stos
and
enter
into
pop
adc
pop
mov
sub
inc
out
addb
sar
ror
sbb
mov
inc
mov
push
sbb
mov
cmp
xlat
sub
inc
icebp
je
lret
add
jge
jb
stos
jmp
nop
mov
hlt
mov
xchg
add
jbe
icebp
out
repnz
lea
or
int
dec
arpl
jnp
icebp
add
push
loope
adc
adc
and
pusha
mov
adc
arpl
mov
xchg
rol
test
push
inc
shlb
adc
ret
sbb
jg
lods
rcl
lret
dec
xchg
adc
icebp
adcl
fldl2t
xor
pop
in
sub
or
inc
push
and
or
add
lds
sub
cmp
test
gs
lret
stos
pop
shrb
adc
insb
cli
mov
sbb
push
lret
fimuls
dec
jb
fisubrl
push
xchg
gs
iret
repnz
inc
push
arpl
and
mov
sahf
call
rol
lods
data16
es
adc
mov
jg
stos
sbb
pop
dec
inc
fisubrs
sahf
pop
pop
neg
cs
jbe
push
ret
shll
jb
mov
dec
cmp
pop
ja
sub
sub
nop
leave
int3
jg
inc
mov
inc
movsl
scas
cmpsl
es
jo
and
testl
push
pushf
xor
andb
xor
sub
mov
dec
stc
inc
les
call
sub
ss
adc
mov
mov
jb
cmp
adc
push
lahf
int
sub
inc
adc
adc
je
mov
xchg
push
push
dec
pop
rcl
dec
psubb
pop
xor
pop
xchg
push
nop
fldenv
cmpsb
push
dec
imul
mov
out
pop
sbb
mov
jae
addr16
or
loope
movsb
inc
shlb
dec
push
stos
xchg
jnp
shr
movsb
popf
pop
or
jp
sti
xchg
mov
cmp
adcl
rep
mov
cld
dec
mov
mov
push
pop
subb
push
xchg
jb
mov
xchg
push
cmp
and
mov
lret
mov
icebp
cli
xchg
xchg
dec
dec
jne
push
cmp
pop
scas
lock
cmc
pusha
mov
dec
add
adc
cs
divl
sahf
mov
ss
lcall
in
imul
hlt
mov
sub
push
outsb
push
mov
stos
pushf
mov
cld
in
test
push
stc
shrb
psrlw
mov
sbbb
subl
jbe
mov
imul
inc
loopne
stos
setb
xor
mov
dec
dec
mov
sub
jp
adc
leave
ss
xor
ljmp
adc
fldcw
push
and
inc
faddl
mov
int3
mov
fstpl
pop
mov
in
rcrb
jb
test
shlw
mov
jno
outsb
stc
sub
shlb
sub
repz
adc
mov
call
add
enter
scas
push
frstor
rorl
dec
sbb
or
shl
or
or
scas
cmp
mov
mov
and
adc
cltd
adc
fsub
test
mov
in
mov
sub
bound
ret
lahf
jbe
cld
mov
jo
in
mov
dec
pop
movsb
mov
aam
xor
test
insl
xor
dec
lea
ret
outsb
fsubl
rcrb
or
sti
sbb
je
aam
in
inc
push
dec
addb
ret
jmp
pop
mov
adc
jo
pop
cmpsl
repz
and
adc
in
adc
in
pusha
nop
push
sbb
ljmp
push
out
adc
dec
mov
js
mov
xchg
out
push
lods
or
fs
movsb
test
mov
les
gs
xor
filds
xchg
pop
popa
push
sub
call
adc
shrb
std
std
jbe
hlt
lcall
pusha
push
mov
xor
xchg
inc
or
sbb
roll
out
out
dec
add
cltd
adc
shll
add
call
sbb
test
aad
fstpl
lret
dec
cli
jnp
mov
icebp
imul
mov
inc
loopne
sub
sbb
imul
es
test
mov
mov
xor
fsubl
enter
mov
mov
fwait
popa
mov
add
push
inc
lock
in
mov
lahf
cli
xchg
ss
xor
rcll
sub
push
mov
test
insb
pushf
lcall
rclb
cmp
xor
int
jg
adc
cmp
cmp
fildl
lea
in
xor
loop
enter
imul
imul
pop
mov
dec
ja
xchg
mov
jp
xchg
pusha
ds
aas
jmp
inc
fcompp
or
xor
test
xchg
mov
shlb
icebp
cli
cmpsb
jg
xchg
mov
outsb
addr16
jmp
lret
xor
cmpsl
dec
dec
test
sub
cmp
jb
inc
jnp
mov
inc
xor
mov
xor
cmp
inc
ljmp
cmp
cs
cltd
clc
adc
pop
ror
imul
jno
es
dec
test
push
in
aaa
outsb
cs
data16
fldl
lock
and
cmc
test
push
adc
inc
test
xchg
adc
shrl
aad
inc
enter
movsl
bound
jg
mov
fnstsw
lock
stos
sahf
cmp
repz
cltd
shlb
fistps
test
mov
jl
movsl
cli
sub
sbb
mov
out
cmp
icebp
jmp
ds
sarl
lock
cmp
mov
adc
fdivrs
add
pop
pusha
shll
aas
pop
cmp
sub
icebp
sub
ja
aad
inc
jno
xorb
mov
jp
test
aaa
scas
pop
wbinvd
cmp
jb
xchg
sahf
jbe
stos
jp
push
inc
loop
adc
aam
jns
mov
int3
shl
stc
jecxz
and
xlat
leave
add
mov
xor
cmp
roll
hlt
push
imul
pop
xchg
inc
iret
inc
js
jne
dec
cltd
fsubrl
into
cmp
sbb
push
mov
cld
lret
dec
int3
or
pop
mov
add
sbb
cmp
sbb
test
sbb
fdivrs
mov
loopew
and
insb
push
in
sub
sbb
mov
adc
daa
ljmp
icebp
adc
mov
int
idivl
test
movq
mov
cwtl
push
jg
pusha
pushf
xchg
bound
sbb
aaa
mov
roll
cmp
loope
jl
jae
and
jo
lret
jg
pop
loope
sahf
mov
xchg
mov
sbb
lods
sub
pop
test
jmp
fsubrl
jo
out
dec
sub
lret
adc
lea
out
sub
int
push
outsb
addb
movsl
cltd
mov
scas
xchg
xchg
loope
xchg
mov
pop
jbe
sahf
dec
jge
aas
cmpsl
mov
pop
gs
jns
shlb
outsb
mov
jp
xchg
lea
or
sbb
or
movsb
scas
and
mov
jl
ret
adc
ret
xor
adc
stc
lret
test
push
pop
lahf
mov
add
leave
jns
andl
js
xchg
lods
jno
je
dec
xchg
or
xchg
psraw
out
dec
adc
insl
outsb
test
jle
sbb
add
jp
xchg
push
rcrl
mov
xor
fstpl
iret
daa
cmp
jp
out
mov
mov
outsl
mov
pop
mov
test
inc
fimull
add
add
enter
ror
je
int
jae
rclb
xchg
bound
into
in
xchg
cmp
imul
push
sbb
sub
mov
fs
imul
and
xor
adc
cld
pop
jecxz
jge
mov
scas
mov
fidivs
test
ljmp
fdivrs
lret
addr16
sub
xor
jne
mov
xor
jae
mov
mov
test
mov
cmp
insb
out
sub
dec
adc
loop
sbb
cmpsb
lea
scas
push
sbb
sub
inc
ljmp
bound
jl
inc
sub
imul
mov
dec
div
mov
adc
mov
popaw
mov
aam
mov
cmp
imul
sbb
jne
into
rorb
addl
addr16
push
mov
jb
fmulp
rcr
cmpl
ret
xlat
loopne
icebp
lret
ret
mov
fs
outsl
iret
lcall
cmpsl
in
jb
pushf
sbb
xchg
test
ret
scas
mov
lahf
mov
orl
das
pusha
mov
stc
and
xchg
jge
pop
mov
sub
adc
cmp
jge
xor
subb
movsb
inc
inc
lcall
mov
dec
shrb
mov
fstl
test
jnp
pop
push
or
jge
aaa
push
inc
dec
loopne
ret
mov
pop
aam
out
pop
repz
pop
arpl
push
int
xchg
dec
mov
hlt
pop
mov
xor
fdivl
cmp
sar
cmp
jbe
out
xchg
push
cmc
push
mov
cmp
loopne
testb
cmp
sahf
clc
add
push
and
mov
push
or
and
outsl
cmp
add
out
xchg
stos
or
jl
repz
cmc
mov
outsl
sub
lea
push
stos
ret
push
and
and
shr
lret
pop
mov
xor
sbb
lret
cwtl
and
pop
imul
dec
cmp
jno
dec
push
jbe
ljmp
sbb
lret
test
in
inc
sbb
cli
je
add
lds
push
lretw
outsb
shrl
in
inc
and
push
xor
filds
stos
cltd
xchg
pushf
or
sbb
push
fwait
mov
add
pusha
xor
insl
icebp
push
aad
pusha
icebp
mov
push
or
mov
mov
add
mov
mov
rcrl
in
jl
pop
addr16
add
or
cwtl
mov
push
inc
xor
xlat
fildll
xchg
es
int
popa
xchg
out
mov
or
lods
lcall
add
cmp
add
pop
push
mov
pop
jge
inc
mov
mov
xchg
jge
hlt
loop
jno
shr
mov
and
repnz
jns
fwait
jno
in
mov
push
mov
jge
mov
data16
xchg
outsb
jns
scas
xchg
test
lods
pop
cmpsl
fwait
cmpsl
inc
jecxz
pop
outsb
jb
xchg
inc
iret
jmp
or
dec
mov
and
add
lret
jb
mov
in
xchg
adcb
adc
imul
ffreep
cwtl
push
popf
lahf
cmp
aas
pop
push
cmp
push
jle
mov
mov
test
pushf
push
cmpsl
into
push
loop,pn
rol
adcl
pop
jecxz
cmc
dec
fnstenv
bound
cs
stc
adc
lods
clc
cmc
lods
jge
jecxz
jp
jno
pushl
lahf
outsb
adc
mov
mov
dec
in
aaa
or
dec
push
es
popa
inc
pop
movb
push
inc
cmp
push
inc
pop
wrmsr
xchg
mov
std
mov
insb
jmp
insb
push
sbb
mov
sub
fwait
sbb
cmp
pop
mov
dec
jo
pusha
jo
test
out
cs
je
mov
add
enter
ds
cmp
adc
cwtl
popf
cmp
mov
lea
mov
sbb
add
mov
test
cmpsb
leave
sub
stos
dec
jp
vdivss
cwtl
iret
jle
and
jno
sbb
mov
es
or
xor
aaa
pop
rorb
insl
push
jmp
fs
lds
imul
lret
sub
mov
jb
and
push
rcrl
ljmp
out
xchg
clc
cmp
movsb
mov
mov
in
push
and
xchg
in
push
lods
sbb
cmp
adc
mov
test
daa
push
out
popa
jae
mov
mov
gs
sub
cmp
xor
sahf
int
pop
mov
adc
cmp
jne
popa
mov
mov
hlt
sub
jle
aam
mov
mov
leave
icebp
push
mov
jg
cmpsb
repnz
enter
jge
cmc
rolb
sbb
and
fdivs
aam
inc
or
scas
pop
jne
add
outsb
jo,pt
adc
inc
dec
mov
jmp
sub
sbb
mov
push
xchg
out
adc
dec
cmpsl
mov
pop
insl
add
js
xchg
push
mov
movsl
mov
mov
xor
sahf
dec
or
jne
je
call
xchg
dec
inc
and
jmp
push
pop
icebp
ja
inc
sbb
jle
pushf
fmul
insl
pop
cmp
sbb
xchg
or
or
adc
pop
loopne
pop
repz
jb
xchg
cs
inc
cmpsl
mov
sahf
xor
popf
lds
ja
data16
and
std
and
mov
xor
mov
push
xchg
js
in
push
imul
mov
pushf
xchg
cmc
insl
adc
inc
popf
jns
cs
mov
iret
pusha
and
xchg
mov
xor
in
push
and
lcall
test
cmp
push
sbb
inc
adc
sub
decl
push
les
jne
pop
mov
test
adc
mov
lds
xor
push
xchg
sub
mov
into
aad
pop
fptan
shrl
leave
xchg
out
and
fcomip
scas
xchg
mov
inc
jg
dec
addr16
ja
pop
aas
pop
pop
aaa
out
call
iret
out
imull
cmpsl
lahf
mov
inc
jg
dec
addr16
ja
pop
aas
pop
pop
aaa
out
jg
dec
lahf
fcomip
das
xchg
mov
lahf
jg
dec
addr16
ja
pop
aas
pop
sysret
pop
aaa
out
call
iret
out
imulb
daa
lahf
mov
mov
pop
add
dec
call
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
mov
mov
inc
xchg
xor
jp
push
add
popa
ss
push
inc
push
mov
mov
repz
jecxz
roll
and
or
inc
push
out
push
inc
push
stos
mov
iret
ljmp
mov
test
dec
dec
xor
jae
or
adc
int3
lahf
xchg
mov
pop
mov
sbb
mov
fdivr
lcall
or
mov
aas
sub
sub
push
push
mov
or
and
mov
jno
cltd
lds
pop
repnz
jecxz
mov
cli
mov
jae
lahf
ss
clc
inc
push
mov
mov
pop
cmpsl
out
xchg
jbe
faddp
imul
jne
leave
fmuls
pop
push
cmp
or
sti
dec
sahf
xor
adc
repz
mov
mov
pop
jmp
jl
or
loope
and
bound
push
inc
ss
inc
push
stc
inc
push
jp
mov
int3
in
repz
lahf
fimull
or
dec
imul
and
inc
jb
add
test
xlat
xor
fcomps
cmovg
pusha
adc
jae
push
and
jnp,pn
sahf
ret
mov
rcrl
loop
cli
jo
inc
pop
adc
inc
adc
and
cmpsl
iret
xchg
jmp
jecxz
roll
and
inc
add
arpl
push
push
inc
push
mov
mov
repz
jecxz
roll
and
inc
add
arpl
push
push
inc
push
mov
mov
out
lds
cli
fdivr
cltd
cmp
xlat
adc
inc
sub
mov
adc
push
ljmp
adc
lcall
lods
or
cmp
lret
pusha
std
inc
cmp
test
push
enter
xor
loopne
xor
wrmsr
lahf
popf
mov
inc
mov
movsb
jp
mov
add
xor
scas
ret
addr16
mov
pop
sbb
test
btr
dec
lahf
iret
and
fsts
out
rcll
lret
xrelease
outsl
pop
aaa
cltd
dec
dec
cwtl
call
cmpsl
call
in
pushf
test
sarb
pop
out
aaa
lods
test
mov
sbb
jl
xchg
push
push
mov
jns
jbe
cmpsb
pop
and
int
fstpt
jns
rcrl
and
jp
push
outsb
call
fucomp
sbb
xchg
push
add
icebp
mov
data16
jecxz
sub
mov
lret
mov
ficoml
lds
sbb
jae
dec
pop
enter
xor
ret
popa
leave
or
push
test
mov
lcall
and
out
pop
push
jecxz
xor
and
shll
js
shrl
fwait
shrb
clc
inc
jae
orb
mov
xchg
aas
inc
fld
cmpsb
inc
xor
ret
dec
iret
lock
push
sub
push
shrl
add
and
or
faddp
pop
je
sahf
or
nop
int
sti
inc
pop
rcl
or
lds
ret
sti
jno
iret
cmp
ds
addl
out
rcl
test
inc
mov
dec
arpl
jae
push
out
and
ja
cld
aas
lea
outsb
ds
popa
pop
outsb
inc
in
ljmp
jb
or
adc
adc
lret
mov
int
mov
cmp
dec
out
out
fwait
divps
adc
incl
idiv
jmp
sub
ja
add
pop
xchg
imul
stc
pop
lret
cmp
xor
pop
hlt
adc
xchg
jge
pop
adc
loope
stc
sti
push
sar
or
inc
es
xchg
mov
or
sub
ljmp
xor
pop
scas
insb
pushf
adcb
lcall
push
addl
sahf
mov
ret
add
xchg
add
xchg
pusha
lcall
mov
ret
dec
pop
sub
push
js
iret
push
inc
mov
loopne
xchg
xor
add
lahf
xlat
sbb
push
bound
dec
mov
mov
mov
pop
cltd
pop
out
test
adc
push
mov
pop
dec
lods
sbb
push
adc
loope
or
lret
xor
jle
rorb
lret
addr16
ret
adc
lret
stc
sub
lret
sub
outsb
ss
inc
movsl
lds
push
clc
xor
lds
sub
xor
adc
fidivrs
js
data16
shlb
mov
mov
mov
and
push
hlt
pop
or
inc
inc
arpl
lret
ret
sti
sbb
adc
jl
jl
ficoms
ja,pn
in
xchg
scas
inc
nop
add
icebp
lahf
ret
pop
fs
pop
ss
inc
imul
cmp
cmp
xorl
imul
je
mov
jmp
cmpsl
inc
popa
adc
popl
iret
das
adc
sub
loop
out
imul
loope
stos
xorb
pop
sti
add
push
inc
cltd
add
ljmp
clc
dec
pop
movb
mov
lcall
and
into
js
xchg
jae
mov
stc
fwait
stc
ret
cs
inc
es
push
or
ret
inc
sbb
mov
es
test
jmp
push
mov
cmpsl
shl
outsl
mov
dec
imul
pop
sti
jb
rorl
repz
and
jp
sbb
idivl
jmp
sub
imul
and
sub
mov
jnp
arpl
mov
les
cmp
sahf
pop
dec
push
inc
mov
test
push
cmp
mov
fisttpl
fistps
jle
imul
and
jno
dec
jecxz
adc
adc
mov
and
push
popf
test
adc
xor
jno
in
test
xchg
push
cmp
lods
ljmp
or
ljmp
xor
leave
ljmp
xor
loop
sub
imul
mov
popf
aaa
outsb
movsl
scas
lret
lds
lcall
jbe
and
cwtl
sbb
inc
pop
jnp
xor
mov
js
test
int3
xor
daa
pushf
addb
pop
outsb
and
lret
cmp
mov
orl
dec
mov
test
stos
gs
fwait
xor
push
mov
addb
aaa
stos
loope
cmp
insl
scas
mov
imul
mov
lea
daa
stos
in
push
mov
or
sbb
lods
push
sub
cmp
jmp
insl
testb
jp
lcall
inc
jne
dec
mov
sbb
jb
xchg
mov
pop
cli
cmpsb
mov
xchg
nop
push
out
mov
fs
adc
xor
sti
xor
iret
add
add
movsb
das
enter
dec
mov
inc
psadbw
push
add
add
dec
repnz
popa
jb
pop
sbb
nop
test
mull
mov
imul
fcmove
imul
jp
adc
dec
add
adc
in
cwtl
imul
add
cltd
out
push
jge
cmc
hlt
adc
divb
mov
lret
subl
dec
popf
xor
push
jno
ja
xchg
outsb
out
mov
or
aas
mov
out
xor
pop
lret
scas
pop
xchg
in
mov
dec
jl
push
dec
sub
mov
lret
enter
movsb
ret
inc
fstpl
ret
mov
sbb
inc
mov
cmp
sbb
xchg
and
mov
js
outsb
leave
in
mov
mov
xor
sbb
lret
pop
ret
jae
or
sbb
xor
or
xlat
push
and
ljmp
inc
loopne
movsl
sbb
test
iret
push
cmpxchg
jg
lods
pop
and
mov
inc
arpl
ffreep
dec
xor
and
push
xor
adc
mov
ja
adc
mov
mov
pop
int3
add
add
hlt
mov
repnz
leave
fdiv
push
addr16
stc
stc
mov
adc
int3
ret
int
sbb
mov
xchg
xchg
stc
rorl
stos
aas
mov
mov
add
test
dec
cs
mov
xchg
out
xor
adc
loopne
insl
xchg
ljmp
add
xchg
lret
push
jno
pop
sbbb
jnp
inc
test
enter
mov
mov
fisubrs
lds
loop
popf
inc
sub
cmp
lea
test
jmp
sbb
dec
mov
jmp
push
mov
xor
adc
dec
push
stos
dec
sarl
imul
mov
scas
les
pop
xlat
lcall
out
inc
add
rorl
inc
movsl
iret
push
out
cmp
jge
jecxz
je
scas
pop
lret
push
push
inc
jle
fwait
dec
in
add
dec
das
push
outsl
imul
jle
scas
sti
mov
mov
xchg
stos
scas
xchg
stc
mov
pop
mov
test
pop
loopne
xorb
mov
stos
popa
or
sbb
push
enter
xchg
dec
jnp
ljmp
xor
pop
vmovntps
push
push
add
lret
test
adc
pop
leave
test
outsb
out
pusha
or
xchg
or
aas
mov
mov
mov
push
into
mov
cmpsl
pop
inc
andl
shlb
mov
outsb
push
stc
call
jae
push
inc
sub
insl
outsb
push
pop
std
leave
das
and
xchg
mov
sub
and
cmp
inc
sub
push
sub
cmp
cmpsl
pop
out
ljmp
xor
loopne
jae
jne
sub
pop
sti
push
ss
lcall
in
mov
cs
outsl
push
mov
push
pop
shll
ja
std
xchg
sbb
rcrl
sub
adc
and
fisubs
lahf
cmpxchg8b
lret
add
and
mov
inc
rol
sar
arpl
push
pushf
jmp
dec
int3
sub
and
dec
push
mov
and
jno
jne
mov
inc
std
cmpsl
bound
inc
mov
movsb
popa
je
int3
stc
inc
fsub
push
jl
divl
inc
mov
decl
xor
dec
lods
fwait
push
inc
hlt
inc
aas
mov
mov
add
fadd
out
inc
pop
dec
call
cmpsb
xor
jne
stc
lds
pop
std
or
push
cmp
lea
fidivs
mov
pop
sbb
ja
add
ror
sub
stc
inc
lea
push
add
lds
mov
cmpsb
fsub
popf
loopne
or
pop
orb
mov
mov
out
cli
and
fucomp
leave
lea
loope
adc
pusha
test
popf
adc
jecxz
jl
or
pop
imul
addr16
lcall
mov
je
je
out
fdiv
pop
dec
push
cwtl
out
scas
lret
out
aaa
add
outsl
dec
mov
in
or
or
mov
mov
sti
pop
pop
roll
aaa
cs
adc
sbb
fdivr
xchg
mov
and
inc
ror
push
test
cmp
cmpsb
in
fadds
pop
test
cmp
mov
mov
in
test
cwtl
dec
rolb
pop
sub
sbb
dec
sbbb
mov
bound
in
lahf
jge
cld
movl
aas
mov
cltd
adc
leave
gs
mov
incb
sub
sti
rcll
movsb
cmp
jb
add
arpl
rcr
adc
es
scas
cmp
es
and
nop
cmp
xchg
pop
es
pusha
jo
inc
testl
pop
loopne
push
and
add
and
mov
enter
or
leave
or
fidivs
fadd
out
pop
adc
mov
ss
pop
dec
enter
enter
fdivr
mov
sbb
add
lcall
push
push
dec
jne
or
movsb
sub
cmpsl
xlat
lcall
or
loope
fldcw
lcall
filds
cli
fstpt
lds
jbe
sub
mov
ds
ljmp
sub
mov
add
ja
xchg
jg
cli
mov
sub
adc
cmpsl
mov
test
ret
pop
mov
lds
lock
or
mov
add
mov
push
fs
jns
das
dec
enter
push
lds
sbb
adc
insl
mov
loope
in
into
and
or
fwait
and
subb
iret
insb
push
fimull
test
dec
out
lret
in
cmp
add
xchg
push
sub
mov
dec
pop
xor
pop
and
enter
mov
dec
sub
sub
xor
icebp
ret
popf
scas
jnp
inc
outsl
aad
pop
or
mov
aam
outsl
out
inc
adc
call
dec
dec
je
xlat
out
pop
mov
std
jo
push
shll
mov
and
push
or
push
push
and
fnstsw
mov
sti
xchg
and
xor
mov
ja
cmp
add
loopne
iret
inc
xor
inc
stc
or
cli
add
das
or
aad
fldcw
adc
and
insl
dec
push
in
aaa
fnstsw
xor
xor
ss
xchg
out
mov
push
mov
dec
jb
push
or
sbb
push
lahf
and
adc
dec
sub
push
push
push
and
shlb
cmp
xor
jecxz
jnp
xchg
cmc
fisttps
xor
push
pop
or
ja
push
sub
cmp
and
sbb
mov
fdivl
push
mov
cmp
xor
add
jge
push
mov
addl
jecxz
or
cmc
push
adc
iret
pop
xor
call
cltd
push
lds
stc
insb
sub
lcall
into
ljmp
cmpsl
enter
push
lea
fsts
testb
in
bound
xor
js
popf
leave
scas
fs
rcl
push
push
add
lods
mull
out
aaa
mov
lods
pop
push
mov
xchg
cmp
pop
cmp
inc
adc
push
mov
pop
mov
and
das
sub
mov
cmp
pop
sbb
pushf
push
push
loop
xchg
mov
stos
jns
in
shl
aas
stos
std
push
pop
outsl
mov
lret
mov
cli
fldl
cmp
mov
in
mov
fisttps
aam
scas
mov
cmpb
inc
fs
xchg
push
mov
xchg
hlt
fs
xor
iret
mov
ret
sbb
xchg
lock
fldt
xchg
outsb
adc
xor
or
push
sbb
xchg
lahf
iret
fistl
add
out
andb
aad
lret
cwtl
jo
sub
outsl
andb
lret
add
into
insl
imul
inc
push
jb
inc
push
jno
sbb
repnz
mov
mov
scas
fwait
push
cmc
fdivs
bound
mov
pop
fs
inc
xchg
fisubs
mov
sbb
xchg
dec
mov
outsb
dec
orl
jno
ret
adc
arpl
shl
cmpsl
mov
push
vorps
mulb
fildl
mov
bound
decb
loopne
cmpsb
cmpsb
mov
int
popa
sub
in
jbe
pop
les
movsb
jl
inc
xchg
sbb
sub
xchg
testl
lcall
push
mov
xchg
mov
out
push
or
dec
cmp
inc
or
dec
mov
inc
lret
mov
icebp
pop
push
adc
push
rorl
jecxz
sbbb
ret
call
insb
andl
jle
ret
jmp
pop
mov
adcb
out
fxam
shlb
test
int
cmpsb
fcomps
dec
mov
mov
dec
movsb
jns
pop
mov
mov
dec
push
and
push
adc
sarl
or
xlat
jge
mov
hlt
pop
adc
xchg
adc
or
cld
mov
xchg
aas
mov
adc
insb
inc
sub
lods
jbe
push
inc
pop
pop
rcrb
stos
sub
lahf
data16
repnz
bound
cmp
aas
jns
sub
and
das
in
xchg
sub
icebp
xor
or
mov
push
imul
sti
pop
jne
das
mov
scas
scas
shll
or
dec
mov
push
push
sbb
imul
jns
insb
sahf
mov
mov
xor
jecxz
shrb
sub
mov
fstp
std
stc
xchg
mov
inc
sbb
scas
nop
inc
pop
aas
outsl
mov
dec
xchg
cmp
movsl
sub
jnp
fnstenv
icebp
lret
sbb
inc
sahf
mov
icebp
sub
iret
jne
and
sbb
aam
and
cs
dec
inc
mov
int
xor
cmp
adc
psubusb
jne
xchg
and
fstps
js
outsb
jnp
sahf
lret
add
pop
sbb
aad
in
das
push
add
iret
and
out
je
decl
mov
iret
cmp
popa
xchg
mov
imul
sbb
dec
or
mov
dec
rol
xor
and
mov
dec
xor
in
push
xlat
sbb
mov
insb
sbb
jo
push
out
add
gs
in
jo
xchg
jle
lea
mov
jge
enter
sbb
fnstsw
out
mov
incl
iret
mov
call
addr16
jb
mov
adc
push
fnstsw
xchg
xchg
sbb
sahf
pop
pop
mov
mov
das
iret
mov
fstpt
xchg
mov
add
mov
pop
es
out
inc
shll
bsr
jo
sub
int3
xchg
shll
sub
fstpl
mov
jp
sbb
and
filds
inc
pop
insl
mov
call
sbb
dec
cmp
mov
insb
icebp
push
negl
les
test
cmp
pop
testl
mov
stc
sub
jns
xchg
cltd
mov
or
testl
test
out
push
push
out
xchg
ja
pop
ret
push
sub
addb
cmp
dec
mov
mov
and
clc
test
cmp
into
scas
or
and
fsubrl
popf
movsb
sbb
jp
aas
repz
sbb
ret
sub
scas
cmp
pop
dec
sti
and
mov
push
xchg
fildl
jle
lods
push
pop
jecxz
pop
rorl
lcall
xor
mov
stos
jb
or
out
scas
icebp
cmp
loopne
jp
movsl
test
pop
push
mov
pop
sbb
sbb
lods
shrl
pop
inc
stos
cli
or
pushf
xchg
fwait
inc
loop
mov
mov
mov
scas
push
loope
push
loop
or
dec
pusha
lcall
inc
lahf
xchg
or
lret
push
cli
sbb
adc
call
jno
in
jno
or
mov
sub
stc
daa
jae
movsl
sbb
mov
cmp
jno
sub
fidivl
adc
loope
push
inc
or
out
ss
jp
jno
ret
fsubs
lea
xchg
test
dec
mov
sub
mov
jmp
movsl
sbb
testb
inc
test
outsl
mov
or
subb
push
pop
sarb
mov
es
out
rorb
add
push
sub
pop
and
push
jg
fdivl
pop
dec
test
mov
and
jge
mov
mov
and
gs
in
shll
add
push
enter
jbe
sbb
xlat
or
jne
std
ss
movsb
imul
sbb
inc
hlt
cmpsl
xor
dec
daa
add
mov
imul
mov
dec
out
xchg
jns
sub
stos
cmp
cmp
and
je
cltd
loope
push
loope
xchg
or
icebp
sbb
mov
dec
in
lods
adc
add
adc
pop
cmp
lahf
adc
dec
push
push
pop
mov
subb
leave
out
mov
dec
and
pop
or
xchg
mov
inc
mov
frndint
pop
xor
das
push
test
or
fsts
inc
xchg
loop
lods
adc
loop
std
mov
aad
jae
inc
stos
xchg
inc
hlt
sarl
xchg
and
scas
mov
xlat
jno
adc
mov
jne
jnp
call
inc
mov
cld
xchg
insl
xchg
jp
pop
fwait
pop
insb
sbbb
std
data16
ljmp
addr16
adc
mov
pop
inc
cmc
jecxz
cli
into
test
sub
sub
stos
clc
cmp
xchg
cmpsl
ljmp
fldcw
pop
outsb
cmpsl
andl
enter
ret
shrl
mov
mulb
ret
push
dec
dec
mov
fs
jecxz
mov
xlat
lock
js
in
fisttpll
or
mov
inc
fldl2e
fcomp
stos
mov
push
mov
insb
in
and
push
push
dec
inc
subl
mov
out
fstpt
add
jb
ret
xchg
in
flds
mov
push
jge
mov
shlb
cmp
jp
cmp
lret
cld
in
repz
push
or
mov
addr16
or
sti
sarl
and
loopne
xor
mov
mov
test
insb
pop
inc
jecxz
adc
stos
cmc
jbe
xchg
mull
fxtract
orl
fsubrl
out
jge
hlt
inc
dec
mov
push
mov
push
out
in
sbb
pop
push
punpckhbw
out
sub
xorl
add
ds
sahf
xchg
shll
scas
pop
out
xor
cmpb
into
enter
daa
ret
andb
mov
cltd
jns
fldcw
fiaddl
mov
in
loopne
jmp
in
mov
stos
jmp
cmp
fwait
ljmp
mov
add
adc
jbe
mov
enter
and
outsl
dec
sti
in
ds
out
cmp
xor
std
dec
pop
in
inc
inc
popa
icebp
jbe,pt
or
or
jge
notb
insl
sbbb
mov
or
xchg
into
sbb
jb,pn
adc
negb
cmpsb
jecxz
roll
and
inc
add
arpl
push
push
inc
push
mov
mov
repz
jecxz
roll
and
inc
add
arpl
push
push
inc
push
mov
mov
repz
jecxz
roll
and
inc
add
bound
push
pop
inc
push
mov
mov
icebp
cmpsb
jecxz
push
xchg
int3
data16
mov
scas
jmp
lods
stc
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
mov
cmc
xchg
in
std
xchg
ljmp
xor
jne
bound
push
and
xor
in
xchg
repnz
mov
movsl
and
and
bound
push
and
xor
in
xchg
repnz
mov
movsl
and
adc
adc
bound
push
inc
cmp
sbbb
sub
mov
or
adc
mov
orl
xchg
outsl
sbb
push
bnd
mov
in
mov
in
call
adc
add
fcom
call
sbb
push
or
lea
test
mov
arpl
push
lods
mov
cmp
test
mov
xor
mov
xor
outsl
sbb
mov
cmp
xor
push
test
inc
dec
cmp
loopne
or
ret
and
bnd
xchg
and
test
push
and
aad
lds
xchg
repnz
mov
movsl
and
inc
add
bound
push
dec
mov
aam
xchg
popf
test
xor
jno
push
and
je
jbe
aaa
and
mov
cmc
rcll
xchg
xchg
movsl
push
sub
adc
xchg
jbe
outsb
sub
jne
pushf
mov
les
repnz
mov
movsl
and
inc
add
bound
push
and
xor
in
xchg
repnz
mov
movsl
and
inc
add
bound
push
and
pop
inc
in
mov
and
cli
dec
push
mov
mov
add
outsl
mov
sub
testl
ljmp
add
cmp
int3
ret
mov
pop
lret
cmp
or
ficomps
lcall
cmp
mov
pop
lock
call
lea
out
int3
adc
adc
jno
sbb
mov
xchg
imul
das
sbb
scas
mov
mov
js
sbb
lock
xchg
sbb
push
xchg
inc
jg
xor
pop
xchg
jle,pt
clc
add
lret
and
int3
fnsave
test
mov
sti
sub
push
repz
mov
mov
jnp
cmp
mov
push
sub
cltd
pop
jo
mov
mov
jae
jb
fs
js
cmpsl
loopne
push
int3
xchg
xchg
fcmovb
imul
sbb
mov
aaa
mov
nop
dec
and
lret
mov
inc
aad
ljmp
test
ljmp
inc
ds
int3
test
lods
pusha
cltd
daa
xchg
pushf
stos
movaps
mov
test
sti
mov
nop
inc
add
ficomps
push
sbb
sti
bound
loop
in
mov
stos
repz
scas
jb
aam
les
test
xor
push
subb
adc
or
and
icebp
cli
sub
mov
push
jo
mov
push
popf
int3
outsl
adc
cs
lret
xchg
xor
pop
clc
dec
shrl
or
xor
jp
lea
frstor
adcb
mov
ret
insl
sub
mov
sbb
add
mov
js
movsb
cld
bswap
jns
cmp
rcrb
add
fnstcw
hlt
sub
mov
cmp
dec
ljmp
loope
mov
push
push
dec
rcll
std
sub
adc
inc
rolb
fst
or
inc
sbb
pop
notl
ds
pxor
inc
lahf
dec
lret
mov
mov
ret
dec
dec
je
das
lcall
push
sub
add
sbb
fs
pop
aaa
mov
aas
fwait
push
lret
sub
xor
pop
in
in
jg
and
push
mov
add
xor
sbb
scas
es
jge
lahf
pop
ja
cli
adc
sub
cli
xchg
mov
jp
in
push
push
out
mov
mov
push
mov
ret
test
cmp
jnp
call
cmp
push
mov
ret
lock
xor
lahf
dec
push
xchg
push
push
sbb
push
ljmp
inc
push
lock
push
dec
xchg
push
andl
out
pop
jns
lret
in
pop
ret
push
push
pop
and
ljmp
lods
pop
jl
push
inc
shl
or
test
mov
punpcklwd
pushf
sub
addr16
xor
dec
jmp
add
and
shr
arpl
int
cmp
sbb
xorl
in
cmp
jnp
cs
int
xchg
inc
stos
cmc
xlat
dec
cmp
cmp
mov
arpl
sub
in
addr16
fstpl
in
in
test
jnp
sub
jmp
lret
ljmp
fs
pop
icebp
inc
pop
inc
clc
add
inc
push
dec
fs
cld
fdivl
insb
lods
sub
push
xlat
or
adc
jmp
sti
inc
movsl
and
notb
es
cmpsl
pusha
nop
jmp
inc
sub
mov
outsl
test
xor
repz
je
test
pop
out
bound
xor
les
sti
incl
push
sub
test
lock
fwait
push
and
xchg
jmp
insb
mov
shll
rolb
cmp
rorb
xor
rcll
pop
outsl
test
pop
add
in
cs
jl
cmp
add
xchg
push
aaa
ss
pop
fcoml
hlt
push
add
mov
jmp
push
sbb
and
fs
adc
shll
push
orl
jae
xor
add
mov
in
sbb
cmpsb
sbb
jo
cld
inc
xor
jl
inc
mov
xchg
movsl
stos
je
ljmp
mov
ror
jae
fs
or
push
sbb
sub
mov
test
lcall
pop
and
rcrl
xorb
mov
vpsubw
testb
int3
or
pop
adc
xchg
push
bound
pop
mov
pop
xchg
lock
cmc
gs
jge
push
fcompl
xor
or
lcall
mov
jecxz
pop
orb
daa
paddd
inc
jg
popf
or
movsl
aaa
adc
inc
loope
test
imul
lods
push
adc
repnz
mov
stc
fbld
adc
shlb
rclb
aam
xor
dec
iret
sub
xorw
cs
pop
push
lcall
xchg
hlt
cld
push
cld
xchg
subb
rcll
cli
daa
xchg
insl
push
xchg
pop
fidivs
pop
mov
jb
mov
cmc
cwtl
mov
or
inc
xchg
or
out
pop
mov
mov
sar
rcrl
xor
dec
nop
pop
xor
or
cmc
add
fistpll
mov
roll
xchg
mov
into
ja
clc
movsl
xchg
icebp
stos
jns
aaa
movups
scas
movsl
out
pop
ss
jecxz
pop
in
dec
push
imul
adc
test
iret
inc
sub
repnz
adc
js
popf
jnp
or
daa
test
cmp
push
mov
std
ja
sub
pop
stos
fldcw
rcrl
cs
outsb
lods
bnd
adc
in
mov
push
pop
push
jl
es
and
xlat
add
push
push
add
in
add
cmc
or
fstps
mov
cmc
fiaddl
adc
data16
push
into
popf
mov
xchg
out
add
int
push
rolb
push
mov
sub
cs
cmp
xlat
jecxz
das
or
push
xchg
mov
push
cmp
pop
fcmovne
sbbl
dec
dec
int
sub
dec
aad
outsl
movsb
push
outsl
push
cmc
les
lret
repnz
mov
das
dec
pop
xchg
mov
xchg
test
mov
add
xor
mov
lock
adc
push
icebp
mov
xlat
fwait
sub
pop
push
scas
or
rolb
cmp
pop
jge
inc
xchg
push
inc
lea
inc
jmp
fiaddl
test
push
daa
mov
imul
adc
cmp
mov
add
mov
test
int3
add
cmp
ja
mov
pop
jno
dec
ret
pop
cld
aaa
adc
mov
inc
mull
cmc
lret
push
push
psadbw
add
orl
dec
mov
pop
insl
cmpsl
push
lcall
js
pop
out
sbb
in
sbb
jnp
ss
fxrstor
repz
xor
lret
mov
or
push
xchg
cmc
jno
bnd
shll
incb
fists
pusha
pop
pop
insb
xlat
lret
je
push
and
bound
es
lods
and
loopne
add
dec
out
shlb
sub
repz
mov
bound
fstps
sub
or
enter
sbb
jp
cmp
aas
inc
cli
nop
lock
pop
scas
fistpl
addb
add
xor
inc
ss
push
into
ficomps
cmc
lods
sub
daa
mov
cmp
insl
cmc
cmp
cld
das
mov
fnsave
imul
jns
mov
xchg
push
das
push
ds
sbb
shll
seta
jl
outsl
cltd
repz
push
and
cmp
cltd
and
jp
lret
ss
dec
or
push
insl
adc
in
sbb
icebp
jmp
pop
test
xor
xchg
pop
xor
mov
lock
leave
lcall
out
call
pop
out
call
pop
adc
jecxz
inc
test
add
hlt
psubsb
pop
rclb
mov
jmp
es
add
xchg
cmpl
in
std
ja
insb
inc
rorb
lea
xor
scas
rcll
inc
add
loope
pop
call
or
movsb
mov
rorb
mov
mov
pop
leave
ss
dec
addr16
nop
sbb
add
mov
inc
gs
dec
int
xchg
out
mov
ret
add
aad
adc
test
loope
push
aas
jno
pop
cmpsl
sub
mov
pop
fwait
ret
jp
jo
loop
dec
aaa
arpl
imul
adc
xor
mov
mov
sbb
dec
dec
push
movsl
stos
or
pushf
repnz
push
iret
nop
mov
sub
outsb
outsl
jg
xor
movsl
pushf
mov
gs
xchg
jle
pop
les
mov
push
int
nop
mov
jnp
sbb
jecxz
pop
fs
add
push
fnstsw
mov
ja
mov
lock
xor
cmpb
mov
pop
lock
push
inc
mov
mov
add
or
out
jge
xchg
sub
cmpsl
ror
or
cmpb
cmpsb
int
mov
ljmp
xor
int
cmp
std
fs
mov
sub
ja
lods
mov
adc
pop
or
ljmp
jbe
cmp
xchg
adc
outsb
and
xlat
or
dec
inc
clc
jp
fs
loopne
lea
add
mov
les
sbb
int3
cmp
je
ljmp
andl
shll
out
cmpsb
cmpsl
paddd
aad
xor
add
inc
inc
cmc
imul
mov
pop
push
test
jb
fs
negl
xchg
dec
mov
stos
fisubs
and
jl
lds
psubb
push
dec
inc
and
lcall
xchg
fiadds
pusha
lret
into
popf
fisttps
outsb
nop
jg
adc
lahf
out
adc
arpl
xor
mov
es
and
adc
or
adc
sbb
stc
int3
mov
out
mov
jge
dec
pop
pop
aam
inc
mov
jo
pop
pop
imul
xchg
cmp
imul
xchg
cs
aas
cwtl
sub
inc
movsl
adc
scas
aas
je
pop
hlt
mov
jnp
add
push
push
push
mov
and
in
adc
rol
xor
push
cmp
imul
jae
sub
sbb
aas
nop
adc
stos
movsl
loope
outsb
clc
pusha
dec
jmp
xor
cmp
clc
lahf
rorb
push
cs
mov
out
inc
xchg
dec
lret
jecxz
adc
jno
out
int
sbb
pusha
lea
push
daa
dec
lds
mov
push
mov
gs
pop
out
je
inc
daa
pop
ret
nop
stos
pop
or
lods
icebp
lock
dec
jcxz,pt
int
into
pop
jns
mov
imul
fildl
dec
sbb
cltd
int3
mov
scas
inc
icebp
int
and
fistps
stc
xorl
movsl
xchg
in
insb
fs
fxch
jno
test
mov
sub
imul
mov
xor
cwtl
cmp
in
orps
and
lods
jp
movsb
lods
mov
mov
or
push
and
jbe
mov
test
ret
xor
js
ret
xor
push
mov
scas
out
lcall
in
mov
ret
faddl
cmp
sub
mov
lock
push
and
sbb
ja
dec
xchg
mov
mov
sbb
sti
icebp
pop
sbb
cmovg
jg
fimuls
push
pop
add
sbb
cmc
je
or
jb
push
sbb
mov
mov
and
sbb
or
sbbb
sbb
push
add
es
lods
out
and
adc
jecxz
loopne
aas
add
mov
mov
or
push
aad
xchg
mov
rsm
in
out
mov
fidivrl
jae
xor
sbbl
add
push
add
add
or
add
std
adc
stc
fcoml
sbb
push
subl
in
add
and
xchg
pop
adcb
dec
push
mov
gs
inc
rcr
out
fs
mov
and
incb
enter
int
jnp
inc
adc
in
in
sbb
add
lds
push
xor
fdiv
push
testb
popa
sub
jnp
mov
int
cmp
lods
lret
push
sahf
push
cwtl
cltd
pop
mov
aam
dec
xor
xchg
xor
fisttpll
pusha
lahf
iret
add
mov
out
mov
push
retw
dec
imul
stos
negl
lock
xor
jle
push
inc
fbstp
stc
std
mov
sbb
in
dec
dec
add
cmp
rcll
fadds
pop
das
jb
xchg
and
mov
in
setb
lret
sub
jbe
cmc
repnz
aad
xchg
nop
sbb
out
test
lock
push
jae
in
fs
push
pop
aad
testb
xchg
rorl
in
inc
cmp
jo
enter
test
mov
and
test
movsb
xor
and
lret
shll
pop
xor
xor
mull
sub
mov
clc
stos
add
cmpsl
mov
jmp
add
or
mov
mov
xchg
sbb
cmc
addr16
xchg
out
or
outsb
repnz
push
dec
pop
cmp
into
pushw
mov
lret
enter
mov
mov
xor
xchg
nop
cmpsb
or
test
ljmp
mov
aam
push
mov
mov
cmp
ljmp
mov
inc
xchg
jmp
pop
in
lods
inc
in
mov
xor
cwtl
je
jae
data16
and
fsts
xor
push
fnstenv
add
insl
jle
decl
stos
xrelease
int
jmp
cmc
popf
push
scas
imul
xchg
pop
sbb
mov
jne
paddb
out
mov
jmp
lret
xchg
inc
dec
pop
loop
xchg
pop
or
dec
jmp
popa
or
subb
and
sahf
inc
movsl
aam
jnp
jb
nop
notb
js
fcomps
test
cltd
push
mov
inc
push
out
clc
stos
aaa
xchg
test
lods
stc
pop
push
vmaxps
mov
sub
pop
aas
push
out
inc
cmpsl
je
shl
push
in
pop
call
jbe
cwtl
mov
xchg
aaa
clts
or
add
out
lret
ret
inc
push
stos
stos
push
add
mov
sbb
retw
movsb
movsb
arpl
adc
dec
jo
push
pop
mov
xchg
push
lahf
dec
js
rcrb
inc
jns
pop
adc
int
cmp
jns
in
xchg
sti
or
pusha
xor
sbb
leave
and
cli
mov
dec
mov
popa
add
fldt
mov
xor
push
sbb
aam
movsb
out
ss
cwtl
mov
inc
clc
popa
testl
addr16
fcompl
pop
push
rolb
pop
pusha
lret
jbe
mov
mov
adc
int
lret
out
and
lret
xorl
mov
mov
scas
bound
mov
cmp
aaa
movsl
dec
push
mov
jge
cmp
movsl
int
sbb
push
mov
xchg
mov
mov
jge
mov
stos
add
ret
clc
mov
mov
sbb
imull
jae
xchg
xor
adc
add
cmp
pop
enter
out
loopne
xchg
ja
ljmp
dec
aaa
jns
lea
mov
mov
adc
jp
pushf
or
push
sub
aad
sbb
inc
xor
mov
ret
test
cmp
mov
ljmp
pushf
aam
aam
and
mov
mov
dec
rorb
lock
xchg
push
lock
jle
call
mov
mov
or
popa
add
notl
repnz
gs
pop
jno
pushf
pop
jae
mov
popf
pop
adc
fdivs
jo
test
rcll
bound
cmc
imul
mov
inc
lret
mov
pop
fistps
mov
fld
lock
add
insl
jge
popf
imul
int3
das
sub
push
and
pop
fsubrs
push
inc
xchg
xor
mov
jmp
imul
sbb
push
sub
mov
scas
jnp
mov
inc
pop
add
lret
mov
pop
xchg
pop
cmp
into
sbb
test
shrb
add
inc
fidivrl
loopne
es
mov
jnp
lds
cwtl
xlat
pop
jo
scas
mov
fbstp
mov
push
mov
loop
faddl
sub
stc
stc
push
stc
cmp
sti
out
fcompl
mov
ret
test
int
push
mov
inc
mov
or
cwtl
rcll
mov
mov
ljmp
xor
mov
fwait
mov
mov
dec
pusha
movsl
test
jmp
clc
cltd
loope
jno
dec
xchg
or
mov
ret
shrb
push
popa
out
sbb
add
sub
ja
or
mov
loop
pop
lcall
sbb
int3
sub
dec
aas
out
rcl
pop
inc
movsl
scas
push
mov
xor
xchg
push
sub
idivl
xchg
and
push
nop
add
xor
mov
rcrb
out
addr16
push
out
sbb
jnp
pop
mov
and
cmp
fisubl
push
sbb
test
adc
mov
sahf
pop
and
movsl
jae
pop
ret
adc
cmpsb
sbb
jg
lds
ret
out
rorb
mov
mov
mov
xchg
in
scas
cli
cmpb
xchg
dec
fidivl
enter
add
cmpsb
dec
dec
mov
sub
xchg
pushf
es
and
and
xchg
adc
popf
mov
daa
xchg
js
stos
pop
lret
movsb
sti
cwtl
xor
xchg
and
clc
mov
xchg
scas
cmp
cli
aam
mov
mov
test
push
negl
mov
rcr
push
or
pop
fsubl
inc
push
mov
jl
push
loop
stos
out
jp
stos
sub
inc
pop
in
stc
inc
out
sub
mov
fstl
arpl
mov
sub
cwtl
outsb
push
jp
pop
pop
cmpl
dec
cmp
scas
popf
faddl
or
pusha
addb
dec
ss
aas
cli
leave
sbb
sub
xorb
popf
lahf
push
in
jo
xor
push
xor
push
ret
addr16
ljmp
mov
xor
les
dec
jae
and
wbinvd
mov
movsb
inc
jae
pusha
repnz
sbb
jbe
xorl
test
das
fisubrl
adc
loopne
outsb
jge
bnd
xor
mov
add
jno
push
and
inc
jle
icebp
repz
and
adc
mov
sub
daa
dec
popf
sarb
mov
jmp
stos
lds
out
lds
mov
repz
xchg
scas
xlat
ds
clc
xchg
daa
movsb
stos
xchg
jnp
xor
mov
das
xor
xor
in
out
mov
out
jp
sbb
mov
inc
add
shlb
mov
adc
subb
ss
fwait
adc
mov
mov
pop
fcomip
mov
dec
ss
push
sbbl
xchg
data16
shll
outsl
cmp
jp
daa
mull
clc
xchg
rclb
insl
pop
fs
mov
or
fwait
addr16
jns
xor
adc
push
out
dec
imul
jl
inc
insb
cltd
fistpl
outsl
mov
dec
dec
icebp
es
setg
xchg
imul
or
and
push
ljmp
lds
xor
stos
jo
call
or
cmp
test
push
inc
add
arpl
lods
push
aaa
push
andb
jg
and
scas
sbb
mov
stos
push
imul
mov
mov
data16
addr16
jmp
push
divb
adc
inc
xchg
inc
inc
xchg
iret
pushf
adc
cwtl
inc
ret
inc
loopne
pop
cwtl
aam
rcrl
push
and
adc
jp
mov
lods
push
stc
mov
xchg
mov
xor
mov
xchg
insb
mov
mov
pop
ret
jnp
ffreep
mov
xchg
repnz
mov
movsl
and
inc
add
bound
push
and
xor
in
xchg
repnz
mov
movsl
and
inc
add
bound
push
and
xorb
loop
repz
and
xor
jne
bound
push
and
xor
in
xchg
repnz
push
movsl
fstl
out
test
adc
adc
lret
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
movsb
daa
mov
xchg
xchg
adc
inc
test
out
stc
ja
xlat
mov
addr16
push
inc
ret
inc
rol
and
adc
arpl
jae
inc
xlat
jge
mov
pop
xchg
daa
int
repz
ret
push
rcrl
test
adc
push
xchg
cmp
dec
xlat
popa
inc
mov
jb
or
add
mov
addr16
jb
push
jbe
insb
testl
pop
rcrl
inc
cmp
cwtl
dec
and
pop
ja
in
leave
jbe
clc
dec
mov
inc
dec
cmpb
imulb
lods
inc
dec
test
pop
dec
repnz
pop
and
iret
mov
or
aaa
mov
ja
xor
pop
imul
fbstp
bound
jnp
sbb
inc
cmp
aaa
push
cmpl
divb
inc
cmp
scas
pop
cmc
mov
in
sbb
jb
sbbb
mov
pop
arpl
and
pop
pop
pop
fsubrl
int3
xchg
ret
sbb
cmpb
loop
adc
xor
mov
stc
ljmp
mov
xchg
adc
arpl
shl
lods
sbb
daa
scas
das
fistpll
jne
push
loope
and
pop
rep
out
jg
cltd
push
mov
xlat
adc
loopne
ret
bound
jb
adc
mov
mov
cmc
jo
jg
xor
pusha
inc
ret
pop
shrl
push
lods
sbb
cmpsb
push
mov
out
les
das
divl
inc
xlat
push
daa
mov
pop
xchg
jcxz
repz
ret
push
shll
add
jae
inc
xlat
push
daa
mov
pop
xchg
jcxz
repz
ret
push
shll
jle
std
sub
nop
aas
addl
jp
or
or
sub
sub
loopne
jle
lods
dec
mov
outsb
outsb
push
sub
aam
lock
addr16
ja
hlt
jo
xor
or
pop
rcl
out
cmpsb
mov
add
stos
xor
mov
mov
pushf
mov
mov
lods
jp
es
js
jne
sbb
shr
sub
jb
inc
arpl
dec
hlt
aam
lahf
js
cmp
into
into
jbe
adc
cltd
push
sbb
jp
ret
pop
xchg
lea
inc
and
adc
jo
cmp
inc
mov
jnp
dec
cmp
mov
in
adc
fsubs
mov
cmp
sahf
inc
ds
popf
jnp
jmp
into
mov
xchg
jle
cli
adc
or
push
movsb
adc
rol
dec
push
test
sti
call
mov
mov
or
mov
aaa
pop
shrb
mov
lea
mov
sub
js
xor
adc
sbb
dec
dec
out
in
jmp
arpl
repz
inc
sahf
gs
hlt
inc
fs
and
movsl
repnz
js
mov
scas
mov
mov
test
dec
push
cld
cltd
in
mov
push
xor
and
push
ret
rcr
leave
std
sub
jns
fnstcw
push
sub
lea
rcl
int
pop
xchg
push
fistpl
xchg
adc
sbbl
adc
icebp
push
add
add
out
inc
inc
dec
in
jmp
jo
movsb
xor
and
arpl
xchg
andb
daa
pushf
adc
mov
int
mov
scas
jle
push
int
imul
int
fstl
inc
add
dec
and
fidivl
dec
xor
cmp
mov
mov
call
push
mov
jge
in
mov
sub
or
imul
andb
mov
outsl
inc
xchg
sbb
repnz
iret
xor
pushf
cwtl
jp
pop
mov
sbb
mov
in
push
in
and
pop
fadds
adc
lret
and
cs
mov
scas
and
repz
cmp
add
add
inc
cmovae
popf
jns
add
push
fisubrl
sbb
add
or
cs
lock
aas
mov
pop
out
cmc
cmp
and
push
insb
mov
lock
adc
mov
int
bound
xor
in
negl
and
jmp
or
iret
inc
xchg
mov
lret
pop
push
daa
and
clc
xor
cmc
arpl
int3
andl
jnp
xor
xor
outsl
call
inc
imul
rcrb
es
xor
lea
repnz
pop
stos
fdivrl
xlat
mov
cmpsl
jb
rolb
lea
movsl
cmp
pop
sbb
sti
sub
jne
xchg
inc
dec
cmp
repnz
mov
mov
fwait
test
dec
into
outsl
mov
and
adc
push
pop
sahf
ljmp
mov
xor
cs
cmp
out
aad
jmp
loopne
push
pop
xchg
mov
int3
sub
jge
ljmp
cmp
mov
ss
leave
nop
mov
js
inc
fsubrs
out
xor
imul
add
test
js
pop
push
in
mov
jp
shrb
mov
pop
xor
std
into
xor
test
cwtl
fsubl
inc
cmc
fsubl
mov
jge
push
xchg
pop
adc
test
icebp
rclb
fiadds
jmp
mov
ret
adc
lret
cmp
inc
adc
push
pop
cmp
push
rclb
or
outsl
xor
mov
aad
push
jle
addl
bound
mov
mov
scas
inc
sbb
push
stos
in
mov
mov
dec
rcll
shrb
out
in
mov
jno
adc
je
jl
dec
jge
xchg
or
xchg
and
push
push
and
xchg
sub
mov
lea
test
dec
or
cmpsl
out
cli
mov
sti
mov
sbb
mov
imul
fucomip
xor
fs
pop
lods
leave
ret
adc
cli
mov
jge
jg
jae
sub
hlt
mov
jae
lock
sbb
shrl
fwait
arpl
adc
xchg
push
insb
das
out
testb
js
in
ret
dec
adc
push
out
push
mov
jo
cmpsl
jge
lods
sarb
mov
iret
addb
mov
scas
push
mov
mov
mov
pop
int3
orl
mov
add
jbe
ret
cmp
repnz
emms
push
cli
fs
jne
aad
mov
rorb
xchg
adc
pushf
roll
cwtl
std
out
lds
out
mov
ret
in
loope
cmp
fcomip
call
lahf
dec
or
pop
push
cmp
mov
xchg
aad
call
add
or
ret
ret
fcoms
inc
xchg
or
cmp
stos
add
gs
and
in
call
jno
loopne
sub
adc
stos
mov
cmpsb
pop
hlt
insl
cmpsl
xor
push
mov
ret
mov
cmc
dec
xchg
xchg
aad
ss
push
push
cmc
cmp
push
popa
lds
dec
pop
loop
push
repnz
cmpl
and
data16
or
cmc
add
or
push
mov
mov
sub
mov
mov
mov
aam
imull
fcoml
sbb
pop
push
dec
shl
je
dec
jno
inc
movsl
push
out
ss
in
cmp
adc
jle
push
int
cltd
enter
insb
cmp
sbb
inc
push
enter
mov
jbe
push
jbe
mov
insb
aad
cmpsb
testb
inc
xor
loop
xchg
hlt
adc
fldenv
decl
repnz
std
cmp
andb
mov
and
hlt
cmc
out
sub
pop
xchg
cmc
mov
push
dec
subb
adc
sbb
repz
mov
sbb
dec
imul
mov
addl
pop
cli
dec
jp
jo
mov
sarb
enter
fnsave
lret
mov
or
sbb
daa
fildll
mov
push
popw
xchg
adc
cmp
mov
movsb
addb
mov
push
lock
pop
mov
mov
jge
jo
loope
xchg
sub
mov
int
nop
pusha
hlt
les
out
mov
pop
std
mov
hlt
add
leave
adc
and
mov
dec
inc
aaa
adc
sub
popf
sub
call
sub
xchg
push
mov
pop
arpl
iret
push
fwait
std
icebp
inc
mov
mov
out
repnz
push
ds
outsl
push
and
jbe
in
in
lcall
pusha
cltd
xchg
xchg
mov
jno
xchg
add
andb
lds
js
je
pusha
je
jl
es
mov
or
cmp
inc
leave
in
es
ds
mov
hlt
ljmp
cs
aaa
jmp
sbb
push
adc
mov
or
xchg
loope
cs
jnp
scas
lahf
xchg
xchg
stos
inc
xor
out
fistpl
ret
sbb
fstl
call
pop
add
adc
and
xchg
outsb
push
outsl
lret
mov
cmp
mov
out
out
dec
xor
out
jmp
daa
lret
sbb
lcall
xor
movsb
adc
out
scas
lods
mov
dec
mov
or
sbb
stc
push
mov
xor
jl
xchg
cmp
aad
imul
sbbb
inc
addb
jg
aaa
ffree
rolb
movsb
scas
push
ret
push
push
movsl
adc
insb
ds
scas
dec
fdiv
push
xchg
pop
mov
and
and
popf
dec
movsl
sbb
sbb
dec
loope
fwait
xorl
icebp
mov
scas
jb
sub
mov
push
daa
shrl
int
aad
insb
sub
mov
mov
mov
pop
add
ss
stc
sub
sahf
pop
jp
cmc
xchg
push
inc
jne
mov
mov
cmp
inc
cmpl
pop
cmpsb
xlat
repz
push
pop
jge
test
andl
sbb
test
pop
mov
sbb
adc
inc
iret
aaa
inc
add
dec
data16
mov
je
sarl
adc
pop
in
mov
jl
jnp
movsl
mov
subl
xor
mov
mov
nop
lret
jbe
mov
pop
inc
movsb
cld
bound
xchg
add
xor
hlt
jbe
into
push
pop
pusha
jne
xchg
outsl
sub
push
cmp
test
mov
adc
sub
lret
leave
clc
gs
cmp
xlat
out
jge,pn
dec
adc
add
xchg
rorl
mov
xor
ret
insl
pop
sbb
fdiv
mov
inc
mov
adc
fidivrl
pop
jns
ja
mov
popf
add
or
or
and
xchg
hlt
filds
and
sub
in
negb
fcompl
decb
mov
mov
out
add
xor
and
movsb
cmp
rclb
pop
dec
popa
imul
dec
je
outsl
pop
adc
es
in
or
fimuls
sbb
outsl
imul
addr16
push
xchg
xor
call
icebp
push
ja
pop
adc
andb
sbb
faddl
jns
sub
dec
repz
es
lret
stos
imul
dec
jle
aam
push
jo
test
xchg
mov
lods
pusha
fwait
and
test
sti
dec
jle
mov
mov
cmp
push
xchg
add
sbb
push
cmp
cmp
sbb
sarl
outsl
cli
nop
cmp
aaa
stos
aaa
jecxz
adc
lock
or
mov
shl
fbstp
cmp
clc
dec
mov
dec
jecxz
xlat
loope
mov
push
fdivs
mov
push
cs
insl
lahf
clc
adc
pusha
test
es
cld
popa
cltd
movsl
mov
idivb
lcall
rcl
cmp
push
or
push
push
add
int3
popa
bnd
in
push
ret
xchg
add
aaa
jle
test
dec
loope
jbe
rorb
sub
cmp
push
lods
mov
sbb
popf
aas
ds
push
cmpsl
or
mov
minps
movsl
sbb
adc
mov
jb
popa
push
adc
dec
lds
pop
iret
ljmp
fldt
push
jg
mov
push
xor
add
sbb
rclb
iret
pop
dec
push
stos
xor
adc
js
loope
ror
pop
inc
sti
mov
jle
outsl
dec
imul
aad
inc
notb
sbb
je
dec
fwait
pop
push
jl
mov
push
outsl
pushf
pop
mov
jge
popa
lahf
sbb
stos
imul
int3
test
mov
sbb
imul
or
jg
push
add
mov
inc
mov
dec
into
jmp
lock
dec
pop
out
jb
cmp
add
mov
xchg
in
cmpsl
insb
in
pop
sti
jle
or
stos
das
sbbl
addr16
int3
test
inc
cmp
push
sub
pop
test
sub
push
jne
pop
push
sbb
jae
rorb
xchg
sarl
pop
mov
add
lea
enter
in
aad
movsl
jmp
ljmp
dec
mov
in
gs
inc
lods
mov
push
cmp
inc
push
imul
sub
mov
mov
mov
pusha
insl
ret
out
fsub
xchg
mov
xchg
mov
mov
hlt
and
add
je
mov
pop
xchg
cmp
std
push
adc
popa
popf
mov
jecxz
call
sub
hlt
stc
dec
add
and
clc
sub
idivb
jae
adc
adc
arpl
inc
fwait
mov
push
arpl
dec
fadds
ret
adc
xchg
inc
fisttpll
xchg
cmp
xlat
fisttpl
test
stc
or
cli
adc
cltd
push
xchg
cmc
cs
nop
insl
imul
jo
mov
add
xchg
aas
es
lods
bnd
cmp
dec
xor
cs
xchg
sti
cmc
inc
je
mov
jb
adc
and
jbe
dec
dec
addr16
shlb
or
pop
fadds
or
cmpsl
pop
sbb
push
adc
push
movsl
shll
xchg
and
dec
adc
cmp
fisubrl
sub
stc
data16
jnp
popa
scas
aam
cmpl
adc
fwait
cmp
stos
popa
mov
xchg
std
add
xchg
test
stc
loope
and
je
pop
inc
xlat
xor
cmpsb
inc
jp
cmp
fwait
test
ja
jb
add
cmp
adc
sub
divb
insb
and
es
jns
cli
cmp
jle
fsubrs
add
lret
fsubl
pusha
movsb
loope
rclb
pop
add
mov
jns
mov
lcall
in
jno
sbb
add
and
aam
cmp
pop
push
jg
push
jg
pop
sub
test
sub
cs
and
jl
inc
dec
adc
testb
movsl
popf
in
xor
mov
icebp
into
popf
or
into
or
sub
ds
aam
sbb
cmpsb
cmpsb
fildl
mov
jae
mov
fists
repnz
cmp
mov
add
sbb
aam
neg
pop
or
loope
xchg
stc
xor
cld
fucom
leave
pop
imul
cmpsb
xchg
loopne
xor
mov
pop
mov
icebp
ret
loopne
xor
pop
push
xchg
and
fldz
dec
lea
xchg
mov
pop
and
fisttpll
push
pop
nop
inc
xchg
hlt
sbb
ret
jg
lock
inc
mov
in
xchg
lods
mov
push
adc
dec
inc
cmp
test
mov
ja
repnz
stc
push
sbb
jo
in
mov
addr16
sub
loope
adc
rol
stos
pop
push
mov
out
mov
xchg
scas
arpl
dec
xchg
testb
das
sub
ja
pop
aaa
mov
testb
movsl
outsl
ss
leave
pop
scas
mov
js
cs
push
push
scas
je
lretw
stos
mov
cli
adc
push
jmp
cli
loop
hlt
insl
imul
inc
and
inc
push
fsubrl
test
fs
clc
dec
and
mov
int
subl
insl
scas
inc
testl
repnz
imul
and
pop
add
ljmp
addb
popa
pop
gs
pushf
int
mov
inc
incb
out
mov
pop
cld
scas
loop
fidivrl
and
int3
xor
int
xchg
fwait
in
cwtl
test
push
cmp
and
push
sti
fnsave
xchg
or
cmp
adc
and
push
push
sbb
inc
call
fs
push
push
adc
in
mov
sbb
push
jge
nop
cltd
out
stos
mov
ja
test
test
inc
pop
push
dec
pop
aam
pop
dec
movsl
sbb
xor
psrlq
inc
addl
popf
sub
xchg
int3
add
out
sbb
add
jmp
mov
js
mov
mov
pop
je
popf
mov
pop
dec
mov
jno
faddl
shrl
push
fsubrp
jle
push
sub
or
fildll
xchg
jo
xchg
lock
mov
mov
cmp
in
cmp
jns
dec
sbb
push
rolb
out
cli
lods
cmp
mov
or
les
xchg
push
xchg
pop
mov
or
push
sub
decl
inc
int
jg
scas
aaa
incl
movsb
or
inc
pushf
dec
jno
jne
inc
rcl
sahf
pop
icebp
inc
lds
pop
jge
sbb
loop
popl
dec
xor
stos
or
dec
fcmovnbe
xchg
xor
jecxz
scas
xchg
repnz
cltd
fs
lret
jg
pop
cmp
fildll
pop
xor
test
rclb
push
jg
cmp
inc
fwait
lret
sub
jnp
xchg
xor
xchg
pusha
or
addl
insb
les
ljmp
mov
int
and
add
out
testb
les
test
cli
test
ljmp
sub
push
enter
push
adc
arpl
or
lods
cmpsl
dec
cld
test
bound
in
inc
sti
in
insb
cmc
out
pop
popa
inc
int
cli
std
aad
popa
dec
sub
and
adc
sub
cli
pop
mov
mov
mov
into
in
adc
mov
sub
mov
cmp
lea
sub
test
add
loopne
cmp
pop
mov
insb
inc
in
inc
fidivl
push
mov
out
scas
fisubrl
scas
popa
ds
aad
fsubrl
mov
cld
mov
pop
cmp
ret
cmp
push
cmp
jg
xor
cld
push
jge
xchg
mov
jp
into
jg
imul
shrb
test
pusha
incl
jp
inc
daa
and
xchg
in
or
push
int3
popa
iret
xchg
pop
cltd
mov
shl
mov
out
mov
pop
mov
push
mov
fildl
gs
push
mov
mov
and
xor
jnp
or
fistps
sub
bound
movsl
aam
add
ss
les
mov
icebp
mov
mov
push
and
inc
pushf
push
jno
jmp
lea
dec
add
insb
pop
movsl
dec
daa
push
xor
lret
in
icebp
and
pop
lcall
shll
dec
test
clc
push
xor
inc
sub
insl
insl
pop
xchg
jae
jle
mov
cmp
xchg
xchg
jno
push
loopne,pn
movsl
daa
and
test
mov
fmuls
jp
aad
sbb
cmpsb
call
call
addb
cli
xchg
push
loop
rcll
sbb
dec
test
data16
int
pop
test
into
push
fcomip
lods
int3
out
pop
jne
dec
mov
arpl
jae
aam
pop
call
pop
mov
pop
pop
cltd
pop
faddp
pop
ficompl
jbe
sti
pop
pop
mov
cltd
mov
mov
ds
lahf
loop
lahf
lahf
push
bound
add
int
dec
outsb
cmp
mov
pop
mov
pop
cmpsl
pop
xchg
jbe
add
mov
push
inc
xchg
loopne
stos
sbb
clc
stc
fimuls
incl
leave
xchg
cltd
cmp
mov
lret
out
test
cltd
outsl
int3
dec
cmc
mov
cmpsl
pop
cmp
in
dec
divl
les
cmp
sub
cmp
push
cs
pop
out
add
fldt
sbb
pop
enter
mov
popf
faddl
add
push
jmp
int
dec
movsb
add
pushf
addl
mov
es
es
adc
cmpb
cmpsl
push
sbb
sahf
pop
cmpb
inc
jno
testb
push
ror
push
jmp
std
sub
cmovo
mov
jp
cltd
ljmp
xor
push
ja
pusha
popf
add
push
nop
negl
sbb
add
adc
addr16
push
out
adc
inc
scas
test
cmp
dec
inc
xor
sub
inc
dec
inc
push
cmp
pop
dec
shrb
jp
out
inc
push
jmp
out
sub
mov
imul
and
xchg
flds
mov
cmpsb
jns
fistl
sbb
sub
lret
pop
sbb
mov
inc
pushf
fst
dec
push
mov
mov
pop
inc
jne
arpl
push
fstpt
add
xor
into
xchg
sahf
frstor
jnp
inc
popa
dec
pop
int3
das
sbbb
ljmp
or
push
and
add
sbbl
jmp
jnp
insl
mov
ss
dec
xor
fists
stos
sbb
scas
lock
jmp
push
xor
push
and
jmp
cli
jg
in
jns
inc
sbb
and
into
iret
mov
push
inc
xchg
movsb
insb
outsl
sbb
sub
test
inc
sub
inc
xor
nop
adc
outsb
cmp
mov
dec
inc
or
popf
pop
rcrb
push
fisubs
xchg
lahf
pop
sbb
pop
out
mov
scas
ljmp
pushf
xor
les
fldl
sub
aam
mov
sbb
rcrl
ret
loopne
or
ljmp
jge
ficompl
push
lods
mov
pop
pop
jg
mov
xchg
adc
arpl
jae
inc
xlat
push
daa
mov
pop
xchg
jcxz
repz
ret
push
shll
add
jae
inc
xlat
push
daa
mov
pop
xchg
jcxz
repz
ret
push
shll
sbb
sbb
inc
pop
push
daa
mov
pop
lcall
mov
xlat
fucom
mov
out
out
mov
enter
pop
in
fwait
decl
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
mov
push
popf
fsubrl
lds
sub
insb
sbb
cmp
dec
sub
sbb
or
hlt
in
popf
fsubrl
lods
int
in
mov
jb
dec
cmp
sbb
or
es
insb
test
or
mov
je
jl
add
cmp
sbb
jo
imul
adc
enter
add
adc
outsl
push
push
sub
ds
imul
lock
in
in
mov
or
clc
repnz
jecxz
jge
ret
mov
test
dec
loop
inc
call
or
mov
ret
call
push
cmp
push
cltd
out
mov
cltd
mov
in
aas
jecxz
shlb
fmuls
xchg
rep
jns
adc
push
or
inc
or
les
mov
dec
sub
dec
jns,pt
jns
in
jmp
xor
js
in
jne
test
ja
rorb
gs
pop
outsl
sbb
iret
lcall
mov
in
xor
mov
push
and
push
xor
ja
jl
lea
fcom
iret
fnstcw
bound
pop
push
sub
push
in
hlt
fiadds
rcl
int
xchg
lock
dec
inc
jns
js
dec
and
dec
cmp
dec
or
leave
clc
stc
lods
fstpl
insb
sbb
cmp
sub
sbb
or
cld
in
popf
fsubrl
lods
fstpl
insb
sbb
cmp
sub
sbb
or
cld
lea
mov
mov
mov
cmpl
pusha
ds
flds
push
pop
or
and
xor
cmpsb
sub
mul
or
sub
push
inc
mov
mov
cwtl
xchg
push
jp
mov
and
xchg
ret
xchg
add
cmc
mov
aad
rorl
mov
aad
fadd
xor
loop,pt
rcll
push
sarl
jecxz
xchg
push
mov
jge
js
lcall
ret
adc
jnp
sti
fimuls
lock
jns
test
mov
xchg
xchg
scas
ret
ret
pop
mov
enter
jno
lret
test
adc
xchg
insb
movsl
inc
iret
loope
dec
out
push
adc
fiadds
add
movsb
and
jg
sti
pop
push
and
push
or
repz
xchg
popa
out
cmp
pop
repz
lret
ret
fsubl
dec
pushf
jge
lcall
add
mov
std
jle
cmp
push
cmpsb
adc
out
daa
fsubr
cmp
xchg
pop
shrb
cltd
mov
mov
movsl
out
repnz
cmp
out
mov
add
into
inc
aad
mov
daa
adc
sbb
adc
fcmovbe
lret
sbb
jmp
pop
inc
outsb
pop
lods
mov
sub
push
push
cmp
psubsb
flds
cmpsl
and
cwtl
idiv
push
cli
js
test
adc
jl
ficompl
pop
hlt
outsl
mov
mov
stc
fstl
sbb
cmp
jae
insb
jnp
jg
pop
mov
mov
ja
xchg
les
mov
es
inc
adc
lret
add
or
cs
test
cmc
mov
add
add
lds
jo
mov
popf
imul
xchg
adc
xlat
out
adc
mov
or
loop
jge
push
repz
std
inc
nop
insl
sub
les
jno
loop
mov
ds
mov
cmpsl
pop
cs
outsl
sub
add
mov
xor
dec
cld
ret
sti
mov
insl
mov
xor
nop
rcrb
jecxz
clc
movsl
xchg
daa
data16
mov
lds
mov
mov
sbb
jae
enter
fld
dec
jg
push
xchg
mov
ja
sahf
sub
add
jb
mov
test
dec
sub
cwtl
or
stc
pop
mov
loope
add
xor
inc
imul
push
movb
lret
popw
pushf
jne
and
sti
sbb
inc
sbb
aam
repnz
fwait
cli
jbe
mov
in
mov
and
mov
fs
cmpb
dec
roll
or
mov
enter
inc
movsb
loope
xchg
ficoml
dec
jb
insl
aas
insl
jbe
shll
sahf
lret
sub
in
inc
sbb
mov
xchg
aam
arpl
leave
sbb
rcrl
sub
pop
dec
dec
xor
into
rcr
push
xchg
or
lods
mov
jne
lcall
fimull
mov
jb
sub
fsts
inc
xor
xor
test
ret
add
adc
ljmp
mov
ja
mov
out
cld
je
mov
cmp
adc
and
fimuls
aad
inc
cld
and
pop
pop
inc
jge
jmp
sub
fsubrl
cs
jmp
dec
popa
sbb
dec
mov
mov
jne
emms
call
mov
stos
rclb
mov
mov
xchg
imul
xchg
mov
pushf
inc
xor
or
sbb
push
pop
or
popa
mov
sarl
cmc
pop
ret
sti
movsl
jmp
inc
incl
in
sbb
pop
sbb
and
stos
push
mov
push
loope
jcxz
insl
jecxz
pmulhuw
jnp,pn
jge
cmp
dec
push
mov
and
fcmovnbe
mov
gs
shl
or
xchg
decb
xor
pusha
or
push
inc
pop
in
pushf
adc
in
imul
pop
xchg
pushf
or
pop
das
iret
add
xchg
dec
xchg
shl
in
adc
xor
inc
stc
addl
and
in
rol
in
lea
mov
mov
pop
test
in
fwait
ljmp
mov
mov
jge
lods
loopne
mov
push
jae
pop
inc
push
pop
inc
fmulp
popa
scas
add
inc
mov
aad
cwtl
movsl
in
mov
pop
adc
lock
shll
cmc
cmp
cmp
mov
repnz
jl
xchg
xchg
aam
hlt
and
mov
dec
hlt
sbb
push
addr16
push
in
mov
jmp
xchg
mov
pop
insl
sbb
or
xor
pop
jo
mov
mov
cmc
xor
jp
cmc
mov
adc
xchg
xor
nop
mov
hlt
jo
fldenv
and
bound
jle
xchg
fld
aaa
out
pop
xlat
inc
and
dec
sub
je
xor
or
lret
or
sbb
mov
sbb
adc
xchg
hlt
mov
dec
rolb
jns
stos
add
adc
pop
mov
repz
das
xor
in
push
xchg
adc
popa
lods
dec
call
pop
mov
cmpsb
adc
or
rolb
repnz
into
cmp
loopne
aad
pop
add
xchg
out
cmp
push
ss
jns
xchg
notl
ror
pop
xchg
mov
fwait
loopne
cli
test
into
xor
lds
adc
int3
dec
es
dec
popa
mov
imul
mov
or
mov
push
or
inc
pop
cld
in
imul
push
and
fnsave
jo
fsubl
out
scas
pop
lret
inc
fwait
les
push
popa
les
add
lea
mov
repz
xchg
dec
fs
in
cld
ja
mov
pop
cmp
stc
cld
test
inc
xor
fs
inc
push
pop
cmc
cmp
int3
nop
leave
xor
cwtl
sarl
sbb
stos
enter
ljmp
icebp
pop
mov
cld
and
xorb
push
pop
jecxz
ret
xor
cmpsl
adc
mov
loopne
enter
fs
xor
sbb
add
jb
xor
mov
fidivrs
push
lcall
lods
fsub
ret
lock
sbb
jo
adc
inc
cli
mov
mov
xor
out
movsl
or
pop
ljmp
mov
xchg
jecxz
mov
xor
sub
mov
dec
mov
xlat
fbstp
inc
ret
aam
insl
test
pusha
movsb
sub
mov
push
js
faddl
cmp
aaa
aas
jnp
fistl
gs
and
inc
aam
cmpsb
adc
jno
push
push
aam
fsubrs
pop
cmpsb
xchg
sbb
aas
repz
sbb
adc
loopne
push
rcl
lahf
mov
cmp
out
test
push
sbb
pusha
repz
imul
xchg
xchg
inc
sahf
lret
jmp
pop
mov
or
cmp
scas
add
fs
mov
mov
mov
mov
cmpsb
int3
pushf
repz
fistpl
xchg
jmp
mov
pop
pop
xchg
call
ret
iret
hlt
inc
fnsave
jne
cmc
pop
cld
les
test
int3
insl
xchg
mov
cmp
scas
das
xchg
popl
pop
or
and
sarb
subl
popf
sar
pushf
stos
subb
sarb
cmpsl
push
int3
and
pop
ret
lret
pop
lds
push
mov
mov
cmc
fstl
mov
mov
sub
test
sahf
loop
jno
push
xchg
aas
dec
sub
lahf
sarb
push
loop
sub
mov
sub
pop
fisubl
xor
scas
rorl
ret
dec
dec
das
xor
cmpsl
sub
data16
outsl
andb
scas
jecxz
pop
insb
adc
cld
mov
sbb
adc
lcall
aad
jb
pop
pusha
clc
jno
popl
sbb
inc
pop
and
inc
fwait
out
loope
lods
cmpsb
cmc
xchg
sbb
mov
lods
fld
repnz
mov
inc
dec
movsb
xchg
pop
fisubl
int
lock
xchg
fcmovnb
or
mov
add
inc
je
inc
sysenter
xor
leave
cmp
adc
faddl
mov
or
jb
test
sbb
fmuls
xchg
pushf
jno
add
dec
pop
push
and
inc
int
cmp
loope
jo
pop
aad
xchg
cmp
push
std
fwait
popa
and
rcr
test
mov
jl
mov
pop
sbb
xor
in
mov
cmpsb
insl
cs
sbb
jl
mov
jge
fdiv
push
fisttps
stos
insl
shl
fsubp
lret
aas
xchg
mov
mov
lock
push
daa
fisubrs
push
rcr
sbb
mov
insb
dec
js
xchg
cmp
subl
lret
pop
gs
push
adcl
sub
leave
scas
idiv
ret
inc
push
stc
mov
mov
lea
adc
call
mov
sbb
or
insb
stc
inc
scas
jp
out
pop
sbb
push
stc
pop
and
add
mov
iret
push
stos
lcall
mov
popf
iret
push
mov
push
adc
mov
das
cmp
rolb
jns
fdivl
inc
jne
inc
push
adc
sub
cmp
sarb
mov
mov
fistpll
sub
lahf
test
push
jecxz
adc
leave
lret
in
stos
lret
xlat
mov
mov
mov
xchg
sub
dec
jbe
xchg
test
mov
int
pushf
pushf
xlat
pop
std
int
mov
ja
cmp
jle
nop
scas
in
dec
cmpsl
sahf
jb
mulb
pop
or
xor
xchg
mov
mov
inc
pop
test
in
xchg
test
jbe
int3
movsl
out
sub
test
bswap
popf
lds
jo
dec
add
mov
sub
sub
adcb
cmp
iret
xor
inc
xor
addr16
fstl
xchg
sbb
clc
test
popf
adc
adc
insb
shll
push
push
imul
push
push
pop
cmp
js
push
mov
popf
inc
mov
push
push
mov
sbb
das
jno
or
test
dec
icebp
daa
sub
inc
inc
mov
out
mov
fcomip
xlat
add
cmp
pop
or
add
mov
in
mov
movsb
sti
jl
popf
mov
rol
js
es
xor
pop
mov
loopne
push
mov
add
js
fwait
ja
iret
out
xor
cmp
fistpll
movsb
mov
mov
add
dec
cmp
in
es
mov
pop
push
dec
pop
mov
jg
leave
lret
mov
ljmp
and
xor
cld
sub
popf
adc
xchg
adcb
repnz
jge
int3
jbe
lret
or
imul
xor
cmp
jmp
adc
andl
sti
pop
int
mov
push
dec
jae
sub
push
xchg
jns
dec
push
push
rcrb
or
mov
jbe
ffree
sub
cmpsb
xlat
or
lods
dec
shl
jb
mov
xor
popa
xchg
test
jmp
loop
adc
and
mov
scas
cmpb
pop
dec
in
shrl
xor
add
mov
inc
scas
push
out
loop
sarl
xchg
mov
enter
mov
shll
and
data16
dec
jge
xor
div
ror
sbb
out
js
inc
cmp
sti
pop
mov
in
mov
stos
cmp
bound
xchg
dec
lret
push
mov
push
ret
pusha
std
dec
cmc
mov
in
adc
sub
pop
adc
lcall
xor
push
out
or
ds
jl
adc
stos
cmp
shll
pusha
shrb
pop
dec
jns
in
lea
lret
add
test
or
sub
dec
mov
mov
sahf
fs
fildll
push
mov
frstor
gs
mov
mov
cwtl
shlb
dec
dec
xchg
push
mov
stos
push
cmpsb
cltd
inc
rolb
adc
jecxz
into
push
inc
insl
clc
inc
fsubl
scas
sbb
pop
push
test
sahf
or
sub
cmp
les
or
dec
mov
jmp
addl
pusha
inc
and
cmp
push
out
mov
jl
or
or
cmpsb
pop
mov
lock
jns
repz
cld
mov
dec
fs
loop
loop
pop
cs
xor
mov
leave
push
push
lods
inc
pop
pop
fdivr
pop
sub
dec
mov
mov
movsb
xchg
fwait
aam
into
pop
in
cmpsb
push
jae
insl
ret
dec
fs
push
jg
jo
loop
fdivl
or
incl
testb
pop
inc
jo
arpl
notb
add
frstor
adc
xchg
pop
mov
and
xor
dec
xor
pushf
mov
imul
iret
jbe
xchg
inc
idiv
fldt
push
jnp
inc
leave
pop
jle
jae
mov
jge
sbb
icebp
in
mov
xchg
fbstp
pop
mov
ja
mov
jae
js
out
add
mov
add
xor
testb
loop
sbb
or
jg
dec
in
outsl
mov
xchg
adc
or
cpuid
icebp
cmp
jns
jbe
and
fisttpl
lahf
invd
mov
fwait
shr
lcall
sbb
jl
cmp
aam
xchg
in
into
gs
push
je
xchg
in
or
mov
lea
repnz
inc
sbb
jne
inc
idiv
shlb
mov
cld
jbe
out
aas
xlat
push
xchg
out
stc
cld
mov
mov
push
mov
mov
xchg
dec
or
fcmovnbe
jo
jle
xchg
cli
int
jae
movsl
fidivrl
pop
into
out
and
cmp
cmp
fucomp
test
loop
loop
inc
lds
cmpsl
fisttpl
mov
sahf
push
xchg
mov
mov
fwait
xchg
push
cld
cltd
in
iret
js
pop
sbb
movsb
out
dec
es
movsl
fwait
xchg
into
sbb
nop
hlt
addb
inc
lret
fcomps
jb
jb
xchg
sub
aam
or
xchg
push
push
mov
cmpl
and
pop
mov
xchg
push
es
sti
scas
pop
push
je
mov
pop
cmp
xor
mov
xor
mov
fiaddl
fwait
aam
lock
test
sbb
cmpsb
arpl
js
insl
pop
inc
jle
and
stos
cltd
test
enter
loope
nop
push
add
imul
cmp
cmpl
hlt
and
sbb
insl
lea
loop
add
sub
mov
fidivs
or
cld
add
xchg
sbb
testb
popf
and
cmp
push
cwtl
popa
push
jge
dec
fs
or
jbe
cmp
mov
mov
fdivl
xchg
shll
cmp
push
sbb
sub
mov
fisubl
jecxz
fisubrs
stos
dec
js
push
outsb
iret
adc
xor
ss
dec
in
sbb
sbbb
in
jmp
cld
cmp
sbb
sbbl
mov
jno
lock
int3
or
and
ljmp
sub
mov
ss
cmp
and
fisubl
or
xchg
cmp
push
jle
and
jl
enter
fdivrp
adc
pusha
scas
popf
lcall
pop
rorb
std
movsl
cmc
sbb
mov
xchg
into
into
mov
movsb
mov
xchg
out
idivl
insl
mov
mov
in
pop
mov
add
cltd
jmp
jns
lret
mov
mov
cmc
xchg
outsl
out
mov
subl
jmp
lret
push
mov
repz
inc
stc
sahf
push
loop
sti
sub
fsts
hlt
mov
aaa
imul
leave
lret
es
xor
aam
scas
das
mov
xor
inc
dec
or
lret
popa
es
out
loopne
lahf
adc
mov
mov
ja
xchg
ret
js
xchg
or
adc
pop
mov
lods
in
arpl
into
jl
in
sbbb
test
aam
popa
jbe
dec
loopne
fildl
adc
insl
xor
stos
jne
in
jne
scas
outsb
mov
add
subb
and
or
nop
jno
mov
ret
cmpb
std
sti
repnz
cmp
test
mov
sbb
test
ret
out
rcr
stos
push
sbb
xchg
orl
push
xor
scas
push
and
fwait
mov
add
or
xchg
cli
fucomi
mov
jl
pushf
xor
mov
push
or
int3
aas
enter
mov
dec
pop
je
or
test
push
xchg
daa
mov
pop
pop
mov
sub
pop
add
xor
add
repnz
mov
adc
vmwrite
in
push
jno
xchg
xchg
leave
pop
and
sahf
xchg
and
nop
sub
fisubrl
mov
sahf
push
gs
lods
jne
icebp
outsl
push
sub
cmc
add
xchg
mov
inc
les
addr16
pop
jl
pop
int3
std
loope
iret
or
int
jo
mov
cwtl
xor
mov
lods
xlat
or
dec
loopne
das
mov
cmovnp
into
cmp
mov
arpl
sub
mov
xchg
dec
jecxz
jb
adc
adc
mov
insb
nop
loope
xor
insb
imul
repnz
sti
mov
push
lahf
ljmp
out
xorb
cs
push
out
daa
jbe
sub
cmp
xchg
push
or
scas
and
inc
fnstsw
daa
and
nop
dec
push
sub
call
and
cwtl
scas
jmp
push
jl
xchg
cltd
sbb
test
test
mov
enter
shll
adc
jns
lods
cmp
and
sahf
arpl
adc
mov
js
aaa
cwtl
shl
and
sub
mov
pop
xchg
add
stc
sub
aas
lods
mov
and
das
test
jg
jne
nop
imul
repz
mov
cmp
les
mov
mov
inc
jb
fimuls
cld
mov
or
pop
or
mov
dec
mov
movsl
sub
jecxz
orl
mov
mov
xchg
pop
mov
pop
insl
jno
jne
mov
data16
aad
or
addr16
inc
stos
and
cmp
pop
pop
or
lret
in
aaa
sbb
outsb
mov
xchg
dec
push
int
enter
mov
bnd
dec
inc
cmp
insb
pushf
or
jb
sub
inc
hlt
jmp
out
mov
ja
call
or
pop
jne
out
lock
popf
aad
fidivl
pop
ret
lret
mov
fsubp
cmpsb
jmp
shr
xor
mov
rdtsc
imul
out
push
mov
push
ss
movsl
stos
lods
mov
sahf
leave
push
ja
pop
cmp
jb
sbb
popf
adc
push
xor
mov
jmp
push
or
mov
fdivl
mov
jecxz
orb
adc
aad
dec
mov
add
dec
outsb
pop
iret
or
lock
hlt
hlt
xlat
and
mov
pop
lret
pop
sbb
or
jbe
hlt
lock
int3
mov
in
sbb
stos
rcl
mov
cmpsb
pop
mov
test
ds
mov
or
mov
jecxz
adc
hlt
push
fmul
mov
inc
pop
or
sarb
push
mov
pop
xchg
fdivrs
sub
insl
test
xor
cli
xor
mov
sbb
push
leave
jp,pt
mov
pop
lods
sub
sbb
les
insl
jo
or
loope
adc
or
cld
cmc
add
ffreep
pextrw
and
adc
add
mov
xchg
call
fdivr
call
dec
movsb
jecxz
adc
decl
icebp
add
sbb
push
mov
push
cs
cmc
faddl
jecxz
lret
inc
mov
movsl
out
mov
mov
xor
aad
fidivs
ds
aaa
popf
xchg
insl
inc
jmp
xor
or
or
out
push
in
lcall
popa
adc
mov
pop
jbe
pmulhuw
pop
outsl
dec
mov
mov
mov
insl
stc
mov
sbb
test
pop
xchg
cmp
mov
jno
pop
jbe
lahf
mov
outsb
jo
and
mov
cmpsl
lds
xchg
pop
pushf
aaa
and
sbb
pushf
sarl
sub
dec
inc
or
jns
cltd
cmp
cmpsl
sub
ss
mov
xor
jns
jb
leave
dec
mov
push
inc
and
loop
std
add
xchg
cli
insl
jb
ja
mov
mov
popf
cmc
lods
sarb
pushf
in
mov
jl
insb
sbb
cmp
sub
sbb
or
cld
in
popf
fsubrl
lods
fstpl
insb
sbb
cmp
sub
sbb
or
cld
out
popf
int3
lods
int3
mov
pushf
in
std
js
insb
sbb
cmp
xor
jns
mov
cltd
push
test
mov
cmp
imulb
movsb
and
adc
add
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
