add
add
jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
jmp
ret
mov
gs
pop
or
add
or
add
push
pop
pop
add
add
pop
add
sahf
add
mov
add
ja
cmp
or
add
lcall
add
mov
add
xchg
xchg
xchg
adc
or
mov
add
add
add
add
inc
add
xchg
add
add
xor
mov
push
add
add
str
add
lret
add
add
add
fwait
add
add
lret
add
add
lret
add
add
add
add
add
rolb
lret
add
fwait
add
add
add
add
xchg
add
add
add
or
imul
add
add
test
or
imul
add
add
sub
add
add
jo
lret
add
jp
or
mov
lret
add
add
add
add
add
xchg
add
add
xchg
pop
add
lret
add
add
add
add
add
add
add
add
xchg
add
add
into
add
add
add
pop
add
add
add
add
add
pop
add
add
dec
add
add
push
fwait
add
add
add
add
add
add
add
into
add
mov
lret
add
add
mov
mov
faddl
sbb
mov
add
add
add
str
add
filds
push
dec
add
add
mov
mov
add
add
hlt
add
add
add
add
out
mov
loope
lret
add
add
faddl
flds
icebp
add
add
lods
add
inc
add
add
call
add
add
cmp
or
add
inc
add
add
mov
dec
add
mov
sbb
add
add
dec
add
add
mov
add
add
add
add
mov
data16
add
test
into
add
xor
mov
lret
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
ss
add
add
add
or
movsb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
jo
jb
test
fildl
jge
inc
add
adc
lret
or
imul
lret
add
add
add
add
add
add
or
data16
add
add
dec
add
outsl
add
add
add
add
add
or
add
lret
add
add
inc
add
add
adc
movb
add
add
lea
ja
add
add
lret
add
pusha
add
add
roll
mov
outsl
add
add
add
add
add
aad
mov
ds
add
add
sahf
add
add
add
inc
add
add
add
add
add
pop
cmp
push
jge
xchg
loop
pop
pop
fldt
negl
xor
cmp
mov
jb
mov
ret
cltd
out
xor
decb
es
inc
jge
lock
cmp
mov
stos
xchg
xchg
fildll
sub
xor
pop
pop
jge
push
add
loope
test
xchg
pop
test
xlat
rolb
stos
fdivp
mov
test
mov
pop
lods
test
lcall
sti
out
pop
add
rol
pop
add
xor
movsb
sub
call
sub
pop
jmp
xor
pop
repnz
clc
je
arpl
inc
xchg
leave
into
pop
jecxz
nop
cli
xor
sub
in
add
call
mov
jnp
iret
sbb
jae
add
in
fnstsw
andb
in
cmpl
mov
pop
ror
pushf
hlt
jmp
cmp
push
pop
dec
xor
cmpsl
xchg
sub
sbb
mov
inc
mov
mov
jns
insl
jmp
sub
test
icebp
lods
cmp
fs
pop
arpl
cmpsl
arpl
or
mov
lcall
loop
push
data16
or
cmp
cmpsl
cld
xchg
cmpl
sub
inc
lds
pop
sub
jb
sbb
inc
xor
push
fimuls
loope
dec
cmpsl
push
or
sbb
cmpsb
jne
sbb
xor
inc
xchg
adc
mov
jae
das
or
dec
xchg
sahf
jnp
jg
push
xor
lcall
aas
adc
push
shlb
fadds
out
daa
push
xor
mov
or
test
mov
ja
dec
into
and
int3
ds
inc
imul
add
rcr
sbb
mov
ds
xchg
lret
gs
and
test
push
push
sbb
nop
dec
jae
addr16
push
rorl
pop
bnd
mov
mov
insb
xor
jb
mov
push
cmp
or
sbb
cwtl
in
xor
mov
mov
xchg
popf
adc
cmpsl
cld
lahf
mov
or
fsts
mov
lock
add
pop
out
cmp
clc
jbe
fidivrl
leave
adc
int
and
dec
or
stc
cmp
in
xchg
mov
xchg
cmp
add
push
sbb
xor
mov
pusha
insb
add
sbb
push
push
ss
arpl
gs
inc
addl
inc
inc
inc
push
daa
cmp
and
js
leave
sbb
imul
inc
jb
out
jns
push
jmp
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
inc
xchg
ret
dec
loop
sub
mov
sbb
inc
hlt
jae
ficoml
test
mov
shrb
js
dec
loop
xchg
sub
sbb
inc
clc
adc
fcoms
lret
add
mov
cwtl
shlb
js
push
loop
xchg
xor
add
inc
ret
pop
fdivs
imul
fimuls
mov
cmp
rcrl
mov
arpl
jge
xor
gs
ret
xchg
mov
cmp
mov
fsubr
sub
fcmovbe
push
xchg
ret
std
pop
cmpl
or
cmp
push
insl
adc
and
popf
pop
lods
mov
addr16
adc
dec
push
push
push
push
mov
pop
jae
mov
repnz
push
inc
and
sub
das
push
cmp
mov
mov
mov
clc
and
push
mov
frstor
addr16
dec
addr16
jb
dec
fs
lods
jmp
out
enter
int
ja
mov
pop
loop
xchg
sub
add
inc
loopne
shll
adc
and
cmpsb
or
lods
pop
sarl
push
cmc
fs
jne
xor
mov
lds
pop
mov
lea
cmpl
pop
out
mov
fidivl
das
cltd
or
xlat
in
std
movsb
sub
sbb
roll
mov
mov
clc
jb
fcoms
test
mov
shrb
js
dec
loop
xchg
sub
sbb
inc
clc
jb
fcoms
test
mov
shrb
jg
mov
loope
testb
in
jne
mov
adc
subl
xor
pop
mov
mov
repnz
mov
jmp
jmp
push
out
shll
sub
cmpsl
ficomps
test
enter
add
mov
mov
cmpsb
jne
scas
sbb
push
adc
popa
xchg
pop
adc
cmp
push
iret
push
and
add
add
ds
mov
leave
aaa
push
sub
sub
adc
add
mov
lods
in
into
xor
dec
fstps
test
andl
or
xchg
push
push
cmp
data16
inc
dec
dec
push
jo
adc
aad
notl
add
addl
xor
xchg
test
jbe
fsubs
idivb
gs
aas
movsb
and
in
fs
add
sub
adcl
lea
sbb
mov
xor
rorb
jnp
loope
in
and
test
jmp
cmpsb
adc
xor
push
pusha
stos
push
cld
leave
divb
pop
cmp
mov
sahf
adcl
fs
movsb
dec
mov
cmpl
add
fs
dec
arpl
or
push
negl
and
addr16
xchg
pop
call
test
lock
lret
cli
loop
out
cltd
in
pop
out
daa
lret
jae
std
pop
sbb
ljmp
int3
out
loope
lea
div
jmp
mov
sbb
mov
jae
loopne
dec
ret
pop
push
mov
push
dec
sub
inc
rclb
push
mov
dec
fs
xlat
mov
clc
xchg
rcll
lret
push
arpl
test
push
jb
xchg
pop
push
mov
xchg
stos
push
lds
out
cmpb
mov
push
sahf
mov
pop
pop
aam
sahf
in
shll
and
arpl
subb
std
cmc
lcall
lock
imul
add
add
clc
and
jbe
ret
pop
sbb
call
into
push
je
loop
mov
ljmp
jl
pusha
inc
sub
popa
mov
xor
lea
daa
mov
jnp
and
stc
dec
cmpsb
loopne
cltd
mov
push
out
and
test
sarl
xor
and
shll
fistl
pop
sub
cmp
inc
push
popa
imul
jmp
outsb
mov
or
fstpl
jb
aad
inc
fcomps
push
shll
xor
push
add
cmp
outsl
aam
insb
xchg
ja
push
cmp
and
sub
sub
pop
hlt
rol
aam
cmp
pusha
xor
sub
adc
sahf
and
fidivs
jle
daa
sbb
cmpsb
or
dec
aas
mov
adc
movsl
hlt
in
xor
test
cmp
outsl
arpl
addr16
mov
test
sbb
and
adc
ret
sti
push
loop
insb
aaa
sub
fists
mov
jae
lahf
mov
das
inc
dec
jb
xor
inc
and
in
bound
add
nop
mov
inc
outsb
lret
pusha
xchg
sti
popa
lock
in
adc
sahf
dec
pop
aam
adc
pusha
push
pushf
fidivs
popa
loopne
aaa
xchg
pop
repz
fdivs
adcl
inc
cmpl
dec
pop
std
adc
je
jl
repnz
xlat
mov
shll
mov
mov
pop
cli
cs
test
xchg
outsb
adc
jle
iret
clc
sahf
xchg
cmp
push
pop
xor
dec
add
jg
push
cmp
cmp
push
sub
xchg
scas
icebp
stc
fstl
in
mov
jbe
dec
shl
xor
and
xchg
shrb
xchg
fs
aaa
xor
cmc
mov
push
pop
cmp
pop
cmp
xlat
jb
mov
sub
scas
hlt
jle
mov
cltd
add
rcrl
sbb
and
mov
test
inc
jmp
push
push
cmp
push
xchg
repnz
push
jno
xor
pop
scas
ficomps
cmc
lea
mov
nop
sub
cmpl
repz
mov
push
lea
imul
inc
scas
mov
out
aaa
jp
jbe
dec
adc
push
out
fdivp
into
andb
mov
dec
push
cmp
ds
mov
adc
mov
xor
add
aas
jle
dec
dec
ds
inc
ds
xchg
int
add
xchg
jl
ds
adc
xor
not
lods
pop
mov
adc
lahf
ret
cmc
insl
int
shll
fwait
cs
movsl
pop
sti
xor
cmp
das
and
pop
rol
mov
in
jne
jle
mov
cmc
sbb
shll
fimull
insl
loope
sbb
mov
les
sar
jecxz
iret
push
jle
push
mov
div
mov
out
cmp
and
lea
jl
mov
adc
and
sarb
insl
dec
divl
shll
xor
inc
aad
pop
ss
mov
aam
pop
jg
in
dec
das
pop
pop
push
xchg
dec
dec
push
adc
sbb
jp
lock
pusha
sbb
jp
or
popf
jp
sub
sahf
pop
push
adc
push
inc
cmp
push
adc
cltd
std
insl
call
clc
ljmp
jle
mov
and
and
dec
test
mov
lret
cwtl
enter
push
mov
leave
stos
cmp
sub
ret
shlb
mov
sbb
fisubl
adc
in
mov
jge
stc
movsl
icebp
mov
mov
pop
cltd
rolb
jecxz
sbb
inc
sbb
jg
jg
cltd
bound
inc
or
stc
addr16
xor
dec
push
outsb
lods
addr16
xchg
push
sbb
js
and
push
imul
imul
jne
in
jnp
cmp
cmpsb
pop
test
pop
vmovq
loope
fnstsw
push
lcall
dec
subl
adc
jge
dec
push
push
push
outsb
sub
test
lret
iret
das
stos
repnz
ja
int3
cs
rorb
aas
sub
cmpl
cltd
shl
cmpsb
out
lods
add
dec
lret
imul
mov
lahf
mov
lods
movsl
cmpsl
loopne,pn
push
mov
adc
aas
dec
dec
jecxz
pop
add
or
ds
fwait
and
xchg
out
inc
push
sbb
es
xchg
xor
mov
cmp
and
out
pop
adc
xchg
jns
mov
push
mov
jo
pushaw
int3
pop
mov
mov
jmp
mov
pop
js
cmc
clc
mov
sar
push
jle
std
sbb
add
aaa
movsl
shlb
das
fwait
mov
cmp
xor
xchg
push
shlb
push
divl
xor
jle
sbbb
jno
inc
std
mov
pop
js
les
cmc
loope
add
repz
je
int
gs
movsl
pop
inc
sbb
sarb
sub
lods
nop
les
jae
mov
in
arpl
imul
add
mov
sbb
xchg
sbb
js
fsubrl
enter
into
popa
clc
pop
xor
test
jecxz
adc
outsl
out
jne
mov
mov
pop
inc
in
push
or
aam
push
pop
sub
ljmp
lea
xor
xchg
lds
subl
lods
dec
mov
xchg
push
bound
jae
adc
loop
cmp
pop
dec
push
aas
add
jns
stc
test
add
jmp
or
or
addr16
cld
fidivrl
mov
cld
adcb
in
daa
adc
movsl
test
fs
popf
pop
rcll
fldl
aam
fistpll
jae
aam
lods
mov
jbe
into
negl
mov
test
adc
sahf
lock
xchg
stos
mov
jge
lods
cwtl
pusha
xchg
mov
loope
movsl
std
fisubrl
xchg
clc
and
xor
lea
movsb
fs
jecxz
pushf
rcrl
cwtl
dec
aad
jne
loop
ret
cmp
popa
push
pop
testl
jbe
pop
in
and
setp
stos
and
sbb
stc
mov
gs
cmp
cmc
sub
lcall
pop
cmpsb
xor
fists
inc
jecxz
test
cli
addr16
in
sbb
mov
nop
fnstsw
outsl
push
sub
adc
jmp
bound
ret
xchg
aas
inc
icebp
pop
adcb
stos
jp
stc
xchg
add
mov
mov
jnp
cmpsb
bound
jle
jge
jmp
pop
sahf
mov
andl
into
fs
mov
xor
xor
shlb
loop
lret
push
fdivrp
sub
js
inc
cmpsl
repz
adc
fadds
pop
jmp
cmp
popw
inc
stos
ljmp
cmp
mov
mov
sbb
mov
add
or
sbb
mov
mov
rcll
sahf
mov
dec
dec
hlt
push
arpl
jno
push
jp
testl
outsb
inc
add
cmp
xchg
or
lcall
les
xchg
dec
pop
aaa
popf
pop
push
lcall
dec
and
je
lahf
addr16
pusha
loope
xchg
pusha
inc
imul
sbb
das
pop
pop
dec
push
push
rorb
mov
sti
fstp
das
scas
sbb
stc
push
dec
or
call
xchg
cmp
or
jmp
jno
sub
test
xchg
pop
fwait
sub
push
or
push
ljmp
or
movsb
test
sbb
loopne
aam
cmc
data16
add
jns
sub
outsb
test
inc
push
pop
xchg
inc
mov
push
adc
or
test
out
je
movsb
push
push
leave
ret
out
cld
push
sbb
rcl
clc
push
sbb
push
push
sbb
int3
jmp
push
insb
mov
call
pop
inc
cltd
test
sbb
dec
and
enter
mov
sbb
popf
mov
fidivrl
push
jne
sti
sarl
stos
test
fsubs
fstl
adc
sub
jbe
lods
cmp
clc
jmp
mov
imul
push
or
mov
incb
mov
jp
das
lock
nop
mov
and
stc
mov
mov
jle
and
pop
mov
pop
sub
xor
movsl
lcall
jg
out
inc
add
mov
inc
mov
push
sub
sub
mov
mov
xchg
movsl
lds
push
jb
in
mov
adc
sub
push
mov
and
jne
inc
out
shll
or
adc
inc
pop
ljmp
imul
jbe
jne
mov
cld
mov
xor
pop
inc
xor
js
xor
idiv
test
jb
cs
ja
mov
loopne
cli
push
add
scas
int
mov
popf
jae
mov
outsl
pop
lods
inc
sbb
mov
aaa
arpl
pop
add
cmpsl
pushw
lea
push
into
xchg
dec
xchg
rorb
mov
enter
sub
mov
imul
ret
iret
fildl
ret
xor
sbb
aad
popf
mov
lret
sahf
or
test
jg
mov
flds
cmpsl
adc
pop
outsb
add
jae
jl
inc
lods
int3
jbe
inc
call
into
jns
cmp
fisttpll
cmp
outsb
outsb
or
pop
add
push
cmpsb
inc
add
push
es
xor
test
mov
repz
into
mov
mov
xlat
dec
stos
jg
mov
insl
js
test
jg
cltd
jg
lds
call
sahf
aas
dec
mov
in
sbb
push
cs
fbld
jo
repnz
xchg
in
mov
imul
dec
shl
and
fisubrl
fwait
ja
inc
add
mov
sahf
loope
jl
gs
dec
jp
mov
jo
cmp
mov
std
pop
daa
in
sbb
sub
stos
addr16
cs
mov
cmp
mov
mov
pandn
stc
je
dec
pop
cli
push
in
dec
or
scas
add
cmp
cmp
mov
add
and
add
fwait
mov
insb
mov
mov
xchg
stc
ja
adc
jno
ljmp
or
sub
push
pop
pop
outsl
ret
fdivrs
in
repnz
jnp
sub
lods
lret
mov
shl
clc
cmp
xor
sub
daa
jg
je
xor
mov
sub
pop
xor
or
jne
int
cmp
int3
sbb
and
inc
inc
mov
and
int3
cmp
mov
mov
cmp
push
fildll
pushf
fimull
jg
jns
loop
xchg
and
xchg
xchg
inc
cwtl
es
mov
jl
inc
aas
mov
push
es
mov
rcll
adc
stos
dec
jl
cmpsb
push
cmpsl
mov
adc
fs
lret
aad
adc
mov
insl
flds
into
sbb
aaa
popf
bound
sahf
les
lret
sbb
lock
and
ds
mov
sahf
lcall
xchg
dec
and
movsl
push
sti
into
xor
mul
jmp
push
mov
hlt
stc
dec
daa
sub
dec
das
or
adc
inc
inc
mov
into
or
adc
mov
cld
jle
js
jl
cwtl
inc
and
fdivr
mov
dec
into
scas
pop
push
loop
loop
fiadds
decb
cmc
push
fldl
pop
push
imul
stos
jge
mov
or
ss
jl
mov
push
xor
cmpsb
outsl
adc
sti
mov
cwtl
or
mov
pusha
add
in
movsl
sbb
jb
dec
push
push
sub
aaa
mov
add
repz
sub
dec
mov
and
or
push
push
pop
pushf
xor
push
xor
ja
idiv
insl
mov
out
add
mov
ret
nop
movsb
dec
loop
movl
out
stos
cmp
or
movsb
jl
mov
mov
and
pop
mov
stc
mov
jp
out
lahf
int
arpl
jg
or
cmc
idivl
dec
fucomi
push
dec
jge
mov
sbbb
imul
push
push
bound
xchg
test
fwait
icebp
xchg
in
stos
cmp
mov
xor
jo
hlt
jo
out
dec
add
sub
cltd
leave
pop
xor
popf
xchg
scas
out
outsl
stos
push
xchg
cmp
pop
pop
push
jmp
push
sub
cltd
int3
fimuls
jg
lods
mov
push
pop
mov
push
repz
imul
adc
enter
cmpb
bound
nop
iret
das
push
xchg
dec
xchg
rclb
inc
push
jbe
enter
fcomps
push
push
mov
jbe
mov
leave
ljmp
mov
xchg
lahf
mov
add
icebp
fldenv
pop
sub
out
jl
xor
jg
js
xor
mov
lods
mov
iret
sub
inc
out
fs
test
and
add
jmp
repz
js
popa
bound
int3
push
sbb
and
or
popa
sbb
lods
stc
pop
gs
sahf
adcl
into
test
push
insl
lret
adc
scas
ret
push
aaa
imul
xchg
cld
loope
test
mov
xchg
daa
lret
add
push
sahf
je
aam
pop
cwtl
sub
pop
push
pusha
or
int
pusha
lods
push
dec
js
and
loope
sub
inc
mov
shr
mov
or
pop
ds
fsubrp
frstor
jns
cmpsb
jmp
mov
fstps
and
mov
scas
push
out
popa
push
mov
in
pop
add
stc
and
inc
into
jb
icebp
popf
sbb
xchg
imul
jns
jns
daa
cli
mov
xor
push
mov
cld
push
insb
mov
mov
jns
dec
pusha
cmpsl
pop
mov
mov
rolb
subb
shlb
pop
fidivl
sahf
jno
sub
sbb
mov
mov
inc
adc
push
aad
cwtl
outsb
add
gs
ret
add
inc
pop
pop
std
inc
mov
inc
xor
js
dec
lock
sbb
decb
push
hlt
push
mov
dec
pop
add
ret
pop
jp
idivb
mov
movb
jbe
repz
add
jbe
adc
mov
mov
fisubs
iret
lods
dec
addr16
pushf
cltd
clc
lock
fwait
mov
in
testl
push
out
call
ss
cmp
dec
and
add
or
inc
xor
xchg
loope
cli
jne
and
popa
outsl
mov
pop
jae
inc
repnz
jmp
fmuls
inc
js
test
push
or
outsl
in
subl
into
xchg
pop
push
push
dec
outsl
test
popf
lea
pop
adc
or
push
test
or
sbb
push
jg
adc
cmp
sub
lcall
and
pop
scas
adc
and
fistl
aas
es
jb
jns
cmp
leave
and
lods
test
sti
push
fcoms
rcl
sub
iret
pop
push
and
dec
gs
aas
bound
aas
stos
das
mov
cmp
movl
mov
sub
repnz
jnp
sub
orb
loopne
mov
pop
mov
push
cmp
push
adc
popl
adc
push
popa
inc
inc
and
fprem1
popa
inc
and
push
or
jmp
dec
pop
imul
out
popa
ja
jb
add
ss
pop
ss
add
push
xor
and
test
fimuls
cmp
push
daa
xor
sub
mov
push
imulb
xchg
aad
push
jae
mov
mov
or
outsl
push
sub
sahf
cmp
lahf
scas
stc
and
arpl
out
pop
out
movsb
stos
stos
push
dec
std
sbb
popf
sub
jne
jae
call
jmp
sbb
adc
sub
mov
scas
add
mov
mov
and
add
js
or
repnz
xor
mov
fldt
dec
xor
dec
push
cwtl
mov
lods
xor
inc
xor
mov
mov
pop
push
in
push
sub
add
jne
test
mov
shrl
sbb
loopne
rcl
mov
aad
mov
jnp
cs
in
aad
mov
daa
mov
sbb
pop
incb
fcmovnbe
pop
fwait
addl
nop
add
mov
pop
inc
push
jns
cmp
inc
mov
out
push
xchg
popa
jnp
lahf
xor
mov
dec
ret
push
leave
xchg
sbb
clc
mov
fsubrl
and
divl
push
xchg
insl
cmp
xor
in
mov
mov
lock
jnp
push
mov
js
movsb
dec
jbe
sbb
jl
rcl
or
aad
ss
mov
cmc
inc
mov
push
or
jle
push
ss
int
and
pushf
int
in
pop
shll
loope
fisttps
xor
scas
inc
push
xor
lahf
mov
popa
js
adc
bound
cmp
xor
push
in
int3
sub
push
mov
jge
mov
mulb
sbb
fsubl
cmp
and
jae
jmp
xor
mov
sbb
dec
push
sti
sbb
imul
insl
push
stos
popa
jl
data16
in
ficoml
hlt
dec
pop
push
and
cli
loope
js
imul
mov
mov
xor
sbb
jge
ds
sub
popl
inc
mov
mov
jmp
push
push
mov
jg
sbb
loop
popf
push
loope
inc
mov
xchg
and
push
add
xor
js
mov
xchg
enter
fldt
jno
loope
sti
push
ret
mov
push
movsb
mov
movsl
orb
int
sub
inc
addr16
lahf
mov
xchg
hlt
sbb
cmpsl
inc
inc
dec
ret
scas
add
push
or
repnz
test
push
rorl
xor
pop
and
fwait
mov
js
mulb
addr16
int3
test
mov
cmovp
push
inc
scas
lds
mov
fstps
popa
push
mov
test
jo
jne
jnp
xor
outsl
aam
dec
ror
loopne
inc
push
aas
cli
sub
into
xchg
lods
in
repnz
mov
jmp
jl
push
imul
jge
add
xchg
addb
bound
cmp
jns
mov
cmpsl
loop
xchg
sub
sbb
inc
clc
jb
fcoms
test
mov
shrb
js
dec
loop
xchg
sub
sbb
inc
clc
jb
fcoms
test
mov
shrb
js
dec
loop
xchg
sub
sbb
inc
clc
jb
fsts
test
mov
shrl
js
dec
loop
xchg
sub
sbb
inc
push
fmul
bound
int
frstor
not
out
xlat
repnz
popf
sti
loope
xorb
addr16
push
push
inc
add
push
daa
and
xor
aad
shl
rcl
repnz
ja
addr16
push
mov
add
daa
and
xor
fcomi
lret
out
xlat
ljmp
xchg
movsl
xchg
pop
inc
push
and
pop
jo
jns
je
test
scas
scas
mov
outsb
mov
mov
sahf
sahf
aas
jbe
out
aaa
sub
outsl
loop
loop
inc
mov
and
jnp
mov
lods
cwtl
popf
inc
jg
mov
pop
mov
ljmp
xchg
daa
mov
stos
rolb
lods
ljmp
push
daa
mov
ret
jns
cmpsl
adc
cmpsb
dec
std
mov
jbe
cmp
xchg
inc
fldenv
fildl
and
xchg
aas
push
cs
mov
sub
jb
test
adc
scas
pop
lret
jb
push
jg
aas
mov
outsl
inc
lahf
cltd
ret
lods
xor
scas
jae
ret
je
pop
xor
add
shl
loop
in
xchg
mov
cmpsl
mov
ja
addr16
imul
or
and
sub
repz
xchg
xchg
out
dec
mov
push
push
data16
sbb
outsb
je
inc
inc
outsb
push
dec
ret
addb
cld
jmp
mul
inc
cmp
push
daa
add
and
popa
es
inc
xor
mov
scas
xchg
xchg
cmpsl
mov
ja
bound
inc
add
adc
and
xor
ret
out
xlat
repnz
ja
bound
inc
add
adc
and
xor
ret
mov
ret
mov
and
ljmp
dec
xchg
xchg
or
xorl
cs
xchg
or
orl
inc
xor
dec
push
das
and
das
outsl
mov
das
test
mov
daa
jo
test
test
insl
mov
mov
cmp
inc
push
repz
fsubr
dec
mov
dec
scas
adc
data16
je
mov
xchg
mov
push
fucomi
jmp
jl
daa
lcall
fisubrs
into
jnp
add
mov
mov
sbb
mov
dec
test
inc
fs
sub
mov
movsl
insl
push
out
repnz
push
cmpsb
icebp
adc
jge
lcall
sbb
call
mov
neg
fdivl
jne
jbe
ljmp
mov
push
or
sub
pop
addl
ret
fisttpl
aas
add
mov
cwtl
loopne
aam
pop
jne
ret
xor
mulps
test
cmpsl
and
add
jae
dec
sub
leave
mov
cmp
mov
fidivrs
and
movsb
je,pn
cmp
pop
notl
mov
into
pop
test
cmp
dec
cli
test
inc
adc
sub
test
pushf
or
push
jae
adc
push
hlt
stos
movsl
jnp
jnp
fdivrl
add
push
xchg
imul
rcll
negb
pop
lds
dec
test
push
push
mov
and
pop
sub
idivb
mov
inc
sub
out
xchg
addl
bound
out
loop
jb
xchg
and
iret
and
xchg
call
sub
mov
int3
mov
cmp
push
aas
inc
jo
insl
add
xchg
cmp
stc
pop
arpl
lds
jo
mov
add
mov
sub
or
xchg
and
sbb
jle
cmp
rep
sbb
xchg
sahf
and
stos
and
inc
repnz
mov
sbb
xor
pop
xor
add
sbb
jae
mov
xchg
cmpsb
loop
xchg
jge
sbb
mov
xchg
testl
loop
ljmp
lahf
push
cli
aam
jp
mov
scas
cli
jge
je
xchg
adc
fnsave
out
fnsave
repnz
dec
data16
loope
movsl
incl
xchg
addr16
or
adcb
shr
jmp
loopne
das
xchg
test
gs
or
bound
and
cmc
call
mov
adc
fwait
inc
or
sub
imul
out
mov
cmp
cltd
add
xchg
adc
lods
nop
adc
scas
outsb
add
jno
xor
sti
add
or
mov
imul
scas
arpl
push
sub
popf
je
imul
jb
call
bound
insb
sub
nop
mov
shlb
and
cmpsl
lret
out
pop
pop
lods
or
sub
into
icebp
xor
mov
aad
add
jno
loope
mov
mov
mov
int
movsl
cs
stos
sub
imul
jno
sbb
pop
inc
adcb
shrl
xor
stc
mov
out
es
xor
fs
xchg
pushf
outsl
int
sub
in
adc
pushl
or
push
jnp
ljmp
fisttps
hlt
das
data16
insb
je
sub
dec
pop
or
dec
sub
mov
sbb
or
xor
sub
adc
aas
and
aaa
mov
jg
pop
test
lret
stos
imul
jns
adc
enter
sbb
scas
cmp
inc
fs
aad
or
xor
mov
xorl
mov
add
mov
pop
jnp
mov
std
movsl
sub
xchg
imul
cs
mov
mov
lods
pop
and
adc
jo
mov
enter
repz
sub
fidivrs
jle
cmp
inc
jb
xchg
jae
cli
mov
out
mov
daa
clc
cmp
mov
cmp
jg
in
sub
rorl
xor
lock
adc
dec
jnp
sub
xchg
sub
push
add
mov
or
pop
rorb
movsb
pushf
pop
loope
cmp
lods
int3
les
icebp
std
xchg
push
adcb
sub
icebp
pop
xor
mov
out
sub
mov
inc
xor
ljmp
xchg
dec
sti
jbe
pop
lea
ja
in
dec
cmc
jns
ss
xchg
leave
stos
testl
sbb
outsl
test
cltd
je
xor
jb
into
jecxz
mov
int
jne
fwait
xchg
inc
inc
cmp
iret
adc
loope
sub
sbb
cmp
fsubrl
inc
movsb
ljmp
popf
jle
mov
adc
mov
pop
push
addr16
pop
fisttpll
sarl
stos
push
dec
fisubrs
mov
sbb
push
adc
sbb
fdivrp
cmp
jne
xor
in
and
cmp
cmp
mov
rclb
sub
xor
dec
sbb
mov
fadd
arpl
sub
imul
or
loop
sbb
adcl
lahf
mov
jne
mov
push
sbb
xor
sub
xchg
add
mov
and
dec
add
shl
shr
clc
mov
sub
push
or
add
xorb
adc
sarb
xchg
rcll
xor
sti
stos
inc
pop
add
bound
push
xchg
js
in
xchg
jb
fsts
pop
dec
popf
fwait
inc
xchg
jge
jns
loope
popf
pop
pop
sub
xchg
jp
call
inc
push
xchg
dec
sahf
and
in
sub
outsl
aaa
or
loopne
mov
xor
mov
shr
in
mov
jmp
movsb
mov
scas
xor
fisubl
sub
repz
lds
xor
mov
imul
rcl
jmp
pop
jne
add
adc
outsl
fwait
dec
and
jl
pushf
jl
das
addr16
or
jbe
sbb
ret
and
mov
addr16
sub
mov
loope
mov
jl
push
adc
xlat
xchg
xchg
insl
mov
lret
rorb
pusha
lret
decl
or
xchg
mov
or
mov
mov
push
dec
fwait
sbb
pop
lcall
mov
lret
enter
sub
adc
lds
test
xchg
sbb
push
xchg
lock
mov
mov
rorb
sbb
cli
dec
mov
imul
ds
dec
lret
sbb
int3
xchg
pop
fwait
je
cmp
jmp
es
outsl
cs
lds
xchg
dec
rcrl
dec
decl
in
cs
dec
or
or
std
test
icebp
int3
fisttps
repnz
lock
xor
or
popf
mov
or
mov
jmp
sub
std
rol
pop
scas
sub
in
xor
mov
sub
xchg
iret
mov
jmp
rcr
mov
hlt
sub
dec
mov
sbb
jp
push
sub
add
fnstsw
push
cmp
ja
dec
cli
mov
pop
ljmp
lods
orb
push
loopne
pop
subb
cmpsb
push
pop
leave
lock
fists
enter
jo
xor
hlt
test
mov
sti
xor
mov
cld
loop
jecxz
cmp
fwait
cmc
test
cmpsl
icebp
data16
xchg
loope
lret
add
or
sub
scas
inc
test
ret
or
mov
jge
push
aad
pop
jmp
mov
cmp
pop
fldt
push
out
loope
xchg
xor
pop
rclb
mov
push
and
cld
sbb
push
pop
inc
adcb
and
jg
xor
and
popf
pop
out
rcll
adc
mov
sub
in
pop
push
adc
sbb
cmp
lahf
cltd
lret
pop
data16
jl
repnz
add
stc
loope
insl
out
sbb
int3
subl
jae
imul
adc
sub
or
out
dec
aas
inc
fwait
ja
cmpsb
aas
popf
push
mov
add
xor
sbb
or
sarl
sbb
mov
push
int3
stos
or
imull
das
movsb
loopne
pushf
xchg
jmp
mov
xor
inc
mov
jl
clc
pop
inc
mov
adc
or
fnstsw
xchg
cmp
xor
inc
push
gs
pop
roll
sahf
fistl
mov
add
dec
icebp
test
sarl
addr16
repz
pop
xor
push
mov
add
insl
adc
xchg
pop
pusha
and
imul
les
inc
pop
mov
sti
je
mov
bound
and
mov
iret
fadds
rcrb
mov
dec
adc
data16
mov
dec
mov
adc
fldl
mov
sbb
test
mov
cld
jbe
or
movsl
lea
pop
movsb
sub
jecxz
loope
jle
dec
mov
sub
movsb
scas
enter
push
jmp
aas
out
pop
test
or
hlt
add
pop
fisubrl
cltd
aaa
test
movsb
mov
out
and
nop
push
mov
data16
push
sub
adc
sub
imull
mov
ljmp
scas
mov
xchg
sbb
jmp
mov
pop
xor
mov
push
mov
pop
loope
subb
cli
negl
fwait
xlat
repz
mov
adc
imul
scas
xchg
dec
lods
add
iret
fisubrs
push
mov
push
mov
pushf
xchg
arpl
inc
push
mov
int3
push
pop
push
jbe
mov
cmpsl
in
test
stos
pushf
or
cld
sarb
adc
or
jb
lods
movsl
fmulp
aam
pop
cmc
push
rorb
inc
xchg
jo
inc
mov
cmc
insl
les
dec
cmp
test
outsl
stc
lea
add
in
mov
sti
aad
repnz
cmp
sbb
dec
lods
push
pusha
movsl
sbb
fs
pop
ljmp
movsl
movsb
xchg
inc
shl
xor
xchg
dec
movsl
lods
jnp
jecxz
cs
fsts
sub
add
jp
outsl
mov
push
and
lock
lcall
mov
jmp
add
lahf
imul
xchg
cld
int3
fst
xor
imul
inc
xchg
mov
push
leave
scas
punpckhwd
mov
test
xor
lahf
popf
jg
sub
cmp
faddl
js
cmp
push
test
adc
xchg
imul
jge
mov
ja
and
dec
test
xor
lods
mov
mov
cmp
std
jecxz
std
jle
lods
adc
mov
mov
ss
xor
pop
add
ss
adcl
dec
sbb
xchg
or
arpl
xchg
gs
mov
leave
push
inc
or
jo
push
pop
xlat
cmp
loopne
out
les
sahf
pop
imul
cmpsl
enter
mov
nop
push
out
dec
jbe
fucomi
test
dec
jl
fwait
test
and
fmul
or
and
adc
andl
push
outsb
test
cmp
subl
lds
pop
xor
mov
pop
mov
das
adc
sbb
push
sbb
loopne
dec
sbb
lods
mov
je
xor
arpl
test
xor
jge
stc
add
inc
fidivl
dec
std
pop
mov
push
jne
mov
mov
insb
add
test
fisubs
push
push
push
cli
test
mov
shll
adc
js
imul
int3
loope
mov
mov
sbb
pop
inc
cld
negb
pop
mov
xchg
leave
test
js
push
add
push
repz
imul
aas
lods
add
jl
fldenv
push
stos
dec
xchg
push
popa
push
sub
lods
sarb
sbb
pop
pushl
jne
stc
dec
lock
jge
ficoms
or
fildll
cmpsb
sbb
xor
cwtl
dec
addb
shrb
pop
jno
and
mul
sbb
ljmp
out
imul
imul
jbe
push
inc
fildl
fidivl
dec
ss
std
sub
scas
mulb
sub
and
shl
rorl
insl
popa
gs
lcall
mov
xchg
addl
ret
imul
push
pusha
sbb
mov
insb
rorb
mov
fbstp
jle
call
or
cld
notl
lret
mov
insl
loopne
outsl
cs
adc
ja
dec
dec
test
dec
adc
loopne
mov
mov
mov
addr16
mov
inc
popf
jo
xchg
ja
cmp
xor
fmul
movsb
push
movb
stos
jno
xor
mov
lds
sub
and
mov
inc
aaa
fwait
adc
push
out
push
hlt
dec
sarb
ljmp
dec
jmp
cmp
std
cmp
xchg
xchg
cld
pop
int
pop
call
sub
mov
mov
push
js
or
or
dec
clc
clc
xchg
addr16
das
xchg
orb
call
mov
pop
ljmp
jno
push
movsb
mov
cltd
jg
aam
and
in
mov
add
es
and
sub
push
mov
mov
sub
arpl
mov
lods
and
test
push
dec
js
sbb
xchg
pop
xchg
mov
movsl
fwait
pushw
inc
sub
testl
ljmp
xor
mov
ret
daa
ret
mov
fbld
dec
xor
mov
mov
das
xchg
push
jo
pop
xchg
push
lods
sahf
gs
mov
int
loope
dec
outsb
repnz
jp
inc
aam
inc
idiv
pusha
movsl
pop
dec
repnz
shll
stc
mov
or
cmp
std
jo
test
insl
fdivrl
cmp
ljmp
jecxz
add
add
orb
subl
jl
inc
mov
xor
insl
ja
add
push
scas
pusha
or
aas
mov
cmp
icebp
adc
sbb
in
mov
push
dec
movsl
mov
andl
pop
cwtl
jne
ss
out
push
scas
push
cmp
pop
jmp
insb
or
mov
out
outsl
mov
mov
mov
test
shlb
divb
call
jnp
fildl
xchg
rcrl
xor
mov
hlt
rorb
add
adc
inc
hlt
lea
cmpsl
mov
xor
push
es
loop
jp
sarb
fsubrl
in
adc
fldt
fwait
andb
jg
aam
out
cmp
cli
jb
out
push
repz
adc
subps
mov
sti
frstor
cwtl
sbb
repnz
sbb
pop
fnstenv
jmp
div
push
mov
outsb
ds
sbb
sub
push
call
mov
jns
mov
imul
loopne
lock
aam
inc
jne
daa
mov
mov
mov
js
lea
cmp
xor
call
mov
lds
xlat
lcall
mov
jmp
xor
daa
xchg
adc
mov
xchg
les
daa
or
mov
add
xchg
xchg
pop
cltd
cltd
cmp
aad
sahf
stos
xor
mov
int3
lea
es
xchg
sub
push
repz
std
pop
cmpb
sti
mov
lds
mov
ret
jecxz
adc
movsb
fimull
sarl
ljmp
loopne
and
cmpsb
and
lcall
sub
xor
adc
pop
or
jae
movsl
clc
mov
xchg
je
sub
shr
das
movsl
loope
rep
mov
leave
xchg
cld
pop
imul
mov
inc
in
outsb
add
mov
in
add
gs
popa
sbb
or
in
dec
sbb
dec
and
sub
daa
adc
arpl
jle
stos
xchg
insb
cmp
jmp
std
test
not
dec
ss
cmp
ret
sub
sarb
push
xchg
std
and
fldenv
mov
mov
and
shlb
inc
jp
testl
sbb
push
jb
in
sbb
cmp
dec
mov
pop
icebp
and
xchg
js
fists
iret
jo
iret
cmp
daa
mov
dec
mov
sti
not
fisttpl
xchg
popf
xchg
data16
out
fs
and
push
lock
xor
push
shll
test
cmpsl
lret
mov
leave
push
sub
dec
mov
loope
lret
jne
cmpsb
dec
repz
push
imul
jbe
hlt
das
popf
test
cmp
dec
and
mov
cltd
sbb
xchg
cld
inc
jb
sbb
add
jne
imul
inc
ret
lahf
ret
xor
jge
inc
dec
notrack
ret
ljmp
inc
mov
mov
mov
bound
cmp
faddp
mov
addr16
jle
push
and
dec
add
out
inc
add
popa
xor
lahf
jmp
xor
cmpsl
dec
pop
or
pop
cltd
into
lds
push
insb
in
fs
push
mov
js
test
loop
xchg
push
sub
pop
sbb
dec
mov
jle
and
xchg
enter
adc
cmp
lahf
push
jne
cli
in
loope
dec
pop
stc
pop
adc
clc
dec
lea
stos
cmp
test
pop
inc
mov
and
pop
or
sti
or
mov
arpl
xchg
fs
push
cmp
jno
je
cld
mov
imul
inc
popa
push
mov
add
enter
mov
jne
cmp
bound
shrl
and
in
push
and
mov
inc
and
xor
loope
or
call
dec
mov
push
pop
fstp
cmpsb
rolb
ret
in
mov
std
inc
add
jp
and
adc
adc
or
sbb
ljmp
mov
pop
std
fstps
jb
hlt
pop
xchg
int
out
pop
jle
xor
call
ja
lea
cmc
imul
icebp
mov
pusha
sub
out
inc
mov
lods
test
fbld
push
nop
test
mov
mov
adc
cs
dec
cmc
sub
or
push
into
std
scas
movsb
mov
fstps
mov
js
sahf
mov
sbb
inc
pop
cmp
pop
xchg
push
nopl
out
push
push
adc
push
fisubrs
arpl
inc
xlat
inc
test
in
outsb
not
xor
or
pop
enter
dec
fs
fcomp
jecxz
sahf
pop
hlt
sub
sbb
sub
fisubs
jle
dec
cmpsl
jae
cmp
enter
movb
les
push
aaa
or
cmpsl
pop
or
sbb
push
push
mov
loope
jmp
cmc
dec
dec
jle
pusha
and
push
dec
push
add
mov
cmp
sbbl
inc
xchg
xchg
mov
cli
xor
imul
pop
std
mov
adc
push
pusha
adc
pushf
frstor
mov
rcrb
ja
gs
sbb
sbb
xor
jb
cmpsl
clc
xor
or
in
das
enter
shll
cmp
sbb
jmp
lock
orb
sbbb
push
mov
dec
push
js
jg
fsubp
mov
pop
sub
aaa
pop
add
icebp
addr16
pop
xor
mov
mov
bound
xlat
js
pop
fidivs
and
imul
ret
test
or
ds
cmp
fs
je
xor
xor
mov
fstl
inc
pop
sub
dec
adc
aad
sub
xchg
dec
rorb
lahf
pushf
add
imul
int3
out
pushf
aam
pop
mov
test
fwait
ja
gs
xchg
mov
xchg
jne
movsb
aad
xchg
nop
gs
mov
push
movl
push
push
jbe
call
outsl
xor
andl
xor
jecxz
pop
lret
add
test
filds
icebp
mov
repnz
pusha
push
sti
stc
insl
or
rcrb
mov
lret
jne
arpl
mov
mov
xor
xchg
dec
cmp
mov
xchg
mov
outsb
add
cmp
subb
mov
xor
add
cmpsb
sti
test
push
js
fstpl
out
xlat
repnz
ja
bound
inc
add
adc
and
xor
ret
out
xlat
repnz
ja
bound
inc
add
adc
and
xor
ret
out
xlat
repnz
ja
addr16
jb
add
push
daa
and
add
div
out
aam
repnz
ja
int
push
jb
jne
lcall
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
jg
outsl
cs
push
dec
push
bnd
dec
jno
add
movsb
fistps
scas
out
lahf
into
into
jg
outsl
cs
push
dec
push
aas
jle
outsb
pop
pop
mov
iret
mov
scas
out
lahf
fimuls
cs
push
dec
push
aas
jle
outsb
pop
pop
cmovle
mov
iret
loopne
mov
loope
and
pop
pop
dec
and
les
sahf
cmp
push
ljmp
ds
add
shrb
loope
repnz
scas
push
and
fwait
inc
out
scas
mov
data16
pop
int3
cmp
mov
pop
mov
mov
out
add
sar
push
popl
jg
outsl
cmp
jg
outsb
lcall
push
and
or
out
push
sbb
mov
sarl
cmc
das
sbbl
mov
in
lods
push
dec
mov
andb
pushf
mov
fucom
xchg
aam
test
pop
stos
and
out
out
out
and
mov
outsl
cs
push
dec
push
aas
jle
outsb
pop
pop
cmovle
mov
iret
mov
fimuls
push
ss
es
aas
cmp
jnp
or
mov
int
mov
lods
leave
stos
sbb
inc
cmp
insl
aas
cmp
pop
pusha
lcall
fdivrl
mov
outsl
jge
jnp
jbe
dec
das
outsb
pop
pop
cmovle
mov
iret
mov
fimuls
cs
push
dec
push
aas
jle
outsb
pop
pop
cmovle
mov
iret
mov
fimuls
push
ret
leave
rorl
cmc
inc
adc
cmc
icebp
addr16
sbb
mov
int3
insb
xchg
dec
aad
out
mov
lds
mov
mov
in
push
cltd
jae
test
lea
or
dec
out
xor
les
mov
jge
jecxz
pop
leave
std
test
lret
pop
ret
xor
repnz
mov
push
cmc
ret
add
jmp
mov
int
arpl
pop
xchg
cmp
test
cmpsb
outsl
inc
out
insb
jmp
cltd
jmp
cld
mov
mov
or
jae
push
xor
out
je
sbb
mov
add
mov
adc
dec
and
xchg
mov
sbb
xor
xor
cld
xchg
sti
sub
in
cld
in
out
push
xchg
popf
mov
clc
loope
pop
cmp
mov
aam
xor
mov
mov
outsb
shrb
inc
lahf
repnz
popf
add
or
lods
push
or
inc
addr16
sub
jcxz,pn
test
aad
xlat
repnz
adc
push
adc
pop
popa
scas
pop
mov
rorl
inc
pushf
rorl
popf
sarb
jnp
xchg
enter
xchg
sahf
leave
pop
lahf
xor
call
sub
js
adc
movsl
inc
lds
mov
xor
vshufps
pop
lahf
dec
jno
sub
pop
dec
jno
fstpt
test
in
pop
push
aaa
idiv
push
fistpll
out
clc
iret
adc
add
cmp
outsl
fpatan
call
sub
aaa
push
jp
out
out
in
andb
imul
push
mov
and
inc
ffreep
sub
bound
xchg
lret
adc
je
call
fsubr
insl
test
call
mov
cmp
push
idivl
inc
test
ret
pop
jle
jecxz
mov
dec
mov
jge
dec
cmpsl
push
ret
mov
push
aaa
stos
pop
inc
and
inc
cmpsb
jp
xchg
lret
adc
pop
in
ljmp
xchg
inc
mov
cwtl
adc
mov
pop
out
or
enter
mov
ss
mov
push
dec
pop
mov
sub
mov
ret
cmp
adc
hlt
ds
pop
out
add
dec
inc
test
push
cmp
mov
fisubrl
sub
dec
fadds
ds
inc
jecxz
pop
push
jb
push
and
nop
sbb
lods
repz
sub
scas
add
mov
sub
stc
dec
call
loope
adc
repz
add
pop
nop
lods
mov
out
out
or
adc
mov
sarl
sub
sbb
mov
cltd
movsl
xlat
sub
jge
cmp
pop
rclb
cwtl
mov
cmp
jns
jl
stos
shll
fldl
repnz
sbb
mov
mov
les
xchg
cmp
and
out
mov
cmp
dec
rcr
mov
scas
aaa
stc
adc
adc
dec
popa
and
call
jbe
pop
mov
dec
jns
sub
xchg
sub
fisttpll
cld
sub
adc
mov
aad
jb
rolb
mov
out
add
scas
cwtl
sub
sbb
mov
xchg
movsb
or
out
rorl
movsb
loopne
stos
cmpsl
fidivrl
loope
clc
enter
mov
leave
xor
pop
imul
testl
inc
loope
dec
daa
imul
mov
fcompl
xor
jmp
adc
mov
rorl
jne
xor
mov
dec
inc
ja
lock
rolb
scas
clc
mov
lea
repz
mov
add
xor
cltd
jmp
pop
ror
out
mov
sub
inc
rol
adc
stos
xor
xlat
ret
test
sahf
cwtl
icebp
or
pop
daa
or
int
jmp
insb
in
adc
scas
mov
push
add
push
sbb
ja
stos
ror
adcl
je
out
mov
or
push
ret
pop
loopne
data16
sub
mov
pop
pop
rol
iret
cmp
xor
popa
sbb
outsl
and
icebp
out
subb
mov
lods
je
jnp
mov
pusha
mov
sub
leave
fimull
mov
and
cltd
lods
les
ds
decb
das
push
ljmp
loopne
cmp
push
test
inc
mov
adc
arpl
repnz
in
xchg
cltd
xor
jb
enter
or
hlt
mov
sbb
push
scas
insl
out
sub
lcall
sar
loopne
fimull
addb
push
pop
and
jmp
lret
shrb
iret
and
dec
popf
mov
push
xor
adc
xchg
jo
push
add
ja
adc
push
addl
sub
jmp
adc
pop
scas
jp
mov
mov
ss
popa
cmp
inc
pushf
shl
es
inc
nop
and
cmp
test
inc
jbe
adc
dec
fistpl
push
out
xchg
cmpsb
std
push
mov
add
push
sub
outsl
push
and
shll
jb
mov
xor
jge
dec
hlt
leave
mov
mov
mov
mov
int
fcmovne
test
inc
jle
pop
pop
aam
andl
adc
dec
inc
jb
fwait
sub
xor
je
and
lret
mov
sbb
push
cmp
mov
das
fsubrl
test
add
push
lahf
shl
cmpsb
das
sbb
xlat
push
ror
repnz
test
shrb
cmpsl
fcoml
push
jg
mov
fdivl
adcl
lods
iret
jns
aaa
adc
inc
add
inc
push
add
incl
stos
arpl
pushf
popa
push
cmc
mov
test
dec
pop
xchg
push
or
dec
rcll
es
clc
add
push
or
lods
ss
pop
imul
in
jo
rorl
pop
fcomp
arpl
ljmp
xchg
mov
jle
stos
add
cs
lods
cld
xchg
push
and
dec
push
repz
dec
pop
je
out
mov
ror
or
fdivp
or
push
pop
xchg
xor
adc
mov
xlat
sbb
push
and
lret
in
fcomp
daa
or
sbb
nop
xchg
xor
inc
mov
xor
mov
aas
std
inc
add
jp
mov
mov
scas
dec
rorb
je
call
push
mov
rcll
jecxz
inc
aas
roll
gs
and
fcomi
jb
jg
daa
shlb
cld
das
daa
jo
mov
push
jns
xorb
lcall
repz
and
ficoml
add
popa
outsl
mov
jle
mov
or
mov
shl
mov
inc
pop
lret
and
inc
rcl
fidivl
and
es
fdivrl
add
mov
mov
inc
stos
pusha
xchg
mov
mov
std
in
push
lods
mov
iret
pop
inc
or
dec
iret
fcomps
lock
rcl
mov
and
jp
lock
cwtl
fstpl
out
lods
rolb
fwait
pop
dec
scas
in
mov
icebp
rorl
arpl
xchg
mov
push
dec
sbb
lds
test
dec
test
and
mov
or
addb
jecxz
fildll
aas
mov
dec
imulb
outsb
jge
cltd
xor
out
call
jp
xor
xor
jno
adc
hlt
popl
ja
jne
loope
sub
pop
movsl
cmp
add
xchg
leave
fucomp
hlt
jae
sti
xchg
jo
jg
ss
sub
andl
cld
mov
jmp
shlb
cmpsb
negb
push
lcall
pop
sub
ret
jmp
sub
adc
shlb
je
or
inc
or
call
xlat
pop
jg
sub
fnstenv
int
sbb
xchg
adcb
cmp
roll
test
mov
pop
int
or
lret
call
aas
test
out
fimuls
movsb
jecxz
leave
pop
mov
mov
inc
iret
popa
imul
adc
movsl
inc
pop
popa
sbb
adc
and
cli
and
lds
pop
xor
pusha
sbb
test
fs
movsl
mov
les
push
mov
dec
cmp
and
adc
or
mov
jmp
stos
out
sub
jl
cmpl
ljmp
jne
insl
mov
mov
jecxz
pop
cmp
mov
add
std
popa
in
pop
stc
out
push
or
outsl
mov
lret
jnp
mov
repnz
nop
stc
loop
dec
or
scas
cli
cmp
sbb
faddp
dec
xchg
cmpsl
mov
xchg
cld
in
cwtl
repz
mov
dec
cmpsb
mov
and
mov
fisttpll
imul
icebp
sub
data16
les
sbb
mov
adc
push
insb
in
nop
jne
jne
xchg
jl
jecxz
clc
dec
pusha
xor
cmp
pop
sub
jg
mov
push
mov
inc
xor
dec
lcall
test
sbb
jns
call
or
dec
imull
out
push
sub
rclb
xchg
xor
jns
fmulp
jnp
in
loopne
mov
inc
cmc
cld
push
mov
add
xchg
push
or
lds
push
jmp
leave
testb
or
mov
ja
sarl
cmpsl
sub
xchg
or
orb
mov
dec
adc
mov
adc
and
and
and
cmp
pop
test
xor
movsl
outsl
das
mov
pop
mov
aad
adc
repz
jae
fnsave
cs
xchg
imul
hlt
and
fistpll
enter
mov
mov
pop
xlat
out
push
fnsave
xchg
mov
dec
bound
leave
stos
mov
sbb
fists
dec
mov
jo
sbb
pop
jnp
fwait
pop
imull
movsb
mov
push
enter
imulb
add
and
inc
add
ljmp
mov
cli
jnp
aam
xchg
enter
dec
iret
lcall
xchg
or
cmp
and
mov
cmp
mov
pop
jo,pt
cmp
push
cli
adc
xchg
cmpsl
jecxz
lea
mov
es
pusha
js
add
sbb
cmp
xchg
pop
f2xm1
fidivrs
dec
loopne
nop
push
add
adc
ss
out
cwtl
test
mov
pop
movsl
jns
sbb
rcrl
cmpsb
xor
and
or
fldcw
xchg
aaa
xor
xorl
mov
hlt
dec
mov
xor
push
shll
test
aas
add
pop
cs
push
bound
inc
bound
xor
iret
hlt
adc
mov
adc
pop
or
xlat
mov
cld
rep
stos
das
fmuls
pop
daa
scas
or
xor
mov
fnsave
pop
pop
stos
add
cmc
ret
sub
popa
cmpsl
adc
mov
push
test
fimull
pmuludq
mov
fcoml
or
sub
cmp
daa
rcl
dec
arpl
cmpsb
dec
jne
jle
dec
add
push
jge
push
mov
sti
insb
jp
rol
dec
jnp
cmpl
pop
cmpb
add
mov
in
pop
mov
pop
xchg
xchg
mov
popf
ds
ret
dec
push
icebp
loope
das
pop
xor
jns
fdivrs
add
mov
mov
aad
xchg
jmp
dec
pop
fimuls
dec
cltd
cmp
inc
mov
cmpsb
in
push
or
sbb
jle
adc
ljmp
add
lahf
shlb
sub
les
jnp
pop
and
mov
loopne
jne
pop
mov
sbb
fcmovnu
sbbb
pop
mov
jb
test
push
testl
sub
pop
xchg
into
daa
xchg
cld
aad
push
jg
or
jle
cld
stos
jae
bswap
mov
push
and
sub
add
dec
lret
sub
imul
and
and
pop
out
outsb
shlb
and
loop
aas
push
pop
xchg
mov
dec
popa
pop
repz
mov
out
sbb
in
ret
mov
and
add
xchg
or
mov
rorb
cmp
jns
xchg
dec
sbb
inc
loope
xor
clc
cmp
mov
xlat
sub
in
sub
cld
out
sbb
and
mov
push
dec
out
xchg
cmc
pop
adc
rolb
pop
call
cmpsl
pop
xchg
mov
mov
jmp
add
jg
notl
xchg
push
std
inc
mov
push
cmp
jg
dec
mov
jb
mov
in
push
icebp
rcrb
int3
or
stos
mov
jecxz
sbb
repnz
stos
into
dec
xor
and
enter
in
insb
notb
lret
popa
dec
inc
in
jle
pop
decb
roll
mov
daa
mov
mov
jecxz
subl
and
lds
cmpsb
inc
shl
mov
stc
inc
add
lods
xchg
std
movsl
cmp
sub
shlb
mov
into
aas
mov
or
adc
nop
adc
xor
cmpsb
aam
addl
gs
pop
aas
xchg
stos
in
scas
sub
xor
sahf
jmp
mov
cmpb
mov
sahf
data16
fisttpll
loopne
xlat
in
mov
pop
xorl
xor
dec
cmp
cmp
cli
xchg
or
popa
adc
je
in
jbe
fwait
jmp
dec
sbb
in
fisttpll
outsl
sbb
and
push
data16
mov
xor
fisubl
xchg
lea
add
cmp
dec
in
cs
mov
or
lock
add
sub
insl
js
mov
dec
cmp
out
cmp
xchg
aam
daa
xor
or
lock
out
cmp
rcrb
sahf
inc
cmpsl
or
adc
push
sbbl
sbb
sahf
std
dec
mov
cli
dec
pop
pop
xor
jae
xchg
dec
push
adc
push
cmp
inc
mov
jbe
xor
add
lea
xchg
fadds
ljmp
xchg
insl
mov
jae
gs
adc
aaa
imull
stc
xor
adc
leave
inc
add
inc
fsubrs
pop
roll
movb
jmp
pop
pop
cmp
push
addr16
fcmovnbe
add
jbe
mov
mull
mov
lea
push
pop
mov
push
ds
scas
pop
and
add
cmp
xchg
cmpsb
mov
cmpsb
movsb
or
fisttpll
shll
xchg
mov
scas
jg
fadds
in
fwait
add
insl
mov
scas
xchg
mov
lods
cwtl
add
jl
fwait
push
push
popf
addr16
das
adc
jae
xchg
lods
or
div
test
ds
inc
mov
out
popa
add
mov
leave
pop
xchg
into
jno
mov
mov
fisttpl
xor
jae
xor
add
data16
dec
and
jne
lret
movsb
mov
loop
int
lods
or
in
adc
xor
loope
xchg
in
das
int
xchg
lcall
fsubrs
and
notb
dec
mov
repnz
pusha
mov
dec
outsl
pop
std
popa
orb
fs
shlb
fs
popf
repnz
mov
push
rolb
add
jmp
mov
xchg
push
popl
adc
stos
and
cli
lock
aaa
pop
sub
addr16
jb
loope
add
insl
into
lret
inc
lea
mov
cmp
sarl
inc
add
cmp
pushf
cmp
mov
lret
clc
sbb
popf
inc
xor
mov
jne
xchg
icebp
mov
jl
xor
push
xor
jle
in
test
inc
push
aad
repz
mov
cmpsb
ljmp
pop
loopne
test
mov
sub
mov
mov
out
adc
pusha
adc
lea
stc
cmpsb
mov
dec
mov
or
inc
inc
push
mov
es
jp
fbld
mov
pop
push
loopne
jl
sti
adc
xchg
jno
cld
jge
js
aaa
out
stos
jb
push
mov
dec
mov
adc
call
das
into
mov
std
and
push
mov
js
je
imul
lret
rorb
push
cmc
jns
cmp
push
pop
pop
jle
push
sub
or
xchg
sub
ljmp
leave
and
sarb
lods
jns
pop
adc
mov
or
add
inc
xchg
jnp
out
iret
xchg
mov
jo
shlb
sub
adc
push
sub
call
inc
add
roll
ljmp
push
inc
mov
sbb
insb
inc
seta
and
pop
stos
mov
dec
mov
or
bound
int
inc
loope
addr16
aam
ja
add
sahf
inc
mov
fwait
in
xor
out
sub
mov
mov
push
in
and
fucomip
jecxz
pusha
mov
movl
and
xchg
lds
add
dec
mov
cwtl
jae
push
xor
iret
repnz
sub
loop
add
sub
xor
fwait
repz
into
and
fsubr
push
inc
imul
std
test
xor
sub
leave
shll
inc
or
jge
sub
shll
cmp
jge
jno
mov
sbb
xor
arpl
lahf
sbb
push
pop
jbe
add
in
call
js
inc
lods
jp
ret
fadd
jg
and
adc
unpcklps
out
popf
sbb
inc
xchg
int
scas
and
jg
stos
pop
ret
inc
arpl
sbb
arpl
dec
scas
jne
sbb
ds
mov
xor
pop
push
sub
sub
mov
pop
inc
xchg
pop
mov
sbb
pop
clc
loop
sub
xor
inc
sub
test
js
in
in
xchg
popa
fimuls
and
or
mov
ja
repnz
add
dec
mov
adc
xchg
stc
mov
dec
xor
sbb
pop
scas
push
xchg
cmp
jge
insb
xlat
jbe
leave
inc
mov
fwait
pop
les
popa
clc
mov
cmpsb
ret
ret
or
push
int3
push
les
out
sub
nop
pop
adc
xchg
pop
jecxz
adc
sub
adc
test
mov
add
lds
ret
jge
jnp
xchg
cmpb
adc
cmpsb
mov
cwtl
pop
imul
fisttpl
cmp
sub
push
mov
out
inc
xchg
mov
mov
pop
or
inc
jl
pop
imul
sahf
nop
cmp
pextrw
sbb
sbb
mov
ss
lods
mov
ljmp
jae
mov
mov
cmpsl
and
mov
cmp
mov
fnstcw
xchg
ret
lods
cmp
mov
sbb
xchg
inc
inc
shr
pop
rcrb
mov
sub
mov
xor
cmpsl
ret
push
cmp
cmp
insl
mov
push
push
sub
cmc
mov
cs
std
xor
fwait
ret
clc
mov
daa
mov
xchg
cmp
pop
ds
push
stos
fwait
mov
movb
outsb
fs
mov
xor
mov
adc
mov
mov
jp
sub
mov
add
pop
or
mov
sti
add
push
mov
ret
scas
ja
into
pop
ljmp
dec
enter
popa
xlat
push
push
inc
pop
ljmp
add
mov
out
mov
or
bound
das
pop
mov
ficompl
adc
and
xlat
mov
rcll
outsl
and
adc
xchg
inc
dec
jge
inc
jl
lds
jmp
lret
mov
daa
std
stos
add
and
cmpsb
pop
jo
mov
sbb
or
inc
adc
jmp
ljmp
stos
fnstsw
push
and
fildll
idivw
xchg
mov
jle
mov
adc
push
or
mov
insl
aad
cmpsl
in
lea
in
cmp
and
xchg
xor
xorb
mov
cld
clc
xchg
pop
sti
rclb
and
sbb
inc
scas
jb
insl
aas
fstpl
ss
adc
pop
out
out
addr16
xor
out
mov
fwait
adc
adc
sub
scas
adc
push
ret
xchg
adc
insl
cltd
iret
pop
adc
xchg
xor
nop
es
imul
roll
push
cs
push
dec
push
aas
jle
outsb
pop
pop
cmovle
mov
iret
mov
fimuls
cs
push
dec
push
aas
jle
outsb
pop
pop
cmovle
mov
iret
mov
fimuls
fistps
dec
push
mov
pop
dec
mov
iret
mov
fimuls
cs
push
dec
push
aas
jle
outsb
pop
pop
jle
jne
iret
stc
iret
jbe
adc
and
xor
and
into
clc
call
out
int
pop
pop
dec
dec
js
push
or
sub
fcomp
enter
call
add
pop
dec
outsb
or
push
push
cmp
fmuls
clc
push
call
mov
push
test
pop
orl
jo
imul
inc
cs
fmulp
mov
fsubrs
push
jbe
pop
xchg
hlt
mov
cmp
xchg
loop
xorl
je
or
lahf
or
mov
pop
in
scas
jnp
push
cmc
push
in
jle
pop
sbb
mov
xor
pusha
rol
cltd
mov
sbb
pop
shll
lret
xchg
add
mov
call
fimuls
sahf
cwtl
out
inc
rclb
pop
push
cmc
dec
dec
xchg
out
pusha
icebp
cmp
sub
lret
mov
imul
or
mov
scas
dec
or
loope
xchg
dec
or
fsubrs
cmp
jae
out
or
pusha
inc
and
pop
and
addb
icebp
cmp
inc
stos
xchg
enter
call
mov
fmuls
js
push
idivb
sub
mov
shl
shl
xlat
jmp
or
or
jge
popa
jp
jg
dec
fistpl
lret
fdivp
in
mov
cmp
cmp
sub
inc
dec
pop
sub
mov
cwtl
cli
mov
pop
pop
dec
dec
js
push
push
cmp
sub
fcomp
enter
call
mov
pop
dec
dec
js
push
push
cmp
sub
fcomp
insl
sbb
int3
ret
adc
lret
mov
out
or
xor
insl
popa
adc
pushf
ret
push
jnp
mov
add
movsl
and
stc
mov
clc
out
adc
inc
ss
lss
outsb
push
jmp
lcall
lods
xlat
inc
aas
in
adc
sbb
cs
addb
jmp
adcb
cs
aas
cmp
mov
dec
outsl
rcll
or
pop
inc
insb
stc
ret
add
cli
cmp
mov
ss
clc
add
rcrl
push
push
cld
es
lcall
xchg
pop
cmp
sub
js
popa
rorl
rolb
sub
pop
push
ret
xor
lahf
fs
movsb
and
movsb
xor
xchg
jb
loopne
shll
or
lock
daa
shrl
xor
repnz
mov
sub
cmp
cmp
xor
int3
cwtl
inc
ret
js
in
mov
jne
cwtl
mov
or
fildll
daa
adcb
cmp
out
shr
pop
mov
xor
cmp
xlat
dec
push
scas
popa
mov
daa
out
jg
or
test
jns
adc
push
xlat
sbb
scas
test
push
xor
repnz
push
stos
ficompl
mov
cmp
dec
in
inc
mov
pop
push
sub
mov
jbe
ss
and
mov
outsb
sub
xor
xchg
loop
movsb
sub
or
in
test
jbe
jmp
fdivrl
mov
cltd
popa
mov
dec
aad
cli
jmp
sbb
mov
inc
or
and
mov
inc
and
mov
mov
in
test
cld
out
adc
scas
stos
lods
movsb
lcall
xchg
loop
sbb
out
mov
lret
add
cmp
push
pop
mov
rol
xor
add
jmp
add
pop
push
or
sarb
jbe
pop
clc
push
mov
mov
mov
lea
lahf
movsl
adc
test
mov
fcom
stc
inc
int
imul
inc
push
loopne
xchg
les
cli
dec
or
es
mov
fisubrs
pop
bound
stos
xorl
dec
pop
adc
fcmovb
bound
cli
lret
xor
mov
sbb
les
add
jl
jno
test
jns
rcrb
jl
mov
data16
je
push
cli
lods
mov
cli
clc
inc
pop
or
jmp
dec
mov
insb
pop
and
sub
cmp
xlat
push
add
mov
add
loope
sbb
cs
fists
in
jnp
push
inc
sar
xchg
pop
inc
xor
mov
xor
mov
js
mov
ds
inc
ret
lds
cltd
push
inc
jecxz
sub
lods
cltd
jno
shrb
xchg
loop
and
adc
sbbl
mov
xor
in
cli
or
xchg
movsl
loop
push
fcoms
push
sbb
enter
inc
gs
psrlw
mov
loopne
ss
aaa
or
iret
mov
dec
jno
in
bound
and
pop
insl
jns
jno
or
std
push
mov
adc
mov
inc
std
mov
mov
push
repnz
ja
cltd
in
sub
flds
push
pop
jle
and
lea
fwait
xor
lcall
out
fxch
ljmp
stos
push
lods
cmp
aad
jge
aam
insl
mov
ret
addl
out
xor
cmp
cmc
or
xlat
push
mov
gs
jb
cltd
push
push
es
mov
add
int3
lret
jbe
pusha
ficomps
adc
lea
sar
ja
mov
imul
testl
sbb
mov
jns
dec
or
pusha
lods
jmp
insl
push
in
daa
fstpt
jne
stos
dec
xor
nop
add
and
ja
mov
or
add
xor
lret
aas
xchg
std
dec
xor
out
mov
fimuls
adc
push
xchg
xor
mov
aaa
ror
test
pop
pop
out
es
dec
jbe
cmc
inc
mov
aas
mov
jmp
loope
push
mov
mov
mov
mov
and
jecxz
sbb
push
stc
push
popf
mov
xchg
push
jns
loop
sub
into
push
ds
pop
pusha
idivb
je
push
scas
js
iret
mov
push
xchg
adc
add
inc
aad
stos
mov
mov
jns
push
sub
je
aam
inc
pop
repz
xorb
mov
jo
imul
lea
push
out
mov
addb
lock
or
add
dec
leave
add
dec
int3
sbb
push
mov
repnz
cmpl
push
cli
sbb
jno
mov
js
dec
fimull
pop
pop
gs
aas
scas
push
push
jmp
jno
les
xchg
inc
iret
into
fdivl
add
cmpsl
cmp
popa
in
dec
mov
imul
push
addr16
pop
stos
fcoml
add
notl
pop
cmpsl
add
xor
sub
push
fnstenv
xchg
jne
jge
inc
popf
inc
mov
cmp
dec
es
push
stos
ss
push
add
inc
pusha
scas
xor
lods
lock
push
jb
ret
imul
rcl
aam
cmpsb
enter
cmc
add
push
cmp
aam
push
lret
xorl
dec
mov
inc
sbb
pop
ljmp
jl
cmpsl
inc
cmp
inc
inc
outsl
xchg
mov
xchg
mov
clc
and
mov
dec
fcompl
mov
pop
in
sti
or
xor
clc
repnz
add
out
xchg
add
xor
mov
xchg
jp
xchg
xor
cmp
fnstsw
movsb
out
sub
inc
je
cmpsb
jecxz
inc
leave
out
cmp
mov
push
test
jle
mov
aad
out
adc
push
jae
and
rolb
and
test
xor
dec
ja
xor
pmullw
cmp
arpl
add
pop
or
popa
nop
lahf
outsl
sub
mov
and
push
sbb
int3
and
xor
mov
adc
pushf
dec
mov
jle
cmp
inc
in
andb
loopne
out
movsl
std
loopne
pop
cli
test
in
flds
stc
sbb
add
inc
sbb
adcl
call
mov
xchg
out
movsl
lock
insl
in
out
das
js
sahf
lret
stos
cmp
mov
cmpsl
mov
cmp
mov
mov
jle
repnz
in
add
addb
xlat
mov
repnz
dec
xchg
data16
cmpl
mov
test
lods
out
mov
shrl
iret
iret
inc
scas
mov
out
out
dec
jo
leave
or
shlb
sarl
xor
add
inc
inc
into
ss
aad
call
push
inc
scas
insb
sbb
dec
cmp
testl
test
in
sub
sbb
mul
imul
repnz
cltd
jmp
and
enter
out
add
sbb
filds
test
repz
lock
inc
push
or
xchg
sub
pop
in
aas
addr16
jmp
adcb
imul
stc
pop
push
aad
fldcw
sub
inc
sbb
or
js
into
jno
xor
lods
inc
jp
fbld
cmc
ret
ss
ficoml
adc
fchs
jbe
loopne
daa
xchg
dec
jge
add
xchg
aam
dec
popf
clc
in
xor
rolb
aas
sbb
imul
mov
sbb
dec
int
xor
jg
ds
scas
pop
adc
pusha
jne
cltd
divb
lea
sbb
shll
imul
pushf
xor
lods
test
cmpsb
mov
lods
ljmp
fxch
test
add
add
and
fwait
cs
leave
lea
stos
sbb
movsb
bound
jae
cld
ja
pop
rorl
mov
mov
add
fyl2xp1
mov
mov
inc
cmp
lcall
jae
or
pop
cld
jg
fisttpll
mov
dec
inc
fucomip
pop
and
iret
or
hlt
filds
jp
into
in
gs
aam
mov
inc
lret
or
lret
mov
push
cmp
cmp
push
sbb
push
rcrl
mov
pushf
std
mov
subb
test
pop
movsb
mov
cmpsb
repz
push
cmc
push
jo
xchg
push
mov
xchg
out
out
pop
dec
mov
mov
or
icebp
jno
clc
lock
in
ja
scas
pop
mov
mov
sub
push
mov
sti
scas
pop
into
jno
push
insl
push
jge
inc
repz
inc
fstps
add
pop
jne
gs
adc
cmp
sub
outsb
mov
pop
push
cmp
fmul
mov
js
in
les
adc
and
cli
rol
jl
ljmp
pop
sahf
push
pop
sarl
jne
mov
outsb
jmp
or
pop
mov
ja
cli
or
sub
jbe
ret
xchg
lea
dec
dec
je
and
adc
xor
ficoms
in
mov
cld
xor
add
pop
pop
loopne
sbb
lret
add
jnp
xchg
mov
xor
cmova
dec
jne
ret
clc
xlat
scas
and
icebp
lock
aaa
pop
addr16
add
and
rclb
add
sbb
and
xor
xchg
mov
mov
adc
outsb
fs
and
mov
pushf
jle
xchg
dec
cltd
adc
stos
outsl
icebp
add
mov
rcr
popa
ficoms
stc
cmp
mov
movsl
or
or
adc
je
push
scas
add
test
loop
out
in
lea
dec
test
dec
mov
jge
sbbb
das
xlat
sub
fldenv
xor
cwtl
out
ljmp
fldcw
inc
incl
cmp
sub
in
xor
xchg
sti
clc
xor
push
sarb
pop
int
inc
in
xor
mov
adc
cmp
mov
pop
adc
push
fists
and
std
in
and
call
je
xor
cmp
cmc
xchg
xchg
repnz
repnz
pushf
mov
push
dec
sub
lret
mov
pusha
add
and
push
jb
gs
cmc
leave
arpl
js
dec
xchg
and
add
jnp
lret
call
or
pop
sbb
add
int3
push
test
pop
icebp
push
xchg
call
push
mov
aam
orl
mov
inc
loope
lods
push
xchg
dec
cmpsl
pop
dec
xlat
add
xor
cld
push
loope
or
jns
adc
hlt
rorl
jmp
pushf
ret
test
iret
loop
outsl
stos
scas
or
sbb
add
out
cltd
int3
mov
mov
shll
mov
dec
jnp
jno
mov
idivl
push
pop
imull
clc
aas
sub
jb
mov
adc
xor
dec
pop
inc
inc
xlat
in
pop
cmpsb
cld
mov
and
sbb
mov
fnstsw
mov
add
sbb
cmpsl
and
mov
mov
cmc
sub
jne
unpcklps
iret
inc
push
mov
mov
dec
xorl
sub
call
mov
popf
or
jb
shll
fwait
call
inc
aaa
rorl
fdivl
inc
stc
cmp
notl
inc
mov
and
sub
jb
movsl
fildll
xor
mov
xor
aas
xchg
lea
push
mov
xor
push
scas
insl
mov
daa
imul
mov
insl
nop
jl
or
lret
mov
xor
mov
sbb
jne
loop
adc
inc
leave
out
test
xchg
jno
mov
inc
jne
jp
ret
fsubrl
mov
pop
sub
push
and
lea
jg
inc
pop
inc
rep
pop
sub
in
ljmp
aaa
jle
clc
cwtl
inc
lock
jl
scas
repnz
rcl
out
inc
pop
arpl
and
daa
mov
jmp
aam
dec
nop
pop
pop
rclb
cmp
push
in
and
mov
jb
sti
insb
xchg
pop
addl
rorb
je
ret
gs
add
jbe
push
les
push
jmp
push
js
sahf
inc
shrl
pop
jl
cli
add
enter
or
in
push
ret
fs
shrb
adc
insl
xchg
hlt
jmp
jbe
scas
jmp
out
sbb
out
mov
xlat
fcoml
les
rcll
fs
fsubrl
jg
inc
loopne
stc
dec
out
fs
cmp
or
or
dec
mov
mov
fcomps
sub
push
insl
in
mov
jp
imul
xchg
leave
je
sbb
adc
cltd
stos
fidivrl
adc
pop
inc
or
sbb
fwait
cs
cmp
repnz
andl
mov
mov
xchg
mov
pop
lahf
out
sub
cmp
rcr
insb
jmp
andb
popf
inc
in
jns
push
out
push
push
add
mov
pop
adc
scas
inc
mov
xor
cmp
fstps
mov
pop
add
movsw
mov
mov
xor
icebp
and
or
inc
adc
scas
shlb
jecxz
mov
jnp
test
icebp
mov
cmp
push
aam
call
cwtl
sub
jmp
pop
insb
std
mov
jle
leave
mov
nop
mov
mov
inc
pop
ja
hlt
cltd
js,pn
sub
int
or
lahf
dec
push
inc
add
test
sub
pop
xchg
cmp
push
ljmp
imul
sub
outsb
mov
insb
pop
mov
xchg
gs
movsl
pop
cmc
stc
sub
push
test
out
push
stos
negb
loop
cmpsb
scas
sbb
pop
enter
notb
mov
xchg
jns
aas
jecxz
ret
mov
or
dec
nop
xchg
repnz
or
mov
in
push
mov
testl
jg
jge
add
push
cmpw
lock
scas
movsb
sbb
in
ret
das
cmp
int3
adc
pusha
mov
mov
and
cli
adc
adcl
lret
mov
mov
jnp
dec
add
push
fnstsw
ja
mov
out
mov
dec
dec
jae
sub
lcall
xchg
cwtl
adc
or
push
sub
stos
or
data16
aam
jecxz
xor
jnp
dec
lcall
fwait
dec
cwtl
fnstcw
ret
push
divb
add
jp
cltd
ja
inc
mov
sub
push
pop
pop
sub
cmc
pusha
xor
sbb
xor
add
hlt
add
sbb
mov
cmp
out
bound
jne
jmp
out
pop
mov
jbe
dec
mov
sub
sub
xchg
pop
pop
ljmp
lret
lahf
int
ja
push
sbb
rcrl
std
push
lret
jae
icebp
sbb
lret
cmp
xchg
fucom
repz
mov
xchg
sub
xor
sub
cs
ljmp
and
loop
test
pop
lcall
js
sarb
mulb
mov
dec
dec
into
jmp
xor
cmc
rcl
or
xorl
iret
or
xchg
pop
jnp
mov
test
push
adc
or
mov
and
add
popf
add
out
sub
insl
inc
push
cwtl
dec
add
mov
lods
mov
cmp
jl
push
sbbb
jg
mov
rcr
les
pop
outsl
adc
mov
popf
jb
arpl
imul
and
xor
je
iret
xchg
cmp
lahf
pusha
das
inc
vunpckhps
push
lods
in
jbe
scas
hlt
mov
sbb
cmc
or
flds
sti
mov
and
push
lea
repz
test
cmc
jno
cmp
adc
js
insb
sub
mov
mov
int
push
imul
mov
pop
sub
xor
sub
insl
out
xorb
loopne
push
mov
mov
iret
aam
dec
sbb
or
mov
push
in
inc
xchg
xor
sbb
or
cmp
xlat
fists
fmull
mov
loopne
jmp
inc
dec
pop
arpl
arpl
pushf
dec
imul
jae
repz
shrb
loop
adc
rcrb
mov
mov
std
xchg
inc
fistps
cmp
popa
mov
movl
sti
notb
add
sub
mov
mov
shl
in
sbb
sarb
in
xchg
aas
mov
lea
data16
outsb
test
in
push
adc
jno
in
push
pusha
jne
test
add
dec
jl
out
pop
fcmovbe
xor
push
mov
dec
gs
roll
xor
enter
dec
cmp
dec
loope
jp
bound
sub
inc
push
sbbb
mov
lods
icebp
test
add
mov
sub
pushf
mov
fisubrs
pop
das
subl
mov
jne
orb
lea
mov
outsb
repz
push
js
subl
pop
hlt
dec
sbb
fdivs
jp
js
outsl
inc
push
insb
xchg
sub
icebp
jge
inc
addl
sti
sub
call
mov
push
xchg
aam
lods
dec
into
jae
sub
pop
fwait
mov
int
adc
xor
dec
adc
sbb
jge
jae
mov
ret
mov
push
jae
das
loope
mov
ret
das
bound
pop
jmp
pushf
and
outsl
mull
out
inc
mov
pop
sbb
in
jne
dec
aaa
adc
sub
adc
mov
push
jno
call
jo
andb
push
test
mov
cli
mov
or
in
mov
or
pop
jl
lods
push
int
ror
sub
jmp
data16
add
mov
pop
sub
push
das
xor
arpl
pop
adc
repz
enter
aas
fstp
pop
sbb
push
mov
lret
mov
jmp
cmp
ja
cmc
mov
testb
xchg
repnz
cli
fcmovne
sbb
jae
adc
adc
divb
pusha
call
js
jae
out
test
jl
xor
adc
dec
dec
pushf
mov
mov
fcmovne
add
dec
pop
ljmp
pushf
add
xchg
dec
xor
xchg
mov
cli
loopne
jge
aad
jle
xchg
sbb
jg
stos
les
push
jecxz
inc
aad
lahf
xchg
fwait
sbb
movl
and
jb
xchg
sti
xor
adc
fistps
repnz
adc
adc
mov
cmc
cmp
shlb
adc
test
inc
inc
lea
pusha
stc
xchg
mov
mov
push
in
scas
xchg
int
aaa
pusha
jge
les
pop
add
inc
and
pop
lret
imul
jo
add
cltd
leave
sub
sbb
faddl
mov
sub
scas
clc
cmc
scas
call
leave
insl
aam
js
pop
clc
dec
cmp
mov
mov
and
mov
mov
dec
sbb
ljmp
js
mov
call
insb
imul
data16
adc
pushf
or
pop
cld
mov
xor
cmc
or
ds
xor
mov
cmc
outsb
aam
sbb
cmp
movsb
mov
dec
mov
jo
push
fdivrl
pop
sbb
stc
sub
or
mov
xorl
loopne
or
lret
jo
pop
lock
arpl
daa
push
pop
push
rorl
in
subl
rcrb
jecxz
rorl
stos
and
pop
fmull
mov
pop
das
call
orl
sarl
dec
pop
lods
pop
hlt
dec
test
jb
jle
in
lahf
or
call
cmp
xchg
cmp
push
dec
dec
int
bound
cmpsb
movsl
or
jb
neg
nop
mov
sbb
add
cli
and
arpl
rcrb
cmp
movsl
pop
cld
sub
add
xchg
inc
and
cs
insl
mov
ret
addr16
ror
shlb
pop
pop
inc
dec
inc
inc
jle
in
xor
inc
ret
testl
ss
inc
fisubl
shrl
imul
mov
int
ret
add
scas
call
lret
in
xchg
and
adc
and
xchg
xchg
mov
xchg
mov
pop
out
insb
or
call
daa
add
lods
xchg
call
mov
pop
dec
dec
js
push
push
cmp
sub
fcomp
enter
call
mov
pop
dec
dec
js
push
push
cmp
sub
fcomp
enter
call
es
xchg
js
push
push
cmp
sub
fcomp
enter
call
mov
mov
push
icebp
mov
in
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
mov
cmpsl
out
xchg
xchg
div
jmp
sub
ja
mov
push
inc
shll
xchg
xlat
call
jbe
pop
push
aaa
pop
addr16
push
inc
inc
movups
add
movb
push
ss
jg
bound
adc
and
bnd
xchg
repz
out
or
mov
mov
xor
inc
or
pop
loop
jns
jecxz
insl
pop
sub
ror
ficoml
arpl
cmp
mov
jmp
iret
xchg
jbe
sbb
popf
popa
aaa
daa
add
pop
clc
test
lcall
iret
cmpsb
jb
imul
push
dec
ss
xchg
jmp
addr16
test
stos
pop
mov
sbb
lds
pop
pop
dec
cmp
adc
inc
divb
sbb
jae
add
cmp
jecxz
push
or
repnz
xor
push
mov
icebp
xchg
negb
push
icebp
ss
cmp
dec
insl
mov
inc
je
mov
leave
jecxz
ljmp
movl
add
and
das
cli
lock
in
ljmp
xchg
cmc
push
push
jne
pop
inc
jg
push
cmp
xor
xor
idiv
aam
movsb
mov
mov
pop
push
pop
push
ja
addr16
push
inc
inc
mov
cmpsl
cmpsb
xchg
xchg
xchg
xlat
mov
pop
push
pop
push
ja
addr16
push
inc
inc
mov
add
push
jmp
push
das
push
adc
lahf
sahf
mov
mov
xchg
fsubl
jbe
and
pushf
nop
lret
xchg
cmp
xchg
cmp
out
aam
pop
or
dec
sti
adc
pushf
mov
jg
pandn
jl
cmp
test
mov
xchg
mov
xchg
jne
xchg
jecxz
cli
inc
mov
xor
cmp
mov
mov
nopl
push
xor
push
ss
xor
fs
xchg
and
dec
icebp
jmp
fcompl
mov
lea
loop
jne
pop
outsl
or
ret
lods
pop
shrl
mov
pop
adc
outsb
jae
cmp
stc
mov
xor
add
ret
into
lcall
adc
mov
jne
jmp
inc
test
add
push
lahf
enter
cmpsl
imul
mov
pop
sub
ljmp
adc
aam
es
or
repnz
inc
les
stos
imul
mov
stc
mov
out
fistpll
movsl
push
and
jae
stos
pop
loope
es
movsb
jmp
dec
mov
add
push
lock
mov
inc
les
shll
xchg
mul
lds
push
mov
daa
jne
xor
cmpsb
and
clc
push
aas
addr16
setno
ds
nop
rcrb
dec
jnp
int
cmp
mov
out
in
cmp
xor
cmpsl
shr
add
push
test
nop
mov
inc
add
enter
push
sub
sub
push
loopne
sub
test
testl
pop
fmull
inc
dec
sahf
pop
outsl
inc
inc
mov
push
mov
mov
lcall
mov
xchg
xchg
int
out
fstl
repz
andb
sub
outsl
sbb
and
mov
sub
popa
std
mov
daa
mov
hlt
inc
lret
mov
push
test
dec
popa
sbb
jmp
xor
repz
sti
jmp
inc
sub
push
cmp
push
addr16
xlat
mov
stc
imul
adcb
dec
arpl
outsl
and
xchg
mov
pop
cmp
inc
and
stc
inc
jmp
cwtl
sahf
shrl
pop
insb
lret
inc
adc
int
mov
lret
or
xchg
or
sbb
jnp
cwtl
push
adc
push
xor
lea
or
js
ret
push
jbe
repz
bound
push
mov
out
sahf
daa
inc
test
fildll
adc
cmpsl
xchg
das
imul
mov
pop
ret
out
cmp
arpl
or
add
xor
mov
test
int3
mov
mov
and
dec
and
push
cwtl
lods
sbb
jae
ljmp
push
cli
add
leave
je
jnp
dec
mov
pop
frstor
rorl
push
adc
push
cmove
outsb
pop
adc
jle
jg
lock
mov
cltd
bound
push
popa
push
mov
fs
mov
cmp
aaa
scas
push
push
cmp
sti
sar
push
xor
sbb
nop
cmp
mov
arpl
fbld
and
sbb
and
cmp
data16
popa
setg
xchg
icebp
mov
pop
outsb
add
mull
mov
inc
bswap
sbb
pop
fptan
arpl
push
fistl
ds
ret
xchg
xchg
fldt
xchg
mov
add
sub
mov
sahf
cmp
mov
in
aad
out
cmp
push
mov
pop
adc
std
adc
xchg
mov
sub
nop
icebp
icebp
cmp
xchg
lret
xor
inc
fisttpll
or
loop
sub
movsb
mov
call
and
add
mov
push
jae
and
push
outsl
sti
ret
mov
add
xchg
and
dec
in
xchg
fsubr
rcll
xchg
jb
out
fidivrl
or
jb
mov
lods
popf
int
ljmp
leave
lea
xlat
mov
add
push
xchg
mov
outsb
test
into
push
mov
mov
or
dec
scas
and
ret
pusha
fst
sbb
mov
and
in
sbb
xchg
inc
movsl
shll
cltd
push
loop
xchg
subl
out
cmp
jbe
or
dec
pop
movsl
dec
lods
push
repz
adc
wrmsr
inc
cli
stos
pop
icebp
jno
in
js
cld
mov
dec
mov
cltd
pop
jge
mov
or
ret
dec
mov
push
js
lea
stos
mov
data16
lcall
mov
mov
dec
divb
stos
aad
icebp
mov
inc
push
rcll
xor
fldcw
lcall
pop
loop
addr16
mov
test
imulb
std
js
in
push
jns
adc
test
repnz
mov
inc
pushf
xchg
out
xchg
scas
pop
rcll
enter
sahf
and
rcrl
test
jne
inc
adc
xchg
sbb
inc
lds
lds
mov
out
addb
es
jg
and
or
rolb
jp
jbe
xor
mov
lods
cmpsb
icebp
pop
sti
xchg
inc
rorl
cmp
out
cmp
jns
loope
call
mov
lods
cmp
and
xchg
push
sbb
insl
out
xchg
aad
xchg
dec
lret
mov
cmp
or
xchg
arpl
fcmovbe
aas
les
xor
shll
add
std
mov
movsb
pusha
in
fisubs
test
pop
mov
fldenv
xchg
adc
pop
dec
sarb
imul
roll
sti
subl
sbb
insb
mov
pavgw
cmp
cmp
sub
adc
lock
ret
jg
out
and
jge
hlt
call
ret
mov
cltd
xchg
jle
sub
push
pop
add
xchg
cmp
sti
dec
sub
cmp
cmpsb
mulb
clc
jle
push
add
push
jne
jbe
iret
mov
gs
ret
mov
xchg
push
add
xor
adc
std
decb
and
sbb
mov
xor
les
imul
popf
stc
les
cld
pop
push
pop
pop
mov
in
xchg
adc
cltd
or
sub
daa
stc
lcall
jmp
mov
xlat
mov
mov
sbb
aad
pop
pop
ret
sub
sahf
jp
push
jle
dec
out
ret
push
sub
and
mov
add
bound
ret
out
clc
ja
xchg
das
cli
outsl
rolb
in
xor
movsb
daa
call
fildl
stc
addr16
fidivrs
and
sahf
movsl
push
sub
sbb
dec
mov
fldenv
inc
cwtl
lock
pop
mov
movsl
mov
clc
imul
cmpsb
and
cmc
jecxz
pop
sti
push
sbbb
mov
dec
xor
inc
add
pop
cltd
push
fcomps
mov
aam
daa
pop
into
dec
push
push
ja
clc
lret
repz
jbe
adc
push
and
add
clc
sti
mov
cmp
ja
xchg
inc
call
cmp
sbb
leave
movsb
inc
push
dec
bound
or
mov
mov
rcpps
lret
and
cwtl
push
outsl
rclw
gs
jge
data16
sbb
loop
xchg
mov
lahf
sbb
js
sub
fidivs
imul
mov
add
dec
ret
out
sbbw
xlat
nop
addl
shll
cmp
call
out
fwait
loopne
ss
jb
xor
movsl
jp
ss
out
and
cmp
in
out
cs
and
mov
jmp
mov
jl
push
inc
lret
add
jb
xor
xor
lock
insl
femms
popa
mov
addb
pushf
xchg
jmp
push
mov
aaa
xchg
stos
test
cwtl
xor
ret
sbb
out
test
add
repz
push
cld
lret
mov
xor
and
sbb
lret
int3
fwait
mov
cmp
pop
or
cmc
test
xor
pop
insb
mov
pop
scas
outsl
mov
mov
icebp
movsb
mov
push
cmpsl
shlb
mov
cmp
in
cmp
inc
sti
cs
mov
xchg
test
movsb
sub
js
xor
push
mov
mov
stos
pop
jle
push
mov
cli
xor
cmp
dec
jle
out
jmp
and
jge
jl
push
sub
in
rol
sub
pushf
ss
in
xlat
mov
and
inc
fwait
or
movsl
test
movsb
mov
and
add
mov
rorl
data16
insb
inc
mov
inc
nop
lret
fnsave
gs
push
adc
test
in
xor
inc
xor
mov
outsl
lds
cltd
lock
xor
push
jge
lods
repnz
stos
push
pop
push
aam
call
and
aaa
mov
mov
pusha
mov
xchg
enter
dec
dec
dec
xchg
hlt
sahf
aas
dec
pop
orb
vprotw
and
loop
mov
push
cmpsl
push
mov
fistl
and
in
jb
in
mov
out
add
lea
testl
push
aad
xor
jae
mov
call
lcall
out
pop
jno
fs
mov
orb
pop
gs
cs
push
aaa
lods
sbb
push
stc
adc
sub
iret
and
dec
andl
cmp
outsb
rol
jo
into
sbbl
jnp
dec
dec
add
add
or
in
jne
mov
cmpsb
js
xor
je
jecxz
call
not
das
test
faddl
cs
mov
inc
lret
std
fs
or
pop
sarl
or
andb
pop
or
lahf
gs
fisubrs
cld
arpl
nop
outsl
mov
mov
pop
add
dec
sub
pop
xor
bound
cmp
push
std
repz
pop
insl
in
jle
sarb
rcr
dec
push
xchg
cmp
mov
shlb
insb
push
jecxz
sbb
cmpsl
test
xor
out
stos
sbb
and
mov
sub
sbb
xor
lret
dec
add
fwait
daa
enter
fwait
mov
pop
mov
xor
test
sti
in
das
dec
iret
sbb
lret
inc
xor
loope
sti
or
mov
out
movsl
stos
push
cmp
adc
test
pop
popa
jo
add
lea
jg
dec
ficomps
mov
jnp
cmp
push
ret
sbb
aad
xor
adc
cmp
cwtl
pop
cmp
dec
sub
inc
je
ret
repz
jo
jl
rorb
fisubrs
inc
data16
aas
loopne
fcmovnbe
mov
ficoml
push
call
fildl
shrb
adcb
inc
mov
xchg
ret
or
out
iret
jp
imul
aad
jecxz
jle
cmp
sub
outsl
xor
aaa
jp
nop
cmp
ficomps
idivl
popa
mov
adc
and
xor
sub
mov
pop
les
hlt
outsl
pop
mov
stc
adc
fsubp
push
pushf
push
sti
ljmp
xchg
fsubrp
popa
push
ficompl
enter
mov
jg
sahf
push
push
sbb
mov
lret
stos
push
xor
lods
es
lahf
push
sub
rorl
sahf
jb
scas
aam
sub
aaa
sub
add
inc
pop
jo
mov
dec
mov
gs
xchg
gs
mov
icebp
in
dec
push
int
jmp
stos
sub
ss
mov
xchg
stc
dec
push
ja
nop
loopne
and
hlt
in
pop
xchg
clc
jb
add
inc
pushf
popf
lahf
sbb
lret
test
mov
add
xor
push
push
fildl
mov
fwait
mov
jecxz
lret
pop
dec
popf
pushl
inc
push
iret
pop
xor
roll
dec
lea
ret
clc
xor
enter
test
cmp
or
push
mov
call
jno
xor
call
mov
inc
or
hlt
sbb
lds
ljmp
mov
ljmp
push
push
lret
cwtl
testb
js
test
ja
lods
loopne
xchg
pop
lea
pop
mov
negl
pushf
fdivl
jb
movb
mov
xor
imul
sbb
xchg
loop
out
fldt
adc
cmc
rcll
mov
jp
xchg
jmp
shr
jns
mov
stos
bound
aam
fwait
clc
cmp
adc
adc
roll
jmp
repnz
jecxz
xchg
mov
stc
push
mov
lahf
repnz
pop
sbb
dec
push
pop
sub
mov
jl
mov
shl
jo
mov
loop
push
mov
mov
push
jp
mov
and
sbb
sub
or
psubq
clc
mov
xchg
outsl
aam
mov
imul
xor
and
daa
mov
outsl
inc
mov
lods
sti
fdivrp
add
or
inc
imul
cmp
outsb
clc
imul
addr16
and
mov
scas
xor
cmp
adc
dec
xchg
repnz
fwait
push
sub
lea
xor
dec
loop
push
pop
inc
adc
sbb
fmul
movsb
imul
add
mov
lcall
and
xchg
inc
popf
movsb
stc
je
gs
mov
inc
loop
cmpsl
mov
inc
loopne
shll
dec
mov
lret
bound
adc
iret
xor
jb
jge
adc
mov
mov
loop
rclb
dec
or
stos
enter
fdivrl
les
out
and
or
pop
scas
and
jl
lods
cli
aas
mov
jl
cmpsl
cmp
and
add
into
inc
inc
adc
mov
inc
push
imul
pop
sbb
test
sub
popa
pusha
push
nop
out
dec
hlt
dec
leave
cmp
inc
jae
add
xor
dec
xor
pop
idiv
adc
sarb
or
xor
fwait
pop
ret
ds
inc
sbbb
jae
push
pop
ss
clc
lds
mov
loope
leave
jecxz
aas
push
inc
and
repz
into
pop
push
pop
cli
sti
cs
fisubs
leave
inc
dec
sbb
test
lret
inc
mov
std
mov
aad
iret
pop
aad
ja
cltd
push
jne
mov
sbb
sub
cli
test
lret
cmp
cld
add
add
inc
outsl
repz
inc
or
aad
dec
jae
hlt
jno
mov
xlat
inc
mov
addr16
mov
aas
sub
xor
sub
add
mov
mov
jo
push
jb
sti
jg
mov
push
mov
test
addr16
jl
and
xchg
mov
and
es
or
pop
pop
jae
xchg
loopne
mov
adcb
jae
mov
mov
jnp
in
jne
mov
xchg
jle,pn
popf
in
insb
imul
cltd
adc
idiv
inc
jp
jb
cli
cmpsl
push
cltd
cld
in
movsl
rclb
stc
adc
lahf
ja
or
mov
cmpsb
mov
push
xchg
ret
fdivrs
into
out
cmp
call
cmp
bound
icebp
jge
push
roll
pop
inc
fistpll
push
popa
fninit
test
fsubrl
mov
lods
or
and
and
inc
pop
scas
setle
fdivs
out
test
cli
ljmp
mov
mov
aas
sub
push
rcrb
xor
xor
dec
push
mov
xchg
jne
sbb
lods
mov
fldcw
pop
jecxz
jbe
xor
or
jno
xor
popf
daa
sub
je
lods
sbb
adc
xor
negb
or
imul
iret
out
in
into
add
iret
insl
sbb
mov
aas
stos
mov
jne
xor
xchg
loopne
out
push
add
test
add
loop
jns
sub
xchg
dec
popa
dec
mov
insb
add
adc
test
gs
cli
push
dec
test
push
xlat
push
movsl
dec
repnz
aam
xor
push
jl
es
xor
jne
addr16
jp
aaa
add
aad
lock
jg
add
icebp
jo
xor
mov
mov
xor
sbb
push
xor
dec
adc
lahf
sub
xor
sbb
aaa
mov
cmp
lods
sbb
xchg
push
sbb
pop
pop
shll
xchg
and
xor
imul
xor
cmp
xor
movsb
dec
in
mov
mull
cmp
insl
jecxz
pop
sahf
and
adc
cwtl
dec
lock
ret
mov
sbb
and
daa
clc
or
xchg
jno
dec
or
mov
sarl
mov
mov
in
repnz
jge
loopne
cmc
cld
shlb
xchg
pop
adc
mov
dec
test
or
aam
mov
add
jmp
push
fildll
and
jb
clc
fists
lcall
lock
mov
mov
push
add
pop
jnp
sub
pop
add
sub
inc
enter
cmpsb
inc
and
repnz
popa
test
inc
push
add
jnp
jmp
xor
xchg
fldt
pop
dec
das
aam
cmp
sub
std
call
in
test
push
cltd
mov
inc
or
xor
test
test
adc
inc
dec
jge
nop
cli
pop
and
mov
or
mov
and
sub
push
sbb
je
notb
adc
pop
cltd
sahf
add
test
xor
aam
cmp
das
subl
lods
or
mov
mov
movl
xlat
sub
mov
lock
fildl
xor
mov
xchg
ret
cli
cmpl
inc
fisubrl
imul
test
xchg
data16
pushf
push
xchg
sub
inc
test
push
testb
nop
pop
cltd
or
popf
lods
add
and
mov
and
cmpsb
sbb
mov
shll
sarl
das
stos
cltd
shlb
movsb
scas
jg
mov
xchg
loopne
pop
inc
mov
mov
orb
xlat
insl
dec
pop
stos
icebp
cmp
mov
imull
sub
dec
popf
xor
clc
scas
mov
std
js
out
adc
imul
pop
xor
cmp
mov
sub
into
add
js
inc
sub
test
aam
mov
dec
dec
pop
mov
mov
pmullw
pop
mov
push
enter
push
lods
jns
dec
sub
push
push
mov
mov
sbb
int
ja
in
fcoml
push
popa
adc
out
jo
pop
inc
incb
ret
mov
cmc
mov
out
int
inc
negb
lods
and
xchg
mov
cli
shll
ljmp
pop
ret
js
lcall
addr16
outsb
rcll
push
aam
bswap
jae
lcall
repnz
into
shl
pop
jae
fsubl
mov
insl
jae
cs
and
xor
es
dec
int
mov
xor
cmpsl
or
xor
loope
loop
add
in
xorb
scas
fimull
and
push
sub
bound
cmp
sbb
stos
mov
xchg
sub
dec
cs
pop
dec
cmpb
push
mov
lret
or
adc
into
jge
mov
jne
js
test
fldenv
loopne
and
das
fistpll
cmp
stos
cltd
dec
inc
das
scas
sbb
insb
jle
mov
sbb
data16
sub
fwait
cmp
add
sahf
jno
movsl
dec
jge
sub
inc
xor
pop
mov
mov
insl
adc
loopne
or
sub
andb
shll
push
fcomps
mov
push
pop
or
cs
and
test
or
sar
dec
add
dec
cmp
fistpll
mov
int3
pop
or
das
or
inc
mov
jnp
mov
xchg
cltd
and
xor
outsl
stos
out
test
add
pop
adc
mov
inc
sub
adc
xor
pop
cmp
mov
sbb
adc
push
mov
data16
push
pop
xor
push
jmp
cs
mov
push
clc
mov
out
mov
fildl
jp
adc
pusha
rolb
sbb
aas
push
mov
pusha
int3
cld
or
add
arpl
jge
nop
lods
xchg
mov
and
and
roll
ud0
stos
and
pop
ljmp
rclb
out
xlat
mov
pop
push
pop
push
ja
addr16
push
inc
inc
mov
cmpsl
cmpsb
xchg
xchg
xchg
xlat
mov
pop
push
pop
push
ja
addr16
push
inc
inc
mov
xchg
test
mov
xlat
rolb
aaa
aaa
daa
and
push
pop
emms
jb
push
pop
scas
mov
int
cmpsl
div
mul
xlat
push
inc
push
aaa
leave
fmuls
push
out
push
test
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
pushf
lahf
mov
aad
stos
mov
pop
pop
push
aas
sub
pop
pop
dec
jg
outsl
pushf
lahf
mov
int3
iret
cld
in
out
sbb
or
cmp
sub
pop
pop
dec
dec
jl
insb
outsl
pushf
lahf
mov
int3
iret
cld
in
out
sbb
das
push
dec
dec
dec
das
pop
or
add
sti
mov
sbb
or
add
pop
ss
sub
pop
xchg
xchg
hlt
sub
inc
scas
push
push
fsubl
int3
xor
repz
mov
aas
shrl
or
cmp
pop
dec
in
mov
mov
mov
cmp
jl
subb
stos
mov
stos
mov
movsl
push
in
mov
ffree
rcl
or
dec
pop
test
or
imul
add
addr16
mov
cmpsl
sbb
xchg
int3
or
sbb
mov
inc
int3
pop
xor
push
loopne
push
int3
cmp
mov
push
outsl
pop
lahf
mov
int3
iret
cld
in
out
sbb
or
cmp
sub
pop
pop
dec
dec
jl
insb
sub
repnz
pop
cli
stc
ljmp
lcall
dec
push
imul
std
sbb
ljmp
clc
mov
nop
test
arpl
sub
stos
xor
and
iret
mov
cli
lret
leave
fistpl
in
out
sbb
or
cmp
sub
pop
pop
dec
dec
jl
insb
outsl
pushf
lahf
mov
int3
iret
cld
in
out
sbb
or
cmp
sub
pop
pop
dec
dec
jl
insb
outsl
pushf
lahf
in
lcall
icebp
xor
xchg
push
imul
les
xor
mov
cld
cld
fisttpll
pop
adcl
push
mov
je
out
movsb
jge
and
inc
sub
lcall
inc
push
sub
and
mov
js
insb
icebp
cmp
pop
jnp
addl
mov
loopne
out
gs
jg,pt
dec
inc
lds
inc
pop
and
sbb
mov
hlt
js
cmp
dec
cmpsb
ds
aas
and
fsubs
repnz
int
movsl
stos
mov
inc
lods
jo
ljmp
stc
outsb
ficoml
sub
das
jl
ret
sbb
jb
ss
int
sub
negb
fidivl
jno
popf
jnp
or
mov
mov
bound
inc
dec
dec
xchg
das
fninit
iret
and
stos
mov
add
or
mov
fists
cmp
outsb
jle
and
sbb
fdivrp
test
enter
fstl
mov
dec
lock
js
fstl
inc
pop
mov
lea
jmp
and
xor
leave
ds
mov
pop
out
cmp
mov
in
lret
jo
jb
mov
out
mov
xchg
and
popf
sti
push
int
aad
pop
addr16
push
int3
push
sub
dec
stos
test
cmp
repnz
push
cwtl
mov
call
ja
xchg
inc
jge
adc
lret
test
mov
std
rolb
sahf
inc
xchg
adc
jp
add
xlat
pop
cwtl
decl
lock
jg
xor
add
in
gs
push
call
xor
jb
inc
push
jae
mov
xchg
cmp
out
aaa
mov
stc
push
testl
leave
sub
fmuls
hlt
inc
movsb
sub
sub
jg
ja
add
xor
aas
jae
xchg
movsb
pop
inc
or
sbbb
aam
push
fidivs
fimull
iret
sub
sub
out
push
enter
pop
push
adc
mov
and
dec
jmp
in
mov
adc
push
mov
ljmp
xor
jp
xor
faddp
mov
lods
pop
addl
inc
and
mov
inc
push
dec
cmp
mov
mov
aam
pop
and
hlt
mov
mov
loope
les
push
xchg
jbe
jge
ja
push
lcall
out
xor
loop
mov
mov
clc
push
stc
rorl
push
std
aaa
cmp
rcrb
jge
fsubl
jl
xchg
imul
dec
add
xchg
xchg
push
dec
fs
add
inc
popf
nop
loop
xchg
push
mov
fistl
fcompl
aas
pop
pop
out
mov
jo
cs
and
jbe
iret
jae
int3
fstl
sub
cmp
imul
stos
pop
xlat
mov
incb
ljmp
loopne
sti
ja
sub
push
movsb
mov
inc
and
xchg
xchg
jae
mov
mov
pop
mov
lds
into
or
dec
in
mov
and
sub
pop
fisttpll
jmp
outsl
das
mov
jge
inc
insl
dec
ja
sti
lret
cmp
push
in
fdivs
jmp
or
jno
adcb
lock
loopne
aam
cmp
jae
in
dec
or
pop
out
xor
mov
sub
xchg
mov
xor
out
ja
mov
jnp
pop
out
test
int3
stos
jne
clc
sbb
pusha
in
push
add
dec
jmp
outsl
loope
sub
testb
cwtl
outsl
jae
out
movl
es
or
dec
stos
sub
or
xchg
cmpl
mov
pusha
test
test
sbb
xchg
rcrl
adc
popa
dec
dec
mov
sub
mov
test
andl
testl
inc
enter
push
pusha
mov
jecxz
pushf
cmp
loope
outsl
cmp
mov
pop
pop
sbb
sbb
jp
xor
sub
les
popf
mov
jo
mov
sub
ret
jns
rol
enter
sahf
pop
inc
pop
push
dec
mov
add
mov
mov
pop
xor
and
aam
cmp
sub
xchg
lcall
enter
mov
lock
sarb
mov
and
mov
cmpsl
out
push
jmp
dec
jne
xchg
xor
sbb
jae
nop
xchg
cld
dec
dec
repnz
mov
push
or
dec
adc
mov
cwtl
pop
or
dec
sub
test
and
or
or
lods
hlt
aaa
sub
hlt
std
pop
pop
jg
pop
dec
xor
insl
xor
mov
xchg
mov
pop
repnz
inc
mov
test
lods
push
cmp
ja
pop
popa
fdivs
inc
popf
sub
repnz
mov
sti
das
inc
int3
mov
add
loopne
sub
fldl
dec
lret
mov
fiadds
fs
mov
jge
xchg
cs
repnz
fwait
xlat
pushf
test
inc
mov
fwait
daa
scas
xor
push
mov
adcb
call
insb
or
cli
sbb
test
shlb
jno
iret
jnp
lods
push
scas
xor
or
ret
inc
mov
jbe
pop
pop
xor
shll
adc
rcll
in
pop
cmp
popa
jnp
sub
pop
fidivs
push
push
inc
and
outsl
adc
mov
jo
das
jb
push
push
es
and
fcmovbe
push
xchg
cmc
pop
push
fstpt
mov
xor
shll
iret
insl
cmp
testb
sub
in
in
pop
xor
xchg
rcrb
jns
cmp
mov
push
mov
push
pop
xchg
jle
and
rol
stos
sub
js
mov
popa
push
insb
outsl
in
sub
icebp
cwtl
mov
insb
mov
pmulhuw
xchg
into
mov
arpl
jge
test
shlb
out
cmp
push
lcall
pop
push
outsb
stc
std
scas
pop
add
popa
fnstcw
popf
fcoms
mov
loop
out
hlt
sbb
and
loop
sub
loope
jl
jb
enter
mov
jmp
mov
xor
loop
sbbb
dec
enter
int3
pop
sub
mov
addr16
mov
in
loopne
lods
sti
xlat
pop
cmpps
mov
mov
push
xor
cmp
imul
pop
leave
into
imul
ljmp
aas
ds
and
shrb
aas
lahf
xchg
mov
pop
stc
inc
mov
and
mov
mov
rcl
xchg
push
push
adc
iret
iret
jg
push
jg
mov
in
mov
fs
fidivs
jb
stos
pop
xchg
pop
loopne
insl
lret
test
inc
sub
pushf
outsb
addr16
jbe
iret
xchg
lock
mov
lret
xchg
ja
test
ret
mov
xchg
xchg
repnz
lcall
adc
lods
ljmp
in
inc
mov
mov
out
ficoml
sbb
movsl
inc
das
xor
xchg
sub
jne
out
fwait
push
pushf
dec
stos
jb
scas
jno
ss
loop
cmpsl
pop
jns
loop
xor
dec
clc
out
call
xor
ljmp
int3
mov
lcall
push
xchg
jne
scas
lret
mov
push
js
aas
push
pop
lcall
mov
xchg
jno
outsb
inc
mov
mov
out
cmp
and
pusha
stc
pop
pop
cmp
jb
inc
add
xchg
daa
loop
int
or
sarl
sbb
test
sbb
int3
jl
adc
addr16
test
fisubrs
js
mov
cmp
add
outsl
andb
inc
mov
sbb
or
xor
fildl
lahf
add
ror
lods
mov
call
hlt
mov
jp
sub
pop
mov
cmp
aam
int3
inc
data16
and
push
arpl
in
push
fisttps
inc
adc
xchg
cmp
mov
cmp
push
ss
xchg
fstps
cmpsb
inc
pop
fidivl
insb
fiadds
and
stos
add
scas
sub
xchg
in
stos
xlat
push
push
mov
mov
orl
mov
repnz
xor
insb
mov
movsb
pop
stos
push
rorl
out
popa
adc
sub
rolb
xor
das
adc
fdivrp
lret
jp
dec
dec
shrb
mov
or
or
pushf
lods
jb
dec
mov
xchg
xchg
mov
pop
ds
xchg
pop
out
sbb
dec
xchg
inc
lock
std
cld
data16
mov
mov
and
mov
jne
mov
pop
push
aaa
fsubr
out
arpl
pop
or
push
or
mov
xor
fisttps
adc
insb
push
shll
jl
cmp
sbb
shrl
popa
imul
flds
data16
movsl
and
sbb
mov
adc
ret
push
js
lock
ret
adc
adc
cmc
mov
adc
sub
sbb
pop
cmp
cmpsl
out
mov
dec
sub
pop
jae
movsl
dec
jp
jg
lods
jnp
sbb
jp
mov
add
adc
jno
adc
out
test
sub
pop
mov
cmp
cmc
mov
outsl
mov
add
pop
push
cld
popa
pop
mov
sub
divl
pusha
std
rcrb
adc
mov
lods
add
in
jo
lds
sbb
or
xor
int
je
xchg
sbb
sti
or
es
push
push
jae
inc
xchg
into
xchg
xchg
lcall
ror
sarb
outsl
add
jae
fmull
or
cld
dec
sbb
add
cmp
sbb
add
xor
push
dec
repnz
in
mov
jne
aaa
fstps
icebp
xor
xlat
pushf
subb
adc
adc
cli
stos
aad
test
lahf
xchg
sbb
mov
shll
lea
adc
in
negb
pop
push
lods
aas
sahf
pop
lcall
xchg
addl
lock
addr16
push
xchg
push
imul
gs
test
push
or
popl
inc
add
ret
add
mov
mov
icebp
test
push
cmp
notb
out
mov
cmpsb
or
sub
aaa
test
fisubrl
out
xor
pop
mov
pop
xchg
and
ja
std
cmp
sub
mov
mov
out
and
negl
mov
test
xchg
fwait
fwait
inc
dec
mov
pop
adc
rsm
cmp
int
adc
int
xor
push
stos
sub
xlat
imul
jb
outsl
mov
stc
aas
push
jne
dec
rol
lds
call
out
cmpsb
dec
cs
mov
mov
rolb
dec
lret
stc
filds
lods
mov
mov
clc
test
jae
arpl
pop
nop
dec
inc
enter
mov
scas
test
inc
or
ljmp
popf
fdivs
fdivrl
pop
xchg
mov
aam
cmp
sar
movb
lret
cmp
test
popw
sbb
jbe
mov
test
and
fidivrs
add
sub
pop
xchg
push
in
jb
aas
sbb
mov
pop
or
rorb
pop
xor
shrb
mov
fwait
in
push
cltd
jg
adc
fs
cli
sbb
mov
in
int3
movsl
fisubs
lods
lret
sub
sbb
sahf
repz
adc
shrl
outsb
mov
cmpsb
das
int3
lods
mov
xchg
lds
out
add
cli
shrl
xor
imull
idivl
cmp
sub
out
movsb
cmp
dec
add
jo
out
lods
jno
inc
jmp
popa
push
ret
cmp
cwtl
insl
test
pop
js
push
add
imul
sub
mov
mov
or
popf
mov
iret
cmpsl
jo
xchg
popa
popa
adc
imul
xor
cmp
cli
mov
lahf
push
incb
mov
lods
mov
vxorps
repz
pushf
inc
lea
xchg
cs
pop
mov
dec
inc
adc
jne
dec
xchg
adc
ljmp
sub
enter
push
test
adc
xchg
jge
cmp
in
sub
sub
jne
ror
pop
inc
loop
imul
rorl
fcoms
and
push
mov
mov
inc
push
inc
lcall
call
mov
push
cld
or
loope
in
repnz
aad
push
fsubr
lods
outsl
sub
scas
pop
cmp
cmpsb
daa
add
lods
and
xchg
mov
leave
std
or
test
mov
add
pop
mov
ljmp
mov
fildll
mov
bound
movsb
mov
insl
inc
or
je
arpl
test
mov
mov
add
lret
loop
fidivrs
cmp
jmp
push
mov
pop
les
xchg
push
cmpsl
sbb
ret
mov
and
test
ret
add
adc
idivb
push
icebp
test
adc
mov
ficomps
jnp,pn
push
sub
push
cmp
in
repnz
inc
fstps
mov
shll
lods
call
ret
xchg
addr16
jo
sbbl
jmp
pop
enter
cld
jbe
push
fs
sbbb
int
lret
loope
or
out
mov
jl
sbb
xchg
fdivr
ss
push
test
dec
dec
pop
jbe
push
test
lret
popa
add
pushf
movsb
push
lahf
testb
dec
add
adc
xchg
hlt
mov
and
outsb
mov
cmc
mov
lea
pop
xchg
sbb
jnp
daa
push
push
mov
bound
cld
in
pop
movsl
mov
push
mov
std
insl
xor
inc
loope
shrl
pop
dec
xchg
cmp
dec
inc
and
or
sub
jge
aad
push
movsb
adc
out
je
imul
inc
stos
arpl
mov
stc
sahf
rorb
pop
add
out
xchg
ja
pop
push
inc
icebp
mov
fs
cmp
loop
jns
push
out
ret
push
mov
js
negb
pusha
mul
xchg
xchg
dec
dec
mov
cmc
inc
add
es
dec
sbb
inc
inc
and
mov
hlt
sub
hlt
cmpsb
mov
out
mov
mov
sahf
pop
mov
mov
ja
mov
adcl
idivb
push
dec
push
ljmp
test
jp
cli
dec
in
out
fistpl
mov
add
decl
mov
mov
arpl
pop
stc
pop
lock
enter
loope
sbb
repz
loopne
mov
rol
sub
cmp
push
fsubrs
aam
les
out
js
adc
add
push
outsl
fmull
xor
inc
iret
cli
xor
lods
pushf
push
xor
test
lock
cltd
je
mov
ja
aas
pushf
dec
jns
aad
outsl
aam
jle
cmp
mov
xchg
adc
leave
ror
arpl
ret
jp
fsubrl
imul
cmp
or
fwait
mov
repz
xchg
xchg
subb
dec
fsubl
pop
xchg
mov
faddl
mov
adc
mov
and
addr16
inc
push
and
es
fiaddl
pop
adc
mov
cltd
push
or
movsb
sbb
cmpsb
in
pop
jp
cmp
and
inc
jmp
xchg
roll
push
cmp
stc
in
sbb
lcall
pushf
daa
lahf
gs
sbb
int3
dec
jmp
mov
sbb
add
lods
adc
repnz
stos
ffreep
fs
call
leave
sbb
jecxz
rcl
cmpl
push
add
pop
xor
mov
adc
test
mov
repnz
pushl
aad
mov
xchg
pop
out
das
xor
mov
pusha
out
nop
insb
xchg
xlat
mov
lret
mov
test
ja
sub
and
sbb
push
aam
xor
xlat
aaa
jle
mov
cmc
lret
mov
push
ret
out
or
bound
push
fisubrl
sbb
jp
mov
cltd
sub
test
ror
jl
bnd
ficoms
pop
cltd
mov
mov
cmp
jns
cmp
xchg
rolb
ret
push
and
fstl
push
subps
mov
inc
in
les
fstl
cmpsl
aam
cld
shll
sub
xor
scas
imull
cmovp
pop
movsb
iret
fdivrl
pop
mov
and
cmp
js
pop
mov
pop
pop
notl
das
out
fwait
and
stc
sub
pop
pop
xor
xchg
and
jmp
mov
push
xor
cmp
push
dec
inc
sbb
and
xchg
mov
jns
xor
xchg
loop
and
cwtl
jb
rcll
xchg
stc
xchg
and
lcall
adc
sbb
cmp
xor
jecxz
mov
xchg
cmpsl
das
sar
imul
push
outsb
pop
jnp
daa
mov
int3
icebp
xor
in
or
into
fwait
sub
repnz
rcl
nop
fnsave
mov
ljmp
popf
dec
imul
mov
insb
mov
mulb
icebp
push
ds
pushf
cmp
adc
mov
push
sbb
mov
jnp
push
cltd
sub
xchg
incl
jecxz
mov
dec
and
out
mov
xor
das
in
stos
xchg
ljmp
cs
fisttpl
ret
sarl
push
dec
mov
inc
or
or
mulb
add
and
jbe
out
jmp
sbb
pop
xchg
adc
cmc
gs
mov
mov
mov
cmp
lcall
test
and
cmp
cmp
sbb
xchg
dec
popa
shl
pop
sbb
pop
popf
cmpsb
dec
mov
sarb
inc
int
xchg
dec
sub
pop
pop
mov
cmc
addr16
and
mov
push
cld
cmp
xlat
imul
out
ds
sahf
rcrb
inc
ret
ds
inc
movsl
sti
dec
test
out
cli
pusha
std
icebp
xlat
mov
repz
insb
mul
mov
inc
fwait
push
mov
mov
mov
imul
mov
cmp
js
jecxz
xchg
adc
sub
adc
das
adc
sub
mov
add
aaa
cltd
mov
mov
ds
icebp
inc
lret
sub
or
std
fdivr
mov
shlb
clc
outsl
xor
push
adc
dec
pop
jl
repz
hlt
jmp
or
icebp
aaa
xchg
pop
sti
ret
inc
mov
fwait
push
lock
out
mov
dec
inc
test
lods
movsl
inc
sbb
enter
test
mov
mov
div
out
fdivrs
and
mov
inc
pop
lods
shl
shrb
inc
scas
adc
adc
adc
push
lret
cmc
call
js
sbb
inc
pop
loope
dec
sbb
and
or
xor
lods
lods
dec
push
dec
jns
lods
mov
push
lds
sbb
pop
mov
adc
leave
push
mov
sbb
enter
aad
pop
ds
mov
push
inc
and
lods
outsl
dec
scas
mov
scas
xor
xchg
repz
cli
or
push
inc
sbb
mov
ja
adc
xchg
vcvtsi2ssl
sub
sub
test
cmp
sub
push
or
stos
xor
cmp
inc
dec
xor
jne
scas
rclb
cmp
out
xor
xor
push
inc
push
xchg
inc
outsb
dec
mov
leave
mov
pop
and
orl
xchg
lds
rcll
lods
aam
data16
and
adc
jl
stos
jmp
mov
cmp
daa
mov
dec
enter
repnz
cmc
popa
mov
es
xchg
aad
outsl
gs
mov
pop
leave
je
add
push
clc
push
dec
daa
and
cmc
scas
mov
xor
mov
out
dec
test
aam
push
mov
jmp
push
jb
ds
inc
pop
lods
ds
jle
push
mul
int
push
loope
js
dec
outsl
dec
xchg
pop
pop
xor
out
xor
pop
cli
add
sbb
mov
les
mov
loop
mov
add
outsb
loope
fists
and
fbstp
iret
iret
and
rolb
incl
mov
xchg
int3
iret
cld
in
out
sbb
or
cmp
sub
pop
pop
dec
dec
jl
insb
outsl
pushf
lahf
mov
int3
iret
cld
in
out
sbb
or
cmp
sub
pop
pop
dec
dec
jl
insb
outsl
pushf
fwait
mov
int
cld
in
out
sbb
aas
sub
dec
jge
insb
outsl
pushf
lahf
mov
int3
dec
jl
insb
adc
loopne
movsl
xchg
aas
sub
sub
les
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
push
xlat
inc
out
mull
jp
insl
aad
mov
ret
ja
pop
xchg
adc
mov
out
mull
adc
and
push
mov
pop
xchg
daa
andb
aaa
mov
pushl
bound
xor
ret
psrad
xlat
js
jnp
pusha
mov
out
xorl
callw
rorl
cmpsl
das
andnps
mov
sub
lahf
adc
popf
lods
xchg
xchg
std
and
cmp
fwait
xrelease
out
outsb
daa
loop
repz
sub
test
shrl
ja
adc
test
pop
xor
pop
pop
xchg
jmp
daa
dec
aaa
sub
inc
mov
js
xchg
add
mov
int3
or
push
or
pop
jge
dec
aaa
das
xchg
mov
mov
js
pop
ljmp
xchg
or
incl
daa
das
das
les
mov
js
xchg
push
inc
mov
ret
daa
jecxz
xchg
cmpsb
aaa
mov
out
mull
adc
and
dec
ret
outsb
loop
xchg
jb
stos
cmp
orl
jle
add
jl
jb
mov
mov
lcall
push
mov
jecxz
push
mov
mov
adc
pop
xchg
cmpsw
inc
in
add
xor
pop
icebp
jl
push
xlat
push
repnz
sbb
add
rclb
addr16
pop
xchg
pop
andb
aaa
mov
out
mull
adc
and
push
ret
ja
pop
xchg
pop
andb
aaa
mov
pop
rolb
aaa
mov
add
fs
inc
xor
lods
push
fadd
pop
or
add
outsb
inc
dec
bound
sub
jecxz
pop
mov
aad
mov
mov
and
sub
inc
xchg
mov
push
xchg
or
inc
xchg
pop
cltd
pop
es
sub
out
outsl
and
icebp
ss
out
push
jno
imul
push
push
pusha
in
test
push
not
ficomps
xor
lret
repnz
or
add
push
jmp
xlat
sub
mov
ret
jno
adc
test
popl
dec
jl
out
adc
sub
pop
stos
fcmovu
jge
jae
cld
dec
int
cld
adc
or
push
and
loope
mov
adc
mov
cmp
aaa
push
lea
icebp
jb
test
lds
or
iret
nop
imull
xor
scas
and
adc
cmp
std
fisttpll
or
push
push
mov
out
dec
dec
aaa
and
inc
dec
fimuls
inc
sub
fwait
lods
cmp
aam
jae
sub
addb
ffreep
xor
les
add
mov
add
call
adc
xor
das
dec
mov
dec
xor
gs
rorb
sub
rep
sub
cwtl
ja
repz
fisttpl
add
xchg
dec
and
mov
mov
mov
adc
ljmp
ficoml
jl
idiv
aaa
mov
and
sbbb
xchg
fwait
fwait
mov
leave
fdivrl
push
pop
popf
jle
test
sahf
les
mov
shlb
mov
aad
push
mov
jp
in
mov
push
push
data16
iret
aam
cmp
push
dec
cmpsb
pop
pop
leave
xor
call
leave
add
sti
repnz
sub
out
push
fwait
cwtl
xor
mov
cmp
repnz
or
mov
cmp
mov
cmp
shl
jns
mov
lret
xlat
jo
sub
lock
test
loop
dec
aaa
sub
bound
jecxz,pt
push
adc
icebp
mov
mov
pop
pushf
pop
insl
es
jo
std
ret
mov
nop
jmp
imul
in
sub
icebp
pop
inc
cli
dec
stc
sub
std
fists
int
outsb
xor
xchg
in
ss
xor
loopne
inc
ret
sub
fldl
pop
aam
or
cs
and
scas
je
mov
insb
sbb
call
lods
jo
out
adc
xchg
daa
fiadds
nop
pop
and
mov
jp
add
movups
xchg
xchg
lock
pop
inc
das
jae
mov
add
dec
into
mov
jns
repz
mov
ss
je
scas
and
cmpsb
ja
jae
test
mov
in
push
out
mov
xchg
pusha
mov
insl
stc
push
aam
sbb
push
outsb
sub
fisubl
push
stc
jg
inc
in
je
call
notb
cmc
and
mov
insl
jecxz
ss
outsb
imul
das
push
sbb
and
movsb
push
sbb
scas
into
imul
jne
sbb
sub
aaa
outsb
lea
mov
sub
jns
cld
scas
jno
inc
jle
cld
dec
in
mov
test
fsub
jns
xor
cmp
add
jge
aam
ja
dec
cmp
mov
dec
lcall
inc
adc
fldl
xor
cmp
push
out
subl
mov
ret
push
xorb
or
mov
cwtl
mov
xchg
mov
int
mov
add
enter
in
jno
call
xchg
jno
cmp
push
adc
push
sbb
jg
icebp
sub
inc
xchg
dec
cmp
adcl
mov
les
adc
aad
popa
inc
mov
imul
test
scas
mov
subb
xchg
sbb
aad
jmp
clc
dec
ret
mov
frstor
xor
jle
add
testl
jae
test
das
sti
fisttps
dec
and
pop
mov
pop
add
inc
outsb
fwait
xchg
mov
sbb
mov
lods
enter
inc
mov
data16
sbb
loop
or
jb
and
mov
push
jge
cwtl
rcr
pop
out
and
outsl
outsb
xor
jae
mov
popa
jmp
or
jo
clc
cld
pop
cmp
ljmp
iret
or
into
push
adc
xor
aad
pop
adc
cs
repz
xor
jge
adc
js
inc
test
arpl
and
stos
icebp
aaa
cmc
fs
aam
ljmp
mov
cmc
cmpsl
sahf
clc
adc
jo
or
jno
lock
aaa
mov
sbb
mov
mov
test
pop
popf
ds
sub
jno
adc
push
push
sub
pop
dec
mov
push
int
xlat
xor
stos
sub
jnp
mov
dec
push
push
lret
add
inc
mov
cltd
das
push
sahf
mov
shll
test
jl
cli
insb
jecxz
dec
push
rcrl
loop
pop
adc
inc
mov
aad
sbb
add
and
add
push
shll
adc
test
push
popa
data16
ja
xchg
jmp
aas
mov
stc
gs
and
pop
scas
adc
inc
inc
sub
dec
inc
push
jge
mull
mov
mov
sub
lock
add
jns
mov
pop
shl
mov
add
cltd
addr16
push
and
adcl
push
sti
lds
int3
mov
push
cli
or
xor
imull
fdivr
or
cmp
mov
fwait
shlb
sub
sbb
scas
call
in
jecxz
repz
hlt
sbb
sub
jmp
in
cmc
repnz
add
testl
inc
movsl
test
adc
out
int3
sub
xchg
cmp
jb
mov
cmp
sbb
or
jae
sub
jne
dec
mov
xchg
rcr
add
pop
and
bound
pop
cli
inc
fimuls
xchg
ja
sub
imul
adc
and
fdivrl
cmp
int3
xchg
je
push
inc
push
ds
lods
ror
repz
enter
aam
ja
stc
fstl
ret
dec
adc
in
cmp
xor
xchg
out
test
outsb
dec
push
jg
jnp
inc
test
pcmpeqb
fs
mov
das
fdivrl
xchg
stc
sbb
xchg
jno
cmp
fisubrs
pop
adc
sahf
ret
out
xor
mov
in
pop
rcrl
or
outsb
mov
mov
inc
sbb
mov
cmp
cmp
push
push
imul
das
fcompl
outsl
rsqrtps
imul
stc
nop
dec
cmp
jmp
pop
lahf
pop
sbb
jmp
inc
fnsave
fs
inc
movsl
pop
mov
sub
dec
or
inc
mov
cmp
mov
fs
inc
push
pop
or
shrl
dec
cmp
daa
jae
fbstp
pop
test
ret
sar
mov
sub
xor
inc
mov
fsubrl
testb
cmpsb
jb
sbb
sub
insl
ljmp
mov
dec
adc
fidivrl
adc
xor
mov
mov
ror
enter
and
mov
int3
fs
loopne
xor
pop
add
mov
ret
mov
xchg
xchg
inc
lret
adc
imul
ljmp
aas
mov
push
xor
mov
add
sahf
test
jg
jbe
jnp
test
std
mov
jecxz
pop
jnp
inc
jge
add
pop
pop
stos
outsb
jp
dec
shrb
sbb
push
push
mov
inc
fadds
jno
mov
and
inc
hlt
add
int
xor
xchg
xchg
mov
or
outsl
ljmp
out
daa
or
or
cmp
push
rorb
scas
push
push
pop
pop
mov
das
rcrb
enter
push
scas
jle
int
cmpsl
xor
ja
daa
pop
lret
ss
negb
push
jmp
cwtl
fiaddl
sbb
dec
mov
mov
into
shl
jo
cmp
add
inc
push
xor
pop
jecxz
jae
mov
push
mov
mov
mov
push
stc
inc
mov
sbb
xchg
fistl
aas
lahf
pop
in
imul
iret
ss
shr
inc
jge
push
jb
adc
push
fdivl
pop
cli
andb
ss
lods
xchg
mov
mov
stos
dec
sub
sbb
ds
or
adc
mov
mov
vpunpckldq
cmp
out
xor
rcrl
push
mov
push
loopne
sbb
mov
sub
jl
mov
jl
mov
lods
outsl
scas
mov
mov
cmp
inc
sub
pop
movsl
pop
insb
and
push
push
push
outsl
subl
adc
lahf
shl
lods
fdivrl
jle
xchg
aad
push
rorb
mov
jmp
fdivs
aam
cltd
popf
out
mov
insl
add
xor
fildll
stc
aam
xor
push
ficoml
inc
mov
xor
jbe
and
lods
adc
inc
daa
cmpsb
mov
bound
sub
push
xlat
lods
mov
dec
inc
xchg
adc
shll
dec
out
mov
fisubrl
jmp
xor
pop
cmp
and
xor
dec
popf
cmp
sbb
and
cli
jle
jmp
pop
and
pop
mov
sub
mov
lds
pushf
fmuls
jb
in
dec
cmp
mov
mov
shll
stos
je
bound
push
fcoms
add
test
dec
aas
addr16
arpl
fwait
divb
xor
jnp
subb
in
jbe
outsb
add
mov
xchg
jg
push
mov
pop
mov
cmp
cmpsl
cmp
mov
or
and
je
aaa
push
loopne
pop
xlat
test
jb
in
sbb
mov
outsb
mov
in
cmp
callw
ret
out
cmp
inc
pushf
xchg
mov
dec
or
push
mulb
fnstsw
mov
ljmp
lods
dec
inc
push
adc
pusha
aad
or
rcrl
incl
ss
adcb
pop
jns
movsl
aam
xor
out
xchg
adc
stc
outsb
add
mov
gs
mov
sahf
test
xor
push
jbe,pn
loope
mov
cmp
gs
hlt
out
xor
mov
push
jns
stos
push
adc
or
pop
xchg
lahf
or
insl
xchg
shr
rol
stc
aad
popf
pcmpgtw
jecxz
jns
hlt
jp
xchg
or
fdivl
or
adc
dec
subb
jnp
mov
imul
pop
fwait
mov
ucomiss
jne
imull
popa
or
sbb
or
mov
int
push
mov
fwait
sbb
andl
cmp
int
es
adc
imul
lret
rorl
scas
outsl
into
addr16
and
scas
add
test
push
ljmp
lahf
enter
aad
add
jne
xchg
mov
jns
mov
mov
adc
cmp
mov
loope
ret
outsl
sbb
jg
cmp
leave
cmp
push
lds
dec
mov
jg
cmp
adc
dec
cltd
in
mov
arpl
cld
mov
cmpsl
sti
add
jg
xor
lea
jnp
out
ret
pop
mov
call
dec
dec
mov
jne
pop
xor
sub
push
ret
xchg
mov
ja
and
movsl
insb
sub
jle
adc
or
imul
push
std
cmp
dec
or
fidivl
aam
mov
adc
mov
cmp
mov
dec
sbb
and
or
test
sub
xor
lds
or
xor
lret
out
aam
push
cmc
add
mov
sub
or
test
or
sbb
jle
fnsave
push
jle
lock
mov
or
sub
add
fs
in
ljmp
push
in
mov
mov
sub
lods
mov
bnd
shll
lds
jbe
cmp
loop
mov
sub
jo
je
pop
fcoml
add
sub
rolb
xchg
xchg
push
sub
cmp
inc
pop
cltd
xchg
lret
jmp
or
pushf
fcomps
sbb
gs
xor
addr16
mov
mov
test
jg
xor
loope
or
add
cld
add
insl
cmc
xor
loop
lcall
cmpl
data16
aad
es
insb
pop
cmp
sarl
mov
mov
je
jecxz
mov
dec
inc
repnz
or
mov
idivl
pop
cmp
outsl
and
xchg
sbb
in
adc
dec
mov
leave
inc
jmp
imul
int
mov
addb
mov
pop
jmp
inc
cmp
adc
inc
fsubs
dec
insl
inc
in
nop
adc
dec
cwtl
mov
mov
jge
mov
cmovg
scas
add
cli
ss
repnz
push
out
pop
dec
mov
fdivrl
fstps
mov
dec
add
js
lret
cmovbe
das
test
cmp
add
lret
aam
call
cltd
test
pop
xor
xor
in
clc
out
stc
sahf
mov
mov
hlt
loop
iret
js
mov
das
icebp
iret
imul
sar
sub
mov
cltd
scas
fwait
mov
pop
stos
dec
and
xchg
arpl
lea
pop
jg
pop
loopne
or
outsb
cmpsb
pop
add
pop
test
stos
or
push
frndint
inc
fnstenv
jg
push
stos
stos
into
repnz
sbb
sahf
sbb
negl
pop
std
lret
movsb
jge
mov
mov
idivl
lods
xor
jb
das
cld
xorb
mov
lret
loop
cmp
stc
inc
insb
adc
or
cs
mov
insl
cld
xor
pop
sbb
jg
fidivrl
rcll
in
jns
sbb
cmp
mov
shr
aas
jmp
sbb
sub
xchg
cwtl
lock
mov
xchg
xchg
mov
testb
cltd
push
ret
mov
push
lahf
scas
fdivs
rcl
and
fiadds
sbb
repnz
mov
shl
test
sbb
lds
sub
pop
inc
pushl
lds
jl
xchg
xchg
inc
lret
lahf
rolb
pop
mov
test
jnp
fdivrs
loop
jne
xchg
lahf
inc
dec
cmp
or
fwait
mov
adc
jmp
inc
xchg
xor
shrl
dec
pop
fsts
sarb
lock
cmp
sub
inc
adcb
push
test
and
pop
pushf
jb
jo
jecxz
fistps
mov
popa
aas
in
dec
inc
fwait
jo
lods
ds
subb
les
mov
pop
lret
dec
and
mov
outsl
jnp
xchg
xchg
mov
cmp
lahf
jmp
mov
add
sbb
lret
dec
std
jne
scas
les
fsubl
mov
and
jmp
iret
outsb
inc
push
push
es
pop
xchg
dec
jge
jo
std
sub
add
rorl
and
addr16
hlt
add
xor
sbb
jecxz
loopne
lcall
aam
bnd
outsb
fadd
cli
add
adc
cmovns
sub
cmp
xorl
repnz
fdivr
sbb
jmp
neg
icebp
inc
ficomps
mov
lds
mov
sbb
dec
mov
clc
cltd
xor
icebp
aaa
fsubrl
cmp
shrb
int
cwtl
enter
idivb
push
scas
add
inc
popf
jne
int3
mov
jmp
adc
mov
inc
mov
mov
lret
jbe
fiaddl
fwait
outsb
aas
fwait
out
push
in
mov
pop
xor
repnz
and
cli
jb
mov
data16
and
mov
mov
push
out
cltd
into
lea
pop
leave
and
pop
or
rol
xchg
inc
incb
pop
bnd
sub
fbld
and
mov
sub
inc
pop
dec
mov
cld
pop
pop
inc
push
xchg
add
jle
xchg
adc
loop
push
jae
aad
repnz
test
xor
cvttps2pi
iret
pusha
mov
add
mov
iret
out
shrb
or
push
adc
ljmp
in
mov
add
enter
sbb
scas
sub
int3
insl
push
scas
test
inc
jb
push
js
mov
stos
and
sub
aad
mov
adc
out
pop
dec
inc
xchg
jno
mov
sar
and
dec
xor
cld
subl
test
pushl
subl
dec
push
sub
xor
pop
add
in
mov
icebp
cmp
pop
adc
std
pop
xchg
hlt
jbe
pop
jmp
gs
lods
xor
into
jbe
xchg
sbb
fildll
cmpsl
test
enter
jecxz
sub
push
stos
je
int3
addr16
or
mov
leave
add
xchg
call
add
jo
cmp
iret
jmp
xchg
mov
sbb
pushf
mov
inc
jb
and
scas
xor
rep
sub
and
dec
or
adc
lods
aad
adcl
in
call
rcl
out
push
shll
inc
push
in
orl
movsl
cmp
cmp
mov
popa
test
mov
pop
jnp
stos
sbb
outsb
sub
shll
cmp
out
out
lret
mov
xchg
cmp
push
lcall
pop
js,pt
pop
mov
or
pop
or
sub
inc
fs
addr16
or
xchg
lret
fmul
pop
mov
inc
test
sbb
fcmovne
pop
inc
mov
lods
mov
jl
sbb
jmp
pusha
pushf
cmp
fsubr
pop
mov
out
nop
mov
push
ror
cltd
loopne
cmp
test
testl
loopne
and
negb
dec
into
or
xchg
mov
mov
cmp
aad
hlt
lahf
mov
das
sbb
push
sti
inc
sbb
or
and
js
pop
mov
and
xor
repnz
fwait
adc
push
ds
decl
imul
adc
lea
cltd
pop
add
mov
lcall
lcall
in
test
dec
sbb
push
aas
repz
jo
mov
pop
bswap
jge
movsb
fdivl
jb
sub
scas
push
sbb
mov
mov
mov
inc
ds
push
scas
out
mov
xlat
loopne
outsb
xor
mov
add
mov
lret
or
sbb
mov
add
or
lods
inc
sbb
adc
or
subl
hlt
add
adc
mov
and
lock
inc
mull
notl
aaa
pusha
or
addr16
nop
and
jle
dec
dec
nopl
lcall
mov
jae
or
out
jns
jbe
jae
mov
es
mov
roll
dec
dec
push
push
or
mov
mov
rcl
push
enter
into
sbb
jns
out
aas
int
push
in
es
adc
cld
rorl
mov
jb
repz
dec
add
in
jb
fcoml
adc
dec
cli
cmp
inc
stos
shrl
fisubrl
lcall
push
mov
inc
mov
add
ret
push
rcrb
loope
push
jno
in
cmp
mov
mov
addr16
dec
stos
mov
xor
shlb
adc
in
stos
leave
fdivl
fcoms
cmpsl
test
mov
ljmp
mov
out
loopne
bound
ret
fbld
push
mov
imull
mov
cmp
sti
inc
jle
adc
sarb
jns
dec
lods
add
enter
lcall
fwait
ss
inc
and
stc
sbb
subl
imul
rcrb
cmp
adc
and
sbb
dec
insb
stos
movsb
add
xchg
gs
cltd
adc
insb
lcall
and
xor
fldt
movsl
push
sbb
dec
repz
mov
or
scas
or
andl
out
push
push
pop
jl
pop
out
sub
or
add
in
aas
out
sahf
pop
js
adc
inc
scas
out
je
ret
repnz
loope
test
or
inc
mov
mov
fwait
or
mov
pop
sub
stc
cmp
xchg
sub
push
je
js
cwtl
add
scas
lods
xor
xchg
jge
xor
adc
lea
add
inc
and
jp
jne
cmp
mov
out
jo
test
stos
mov
dec
inc
in
jb
bound
xor
ret
ja
pop
xchg
pop
andb
aaa
mov
out
mull
adc
and
push
ret
ja
pop
xchg
pop
andb
aaa
mov
out
mull
adc
and
push
ret
ja
pop
xchg
push
andb
xor
inc
out
mull
adc
and
bnd
jo
lahf
jge
dec
enter
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
movsb
flds
leave
stc
fldl2t
cmpsl
and
in
shl
test
dec
insl
pop
jns
sbb
xchg
cmp
sub
fyl2xp1
leave
leave
stc
fldl2t
test
mov
jns
addr16
imul
cmp
sub
sarb
loope
icebp
mov
mov
adc
sbb
push
gs
dec
push
test
fnstcw
and
dec
lea
inc
pop
cmpl
jge
push
loope
orb
in
scas
inc
icebp
lock
mov
mov
cmpsb
test
lods
jns
push
mov
xchg
sarl
lret
and
enter
mov
dec
mov
cmpsl
xchg
mov
inc
insb
lods
xchg
mov
mov
fwait
sub
mov
cmpsb
in
and
out
insb
pop
add
ss
sbb
int
rol
test
sbbl
pop
push
lods
insb
es
mov
and
inc
sub
mov
andl
lods
xor
jmp
fcmove
stc
fxch
loopne
jmp
mov
jmp
xchg
pusha
inc
jo
add
adc
and
mov
fwait
int3
call
or
cmp
jge
or
jl
or
pop
inc
jmp
mov
xchg
cltd
fadd
in
ljmp
sbb
imul
or
pop
fxch
leave
mov
stos
mov
test
dec
jns
imul
cmp
sub
fyl2xp1
leave
leave
stc
fldl2t
test
mov
jns
dec
jns
imul
cmp
sub
fnstcw
jmp
adc
or
jp
jle
jne
dec
in
idivl
cld
inc
xchg
mov
jbe
cmc
ljmp
sbb
aas
and
rol
adc
push
std
in
daa
fistpll
fldenv
mov
lods
out
scas
scas
pusha
daa
scas
mov
jle
push
and
push
dec
mov
iret
push
stc
jp
ds
sub
xorl
pop
cmp
stc
mov
xor
addb
xorl
push
mov
sbb
mov
pop
ret
add
push
mov
cwtl
sub
fistpll
inc
mov
aad
aaa
cmp
or
adc
addr16
cmc
jle
xchg
xor
jp
adc
outsl
pushl
repz
pusha
mov
inc
mov
xchg
roll
pusha
dec
pop
sbb
inc
push
rclb
cmp
jg
mov
mov
movsb
and
sahf
or
nop
and
sbb
and
jg
inc
lahf
bound
js
add
imul
xchg
sbb
addr16
or
sbb
es
xchg
lds
adc
scas
mov
push
inc
mov
leave
push
ret
movsl
mov
cwtl
fisttpll
mov
sub
cmp
ret
pop
pop
in
int
dec
push
cmpsb
xchg
push
adc
andb
rorl
push
ja
pop
das
xor
stos
rclb
add
fwait
pop
daa
es
sbb
jne
lds
std
xlat
fyl2xp1
push
dec
outsb
xorb
mov
and
cmpsb
mov
add
pop
inc
cmp
push
hlt
arpl
repz
pop
dec
adcl
cmpsl
mov
add
fisttpl
ficomps
add
mov
out
pushf
imul
int
cmp
aam
xchg
mov
aaa
stc
adc
lods
lods
data16
pop
mov
adc
icebp
sbb
ret
push
add
xchg
xor
movsl
lcall
aad
lods
xchg
pop
cmp
repz
out
mov
push
bswap
mov
sti
adc
cmp
test
jle
insb
test
xor
jb
enter
in
jnp
fisubs
mov
lods
aaa
repz
sub
sbb
in
adc
lds
je
jo
rorb
and
xchg
pop
xchg
mov
and
or
add
stos
jmp
dec
add
cmp
cli
pop
loope
xlat
sub
push
jbe
scas
or
loop
mov
out
ja
fildl
push
push
xchg
lcall
icebp
rcll
pop
sbb
cmpsl
jbe
sbb
sub
int3
lea
sbb
fsub
aas
popl
sbb
xor
pop
jp
jbe
adc
pop
mov
testl
mov
pusha
inc
cmpsl
push
pusha
jae
or
xchg
cld
add
sub
mov
insl
in
adc
shrb
movsl
adc
addb
or
adc
jbe
mov
dec
mov
loopne
movl
clts
xchg
imul
pop
or
pop
movsl
bound
xor
mov
rcrl
loopne
jp
mov
cmp
jb
xlat
sahf
sbb
add
pop
inc
les
shrb
add
xor
add
sti
ret
cmc
xchg
pop
push
pop
enter
int3
scas
xor
lock
mov
lret
in
out
sbb
push
int
xchg
and
mov
int3
or
xchg
mov
push
xor
and
adc
cmpsl
and
pop
fldenv
dec
push
loopne
push
outsl
inc
xor
cmpl
pop
sbb
adc
xchg
jmp
sbb
gs
lds
mov
std
jns
data16
mov
nop
cmc
pop
popa
xor
cltd
fucomi
imulb
rdtsc
cwtl
and
andl
xchg
movsl
mov
imul
fldcw
mov
jecxz
shll
mov
leave
xor
outsl
inc
push
stos
aam
repnz
clc
in
cld
push
cmp
data16
ljmp
jp
pop
pop
xchg
mull
insl
jns
cmp
push
rcr
daa
and
push
test
pop
dec
aas
lret
fnsave
push
gs
movsb
repz
ss
movsl
push
mov
mov
xor
lret
in
popa
and
mov
movsb
add
xchg
movsb
rep
add
mov
cli
push
xlat
cwtl
or
inc
and
aas
into
sbb
push
nop
xchg
stos
test
mov
xchg
sub
mov
hlt
js
adc
lahf
push
subb
pop
sub
xchg
mov
push
sub
cmp
or
pop
xchg
in
imul
lcall
subb
add
mull
jo
mov
rcpps
lcall
mov
dec
data16
into
dec
or
inc
negb
insb
in
mov
rolb
mov
sti
adc
push
push
xchg
sub
sti
sti
je
sub
xchg
push
sarl
inc
jns
pop
dec
xlat
and
or
roll
or
cld
mov
mov
push
mov
pop
out
jae
dec
arpl
clc
sbb
aam
xchg
jmp
jo
std
popa
inc
out
insb
fstp
repz
arpl
enter
and
add
fisubrs
cmp
mov
idivl
cmp
or
cmc
fsubp
aas
dec
and
add
negb
pop
mov
lret
sub
xor
or
aas
and
in
lcall
hlt
xor
dec
out
dec
jecxz
mov
jno
test
mov
lahf
bound
jmp
notb
rorl
or
cmp
mov
mov
mov
xor
in
jl
adcb
scas
popf
cmpsl
push
fidivrl
mov
cmc
fsubrs
xor
xchg
js
test
cmp
push
cld
cmp
scas
jle
fs
arpl
enter
push
iret
push
aad
out
repz
test
inc
leave
je
ficompl
mov
scas
icebp
mov
add
data16
movsl
pop
push
mov
cmp
mov
xor
sahf
sbb
jno
fsubs
fwait
loope
and
les
mov
or
jg
adcl
cwtl
inc
dec
pcmpgtw
inc
fnstsw
movsb
xor
and
adc
sbb
fisttpl
mov
test
xorb
ds
push
mov
mov
or
inc
mov
in
add
dec
shlb
sub
movsb
or
test
test
loopne
sbb
sbb
sub
jle
les
mov
lahf
in
or
ja
paddsb
xor
outsb
sbbl
repnz
sub
dec
dec
inc
xchg
jmp
pop
xchg
xchg
jmp
mov
pop
out
jnp
fdivrl
lods
mov
mov
push
addb
idivl
addb
in
jmp
js
in
in
and
or
imul
inc
pop
cwtl
cmp
rcr
sub
inc
imul
fnsave
mov
fs
mov
dec
mov
pop
xchg
mov
pop
xor
clc
loope
jecxz
cmp
bound
xchg
mulb
cs
lea
arpl
push
cwtl
jo
sbbb
lahf
xchg
adc
in
test
lds
lock
rol
mov
dec
into
mov
push
leave
jmp
sbb
xchg
add
push
push
lret
jnp
inc
sbb
call
and
or
dec
sti
xlat
jo
xor
div
pop
loope
mov
jle
gs
push
xor
xchg
insb
add
test
add
in
das
into
aam
lock
movsb
mov
lahf
jp
aas
xor
cs
insl
in
clc
jae
cmp
enter
cmp
int
mov
cmp
fsubl
mov
ret
test
pop
inc
cmp
aad
add
mov
in
movsl
fisttpll
mov
push
loopne
stos
cmpsl
test
or
jmp
xor
jle
mov
lret
xchg
mov
dec
jne
fisttpll
sbb
clc
inc
cli
rcl
cmc
test
out
mov
jns
xor
loop
mov
outsl
and
rolb
cmc
out
push
fidivrl
push
pop
mov
jg
cmpsl
cmovbe
pop
loopne
mov
sbb
mov
ret
xchg
mov
loope
aam
shlb
mov
sbb
int3
data16
js
in
mov
fcomps
ret
je
hlt
cmpsb
lret
mov
and
pushf
sbb
dec
fiadds
push
sbb
repnz
push
xchg
mov
jge
mov
test
mov
push
cld
lods
scas
ret
xchg
fwait
ljmp
test
adc
lret
mov
jle
call
les
mov
dec
mov
test
pop
jecxz
popl
xor
fwait
lcall
loope
lock
cmp
sbb
ljmp
sbb
pop
dec
std
aaa
test
adc
sub
and
cld
cmp
sbb
or
js
in
mov
pop
ret
sub
cmp
add
outsb
inc
int3
mov
lds
jmp
lods
lods
imul
jl
popf
movsb
cld
and
mov
xor
es
pop
lods
js
mov
pop
les
lds
dec
mov
repnz
testb
fadds
movb
mov
es
in
inc
mov
mov
jge
movsl
stos
xchg
jle
mov
or
mov
into
js
mov
pop
mov
fucomip
xchg
pushf
lods
pop
jb
dec
jns
test
sti
mov
shrl
loop
shl
xor
cmpl
dec
xchg
maskmovq
imull
jmp
fidivrs
add
arpl
ret
xchg
flds
pop
cmpsb
insb
sbb
lahf
insb
push
out
xor
dec
daa
or
lcall
shrb
sub
sti
cs
fwait
into
jge
fmull
xor
xchg
add
jl
cld
push
mov
imul
and
shl
dec
mov
ljmp
jb
or
pop
lcall
xchg
adc
mov
imul
in
push
sbb
pushf
mov
dec
jo
or
popa
cmp
int3
mov
iret
mov
sub
orb
inc
daa
outsb
xchg
test
sahf
sub
mov
movsb
aas
cmc
jbe
popa
stos
adc
lea
xor
jg
jbe
xor
jne
out
lods
pop
out
data16
pop
mov
adc
call
scas
jnp
mov
adc
jne
pop
sbb
dec
aas
arpl
push
adcb
stos
test
shl
lods
pop
inc
xor
stc
cmpsb
js
inc
sub
ret
mov
push
push
or
xchg
in
loope
cwtl
xchg
cld
mov
out
je
push
add
xchg
pop
out
adc
push
fmuls
insb
sbb
aad
and
repnz
jae
repz
jno
xlat
test
or
push
fadd
aaa
sub
lods
dec
rcll
cmc
xor
push
popa
pop
lods
add
xlat
iret
jmp
mov
xchg
add
shll
mov
xchg
cld
nop
outsl
sbb
stos
sbb
adc
les
jbe
dec
out
fimuls
gs
pop
rolb
jecxz
popa
dec
subb
add
inc
movsb
sbb
sbb
iret
cltd
movl
sahf
or
cmp
testb
inc
inc
push
rcll
xchg
repz
xor
sub
clc
cmp
mov
shr
cli
scas
je
xor
jge
fwait
sub
add
cmc
out
fdivrp
fstps
add
movb
arpl
int3
cs
pop
pop
dec
stos
insl
in
lea
dec
in
xchg
inc
push
push
xchg
sbb
add
aaa
lret
das
ja
fnclex
push
out
xor
mov
fsub
dec
or
adc
sahf
add
sub
sub
clc
popa
adc
outsb
xchg
fdivr
in
pop
negl
or
mov
aas
fs
std
in
cmp
mov
dec
dec
dec
jp
pop
fadds
aad
imul
add
inc
insb
or
outsl
lods
ret
mov
add
call
sbb
xor
mov
adc
popa
test
outsl
and
adc
add
imulb
and
push
outsl
mov
sub
mov
mov
mov
repz
ja
test
loope
mov
xor
dec
in
xchg
das
enter
insb
and
js
inc
cli
push
cli
lahf
mov
cmp
stos
les
shlb
sarb
xlat
push
xor
outsb
cld
ljmp
scas
xchg
pop
andb
jo,pn
cmp
in
stos
mov
dec
test
mov
test
mov
xor
pop
shrb
incb
in
aad
mov
cmp
movsb
fs
sbb
mov
push
lock
mov
stc
adcb
fsubrs
push
lock
inc
mov
enter
sub
jns
ds
movsb
xchg
sti
ret
mov
fdivl
dec
xor
inc
push
nop
push
or
es
fwait
and
scas
movl
aam
inc
mov
int
clc
stc
mov
adc
ja
pop
dec
outsb
mov
test
test
mov
inc
pop
mov
xorl
std
push
sbb
mov
gs
lcall
inc
mov
xchg
cmp
adc
inc
jge
hlt
sbb
and
shlb
out
mov
pop
jl
mov
jecxz
xchg
cltd
cmp
jns
xchg
push
and
pop
pop
pushf
jmp
sbb
pop
inc
fiadds
jbe
pop
loop
dec
adc
jne
jno
and
in
jnp
xorl
jbe
jp
adc
push
nop
push
mov
mov
aam
mov
push
lret
imul
outsb
es
pop
out
fldenv
pop
mov
mov
aam
sub
enter
nop
pushf
popa
in
loope
jae
in
mov
dec
xchg
mov
loope
cmp
test
movsb
or
mov
imulb
jbe
or
mov
push
pop
pop
lods
ret
and
xchg
cmp
scas
rcr
xchg
pushl
shl
das
lock
mov
out
cmp
aas
jl
pop
shlb
shrl
adc
add
pop
int
dec
cmp
ds
mov
mov
rcrb
lret
adcb
ret
mov
sbb
ljmp
mov
push
inc
and
scas
nop
shll
cmp
push
mov
or
arpl
sub
cltd
adc
mov
inc
rep
jmp
or
push
cli
jne
es
into
lretw
cmp
mov
jl
sahf
cld
mov
ljmp
in
push
or
sbb
jl
mov
mov
xlat
mov
sub
ds
mov
and
mov
adc
call
xor
push
scas
jl
pop
gs
fs
lock
in
adc
outsl
or
test
andl
jp
popa
sub
fldt
andl
movsb
jno
aad
inc
iret
pop
sub
push
repnz
lahf
mov
cmp
sbb
fimull
xchg
lock
imul
pushf
test
lock
lods
incb
add
jne
lds
or
jmp
lea
xlat
pop
xor
cmpsb
push
loop
outsb
iret
sbb
xlat
insb
stos
adc
xchg
xchg
sti
insb
ret
cld
shl
dec
arpl
test
popa
push
push
xor
arpl
hlt
cwtl
add
in
add
or
fdivr
push
ret
inc
dec
jp
fsubs
fwait
sbbb
std
pop
lret
push
fsubrs
xor
sub
js
mov
xchg
and
pop
add
mov
mov
jbe
aad
and
adc
cmp
out
mov
dec
sti
xchg
sahf
sub
mov
or
xor
testl
scas
push
cmp
dec
mov
mov
shlb
xor
jp
aaa
fxtract
lcall
fadds
cld
mov
outsl
mov
imul
imul
lods
pop
or
cltd
orl
sti
pop
add
sti
dec
push
shl
push
icebp
xchg
inc
incl
daa
push
int3
loop
mov
or
mov
jnp
inc
mov
pop
dec
push
mov
stos
push
into
mov
sbb
pop
push
mov
dec
jnp
sub
fs
mov
frstor
lds
pushf
dec
mov
test
xchg
mov
in
mul
test
pop
icebp
cwtl
mov
mov
xchg
stc
lods
ja
push
mov
test
out
mov
mov
mov
sub
xchg
and
jno
xchg
jne
aas
mov
insl
jne
ljmp
in
dec
sahf
and
xchg
xchg
ficoms
cld
rorb
cmc
cmpb
aad
and
bound
test
mov
push
mov
or
out
cmp
scas
lahf
cmpsb
icebp
push
cmp
inc
pop
or
hlt
in
mov
push
xchg
orl
fistps
loopne
and
add
mov
loop
mov
and
fisubrl
ja
es
mov
push
fsubp
mov
pushf
and
mov
outsl
int3
dec
cmp
mov
inc
mov
movsb
push
stos
xchg
sarb
dec
xchg
fstpt
movsb
int
outsl
add
fldcw
xorl
adc
sbb
pop
aad
and
bound
pop
xor
xchg
jns
add
and
pop
pop
push
scas
add
xor
inc
jmp
dec
shlb
iret
call
sbb
cltd
mov
fbstp
dec
out
fisttpl
push
cmpb
cmc
ja
xchg
repz
sub
xchg
popa
je
push
dec
xchg
lret
fstps
cmc
in
xor
fs
xlat
sahf
fidivrs
cmp
mov
xchg
dec
movsb
inc
rol
mul
cmp
cwtl
fs
pop
sbb
pushf
aam
data16
mov
gs
clc
andl
imul
cmp
xchg
mull
dec
lods
xorb
ror
mov
mov
sbb
inc
xor
sbb
lea
clc
sahf
lret
inc
int
mov
pop
rcrl
repnz
mov
pop
repz
leave
cmpsl
testb
sbb
adc
adc
imul
test
pop
add
mov
shl
aam
pop
xchg
inc
enter
add
sbb
out
sub
in
and
sub
icebp
push
add
xchg
jb
jp
out
cs
add
sbb
sbb
mov
pop
lods
test
or
sub
imull
mov
push
aam
sbb
xor
popa
movsb
ficomps
adc
iret
jg
jae
movsl
leave
cmc
push
mov
lea
lock
ret
sbb
hlt
test
fbstp
sbb
mov
movl
ljmp
sbb
daa
mov
mov
stc
push
lods
cmovge
jl
xlat
lcall
mov
mov
dec
lret
inc
pushf
mov
dec
sahf
ss
cmpsl
pop
pop
repz
jge
adc
jns
or
clc
lods
arpl
leave
mov
fisubrl
push
cmpl
jecxz
aas
mull
notl
pop
test
mov
inc
mov
ret
sbb
repz
outsb
dec
pop
dec
test
pop
clc
or
sub
enter
or
seto
je
mov
aaa
cmp
sbb
adc
mov
lret
jne
sub
dec
mov
jg
loope
adc
mov
and
sub
lcall
decb
mov
or
je
xor
out
mov
push
pop
xor
cli
clc
xor
inc
push
fs
lods
mov
jmp
and
cmpb
call
sub
testl
int3
ret
mov
xchg
fld
stos
or
loop
jmp
pop
pushf
cmp
cmp
sbb
sbb
xchg
and
xor
lcall
sti
je
rorl
popf
jg
mov
fisubs
xchg
inc
stos
cltd
daa
sub
mov
sub
push
cmp
pop
push
xchg
sub
inc
mov
mov
jne
push
or
out
push
test
divl
lret
or
nop
jp
sahf
outsl
inc
xor
ret
sahf
outsl
mov
test
popw
lahf
data16
test
and
repnz
dec
stc
cltd
mov
test
dec
jns
imul
cmp
sub
fyl2xp1
leave
leave
stc
fldl2t
test
mov
jns
dec
jns
imul
cmp
sub
fsqrt
leave
fyl2xp1
fldl2t
test
mov
test
inc
jns
insl
sub
and
or
fst
int
std
icebp
jmp
mov
xchg
jecxz
pop
push
pop
xchg
mov
testb
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
