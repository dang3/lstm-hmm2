rorl
sub
call
rorb
and
movb
rorl
or
push
add
xchg
mov
add
rorl
rorl
sub
xor
rorb
roll
xor
rorl
rorl
xor
mov
rorb
rorl
mov
sub
push
roll
mov
add
add
add
rorb
movb
xchg
mov
add
push
call
push
popl
add
popl
push
xchg
mov
add
sub
mov
and
add
jmp
arpl
fidivrs
js
mov
pushfw
push
or
movl
movb
sub
xor
rorl
xor
movb
xor
mov
call
je
cmp
mov
push
sub
addr16
out
ret
add
pop
mov
add
subb
mov
push
std
jle
adc
add
add
test
inc
dec
and
repnz
sub
xor
rorb
movb
rorl
xor
rorb
roll
roll
xor
mov
add
add
addb
inc
dec
jne
sub
push
mov
add
add
xorb
inc
dec
jne
sub
rorl
dec
mov
mov
add
add
add
xorb
inc
dec
jne
sub
push
rorb
xor
roll
movl
mov
xor
movb
xor
mov
add
xorb
inc
dec
jne
sub
movb
movl
roll
rorl
roll
and
roll
or
movb
rolb
add
mov
movl
rorb
xor
mov
xor
rorb
xor
mov
add
popfw
jmp
ss
pushf
mov
sub
call
mov
and
roll
rorb
or
call
pop
std
lahf
fcoms
xchg
push
inc
and
xchg
pusha
push
outsb
add
xchg
mov
notl
lock
and
xor
cmpb
add
push
das
mov
add
add
dec
test
dec
pop
add
add
add
mov
xorb
inc
dec
jne
sub
push
rorb
mov
roll
xor
movb
movl
movl
xor
rorb
xor
mov
add
incb
inc
dec
jne
sub
xchg
xorb
lret
fisubl
movb
mov
mov
sub
xor
rorb
xor
rorl
xor
and
movl
or
rolb
add
sub
sub
mov
call
and
rorb
xchg
mov
sub
xorb
mov
outsl
orl
aaa
add
add
add
add
add
pop
bound
add
add
mov
cmpb
jne
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
jmp
push
clc
shll
aaa
movsb
or
push
das
cmp
xchg
rorl
add
add
dec
shlb
sub
inc
jmp
add
sub
xchg
dec
mov
add
incb
inc
dec
jne
sub
mov
jmp
mov
lcall
jmp
movsl
in
lock
call
jmp
outsb
adc
lock
gs
xchg
push
sbb
mov
mov
mov
mov
mov
mov
pop
gs
ljmp
xchg
xchg
lea
rorl
aad
push
mov
mov
decl
incl
add
inc
dec
jne
cmpsb
leave
pop
daa
daa
daa
out
jge
daa
daa
popa
pop
out
mov
daa
daa
adc
sub
daa
xchg
push
pop
notb
inc
dec
jne
jle
test
lcall
ljmp
je
pop
jl
sti
add
mov
add
add
loop
jp
incl
add
sub
cwtl
cwtl
add
add
fdivrl
jae
pop
add
add
pop
hlt
repz
inc
inc
and
mov
or
add
subb
inc
dec
jne
sarl
mov
cli
dec
dec
dec
cmp
sti
dec
dec
dec
adc
push
push
rcll
fildl
dec
dec
dec
dec
fldlg2
je
dec
dec
dec
pop
aam
xor
dec
dec
test
pushf
je
sarl
sbb
dec
adc
je
dec
dec
dec
outsb
push
xchg
je
dec
sbb
dec
dec
dec
dec
adc
je
adc
je
dec
dec
dec
gs
decl
jmp
rolw
and
sbb
mov
push
and
roll
roll
or
rorb
add
negb
inc
dec
jne
sub
movb
movl
push
push
sub
mov
and
add
add
add
xchg
mov
add
popfw
jmp
leave
jo
push
push
jle,pn
add
xchg
mov
sub
call
rorl
roll
mov
call
mov
ljmp
notb
stc
jo
or
adc
or
rolb
movb
rorl
sub
xor
rorl
rorl
xor
rorb
roll
movb
xor
mov
roll
iret
sub
nop
add
add
adc
jmp
add
add
incb
inc
dec
jne
sub
push
movl
xor
rorb
rorb
xor
movb
roll
xor
mov
add
xorb
inc
dec
jne
sub
push
and
movb
rolb
roll
or
rorl
add
addb
inc
dec
jne
sub
movb
movl
pop
roll
rorb
rorl
mov
add
popfw
jmp
outsl
daa
xchg
add
lea
lea
nop
lea
ret
sub
sub
push
jmp
aad
fstpt
mov
and
pop
pusha
lea
call
pushfw
call
push
popl
xor
call
push
popl
xor
call
mov
mov
rcl
pop
rorw
push
or
add
add
add
shll
pushl
add
rorb
xor
rorb
rorb
roll
xor
mov
add
addb
inc
dec
jne
sub
rorl
lods
rcrl
push
xchg
mov
sub
notb
inc
dec
jne
sub
rorb
push
or
incl
and
inc
mov
inc
mov
xor
roll
roll
xor
mov
addb
inc
dec
jne
sub
xorb
mov
add
add
in
mov
add
das
ss
lea
in
cld
decl
decl
xchg
and
add
jns,pt
add
add
mov
add
add
push
mov
fwait
jmp
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
jmp
icebp
push
inc
jmp
sub
scas
dec
fsub
jmp
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
subw
mov
add
add
incl
add
inc
dec
jne
sub
rorl
subb
add
iret
cmc
enter
ret
mov
add
popf
movsl
std
decl
inc
dec
push
test
incb
add
add
sahf
dec
fcoms
das
in
sub
push
in
addr16
push
mov
mov
mov
pop
mov
testl
add
sub
add
dec
sub
rolb
lcall
add
add
xorb
inc
dec
jne
je
mov
arpl
lret
test
cmc
cmc
into
cmpsl
je
icebp
cmc
cmc
cmc
jle
push
or
or
xor
cmc
mov
cli
jo
or
or
dec
nop
cmc
cmc
cmc
pop
enter
or
fildl
cmc
repz
cmc
cmc
cmc
jns
gs
out
imul
ret
add
sbb
pushl
jmp
cmp
jmp
add
xor
lock
test
xchg
xchg
lahf
decl
dec
in
cmpsl
and
das
ret
inc
push
and
mov
decl
movsl
and
ds
and
xchg
movsl
incb
mov
cld
inc
test
call
mov
xor
mov
xor
add
popfw
pushfw
push
and
push
or
call
cmp
rorl
or
rorb
add
xchg
rorb
rorw
dec
sub
mov
add
add
cwtl
dec
add
add
jne
jge
cmp
pop
cmp
push
add
add
cld
fdivrl
jl
inc
add
add
cmc
cld
fdivrl
je
cmp
cmp
add
add
cmp
add
add
add
add
jne
pop
add
add
lcall
aas
jl
sbb
add
fcomip
cld
fdivl
fdivrl
add
add
fcompl
cmp
add
add
xor
dec
add
addb
inc
dec
jne
sub
rorl
sbb
add
xchg
or
add
and
decl
decl
add
add
subb
inc
dec
jne
sub
movb
movl
mov
add
mov
or
add
popfw
jmp
push
jae
jmp
sti
add
add
sub
sub
sub
mov
xchg
mov
sub
rorb
call
push
popl
add
mov
cmp
neg
mov
sub
jo
lea
xchg
mov
mov
dec
cld
rorb
mov
rolb
xor
mov
xor
roll
roll
xor
mov
add
mov
add
mov
push
or
push
xor
verw
xor
xor
verw
dec
cld
rcl
xor
arpl
xor
arpl
cmovs
std
cld
rorl
movb
rorl
add
mov
mov
sub
xor
rolb
rorb
roll
xor
roll
movl
rorl
xor
mov
popl
movl
roll
mov
mov
movl
mov
rorl
push
or
mov
add
xchg
mov
add
sub
add
roll
rorl
sub
xchg
rorl
rorl
push
pop
add
add
sub
call
roll
movl
movb
mov
popl
push
mov
or
add
sub
movb
roll
and
rorb
or
roll
rorl
add
bndldx
add
pushfw
sub
xchg
mov
add
sub
rorb
sub
xor
movb
movl
xor
rorb
xor
add
mov
sub
call
loop
inc
inc
mov
cs
and
stc
mull
and
mov
and
add
rolb
sbb
sub
add
sbb
add
add
add
add
xchg
mov
addb
inc
dec
jne
sub
notw
xchg
in
push
and
mov
movl
or
rolb
mov
add
add
add
xorb
inc
dec
jne
sub
xorb
cltd
stos
mov
dec
adc
or
add
notb
inc
dec
jne
sub
movb
movl
mov
add
add
pop
popfw
jmp
xor
int3
dec
cmp
dec
jmp
inc
push
nop
mov
lret
test
cmpsw
push
xchg
xor
pushfw
sub
xchg
push
xchg
mov
add
and
add
sub
call
rorl
mov
call
outsl
outsl
fwait
lds
add
push
cmp
in
incl
decl
push
xchg
sub
add
xchg
icebp
inc
incl
add
add
add
rorb
inc
dec
jne
sub
push
push
roll
rorl
xor
rorb
rorb
xor
roll
xor
mov
add
or
add
subb
inc
dec
jne
sub
push
sub
mov
decb
inc
dec
jne
sub
xorl
lock
and
fwait
add
xchg
inc
inc
fiadds
add
test
notl
cltd
arpl
inc
and
xor
dec
and
rorl
sub
xor
rorb
xor
mov
rorl
xor
movl
mov
xchg
mov
add
sub
push
xor
call
xor
jo
push
sahf
jmp
mov
sub
inc
test
stc
cs
mov
xor
rorb
movl
movb
xor
rorl
xor
mov
add
and
add
push
xchg
mov
add
addb
inc
dec
jne
insl
sbb
in
in
push
jecxz
js
in
in
test
jle
in
in
in
test
jbe
in
in
in
xchg
imul
mov
in
in
xchg
xchg
in
in
in
and
outsb
mov
add
adc
mov
decb
inc
dec
jne
sub
add
add
xchg
xlat
add
add
mov
add
add
popa
mov
js
xlat
adc
dec
dec
jo
push
in
cmp
imul
jmp
jbe
jl
repnz
pop
inc
cs
mov
scas
push
fucom
mov
inc
je
aad
adc
loopne
pop
aas
or
push
clc
shll
aaa
addb
ret
cmp
add
or
add
add
add
add
notb
inc
dec
jne
jl
stos
xchg
scas
sub
fistpl
add
jl
add
arpl
add
add
sub
add
aas
mov
jae
dec
add
add
arpl
add
add
sub
fisttpl
add
add
arpl
add
add
jbe
pop
add
add
or
mov
add
add
sub
in
ja
pop
add
add
jge
add
xor
add
mov
add
add
add
andb
andb
add
pop
mov
add
lcall
add
addb
enter
add
or
xchg
push
add
add
add
add
incl
add
dec
jne
sub
push
rorl
rorb
roll
mov
xor
add
xorb
inc
dec
jne
sub
movb
movl
movb
add
xchg
mov
push
xchg
mov
add
or
add
popfw
jmp
lret
jmp
dec
sub
daa
aam
jb
mov
jmp
pop
insb
xor
sub
sub
cli
xchg
mov
sub
push
cmovp
jno
mov
mov
verw
dec
not
rol
cmp
sbb
mov
mov
inc
cmovge
shr
dec
ror
test
xor
shr
xchg
cld
rorb
rorb
rorl
roll
movb
xor
rorb
roll
rorl
xor
movb
xor
mov
add
push
add
xchg
mov
or
add
ret
bndldx
call
push
popl
and
mov
sub
roll
movl
movl
movb
rorl
sub
xor
roll
mov
mov
xor
rorb
rorl
rolb
xor
mov
rorb
movb
movb
call
push
popl
and
push
pop
add
xchg
mov
add
sub
xchg
mov
push
pop
sub
and
movl
rorl
or
rorb
add
call
roll
mov
mov
add
mov
add
add
nop
add
mov
call
roll
mov
and
movl
movl
movb
or
jmp
test
push
pop
mov
xor
mov
inc
shl
jmp
dec
test
mov
neg
not
verw
neg
cmc
cmc
mov
cmovo
lea
arpl
push
pop
not
arpl
cld
add
mov
mov
add
nop
mov
sub
push
sub
mov
sub
xchg
mov
add
push
push
rorl
xchg
mov
add
add
and
rorl
rorl
or
roll
rolb
rorb
add
push
jmp
cmpsb
nop
rolb
rolb
rolb
mov
sub
mov
add
and
rorl
rorb
movl
or
movb
roll
add
sub
push
bndldx
nop
push
mov
mov
mov
mov
mov
mov
mov
pop
nopl
push
mov
mov
mov
mov
mov
pop
add
add
lea
jmp
hlt
sbb
fidivrs
js
mov
push
or
push
and
sub
xchg
mov
popl
mov
test
movzbl
lea
cmp
ja
jns
cmp
rcl
dec
mov
cmp
inc
test
movswl
verw
arpl
mov
cmc
xchg
lea
arpl
cmp
cld
add
mov
mov
add
mov
push
jmp
nop
mov
lret
test
data16
cmpsl
push
std
repnz
sar
add
dec
jmp
mov
test
xor
imul
add
pop
xchg
push
jmp
and
fstps
jmp
add
sub
xor
sub
sub
xchg
lea
push
jmp
add
es
adc
mov
cmpb
jne
jnp
icebp
push
inc
sub
mov
mov
mov
mov
mov
mov
pop
mov
pushfw
sub
xchg
roll
sub
xor
rorl
mov
rorl
xor
roll
rolb
roll
xor
mov
sub
rolb
rolb
sub
xor
mov
movl
rorb
xor
mov
rolb
rorb
xor
and
roll
or
movb
add
sub
call
hlt
lea
mov
inc
scas
lret
xor
inc
and
mov
and
add
roll
mov
mov
xor
add
rorb
inc
dec
jne
sub
push
mov
movb
sub
xor
roll
rorb
xor
rorl
movb
xor
mov
addb
inc
dec
jne
sub
push
rorl
push
roll
sub
xor
rorb
movl
rorl
xor
rorb
rorl
mov
xor
mov
and
add
addb
inc
dec
jne
sub
push
mov
add
add
rolb
inc
dec
jne
sub
movb
movl
mov
xor
mov
xor
rolb
movb
roll
xor
mov
add
and
movl
mov
rorb
or
rorl
rorb
add
popfw
jmp
adc
add
add
or
call
mov
roll
mov
call
or
es
es
mov
mov
mov
add
pushfw
call
movl
rorl
movl
mov
rorb
movl
sub
xor
roll
xor
rorl
rorl
rorb
xor
mov
and
add
sub
call
into
enter
lods
mov
add
subw
outsb
push
add
xchg
mov
xorb
inc
dec
jne
cltd
repnz
sbb
repz
test
add
repz
sub
lret
inc
push
cltd
icebp
or
ret
xchg
push
jmp
fs
xchg
ror
into
out
cld
jmp
test
or
add
or
jle
sub
mov
sbb
pop
nopl
push
movb
mov
roll
sub
xor
movl
roll
roll
xor
rolb
movl
xor
mov
decb
inc
dec
jne
test
clc
xchg
add
add
cmpb
add
shlb
add
push
imul
add
and
subl
add
inc
dec
adc
sub
movb
movl
rorl
sub
xor
rolb
rorb
xor
decb
xor
decb
pop
gs
notb
xchg
icebp
jbe
and
inc
mov
cmp
inc
inc
and
jmp
mov
call
inc
and
xchg
mov
sub
and
add
subb
inc
dec
jne
sub
rorb
push
push
rorl
pop
or
add
xorb
inc
dec
jne
sub
notl
xchg
icebp
jbe
and
mov
mov
add
add
subb
inc
dec
jne
sub
notl
xchg
icebp
je
movsb
add
add
add
rolb
inc
dec
jne
sub
movb
movl
pop
mov
xor
add
popfw
jmp
test
fsubr
fidivrl
mov
js
rorb
add
add
push
popl
or
push
cmp
clc
cld
push
add
mov
or
add
pop
imul
add
add
nopl
xchg
bndldx
xchg
push
jmp
cmpsl
push
std
repnz
sar
lahf
jmp
in
jmp
mov
mov
test
xor
imul
stos
or
push
jmp
and
fstps
fwait
cmp
pop
nop
add
sub
add
dec
add
add
lea
push
jmp
addr16
mov
cmpb
jnp
nop
nopl
add
sub
sub
sub
push
mov
mov
mov
pop
sub
sub
jmp
loopne
pop
aas
or
push
mov
mov
mov
pop
xor
lea
push
mov
mov
mov
mov
mov
mov
mov
pop
shr
sub
bndldx
sub
add
lea
sub
sub
aam
push
jmp
pop
insb
xor
xchg
pop
jmp
add
or
jmp
jp
mov
jmp
inc
pop
xor
shlb
push
dec
adc
div
fs
xchg
pop
add
dec
push
mov
pop
nop
nop
lea
push
mov
mov
mov
mov
mov
pop
add
dec
lea
xchg
xchg
jmp
les
cs
pop
cmp
or
push
hlt
sbb
pop
sub
xchg
xchg
nopl
imul
nopl
movb
movl
rorl
call
rorb
rorl
and
rorl
mov
roll
or
mov
add
push
and
rolb
rorl
mov
or
rorl
movb
add
and
add
mov
mov
sub
xor
rorb
mov
xor
roll
xor
mov
mov
sub
mov
or
add
jmp
push
std
repnz
sar
lahf
in
aaa
xchg
nopl
xchg
lea
nopl
lea
shl
pushfw
sub
mov
push
and
call
or
dec
out
cmpsl
push
pop
ror
push
lods
jb
cwtl
loop
jecxz
mov
fnstenv
adc
roll
rorb
mov
xor
mov
xor
mov
add
addl
enter
add
add
jge
add
add
and
xchg
adc
xor
add
xorb
inc
dec
jne
sub
notl
xchg
in
jle
cld
decl
incb
inc
dec
jne
sub
rolb
notw
aas
jge
add
add
and
mov
les
add
notb
inc
dec
jne
sub
rorw
dec
test
or
mov
add
rolb
inc
dec
jne
sub
push
mov
add
incb
inc
dec
jne
sub
movb
movl
rorb
mov
rorl
xchg
mov
sub
rorl
movb
rorl
sub
xor
rorb
mov
rorl
xor
rorl
xor
mov
popfw
jmp
test
lods
ds
imul
lock
jmp
sub
mov
pop
lods
jne
jnp
jmp
icebp
push
inc
sub
scas
dec
jmp
fsub
mov
inc
je
adc
add
loopne
pop
push
mov
mov
mov
mov
mov
pop
add
push
add
call
push
popl
add
bsr
jmp
arpl
lea
arpl
arpl
verw
neg
inc
verw
dec
inc
cld
rorl
xchg
mov
sub
rorl
mov
rorl
xchg
mov
sub
daa
call
roll
rorl
and
rorl
rorl
rorb
or
call
push
popl
or
push
pop
repz
rcr
push
pop
not
xor
inc
push
pop
rcl
jno
lea
js
dec
neg
verw
btr
arpl
cmp
dec
cld
pop
xchg
mov
add
push
rorl
movb
nop
mov
rolb
rorl
push
xor
push
mov
or
add
sub
push
rorl
xor
rolb
rolb
xor
rorl
rorb
movb
xor
mov
add
add
add
add
roll
mov
movb
jmp
inc
out
aam
jb
inc
jns
add
rorb
movb
rolb
movl
rorb
jmp
xor
xchg
pop
add
and
cld
decl
incl
add
add
add
push
popl
xor
rolb
mov
sub
xor
roll
xor
movb
rorl
xor
mov
add
sub
popl
verw
cmp
push
pop
mov
shrd
xchg
lea
test
push
pop
ror
repz
rorl
rorb
mov
xchg
mov
sub
mov
add
pop
xchg
mov
sub
push
add
neg
test
lea
arpl
cmovns
test
mov
cmp
cld
pop
push
mov
or
add
or
add
xor
pushfw
call
push
popl
or
push
or
call
cmp
add
roll
roll
rolb
sub
xor
roll
roll
xor
movl
xor
mov
push
push
add
xchg
mov
xor
add
rorb
inc
dec
jne
sub
xorl
and
push
add
mov
add
add
xor
add
xchg
mov
rolb
inc
dec
jne
sub
movb
movl
mov
xor
add
sub
mov
popfw
jmp
je
ret
mov
popa
nop
xchg
xchg
xchg
sub
sub
xor
pushfw
mov
sub
sub
xchg
push
mov
and
add
xor
add
sub
call
decb
mov
fcmovu
add
xchg
mov
addl
sub
add
add
xor
dec
xor
add
aas
jge
incl
add
add
add
push
andb
add
cmp
pop
subb
inc
dec
jne
sub
roll
add
movb
add
sub
xchg
hlt
mov
add
pop
inc
dec
jne
sub
xorw
lods
xor
xchg
lcall
add
andb
add
add
xor
add
incb
inc
dec
jne
sub
notw
aas
jge
add
add
int3
addl
out
add
add
sbb
xchg
stc
add
add
add
add
decl
inc
mov
add
add
dec
jne
sub
push
add
mov
notb
inc
dec
jne
sub
movb
movl
mov
or
add
sub
mov
popfw
jmp
jae,pt
jns
or
call
push
popl
xor
push
add
arpl
cld
xchg
xor
cld
pop
mov
roll
xor
rorb
xor
rorl
movl
movl
xor
mov
add
rol
push
add
call
rorl
movb
and
mov
or
neg
xor
jno
shr
cmp
inc
arpl
mov
js
xchg
lea
std
arpl
sbb
stc
xchg
push
pop
verw
cmovns
push
pop
xchg
mov
mov
cld
rorl
sub
xor
movb
roll
xor
rolb
mov
mov
xor
mov
pop
add
pushfw
push
and
push
call
mov
std
das
dec
mov
fmull
lods
fiaddl
decl
jmp
mov
add
add
push
mov
xchg
xor
add
or
add
add
mov
aad
testl
decb
inc
dec
jne
sub
rorb
addl
xor
mov
adc
mov
xchg
jno
add
mov
ja
mov
add
and
test
lea
xchg
add
add
dec
add
cld
decl
incl
add
inc
dec
jne
sub
notl
cltd
jle
cmp
add
push
push
add
nop
lahf
sbb
notw
cltd
jle
in
add
mov
clc
add
add
add
add
add
rolb
inc
dec
jne
sub
addw
mov
mov
add
add
movsb
add
add
add
rolb
inc
dec
jne
sub
push
add
mov
negb
inc
dec
jne
sub
movb
movl
movb
mov
rorl
xchg
mov
sub
push
push
mov
add
xor
add
xor
add
popfw
jmp
cwtl
adc
mov
decl
incl
add
add
xor
movzwl
test
or
cmp
xchg
verw
arpl
test
dec
cld
push
roll
mov
xor
mov
xor
mov
movb
rorb
xor
mov
add
and
add
add
xchg
mov
pop
rorb
rolb
call
push
popl
and
mov
add
mov
add
call
push
popl
xor
push
xchg
mov
add
sub
mov
add
add
pop
add
sub
dec
add
jmp
mov
sbb
cli
stos
or
add
add
add
pop
jmp
stos
fwait
cmp
jbe
ret
ret
insl
add
roll
roll
rorl
bndstx
cpuid
pushfw
xchg
mov
sub
call
rorl
roll
mov
and
movb
or
popl
add
mov
call
idiv
or
jle
jle
adc
mov
jle
rolb
rolb
rorb
sub
xor
roll
xor
rorl
xor
mov
notl
cltd
jle
mov
mov
add
add
addr16
dec
jne
sub
nopl
xorw
ljmp
add
add
incb
inc
dec
jne
sub
notl
xchg
ljmp
inc
and
decb
inc
and
push
rorl
rorl
xor
rorb
xor
rorb
rorb
rolb
xor
mov
add
xor
add
rorb
inc
dec
jne
sub
roll
xchg
andb
add
movsl
dec
sarb
add
inc
dec
jne
sub
movb
movl
xchg
mov
add
xchg
mov
add
popfw
jmp
mov
cmpsb
call
push
popl
add
add
mov
jne
xchg
neg
push
pop
mov
cmovb
xor
push
pop
cmp
push
pop
arpl
cmp
arpl
mov
neg
mov
xchg
cld
mov
add
rorl
mov
xchg
mov
sub
cmp
jne
call
rorl
rorl
mov
push
push
roll
rorl
mov
add
add
add
sub
rolb
mov
rolb
pop
add
ret
jmp
push
push
rorl
rolb
mov
call
push
popl
or
push
and
rorl
rorl
rorl
or
rorb
add
sub
pop
push
and
push
xchg
mov
add
add
movb
sub
mov
sub
add
jmp
jmp
dec
sub
daa
aam
jb
inc
jns
pop
insb
xor
call
push
popl
add
push
mov
and
add
sub
movb
sub
xor
movl
xor
mov
mov
roll
xor
mov
push
xor
push
mov
add
add
mov
roll
xchg
mov
sub
call
push
popl
and
push
add
mov
add
mov
add
add
sub
xchg
mov
push
mov
and
add
sub
sub
mov
xor
movb
rorb
mov
movb
roll
rorl
mov
rorb
roll
roll
mov
mov
rorb
mov
roll
rorl
call
push
popl
xor
push
and
rorb
rorl
or
mov
mov
mov
add
sub
mov
add
add
rorl
sub
xor
rorl
rolb
xor
roll
mov
xor
mov
push
add
xchg
mov
add
sub
mov
mov
pushfw
xchg
mov
sub
mov
sub
call
stos
or
jmp
lfence
out
push
and
rorl
or
rorl
add
or
add
xorl
je
jecxz
and
inc
and
jmp
xor
inc
and
int3
or
roll
movb
roll
add
negb
inc
dec
jne
sub
push
mov
rorb
xchg
mov
sub
rorb
inc
dec
jne
sub
xchg
push
movb
roll
xchg
mov
sub
subb
inc
dec
jne
sub
rolw
mov
out
add
xchg
orl
add
add
insl
add
or
and
add
subb
inc
dec
jne
sub
movb
movl
movb
xor
movl
roll
movb
xor
roll
roll
movl
xor
mov
add
pop
popfw
jmp
add
sbb
jmp
test
sbb
mov
rolb
push
and
call
push
popl
xor
mov
mov
mov
or
push
pop
cmp
shr
test
jne
ja
mov
cmp
sbb
mov
mov
verw
cmovno
xchg
nop
jae
verw
not
cld
roll
xor
mov
xor
roll
xor
mov
add
mov
add
lods
push
mov
mov
mov
pop
xchg
add
dec
lea
sub
sub
jmp
xlat
les
cs
pop
gs
dec
loope
mov
mov
mov
mov
mov
mov
mov
pop
mov
pushfw
call
push
popl
xor
push
and
call
cmp
ficomps
cmp
aas
call
test
incl
movsb
add
add
sub
push
mov
add
notb
inc
dec
jne
sub
movb
movl
movl
xor
rorb
xor
mov
xor
mov
add
rorb
mov
sub
xor
movl
rorl
rorl
xor
rorl
xor
mov
popfw
jmp
xor
mov
pushf
mov
sub
call
mov
and
mov
roll
or
sub
mov
popl
call
ss
mov
push
ljmp
and
dec
and
inc
or
roll
rorl
movl
add
notb
aas
addb
add
sti
xchg
inc
add
add
insl
mov
add
jg
lods
incl
add
mov
add
add
out
test
push
pushf
mov
add
std
push
xchg
pop
add
xchg
mov
negb
inc
dec
jne
sub
push
mov
add
add
notb
inc
dec
jne
sub
movb
movl
push
and
movb
movb
movb
or
roll
rorb
rorb
add
add
add
add
xchg
mov
popfw
jmp
lods
and
push
rolb
mov
roll
sub
xor
roll
mov
movb
xor
mov
rorl
xor
pop
sub
popl
rorb
sub
xor
movb
roll
roll
xor
rorb
rolb
xor
mov
xchg
cmp
mov
test
mov
mov
verw
push
pop
dec
mov
mov
neg
mov
mov
ja
rcr
movzwl
sub
push
pop
cmovae
push
pop
dec
bts
neg
verw
dec
shr
dec
cld
push
xchg
mov
add
and
add
sub
mov
mov
lea
xchg
push
jmp
movb
fstps
fwait
cmp
pop
adc
in
add
jmp
push
dec
dec
outsl
jl
pop
pop
push
jmp
andl
add
nopl
push
xchg
xchg
xchg
jmp
push
inc
sub
scas
dec
fmull
sbb
jmp
je
adc
loopne
pop
aas
or
push
fildl
xlat
sub
push
mov
mov
mov
pop
push
mov
pop
jmp
push
das
cmp
sbb
add
sub
push
jmp
ret
inc
jns
pop
jmp
insb
xor
xchg
pop
add
and
setl
inc
pop
xor
shlb
shll
movsl
add
sub
add
xchg
push
mov
mov
mov
pop
nopl
add
add
push
xor
push
mov
mov
mov
pop
jmp
out
cmp
xor
sub
add
jmp
sbb
jmp
lods
loop
xor
cmp
dec
loope
jmp
hlt
sbb
fsubrp
add
ljmp
mov
lea
nop
mov
inc
lcall
jmp
std
jmp
repnz
sar
lahf
in
mov
mov
test
insl
add
and
nopl
mov
push
xor
mov
sub
xor
xchg
verw
movsbl
bsf
push
pop
cld
and
roll
movb
or
rorl
movb
movb
add
movb
roll
pop
add
sub
xchg
add
mov
sub
call
push
popl
and
mov
verw
cmovns
inc
sbb
lea
not
cmovb
rcl
cmovo
arpl
jmp
lea
test
verw
ror
test
mov
not
lea
mov
push
pop
cld
pop
and
rorl
rorb
movl
or
mov
add
mov
jmp
and
fstps
and
push
jmp
jbe
pop
ja
dec
add
push
dec
jmp
dec
pop
add
pushfw
push
call
push
popl
and
call
pop
sbb
call
inc
sbb
xor
xor
add
ljmp
mov
add
incb
inc
dec
jne
sub
push
add
xchg
mov
decb
inc
dec
jne
sub
push
rolb
xchg
mov
sub
decb
inc
dec
jne
sub
xorw
ljmp
mov
pop
addb
inc
dec
jne
sub
movb
movl
and
roll
mov
or
rorl
mov
movl
add
add
xchg
mov
popfw
jmp
lcall
push
mov
cld
decl
incl
cld
decl
add
popl
jmp
xor
shr
xor
rcl
mov
xchg
shr
jns
verw
mov
mov
shl
push
pop
mov
test
push
pop
xchg
inc
push
pop
verw
mov
cld
and
rorb
or
movb
movb
roll
add
push
mov
roll
movl
sub
xor
mov
movb
xor
movb
mov
xor
mov
and
add
add
push
add
roll
push
add
inc
not
test
not
cld
mov
and
add
sub
mov
xor
push
jmp
je
adc
loopne
pop
pop
push
mov
mov
mov
mov
mov
pop
push
jmp
pop
clc
shr
add
ret
rcll
or
das
cmp
pop
lea
add
add
lea
pushfw
push
or
sub
xchg
xchg
mov
add
sub
call
adc
sbb
pop
xchg
push
movb
add
add
add
xor
add
or
add
push
roll
movb
mov
and
add
decb
inc
dec
jne
sub
push
mov
xor
add
rorb
inc
dec
jne
sub
movb
movl
sub
mov
push
add
xchg
mov
add
add
popfw
jmp
ja
les
insl
outsl
ret
adc
jmp
or
rorl
sub
xchg
roll
movb
movb
xor
roll
roll
xor
roll
roll
mov
xor
mov
add
sub
call
out
dec
std
das
pop
sbb
add
add
xchg
mov
rorl
jl
add
xchg
das
add
add
add
pop
aam
inc
add
add
je
fstl
add
jbe
incl
add
loopne
sub
gs
add
add
arpl
add
adc
add
cltd
addl
jns
add
sbb
add
add
add
add
add
xor
add
add
add
negb
inc
dec
jne
sub
movb
movl
mov
xor
add
mov
or
add
popfw
jmp
mov
leave
jo
push
push
jle,pn
add
pushf
call
push
popl
xor
call
push
popl
and
call
push
popl
and
popl
call
je
fs
ja
mov
lret
or
rorb
mov
mov
sub
xor
movb
xor
mov
rorb
xor
mov
addw
xchg
nop
data16
add
jo
add
sub
test
flds
add
cmc
clc
lock
pop
push
mov
add
sti
shrb
push
add
add
adc
add
or
incl
add
add
jno
push
or
add
add
lcall
mov
push
pop
subb
inc
dec
jne
sub
notw
or
add
add
rorb
rolb
movl
or
roll
add
addb
inc
dec
jne
sub
push
pop
addb
inc
dec
jne
sub
xorb
adc
add
xor
jecxz
add
add
notl
xchg
in
sub
mov
rolb
inc
dec
jne
sub
rorw
mov
nop
jp
add
cltd
arpl
add
add
push
popl
add
call
rorl
rolb
and
roll
or
call
add
test
fsubr
fidivrl
les
test
decl
incl
add
add
cmp
add
inc
dec
jne
jle
lcall
jmp
xchg
mov
jno
adc
inc
mov
push
ds
pop
stos
add
repnz
mov
daa
into
push
xchg
test
jmp
xor
imul
jmp
dec
push
mov
pop
lea
push
mov
mov
mov
mov
mov
pop
rorw
rolw
xor
decl
incb
inc
dec
jne
and
mov
lcall
jle
arpl
decl
sbb
in
call
ljmp
dec
and
lcall
incl
sbb
aas
dec
push
test
jg
cmp
adc
incl
dec
shr
mov
mov
mov
imul
decb
std
jg
add
aas
dec
push
test
jg
cmp
push
pop
add
xchg
jmp
add
add
jmp
pop
fstps
bound
call
inc
addr16
mov
jmp
incl
movsb
add
add
add
and
add
add
add
notb
inc
dec
jne
jle
sar
cmp
add
add
cmp
add
add
std
js
pop
jle
sti
js
pop
add
add
add
popfw
notb
xchg
adc
movsb
cld
push
cwtl
add
add
inc
dec
jne
sub
movb
movl
sub
mov
sub
mov
popfw
jmp
push
push
jns
pushf
call
push
popl
xor
push
xor
call
pop
sub
sbb
xor
aad
test
les
pushf
xchg
mov
sub
mov
sub
popl
push
or
popl
sub
xchg
mov
add
sub
call
inc
clc
pop
jl
push
xchg
nop
test
mov
mov
rorl
xchg
mov
sub
push
mov
rorb
movl
xchg
mov
sub
decb
inc
dec
jne
xor
add
add
nop
imul
add
test
add
add
addr16
mov
xor
pop
stc
shr
aas
aaa
cmp
or
xor
inc
out
aad
jae
inc
jp
and
lret
cmp
mov
sbb
ljmp
sub
inc
or
pop
pop
add
out
int
sub
xchg
idiv
gs
adcl
fimull
call
in
add
out
adcl
add
add
mov
sti
sbb
ret
xchg
imul
sub
add
jmp
iret
sub
sub
dec
add
jmp
xchg
arpl
xchg
jmp
aad
fstpt
mov
push
jmp
inc
push
nop
mov
lret
test
cmpsw
push
jmp
std
repnz
sar
lahf
in
mov
mov
push
xchg
test
xor
imul
stos
or
add
mov
push
pop
lea
push
jmp
dec
pop
subw
mov
test
les
xchg
dec
jne
cmpsb
adc
and
cmpsb
adc
and
and
test
and
lods
in
and
xor
push
and
and
sbb
and
xchg
ljmp
add
jno
lcall
adc
les
adc
and
js
add
les
adc
and
push
inc
adc
lcall
push
add
add
shlb
add
xorb
inc
dec
jne
inc
sub
add
cmp
cmp
cmp
push
mov
inc
shl
inc
pusha
les
sarb
xbegin
les
add
add
ret
and
add
add
push
adc
movb
add
jae
int
add
add
add
adc
adc
add
add
and
add
dec
sbb
add
dec
and
add
add
insb
or
fwait
xchg
clc
add
jl
and
and
add
xchg
mov
xorb
inc
dec
jne
sub
subw
outsl
mov
add
add
add
xchg
mov
add
add
rorb
inc
dec
jne
sub
push
roll
sub
xor
rorb
xor
rorl
roll
movl
xor
mov
notb
inc
dec
jne
sub
bndldx
push
xchg
mov
add
negb
inc
dec
jne
sub
movb
movl
add
xchg
mov
sub
mov
popfw
jmp
lret
inc
inc
mov
scas
sahf
lods
jmp
pop
lods
jne
jnp
xor
pushfw
push
or
push
add
call
test
or
dec
cs
incb
movsb
add
add
add
xorl
and
add
add
add
mov
incb
inc
dec
jne
sub
rolw
inc
in
push
mov
and
add
add
add
rorb
inc
dec
jne
sub
push
pop
notb
inc
dec
jne
sub
xchg
xchg
roll
xorl
jne
bound
ds
popf
add
xchg
ret
add
add
mov
pop
add
add
incl
decl
push
fwait
add
add
inc
dec
jne
sub
movb
movl
sub
mov
xchg
mov
add
popfw
jmp
jmp
rolb
mov
jmp
aas
or
push
rolb
rorl
mov
movb
jmp
aaa
movsb
or
push
das
cmp
sbb
movaps
daa
aam
jb
inc
jns
pop
insb
xor
jne
rorl
sub
push
or
mov
add
pop
cmp
je
add
mov
sub
xchg
mov
sub
popl
mov
sub
add
xchg
mov
call
mov
and
mov
rorl
or
push
xchg
mov
add
sub
roll
rorb
roll
xchg
mov
sub
xchg
mov
sub
push
mov
xor
add
add
sub
mov
jmp
pop
xor
shlb
int3
adc
rol
and
sub
add
add
mov
add
add
mov
call
push
popl
add
push
movb
xor
movb
xor
rorb
movb
xor
mov
add
sub
pop
rolb
nop
add
rorb
rolb
movb
sub
xor
movb
mov
rorb
xor
roll
xor
mov
push
push
and
rorl
mov
roll
or
mov
add
or
add
sub
push
and
roll
or
rorl
rorb
mov
add
add
add
cmp
jb
sub
push
or
mov
add
movb
push
pop
and
add
rorb
mov
rorl
sub
xor
rorb
rolb
xor
rolb
mov
movb
xor
sub
mov
sub
push
add
xchg
mov
sub
sub
mov
sub
mov
push
mov
and
add
add
sub
mov
sub
xchg
mov
sub
push
roll
sub
xor
roll
movl
xor
rorb
rorb
roll
xor
mov
add
push
mov
add
add
add
mov
call
push
popl
xor
rorl
rorl
mov
sub
xor
mov
mov
rorb
xor
rorl
xor
mov
arpl
dec
cld
sub
mov
movl
xchg
mov
sub
add
sub
sub
xchg
lea
dec
sub
sub
sub
add
sub
xchg
nopl
sub
sub
movzwl
pushfw
sub
xchg
mov
or
add
sub
call
roll
movl
rolb
mov
call
push
push
push
pop
mov
xchg
mov
add
notb
mov
add
add
and
call
and
std
roll
xor
rorl
movb
xor
roll
mov
roll
xor
mov
add
rolb
inc
dec
jne
sub
notw
jle
lea
add
shlb
shlb
decl
incl
movsb
add
add
sub
rorb
inc
dec
jne
sub
notl
jg
xor
add
stc
cmp
ds
add
xor
add
addb
inc
dec
jne
sub
push
rorl
roll
roll
xchg
mov
sub
notb
inc
dec
jne
sub
movb
movl
pop
push
add
mov
and
add
popfw
jmp
jnp
loop
push
fsts
nop
sub
add
add
sub
add
sub
lea
sub
sub
jmp
xchg
stos
fwait
cmp
lea
lea
add
mov
movb
rorb
rolb
movl
movl
roll
movl
movb
jmp
push
mov
pop
lods
sub
call
push
popl
xor
push
roll
mov
add
add
add
rorl
rorl
mov
xchg
mov
sub
movl
movl
movb
add
push
xor
push
mov
add
sub
push
xchg
mov
add
xor
add
add
pushfw
roll
movb
sub
xor
movl
rorl
rorb
xor
roll
mov
xor
xchg
mov
add
sub
xchg
mov
sub
call
in
add
fsubl
add
movsb
add
add
add
notb
js
push
and
rolb
movl
or
rorl
mov
add
incb
inc
dec
jne
sub
xchg
rorl
push
rolb
aam
add
mov
or
add
xor
add
decb
inc
dec
jne
sub
push
xchg
mov
add
negb
inc
dec
jne
sub
movb
movl
mov
add
mov
add
popfw
jmp
maxps
or
lods
imul
add
add
roll
rorb
and
movl
rorb
roll
or
add
mov
xor
xchg
arpl
mov
xor
lea
xchg
rcl
shl
cmc
cmovae
cld
mov
mov
and
add
mov
add
pop
call
rolb
rorb
mov
add
mov
push
pop
test
lea
cmc
xchg
bt
inc
xchg
xor
jae
arpl
mov
dec
sub
xor
clc
mov
xor
arpl
dec
sbb
test
dec
neg
push
pop
mov
cmp
cld
push
push
movl
mov
movb
xchg
mov
sub
add
add
add
add
mov
or
add
pop
add
sub
jmp
daa
mov
mov
push
add
push
roll
xor
roll
rorb
xor
mov
rorl
rorl
xor
mov
add
sub
push
push
movl
rolb
roll
xchg
mov
sub
xor
add
and
add
mov
sub
push
add
mov
add
movb
movb
xchg
mov
sub
leave
xchg
mov
sub
push
add
cmp
stc
cld
mov
xor
add
rorb
roll
xor
rorb
xor
rorb
xor
mov
add
ret
push
mov
mov
mov
mov
mov
mov
mov
pop
sub
add
add
push
pushfw
call
push
popl
or
call
push
popl
add
call
adcb
or
add
add
notl
aas
jo
incl
add
inc
xchg
add
add
mov
add
add
or
inc
and
sub
xor
mov
rorb
roll
xor
rorl
movb
xor
mov
addb
inc
dec
jne
sub
pushfw
sub
xchg
mov
xor
rorb
movb
xor
movb
movb
xor
mov
add
sub
xchg
mov
sub
call
and
inc
add
mov
xchg
notw
cltd
jle
and
add
mov
sub
add
int
jge
test
test
or
add
addl
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
xlat
push
jmp
hlt
sbb
fidivrs
js
jmp
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
and
add
or
add
add
pushf
add
add
subl
stos
add
add
xchg
add
out
add
lahf
push
xchg
mov
xchg
lds
add
js
cltd
jle
rolb
add
in
in
outsl
xlat
add
add
cld
mov
incb
inc
dec
jne
sub
incl
add
decl
xor
mov
mov
mov
add
std
test
add
incl
push
test
jg
gs
cmc
xchg
sub
dec
cld
mov
ja
scas
subb
out
addr16
lea
and
stos
pop
mov
push
ljmp
dec
xchg
test
jbe
dec
add
dec
dec
dec
ljmp
andb
adc
pop
stos
je
jp
lock
or
add
addb
inc
dec
jne
sbb
xchg
xchg
jg
sbb
xchg
xchg
xchg
mov
adcb
xchg
xchg
sbb
sbb
xchg
xchg
pop
and
xchg
xchg
xchg
xchg
cld
xor
dec
push
cwtl
xchg
xchg
insb
dec
push
push
lods
pop
xor
fucom
movsl
sbb
test
and
in
inc
jp
xchg
xchg
fiaddl
and
sub
add
mov
cld
decl
incl
add
incl
add
xchg
sbb
add
or
add
add
shll
inc
and
xrelease
mov
sub
negb
inc
dec
jne
sub
nopl
addl
inc
xchg
xor
add
add
xor
add
subb
inc
dec
jne
sub
movb
movl
push
xchg
mov
add
and
add
push
movl
roll
xchg
mov
add
add
add
popfw
jmp
xchg
cli
pop
push
adc
leave
dec
lea
nopl
xor
inc
dec
add
push
push
xor
jmp
push
pop
mov
lea
mov
xchg
ror
js
push
pop
verw
neg
verw
movzwl
lea
cmovl
xor
dec
arpl
not
cld
test
push
pop
xor
lea
repz
inc
cld
xchg
mov
add
push
mov
and
add
xor
add
push
pushfw
call
push
popl
xor
sub
xchg
mov
call
fcomps
inc
adc
call
inc
and
mov
xchg
mov
sub
rorb
lock
xorw
jl
mov
add
add
push
roll
xor
rorl
rorl
mov
xor
rorb
mov
xor
mov
add
rorb
inc
dec
jne
sub
roll
sti
dec
dec
addb
jbe,pt
incl
add
mov
mov
notb
inc
dec
jne
sub
movb
movl
rorb
rolb
xchg
mov
sub
mov
add
add
popfw
jmp
shlb
sbb
pushf
push
xor
mov
sub
call
push
mov
pop
push
add
fmull
cmc
icebp
out
in
in
push
add
mov
add
add
push
and
rolb
roll
mov
or
mov
add
addb
inc
dec
jne
sub
push
rolb
mov
movl
sub
xor
mov
roll
xor
movb
xor
mov
incb
inc
dec
jne
sub
notw
cltd
jle
int3
add
add
and
movsl
roll
rorl
mov
roll
rorb
xor
movl
rorl
xor
roll
movl
rorl
xor
mov
add
decb
inc
dec
jne
sub
subw
push
dec
add
add
add
add
add
rolb
inc
dec
jne
sub
subl
cmp
xor
mov
add
subb
inc
dec
jne
sub
movb
movl
mov
roll
mov
xchg
mov
sub
rolb
mov
xor
rolb
xor
roll
mov
xor
mov
add
popfw
jmp
cld
lods
mov
sbb
lods
push
and
sub
xchg
mov
and
roll
or
movb
rorb
add
sub
dec
not
mov
cmp
cmovge
jmp
jmp
xchg
sbb
lea
cmp
repz
mov
verw
arpl
xchg
xchg
mov
mov
push
pop
verw
cmp
shrd
cld
and
movl
movb
or
rolb
rorl
roll
add
sub
mov
mov
call
rorb
mov
movb
mov
sub
mov
mov
cmp
mov
mov
lea
arpl
mov
and
bsr
dec
mov
mov
mov
push
pop
cmovge
cmp
lea
mov
bsr
mov
cld
movb
mov
movl
sub
mov
push
mov
add
add
add
add
movl
movl
movl
movl
push
and
push
mov
xor
add
add
push
xchg
mov
add
add
add
call
push
popl
xor
mov
sub
xchg
mov
add
jmp
sub
mov
sbb
xlat
les
idiv
pushl
je
icebp
rorl
rorl
rorb
rorl
rorb
mov
roll
rorl
movb
roll
roll
roll
movl
sub
call
roll
movl
and
rorb
roll
rorb
or
push
rorl
rorl
sub
xor
mov
xor
mov
xor
mov
add
mov
add
mov
roll
rorb
roll
mov
sub
mov
sub
mov
or
add
add
roll
movl
mov
roll
roll
roll
add
mov
push
xchg
mov
add
add
push
roll
rolb
roll
sub
xor
rolb
xor
rorl
rorl
rorb
xor
mov
add
add
rolb
rorb
rolb
sub
xchg
sub
mov
sub
mov
sub
roll
rorl
xchg
mov
sub
rorb
movl
rorl
rolb
rorl
call
push
popl
and
push
mov
add
sub
mov
add
add
test
je
mov
sub
push
and
roll
rorl
rorb
or
rorb
add
sub
add
mov
add
movl
rorl
rolb
rorb
jmp
inc
sar
lahf
in
mov
sbb
add
xchg
add
add
lea
xchg
xchg
push
mov
mov
mov
mov
mov
pop
mov
rolb
movb
rorl
rorb
sub
xchg
and
mov
or
movl
add
sub
push
pop
sub
mov
add
call
rolb
roll
mov
mov
push
push
add
xchg
mov
and
add
add
mov
xor
rorl
movl
xor
movb
xor
mov
add
rorb
rorl
rolb
rorb
roll
rorb
roll
mov
mov
movl
mov
jmp
dec
xchg
stos
fwait
cmp
jbe
emms
in
add
push
dec
dec
outsl
jl
pop
mov
push
movl
rorl
movb
rorl
rolb
jmp
mov
cmpb
jnp
push
sub
xchg
mov
push
push
push
pop
xor
add
or
add
sub
roll
xor
roll
mov
xor
rorl
mov
roll
xor
mov
add
push
and
push
mov
add
add
rorl
mov
sub
xor
mov
rorb
xor
movb
xor
mov
pushl
bndstx
rolb
jmp
enter
je
add
add
push
popl
add
call
push
popl
add
popl
push
and
rorl
or
movl
rorl
add
sub
sub
mov
add
call
pushfw
movb
sub
xor
rolb
xor
rorl
movb
xor
mov
sub
mov
call
es
and
push
jg
insb
insb
push
rorb
movb
rorl
sub
xor
mov
rorl
xor
roll
movl
mov
xor
mov
and
add
rolb
inc
mov
add
add
iret
mov
pop
add
xor
add
subb
inc
dec
jne
sub
push
mov
and
add
incb
inc
dec
jne
sub
xorw
push
fwait
add
mov
incb
inc
dec
jne
sub
movb
movl
push
mov
add
and
add
pop
popfw
jmp
outsl
int
push
xor
push
and
popl
rorl
rorb
mov
push
mov
verw
verw
cld
movsbl
mov
mov
xchg
cmp
movzbl
mov
cld
mov
add
sub
mov
test
jne
mov
bndldx
rorb
nopl
bndldx
push
xor
add
add
push
rolb
call
movb
rorb
rorb
and
rorb
or
sub
xchg
mov
mov
mov
ror
push
pop
cmp
xchg
xchg
mov
cmp
xor
xor
bsr
shr
test
cld
rorl
xchg
mov
sub
and
mov
movb
or
rorb
add
pushl
rorb
roll
sub
push
and
mov
add
rorb
xchg
mov
sub
call
sub
dec
xchg
call
rolb
roll
nop
mov
push
mov
mov
mov
mov
mov
pop
lea
xor
movl
pushfw
roll
call
push
popl
and
call
push
popl
and
call
lock
stc
xor
hlt
pop
pop
add
add
test
dec
rorb
rorb
xchg
mov
sub
push
sub
mov
notb
inc
dec
jne
sub
nop
notw
lock
nopl
rorb
test
add
add
inc
dec
jne
sub
movb
movl
add
mov
sub
mov
popfw
jmp
stc
xchg
ficoml
dec
and
rorb
jmp
out
cmp
call
push
popl
and
mov
sub
mov
and
add
sub
xchg
add
mov
sub
mov
add
mov
add
sub
push
add
push
pop
add
and
movl
mov
or
mov
movb
rorl
add
mov
sub
add
movb
movl
roll
sub
xchg
movb
rorl
rorb
roll
mov
sub
mov
sub
mov
sub
add
mov
push
push
push
rorb
rorb
rolb
xor
rorl
mov
movb
xor
mov
rolb
xor
mov
add
xor
add
add
add
mov
rorl
mov
roll
rorl
jmp
sbb
pusha
add
add
add
add
push
popl
or
add
mov
add
btr
lea
btc
mov
cmp
inc
test
arpl
neg
dec
xor
and
mov
btc
inc
cmovne
mov
dec
cld
rorb
mov
rorb
mov
rorl
xor
mov
rorb
xor
roll
rorl
roll
xor
mov
add
mov
add
mov
mov
mov
rorl
sub
xor
rorb
xor
roll
xor
mov
call
push
popl
xor
cmovns
lea
jae
neg
verw
nop
mov
cmp
arpl
mov
lea
cld
mov
rolb
rolb
rorb
mov
push
add
mov
xor
add
rorb
mov
xchg
mov
sub
add
rorb
push
xor
roll
sub
xor
movb
xor
roll
xor
mov
sub
xchg
mov
add
sub
popl
mov
xchg
test
ja
cmovns
rcr
test
mov
verw
cmovp
xor
mov
cmp
verw
bsr
cmova
mov
dec
cld
mov
and
add
and
mov
roll
roll
or
movb
mov
add
add
push
mov
mov
mov
pop
sub
push
mov
pop
lea
mov
add
add
sub
add
sub
sub
add
sub
lea
mov
push
and
add
mov
xor
mov
cmp
arpl
xor
jbe
test
lea
dec
cld
sub
mov
push
add
mov
add
add
add
pushfw
sub
xchg
mov
push
and
call
fnstenv
jbe
ficoml
adc
mov
add
push
xchg
mov
add
xorb
inc
dec
jne
sub
subb
xchg
add
add
icebp
incl
add
pop
subb
inc
dec
jne
sub
movb
movl
add
xchg
mov
add
mov
popfw
jmp
stc
lret
call
push
popl
or
xchg
mov
sub
mov
xadd
push
pop
xor
cld
xchg
mov
add
rorl
roll
sub
xor
roll
xor
mov
xor
mov
test
je
call
movl
rorb
rorl
and
rorb
rorb
or
push
or
push
pop
jmp
movzwl
push
pop
cmovp
verw
movzbl
push
pop
bsr
verw
cmovb
arpl
cmove
mov
adc
rcr
xchg
cmovs
cld
sub
mov
add
mov
test
jne
add
add
inc
dec
add
sub
mov
mov
sub
xor
rorl
roll
xor
movl
xor
mov
mov
add
push
movl
mov
or
add
xor
add
jmp
jl
sbb
inc
pushfw
rorl
movb
sub
xor
mov
xor
movl
xor
mov
sub
mov
call
push
and
jle
popa
sti
out
mov
and
add
push
xchg
mov
add
rorb
inc
dec
jne
sub
xorb
rorl
add
mov
rolb
inc
dec
jne
sub
notb
cltd
notl
xchg
hlt
mov
add
add
rorb
inc
dec
jne
sub
xchg
notw
xchg
hlt
sub
mov
incb
inc
dec
jne
sub
push
xchg
mov
add
negb
inc
dec
jne
sub
movb
movl
movl
mov
mov
xor
mov
rorl
movl
xor
mov
mov
rorl
xor
mov
add
pop
popfw
jmp
xchg
lret
scas
popa
or
pushfw
call
roll
movl
rorb
and
rolb
movl
or
call
push
popl
xor
call
popa
fstpt
jnp
addl
loopne
pushl
add
roll
movb
rorb
xor
rolb
rorl
xor
mov
add
push
pop
decb
inc
dec
jne
sub
roll
out
and
int3
add
add
add
add
call
mov
roll
rorl
mov
call
lahf
subb
les
pushf
and
decl
jmp
xchg
sbb
add
xchg
mov
dec
and
or
test
call
inc
and
push
test
lcall
fucomip
rorl
roll
sub
xor
roll
mov
mov
xor
mov
roll
xor
mov
xorb
inc
dec
jne
dec
and
lret
std
inc
xorb
lret
outsb
xchg
pop
mov
out
jne
lret
lods
sbb
out
pop
xor
out
imul
xor
out
ss
out
sbb
xchg
sub
shr
sbb
cld
decl
call
mov
pushf
and
pushl
mov
decl
incl
add
inc
dec
jne
inc
mov
loope
dec
popa
lds
xor
mov
inc
aaa
cmp
cmp
out
sar
mov
movsb
cmp
lds
cltd
rol
les
sbb
les
les
pop
mov
fisubl
scas
leave
inc
add
mov
rolb
inc
dec
jne
sub
movb
movl
and
roll
rorl
or
rolb
rorl
add
push
push
add
mov
add
add
or
add
popfw
jmp
lcall
push
call
push
popl
and
sub
xchg
roll
rorl
rorb
add
xchg
mov
sub
cmovno
repz
mov
push
pop
nop
cld
and
roll
movl
rolb
or
movl
add
roll
mov
or
add
and
inc
dec
sub
add
add
sub
push
jmp
pushf
movsl
jp
mov
inc
jmp
pop
xor
shlb
jmp
int3
adc
div
fs
push
jmp
xchg
ror
into
out
cld
test
or
or
add
addl
add
jmp
jle
sub
mov
sbb
xlat
les
add
jmp
pop
gs
dec
loope
hlt
sbb
fiadds
add
add
add
sbb
add
sub
push
add
mov
sub
mov
xor
add
call
push
popl
xor
push
push
push
mov
add
or
add
xor
add
add
sub
mov
jmp
js
jne
lea
xchg
lea
lea
xchg
xchg
push
xchg
jmp
cmpsl
sub
sub
pushl
push
jmp
ds
in
mov
jmp
mov
test
xor
or
sbb
cli
stos
or
add
fldpi
or
stos
fwait
cmp
jbe
in
add
sar
rolb
adc
decl
push
outsl
mov
rorb
xor
jmp
add
pop
pop
lods
jne
jnp
sub
add
push
mov
mov
mov
mov
mov
pop
lea
xchg
nop
xor
dec
add
pop
push
mov
sub
xchg
mov
add
push
add
mov
add
mov
xor
rorl
xor
rolb
xor
mov
add
roll
mov
roll
jmp
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
test
jne
nopl
sub
sub
add
sub
push
jmp
pop
insb
xor
xchg
pop
add
and
outsb
setl
add
pop
xchg
test
jne
bndstx
push
mov
mov
mov
pop
lea
xor
push
lea
add
add
pushl
mov
rorb
mov
nopl
call
xchg
add
add
add
sub
jmp
cmpsb
out
cmp
jle
sub
mov
sbb
pushfw
rorb
roll
roll
sub
xor
rorl
mov
xor
movl
movl
roll
xor
mov
movl
mov
sub
call
push
jns
sub
mov
add
xchg
mov
add
rorl
inc
push
shll
inc
inc
and
push
push
push
movb
movb
rorl
xchg
mov
sub
and
add
or
add
decb
inc
dec
jne
sub
movb
movl
xchg
mov
add
mov
xor
add
popfw
jmp
call
or
and
pushfw
call
push
popl
add
rorb
roll
rolb
rorl
sub
xor
roll
rorl
movb
xor
rorb
xor
sub
mov
sub
call
inc
sub
inc
and
jmp
rorl
rorl
rorl
mov
mov
add
addw
adc
add
add
add
or
call
push
popl
xor
popl
roll
mov
sub
xor
movb
xor
mov
roll
xor
mov
add
sub
call
pop
stos
mov
add
xchg
mov
rolb
cltd
rorl
xor
add
mov
xor
movb
xor
mov
mov
roll
xor
mov
add
xor
add
subb
inc
dec
jne
in
push
popf
jmp
imul
add
or
mov
jno
das
lock
inc
pop
call
mov
mov
adc
dec
jmp
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
pop
dec
sub
xchg
xchg
lea
jmp
cltd
pop
aas
or
jmp
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
shll
sub
pushf
movsl
jp
mov
inc
pop
xor
shlb
push
dec
adc
div
fs
xchg
ror
into
out
cld
test
or
push
roll
rorl
rolb
sub
xor
roll
xor
movb
mov
xor
mov
subb
inc
dec
jne
sub
movsb
movsb
movsb
mov
movsb
movsb
movsb
les
imul
movsb
movsb
cmp
movsb
movsb
movsb
or
sahf
or
push
sbb
stc
std
and
pushf
sub
das
cmpsl
add
xchg
out
jle
add
add
xchg
mov
rolb
inc
dec
jne
sub
push
pop
incb
inc
dec
jne
sub
movb
movl
add
xchg
mov
roll
xchg
mov
sub
popfw
jmp
loopne
pop
arpl
adc
stc
inc
std
sub
mov
push
cmovns
mov
je
mov
cmovnp
test
stc
jae
dec
push
pop
cmovb
inc
cld
mov
or
add
add
xchg
mov
cmp
jne
movb
rorl
rorb
roll
movl
roll
roll
rorl
rorl
movl
roll
movl
movl
roll
bndstx
mov
add
sub
rorl
movl
rorl
nopl
push
push
mov
mov
mov
mov
mov
pop
sub
add
bndldx
mov
sub
mov
roll
push
add
test
not
mov
sbb
verw
jmp
arpl
not
xchg
js
xor
test
push
pop
lea
arpl
mov
xor
inc
mov
mov
mov
test
verw
inc
cld
push
sub
mov
and
add
mov
add
dec
pushfw
call
push
popl
add
push
or
call
xor
shl
call
mov
or
add
nopl
push
pop
notb
inc
dec
jne
sub
push
add
xchg
mov
negb
inc
dec
jne
sub
movb
movl
xchg
mov
add
mov
add
popfw
jmp
gs
xchg
mov
add
add
mov
mov
ret
ljmp
mov
call
push
popl
add
mov
sub
add
mov
sub
xchg
mov
push
mov
and
add
add
mov
add
add
mov
xchg
add
add
add
sub
sub
sub
mov
call
push
popl
or
call
push
popl
or
verw
verw
xor
cmp
xor
xchg
jmp
mov
clc
arpl
mov
jns
verw
cmp
dec
cmp
jb
bts
adc
cmp
movzwl
mov
bt
rcr
cmovge
nop
cld
rorl
mov
rolb
add
mov
xchg
mov
add
add
pushfw
roll
rolb
movb
sub
xor
rolb
rorl
xor
movl
rorb
xor
sub
mov
sub
call
push
popl
add
call
arpl
out
aas
add
add
adc
mov
roll
mov
or
rorb
rorl
add
rorl
stos
dec
add
popa
arpl
loop
arpl
add
mov
add
add
push
mov
cld
push
lcall
jne
sub
movb
movl
movl
movl
roll
mov
add
add
mov
add
popfw
jmp
jecxz
cmpsl
test
or
mov
pushf
call
push
popl
or
push
and
call
int
sbb
pop
pop
insl
loopne
and
add
jmp
mov
add
add
add
sbb
push
sub
mov
rorb
inc
dec
jne
sub
notw
xchg
icebp
mov
add
rolb
inc
dec
jne
sub
push
roll
rorb
xor
mov
xor
rolb
xor
mov
add
xorb
inc
dec
jne
sub
xchg
notl
xchg
icebp
inc
incl
add
xor
add
rorb
inc
dec
jne
sub
roll
add
icebp
push
addl
mov
sub
push
and
call
cwtl
in
mov
fdivs
and
sub
or
mov
add
add
rorb
jg
add
add
xchg
mov
decl
push
xchg
inc
add
add
jne
jle
mov
jle
stos
jmp
or
fsubr
fstpt
add
add
mov
mov
hlt
jmp
jbe
fistpl
jl
sti
or
mov
add
add
lea
add
jecxz
aad
jp
push
lcall
push
jmp
jmp
mov
inc
jge
dec
push
hlt
out
xchg
xchg
ljmp
pop
jl
sti
add
mov
add
add
xchg
cmp
add
add
cmp
add
add
incl
add
jl
cmpsb
imul
and
pop
mov
add
and
incl
mov
gs
push
sbb
sub
call
int3
add
xor
add
incl
nop
aas
add
jle
mov
pushl
aaa
sbb
sub
add
add
mov
add
mov
mov
or
rorb
rolb
add
rolb
inc
dec
jne
sub
movb
movl
movl
rorl
sub
xor
rorl
roll
movb
xor
rorl
mov
mov
xor
mov
mov
xor
movl
rolb
rorl
xor
movl
rolb
xor
mov
add
popfw
jmp
dec
les
jns
sub
add
push
mov
mov
mov
mov
mov
pop
push
mov
pop
lea
jmp
jo
outsb
setl
pushf
push
push
xor
call
cs
inc
jo
cltd
sub
les
mov
test
add
add
or
add
addw
xor
add
add
add
add
add
add
decb
inc
dec
jne
sub
pushfw
push
xor
add
mov
call
jecxz
add
push
xor
cmp
mov
xchg
sbb
add
xchg
into
jl
add
mov
cld
incb
inc
dec
jne
sub
jmp
test
incl
fldenv
decl
mov
out
test
movsb
jns
lods
popa
call
add
add
movsb
add
add
add
xor
add
negb
inc
dec
jne
jg
iret
add
add
pusha
add
add
jns
cli
mov
add
movsl
and
add
jge
lcall
add
add
jg
cld
add
add
adc
inc
dec
jne
shl
add
add
push
incl
cwtl
sbb
loopne
adc
pushf
loopne
adc
aas
cltd
sbb
les
fdivr
lcall
push
add
add
shll
les
daa
xchg
jns
incl
movsl
addb
add
addb
inc
ret
add
add
mov
test
or
and
test
add
lds
xchg
arpl
add
inc
dec
adc
jl
lea
jle
add
add
cmp
add
add
ljmp
fldt
add
add
jnp
dec
add
add
sub
fisttpl
add
inc
dec
lret
fstpt
sti
ljmp
repz
mov
pop
or
repz
mov
jae
sldt
add
repz
pop
jl
sti
cltd
lock
xchg
in
jae,pt
lcall
movb
xor
rorl
xor
rolb
rolb
movl
xor
mov
add
notb
inc
dec
jne
sub
addw
dec
mov
maskmovq
notl
cltd
or
add
add
add
loop
bound
mov
add
jae
xchg
add
add
imul
add
cltd
jle
das
add
add
add
add
xor
add
rorb
inc
dec
jne
sub
subb
xchg
addl
mov
add
xorb
inc
dec
jne
sub
xorb
adc
add
add
add
add
or
rorl
rorb
or
rorb
add
or
add
or
add
decb
inc
dec
jne
sub
movb
movl
mov
add
rorb
rorl
roll
sub
xor
rorl
movb
roll
xor
rorl
mov
mov
xor
mov
popfw
jmp
mov
lcall
sub
xchg
mov
sub
xchg
mov
call
dec
cmp
cmp
in
aaa
pop
dec
xchg
mov
rolb
rorl
mov
xchg
mov
sub
push
pop
negb
inc
dec
jne
sub
addw
mov
pop
xchg
notl
aas
je
incl
add
add
add
add
add
add
add
add
add
movl
movl
sub
xor
mov
movb
xor
rolb
xor
xchg
mov
add
sub
call
push
notl
movzbl
add
mov
addl
mov
add
sar
add
lahf
jae
movsl
cmc
push
rcrb
inc
mov
in
sub
xor
mov
mov
xor
roll
xor
mov
and
add
subb
inc
dec
jne
loope
xchg
pusha
dec
mov
dec
lcall
out
jl
pop
or
es
cmp
fildll
jbe
in
add
push
dec
dec
outsl
jmp
jmp
jl
pop
mov
es
mov
cmpb
jne
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
push
rorb
rorb
rolb
mov
add
add
addb
inc
dec
jne
add
addb
addl
addb
inc
xchg
or
xchg
pop
je
addl
stos
call
roll
incl
decl
decb
inc
inc
and
rorb
filds
mov
add
popfw
roll
cwtl
add
insb
add
jecxz
sbb
rolw
inc
loopne
add
add
xchg
jns
add
jg
jg
add
aas
mov
add
orl
subl
sahf
add
add
addl
scas
add
add
daa
xchg
mov
add
cltd
rorl
test
add
xor
add
notb
inc
dec
jne
sub
addl
xor
and
add
or
add
rorb
inc
dec
jne
sub
notb
cltd
rorl
sbb
and
add
or
movsb
mov
add
test
inc
test
call
sub
xor
rorb
roll
xor
roll
rolb
xor
mov
rolb
inc
dec
jne
sub
notw
cltd
adcl
cmp
rolb
and
dec
xor
add
dec
roll
inc
out
push
rolb
xor
mov
roll
xor
rorl
rorb
xor
mov
add
xorb
inc
dec
jne
sub
movb
movl
and
rorb
rolb
or
mov
add
mov
or
add
popfw
jmp
jb
jbe
icebp
add
add
xchg
pushl
pushfw
call
push
popl
and
call
push
popl
xor
call
mov
js
or
movsl
add
cmp
dec
and
pop
mov
sub
xor
rorb
rolb
xor
rorl
roll
rorl
xor
mov
notb
xchg
or
inc
and
add
mov
rorl
sub
xor
mov
roll
roll
xor
rorb
rorl
roll
xor
mov
xorb
inc
dec
jne
sub
addb
orl
add
add
add
rolb
inc
dec
jne
sub
rorl
and
decl
inc
xchg
add
add
dec
jne
sub
addw
add
pushf
movsl
xchg
idivb
test
notl
jg
add
and
mov
jb
xor
add
xchg
add
sub
mov
movl
mov
sub
xor
rorl
xor
rorl
movb
xor
mov
decb
inc
dec
jne
sub
nop
bndldx
notl
cltd
or
add
add
in
sbbb
rorw
cmp
push
notw
cltd
or
or
add
add
push
cltd
or
add
add
add
inc
sub
int3
xor
add
sbb
add
sub
ljmp
adc
mov
add
add
in
in
cld
pushl
test
call
mov
inc
inc
and
xchg
xor
roll
rorb
movb
xor
mov
decb
inc
dec
jne
sub
movb
movl
mov
or
add
mov
add
add
popfw
jmp
add
and
orb
xchg
dec
cmp
call
push
popl
or
push
roll
sub
xor
mov
movb
rorl
xor
roll
roll
xor
mov
sub
add
mov
add
call
push
popl
and
push
sub
mov
add
mov
add
add
sub
xchg
mov
push
add
xchg
mov
sub
mov
add
push
pushfw
push
and
call
push
popl
add
roll
movl
sub
xor
rorb
roll
roll
xor
movl
mov
roll
xor
rolb
mov
mov
xor
movl
rolb
mov
xor
rolb
xor
mov
add
sub
popl
push
add
rorl
rolb
sub
xor
movb
xor
roll
mov
rorl
xor
mov
popl
popl
call
int3
mov
sti
pop
adc
out
sub
inc
inc
inc
mov
mov
xor
rorb
rorl
xor
rorb
xor
mov
add
notw
js
roll
mov
pusha
inc
and
incl
mov
rorb
add
mov
decb
inc
dec
jne
sub
rorw
inc
mov
xchg
add
add
es
xor
decl
incl
add
icebp
incl
add
xchg
mov
dec
cmp
add
sbb
mov
and
add
and
arpl
sbb
mov
in
cld
push
xchg
add
add
inc
dec
jne
sub
movb
movl
mov
sub
xor
roll
roll
xor
roll
rorl
xor
mov
add
xchg
mov
popfw
jmp
xchg
pushfw
call
push
popl
add
add
mov
call
dec
sahf
shl
iret
iret
shrb
js
xchg
popl
movsb
add
add
add
xchg
rorl
popa
int3
out
daa
add
add
cmp
add
mov
and
clc
cmp
and
inc
and
mov
roll
or
mov
rorl
mov
add
addb
inc
dec
jne
sub
pushfw
call
rolb
rorb
and
movl
mov
or
push
add
call
mov
decl
push
xchg
adc
js,pt
add
add
xchg
add
add
jmp
fwait
sub
pop
mov
mov
mov
mov
mov
pop
sub
xchg
xchg
add
sub
notw
aas
jo
add
add
xchg
pop
add
add
movl
rorb
or
movb
mov
movb
add
addb
inc
dec
jne
push
je
test
test
sub
test
or
test
test
adcl
test
repnz
incl
add
add
adc
enter
inc
ret
add
add
jmp
addr16
xchg
cli
add
add
mov
add
adcl
add
adc
sub
subl
adc
mov
negb
inc
push
adc
jge
fistpll
jle
add
add
cmp
add
add
incl
add
jl
pop
add
add
pop
pop
sbb
ljmp
ljmp
add
add
add
decl
decl
adc
add
and
add
and
add
add
xchg
mov
popfw
xchg
push
push
movl
xchg
mov
sub
add
add
incb
inc
dec
jne
sub
movb
movl
xchg
mov
add
mov
add
popfw
jmp
xor
add
xchg
aam
call
push
popl
and
push
sub
not
push
pop
arpl
cmp
mov
cmovb
cld
rorb
rorl
mov
xchg
mov
sub
push
pop
and
add
addl
rorl
rorb
rorl
sub
xor
movl
mov
roll
xor
rorl
rorl
xor
mov
push
mov
add
add
sub
mov
or
add
add
call
rorb
and
mov
mov
or
mov
add
movl
movl
rorl
sub
xor
movl
xor
roll
mov
roll
xor
mov
sub
roll
jmp
add
inc
sar
call
inc
and
rorb
movb
mov
movl
mov
mov
nopl
mov
pushfw
sub
mov
push
add
popl
mov
rolb
sub
xor
movb
rolb
rolb
xor
rolb
xor
mov
call
cmp
or
xchg
incl
movsb
add
add
add
nopl
push
and
movl
or
rorl
add
incb
inc
dec
jne
sub
movb
movl
mov
and
add
push
push
push
add
mov
xor
add
xor
add
add
add
popfw
jmp
pop
pusha
aaa
xchg
call
rolb
movl
rorl
mov
xchg
mov
sub
push
pop
inc
cld
mov
add
sub
mov
mov
call
push
popl
add
push
movb
mov
add
add
add
mov
xchg
mov
add
sub
add
nopl
push
mov
pop
mov
rorl
mov
rorb
rolb
rolb
rorl
rorl
rorl
roll
mov
roll
rolb
nop
add
mov
mov
rorl
sub
xor
rorb
rorb
mov
xor
mov
xor
xchg
mov
add
sub
mov
sub
roll
add
xchg
mov
mov
sub
mov
sub
mov
rorl
mov
xor
add
rorb
movb
roll
call
push
popl
or
mov
add
xchg
mov
add
jmp
xchg
lea
sub
sub
dec
inc
pop
mov
rorl
rorb
rorl
roll
rorb
mov
movl
push
or
push
rorl
sub
xor
mov
mov
mov
xor
movl
mov
xor
mov
sub
push
push
movl
mov
mov
add
add
add
add
add
call
push
popl
and
push
movl
rorl
movl
xor
movb
movl
rorl
xor
roll
movl
xor
mov
add
add
and
movb
roll
rolb
or
rorb
add
rorb
roll
nop
rorb
rorl
movl
jmp
sub
mov
int
pop
push
xor
mov
sub
sub
mov
sub
mov
push
mov
xor
add
add
add
xchg
mov
pop
push
xor
sub
xchg
mov
call
roll
rolb
and
rorb
rorb
or
popl
xchg
bsr
lea
rol
arpl
lea
xor
xor
inc
cld
push
rorl
roll
sub
xor
mov
mov
xor
mov
xor
mov
or
add
xchg
mov
add
leave
rorl
sub
mov
sub
mov
test
verw
mov
test
neg
lea
mov
movswl
rcl
test
shrd
mov
xchg
cld
rorb
mov
xor
rolb
rorb
rorb
xor
movl
rorb
movb
xor
mov
add
push
movl
sub
xor
rorl
rorb
xor
rolb
roll
rorl
xor
mov
and
add
ret
bndldx
push
add
add
xchg
add
sub
sub
sub
sub
inc
add
add
xchg
sub
add
xor
push
movl
movl
sub
xchg
xchg
mov
add
sub
push
xchg
mov
add
add
mov
xor
add
call
rorl
movl
and
mov
mov
movb
or
mov
sub
pop
roll
rorl
rorl
jmp
push
mov
and
inc
push
nop
mov
out
inc
dec
and
mov
jmp
inc
mov
call
push
popl
or
push
push
push
mov
add
add
xor
add
and
add
sub
add
xchg
mov
push
push
and
movl
rolb
or
movb
roll
mov
add
add
add
xchg
mov
rorb
rorl
nop
movb
rorb
call
push
popl
xor
mov
add
mov
xor
add
sub
mov
lea
mov
call
push
popl
add
call
push
popl
xor
xor
and
or
cmovbe
mov
cld
sub
mov
mov
and
add
push
pushfw
mov
roll
rorb
sub
xor
rorl
mov
xor
roll
xor
add
xchg
mov
sub
xchg
mov
sub
call
push
xchg
ficompl
dec
adc
add
add
rolb
roll
rorb
xchg
mov
add
add
add
roll
stos
add
add
xchg
notl
jle
pop
add
add
iret
push
add
cltd
subl
jne
add
push
stos
push
inc
sbb
pop
movsb
add
add
add
incb
inc
dec
jne
sub
addb
aam
lahf
add
add
jge
incl
add
rorl
and
add
xchg
mov
sbb
add
mov
add
add
inc
add
add
aad
add
xchg
push
adc
ljmp
add
add
test
ljmp
test
incl
movsb
add
add
sub
add
add
and
add
xorb
inc
dec
jne
sub
rolb
int3
addl
xchg
mov
add
rolb
inc
dec
jne
sub
push
add
mov
addb
inc
dec
jne
sub
rolb
xor
add
cltd
mov
mov
and
movb
mov
xor
mov
movb
xor
rorl
mov
xor
mov
add
negb
inc
dec
jne
sub
movb
movl
mov
xor
add
and
rorl
rorb
or
rolb
roll
movl
add
popfw
jmp
mov
xchg
mov
sub
push
and
movl
movl
rorb
or
rorl
rolb
rolb
add
sub
movb
movl
rorb
xchg
mov
sub
add
mov
sub
push
rorl
roll
xor
movl
xor
roll
movb
roll
xor
mov
add
add
movb
rorl
mov
and
add
push
or
push
push
sub
mov
or
add
sub
roll
rorb
xor
mov
movl
roll
xor
mov
rolb
mov
xor
mov
add
sub
xchg
mov
mov
add
mov
and
add
xchg
mov
sub
push
pop
sub
rolb
pop
mov
pushfw
push
add
movl
sub
xor
rorl
mov
xor
rolb
xor
sub
mov
sub
call
and
addr16
addr16
cmpsl
sti
test
movsb
movsb
movsb
push
pop
and
add
subl
enter
movsb
add
add
add
xorb
inc
dec
jne
sub
movb
movl
mov
xor
add
mov
and
add
popfw
jmp
mov
in
movsl
js
loopne
loope
pop
rcll
or
das
cmp
cmp
jbe
pushfw
sub
xchg
mov
push
add
call
mov
pop
jo
mov
icebp
insb
cmp
scas
jmp
out
incl
add
decl
decl
sbb
roll
xor
call
dec
and
xchg
mov
sub
and
add
rorb
inc
dec
jne
sub
push
add
mov
rorb
inc
dec
jne
sub
addb
xor
add
insb
or
mov
push
mov
xchg
lods
add
add
xchg
in
add
inc
dec
jne
sub
push
and
roll
movb
or
movb
movb
add
negb
inc
dec
jne
sub
movb
movl
mov
add
add
mov
popfw
jmp
lret
add
dec
add
add
pop
pushfw
call
push
popl
xor
rolb
rorb
sub
xor
rorl
xor
mov
rorl
xor
xchg
mov
add
sub
call
adc
fcom
jg
pop
int
pop
fs
jo
test
call
inc
and
sub
cmp
movb
movb
or
movl
add
nop
subl
popa
insb
in
xchg
add
add
jne
sub
rorw
icebp
mov
add
add
xchg
jns
add
xchg
out
xchg
incl
add
roll
movb
xchg
mov
sub
or
add
addb
inc
dec
jne
sub
movb
movl
and
mov
or
rorl
movl
mov
add
mov
add
popfw
jmp
jns
mull
sub
xchg
mov
call
rorl
movb
and
rorl
rorl
or
call
inc
jp
and
add
roll
xchg
mov
add
push
and
roll
roll
rorb
or
mov
rolb
rorl
add
rolb
inc
dec
jne
sub
notl
cltd
jg,pt
add
add
and
movl
roll
xchg
mov
sub
negb
inc
dec
jne
sub
rolw
fiaddl
add
add
nop
mov
test
add
add
leave
lcall
mov
inc
and
sub
inc
and
cmc
or
in
cmp
mov
add
negb
inc
dec
jne
sub
push
and
movl
movb
rorb
or
mov
add
incb
inc
dec
jne
sub
xorw
jb
sub
mov
xorb
inc
dec
jne
sub
movb
movl
add
mov
mov
xor
add
popfw
jmp
aas
mov
cmp
xchg
mov
sub
push
xor
mov
mov
mov
mov
cmovl
cmovb
mov
shr
xchg
xor
movzbl
test
rcl
cld
mov
add
add
roll
and
mov
roll
rolb
or
movb
rorl
add
ret
sub
xchg
mov
call
rorl
rolb
mov
mov
popl
mov
mov
sub
xor
movl
movb
xor
mov
rorl
mov
xor
mov
js
cmove
lea
arpl
test
sub
xchg
cld
push
and
movb
or
rorb
rolb
add
and
add
pop
mov
movb
mov
call
push
popl
add
xchg
mov
sub
neg
xor
cmovno
sbb
lea
xor
test
lea
arpl
cmp
cmp
arpl
mov
xchg
and
lea
mov
mov
dec
cmovb
cld
cld
rorl
rorb
xor
rorl
mov
xor
movb
xor
mov
add
mov
or
add
cmp
jne
call
push
popl
xor
call
push
popl
add
arpl
lea
arpl
xor
jns
mov
xchg
mov
push
pop
push
pop
xchg
cmovs
test
push
pop
mov
inc
push
pop
inc
movzbl
mov
cld
add
mov
pop
pop
sub
xchg
mov
push
or
lea
cmovne
push
pop
inc
lea
xchg
arpl
cmovno
cmc
cmp
lea
inc
cld
add
xchg
mov
xchg
mov
add
pop
movb
movb
mov
jmp
push
mov
and
inc
push
nop
mov
decl
dec
and
sub
push
add
push
rorl
movl
rorb
xchg
mov
sub
add
roll
mov
mov
sub
xor
roll
roll
roll
xor
roll
xor
mov
bndstx
ret
call
roll
roll
mov
add
mov
xchg
xor
jb
call
addr16
push
mov
mov
btr
arpl
pop
pop
xchg
mov
mov
inc
xadd
not
cmp
inc
xor
lea
xchg
cmovb
cld
push
rorb
rorb
mov
pop
or
add
mov
add
call
rorb
rorl
sub
xor
rorl
rorb
mov
xor
movb
rorb
mov
xor
add
mov
sub
rorl
roll
sub
xor
roll
xor
mov
rorl
movl
xor
push
push
xchg
mov
add
xor
add
xor
add
sub
add
xor
mov
ja
xor
xor
push
pop
mov
mov
add
cmp
mov
cmp
verw
not
not
std
test
movzwl
cld
mov
xor
add
and
rorl
or
movb
movb
roll
add
call
rorl
rorl
rorl
call
push
popl
add
push
rolb
mov
sub
xor
movb
xor
movb
xor
mov
add
mov
add
sub
movl
mov
sub
push
push
push
mov
xchg
mov
add
or
add
xor
add
sub
movb
rorb
sub
xor
rorl
xor
movb
xor
mov
add
jmp
and
jg
xchg
stos
mov
pushfw
rorb
rorl
mov
sub
xor
movb
rolb
xor
mov
xor
rorb
sub
xor
roll
rorl
roll
xor
rorl
xor
mov
sub
sub
xchg
mov
call
clc
leave
sti
cmc
inc
xchg
sub
std
push
mull
and
xchg
mov
nopl
rorl
add
add
mov
lcall
add
add
mov
lds
es
dec
jne
sub
xorl
rcrl
mov
add
add
add
decl
and
add
add
clc
mov
mov
or
add
xchg
notw
jle
and
add
mov
mov
jbe
xor
incl
jno
lock
sub
xchg
sub
sub
subl
mov
mov
add
add
mov
in
imul
subb
inc
dec
jne
gs
and
loope
test
loope
loop
loop
into
fisubrs
xchg
loope
loope
loop
loop
in
push
cmpsb
out
jg
lock
loop
loop
arpl
fdivs
add
add
jne
sub
rolb
notl
xchg
icebp
xchg
incl
add
roll
mov
mov
xchg
mov
sub
or
add
negb
inc
dec
jne
sub
movb
movl
rolb
roll
rorl
xchg
mov
sub
mov
add
add
popfw
jmp
popa
push
sub
mov
sub
mov
bt
xor
clc
dec
shrd
lea
test
adc
mov
inc
cld
mov
and
add
pop
add
call
push
popl
xor
call
push
popl
xor
mov
cmovl
bsr
mov
xchg
js
std
adc
cmp
mov
imul
xchg
cmovge
xor
sub
neg
inc
cld
add
mov
mov
or
add
add
sub
sub
dec
inc
add
add
push
jmp
or
pop
push
das
cmp
sbb
jmp
inc
out
aam
jb
jmp
inc
jns
jmp
pop
insb
xor
xchg
pop
add
and
outsb
setl
pop
add
add
lea
xor
jmp
pop
shlb
int3
adc
aas
add
sub
jmp
ror
into
out
cld
lea
pushfw
push
and
add
mov
roll
rorb
roll
sub
xor
mov
mov
xor
rorl
xor
mov
add
sub
popl
call
jns
sbb
enter
push
sub
mov
xor
add
pushfw
mov
sub
call
push
popl
or
call
repnz
mov
pop
rorb
xchg
mov
sub
rolb
pop
pop
loop
xor
pop
gs
dec
loope
addw
jbe
add
mov
subb
inc
dec
jne
adc
mov
xchg
xchg
mov
jge
popf
aad
adc
push
popf
aad
adc
test
push
jge
jo
fimuls
sbb
sub
add
push
push
mov
movb
xchg
mov
sub
and
add
xorb
inc
dec
jne
cmpsl
cmpsl
cmpsl
mov
fstpt
pop
pop
pop
fisttps
int3
cld
pop
pop
pop
pop
fstps
pushf
pop
rol
cld
movsb
cmpsl
jmp
subb
xor
mov
rolb
and
call
mov
incl
and
decl
inc
dec
and
inc
movl
xor
mov
movb
mov
xor
mov
xorb
inc
dec
jne
sub
push
mov
add
add
xorb
inc
dec
jne
sub
movb
movl
mov
xor
rorb
roll
xor
rorl
mov
movl
xor
mov
add
and
roll
or
rorb
movl
mov
add
popfw
jmp
push
movzbl
call
push
popl
xor
sub
xchg
push
and
rolb
rorb
rorl
or
rorl
mov
mov
add
or
add
sub
test
mov
arpl
sbb
inc
cld
mov
add
add
xchg
mov
push
sub
sub
lea
dec
sub
push
jmp
or
add
mov
push
and
fstps
jmp
fwait
cmp
jbe
in
jmp
add
push
dec
dec
outsl
jl
pop
mov
es
pushl
push
add
rorl
sub
xor
movl
xor
movl
movb
rorl
xor
mov
add
sub
bsr
xchg
adc
cld
sub
mov
xchg
mov
add
pushl
xchg
lea
add
push
push
or
mov
mov
xchg
or
xor
lea
mov
imul
cld
mov
xor
add
xchg
mov
add
push
pushfw
push
xor
rorb
rorl
roll
sub
xor
rorb
movl
movl
xor
rorl
movl
xor
mov
add
add
sub
call
adcb
sub
sub
inc
and
scas
xor
mov
xor
rorl
xor
mov
add
notw
or
add
cltd
arpl
mov
push
call
mov
fildll
inc
add
xchg
mov
addw
repnz
xchg
sub
add
aas
jle
add
add
add
add
sbb
add
rolb
inc
dec
jne
sbb
jg
lds
add
inc
scas
faddp
push
cltd
in
repnz
add
sbb
add
or
sbb
add
mov
mov
pop
pop
inc
hlt
xchg
add
add
sbbl
call
push
xchg
loopne
iret
add
add
xchg
aam
add
or
sbb
push
jp
jae
scas
dec
sbb
or
lcall
pop
pop
mov
add
add
rolb
inc
dec
jne
xor
fdivs
cmp
jmp
add
jp
test
pushl
nop
test
ljmp
xchg
xchg
add
add
jo
or
jb
and
add
rorb
rolb
mov
or
rorl
rorb
rolb
add
addb
inc
dec
jne
sub
movb
movl
push
xchg
mov
add
add
add
mov
rorb
rorb
xchg
mov
sub
popfw
jmp
pop
loope
les
jns
push
ret
pushfw
push
add
roll
sub
xor
roll
roll
xor
rorb
mov
xor
pop
sub
call
adc
hlt
add
push
lahf
and
add
mov
decl
inc
and
pop
xor
rorl
mov
xor
rorb
xor
mov
add
pushfw
call
movl
and
roll
roll
or
mov
roll
rorl
call
push
popl
or
call
cltd
in
jecxz
mov
adc
out
jg
rorl
movb
roll
roll
xchg
mov
sub
notb
cltd
notl
cltd
jle
push
add
add
mull
xchg
ror
into
out
cld
test
or
jmp
add
addl
jle
sub
mov
sbb
xlat
les
jmp
cs
pop
gs
dec
loope
hlt
sbb
and
mov
or
mov
roll
movl
add
xorb
inc
dec
jne
mov
xor
xor
test
xor
xor
inc
shll
jno
mov
jbe
fadds
clc
fwait
repnz
xchg
addr16
shll
or
mov
add
add
pop
fnstsw
xchg
fsubr
cmc
mov
out
popa
adc
sbb
ljmp
cltd
test
and
in
add
sub
outsl
jl
pop
mov
es
mov
cmpb
jmp
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
scas
push
add
add
aad
inc
inc
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
shlb
outsb
setl
inc
pop
xor
shlb
push
jmp
dec
adc
div
fs
xchg
ror
into
out
cld
test
or
add
cmp
jle
sub
mov
sbb
xlat
les
movl
xchg
mov
sub
rorb
inc
dec
jne
pop
fnstsw
add
xor
shr
add
add
lods
mov
xlat
pusha
mov
mov
mov
test
jns
xor
dec
test
in
xor
fldcw
ja
xlat
pop
bound
or
xlat
out
inc
data16
fstpl
cmp
push
adc
punpckhwd
sahf
jg
xchg
stos
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
jmp
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
aad
es
clc
shll
aaa
movsb
or
push
das
jmp
cmp
jmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
jmp
in
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
dec
add
xchg
mov
decb
inc
dec
jne
test
dec
xorb
add
add
sbb
add
mov
lret
add
mov
rcr
add
mov
add
add
dec
adc
std
push
jge
jp
sbb
jns
jo
sarb
push
dec
loope
jns
jns
test
jns
jns
cmp
cli
cmp
incb
inc
dec
jne
sub
lds
call
incb
incl
incl
decb
mov
and
add
popfw
addb
dec
or
mov
add
add
jne
sub
notw
xchg
hlt
rorl
xor
movb
xor
rorb
xor
mov
add
rolb
inc
dec
jne
sub
movb
movl
mov
add
mov
mov
add
popfw
jmp
pop
push
xorb
mov
decl
incl
sldt
add
mov
lods
int
mov
std
std
rorl
xchg
mov
sub
xorl
cmp
cmpsb
rol
cmp
add
out
int
inc
add
add
out
dec
and
xor
inc
and
subl
add
or
push
or
call
jle
les
add
xchg
mov
subw
call
cmpsl
call
inc
and
roll
mov
rorl
xor
mov
rolb
rolb
xor
roll
xor
mov
add
decb
inc
dec
jne
sub
add
add
xchg
add
mov
inc
mov
out
mov
add
imul
add
add
add
add
add
inc
dec
jne
mov
and
xchg
cmpsl
and
test
and
mov
pop
push
mov
and
and
das
movsl
adc
pop
pop
sahf
xor
pop
pop
pop
lahf
jno
pop
pop
pop
leave
arpl
pop
dec
xchg
outsb
mov
pop
mov
out
sahf
pop
lods
inc
dec
in
or
icebp
pop
xor
pop
xor
xlat
push
stc
cmp
loop
pushf
lahf
jle
add
add
push
jmp
ljmp
lea
nop
mov
inc
lcall
cmpsl
push
std
repnz
sar
pop
xchg
add
sub
xor
add
add
sub
add
jmp
sbb
cli
stos
or
push
and
fstps
pop
mov
pop
mov
add
add
sub
add
sub
nopl
bndldx
xor
xchg
add
xchg
xor
xor
roll
jmp
inc
mov
mov
xchg
add
cwtl
rorb
add
nop
roll
out
int
sti
add
add
imul
scas
or
add
inc
les
sub
add
bound
push
push
mov
movl
xchg
mov
sub
or
add
negb
inc
dec
jne
jg
scas
add
add
jp
add
add
cmp
add
add
incb
add
mov
jl
pop
add
add
sub
cld
fsubrl
mov
cmp
mov
jl
add
add
cld
fdivrl
jl
or
add
and
mov
or
cld
fmull
add
add
mov
or
add
popfw
subl
dec
ljmp
add
add
popl
xor
push
xor
call
nop
aaa
test
roll
cmpsl
ljmp
add
add
mov
add
xor
add
xor
add
subw
push
dec
cmp
add
jl
add
add
aaa
movsb
jmp
or
adc
push
das
cmp
or
sbb
inc
out
aam
jb
jmp
inc
jns
pop
insb
xor
xchg
jmp
pop
jmp
add
and
call
push
mov
pop
lea
jmp
inc
jmp
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
aam
sub
mov
sbb
xlat
les
cs
pop
addl
xor
jmp
mov
negb
inc
dec
jne
jge
leave
adcb
add
adc
add
add
jne
pop
add
add
jge
cld
cmpb
add
mov
add
add
sbbl
jmp
jb
jb
stos
adc
in
nop
mov
dec
shll
lcall
cmc
sub
sahf
push
sbb
jo
xchg
mov
adc
adc
arpl
xlat
sahf
adc
mov
add
add
xchg
mov
jbe
add
add
mov
pusha
loopne
add
movl
and
push
rorl
rorl
xchg
mov
sub
notb
inc
dec
jne
sub
notl
cltd
or
add
push
and
mov
mov
or
rorb
rorb
add
add
add
incb
inc
dec
jne
sub
push
mov
add
xorb
inc
dec
jne
sub
movb
movl
push
movb
movl
and
rorl
mov
or
rolb
add
xor
add
movb
rorb
xor
rorl
rorb
xor
rorl
rolb
xor
mov
add
popfw
jmp
in
daa
push
add
sub
xchg
rorl
roll
roll
xor
mov
rorb
movb
xor
rorl
xor
mov
add
sub
xor
cmovae
push
pop
cmp
xor
arpl
xor
cmovge
jns
cmp
shl
mov
test
cld
rolb
sub
xor
rolb
movb
rorl
xor
mov
rorb
rorb
xor
mov
rorl
xchg
mov
sub
add
pushfw
push
call
push
popl
add
call
shlb
movsb
push
or
sbb
add
sub
mov
notb
xchg
adc
add
add
add
add
or
add
decb
inc
dec
jne
sub
subb
les
shlb
leave
add
stc
andb
add
ds
jno
mov
xchg
and
rolb
movb
or
movl
add
sub
call
roll
rorl
mov
call
fsts
les
mov
xor
decl
decb
inc
dec
jne
test
xor
add
xor
push
dec
imul
add
add
enter
out
jns
add
inc
and
mov
add
and
les
xor
add
xorb
inc
dec
jne
push
aas
popf
push
jg
pop
and
inc
pop
inc
inc
push
adc
push
sub
sub
pop
bound
sub
sub
dec
jns
xchg
cwtl
fsts
sub
sub
or
or
stos
or
sbb
out
stos
or
xlat
xlat
xlat
in
cmp
cmp
add
add
pop
add
add
mov
add
add
mov
add
add
hlt
mov
add
xlat
testb
add
add
repz
push
push
mov
out
xor
movsb
add
movsb
add
pop
outsb
mov
adc
jecxz
pop
jmp
mov
add
adc
bsr
pop
lods
jne
jnp
icebp
push
pop
lea
xchg
add
dec
push
jmp
mov
inc
je
adc
xor
test
inc
inc
and
jecxz
mov
incl
movsb
add
add
sub
xorb
inc
dec
jne
adc
push
adc
outsl
outsl
jns
adc
xchg
nop
nop
clc
nop
nop
nop
nop
sbb
nop
nop
nop
nop
adc
nop
nop
xchg
movsb
mov
push
xchg
nop
nop
nop
inc
adc
xor
inc
test
ret
rorl
xor
rorl
mov
xor
rorl
rorb
rorl
xor
mov
add
popfw
xchg
subl
jb
mov
add
xchg
out
rorl
sub
xor
roll
movb
rolb
xor
movl
roll
xor
mov
negb
inc
dec
jne
sub
xchg
addb
call
js
xchg
out
push
mov
and
add
and
add
incb
inc
dec
jne
sub
movb
movl
pop
and
rorl
rorl
mov
or
mov
add
popfw
jmp
lods
mull
call
push
popl
and
call
push
popl
add
call
inc
pop
mov
jb
lcall
xchg
mov
sub
addb
add
das
subb
cmpsb
or
ljmp
jmp
or
rorl
rorb
or
rolb
add
and
add
and
add
rorb
inc
dec
jne
sub
push
sub
mov
notb
inc
dec
jne
sub
push
xchg
mov
add
rorb
inc
dec
jne
sub
push
xchg
mov
add
addb
inc
dec
jne
sub
movb
movl
xchg
mov
add
mov
add
popfw
jmp
in
mov
and
sub
xchg
push
rorl
roll
movl
xor
movl
mov
roll
xor
mov
mov
rorb
xor
mov
add
and
add
sub
rorb
mov
mov
sub
xor
rorl
movb
xor
roll
mov
movb
xor
mov
push
pop
cmove
sub
xchg
mov
lea
verw
cmp
verw
rol
std
cld
mov
add
rorb
movl
movl
xor
movb
movl
movb
xor
rorl
xor
mov
add
cmp
jne
roll
sub
xor
movl
rorb
xor
rorl
xor
roll
xchg
mov
sub
sub
roll
rorl
sub
xor
roll
roll
xor
mov
xor
sub
mov
sub
popl
call
movl
mov
and
rorl
roll
mov
or
bt
ror
push
pop
jbe
mov
verw
test
verw
test
bts
xor
arpl
cmp
arpl
push
pop
inc
mov
inc
cmp
dec
ror
stc
cld
roll
rorl
mov
roll
rorb
rorb
xchg
mov
sub
mov
and
roll
or
rorb
add
push
sub
add
add
add
xchg
nopl
add
sub
push
mov
mov
mov
mov
mov
pop
xchg
pop
sub
add
call
push
popl
add
mov
add
xchg
mov
add
sub
rolb
rorb
mov
sub
xor
movl
xor
mov
xor
mov
push
push
add
mov
and
add
sub
and
roll
or
rorb
movb
add
add
mov
call
rorb
rorl
mov
push
add
not
jmp
arpl
cmovb
mov
mov
cmovnp
verw
sub
inc
cld
add
xchg
mov
rorb
rorl
xchg
mov
sub
add
nop
push
mov
mov
mov
pop
jmp
sbb
xlat
les
cs
pop
cmp
add
add
sbb
push
mov
pop
xchg
push
jmp
sbb
mov
ljmp
lea
nop
mov
or
cmpsw
push
jmp
std
repnz
sar
lahf
in
mov
mov
lea
add
add
sub
add
inc
add
pop
push
and
push
or
verw
dec
cmp
arpl
and
shl
arpl
bsr
dec
cmp
shr
push
pop
lea
arpl
arpl
lea
xor
xchg
mov
neg
cmp
rol
cld
add
xchg
mov
pop
mov
lea
xor
sub
sub
add
sub
sub
sub
ror
add
sub
inc
xchg
xchg
nopl
dec
jne
roll
jmp
andl
add
call
rorl
mov
sub
not
verw
xchg
mov
neg
sub
test
dec
mov
cld
cld
mov
xor
add
push
push
rorb
rorl
sub
xor
rorl
rorb
rolb
xor
rorl
xor
mov
and
add
or
add
push
pushfw
xchg
mov
sub
sub
xchg
mov
call
arpl
incb
push
std
lods
pop
sub
loopne
loop
inc
and
in
mov
call
mov
incl
and
call
mov
pushl
mov
cld
call
mov
inc
inc
and
mov
xor
mov
pushfw
call
push
popl
xor
push
call
or
push
add
xchg
mov
and
add
addw
ja
pop
aas
or
push
clc
shll
aaa
movsb
or
push
jmp
das
cmp
sbb
inc
out
aam
jb
inc
jns
jmp
pop
insb
xor
pop
mov
pop
add
and
pushf
movsl
jp
mov
inc
pop
jmp
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
notb
js
push
add
mov
negb
inc
dec
jne
jg
mov
xchg
sub
add
jge
add
inc
faddl
add
cmp
fmull
aas
mov
inc
faddl
add
js
fsubrl
sub
inc
faddl
add
ja
pop
add
add
add
inc
dec
jne
and
lds
call
ja
jmp
decl
jmp
xor
inc
mov
out
andl
rorl
mov
dec
and
sti
decb
incb
add
add
mov
and
and
jmp
addb
dec
mov
enter
jmp
sbb
add
xorb
inc
dec
jne
sub
movb
movl
add
mov
rorl
mov
rorl
and
rorl
rolb
or
mov
add
popfw
jmp
mov
insl
dec
xchg
xor
add
add
sbb
sbb
decl
add
xchg
xor
xchg
sub
sub
push
pushfw
push
and
call
push
popl
or
call
imul
or
fisubl
adc
sti
std
std
rorl
roll
xchg
mov
add
notl
jg
ret
incl
add
adc
add
decl
incb
inc
dec
jne
sub
addb
mov
mov
add
add
add
add
sbb
xorl
rorb
roll
movb
xchg
mov
sub
incb
inc
dec
jne
sub
rolb
test
movl
or
mov
roll
add
incb
inc
dec
jne
sub
push
add
mov
decb
inc
dec
jne
sub
subw
lds
lcall
add
pop
or
cmp
add
test
push
and
movsb
and
inc
mov
inc
movb
or
mov
roll
rorb
add
notb
inc
dec
jne
sub
movb
movl
movb
xor
movl
movb
rorl
xor
movl
xor
mov
add
rolb
xor
roll
rorl
xor
mov
mov
rorl
xor
mov
add
popfw
jmp
sbbl
decl
add
push
and
mov
rorb
sub
xor
rorl
rolb
rorl
xor
rolb
xor
mov
popl
nop
cmp
xor
rol
xchg
dec
cld
sub
mov
rorl
rolb
sub
xor
mov
xor
roll
roll
xor
mov
push
pushfw
call
push
popl
add
sub
mov
call
ljmp
jbe
fnsave
dec
and
rolb
sub
xor
mov
movb
xor
rorb
roll
xor
mov
subw
sub
rorw
cmpsl
sbb
movsb
add
add
push
call
arpl
cwtl
bound
jmp
daa
icebp
push
add
xchg
mov
xor
add
push
mov
or
add
rorb
inc
dec
jne
sbb
loop
push
dec
rolb
add
daa
sub
xchg
add
add
sbb
and
and
decl
out
lcall
mov
add
add
xchg
add
add
pushl
pop
insl
insl
insl
cwtl
jae
push
insl
insl
xlat
out
out
mov
mov
mov
ffree
lods
lods
lods
std
jge
insl
lods
lods
lods
negb
je
lods
lods
jmp
jnp
lods
lods
sti
pushl
inc
push
shrb
lods
lods
stos
cs
lods
lods
lods
out
idivl
das
xchg
inc
imul
incl
or
in
inc
dec
push
test
fistpll
cwtl
pop
imul
and
sbbb
xchg
loope
pop
cltd
adc
add
mov
or
add
jl
icebp
adc
insb
fnop
out
loopne
add
add
jne
jle
mov
cmp
add
add
cmp
add
add
jl
sti
je
pop
add
add
js
pop
jle
sti
lcall
std
std
ljmp
jle
sti
js
fildl
add
add
pop
cld
incl
add
dec
jne
sub
movb
movl
movl
xor
roll
roll
xor
rorl
xor
mov
add
rolb
mov
movb
mov
add
popfw
jmp
lods
sbb
inc
and
pop
mov
sub
mov
add
pop
call
mov
roll
mov
push
xchg
mov
add
sub
rorl
xchg
mov
sub
movb
movl
bndstx
mov
movb
rolb
roll
call
rolb
movb
and
rorl
or
push
and
roll
movb
or
rorb
movb
movl
add
sub
mov
sub
xor
rorl
rorl
movb
xor
roll
xor
mov
add
cmp
je
roll
nopl
roll
rorb
rorl
movb
call
push
popl
xor
mov
add
mov
xchg
mov
sub
xchg
mov
sub
push
rorb
rorb
rorl
rorb
xchg
mov
sub
sub
mov
or
add
movb
roll
rorb
bndldx
push
pushfw
xchg
mov
sub
xchg
mov
sub
call
mov
mov
or
push
jle
leave
out
outsl
pop
jno
incl
add
inc
mov
add
add
add
insb
add
sub
call
push
popl
add
add
mov
popl
sub
xchg
mov
call
mul
fistpl
pop
cmp
pop
jmp
insb
xor
xchg
pop
notw
jle
add
add
xchg
lea
xchg
jmp
mov
inc
pop
xor
shlb
int3
adc
add
add
mov
add
mulb
cmpb
push
add
add
mov
add
jmp
add
add
xor
mov
add
add
out
cld
test
or
jmp
add
addl
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
pusha
sbb
mov
js
mov
and
inc
push
nop
mov
xor
inc
lcall
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
fstps
xchg
stos
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
notb
adc
lods
jmp
jne
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
jmp
clc
shll
jmp
aaa
movsb
or
push
das
cmp
sbb
lock
sub
das
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
outsb
setl
inc
pop
xor
shlb
int3
adc
add
add
lcall
jne
out
dec
in
out
add
xchg
rolb
add
add
adc
add
negb
inc
dec
jne
jge
rcrl
add
outsl
dec
mov
add
or
add
add
fucomp
faddl
fcompl
cmp
add
add
and
decl
les
add
xor
add
addb
inc
dec
jne
mov
inc
or
or
sbb
xchg
pushf
lods
or
or
mov
or
cwtl
sub
or
dec
push
pop
cli
pop
pop
pop
xchg
jmp
add
test
mov
pop
pop
cmp
imul
repz
pop
add
add
add
addb
inc
dec
jne
mov
pop
in
jmp
push
push
or
lahf
in
push
push
push
fbld
pop
pop
mov
pop
cmpsb
mov
sbb
push
push
test
ret
sbb
push
push
mov
pop
stos
mov
push
test
pop
push
js
mov
ret
sbb
push
push
adc
pop
gs
adc
push
push
mov
add
xchg
add
add
outsb
stos
mov
add
rorb
inc
dec
jne
sub
movb
movl
roll
rorl
xor
roll
rolb
xor
movl
movb
xor
mov
add
xchg
mov
add
popfw
jmp
ds
mov
lods
mov
sub
xor
rorl
rorl
xor
rorl
xor
mov
sub
xchg
mov
push
pop
cld
cld
push
rorl
xchg
mov
sub
xor
add
pop
push
bndldx
mov
mov
roll
roll
add
push
add
add
mov
popl
push
push
mov
add
xor
add
sub
push
xchg
mov
add
xor
add
nopl
push
pushfw
call
rolb
movl
rorb
and
rorl
mov
roll
or
push
call
mov
inc
pushf
sti
or
sti
mov
rolb
mov
sub
xor
mov
mov
xor
mov
mov
rorb
xor
mov
xorb
jmp
data16
add
add
xchg
fwait
add
add
xchg
push
mov
xor
add
or
add
subb
inc
dec
jne
sub
addw
push
jae
mov
add
cltd
arpl
and
pushf
movsb
add
add
push
popl
push
call
xchg
jge
jg
mov
mov
enter
xchg
and
mov
or
movl
movl
add
jmp
cmpsl
push
std
repnz
sar
lahf
jmp
in
mov
mov
test
xor
imul
stos
or
push
and
fstps
xchg
stos
fwait
cmp
jbe
in
add
push
dec
dec
outsl
push
push
add
mov
xor
add
decb
inc
dec
jne
test
je
test
or
add
adc
cmp
add
mov
sub
add
add
add
testl
and
add
add
add
add
add
add
repnz
add
inc
imul
dec
push
inc
push
push
push
sub
or
push
scas
scas
scas
jl
mov
push
push
imul
inc
cld
sub
mov
push
push
outsl
sub
mov
mov
leave
mov
xor
push
push
outsl
and
mov
push
push
push
lahf
xor
daa
xor
push
jmp
push
pop
rolb
inc
dec
jne
sub
movb
movl
push
and
rolb
roll
or
roll
add
and
add
push
roll
rorb
sub
xor
rorb
rorl
xor
roll
movl
xor
mov
add
add
popfw
jmp
or
cmp
imul
rorb
rolb
sub
xor
rorl
movb
xor
movl
roll
roll
xor
mov
call
cmp
sub
jmp
in
add
add
mov
rorw
push
mov
add
add
add
add
dec
and
rorb
rorl
sub
xor
roll
xor
movl
xor
mov
or
add
add
add
decb
inc
dec
jne
sub
movb
movl
rorb
xchg
mov
sub
mov
xor
movl
mov
xor
rorl
xor
mov
add
popfw
jmp
push
add
mov
xor
pushf
xchg
xchg
xchg
lea
sub
sub
push
pushfw
call
push
popl
and
sub
mov
call
mov
inc
pushf
insl
movsb
jbe
or
hlt
int
add
mov
or
add
xorl
xor
cwtl
lock
sub
xor
roll
mov
roll
xor
mov
roll
xor
mov
negb
inc
dec
jne
sub
nopl
push
add
xchg
mov
decb
inc
dec
jne
sub
xorl
jge
ljmp
roll
xor
rorb
rorb
xor
mov
add
xorb
inc
dec
jne
sub
subl
lods
push
xor
add
and
xchg
or
add
xchg
lock
add
ljmp
add
add
xor
add
xor
add
and
add
xorb
inc
dec
jne
sub
subw
sbb
xor
rorb
roll
xor
rorl
roll
xor
mov
add
addb
inc
dec
jne
sub
movb
movl
mov
and
add
mov
and
add
popfw
jmp
das
lret
imul
xor
shlb
int3
adc
call
rorl
rolb
roll
rorl
mov
movb
call
push
popl
add
push
pop
add
add
xchg
mov
push
xor
push
mov
and
add
sub
push
add
mov
add
add
call
pushfw
call
mov
rorl
movl
mov
call
push
popl
and
call
testl
inc
icebp
pop
pop
pop
sub
mov
addw
arpl
sub
add
xchg
lock
incl
add
sub
mov
add
add
subb
inc
dec
jne
sub
movb
movl
push
add
xchg
mov
add
add
add
mov
popfw
jmp
sbb
arpl
nop
add
sub
push
mov
mov
mov
pop
push
mov
mov
mov
pop
jmp
cmp
dec
loope
hlt
sbb
fsubrp
or
ljmp
lea
add
dec
nopl
add
sub
sub
sub
mov
call
push
popl
and
rolb
rorl
sub
xor
movb
xor
rorb
roll
xor
mov
xor
ror
cmp
mov
movzbl
xor
adc
je
test
xchg
xor
inc
cld
push
and
rorl
rorl
rorb
or
movl
add
and
add
add
xchg
mov
add
push
xor
sub
xchg
mov
xor
btc
jmp
mov
stc
shrd
imul
cld
mov
roll
rorl
xor
rorb
roll
xor
mov
roll
roll
xor
mov
add
xchg
mov
add
mov
nopl
lea
add
push
mov
add
push
pop
add
add
push
and
mov
sub
and
rorl
or
rorl
add
rorl
sub
add
mov
mov
add
mov
rolb
xor
rolb
mov
roll
xor
mov
rorl
roll
xor
mov
add
nopl
push
jmp
jg
xchg
stos
fwait
jmp
jbe
in
add
push
dec
dec
lea
lea
pop
dec
add
sub
sub
push
jmp
mov
or
icebp
pop
mov
sub
sub
jmp
sub
jmp
dec
sub
sub
add
sub
xchg
nopl
xor
jmp
aaa
sub
sub
push
jmp
or
das
cmp
sbb
inc
out
aam
jb
jmp
inc
jns
pop
insb
xor
pop
mov
pop
add
and
outsb
setl
inc
jmp
pop
xor
shlb
pop
add
add
sub
add
xchg
sub
sub
mov
rorl
rorl
rorb
push
push
push
roll
mov
xchg
mov
sub
add
add
add
add
mov
sub
jmp
call
rorl
mov
mov
nopl
xor
jmp
addl
jle
roll
mov
sub
add
nop
add
pushfw
sub
mov
push
or
call
or
jb
cltd
cltd
cltd
roll
movb
mov
xchg
mov
sub
push
add
xchg
mov
xorb
inc
dec
jne
sub
rolw
push
push
push
inc
mov
add
pop
aad
int
xor
xor
add
decb
inc
dec
jne
sub
movb
movl
mov
rolb
xor
mov
xor
rolb
rorl
xor
mov
add
pop
popfw
jmp
icebp
xchg
jmp
sub
xchg
push
add
xchg
mov
xor
add
sub
push
pop
add
add
mov
call
mov
rorl
and
movl
rorb
or
push
roll
rorl
xor
rorb
mov
rorb
xor
roll
xor
mov
add
sub
rorl
xor
mov
movb
movl
xor
roll
xor
mov
add
dec
jne
call
push
popl
and
push
verw
cmovnp
test
not
je
xor
dec
inc
xor
xchg
mov
verw
xor
cld
xchg
mov
add
xchg
mov
add
push
xchg
sub
add
lea
jmp
nop
call
rorl
mov
push
add
mov
sub
mov
xor
add
sub
xchg
mov
push
add
xchg
mov
add
push
rorb
sub
xor
roll
roll
rorb
xor
rorl
mov
mov
xor
mov
or
add
sub
push
and
push
mov
and
add
add
xchg
mov
add
push
pushfw
call
push
popl
or
push
call
std
add
and
pushf
and
call
mov
ljmp
incl
movsb
add
add
add
and
add
xorw
mov
add
test
and
inc
dec
and
in
rorl
mov
add
subb
inc
dec
jne
sub
xorb
inc
xchg
test
add
or
incl
add
add
dec
and
add
add
add
add
inc
dec
jne
sub
nopl
notb
ds
add
add
or
addb
xor
add
test
mov
add
decb
inc
dec
jne
sub
subw
cmpsb
or
nopl
xorl
pop
cmp
test
decl
add
roll
add
subb
inc
dec
jne
sub
push
xchg
mov
add
rolb
inc
dec
jne
sub
movb
movl
and
rorl
rorb
movl
or
roll
add
add
mov
popfw
jmp
clc
xchg
psubsb
lods
std
popf
mov
mov
sub
xor
mov
roll
roll
xor
rorl
rolb
roll
xor
push
sub
mov
add
add
sub
push
add
xchg
mov
xchg
push
pop
lea
arpl
xor
rcr
xchg
arpl
je
mov
bsf
jb
dec
not
std
rol
rcr
verw
xor
mov
push
pop
cld
sbb
dec
dec
cld
push
add
mov
xor
add
add
mov
push
pushfw
call
push
popl
or
sub
mov
call
out
aad
test
jb
mov
ret
ret
ret
add
mov
notb
cltd
subl
aaa
add
add
xor
mov
add
inc
add
add
orl
xchg
push
add
add
mov
add
addb
inc
dec
jne
sub
xorl
push
and
add
incl
add
add
add
add
or
jne
sub
push
mov
xchg
mov
sub
decb
inc
dec
jne
sub
movb
movl
xchg
mov
add
pop
popfw
jmp
cli
xor
inc
bound
jge
in
add
add
xchg
rorl
xor
rorl
rorb
mov
xor
rorl
xor
mov
add
sub
call
rolb
movb
mov
movzbl
jb
mov
btr
mov
mov
test
imul
cmp
verw
rcr
test
push
pop
xor
mov
inc
cld
push
mov
xor
add
xor
add
rorl
rorl
push
add
xchg
mov
and
add
push
nopl
call
roll
and
movb
or
push
rorb
movl
xor
rorb
mov
xor
rorl
roll
rorb
xor
mov
add
sub
mov
mov
rorb
xor
mov
mov
xor
mov
movb
rorb
xor
mov
add
call
roll
rolb
mov
push
add
xchg
mov
add
mov
add
push
push
xchg
mov
add
add
and
mov
rolb
or
rorl
add
sub
push
nopl
sub
sub
lea
call
rorl
jmp
push
push
clc
shll
aaa
movsb
or
adc
dec
and
or
test
decl
bound
movb
nopl
call
inc
dec
xchg
add
mov
roll
rolb
rorl
rorl
nopl
call
jmp
jns
pop
insb
xor
xchg
pop
nopl
nopl
xor
nopl
mov
rolb
movl
rorl
push
add
push
mov
add
add
sub
and
roll
mov
or
roll
add
add
rorl
rorl
rorl
rorb
rorl
rolb
roll
roll
rorl
mov
rolb
rorb
bndldx
cmp
je
xchg
inc
dec
xchg
lea
lea
mov
call
push
popl
or
rolb
rolb
sub
xor
rorb
rorl
xor
rorb
roll
xor
add
mov
sub
jbe
dec
xor
lea
verw
dec
push
pop
cmovb
shl
test
mov
neg
clc
lea
nop
cld
sub
mov
movl
movl
add
xchg
mov
mov
call
push
popl
and
push
rorb
xor
rorl
rorl
rorb
xor
rorb
roll
mov
xor
mov
add
sub
mov
add
sub
xchg
mov
mov
add
mov
xor
add
mov
sub
xchg
mov
xor
add
sub
call
mov
movb
movb
and
rorl
rorl
rorl
or
arpl
push
pop
cmp
cmova
mov
push
pop
imul
stc
cld
rorl
xor
movl
xor
roll
xor
mov
add
movl
sub
xor
roll
roll
mov
xor
mov
rorb
mov
xor
mov
push
pushfw
call
push
popl
xor
call
mov
rolb
mov
and
rorl
rolb
or
call
stos
mov
cmc
mov
pop
xor
jp
std
call
pop
ljmp
add
add
add
decl
sbb
add
notw
xchg
in
dec
and
iret
xchg
mov
sub
notb
inc
dec
jne
sub
movb
movl
pop
push
mov
sub
xor
movl
xor
movb
xor
mov
add
add
popfw
jmp
pop
mov
aas
sub
add
add
sub
xchg
add
add
add
push
or
sub
mov
mov
rol
arpl
not
arpl
cld
and
roll
roll
rolb
or
mov
rorl
movb
add
xchg
mov
add
push
bndldx
add
add
add
nopl
mov
mov
sub
call
push
popl
and
arpl
mov
test
cmovnp
push
pop
xchg
rol
jne
not
lea
mov
push
pop
nop
cld
cld
sub
mov
push
rolb
roll
roll
sub
mov
and
add
popl
movb
sub
xor
roll
rorb
mov
xor
roll
roll
movl
xor
and
rorl
rorl
rorb
or
rorl
rorb
add
sub
xchg
mov
sub
cmp
mov
movzwl
dec
adc
test
cld
push
rorl
movb
movb
xor
rorb
rorb
movb
xor
movb
rolb
movl
xor
mov
add
add
add
add
mov
jmp
push
push
or
xchg
bt
jns
bsr
sub
inc
push
pop
test
imul
neg
mov
shl
cld
push
mov
and
add
or
add
pop
mov
xchg
xor
push
jmp
and
movb
fstps
xchg
stos
fwait
cmp
jbe
in
add
push
jmp
dec
pop
push
jmp
jl
pop
mov
es
or
mov
or
icebp
jmp
push
inc
sub
scas
dec
fsubr
or
popa
xchg
popf
adc
loopne
jmp
pop
pop
push
jmp
push
push
clc
shr
pop
ss
movsb
or
wbinvd
push
das
cmp
sbb
inc
out
aam
jb
pop
bndstx
push
mov
mov
mov
mov
mov
pop
add
sub
xchg
cmp
jne
roll
mov
add
mov
push
rolb
sub
xor
roll
xor
movb
xor
mov
sub
mov
and
add
push
push
mov
xor
add
add
sub
mov
sub
mov
push
movl
rorb
rorl
xchg
mov
sub
add
mov
add
movl
mov
roll
call
push
popl
add
mov
sub
push
add
xchg
mov
and
add
mov
jmp
pop
xor
mov
push
xor
call
roll
mov
call
bound
dec
dec
jbe
cmp
push
pop
push
pop
cmp
xor
dec
push
mov
pop
pop
call
fwait
xor
push
mov
js
inc
xor
pop
pop
lea
rcr
cld
rorb
rorb
rorb
sub
xor
roll
mov
xor
roll
rorl
movb
xor
mov
push
xchg
mov
add
and
add
add
call
movl
rorl
mov
movl
movl
rolb
push
push
pop
test
verw
repnz
not
mov
movsbl
cmp
cld
add
xchg
mov
mov
add
mov
movl
roll
sub
xor
roll
xor
mov
xor
mov
rolb
rolb
sub
xor
rorb
xor
rorl
rorl
xor
roll
mov
movl
sub
xor
rorl
xor
rorl
xor
mov
sub
mov
sub
popl
neg
mov
xchg
push
pop
xadd
mov
mov
jmp
not
xchg
xchg
push
pop
dec
push
pop
shr
push
pop
mov
or
test
cld
pop
push
rolb
rorl
xchg
mov
sub
and
add
sub
xor
add
sub
xchg
lea
sub
sub
xchg
sub
add
push
call
rolb
rorl
rorl
mov
mov
sub
cmovs
arpl
not
test
or
rcl
imul
arpl
verw
not
dec
jmp
cmp
cmp
stc
xor
xor
mov
push
pop
xor
cmc
cmp
test
mov
cmp
test
cld
mov
rolb
sub
xor
rorl
mov
rolb
xor
rorb
roll
xor
mov
push
mov
xchg
mov
sub
or
add
pop
lea
xor
lea
add
xchg
mov
sub
rorb
movl
push
bts
btc
verw
mov
xchg
je
xor
arpl
cmp
cmovnp
jno
lea
xor
inc
mov
arpl
cmovns
inc
xchg
verw
repz
push
pop
neg
dec
cld
mov
roll
roll
mov
add
mov
xor
add
add
push
and
push
roll
roll
rorb
xchg
mov
sub
sub
movb
xor
roll
rorl
xor
mov
rolb
movb
xor
mov
add
add
push
pushfw
call
push
popl
or
push
or
call
cmp
push
cld
in
pop
addb
add
test
call
incl
movsb
add
add
sub
roll
outsl
xor
movsb
add
add
add
negb
inc
dec
jne
sub
movb
movl
xchg
mov
add
mov
add
popfw
jmp
sub
add
add
or
xchg
push
pop
imul
adc
sub
xchg
verw
xchg
shr
mov
push
pop
mov
test
cmp
xor
cld
push
mov
add
or
add
rorl
xor
mov
roll
movl
xor
movl
movl
xor
mov
add
sub
push
xor
mov
add
push
sub
mov
xor
add
add
mov
mov
sub
add
mov
mov
pushfw
push
xor
call
push
popl
or
call
test
cwtl
fdivrs
call
mov
pushl
or
movl
rorb
rorl
xor
rolb
roll
xor
mov
add
xorl
std
loop
je
add
add
add
rolb
inc
dec
jne
sub
roll
sbb
or
add
insl
gs
dec
add
mov
and
mov
add
add
add
notb
inc
dec
jne
sub
movb
movl
rorl
rolb
sub
xor
rorb
xor
movl
mov
movb
xor
mov
roll
mov
add
add
popfw
jmp
test
pushfw
call
push
popl
xor
push
or
call
jl
or
fstp
mov
fnstenv
adc
jecxz
or
roll
mov
or
movb
add
notb
aas
cmpl
notl
jg
mov
add
fnstcw
pushf
sub
mov
call
rorb
mov
and
rorl
or
call
shrb
push
mov
add
and
add
push
and
mov
rorl
or
mov
add
subb
inc
dec
jne
ret
inc
inc
inc
enter
xchg
inc
inc
inc
dec
rcrb
mov
inc
test
ret
inc
inc
inc
int3
std
in
inc
inc
inc
inc
jge
les
les
inc
add
inc
dec
jne
sub
add
add
or
dec
add
dec
dec
jo
xchg
mov
outsl
pop
add
add
mov
daa
push
add
adc
and
add
add
popf
and
enter
add
add
lds
add
inc
push
adc
jle
lahf
cmp
add
add
cmp
add
add
jae
sbb
add
cld
jnp,pt
or
jle
add
add
into
inc
fildl
add
add
mov
fstpt
int3
inc
fildl
add
add
jnp
or
add
inc
les
add
add
jbe
pop
add
add
popfw
notl
or
incb
add
add
sti
cwtl
cmp
pop
in
and
add
add
add
cltd
or
or
add
add
decl
add
call
push
popl
or
call
inc
shll
inc
mov
push
and
mov
movb
rorb
or
roll
roll
add
rolb
inc
dec
jne
shl
add
add
test
add
lret
inc
add
les
add
add
shlb
add
xchg
add
shlb
add
jnp
mov
and
ret
mov
add
cmp
add
adc
call
push
loopne
aad
mov
add
gs
pop
repz
les
out
fdivrs
mov
xchg
lret
lds
jmp
fimuls
pop
xchg
icebp
fs
xchg
icebp
sub
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
fucomip
add
addl
jle
sub
mov
push
mov
add
negb
inc
dec
jne
jge
movsb
adcb
add
call
add
jg
cmp
fnstenv
add
add
lea
cmp
outsb
adc
and
sub
and
fdivl
lods
jo
jb
inc
mov
lcall
pop
ret
dec
adc
iret
ljmp
xor
imul
stos
jmp
or
push
jmp
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
jmp
mov
es
mov
cmpb
jnp
icebp
notw
adc
push
inc
sub
mov
sub
inc
mov
shll
lret
fcompl
push
jmp
popa
xchg
popf
adc
loopne
pop
aas
jmp
or
or
pop
clc
shll
aaa
movsb
or
sbb
shl
sub
add
sub
subb
xchg
add
add
pop
scas
aaa
add
add
ds
add
xchg
mov
addb
inc
dec
jne
shrb
aas
aas
aas
add
sub
sbb
ds
add
ret
jecxz
ds
ds
arpl
lret
arpl
ds
arpl
ds
jb
arpl
ret
arpl
ds
ret
jnp
enter
aas
aas
aas
rol
add
add
push
mov
xor
add
incb
inc
dec
jne
sub
rolw
cmp
or
pushfw
push
xor
xchg
mov
sub
call
loopne
sbb
jo
leave
shll
test
les
and
decl
incl
add
lahf
std
add
add
sbb
rorl
rolb
or
roll
mov
rorb
add
or
add
incb
inc
dec
jne
and
imul
add
and
std
xchg
dec
push
test
incb
test
add
add
xchg
lods
inc
test
add
mov
cmpsl
and
dec
dec
add
add
call
rolb
add
nop
movb
add
nop
int3
add
add
jmp
sbb
add
notl
inc
dec
adc
jg
faddl
add
cmp
push
cmp
add
add
jle
add
add
je
pop
add
add
add
mov
popfw
push
and
rorb
roll
rorb
or
rorl
rorl
roll
add
subb
inc
dec
jne
sub
xorl
popa
xor
push
add
pop
add
add
and
decl
decl
adc
add
rolb
inc
dec
jne
sub
movb
movl
add
mov
xchg
mov
add
popfw
jmp
je
ret
dec
inc
pop
add
xchg
xor
xchg
add
nopl
jmp
xchg
ror
into
out
nop
jmp
bndldx
call
rorb
mov
rolb
and
roll
rorl
or
mov
sub
push
and
roll
or
rorl
rolb
roll
add
add
add
add
jmp
add
jle
sub
mov
sbb
xlat
les
and
inc
dec
and
cs
xor
movb
rorb
roll
xor
rolb
mov
rorl
xor
mov
mov
add
rolb
xor
rorl
mov
movl
xor
rolb
movl
xor
mov
add
mov
rorb
sub
xor
mov
roll
xor
movl
xor
mov
push
add
xchg
mov
sub
mov
mov
xor
rorl
rorl
xor
rorl
xor
mov
add
push
add
push
mov
sub
sub
mov
push
add
sub
push
jmp
js
mov
and
inc
push
nop
jmp
mov
lret
test
cmpsw
push
std
repnz
jmp
shr
stc
ds
in
mov
mov
jmp
test
jmp
xor
imul
stos
or
jmp
push
and
fstps
ljmp
fwait
icebp
in
sub
lea
lea
push
pushfw
mov
rolb
roll
sub
xor
mov
xor
rorl
rorb
mov
xor
mov
call
mov
roll
rolb
mov
call
out
test
add
add
push
and
rolb
rorl
rorb
or
mov
rolb
roll
add
or
add
notl
cltd
ja,pt
add
add
fwait
mov
add
mov
push
add
mov
decb
inc
dec
jne
sub
nopl
roll
mov
rolb
add
mov
push
add
mov
negb
inc
dec
jne
sub
movb
movl
push
mov
add
add
add
push
push
mov
add
add
add
add
add
popfw
jmp
in
add
add
or
add
mov
btc
dec
xor
xor
cmp
lea
cmp
and
mov
cmp
xchg
xchg
cld
rolb
sub
xor
rorl
xor
rorl
xor
mov
pop
sub
pushfw
sub
xchg
mov
sub
xchg
mov
call
aas
inc
mov
ljmp
and
mov
les
test
pop
filds
lods
fcmovne
xorb
hlt
test
add
add
or
push
and
jnp
lods
and
incl
movsb
add
add
sub
negb
inc
dec
jne
sub
notb
xchg
or
test
lcall
test
push
cs
lahf
sub
xor
movl
xor
rolb
movl
movb
xor
mov
negb
inc
dec
jne
sub
subb
pop
nop
loop
add
xchg
imulb
mov
mov
or
movb
xor
rorl
mov
xor
mov
add
negb
inc
dec
jne
sub
addl
cmp
rcr
test
jmp
sub
test
adc
mov
rorl
rorb
xor
rorl
rorl
xor
mov
push
call
nop
aaa
test
roll
cmpsl
ljmp
add
add
and
mov
mov
rorb
or
roll
rorl
add
decb
inc
dec
jne
sub
add
add
xorl
cmpl
add
movl
and
ret
enter
push
test
std
xor
add
test
imul
and
and
xor
and
inc
inc
and
clc
xor
mov
sub
mov
popfw
push
rorb
mov
and
add
notb
inc
dec
jne
sub
movb
movl
rorb
rorb
movb
add
mov
add
mov
popfw
jmp
xor
pop
push
test
testl
push
rorb
push
and
mov
add
add
xchg
mov
sub
mov
mov
mov
movb
add
call
rolb
movl
movl
mov
push
xchg
mov
add
sub
mov
add
add
mov
rorl
rorl
call
push
popl
and
push
rorl
rolb
xchg
mov
sub
add
mov
add
rorb
movl
sub
xor
movl
rorb
xor
rorb
mov
xor
add
xchg
mov
sub
push
rorb
mov
movb
xchg
mov
sub
sub
add
mov
push
push
jmp
jmp
jp
jmp
mov
inc
pop
xor
shlb
int3
jmp
adc
div
fs
xchg
pop
xor
lea
push
jmp
or
add
addl
jle
sub
pop
pop
nopl
add
add
add
jmp
xor
cmp
pop
add
lea
push
jmp
xchg
arpl
xchg
nop
nopl
push
roll
sub
xor
movl
movb
mov
xor
movb
xor
mov
sub
xchg
mov
xor
inc
cld
sub
mov
mov
or
add
pop
sub
add
xor
pushfw
call
push
popl
add
call
push
popl
add
call
movsb
cmp
test
pop
and
out
shll
imul
or
rorb
or
roll
roll
rorb
add
push
rorl
sub
xor
rorb
roll
xor
roll
movl
xor
mov
xorb
inc
dec
jne
sub
pushfw
xchg
mov
sub
call
rorl
roll
mov
mov
push
and
popl
call
fdivrl
push
and
push
xor
mov
and
add
rorb
sbb
fstl
sahf
and
add
mov
negb
inc
dec
jne
jge
stos
inc
jp
add
add
mov
jge
add
insb
pop
add
add
orb
add
mov
sgdtl
add
mulb
and
aaa
daa
mov
fstpl
pusha
pusha
pusha
and
add
jmp
es
pusha
pusha
pusha
jb
pcmpeqd
scas
xchg
repnz
int
outsb
mov
test
xchg
mov
sub
adc
adc
and
pushf
pop
roll
dec
dec
into
aaa
lods
dec
dec
dec
mov
divl
dec
dec
dec
cltd
push
jmp
cmp
dec
dec
loop
dec
jno
shll
dec
dec
dec
idivl
jno
cltd
jno
push
and
dec
and
xor
and
incl
mov
inc
inc
dec
push
test
inc
je
bound
repz
pusha
jmp
addb
sub
add
inc
adc
jmp
lcall
adc
jmp
jmp
inc
adc
lcall
sbb
arpl
adc
mov
and
jno
and
imul
mov
add
add
add
add
add
popfw
notw
or
add
add
xchg
add
add
mov
add
ja
xor
adc
mov
add
add
leave
xchg
dec
and
rorb
xchg
mov
sub
subb
inc
dec
jne
sub
addl
ret
sbb
add
adc
ret
add
subl
adc
push
cmp
mov
add
add
add
or
add
incb
inc
dec
jne
sub
subl
add
addr16
sub
mov
rolb
inc
dec
jne
sub
rorw
inc
dec
xchg
mov
add
rorb
inc
dec
jne
sub
movb
movl
rorl
movl
xor
rorl
movl
mov
xor
mov
xor
mov
add
mov
and
add
popfw
jmp
xlat
xchg
add
add
clc
push
jmp
pop
lods
jne
jmp
jnp
icebp
push
inc
sub
mov
scas
dec
fsub
mov
inc
je
sub
add
sub
add
add
add
sub
nopl
sub
add
push
jmp
cmp
sbb
inc
out
aam
jb
inc
jns
jmp
pop
insb
xor
xchg
pop
add
and
outsb
setl
inc
pop
xor
add
sub
add
add
xor
mov
sub
push
movb
sub
xor
movb
mov
xor
rorl
mov
roll
xor
mov
add
add
xchg
mov
sub
sub
pushfw
rolb
mov
rorb
sub
xor
rorb
xor
rorb
xor
mov
call
push
popl
xor
call
jge
lds
aas
xchg
mov
scas
or
mov
and
and
call
movl
xor
rorb
rorb
xor
movb
rorl
rorb
xor
mov
add
nopl
rorl
stos
add
inc
add
xchg
adc
inc
and
addl
rolb
incl
add
decl
jmp
cmp
add
addb
inc
dec
jne
sub
addb
sbb
push
pop
negb
inc
dec
jne
sub
xchg
notw
or
add
add
call
ja
sub
add
sub
clc
testl
adc
inc
and
mov
and
call
inc
and
xor
mov
movb
xor
mov
xorb
inc
dec
jne
sub
movb
movl
and
rorl
rorl
movb
or
rorl
roll
add
mov
xchg
mov
add
popfw
jmp
pop
adc
fwait
jecxz
and
adc
add
sub
jmp
xchg
arpl
fiadds
add
sub
sub
lea
add
sub
lea
lea
add
add
ror
add
add
jmp
stc
ds
in
mov
ror
pushfw
call
mov
movb
movl
and
rorb
rorl
or
push
and
popl
push
add
call
cltd
push
aam
mov
out
in
in
rorb
rorb
rorb
sub
mov
bndstx
nopl
notw
or
add
add
jmp
sbb
add
incb
inc
dec
jne
sub
addl
aaa
inc
dec
cmpsl
and
inc
and
lock
or
mov
roll
add
subb
inc
dec
jne
sub
movb
movl
sub
mov
roll
xor
roll
roll
xor
movl
roll
roll
xor
mov
add
popfw
jmp
aam
aad
inc
cmpsb
cmp
rolb
rorb
sub
xor
mov
roll
xor
roll
rolb
mov
xor
add
xchg
mov
sub
rorb
mov
rorl
sub
xor
roll
xor
rolb
mov
xor
push
roll
sub
xor
rolb
mov
xor
roll
mov
xor
mov
and
add
sub
call
mov
fisttpll
jge
enter
add
add
add
xchg
mov
xor
add
nop
pushfw
call
movl
mov
push
and
call
dec
and
movl
mov
rorl
or
roll
movb
add
push
mov
add
add
rolb
inc
dec
jne
xor
dec
lods
jp
test
lock
add
lahf
fidivs
push
add
add
or
mov
dec
ret
dec
leave
out
lcall
mov
ss
pushl
decl
addr16
outsl
imul
add
iret
mov
fcmovbe
negb
dec
roll
add
or
aas
xchg
add
add
sbb
adc
add
add
cmp
ds
std
and
jle
in
ds
std
cltd
bound
incl
sbb
add
addb
inc
dec
jne
sub
xorb
loope
xchg
mov
add
addb
inc
dec
jne
sub
push
xchg
mov
add
notb
inc
dec
jne
sub
push
mov
add
subb
inc
dec
jne
sub
movb
movl
and
movl
rorl
mov
or
movl
add
roll
rorl
sub
xor
rorb
xor
mov
rorl
roll
xor
mov
popfw
jmp
shl
jbe
fxch
dec
pushfw
mov
sub
xor
roll
roll
rorb
xor
movb
roll
movl
xor
mov
sub
xchg
mov
call
jb
fmul
call
stos
add
add
mov
mov
push
xchg
mov
sub
notb
cltd
notl
cltd
jle
inc
add
add
add
add
add
sub
add
add
xchg
mov
rolb
inc
dec
jne
sub
rorb
and
dec
pop
xorl
lcall
mov
jle
push
add
add
add
add
mov
in
push
cmp
mov
inc
addb
add
jo
dec
jne
sub
roll
mov
shlb
add
decl
add
add
and
add
decb
inc
dec
jne
sub
push
push
rorl
rorb
sub
xor
mov
mov
xor
mov
movl
rolb
xor
mov
or
add
rorb
inc
dec
jne
sub
movb
movl
mov
add
mov
xor
movb
xor
rorb
movb
mov
xor
mov
add
popfw
jmp
xlat
pop
add
add
xchg
add
sub
add
add
mov
push
and
repz
mov
inc
cld
movb
movl
roll
xor
mov
xor
rolb
roll
rorb
xor
mov
add
rorl
xor
movl
movb
xor
movl
mov
rorl
xor
mov
add
xor
xchg
ror
rorl
jmp
daa
aam
sub
pushfw
call
roll
roll
mov
mov
push
or
call
jbe
outsb
adc
cmc
xor
fldenv
add
add
xchg
mov
notl
or
incl
add
rol
and
xor
lret
and
mov
add
add
add
notb
inc
dec
jne
sub
push
mov
add
rorb
inc
dec
jne
sub
rorl
or
add
add
mov
add
mov
test
sahf
add
add
in
movsl
xchg
ss
mov
or
add
add
add
add
icebp
incl
add
add
sbb
xorb
jecxz
call
lock
push
imul
jmp
xor
add
subb
inc
dec
jne
sub
movb
movl
sub
mov
xchg
mov
add
popfw
jmp
push
or
outsl
shll
xchg
or
pop
xor
shlb
sbb
in
inc
inc
and
int3
mov
roll
rolb
nopl
sub
push
jmp
mull
xchg
ror
into
out
cld
test
or
or
add
jmp
addl
jle
sub
jmp
mov
sbb
xlat
les
cs
pop
jmp
gs
dec
loope
hlt
sbb
add
add
add
add
sub
jmp
and
inc
push
nop
mov
push
mov
mov
mov
mov
mov
mov
mov
pop
jmp
cmpsl
push
std
repnz
lea
add
add
add
pushfw
push
add
sub
xchg
mov
call
cwtl
xchg
scas
or
dec
push
das
xchg
cmpsb
fsubr
fisttps
push
xor
movl
xchg
mov
sub
notl
xchg
in
xchg
incl
add
push
add
xchg
mov
add
add
xor
add
negb
inc
dec
jne
sub
notw
jg
jnp
add
imul
add
mov
xor
roll
xor
rorl
rorb
rorl
xor
mov
add
xor
add
decb
inc
dec
jne
sub
bndstx
push
add
xchg
mov
xorb
inc
dec
jne
sub
xorb
jbe
pop
rolb
inc
dec
jne
sub
pushfw
call
movl
rorb
mov
mov
sub
popl
rolb
push
xor
call
mov
movsb
call
dec
and
xor
mov
xor
rorl
rorl
movb
xor
mov
add
push
add
mov
negb
inc
dec
jne
jg
mov
ja
add
add
xor
push
cltd
add
add
add
add
jae
inc
add
add
cmc
in
fdivrl
cld
add
add
add
add
add
shl
in
inc
scas
push
clc
push
leavew
lock
clc
out
mov
mov
test
cmpsl
jbe
cltd
sbb
adc
mov
or
icebp
pop
add
sub
lea
lea
push
mov
pop
jmp
mov
inc
je
adc
loopne
pop
push
mov
pop
jmp
or
adc
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
jmp
and
pushf
movsl
jp
mov
inc
pop
notw
adc
adc
mov
int
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
jmp
lods
loop
xor
cmp
jmp
dec
loope
jmp
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
and
rorb
rolb
or
movb
roll
rorb
add
addb
inc
dec
jne
movsl
or
ljmp
jmp
jmp
es
jle
mov
and
dec
and
and
lods
push
dec
and
and
in
dec
fsts
push
mov
and
and
lods
mov
and
and
mov
mov
fbld
and
das
inc
dec
cmpsl
call
and
and
push
xor
cmpsl
adc
ljmp
movl
push
mov
rorb
xor
mov
xor
rorb
mov
rorb
xor
mov
add
add
add
add
mov
popfw
jmp
dec
insb
xlat
add
add
push
jmp
lock
stos
or
add
mov
push
pop
nop
inc
add
xchg
add
lea
lea
xor
add
add
lea
add
add
sub
bndstx
ror
nopl
sub
pushfw
push
push
call
push
popl
add
push
popl
popl
call
fimuls
inc
push
imul
mov
rorb
roll
rorb
xor
rorb
roll
rorb
xor
roll
roll
mov
xor
mov
add
subl
in
xchg
pop
add
add
xchg
mov
decb
inc
dec
jne
sub
rorb
push
sub
mov
decb
inc
dec
jne
sub
xorb
fwait
or
jmp
add
add
xorb
inc
dec
jne
sub
subl
inc
adc
fdivr
decl
incb
inc
dec
jne
sub
pushfw
mov
sub
push
xor
call
cwtl
in
mov
fdivs
and
sub
or
roll
xchg
mov
sub
notl
cltd
or
add
add
jne
add
add
xchg
inc
add
add
jge
incl
add
int3
rorl
jmp
or
or
rorb
xchg
mov
sub
negb
inc
dec
jne
jg
into
add
add
sub
jge
cld
jne
pop
add
add
add
add
add
add
add
cmp
add
add
cmp
add
add
add
add
movsl
add
add
test
add
add
add
add
add
popfw
subb
mov
add
add
ss
xchg
mov
add
rolb
inc
dec
jne
sub
movb
movl
push
mov
add
add
xor
add
mov
rorl
xor
rorb
rorl
mov
xor
rorb
rorl
xor
mov
add
popfw
jmp
imul
shrl
add
add
push
popl
and
sub
xchg
mov
add
sub
xor
jns
arpl
push
pop
xor
or
call
push
push
pop
verw
push
pop
repz
push
mov
xchg
xchg
not
mov
pop
pop
cmovnp
and
mov
xor
xchg
cld
add
mov
push
rorl
rolb
mov
xor
movl
mov
xor
rorb
rorl
rorl
xor
mov
add
xor
add
xor
nop
xchg
jmp
jns
pop
insb
xor
lea
lea
sub
add
sub
push
jmp
movsl
jp
mov
inc
pop
jmp
xor
shlb
or
int3
adc
div
fs
add
into
jmp
out
cld
test
or
add
addl
pop
sub
sub
add
xor
push
or
rorl
rorl
add
mov
neg
cmovge
cmp
cld
rolb
xchg
mov
sub
and
rorl
roll
or
rorb
rorb
roll
add
ror
xchg
push
mov
mov
mov
pop
nopl
xor
push
or
call
rorl
and
rorl
roll
movl
or
jmp
push
pop
cmovo
std
cld
rorl
roll
sub
xor
rolb
xor
mov
movl
roll
xor
mov
mov
xor
add
dec
jne
call
rolb
movb
roll
and
rolb
or
sub
xchg
mov
call
mov
movb
and
rorb
rorl
roll
or
popl
popl
sub
xchg
sub
mov
sub
jmp
mov
cmp
arpl
inc
push
pop
cmp
cmove
std
mov
cmp
rcl
lea
mov
test
mov
btr
nop
cmova
lea
xchg
inc
cld
mov
add
movb
xchg
mov
sub
pop
lea
inc
sub
sub
sub
push
jmp
mov
or
lret
test
cmpsw
push
jmp
std
pop
jmp
sar
lahf
in
xor
sub
nopl
sub
sub
sub
add
sub
sub
lea
xchg
pop
push
jmp
and
fstps
fwait
cmp
jbe
in
jmp
add
push
dec
dec
outsl
jl
pop
jmp
mov
es
jmp
mov
cmpb
jnp
icebp
push
inc
jmp
sub
scas
dec
fsub
mov
jmp
je
adc
loopne
pop
aas
or
xchg
pop
push
xor
movl
sub
xor
movb
rorl
xor
movl
xor
sub
mov
sub
popl
call
push
popl
add
call
out
pop
push
mov
xchg
jmp
verw
rol
shr
dec
jmp
mov
repz
rcr
push
pop
cld
inc
pop
pop
xchg
cld
pop
mov
add
ret
