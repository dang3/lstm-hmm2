push
mov
sub
mov
andl
andl
test
push
push
push
lea
jle
lea
mov
xor
cmp
jle
mov
mov
mov
cmp
jne
cmp
jge
mov
mov
cmp
jle
mov
mov
inc
cmp
jl
incl
mov
addl
cmp
jl
cmp
jge
xor
jmp
mov
sub
sub
inc
xor
dec
test
jle
lea
lea
lea
mov
mov
mov
sub
inc
add
add
dec
cmp
jl
sub
xor
inc
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
push
pushl
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
call
pushl
mov
call
push
push
pushl
call
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
xor
test
jle
push
lea
push
mov
cmp
je
inc
add
cmp
jl
pop
pop
cmp
jl
xor
jmp
test
jle
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
inc
xor
test
mov
jle
lea
mov
inc
add
cmp
jl
pop
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
pushl
pushl
jne
push
pushl
call
jmp
dec
push
call
pop
ret
int3
int3
int3
int3
int3
call
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
pushl
mov
pushl
mov
push
call
mov
mov
add
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
call
mov
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
gs
pusha
lcall
jg
and
cli
fisubrl
lcall
mov
sub
clflush
outsl
into
pop
decb
mov
scas
push
sti
ss
pushl
dec
fistpll
outsb
cmp
dec
pop
and
fsubs
jbe
inc
hlt
pop
fdivrl
pop
sti
pop
rorb
cmpsb
or
das
iret
push
in
popa
lret
ja
xchg
aaa
insb
jge
das
inc
xchg
push
icebp
push
jl
lds
add
dec
pop
lret
mov
add
repnz
roll
xor
inc
and
out
pop
xor
outsb
aaa
dec
push
push
mov
pop
push
push
iret
aas
jo
add
or
mov
jp
mov
dec
arpl
rcl
jp
mov
adc
dec
shlb
inc
jnp
das
in
scas
iret
dec
aas
pop
adc
fimuls
pop
push
sub
das
jno
lret
cmpb
in
mov
dec
push
pop
pusha
call
decl
aas
xchg
iret
add
adc
scas
pop
lret
outsl
fidivs
pop
push
jl
push
mov
xchg
adc
mull
dec
sahf
dec
loope
shrb
sbb
mov
lret
pop
scas
jle
fwait
loope
xchg
sbb
pop
aas
fsubrs
enter
ret
add
jg
jnp
insb
cli
push
lcall
sbb
jp
cmpps
outsl
into
pop
decb
mov
ds
lcall
dec
fistpll
outsb
aas
sahf
das
mov
mov
outsl
into
pop
decb
mov
ds
lcall
dec
fistpll
outsb
aas
sahf
in
fadds
addr16
push
mov
inc
adcb
ficomps
sub
mov
xlat
or
aad
cmp
pop
pop
push
sub
mov
mov
xor
sub
mov
and
sbb
fsts
fcoms
fdivrp
push
mov
mov
dec
mov
push
push
xor
or
je
add
push
movsb
jno
lods
stos
leave
cmpsb
or
xor
mov
ret
mov
lret
add
xchg
icebp
addr16
and
xor
sbb
test
fsqrt
mov
dec
inc
add
jae
and
in
xlat
into
push
cmc
aam
pop
jo
cmp
lea
mov
xchg
or
cmpsl
inc
push
push
repnz
test
and
mov
cs
imul
jecxz
sub
mov
rcrl
sbb
fdivs
popf
or
cld
mov
mov
bound
cld
mov
push
push
fwait
dec
test
rclb
stos
xchg
cmp
xchg
jge
lret
jne
out
fiadds
rcrb
jg
pop
in
cli
dec
mov
out
movsb
imul
and
cmp
dec
mov
sti
cmpsl
push
xchg
jle
incb
mov
jmp
sti
dec
cmp
shl
fwait
cmp
adc
ljmp
and
jge
and
sbb
mov
mov
out
movsb
cmpsb
sarl
enter
push
xor
sub
cmp
cmpb
sbb
outsb
lret
repz
add
out
lret
insl
xlat
cld
andl
scas
jle
adcb
pushl
mov
in
push
cmp
pop
ja
jb
xchg
fbstp
outsl
std
fsubl
xchg
es
xlat
movsl
cmp
aaa
add
push
push
and
pop
mov
sbb
mov
out
fisubrs
cmp
push
inc
mov
std
and
pop
sti
and
aad
jmp
loopne
mov
daa
adc
xlat
jno
pop
and
lea
sub
jb
mov
dec
mov
jb
jne
insl
sbb
xchg
jecxz
test
lret
jg,pn
cmp
jno
inc
mov
mov
in
and
cmp
les
fs
push
sbb
sbb
loope
pop
bound
xor
adc
mov
das
adc
popa
adc
popa
lods
faddl
jno
jmp
out
pop
dec
lcall
sub
leave
fs
dec
pop
test
push
mov
sbb
jo
push
test
dec
stos
movsb
xchg
fwait
sub
iret
pop
bound
out
jno
lahf
sub
jno
lahf
mov
call
xor
sub
mov
outsl
jmp
sub
xchg
dec
test
add
xchg
out
loop
outsb
mov
and
adc
add
sub
add
mov
sub
cmp
clc
daa
mov
call
xchg
adc
xor
dec
out
mov
xor
xchg
mov
jl
stos
dec
adc
insl
ds
inc
xlat
ret
sbb
push
inc
push
stc
cld
push
or
pop
adc
cmp
cwtl
mulb
aad
mov
repnz
pop
pop
sub
adc
popa
mov
addr16
add
inc
push
out
dec
xchg
push
scas
in
aaa
in
fisubl
daa
mov
lock
sub
add
jns
pop
fnstcw
push
mov
scas
shrl
repnz
mov
jle
stos
xchg
stos
mov
inc
sahf
subb
sub
test
in
lds
mov
popf
fs
repnz
add
stos
mov
out
test
add
addl
dec
inc
push
test
pop
jae
fdivr
push
xor
mov
inc
push
hlt
int3
inc
and
jbe
dec
or
pop
mov
sti
call
in
aas
cmp
push
push
push
shll
cmp
scas
mov
iret
dec
pop
add
dec
negb
mov
mov
clc
add
ficompl
fs
les
sti
add
mov
outsb
mov
out
sub
aad
mov
sub
cwtl
insb
in
jnp
loope
flds
fcoms
adc
addb
call
into
out
xor
inc
test
mov
jge
subb
je
je
les
lods
hlt
jo
pop
cmpsl
sub
cs
bound
add
lods
aaa
mov
inc
or
daa
add
insl
jnp
decb
xchg
lods
shl
adc
popa
pop
popa
or
inc
std
push
fidivrs
xchg
popf
mov
and
stos
and
or
into
jnp
rol
pop
aas
outsl
into
xorb
sbb
inc
jmp
cmc
jo
out
loop
fcomps
cmp
icebp
mov
push
dec
fwait
popa
inc
stc
pushl
outsl
aam
dec
or
in
clc
fcompl
mov
pusha
lock
sub
push
pop
or
adc
addr16
add
out
and
mov
jb
inc
add
xchg
dec
pop
inc
nop
ret
ret
hlt
jns
cmp
hlt
loope
dec
je
ds
repz
pop
and
cld
jno
repz
mov
imul
add
rorl
not
push
clc
rorb
cmp
loop
nop
lcall
popf
xchg
sbb
or
cwtl
dec
jmp
sub
cli
mov
xchg
jg
pop
mov
aas
das
fst
lods
enter
xor
push
or
loope
loopne
sub
cld
pop
pop
pop
je
inc
adcb
pop
xchg
push
mov
pusha
mov
std
loope
lods
and
mov
scas
lahf
pop
mov
mov
push
add
xchg
sbb
push
adc
shrl
dec
sub
add
push
cld
lds
adc
pmaxsw
sbb
cmpsb
fsts
cmpsb
pop
sub
pushf
inc
pop
dec
push
mov
xchg
add
xor
into
xchg
in
xchg
clc
pop
daa
aaa
or
push
mov
mov
lcall
jo
loopne
push
mov
cmp
mov
test
movzbl
pusha
push
inc
fistps
xor
xor
icebp
out
sub
cs
rol
xchg
ljmp
stos
mov
imul
push
mov
leave
push
orb
in
call
cmp
and
shr
xchg
jp
adcb
scas
mov
push
xor
cltd
insl
dec
cs
es
loope
nop
mov
adc
inc
xchg
sub
adc
pusha
add
mov
les
in
enter
jge
sub
adc
es
stos
loopne
cwtl
pop
mov
lret
mov
ljmp
daa
mov
push
aaa
pop
cmp
lahf
mov
push
pop
roll
adc
push
clc
fwait
jp
push
pushf
cltd
repnz
sbb
cwtl
and
repnz
or
je
jns
xlat
lret
call
notl
pop
orl
mov
sub
add
push
test
out
das
std
or
mov
push
pop
jecxz
mov
pop
pop
dec
loope
push
pop
or
test
and
outsb
adcl
lods
sub
dec
push
mov
inc
mov
push
clc
lock
pop
inc
mov
test
or
movsb
insb
iret
daa
mov
pushf
repz
mov
pusha
fiaddl
jno
sub
in
jge
mov
lahf
pop
push
adc
xchg
adc
scas
xchg
loop
or
cld
jmp
in
addl
push
pop
cmp
mov
push
or
jnp
dec
aad
or
push
sub
les
ret
mov
lret
popa
adc
dec
xor
sub
sub
sahf
sub
movsl
add
ficoml
icebp
cmpl
add
add
inc
push
adc
dec
jns
mov
mov
mov
push
iret
cmp
addr16
or
jmp
add
push
or
jo
add
sahf
sub
xchg
add
test
bound
xor
ja
or
pop
pop
jnp
xor
dec
or
out
pushf
ja
enter
lea
sbb
hlt
sub
pop
icebp
pop
fxtract
xchg
sbb
lret
lods
sbb
adc
js
out
sbb
xor
rcr
dec
ror
sbb
aam
dec
iret
jo
ficompl
add
stos
mov
sbb
jbe
sub
jg
inc
jmp
stos
notl
push
incb
lret
lret
pop
add
jne
jns
xchg
and
adc
mov
in
mov
push
in
fwait
stos
xlat
iret
sub
mov
ss
aas
stos
inc
test
push
inc
js
lods
jmp
dec
pushf
imul
cs
fidivl
cmp
xlat
cmp
loope
jge
popa
repnz
lret
xor
call
pushl
out
insb
sub
xchg
pop
rcr
xchg
mov
and
cmp
fistps
mov
int3
sti
xor
out
jnp
adc
into
popa
push
addb
lock
add
subb
mov
lret
data16
cwtl
cmpsl
jmp
cmp
int3
jb
popf
push
xor
jle
sbb
subb
in
loop
test
lahf
xlat
xchg
hlt
mov
pop
add
adc
pop
inc
mov
aam
out
inc
pop
rcrb
call
jmp
xchg
in
xchg
xchg
pop
ret
mov
jo
neg
repz
outsl
cli
es
call
es
mov
out
mov
cld
xchg
pop
scas
pop
rcl
loope
enter
or
shr
stos
xchg
sub
leave
push
out
call
xor
fdiv
add
and
mov
mov
fdivrl
jge
fildl
int
add
push
js
cli
mov
dec
mov
mov
mov
mov
cmp
cmc
stc
push
repz
insb
mov
or
mov
or
lahf
roll
roll
jg
cmp
lds
mov
ds
sbb
test
shl
fnstenv
or
popa
jbe,pt
adc
push
je
xchg
add
mov
and
and
imulb
loope
mov
push
mov
add
bound
je
lahf
test
sbb
hlt
sub
jae
xchg
in
mov
cmp
and
aaa
aad
mov
inc
mov
and
mov
mov
fisubl
xor
mov
or
cmp
leave
sarb
sahf
imul
popf
in
xchg
push
inc
xchg
adc
repnz
dec
pop
lea
or
aas
pop
cmpsl
lds
nop
sti
pop
cmp
pop
fdivrl
jmp
nop
loop
pop
rol
pop
test
rcrb
jg
lock
jnp
mov
nop
or
fstpl
pop
rcll
mov
sbb
lods
add
adc
subl
pop
lcall
sub
xchg
push
out
in
sbb
fs
xor
xchg
xor
adc
es
add
test
mov
cli
lock
adc
repnz
adc
negb
mov
sbbb
and
dec
gs
adc
inc
cs
dec
xor
repz
out
mov
cltd
fcmovnu
jecxz
shrl
enter
sti
mov
xchg
aas
lea
mov
sbb
ljmp
and
adc
mov
dec
imul
and
in
dec
jnp
fs
jne
jle
inc
jp
leave
sub
xor
scas
hlt
jnp
mov
jle
aam
lret
cmp
fmull
lods
dec
sbb
and
mov
pop
jl
sbb
jbe
inc
subb
fstpl
lret
repz
iret
push
scas
xor
mov
cmpsl
and
jecxz
or
xchg
mov
inc
nop
nop
popf
adc
mov
ds
inc
adc
test
test
mov
jo
mov
push
dec
lret
push
jo
mov
pop
dec
cmp
aas
dec
mov
sub
xchg
data16
jne
shll
sbb
int
and
ret
or
bound
test
sti
in
dec
test
fcomi
push
dec
test
cmpsl
rcrl
lahf
out
cmp
fcoms
push
mov
mov
stc
lret
pop
mov
div
out
in
ret
fimuls
xchg
sbb
push
cmpsl
jns
and
sub
loope
jle
inc
shrl
faddl
int3
imul
test
push
jp
pop
xor
inc
leave
xor
loopne
push
gs
outsb
js
and
push
xchg
cmpsb
sub
cmp
lahf
push
inc
xchg
icebp
pop
fdivrl
dec
xchg
addr16
sbb
add
and
fisubrl
mov
data16
cmp
cmpsl
push
std
add
dec
jmp
repnz
movl
fsubl
subb
pop
mov
or
iret
mov
in
sub
aam
gs
std
cmpsb
push
sbb
add
xchg
mov
push
inc
lods
leave
xor
xchg
add
jle
cmp
iret
daa
test
pusha
out
mov
pop
pop
lret
pop
sub
iret
pushf
loop
aad
jnp
popa
push
push
add
sti
mov
xor
pop
scas
cmpl
jmp
loope
fisttpl
bound
ljmp
pop
faddl
and
mull
fildl
cmc
stos
psrlq
sub
push
jnp
jp
in
in
jg
mov
inc
pop
cmp
loop
insb
and
xor
cwtl
loop
mov
pop
adc
shlb
sbb
sbb
inc
or
in
lcall
adc
loop
and
mov
jecxz
movsl
popf
fs
lret
das
jne
rcr
cs
add
cmpsb
int
hlt
pop
inc
sbb
mov
mov
xlat
inc
push
loop
scas
pop
and
fdivs
pop
rcl
movsl
shll
mov
int
test
fisttpl
loop
or
mov
push
test
or
dec
pushfw
xchg
cmp
dec
movsl
jp,pt
push
xor
loop
mov
push
cwtl
aas
test
fldcw
adc
shrb
mov
pop
insb
push
xor
stos
cmp
sarl
adc
cwtl
test
xor
in
stos
and
idivb
movsb
daa
mov
and
push
mov
mov
pop
mov
sub
addr16
jae
mov
cld
popa
inc
xor
cmpsl
lret
imul
jp
outsb
jl
mov
dec
mov
clc
sbb
loope
ljmp
ja
jl
adc
cmp
mov
in
jle
dec
insl
orl
imul
and
popa
int3
pop
in
lock
jne
xor
mov
ret
lds
mov
ss
ja
sbb
jmp
mov
or
jnp
out
adc
and
fs
jg
pop
cmpsl
pop
movl
into
ficoms
cmp
sbb
rcll
cmp
repnz
inc
cmpsb
mov
sarb
ds
inc
sub
xor
imul
iret
fistpll
ret
call
add
sti
repnz
jl
jge
add
nop
adc
cmp
insb
pop
xor
pop
jecxz
pop
xchg
xchg
xchg
or
test
shlb
pop
mov
call
imul
fdivs
sti
daa
pop
jnp
test
cmp
ret
sbb
mov
aad
imul
or
jmp
insl
cmp
sarl
in
push
inc
addr16
dec
stc
mov
in
cs
subps
outsb
jae
mov
cmc
and
adc
cs
lock
pop
in
add
loope
or
jp
jo
daa
xchg
cli
pop
es
xor
push
cmp
and
test
inc
insb
add
pop
adc
scas
movsl
mov
insl
dec
addr16
mov
cwtl
fidivs
insl
inc
leave
aaa
push
cmpsb
jecxz
hlt
add
mov
dec
adc
adc
mov
mov
adc
xchg
sub
ja
jecxz
es
clc
pop
leave
and
sub
pop
test
fcoml
scas
fcomps
pop
pusha
fidivl
fldcw
push
push
test
aam
sub
sub
pop
adc
insb
sarb
in
pop
add
loope
stos
adc
mov
leave
out
cmp
fiadds
movsl
mov
mov
xchg
adc
das
imul
rcrw
xor
add
stc
aad
fdivrs
dec
mov
sub
cmp
and
add
arpl
imul
cld
pop
je
lret
jecxz
inc
xlat
sub
mov
or
test
out
xchg
xchg
push
pop
mov
inc
insl
or
andb
imul
add
mov
test
addb
inc
repz
aad
dec
mov
cwtl
jle
stos
pop
divb
enter
adc
xchg
push
lahf
mov
lods
push
cmp
and
sub
mov
sub
jns
jge
push
sbb
cmpsb
into
out
pop
jnp
jge
and
loop
mov
fcomps
xchg
mov
aaa
sbb
mov
mov
jp
cmpsl
es
fnstcw
ret
sub
orl
push
stos
pop
leave
pop
outsb
movsl
repz
test
fstpt
sbb
aad
push
sbb
mov
lds
jl
ret
lock
cmp
xchg
push
sar
ljmp
mov
push
xor
push
push
mov
sub
dec
or
dec
xchg
hlt
jl
movsl
out
jns
bound
mov
mov
mov
imulb
out
jp
jge
and
jnp
dec
inc
sbb
jp
or
fwait
sahf
mov
bnd
mov
lcall
dec
sbb
iret
adc
sbb
mov
int3
dec
cmpsb
mov
into
xchg
add
outsl
or
xchg
lds
sbb
pmulhuw
fldenv
and
sub
sub
ret
movsb
and
out
js
lret
inc
mov
addr16
nop
imul
add
cmpsb
cmp
test
inc
jnp
sbb
dec
mov
mov
mov
push
stos
xchg
std
or
inc
mov
fs
jns
push
mov
xchg
mov
loopne
jp
pop
shrl
dec
mov
enter
push
loop
xchg
sahf
push
lea
iret
lea
sub
rcr
sahf
mov
inc
imul
push
inc
sbb
ss
lock
mov
bnd
dec
out
fs
sub
dec
mov
and
xchg
mov
and
jo
lret
cmp
test
push
inc
insl
aad
sahf
insl
shrb
movsl
scas
mov
mov
and
mov
aaa
ret
sub
sbb
das
push
jo
cld
movsb
cmp
inc
js
mov
dec
inc
and
adc
jo
inc
in
pop
in
popa
test
adc
rolb
adc
pusha
xchg
je
idiv
sub
xchg
test
aaa
xchg
sbbb
pop
lea
stos
insb
test
jmp
cmp
scas
sub
inc
insb
popf
mov
int
pop
push
pusha
jb
test
jno
adc
jb
add
loopne
ds
inc
jns
xchg
cmc
imul
call
faddl
push
push
mov
icebp
rclb
push
movsb
cwtl
int3
dec
pop
sub
fs
lret
aaa
or
out
icebp
lahf
jle
dec
and
jns
mov
nop
cmc
xchg
mov
pop
aaa
or
leave
mov
stos
ja
mov
cwtl
insl
push
lret
sub
fdivs
dec
xor
mov
sbb
test
outsb
imul
xor
lea
mov
call
scas
mov
test
scas
std
cli
sti
jb
pusha
fstpl
int
andb
xlat
sti
mov
insb
scas
imul
mov
adc
lods
xchg
pop
cmp
ljmp
xchg
xchg
pusha
mov
adc
jmp
and
jno
das
cmpsl
pop
cs
add
lea
jo
dec
push
lcall
and
and
repz
arpl
pop
push
add
jmp
imul
mov
mov
out
mov
or
addr16
pushf
stc
jb
popa
add
out
jecxz
cmp
push
push
les
test
xchg
js
xchg
xchg
into
or
and
adc
push
and
pop
adc
lds
sbb
xor
dec
mov
lock
and
movsb
aaa
lods
or
mov
das
mov
cmp
outsb
xor
dec
and
mov
adc
jle
inc
xor
divb
dec
sbb
pop
daa
jge
aaa
cli
push
mov
inc
loopne
jg
bound
inc
loope
jmp
popa
xor
push
insb
lret
imulb
test
cmpsb
adc
shl
or
mov
fisubrs
pop
decb
mov
ds
lcall
dec
fistpll
outsb
aas
sahf
das
mov
mov
outsl
into
pop
decb
mov
ds
lcall
dec
fistpll
outsb
aas
lcall
jg
outsl
movsl
pop
cli
dec
out
mov
ds
daa
lcall
dec
fbstp
mov
jp
push
pop
pmaxsw
outsl
into
fistpll
cs
loope
movsb
xor
es
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
mov
sbbl
lahf
sub
and
adc
popa
jno
push
fists
mov
pop
xchg
outsl
loope
icebp
dec
rcrl
and
adc
add
mov
das
mov
pop
mov
jg
dec
fstps
scas
ret
out
je
adc
mov
pop
mov
dec
sbb
push
pop
sub
mov
inc
jecxz
imul
push
or
mov
jp
pop
insl
outsb
push
pextrw
dec
sub
mov
adc
adc
add
inc
daa
sbb
pop
ds
jle
imul
cmp
fnstcw
aas
jno
mov
aas
mov
xor
xor
jno
into
mov
ja
rdmsr
lods
mov
lret
aad
rcrb
or
shll
xchg
pop
rol
lods
lret
inc
lahf
adc
and
test
mov
mov
cltd
pop
push
and
cli
adc
add
mov
aas
cmpsb
setno
mov
jg
dec
fcomps
scas
cmp
or
jns
iretw
inc
fbstp
arpl
sbb
dec
or
jle
or
and
fnstcw
icebp
push
xchg
or
daa
mov
divl
push
movsb
adc
pop
loopne
aam
loopne
in
lea
dec
rcrl
and
adc
popa
pushl
inc
fists
mov
pop
xchg
outsl
loope
icebp
dec
rcrl
and
adc
popa
pushl
inc
fists
mov
dec
sbbb
jns
enter
mov
xor
mov
ret
aam
xchg
mov
orl
jnp
xchg
sbb
dec
push
lcall
fwait
jmp
adc
mov
cmp
mull
and
push
fadd
repz
xchg
into
icebp
aaa
es
xor
test
insb
imul
cmpsb
push
sub
pop
outsl
icebp
mov
adc
fidivrl
mov
faddp
xchg
inc
rcll
inc
imulb
push
dec
sar
xor
sbbb
cmp
mov
push
jge
inc
in
bound
adc
daa
mov
mul
xor
repnz
dec
pop
xchg
mov
out
lds
das
sub
push
lods
pop
add
pop
aam
and
cmp
inc
pop
sub
ss
out
sbb
in
mov
int
pop
popf
add
jne
jns
xchg
scas
fistpll
subl
mov
addr16
mov
mov
jp
je
sti
movl
mov
or
into
scas
xlat
ja
pop
xor
scas
pop
mov
cmp
fldt
adc
push
push
xchg
ss
sahf
cmp
dec
fs
jbe
pushf
mov
xchg
push
mov
dec
xchg
in
in
dec
inc
jb
cmp
imul
xor
xchg
jne
pop
lcall
ret
mov
mov
pusha
jmp
cmpsb
and
inc
rcr
adc
testl
mov
fcmovnb
inc
push
sbb
sub
xchg
lahf
xchg
cld
outsb
ljmp
push
pop
inc
xchg
movb
pop
jne
rclb
enter
int3
mov
mov
movsl
and
push
mov
test
add
pop
push
add
sub
jnp
jge
loopne
jae
out
in
icebp
inc
loope
sbb
jmp
clc
jbe
leave
adc
iret
je
ja
xorb
sub
shr
out
mov
jmp
xchg
jne
and
jge
lods
jge
mov
fstl
loop
loope
testb
ss
scas
rcr
mov
or
push
and
cmp
xor
cmp
mov
xor
ret
std
push
in
jno
mov
mov
imul
roll
xor
test
mov
cs
negl
and
mov
jecxz
xchg
push
and
cs
pop
xchg
int3
stos
imul
lock
cmp
and
stc
fwait
insl
or
outsb
dec
mov
test
pushf
sub
add
xchg
cmp
cmp
ss
xchg
sub
test
and
xlat
pop
lods
lret
out
pop
mov
aas
ljmp
push
imull
js
sbb
mov
repnz
sbb
pop
jno
add
mov
mov
mov
jecxz
or
mov
scas
xchg
das
jl
push
mov
mov
pusha
mull
jno
aam
push
xor
inc
fwait
subl
fldl
push
mov
xor
mov
push
add
das
xchg
fs
xor
es
popa
cmpsl
enter
dec
inc
aas
cwtl
ja
mov
push
idivb
inc
insl
push
mov
pop
cmpsb
mov
mov
aas
inc
mov
loopne
nop
test
push
leave
cltd
jae
xchg
sbb
mov
hlt
and
ljmp
inc
cli
push
insb
inc
dec
rcll
dec
fbld
ror
or
int
outsb
loopne
pop
jl
xor
fdivr
pop
aam
repz
mov
push
mov
ret
out
adc
mov
push
popa
and
lahf
sahf
jne
sti
push
repnz
xchg
into
pop
in
daa
or
cwtl
ljmp
xor
ss
pop
sbb
and
sbb
mov
fwait
stc
lret
mov
pop
adcl
test
pop
in
out
mov
or
adc
mov
mov
xchg
adc
in
pusha
mov
shlb
in
sbb
scas
jecxz
sbbb
xor
cmp
adc
lret
loopne
roll
gs
cmc
inc
sub
testb
test
out
sub
sbb
movsb
sbb
xchg
mov
jl
cmp
inc
aaa
and
or
cmpl
xchg
popa
nop
xlat
dec
mov
jl
adc
mov
cli
mov
test
push
std
lock
fdivs
sub
cmp
mov
lds
cmpsb
fstl
or
push
out
leave
xchg
outsb
push
mov
push
cmpsl
insl
pop
xchg
aad
in
loopne
icebp
pop
add
in
jecxz
mov
inc
inc
out
pop
jne
jge
cmp
rcll
stos
mov
sahf
pop
cmp
and
sub
lcall
inc
leave
jb
imul
xor
popl
sub
or
pop
cmp
inc
out
or
push
adc
inc
cmp
into
adc
rcll
cmp
xor
into
setne
cltd
addr16
sbb
xor
xchg
movsl
pop
pop
lods
out
dec
int3
and
cld
clc
in
cmp
popa
and
orl
xor
push
xor
jge
leave
in
sahf
mov
lcall
mov
fildll
pop
test
shll
int3
imul
mov
dec
push
scas
daa
xor
shll
idivl
xchg
push
std
les
or
add
and
jno
pop
jecxz
cmp
pop
mulb
pop
dec
sub
lahf
cs
add
inc
mov
in
mov
sahf
lods
cmp
xor
stos
jg
inc
and
inc
or
icebp
mov
xor
popa
inc
dec
sub
mov
jae
aam
data16
bound
jmp
mov
test
icebp
mov
jne
int3
repz
mov
fsubrs
adc
arpl
popf
lods
outsl
pop
insb
push
data16
leave
movsl
xor
mov
xor
mov
es
jae
imul
inc
out
repnz
lea
push
mov
pusha
adc
pop
insb
add
mov
push
jne
repz
xchg
fiadds
push
xor
imul
add
inc
fsubs
cwtl
sahf
movsl
fnstsw
lret
clc
sbb
gs
add
xchg
fisubrs
push
lcall
call
inc
into
imul
xchg
adc
repnz
arpl
jno
or
or
adc
out
cmp
xlat
dec
and
bound
xor
dec
fs
mov
mov
clc
mov
inc
xchg
inc
or
mov
and
pop
arpl
adc
mov
jg
nop
popa
mov
insb
mov
and
jg
sub
imul
fcompl
dec
fsubl
xor
addr16
popa
es
imul
insl
loope
shlb
mov
mov
adc
mov
cmpsl
ss
mov
push
cmp
mov
fisubrs
outsb
inc
pusha
and
call
jno
xor
push
in
adc
mov
dec
sub
dec
mov
mov
nop
xchg
mov
data16
and
lahf
test
add
stc
and
cmp
lods
gs
adc
sub
ret
js
rorb
into
cs
inc
mov
pop
imul
mov
mov
cmp
jns
jg
mov
neg
add
cmp
outsl
in
xchg
pop
ljmp
mov
or
ret
pop
cmp
mov
ret
cmp
sbb
pop
add
pop
aaa
fisubrl
sti
imul
adc
and
das
mov
pop
fisubl
lock
test
cld
and
into
mov
mov
dec
xchg
push
jp
mov
rclb
add
or
push
cli
shll
sub
filds
push
dec
jl
add
shrl
repnz
rcrb
dec
add
stc
dec
in
xchg
out
out
shrl
or
and
leave
stos
mov
mul
mov
sbb
add
in
cmc
dec
push
enter
dec
dec
shrb
add
or
pop
test
popa
test
les
mov
cmp
mov
pop
jae
jo
into
fwait
pop
dec
or
sbb
mov
ret
xchg
pop
iret
stos
mov
or
in
imul
push
stos
inc
mov
cld
dec
ss
jmp
lret
repnz
mov
scas
push
aad
jo
mov
or
aaa
xchg
push
dec
outsl
out
lock
and
mov
fnstsw
jge
stc
imul
push
inc
xlat
dec
xchg
mov
adc
push
sub
mov
sbb
mov
imul
aam
addr16
xchg
push
jecxz
movsb
jae
sbb
ret
or
fsub
sub
jbe
adc
jbe
shll
cs
sbb
nop
dec
iret
jnp
fdivrs
pop
cmp
push
inc
or
out
mov
xor
lock
inc
movb
push
lods
outsl
ja
add
cmpsl
lahf
lahf
push
in
hlt
iret
dec
mov
adc
inc
push
fwait
mov
fs
ss
or
cmp
mov
push
dec
cmpsb
adc
mov
mov
mov
iret
jb
mov
loop
fwait
or
mov
iret
push
mov
push
xor
mov
sub
adc
mov
jns
fst
push
cmp
lods
fimull
cltd
aas
xor
lcall
shlb
mov
jb
or
cmp
push
lods
xor
bound
aas
jb
xor
jo
jb
xor
and
cmp
adc
cltd
sbb
pop
push
in
pop
fdivl
jcxz
push
sub
push
ficoml
dec
andb
cmp
arpl
xchg
stc
in
xlat
jno
setle
shr
mov
mov
cltd
or
pop
sub
mov
popa
loope
insl
call
addr16
pop
lock
or
add
pusha
cmp
mov
jo
mov
pop
adc
sti
int
mov
rclb
out
sub
in
aad
mov
insb
lods
cli
cmpsb
repnz
add
ficompl
cmp
loop
cmp
add
inc
ds
pop
adc
addr16
cmpsl
orl
add
jo
cmp
ja
dec
out
call
mov
cmpb
jb
int
les
insl
aas
roll
push
scas
mov
push
loopne
pop
inc
inc
fbld
negb
xchg
xor
push
and
dec
inc
jle
fstpl
or
shll
repnz
cmp
scas
push
pop
lret
inc
push
lahf
dec
scas
push
stc
mov
je
repz
call
int3
es
xchg
outsb
jge
jnp
insb
push
ljmp
test
ret
jbe
add
mov
mov
mov
mov
xchg
push
in
insl
cmc
lret
popf
subb
mov
repnz
or
loopne
insl
pop
xchg
aas
mov
stos
movsl
mov
mov
jge
sub
movsb
lea
xor
push
jbe
sub
mov
pop
xchg
xor
push
jecxz
jb
push
mov
inc
xchg
loop
ljmp
mov
jge
ja
jne
xchg
adc
xchg
outsb
inc
iret
fsubs
mov
lods
std
popa
jmp
push
test
adc
push
shlb
mov
and
lods
ret
jno
pop
xchg
lahf
jne
push
pop
dec
jno
jge
push
jae
inc
test
js
lds
lea
add
insb
jmp
lock
nop
popf
int3
or
movsl
or
cmp
xor
push
fildll
test
jnp
and
lods
ss
inc
sbb
dec
push
or
mov
add
inc
cmp
pop
push
mov
adc
push
cmc
mov
inc
stos
adc
xchg
xchg
pop
adc
sbb
inc
sub
mov
mov
xchg
jo
sbb
repz
jbe
sub
ds
cmp
lds
add
or
mov
je
fst
inc
repnz
jne
jns
shlb
xchg
leave
dec
nop
out
stos
stos
and
mov
sub
inc
daa
mov
mov
sbb
out
and
mov
inc
inc
data16
mov
mov
sarl
test
jg
ljmp
xlat
dec
out
std
pop
mov
mov
leave
inc
stos
xchg
test
imul
cmpsl
mov
xchg
push
ret
jmp
andl
in
lods
add
cmpsl
adc
pop
fstpl
xchg
and
mov
insb
add
lahf
insb
jb
cmp
jmp
sbb
mov
adc
cwtl
rorb
mov
jnp
xchg
or
lods
mov
mov
clc
jne
rcr
icebp
and
adc
jno
push
arpl
mov
out
insl
inc
adc
pusha
addr16
adc
sbb
es
iret
jmp
outsl
mov
pusha
leave
rep
dec
das
mov
adc
inc
mov
jne
mov
pop
call
jb
xchg
out
aaa
cmp
mov
out
pushf
pushf
mov
xor
jne
dec
adc
je
push
sbb
leave
lods
in
sub
scas
subb
dec
cli
and
hlt
in
add
arpl
jne
xchg
popf
outsb
jae
add
call
jg
dec
ljmp
test
adc
or
push
in
loope
fs
imul
push
mov
test
das
out
xor
cli
xor
pop
adcl
cmp
bound
pop
jmp
mov
inc
and
lahf
pop
out
push
push
sbb
jl
pop
sub
sbb
out
aam
jg
cwtl
insl
push
xor
lret
jle
in
sub
mov
hlt
fwait
mov
sub
andb
xchg
popf
xor
jno
or
inc
bnd
loope
data16
fnsave
in
test
mov
rol
mov
mov
cmp
loopne
xorb
jg
or
jne
shlb
icebp
test
xchg
cmp
cmp
xchg
inc
push
inc
or
in
push
mov
sbb
bound
xor
inc
adc
rclb
test
int
aad
sbb
jge
addr16
test
xchg
sarl
enter
xor
ss
fsts
in
xor
shrl
add
pop
icebp
or
mov
pop
cs
xlat
test
dec
daa
xchg
push
out
out
add
push
sahf
inc
gs
divb
adcb
or
bound
out
ljmp
cwtl
sbb
sbbl
push
mov
adc
jb
bound
jp
cmpl
in
xlat
jmp
loop
stos
popa
push
bound
rcll
inc
jmp
insl
or
movsl
lcall
cli
jp
and
pop
les
lret
xor
mov
in
nop
mov
cmpsb
sbb
rcrb
std
enter
sahf
repz
fs
xlat
cwtl
and
fcmovnbe
stc
popf
sti
xchg
pop
in
push
dec
xlat
shll
sub
mov
mov
fwait
push
in
adc
and
mov
mov
adc
int
jbe
sbb
int
icebp
add
inc
sahf
ret
int
xadd
or
sbb
inc
dec
das
jb
rcrl
ljmp
test
jle
xchg
inc
mov
cmpsb
aam
xor
sbb
xchg
pop
imul
shlb
scas
xchg
add
xor
enter
fcoml
pop
cmp
outsb
jne
ja
shll
ljmp
data16
movsl
loope
xchg
iret
push
jle
dec
xor
mov
mov
clc
adc
jne
and
stos
icebp
jne
fcomi
dec
pop
call
xchg
cmp
lock
imul
inc
and
mulb
cltd
not
cmp
fisttpll
std
jno
ja
fildll
sub
and
cmp
xchg
ss
gs
out
cs
hlt
fs
pusha
leave
cld
arpl
ljmp
mov
aaa
lahf
or
dec
pop
mov
pop
cmp
repz
mov
fwait
push
jp
jo
pop
pop
loope
fildl
adc
lret
lret
inc
fidivs
shl
aad
stc
in
adc
ret
imul
mov
mov
lock
cmp
xor
xchg
ret
mov
jle
pop
adc
jnp
data16
lds
dec
imul
pop
icebp
dec
std
ss
mov
mov
in
push
aaa
jmp
pop
cmp
sub
mov
add
lods
push
out
sar
sub
mov
adc
pop
lea
fldl
movsl
cmc
inc
jns
mov
push
sbb
shll
sbb
sub
inc
xchg
arpl
mov
mov
xchg
les
pop
mov
pop
mov
mov
aaa
mov
or
xchg
push
gs
xorb
sub
movsb
fidivrs
inc
jo
test
or
cmp
ret
call
inc
inc
les
lret
jmp
push
dec
and
and
out
inc
dec
stos
es
daa
out
add
nop
push
push
mov
jnp
dec
add
pop
cmc
fbld
inc
jnp
xchg
mov
mov
or
stos
addr16
stos
or
fbstp
movsb
sbb
cmp
jecxz
fs
mov
adc
rcrb
in
pop
enter
mov
jno
push
iret
adc
test
iret
aaa
xor
mov
cmc
mov
js
es
leave
aaa
fidivrs
sub
clc
xor
movb
nop
out
xlat
xchg
push
sub
adc
adc
sub
push
xchg
les
cmp
jnp
sub
scas
push
std
adc
push
jge
fwait
call
inc
jb
fcomi
loope
andl
inc
adc
push
nop
js
cltd
push
and
mov
or
push
mov
xor
pop
cmp
aad
adc
mov
push
les
popa
xorb
pop
out
fnsave
mov
pop
ret
and
sub
mov
out
xor
mov
jle
clc
rcrb
mov
pop
push
pop
les
int3
in
stc
mov
out
mov
jns
insl
insl
xchg
flds
mov
into
es
and
pushf
push
nop
xchg
add
loope
scas
movsb
xlat
sbb
xor
fstps
cmpsb
leave
xor
sarl
inc
mov
bnd
aad
imul
and
std
divb
sub
jae
loopne
cmp
and
inc
mov
in
dec
mov
scas
adc
jp
push
and
fidivrs
mov
fcom
enter
or
orl
or
movsb
pop
cli
jecxz
push
adc
sahf
jbe
js
mov
jle
cmp
sub
pop
or
outsb
int3
push
mov
push
addb
xor
ror
stos
push
jbe
mov
pushf
lret
and
jbe
and
jb
cmp
loope
add
xor
inc
cmp
push
scas
jg
fsubrs
out
insb
push
mov
mov
add
ja
arpl
jns,pt
pushf
sbb
adc
mov
push
pop
or
divl
aas
movsl
mov
push
gs
or
outsb
jl
test
bound
jae
in
dec
jb
int
or
sbb
mov
sub
mov
cmp
sbb
add
adc
adc
sbbb
mov
push
adc
xlat
adc
icebp
or
cmp
mov
stos
push
adc
stos
rcrb
or
mov
fxch
xor
in
xor
pushf
cmp
xchg
shlb
or
mov
pop
fsubrl
inc
adc
stos
lds
fwait
roll
push
and
cmp
jge
inc
jo
push
dec
pop
or
add
imul
cmp
enter
mov
punpckhbw
mov
test
dec
leave
sbb
pop
insl
jge
adc
mov
ret
dec
add
insb
loopne
pop
sahf
jo
das
lods
push
jmp
mov
add
jp
mov
scas
mov
pop
popa
sbb
pop
scas
or
sub
fadd
or
test
ja
fmull
mov
and
pop
xchg
loopne
xor
push
jecxz
cli
xor
jl
lret
arpl
pop
daa
push
mov
mov
mov
call
mov
test
jae
in
stc
xor
scas
jp
pop
mov
mov
add
cmc
out
add
sub
jns
mov
pop
xchg
adc
cmp
dec
cltd
pop
repnz
mov
pop
xchg
outsl
loope
icebp
dec
rcrl
and
adc
popa
pushl
inc
fists
mov
pop
xchg
outsl
loope
icebp
dec
rcrl
and
adc
popa
pushl
inc
fists
mov
pop
xchg
outsl
loope
icebp
dec
rcrl
and
adc
popa
pushl
inc
ficoms
mov
pop
xchg
outsl
loope
icebp
dec
rcrl
and
cbtw
jmp
and
in
xor
faddl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
and
inc
add
data16
add
arpl
es
push
xchg
out
xchg
repz
cmpsb
ret
cmpsb
inc
push
xor
jbe
data16
jae
inc
ss
inc
mov
notl
xchg
mov
cmpsb
fwait
push
roll
lret
data16
adc
pop
ss
es
nop
in
xchg
testb
rorl
add
jae
cltd
xor
cmpb
lods
push
lods
cmpsb
pop
repz
dec
xlat
iret
push
iret
push
sbbl
dec
push
repz
mov
cmp
or
sbb
scas
ffree
push
sub
fldl
xchg
add
enter
in
mov
xchg
lock
sbb
imul
push
out
pushl
pushf
pop
jae
mov
sub
arpl
repz
cmpsb
fcoml
mov
popf
sti
jmp
subl
roll
cmp
filds
ldmxcsr
enter
pop
lcall
mov
or
mov
pop
js
gs
add
xchg
or
inc
ss
es
sub
cmc
mulb
xchg
mov
loopne
push
inc
aas
ja
imul
push
sbb
push
mov
movsl
notb
stos
les
sub
jb
or
inc
mov
push
or
mov
mov
xchg
jmp
lcall
repnz
pop
pop
adc
xor
push
inc
ss
mov
notb
xchg
mov
cmpsb
and
inc
add
data16
jae
inc
ss
mov
notb
xchg
mov
cmpsb
and
outsb
rcrl
mov
lret
sarb
cmc
shrb
fsts
lcall
push
jecxz
andb
jecxz
sahf
les
sub
cwtl
stos
inc
fldt
dec
pop
lods
cmpsb
fmull
pop
mov
notb
fistps
cmpsl
pop
cmp
mov
pop
jle
and
mov
pop
into
lret
cmc
iret
ret
xchg
arpl
pop
test
mov
shrl
scas
icebp
loop
inc
jp
ljmp
cmp
mov
sub
dec
outsl
je
mov
rolb
cmp
mov
int
pop
cmpsl
and
in
inc
mov
lret
daa
or
xor
jl
stos
cld
repnz
xchg
push
sub
lret
lret
xchg
jmp
stos
leave
mov
and
insb
dec
sbbl
fidivrs
adc
rolb
pop
xchg
cmpsb
push
iret
mov
inc
data16
cmpsb
pop
jbe
ja
sub
jecxz
xchg
dec
mov
pop
and
dec
mov
test
fnstcw
sub
mov
cmp
ja
sub
and
pop
pushf
outsl
loopne
fstpl
xchg
dec
stc
jae
out
addr16
mov
es
inc
popf
sbb
xchg
imul
int
cmp
push
sub
ljmp
xchg
push
cmp
xor
addr16
jae
cmpsl
and
data16
adc
int3
fisttpl
sub
mov
loop
mov
xchg
jecxz
push
jne
stos
or
out
inc
pop
xor
cs
stos
lahf
loop
mov
iret
xchg
push
or
cmc
mov
jno
popf
mov
shlb
test
clc
hlt
push
pop
icebp
inc
imul
out
xchg
mov
lods
jp
adc
out
jmp
xchg
pop
fs
jne
adc
xchg
int
popa
idiv
scas
add
or
sbb
jp
lcall
scas
add
jl
aad
cmp
icebp
push
cwtl
out
iret
enter
outsl
outsb
push
loopne
xor
sub
adc
cmp
std
bound
fsubrs
sub
stos
or
loop
aaa
fnstenv
jo
xor
orl
test
add
jno
lods
sarl
ja
sbb
cld
cmp
mov
add
sbb
shlb
or
pop
imul
or
mov
push
aad
hlt
push
fs
mov
orb
incl
mov
and
clc
call
inc
sbb
add
jbe
pop
imul
mov
jo
adc
cmp
push
pop
jns
xchg
lock
lret
cs
sgdtl
adc
or
mov
jae
sbb
push
mov
jmp
in
xor
sbb
mov
sbb
aas
test
push
in
mov
enter
cmc
scas
movsb
sbb
adc
out
mov
je
lcall
pop
add
xchg
sub
jb
xchg
mov
jb
adc
pop
test
mov
das
pop
movsl
cmpsl
ljmp
push
jge
inc
cld
clc
mov
mov
lock
xor
outsl
push
mov
lahf
hlt
xor
rolb
test
aas
adcl
pop
adc
xchg
lds
sbb
xchg
enter
aam
cmp
dec
leave
mov
outsb
movsl
dec
out
aas
add
jl
pop
out
dec
bnd
sub
js
push
jg
sar
test
cmpb
or
aam
xlat
xor
push
fdivs
jmp
push
mov
out
out
rcr
mov
jge
in
jno
push
mov
cmpsl
adc
imul
movsb
cmpsl
adc
cs
imul
mov
pop
icebp
out
push
outsl
sbb
mov
jbe
cmc
stc
outsb
in
push
iret
arpl
jne
test
outsb
mov
imul
stc
pop
mov
push
out
lock
jp
in
popf
cmp
or
add
sbb
sub
inc
xor
xchg
scas
loopne
and
inc
cmp
cs
pop
xor
cltd
flds
sarl
loop
xor
lods
xchg
imul
sub
or
push
lock
cs
in
cmp
push
xchg
or
ljmp
stos
mov
sbb
pop
cmpsl
out
add
jne
pop
outsl
xor
pusha
xchg
inc
push
cmpb
icebp
xchg
mov
call
dec
sbb
xchg
or
xchg
xor
and
or
xchg
hlt
aam
xchg
enter
or
add
test
lods
mov
cmp
ror
pushf
mov
neg
jge
dec
and
rcl
enter
cwtl
xor
nop
xor
mov
lahf
leave
dec
fxam
sub
lods
cmpsb
pop
scas
pop
mov
sar
pusha
pop
sub
aas
fisttpll
push
aas
sbb
jno
inc
cvtps2pi
and
sti
add
clc
mov
stc
inc
stos
and
bound
movsl
lods
jns
subb
mov
inc
lret
repz
mov
movsl
arpl
mov
rcr
scas
std
lods
push
or
push
test
out
pop
call
idiv
aad
push
inc
std
int
push
cmpl
in
insl
cmp
cmp
fwait
and
mov
scas
insl
lock
test
push
fdiv
mov
insl
and
out
in
popf
outsl
push
adc
test
int3
int3
popa
xor
cli
lods
std
push
aad
lds
push
shlb
mov
sbb
add
push
lret
out
or
repz
mov
push
sub
add
fbstp
push
add
xor
add
dec
xor
xorb
mov
mov
mov
inc
mov
jp
fucomi
call
out
out
push
push
lods
ret
bnd
dec
and
popa
in
cmp
das
inc
inc
push
jo
push
mov
or
cmp
jo
out
mov
std
gs
daa
pop
pop
push
sbb
adc
call
dec
gs
jmp
xchg
xor
fsubs
fwait
mov
cli
mov
push
out
push
in
mov
sub
ljmp
fiaddl
sahf
into
in
ret
in
shrb
in
adc
les
cli
not
repnz
loopne
ficomps
dec
add
xor
and
and
xchg
jge,pt
jge
fisubrl
add
and
adc
lcall
sar
cwtl
push
lea
cmp
dec
xchg
leave
fscale
scas
cmp
outsl
inc
cmp
jae
push
daa
fdivrp
addr16
imul
dec
stos
lods
xor
jbe
jae
jns
ror
or
add
and
and
jg
mov
sbb
and
push
cmp
adc
sub
jg
lods
daa
or
push
stos
outsb
ljmp
test
addr16
mov
mov
mov
cmp
pop
mov
pop
pop
pop
inc
bound
fwait
xor
jle
cmp
dec
jae
cmpl
mov
cmpsl
sbbb
and
stc
out
xchg
inc
xchg
jnp
xchg
inc
shl
dec
cmp
cmc
pop
or
adcb
js
add
mov
sbb
or
lahf
in
mov
pop
lahf
cmp
sbb
xchg
cmc
jp
and
xchg
test
popf
add
test
mov
lcall
je
and
pop
xchg
sub
mov
pop
sti
mov
jle
push
in
sbb
sub
in
pop
jnp
and
and
or
out
hlt
rclb
mov
in
mov
jne
dec
repnz
out
jne
cmpsl
stos
mov
sub
mov
in
mov
xchg
cltd
ljmp
cmp
ss
inc
je
cltd
adc
push
sub
leave
sbb
xor
sbb
test
xor
add
add
mov
cld
lock
in
mov
fcoml
dec
dec
cmc
lea
cld
aaa
mov
ret
out
lret
xchg
loope
flds
mov
lret
roll
cmp
lret
mov
loopne
cmp
pop
sti
push
inc
sbb
bound
push
push
sbb
mov
andl
sub
je
movsl
push
xchg
and
fldl
jecxz
mov
inc
stos
hlt
stos
sbb
and
mov
out
in
cmp
inc
xchg
ja
dec
shl
or
dec
sub
pusha
cmc
jmp
fs
sbb
test
outsb
pop
out
cmpl
add
mov
imul
hlt
lds
nop
jmp
adc
cmp
add
pop
pop
das
ret
dec
or
xchg
cmp
leave
inc
mov
stos
out
je
nop
bound
outsl
pop
mov
jnp
or
dec
mov
mov
stos
sti
cmpsl
push
or
xor
jg
xchg
mov
lret
lcall
push
xchg
push
xor
ds
and
lretw
push
lret
mov
nop
sub
std
mov
imul
testb
xchg
dec
rcl
lea
test
cwtl
xor
jge
int3
sbb
out
mov
push
xchg
inc
sub
pop
adc
sbb
or
bound
pushf
addr16
imul
adc
movsb
push
ja
mov
pushf
adc
cli
inc
lea
jge
nop
aam
inc
push
daa
mov
std
rolb
jp
outsb
xchg
or
cld
popf
mov
jg
clc
dec
mov
gs
xchg
push
subl
add
aam
imul
fadds
sarb
dec
cld
push
push
ficompl
inc
fs
in
push
inc
jne
jb
fmulp
mov
xorl
inc
or
push
adc
jno
inc
bound
and
loope
xchg
sbb
push
add
sub
jg
sarl
inc
pop
pop
subb
pop
in
out
xchg
dec
mov
fldcw
adc
ret
repnz
mov
inc
push
hlt
popa
insl
add
cvtps2pd
and
mov
scas
sub
pusha
xor
scas
xor
fistpl
dec
pop
and
dec
mov
add
pop
cld
shlb
xor
jecxz
cwtl
push
or
jo
ret
cmpb
ret
insl
xchg
push
fwait
icebp
mov
sub
inc
or
loope
xor
sub
out
pop
or
push
cs
aas
rorl
adc
push
mov
sub
mov
jg
aaa
push
adc
sub
xchg
ret
adcl
and
jmp
lahf
mov
movsb
out
xor
push
add
iret
or
imul
ja
jge
test
aaa
mov
adc
adc
jb
xor
push
xchg
ss
sbb
xor
push
inc
es
sbb
mov
sub
and
add
fistpl
cmp
shll
sub
cmp
mov
mov
pop
mov
sbb
out
sbb
pop
loopne
in
cmp
rclb
sub
cmp
pusha
cmova
pop
shll
lods
fimull
mov
int3
sub
mov
jge
ret
jge
shll
mov
inc
arpl
data16
lods
cmp
sub
xor
jecxz
adc
pop
sbb
cmc
repz
adc
outsl
sarb
mov
loope
lds
sub
xchg
or
add
pop
jg
dec
mov
aad
cs
retw
or
ds
sbb
imul
inc
insb
mov
pop
push
cmp
mov
pushl
clc
pop
stos
dec
mov
inc
ret
out
xor
mov
andl
stos
es
xchg
cs
clc
sub
inc
gs
jb
add
sbb
inc
add
add
popf
nop
js
sub
sbb
inc
scas
adc
insb
sub
cli
imul
pop
mov
push
scas
sbb
cmp
jbe
mov
jp
add
mov
lods
pop
jns
loop
xchg
add
mov
mov
mov
xchg
push
jecxz
cwtl
or
fidivs
xor
push
orb
add
stos
adc
pop
lahf
or
outsl
adc
mov
lret
cmp
xchg
mov
cli
adc
push
femms
mov
jecxz
mov
cmp
lea
push
jle
ss
movsl
and
aad
icebp
fucomp
sub
movsb
cli
mov
arpl
pushf
imul
jns
jle
bound
jmp
lock
in
cwtl
loope
pushf
testb
mov
shll
scas
sbb
sub
push
rcrl
ret
inc
xchg
aam
pop
aas
push
test
lds
sbb
ret
pop
ja
test
jnp
jmp
daa
testl
imull
and
jnp
inc
and
xchg
aam
or
fsubl
dec
neg
cmc
cmc
sahf
cmp
rorl
ja
mov
stc
pusha
pop
push
ror
sbb
and
pop
mov
popf
jbe
fwait
insl
lds
mov
jmp
enter
lcall
sbb
fwait
call
pop
sub
inc
cs
or
sbb
dec
movsl
or
or
daa
and
mov
xchg
add
add
mov
movsl
lcall
adc
xchg
sub
jns
sbb
js
js
cmp
je
cmp
sti
jb
sub
cltd
adc
lcall
pop
out
aam
orb
in
pop
ss
and
test
xchg
and
xchg
xor
add
and
jo
in
enter
repnz
aad
jb
cmc
push
iret
mov
aaa
pop
popa
mov
xchg
rorl
jmp
mov
xor
jmp
and
mov
xchg
jg
mov
cli
xorps
add
lods
dec
arpl
pop
jg
jns
rolb
add
lock
jo
cltd
ficomps
push
xchg
sbb
div
or
pusha
ds
and
inc
xor
std
xchg
xchg
or
iret
lods
add
push
xor
push
fwait
mov
xchg
adcb
cmp
push
xor
sbb
and
sbb
pop
into
out
ljmp
in
and
push
and
out
movsb
pusha
mov
ds
addr16
push
and
mov
xorl
lcall
inc
push
mov
les
std
fwait
jns
enter
add
hlt
sti
mov
scas
sbb
je
mov
dec
push
push
mov
and
sub
sarl
cmp
or
add
pop
shll
adc
dec
scas
adc
loopne
add
out
mov
repz
pusha
mov
cltd
pushf
dec
inc
or
cli
ret
add
notb
out
loop
xchg
adc
cmp
inc
or
insb
add
inc
lods
pop
mov
xchg
cmp
int
sbb
loopne
jbe
xchg
vcvtsd2ss
or
in
lea
test
sub
outsl
pop
inc
sub
test
inc
xor
mov
fbstp
ja
cmp
fistps
push
idivl
pop
mov
dec
mov
subl
mov
scas
push
sbb
inc
std
ret
jnp
in
sahf
jg
mov
cmpsb
and
jg
jp
mov
mov
jge
aam
pop
push
fldenv
mov
loop
cs
xor
dec
pop
movsb
std
xchg
xchg
inc
in
ss
push
movl
xlat
roll
sub
sbb
test
roll
cmp
jge
sub
sub
adcl
xchg
jmp
test
mov
enter
xchg
mov
dec
xor
js
ret
cmovp
lea
je
sub
pop
xor
pop
mov
mov
testl
mov
sbb
mov
push
adc
negl
popa
xlat
or
push
pusha
jae
push
lahf
stc
popa
mov
ftst
dec
push
xchg
push
sub
rcrb
aam
aaa
dec
cli
in
scas
adc
cmp
sbb
pop
insb
push
andb
jae
fldenv
xor
inc
clc
or
xor
add
sbb
dec
mov
jae
cmpsb
int
and
push
insl
or
cmp
shll
orb
js
fidivrl
sbb
stos
sbb
xor
icebp
repnz
lahf
sbb
mov
cmp
roll
inc
sub
xchg
ret
call
cld
push
xorb
aas
jo
lods
pop
or
movsl
das
sti
mov
daa
sub
mov
push
stos
sbb
push
call
arpl
sti
repz
int
es
sub
scas
dec
test
or
std
fisubrl
inc
aas
js
adc
shl
aam
inc
int
sahf
inc
daa
dec
rcrb
or
jae,pt
inc
fs
lret
lods
dec
add
pop
add
xchg
xorb
fmuls
lret
mov
mov
iret
enter
mov
cmpsl
mov
and
or
cwtl
inc
lret
lea
nop
jbe
dec
fcmove
loop
std
mov
insl
call
cmp
aaa
rorl
mov
cld
hlt
push
jmp
jbe
cmp
sub
repz
int
mov
xlat
pop
std
out
dec
xchg
sbb
or
lcall
pop
pop
movsb
outsb
cltd
imul
fwait
mov
icebp
cli
push
stos
addr16
mov
xchg
jecxz
push
sub
mov
cmp
cmpsb
push
subl
iret
jae
sub
lods
addr16
jae
sub
jecxz
cmp
stc
dec
xadd
adc
inc
in
and
mov
adc
xchg
fwait
lcall
imul
push
push
je
jbe
fisubrs
add
and
mov
std
xchg
xchg
dec
and
lahf
mov
bound
push
gs
popf
ss
jl
mov
sbb
adc
inc
inc
fdiv
clc
xchg
rcl
ss
add
mov
pop
jns
notb
mov
mov
clc
call
adc
outsb
mov
sub
scas
cwtl
sbb
jo
loop
fists
dec
xchg
shr
int
cmp
ret
lods
mov
sbb
push
mov
ret
jl
push
loopne
movsl
dec
adc
add
dec
inc
push
and
xchg
jg
int3
cs
and
sub
fs
inc
mov
imul
xchg
mov
xor
push
mov
clc
sbbl
pop
shlb
xchg
and
sbb
dec
inc
popf
stos
movsl
add
fcompl
mov
enter
adc
test
hlt
pop
std
add
imul
repz
out
xchg
sub
inc
aad
enter
mov
data16
add
aam
aas
nop
jo
xchg
mov
cwtl
xchg
push
loop
cmpb
pop
cld
inc
xchg
roll
mulb
jo
jmp
xor
into
dec
iret
jmp
rorb
lock
jno
je
in
and
jp
xchg
mov
xor
push
push
mov
or
xchg
fnsave
std
std
adc
leave
or
mov
lock
fistl
mov
push
or
mov
xchg
push
data16
addr16
xchg
js
arpl
mov
movsl
leave
push
test
or
push
xor
or
xorl
popf
push
ljmp
call
lret
mov
sub
pop
nop
xchg
dec
push
lods
out
in
push
in
mov
push
arpl
xchg
dec
shlb
mov
jb
cmp
add
xchg
notb
mov
imul
enter
cmpsl
cmp
dec
jle
insb
xor
adc
push
sti
pop
fcomps
call
cmp
orb
or
mov
rcll
es
test
shlb
fiaddl
jmp
mov
es
std
scas
out
sub
xor
mov
pop
cmc
stos
iret
mov
cmp
bound
fstl
add
cli
iret
mov
cld
mov
cmp
data16
out
sti
adc
sbb
negl
out
mov
scas
pop
sarb
decb
lret
rcrl
movsb
sbb
je
rolb
jl
repz
xchg
inc
cmp
inc
sub
sbb
out
fwait
scas
loopne
int
das
push
xchg
mov
or
clc
jae
push
jne
int
add
into
cmp
push
ret
inc
ss
xor
mov
aad
jp
aaa
adc
push
fucomp
ret
lcall
call
popf
mov
sub
mov
cmovle
in
add
imul
imul
inc
jbe
data16
jae
inc
ss
mov
notb
xchg
mov
cmpsb
and
inc
add
data16
jae
inc
ss
mov
notb
xchg
mov
cmpsb
and
inc
arpl
repz
jae
inc
ss
mov
notb
xchg
mov
cmpsb
aaa
push
outsl
inc
pop
jbe
data16
arpl
inc
ss
mov
notb
jns
dec
sub
mov
mov
and
sbb
and
fisubs
adcb
add
push
lock
loopne
adc
and
push
loopne
shlb
sbb
nop
and
jo
popa
rclb
loopne
adc
and
push
loopne
shlb
pusha
xor
shll
xchg
adc
rorl
jmp
inc
cmp
dec
jmp
jae
cmc
sbb
fdivr
xchg
jmp
mov
inc
pop
mov
jge
lock
loopne
sub
sub
in
jg
movsl
inc
daa
shlb
push
lock
cli
pop
leave
movsl
pop
xor
sbb
xor
lock
jmp
shll
pop
mov
xchg
sbb
inc
mov
rcrb
xor
inc
and
pusha
ds
lret
loope
fs
lods
psubusb
leave
sub
dec
inc
xor
int3
popf
dec
mov
lock
push
mov
jg
fistl
mov
and
loopne
push
xchg
shlb
xchg
xchg
lock
cmc
jae
mov
and
push
loopne
shlb
pusha
xor
add
push
lock
mov
adc
inc
xor
and
ss
xor
jmp
inc
aam
xchg
and
jne
gs
shll
cmp
or
sbb
stc
insl
jecxz
lds
cmpsb
sub
inc
in
mov
loopne
shlb
pusha
xor
add
push
lock
loopne
adc
and
push
loopne
shlb
pusha
xor
add
push
lock
loopne
adc
push
and
xor
dec
jne
sbb
adc
jg
pop
sub
push
ss
push
test
inc
xchg
jecxz
sub
pop
dec
sub
xor
jmp
sbbl
dec
sbb
daa
mov
add
push
push
imul
test
popf
add
into
inc
fcoml
push
ja
jne
cs
push
lods
aaa
cmp
out
popa
pop
inc
jl,pt
aas
sbb
aam
outsl
pop
push
dec
outsb
xor
fdivrp
jne
mov
cmp
sbb
adc
xchg
add
dec
adc
ret
fadd
lods
icebp
push
xchg
pop
js
mov
mov
insl
and
insl
das
or
pushf
or
popa
pop
pop
dec
inc
jnp
cmp
enter
jae
mov
xchg
in
dec
jle
mov
inc
clc
int
sahf
lds
cs
fmuls
je
jno
jne
add
dec
cltd
mov
out
or
sbb
lods
dec
add
xchg
sar
popw
inc
movsb
mov
in
jg
cmp
in
mov
fidivs
inc
scas
inc
aaa
pusha
cmp
adc
insb
repnz
mov
pop
pop
mov
xchg
xor
mov
daa
add
mov
mov
or
in
push
dec
sub
dec
fs
pop
pop
mov
pop
jb
in
xchg
cmc
lock
aam
fimull
test
sbb
lds
xorb
lods
mov
lret
xchg
shlb
insl
mov
jne
sahf
mov
mov
cmc
add
push
cld
jmp
push
fwait
cltd
out
mov
xor
dec
scas
aad
or
lods
xchg
sbb
dec
cmpsb
sub
mov
ret
push
cmpsb
sbb
pop
push
lcall
arpl
fucomip
jg
xor
or
mov
sub
es
xchg
cltd
mov
std
addb
dec
cmpsl
sbb
jp
cs
stc
jmp
sbb
pop
xor
sbb
cltd
fxch
mov
in
int
jb
popa
stc
lahf
mov
cli
jb
pop
push
int
stos
js
jns
stos
inc
dec
xchg
pop
mov
cmp
pushf
js
inc
and
call
push
mov
push
xchg
adc
aad
sbb
sub
lds
xor
lds
daa
nop
fimull
and
sub
imul
repnz
adc
and
cmp
push
mov
and
jg
mov
sbb
loopne
pop
rcrl
mov
fcomps
scas
inc
clc
or
mov
cld
add
mov
mov
ret
mov
or
lock
movsl
incb
imul
adc
sahf
and
inc
bound
mov
gs
fdivs
dec
ficompl
dec
enter
lods
sub
cld
movsl
inc
xchg
or
pop
jg
es
outsb
cwtl
or
inc
lock
sub
daa
mov
leave
repz
insl
in
movsl
mov
push
xor
mov
icebp
daa
sbb
jae
shlb
cli
adc
icebp
daa
jl
and
inc
movsb
lret
sbb
cmp
adc
je
rol
stos
outsl
sbb
xchg
inc
fwait
cmp
ss
inc
mov
jbe
test
inc
dec
fdivl
mov
sub
lods
sahf
xor
test
mov
mov
xor
subb
iret
add
ss
mov
mov
push
sbb
rorl
inc
lret
inc
cld
jle
scas
dec
jl
jb
xchg
xchg
mov
mov
popf
fmuls
or
movsl
ss
xchg
mov
or
pop
lock
dec
mov
jb
cmp
int3
dec
lea
imul
fsubs
mov
and
or
arpl
dec
or
push
sarb
fcmovu
cs
daa
dec
pop
shrl
cmp
aas
mov
mov
bound
insl
rorl
bound
fs
jle
pop
adc
push
lods
jl
jmp
xor
adc
mull
cmpsl
xchg
fdivrp
shrb
sbb
dec
int
or
test
and
push
add
push
or
sti
xchg
push
test
cld
lea
xor
adc
pop
repnz
leave
addr16
xchg
gs
xchg
mov
add
jo
push
clc
outsl
loop
xchg
test
add
inc
movsl
add
mov
and
dec
sub
out
lcall
add
aaa
cmp
and
add
outsb
push
and
test
push
lea
popf
adc
nopl
sbb
stos
sub
shl
sti
inc
jecxz
mov
jo
mov
inc
leave
mov
xchg
cmp
fistl
cmp
sbb
sub
adc
ret
data16
pop
mov
mov
push
and
mov
dec
jns
clc
out
sub
mov
push
push
shrb
jmp
sub
mov
adc
dec
xchg
jns
pop
dec
repz
mov
fwait
sub
adc
xchg
lret
cmp
outsl
imul
push
cmp
xor
bound
inc
in
pop
xchg
push
pop
into
jb
dec
cmp
cltd
outsb
neg
pop
xor
addr16
xor
cwtl
gs
call
push
cmp
dec
out
test
sti
or
jne
ss
xor
icebp
or
jae
xor
ds
and
add
push
mov
outsl
push
jmp
pop
je
dec
jne
cmp
mov
xchg
mov
arpl
mov
xchg
mov
and
imul
call
mov
dec
or
and
sahf
lcall
mov
and
mov
and
aam
mov
sub
inc
mov
adc
dec
mov
jne
mov
nop
sbb
movsl
cmpl
ds
je
cmp
and
nop
lods
cltd
mov
dec
and
aas
adc
jmp
daa
pop
fldenv
in
sub
pop
add
jne
dec
inc
mov
arpl
xchg
bound
fcmovbe
je
mov
adc
aad
in
in
cmp
sub
aas
iret
les
inc
jle
lods
mov
nop
call
ja
in
sbb
out
add
xchg
adc
or
repz
lret
sub
loop
push
movsb
lds
sub
push
add
pop
dec
mov
lock
mov
add
pop
jno
push
fcomps
es
jle
pop
imul
or
lods
inc
inc
fst
lahf
leave
or
mov
mov
pop
pop
divl
mov
scas
or
jmp
jmp
sub
stc
mov
pop
ret
lods
sbb
lahf
push
inc
addl
mov
jb
sbb
lods
sub
adcl
addr16
shl
pop
mov
sbb
adc
call
push
xlat
int
lcall
loope
push
and
push
jle
ja
xor
sbb
js
lds
lock
nop
mov
cs
mov
stc
in
ret
sbb
aad
cmp
dec
int3
icebp
add
mul
js
leave
popf
scas
sub
jns
cmpsb
roll
mov
sbb
inc
pop
arpl
cmp
sbb
add
lret
or
shll
adc
std
cmpsb
fnsave
mov
hlt
jmp
and
adc
xchg
rcll
loopne
mov
pop
inc
and
cmp
pop
aam
dec
pushf
cmp
in
clc
inc
jbe
adc
pop
and
shr
imul
sub
jecxz
or
and
mov
cltd
daa
outsb
cmp
cmp
arpl
icebp
and
movsb
lods
adc
and
jle
add
mov
push
mov
xor
insl
repnz
push
adc
imul
cmp
out
jnp
xchg
sbb
add
and
xchg
int3
inc
shlb
push
dec
xchg
in
movsl
pop
and
mov
mov
movsl
bound
push
cmpl
lea
push
cmp
mov
aam
push
jne
add
stos
push
outsl
sbb
push
mov
loopne
mov
lcall
sbb
js
dec
pop
inc
adc
inc
sub
pusha
icebp
sub
dec
mov
xchg
cld
out
cmp
add
inc
bound
movsb
xchg
jae
mov
out
or
outsl
fistpl
lock
push
cmp
push
and
xchg
lret
stc
jge
jmp
test
adc
sub
jns
nop
sbb
movsb
mov
add
xchg
fsubr
adc
pushf
das
xchg
shll
add
rcll
bound
in
mov
pop
divb
xchg
sbb
or
pop
add
ret
mov
adc
inc
lea
inc
xor
cmp
cmp
mov
dec
call
std
scas
es
clc
fistl
lret
xchg
outsb
push
jge
test
jl
shrl
stc
scas
imull
fisttpl
es
aaa
jge
pop
and
mov
xchg
cmp
jecxz
cmpsb
imul
stc
add
push
adc
sub
push
adc
xchg
into
ss
sbb
pop
lret
es
inc
push
lret
adc
sbb
or
push
es
xor
push
popl
cmp
adc
xor
into
sub
sub
push
rclb
and
faddl
dec
shrb
jo
sub
out
push
cs
stos
jb
clc
rolb
loopne
cmp
fldl
fucomp
call
cmp
ret
loope
or
repz
inc
stos
mov
mov
clc
push
add
jne
mov
sahf
sub
xor
lahf
in
pmaxsw
fisubs
add
outsb
jl
or
das
stos
cwtl
data16
scas
inc
pop
rcll
popf
push
scas
cmp
add
jbe
push
loopne
jne
mov
fwait
push
inc
cmp
or
xchg
cmc
jg
pop
lahf
lcall
cmpsb
popf
cmp
sbb
sbb
sbb
clc
shrl
jo,pn
insb
jmp
push
cmp
xorl
jbe
nop
aaa
adc
jb
aad
pop
insb
orb
sbb
test
rorb
imul
pop
inc
push
sbb
out
dec
cmp
sbb
sbb
outsl
and
inc
je
mov
mov
enter
mov
adc
dec
xchg
imul
mov
int3
aas
adc
push
sub
lds
adc
imul
adc
fbld
xor
imul
push
or
insl
or
dec
jmp
pop
sbb
and
scas
jmp
popf
or
or
or
test
inc
loope
sar
mov
in
cmp
add
adc
adc
cwtl
xor
fs
dec
sub
jae
cmp
lea
push
jo
xchg
pushf
stos
pop
andb
xchg
mov
hlt
push
fildl
pusha
sub
dec
pop
in
nop
pop
add
inc
xchg
xor
cmp
lods
je
sahf
inc
push
sub
test
sahf
cmp
jb
call
gs
cltd
mov
imul
imul
pop
xchg
adc
mov
xchg
ss
adc
push
lahf
mov
or
sbb
jno
jp
jg
addr16
outsb
in
out
insl
xchg
sbb
cli
fstpt
sbb
dec
stos
pop
scas
pop
sbb
lds
notb
sbb
mov
push
cmp
xor
xchg
ds
cwtl
push
cmc
xchg
mov
je
dec
into
divl
std
mov
mov
ror
test
jg
insl
out
out
push
sbb
fldt
sub
mov
mov
lods
add
mov
lret
cld
repz
rol
mov
aad
loopne
pusha
mov
mov
push
pop
xchg
int
rolb
adc
jl
add
les
call
out
out
sub
jp
lods
dec
fisttps
ss
adc
ja
jl
sub
test
add
sub
test
js
inc
add
adc
ss
mov
out
cmpsb
cmp
mov
sub
mov
pusha
mov
outsb
into
sbb
sahf
push
lock
mov
enter
and
popf
mov
into
shlb
into
cmp
popf
je
in
mov
arpl
sbb
mov
cld
jp
and
sti
mov
andb
lds
inc
mov
fbld
cmp
aam
sahf
insb
fnstenv
jns
pushf
lock
add
dec
adc
movsb
dec
insl
mov
mulb
adc
dec
cmpsb
sti
mov
cld
int
aad
adc
inc
repz
lods
sub
and
fcompl
dec
xchg
add
push
dec
aas
fildl
ljmp
inc
setb
imul
xor
popa
pusha
xchg
mov
push
fstpl
mov
cmp
jb
sarb
xchg
sub
es
cwtl
rorl
fimuls
or
or
fcom
adc
xorb
push
push
clc
inc
lds
inc
sbb
xchg
mov
sti
or
icebp
jo
mov
jno
push
mov
xchg
pop
pushf
push
and
push
mov
loope
inc
or
jne
sbb
sub
out
lock
jmp
mov
loop
imul
test
add
cmpsb
decb
sahf
fistpll
lcall
pop
cld
pop
mov
dec
dec
cwtl
test
repnz
outsl
jp
rcrb
mov
jmp
mov
sbb
mov
enter
push
movsb
cmp
sahf
aad
push
stos
jns
mov
and
les
or
push
in
popf
jns
xchg
pop
mov
push
cmp
scas
dec
iret
data16
out
push
mov
push
imul
movsl
pop
inc
repnz
xor
orl
pop
xchg
test
pop
cmp
shl
pop
add
stos
je
cld
outsb
in
test
pop
dec
sar
inc
in
jno
dec
rolb
xchg
shlb
jnp
xor
pop
mov
cmpsl
mov
sbb
mov
xchg
fwait
aam
jae
in
cmp
mov
sbb
rcl
ljmp
inc
dec
adc
mov
fs
pop
es
mov
xor
pop
mov
mov
inc
js
mov
xchg
push
inc
lret
sbb
fwait
sahf
sbb
je
sahf
and
add
push
mov
mov
jecxz
sub
xchg
lret
imul
mov
inc
lods
outsl
and
and
sbb
arpl
cld
bound
xchg
xchg
leave
xchg
cwtl
jo
movsl
cmc
rorl
and
push
lret
int
ret
or
adc
js
pop
xchg
pop
mov
jmp
lock
fdivrs
hlt
xor
or
sub
jmp
ds
inc
fbstp
cmc
scas
lret
test
in
xor
inc
jg
shlb
lret
jp
sub
cmp
mov
adc
pushf
leave
and
sub
cwtl
sub
test
leave
mov
jle
shlb
dec
insb
mov
in
cwtl
sbb
cmc
outsl
xchg
adc
dec
jmp
push
outsb
pop
shlb
dec
add
andb
xchg
roll
mov
mov
or
inc
and
jecxz
mov
cmpsb
subb
iret
or
pop
sub
pop
cmp
mov
leave
lds
mov
add
fisubs
push
push
cmp
imul
popa
jp
cmp
sahf
or
mov
imul
je
es
fld
loop
aas
stc
in
testb
stc
xor
lret
adc
sbb
shrb
out
lahf
sub
das
push
ds
loope
nop
and
lock
mov
sub
stos
mov
outsl
subl
stos
lds
ja
sbb
sub
jb
push
push
inc
aas
daa
fnstenv
adc
push
cmp
xchg
mov
jae
mov
std
dec
out
pop
ljmp
scas
push
mov
xchg
cli
inc
ss
ja
in
in
jmp
out
xchg
and
pop
push
pop
lock
adc
aam
mov
sub
bound
dec
lcall
rorb
xchg
jecxz
in
adc
in
iret
push
jle
and
pop
mov
mov
pop
xor
stos
and
sub
lret
pop
lds
xor
loopne
cmpsb
outsl
push
pop
adc
fwait
fs
imul
inc
mov
js
dec
xor
cmp
js
xor
adc
push
sub
mov
dec
dec
jmp
pusha
jp
popf
mov
ret
repz
pop
out
inc
sbbb
or
inc
sub
add
std
or
loope
xchg
es
inc
ret
adc
out
pop
inc
fwait
add
add
ret
push
pop
push
jp
xlat
ret
cmp
nop
push
add
stos
inc
sub
sahf
push
cmp
push
add
out
jg
je
stos
pop
mov
daa
loope
hlt
inc
es
into
cwtl
in
pop
ja
push
mov
jno
add
dec
sbb
mov
outsb
scas
out
sub
popa
iret
or
sub
loopne
mov
cs
mov
or
arpl
js
fcmovnb
pop
mov
add
dec
pop
aam
in
int
jae
jne
in
test
loop
sbb
imul
sbb
mov
xor
xchg
pop
inc
rcl
rorl
rol
pop
dec
aam
mov
jle
inc
fcmovu
das
mov
inc
xor
mov
inc
ret
xchg
sbb
pop
dec
xchg
aad
hlt
mov
js
inc
push
daa
rorb
clc
or
movsl
pop
sub
rcl
test
hlt
pushf
fldln2
pop
ds
inc
or
cmp
sbb
pop
jecxz
in
inc
adc
testl
xor
jl
aad
lahf
outsl
xchg
sti
xor
adc
push
pop
scas
and
or
imul
mov
xor
shlb
imul
dec
jp
xor
fnstcw
insb
les
inc
scas
aas
clc
popa
es
call
push
aad
pop
fidivrl
iret
fisttps
mov
cld
xor
jae
inc
adc
jl
add
mov
mov
add
adc
jl
addb
idivb
cmpsl
cmp
add
push
popa
insb
sub
rcl
jmp
dec
inc
mov
mov
test
cmpsl
outsl
xchg
and
enter
cli
movsl
cmp
fwait
popa
or
pop
fadd
rorb
mov
das
shlb
hlt
fwait
inc
pop
fistl
js
cld
xor
jp
and
xchg
fmuls
jb
je
daa
mov
sbb
cmp
add
sub
lea
or
in
in
adc
jnp
sub
adc
or
sub
or
and
jecxz
dec
cmp
inc
stos
fcoms
dec
pop
jb
mov
mov
sub
and
incb
pop
out
push
fiadds
in
pop
push
pop
push
pop
repnz
bound
jge
pop
les
inc
and
pop
inc
outsl
cmp
mov
push
cmpsl
les
test
mov
clc
sarb
sbb
test
or
test
xchg
add
mov
fisttpl
aas
dec
adc
add
popa
popf
aaa
movsl
cmp
mov
add
xor
lret
fwait
lock
arpl
test
pop
push
add
jecxz
shrb
xchg
lret
andb
cmpsl
clc
lahf
dec
fdivrl
lds
into
inc
stos
inc
movsb
cltd
mov
imul
push
pop
shrb
lret
push
divb
jge
incl
push
or
push
scas
shl
xor
lods
pop
mov
add
xchg
inc
or
xchg
int
lods
pop
imul
mov
icebp
and
sarb
adc
test
jg
mov
xor
push
sub
iret
jae
movsb
mov
xor
ss
inc
pop
mov
adc
call
xchg
lods
in
or
dec
mov
ffreep
jge
std
sub
hlt
dec
in
test
inc
adc
xchg
sbb
and
aas
mov
loope
bound
fnstsw
or
pop
sub
ret
push
xor
stos
fnsave
dec
ja
ljmp
cmp
pop
lahf
cmp
xchg
out
bnd
jp
inc
outsl
aas
inc
cli
xor
or
or
xchg
insb
adc
out
mov
pushf
mov
arpl
cmp
movsb
lret
test
xchg
out
pop
jb
jmp
out
add
enter
pop
testb
aam
cmpsl
mov
jo
dec
adc
or
xchg
adc
or
inc
das
sbb
push
pop
adc
mov
push
or
stos
lar
cwtl
inc
cmp
popf
scas
jae
pusha
mov
push
mov
stos
push
hlt
ret
subl
or
fwait
jb
adc
ret
dec
mov
mov
test
cmc
mov
push
icebp
cs
mov
and
iret
or
lea
icebp
dec
xchg
insb
inc
int
in
mov
fdivrs
jnp
sbb
cmpsl
adc
scas
xor
inc
shlb
pusha
xor
add
push
lock
loopne
adc
and
push
loopne
shlb
pusha
xor
add
push
lock
loopne
adc
and
push
loope
shlb
pusha
xor
add
push
lock
loopne
adc
and
push
loopne
push
jo
pusha
iret
nop
fildll
mov
pop
call
pop
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
push
sbb
ja
sub
es
sub
push
idivl
test
push
sbb
ja
sub
pop
pop
dec
aaa
js
push
idivl
mov
mov
cmpsl
call
outsl
cmp
push
pop
pop
dec
das
js
push
test
lahf
test
mov
lods
jmp
lock
ja
adc
inc
sahf
pop
mov
jnp
mov
cmp
jle
mov
adc
xchg
and
adc
xlat
cmp
je
pusha
push
and
sbb
mov
pop
adc
or
and
add
jg
jmp
iret
mov
jnp
mov
cmpsl
jmp
mov
pop
push
pop
enter
pop
stos
popf
ret
push
push
push
cmpsl
leave
pop
test
hlt
cli
out
xchg
call
xchg
xlat
fldl
mov
inc
pop
fwait
outsl
adc
mov
xor
cwtl
pop
call
mov
in
sub
cltd
mov
cmp
in
cmpsl
call
ja
sub
pop
pop
dec
aaa
js
push
out
mov
lahf
enter
scas
cmp
fistl
jle
outsb
fs
popa
or
daa
sbb
hlt
stos
loope
add
mov
mov
jp
lea
pop
es
sbb
pop
jg
cmp
je
xchg
frstor
les
ret
xchg
dec
sub
subps
pop
dec
aaa
js
push
idivl
xchg
mov
cmpsl
call
ja
sub
pop
pop
dec
aaa
js
push
idivl
xchg
mov
cmpsl
call
enter
jnp
add
jecxz
mov
daa
stos
sarl
or
cmp
neg
fldcw
hlt
leave
ljmp
movsb
cwtl
fldenv
repnz
daa
jbe
xchg
sahf
xor
dec
cmpsb
adc
push
mov
sbb
inc
mov
rcrl
xchg
std
dec
or
xchg
pop
test
mov
arpl
sub
sub
mov
cmp
push
rcrb
mov
movsl
xorl
pop
dec
inc
stos
test
jle
adc
dec
xor
stos
add
pop
inc
out
loop
daa
sub
push
repnz
test
jb
mov
inc
mov
xchg
sub
ss
mov
xchg
imul
jnp
ss
push
mov
clc
fisubs
and
dec
ja
dec
cs
stc
stos
mov
lret
repz
dec
inc
add
in
push
push
int3
insb
bound
push
lahf
jns
mov
xor
xchg
cmpsb
gs
dec
xchg
mov
or
adc
mov
mov
mov
sub
test
push
pop
jecxz
popa
mov
and
pop
inc
or
loop
cmp
lret
repz
in
ljmp
ret
mov
mov
fwait
shlb
shll
pop
int
or
outsb
jbe
push
or
push
mov
clc
pop
or
dec
cmp
xchg
test
sbb
test
pop
ror
nop
cltd
imulb
xchg
test
pop
add
inc
jge
loop
pop
jp
jo
xchg
je
shll
incb
daa
mov
push
sub
cmp
rcrb
js
sbbl
sbb
ja
add
xchg
ljmp
cmp
mov
loope
sub
je
sbb
jae
cmp
shrl
test
xor
icebp
jl
aam
xor
aam
push
out
sbb
jo
mov
pop
std
stos
mov
jecxz
jbe
rorb
mov
push
out
aas
icebp
aaa
jmp
outsl
xchg
pop
jne
push
lret
mov
lea
int3
inc
pop
cvtps2pd
subl
push
or
cmp
int3
adc
mov
fs
int3
cmpsl
std
dec
lret
lock
test
mov
mov
jg
ret
jge
inc
and
and
jge
add
pushf
mov
xor
fwait
fwait
or
lds
cmp
cmpsl
xchg
loop
pop
mov
lahf
cmp
dec
shlb
sar
fdivrs
jle
es
push
xchg
mov
aam
cmp
xchg
ds
xor
push
mov
inc
sub
dec
lds
jle
div
xor
ljmp
jnp
aas
shrl
mov
sbb
pop
inc
cmp
les
loope
rorl
pop
test
ljmp
pop
imul
ret
stc
cld
inc
sbb
pop
xchg
scas
adc
outsl
in
jne
jg
adc
les
int
push
pusha
js
dec
leave
ds
in
inc
pop
jp
mov
mov
dec
xchg
test
lret
lds
cmpsl
mov
cmpsl
pusha
push
iret
push
popf
inc
mov
pop
dec
int3
stos
adc
sbb
lret
enter
ret
fistps
ljmp
outsl
movsb
adc
lods
lahf
push
imul
faddp
shlb
xlat
xchg
sbb
add
jmp
xor
sub
movsb
aaa
imul
es
fsub
add
sub
fcos
jns
push
sti
sbb
mov
dec
and
mov
into
jns
inc
push
pop
sbb
add
fcmovnu
cmpsb
add
sti
add
jns
push
movsl
int
and
add
and
data16
call
xchg
adc
lods
cltd
rcrb
add
xor
mov
or
movb
cmp
clc
pop
dec
and
sbb
push
xchg
sbb
xchg
lods
pop
insb
jecxz
xor
cs
add
hlt
popa
inc
jp
out
js
push
movb
jp
xchg
lods
rol
inc
xchg
cmpb
cmp
push
inc
sbb
push
scas
mov
sbb
mov
bound
pushf
test
sub
inc
lcall
fisubl
ucomiss
mov
pop
sub
and
insl
sub
adc
pop
pop
xchg
xor
testl
lock
dec
or
js
rclb
pushf
pop
imul
mov
jb
adc
push
lcall
and
leave
loopne
dec
mov
dec
clc
inc
jle
leave
mov
test
in
push
sbb
jmp
addb
fisubl
xchg
test
out
lds
scas
lret
sub
cli
xchg
repz
ret
mov
adc
mov
cmpsl
mov
inc
pop
fcomps
sahf
dec
dec
add
or
sub
lret
ljmp
rcrl
inc
loope
pop
into
mov
sbbl
xor
subl
push
or
sbb
sbb
mov
push
sti
dec
and
inc
xchg
sbbb
push
pusha
nop
orl
jg
arpl
iret
xchg
mov
push
jg
or
adc
xchg
in
mov
lahf
inc
and
popf
fldenv
pop
clc
inc
lahf
mov
xor
stc
inc
xlat
pop
mov
js
cmp
mov
inc
in
imul
jbe
call
rcrl
popf
and
mov
xchg
inc
xor
and
aaa
xor
mov
ficomps
fistpll
mov
cmp
mov
jb
repnz
orb
pushf
pushf
and
dec
das
xlat
mov
and
jmp
xor
leave
add
out
mov
cmp
sbb
cmp
pop
dec
add
xor
int
movsb
cmp
rclb
and
jnp
push
scas
xor
mov
adc
pop
inc
loopne
fdivrl
add
pop
mov
ficomps
pushl
shr
xchg
jbe
xchg
pop
mov
jb
sub
shlb
fdivs
lcall
mov
ret
cmp
sub
pusha
jno
sahf
dec
sahf
xchg
or
inc
das
out
decl
shlb
jo,pt
mov
adc
sahf
inc
call
xor
leave
mov
out
add
lcall
mov
add
add
mov
push
inc
xor
inc
js
testl
add
or
icebp
xor
fimull
jg
xchg
mov
jbe
adc
mov
lret
out
sti
xor
xchg
xlat
inc
movsl
mov
sahf
inc
aam
xchg
inc
jge
jns
cmp
xor
fiadds
mov
fld
xchg
ficompl
inc
out
into
or
push
popa
out
movsb
lret
xchg
fcompl
and
cld
lahf
jbe
pop
mov
sub
push
icebp
push
in
mov
adc
idivl
push
push
push
pop
mov
jbe
pop
daa
sub
das
lret
js
icebp
xchg
push
mov
hlt
dec
scas
mov
add
mov
repnz
sbb
cmpsb
or
adc
adc
jecxz
cmp
jb
cwtl
pop
mov
mov
js
pop
jne
test
sub
push
adc
fnsetpm(287
lret
mov
cli
shl
or
repz
out
fisttps
jmp
das
jnp
mov
cltd
psubd
ret
mov
add
ret
mov
test
xchg
loope
mov
mov
lcall
push
jp
sahf
pop
test
lock
or
inc
stos
pop
adc
inc
les
mov
add
mov
loope
or
popf
insl
adc
out
ds
stos
repz
mov
mov
xchg
lods
rorl
loopne
sbb
imul
xchg
cmpsb
jp
pop
xchg
jle
outsl
rcll
rcrl
das
sub
pop
imul
or
cmp
pop
pushf
stos
arpl
pop
mov
inc
mov
dec
push
dec
mov
pop
or
sub
je
bound
cmp
sub
insl
shll
mov
adc
fs
jg
das
in
insb
rcll
outsl
xor
cmp
arpl
push
test
mov
popf
adc
ds
push
cmp
pop
or
or
xor
push
lods
xchg
push
orb
icebp
add
stos
lahf
loope
fldl
jno
popa
dec
mov
dec
loopne
lcall
push
test
cmp
inc
push
outsl
xor
jle
jmp
mov
mov
pop
cmp
xchg
inc
jge
ss
lock
les
jmp
adc
je
aam
add
adc
jnp
pop
push
pop
fidivl
xor
addl
int3
in
inc
std
call
xchg
pop
mov
mov
test
pusha
ret
dec
mov
popf
and
mov
fbstp
push
and
add
xchg
jns
dec
xlat
mov
insb
jge
adc
push
frstor
inc
scas
loopne
scas
sahf
sub
ret
divl
lret
adc
in
jne
lea
xor
cmp
adc
cli
xchg
cmp
cs
imul
inc
mov
je
cmp
mov
loope
icebp
cmpsb
jb
es
sbb
push
mov
movl
jnp
inc
dec
cmp
enter
orl
mov
sub
xor
adc
mov
fnstcw
jge
and
lods
adc
ret
and
and
inc
xchg
xor
insb
inc
jp
mov
pop
push
sub
mov
js
ret
stc
jns
popa
xor
test
cwtl
incb
mov
cmp
aad
xchg
out
sub
mov
aad
addb
jle
mov
jae
sbbb
mov
mov
adc
add
lret
mov
fstps
inc
jb
sbb
adc
mov
xchg
popf
add
inc
mov
xchg
add
stc
dec
mov
or
xor
sbb
xchg
inc
bound
jg
jne
test
push
lea
push
dec
push
flds
xchg
and
or
daa
loop
fcmovu
cmpsl
pushf
push
sub
sarl
or
mov
rcr
imul
in
lret
or
fisttpll
out
scas
ss
loop
in
fistps
or
push
ret
fs
addl
js
lods
inc
mov
jbe
mov
xlat
shlb
jmp
adc
push
inc
nop
test
insl
sub
aas
push
mov
popa
lret
in
dec
cltd
pop
stc
dec
mov
lock
jnp
pop
mov
pushf
adc
adc
and
sub
cltd
jns
test
ds
sbb
dec
push
jp
push
add
inc
xlat
lahf
jb
mov
fistpl
mov
add
xor
or
push
int
adc
and
mov
sahf
push
pop
sbb
adc
popf
push
repnz
notb
xchg
fldcw
out
pop
pop
dec
inc
jg
xchg
jo
fwait
repz
or
and
lcall
fists
mov
cwtl
mov
mov
movntps
stos
pop
mov
lcall
ficomps
xor
bound
pop
fs
xchg
frstor
in
dec
cmpl
push
push
xor
int3
cwtl
xchg
mov
cmpsl
push
lcall
out
jne
xchg
mov
cwtl
scas
jp
out
mov
inc
cmp
push
insb
push
xor
fwait
mov
push
into
adc
jns
xchg
pop
aas
xchg
pop
clc
mov
mov
test
pushf
lods
test
js
sub
fcoml
aas
dec
and
pop
cld
idivb
inc
imul
xchg
sub
aas
sbb
add
loop
jns
add
insb
xor
xlat
pusha
ret
dec
popf
inc
mov
dec
lock
dec
add
cmpl
inc
fcoms
mov
cmp
pop
sbb
adc
mov
xchg
or
or
mov
push
jp
add
dec
adc
ja
pop
sbb
sbb
mov
add
xor
mov
or
pusha
loop
add
lret
jge
nop
clc
sbb
jbe
inc
xchg
sahf
mov
cmp
xchg
cmpsl
pop
push
xchg
dec
rclb
pop
int3
xchg
mov
lock
roll
int
loope
add
in
sbb
loopne
imul
jp
xor
js
mov
clc
fmuls
xchg
fcompl
mov
and
pusha
and
shrl
mov
push
and
dec
lret
dec
jne
dec
insb
in
rorb
sub
sub
jbe
xchg
insl
sbb
loopnew
dec
test
push
sub
pop
push
or
mov
adc
pop
dec
or
pop
scas
lahf
add
jg
mov
in
xor
pop
or
mov
or
int
pop
push
inc
sub
clc
loopne
mov
into
lcall
mov
popa
and
xlat
test
ds
ss
adc
faddl
pop
push
mov
jge
or
je
aas
cli
push
imul
test
push
mov
and
inc
jl
xor
lahf
call
js
mov
mov
ljmp
enter
jno
push
aas
and
and
sub
pop
leave
decb
add
into
and
flds
pop
xor
inc
jecxz
shl
pop
xchg
push
pop
adc
jae
jb
leave
repz
clc
mov
sbb
cmc
sub
xor
xchg
faddl
iret
jo
gs
push
xor
test
jg
stc
pop
cmp
jl
push
or
pushf
dec
in
out
rorb
dec
cmp
imul
dec
inc
pop
xchg
pusha
and
leave
addr16
lea
push
test
jbe
popf
test
inc
in
jecxz
jo
loop
fmull
push
sbb
lcall
jnp
scas
jge
test
int3
push
dec
pop
jb
xchg
cli
push
pop
pop
sbb
lods
mov
inc
insl
ja
or
lea
ljmp
int
xor
xorl
popf
pop
mov
adc
jne
jno
insl
add
cvtps2pi
push
std
mov
add
test
pop
jne
xchg
outsb
inc
dec
push
mov
stos
test
test
xchg
cld
jmp
jb
jl
movsb
add
dec
xor
pop
leave
sarb
or
sub
repnz
or
sub
cmp
movsl
xor
std
mov
ljmp
sahf
cmpsb
movsb
xor
and
xor
rorl
inc
cs
enter
cmp
call
xchg
xor
subb
in
js
xchg
xchg
jp
mov
sbb
in
add
aaa
gs
pushf
mov
lcall
das
push
and
lea
imul
repz
dec
sbbb
dec
repnz
jnp
mov
ds
sbb
andl
sahf
cmc
mov
jo
pop
scas
xor
repz
je
dec
mov
pop
test
imul
in
push
jns
jo
call
inc
push
scas
jecxz
push
mov
or
pop
rcrl
je
hlt
or
dec
loopne
sbbb
xchg
fidivrl
pop
xor
stos
rorl
mov
jmp
outsb
cmp
sbb
adc
ss
notb
pop
push
rorl
pop
test
dec
insb
add
pop
les
xchg
movsb
lock
outsb
xor
ret
pop
testb
sub
ror
xchg
jge
sbb
aaa
jp
fldenv
add
sub
inc
mov
inc
stos
idivl
idiv
cltd
sbb
int
jp
sbb
fld
movsb
in
sarb
push
pop
push
jl
dec
dec
pop
dec
mov
pushf
mov
sti
in
ror
ret
stc
mov
cmp
jl
mov
mov
xor
dec
mov
in
xor
testb
inc
insb
sub
xchg
dec
xor
or
sub
mov
inc
mov
mov
jnp
sbb
jns
mov
jg
xchg
pminub
mov
pop
out
add
stos
insl
xchg
mov
fnstcw
xor
int3
push
lcall
xchg
cmc
jbe
inc
pushf
clc
lret
insl
or
inc
mull
jne
cmp
negb
in
popf
mov
arpl
lcall
aaa
xor
lret
cmp
popa
leave
test
pop
pop
inc
cmp
int3
jecxz
je
fisttpll
push
ret
push
adc
jl
leave
xlat
bound
pop
insb
add
inc
mov
inc
loop
jl
lret
xor
loope
jns
fbstp
sub
popa
ljmp
movsl
scas
xor
mov
xor
add
lods
scas
cwtl
mov
cmpsb
insb
dec
jae
in
int
aam
fiadds
jae
pop
sub
loop
and
mov
ljmp
arpl
push
clc
and
add
xor
inc
fists
xlat
pushf
popf
scas
in
adc
mov
push
jmp
inc
fildll
aad
sub
notl
aaa
insb
push
mov
movsb
add
inc
aam
test
mov
push
cld
stos
add
lods
in
jmp
rep
adc
repz
push
jle
adc
mov
inc
sbb
aaa
pop
and
cmpb
test
push
sahf
and
fldenv
bound
cltd
flds
ret
daa
scas
push
loop
sahf
mov
cwtl
das
xchg
out
loop
fnstsw
mov
pop
add
jge
fcmove
and
cmp
cmp
lds
mov
and
mov
lds
push
lahf
pop
xlat
adc
mov
ds
repz
add
fimuls
test
sahf
jmp
push
lcall
cmp
cmp
mov
sti
lods
mov
ror
sub
mov
fsubs
mov
ljmp
aad
mov
mov
into
or
push
subl
mov
sbb
mov
in
ret
mov
jle
fldl
sub
rclb
mov
lahf
and
sbb
jl
mov
andb
sub
cmp
sub
add
push
fnstenv
hlt
lret
pop
mov
cs
inc
shlb
repz
popf
mov
addl
addb
xor
out
ds
jle
sbbl
inc
xchg
ds
loope
aam
mov
xor
fnstsw
add
jbe
or
test
pushf
aaa
ffreep
into
and
inc
iret
mov
loopne
dec
add
xor
cmp
mov
xchg
xchg
xchg
sub
daa
sub
mov
fs
addr16
leave
enter
in
ror
xlat
loopne,pn
add
inc
fs
sbb
fs
decl
cmp
push
adc
arpl
pop
lds
mov
inc
push
add
rclb
dec
ljmp
scas
divl
dec
push
fimull
nop
jo
ret
mov
movsl
ficoms
push
xchg
out
and
jl
ss
imul
pop
xor
ret
cwtl
push
pop
nop
loope
leave
in
jle
jmp
subb
push
mov
cmp
xchg
ss
addl
jo
xlat
mov
leave
fmull
gs
dec
aad
jl
sbbl
iret
iret
add
int3
les
add
in
jle
inc
inc
hlt
test
inc
sbb
cwtl
sahf
out
dec
out
iret
cmp
test
test
in
ret
fildll
xchg
adc
or
add
xchg
pop
int3
adc
xchg
pop
cmp
pop
enter
call
add
mov
push
mov
es
sbb
jp
pop
movsb
dec
jge
xchg
inc
leave
std
push
sbb
mov
loop
push
movsl
cmp
pop
lret
add
sbb
flds
idivl
xchg
jmp
negl
pop
fsts
bound
cli
push
mov
call
movsb
out
jp
adc
movsb
adcb
in
popa
mov
out
movb
xchg
roll
dec
lock
jo
jp
in
rorl
sti
repnz
adc
push
xchg
jge
push
and
mov
fnstenv
movsb
rcr
lret
mov
mov
lret
mov
inc
and
aaa
cmp
fstpl
push
test
pusha
inc
mov
cmp
cld
scas
in
nop
adc
mov
lret
and
cmp
arpl
dec
and
addr16
mov
insl
pop
adc
cli
sbb
pop
push
das
xor
imull
xchg
daa
cli
xlat
ljmp
data16
sub
pusha
fsubr
movsl
push
gs
leave
pcmpgtw
cld
scas
test
movsl
and
mov
aaa
mov
jg
rorb
adc
sbb
call
adc
push
mov
jg
mov
fs
pop
xlat
cmp
adc
mov
and
cmp
jge
sub
pop
pop
dec
aaa
js
push
idivl
xchg
mov
cmpsl
call
ja
sub
pop
pop
dec
aaa
js
push
idivl
xchg
mov
cmpsl
call
ja
sub
pop
pop
dec
aaa
jns
push
idivl
xchg
mov
movsl
call
jbe
addr16
pop
pop
enter
xchg
sub
and
out
loopne
getsec
dec
pop
pop
pop
fwait
sbb
test
push
cwtl
push
lret
xchg
push
gs
jne
inc
push
adc
es
test
aad
movsl
xchg
mov
cmpsb
loope
gs
push
pop
inc
push
push
dec
bound
or
inc
cmc
jo
and
xchg
pop
lea
sub
adc
pop
es
pop
inc
jno
adc
mov
xchg
sbbb
movsl
dec
gs
iret
jns
in
adc
jae
pop
dec
fisubrl
in
lahf
outsl
imul
lds
xlat
rolb
and
xchg
and
divb
in
lock
data16
push
div
ret
push
push
call
cwtl
fsubr
add
jns
xchg
and
mov
xchg
movsl
jns
mov
movsb
push
lcall
fwait
and
lret
flds
lock
imul
push
mov
push
xor
adc
ljmp
inc
out
sbb
jle
xor
pop
imul
and
lret
ss
in
movb
movsl
ret
pop
push
adc
scas
push
js
jbe
sbb
ss
mov
mov
mov
clc
shl
fisubl
and
xor
xor
cmp
dec
push
je
mov
sub
xchg
jmp
stc
outsb
add
and
and
xor
arpl
fs
mov
mov
xchg
cmpsl
mov
roll
push
gs
jne
inc
push
push
and
es
test
aad
movsl
xchg
push
gs
jne
inc
push
push
and
es
pop
mov
cmp
cmpsb
jl
mov
sbb
outsb
pop
stos
sarl
add
aaa
fbstp
sub
or
aam
mov
xchg
loopne
cmp
div
mov
jmp
mov
outsb
jns
jns
sub
xor
scas
push
pop
hlt
lahf
and
xor
xchg
les
push
call
sbb
push
ds
mov
aas
cmp
movsl
hlt
lods
pop
into
clc
mov
dec
cmp
call
push
pop
icebp
add
ljmp
push
pop
hlt
rcrl
icebp
sbb
iret
das
cmp
inc
pop
inc
or
mov
js
sbb
mov
sub
pop
fisttpl
or
popa
push
leave
mov
sub
cwtl
ret
add
cmp
adc
rolb
cmc
mov
ret
mov
push
dec
add
lret
lcall
in
add
sahf
imul
ss
rol
ljmp
ret
lds
jne
xor
pusha
test
sub
aaa
ret
popf
into
push
pop
out
faddp
or
into
sub
cltd
ds
ret
cmp
sub
scas
push
jae
and
adc
jns
push
xchg
jne
and
icebp
nop
lcall
dec
jae
test
inc
jno
loop
mov
cmp
pop
into
insl
lds
dec
cmp
ret
lock
rclb
iret
add
pop
push
into
imul
pop
arpl
fwait
adc
mov
dec
sti
cmpsl
lahf
or
dec
and
ss
cmc
js
mov
pop
sub
push
dec
mov
call
sbb
xor
ret
cli
stos
std
mov
push
mov
pop
rcl
mov
mov
js
inc
pusha
in
xchg
add
in
out
pop
add
sbb
ljmp
jp
cmp
mov
loopne
jle
addr16
pop
fwait
mov
jbe
iret
sbb
sub
fucom
adc
or
push
sub
push
adc
cmp
insl
mov
inc
adc
mov
ja
test
dec
sub
sub
leave
inc
cmp
pop
pop
pop
xor
mov
out
sbb
jns
mov
adc
push
and
adc
push
sbb
pop
es
lods
sub
outsl
ds
add
or
xchg
sub
pop
sbb
outsb
cmpsb
test
jns
inc
add
dec
adc
imul
pusha
add
mov
leave
insb
icebp
rcl
sbb
pop
fmuls
inc
ret
cwtl
hlt
mov
loop
test
aad
cmp
ss
das
push
mov
xchg
stos
cmpsl
mov
cltd
cmp
popf
popa
imul
mov
fldenv
add
iret
mov
inc
jne
add
addl
mov
out
jmp
xchg
pop
outsb
pop
ficompl
lods
outsb
or
bound
repnz
sti
sub
pusha
movsl
lods
jge
pop
clc
xlat
push
add
sub
in
add
and
imul
loope
xor
dec
add
xchg
imul
icebp
pop
rcrl
mov
mov
or
sbb
testb
fs
icebp
or
add
out
int
pop
pop
nop
ja
ficoms
adc
jnp
mov
sbb
sbb
hlt
dec
add
xchg
lods
inc
cmp
insb
and
and
inc
inc
ljmp
xor
imul
enter
iret
movsb
push
jp
roll
jo
dec
cmp
mov
scas
mov
cld
fists
and
sbb
nop
add
sub
lret
icebp
cltd
or
fildl
cmpsl
and
add
fadd
in
sub
mov
xchg
loop
and
xor
int3
shrl
push
pop
mov
adc
aad
jne
sbb
aam
dec
loop
sub
movsb
stos
in
pop
dec
jo
add
mov
adc
inc
scas
mov
aad
mov
cmp
popf
and
push
xor
jg
mov
xchg
popf
xor
lea
jle
jecxz
sub
sbb
cltd
insb
clc
in
adc
sub
jg
dec
or
cmpsl
or
and
popf
loop
fdivr
lret
repz
fsub
aad
out
jae
mov
pop
loop
dec
cmpb
and
push
dec
mov
insb
adc
cli
sub
sti
xor
bound
pushf
pop
test
push
subl
sti
xor
or
or
fbstp
int
push
lcall
push
bound
inc
leave
sub
ss
test
fcomps
push
mov
out
add
repz
loop
ret
lret
mov
es
inc
lods
repz
scas
in
sbb
pop
and
cmpsb
outsl
rol
and
jae
xor
add
xchg
pushf
xor
mov
sti
adc
fyl2x
and
or
pop
mov
stos
inc
cmp
subb
and
sub
inc
mov
popf
icebp
nop
jle
dec
icebp
imul
shrb
daa
inc
push
jae
mov
cmp
shlb
orl
in
ds
imul
inc
aad
iret
sbb
sti
or
adc
pop
sub
rcr
add
inc
add
mov
cmp
push
pop
std
cmp
xchg
inc
sub
jmp
pop
jmp
add
orb
sub
pushf
cmc
jns
pop
es
fs
push
movsl
lea
and
jns
mov
push
out
sub
mov
inc
push
mov
stc
xorb
jnp
xchg
into
repnz
jmp
jmp
loopne
cli
es
test
les
mov
xor
fldenv
mov
sahf
idiv
ds
cmp
add
hlt
insb
cld
xchg
push
sub
daa
jle
push
lock
mov
push
jmp
icebp
sub
adc
push
cmpsl
dec
outsl
pop
stos
mov
cmp
bound
cltd
pop
aam
and
inc
ss
mov
xor
pop
dec
xor
sbbl
mov
add
and
mov
pop
mov
xchg
hlt
adc
mov
shrl
xchg
cmp
sbb
mov
sbb
xchg
enter
xchg
popf
mov
dec
jl
dec
mov
pop
add
sbb
and
lret
xor
mov
jns
je
stc
jge
xor
jns
leave
sub
aam
mov
xchg
ret
jo
cmp
push
jmp
pop
js
inc
lahf
shl
lock
bound
sarb
add
adc
lahf
das
fcmovnbe
shr
xor
sub
cmpxchg
icebp
and
out
jb
std
pop
pop
pop
loop
mov
js
arpl
repnz
ljmp
jo
adc
bound
ss
mov
sub
fldl2t
lea
mov
mov
into
imul
and
or
les
jecxz
ror
pop
adc
mov
movsb
pop
xchg
popa
in
add
out
mov
or
mov
lret
fstp
adc
movaps
sub
sbb
push
mov
mov
dec
ds
add
sbb
xchg
lods
jne
cmc
add
int
push
pop
ret
je
dec
outsb
in
xchg
sub
cs
and
cmp
dec
mov
dec
int
sub
sbb
lock
push
gs
test
dec
mov
push
inc
mov
arpl
pop
cld
sahf
pushf
imul
call
dec
aam
cltd
ret
ja
movsl
stos
cwtl
mov
arpl
push
add
mov
cmpsb
lock
dec
scas
xor
sbb
clc
stos
inc
lea
sub
mov
pop
jbe
lahf
sub
je
movsl
insw
loop
fs
xchg
xor
ss
mov
push
in
fstps
cld
xlat
dec
pushl
xlat
movsb
outsl
bound
clc
inc
xchg
pop
loop
cs
jae
es
nop
lahf
in
scas
outsb
inc
add
jl
and
mov
aam
sbb
pop
mov
cwtl
pop
into
dec
cmp
adc
jbe
test
ficoml
inc
and
mov
stos
pop
cmpsb
mov
mov
imul
ds
pusha
add
mov
push
sub
subb
jl
xchg
xchg
jbe
sbb
shrb
sub
push
mov
inc
aad
mov
into
insb
or
jle
das
ret
ss
pop
sbbl
repz
xor
shr
and
scas
push
ljmp
cmpsb
jae
popl
int3
mov
pop
xor
jge
cmp
bound
pop
xchg
mov
lcall
xchg
sarb
shlb
repz
adc
inc
inc
rclb
adc
push
xchg
mov
or
inc
repnz
out
add
ret
push
mov
sub
in
add
sti
add
scas
cmp
sbb
cmp
push
ret
xor
mov
xor
xchg
mov
cmp
adc
dec
fsubs
add
inc
lahf
sub
loopne
xchg
mov
aam
cmc
or
rorl
fisttps
jb
sub
rorb
lea
pop
jnp
js
jo
cmp
fstp
int
hlt
orb
push
jg
add
add
pop
mov
lods
es
sti
fistl
mov
push
dec
xor
imul
pop
ds
fcmovne
mov
mov
mov
dec
xlat
xchg
lcall
ljmp
out
jb
mov
fidivrs
add
xchg
jno
aam
dec
mov
xorl
xlat
cmp
lds
or
inc
cmpsb
cmp
mov
fdivr
push
push
push
iret
testb
xchg
into
stos
icebp
add
mov
add
movsb
repnz
mov
mov
jns
mov
daa
jge
enter
out
outsl
sub
jecxz
push
inc
mov
divl
mov
sub
sbb
nop
xchg
ficompl
cli
lods
dec
mov
jp
xor
jb
popa
xchg
and
scas
out
dec
adc
mov
ret
pushf
dec
shr
orl
mov
sbb
sub
pop
lret
cmp
bound
sbb
sahf
push
dec
shlb
mov
in
pop
aam
mov
cmp
sarb
enter
mov
pop
pop
mov
jecxz
mov
adc
jmp
cmpsl
jg
in
lcall
cmp
xchg
out
inc
stos
or
in
mov
jne
sbb
fstl
push
cmc
adc
repnz
popa
inc
xor
dec
mov
sbb
cmp
inc
mov
inc
icebp
into
fld
push
aas
in
inc
lcall
movsb
sub
xorb
add
push
imul
and
pop
insb
sbb
cmp
mov
movq
jo
lret
cwtl
lock
inc
insb
pop
insl
std
sbb
cmpsb
jle
mov
imul
mov
je
repnz
lret
add
lea
nop
push
inc
aad
fdivs
pop
lret
jno
jecxz
subb
xchg
mov
mov
or
mov
dec
mov
loop
call
iret
aad
cmc
fwait
xor
dec
adc
jno
hlt
stos
movsl
mov
dec
test
in
fcomp
fiadds
xchg
ja
jg
xor
lods
lds
pusha
into
repz
push
in
cmpsl
ret
lcall
adc
lret
fs
inc
int3
pop
or
aas
dec
mov
pop
cmp
lret
lds
fldt
mov
ds
scas
test
dec
fsubs
cmp
daa
mov
aaa
hlt
jecxz
fdivs
or
popf
mov
xor
jae
xor
and
sub
out
inc
add
pop
mov
das
push
dec
rdpmc
cmp
and
stc
lcall
dec
cmp
loopne
push
inc
adc
mov
ret
push
rcl
cmpsl
xor
daa
pop
mov
leave
sub
test
xchg
jle
leave
add
push
ss
scas
dec
mov
or
popf
lcall
mov
mov
cmp
sti
push
jp
iret
das
int
movsb
ljmp
push
push
push
jp
jp
or
sub
movsb
jge
js
mov
repnz
sbb
jb
ja,pt
imul
dec
out
or
mov
mov
pop
in
pushf
or
addb
inc
add
cwtl
sbb
xor
cmp
jne
jge
and
sbb
sub
jno
sbb
adc
pop
out
mov
push
xchg
out
fstl
sbb
cmp
js
icebp
pop
mov
je
lea
movsb
popa
jbe
in
add
or
cwtl
cmp
repnz
and
adc
lret
pop
jg
sbb
pop
insb
pop
pop
xor
leave
push
mov
in
lods
cltd
ret
pop
sub
imul
xor
pop
jle
sbbb
stc
mov
popl
les
sbb
xor
test
mov
lods
xchg
mov
stos
fsts
push
cmp
and
mov
push
jecxz
jl
jp
in
xchg
xor
adc
push
arpl
mov
jo
mov
xchg
jo
int3
mov
add
push
cmc
dec
and
cwtl
out
insb
adc
xchg
scas
and
xchg
iret
sub
sub
push
push
push
vmovdqa
int
out
xchg
in
ret
mov
lahf
adc
jne
xor
bound
mov
movsb
cmp
or
mov
mov
xor
insl
add
add
je
lods
jl
mov
cmp
xchg
std
and
mov
fsts
mov
cmp
mov
sub
add
imul
call
xchg
xchg
mov
cmp
clc
sub
rorl
jp
mov
scas
mov
inc
orl
sbb
in
mov
mov
rorb
call
push
mov
inc
jae
js
mov
cmp
jo
addr16
cltd
pop
mov
fcomip
add
xor
movsb
pushf
cs
in
jbe
dec
popa
jnp
mov
jbe
cli
jge
adc
jg
ds
ds
adc
mov
mov
popf
mov
scas
in
popf
je
mov
sub
rorl
imul
ja
stos
xlat
ljmp
sbb
int3
aaa
loope
jl
aam
stos
adc
xchg
dec
lcall
in
movsb
sbb
addr16
lock
and
cli
out
bound
cwtl
or
outsl
cmpsl
dec
xchg
lock
test
or
js
repnz
mov
out
stos
sub
inc
push
daa
popf
test
add
and
inc
out
out
cmp
inc
push
into
inc
or
aaa
mov
mov
pop
shlb
adc
sub
or
mov
arpl
or
pop
test
xchg
jp
cli
scas
repz
mov
or
pop
test
xchg
pop
sbb
jns
xchg
jbe
inc
push
inc
jg
movsb
ret
cmp
insl
jg
inc
dec
xchg
or
mov
aam
repz
repz
bound
leave
repz
pop
aam
pop
sbb
fwait
cmpsb
jge
negl
push
mov
pusha
cltd
out
and
cmc
mov
or
jbe
popf
es
xor
jbe
jmp
sub
jb
inc
push
cmp
addr16
add
std
jno
mov
push
push
dec
stos
adc
inc
fwait
jns
jns
mov
xchg
shrl
xchg
jnp
shll
mov
jg
push
push
aaa
int3
out
pop
cltd
mov
cli
lods
enter
push
movsb
mulb
mov
test
cmp
pop
stos
outsb
test
and
push
sub
mov
shl
adc
fldt
sbb
mov
in
ficoml
into
xchg
xchg
rcrl
xchg
iret
inc
xlat
les
repz
ret
push
rcrl
sub
insl
ss
adc
out
xchg
jl
dec
xor
hlt
sub
jp
push
nop
cmp
jb
mov
pop
pop
sub
rolb
pop
call
aas
adc
pop
daa
div
ret
ret
xchg
sbb
imul
aas
aam
das
movsl
fldcw
sbb
ret
inc
in
sbb
popa
cmp
cmpsl
pop
push
pop
sbb
lahf
mov
sub
rorl
cwtl
mov
mov
aad
adc
cmp
mov
dec
mov
pop
mov
clc
push
cmpsl
sti
insl
jo
and
les
inc
shlb
lock
fs
cli
insl
sub
xchg
in
or
mov
xchg
popa
das
stc
pusha
cmp
js
das
jae
bound
and
loopne
loope
dec
xor
push
jecxz
and
gs
test
lahf
pop
out
xlat
outsb
cltd
stos
sub
test
aaa
rcrb
add
in
aam
add
daa
rclb
jle
fsubp
loope
dec
or
pop
out
add
in
out
dec
outsb
jb
xchg
xchg
leave
xor
jae
cld
sbb
daa
fsubrl
sub
dec
pushf
stos
in
xor
jg
int3
xlat
mov
inc
mov
inc
mov
mov
lahf
sbb
and
push
lahf
aad
cli
add
jge
lcall
and
fwait
jbe
cmp
and
hlt
push
push
les
xchg
pop
xor
jecxz
add
lret
or
repnz
aam
adc
xlat
push
pushf
cmp
sub
lret
sbb
rcrl
xchg
push
loopne
fldcw
adc
cmp
xor
pop
incl
cmp
andl
xchg
das
imul
icebp
mov
out
mov
or
pushf
jnp
aaa
insb
mov
mov
sub
xchg
mull
add
push
testl
xlat
mov
pop
sarb
mov
xor
stos
xor
mov
cmp
xchg
imul
add
mov
bound
idiv
inc
push
xchg
not
cmp
cli
sahf
mov
xor
out
adc
sbb
push
jl
imul
arpl
inc
inc
cltd
jl
call
inc
xor
mov
hlt
push
cs
ret
fdivr
xchg
cmp
mov
ret
xor
lods
push
dec
pop
inc
sub
push
stos
enter
fcoms
aam
fistl
push
and
push
std
shll
or
out
cmp
sti
pop
adc
xchg
mov
int
fdivs
in
test
lock
cmpsl
xchg
xchg
lcall
in
inc
gs
mov
jns
mov
stos
in
ret
call
and
xchg
stos
xchg
in
jl
sbb
aas
in
lret
rclb
cmp
cld
pop
ljmp
inc
mov
cmp
and
cmpsb
incb
adc
jp
jg
lds
out
pop
push
popa
pop
subl
scas
stc
ret
rcll
ret
mov
push
aaa
scas
mov
pusha
dec
mov
pop
cli
inc
add
test
mov
lods
mov
jmp
xor
fcoms
out
or
in
lds
dec
test
adc
aad
repnz
jne
cld
sub
mov
mov
icebp
in
mov
into
adc
stc
dec
into
scas
pusha
test
and
xor
popa
gs
ret
and
pusha
or
in
mov
sub
mov
jl
sbb
pop
jo
sub
pop
aam
cmpsl
cmp
fldcw
or
cli
imulb
inc
push
imul
jp
inc
inc
sbb
mov
push
inc
mov
push
sub
add
inc
jnp
add
pushf
frstor
adc
sbb
xchg
in
sub
dec
sbb
fs
std
or
js
push
je
dec
cmp
cmp
or
mov
int3
adc
dec
in
scas
outsl
xchg
push
and
test
repnz
das
pusha
ss
mov
jnp
sahf
push
sbb
and
out
pop
sbb
out
mov
lods
aad
xor
or
insl
cli
shl
sbb
push
rcll
stos
mov
out
adcb
sbb
loop
ss
adc
daa
add
orb
dec
mov
inc
adc
add
jge
sbb
vmovss
or
and
fldl
cmp
ljmp
add
xor
jecxz
outsb
dec
adc
fisttps
out
pop
or
mov
and
dec
pop
xor
aad
imul
rcr
cs
dec
mov
jecxz
mov
ret
mov
and
daa
insl
push
das
outsb
push
push
xor
mov
insb
call
mov
jnp
jp,pt
cli
mov
sub
jp
cmp
in
insb
outsb
jb
scas
mov
imul
jnp
es
jae
push
cld
lea
mov
xchg
dec
clc
sub
pop
cmpsb
mov
aas
je
outsb
cmpsb
dec
xlat
mov
and
lret
cmp
arpl
mov
pop
adc
cli
aad
movsl
xchg
push
gs
jne
inc
push
push
and
es
test
aad
movsl
xchg
push
gs
jne
inc
push
push
and
es
out
out
xchg
movsl
sbbb
mov
bound
and
push
adc
jle
into
aam
movsl
xchg
mov
add
mov
and
mov
leave
cli
fldl2e
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
mov
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
call
push
mov
call
xor
leave
ret
cld
je
fcoml
jno
fimuls
xor
add
hlt
insl
in
aam
les
sub
sbb
or
cld
je
fcoml
mov
adc
add
hlt
insb
test
cld
mov
movsb
sbb
or
cld
je
fcoml
mov
adc
add
pop
dec
in
mov
les
inc
lret
imul
mov
fdivrl
mov
xchg
into
je
sbb
orl
inc
mov
addr16
xor
mov
bound
jno
sbbl
dec
ret
shrl
lods
sub
jbe
mov
fprem1
pop
push
shr
jl
cmp
pop
adc
cmp
fs
or
cld
popa
in
out
cwtl
int3
inc
fwait
xor
mov
icebp
das
jmp
xchg
ret
fisubrs
imul
add
mov
pop
add
xchg
xor
movsb
rcrl
imul
pop
xor
jle
pop
test
sub
lds
arpl
mov
fcoml
mov
adc
add
hlt
insb
in
aam
les
sub
sbb
or
mov
cmp
fisubs
pop
mov
or
cmp
xchg
dec
lds
push
mov
inc
in
fiadds
mov
stos
cmp
icebp
jns
cltd
cmp
mov
and
adc
add
hlt
insb
in
aam
les
sub
sbb
or
cld
je
fcoml
mov
adc
add
hlt
insb
in
aam
les
sub
sbb
or
cld
je
sub
inc
clc
or
ret
notb
mov
jb
movsl
out
inc
cltd
std
cmc
ror
sbb
add
inc
sahf
pushf
test
sub
push
and
xchg
sbb
je
push
dec
jl
push
push
jns
pop
push
imul
mov
mov
cmpsl
fcmovnb
fs
pop
stc
gs
jecxz
dec
and
pop
ret
ljmp
xchg
iret
cmpsl
mov
cmpb
xor
add
push
loop
in
jp
sub
pcmpeqd
loope
ds
gs
pop
pop
mov
imul
or
fisttpll
push
lcall
out
pop
fiaddl
test
jno
fiadds
pop
out
cli
adc
pop
mov
movsb
subb
xor
adc
lret
imul
mov
imul
cli
xchg
andl
mov
dec
dec
pop
mov
cmp
jo
shr
sbb
mov
pop
fdivp
das
jp
shlb
xor
subl
cmp
cmp
adc
popa
mov
fidivrs
jle
and
inc
jge
daa
sub
sub
movsl
in
jp
cmpb
dec
lea
xchg
adc
scas
lahf
dec
jp
in
inc
xlat
in
stos
stc
mov
imul
sti
sbb
xchg
and
dec
jne
lods
jne
push
fnstcw
imul
ja
pop
nop
out
popa
cmp
xor
enter
sbbl
test
xor
repz
addr16
adc
pop
mov
outsb
xchg
or
or
push
in
fs
out
into
rcrb
lock
push
ss
push
outsb
sub
mov
rorb
rorl
ret
mov
and
push
or
rolb
addr16
mov
adc
pop
jo
mov
mov
push
mov
insb
jbe
push
or
jge
mov
and
xor
adc
movsb
in
mov
jle
pop
push
mov
and
push
jmp
ja
shll
outsb
cli
adc
jb
push
jecxz
push
insl
dec
int3
pop
data16
sbb
fcmovu
lock
lds
jecxz
mov
fists
xor
test
mov
lret
sti
pop
xchg
or
lods
fyl2xp1
ret
cmp
add
adc
cmp
xchg
sbb
call
xor
push
mov
inc
xlat
push
call
push
aam
cs
fistps
and
iret
and
test
inc
lods
cmp
push
or
jno
pop
fdiv
or
cmpb
loopne
push
inc
ja
xchg
das
lods
inc
mov
xor
jae
fnsave
js
les
std
mov
fisttpll
popf
add
inc
inc
jecxz
xor
mov
and
mov
cmp
fcmovu
add
mov
sbb
das
jno
fidivl
add
aas
jne
or
push
nop
ret
shll
repnz
inc
enter
and
push
fldl
cli
int
imul
xor
jbe
fwait
xchg
cmp
aam
and
enter
scas
fdivrl
dec
into
lea
mul
leave
sbb
inc
fwait
mov
adc
inc
enter
xchg
sarl
in
sub
je
sub
pop
dec
lods
sti
jmp
push
clc
cltd
nop
cltd
gs
inc
mov
imul
dec
out
cmp
sahf
mov
nop
or
orb
fcmovnb
adc
lahf
test
xchg
xor
xchg
jo
mov
lods
xchg
pop
ljmp
jp
ja
jne
xchg
fdiv
add
xchg
sub
imul
scas
inc
jle
je
pop
inc
inc
xchg
inc
movsl
cltd
mov
cmp
inc
xchg
in
cmp
cmp
iret
into
in
aaa
std
addl
mov
out
mov
nop
mov
cwtl
sbb
cld
mov
push
icebp
in
mov
xchg
mov
and
mov
inc
arpl
rolb
je
jno
nop
jecxz
icebp
fstps
add
mov
scas
seto
or
jp
jl
adcl
inc
mov
xor
push
push
mov
hlt
out
sti
lea
bound
mov
mov
mov
insb
lret
adcl
stos
shlb
dec
push
cltd
sarl
push
mov
push
fmull
outsb
mov
mov
push
add
pop
xor
out
scas
data16
ret
jl
or
mov
ss
dec
xor
lods
xchg
xor
mov
sahf
dec
jnp
sub
jmp
addb
cmpsl
ret
and
insb
fsubs
mov
dec
jno
push
push
std
mov
mov
mov
loope
dec
punpckhbw
popf
outsb
mov
jbe
cmp
mov
jle
push
xchg
sub
inc
jg
mov
cmp
xor
outsb
mov
out
stc
fcmovb
fidivl
sti
lock
cmp
adc
add
mov
es
or
cli
push
jbe
test
xchg
dec
push
lcall
bound
out
dec
push
nop
xor
cmpsb
jecxz
and
inc
mov
insl
and
idiv
xchg
mov
adc
push
aad
dec
mov
cmp
mov
xchg
jp
jb
lret
out
pop
adc
adc
xchg
ret
mov
cmpl
mov
fdivl
cmpsl
dec
inc
hlt
in
jmp
push
push
das
or
cmp
bound
xchg
xor
sub
push
cmc
clc
adc
lock
cmp
inc
sub
add
imul
sbb
inc
negb
lods
dec
imul
pcmpgtd
and
mov
ljmp
mov
es
iret
ds
into
rep
sub
xchg
sarb
or
call
and
cltd
rcrb
insl
popf
mov
stc
lahf
jbe
fxam
ljmp
xlat
sbb
xchg
or
out
inc
or
mov
inc
cmp
jmp
or
and
push
fmuls
jno
mov
aam
mov
sbb
or
inc
cmp
enter
into
test
int
and
fdivl
leave
cmp
popf
sbb
enter
imul
in
fisubs
fcomps
add
cwtl
loopne
mov
sti
cmp
sub
enter
jg
sub
mov
add
mov
sbbb
test
stc
mov
sub
imul
mov
cmovge
and
popa
dec
notb
fadd
or
mov
xchg
pop
lea
les
lock
mov
data16
jne
cltd
movb
rorb
es
inc
pop
pop
jae
bound
jns
adc
xchg
insb
xlat
je
or
sub
xchg
xchg
push
mov
add
mov
mov
inc
stc
xchg
jecxz
imul
outsl
jb
pop
add
fcompl
pushf
push
jl
rcl
mov
cmp
jl
iret
aas
jl
sub
cli
es
scas
or
vpmacswd
inc
repnz
in
or
shlb
jbe
jae
or
inc
cmp
aas
xchg
cmp
inc
xor
insb
ja
xchg
mov
lret
fdivs
xchg
not
lock
and
push
pop
push
loop
xchg
or
inc
push
div
add
jge
adc
xor
mov
scas
stc
adc
sbb
repnz
jne
xchg
mov
mov
insb
pop
inc
popa
push
mov
outsb
lods
jecxz
repnz
adc
mov
ret
movsb
dec
fprem1
ret
gs
in
add
ja
mov
sbb
popf
lret
dec
loop
js
mov
stc
or
cmp
mov
xor
sub
lods
aam
outsb
push
stc
daa
aam
inc
lea
cmp
out
out
scas
incl
stc
jns
leave
cs
cmp
cmpsb
and
pushf
fstps
add
sahf
push
xchg
or
lahf
mov
mov
mov
pop
mov
cmp
jo
or
insl
dec
mov
rol
lret
stos
pusha
sar
lret
sahf
mov
movsb
fcomps
sbb
lods
cmp
insl
leave
mov
sbb
lcall
cmp
pop
mull
lcall
int3
imull
mov
push
sti
xor
pop
dec
mov
cs
js
adc
push
xchg
sub
cmpsb
icebp
sbb
arpl
sub
mov
lds
jns
pusha
add
sub
xor
xor
hlt
pushf
xchg
call
test
aaa
or
sub
insl
pop
iret
addb
test
inc
fiaddl
shrb
pop
stc
daa
cmpsl
sbb
test
adc
or
inc
inc
jmp
mov
inc
jg
es
adc
add
dec
mov
xchg
dec
mov
or
fs
outsl
or
or
jns
dec
inc
mov
pop
gs
daa
mov
cmpsl
gs
out
mov
adc
lods
in
pop
push
jmp
in
xor
ja
call
data16
dec
sbb
cltd
sbb
pop
lea
ret
loopne
lret
add
decl
repnz
pop
je
cmpsl
dec
or
fistpl
insl
push
arpl
lcall
hlt
ljmp
andnps
aaa
dec
arpl
hlt
and
and
in
inc
movsb
daa
lock
mov
push
outsb
mov
lods
test
arpl
icebp
popf
loope
sub
test
lcall
or
jg
aas
xchg
mov
cmp
inc
in
aaa
push
pushf
inc
adc
jmp
adc
popf
lahf
pop
pop
addr16
jecxz
mov
jae
mov
mov
and
jb
pushf
iret
imul
cmp
cwtl
xchg
imull
jns
sbb
adc
cmp
fimuls
sbb
in
cmp
aaa
jecxz
jne
roll
fsub
mov
inc
and
push
cmpl
aad
into
dec
mov
jecxz
sbbb
negl
lret
push
pop
cli
test
leave
mov
rcl
nop
dec
scas
pushf
mov
dec
divb
dec
or
xchg
dec
clc
or
cmpsb
push
test
jge
sbb
mov
inc
hlt
xchg
call
lds
dec
out
mov
sbb
leave
pop
bound
out
mov
cld
mov
pop
cli
testl
cmp
negb
insl
ss
scas
cmpl
pop
out
xchg
mov
ficomps
int3
inc
in
nop
out
mov
push
pop
mov
sbb
push
and
xor
scas
or
in
outsl
inc
es
lock
push
aas
aad
repnz
rorl
xchg
out
insl
mov
pop
or
push
sbb
pop
jl
out
test
shll
jae
sar
adc
test
sar
aad
or
fwait
dec
or
pop
js
and
jb
push
icebp
and
or
push
rcl
add
jp
dec
icebp
iret
addr16
mov
cmc
test
pusha
lods
out
pop
pop
add
aaa
adc
sub
adc
in
cmp
orl
popf
xor
cli
test
in
cmp
and
mov
push
add
rcl
inc
je
mov
jo
cmp
and
jp
stos
imul
fldl
clc
lods
adc
push
lods
inc
add
in
jb
add
sub
repz
sbb
or
push
mov
xchg
cmc
mov
mulb
aam
push
movsl
mov
jbe
inc
cmovge
js
mov
popf
es
rorl
lahf
fsubrp
pop
call
leave
bound
or
dec
push
loop
inc
movsl
insb
lds
jno
repz
add
dec
cmp
in
arpl
cmc
dec
or
in
in
mov
mov
stos
xchg
or
insb
and
loope
pushf
lea
adc
push
fisttpl
mov
xchg
sub
sub
xchg
insl
ljmp
in
push
push
mov
in
or
pop
push
push
in
add
or
outsl
xor
lods
fdivp
pop
arpl
dec
sti
jge
push
push
xor
rcrl
in
lret
outsl
ror
and
inc
mov
js
add
mov
add
sub
xchg
fnstenv
fmull
xor
ds
jo
mov
pop
cmp
xlat
aaa
scas
lret
push
push
cmp
and
xor
cmp
push
ds
dec
scas
mov
arpl
mov
jbe
daa
sbb
jnp
stos
dec
int3
jae
call
mov
gs
lahf
xlat
or
rcrl
cld
lods
nop
adc
loop
icebp
xchg
adc
xor
out
xchg
lret
jp
jo
in
ret
mov
mov
xor
xchg
cltd
mov
data16
lret
insb
sti
ljmp
movb
or
hlt
ds
loop
and
mov
ljmp
push
icebp
xlat
in
push
xor
xchg
test
mov
adc
leave
xor
xchg
add
push
mov
cmp
out
mov
xor
jg
insb
sbb
fwait
inc
fcmovbe
in
mov
cltd
mov
sub
cmc
lea
test
fiaddl
cmp
or
mov
sub
mov
xchg
xor
paddusw
inc
hlt
mov
and
xor
cli
dec
imul
cs
clc
mov
jmp
sub
push
lock
adc
std
push
out
mov
stc
push
add
xor
mov
gs
repnz
xchg
pop
fxam
xor
pop
fists
xor
mov
mov
shll
sub
inc
mov
mov
jge
ficompl
dec
add
pop
negl
sbb
and
xor
inc
int3
adc
ficoms
xlat
mov
push
imul
arpl
pop
bound
out
xlat
pop
push
lea
jmp
test
inc
sbb
inc
or
stos
inc
pop
jnp
nop
andl
add
xor
stc
inc
ficompl
subw
jge
sub
in
sbb
xchg
cld
shlb
xlat
pop
stos
xchg
mov
bound
in
inc
push
sub
mov
mov
xchg
das
out
test
out
or
hlt
test
or
inc
mov
pop
push
inc
jmp
jo
arpl
fwait
dec
mov
jmp
mov
mov
test
dec
and
jb
jae
and
dec
arpl
loopne
scas
mov
imul
bound
pop
pop
dec
inc
dec
adc
or
sbb
mov
rolb
mov
ffreep
dec
lods
daa
bnd
insb
addr16
mov
push
inc
faddl
dec
roll
call
notl
xor
jge
fld
fmul
es
pop
outsb
clc
pop
pop
jns
push
push
cmp
mov
adc
je
popf
and
cmpsl
add
dec
xchg
mov
enter
mov
add
inc
cltd
jle
hlt
cmpsb
adc
gs
mov
aad
ret
inc
add
mov
aad
push
mov
mov
jecxz
sbb
aas
lds
xchg
je
pusha
xor
call
inc
cs
mov
mov
sbb
mov
jmp
xchg
mov
mov
mov
cmpsl
out
pop
aaa
fnsave
pop
adc
ljmp
fnsave
fs
insb
out
imul
mov
int3
cmpsl
mov
lods
cmp
xor
mov
mov
sti
pop
das
in
mov
sahf
xchg
into
ret
jb
sub
pop
inc
outsl
stos
push
inc
jge
and
lret
xor
cmpl
mov
pop
movsl
aad
push
dec
jne
filds
fs
or
adc
ret
push
sarl
ret
jns
addr16
adc
aad
test
adcb
cwtl
jmp
xchg
mov
jecxz
push
cmp
or
mov
push
push
out
cmp
scas
jo
xor
dec
or
pop
movsl
fs
jmp
jle
mov
inc
das
mov
das
fildll
push
divl
sub
movsb
dec
push
push
jp
dec
dec
cltd
add
call
fucomip
inc
aas
nop
clc
jno
in
aas
scas
sub
push
push
lea
push
rorl
mov
enter
in
xchg
cs
ficoms
rcrl
jmp
mov
cmp
jge
add
sarb
cs
ljmp
lea
push
mov
int
nop
js
or
push
xor
cmp
push
xor
cmp
cmpsl
test
cwtl
xchg
and
dec
cwtl
test
sahf
mov
xor
call
lock
pop
subb
sub
out
out
dec
outsb
cli
xor
mov
add
cmp
inc
pop
lods
cmp
add
fs
xchg
shll
push
shr
shlb
push
iret
sbb
arpl
xchg
add
adcb
adc
jecxz
mov
jb
rcll
or
cmpsl
pop
scas
aaa
xchg
mov
xor
xchg
pushf
xor
popa
dec
mov
data16
dec
mov
pop
jno
jle
mov
shrl
xor
iret
je
inc
jo
add
jg
stc
mov
jae
xchg
pop
jmp
xor
ds
cmpb
mov
xchg
xchg
jbe
sub
add
fidivl
mov
mov
mov
jo
divb
aam
jmp
sub
mov
nop
test
sbb
fcompl
xchg
cmp
repnz
popf
movsl
push
shlb
lahf
shrl
push
and
sbb
jns
enter
dec
fldt
dec
out
mov
sbb
ljmp
repz
scas
xchg
icebp
ljmp
das
popa
jae
cmp
adc
les
bound
dec
xor
xchg
mov
stos
addl
in
out
push
roll
xchg
inc
shrb
and
lea
clc
and
mov
pop
jae
fstp
les
mov
in
or
xchg
pmaddwd
imul
jg
cmpsb
test
mov
add
and
inc
es
mov
mov
cmp
stc
pop
lretw
fwait
inc
fnstenv
xor
test
cmp
adc
mov
mov
ljmp
xlat
lea
iret
imul
shrb
mov
ljmp
mov
inc
mov
dec
cmp
loop
sbb
aas
jbe
sub
or
subb
jg
loop
stos
sbb
rcrl
test
daa
jnp
popa
in
lret
jmp
mov
into
inc
add
popa
adc
not
adcl
cli
pop
xchg
add
mov
push
test
scas
hlt
mov
divl
xchg
push
sbb
loop
sub
addl
push
outsl
int3
sub
hlt
mov
cmpsb
dec
sub
or
iret
sbb
mov
xchg
jae
sbb
popf
div
int
jb
xchg
dec
or
es
xor
add
mov
cmpl
dec
pop
pusha
fdivrl
popf
imul
xor
pusha
cmc
jns
push
movsl
cld
aas
out
imul
or
mov
cltd
xor
mov
adc
inc
adc
lock
pop
push
divl
jl
mov
stos
add
push
dec
pusha
aas
xchg
sub
inc
push
jno
bound
bound
xchg
out
adc
xor
dec
sbb
adc
imul
sub
push
and
inc
mov
jns
add
mov
mov
es
xchg
mov
push
aad
out
push
inc
mov
lea
in
cmc
xchg
fdivrs
add
ds
pushf
sub
sahf
sbb
push
pop
push
push
pushf
sbb
ror
xchg
iret
mov
test
ret
adc
pop
adc
adc
negb
adc
pop
movb
dec
loopne
or
dec
sar
mov
out
cmovs
lock
movsl
lret
xor
xlat
pop
loop
ja
icebp
lret
pop
mov
pop
mov
test
dec
fucomp
fisttpl
xchg
enter
int3
test
aad
cmp
data16
outsb
and
repz
inc
in
mov
cli
ja
xorl
pop
add
push
out
xchg
int3
xlat
adc
add
sub
rcr
mov
push
into
push
pop
xchg
xchg
subb
or
in
jge
cmp
adc
nop
inc
mov
popf
out
in
mov
add
int3
push
or
in
mov
mov
xchg
xor
add
mov
sbb
testb
xchg
jecxz
jp
in
jl
cwtl
xor
das
das
das
xorb
cmpsb
sub
fstl
mov
adc
add
hlt
insb
in
aam
les
sub
sbb
or
cld
je
fcoml
mov
adc
add
hlt
insb
in
aam
les
sub
sbb
or
cld
je
in
aam
inc
cmp
lods
movsb
pushf
adc
add
je
in
aam
les
sub
sbb
or
cld
je
fcoml
mov
adc
add
hlt
insb
dec
not
dec
mov
cmp
pop
insb
imul
push
andl
mov
inc
lcall
in
cmc
xor
jae
arpl
push
andl
mov
and
pop
aad
xchg
xor
and
jae
arpl
push
lcall
adc
stc
lds
aad
xchg
dec
fistl
sbb
aaa
jmp
fisttpl
fists
push
pop
les
adc
or
leave
cmovle
stos
test
sub
or
mov
ret
sbb
in
sti
std
push
xor
fwait
mov
cmp
pop
pop
add
pop
rcr
lds
mov
fsubl
jae
es
push
jl
dec
hlt
lock
xchg
std
push
outsl
std
movsl
mov
jl
dec
dec
xlat
mov
sti
xor
aad
sub
cmc
lret
jl
or
push
inc
and
mull
dec
xchg
sub
pop
aam
mov
imul
jno
sbb
mov
and
adc
sbb
sub
cmp
imul
imul
je
test
xchg
cltd
inc
loopne
cld
inc
loope
loope
inc
cli
daa
ljmp
jns
and
xlat
data16
push
mov
loopne
roll
mov
sub
xor
add
repz
add
xor
and
jae
arpl
push
andl
mov
and
adc
add
xor
and
jae
arpl
lock
fidivs
mov
push
jbe
and
call
cli
and
sbb
in
xchg
sub
scas
jle
add
in
jno
xorb
popa
push
nop
push
push
pop
xchg
cmpsl
push
lods
push
sbb
lahf
mov
hlt
out
arpl
mov
jns
sub
aaa
and
test
or
pop
pop
loope
sbb
mov
mov
mov
xchg
ret
dec
mov
stc
push
mov
mov
aas
out
mov
and
xor
fwait
mov
xchg
arpl
mov
in
xchg
dec
lds
sub
hlt
sub
repnz
mov
xchg
xor
add
push
mov
jbe
fmull
inc
lods
or
fnstcw
xor
fsubrs
xchg
out
test
inc
lds
and
push
and
mov
out
scas
mov
push
pop
xlat
xchg
jae
mov
dec
jns
push
pop
imul
pop
sti
mov
xchg
pop
fmull
mov
add
aaa
mov
mov
push
aaa
xor
pop
pop
add
xor
push
xor
dec
aas
dec
rcrb
loop
cmp
mov
insb
mov
loope
mov
mov
es
setg
fildl
cmp
cmpb
adc
mov
push
ret
lock
cmc
ret
or
push
aad
daa
mov
pop
jl
stos
addr16
jb
cmp
mov
jns
jae
cmpsb
cmpb
mov
mov
mov
mov
sbb
xor
sub
or
push
jbe
xchg
shll
insb
push
cltd
adc
movsl
ljmp
jl
mov
mov
fsub
lret
int
dec
inc
inc
pop
pop
pop
mov
jae
push
sub
sbbl
mov
lock
xchg
and
push
dec
lods
adc
push
mov
nop
sub
mov
lock
inc
incb
aaa
std
lea
leave
jbe
outsl
fists
gs
cmp
xchg
jle
lods
out
js
rclb
inc
inc
lods
sub
adc
cmp
stos
dec
fndisi(8087
add
cmpsb
cmp
push
sahf
add
dec
lcall
out
add
cmp
add
ret
pop
sbb
cs
int3
and
shll
adc
stos
dec
and
data16
cltd
and
cmp
push
daa
mov
push
leave
stc
jno
adc
in
fists
inc
xchg
fcom
fxch
and
lret
xor
ds
in
mov
jecxz
test
xchg
loope
dec
jnp
out
in
push
mov
repnz
popf
in
ljmp
js
out
jl
test
arpl
add
fwait
pop
shll
popa
and
mov
je
sub
cmp
jne
outsl
inc
pop
jg
or
jle
in
hlt
ljmp
jnp
aad
push
pop
mov
scas
out
ljmp
jb
stos
xchg
arpl
popf
adc
in
sbb
pushf
pop
mov
mov
pushf
rcll
test
and
push
loope
xchg
repz
xor
fisubs
jnp
or
jb
sarb
add
repnz
repnz
mov
jl
jns
into
adc
scas
popf
lock
dec
mov
xor
xor
dec
or
dec
clc
or
mov
and
add
scas
dec
data16
jmp
shlb
cmp
lock
cmp
xchg
cmp
push
imul
cld
sub
sub
movsb
mov
sbb
fsubs
es
sbb
imull
pop
cmpsb
subl
pop
push
scas
cmc
xchg
dec
leave
pop
mov
filds
push
lea
ficoms
daa
push
push
push
test
inc
pop
aam
lret
mov
push
mov
test
rcrl
xlat
fnstenv
sbbl
sub
or
sub
xorb
jae
icebp
inc
sahf
pop
jg
cmp
sahf
mov
loopne
cld
stc
dec
mov
cmp
xor
xchg
pop
mov
mov
clc
adc
mov
fs
imulb
sar
leave
mov
lret
aad
sarl
fdivrl
ficomps
scas
popa
mov
call
arpl
cmpl
push
out
mov
cld
dec
pop
in
test
mov
ds
push
adc
cwtl
inc
xchg
mov
addb
fistl
pop
sbb
roll
jns
or
xlat
push
aam
aaa
mov
mov
and
arpl
and
fwait
mov
xchg
jns
cmpsl
dec
jl
std
cli
push
imul
aaa
daa
lock
dec
mov
mov
mov
pop
mov
sbb
cmp
ja
pop
dec
or
stc
xor
xchg
int3
xchg
sbb
daa
sbb
or
out
push
cmp
iret
cltd
cmp
out
call
cmpsb
out
int3
jmp
int3
lcall
or
mov
call
mov
div
ss
add
repz
fbstp
sbb
adc
ficompl
imul
adc
insl
xchg
jno
inc
dec
xlat
punpckhbw
push
inc
jle
xor
inc
daa
insl
push
adc
jp
cli
fldenv
js
dec
jnp
sar
adc
or
in
push
inc
ret
xchg
cli
aaa
mov
xchg
adc
bound
and
das
fildll
or
call
mov
jecxz
lock
lock
out
test
addr16
mov
popa
lods
inc
jno
jmp
sbb
fcompl
sbbl
daa
orl
sub
jp
dec
test
sbbb
mov
call
outsl
ficompl
xchg
je
inc
mov
shl
cmpl
roll
bound
hlt
lret
gs
mov
mov
daa
push
xchg
push
imul
mov
pop
enter
cwtl
leave
push
pop
imul
pop
and
jl
add
fwait
jl
and
dec
lods
inc
or
jmp
lret
stc
mov
cmpsl
aas
leave
aas
sbb
cmp
add
daa
jbe
mov
lcall
divb
dec
and
shll
loope
jno
sub
sti
pop
dec
sbb
sti
stos
aas
and
cmp
mov
push
adc
daa
decl
add
sbb
push
insb
fcompl
lret
cmc
pop
std
jmp
nop
mov
add
push
jle
sahf
dec
jo
adc
add
int3
outsl
jnp
ret
inc
insb
nop
fsubs
out
jp
jle
addr16
hlt
or
xlat
sub
scas
push
scas
sub
scas
faddl
roll
cltd
mov
push
or
into
fmulp
pop
cltd
xchg
mov
xchg
sbb
and
ficompl
cmp
out
mov
inc
arpl
test
cmp
lock
inc
inc
pop
pusha
jo
and
jns
push
subl
xchg
out
in
test
jne
repz
and
sahf
jmp
fwait
add
sarb
pop
pop
mov
push
std
ljmp
dec
sbb
xor
fnsave
in
sbb
mov
adc
xchg
mov
lret
push
push
sahf
stc
push
lahf
or
js
fdivrl
testl
jnp
cmpsb
xor
xchg
cmpsb
ja
xor
inc
xor
jle
push
inc
push
inc
sbb
inc
sbb
inc
xchg
adc
call
sub
cmc
divl
out
and
mov
test
aas
aas
dec
adc
mov
pusha
js
pop
inc
std
jecxz
roll
or
loop
push
enter
and
mov
dec
hlt
and
aam
dec
ret
mov
and
push
mov
and
cmp
aaa
lds
in
sbb
cmp
and
inc
dec
push
mov
and
outsl
mov
sub
fistpll
mov
sbb
push
js
cmp
xor
outsb
ja
sbb
stos
les
cmpsl
xchg
adc
add
mov
andb
xor
scas
ljmp
pop
pop
jle
insb
xchg
insl
enter
and
mov
data16
sub
cmc
cli
xchg
in
dec
mov
adc
inc
inc
test
fwait
dec
mov
mov
loopne
jns
rcll
scas
push
dec
nop
loop
jg
imul
js
leave
and
loop
lods
adc
lock
or
add
stos
mov
adc
mov
aas
add
push
fstpl
pusha
fsubrs
push
stos
sbb
enter
dec
inc
mov
dec
fdivs
fsubs
push
data16
sbb
movsl
mov
pushf
inc
pop
or
push
shlb
cmp
fdivrl
cs
loop
xchg
ror
pop
push
std
hlt
xchg
push
mov
adc
mov
push
mov
xor
mov
stc
sub
fs
jbe
xlat
iret
jle
and
inc
cli
cmp
cld
push
adc
aad
adc
xchg
xor
pushf
mov
mov
jns
lds
cmp
pop
sti
mov
xchg
or
xor
hlt
lods
add
cmpsl
lock
int3
popa
xor
les
jmp
cltd
pop
push
dec
data16
and
imul
dec
jo
push
lahf
sbb
icebp
xor
fisubs
addr16
xchg
mov
in
push
cmp
daa
ja
rorb
das
cmc
pop
icebp
mov
iret
push
dec
inc
push
out
stos
xchg
mov
mov
idivb
test
aaa
cmovb
mov
cmp
jo
sbb
imul
std
dec
xor
dec
mov
pop
sbb
jecxz
cmp
jg
js
pop
loop
cmp
test
lret
repz
nop
les
negl
jo
cmp
outsl
dec
mov
mov
aad
cld
mov
mov
or
mov
mov
xchg
jbe
cmp
and
fs
ret
jmp
leave
push
inc
pop
or
jg
inc
or
call
imul
call
xor
outsw
inc
pop
mov
ja
imul
push
sub
jno
mov
push
xor
and
push
outsb
xchg
outsl
mov
subb
or
in
dec
inc
aam
lea
out
inc
loopne
int3
pop
or
lret
iret
ja
pop
push
push
add
cld
mov
pusha
sarl
lods
out
jb
dec
push
or
fcompl
rcrb
es
add
mov
xor
fidivrl
mov
call
xor
xor
leave
sbb
sub
jmp
mov
mov
jns
cmp
inc
lret
jp
addr16
and
mov
cmp
xchg
inc
mov
jl
outsb
xlat
xchg
mov
pop
lret
cs
popa
outsl
xchg
daa
xchg
lea
incl
lret
fimuls
pop
fistpll
xlat
cmc
pusha
push
jne
lcall
cmp
mov
scas
push
int3
mov
mov
and
divb
daa
mov
sahf
dec
icebp
call
das
mov
inc
dec
popa
add
xor
call
xchg
scas
mov
es
loopne
sti
test
xor
rolb
cmp
lea
jl
sub
sbb
add
push
mov
xchg
fs
faddl
xor
daa
loop
ds
into
cmp
pop
xchg
pop
icebp
adc
sbb
cmp
dec
jecxz
popf
in
or
test
xor
sub
or
and
add
dec
lods
mov
jns
imul
insb
xchg
xor
dec
addb
stos
cwtl
pop
push
add
sbb
stos
mov
test
mov
cmpsl
fnstcw
ficompl
fsubrl
popa
stc
sub
mov
adc
scas
andl
add
sbb
pop
xchg
subb
icebp
outsb
push
testb
loopne
test
fs
pushf
push
add
leave
push
cmc
sti
subl
test
lods
cmp
lcall
loop
in
popf
outsl
lret
xchg
rolb
dec
sbb
cmp
inc
push
paddw
xor
cmpl
cmp
adc
inc
jp
stc
push
mov
push
mov
das
lds
aaa
iret
pop
or
dec
movsb
lock
jg
or
aas
bound
mov
call
jmp
aad
add
fwait
cmp
pop
sahf
jns
inc
sti
mov
xlat
or
pop
push
sahf
jo
ja
jge
xor
mov
outsb
push
lcall
xor
push
das
and
mov
addr16
push
mov
fistps
out
or
movsl
iret
sub
mov
insb
shll
pushf
js
jns
sar
nop
leave
xorl
pop
cwtl
arpl
adc
inc
jae
mov
adc
xchg
push
ljmp
push
or
xorl
mov
xlat
inc
lods
inc
mov
xor
dec
xor
or
adc
mov
sbb
cmp
mov
mov
cmp
mov
fld
inc
fwait
pop
fisttpll
and
sbb
outsl
push
pop
add
int
fisttps
inc
jg
jno
shrl
outsb
rorl
push
test
add
lea
int
mov
push
xchg
outsl
outsb
mov
mov
leave
jo
dec
dec
lcall
fists
pop
xor
mov
iret
xorl
outsb
gs
das
gs
repnz
fbstp
cmp
pop
adc
xor
mov
inc
and
push
lods
sbb
es
mov
arpl
leave
and
add
sbb
mov
lret
xchg
shll
test
in
xor
mov
icebp
enter
pushl
popa
inc
movsb
flds
xor
lret
test
jl
outsb
lea
repz
ja
pop
and
or
test
xlat
lds
enter
aaa
adc
dec
lcall
lret
xchg
lcall
sub
sbb
and
test
sbb
jmp
or
call
inc
pop
or
mov
lock
scas
jecxz
loop
xlat
xor
iret
iret
mov
push
movsl
jmp
imul
hlt
ljmp
cmc
mov
je
fidivs
mov
pop
cmc
jo
push
insb
xor
sub
movsb
lcall
les
leave
push
sbb
aas
scas
loopne
imul
arpl
jl
int
inc
lret
push
push
jns
movsl
ljmp
dec
divl
mov
xor
clc
and
push
dec
test
inc
bound
jg
cmp
jl
mov
pushf
xchg
inc
rcll
jg
js
jmp
xchg
gs
cmc
push
mov
cld
test
pop
loopne
out
or
jmp
repnz
mov
imul
dec
adc
mul
or
lods
jne
aad
mov
inc
pop
rcr
in
jnp
xor
rcrb
arpl
adc
add
inc
or
inc
js
inc
fisubrl
inc
out
push
outsl
jp
pop
cld
loope
jle
stc
in
decb
xchg
icebp
push
ljmp
orb
sbb
or
mov
pop
add
loopne
jmp
orb
andb
mov
pop
jmp
divl
xchg
mov
fnstcw
cs
xchg
inc
jle
dec
cmp
jbe
lret
mov
les
mov
inc
roll
jle
incb
add
je
cmp
icebp
lret
loope
xchg
xlat
rolb
cmp
sarl
xor
pushf
jp
sahf
repnz
add
adc
cli
jp
mov
inc
mov
int
lcall
pop
pop
adc
or
adc
pop
lret
push
cltd
shlb
sbb
add
ja
mov
mov
lock
xor
out
scas
imul
add
arpl
and
mov
xchg
call
push
jbe
cltd
les
lret
pop
pop
int3
les
sub
rcll
hlt
mov
push
xchg
and
es
adc
int
push
pop
dec
hlt
pop
mov
push
sti
bswap
jb
mov
mov
cmp
aaa
fcom
ret
iret
ret
mov
xchg
pop
aas
testb
call
mov
es
mov
popf
or
push
push
mov
xchg
notl
sub
push
idivb
mov
sbb
cltd
das
push
ja
cmpsl
cmp
add
and
jbe
imul
mov
inc
pop
xchg
pop
in
pop
outsb
iret
dec
xor
pop
mov
lods
das
xor
sub
xor
jge
dec
fcomp
and
jl
push
fadds
cmp
push
rorb
xchg
lods
add
lret
push
fwait
in
pop
sarl
adc
mov
test
mov
aam
shlb
in
add
adc
neg
iret
fildll
outsl
fs
fadd
sub
ret
adc
pusha
inc
mov
mov
add
mov
std
mov
xor
lret
pop
xchg
orb
bound
arpl
es
test
jp
add
outsb
mov
iret
gs
aad
lret
xor
test
lds
decb
jb
aad
movsb
test
push
repz
sar
frstor
push
dec
pop
cli
push
lcall
cmp
insb
mov
add
scas
insb
jne
clc
dec
cmc
imul
fidivl
sub
and
aad
add
pusha
xlat
movsb
btc
fsubrl
lea
pop
mov
push
mov
mov
adc
cmc
cmpsb
lret
outsb
jge
push
adc
jae
cwtl
dec
outsb
mov
cmpsl
aam
mov
or
add
sbb
dec
int3
lahf
push
inc
jns
adc
xor
and
push
sbb
push
fwait
dec
and
loop
xchg
jp
lret
xor
es
fsubrs
or
arpl
sub
jmp
inc
mov
ljmp
mov
les
insb
xor
outsl
push
lock
andb
sub
subb
mov
movsl
rolb
adc
repnz
push
pop
sub
dec
scas
loope
push
jmp
xor
lret
adc
scas
mov
lock
and
inc
push
and
test
dec
sub
jo
gs
sbb
test
mov
fiaddl
scas
inc
test
inc
or
mov
adcl
test
jno
pushf
xchg
push
xor
mov
sub
vzeroall
xor
pusha
enter
idiv
lret
outsl
daa
imul
mov
icebp
les
sub
mov
les
scas
outsl
mov
mov
dec
xor
lods
test
jae
jne
loope
bound
and
mov
dec
scas
push
push
xor
bound
in
pop
cmp
ret
sbb
mov
and
lahf
push
push
and
repz
cmp
insb
sub
add
cmp
out
roll
push
out
sbb
loopne
pop
jmp
jne
mov
sbb
and
ljmp
dec
xchg
mov
dec
adc
xchg
sub
in
jnp
adc
je
inc
jg
mov
sbb
negb
fdivrs
cmp
pop
mov
mov
xchg
or
and
and
mov
xlat
es
cmpsb
es
jne
or
push
cmp
ljmp
sbb
fmull
mov
loope
out
dec
shll
hlt
mov
daa
sahf
jae
movsl
ret
inc
add
daa
scas
push
movsb
xor
rclb
pop
mov
cmp
sbb
jg
or
gs
scas
xor
fsts
cmpsb
mov
fadds
fstl
mov
dec
adc
sbb
call
adc
add
ret
sub
dec
mov
cltd
fcoml
pop
push
mov
pop
xchg
jp
enter
lea
jl
insl
mov
movsb
mov
xchg
out
jno
sti
das
cmp
test
jmp
imul
inc
jne
mov
scas
push
mov
insl
adc
sbb
pop
push
out
shrb
in
iret
int
ljmp
cld
pop
test
inc
dec
cli
out
add
shl
push
dec
pop
sub
loope
popf
arpl
add
mov
les
nop
xor
dec
push
mov
push
test
push
xchg
movsb
scas
aas
sbb
in
fimuls
mov
movsb
jns
fldenv
pmaxub
sarb
pop
inc
stc
stos
subl
movsl
inc
inc
ss
xchg
mov
aad
mov
sub
loope
or
mov
cmp
mov
adc
or
xor
pop
xor
popa
fists
repz
mov
mov
pop
stc
inc
fnstenv
mov
xchg
je
jp
mov
jecxz
sbb
int
xor
std
mov
xchg
cmc
pop
xor
dec
jge
lcall
adc
leave
push
push
push
out
idivb
xchg
cltd
sbb
adc
sub
inc
cmp
insl
clc
incb
and
cmpsb
push
arpl
and
outsb
and
adcl
adc
jecxz
adc
add
xor
and
jae
arpl
push
andl
mov
and
adc
add
xor
and
jae
arpl
push
andl
mov
and
adc
add
xor
daa
test
inc
movsl
ja
addr16
xchg
push
xchg
jne
add
repz
test
repnz
sbb
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
call
push
push
pushl
push
push
call
call
mov
leave
ret
ds
sti
xchg
lcall
push
add
or
add
add
add
add
add
sahf
add
add
dec
add
add
ja
dec
add
add
add
add
add
add
add
add
ja
imul
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
outsl
add
add
add
insl
add
adc
add
loope
xchg
add
add
lea
inc
add
fs
add
dec
add
add
add
add
add
add
in
add
add
add
add
add
je
cwtl
add
add
or
das
add
add
add
add
pop
add
addl
sbb
dec
add
add
add
add
sub
je
push
add
add
add
add
jmp
aad
loopne
or
pop
add
add
inc
add
add
add
add
add
rolb
je
cld
pop
flds
mov
xchg
add
flds
and
movb
add
add
add
adc
add
or
rolb
and
pop
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
lods
add
add
add
add
add
pop
sbb
sbb
aaa
add
or
pop
add
add
add
add
add
add
bound
push
add
add
mov
add
add
add
add
add
jbe
jbe
sbb
lea
out
add
dec
add
add
pop
add
add
add
add
add
add
add
add
rolb
in
add
str
pop
add
aaa
add
cld
add
add
add
inc
add
add
add
fiadds
and
add
add
stos
add
add
jg
push
add
flds
push
add
add
jbe
jbe
ja
and
add
add
add
add
add
add
add
and
ja
or
repz
mov
xor
outsb
add
xchg
add
sti
add
add
add
add
add
push
add
add
inc
add
jmp
add
add
outsb
add
add
add
outsb
add
add
add
add
add
add
sbb
aaa
add
add
add
daa
add
enter
cld
pop
fadds
outsb
add
add
add
add
dec
add
pop
add
add
add
add
addl
flds
clc
add
arpl
pusha
add
add
add
add
or
add
add
add
add
add
fadds
int
clc
add
add
add
js
das
add
add
add
add
add
add
mov
add
add
into
add
add
add
add
add
add
pop
add
push
add
add
add
add
add
add
add
add
add
or
add
jbe
add
add
add
add
add
add
add
jbe
adc
enter
inc
add
add
add
add
xor
mov
fadds
lcall
add
add
add
add
add
add
add
xor
mov
shlb
andb
xchg
test
xchg
inc
adc
leave
movsl
adc
mov
negb
inc
out
dec
cld
push
xchg
jg
jp
and
mov
insl
test
push
mov
aaa
xor
xchg
outsl
outsl
inc
cli
inc
add
sbb
mov
cmp
sbb
adc
lods
mov
sub
xor
test
fnstenv
cmp
testb
ret
fldcw
sbb
cmp
clc
xor
inc
in
xor
test
mov
push
ja
cmpb
add
cmp
sub
mov
lods
stos
mov
scas
loopne
scas
sub
testb
ljmp
imul
dec
cli
pop
sub
pop
test
in
dec
loopne
enter
pop
lcall
pop
mov
ret
imul
fmuls
cmp
add
jno
mov
xorb
add
cmp
les
inc
in
push
in
jns
insl
popa
cmpb
das
and
jg
dec
imul
mov
outsl
jg,pn
clc
mov
inc
mov
leave
mov
sbbl
test
ret
mov
xlat
and
sti
sbbl
or
icebp
test
fnstcw
sub
imul
xlat
aad
and
push
push
cmp
popf
mov
iret
sbb
cmpsl
inc
mov
adc
mov
out
add
ficoms
dec
inc
scas
scas
scas
xor
fsubl
out
mov
jle
cld
mov
xor
rorb
mov
arpl
sti
mov
lock
jno
fsubl
scas
lret
and
in
punpckhdq
idivb
push
xor
sahf
stc
push
out
aad
dec
pushf
leave
cwtl
jns
mov
test
or
mov
mov
mov
mov
mov
orl
add
mov
xchg
jmp
imul
jnp
pop
adc
cmpsb
dec
aaa
inc
in
add
mov
lea
jbe
pusha
mov
rcrb
cld
adc
test
and
jae
push
pusha
push
push
inc
fcmove
pop
adc
sbb
fs
lock
addr16
dec
inc
out
in
dec
pop
xor
xor
shlb
int3
mov
sbb
out
popa
and
mov
xor
les
popf
icebp
xchg
negb
and
lcall
dec
psubsw
inc
mov
pop
jns
and
lahf
data16
shl
cmp
xor
jbe
fwait
not
add
add
add
add
rolb
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
cmp
add
pusha
repnz
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
fcomip
add
int3
repnz
repnz
mov
repnz
lods
repnz
movsb
repnz
pushf
repnz
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
repnz
add
add
or
add
and
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cwtl
repz
mov
repz
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xor
add
cmp
add
inc
hlt
add
dec
hlt
add
push
hlt
add
pop
hlt
add
fs
add
ja
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
hlt
add
cwtl
hlt
add
test
add
mov
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
loopne
add
or
add
xor
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
scas
pop
add
pushf
pop
add
xchg
pop
add
mov
add
test
add
jl
add
je
add
insb
pop
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
rclb
add
fcoml
add
lock
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
push
sbb
add
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
inc
sbb
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pusha
sbb
add
add
js
add
mov
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
