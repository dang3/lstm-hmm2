decl
adcb
xor
jmp
push
jno
mov
mov
mov
add
add
mov
mov
push
add
jae
arpl
mov
sub
dec
subl
add
push
dec
inc
inc
cmp
je
add
dec
add
mov
add
mov
jmp
ja
mov
jmp
stc
mov
add
inc
add
inc
mov
inc
dec
ret
mov
and
stos
ret
and
call
or
outsl
mov
mov
or
ficoml
push
mov
add
dec
cs
imul
or
pop
mov
popa
outsb
outsl
add
adc
mov
dec
adc
jo
clc
div
aaa
jne
fidivl
imul
insl
xchg
add
mov
xchg
xor
mov
add
xor
ror
inc
push
imul
inc
js
insl
push
add
in
mov
test
dec
imul
mov
add
xor
mov
call
mov
jle
inc
xor
xchg
mov
dec
cmp
cmp
sti
dec
in
mov
insb
mov
mov
inc
dec
in
outsl
fisubs
xor
jae
inc
push
outsb
ja
dec
add
f2xm1
shll
inc
jbe
mov
lret
insl
or
dec
xor
jecxz
mov
mov
rorb
arpl
outsl
add
add
ret
adc
lock
sub
inc
fcomps
out
jns
dec
movl
mov
jmp
outsl
sbb
fadds
dec
push
insb
push
inc
adc
push
mov
or
jecxz
inc
mov
push
js
sbb
mov
inc
mov
mov
pop
ja
subl
fs
shll
inc
dec
or
ret
outsb
and
out
loopne
out
loopne
addr16
outsl
inc
push
mov
mov
add
jae
fstpl
mov
xlat
lcall
mov
imul
ljmp
jno
cmp
out
sub
mov
xchg
das
jo
das
push
push
jmp
dec
fucomi
mov
incb
push
dec
cmpsl
pop
call
dec
mov
mov
add
adc
outsl
jg
xor
dec
pop
aaa
addr16
add
enter
sbb
mov
pop
aaa
mov
call
push
es
je
or
rolb
pop
jae
dec
mov
es
call
mov
push
ss
mov
inc
inc
dec
mov
push
pusha
ljmp
cs
xlat
insl
mov
shll
mov
xor
lahf
imulb
adc
icebp
mov
mov
add
jmp
loop
inc
cmp
inc
push
ret
push
add
push
inc
mov
push
dec
add
mov
mov
xor
outsb
test
lods
stc
ret
and
jae
rcll
cli
bound
push
mov
faddp
cmpl
movsl
iret
iret
inc
add
bound
inc
mov
mov
insl
xor
dec
push
pop
fmuls
xor
outsl
adc
mov
push
xor
cmp
fwait
push
cmp
push
sbb
int
ja
jae
dec
add
add
outsb
pop
fldl
ljmp
dec
ficomps
mov
cld
adc
addr16
inc
dec
popl
imul
bound
push
jmp
mov
jb
jae
imul
aas
mov
push
fsubrl
xchg
inc
jbe
ret
push
xchg
es
sti
push
out
idivb
fisubrl
shll
mov
out
xor
inc
mov
ds
addr16
outsl
xor
out
mov
hlt
add
push
jne
outsl
jns
test
je
dec
fmull
pop
and
inc
outsl
jbe
lods
mov
or
pop
add
aaa
js
mov
xor
mov
sub
push
push
add
mov
xor
inc
sub
cmp
insl
cmp
dec
inc
ret
mov
mov
lret
pop
mov
test
xor
push
stc
and
jecxz
mov
dec
insb
push
mov
sbb
push
lock
jmp
imul
jnp
in
dec
dec
out
dec
inc
pushf
mov
xor
outsb
inc
xchg
addl
jecxz
mov
pop
or
push
push
movsw
das
pop
mov
jbe
push
jb
dec
jne
das
mov
jecxz
lock
adc
inc
sbb
incl
adc
inc
mov
insb
aaa
jne
dec
jne
pop
and
bound
push
mov
sbb
adc
jle
push
add
dec
or
test
and
and
jne
dec
jae
aam
addb
dec
pushl
or
jno
xor
dec
mov
push
jns
clc
mov
arpl
add
jg
mov
dec
or
mov
aaa
ficomps
ret
xor
inc
pop
mov
int
stos
call
jnp
xchg
arpl
sub
xor
getsec
inc
pop
js
shlb
filds
mov
push
popf
mov
jae
push
pop
sub
rcl
std
shr
jo
pop
pop
inc
adc
fs
das
mov
cmp
xor
jns
dec
daa
rcl
mov
mov
ret
ret
mov
arpl
push
pop
rorl
imulb
dec
sub
rorb
ret
push
push
fdiv
dec
xor
aam
jmp
mov
fcoms
arpl
fcmovu
subb
cwtl
inc
inc
inc
dec
insl
inc
inc
mov
mov
jb
das
jae
push
clc
sbb
rorb
loopne
mov
mov
outsl
dec
outsl
xor
jmp
adc
shll
and
or
adc
dec
pop
add
enter
in
decl
cmp
pop
stc
aas
stc
gs
mov
pop
and
stc
jl
push
sarl
add
adc
add
dec
jno
cmp
sti
call
stc
jne
nop
stc
inc
stc
cltd
sub
add
cltd
ret
lcall
clc
dec
sub
cmp
in
shlb
lods
jo
push
or
or
or
adcl
stc
mov
adc
decl
mov
xchg
lock
jmp
movsb
push
in
punpckhbw
or
mov
decl
sbb
cltd
imul
or
notl
adc
push
jp
cli
sbb
add
adc
clc
andb
outsb
movsb
push
pop
pop
inc
mov
jmp
mov
nop
and
add
andb
adcl
ds
xrelease
add
out
add
xor
jne
xor
cmp
repnz
icebp
mov
loop
xchg
inc
add
rcl
push
inc
sti
inc
jmp
or
sbb
sub
or
or
test
aad
aas
or
iret
test
stc
jmp
adc
jg
push
xor
cmp
popa
popf
add
or
ret
adc
lea
inc
je
xchg
cmp
sbb
insb
push
enter
divb
out
mov
sbb
ljmp
rcrb
dec
call
push
inc
jae
insl
cmovg
sub
lea
xor
pop
loope
add
push
stc
cmp
test
stc
aad
fistl
pop
mov
stc
mov
add
adc
push
jmp
stos
sub
les
dec
push
push
xchg
inc
ficompl
call
ja
pop
in
in
push
mov
mov
mov
sbb
mov
repz
mov
dec
and
adc
aas
mov
and
mov
lcall
mov
cmp
in
stc
push
mov
pop
nop
mov
cmp
dec
std
inc
sub
sbb
sub
cmp
cmp
out
fs
incl
stc
pop
stc
and
ret
jge
mov
add
scas
stc
ja
into
cmc
adc
inc
push
xchg
out
push
sar
push
jp
adc
stc
dec
cmp
push
stc
and
out
cmp
xchg
popf
add
inc
stc
mov
stc
aaa
pushw
cmp
lock
int
adc
add
cld
mov
lock
inc
popa
stc
js
mov
dec
add
sti
movsb
sahf
or
mov
stc
xor
mov
popf
mov
lahf
push
or
dec
and
xchg
insl
stc
negb
push
imul
mov
shlb
adc
or
fdivrs
dec
cmp
cmp
cmp
sub
aad
stc
dec
aas
add
les
adc
xchg
pushf
sub
jmp
mov
pop
clc
mov
stc
adc
ret
and
sub
daa
movsb
mov
cmp
mov
mov
xor
add
jg
push
bound
outsl
or
int
xchg
ret
adc
jl
inc
and
das
or
lret
mov
dec
nop
clc
fimull
sub
dec
jg
cli
lcall
push
stos
add
stc
adc
aas
aam
sbb
pushl
dec
sti
call
cmp
jmp
ja
aaa
mulb
add
sbb
fwait
dec
in
fimull
pop
loopne
add
sar
in
dec
cmp
push
fdiv
call
lods
stc
sub
or
push
sbb
inc
and
pushf
fcomps
sub
jmp
das
mov
pusha
push
je
call
cmp
sub
in
incl
mov
push
mov
xor
loopne
cmpsl
jmp
inc
psllq
dec
nop
add
int3
mov
outsl
or
repz
loope
or
adc
comiss
call
stc
cld
push
jle
movsl
pop
mov
aaa
push
xor
cltd
rclb
outsl
dec
mov
adc
mov
and
mov
rclb
dec
sbb
cld
lods
scas
xor
in
mov
ljmp
aaa
stc
pop
aas
lods
bound
jl
push
mov
lea
test
divb
aas
rcll
scas
adc
popa
punpckhwd
out
cmp
jl
cmp
call
cmpsb
loopne
xor
mov
sbb
cld
divb
xchg
out
mov
xchg
jle
adc
mov
repz
xorl
stc
sub
out
sub
jbe
mov
rcll
push
mov
and
push
add
movsb
popf
out
imul
xor
adc
inc
call
mov
lret
sbb
loopne
xchg
or
cmp
mov
add
stc
daa
fsubs
gs
stc
test
mov
mov
or
mov
xor
fst
repnz
stc
and
mov
iret
fs
cs
pop
sti
aaa
mov
sub
push
push
jmp
pop
cmp
insl
sbb
cmpsb
orl
je
movsb
and
mov
mov
fsubrs
lret
xchg
adc
xchg
aaa
rcrb
icebp
call
jmp
pop
mov
sbb
scas
pop
mov
stc
in
jg
mov
dec
loope
mov
push
lret
adc
push
jmp
cmc
jmp
dec
mov
out
pusha
repnz
push
adc
mov
or
stos
repz
adc
pusha
jns
test
stos
adc
call
fstpt
inc
xor
jbe
push
sbb
mov
notb
fdivr
jo
loopne
jmp
cmp
or
and
xor
loope
ret
out
call
inc
add
cmp
add
inc
icebp
orb
cltd
pop
xor
decl
cmp
cmp
dec
and
cld
pop
movsl
fcomip
decl
xor
mov
adc
push
stc
adcb
xor
addl
xor
pop
jne
cmp
shl
jne
dec
test
mov
aaa
pop
inc
inc
inc
mov
sub
sbb
pop
outsl
pop
bound
insl
add
testb
pop
test
es
daa
inc
add
xchg
or
cltd
push
mov
mov
das
xor
pop
hlt
fmull
lret
adc
outsl
fildll
pop
dec
push
scas
fisubrl
inc
adc
jg
cmpsb
or
aaa
mov
outsb
shll
dec
adc
sub
or
xor
mov
dec
add
jge
xchg
add
hlt
jg
gs
jp
test
shr
cmpsb
mov
push
jo
xchg
ss
add
lret
bound
test
mov
ss
les
in
fstp
rcll
orb
xchg
inc
push
mov
or
jo
filds
adc
in
add
cmp
ret
testb
in
sbb
in
or
mov
into
dec
or
jne
in
and
sub
pop
imul
xchg
sbb
add
push
pop
push
jbe
and
add
or
and
pop
pop
lods
dec
pop
sub
loope
xchg
push
gs
pop
jo
adc
mov
mov
cld
xchg
push
addr16
xor
sarb
and
lods
fdivrl
dec
iret
cli
pop
out
pop
jb
push
add
xchg
mov
adc
lock
enter
arpl
cmpl
popa
outsb
loop
cs
mov
idiv
decl
mov
mov
inc
pop
push
lea
popf
test
jne
cli
aas
lock
test
and
inc
adc
stos
pop
push
sar
insl
cmp
lahf
and
xor
les
jb
or
call
call
into
sbb
pop
or
mov
cwtl
test
jo
sti
xchg
sbb
and
outsl
adc
fildll
pushf
cmp
jns
cmovo
pop
sbbb
jmp
dec
add
add
aad
mov
add
mov
fidivrl
imul
loope
push
adc
std
sub
repnz
stc
xchg
mov
das
insb
rolb
call
lock
add
dec
imul
mov
rorb
xlat
cmp
sti
aas
adc
mov
push
mov
outsb
test
in
pop
push
and
clc
inc
aaa
jmp
ljmp
xchg
dec
or
pop
stos
std
int
addr16
daa
outsb
xor
sub
mov
push
rep
mov
sbb
in
shr
adc
call
insb
push
mov
addr16
jp
mov
mov
fstpt
test
cmpl
sub
mov
cmp
daa
inc
mov
repz
jb
jb
stc
inc
fnstsw
mov
push
sbb
push
or
mov
pusha
inc
sbb
popa
xor
mov
mov
push
and
or
mov
shl
clc
mov
iret
aaa
and
leave
shlb
test
sub
adc
mov
sbb
mov
dec
mov
dec
mull
popa
mov
cmp
mov
ret
movsb
add
enter
loopne
gs
cmp
cmp
dec
dec
stc
pop
je
cmp
jge
int
nop
or
push
lods
jmp
mov
and
pop
push
out
push
sub
flds
das
in
mov
add
cs
out
fdivrl
jge
nop
nopl
jbe
lods
cwtl
cmp
jg
in
shlb
out
lock
lret
inc
clc
inc
jmp
push
cwtl
movsb
adc
popa
imul
and
pop
push
adc
mov
sbb
jae
das
enter
out
fldl
jge
jmp
out
and
rolb
push
xchg
int3
xor
inc
jmp
cmp
inc
int
cmp
mov
jecxz
fs
sbb
and
mov
stc
lret
and
int3
cmpsl
into
xor
movsl
imul
lds
xor
in
mov
insb
out
orl
ljmp
insb
and
nop
jo
and
insl
push
rcll
add
jmp
mov
hlt
mov
add
iret
in
jle
mov
pop
mov
in
sar
mov
lea
cs
and
cmp
in
pop
xor
stos
js
and
xor
xor
sub
daa
js
andl
and
lea
inc
push
fildl
imul
xchg
and
xor
lret
movb
dec
out
sbb
ja
cmp
push
sub
decl
add
lahf
adc
sub
test
imul
leave
or
pop
cmp
jecxz
testb
mov
adc
mov
cmpsb
sbb
cmp
test
mov
mov
jbe
stos
cmp
pop
adc
in
or
dec
int3
xchg
mov
js
inc
mov
out
pop
icebp
test
add
mov
xlat
sahf
mov
jb
push
call
push
imul
mul
leave
add
push
push
xchg
incb
sti
incl
push
mov
cld
sub
inc
inc
pop
aas
push
xchg
mov
push
pop
pop
lock
loope
lcall
jnp
sbb
jecxz
insb
push
xor
xor
inc
loopne
lea
adc
outsl
cwtl
shrl
xor
inc
mov
stc
lds
pop
pop
je
test
or
xor
inc
push
mov
cld
add
mov
xchg
mov
and
add
iret
lods
sbb
ret
aam
cmpsl
pop
pop
js
jge
sbb
xchg
sub
rcl
insl
mov
or
mov
mov
inc
and
es
push
arpl
add
incl
aaa
and
fsubrl
sbb
dec
add
sbb
call
fmull
pop
xchg
sub
sub
mov
into
sbb
lea
shrb
clc
lods
outsb
push
mov
stc
and
pop
mov
mov
mov
add
or
sub
cmp
mov
dec
inc
push
sbb
aas
add
mov
or
pop
inc
adc
outsl
loop
push
jle
test
xchg
call
or
or
adc
pusha
jg
pushl
or
xor
pop
pop
jno
inc
xchg
mov
mov
fidivl
xchg
sub
xchg
pop
cli
lods
std
pop
loope
add
adc
push
cmp
paddsb
lcall
push
and
mov
or
sbb
sbb
adc
das
les
icebp
pop
sbb
cmp
mov
inc
test
pop
ss
call
fwait
sbb
xchg
jb
add
fisubs
scas
or
cmpsl
sub
cmp
xor
pop
add
cli
lds
repz
adc
fildl
imul
and
or
int
je
jbe
incl
pop
int
scas
mov
loop
add
cli
jae
adc
jmp
clc
daa
mov
adc
loopne
cld
mov
jle
filds
div
mov
jns
xchg
or
call
dec
pop
jg
ljmp
push
or
cld
push
rcll
in
outsl
lea
sbb
jne
adc
incb
hlt
fstp
shrb
xlat
xor
dec
jnp
or
and
cmp
mov
fsubs
mov
sbb
add
jg
cmp
mov
sar
das
stc
xlat
stc
cmpsl
jecxz
insl
or
lret
js
push
popa
in
push
push
push
or
or
ss
test
lods
add
faddl
in
idiv
test
imul
adc
mov
out
xchg
pop
or
enter
jne
leave
pushf
mov
sbb
add
mov
xor
xchg
push
popl
or
xchg
mov
pusha
cmpb
sub
decb
aas
lea
dec
cmp
repz
xorb
dec
mov
inc
inc
mov
or
and
jae
popa
pushl
jne
jo
and
loope
idivb
inc
bound
incl
loope
or
xchg
pop
cmpsb
ror
mov
cmp
jno
outsl
jno
bound
xchg
ds
imul
jge
daa
cltd
xchg
add
rcr
push
xor
insb
loop
jg
lock
jge
pop
and
test
std
das
jge
sbb
push
mov
pop
cmc
loop
lahf
test
ret
mov
push
pop
daa
rclb
lods
loope
fcomps
es
pusha
call
jbe
cmp
mov
add
out
loope
cld
fldt
mov
pop
pop
movsl
fbld
mov
ljmp
out
and
xchg
fcoml
sbb
aam
inc
add
xchg
out
pop
std
movsl
test
les
stc
incl
dec
xchg
movsb
roll
pop
push
pop
adc
mov
clc
dec
adc
dec
push
cmp
call
cmp
ss
jmp
hlt
or
or
and
cmp
int
pusha
movsb
fcoms
sahf
cmp
mov
jg
dec
jno
js
popa
int
inc
orb
push
cltd
adc
add
mulb
and
adc
mov
in
adc
sbb
enter
pop
add
sbb
movsb
or
out
lret
cmc
add
jg
psubb
sub
cs
push
add
push
daa
pop
clc
call
sbb
shr
aad
xchg
mov
lock
int
lock
enter
cmp
das
loop
xlat
adcb
sti
sbb
adc
lea
je
pop
les
popa
add
pop
je
xchg
adc
or
sbb
mov
outsl
ficoms
push
xor
shlb
push
outsb
add
rolb
dec
or
sti
dec
mov
mov
mov
je
sub
das
adc
sbb
push
lods
mov
call
inc
stos
rclb
push
xchg
aaa
movsb
dec
or
fsts
jno
in
andl
imul
or
rcl
dec
pusha
mov
sub
popf
test
in
push
pop
stos
mov
fnstcw
pop
cwtl
and
xor
xorl
jmp
mov
adc
stos
inc
push
push
outsb
mov
int
shll
icebp
or
cmp
lcall
mov
lods
scas
fldenv
or
cmp
clc
lret
or
out
test
fdivs
sub
ss
outsl
mov
pop
pop
inc
popa
mov
xchg
scas
in
pushl
or
fiaddl
icebp
clc
shr
jne
test
icebp
lcall
jne
pusha
pop
bound
cmpsb
sbb
xlat
fildll
sub
push
gs
mov
sub
jmp
cmp
mov
sbb
sub
add
jno
xchg
lcall
jns
inc
adc
mull
pop
xchg
iret
pop
leave
inc
sbb
popf
pop
xchg
cs
call
call
pop
jge
adc
and
stc
lahf
jno
sbb
pop
sbb
test
fiadds
lock
and
call
cld
pop
insb
xchg
sbb
push
jmp
arpl
pop
movsl
cmp
dec
fistpl
gs
and
in
out
jae
jle
or
rcr
push
lods
std
mov
cwtl
adc
dec
scas
inc
add
ret
or
shll
inc
jmp
jae
xor
mov
loope
mov
out
xor
decl
dec
add
xchg
mov
lahf
xor
xchg
jmp
ja
adc
mov
push
add
dec
bound
sub
cld
and
and
call
add
cwtl
int3
call
or
jbe
das
or
lods
mov
cmp
loopne
cmpl
gs
rol
xor
mov
lock
imul
mov
fadds
mov
adcb
mov
add
add
add
push
fsub
sbb
add
jae
inc
jp
call
push
xchg
push
mov
leave
pop
sahf
cmp
inc
lcall
pop
add
mov
bound
push
xor
add
je
jo
inc
add
stos
out
dec
mov
shlb
push
jbe
jl
jg
js
lock
mov
shlb
sub
adc
lods
xor
sbb
jmp
lret
test
arpl
pop
inc
mov
repnz
ljmp
in
cmpsl
pop
cld
cmp
dec
in
sahf
mov
rclb
mov
int3
xchg
or
and
inc
in
mov
adc
mov
and
sti
fwait
sbb
and
adc
cs
add
push
push
and
outsb
insb
jg
and
jb
test
cmp
addl
push
xorb
cmpsb
fmuls
insl
sub
or
sbb
sub
mov
mov
ljmp
xor
or
jo
in
ljmp
push
jne
cli
cmpb
mov
sti
jb
dec
fdiv
test
call
xchg
and
ret
adc
hlt
lea
xchg
xchg
jp
lcall
cmp
mov
cmp
and
leave
and
push
cmp
insl
fists
push
sbb
in
es
lret
fimuls
incl
adc
add
inc
test
mov
sbbb
call
or
dec
in
jbe
lock
fldt
sub
enter
mov
hlt
mov
mov
call
imul
mov
in
xor
or
pop
or
popa
sbb
and
dec
jg
subl
sub
adc
adc
mov
pop
mov
inc
push
add
dec
jecxz
test
imul
andb
es
adc
push
mov
call
cmpsb
fistpll
movsl
pop
mov
bound
aaa
cld
xchg
sub
push
add
jne
stos
imul
movsb
cld
pushf
enter
incb
or
test
mov
mov
sub
xor
jmp
inc
pop
cli
ljmp
dec
addb
xor
imul
test
cmpsl
xchg
adc
push
xchg
adc
sub
mov
lock
cmpsb
dec
orl
sar
pop
roll
pop
push
movb
in
cmpsb
add
adc
cvtdq2ps
pop
inc
inc
cmp
jle
push
mov
xchg
in
call
cmc
sbb
dec
out
add
and
notl
dec
and
mov
mov
pop
test
jmp
add
js
repnz
mov
loopne
xchg
out
xchg
push
push
pop
lods
ja
inc
mov
jp
xchg
mov
adc
push
adc
cmp
sub
pushl
add
and
pop
ja
jl
jg
pop
and
mov
or
hlt
call
or
mov
pop
pop
cmp
inc
aas
rol
inc
mov
mov
push
mov
and
jg
call
add
xchg
adc
xor
inc
frstor
fisttpll
sti
movsb
cwtl
pop
aad
add
sbb
dec
jmp
mov
aam
cmp
jae
jnp
mov
cmc
jge
cli
andl
jmp
mov
icebp
enter
push
loope
sbb
inc
jno
xor
inc
inc
daa
mov
incl
call
pop
jp
repnz
mov
xor
mov
repnz
ja
xlat
data16
pushl
shrl
inc
loope
xor
shl
arpl
decl
push
cmp
dec
pop
sub
notb
inc
mov
pop
sbb
jmp
loop
xchg
or
pusha
pop
push
stc
xchg
fs
test
lock
push
cs
mov
sar
xchg
mov
or
arpl
ljmp
jo
and
ret
inc
lcall
pop
call
mov
shlb
imul
imul
pop
cmp
lods
hlt
inc
mov
stos
mov
aas
and
mov
xor
ljmp
cltd
sub
lods
dec
and
out
xor
icebp
or
enter
adc
pusha
mov
mov
adc
pusha
gs
mov
or
loop
xor
push
or
out
adc
sar
imul
testb
and
lahf
test
xchg
popa
mov
and
hlt
aaa
dec
call
loope
xchg
fildl
insb
rorl
push
push
mov
cmp
dec
pop
fcmovnbe
pusha
std
dec
cli
nop
fisubl
leave
xlat
sub
push
loop
popa
xchg
rcr
push
xchg
sbb
add
je
mov
insl
pop
shr
adc
out
pushf
add
or
orl
out
je
adc
jno
cmp
rolb
push
adc
xchg
popa
ret
jecxz
add
push
mov
ss
and
sbb
inc
dec
mov
shlb
aam
adcl
hlt
sub
decb
xchg
xchg
mov
test
xor
dec
subb
cmp
incl
sub
lods
xor
adcl
test
outsl
out
inc
mov
jns
push
sub
stos
fdivrs
movsb
test
sub
inc
das
mov
cmp
mov
cmc
mov
inc
ret
pop
decl
out
jl
xchg
lock
xor
mov
or
inc
push
push
xor
dec
icebp
and
fs
mov
subl
outsb
idivb
loopne
fwait
cmp
pop
inc
rcrb
lret
icebp
fucomip
push
repnz
sbb
imul
bound
pop
cs
push
fs
sub
jge
in
cs
dec
xor
pushl
lcall
sbb
push
and
incl
jl
sahf
rcl
popa
pop
insb
mov
mov
js
or
rclb
jnp
jmp
xchg
sub
pop
mov
inc
mov
pop
and
and
lahf
push
stos
mov
jae
jno
stos
adc
loopne
sbb
sbb
and
add
xchg
decl
jno
push
pop
sarl
and
sub
popf
icebp
cmp
or
cmpsl
lea
loopne
mov
inc
and
aaa
ljmp
push
push
mov
or
mov
add
mov
shlb
mov
fs
imul
and
cmp
xchg
push
mov
aaa
adc
mov
mov
das
mov
cli
or
popw
adc
mov
idiv
ficoms
ffreep
in
adc
jbe
cli
je
shr
popf
fstps
ljmp
popf
inc
lock
enter
out
sub
pop
ljmp
add
xchg
add
mov
loop
and
or
inc
mov
xor
ds
scas
out
adc
sub
cmp
jmp
leave
xrelease
and
decl
adc
setnp
loope
push
or
pop
ss
and
jne
sbb
imul
and
out
xchg
inc
outsb
push
and
dec
imul
sub
aaa
inc
outsb
mov
mov
movl
jb
push
enter
insb
popa
rcrb
jp
xor
add
adc
lods
ficoml
subl
mov
jno
add
add
daa
rcll
ja
mov
cmp
push
cmp
xchg
adc
in
cs
fdivrp
jmp
jg
fwait
push
jg
sbb
sub
xorl
pop
mov
or
sarl
dec
pop
shl
idivl
imul
stc
and
adc
hlt
inc
outsb
xchg
sbb
push
and
test
and
ffree
test
mov
sub
xor
sub
in
or
push
mulb
pop
adc
fisubrl
pop
movsl
mov
das
fimull
sub
jge
popf
movsl
or
movsl
and
mov
lcall
int
mov
gs
pop
cmp
pop
inc
xor
inc
mov
or
push
test
insl
stc
pop
push
or
pop
fstps
outsb
rorl
mov
inc
mov
outsb
dec
aaa
cmp
push
out
mov
xchg
repz
rep
jno
sarb
mov
out
icebp
add
dec
outsl
movsl
lods
dec
ret
sub
add
sbb
push
das
cld
rorb
mov
sub
pop
mov
adc
fistps
fcompl
mov
lret
mov
cmp
outsl
clc
in
into
shl
pop
ljmp
mov
and
mov
and
je
pop
cmp
call
mov
mov
js
or
mov
fadd
inc
sbb
lret
cmp
inc
add
xchg
mov
clc
jg
add
aam
dec
notb
imul
rolb
jecxz
dec
shlb
mov
movl
nop
outsb
and
insb
std
sar
and
pop
leave
mov
call
xchg
ret
mov
pop
and
les
xorb
inc
sub
incl
in
je
dec
in
push
xor
sub
dec
icebp
mov
xor
ja
rclb
out
fs
lret
cmp
insb
inc
rolb
push
fldcw
daa
mov
hlt
cmp
rcrl
arpl
or
daa
fildl
mov
add
out
push
lock
bound
push
shll
stos
cmpsb
inc
add
jo
test
movsl
jno
sbb
pop
inc
mov
pop
leave
ja
sbb
cmp
outsl
or
lods
jmp
je
pop
pop
lods
outsb
jge
popa
test
mov
bound
call
add
mov
pop
fcoms
push
adc
enter
push
push
pop
jle
cmp
adc
enter
fistpl
inc
push
mov
mov
adc
push
ljmp
pop
in
adc
jmp
jle
or
mov
mov
adc
mov
stc
mov
push
mov
imulb
ds
lods
adc
stos
sub
mov
push
mov
push
and
adc
inc
cmp
ljmp
jo
daa
lret
xchg
insb
stc
test
mov
pop
push
ljmp
xlat
scas
pop
pop
mov
cmpsl
ljmp
cmp
push
jno
sbb
es
mov
imul
xor
fiadds
test
sub
scas
mov
movsl
daa
mov
dec
and
call
jne
push
jp
add
fdivp
sub
jl
icebp
call
loop
pusha
add
cmp
push
mov
jg
xchg
sub
inc
adc
xchg
xchg
pop
pop
shrb
in
stos
loop
hlt
inc
fmuls
pop
clc
xor
pop
lock
adc
mov
std
add
mov
jle
je
stos
sub
push
mov
inc
jo
pop
xchg
adc
mov
inc
inc
cmpsb
gs
push
mov
sbbl
mov
cmp
nop
call
push
cmpsb
push
mov
fs
call
call
aaa
cli
dec
jae
inc
rcrl
loop
sbb
sbb
jg
mov
andb
adc
insl
movsb
mov
jns
pop
or
filds
shl
push
mov
ret
xchg
stc
outsl
mov
filds
push
dec
adc
push
imul
stos
mov
cmp
sub
nop
mov
data16
and
dec
sbb
inc
mov
cli
add
out
and
mov
adc
push
sbb
or
adc
add
cmpb
push
lret
or
nop
mov
mov
sbb
ja
in
in
dec
in
cmpsl
add
pop
xchg
ds
adc
dec
add
addr16
xor
orl
inc
lock
cmpsl
lods
mov
rorb
mov
sbb
das
xchg
jle
dec
adc
lahf
rcrl
aaa
clc
insl
push
je
aam
mov
xor
sbb
incl
test
outsb
sub
mov
out
mov
sbb
push
pop
stc
push
popa
mov
xor
out
daa
fildll
test
insb
test
cwtl
js
cmp
push
mov
add
dec
test
mov
dec
mov
call
adc
inc
adc
clc
cs
and
movb
xchg
scas
jne
test
cmp
and
xchg
adc
jp
dec
into
cmpsl
jecxz
pop
insb
mov
mov
dec
jo
insb
lret
inc
xchg
jne
int3
aas
pop
insb
add
xchg
lcall
jb
xor
cmp
test
add
mov
aas
jb
and
adc
movsb
mov
hlt
call
clc
dec
adc
in
outsb
mov
incb
dec
lret
test
ret
mov
sti
inc
cld
dec
xor
jns
mov
add
jg
mov
sub
xchg
push
imul
idiv
cmp
daa
fwait
addl
faddl
pusha
out
jmp
popa
pop
mov
or
dec
push
std
les
jbe
mov
into
add
push
out
mov
in
xchg
xchg
pop
or
mov
adc
je
cli
aas
imul
jle
div
mov
jmp
mov
sub
lods
fcom
xchg
xchg
mov
rclb
decl
pop
inc
bound
jle
sbb
cmp
daa
sahf
xor
arpl
push
inc
lahf
pop
pop
pop
inc
cmc
dec
out
mov
inc
inc
bound
int
pop
pushf
mov
add
xor
jb
stc
fwait
clc
cli
aaa
push
pusha
daa
xchg
inc
hlt
dec
clc
pop
cld
insb
lock
jge
xchg
xchg
cld
fwait
cld
cmpsl
cld
mov
jmp
add
mov
xor
dec
cmp
cmp
fdivrp
mov
les
mov
xchg
jno
inc
clc
popf
aas
add
aas
lock
pop
xor
lock
stc
and
mov
mull
adc
mov
or
pop
roll
nop
scas
jmp
xor
stos
decb
mov
cmp
pop
inc
roll
scas
adcb
xchg
add
dec
mov
sbb
out
xorb
mov
xchg
mov
pusha
jmp
fstps
push
mov
lahf
pop
pushf
popf
je
mov
jbe
lahf
xchg
lahf
cltd
lahf
mov
push
pop
test
lahf
call
sbb
pop
jo
jg
pop
xchg
cld
mov
xchg
cld
popf
cld
movsb
imul
cmpsb
outsl
dec
push
call
sbb
mov
cmp
or
mov
packsswb
jno
cli
stos
xchg
sbb
xor
dec
in
test
push
jne
ret
in
shl
add
mov
pop
lcall
je
fdivrp
jmp
cmp
cmp
cmp
push
aas
insl
aas
mov
cmp
es
dec
lock
lcall
dec
pop
inc
and
call
add
pop
pop
sub
int
std
fildll
aaa
ljmp
in
in
fdivs
push
stc
insl
xchg
jmp
inc
sbb
bound
adc
xor
add
jg
insl
inc
push
dec
test
sarb
es
jnp
cld
sub
fsubp
mov
mov
mov
call
pop
or
icebp
ret
dec
xchg
loope
mull
mov
pushl
pop
out
jmp
cmp
pop
adc
inc
adc
lock
inc
cmp
fcoms
mov
or
lock
push
shlb
or
push
push
mov
xchg
clc
lcall
jns
push
mov
mov
jmp
inc
pop
pop
les
push
jg
insl
mov
out
shlb
jl
stos
loope
mov
mov
repnz
mov
dec
jnp
add
cmp
lock
and
mov
and
sbb
nop
jle
jle
jle
mull
sbb
mov
pop
loop
jmp
negb
or
jecxz
rorb
cmp
cld
cmp
leave
and
stos
fxch
loope
jmp
sbb
cmp
cmp
xchg
hlt
push
sbb
pop
jg
push
in
outsl
lock
mov
stos
pop
dec
and
sbb
out
sar
outsl
mov
in
mov
dec
aas
xchg
aas
pushf
push
inc
cmp
xor
jmp
insb
jno
iret
mov
push
fdivs
cld
call
push
adc
je
nop
cld
stos
fstpl
push
insl
loopne
xor
sub
push
push
pop
pop
sbb
clc
cmp
inc
mov
fldcw
inc
loopne
and
rcrl
addr16
vmread
xor
sub
loopne
movsl
mov
pusha
aad
ror
or
adc
shrb
inc
push
adc
sub
arpl
cmp
out
dec
jle
sti
sub
lret
cli
or
and
pop
xchg
add
jmp
and
cmpxchg
mov
xchg
cli
jg
ret
or
mov
inc
jo
fcoms
jbe
outsl
mov
jl
pop
icebp
icebp
fisttpll
dec
cld
decl
popl
outsl
or
lahf
jnp
sbb
jns
pop
clc
push
in
std
add
fiaddl
mov
cwtl
sahf
iret
adc
das
dec
inc
mov
fmull
loop
mov
inc
pop
dec
xchg
mov
shrl
jae
adc
outsb
out
mov
push
xchg
fistpll
outsb
aas
ljmp
or
sbb
enter
inc
dec
inc
nop
das
jno
lock
or
mov
adc
push
stos
dec
cmpsb
and
ljmp
xor
adc
lds
jo
cmp
or
add
enter
cli
pop
ret
mov
ficoml
cli
mov
pop
mov
or
jmp
jbe
push
out
or
xchg
dec
cli
pop
or
xor
and
mov
add
leave
out
pop
fidivrl
ret
data16
pop
or
adcl
jmp
lcall
call
aam
mov
adc
xchg
movsb
cld
push
ja
adc
mov
addr16
adc
and
popf
and
jg
jg
xchg
and
cli
adc
inc
scas
mov
sbb
outsl
cmc
jg
lock
pop
insb
dec
data16
mov
push
add
lods
mov
es
mov
mov
mov
icebp
pushl
js
jp
jl
jle
fldenv
jmp
dec
or
decl
les
in
cmpsl
lock
shlb
adc
movb
outsl
loopne
in
and
sub
icebp
mov
out
xchg
inc
add
pop
mov
push
and
lods
or
xchg
test
xor
xor
mov
and
movsl
jle
leave
lret
mov
or
and
dec
std
sub
push
and
jg
incl
push
push
pop
lahf
popw
js
test
lahf
ljmp
loope
insb
loop
ret
pop
pusha
jmp
leave
xorl
js
jmp
je
jbe
jp
clc
pop
sahf
jmp
sti
repz
cli
and
xchg
mov
jmp
aaa
or
push
inc
mov
lcall
mov
je
out
cmpsb
jb
les
adc
test
cld
scas
andl
pop
rolb
loop
xchg
xchg
mov
test
pop
fs
stc
push
jne
aad
call
dec
outsl
inc
dec
pop
fwait
out
test
std
mov
notb
iret
adc
sbb
and
pop
mov
pop
and
decl
mov
cmp
adc
sbb
and
imul
call
mov
cmp
push
and
mov
or
adc
fcomip
lcall
cmp
das
dec
xor
add
jb
je
pop
push
add
xchg
test
aaa
clc
das
xor
sbb
push
movsl
sahf
stos
push
mov
sub
mov
imul
adc
mov
cmp
and
inc
incl
aas
dec
daa
push
lds
fcoms
xchg
adc
xchg
pop
fimull
dec
rolb
cmp
push
es
rorb
pop
test
cmp
pop
cmp
cmp
call
pusha
cmp
lahf
adc
imul
ljmp
lea
inc
imulb
lock
in
and
pop
clc
push
pop
insl
insl
xor
lods
scas
in
rcll
arpl
push
xor
pop
ljmp
xchg
jl
movsl
in
cmc
test
adc
loop
mov
decb
pop
add
pop
lret
lahf
loope
test
std
xor
jg
dec
and
or
mov
add
push
push
insb
test
outsl
mov
dec
cmc
and
es
mov
pop
loop
rcrl
adc
sub
dec
mov
inc
push
mov
outsb
rorb
xor
daa
mov
fistpll
mov
xchg
mov
push
nop
adc
dec
fnsave
leave
mov
xchg
cli
xchg
adc
insb
add
pop
fadd
xchg
mov
lods
xor
mov
nop
add
test
mov
add
cli
das
push
xor
ret
mov
adc
pop
gs
push
sub
repz
push
mov
aaa
das
adc
sbb
into
decl
add
aaa
call
mov
movl
testl
clc
fadds
pop
faddl
test
iret
adc
jne
scas
aam
repz
daa
or
push
and
fsubs
inc
sbb
popa
dec
mov
and
in
out
cmp
jl
xchg
add
int3
mov
sbb
cmp
add
arpl
stos
cmpsb
je
inc
mov
sbb
sub
push
mov
fcmovnu
pop
in
cli
add
lret
leave
mov
addb
int3
sbb
inc
rolb
filds
popl
idivl
pop
cmpsb
popa
xlat
lret
mov
stc
ret
pusha
imul
insl
outsl
cmp
xchg
fadds
add
outsb
push
lock
inc
mov
fsubrs
sub
sub
fistps
push
pop
xor
xchg
stc
das
fs
mov
adc
addr16
xchg
and
jae
xchg
and
xchg
inc
inc
pop
ja
clc
lcall
add
rcrb
sarb
pop
adc
fucomip
pop
into
adc
pushl
xchg
adcb
mov
or
and
push
and
mov
test
or
inc
clc
nop
push
lds
cmp
popa
stos
jmp
add
sub
fwait
or
jg
jmp
push
pop
idiv
add
jbe
xchg
dec
add
sbb
call
mov
jmp
add
cld
adc
push
arpl
or
incl
ljmp
das
fsubr
inc
inc
daa
bound
repnz
jmp
sti
mov
inc
cmp
pop
adc
insb
imul
sbb
pop
xchg
pop
ret
xorl
shll
imul
xor
add
lods
aam
push
insl
sub
test
sbb
jmp
xchg
mov
popf
jne
xor
and
push
cmp
ljmp
outsl
xor
mov
xchg
ljmp
imul
xor
inc
push
bound
xchg
pop
jns
and
mov
add
sbb
xchg
xchg
dec
inc
xchg
push
movsl
test
bound
lret
pop
jmp
in
inc
aad
pop
xor
imul
sub
and
adc
mov
loope
xor
lea
fwait
xchg
adc
aas
sub
mov
sbb
adc
mov
mov
dec
adc
add
mov
and
push
inc
ja
lret
int
mov
loop
lock
fidivrl
mov
inc
inc
and
push
dec
daa
hlt
aaa
jle
adc
jns
jo
add
adc
push
adc
xchg
pop
dec
sub
xor
xchg
ljmp
dec
lret
sub
dec
sbb
pop
adc
add
dec
sbb
and
imul
xlat
mov
jmp
test
cmp
lret
cmp
pop
mov
in
rorb
call
or
push
add
out
test
cmpsl
or
mov
lock
imul
cmc
dec
idivl
aad
std
push
jbe
cmp
xor
push
jg
call
sar
stos
mov
test
add
jecxz
inc
out
xor
add
imul
es
push
or
pushf
and
aas
orl
mov
push
pop
mov
jb
add
jo
pop
xchg
push
shrb
push
mov
sub
add
add
inc
adc
ret
add
cltd
adc
or
call
mov
xor
popa
aaa
sbb
inc
jl
adc
jmp
jg
mov
sbb
popa
cmpsb
adc
ret
inc
pushf
mov
sbbb
cli
dec
or
daa
jns
mov
xor
test
rorb
jo
inc
sbbl
cmp
sbb
dec
sub
mov
test
popa
mov
cmc
subb
movsb
jmp
test
in
sbb
inc
cltd
inc
repz
xchg
movsb
addb
push
aad
jmp
mull
mov
cmc
add
push
int3
cs
pop
pushl
js
xchg
ljmp
add
jo
ret
dec
das
fists
sahf
aaa
ret
test
int3
jo
mov
andb
fidivrl
cmp
mov
cmp
aaa
icebp
sbb
test
xchg
loopne
cli
gs
pop
call
addr16
leave
andl
out
insl
adc
je
jmp
jae
cli
decl
rcr
mov
adc
decl
and
out
xchg
xor
test
clc
decl
cwtl
pop
call
or
sbb
movsb
shr
daa
or
mov
xchg
stos
in
dec
addl
sub
cmp
ret
ljmp
and
das
hlt
ja
lds
sub
xchg
xor
fs
cli
test
cmp
test
mov
jg
pop
adc
cmp
lds
fmuls
sbb
pop
incb
in
push
adc
imul
push
sbb
push
xor
push
push
imul
xchg
pop
popa
stc
data16
mov
and
jae
dec
cmc
mov
enter
shl
mov
add
push
inc
lret
insb
xor
or
lcall
dec
aad
nop
push
mov
jecxz
fisttpll
and
or
adc
int3
xchg
inc
push
push
mov
push
iret
mov
push
lods
mov
mov
fwait
addb
scas
ret
push
ja
cwtl
lods
loop
dec
dec
or
pop
xchg
cld
and
adc
mov
mov
pop
mov
push
sbb
rolb
cmpsl
je
lcall
into
icebp
inc
dec
pop
pushf
scas
xor
adc
inc
andl
xchg
pop
mov
inc
pop
rol
cli
jl
loope
iret
dec
loope
inc
fwait
and
icebp
sarl
inc
nop
jne
pushf
fdivs
test
aam
pop
adc
xchg
pop
stos
push
gs
roll
and
fsub
jmp
add
sahf
and
fstl
xor
shrb
inc
xor
xchg
jbe
push
cmp
xor
outsl
sbb
insb
mov
stc
inc
dec
es
inc
into
lcall
inc
inc
jecxz
pop
inc
jp
int
cmp
adcb
sbb
cld
arpl
xor
cmpsl
jp
clc
test
xor
adc
repnz
adc
pop
mov
orl
in
jmp
xorl
push
mov
mov
push
roll
daa
mov
fdivp
data16
fnstcw
jmp
repz
aam
aaa
xchg
mov
pushl
clc
xor
mov
lods
jl
lahf
push
in
mov
sbb
xchg
inc
add
negb
clc
mov
mov
lret
inc
mov
cltd
xchg
in
repz
push
push
sbb
mov
fsub
and
cmp
or
mov
shl
mov
sbb
xchg
inc
decb
adc
add
jle
hlt
lret
sbb
or
dec
sbb
jno
cmp
mov
iret
ja
frstor
shll
sbb
es
in
shl
sub
mov
into
adc
and
xor
test
scas
push
push
lock
cs
xor
lods
sbb
lds
or
in
pop
add
or
cmp
and
inc
mov
stc
sub
shrl
hlt
xor
jno
mov
insl
add
or
adc
or
stos
jmp
je
sbb
jp
pop
shrb
inc
mov
cmp
push
or
or
jl
xchg
mov
and
or
or
mov
or
orl
push
fisttps
addl
push
mov
or
arpl
popa
jg
mov
inc
cwtl
add
bound
outsb
pop
push
pop
inc
insb
sbb
insl
ss
cmpsb
mov
and
fstpt
jmp
xchg
jmp
pushf
add
inc
jne
loopne
and
daa
adc
and
pushf
mov
push
das
call
dec
xor
jl
push
push
sbb
loopne
test
insl
mov
xor
test
mov
adc
push
adc
sarb
adcl
iret
cli
aaa
lcall
lcall
push
incb
aas
popa
cmpsb
daa
ret
je
jmp
xor
pop
sahf
mov
int
cmp
shll
js
mov
lock
daa
adc
mov
jns
iret
ret
sbb
iret
lock
and
pop
add
in
pop
popf
or
cmp
lock
inc
mov
xor
xchg
dec
ljmp
stc
sbb
fmuls
xchg
outsl
pop
dec
addr16
fdivrl
sub
pop
jno
jbe
jne
push
pusha
or
adc
inc
inc
das
pop
pop
cmp
cli
in
repz
hlt
xchg
jg
ret
loope
and
inc
push
cld
sub
dec
rcll
or
icebp
aam
dec
mov
jle
adc
jle
popa
arpl
in
add
jbe
add
int
stos
and
xor
or
stos
es
inc
mov
xchg
or
pop
mov
outsb
sub
leave
jno
lods
pop
pop
lcall
ret
sahf
pop
mov
andb
pop
add
dec
cs
popf
xchg
pushf
jo
inc
mov
addr16
flds
xchg
jp
pop
sbb
ret
testb
xor
push
xchg
jbe
addb
sbb
repnz
sbb
mov
dec
fdiv
mov
negb
or
adc
push
jg
sbb
jge
push
data16
adc
ljmp
mov
testl
push
sub
add
adc
cmp
rep
xchg
in
adc
std
or
or
int3
cmp
push
push
mov
adc
int
pushf
mov
cmp
mov
call
jge
pop
pusha
hlt
fisttpl
mov
xor
jo
cmp
test
ljmp
data16
and
pop
aaa
sbb
mov
sbb
test
stc
mov
subb
pusha
shl
incl
cmp
and
out
and
dec
cld
ja
inc
out
push
sbb
movb
scas
adc
scas
sub
mov
loope
adc
jmp
cwtl
sub
lock
xchg
cwtl
call
fidivrs
clc
dec
mov
lret
std
cmp
test
pop
inc
addr16
sarl
out
aad
call
imul
stos
jl
daa
adc
lret
cmc
outsl
loopne
jl
mov
or
pop
jp
jb
sbb
inc
ret
mov
xor
dec
sub
sbb
push
pop
mov
loop
fadds
inc
sbb
adc
mov
jmp
cmpsl
ljmp
shrl
or
das
inc
aaa
gs
in
and
nop
sbb
repz
mov
sub
enter
xchg
insl
pop
sub
bound
shlb
enter
sbb
clc
lahf
clc
dec
inc
inc
push
and
cltd
cs
adc
pop
push
bound
xor
sarb
jbe
lea
dec
or
enter
inc
sub
sbb
movhlps
icebp
xchg
or
dec
sbb
pop
je
mov
in
add
jg
cmp
dec
cmp
mov
jbe
sbb
enter
imul
out
inc
enter
arpl
push
jmp
add
inc
push
pop
push
dec
mov
frstor
das
cmp
mov
mov
sub
pop
ss
xchg
pop
pop
mov
outsl
int3
add
bound
inc
mov
imul
pushf
in
dec
jl
test
cwtl
movsl
imulb
mov
xchg
push
and
je
and
adc
pushl
and
mov
aaa
pushf
push
ret
in
shl
lods
jg
js
pop
inc
mov
jne
rcrl
mov
test
cmpsl
test
mov
mov
mov
out
mov
call
add
test
push
push
cmp
pop
in
or
xchg
lcall
call
sbb
add
daa
or
sub
leave
inc
iret
pop
or
add
sbb
inc
sub
inc
cmp
inc
shl
mov
vorpd
nop
andb
sub
test
add
nop
loop
call
pop
xchg
aas
add
xchg
aaa
sub
cmp
dec
mov
pop
mov
jb
call
pop
dec
cmp
pop
and
add
inc
dec
jno
or
mov
rcrb
or
jle
xchg
sub
repnz
shrl
xchg
mov
sub
jle
daa
movsl
sub
add
add
sub
push
lods
jmp
lea
daa
jne
cmc
pop
jbe
imul
mov
bound
test
inc
jae
adc
mov
fwait
cld
movb
repnz
push
adc
iret
por
out
testb
shrb
js
inc
fildl
xchg
jp
repz
push
fwait
inc
sbb
add
jp
pop
and
loopne
or
push
inc
cmc
out
call
jno
or
xor
adc
aaa
dec
cmp
jno
xor
cld
pop
cmp
clc
cmp
dec
call
rcl
mov
call
cmc
mov
enter
lahf
sub
cmpsl
mov
ss
out
jmp
mov
dec
nop
inc
testb
test
pushl
add
loope
jb
rcl
add
and
sub
mov
gs
and
xor
fmull
jb
and
push
stos
mov
sub
sub
mov
adc
add
adc
mov
xorl
mov
push
daa
add
jb
daa
mov
mov
or
idiv
imulb
mov
ljmp
mov
push
ret
jg
adc
mov
ljmp
mov
push
testl
xor
test
mov
inc
mov
popa
pop
in
lods
mov
add
cmc
pop
mov
inc
pop
ret
mov
data16
or
mov
inc
call
lods
jne
push
add
adc
xchg
sbb
jb
adc
inc
inc
add
ljmp
mov
ljmp
xor
lret
add
cs
fstps
mov
stos
adc
xchg
cmp
mov
insl
adc
adcb
daa
frstor
in
insl
dec
inc
dec
cmp
cltd
roll
pop
xchg
loopne
xchg
adcl
mov
mov
jmp
and
mov
aaa
add
gs
das
jo
imul
cmp
xlat
outsb
adc
iret
push
xor
mov
push
enter
fcoms
xlat
jg
jg
mov
adc
and
icebp
add
mov
or
out
or
push
xor
xor
jmp
sbb
or
and
ds
or
mov
jmp
cmc
or
sbb
shlb
add
imul
pusha
shlb
repz
subl
cmp
movsl
scas
add
push
cmp
cmp
push
je
out
sub
xchg
scas
fs
in
cltd
sub
insl
sti
ror
repnz
jmp
js
xor
call
js
repz
push
pop
sbb
mov
pop
mov
or
shl
sti
fisttpl
cmp
test
nop
rorl
das
je
pop
mov
in
xchg
xor
sub
pop
test
dec
aad
aam
mov
mov
rol
adc
pop
rcll
push
cmp
sbb
add
ret
fsubrl
jg
movsl
mov
hlt
push
pusha
subl
out
dec
xchg
push
stc
cmp
push
popa
sarb
and
fs
cwtl
add
subb
leave
add
push
and
or
xchg
or
icebp
popl
pop
inc
repnz
push
in
xchg
cmp
adc
mov
imul
sub
xchg
icebp
aas
lea
stc
adc
add
in
imul
push
scas
nop
scas
orps
lods
icebp
das
jge
xchg
add
aam
adc
lock
and
das
stos
adc
inc
mov
pop
push
jno
inc
outsl
dec
inc
sub
or
jmp
mov
divl
sbb
lods
jns
push
pop
sti
inc
or
sbbl
lret
mov
clc
jg
lock
pop
jp
cli
sbb
aad
mov
in
or
mov
fsubs
fidivrl
sub
ljmp
adc
imul
adc
sub
lods
lret
sbb
push
xchg
jb
jmp
push
ds
push
adc
jo
lret
fisubrs
mov
test
ss
pop
jns
add
aam
lds
mov
rcrl
insb
cmpsb
push
psrlw
pusha
mov
mov
mov
xchg
mov
sbb
in
fistpll
movsl
out
fadd
sbb
push
addl
jmp
xchg
or
push
rcr
jecxz
ret
push
push
push
rcrl
lods
insl
mov
lret
fcompl
je
push
out
nop
and
jne
sub
pop
and
jo
clc
mov
outsl
adc
pop
cli
sub
test
dec
xchg
inc
lea
cmp
shl
dec
add
or
or
inc
mov
jg
cmp
xchg
pop
repz
push
cmp
loope
in
inc
int3
push
js
sub
ret
add
int3
xchg
leave
add
xor
push
repz
and
xor
jecxz
popf
cmp
pop
pop
fisttps
inc
pop
mov
inc
lods
push
shl
je
bnd
ret
jbe
mov
addb
or
sti
in
roll
xchg
cld
es
pop
dec
jne
lret
inc
and
loope
or
lock
mov
mov
inc
mov
jo
xchg
mov
jl
test
and
push
es
lods
scas
xchg
mov
inc
push
push
xlat
movsl
sub
or
xchg
push
mov
jmp
mov
fucom
mov
outsl
aaa
lock
icebp
push
pop
mov
jl
sahf
push
xor
clc
test
stos
xchg
or
xchg
xor
int3
call
loopne
mov
scas
dec
push
mov
lods
cmp
cmp
mov
push
xchg
dec
popa
jmp
mov
jmp
adc
xchg
add
daa
sub
lret
dec
add
cli
jbe
inc
lcall
pop
cmc
add
xchg
mov
sub
xchg
out
call
and
daa
adc
xorl
adc
adc
and
inc
and
jmp
addr16
lcall
pop
push
decl
add
add
xchg
sbb
adc
add
ret
incl
xor
outsb
or
enter
je
loope
in
icebp
pop
ja
pop
call
addl
jnp
inc
xchg
fldl
cmp
add
pop
pop
daa
subl
inc
decl
lock
pop
insl
out
insl
adc
out
and
pop
cltd
ljmp
std
clc
inc
push
nop
push
pop
je
leave
xor
daa
out
int3
repnz
ds
test
call
xor
ja
lods
arpl
xchg
call
and
mov
sbb
add
push
push
dec
ljmp
dec
outsl
test
push
je
pop
cmc
aam
jb
or
xor
mov
out
cld
add
jne
xor
push
mov
push
cmpsb
aam
cmc
push
jp
cmp
in
add
inc
adc
je
jl
and
mov
dec
stos
inc
outsl
inc
adc
bound
arpl
stc
jp
aas
push
sub
mov
add
add
rcrl
jo
ret
cmp
xchg
add
xor
jg
and
imul
xchg
cmp
das
adc
fsub
push
bound
xchg
fldl
std
jmp
hlt
mov
cli
aad
add
inc
push
cmp
cld
mov
inc
ljmp
xchg
inc
sbb
clc
ret
adc
cmp
lea
inc
xchg
loope
and
adc
dec
les
cmp
inc
in
iret
clc
incl
es
popf
cmp
fsts
insb
popa
ret
push
jne
std
mov
xchg
pop
xchg
pop
insl
outsb
movsl
mov
test
xor
or
xchg
sar
ljmp
sbb
out
inc
arpl
clc
adc
aam
dec
jle
mov
jg
cld
call
cmp
cmc
mov
scas
call
mov
mov
rcrl
nop
call
xor
pop
lret
or
and
je
inc
pop
std
adc
push
jne
or
mov
lods
adc
lods
cmpsl
es
push
jl
xchg
les
imul
es
int
mov
ret
adc
clc
sahf
mov
mov
adc
push
popa
loopne
push
sahf
mov
rorl
cmp
adc
pushf
repz
ljmp
pop
xchg
dec
test
xchg
dec
hlt
insb
les
push
cmp
cli
jge
pushf
mov
or
push
incb
add
fisttpll
call
or
xchg
xor
pop
cld
xlat
pop
aas
jae
pop
dec
and
orl
or
shlb
sahf
xabort
leave
out
push
or
iret
jne
lcall
pop
repnz
inc
shlb
icebp
dec
or
popf
and
pop
ss
aam
sbb
nop
adc
cmp
sbb
sub
adc
pop
aam
popa
ja
loope
adc
push
pop
pop
sbb
ss
fbld
and
stc
stos
jp
gs
aas
ds
cmp
sbb
push
cld
shlb
pop
mov
daa
jne
jae
bound
cmp
pop
jo
pop
ljmp
jg
shrl
mov
or
fs
repnz
pop
insl
sbb
add
test
add
movsl
loop
sahf
or
xchg
dec
daa
push
fsts
push
loope
inc
bound
dec
ret
mov
decb
incl
jae
or
movsb
push
daa
adc
call
rcrl
adc
sahf
push
fadds
popa
aam
jnp
add
decl
ret
popf
int
cmp
mov
xchg
cwtl
pop
or
test
call
adcb
bound
mov
jecxz
call
or
lea
push
xor
inc
adc
xor
mov
inc
fimuls
sbb
sbb
sbb
or
jb
rcll
mov
pop
orl
pushf
mov
push
push
add
call
or
call
and
in
xor
jb
fldcw
and
fdiv
jo
test
push
push
dec
lcall
pop
jmp
pop
sbb
js
sbb
jns
and
std
and
xchg
dec
add
adc
mov
mov
pop
add
push
dec
dec
pushl
ror
sbb
push
cmp
icebp
push
call
xchg
push
movsb
int3
push
adc
je
pop
push
cwtl
fs
decl
or
sbb
orl
mov
cmp
out
dec
cld
pushl
in
pop
fmull
mov
sahf
cmp
stos
jno
inc
inc
sbb
push
lcall
xchg
test
sbb
jp
adc
mov
xor
mov
mov
sbb
inc
js
inc
push
jae
xchg
loop
push
push
rcrb
xchg
mov
faddl
push
xor
push
cmp
jl
pusha
push
lods
sbb
je
pop
ljmp
stos
cmp
fnstsw
call
aaa
mov
sub
fwait
nop
lods
inc
mov
nop
inc
pop
add
bound
mov
lcall
hlt
sbb
inc
clc
in
mov
mov
dec
jmp
cltd
jmp
je
xor
and
nop
vhsubpd
mov
adc
inc
lahf
cmpsl
flds
enter
ret
mov
insb
gs
push
cwtl
mov
cmp
xchg
mov
and
or
rcrb
sbb
push
outsl
and
in
ja
lret
aad
enter
mov
cmpsb
mov
jp
dec
nop
jle
ds
loopne
push
sbb
jns
inc
cld
and
jp
loopne
dec
and
or
cmpl
jg
ret
insl
dec
sub
clc
dec
loopne
pushw
testl
sub
adc
or
add
pop
adc
mov
pusha
inc
add
addb
add
jg
clc
daa
aas
push
cs
movsl
sti
insb
cli
push
arpl
jmp
ret
mov
pop
clc
cmp
arpl
nop
mov
in
je
or
sbb
and
ljmp
push
push
testl
sbbl
ljmp
mov
nop
cmpsb
in
xchg
push
inc
shrb
addb
inc
or
dec
mov
cmp
push
int3
push
push
call
aaa
loopne
mov
push
xchg
mov
cmp
cld
and
adc
lahf
rcrl
iret
lods
je
arpl
dec
aam
rcrb
roll
add
icebp
pusha
cmp
xchg
or
das
rcrl
jae
shll
pop
dec
aam
fidivl
jo
shlb
mov
or
adc
push
mov
dec
push
loop
lahf
mov
mov
xor
mov
jo
mov
mov
in
int3
test
push
jge
test
cld
fists
xor
adc
push
insb
add
cld
dec
loopne
sub
stc
push
loop
subb
dec
fiadds
mov
xchg
insl
push
aad
incl
aam
pop
adc
pop
push
negl
imul
in
push
icebp
sbb
call
mov
decl
leave
inc
inc
call
mov
sbb
and
xchg
sbb
ja
push
xchg
movsb
and
or
rcrl
call
dec
jmp
mov
jnp
repnz
adc
call
sub
pusha
dec
mov
jne
add
incl
js
push
sub
dec
repnz
test
lret
dec
sub
out
sub
inc
adc
and
pop
xor
fdivs
fidivrl
mov
das
pop
or
aaa
int
push
cld
call
push
xor
adc
add
jmp
mov
pusha
push
sahf
jo
or
inc
mov
cs
rolb
push
pop
push
mov
je
or
and
dec
loop
cmpb
mov
mov
incb
iret
and
xchg
jg
inc
and
int3
adc
test
pushf
push
sub
or
test
lea
sub
mov
decl
out
jbe
adc
add
dec
fcoms
test
je
sub
shr
jge
or
daa
cmp
shr
sub
add
xchg
sbb
hlt
sub
sbb
inc
cmp
pop
xor
or
inc
cmp
aad
add
mov
jecxz
and
scas
sub
or
cmp
xchg
inc
push
add
cmp
and
arpl
int3
movsb
xorb
pushf
sub
jb
popa
test
aad
pusha
dec
xchg
adc
inc
xor
pop
inc
mov
out
loopne
sbb
xchg
movsb
ljmp
push
push
aas
pop
pop
pop
addr16
xor
inc
xlat
repnz
pop
push
push
jo
inc
and
test
adc
jg
jl
xor
add
loopne
inc
test
xchg
js
inc
cs
mov
cmpsl
inc
inc
idiv
add
push
xchg
inc
hlt
mov
inc
ret
das
pushl
dec
inc
sbb
sub
insb
pop
cli
fcom
adc
sbb
decl
pop
addr16
inc
push
pop
out
mov
inc
sar
idiv
outsl
mov
push
mov
dec
xor
js
clc
mov
push
and
mov
mov
push
mov
dec
pop
call
rclb
movb
cwtl
test
stc
out
mov
adc
imul
and
inc
jmp
iret
ljmp
add
cwtl
fdivs
pop
repz
jns
lcall
and
out
fdivl
inc
lea
inc
ss
push
lret
incl
pop
jne
jb
xor
mov
nop
in
and
decl
xlat
cmp
and
push
hlt
rcrl
ljmp
jecxz
dec
cmp
push
mov
dec
shll
clc
enter
scas
cmp
mov
jg
mov
cltd
enter
outsb
data16
jns
sbb
call
imul
push
fld
sub
or
inc
inc
fsubl
cld
mov
sbb
add
and
sbb
xchg
cld
pop
aas
or
in
or
mull
sub
dec
dec
test
push
sbb
inc
and
stc
rcrb
aam
sarb
dec
mov
and
jmp
xchg
int
lods
cmp
sub
jbe
mov
inc
mov
repz
xor
cmpsl
and
fistl
push
adc
sbb
ds
popa
mov
cwtl
inc
xor
cmpb
in
and
in
inc
xchg
enter
push
aaa
jns
out
fwait
jmp
pushl
sbb
std
jle
push
fdivr
jge
xor
daa
imul
dec
pop
loope
test
call
lock
dec
adc
mov
and
sub
inc
pop
and
mov
sub
ss
jle
sbb
mov
lods
cwtl
dec
cmp
push
jmp
xor
or
push
cmc
jmp
aam
ljmp
call
negl
pop
cltd
popa
cmpsl
bound
fdivl
xor
popa
in
sub
and
mov
push
push
cmp
sar
push
into
adc
cmp
push
sbb
fsts
xor
pushl
out
inc
jo
lods
lret
daa
lahf
in
sub
stc
mov
and
push
ret
push
xchg
pop
mov
stc
repz
clc
and
out
mov
dec
inc
sbb
inc
push
and
cmp
jne
test
jno
mov
or
outsl
hlt
aad
fldcw
jb
movsl
dec
test
pushl
mov
orb
icebp
push
hlt
cltd
dec
sbb
orl
or
lcall
mov
sbb
xor
mov
push
xchg
pop
loop
cli
sub
js
negb
adc
push
cmp
call
xor
push
lret
frstor
xlat
and
mov
push
jle
mov
cld
ljmp
ja
dec
out
dec
cld
mov
clc
sub
xchg
aad
insl
std
xchg
inc
jns
jnp
push
pop
jle
add
popf
call
sbb
dec
fldl
test
add
aam
push
mov
inc
xor
jns
inc
dec
and
pop
or
mov
lret
mov
dec
cmpsl
adc
mov
pop
pop
mov
add
addb
lea
xor
sbbl
lahf
ljmp
call
jb
lds
mov
cmp
mov
fbld
nop
mov
ret
push
xchg
inc
jmp
cmc
psubsw
call
cltd
je
sub
xor
nop
jp
and
push
call
loopne
lret
push
stos
jo
test
xchg
xchg
incl
addr16
inc
leave
jns
insb
cmovo
sbb
aad
mov
push
sub
push
xchg
add
xor
or
int
insb
adc
pop
shrl
push
fldl
jno
mov
dec
into
jl
and
ret
in
pop
inc
xor
das
mov
mov
out
jle
loopne
and
and
push
incl
adc
or
call
cmc
sub
or
das
mov
dec
in
stc
xchg
add
jmp
sub
ljmp
xchg
std
hlt
ret
fldt
or
and
shrb
in
lea
mov
xlat
sahf
push
decl
push
jmp
cwtl
inc
call
or
jg
xchg
xchg
and
or
and
cmpsb
adcl
repz
rol
xlat
icebp
lcall
lock
adc
and
lock
pop
repnz
lcall
dec
push
pop
pop
rorl
lret
push
add
sbb
adc
push
dec
and
fidivrl
jp
adc
inc
jo
cmp
mov
shl
jmp
pop
dec
cmpsb
and
or
pop
jne
mov
push
test
insl
jb
jbe
push
push
jecxz
sahf
cmp
test
or
insl
test
dec
fs
js
sbb
pop
xor
ljmp
sub
scas
sub
test
insb
call
jp
inc
loop
fstl
dec
xor
ja
dec
pop
loop
inc
jne
inc
daa
lea
movb
cs
jge
adc
sbb
mov
stos
push
or
data16
aaa
or
or
push
testb
mov
ljmp
inc
cmp
insl
sub
call
test
mov
repnz
outsl
std
pop
and
jecxz
add
out
mov
lea
ljmp
push
jmp
inc
mov
or
push
mov
inc
mov
xor
lcall
mov
insb
rcll
and
or
subl
repnz
jnp
lds
push
mov
cmpsl
xchg
inc
stos
cmp
call
insl
sub
push
leave
pop
or
sub
mov
mov
push
mov
mov
imul
inc
and
mov
push
ficoms
fwait
or
je
push
add
gs
mov
decl
adc
dec
mov
std
call
jns
push
and
inc
add
push
push
cltd
das
inc
pop
aaa
in
adc
jo
sarl
xor
ljmp
pop
les
dec
ljmp
pop
or
mov
jno
push
cmp
shld
jmp
mov
fs
lret
loop
mov
and
cld
dec
mov
out
cltd
adc
jp
jp
call
mov
decl
out
adc
and
pop
cs
inc
jne
clc
add
mov
push
add
enter
xchg
sub
rclb
cmp
dec
clc
push
or
jg
loopne
inc
jmp
cmc
mov
mov
fistl
cmp
push
jg
rcrl
pop
push
cmp
test
lea
push
cmp
mov
xchg
and
insb
push
loope
mov
lock
lcall
push
maxps
sarb
push
int3
xlat
pushf
add
nop
dec
lahf
push
or
adc
fsubrp
or
xor
stc
addb
testb
pop
cmpsl
fs
cmpsl
popa
add
fistpll
aaa
mov
popf
xchg
xor
xor
in
das
shrl
mov
and
in
push
sarl
je
iret
push
cmc
call
out
push
dec
sbbl
ljmp
test
addl
mov
mov
pushl
or
add
stos
push
test
add
das
sub
and
loope
jge
sar
adc
mov
fs
dec
test
cmp
imul
push
cltd
nop
and
xor
mov
mov
call
test
sbb
or
jne
scas
mov
movl
fstpt
mov
int
or
cmpsb
adc
in
shrb
inc
sub
pop
popf
fs
rcrl
and
cmp
outsl
jmp
test
or
mov
sub
aam
cmp
popa
or
jmp
cmp
inc
aas
popa
es
sub
cmp
popf
int
popf
dec
fistl
movsl
cmp
pop
inc
mov
fld1
xor
jb
fcos
imulb
and
inc
jmp
dec
dec
lahf
add
cmp
mov
or
xchg
sub
sbb
mov
loop
xchg
mov
ss
addb
pop
pusha
shlb
scas
popa
pop
mov
dec
ljmp
fidivs
mov
bswap
adc
dec
je
push
or
aam
andl
mov
push
jle
ljmp
dec
mov
nop
sbb
sarl
and
inc
call
in
stos
adc
xchg
jbe
cwtl
ss
test
dec
mov
int3
fs
add
clc
out
or
ficompl
pop
or
adc
call
mov
jns
in
sub
sbb
out
scas
jo
repz
les
daa
dec
in
shll
mov
in
or
inc
push
into
setno
jbe
aad
add
sub
js
inc
aad
xor
jp
dec
add
xor
fmull
cmp
mov
outsl
ret
shrl
dec
dec
enter
sbb
incl
loope
jnp,pt
testl
sbb
mov
ret
call
nop
push
loope
xor
fisubrs
mov
rorb
outsl
mov
or
jmp
popa
cmp
mov
sti
jmp
push
push
sbb
mov
or
dec
je
inc
in
jno
inc
leave
or
ljmp
or
decl
out
int3
jp
imul
cltd
xchg
sbb
inc
jbe
pop
cld
pop
xor
scas
xor
add
les
enter
ret
aad
js
ljmp
mov
ljmp
js
cs
sub
imul
or
cltd
inc
add
les
sbb
jmp
jo
sub
cld
jl
jne
sub
sarb
mov
or
and
pop
out
incl
xor
lock
lcall
ret
mov
std
inc
inc
or
hlt
cmpl
dec
jg
sahf
xor
jmp
mov
and
adc
clc
call
dec
add
xchg
mov
in
mov
xchg
int3
cmp
pop
call
je
ret
loop
inc
ret
or
adc
and
decl
cmp
int3
push
push
inc
or
movsb
and
add
fists
and
mov
mov
sub
push
lds
call
or
call
mov
or
or
pop
popa
add
daa
mov
jno
push
cmc
shlb
add
cmpsl
outsl
pusha
mov
andl
and
push
mov
daa
push
adc
pop
push
jno
add
je
push
adc
gs
push
add
push
xchg
mov
test
js
mov
andl
scas
inc
and
fcmovb
out
push
sbb
out
push
mov
or
decl
flds
in
inc
add
leave
xor
les
cmc
cld
mov
movsl
push
push
int
jl
dec
jne
lock
aas
xchg
jne
lock
out
shll
dec
outsb
loop
incl
aas
jbe
mov
dec
xchg
call
repz
push
cld
mov
jae
cmp
incl
call
sub
jmp
loopne
or
cmp
je
fidivs
jo
rclb
mov
lcall
push
push
mov
out
add
test
ss
jo
les
add
xor
mov
xor
popl
xchg
dec
xchg
stos
cmc
les
xchg
cmc
dec
enter
adc
jnp
pop
sbb
cmp
leave
or
outsl
iret
mov
std
pop
jae
xor
mov
loop
and
or
dec
adc
pop
mov
out
decl
mov
jae
ret
or
add
test
dec
aam
mov
in
mov
push
sub
movsl
lcall
push
mov
xor
iret
inc
and
jle
mov
xchg
rclb
ljmp
and
inc
mov
test
or
and
repz
cs
addb
lock
mov
aas
addr16
mov
hlt
jno
je
and
call
cmp
cmp
adc
adc
adc
and
loop
mov
mov
jo
inc
inc
xor
mov
jae
mov
mov
mov
call
fs
xor
mov
sbb
cmp
int
push
dec
and
cmp
pop
xchg
pop
mov
or
or
add
addb
mov
fcmovnu
add
xor
push
push
mov
sub
inc
adcl
pop
dec
or
push
test
dec
mov
lds
fwait
ret
mov
inc
cld
push
push
add
lock
xlat
and
ss
flds
imul
push
jbe,pt
dec
push
fcoms
sti
inc
dec
add
inc
push
std
cmpsl
sbb
add
iret
xchg
push
mov
call
inc
push
cwtl
sahf
rclb
jg
incl
testl
cmc
adc
enter
mov
or
ret
adc
fwait
sti
nop
or
es
decl
xchg
and
loopne
add
mov
inc
adc
lcall
test
xor
xor
nop
jg
xor
cmp
adc
pop
aas
xchg
cmc
mov
out
jns
cmp
test
fsubs
jb
fdivs
cmp
stos
test
andl
jbe
mov
mov
push
push
subb
sbb
adc
add
xorl
adc
subps
jo
jb
sub
add
mov
sub
dec
jmp
push
pop
jo
lret
sbb
loopne
jne
or
add
cmp
jo
or
dec
lcall
test
das
inc
jmp
xchg
mov
lds
adc
outsl
add
aad
inc
mov
shll
mov
mov
push
sbb
and
sarl
andl
xchg
pop
jne
mov
arpl
frstor
shrl
jp
mov
jbe
decb
pop
aaa
mov
dec
sub
push
ret
adcl
mov
daa
dec
add
dec
jae
and
outsl
jbe
mov
push
push
sub
xorb
jne
test
fimull
rclb
ljmp
cmpl
mov
pop
and
pushf
cmp
push
push
mov
mov
jo
lret
sbb
jl
and
mov
dec
std
sbb
or
mov
loop
pop
mov
push
js
fsubrs
rorl
test
xchg
dec
dec
in
lock
aad
jmp
pop
push
addr16
sbb
ds
push
push
enter
insb
loopne
push
push
push
xor
stos
sub
pop
lret
inc
sbb
cmp
push
sub
clc
jle
lods
sbb
fildl
jns
jno
rcrl
loopne
inc
fstps
and
popf
push
add
mov
pop
cwtl
cmp
jl
cli
aam
add
push
testb
fdivp
mov
cmp
loop
lea
mov
add
insb
sbb
out
xchg
mov
push
jecxz
pop
sbb
and
xlat
sti
sub
fs
cmp
aad
pop
mov
jmp
pop
lock
mov
sub
call
and
mul
aam
je
sbb
data16
imul
test
shlb
mov
sbb
or
adc
mov
dec
xchg
jae
shr
cmpsb
ret
mov
adc
mov
lcall
and
sub
push
xchg
cmovl
iret
es
or
addr16
sti
stc
xchg
sub
add
sbb
fiadds
cwtl
arpl
or
and
data16
and
movsb
je
lahf
xor
loope
jl
lock
call
pop
jno
jae
imul
imul
inc
leave
dec
or
fs
ljmp
sub
ss
fistpll
jae
push
aas
popa
mov
jne
sub
jne
push
push
and
aas
fyl2x
adc
fsubr
adc
push
mov
xor
xor
cmpl
sub
sbb
inc
push
mov
inc
jmp
lret
jmp
insb
adcb
cmpsl
aaa
aad
push
mov
jne
cmc
mov
loope
pop
dec
adc
push
push
inc
jns
xchg
pop
invd
pusha
or
inc
sar
das
inc
js
inc
and
sbb
jmp
jmp
pusha
xor
cmp
mov
mov
sbb
sub
cvtps2pi
and
pop
or
mov
enter
push
outsl
into
out
inc
mov
xor
mov
je
xor
sub
int3
lds
xchg
scas
adc
or
inc
data16
and
daa
test
icebp
jg
lcall
cli
daa
and
movl
movsl
clc
rolb
jg
cmpl
add
xor
xchg
mov
inc
ret
sbb
cmp
call
pop
lock
imul
push
lods
sarb
jmp
in
mov
lock
xlat
out
out
adc
xor
into
test
fcoml
cli
ds
add
lret
sbb
mov
mov
mov
xor
cld
cmc
int
rol
or
fs
movsl
addr16
or
sahf
outsb
movsb
inc
test
lret
rcrl
push
loope
cmp
mov
lods
mov
xchg
icebp
mov
and
iret
pop
or
in
negl
or
push
sub
push
aam
push
jns
or
xchg
out
sub
dec
in
lret
call
cmp
cmp
data16
incl
inc
ret
loopne
sbb
mov
push
pop
xchg
andl
dec
rorb
push
jl
jb
sub
dec
shll
je
jle
add
fs
test
incl
xor
xchg
imul
je
loop
es
mov
clc
js
popa
xlat
test
movsb
sahf
cltd
inc
adc
dec
push
incl
mov
push
inc
sub
or
jg
mov
decl
jo
add
data16
mov
jnp
push
lock
xlat
out
xor
adcl
mov
cld
iret
push
adc
xor
ljmp
adc
lahf
xchg
lret
push
je,pn
js
and
cld
sahf
pop
sbb
incl
shrb
loope
dec
repz
fwait
rcl
cmp
jo
aaa
or
mov
ljmp
xchg
cwtl
adc
or
pop
mov
sbb
sub
cmp
add
das
xchg
and
mov
mov
imul
cmp
and
in
hlt
es
fs
push
clc
ljmp
dec
ds
dec
and
hlt
popf
jb
pop
filds
sub
pop
clc
xchg
ljmp
mov
mov
push
dec
daa
mov
pop
call
mov
dec
or
inc
cmp
into
cwtl
adc
cmp
lcall
jmp
push
cwtl
or
mov
lret
rcrb
call
xor
aaa
or
roll
sbb
cs
leave
mov
cmp
mov
and
mulb
fsts
jo
pop
pushf
mov
mov
cs
test
stos
adc
mov
orl
mov
test
xchg
adc
inc
into
or
pop
std
sbb
and
jae
or
xlat
xor
jnp
and
ss
inc
xor
jl
or
mov
xor
pop
movsl
sub
xchg
mov
sub
inc
mov
xchg
mov
decl
std
fadds
les
mov
lcall
mov
into
inc
xchg
stc
adc
lods
outsl
jno
pushf
jae
mov
nop
cmp
jno
push
dec
push
xor
movsb
rolb
ds
cmpxchg
cmpb
pop
sbb
popf
mov
call
adc
adc
pop
xor
fdivrl
pop
mov
sub
sub
mov
mov
sbb
jo
or
mov
sbb
pop
and
addb
jmp
pop
sbb
sbb
sub
loopne
mov
adc
dec
incl
xor
arpl
cmp
inc
js
aaa
sbb
les
sub
cmpsb
mov
test
adc
shlb
push
outsb
add
cmc
fwait
dec
xor
cmpsb
inc
mov
dec
push
push
mov
mov
clc
leave
int
sbb
out
arpl
cmpl
add
xchg
push
fdivrl
insl
sub
cli
decl
negb
lret
sarb
push
cmp
push
add
popf
rolb
pusha
lret
cli
adc
inc
addr16
jle
push
add
and
mov
aam
in
dec
je
test
mov
xor
lcall
stc
and
pop
mov
sub
popa
lods
and
or
insl
inc
push
push
push
imul
addb
add
into
cs
mov
lcall
addr16
or
adc
sbb
mov
add
ret
leave
cmp
push
and
sbb
dec
adc
or
or
jg
decl
mov
mov
sub
call
and
fbld
sbb
call
inc
out
or
cld
loop
mov
dec
mov
nop
mov
push
cld
mov
mov
adcl
loop
movsb
xchg
hlt
mov
jbe
and
dec
fldl
mov
fildl
cld
lods
filds
popa
cli
jge
stos
lcall
push
popf
add
outsl
fcoms
push
rorb
nop
rolb
sub
imul
pop
lret
outsl
jle
push
and
and
or
pop
add
push
adc
addb
neg
adc
scas
pop
rolb
cmp
jb
fsub
jp
test
adc
ljmp
jno
pop
or
mov
sub
test
lcall
jbe
jbe
lret
imul
push
icebp
pop
out
sbb
cli
call
rolb
inc
inc
lret
hlt
outsl
xchg
jl
or
inc
cmc
outsl
xchg
sub
insb
or
cmp
int
lock
arpl
push
jb
jmp
or
inc
gs
mov
and
push
inc
dec
pop
shlb
lret
and
mov
out
movsl
inc
mov
test
shlb
das
jmp
or
sbb
sbb
shlb
inc
dec
sbb
aas
add
pushl
pop
jl
fs
iret
fmuls
xlat
cmpsb
pusha
rcrl
cmp
add
shrl
mov
repnz
cltd
das
push
sub
ror
and
dec
dec
and
jne
call
loopne
divb
jns
jne
add
mov
iret
adc
and
clc
ret
add
and
xchg
arpl
jae
test
or
in
pop
pop
aaa
call
cmp
fisttpl
push
je
mov
sbb
jno
aaa
loopne
jo
popa
lock
cli
or
lcall
cmp
test
or
movsl
mov
xor
or
or
dec
inc
adc
or
fs
roll
jb
pop
clc
cli
leave
and
xchg
push
incl
sbb
mov
ss
xchg
test
and
cmp
lods
jecxz
cmp
push
call
jg
out
adc
daa
adc
mov
fadds
and
incl
ljmp
das
ds
push
cmp
stos
lea
fdivl
inc
add
cmpsb
sub
fildl
adc
pop
test
movsl
lahf
jl
or
mov
and
push
add
mov
xor
clc
xor
or
push
pop
jb
aam
popa
inc
push
jnp
cmp
cmp
cs
mov
xor
xchg
mov
adc
sbb
mov
xor
mov
add
xchg
fildll
dec
shll
sub
sbb
adc
stos
sub
cltd
jae
ret
popa
adc
out
lods
jb
jg
adc
shll
jne
loop
or
jmp
cmp
sbb
shl
fmul
jbe
movsb
push
imul
das
lods
xor
xchg
ds
cld
mov
push
dec
xchg
enter
cs
dec
dec
les
mov
addr16
cmpsb
jp
cmp
dec
clc
call
dec
cmp
push
out
lcall
roll
lret
adc
cltd
add
pop
mov
add
sub
lods
push
test
mov
shl
mov
jo
fidivl
pop
and
arpl
mov
jle
cmp
js
outsl
sbb
mov
cltd
add
cmp
data16
inc
pop
decl
push
arpl
dec
je
iret
xchg
inc
xor
push
scas
sub
popf
cmp
xchg
mov
push
inc
cmp
incl
test
cmp
inc
dec
insb
lods
push
loope
cmp
shlb
insb
adc
incl
negb
stos
push
inc
push
push
inc
inc
cltd
int3
dec
add
cmpsb
mov
test
in
dec
sarl
lock
push
es
cmp
cmp
ret
push
cmp
cwtl
adc
testb
or
or
pop
add
leave
cmp
andb
cld
cltd
inc
and
testb
jb
cmp
or
push
mov
sbb
mov
incl
push
cmp
imul
add
test
mov
lods
ja
cli
dec
push
jle
movsl
cltd
jo
es
and
cld
jg
mov
dec
sbb
mov
movsb
test
je
jne
adc
lods
or
loopne
lcall
push
fisttpll
cmp
sbb
gs
xchg
sub
cld
inc
leave
mov
pop
xor
notl
ret
scas
mov
fs
cli
xor
mov
adc
pop
jge
lcall
in
test
or
gs
sub
pop
adc
adc
and
scas
bound
push
aas
xlat
in
adc
imul
cmp
xchg
mov
ss
fmull
icebp
sbb
xor
xor
test
pusha
and
inc
mov
cmpsb
sbb
imul
xchg
xchg
cmp
xor
xchg
sub
ljmp
cmp
push
sbb
add
cmpsl
and
sbb
pop
rorb
pop
push
pop
pop
pop
es
ret
lcall
in
or
mov
inc
mov
push
xor
out
data16
in
jbe
dec
jo
xor
cmp
jne
dec
dec
mov
ds
xor
addb
es
enter
mov
ss
adc
push
cmp
negb
xchg
rclb
or
pop
xchg
mov
xor
fs
push
cmp
test
mov
mov
loopne
outsl
cmc
xchg
lods
fsubs
punpcklbw
cmp
mov
shrb
pop
cltd
insl
xchg
mov
cld
inc
sbb
pop
movsl
inc
int
pop
gs
aas
je
mov
and
rolb
inc
data16
adc
fdivs
cmp
sahf
fdivr
xor
cmc
push
inc
cli
aam
mov
mov
incl
cmp
insb
cmc
sub
xchg
or
call
mov
ret
dec
mov
out
pushf
leave
xor
adc
and
jl
and
imul
aaa
mov
adc
pop
ret
xchg
mov
or
clc
aam
push
fs
mov
sbb
loope
jmp
add
sbbl
adcb
xor
adc
xor
repnz
cmp
fiaddl
call
lods
jecxz
xchg
testl
in
in
pushl
test
mov
inc
adc
mov
outsb
xor
pop
and
decl
faddl
nop
and
pop
push
sbb
add
mov
jmp
jne
aaa
mov
inc
sub
loopne
push
jbe
scas
cmp
cs
pusha
clc
add
pop
int
add
add
roll
jnp
cmp
mov
mov
imul
cs
and
lret
std
inc
pusha
cwtl
adc
clc
jl
imul
stos
fsubrl
and
sbb
push
xchg
aaa
or
subb
mov
xchg
xchg
push
leave
jns
or
adc
mov
mov
addb
adc
aad
rcl
xor
lret
or
sbb
inc
mov
jo
sub
fwait
adc
inc
lea
leave
clc
lcall
jle
dec
stos
outsl
cmpsb
lock
call
iret
rorl
arpl
mov
xchg
stc
dec
push
outsb
out
mov
or
call
or
lea
push
xchg
lcall
cmp
in
pushf
lock
mov
fcompl
and
inc
enter
inc
jne
leave
cs
xchg
test
nop
ljmp
call
inc
mov
iret
sub
push
sbb
push
and
je
inc
divl
hlt
push
cmp
imul
xor
inc
adc
jne
decl
mov
movsl
outsb
cwtl
lea
mov
inc
out
test
lcall
adc
enter
repnz
imulb
mov
outsl
lods
fsubrp
add
imul
cmp
pop
mov
mov
xor
sti
ret
dec
mov
push
adc
lcall
lret
out
inc
sub
xchg
cmp
gs
sbb
lods
and
gs
imul
rorb
sub
aam
jg
outsb
mov
pop
inc
testl
call
rclb
push
aas
insb
or
mov
test
test
xchg
sahf
aas
mov
jbe
setge
pop
repnz
sub
jno
or
mov
sbb
push
mov
mov
push
lret
fistps
mov
repz
and
insb
lahf
xchg
stos
fdivs
jg
mov
adc
sbb
fdivr
jg
outsl
ljmp
jnp
dec
pop
repz
and
leave
test
lods
lods
dec
xchg
ljmp
xchg
adc
lret
push
cltd
cmp
filds
push
loopne
push
adc
or
sub
adc
je
jnp
pop
xor
ljmp
shrb
lock
xchg
scas
mov
xor
xor
mov
adc
mov
mov
cs
adcb
adc
repnz
adc
xchg
fsubs
jae
iret
lcall
sub
and
xor
pop
or
movsl
aaa
pop
seto
xchg
or
out
mov
js
mulb
or
or
cmp
decl
and
xchg
mov
fisttpl
jnp
push
inc
jno
pop
lock
fs
test
pushl
xchg
sti
leave
xchg
mov
push
mov
addl
add
cld
push
mov
pop
sub
cmp
les
jns
adc
cmc
call
inc
xor
jl
xor
jbe
or
jno
ret
fldt
push
shrl
adc
fmul
sub
add
jg
insb
std
dec
cmp
sbb
arpl
jmp
xchg
mov
je
push
cmpsl
test
jnp
or
out
adc
add
fcmovu
orl
pushf
out
cmpsl
outsl
mov
outsb
inc
cmp
and
push
fwait
jns
xor
sbb
and
leave
and
lret
call
int
adc
and
stos
sbb
imul
jne
inc
push
or
mov
or
mov
aaa
sbb
mov
test
add
cmp
xchg
pop
inc
mov
pop
xchg
mov
lret
decl
mov
mov
add
jecxz
pop
mov
insb
xor
mov
cs
subb
and
sbb
adc
decl
pushf
scas
popf
inc
inc
mov
popf
adc
cmp
jl
sbb
pop
outsb
and
test
shrb
pop
stos
test
mov
inc
and
push
mov
add
jg
sbb
mov
cvtps2pd
das
pop
cmc
pusha
xchg
incl
sub
int
jmp
dec
test
je
sbb
push
xchg
and
hlt
out
cmp
repz
test
add
jle
mov
jnp
popa
sbb
roll
aam
add
jl
add
push
decb
popa
mov
sbb
add
push
xor
xor
push
push
orl
in
add
xchg
icebp
loopne
sbb
xchg
add
push
pushf
enter
into
and
mov
add
subl
rcrb
pmaddwd
mov
test
dec
xor
pusha
push
cmp
xor
test
cmovge
and
mov
xchg
imul
mov
lretw
scas
sti
loopne
insb
and
and
add
in
push
sbb
int3
sarb
sahf
mov
mov
lea
sbb
dec
pusha
add
inc
or
jbe
push
in
out
jg
or
fsubr
mov
inc
mov
call
fsub
and
sahf
jmp
and
jle
or
mov
incl
movsl
jno
inc
fs
or
call
jmp
ficoms
sbb
cli
dec
insb
scas
es
push
xor
push
add
incb
push
daa
cld
add
insl
cld
movsl
fdivrl
gs
push
mov
ljmp
xchg
mov
push
xchg
lock
aas
ret
mov
mov
inc
rolb
dec
cmp
mov
repz
lahf
jmp
xor
jno
iret
pop
mov
jge
mov
cli
outsb
mov
fldt
pop
gs
sbb
lcall
dec
mov
mov
les
in
dec
arpl
clc
add
imul
sub
and
add
pop
test
pop
or
adc
xor
std
inc
call
adc
sbb
aad
jecxz
orl
ja
xor
or
and
sub
cli
sti
lods
mov
movl
shrl
pop
jmp
inc
xor
icebp
mov
lea
out
xor
jae
sar
jl
add
icebp
popf
ficomps
mov
stos
pop
pop
mov
or
int
lret
decl
aas
movsb
push
pop
rol
decl
mov
cmpb
jnp
xchg
ljmp
pop
xorl
cwtl
cmp
test
inc
mov
pop
movsb
cwtl
ds
push
pop
pop
insb
cld
test
add
mov
xchg
pop
xchg
xchg
and
and
cmc
sub
leave
mov
adc
xchg
add
dec
or
jmp
sub
xor
inc
dec
ret
incb
ss
out
xchg
mov
adc
call
sarb
pop
and
or
imul
out
or
mov
andl
cli
dec
shll
adc
xor
ljmp
push
push
cli
cmc
jmp
mov
push
sub
ljmp
cmp
cmp
lods
xor
xor
push
inc
xchg
cmp
xchg
lcall
add
dec
dec
push
xchg
dec
ja
clc
les
sbb
ljmp
incb
mov
test
fcomip
adc
call
or
incl
push
push
mov
inc
rcr
or
mov
aaa
shr
call
aas
icebp
mov
testl
jae
adc
mov
push
cmpl
int
fdivrl
test
aam
jno
xchg
out
xchg
lock
adc
movsb
push
std
pop
add
test
xchg
jno
fildll
and
lds
je
imul
xor
lret
inc
ja
call
in
jp
lea
leave
insl
sub
push
push
dec
cmp
les
in
pusha
cmp
int3
dec
aaa
push
jmp
xchg
cmp
mov
inc
decl
loopne
mov
arpl
add
push
inc
inc
adc
and
or
ljmp
mov
inc
dec
test
inc
mov
clc
loopne
or
mov
xor
pop
or
or
rorl
mov
sub
push
jmp
push
rcl
call
adcl
outsl
push
sbb
mov
jnp
iret
call
jns
dec
push
int3
clc
xchg
jb
rcl
aam
jge
sbb
flds
dec
int3
std
mov
adc
push
ljmp
negb
das
and
adc
inc
scas
stos
les
inc
call
sub
ljmp
xchg
pop
cld
jnp
and
shll
inc
and
lcall
jecxz
repnz
push
sbb
push
push
addr16
in
sub
subb
pusha
jmp
add
adc
mov
test
push
test
in
sbb
adc
push
pop
push
sub
or
add
in
cmp
jl
inc
or
xchg
or
push
sbb
je
mov
mov
adc
adc
jae
adc
push
jge
shr
cmp
ja
mov
or
xchg
les
jns
cmpsb
call
push
xchg
loopne
sbbl
jns
push
jne
cmp
sbb
psrad
or
inc
push
mov
adc
adc
shrd
inc
and
sarl
iret
insl
popa
mov
push
or
sub
mov
fucomip
sbb
test
idiv
fistps
or
xchg
xchg
push
or
cwtl
inc
xchg
inc
push
mov
in
mov
add
sub
pusha
mov
cmp
pop
lret
mov
jg
stos
outsb
xchg
mov
int
push
xchg
cmpsl
xchg
and
push
xchg
sub
orb
or
push
incl
lods
add
inc
mov
std
testb
movsb
aad
mov
mov
push
rcrl
xor
ds
ljmp
pusha
mov
mov
push
aad
ret
and
mov
sbb
inc
xchg
insb
sbb
lahf
mov
mov
inc
xchg
or
sub
mov
lcall
mov
stos
cld
jne
sub
or
or
incl
idiv
scas
dec
adc
and
mov
mov
imul
insb
jmp
sub
cld
sbb
mov
jo
test
out
sub
sbb
cmp
jl
sub
fcom
adc
rolb
movsb
sbb
arpl
jmp
cmpl
jb
or
out
jg
dec
loope
fcomps
add
aas
adc
dec
mov
inc
inc
and
outsl
loopne
pop
aad
clc
call
sub
or
cmp
jns
or
mov
push
xchg
sbb
push
sub
push
testb
push
pop
mov
jo
xchg
popa
add
cmp
mov
inc
push
adc
filds
mov
cmp
out
adc
fnstcw
cmp
ret
adc
in
aas
cmp
xchg
push
xchg
mulb
je
hlt
int
sub
jle
mov
mov
or
xor
pop
sbb
ljmp
inc
sub
movsl
add
xor
icebp
push
inc
pop
out
add
test
mov
pop
pop
repz
pop
mov
push
fcomps
or
sbb
in
lret
inc
mov
daa
or
push
adc
pop
push
fs
addr16
push
bound
or
mov
add
inc
lds
in
cli
sub
mov
decl
cmp
and
xor
and
fcomps
aas
xchg
dec
dec
and
shll
sbb
push
jge
test
push
es
and
cld
mov
cwtl
mov
jp
adc
add
ret
cltd
jl
sbbl
call
dec
in
mov
add
lahf
xor
adc
lret
cmp
jg
mov
jecxz
test
or
bnd
iret
adc
pop
aas
mov
ljmp
jne
mov
jnp
dec
movsl
push
sahf
cmp
jo
pop
clc
mov
mov
cmp
push
sbb
jle
call
mov
lahf
cmpsb
push
fcoms
cmp
insl
inc
xchg
cmp
jmp
call
sbb
imul
inc
shl
pop
rolb
decl
xor
lods
push
outsb
mov
cmp
rcpps
push
and
jmp
test
mov
add
ljmp
push
mov
mov
icebp
adcl
jmp
mov
and
cmp
cwtl
fcoml
adc
insl
jecxz
add
cmp
jmp
pop
xchg
lock
inc
pop
decl
mov
lcall
or
jl
pusha
jne
mov
clc
das
xor
imul
and
ljmp
and
lods
adc
popl
push
add
xor
lcall
inc
pop
pushf
insb
or
incb
loopne
push
cmp
jmp
jg
std
push
pop
cmpsl
rol
pushf
adc
int3
repnz
or
push
inc
int3
bound
mov
ljmp
mov
je
scas
test
fs
xor
inc
loop
add
push
dec
or
lea
sbb
sub
pop
push
imul
push
pop
les
add
sbb
pop
in
fsubl
push
adcb
add
addl
xchg
sub
stos
dec
lock
ret
call
xor
aam
pop
cmp
jp
fmuls
cmp
and
jnp
push
dec
adc
insl
or
mov
cmc
push
out
fmuls
or
inc
jno
mov
pop
or
mov
pop
inc
or
test
mov
jo
push
xchg
sqrtps
daa
sub
cmp
or
jl
ljmp
loopne
dec
jmp
dec
dec
loop
bnd
js
scas
inc
xchg
aaa
jne
ljmp
inc
ret
xchg
mov
push
aad
enter
pop
paddsb
movsl
lods
int
pop
into
sbb
or
jb
mov
cmpsb
popa
movsl
call
mov
mov
mov
cli
sbb
out
call
das
mov
sar
cmp
push
sub
cmp
xchg
xchg
pop
repnz
cs
cmp
lcall
mov
decb
insl
shlb
cmpsb
mov
or
mov
imul
clc
aaa
popf
mov
adc
mov
loopne
or
incl
mov
cmp
or
mov
or
icebp
mov
aaa
pop
ss
xchg
mov
test
xchg
hlt
test
xchg
fidivs
inc
sub
adc
push
decl
in
dec
and
push
jnp
jg
inc
pop
dec
dec
jae
or
aaa
sub
decl
int
xor
inc
jmp
mov
cmp
xor
leave
pushf
test
jge
jae
lds
cmpsb
scas
or
sar
in
mov
cmp
ljmp
call
dec
xor
orl
ror
sub
add
xbegin
movsl
ficomps
aam
or
sbb
jg
mov
mov
pop
std
inc
add
aad
fisubl
lcall
and
or
cmp
in
lea
adc
div
and
pop
clc
mov
ds
scas
dec
cmp
and
pop
cmp
mov
gs
jle
insb
cmp
mov
inc
lods
push
dec
push
cmp
or
inc
enter
xchg
ds
push
or
into
or
xchg
push
xchg
nop
mov
iret
out
add
bound
inc
mov
jb
shrb
sbb
aam
dec
mov
lahf
ret
pop
or
push
pop
loopne
loop
mulb
or
fstps
pop
sub
adcb
inc
aam
pop
sbb
dec
lret
mov
daa
add
cmpsb
pop
xor
add
cmp
mov
lcall
nop
lcall
cmp
xor
mov
pop
shll
mov
mov
inc
out
push
sub
shlb
and
insl
mov
mov
fs
mov
lds
lock
mov
lahf
dec
je
movsb
int
decl
push
je
mov
push
dec
call
add
fsubrs
dec
mov
loopne
test
sti
fildll
or
cmp
subb
mov
jg
add
push
or
ja
gs
jle
xor
fstps
cmc
lcall
adc
mov
xchg
mov
imul
pop
jle
gs
aad
and
call
lcall
ljmp
adcl
outsb
adc
inc
jl
cmpb
clc
int
mov
fimuls
add
inc
mov
insl
pop
idiv
jg
dec
dec
cmpb
fmuls
push
sub
inc
mov
sbb
sahf
push
outsb
xchg
inc
mov
xor
loope
insl
icebp
inc
mov
data16
clc
mov
sbb
insb
ret
xlat
xchg
xor
sub
cmp
lret
pop
pop
add
sub
xor
push
outsb
int
xchg
daa
adc
int3
rorl
loop
inc
rorb
int
rcll
inc
cmc
and
xchg
sub
ret
add
test
inc
stos
or
or
jg
pop
and
cmpsl
test
fwait
fwait
xorl
aas
jg
jecxz
cmp
or
jbe
mov
push
rolb
push
mov
aaa
and
clc
es
push
out
mov
dec
jmp
scas
ljmp
xchg
mov
cmp
jg
loopne
jo
mov
mov
dec
mov
add
test
add
outsl
push
inc
push
lods
dec
fisubl
pop
dec
mov
pop
xorl
je
mov
xor
xchg
incl
or
sub
popf
xlat
dec
ljmp
icebp
iret
and
pusha
repz
jl
insl
int3
push
inc
repnz
inc
dec
xchg
mov
mov
cli
cli
xchg
cmpsb
pushl
fidivrl
push
lcall
andl
bound
lock
popf
mov
lods
pop
xor
pushl
add
stc
dec
xchg
inc
push
or
inc
mov
jne
incl
fstpl
push
sbbb
inc
cmc
pop
jbe
cmp
in
std
les
dec
clc
cltd
insl
out
shlb
push
ljmp
cmpsl
cmp
mov
jb
push
push
loope
test
push
dec
fnsave
das
xchg
push
outsl
mov
dec
dec
pushf
xchg
and
push
xchg
addr16
pop
insb
insl
mov
ret
cmpsb
mov
jmp
add
flds
sub
mov
dec
jmp
jg
filds
push
cmp
daa
dec
ror
pop
jl
in
inc
add
shlb
out
ret
inc
push
jl
insl
mov
cmp
in
jg
sub
sub
mov
mov
adc
push
mov
sbb
mov
out
ss
xchg
ljmp
orl
adc
or
std
out
lock
fiaddl
pop
jle
inc
push
xlat
in
incl
push
mov
mov
add
xchg
lcall
pop
mov
clc
mov
push
jne
add
adc
ljmp
aaa
push
test
popf
adc
push
or
outsl
ret
jae
pushl
xchg
cmpsl
repnz
xlat
rolb
ret
pop
scas
or
adc
inc
xchg
pop
inc
pop
adc
repz
adc
out
loope
cmp
sbb
in
sub
out
add
repz
sub
and
pushl
and
outsb
xchg
mov
push
cld
incl
lds
outsb
adc
inc
sub
sbb
les
addr16
jns
inc
mov
mov
mov
inc
sub
mov
add
test
push
adc
stos
ds
mov
insb
mov
mov
je
add
mov
mov
clc
push
adc
lret
dec
mov
arpl
mov
inc
pusha
loopne
xchg
push
or
es
jno
cmp
sbb
leave
shll
push
jle
or
enter
inc
pushf
pop
mov
jl
xchg
sbb
or
ficompl
push
inc
mov
movsl
add
fistl
mov
xchg
fcmovnu
pushl
mov
cmp
sub
adc
push
push
loopne
rolb
jg
and
nop
push
add
and
xor
cmp
xor
mov
rcrb
mov
test
cmp
dec
andl
or
int3
and
fildl
std
fwait
jbe
jle
jp
dec
addr16
or
pushf
jle
mov
cmp
imul
aad
and
mov
jg
or
add
cmp
mov
int
mov
cmp
test
pop
enter
jg
sahf
mov
push
test
add
hlt
adc
sbb
push
in
std
add
aas
fstps
or
adcb
adc
outsl
mov
pop
fisttpl
cmp
call
pop
xlat
xchg
or
adc
lcall
fiaddl
sub
adc
lea
outsl
fs
test
mov
rcll
cmp
lods
jno
mov
int
pop
push
test
jae
push
dec
and
psubq
call
arpl
dec
cmp
adc
cmpsb
arpl
jo
adc
cld
xchg
inc
pop
fadds
stos
dec
xor
stos
or
or
add
jne
cmpsb
int3
lret
aam
incl
movsb
rcrl
adc
bound
push
lcall
call
push
sub
lahf
fs
inc
mov
adc
popa
in
ljmp
ficompl
mov
dec
lcall
std
hlt
loope
daa
call
pop
repnz
and
and
xchg
adc
mov
push
push
cmp
cmpsb
push
pop
or
cmc
rcrl
insb
inc
sbb
mov
fists
std
loopne
gs
or
int3
inc
es
stc
into
push
call
aas
nop
add
hlt
sbb
cmpsl
adc
mov
adc
call
sbb
in
in
add
sbb
inc
shll
push
clc
lret
and
sahf
psrlw
mov
sub
xlat
adc
xchg
jge
test
sbb
jo
xor
adc
push
fstl
mov
test
call
jo
xchg
sub
and
ja
je
xor
inc
push
pop
int
jge
pop
ja
aad
pop
jmp
push
lret
dec
mov
lsl
mov
pop
cmp
mov
cmp
or
incl
aam
pop
mov
or
test
mov
arpl
incl
add
test
xor
rorb
shll
pusha
mov
xor
mov
or
mov
and
jmp
es
push
or
fsubs
xchg
cmp
call
dec
and
push
push
jecxz
pop
dec
dec
add
enter
mov
gs
js
jmp
pop
mov
xchg
icebp
pushl
addb
iret
dec
adc
je
int3
jne
mov
inc
sub
pop
in
test
fidivrs
loop
subb
je
dec
xor
ljmp
sbb
pop
jecxz
mov
jae
out
inc
in
add
icebp
fstl
lds
dec
add
mov
sbb
mov
dec
dec
cmp
add
aaa
clc
push
dec
lods
jl
call
jbe
and
mov
xor
push
or
adc
movsb
shll
clc
xor
dec
clc
cmp
shl
push
mov
mov
pop
inc
mov
filds
cmp
je
push
adc
cmp
sub
mov
decb
lods
and
dec
cwtl
lods
nop
orl
add
outsl
ret
sub
dec
mulb
adc
jg
data16
cmp
mov
lret
jb
adc
jge
xor
cmc
incl
xchg
inc
lret
adc
sbb
dec
pusha
pop
test
test
fs
sbb
pusha
xor
rcl
inc
inc
jmp
fsubl
rclb
ja
mov
mov
adc
dec
xor
dec
aas
gs
push
hlt
mov
call
inc
iret
push
out
push
mov
test
sbb
push
xchg
rclb
push
adc
or
cmc
shrl
mov
jne
subb
or
mov
dec
sahf
push
xchg
mov
jmp
cwtl
pop
call
mov
mov
loope
ljmp
loop
and
ret
pushf
inc
test
popa
mov
push
cltd
outsl
shlb
jl
pop
fwait
call
jmp
push
fistps
cmp
lods
xor
cmp
adc
mov
jnp
or
mov
add
cld
add
xor
fwait
mov
in
idiv
mov
lods
fisubrl
push
mov
ss
lea
incl
cmc
lcall
inc
incb
dec
repz
adc
inc
incl
push
cmp
push
push
sbb
ret
hlt
xor
sbb
setp
push
xor
in
jl
mov
mov
arpl
daa
movsb
test
or
outsl
mov
and
sbb
sub
cmp
pop
test
in
cld
jb
push
xchg
mov
and
and
mov
cltd
shr
decl
add
fbld
inc
loop
adc
inc
loop
add
lcall
and
pop
dec
pop
sub
add
inc
lret
inc
sbb
gs
dec
add
dec
shlb
sarl
div
mov
push
inc
xchg
clc
or
pop
xchg
and
mov
pop
add
cld
lcall
stos
mov
push
mov
cwtl
push
cmp
push
lock
in
ret
fisttpll
cmp
aas
adc
dec
dec
or
bound
shlb
push
movsl
popf
push
or
cmp
and
imul
lret
fistpl
lret
cld
push
mov
in
in
rol
mov
out
pushf
ret
arpl
imul
inc
iret
sub
testl
push
xchg
js
cmc
shll
repz
and
jae
cmp
sahf
movsl
fsubr
inc
lock
test
js
in
cltd
int3
call
loopne
dec
lods
fwait
aad
pop
inc
push
cmp
out
cwtl
dec
xor
mov
mov
add
call
arpl
lcall
push
ret
pop
int3
test
cmpb
jb
icebp
push
sahf
xor
push
or
out
push
fmull
outsl
adc
aaa
xchg
mov
mov
xor
pushl
push
and
lock
inc
or
adc
push
dec
movsl
cmc
ss
lcall
nop
loopne
push
jae
cltd
adc
arpl
cltd
outsb
xor
shlb
xchg
pushf
jmp
cmp
pop
gs
call
out
loope
call
dec
call
dec
je
scas
pop
and
jmp
cli
inc
mov
jmp
test
sub
jbe
ljmp
inc
sub
decl
stc
sub
mov
jns
pop
fld
clc
mov
jo
stos
std
test
iret
ds
call
sbb
pop
or
sub
dec
xor
fisubrl
outsl
xor
out
fldenv
inc
pushl
movsb
mov
inc
data16
data16
sbb
push
je
jle
decl
sub
lcall
ret
out
pop
jle
incl
adc
push
xor
add
inc
adc
push
lcall
adc
mov
sbb
shlb
test
decl
or
test
cs
push
outsb
fistl
lret
imul
call
sbb
cli
sbb
loopne
ret
ja
adc
negb
leave
and
inc
dec
and
les
mov
pop
je
jmp
ja
jns
dec
int
aad
js
sbbb
fstl
std
mov
into
push
adc
push
in
int
aas
fnstenv
dec
adc
xchg
sub
call
pop
or
pop
pop
mov
pop
jg
lcall
shrb
pop
xor
jnp
orb
cmp
xchg
sbb
je
cwtl
leave
cmpb
cmpl
mov
pop
test
xor
and
push
adc
enter
adc
adc
inc
das
lds
pop
xchg
nop
mov
mov
dec
dec
sub
add
lret
fisttpll
add
cltd
add
shr
sub
cli
jl
pusha
jmp
insl
fs
sub
cli
arpl
sub
imul
or
xchg
popa
pop
in
jg
in
pop
sub
sub
movsb
mov
mov
add
sub
roll
out
lods
mov
aam
movsb
or
int
cmp
jp
jns
dec
jae
shll
mov
repz
mov
mov
pop
xor
mov
mov
jb
fnstcw
jns
icebp
jle,pt
loopne
adc
or
aad
sub
jnp
or
lahf
mov
rcll
sub
ljmp
pop
sbb
mov
test
js
jno
pop
jo
jg
push
data16
mov
jnp
inc
fnstcw
stos
xchg
jl
lods
mov
sar
cltd
sub
gs
enter
cmp
stos
in
ret
jo
das
inc
ds
sub
dec
xchg
inc
push
xchg
add
mov
in
stc
add
daa
sub
cmp
xchg
cmp
sub
stos
jns
cmp
cmp
mov
jecxz
pop
adc
mov
icebp
adc
in
sub
inc
and
lcall
daa
inc
pop
push
or
and
push
and
or
cmpsl
incl
add
jbe
movsb
fs
js
adc
movsb
cltd
xor
sub
ja
or
dec
ja
mov
dec
sbb
mov
cmpsl
fnstenv
sbb
xchg
xor
jnp
js
pop
jnp
adc
repz
repz
jl
jg
repnz
push
jle
jno
sbb
pop
jae
jne,pt
xchg
jecxz
sarl
inc
dec
enter
dec
xor
fsubs
dec
ja
xor
mov
in
jns
rcrl
ret
pushl
arpl
push
mov
adc
pop
sub
mov
insb
ffree
sub
cmp
shll
leave
es
and
and
pop
lds
sbb
dec
pop
aas
dec
cmpsb
lods
imul
nop
cmp
sti
das
icebp
test
lret
ret
adc
pop
roll
pop
fsubl
cmp
jl
test
sub
imul
pop
push
inc
mov
sbbl
outsl
mov
add
and
cmc
sub
inc
sub
mulb
test
fdivl
push
mov
add
jp
pop
enter
sub
outsb
data16
leave
adc
icebp
sub
insb
mov
outsl
add
imul
push
loope
jae
jmp
inc
or
out
ret
fldt
add
rorl
scas
fidivs
fisubrs
mov
sub
in
outsl
out
jmp
adc
shrl
push
ret
pop
cmp
outsb
sbb
icebp
test
popf
fcmovnbe
sub
inc
cmp
sbb
sbb
jb
das
adc
mov
add
or
std
notl
fisttpll
and
inc
mov
pop
cwtl
cmp
aas
inc
imul
mov
bound
ljmp
sbb
sbb
or
bnd
stc
fcompl
add
cmp
mov
mov
stc
popa
jns
add
sub
js
pop
lds
lds
jl
and
mov
insb
push
loop
lds
or
sub
add
fcos
loope
shrb
shlb
das
lea
test
js
cmp
mov
fldt
imul
adc
mov
adc
jo
ljmp
and
sahf
loope
cmpsb
mov
or
mov
jae
je
dec
test
in
rcll
inc
add
hlt
testl
not
mov
mov
sub
popf
sub
push
jmp
add
sub
mov
neg
in
outsl
cld
fs
or
mov
or
and
enter
xor
dec
or
push
or
cli
cmc
bswap
add
test
leave
add
push
xchg
nop
push
pop
inc
in
inc
gs
and
and
test
inc
dec
or
xchg
ljmp
jp
das
lea
das
popa
lods
clc
subb
push
sbb
rcrb
adc
jbe
add
xor
fcmovb
aas
shr
cmpsb
sub
ja,pt
mov
mov
ffreep
jle
or
or
mov
mov
dec
inc
jmp
imul
mov
sub
test
test
and
mov
sub
insb
mov
mov
lret
scas
aad
test
cs
movsl
adc
inc
add
or
pop
xchg
sbb
sub
insb
aad
xchg
cmp
fistps
mov
dec
cmp
cmpsb
inc
push
leave
push
notb
and
pop
push
flds
push
ljmp
mov
cmp
mov
push
aas
mov
sub
xor
imul
adc
imul
bound
insl
ficompl
or
add
dec
test
es
call
roll
sub
mov
sub
pop
lock
fldt
ret
mov
push
and
rcrl
push
and
xor
adc
pop
cmp
xor
sbb
pop
or
das
mov
testb
outsl
push
cli
mov
add
dec
cmpsl
jmp
or
mov
mov
add
cmp
jmp
outsl
fists
movsb
pop
add
sub
call
lods
dec
das
fdivrp
fistpl
add
pop
sub
sub
or
mov
mov
adc
or
mov
ret
push
sbb
pusha
bound
mov
sub
outsl
icebp
fcmovnb
pop
test
jg
fldcw
and
in
sbb
and
fdivp
outsb
icebp
outsl
das
hlt
or
callw
sub
sub
fnsave
xchg
outsl
or
sub
ret
xor
add
sub
outsb
in
add
mov
push
outsl
nop
and
fldenv
push
loope
inc
rcrb
inc
or
in
insb
add
xor
shrl
imul
loopne
xlat
sub
cwtl
ds
mov
and
lahf
add
push
outsl
dec
fsubs
jmp
lods
push
inc
inc
push
fs
dec
ror
sbb
ss
pop
pop
adc
jns
cld
out
lret
xlat
mov
sti
loope
xchg
cmp
jb
pop
mov
and
popf
cmp
lods
cmc
fcomp
aas
movsb
sbb
call
lods
fidivs
add
mov
fdivs
mov
lret
loope
das
jno
lret
shll
mov
cmpsl
fwait
test
loopne
cmp
lret
shl
stos
pop
mov
loopne
pop
sub
add
stos
into
sbb
test
mov
inc
push
mov
jo
mov
mov
adc
mov
hlt
hlt
lret
or
add
rclb
sub
imulb
in
mov
sub
test
leave
push
leave
mov
das
and
loopne
loope
xchg
sbb
push
mov
and
xor
ss
sarb
sub
sub
and
orl
subb
push
fsts
cmpsl
push
xor
fsts
push
sub
test
xchg
flds
mov
in
bound
dec
dec
and
scas
xchg
push
or
jb
sbb
cmp
and
les
and
arpl
fcomps
add
push
inc
sub
stos
inc
ds
or
or
lret
xor
dec
and
mov
sbb
mov
mov
or
push
sbb
fstl
jno
inc
lock
add
dec
out
stos
add
enter
nop
inc
add
add
addl
sub
sgdtl
or
lods
cli
add
incb
jg
out
add
sti
pop
stc
jmp
ja
fisttpl
jmp
scas
mov
mov
outsb
mov
add
jmp
stos
std
mov
frstpm(287
in
pop
in
adc
cli
sti
sti
pop
out
mov
mov
sti
sub
paddw
stos
cmp
insl
sub
decl
pop
test
out
sub
lret
outsl
imul
add
in
fistpll
cmp
out
sub
sti
ljmp
sti
pop
or
pop
in
sahf
mov
cli
mov
mov
out
cmp
stos
stc
addr16
fwait
xlat
mov
popl
xlat
jne
jae
sti
cmp
mov
test
daa
mov
mov
lods
bts
jae
not
incl
lods
mov
scas
jmp
mov
jg
jmp
mov
mov
imull
pop
loope
arpl
test
out
jae
scas
cmpsl
push
subl
lcall
mov
divl
mov
outsl
mov
out
scas
aas
mov
iret
insl
push
xchg
scas
mov
shrd
jmp
fldcw
mov
mov
xchg
mov
mov
lahf
fwait
stos
call
das
or
xor
mov
std
das
aaa
pushf
in
pop
xlat
xor
scas
push
lods
in
fsubl
mov
sbb
dec
or
stos
fisttpl
xor
cmp
testl
xlat
mov
xor
jae
stc
scas
test
mov
scas
cmp
pop
stos
dec
jmp
cmp
out
lea
cli
jecxz
sti
mov
lock
inc
sti
out
cmp
outsl
mov
lahf
xchg
into
insb
push
sti
jae
push
out
int
stc
loope
stos
cli
and
jge
arpl
adc
xchg
mov
shrl
jnp
loopne
orl
fisttps
into
lock
js
jae
rcr
mov
mov
mov
sbb
ret
or
cmp
js
dec
addr16
aas
lcall
dec
outsl
stos
xchg
not
jo
jecxz
fwait
xor
pop
sbb
rcl
popf
cmp
push
fldl
fmul
aam
repz
shl
imul
jg
sub
aaa
dec
mov
push
mov
mov
lcall
inc
add
add
fwait
mov
int
inc
cld
add
movsb
adcl
add
xlat
sbb
lcall
push
xor
and
dec
ret
adc
xlat
fisubrs
add
outsb
lea
sub
pop
fnstsw
add
push
mov
or
mov
xor
mov
jbe
and
add
pop
div
sar
jmp
sub
jno
cmp
nop
lock
roll
push
in
mov
cli
dec
shlb
stc
push
in
or
je
je
dec
popa
outsb
fs
fsubrs
pop
push
push
popa
imul
gs
arpl
insl
incl
jbe
jb
outsb
push
outsb
sub
outsb
addr16
inc
call
adc
dec
outsb
outsw
push
and
jae
jne
fidivl
jb
gs
popa
sub
inc
adc
pop
inc
outsl
insl
insl
arpl
or
inc
imul
std
gs
jne
je
add
addr16
inc
outsb
jae
jge
outsb
imull
je
inc
push
outsl
sbb
je
push
inc
mov
mov
xor
inc
test
je
xor
inc
xchg
gs
xor
cmpsb
arpl
imul
mull
inc
outsl
jb
push
jae
aaa
into
mov
jle
inc
dec
inc
push
or
fs
icebp
inc
mov
jnp
xchg
lds
push
inc
jns
sbb
popa
outsl
push
jae
data16
lcall
xor
jmp
js
std
outsb
iret
inc
push
jns
gs
fiaddl
in
jbe
fistl
jae
or
or
in
insl
into
sbb
fs
popa
ret
push
js
popa
xorl
jo
arpl
jb
xchg
push
outsb
push
outsl
imul
sub
popa
mov
insb
icebp
gs
cmp
xor
push
push
mov
mov
fs
mov
lods
dec
adc
cs
fildl
insl
jno
jae
sbb
jo
ss
dec
gs
push
push
test
jne
dec
adc
ret
out
jns
inc
ja
movsl
pushf
mov
and
dec
inc
pop
fsubrs
pop
outsb
jb
jb
jbe
adc
incl
lods
xchg
mov
jo
dec
je
jns
sarl
xchg
jbe
js
insb
popa
mov
js
mov
repz
pop
mov
rorb
cmp
push
sbb
lea
inc
jg
add
sub
outsl
popa
inc
push
push
mov
xlat
imul
gs
jae
fstl
jae
inc
insb
sbb
pop
pop
inc
adc
or
bound
mov
mov
jo
mov
mov
sbb
aas
sub
xor
pop
push
and
imul
fsts
gs
addr16
push
mov
sub
pop
js
cwtl
cmp
ja
adc
je
dec
inc
pop
inc
outsb
dec
jae
popa
mov
push
jns
imul
test
insl
cmp
sub
insb
cld
ja
jbe
int3
adcb
imul
xchg
and
lahf
push
insl
cmp
loope
sbb
or
mov
jae
inc
adc
jo
fs
mov
xchg
inc
xchg
mov
repz
adc
in
and
stc
inc
and
ja
jo
outsb
lahf
cmp
fs
mov
dec
xor
pop
sub
lcall
pop
jnp
xchg
add
in
repnz
jo
xor
mov
ja
mov
dec
push
addr16
shlb
fsubl
add
inc
pop
rcrb
cmovns
mov
adc
leave
dec
cmp
leave
push
or
in
mov
fisubrs
add
stc
imul
in
mov
aad
add
jne
fldenv
mov
jno
push
mov
adc
into
es
ja
imul
push
mov
imul
rolb
lock
push
cmp
mov
sub
push
dec
call
imul
inc
mov
add
lock
inc
lds
insb
dec
jae
sub
popa
cltd
jno
outsb
jo
jbe
outsb
insl
jne
mov
je
fildll
sub
inc
and
ret
mov
push
ret
xor
insb
mov
gs
dec
outsl
js
sbbl
cs
xchg
andl
test
jno
push
jle
cmp
mov
xor
aam
dec
dec
push
or
inc
push
xchg
inc
insb
cmpsl
pop
xchg
lods
aad
inc
pop
andb
mov
test
jnp
add
pushf
hlt
mov
sbb
gs
jae
cmp
lcall
jbe
and
clc
and
dec
lret
movsb
sti
mov
mov
jae
bound
mov
push
subb
pop
and
inc
in
gs
sbb
push
ficoml
sbb
lea
inc
jbe
dec
mov
frstor
xchg
cmp
in
sub
dec
jbe
scas
adcb
pop
mov
dec
arpl
daa
mov
inc
jbe
cmp
addr16
inc
inc
push
push
adc
in
adc
inc
mov
inc
std
sbb
jae
fwait
inc
adc
loope
jg
cltd
addr16
mov
xchg
scas
ja
es
loopne
sbb
clc
js
and
xor
cmp
inc
inc
incb
add
xchg
push
test
aad
sub
xor
or
insb
or
sub
jno
jnp
imul
stc
mov
dec
sub
lods
mov
push
mov
jp
dec
mov
imul
and
rcl
dec
fimull
sub
sbb
insl
lret
out
and
push
cmpsl
sub
insb
aam
or
sbb
pop
pop
cmovle
push
ss
and
xor
dec
stos
aad
mov
jnp
push
xor
loope
xlat
or
xlat
xchg
xchg
and
inc
add
adc
loopne
lods
xor
push
inc
jne
add
out
mov
rorl
loopne
sidtl
dec
push
es
jge
add
iret
adc
xor
pushf
mov
add
or
add
mov
adc
sub
fstps
fcoms
pop
push
add
mov
add
movsb
cmp
mov
movsl
jmp
das
pop
fadds
and
jb
pop
rorb
daa
sbb
jnp
jae
daa
mov
adc
adc
pop
roll
dec
in
lret
sub
in
mov
arpl
adc
cmpb
dec
sbb
add
add
add
add
incl
add
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
