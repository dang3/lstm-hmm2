sbb
add
outsl
std
mull
bound
clc
lock
aaa
out
mov
xchg
sbb
outsb
lods
mov
mov
inc
outsl
xorl
test
push
inc
add
xchg
mov
fisttps
mov
out
sarb
dec
lods
xchg
sbb
sbb
cs
dec
imul
outsl
cmp
sti
mov
jbe
popa
shl
mov
jnp
pop
ret
dec
mov
mov
jbe
sub
fisttpll
fnstenv
bound
sbb
sub
cmp
ds
add
cmp
cmpsl
fldl
clc
push
out
imul
xchg
imul
je
adc
push
push
rcr
adc
add
dec
xchg
jae
dec
mov
jmp
in
mov
push
mov
sub
test
or
adc
sbb
sbb
sarl
jae
jno
push
inc
inc
leave
jge
cli
pmulhuw
cmp
add
inc
lods
fs
pushf
in
ds
in
notl
js
or
stc
inc
into
push
xchg
dec
fidivrs
decb
repz
mov
hlt
push
ss
idiv
stos
sub
std
jle
mov
movsb
mov
cmp
sbb
iret
in
int
xchg
cmp
divb
je
pop
ret
mov
xchg
jmp
pushf
clc
add
cmp
outsl
and
sbb
jl
rclb
js
ss
pop
lahf
cwtl
mov
lret
or
push
add
aas
jns
mov
mov
mov
rcll
sahf
mov
sbb
ja
jnp
shll
pop
mov
xor
jno
jno
xor
orb
mov
js
mov
inc
xor
out
xchg
sub
lret
push
fcmovu
in
xchg
pushl
lcall
shll
pop
dec
dec
notl
cs
pusha
xor
into
fdivrl
nop
push
push
sbb
pop
rcr
push
lods
push
fisttpll
cmp
pushf
mov
std
push
cwtl
test
pmaxub
in
lcall
inc
test
inc
sarb
flds
mov
mov
xchg
ljmp
and
fucom
lds
ja
shrl
push
ljmp
mov
enter
inc
scas
mov
mov
mov
ja
lods
out
xchg
xor
cmp
push
adc
jno
test
add
add
inc
sub
lock
mov
mov
jmp
hlt
push
pop
cltd
rcl
mov
pop
ret
mov
sub
mov
hlt
mov
jo
mov
imul
mov
or
pushf
mov
pop
and
outsb
in
sbb
sahf
call
enter
in
xor
stos
dec
inc
out
into
mov
sub
and
mov
mov
pop
test
fistps
and
add
movsb
ljmp
in
mov
rorl
jns
pop
jnp
pop
sbb
sarb
xchg
bound
cltd
jp
pushl
xchg
shlb
cmpsb
fiadds
pop
scas
mov
fdivrs
pop
mov
inc
jmp
push
fwait
push
ret
pusha
iret
cmp
push
cmp
mov
sub
testl
mov
pop
in
xchg
addr16
movsb
sti
repnz
inc
fcoms
test
cwtl
jmp
out
mov
popa
pop
fucomp
add
scas
rcrb
inc
test
xchg
cmpsb
add
scas
and
xor
sub
pop
dec
sbb
dec
bound
inc
scas
pop
push
pop
cmp
cltd
fs
icebp
mov
in
and
sbb
sub
test
xchg
mov
add
xchg
cmp
imul
pop
icebp
aam
ffreep
dec
jmp
or
clc
or
fstl
xchg
sub
pop
das
inc
inc
mov
adc
sbb
mov
insl
pop
sub
jno
xchg
jne
and
xchg
and
xlat
sbb
push
imul
stos
popa
imulb
fcmovne
mov
test
in
jmp
pop
sub
jl
in
sbb
lea
push
daa
xchg
mov
sti
mov
mov
mov
or
pop
jl
inc
cmp
in
jecxz
scas
inc
fisubrl
scas
mov
movsb
jecxz
lods
sbb
add
jnp
mov
or
imul
scas
jecxz
negb
jl
xchg
js
shrl
sti
sarb
dec
adc
mov
sbb
push
mov
rclb
cmp
add
adcl
aam
mov
push
jmp
rclb
hlt
mov
jnp
popa
push
or
lods
out
mov
cmp
mov
les
mov
jl
incb
in
cmp
adc
imul
cmp
ljmp
fcom
adcl
cmp
push
sbb
je
ss
subb
notl
loop
addr16
push
push
mov
push
daa
xchg
cltd
add
jl
and
mov
jb
mov
cmp
fidivrl
add
or
xor
call
cli
stc
sbb
and
cmp
rcrl
test
sbb
xor
sbb
cmp
push
adc
inc
cmp
add
dec
and
pop
push
jmp
std
das
and
js
test
mov
jg
jno
ja
push
jp,pt
lret
xchg
or
dec
push
mov
dec
lock
cmpsb
or
fidivs
mov
scas
xor
jmp
cmp
out
jb
sub
sbb
data16
dec
dec
popf
dec
mov
mov
and
fisubrl
and
test
lods
cmc
aam
sub
sub
sbb
fildl
in
add
mov
ds
cmpsb
jb
movsb
dec
scas
jbe
faddl
xor
xor
insb
cld
pop
xchg
xchg
aas
div
fwait
dec
data16
xchg
push
dec
cwtl
or
push
mov
cs
fistpl
adc
jo
movsb
cs
cmp
hlt
dec
sub
or
cltd
in
arpl
je
sub
out
loop
mov
sbb
jns
jle
rcr
dec
pop
int3
push
xor
cwtl
imul
sub
sub
xor
jb
pop
adc
pop
inc
jmp
xor
call
inc
push
cmp
andl
pop
loop
push
inc
xchg
hlt
xchg
pop
fucomip
test
dec
pusha
mov
gs
cmp
imul
lea
pop
jecxz
mov
add
mov
orl
sbb
mov
mov
mov
out
sbb
popf
jbe
bnd
repnz
mov
mov
mov
ror
pushf
jbe
sbb
jg
sarl
popf
icebp
es
fwait
jle
push
xchg
xchg
in
test
jb
aam
aam
loope
xlat
xchg
mov
shlb
add
lret
arpl
cmp
push
lcall
out
aas
xchg
jne
data16
mov
imull
xor
in
ja
inc
fcmovbe
pop
jl
lods
pop
cmpsl
out
test
insl
jg
xor
nop
daa
cmp
push
dec
nop
cltd
add
jns
inc
shlb
mov
dec
rclb
test
jo
xchg
gs
pop
jp
cmc
in
lock
daa
cmp
mov
rorl
sti
in
daa
rclb
stc
push
imul
push
dec
adc
loopne
jmp
mov
or
push
or
es
loope
mov
xor
dec
int
mov
mov
or
inc
ficomps
mov
mov
pop
add
outsb
jo
loopne
iret
stc
das
push
jnp
mov
loope,pt
ret
sbb
jae
sbb
pop
outsb
in
inc
cmp
push
jle
mov
call
fldl
scas
ljmp
int
call
fsubs
rcll
or
ja
enter
pop
push
aas
arpl
mov
dec
xor
inc
out
mov
fcomps
sub
xor
mov
mov
ja
mov
xchg
inc
in
dec
pop
imul
insl
xor
ror
jle
test
hlt
jmp
mov
and
scas
hlt
dec
hlt
dec
mov
mov
pop
sub
add
push
and
cmpsl
sbb
inc
adc
cmp
incb
jmp
test
adc
or
xorl
or
pop
mov
push
xor
sub
sub
xor
clc
enter
popa
mov
addr16
addr16
leave
pop
mov
xlat
mov
and
mov
sbb
lret
ja
sarb
insl
hlt
xchg
dec
int3
out
das
jecxz
dec
popf
mov
and
fadds
mov
push
xor
sahf
jp
cwtl
jbe
into
xchg
out
popf
sub
stos
adc
leave
adc
enter
insl
test
ja
dec
jmp
iret
lahf
or
pusha
fimuls
out
push
rcll
and
mov
fwait
mov
iret
mov
sub
sahf
jns
in
movsb
mov
xchg
xor
cs
cmp
sbb
ds
mov
cmp
mov
lea
and
icebp
lock
repnz
mov
divl
xchg
out
int3
pop
jge
lods
xlat
push
mov
xor
sahf
fbld
mov
pop
sub
mov
cmp
dec
aas
pop
push
rorl
xchg
pop
push
mov
pop
mov
lock
pushf
jg
push
test
mov
mov
and
jmp
aas
pop
sub
or
or
shl
xor
mov
fs
leave
testl
push
sub
mov
xor
addr16
inc
or
mov
mov
jnp
xchg
dec
sub
arpl
bound
shlb
aaa
mov
mov
and
stos
xlat
shrl
xchg
xchg
iret
repz
out
cld
inc
sbb
or
lret
fsubs
les
outsl
or
rorl
out
inc
sbb
cmpsl
mov
jnp
out
orl
cmpsl
lcall
lret
jp
add
std
mov
orl
jae
aaa
insb
or
pop
sbb
jb
adc
ret
test
xor
pop
int3
push
dec
insl
fsubs
lods
push
fildl
out
insl
push
pop
pop
lea
aas
test
ja
lock
jo
or
cmp
lret
pop
xchg
push
pop
outsl
mov
or
jp
sub
jno
dec
aaa
fistl
shlb
inc
sbb
pop
test
push
dec
mov
das
pusha
insl
lret
xchg
xor
adcb
xlat
int
push
subl
ss
push
ret
mov
pop
out
das
cltd
dec
adc
outsl
inc
dec
shl
cmpb
lcall
bnd
loop
jle
sbb
xlat
ficomps
mov
and
push
call
push
push
adc
lret
mov
mov
movsl
xchg
addb
push
adc
sbb
js
lds
call
adc
mov
lcall
sarb
jae
xor
je
pop
fs
movsb
jbe
dec
dec
std
mov
sub
pop
sub
ja
dec
popf
jg
jle
sub
push
testl
pop
mov
aad
push
inc
xchg
cmp
or
cmpsb
push
jne
repnz
cli
jl
add
adc
or
sti
mov
shlb
dec
cmp
mov
fwait
aam
or
inc
or
hlt
out
push
cmpsb
fdivr
adc
in
stc
mov
jle
rorl
pop
sbb
xchg
pop
rorb
aaa
insb
gs
xchg
sbb
xchg
fisubrs
push
push
jp
das
movl
rolb
and
lcall
pop
jns
pushf
lret
lods
rol
xor
and
jbe
mov
loopne
je
outsl
pop
fldcw
push
out
add
push
mov
jb
sub
cmpsl
std
xchg
cmp
mov
inc
mov
lcall
scas
outsl
iret
push
insl
pop
arpl
xchg
daa
jecxz
sbb
repz
jns
cmp
adc
fcom
sbb
add
lret
fucomp
shll
inc
aam
and
scas
sub
xchg
je
lea
inc
in
out
mov
imul
orl
mov
or
dec
pop
stc
or
pop
mov
or
mov
pop
rorb
cmpsl
ds
jae
shlb
pop
lahf
pop
rcl
ss
ja
stos
xlat
inc
ja
pop
or
test
sub
xchg
and
push
hlt
jno
pop
sti
lahf
fisubs
pshufw
rcrl
or
jb
push
movsl
inc
loop
popf
pop
mov
jp
adc
in
fwait
jmp
xor
push
mov
ljmp
test
hlt
adc
popf
sub
xor
leave
loop
jns
dec
adcb
call
ret
lock
xchg
jo
cmp
xor
mov
aaa
ljmp
mov
lret
sbb
jo
aaa
fs
movsb
call
mov
mov
sbb
ja
sub
jns
sub
in
fsubr
addr16
aam
into
cmp
push
dec
gs
sub
inc
fisubl
pop
arpl
fldcw
bound
sahf
mov
fsubrs
add
roll
test
xor
pop
stc
in
das
jg
arpl
inc
cmpsl
mov
mov
mov
mov
dec
sarl
adc
xchg
sub
sarb
add
adc
push
int
inc
xchg
and
aam
lahf
ss
sbb
inc
dec
adc
outsb
gs
test
je
dec
mov
les
decb
movsl
ljmp
push
subb
popa
pop
stc
jns
and
daa
push
sub
adc
ja
or
pop
arpl
outsb
add
imul
insl
lods
jo
ret
in
pop
cmpsb
arpl
jle
mov
dec
add
call
pop
frstor
pop
push
je
lock
adc
fcoms
jmp
jl
sub
cwtl
mov
and
inc
push
leave
cmp
inc
out
jecxz
pop
cmp
mov
es
movl
pop
aad
and
ret
mov
adc
ret
iret
push
shlb
mov
repz
cld
jge
adc
push
cmpsl
inc
or
add
jle
lahf
lret
pop
pop
push
sbb
mov
push
dec
sbb
dec
rol
cmpb
inc
out
ficoms
roll
jo
daa
and
fs
or
inc
pop
imul
mov
mov
enter
push
xlat
gs
add
incb
cs
push
cmp
cmp
jl
jb
xlat
push
notl
cmp
lods
mov
stos
push
lods
loop
cmp
push
movsb
dec
lcall
mov
and
mov
cmp
in
push
xor
jmp
into
pushf
jo
les
xchg
pop
add
aaa
mov
cmp
test
lret
xchg
add
pushf
add
adc
jae
adc
stc
mov
out
mov
inc
mov
call
sbb
insb
iret
cmp
int3
mov
push
xchg
fsubrp
cmp
stos
inc
mov
rorl
mov
and
push
addr16
pop
mov
insb
inc
stc
push
outsl
shll
push
cmp
ljmp
jne
sti
xchg
xor
arpl
lahf
jb
or
stos
jl
mov
jmp
sahf
fcmovnb
push
mov
aam
pop
mov
lcall
push
sbb
dec
mov
sub
dec
add
push
out
or
inc
je
movsb
das
mov
mov
mov
js
and
es
cmc
notl
test
sarl
jg
inc
xchg
stos
xor
fisubrl
add
push
xor
and
jne
push
jae
pushf
jno
adc
es
mov
cmp
xor
jg
std
sbb
cmpsl
mov
push
pop
add
data16
push
movsb
xchg
dec
shrb
test
dec
std
pop
sub
int3
stc
ret
add
inc
cli
sbb
add
mov
add
andl
aam
push
adc
push
sbbl
scas
lods
sub
ss
inc
stc
pop
dec
adc
mov
ror
lock
pop
jecxz
stc
in
jbe
ror
sbb
out
sub
cs
pop
mov
mov
adc
inc
inc
pop
mov
jne
aas
pop
iret
push
adc
push
xlat
and
clc
cmp
test
mov
push
push
push
insb
jne
insb
faddp
insb
jmp
test
cmp
sub
cmp
pop
adc
or
jnp
jmp
cmpl
ret
loop
jnp
cli
adc
xchg
stos
push
inc
sbb
mov
xchg
lea
in
rcrl
cmpsb
repz
je
or
ds
inc
scas
lods
fisttps
lods
pop
mov
xchg
repnz
aas
xchg
ljmp
cltd
fsubrl
in
repz
cmpsl
pop
clc
and
pop
mov
hlt
sub
pop
adc
ds
sub
iret
jns
inc
pop
xchg
inc
xlat
xor
mov
lods
insb
bound
gs
and
movl
mov
test
dec
mov
cwtl
mov
mov
mov
ret
and
cmpsb
addr16
cli
mov
dec
mov
push
xor
fs
cmp
xchg
stos
push
fdivrs
pop
adcb
and
cli
mov
xor
pop
jp
and
jno
jnp
scas
mov
into
xchg
stc
cld
inc
jnp
dec
or
loope
cmc
adc
add
mov
in
repz
ja
push
mov
in
pop
test
les
or
push
decl
call
xorb
mov
pop
xchg
push
adc
xchg
xchg
movsl
and
mov
xor
dec
xchg
add
add
sbbl
adc
or
jecxz
addr16
push
cmpsb
je
xlat
xor
or
aam
in
out
dec
or
lods
inc
loope
dec
inc
xor
dec
adc
and
or
push
cltd
xor
or
lds
xor
xor
and
cmp
int3
imul
push
sub
ficompl
nop
cmc
or
je
dec
cmp
shll
insb
mov
push
addl
xchg
mov
ret
popa
mov
xchg
std
push
inc
lods
jne
mov
adc
xor
cltd
pop
sub
push
mov
xchg
jae
adc
arpl
aas
outsb
rorl
mov
pop
xchg
std
lret
add
dec
sub
orb
jge
jle
xchg
cld
xor
dec
outsl
jb
mov
in
test
imul
cmc
and
xchg
xchg
cmp
fistpl
jbe
add
stc
imul
jl
push
sub
cmc
loope
cli
mov
out
sbb
jo
mov
loope
cli
push
pop
inc
mov
icebp
pop
call
ret
mov
xor
cwtl
or
gs
pop
jnp
out
ljmp
test
or
dec
out
jnp
mov
or
leave
iret
lret
imul
popf
icebp
sub
xchg
js
cmpsb
mov
jno
addr16
mov
xor
xor
xchg
sahf
add
xchg
sub
add
aam
cmc
ljmp
xlat
popf
cmpsl
pop
jp
or
orl
jl
dec
cs
inc
stc
sbbb
xor
jp
leave
xorb
loope
js
xlat
add
test
lods
mov
xchg
popl
xlat
cmpsl
push
or
sahf
out
or
xor
inc
jnp
in
bound
sti
cmpl
scas
cli
push
dec
xor
ret
push
ret
insl
ljmp
sub
inc
or
and
inc
jo
inc
jle
xor
inc
xchg
adc
ficoms
jbe
mov
inc
cmp
clc
andl
push
sbb
xchg
mov
mov
add
fidivs
nop
push
clc
or
jl
jnp
cmpsl
and
xor
xor
lcall
popa
cmc
xchg
mov
loopne
cwtl
and
hlt
and
push
clc
inc
sub
aas
sub
mov
push
leave
ljmp
cmp
cwtl
adc
out
rcrl
push
sarb
enter
lea
popf
jb
push
mov
jo
loope
mov
data16
fadd
jl
scas
lock
movl
jg
pop
in
and
or
push
sbb
jecxz
sahf
mov
mov
xor
xchg
dec
std
fimuls
pop
repz
and
jns
out
aas
mov
mulb
cmp
cwtl
xor
xor
push
push
repz
mov
lret
and
push
lds
lret
data16
mov
mov
popf
pop
cmp
sahf
fs
cltd
jge
push
mov
fxch
nop
cmc
mov
leave
sbb
popa
sahf
sbb
popa
or
push
ret
inc
xor
adc
jns
inc
imul
ror
push
pop
inc
popl
insb
sbb
outsb
data16
lret
inc
pop
lret
dec
lret
shlb
and
sbb
push
push
mov
ja
xor
lcall
xchg
dec
cmc
and
inc
pop
mov
ficompl
and
enter
xor
xchg
adc
cmp
cmpsb
lods
scas
test
and
xchg
mov
int3
sti
mov
mov
mov
mov
rcll
addr16
sbb
je
jmp
jnp
adc
jge
out
sub
outsb
icebp
inc
mull
jle
push
jno
jne
sahf
mov
imul
adc
int
mov
cmp
das
xchg
sahf
xlat
mov
inc
add
mov
lcall
mov
adc
mov
xchg
jae
cld
jle
push
cli
outsb
jp
jbe
mov
push
xchg
push
js
aaa
pop
aam
xchg
scas
push
es
das
popf
gs
stos
mov
and
aam
mov
mov
or
push
push
lods
in
add
andl
jge
loopne
inc
xor
add
mov
mov
daa
mov
jge
adc
xor
sbb
mov
xchg
cltd
xchg
xlat
rcrb
sub
icebp
out
sti
sbb
mov
jb
add
sbb
xor
mov
rorb
lea
jns
push
int3
push
sahf
and
sub
adc
cld
pop
push
adc
rcrl
inc
scas
jnp
jp
jae
sahf
lds
adc
mov
call
dec
pop
mov
mov
testb
mov
inc
in
sub
mov
dec
movsl
and
aaa
aad
ficomps
movsb
outsl
sub
inc
and
mov
in
pop
insl
mov
mov
out
pop
dec
scas
dec
shll
ja
cmpsl
cltd
into
jo
sbb
push
sub
pushf
mov
and
and
pusha
add
and
mov
cld
addr16
cmc
out
outsl
scas
mov
push
add
mov
sub
js
rcrb
cwtl
js
outsb
mov
into
js
test
enter
rcrb
fimuls
mov
xor
cmpsb
imul
adc
adc
cld
int
fs
pop
push
pop
mov
xchg
clc
adc
push
jmp
cmpsb
mov
hlt
stos
lret
out
pop
pop
popa
repz
in
les
nop
adc
in
call
divb
adc
dec
shl
fnstcw
xchg
xchg
sarb
imul
inc
fmull
imul
xor
or
nop
and
mov
jb
es
cmp
fs
mov
sahf
cmp
into
shr
fnsave
aad
and
add
push
push
jno
sahf
push
insl
add
sti
movsl
gs
fs
ljmp
les
adc
out
fisubrs
pop
or
lcall
lock
dec
cmp
rcll
adc
push
ja
jle
lods
insl
mov
jno
inc
xor
xor
jle
pop
sbb
aaa
stos
jmp
adc
cmpsb
frstor
mov
mov
xchg
mov
xchg
jl
adc
or
lock
add
shrl
fmuls
jp
dec
int3
iret
xchg
es
dec
mov
popa
push
push
fwait
and
add
lahf
xlat
nop
fistl
cli
cmpsl
test
adc
pop
cmp
flds
out
jl
add
shlb
imul
jbe
jnp
sbb
add
push
mov
data16
sub
mov
shll
jle
mov
sub
mov
pushf
sarb
mov
aaa
testl
aas
mov
mov
call
sbb
jle
insb
xchg
xchg
sbb
add
or
ljmp
sub
pop
inc
imul
ds
arpl
mov
add
mov
sub
mov
mov
sbb
cmp
push
cmp
cmc
pop
les
cmpsb
popf
stos
cmpsb
push
ret
cmpsb
jnp
add
stos
and
in
fwait
xor
jno
data16
xlat
xchg
aad
sub
fs
sub
xor
mov
add
xchg
stc
sub
jo
mov
enter
xlat
nop
je
and
lods
mov
jae
add
adc
xchg
cmpsl
pop
mov
inc
jne
cld
repnz
divb
icebp
adc
ret
sti
inc
rcrb
xchg
sub
inc
pop
push
es
inc
lock
mov
hlt
cmp
xor
mov
push
les
or
mov
pushf
jnp
xlat
in
test
imul
ljmp
inc
loop
or
aam
ds
inc
inc
fnstsw
jbe
aam
xchg
stc
rcrl
mov
inc
test
cwtl
push
or
cmp
aas
repnz
ja
sub
loope
pop
sbb
mov
adc
in
push
cmp
mov
dec
pop
mov
ret
lahf
dec
jnp
pop
jb
add
mov
lds
jno
pop
xor
push
mov
add
xchg
ljmp
sbb
push
add
pop
xor
insl
and
add
dec
dec
mov
push
lcall
loope
xor
xchg
fidivl
fwait
shrb
sub
imul
into
jno
lods
faddl
xchg
dec
in
pop
and
adc
ret
xchg
jno
and
dec
dec
imul
jle
xchg
sub
je
cmp
in
and
push
or
push
aam
sub
push
add
test
adc
add
or
or
lcall
jae
ret
lahf
sub
ret
std
pop
mov
sbb
push
out
cwtl
scas
add
popf
xchg
lret
gs
lods
or
pop
xchg
xchg
adc
cmp
dec
cmp
mov
rcr
inc
push
dec
cmp
or
loopne
gs
std
xor
mov
sbbb
decb
push
pop
ss
jne
mov
fimull
repz
aam
xor
inc
inc
rcr
or
loop
push
imul
xchg
dec
test
adc
or
gs
jnp
lcall
ja
movsb
sbb
lret
das
jl
je
les
decl
jo
sahf
adc
xchg
into
jne
push
test
sti
mov
aaa
jge
ja
add
imul
out
popa
call
popf
and
or
aas
sbb
outsl
or
loopne
jae
inc
insb
je
mov
shl
cmp
sbb
inc
repz
jae
pop
lcall
fs
cwtl
xor
jnp
mov
mov
push
mov
lock
cmpsb
pop
xor
sbb
stos
lret
cmp
sbb
in
add
jg
and
sub
fstl
mov
jl
arpl
out
cmp
loopne
mull
insb
movsb
dec
cmpps
out
cmp
cmp
sbb
lcall
int
stos
cmp
outsb
les
pop
out
bound
mov
pop
stc
push
cli
mov
lret
dec
loopne
jg
cmpsb
add
jno
fwait
xchg
lods
pop
imulb
lea
or
div
mov
push
out
cmc
add
xchg
in
push
add
adc
repz
fistl
mov
movsl
inc
and
add
imul
in
cmp
scas
pop
lahf
cwtl
sub
sbb
les
movaps
xor
xchg
stos
stc
call
push
jnp
push
mov
mov
mov
divb
mov
cltd
dec
je
cmpsb
ljmp
das
add
cmp
fmulp
jns
les
int3
cmp
inc
and
cmc
stc
mov
push
das
xor
cmp
ja
es
pop
fwait
mov
icebp
rcrl
fisubs
dec
pop
addr16
cld
mulb
in
xchg
stos
push
arpl
adc
mov
movsl
xchg
xlat
repnz
mov
jbe
jo
addr16
adc
mov
adc
jmp
dec
cmpsl
or
stos
sub
mov
xor
mov
ss
aas
ret
xor
sub
loop
adc
adc
cmp
cmc
fimull
fisubl
xor
leave
and
pop
mov
cmp
xor
pop
or
aad
jl
sbb
leave
lods
std
adc
lock
inc
loope
mov
adc
sbb
stos
int3
sbb
sbb
xchg
rcll
lret
mov
push
arpl
sub
loope
mov
sbb
xchg
push
int
ss
jecxz
aad
or
mov
lock
inc
fisttpll
xor
mov
out
xor
push
pop
fcmovbe
push
mov
sahf
mov
jne
xor
fwait
add
mov
cwtl
adc
rcll
xchg
push
mov
xchg
xlat
sbb
push
inc
popa
rcl
bswap
add
dec
dec
pop
jecxz
sub
cmp
aas
cld
xor
push
int3
mov
sbbl
daa
push
shlb
call
ja
rcll
sbb
js
cmpsb
cli
mov
lods
adc
cmpsb
subl
inc
mov
push
cmp
movsl
or
add
outsl
daa
cli
in
pop
adc
xor
xor
push
mov
sti
lcall
jns
sbb
iret
movsb
cmp
outsl
add
pop
lret
loopne
cmp
ss
movsb
sbb
shll
jne
and
loop
aam
loope
lahf
dec
cmp
ficoml
cmpsb
xlat
daa
imul
fldl
rcrl
dec
fisubl
and
jo
lock
xchg
insl
sub
stos
mov
bound
mov
jno
push
lea
jnp
mov
lret
sub
add
cld
lock
aad
inc
loopne
adc
std
outsb
lods
dec
xchg
inc
push
fcomi
adc
xor
sbb
mov
sub
add
das
test
sarb
insb
ret
test
xchg
into
xchg
cmp
iret
or
jne
or
daa
sbb
and
fisttpll
cltd
and
cmp
imul
fcompl
shr
cmp
mov
aaa
aad
sahf
jl
pop
ljmp
jl
mov
filds
jo
push
scas
ljmp
scas
lds
pop
pusha
je
das
fisttps
jne
jmp
xor
iret
test
sbb
mov
inc
and
and
jl
roll
cld
in
std
stos
pop
sub
das
sti
sbb
push
xor
lahf
punpcklbw
das
adc
xchg
sub
lock
mov
adc
popf
cli
xchg
xchg
push
popa
cpuid
adc
das
out
xchg
pop
add
lock
add
idivl
jp
outsb
cmp
icebp
jg
mulb
cmp
aad
sbb
outsb
cmpsb
adcb
sub
jp
xlat
ss
lods
dec
cmp
bound
cmp
or
in
push
fsubr
and
add
test
and
fcoms
cmpl
sahf
jecxz
adc
jp
lea
ss
mov
sbb
xor
xchg
adc
lcall
test
int3
das
mov
push
loop
aaa
cmpsl
jo
and
loop
pop
push
mov
cmp
imul
mov
sahf
idivl
or
dec
jbe
or
or
ret
cs
xor
mov
imul
push
mov
int
fdiv
aas
lods
int
xchg
pop
std
pop
out
dec
mov
jecxz
sbb
dec
hlt
sbb
hlt
inc
out
leave
and
mov
std
pusha
into
xchg
fidivl
inc
lret
adc
aaa
mov
pop
lock
push
cmp
insb
mov
xlat
imul
pushf
ja
ss
packssdw
mov
leave
rorl
mov
js
adc
pop
jg
aas
lcall
fistps
fbld
xchg
mov
jmp
mov
test
ljmp
movsl
add
hlt
push
popa
mov
mov
xchg
fwait
cmpsl
lds
or
and
mov
sub
rclb
aas
xchg
lcall
adc
add
pushl
fildll
mov
mov
mov
je
pusha
mov
adc
adc
test
daa
xchg
jecxz
sub
mov
push
jecxz
clc
mov
jge
xchg
jae
inc
adc
sub
jae
mul
mov
jecxz
adc
jo
mov
cmpsb
fidivs
insb
movsl
leave
mov
cmc
aad
xlat
mov
adc
fs
cld
movsb
jo
dec
adc
es
jo
mov
ss
repnz
cmp
or
sbb
shlb
ljmp
inc
fisubs
jae
mov
stos
les
pop
and
in
aad
sahf
fdivl
ret
xor
add
mov
outsl
cld
or
xor
mov
stc
mov
dec
stos
aas
in
in
pop
aas
in
in
adc
xchg
jns
cwtl
ret
fisubrl
mov
sbbl
call
jo
sub
mov
sbb
dec
sub
loop
adc
pop
sbb
xor
jo
scas
ds
stos
ja
pop
stc
scas
cmp
or
mov
loope
daa
push
and
mov
test
or
or
rcll
mov
xchg
bound
repz
cli
mov
scas
cltd
cmpsl
loop
lods
or
inc
or
pop
sbb
iret
sub
out
pop
leave
xor
out
sbb
xchg
sub
sar
jae
and
and
mov
mov
or
add
xor
and
mov
sub
sbb
jmp
push
adc
out
or
mov
inc
pop
mov
andb
iret
xchg
scas
push
faddl
ja
inc
pop
pop
dec
enter
in
mov
loop
mov
jmp
mov
repnz
dec
out
cmp
js
add
fcmove
icebp
dec
nop
and
adc
pop
cwtl
icebp
mov
sbb
push
push
add
mov
leave
adc
xchg
cmp
rorb
adcb
outsl
jle
scas
fimull
push
sub
sti
xchg
fdiv
push
outsb
fnsave
std
sbb
sbb
fistps
mov
jnp
sbbb
dec
pop
stos
push
push
or
pop
lods
mov
inc
fprem1
push
dec
repz
int3
push
or
jo
das
rorb
inc
mov
stos
or
cmp
lret
jmp
jge
and
mov
testl
rep
arpl
mov
push
stos
mov
mov
xor
ret
fstpl
lcall
xchg
rcrb
arpl
mov
orl
add
sub
lret
and
mov
jp
jns
insb
pushl
adc
scas
in
push
xor
pop
addl
cmpsb
mov
out
sbb
rorb
mov
inc
push
push
add
sub
clc
and
mov
mov
sbbl
incb
sbb
fwait
divb
push
sbb
push
pop
sbb
jae
loop
leave
sarl
jecxz
lret
fistpll
dec
cmc
push
jmp
std
push
mov
mov
ja
sub
sub
adc
aad
add
sub
pop
in
jg
leave
mov
ret
ret
xor
push
add
cmpsb
loop
rolb
push
mov
lahf
pop
icebp
jle
adc
pop
daa
orb
mov
jno
bound
ret
pop
pusha
add
jl
mov
js
pop
outsl
stos
mov
sbb
loop
test
iret
loop
mov
add
and
fs
xor
aas
leave
jge
adc
clc
pop
pusha
pushf
jno
movsl
imul
testb
jecxz
mov
aad
in
aad
dec
push
fmull
jle
jg
dec
add
ret
adc
dec
sub
lret
mov
mov
push
jo
add
pop
add
inc
aad
sbb
pop
in
dec
push
rorb
int
popf
mov
popa
adc
mov
call
jno
adc
fisubs
inc
xchg
inc
mov
out
aam
xorl
push
jne
jae
fbld
or
shl
sub
shrb
cmpsb
pop
xchg
jge
cmp
mov
cmpsl
fldl
xchg
pop
shll
xor
dec
mov
pop
fcmovb
push
sub
push
push
repnz
adc
xor
mov
aaa
add
jno
push
das
ficompl
push
and
cmc
mov
fwait
lods
mov
das
jl
fisubs
push
adc
loope
sub
loope
dec
lods
jge
jne
call
jmp
ljmp
push
push
aam
lods
or
xlat
repz
jg
pop
and
je
movsb
icebp
ret
push
popa
mov
pop
in
jg
or
adc
es
adc
mov
push
jno
mov
jo
out
jl
dec
mov
out
ret
lcall
sahf
int3
aam
test
lret
mov
test
loop
xor
dec
dec
pop
mov
fisubs
and
loop
mov
push
jecxz
sbb
and
ret
movb
arpl
mov
push
xchg
test
pop
movsl
fwait
outsb
inc
jl
xchg
xchg
btl
into
sbb
mov
or
mov
fisubrs
fistpl
nop
jg
mov
nop
std
add
iret
jb
or
sub
or
inc
jge
mov
mov
ret
popf
jnp
push
std
sub
mov
sub
pusha
jle
cmpl
jno
mov
mov
inc
in
daa
mov
mov
data16
and
mov
lret
test
sub
jg
xchg
xlat
aaa
fidivl
rorb
xchg
scas
cmp
fcmovu
popa
outsl
ds
cmpsb
nop
push
dec
punpckhwd
out
loopne
jge
xlat
lea
lea
fdivr
adc
mov
in
ljmp
iret
push
stos
jbe
and
jns
mov
test
adcb
cmp
mov
pop
add
jb
add
mov
int3
inc
sub
dec
push
dec
jns
push
pop
inc
xchg
xor
mov
popa
insl
push
hlt
in
test
pop
insl
subl
cs
mov
mov
inc
pop
sahf
repz
xor
inc
or
sahf
shll
and
mov
insb
jne
cmp
aaa
ljmp
sub
pushf
add
inc
sbb
dec
add
movsl
mov
or
pop
xor
jns
pop
scas
shrb
fucomi
xor
jl
or
mov
jg
sbb
sub
pop
push
cmpsl
mov
fcomip
inc
shrl
pushf
cwtl
xchg
mov
stos
jo
sub
xor
pop
movsl
add
test
mov
into
rcll
pop
rcll
in
push
add
adc
pop
sub
xchg
and
faddl
sbb
mov
test
int3
mov
and
subb
xor
jl
adc
rolb
sbbl
dec
sub
fmulp
mov
jbe
iret
stc
mov
jmp
nop
shlb
xchg
mov
pop
repnz
mov
ss
dec
dec
call
cmpsb
out
and
push
notb
pop
push
pop
rclb
push
xchg
push
mov
sub
repz
pop
lcall
out
hlt
movsb
ja
xlat
mov
into
cmp
lods
jl
jg
mov
inc
out
mov
int
outsl
dec
cs
cli
mov
stos
fidivrs
add
call
ret
icebp
and
cld
faddl
add
int
mov
push
decb
jle
push
pop
mov
pop
xchg
enter
insb
mov
pop
mov
pop
sti
outsb
ljmp
jl
das
dec
or
jmp
mov
in
pop
je
inc
sub
bound
jp
mov
mov
push
jle
mov
clc
aad
xchg
leave
and
or
shll
imul
ljmp
imul
lret
inc
ss
pusha
dec
dec
ja
mov
rcrl
push
das
push
cmp
mov
jmp
test
mov
hlt
lret
cmp
cmpb
stos
adc
jb
mov
add
daa
fs
push
fmuls
rcrb
sbb
jne
fimull
int3
jns
iret
jbe
insl
filds
ja
xlat
lret
mov
xor
mov
loope
enter
std
sbbb
stos
movsl
std
sbb
mov
mov
cs
add
mov
clc
xchg
stos
mov
sbb
fwait
mov
mov
das
xchg
cmp
pop
lock
out
int3
mov
inc
mov
gs
cli
ss
bound
push
mov
mov
cltd
mov
jecxz
dec
add
sub
mov
lock
aad
jmp
xor
repnz
in
jle
ret
mov
mov
jns
cs
ljmp
add
cwtl
pop
fwait
pop
mov
mov
pop
stos
inc
sub
imul
dec
ljmp
jnp
sti
push
outsb
push
cs
outsb
jae
xchg
sbb
jno
stos
mov
inc
xor
inc
rcr
jp
jb
mov
mov
mov
clc
jecxz
or
adc
push
push
arpl
mov
and
in
mov
jle
mov
mov
outsb
imul
les
push
mov
jecxz
dec
adc
lea
push
mov
aam
mov
addr16
fisubs
loopne
fucomp
xor
lods
cli
mov
mov
test
mov
push
jb
xor
mov
shll
xlat
mov
cltd
out
aam
jbe
test
mov
cmp
mov
hlt
je
mov
jecxz
decl
push
addr16
shr
mov
dec
mov
and
xor
push
popf
lret
leave
nop
sbb
cwtl
enter
insl
xchg
shrl
mov
push
dec
add
scas
mov
cli
jecxz
popf
sbb
cli
repnz
xchg
popf
mov
pop
pop
inc
xor
ss
push
mov
gs
cmpsl
mov
lret
lret
and
fists
outsl
push
in
insl
ds
fbld
daa
ret
adc
lods
divl
adc
scas
pusha
mov
jmp
fstps
jnp
xchg
xor
fs
stos
xchg
popf
pusha
adc
popa
inc
sub
fstpl
sbb
dec
lret
movsb
inc
dec
in
push
in
repz
push
mov
ljmp
jns
jl
sub
popa
mov
lahf
xchg
gs
mov
and
out
xchg
icebp
into
lea
or
aam
cmpsb
cmp
pop
xchg
push
sub
pushf
out
mov
mov
xor
pop
xchg
sub
push
lret
mov
mov
push
mov
mov
les
les
inc
loop
les
inc
cs
push
xchg
xchg
out
int3
out
push
cmpb
push
add
dec
mov
pop
xchg
das
sub
mov
cs
jmp
xor
pop
aas
pop
das
in
aaa
imul
xchg
icebp
subl
imul
adc
call
rorl
daa
mov
sub
mov
rcrb
and
cwtl
lahf
jg
inc
ss
in
xchg
mov
inc
pusha
inc
bound
loope
pop
xchg
leave
cmp
ds
je
xor
lock
mov
xchg
pop
leave
sub
jecxz
pop
and
popa
aas
mov
mov
pop
imul
adc
add
xchg
shl
jbe
mov
mov
pop
stos
jo
iret
dec
movsl
xor
testb
mov
lret
jae
les
pop
and
ret
fnstcw
inc
daa
mov
js
cwtl
adc
mov
in
in
lcall
ret
pop
dec
lret
jp
inc
in
push
lods
cmpsl
or
xor
mov
adc
cmp
idivl
std
not
sub
dec
aad
test
cmpsb
push
jg
scas
mov
adc
mov
aad
sti
inc
imul
call
cmpsb
outsb
push
mov
enter
jb
add
dec
cli
fs
in
mov
js
aas
inc
mulb
lods
cmp
xor
lods
js
dec
pop
addl
sub
mov
je
cld
xchg
notl
js
out
sahf
into
arpl
cmpsl
mov
jge
negb
lcall
pushf
mov
icebp
adc
mov
push
pop
int3
sahf
cmp
popf
into
inc
ljmp
stos
nop
fcomi
bound
repnz
sub
int3
loope
jmp
pop
mov
icebp
inc
mov
xchg
pop
das
mov
orl
aam
mov
inc
pop
push
rcrl
je
sbb
jb
mov
addb
pop
int
in
fcmovnbe
pop
jns
sub
xchg
sbb
rol
pop
dec
test
ret
nop
fiadds
lods
dec
sub
push
movsb
mov
ljmp
js
or
pushf
imul
loope
std
add
fcomps
loop
mov
mov
out
inc
shr
jnp
cli
ftst
and
mov
or
mov
call
jo
mov
inc
in
andb
pop
stos
cmp
lea
add
adc
fildll
divl
test
mov
dec
mov
xor
fnop
ds
mov
fcomps
pop
out
add
stos
cmc
fsubrl
xchg
push
subb
mov
call
inc
and
das
in
xchg
fistpll
sub
fwait
sbb
push
mov
inc
pop
push
mov
shrb
or
xchg
inc
sbb
mov
push
and
xor
sbb
mov
mov
dec
sahf
mov
adc
jg
pop
movsl
push
pop
xchg
mov
and
push
loope
loop
adc
push
js
out
aad
int3
jmp
cmpsl
mov
stc
jb
pop
int3
dec
jle
bound
cld
jo
lahf
adc
xor
out
xchg
addr16
arpl
sahf
inc
movsb
aam
pop
das
dec
fisttps
pop
pop
cmpl
enter
jo
shll
adc
nop
cmp
mov
jne
jl
adc
and
filds
icebp
sub
loop
shlb
jb
jae
icebp
je
lods
adcl
iret
call
push
and
push
mov
cltd
mov
jmp
dec
out
testl
mov
or
pop
dec
mov
imul
pop
test
jmp
jmp
data16
fdivr
mov
push
push
xor
ds
mov
cmp
sbb
xchg
test
dec
ja
mov
lahf
xchg
cmp
pop
movsb
jno
pop
push
add
test
mov
dec
and
in
shl
int3
fsubrl
mov
cli
cli
loope
addr16
mov
lds
mov
mov
mov
sub
mov
enter
enter
ljmp
scas
or
pop
push
ds
outsb
inc
pop
negl
dec
lods
mov
rcrb
add
or
in
loope
jecxz
addr16
inc
bound
jno,pt
cmp
imul
shrl
cli
xchg
repz
or
shrl
jnp
int3
jb
inc
or
bound
movsb
jno
xchg
rcl
stos
xor
or
dec
mov
mov
cwtl
pop
popf
inc
pusha
pushf
call
aaa
sahf
in
fwait
inc
lds
icebp
fidivs
pop
push
cmp
pop
out
jo
cmp
mov
ret
mov
mov
pop
test
sbb
data16
inc
mov
adc
dec
and
mov
pop
lret
popa
pop
dec
nop
mov
jmp
inc
xchg
out
or
xchg
jne
in
and
jb
lock
ss
pop
lock
sub
std
nop
sbb
xor
mov
sub
fcmovnb
int3
cld
push
rcrl
pop
arpl
push
enter
popf
sbbb
out
push
lea
jb
jns
sbb
std
shlb
mov
scas
insl
fidivl
test
mov
xchg
ficoms
je
pop
inc
outsl
dec
add
shld
jle
mov
cmp
mov
imul
std
adc
in
stos
test
push
fstps
xor
loope
sub
repnz
mov
mov
xchg
xlat
sub
sbb
push
cmc
mov
mov
sahf
mov
dec
dec
push
lahf
and
test
xor
dec
out
mov
fsub
jne
dec
adc
sub
outsb
pop
jl
xchg
shrb
stos
aaa
pusha
call
popa
jge
add
sub
or
leave
rclb
test
xchg
and
iret
jbe
int3
and
sub
imul
scas
in
mov
push
dec
inc
ss
xor
mov
jno
mov
push
les
aas
pop
stc
popf
mov
cltd
jge
incl
push
fucomi
movsb
sbb
fildll
adc
sbb
testb
iret
imul
loope
mov
addl
call
xchg
pushf
cli
inc
pop
dec
dec
mov
out
and
and
shl
mov
cltd
mov
lret
shrl
data16
out
lret
jno
cwtl
add
fimull
xlat
push
incl
xorb
mov
test
and
inc
daa
mov
mov
test
movsl
fidivrs
stos
xor
outsl
shlb
mov
xchg
push
iret
add
adc
pop
insl
mov
in
pop
dec
pop
cmpb
jae
data16
daa
push
adc
sahf
arpl
mov
fcompl
and
dec
sbb
ljmp
push
mov
out
mov
arpl
pusha
sbbb
popa
into
fnsave
cld
in
jge
xor
cmp
clc
jno
ror
out
addb
mov
or
add
push
cwtl
popa
outsl
xorl
xor
dec
sbbb
sbb
mov
lcall
into
dec
movsl
sub
inc
sub
repnz
arpl
out
dec
fwait
inc
lea
dec
sbb
fnstsw
addr16
mov
mov
fdivr
fldl
or
lods
push
daa
xchg
pop
xor
and
jg
cmp
and
jle
fwait
mov
test
pop
out
movsb
mov
xchg
idiv
cwtl
inc
pusha
ds
shlb
or
ret
mov
leave
addl
cltd
popf
dec
mov
movsb
iret
int
xchg
mull
filds
divb
loope
push
push
push
mov
mov
out
es
outsb
aaa
test
stos
int
adc
call
lods
push
xchg
fs
packsswb
xchg
dec
lock
fwait
arpl
jbe
push
inc
mov
add
addb
nop
jae
dec
sbb
adc
or
mov
dec
cmpsl
cltd
shll
ja
clts
jp
les
sbb
add
adc
jo
leave
enter
jge
xor
cs
sbb
jp
rcrb
rcl
daa
rolb
xchg
stos
aad
xor
mov
push
negb
mov
mov
les
icebp
mov
leave
ss
and
mov
enter
dec
push
adc
in
data16
movsl
sbb
imul
outsl
notb
push
rcll
jge
dec
mov
into
shll
inc
ja
inc
outsb
aas
mov
mov
jl
xor
jge
mov
je
sahf
pop
dec
cld
adc
ljmp
mov
dec
mov
pop
andb
sub
lea
fildll
mov
or
lret
or
mov
mov
mov
jb
lea
push
test
aad
inc
adc
clc
mov
aaa
or
jp
stos
jb
fsubrl
add
push
lahf
sub
es
inc
mov
dec
cmp
cltd
aad
loop
adc
data16
xchg
dec
or
and
scas
push
dec
lods
loopne
jno
nop
jg
stos
push
jnp
sbb
gs
xor
loop
ss
stos
cld
mov
mov
js
xor
lods
jmp
cmp
js
pop
mov
hlt
outsb
sbb
sub
push
adc
and
push
ss
adc
repz
push
outsl
mov
loop
fildll
std
jg
xor
sbb
mov
lcall
push
push
jg
jns
pop
pop
lea
out
aad
icebp
jbe
cmpl
xchg
popa
jnp
xor
std
sub
rcr
push
push
sbb
cmc
int
inc
xchg
out
xor
out
xchg
mov
inc
loop
mov
fcoml
out
xchg
push
mov
xor
jb
imul
in
loop
in
addb
push
mov
mov
push
sub
int3
pop
mov
jns
jns
adc
xlat
cs
jecxz
in
addb
xor
mov
sbb
scas
out
push
sbb
mov
jge
insb
aam
loopne
pop
push
add
daa
xchg
data16
push
loope
pop
and
push
repz
cmp
jno
add
or
sti
pusha
daa
rorl
and
push
mov
mov
mov
aad
ret
xchg
jne
inc
push
cmpsb
es
pop
data16
and
gs
jo
fwait
arpl
shrl
mov
mov
shrb
adc
lret
pop
mov
sbb
flds
dec
xlat
dec
mov
sbb
mov
in
dec
loop
shll
push
lret
push
ret
xchg
inc
sbb
jbe
fwait
cwtl
inc
or
mov
push
push
xchg
jg
es
js
clc
in
and
and
outsl
xchg
mov
dec
mov
out
jns
or
popa
adc
jno
fcompl
mov
mov
lds
jmp
cmc
loop
add
dec
push
in
jne
filds
and
rclb
outsb
ja
and
inc
in
sbb
sub
dec
xor
dec
sbb
xor
lret
call
add
test
sbb
jmp
xor
sarl
sbb
addb
test
sti
or
pop
imul
dec
ja
inc
lret
std
mov
mov
aad
daa
cmc
jle
sahf
push
add
je
leave
push
movsb
rolb
pusha
stos
outsl
push
setg
sbb
fs
adc
lock
aas
jb
pop
call
dec
das
or
xchg
sub
add
push
int
jecxz
xor
xchg
jo
inc
shll
xlat
jb
dec
popf
inc
cld
pop
or
movb
insb
dec
inc
es
mov
das
rclb
push
lock
movsl
sub
ljmp
dec
orb
call
mov
lea
es
adc
push
pop
mov
inc
mov
push
out
fildl
filds
xor
sbb
dec
daa
rcrb
and
ja
adc
into
mov
lock
addr16
vmwrite
jbe
fsubr
adc
pushf
das
push
fistpl
or
insl
inc
mov
push
push
or
in
loop
push
jo
mov
mov
dec
movsb
loop,pt
cmp
sub
inc
xchg
lahf
pop
push
sbb
pushf
jbe
push
fidivl
scas
aad
jb
push
sbb
fs
icebp
xor
mov
fildll
aaa
jl
shlb
and
mov
mov
xor
add
sub
sar
lock
fstps
shr
pop
dec
div
adc
dec
dec
cs
jae
or
dec
xchg
fimuls
cmpb
int3
sahf
and
pusha
int3
fstpl
xchg
data16
repnz
push
fnsave
xchg
out
into
lods
and
or
push
mov
testl
pop
and
inc
dec
fsubl
in
push
cmp
adc
cmp
xchg
sahf
pop
leave
mov
dec
iret
rcll
stos
jmp
mov
int
sahf
adc
outsb
out
fcmovnb
je
movsl
xchg
mov
pushf
xor
fldt
in
cmp
out
add
in
shll
sbb
dec
dec
orl
push
sbb
pop
mov
mov
and
xor
lea
mov
fdivr
mov
leave
mov
inc
stos
inc
cmp
cmp
outsl
sahf
lds
lahf
push
iret
out
adc
dec
and
jle
cmp
scas
jae
hlt
dec
shl
je
cmp
push
mov
stos
stos
xchg
push
fildl
xchg
sub
ja
jp
lcall
jle
es
imul
push
xchg
push
test
jb
pop
outsl
out
jne
notb
rcll
push
arpl
lock
int
adc
push
mov
hlt
out
add
pusha
leave
pushl
adc
out
mov
xorl
cli
mov
inc
mov
shlb
insb
jno
test
sub
and
outsl
dec
testl
cmpsb
shll
jns
lds
mov
ja
pushf
mov
xor
dec
or
lea
jl
adc
mov
mov
sbb
jmp
adc
sub
nop
es
filds
mov
push
sbb
mov
lock
fwait
mov
adc
test
sbb
popa
mov
add
dec
stos
bnd
or
adc
pop
mov
add
lods
shl
addl
dec
jae
jge
aaa
sbb
es
cli
push
inc
xor
lods
inc
jmp
add
pop
sbb
lret
out
or
into
jbe
mov
jp
jne
nop
sub
or
cs
or
mov
sub
add
test
mov
jl
dec
dec
addb
mov
in
push
adc
mov
loope
ficompl
inc
nopl
inc
test
aaa
jge
notb
add
inc
rol
mov
xchg
lods
sti
sbb
movb
fs
pusha
pop
jg
mov
jo
lret
inc
test
push
add
enter
inc
out
pop
adc
xchg
mov
push
pop
and
jmp
cltd
add
mov
cltd
push
sarl
push
pop
xchg
jg
xor
mov
shll
cld
jl
sub
cmc
bound
push
mov
stos
push
fisubrl
mov
jmp
push
mov
shrb
add
mov
pop
cli
pusha
lods
stc
mov
pop
pop
push
adc
xchg
mov
mov
rdtsc
test
pop
lret
test
data16
test
push
xchg
or
bound
dec
xchg
jp
mov
mov
cmpsb
push
add
jg
enter
ja,pn
fwait
imul
or
aas
scas
daa
mov
jo
dec
popa
sbb
mov
adc
popf
xchg
xchg
insb
pop
cmpb
jecxz
mov
xor
mov
xor
cmp
dec
outsb
dec
pop
cmp
sbb
push
adc
repz
adc
mov
in
testl
mov
xchg
mov
push
adc
mov
dec
lcall
mov
movsb
sub
not
dec
in
push
dec
jb
mov
insl
jge
dec
mul
jo
adc
dec
push
aad
push
lret
sbb
pop
lds
mov
add
xorps
rolb
pop
dec
rcrb
pop
out
or
ss
xor
mov
enter
cmp
gs
jg
jbe
mov
rcll
nop
sbb
je
out
roll
ret
sbb
imull
fiadds
iret
ljmp
idiv
and
std
add
jecxz
ja
pop
add
push
or
and
jb
cmpsb
inc
sub
cwtl
xchg
fnstcw
xchg
arpl
mov
jl
and
mov
xchg
xor
mov
movsb
mov
push
cli
clc
or
in
pop
fwait
cmp
adc
cli
mov
mov
xor
xchg
and
call
sub
scas
xor
sub
je
rcr
std
sbb
test
mov
dec
and
ret
xchg
cmp
push
test
lret
ljmp
je
sub
and
add
inc
pop
iret
sbb
jle
aam
xchg
mov
pop
dec
mov
mov
in
adc
inc
pusha
pop
fimuls
sub
inc
in
xchg
aas
inc
pop
in
int3
mov
movb
xor
imul
hlt
cmpsb
mov
xchg
inc
xor
pand
inc
ja
mov
adc
dec
filds
sub
call
adc
test
jmp
push
push
decl
mov
xchg
sbb
je
pop
adc
ret
lcall
repz
dec
out
ljmp
ret
fldt
jne
test
push
clc
cmp
fisubl
ss
cmpsl
sbb
mov
clc
jmp
jne
repnz
or
xchg
neg
pop
aaa
pop
pop
mov
cs
xlat
jb
and
dec
adc
mov
in
jp
dec
mov
stos
cmpl
dec
cmp
lods
dec
push
xchg
adc
mov
jmp
push
call
lcall
ret
xor
fmuls
or
cld
pop
sbb
enter
mov
xchg
xchg
fidivl
mov
push
dec
mov
lea
scas
ljmp
and
push
lods
pop
pop
xchg
and
dec
lods
cmp
xlat
int3
xchg
sub
jnp
ljmp
mov
dec
mov
out
inc
jne
adc
mov
xchg
push
push
or
cmp
bound
jecxz
in
pushf
in
leave
test
sbbl
je
std
mov
mov
jge
daa
sti
subb
movsb
call
lret
btc
sub
push
sahf
add
cmp
push
test
lods
or
push
mov
fadd
ds
xchg
push
mov
xor
stos
mov
add
iret
pop
xchg
pusha
and
fildl
mov
jbe
adc
in
leave
and
aaa
das
xor
jno
ss
xchg
aam
stos
cli
pop
ja
cmp
pusha
and
mov
lock
sti
mov
divb
stos
mov
aas
sub
inc
mov
ret
les
sahf
movsl
sub
sbb
mov
add
dec
jg
data16
loop
fnstsw
insl
jns
sti
xor
and
add
aaa
clc
sbb
mov
fucomi
push
lock
lahf
sbb
mov
jecxz
xor
lahf
outsl
scas
lret
pusha
sbb
cmpsl
inc
mov
les
jecxz
and
lea
mov
sub
notb
mov
inc
or
push
jae
cmpsl
xchg
repnz
cmp
pushf
mov
sub
mov
fistpll
cmp
push
andb
shr
sbb
sub
sub
inc
cmp
xchg
ja
in
faddl
ljmp
bound
mov
mov
push
int
lret
cmp
insb
out
cmpsl
fs
lock
movsb
js
jp
rorl
pop
xor
pop
out
ds
addr16
loope
xor
sbb
pop
jns
cmp
mov
nop
pushl
xchg
loopne
xchg
sbb
mov
les
fldl2t
adc
sub
pop
jns
test
andl
mov
jle
cmp
pusha
cmp
lahf
xor
or
scas
xor
aaa
clc
jle
inc
jl
cmp
out
adc
jmp
or
fstpt
push
popa
notb
mov
dec
or
xchg
or
dec
or
or
jne
call
jnp
mov
hlt
lock
pop
scas
test
jge
push
mulb
insb
sti
ljmp
test
pop
shl
clc
or
or
jne
jle
sub
lahf
mov
jno
test
mov
jnp
inc
cld
ret
mov
rorb
mov
popf
pop
push
stos
push
repz
inc
out
popf
or
cld
push
push
js
bound
mov
std
iret
adc
adc
aad
sub
cmp
add
outsl
fnsave
int3
sti
push
in
lcall
ucomiss
cmp
xchg
adc
sub
cmp
es
jmp
stos
jg
lods
mov
xor
dec
mov
in
push
dec
sub
mov
hlt
fs
stos
or
push
lods
mov
insb
push
popa
sahf
inc
xor
aad
jb
jb
jnp
addr16
int
push
ret
cmp
lret
or
je
pushf
lds
ret
xchg
cmp
cmp
mov
sbb
xchg
mov
cld
popf
mov
adc
fiaddl
xlat
das
rorb
or
xor
push
jns
call
lds
mov
pop
iret
popf
test
mov
jnp
push
adc
shrl
inc
jle
mov
clc
jne
add
pusha
rorb
jo
std
cmp
iret
idivb
sarb
scas
or
jge
jl
testb
pusha
pop
pop
les
sbb
pop
aam
mov
repz
adc
fadds
add
mov
testl
cmp
or
shlb
test
pop
cmp
jecxz
stos
std
mov
mov
rcl
xchg
jl
icebp
fisttpl
add
push
sub
adc
add
ja
mov
and
lds
roll
xlat
cmpsl
fldcw
icebp
dec
mov
ficomps
divl
jge
in
test
cmp
cmpsb
mov
sbb
bound
les
popf
pop
pop
cmp
inc
mov
lea
cltd
mov
out
mov
mov
push
arpl
lds
push
fsts
inc
lcall
xchg
xor
mov
sub
xchg
adc
adc
inc
insl
xchg
xchg
je
cmp
xor
add
lods
pop
push
mov
mov
mov
in
lea
ret
dec
cmc
xor
adc
pop
mov
mov
cmp
xlat
hlt
mov
mov
sbb
and
int3
inc
dec
scas
jp
xor
cmc
je
enter
lret
stc
cmpl
xor
cmp
pop
jmp
pop
mov
xorb
stos
jle
scas
jp
aad
pop
sbb
gs
inc
daa
xlat
add
push
dec
and
popa
adc
mov
mov
xchg
xor
mov
inc
mov
pop
add
inc
mov
outsl
mov
mov
out
repz
pop
mov
cmpsl
xlat
or
and
loopne
jp
aam
adc
pop
xor
ffree
xchg
addr16
es
ret
xchg
mov
pop
push
mov
std
and
adc
sub
imul
sub
add
daa
rorb
xchg
xor
lret
sbb
or
adc
repnz
movsb
sbb
and
mov
popaw
adc
insl
loop
fs
push
loope
gs
pop
test
mov
push
jl
push
scas
push
rcr
sub
xlat
jno
pop
movsb
jp
insl
inc
xor
mov
dec
push
popf
push
fsts
jmp
mov
enter
cmp
es
call
mov
cmc
js
mov
pop
mov
xor
pop
sub
pop
xor
add
cmp
sarb
icebp
inc
ljmp
inc
inc
sbb
push
std
insl
jns
dec
push
add
add
pusha
push
pop
jp
add
jl
mov
pop
mov
leave
dec
xchg
sub
int3
lock
adc
xor
sub
sub
jae
aaa
cli
dec
pop
xor
and
leave
aad
or
dec
outsb
test
mov
inc
in
mov
inc
sti
mov
adc
pusha
cltd
dec
cltd
mov
xchg
jecxz
ret
negb
xor
cmp
nop
xchg
and
pop
pop
lds
enter
stos
jmp
fs
or
and
ror
cwtl
ret
lock
pushf
jnp
xchg
pop
bound
ja
mov
xlat
add
pop
sbb
mov
cwtl
add
enter
insl
hlt
lret
fmuls
das
nop
fisubs
push
cmp
xor
inc
cmp
adc
push
mov
in
test
into
add
repz
sub
cmp
bound
xor
iret
pop
jnp
mov
cmp
push
pusha
jae
fmul
jno
or
imulb
push
in
mov
lea
lret
sub
lea
cld
call
jne
popf
mov
inc
aad
insl
data16
outsb
in
and
testl
sbb
adc
aas
enter
jno
loope
pop
adcb
sbb
mov
imul
xchg
data16
cltd
cld
loopne
push
in
jp
push
ret
inc
sub
fsubr
or
lds
mov
xor
adc
cwtl
test
lcall
sbb
inc
jnp
mov
call
fsts
mov
sbb
or
xchg
xor
sub
es
pop
xor
push
jmp
test
and
addr16
clc
mov
dec
arpl
lods
mov
les
lret
pop
xchg
les
iret
call
inc
orb
repz
mov
lret
cmc
repnz
int
sti
add
jecxz
jg
fnsave
jns
jae
fadd
addr16
push
fucomp
adc
push
test
scas
ds
std
push
cmp
jp
jle
into
mov
mov
push
jg
pop
repnz
sub
inc
push
sarb
and
je
les
sbb
xor
mov
xchg
mov
out
pop
cmp
add
clc
and
lret
icebp
xchg
add
setbe
mov
gs
adc
insb
inc
ds
jnp
clc
pusha
push
jno
add
outsb
pop
adc
add
orl
nop
scas
test
mov
jae
nop
stos
dec
sub
mov
cmc
and
stos
xor
insl
mov
pop
loop
int3
pushf
lret
arpl
and
mov
cmp
sbb
sub
daa
adc
adc
imul
mov
lahf
vmulps
push
movsb
xor
lcall
mov
adc
dec
pop
and
sarl
stos
inc
push
lcall
stos
xlat
xor
fs
in
pop
push
mov
fisttpl
pop
xchg
rorl
call
sub
pop
sbb
inc
xor
cs
mov
push
fstps
jns
out
sarl
movsb
lds
jecxz
mov
mov
xchg
shlb
loope
and
in
pop
pop
adc
push
push
xor
pop
cli
inc
gs
mov
dec
popf
sub
imul
pusha
outsl
adc
out
stos
outsl
dec
mov
sarb
je
outsl
std
jmp
testl
sub
push
cmpsl
bnd
push
ljmp
cmpsb
jg
add
jne
pushf
hlt
and
dec
leave
cmp
js
cs
push
das
xchg
and
dec
movsl
sbb
mov
jle
aas
in
mov
sti
pop
add
mov
jl
pop
leavew
clc
add
out
cwtl
mov
push
dec
dec
jnp
xchg
mov
addr16
jmp
aas
mov
aaa
call
rorb
ja
sbb
cmp
dec
mov
fdivs
lods
mov
and
mov
arpl
dec
jb
push
les
hlt
inc
and
dec
xor
mov
pop
mov
ret
mov
inc
adcl
ret
das
mov
into
jge
hlt
cmc
loope
fstl
jns
pop
inc
test
inc
push
imul
jbe
out
jns
or
cmp
scas
add
out
or
or
pop
mov
push
cmc
imul
out
or
test
fldl
je
test
cmp
out
sti
add
movsl
lea
inc
inc
mov
add
xchg
and
mov
or
mov
mov
fcom
jl
pop
loopne
jmp
adcb
sub
orl
push
push
in
sti
xor
sbb
ja
pop
cmp
sbbb
mov
pop
mov
mov
inc
sbb
rcl
or
outsl
dec
enter
xchg
and
and
shrl
jae
push
pop
or
mov
push
mov
popf
in
lcall
mov
js
rorb
mov
hlt
sbb
es
lcall
inc
jle
add
cmp
jae
inc
mov
lret
inc
cmp
fimuls
mov
scas
mov
outsl
into
mov
push
mov
adc
pop
jne
iret
mov
hlt
test
rcrb
mov
andps
dec
out
gs
sub
mov
fldl
loope
out
adc
fsub
cmp
pop
imul
mov
lcall
jecxz
push
mov
addl
add
lcall
inc
dec
mov
pop
push
pop
lods
or
jb
insb
xor
and
in
cmp
xlat
add
cmpsb
ret
xorb
or
adc
shll
mov
add
fdivrp
sub
xchg
add
dec
js
std
adc
xchg
in
pop
jns
nop
shr
dec
sbb
fwait
mov
jmp
insl
sar
cmp
or
pop
imul
ljmp
pop
fistpl
add
mov
xor
mov
mov
fwait
orb
push
pop
movsl
xorl
pop
jecxz
cmc
or
add
mov
mov
ds
aam
shl
mull
call
mov
stc
in
and
push
sbb
and
adc
pop
repnz
xchg
outsl
xor
pop
adc
test
leave
jg
out
lods
sbb
xchg
inc
inc
cwtl
stc
cmp
ja
dec
pop
fisttpl
and
pop
gs
jnp
shlb
test
mov
mov
xor
adc
les
dec
arpl
push
fisubl
mov
je
jns
lret
push
into
dec
out
fs
xchg
cmc
sub
lods
xor
pop
jmp
push
mov
xchg
test
call
out
imul
mov
arpl
aam
xor
sub
mov
loop
xchg
jmp
sarl
insl
lret
cmp
imul
mov
or
jno
sub
iret
aam
pop
bound
jecxz
cmp
xor
mov
add
cmovb
movsb
xor
dec
adc
movsl
fcomp
ret
adc
lret
sbb
jmp
adc
jne
imul
rcll
scas
or
adc
out
jb
push
mov
bound
ja
fmuls
adc
jmp
dec
cli
cmc
sub
lock
movsl
dec
mov
out
inc
in
lcall
jmp
movsb
jl
rorl
lock
scas
pop
jo
test
shrl
push
mov
adcl
stc
push
xor
inc
clc
mov
jge
pop
mov
hlt
insl
mov
stos
movsb
fistpl
mov
xchg
push
cmp
movsb
dec
movsl
or
scas
stos
out
loop
cmc
and
sbb
cmp
or
ret
push
out
arpl
testb
xor
stos
repnz
adc
out
out
testb
or
loopne
rcll
mov
and
and
loopne
push
pop
fs
add
call
jb
dec
mov
pusha
dec
insl
adc
lahf
test
pop
fldenv
fs
stos
jl
fnstenv
divb
and
incb
mov
movsl
ss
or
dec
push
icebp
das
mov
add
dec
mov
jbe
les
or
outsl
dec
cli
cmp
ficomps
clc
sti
rcrb
cvtps2pd
loopne
int3
addl
scas
lret
lcall
xor
sub
enter
repz
mov
iret
xchg
lcall
in
xchg
std
addr16
fdiv
sub
roll
xlat
movsb
push
sub
shrb
js
push
cmp
fdivrs
pop
hlt
in
and
inc
into
ljmp
xchg
dec
stos
cmpsl
sbb
sbb
jns
test
test
pop
xchg
adc
mov
pop
and
xor
add
xor
add
mov
out
jmp
imul
loopne
lods
and
or
aaa
inc
xchg
fwait
mov
xor
cld
rcrl
xchg
add
inc
xchg
pop
add
xlat
xchg
mov
mov
lea
mov
add
cld
sbb
sahf
lea
adc
add
fs
jno
jge
jno
sbb
pop
cld
cmpsb
mov
jo
lock
xchg
or
xor
cmc
xor
push
xor
aad
pop
test
adc
or
test
inc
stos
adc
dec
and
jnp
and
ret
mov
adc
sub
cld
mov
jb
fnstcw
add
or
out
inc
dec
add
pop
push
addr16
dec
out
in
into
mov
jl
and
movsb
mov
jl
cmc
inc
mov
sub
dec
ret
cmp
and
inc
pushf
mov
shl
mov
push
pop
das
in
jo
sub
sub
xchg
lods
pop
ljmp
rorl
dec
shrb
mov
movsb
daa
not
pop
sahf
rcll
dec
fsubrs
out
nop
mov
add
movsb
stos
mov
sbb
nop
aam
lahf
dec
jl
enter
arpl
lar
inc
insb
insl
jne
aam
pop
loop
cmp
pop
test
adc
push
xchg
jne
push
jns
aaa
fsubrl
lret
fwait
roll
mov
mov
ret
cwtl
pop
mov
call
adc
loopne
push
call
jno
push
inc
ror
lret
jae
lock
shrb
in
test
addl
out
jbe
je
xor
push
mov
xchg
pop
push
repnz
int
lods
sbb
insb
gs
jle
xchg
or
add
xlat
jbe
inc
pop
xchg
jns
mov
pop
xor
sbb
fdivr
pop
xor
out
mov
xor
xor
fildl
mov
jns
movsl
insl
inc
repnz
insb
out
cmp
js
mov
call
mov
and
push
xor
and
add
mov
or
push
jno
in
outsb
mov
aad
les
add
fstps
int3
popf
mov
xor
lds
test
add
push
insb
mov
add
in
movsb
rorl
lret
test
sub
cmpsb
bound
lock
out
mov
scas
jno
adc
or
sahf
insb
shll
ds
sbb
clc
sti
push
dec
insl
add
jne
inc
and
lds
dec
iret
loope
cmp
ljmp
mov
mov
inc
add
lds
repnz
mov
push
push
adc
jp
lahf
lods
fstp
add
out
dec
sbb
mov
dec
sub
mov
out
imul
repnz
les
roll
push
mov
mov
or
xchg
or
lret
out
sbb
lret
lock
in
or
xchg
addr16
sub
xor
mov
psubb
jo
mov
sahf
imul
add
cmp
xorb
fisubrs
out
lret
adc
xchg
mov
lock
mov
andl
sub
jge
fs
pop
sbb
pop
cli
push
ss
out
fchs
push
cltd
and
cmpsb
repz
mov
rorb
mov
enter
or
push
pop
stos
adc
dec
mov
push
add
and
sbb
add
les
cltd
mov
mov
movsb
push
jno
int
jns
stos
sbb
or
hlt
clc
or
out
mov
and
mov
or
out
jg
cmp
lock
and
flds
mov
sub
sub
pop
fisubrs
daa
cmc
xor
aam
jae
dec
pop
shlb
andl
cs
cmp
repz
mov
addr16
push
pop
in
repz
arpl
add
aad
jns
pop
sbb
or
ffree
shr
add
mov
pop
dec
xorb
out
iret
aad
mov
outsb
inc
xor
out
in
jne
sbb
adc
xor
out
dec
sub
mov
pop
stos
xchg
xor
adc
sbb
jg
cwtl
fsubr
mov
and
fdivrs
push
inc
int3
lret
sbb
pop
je
xor
jp
lea
pop
and
lds
jge
in
jecxz
cmc
pop
ljmp
outsb
out
jae
mov
mov
rcrl
pushf
fimuls
out
adc
incl
testb
test
pop
jmp
aam
insl
cmp
push
fnstsw
inc
inc
xchg
add
add
and
ds
dec
into
add
pushf
or
lock
icebp
push
xchg
clc
fcomi
enter
push
jae
adc
lods
lcall
lods
in
sbbb
mov
add
lods
adc
sub
push
aaa
lds
pop
mov
mov
inc
cmpsb
dec
pop
inc
adc
xor
jg
mov
push
fildl
repnz
iret
insb
jne
rol
popf
movsb
mov
aad
arpl
sub
or
mov
xchg
or
insb
std
movsw
add
adc
xlat
push
data16
mov
aad
adc
movsb
dec
pop
rorl
push
lahf
mov
rcrb
cli
cld
mov
add
mov
add
test
addr16
popf
ss
push
movsb
popf
push
sbb
mov
scas
lock
pop
cmp
mov
inc
pop
shrl
cmc
sahf
push
ret
dec
or
ret
ja
sub
inc
inc
jge
xchg
push
cmp
mov
jo
movsl
aam
pop
mov
cmp
fsubrs
cld
inc
leave
loope
fistl
or
mov
pusha
mov
fs
xor
in
popa
ljmp
xchg
sbb
pusha
sahf
or
fsubr
add
or
cmp
pop
rclb
into
sub
dec
daa
aaa
mov
test
out
test
cmp
sbb
mov
cmp
adc
aam
bound
lods
mov
iret
jl
pop
lds
sbb
jg
dec
sub
jb
push
stos
sbb
and
lea
xor
fldcw
imul
jo
js
push
sbb
leave
jb
jle
mov
mov
inc
jg
cmpsb
lds
sbb
movsb
dec
push
adc
cmp
cmp
sub
outsl
push
cmp
sbb
pop
push
das
mov
mov
fwait
mov
ljmp
pusha
push
inc
jg
xchg
mov
mov
es
mov
out
sub
clc
iret
pushf
fwait
jb
mov
add
jb
jg
sbb
cmpsb
test
mov
and
sub
ret
xor
insl
push
jge
sahf
xor
push
xchg
mov
insl
rcrb
jbe
mov
dec
push
jmp
repz
rcl
sbb
lret
inc
leave
inc
repnz
add
add
sbb
pushf
cld
out
mov
cltd
adc
es
jo
pop
adcl
and
into
lea
mov
rcrl
xor
fdiv
pop
lea
xor
or
sub
pop
push
pushf
lods
cmp
lret
ret
call
push
mov
fstpl
popa
mov
push
pop
xorl
pop
insl
dec
int3
test
jmp
dec
xchg
cld
pop
cs
andl
repz
je
popf
xor
cmp
jae
inc
xchg
dec
mov
dec
arpl
incb
cmp
jns
nop
mov
sub
stos
inc
or
aas
movsb
xchg
clc
scas
cmp
sbb
pop
inc
jb
xchg
cli
cmp
stos
stc
data16
out
mov
movsl
loop
pop
or
jae
stc
stos
shlb
sbb
mov
fs
and
cld
fwait
dec
stc
add
loopne
into
mov
rclb
inc
sub
test
add
dec
cli
mov
or
je
mov
push
cmpsb
sbbl
ljmp
add
push
mov
ss
or
out
dec
int
fisubs
pop
mov
add
pop
ret
js
scas
repnz
jmp
shlb
pop
scas
addr16
and
xor
adc
out
cmp
cltd
pop
jl
sub
adc
movsl
movsl
pop
sub
in
mov
pop
or
test
mov
jae
orb
sub
jle
xor
add
in
fisubs
cmove
cmpxchg
daa
jne
hlt
loope
mov
add
pop
push
hlt
outsb
or
orl
jnp
lods
add
cmc
imul
lods
push
xchg
cmpsb
dec
xchg
mov
mov
dec
test
jnp
cwtl
ja
xor
mov
in
jp
mov
aaa
dec
cmc
sbb
dec
push
sub
jne
mov
cmp
push
cmp
push
stos
ret
aas
ror
dec
sbb
push
xchg
mov
mov
ljmp
ficomps
fcomps
pop
add
leave
xor
fs
sbb
scas
sbb
or
stc
sub
lds
add
push
cmpb
xor
shlb
push
mov
int
int
xchg
pop
fildl
push
sahf
push
dec
cmpsb
orb
popl
inc
loope
cmp
jge
add
mov
push
int3
xchg
dec
pop
pop
sti
stc
es
inc
subb
mov
jns
stos
dec
dec
xchg
mov
rcr
lods
inc
inc
mov
lcall
cmp
in
mov
icebp
popf
hlt
cmp
xchg
out
movsl
test
test
and
pop
out
hlt
mov
ljmp
adc
pop
xchg
lret
hlt
in
mov
call
xchg
pop
loope
int
mov
dec
pop
push
out
pop
pop
pop
adc
pop
cmc
gs
push
cltd
out
push
cmp
sar
movsl
push
and
mov
hlt
popa
dec
cmp
scas
cmp
dec
xor
and
imul
mov
fdivr
aam
mov
xchg
cmc
xchg
popa
lods
mov
test
fs
mov
pushf
mov
inc
popa
nop
cli
or
repnz
xchg
pop
stos
mov
lods
sbb
pop
aad
inc
inc
jl
pop
sub
lods
or
mov
pop
inc
sar
mov
fdivr
lea
sub
fistps
clc
dec
mov
data16
repz
pop
mov
xchg
mov
mov
je
ss
pop
push
pop
pop
cli
fisttpl
jno
loopne
mov
mov
jp
popf
dec
shlb
or
jo
outsl
testb
pop
cmp
mov
push
dec
ljmp
stos
mov
dec
mov
iret
ret
push
stc
fmull
pop
xlat
int
xchg
arpl
sti
mov
xlat
stos
mov
adc
push
mov
mov
sub
pop
shrb
mov
or
or
xchg
repnz
dec
push
cmp
in
pop
pop
scas
jns
adc
mov
enter
les
xchg
daa
pop
ss
js
xchg
aad
xchg
jl
push
mov
push
das
mov
movsb
dec
mov
daa
fstps
imul
loop
shlb
cs
dec
cmp
out
dec
adc
adc
xor
sarb
and
cmp
xor
jns
iret
adc
scas
mov
outsl
and
add
or
sbb
pusha
dec
mov
outsl
mov
jne
adc
ja
dec
jnp
movsl
pushf
push
jne
lret
out
push
sbb
xor
sbb
mov
cmp
cmp
aam
test
pop
jne
or
rorb
or
cmpsb
ljmp
loopne
xchg
cltd
lds
mov
xchg
sub
lods
fstps
mov
sub
xor
mov
and
dec
pushf
sub
rcl
push
sub
xchg
pop
xchg
xchg
lahf
inc
int3
rcrb
pop
jge
adc
mov
rorl
rcll
push
aam
sub
icebp
lock
pop
fs
mov
adc
sbbb
mov
rcrb
xsaves
addl
jge
cwtl
mov
test
into
ja
cmp
icebp
test
xor
sub
mov
lds
shll
popa
repz
jno
sbb
adc
or
andb
les
cld
repnz
xchg
fidivrs
and
mov
pop
mov
fsubr
stos
stos
out
repnz
icebp
sbb
xchg
decl
bound
sub
mov
cmp
push
fsubrl
rcrb
push
mov
dec
dec
mov
aaa
shl
pop
sbb
aam
fucomip
mov
cmpl
dec
pop
cmpsb
xchg
mov
cmp
xor
leave
icebp
negl
push
jl
dec
mov
test
test
pushf
xlat
aam
sub
push
mov
adc
mov
repz
jge
shrl
ljmp
ficomps
andl
jle
and
stos
popa
les
pushf
dec
inc
push
test
dec
cmc
or
aam
mov
sbbb
jmp
mov
jo
scas
mov
sti
add
fcoms
fld
add
pop
mov
inc
mov
enter
aas
jne
push
jbe
push
jmp
adc
movsb
test
adcb
int
dec
stos
mov
dec
xchg
push
and
dec
pop
inc
ffree
outsl
xchg
xchg
iret
adc
cs
bound
movsb
inc
negb
fstl
and
int
mov
cltd
cmp
jo
mov
aam
mov
in
popf
xchg
test
test
sub
arpl
enter
and
icebp
in
mov
xor
push
pusha
adc
cs
hlt
fsubs
aad
dec
leave
sbb
push
sub
adc
popa
in
rcrb
mov
test
mov
mov
shrl
sbb
lea
mov
push
cmp
and
mul
cmp
fisubs
fwait
pop
clc
jl
out
mov
or
sub
pop
add
out
xor
dec
mov
addl
push
loopne
cli
ja
sub
or
pop
lcall
sub
pop
ja
mov
mov
adcb
mov
push
loope
imul
gs
in
pushf
aad
iret
rolb
aas
push
and
push
movaps
or
xchg
cmpsb
movsl
movsl
and
pop
ret
loope
inc
imul
push
jge
mov
rcl
ja
inc
fwait
jmp
sarl
push
movsb
js
dec
or
lea
push
aad
adc
sub
mov
arpl
push
mov
fcmove
jne
int
or
sub
inc
loop
test
jp
pusha
ljmp
lods
inc
sub
xlat
arpl
ret
inc
push
add
or
in
push
aaa
adc
popf
lods
test
xchg
daa
imul
mov
imul
adc
xlat
inc
sbb
jae
jae
fs
push
mov
jno
test
dec
sub
scas
mov
push
gs
aam
add
jecxz
stos
clc
outsb
nop
or
and
test
cmp
and
xor
sub
add
jmp
outsb
cmp
aam
xor
sbbb
xchg
data16
mov
test
shl
xchg
push
sbb
ret
movsb
cmpsl
stc
scas
pop
movsl
lea
cs
gs
test
add
sbb
mov
xor
xor
test
adc
test
xchg
push
sti
outsb
dec
jle
adc
js
sub
cs
jno
cmpsl
adc
addr16
js
fiaddl
jne
add
lods
repz
push
xchg
lods
jge
fdiv
orl
pop
ss
pop
imul
imul
mov
mov
push
scas
mov
mov
jg
andb
cmc
xor
mov
push
mov
ss
pop
fs
sub
das
movsl
cs
lds
mov
idivl
ror
adc
mov
in
mov
pop
push
frstor
jnp
pop
pop
iret
and
call
mov
pusha
mov
arpl
pop
inc
ret
iret
adc
cld
adc
cmp
xlat
sub
lea
xor
pop
pop
enter
shl
push
mov
jg
dec
data16
movsb
mov
sbb
sti
jb
scas
sarl
push
push
out
jb
lret
inc
xor
mov
in
lret
mov
inc
xchg
add
je
lcall
or
in
lahf
movsl
adc
pop
sahf
and
pop
test
xchg
lahf
jecxz
pop
pushf
and
icebp
pop
jbe
ret
mov
hlt
pop
mov
inc
sub
outsb
cwtl
mov
mov
data16
aaa
rcrb
or
add
pop
or
in
dec
mov
enter
stos
mov
daa
sbb
test
push
inc
fimull
hlt
add
inc
stc
je
fldl
adc
roll
mov
lret
int3
inc
aaa
jno
sub
bswap
mov
and
jae
pop
in
rep
adc
xchg
adc
loope
les
pushf
sbb
jnp
pop
sbb
pop
or
push
fwait
or
and
xchg
das
dec
and
outsl
pop
fists
and
and
in
jg
lea
pop
mov
sub
inc
fsubl
enter
adc
addr16
es
and
push
insl
mov
fstps
push
imul
sbb
cmp
insb
dec
lods
stos
sti
pushf
jge
idivb
jbe
out
push
and
pop
in
in
fldl
insl
pop
xchg
mov
aas
mov
daa
mov
cli
xchg
mov
in
cltd
adc
mov
enter
mov
shrb
sub
adcb
mov
sbbb
sub
testb
and
mov
out
xchg
add
repz
mov
inc
push
stc
mov
mov
sahf
in
jbe
pop
and
pushf
jb
push
mov
cwtl
dec
and
mov
daa
dec
dec
dec
add
test
and
push
fwait
pop
xlat
and
test
and
scas
push
jmp
xchg
subb
xor
cmpl
ror
mov
adc
mov
add
adc
inc
inc
pushf
fldcw
jno
mov
outsl
psrlq
jle
sub
rclb
sub
add
mov
fwait
mov
stos
cmpb
jp
xchg
fnsave
jno
xchg
cld
fwait
iret
bound
fildll
mov
jae
jne
cmp
outsl
and
aaa
jne
dec
cmpsb
pop
sbb
sar
mov
jp
and
dec
xor
repnz
test
lea
dec
insl
inc
xorb
cli
or
testb
or
pop
fidivrl
xchg
les
scas
les
or
out
add
shlb
call
and
push
add
jb
xchg
lods
rcll
adc
cmp
fildl
into
icebp
gs
je
mov
or
stos
movsl
in
cwtl
ret
fs
push
xor
enter
aad
popa
xor
or
sbb
pop
push
pop
aam
test
pusha
sbb
mov
pop
cmp
inc
jns
cmp
jp
xchg
sub
ljmp
and
popa
and
push
movzwl
xchg
jg
xor
pop
pcmpgtw
jp
data16
mov
push
out
xor
jo
sub
test
mov
repnz
shrl
and
inc
insl
xchg
rorb
je
cmpsb
addb
aas
addl
push
pop
fmuls
fwait
out
sbbl
jg
ret
in
loopne
sbbb
je
sub
push
sbb
loope
pop
sub
dec
push
decb
and
sub
xor
mov
lret
xchg
lods
std
cld
pop
pop
jno
sbb
mov
test
aas
shrl
mov
fisubs
cmpsb
loope
pop
arpl
das
lret
shll
dec
or
xlat
or
cmp
repz
push
and
cmp
dec
cmp
sahf
sbbl
cli
mov
rcl
pop
pusha
sub
popa
xchg
inc
pop
or
mov
lcall
jbe
cmp
pop
loope
inc
dec
pop
es
in
subl
mov
mov
adc
sarb
negb
mov
mov
lret
andb
test
sub
pop
or
movsb
and
dec
mov
mov
adc
inc
or
pop
rorl
out
bound
xchg
popa
test
xorps
sbb
sub
cwtl
lods
fwait
cmp
test
rolb
push
mov
mov
xchg
cli
aad
pop
pop
cmp
fwait
inc
movsb
jne
jp
mov
test
scas
fisttpll
mov
mov
push
mov
xor
mov
sbb
into
sub
icebp
dec
xchg
adc
out
xor
sbb
sub
or
and
jae
adc
inc
cwtl
sub
clc
jno
mov
fstpt
sbbl
sub
pop
cld
in
test
les
jmp
lods
ret
lods
fidivs
push
xor
aad
cmp
pop
sub
shr
fs
shrb
mov
repz
mov
or
pop
xchg
in
jns
mov
add
sti
or
mov
dec
decl
sahf
cmp
das
loop
xor
aaa
add
lea
test
push
pop
bound
dec
pop
daa
jno
mov
shrb
rcrb
mov
jns
jo
leave
inc
repz
jecxz
pop
mov
mov
notl
clc
dec
xchg
mov
clc
es
xchg
push
sahf
xor
loope
aam
pop
jg
imul
mov
repz
push
add
jno
sti
lahf
cmp
stc
push
or
js
jg
int3
push
inc
fdivs
in
popa
push
insb
push
mov
add
stos
movsl
jb
cwtl
dec
fstps
ds
mov
lea
jb
inc
xchg
xchg
scas
and
loope
xor
xor
push
dec
jae
mov
clc
jnp
ljmp
in
dec
and
xchg
push
cmp
pushf
mov
mov
push
xchg
js
jp
or
and
shll
or
dec
aas
and
jp
loop
xchg
hlt
in
loopne
fwait
or
rorb
jno
out
push
mov
jbe
push
rcll
xor
inc
or
fists
sahf
push
jnp
dec
xor
xchg
mov
adc
test
adcl
inc
rcrl
imul
subb
xor
push
aam
fimuls
jl
dec
jecxz
fwait
xor
scas
mov
mov
hlt
test
loope
jp
xchg
fst
xor
mov
xchg
jle
xchg
sub
xchg
mov
add
mov
pusha
xchg
hlt
in
or
in
into
dec
adc
jmp
rcll
lret
stos
nop
test
cmpsb
or
mov
dec
lahf
outsb
adc
mov
lret
mov
jno
xor
push
or
lret
sti
adc
mov
cmp
imul
pop
mov
mov
push
or
sbb
mov
loopne
loope
dec
jae
ror
pushf
arpl
orl
inc
sbb
sbb
push
push
adc
inc
frstor
dec
lods
push
add
pop
push
push
or
adc
mov
pop
jle
loopne
pop
jne
dec
sti
pop
cwtl
cmc
xlat
sub
push
and
mov
xchg
or
bswap
dec
fisubrs
testl
jns
jbe
inc
sub
dec
mov
mov
xchg
les
and
mov
negb
inc
out
in
dec
sahf
mov
jmp
mov
inc
dec
push
ret
roll
fcomps
int
pop
sub
jge
sbb
fisttpll
dec
adc
lcall
lret
pop
loop
aam
pop
repz
fnsave
pushl
xor
pop
or
xor
aam
or
or
movsb
mov
pop
or
adc
js
popa
cmpsl
xchg
sub
xor
cmpsb
jo
test
or
fistpl
test
pop
cmp
dec
mov
cmpsl
data16
push
int
std
lahf
cli
inc
shll
call
cltd
adc
testl
xchg
lock
test
loopne
mov
out
subb
xor
sub
into
sbbb
scas
mov
dec
mov
stc
jne
ret
dec
inc
std
cmp
outsl
or
dec
cmp
dec
negb
xor
outsb
xchg
sbb
sbb
xor
mov
xor
out
pop
outsb
rcl
push
cmpsl
out
cmp
mov
fimull
popf
inc
sbb
pop
ret
cltd
lds
xchg
push
inc
test
clc
mov
lea
mov
and
jno
dec
xor
xor
bound
out
aam
pop
dec
or
arpl
xchg
pop
pop
hlt
repz
sbb
out
add
add
mov
pop
data16
fucomip
adc
imul
dec
and
hlt
cmp
cmp
lock
sbb
repnz
push
jge
dec
mov
sub
pop
and
fstps
jne
repz
fiadds
into
iret
mov
xchg
mov
add
xor
cltd
and
add
push
gs
nop
cld
inc
jns
pop
mov
lods
testb
xrelease
jmp
es
out
stc
in
inc
cs
movsb
out
xor
inc
jne
cmp
cld
lahf
dec
pop
outsl
stos
push
fs
loope
int
jp
jl
add
in
test
pop
add
add
mov
sbb
insb
es
push
sbb
dec
push
icebp
or
add
mov
and
mov
imul
xor
push
cmpsl
js
aaa
xchg
cli
sub
push
nop
add
mov
mov
or
lock
shll
lds
das
insb
out
aam
push
cmpl
movsb
dec
sbb
nop
and
cmp
jge
add
imul
insl
dec
pushw
mov
sbb
cli
imul
mov
pop
int
xchg
dec
in
push
int
test
daa
jg
fsubrl
pop
pop
fildl
add
mov
mov
lret
lods
mov
cmpsl
inc
imul
cmpl
test
add
orb
or
nop
les
loopne
mov
and
fucomi
cmp
pop
lcall
mov
adc
shl
sbb
or
adc
flds
int3
mov
push
testb
je
pop
xchg
hlt
sbb
cli
push
mov
sbb
lahf
rcl
in
or
loop
jge
adc
mov
pop
int
pop
adc
mov
add
or
shlb
push
rcl
aad
fucomp
test
test
xor
into
pop
add
out
ret
stc
fs
sbb
sub
int
xor
sub
dec
xor
mov
cmp
push
mov
icebp
xor
pusha
push
sahf
rcll
jle
clc
addb
pusha
fmul
loop
push
idivl
or
cmp
or
mov
sbb
jmp
push
adcl
cld
in
enter
clc
std
aam
int3
pop
push
or
int
leave
stc
add
adc
xchg
dec
xchg
lock
into
in
add
pop
sub
xor
pop
or
lahf
cli
pop
gs
shll
inc
xchg
inc
cmc
loope
lods
adc
lahf
das
push
pop
and
test
test
mov
jne
cmpb
mov
push
hlt
cld
insl
pop
and
xlat
test
in
shll
in
test
pusha
jnp
shrl
in
into
mov
push
fldcw
mov
xor
and
test
ret
mov
mov
sbb
mov
test
adc
shlb
in
sub
ss
fistl
cwtl
lea
popa
sbb
jne
sub
add
xchg
mov
sbb
adc
out
aad
cmpsl
xor
inc
ja
inc
push
sbb
push
das
and
lahf
stos
shrb
lds
imul
mov
pop
push
jge
xor
aam
adc
pop
mov
push
pusha
add
push
daa
push
xchg
sub
fdivs
mov
jecxz
cltd
das
scas
jle
mov
mov
in
mov
pop
jecxz
sub
sub
push
mov
adc
jns
rcll
js
adc
sbb
sub
lea
mov
jmp
sub
cmp
cmpsb
scas
rorb
aas
roll
hlt
or
or
xchg
xor
lods
mov
repnz
add
dec
sbb
cmc
mov
fadd
movsl
jl
bound
jbe
or
or
rcrl
lahf
imul
push
jl
fadds
mov
dec
rcrl
pop
sbb
cltd
mov
push
lret
pop
xchg
add
leave
or
cmp
mov
fbld
lea
xchg
add
cmpsw
inc
sub
xchg
mov
jae
sub
mov
adc
mov
push
lret
or
jae
jo
jmp
pop
sub
xor
cmc
hlt
push
test
ja
push
cmovbe
xor
je
rolb
xchg
into
mov
movsb
push
pop
in
xchg
loope
cwtl
in
sahf
notl
jnp
sahf
xchg
xor
inc
inc
js
pushw
cmp
jns
les
stc
mov
pusha
cmc
aad
jmp
jo
rcl
cmp
or
cmp
aam
mov
and
and
mov
jecxz
mov
loope
xor
fnstenv
and
pushf
mov
dec
sarb
xchg
xchg
sub
mov
mov
push
leave
cltd
in
stos
daa
mov
sti
xor
out
addr16
mov
push
cmp
mov
lret
jnp
addr16
arpl
inc
mov
pop
sbb
push
mov
pop
push
pop
cli
jl
sarb
cmc
xchg
cmp
insb
lcall
cmp
xor
dec
add
pop
jl
jno
xchg
sub
pop
lahf
popf
push
nop
xlat
xchg
in
insb
inc
in
push
mov
cmp
loope
sbb
lcall
ds
and
push
or
out
cltd
js
xchg
test
mov
insl
inc
jmp
pop
fistps
adc
mov
rcr
sbb
sub
sarb
popf
lods
outsb
scas
int
rclb
inc
inc
nop
insb
dec
loop
test
cmp
das
push
mov
dec
fstpt
ljmp
test
cmp
outsb
scas
sbb
mov
cmp
into
jae
or
loopne
jmp
sbb
xchg
sahf
mov
xchg
or
ss
and
lahf
inc
fisubrl
mov
pop
mov
leave
dec
mov
dec
jno
inc
test
xor
dec
adc
cld
jae
inc
xchg
cltd
jno
jge
sub
mov
ret
jo
mov
call
push
sub
adc
sub
or
data16
or
pop
stc
insb
xchg
cmp
dec
cltd
adc
add
mov
inc
insl
jne
repnz
mov
jae
out
daa
sub
sbb
cmp
cmp
mov
loop
sbb
mov
pop
dec
mov
jo
inc
testb
pushf
out
hlt
xor
pop
cltd
stos
xor
js
pop
testl
fwait
or
dec
push
fnstsw
or
andl
jnp
jp
xor
in
shl
jmp
addr16
sub
je
and
test
mov
fsubrl
mov
nop
daa
sahf
sbb
jae
inc
add
dec
repz
cmc
loopne
fstp
mov
sub
jl
loope
xchg
jb
fcompl
stos
int
pop
lcall
sahf
stos
in
pop
lret
gs
fdivr
inc
fmuls
jns
xchg
xor
sub
in
and
outsl
faddl
adc
sbb
sub
push
jo
jae
data16
jp
pop
jns
jp
das
mov
push
mov
mov
sub
popf
lret
lea
push
movsb
adc
shl
push
jecxz
and
gs
xchg
arpl
int3
push
lret
add
adc
jle
adc
ljmp
push
and
pop
add
jno
in
data16
pop
xchg
out
or
inc
and
fwait
xchg
shrl
fists
xchg
mov
aad
pop
mov
cmp
mov
pop
jae
and
iret
sbb
leave
sub
mov
in
pop
ja
xchg
out
dec
dec
nop
mov
outsl
bound
pop
cwtl
pop
std
vmovdqu
cli
pop
loopne
mov
sbbb
enter
enter
xchg
subl
sbb
nop
lcall
inc
insb
es
sbb
lea
dec
iret
xor
push
lea
adc
xor
sub
dec
sub
in
pushf
ficompl
mov
sbb
add
jecxz
dec
stos
pop
mov
call
add
or
jecxz,pn
in
aaa
sbb
scas
fwait
addr16
jp
cwtl
lods
mov
leave
mov
mov
push
cmp
jp
movsl
jmp
fs
push
mov
mov
aam
fistpl
push
and
mov
and
aam
cli
sbb
xchg
add
pop
cmp
aaa
es
fdiv
popa
or
add
cltd
mov
imul
addb
inc
icebp
fwait
dec
test
jb
movsl
lahf
mov
mov
mov
fnstenv
add
sbb
and
ss
pop
xor
sub
bound
dec
mov
cmp
push
mov
pop
push
stc
mov
pop
inc
lahf
loop
adc
int3
sub
sbb
fs
into
mov
xor
movl
inc
cs
jecxz
shlb
or
popf
pop
push
mov
xchg
cmpsl
push
data16
mov
cmp
and
int
jmp
cmp
es
xchg
enter
inc
fwait
push
in
add
mov
sub
mov
mov
or
jb
and
inc
push
add
in
jg
add
mov
xlat
xchg
jne
inc
sub
lods
pusha
add
lahf
jns
dec
je
and
inc
xchg
xchg
sub
jb
repz
sub
xor
outsb
push
aam
pop
dec
rorl
enter
push
mov
xchg
loope
adc
jmp
sbb
xlat
outsl
aad
stos
push
rcrl
js
fidivl
es
fdivrl
in
imulb
out
gs
push
push
ljmp
push
fistpll
ljmp
pop
push
pusha
movsb
xor
mov
adc
fstpl
xchg
ficoml
andl
sahf
int
sub
pop
movsb
adc
out
loopne
stos
out
cmp
adc
add
push
sbb
cmc
add
mov
push
mov
pop
mov
or
sub
mov
sahf
xchg
push
arpl
imul
cmp
adcl
fwait
and
jmp
mov
cld
rorl
sahf
loopne
in
sub
pop
or
ss
add
xchg
stc
mov
adcb
fst
fwait
add
lock
leave
aad
jbe
adc
adc
out
lcall
into
adc
clc
mov
fstpl
mov
pop
aam
aaa
nop
push
jl
pop
cmp
cmp
dec
mov
mov
out
pop
les
je
push
dec
sbb
mov
inc
lahf
fbld
in
movsl
sbb
addl
pusha
sub
decl
das
jb
lds
xor
or
add
and
lds
mov
sbb
cld
cmpsb
sbb
push
movsl
cmp
cs
repz
and
xchg
nop
pusha
jne
les
stos
lds
mov
negl
rclb
loop
adc
rcrl
mov
xor
ja
sbb
inc
jge
mov
pop
outsl
mov
shr
dec
cmp
loopne
movsb
sub
adc
pushf
ret
xchg
add
mov
mov
mov
add
push
adc
dec
movsl
inc
popfw
dec
mov
scas
das
or
sahf
mov
iret
shl
xchg
iret
mov
sub
outsl
inc
push
in
je
in
add
sbb
mov
fnstcw
lretw
imul
cwtl
ficompl
popl
lahf
scas
and
ret
testb
mov
sbb
leave
aad
push
push
and
sbb
and
adc
cld
fst
shrl
sahf
lods
or
fisubs
in
arpl
push
daa
push
faddl
mov
pop
loopne
test
mov
pop
jle
cli
loopne
loope
fbstp
mov
test
and
sbb
pop
iret
adc
arpl
cmp
out
addr16
cmp
dec
daa
lods
dec
aad
insb
pop
movsl
xchg
test
pop
xorl
mov
xchg
repz
mov
cmpsb
enter
cmpsb
mov
dec
lcall
cmp
adc
movsb
testl
lods
push
jle
xor
push
mov
xchg
lea
test
les
repz
mov
scas
imul
cli
sub
rcl
mov
sub
pop
jle
xchg
fstpl
xlat
popf
pop
push
arpl
les
push
or
cld
and
and
stos
adc
mov
lahf
sub
xchg
inc
test
mov
adc
mov
mov
and
add
push
scas
pop
psrlw
cmp
xchg
gs
xchg
outsb
push
or
int3
push
ljmp
jae
ret
mov
in
mov
or
lret
adc
inc
push
jmp
push
jg
xchg
push
std
adc
roll
dec
clc
movsb
mov
push
in
bsr
and
loope
dec
jg
mov
outsb
cwtl
nop
push
mov
add
or
jno
cli
pop
mov
xchg
adc
je
jb
mov
inc
out
xchg
add
sbb
inc
mov
xlat
mov
sbb
add
xchg
mov
arpl
rcrb
loopne
xor
les
lret
lret
jo
add
gs
lret
int3
inc
inc
test
in
dec
scas
lock
outsl
out
push
adcb
adc
dec
push
sub
push
sbb
sbb
mov
xlat
mov
cmpsl
mov
and
ds
push
and
notl
stos
insl
jno
test
arpl
fmull
sub
cwtl
ja
fs
sarl
mov
xchg
test
mov
jae
sub
popf
or
subb
sbb
or
push
das
and
mov
push
mov
iret
jmp
mov
addl
xor
repz
pop
inc
js
mov
mov
jecxz
out
jnp
and
rcr
sbb
mov
inc
loopne
jns
fsubrl
and
fimull
addr16
pop
adc
push
push
jns
leave
adc
xor
xor
or
stc
inc
mov
mov
pop
add
adc
inc
jnp
pushf
sub
cwtl
mov
rorb
fdivrs
mov
mov
add
jns
and
pop
test
dec
or
push
inc
lods
pcmpgtb
outsl
addr16
imul
and
jnp
xchg
stc
sbb
dec
int
xor
mov
adc
sub
aaa
loopne
or
pop
rorl
mov
rclb
std
adc
xchg
lods
push
fimuls
add
lds
ljmp
push
loop
inc
addr16
jge
rolb
xchg
lret
adc
xor
ds
adc
inc
pushf
popa
outsl
lret
adc
popa
pop
xor
data16
ret
push
pop
int3
pop
cmc
xchg
ret
add
sbb
sub
fs
xor
sarb
sub
in
fildll
fcompl
fsubs
popf
shll
in
icebp
sub
fbstp
cmpsl
dec
stos
jp
nop
jae
sti
push
addr16
mov
mov
inc
in
add
inc
clc
xchg
popa
je
xchg
out
jl
dec
adc
pop
lret
mov
sbb
xor
sub
bound
loop
repnz
mov
jg
lods
call
xor
leave
jmp
pop
cmp
cmp
jle
imul
mov
fistpll
xor
mov
sbb
scas
sbb
xor
rclb
stos
sbb
cwtl
adc
sub
jns
hlt
outsl
movsb
outsl
and
adc
jle
das
js
lea
or
mov
cltd
popa
loopne
adc
pop
push
bound
push
repnz
adc
pop
int
pop
stos
inc
leave
cli
andb
mov
pop
push
sub
jae
mov
xchg
andb
dec
jmp
out
mov
bound
ds
mov
add
jbe
sub
cs
inc
aad
sbb
pop
stos
dec
test
pop
dec
mov
in
mov
pop
or
add
push
mov
scas
in
cltd
cli
aaa
loop
mov
decl
xchg
or
js
xchg
cs
sub
in
lcall
inc
xchg
mov
mov
jle
scas
test
imul
ss
or
lods
lcall
lods
shll
lret
cmp
fdivrs
cmp
test
insb
shlb
test
add
xorl
es
popa
std
in
ds
adc
loope
dec
adc
inc
popa
addb
dec
cmpsb
scas
adc
inc
fcoms
test
lss
or
pusha
addr16
mov
jmp
lahf
and
mov
scas
fcomps
cmp
mov
or
js
or
fidivl
adc
mov
mov
pop
mov
in
dec
lock
jmp
pop
add
fwait
stos
test
jecxz
ljmp
inc
cmp
cmpsb
sub
cs
dec
adc
fildll
sbb
and
dec
inc
ret
int
mov
movsl
mov
imul
jecxz
cmp
stos
insl
aas
loope
jo
pop
cmc
popa
loop
xor
mov
mov
pop
push
mov
xlat
mov
fwait
out
cld
mov
mov
mov
sub
xor
data16
mov
mov
mov
faddl
jle
lods
pop
push
dec
lret
insl
cmp
sarb
cmp
mov
inc
pushw
pop
call
dec
mov
add
into
mov
dec
ficoms
sbb
cmp
js
movsl
or
jge
arpl
xor
das
adc
call
ror
xchg
negl
shlb
inc
loopne
mov
add
sahf
jae
fadds
cmp
and
sbb
xchg
shrl
and
lock
bound
aad
rcrl
mov
aam
subl
test
xchg
mov
cltd
pop
or
mov
sti
aam
xlat
out
scas
sti
and
fistl
imul
leave
lock
or
fldenv
cmpsb
addr16
cmp
mov
test
pop
in
or
jge
icebp
pop
add
xchg
in
sbb
das
push
sbb
inc
mov
insl
loop
out
jne
push
or
xor
addr16
insb
ja
sub
inc
inc
xor
scas
inc
or
cli
mov
xor
aam
stc
mov
bound
int
mov
mov
sub
scas
push
jns
dec
dec
or
inc
sub
jae
sub
int
and
sarb
mov
adc
mov
and
sub
lret
push
or
and
jne
mov
dec
ds
sub
lahf
pusha
and
adc
and
ds
push
leave
pop
aas
jmp
dec
das
aaa
cmp
imulb
movsl
call
icebp
mov
cld
pusha
mov
jae
pop
inc
xor
movsl
sbb
jbe
andl
divb
xchg
es
jge
aas
adc
mov
mov
outsl
push
daa
push
aam
sbb
add
mov
mov
std
insb
outsl
inc
mov
scas
xchg
cmp
in
fcmovne
xchg
sbb
mov
xchg
popa
and
ret
mov
xchg
daa
or
popa
out
sbb
test
test
add
daa
sbb
xchg
dec
adc
dec
cli
sarb
push
negb
mov
push
aad
cmp
repz
sbb
scas
ja
popa
stos
jg
xor
daa
xor
pop
mov
popa
adc
repz
movsl
subl
mov
xchg
xor
pop
push
insb
sbb
outsb
mov
cmp
lea
fidivrs
or
mov
hlt
lods
xor
adc
dec
sub
scas
icebp
or
xor
and
fistl
stos
mov
add
mov
mov
ret
xor
mov
adc
mov
idivb
push
iret
adc
jb
dec
mov
cmpsl
dec
je
ss
std
std
jb
loope
pop
fwait
push
pusha
pushf
jns
cmp
sti
add
pop
in
push
or
push
lret
and
sub
jmp
test
scas
divl
out
push
mov
push
je
out
fisubrs
pop
enter
sbb
in
jnp
xchg
mov
xor
arpl
mov
mov
les
popf
sbb
test
dec
cltd
xchg
jnp
cmc
mov
pop
adc
cmp
mov
jne
test
dec
icebp
in
lds
rorb
pop
lds
fcompl
dec
inc
mov
js
into
mov
add
sub
cmp
mov
cmp
loopne
das
xchg
jns
in
jg
mov
test
pop
jo
int
push
addr16
and
lods
add
sbb
inc
add
out
dec
test
or
add
push
jo
xchg
dec
mov
mov
pop
inc
xchg
push
test
xchg
add
jae
cmp
loop
add
mov
jae
pop
sub
mov
xchg
ja
lds
inc
shlb
xchg
pop
test
sbb
pop
jbe
into
shrl
arpl
xchg
inc
xchg
loopne
sahf
cmp
nop
or
sahf
push
adc
dec
test
push
rol
and
lret
cmp
lret
gs
mov
cmpsl
pop
jns
push
add
movsb
push
dec
daa
sbb
dec
mov
stos
stc
jne
clc
fiadds
movsb
cltd
xor
mov
jmp
test
inc
mov
jecxz
mov
jo
xchg
movsl
mov
clc
sub
mov
ror
and
jle
ret
inc
bound
stos
cwtl
imulb
sbb
mov
inc
inc
jae
jne
add
dec
sti
sub
xchg
push
add
ds
shll
cmpsl
fsubrs
ret
jge
xor
insb
test
add
and
sub
imul
stc
ret
arpl
cmpsb
test
sahf
xchg
fsubrl
leave
jae
jl
adcl
int
lock
test
stc
test
cmp
jle
jmp
xchg
test
bound
pop
pop
mov
mov
inc
mov
mov
scas
xchg
lahf
xchg
test
or
inc
into
add
xchg
mov
mov
and
imul
into
dec
adc
popf
fdivrs
cmp
gs
push
push
test
xor
cs
sbb
jnp
mov
push
dec
push
add
loope
in
sti
mov
daa
pop
sbb
xor
pop
sub
pusha
dec
push
jle
andl
cmp
xor
iret
notb
jp
sub
push
push
mov
test
sub
rol
adc
rcll
sbb
pop
cli
dec
mov
rcrb
adc
mov
aam
gs
cmpb
test
add
pop
test
adc
sbb
stc
mov
scas
jae
mov
inc
sub
imul
and
pop
sub
stos
mov
sub
push
mov
dec
repnz
push
mov
mov
dec
jb
hlt
mov
pop
testl
into
cmp
push
dec
aas
push
add
mov
or
xor
jb
fadds
dec
mov
ds
adc
subl
data16
sub
fidivrl
mov
push
or
aaa
push
pop
cmc
pop
lahf
and
frstor
inc
pop
sbbb
cmp
cmp
push
pop
mov
dec
mov
sub
ljmp
pushf
js
mov
sahf
dec
cmp
mov
xor
rolb
mov
mov
shlb
xor
cwtl
in
jg,pn
cmp
jmp
add
xchg
rcll
adc
dec
test
sbb
cld
cmp
movsb
cmp
cltd
int
add
pop
les
fisubrs
or
das
in
inc
ljmp
imul
shl
rorl
out
sub
outsl
fs
adc
imul
and
fiaddl
push
movq
int3
sbb
popf
and
dec
xchg
ret
add
mov
inc
cmp
mov
sub
nop
pop
inc
pop
insl
fistl
adc
jb
mov
mov
jb
or
dec
ljmp
pop
sbb
into
je
ljmp
or
sub
iret
cmpl
fdivr
out
pop
aas
fs
es
in
enter
inc
fiaddl
inc
test
stos
inc
cmpl
push
ud2
jle
loope
rol
dec
and
add
dec
xchg
add
push
jae
dec
in
addr16
cli
jmp
xlat
sarl
push
shl
adc
sbbl
lcall
xchg
in
test
je
dec
or
jnp
ja
lahf
inc
dec
in
xchg
xchg
push
push
mov
imul
add
scas
in
lock
out
and
sbb
lcall
sub
sbb
cmpsb
pop
adc
in
add
fildll
push
jl
stc
cmp
rorl
cmp
mov
pop
dec
pushf
aam
mov
lcall
addb
xor
int
xchg
das
aaa
cmp
enter
sub
fstpl
mov
aam
icebp
adc
inc
mov
stos
inc
dec
or
sahf
pop
out
push
rcll
or
mov
movsb
mov
sti
mov
int
and
mov
or
dec
mov
cmp
shll
and
int
das
repz
cld
push
mov
orb
adc
pop
pop
into
inc
inc
in
fldl
or
or
mov
lcall
pop
mov
pop
adc
iret
movswl
inc
mov
sbb
cmpsl
add
dec
jb
pop
arpl
inc
adc
jecxz
jmp
shrl
cld
push
int
not
cmc
out
gs
xchg
rol
mov
mov
cmp
add
orb
sti
jno,pn
pop
push
test
add
ja
inc
adc
inc
xor
xor
and
jp
mov
sub
or
jle
pop
inc
cmp
divl
int3
pop
leave
inc
aaa
das
insb
dec
push
mov
jmp
mov
std
scas
mov
int
push
sub
jnp
pushf
idiv
icebp
fnstsw
adc
and
shll
mov
das
ss
sti
add
daa
js
xor
daa
xor
nop
lahf
mov
data16
xchg
aam
inc
push
out
pop
mov
jecxz
mov
cmp
fisubrs
gs
adc
cmp
popf
in
outsb
lock
aas
add
xchg
scas
lods
inc
iret
sub
fiadds
mov
adc
jns
out
pop
push
dec
sub
cmc
xor
push
xchg
ret
xlat
or
das
inc
mov
aas
jl
inc
dec
mov
inc
pop
xchg
and
dec
enter
mov
fwait
loopne
scas
jp
sbb
xor
inc
lahf
sbb
les
xlat
sub
or
aaa
push
test
fnstcw
std
scas
rcrl
adc
jne
lods
sbb
or
hlt
insl
push
aam
or
loop
push
add
into
lcall
jl
push
ss
insl
push
orb
jmp
aad
sti
loopne
or
mov
jae
and
out
clc
dec
xor
cmp
jnp
test
fs
sbb
pop
shll
push
and
push
pop
xchg
sbbb
ret
les
cltd
mov
ret
jecxz
ljmp
leave
inc
cwtl
mov
je
sbb
dec
das
or
push
enter
pushf
idivl
aaa
int
iret
adc
aas
ljmp
stc
cmp
push
jmp
rorl
fildl
xchg
lahf
and
aad
fstl
clc
dec
insl
xchg
and
bound
xchg
jecxz
mov
fnsave
shlb
jmp
jne
movsl
xor
data16
lods
aam
loop
mov
stos
push
andb
adc
jmp
inc
sub
dec
sub
out
call
cmpl
mov
jnp
aas
adc
gs
gs
add
lods
xor
loop
lahf
or
jns
push
cmp
out
sub
ret
lock
mov
jl
hlt
jmp
sub
pop
and
bound
scas
insb
or
jmp
cmpsl
xor
inc
or
push
cmpsb
hlt
lock
leave
insl
or
dec
inc
movsb
imul
das
mov
and
mov
mov
adc
aaa
std
aam
cmpsl
dec
adc
push
daa
and
rcr
mov
jg
repz
inc
jle
adc
enter
jb
mov
inc
xor
test
pushf
pop
xchg
hlt
mov
stc
scas
lahf
jno
pop
sbbl
sub
add
fisttpll
cltd
and
in
push
sbbl
lds
cmpsl
mov
cmp
mov
cmp
std
lds
lods
movsl
andl
pop
push
pop
imul
jp
push
repnz
les
inc
and
sbb
scas
xor
pusha
dec
mov
fnstcw
sti
jb
xlat
ret
lahf
psubusw
shll
push
sub
push
pushf
adc
js
decb
pop
jns
fnstenv
shl
lret
push
test
mov
repnz
pop
pop
into
jno
push
jb
dec
rcrl
cs
scas
int
std
lea
cmp
push
push
mov
mov
push
dec
or
mov
mov
adc
mov
jo
icebp
mov
fisubs
dec
push
lds
mov
mov
les
repnz
orl
mov
aam
aam
pop
sub
mov
sbbl
aas
hlt
sbb
pusha
and
call
int3
adc
pop
fisubrl
jo
sbb
stc
dec
jne
loope
xchg
jbe
push
sbb
xchg
imul
mov
inc
push
and
inc
lock
inc
in
jbe
add
loopne
jg
ja
mov
inc
in
data16
repnz
pop
ss
je
pop
xor
push
xchg
sub
pop
adc
xor
lcall
sub
add
sbb
cmp
repnz
lods
cmp
adc
adcl
fstp
xchg
jp
dec
dec
mov
jge
push
insb
lret
jno
nop
scas
movsb
push
pop
push
xchg
movsl
cld
dec
jle
movsl
inc
cli
push
fiaddl
pop
and
or
xor
cld
sbb
xor
adc
int3
cwtl
repz
ds
lods
push
sbbb
into
jg
inc
xlat
jns
rcrb
in
jg
fistl
push
sbb
frstor
test
mov
ret
or
pop
out
push
or
out
sbb
imul
push
and
mov
or
cmpsl
mov
pop
ds
scas
pop
fs
mov
cwtl
add
mov
mov
fiadds
or
call
xchg
xchg
mov
test
mov
dec
mov
mov
lods
shlb
scas
movsl
lods
sub
mov
std
lock
xchg
mov
dec
lret
or
pop
sub
fwait
inc
insl
fldcw
sbb
jbe
in
repz
push
inc
mov
imul
repnz
sub
fcmovne
or
test
or
dec
mov
orb
sar
add
pushf
mov
fs
movsl
lcall
cwtl
negb
dec
sbbb
lret
mov
inc
jge
in
cwtl
dec
push
ja
ljmp
dec
insb
inc
stos
pop
adc
adc
nop
repz
and
cltd
pop
push
jle
cld
jle
std
sub
xchg
in
mov
call
movsl
les
cmp
test
loop
push
xchg
js
mov
mov
xchg
push
imul
out
mov
jno
add
shll
xchg
test
jo
or
inc
sub
in
dec
mov
sbb
push
daa
inc
or
xor
pop
sub
sub
cmp
xor
jae
mov
ss
int
jg
cmp
ret
xchg
test
les
cmp
xchg
pop
ret
jecxz
add
mov
push
in
or
pop
mov
lahf
cmpsb
iret
cmpl
inc
mov
mov
aas
shr
int3
jg
xchg
push
dec
int3
fiadds
or
stos
cltd
cltd
je
fmuls
jbe
pusha
lods
scas
fcmovu
out
xchg
orb
negb
cs
les
or
push
jb
out
mov
push
daa
dec
pop
dec
xchg
xor
pop
js
stc
pop
das
repnz
mov
js
sbb
popf
shlb
sbb
test
lods
sbbl
clc
and
dec
and
test
in
sub
scas
and
int3
mov
inc
add
movsb
ss
jp
xchg
mov
fdivrs
fwait
jp
popa
mov
int3
sti
movsl
add
fs
ficompl
add
inc
das
iret
std
enter
adc
enter
push
fcompl
repz
jmp
mov
leave
xchg
add
adc
pop
ret
into
hlt
cmp
cwtl
ss
loop
xchg
cmp
adc
pop
xchg
lret
or
xchg
adc
fptan
and
jo
jns
dec
imul
xor
addl
sbb
push
popa
test
sub
push
movsb
int
fstpt
lret
jge
jl
dec
mov
jp
add
in
inc
jns
cs
dec
push
or
ds
mov
pop
orl
xchg
add
push
stos
std
sub
ss
testb
loopne
cld
insb
lret
adc
sub
sbb
js
sbb
pop
lret
xor
sub
and
outsb
mov
jmp
stos
and
aam
pop
jbe
inc
pushf
fdivrs
inc
out
cmp
ljmp
outsl
push
mov
pop
in
mov
iret
outsl
push
mov
cmp
mov
adc
ret
repz
gs
inc
imul
push
adc
out
fsubl
in
cwtl
movsl
sbb
imul
subl
scas
adc
iret
xlat
idivb
fsts
adc
mov
pop
mov
dec
loop
call
bound
shlb
jge
movsl
aam
in
call
cmp
inc
rclb
xchg
pusha
fbld
movsb
mov
pop
sbb
and
popf
loop
int3
xchg
xchg
je
lret
mov
pop
or
sbb
cli
pop
in
sub
jbe
shll
loop
xchg
mov
jl
les
and
and
sub
movsl
pop
loop
out
les
cmpsl
inc
xor
pop
mov
stos
popa
fs
mov
in
pop
push
mov
idivb
test
sub
fsubrl
cld
or
adc
push
stos
insl
jecxz
insl
fisttpl
jo
mov
jae
lods
imulb
cmp
push
fstps
addl
stos
mov
insb
je
jecxz
cmpsb
insl
sub
ret
hlt
mov
arpl
rclb
xor
jl
mov
push
add
push
xchg
ds
jp
test
in
pop
xchg
mov
xor
jno
sub
adc
scas
sarl
jae
mov
insb
ss
or
add
notl
inc
mov
scas
ja
inc
pop
cmp
ss
xlat
pop
mov
adc
push
outsb
pop
mov
mov
lods
pop
adc
cmp
pop
aaa
mov
mov
adc
test
push
jne
movsb
shll
push
cwtl
mov
inc
cmpsb
arpl
cs
cmpsb
inc
sti
cwtl
arpl
fists
cmpsl
jg
xor
fidivl
jnp
stos
lea
xlat
adc
cld
fiaddl
cli
adc
mov
popf
test
lcall
sub
test
cmp
cmp
jbe
jae
mov
sbbl
aas
dec
mov
mov
jecxz
popa
xor
sub
icebp
jmp
pop
jmp
pop
inc
fisubrs
push
push
dec
inc
ljmp
and
inc
jmp
shl
cld
stc
xchg
cmp
adc
jmp
pop
and
dec
lret
mov
outsb
push
sub
pop
and
fsubrp
stc
cmpsl
cs
cmpsb
fidivrl
scas
testl
shl
adc
mov
das
mov
sbb
cmp
lret
xor
jae
fsubrl
push
ja
leave
pop
daa
mov
insl
mov
mov
mov
mov
jb
cmovs
fildll
add
out
jbe
out
jmp
daa
insl
cmp
in
pop
add
lea
stc
aad
mov
push
decl
add
mov
xchg
outsl
sub
push
scas
in
jae
in
sbb
stc
jae
in
loop
jo
jno
shr
jl
xor
add
xchg
jns
adc
lret
popa
iret
sbb
or
jnp
inc
lret
push
xor
sti
add
scas
ja
jb
push
lea
pop
adc
xchg
pushf
xchg
xchg
outsl
cmp
xchg
fildl
xor
inc
sub
push
test
cmp
mov
jl
mov
fidivrs
outsl
inc
jge
insl
imul
mov
xchg
pop
mov
push
mov
stc
xor
mov
pop
mov
daa
jl
push
nop
mov
lcall
loope
cmpsl
add
push
cmp
addb
sub
in
mov
test
push
mov
lret
imul
lahf
fs
test
jae
sbb
aad
data16
nop
mov
mov
mov
out
push
sub
add
mov
sub
push
insl
lret
or
pop
pop
rcr
mov
lret
loop
and
pop
push
incl
mov
xor
adc
clc
cmc
sub
mov
pop
sti
pop
inc
incl
dec
xor
out
xchg
movsb
fsubl
push
xlat
sub
cmp
or
shll
jno
xchg
pop
and
addr16
imul
mov
lahf
xlat
leave
sub
popa
enter
shr
dec
repz
loop
xor
jle
jbe
mov
xor
ret
jmp
jl
in
jae
push
enter
or
pop
dec
pushf
sub
hlt
adc
xchg
inc
pop
dec
fimuls
dec
mov
push
xchg
or
jnp
mov
pushf
jp
push
stos
cmc
orb
push
or
pop
xor
jle
adc
and
jne
mov
mov
fdivrl
and
sub
inc
push
mov
pop
sahf
loope
sub
pushf
dec
sbb
pop
fisttpl
pop
out
pop
mov
or
adc
push
movups
sbb
addl
jge
fistps
in
lret
add
fidivrl
cmp
push
or
jns
lods
jnp
lods
adc
jp
xor
mov
and
aas
jg
arpl
icebp
test
mov
pop
cmp
in
push
jae
mov
test
into
es
rolb
fadds
cmp
xor
mov
inc
daa
dec
popl
fldt
mov
ret
mov
out
push
into
pop
push
test
jb
xchg
rolb
aaa
movsb
sbb
mov
out
jg
adc
call
add
push
jnp
aad
inc
pcmpeqb
sbb
sub
lds
xchg
push
mov
add
and
rcl
lods
jl
hlt
inc
aad
jae
or
add
dec
int3
shll
inc
int
mov
out
dec
xchg
jl
mov
mov
mov
sub
mov
push
xchg
and
pop
jp
cmpsb
and
dec
js
mov
jb
pushf
lahf
add
fbstp
jne
xchg
mov
aam
xor
aad
or
lock
xlat
xchg
add
dec
jl
sbb
adc
ljmp
inc
mov
negl
dec
subl
cltd
repz
xchg
stos
push
nop
inc
add
fmuls
push
add
data16
or
stc
leave
repnz
cmp
loopne
ret
xor
add
jl
cld
mov
mov
fsubs
imulb
pop
shrb
xor
mov
movsb
pusha
ss
loope
hlt
inc
sub
fs
fldl2e
mov
jg
icebp
push
cmpsb
xor
sahf
mov
outsl
and
lods
fwait
cltd
sbb
mov
sarb
jbe
cmp
or
ret
fwait
js
and
int
into
push
arpl
cli
xor
mov
inc
jle
leave
out
dec
adc
sar
mov
loopne
roll
mov
xchg
adc
outsl
aam
mov
xchg
jp
idivb
movsl
ja
push
or
sahf
scas
mov
lds
xchg
and
add
inc
fyl2xp1
stos
scas
pop
fucomp
add
repnz
mov
jbe
xorl
mov
sahf
orl
and
test
sti
cs
mov
leave
test
xchg
icebp
js
mov
rorl
int
mov
sub
mov
or
into
jbe,pt
fistl
shll
jae
push
lcall
mov
sub
jmp
mov
outsl
arpl
adc
out
and
sbb
jo
shrb
mov
xchg
clc
xchg
sbbl
dec
cmp
push
andl
cmpsb
or
push
sub
icebp
fwait
add
das
cmp
stos
xchg
xchg
jnp
and
fwait
call
jl
cmc
xchg
inc
xor
push
notb
ret
test
incb
rorl
sbb
sub
pop
mov
inc
cmpsl
cltd
jle
loopne
mov
lds
jl
lods
inc
mov
fcoml
xor
movb
lds
pop
mov
pop
cwtl
jae
adc
std
cltd
jg
ret
jp
lods
xchg
mov
push
outsb
and
sub
dec
loop
outsl
fildl
sub
push
sub
ret
xchg
mov
xlat
fistpll
mov
mov
fadd
jns
ja
mov
jmp
mov
call
fisttpll
inc
push
and
adc
out
gs
sub
out
into
pop
lret
int
fldenv
lahf
xor
fimull
orb
cmc
push
add
pop
cmp
aam
push
rcl
or
mov
and
mov
push
cmpl
sub
mul
sub
push
sarb
movl
xchg
clc
ret
repnz
in
sub
stos
xchg
lcall
xchg
sbb
jbe
icebp
pop
inc
hlt
scas
stos
inc
dec
push
or
ds
push
mov
cmc
adc
jp
test
xchg
aas
test
mov
fwait
pushf
loopne
sbb
aas
cmp
pop
test
pop
repz
jl
je
xchg
das
sti
loop
lahf
mov
cmp
enter
jmp
mov
mov
jbe
jg
rorl
sbb
out
popl
mov
inc
cmp
dec
jl
cli
mov
dec
sbb
jns
mov
test
dec
or
test
fistpl
pop
test
mov
pop
repnz
fimuls
out
mov
inc
addl
mov
test
pop
dec
mov
or
push
gs
shrb
sbb
ja
mov
int3
cmp
push
mov
push
lock
rorb
incl
lahf
add
fldcw
in
lret
sarl
adc
sbb
adc
icebp
iret
lock
aam
and
pop
sub
test
jbe
or
pop
ja
jmp
sbb
cmp
in
icebp
rclb
dec
and
cltd
cmpsl
jne
outsb
cmp
aaa
or
jle
out
lods
inc
xor
gs
mov
xor
mov
jp
sbb
mov
enter
repz
dec
stos
pusha
mov
addb
jns
arpl
add
std
mov
insb
push
mov
cmpsl
jae
icebp
push
and
into
jp
inc
push
adc
sub
jns
and
nop
jl
push
jge
inc
lret
lods
dec
mov
push
xchg
in
sahf
xlat
and
clc
mov
mov
fistpl
xchg
jnp
mov
mov
fs
stos
jo
sub
jp
int3
pop
jae
ljmp
not
aaa
scas
sti
or
in
sbb
dec
mov
sbb
mov
sub
sub
pop
popa
jne
rorb
setg
cli
leave
cld
pop
add
adc
jne
in
cmp
iret
sarl
in
mov
or
jae
push
inc
jecxz
xor
adc
xchg
jo
cmpsb
shrb
mov
jnp
adc
mov
and
dec
ret
je
cmpsb
xor
push
stc
lret
pop
xor
xlat
jg
nop
inc
mov
push
add
cmpsl
pop
aam
shll
scas
cmp
cmp
push
pushf
hlt
mov
add
movsl
sub
outsl
fsts
test
js
sub
push
pop
xor
mov
sub
les
dec
shll
clc
jle
test
sub
mov
test
sub
xchg
xor
pop
inc
inc
pop
pusha
mov
mov
imull
push
and
jp
cmp
mov
test
xor
stos
mov
ss
fistps
insb
iret
jp
loope
sub
psrad
pop
and
or
clc
mov
jg
add
inc
les
adc
enter
pop
cmpsb
sahf
sub
mov
mov
xlat
push
pop
scas
negb
scas
ss
aas
pushf
add
and
shlb
push
cmp
push
cli
sub
inc
push
iret
inc
in
mov
or
ret
outsl
mov
and
test
js
loope
pop
addr16
jae
mov
fdivrp
hlt
mov
cmp
int3
daa
mov
jbe
scas
cmp
repz
and
jnp
in
sbb
stos
in
jp
xorl
loop
stos
mov
das
loopne
mov
add
sti
add
outsl
das
mov
je
jno
jecxz
xchg
mov
mov
push
aas
jno
lahf
lods
xchg
add
sar
int
je
ret
iret
repz
pushf
mov
sbb
aas
cli
cltd
or
movsb
decb
push
lock
ljmp
fs
inc
imul
out
dec
mov
pop
xchg
repnz
cmp
jmp
inc
sahf
loopne
sbb
jne
pop
inc
pop
fwait
pop
inc
data16
sbb
leave
or
rcr
andb
xor
into
push
xchg
aas
test
das
mov
popf
int3
xchg
inc
sub
xor
out
lret
outsb
faddp
mov
adc
fisttpl
push
dec
mov
ljmp
ret
sub
sahf
cmpsb
mov
mov
arpl
ror
sti
mov
inc
sub
mov
repz
faddl
test
jle
jmp
shl
mov
loopne
dec
mov
int
mov
or
push
inc
adc
lods
dec
aad
sub
popf
nop
int3
pop
stc
jecxz
imul
cmc
push
insb
repz
xchg
cmp
fwait
jle
mov
insb
jb
fwait
mov
mov
add
push
repnz
push
mov
lock
and
pop
pop
cli
stos
mov
cmpsb
pusha
xchg
push
adc
pop
inc
mov
sub
and
jge
adc
jge
lock
dec
xchg
mov
in
mov
faddp
add
fdivrs
jnp
sbb
xchg
and
aad
ret
sbb
and
test
in
mov
cld
push
sbb
gs
sub
addl
adc
dec
lcall
imul
arpl
out
or
cmp
adc
movsb
lea
cmpsl
mov
add
cli
xchg
jae
or
lea
insl
test
aaa
out
shrb
push
dec
jno
push
fistl
shrb
mov
or
rcll
adc
xor
sub
sbb
jmp
mov
hlt
or
jns
or
xorb
or
ror
outsl
inc
idivb
jle
mov
rcrl
or
push
bound
ret
xor
xchg
jbe
ds
out
rcll
cld
inc
enter
xor
jg
pop
dec
pop
xorb
and
pop
xor
stos
insl
enter
shlb
inc
inc
sub
mov
cmp
add
daa
cmc
xchg
push
xchg
dec
mov
fcoms
test
ret
jmp
in
scas
in
psrlq
pusha
mov
js
xlat
dec
movsb
nop
push
sahf
cld
inc
pop
rclb
xchg
scas
xor
sbb
scas
or
xchg
test
nop
movsl
pop
xchg
or
add
popa
pop
xchg
lret
leave
rcr
mov
hlt
daa
andl
aam
fbld
sbb
push
inc
mov
cltd
jmp
cmovae
in
adc
or
xchg
sbb
addb
lahf
cmp
test
mov
out
dec
lea
jno
ja
jnp
sub
inc
add
clc
cmp
push
sub
lahf
cmp
jo
mov
inc
fs
mov
fistpll
sahf
subl
rclb
cltd
out
cltd
shrb
jno
pop
xchg
rorl
cs
das
sbb
mov
mov
in
movsb
jno
xchg
arpl
sarl
lcall
repnz
mov
mov
popf
popf
in
cld
dec
push
inc
push
nop
ds
jbe
pop
int
dec
dec
add
xchg
das
lock
push
inc
lea
outsl
adc
lret
mov
push
ret
sbb
lcall
sbb
mov
pop
dec
mov
pop
imul
ret
ja
pop
mov
adc
roll
xchg
das
popf
outsl
jle
shlb
adc
inc
fdivrs
fidivrs
jae
inc
push
pop
push
insb
cmpsl
push
jne
nop
loopne
icebp
pop
jg
mov
adc
inc
int
mov
mov
or
pop
andl
xor
mov
push
xchg
sahf
inc
xchg
xor
pop
out
das
mov
into
ljmp
call
adc
or
jecxz
std
shrl
push
xchg
sbb
push
and
mov
mov
cwtl
jmp
loopne
push
sub
or
cld
xor
repz
xor
fs
sub
out
addr16
lret
mov
sub
jbe
jmp
add
fnop
mov
out
shlb
aas
stos
mov
stc
pop
ud1
cwtl
sbb
mov
push
mov
mov
repnz
push
pop
test
xchg
xor
and
push
shlb
pop
test
aam
cmpsl
mov
xchg
cmp
add
mov
divb
dec
out
lock
jle
or
jns
mov
push
inc
xchg
scas
mov
add
sbb
mov
enter
jmp
aad
loopne
gs
mov
ja
test
xor
mov
inc
xor
sti
call
ret
fwait
sbb
jb
dec
sbb
dec
repnz
mov
test
loopne
sub
and
xchg
sub
mov
imull
dec
and
pop
sbb
inc
roll
jnp
xlat
jp
fiadds
fists
inc
cmp
test
or
hlt
add
in
sbb
and
jmp
pop
inc
or
pop
pop
jmp
cli
cmp
pop
cmp
je
rcr
test
and
pop
dec
or
cltd
adcl
ret
sarl
adc
popa
addr16
jmp
lahf
out
clc
hlt
pop
cld
mov
mov
lret
or
mov
mov
ficoms
push
inc
sbb
cmp
sub
cmp
or
in
jns
aaa
lahf
pop
pusha
out
in
lock
je
sbb
dec
pop
jo
xor
outsl
adc
cmp
push
jmp
xchg
aad
add
cmp
in
sbb
jne
popa
repnz
add
cld
adc
xchg
out
inc
mov
and
ljmp
sbb
out
push
fld
mov
pop
sti
popa
scas
xor
and
jge
popf
cmp
xor
jo
jg
mov
rcl
test
mov
fstps
sub
fldt
js
sarb
ss
xchg
jle
adc
pop
dec
clc
mov
mov
inc
xor
mov
stos
inc
jb
jmp
xchg
pop
scas
and
push
xor
mov
fcoms
in
ljmp
imul
leave
cld
add
add
lods
add
test
or
push
sahf
aas
mov
xchg
sbb
fisubs
or
stc
cli
ljmp
fs
leave
sub
adc
mov
or
xor
call
adc
popa
jge
sub
addr16
cld
cmc
sub
or
xchg
cmp
clc
xchg
call
pop
cmpsl
outsb
dec
push
fnstcw
sti
xor
mov
jecxz
push
imul
addr16
lahf
jmp
shl
and
mov
rcll
arpl
or
sub
jb
test
mov
les
and
xor
xor
filds
cmp
out
lahf
jnp
in
aam
sti
test
jecxz
jo
and
addr16
or
movsl
jns
sub
mov
dec
dec
pop
gs
jns
mov
push
sub
cmp
mov
jle
addr16
push
jle
and
cmp
xor
xchg
jg
inc
loopne
sbb
mov
sbb
lcall
mov
sub
frstor
lcall
aas
test
aaa
nop
mov
jae
inc
push
std
add
lret
cmp
push
push
imul
mov
fisubrl
xor
sahf
mov
and
add
subb
dec
loopne
call
adc
cmpsl
dec
lret
stos
loop
pop
sbb
fs
cmp
push
out
pop
rcll
lahf
rclb
push
arpl
xchg
add
push
int
fdiv
insl
inc
mov
push
sub
rcl
lods
push
rcrb
sub
stos
test
shlb
push
test
repnz
mov
pop
lds
test
add
dec
sbb
or
pushf
data16
dec
out
into
lock
xchg
cmp
push
cwtl
inc
lods
scas
xlat
lods
push
push
aad
fdivl
scas
gs
cmpb
stos
lock
jnp
jp
insb
insl
lods
cld
mov
iret
mov
add
pop
sbb
push
fwait
int3
pop
daa
out
jmp
les
arpl
xchg
movsb
or
fs
mov
ds
or
or
xor
arpl
mov
add
loop
xchg
cmp
xor
and
xchg
dec
into
mov
test
xor
sub
mov
sbb
pop
adc
in
mov
inc
pushf
push
xchg
jbe
cmp
cmpsb
pop
mov
les
movsb
push
add
xchg
into
or
push
mov
inc
fcompl
lret
jne
jno
scas
lret
je
hlt
or
pop
sbb
shrb
fcmovnu
fidivl
pop
sarw
bound
xchg
and
aas
and
fists
mov
or
xlat
cld
dec
jns
idiv
add
dec
inc
out
mov
mov
and
mov
mov
andl
loope
arpl
add
ja
shlb
xlat
pop
or
push
fisubrs
int
pop
push
push
cmp
test
fisubl
sbb
mov
jb
lock
nop
xor
stos
push
ja
pop
sub
or
les
pop
or
in
mov
hlt
pushf
mov
aaa
lock
bound
or
jmp
lods
shrb
adc
pushf
mov
fucompp
dec
jge
pop
rclb
ss
cmp
aas
mov
stos
lea
das
mov
pop
mov
and
sarl
adc
push
lea
inc
inc
xor
cltd
dec
arpl
pusha
inc
rorb
das
stos
out
mov
xchg
loopne
in
adc
jo
or
xlat
push
stc
adc
push
mov
into
orl
sbb
mov
sub
in
mov
mov
pop
dec
std
sub
hlt
lods
mov
aad
mov
and
cld
test
jg
add
daa
jbe
scas
sbb
inc
inc
pop
push
incb
lea
cmp
ja
je
out
movsl
stos
aaa
dec
pop
fidivrs
adc
cli
lret
addr16
jmp
add
jge
cmp
mov
jne
mov
mov
popf
sbb
dec
pop
in
roll
and
inc
bound
cmpsb
jmp
or
out
test
insb
sti
push
sbb
mov
dec
clc
add
xchg
sysexit
xor
popl
cli
xchg
xor
lahf
repnz
xchg
ss
xor
adc
pop
fidivrl
loop
es
pop
push
pop
popf
mov
in
iret
mov
stc
test
pusha
xor
or
mov
mov
sti
xor
dec
iret
dec
lea
out
jle
adc
jmp
cmpb
dec
push
js
outsl
insl
sbb
pushf
cmp
lahf
subl
imul
jg
aad
jo
sub
sbb
pop
mov
in
pop
mov
jne
add
ljmp
jb
lret
stc
pop
adc
sub
mov
xchg
pop
xchg
dec
ficoml
clc
inc
ficompl
out
aad
adc
insl
fbstp
pop
fwait
test
daa
fidivrs
and
mov
repz
aam
pop
loop
adc
and
cmp
sahf
push
sbb
mov
mov
pop
lods
jecxz
mov
jmp
xlat
mov
inc
cltd
mov
dec
xchg
ljmp
out
aam
mov
mov
xchg
xchg
sub
testl
fnstsw
inc
sbb
mov
sbb
shrb
dec
xor
in
push
sbb
cld
test
mov
xchg
or
push
xor
push
insl
cmp
clc
in
mov
rcl
lods
push
mov
cmp
mov
adc
cmp
push
xchg
push
and
bound
lcall
loopne
xchg
ret
sbb
lret
adc
jbe
insb
sub
sahf
cltd
lret
pop
mov
ret
sub
stos
adc
inc
mov
xlat
fdivs
fdivrl
adc
in
inc
jbe
clc
fldcw
mov
sbb
es
xchg
notb
dec
mov
mov
sub
mov
xchg
jnp
xchg
imul
pop
lods
push
ds
lcall
imul
and
jge
mov
xor
dec
and
push
inc
inc
or
daa
adc
jmp
pushf
insb
stc
cmp
lods
mov
orl
adc
pop
std
inc
jp
pop
mov
xor
out
aam
inc
fisubrs
outsb
sub
sbb
and
iret
or
jge
inc
jg
out
or
dec
sarb
sub
inc
mov
adc
mov
gs
ret
fcoml
xchg
push
dec
gs
xor
imul
pop
jecxz
xchg
fs
push
and
lds
push
dec
mov
xchg
cltd
jmp
in
adcb
xchg
xor
pop
add
xchg
test
jge
push
mov
pop
fxch
ljmp
xlat
addr16
pop
adc
adc
inc
ds
xor
and
and
inc
in
sahf
pop
mov
ret
jle
data16
cmp
mov
js
and
mov
sbb
cmp
cld
rclb
pop
jmp
pop
in
xchg
movl
mov
jecxz
and
jae
inc
fs
dec
in
bound
pop
fucomi
jp
scas
rorb
xor
dec
push
pop
iret
push
jne
xor
cmp
inc
test
jp
sahf
cmp
out
xor
repz
jg
lock
pop
jp
pop
inc
jl
adc
jecxz
fisttpl
lds
and
push
cmpsb
loop
dec
xor
mov
jae
cmp
cltd
xchg
daa
cmp
sbb
arpl
call
lds
shll
lret
inc
fisubl
jne
loope
mov
mov
enter
outsl
loope
push
mov
pop
arpl
insl
aam
cmpsl
leave
lea
test
call
pop
dec
lret
mov
mov
lahf
ljmp
stc
in
in
lea
and
mov
sub
cmp
sbb
sar
xor
add
rolb
loop
enter
adc
ds
filds
mov
push
ret
adc
add
out
cld
xchg
xor
or
mov
imul
pop
dec
iret
jg
rol
cmpsl
enter
testl
cmpsl
jg
sub
inc
mov
xchg
or
jb
jecxz
loope
leave
pop
cld
loopne
lods
cwtl
popa
or
popa
mov
call
inc
clc
add
jns
pop
out
xor
sbb
or
push
pop
lods
mov
mov
shl
xchg
mov
fwait
lea
pusha
xor
addr16
adc
or
lret
or
pushf
cmp
jecxz
mov
mov
xor
andb
in
inc
addr16
stos
add
pop
inc
mov
rcll
mov
jns
mov
into
bound
push
test
sbb
insl
xor
aad
mov
jnp
scas
rolb
popf
xlat
sub
mov
or
stc
shll
mov
lods
into
sbb
shl
xchg
pop
leave
in
mov
iret
dec
dec
popf
adc
mov
cmp
push
xor
orl
sub
popa
int
cmp
jp
je
mov
inc
pop
inc
dec
dec
push
pop
push
fucomp
je
jns
int
mov
mov
cld
add
xchg
mov
pop
mov
pushf
pushf
cs
insl
sti
aas
xchg
xchg
fcompl
xchg
fs
jmp
ret
push
clc
sub
cld
jl
push
shll
xchg
stos
fbld
dec
pop
mov
sbb
in
imul
insl
push
push
jmp
add
inc
cmp
or
sbbl
jae
sbb
or
subb
adc
mov
or
lret
stc
popl
inc
aad
xchg
mov
ja
jge
jge
mov
mov
xchg
push
mov
cmpsb
mov
lea
jecxz
xchg
sbb
aaa
imul
inc
push
xchg
mov
sub
insl
jns
cld
mov
cmp
and
xor
in
add
jecxz
fwait
cmc
in
mov
call
mull
dec
push
repz
push
xchg
adc
iret
cmp
mov
movsl
mov
aas
dec
xchg
push
jno
cmp
inc
mov
lock
xchg
pop
push
bound
or
pushl
cmc
clc
xchg
sbb
fstpl
mov
test
push
lcall
lock
rorl
fwait
push
test
sub
jecxz
inc
sbb
test
lret
pmullw
fs
adc
fisubl
jg
pop
add
call
decb
iret
popf
ss
test
les
sbb
or
adc
stos
lret
ret
inc
adc
mov
and
addr16
pop
jmp
or
outsb
push
adc
pop
push
popf
cmc
lea
jmp
mulb
ret
add
mov
out
pop
push
pop
jnp
fsubr
push
movb
xor
adcl
sar
or
cmp
xor
aam
mov
in
popf
in
cmp
push
push
es
imul
ljmp
push
cmp
out
pusha
int3
leave
inc
lods
mov
add
lcall
and
xchg
inc
cmp
arpl
sub
sub
push
int3
lcall
cmp
in
clc
arpl
scas
notb
mov
outsl
out
xchg
aam
inc
repnz
iret
out
adc
xchg
adc
das
movsl
hlt
insb
and
mov
outsb
push
int
mov
adc
sub
stc
adc
mov
ja
mov
mov
push
jge
jge
add
dec
scas
ret
mov
and
sbb
dec
jb
push
aam
adc
mov
addl
stos
mov
into
add
adc
pop
xlat
sbb
repnz
mov
fistps
inc
add
sub
gs
xchg
mov
jno
loop
fdivrp
ss
inc
data16
push
pop
popf
je
xor
addr16
adc
inc
jnp
jbe
push
push
jl
mov
call
mov
push
push
and
or
fistpll
ret
test
in
push
decb
dec
clc
ja
xchg
inc
sbb
sub
pop
jmp
mov
leave
jge
aam
mov
lret
cmpsl
arpl
pushf
mov
es
mov
xor
mov
push
loop
sbb
sub
xor
imull
jmp
aas
mov
cmp
jl
jae
mov
cmp
and
mov
jge
cwtl
in
roll
inc
mov
push
outsb
pop
inc
dec
mov
jp
es
xor
or
lods
bound
and
out
xchg
or
xor
xor
inc
mov
cltd
push
xlat
stos
pop
sbb
jmp
or
jl
xchg
fcoms
enter
mov
movsl
sub
jecxz
pop
jno
repz
out
jnp
dec
fsubrl
pop
xor
test
sub
sbb
lret
jnp
or
jp
ret
cld
jecxz
adc
jp
push
lea
int
test
ja
stos
popa
lea
adc
lret
shlb
aas
popa
clc
mull
jmp
sti
dec
mov
xchg
loope
insb
roll
mov
dec
daa
add
cmp
sub
adc
pop
mov
daa
and
clc
addb
xchg
and
call
inc
push
ja
jno
popa
call
xor
mov
sub
mov
fidivl
push
cwtl
jmp
or
xchg
orb
stos
loopne
das
push
inc
cmp
cmp
inc
lret
int
or
sti
mov
rclb
aad
add
pushf
mov
push
idiv
cmp
into
movsl
mov
cmp
leave
mov
mov
xor
out
rorb
pusha
push
adc
pop
sbb
mov
or
mov
out
add
add
mov
push
xor
sahf
push
out
xor
mov
dec
mov
das
cmc
mov
rorl
mov
popf
inc
bswap
xor
lret
pop
sub
xchg
mov
shl
fimull
push
add
push
orb
jp
sbb
cmp
inc
cmc
or
in
hlt
pop
xor
lock
bnd
jecxz
sub
sub
or
sbb
je
xor
add
mov
cmp
test
mov
xor
js
in
and
mov
int3
mov
pop
shll
xchg
fs
stos
nop
out
mov
mov
xchg
out
in
cmpsb
jne
pop
or
in
mov
pop
data16
imul
or
lock
insl
cmp
fnsave
mov
inc
mov
inc
cmp
enter
push
jnp
repz
sarb
leave
sbb
mov
lret
aam
std
mov
int
sahf
in
lret
sbb
aaa
mov
inc
fisubs
dec
shl
mov
adc
insb
lds
mov
ja
sbb
cmp
jo
adc
jae
inc
rorb
push
inc
ds
data16
push
sbb
sbb
inc
dec
cmpsl
loop
bound
fildl
cld
jae
movl
mov
repz
dec
in
jns
inc
out
fimuls
ret
mov
jo
adc
or
pop
mov
cmp
orb
jae
push
mov
inc
out
fisubrs
test
std
clc
adc
test
lods
lds
mov
or
lea
inc
clc
dec
or
mov
mov
push
cmp
xchg
push
pop
scas
or
sbb
arpl
xchg
xchg
repnz
xchg
lret
scas
jp
rolb
jmp
icebp
inc
xor
pop
mov
dec
lods
into
loopne
sub
mov
or
pop
mov
add
sbb
pop
jae
mov
push
fmuls
mov
stc
push
sub
pop
gs
xorl
fistpll
sbb
loop
das
xor
mov
adc
add
add
push
scas
xchg
mov
add
cli
dec
push
pop
ret
jge
mov
mov
jmp
sub
mov
aas
adc
shrb
enter
xor
hlt
xor
enter
xchg
mov
and
jnp
aam
jmp
fidivrl
or
inc
js
push
les
jbe
hlt
arpl
arpl
cltd
inc
xchg
jbe
enter
push
ljmp
es
movnti
addb
rolb
hlt
loope
add
cmp
or
ja
in
mov
fsubrl
cld
mov
push
xor
divb
pop
iret
movb
inc
sbb
xchg
mov
jg
xchg
shlb
xchg
inc
test
aas
fcmovne
in
mov
adc
xor
jge
outsb
sarb
xchg
out
xchg
push
jg
lret
stc
sbb
fstl
mov
dec
jmp
pop
les
push
lretw
xor
mov
mov
jge
xlat
or
mov
and
jle
out
jge
cld
mov
mov
call
std
mov
imul
or
test
into
add
dec
arpl
jle
xchg
es
push
lock
in
dec
faddl
arpl
ljmp
pop
push
pop
jb
subb
scas
aaa
cmp
xor
in
out
and
test
sub
les
scas
jne
jmp
xchg
shll
or
jns
fdivr
hlt
xchg
in
cmc
mov
push
dec
mov
cmp
je
jns
xchg
decb
enter
xchg
cltd
add
add
repnz
mov
lods
fdivs
jno
xor
std
mov
jl
mov
inc
push
mov
fwait
jb
pop
mov
popf
ds
pop
xchg
les
dec
pushf
fsubrl
stos
jg
jmp
imul
roll
mov
jbe
outsb
fnstenv
dec
and
rorl
push
fwait
aas
insb
pusha
daa
clc
cwtl
in
decb
sbb
mov
rcrl
nop
xor
inc
ja
mov
xchg
nop
in
movsb
lods
jnp
enter
adc
push
dec
in
fcmovnbe
sbb
xor
add
inc
fcoml
cltd
mov
cld
lds
inc
adc
iret
adc
pop
add
xor
jbe
cmp
mov
incb
in
mov
and
mov
clc
lods
cmp
into
push
pop
inc
scas
pop
stos
jne
push
in
dec
and
push
push
add
mov
aaa
fisubrl
jecxz
mov
icebp
out
fs
pop
shll
mov
pop
fisttpl
repz
ja
cmp
loope
fldcw
mov
rclb
jmp
mov
cld
pop
aaa
mov
je
je
mov
mov
fstps
insl
test
cli
mov
mov
test
xor
adc
fstps
loopne
decl
dec
orl
dec
mov
stos
push
fucomi
rcl
clc
jl
jns
mov
aam
push
rorl
xchg
stc
mov
jmp
adc
mov
push
test
xor
pusha
lret
adc
popf
out
fstpl
mov
inc
aam
gs
repz
adc
lret
movsl
sbb
test
xchg
in
xchg
cltd
bound
xchg
push
push
xor
pop
cwtl
sub
stos
ja
cmp
lahf
orb
inc
jge
xor
outsl
repnz
dec
xlat
les
ljmp
mov
adc
adc
in
jbe
pop
cmp
sub
in
pop
repz
mov
pop
scas
cmpl
mov
mov
push
and
mov
dec
jmp
mov
adc
dec
lock
inc
push
jns
stos
repz
pminub
sub
xchg
lret
imul
mov
dec
out
dec
mov
sub
les
aad
mov
mov
imul
jne
into
xchg
sbb
push
movsb
xor
push
mov
xorb
into
clc
sbb
das
xor
fs
scas
outsl
sarl
int
out
and
xchg
or
out
ror
gs
add
popf
mov
push
add
fidivrs
ja
mov
iret
or
push
rolb
or
add
inc
pushf
jp
jmp
ljmp
je
andb
pop
sub
out
in
outsl
loopne
rcrb
sbb
sbbl
pusha
repnz
fidivs
insl
enter
xchg
cmp
jg
pcmpgtw
out
imul
add
mov
mov
pop
lds
subb
cmp
icebp
sbbb
pop
stos
mov
xchg
sbb
inc
in
sarl
dec
fstl
ficompl
mov
jnp
scas
fstpt
mov
stos
cmp
mov
mov
mov
ja
dec
cli
out
leave
mov
mov
xchg
mov
stos
mov
adc
mov
js
std
and
mov
ficoms
cmp
and
adc
es
js
pusha
xor
sub
pop
aaa
sub
or
dec
into
inc
mov
mov
xor
pop
cmp
sub
adcb
mov
dec
push
jg
repz
sbb
sub
inc
icebp
repz
cltd
pop
cmp
and
cmp
orl
xor
or
rcl
int
dec
or
jmp
loopne
push
jb
repnz
adc
xchg
enter
add
xor
fwait
pop
mov
and
xchg
push
dec
insb
adc
rcrb
roll
and
mov
xchg
outsl
mov
arpl
jno
jge
mov
setb
xchg
std
inc
in
fs
in
out
imul
loop
cmp
lcall
nop
cmp
jno
jno
add
out
shlb
out
or
sbb
dec
pushf
push
fucomi
or
aam
xchg
push
sbb
lea
jmp
loop
lret
or
jb
inc
lock
cmp
cld
xchg
or
loope
enter
adc
insl
mov
jmp
and
lea
js
jne
cmp
lcall
inc
movsb
imul
pop
cmpl
insl
mov
sti
push
add
add
imul
xchg
mov
mov
imul
xor
rorb
aaa
jp
mov
mov
mov
pop
notb
cmp
cltd
fisttpll
mov
xchg
jecxz
incl
add
xchg
movsl
dec
jne
or
sub
push
cmpsb
and
add
bound
and
push
std
addr16
iret
popa
mov
stos
popf
cmc
sbb
dec
mov
sahf
pusha
fldcw
dec
add
jp
inc
mov
repz
das
dec
dec
xchg
push
push
jp
sbb
or
push
dec
pop
or
sub
inc
jae
xchg
test
stc
xchg
fdivl
mov
mov
inc
push
adc
addb
pusha
cmpsl
test
cld
xchg
adc
mov
ss
bnd
rolb
jle
or
movsb
add
xchg
mov
nop
mov
cwtl
push
rolw
mov
pop
sti
push
ret
mov
push
sbb
cmc
add
mov
ss
pop
ficompl
sbb
call
mov
jbe
push
je
insb
adc
sbb
pushf
aam
mov
sub
pop
mov
mov
adcb
jno
push
sbb
sub
lock
push
sub
jae
mov
inc
xor
das
jae
jge
push
sbb
cmp
jg
inc
sub
push
sahf
lods
fcomip
push
and
inc
lcall
or
std
iret
mov
add
lock
ljmp
jne
cmp
sbb
push
pop
push
jno
enter
jl
bound
stos
ja
sbb
mov
or
add
scas
out
pusha
mov
arpl
test
add
fs
push
pop
xor
loope
imul
nop
mov
xor
push
sub
pop
mov
stos
mov
mov
js
mov
not
add
std
inc
sub
or
xor
ret
jle
jnp
in
pushf
adc
jae
inc
js
jno
pop
in
inc
sub
mov
std
fsubrp
pushf
adc
and
or
in
fs
movsb
mov
or
out
ja
mov
or
aas
mov
push
jg
ret
pop
push
popa
nop
adc
pop
gs
sub
test
push
adc
mov
and
or
mov
and
fwait
or
adc
fiadds
dec
jecxz
pusha
jl
lods
xchg
add
pop
orb
mov
xchg
sarl
or
jo
or
add
add
pop
std
push
sbb
mov
movsb
lods
xchg
mov
ljmp
outsl
jmp
xchg
dec
and
addb
xchg
rcl
shl
and
xor
sarb
addr16
mov
and
or
jb
popa
lea
pop
mov
out
and
xchg
sub
jp
mov
mov
fnstenv
jne
ret
sbb
gs
aad
repnz
mov
mov
sub
pop
push
sub
adc
test
lahf
test
popa
and
clc
adc
push
ficoms
mov
mov
ljmp
mov
vmread
add
sbb
adc
add
repz
hlt
mov
loopne
fidivs
movswl
ljmp
and
out
jb
push
lods
mov
pop
dec
sub
pop
jno
cmpsb
dec
jae
out
lods
push
roll
and
ds
or
jo
daa
xchg
sub
inc
insb
xchg
xchg
repnz
rorl
hlt
push
or
xchg
pop
or
imul
bound
or
push
fs
loope
adc
push
jge
jnp
data16
in
sarl
dec
dec
sbb
stos
test
lods
je
mov
or
lds
lds
outsb
adc
movsl
xchg
mov
adc
push
xor
mov
inc
test
fidivrs
int3
cmp
inc
and
jg
outsl
sbb
in
sbb
pop
les
andb
add
pop
js
daa
into
mov
movsb
jae
cmp
imul
icebp
add
test
pop
lret
cwtl
and
pop
mov
jbe
lret
lahf
dec
jmp
loopne
fidivrs
insb
iret
pushf
mov
xor
sub
and
mov
fiadds
ret
lahf
ljmp
jp
and
stos
outsb
addr16
test
xchg
std
data16
adc
mov
dec
cmp
or
jecxz
out
mov
cltd
sub
mov
pop
inc
sub
cld
dec
lret
sbb
xlat
loopne
mov
ss
out
ret
addr16
cmp
packuswb
test
lock
data16
mov
jge
lcall
in
sub
dec
or
clc
pop
in
push
push
mov
pop
cmc
and
pop
icebp
cmp
data16
inc
mov
sub
icebp
sub
addl
leave
xorl
cltd
sti
roll
mov
push
mov
dec
mov
cmp
sub
push
aad
fsubl
adc
push
arpl
lahf
std
jmp
jo
push
imul
pop
mov
sbb
jmp
repz
cmp
inc
ljmp
push
in
jne
mov
mov
xchg
outsl
hlt
cmp
mov
scas
mov
sbb
or
jo
cmp
das
lret
sub
cltd
mov
mov
clc
test
xchg
ffreep
or
push
nop
push
inc
incl
repz
in
cld
out
daa
sti
sub
fwait
or
add
mov
mov
call
repz
lods
mov
pop
jmp
cmp
rcrl
push
xor
sbb
sbb
test
pop
bound
pop
enter
dec
mov
xor
sbb
mov
std
loop
xor
xor
aad
lock
or
lods
adc
jae
cli
fsubrs
mov
adc
int
add
adc
rcl
lret
repz
mov
movsl
push
into
adc
cli
or
fs
repnz
push
pop
and
movsb
xor
mull
in
dec
and
ficoms
jb
imul
add
lret
inc
aam
gs
lea
mov
in
lods
dec
bound
mov
pop
fwait
out
and
xchg
in
scas
jp
ret
dec
jl
cmp
shrb
fs
or
cmp
into
test
mov
lock
add
push
xchg
mov
mov
iret
adc
hlt
adc
adc
rcrb
mov
fimuls
movsb
addb
scas
dec
xchg
add
in
push
out
ja
mov
sub
push
dec
out
mov
inc
push
or
push
dec
test
shrw
jecxz
scas
inc
adc
xor
dec
adc
xlat
mov
es
in
xchg
call
jno
mov
and
test
ds
std
pushf
out
sub
leave
iret
xchg
pop
cmp
dec
add
mov
pop
popl
inc
cmpl
sub
dec
leave
bound
ret
jmp
pop
les
pop
xchg
sbb
ss
inc
lret
je
mov
sbb
inc
pushf
push
dec
aaa
data16
xor
cmp
test
jle
dec
aas
fs
xlat
dec
pop
repz
clc
stc
pop
aad
or
cmp
sti
insb
or
loop
or
mov
cltd
inc
push
es
cltd
aam
arpl
inc
cltd
addl
loopne
sbb
ss
fcomip
in
call
lcall
jp
daa
ficompl
fwait
mov
xlat
inc
bound
cmp
loope
push
mov
push
sbb
xchg
pop
add
mov
sbb
or
pop
mov
mov
jne
push
rorl
mov
scas
shll
pop
adc
addl
pop
jbe
negb
clc
sub
nop
cwtl
in
mov
rcll
filds
push
leave
idiv
addr16
inc
xchg
mov
stc
orl
cmp
sub
cmpl
push
xor
push
test
lcall
rcrl
jp
out
lahf
call
mov
pop
pushf
imul
fcomps
mov
mov
aad
sub
jne
mov
push
aas
inc
test
jg
sbb
adc
std
mov
stos
cmp
test
or
mov
mov
mov
hlt
in
push
in
jne
cmc
btrl
jl
inc
dec
js
cmp
mov
sbb
mov
mov
mov
or
addl
xchg
cmpl
lock
aam
lret
adc
pop
jl
data16
push
mov
imul
sarl
xchg
cmp
inc
or
std
push
sbb
sub
test
pusha
sub
cmpsl
push
jmp
xor
rcrb
push
pusha
jnp
sub
movsb
inc
in
pop
ffreep
mov
dec
mov
knotw
or
jae
pop
aam
xchg
repz
jle
pop
xor
cmp
into
dec
sbb
jns
push
outsb
shrl
mov
testb
mov
test
push
mov
notl
adc
jns
ss
dec
push
cmpb
into
cmpsb
pop
in
int3
xchg
out
adc
loopne
jbe
mov
pusha
iret
push
xchg
pop
jae
hlt
adc
rcr
mov
dec
or
jns
fld
in
lods
cmp
inc
push
int
push
pop
ljmp
jl
test
insl
cmp
es
mov
inc
xchg
fists
sub
imul
hlt
jns
repz
decl
jno
std
jb
pop
sbb
popa
subb
cmp
or
lock
sbb
adc
lock
adc
jmp
js
sbb
fnsave
lds
adc
repz
mov
rorb
mov
xor
jecxz
js
xchg
sahf
pop
dec
cmp
js
rcl
jg
cmc
ret
imul
inc
lcall
mov
pop
or
lock
lods
dec
xor
add
sbb
imul
xor
ret
push
jp
inc
add
jbe
mov
outsl
out
or
arpl
repnz
xchg
arpl
lret
dec
push
stos
inc
les
les
jp
lcall
xor
jno
andl
insl
xor
push
xchg
mov
pop
lods
data16
mov
mov
movsl
faddp
fnstenv
and
cld
test
adc
dec
mov
xchg
cmpsl
and
mov
adc
jle
xchg
mov
mulb
mov
sub
push
xchg
test
mov
mov
iret
push
mov
pop
jl
int
std
es
jp
xchg
iret
sbb
std
push
dec
rclb
push
lea
jg
pop
fwait
int3
add
mov
lret
jnp
incb
icebp
push
out
cmp
dec
fwait
xor
jle
cld
jnp,pt
cwtl
jmp
loope
stc
sbb
loopne
xorl
int
inc
mov
dec
push
jb
outsb
sbb
xchg
gs
data16
ret
jae
popf
ret
imul
sub
out
inc
ss
stc
popa
dec
adc
xchg
jno
adc
rclb
or
fld
stos
cmp
mov
js
pop
iret
jp
push
scas
pop
jno
lcall
test
inc
push
inc
rcr
sub
call
or
push
scas
dec
out
push
inc
mov
inc
test
insb
add
es
or
push
or
pop
mov
ss
mov
xor
pop
adc
rep
push
ret
lods
xchg
popa
add
fcoms
aam
cwtl
add
testl
xchg
mov
lock
mov
scas
rol
cmp
push
int3
mov
add
pop
popa
cs
aam
fldcw
iret
in
xor
pushf
fcompl
adc
outsb
les
lea
pop
in
xor
inc
ret
xchg
push
int3
xor
sub
fistpl
call
pusha
dec
mov
dec
mov
push
and
sbb
adc
inc
stc
xchg
imul
iret
pop
sti
push
testb
pop
jge
pop
xchg
cmp
lcall
push
in
push
jp
sub
cs
xchg
mov
jb
cmpsb
add
xchg
adc
popa
decb
mov
shl
sbb
incl
and
es
sub
insl
and
enter
inc
xlat
or
jno
jno
mov
and
inc
mov
mov
in
cmpsb
xchg
loopne
sub
cmp
sub
iret
out
mov
mov
mov
faddl
jl
sbb
loop
aaa
mov
loopne
dec
or
mov
les
sahf
and
xchg
pop
jns
out
cs
jne
jl
mov
je
sub
mov
dec
cmc
xchg
in
xchg
xor
dec
add
pusha
or
adc
int
and
shll
or
test
mov
cpuid
lds
lea
dec
rcrl
cmp
test
jl
in
inc
mov
mov
stc
stos
add
lea
pop
or
or
adc
cmp
xchg
rol
ficompl
fcoms
sbb
push
jbe
pop
data16
mov
sti
call
cld
mov
les
push
pop
sub
mov
jbe
mov
adc
jno
subl
repz
call
pop
xchg
lds
mov
dec
mov
cld
or
daa
lods
pop
subl
pop
jne
mov
enter
cmp
add
pop
pop
bnd
jl
xor
mov
dec
rorl
or
dec
icebp
dec
mov
and
mov
ljmp
mov
fsubrl
push
inc
lahf
mov
icebp
xchg
cmpsb
xchg
or
js
or
int3
add
lret
adc
mov
icebp
ja
adc
imul
dec
ja
int
mov
adc
movsb
jne
imul
cmp
pusha
mov
cmp
sbb
push
repnz
sbb
mov
aaa
flds
les
test
adc
rorb
das
dec
jmp
repz
cmp
loopne
pop
in
outsb
cli
gs
inc
pop
and
pop
insb
insb
jbe
add
push
es
in
cmc
jg
mov
jae
mov
dec
sub
inc
nop
mov
pop
les
je
rcrb
push
clc
xchg
or
arpl
iret
jg
lock
loopne
push
push
push
call
stos
jnp
mov
sbb
jb
mov
pop
aaa
mov
inc
mov
loope
add
outsl
leave
sbb
add
in
cmp
lret
in
cmp
test
movsb
bound
fadd
inc
loop
lcall
xchg
fbstp
hlt
aaa
sub
cmc
dec
or
adc
mov
aas
jp
hlt
fs
rcll
add
push
mov
in
push
mov
push
fsubrl
push
push
ficoms
mov
cmp
add
mov
inc
ret
or
out
sub
mov
pushl
jecxz
fbstp
jo
xor
jb
dec
pop
fidivrl
and
repnz
dec
pop
and
jp
leave
aam
dec
lods
jp
ficoms
sub
xchg
testb
xchg
adc
in
and
or
or
je
sbb
cmp
fsubl
int
inc
adc
jns
rcrl
push
cli
loope
pop
test
dec
sub
cmp
stos
push
mov
call
ret
mov
and
xchg
std
cs
ret
xor
push
xchg
mov
sti
iret
pop
jne
push
push
lcall
jp
mov
jge
adc
mov
push
out
pushf
lds
jmp
addps
pop
jl
cmpsl
lahf
cld
mov
arpl
xchg
cwtl
cmp
dec
dec
push
test
loop
add
hlt
loop
pop
sbb
ror
stos
and
imul
push
notb
mov
inc
pop
pusha
mov
jo
pop
dec
mov
sti
mov
sarb
push
cmc
fisttpll
and
imul
sbb
jnp
cli
leave
outsl
mov
dec
add
sub
xor
cld
xchg
cmp
sbb
add
enter
out
mov
mov
fisubrs
jb
loopne
popf
jns
pop
mov
pop
sub
xchg
xchg
adc
pushf
hlt
imul
push
aam
mov
fcmove
aaa
mov
or
adc
sahf
jecxz
and
out
pop
cli
xchg
xor
popf
adc
in
pcmpeqw
movsl
cmp
daa
mov
je
imul
icebp
mov
not
xor
jmp
xor
mov
jno
inc
mov
cli
ret
out
pusha
jle
inc
xor
xchg
outsl
sub
stc
ss
add
xor
mul
imul
inc
sti
pusha
insb
mov
pop
cmp
xchg
jmp
xchg
outsb
stos
cmp
outsl
and
je
call
and
jne
mov
cld
xor
sub
popa
or
mov
imul
sub
std
sbb
pop
cmp
fwait
je
es
or
dec
gs
inc
gs
repz
xchg
mov
mov
pop
loop
or
clc
ja
mov
scas
aaa
mov
sbb
mov
cmp
js
sbb
cmp
pop
lret
popa
push
jbe
lock
mov
jnp
jp
xchg
and
icebp
jb
imul
pop
push
fcmovnb
jnp
xor
inc
test
loopne
fwait
xor
pushf
mov
mov
xor
or
ljmp
pop
xchg
mov
pop
cmp
leave
mov
xor
lahf
xor
xor
push
insl
xor
mov
and
push
jge
xorb
sbb
popa
xor
inc
stos
fldl
push
add
jbe
js
and
sahf
and
mov
cld
mov
negb
adc
mov
mov
mov
int3
inc
std
out
adc
push
jb
pop
lea
mov
jp
and
movb
dec
and
xchg
jns
loope
pop
call
insb
pop
cli
push
stos
mov
and
bound
inc
std
aas
jg
out
subb
inc
clc
sbb
mov
inc
or
hlt
shl
sbb
ss
jne
or
aam
pusha
lods
call
out
inc
pusha
std
mov
sbb
push
iret
mov
dec
daa
loopne
sub
out
xor
push
dec
push
test
call
push
push
jge
mov
or
fs
pop
jecxz
mov
insb
inc
cmp
mov
adc
fidivl
out
jmp
push
and
rcll
movsl
inc
xchg
arpl
fldl
movsl
push
hlt
inc
sbb
adc
mov
aad
sub
jp
pop
or
adc
mov
sub
imul
mov
and
xchg
pop
or
mov
roll
adc
mov
lcall
dec
jne
shl
cmp
adc
test
stc
xchg
aam
sub
and
inc
cwtl
mov
dec
pop
ja
in
jo
mov
int3
xor
fnstcw
push
pop
sti
mov
xor
adc
je
push
je
imul
fidivrl
inc
ret
xor
mov
fmuls
fwait
mov
push
push
aaa
xchg
pop
xchg
outsb
and
jns
cmpsb
mov
pop
push
push
jle
fisubrl
lea
or
outsl
push
mov
push
adc
cwtl
cmc
xor
outsl
sbb
pop
inc
xchg
jb
lds
rorl
arpl
jo
pop
mov
shrb
imul
daa
cmpsb
sahf
stos
repz
sbb
jae
xorl
mov
int
shl
js
jbe
out
ret
repz
push
jmp
daa
jmp
loope
sbb
ss
int
repz
imulb
loope
mov
mov
inc
fstl
imul
movsb
loop
out
xor
mov
sub
dec
out
sbbb
je
in
repnz
sub
stos
add
mov
push
repz
ja
addr16
xchg
mov
sti
inc
filds
enter
mov
das
xor
ficoms
cmp
aaa
stc
xchg
xchg
imul
pop
jp
repnz
add
cwtl
in
pop
stc
sbb
sahf
add
clc
mov
out
jne
push
push
sbb
stos
in
out
add
push
es
lods
orl
fwait
dec
pop
js
push
test
jmp
es
into
rolb
iret
fldenv
mov
mov
sub
inc
xchg
cmp
nop
je
repnz
fmul
push
pop
addr16
xchg
inc
rcrb
push
int3
sbb
add
pop
pop
mov
xor
inc
int
leave
push
push
pop
adc
xor
jl
fnstenv
mov
inc
imul
int3
jne
pop
jno
pusha
lcall
fiadds
je
mov
pop
mov
add
xchg
dec
mov
in
lret
popa
xor
notb
xor
fs
add
inc
mov
xchg
mov
and
mov
adc
aad
gs
mov
xor
mov
push
insl
data16
arpl
js
push
mov
cmpsb
pop
lahf
bswap
cmp
xor
xor
xor
dec
fldt
cmp
xchg
addl
jp
stos
push
push
or
adcl
push
into
push
dec
int3
sbb
sarb
ret
jne
arpl
mov
sti
adc
cltd
sbb
mov
mov
sbb
out
and
jns
insb
ljmp
add
pop
mov
xor
cmp
push
stos
gs
aaa
xor
out
cmp
leave
xchg
lret
mov
div
jmp
jmp
inc
add
jge
pop
into
scas
pushf
inc
jne
sti
xchg
or
push
and
push
xchg
xor
iret
outsb
dec
inc
xchg
sub
sahf
loop
pusha
in
and
xchg
outsl
insb
subb
insl
lods
repnz
sub
xor
mov
int3
cwtl
mov
imulb
mov
ljmp
pop
movsb
mov
cs
imul
mov
push
gs
mov
cmovae
scas
lret
push
pop
xchg
mov
dec
mov
jno
lock
pop
lahf
push
in
pop
inc
in
and
inc
sbb
movl
push
enter
outsb
sub
and
push
mov
outsl
lds
mov
fstpl
cmp
mov
mov
cli
dec
cmp
sbb
rol
push
xor
aam
sbb
mov
pusha
popl
jbe
mov
in
sub
adc
xchg
xchg
lea
fdivrs
mov
adc
popa
sbb
inc
int
ja
sbb
jmp
push
sbb
movsl
fdiv
imul
jno
jbe
jno
or
dec
and
mov
test
xchg
jo
push
lds
pushf
push
pusha
sub
mov
jge
xchg
and
mov
fwait
daa
shrb
sub
and
stos
je
add
xchg
jmp
in
and
xor
pusha
and
push
imul
dec
imul
fwait
mov
lds
imul
into
sbb
xlat
ljmp
ss
adc
nop
and
outsb
push
xchg
pushf
out
out
in
mov
insb
cs
xor
jo
push
cmp
adc
hlt
out
cwtl
lds
out
fwait
adcb
mov
push
sahf
pop
cs
dec
lock
das
xchg
mov
mov
pop
add
dec
push
stc
cwtl
loop
mov
dec
orb
inc
ss
iret
pop
pop
je
mov
sub
lock
rolb
jb
inc
adc
jecxz
icebp
imul
pop
inc
sbb
add
out
sub
add
test
inc
pop
mov
add
and
mov
and
ffree
push
adc
mov
cltd
popa
out
pop
out
pop
xchg
xor
push
aaa
nop
xor
sbb
xor
xchg
icebp
imul
mov
pop
and
jmp
rclb
pop
pop
out
ret
and
inc
int
add
push
adc
mov
inc
mov
mov
je
xchg
pop
lret
xlat
out
aad
arpl
mov
out
or
lret
cld
lds
idivl
dec
sbb
gs
add
mov
xchg
jge
leave
push
jnp
sbb
out
cltd
notb
sub
or
jmp
jp
pop
ret
in
cld
pop
insb
dec
fwait
stos
in
int3
mov
adc
ret
cli
repz
adc
lods
leave
lcall
push
daa
ss
pop
icebp
push
nop
lock
jo
xchg
inc
mov
jge
stos
mul
sahf
pop
jmp
and
jae
jb
sub
inc
clc
xor
add
lea
pop
cmp
cmp
test
lds
mov
scas
sahf
add
fstpl
mov
inc
out
das
push
pop
mov
sbb
cmp
jmp
insb
and
push
pop
rcl
inc
andb
std
cmp
mov
mov
stc
lret
out
mov
lods
dec
rclb
hlt
jmp
dec
xchg
pop
xchg
test
cmp
aam
sbb
jnp
adc
xlat
call
popa
ss
dec
push
stos
xchg
test
jmp
mov
mov
sub
adc
mov
ljmp
stc
jecxz
dec
xchg
jg
xchg
call
stos
lret
call
je
lods
insb
mov
sub
xchg
loopne
xor
pop
push
cmpsl
xchg
dec
mov
aaa
pushf
out
rorb
fiadds
or
add
mov
mov
fisubrs
pop
or
out
pop
and
push
int3
and
push
xchg
arpl
xchg
sbb
in
lock
mov
fidivl
xchg
jl
xchg
mov
push
mov
add
test
jo
ljmp
out
in
mov
or
push
pop
mov
loop
scas
inc
pop
jae
mov
add
mov
jp
push
lds
mov
push
neg
movsb
outsb
aad
adc
loope
inc
push
add
stos
lods
pop
jge
xchg
loop
addr16
fstpl
ja
outsb
sub
cld
je
test
and
cltd
xchg
sbb
dec
je
stos
sub
pop
out
movsl
inc
cltd
or
outsl
add
xlat
nop
add
and
xchg
xor
xchg
mov
jl
repnz
repnz
in
xor
mov
in
dec
sbb
push
inc
mov
jb
push
leave
and
xchg
gs
dec
jnp
cmp
and
mul
dec
jp
mov
out
cs
rcll
pop
nop
lods
mov
lcall
jns
mov
pop
fiadds
fidivs
sub
xlat
loopne
cltd
std
cmpsb
mov
imul
push
test
les
mov
aaa
mov
jp
push
push
jb
add
testb
xlat
push
stc
leave
and
mov
gs
fidivrl
sub
jge
cs
mov
fisubrs
imul
cmp
push
jns
dec
cmp
mov
cmp
mov
sbb
jmp
dec
cmp
push
xor
int
and
fisubrs
rol
pop
rcrb
or
insb
dec
ror
add
lret
fistps
push
jns
jecxz
lods
mov
mov
popf
test
into
adc
jno
jmp
shl
sub
lods
mov
mov
jns
outsl
mov
fisubs
cmc
lcall
fdivp
xor
ljmp
sbb
out
in
xor
sbb
jbe
fwait
pop
dec
fs
cmc
add
xor
stc
jne
xor
sbb
test
sub
mov
push
ljmp
aam
fwait
or
repz
mov
xor
xchg
sbbb
imul
dec
out
push
push
push
rol
cmpsl
test
mov
pop
stos
addr16
push
fidivrl
in
or
fbstp
outsl
inc
mov
xor
xlat
cwtl
push
test
xchg
adc
push
enter
sub
push
dec
inc
push
mov
xlat
cmpsb
imul
and
sub
mov
push
xchg
mov
xchg
dec
in
pop
aas
shl
adc
test
xchg
ja
jo
aaa
into
stos
popf
leave
adc
cwtd
movsl
insl
jb
pushf
jne
inc
repnz
test
sbb
aaa
sbb
dec
mov
and
cwtl
xorb
stc
sub
push
sub
jl
movq
sahf
inc
jmp
mov
cld
jp
inc
fistl
jnp
jg
pop
idiv
cmpb
in
out
lock
pusha
in
jmp
pop
les
mov
ja
repnz
lods
xchg
clc
sub
xor
mov
sbb
mov
cmp
cld
adc
stos
pop
in
hlt
insl
xor
or
pop
addr16
push
push
addb
and
dec
mov
dec
icebp
push
sahf
cmpsb
dec
xchg
mov
outsl
adc
inc
pop
les
mov
xchg
ret
xchg
pop
push
insl
push
fidivrl
mov
jnp
fnstcw
xchg
mov
jbe
push
data16
popa
jbe
adc
dec
mov
sbb
xorb
nop
dec
jmp
aad
cltd
mov
test
bound
or
mov
sub
cld
mov
out
jmp
and
sub
or
and
mov
mov
roll
fiadds
or
scas
pop
aaa
add
stos
movl
push
mov
dec
sub
sahf
mov
add
mov
xor
jge
call
pop
scas
sub
mov
mov
js
adc
shr
int
sti
in
mov
cmp
xchg
sti
js
cwtl
rolb
movsb
sarb
imul
ret
cmpsl
mov
pop
test
int
cld
pop
ss
scas
inc
es
mov
cli
test
enter
jl,pt
imul
cmp
cmp
shr
hlt
cwtl
inc
dec
scas
sahf
mov
or
addr16
dec
xchg
mov
fwait
cmp
adc
ja
mov
hlt
rcll
xchg
jbe
cwtl
cwtl
cmp
ficompl
scas
data16
xchg
push
lock
or
push
incb
out
sub
dec
lock
pop
fbstp
jns
pop
dec
xor
int
push
and
enter
test
negb
lock
pop
push
sbb
or
or
fsubr
pop
gs
aam
faddl
push
jnp
test
pusha
and
inc
mov
into
data16
cmp
or
aam
rcll
pop
out
cmp
fdivl
je
ljmp
out
jb
fisttpl
iret
or
adc
adc
jl
xchg
pop
xchg
push
ds
sar
mov
push
fstp
nop
bound
push
in
jge
jmp
jp
cmp
mov
add
fstl
add
push
imull
cvtps2pd
cmp
jg
enter
das
push
scas
xchg
jle
mov
sahf
adc
mov
cmpsl
sub
test
ret
lahf
sub
ja
xchg
dec
sbb
sti
addl
test
out
inc
lock
or
and
daa
pop
jmp
sub
testl
xchg
je
inc
cmpl
inc
xor
push
mov
xor
jp
popa
insl
adc
and
xlat
mov
test
loop
jb
mov
push
arpl
ja
push
sbb
test
add
sub
vcvtpd2dq
fldt
adcb
jae
and
mov
ret
fcmovu
cmp
mov
fs
pop
xor
mov
shlb
scas
cli
in
xchg
into
jecxz
and
push
jns
fsts
lret
iret
sti
filds
sbb
into
inc
push
lcall
pop
lret
jns
shrb
xor
xchg
xchg
push
imul
stos
mov
push
pop
and
mov
cmp
cmc
mov
lea
int
xlat
jg
outsl
xchg
rcrb
mov
dec
lret
mov
jnp
mov
pop
dec
inc
ljmp
sub
cltd
das
testb
fcomp
jle
or
or
sub
sub
scas
and
or
rol
hlt
cmp
cmc
bound
repnz
nop
mov
and
jmp
pop
cmp
mov
jbe
jp
inc
pushl
enter
xlat
iret
fidivrs
adc
cmp
cli
and
mov
test
in
leave
rorb
scas
fsubl
mov
in
or
pop
lahf
int3
arpl
jp
or
sahf
jmp
sbb
fstl
push
add
insb
out
out
and
push
xor
dec
sub
mov
sbb
rclb
addr16
cmp
rolb
incl
outsl
inc
mov
repnz
jno
inc
add
cs
xor
mov
pop
les
cmpsb
ficoms
in
xor
dec
mov
test
mov
sub
mov
stos
mov
xor
insb
shl
popa
mov
cwtl
or
pop
fs
mov
das
imul
test
mov
mov
cmp
rorl
outsb
lock
inc
jne
cli
jecxz
adc
jbe
add
imul
iret
and
xchg
and
add
pop
and
adc
mov
push
ljmp
lods
sub
int
or
fistps
into
cmpsl
popf
test
jl
lcall
sbb
test
dec
sahf
mov
mov
or
cmpsb
mov
adc
mov
imul
mov
sbb
or
jnp
adc
push
adc
and
cmc
mov
pushf
fcoms
pop
movsl
mov
js
imul
and
loopne
mov
je
adc
inc
scas
mov
stos
sub
out
mov
test
jl
pop
sub
mov
ret
add
mov
add
lds
mov
int3
aas
test
aad
das
mov
out
jns
jge
ds
test
lret
out
jge
outsl
pop
xchg
pop
sub
sbb
sbb
leave
and
or
sahf
ljmp
xchg
lock
imull
xor
cld
mov
and
push
pop
sub
mov
xor
mov
jp
in
add
fnsave
stos
dec
ds
ret
xchg
sub
mov
sub
mov
mov
inc
fsubrl
mov
movsl
mov
mov
frndint
and
cli
jl
lcall
xor
sub
pop
xchg
and
add
iret
xchg
adc
xor
lret
aas
repz
pop
repz
push
xchg
xor
jp
push
test
jp
mov
mov
cld
sti
and
andl
sub
movsb
loope
cs
pop
adc
divb
xchg
cmp
loope
xlat
ficompl
lea
jns
lea
pop
sbb
add
out
sbb
fdivs
jg
out
nop
sub
jno
add
sar
ret
data16
test
jecxz
mov
inc
pop
jno
xchg
aas
fidivrl
les
push
cmp
add
pop
jbe
mov
js
adc
cli
xor
aas
mov
icebp
in
jns
dec
frstor
call
mov
pop
shrl
dec
mov
lods
aaa
sti
xorb
mov
push
clc
gs
stos
clc
mov
ficoml
xchg
add
notl
and
and
mov
cld
gs
repz
jbe
hlt
in
adc
fmul
xor
fxam
push
pop
mov
pop
in
test
mov
dec
fsubl
mov
pop
cmp
jl
mov
fdivrs
imul
cwtl
gs
das
dec
outsl
and
test
add
xchg
mov
lret
sbb
inc
sbb
or
lock
in
lret
mov
add
mov
hlt
mov
cmpsl
in
sub
dec
jbe
icebp
adc
xchg
daa
jne
jle
in
cmp
cmpsb
ja
int
lods
add
inc
imul
mov
lds
das
mov
cmp
pusha
fwait
and
mov
sbb
xor
mov
xorb
popf
fisubs
loopne
adc
les
lret
inc
test
xchg
add
sti
ja
mov
jns
dec
xor
sbb
adc
xchg
mov
sbb
adc
fucomp
lods
mov
jno
inc
loop
mov
ljmp
leave
pop
push
pop
pop
sub
mov
inc
xchg
movsb
bound
push
insb
mov
daa
popf
push
in
in
fsts
and
mov
fwait
ret
idiv
inc
xchg
imul
cmpsl
iret
push
outsl
sahf
mov
or
popa
leave
repnz
mov
shrl
mov
rcrb
iret
subb
nop
arpl
xchg
loop
mov
xchg
lock
push
jo
sbb
cli
inc
sub
pop
out
inc
mov
mov
fidivs
jmp
mov
xor
sbb
ret
ljmp
mov
stos
ret
int3
adcb
lret
rorl
ficomps
mov
sub
cmp
enter
jecxz
cli
or
jne
scas
mov
lds
dec
xchg
sbb
notl
hlt
pop
lods
xor
gs
sbb
lret
gs
cmpsb
inc
or
dec
inc
cmp
cmpb
add
fs
xchg
jge
cmp
push
in
ret
faddl
pusha
and
dec
mov
jb
cltd
mov
jno
jb
xchg
push
jne
jecxz
push
jmp
xchg
xlat
inc
or
lea
cmp
out
out
mov
fdivl
lret
stos
lods
imul
and
les
fs
mov
pop
filds
sbb
cmpsb
js
adc
mov
cwtl
jg
and
lods
sarb
push
aas
mov
pusha
mov
into
xor
loop
hlt
jno
lock
jmp
mov
jnp
ds
repz
int
aad
mov
sub
push
decb
mov
les
das
lret
into
pop
inc
out
inc
cwtl
xlat
test
sub
push
dec
and
loopne
out
pushf
adc
leave
loop
aam
pop
or
or
mov
mov
dec
clc
nop
fwait
mov
xor
out
lcall
push
inc
jle
mov
xchg
aas
pop
push
mov
idiv
xor
nop
adc
xlat
lock
add
pop
mov
test
loop
dec
inc
lock
stos
fadd
xchg
shll
pop
mov
dec
adc
testb
test
pop
mov
pop
push
stos
jne
int
mov
dec
fs
mov
mov
or
loopne
cmp
mov
fsubrl
lds
xor
mov
loope
xchg
mov
mov
test
mov
je
shl
lock
dec
fistps
or
movsb
or
inc
cmp
aaa
fs
sbb
arpl
sub
pop
cmp
out
stc
data16
dec
pop
das
xor
push
bnd
fdivrp
push
jno
dec
repz
or
lret
faddl
mov
dec
fs
lods
mov
lds
leave
movsl
add
mov
pop
movsb
data16
cmpsb
cmp
in
inc
fmul
adc
scas
incl
pop
fwait
aas
jae
pop
mov
int3
inc
or
flds
push
mov
and
add
jg
add
push
mov
stos
lods
push
or
cmp
lock
and
sbb
js,pn
inc
mov
xchg
test
movsb
adc
push
jg
jno
mov
jg
mov
push
sub
add
sub
pop
jne
pop
ret
gs
inc
dec
leave
xchg
testb
push
mov
push
pusha
and
imull
push
je
push
filds
in
repz
out
out
jmp
out
sub
out
sub
lahf
jae
cmp
sub
inc
lahf
mov
iret
adc
mov
dec
jg
push
mov
lcall
adc
xor
xor
insl
pop
dec
lods
xchg
xchg
out
lcall
mov
dec
ja
add
popa
or
sub
addr16
ljmp
dec
mov
icebp
sub
and
outsl
or
sbb
xchg
pop
movnti
int
sub
push
pop
or
pop
icebp
cmp
movsl
mov
jge
fsubp
shl
xor
movsl
push
push
push
aam
movsl
adc
jns
adc
addr16
test
call
pextrw
mov
xor
stos
inc
xchg
fs
or
mov
mov
and
mov
push
loopne
cmpsl
std
jg
ss
jns
data16
dec
xchg
sarl
out
lcall
ret
jo
sub
fmull
add
aam
xchg
and
xchg
cmp
push
ret
sub
mov
mov
repz
xor
lods
xchg
push
pop
jo
sbb
movl
xorl
cmp
xor
mov
xchg
add
cmp
test
pand
xor
mov
gs
xchg
mov
or
adc
mov
xchg
pop
in
or
jecxz
xchg
cmp
xlat
mov
cmp
loope
jp
mov
mov
mov
xchg
push
jbe
and
in
idivl
push
pop
jno
idivl
shll
scas
lea
fidivl
out
mov
fldpi
mov
inc
in
test
cmp
mov
in
push
xchg
sbb
xor
or
clc
jl
xchg
mov
int3
jecxz
aaa
mov
sbb
or
testl
fs
into
notl
addr16
xchg
test
test
je
imul
dec
ljmp
arpl
orl
sbb
dec
cmp
pop
mov
xchg
cmp
sbb
fldl
icebp
dec
jecxz
loope
pop
xchg
or
leave
add
xor
mov
sahf
xchg
add
jle
gs
pop
lret
push
pushf
push
imull
cld
pop
pusha
pop
xlat
testb
aaa
sub
movsl
xchg
stos
push
cmpsb
out
cld
iret
jnp
mov
xor
and
je
stos
push
lods
aaa
pop
cltd
je
add
mov
push
and
movsb
or
lea
mov
dec
mov
mov
jg
cmp
scas
lcall
ret
xchg
fcoml
out
cs
lods
test
insl
stos
mov
out
enter
or
sbb
mov
in
jae
bound
push
out
or
out
sbb
outsb
fisttpl
loopne
adc
pop
xchg
lock
pop
dec
xor
sarb
xor
std
ja
push
into
cmpl
push
repz
adc
xchg
mov
mov
xor
xor
and
pop
leave
jb
in
sarb
mov
xchg
push
add
dec
fdivl
sbb
adc
mov
push
mov
xchg
ljmp
rcrl
ror
jle
lods
les
and
stos
ds
and
insb
xchg
pop
test
mov
inc
mov
lds
mov
xchg
dec
jge
fdivrs
cwtl
pop
mov
mov
sub
movsl
adc
push
icebp
cmp
js
or
and
sbb
mov
or
dec
data16
push
cmpsl
out
sub
cmp
repnz
nop
gs
orl
mov
inc
sti
bnd
mov
mov
iret
and
mov
sti
jnp
sub
cmp
cmp
and
jl
pop
inc
jg
push
mov
and
pop
cmp
loop
pop
lcall
or
sahf
cld
cmpsl
mov
add
push
aam
inc
ljmp
dec
fistl
inc
and
pop
cli
cld
ds
or
cmc
test
push
jg
sub
xor
dec
add
push
mov
mov
mov
mov
icebp
jns
test
cmp
push
dec
pop
jnp
repnz
fs
push
in
sub
xchg
sub
push
sbb
add
fdivrl
daa
sub
or
outsb
ja
stos
mov
cmp
mov
lcall
cmp
sti
inc
xor
add
sub
inc
fstps
mov
cmp
lods
test
inc
mov
insl
and
pop
cmp
push
add
mov
mov
aad
scas
dec
lahf
sbb
out
rcrl
sbb
movsb
ficoms
adc
jnp
mov
std
popa
or
outsb
mov
jmp
and
pop
inc
incl
aad
lcall
mov
fwait
scas
inc
mov
rcrl
lds
fistpl
adc
pop
dec
sti
jbe
icebp
nop
dec
faddl
lret
push
sbb
ja
mov
push
sbb
xchg
adc
rcrl
xchg
lods
xchg
ja
or
pop
jno
push
mov
pop
sbb
mov
fisubrl
hlt
lea
loope
inc
imul
test
les
dec
jg
ret
cmp
add
shrb
or
call
xchg
jge
stos
push
imul
push
pop
shrl
dec
jae
cmpl
mov
adc
out
push
dec
jno
outsl
adc
sbb
rcr
jo
sahf
dec
push
in
cltd
jb
jg
leave
es
cltd
aaa
fnstenv
fisubrl
iret
mov
bound
pop
jmp
jcxz
nop
scas
cmp
scas
fnstenv
pop
mov
cmp
mov
xchg
fisttps
ljmp
or
sbb
xchg
push
popf
add
inc
clc
inc
xor
cmc
mov
push
xchg
js
xor
jl
outsb
imul
mov
push
jae
addr16
aaa
iret
out
aam
jb
fscale
insl
insl
jnp
and
fidivrs
inc
push
in
sbb
mov
xchg
test
mov
fmuls
jmp
mov
jge
sbb
dec
and
mov
and
out
push
cwtl
cwtl
jg
jl
sub
jl
and
shlb
or
gs
or
cwtl
popf
fsubs
std
fisubrs
xchg
jl
pop
pop
fcmovbe
sbb
xchg
xor
pop
push
pop
add
mov
in
lock
and
ljmp
pushf
xor
and
daa
out
daa
adc
out
or
sbb
sub
mov
mov
imul
ja
in
jns
mov
jge
andl
loop
jp
fadd
xor
mov
or
lods
stos
mov
mov
cmc
push
imul
cmp
bound
cltd
sub
cltd
ljmp
push
into
cmp
xor
xor
cltd
sahf
in
hlt
fsubrs
ljmp
lods
stc
or
insb
inc
push
dec
fidivrl
inc
iret
xchg
xor
popf
xor
cs
mov
jge
pusha
out
mov
je
push
sub
xchg
mov
mov
or
pop
loop
pop
add
xor
and
sti
ss
mov
nop
lods
inc
ja
sarl
stc
mov
rcrb
aad
lods
cmpsb
pop
scas
dec
loope
add
mov
aas
popf
push
pop
push
cmp
rorl
scas
cwtl
xor
pushf
add
testl
outsb
jbe
pop
mov
pop
int
sub
xchg
jle
mov
pop
pop
mov
or
dec
sbb
lret
jmp
in
or
add
pop
add
sub
test
pushf
sbb
adcb
adc
pop
adc
add
shlb
lods
call
scas
jecxz
jne
out
inc
xchg
dec
inc
shlb
or
jge
mov
rolb
repnz
inc
lock
cmpsl
bound
stos
rcll
repnz
insb
mov
dec
ljmp
xor
xor
sbb
mov
int
jbe
fwait
icebp
jle
outsl
pop
cli
lea
or
pop
ret
pop
mov
in
or
adcl
fisubrl
bound
fiadds
xchg
icebp
idiv
cmpsl
inc
test
ss
std
lods
cmpsb
push
iret
lahf
negb
out
ljmp
adc
sub
push
daa
mov
inc
aam
pop
in
and
jns
jl
lahf
addl
dec
sbb
push
popa
mov
in
sbb
ljmp
push
dec
pop
gs
and
imul
lea
jo
sbb
xchg
mov
mov
mov
add
fmull
xchg
push
movsl
mov
js
int
loopne
les
jae
adc
inc
fnstenv
mov
pusha
add
cmp
jle
jnp
mov
xor
rolb
rcrl
sahf
mov
nop
dec
fnstsw
es
mov
jnp
xchg
subl
fwait
cmp
test
push
jo
lea
leave
push
xor
adc
test
and
daa
sti
xchg
idivl
jl
fwait
repnz
or
aas
nop
int
xchg
cmp
pop
sub
pop
aad
test
jg
clc
iret
or
xchg
xchg
and
scas
sbbb
xor
inc
or
inc
pop
push
xchg
xchg
sbb
xor
rolb
jbe
push
adc
cli
add
das
cmpb
lcall
jo
movl
xor
inc
outsb
xchg
js
out
mov
movsl
call
xchg
jge
mov
sub
inc
fmuls
jbe
or
cld
push
sub
lods
mov
outsl
mov
sahf
lcall
sbb
pop
mov
adc
addr16
pop
sbb
adc
inc
mov
dec
loope
loopne
cwtl
sub
mov
sarb
cmp
nop
cmpsb
and
stos
in
mov
cmpsb
pop
cmp
pushf
ficoml
les
fs
insb
jno
imul
jmp
scas
and
and
jmp
push
sub
movsb
cmp
xorb
popf
imull
pop
fwait
les
fisubrs
sahf
and
stos
sub
adc
mov
mov
jp
jnp
ds
xlat
neg
pushf
scas
nop
cmp
push
fcmovnbe
loopne
loopne
sub
xor
lret
and
enter
int
inc
xchg
mov
xchg
add
mov
jg
rorl
fdivs
fstpl
mov
jno
mov
ds
pop
insb
jg
rcll
ret
sbb
mov
add
in
cli
adc
sub
ror
mov
ret
call
add
arpl
scas
dec
or
ret
test
xlat
or
cld
iret
or
mov
mov
das
js
inc
iret
rsm
add
movsb
sub
in
sbbb
cmp
push
mov
js
mov
movsb
loopne
cwtl
jns
adc
adc
ret
stos
xchg
add
jnp
addr16
cmp
jnp
mov
adcb
dec
mov
sbb
mov
inc
sub
mov
cmp
mov
insb
iret
adc
xor
mov
lahf
adc
out
pop
addr16
mov
mov
mov
rcrl
in
loope
mov
cmpsb
ret
lock
clc
ds
dec
ss
rolb
dec
sbb
or
in
cmp
test
in
sbb
sbb
cmp
adc
pop
sub
mov
xor
jmp
mov
sti
lock
lret
cwtl
jecxz
push
sbb
dec
pop
push
dec
push
mov
sub
jl
inc
stos
test
jnp
shlb
add
mulb
movsl
cmc
push
rcrb
movsl
cmp
addr16
mov
and
sub
into
and
lahf
inc
cmp
sbb
mov
les
out
pop
xchg
lahf
dec
mov
insb
arpl
dec
leave
xchg
movsl
mov
sbb
mov
add
and
sbbb
or
cmp
sub
lcall
xchg
arpl
inc
mov
ret
push
push
test
pop
sahf
inc
loop
and
push
mov
addl
outsl
lahf
push
decb
mov
jecxz
mov
mov
into
hlt
gs
lds
fs
mov
outsl
jmp
jmp
adc
enter
insl
in
push
sub
call
pushf
inc
mov
mov
push
dec
bound
xlat
mov
or
fisttpl
lcall
stc
scas
pop
icebp
and
push
xor
sbb
xor
and
icebp
sahf
fldenv
xchg
adc
js
mov
fndisi(8087
and
cwtl
outsl
hlt
fstl
aas
push
push
adc
xchg
cmpsb
push
sti
insb
dec
jp
cld
adc
outsl
mov
je
test
cwtl
cwtl
hlt
jae
sub
test
adc
mov
push
aas
mov
cmc
dec
lods
out
movsl
or
mov
ret
add
movsb
shrb
add
jp
and
pop
es
jne
jnp
xchg
lock
xchg
out
sbb
pop
add
jno
test
sub
lret
mov
mov
loope
jl
adc
sub
mov
sbb
adc
fistpll
cs
ret
ret
dec
jae
add
or
push
mov
mov
movsb
shlb
mov
arpl
mov
pop
adc
ljmp
xchg
testb
xchg
int
stc
test
adc
add
mov
dec
jb
test
or
xor
movsb
sahf
or
xor
mov
je
dec
punpckhwd
mov
repnz
or
aaa
inc
pushf
jbe
mov
js
mov
out
xlat
sarb
test
dec
inc
and
adcb
xorl
dec
push
inc
xor
mov
xor
push
dec
sbb
jle
jmp
inc
jmp
int3
test
out
or
push
push
shlb
pop
dec
dec
pop
in
mov
or
adc
mov
loopne
jnp
jno
mov
je
clc
aaa
popf
push
pop
push
add
jg
jge
lret
sbb
imul
pop
repnz
mov
sbb
mov
out
shrb
jl
sahf
out
jbe
iret
push
mov
jns
cmp
idivl
out
int3
addr16
rol
mov
cltd
adc
rcr
push
dec
add
mov
pop
insb
dec
pop
test
btc
mov
xchg
and
sub
adc
loop
es
and
xchg
push
jns
dec
xchg
data16
int3
sbb
mov
pop
push
adc
sub
and
fs
arpl
dec
xchg
jno
lea
lahf
stc
fadd
pop
fnstenv
mov
sbb
pusha
ret
jns
mov
push
lods
sub
lds
adc
inc
sub
mov
xlat
in
pop
xor
or
shrb
int3
fnstcw
mov
cld
mov
mov
jge
movsl
cs
daa
pusha
add
xlat
cmp
les
cmp
and
lret
lock
mov
out
xor
cmp
mov
inc
mov
shrl
inc
cmp
xor
mov
int
leave
enter
mov
les
sbb
pop
aas
push
xor
pop
push
dec
dec
add
in
dec
dec
ret
adc
jns
jns
and
add
shlb
pop
nop
repnz
adc
adc
repz
mov
stc
sbb
mov
push
cwtl
adc
lds
lea
shrl
pop
add
dec
sub
insb
inc
loope
xchg
add
fs
and
aam
ss
jae
push
enter
inc
ret
inc
mov
sbb
imul
mov
mov
mov
push
xchg
nop
ds
mov
mov
call
outsl
or
mov
cmp
loopne
dec
jno
xor
insb
inc
es
and
jo
dec
push
lcall
push
mov
int3
imul
icebp
cs
mov
lret
sub
add
aad
sarl
int
je
pop
mov
lea
shlb
std
xchg
push
arpl
inc
cli
dec
push
mov
jne
push
xchg
scas
xlat
jmp
inc
lods
stos
pop
sub
movsb
gs
repnz
adc
lods
out
jl
in
or
das
movsb
xor
les
outsb
aam
push
mov
imul
nop
or
jmp
popa
mov
jl
insl
jbe
mov
incb
sub
lods
dec
xor
sti
pop
imul
sbb
xchg
fdivp
daa
imul
adc
fidivrl
xchg
pop
dec
dec
inc
mov
lret
pop
ret
or
loope
je
sbb
xor
inc
and
cmp
or
push
and
cmp
mov
ds
ljmp
stos
adc
bound
sbb
and
lea
into
add
push
adc
js
cmp
aaa
dec
out
loope
inc
mov
mov
push
andnps
daa
push
and
jbe
mov
jmp
rcrb
jl
pop
lds
lock
pop
gs
sbb
inc
aas
orb
push
fs
enter
daa
inc
xor
lcall
shr
add
xchg
mov
inc
ljmp
leave
jnp
xchg
mov
and
or
fucom
rclb
cs
jo
fstpt
inc
jp
adc
data16
cmp
pop
cwtl
jge
sub
mov
xor
mov
loop
test
packssdw
movsb
mov
jne
xorb
add
and
jns
rclb
fildl
adc
push
xchg
int
iret
xchg
pusha
xor
mov
and
dec
lods
aaa
int
test
repz
cwtl
rorb
ret
fldl
pusha
stos
fwait
ja
out
xchg
jecxz
enter
jae
ds
xor
jo
xorl
clc
sbb
xchg
jmp
push
mov
or
cmp
dec
jno
rep
jns
sbb
in
push
push
sub
mov
pop
std
jne
pop
test
mov
adc
dec
ds
adc
iret
iret
cmp
scas
test
adc
out
inc
int3
arpl
mov
dec
and
and
leave
mov
movsl
das
mov
rcrb
cwtl
aaa
mov
repz
pop
push
xchg
sub
push
ret
pop
jnp
loop
stos
or
or
in
cmc
mov
sub
out
add
inc
cltd
jbe
test
or
jmp
and
je
cltd
sbb
sbb
add
mov
sub
js
push
pop
cli
stos
jno
mov
mov
fildll
pop
repnz
inc
test
sti
xchg
pop
repz
sti
mov
ljmp
inc
outsb
fildl
stos
xchg
sub
shlb
stos
daa
add
mov
lods
fidivs
mov
fisubs
pop
jae
dec
or
inc
aas
mov
push
sub
movsl
xlat
je
xchg
dec
stc
or
and
mov
icebp
fidivrs
xchg
fdivl
cltd
xchg
jp
mov
data16
aam
cmpsb
mov
xchg
pushf
sub
dec
dec
mulb
pop
sub
and
mov
fwait
cli
jbe
sub
add
fwait
pop
cmp
notb
jno
mov
lahf
inc
jb
repz
inc
aad
aam
cld
or
and
loopne
insb
pusha
mov
pushf
cwtl
cltd
popf
jg
scas
test
inc
pusha
shll
decl
push
dec
aam
ss
jnp
cmpsl
aam
loopne
aam
cmp
pop
adc
and
call
mov
daa
sub
popa
adc
cmp
fistl
xchg
fdivl
mov
dec
cwtl
stos
rorb
and
lea
scas
mov
jg
ljmp
idiv
jb
dec
fistpll
insb
xchg
mov
ficoml
inc
dec
xchg
sub
adc
sbb
test
jg
aas
cmp
cmpsb
push
faddl
adc
xor
andl
test
imul
adcl
xlat
aaa
jp
push
or
int
andl
jns
mov
push
repnz
xor
cs
enter
ret
pop
inc
gs
aam
mov
pop
inc
lock
je
scas
xchg
push
adc
lcall
in
and
arpl
cmp
adc
bswap
mov
les
push
mov
sub
sbb
add
es
cmpsb
aas
dec
adcb
sub
outsb
jae
jp
pop
xchg
or
pusha
push
pop
dec
shrb
mov
mov
gs
lods
out
pop
shll
in
lods
dec
jp
addr16
les
mov
sub
jno
adc
sub
mov
dec
xchg
cmp
ret
push
jns
mov
bound
lahf
repnz
mov
or
inc
push
inc
pop
push
bound
hlt
fstl
out
xlat
pop
sbb
scas
divb
jg
mov
insb
push
subb
pop
orb
imul
in
lods
loope
mov
cmp
insl
push
sub
push
add
cmp
sahf
fmul
aad
jp
imul
cmpsb
add
ss
xchg
aam
movl
int
pop
cmp
adc
mov
sub
popa
xchg
jle
jg
outsl
fisttpl
je
sbb
ja
mov
mov
leave
lahf
leave
fisubrl
jae
mov
jmp
jg
cs
loopne
aam
adc
adc
rcrb
test
sbb
fldcw
xchg
cli
xchg
push
push
rorl
hlt
lahf
sbbl
ljmp
je
scas
cmp
lods
xchg
aas
push
adc
dec
test
push
jae
lea
push
arpl
inc
add
mov
int
xchg
repnz
jbe
and
mov
adc
sti
fsubrs
fisubrs
adcl
sbb
daa
lret
adc
cmc
cwtl
ret
add
repz
les
xor
addr16
ljmp
sub
xor
ja
sahf
jmp
repnz
iret
outsl
add
lock
out
aas
ret
les
cmc
rcrl
jns
push
mov
test
inc
subb
repz
push
xchg
idivb
or
sub
arpl
jns
mov
xchg
into
sbb
push
mov
lods
fs
inc
xorb
cmpsb
xor
jmp
pop
jle
push
mov
stos
sub
sub
add
xchg
ja
adc
mov
dec
decb
popf
dec
rcrl
jg
inc
or
popa
pop
lds
loope
scas
aam
std
mov
and
shll
flds
push
pop
pop
pop
mov
insb
inc
lcall
adc
or
jecxz
jg
pushf
inc
jb
pop
aas
add
jge
sarl
clc
int3
or
inc
dec
lods
cmpb
cs
repnz
mull
cwtl
rcrl
pop
lcall
mov
push
or
cli
icebp
pushf
sub
lret
orl
loope
stc
shl
dec
mov
sub
xor
dec
inc
test
xchg
ret
or
stos
in
ss
lea
test
addr16
xor
lock
ficoml
jo
xchg
pop
sub
pop
aaa
cmpsb
sbb
test
mov
inc
test
daa
sbb
inc
cmp
jnp
inc
adc
add
frstor
pop
or
imul
movsb
repz
fst
mov
scas
xchg
jmp
sub
and
adc
jle
enter
negl
or
call
and
xchg
pop
push
test
dec
add
sbb
fisubrs
movsb
jle
xlat
xchg
sbb
andb
mov
rcrl
int
jg
repnz
ds
pop
mov
push
arpl
cmp
sbb
pop
inc
bound
aas
dec
sub
push
inc
xchg
and
stc
jle
inc
cmp
pop
push
inc
test
push
cmp
sbb
mov
mov
in
xlat
mov
mov
cmp
xchg
mov
add
jmp
mov
repz
mov
stos
scas
scas
stos
packsswb
xor
or
cmp
das
sub
ret
pop
push
popf
dec
mov
rdpmc
ds
repz
sbb
rol
pushf
xorb
adc
sub
dec
cli
jno
sbb
jmp
mov
lods
xor
fidivrl
popa
mov
fwait
test
lret
cwtl
mov
cmp
lds
adc
clc
jmp
push
outsl
repz
sbb
bound
out
test
xchg
ljmp
and
push
ficoms
rorb
in
jmp
inc
movsb
jge
shr
sub
lahf
cli
in
pop
or
scas
lods
loop
mov
xor
mov
sub
push
or
jae
cmp
jns
inc
in
cmp
xor
inc
xor
int
mov
jecxz
jns
ja
xor
test
cmp
xchg
std
cmp
cs
scas
xor
mov
lods
pop
jno
sbb
cmc
imul
hlt
sub
lods
repnz
loope
ror
repnz
mov
fistpll
push
scas
cmp
add
jmp
mov
pop
sbb
sbb
bound
sbb
les
push
cs
pop
insb
test
pop
xor
jp
or
arpl
jmp
or
inc
sbb
ret
xchg
stc
pusha
add
lcall
push
in
pop
aad
shr
incb
jnp
cld
jle
fistpll
leave
sub
jne
push
sbb
mov
jne
xor
mov
push
std
rcrl
adc
cmpl
in
jmp
fdecstp
add
jle
mov
xor
jbe
xor
lahf
ljmp
lock
lea
popa
clc
mov
add
adc
push
add
mov
hlt
test
popa
loop
mov
and
add
jnp
inc
sub
pushw
sarl
pop
out
movsl
xchg
sub
lds
mov
shrb
xlat
and
dec
clc
mov
ss
cmp
in
cli
loopne
call
pop
in
rcrb
xor
add
mov
xor
mov
add
xor
loope
push
dec
push
data16
or
xchg
xchg
jp
cmp
jecxz
adc
or
popa
andb
loop
push
cmpsb
xchg
and
jmp
and
add
dec
fmul
fs
movsb
and
pop
jle
sarb
rorl
jp
lock
add
cwtl
adc
xchg
dec
sbb
enter
call
fstpt
daa
push
add
test
dec
mov
push
mov
or
lret
mov
movl
das
cwtl
pop
cltd
ds
inc
fistl
or
addl
imul
push
push
ret
call
cmpsb
rcrl
out
cwtl
inc
push
dec
inc
add
call
das
xor
and
push
mov
inc
ret
inc
mov
es
cmp
sbb
sbb
sahf
movsb
push
int3
mov
inc
jb
cmp
fwait
add
cltd
mov
stos
lock
and
sbb
mov
inc
and
add
std
clc
xchg
lahf
int
cmp
cmp
cmp
add
icebp
add
inc
fcomps
xchg
and
lock
insl
xor
push
push
mov
sub
popf
xchg
mov
je
pop
mov
data16
aad
lret
push
daa
lock
xor
or
rol
cmp
test
ja
cmp
dec
jmp
mov
mov
imul
dec
inc
jmp
sbb
scas
inc
pop
push
xchg
dec
jne
xor
mov
xor
cmp
jmp
dec
jl
fidivrl
sahf
sub
add
iret
loopne
lea
lret
adc
push
repnz
pop
sbb
repnz
pop
push
and
cs
add
cmpsb
xchg
xor
or
pop
das
add
sbb
stc
ret
test
call
jo
lret
dec
inc
mov
mov
pop
daa
sub
cmp
and
mov
icebp
mov
lea
icebp
mov
ljmp
orl
fcoms
cmp
sbb
aas
xchg
aas
or
mov
scas
pop
ret
mov
xchg
pushf
jo
mulb
pop
mov
fidivrl
movsb
rcl
cmpsb
and
xor
adc
jo
adc
adc
leave
in
lcall
fsts
je
jo
dec
xlat
pop
test
mov
xchg
nop
xchg
out
xlat
mov
xchg
adc
dec
stos
xchg
sub
fdivr
movsb
inc
jle
int3
insl
and
mov
pusha
mov
fisubl
xor
in
or
jle
or
test
sbb
or
jne
test
nop
scas
or
push
aam
adc
dec
xchg
adc
jno
mov
int3
push
inc
mov
clc
shrb
mov
inc
jecxz
jge
ss
arpl
sub
lods
sti
adc
in
jnp
dec
pop
and
clc
dec
fs
insb
frndint
push
mov
mov
cmp
es
clc
shrb
repz
shr
movsl
jnp
sahf
call
mov
and
lods
pop
fs
push
jge
out
xchg
data16
mov
cmp
dec
push
sub
sub
rolb
rolb
subl
jno
test
jp
shlb
movsb
xor
bound
ja
mov
pop
std
lds
sub
out
rcrb
push
enter
lcall
aas
adc
and
jg
xchg
std
or
xor
and
xor
insb
mov
or
pushf
daa
cmpsb
icebp
mov
or
iret
in
sub
pop
mov
adc
les
mov
add
cmp
jge
xor
scas
sub
data16
and
cltd
test
xor
jns
cmpsb
lret
inc
std
fstps
inc
xor
insl
test
inc
inc
in
jmp
movsl
stos
push
repz
cmc
or
icebp
mov
pop
push
push
movsb
mov
daa
insl
arpl
or
and
mov
cmpsl
push
repnz
les
xlat
mov
or
dec
push
add
test
aad
push
dec
inc
add
mov
dec
aas
jnp
lods
or
adc
xchg
fidivrl
mov
xlat
pop
jp
jge
pop
jns
push
dec
cmp
sub
cli
scas
xchg
or
jb
push
mov
add
jp
sub
push
or
pop
cmp
fs
mov
lods
push
movups
mov
cwtl
aas
mov
mov
je
lret
stc
jge
fnstcw
sub
fiadds
repnz
sbb
cmc
aad
pop
sbb
and
jg
push
sub
or
jne
es
push
jle
testb
ret
inc
inc
ret
xor
xchg
stos
sub
stc
or
xor
and
test
fdivl
jle
arpl
lret
pop
out
and
or
icebp
test
cli
xor
or
fimull
jle
push
scas
mov
iret
adc
add
mov
mov
and
push
jno
xor
sahf
adcl
cmc
dec
pusha
pop
lods
pop
imul
in
das
imul
xchg
push
jae
movsb
pop
es
clc
pop
push
sub
je
mov
mov
push
add
jbe
in
jnp
test
cld
xchg
xchg
imul
cwtl
and
loopne
test
fadd
sub
sbb
or
xchg
jle
jnp
inc
cmp
cmpl
adc
xlat
sarb
xlat
mov
scas
rorl
in
imul
jno
push
push
sub
bound
pop
inc
out
test
scas
enter
mov
push
js
push
push
pop
or
outsl
fidivrl
sub
push
jns
sub
sbb
mov
int
gs
ja
push
jmp
push
jmp
dec
hlt
not
leave
fadds
push
int
mov
mov
and
xor
push
xchg
push
ficoms
adc
sbb
fwait
dec
sub
jecxz
ror
test
jmp
cs
mov
cli
push
neg
cmp
movsb
icebp
fldcw
pop
sbb
jns
shlb
dec
movsl
shll
push
sbb
adc
push
jns
cmc
test
add
scas
pop
jo
mov
stos
xchg
popf
push
mov
jne
pop
scas
fidivrl
cmp
cltd
sarl
aad
xchg
aam
and
xchg
dec
mov
shl
lahf
mov
cmp
and
inc
inc
push
movsb
fistpll
cld
jmp
pop
lea
mov
stos
xor
cmpsb
cmpsb
test
push
aaa
inc
pop
rcrl
sahf
dec
popa
inc
ficomps
mov
movsb
outsb
dec
sahf
jns
pop
sbb
or
xor
fiaddl
dec
xor
inc
sbb
fwait
shrb
sarb
inc
imul
add
sbb
cmp
lcall
mov
cmpsb
jnp
mov
out
arpl
in
in
push
shll
test
aaa
sub
mov
roll
push
push
andb
and
push
jnp
pop
inc
jne
inc
addr16
xor
aad
pop
mov
iret
mov
cwtl
mov
dec
xor
xchg
cmp
push
movsl
mov
push
push
mov
imul
sarl
insb
or
sub
jle
hlt
push
leave
xlat
stos
iret
data16
mov
repnz
mov
and
xor
stos
lret
and
aad
ret
fsubr
cli
rcrb
leave
inc
xchg
mov
mov
test
js
sbb
bound
gs
push
mov
lea
and
movsb
adc
int3
sbb
shll
pop
dec
rolb
rorl
popf
or
cld
ds
push
sbb
incl
in
das
ds
pop
mov
sti
repz
ret
sbb
icebp
cmp
mov
fsubrs
addl
sub
adc
cli
cmpsb
ss
ljmp
dec
inc
cmc
test
jg
pop
push
aam
ret
and
lods
cld
ja
mov
aas
jne
in
cli
and
jecxz
add
ret
hlt
xlat
ret
adc
shlb
aam
xchg
xchg
add
add
sub
or
inc
pop
push
out
xor
out
sbb
adc
jp
dec
mov
jmp
sbb
scas
aad
pushf
pop
cld
jns
jecxz
jne
cs
fs
scas
dec
xor
pop
dec
pop
mov
mov
outsl
mov
loope
mov
push
mov
and
fsub
jne
jmp
shlb
mov
xchg
add
lret
loopne
push
clc
adc
cmp
sub
jo
pop
fisttpll
lret
lret
mov
nop
jmp
hlt
pop
xchg
jae
lods
shrb
and
pop
cmc
fstl
mov
fcomip
adc
js
hlt
add
or
adc
popf
sti
add
xlat
lahf
decb
std
test
jo
insb
rcl
mov
ret
mov
test
inc
add
push
mov
and
cltd
cmp
mov
or
loope
inc
jecxz
ljmp
gs
leave
cmpb
inc
js
xchg
dec
into
ljmp
xchg
iret
mov
xor
scas
in
insb
test
in
xchg
jle
xor
ja
mov
std
sbb
imul
enter
fwait
pop
std
cmp
mov
out
fistps
das
scas
lods
pop
sub
xchg
shrl
lock
in
cmp
jae
jne
and
clc
cmp
push
dec
mov
test
je
into
ja
push
fcompl
out
inc
imul
das
sbb
inc
pusha
addr16
add
adc
movsl
sub
mov
pop
mov
ja
jno
jno
scas
lods
or
jae,pt
xor
pusha
subb
stos
scas
jne
lea
cltd
rclb
enter
push
and
clc
mov
sub
stos
loope
dec
fistpl
subl
and
in
flds
or
add
mov
sbb
cli
loope
ret
fistl
add
in
adcb
out
or
and
or
sbb
daa
cmp
je
in
dec
hlt
push
push
push
sahf
xor
fstpt
xchg
sub
pop
cmp
fwait
and
outsl
je
loope
mov
adc
sbb
sub
mov
inc
xchg
popf
inc
pop
imul
scas
or
repnz
add
xor
loope
adc
setno
sub
add
int
fcoml
xchg
icebp
add
xchg
pop
bound
rcrl
pop
push
ja
cmp
sub
add
mov
ja
adc
dec
xor
fmull
jb
add
mov
xor
cltd
inc
jmp
popf
pop
and
cmpsl
pop
adcb
mov
int
adcl
nop
lret
in
push
inc
mov
add
add
mov
in
inc
or
or
inc
add
out
out
adc
aad
les
fbld
stos
xchg
pop
popa
testb
xchg
or
and
pop
sbb
xor
xchg
lret
mov
popa
push
pop
push
stos
repnz
push
dec
insb
je
jg
or
out
fsubl
push
xchg
stos
or
out
lock
dec
repz
inc
loopne
repnz
fbld
in
sbb
inc
add
and
sbb
adcl
sbb
push
outsl
outsl
jge
pause
push
mov
jmp
xor
and
inc
jo
mov
stc
stc
push
mov
cmp
sbb
adc
cwtl
idiv
andb
in
dec
xlat
push
mov
icebp
jp
rclb
ret
fmul
rcr
sub
jbe
mov
aam
shl
mov
adc
insb
or
dec
lret
xor
mov
mov
pushf
rcl
sub
xor
inc
xchg
leave
mov
mov
inc
push
xor
sbb
mov
adc
incb
mov
leave
add
mov
sbb
ja
mov
movsb
test
mov
fwait
lea
out
icebp
push
or
push
push
loope
pop
sti
cmp
cli
popa
mov
les
ret
adc
add
std
jae
mov
imul
dec
push
xchg
ljmp
adcl
inc
imul
popa
idivb
clc
enter
dec
imul
xor
inc
inc
aam
push
pop
mov
push
mov
nop
test
ja
cmpsb
hlt
jmp
xlat
psrlq
inc
mov
and
cld
xchg
dec
cmp
adcb
arpl
sub
ja
ljmp
pop
out
andl
fidivl
add
dec
movsb
stos
call
cmp
inc
mov
cmc
lahf
xchg
push
setle
jp
insl
xchg
ds
push
mov
pushf
shll
and
jb
mov
enter
jp
xorl
adc
mov
out
insb
xor
adc
add
ret
mov
daa
call
stos
mov
subb
jmp
imul
movsb
daa
rorl
fwait
xor
inc
jg
fnstcw
adc
mov
sbb
mov
inc
pop
imul
jb
dec
mov
scas
movsb
jb
dec
loope
xlat
xchg
sbb
cmp
jge
cwtl
iret
inc
xor
add
cs
aad
dec
std
leave
mov
pushf
inc
inc
in
lahf
addb
cmp
jne
sbb
orb
js
divb
mov
adc
test
stos
ret
adcb
cmp
data16
cmp
push
sub
push
das
jo
xor
popf
xchg
pushf
test
adc
sub
inc
inc
mul
mov
loope
mov
adc
dec
dec
xchg
xor
mov
scas
fmulp
jno
inc
xor
stos
xchg
insb
jg
inc
sysexit
mov
aam
lahf
and
inc
xchg
pop
mov
mov
push
repnz
ja
inc
hlt
sbb
sbb
lods
xlat
mov
or
je
xchg
aaa
and
cld
mov
popa
iret
sbb
popa
repnz
stos
jb
xor
jg
jae
mov
repnz
inc
and
cmp
jbe
mov
sub
jecxz,pn
outsl
shrl
and
and
ret
out
jmp
mov
in
push
scas
loop
outsl
fdivs
xchg
inc
icebp
aad
mov
sub
mov
xchg
or
loope
mov
jns
div
in
sahf
mov
rorb
aas
sub
stos
sbb
cltd
mov
mov
arpl
mov
mov
jl
cld
inc
stc
xchg
mov
push
xor
sub
dec
fs
add
xchg
jg
mov
imul
dec
and
jge
stc
jp
jbe
add
or
mov
pop
pop
adc
movsb
testl
dec
inc
cwtl
mov
push
aam
pop
orl
stc
enter
jo
dec
mov
jmp
pop
mov
jp
das
loope
jmp
insl
mov
stos
dec
push
cltd
bound
jne
inc
inc
sbb
push
in
and
roll
popf
pop
test
call
mov
movsl
mov
insl
push
jle
shlb
dec
pop
or
gs
pop
mov
push
jmp
jmp
outsb
xchg
add
inc
imul
mov
ljmp
lcall
leave
pop
xor
decb
push
xchg
mov
sbb
mov
out
in
fisubrs
sub
add
out
popa
insl
outsb
inc
js
xlat
fs
pop
jp
in
loope
pop
xchg
cmpl
add
sahf
in
sbb
pop
add
dec
rcl
clc
test
int
pop
stos
push
add
xchg
mov
lfs
fs
test
loop
pop
cwtl
xchg
cmp
std
or
es
inc
cmpsb
or
fadd
xchg
in
sbb
xor
lea
lret
xchg
fdivp
add
rolb
inc
inc
pop
lcall
pusha
scas
daa
outsl
test
or
movsb
push
pushf
inc
xchg
inc
flds
stos
inc
outsl
rcrl
mov
das
int3
push
mov
add
pop
push
loop
imul
scas
shl
cmp
adc
test
and
int
mov
fnstsw
xchg
stc
sahf
jnp
nop
in
xchg
push
outsl
out
inc
jnp
dec
sbb
hlt
sbb
je
loopne
xor
fsubp
lock
cmpsl
dec
xor
or
dec
test
les
xchg
pop
cltd
lcall
popa
nop
cltd
mov
jp
inc
outsb
xchg
and
cmp
jge
add
or
push
in
adc
mov
xor
enter
add
sbb
xor
push
xor
mov
adc
stos
push
pop
xchg
jb
cmp
push
idiv
iret
or
pop
pop
jo
jl
test
sbb
mov
xchg
sahf
push
xor
pushf
mov
sti
movsb
shlb
cwtl
das
pop
shlb
xor
ja
pop
xchg
fwait
cwtl
dec
test
aas
jg
shlb
mov
dec
cwtl
aam
cmpsl
pop
pushf
pop
adc
iret
cmp
mov
fs
jae
mov
test
mov
addr16
shll
call
xchg
les
sub
push
loop
mov
dec
xchg
in
imul
inc
jecxz
add
negl
in
adc
mov
rolb
int
out
jge
xor
cmp
xchg
int3
sbb
xchg
add
out
shr
mov
cwtl
aaa
mov
aas
add
cmp
sbbl
mov
xor
mull
sbb
mov
push
or
mov
sahf
cmp
jne
cmp
imul
call
push
add
lret
or
sarl
push
mov
push
sub
cwtl
jno
lahf
jnp
rcll
mov
pop
dec
lcall
pop
mov
mov
jge
testb
sarl
loopne
loopne
dec
sarb
arpl
add
pminsw
inc
sarl
rep
aas
stos
dec
pop
and
data16
fiadds
imul
sbb
mov
jne
aaa
jnp
jbe
push
jb
rolb
adc
out
pop
int3
dec
push
add
jae
test
pusha
mov
xchg
into
mov
clc
mov
test
test
dec
dec
dec
sbb
aad
in
mov
sub
inc
es
aas
jbe
inc
int3
sbb
mov
adc
test
je
sbb
xchg
pop
pop
xchg
xor
or
inc
push
ds
sub
in
jne
fwait
jbe
dec
ficoms
out
add
xchg
stc
bound
pop
popa
dec
xchg
inc
test
js
mov
mov
leave
pop
xchg
pop
sub
mov
rol
or
xchg
sbb
inc
lret
aad
xchg
int3
cwtl
cmpsb
cmp
int3
aas
and
mov
icebp
insl
insb
pop
inc
dec
cmp
mov
cmp
pop
lret
loope
bswap
repz
fcomip
out
gs
xchg
pop
adc
adcb
sub
dec
outsl
mov
notl
mov
popf
push
xor
xchg
xor
iret
cmp
or
ret
shlb
add
popa
pop
push
cltd
adc
scas
jmp
fbld
jp
pop
mov
adc
adc
dec
pop
jl
stos
mov
or
mov
fstpl
mov
cltd
pop
dec
xor
popf
lods
scas
mov
lcall
lcall
ret
das
cmc
dec
daa
repz
mov
mov
push
in
stos
fstpl
arpl
hlt
out
fcoms
fcmovne
cli
cmp
adc
testl
orb
cmp
int3
popf
ret
aam
lcall
mov
in
inc
inc
loope
cmp
and
cmp
mov
sbb
or
cli
cmp
cmp
or
xchg
mov
pop
scas
in
les
jg
ljmp
ljmp
mov
or
ret
push
and
pop
xchg
add
cwtl
mov
sbb
repz
mov
pop
push
iret
stos
aad
shlb
loopne
jbe
enter
sub
xor
mov
out
aam
das
ret
cmpsl
jno
dec
out
xor
sub
inc
jno
shr
notl
js
xor
adc
insb
mov
jl
push
mov
fwait
xor
dec
sub
push
sub
pusha
mov
stos
push
insl
dec
mov
stc
repnz
pop
ds
mov
sub
dec
mov
jecxz
mov
pop
mov
or
stos
mov
subb
nop
jb
sbb
mov
mov
push
push
outsb
movsl
xor
js
jg
imul
cltd
push
push
mov
int3
insb
adc
pop
sbb
jl
mov
sub
mov
xchg
mov
add
addr16
mov
jne
sub
and
aas
xchg
data16
dec
mov
ja
fldt
iret
add
andl
je
push
lea
lcall
jnp
lock
mov
jne
add
jnp
mov
psrad
jle
pusha
inc
fs
in
test
fidivl
lea
xchg
jmp
xor
pop
leave
imul
dec
stos
cmp
jp
fistpl
add
pop
jo
jp
mov
adc
xor
xor
gs
stos
popf
enter
push
push
dec
dec
addr16
es
or
adc
adc
inc
popf
rcll
lgs
sahf
mov
push
or
popf
sti
lahf
xor
push
cmc
jo
add
js
js
jecxz
gs
femms
out
lea
push
rcl
cmp
xchg
lret
inc
adc
push
mov
mov
loopne
xor
out
outsl
and
dec
inc
hlt
sub
cmp
jbe
out
loop
insl
bnd
aaa
test
test
pop
outsb
inc
push
rcll
imul
lods
xchg
int3
and
imul
push
std
and
cmc
jnp
cltd
ret
mov
push
cmp
repnz
imul
dec
les
push
mov
cld
cwtl
fidivrs
in
inc
jmp
sbb
lods
mov
push
push
jns
cwtl
adc
dec
sbb
insb
lret
filds
push
shrl
insl
and
loop
pop
fisubrs
adc
cld
or
mov
mov
iret
mov
pop
inc
jnp
test
and
inc
out
stos
jbe
inc
out
lahf
imul
stos
sub
xor
jbe
dec
jecxz
mov
fdivs
xor
mov
xchg
and
add
sbb
push
xlat
xchg
call
mov
and
jecxz
sub
and
xchg
inc
inc
jmp
mov
sbb
or
xchg
fildl
push
call
sub
sub
data16
pushf
adc
aad
in
inc
push
mov
mov
cs
sbb
pusha
jo
inc
or
repnz
pop
mov
fwait
xlat
test
xlat
mov
roll
mov
mov
test
rclb
jo
lds
mov
cwtl
jp
push
ret
mov
pop
les
je
cmp
ds
popf
dec
std
mov
adc
push
inc
add
iret
in
subb
leave
nop
sahf
cltd
sub
ss
ss
imul
mov
stc
mov
sbb
fs
test
mov
xor
inc
jmp
mov
mov
lods
call
mov
or
add
sbb
mov
ja
mov
xchg
or
ljmp
pop
rcll
outsl
ja
xchg
cli
out
popl
cmp
pop
xor
push
hlt
inc
sbb
out
addr16
dec
jo
pop
cltd
out
or
xor
pop
add
aas
pop
and
or
xor
inc
test
push
aam
push
test
add
scas
adc
fwait
test
push
iret
movsb
out
es
shr
mov
loopne
pusha
push
pusha
jo
int
icebp
cmp
repz
and
sbb
xchg
call
inc
cli
mov
sub
movaps
cwtl
jp
stos
dec
add
and
stos
fdivrs
je
outsl
mov
test
addb
je
jg
mov
fwait
jae
mov
rcrl
push
fidivrl
mov
int
mov
inc
mov
fmul
jo
popf
and
inc
ja
adc
jp
mov
xchg
in
and
jo
fwait
jg
daa
lds
push
xchg
push
xor
stos
push
subb
roll
mov
mov
sbb
mov
or
fimuls
xchg
push
test
xchg
loop
mull
leave
testb
dec
sar
pop
mov
enter
fdivs
popf
lcall
shlb
xor
daa
ljmp
outsb
inc
sbb
stos
sbb
xchg
in
and
cld
xchg
aad
adc
out
inc
push
bound
icebp
jge
pusha
push
je
xlat
add
pop
fxch
pushf
int3
dec
dec
push
mov
mov
repnz
sub
sahf
insb
sbb
push
xor
jmp
int
mov
inc
jbe
nop
dec
mov
add
cmpsl
js
stos
push
xlat
jae
cmp
pop
add
sahf
xchg
dec
out
adc
push
jl
mov
add
dec
cltd
mov
out
mov
nop
mov
mov
popf
and
pop
les
xlat
pop
mov
sbb
cltd
xlat
shl
mov
jb
or
addr16
jl
add
dec
nop
adc
mov
mov
es
dec
mov
ficoms
jecxz
into
mov
fs
mov
aaa
rclb
ret
cmpsb
psubusb
int3
mov
pushf
icebp
cld
testl
mov
push
aam
and
ret
dec
pop
cmp
xlat
xchg
and
push
xchg
gs
pop
xor
xor
das
or
pop
test
pop
add
dec
addb
lret
dec
pop
xchg
hlt
xor
sbb
add
sub
xor
fcompl
scas
div
add
stos
pop
aas
xor
cmp
fcmovnb
jb
rolb
sahf
imul
addb
fnstenv
test
mov
fs
scas
ficoml
mov
rcrl
jmp
dec
cs
sub
test
add
xchg
push
push
in
cs
push
inc
pop
lcall
cmp
jle
imul
pop
lret
iret
cmpsb
ljmp
jns
aaa
imul
fidivl
adc
lahf
movsl
out
mov
lods
stos
jmp
pop
nop
jmp
pop
leave
pop
les
mov
sbb
into
das
jae
dec
or
sbb
jecxz
push
mov
mov
test
cwtl
test
lcall
fs
add
icebp
in
mov
xor
and
out
jo
mov
loopne
push
xchg
loop
mov
sub
or
mov
mov
pop
jl
aam
cmp
jae
ret
cld
jns
je
fcmovu
mov
inc
mov
sbb
add
adc
loope
stos
nop
sbbb
xchg
cmpl
dec
pop
push
lret
fwait
jnp
jp
scas
sub
hlt
or
cmp
inc
lret
sbb
xchg
cs
cwtl
jmp
or
rol
neg
inc
push
push
mov
mov
das
push
mov
adc
mov
aas
mov
out
in
aad
mov
inc
jae
mov
dec
aad
lds
push
addr16
inc
stc
fsts
or
cmpl
ret
jae
outsb
lret
jnp
mov
inc
rol
xchg
jmp
inc
xchg
inc
push
push
adc
cmp
xchg
sub
push
xchg
bound
fldcw
sahf
add
mov
push
and
xor
pop
jo
lods
dec
push
add
xor
xor
sarb
sub
lods
sub
inc
inc
gs
scas
xchg
dec
and
adc
inc
xchg
int3
incb
xor
cmp
ja
xor
dec
push
nop
adc
popf
loop
sbb
dec
aad
movsb
imul
or
cwtl
iret
xchg
enter
pop
imul
mov
imul
inc
jg
imul
pop
sahf
ret
pop
ja
outsb
test
repz
in
cwtl
jb
mov
xlat
imull
push
xchg
aam
insb
mov
lds
mov
dec
xchg
ret
cmp
xchg
in
add
icebp
scas
stos
fwait
in
adcb
jne
mov
pushf
mov
cmc
dec
aaa
shrl
aaa
push
ficoms
test
mov
jle
sub
stos
sub
or
mov
lcall
add
and
mov
test
pop
adc
int3
adc
and
andb
ljmp
push
mov
mov
enter
aad
loopne
or
xlat
push
lock
or
neg
in
cmpsb
stos
sbb
bound
out
sbb
insl
mov
cmp
pop
mov
popa
inc
or
or
xchg
test
in
and
and
mov
bnd
das
push
loopne
pop
mov
mov
dec
and
xchg
xor
push
mov
push
mov
mov
xchg
leave
aam
movsl
fs
cmp
mov
xor
jne
add
xchg
ja
add
mov
cs
movsl
mov
inc
mov
or
xchg
jp
lods
adc
test
xlat
push
mov
aam
pop
shl
fidivl
add
jmp
leave
aad
lahf
mov
sub
iret
push
ljmp
psrld
pushf
adc
push
mov
imul
xor
in
cltd
stc
bound
adc
dec
mov
and
insl
outsl
scas
pop
and
sub
fcmovnbe
ret
jno
xchg
scas
jge
lock
push
repz
jp
aam
dec
lods
adc
rolb
icebp
scas
pop
mov
out
scas
icebp
jmp
xor
push
jns
sub
mov
dec
je
loopne
jb
sub
aam
xlat
lods
add
mov
shll
push
pusha
insl
or
push
shl
repz
test
cmc
jne
rolb
inc
mov
inc
outsl
imul
test
mov
xchg
iret
ljmp
adc
jmp
mov
es
xchg
mov
mov
sub
test
xchg
leave
int3
imul
pop
sbb
push
cmp
test
stos
imulb
daa
fdivrs
mov
fisttpl
mov
inc
mov
orl
mov
jne
mov
and
mov
mov
cmp
mov
and
iret
outsb
push
xor
and
insl
xor
xchg
xchg
adc
mov
adc
push
xor
shl
rcrl
xor
xchg
adc
aad
imul
sub
push
sbbl
mov
out
loop
push
mov
mov
movsl
pop
sbb
leave
gs
js
sti
daa
push
std
aam
fs
icebp
sub
fucomi
neg
xchg
clc
in
insb
adc
push
mov
imul
pop
add
lret
hlt
sub
das
push
fistpll
jle
pushf
and
sub
lock
es
popf
aad
stos
xchg
mov
add
pop
pop
decl
outsl
jo
cmp
test
jg
cli
xchg
jl
mulb
adc
out
test
jo
sbb
hlt
jbe
outsb
jbe
or
in
pusha
jmp
sub
pop
sub
cld
fldl
adcb
jo
sbb
xor
add
push
cmpb
pop
and
aam
push
mov
fstps
mov
aas
sar
add
pushf
jmp
dec
push
push
in
adc
insb
ss
lea
jns
mov
mov
xor
daa
lret
push
mov
rclb
mov
fscale
addl
cmp
pop
and
lahf
mov
push
fdivr
xorl
mov
pop
pushf
mov
pop
mov
out
lock
pop
push
test
das
lcall
sbb
cmp
pop
pusha
push
adc
ss
add
stos
insb
mov
hlt
sbb
push
cltd
dec
lock
data16
les
mov
xlat
hlt
jl
adc
fcmovu
fsubrl
push
pop
sbb
or
mov
lcall
sti
add
aad
push
inc
pop
mov
aad
push
sub
adc
dec
pop
das
out
jo
xor
mov
je
push
mov
ss
sahf
out
scas
add
mov
sbb
cmp
add
add
mov
xor
scas
loopne
and
adc
stos
jae
dec
inc
pop
lcall
dec
adc
mov
push
push
and
mov
and
xor
cmp
es
pop
orl
lock
orl
cltd
test
arpl
lret
into
int
push
popa
mov
rcrb
imul
mov
cmpsb
mov
ret
and
or
xchg
sbb
mov
loop
incb
repz
cmc
adc
mov
pop
je
std
ds
jns
dec
out
xchg
fsubl
mov
xchg
mov
shlb
cmc
cli
das
and
and
cmp
flds
xor
pop
push
and
xorb
xor
imul
lock
fbstp
aas
shrl
in
push
mov
cld
pop
test
pop
mov
shrl
insb
test
jno
xchg
pop
and
stos
data16
sub
imul
clc
pushf
cmp
pop
imul
inc
lahf
jmp
mov
sub
es
in
xor
inc
addr16
outsb
cmc
xchg
jmp
cmp
pop
fdivp
dec
mov
enter
pop
mov
enter
fs
xchg
xchg
cmp
cmp
rep
cmp
daa
aas
push
jle
add
je
lcall
mov
cmp
cmp
pop
cmpsl
pop
jge
pop
xchg
cmp
mov
pop
repnz
lcall
outsb
stc
push
lds
xlat
nop
mov
mov
adc
cli
add
push
xor
in
lods
fwait
imul
add
mov
push
pop
mov
jmp
xlat
test
pop
mov
aaa
test
out
and
imul
mov
push
xchg
mov
xchg
xor
aaa
addr16
js
add
xchg
ficoml
out
mov
fisubrl
inc
aam
and
push
mov
mov
adc
ss
pusha
cwtl
cltd
cmpsb
adc
xor
pop
pop
cld
out
inc
push
decl
sbb
popf
aad
inc
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
