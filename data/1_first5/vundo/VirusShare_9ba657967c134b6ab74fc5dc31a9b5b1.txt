shr
mov
mov
sub
and
inc
mov
mov
push
lea
sub
or
xor
xor
mov
sub
test
jne
jmp
icebp
xor
sub
shr
test
lea
jle
jmp
push
jmp
add
add
mov
and
jmp
push
jmp
push
call
jmp
ret
pop
subl
call
ret
add
add
add
rolb
adc
jne
cmpb
jne
jmp
and
shl
sub
mov
movzbl
add
mov
lea
mov
mov
jmp
sub
add
mov
push
jmp
push
jmp
addl
call
push
jmp
push
jmp
call
nop
subl
call
lea
push
call
test
jne
jmp
call
ret
add
add
add
jmp
call
leave
addl
push
push
jmp
dec
push
ret
addl
call
mov
shr
dec
or
mov
movzwl
jmp
adc
adc
test
loop
dec
mov
jmp
add
push
mov
mov
mov
mov
and
and
mov
sub
jmp
cmp
mov
mov
jle
jmp
dec
dec
mov
mov
add
jne
jmp
movzwl
add
shr
mov
lea
sub
jmp
or
xor
rol
and
shr
mov
jmp
lea
nop
movzwl
shl
mov
and
jmp
add
push
call
sub
shr
xor
mov
cmp
je
or
dec
shr
ror
sub
mov
test
jmp
add
ret
mov
jmp
add
and
or
sub
mov
shr
lea
lea
cltd
and
jmp
movzbl
add
mov
lea
shl
sub
mov
shr
and
add
test
jmp
test
jne
movzbl
add
mov
lea
add
shl
or
xor
mov
shr
jmp
add
in
rol
shr
mov
sub
test
jne
push
jmp
call
jmp
push
int3
subl
jmp
sub
mov
or
xor
mov
push
push
shl
inc
mov
mov
xor
mov
jmp
je
mov
add
cmpl
je
push
nop
nop
nop
nop
nop
push
push
lea
dec
rol
xor
and
mov
jmp
jne
mov
mov
pop
ret
add
add
add
push
or
shr
and
mov
sub
mov
jmp
call
inc
sub
add
mov
push
push
mov
mov
mov
add
add
jmp
mov
push
mov
movl
mov
push
jmp
shr
and
lea
and
add
or
and
mov
add
sub
test
jmp
mov
jmp
add
pusha
mov
call
popa
jmp
mov
ret
add
add
add
jne
mov
movl
jmp
cmp
jne
and
add
add
add
add
sub
jne
jmp
and
add
test
je
add
mov
jmp
xor
test
jmp
add
xor
sub
dec
sub
mov
jmp
add
add
add
mov
test
je
push
push
mov
add
sub
and
mov
rol
mov
jmp
je
jmp
mov
movl
movl
call
lea
nop
nop
nop
nop
nop
addl
call
mov
sub
mov
inc
sub
mov
mov
test
jne
jmp
mov
jmp
add
pop
and
mov
test
jmp
push
push
push
push
jmp
pop
jmp
call
push
dec
ret
xorl
jmp
mov
movl
mov
jne
xor
ret
test
jne
push
jmp
dec
jmp
leave
call
push
int3
pop
subl
jmp
push
call
add
ret
add
add
add
add
add
add
in
mov
add
mov
sub
push
push
and
add
shr
and
or
mov
test
push
jmp
add
ret
mov
jmp
jle
add
jmp
mov
add
add
sub
and
mov
mov
rol
dec
mov
add
jmp
cmpw
je
jmp
lea
xor
sub
xor
mov
mov
jmp
shl
xor
mov
jmp
add
add
add
insb
and
ror
sub
add
mov
sub
jmp
sub
cmpl
lea
je
push
push
add
sub
mov
jmp
mov
mov
mov
mov
mov
add
add
xor
jmp
pushl
ret
shl
shl
add
mov
jmp
and
jmp
add
cmpl
jne
pop
pop
jmp
add
sar
test
jle
mov
sub
rol
sub
mov
and
mov
mov
test
jle
xor
and
inc
mov
jmp
sub
test
mov
jne
movzbl
add
xor
mov
mov
mov
jmp
je
movsbl
rol
add
xor
mov
test
jne
cmp
jmp
pop
mov
pop
ret
pop
mov
jmp
add
ret
inc
add
xor
mov
jmp
add
sub
movb
movb
movb
nop
nop
nop
nop
nop
call
cmp
push
jae
call
push
jmp
push
push
pop
push
push
push
int3
push
push
ret
ret
subl
jmp
add
add
ja
incl
stc
incl
add
push
jmp
leave
jmp
leave
call
int3
addl
nop
nop
nop
nop
nop
push
jmp
push
pop
subl
push
jmp
leave
call
push
push
call
xorl
call
test
jmp
push
push
call
jmp
add
add
add
les
pop
add
add
mov
jmp
pushl
call
jmp
nop
nop
sub
mov
nop
push
nop
jmp
pushl
call
jmp
jne
jmp
add
pop
ret
mov
ret
mov
mov
dec
inc
or
mov
lea
jmp
sub
sub
sub
mov
jne
sub
sub
jne
jmp
or
add
cmpw
jne
add
or
rol
or
mov
mov
xor
and
jmp
out
dec
sbb
dec
and
mov
or
and
xor
shr
mov
or
mov
mov
rep
movzwl
and
mov
add
jmp
test
mov
mov
jle
jmp
mov
rol
shl
xor
mov
test
jne
add
ret
shr
and
xor
shr
inc
mov
jmp
cmp
sete
mov
ret
add
add
add
rorb
fadds
sbb
ret
pop
jmp
je
add
cmp
jl
pop
xor
pop
mov
mov
ror
shr
mov
pop
nop
nop
nop
nop
nop
ret
shl
mov
movzwl
inc
mov
jmp
add
sub
add
jmp
add
test
je
jmp
sub
shl
ror
or
mov
xor
sub
mov
add
add
jmp
add
mov
push
call
leave
addl
call
mov
sub
sub
mov
add
shr
mov
or
xor
mov
lea
push
jmp
fisubl
jne
test
mov
jle
rol
mov
jmp
push
jmp
call
ret
nop
push
push
leave
call
dec
push
addl
push
push
call
push
jmp
push
addl
jmp
add
test
mov
je
jmp
mov
pop
add
pop
xor
mov
shr
or
sub
mov
pop
ret
add
add
add
into
mov
mov
jl
and
mov
mov
mov
push
mov
jmp
jns
movzwl
nop
nop
nop
nop
nop
push
jmp
mov
lea
push
push
call
jmp
lea
push
shl
sub
or
mov
dec
mov
ror
mov
pop
jmp
mov
jmp
xor
add
and
or
dec
mov
sub
test
jne
movzbl
add
jmp
add
xor
add
dec
mov
call
add
or
sub
xor
mov
call
push
jmp
call
call
call
call
xorl
push
jmp
ret
xorl
push
jmp
add
mov
sub
or
mov
add
test
jne
add
cmpl
jmp
sub
mov
xor
add
sub
jne
pop
pop
pop
xor
or
mov
mov
jmp
call
push
jmp
push
push
call
leave
xorl
mov
call
push
jmp
ret
leave
push
subl
mov
call
jmp
mov
lea
inc
or
and
mov
shr
and
add
test
je
xor
nop
nop
nop
nop
nop
movl
inc
and
sub
xor
mov
sub
test
jne
jmp
call
rol
shr
and
mov
call
shr
sub
add
shr
shl
mov
jmp
push
inc
daa
jne
pop
pop
pop
mov
pop
ret
add
add
add
add
add
add
jmp
call
nop
call
addl
mov
call
add
jmp
fsubs
inc
inc
cld
add
add
jmp
shrb
mov
movb
movb
movb
call
cmp
push
jae
jmp
xchg
movzbl
add
nop
nop
nop
nop
nop
lea
or
and
shr
mov
mov
shr
and
add
jmp
lea
call
mov
mov
inc
add
sub
sub
mov
or
ror
mov
mov
jmp
lahf
mov
call
push
jmp
call
call
inc
leave
pop
dec
push
pop
subl
push
jmp
jmp
push
push
call
ret
call
subl
call
push
jmp
push
push
call
push
addl
call
lea
push
nop
nop
nop
nop
nop
call
test
jmp
enter
insb
and
add
sub
mov
add
dec
sbb
test
decl
pop
mov
mov
jmp
sub
lea
jne
test
mov
je
jmp
ret
div
pop
mov
pop
or
xor
dec
add
mov
pop
ret
add
add
add
jne
call
push
jmp
jmp
push
call
addl
push
jmp
call
jmp
push
addl
call
test
je
jmp
sbb
xor
add
ror
shl
mov
sub
mov
mov
add
jmp
and
add
ret
pop
pop
mov
pop
or
mov
pop
ret
add
add
add
add
add
add
add
jmp
movzbl
nop
nop
nop
nop
nop
mov
sub
mov
shl
and
mov
and
add
add
shr
nop
nop
nop
nop
nop
mov
mov
je
test
je
nop
nop
nop
nop
nop
sub
mov
mov
sub
add
sub
nop
nop
nop
nop
nop
mov
mov
jne
mov
mov
mov
nop
nop
nop
nop
nop
mov
movl
jmp
movl
mov
movl
jmp
nop
nop
nop
nop
nop
lea
nop
nop
nop
nop
nop
call
cmpl
jne
cmp
jne
call
test
mov
nop
nop
nop
nop
nop
je
sub
and
dec
mov
sub
add
sub
mov
mov
nop
nop
nop
nop
nop
jne
mov
jmp
nop
nop
nop
nop
nop
sub
jmp
sub
add
mov
nop
nop
nop
nop
nop
movzbl
shl
nop
nop
nop
nop
nop
add
add
lea
mov
or
mov
mov
call
cmp
jb
nop
nop
nop
nop
nop
add
cmp
jb
nop
nop
nop
nop
nop
add
cmp
jae
add
nop
nop
nop
nop
nop
test
mov
je
lea
nop
nop
nop
nop
nop
xor
dec
add
and
mov
sub
mov
nop
nop
nop
nop
nop
mov
add
sub
nop
nop
nop
nop
nop
jne
mov
mov
or
rol
and
ror
ror
mov
and
shl
mov
mov
ror
xor
and
mov
mov
movl
jmp
mov
nop
nop
nop
nop
nop
mov
add
add
mov
movl
mov
cmpl
nop
nop
nop
nop
nop
je
pop
dec
mov
add
mov
mov
sub
pop
pop
xor
mov
add
ror
mov
pop
ret
add
add
inc
popa
add
es
add
xor
add
add
add
pusha
add
out
pusha
add
add
add
add
add
pusha
add
push
popa
add
inc
popa
add
es
add
xor
add
add
add
pusha
add
out
pusha
add
add
add
add
add
pusha
add
add
add
add
inc
insb
outsl
jae
inc
jb
jbe
jb
or
dec
jo
outsb
inc
jb
jbe
jb
add
add
push
popa
je
push
gs
outsl
jbe
inc
popa
arpl
insb
popa
jae
inc
add
imul
push
gs
outsl
jbe
inc
jb
jae
add
add
je
inc
imul
inc
outsl
insl
jo
outsb
outsb
je
add
push
add
gs
je
inc
imul
js
je
jb
arpl
jae
mov
je
push
add
filds
inc
gs
imul
je
adc
add
add
add
add
xor
add
add
add
add
add
sbb
add
add
add
ljmp
xor
test
inc
aas
add
fstpt
lea
xor
scas
cmp
push
sub
xor
inc
aaa
les
cmp
sahf
aas
sarl
aas
sbb
sub
push
xor
ja
divb
out
mov
cmp
cmp
xor
cmp
ss
lods
cmp
add
add
add
xor
mov
xor
xor
mov
cltd
xor
xor
jg
sub
mov
scas
push
nop
dec
icebp
icebp
mov
fstpt
or
cltd
and
or
fidivs
mov
pop
jge
cmp
cld
xchg
cmc
inc
cmp
or
scas
xor
lcall
adc
negb
dec
adc
inc
inc
data16
xor
mulb
xchg
popf
loope
pop
fidivl
jb
dec
sub
jle
cltd
aad
xorb
addr16
mov
fmull
dec
popa
ljmp
popa
int
push
popf
pushf
push
jb
out
lock
ja
xlat
call
leave
adc
xor
hlt
aad
lahf
aam
pop
jle
iret
xor
hlt
int3
iret
rcll
jne
fstps
sub
xchg
push
add
popa
lea
cmp
sbbb
jo
fisubl
mov
imul
push
das
addr16
rclb
jbe
push
mov
mov
push
inc
rcr
sub
or
lds
cmp
jbe
rol
leave
int
aam
push
and
mov
push
adc
rorl
das
icebp
adc
fwait
loope
jle
test
cmpsl
xchg
mov
mov
rcll
cmp
rcr
insb
mov
xor
movsl
loop
fwait
mov
cmp
inc
mov
js
arpl
insl
ds
loopne
adc
cmp
insl
push
jecxz
sub
ret
inc
pop
test
adc
sbb
popa
leave
vcvttsd2si
repz
mov
mov
mov
js
dec
sarb
inc
inc
sub
cmpsl
push
xchg
xchg
stos
pop
push
cmc
lret
lahf
mov
dec
push
cltd
int
or
cmpsb
push
xor
lret
mov
add
add
lods
iret
aad
lret
fcomps
daa
pop
inc
jl
sar
mov
cmpsb
xchg
dec
sub
pusha
fidivs
jmp
lahf
in
lahf
adc
dec
shll
add
das
mov
jae
inc
inc
mov
iret
shll
gs
sub
pop
lods
mov
leave
shrb
or
fistpl
mov
adc
push
shl
jno
dec
js
xchg
sub
dec
aaa
mov
cmc
filds
movsl
idivb
imul
adc
outsb
cmp
hlt
pop
bound
mul
xchg
xor
ret
mov
xor
out
jne
add
sahf
push
adc
enter
sub
mov
int
sahf
fiadds
lcall
push
pop
mov
sub
mov
dec
xor
pusha
cmp
fiadds
cwtl
inc
mov
sub
das
jae
push
jle
sbb
add
inc
and
sub
mov
push
fdivrl
xchg
xor
movsb
nop
aad
push
cld
xorb
pop
imul
and
jge
ljmp
mov
cli
mov
jne
fcoml
pop
inc
pop
andl
add
lods
sbb
imull
mov
push
mov
pop
or
pop
fsubr
ja
jmp
imul
or
filds
mov
aad
movsb
mov
sub
adc
aam
adc
sbb
pusha
lret
pop
das
inc
push
sub
test
int3
or
dec
addb
aad
mov
and
cmp
test
out
mov
test
adc
mov
in
data16
repz
mov
sub
push
add
nop
or
push
sbb
aaa
ds
push
jb
repnz
int3
or
jp
in
push
xchg
adc
push
add
mov
cmp
fistpll
pop
inc
fnstsw
cmpsb
popa
sbb
js
dec
ja
sbb
push
push
inc
les
pavgw
add
pushl
mov
mov
and
add
std
lea
imul
mov
aas
clc
repnz
lods
rol
add
testb
mov
dec
xor
into
std
lret
out
gs
les
fisubrs
ss
mov
test
ss
fadds
aad
fdivrs
sti
nop
les
add
xor
scas
in
xchg
lock
inc
pushf
or
in
std
lods
lods
lods
lods
lods
lods
add
xor
sbb
pusha
pushf
arpl
rorb
scas
jge
adc
lds
add
scas
sti
stc
pop
sbb
movsl
stos
stos
jmp
mov
dec
or
lret
into
xchg
repnz
rolb
loop
sarb
stos
sarb
hlt
test
xchg
inc
push
cmp
bnd
adc
loope
mov
iret
jb
shll
rcll
pop
lret
push
hlt
push
push
repz
inc
sbb
or
repnz
mov
jnp
push
xlat
mov
in
pop
push
mov
and
cmp
mov
sbb
xor
loope
xor
ja
lcall
loope
stc
add
.byte
