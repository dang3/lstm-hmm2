and
add
add
add
inc
add
cmp
inc
add
arpl
ja
imul
jne
outsb
add
imul
cmp
dec
add
inc
add
add
add
add
outsl
add
je
jb
outsl
add
add
popa
add
add
add
jne
jb
jae
outsl
add
jae
add
push
add
push
add
and
push
add
jne
jb
arpl
add
add
outsl
add
je
jb
outsl
add
add
popa
add
add
add
jne
jb
jae
outsl
add
jae
pop
add
arpl
push
add
jae
add
add
add
push
add
data16
add
jb
add
add
arpl
jb
outsl
add
outsl
add
je
pop
add
imul
outsl
add
jae
pop
add
jne
jb
jb
add
je
push
add
jb
jae
imul
pop
add
outsl
add
je
jb
outsl
add
add
popa
add
add
add
jne
jb
jae
outsl
add
jae
pop
add
arpl
push
add
jae
add
dec
add
outsb
add
add
add
jo
inc
add
jb
outsl
add
add
push
add
jp
add
insb
add
add
imul
dec
add
push
add
add
add
push
add
jp
add
push
add
inc
add
add
add
imul
push
imul
jb
je
arpl
mov
sub
push
push
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
movl
call
push
pushl
call
push
mov
pushl
call
mov
call
call
push
pushl
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
call
pushl
call
jmp
pushl
call
mov
push
push
call
mov
call
xor
mov
push
push
push
call
lea
push
push
push
call
add
push
push
push
push
push
pushl
call
pushl
call
push
push
push
push
push
call
pushl
pushl
pushl
call
add
jmp
lea
push
pushl
call
xor
mov
push
push
push
push
pushl
call
pushl
mov
pushl
pushl
push
push
call
push
pushl
pushl
push
call
lea
push
call
pop
push
lea
push
push
push
push
call
push
lea
push
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
pop
pop
leave
ret
push
push
push
push
mov
push
mov
mov
mov
pop
add
mov
mov
add
mov
mov
cmpb
je
cmp
jg
mov
mov
mov
movzbl
sub
inc
test
jne
jmp
mov
call
movzbl
mov
dec
sub
push
call
movzbl
sub
add
je
pushl
inc
push
call
movzbl
pop
sub
pop
push
jmp
call
mov
xor
push
push
mov
push
push
mov
push
push
push
push
push
pushl
pushl
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
andl
andl
push
mov
push
push
movl
movl
movl
movl
mov
call
andl
mov
mov
push
push
movl
movl
mov
movl
call
push
mov
call
pop
ret
push
mov
sub
pushl
call
pushl
movl
movl
movl
pushl
movl
movl
movl
movl
movl
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
push
lea
push
push
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
cmpl
push
mov
je
cmp
je
lea
push
push
call
call
mov
xor
xor
call
mov
xor
call
movzwl
mov
mov
mov
movzwl
xor
movzwl
xor
lea
push
call
mov
xor
pop
xor
test
jne
mov
not
mov
pop
mov
or
mov
leave
ret
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
push
push
push
pushl
call
mov
movzbl
mov
movzbl
sub
test
je
mov
add
mov
mov
sub
mov
add
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
push
call
mov
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
push
call
mov
add
mov
jmp
jmp
push
pushl
call
mov
pushl
pushl
pushl
push
push
call
add
pushl
call
mov
add
cmp
jb
mov
leave
ret
nop
incl
add
add
add
dec
fs
add
add
adc
add
add
add
adc
add
add
add
add
sbb
add
add
mov
add
jp
add
add
add
add
add
add
stos
jne
cmp
imul
add
imul
fsincos
sahf
xor
orl
xchg
addr16
cld
mov
pop
lea
mov
add
jne
jne
call
std
test
push
addb
ss
add
add
mov
mov
add
incl
cmp
add
add
xor
and
loopne
add
adc
incl
lret
call
call
mov
push
cmp
loope
call
cld
add
add
jne
push
inc
fiaddl
push
and
test
clc
verr
mov
test
lret
cmp
cmp
incl
adc
adc
mov
adc
add
add
add
add
add
or
add
add
add
add
add
add
add
add
lcall
add
inc
push
outsb
inc
insb
gs
subb
outsl
push
outsl
je
dec
push
insl
add
js
add
add
add
push
jns
popa
mov
gs
jb
outsl
push
insb
pop
gs
cs
jne
cmpsl
add
stos
add
pop
add
cmp
add
add
mov
add
add
adc
or
mov
pop
mov
push
outsb
in
sahf
pop
cmpsl
in
dec
andl
jmp
jbe
push
lds
mov
cmp
orb
jecxz
jl
cmp
movsl
jns
dec
in
sub
cmp
xchg
pop
inc
in
add
and
aam
mov
not
cmp
roll
or
jae
push
cs
test
int3
adc
add
enter
xchg
xchg
inc
fnsetpm(287
xor
jo
dec
pop
cmp
into
xlat
movsb
add
rorb
xor
cmp
into
mov
and
in
pop
cs
lret
callw
xor
xchg
pushf
cmpsl
js
pop
sub
push
mov
outsl
sahf
xchg
ficoms
pop
pop
mov
in
mov
jne
fcoml
cmc
cli
adc
fidivs
inc
fcmove
outsb
fwait
cltd
mov
aaa
or
pop
mov
jl
ja
xorb
cmp
xor
xor
mov
in
fists
xor
addr16
xchg
test
icebp
push
pop
inc
fwait
addr16
lock
sbb
jb
jne
push
stc
js
pop
mov
imul
or
cmpsb
push
ret
inc
aam
add
sub
fisttps
mov
and
xchg
shr
ret
lock
xorb
inc
jl
popa
add
push
movsl
sbb
js
or
sub
cmp
mov
or
gs
cltd
fmuls
cmpsb
cltd
jge
xchg
sti
push
int
int
sub
mov
lret
into
cmpsb
loopne
push
repnz
ss
jo
es
test
jg,pn
loopne
dec
mov
inc
inc
jmp
xchg
jne
inc
sub
insl
xchg
imul
fld1
sbb
test
in
or
inc
mov
mov
push
shll
inc
je
cli
sbb
adc
jl
sub
clc
xor
in
push
test
xchg
fdivr
or
mov
outsl
ret
cmp
aam
ljmp
lret
fwait
mov
ret
mov
jle
jo
inc
push
pop
sbb
cmpsl
xchg
mov
cmp
repz
arpl
jge
pop
jmp
dec
pop
fwait
aad
push
add
mov
adc
clc
in
push
leave
rol
lret
xor
jno
lea
cwtl
out
inc
dec
lds
and
cltd
mov
popf
adc
iret
sub
push
sub
adc
and
adc
or
push
arpl
je
or
jg
lret
cmp
add
enter
movsl
negl
mov
movsb
jmp
push
inc
je
mov
xor
movsb
out
pop
fsts
test
test
movsl
pusha
fs
cltd
jns
push
rcl
pop
stc
xchg
ret
je
jmp
push
fists
int3
in
sbb
xlat
mov
jle
jmp
dec
aam
jno
jl
insl
ret
or
sub
cmpsl
ds
scas
sub
andb
cmpsb
outsl
std
mov
roll
movsb
cltd
or
xchg
xchg
scas
dec
and
test
gs
jne
dec
jne
mov
int3
cmp
and
dec
inc
mov
sahf
ret
jae
jl
aam
and
xchg
sahf
cmp
sbb
inc
dec
aam
jbe
mov
push
bound
addl
inc
call
es
jp
lahf
add
push
mov
scas
mov
sarl
packuswb
mov
into
lcall
in
fldl2e
mov
and
dec
mov
dec
mov
mov
or
dec
lock
testb
imul
ret
js
sbb
sub
test
push
shrb
jmp
jmp
sub
stos
fldcw
cmpsl
cmp
xchg
and
addl
jno
mov
mov
cltd
shrl
or
adc
movsb
jmp
std
cmp
in
adc
data16
mov
cwtl
xor
icebp
push
aam
jns
jle
nop
in
imul
xchg
push
in
jp
pusha
pushf
sbb
lods
cmp
hlt
scas
cli
jmp
inc
dec
cmp
mov
rep
lods
and
clc
push
pop
inc
out
out
cltd
jns
adc
push
aam
inc
mov
mov
mov
lods
pop
mov
cmp
test
data16
int3
mov
lahf
jmp
sti
bound
mov
daa
iret
fstpl
sub
outsl
cmpsl
jne
xlat
out
pop
push
enter
or
aaa
push
push
xchg
mov
mov
lahf
fildl
xor
jp
hlt
jle
mov
jbe
cltd
sti
arpl
adc
push
outsl
mov
fistpl
mov
ja
add
xchg
push
ja
push
pop
loope
cld
outsb
sbb
sub
ret
sbb
xchg
test
or
scas
inc
inc
cmp
in
jb
call
fisubrs
les
adcb
je
mov
stos
mov
cmp
lods
leave
jl
and
lods
jbe
mov
push
sbb
daa
cli
popf
mov
or
or
aas
cmp
inc
shlb
pop
sbb
pop
inc
cld
ret
mov
and
aad
and
dec
scas
sub
mov
ret
loopne
inc
das
in
lcall
test
push
jo
cmp
int
mov
add
faddl
inc
mov
push
outsl
mov
sbb
cmp
pushf
loope
ljmp
movsl
and
loopne
push
sbb
lcall
stos
je
out
pusha
inc
addr16
fstl
mov
stos
jb
inc
les
arpl
pop
sbb
mov
xor
aad
adc
loop
lods
xchg
sub
leave
sub
andl
jb
rorb
and
xchg
call
pop
test
sub
cmp
push
sar
ja
aad
insl
adc
push
mov
lods
inc
out
xchg
std
test
jg
pop
add
ret
jp
pop
mov
xor
aam
test
cmpsl
push
adc
pop
fisubrl
pop
sub
insb
cmp
aas
push
push
aam
fsub
std
xor
push
fsubl
sahf
sub
repnz
out
int
hlt
loope
mov
push
mov
sbbl
dec
lods
xor
int
call
adc
inc
ret
sub
fsubs
lret
xchg
data16
fstps
mov
jo
lock
fistps
clc
pop
xchg
xchg
jge
adc
pop
test
jle
in
scas
xchg
imul
sub
clc
add
imul
ja
std
add
sub
push
cmp
sbb
or
repnz
lods
stos
add
or
imul
mov
mov
hlt
push
dec
fisttps
daa
adc
ds
mov
mov
pop
out
sti
fstpt
xor
gs
cmp
xchg
ljmp
int3
sbb
pop
pop
rcll
es
xchg
or
mov
movsb
ja
xchg
shlb
out
pop
test
icebp
pop
addr16
adc
test
or
mov
call
xor
push
pop
xor
jg
xor
mov
cs
cld
sub
jne
je
pushf
mov
xor
popf
repnz
scas
or
push
add
outsb
mov
jge
orl
xchg
lret
jns
sbb
or
dec
pushf
subl
and
sbb
xor
push
or
shll
in
jbe
pop
mull
mov
addb
sti
arpl
mov
imul
imul
jmp
jg
and
mov
inc
push
aas
out
jb
daa
pop
fmulp
sbb
push
les
int
lea
inc
out
test
and
push
loope
out
pop
xchg
push
jmp
icebp
in
cmp
fxtract
dec
inc
cld
sub
fwait
sbb
ljmp
mov
nop
pushf
mov
and
sbb
cmp
adc
or
dec
pop
fnstenv
test
std
inc
adc
pop
test
das
ds
aam
jle
int
dec
jecxz
inc
enter
pop
arpl
xor
fnstenv
int
rolb
int3
pop
mov
in
lcall
je
aad
shl
sbb
shlb
mov
cmpsb
mov
mov
shrb
call
pop
inc
ss
inc
loop
add
xchg
xchg
out
insl
cmp
call
fisttps
or
popa
stc
fisttps
push
out
sbb
inc
sub
hlt
push
je
rorl
pushf
negb
movsb
cmp
leave
pop
dec
aad
mov
outsb
or
xchg
cmp
push
scas
jmp
or
pop
pop
dec
andb
sahf
pop
loop
fstpl
push
mov
inc
adc
lods
push
xor
inc
ljmp
xchg
out
pop
icebp
pop
mov
negb
push
xchg
adc
loopne
roll
mov
data16
fnstenv
xchg
imul
mov
out
mov
jno
andb
dec
mov
pop
cmp
insb
add
mov
pop
push
push
int3
out
xchg
addb
lock
pop
xlat
inc
ss
iret
clc
and
sub
je
mov
mov
dec
je
xchg
scas
dec
inc
in
bound
xor
adc
lods
add
xchg
je
arpl
jae
xor
mov
jnp
sbb
test
jns
push
nop
inc
in
ss
jge
std
ja
add
iret
popf
lds
xor
xchg
insl
ret
jecxz
fidivrl
ret
mov
loopne
pop
adc
je
inc
mov
sbb
xchg
xchg
hlt
mov
push
inc
add
aas
fldcw
cmc
jne
push
or
popa
rcrl
insb
pop
xor
sti
mov
loop
inc
push
xor
xor
xor
lret
inc
xor
dec
fnstenv
ja
movsb
sbb
cmova
or
cmp
cmp
lret
fidivs
add
jno
stos
and
or
fdivrp
out
xor
xchg
pop
inc
aas
push
dec
sbbl
outsl
pop
or
push
stc
ficoml
xor
lods
jl
mov
push
imul
cmpsl
imul
cmp
fnstcw
dec
cmp
xor
push
mov
pop
outsl
sbb
test
push
jnp
and
out
lret
cli
es
mov
imul
lahf
pushf
in
mov
test
and
loope
pop
xor
ret
inc
inc
cmp
dec
inc
xchg
xor
pusha
icebp
xor
ret
loope
in
adc
xor
sahf
mov
test
dec
jbe
inc
leave
sub
and
icebp
xor
fnstcw
lock
mov
jmp
xor
stos
fsts
pop
mov
pop
sub
and
leave
imul
fsubrp
mov
xor
in
jmp
pop
cmp
fmul
push
xchg
shll
mov
sub
mov
jbe
pop
adc
movsl
add
pop
add
xchg
sub
pop
out
push
mov
or
dec
insb
mov
lock
pop
pop
dec
je
and
aad
leave
stos
fildl
and
sbb
dec
mov
push
sub
cvttps2pi
mov
mov
inc
cmpsb
lahf
mov
or
movsl
stos
or
or
mov
sub
add
sti
mov
into
loope
test
cltd
add
pop
or
push
pop
aam
ljmp
xor
inc
mov
je
test
iret
or
inc
test
aaa
cmp
xchg
ds
pop
jl
decb
push
pop
add
sti
mov
xor
dec
adc
sahf
or
aaa
push
pop
sahf
rol
loopne
cmpsl
add
pusha
cld
int3
xor
mov
adc
or
add
lods
std
mov
fwait
hlt
jmp
cmp
push
mov
rcrb
bound
pop
ljmp
fildl
jae
mov
pop
xchg
adc
sbb
adc
hlt
aam
xchg
clc
cmp
addr16
sbb
inc
cmpb
pop
cmp
sbb
mov
jmp
cmp
jge
lret
pop
push
lcall
in
outsl
sub
mov
popf
pop
sti
mov
push
clc
adc
xlat
and
mov
push
and
leave
test
jne
mov
dec
out
in
xchg
cmp
mov
icebp
sbb
popf
jno
xchg
fwait
aam
enter
lds
std
mov
pop
daa
mov
push
lods
pop
cmp
sbb
ret
xor
dec
pop
and
dec
jecxz
loopne
lea
loop
lods
sbb
in
lds
cltd
cmp
xchg
pop
sub
jo
push
clc
aaa
pop
ss
sbb
cmp
popf
in
adcb
cmc
sti
dec
cli
adc
push
jp
testb
xchg
lds
movsl
lock
rcrl
lahf
arpl
std
sub
fstps
add
insb
lods
insb
int3
fisubl
fldcw
out
das
clc
sub
pop
mov
insl
mov
xchg
pusha
adcl
pop
pop
or
movsl
loop
or
push
add
arpl
sub
imul
mov
mov
pushl
jne
and
sub
or
inc
lahf
fwait
xchg
pop
cmp
jle
repnz
movsl
sub
pop
xlat
pop
fnstenv
imul
or
rcll
imul
mov
mov
mov
adc
sbb
in
js
mov
sub
test
xlat
cwtl
adc
mov
adc
scas
push
sahf
shrl
adc
mov
pop
js
add
mov
mov
jno
mov
dec
pop
insb
and
xor
test
pop
pushf
dec
js
adc
push
cmc
mov
or
adc
lods
add
nop
int3
xor
pop
inc
flds
and
inc
nop
shll
icebp
jae
lcall
sub
pop
imul
cld
pop
cmc
and
inc
cmp
imul
push
popfw
cmp
pusha
int3
xlat
insb
pop
add
dec
xchg
leave
pusha
adc
pushf
icebp
das
lock
imul
arpl
cmp
test
js
fistpl
pusha
imul
or
int
inc
xlat
mov
pop
dec
xchg
sub
dec
mov
inc
fwait
test
jnp
addr16
inc
in
lcall
popa
xchg
mov
mov
sub
out
aas
enter
cmpsb
mov
jne
out
sbb
sahf
cwtl
mov
xchg
outsl
cwtl
add
notb
push
lods
into
mov
fs
cmc
and
push
cmp
cmp
lret
cmpsl
ret
loop
dec
ss
or
mov
cmc
push
rcl
xchg
out
jo
loopne
ret
movsl
stos
out
push
and
in
mov
push
xor
sbb
insl
movl
add
arpl
pop
xchg
ljmp
pop
rcr
xor
fcompl
and
adc
mov
inc
push
mov
xor
movsl
mov
mov
sub
popl
sahf
aad
push
loopne
jp
cmpsl
rclb
mov
xchg
cld
adc
mov
push
cmp
lret
mov
jo
pop
push
sahf
jge
ja
push
jle
pop
sub
sbb
loopne
outsl
shrb
inc
les
push
repnz
dec
pop
pop
push
push
mov
imul
cli
xchg
faddp
roll
mov
int3
mov
dec
sbb
push
scas
movsl
cmpsb
inc
loope
jnp
gs
push
jae
enter
mov
adc
rcrl
pop
sbbl
sti
loop
lock
outsl
fbstp
jns
sub
aad
fbld
jge
mov
ja
popa
out
test
outsl
int
cld
pop
push
pop
nop
cltd
pop
in
or
fsubp
fstpt
push
ret
pop
mov
ds
outsl
xchg
add
scas
addb
in
test
pop
push
stos
inc
lds
stos
mov
jo
fistl
mov
push
dec
arpl
lahf
clc
in
loope
lock
imul
ret
sub
lea
jecxz
ja
pop
cld
sti
dec
xor
pop
rclb
dec
dec
lods
mov
insb
ljmp
jnp
mov
rcl
sbb
lret
lods
aad
outsb
out
fldt
cmp
in
cli
rorl
fxch
inc
loopne,pt
mov
stc
dec
sub
sub
cmpsb
xchg
cmpsb
push
mov
nop
sbb
mov
xchg
stos
inc
push
neg
mov
push
into
aad
test
jbe
andl
call
add
xchg
add
xor
fstl
sarb
iret
imul
shll
mov
jle
ret
sub
mov
ja
cwtl
cmpsl
or
sub
pop
sub
popf
pop
push
iret
adc
mov
dec
rclb
mov
and
clc
out
push
loop
leave
dec
xchg
xchg
popf
cmp
mov
orb
mov
mov
mov
inc
call
and
test
out
daa
dec
sbb
cs
mov
mov
movsl
sub
cmp
mov
inc
inc
xor
sub
mov
dec
fwait
aad
adc
sbb
push
sbbb
jne
pop
push
shlb
sbb
lret
lret
adc
or
scas
pushf
rolb
aas
sbb
cli
cs
leave
sbb
imul
xor
cmp
push
clc
fnsave
in
sbb
scas
sbb
in
dec
inc
push
cld
jne
fimull
popf
or
mov
enter
scas
ret
lds
xchg
testl
cmc
dec
pop
push
ret
cmp
lret
es
push
xor
mov
jp
aad
fadds
sub
ss
or
imul
cmp
cld
add
pusha
leave
insl
icebp
sti
mov
push
mov
jl
mov
out
add
mov
fbld
pop
jge
push
mov
inc
cmp
orl
lret
rcpps
cltd
mov
cli
sarl
stos
push
xchg
ficoms
outsl
rorl
js
imul
push
scas
in
sbb
clc
xchg
mov
sbb
fnstenv
data16
mov
mov
insl
int3
divb
cmp
pushf
cmpsl
sbb
and
mov
mov
dec
push
bound
dec
insl
or
and
adc
iret
mov
push
xor
imul
rcrl
cmp
loop,pn
fucom
repz
andps
sbb
cmp
push
test
xor
push
push
inc
jno
and
mov
mov
test
hlt
ficomps
insb
mov
pushf
iret
fiaddl
mov
movsb
mov
mov
xor
xchg
cmc
testl
xchg
add
xchg
mov
movsb
imul
xor
jmp
cmp
scas
or
inc
adc
movsb
push
xor
out
dec
and
xlat
cmp
push
repz
or
pop
mov
mov
xor
push
int3
aaa
loopne
outsl
mov
pop
sbb
pop
fldcw
xor
xor
lret
cmp
add
add
add
stos
add
pop
add
cmp
add
add
add
add
mov
add
add
add
add
add
or
stos
stos
add
ja
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
add
add
add
add
and
add
add
add
add
lds
inc
add
adc
in
add
insb
add
add
add
push
add
add
add
adc
popa
add
add
add
add
add
mov
add
add
add
push
add
jne
and
push
add
jb
push
gs
add
dec
je
fs
fiaddl
sub
inc
sbb
rcrb
push
inc
pop
push
fadds
add
in
or
inc
xorb
insl
or
or
mov
cld
mov
rcrb
cld
adc
push
insb
leave
adc
or
xor
adc
add
enter
fdivr
clc
add
add
adc
add
adc
mov
push
add
add
call
push
add
add
lcall
sub
decl
rolb
add
add
incl
jne
lret
cmp
dec
xor
adc
call
pusha
adc
push
add
add
xor
add
push
add
add
add
or
xor
add
insl
jb
je
js
outsl
outsl
outsb
adc
add
insb
inc
imul
outsb
jns
addr16
inc
gs
rolb
popa
push
imul
jne
inc
push
insb
add
insb
jns
outsl
outsl
imul
je
je
je
insb
add
add
push
add
and
add
loopne
add
add
jo
add
cmpsb
adc
iret
sub
outsb
push
mov
scas
jae
jle
lahf
bound
mov
cmpsb
test
js
ffree
stos
dec
and
inc
inc
and
stos
cltd
shll
sahf
cltd
mov
mov
lds
rcrb
pushf
es
xchg
mov
add
and
mov
mov
push
xchg
cmc
mov
xor
mov
subb
adc
sub
fnstenv
pop
dec
ret
jae
inc
pusha
hlt
or
xor
stos
fcoms
in
add
jge
jmp
push
add
add
fs
das
je
clc
and
dec
std
data16
es
adc
nop
test
mov
xor
push
add
out
jae
pop
mov
xchg
mov
js
adc
test
icebp
movsb
lret
dec
jg
in
ds
cmp
cmc
scas
jg
sbbb
ret
inc
sub
adc
push
fmulp
mov
push
sub
xlat
cmp
movsb
pop
in
sahf
sbb
inc
pop
sbb
fisubrl
mov
add
pushf
push
and
idivl
jl
rorl
into
adc
das
dec
cli
xchg
mov
ljmp
push
xor
cmpsb
pop
scas
or
test
movl
fimuls
jl
push
jg
push
mov
adc
mov
dec
repz
dec
js
mov
scas
and
lcall
adc
popa
iret
sbb
popf
test
scas
mov
data16
and
scas
push
loopne
lds
test
dec
aas
add
cli
jno
mov
movsl
cmc
aad
arpl
sub
mov
subl
sbbb
cmp
rcrl
gs
add
std
daa
notb
mov
lods
rclb
inc
push
scas
lods
loopne
decb
adc
xchg
push
movsl
daa
aam
dec
mov
enter
shll
xor
xlat
orb
and
mov
repnz
ja
clc
sti
loopne
mov
mov
mov
lods
push
add
or
inc
push
dec
or
adc
mov
shl
icebp
xchg
sbb
push
cmp
ss
xor
stos
and
xchg
decl
loopne
cmp
push
test
jle
add
hlt
leave
xchg
cmp
mov
xor
and
xor
xor
mov
jno
cwtl
jne
ds
sub
add
and
mov
xlat
jo
cs
test
sub
repnz
into
add
scas
jle
imul
loope
int3
push
cmpb
cmpsb
outsb
imul
lods
ret
inc
cmp
test
mov
and
repz
xor
repnz
addb
push
insb
popa
dec
int3
daa
mov
into
jle
movsb
pushf
xchg
ss
or
cmp
pop
cmp
into
dec
xchg
pop
push
inc
jb
lea
fbstp
adc
in
jle
mov
xor
inc
push
xchg
push
fwait
sahf
mov
inc
and
mov
cmp
stos
pop
add
inc
fwait
stc
aam
inc
push
mov
xor
lea
psrad
ljmp
cld
int
loope
jno
cs
lret
fsubs
movl
imul
add
jbe
sbb
stos
mov
mov
aad
std
adc
test
mov
cwtl
or
sbb
push
jnp
mov
jmp
bound
pusha
mov
cmp
call
or
sub
or
fsubrs
mov
test
or
mov
adcl
add
adc
mov
add
ljmp
repz
cmp
sub
int
dec
cld
fldl
jecxz
xor
cmp
xorb
pop
fucom
loop
std
aas
cli
add
add
js
jmp
lcall
mov
jne
pop
add
rcll
mov
xor
push
insb
je
cs
add
mov
clc
sub
aam
cs
loopne
dec
jl
or
movsl
aas
cmp
cli
xchg
stc
and
repnz
and
jb
outsb
xchg
xlat
jmp
int3
divps
add
mov
xlat
shll
push
jae
adc
sbb
fwait
mov
sbb
cwtl
cmpsb
add
adc
aas
sbb
sbb
cmp
cmc
mov
hlt
out
pop
mulb
jmp
ja
xchg
push
das
daa
ljmp
sbb
jle
int
roll
and
dec
add
jecxz
dec
jle
push
mov
push
or
divb
xor
ds
pop
roll
setnp
mov
cmp
dec
loop
mov
jg
daa
dec
aas
negl
sub
inc
pop
jns
mov
popf
stos
lea
aam
add
or
adc
aad
sub
and
pop
and
js
shlb
insb
ds
xchg
or
sub
inc
push
rcr
aam
and
jae
hlt
xchg
cwtl
repz
adc
daa
loope
in
push
or
cmc
arpl
pop
ret
fcomps
push
xchg
fs
movsl
fisubl
push
cwtl
ret
fadds
sbb
pop
sbb
pop
push
lock
or
sub
lcall
fldenv
adc
outsb
in
sbb
mov
pop
inc
aad
xor
sbb
inc
pop
push
sbb
inc
mov
mov
and
fisttps
inc
jo
loope
sbb
push
jae
pop
xor
mov
in
std
hlt
adc
inc
add
jmp
cltd
cwtl
push
sub
add
inc
mov
negb
pop
testb
sahf
xor
out
mov
insl
add
test
test
cmp
push
add
push
sahf
jb
jne
fidivrs
mov
xor
push
fs
mov
cli
xor
inc
or
daa
mov
jns
xchg
inc
insb
adc
mov
sbb
cwtl
popa
inc
mov
sti
es
dec
fs
aas
testb
push
lds
cmpsb
mov
jae
mov
sahf
pop
imul
push
adc
movsl
push
dec
pop
orb
test
in
inc
pushf
cmc
jle,pt
test
imul
lock
dec
jae
mov
call
mov
xor
add
add
mov
lods
cmp
adcb
lock
or
inc
push
sbb
sti
test
lods
xchg
out
dec
push
cli
and
sub
in
std
jne
dec
dec
mov
stc
enter
xor
add
popa
shll
aam
jecxz
sbb
mov
sub
pop
repz
inc
push
sbb
idivb
cwtl
xchg
div
mov
pop
lock
shr
or
cmpsb
stos
iret
or
add
negl
mov
aas
or
fldenv
and
jae
js
inc
icebp
leave
cmp
push
pop
cmp
or
aaa
in
fwait
imul
sti
vmread
add
pop
cltd
mov
aaa
mov
icebp
mov
and
jle
or
jmp
and
xor
sbb
test
addl
dec
sub
or
fistpll
jp
dec
adc
imul
dec
out
mov
mov
adc
sbb
pop
sub
xlat
adcl
pushf
outsl
cltd
sbb
out
and
xchg
in
inc
inc
popf
stc
dec
js
lock
mov
inc
xor
push
addr16
gs
pushf
xlat
out
and
and
scas
xor
fistl
cltd
jo
jb
out
sbb
jecxz
fcom
or
sbb
pop
repz
rol
mov
int3
inc
mov
dec
fs
insb
xchg
addr16
call
xchg
jnp
push
xor
mov
cmp
xor
xchg
out
cli
pop
std
rdtsc
pop
hlt
cmp
adc
jp
inc
adcb
hlt
subl
sarb
mov
call
lcall
es
mov
dec
add
pusha
inc
mov
pop
cltd
rcrl
xor
cltd
mov
cmpsb
pop
cmp
lret
mov
ss
xlat
shrb
stos
dec
lret
inc
push
leave
pop
test
mov
pop
dec
js
shlb
and
mov
push
into
dec
mov
push
sarb
and
mov
cmp
cmp
cmpsb
inc
push
jmp
cmpl
leave
loopne
adc
pop
jle
inc
lret
out
ret
xchg
xor
fiadds
js,pt
mov
push
aam
pushf
fsubrl
call
mov
andl
imul
inc
sub
fsubl
push
jns
pop
call
test
rol
mov
mov
filds
scas
mov
out
add
push
jmp
dec
iret
push
aas
pop
and
daa
mov
outsl
loopne
mov
aad
stos
nop
repnz
and
mov
inc
fsubrl
imul
mov
aas
sub
int
addb
ja
mov
sub
add
xor
cmp
clc
cli
movsb
addr16
aaa
sbb
inc
std
iret
pop
inc
insb
mov
pusha
or
movsl
jbe
cmc
sahf
push
pop
bound
dec
cmp
sub
lea
fildl
mov
shrb
icebp
pop
lods
mov
push
xor
sub
lds
mov
aas
and
or
xchg
test
mov
sub
add
test
ds
xchg
in
aaa
jecxz
lret
bound
out
push
fists
inc
aas
cwtl
and
jge
push
cmp
xlat
pop
sub
jae
mov
sub
xor
xchg
lahf
or
mov
or
sbb
and
mov
daa
mov
mov
cmp
mov
and
xor
arpl
and
lods
popf
mov
dec
mov
mov
mov
push
sub
and
loopne
pop
inc
sbb
jns
and
cmp
push
iret
cltd
mov
in
xlat
fldenv
filds
pop
popa
aaa
js
pusha
fmuls
jmp
jb
loopne
orl
es
add
pop
cmpl
push
shlb
cmp
cmp
lock
notl
cmpsl
sti
fwait
mov
sbb
rclb
xor
and
cmpsl
jecxz
jae
dec
mov
mov
and
ljmp
rep
je
int
js
xorl
fisttps
dec
pushf
cli
stc
lahf
and
push
rclb
mov
inc
cmpl
lret
fnstsw
cltd
sub
jno
dec
xchg
fstpt
cmc
fimuls
xchg
test
test
xlat
push
cmc
push
jecxz
test
xchg
sbb
dec
mov
pop
lods
dec
imul
push
mov
dec
push
inc
or
sub
cmp
push
push
jne
sub
xor
xlat
aad
push
adc
aad
adc
pop
push
push
clc
mov
mov
or
mov
jno
push
mov
inc
hlt
lret
mov
call
imul
insb
popa
fstps
pop
inc
mov
or
shlb
pop
jno
mov
mov
xor
movsb
jle
mov
idiv
mov
ljmp
mov
mov
jecxz
lods
fnstcw
xchg
mov
popa
jle
mov
jl
add
mov
sub
daa
sub
movsb
cld
and
lea
roll
xchg
lock
jae
das
test
sti
pxor
add
mov
mov
sub
xchg
pop
pop
ss
or
fisttpll
or
sub
dec
aam
jp
movsl
stos
sub
dec
jp
jo
cmp
in
stos
add
orb
test
push
inc
out
cmpsb
cli
rcrb
pop
jnp
mov
cmpsl
test
adc
sbb
dec
pop
add
mov
scas
popf
iret
sti
gs
pop
jo
lods
pop
dec
clc
add
repnz
sahf
cmp
sub
ljmp
movsl
add
ss
jne
leave
push
mov
mov
and
mov
je
cli
loope
ror
js
scas
pop
movsl
out
jecxz
lretw
jge
mov
into
jg
fs
std
adc
mov
jnp
jecxz
test
mov
insb
enter
lret
jp
sbb
sub
lea
sub
pop
or
mov
sub
inc
loopne
int3
lock
push
icebp
or
mov
sbb
pop
adc
xchg
dec
cld
dec
popf
adc
pop
adc
test
stos
dec
mov
adcl
dec
mov
fisubs
inc
ljmp
loopne
test
or
pop
cmp
in
inc
xchg
test
mov
adc
cmp
jae
ffree
lret
mov
adc
mov
xor
repnz
into
stc
scas
push
and
mov
push
popa
cld
clc
aas
mov
sub
push
hlt
mov
inc
mov
xor
xlat
bound
jg
js
or
test
inc
mov
mov
inc
imul
test
adc
jo
or
fiadds
lret
adc
sbb
jne
ret
or
aas
jmp
lods
jmp
xlat
ja
jbe
addr16
cmp
add
push
addb
ja
imul
jnp
xor
stos
and
mov
pop
stos
mov
lods
ss
or
mov
clc
pushf
pusha
in
ljmp
jno
push
stos
mov
insb
loop
sbb
repnz
fcomi
and
xchg
and
sub
xor
outsb
je
scas
enter
lds
outsl
inc
outsl
mov
xchg
repnz
pop
xchg
and
in
sbb
dec
pop
cmp
arpl
popa
lcall
je
xor
cmp
and
movsl
mov
mov
pop
pop
mov
addr16
jp
pusha
fisubl
xchg
repz
jl
jne
or
and
fisttpll
in
or
lods
inc
fsubl
mov
pop
call
gs
imul
ss
popa
xor
inc
sbb
mov
test
or
xor
sbb
and
adc
add
pop
mov
out
ficoml
clc
sbb
dec
inc
data16
in
or
pop
xchg
sbb
push
mov
cmp
insl
xor
xchg
scas
jl
data16
fsubrs
cmp
fisttpll
fwait
sti
and
adc
fadd
cmpsb
mov
lds
in
sahf
dec
stos
out
cs
cli
jl
sbb
int3
and
and
xor
aas
adc
cmp
ret
stos
mov
jmp
test
out
push
hlt
mov
ja
sub
xchg
loop
lds
sbb
mov
mov
sub
dec
pop
out
mov
mov
shll
pop
loope
xchg
outsb
shll
xchg
sub
popa
pusha
pop
jmp
repnz
cmp
jl
inc
lods
shrl
aam
xor
push
inc
emms
insl
dec
cmp
mov
jle
int3
jg
inc
dec
add
push
push
inc
dec
inc
and
cmp
mov
inc
fidivs
js
icebp
xchg
cmp
pop
or
adc
loope
lods
popf
xchg
icebp
inc
mov
lods
neg
jl
out
aaa
ret
xchg
mov
sub
mov
repnz
in
ss
xchg
xor
cltd
jne
cld
cwtl
jno
push
adc
call
test
mov
inc
pop
or
movsl
sbbl
cmp
faddl
into
and
pop
and
push
roll
pop
cwtl
pop
mov
aad
push
pop
fwait
cmp
negl
ret
adc
lcall
leave
adc
xor
adc
insb
ja
sbb
pop
hlt
inc
dec
out
lret
mov
and
sbb
out
cmp
ss
inc
test
mov
stc
pop
mov
scas
test
ror
xor
cmp
mov
or
mov
lret
mov
pop
je
iret
add
pop
fadd
jnp
cmpsl
sahf
mov
lret
test
adc
push
mov
push
les
xor
repz
adc
stos
and
mov
inc
rcr
and
mov
es
cmp
insl
insb
cmp
imul
push
sub
sarb
add
sub
push
das
xor
cmpl
cs
enter
pop
inc
out
sub
xor
cmp
insl
push
stos
push
or
xchg
call
push
inc
mov
shlb
add
lcall
sub
adc
pusha
ret
push
adc
mov
repz
xchg
fdivrp
sub
or
popa
xor
lcall
mov
mov
pop
jle
rclb
lods
or
adc
dec
subb
shl
xor
jb
test
loope
lea
sub
pusha
in
je
lret
loope
sub
in
aad
icebp
in
sbbl
mov
xchg
scas
pop
sbb
mov
cmp
push
mov
jnp
shrb
movsl
cmp
push
faddp
adc
dec
inc
and
cs
clc
andb
stos
pushf
xor
lock
mov
mov
cvttps2pi
xlat
cmp
les
fsin
pop
ret
mov
add
pop
add
lahf
arpl
jnp
stos
push
push
mov
mov
js
rcrb
push
mov
push
inc
adc
inc
loop
mov
xor
mov
jb
test
aas
pop
fs
mov
adc
fsubl
and
add
mov
data16
sbb
lcall
imul
enter
lret
fnstcw
mov
orb
iret
fsts
cmp
mov
das
push
pop
test
fisubrs
bound
mov
push
inc
jnp
ja
jne
xlat
insl
pop
jne
push
loop
aaa
mov
mov
mov
mov
outsl
or
or
mov
popa
add
mov
push
lahf
shr
and
out
adc
test
xchg
add
ret
inc
xchg
jecxz
push
pop
dec
jno
es
jno
jle
xacquire
push
fwait
jns
xor
push
cmc
cli
add
add
jne
add
add
add
add
add
add
rolb
xchg
add
add
add
push
add
add
add
add
add
add
nop
add
add
add
add
add
add
add
mov
add
add
add
add
and
inc
adc
add
ljmp
ja
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
add
add
sti
add
gs
add
add
add
add
add
add
add
fwait
add
add
and
add
outsl
jge
add
add
xchg
add
add
add
filds
arpl
jae,pn
push
arpl
je
sub
add
jne
push
inc
aaa
add
out
pop
fidivrl
mov
adc
mov
lea
inc
testb
cs
adcb
adc
add
clc
add
lds
adc
jge
out
mov
lea
decl
mov
gs
inc
rolb
jbe
cmpl
add
adc
xor
push
push
call
cmp
add
fsubrl
adc
mov
lea
add
adc
mov
clc
inc
roll
add
clc
incl
cmp
add
add
push
lock
or
add
add
fiaddl
addb
add
add
sbb
clc
add
add
push
imul
sub
inc
gs
inc
add
arpl
outsl
adc
inc
inc
push
popa
add
inc
push
popa
gs
int
add
add
gs
addr16
push
dec
jb
pop
inc
imul
arpl
add
add
add
sub
add
add
add
ficompl
pop
dec
imul
lcall
xchg
mov
icebp
dec
or
xchg
pop
loopne
int3
mov
cmp
into
arpl
fdivp
into
jmp
or
repnz
and
push
cmp
mull
enter
sbb
fs
fldcw
lcall
adc
mov
call
cli
subl
or
pop
jb
stos
xor
repz
imull
adc
leave
shl
sub
std
aaa
je
jbe
ljmp
into
lock
push
push
lcall
lds
sub
mov
cmp
fisubrl
add
sti
out
js
jb
orb
int
mulb
imull
dec
mov
jge
add
test
xchg
roll
adc
push
and
pop
dec
loopne
outsb
adc
mov
cmpsl
adc
mov
cmp
inc
adc
stos
adc
into
loope
or
add
shl
nop
sbb
jmp
imul
push
rcl
into
mov
xor
jl
roll
imul
cmpsl
jne
fwait
lcall
rcrl
fwait
cmp
or
pusha
pop
mov
call
inc
cmp
mov
cs
cmp
and
imulb
mov
push
imul
mov
pusha
test
and
and
xlat
cmp
repz
test
xor
jl
cld
add
dec
movsl
mov
test
mov
mov
imul
icebp
jp
fs
sub
sbb
pusha
aas
adc
mov
pop
jmp
mov
test
xchg
sub
xchg
xchg
das
popa
or
icebp
xor
cmpsb
icebp
sar
test
cmc
das
lds
adc
or
lret
adc
in
leave
push
sahf
lock
pop
pop
mov
sbb
rcr
sbb
xor
jnp
push
dec
sarb
repnz
aad
pusha
inc
jnp
adc
out
adc
lods
pop
and
popa
movsb
incl
xor
shlb
fisubl
stos
mov
fidivrl
dec
aam
addr16
or
int
or
das
mov
gs
clc
pop
or
mov
adc
cmp
push
shlb
add
pop
xchg
pop
rcrb
ficomps
rorb
gs
in
dec
mov
cmp
aad
insb
lods
mov
lock
cmp
pop
and
adc
rcrl
fcoml
jmp
lea
in
add
fbld
test
push
mov
mov
jmp
mov
inc
repnz
sub
in
lcall
imul
mov
push
xlat
mov
mov
xor
fwait
xchg
push
inc
xor
stos
inc
or
push
cmpsl
enter
mov
or
push
push
ljmp
ja
adcb
or
jae
sarb
lret
dec
or
cmp
movsb
xchg
inc
lods
push
and
push
daa
xchg
test
pop
sarb
xchg
stc
das
pop
cmp
mov
push
xor
pop
push
aaa
xor
and
mov
roll
jno
push
or
leave
ret
andb
pop
pushf
sbb
into
mov
add
mov
sbb
into
lods
lret
push
lret
jg
lcall
sarb
pop
cs
xchg
imul
cmc
pop
leave
mov
xor
jno
pushf
sub
lret
mov
inc
inc
notb
cmp
pop
in
dec
fucomi
jb
mov
jne
lcall
fdivrp
dec
dec
jle,pn
xchg
pop
aad
daa
outsb
loope
sub
jnp
jbe
lret
shrb
or
loopne,pt
cmpsb
mov
repnz
int3
add
mov
sub
ss
clc
push
int3
sub
sub
lret
int3
dec
or
rcll
mov
out
pop
push
bound
clc
call
mov
adc
outsb
adcl
ja
popa
xchg
push
movsb
out
jbe
leave
or
call
das
lods
popf
icebp
rcll
xchg
cmp
mov
rolb
pop
subl
into
jg
lret
mov
add
cld
pusha
cmp
fldt
stc
mov
lret
push
daa
jae
pop
int3
push
adcb
and
cwtl
lahf
sub
sub
mov
xorl
sbb
push
push
dec
imul
xchg
filds
xor
and
aam
jae
mov
xchg
lret
data16
xchg
cs
scas
sbb
cli
sbb
xor
mov
push
xchg
push
fcmovbe
dec
mov
cwtl
or
pop
gs
mov
adc
xchg
ret
cmp
or
mov
aam
clc
and
loopne
add
xchg
imul
das
push
mov
jae
add
cmpsb
mov
iret
dec
ss
inc
repnz
and
xor
push
fistl
ret
rol
loopne
inc
push
or
jo
pop
pop
stos
or
jle
fisubrs
mov
les
inc
and
insl
push
xchg
iret
inc
mov
jne
fsubp
loope
cli
mov
insl
shlb
rorb
sub
stos
dec
cmp
in
xor
xor
aad
inc
inc
pusha
sbb
mov
jge
jo
outsb
outsl
out
sbb
dec
popa
or
cmp
push
pop
cmp
je
arpl
loop
fs
or
sub
repnz
adc
ret
popf
divb
xor
sub
xor
push
cmp
test
and
test
in
push
or
xchg
fcomp
rcr
fs
or
sub
mov
jmp
sbbb
dec
shlb
aad
adcb
lahf
pop
xor
lods
mov
cwtl
or
mov
lret
pop
aad
or
push
and
cmpxchg
cmp
scas
lea
dec
pop
out
pop
hlt
pushf
hlt
pop
lcall
daa
insb
push
jl
scas
xchg
sbb
pop
cmp
mov
add
or
pop
sbb
sub
jmp
lods
mov
sbb
test
xlat
bound
sar
rcr
sub
xchg
addr16
ret
ret
inc
push
xor
dec
clc
mov
push
xchg
dec
inc
movsl
pop
test
cmp
cmpl
pop
jl
and
mov
push
mov
push
sub
xchg
dec
or
push
pop
jns
lahf
rol
inc
push
or
call
pop
push
pusha
popf
jp
mov
daa
cmp
lea
adcb
lods
and
int
xor
jecxz
mov
xchg
mov
mov
loope
stc
adcb
enter
out
xor
imul
lahf
cmp
hlt
in
cltd
pusha
dec
inc
aas
cmp
xor
fsubrs
pop
adc
scas
push
into
push
jb
pop
or
lcall
dec
repnz
cmp
cmp
jb
ljmp
roll
and
cmp
enter
subl
shll
xchg
ljmp
jbe
aam
notb
mov
inc
dec
pop
fidivl
fldenv
or
adc
ljmp
and
and
xchg
lahf
inc
cmp
cmpsb
lock
or
data16
stos
dec
addr16
or
pop
in
call
in
popa
lea
popa
and
inc
add
inc
pop
mov
imul
aas
inc
ss
sbb
ds
lods
ljmp
cmc
inc
gs
cmpsb
cmc
movsl
clc
cmc
sarb
inc
daa
push
add
push
pop
call
xchg
in
dec
jecxz
lcall
nop
mov
cmp
fimull
nop
outsl
pop
pushw
mov
mov
inc
lcall
imul
adc
cmp
mov
mov
ror
ljmp
push
lods
or
xchg
push
in
mov
mov
fnstsw
xchg
mov
lods
xor
decl
into
jge
int
shl
out
pushf
cmc
int3
xchg
add
adc
add
or
mov
ja
movsl
xchg
test
mov
push
mov
xlat
mov
and
pop
jno
sbb
cmp
loope
xchg
adc
mov
jae
inc
mov
jnp
clc
pop
push
push
jp
clc
test
out
mov
push
xor
outsb
arpl
adc
mov
loopne
fwait
and
lds
negb
lods
jmp
dec
mov
push
mov
dec
mov
lret
xor
mov
scas
xor
ljmp
add
icebp
jp
ret
inc
data16
js
lret
sbb
cmp
mov
dec
addr16
cs
pop
mov
adc
mov
and
std
sbb
or
int
stc
cmp
add
pop
cld
adc
or
add
or
clc
lds
push
cmc
or
sub
andb
mov
dec
push
jle
mov
xor
aam
sbb
gs
repz
ret
out
xor
cmp
les
inc
in
xchg
inc
mov
ret
pop
mov
das
cmp
mov
fsubrl
std
jp
mov
adc
cmp
fxch
cmp
inc
cli
int3
mov
mov
mov
je
jo
jae
mov
jo
dec
mov
lock
sub
push
scas
mov
mull
mov
push
ror
sub
sub
fwait
out
fcmovnu
ljmp
test
jp
dec
jl
fistps
daa
stos
pop
mov
push
xchg
ds
sbb
daa
fcmovnb
hlt
jg
fwait
cltd
cltd
sub
pop
popf
xchg
sub
jmp
jecxz
push
testl
add
sti
lds
daa
insl
jne
test
cmp
sbb
add
insl
cmc
aas
mov
mov
sub
movsb
xor
or
sbb
fbstp
pop
sar
aad
fnstenv
imul
mov
cmp
cmpb
add
pop
pop
cwtl
lahf
sti
das
fwait
dec
push
dec
pop
xor
or
jo
push
ficoms
xor
mov
mov
rorl
push
and
jne
inc
jg
shrb
jl
imul
jbe
adc
leave
jbe
repnz
cmp
jmp
stos
push
leave
push
and
mov
std
inc
jl
pop
pop
xor
dec
dec
push
sti
sbb
inc
push
mov
cmp
pop
push
push
dec
stos
and
roll
daa
stc
pop
or
or
test
adc
pushf
bound
in
fcomps
call
sbb
mov
int3
jge
adc
push
lock
jnp
pop
xchg
push
pushf
mov
mov
nop
jns
outsl
pop
jnp
lret
ljmp
mov
loop
lret
repz
and
shlb
pop
jnp
mov
mov
pop
and
sbb
xchg
mov
mov
jge
mov
cmc
push
test
xchg
dec
movsl
repz
push
loop
mov
outsl
lret
dec
aad
or
or
mov
pop
sub
enter
jne
repnz
inc
mov
adc
jne
sahf
push
sub
inc
sbbb
add
repz
movsl
loop
mov
test
out
cmpb
mov
jb
sbb
ds
lods
sbb
pushf
sub
xchg
stos
dec
mov
cmp
pusha
daa
xchg
dec
and
les
xor
outsb
mov
pop
jno
dec
cwtl
in
lods
pop
mov
cmp
popa
jno
jno
movsl
decb
pop
adc
lea
mov
jne
cmp
mov
inc
inc
sbb
js
int3
add
iret
jge
dec
ds
imul
dec
inc
cmpsb
sub
data16
mov
shrb
insb
adc
je
push
leave
xor
jae
ja
mov
sub
push
pop
cmp
jl
ret
lcall
inc
mov
int
sub
mov
pop
or
hlt
and
jns
or
push
fs
rol
push
inc
cwtl
sub
adcl
xchg
idivb
or
andl
insb
ljmp
xchg
cmp
xchg
fadds
xor
fsubr
mov
jecxz
jns
xchg
jge
mov
mov
scas
rorb
mov
cmpsb
inc
xorl
pop
xor
daa
stos
jb
int
jmp
mov
xchg
jb
pop
scas
xchg
ljmp
mov
lret
fmulp
cs
in
xor
pop
jae
fwait
mov
sahf
leave
in
xchg
cmp
aaa
cmp
loopne
aad
ficoml
mov
call
in
stos
xchg
cmp
push
or
sbb
mov
scas
pusha
and
or
repz
shlb
pop
sbb
cwtl
lods
push
ds
je
pusha
pop
into
add
dec
pop
mov
push
lock
je
dec
in
outsb
fcmovne
scas
jecxz
cli
add
test
adc
xorb
stos
push
xchg
dec
lret
loop
pop
pusha
data16
aaa
mov
aam
shll
lock
fldenv
addl
cmp
dec
icebp
or
loopne
cwtl
and
shlb
lret
push
popf
mov
jl
pop
int3
ss
pop
inc
sbb
scas
push
inc
sub
repz
sarl
mov
sti
push
in
add
call
lods
jnp
mov
sbb
lret
jmp
scas
jae
mov
daa
leave
in
pop
dec
out
out
mov
inc
xchg
xchg
fnstsw
movsl
sub
mov
sub
push
pop
pusha
push
lret
adc
push
jae
xchg
dec
adc
mov
mov
xor
stos
in
icebp
sub
jnp
add
lods
dec
sbb
ret
sbbl
mov
out
mov
or
fwait
pop
or
cmc
outsb
andb
push
pop
fmull
adc
testl
and
cmp
flds
into
cmp
mov
mov
lock
adc
or
into
movsb
fcom
cwtl
imul
ja
ret
rcll
data16
js
lods
mov
dec
lret
mov
push
subl
out
pop
testl
dec
fsts
repnz
jnp
mov
repz
cld
dec
sbb
cmp
pop
xchg
imul
es
dec
ds
adc
cwtl
push
ror
pop
mov
out
lds
cld
movb
pop
fadd
orl
call
inc
push
mov
push
jmp
test
pop
mov
addr16
xchg
inc
stc
mov
in
imul
push
orl
fs
xor
xor
loopne
mov
enter
inc
lods
push
cwtl
ds
scas
pop
aam
pop
inc
lret
lahf
xor
in
test
pop
jne
lret
das
push
push
add
int
clc
ret
or
and
push
sub
or
cmc
cli
sahf
test
lret
mov
jecxz
adc
cmp
pop
jp
insl
orb
icebp
daa
cmp
mov
cld
arpl
dec
in
das
mov
xorb
outsl
les
mov
add
push
xchg
lock
les
xor
out
add
outsb
jl
insb
in
and
mov
push
adc
out
iret
jae
jns
jo
xchg
dec
or
sbb
ret
scas
test
adc
and
imul
out
inc
pusha
jp
pop
pop
gs
std
adc
pop
inc
pop
jl
jns
add
xchg
scas
lret
xchg
fdivr
push
xchg
add
js
xchg
mov
adc
dec
mov
dec
and
stc
jne
ljmp
fildll
push
movsb
pop
aaa
outsb
cmp
pushf
pop
cmpsb
loop
fbstp
sarl
loope
je
inc
loope
iret
or
imul
mov
faddl
stc
jne
dec
push
adc
pop
adc
aam
cmp
imul
test
jp
mov
inc
cmp
stos
mov
fidivrl
lods
mov
je
mov
scas
push
cmc
out
aad
lcall
or
sbb
jp
dec
dec
jo
push
inc
add
push
xor
push
jbe
mov
lods
and
push
mov
dec
imul
xchg
ss
and
mov
insl
mov
fs
ja
pop
aaa
or
jge
rclb
fists
fildl
shr
mov
sbb
lea
pop
ja
out
dec
or
and
push
xorl
sarb
adc
lock
or
adc
aas
lcall
out
cmp
jecxz
out
sub
arpl
test
mov
adc
and
fcompl
push
jp
sbb
sahf
nop
sti
xchg
cmpsl
in
repnz
mov
lock
or
pop
push
xchg
lret
fisubs
cwtl
sbb
or
int3
rolb
rcll
or
mov
rcrb
push
fcmovbe
arpl
adc
mov
xor
and
sub
adc
das
mov
cld
repnz
add
push
in
inc
outsb
hlt
aaa
movsb
mov
pushf
add
das
push
dec
jl
mov
cwtl
test
das
cmp
call
mov
jge
mov
mov
cmp
sub
xchg
ucomiss
test
pop
lea
and
sysexit
sub
ret
testl
cmc
push
jnp
dec
jp
das
adc
and
xor
clc
cs
mov
mov
mov
scas
int
jae
jo
lds
hlt
cs
shll
gs
sub
push
add
xor
or
fidivs
adc
imul
cld
test
std
sbb
xor
aad
dec
dec
scas
mov
mov
lds
xchg
bound
mov
mov
stos
mov
repz
cwtl
lock
cltd
orw
rorl
and
dec
addr16
cmpsl
sti
in
or
push
enter
int
out
subb
lcall
jne
loope
sarl
addr16
xchg
mov
outsb
ret
xor
into
jecxz
les
and
xchg
cmp
or
xor
lahf
mov
pop
fsubs
cmp
inc
push
lahf
dec
ficoml
stc
ret
fisubs
dec
jbe
xlat
movsb
je
test
dec
sub
ficoml
aad
pop
insb
mov
imul
pop
sub
or
sbb
mov
pop
cmp
sub
sbb
ror
lock
mov
add
pop
push
jnp
xlat
shlb
mov
ds
repz
add
adc
es
inc
jae
and
dec
loope
addr16
outsl
add
add
add
mov
pop
sub
add
add
add
add
add
test
add
add
fadds
add
add
add
and
add
add
add
add
add
addb
add
add
sbb
dec
int3
int3
int3
int3
int3
int3
int3
int3
jae
jb
jo
add
add
add
add
push
or
add
add
add
add
add
add
add
add
add
and
add
add
adc
add
stos
push
add
add
add
sbb
sbb
sbb
sbb
sbb
sbb
add
sbb
js
add
push
add
outsl
jbe
push
movl
add
sahf
pop
or
movl
ret
incl
sub
xchg
cmp
add
lea
adc
add
push
call
adc
testl
mov
in
push
std
jmp
rorb
add
add
leave
out
add
add
add
popl
decl
ljmp
test
lea
sbb
hlt
cld
push
add
lock
add
call
call
data16
stc
pushl
repz
or
pushl
add
adc
add
leave
add
add
add
add
add
add
add
mov
add
add
add
add
outsl
sbb
je
jae
inc
add
add
gs
je
ret
add
jae
add
outsl
add
outsl
add
insb
dec
add
push
add
gs
popa
inc
outsl
add
fs
adc
push
insb
push
add
add
add
add
add
ljmp
push
add
jp
add
add
add
add
or
dec
mov
int3
bound
loop
sbb
andl
rcrl
das
nop
dec
mov
push
fistps
sbb
es
clc
loope
xor
dec
test
inc
je
cltd
jg
cs
inc
inc
popa
fucom
jb
add
enter
mov
cmp
fnstsw
out
cmp
imul
pop
sbb
or
es
or
ds
or
push
adc
cmc
insb
int
dec
push
bound
adc
xchg
xor
mov
gs
xlat
imul
pop
das
daa
jno
xor
lret
popf
data16
mov
div
out
dec
es
loopne
sub
sub
mov
dec
out
xchg
loope
ss
pushf
jo
outsl
ss
push
cmp
mov
pop
rcl
ss
or
inc
cmc
push
add
push
jo
test
or
jl
or
int3
nop
pop
or
and
fwait
sub
inc
stos
mov
icebp
addr16
xchg
mov
dec
outsb
insb
orl
pop
cmpsb
repz
aad
test
in
stos
mov
ret
rorl
jl
xor
push
dec
pop
add
inc
es
pop
std
xlat
inc
cmp
jl
andl
dec
in
fisttpl
repnz
cs
and
adc
xchg
das
outsb
jecxz
xor
sbb
cmp
clc
pop
jg
into
add
test
mov
pop
xor
inc
pushf
mov
jmp
lret
loope
push
pop
dec
fwait
cmpsl
mov
mov
aad
mov
popf
adcb
xchg
or
aas
xor
ror
pushf
test
sahf
inc
insl
scas
insl
lods
out
dec
cmp
es
gs
add
test
xchg
fisttps
jp
cmpsl
test
mov
stos
out
xchg
push
popa
pushf
xchg
xchg
hlt
rcl
popl
mov
test
cmp
push
orl
pop
out
movsb
rcr
stc
scas
add
add
in
ficoml
inc
mov
mov
enter
ret
sub
jae
push
push
or
hlt
js
cmc
stos
dec
loopne
sbb
lahf
je
cmpsl
cmp
mov
sbb
sub
mov
cmp
xchg
scas
jo
psubsw
lcall
sbb
cmpsl
jp
aad
test
aas
mov
xchg
insl
es
outsb
popa
push
fcmovb
jmp
or
add
pop
loope
pop
jb
adc
lcall
pop
lock
pop
jge
out
icebp
cs
jg
jo
popf
jle
xchg
scas
dec
lea
roll
mov
test
cmp
in
adc
or
mov
adc
mov
mov
jne
jle
enter
mul
inc
dec
cmp
mov
jmp
push
cmpsb
movsb
dec
jge
xchg
popfw
test
aad
stc
push
sub
fcoml
ds
add
cs
je
xchg
hlt
add
jb
cli
cld
sub
leave
sbb
mulb
call
pushf
jp
orl
add
pop
adc
outsb
pop
scas
fisttps
ret
idivl
or
stos
pop
fnstcw
cmpsb
icebp
pop
sub
xor
les
pusha
js
mov
lahf
cltd
lods
fdivl
xor
mov
into
insl
jae
add
dec
test
jp
pop
shlb
xor
leave
fs
pop
imul
dec
in
and
push
adc
mov
mov
js
push
loope
sbb
insb
mov
insb
rorb
sbb
flds
adc
and
les
xchg
dec
jp
mov
mov
aaa
scas
std
setge
cltd
inc
orl
in
movaps
add
push
cltd
je
add
shrb
movsl
push
add
or
xor
pop
jge
mul
jp
cmp
push
cli
dec
cli
ret
lret
push
push
mull
outsl
loop
ret
clc
jbe
mov
sbb
fcompl
inc
xchg
cmpsl
bound
faddl
add
inc
nop
inc
mov
gs
jecxz
fistps
inc
in
or
sub
sbb
ret
scas
mov
fwait
and
and
pop
fs
lock
fisttpll
test
test
adc
mov
jns
setns
inc
dec
sub
data16
inc
pop
push
and
mov
push
dec
add
or
fs
push
pop
mov
lods
mov
sbb
xor
xchg
repz
push
ljmp
cwtl
pop
inc
cmpsl
sahf
jecxz
sbb
ja
mov
outsl
mov
mov
add
adcl
sub
cli
enter
jne
movsb
and
jg
popf
sbb
jno
push
imul
rep
lods
mov
mov
cld
pop
mov
and
jbe
hlt
lahf
push
dec
xchg
jg
xlat
and
les
lods
mov
negb
lock
lods
sub
mov
xchg
stos
aam
xor
xchg
lea
inc
adc
add
loopne
jb
xchg
xchg
jl
lahf
stc
je
xor
mov
test
movsl
or
add
mov
insb
ret
lock
inc
push
movsb
mov
std
jge
push
fwait
jl
in
shll
mov
push
mov
jne
sub
mov
int3
xchg
test
mov
enter
pop
inc
aaa
sub
lcall
mov
pop
aam
mov
dec
and
cltd
call
stc
lds
std
and
adc
int3
jecxz
or
and
mov
push
ficoms
inc
sahf
ljmp
xchg
adc
adc
fdivs
push
pop
pusha
lods
xchg
add
pop
push
pop
rorl
cmp
push
jg
into
push
int
out
fbstp
jmp
aas
ficomps
shlb
dec
mov
dec
pop
loope
scas
cmpsb
jo
daa
mov
xchg
popf
jbe
fisubl
add
fsts
repz
daa
mov
jp
adc
add
mov
pop
xchg
lods
cmpsb
xchg
lahf
jb
mov
arpl
lea
mov
sti
test
pop
adc
mov
mov
adc
add
fdiv
test
in
sub
cwtl
mov
or
mov
push
fwait
sub
loop
xchg
in
test
daa
cli
in
sbbl
stos
jmp
ror
mov
ficomps
loope
rorl
sti
int3
aaa
cmpsl
xchg
loopne
mov
ret
xchg
in
addr16
sar
fs
pop
clc
fisubl
mov
mov
call
rcl
leave
adc
lahf
sub
inc
popa
ss
fmuls
jo
pop
imul
mov
dec
gs
dec
add
test
in
repnz
push
dec
cmpsl
es
mov
clc
adc
dec
and
add
inc
push
and
or
aad
sub
sbb
xchg
mov
add
fisubl
ja
mov
mov
push
jmp
je
repz
sbb
mov
dec
pushf
xchg
or
stc
scas
scas
fcompl
cwtl
dec
pop
fsts
add
inc
movsb
pop
icebp
push
cmp
outsl
dec
sbb
data16
cmp
in
push
pop
faddl
cmpsb
inc
or
or
fwait
push
loope
or
jnp
popf
sbb
loopne
and
js
cmpsb
or
pop
adc
cs
aam
inc
fisubrl
adc
fisttpll
and
clc
rcll
outsb
popa
dec
int3
loop
scas
scas
dec
icebp
cmp
cmp
jb
jno
fisubrl
mov
jb
xchg
in
sbb
adc
mov
inc
imul
jbe
sahf
mov
adc
rclb
test
dec
push
push
add
cmp
inc
daa
mov
sub
inc
jecxz
push
add
sbb
xor
stc
cmc
jnp
stos
inc
sahf
and
jle
mov
push
sub
mov
sbb
mov
mov
and
stc
aas
and
test
adc
fldenv
or
aas
js
movsb
mov
es
mov
sub
inc
xchg
sbb
into
sub
dec
fisubrs
jne
rcl
or
push
or
lods
lods
mov
jbe
jmp
inc
sahf
pop
add
adc
clc
je
mov
pushf
sbb
fisttps
dec
inc
divl
test
adc
adc
aam
or
pop
push
inc
sbb
cmp
mov
cmp
test
dec
cmp
mov
inc
lock
call
test
mov
stos
mov
inc
out
mov
cs
sbb
in
and
pushf
inc
popa
aas
test
lods
mov
sidtl
xor
xchg
pop
shll
fcoms
add
jg
outsl
in
outsl
jo
add
enter
adc
jl
mov
push
repz
mov
in
add
pushf
ja
cmpsb
cld
add
jecxz
fmuls
test
icebp
dec
mov
lea
pushf
mov
mov
popl
adc
andl
inc
jno
enter
mov
mov
movb
stc
cmp
ss
inc
imulb
aaa
add
sbb
jbe
xor
popa
jmp
pop
inc
into
arpl
push
addr16
in
xchg
mov
scas
mov
rcrl
in
negb
add
pop
xor
adc
enter
push
adc
adc
out
je
add
mov
pop
mov
jnp
int
cmp
pop
divl
sub
cmc
or
lret
sbbb
xchg
mov
fldcw
daa
mov
add
xchg
mov
gs
jecxz
mov
sub
outsl
outsl
js
lds
add
les
pop
jecxz
outsl
pop
jmp
inc
sub
call
aam
loop
xlat
sub
inc
mov
mov
inc
pop
jns
shl
push
xor
sub
add
jge
test
jmp
jg
fisttpl
sub
call
jl
daa
xchg
mov
add
call
jl
xor
jecxz
notl
pop
jle
xor
push
ja
dec
jl
mov
mov
pop
scas
mov
xchg
lock
xor
cmc
cmp
pop
add
js
outsb
xchg
xchg
mov
or
fs
push
pushf
or
cld
and
sub
mov
sub
icebp
jmp
sub
mov
adc
dec
mov
cmpsw
das
call
cmpsb
mov
sbbl
stos
daa
aad
sbb
mov
ja
outsl
cmp
add
pop
xor
dec
imul
dec
add
dec
in
popl
jle
push
imul
pop
jae
or
nop
pop
adcb
mov
aaa
push
fnstsw
lds
ja
cld
fcompl
and
push
dec
ss
icebp
aaa
push
jle
enter
or
movsl
insb
incl
pop
xor
push
push
adc
mov
jge
ja
xor
pop
adc
loopne
aad
repnz
adc
insl
dec
ret
add
sub
test
pop
lea
dec
jns
data16
cli
xor
fisubs
push
nop
ret
lock
ljmp
push
sub
inc
lds
in
pop
clc
inc
and
insl
andl
ljmp
jae
mov
clc
sub
push
hlt
sti
call
idiv
xchg
or
cld
or
jg
dec
xlat
sbb
push
add
test
std
cmp
xchg
jno
xchg
sub
mov
in
inc
add
dec
cmp
pop
bound
mov
push
mov
mov
addb
incb
pop
and
jecxz
rcll
cld
lahf
pop
fwait
mov
dec
cwtl
xor
jno
pop
ljmp
stc
lds
cmp
mov
mov
into
xlat
pop
lods
mov
xchg
adc
lods
cmpsl
pop
sarl
test
mov
test
jle
mov
xchg
xor
dec
or
fimull
test
loop
ja
mov
enter
or
pop
inc
test
sub
lods
mov
mov
sub
movl
adc
xor
xchg
test
jle
repnz
cmc
loope
push
stos
enter
sub
sub
adc
enter
addl
sub
cmp
repnz
dec
stos
movsb
mov
popa
push
push
stc
xchg
sbb
repz
xor
mov
xchg
loop
cmp
pop
xchg
inc
xchg
lock
jle
cmp
iret
pop
pop
push
xor
dec
push
or
lods
jecxz
xchg
mov
push
repz
push
cmc
cmp
aaa
sahf
add
mov
push
cmp
jg
orl
vmovups
aas
push
adc
jae
stc
sub
mov
pop
sub
in
fisubrl
mov
pushl
mov
in
loopne
bound
mov
outsl
out
jno
insl
mov
and
jnp
mov
dec
les
xchg
cmp
pop
inc
pop
shl
add
pop
push
fadds
cwtl
sbbb
jl
xchg
sub
jbe
push
and
adc
jecxz
jne
jp
xchg
cwtl
jbe
int3
fs
sbb
test
leave
fucomi
pop
shll
jbe
pop
or
test
sub
aaa
push
out
maskmovq
negl
push
mov
test
aaa
mov
adc
or
push
call
pop
and
lcall
xor
inc
inc
pop
lret
mov
pop
push
xchg
mov
loope
gs
jne
sbbl
popa
pop
imul
aas
rcrl
clc
pop
and
cmp
xchg
sub
jae
notb
cmpsb
inc
or
cmp
loopne
test
mov
addr16
fbstp
pop
hlt
jg
and
mov
push
xchg
push
xchg
dec
popf
pushf
in
sbb
cwtl
xchg
pop
leave
inc
jg
js
push
or
fiadds
pop
pop
or
cltd
lds
push
cld
leave
mov
jnp
xchg
dec
adcb
mov
ja
stos
js
lods
inc
das
rcrl
ret
push
sarb
cmp
rclb
cwtl
xchg
das
push
lret
adc
sbb
fnstcw
movsl
rorl
mov
inc
cmp
mov
pop
jmp
sub
stos
dec
adc
orb
or
imul
jg
adc
push
xchg
adc
pop
rdpmc
mov
add
add
rclb
lods
pop
xor
movsl
into
sbb
or
cwtl
lret
adc
push
sub
sub
sahf
push
or
jnp
add
push
and
outsl
lock
mov
int
mov
jg
or
inc
cmp
out
pop
adc
insl
imull
xchg
xchg
dec
sub
mov
mov
pop
jno
mov
mov
or
decl
adc
xchg
movsb
sub
jmp
mov
out
push
fmul
push
ficompl
pop
xchg
fidivrl
inc
stc
add
dec
popa
lret
dec
mov
add
dec
sbb
loop
leave
das
icebp
pop
xor
in
pop
lcall
push
xchg
push
and
andl
push
mov
mov
out
pop
mov
and
inc
dec
pop
pop
push
add
rorl
ret
imul
mov
push
movsl
inc
push
popa
ret
push
cmpsb
lret
enter
lret
jae
push
shlb
sbb
out
push
push
hlt
push
sub
sbb
push
fwait
pop
jb
arpl
std
or
pop
lds
cmp
sub
mov
pop
or
add
inc
es
mov
mov
int3
mov
sti
cmp
push
psubusw
ret
and
test
es
dec
inc
insl
push
xor
stos
inc
xchg
add
test
fnstsw
mov
stc
mov
iret
sub
jle
cmp
outsb
cmp
in
sub
lcall
xor
cmpsb
std
outsb
es
jge
notl
ss
cmp
push
jne
lods
dec
mov
cmpsl
lock
test
push
sub
xchg
das
mov
mov
pushf
cmpsb
inc
mov
outsb
outsb
push
in
test
xorb
or
inc
push
fwait
add
int3
jp
sbb
ret
adc
pop
push
xor
push
mov
lahf
fadd
fwait
loopne
scas
mov
mov
mov
cmpsl
and
imul
and
mov
push
arpl
shll
sbb
push
cwtl
dec
lock
fildll
adc
jb
sub
adc
push
fsubr
sbb
and
inc
test
negl
cmp
cmp
pop
loop
sbb
push
or
cmc
jg
std
nop
inc
movb
push
cmp
vmovdqu
or
shrl
add
movb
push
pop
sbb
loopne
fbld
push
negl
int3
jo
xlat
cmp
insl
mov
ret
adc
shrb
fistpll
dec
cli
or
mov
pop
or
fwait
lcall
inc
lock
mov
xchg
lcall
fwait
cli
pop
push
ss
xchg
sahf
or
and
add
pop
rcrb
xor
test
int
add
sub
cmp
mov
jo
add
mov
outsb
decb
cmp
mov
sbb
add
cmp
or
mov
test
sbb
pop
push
jmp
jp
xchg
movsb
testb
movsb
nop
jp
jo
cltd
in
mov
outsl
pop
jge
out
adc
mov
stos
imul
hlt
inc
sub
loope
xor
or
pop
stos
lds
mov
cmpsb
sub
cmpsl
rcrl
pop
jns
xchg
sbb
dec
rcrb
push
mov
fisubs
ret
cs
in
sbb
jmp
fnsave
cmpsb
xchg
movsl
fcom
xchg
inc
pusha
mov
mov
lods
hlt
in
jmp
lahf
pop
add
movsl
or
ret
test
ja
push
cltd
xchg
jl
shll
fnsave
repnz
in
push
aaa
cli
in
mov
sub
int3
cmp
jae
neg
mov
add
outsb
jb
mov
and
mul
roll
xchg
imul
jmp
and
adc
and
add
add
cmp
add
add
add
add
add
add
add
je
add
add
add
add
add
ljmp
push
addb
add
add
add
les
add
add
add
add
add
add
add
add
add
add
add
xor
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
dec
add
add
dec
or
je
insl
add
add
add
add
add
add
adc
add
push
popa
add
add
add
insb
add
add
add
add
add
add
sub
clc
add
add
and
popa
popa
and
ja
jae
inc
jae
dec
push
push
inc
add
xor
add
leave
push
js
fs
adc
xor
push
push
mov
pop
mov
sub
test
test
call
je
addl
adc
mov
jno
and
cmp
inc
push
decl
call
lcall
sub
add
add
mov
test
loopne
add
adc
je
push
call
orl
call
push
add
push
add
push
add
test
mov
enter
inc
clc
adc
push
add
add
inc
add
adc
add
insb
add
add
add
cmpl
add
push
add
add
add
inc
inc
add
outsb
gs
adc
push
popa
sbb
push
gs
je
inc
outsb
gs
inc
dec
xor
gs
add
popa
dec
insb
imul
adc
outsb
add
inc
outsl
jb
xor
jb
mov
add
add
test
add
add
jne
add
add
in
add
add
add
les
in
pop
ret
outsl
out
xor
jmp
inc
dec
jns
pusha
and
cmp
add
mov
sbb
dec
in
xchg
jnp
shrb
jl
loopne
mov
movsl
sub
testl
cmp
rclb
and
rcrb
mov
cmp
arpl
adc
dec
and
das
hlt
leave
cltd
xor
inc
jle
sbbl
mov
push
push
jl
cld
pop
and
mov
dec
fiaddl
mov
push
lods
cld
gs
pop
in
jb
xchg
pop
jo
add
sahf
push
add
js
sbb
jne
fcomps
xchg
pop
mov
bound
cmp
add
mov
stc
jae
insb
es
jmp
xchg
pusha
push
cwtl
pushl
push
cld
or
js
shll
aam
push
pop
daa
xor
dec
lret
sub
add
sbb
mov
inc
out
in
insb
adc
dec
jecxz
clc
push
gs
jno
jnp
fadd
andl
outsb
xchg
mov
sub
repnz
dec
loope
arpl
jb
jnp
jnp
es
daa
inc
sbb
push
test
in
test
inc
jecxz
dec
xchg
jo
je
mov
or
lods
jne
repnz
and
push
and
iret
mov
add
clc
mov
push
cwtl
test
cltd
pop
outsl
xchg
and
push
or
push
inc
aad
into
fnstsw
bound
mov
mov
jl
pop
mov
les
lds
sub
adc
pop
cmp
mov
jb
inc
sti
je
data16
rcr
lcall
out
lret
sub
mov
jae
mov
sbb
stc
jge
mov
inc
mov
inc
add
jb
jmp
jne
movsl
out
out
insb
pop
dec
mov
jg
ret
sub
cmp
imul
push
mov
repz
lock
mov
mov
mov
pop
xchg
sub
jle
popa
or
add
inc
push
and
add
or
les
dec
mov
jns
lcall
insl
fimull
adc
jl
inc
push
lret
mov
pop
scas
in
jecxz
dec
xchg
inc
ret
inc
sub
or
mov
add
inc
cwtl
mov
mov
push
and
insb
cmpsb
popf
inc
dec
cmp
pusha
outsl
mov
mov
cmp
and
dec
sti
lods
in
and
jle
cwtl
hlt
rcrb
stc
cmpsl
sti
pusha
pusha
or
and
jns
out
lret
pop
fists
push
mov
inc
ljmp
sub
test
rorb
clc
dec
scas
fsub
jge
fsubs
push
or
out
and
lret
push
cwtl
dec
out
test
xchg
xor
in
popa
lods
pop
scas
push
push
outsl
xchg
rorb
in
test
loopne
cmp
or
mov
push
iret
mov
lds
aad
push
pop
add
ja
sbb
jmp
xchg
out
jns
cmp
insb
cmpsl
shll
inc
jl
pop
mov
and
sub
xor
jp
jmp
jns
scas
dec
jbe
mov
lret
push
sbb
shll
inc
or
sarb
mov
mov
mov
orl
jbe
popa
lret
popf
lods
pop
cltd
xchg
shlb
enter
xor
sahf
lret
pop
sbbl
mov
hlt
ljmp
sub
xor
test
xchg
mov
mov
inc
sub
jnp
sub
subb
jo
and
rcll
jmp
mov
cs
mov
loope
testl
mov
test
notb
pop
insl
daa
cmp
out
addr16
jnp
into
lods
cwtl
stc
adc
inc
adc
icebp
mov
mov
ljmp
and
test
add
jbe
arpl
xbegin
ljmp
mov
sub
call
and
inc
sar
mov
mov
xchg
out
sub
lcall
sub
movb
jb
insl
pusha
dec
push
int3
in
fwait
orb
sub
clc
ljmp
scas
jb
out
sbb
out
jg
iret
mov
test
cmp
push
fdivr
in
movsb
add
jbe
push
loop
outsb
ss
cli
rorb
cltd
dec
add
mov
lea
idiv
in
cmpsb
outsl
mov
bnd
ret
lods
dec
fldenv
cmp
rolb
sti
aam
cs
dec
jnp
jno
xor
or
adc
dec
ljmp
pop
adc
popf
or
dec
dec
int
xchg
xchg
jae
jae
mov
popa
cmp
or
inc
push
add
mov
inc
push
mov
xchg
pop
inc
daa
mov
arpl
lea
sbb
cmp
jb
mov
imul
sbb
cmpsl
add
sub
mov
imul
mov
mov
or
mov
xchg
mov
aad
push
inc
xchg
sub
fmul
arpl
fimuls
push
or
push
mov
push
mov
clc
mov
pop
dec
hlt
inc
mov
xchg
outsl
je
mov
lcall
mov
clc
cmp
inc
jle
lods
mov
sub
push
iret
ja
aaa
cltd
inc
int
and
or
mov
leave
repnz
loopne
addr16
bound
popf
pop
mov
lret
add
or
popf
int
xchg
addr16
sbb
cmp
push
shlb
lock
iret
and
add
inc
push
adc
cmpb
sub
jg
loop
mov
dec
jg
leave
lahf
dec
shll
add
add
ret
cmpsl
inc
gs
les
lcall
mov
sub
dec
out
mov
int
nop
sahf
shrl
testb
xor
bound
or
mov
outsb
jmp
push
je
mov
push
mov
or
mov
add
outsb
lret
test
insb
sarl
test
adc
and
int3
mov
loopne
xor
pushf
jb
or
mov
mov
xor
insl
sub
in
sbb
popa
cli
jnp
cmp
imul
loopne
sub
add
and
mov
shlb
mov
sarb
cmp
lret
sahf
jl
icebp
outsl
mov
sahf
sbb
leave
push
jnp
cld
loope
push
cld
and
mov
jl
xlat
push
inc
sar
leave
lahf
or
and
mov
jno
fwait
sub
jns
add
or
std
inc
fcomp
inc
inc
arpl
jp
sub
push
xchg
shrl
imulb
rorb
call
sbb
adc
push
sbb
mov
mov
mov
lds
insb
aaa
in
dec
jae
je
sbb
mov
push
repnz
repnz
inc
fcom
sti
int
xor
adc
xchg
out
cwtl
leave
pop
cltd
addr16
pop
jns
jmp
sub
mov
outsl
inc
mov
jo
push
sub
sub
mov
cmp
mov
sub
pop
imul
cwtl
fimull
xchg
jno
enter
mov
push
mov
add
cmp
iret
pushf
int3
loope
add
imul
fdivrl
lds
cvtps2pi
icebp
mov
add
cmp
orb
je
dec
cwtl
pop
mov
xor
lahf
sbb
enter
inc
lods
xor
out
push
je
push
cmc
cld
dec
cmpsl
mov
hlt
std
cld
arpl
jnp
ja
xor
sbb
sbb
lock
repnz
in
lea
stos
insb
les
mov
addr16
lock
movsb
cmpsl
and
jbe
cmpsl
and
pop
outsl
mov
cld
pushf
daa
mov
jae
fidivrl
shlb
loope
test
xchg
outsl
scas
call
cltd
adc
adc
cmp
sbb
fisubrl
lods
mov
test
rolb
es
and
jg
mov
out
insl
xchg
ret
dec
sbb
mov
insb
out
mov
enter
jae
push
int
xor
sbbl
cmp
mov
inc
jp
in
in
in
imul
inc
push
pxor
mov
scas
mov
pop
jge
sub
pop
arpl
hlt
dec
mov
in
cmpsb
inc
insb
fdivrl
mov
lret
add
and
pusha
inc
popf
sub
test
roll
or
pop
jge
pop
pop
pop
cmp
mov
xchg
jae
sub
sub
hlt
movsb
notb
ljmp
xor
fistl
inc
jno
add
mov
fnstcw
mov
cmc
mov
neg
push
testl
je
add
in
lods
flds
add
popf
andl
xor
fcoml
mov
cmp
xlat
cmp
inc
js
ss
jae
andl
push
test
rcrl
fwait
mov
mov
ret
add
push
adc
mov
aad
adc
bound
call
sbb
call
mov
mov
cmpsl
std
addl
or
mov
sub
fs
fwait
rcl
std
scas
add
push
lcall
xor
loop
cmpsl
test
movsl
icebp
push
or
cmpsl
inc
sub
sbb
jbe
lds
jbe
pop
dec
das
rcr
jno
cli
cmp
incb
cmp
leave
daa
addb
in
jp
add
sub
jbe
shl
or
ret
rclb
lret
or
mov
outsb
rorb
xlat
out
mov
cmpsl
leave
insl
lea
repnz
popf
lcall
dec
mov
pop
or
in
sbb
rep
and
out
lcall
jne
jae
pop
or
or
cmp
lcall
in
fs
repz
cmp
add
inc
scas
mov
and
or
mov
jl
xor
xchg
stos
jmp
cmpsb
xor
iret
outsl
jg
es
scas
ret
mov
push
stc
mov
pop
xchg
imul
in
sarb
sub
mov
pusha
aad
jnp
stos
fildl
pop
les
jp
clc
ret
inc
push
push
vmovups
pushf
fiaddl
lret
inc
dec
fldenv
push
pop
out
rorl
sub
and
testl
dec
and
pop
fsub
aaa
hlt
pop
sbb
divb
or
shrb
cmp
cmp
mov
scas
mulb
mov
pushf
cmp
out
outsb
push
and
and
jp
fsubp
aaa
sahf
cmovo
xor
sub
adc
add
lret
sub
inc
loop
jecxz
add
adc
ret
add
stos
mov
sarl
icebp
push
mov
js
adc
sbb
aas
in
fldcw
cltd
sub
outsl
repnz
cltd
or
outsb
in
jbe
adc
jo
or
xor
adc
roll
lret
shrl
lods
aam
jmp
ficoms
dec
and
xor
add
inc
das
mov
testb
rep
orl
pop
adc
cld
xor
and
jecxz
rcll
and
xchg
mov
or
or
fisubrl
movsl
add
cmpsl
call
daa
in
loope
lcall
outsb
sbb
inc
mov
sahf
push
inc
xchg
dec
pop
and
mov
clc
fs
in
shr
sub
movl
sahf
inc
add
mov
or
ja
insl
aas
dec
mov
icebp
mov
push
or
int3
or
xor
popf
cmc
loope
xlat
xchg
jb
fisubl
dec
xor
pushf
jmp
inc
cltd
orb
fildl
push
dec
sub
jbe
lods
mov
xchg
mov
and
es
scas
cmp
xor
sahf
ffree
lcall
cmp
sub
pop
fcoms
ret
pop
cli
xchg
negb
sbb
and
mov
addr16
inc
lods
pop
jns
iret
frstor
dec
ss
sbb
dec
adc
cmp
bound
fcos
add
xor
dec
and
in
sbb
mov
push
xor
ljmp
daa
cwtl
cmp
mov
scas
xor
les
push
fcompl
jb
stc
inc
push
dec
jno
jge
cmpsb
inc
mov
mov
jns
sbb
dec
jmp
cmp
shlb
adc
jns
mov
adc
or
stos
or
xor
enter
mov
jle
cmp
aaa
push
lea
jb
sbb
push
push
pop
gs
pop
sbb
icebp
pop
ljmp
fcomps
outsl
xchg
subl
call
inc
jne
das
xchg
sbb
jg
jae
scas
xor
push
mov
xchg
add
sbb
push
and
pop
pop
mov
sbb
repnz
mov
push
out
cmp
fmul
std
das
xorl
stos
scas
test
fucomip
sbb
xlat
repz
inc
mov
ret
mov
nop
xchg
scas
ja
mov
adc
cmpsb
in
and
out
jb
push
in
cltd
mov
inc
dec
out
shlb
or
sub
jns
sbb
add
aas
adc
xchg
rcr
bound
mov
cmp
xor
xor
clc
sbb
pop
push
sbb
popf
dec
scas
dec
dec
xor
mov
shll
jne
in
fidivs
in
push
mov
adc
repz
aam
jmp
insl
fidivrl
and
push
hlt
push
repz
mov
xor
ja
add
jbe
mov
in
pop
cltd
mov
insl
mov
xchg
jecxz
cs
popl
aam
push
repz
outsl
inc
xchg
dec
pop
clc
jbe
jno
fidivrl
lret
xchg
pop
andb
sarb
mov
dec
cltd
gs
add
adc
mov
push
ror
lret
xor
pop
adc
mov
iret
jle
dec
ret
fcoml
inc
out
enter
mov
jno
push
or
inc
jl
cmpb
gs
repnz
adc
adc
fidivrl
out
jp
mov
push
ss
ja
stos
cmpl
loopne
ret
sbb
mov
out
fwait
adc
in
iret
cld
cmp
fwait
hlt
sub
inc
and
mov
adc
and
fld
fsts
addr16
cli
and
inc
call
mov
mov
cmpsl
daa
inc
push
fwait
lea
mov
out
rcr
fisubs
mov
mov
jo
ret
das
fldt
out
lret
pop
cmp
sahf
push
jo
adc
and
pushf
inc
cmp
nop
in
and
daa
cltd
push
cld
loope
jb
mov
testl
sub
rcll
xchg
push
push
push
outsb
sbb
loope
xchg
mov
xchg
mov
dec
and
repz
scas
xchg
faddl
and
mov
imul
std
push
jns
ret
cmp
enter
ror
insb
cmp
jg
je
les
hlt
rcrb
adc
call
movsl
fildl
mov
pushf
sbb
sub
mov
pop
jbe
pop
out
pushf
pop
and
in
cmp
adc
ja
push
mov
push
mov
pop
mov
mov
push
fmull
decb
xchg
inc
fdivrs
mov
pop
mov
jl
sub
dec
shrl
pop
shrb
cmp
lds
out
pop
iretw
xchg
add
xchg
adc
repnz
push
je
mov
push
unpckhps
push
stc
sub
jns
es
daa
std
sahf
cli
sbb
dec
out
adc
mov
repnz
pop
cmc
inc
stos
sub
xchg
out
std
call
mov
ss
inc
pop
xor
shrl
addl
jo
bound
inc
mov
lahf
fldt
xor
inc
cli
inc
inc
stos
jnp
add
lcall
mov
inc
lock
lret
and
push
mov
loop
enter
icebp
out
cmc
cmc
rclb
cmp
sbb
cmp
add
jg
std
leave
and
imul
stos
leave
test
jne
out
xchg
cmp
sti
xchg
outsl
sahf
arpl
and
in
sbb
push
push
sti
jge
test
adc
and
xorb
out
or
dec
outsl
push
cli
jb
icebp
cmp
out
fxch
mov
repz
inc
inc
dec
sbb
add
inc
adc
mov
adcl
mov
mov
je
call
into
mov
adc
cmp
insl
mov
mov
fstps
jp
pop
out
inc
iret
add
bnd
pop
ds
scas
xchg
cld
lret
jg
xlat
sbb
xor
rcll
insb
hlt
loope
fisttpll
ljmp
xor
negb
fcoms
scas
test
xchg
lds
fcomps
jecxz
jns
mov
pop
xchg
je
sbb
icebp
xchg
movq
clc
data16
cs
or
iret
nop
or
jae
lds
dec
add
mov
pop
aad
pop
mov
xchg
data16
push
arpl
insb
push
movsb
jo
loope
icebp
leave
jne
mov
dec
mov
testl
xor
jae
sub
call
shlb
pushf
and
inc
faddl
and
aam
movsb
mov
faddp
subl
insb
idivl
ds
mov
xor
insb
or
cmc
xor
mov
inc
mov
pop
mov
sbb
shrl
ss
mov
leave
les
cmp
or
adc
pusha
pop
and
fidivrs
sbb
mov
add
aam
fnsave
std
pop
ljmp
push
inc
mov
leave
call
iret
fidivrl
mov
or
shlb
xor
icebp
mov
aam
jnp
sbb
xlat
mov
negb
addl
jecxz
js
insb
push
dec
cmpsb
test
cmp
out
pop
lahf
push
ret
cld
sbb
shrb
push
fs
adc
testb
inc
out
clc
pop
aaa
shlb
pop
mov
in
rcrb
cmp
jle
rorb
into
dec
adc
lea
leave
sti
jb
popa
jp
push
push
push
icebp
int3
add
add
movsl
add
inc
add
adc
add
add
add
add
add
add
add
add
mov
add
add
add
or
add
add
cld
add
xor
sbb
sub
mov
sub
add
adc
push
add
stos
stos
add
ja
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
add
inc
add
add
or
addr16
jne
or
fwait
add
add
add
add
add
and
add
add
add
add
xchg
or
mov
add
add
add
add
add
jo
dec
add
add
add
and
jo
gs
push
jae
inc
jb
fs
popa
inc
add
stc
jmp
mov
enter
or
jmp
fmuls
mov
pushl
add
test
cld
call
adc
push
dec
into
push
dec
lock
in
sar
lret
pop
mov
mov
mov
adc
movl
add
xor
pushl
pop
rolb
lock
add
add
push
test
test
std
decl
rorl
loopne
lock
push
adc
cmp
clc
cmp
shrb
dec
mov
cmc
jo
jno
push
inc
push
lock
push
in
push
inc
in
ret
push
mov
and
je
xchg
mov
add
add
add
cmp
out
add
add
add
inc
dec
inc
insb
movsl
outsl
insl
outsl
jne
inc
jo
gs
movsl
inc
roll
je
imul
inc
insb
adc
inc
imul
jge
add
push
dec
shrb
push
addr16
loopne
insb
gs
inc
dec
popa
add
pusha
add
roll
add
add
inc
add
addb
xor
popa
inc
popf
jge
out
shlb
or
lahf
aas
mov
jb
sbb
xchg
adc
add
insb
pop
lcall
xchg
cmpsl
mov
dec
pushf
test
or
lahf
dec
fnstcw
ljmp
and
xlat
addb
popa
cmp
push
mov
orl
outsl
inc
push
pop
insl
lret
inc
shlb
pop
xchg
dec
decb
dec
mov
fwait
jp
jl
movsb
sarl
mov
je
repnz
push
in
loope
adc
pop
das
add
int
addr16
add
push
test
jl
xchg
cmp
gs
mov
xchg
push
pop
cwtl
ret
sbb
sbb
pop
bound
scas
pop
adc
test
add
and
jecxz
shll
test
lret
popa
add
push
fwait
cmp
mov
lea
dec
ficomps
inc
out
xor
fdivrl
jnp
stos
movsl
cmpsl
mov
inc
sbb
push
pop
add
xchg
sbb
insb
mov
cld
daa
outsl
ljmp
or
pop
lret
mov
push
iret
push
movsb
fidivrl
or
je
mov
pop
cmpsl
icebp
ja
cmp
iret
sub
ljmp
sbbb
jmp
iret
mov
sti
inc
lea
adc
mov
inc
loope
inc
mov
jbe
fs
mov
pop
add
icebp
mov
aam
loop
aad
adc
cld
dec
mov
dec
sub
xlat
shlb
fisubs
test
jge
lahf
nopl
addr16
jb
addr16
or
jnp
in
xchg
leave
cmp
cmpsl
sub
mov
sarb
xor
sub
lods
js
xchg
push
xor
cli
jl
fsts
int3
inc
fildl
pop
fnstsw
mov
inc
adc
sbbb
sub
xor
cmp
jns
leave
orb
outsl
lret
imull
cmp
mov
lods
sub
cmp
stos
push
cmpsb
dec
xchg
int3
inc
dec
loope
sbb
sbb
dec
cmp
int3
and
inc
test
out
in
and
xchg
lods
scas
subb
or
fwait
push
insl
inc
mov
mov
inc
cmpsb
loopne
inc
jb
and
stos
cmp
pop
scas
or
xchg
test
lahf
subb
cmp
ficoml
loope
add
dec
ds
mov
ja
enter
aaa
push
fdivrs
ret
add
add
xor
ret
jle
lea
adc
mov
aad
stos
push
aam
test
add
shlb
sub
notb
mov
sub
pop
mov
pop
mov
faddp
aad
inc
ja
xlat
mov
mov
cmc
dec
and
dec
push
cli
mov
sti
cmp
jo
es
filds
setno
subb
adc
mov
push
dec
push
add
stc
pop
into
mov
jo
les
ret
test
scas
cli
push
xor
fdivs
mov
or
ss
das
inc
pop
outsb
push
pop
xorb
arpl
fs
or
pop
lahf
int
or
gs
lahf
or
inc
daa
push
mov
cli
testb
cmp
in
daa
mov
mov
dec
loop
push
xchg
in
jns
movsb
and
dec
ret
pushf
insb
adc
lcall
push
aad
das
ret
and
add
movsb
movsb
jae
repnz
fs
movsb
or
dec
mov
sbb
jmp
push
int3
aam
je
out
inc
lea
cmpsl
repnz
lret
fists
mov
push
inc
jnp
cli
push
fidivs
push
cmp
xchg
mov
mov
bound
and
xchg
fnstcw
cltd
xor
sbb
pop
outsb
lret
jnp
mov
adc
test
lret
jae
rol
mov
sub
and
cwtl
xor
lock
xchg
mul
clc
out
jnp
pop
mov
push
in
faddl
jns
imul
aad
cld
call
push
aad
pusha
stos
aaa
aaa
adc
cmp
mov
xlat
insl
jae
lods
loope
repnz
sahf
ret
jl
jl
xor
dec
mov
jp
inc
jge
js
xor
sysexit
repz
push
ja
les
cltd
xchg
out
loop
in
out
lods
iret
lcall
pop
out
sub
push
imul
cmp
leave
pop
shl
xor
dec
rorb
out
mov
cmp
adc
arpl
cwtl
cmpsl
ds
aam
mov
jl
push
jnp
out
stos
lock
ret
pop
cwtl
movsl
inc
out
popa
and
mov
outsl
ffreep
and
xor
mov
jns
dec
sarb
adc
dec
pop
sahf
ret
cmpsl
out
mov
push
loopne
pminub
call
icebp
adc
sub
incl
sub
jmp
out
pop
mov
mov
add
jle
leave
cs
inc
push
adc
ljmp
adc
outsb
add
scas
out
addr16
outsb
jbe
mov
nop
add
leave
in
cmpsb
xchg
clc
popf
cmc
push
enter
stos
mov
stos
lret
mov
insb
xchg
lea
push
call
pop
stc
push
scas
aad
mov
dec
out
cltd
or
jo
aam
mov
sub
cmc
outsb
mov
dec
pop
sub
push
ret
dec
push
icebp
stos
gs
flds
icebp
rcr
cmpsb
int
pop
add
push
pop
mov
xlat
mov
hlt
div
stos
adc
mov
lods
pop
aam
jle
pop
sub
imul
xchg
sub
or
jbe
or
ss
mov
in
out
sbb
adcb
xchg
icebp
aaa
jnp,pn
loopne
adc
sub
add
push
ja
xchg
pop
cmpsb
and
aaa
mov
inc
push
cmc
push
dec
mov
ds
testb
ss
mov
mov
daa
call
xchg
gs
mov
dec
movsl
insb
lcall
fabs
lods
cmp
sahf
outsl
shlb
xchg
into
and
or
clc
dec
jbe
lea
enter
push
sub
jb
push
xchg
sarb
cmp
jbe
fstpl
sbb
xlat
movsl
dec
sub
cmpsl
jmp
imul
xor
popf
in
add
inc
sbb
cmpsl
fwait
mov
push
mov
xor
js
sbb
cmp
inc
ljmp
orb
cmpsb
cmp
mov
clc
dec
inc
fidivrl
js
sbb
dec
std
nop
addr16
push
cmp
pop
pop
push
aas
mov
mov
jnp
push
add
in
icebp
jge
cmp
repnz
mov
ja
and
ret
dec
je
mov
js
adc
and
push
inc
imul
sub
xchg
outsb
test
cli
fiadds
xor
mov
adc
test
mov
adc
xchg
mov
cwtl
jne
jg
push
aaa
adc
sarb
iret
xchg
andb
pop
push
xor
xor
add
mov
jns
imul
mov
sub
rorl
ficoms
xchg
mov
cmpsb
fidivs
push
add
lret
scas
mov
mov
scas
fsub
outsl
repnz
mov
insl
xor
leave
stos
pop
call
add
pop
aaa
cmp
fildl
fdivl
jmp
mov
or
or
ret
sbb
shlb
inc
ret
sti
jge
nopw
popf
xor
mov
fistl
pusha
sbb
and
jmp
nop
daa
push
adc
mov
pop
pop
sub
addl
mov
cmp
dec
clc
xchg
or
mov
arpl
repz
lea
mov
aaa
fbstp
repz
jo
mov
out
inc
and
lds
ja
fldl
ljmp
or
stos
push
cmp
mov
dec
jae
push
mov
mov
sub
iret
hlt
iret
jne
sahf
mov
popf
xchg
shl
mov
testb
and
popa
jp
xor
insl
daa
push
xchg
mov
dec
push
push
cld
xchg
or
push
pop
mov
in
in
jl
cld
pop
pop
orl
sbb
xor
mov
xor
sti
repnz
push
fiaddl
mov
out
pop
add
rcll
sub
and
jno
lods
sbb
cmp
xchg
hlt
xlat
xchg
orl
fcoml
mov
addr16
and
sbbb
jo
adc
add
gs
test
adc
jbe
shlb
in
mov
pop
or
fimuls
push
push
lahf
pop
in
out
fmul
lock
icebp
aam
fcmovnb
push
lahf
cmpsb
ret
mov
mov
in
shufps
and
and
sti
mov
push
pop
push
sbb
mov
cli
sub
add
ja
mov
pop
fsub
push
dec
dec
arpl
push
and
fistpl
adc
mov
idivb
popa
test
pop
daa
sbb
xchg
not
mov
rcr
adc
aam
dec
adc
sbb
push
mov
mov
insl
or
icebp
cwtl
sbbl
clc
push
fildll
vpand
mov
push
rclb
add
push
nop
sub
cmpsb
xchg
push
sets
pop
int3
les
rcll
stos
dec
mov
xchg
scas
xor
clc
test
dec
inc
stc
in
add
into
mov
sub
cmpsb
jle
in
cmp
jb
lock
aas
mov
out
fwait
lock
push
nop
shrl
push
loopne
pop
outsl
scas
sbb
lcall
jb
pop
xchg
lret
loop
push
xor
dec
ljmp
mov
or
loope
adc
sbb
pushf
mov
push
add
lcall
pop
xor
mov
cwtl
mov
push
xchg
repz
mov
popf
pusha
pop
out
xor
jmp
sbb
insb
rorl
push
add
loope
int
int3
aam
push
xchg
pop
daa
cli
pop
mov
rcll
add
adc
and
aas
cmp
gs
les
stos
mov
leave
mov
xchg
fidivs
xor
push
sti
bound
out
insl
adc
lcall
xchg
mov
lods
jo
cmp
es
xor
imul
ret
inc
cwtl
fldl
jae
mov
adc
cwtl
imul
rclb
test
jno
dec
pop
mov
dec
inc
jbe
add
jmp
pop
inc
aaa
aam
and
dec
ret
xchg
sub
push
push
loopne
test
xor
dec
lea
sbb
inc
adc
sahf
sub
and
fisubs
dec
mov
aam
xchg
roll
xor
inc
mov
ss
add
repz
mov
jmp
enter
and
js
enter
add
hlt
sub
or
push
addb
mov
shl
push
iret
icebp
negl
add
dec
ret
inc
push
add
test
gs
jae
pop
or
pop
xor
rcrl
in
dec
imul
icebp
pop
and
shrl
and
outsb
ds
fadd
pop
add
jo
out
xor
pusha
loopne
mov
inc
lret
mov
insl
mov
into
mov
dec
dec
push
sbbl
mov
adc
and
not
test
test
mov
pushf
imull
mov
jmp
fucom
lock
add
dec
mov
ss
pop
and
and
ja
sub
popf
jo
lods
and
xor
pop
xchg
daa
fildll
dec
sub
dec
mov
out
and
mov
pop
mov
mov
inc
iret
dec
icebp
push
push
insb
cmc
outsl
sub
dec
jmp
xchg
cmpsl
repnz
sbb
or
cmp
or
adc
cli
sub
in
and
int3
sbb
mov
movsl
cld
outsl
insl
outsl
push
sbb
xor
jno
arpl
imull
dec
jg
push
or
mov
addr16
pop
aad
icebp
insl
mov
push
sbb
mov
int3
testl
push
sub
xor
js
mov
push
ja
arpl
mov
lret
jp
xlat
adc
arpl
rep
cmp
mov
add
mulb
pop
mov
lret
repnz
sbb
lds
movswl
xor
mov
subl
test
mov
movsl
add
lret
lret
leave
dec
shll
sub
push
je
xchg
adc
xchg
and
cltd
pop
nop
fs
cwtl
mov
add
inc
aam
out
sub
into
sbb
jg
dec
in
test
push
loopne
xchg
add
fildl
push
movsl
sbb
scas
and
nop
test
jg
sub
and
jo
inc
out
aaa
inc
add
jp
jl
repnz
loop
xlat
or
js
stos
push
out
xchg
inc
xor
lds
xor
aam
mov
test
out
lds
shrl
sbb
dec
aam
ds
push
mov
sub
dec
jb
das
dec
andb
sbb
cmpl
or
mov
test
lods
push
in
dec
sub
add
pushf
xchg
loop
aas
push
or
addb
push
hlt
xchg
das
jo
push
dec
jl
mov
pusha
xchg
out
loope
cli
sub
fisubrs
lahf
xchg
pop
inc
xchg
fsubp
pop
cld
lret
xchg
sub
and
jb
jno
xorl
leave
and
cmp
jg
jb
jae
stos
xchg
inc
mov
popf
mov
mov
jnp
dec
pop
xchg
jecxz
push
iret
cltd
cmp
push
and
push
cmp
sbbb
jge
and
push
dec
xor
data16
idiv
mov
push
sahf
imul
inc
insb
clc
mov
ja
movsb
dec
pop
mov
scas
mov
push
jne
sbb
mov
mov
xchg
cmpsb
push
pop
dec
mov
and
aad
sub
add
sbb
rolb
icebp
fmuls
cli
ret
mov
jae
fimull
pop
rcll
lea
fcmovu
inc
mov
mov
fwait
loop
mov
test
inc
cltd
out
aam
jecxz
lret
pop
sub
fimuls
jmp
or
sbb
leave
mov
out
mov
mov
dec
push
jbe
sti
pop
das
pop
add
popf
int3
mov
sar
dec
push
inc
test
mov
leave
jecxz
mov
adc
shlb
or
mov
test
test
xchg
out
punpckhbw
or
ss
jae
ret
add
outsb
xor
mov
inc
add
dec
jge
sub
js
pop
inc
aad
gs
test
nop
int3
inc
rcrb
or
jo
sarb
sbb
gs
cmp
add
push
sub
call
mov
cmc
adc
aaa
bnd
pusha
imul
xor
fisttpl
xchg
lock
and
test
js
sbb
ljmp
fwait
cmp
sbb
dec
lea
pop
add
pop
xchg
shlb
rorl
movsb
popf
mov
xor
test
int3
cmp
mov
xchg
adcl
dec
cs
pop
enter
fnstcw
fwait
rcrl
nop
pop
insb
cltd
rol
call
dec
cmp
jbe
cmp
test
bswap
jmp
fwait
test
iret
xchg
int
inc
xchg
pusha
jmp
jge
cmp
out
inc
sub
jle
xor
adc
dec
imul
cmp
mov
mov
sbb
inc
inc
cmp
jmp
je
jae
jp
pop
rolb
popf
inc
pop
xor
dec
sub
iret
or
add
bound
xor
mov
push
dec
lock
push
sub
mull
xchg
popa
lods
xchg
inc
push
inc
jp
cmpsl
lods
xchg
in
clc
orl
pop
xor
xor
pop
xor
xor
cli
lcall
lret
jns
or
add
jl
xchg
filds
mov
sub
outsl
add
and
dec
or
fimuls
negl
movsl
add
rcrl
fcomip
mov
and
add
adc
lret
pop
test
pop
faddp
and
inc
dec
or
sahf
test
sarb
jb
mov
and
test
mov
ja
in
xor
mov
cltd
pop
cmp
out
sbb
xchg
filds
leave
mov
sub
mov
enter
mov
scas
push
stos
xor
pop
fiaddl
jg
in
gs
or
sub
mov
and
enter
mov
add
int
mov
das
jnp
mov
mov
lahf
jecxz
cmp
gs
data16
arpl
mov
in
push
dec
je
movsb
rcr
ret
fsubs
xchg
mov
and
xor
xchg
adc
stos
lock
in
and
lock
xlat
jmp
divb
call
enter
inc
movsb
out
dec
or
mov
xorb
lds
call
aas
in
shll
lea
xor
mov
push
push
int
mov
aam
jecxz
sub
ret
inc
jg
shrb
hlt
add
mov
pop
push
cmp
pushf
ret
mov
jecxz
add
cli
sub
push
dec
xchg
inc
xorl
sbb
pop
sbb
out
jo
mov
adcb
ds
mov
test
fdivrp
ja
mov
hlt
cmp
inc
sbb
add
imul
lahf
add
pop
cmpb
into
cmp
sbb
mov
add
push
sub
outsl
rclb
adc
shlb
cmc
aas
mov
cmpsb
mov
dec
bound
sahf
fs
out
enter
xchg
cwtl
push
fisubl
aaa
jbe
popf
out
mov
jnp
test
inc
or
aam
out
mov
fsubrl
mov
jmp
cld
or
loope
jl
or
dec
cmp
test
gs
out
test
call
pushf
dec
jnp
enter
adc
cli
cmp
repnz
imul
out
mov
pop
cmp
push
adc
jne
cmp
in
mov
and
adc
inc
mov
subl
repz
inc
add
jae
mov
arpl
mov
xchg
dec
popf
adc
rcrb
popa
xor
cwtl
jno
sub
out
sbb
mov
sbb
aas
add
add
icebp
add
rolb
add
add
add
add
lock
push
add
add
add
imul
inc
add
addl
or
add
add
or
in
in
hlt
add
add
add
add
lcall
stos
mov
mov
js
js
int3
int3
int3
int3
int3
int3
int3
int3
add
add
add
add
add
outsb
outsb
or
add
add
add
mov
add
add
add
add
add
add
add
add
add
sarb
dec
add
add
jecxz
and
insb
add
inc
outsl
pop
jne
outsb
ja
dec
pop
jo
push
insb
gs
mov
clc
imul
rorl
inc
jne
incl
dec
sbb
adc
call
add
std
adc
adc
push
mov
or
pop
out
jne
mov
into
mov
pop
ret
add
push
add
push
rclb
jge
out
add
add
add
pop
adc
loopne
cld
test
inc
push
call
inc
sub
jne
add
decl
subl
adc
push
push
call
push
push
call
cmpb
mov
pushf
lock
jne
call
lea
add
or
add
add
mov
mov
add
add
add
inc
imul
add
sbb
push
js
add
aad
gs
gs
gs
insb
arpl
inc
inc
or
push
xchg
jb
add
outsb
xchg
insb
cltd
jne
gs
jae
outsl
gs
js
xor
add
add
insb
add
add
ret
sbb
add
add
add
add
add
cmc
xor
ja
xor
mov
dec
repz
pop
mov
mov
das
sub
imul
mov
ret
scas
dec
divb
or
roll
sti
leave
cmp
icebp
push
fists
xor
mov
mov
aam
adc
xor
xchg
addr16
dec
jecxz
testb
aam
call
sbb
sbb
mov
cmp
xchg
or
movsl
sbb
punpckhdq
data16
push
mov
or
insb
subb
inc
shll
ds
push
push
pop
outsl
lret
xchg
stos
xchg
loopne
sbb
cltd
test
movsb
mov
fnsave
sar
mov
call
mov
mov
repnz
inc
push
adc
in
xor
pusha
inc
aam
or
dec
sbb
mov
sbb
cli
mov
mov
or
jbe
jmp
jae
fwait
and
cld
jno
hlt
loopne
pushf
js
rcrl
fcoml
sub
xchg
jl
jnp
sub
inc
nop
and
loope
xor
int3
jno
shlb
addr16
pop
xor
sbb
lcall
test
bswap
jno
aam
cs
sub
xchg
adc
inc
xor
jecxz
in
push
orl
cmpsl
out
scas
add
jecxz
pop
loop
jmp
lahf
jg
test
sbb
cmp
lret
xchg
adcb
daa
lret
push
and
fsubrl
in
pop
fcomps
js
jno
jle
and
movsl
insl
jle
mov
pop
pop
aaa
add
bound
stos
cltd
mov
add
adc
loope
ds
jne
icebp
cmp
add
out
mov
arpl
aaa
sar
xor
pop
pop
adc
jne
stc
nop
mov
js
pusha
cli
push
cmp
into
ds
add
sbb
sbb
hlt
lods
jecxz
out
mov
add
add
jmp
in
sbb
mov
mov
in
cwtl
mov
jl
jmp
int3
jne
int
mov
mov
repz
mov
mov
push
dec
sbb
and
ret
lahf
adc
sbb
in
cmp
bound
mov
cwtl
sub
popf
adc
test
das
ja
push
jne
cs
xor
pop
cmpl
cwtl
pop
shl
xor
sub
sub
cmpb
dec
ja
cwtl
mov
jp
rclb
pop
adc
cmpsb
sbb
mov
xchg
stos
pop
cwtl
test
add
dec
je
mov
repz
pop
and
lret
jno
sarb
mov
stos
outsb
dec
dec
add
fwait
pop
dec
cld
inc
cli
ja
mov
pop
loopne
mov
dec
or
js
icebp
pop
aam
enter
sub
leave
outsl
jnp
push
lret
sub
loop
push
popf
test
imul
push
dec
shrb
cmp
xchg
xor
imul
rcrb
aad
xor
dec
jnp
sub
cwtl
imul
or
cmp
in
add
test
mov
jle
sbb
push
je
mov
imul
pop
inc
cmpsl
fidivl
and
fwait
add
sbb
xchg
movd
repz
insb
inc
mov
xchg
outsl
sub
in
sbb
cs
push
sbb
cmp
pop
pushf
mov
addr16
frstor
and
les
arpl
xor
mov
out
mov
jg
popf
or
clc
mov
mov
mov
push
jno
sub
dec
daa
jg
decl
lcall
cmpsl
add
stos
xor
inc
fadd
fstl
mov
or
lahf
xor
testl
jae
cmp
jo
in
inc
mov
adc
andl
movsb
repz
pop
xchg
sub
xchg
adc
sahf
inc
adc
pop
int3
hlt
inc
fbld
xchg
pop
hlt
jbe
enter
repz
nop
pop
stos
imul
call
pop
aas
mov
cmp
sbb
lcall
and
push
mov
mov
push
out
mov
lea
fidivl
arpl
add
stos
jl
in
jns
xor
aas
je
stc
mov
cmp
dec
pop
mov
jno
scas
sbb
mov
sbb
ret
repz
stc
fs
and
cmpsl
arpl
mov
jb
push
xchg
stc
mov
add
fwait
nop
cmp
pusha
adc
jl
loope
clc
sbb
roll
xor
mov
mov
cmc
in
fadd
pop
sti
iret
push
aaa
arpl
bound
out
lcall
adc
mov
adc
mov
push
pop
mov
test
imul
push
dec
pop
mov
pop
ja
xchg
pop
sub
mov
add
sbb
pop
mov
sarb
nop
outsb
js
or
xchg
inc
enter
mov
cmp
fidivrs
outsl
rcrb
adc
or
sbb
adc
xchg
cwtl
push
push
xchg
pop
popa
lods
hlt
xchg
mov
lea
imul
jnp
jl
or
ficoml
push
jg
loop
add
push
inc
jae
imul
dec
cmp
sub
or
dec
add
out
xor
cmp
cmpsl
xchg
test
mov
js
push
push
sti
lret
fldt
cmpsl
aas
cmp
xor
push
adc
mov
jmp
rcrl
dec
mov
push
hlt
mov
sub
dec
cmp
sub
mov
rolb
mov
stos
jg
outsb
imul
int
rorl
rcr
inc
ja
jne
std
pop
enter
negl
cmpsl
scas
add
dec
ret
sbb
sbb
and
cmpsl
into
dec
cmpsl
push
dec
xor
jl
sbb
scas
xchg
cmpsb
mov
dec
cmp
mov
lock
inc
repz
push
popa
loopne
inc
imul
mov
dec
jns
lret
test
ret
sbb
sub
sub
pop
enter
jg
sbb
mov
pop
ds
shll
imull
pop
push
lods
outsb
and
xor
inc
push
movsl
sahf
dec
sub
jbe
or
fistl
rorl
dec
fmul
cld
aaa
popa
fstpl
inc
pop
mov
xchg
movsl
push
aam
xor
jae
inc
notl
lret
xchg
pop
sub
sub
jb
mov
adc
leave
dec
je
xchg
adc
jbe
out
xchg
fldenv
test
push
mov
dec
xor
xchg
cmp
fisttpll
dec
lcall
and
mov
dec
roll
adc
inc
push
mov
push
lahf
jo
fneni(8087
fcmovbe
ljmp
jnp
scas
and
mov
fimuls
fsubrl
lea
repz
and
push
mov
push
cmpsb
push
sub
mov
jns
cmp
repz
jmp
das
mov
dec
mov
or
dec
cltd
xchg
repz
inc
sti
push
xchg
test
inc
or
and
fmull
xchg
mov
icebp
adc
insl
pop
andl
xchg
add
int3
mov
inc
mov
jns
gs
out
xor
mov
xchg
cmpsl
ja
inc
popf
insl
pop
pop
cld
repz
cmpl
insb
lods
xlat
sub
dec
dec
sbb
mov
mov
xor
pop
xchg
xor
movsb
scas
jge
inc
fidivl
mov
lahf
push
jge
inc
sbb
fimull
aas
or
and
jmp
xchg
ficoml
sahf
inc
das
pusha
ret
gs
adc
xchg
xlat
mov
sbb
xor
xor
push
nop
pop
mov
inc
cmpl
rcrb
add
fwait
sbb
lods
stc
cli
push
push
or
mov
pop
ljmp
jo
or
jbe
outsb
cmp
jo
mov
xor
mov
or
push
add
cmp
stos
call
inc
insb
lcall
dec
push
pop
push
add
ljmp
add
mov
rcr
add
stc
ret
repz
mov
inc
std
clc
fisttpl
hlt
jns
movsl
inc
sarl
mov
inc
and
mov
int3
mov
push
mov
lods
pop
pop
mov
mov
lods
lret
mov
jge
cmp
adc
lds
mov
int3
fistpll
pop
scas
repnz
sbb
or
mov
shr
xor
cmp
and
mov
push
pop
clc
lret
push
push
mov
aas
or
test
pop
xchg
or
inc
mov
lret
out
add
add
in
pushf
jae
adc
mov
or
mov
dec
std
jg
mov
je
fildl
pushf
ljmp
das
or
sbb
sbb
fucomip
or
sahf
stos
sub
imul
mov
mov
mov
xor
leave
int
jg
outsb
xor
dec
test
fcoms
jb
xchg
lock
mov
push
pop
adc
mov
pushf
por
in
xor
jae
mov
gs
xchg
test
outsl
jecxz
mov
push
out
push
and
std
rolb
jns
aas
mov
gs
dec
and
int
jnp
lahf
push
stc
in
xor
jno
xchg
dec
in
mov
fidivrl
es
arpl
shl
inc
hlt
dec
pop
fs
pop
lods
sub
mov
cmp
add
das
mov
cs
lock
psubd
cmc
fwait
xlat
xchg
sahf
aaa
cmp
mov
into
xor
push
xchg
inc
rorb
xor
aaa
mov
xchg
mov
xchg
les
mov
dec
ret
add
aam
stos
sub
cmpb
mov
out
jnp
xlat
push
cltd
adc
jmp
inc
dec
push
bound
testb
and
sub
in
aaa
jnp
js
out
add
cltd
cmp
ljmp
add
push
push
repnz
add
mov
pop
dec
mov
ja
sar
es
icebp
test
cmp
add
dec
xchg
ss
xchg
and
ljmp
mov
mov
mov
std
and
lods
xchg
or
xor
xor
popa
push
mov
pop
or
imulb
dec
daa
push
leave
sahf
loope
jb
and
pop
fisubl
sub
add
mov
cli
push
inc
xor
inc
in
pop
fcoml
outsb
push
push
pop
cmp
cmc
push
and
push
mov
lahf
int
mov
jp
push
cltd
aaa
imul
and
ja
ljmp
rcll
and
cmp
gs
inc
gs
cmpsl
push
sbbb
add
sbb
hlt
mov
mov
orl
mov
cwtl
nop
popf
jae
xor
enter
xor
movsl
lods
test
out
rcr
push
mov
dec
fs
pop
adc
scas
aad
push
or
out
push
arpl
pop
incb
aas
fstpt
adc
fcompl
pop
lods
push
jae
fnsave
cmp
lcall
aas
or
adc
mov
mov
xchg
pushf
cmc
mov
jl
ret
cmp
sub
jne
pop
cmp
call
fldenv
cmp
push
addr16
sub
push
clc
cld
xchg
lock
jae
sbb
mov
dec
gs
mov
dec
sbb
fs
iret
movsb
and
loop
inc
sbb
cmp
jbe
jl
sarl
pop
es
fcmove
sti
jmp
orb
outsl
ss
dec
dec
imul
stc
negl
ja
les
jae
inc
leave
fimuls
lahf
xorb
xchg
pop
jge
push
sbb
out
arpl
aad
hlt
or
dec
mov
pop
and
sbb
aaa
negl
dec
arpl
inc
bound
cmp
adc
jo
std
jl
mov
mov
pop
enter
mov
pop
ljmp
arpl
sbb
cmp
call
loop,pn
xchg
mov
loopne
cmp
sbb
cwtl
popf
fnstcw
xchg
icebp
sub
les
or
add
in
test
pop
test
fistpll
mov
xor
sti
test
xor
lret
or
popf
mov
cwtl
int
jg
adc
maxps
xor
jae
sbbb
adc
add
insl
jecxz
or
or
dec
fmuls
inc
mov
test
xchg
dec
jmp
jns
cmp
popa
cmpsb
lcall
insb
and
xchg
jns
cmpsb
outsl
mov
jo
fwait
add
and
aaa
xorb
adc
imul
mov
mov
hlt
shl
xlat
shll
dec
add
adc
push
inc
pop
pop
mov
cmpsl
push
jmp
sbb
out
movsl
lods
sahf
xchg
add
ret
push
repnz
es
leave
movsl
cmpsb
xchg
sti
iret
mov
sbb
add
addr16
aam
shl
cmp
fwait
pop
mov
insl
pop
mov
xchg
aas
lahf
ja
pop
sti
shr
andl
mov
cmp
mov
hlt
jno
call
xlat
stos
shrl
mov
pop
mov
negl
or
fidivrl
and
movsb
repnz
cmpsl
enter
jg
adc
out
lock
pusha
out
bound
mov
mov
scas
enter
push
push
mov
xlat
xchg
mov
andb
fwait
mov
sar
dec
nop
popf
push
xlat
inc
xchg
lods
fiadds
mov
mov
xor
push
repz
fadd
cmpsb
add
inc
pop
jmp
lahf
xor
and
dec
call
mov
xchg
fistl
stc
iret
out
inc
cmp
xor
ss
mov
inc
gs
js
pushf
movsl
xchg
lret
shrl
xor
test
mov
push
ret
cmp
js
xchg
roll
or
ret
js
cwtl
pop
mov
jecxz
jo
and
xor
xchg
jp
xor
pop
lods
jmp
and
inc
scas
xchg
test
inc
dec
sub
or
xchg
jle
lahf
pop
xchg
or
imul
imul
ret
popa
push
repnz
imul
jg
mov
fcomi
addr16
pushf
dec
or
jmp
sbb
sub
jnp
mov
in
jecxz
scas
clc
add
cmp
inc
sti
cmc
mov
outsl
jns
jae
lcall
loop
fwait
jns
mov
push
mov
jnp
pop
fwait
xchg
insl
je
imul
jno
es
arpl
jb
fnstenv
inc
mov
out
adc
out
rorb
stc
push
and
scas
decl
cmovs
gs
push
jne
and
scas
gs
dec
leave
jge
aas
loopne
xor
mov
xor
and
jg
add
xor
dec
xchg
jl
cmp
and
das
add
xor
mov
xor
mov
pop
inc
popf
into
xor
cli
xchg
imul
mov
repz
cmp
add
jg
aam
stos
xor
cltd
jno
dec
inc
leave
aam
enter
scas
push
mov
pop
insl
inc
add
fnstenv
cmc
jae
fstps
mov
sub
adc
loop
clc
je
test
xor
out
jp
out
fsubrp
add
cs
loopne
icebp
ret
adc
pusha
pop
mov
push
xchg
fcmovnbe
jmp
lea
icebp
push
ds
inc
or
shl
enter
lahf
adc
xchg
sub
mov
jg
jne,pt
adc
mov
and
mov
sub
mov
ret
popl
pop
mov
sub
lods
jmp
pop
ljmp
xchg
xchg
jg
mov
ja
filds
pop
push
dec
icebp
sbb
ret
xchg
push
push
stc
push
sahf
fmuls
dec
aam
loope
popa
les
or
cmpsb
lahf
fnsave
mov
lcall
repz
ljmp
dec
adc
mov
popa
mov
and
sub
in
enter
cmpsb
cmc
jbe
mov
int3
ljmp
mov
shll
fdivrl
cmpsb
push
inc
movsl
das
sub
scas
inc
stos
loopne
mov
sbbb
mov
ror
popa
inc
movsb
xlat
xchg
std
mov
dec
je
ja
test
push
push
xchg
sahf
mov
loope
fwait
adc
mov
jmp
test
xor
sub
and
mov
mov
cmp
stos
mov
mov
sub
mov
in
or
nop
xor
shl
in
out
lds
lret
dec
mov
repnz
lods
xchg
mov
nop
jl
loopne
xchg
aam
mov
pop
arpl
push
push
in
dec
mov
fxch
pop
xor
add
cmp
loopne
xor
fistpl
sbb
testb
inc
xor
aad
and
icebp
sbb
jp
add
add
inc
cltd
push
push
pop
jge
add
fwait
add
add
or
imul
mov
sub
in
push
or
mov
mov
mov
mov
or
lock
movsl
lods
mov
je
inc
test
imul
add
mov
fcmovu
repnz
mov
bound
out
inc
mov
lds
das
inc
test
sub
cmpl
sbb
stc
sbb
or
idivb
fwait
enter
jne
push
mov
jmp
mov
xchg
add
orb
xchg
lcall
adc
cmp
mov
xor
lock
addr16
or
enter
sub
pop
outsl
dec
xchg
test
jb
ret
dec
cmp
dec
enter
in
test
pusha
cmp
mov
push
lds
push
into
sbb
in
add
int
jl
dec
dec
leave
jle
lods
lods
or
cmpsb
xchg
xor
xor
inc
fbstp
out
pop
pushf
test
sarl
inc
add
inc
xor
add
rclb
pop
push
les
pop
ficomps
pop
aad
cmpsl
mov
or
dec
add
cmpb
rcr
xchg
and
add
add
mov
add
add
add
add
dec
add
add
jecxz
add
add
add
add
jae
add
add
add
ret
sbb
add
add
add
add
mov
add
add
cmp
add
add
add
add
rolb
add
jo
jo
repz
int3
int3
int3
int3
int3
int3
int3
int3
int3
pop
add
add
add
pop
mov
outsl
add
add
mov
and
add
inc
popl
mov
add
xor
and
add
add
add
add
or
add
add
jb
add
add
add
pop
sbb
sbb
sbb
sbb
pop
sbb
sbb
sbb
add
icebp
insb
jns
jne
dec
dec
je
jb
outsl
jo
add
pop
outsb
addr16
cld
shll
popf
out
sti
dec
leave
add
icebp
je
cld
mov
decl
jns
add
push
jb
repz
dec
jnp
call
mov
lock
clc
lea
pop
dec
mov
sub
adc
pop
add
incl
push
push
jmp
not
pop
adc
loopne
mov
add
test
push
lea
jmp
lods
pop
pushl
rol
or
push
adc
add
adc
incl
je
clc
clc
mov
add
push
imul
incl
inc
stos
adc
loopne
add
rclb
adc
sbb
add
add
adc
add
sbb
add
sbb
sbb
add
gs
gs
gs
add
je
add
jb
outsb
gs
outsl
gs
add
add
jae
outsl
je
sub
je
xor
je
mov
gs
gs
add
xor
gs
add
xor
add
add
add
add
add
repnz
add
add
add
adc
add
add
add
add
test
add
add
add
add
add
ret
adc
push
sahf
mov
cltd
jae
repnz
xchg
dec
inc
mov
mov
and
pop
adc
inc
sbb
sti
dec
je
mov
push
jns
gs
in
loope
pop
cli
sub
ret
push
cmpsb
int
xchg
add
adc
or
sub
out
pop
inc
cmp
addr16
ljmp
shll
jae
leave
add
rcrl
data16
fisttps
mov
stos
or
inc
cld
mov
push
cmpb
mov
adc
mov
ljmp
jecxz
loope
out
js
mov
cltd
mull
in
movsl
aad
cmp
xor
sahf
pop
inc
pcmpeqb
jno
addr16
stos
divb
jmp
push
roll
lcall
in
inc
outsl
xor
rcll
cmpsl
cmp
or
pop
mov
call
fisubs
ret
pop
add
int
out
bound
stc
in
lea
xor
sbb
hlt
ja
add
arpl
push
xorb
jp
sti
mov
fst
lret
fstp
cmpsl
fwait
jae
imul
cli
jno
and
jb
jb
jle
jb
and
mov
in
sub
adc
es
lods
in
lods
and
mov
adc
in
push
add
push
daa
push
cmp
icebp
xor
pop
mov
imul
dec
enter
fildll
cmpsl
xlat
sbb
mov
shll
int3
cmp
pop
stc
bound
aad
mov
out
adc
aaa
adc
mov
mov
rcrb
add
add
mov
mov
and
dec
adc
add
das
push
add
aad
daa
push
pusha
adc
sbbb
xor
mov
adc
cmp
pop
dec
pop
jmp
incb
pop
xchg
xchg
mov
push
pusha
mov
cmp
sub
fidivs
sarb
cmp
push
inc
dec
mov
imul
scas
mov
dec
hlt
ss
test
stos
sahf
cmp
sub
mov
scas
sub
cs
sbb
jae
xchg
jnp
sbb
int3
inc
xchg
or
inc
out
pop
add
dec
leave
and
popf
cmp
cmp
sub
add
in
push
imul
cmpsl
lret
imul
and
xchg
sbb
jae
lret
sbb
adc
loopne
and
bound
lock
push
pop
adc
push
mov
dec
sbb
sub
inc
idiv
xlat
and
mov
ja
addl
xor
xchg
inc
mov
lcall
lock
push
stos
scas
push
mov
daa
out
inc
xchg
xchg
push
pop
xchg
pop
std
mov
jmp
mov
lahf
xchg
sbb
neg
mov
push
inc
jmp
fwait
adc
stos
pop
jmp
ss
repz
mov
test
inc
pusha
out
jmp
cmpsb
fxch
push
clc
popa
je
in
sub
xlat
fdivrl
sbb
lods
sub
cmpsb
nop
and
or
mov
and
push
pop
filds
adc
dec
enter
mov
test
xor
jmp
jne
inc
das
jno
push
inc
je
nop
jecxz
xrelease
cwtl
mov
out
cmp
sub
hlt
sahf
in
addr16
mov
lcall
mov
mov
cmc
test
call
scas
sub
jne
mov
push
test
stos
jp
enter
shlb
xor
xchg
sbb
add
push
push
cmc
xchg
das
add
cmc
insl
sti
push
lods
clc
sub
mov
sbb
cwtl
adc
xor
push
pop
sub
and
call
push
cltd
out
jae
jbe
repz
jo
fimuls
mov
scas
out
jg
mov
popa
stc
cmp
sub
dec
xor
xor
pusha
add
or
imul
mov
xor
movsl
cli
daa
sbb
daa
hlt
jmp
xchg
out
shrb
cwtl
jb
leave
or
xor
ss
dec
push
sub
in
in
sub
mov
sub
cmp
push
pop
cld
pop
mov
pushf
add
cmp
movsb
push
cmpsl
das
sub
test
mov
and
xor
pop
stos
add
loop
inc
and
bound
mov
xor
mov
fldl2e
adc
addr16
out
cwtl
loopne
mov
dec
xor
in
adc
stc
movsl
push
mov
movsb
mov
lret
pop
rcrb
mov
inc
lret
rcll
lods
mov
aad
addr16
xchg
sbb
ficomps
jnp
jmp
xor
dec
inc
popf
mov
ja
sbb
dec
mov
aas
notb
testb
bound
fidivrl
sub
std
shll
inc
xor
jne
dec
in
pop
jno
cmp
dec
cmp
mov
adc
arpl
xchg
mov
mov
push
sub
mov
push
jnp
adc
jmp
jb
lret
inc
hlt
mov
push
js
cltd
je
mov
repnz
add
fcompl
mov
cmpsl
jge
push
ret
fiaddl
ret
test
movsl
add
leave
inc
je
jl
cli
sti
ss
pop
aad
loop
inc
js
daa
cwtl
sbb
cmc
cld
jge
inc
std
jae
mov
mov
push
mov
mov
pusha
cmpsl
pop
repnz
jge
mov
out
loop
and
movsb
sbb
iret
inc
jbe
out
sahf
shl
fdivrs
cmp
lahf
push
jo
dec
jmp
fdivrs
movsl
daa
jns
pop
mov
dec
cwtl
cld
lret
push
test
inc
push
mov
push
sub
fiaddl
shll
lahf
mov
xchg
cmp
inc
inc
pusha
leave
inc
adc
test
mov
jle
aam
xchg
mov
js
jbe
sbbl
fdivr
pop
inc
insl
xchg
hlt
mov
popa
daa
pop
js
dec
and
mov
mov
xchg
cli
cmp
jp
mov
pop
dec
mov
mov
ds
mov
and
cld
es
add
push
sbb
inc
mov
push
fisttpll
xor
stos
shlb
xchg
jae
fsubrp
fisubrl
jmp
add
fwait
dec
movsl
sbb
dec
lret
mov
sub
daa
addr16
sti
popf
fdivr
loopne
enter
pushf
and
aas
sub
adc
add
push
ret
pop
fisubrl
shrl
std
in
ds
test
jnp
repz
test
addr16
nop
insl
lock
cmpsl
cmp
mov
mov
in
sysenter
mov
test
lret
je
bsf
mov
or
adc
popf
out
jecxz
stc
jle
jl
or
and
push
enter
enter
xchg
js
fistl
imul
xchg
jecxz
stos
outsl
add
sbb
in
mov
rcll
mov
not
mov
fstpl
daa
jae
xchg
xchg
mov
ret
ljmp
lahf
jge
dec
jo
cmpsl
push
mov
les
aaa
gs
out
fwait
aam
jmp
pop
adcb
hlt
xor
adc
arpl
jmp
mov
out
mov
sbb
leave
dec
xor
cld
jle
lock
xlat
sbb
clc
sub
and
lret
push
fistl
loop
dec
adc
loope
or
dec
sarb
inc
dec
sbb
test
dec
mov
gs
xor
or
pop
lret
in
mov
sub
dec
imul
pop
xchg
cltd
gs
movsl
cmp
out
jo
popf
mov
and
into
int
std
outsb
push
jb
and
mov
jae
out
aam
xchg
orl
lret
jmp
js
rolb
into
add
mov
lock
aaa
jnp
int3
xchg
loope
mov
sbb
test
out
lods
mov
xor
add
push
inc
pop
add
mov
jne
mov
xlat
inc
lea
sbb
ljmp
lock
lock
jbe
cmp
xchg
and
add
js
and
mov
leave
sub
fs
jmp
fdivrl
addr16
and
sbb
dec
mov
mov
insb
dec
push
fdivl
insl
adc
ret
stc
jbe
mov
push
movsl
cmp
xor
jle
lds
nop
sbbb
outsb
xchg
daa
mov
notl
dec
inc
lock
pushl
add
imul
lods
jmp
jp
dec
sub
jge
loop
jge
aad
adcl
call
push
repz
jp
mov
jecxz
and
add
fists
les
inc
outsb
lods
or
sbb
adc
test
scas
mov
push
insb
pop
sbb
ret
xor
add
out
mov
push
ret
out
loopne
aam
das
pop
cwtl
mov
jmp
or
inc
jne
or
and
cli
jge
add
dec
and
popa
lods
sarl
push
pop
inc
inc
jp
sbb
iret
aam
sub
test
fnstcw
push
fwait
add
mov
outsb
stos
mov
test
lea
mov
insl
clc
cwtl
mov
cmpsb
xchg
fmul
leave
cltd
out
outsb
mov
enter
sub
jp
cmp
push
mov
sbb
cmc
insl
mov
fs
pop
inc
out
loopne
mov
push
outsl
mov
sbb
arpl
outsb
into
sti
or
ja
and
pop
cmpsb
insb
mov
in
pop
sbb
push
out
fisubrs
les
fisubs
mov
cltd
mov
xchg
dec
movl
in
adc
cmp
lcall
shrl
aas
cmpsb
lods
xchg
push
fldenv
xchg
xor
sub
dec
lea
dec
dec
add
jb
cmp
inc
or
xchg
loop
das
xlat
jle
out
mov
je
popw
jmp
aad
inc
lods
mov
fdivr
in
aam
inc
jecxz
cs
push
fcmovu
pop
ja
inc
outsl
jmp
fldl
lods
fmulp
sbb
push
fimull
cmp
sub
xor
and
clc
dec
mov
lods
rorl
rcrb
adc
repz
mov
add
inc
sub
in
jo
int3
js
stos
ja
push
sub
shll
imul
sub
std
and
lods
jno
hlt
test
insl
xor
dec
ds
cmp
pop
or
mov
cmp
test
popa
jp
xor
pushf
dec
cli
enter
xor
repz
mov
in
fwait
call
movsl
orb
xchg
mov
xor
dec
in
mov
movsb
mov
call
xchg
arpl
lcall
nop
sahf
ret
loop
fsubrs
aas
addr16
incb
add
push
in
adc
mov
lods
movsb
cwtl
xchg
femms
sub
nop
lods
add
scas
jno
add
mov
stos
sbb
test
iret
cmpsb
xlat
xchg
mov
in
ffree
addl
pop
jns
aas
stc
adc
out
into
rolb
and
shr
dec
jae
adc
fldl
mov
adc
mov
leave
lcall
add
sahf
mov
hlt
das
cmp
shr
inc
imul
stos
jbe
inc
push
add
jae
and
jge
iret
jo
mulb
jl
sti
jge
popf
mov
rep
sti
inc
push
push
rclb
jnp
sti
and
movsl
jg
add
stos
sub
js
mov
add
lock
or
mov
jno
dec
dec
jmp
xlat
pop
inc
mov
pop
adc
mov
lret
mov
push
repnz
enter
lds
jno
scas
aaa
rclb
adc
cwtl
les
mov
cltd
jp
inc
pop
push
mov
add
fs
pop
mov
mov
pop
dec
push
lods
in
xor
push
lahf
add
mov
out
lea
mov
push
pop
je
push
xchg
addr16
movsl
sti
ret
push
xor
ds
mov
shrl
cmc
mov
mov
shlb
add
xchg
add
jmp
cmp
pop
add
mov
adc
adc
sub
cs
pop
outsl
mov
adc
jns
cli
dec
add
movsl
out
xlat
imul
push
push
loopne
mov
aam
outsb
arpl
ds
cmp
push
pop
ss
pop
pop
push
in
in
add
pop
push
ja
mov
ret
add
adc
cmp
mull
icebp
pop
sbb
mov
or
xchg
jp
popf
fwait
adc
fdivs
out
sub
xor
movl
mov
or
loopne
add
ja
pop
lods
out
xchg
ja
dec
xor
dec
pusha
and
mov
push
outsl
xor
mov
fisubs
push
rorl
xchg
push
insb
inc
xor
or
inc
popf
js
jbe
add
gs
dec
cmp
pop
ds
push
fidivl
jo
sbb
adc
and
lds
in
pop
mov
daa
pop
fmull
xor
leave
bnd
push
rolb
gs
mov
orl
std
addl
jg
xchg
std
out
popf
jg
pop
xor
xlat
push
dec
cli
and
xchg
imul
in
push
jae
mov
mov
xchg
inc
imul
inc
dec
subl
clc
lds
and
or
sub
and
fstl
cmp
push
xchg
sarb
adc
mov
in
jmp
int
fs
cld
xchg
cmp
in
mov
cltd
sbb
testb
cmpsl
adc
xchg
insb
cs
xor
int3
sbb
fistpl
testb
mov
pop
sub
pop
push
rcl
jne
movsl
and
sarb
pop
mov
js
pop
jg
gs
and
and
into
dec
jmp
rclb
inc
aad
jp
push
or
aad
rorl
enter
out
add
sub
dec
int3
mov
push
or
shrl
sbb
rol
leave
jp
cmp
dec
push
push
cmp
daa
shrl
inc
sbbl
jmp
xchg
push
pop
mov
lods
imul
and
add
and
mov
mov
stos
popf
rorb
sbb
int3
imul
cmp
stos
in
and
lods
pop
add
mov
cmp
add
fidivrs
cli
decl
and
aad
sub
subl
call
lea
push
xchg
pop
jbe
in
leave
lret
mov
xchg
movsl
xor
shlb
jno
sbb
addb
dec
outsb
fwait
add
xchg
xchg
jp
add
sarb
jnp
pop
movsl
mov
scas
in
mov
movsl
popa
dec
gs
dec
adc
in
pop
or
dec
fs
aas
xchg
std
mov
cmp
out
cmpsb
mov
push
bound
repnz
clc
leave
xor
sti
push
bound
fsts
or
adc
scas
and
fistpll
das
jl
insl
xor
hlt
jnp
inc
inc
popa
mov
or
sarb
scas
dec
int3
push
and
int
fnstcw
cmpsb
push
sub
sub
xor
mov
icebp
or
add
xor
imul
cwtl
jnp
or
fmull
les
enter
lock
sti
std
or
dec
pushf
bound
mov
push
mov
lock
inc
movsl
movsb
es
add
subl
xor
fwait
lods
xchg
cmp
shll
xchg
fsubrl
movsb
ljmp
out
lock
dec
js
cmpsl
shlb
cld
or
les
push
pop
jnp
rclb
imul
mov
ret
dec
mov
cmc
aad
mov
jns
xor
shlb
mov
enter
dec
dec
xchg
out
sub
inc
loope
push
shl
sti
add
jmp
push
mov
out
insl
and
lcall
fs
movsb
lods
loopne
mov
in
push
push
mov
out
test
push
xor
in
push
cmpsb
scas
adc
push
repz
in
int3
in
sbb
and
sub
int3
ja
push
mov
dec
sub
fisubrs
mov
out
test
jnp
cmpsb
or
pop
inc
ljmp
arpl
add
add
testl
lea
in
popa
or
xlat
mov
cmp
popa
cmp
fwait
rorb
push
rcrl
push
jns
js
add
dec
push
push
shl
into
adc
cld
jg
test
icebp
mov
cmp
push
notb
cmp
fcomip
fcmovnu
cmc
fisttpl
jbe
add
mov
sbb
mov
mov
inc
cmp
push
inc
test
mov
cmpsl
xor
hlt
sbb
out
xlat
inc
into
mov
xlat
jl
andl
adc
mov
xor
testl
test
jo
pop
and
in
mov
loopne
add
add
and
inc
adc
mov
rorl
push
popa
dec
xchg
es
inc
mov
xchg
test
inc
pop
sub
in
sub
mov
push
cld
jns
add
adc
cmp
push
lods
aas
add
test
loope
sarl
mov
negl
pop
mov
xchg
inc
mov
sbb
out
add
jg
mov
add
sti
or
ds
mov
pop
mov
add
out
mov
int
adc
mov
dec
inc
mov
mov
test
test
fsubs
inc
loopne
xor
das
repnz
lret
xchg
jmp
adc
and
sbb
mov
xchg
inc
call
dec
add
jno
dec
inc
inc
out
fbld
push
and
push
data16
std
subl
mov
shlb
or
fisubs
enter
sbb
rol
xor
mov
jne
mov
and
outsl
adc
xchg
clc
push
lods
dec
adc
sbbl
fwait
lret
movsb
subb
push
popf
mov
dec
sbb
mov
sub
jecxz
scas
push
dec
mov
rcll
ret
ja
dec
clc
and
pop
in
andb
push
inc
outsb
fsubl
cld
sbb
and
and
arpl
cmp
pop
cs
sub
mov
test
hlt
ficoms
dec
lcall
inc
adc
in
add
add
inc
rolb
add
add
add
add
bound
add
add
add
add
add
add
add
repnz
add
add
add
adc
add
add
add
add
test
add
add
add
add
add
add
add
add
add
add
add
add
stos
stos
add
jg
int
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
loopne
add
or
add
xor
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
scas
leave
add
pushf
leave
add
xchg
leave
add
mov
add
test
add
jl
add
je
add
insb
leave
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
ror
add
fmul
add
lock
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
push
lret
mov
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
inc
lret
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pusha
lret
add
push
lret
add
mov
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
int3
add
lock
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
outsl
int
add
add
add
add
add
add
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
nop
int
add
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
sub
add
dec
into
add
jo
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
into
add
int3
into
add
aam
add
fmul
add
in
add
in
into
add
hlt
into
add
pop
iret
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
and
add
sub
add
cmp
add
dec
iret
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
