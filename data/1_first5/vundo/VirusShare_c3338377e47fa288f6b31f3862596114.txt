ss
popa
dec
add
xchg
pop
dec
cmp
push
adc
mov
sub
or
lret
pop
push
mov
adc
rorl
shlb
ss
fisubl
loop
dec
mov
jecxz
sub
xor
dec
sbb
stos
xchg
or
movsb
loopne
pop
int
cltd
cmp
push
adc
xchg
mov
pop
shlw
jecxz
sbb
xchg
mov
fninit
out
sbb
dec
mov
adcl
push
sbb
jl
ficoml
ss
das
push
fucomp
xor
fistl
jp
pop
push
jecxz
mov
fsubs
adcb
int
icebp
or
dec
mov
test
cmp
js
or
xchg
in
aad
imul
jl
nop
mov
gs
out
bound
cmp
repz
pop
arpl
adc
fidivl
in
cmp
mov
cltd
pusha
das
js
push
adc
into
cld
filds
adc
fcomps
arpl
adc
xchg
aad
pop
imul
loopne
pop
adc
mov
js
push
adc
jecxz
lods
jae
pushf
xlat
pop
adc
jle
mov
pop
arpl
adc
ret
fldenv
add
pop
cmc
loopne
pop
adc
bound
js
push
adc
xchg
mov
enter
push
adc
inc
and
adc
sti
pop
jne
inc
out
and
push
mov
andb
inc
adc
adc
repz
dec
pop
xchg
jo
aad
xchg
and
push
insl
fdivs
fadd
cmpsb
xor
ficoms
pop
push
ss
imul
fisubs
pop
push
call
es
adc
aam
push
sub
xchg
add
inc
jns
movlps
adc
cmp
lods
std
lea
lahf
mov
cmpsl
push
lock
xchg
adc
sbb
jmp
add
cld
push
mov
jmp
aad
enter
out
pushf
ret
xor
mov
pop
fs
fimull
loopne
fnstsw
test
insl
cmp
or
jo
inc
cmpb
in
xor
fsub
cld
and
loope
xor
push
fisubl
push
push
out
add
sbb
push
mov
xchg
pop
lods
sarb
nop
testl
roll
enter
push
mov
push
sbb
push
sti
call
enter
sbb
xor
add
mov
and
push
adc
shl
mov
jne
push
sub
repnz
aad
arpl
ss
dec
lods
pop
mov
sarb
dec
loopne
ficoms
sub
dec
pushf
cmp
sbb
insl
and
adc
scas
push
movsb
dec
outsl
scas
mov
and
adc
adc
add
cmp
sub
dec
js
mov
adc
sub
data16
ss
mov
fnstcw
sub
ret
ret
jge
cmp
add
dec
push
lret
inc
jns
mov
inc
mov
insl
js
xchg
test
mov
pop
inc
push
cmp
into
mov
xchg
push
xchg
mov
push
cmpsb
in
loopne
and
sbb
in
mov
pusha
push
adc
mov
jne
adc
xchg
insl
mov
push
lock
dec
enter
push
mov
popa
movsl
mov
xor
dec
insl
fidivrl
loope
or
leave
mov
pop
xor
mov
pop
jb
push
jo
sbb
addr16
fistps
xor
inc
loop
push
or
test
adc
cmp
xchg
dec
imul
pop
jg
pop
sbb
mov
fdivrs
lcall
mov
fwait
mov
pop
pop
pushf
cmp
mov
push
clc
rolb
inc
push
cmpsl
dec
in
pop
iret
daa
dec
xchg
pop
jbe
sar
mov
fwait
jne,pt
divl
dec
jns
pusha
push
adc
adc
push
xchg
xchg
and
fidivl
scas
pop
out
jnp
jmp
popf
sub
mov
popf
data16
jmp
pushf
fs
add
subl
pusha
push
adc
mov
lds
les
sub
ret
jo
push
add
jmp
push
imul
movsb
flds
mov
fs
shrl
loop
js
push
adc
or
cmp
xor
xchg
shrl
cwtl
stos
clc
aad
sbb
into
lds
push
adc
mov
pcmpgtw
movb
leave
hlt
fisttpl
bound
stos
or
jp
rcll
iret
mov
insb
pop
inc
enter
pop
pop
cmp
push
adc
aam
sbb
xlat
sbb
xor
fldenv
dec
ret
loop
subl
sub
daa
cmp
jo
stos
jmp
dec
ds
cmp
cltd
sbb
adc
dec
inc
inc
xor
or
xor
movsb
adc
out
jno
inc
mov
sbb
lret
sbb
sub
iret
dec
int3
fsubrl
adc
aad
mov
mov
pusha
push
adc
xor
xor
lahf
mov
test
inc
ret
pop
pusha
inc
jne
pusha
push
adc
mov
sub
cwtl
push
mov
push
adc
into
inc
inc
push
cmc
cmp
mov
mov
stos
stos
test
xchg
sbb
push
adc
add
adc
jg
or
lcall
push
add
leave
mov
lea
cmpsl
pinsrw
cltd
lahf
adc
pop
or
pusha
xchg
pusha
push
adc
inc
sbb
adc
movsl
dec
push
sub
sar
cli
inc
jno
out
ljmp
adc
call
mov
push
push
jecxz
ljmp
xorb
push
or
inc
jle
mov
xlat
or
cmp
sbbb
push
adc
and
ja
sbb
outsb
jl
pusha
jne
xchg
test
inc
ret
xor
push
adc
scas
ds
fsubrp
pop
ss
fs
xor
dec
or
aaa
insl
lods
push
inc
pop
mov
hlt
push
dec
cwtl
pusha
push
adc
pop
pop
insb
fidivl
pusha
push
adc
xor
imul
xchg
lods
pop
mov
push
pop
insb
sub
adc
lods
aad
mov
insl
pop
and
add
jecxz
xchg
and
ss
push
lock
xchg
mov
pop
adc
push
fs
adc
sbb
daa
add
pop
add
sub
and
mov
push
jno
sbb
out
pop
mov
add
mov
mov
cmpl
movsl
dec
loopne
std
xor
push
out
and
cmpsl
movsb
cmp
mov
cmpsl
mov
adc
lods
pop
fimuls
repz
fildll
sub
in
and
push
adc
shll
push
mov
addr16
adc
in
push
adc
lods
cmpsb
mov
pop
adc
or
enter
and
pop
mov
fbstp
xor
mov
pop
outsb
or
cmp
dec
push
movsb
mov
mov
repz
aas
xchg
fbstp
sarb
push
movsb
mov
popf
mov
out
xor
test
jno
push
scas
xchg
and
xchg
insb
jmp
loope
je
cmc
adc
mov
stos
mov
mov
dec
gs
pop
cmp
cmpsb
ficomps
cmp
mov
sbb
outsb
fnstsw
sub
mov
or
outsb
pop
mov
xor
fcomip
pop
in
inc
les
push
stos
push
mov
sbb
lds
xor
mov
push
sarl
push
dec
jns
cmp
fidivrl
jae
pop
jno
test
sahf
sbb
nop
hlt
mov
dec
add
in
mov
sbb
xor
mov
and
jnp
pop
movsl
aaa
and
sbb
adc
addr16
sbb
add
mov
and
pop
and
cltd
ja
pusha
iret
or
and
ljmp
jmp
xchg
mov
cmpsb
dec
lds
and
fwait
lret
sub
lods
or
lahf
pop
pop
fiadds
sbb
int
cmpsb
add
xorb
repz
stos
add
adc
mov
dec
inc
pop
mov
inc
les
dec
dec
push
icebp
das
jg
repz
adc
adc
scas
fmuls
adc
lea
lock
or
jmp
out
push
jmp
inc
iret
push
mov
fldt
xor
mov
outsl
push
test
mov
push
mov
iret
push
xor
test
ljmp
fwait
cmp
ret
sahf
fistl
aas
inc
jae
call
lods
or
mov
cmpsl
xor
fs
add
cli
sarb
test
xchg
stos
loope
rcr
dec
ljmp
aas
push
aaa
fiaddl
ds
lea
cli
dec
es
mov
mov
and
pusha
push
adc
pusha
ds
in
test
icebp
mov
jbe
cmp
in
cmp
xorl
cmp
lods
sti
shlb
pop
mov
xchg
ljmp
sbb
xor
jecxz
popf
add
scas
adc
push
adc
inc
cmp
ds
inc
sub
xor
mov
data16
mov
imulb
loope
push
insl
push
mov
push
cmp
xor
sahf
mov
addr16
jne
jo
mov
shll
sbb
in
mov
sbb
push
adc
imul
adc
es
lea
ss
mov
fisubl
sbb
cmp
jge
mov
cmpsl
ljmp
ret
fs
into
popa
fidivl
or
mov
xchg
mov
sub
jnp
scas
lret
mov
cmpsl
xchg
fidivrl
cbtw
enter
stc
push
leave
cmp
std
push
xchg
sub
mov
push
inc
cmp
push
fmuls
mov
out
in
xchg
es
loope
mov
sbb
pop
aaa
cmp
shrb
mov
pop
xchg
sub
sbb
ds
jmp
mov
dec
jl
adc
mov
sbb
adc
lret
xchg
sub
mov
mov
sar
mov
cwtl
ret
mov
pop
arpl
lods
jne
scas
mov
xor
xchg
fidivs
ljmp
push
repz
fbstp
dec
pop
xor
xchg
fbstp
mov
addb
imul
movsl
ret
outsl
ds
cmpsl
mov
pop
jbe
add
jmp
sub
outsb
dec
inc
in
dec
xlat
cmp
mov
dec
xchg
pushf
mov
sbb
roll
sbb
insl
out
pop
pop
insl
push
mov
dec
pop
xor
shrl
incb
push
fidivrs
out
push
sub
and
flds
je
leave
aam
enter
fs
in
pop
push
pop
stos
jle
inc
push
mov
push
push
add
pop
push
push
mov
aas
or
push
lea
divl
fbstp
mov
scas
fcoml
repnz
das
push
lcall
popf
mov
popa
js
lea
dec
pop
pusha
dec
and
stc
ja
je
push
adc
mov
insb
fbld
adc
enter
sahf
in
imulb
inc
cltd
or
jp
push
mov
push
adc
mov
ss
xchg
sub
shll
lock
test
or
dec
xchg
mov
insb
movsl
movsb
pop
cmp
mov
aad
pop
inc
inc
fldenv
push
sub
enter
jnp
leave
loopne
push
inc
jge
js
xchg
pusha
mov
out
mov
insl
maxps
test
push
test
les
sub
push
and
dec
jmp
data16
out
out
jno
inc
std
in
in
sahf
mov
jmp
xor
or
push
aas
in
call
sahf
gs
mov
mov
pop
sarb
ljmp
test
pop
xor
data16
test
nop
pusha
push
adc
fsubl
stos
imul
sbb
pushl
push
hlt
or
int3
es
cwtl
pusha
push
adc
xor
push
and
inc
cli
cmpl
sbbl
dec
push
hlt
push
cmc
dec
addr16
push
mov
mov
cmp
repz
inc
inc
xchg
mov
add
jb
dec
cmpb
out
pusha
xchg
or
addr16
popf
arpl
sbb
mov
pop
outsb
in
pop
out
push
lahf
test
test
sub
adc
or
xor
mov
push
push
push
adc
mov
jbe
push
sub
or
ds
cmp
mov
mov
les
fnstcw
out
mulb
push
mov
push
test
xchg
lods
cmc
mov
cld
stos
lahf
mov
xor
mov
arpl
adc
arpl
mov
adc
inc
lds
cmpsb
xchg
es
pusha
adc
pop
icebp
push
sbb
push
cmp
in
sub
jne
lea
push
dec
xor
nop
lcall
mov
xor
pop
dec
xor
push
push
inc
leave
push
fwait
out
push
repz
dec
jle
pusha
push
adc
mov
jae
mov
stos
rolb
dec
xchg
sub
fwait
ret
mov
cmpsl
out
ds
cli
mov
lahf
cmp
mov
fcmovb
lcall
in
pop
xchg
out
xor
pop
jmp
popa
dec
leave
sbb
xchg
push
sub
pop
in
inc
in
inc
in
dec
cmpl
cmpsl
dec
call
pop
push
lock
imul
xchg
mov
loopne
sbb
cmp
fwait
push
mov
cltd
cmp
lock
ss
aam
push
ss
aad
push
out
push
inc
xchg
and
out
cmp
sub
adc
in
loopne
dec
cmp
movsl
dec
loopne
repnz
cmp
out
movsl
cmp
xor
jmp
xchg
scas
movsl
pop
sub
mov
lret
popf
push
lret
cltd
push
lret
xchg
xor
xchg
sub
inc
pop
xor
pop
mov
daa
push
movsl
lods
cmp
daa
lea
ds
adc
sbb
cmp
jo
xchg
sub
lcall
ret
icebp
lcall
xchg
lods
mov
dec
jecxz
xchg
scas
sarl
sahf
xor
lahf
es
ds
cwtl
popa
push
mov
and
subl
sbb
adc
and
mov
ret
sarb
in
push
add
adc
mov
jmp
imul
push
out
movsb
idivl
mov
loop
das
mov
incl
test
push
sti
cwtl
push
std
push
jg
push
mov
lods
sbb
leave
inc
gs
mov
add
push
jge
push
adc
outsb
dec
adc
xor
fistpll
fucomi
nop
shrb
adc
clc
aam
and
in
xor
cmpsl
push
jle
lahf
cmp
cltd
pusha
aad
pop
cld
inc
mov
push
inc
jg
scas
pop
mov
std
cld
data16
mov
mov
movsl
lea
ret
dec
aam
push
hlt
fnsaves
inc
xchg
ss
mov
jmp
daa
xchg
insb
fldenv
mov
ret
fldenv
adc
pop
add
mov
cmpsl
jne
jge
xchg
xor
add
nop
xor
xor
dec
mov
daa
or
pushf
mov
ljmp
addr16
out
jp
mov
jmp
loop
lea
sbb
int3
fs
sub
adc
mov
adc
fcomps
iret
adc
lock
sub
xchg
mov
fwait
mov
and
xor
sub
push
jl
inc
lahf
pop
cmp
push
xlat
xlat
xchg
add
leave
fimull
xor
sbb
dec
sub
aaa
push
mov
adc
clc
mov
mov
push
mov
jg
cltd
mov
popa
imull
or
mov
adcb
leave
mov
mov
and
mov
inc
leave
mov
adc
and
pop
sbb
loopne
cmpb
icebp
add
dec
cmp
icebp
mov
stos
outsl
add
add
mov
ljmp
insl
add
pop
adc
jecxz
adc
pop
mov
loop
xor
out
enter
and
inc
flds
pop
mov
cmp
cs
lgdtl
and
mov
popf
mov
adcl
testb
sbb
mov
adc
push
shlb
pusha
fiadds
sbb
mov
jae
in
leave
xchg
push
jp
insb
pop
movsl
dec
xchg
mov
outsb
sbbb
addl
add
cli
lcall
dec
xchg
cmp
sub
xchg
xor
nop
and
shll
xor
leave
sbb
ds
pop
movsl
dec
xchg
mov
and
jge
mov
fidivl
dec
pushf
cmp
jmp
push
shll
mov
mov
inc
outsb
lcall
sub
mov
mov
sub
mov
sarb
mov
xor
and
mov
bound
sub
lea
push
sub
dec
xchg
push
sub
and
cmp
cmpb
in
std
pushf
sub
sub
and
aas
lock
inc
xchg
and
lock
sub
pushf
cmp
inc
xchg
sub
push
testb
movsb
dec
sbb
cmp
and
cmpsl
dec
xor
pop
rcll
lods
dec
xchg
sub
dec
pop
push
and
push
xor
xor
mov
sub
ds
jb
and
push
adc
call
fstps
out
jnp
enter
popf
sub
cmpsb
loope
lods
dec
xchg
loope
sbb
cmp
lahf
inc
xchg
sub
andl
push
push
sub
aam
sub
dec
push
and
add
xchg
es
and
xchg
rcll
mov
mov
popf
and
dec
mov
rcll
jge
aas
jmp
bound
mov
cmp
xor
and
xor
mov
cmp
lea
inc
mov
xchg
sub
mov
test
cmp
push
push
mov
mov
pop
insb
jl
rorl
gs
jbe
insl
adc
adc
insb
pop
add
insb
cwtl
pop
and
lcall
sub
push
jne
sub
inc
mov
aas
in
pop
inc
sahf
je
ljmp
mov
push
das
mov
rorb
cmpsl
pop
mov
jp
sbb
scas
loope
push
loop
pop
mov
push
insb
ds
sbb
mov
cmc
fs
cmpb
mov
scas
sarb
shll
fwait
add
mov
sbb
rolb
jae
inc
nop
pusha
push
adc
cli
push
push
js
out
mov
sub
inc
pop
lcall
and
fstpl
pop
inc
stc
pusha
movsb
cld
bound
lahf
hlt
test
sub
xor
pop
scas
xor
pop
mov
mov
and
test
arpl
adc
xlat
inc
cmp
mov
xchg
sub
pop
jge
inc
xchg
aam
push
adc
xor
rep
cld
decb
adc
pop
adc
out
adcl
ljmp
jl
cmpsl
mov
jl
lods
decb
andb
es
mov
outsl
sub
push
clc
inc
repz
and
cli
mov
mov
icebp
mov
test
loope
jl
jbe
repz
jecxz
outsl
outsb
xchg
sub
mov
pop
sub
insb
jmp
cltd
nop
outsb
out
sub
xchg
cli
scas
insl
xchg
gs
pop
adc
xchg
xchg
int
hlt
pop
mov
pop
pop
dec
sub
push
mov
xor
movsl
xchg
lock
xchg
gs
cs
lcall
nop
repz
in
mov
mov
fs
test
mov
mov
and
add
mov
test
cmp
cmp
sub
sub
xor
xchg
xor
pop
cld
scas
dec
pushf
das
rcrl
insl
push
xor
stos
mov
sub
xchg
xor
andl
dec
pushf
outsb
icebp
leave
xchg
push
cmp
and
pop
mov
push
movsb
or
mov
xor
push
mov
xor
add
sub
push
cmpsb
out
mov
and
scas
dec
pushf
movl
loop
shrl
inc
xchg
and
lock
inc
xchg
and
cmpsl
dec
ljmp
clc
jg
sub
inc
xchg
sub
pop
ja
jecxz
movsb
push
or
sub
pop
mov
xorl
stc
sbb
push
movsl
dec
loop
imul
dec
xchg
fldcw
out
mov
movb
out
and
lods
dec
xchg
xchg
lcall
lret
and
dec
jbe
mov
adc
pop
imul
scas
scas
mov
pop
ficomps
and
jb
xor
pop
pop
sub
xchg
inc
xchg
sub
nop
pusha
push
adc
and
loopne
mov
push
scas
fistl
das
push
divl
insb
push
rcrl
mov
push
movsl
loopne
outsl
jg
and
subl
xor
fs
clc
bound
adc
insl
shll
mov
popf
jecxz
ss
sub
adc
jne,pt
mov
cmp
mov
xchg
outsl
scas
sbb
ljmp
inc
jle
cs
and
popf
mov
mov
nop
dec
popf
sub
out
push
cmp
push
orl
insl
jno
lcall
xorw
jge
cmpsb
xor
mov
stc
inc
jb
ss
lods
lods
xlat
mov
adc
bound
mov
cmpsl
cld
push
outsl
or
adc
sbb
int3
push
insb
cwtl
add
inc
dec
data16
push
sub
xor
push
pop
mov
addr16
inc
sahf
js
ljmp
cld
push
fnstenvs
mov
cmpsl
cmp
outsb
iret
mov
stos
xchg
pusha
aad
dec
lahf
jo
mov
ja
dec
xchg
cs
lods
fdivl
cli
mov
xchg
fs
addb
jbe
mov
mov
mov
fdivrl
es
xchg
sbb
sub
or
mov
insl
pop
out
mov
scas
dec
test
dec
inc
pop
jg
add
mov
aad
repnz
hlt
daa
test
pop
ljmp
addr16
xor
xchg
adcl
mov
stos
int3
adc
mov
les
scas
mov
iret
rcr
mov
sub
xchg
inc
add
call
inc
cltd
mov
add
inc
push
int
xor
mov
add
mov
mov
and
sub
cmp
mov
out
pop
je
pop
sbb
jg
jo
lods
adc
loopne
fdivrs
js
das
cmp
insb
fisttpl
leave
adc
mov
test
decb
sub
inc
fsubs
inc
loope
inc
push
dec
std
xchg
movl
pop
cld
xchg
cmp
pop
cmpsl
xchg
jg
pop
sti
mov
sti
es
loop
sbbb
loop
lahf
imulb
push
cmp
cltd
xchg
insl
mov
pop
adc
pop
pop
xor
add
mov
add
js
js
in
xor
dec
xor
ljmp
sbb
cmp
jmp
adc
and
lea
popf
jnp
xchg
addr16
outsb
lret
dec
add
mov
shlb
popa
adc
movsl
lret
subb
pushf
xchg
fiadds
mov
push
movsb
aas
lock
and
xor
mov
mov
clc
jbe
xchg
sub
push
fisubrs
and
bound
insb
push
cmp
mov
pusha
in
out
jge
sub
push
push
dec
pop
cmp
lock
cmp
inc
pushf
cmp
sahf
lcall
dec
xchg
stos
add
sub
xchg
pushf
sub
sub
xchg
push
xor
and
in
push
and
cmovno
inc
mov
sahf
cli
lcall
dec
xchg
mov
sub
xchg
xor
push
adc
outsb
xor
pop
cmp
and
dec
fdivs
xchg
and
outsb
mov
cmp
mov
mov
mov
sub
sbb
cmpl
xor
cmp
sub
xchg
push
inc
add
cmpsl
dec
out
inc
popa
loopne
xchg
jecxz
subl
and
sti
xor
push
cmp
and
pop
data16
mov
sub
xchg
sub
dec
sbb
aas
lock
sub
aad
xchg
cmp
cli
test
out
inc
mov
mov
xchg
and
test
dec
xchg
aas
jecxz
dec
lahf
dec
add
xor
cmp
dec
pop
cmpsl
dec
out
dec
xchg
xchg
es
or
out
inc
xchg
cs
sarb
fsubs
push
mov
popf
and
mov
sub
out
dec
jecxz
popf
pop
aaa
mov
add
pop
stos
xor
popf
pop
notl
jl
xchg
fs
sub
sbb
das
add
test
adc
add
bound
add
xchg
and
adc
and
adc
sub
adc
and
adc
add
int3
and
adc
add
jle
add
movsl
out
mov
push
and
cmpsl
and
movsl
xchg
cwtl
bound
inc
jae
xor
dec
push
jo
sbb
and
add
sbb
xor
adc
outsb
aaa
ret
cmpsb
fmuls
jnp
or
cmpsb
loop
sbb
mov
mov
cmpl
xchg
outsb
push
and
sbb
and
pop
movsl
cmp
push
stos
test
scas
pop
into
inc
fwait
ja
and
int
les
fld
adc
adc
jae
ffreep
ret
jg
les
mov
and
popa
dec
xchg
and
push
stc
out
mov
test
mov
or
cmp
cwtl
enter
xor
mov
push
adc
inc
inc
dec
stc
xlat
jmp
mov
sub
lahf
ret
mov
mov
shlb
sbb
mov
push
adc
pop
add
ja
bound
sub
and
enter
in
jl
call
mov
cltd
movsb
push
adc
jg
jmp
push
mov
lahf
pop
add
arpl
jmp
mov
mov
flds
xor
shll
mov
out
sbb
sbb
xor
outsb
jg,pt
cmp
dec
jp
repz
jmp
shll
outsl
pushf
xchg
or
imul
pop
gs
and
loopne
push
aas
xchg
add
pop
mov
fnstcw
inc
sub
sbb
jecxz
jmp
ss
sarl
inc
push
scas
shll
pop
jns
push
popa
out
push
pop
push
insl
jb
dec
mov
adc
inc
pusha
cmp
fwait
ret
jmp
cmpsb
xchg
and
and
cwtl
lock
sbb
insl
mov
pusha
and
fildl
mov
cmp
insl
mov
roll
test
xor
cmpsb
insl
mov
lcall
leave
aas
ds
scas
mov
ds
mov
es
call
push
inc
cmp
mov
adc
test
adc
jmp
mov
insl
movsb
popa
stos
fldl
push
adc
sbb
cmp
mov
xchg
daa
dec
xchg
adc
push
mov
push
mov
pop
lods
cmpsl
loope
dec
dec
inc
hlt
imul
fistpll
in
pop
ss
cmp
lcall
jae
jb
adc
dec
jns
movsl
fsts
in
sbb
fimuls
fisubl
sbb
jp
fimuls
rol
addr16
jg
fdivrl
mov
mov
cmp
aas
cmp
or
push
adc
fnstcw
test
popa
loopne
inc
dec
mov
jnp
adc
shrl
push
outsl
hlt
shlb
sbb
sbb
adc
into
les
adc
pop
jne
fistpl
mov
mov
or
loope
test
aas
test
sub
aaa
nop
outsb
filds
dec
xchg
and
fs
xchg
sub
cmp
shll
stc
jmp
mov
lock
nop
push
or
and
jne
fsts
xchg
push
xlat
mov
pop
icebp
push
pop
inc
and
jb
mull
sub
dec
jb
je
lods
scas
add
push
mov
orps
hlt
push
mov
cmp
test
lds
outsb
jb
imul
xor
adc
sub
push
in
adc
xchg
out
lret
lcall
in
push
rorl
dec
inc
mov
xor
mov
scas
xor
shr
pop
rolb
xlat
movsb
shlb
outsb
rolb
or
dec
rol
inc
dec
xchg
jle
push
jns
xchg
es
push
lods
movsb
pop
rorl
fwait
int3
pop
mov
lods
cmp
push
mov
fnstsw
mov
fists
mov
xchg
pop
cmp
pop
push
xchg
inc
fstp
inc
int
mov
in
sbb
pop
std
lret
sub
mov
mov
mov
fdivrp
lret
into
fdivrp
ret
mov
imul
mov
addr16
adc
pop
imul
enter
mov
add
mov
pop
adc
test
pop
adc
mov
adc
mov
adc
pusha
lods
mov
xchg
dec
aam
pusha
outsl
loope
push
adc
aad
pop
ja
mov
xor
sub
add
lea
lock
idiv
mov
adc
push
arpl
pusha
push
adc
xchg
pop
add
xor
push
and
in
rclb
mov
jns
pusha
push
adc
push
add
mov
xlat
sbb
aad
jg
aaa
out
nop
and
add
push
adc
jbe
pushw
adc
mov
push
push
je
jns
push
mov
push
adc
mov
adc
adc
sti
jns
pop
arpl
adc
sahf
cmpsb
cli
and
test
cli
mov
movsl
cmc
pop
clc
mov
pop
or
or
lret
in
and
pop
iret
mov
repnz
icebp
add
loopne
pop
adc
cmc
lods
sbb
push
insl
int3
and
push
mov
push
nop
xchg
sbb
scas
pop
jne
std
inc
stos
mov
add
out
mov
fucom
xor
jmp
sub
cmp
cmp
cs
and
push
aaa
xor
lods
test
test
sbb
adc
in
aaa
xchg
insb
fidivl
adc
nop
push
ljmp
call
xchg
add
lods
xor
outsl
fidivl
adc
push
popf
xchg
mov
and
xchg
pop
xor
shr
xchg
and
mov
jmp
adc
orb
mov
mov
and
xchg
shr
pop
xor
mov
push
lock
pop
xor
cmp
shlb
enter
imul
insl
push
mov
mov
into
sbbb
fistl
push
mov
fcmovnbe
in
movsb
mov
jle
lea
adc
dec
xchg
fldcw
cltd
mov
adc
insl
fndisi(8087
loopne
pop
xchg
and
rorb
or
jb
mov
adc
lods
pusha
jno
pop
push
insb
pop
adc
xor
cmp
mov
sub
shr
arpl
mov
cmp
in
imul
pop
jle
gs
xchg
and
dec
cmp
cs
mov
cmp
dec
push
imul
aad
pop
xchg
add
test
push
xchg
sub
push
xchg
sub
cmp
out
xor
jae
xlat
add
xchg
push
xchg
sub
push
mov
push
inc
push
mov
fdivrs
jecxz
dec
xchg
es
sub
pop
push
cmp
pop
pop
xchg
cs
mov
mov
push
mov
out
insl
xchg
and
and
fs
cmp
lock
hlt
insb
mov
stos
scas
lock
adc
out
inc
popf
sub
lods
fistpl
fsts
push
mov
cltd
push
mov
cmp
and
lea
sti
rep
xor
loope
out
xlat
or
jmp
out
or
sbb
fisttps
mov
outsl
fsubp
jmp
pop
xor
and
xor
inc
xchg
in
pop
lcall
loopne
arpl
mov
dec
push
pop
inc
sbb
jp
ljmp
rcl
rcl
icebp
cwtl
enter
sub
es
and
insl
pop
jb
enter
and
movsl
roll
leave
inc
sub
fcom
inc
out
and
mov
and
xchg
adc
pop
inc
adc
or
adc
jae
filds
add
add
filds
dec
add
inc
sbb
push
bound
popa
fistl
and
sbb
sahf
fidivl
sbb
mov
fdivl
xchg
cmpsb
js
adc
les
sub
mov
cmp
lea
cmpsl
cmp
sarb
sub
jp
fsts
mov
pop
and
test
xchg
es
inc
mov
ja
mov
js
push
adc
sub
adc
movsb
mov
add
push
sbb
adc
lods
pop
add
popa
push
jp
inc
enter
scas
push
jge
roll
xor
fisttps
test
jno
xor
sahf
ja
add
shl
or
loop
int
sub
out
jne
insl
mov
out
in
in
pop
out
fneni(8087
inc
int
inc
fnstcw
mov
dec
fdivrl
or
fdivrs
fiadds
lret
cmp
cmp
outsb
xchg
cmp
xor
cld
cmpsb
push
insl
fwait
jbe
shlb
jge
popf
sub
mov
sbb
jmp
es
mov
sbb
mov
cmp
push
adc
mov
xor
pop
jae
es
mov
cmp
push
sti
mov
out
stos
inc
cmpsl
loope
cmc
inc
and
bound
push
lods
shl
mov
sbb
lcall
mov
jae
jecxz
lds
dec
mov
imul
cmp
sub
jno
fucomi
in
pop
call
lods
sub
or
add
add
sti
roll
mov
xor
mov
mov
xchg
dec
mov
push
push
add
rolb
add
jbe
stos
inc
shr
gs
sti
xchg
and
adc
mov
lds
insl
call
and
imul
mov
imul
push
in
pop
bound
lods
rol
xchg
xchg
jnp
mov
ds
movsl
in
push
insl
daa
rcrb
aas
sub
cmp
pop
jmp
insl
in
stos
lahf
dec
push
xchg
xchg
cmp
pop
rolb
push
jb
sbb
adc
enter
jle
arpl
adc
xchg
lahf
push
loopne
and
insl
nop
xor
sub
mov
sub
mov
and
test
adcl
mov
xchg
and
loope
dec
movsb
shll
mov
xchg
test
cmp
sbb
aad
cwtl
xor
mov
pop
std
data16
jbe
push
ret
sub
adc
cli
mov
dec
xor
mov
adc
test
dec
mov
adc
mov
sbb
adc
cmp
orl
sbb
out
xchg
jno
stos
hlt
and
das
xchg
std
stc
jne
inc
jl
scas
repnz
fcompl
iret
subb
pop
add
mov
cld
insl
adc
sbb
mov
cmp
adc
xor
xor
pop
cmpsl
add
pusha
shr
les
popf
ljmp
add
dec
sbb
scas
negb
outsl
mov
adc
scas
inc
xchg
es
xchg
jno
inc
fwait
xchg
push
adc
mov
mov
sbb
in
sbb
mov
or
lea
movsb
inc
pushf
cmpsb
aam
scas
adc
mov
sub
jg
mov
xor
push
into
stos
jne
mov
cmp
adc
and
jo
sarl
inc
and
andb
adc
inc
popa
adc
sbb
pusha
out
mov
and
mov
jmp
xor
push
insl
sbb
adc
xor
out
pop
popa
mov
fistpl
push
or
dec
mov
adc
jae
inc
lahf
pop
mov
enter
mov
inc
sub
sbb
lock
mov
jg
test
les
lds
stos
fidivrs
aad
xchg
lahf
sbb
or
andl
lret
sub
ret
fidivrs
in
icebp
dec
jae
or
push
adc
adcl
lret
cs
insl
sbb
cli
popa
mov
jne
sbb
out
mov
icebp
and
insl
and
stc
jp
or
push
adc
mov
xchg
stc
push
fwait
lea
xor
xlat
dec
arpl
jmp
in
jnp
sti
icebp
add
dec
adc
push
xor
push
jns
or
adc
lods
je
dec
mov
out
pushf
mov
adc
adc
mov
pop
ja
sbb
pop
adc
or
out
roll
aad
es
pop
fnstsw
push
mov
fbld
fdivs
arpl
inc
fmuls
ds
lea
cmp
call
loop
pop
sub
sbb
pop
popf
popf
lock
lods
pop
ss
pop
in
dec
test
jbe
cmc
sarl
mov
clc
stos
lahf
dec
push
mov
xlat
movsl
dec
xchg
push
inc
xchg
push
pop
cmp
adc
mov
mov
scas
scas
xchg
mov
mov
pop
jbe
sahf
pop
sbb
ds
mov
xchg
adcl
cmp
lods
pop
mov
adc
jecxz
ss
fisubrs
in
popa
mov
addl
dec
ss
pop
jmp
xchg
dec
xchg
and
out
in
push
cld
or
xor
out
cmp
push
adc
sub
mov
and
imul
cmp
adc
js
arpl
adc
sahf
mov
pop
cmp
jbe
mov
cmp
cld
or
nop
pushw
adc
sub
xchg
push
lods
movsl
mov
aaa
sbb
xchg
mov
scas
dec
add
push
adc
arpl
adc
push
jl
andl
aaa
addl
mov
movsb
cmp
scas
jae
enter
add
push
movsb
and
lods
movsl
mov
push
cli
nop
call
cmpsb
dec
lahf
movl
lcall
in
movsl
movsl
dec
jns
mov
push
sub
bound
xchg
and
pop
insb
mov
or
subb
addl
push
mov
add
xor
mov
mov
jmp
xor
fxam
cmp
jecxz
mov
mov
mov
inc
pop
movl
hlt
jle
testl
popf
push
in
add
adcl
lods
xchg
subl
inc
or
cmp
push
sti
mov
aam
push
adc
mov
clc
mov
and
push
adc
adc
insl
and
stos
je
aam
sbb
cmp
sbbl
lods
sub
out
fsubp
pop
scas
loopne
fcomp
cmp
inc
aam
sbb
add
out
loopne
arpl
aam
les
adc
imul
out
push
ret
sub
es
mov
jae
pop
or
inc
and
cmp
or
or
in
stc
xchg
in
jp
std
xlat
data16
mov
xchg
cmp
divb
outsl
push
mov
pop
and
out
xor
mov
fnstenv
adc
mov
pop
arpl
in
seto
cmpsb
mov
fistpl
mov
mov
cmp
xor
add
xchg
add
shr
addr16
push
aas
add
movsb
dec
insb
xorl
out
mov
inc
pop
fwait
xor
xchg
and
mov
push
adc
cmp
lcall
sti
sarb
popa
ljmp
inc
push
pop
dec
xor
xlat
fildl
sbb
or
adc
into
mov
insl
cmp
add
or
xor
add
xor
icebp
mov
lcall
cmp
scas
jno
frstor
and
fildll
push
fndisi(8087
sbb
cld
push
inc
sbb
push
test
mov
and
mov
daa
pop
xor
sbbl
mov
lcall
push
in
mov
lock
jae,pt
inc
mov
cmpsb
push
movsl
lret
dec
faddl
adc
movsl
inc
adc
movsb
leave
adc
arpl
adc
pop
bound
xchg
ficoms
xchg
xchg
or
nop
pushw
adc
cld
pop
xchg
and
xchg
iret
pop
pusha
push
adc
mov
outsb
mov
imul
or
jle
pusha
push
adc
and
repnz
xchg
sub
lea
int
pop
mov
lods
xlat
xor
push
movsb
out
rcll
call
cld
mov
add
and
xor
cmp
testb
push
fsubrl
xchg
xchg
nop
imul
loop
dec
cmp
and
movsl
subb
push
xor
pop
aam
push
adc
ds
xchg
add
sbb
push
push
add
dec
out
sbb
sbb
sahf
push
cmp
push
cmpsl
pop
pop
iret
mov
mov
push
sbb
push
imul
test
shll
sub
in
mov
adc
out
in
pusha
push
adc
push
xchg
cmp
inc
pop
pushf
cmp
jno
loopne
mov
dec
fdivrp
inc
movsb
dec
xchg
or
lods
aam
add
mov
test
pop
pop
push
lock
sub
popa
call
mov
fcmovu
insl
mov
cmp
cmp
arpl
dec
cmp
loop
test
push
push
out
loope
in
cwtl
mov
jno
jecxz
push
mov
aad
insb
aam
push
adc
out
cmp
lds
sub
xor
into
xchg
in
in
shlb
adc
jge
jno
pop
inc
push
mov
push
aaa
jo
push
mov
inc
popf
pop
fmull
es
stos
outsb
out
mov
sbb
int
test
icebp
pushf
sub
imul
and
dec
cli
lea
cltd
cmp
shl
pusha
push
adc
hlt
loope
pop
lods
push
mov
pop
mov
pusha
push
adc
popa
xchg
mov
fwait
or
das
mov
hlt
inc
push
movsb
sub
jmp
push
sub
or
mov
inc
sub
pop
sub
pop
adc
sub
bound
and
iret
mov
fimull
fsts
inc
pop
cmp
ffree
fwait
scas
lods
test
xchg
scas
lods
scas
cmp
movsl
inc
scas
enter
pop
sbb
stos
add
addb
xchg
xchg
scas
fmuls
sbb
lods
aad
mov
jge
xchg
out
les
adc
jp
xchg
dec
mov
fs
orl
jp
popf
loopne
push
adc
sbb
cltd
and
inc
xchg
dec
dec
insl
xchg
lock
mov
mov
int
popa
inc
adc
bound
in
shr
sarl
fcomps
mov
and
xchg
xor
sahf
cmpsb
pushf
and
shlb
adc
inc
xor
mov
mov
cld
add
mov
xor
push
cmpsl
inc
inc
jnp
pushl
popf
aas
push
jns
lock
xor
pop
pop
sbb
mov
pop
pop
loopne
jmp
cmp
pop
in
or
pusha
push
adc
stos
xchg
mov
popa
ja
push
in
mov
sub
es
insl
ds
dec
and
add
in
inc
aas
fs
insl
jno
ds
xchg
dec
pop
pop
xchg
xor
test
ds
mov
pop
icebp
mov
in
pusha
push
adc
push
out
sbb
cltd
loop
cli
outsb
jle
adc
and
es
stc
and
sub
adc
pusha
push
adc
dec
xor
les
adc
repnz
mul
inc
sub
insl
cmp
dec
xor
imul
adc
mov
mov
or
out
ljmp
adc
loop
ret
push
sub
shrb
jmp
mov
pusha
xor
clc
or
fidivl
mov
pop
sub
movsb
ret
popa
push
xor
pushf
imul
or
sbb
lods
jp
xchg
pop
sub
xchg
scas
mov
push
adc
cld
lahf
jne,pn
xor
jbe
pop
inc
fstps
push
enter
mov
xor
jbe
lahf
imul
or
aam
dec
lea
push
out
movsl
or
or
jmp
mov
outsb
cld
mov
mov
jge
pop
inc
or
sub
cmp
pop
dec
push
pop
cmp
adc
mov
shrb
push
pop
leave
jo
repz
mov
cld
fwait
lods
mov
jp
lock
stos
movsb
arpl
jbe
sbb
push
mov
es
lock
movaps
enter
mov
mov
lods
xor
push
pop
out
movsb
or
sbb
rorl
aad
mov
test
out
cmp
mov
fidivrl
shlb
mov
outsl
out
movsl
loop
and
mov
adc
xchg
mov
loopne
mov
add
pop
push
or
cld
popf
mull
insb
fidivrl
and
cmp
mov
pushf
xlat
xchg
xor
mov
mov
cmp
jecxz
mov
fildl
adc
adc
inc
push
ds
mov
mov
xchg
hlt
pusha
push
adc
cmp
sub
dec
lock
push
adc
stc
mov
push
mov
pop
mov
pop
int3
xchg
pop
cwtl
es
pusha
push
adc
fsubl
inc
adc
ja
daa
xor
jb
test
pusha
push
adc
enter
pusha
push
adc
and
mov
cmp
mov
sbb
and
stos
sbb
mov
cmpsb
clc
aad
in
or
aas
cmpsb
and
repz
pop
fdivrp
pusha
push
adc
xchg
popa
push
push
jmp
pop
adc
aad
hlt
pusha
push
adc
push
scas
pcmpgtw
rcl
lock
push
adc
and
cs
dec
sti
cs
xchg
and
jmp
out
stos
mov
pusha
push
adc
adc
lret
stos
sbb
int3
scas
push
adc
inc
sbb
adc
pusha
push
adc
sbb
sub
jg
outsl
iret
lret
adc
inc
stc
add
xlat
add
and
xchg
adc
push
inc
cmp
scas
out
cmpsb
out
push
add
push
adc
lret
call
in
and
pop
dec
std
push
pop
shll
sub
and
adc
fistpl
xchg
imul
data16
cmp
sbb
test
push
adc
outsl
mov
push
loope
jnp
aad
lods
imul
insl
sti
pushf
mov
jl
into
test
pop
add
insl
sti
pushf
mov
js
repz
ret
shrb
xchg
sbbb
cwtl
subl
shrb
jbe
push
pop
sbb
iret
ret
les
cmpb
ret
jbe
add
inc
push
inc
mov
mov
push
adc
inc
cltd
inc
clc
rcll
in
mov
mov
scas
mov
sub
adc
jg
or
jbe
lods
imul
fidivrs
and
addr16
cmp
push
push
xor
push
je
cmp
sahf
int
xchg
sub
or
das
mov
add
lods
xchg
and
xchg
mov
scas
adc
mov
jo
xchg
and
xchg
mov
into
adc
loope
imull
scas
sbb
cmpsl
fistpl
sbb
push
pop
xchg
fsubrs
mov
ds
and
and
aas
insb
push
clc
dec
push
mov
cwtl
cwtl
shll
mov
pop
cld
pop
xor
scas
push
mull
je
and
dec
push
fiaddl
sbb
sbb
dec
push
ret
movsl
xchg
mov
and
jno
xrelease
stc
rcrl
mov
nop
aaa
xchg
scas
lods
xchg
mov
sub
push
dec
sbb
dec
cmp
call
cmp
insb
and
inc
dec
push
ret
cmpsb
xchg
scas
mov
mov
jae
fistl
jnp
in
pop
outsl
pop
mov
cmp
mov
ficomps
arpl
sysexit
movsl
loope
dec
pop
add
jbe
sbb
fidivrs
imul
in
movsb
loopne
mov
pop
fistps
sbb
lea
jmp
shll
push
push
xor
mov
mov
aas
cmp
je
fidivrl
daa
repnz
jno
pop
mov
pop
fsubrp
popf
pop
scas
das
mov
push
scas
lods
ja
scas
mov
adc
xlat
daa
push
cmp
ret
pop
pop
ss
pop
je
fbld
adc
mov
push
out
push
out
push
in
pop
cld
jge
xor
pop
dec
add
xchg
mov
ljmp
push
hlt
bound
jp
cmpsb
jecxz
mov
mov
and
pushf
mov
xchg
in
and
loope
loop
push
mov
fidivs
cmp
mov
push
push
jb
mov
dec
jmp
loop
pop
test
test
xor
jl
sub
jne
jno
push
int
push
mov
mov
stc
cmc
sub
mov
mov
jnp
insb
cli
push
add
sbb
mov
pushf
xchg
out
idivb
mov
push
lods
adc
lret
sahf
cld
mull
inc
adc
inc
arpl
sbb
ljmp
dec
push
pop
push
sub
mov
shlb
mov
adc
lods
cmp
xchg
stos
dec
sbb
sub
xchg
in
push
mov
jle
lds
adc
or
add
sbb
ds
int
rsqrtps
shrl
sbb
cmp
gs
or
stos
es
mov
mov
mov
dec
cmc
dec
mov
popf
std
xchg
pop
jp
std
aad
in
frstor
xchg
test
push
imulb
dec
in
sbb
push
ret
cmp
mov
mov
cmp
dec
mov
add
push
addr16
inc
push
mov
xchg
xor
and
in
jecxz
test
push
faddl
nop
std
lods
inc
and
cmp
xchg
call
outsb
std
mov
fnstsw
mov
out
or
decb
dec
mov
mov
adc
rcrb
aaa
je
hlt
mov
es
sub
jae
or
mov
in
add
fcoml
gs
es
mov
xchg
push
and
xchg
push
subl
fbld
inc
adc
gs
bound
push
push
xchg
and
mov
jg
xchg
dec
mov
adc
or
pop
cmp
jae
mov
and
inc
sub
sahf
jne
sub
jnp
push
or
or
or
adc
adc
sahf
cld
scas
mov
pop
mov
pusha
pusha
mov
xor
pusha
push
lret
out
push
cmpsl
sahf
xor
xor
loopne
pop
jo
test
jecxz
aaa
out
lea
xchg
mov
outsb
mov
outsl
push
insl
sub
call
and
shrl
jo
pop
mov
cmp
mov
mov
pushf
jmp
adc
lea
aam
out
push
cmpsl
cmp
out
xor
xchg
sub
jbe
sarl
adc
adc
fistl
loope
adc
mov
ds
mov
cmpb
jb
in
push
adc
or
stos
ds
pop
loopne
out
push
dec
xchg
and
stos
sarb
fwait
jae
std
adc
cwtl
inc
fnstenv
insl
push
hlt
jg
insl
and
xchg
cmpsl
mov
mov
sbb
fs
xchg
mov
lahf
dec
dec
mov
repnz
mov
pop
xor
dec
xchg
push
repz
cli
roll
idivl
pop
ss
sahf
xchg
arpl
fstps
orl
mov
push
jo
sbb
shrb
in
dec
sarb
pop
adc
movsb
je
fneni(8087
loopne
dec
out
pop
jg
lods
pop
inc
es
sbb
lea
test
in
loope
repnz
mov
push
mov
lcall
movsl
movsl
movsb
imul
icebp
mov
es
ds
fbld
pop
mov
cs
dec
shlb
fs
mov
dec
dec
inc
rep
fnstsw
insl
pop
ljmp
mov
adc
and
xchg
xchg
cs
cmp
mov
cmp
fidivs
in
stos
inc
xchg
nop
popf
outsb
aad
adcl
cmpsl
push
out
push
push
pop
jmp
and
leave
cmp
movsl
sti
mov
rcll
in
fisttps
je
jp
into
jp
pushf
adcb
addr16
dec
faddl
jnp
popf
xchg
inc
xchg
adc
xchg
out
ret
adc
cli
mov
gs
pushf
in
test
fidivrl
repnz
imul
dec
pop
dec
push
int3
adc
cmpsl
push
cmpsl
mov
and
hlt
mov
lods
mov
loop
adc
and
sub
xchg
movsl
adc
jmp
inc
rorl
inc
push
sub
movsl
xchg
mov
sub
push
push
fwait
jo
pop
xor
fsubs
jge
pop
sub
in
scas
rep
sbb
mov
mov
inc
dec
xor
mov
mov
add
cmpsb
mov
sarb
xchg
xor
push
pusha
jle
es
jno
stos
sbb
push
repz
std
push
jns
cmp
mov
xchg
adc
cld
sbb
push
mov
inc
and
lock
xchg
rcr
cmpsb
xor
dec
gs
in
lahf
test
and
leave
gs
repnz
in
movsl
xchg
mov
sub
int
lret
in
ds
mov
cmc
mov
ss
loopne
xchg
and
inc
pop
and
mov
push
cmp
and
pop
mov
movsb
cwtl
cmpsl
push
imul
movsl
loope
pop
jmp
lahf
hlt
roll
xor
scas
es
xor
ret
in
jns
dec
dec
scas
cmp
or
je
jg
dec
dec
mov
mov
pop
add
jb
stos
aam
cmp
sbb
push
mov
lods
push
outsl
push
mov
fucomip
imul
push
adc
addr16
sub
fmul
sarl
mov
jns
pop
ret
pop
in
adc
in
dec
call
in
test
mov
andb
sub
xchg
jnp
sbb
fildll
or
xor
aad
and
push
xor
or
outsb
mov
sub
out
push
decl
bound
adc
fisubs
adc
fidivrl
jl
loopne
cmp
fcmovnbe
lahf
push
data16
ds
test
or
ss
shl
dec
push
mov
sbb
pop
push
cli
pop
pop
popf
fldl
loope
outsb
cmp
fnstcw
push
or
cmpl
xchg
sub
mov
sub
sbbl
jle
stos
sarl
xchg
mov
lahf
dec
xchg
fwait
mov
repnz
ss
lock
mov
imul
dec
insl
pop
lret
popa
loopne
rolb
dec
mov
push
insl
cs
cltd
cltd
rolb
loop
popa
cmpsl
mov
mov
ja,pn
xor
repnz
lcall
fsubs
test
test
call
xchg
mov
mov
dec
and
xor
jo
xor
movsb
out
stos
add
sbb
adc
push
xchg
outsl
pop
movsl
sarb
push
gs
mov
cmp
lret
mov
sahf
mov
mov
cmp
sarb
pop
invd
adc
popl
adc
push
aas
addr16
xchg
cmpsl
scas
cli
mov
nop
outsb
pop
out
push
out
cmc
pop
push
in
ss
subb
rol
push
lds
cld
push
out
mov
pop
cmp
and
mov
scas
aam
xchg
and
sub
jae
fnstsw
sub
cmpsl
or
xor
mov
xchg
push
fcompl
daa
mov
and
rolb
xchg
je
push
in
subl
inc
addb
inc
sub
jbe
lods
insl
dec
out
dec
mov
decl
mov
mov
and
push
pushf
mov
iret
inc
insl
mov
mov
adc
sbb
pop
cwtl
jo
dec
data16
push
mov
mov
enter
lcall
testb
sbb
adc
pop
push
cs
and
sub
cltd
jo
pop
sub
outsl
fadd
outsb
mov
add
inc
loopne
cmpsb
mov
xchg
dec
sbb
push
push
mov
outsb
mov
jnp
fwait
mov
cmp
adc
push
push
pop
daa
jno
movsl
cmp
adc
int
movsb
xor
inc
ret
inc
or
jae
test
out
sbb
adc
movsb
jae
mov
fmulp
push
xor
push
add
mov
sub
jle
cmc
cmc
aad
outsb
out
insl
sub
mov
stos
xchg
xor
jb
pusha
arpl
and
push
inc
fnstsw
iret
adc
inc
out
jmp
aaa
fs
xor
xor
xchg
mov
add
push
mov
jns
xor
shlb
movsl
test
call
mov
stos
cmc
out
add
jle
divl
mov
fwait
iret
cmp
and
jecxz
je
gs
push
and
jge
or
pop
data16
push
cwtl
insb
aam
shrl
bound
lods
sub
pop
mov
mov
lock
outsl
push
xor
outsb
xchg
out
or
mov
xor
add
pop
lods
jecxz
lahf
ds
popa
ss
imul
xchg
bound
add
mov
adcb
fs
outsb
imul
jg
popf
sbb
or
call
ljmp
sub
xor
dec
fdivrl
gs
aad
adc
mov
or
adc
repnz
push
les
data16
adc
shll
xlat
leave
cwtl
push
fidivrs
icebp
sti
lahf
out
lea
lret
movsl
xchg
mov
ds
mov
pop
jb
adc
push
pop
cmp
fldenv
cmp
pop
pop
mov
adc
pop
cmp
ret
xchg
and
push
dec
push
into
gs
scas
fs
loopne
cmp
movsb
ret
xchg
and
jns
ret
jge
shlb
push
pop
jl,pn
jl
andl
jecxz
mov
and
jge
add
xchg
mov
dec
cmp
pop
call
adc
pop
lret
insl
pop
pop
adc
dec
out
aaa
ficoml
outsl
push
enter
or
push
adc
push
lret
dec
stos
fsubr
imul
mov
rol
lea
mov
push
xlat
cmp
sub
pop
jno
mov
push
lret
gs
dec
pop
ret
pop
xorl
inc
mov
rorl
stos
pop
jmp
cmp
sbb
imul
pop
js
lret
subb
mov
pop
movsl
or
cmpl
je
fneni(8087
out
xchg
arpl
fdivrs
xchg
dec
gs
insl
cmp
lods
shll
ret
out
xor
pop
xor
push
jae
movl
or
test
out
xor
cmp
mov
les
add
popa
outsl
mov
test
add
pop
repz
lods
xchg
jbe
in
sbb
jmp
mov
xor
pop
inc
mull
out
push
loope
test
cmp
push
out
or
aad
and
cmpsb
xchg
mov
mov
mov
daa
fsubr
popf
mov
mov
insb
jle
outsb
js
jo
stos
int3
cmp
adc
jmp
inc
jl
sub
mov
jl
xchg
mov
or
pop
filds
xchg
jne
out
faddl
mov
inc
sbb
shrl
dec
leave
dec
testl
shl
inc
in
es
lahf
int3
xor
dec
rol
fs
xchg
jae
popa
adc
and
lods
mov
push
adc
rorl
adc
hlt
bound
or
cmpsb
sbb
mov
movsl
xchg
decb
xchg
push
push
dec
adc
fs
call
cltd
sub
fstpt
insl
pop
adc
xchg
push
pop
and
movsb
adc
xlat
cli
push
pop
add
cmp
and
cmp
pop
mov
mov
aam
jns
and
std
adc
scas
xchg
xor
mov
inc
in
lcall
lcall
xchg
dec
cmp
add
stos
pop
mov
mov
xor
push
fdivrl
mov
xchg
mov
mov
fisubrs
cmc
cmp
into
faddl
sti
lret
cmp
cli
jne
inc
mov
xchg
cmp
hlt
xchg
cmpsb
xor
push
rclb
push
imul
sbb
sbb
mov
outsb
ficoms
scas
jae
call
xchg
mov
insb
push
adc
icebp
dec
and
jnp
lret
and
pop
jne
out
xor
sbb
mov
inc
or
xchg
pop
in
dec
cld
sbb
jb
sub
pushf
pop
cli
fucomi
pop
lret
in
adc
loopne
std
loopne
push
jp
sbb
movsl
outsb
mov
iret
mov
insl
pop
xor
xor
mov
push
js
pop
mov
loope
fdivs
test
pop
insb
xor
adc
mov
fdivrl
std
fwait
sahf
sbb
dec
pop
popa
imul
bound
adc
pusha
pop
adc
lock
mov
push
sub
das
pop
stc
pushf
cwtl
inc
cmc
cmp
loopne
mov
mov
push
fsts
sub
lds
notl
lock
decl
out
inc
sbb
ss
push
hlt
dec
pop
xchg
fisttps
push
daa
pop
mov
pop
lret
jge
cmp
adc
push
cmp
cli
push
pop
es
ret
fisubrl
rorb
sbb
inc
sub
mov
sarb
mov
dec
fcmovne
jae
stc
pop
mov
mov
pushf
sbb
out
mov
inc
adc
daa
or
pop
outsl
push
in
xlat
scas
lods
lock
mov
mov
mov
fldcw
push
out
ds
es
mov
pop
xchg
sar
pop
lock
ficompl
push
inc
cmpb
rcll
cmp
loopne
inc
loope
adc
out
movsl
inc
into
daa
sub
push
mov
lret
shlb
sbbb
rorb
out
ret
outsb
push
ret
popa
pop
inc
pop
enter
call
inc
add
ja
xchg
cmp
xor
cmp
loope
adc
lahf
mov
pop
invd
adc
gs
mov
test
fisubl
push
mov
mov
adc
cmp
pop
mov
push
subl
dec
pop
mov
xchg
fs
stos
mov
test
push
adc
fdivs
aam
das
std
out
nop
stos
xchg
and
shufps
pop
and
out
mov
lea
mov
and
xchg
stos
push
mov
cmc
mov
mov
popf
jmp
jmp
sub
mov
fsts
jecxz
loop
int3
stos
lahf
stc
inc
add
aam
mov
iret
pop
and
orb
mov
lcall
and
in
mov
xchg
std
sti
in
js
test
lods
sbbl
adc
test
pop
adc
sub
ljmp
lock
pop
out
push
push
imul
inc
das
sbb
push
fs
cs
les
push
stos
dec
push
jle
push
fnstenv
mov
dec
rorl
into
mov
pusha
imul
adc
lods
sub
pop
xorb
push
mov
mov
pop
pslld
aaa
enter
ss
xor
and
jle
outsb
orl
sub
mov
push
add
mov
lret
adc
fwait
pop
fabs
add
shrl
in
lock
pop
outsl
test
jmp
cmp
jbe
pop
data16
mov
jns
cmp
and
sbb
int
jb
xor
lock
lods
mov
std
mov
mov
lret
mov
mov
sub
pop
xchg
mov
dec
fs
int3
adc
stos
out
in
push
dec
mov
rsqrtps
dec
xor
adc
mov
xchg
adc
gs
and
mov
dec
dec
mov
out
mov
repnz
pop
pop
jle
in
fstps
lods
push
and
popa
or
push
push
cmp
out
push
sti
gs
leave
mov
fldl
add
mov
xor
test
add
iret
fcomip
sti
xchg
test
xchg
mov
dec
xchg
ja
sbb
inc
into
lret
sub
shlb
pop
jne
adc
lret
imul
ficoms
in
add
push
xchg
mov
and
pop
pop
mov
cwtl
sub
ret
xor
adc
insl
adc
mov
popa
in
out
xchg
arpl
sbb
lods
mov
sarb
adc
or
pop
lahf
jo
sbb
push
shlb
mov
mov
add
mov
fnstsw
sub
sbb
push
cmc
inc
push
insl
cs
push
inc
das
dec
xchg
and
imul
pop
leave
pop
fisubrs
fstpt
mov
ds
lods
pop
mov
sbb
cmpsb
xchg
addr16
push
cmpsb
cmp
ret
push
test
sub
js
xor
cwtl
and
xchg
xor
lds
jb
inc
js
repz
push
sub
mov
adc
xchg
xor
out
or
les
push
jne
and
je
fneni(8087
cmp
dec
lret
repnz
inc
gs
loope
xchg
sub
lahf
mov
lahf
xchg
popa
push
lea
outsb
push
mov
mov
xchg
imul
add
imul
jl
fnstcw
jl
std
arpl
data16
jmp
dec
pop
jae
push
in
adc
loopne
push
adc
push
loope
mov
out
inc
mov
enter
add
enter
lret
movsl
mov
adc
or
out
inc
xchg
pop
xchg
es
test
lds
and
out
inc
sbb
sub
xchg
and
xchg
repnz
adc
cwtl
pop
mov
insb
push
mov
adc
xchg
pop
xor
fcmovnbe
mov
jno
in
enter
mov
pushf
xchg
sbb
icebp
mov
dec
in
sub
int3
jecxz
jb
jnp
ss
xchg
gs
xchg
mov
xchg
popf
add
testl
or
push
fwait
mov
leave
inc
push
mov
clc
or
and
das
mov
ret
movsb
inc
popa
xchg
lds
scas
repz
pop
sub
decb
lret
rcl
adc
jmp
ds
loop
sub
stos
pop
daa
xchg
inc
push
add
mov
and
xchg
mov
movb
adc
mov
mov
flds
push
adc
subl
inc
sbb
and
add
jno
or
lret
xor
fisubrs
push
adc
jae
push
push
insb
push
adc
sbb
cwtl
jecxz
mov
out
jge
dec
jns
and
stos
sbb
in
in
sub
leave
push
popf
mov
pop
cli
das
push
sub
pop
popf
dec
iret
lahf
jns
adc
pop
loope
addr16
xchg
dec
les
sub
loope
scas
dec
or
push
dec
pop
inc
adc
inc
adc
pop
and
cmc
add
lret
inc
ret
dec
inc
pusha
inc
shlb
fnstcw
jecxz
fwait
pop
fnsave
adc
inc
push
fucomi
pusha
idivb
push
cs
xor
ljmp
xchg
js
out
lds
jne
out
fdivrs
fstps
pop
imul
inc
mov
mov
int3
repz
loop
adc
sub
xchg
dec
test
jno
cmp
xacquire
xchg
dec
hlt
sub
test
xor
add
push
push
lcall
pop
fists
arpl
call
jo
aad
mov
lds
push
cmp
xor
mov
outsl
pop
insl
out
xlat
sub
mov
pop
cwtl
mov
sub
and
sub
jmp
pop
sbb
adc
mov
xor
jb
divb
adc
lahf
movb
mov
adc
push
and
movsl
ds
sti
cltd
test
in
mov
lods
xchg
jb
dec
sarl
cmp
xchg
pop
pop
jno
jg
outsb
sub
test
mov
mov
lds
mov
sub
jne
ljmp
and
out
mov
fnstcw
sub
ja
ret
sysexit
movsl
mov
add
movsl
dec
call
mov
dec
xor
xor
ss
popa
nop
jae
mov
cmp
rclb
sub
es
xor
fbstp
xchg
mov
popf
push
push
or
xchg
shlb
pop
inc
cmp
push
cwtl
and
xchg
scas
mov
pop
pushl
jb
mov
das
sub
scas
jge
mov
movsl
mov
aad
lahf
mov
mov
push
imulb
scas
xlat
imulb
loopne
loopne
and
cmp
mov
adc
outsb
test
test
loopne
testb
addr16
clc
rcrb
mov
sub
xor
xor
dec
jne
outsb
pop
jmp
pop
push
sbb
popf
xchg
mov
out
pop
sub
push
cmpsl
pop
push
lods
mov
inc
pusha
push
jp
sahf
push
movsb
dec
out
pop
fdivrs
adc
cmpsl
push
fistpll
fistps
pop
jmp
dec
adc
cmp
push
sbb
sbb
jae
xchg
stos
adcb
shl
or
xlat
jg
movsb
dec
xchg
and
test
mov
into
sbb
adc
xorl
push
xlat
movsl
cmp
and
sarb
pop
mov
fsubrs
pop
mov
sub
rolb
dec
mov
iret
addr16
xor
adc
inc
scas
pop
stc
jnp
pop
mov
xor
fists
js
loope
fmuls
shlb
fiaddl
sub
fneni(8087
push
mov
mov
mov
ret
shlb
and
repnz
jno
pop
push
adcl
sbb
jno
mov
xor
xchg
movsl
adc
cmpsl
vcomiss
test
repz
out
push
out
dec
int3
lods
xchg
inc
cmp
fldenv
sbb
jl
push
ret
push
mov
pop
std
adc
ss
mov
mov
add
pop
mov
out
fcmovnbe
and
or
cmp
mov
std
or
mov
mov
xchg
jno
inc
sub
outsl
and
sbb
adc
pop
pop
xor
mov
ficoms
pop
pusha
add
leave
adc
xchg
or
push
pop
xor
inc
adc
sub
scas
sub
js
notb
push
mov
sub
adc
push
je
xor
cli
jmp
inc
push
ds
inc
mov
rcrb
push
sbb
inc
inc
add
pop
lret
pop
in
pop
daa
lods
xchg
mov
dec
es
cmp
aaa
scas
or
fiaddl
mov
mov
mov
icebp
xor
into
je
insl
xor
xor
sbb
out
test
push
cld
jne
or
mov
lahf
in
push
scas
cmc
push
in
and
jmp
xchg
in
add
lock
xchg
roll
or
xor
bnd
ss
sbb
out
int3
cmp
sub
fwait
repnz
fdiv
lret
push
insl
jno
loopne
lret
push
lods
shl
std
stos
nop
ss
pop
adc
lret
into
inc
jae
cwtl
mov
and
aad
and
jmp
jnp
pop
adc
aas
mov
xor
mov
xchg
push
xchg
and
sbb
adc
ds
fisubs
pop
cmp
ret
lret
mov
mov
xor
dec
out
xchg
dec
xchg
push
sti
lea
call
cld
xchg
cltd
push
push
mov
out
mov
push
adc
jne
insl
pop
pop
ja
jmp
fimuls
sbb
ds
pop
in
pop
ds
out
or
xchg
loopne
in
inc
in
pop
loop
dec
es
sbb
cmp
andb
outsb
test
xchg
and
adc
mov
stos
push
sub
pop
ss
ficompl
lods
pop
ds
pop
in
pop
cmp
sbb
xchg
push
dec
bound
lods
xchg
loopne
sbb
xchg
fwait
sahf
in
push
xchg
scas
push
loopne
inc
xor
pushf
cmp
jecxz
sbb
arpl
xchg
xchg
repz
pop
loope
cmp
mulb
dec
xchg
fsts
pop
in
sbb
pop
xchg
and
xchg
and
sub
xchg
lahf
cmpsl
mov
sub
xor
adc
ret
dec
pop
stos
shl
outsl
aad
sar
pop
push
testb
popa
and
mov
mov
jae
iret
xchg
scas
test
aas
insb
pop
in
pop
mov
push
iret
je
adcb
cmpsb
dec
and
jno
mov
outsl
and
and
ds
rcr
outsl
pop
jle
test
push
fwait
xor
out
mov
and
fistpll
mov
mov
jmp
das
or
stos
xor
sub
mov
outsl
aam
aad
lods
sbb
fcoml
es
pop
rcll
cmpsb
mov
push
icebp
add
mov
adc
or
push
jmp
mov
cmp
adc
lods
lret
out
js
inc
xchg
push
mov
mov
orb
lcall
dec
push
dec
js
lret
mov
aad
movsb
jp
mov
dec
dec
leave
jns
sbb
dec
xchg
sub
mov
mov
mov
loopne
enter
and
fwait
and
fsubrs
cmpsb
icebp
cli
mov
lods
adc
mov
pop
jl
out
add
dec
icebp
es
gs
push
iret
mov
adc
mov
inc
jb
push
xchg
test
inc
pop
inc
and
stc
xor
mov
out
pop
sub
and
or
aad
test
xchg
mov
popa
push
adc
or
clc
and
jbe
adc
mov
addr16
lcall
movsl
add
ljmp
push
mov
inc
popf
inc
sub
stos
pusha
push
adc
adc
ds
pusha
xorl
jmp
adc
clc
sti
cmp
inc
push
fsubs
or
mov
or
shlb
imul
fs
or
or
inc
sbb
lcall
cs
mov
aad
pop
cmp
and
mov
insl
mov
push
push
ret
push
xor
add
mov
lods
mov
cmp
jg
or
jns
cs
addr16
out
push
test
rolb
sub
das
inc
sbb
test
hlt
dec
xor
sbb
stos
sub
in
sub
popa
or
jge
dec
negb
cmp
pop
mov
mov
add
fsts
out
jne
inc
sbb
adc
cmp
mov
mov
leave
adc
sbb
rclb
and
movsb
xchg
imul
sub
cmp
rorl
adc
fsubrl
cmp
sub
jno
out
push
gs
mov
nop
test
test
clc
jns
jle
mov
arpl
ficoml
xchg
sub
shll
lock
mov
push
adc
das
mov
call
mov
push
lods
ja
pop
call
ret
inc
push
testl
pop
cmp
cli
mov
inc
outsl
push
ja
lahf
mov
std
or
and
pop
hlt
and
xchg
cmp
mov
nop
ja
jecxz
pop
out
or
mov
fdivrs
add
pushf
cmp
lret
mov
pop
loopne
cmp
add
mov
xchg
and
loopne
bound
adc
hlt
mov
lea
test
pop
mov
jno
daa
mov
sub
adc
repz
mov
shl
arpl
xor
jae
fcoms
jnp
fcoms
push
fiadds
dec
xchg
and
sub
ja
fbstp
scas
scas
sbb
sbb
aas
pop
repnz
xchg
or
popf
lea
sbb
pop
sub
xor
jb
cmp
leave
inc
les
sub
inc
out
in
mov
xchg
xchg
add
mov
push
mov
sbb
mov
xchg
lods
pop
roll
cmc
dec
roll
js
dec
cmp
insb
in
push
in
int3
insl
pop
ljmp
cmp
dec
mov
pop
or
pop
pop
xchg
aas
jo
pop
inc
and
imull
push
mov
push
adc
cmpsl
in
sbb
pop
push
xchg
mov
movsb
inc
mov
xchg
cltd
roll
in
inc
cmc
mov
jmp
fdivs
ret
leave
sahf
call
in
pop
inc
pop
pop
pop
arpl
sti
mov
out
xchg
adcb
push
adc
pop
push
dec
xchg
movsb
cmpsb
test
sti
es
fcmovb
mov
enter
dec
test
pop
adc
loopne
cmpsb
lret
ret
test
not
xchg
notb
inc
bound
push
shrb
scas
into
gs
add
scas
jecxz
mov
jg
mov
inc
insb
push
adc
fstpt
and
pop
adc
leave
fiaddl
fs
mov
fcomip
mov
enter
pop
xchg
push
ljmp
cwtl
mul
in
and
inc
jbe
lods
adc
xchg
bound
in
push
sub
mov
sahf
mov
sahf
dec
int3
cwtl
pop
aad
aas
xchg
adc
aaa
and
stos
inc
adc
inc
adc
pop
stos
aas
mov
mov
inc
inc
ds
mov
adc
push
cmp
daa
cmp
push
jne
pop
or
xchg
jl
lods
outsl
or
push
in
sbbb
cwtl
push
lods
sbb
adc
es
inc
push
jb
sub
add
shlb
add
xchg
or
push
adc
gs
mul
jne
adc
pusha
mov
jne
cmpsl
ja
outsb
jecxz
lahf
pop
push
insl
mov
add
lods
shlb
inc
popa
ret
test
loop
adc
gs
cli
and
xchg
sbb
pop
cmpsb
in
jnp
dec
sahf
fisttpll
ret
cmp
popl
lret
loop
adc
inc
push
stc
mov
or
jge,pt
out
sti
les
fnstcw
jp
aad
dec
loope
push
dec
scas
pushf
jno
int
lret
dec
mov
stos
sub
cmpsb
xchg
ds
mov
pop
sub
sbb
adc
push
lret
call
cmp
pop
rcl
popf
call
mov
rolb
ss
push
xor
cmp
sub
lods
xrelease
imul
cmpsl
dec
xor
enter
add
xlat
clc
pop
push
mov
lea
out
cmp
rclb
mov
push
out
popf
jecxz
dec
movsl
rorb
xchg
scas
loopne
popa
cmp
sahf
hlt
lahf
les
in
xchg
and
popf
lock
pop
mov
clc
cmp
push
cld
outsl
aad
shl
imul
imul
add
jne
scas
pop
pop
add
test
pop
pusha
or
lret
push
xchg
sub
pop
dec
xchg
pop
loopne
pop
test
dec
xchg
push
sti
cltd
test
lods
mov
sarl
movsb
sbb
push
adc
loopne
mov
pop
pop
dec
mov
cmp
loop
pop
imul
rol
sbb
cmp
ds
jno
xchg
sub
dec
bound
insl
fidivl
cmp
lds
xor
sub
jae
sub
xor
sti
mov
xor
cmpsl
dec
jmp
out
mov
mov
xchg
mov
cmp
mov
xchg
jo
mov
mov
je,pt
dec
push
rol
pop
lock
mov
aad
js
and
fnstenv
fsubrs
bound
or
xchg
and
popf
insb
add
adc
sub
adc
adc
lods
dec
push
je
test
fnstsw
inc
popf
pop
idivl
adcl
jbe
add
adc
inc
stos
je
jmp
adc
sbb
adc
les
stos
in
andb
xor
sbb
mov
lods
sbb
jb
cmp
gs
adc
mov
clc
pop
and
lods
shr
and
jnp
in
cmc
push
push
pop
lret
fnstenv
mov
add
into
jae
aad
sub
pop
aas
popf
lods
add
xchg
mov
and
xor
dec
push
jle
sub
inc
shll
ja
shrb
push
push
in
mov
fimuls
xor
or
add
ret
es
inc
data16
and
bound
jecxz
fsubl
das
lcall
mov
sub
insl
add
xor
data16
xor
jb
ffreep
and
add
push
es
mov
mov
leave
xchg
push
ljmp
lock
mov
xor
mov
inc
pop
lret
js
mov
add
push
push
mov
or
fs
mov
aad
pushf
cmp
inc
cltd
push
in
jne
fsts
mov
mov
mov
xchg
inc
ret
mov
pusha
inc
mov
cmc
or
mov
mov
or
ja
and
mov
es
jne
icebp
ret
js
push
stos
push
push
call
inc
mov
and
mov
inc
mov
or
mov
lock
cmp
mov
icebp
inc
pop
ds
xchg
pop
mov
add
inc
pusha
or
jns
out
pop
pop
push
or
sbb
add
das
lods
sbb
loopne
add
cmpsb
data16
jns
cmp
adc
iret
rcr
in
xlat
or
popa
dec
lahf
mov
ja
movsl
bound
push
in
es
insl
push
xchg
lcall
xor
push
fstpl
pop
data16
fsubrp
fistl
sti
jae
fidivl
in
fmul
lods
das
sbb
test
popf
std
call
mov
mov
clc
cmpsl
cvtdq2ps
push
repz
jmp
mov
movsl
loopne
jne
mov
xchg
jne
repz
repz
jmp
mov
inc
ja
lock
call
std
sti
test
mov
lahf
gs
fwait
mov
pop
pop
xor
lahf
jns
xchg
gs
jae
call
ret
jne
sti
mov
lods
push
les
sub
cmp
pop
call
and
in
mov
mov
xchg
and
sar
xchg
mov
fidivl
pop
out
test
mov
push
inc
out
mov
pop
fcoms
pop
loop
repz
and
das
mov
shrb
insl
mov
fisubs
pop
xor
cmp
lock
outsl
pop
mov
pop
inc
or
sarl
fimull
ret
mov
mov
sbb
adc
lahf
clc
mov
push
inc
dec
loopne
fstpt
and
pop
orb
ja
enter
call
enter
pop
inc
adcl
dec
out
mov
fidivs
les
dec
stc
ljmp
pop
or
lods
pop
xor
and
inc
insb
push
adc
mov
sbb
sbb
adc
mov
pop
mov
xchg
inc
cmp
out
enter
rorb
cmpsb
push
jecxz
loope
pop
leave
inc
scas
pop
in
out
pushf
push
mov
stc
dec
mov
push
lcall
in
adcb
sbb
fdivrl
sbb
adc
pop
int3
push
dec
push
repnz
jne
xor
and
xor
int
jb
mov
lret
addb
arpl
aam
pusha
lahf
mov
cmpsl
xor
push
adc
repz
xlat
add
out
js
shll
push
lods
push
inc
aaa
adc
adc
inc
outsl
pop
aaa
in
arpl
js
push
adc
push
lods
jne
lcall
dec
ficoms
in
fdivs
mov
lret
nop
icebp
stos
inc
xchg
cs
mov
sub
cltd
loopne
aam
ret
test
mov
jecxz
jmp
sti
scas
inc
ret
cmc
test
push
adc
xchg
and
or
in
daa
dec
cmp
cmp
jbe
movsb
test
ror
mov
loope
adc
fstp
lods
add
fisubl
and
xchg
out
jle
mov
pushf
jne
outsb
gs
mov
stos
sbb
xlat
loope
mov
mov
mov
push
adc
xor
fnsave
or
fstps
filds
jb
push
or
test
jbe
fiadds
sbb
mov
push
in
in
das
and
or
mov
sub
movsl
sahf
iret
aas
jb
and
and
adc
cwtl
insb
push
adc
loopne
insb
add
mov
adc
or
xor
sbb
cmp
nop
insb
push
adc
push
push
xor
shll
ret
mov
jno
jmp
push
add
cld
int3
fcompl
sub
push
dec
lods
mov
insl
cmp
fucom
cmc
add
out
mov
xor
test
insb
xor
and
out
add
jp
addr16
xor
mov
and
mov
mov
jecxz
ret
rol
ret
mov
dec
mov
addl
mov
stos
test
daa
testb
push
jmp
aam
fwait
and
mull
push
push
es
jge
jae
cwtl
cltd
xchg
mov
fs
push
sub
shrb
outsb
ds
outsl
sbb
cmovg
ss
sbb
adc
sub
cld
or
lea
pop
jmp
mov
insb
push
adc
shrb
call
mov
rclb
mov
imul
ds
pop
in
dec
push
fisubrs
dec
xchg
push
sti
cltd
push
jae
mov
push
mov
shl
popa
fimull
pop
movsb
dec
test
fisubs
clc
mov
jnp
dec
pushf
inc
call
insl
cmp
ljmp
push
pop
pop
adc
fisttpll
loop
adc
test
lods
sbb
adc
dec
test
cmp
lea
es
icebp
pop
addr16
push
jle
insl
pop
jb
andl
add
push
adc
sbbb
xor
push
aad
lret
lea
ss
adc
sti
movsl
rorl
stos
pop
fsubl
xchg
sbb
or
push
adc
push
jae
fisttpl
mov
loop
daa
inc
aaa
pop
xchg
and
xchg
mov
loopne
test
pop
aas
sub
loop
sub
loop
xchg
add
stos
test
jecxz
ss
mov
mov
xchg
push
jmp
in
popa
ret
pop
out
cmpsl
xor
jge
mov
in
mov
sub
jo
out
fidivrl
ss
lea
orb
mov
and
push
jl
inc
sbb
mov
pop
aaa
cmp
int
xor
adc
lea
out
cmp
and
mov
xchg
pop
decl
dec
insl
jno
lcall
mov
outsl
xor
dec
stc
mov
cltd
iret
and
pop
jp
xor
cmc
jmp
mov
fldcw
or
xchg
mov
jecxz
cmpsb
lock
adc
mov
adc
mov
enter
pop
adc
test
pop
adc
popa
xchg
adc
data16
xchg
out
xchg
je
dec
and
fcoml
mov
ja
push
aas
xchg
movsl
adc
xchg
cmpsl
mov
sbb
lcall
jmp
movsl
inc
out
pop
lret
lock
dec
push
aad
lret
stos
fsubs
mov
shll
xor
mov
arpl
adc
inc
push
jl
push
add
stos
jne
cmp
test
insb
add
fwait
jne
out
pop
sub
push
dec
sbb
inc
test
xchg
cltd
jne
sbb
adc
xor
insb
fstpl
push
sub
aad
fnsave
jmp
mov
xchg
iret
adc
mov
enter
or
xlat
jmp
mov
nop
out
pop
adc
push
mov
jle
lahf
sub
sti
inc
outsb
stos
inc
xchg
inc
pusha
push
adc
insl
jg
and
jo
sub
bound
lods
jbe
les
push
lcall
dec
mov
shrl
xchg
rorb
push
shr
adc
ss
das
gs
push
mov
mov
imul
mov
adc
pusha
push
adc
mov
push
clc
inc
mov
out
imul
add
lock
sarb
mov
jecxz
mov
dec
icebp
and
cmp
xchg
ret
rclb
jmp
enter
adc
push
jecxz
adc
adc
push
int3
pop
adc
test
pop
adc
jp
or
or
inc
leave
mov
dec
push
mov
icebp
jbe
imul
and
push
lock
adc
and
rcl
mov
push
sub
pop
adc
jbe
shll
test
pop
adc
xor
aam
pop
or
out
pop
pop
outsl
call
outsb
sbb
adc
mov
lods
lock
push
fs
mov
sar
or
add
out
les
push
in
sub
and
arpl
adc
popa
inc
fs
ficompl
insl
mov
outsb
sub
adc
push
adc
stc
jb
imul
lods
jnp
xchg
push
xor
jecxz
ret
sbb
scas
mov
and
push
adc
fmulp
or
adc
cmp
pushf
scas
fmuls
or
mov
push
adc
pop
nop
mov
adc
dec
pop
mov
ret
xor
in
nop
push
adc
xchg
cmpsb
outsb
and
loop
xchg
sub
in
sub
dec
out
pop
stos
loopne
jb
and
xor
and
push
adc
mov
mov
or
adc
ljmp
test
xchg
filds
pushf
sub
pop
out
mov
pop
jb
and
cmpsl
dec
ja
popa
push
adc
push
movsb
mov
fldl
movsb
mov
jmp
std
mov
movsl
cmp
icebp
bound
in
data16
shlb
add
adc
xor
mov
call
scas
shl
aas
cmp
dec
mov
lret
push
int3
pop
adc
sub
jae
xlat
test
test
pop
adc
loope
mov
andb
jmp
insl
push
mov
cmp
push
insl
sti
jns
inc
sbb
imul
push
jbe
test
arpl
adc
rorl
fcomi
push
mov
insb
and
jnp
lods
icebp
hlt
arpl
adc
mov
pop
mov
mov
movsb
inc
nop
insb
sub
xor
cwtl
push
adc
dec
mov
iret
adc
fwait
cmp
mov
pop
aad
test
out
stos
pop
mov
dec
mov
daa
dec
fstps
push
adc
jns
and
loop
enter
pop
sbb
dec
adc
pop
loope
ret
adc
pop
cld
and
adcb
out
mov
out
es
sub
push
mov
xor
popa
push
adc
jae
addl
outsb
mov
push
test
imul
mov
adc
std
stc
cmpsb
add
push
out
lcall
rcll
pop
adc
adc
es
mov
loopne
push
adc
imul
adc
inc
xchg
int3
adc
and
les
and
lock
xor
rcrb
lahf
mov
sbb
jbe
push
gs
arpl
adc
repnz
sub
mov
dec
lock
out
pop
adc
insl
sbbl
lock
pusha
push
adc
and
and
movsl
jne
loope
adc
leave
es
stos
xor
daa
adc
mov
outsl
shr
adc
or
dec
std
js
pusha
push
adc
pop
adc
fistpl
js
pusha
push
adc
jns
jg
pusha
push
adc
das
in
cwtl
jg
and
push
push
sub
mov
cltd
cmp
in
out
loope
inc
icebp
pop
lea
rolb
jle
clc
cmp
stos
xchg
mov
mov
out
jb
xchg
xor
mov
push
pusha
rol
sbb
mov
loop
sbb
adc
gs
sub
push
push
pusha
stos
mov
rcll
dec
sbb
lods
nop
movsl
fsubrs
push
mov
sbb
popf
cmp
ret
cmp
pop
in
sub
push
cmp
shll
daa
mov
fidivl
dec
call
out
inc
lods
shrb
es
call
stc
rcrl
sub
mov
cmp
xchg
mov
push
lock
fsubrp
insb
push
adc
lods
cmp
insl
fidivl
cmp
std
mov
leave
fbstp
mov
into
cli
cmpsl
les
clc
pop
leave
sbb
loop
pop
lods
pop
mov
fwait
push
shl
gs
jb
test
test
outsl
gs
out
xchg
jnp
outsl
jp
imul
adc
lock
push
xchg
and
lods
loope
sub
and
mov
lcall
cwtl
roll
and
xor
test
pop
xor
jne
dec
insl
shll
subl
cmp
jmp
imul
insl
xorb
sbb
adc
inc
test
xor
pop
adc
daa
iret
and
adc
pop
loope
dec
xchg
pop
rclb
pop
cmpsb
dec
jecxz
jb
insb
jecxz
or
nop
outsb
mov
cmpsb
sub
clc
scas
push
lock
mov
pop
loop
cmp
pop
pop
or
movsl
mov
sbb
xchg
insb
les
lock
push
repz
mov
cmp
or
jb
les
popa
xor
xor
movsb
pop
stos
jnp
push
inc
xlat
cwtl
fnstcw
xchg
ja
negl
inc
aam
aad
ja
out
lahf
and
lea
mov
push
pop
dec
and
mov
push
inc
movsl
mov
adc
add
and
push
addl
push
push
iret
loope
cli
aas
inc
xchg
sbb
loop
fcmovu
push
sbb
dec
and
add
or
dec
dec
test
movsb
fidivs
pop
or
dec
xchg
push
dec
xchg
and
addr16
out
rcll
cli
imulb
in
js
fistps
imul
rcrl
jbe
into
out
fsts
filds
in
adc
jle
add
int
mov
sar
and
inc
mov
or
fsubr
cmp
pop
in
fxam
fnstsw
push
mov
add
push
call
adc
jbe
fldt
mov
jge
xlat
xor
add
mov
sbb
or
cwtl
cltd
scas
mov
int
mov
mov
cmpl
dec
mov
mov
mov
mov
loopne
sub
xchg
push
cmp
out
xchg
jns
cmpsb
inc
xchg
xchg
push
aam
lahf
test
adc
mov
add
loope
pop
icebp
in
xor
sub
out
dec
fistpl
cmpsl
mov
push
jp
dec
inc
shr
jns
fwait
lods
ljmp
mov
sahf
inc
jbe
repz
mov
stos
test
sub
shll
add
push
and
in
fnstsw
mov
cli
and
pop
cld
dec
jbe
data16
xchg
sub
mov
vmwrite
jns
sub
inc
jne
cs
mov
lahf
pop
jmp
popf
xor
call
popf
sub
adc
push
or
jg
movsbl
pop
shrb
mov
loope
jae
xchg
imul
push
jns
fucom
sub
mov
cmp
xchg
mov
push
lock
fsubrp
insb
push
adc
lods
cmp
xchg
and
or
cs
std
mov
int
mov
push
repz
cmpsl
les
clc
pop
leave
sbb
loop
ds
movsl
dec
loopne
push
shl
gs
jb
test
test
and
gs
adcl
mov
aas
sub
dec
sbb
ds
insb
push
adc
cmp
sub
lahf
cmpsb
cmp
pop
or
mov
xchg
sbb
add
scas
movsl
xchg
mov
addl
and
cmp
out
push
pop
sbb
sbb
scas
mov
pop
inc
fstps
ja
mov
sbb
loope
scas
xchg
loop
push
cmpsl
les
lret
or
hlt
insb
push
adc
pop
inc
loopne
std
or
cmpsb
and
pop
jb
mov
cs
cld
mov
cld
ret
mov
mov
push
cs
xor
push
shl
imul
imul
lods
xchg
ja
clc
rcrb
aaa
ss
adc
push
cmp
roll
mov
cmp
mov
fidivl
lret
shrl
add
cltd
scas
stos
inc
push
xchg
push
sti
nop
stos
lods
ror
nop
pop
loopne
push
and
mov
scas
pop
mov
add
insl
mov
outsb
pop
lret
gs
imul
or
push
in
xchg
inc
push
bound
dec
in
outsl
adc
adc
or
adc
test
stos
adc
stos
sub
or
inc
insl
sbb
push
mov
sbb
mov
mov
adc
push
hlt
testl
popa
adc
or
daa
je
adc
aaa
and
movsb
lret
adc
adc
mov
inc
mov
cmc
mov
scas
fsub
ret
aas
mov
in
mov
es
roll
dec
cmc
or
arpl
xchg
jecxz
lret
js
jo
dec
xchg
jmp
cs
insl
fwait
mov
call
daa
or
inc
mov
mov
cmp
cltd
in
inc
mov
ret
je
cmpsb
repz
std
push
mov
mov
cmp
cmp
jbe
je
aaa
push
int3
push
adc
aad
push
sbb
adc
inc
jl
std
mov
mov
nopl
adc
mov
dec
sarb
sub
mov
fsubr
xchg
int3
adc
dec
and
and
cmc
lcall
or
into
les
test
add
push
outsl
mov
mov
inc
ds
push
popf
mov
jns
test
mov
inc
jg
mov
inc
nop
cmp
push
int3
or
mov
mov
jbe
xchg
mov
pop
adc
xchg
daa
shll
mov
mov
sub
jl
in
adc
out
mov
out
into
fisubs
sub
jge
push
sub
adcl
loopne
add
icebp
add
inc
mov
adc
rorb
call
mov
cli
scas
dec
xchg
movsl
aad
mov
inc
add
mov
cmp
mov
dec
repnz
out
jmp
cmp
or
sbb
into
pop
fwait
arpl
add
push
lock
ljmp
or
fwait
mov
push
sahf
jb
xchg
loope
mov
fmuls
dec
mov
fistpl
mov
sub
mov
xchg
jne
clc
testl
cmp
push
shlb
test
shrb
movsl
mov
cltd
inc
push
cli
or
and
pop
cmpsb
fnstenv
push
xchg
pop
iret
popa
dec
jge
xor
sarb
xchg
jne
mov
sahf
outsb
in
xchg
out
xchg
pop
push
and
movsl
xchg
jae
push
lock
ds
es
xchg
out
scas
outsb
sbb
into
scas
sbb
adc
push
and
sub
cs
push
hlt
jge
jbe
fidivl
xor
or
mov
mov
pop
fadd
xor
repz
lock
dec
shrb
cwtl
fsubrs
out
mov
repz
push
cs
add
mov
push
inc
movsl
dec
loopne
sbb
dec
and
aas
xor
pop
insl
pop
jmp
push
outsb
scas
call
and
add
loopne
push
test
xchg
and
sub
cwtl
push
cmc
ficompl
pop
rorb
push
mov
ret
pop
mov
test
adc
das
pushf
mov
cmpsl
insb
sub
hlt
xchg
mov
cli
cmp
push
jecxz
xchg
mov
lret
cmp
mov
adc
add
aam
pop
pop
loop
pop
push
sub
jg
cmp
jne
pop
dec
cmp
and
xchg
loope
add
adc
xchg
pop
sar
int3
inc
mov
outsb
ds
fwait
push
out
xor
icebp
daa
mov
daa
jo
daa
jns
imul
lea
subl
cmp
add
mov
lea
scas
and
std
mov
int
pusha
dec
and
shr
push
fbld
jb
iret
fdivrs
mov
and
and
push
loope
xchg
push
inc
pop
add
sbb
loop
cmpb
decb
mov
push
push
push
or
push
adc
das
and
adc
jae
in
jo
stos
add
movsl
sbb
fiadds
lret
adc
mov
jg
mov
cmp
or
leave
fs
insl
clc
adc
jnp
call
mov
xor
lods
sub
in
mov
xor
sub
push
add
and
mov
xorb
andl
or
cld
jmp
add
and
lcall
scas
mov
fwait
fs
mov
xor
in
sbb
add
cmp
aas
mov
cmc
xchg
test
nop
in
pop
mov
mov
orb
jl
pop
ret
js
sub
pop
and
fidivs
ret
repnz
mov
mov
pop
pop
loopne
adc
dec
out
lds
orb
dec
aam
xchg
xchg
ficoml
repz
into
leave
push
aaa
mov
aad
mov
into
xor
mov
add
jecxz
inc
pusha
pop
jbe
outsb
testb
dec
aas
in
sub
outsb
ss
popa
xor
nop
sbb
std
add
imul
in
aaa
movsl
loop
test
addr16
test
lea
orb
jecxz
mov
clc
mov
xchg
add
push
or
pop
adc
mov
dec
xor
pop
in
adc
adc
out
adc
dec
lcall
fcomps
sbb
inc
std
push
jo
repnz
cmp
adc
adc
push
scas
mov
imul
data16
or
insl
fisubrl
sbb
adc
into
outsl
lods
sbb
mov
jne
fldt
add
pop
jg
call
xchg
push
ss
ret
push
adc
adc
insl
push
adc
out
mov
inc
scas
xchg
mov
test
pop
mov
clc
pop
jo
mov
outsb
xorl
pop
dec
jns
call
mov
popf
xchg
jmp
xor
lds
dec
ret
add
cmp
mov
dec
push
and
inc
cmp
cli
cmp
dec
xchg
adc
or
lahf
cmp
mov
xchg
movsb
ret
jmp
ret
in
mov
into
cli
cmpsl
les
clc
pop
leave
sbb
dec
fisubrs
xor
out
dec
out
mov
mov
movb
insl
xchg
push
adc
mov
scas
stos
in
dec
loopne
or
sub
adc
dec
jl
ret
cli
fidivs
in
mov
and
jge
ret
popa
and
dec
inc
pushf
cmp
push
lret
mov
pop
pop
test
mov
push
ljmp
push
cmp
xchg
lods
mov
pop
stc
sbb
lods
mov
push
push
xchg
sub
popf
test
mov
std
mov
je
aad
and
push
mov
pop
pop
jl
stc
or
add
jne
and
sub
and
and
pop
test
pop
mov
push
jg
loope
xchg
and
mov
ss
mov
push
push
fs
stos
add
jno
sbb
stos
stos
cmpsb
mov
in
jp
cmp
push
mov
inc
test
jge
lea
mov
add
imul
lcall
push
pop
push
and
add
fbstp
nop
mov
in
adc
lods
shrl
jae
in
rol
lcall
outsb
xchg
fcmove
ja
lods
sbb
addr16
push
mov
iret
xorl
sbb
pop
repnz
xor
jnp
shrl
fwait
dec
mov
fdivl
es
divb
inc
jge
mov
jp
and
orb
adc
dec
push
and
xor
ds
cmp
cmp
cmp
mov
lds
mov
adc
sbb
out
sbb
fldl
mov
sbb
xchg
xor
mov
inc
lea
mov
fldt
mov
dec
mov
xchg
sbb
xchg
rcr
sbb
pushf
rcrb
xor
in
mov
fidivs
sub
testl
add
inc
sti
lods
and
in
add
ret
gs
dec
jecxz
into
jbe
inc
xchg
das
inc
rolb
mov
fwait
cmp
mov
shll
aam
push
mov
adc
lahf
cmovne
xor
mov
cmp
and
xor
jg
stos
mov
pop
lcall
inc
push
sub
out
add
add
pop
ljmp
xor
hlt
push
sub
outsl
int3
mov
pop
clc
jae
dec
dec
and
lock
xchg
lods
std
mov
loope
test
mov
mov
sti
cmp
nop
pop
mov
and
out
mov
imul
sahf
inc
imul
adc
movsl
xor
out
movsb
xchg
lds
addr16
std
loope
pop
and
pop
fucomp
pop
jae
sahf
push
pop
sbb
dec
lret
adc
xchg
push
sub
test
mov
pop
jmp
gs
mov
jmp
jecxz
sub
push
out
into
jle
and
test
std
psraw
or
loopne
and
push
dec
push
fiadds
jno
and
sub
xor
mov
ret
push
push
ds
adc
mov
ds
xlat
mov
cmpb
repz
test
cmp
test
imul
sbb
loopne
movsl
sarb
adc
mov
pop
pop
mov
gs
sub
out
mov
jle
adc
cmp
jns
dec
bound
icebp
inc
loopne
inc
jg
loop
movsl
jb
mov
rcrl
sbb
push
cmp
xor
jno
pop
mov
xchg
out
movsl
inc
adc
nop
pop
je
dec
call
out
je
lret
shll
jge
xchg
xor
sub
adc
stc
rcrl
sbbl
loopne
and
movsl
xorl
mov
cmpsb
mov
aad
cmp
lods
pop
cmp
bound
sub
daa
xchg
les
mov
cmp
xchg
sub
or
cmp
dec
xchg
sub
push
outsb
test
mov
pop
popa
mov
fnstsw
jne
notb
shll
mov
aad
push
xlat
imul
jecxz
mov
mov
adc
push
cmp
shl
mov
xlat
jge
pop
hlt
jb
out
xor
mov
mov
and
jp
stos
testl
stos
mov
jo
jae
test
or
in
cmpsb
add
in
pusha
xor
mov
mov
sbb
xchg
cmp
in
stos
call
test
cwtl
bound
repz
inc
push
lods
enter
jne
leave
bnd
inc
xlat
cs
fsubr
pop
mov
fimuls
ficomps
lret
cwtl
movsl
dec
adc
loop
popf
test
dec
inc
sbb
sub
loopne
scas
std
cmp
js
cmpsl
sbb
xchg
into
int3
aad
xchg
into
push
bound
sub
call
andb
pop
sbb
sub
mov
mov
xchg
cmpb
sub
cmp
cld
cmpsb
clc
xchg
add
and
add
sub
movsl
pop
mov
adc
nop
adc
jmp
in
dec
in
push
sub
add
push
mov
and
data16
pop
fcmovnu
in
jg,pn
shll
mov
inc
imul
jl
add
imul
je
push
sti
push
pop
stos
inc
jae
mov
xchg
mov
test
lods
jo
dec
inc
push
fidivs
jp
add
in
out
out
loopne
sub
adc
dec
adc
push
mov
lds
push
bound
push
in
xchg
mov
enter
rclb
mov
ret
shr
aaa
bswap
and
fiaddl
and
push
jbe
out
or
inc
sbb
insl
ss
iret
add
mov
fldcw
push
and
in
loopne
push
push
sbb
movsl
add
push
roll
or
int
das
mov
xchg
fldl
pop
add
jg
or
fcomps
fs
adc
jns
dec
daa
inc
or
push
out
pop
popa
outsb
or
lret
jno
jecxz
push
sub
mov
adc
test
dec
adc
or
movsl
shlb
loope
xchg
pop
jb
xor
xor
gs
xchg
and
sbb
loope
and
and
sub
in
and
mulps
jb
mov
repnz
add
loop
lods
pop
mov
cmpb
mov
push
pop
cmp
fldenv
cmp
dec
movsl
dec
call
cmp
cmp
ret
xchg
and
push
dec
push
into
gs
rclb
fs
jecxz
mov
and
dec
lret
cmp
sub
ja
std
stc
aas
cmp
ss
andl
in
mov
and
popa
and
xor
jne
cmovle
sbb
mov
pop
subl
mov
outsb
xor
xlat
cltd
xor
in
xchg
movsl
fnop
xchg
decb
in
pop
out
cmpsl
mov
les
clc
adc
outsb
add
sub
push
ss
add
xchg
cmp
push
jnp
dec
rcrl
loopne
int
inc
gs
inc
add
pop
pop
push
push
test
jmp
fidivl
jb
dec
pusha
dec
enter
pop
ret
push
movsb
xchg
mov
xor
mov
mov
push
adc
mov
fnstenv
test
stos
pop
mov
sarb
loop
add
sub
in
dec
mov
xchg
lods
mov
dec
xchg
pop
aaa
mov
rcl
outsb
fmull
cmp
xchg
and
push
scas
pop
out
out
rcrl
fwait
mov
fmull
andb
stos
push
or
xchg
das
inc
fwait
mov
push
mov
dec
jbe
ret
push
adc
cmp
cmp
jne
std
push
inc
mov
add
sub
sbb
bound
sub
or
rcll
xorl
push
adc
or
xor
push
xchg
es
sbb
adc
movsl
jecxz
inc
and
add
lahf
cmp
inc
adc
mov
aad
adc
adc
dec
sbbb
dec
adc
push
sbb
sub
rcl
popf
lahf
pop
push
daa
xchg
inc
push
cmc
movsl
or
mov
lcall
or
push
adc
jnp
add
dec
aad
fs
out
pop
arpl
mov
adc
sbb
js
and
fbstp
mov
pop
loop
outsb
push
adc
ja
adc
xor
divb
out
ja
mov
push
push
mov
sub
lahf
add
enter
push
jno
outsb
push
adc
aas
pop
test
inc
dec
adc
int3
mov
pusha
sbb
mov
adc
adc
mov
test
xchg
and
xor
es
lahf
sub
cmpsl
iret
subl
mov
add
ds
cwtl
sbb
inc
scas
sbb
push
adc
lea
imul
dec
mov
popf
movsb
adc
pop
loopne
xchg
xchg
jo
push
adc
push
or
lock
insb
repnz
enter
je
and
dec
mov
insl
push
adc
xor
jg
fadds
dec
std
xchg
jecxz
cmp
loope
mov
fists
insl
mov
daa
call
adc
mov
adc
jae
out
cmp
lods
lds
mov
adc
add
shrb
aas
js
sub
inc
sub
and
push
adc
ret
jmp
xchg
addr16
rcrb
in
ret
call
incb
jb
cwtl
mov
xchg
repz
loope
movsl
or
out
jmp
and
pusha
push
adc
movsb
add
out
push
and
mov
jb
data16
sbb
adc
ds
xlat
mov
pop
jb
push
repz
stc
pushfw
cmp
xchg
jae
mov
push
lods
pop
lods
pop
dec
js
pusha
push
adc
lods
scas
xchg
out
xor
cmp
add
fsubrs
adc
andl
mov
adc
cmp
divps
or
insl
push
adc
iret
fidivs
or
mov
xchg
sub
inc
mov
fneni(8087
add
loop
pop
inc
mov
out
test
xor
sub
lcall
loopne
inc
xchg
and
cmp
push
cmpsl
loope
lods
insl
push
adc
push
pop
xchg
sub
xor
insl
and
xor
jnp
xor
sub
xor
loopne
bound
jb
es
cmpsl
dec
stos
lea
mov
sub
xlat
xor
add
cmp
ss
xchg
sub
pushf
cmp
fildl
mov
insl
push
adc
clc
mov
xchg
push
xor
cmp
add
pushf
cmp
xchg
ficoml
sub
outsb
push
adc
xchg
bound
fisttpll
das
adc
xchg
and
out
daa
push
movsb
dec
imul
pop
dec
fldcw
dec
xchg
and
subb
loopne
rol
arpl
adc
sub
fiadds
push
adc
xchg
ds
cmp
pop
out
push
jecxz
dec
fwait
xchg
cmc
mov
int
shlb
and
mov
pop
cmp
xor
cs
xchg
xchg
ss
aam
out
mov
insl
push
adc
sbb
fsubrs
sub
cmp
fidivrl
clc
and
insb
insl
push
adc
enter
dec
subl
push
lea
jb
inc
int3
jns
mov
dec
pusha
insl
push
adc
movsb
inc
lea
push
insl
jmp
lods
mov
pop
xor
cmp
cwtl
add
inc
sub
push
sub
fwait
jge
insl
push
adc
aaa
aam
and
push
sub
cltd
xchg
jp
fxch
push
pop
dec
into
inc
insl
push
adc
pop
inc
iret
roll
mov
hlt
rcl
popf
lahf
sbb
and
rcr
mov
ret
sbb
mov
frstor
mov
movb
popa
fldenv
mov
outsb
push
adc
sar
lods
fcomip
mov
imul
inc
mov
rorb
adc
push
mov
inc
add
push
dec
enter
cltd
push
lods
insl
push
adc
and
push
out
sbb
mov
xchg
sbb
xor
insl
push
adc
cmp
shlb
or
mov
xchg
xor
mov
jmp
dec
lods
inc
cltd
mov
inc
xor
jmp
dec
scas
inc
xchg
inc
outsb
add
push
adc
or
mov
and
and
into
out
sbb
stc
jmp
xchg
imul
outsb
push
adc
popl
mov
gs
xor
push
adc
pop
aad
mov
in
mov
push
dec
or
dec
sbb
mov
out
inc
cmpsl
xor
loop
add
push
clc
xchg
dec
icebp
mov
arpl
adc
arpl
adc
ss
jg
pop
jmp
push
jns
sbb
push
jmp
adc
and
cwtl
paddb
xchg
mov
jecxz
and
pop
mov
jo
ds
pop
inc
ror
push
adc
jle
mov
fsts
flds
std
sub
xor
cs
jne
mov
outsb
push
adc
pop
mov
xchg
adc
inc
loope
push
nop
sti
jne
mov
in
jl
xor
adc
loope
cmp
lret
frstor
leave
adc
sbb
mov
lret
pushf
cmp
leave
fdivrs
dec
xchg
sub
xor
bound
push
adc
adc
imul
test
jnp
sub
xlat
pop
xchg
sub
push
adc
ds
loopne
popa
adcl
cmpsl
dec
call
gs
maxps
es
inc
xor
fbstp
sbb
mov
xchg
pop
adc
or
pop
add
jl
push
adc
mov
sub
adcb
movsl
dec
lret
pop
adc
in
enter
xchg
xchg
call
stos
mov
fldcw
jae
and
cs
and
test
xchg
test
aad
mov
enter
sarb
xor
xchg
push
jmp
xor
les
adc
pop
outsb
push
adc
mov
add
movsb
ficomps
adc
mov
push
stc
loopne
pop
adc
xor
enter
ljmp
cmc
in
mov
sbb
sbb
fbstp
and
sub
mov
decb
cmp
push
imul
outsl
xor
movsl
and
ds
out
xor
dec
popf
dec
shl
outsb
dec
xchg
cmp
xor
adc
push
adc
and
pop
push
add
outsb
push
adc
pop
push
cmpsb
dec
pop
lock
popf
or
cmp
push
adc
subb
xchg
and
inc
imul
push
adc
out
popa
cmp
xchg
cs
xor
push
adc
pop
jmp
es
pop
adc
sbb
fsubrs
sub
sub
adc
push
orl
sti
mov
or
adc
adc
jmp
test
incl
mov
dec
pop
inc
and
and
or
gs
mov
imul
jne
fsubs
adc
push
sbb
xor
clc
test
pop
fucom
pusha
push
adc
cmp
pusha
fwait
cmp
and
shrl
mov
jge
mov
pusha
push
adc
stos
pop
inc
into
int3
inc
aad
sub
dec
outsb
mov
xor
push
sti
rcl
add
dec
int3
scas
or
movsl
jnp
push
mov
push
test
out
push
arpl
scas
push
out
bound
lcall
xchg
add
iret
aas
sub
pop
mov
dec
mov
sub
mov
decb
inc
jle
and
jbe
sahf
sub
xchg
cmp
sbb
mov
jmp
test
push
sub
jmp
fcomps
jecxz
icebp
mov
gs
xor
adc
subl
cmp
fs
mov
xor
fists
mov
incl
lds
jmp
jne
out
sub
jne
clc
dec
sbbl
mov
idivl
mov
rcrb
or
inc
adc
repnz
mov
fdivrs
xor
ret
ja
add
lahf
setno
fs
je
adc
lods
push
inc
imul
mov
ds
xchg
xchg
dec
lea
data16
xor
fbld
mov
push
adc
inc
jno
imul
push
mov
call
cmp
loope
and
xor
rcll
dec
mov
outsb
push
adc
cld
subl
push
std
xchg
sub
mov
stos
nop
ss
mov
jne
je
push
adc
cmpsb
xchg
shll
cmp
pop
ss
xchg
mul
push
xchg
lds
inc
imul
fnop
xchg
inc
pop
sbb
rorl
int
shr
imul
test
pop
xchg
sub
arpl
xor
sub
lret
adc
ficoml
cs
sarb
add
sbb
pop
enter
call
push
lods
pop
jl
fisubrl
lock
mov
xor
ficomps
stos
test
cs
adc
mov
jmp
loopne
lods
rorb
push
cmp
and
out
movsb
ds
dec
pushf
xchg
gs
imul
add
xchg
mov
sbb
mov
sbb
sub
leave
in
std
jnp
lock
jge
test
call
cmp
xchg
data16
icebp
ja
addb
xchg
sub
xor
mov
in
outsb
sub
sub
in
adc
movsl
dec
xor
lock
mov
and
jo
xchg
push
insb
sub
adc
test
dec
push
out
ret
dec
ret
pop
aam
push
cmpsb
cmp
roll
test
popf
xchg
mov
push
call
loop
and
add
sbb
outsb
dec
cmp
inc
stos
mov
das
scas
mov
xchg
fldt
lds
pop
xchg
sub
jnp
lods
das
xchg
dec
data16
push
xchg
mov
adc
cmp
scas
xlat
lds
fld
push
mov
mov
inc
call
lea
mov
daa
xor
adc
jmp
and
adc
iret
clc
mov
loop
adc
sub
mov
movsb
lahf
or
inc
xchg
fisttpll
mov
inc
les
push
movsl
mov
mov
stc
cli
lahf
ret
leave
call
xchg
pop
push
cs
lods
or
push
sub
fcmovbe
loopne
les
fwait
movsl
sbb
ja
push
push
adc
dec
sbb
mov
stos
add
push
cli
into
cltd
cmpsb
and
aam
int
fcmovne
aad
jg
and
loopne
and
inc
mulb
out
cmp
mov
cmpb
clc
pop
or
adc
popa
insl
clc
push
sub
ror
in
adc
lods
sahf
sahf
jb
sub
cwtl
ficomps
lods
xchg
add
adc
in
lret
inc
xchg
cmp
mov
das
test
bound
add
mov
cs
ss
or
jmp
mov
jmp
push
call
xor
xchg
cmp
xchg
mov
mov
sub
int3
mov
mov
stos
dec
cmp
sbb
jle
xor
ret
adc
sbb
xor
in
clc
push
in
cmc
es
xchg
pop
xchg
xchg
in
pop
sub
push
dec
mov
dec
popf
push
iret
xlat
mov
add
icebp
out
inc
inc
fdivl
loope
dec
test
mov
testl
mov
cs
insb
pop
inc
fidivrs
cmp
mov
adc
push
sbb
stos
sar
loopne
pop
adc
adc
arpl
es
aas
push
js
pop
add
mov
aam
lods
or
or
rolb
enter
or
in
push
in
pushf
popf
sbb
pop
sbb
in
pop
ja
push
test
shrb
jno
mov
pop
mov
jno
sbb
sbb
in
or
add
daa
into
movsl
or
pop
les
dec
aad
mov
push
sti
popf
push
mull
jne
mov
cs
dec
int3
adc
fisubs
ds
sarb
adc
jecxz
mov
cs
iret
leave
xchg
sbb
adc
lods
mov
mov
loope
cmpsl
xchg
jge
lret
daa
cmpl
inc
gs
jle
xor
dec
loopne
es
pop
sbb
dec
xchg
mov
mov
sbb
outsl
call
shrb
push
cs
xchg
scas
cmpsb
xchg
scas
mov
cmc
pop
cmpsl
dec
loopne
popf
shl
cmp
cmp
fsubs
cmpsb
xchg
scas
mov
lds
sub
pushf
movsl
stos
add
mov
loopne
cmp
aas
or
dec
sbb
pop
dec
and
pop
outsb
pop
mov
xchg
push
loop
sbb
ds
sub
pop
pop
sub
push
imulb
mov
mov
roll
push
cmp
inc
and
movsb
dec
out
cmp
fdivs
mov
pop
insb
and
out
mov
pop
jmp
pop
pusha
push
lock
sub
in
and
cltd
rcr
xor
xchg
jg
pop
mov
adc
xchg
xor
and
push
das
push
sub
jmp
std
pop
pop
outsl
shlb
sahf
dec
xchg
pop
call
xrelease
sub
out
and
lahf
xlat
fidivs
pop
in
pop
aaa
lods
movsl
mov
loope
sub
sbb
inc
push
shrl
shrb
loope
mov
mov
out
xorl
lds
aad
and
stc
andb
fs
hlt
mov
test
mov
out
pop
stc
mov
rcr
adc
jno
in
add
lods
outsl
mov
sub
stos
mov
mov
movsb
lret
adc
into
testl
adc
lods
shlb
mov
shlb
ficoml
fmull
in
mov
into
inc
jne
add
call
inc
push
rcr
jnp
adc
pop
lret
shrl
jle
push
cmpsb
in
push
push
pop
inc
mov
fldenv
mov
and
test
inc
testb
pushl
daa
mov
push
push
loop
inc
sarb
sub
stos
mov
jbe
and
or
mov
int
inc
mov
adc
shl
sbb
and
cmp
lea
mov
outsb
and
add
push
pushf
mov
mov
jle
jmp
test
inc
adc
test
mov
inc
jecxz
test
adc
and
sub
push
fisttpl
test
int
xchg
ret
lcall
aam
xchg
in
pop
add
pop
in
andb
repnz
inc
movsb
mov
push
mov
add
fiaddl
cmp
or
pop
or
in
clc
cmp
jge
jge
or
jp
push
ds
stos
pop
std
xchg
cmp
add
xlat
push
mov
scas
stc
fsubs
cmp
push
movsl
out
lret
and
inc
loopne
jne
outsb
push
stos
or
out
xor
loope
sub
pop
inc
push
inc
jge
repnz
aaa
dec
sbb
arpl
xlat
jge
xlat
cmp
mov
fistpll
sbb
stos
mov
xchg
or
mov
gs
test
shlb
rolb
or
inc
daa
into
out
andl
xor
test
adc
adc
xchg
inc
maxps
push
push
fiaddl
repnz
mov
cmp
loopne
mov
fmull
rolb
pushf
cmp
sbb
insl
push
lret
loop
es
jmp
sbb
out
cmp
pushf
cmp
aad
test
xlat
sbb
push
movsb
dec
in
aaa
stos
insb
adc
push
cmp
insl
loopne
and
sub
xor
and
out
and
pop
addr16
lahf
cmp
std
test
out
adc
lods
in
push
adc
in
xor
mov
xchg
je
fidivs
mov
pop
call
mov
xor
jecxz,pt
mov
dec
rcrb
push
cs
xchg
loopne
and
ds
and
dec
jns
xchg
pop
jne
xchg
adc
jae
mov
add
std
mov
loop
lods
movsb
add
fidivl
mov
and
fsubp
orl
pop
mov
push
jne
mov
fdivs
mulb
gs
mov
mov
push
sub
mov
pop
cmp
push
mov
ficompl
jp
xchg
push
insl
push
ss
sbb
or
xor
mov
lret
pop
push
stos
pop
cmp
inc
pop
pop
movsl
cmp
xor
shrl
test
dec
les
jmp
cmp
rorl
pop
test
push
out
roll
dec
sub
out
xchg
sub
sarl
lret
js
notl
leave
mov
test
arpl
inc
jno
les
leave
mov
imul
pusha
xchg
gs
insl
jp
loope
in
xchg
lock
imul
mov
scas
push
lcall
test
xor
and
enter
dec
and
aad
adc
lahf
cmp
ret
pop
popf
adc
mov
fdivrs
fnstcw
cmpsl
shll
mov
push
xchg
mov
push
addr16
jl
mov
lods
dec
lds
adc
cs
popf
fldcw
mov
push
cltd
mov
fwait
scas
pop
and
scas
sbb
mov
add
into
movsb
ret
enter
mov
mov
pop
inc
mov
cmpsb
cli
cmp
loope
sbb
ljmp
mov
pop
push
mov
add
dec
or
cmp
or
lcall
sahf
dec
or
std
add
in
test
sub
aam
out
in
and
pop
lahf
sub
in
xchg
inc
ss
outsl
mov
mov
cli
jecxz
mov
lds
dec
repz
insb
jp
xchg
lea
dec
sti
icebp
sbb
aaa
call
int
mov
outsb
mov
or
or
sbb
mov
or
or
push
hlt
pusha
pusha
push
adc
mov
push
aam
fiaddl
in
fidivl
mov
fstp
mov
rorl
loopne
mov
roll
subb
and
adc
and
mov
add
mov
aaa
mov
in
pop
fsubp
pop
ljmp
mov
scas
adc
xlat
in
outsb
repnz
push
xor
ds
pop
push
mov
imul
outsb
push
adc
sahf
aam
jb
nop
xchg
in
sub
bound
into
cli
sub
mov
adc
mov
es
inc
add
xor
test
adc
fildl
jecxz
xchg
add
pop
call
adc
push
adc
loopne
je
mov
mov
inc
mov
scas
xlat
lock
xchg
movsb
mov
loop
adcl
hlt
mov
js
pusha
push
adc
pop
fildll
lods
sti
mov
dec
pop
fcmovu
push
loope
pop
ret
in
scas
test
loopne
pop
ds
lods
pop
mov
xchg
inc
xor
jne
fidivs
sbb
pop
imul
or
outsb
mov
or
out
fidivs
mov
jbe
pusha
push
adc
and
imul
xor
mov
pop
rclb
arpl
lea
outsb
pop
ljmp
fidivs
push
pop
mov
pop
je
push
lahf
clc
and
cmp
sbbl
dec
pop
and
cmp
push
xor
fsubrl
push
fcmovne
jnp
lcall
mov
pop
ljmp
out
jecxz
imul
xor
or
int
and
pop
mov
push
rolb
pop
sarb
bound
cmp
ret
pop
pop
call
sar
movsb
addr16
imul
popf
hlt
cmp
mov
or
mov
xchg
out
mov
in
out
fcmovne
jbe
imul
xor
in
aam
popa
push
adc
cmp
fcomps
sub
pushf
fldt
mov
inc
cltd
xor
cwtl
dec
cmp
fldenv
in
jmp
dec
mov
pop
sbb
rorl
mov
aaa
cmpsb
sbb
push
add
inc
movsl
xor
inc
cmc
dec
inc
push
jb
sub
fbld
cltd
jne
mov
cmp
in
add
js
mov
add
pushl
jmp
adc
dec
int3
adc
scas
pop
movsl
dec
jne
lret
dec
testb
adc
xchg
xchg
stos
mov
lock
bound
aad
stc
push
adc
in
dec
test
dec
xchg
js
mov
pop
mov
jae
fsubrs
mov
push
mov
sarl
xor
andb
aam
xchg
mov
dec
pop
cld
lret
sbb
mov
addr16
pop
mov
push
test
jb
lds
fs
mov
push
mov
sub
sarl
sub
push
fidivs
cmp
outsb
cltd
jbe
and
mov
push
loope
mov
push
out
add
push
adc
test
int
dec
ljmp
xor
adc
pop
fmuls
iret
adc
scas
addr16
adc
push
xor
jmp
cltd
pop
fnsave
in
sahf
lods
and
jmp
mov
call
xchg
push
mov
jno
mov
jl
inc
add
xor
ds
cmp
push
add
adc
mov
mov
pop
in
or
sbb
pop
loope
outsb
shl
mov
aas
pop
pop
inc
ds
xor
out
lds
push
mov
and
mov
clc
inc
dec
inc
add
xchg
pop
adc
adc
push
xchg
enter
mov
cltd
std
xchg
dec
pop
stc
int
cmp
xchg
push
jns
icebp
xor
push
jecxz
adc
and
and
sub
sbb
imul
leave
push
shrb
imul
rorb
adc
add
or
popf
jmp
xchg
gs
sti
and
push
in
call
xlat
mov
push
xor
mov
rcrb
push
out
leave
adc
lret
test
fstl
fildll
push
imul
xor
xchg
xor
dec
cmp
cmp
jae
fcomps
je
movsl
pop
push
adc
cmpsb
out
outsb
push
fnstcw
cs
and
inc
popf
cmp
pop
insl
fidivl
in
ret
cld
arpl
adc
jno
pop
dec
insl
fidivl
dec
pushf
mov
in
xchg
sub
mov
dec
jbe
push
repz
cmpsl
cmp
mov
add
sub
sti
mov
dec
cmp
cmpsl
dec
xor
iret
lock
xchg
mov
lret
rolb
and
ficompl
xchg
sub
add
cmp
mov
inc
cmc
add
push
xor
and
add
pushf
cmp
in
cmp
call
push
movsb
dec
mov
loopne
dec
xchg
and
mov
sarl
jno
sub
dec
cmp
pop
cmpsl
gs
xchg
pop
into
jne
outsb
pop
in
pop
pop
pusha
inc
dec
pop
test
outsl
hlt
or
out
jns
dec
xchg
push
repz
jl
and
push
xor
mov
pop
add
push
adc
iret
pop
inc
arpl
pop
imul
insb
mov
outsb
push
adc
lcall
lods
lret
fcoml
xchg
sub
aad
mov
dec
xchg
jecxz
mov
movsb
cmp
loope
xchg
jle
aas
loope
push
mov
xchg
and
insl
loop
shrl
addb
push
xchg
sub
sub
cmp
ret
out
pop
and
popa
mov
push
and
call
mov
decl
jb
sub
push
mov
lods
sbb
fisttps
xor
fbld
lods
sbb
fidivs
lcall
inc
loop
jmp
in
pop
inc
sahf
cmp
in
pop
cwtl
inc
outsb
xchg
fcmove
ja
rcrl
xor
cmpsl
aam
mov
aad
sub
inc
iret
loop
fdivs
pop
push
das
or
push
xchg
jb
or
sarb
sub
mov
data16
jge
in
insb
shrl
addb
imull
inc
fs
inc
push
mov
inc
popf
jb
scas
jmp
loopne
push
adc
push
push
pop
lock
je
aas
ja
cmp
fidivrl
jae
mov
scas
lock
mov
pushf
test
data16
inc
ds
push
fidivs
push
adc
and
adc
cmc
test
sub
dec
scas
aam
insl
addr16
movsl
outsb
popa
iret
adc
add
imul
push
cmp
xorl
cs
lahf
sub
out
inc
lahf
sub
inc
sti
and
ds
mov
inc
xor
aas
or
std
inc
rorb
fdivs
sar
movsb
addr16
imul
mov
stos
rcl
mov
movsb
adc
mov
stos
loope
lcall
flds
xor
push
addr16
iret
idivl
mov
loopne
out
jge
mov
mov
push
lret
gs
loopne
in
jno
ds
enter
pop
inc
mov
adc
addr16
ljmp
lea
sbb
push
sub
xchg
imul
pop
mov
mov
icebp
cmp
pop
ret
leave
xchg
jo
in
mov
clc
lret
outsb
pop
cmp
xchg
push
lcall
mov
xor
std
xchg
mov
lretw
jle
js
add
mov
movsb
jo
push
stos
adc
pop
lods
mov
leave
xchg
xor
dec
push
dec
xchg
movsb
dec
xchg
scas
repnz
xchg
loopne
int
sub
pop
repz
jb
mov
sub
xor
mov
cmp
icebp
movsb
pop
adc
sbb
sub
and
or
and
roll
push
clc
dec
pop
in
push
cmp
ret
mov
sub
mov
sahf
sub
loope
xchg
bound
cmp
scas
push
cmpsl
dec
mov
in
sbb
xor
push
pop
pop
dec
push
movsb
cmp
push
mov
pop
loope
ljmp
sbb
cmp
xchg
sub
xchg
mov
fisttpl
add
adc
cmc
add
dec
mov
repnz
and
cmp
pop
xchg
and
pop
mov
and
mov
mov
mov
cmp
fidivrl
daa
repnz
jbe
into
push
popf
out
insl
fidivl
mov
pop
in
ss
mov
pop
jle
fidivl
jg
sahf
jp
leave
xchg
insb
jns
lods
movsl
mov
jmp
fisttpl
cwtl
push
push
adc
push
cmp
xchg
sarb
push
mov
or
xor
xor
aaa
arpl
dec
jmp
scas
push
jmp
adc
movsl
mov
and
aad
outsb
fdivl
jno
xor
fwait
add
out
and
or
aad
pop
out
test
fs
adc
jae
jbe
or
mov
jbe
pop
enter
xchg
out
cltd
adc
sub
or
adc
loop
shlb
ss
xchg
xchg
jg
lds
pop
stos
inc
scas
xlat
mov
inc
sbbb
push
jmp
movsl
mull
or
fistpll
bound
cmc
xchg
jle
mov
push
int3
pop
adc
fldt
je
enter
out
cmpsb
or
xlat
es
lahf
mov
sub
loopne,pt
cmpsl
sbb
rcl
mov
sbb
push
out
arpl
movsl
ss
jecxz
push
xor
insb
pop
popf
das
add
movsl
lods
dec
iret
jg
mov
data16
mov
ljmp
adc
sbb
inc
fwait
es
out
mov
call
mov
or
adc
sub
jb
mov
cmp
xor
jnp
mov
shl
inc
std
adc
cmp
fcomps
lods
sub
adc
push
sbb
call
in
sbb
nop
adc
or
adc
ljmp
iret
jmp
out
or
adc
sahf
loopne
in
scas
jp
mov
xor
or
adc
lods
mov
ss
sarl
or
adc
push
sti
mov
xor
jmp
xor
fadds
pusha
push
int3
pop
adc
and
adc
in
mov
adc
call
sub
jnp
stos
loope
push
test
daa
clc
inc
dec
arpl
push
aaa
xchg
sti
push
pop
jnp
pop
jg
add
es
scas
inc
hlt
sarb
jne
cmp
dec
ja
cmp
in
or
adc
add
mov
inc
dec
cld
xchg
pop
push
xchg
dec
icebp
stc
sti
jo
inc
cwtl
xchg
add
ja
adc
or
adc
shr
jb
xchg
cli
mov
push
call
jg
push
xor
push
int
xor
add
and
mov
or
popl
or
adc
stos
shrb
data16
inc
sbb
in
push
xchg
js
or
adc
int
out
mov
push
jnp
mov
lock
aam
lret
push
int3
pop
adc
push
xchg
outsb
xor
pop
adc
ljmp
or
push
xor
cmpsl
les
insl
fidivl
mov
push
test
and
pop
daa
dec
xchg
aas
pop
lods
dec
pushf
jle
sbb
adc
inc
xor
and
mov
in
inc
pop
in
cwtl
outsb
push
adc
push
loop
xor
xchg
sub
aas
dec
imul
out
xchg
sbb
fucom
and
adc
push
fdivl
sbb
push
adc
outsl
and
mov
and
pop
int3
ds
fcomps
sbb
data16
shlb
mov
das
inc
push
cmp
push
into
gs
ret
jmp
stc
pop
cmp
ret
mov
es
mov
mov
jae
mov
call
into
push
push
xor
ja
rorb
mov
shlb
lea
push
mov
or
imul
in
mov
xchg
daa
out
inc
loopne
test
fcmovne
cmp
ret
pusha
xchg
ds
daa
pop
dec
pop
nop
je
pop
int
fldcw
add
sub
cmp
cltd
mov
pop
js
repz
aaa
out
mov
aam
sub
jecxz
daa
adc
xchg
mov
lcall
sbb
imul
mov
mov
mov
fstps
push
hlt
push
std
insb
pop
out
cmp
xchg
add
out
lcall
fnstenv
outsb
mov
fnsave
adc
leave
adcb
out
inc
adc
mov
adc
ss
movsb
xchg
out
xor
inc
adcl
test
mov
dec
sub
stc
mov
mov
incl
clc
xor
call
das
shlb
mov
add
das
ficoml
inc
movsl
inc
push
mov
test
pop
and
mov
movsb
mov
into
leave
cld
aaa
mov
jns
fldt
fisubl
rcrb
outsl
inc
adc
nop
push
imul
fstpl
lcall
insl
movsl
and
loop
scas
pop
dec
lcall
sbb
test
ljmp
dec
pop
or
or
scas
inc
mov
bound
and
lods
and
adc
outsl
push
add
sbb
fidivs
movsb
clc
lds
xchg
lret
outsb
push
add
bound
in
inc
mov
in
in
jle
aad
fcomps
push
jp
push
adc
or
pop
xor
push
loop
cmp
add
mov
and
xlat
ljmp
ret
or
roll
xchg
fdivl
call
inc
aaa
ds
sarb
subb
enter
pop
out
jb
clc
daa
inc
dec
int3
fnstenv
mov
mov
push
std
daa
xor
cmp
sub
clc
mov
xchg
xchg
xor
imul
rcrb
sbb
mov
ret
out
cld
xchg
jmp
dec
jo
mov
cmpsl
scas
and
push
clc
cmp
inc
dec
fadds
pop
fimull
jns
and
sub
mov
imul
fcompl
movsw
and
xlat
pop
fldcw
sarb
mov
fcmovnu
pop
cmc
pusha
addb
sub
aas
push
inc
pop
repnz
pop
js
and
cmp
mov
lock
enter
imulb
ds
sti
push
in
push
xchg
ret
mov
fs
dec
adc
fcmovnu
xchg
push
lret
imul
or
fimuls
loopne
dec
xchg
sub
dec
push
xchg
mov
insb
push
sti
in
sbb
xchg
aam
mov
xor
cwtl
sbb
pop
adc
pop
or
pop
adc
or
sbb
aam
out
inc
dec
xchg
sub
push
movsb
loopne
push
jns
call
sti
lods
pop
loop
lds
mov
and
adc
sahf
cs
mov
and
xlat
push
int3
pop
adc
xchg
stos
pop
or
pop
xor
xchg
sub
mov
or
loop
inc
lods
pop
mov
lods
mov
jae
ficomps
push
push
movsl
ss
cli
rorb
mov
outsb
fisubrl
jb
inc
or
xor
xlat
lods
pop
ss
sub
mov
mov
add
adc
cwtl
mov
ss
and
inc
xchg
sub
dec
pop
and
pop
adc
mov
cwtl
mov
ss
inc
xchg
sub
jmp
mov
push
inc
loopne
inc
nop
and
mov
loopne
lea
out
pop
cmpsl
dec
xchg
mov
inc
mov
pop
mov
cmc
shr
arpl
out
lret
fcoml
pop
adc
or
pop
mov
and
mov
aas
mov
push
lods
fnstcw
lret
mov
lea
xchg
daa
mov
fnstenv
imul
jne
dec
movsl
pop
mov
cmp
leave
dec
xchg
dec
fbld
sub
push
or
popf
sub
xor
mov
pop
cmp
add
frstor
imul
and
pop
or
dec
mov
push
adc
add
pop
dec
sub
adc
mov
jo
mov
gs
lock
sbb
shll
lcall
lahf
push
jbe
out
fidivl
cmp
or
mov
les
adc
xchg
scas
les
push
clc
stos
or
adc
jns
xor
rolb
sti
inc
aam
ret
hlt
cwtl
push
cmp
movsl
outsb
fxch
push
or
clc
data16
mov
roll
popa
push
adc
leave
dec
sbb
push
data16
lret
shrl
adcb
les
adc
xor
pop
adc
ret
aam
sub
inc
inc
jne
shll
push
aam
add
xlat
xchg
cmp
cmpsl
sub
inc
test
and
lds
popa
push
adc
xchg
mov
pop
lea
mov
les
adc
cmp
int3
pop
adc
sub
icebp
outsb
sub
int3
inc
call
call
inc
rorl
fstp
and
movsb
ret
jmp
pop
loopne
inc
cltd
mov
lret
sti
mov
inc
lahf
ret
add
push
adc
sbb
test
xchg
insl
shrl
popf
cmp
jmp
stos
lahf
and
dec
mov
push
adc
sub
dec
push
push
sub
pop
mov
xchg
jg
filds
pop
mov
jg
test
or
inc
xchg
pop
jmp
jge
outsl
or
dec
fildl
mov
mov
mov
cmp
sub
dec
icebp
popf
cmp
inc
popa
xor
outsb
mov
jecxz
cmpb
cmpsl
ret
mov
sbb
fs
nop
out
pop
adc
pop
push
idivl
cltd
jecxz
pushf
xorl
test
adc
stc
fimull
xor
stos
faddl
ds
or
mov
pop
daa
push
in
es
in
mov
push
adc
std
dec
push
shr
adc
ftst
mov
sarb
or
adc
nop
pop
out
movsb
leave
clc
and
push
adc
xor
daa
into
push
shll
xor
pop
push
movsl
cmp
cmpb
pop
fnstsw
out
pop
jge
dec
xor
pop
adc
adc
shll
and
insl
push
adc
in
js
pusha
push
adc
int3
pop
adc
sbb
pop
adc
adc
insl
mov
shll
shll
sbb
mov
insb
call
in
fldl2e
cmp
decl
loope
repz
mov
fucomp
lods
pop
in
push
xor
or
xor
sub
jne
call
jg
xchg
and
pop
mov
push
int3
pop
adc
fwait
mov
into
test
pop
adc
push
insl
mov
bound
outsl
scas
mov
popf
fidivl
ja
fnsave
lret
pop
in
js
pusha
inc
dec
cmp
adc
out
mov
mov
les
and
cmpsl
dec
jbe
arpl
adc
decb
movsb
dec
test
xor
and
test
jge
dec
insb
inc
add
ss
jecxz
adc
push
movsl
shll
outsl
push
adc
mov
dec
add
pop
mov
nop
fs
and
xchg
aam
pop
cmp
pop
push
movsl
dec
add
push
adc
test
outsb
xlat
cs
test
lds
cmp
pop
push
cmpsb
dec
cmp
sbb
fs
daa
dec
jnp
fs
adc
dec
adc
pop
cltd
mov
pop
out
pop
pop
jg
mov
adc
mov
push
loope
or
adc
and
push
adc
es
mov
loope
mov
dec
ret
pop
and
rorl
outsl
push
adc
inc
lahf
imul
inc
nop
fs
mov
adc
insl
lcall
in
sub
push
adc
lods
push
or
cwtl
inc
or
mov
popf
push
insl
jns
fstpt
sbb
or
pop
mov
and
xchg
mov
popf
sbb
popf
jg
cld
pop
mov
push
outsl
push
adc
sahf
jns
out
fincstp
fmuls
or
sbb
push
adc
adc
stos
pop
movsl
out
stos
pop
int
das
ja
pop
lahf
push
cmp
jnp
rclb
cmc
dec
outsl
push
adc
out
jae
lock
mov
ret
push
xor
mov
adc
push
adc
and
stos
mov
test
add
push
adc
aam
mov
je
pop
adc
pop
adc
daa
dec
push
adc
mov
cwtl
movsb
push
out
cmpsl
pushf
mov
stos
xchg
dec
js
fisubl
lahf
or
xor
inc
scas
aam
dec
outsl
push
adc
inc
scas
aad
sub
outsl
add
push
adc
pop
adc
sbb
adc
adc
push
fcmovnbe
push
movsl
push
outsl
push
adc
xchg
inc
fldt
sub
adc
lret
inc
cmp
mov
fsubrs
push
push
adc
gs
outsl
mov
push
mov
lds
leave
es
xchg
mov
lods
dec
and
push
mov
call
jge
mov
jge
dec
jge
push
jmp
cld
xchg
dec
push
jecxz
test
mov
outsl
push
adc
nop
mov
adc
sub
inc
fs
nop
in
and
adc
or
adc
cmp
inc
sub
sar
divl
inc
in
into
iret
fistps
cwtl
mov
cltd
cs
aas
adc
lock
or
push
out
icebp
fcoms
movsl
pusha
push
adc
in
sub
xchg
addr16
add
repnz
cs
and
push
jnp
mov
inc
movsb
leave
mov
out
jae
pushf
inc
lock
lahf
xor
aad
pop
xor
pop
loopne
pop
shlb
mov
outsl
push
adc
fwait
js
adc
cmp
or
mov
adc
or
mov
adc
lods
mov
adc
outsl
push
jno
fs
push
adc
dec
inc
pop
in
test
sahf
mov
dec
xchg
scas
mov
push
sti
mov
push
xor
adc
shrb
cmpsb
int3
lods
mov
adc
outsl
push
jb
pop
loope
pop
pop
insl
jb
pop
push
outsl
push
adc
mov
jge
movsb
pop
push
int3
pop
adc
out
xor
adc
nop
insb
push
adc
out
in
subb
cmp
xchg
and
popa
pop
dec
xchg
pop
jno
out
xor
pusha
pushf
cmp
es
loopne
popa
andl
movsl
dec
add
adc
xchg
bound
adc
int3
pop
adc
insb
push
adc
imul
inc
xchg
sbb
and
push
outsl
push
adc
mov
pushf
inc
mov
mov
adc
adc
nop
mov
adc
fnstcw
push
adc
cmp
stos
out
and
arpl
adc
push
movsb
ret
cmp
divps
jo
xchg
mov
dec
ror
push
jno
xchg
push
xchg
movsb
mov
adc
pop
fdivrs
mov
daa
add
sbb
push
adc
and
xchg
sub
pop
fildll
cmp
es
xchg
xor
aaa
sbb
jne
pop
jl
pop
adc
cmp
std
dec
xchg
in
call
jmp
dec
outsl
push
adc
sbb
push
fldenv
or
add
adc
mov
push
fsts
adc
mov
lcall
lea
bound
cmp
dec
mov
fildl
adc
loopne
test
insl
xor
pop
sbb
in
fldenv
mov
sub
ljmp
push
adc
lea
hlt
inc
nop
shrb
xor
cmp
adc
into
xchg
aaa
aad
call
mov
jle
ror
xor
mov
jae
dec
inc
cmp
mov
xor
stos
sti
adc
mov
lret
incl
lds
stos
fwait
int3
adcb
aad
cld
or
cld
pusha
push
adc
inc
rcrl
inc
jae
and
add
jl
pop
ljmp
bound
inc
test
ljmp
pop
adc
or
outsl
push
adc
subb
int
adc
sbb
jb
inc
imul
ljmp
mov
or
int3
clc
add
adc
push
sub
xor
fnstcw
push
mov
ss
or
xchg
mov
sub
mov
sub
push
adc
xchg
jecxz
mov
sub
inc
sub
inc
xchg
xchg
inc
mov
mov
jnp
mov
hlt
das
nop
inc
lahf
pop
push
xchg
out
enter
adc
decl
add
ret
xor
cmpsl
sub
movsb
adc
add
pop
out
lock
or
xorb
leave
es
mov
dec
incb
clc
scas
cld
pusha
push
adc
mul
or
add
adc
ja
outsb
mov
ljmp
enter
loop
dec
cld
and
push
mov
and
outsl
push
adc
out
mov
dec
pop
mov
cmpsb
in
jnp
inc
mov
cmp
mov
insl
sub
xor
repnz
jmp
pop
cmp
das
pop
stc
and
and
mov
dec
cmp
mov
inc
es
xor
push
jmp
sub
fs
mov
add
and
adc
in
leave
adc
fsubp
vunpcklps
jne
stc
mov
sub
leave
cmp
push
add
loopne
inc
fwait
pop
xchg
and
test
sub
inc
jne
pushf
cmp
inc
test
sub
lret
or
out
adc
xchg
and
shlb
cmp
mov
pop
jl
dec
push
ror
or
pop
and
xchg
and
adc
cld
pusha
push
adc
xchg
loop
sbb
lock
aas
xor
aas
xor
loope
out
push
or
lahf
int3
jb
add
adc
lods
pop
mov
push
push
pop
mov
bound
or
test
xchg
sub
pop
in
in
leave
mov
loop
lods
pop
cmp
or
mov
mov
or
mov
aad
pushf
in
loopne
test
add
or
cmpsb
xchg
adc
daa
push
mov
into
sti
or
call
std
xlat
cmp
push
movsb
pop
jge
dec
xchg
xor
arpl
mov
cmp
push
out
and
push
pop
test
lret
xor
mov
pop
loope
sbbb
mov
jp
es
sbb
add
or
popf
mov
in
xchg
stos
mov
out
mov
sahf
cmpsl
call
xor
push
gs
sub
jno
fisubrs
adc
mov
ds
lock
cmp
and
mov
je
push
mov
jo
or
xlat
stc
idivl
lea
pop
nop
mov
ds
je
or
out
push
test
pop
lea
mov
es
fdivr
js
xchg
lea
aas
clc
xchg
push
cmp
aaa
or
dec
out
and
pushf
push
mov
adc
sarb
insl
lcall
push
mov
adc
sbb
inc
or
int
jne
ljmp
pop
mov
inc
sub
jne
ljmp
int3
fwait
sbb
push
lods
xchg
cmp
in
fistpl
pop
mov
fnstenv
adc
pusha
push
adc
sub
lcall
addr16
mov
xchg
psubb
aad
sbb
pop
stos
inc
int3
into
sbb
inc
popf
adc
sub
lods
sbb
ret
adc
push
dec
das
cmp
push
adc
dec
mov
xchg
push
mov
adc
push
adc
and
les
es
mov
popf
jbe
bound
xor
popf
push
inc
jno
dec
push
or
push
adc
pusha
int3
mulb
subl
xor
jmp
pop
add
push
adc
mov
scas
aad
pop
pop
fwait
push
xor
push
jno
inc
in
pushf
add
adc
push
scas
lahf
sub
mov
outsb
push
adc
mov
mov
sti
mov
lcall
aas
std
sti
inc
aad
ds
sbb
outsb
push
adc
movsb
mov
or
mov
mov
and
and
mov
out
jp
movsl
pop
out
mov
add
es
jecxz
fildll
dec
and
ds
inc
inc
repz
push
hlt
stos
cmp
fst
push
push
mov
jl
add
adc
insb
mov
insl
mov
rcl
adc
or
loope
loopne
xchg
push
jns
cltd
loop
subb
fst
hlt
outsb
push
adc
imul
adc
dec
inc
sub
dec
movsl
in
outsb
push
adc
inc
mov
and
dec
pop
stc
adc
cmpsb
inc
and
push
jmp
imul
mov
inc
es
xor
push
in
in
pop
in
stc
xor
movsl
andb
and
adc
push
lods
adc
lret
push
lods
xchg
and
movsl
dec
ja
sub
addr16
and
sub
adc
push
cmpsl
les
adc
movsl
in
xor
daa
addr16
and
xor
xchg
push
or
pop
push
cmpsl
mov
push
or
bound
xchg
sub
subb
pusha
push
adc
and
pop
and
lods
pop
cmp
outsb
dec
pop
lret
imulb
lods
xlat
xor
sub
fidivrs
in
dec
xchg
cmc
aad
pop
cmp
data16
lds
int
push
bound
adc
repz
rol
je
push
or
mov
push
clc
mov
xchg
mov
push
sti
mov
dec
call
pushf
push
scas
pop
xchg
and
push
cmp
mov
sub
call
in
pop
enter
imul
add
or
shll
and
cmp
dec
add
pop
mov
lods
mov
adc
and
movsl
dec
xchg
push
imul
and
push
fdivrl
out
mov
jae
in
xchg
push
sub
push
adc
cmp
and
xchg
or
xchg
sub
andb
xchg
or
arpl
adc
push
xlat
xor
or
mov
jmp
std
xor
sub
dec
xchg
pop
xor
addr16
sub
fucom
fdivs
xor
sbb
push
xchg
and
mov
push
int3
pop
adc
pushf
mov
test
pop
adc
into
push
lret
lea
in
sub
mov
aam
out
push
mov
pop
pop
xor
push
inc
sti
and
xchg
push
mov
aaa
sub
cmp
sar
arpl
adc
and
sub
or
loope
shll
lcall
shlb
hlt
arpl
adc
sbb
inc
jecxz
int
pop
xor
fcmovnbe
test
fidivl
cmpsb
fnsave
in
pop
cwtl
inc
divl
sub
fnstenv
pusha
in
dec
and
adc
lock
int3
pop
adc
out
sbb
test
pop
adc
out
mov
xchg
inc
dec
cwtl
cld
jbe
dec
in
cmp
sub
loop
js
arpl
push
jbe
dec
xor
dec
dec
jnp
and
adc
imul
fs
push
ret
push
adc
or
or
cmpsl
rcrb
mov
loopne
sub
ds
enter
jne
repnz
cmp
pop
mov
cli
push
daa
inc
sub
mov
jmp
push
ljmp
and
rclb
mov
fstpt
das
fdivl
mov
mov
adc
mov
scas
jp
enter
jmp
cltd
and
aam
addr16
sub
in
push
sub
cltd
outsb
and
adc
lret
aam
scas
repz
push
mov
xor
imul
je
xchg
cs
popf
or
adc
or
lcall
fld
cmpsb
mov
push
adc
dec
sub
jmp
mov
outsl
push
adc
loopne
in
stos
cmp
cmp
pop
pop
aad
xchg
fistl
push
adc
dec
mov
std
cmp
cmp
push
adc
adcb
adc
outsl
xlat
and
test
mov
mov
imul
sub
xor
or
sub
inc
add
cmpsb
add
fstpt
xchg
mov
jb
cli
adc
mov
adc
pop
sbb
xchg
lock
xchg
and
xrelease
adc
mov
scas
shlb
outsb
lahf
cmp
dec
cmp
lret
cmpsl
pop
mov
cmp
cmc
sbb
imul
loopne
addr16
and
shlb
cmp
push
imul
movsl
dec
loopne
and
jb
push
stos
insb
mov
add
pushf
cmp
dec
outsl
push
adc
add
sub
and
loopne
bound
les
push
adc
push
loop
subl
sub
cmp
insl
fbstp
or
pop
sub
pusha
pushf
cmp
xchg
jnp
xor
icebp
sub
lock
mull
dec
cmp
jp
pop
lret
mov
dec
xchg
cmp
push
xor
or
pop
enter
pop
cmp
jp
sahf
pop
mov
loopne
pop
nop
pop
push
movsb
fdivp
xor
or
sub
in
cmp
push
shl
xlat
push
imul
fdivrs
sub
mov
mov
call
in
xor
sub
mov
cs
sti
shrl
inc
pop
daa
test
popf
cmp
mov
push
stos
pop
mov
jecxz
int3
pop
adc
add
adc
dec
popf
xchg
add
test
xchg
sub
movsb
out
outsb
mov
aam
dec
dec
dec
xchg
test
pop
cmp
lret
dec
gs
mov
mov
jmp
dec
xchg
es
cwtl
xor
jbe
cmp
adc
movsl
mov
clc
and
mov
out
lcall
ss
or
int3
pop
adc
mov
pusha
push
adc
ds
lahf
cmp
sbb
mov
dec
inc
push
mov
push
adc
push
lea
jmp
add
adc
mov
mov
scas
mov
loope
or
mov
mov
stos
mov
sbb
mov
in
stos
pop
adc
out
adc
and
nop
and
fidivl
inc
dec
rcrb
xchg
fs
sbb
daa
iret
lahf
mov
imul
fstps
push
push
outsb
fcomps
jns
adc
es
imul
xchg
mov
cmpsl
leave
inc
shrl
adc
dec
xchg
fdivr
adc
mov
mov
leave
sub
dec
sbb
jmp
lahf
es
cs
mov
aad
sbb
dec
and
jno
mov
fs
jne
and
outsl
push
adc
testl
test
shl
dec
sbb
daa
or
push
outsl
push
adc
aam
inc
add
mov
std
jg
mov
aas
lods
adc
xchg
hlt
bound
scas
jnp
jle
mov
mov
adc
mov
adc
int3
pop
adc
or
adc
fdivl
sahf
pop
inc
push
push
add
or
adc
aaa
mov
pop
mov
popf
pop
mov
dec
jbe
aas
cs
and
dec
jg
xor
test
inc
mov
or
out
pop
or
or
inc
mov
push
mov
sbb
mov
je
push
add
inc
ds
rorb
xorb
rorb
inc
push
add
push
nop
test
jle
pop
popf
or
adc
add
adc
adc
scas
adc
jge
cltd
loop
jb
out
lods
inc
or
hlt
scas
jle
pop
pusha
ds
pop
inc
pusha
mov
lds
dec
dec
push
in
inc
sub
bnd
mov
ja
push
dec
or
push
outsl
push
adc
cmp
popf
add
xchg
cmp
test
xchg
dec
pop
adc
lds
or
cld
or
cld
pusha
push
adc
enter
lea
gs
fistpl
mov
xor
or
mov
call
cld
xor
leave
xchg
sbb
movsl
mov
lods
movsb
popa
out
and
fidivl
dec
pushf
xchg
jb
mov
and
mov
in
insl
mov
xor
out
pop
in
push
sbb
xor
std
mov
inc
shrb
dec
xchg
push
inc
loopne
cmp
mov
out
pop
ss
xor
jnp
enter
push
sti
mov
nop
lock
dec
outsl
push
adc
lock
cmp
add
sub
outsl
push
adc
mov
pushf
nop
gs
jno
xchg
arpl
mov
pop
sub
addr16
and
loopne
sahf
xchg
and
cmpsl
dec
or
fimuls
loopne
dec
xchg
sub
dec
jns
and
dec
xchg
mov
insb
push
cmp
dec
xchg
adc
movsb
mov
leave
shll
fistpll
xchg
sub
out
pop
xor
imul
or
mov
sub
xlat
xor
das
push
movsb
out
and
insl
fisttpl
pop
fs
sub
xor
insb
xchg
xchg
xor
cmp
pop
add
or
mov
and
dec
push
sbb
add
insb
aad
out
ss
jne
mov
cmp
aaa
in
push
mov
push
xor
or
xchg
pop
xlat
addr16
ss
sub
leave
mov
push
jbe
pop
stos
rorl
adc
mov
mov
or
or
movsb
aas
adc
push
dec
mov
adc
adc
pop
push
lea
pop
cld
sbb
xor
push
push
test
insl
call
test
lods
sbb
sub
sub
mov
scas
hlt
and
not
and
icebp
pop
mov
insb
lods
mov
faddl
fnstenv
adc
push
int3
pop
adc
push
cmp
jbe
outsb
fsubs
divl
dec
adc
stos
enter
pop
repz
push
adc
adc
pop
ljmp
jge
shrl
inc
ret
daa
rcrb
mov
lret
mov
es
push
hlt
add
xchg
add
mov
leave
pop
push
mov
sarl
pop
lds
ljmp
pop
cli
push
xor
shll
jmp
les
lock
mov
mov
jp
lret
lcall
fsub
adc
scas
aam
pusha
fdivrs
insb
jmp
mov
call
fs
xor
neg
divb
or
adc
push
rorb
dec
int3
jecxz
and
test
outsl
push
adc
mov
outsb
das
mov
cld
jmp
xor
xchg
jg
push
or
in
imul
lock
je
dec
jae
push
push
push
push
add
addr16
pop
iret
iret
stos
cmp
xor
call
imul
cld
xchg
cmp
fcmovnb
push
adc
and
add
xchg
bound
sbbl
and
mov
in
push
into
adc
addr16
sub
xor
pop
or
add
dec
and
cli
cmpsl
push
jbe
scas
and
or
xchg
xchg
icebp
arpl
insl
fwait
es
scas
bnd
mov
lahf
stc
push
jmp
pop
or
or
cs
and
pop
mov
movsb
leave
cwtl
inc
mov
add
pop
fdivl
pushf
jae
lret
push
inc
xchg
arpl
mov
addb
imul
xchg
and
shrb
add
in
mov
inc
cmp
push
adc
xchg
bound
jecxz
fwait
js
xor
cmp
push
outsl
push
adc
fwait
jns
cld
sub
pop
xchg
cwtl
mov
orb
fs
sub
adc
lret
xor
sub
mov
cmp
arpl
stos
sahf
dec
jle
inc
call
lods
cmpsl
add
pop
jb
fisubrs
xor
xchg
rcrb
mov
push
adc
xor
aas
jb
pusha
cmp
push
movsl
mov
lods
pushf
xor
or
lcall
sahf
mov
and
dec
xchg
sub
xor
and
mov
sbb
insl
push
xor
pop
push
movsl
in
arpl
mov
push
xor
and
mov
mov
xchg
and
fbstp
mov
sbb
inc
fidivs
dec
pushf
dec
jne
mov
or
xchg
mov
shrb
dec
xchg
pop
jb
mov
add
mov
mov
dec
outsl
push
adc
push
pusha
andb
cli
mov
dec
add
push
adc
mov
outsb
clc
es
aas
cmp
mov
xor
cmp
loop
pop
lret
jecxz
pop
or
cs
xchg
push
or
xchg
mov
cmp
aas
jmp
mov
enter
pop
and
sub
push
into
mov
pop
outsb
cmp
or
push
je
das
or
dec
mov
mov
jb
ja
das
or
dec
mov
cmc
imulb
insl
lcall
push
int3
pop
adc
jnp
sub
push
int3
pop
adc
pop
and
push
int3
pop
adc
pop
rclb
movsl
aaa
cmpsb
and
add
arpl
adc
add
dec
xchg
sub
pop
adc
rcrl
rcrl
jmp
mov
and
insb
mov
cmpsl
jecxz
mov
mov
andb
sbb
and
ss
xchg
imull
lods
pop
dec
mov
push
roll
and
mov
and
cmp
jo
mov
flds
repz
test
mov
test
push
adc
fcoms
fnstcw
cltd
mov
jmp
ljmp
push
lods
adc
mov
loopne
push
adc
adc
hlt
pusha
fdivs
mov
mov
enter
in
pop
adc
jg
fidivs
popa
mov
jp
lods
in
or
adc
add
enter
ret
pop
adc
jmp
pop
call
mov
and
nop
jl
aas
aad
mov
dec
stos
and
xor
call
sub
imul
and
adc
inc
das
cli
or
pop
adc
push
mov
ficomps
dec
ss
cmp
scas
rorb
or
mov
push
int3
pop
adc
sub
outsl
push
adc
popa
xor
mov
add
cmp
and
adc
adc
enter
adc
pop
fistpl
test
mov
cli
add
inc
std
lret
jp
getsec
lods
hlt
lea
inc
cmc
sub
repz
sti
je
or
fwait
imul
push
repz
lret
dec
iret
jo
or
decb
je
dec
fcoms
or
ror
cld
pusha
push
adc
ljmp
pop
arpl
mov
or
cmp
mov
or
mov
movsl
and
xchg
out
mov
or
xchg
ret
cld
pusha
push
adc
or
xchg
ret
add
adc
push
mov
adc
adc
xchg
sub
jb
cld
pusha
push
adc
or
push
dec
add
adc
ret
adc
or
sarl
push
and
push
or
ds
test
and
lods
or
cld
pusha
push
adc
outsb
in
or
adc
shrl
xchg
dec
xchg
ja
int3
pop
adc
push
push
mov
pop
dec
pop
mov
inc
cmc
add
pop
fistpll
and
inc
pop
cmp
rclb
mov
aaa
insl
mov
add
dec
xchg
fldcw
nop
mov
lds
insl
fstpt
call
in
jecxz
ljmp
push
adc
stos
fldcw
lock
and
inc
nop
and
pop
xchg
test
test
out
jo
leave
pop
cmc
in
mov
pop
mov
adc
inc
nop
and
sbb
fbstp
cmp
cs
js
insl
sub
mov
movsb
fisubs
fiadds
adc
imul
fbstp
add
mov
xchg
and
inc
xchg
sub
dec
jns
pusha
push
adc
loopne
push
jmp
cmpsb
dec
adc
in
cmp
cmc
mov
cmpsb
dec
xchg
rcl
push
adc
or
sub
lds
ljmp
into
xchg
mov
cmp
or
in
pusha
push
adc
push
adc
das
pop
add
inc
cli
inc
cltd
test
add
fwait
jb
pop
aaa
loope
jae
inc
xor
cmp
mov
les
hlt
arpl
adc
add
add
cld
sbb
xor
mov
or
lea
mov
in
adc
xor
sbb
adc
ret
jnp
mov
rorb
xor
fmul
dec
int3
sahf
and
iret
inc
rol
pop
adc
les
outsb
fnstenv
adc
shr
adc
fnstenv
adc
xor
push
pop
adc
adc
sbb
inc
mov
mov
nop
cwtl
insb
leave
xchg
lods
ss
sub
icebp
daa
shlb
or
jmp
inc
adc
inc
ret
neg
xchg
test
pop
fistpll
iret
stos
jne
add
or
jae
xor
dec
xor
icebp
scas
inc
sub
fsubrl
cmp
and
jp
xor
sub
leave
dec
xchg
dec
and
push
adc
sub
cmp
sub
adc
pop
stc
add
and
popa
push
adc
mov
test
inc
repz
adc
movsb
shll
rorb
mov
dec
jg
cmp
fsts
lret
mov
out
push
arpl
scas
and
adc
popf
xchg
mov
mov
movsb
fwait
mov
popa
push
adc
dec
int3
cltd
and
or
lds
ds
leave
inc
mov
incb
sbb
ret
jns
push
xchg
gs
adcl
gs
or
dec
bound
test
lea
std
scas
fistpl
cmp
sub
jecxz
js
push
fnsave
and
and
xchg
jno
jb
sub
cld
pop
outsb
xchg
push
mov
mov
ret
cmp
push
aam
ja
shll
cmp
cmc
out
ss
sub
out
testb
adc
sbb
sbb
pop
sahf
and
cwtl
inc
or
mov
int3
add
fs
iret
or
hlt
cltd
gs
xchg
pop
loop
lcall
nop
pop
stc
sub
sub
ss
in
ret
dec
push
mov
mov
fwait
iret
or
movsl
shrb
pop
xchg
sbb
xor
pop
dec
outsb
stos
test
mov
testb
mov
sti
mov
in
and
lea
cmp
pushf
cmp
pop
mov
sub
xor
xchg
popf
scas
inc
push
xchg
pop
sub
pop
xorl
pop
adc
mov
push
arpl
aas
xor
in
addr16
push
mov
adc
outsl
in
std
or
outsb
mov
dec
xchg
and
lods
sub
insb
dec
push
fisubl
fwait
out
cwtl
xchg
xrelease
pop
fbstp
mov
aaa
pop
dec
and
mov
mov
dec
pushf
dec
dec
inc
insl
movsb
sbb
das
repnz
daa
push
ss
and
pusha
pop
into
insb
inc
insb
pop
in
pop
cmp
sahf
fwait
iret
test
push
mov
shll
adc
sbb
ds
jp
arpl
sahf
shlb
cmp
lods
movsl
rorl
call
insl
and
dec
into
ds
or
repnz
and
out
pop
cmc
add
push
shll
pushf
pop
mov
loopne
insb
addb
ss
cli
cmp
jmp
ret
imul
cmp
addr16
fbld
mov
out
mov
imul
mov
push
adc
loop
subl
das
leave
loope
mov
test
mov
repnz
ljmp
pop
clc
outsb
pop
lods
out
mov
sahf
or
leave
mov
inc
js
repz
cmpsb
int3
shrl
test
lds
inc
movsb
pop
mov
xor
and
fcoml
sbbb
out
add
mov
inc
mov
cmp
fildll
test
xlat
movsb
shrl
and
movsl
dec
jae
enter
push
and
push
jns
sbb
outsb
inc
loop
fdiv
pop
push
jp
and
xchg
lods
add
inc
xchg
jg
dec
sbb
jnp
push
mov
push
hlt
sbb
arpl
int
daa
dec
jle
into
stos
and
call
fimuls
into
push
sub
sbb
pop
mov
and
mov
dec
sub
stos
mov
or
inc
or
xchg
clc
xor
mov
test
lods
xchg
xchg
jne
inc
cmp
jge
sbb
and
scas
jnp
data16
pop
dec
imulb
sub
mov
and
iret
pusha
adc
fs
mov
or
xchg
xchg
mov
push
mov
iret
pop
std
push
movsl
dec
jecxz
xchg
and
clc
sti
mov
mov
push
sti
and
fsts
es
sub
in
push
decl
xchg
mov
mov
cmpsb
jg
jmp
push
in
rorb
imul
xchg
pop
and
es
fnstcw
enter
fisttpl
add
push
icebp
push
adc
js
adc
dec
and
push
cs
popa
mov
je
outsb
mov
xchg
cld
xchg
dec
lds
pcmpeqb
push
jns
loope
pop
mov
pop
ljmp
adc
cmp
pop
cmp
add
aaa
nop
repz
fdivr
nop
sti
inc
lahf
cmp
lret
cmp
add
aaa
nop
sti
out
inc
das
pop
stc
test
cli
lods
dec
incb
orl
mov
pop
add
or
cmp
add
mov
repnz
cmpsb
fimull
sbb
cmpsb
jl
or
popa
loopne
cld
or
ds
daa
sbb
out
sbb
xchg
push
ljmp
adc
dec
scas
mov
fmuls
sub
cs
dec
xchg
cmp
mov
sbb
and
clc
pop
mov
xchg
push
movsl
out
push
dec
cmp
add
xor
and
pop
in
sub
imull
sarb
dec
push
and
dec
loopne
adc
dec
push
fisubl
adc
repz
xchg
and
mov
pop
shrb
fsubrl
pusha
sub
mov
xchg
mov
js
test
mov
ret
jnp
insl
mov
insl
fstpt
mov
mov
out
ss
dec
fisubrl
mov
fidivl
dec
pop
out
in
or
push
adc
arpl
adc
lods
push
mov
aad
arpl
mov
ds
dec
mov
sub
push
jae
adc
pop
jecxz
daa
es
xor
mov
pop
ficompl
mov
dec
fsubrp
in
mov
repz
jecxz
mov
mov
test
outsl
and
rcr
xor
jg
arpl
adc
pop
rcrl
ret
mov
push
pop
cmp
mov
dec
jg
xor
xchg
dec
cmp
aad
fnsave
aam
sub
push
adc
pop
mov
test
clc
test
mov
cld
mov
push
jno
rcr
sub
push
adc
cmp
pop
add
fincstp
ficoms
mov
mov
shlb
sub
je
pop
inc
or
sti
mov
inc
dec
rclb
fidivl
push
sub
shrl
sahf
in
mov
cmpb
xor
movsl
bound
lods
mov
xlat
and
addl
xor
das
jp
pop
push
in
sbb
mov
inc
and
add
mov
fisubl
sub
rcr
cltd
scas
je
loope
leave
call
dec
push
jmp
arpl
mov
xlat
or
lds
mov
sub
fwait
js
aam
mov
cli
inc
bound
adc
or
xchg
lods
pop
hlt
sbb
inc
push
jg
cltd
mov
mov
repnz
xor
into
push
add
xor
mov
mov
add
fabs
add
dec
stc
sbb
sbb
xchg
and
sahf
cmp
push
shl
add
and
push
sub
xor
mov
push
mov
test
gs
stc
bound
scas
fdiv
loopne
pop
into
gs
cli
push
xor
shrl
pop
mov
imul
lret
je
inc
lods
jbe
flds
stos
sti
mov
leave
and
jo
out
outsl
or
in
pop
test
popf
test
movsb
test
xchg
xchg
lahf
out
or
cld
adc
dec
aaa
xor
cmpb
adc
cwtl
add
lea
mov
outsb
pop
dec
fdivrl
jb
xor
sbbb
xchg
xchg
movl
cld
push
push
loop
sub
insb
pop
aaa
cmp
push
and
loopne
adc
adc
lea
lahf
outsb
fbld
lods
and
xchg
xchg
fisttpll
or
push
or
xchg
inc
mov
push
dec
fildl
inc
pop
inc
dec
repz
mov
std
adc
add
out
dec
mov
cld
add
pusha
inc
push
mov
mov
jbe
add
xor
xchg
xchg
jno
push
adc
sbb
in
mov
popf
mov
mov
push
jle
xchg
inc
out
mov
sub
pushf
mov
in
xor
sub
mov
push
cs
dec
xchg
pop
jbe
ffree
addr16
imul
mov
ja
lea
xor
imul
xchg
je
fneni(8087
out
loopne
iret
adc
adc
jno
rcr
jns,pt
mov
mov
shlb
mov
push
lock
jae
adc
pop
cmp
dec
outsl
xor
shl
xchg
xchg
adc
orb
or
push
cld
arpl
fildll
mov
scas
pop
scas
fidivs
cmp
into
fistl
loopne
sub
lods
pop
ret
outsb
push
loopne
push
les
lds
in
mov
ret
xor
fwait
mov
fsubs
adc
aas
insb
xor
lret
shrb
mov
xchg
test
jecxz
out
sub
pop
insl
mov
shll
pop
or
shll
mov
fsubs
adc
push
mov
fnstcw
fisubs
dec
push
aaa
cmp
loope
sahf
mov
sbb
cmp
rorb
xlat
fmuls
mov
out
aaa
xor
mov
ds
fld
test
jno
dec
jnp
aaa
pop
jp
mov
aam
sbb
xor
repz
pop
xchg
xor
jmp
mov
xor
stos
and
mov
aam
push
cmp
mov
ja
xchg
and
dec
pop
adc
mov
stc
test
icebp
and
scas
pop
stc
xor
stos
push
lret
mov
cld
pop
insl
fldenv
jmp
sub
dec
adc
leave
pushf
scas
out
push
mov
scas
enter
cwtl
push
inc
adc
sbb
fwait
mov
mov
sbb
add
push
sbb
pop
sub
test
pop
loop
mov
mov
xor
cmc
push
push
dec
sbb
sarb
mov
dec
push
dec
push
call
loope
dec
js
lock
ret
xor
xor
pop
stos
lds
ret
pop
pop
push
cmpsb
ja
call
imul
das
pop
pop
notl
in
xlat
cmc
pop
mov
test
test
mov
and
pop
mov
fdivrl
sub
shll
pop
jb
inc
in
and
jge
scas
dec
and
xchg
fwait
and
cmp
mov
cmc
mov
outsb
popf
dec
out
cmp
push
adc
adc
jmp
mov
xchg
pop
or
out
sar
lahf
jns
in
lahf
mov
mov
xchg
push
mov
or
pusha
mov
stos
dec
mov
and
and
push
divb
and
stos
movsl
mov
adc
xor
cs
jl
in
sbb
push
adc
jae
jb
and
push
adc
leave
mov
sarb
push
mov
mov
in
test
push
adc
add
fimuls
push
adc
pop
nop
pusha
call
push
lods
pop
subb
push
push
sub
jp
or
pop
mov
iret
sahf
cmp
pop
shlb
movsb
mov
cmp
or
adc
adc
out
insl
or
in
mov
push
adc
push
xchg
cmpsb
push
bound
mov
pushw
es
data16
cmp
cmp
push
adc
inc
jge
shlb
push
dec
jle
fs
adc
sub
fwait
cmpsb
mov
std
mov
pop
push
in
mov
imul
mov
int3
setb
movsb
push
mov
fiadds
cmp
js
roll
cmpsl
dec
mov
call
sbb
cmp
pop
in
mov
loopne
mov
cmp
adc
ja
in
fwait
scas
mov
pop
stos
rolb
pushf
cmp
jb
fidivs
adc
mov
test
imulb
mov
sbb
ret
pop
loopne
jb
hlt
imul
or
fisubrs
and
push
dec
sbb
cmp
rcrb
mov
pop
cmp
fsub
fs
std
movsl
movsb
loopne
sub
xchg
xor
inc
inc
sbbb
jp
push
sahf
movsl
dec
aad
in
pop
ss
mov
and
sahf
out
cmp
dec
pop
cmp
cmp
jnp
loopne
loopne
mov
sub
mov
les
xchg
jae
test
test
cld
mov
rolb
movsl
mov
pusha
push
adc
sub
adc
mov
push
or
pop
out
pop
sbb
mov
test
pop
pop
mov
or
jno
jnp
xor
sub
jo
push
clc
roll
dec
test
mov
stos
stos
or
sbb
testb
fucom
in
mov
je
mov
test
out
cltd
jecxz
stos
in
mov
enter
xor
sarb
xor
popf
dec
ret
aad
sub
jmp
xor
adcl
lock
jge
push
movsl
dec
mov
add
std
pop
into
call
adcb
mov
call
ljmp
mov
cmpsl
mov
or
ds
and
popf
ljmp
pop
push
adc
aaa
iret
adc
push
dec
andl
mov
cmp
jns
outsb
fld
fcmovu
push
rol
jne,pt
into
pop
loope
sbb
add
sbb
pop
pop
hlt
lds
adcl
outsb
inc
fwait
or
inc
jp
or
fs
es
in
adc
jbe
jge
daa
xor
mov
mov
mov
iret
das
negb
pushl
xchg
sti
cmp
stos
xor
pop
mov
sbb
jle
xor
or
inc
dec
outsl
xchg
sub
jnp
adc
xchg
jp
dec
pusha
or
sub
pop
xor
sti
das
xor
pop
mov
daa
sbb
or
mov
xor
mov
call
mov
in
sahf
mov
js
pop
out
sbb
leave
pop
inc
sub
mov
mov
std
vphaddbd
aas
leave
cmp
mov
ret
dec
or
or
pop
or
insb
sbbb
inc
pusha
fistps
xlat
cmpsl
sub
pop
fsub
cld
push
ljmp
stos
add
ret
mov
mov
int
ret
repnz
outsb
out
ds
jne
lret
xchg
mov
pop
add
jle
xchg
movsl
jo
cmp
mov
mov
xchg
xlat
add
data16
adc
test
pop
add
mov
addl
pop
or
mov
hlt
ret
lds
sbb
neg
push
jge
dec
mov
add
mov
imul
sahf
mov
jecxz,pn
fistps
std
mov
xor
sub
jb
in
pop
xor
jo
inc
mov
xor
fsubrp
fucom
pop
leave
jae
mov
test
fcoms
movsl
aad
push
mov
fdiv
jne
out
leave
mov
daa
pop
test
iret
jge
mov
aad
pop
ds
push
dec
les
lods
inc
sahf
mov
xchg
mov
push
dec
fucomip
fidivl
outsl
pop
cmpsb
mov
out
xor
push
mov
aam
fwait
cmp
shlb
cmp
in
adc
mov
push
shrb
jb
pop
dec
jge
mov
fldl
cmp
imul
dec
push
fisubrs
mov
fdiv
jne
in
inc
xchg
pop
mov
adcl
sarl
xor
push
lods
out
lods
inc
xchg
mov
enter
fprem
jae
lock
in
ds
mov
pop
jb
and
xchg
push
jp
cmpsl
dec
call
movsb
sbb
jecxz
pop
rorb
out
pop
les
pop
icebp
das
es
jo
xor
sarb
or
xchg
scas
mov
rcrb
sub
pop
xchg
lea
mov
ret
movsl
incb
insl
push
lock
jle
adc
pop
cmp
lret
psrlq
inc
xchg
mov
lahf
test
out
pop
add
mov
push
cli
jle
bound
pop
cwtl
lcall
mov
call
movsl
test
ds
lods
shlb
out
fidivs
xchg
mov
inc
rorb
xor
leave
mov
aad
test
sbb
add
aas
fnop
fs
inc
xor
popf
sub
nop
mov
pushf
mov
xchg
testl
mov
mov
sub
test
push
mov
mov
sbb
rclb
adc
xchg
inc
xchg
mov
mov
adc
insb
adc
pop
inc
dec
jle
lods
shll
jmp
rol
in
cs
dec
sti
xchg
dec
push
es
lods
jae
pushf
mov
xor
aaa
cmp
dec
mov
push
adcl
adc
shll
jne
cmp
xor
mov
loopne
stos
inc
adc
test
mov
int
mov
mov
mov
jl
cmp
push
cmp
mov
pop
xor
or
pop
lret
push
sub
movsl
fidivrl
xchg
and
sbb
pop
popa
lods
shll
icebp
add
adc
aaa
jmp
sbb
push
adc
jmp
push
mov
fucomi
clc
pusha
or
outsb
stos
cmp
mov
push
inc
jbe
mov
mov
jp
aad
aaa
mov
mov
movsb
push
jb
lods
repz
ffree
inc
es
dec
loopne
aas
fsubs
outsl
and
dec
adc
leave
fidivrs
jl
sbb
mov
xchg
filds
inc
add
aad
adc
jle
push
insb
cmp
mov
inc
xchg
sarb
fisttpl
xchg
or
mull
iret
cmp
mov
testl
mov
push
cmp
test
rcll
test
xor
adc
pop
stos
jnp
push
add
push
scas
pusha
dec
add
or
jae
movzbl
pushf
mov
mov
push
and
daa
pop
stc
adc
push
xchg
lods
out
xchg
adc
fwait
neg
sbb
test
movsl
pop
jne
adc
leave
adc
cmp
pop
rcr
loop
leave
adc
repnz
xchg
idivb
out
stc
adc
dec
and
push
mov
test
push
das
xchg
jge
inc
test
fwait
imul
jl
call
jns
rorl
loopne
xchg
sub
cltd
mov
mov
cmp
andl
jb
mov
pop
call
mov
mov
sahf
mov
sub
sbb
pop
xor
xor
ds
inc
or
cmp
test
in
xchg
sub
cwtl
lds
repz
pop
fistpll
sub
sub
inc
and
cmp
gs
jnp
test
pop
lea
ss
call
insb
pop
arpl
out
adc
pushf
mov
mov
or
sub
fidivl
push
lods
sub
loopne
mov
mov
push
js
lahf
mov
dec
out
stc
dec
mov
and
sbb
es
pop
outsl
push
jns
and
cmp
nop
cltd
xor
aas
fnstenv
xchg
mov
inc
inc
subb
test
movsl
sbb
daa
addr16
push
mov
leave
sbb
loop
inc
sbbl
ret
gs
js
je
xchg
and
push
in
mov
pop
push
adc
cmp
push
mov
sub
push
rep
xchg
pop
mov
mov
lock
lcall
rcll
lahf
movsl
out
movsl
in
mov
cmc
jl
int3
add
sub
and
xchg
in
mov
testb
dec
push
testb
and
inc
xor
push
jge
xchg
out
sahf
ljmp
cmc
movsb
xchg
inc
arpl
sub
fdiv
mov
dec
cmpsl
je
mov
arpl
pop
push
adc
sti
and
or
lods
jl
or
out
test
pop
and
or
daa
sbb
scas
stos
aaa
add
xor
lret
sub
mov
pop
imul
addr16
xor
out
mov
aaa
xchg
inc
push
rcl
xor
insb
sub
scas
int3
adc
dec
xchg
mov
ds
gs
xchg
and
movsl
xchg
cld
sub
and
dec
xchg
ljmp
sbb
pop
push
test
mov
es
inc
stos
fldenv
les
cwtl
mov
adc
xlat
sahf
sarl
cli
xlat
mov
add
adc
xchg
mov
hlt
lret
pop
push
adc
push
fnstsw
lods
add
ljmp
mov
inc
xchg
mov
std
in
xor
mov
and
nop
mov
pop
xor
das
fdivrl
mov
popf
cmp
arpl
and
ficoml
ds
stos
inc
cltd
neg
movl
rclb
pop
stos
aaa
jg
push
mov
add
sub
mov
repnz
push
repz
lods
and
and
mov
sub
pop
insl
nop
rorb
pop
lret
adc
xor
adc
or
mov
jg
add
sti
push
outsb
es
xor
add
and
dec
sub
hlt
mov
shll
cmp
mov
dec
mov
dec
pop
lods
mov
adc
std
int3
fists
cltd
imul
adc
pop
scas
or
push
cs
out
and
pop
shrl
adc
and
loopne
dec
fiadds
ds
leave
sub
dec
mov
dec
push
mov
jmp
popf
stos
lds
and
jbe
sbb
fdivrs
popf
sub
ret
mov
mov
leave
adc
lock
ds
loop
and
adc
or
ret
fisubrl
mov
insb
push
adc
clc
mov
call
rcll
in
fwait
sbb
cmpsl
adc
jb
push
pop
pop
adc
xchg
sbb
or
push
adc
rorb
mov
jmp
cltd
nop
in
ds
mov
xchg
mov
lock
xchg
mov
aaa
sti
lea
lock
mov
lods
shll
mov
mov
push
pop
out
mov
pop
pop
shll
jo
push
lock
jecxz
cmp
fiadds
dec
xchg
and
sub
ds
mov
push
adc
lea
mov
ret
ds
mov
push
clc
dec
test
lods
pop
out
dec
icebp
aas
cmp
and
stos
pop
les
mov
loopne
stos
cmp
xor
dec
pushf
lods
jb
ss
lea
pop
jecxz
pop
in
push
movsb
fcoml
loop
push
sti
aas
shll
dec
pushf
dec
lret
sub
sbb
loopne
aad
lock
mov
push
xor
lods
pop
cmp
inc
lea
ss
xor
lods
add
pop
mov
and
adc
les
mov
sub
out
in
shl
lcall
dec
shlb
mov
fnclex
jecxz
push
mov
imul
mov
push
adc
adc
loope
cmpsl
dec
xchg
push
add
daa
dec
xchg
xor
cltd
sub
jge
cli
dec
xchg
mov
and
movsl
neg
movsb
mov
adc
adc
outsl
gs
mov
adc
mov
leave
sbbb
mov
ret
pop
add
ja
arpl
adc
pop
imull
mov
or
insl
sti
inc
ja
pop
or
dec
mov
mov
sbb
ss
cmp
push
pop
inc
std
lods
sbb
cmp
addl
mov
sbb
and
xlat
cltd
jne
push
out
or
adc
add
lods
jle
push
sub
mov
pop
adc
jmp
test
stos
mov
xor
aad
pop
pop
dec
arpl
adc
push
stos
pop
popf
pop
pop
outsb
xchg
xor
scas
into
dec
mov
sbb
push
mov
stos
dec
pop
les
test
pop
adc
fdivr
jmp
mov
mov
gs
enter
das
mov
fldenv
iret
sbb
aam
fadds
mov
neg
xchg
add
jne
mov
enter
in
nop
or
jae
mov
and
push
adc
gs
mov
outsl
into
pop
stos
out
shl
mov
es
ljmp
adc
mov
and
mov
addr16
adc
aas
add
cmp
pop
adc
dec
cltd
and
xchg
mov
inc
mov
lcall
js
jle
jp
ds
out
mov
inc
loope
test
mov
xor
dec
jge
and
pop
fs
shll
movsb
fwait
enter
filds
adc
xor
insb
cmp
pushf
mov
mov
and
pop
adc
pop
fdivrl
icebp
sub
stc
lods
fnsetpm(287
cmc
inc
sahf
mov
scas
addr16
adc
insl
xchg
loopne
jne
and
pusha
push
outsb
mov
jne
addl
xor
cmp
cltd
jecxz
push
xchg
out
jnp
pop
aaa
cwtl
mov
mov
fimull
mov
shl
pop
inc
sub
test
mov
adc
lea
mov
xchg
inc
jb
jmp
in
push
bnd
sbb
stos
sbb
mov
or
xor
mov
rcl
in
pop
ficomps
sbbb
fidivs
leave
mov
movsl
adc
cmpsb
mov
sbb
movsb
dec
cmp
stos
lahf
dec
outsl
repz
xchg
out
mov
sub
dec
push
xchg
loop
test
xor
shll
xor
out
xchg
cmpb
xor
cmp
push
pop
ljmp
add
stos
lahf
dec
outsb
ds
pop
cmp
mov
and
sub
mov
push
cli
cmpsl
dec
mov
fidivrl
lock
scas
xlat
lock
loopne
ss
dec
inc
scas
repz
out
push
cwtl
cmpsl
dec
pushf
xchg
add
test
xchg
sub
or
out
jns
repz
fstpl
mov
push
and
cmp
lret
cmp
call
and
lds
sti
mov
mov
std
pop
cmp
inc
ficoms
cs
xchg
pusha
jno
add
mov
cmp
repz
xchg
jae
mov
es
pushf
lock
inc
call
stos
scas
push
add
aad
fldt
xor
xchg
push
xor
sub
mov
mov
adc
cwtl
xor
adc
mov
adc
dec
sbb
sub
mov
adc
sub
out
pop
pop
mov
dec
push
dec
or
xchg
es
frstor
sbb
mov
or
dec
test
ds
dec
xchg
sub
sbb
jmp
movsb
xor
or
cmp
fs
dec
xchg
mov
insl
pop
out
jo
xor
sub
les
mov
adc
push
adc
cltd
add
leave
push
in
icebp
pushf
adc
add
hlt
loop
mov
cs
mov
inc
dec
inc
inc
jge
dec
fldt
rclb
movsbl
cltd
fldenv
stos
push
insb
lea
push
sbb
inc
cwtl
fsubrl
aaa
inc
pop
jge
pop
aaa
in
hlt
xor
dec
arpl
adc
cli
cld
stos
in
xor
mov
das
scas
adc
outsb
fdivs
fldenv
or
outsb
pop
out
and
insb
sarl
push
leave
dec
sbb
sbb
sbb
enter
adc
xchg
ret
fldenv
and
pop
sub
push
mov
je
pop
adc
jmp
mov
push
xor
adc
cmovs
adc
cmp
shlb
cli
mov
or
popa
mov
data16
jns
or
push
out
lods
ljmp
fiaddl
mov
mov
mov
adc
adc
iret
add
fcoml
scas
rcr
pop
dec
arpl
adc
mov
push
mov
jl
push
lahf
sub
or
xor
int3
pop
adc
ds
mov
imul
sti
inc
fimull
loopne
inc
sar
test
sbb
jae
sbbb
fisubrs
push
pop
das
push
js
push
or
inc
sbb
movsl
clc
inc
fbld
dec
and
push
adc
push
loope
clc
sub
adc
notb
mov
jl
dec
push
xchg
push
mov
mov
and
popf
loope
lahf
out
pop
pop
out
ficoms
bound
loopne
mov
stc
and
mov
xchg
movsl
test
add
push
iret
mov
mov
mov
pop
inc
arpl
sub
cmp
cmp
push
bnd
push
xchg
dec
lock
ret
aad
mov
jno
push
call
mov
mov
insb
addl
add
push
sub
test
sbbb
xchg
adc
push
movsb
cmp
dec
out
sahf
dec
xor
call
jnp
sbb
xchg
filds
rclb
xchg
es
sahf
dec
xor
sub
loop
sbb
or
dec
call
sub
call
pop
push
out
xorl
ss
fidivl
dec
xchg
xchg
into
xchg
and
cmp
cmp
fcmovbe
dec
dec
mov
fisttps
stos
push
movsl
dec
subl
loope
push
repz
fildll
sbb
pushf
cmp
fistl
and
or
out
and
push
inc
into
xchg
and
in
leave
pushf
cmp
mov
pop
loopne
cmp
mov
pop
and
ds
loopne
mov
dec
call
gs
pop
mov
fwait
pop
mov
ja
mov
test
movsb
sbb
das
repnz
cmp
in
mov
cwtl
movsl
sar
addr16
jbe
repnz
mov
sbb
pushf
cmp
nop
into
lods
cmp
pop
mov
aad
add
sub
aas
sub
aas
adc
add
mov
jg
and
adc
inc
jg
lods
fcomps
test
or
int3
fidivl
shrl
add
pop
loope
inc
faddl
nop
push
pop
sarl
jbe
jnp
lods
mov
push
fisubrl
dec
xchg
pop
out
in
out
hlt
cmp
fdivl
ljmp
mov
rolb
or
shlb
dec
mov
and
adc
sarl
cmc
add
sbb
cli
lods
sub
inc
in
mov
sub
xor
dec
fcompl
pop
mov
dec
inc
fimull
cmp
pushf
sbb
inc
push
out
jne
in
adc
sbb
pop
adc
fildll
int
pop
adc
insl
or
test
push
daa
std
xor
iret
enter
cmpl
lcall
aad
and
addl
adc
jno
in
inc
jl
fldt
jecxz
push
jp
out
pop
xlat
mov
and
adc
mov
test
es
inc
jmp
push
adc
out
jne
cs
aam
clc
inc
push
arpl
dec
mov
pop
pop
adc
iret
xchg
push
adc
mov
adc
or
leave
sahf
cmp
xchg
addr16
adc
jbe
xor
out
jbe
pop
unpcklps
dec
stos
mov
push
cs
sbb
insl
inc
stc
aad
push
pop
mov
test
out
subl
mov
jmp
xor
shll
outsl
loopne
and
repz
xchg
mov
outsl
call
dec
int
pop
es
das
out
shrb
cmp
and
jge
cwtl
pop
in
sbbl
out
pop
or
push
repnz
cwtl
mov
pop
shlb
imul
gs
or
scas
daa
test
xor
pop
mov
add
add
paddusb
pop
loope
sub
xor
cmc
mov
jne
push
mov
aam
pop
rorb
inc
push
in
ljmp
xlat
mov
xor
and
popa
inc
fbld
imul
sub
push
test
pop
pusha
cmp
mov
int
aad
mov
inc
pop
dec
mov
inc
inc
or
fidivrl
adc
and
xor
adc
sbb
jbe
shlb
push
adc
xor
mov
push
rolb
xchg
sub
add
mov
mov
shll
mov
cmp
cmp
inc
jo
xchg
sub
push
pop
pop
adc
sub
stos
lahf
add
pop
jmp
sub
ds
mov
dec
push
ret
out
mov
es
xchg
and
shl
addr16
jge
cmp
xorb
loopne
test
mov
les
sub
xchg
push
lock
test
lds
scas
shr
gs
inc
loopne
mov
push
imul
dec
cmp
ret
or
pushf
test
insb
sti
mov
push
fcmovnb
jb
movsl
lods
push
or
mov
dec
sbb
out
ds
imul
imul
pop
cmp
xor
push
test
push
fsubl
stos
out
or
rclb
imul
imul
pop
cmp
fbstp
jp
imul
shl
addr16
pop
mov
sub
mov
pop
or
insl
scas
pop
push
call
push
cmp
push
rep
adc
lods
shl
imul
fidivl
mov
mov
nop
stc
test
xchg
sub
sbb
loopne
sub
mov
aam
sub
dec
xchg
pop
jmp
cmp
ret
pop
push
ret
stos
pop
adc
xlat
lods
pop
aas
das
fcomip
shrl
xlat
mov
andb
adc
mov
inc
adc
jecxz
mov
jecxz
push
clc
sahf
lods
test
cwtl
outsb
push
adc
mov
loope
and
mov
pop
aas
sub
xor
add
dec
add
and
adc
sbb
cmp
mov
mov
mov
mov
stos
subb
jmp
mov
mov
into
sbb
repnz
into
push
lahf
ret
cmp
movsl
dec
pop
and
int3
faddl
xor
sub
cmp
fldcw
pop
rclb
xchg
in
icebp
push
jb
insb
mov
ljmp
pop
push
mov
test
push
iret
sahf
jle
xor
clc
mov
xchg
sar
es
popa
lods
add
in
stos
mov
and
inc
int3
pop
sbb
sbb
mov
aaa
jmp
in
cmovge
fcmovnu
repz
js
fsub
dec
push
sub
popf
sbb
fidivrs
jge
mov
pop
inc
adc
and
insl
push
and
xchg
mov
cltd
mov
lods
js
and
lcall
aas
mov
insl
xchg
inc
dec
xor
cmp
int
fadd
aas
ffree
xor
ljmp
adcb
ja
nop
insl
cltd
jne
icebp
scas
sbb
pop
test
in
sbbb
push
and
push
pop
int3
imulb
jbe
pop
fcmovnbe
mov
and
pusha
mov
cs
scas
test
ret
iret
or
pop
fdivrs
or
aaa
in
scas
sti
addb
xor
mov
jmp
xchg
test
std
add
shrb
xorb
xchg
add
roll
fwait
cmp
xchg
lahf
dec
loope
mov
aam
xchg
or
mov
cmp
xor
out
out
ds
out
or
iret
popf
cmp
mov
mov
xchg
dec
jmp
stc
inc
rolb
sub
into
aad
inc
mull
cmpsl
cmc
mov
jmp
and
out
push
les
jp
xor
pop
jo
push
aam
adc
les
lret
cld
cli
or
addr16
jnp
pop
stc
push
xor
mov
and
ljmp
add
out
out
jns
dec
xchg
inc
mov
cmp
push
sub
sub
dec
leave
dec
mov
ja
pusha
cmpsl
das
inc
inc
cmp
adc
sub
and
inc
mov
insl
fndisi(8087
test
imul
add
popf
mov
inc
push
andl
in
mov
and
popa
and
xor
sub
jne
cmovle
orl
mov
push
push
movsl
mov
xor
adc
xchg
xor
and
mov
cmp
and
cwtl
icebp
ljmp
repz
pop
jmp
in
sbb
cmp
ljmp
hlt
cmp
shlb
popf
xchg
push
adc
inc
shrl
lods
pushf
lock
fnstenv
out
sarl
push
cmpsl
out
ljmp
pop
repz
cmp
mov
popf
call
lea
push
insb
sub
xor
test
dec
xchg
sub
mov
imul
out
mov
arpl
das
ds
mov
cmp
dec
loopne
test
outsb
fstp
sub
pop
jne
ljmp
call
sub
lcall
imul
shlb
mov
mov
sahf
mul
sub
aas
sub
jb
ret
icebp
xchg
xchg
pop
mov
push
repz
pop
cmpsb
lahf
imulb
ja
and
push
ret
xchg
sub
push
aas
and
out
and
adc
add
gs
xchg
test
das
aad
pop
pop
jmp
mov
xchg
sti
push
out
out
xor
aad
fisttps
lcall
sbb
push
jmp
aad
mov
inc
mov
in
mov
fnsave
stos
lahf
lret
cmpsb
faddl
and
push
in
mov
out
cltd
mov
sbb
test
cld
add
mov
nop
mov
mov
xor
jnp
ljmp
call
lahf
in
shlb
loope
inc
and
jnp
lds
inc
push
push
cmpsl
mov
mov
and
jns
cltd
jge
push
and
sbb
xbegin
mov
sub
fisubs
xchg
mov
xchg
movsl
inc
in
and
das
lock
fs
mulb
sbb
mov
into
aad
xchg
fldcw
mov
jnp
add
cmpb
inc
aam
and
repnz
pop
jg
xchg
mov
lea
dec
daa
lcall
adc
or
out
mov
sbb
dec
xchg
pop
out
xor
fldt
or
mov
sub
add
mov
bound
fdivrs
outsl
mov
pop
es
inc
pop
clc
outsb
pop
popa
inc
out
sub
inc
outsb
sub
mov
ljmp
mov
mov
stos
fdivs
fldcw
pop
pop
lods
fiaddl
mov
cmc
dec
add
movsl
mov
inc
pop
stc
mov
dec
jmp
cwtl
outsl
lods
sbb
dec
mov
add
inc
fsubr
je
sub
dec
sarl
xchg
xor
aaa
in
ja
cmp
cmp
push
and
int
inc
fists
push
imul
int3
cmp
push
and
or
dec
or
push
loop
or
add
pop
pop
jl
mov
push
inc
sti
inc
sub
lock
and
jmp
gs
mov
movsl
inc
sub
sbb
and
cmp
mov
mov
and
sub
inc
in
jmp
pop
cmp
xor
test
mov
es
movsl
push
fldenv
pop
lea
lret
mov
cmp
push
push
pop
ds
movsl
push
das
loop
mov
fmull
push
clc
jnp
loope
jb
mov
out
in
dec
jnp
in
push
ss
mov
cmp
sbbb
loop
mov
push
sar
jge
std
imul
cmp
insl
fidivl
jecxz
dec
cld
xor
adc
sub
push
pop
jo
add
cmp
push
movsl
dec
loopne
es
mov
cmpb
mov
pop
pop
shl
addr16
dec
outsl
and
and
cs
xchg
sub
mov
add
lret
shrb
jge
insl
test
pop
inc
or
loopne
es
push
rol
jle
lock
mov
jo
leave
out
mov
fiadds
mov
fnstcw
out
cmp
xlat
pop
movb
xchg
andl
inc
repz
mov
dec
add
sub
aas
test
mov
in
and
adc
cmp
lahf
xorb
addl
in
mov
xchg
mov
lret
in
xchg
cmc
push
loope
cli
sahf
repz
xorl
add
aam
mov
mov
push
cltd
mov
fnsave
xor
leave
adcb
fnstenv
ljmp
cs
mov
aam
bound
cmp
fldenv
sub
sub
ss
enter
mov
inc
pop
mov
dec
daa
stos
lds
push
mov
push
in
adc
push
insl
out
les
in
fucomi
mov
scas
dec
adc
mov
mov
pusha
movsb
cmp
fsts
movsl
dec
xlat
test
jg
mov
mov
xchg
sub
bound
ljmp
addl
jg
inc
mov
pushw
loope
cmc
xchg
outsb
push
and
xchg
test
xchg
sbb
imulb
iret
jbe
mov
imul
inc
scas
ljmp
lcall
mov
add
add
rolb
or
push
add
in
push
cld
xchg
inc
jae
cmp
scas
lock
ljmp
into
in
or
scas
mov
push
xchg
in
push
sub
mov
fcmovne
adc
and
ret
xor
stc
data16
adc
sub
pop
mov
and
pop
aaa
push
fsts
pop
add
cmp
mov
repz
scas
jo
jle
adc
and
adc
dec
in
pop
mov
cmp
lods
mov
adc
mov
add
sbb
cmp
push
dec
addl
inc
mov
dec
pop
leave
es
xor
fs
fimull
xchg
pop
cld
addl
insb
dec
pop
or
pop
mov
push
or
dec
push
jne
dec
cwtl
add
stos
repnz
or
mov
and
test
cli
mov
das
or
fmuls
mov
clc
lods
push
xchg
and
inc
out
mov
cwtl
jmp
push
dec
fcomi
fs
inc
and
adc
testl
cli
in
mov
add
sub
pushf
and
fiadds
mov
inc
mov
or
jb
mov
es
sub
push
cmp
push
movsb
dec
test
xchg
and
cmp
fwait
xchg
xchg
ja
cmp
loopne
and
mov
sub
repz
fistpl
push
dec
xchg
pop
clc
xchg
sub
adc
in
out
inc
xor
jmp
jmp
pop
mov
jg
fbstp
adc
addr16
or
cs
fidivl
jecxz
test
mov
xchg
push
inc
push
lods
mov
shll
pop
mov
loopne
dec
xchg
sub
push
dec
insl
mov
loopne
push
and
cmpsl
dec
xor
push
jp
xchg
push
pop
pop
inc
sub
push
cmp
lret
push
aad
jb
ficomps
mov
pop
loopne
ljmp
push
mov
adc
inc
orl
pushf
push
rep
pop
movsl
or
out
mov
out
pop
andb
xchg
and
push
mov
inc
jmp
ss
mov
add
jle
push
adc
xor
mov
fisubrl
leave
push
out
or
adc
enter
push
fsubrl
xor
dec
adcb
pop
mov
mov
jb
aam
push
inc
shl
sub
push
in
or
adc
lahf
addr16
mov
pop
pop
pushf
jno
push
test
jecxz
pop
adcl
sub
in
xchg
bound
in
bound
mov
pop
out
pop
orb
popf
in
cmp
mov
dec
clc
sub
and
es
out
mov
data16
mov
xchg
mov
adc
mov
fidivs
dec
dec
fdivl
lods
inc
fwait
call
inc
imulb
or
adc
stos
push
lds
mov
test
lods
sbb
ds
mov
das
xchg
int3
pop
sub
adc
jecxz
and
lods
int3
adc
inc
and
aaa
mov
outsb
xor
pusha
push
adc
mov
addr16
inc
sbb
mov
jl
leave
inc
lahf
ds
or
jl
xchg
cs
mov
push
adc
iret
jns
dec
xchg
and
sarb
inc
adcb
jns
int3
scas
sbb
ficoms
xor
mov
cs
fwait
movsl
cmp
add
pop
adc
push
int3
pop
adc
pop
mov
faddl
pop
les
scas
pop
xchg
and
imul
add
adc
out
adc
push
ljmp
pop
mov
int3
pop
adc
pop
fdivl
adc
arpl
adc
xchg
xchg
mov
out
push
mov
add
mov
inc
cltd
and
add
pop
adc
sub
fldt
hlt
xchg
imul
xor
lret
push
popa
mov
sti
mov
and
dec
mov
sar
fisubrs
pop
imul
call
or
lds
arpl
adc
jmp
inc
push
pop
pop
xor
pop
adc
aas
mov
fmuls
mov
jge
xchg
dec
lea
pop
outsb
filds
mov
je
and
mov
push
int3
pop
adc
inc
daa
outsl
cmc
xchg
cmp
imul
cli
mov
jecxz
lods
leave
pop
adc
and
xor
add
adc
xor
sub
mov
or
or
mov
iret
stc
mov
cmpsb
and
lret
leave
pop
adc
adc
fcomps
jne
inc
mov
push
leave
pop
adc
shl
leave
adc
clc
or
mov
xchg
push
popf
roll
add
push
movsb
lea
or
sub
std
rcrl
jb
push
int3
pop
adc
mov
daa
mov
fidivrl
arpl
sub
cmp
dec
leave
cld
dec
mov
es
xchg
sub
xor
xor
fidivl
add
cmp
ss
jmp
leave
pop
adc
leave
pop
adc
leave
pop
adc
or
push
adc
xchg
sub
loop
mov
mov
sub
nop
in
pop
adc
push
idivl
loopne
cmp
int
sub
pop
iret
lea
xor
xchg
and
loopne
adc
adc
mov
lods
sarl
jl
dec
in
rclb
or
mov
mov
repz
outsb
push
add
test
hlt
lgdtl
sbb
pop
cmp
mov
xchg
sub
dec
gs
lea
ficoms
dec
xchg
pop
sbb
dec
xchg
sub
xchg
and
fsubs
pop
clc
or
cld
pusha
push
adc
popf
mov
int3
pop
adc
xor
cmp
xchg
and
mov
push
repz
mov
adc
adc
ret
cs
push
pop
mov
insb
jmp
in
pop
jge
adc
sub
mov
xchg
add
test
push
mov
mov
push
lock
call
nop
fldcw
inc
aad
movsb
movsb
mov
push
int3
pop
adc
int3
aam
movsb
sub
mov
ret
insb
mov
stos
je
dec
jo
leave
pop
adc
adc
popa
cld
pusha
push
adc
mov
mov
mov
adc
adc
fwait
mov
sbb
dec
imul
sub
or
inc
sbb
aaa
inc
lods
inc
test
sub
cli
sbb
pop
add
pop
adc
jg,pn
leave
pop
adc
dec
or
push
adc
or
call
pop
push
mov
std
nop
in
pop
adc
dec
adc
jno
adcl
push
mov
adc
scas
or
mov
sahf
adcb
adc
out
stos
jae
stos
or
inc
rorl
imul
test
dec
out
stos
lahf
sub
push
adc
cmp
or
mov
ljmp
adc
or
outsl
fwait
stc
test
jecxz
mov
pop
insb
mov
loop
mov
and
adc
sbbl
pop
xor
icebp
sarb
push
xlat
rcll
sub
clc
in
fwait
in
in
push
and
add
sub
or
ds
stc
dec
ss
dec
test
push
int3
pop
adc
xor
adc
jge
cli
push
int3
pop
adc
in
push
int3
pop
adc
shlb
push
mov
mov
adc
cmp
es
xor
decb
push
mov
add
insb
popl
lret
sbb
loop
sub
insl
ds
xchg
dec
pop
decb
pop
fcoml
mov
sub
mov
or
out
in
inc
mov
adc
push
jecxz
and
lahf
jecxz
add
add
pop
jle
dec
ja
hlt
xor
push
mov
mov
mov
adc
cmpl
xor
cmp
pop
adc
movsl
dec
mov
jnp
arpl
inc
nop
push
insb
addr16
inc
mov
adc
cmpsb
adc
lret
fcmovne
fadds
adc
cmpsl
push
fldcw
lea
mov
pop
mov
decl
dec
cld
lret
mov
fstpt
lods
sarl
and
or
test
movsl
and
lods
pop
cmp
mov
dec
sbb
adc
xchg
dec
sbb
lods
sarl
push
xchg
pop
mov
out
sbb
or
out
in
inc
adc
arpl
or
bound
push
lods
popf
mov
int3
pop
adc
fidivl
mov
pop
adc
push
ds
enter
out
mov
icebp
lods
cmpsl
movsb
mov
jo
arpl
adc
pop
fildll
and
ds
and
xchg
or
xchg
iret
xor
adc
dec
jbe
arpl
adc
adc
xor
das
push
movsb
dec
js
arpl
adc
adc
mov
fisubrl
push
int3
pop
adc
bound
dec
jb
pop
ficompl
pop
int3
fsubrl
cmp
push
adc
sbb
pushf
cmp
fisttpl
mov
sbb
lods
or
cs
lds
test
mov
fisubl
sbb
mov
cmp
xchg
dec
xchg
ja,pt
dec
xchg
pop
jb
arpl
mov
ret
mov
mov
cli
dec
pop
stos
out
lods
pop
cmp
xor
fstpt
movsl
pop
jmp
pop
into
cld
mov
mov
sub
add
sub
cmpsl
dec
jnp
arpl
adc
fldcw
push
int3
pop
adc
gs
out
dec
jne
jo
pop
mov
mov
lods
fcoms
pop
adc
shrl
mov
sarl
aad
mov
inc
xlat
pop
inc
popf
sub
test
xor
adc
xchg
cmpsl
adc
adc
mov
test
lock
or
mov
adc
push
xchg
out
inc
mov
fldlg2
add
xchg
jo
sbb
add
add
mov
pop
adc
or
arpl
popa
ds
pop
mov
loopne
pop
adc
daa
ret
jo
sbb
fsubrl
xchg
lahf
and
adc
out
mov
sbb
cmc
popf
repnz
daa
insb
lods
xchg
mov
mov
adc
push
int
ds
aam
push
xor
pop
adc
xor
fidivs
lcall
push
int3
pop
adc
pop
push
dec
and
ficoms
cmc
push
int3
pop
adc
pop
mov
inc
test
jb
or
dec
mov
jne
inc
cmp
and
mov
les
enter
lock
lret
nop
fs
and
or
les
lods
sub
xor
mov
mov
iret
adc
sub
les
pop
aam
fdivs
push
and
jecxz
push
int3
pop
adc
popa
mov
call
sub
push
int3
pop
adc
add
xlat
push
int3
pop
adc
test
sti
push
pop
jne
stos
psrlw
sbbl
mov
adc
test
adc
jg
nop
nop
pop
cwtl
lcall
xchg
ja
ljmp
pop
jo
shll
mov
test
flds
mov
push
mov
xor
mov
jnp
dec
mov
outsb
mov
sbb
insb
cld
adc
insb
ret
les
mov
mov
xchg
in
fistps
pop
sub
pop
cmpl
cs
cmp
push
int
int
inc
inc
idivl
sbb
inc
pushl
push
xor
out
push
insl
and
pop
adc
decb
jo
mov
and
ret
loopne
pop
adc
fisubs
nop
adc
cmpsb
push
mov
jno
loopne
pop
adc
fs
js
sahf
dec
push
sbb
sub
mov
mov
inc
lods
pop
mov
pop
arpl
out
repnz
inc
xchg
sub
sarl
inc
jle
leave
out
cmpsl
mov
sub
pop
add
adc
adc
push
lret
enter
push
jb
push
int3
pop
adc
mov
push
das
mov
cmp
or
mov
adc
xchg
pop
out
out
fsubp
aad
std
pop
call
insl
xor
shrb
mov
sub
sub
add
lea
pop
mov
or
pop
out
sub
sbb
adc
inc
inc
pop
arpl
jb
loopne
or
xchg
rorl
mov
xor
adc
adc
ret
xor
in
pop
std
mov
xchg
dec
xchg
push
xor
jb
sub
cwtl
adc
push
adc
out
pop
push
movsl
dec
add
sbb
dec
shlb
cmpb
xchg
lea
ret
fcoms
lea
out
push
xor
out
cmpsl
push
fistpll
sti
pop
imul
sahf
push
in
mov
sub
and
cmp
pushf
imul
out
rol
push
adc
lret
ficoml
push
adc
test
lods
pop
mov
sbb
adc
push
and
insb
inc
pop
pushf
rcrb
push
sarb
addb
xor
inc
jmp
xlat
gs
mov
lret
shl
push
mov
lcall
lea
push
pop
cmpsb
jmp
stos
sbb
push
sbb
or
add
push
arpl
nop
cmp
int3
sub
add
arpl
adc
aaa
inc
sub
push
sub
jbe
lret
pop
movsb
icebp
fsubl
shrl
sbb
mov
fsubs
cmpsl
mov
xlat
into
xchg
test
pop
mov
jl
pop
filds
and
fdivrl
fisttpll
addb
pop
cld
out
adcb
jl
push
adc
das
int
fldenv
inc
popf
jb
pop
xchg
sub
loop
xchg
add
jmp
packuswb
cwtl
fs
arpl
jle
pop
outsl
mov
popf
les
mov
addr16
xchg
addr16
mov
call
into
je
pop
adc
pop
jmp
arpl
aaa
cmp
cltd
sub
imul
jmp
jne
fldenv
bound
xchg
push
mov
mov
push
jo
int3
push
movsb
push
int3
pop
adc
cmpsl
sti
mov
mov
sub
adc
int3
pop
adc
sub
xor
out
pop
adc
aas
shlb
adc
push
or
notb
inc
mov
clc
push
shll
pop
jecxz
popa
and
adc
xor
mov
adc
bound
dec
or
push
add
inc
mov
push
les
xchg
shl
movsl
pusha
in
push
xor
es
add
jmp
or
sbb
push
cmp
push
adc
int3
aad
cmp
lea
mov
sub
push
mov
xchg
xor
add
xchg
fs
jmp
rolb
sub
bound
fwait
mov
push
adc
xor
lods
out
pop
shlb
outsl
sub
fdivs
pop
cmp
jmp
lods
addr16
lods
push
xor
mov
out
insb
fidivl
mov
scas
sbb
insl
and
adc
add
adc
mov
fstpt
daa
add
cwtl
dec
pop
rol
outsb
sub
bound
pop
in
arpl
rorl
cld
bound
adc
dec
daa
pop
cmp
mov
xchg
jnp
push
enter
dec
dec
xchg
in
push
mov
pop
ret
pop
lcall
lea
popa
stos
lahf
dec
imul
push
insl
add
sub
jmp
loop
mov
in
sbb
pop
in
push
ss
ficoml
ret
and
mov
stc
jge
sti
sub
out
push
inc
mov
fcmovnb
cmp
inc
push
lods
sub
pop
xor
xchg
xlat
lods
pop
rcll
pop
mov
call
pop
mov
lea
imul
fildll
lods
shlb
lods
pop
out
jb
adc
movsl
mov
inc
lods
pop
mov
mov
in
scas
mov
mov
leave
mov
sbb
insl
ljmp
or
sub
mov
pop
pushf
cmpsb
dec
in
mov
pop
into
in
pop
cmp
out
daa
and
fdivs
push
adc
arpl
adc
push
shlb
adc
xchg
push
pop
pop
add
addb
cmp
mov
leave
push
popa
aad
xor
pop
es
out
adc
push
push
adc
popf
push
jns
testb
and
in
inc
stos
sub
incl
dec
xor
or
lea
add
or
or
sub
gs
cld
or
cld
pusha
push
adc
mov
and
int3
cmc
out
inc
inc
pop
lcall
mov
mov
arpl
adc
fbld
iret
lahf
cmp
stos
mov
push
cmpsb
push
leave
jno
outsb
xchg
lods
aaa
lea
pop
push
das
or
xor
add
mov
mov
push
lcall
and
outsb
mov
scas
xchg
mov
cmp
es
stos
addr16
inc
jne
and
sbb
pop
inc
les
fildll
les
sub
das
fdivl
and
cmpsb
mov
orb
adc
adc
push
notb
jb
pop
sbb
dec
sti
in
xchg
jge
mov
popa
xor
mov
jmp
aaa
sbbl
scas
pop
inc
icebp
sub
sub
loop
mov
pop
fstpt
out
subl
cltd
and
aad
and
cltd
test
inc
cs
scas
jo
pop
add
mov
push
ss
mov
dec
test
push
fdivr
movsb
adc
sar
pop
adc
adc
pop
sub
mov
pop
addb
pop
and
out
sbb
es
aaa
mov
aaa
mov
decb
dec
addb
push
test
lahf
mov
xorl
cmp
in
pop
outsb
ss
in
and
ss
xchg
sub
inc
inc
xchg
push
das
shrl
push
sub
stc
test
out
jl
add
or
cld
pusha
push
adc
cmpsl
cmp
and
repnz
pop
inc
cmp
movsb
mov
sbb
clc
clc
pop
adc
out
stos
fisttps
mov
pop
addb
and
insl
push
nop
xchg
cltd
cmp
repnz
lret
lds
ds
push
jge
jnp
mov
cmpsb
movsb
leave
outsb
daa
inc
pusha
dec
enter
shl
xchg
mov
xchg
insl
and
cld
or
cld
pusha
push
adc
arpl
outsl
inc
sub
cmp
sub
jo
daa
mov
mov
or
mov
adc
ds
pop
mov
and
cld
or
cld
pusha
push
adc
or
push
inc
loopne
movsl
fbstp
shl
loopne
adc
xchg
mov
inc
pop
rcr
and
push
adc
pop
stos
or
xchg
dec
ss
stos
mov
adc
test
push
xor
test
xchg
and
sub
mov
pop
mov
mov
outsl
out
jmp
shrb
push
shll
push
lds
decl
out
mov
ss
lods
mov
mov
sub
cmp
repnz
ret
nop
pusha
push
adc
sbb
push
mov
xor
je,pt
mov
pop
lea
cld
shrb
gs
iret
cmp
adc
loop
fldenv
adc
aaa
xchg
push
cmpsl
dec
inc
repz
sub
xchg
addr16
movsl
mov
addb
fsubrs
push
adc
int3
shlb
fidivl
pop
test
jmp
sbb
xor
scas
fcomps
pusha
sarb
popf
push
adc
mov
shrl
aaa
out
mov
fcomps
xor
pop
ljmp
mov
cmp
sub
mov
hlt
xor
rcl
inc
push
fnstsw
add
incl
test
lds
jne
mov
mov
stc
mov
test
imul
ficoml
push
repz
sbb
add
js
shll
std
jecxz
cwtl
loopne
nop
popa
aam
jmp
push
leave
adc
and
fwait
cltd
lods
add
dec
fsubrs
sub
popa
iret
dec
fs
iret
out
mov
push
adc
int3
jg
push
mov
pop
adc
je
xchg
test
jmp
rcrb
stos
pop
mov
jae
add
in
mov
enter
inc
mov
scas
push
aad
pop
and
in
pop
adc
stos
int3
les
addb
mov
fisttpl
jae
stos
bound
inc
scas
lock
adc
mov
test
aaa
in
or
insb
sbb
push
add
lcall
in
hlt
call
jmp
push
sub
iret
sahf
push
mov
pop
xor
xchg
pushf
adc
jecxz
mov
push
adc
sub
mov
mov
add
pop
adc
sub
xor
std
sahf
cs
mov
hlt
das
dec
cbtw
add
mov
fwait
xchg
pop
in
xorl
cmp
sbb
rorb
cltd
and
and
lahf
pop
sbb
cmp
fiaddl
pushf
addb
outsl
cwtl
addb
inc
test
ret
out
mov
pusha
in
adc
call
ds
lea
cld
aaa
in
mov
xchg
sbbl
pop
mov
aas
inc
mov
and
imul
mov
aad
sti
sbb
scas
addr16
adc
xchg
clc
sub
aas
and
repz
movsl
stos
push
rclb
jmp
adc
fisubs
in
push
jb
out
pop
adc
cltd
ret
fs
mov
fisttpll
mov
adc
rcll
push
mov
jb
xlat
daa
and
movsl
dec
call
pop
fidivrl
and
pop
test
dec
xchg
push
loope
dec
out
dec
int
leave
xchg
xor
sub
clc
lahf
mov
push
mov
fildl
repz
js
lret
lods
test
mov
mov
xor
push
loop
push
adc
push
test
lods
fstps
lea
xchg
sarb
or
movsb
dec
in
pop
in
inc
test
xchg
sub
xor
or
sub
sarb
xchg
or
dec
xchg
sub
mov
mov
or
cmp
dec
or
in
dec
or
addb
cmp
pop
adc
lods
mov
test
adc
ficomps
cs
les
repz
mov
popa
rclb
aad
dec
xchg
mov
cwtl
dec
xchg
mov
dec
pop
mov
add
adc
es
pop
xchg
repnz
push
jle
sbb
xchg
sub
jb
sub
adc
or
adc
jmp
push
stos
lock
adc
lret
sub
cmp
addr16
enter
xchg
sub
cmp
jns
arpl
adc
icebp
jae
xchg
sub
fcoml
sahf
cmp
xor
cmpsb
dec
loope
ret
xchg
popa
dec
or
dec
insl
cmp
dec
pop
js
xchg
and
loope
sub
xchg
pop
jb
dec
xchg
and
cs
mov
lcall
inc
fwait
loop
and
push
cmp
sub
test
cmpsl
test
adc
adc
mov
lods
and
adc
in
push
lea
and
cmp
decl
mov
dec
subb
and
mov
in
and
mov
push
ja
sbb
sbb
jb
and
gs
sahf
sub
push
sub
into
push
int3
pop
adc
movsl
enter
adc
xor
mov
clc
or
push
mov
aad
cmp
outsl
fdivs
push
adc
push
ds
dec
imul
test
push
sbb
push
mov
pop
adc
xchg
cs
in
lcall
lods
cmp
xchg
stos
enter
aam
int
xlat
or
inc
fwait
lods
fsts
mov
pop
jb
stos
test
icebp
leave
add
dec
jg
test
popa
clc
or
cld
pusha
push
adc
push
int3
pop
adc
push
nop
popf
jo
mov
mov
pushf
mov
nop
enter
lret
add
adc
scas
push
cld
or
mov
adc
and
nop
push
sub
psllq
les
leave
pop
jecxz
sahf
sub
mov
adc
loop
mov
imul
cmp
out
ds
mov
ljmp
or
adc
sub
into
jl
mov
mov
pusha
xor
movsb
pop
loopne
jecxz
icebp
push
push
es
pop
adc
inc
ds
enter
lahf
std
mov
in
popf
js
add
xchg
lock
icebp
mov
dec
push
jne
outsb
pop
int
dec
cld
in
xchg
xchg
sub
push
imul
stos
adc
pop
mov
jmp
and
stc
and
cmpb
in
mov
dec
out
dec
lahf
ss
std
rcl
cmp
roll
mov
in
ret
inc
mov
pop
xor
out
sahf
test
jb
inc
and
xchg
cmp
insl
fldt
or
xor
push
sub
leave
adc
mov
movsl
push
pop
into
shlb
into
insb
inc
pop
sbb
insl
loop
fs
push
and
dec
xchg
and
int
dec
xchg
mov
sub
lea
in
push
out
test
leave
movsb
dec
xchg
push
jecxz
xor
push
and
fs
dec
rolb
andl
and
push
test
mov
xor
sub
loope
mov
dec
push
mov
xchg
add
addb
loopne
sub
addb
cmp
jle
in
push
xchg
and
adc
es
inc
mov
xchg
and
mov
mov
adc
out
jae
leave
loopne
or
or
or
cmp
push
cmp
and
nop
pop
cwtl
or
mov
pop
dec
data16
outsb
dec
xchg
pop
jo
xor
lret
je
mov
repz
or
and
adc
callw
adc
dec
add
and
sub
cmp
push
in
in
add
cmp
std
dec
mov
add
in
or
adc
cmp
insl
ds
dec
xchg
test
pop
cmp
xchg
dec
xchg
and
movsb
decl
pop
and
dec
popf
cmp
push
aad
push
shrb
into
sub
cmp
dec
dec
xchg
and
xchg
sub
jno
cld
pusha
push
adc
push
push
cmpsl
dec
xchg
out
insl
lahf
mov
int3
pop
adc
sub
out
leave
pusha
bound
cmpsb
xchg
in
or
cld
pusha
push
adc
lcall
pop
mulb
jmp
pop
push
into
bound
add
rcrl
pushf
sub
push
inc
popf
sub
or
mov
adc
push
stc
sbb
addb
lret
dec
or
js
mov
jo
sahf
xor
les
add
faddl
mov
in
mov
add
loop
mov
xor
test
insb
iret
popf
push
sub
adc
cs
mov
or
call
xchg
mov
and
jb
lock
adc
adc
dec
jne
or
ficomps
stos
xchg
mov
int3
pop
adc
in
mov
sub
lret
clc
sub
sbb
push
mov
adc
add
adc
daa
call
mov
mov
inc
add
or
cmp
push
test
push
loopne
or
inc
inc
add
adc
mov
out
out
push
ljmp
push
xchg
js
or
adc
mov
sbb
cld
scas
jnp
mov
iret
shr
test
mov
in
push
sub
sub
daa
push
cmp
xor
push
scas
gs
test
jb
int
aam
aas
mov
fdivrl
cmp
imul
and
adcl
mov
push
sahf
cmpsb
cwtl
mov
les
add
movsb
adc
aad
xchg
jmp
rorl
pusha
or
add
push
addb
cli
xlat
fisttpll
clc
push
icebp
add
clc
sbb
fisttps
pop
mov
cmpsb
stos
cmp
in
les
push
icebp
mov
jecxz
std
xchg
dec
push
in
ljmp
adc
xchg
adc
das
adc
add
and
push
out
loopne
or
cld
mov
pusha
push
adc
fsubr
or
adc
sbb
les
pop
ss
mov
dec
mov
ds
mov
or
sbb
push
inc
jns
mov
setb
ficoml
mov
push
in
or
adc
data16
or
imul
in
leave
adc
movsl
and
pusha
push
adc
ja
mov
dec
jle
pusha
push
adc
adc
add
scas
call
pop
adc
lds
dec
add
popf
inc
push
push
int3
pop
adc
pop
mov
sbb
push
int3
pop
adc
pop
mov
mov
mov
sub
push
xchg
sub
push
inc
or
insl
jno,pt
mov
cltd
roll
scas
push
icebp
dec
rclb
stc
jg
bound
out
cmpsl
jmp
insl
fprem
addb
leave
sbb
mov
dec
xor
mov
mov
pop
repnz
popf
xor
xchg
scas
xchg
ja
insl
shlb
dec
xchg
and
imul
mov
add
clc
addb
xchg
scas
xchg
jnp
fnstcw
xchg
mov
and
xchg
pop
jb
sbb
aad
lods
pop
mov
lods
lea
leave
pop
adc
call
out
clc
addb
jmp
sbb
pop
adc
imul
pop
adc
scas
pop
mov
shrb
cmpsl
dec
pushf
scas
or
pop
adc
cs
jnp
fnstcw
test
test
mov
pop
adc
stc
pop
and
xchg
mov
sub
jle
test
dec
xchg
and
sub
adc
je
loop
shll
fstpl
daa
rcrb
push
je
shlb
adc
scas
das
pop
cmpsb
lds
cmp
and
sub
ljmp
mov
push
xor
in
fsubrl
adc
sub
mov
shll
and
push
push
mov
rolb
jmp
lds
jne
sbbb
and
int3
xchg
sub
fsubrl
test
sbb
inc
xchg
add
roll
clc
test
sbb
adc
mov
stc
std
mov
sbb
stos
sbb
mov
cwtl
hlt
fbld
pop
fs
stos
push
in
inc
pop
mov
push
aam
push
adc
iret
cmc
or
int3
push
jae
movsb
rclb
push
dec
sbb
mov
push
mov
jle
add
stos
pop
push
push
cltd
xchg
sub
mov
jne
push
dec
sbb
mov
xor
sbb
adc
clc
jp
mov
nop
mov
sbb
into
push
pop
ret
imul
aaa
es
lret
ja
lds
dec
push
push
out
xlat
dec
aas
movsl
fidivl
cli
lea
lcall
in
mov
fcomps
push
arpl
jge
or
out
mov
sbb
push
push
mov
xlat
push
cmp
cmp
in
jl
movb
cltd
mov
movsl
addr16
mov
mov
pop
icebp
outsb
pop
pop
mov
inc
ja
outsl
pusha
and
push
jecxz
inc
daa
xchg
sti
std
xor
shrb
push
inc
add
adc
test
nop
rcl
scas
mov
shr
mov
mov
mov
call
hlt
fldl
add
and
adc
loop
ficoml
mov
out
fadd
arpl
push
cmp
sbb
in
mov
dec
orb
add
jb
cmp
inc
push
push
and
sub
arpl
jmp
pop
outsl
push
mov
popa
xchg
sbb
fisttps
pop
dec
mov
pop
xchg
or
repnz
in
int
push
cmp
sbb
and
adc
xchg
test
cmp
cmp
enter
rolb
movsl
in
cmpsl
incb
mov
int
outsl
shlb
jmp
sub
and
adc
mov
xchg
sarb
xchg
push
loop
sub
ds
sub
or
shll
xor
push
jb
jnp
xor
rclb
jge
repz
popa
call
push
adc
cli
push
fnstcw
push
add
pop
mov
pop
sbb
dec
xchg
pusha
icebp
xor
xchg
dec
push
dec
enter
xor
inc
sub
jno
mov
and
push
and
add
adc
mov
jge
lea
adc
dec
push
call
mov
fidivrl
and
cwtl
lea
add
out
lods
call
outsl
movsb
stos
shlb
fdivrs
sub
ss
ficomps
arpl
sarl
sbb
nop
xchg
sub
movsb
ret
mov
jle
scas
jge
mov
dec
subps
hlt
test
adc
jnp
aam
movsb
dec
out
and
cli
fsubrl
cmp
push
inc
mov
jecxz
sbb
ds
shl
stos
cmp
xor
xchg
and
pop
fsubp
loopne
inc
xchg
pushf
cmp
mov
xor
adc
mov
pusha
push
adc
es
inc
fwait
lods
popf
cmp
pop
mul
xchg
inc
push
pop
mov
daa
pop
pop
test
xor
loope
and
adc
in
fidivl
mov
clc
mov
push
pop
daa
dec
in
mov
and
mov
hlt
adcb
add
pop
pop
adc
xchg
sbb
das
insb
or
push
adc
addr16
and
adc
mov
xor
push
negl
mov
add
xchg
xchg
out
dec
cmp
push
adc
inc
ss
iret
mov
aas
add
dec
in
sub
dec
cmp
push
pop
pop
adc
mov
push
or
push
adc
addr16
ss
xchg
addr16
fistpll
popf
ljmp
aad
mov
mov
pop
lods
inc
push
mov
flds
mov
lret
ret
pop
sub
pop
ret
xchg
dec
dec
sbb
dec
shrl
mov
push
mov
les
add
adc
dec
shrb
jo
ds
inc
lock
imul
cmpsl
jo
sbb
and
jbe
add
cmp
cmp
push
mov
xor
lcall
fdivr
xor
add
mov
jg
or
or
cmc
in
add
fimuls
fcomi
popf
mov
push
mov
addr16
std
and
push
ret
pop
aam
pop
mov
dec
insb
mov
mov
orb
xorb
lea
and
stos
ss
lahf
sub
test
pop
imul
shl
sub
push
adc
dec
jne
sub
pop
lods
jbe
mov
jns
fstl
test
loope
xchg
push
pusha
lds
push
adc
sub
inc
daa
inc
movsl
in
sbb
outsb
pop
jb
add
mov
and
adc
subl
xor
mov
into
dec
filds
in
and
stos
mov
and
stc
lods
inc
jmp
sbb
adc
test
mov
add
sub
and
jl
pop
cmp
sub
dec
popf
mov
fsts
xor
test
pop
add
in
rcll
pop
sub
pop
xor
sahf
addl
clc
fwait
jmp
pop
push
sti
cmp
sbb
xorl
stos
or
push
push
mov
sub
and
ror
mov
xchg
in
pop
ljmp
mov
cmp
dec
add
decb
cmp
dec
imul
imul
inc
and
pop
and
aad
pushf
cmp
jae
fistps
int3
push
movsl
ds
loopne
ljmp
mov
icebp
jb
pop
xchg
mov
out
adc
inc
push
lcall
xor
movsb
mov
inc
xchg
in
out
cmpsl
add
call
call
dec
outsb
mov
xorl
inc
outsb
push
lock
xchg
dec
push
out
into
xchg
and
xor
in
pop
sub
pushf
cmp
xchg
jnp
xor
dec
cmp
sahf
dec
xor
inc
and
aad
pushf
cmp
sub
dec
cmp
lds
cmp
inc
pop
rorb
jmp
mov
jb
push
or
push
loopne
pop
add
xchg
mov
insb
push
clc
arpl
dec
inc
dec
pushf
dec
shr
sub
ljmp
lods
sar
popf
sbbb
mov
adc
adc
and
adc
outsl
xchg
decl
rorl
push
movsb
insb
fimull
fwait
cmp
add
adc
jmp
push
pop
cmp
pop
push
lahf
mov
int
pop
out
pop
das
sbbb
pusha
push
push
cmpl
push
cs
sbb
cmp
std
and
cmpsb
in
xor
xor
adc
fxtract
mov
lcall
insb
sub
push
dec
add
imul
xchg
in
into
push
dec
movsb
jb
test
lds
adc
push
out
add
xor
insl
adc
sbb
and
sbb
sbbb
mov
and
adc
xchg
and
adc
or
cmc
inc
fisttpll
push
sub
cmp
inc
nop
push
pop
push
aad
mov
xchg
fdivs
lods
or
mov
pop
cld
out
into
xchg
and
out
mov
sub
xor
and
adc
xchg
nop
xlat
dec
inc
shlb
mov
xchg
test
stos
int
jb
call
shrb
push
inc
divb
xchg
pop
pop
cmc
stos
cmp
mov
test
ja
shll
xchg
dec
mov
aam
push
insb
lcall
jg
bnd
out
xchg
lods
sbb
sbb
sbb
jle
pop
enter
sbb
and
roll
add
mov
inc
adc
jg
xor
and
shll
push
adc
or
sahf
test
lds
jmp
sarl
jae
add
push
add
inc
sarb
push
xor
dec
sub
clc
xchg
or
sub
data16
movsb
outsb
inc
addr16
cmc
push
cltd
jb
loopne
outsb
outsl
gs
loop
rorl
pop
fimuls
flds
mov
loope
jne
shr
mov
ret
and
call
shll
sub
cmp
and
sbb
sbb
sbb
sub
int3
sbb
jbe
cmc
push
push
xchg
cmp
loope
fucomip
adc
mov
jmp
roll
hlt
dec
fwait
shrl
ficoms
das
cmpsb
xchg
pop
mov
clc
xchg
cltd
cli
jmp
push
xchg
out
jp
outsb
jle
pop
lea
imulb
movsl
pop
and
stc
rorl
inc
shrb
xor
movsb
leave
xchg
es
add
aad
into
ljmp
cmp
mov
cwtl
mov
cmp
jecxz
insl
push
rep
pop
in
pop
xor
imul
pop
movsb
dec
cmp
rorl
xor
sub
fsubs
ss
mov
sub
dec
dec
sbb
dec
sbb
pop
and
xchg
push
push
push
mull
scas
dec
xchg
mov
sub
push
pop
mov
dec
xchg
pop
jb
adc
push
adc
out
ss
out
pop
fcoms
in
inc
in
pop
in
pop
push
mov
mov
jo
mov
fiadds
dec
xchg
sub
insl
aas
sbb
pop
mov
test
mov
shll
idivl
push
movsl
dec
loopne
xchg
cs
mov
test
imul
adc
xchg
cmp
mov
lea
imul
cmpsb
xchg
scas
mov
xchg
push
cmpsl
dec
call
push
pop
jno
aad
push
call
cmp
and
xchg
lods
mov
pop
jae
mov
mov
sbb
pop
fs
pop
xor
mov
cmp
leave
test
pop
xlat
pop
jmp
and
das
cmp
pop
movsl
dec
out
mov
test
mov
mov
cmp
bound
pop
mov
scas
pop
or
pushf
icebp
push
jge
push
cmp
imul
push
xchg
test
mov
pop
pusha
andb
cltd
mov
sbb
pop
cmp
xor
fisubl
popa
adc
xor
out
add
shr
mov
stos
incl
mov
xchg
and
push
pushf
inc
dec
mov
test
add
pop
in
iret
clc
add
jbe
insl
int3
outsl
iret
pop
mov
and
cwtl
sti
adc
in
daa
syscall
and
shll
xor
mov
mov
lds
int
sub
lea
outsb
sbb
and
sbb
push
push
pop
sub
jecxz
xchg
fnstsw
aaa
shll
push
mov
xchg
mov
mov
lods
nop
mov
sbb
jge
dec
shll
into
pop
or
mov
push
lret
adc
xlat
ja
pop
sbb
out
aam
push
call
jno
xchg
adc
cmp
ds
aam
test
or
sbb
addr16
adc
fcoms
test
jbe
push
pop
push
push
hlt
call
adc
push
mov
xchg
sbbb
push
loop
mov
imul
xchg
mov
fcmovne
push
push
fmuls
mov
xchg
mov
nop
mov
mov
stc
mov
loopne
insl
lea
push
sti
test
fwait
pop
aad
stos
sub
mov
xchg
jl
lods
outsl
or
push
in
sbbb
push
add
cmp
sub
and
adc
sub
mov
cmp
adc
xor
imul
xchg
data16
xchg
imul
mov
cli
bound
iret
jne
imul
push
lahf
and
adc
pusha
enter
sbb
enter
ret
loop
orl
shrb
mov
std
lds
repnz
xlat
or
idivb
xor
and
popf
sub
sbb
repnz
insb
adc
out
push
lret
movsb
lahf
fnstsw
fwait
mov
stc
or
adc
cmp
je
cmp
pop
fimuls
and
push
imul
mov
mov
rcrb
sub
push
aad
inc
leave
mov
aad
shl
outsl
push
insl
das
mov
mov
es
xchg
sub
pop
pop
or
mov
mov
lret
movb
aas
adc
aas
xor
aas
sub
pop
mov
lods
pop
dec
push
and
ficoml
push
movsl
dec
xchg
mov
fdivs
pop
mov
daa
push
mov
jae
icebp
jb
ljmp
cwtl
lds
insl
push
push
mov
mov
cmp
mov
cltd
cmp
js
push
je
adc
ljmpw
out
scas
cmpsb
stos
sahf
dec
outsl
fidivl
dec
pop
vmovhps
js
xchg
sub
pop
dec
xchg
xlat
repz
xor
shl
xchg
scas
mov
dec
loopne
xor
loopne
dec
xor
xchg
adc
xchg
mov
mov
cmpsl
dec
loopne
xorl
or
pop
dec
push
cmp
orb
pop
inc
sbb
loop
movsb
mov
cltd
cmp
inc
adcl
loop
jne
movsb
dec
cmp
jge
ret
popa
xor
xchg
sub
jne
dec
shr
xor
pop
mov
push
outsb
dec
mov
push
pop
cmp
test
xchg
sub
mov
inc
bound
xchg
mov
cmp
xchg
lods
aam
xchg
xchg
sub
mov
dec
jno
into
cmp
cmp
insb
push
push
mov
sub
push
cmc
dec
int
sub
shll
jnp,pt
leave
popf
mov
aas
mov
push
adc
inc
popf
mov
pusha
push
out
mov
push
mov
cld
cmp
add
decl
das
mov
push
mov
cli
mov
int
data16
push
jmp
push
push
add
adc
fisttps
movsb
out
mov
fnstsw
int3
frstpm(287
push
sub
scas
sbb
pop
lods
dec
jo
shrb
jecxz
subb
xchg
stos
pop
mov
push
into
lods
mov
inc
rcrb
divl
mov
mov
cs
mov
xchg
out
dec
lds
idivb
enter
lahf
into
fistl
lods
fwait
cmc
test
scas
or
mov
mov
sbb
pop
mov
inc
mov
add
stc
ds
mov
jmp
mov
sub
nop
and
lock
dec
xor
in
xorb
push
mov
scas
pop
aad
stos
pop
mov
xchg
fistpl
test
fst
aas
pusha
pop
cld
inc
fildll
push
out
cltd
scas
test
xchg
pop
cmc
fs
mov
and
xchg
loop
aad
push
cmpsb
lcall
mov
es
and
les
xor
and
sarl
mov
call
test
stos
lds
adc
pop
push
cs
adc
mov
ja
add
sarb
mov
push
add
push
cmp
jno
jmp
shlb
cmp
xchg
cmp
or
aas
xchg
adc
xlat
test
insb
pop
lock
jg
test
adc
mov
test
xchg
jae
pop
lock
add
data16
or
pop
adc
push
mov
push
adc
in
jno
inc
push
repz
inc
jge
xlat
shlb
adc
mov
jne
adc
adc
pop
adc
loopne
popf
mov
adc
repz
push
jle
out
test
pop
sarl
bound
fmuls
fnsave
enter
push
lock
xchg
push
pop
les
es
jge
repz
mov
lahf
insl
jmp
pushf
jp
bound
and
out
lods
pop
mov
stos
inc
dec
cmp
push
repz
mov
ljmp
add
push
scas
mov
mov
mov
icebp
push
cmpsb
pop
adc
pop
loop
lods
pop
xor
fidivl
into
out
xor
dec
out
popf
stos
mov
out
les
push
loop
lahf
dec
imul
push
movsb
fcoml
sti
aad
lock
aad
xchg
pop
insb
push
cmp
sub
jae
sub
dec
loopne
cs
insb
movsl
dec
pushf
dec
rolb
jp
movsl
dec
cmp
cwtl
adc
pop
adc
and
cmc
test
adc
cmp
dec
xor
ficomps
fsubrs
cwtl
out
and
push
lea
and
pop
dec
push
pop
es
dec
sbb
test
dec
xchg
and
dec
cld
pusha
push
adc
shrb
dec
out
sub
or
insb
push
sti
mov
dec
loopne
pop
pop
aad
lret
aaa
insb
push
stc
lcall
scas
pop
jle
fidivs
adc
scas
pop
xor
sarb
repz
andb
jmp
out
xchg
test
mov
push
out
xchg
cs
aam
mov
mov
xchg
adc
cwtl
lahf
xor
jle
push
shrl
adc
xlat
pop
push
sub
mov
pop
incl
xchg
pusha
sti
sbb
stc
mov
pop
pop
push
lea
bound
or
dec
mov
sbb
jne
add
adc
mov
mov
adc
and
mov
hlt
inc
push
mov
or
int
fstps
cwtl
insl
and
out
or
cld
pusha
push
adc
out
cmpsb
dec
sbb
iret
dec
fdivs
dec
fldcw
push
popa
cli
push
mov
sbb
push
adc
sahf
xchg
and
jg
pop
negb
sbb
and
es
mov
iret
call
ret
imul
addr16
sub
xor
stc
das
stos
jmp
mov
pop
jne
inc
push
cmp
test
ja
shll
mov
mov
insb
or
jno
jge
outsb
rcrl
jb
inc
in
mov
gs
adc
push
jl
push
sbb
clc
pop
xor
or
sub
adc
popa
push
adc
in
sub
lods
pushf
test
cld
pusha
push
adc
and
out
mov
adc
lds
lea
dec
lcall
mov
enter
ljmp
xchg
lret
shlb
xchg
adc
push
imul
xor
aaa
xchg
rorb
rclb
mov
rcll
xchg
cmp
cli
outsb
add
pop
cltd
sarb
outsb
mov
sub
in
cmp
icebp
add
ds
lea
popa
std
loopne
inc
mov
cmpl
push
aaa
stc
xor
in
add
mov
cmp
xor
js
push
adc
mov
mov
pop
loope
negb
movsl
insb
jmp
in
inc
hlt
mov
xchg
fs
roll
data16
imul
out
pop
jne
int
inc
cmp
test
push
ljmp
sarb
add
fdivs
arpl
shl
imul
sbb
push
testb
sbb
xor
push
adc
mov
mov
inc
popa
pop
cmp
push
dec
xchg
sub
addl
pop
jb
push
cmpsl
xor
cmp
cmp
inc
mov
xchg
sub
push
pop
pop
adc
sub
stos
lahf
add
pop
sub
fidivrs
push
mov
dec
push
ret
out
mov
es
xchg
and
shl
addr16
jge
cmp
xorb
loopne
test
mov
les
sub
xchg
push
lock
test
lds
scas
shr
gs
inc
loopne
mov
dec
mov
daa
push
cmp
ret
or
xchg
xlat
inc
mov
sarl
jae
lret
mov
ja
fidivrl
imul
pop
or
fcoml
addr16
inc
cmp
test
push
mov
xchg
ds
imul
imul
dec
sbb
fiadds
sub
lods
arpl
sarb
lcall
push
movsb
cmp
mov
pushf
mov
xchg
test
icebp
jle
pop
pop
xor
inc
inc
jo
xlat
and
out
aaa
adc
jmp
sub
mull
sbb
and
shl
pusha
mov
inc
jmp
mov
outsb
fnstcw
lds
adc
mov
loop
cmp
daa
lods
push
out
xchg
inc
push
out
ficompl
and
sub
add
mov
sbb
sub
in
pop
adc
out
mov
push
adc
sbb
pop
mov
lea
and
shrb
fidivs
enter
jb
sub
sub
mov
in
sbb
mov
outsl
icebp
pop
xchg
call
lcall
push
xor
push
lods
ljmp
int3
clc
scas
icebp
or
and
and
mov
sub
inc
sub
sbb
mov
and
out
aaa
push
sarb
ds
push
stos
ja
xlat
adc
mov
jle
vcvtsi2ss
inc
lds
cltd
sbb
mov
scas
or
scas
shrl
dec
cmpsb
push
imul
sub
lahf
daa
out
sar
cmp
std
xor
test
sarl
repnz
pop
jno
add
movsb
add
orb
jo
push
mov
bnd
pop
push
outsl
fstl
out
sahf
lods
xchg
xor
xchg
ds
nop
lods
lahf
cmp
clc
lods
pop
or
arpl
das
insl
sub
fnstsw
push
sub
xor
out
xor
pop
mov
inc
xor
aad
fidivs
outsb
inc
xchg
and
and
movsb
data16
mov
sti
jl
in
cmpsb
nop
cmpsl
pusha
aas
enter
fdivrp
jo
out
sbb
js
iret
pop
scas
add
idivb
std
mov
filds
mov
inc
inc
in
or
adc
stos
ret
inc
loopne
and
adc
sbb
or
leave
in
std
jbe
inc
mov
aaa
xor
js
aaa
xor
mov
jo
sbb
push
mov
out
mov
dec
xor
mov
dec
ds
lret
cmc
jae
and
fucomip
push
sbb
add
out
cmp
xchg
stc
ss
mov
out
hlt
add
xor
sti
leave
or
not
cmp
mov
xlat
or
leave
cmp
mov
push
rorb
mull
sbb
insl
push
jno
popf
sbb
xchg
fs
pop
ja
push
inc
sub
xor
ret
stos
mov
push
or
sbb
pushw
cmp
cmp
lds
dec
sbbb
insl
fidivrl
lods
or
cmp
sarl
in
movsb
stos
insl
push
outsl
out
rorb
push
cmp
xchg
push
and
inc
pop
inc
xchg
sub
mov
mov
stos
insl
cmpl
mov
add
sbb
ss
pop
lock
jecxz
daa
es
in
mov
xchg
adc
movsb
mov
fadds
adc
fnstcw
pop
dec
jmp
push
pop
ret
mov
fdivrs
lret
lods
sub
jecxz
jno
mov
mov
in
xchg
cs
mov
insb
xor
mov
pop
mov
mov
mov
int
or
push
mov
xchg
and
push
ja
ret
xor
lahf
mov
ljmp
shll
push
ret
stos
cmpsl
shll
in
xchg
push
mov
xchg
test
movsl
pop
aas
insl
push
xorb
shlb
ds
inc
or
xor
cwtl
dec
gs
jae
fmuls
sbb
pop
dec
sbb
pop
xchg
and
push
lock
sbb
mov
dec
into
pop
pusha
out
mov
enter
shlb
pop
aaa
insl
fidivl
mov
fs
cld
data16
mov
pop
pop
ss
mov
pushf
mov
and
mov
xor
rclb
and
test
pop
lods
mov
pop
test
hlt
push
jp
jl
xchg
mov
dec
mov
fadd
insl
push
mov
pushf
mov
mov
outsb
push
in
jl
aas
mov
jb
mov
popf
sub
daa
fstl
mov
adc
push
pop
in
push
mov
push
inc
cmp
mov
repnz
and
cmp
stos
xlat
mov
pop
add
divb
add
lods
outsl
iret
push
outsl
cmpl
inc
jle
inc
sti
sbb
ljmp
pop
jmp
jnp
aaa
in
test
lahf
xchg
fidivl
clc
out
xchg
pop
in
xchg
jns
lock
sbb
add
adc
sbb
sbb
pop
insb
pop
lcall
fnsave
cld
pusha
push
adc
fdivrl
aad
cltd
sbb
pop
stos
pop
mov
inc
cmp
sbb
in
xchg
and
adc
lds
adc
jno
and
sub
lret
outsl
std
xor
mov
mov
iret
mov
fs
outsl
les
fxam
jmp
xchg
xor
cmp
pop
insb
mov
and
pop
jge
xchg
mov
lcall
sarl
mov
frstor
fcom
mov
adc
jge
add
push
out
adcb
pusha
push
jp
fcomi
add
xchg
push
out
xor
ljmp
test
je
inc
xchg
loopne
lods
jo
rolb
rep
mov
outsb
into
mov
push
adc
add
mov
sarb
mov
xchg
or
or
or
nop
xor
mov
into
xchg
or
imul
aam
popa
push
adc
repnz
jecxz
es
add
mov
inc
xchg
mov
add
inc
ds
jb
iret
out
mov
pop
subb
pop
mov
xchg
sbbl
pop
ss
mov
cs
and
sbb
xor
repz
dec
sub
ss
mov
xchg
dec
xor
fcomps
dec
add
outsb
xchg
or
jmp
cld
pusha
push
adc
sbb
xchg
cmp
push
test
xchg
adc
lret
dec
adc
js
xor
push
jnp
mov
es
ss
outsb
and
jb
mov
and
adc
lahf
popf
mov
xchg
or
sbb
xor
xchg
push
pop
mov
gs
adc
iret
sub
cmp
push
stos
cld
pusha
push
adc
dec
lret
pop
mov
scas
mov
sub
mov
xlat
and
xchg
and
mov
inc
rorb
cmp
aad
xor
dec
xchg
pop
loopne
ljmp
in
and
adc
pusha
fmull
out
loop
sub
inc
loop
test
enter
jge
enter
mov
pop
fmulp
rorl
pop
mov
popa
push
adc
or
in
mov
cmp
ljmp
pop
jbe
push
jae
leave
sarl
jg
lea
mov
shrb
sbb
test
sbb
and
lods
mov
mov
and
dec
sarl
imul
lea
leave
js
bound
adc
lcall
dec
rol
addr16
insl
fnsave
mov
add
fnstenv
insl
mov
repnz
roll
mov
xor
xchg
aad
shll
add
push
enter
movsb
aas
fsubrs
stos
mov
fimull
mov
in
stos
push
xor
cmp
sbb
jge
aad
cmpsl
xchg
jmp
dec
add
add
aad
cmp
aaa
jbe
mov
mov
insb
shrl
mull
pop
mov
inc
test
movsb
aam
insb
leave
andb
mov
fldenv
xchg
mov
shll
xchg
mov
adcb
mov
xor
mov
je
aam
repz
jp,pn
inc
scas
or
push
adc
mov
lea
cmpsl
bnd
mov
mov
std
pop
push
in
bound
xchg
or
mov
push
mov
into
cmp
pop
shl
mov
cltd
loop
aas
out
fcmovnbe
adc
push
lods
jecxz
lods
aas
lret
mov
lods
mov
adc
mov
aad
loopne
lods
insl
pop
test
cld
fdivs
int
jge
mov
loopne
cmpsl
loop
int
push
mov
ja
add
jle
add
adc
adc
dec
add
stos
dec
add
mov
dec
add
adc
adc
dec
add
jle
add
cmp
adc
dec
add
add
adc
dec
add
add
dec
add
jle
add
adc
adc
dec
add
push
dec
add
adc
adc
dec
add
and
in
sahf
and
out
xchg
xchg
lea
out
movsb
jge
addl
or
xor
je
lock
mov
pusha
pop
mov
enter
push
cmp
pop
lds
sub
push
adc
aad
push
pop
pushf
mov
push
lock
cmp
mov
out
js
je
mov
xchg
inc
mov
cmc
lods
add
jae
mov
inc
sbb
sub
mov
jmp
lods
inc
shrb
jne
stos
sbb
or
xor
pop
xor
mov
int
sbb
pop
outsb
sub
mov
rol
fidivl
add
test
dec
int
dec
mov
mov
in
mov
add
loop
incl
adc
and
stc
outsb
mov
xor
xchg
fwait
push
pop
adc
push
cmp
push
adc
popa
jno
sub
mov
jnp
loopne
inc
jno
ss
or
int
subl
inc
pop
inc
dec
repz
sahf
std
in
adc
inc
pusha
fimuls
xchg
xchg
mov
cmp
mulb
push
lret
inc
out
aaa
sbb
aad
and
push
les
insl
scas
push
mov
in
in
jle
xchg
out
jecxz
js
scas
xchg
ds
jbe
jp
daa
sbb
jp
std
push
shlb
shl
imul
in
out
test
daa
mov
mov
gs
clc
addr16
in
ds
and
mov
lret
ds
and
xchg
xchg
jle
sbb
jle
lock
mov
test
mov
lcall
cmp
clc
add
outsl
push
gs
movsl
in
inc
mov
sbb
sarb
pop
in
pop
mov
jmp
jmp
xor
lods
add
xchg
mov
sub
mov
push
rorl
mov
add
and
mov
cmp
loop
gs
scas
cmp
jnp
lock
faddp
pop
in
loopne
pop
inc
xchg
sbb
loopne
mov
pushf
mov
dec
mov
shl
test
jecxz
and
je
cmp
mov
and
ss
jge
fwait
pop
fnop
xchg
sub
xor
xchg
and
cwtl
xor
cmp
mul
ffree
pusha
mov
aas
mov
mov
push
cli
cwtl
push
jno
mov
pop
mov
pop
mov
lea
and
cwtl
mov
test
xor
jne
outsb
cmpb
add
xlat
dec
sbb
inc
ds
xchg
cs
pop
subb
stos
push
mov
fcmovnb
push
mov
dec
push
lahf
popa
aad
sub
push
scas
push
mov
sarb
fbld
xchg
lret
lcall
leave
cmp
pusha
lods
and
cltd
stc
xor
mov
sbb
out
in
mov
and
pop
xchg
call
lds
paddq
test
push
jmp
mov
fs
cwtl
mov
dec
dec
addl
cmp
mov
and
stos
lcall
fstps
xchg
cmp
inc
outsb
push
inc
sbb
sbb
inc
das
mov
stc
pop
fnsave
bound
shrl
mov
sbb
movsl
and
push
xchg
popf
sub
out
jae
data16
inc
adc
jne
jge
sub
popf
stos
adc
dec
addl
add
leave
dec
sub
test
stc
aaa
add
pop
xor
jle
adc
es
inc
jbe
test
push
jge
fucom
push
out
in
xchg
jecxz
mov
sahf
aas
in
fldt
mov
sbb
or
xlat
and
add
lods
xor
orb
outsl
pop
fnstcw
adc
bound
xorl
pop
dec
mov
lcall
mov
je
scas
sti
cltd
xchg
inc
es
sti
std
lock
leave
and
stos
and
xor
rcrb
out
pop
fcmovne
imul
jmp
pop
fisttpl
or
mov
xor
add
fiadds
ret
mov
in
push
test
mov
lods
cmp
sahf
and
jnp
ja
ja
outsb
add
adc
jae
jmp
ss
mov
pop
inc
lea
pusha
push
sub
in
aaa
test
fbld
cmp
xor
mov
mov
js
or
out
mov
rcrl
dec
cmp
insl
inc
adc
dec
std
out
adc
dec
add
fs
mov
xor
adc
push
js
js
xor
pop
insl
cs
mov
stos
shrl
in
xor
sub
jno
pop
outsb
or
out
pop
jns
mov
cld
cmpsl
lds
push
aad
sbb
fildll
push
lret
dec
xchg
mov
mov
lahf
xchg
imul
dec
call
insl
push
rep
pop
imul
clc
rcrb
push
ret
popa
loop
gs
mov
cmp
push
cmc
cmp
xchg
stc
sub
shlb
shl
jge
jmp
mov
fiadds
out
mov
repz
xchg
and
inc
in
xor
inc
lea
xlat
ret
test
jge
call
mov
or
pusha
out
cmp
mov
xchg
mov
sbb
ds
inc
or
push
cmp
jecxz
daa
es
cmp
sub
or
lods
cmpsb
mov
adc
or
mov
mov
sub
jmp
adc
pop
in
mov
movsl
mov
inc
push
fnsave
ds
pop
mov
push
movsl
ds
addl
adc
mov
push
dec
pop
xor
push
ljmp
jmp
mov
aas
jge
imul
jp
in
mov
stos
fwait
mov
ja
pop
inc
or
je
mov
fnstenv
mov
dec
dec
adc
sbb
dec
sbb
xchg
mov
daa
dec
in
jmp
sbb
jecxz
mov
aas
sub
cli
shl
pusha
addl
das
shlb
test
mov
sbb
mov
stos
mov
inc
xor
loope
mov
lods
xchg
nop
xchg
mov
xor
mov
sub
mov
push
icebp
add
inc
or
sub
das
in
incb
sbb
lcall
jmp
lods
sbb
mov
cmp
xor
mov
fucomi
fdiv
sub
negl
in
mov
mov
pop
icebp
mov
sar
insb
es
imul
mov
loop
scas
rolb
push
inc
jns
mov
fxch
push
ds
sbb
iret
test
sbb
shrb
jne
lds
ret
test
mov
sbb
push
jo
pop
fiadds
ret
mov
pop
cmp
sub
mov
bound
lods
jb
addr16
in
or
dec
mov
aaa
sbb
test
or
xor
cli
push
shrb
inc
cmp
std
aad
cmp
test
clc
push
out
fcomps
xchg
push
jmp
sti
cs
adc
and
cmp
cmp
aaa
cmp
inc
insl
aaa
pop
lds
sub
test
cmpsb
pop
insb
mov
sbb
inc
and
cmp
sti
lds
movsl
sub
outsl
jle
clc
daa
xor
addr16
cld
movsb
adc
mov
dec
adc
adc
add
adc
sahf
in
push
push
mov
mov
lds
call
enter
push
inc
mov
clc
inc
inc
hlt
test
push
dec
cwtl
mov
mov
int
jne
mov
les
jmp
push
mov
pop
push
insl
test
lds
and
and
jmp
out
xor
stos
pop
test
add
or
mov
jns
pop
int3
jmp
loopne
mov
or
xchg
cmp
pop
movsl
or
adc
popf
dec
in
jle
fsubs
es
and
mov
pop
mov
mov
jg
fcoms
pop
push
pop
shrl
in
popa
and
cmpsl
dec
xchg
push
imul
mov
es
push
ret
mov
inc
xor
sub
jno
pop
outsb
fdivs
xor
dec
cmp
cmp
jne
lock
sbb
ds
sti
mov
xchg
sub
repz
xor
rorb
add
loop
stos
mov
xchg
mov
xor
faddp
call
movsb
cltd
rcr
cmp
dec
pop
repnz
roll
mov
xchg
popa
push
mov
xchg
test
testl
fidivrl
das
repnz
fnstcw
out
cmp
fistpll
imul
sub
ja
add
sbb
ds
mov
xchg
or
adc
cmp
sub
fcoms
xor
cmp
cmp
xchg
sub
push
inc
xor
xor
imul
lcall
adc
adc
lods
or
cmp
rclb
pushf
mov
sbb
pop
popf
xlat
dec
xchg
push
leave
movsb
mov
adcl
movsl
ds
es
inc
in
mov
push
jo
mov
pop
mov
add
push
enter
rolb
insl
mov
stos
in
stos
out
xchg
jecxz
lea
cmp
in
xchg
insb
andl
pop
cmp
mov
and
pop
aam
xchg
pop
imul
pusha
push
pop
sub
lds
les
cld
bound
fdiv
fs
sarl
jns
push
dec
add
adc
mov
popf
mov
test
lcall
sub
adc
jecxz
in
dec
in
inc
int3
mov
das
mov
push
adc
mov
push
jmp
sub
pop
mov
sub
sub
fstpt
aaa
in
cs
roll
lret
adc
cmp
xchg
icebp
ret
or
jns
sbb
sbb
in
ret
and
add
xor
xor
mov
add
pop
lret
push
inc
std
pop
addl
dec
ds
xchg
mov
lahf
rcll
lods
pop
test
push
into
rcl
insb
sbb
jo
adc
inc
popf
sub
in
test
cmp
cmp
in
fists
or
or
and
jle
fcmovnbe
or
shll
or
push
mov
cmp
sti
mov
or
scas
sbb
call
shrb
adc
call
scas
adc
push
iret
adc
jge
add
pop
sub
aaa
outsb
nop
dec
aam
pusha
outsl
dec
and
mov
ficoms
dec
in
pop
push
xor
adc
push
adc
dec
sub
popf
ret
dec
mov
popf
loope
cmp
lock
xor
or
in
ljmp
sub
jb
inc
or
xchg
aas
loope
pop
ret
mov
leave
lods
add
push
filds
mov
mov
cs
rcrl
movsb
mov
ret
daa
ja
insl
out
cltd
sarl
dec
jnp
or
cld
push
repz
in
repnz
push
repz
outsb
lds
cwtl
xchg
in
aam
inc
inc
xlat
jmp
in
or
in
leave
mov
push
adc
pop
mov
xchg
mov
jne
dec
xchg
inc
and
jg,pn
stos
fwait
sub
es
fnsave
mov
pop
pop
adc
out
cmpsb
cmp
xor
or
push
adc
loope
jae
push
adc
jge
pop
outsb
mov
mov
push
int
xor
sbb
fstpl
add
mov
daa
mov
lahf
popa
cmp
hlt
pop
jbe
jb
pop
in
pop
adc
mul
lods
xchg
add
loop
adc
pusha
mov
push
clc
imul
js
shrl
push
pop
jl
out
push
ss
cmp
xchg
mov
test
in
movsl
mov
shrb
pop
cmp
fisttps
pop
aam
pop
push
in
pop
push
and
xchg
inc
ret
jno
leave
js
ret
arpl
mov
mov
adc
lods
cs
loop
es
inc
out
mov
cmpb
lods
sub
call
sub
ds
loopne
movsl
fcmovne
js
ret
out
xor
loop
test
mov
ds
ds
cmp
sub
fistpll
push
push
arpl
push
cmp
into
add
xor
xchg
inc
loopne
test
test
imull
mov
ret
shrb
mov
ljmp
std
outsl
pop
decb
and
and
mov
aad
push
rol
mov
mov
iret
mov
push
pop
pop
mov
pop
stos
popa
dec
sbb
adc
mov
imul
popa
xchg
dec
pop
and
adc
sub
lock
push
dec
mov
movsl
ds
int3
jp
ret
popa
pop
out
xor
loope
mov
jp
mov
cmp
sub
lods
popf
cmpsb
insb
cmp
dec
xchg
inc
les
sub
xor
lahf
mov
xor
fsubr
movsb
xchg
lods
arpl
mov
add
bound
ljmp
leave
pop
jmp
lea
and
addr16
inc
sti
dec
cs
fldln2
or
xchg
test
outsl
call
les
jmp
sbbl
sub
pop
insl
rcl
fcoml
cs
hlt
or
and
int3
sbb
pop
bound
add
in
pop
mov
sbb
sbb
addr16
nop
into
or
aad
bound
aas
or
movsl
sbb
shlb
shlb
lret
js
xchg
imul
sub
fisubs
inc
sbb
mulb
fwait
es
stos
mov
pop
adc
push
adc
repnz
sub
ja
paddd
or
in
test
jb
stos
xchg
inc
jle
mov
sbb
test
test
pop
test
mov
dec
xor
mov
push
pop
pop
adc
jmp
or
push
adc
into
stos
adc
xor
sub
data16
jnp
arpl
adc
cmp
mov
and
inc
adc
xor
aam
xor
cld
fs
mov
scas
fsub
jo
roll
push
leave
out
dec
and
inc
jecxz
lods
jbe
movsl
std
nop
stos
sti
fisttps
sub
hlt
fwait
sbb
xchg
pop
sub
dec
in
or
lret
fstpt
test
xlat
loop
mov
cmp
imul
dec
clc
xor
pushf
add
dec
jb
xor
add
cmc
or
popf
mov
adcl
sbb
xor
xchg
dec
xor
xchg
lods
add
fwait
outsl
lea
add
jno
sub
inc
sub
mov
fnstcw
pop
dec
mov
jne
gs
pop
fidivrl
adc
and
xor
adc
sbb
jbe
shlb
out
push
cmp
test
pop
cmp
sub
sti
mov
mov
repz
mull
xor
rcrl
xchg
movsl
or
pushf
push
mov
lahf
mov
hlt
jae
ret
pop
mov
das
push
movsl
aas
cs
and
fwait
insl
push
jo
xchg
stc
rcrl
cmp
out
sbb
dec
push
push
das
mov
fwait
xchg
and
out
pop
mov
mov
lods
jb
ss
scas
xchg
jae
arpl
fdivs
loopne
dec
xlat
ret
test
cmp
lret
ds
ss
mov
clc
jnp
push
xor
xor
and
push
mov
sbbl
and
lods
or
out
cmpsb
out
mov
loopne
movsb
phsubd
add
ficoml
mov
sarb
mov
jge
out
xor
jae
cmp
sub
nop
dec
xchg
sub
pushf
test
mov
xor
insl
xor
fwait
pop
shl
jae
sarl
pusha
fidivl
jbe
xchg
add
cmp
lock
leave
movsb
mov
nop
push
outsb
cmp
fwait
pop
call
fldcw
xchg
scas
cmpsb
test
xchg
and
add
loope
mov
shl
scas
pop
sbb
js
pop
xor
out
sbb
ret
mov
xlat
inc
adc
push
shl
cmpsb
aaa
mov
sarb
out
cmpsl
sbb
cmp
dec
aad
outsl
pop
pop
shlb
outsb
xor
cmc
fs
in
push
cmp
cmp
and
scas
in
lcall
push
in
xor
stc
sub
popf
or
xor
shll
std
dec
mov
sbb
stc
sub
cmp
out
decl
add
and
in
cmp
sub
push
mov
nop
loope
add
push
xor
sub
sahf
pop
jno
adc
adc
add
in
arpl
pop
ss
sbb
aam
add
aaa
js
aam
dec
mov
pop
pusha
lret
push
jl
mov
xchg
jne
fs
xchg
jl
shrl
jo
in
add
fnstcw
movsl
mov
cld
lahf
add
mov
test
xchg
test
aad
stos
jae
sahf
enter
mov
mov
lea
lret
push
imul
outsl
fcoms
add
stc
movsb
out
jne
negl
ja
stc
fmuls
pop
jle
add
adc
lods
add
xchg
xor
push
dec
xchg
and
out
push
out
lods
std
subl
cltd
mov
cmp
in
or
lock
xchg
and
sub
mov
inc
pusha
mov
out
jo
loop
shl
jmp
js
sbb
push
lahf
sub
adc
inc
imul
pop
call
leave
addr16
movsb
pop
add
mov
sahf
push
push
mov
inc
jg
dec
mov
and
imul
dec
xor
mov
mov
adc
jecxz
in
out
add
dec
lret
out
data16
and
cmp
jle
cmp
sub
inc
mov
mov
sub
dec
jnp
jl
mov
xchg
dec
subl
pusha
outsb
add
cli
and
push
loop
mov
loop
push
xor
test
jp
adc
movsl
sbb
adc
fucom
mov
sti
into
ss
hlt
inc
movsl
or
mov
out
rcl
and
mov
jns
fwait
popa
push
jmp
adc
out
pop
lahf
add
jne
jmp
repnz
fwait
out
xchg
jmp
in
imul
mov
xor
je
ret
popa
enter
decb
sub
cmp
insb
mov
or
cmp
dec
out
mov
jne
dec
rol
pop
ret
and
lods
xchg
push
pop
mov
fistpl
rcrb
and
mov
into
push
inc
loopne,pt
insl
cmp
jb
dec
push
fiadds
pop
xchg
and
test
sbbl
enter
lcall
out
push
loope
cmpsb
mov
and
or
adc
test
clc
lahf
mov
aas
aas
pusha
sbb
push
adc
pop
mov
insl
pop
pop
jg
sti
or
cmpsb
out
cmp
cmp
sbb
pop
pop
cmp
xor
cmp
push
xchg
sub
daa
mov
mov
fstpt
sub
dec
pushf
cmp
movsl
movsl
test
mov
nop
and
mov
ss
mov
xchg
and
xchg
outsl
in
mov
outsb
add
and
push
push
mov
loopne
scas
test
shr
test
xchg
neg
mov
add
sub
pop
iret
add
jmp
mov
sbbl
loope
push
cmp
and
mov
lret
mov
dec
sbb
data16
sbb
ret
ds
mov
movsl
mov
sti
or
stc
inc
dec
xchg
and
outsb
xor
fdivl
inc
cld
cmp
cmpsb
scas
xor
shrl
or
aam
pop
cmp
aad
and
lea
inc
stos
testl
mov
add
mov
adcb
fsubl
popf
sbb
sub
mov
push
jne
aad
or
test
das
add
arpl
ds
test
frstor
out
cmpsb
and
pop
xor
and
cli
xchg
ret
test
sbb
mov
inc
jp
rcr
ret
add
add
call
fisubs
push
arpl
mov
out
jmp
and
lret
sub
ds
dec
lret
fldcw
mov
push
mov
and
gs
mov
aam
insb
pop
bound
mov
xor
insb
mov
dec
dec
push
add
sbb
add
lock
movsl
adc
fsubrl
decl
repz
aad
outsb
add
sbb
test
iret
in
and
adc
jns
iret
insl
sub
inc
cmp
jmp
mov
mov
pop
sub
loopne
and
popa
dec
jecxz
and
inc
sti
dec
es
int3
xchg
jne
mov
xchg
push
add
add
lods
adc
adc
mov
pop
lds
rcrb
add
xor
iret
mov
dec
push
flds
ds
mov
add
inc
push
and
shr
out
je
div
je
js
jbe
ds
rclb
push
mov
gs
xor
cli
push
sub
mov
sbb
fnsave
iret
pop
jle
and
lock
cmp
rcl
jecxz
jge
aad
push
shll
cmpsb
mov
pop
loopne
mov
push
insb
jge
arpl
sbb
jae
lcall
and
sahf
sub
mov
out
filds
xchg
in
imul
das
and
inc
jecxz
cmp
leave
adc
jnp
add
sub
bound
fdivs
arpl
and
ljmp
insl
xor
ret
mov
push
sub
in
popa
and
mov
dec
jg
mov
es
push
push
sub
repz
jbe
pop
inc
or
daa
dec
sbb
dec
sbb
dec
push
ficoml
mov
leave
out
push
mov
and
sbb
cmp
repz
rclb
ljmp
enter
imul
test
inc
xchg
and
and
ss
push
outsb
fiaddl
sub
lea
rcr
insl
scas
pop
pop
ficompl
js
pop
cmp
xor
inc
push
in
mov
lods
add
out
push
adc
faddp
fdivs
fisubrs
cmp
dec
mov
cmp
daa
mov
ret
jge
ret
xor
and
fcomi
imul
inc
fisttpll
cmpsl
sarl
jg
pop
mov
sbb
sbb
fildll
lods
mov
int
lea
maxps
notb
cmp
ret
xchg
and
dec
dec
pop
lret
jae
aas
test
inc
xchg
sub
lahf
mov
and
jae
insb
pop
pop
es
push
cmp
outsb
fnstenv
ret
cwtl
outsb
push
adc
mov
dec
jmp
push
pop
aas
and
ficoml
insl
cs
xor
shl
ret
das
je
loop
adc
test
inc
out
fisubs
in
and
push
int
pop
out
aas
mov
pusha
cmp
jl
out
mov
test
mov
xor
test
mov
jb
enter
mov
in
out
add
xchg
bound
aam
arpl
repz
inc
roll
jbe
fnsave
in
cld
inc
pop
dec
inc
inc
lods
pop
and
fidivrs
dec
lahf
ret
les
push
sub
dec
in
rcll
ret
out
aad
std
sar
mov
sbb
inc
js
fsubr
dec
sbb
fsubl
xchg
test
jle
int
mov
mov
out
mov
mov
and
xchg
scas
sbb
int
and
aad
int
into
rolb
and
mov
addr16
andl
mov
jb
pop
jge
add
aad
push
mov
sbb
popf
cmp
mov
pop
nop
jge
push
cltd
cmpsb
out
test
outsl
lcall
add
stos
in
push
sub
aas
outsb
sbb
jmp
mov
aad
fidivs
outsb
inc
push
mov
dec
mov
mov
mov
mov
mov
aad
dec
shl
aaa
jo
mov
mov
lods
std
shrb
shrl
aad
and
fldcw
insb
adc
xchg
in
cmp
in
sbbb
inc
addr16
fwait
bound
outsb
xchg
stos
mov
ficompl
sub
scas
clc
inc
dec
jno
mov
inc
add
xchg
and
xor
jge
push
dec
scas
mov
mov
cmc
mov
jne
xchg
jp
dec
ljmp
in
subb
pop
stos
repz
xor
insb
popf
jmp
add
push
daa
jmp
add
cmpsb
cwtl
fstpl
push
mov
int
aad
ret
call
dec
or
iret
int
push
cmp
mov
fistpl
ljmp
lcall
or
pop
xorb
insl
in
push
xor
pop
xor
mov
push
sub
dec
adc
push
sub
mov
ss
fidivl
xlat
es
ds
popf
ss
lods
dec
xchg
adc
shlb
jge
push
push
sub
pop
adc
out
pop
out
mov
ficompl
xchg
lock
sar
lahf
mov
push
mov
xchg
into
add
cmp
inc
movsl
dec
call
sub
out
scas
dec
xchg
scas
dec
subl
and
xchg
sub
mov
loopne
xchg
and
sub
call
cmp
dec
mov
in
call
pop
mov
loopne
mov
sub
fdivl
out
lcall
movsl
call
sbb
lods
adc
movsl
dec
loopne
test
mov
ljmp
nop
ficoml
xchg
sub
lcall
out
xchg
jge
shrl
push
call
sbb
lods
sbbl
dec
loopne
test
repnz
xlat
jmp
fisubrl
dec
mov
fadds
push
push
sub
rcrl
sub
pop
jmp
mov
mov
mov
pop
rorl
arpl
push
pushf
mov
xlat
lods
push
out
test
push
mulb
out
lea
rorl
add
pop
xor
mov
lahf
mov
mov
push
mov
dec
out
mov
cmpsb
das
mov
movsb
movsb
push
scas
addb
imul
sbb
pop
divl
inc
push
xor
pop
stos
xor
les
pop
mov
mov
push
addr16
lret
mov
dec
bound
and
rcrl
sarl
dec
lods
push
insl
out
sbb
lcall
test
popa
and
mov
push
negl
mov
outsb
mov
mov
sub
xor
adc
lret
xchg
cmpsl
sbb
mov
and
adc
rcrb
sbb
or
xchg
shll
mov
pop
jae
insl
fnsave
xchg
sbb
shlb
call
in
inc
adc
in
inc
jbe
loopne
inc
jmp
sbb
iret
addr16
cld
push
mov
inc
iret
push
add
fcmove
aas
mov
fldt
mov
in
jb
inc
data16
sahf
sbb
mov
jge
pop
inc
test
outsb
dec
adc
sub
sub
jmp
jecxz
cmp
pushaw
xchg
dec
sub
mov
or
bound
push
jle
jmp
fs
fs
je
cmp
cmp
in
xchg
je
dec
lock
inc
pop
and
lods
jbe
jmp
push
in
inc
shlb
xchg
mov
sub
sub
and
lcall
insl
stc
imul
fnstcw
in
in
sbb
addl
push
gs
add
and
add
push
adc
into
mov
imulb
loopne
and
xchg
xor
dec
cld
xchg
mov
pop
fstpt
in
push
sub
mov
insl
andl
pop
pop
adc
test
or
push
adc
mov
cmp
xor
mov
sbb
ret
test
and
es
stc
mov
es
adc
add
ljmp
icebp
imul
pusha
cwtl
add
icebp
jmp
movsb
ret
fbstp
mov
push
inc
out
shrl
fstp
push
jb
das
sbb
ss
push
mov
cmpsl
push
sbb
push
cmp
shll
pop
divb
ja
ljmp
arpl
pop
jae
cli
lods
shlb
mov
popa
pop
pop
push
cmp
push
rep
adc
jbe
loopne
test
testb
sub
dec
sbb
daa
xchg
pop
xchg
mov
in
pop
pop
iret
inc
fldpi
mov
cmpsl
rolb
push
jns
add
xchg
and
sbb
mov
cli
lods
shl
outsl
sub
pop
cmp
and
loopne
mov
fisubrs
popf
arpl
or
and
sbb
testb
sub
jmp
mov
push
mov
shl
jge
loopne
cmp
movsl
rclb
lret
dec
sbb
dec
sbb
pop
loopne
push
cmpsl
xor
out
in
mov
sub
push
dec
sbb
pop
xor
jno
pop
outsl
or
outsb
lret
mov
shlb
push
pop
aad
dec
xchg
pop
jb
adc
push
pop
cmpsl
dec
fildl
es
adc
cld
or
cmp
out
cmp
push
enter
test
xchg
pop
aad
repz
push
insb
das
test
cwtl
test
icebp
fs
shrl
nop
fninit
cmp
cmp
icebp
jle
icebp
pusha
pop
jecxz
cmp
cmp
fdivs
sbb
pop
mov
jne
pop
push
mov
lock
mov
test
mov
cmp
fs
and
mov
mov
jge
rcrl
pop
shlb
aam
push
into
xor
pop
ljmp
mov
lahf
stos
pop
xor
rol
in
std
mov
push
sub
pushf
cmp
lcall
inc
dec
scas
pop
mov
dec
pop
icebp
lods
nop
sbb
loope
loopne
push
in
popa
push
jbe
insl
iret
pop
push
xchg
scas
fwait
aaa
add
mov
xor
testb
aam
lods
inc
aaa
in
cs
dec
addr16
sahf
inc
xorl
dec
jns
pushf
sbb
mov
jb
cs
add
lret
push
sub
sbb
jle
insl
movsl
pop
aam
pop
lds
adc
xchg
jnp
dec
sbb
adc
xchg
aad
xchg
into
add
mov
sub
cmp
and
pop
sub
outsb
jbe
pop
jae
pop
jne
inc
push
cmp
xor
adcb
mov
subb
push
sbb
stos
adc
sbb
call
push
out
movsb
xchg
or
push
adc
fists
mov
mov
xor
lahf
cmp
in
es
adc
push
enter
push
jbe
mov
xor
cmpsb
inc
adc
divb
aam
push
jo
push
scas
sti
add
jno,pt
cmp
es
iret
sub
shrb
mov
inc
xchg
dec
leave
enter
mov
sahf
test
mov
jg
das
pop
movsb
adc
add
stos
loope
rol
xor
adc
sub
cli
cld
test
mov
fnstcw
lret
and
mov
scas
jge
cmp
jbe
add
loopne
mov
out
or
rclb
dec
mov
inc
pop
mov
fucomp
adc
pop
scas
adc
mov
lods
int
adc
test
lock
jp
les
inc
sub
and
or
and
push
lock
mov
push
cmp
mov
jb
enter
out
pop
popa
push
icebp
pop
in
call
bound
and
jmp
das
icebp
adc
loopne
inc
stos
loope,pn
leave
xchg
and
mov
push
imul
push
clc
gs
je
xchg
movsb
xor
mov
adc
es
test
mov
cmp
in
mov
and
cmp
out
push
movsl
out
jge
fbstp
xor
dec
out
jo
daa
mov
and
xchg
mov
cmp
push
push
enter
xchg
jge
popf
sahf
lea
rcrl
xor
push
push
enter
push
fisubrs
arpl
or
mov
rorl
push
repz
fnstenv
ds
xchg
and
sbb
cmp
fisubs
sub
dec
lds
std
pop
dec
cmp
inc
fstpl
and
test
mov
fwait
jl
xchg
mov
cltd
mov
pop
mov
fwait
inc
mov
iret
fdivs
sbb
loopne
xchg
fisttpl
push
repnz
pop
fstpl
mov
lods
shl
xchg
xor
and
mov
sbb
jb
divb
cmp
ds
cmp
pop
enter
mov
jne
and
testl
shll
out
and
mov
inc
dec
xchg
and
bound
cmp
into
sbb
test
cmp
xchg
sub
mov
xor
sub
jb
cwtl
adc
xchg
movsb
push
mov
out
mov
mov
sub
adc
rcll
cmp
push
adc
movsb
popa
aad
mov
adc
add
jmp
dec
popf
mov
sub
adc
lods
ss
adc
dec
inc
and
lea
jle
push
stc
sbb
inc
scas
xlat
aaa
pop
dec
shrb
popa
mov
inc
and
popa
loopne
jbe
or
fs
es
cld
out
adc
jb
in
xchg
and
fistpl
enter
jo
call
sbb
push
sbb
push
pop
rorl
cli
cld
jbe
into
push
push
sub
add
popf
stos
or
jg
out
push
imul
push
mov
add
ret
cmp
mov
mov
into
or
jnp
call
mov
lret
mov
lods
add
ds
and
inc
and
jae
and
mov
jmp
sbb
jne
pushf
xor
sbb
jno
jbe
ljmp
call
adc
lea
and
aam
jmp
mov
sbb
ret
ljmp
xchg
mov
andl
pop
or
xor
icebp
mov
mov
ljmp
cmp
das
pop
pop
dec
arpl
dec
adc
and
push
jp
movsb
adc
mov
test
or
push
movsb
cltd
mov
mov
pushf
or
repz
mull
sbb
jmp
jle
add
mov
rolb
ja
out
ds
and
ficompl
out
filds
test
scas
jbe
push
dec
xor
mov
sub
std
xchg
dec
jnp
or
dec
mov
sub
ss
adc
punpckhdq
pop
scas
sub
sbb
stc
ficomps
int
aad
sti
and
pop
xchg
mov
les
or
inc
aam
lock
xlat
mov
adc
outsb
inc
fwait
and
loop
call
mov
sbb
fimuls
daa
leave
jmp
sub
add
fwait
ds
and
in
das
shrb
leave
jmp
jecxz
jl
mov
nop
jo
loope
push
sar
or
sti
popa
xor
mov
dec
out
mov
mov
fstp
dec
leave
sbb
cmp
sarl
clc
pop
movsb
dec
out
cmp
fidivs
movsl
xchg
mov
mov
adc
xor
cmp
test
repz
and
pop
lods
out
cli
clc
push
xor
xchg
and
out
inc
xor
push
aad
lret
lea
ss
adc
sti
or
lea
pop
jbe
filds
xchg
mov
and
out
scas
xor
dec
loopne
push
cs
jg
bound
mov
scas
xchg
jne
test
and
pop
addr16
leave
aas
cmp
push
test
loopne
cld
or
out
xor
ret
push
das
mov
jb
ds
inc
xchg
sub
pop
mov
mov
pushf
mov
push
jmp
mov
push
ficoml
lret
pop
data16
sbb
xor
xor
imul
arpl
loope
pop
ds
sbb
ret
xchg
sub
fwait
out
xor
xor
test
mov
fsubp
cmp
mov
ja
add
push
stc
jp
fmuls
je
jno
mov
fscale
or
mov
sub
leave
cmp
andl
inc
outsl
fsubrs
or
pop
in
push
loop
xor
pop
and
sbb
sar
jl
testl
push
out
andl
mov
sbb
sbb
push
lret
xlat
adc
cmp
sub
mov
xchg
ret
jae
fdivrl
mov
ss
int3
jmp
adc
fcmovu
es
jno
push
sbb
in
add
rorb
lds
add
mov
and
pusha
lods
loopne
and
and
int3
jns
push
dec
push
xor
mov
push
insl
pop
ds
mov
inc
cmpsl
fwait
dec
out
rcl
inc
into
scas
jns
call
shlb
popf
push
sti
into
call
insb
pop
inc
pop
cmp
push
inc
jge
mov
inc
jp
jge
push
imul
stos
jno
push
call
add
pop
test
aam
add
daa
stc
sub
lret
repz
mov
aas
aad
fcoml
addr16
fmull
outsl
xor
mov
cmp
sbb
sahf
and
xchg
push
mov
or
jo,pt
outsb
inc
xor
mov
inc
mov
inc
and
pusha
adc
rclb
xor
pop
mov
inc
jno
push
mov
scas
mov
lret
adc
ficoms
mov
clc
jge
or
xor
and
and
lahf
repz
sti
sti
and
mov
mov
xchg
in
pop
imul
or
in
dec
adc
fbstp
dec
daa
xor
add
and
push
xor
xor
pop
mov
test
mov
rorb
jge
jp
insb
dec
js
imul
pop
cmc
push
and
sub
es
jnp
xchg
pop
test
fucomip
add
adc
test
inc
push
lea
dec
jae
test
movl
enter
adc
push
ljmp
out
cli
cmp
and
sbb
adc
and
and
in
dec
adc
mov
sbb
xor
movsl
leave
pushw
ret
sbb
cmp
lea
ljmp
inc
or
loopne
inc
sbb
and
mov
xchg
sub
push
aad
bound
mov
popf
sub
lock
push
lock
cmp
inc
imul
push
adc
out
aaa
idivb
loope
cmpsl
mov
xlat
mov
jb
push
test
pop
mov
xchg
mov
and
jno
ss
xlat
mov
jb
jae
mov
fisubs
pop
add
stos
push
mov
mov
dec
cmp
in
sbb
cs
leave
xchg
push
test
lods
xlat
clc
sarl
decl
insb
push
sti
mov
push
sar
xchg
cltd
add
xor
pop
mov
pop
outsl
pop
mov
jge
push
adc
dec
mov
push
inc
push
loop
xchg
add
movb
pop
sbb
ss
sub
ret
adcl
xchg
push
pop
lds
clc
add
sub
dec
dec
push
ficoml
mov
and
and
ljmp
lea
ss
push
das
pop
subl
mov
fistpl
inc
mov
sbb
es
adc
outsl
mov
sarb
loopne
and
sub
cmp
mov
cmpsb
dec
jmp
loop
mov
test
in
xchg
sub
mov
mov
fidivl
pop
adc
js
xchg
and
jns
leave
pop
adc
xchg
and
fmuls
adc
xchg
adc
mov
adc
ret
fwait
rcr
es
pop
ss
sarl
dec
ficompl
imul
icebp
push
mov
loop
out
test
les
lock
lea
cli
pushf
adc
inc
scas
add
or
les
adc
dec
fmull
xchg
movsb
fnstcw
push
cmpsl
xlat
imul
pop
adc
cwtl
shrl
adc
popa
movsb
lret
mov
int3
pop
adc
inc
faddl
outsl
shlb
cmpsl
dec
xchg
sub
xor
dec
xchg
movsl
je
or
adc
mov
mov
les
xchg
and
and
insb
sbb
or
add
adc
daa
pop
stos
dec
pop
inc
pop
stos
inc
cmp
int3
pop
adc
jns
jmp
mov
push
add
maskmovq
testl
orl
std
push
push
imul
or
enter
add
sbb
fwait
outsb
cltd
jbe
fiadds
mov
inc
popa
inc
ds
lea
mov
cmpsb
xchg
aaa
add
mov
adc
push
adc
aad
xlat
mov
std
out
mov
add
adc
pusha
xchg
jmp
sub
jo
js
call
mov
mov
mov
jbe
data16
xchg
xor
fadds
add
pop
and
rclb
movsb
adc
xchg
or
bound
cmpsl
es
or
cld
pusha
push
adc
add
fimull
pop
clc
cli
pop
adc
sar
dec
leave
jae
cmp
push
popf
pop
mov
cmpsb
cmp
xchg
mov
jbe
loopne
mov
add
nop
outsl
jno
cltd
loop
lret
jp
xchg
stc
lea
test
pop
adc
dec
into
shlb
push
in
or
aaa
cltd
hlt
dec
xor
xchg
pop
add
clc
sub
sub
push
push
adc
adc
fimull
lods
inc
test
or
inc
imul
test
mov
rorb
adc
test
stc
inc
in
in
ss
xchg
movsl
dec
xchg
xchg
adc
adc
sbb
imul
xor
inc
lea
xchg
out
cld
or
cld
pusha
push
adc
call
out
lahf
dec
imul
adc
fisttpl
mov
scas
scas
pop
ds
push
movsb
dec
call
mov
ficompl
mov
ret
mov
stos
dec
xchg
sub
lods
pop
cmp
cmpsl
dec
xchg
and
out
jae
sub
jb
incb
std
xlat
cmp
sub
pop
xor
cmp
and
sub
mov
in
out
gs
push
lods
pop
shlb
mov
mov
pop
popf
pop
dec
xchg
mov
lea
pop
insl
mov
mov
adc
mov
jb
xchg
and
inc
aad
adc
mov
adc
adc
xor
je
pop
adc
push
push
push
mov
adc
sbb
jo
pop
adc
out
xchg
and
call
lods
mov
push
push
adc
fnstenv
lret
push
xchg
and
out
xchg
and
add
dec
test
xor
mov
push
shlb
out
jg
xchg
and
push
inc
mov
arpl
fsubp
adcb
dec
xchg
sub
and
sub
or
ds
dec
xchg
es
pusha
dec
mov
xor
loop
insb
adc
xor
xchg
and
aam
cmp
pop
adc
jmp
sbb
inc
fwait
xor
ret
mov
pop
adc
mov
adc
push
pop
test
mov
xchg
and
lds
add
mov
mov
adc
sub
int3
cmpsb
xor
mov
adc
sbb
or
lea
cmpl
fldcw
jnp
inc
loop
js
and
adc
sub
cmpsl
sahf
arpl
fildl
pop
inc
sbb
adc
adc
inc
sub
lahf
cmp
sub
js
mov
mov
or
divl
daa
rcrl
pop
aad
das
inc
repz
adc
fstp
cmp
push
mov
outsl
mov
test
std
sbb
or
sbb
dec
xchg
pop
jge
int
sub
xorl
mov
cs
aam
popf
jb
fwait
sbb
fwait
xlat
movsl
call
push
clc
or
mov
enter
loopne
test
push
dec
inc
push
inc
in
cli
mov
jle
in
or
adc
xchg
bnd
call
push
fidivs
inc
outsl
fwait
sar
or
add
adc
or
xchg
mov
mov
adc
push
and
xchg
fwait
cmp
adc
add
xor
cmpsl
pop
test
dec
mov
fbld
adc
cmc
stc
scas
add
pop
adc
fs
dec
push
mov
or
dec
mov
test
mov
xor
loop
or
adc
rsm
or
sar
dec
push
iret
push
out
es
shl
mov
adc
fs
push
clc
inc
dec
jns
xor
les
dec
or
incb
push
dec
cld
xchg
ss
mov
jb
cmp
jbe
cmpsb
add
jmp
out
in
cmp
jecxz
mov
push
fstpt
push
xchg
sbb
aam
lock
cmc
leave
mov
ja
xor
pop
mov
sub
inc
xchg
xor
cs
mov
cmpsl
or
mov
push
mov
fnstsw
mov
nop
leave
pop
adc
cld
fs
or
mov
xor
xor
or
adc
adc
adc
pop
ss
dec
adc
shll
clc
in
cmp
or
popa
push
adc
inc
fists
adc
repnz
adc
or
or
xchg
mov
and
add
or
adc
push
or
out
jecxz
outsl
fimull
clc
or
cld
pusha
push
adc
outsl
push
or
shlb
or
cmp
sub
jno
fiadds
aam
test
dec
xchg
pop
mov
in
mov
push
mov
sbb
pop
push
or
jb
clc
or
xlat
lds
ficomps
mov
daa
sub
loope
xorl
js
arpl
adc
lcall
outsb
fstpt
and
mov
pop
cmp
xor
cld
pusha
push
adc
adc
sbb
pop
mov
mov
push
mov
lea
stc
aad
add
jecxz
es
adc
xor
push
lods
pop
mov
sarb
loop
mov
roll
cmp
insl
push
repz
dec
pushf
cmp
mov
test
push
movsb
test
jb
jecxz
loop
push
push
xor
mov
mov
fsubrs
repnz
xlat
daa
xchg
pop
rclb
dec
xchg
push
cmpsl
push
fcmovnu
push
fs
xor
fmull
imul
mov
stos
cld
pop
mov
pop
rcll
jp
sub
xor
push
push
and
cs
das
pushf
int3
pop
mov
cmp
mov
ljmp
xchg
mov
test
inc
mov
daa
cmp
sub
scas
pop
sbb
sub
mov
pop
andb
inc
scas
lea
sub
mov
lea
mov
dec
cmc
lea
push
testl
clc
adcb
sarl
lcall
fsts
lods
sbb
test
stos
ficoml
enter
jmp
inc
test
push
lahf
sub
mov
sahf
jns
cwtl
jnp
addb
imul
outsb
fxch
push
push
adc
aam
sub
adc
mov
fsubs
nop
in
pop
adc
pop
xlat
cwtl
testb
sbb
sub
mov
jae
push
mov
lret
shrl
js
sbb
pop
ret
es
insb
rclb
inc
popf
mov
or
add
adc
push
mov
dec
mov
xorl
leave
pop
adc
adc
push
mov
movsl
leave
cwtl
pop
cli
lds
sbb
pushf
jmp
mov
test
push
out
push
mov
adc
mov
cmpsb
mov
and
adc
js
adc
iret
jmp
mov
pop
xor
loop
fidivs
in
fsubr
les
pop
test
in
mov
lcall
std
lcall
adc
mov
lods
jo
xor
xor
lds
dec
sub
ds
popf
push
mov
push
lcall
les
test
outsl
jne
xchg
or
loop
mov
xor
es
mov
mov
decb
push
jno
std
mov
adc
arpl
adc
fisubrs
lds
push
clc
pop
sub
shl
cmp
dec
cld
xchg
leave
rclb
push
push
fcmovnu
dec
ljmp
fucom
mov
inc
daa
popa
hlt
cwtl
cld
pop
data16
mov
dec
push
sub
dec
sub
xchg
repnz
mov
xchg
adc
mov
stc
mov
pushf
push
in
clc
or
ljmp
add
adc
adc
ret
fs
adc
outsb
xor
and
or
outsb
bound
movsl
lret
fs
mul
dec
lea
mov
call
push
dec
out
cmp
out
sub
push
sahf
or
stc
movsl
dec
xchg
mov
and
xchg
fimull
clc
or
cld
pusha
push
adc
xchg
fcomps
lcall
xchg
and
call
test
mov
into
fucom
addr16
xor
sub
ss
jbe
fnstsw
rorb
mov
dec
mov
mov
add
sub
cmp
mov
sub
mov
lods
mov
aas
cmp
mov
and
movsl
dec
xchg
push
adc
dec
xchg
and
bound
outsl
fidivl
dec
pushf
xchg
dec
popf
mov
test
scas
pop
out
xor
jo
or
aas
imul
dec
inc
repz
and
loopne
je
or
sahf
and
loopne
ja
push
out
and
pop
dec
push
jg,pn
enter
aas
sub
ss
ficoml
dec
bound
fidivl
rcrl
and
leave
mov
es
jno
push
mov
fildl
fidivl
dec
jmp
adc
pop
jne
pop
cld
movsl
dec
xchg
push
jmp
cmp
xchg
pop
in
cmp
xchg
jno
lret
loop
sub
jbe
adc
dec
gs
xchg
xchg
daa
dec
out
sahf
xchg
sub
aaa
dec
jne,pt
mov
cs
scas
xchg
cs
or
movsl
push
and
and
xor
cwtl
xor
leave
adcb
sub
ss
inc
out
mov
icebp
inc
fwait
es
inc
mov
out
hlt
dec
stos
je
mov
stos
je
jmp
movsb
je
or
lea
jo
ds
outsl
xlat
je
fcomi
lods
insb
ret
pop
add
push
sbb
sbb
and
jmp
mov
cmpsl
lret
sahf
lock
jecxz
xor
or
push
adc
pusha
fwait
pop
jmp
sbb
je
or
fidivl
sub
xchg
addr16
xchg
out
sbb
mov
aad
lods
push
lret
cmp
or
hlt
or
cs
cmc
fdivl
mov
test
dec
or
ret
sahf
cmpsl
and
lcall
or
and
int3
xchg
push
mov
rcr
stos
jne
push
arpl
js
or
es
hlt
or
hlt
or
jno
jp
sub
or
scas
sbb
mov
or
jb
inc
lock
in
push
in
pop
mov
arpl
pop
imull
xor
pop
sub
in
lret
andb
sbb
fstpt
mov
fnstcw
sbb
aam
xchg
adc
xor
fstl
sahf
aam
mov
sub
mov
shl
je
or
and
pop
mov
sub
int3
out
addl
jmp
enter
pop
add
aas
mov
loope
and
cmp
mov
jne
mov
insl
fnstenv
xchg
mov
leave
xor
cld
in
jno
pop
mov
jne
and
sahf
inc
push
push
sbb
mov
adc
push
or
cld
pusha
push
adc
das
xchg
pop
mov
leave
pop
adc
add
adc
mov
enter
fldcw
xchg
jne
or
and
jne
fwait
call
es
leave
pop
adc
mov
repnz
sub
mov
data16
lds
sub
loopne
pop
adc
push
adc
push
adc
pushf
xor
ficompl
adc
xor
ret
inc
pusha
push
jp
xor
dec
loopne
std
movsb
out
mov
out
pop
pop
dec
dec
xchg
sub
jb
cld
pusha
push
adc
fwait
pop
mov
sbb
xlat
mov
lods
sar
cs
xchg
xor
pop
outsb
loop
daa
push
adc
in
aaa
data16
fidivl
adc
mov
lea
mov
call
and
rclb
jno
push
int3
pop
adc
or
arpl
fidivl
mov
mov
pop
add
mov
and
pop
adc
push
mov
pop
std
movsb
dec
xchg
xchg
movsb
es
and
xchg
xchg
gs
xchg
and
pop
adc
pop
lret
popa
fcmovnb
popa
sbb
adc
aaa
lock
pop
cmp
lods
fndisi(8087
imul
pop
loopne
mov
adc
cmpsl
loope
out
leave
js
fs
adc
lcall
xchg
and
add
in
imul
mov
sub
ljmp
test
cmp
fidivl
pop
lods
pop
mov
xchg
mov
mov
aad
pop
loopne
xor
adc
daa
mov
pop
jbe
lret
out
rcr
mov
cs
pop
adc
mov
stc
fbstp
fdivl
mov
lds
push
int3
pop
adc
lea
and
mov
aam
popf
pusha
ljmp
daa
insl
shl
cmp
add
inc
inc
leave
pop
adc
fs
movsb
leave
pop
adc
sarb
mov
adc
push
cmpsl
ror
adc
loopne
pop
adc
lods
icebp
jl
push
adc
xchg
lahf
addr16
adc
push
int3
pop
adc
test
iret
rcl
pop
and
adc
jge
addl
pop
or
leave
ljmp
scas
pop
inc
adc
leave
lods
mov
arpl
addr16
jecxz
loopne
daa
test
or
push
adc
mov
popa
pop
push
enter
in
mov
leave
add
scas
pop
jle
fwait
iret
nop
stos
inc
fwait
lahf
mov
inc
pushf
sub
sbb
stc
test
jbe
jne
mov
rcr
leave
mov
insb
or
jae
fimuls
adc
stos
mov
daa
movsb
push
push
ljmp
sahf
sub
insl
mov
jbe
shrb
inc
jno
leave
dec
jns
mov
outsb
and
add
data16
mov
int3
adc
mov
jg
les
xor
push
out
pop
test
lahf
sub
shl
stos
in
jo
rcr
les
mov
leave
pop
adc
lods
jbe
fsubrs
stos
mov
addb
add
leave
pop
adc
mov
imul
std
sbb
or
lock
mov
out
or
flds
dec
and
adc
xor
push
adc
dec
lea
jne
xchg
pop
outsb
mov
add
pop
adc
lret
jg
pop
mov
xchg
mov
jecxz
cli
xor
into
pop
and
add
sub
and
test
xor
add
pop
adc
icebp
mov
pop
add
add
pop
stc
sbb
jnp
in
push
inc
out
popf
jbe
xchg
mov
mov
out
call
mov
xor
jge
fs
test
enter
sub
lret
and
arpl
adc
movsb
mov
mov
imul
mov
mov
ficoms
pop
adc
mov
jb
icebp
in
push
mov
push
push
mov
pop
adc
dec
xchg
and
call
in
pop
int3
cmpsb
dec
pushf
add
out
test
ljmp
sub
mov
aam
aam
mov
pop
and
dec
pushf
cmp
lret
adc
sub
jge
xor
movsb
dec
pop
and
pop
clc
or
sub
add
adc
push
int3
pop
adc
jecxz
fistpl
push
xor
sub
jbe
dec
lea
ss
mov
ja
or
shlb
inc
and
push
xchg
fistl
cmp
ss
subl
stos
sahf
dec
jge
adc
and
stc
popf
cmp
xchg
dec
and
lods
shll
and
push
movsb
call
ret
cmp
pusha
xlat
push
insl
clc
or
cld
pusha
push
adc
push
mov
rclb
loop
and
out
xchg
and
sbb
nop
ds
sub
dec
xchg
sub
push
dec
xchg
pop
jbe
fnstsw
fisubs
fstpl
fisubs
dec
xchg
outsl
dec
nop
add
adc
xlat
fwait
xchg
and
dec
or
dec
or
xchg
es
and
push
cmpsb
push
jb
add
jbe
pop
aad
daa
dec
test
dec
outsb
ds
adc
mov
and
ficoml
xchg
and
test
loope
loop
andb
jmp
insl
push
out
fldenv
mov
or
sub
mov
push
inc
sub
sub
lds
push
int3
pop
adc
cld
jb
inc
bound
adc
dec
mov
and
insb
mov
push
push
jo
or
bound
mov
sbb
and
sbb
mov
xchg
lea
adc
inc
adc
pop
jmp
or
aas
jge
pop
inc
sbb
inc
pop
in
adc
outsb
ljmp
inc
loop
fisubrl
push
scas
pop
add
or
mov
loopne
rol
xor
fwait
addr16
cmp
adc
shlb
or
mov
fadd
or
mov
rcr
cmp
arpl
aam
fs
pop
cmp
lods
fcomps
sbb
mov
adc
jmp
pop
mov
stos
fidivrl
test
shlb
inc
int3
pop
add
pop
adc
adc
jno
mov
stc
scas
sbb
dec
jbe
cwtl
ljmp
inc
fs
xor
aaa
jge
or
in
or
cld
xor
or
loope
sbbb
adc
adcl
mov
adc
or
adc
adc
add
sub
stos
lock
aad
or
cwtl
dec
push
inc
stos
outsb
and
aas
jg
outsl
jnp
xchg
nop
iret
dec
mov
adc
xchg
dec
mov
adc
aam
and
adc
clc
pop
add
push
sbb
or
hlt
or
jnp
fisubrl
xchg
adc
or
adc
xchg
icebp
mov
stos
div
subl
mov
add
shll
and
and
sahf
add
and
cmp
and
inc
fadd
push
imul
stc
shll
enter
sub
or
pop
mov
xor
sub
push
imul
mov
cmp
cwtl
mov
push
clc
jp,pn
gs
fwait
and
inc
int3
mov
or
out
ret
cld
cmpsb
xchg
pop
icebp
lret
pop
call
adc
jmp
or
cld
pusha
push
adc
xor
mov
lret
xlat
and
jmp
mov
test
int3
pop
adc
cmp
mov
lret
mov
cmpsl
dec
movsb
inc
add
ss
movsb
loopne
es
xchg
sub
sti
cltd
mov
insl
fidivrl
cmp
pusha
rolb
movsb
sbb
push
adc
inc
and
sub
ljmp
ljmp
pop
mov
loopne
pop
mov
movsb
xor
sahf
outsb
cmp
adc
dec
pushf
scas
push
pop
pop
adc
fildl
loop
adc
pop
mov
push
icebp
imul
les
inc
dec
pusha
cmp
push
movsl
repnz
shl
imul
xor
and
add
mov
ds
xchg
imul
push
scas
xchg
aas
xor
ds
xchg
sub
ds
cmp
rolb
imul
push
cmp
loopne
sbb
or
inc
ja
mov
jae
subb
lcall
test
rcrb
test
out
jecxz
sbb
or
stos
fwait
loop
push
lock
mov
orl
movsl
dec
and
scas
push
push
jmp
push
inc
cmp
bound
xchg
jae
pop
idivb
and
stos
sahf
cmc
cmp
ds
dec
push
fnstsw
dec
fwait
dec
int3
sbb
shll
push
xlat
imulb
icebp
outsb
push
cld
sahf
sbb
cmp
and
mov
bound
pop
mov
fldenv
mov
adc
cmp
fst
mov
and
jo
cmp
inc
sti
mov
test
push
mov
aas
inc
scas
pop
lods
loope
or
mov
mov
insb
mov
jmp
cmc
in
push
outsb
inc
mov
xchg
test
ss
cmc
lcall
and
sub
adc
pushf
sub
shl
pop
xor
push
ljmp
fs
adc
aaa
testl
adc
mov
sarl
add
dec
les
adc
mov
rcr
insb
shlb
mov
int
test
fsubs
mov
sahf
xchg
sub
cmpsl
in
insl
fldenv
push
stos
xor
fs
jne
push
mov
pop
mov
jl
mov
mov
dec
mov
int3
lock
cltd
jbe
pusha
adc
out
mov
repz
jbe
adc
sbb
in
jmp
aam
mov
iret
shlb
jmp
xor
cmpsb
fidivs
outsb
mov
push
cmp
xor
mov
div
mov
mov
arpl
sbbl
sub
ljmp
adc
stos
popf
ret
sti
push
add
and
pop
stos
sub
pop
lret
test
jg
push
jbe
adc
sub
pop
jb
and
bound
xorl
jmp
cmp
ljmp
pop
ret
xor
push
fisubl
loopne
fdivrp
sahf
push
pop
call
lds
dec
add
lea
push
repnz
pop
repz
sbb
push
inc
or
push
mov
mov
jecxz
push
mov
and
test
mov
fdiv
mov
push
dec
sub
call
or
push
mov
pop
in
xchg
push
insl
lcall
sub
push
in
imul
mov
push
inc
adc
mov
adc
sub
ss
mov
push
mov
into
xor
cwtl
cld
arpl
adc
mov
fwait
sbb
dec
in
ficompl
sbb
cmp
ret
lret
push
push
sarl
lock
dec
push
xchg
pop
jb
and
pop
mov
lods
jb
add
mov
and
jb
and
cmp
mov
cmp
fisubrl
cmp
lods
mov
aad
push
shlb
pop
adc
cmp
adc
dec
xor
repz
or
mov
xchg
pop
jbe
lret
cmp
outsb
in
mov
or
mov
outsl
in
xchg
fidivrl
out
adc
dec
cmp
mov
mov
pop
and
loopne
add
pop
fs
movsb
cmp
add
mov
push
cs
and
test
and
jae
fistpll
mov
push
and
insl
je
insl
fisttpl
lods
arpl
adc
lea
xchg
mov
pop
adc
pop
scas
mov
xchg
xchg
and
imul
and
loopne
adc
lea
test
add
out
dec
popf
cld
ja
jb
fistpll
mov
sar
movsl
out
xor
mov
movsl
mov
sbb
add
fisttpll
insb
dec
xchg
mov
lcall
outsb
fdivs
push
jns
inc
sbb
jbe
and
adc
in
mov
push
adc
aaa
out
mov
sbb
insb
rcll
repnz
adcb
jmp
movsb
push
fcomps
jge
sub
rcrl
mov
mov
and
push
adc
lea
sbb
xor
cmp
lret
std
rsm
dec
xchg
int
sbb
ds
data16
mov
push
dec
movsb
sbb
xor
gs
addr16
jmp
rorl
ljmp
adc
fldl
popa
push
adc
dec
subl
outsb
cltd
les
pop
ret
mov
lods
dec
stos
and
or
push
cmpsb
dec
fwait
mov
ja
xchg
and
aas
insb
shrl
lcall
movsb
fsts
pop
fimuls
or
fnstenv
push
push
scas
subb
repz
adc
sbb
ret
push
adc
xor
dec
shll
sbb
push
mov
inc
enter
test
push
fcomps
ljmp
loopne
or
es
sub
cwtl
jb
adc
int3
pushfw
mov
aam
fsubrs
into
adc
add
ss
mov
lret
adcb
jmp
push
or
jmp
adc
mov
pusha
mov
jecxz
push
stos
inc
cmc
pop
add
sub
and
inc
divb
repz
mov
and
push
scas
jo
out
gs
fcoms
ret
jge
cwtl
out
inc
jnp
or
lods
rorb
lock
or
add
mov
pop
mov
pop
fidivl
and
inc
aas
mov
dec
repnz
std
js
bound
adc
jecxz
ret
cwtl
dec
cld
out
mov
push
fsubrl
pop
sub
jge
cli
and
jnp
addb
adc
fucom
addl
and
push
push
jecxz
push
cld
sub
dec
sub
out
xlat
insl
hlt
dec
inc
jbe
lret
sub
push
cmpl
out
hlt
or
sub
sti
inc
cmp
mov
in
push
scas
int
jmp
mov
pushf
jo
pop
adc
cmpsb
adc
test
aas
add
lret
fisubl
into
mov
push
xor
lods
pop
in
sbb
xchg
and
xor
inc
xchg
sub
sahf
hlt
lahf
into
jb
adc
adc
rcrb
call
push
jbe
and
push
adc
outsb
ds
adc
pushf
dec
enter
sbb
xchg
rcr
dec
arpl
aad
pop
fwait
add
sbb
fidivrs
cmpsl
dec
push
sbb
or
lods
xchg
push
pop
mov
push
dec
cld
pusha
push
adc
pop
adc
push
jbe
dec
lea
ss
mov
dec
xchg
mov
fisubrs
fwait
and
outsl
fcmovnbe
in
adc
xor
xor
data16
lock
rcll
fbld
push
movsb
out
add
jae
sub
jb
incb
and
sub
jo
daa
mov
push
adc
rcrl
mov
sbb
out
mov
dec
outsb
mov
and
push
test
sbb
movsl
adc
aam
arpl
lods
xor
insl
xor
sub
mov
lods
bound
stc
fidivl
mov
inc
xchg
sbb
insl
push
sub
imulb
movsb
dec
stos
sahf
dec
jge
and
or
cmp
jnp
in
test
add
pop
add
movsl
dec
pop
push
cmp
cmpsl
adc
fdivs
jno
push
lods
lods
mov
cmpsb
out
adc
aam
outsb
fsubs
test
dec
fwait
cli
jno
je
int3
mov
mov
pop
outsb
stos
dec
xchg
xor
dec
loope
aas
cmp
stc
aaa
sub
jae
jp
mov
stos
das
fnstcw
sub
dec
jns
sub
mov
test
not
ret
jbe
das
mov
dec
mov
push
adc
fdivrl
scas
cmp
jl
mov
mov
movsb
sbb
and
xchg
and
movsb
sbb
or
in
adc
jle
adc
loope
pop
inc
adc
xor
and
ds
pop
repz
out
mov
adc
fidivl
into
xor
mov
rcl
inc
rorb
and
pop
sbb
mov
push
dec
sbb
pop
pop
sbb
into
xchg
and
dec
lea
mov
jge
nop
push
je
mov
mov
jmp
popf
push
adc
cltd
es
xchg
pop
call
ret
inc
fwait
lods
fsts
jge
push
mov
mov
dec
sarl
cld
or
add
adc
dec
mov
mov
cs
outsb
cltd
jbe
inc
outsb
cwtl
cld
xor
xor
cs
adc
stos
int3
adc
iret
push
and
pusha
push
call
leave
sbbl
aad
dec
bound
sub
fcmove
push
inc
ss
repz
xchg
adc
fwait
imul
mov
pop
sub
ret
sahf
sub
xor
faddl
ja
cwtl
leave
pop
adc
adc
push
push
test
dec
mov
cmp
pop
adc
arpl
outsl
xchg
rcrb
fmull
xchg
ss
loopne
or
dec
iret
add
adc
inc
fwait
dec
aas
lret
push
es
lahf
leave
inc
icebp
mov
pusha
call
mov
sti
sub
stos
div
pusha
jg
xchg
std
mov
ds
jmp
cli
aam
cli
jmp
fucom
jle
push
pop
sbb
adc
call
test
dec
sahf
cld
nop
mull
mov
dec
push
xchg
sub
lds
lods
fs
jmp
jg
push
in
or
mov
lret
cld
movsb
mov
mov
sub
fldt
pushaw
jle
movsb
leave
add
adc
in
addb
cmp
mov
movsl
dec
cmpl
addb
cmp
pop
pop
xor
push
cmpsl
fld
addb
mov
sub
je
sub
mov
adc
mov
and
popf
pushf
cmp
mov
les
shll
dec
xchg
push
cmp
push
cmpsl
ja
cmp
dec
call
scas
in
sub
inc
xchg
and
call
jb
pop
lods
pop
mov
xchg
lea
ficomps
mov
loopne
or
push
dec
cld
pusha
push
adc
mov
lods
add
arpl
push
push
call
pop
cmp
jbe
and
in
mov
xchg
jb
cmp
xlat
in
or
adc
movsb
fsubrl
jns
and
loopne
sub
imul
fidivl
mov
jecxz
or
cld
pusha
push
adc
push
cmpsl
mov
sbb
arpl
push
and
insl
mov
insl
fstpt
sub
mov
out
in
xchg
pop
pop
mov
cmp
or
push
push
add
mov
sub
cwtl
mov
insb
fstpt
daa
cmp
lds
roll
cmpsl
sbb
out
xchg
xchg
push
repnz
lds
outsb
fcom
daa
push
dec
filds
pop
cmp
pop
je
ja
cs
fdivs
test
das
and
outsb
push
test
in
mov
adc
mov
sub
inc
adc
sub
mov
sub
outsb
xchg
gs
out
out
notl
jp
fisttpl
testl
test
jmp
aas
cmp
je
mov
mov
bound
push
insl
loope
or
daa
call
mov
sbb
pop
mov
insl
or
inc
stc
test
adc
shr
rcr
ljmp
jns
jmp
fnstenv
dec
xchg
sub
or
aaa
sbb
push
inc
lods
sbb
and
mov
stos
xchg
sti
adc
stos
fwait
mov
push
in
cmpsl
and
dec
xchg
adc
jbe
push
jae
out
push
mov
dec
sbb
fisubrl
push
fs
push
and
xlat
mov
fxch
cmp
mov
rorl
clc
pminub
sub
jmp
movsl
lods
loope
cli
lds
sti
inc
xchg
lds
ljmp
pop
gs
cmp
cwtl
loopne
pop
fsubs
stos
pop
js
fcoms
mov
inc
test
addr16
mov
popf
sahf
sub
and
fwait
adc
xor
lahf
push
js
adc
aaa
cmp
idivb
mov
jae
pop
hlt
std
sbb
push
add
inc
pop
xor
inc
repnz
inc
inc
mov
addr16
mov
gs
jl
call
in
add
in
sub
adc
push
mov
pop
adcl
inc
sub
outsb
decb
icebp
mov
cld
int3
fs
push
mov
jmp
and
xchg
cmpb
cmp
xchg
ds
nop
rclb
sbb
dec
mov
pusha
leave
sbb
cli
faddl
push
push
xchg
movsl
aad
insl
adc
dec
jecxz
mov
sub
insl
cmc
inc
sub
xchg
dec
call
push
dec
fstpt
outsl
push
jne
aam
push
adc
add
mov
pop
test
int
mov
loope
orl
mov
add
push
int3
pop
adc
lea
frstor
xor
lods
pop
andb
loop
in
dec
in
jns
sub
xor
lea
mov
fldcw
dec
mov
xchg
push
mov
push
int3
pop
adc
and
movsb
inc
add
ss
lahf
sti
imul
xchg
pop
stos
jl
movsb
cmp
fisttps
adc
push
ss
xor
mov
lcall
hlt
jno
xchg
push
mov
mov
sar
pop
icebp
push
cld
adc
imul
mov
mov
insl
fidivrl
movsl
ds
dec
pushf
dec
popf
dec
gs
adc
cmp
mov
push
int3
pop
adc
mov
cmp
lea
insl
and
mov
pop
popa
mov
xchg
pop
xchg
mov
shll
mov
push
mov
mov
dec
aas
mov
and
cmp
sbb
and
loopne
or
mov
lods
scas
pop
loopne
dec
or
xchg
and
xchg
pop
xchg
sub
mov
scas
and
xchg
and
and
rolb
cs
mov
jmp
inc
movsb
add
jne
push
jnp
out
cmpsb
dec
mov
mov
pop
xchg
sub
push
dec
xchg
out
repnz
mov
fimull
xlat
cmp
or
dec
mov
and
mov
mov
aad
push
jb
push
int3
pop
adc
and
mov
fildll
ds
rorl
sub
pop
cmp
mov
sbb
xorb
shr
divps
nop
adcl
push
daa
mov
fwait
es
pop
jle
push
int3
pop
adc
sub
mov
xor
js
jb
xchg
mov
lret
addl
push
push
pop
inc
popf
mov
push
in
add
daa
test
push
jp
adc
or
pop
cs
push
int3
pop
adc
dec
adc
shrb
pop
and
adc
cwtl
and
pop
aaa
sub
adc
ror
int
cli
and
call
xchg
mov
mov
jae
sub
inc
scas
push
test
mov
ret
dec
fwait
push
sub
xchg
loope
mov
sbb
mov
sbb
dec
xchg
scas
add
sarb
int3
es
push
mov
mov
mov
xor
mov
sub
sar
sbb
loopne
shl
bound
test
push
push
add
bound
inc
scas
rep
dec
xor
mov
jbe
pop
push
jmp
stc
xchg
addr16
repnz
push
xchg
jge
mov
inc
ljmp
popf
mov
fisttps
inc
mov
scas
xor
adc
cmp
pop
inc
call
sub
aaa
jle
or
inc
aaa
push
sub
icebp
push
inc
jne
fs
adc
pop
pop
cmp
out
sub
test
xchg
test
dec
mov
sahf
cmc
jne
daa
cmc
leave
pop
mov
mov
mov
mov
fs
pushf
push
pop
in
sbbl
sbb
in
pop
es
ljmp
ja
mov
int3
pop
adc
mov
rorl
mov
lret
std
push
jne
fdivs
cmp
imul
cmp
mov
outsl
push
int3
pop
adc
loope
pop
out
xchg
push
loop
call
mov
dec
xor
pop
aas
push
xchg
jmp
push
call
pop
mov
into
xchg
flds
mov
push
jmp
sbb
inc
lcall
andb
sub
daa
insb
cwtl
push
mov
mov
ss
movsl
add
pusha
movsb
mov
xchg
pop
jno
out
mov
xor
mov
sub
out
jo
pop
adc
popf
cmp
xchg
mov
adc
into
mov
add
and
andl
fstl
xchg
xchg
pop
cmp
sbb
pop
xchg
and
adc
cmp
shll
jb
inc
loopne
dec
push
xlat
mov
lods
xor
aaa
dec
xchg
mov
adc
push
adc
and
fwait
lock
mov
xor
pop
xchg
and
loopne
xchg
push
lock
pushf
cmp
leave
fdivrs
xchg
sub
xchg
pop
iret
dec
push
movsb
mov
or
and
ja
clc
arpl
mov
adc
pop
and
pop
mov
push
movsb
pop
add
andl
xor
push
out
addr16
adc
loopne
dec
xchg
sub
dec
bound
inc
dec
xchg
and
xor
xchg
push
xor
xor
xchg
and
movsl
dec
xchg
xchg
mov
xor
adc
add
leave
xchg
and
movsl
cmp
sahf
push
movsb
dec
test
insb
fstpt
loopne
dec
xchg
sub
movl
dec
cmp
jmp
adc
adc
je
push
xor
mov
aas
mov
cmc
sbb
imul
call
xor
mov
mov
imul
movsb
xchg
or
add
adc
movsl
fmuls
fdivl
and
dec
pop
mov
cltd
mov
sub
pop
out
mov
data16
out
xchg
imul
pop
test
shrb
mov
adc
shrb
and
loopne
lea
and
test
cltd
xchg
push
jge
and
stos
fsub
or
add
adc
iret
dec
lods
sbb
leave
inc
jg
jno
and
das
call
adc
inc
andl
xor
pop
fwait
push
and
and
dec
bound
fnstenv
dec
xchg
cmpsl
sub
adc
dec
xchg
les
ss
pop
mov
dec
dec
sbb
in
outsl
and
or
mov
cmpsb
shrb
mov
scas
or
fldcw
bound
aam
fs
dec
sbb
fs
mov
adc
mov
fnstenv
push
adc
pusha
mov
jne
movsb
dec
loope
enter
add
fdivl
jne
xchg
or
pop
cmp
pop
or
add
adc
out
imul
push
adc
call
pop
ljmp
adc
cmpsb
in
adc
fmuls
into
adc
mov
mov
adc
pop
test
ss
in
jmp
les
mov
cltd
push
imul
push
or
mov
mov
sti
xchg
inc
add
cmove
call
pop
scas
loopne
or
fs
pusha
push
adc
loopne
or
adc
mov
cmp
lcall
cmp
inc
ds
gs
ret
int3
inc
aad
mov
or
adc
loopne
add
pop
mov
dec
xchg
orb
negl
dec
std
pop
cld
or
cld
pusha
push
adc
add
loop
inc
daa
popa
cmc
push
lods
and
xchg
push
xor
fwait
nop
leave
pop
adc
push
xchg
lds
xchg
leave
pop
adc
test
repnz
sbb
je
cmp
movsb
rcl
adc
dec
mov
adc
or
push
cli
inc
in
rorl
or
xchg
addr16
jmp
sti
fstpl
pop
xor
fsts
jge
imul
dec
fwait
pop
ss
fistps
test
mov
sbb
and
pop
ds
xchg
push
mov
push
int3
pop
adc
mov
ss
ret
cli
imul
push
int3
pop
adc
jbe
mov
lods
mov
out
aam
call
int3
pop
adc
out
push
push
int3
pop
adc
int3
push
int3
pop
adc
and
xchg
adc
cmp
jg
mov
pop
adc
jno
push
mov
adcb
arpl
nop
call
out
push
mov
mov
mov
jecxz
jns
mov
pop
adc
ret
xchg
jb
pop
lods
pop
mov
cltd
lods
pop
cmp
or
loopne
sahf
xchg
and
cmpsb
dec
loopne
or
sub
jns
lret
test
cmp
cmp
sub
pop
cmp
adc
pop
cmp
jae
dec
xchg
mov
and
lea
dec
xchg
and
psraw
out
push
mov
mov
pop
adc
stc
insl
fistpl
sbb
pop
mov
lea
outsb
fidivl
or
sub
mov
mov
aad
imul
pop
adc
adc
mov
lock
sub
jae
pop
ja
pop
outsl
jns
mov
mov
push
int3
pop
adc
push
jno
pop
scas
pop
mov
xchg
mov
mov
add
push
adc
mov
clc
jne
mov
and
inc
pop
cmpsl
call
pop
cmp
sub
sbb
shrl
cmpsb
jmp
cld
or
cld
pusha
push
adc
mov
xchg
add
mov
cmp
data16
mov
push
int3
pop
adc
into
outsb
hlt
dec
test
leave
mov
sbb
adc
xchg
push
cmp
roll
jle
jbe
pusha
or
mov
cld
filds
adc
aaa
jno
js
push
adc
sub
and
push
sub
push
movsl
enter
mov
scas
addr16
adc
mov
idivb
outsb
xchg
mov
xor
push
adc
out
das
and
jge
mov
call
cmp
pushf
xlat
pop
adc
jnp
stos
pop
mov
js
push
adc
ljmp
ja
mov
mov
adc
push
mov
cmp
dec
jb
mov
xchg
dec
push
int3
pop
adc
xor
push
fmull
fdivrs
sbb
xor
push
jmp
and
sub
push
inc
or
jp
out
push
inc
fdivs
in
push
in
pop
add
mov
jmp
dec
mov
cs
jg
mov
xor
mov
cltd
fbld
outsl
mov
inc
mov
test
mov
sub
xor
cmp
jbe
and
adc
mov
rclb
stc
or
loope
insl
or
xchg
shlb
in
sbbb
out
add
mov
or
mov
xor
cld
arpl
adc
xchg
push
int3
pop
adc
mov
rorl
mov
std
cld
push
jne
repz
push
jne
test
or
shll
add
dec
icebp
stc
push
aad
jbe
inc
push
jns
cli
pop
cmpsb
push
sbb
mov
jno
out
inc
mov
pop
test
inc
sub
ret
push
sarb
push
mov
cmp
inc
sarb
inc
gs
clc
cli
pop
adc
xchg
xchg
inc
jmp
jmp
mov
jl
mov
mov
adc
push
fsts
jge
xchg
dec
movsb
leave
pusha
push
idivb
ror
fldcw
jb
mov
sub
cmp
inc
inc
movsb
dec
stos
sahf
dec
jle
mov
xchg
insb
or
cmp
adc
outsb
daa
mov
ds
adc
sbb
and
mov
pushf
xchg
add
or
xchg
sub
dec
xchg
push
repz
xor
cmp
loope
rcll
arpl
adc
jbe
sar
mov
and
lods
arpl
jle
mov
xchg
sub
jl
lds
dec
xchg
outsl
cmp
dec
out
xor
mov
pop
adc
cltd
lods
pop
pop
imul
ficompl
and
lods
call
cmp
or
and
cld
pusha
push
adc
enter
fstp
jae
lret
adc
adc
rcrb
test
outsb
fstpt
sub
lds
leave
xchg
push
cmp
mov
loopne
dec
xchg
and
ffreep
mov
in
or
xor
xchg
and
movsl
out
pop
and
dec
xchg
and
addl
lods
xor
rep
or
add
adc
bound
insl
adc
xchg
mov
xchg
icebp
and
cmp
sub
iret
xchg
and
insb
xor
imull
push
sarb
mov
sub
in
sbbb
cmp
or
test
dec
jnp
out
push
outsl
das
shll
pop
in
iret
xchg
and
fsts
dec
arpl
stos
pop
pop
cmp
xchg
push
cmp
and
cmp
sti
dec
xchg
mov
mov
repnz
push
daa
sub
sub
fwait
mov
adc
sub
pop
hlt
xlat
lea
inc
shlb
daa
xor
loop
sub
cmp
xchg
adc
push
or
and
mov
mov
fwait
sbb
bound
cmp
imul
xchg
cli
jo
jmp
lds
or
mov
lods
or
cld
pusha
push
adc
fucomip
or
adc
out
add
mov
aad
pop
sbb
adc
cmpsb
outsb
fdivrs
popf
loope
push
int3
pop
adc
les
rcll
cs
fisubs
push
dec
sbb
sbb
call
call
pop
repz
mov
adc
stos
or
adc
mov
iret
aad
sub
mov
addb
enter
jne
xchg
push
test
lds
cli
pop
add
loopne
mov
inc
xchg
cld
xchg
adc
sub
inc
sub
popf
stc
scas
adc
int
mov
pop
adc
andl
pop
adc
stos
ret
xor
sub
pop
sbb
mov
adc
jnp
mov
or
push
add
movsl
xorb
int3
lods
jbe
jp
shrb
dec
mov
mov
adc
imul
cmp
pop
adc
adc
add
xchg
push
push
cld
push
imul
mov
push
fbld
dec
and
mov
adc
aas
gs
sarl
out
data16
adc
adc
add
int3
xchg
cltd
xchg
dec
test
or
adc
jns
stos
add
in
pop
std
loop
aad
sbb
adc
sbb
mov
dec
and
arpl
or
pop
dec
pop
adc
mov
repnz
test
add
pop
pop
addb
pop
adc
jl
popf
cli
lods
sbb
push
jne
popf
popa
call
push
aas
jo
fsts
movsb
xchg
lahf
jl
fidivrl
into
cli
add
int3
mov
mov
in
popa
push
mov
dec
ficomps
inc
movsb
dec
pop
fstpl
daa
dec
xchg
loop
jg
mov
pop
adc
and
mov
fsubrl
cmp
lods
scas
stc
insl
fcmovnu
xchg
and
clc
or
add
adc
or
mov
mov
adc
ficomps
and
shll
adc
loopne
inc
pop
push
pushf
cmp
push
es
rol
dec
mov
pop
arpl
out
jecxz
sbb
fucom
mov
adc
lods
cs
dec
leave
xchg
push
xor
aas
pop
and
mov
xor
or
mov
adc
adc
sub
push
movsb
mov
and
hlt
dec
pushf
scas
loopne
pop
adc
subl
dec
out
insl
movsl
dec
xchg
push
xor
lock
movl
and
jb
push
int3
pop
adc
lods
pop
pop
jge
xor
xor
mov
mov
daa
dec
xchg
aam
fistpll
imul
rolb
test
dec
xchg
push
test
outsl
sbb
addr16
inc
repz
and
add
cli
pop
adc
fwait
mov
dec
or
adc
dec
xchg
sub
lahf
xor
sub
xor
cmp
in
pop
jmp
adc
pop
push
dec
push
cmpsb
cmp
xchg
xchg
sub
push
cmpsl
cmp
lods
pop
xchg
daa
in
pushf
dec
jo
mov
mov
dec
insb
lea
xchg
test
xchg
xchg
ja
and
out
dec
xchg
jmp
sub
fnstcw
push
int3
pop
adc
mov
aas
out
aam
ljmp
es
push
movsb
negl
push
shlb
pop
roll
adc
push
pop
mov
mov
lods
sbb
leave
xor
jne
cld
inc
pusha
push
adc
daa
mov
stos
push
ret
ljmp
sahf
and
stc
push
sub
cwtl
jge
jecxz
adc
adc
lcall
aam
pop
stc
push
sub
mov
and
push
adc
ljmp
pop
mov
xchg
xchg
jge
mov
xor
pusha
push
adc
lret
push
int3
pop
adc
add
xchg
and
mov
enter
pop
sbb
sbb
sbb
sbb
mov
movsl
and
push
outsb
xchg
out
sub
fdivr
adc
mov
lods
cmp
dec
outsb
adc
movsb
stos
fmul
out
and
mov
pop
mov
retw
mov
add
in
xor
imulb
popa
sbb
mov
imul
cltd
out
xchg
add
pusha
mov
fdivs
mov
in
mov
inc
or
push
cmp
xor
outsl
pop
test
or
mov
adc
inc
mov
repz
xor
pop
mov
fdivrl
pop
adc
sti
sub
sbb
test
movsl
adc
add
or
or
jg
aad
dec
cltd
mov
push
xlat
rsm
or
xchg
flds
mov
cmp
decb
imul
push
jge
hlt
xor
popa
sar
js
popa
push
adc
mov
or
out
xchg
dec
push
cmp
popa
push
adc
ret
pusha
push
adc
icebp
adc
and
pop
pop
pop
xor
out
mov
add
jne
popa
call
cwtl
pop
mov
rcr
int3
xor
or
push
mov
sub
dec
into
aaa
push
das
push
dec
fcmovne
lock
add
pop
adc
lret
jbe
lock
popf
cli
lods
sbb
inc
insb
cwtl
iret
mov
or
popa
adc
scas
sbb
movsb
inc
in
xor
adc
pop
fs
adc
dec
add
push
insl
in
push
imul
xor
aad
or
out
inc
dec
in
xchg
push
jns
jae
mov
xchg
xchg
sbb
dec
xchg
pop
jno
adcb
or
and
movsl
dec
loop
frstor
jns
mov
pop
adc
xchg
xchg
ss
fcmovbe
cmp
lods
xor
dec
add
mov
push
scas
xchg
and
mov
pushf
dec
lds
loopne
dec
xchg
sub
or
aad
lods
pop
mov
mov
outsl
dec
xchg
and
cmpsl
dec
loopne
xchg
and
scas
mov
pop
adc
fnsave
mov
insl
fcmovu
xchg
sub
jb
add
adc
pop
call
push
or
str
or
xchg
jb
clc
or
cld
pusha
push
adc
lock
ret
mov
int3
pop
adc
pop
jbe
mov
out
clc
or
cld
pusha
push
adc
xchg
and
push
or
add
adc
jo
or
mov
sub
jne
into
es
pop
xchg
push
dec
xchg
push
mov
sahf
and
ret
dec
fdivl
fimull
push
or
cld
pusha
push
adc
ljmp
int3
pop
adc
loopne
lds
bnd
sub
mov
mov
pop
fstl
pop
sbb
test
fnstenv
jp
shrb
dec
xchg
push
hlt
mov
mov
clc
popf
cmp
jle
pop
fistpll
sub
nop
outsb
pop
fisubrl
adc
fsts
daa
mov
mov
push
lea
adc
icebp
mov
scas
dec
xchg
loope
sbb
stos
icebp
data16
mov
cld
arpl
adc
pop
ja
jno
inc
inc
sbb
fwait
adc
and
std
les
in
adc
xchg
xchg
push
test
xchg
daa
jae
mov
loop
and
call
jecxz
xchg
mov
or
xchg
int
push
lods
fsubl
into
push
xchg
test
dec
sub
or
pop
loope
mov
lret
xchg
fnsave
inc
adc
inc
fwait
xchg
mov
adc
add
adc
mov
loopne
sub
sti
pop
push
dec
mov
push
test
push
push
pop
push
mov
inc
add
es
and
int3
pop
adc
xchg
scas
fsubrs
mov
push
ja
push
aas
adc
ljmp
inc
icebp
or
cmc
test
sub
or
loopne
or
or
cltd
jno
cmpl
dec
pop
push
cmp
or
adc
insl
lret
jl
mov
push
mov
aam
insl
loope
test
sub
and
jae
out
lret
bound
es
je
or
cmp
outsb
mov
pop
lods
push
pop
adc
lock
test
hlt
or
dec
mov
adc
adc
xlat
repz
rorl
mov
ja
push
into
jo
adc
sub
push
inc
loope
dec
ljmp
or
adc
xor
mov
aaa
pop
inc
aas
mov
mov
push
xchg
cld
pusha
push
adc
decb
stc
test
int3
pop
adc
mov
add
les
popa
jnp
or
cmc
movb
adc
or
pop
sbb
hlt
dec
inc
test
xlat
ds
clc
fwait
loopne
mov
es
push
in
inc
adc
push
in
es
nop
mov
add
xchg
adc
adc
push
xor
jae
inc
inc
out
jae
sarl
call
jb
add
cmp
mov
xchg
sub
xor
dec
xchg
mov
call
cld
cmpsl
jecxz
inc
dec
adc
jb
mov
out
lock
shll
push
int3
pop
adc
pop
lods
pop
mov
xchg
lea
pop
clc
cli
pop
adc
sbbb
inc
out
xchg
and
shlb
loopne
enter
add
out
push
fdivrl
out
mov
movsl
dec
cmp
mov
xchg
and
cli
dec
dec
xchg
mov
jbe,pt
push
sbb
pop
sub
xchg
aas
enter
and
test
es
or
lret
sar
sub
jge
sbb
movsb
dec
pop
and
loopne
xchg
and
mov
adc
aaa
mov
cmp
push
dec
xchg
sub
loop
mov
adc
ds
cmp
dec
loopne
xchg
out
xchg
fistl
je
pop
adc
adc
mov
adc
shlb
pop
adc
push
xchg
push
int3
pop
adc
addr16
loope
mov
cmp
pop
mov
or
cmpsl
xchg
and
mov
adc
adc
mov
dec
xchg
push
mov
adc
cmp
inc
mov
sub
mov
adc
test
xchg
sub
push
fadds
adc
mov
jecxz
inc
cli
daa
xchg
sub
or
mov
aad
push
ljmp
adc
or
or
pop
mov
adc
dec
dec
xchg
push
mov
adc
adc
xor
les
push
stos
cmp
or
adc
sub
fcmovbe
mov
inc
jle
stos
pop
cmp
int3
push
int3
pop
adc
loop
test
dec
test
leave
mov
mov
xor
insl
lcall
push
imul
sub
push
rcrl
pop
in
rol
sahf
movsl
in
or
adc
jmp
adc
xor
cmc
push
ret
pop
aas
push
int3
pop
adc
xchg
sub
push
cmpsl
dec
popf
jbe
xchg
dec
mov
adc
or
add
adc
push
loopne
pop
adc
out
lds
jge
shrb
nop
cmp
pop
adc
inc
adc
fldenv
push
cmc
loopne
pop
adc
fs
push
add
pop
mov
fists
shlb
ljmp
fs
mov
push
ljmp
jecxz
mov
nop
fs
fs
jg
scas
cmpsb
push
movlps
sbb
lret
shlb
cmp
adc
jmp
xor
aas
dec
test
pusha
mov
pop
sbb
inc
xchg
xchg
push
repz
fsubl
dec
mov
cs
push
mov
into
out
sbb
jmp
xchg
jl
xchg
mov
jg
in
or
pop
lret
dec
mov
jb
clc
inc
xchg
ficoms
xchg
add
xor
or
shll
stos
dec
imul
xchg
dec
pop
mov
xchg
xchg
icebp
pusha
adc
adc
jle
in
lahf
mov
dec
imulb
and
fimuls
pop
inc
pushl
lods
add
pop
adc
clc
mov
lret
or
mov
xchg
lock
sub
mov
cmpb
movsl
scas
rorl
pop
adc
push
insl
jno
and
fdiv
and
jbe
sub
stos
push
add
mov
adc
xchg
shlb
and
in
xor
adc
dec
pop
fs
adc
repnz
icebp
in
insl
fimull
xchg
fcomip
xchg
sub
xor
pop
adc
mov
xchg
popf
cmp
cli
in
jno
sub
pop
dec
jno
movsb
pop
mov
jb
mov
mov
adc
les
and
call
mov
int3
pop
adc
jnp
sub
mov
xchg
pop
adc
mov
jne
dec
xchg
pop
adc
jle
pop
push
xchg
sub
out
adc
pop
mov
mov
xchg
outsb
stos
nop
and
or
inc
dec
pop
push
xor
shll
push
int3
pop
adc
or
fdivr
cmp
mov
sub
clc
or
add
adc
cwtl
or
or
and
mov
or
aam
push
or
cld
mov
mov
clc
or
cld
pusha
push
adc
dec
pop
clc
or
loop
jg
mov
pop
adc
fidivl
out
cmp
lods
rep
mov
daa
xchg
xchg
iret
adc
adc
push
rcr
jle
fnstenv
dec
xchg
in
data16
mov
sub
xchg
and
loopne
pop
xchg
sub
fs
add
or
adc
xor
dec
xchg
xor
and
insb
cmp
shlb
cmp
fsts
dec
xchg
nop
daa
out
fdivrs
in
push
movsb
dec
mov
push
push
dec
xchg
pop
pop
mov
add
push
int3
pop
adc
cmp
stos
dec
push
adc
bound
enter
pop
pop
cmp
xchg
mov
aaa
loope
pop
test
notl
cmp
and
dec
push
lea
stc
lcall
in
fnstcw
or
lods
sbb
mov
sbb
pop
insl
aaa
jecxz
imul
iret
test
jnp
add
inc
fwait
clc
cli
pop
adc
movsb
cmp
cwtl
mov
pop
aaa
add
dec
aas
pop
xor
outsb
xchg
in
cmp
out
fnstenv
mov
sub
push
outsb
inc
aam
dec
xchg
cmpsl
adc
xor
inc
pop
stos
call
sbb
mov
pop
dec
push
in
mov
fisubs
pushf
fcomps
sbb
xchg
repz
aad
push
into
stc
es
jno
aam
and
adc
int3
das
out
pop
sub
mov
pop
sbb
mov
cwtl
dec
jg
cmpsb
shlb
add
stos
add
movsl
pop
cli
ret
popf
xor
cmp
mov
arpl
adc
inc
scas
inc
lods
sbb
in
push
push
push
loopne
arpl
loope
loopne
ss
roll
and
push
imul
push
int3
pop
adc
outsb
and
mov
mov
inc
lahf
xchg
sub
push
adc
add
inc
ret
inc
push
lods
push
idivb
test
xlat
mov
push
xor
out
lock
mov
pushf
insb
adc
jg
jg
adc
adc
aam
stos
insb
cli
jb
dec
es
add
es
rol
mov
pop
jo
dec
es
pop
shlb
adc
mov
jl
movsl
imul
cmp
xchg
dec
mov
xchg
fadds
dec
addr16
or
nop
cmpsb
xor
lea
add
daa
xor
mov
dec
xor
loope
sub
sub
pop
mov
aaa
or
add
call
bound
adc
in
js
push
adc
fcoms
imul
adc
ficoml
movsb
sarl
insl
mov
stc
or
loopne
pop
xchg
sub
xchg
xchg
sub
fidivrs
and
push
sbb
lea
cmpsl
cmp
pushf
pop
pushf
cmp
mov
xor
movsl
dec
xchg
mov
scas
cmpsb
xchg
scas
mov
pop
jae
dec
pop
fwait
cltd
outsl
cmp
adc
in
inc
push
jno
push
mov
fistpl
cmp
mov
and
or
bound
leave
cmp
das
loope
push
or
es
sti
mov
out
dec
ds
cmp
and
fstpt
popf
cmp
dec
mov
pop
push
movsl
ds
inc
movsb
dec
push
adc
push
dec
loopne
pop
cmp
outsb
lea
ss
pop
addl
mov
mov
xchg
je
fninit
out
out
sbb
cmp
xchg
fisttpll
nop
pushw
adc
call
lods
movsb
mov
pop
ret
xchg
jmp
adc
sub
push
adc
shlb
push
imul
pop
pop
pop
pop
adc
out
imul
mov
sub
movsb
ret
gs
mov
jne
mov
cmp
pop
lods
xchg
adc
es
xor
fsubrl
sti
cmp
bound
pmaxub
inc
outsl
enter
sahf
stos
out
and
push
icebp
mov
or
inc
insl
insl
gs
jmp
out
enter
xchg
arpl
test
fmuls
or
bound
test
cld
mov
push
shrb
dec
pop
sbb
cmpb
bound
cmp
pop
invd
adc
xchg
stos
fbstp
icebp
outsb
pop
mov
enter
xor
push
add
and
push
add
lcall
mov
ret
cmp
loope
stc
mov
jb
fistpl
outsb
into
jo
int
dec
je
sbb
xchg
nop
lahf
fnstenv
ljmp
sub
data16
fcoml
fisubrl
mov
adc
fisubrl
out
adc
cmp
mov
rcll
xchg
daa
rcl
lret
and
lret
jecxz
xchg
popf
test
es
rcrb
stos
stos
lds
pushf
cwtl
push
arpl
xchg
leave
sbb
mov
push
int
test
inc
push
jnp
lret
les
xchg
sub
jo
and
add
xchg
fcmovb
xor
pop
repnz
mov
ds
inc
loope
adc
mov
lods
push
movsl
adc
jb
sub
cwtl
sub
nop
les
adcl
repz
mov
scas
test
iret
sahf
pop
cmp
add
pusha
xchg
insl
add
aad
enter
aas
loope
inc
in
lahf
test
push
ret
mov
repz
mov
aam
cmpsb
fistps
cld
sub
dec
push
xchg
je
scas
enter
adc
cs
pop
faddl
outsl
out
loopne
or
push
adc
loopne
movsb
adc
jmp
xchg
adc
out
fdivl
cmp
lahf
rdpmc
xchg
cmp
popf
neg
add
cmc
cmp
cmp
mov
mov
cmp
lcall
add
mov
xchg
incl
adc
and
leave
loope
jmp
sub
or
mov
and
rorl
mov
test
push
adc
xchg
xchg
or
xchg
rorb
loop
jle
int
dec
cld
into
out
out
cltd
movsb
xchg
mov
aas
andl
mov
mov
in
pop
xor
xor
sbb
shrb
imul
cmpsb
pop
jge
jns
lds
in
jmp
lock
pop
push
inc
push
movsb
out
loopne
mov
pop
dec
xchg
pop
stos
shl
addr16
shrl
stos
lahf
dec
push
lods
pop
pop
aad
push
movsb
xor
push
mov
xchg
mov
sbb
sbb
test
gs
mov
mull
ds
daa
adc
dec
cs
in
xchg
xor
inc
sarl
jle
lcall
in
cli
shll
add
scas
push
rolb
xchg
test
cmp
xor
shrb
mov
call
movsl
fsub
subl
movsb
dec
pop
push
es
inc
xor
insl
fidivl
mov
or
push
adc
cs
cmp
push
rcrl
clc
mov
mov
xor
xor
cmp
sub
lods
shlb
sbb
xchg
xlat
rcrl
sub
push
cmc
jnp
insl
pop
mov
push
push
sbb
daa
mov
in
xor
mov
mov
cmp
push
cmc
outsl
aad
sar
pop
pop
in
jae
and
dec
sbb
cmp
sub
dec
popf
mov
fnsave
fbstp
loope
daa
sbb
xchg
xchg
out
sub
dec
lahf
mov
fbstp
fnsave
pop
sbb
and
in
mov
pop
cmp
in
sbb
inc
adcb
adc
mov
sub
fdivl
pop
out
push
cmp
cmp
mov
dec
lods
les
adc
xor
rcll
rolb
sub
into
loop
lcall
das
cmp
inc
push
mov
mov
int3
mov
movsb
data16
xchg
mov
in
test
mov
inc
xchg
pop
push
sub
adc
xor
data16
dec
jecxz
hlt
cmpsl
cmc
adc
sti
jecxz
adc
pop
mov
mov
mov
mov
dec
sbb
sti
and
iret
inc
rcrb
std
and
les
adc
rolb
shrb
lret
push
push
pop
adc
mov
mov
adc
psubw
movsl
cltd
cmpsl
pop
xchg
xor
push
adc
or
mov
pop
stc
lret
mov
stos
cmp
mov
jmp
stos
jae
ffreep
ret
vandps
ret
adc
adc
inc
in
call
jb
icebp
xchg
push
outsl
ret
inc
or
jecxz
mov
pop
sub
push
adc
xor
call
pusha
mov
out
jo
loopne
xorl
test
jmp
xor
loope
aaa
xor
mov
inc
pop
ss
mov
dec
push
sub
jbe
lods
popf
jmp
cmp
jbe
and
pop
jecxz
out
push
mov
push
push
aas
lret
lods
or
mov
cmp
inc
xor
es
pop
dec
dec
es
and
add
mov
push
adc
pusha
mov
jne
xor
sub
adc
scas
hlt
or
and
xchg
jmp
add
pop
adc
arpl
imul
imul
test
inc
mov
jecxz
idivb
aad
dec
dec
les
mov
xchg
cmp
cmp
push
in
fimuls
adc
xchg
inc
sbb
scas
sbb
and
pop
adc
popl
mov
daa
lds
movsb
out
int3
pop
adc
rcll
fsubs
jmp
popa
and
out
mov
adc
mov
fwait
pop
shll
mov
sarb
adc
data16
adc
pusha
push
imull
sarb
xchg
sub
rcr
insl
jmp
xchg
adc
mov
dec
push
movsl
ds
lahf
mov
test
loopne
or
movsl
mov
outsl
xor
mov
fwait
adc
inc
lret
and
mov
mov
mov
xchg
adc
in
lcall
push
bound
mov
sbb
pop
push
inc
dec
xchg
pop
loope
xor
jge
mov
fwait
jne
enter
push
push
push
fdivrs
sub
cmp
push
adc
mov
cwtl
dec
or
pop
cmp
push
push
cs
fdivs
add
cmp
adc
mov
and
pop
sub
out
inc
xor
imul
sar
xchg
dec
dec
inc
ficomps
mov
pop
outsl
pop
mov
mov
push
adc
xor
mov
in
or
adc
mov
loop
inc
rcl
fwait
pop
call
fsubrl
jmp
xor
repnz
inc
pop
xor
sahf
mov
push
mov
xor
xlat
lods
pop
mov
or
adc
xor
roll
pop
mov
sub
cmpb
mov
sbb
pop
pop
xor
outsb
xor
call
and
pop
adc
adc
test
xor
or
adc
fdivrl
cmp
cltd
pause
lret
jge
sub
jb
push
in
pop
stos
cmp
cmp
jmp
inc
stos
mov
lahf
call
gs
dec
pop
mov
aam
or
adc
or
adc
cmp
and
push
icebp
or
adc
fbstp
mov
push
push
out
loop
mov
lret
adc
stc
inc
clc
insb
lret
adc
xchg
dec
insb
or
adc
or
nop
sahf
add
add
gs
movsb
sub
adc
movsb
cmpsb
mov
xor
scas
mov
sbb
sbb
sub
jg
jne
mov
sbb
dec
stos
adc
leave
cmp
push
mov
pusha
rclb
adc
test
push
mov
sub
jg
in
or
test
jb
fisttps
mov
mov
push
pop
fidivrl
fnstcw
in
dec
daa
cmpb
clc
popf
cmp
fstp
in
and
pop
mov
pop
mov
lret
dec
jne
jecxz
jp
push
jecxz
jb
cmp
pop
clc
out
or
adc
add
sbb
int
and
pop
and
mov
fadds
movsb
cmpsb
fdivp
jo
xchg
jmp
cmc
mov
inc
mov
out
sahf
dec
xor
jbe
push
mov
mov
cmp
jb
out
sar
shlb
xor
aam
fwait
insl
sbbb
cltd
jmp
push
adc
les
bound
mov
push
sub
repnz
jmp
push
push
je
push
jp
dec
push
push
adc
mov
push
mov
add
ds
stc
xor
dec
mov
push
jns
data16
push
mov
out
test
push
fwait
push
inc
int
inc
push
sub
inc
or
in
test
or
roll
cmp
inc
cmp
xor
cmp
cmp
sub
mov
shlb
mov
mov
into
add
fdivr
fdiv
std
shl
inc
jo
xor
xor
add
push
sub
clc
add
mov
stos
rcll
orl
add
fwait
pop
add
sarb
cmpb
mov
andl
icebp
aas
and
sub
js
push
sub
xchg
mov
pop
dec
xchg
pop
jb
push
repz
jl
ljmp
loopne
jp
or
sub
xchg
int3
sarb
or
lea
imul
xchg
mov
sti
or
add
fsubrl
fildll
lods
pop
mov
scas
call
mov
ds
in
fmuls
push
lret
leave
push
jmp
jno
out
dec
lods
pop
mov
xchg
add
cmp
popa
push
adc
push
adc
sub
loopne
adc
popa
push
adc
pop
cmpsb
cmp
movsl
mov
fsubrl
jmp
push
enter
ds
leave
cmp
cmp
std
push
add
inc
std
push
add
dec
out
insb
repz
mov
jle,pn
hlt
xchg
adc
in
shlb
pop
and
mov
cs
stos
add
pop
lret
xchg
pop
and
mov
movb
sahf
cmp
push
sarl
rcl
lods
pop
fisubrs
mull
xor
daa
aad
mov
cltd
sahf
mov
push
imul
cltd
bswap
sub
adc
push
sub
in
cmp
outsb
loope
cwtl
pop
sub
push
adc
xchg
popa
xchg
and
scas
divl
xorb
cs
pop
adc
sbb
sbb
push
adc
xchg
test
cmp
lds
mov
pop
fsubrl
das
mov
ret
xor
fdivrl
sbb
mov
push
jbe
xlat
or
mov
sarb
korb
cmp
lods
pop
and
and
sub
cmp
out
mov
pushf
xchg
in
mov
ljmp
imul
dec
gs
gs
push
jecxz
dec
cwtl
jae
adc
add
and
cwtl
loopne
cwtl
in
iret
sub
ficoml
pop
inc
inc
out
xchg
lods
lahf
jl
inc
sbb
mov
or
cmp
cmpsb
shll
inc
test
pop
xlat
dec
sbb
mov
dec
push
push
dec
loopne
in
fstpl
mov
adc
and
imul
xor
dec
adc
xchg
pop
mull
in
cmp
mov
cmpb
jmp
add
addr16
or
pop
and
inc
stos
jbe
adc
sbb
push
test
out
sbb
xor
pop
sub
sbb
sub
mov
insb
xor
push
out
ss
or
loopne
mov
enter
pop
fldenv
adc
cli
push
xor
sub
xchg
cld
dec
fnstsw
xchg
jbe
and
sahf
clc
test
jmp
shll
leave
clc
mov
xchg
rorl
sub
insl
loopne
jl
sbb
sbb
cmp
or
loop
xchg
push
push
or
mov
ss
sbb
xor
add
les
sbb
ljmp
imul
mov
js
dec
data16
pop
mov
cmp
adc
cld
roll
dec
jmp
push
fisttpl
pop
pop
push
push
sbb
dec
pop
in
jnp
dec
mov
popa
mov
cmp
mov
inc
test
dec
xchg
push
mov
mov
stos
orl
jecxz
sub
out
out
jle
adc
loopne
adc
jne
push
insb
push
mov
inc
mov
sub
adc
mov
pop
sbb
popa
data16
xchg
in
pop
xor
inc
push
scas
cwtl
outsb
push
adc
mov
xchg
push
enter
sahf
cmp
lds
scas
cld
sub
in
pop
adc
jle,pn
loop
adc
sbb
xor
sub
adc
lea
inc
push
mov
cli
arpl
cli
mov
xor
jle
lahf
test
in
popa
adc
lods
pop
ds
fcomps
push
fistpll
fimuls
cmp
data16
push
scas
mov
enter
xor
push
jecxz
jno
or
fcomps
sub
scas
dec
xchg
es
pop
loopne
test
mov
mov
imul
fmuls
ret
sbb
sbb
lods
cmp
fcoms
out
out
pop
out
mov
cwtl
mov
mov
roll
and
shrb
mov
jmp
or
mov
fstpt
push
outsl
pop
mov
imulb
int3
adc
shlb
pop
pop
loopne
test
mov
xchg
mov
aam
sub
xchg
pusha
les
test
xor
xchg
test
insb
sti
mov
fstpt
push
xor
fidivl
cmp
popf
nop
jp
push
mov
or
xlat
lods
pop
mov
pop
jmp
es
xlat
sub
mov
cmp
pushf
mov
aad
pop
lea
outsb
fdivrs
sub
cmp
jns
push
adc
dec
push
xor
xor
shrl
movsl
mov
loope
pop
ljmp
mov
cmp
lds
fidivrs
push
mov
jmp
aam
aam
loopne
mov
lcall
enter
fs
in
jb
test
add
rol
stos
je
pop
popf
mov
add
imul
jmp
jns
mov
mov
leave
pop
outsb
mov
sbb
in
xor
inc
jb
lret
adc
adc
push
leave
adc
adc
outsl
lahf
cmp
and
sub
add
stos
jmp
dec
in
rol
leave
sub
lcall
in
xchg
cs
mov
add
and
std
shrb
outsl
clc
dec
pushf
mov
adc
adc
fstl
in
es
stos
xor
cmp
or
shll
insb
cli
xlat
fs
pop
jne
mov
mov
sbb
push
mov
xchg
mov
mov
push
jne
sbb
adc
xchg
jp
ljmp
scas
xchg
cmp
nop
int3
lcall
adc
adc
pop
repz
jo
xor
aam
jecxz
jge
xlat
jbe
fldenv
push
jp
scas
or
cmp
mov
add
push
adc
ljmp
sarb
enter
jp
mov
add
sti
mov
and
push
jo
cmp
mov
jnp
lds
push
lret
in
mov
movsb
mov
xchg
adc
push
adc
jnp
mov
dec
outsb
sub
jp
mov
bound
xchg
pop
mov
mov
xchg
sbb
sub
outsl
pop
jns
jl
in
clc
into
cmp
sbb
cmp
cmpl
orl
fimull
pop
inc
cwtl
loop
push
out
or
sahf
in
loop
push
push
sub
cmp
push
jbe
fnsave
cmp
pop
rcl
xchg
fsubrs
out
sbb
jne
sarb
es
mov
or
pop
mov
test
sbb
aas
fst
jo
push
cmpsb
adc
and
xchg
dec
mov
stc
or
je
xchg
jb
sahf
stos
lahf
dec
outsl
lods
pop
pop
mov
lods
pop
out
sahf
adc
pop
xor
cmp
repnz
push
clc
pop
push
mov
pop
sub
repz
repz
scas
cmpsb
test
push
insb
xor
xchg
mov
inc
sbb
push
repz
scas
mov
into
xchg
sub
adc
sarb
repnz
es
mov
sarl
shlb
adc
xchg
cmp
mov
pop
loopne
out
cmpl
mov
sbb
push
dec
pop
or
ret
xor
insl
fidivrl
pop
repnz
stos
sarb
ret
fisttpl
enter
mov
imul
imul
pushf
push
mov
xor
pushf
mov
xchg
jo
xor
rep
adc
pop
mov
sbb
out
fsubrl
repz
lods
pop
mov
and
in
xchg
scas
xchg
addr16
arpl
pop
mov
fstpt
cmp
sarb
cmp
sbb
pop
icebp
in
pop
fildll
es
pop
or
jbe
ss
jmp
loope
mov
mov
aas
xchg
dec
xchg
pop
jae
lea
xor
pop
sub
cmp
enter
inc
mov
popf
iret
sarb
test
in
test
inc
js
jae
add
out
dec
repz
xor
fisttpll
shll
bound
mov
fs
out
inc
fwait
es
xchg
cld
mov
mov
out
pop
lods
mov
sti
imul
xor
lds
push
cmp
mov
mov
inc
push
cmp
jb
cld
jp
push
push
mov
std
adc
gs
outsl
int3
mov
pop
push
xchg
push
in
andb
cs
or
push
test
imul
rcll
jns
mov
scas
pop
mov
addr16
sub
xchg
push
dec
push
arpl
shll
dec
mov
dec
xor
lods
sub
sbb
rclb
xchg
jle
and
jnp
fdivrp
daa
mov
xchg
sub
pop
daa
add
sub
xchg
sbb
cmpsb
pop
push
xchg
test
fldenv
sbb
sub
aaa
ffreep
aas
movsb
mov
jp
cwtl
mov
test
adc
mov
dec
cmp
or
sbb
jg
adc
jl
cmp
mov
cmp
xor
sub
pushf
bound
rolb
mov
rcll
adc
push
outsb
xchg
inc
sti
mov
add
stos
xor
mov
out
mov
sub
adc
out
mov
jp
mov
push
rolb
frstor
xor
mov
cmp
adc
or
mov
cmp
sub
or
cmpsb
into
movsb
mov
out
push
pop
out
jns
xchg
gs
fucomp
add
mov
jp
fnstenv
pop
je
push
leave
push
inc
lret
es
xor
fimuls
cmpsl
add
idivb
adc
sub
cmp
int
lock
in
xchg
dec
test
cwtl
dec
sarl
stos
mov
or
mov
shlb
imul
jb
frstor
fistl
adc
in
jnp
out
and
lods
or
jge
mov
jge
jl
adc
stc
leave
sbb
arpl
mov
mov
sbb
mov
mov
sar
add
shll
sahf
push
stos
pop
inc
ljmp
test
mov
fwait
dec
imul
mov
xchg
sub
enter
dec
pop
lret
fstp
shrl
call
aad
sub
imul
pushf
lock
ret
and
jne
lret
fstp
shlb
call
cwtl
dec
fstp
shll
ljmp
fst
mov
cmp
push
mov
mov
rcrb
fildll
sub
dec
xchg
and
jns
js
lahf
dec
push
push
cs
out
xchg
pop
jne
push
jb
mov
push
rcrl
sbb
cmp
and
sar
xlat
cmp
mov
stos
xchg
or
push
adc
sti
outsb
scas
imul
stos
mov
les
enter
ljmp
insb
sub
out
jo
shlb
lock
jmp
add
in
out
adc
loope
enter
push
outsb
push
fdivrs
sub
mov
and
sub
and
ret
inc
outsb
push
lock
xchg
bound
sbb
in
movsl
mov
scas
mov
sbb
pushf
cmp
pop
cltd
push
pushf
mov
lock
pop
fildll
loopne
pop
xchg
xchg
pushf
cmp
sub
les
inc
bnd
and
out
pop
mov
push
fisttps
ret
xor
cmpsl
out
insb
sbb
and
loopne
mov
dec
insl
sahf
pop
insb
adc
repnz
test
dec
cmp
push
loopne
pop
lret
ret
aad
or
fwait
mov
xchg
xor
pop
sahf
fimuls
cmp
scas
mov
xchg
imul
mov
clc
sub
cwtl
bound
fisubrl
sbb
fstpl
mov
adc
mov
xlat
ret
addr16
adc
xor
inc
lcall
sbbl
xchg
push
js
sbb
push
adcl
adc
cmpsb
outsl
int3
loop
aam
pusha
sahf
mov
mov
dec
clc
sub
shr
or
sti
mov
adc
sarb
mov
pop
inc
push
push
and
mov
sbb
mov
mov
ret
cwtl
sbb
ret
mov
imul
push
int
fidivs
add
mov
aam
sbb
xchg
out
sub
adc
int
lods
gs
pop
test
jb
test
pop
leave
das
add
jp
push
push
jo
mov
xchg
pop
jg
clc
cmp
test
insl
idiv
cmp
jbe
sbb
mov
nop
mov
ror
pop
fistpl
xorb
mov
stos
cltd
jecxz
dec
mov
mov
fs
mov
xor
adc
mov
mov
aaa
in
jo
shll
bound
ficomps
sub
adc
cmp
adc
das
push
shl
cmpsb
into
mov
mov
ret
pop
and
fdivr
std
push
inc
mov
push
popl
push
sub
or
jge
test
pusha
rcl
movsl
dec
cmp
movsb
adc
push
adc
and
adc
adc
xchg
adc
push
jp
mov
push
jl
mov
sbb
ret
xor
dec
popf
xchg
iret
arpl
push
cmp
dec
dec
icebp
mov
scas
ds
dec
roll
mov
add
stos
add
in
adc
cmp
test
icebp
add
inc
stc
jecxz
xor
lods
and
add
nop
add
lds
aas
pop
inc
dec
mov
fisttpl
or
fdiv
fcoms
scas
push
sub
adc
add
test
clc
inc
in
subl
pop
mov
push
cmpsb
scas
sub
xor
andl
popa
xor
loopne
mov
in
jno,pt
dec
xchg
mov
sub
out
lahf
cmp
jmp
shl
out
push
xchg
out
mov
insl
and
movsl
dec
loopne
mov
xor
xchg
sub
jno
mov
outsl
xor
xchg
jge
lock
mov
fdivs
fnstsw
cs
sbbl
and
ds
ds
and
mov
xchg
inc
xor
imul
adc
sub
dec
adc
inc
testl
adc
dec
push
repz
fnstenv
shlb
inc
out
adc
xchg
push
ret
jnp
leave
movsb
mov
nop
add
cmp
and
cmp
and
loopne
jp
push
lock
pusha
push
push
lret
jno
pop
loopne
ds
fbstp
dec
xchg
push
repz
cmp
pop
cld
and
xor
inc
outsb
pop
mov
mov
sbb
dec
pop
adc
insl
scas
mov
xchg
mov
test
xor
xchg
mov
mov
imul
xlat
mov
lods
sar
xchg
pushf
fs
add
jge
imull
mov
pop
fnstenv
sarb
cmp
inc
mov
pop
cmp
test
mov
nop
es
dec
fs
fcoml
sub
cli
shl
mov
xchg
and
push
hlt
cmpsb
lea
sub
sti
mov
or
adcb
std
das
sbb
push
int
inc
popf
pop
cld
jbe
aaa
sub
dec
orl
push
les
dec
mov
mov
gs
roll
cmpsb
stos
jb
xchg
je
mov
subb
lods
mov
adcb
push
pop
outsl
les
ret
ficoms
gs
adc
in
stos
shr
or
movsl
jo
sub
adc
stos
shlb
mov
push
outsl
mov
xor
push
push
sbb
push
mov
rorb
outsl
cs
add
ret
shl
push
lret
shrl
sub
lods
mov
fisubl
or
lods
jge
mov
cmp
lcall
aas
xchg
add
into
push
rdmsr
push
add
mov
cwtl
and
int
cmc
fistl
std
in
xor
test
sahf
jmp
mulb
std
in
sbb
push
adc
pusha
adc
mov
mov
sub
sbb
fmuls
icebp
int
xchg
push
sub
adc
or
cmp
pop
adc
nop
pop
inc
mov
xlat
cmp
sub
mov
lds
mov
push
std
sti
test
xchg
stc
cwtl
mov
inc
stos
add
test
inc
sbbb
fldl
push
adc
sub
js
out
cmc
daa
xlat
dec
mov
leave
pop
xor
add
lahf
mov
pushf
stos
into
aam
in
ficompl
ja
push
lds
sub
ss
ds
bound
inc
cmp
dec
jns
cmp
lret
sub
mov
sbb
push
sub
mov
jne
add
push
cmp
push
adc
lahf
mov
jnp
loope
je
mov
loope
dec
into
test
es
pop
repz
mov
repz
inc
push
mov
mov
mov
sbb
std
arpl
sbb
mov
xor
sub
pop
ret
mov
pop
sbb
jge
into
mov
ret
xor
adc
scas
and
xor
mov
push
js
cmpsl
add
dec
call
xor
enter
in
mov
mov
mov
sahf
or
loop
fs
push
pop
mov
push
lret
mov
pop
call
mov
mov
xchg
sub
fisttpl
ficomps
add
in
adc
xchg
mov
sahf
dec
insb
xor
push
mov
lea
insb
pop
arpl
fcmovne
push
enter
insb
pop
bound
fwait
dec
push
shl
xchg
lods
xchg
sbb
push
sub
mov
mov
int
in
in
movsb
mov
mov
flds
adc
mov
fdivrl
sub
cld
rorl
leave
sub
jle,pn
pop
mov
cmp
push
outsb
push
fdivrs
sub
ss
ret
pushf
xchg
and
push
push
push
out
shlb
outsb
push
repz
mov
fcomps
xor
popa
lea
in
movsb
mov
mov
dec
pop
movsb
dec
out
adc
mov
cld
fildll
lods
aad
mov
push
pusha
leave
xchg
cwtl
aas
movsb
aas
shrl
dec
cmp
xor
sbb
dec
in
cli
add
xor
pop
cmp
outsb
cmpsb
mov
xor
in
rorb
pop
mov
jle
sub
jmp
push
cli
push
int
adc
lret
loope
shll
iret
je
fistpll
popa
pop
hlt
mov
scas
jge
stos
add
mov
jp
or
jne
mov
test
mov
adcl
dec
scas
ds
stc
mov
jl
outsb
inc
mov
shrb
popf
loope
push
in
rcrb
fbld
jnp
jl
inc
jae
dec
and
mov
mov
jae
pop
aaa
xchg
fcmovne
sub
xchg
xchg
aad
add
and
and
ret
int3
push
mov
cmpsl
xor
pop
aas
xchg
movsl
xor
sub
int
cmp
leave
push
in
movsl
pop
fsubrl
dec
push
push
out
and
pop
call
pop
mov
bound
adc
mov
mov
imul
stos
cmp
sub
xchg
test
mov
mov
jne
pop
xor
test
cli
and
push
add
movsl
xchg
mov
imul
int
sbbb
jne
push
and
inc
adcb
test
adc
push
je
loop
mov
adc
xor
sub
sahf
ret
xchg
xor
push
cltd
xchg
add
jbe
sahf
pop
push
push
mov
inc
lahf
sub
je
jbe
dec
push
stos
inc
cld
sbb
popa
scas
or
call
sub
idivb
enter
dec
sar
fistl
in
std
pop
loopne
push
xchg
add
fistl
in
cli
cmpsl
mov
jb
dec
clc
xor
ds
push
inc
mov
inc
push
es
adc
push
jne
adc
popa
sahf
dec
icebp
mov
jns
rcrb
jne
into
xor
lock
ret
push
movsb
in
rcll
imul
lret
xor
pop
incb
sbb
stos
movzbl
ror
sub
cmp
mov
or
inc
std
push
cmp
adc
sahf
mov
adc
sub
jmp
jle
lahf
ret
ljmp
lret
sub
inc
in
jae
popf
ss
mov
imul
fadds
inc
repz
popf
and
ja
jnp
call
dec
sub
mov
push
cmpsl
les
inc
repz
popf
and
fistpll
imul
fcmovne
imul
test
xchg
sub
mov
mov
nop
clc
stos
lahf
add
shrb
dec
cmp
and
jmp
shr
mov
pushf
push
pop
xchg
popf
mov
jmp
test
js
lea
and
and
jecxz
mov
inc
push
jnp
xchg
pop
movsl
dec
jmp
test
leave
pop
pop
dec
cmpsb
scas
in
movsb
mov
mov
in
jge
leave
out
add
lock
sbb
ficompl
sub
sub
dec
cmp
xchg
pop
jne
jne
daa
sbb
repz
imul
fcmovnb
push
scas
shl
shrl
or
mov
sti
cltd
push
repz
aas
pusha
fidivl
inc
mov
mov
or
pop
inc
cld
scas
pop
xor
mov
cs
mov
sbb
lret
test
dec
xchg
pop
rcll
mov
loope
cmpb
pusha
test
icebp
fiaddl
xor
fnstenv
lcall
push
sub
and
cmp
push
pop
dec
aaa
dec
xchg
pop
jne
movsb
xchg
sbb
sub
mov
test
and
test
icebp
pop
mov
jmp
cltd
sbb
cltd
xchg
mov
pop
outsl
push
movsb
pop
cmp
xor
fnsave
sub
sub
xor
outsl
aam
aam
das
and
push
mov
xchg
push
sub
adc
shrb
pop
or
sarb
aaa
xor
sbb
and
pop
stc
pop
adc
ret
ss
insl
out
scas
in
fbld
pop
mov
out
sbb
mov
pop
fwait
cwtl
in
arpl
sbb
int
xor
nop
jmp
push
inc
shlb
cltd
fldcw
add
add
ret
mov
mov
in
lret
fucom
stc
mov
jge
pop
nop
cs
lcall
push
pushw
cmp
movsl
sbb
dec
sarb
int3
shll
out
ljmp
sub
rcr
sbb
imul
push
adc
loope
xor
cmp
pop
adc
add
mov
roll
and
std
pop
sti
mov
or
jo
cmpsb
sbb
pop
clc
cwtl
sub
int
add
adc
shr
lds
mov
mov
adc
mov
shl
mov
mov
mov
xchg
scas
xor
insb
aas
and
repz
into
scas
std
mov
jmp
mov
ret
lods
cmc
clc
lods
add
and
inc
push
jae
das
mov
loopne
sbb
adc
lock
add
or
sbbl
and
inc
sbb
jg
daa
mov
loop
enter
repnz
fisubl
xchg
bound
out
mov
mov
into
std
pop
icebp
mov
jne
out
mov
outsb
cmp
inc
movsl
lret
pop
adc
addr16
adc
sti
and
add
int3
pop
adc
cmp
cmp
int3
pop
adc
into
nop
pushw
adc
pop
pusha
push
adc
ds
pop
adc
gs
push
adc
pop
xor
insl
lcall
push
in
call
jne
push
aas
lock
push
adc
mov
pop
mov
or
push
adc
pop
ss
loop
ljmp
enter
pop
in
xchg
and
cmp
inc
std
or
sub
loopne
push
outsb
fidivl
and
pop
jne
popf
daa
fists
or
fdivs
fidivl
btr
ss
popa
pop
pop
and
pop
aad
pop
imull
push
mov
sbb
mov
add
or
dec
xchg
and
pop
mov
pop
arpl
xchg
scas
es
iret
sub
push
adc
adc
adc
out
test
divb
in
push
push
imul
cs
inc
enter
push
rcrb
fnstcw
inc
lods
mov
and
jg
arpl
mov
mov
add
lret
inc
dec
xchg
pop
ljmp
xchg
popa
test
test
loopne
cmp
cs
jnp
cs
mov
xchg
sub
cmp
fisttpl
fiadds
popf
cmp
sub
arpl
and
xor
loopne
std
push
cmp
and
mov
mov
mov
add
fidivrs
arpl
mov
dec
mov
aas
pop
ds
xchg
andb
dec
cmp
jns
sub
daa
fistl
rcll
ss
push
mov
pop
inc
or
in
ds
ds
lea
mov
test
xchg
and
mov
flds
mov
int3
lds
cmp
jg
dec
xchg
sahf
sqrtps
xor
mov
inc
stos
inc
out
xchg
scas
outsl
hlt
jb
pop
cmp
mov
adc
mov
adc
xor
in
mov
hlt
jp
stc
push
enter
push
adc
lods
dec
mov
insl
lcall
lea
jbe
in
lretw
mov
ljmp
adc
mov
in
movsl
enter
pop
mov
adc
leave
push
xchg
cmpsl
xchg
es
bound
push
pop
inc
lock
and
adc
inc
push
scas
pop
mov
ds
sbb
enter
gs
xchg
mov
loopne
jg
mov
dec
xchg
mov
xor
aad
out
das
or
mov
pop
repnz
lahf
sbb
ljmp
jge
push
pop
pop
lds
stos
jne
lds
fwait
jb
test
mov
add
push
mov
cmp
std
fmulp
jne
inc
add
clc
sub
mov
pop
stos
dec
sahf
insb
inc
insb
fwait
icebp
and
mov
push
js
xor
repz
adc
xor
mov
mov
cmp
popa
dec
mov
add
int
loop
mov
sub
out
cltd
outsb
popa
stos
inc
xchg
rcll
dec
mov
inc
lods
mov
mov
push
incl
xor
hlt
jo
mov
jge
pop
adc
jle
adc
mov
jns
pop
sbb
movsl
mov
ss
sbbb
and
dec
and
inc
aas
xor
iret
inc
data16
sub
xchg
dec
icebp
dec
pop
mov
icebp
mov
or
xchg
xchg
cmp
or
cltd
xchg
out
xor
clc
and
mov
and
dec
add
push
iret
xlat
cmp
mov
mov
leave
inc
sub
std
in
mov
hlt
dec
mov
clc
add
push
in
push
ret
mov
incb
mov
in
jns
mov
xchg
int
inc
dec
adc
and
adc
nop
outsl
enter
pusha
out
adc
push
mov
cmp
data16
sbb
lods
mov
xchg
sub
sti
xchg
and
test
stos
outsb
fidivrl
ss
imul
inc
in
xchg
push
xor
out
push
push
movsb
dec
gs
mov
aaa
or
push
cmpsl
add
push
push
ret
cmp
lods
pop
mov
fwait
pop
add
std
mov
adc
out
pop
pop
imul
pop
sbb
add
es
pop
iret
add
push
dec
push
and
jp
daa
xchg
pop
pop
cmp
popa
test
mov
hlt
jmp
add
pop
mov
dec
aad
xor
call
jp
mov
pop
mov
cs
cmpsb
pop
mov
xchg
xchg
mov
fwait
or
sub
adc
sbb
mov
outsb
lds
imul
jle
insl
jp
mov
ds
int3
arpl
adc
icebp
pop
adc
in
insl
fndisi(8087
in
inc
xchg
or
add
jnp
sbb
cmp
fadds
adc
mov
mov
push
loopne
adc
xchg
jb
gs
imul
movsb
pusha
pop
jmp
adc
cmovle
pop
adc
pop
lods
pop
mov
sub
test
fldl
adc
out
mov
adcb
push
lods
cld
stc
pop
adc
push
dec
mov
out
pop
adc
push
mov
fabs
xchg
add
imul
pop
out
mov
xchg
fcomps
adc
adc
and
ret
pop
std
pop
adc
fwait
cmp
in
fwait
bswap
rclb
or
shl
aam
bound
shl
adc
in
fsts
stc
sbb
repz
adc
mov
test
test
loop
adc
scas
dec
repnz
and
pop
adc
xor
mov
inc
testb
lea
push
jmp
rol
or
jge
shll
inc
push
add
out
pop
adc
ljmp
cmc
pop
adc
mov
pop
lahf
std
sbb
inc
testl
dec
xchg
jno
inc
inc
int3
xlat
pop
adc
roll
roll
adc
pushf
dec
xchg
and
push
push
sti
mov
test
aad
enter
pop
adc
stos
inc
popf
jl
dec
js
sbb
pop
adc
test
xorb
mov
pop
adc
testb
push
gs
clc
pop
adc
aaa
dec
mov
mov
pop
adc
scas
outsb
cltd
jbe
ljmp
adc
scas
sbb
ljmp
adc
push
pop
xor
pop
aam
pop
fistpll
insb
incb
adc
mov
inc
pusha
in
adc
mov
pusha
xlat
out
cltd
or
in
adc
mov
mov
pop
adc
jnp
add
fiadds
lods
jbe
cli
mov
movl
add
mov
mov
mov
pop
adc
or
push
xor
call
mov
outsb
xchg
std
push
mov
clc
pop
adc
pop
mov
fucomp
imul
stos
mov
enter
in
pop
adc
mov
icebp
mov
pop
adc
mov
insl
in
mov
pop
adc
insl
push
loop
push
mov
add
adc
push
and
adc
in
jnp
pop
inc
add
movsl
push
filds
adc
xor
inc
or
adc
mov
jnp
sbb
sbb
and
sbb
jae
add
insb
cwtl
jno
mov
bound
xor
loopne
imul
imul
push
sub
into
mov
mov
adc
adc
sub
test
fisubrs
push
mov
push
scas
sub
or
mov
imul
or
xor
adc
loop
add
push
pusha
flds
adc
fidivl
fistps
xchg
flds
adc
cmp
flds
adc
fdivl
insl
xchg
add
push
adc
movsl
mov
enter
fldcw
xchg
or
add
pop
adc
pop
lods
pop
mov
and
ds
loope
adc
sbb
dec
pop
mov
or
mov
adcl
pop
adc
mov
push
mov
or
add
adc
cli
movsl
arpl
mov
mov
insl
mov
scas
pop
sbb
insl
lea
test
and
pop
adc
mov
or
or
fdivl
loopne
mov
out
pop
adc
cltd
push
lods
or
mov
pop
adc
cmovle
pop
adc
mov
xchg
add
xor
aam
adc
loop
add
xor
pop
adc
insb
add
std
pop
adc
mov
xchg
or
std
pop
adc
mov
mov
pop
adc
test
mov
daa
arpl
fdivrp
filds
adc
push
rorb
js
mov
cltd
pop
mov
mov
fnop
jmp
adc
sahf
jge
push
jbe
or
pop
adc
add
mov
or
rclb
mov
clc
adc
sti
pop
adc
sahf
dec
xchg
ret
pop
lahf
cli
sbb
rolb
adc
dec
enter
mov
filds
adc
xchg
mov
push
inc
aaa
loope
pop
or
mov
push
inc
xor
cmp
adc
das
movsl
lret
adc
jge
aam
adc
leave
adc
jge
in
adc
add
out
fstps
pop
adc
cmpsb
dec
xchg
jo
inc
je
loopne
pop
adc
movsl
dec
fwait
imul
jecxz
xchg
add
dec
loopne
or
std
pusha
dec
xchg
add
rcrb
pop
adc
lcall
xor
fisubrs
inc
popf
jge
dec
jne
push
loope
adc
mov
add
pop
rorl
adc
adc
sbb
adc
push
mov
js
push
xor
pop
adc
out
adc
cwtl
and
es
or
pop
adc
loopne
outsl
fwait
and
dec
fldl
adc
mov
je
or
xor
mov
je
pop
adc
mov
jmp
call
popf
mov
add
push
in
pop
adc
xchg
xchg
add
movsl
jl
pop
adc
xchg
push
mov
pop
adc
cmpsl
inc
sti
push
xor
add
adc
and
push
or
xor
push
pop
ret
pop
adc
mov
mov
jmp
adc
loope
shr
test
add
adc
cmp
ljmp
mov
outsb
loop
mov
pop
adc
cmp
jbe
cld
jns
cmp
sti
pop
adc
addr16
push
mov
aam
adc
addr16
push
cld
jo
adc
pop
adc
int3
cmp
pop
dec
sbb
clc
xlat
pop
adc
or
aad
dec
sbb
lock
jne
inc
xchg
dec
es
sub
pop
adc
inc
ja
sbb
push
int3
es
pop
in
pop
adc
mov
push
out
adc
jo
ss
or
cmp
pop
movsb
jmp
adc
jb
xor
jb
gs
lds
movsb
pusha
ds
add
adc
sti
cmpsl
xor
pop
adc
or
or
pop
adc
pminub
test
mov
js
insl
xchg
add
xor
insb
mov
filds
adc
aam
lea
mov
cmp
pop
adc
or
xchg
or
pop
adc
or
lods
pop
out
adc
jae
xlat
pop
adc
mov
sub
fdivp
out
adc
cmp
jp
fchs
sti
pop
adc
out
je
pop
adc
loope
or
add
cli
pop
adc
stos
mov
cmp
add
pop
mov
mov
mov
dec
clc
pop
adc
xchg
jb
gs
imul
movsb
pusha
ds
testl
imul
cmpsl
xor
pop
adc
or
mov
add
mov
lea
test
sbb
pop
adc
imul
xchg
add
xor
adc
insb
mov
out
adc
ret
arpl
mov
mov
pop
adc
sbb
lods
pop
loopne
or
add
roll
adc
push
lods
pop
out
adc
jo
in
adc
mov
sub
fstl
ret
outsl
fnstenv
ficoml
in
adc
fdivl
loope
add
pop
adc
movsb
mov
fsub
xchg
or
add
aam
adc
adcl
sub
aam
pop
adc
addl
rcll
push
mov
jp
shl
adc
cmp
jg
lods
jmp
stos
je
in
js
xchg
cmp
pop
adc
xor
mov
adc
sub
jne
mov
adc
pushf
ljmp
adc
adc
inc
int3
in
rolb
adc
sahf
cmp
xor
fldl
adc
adc
push
cmpsl
sbb
xor
pop
adc
adc
push
movsb
sbb
mov
adc
stos
push
mov
lock
or
dec
enter
roll
pop
adc
jno
jl
repz
pop
adc
mov
cld
push
repz
pop
adc
scas
insl
cli
xlat
fcmovnb
sbb
int3
out
adc
mov
pop
imul
pop
mov
push
cmpsb
nop
sti
pop
adc
adc
addr16
add
pop
adc
xchg
ja
adc
sub
pop
adc
int3
cmp
f2xm1
lahf
or
out
or
sbb
push
roll
adc
shlb
jle
xor
adc
mov
inc
or
adc
xchg
leave
xlat
pop
adc
mov
dec
testl
xchg
push
or
sub
test
out
pop
adc
pop
adc
pop
sbb
add
pop
loopne
loopne
stos
adc
xchg
jecxz
push
inc
out
adc
mov
push
aaa
inc
xlat
or
out
xchg
stos
fiaddl
cmp
mov
fwait
mov
adc
add
cmp
push
mov
xchg
in
and
mov
or
jbe
rorb
jp
scas
mov
fimuls
xchg
stc
lea
xor
mov
xor
sahf
fiaddl
xorb
in
sub
aas
dec
jmp
repnz
test
push
in
insl
sub
out
jge
mov
lods
cltd
mov
inc
loopne
xchg
jl
xchg
lret
push
xor
jbe
dec
mov
sarb
xchg
addr16
ret
in
dec
dec
adc
repnz
mov
and
fcmovnu
xlat
jp
in
fmul
in
add
insl
shrl
out
push
insb
int3
leave
xchg
nop
jmp
inc
jne
dec
xchg
cmp
or
xchg
push
xor
in
xor
mov
mov
mov
add
popf
lods
mov
jmp
dec
cmp
lock
cmp
pop
xchg
and
lea
adc
cmpsl
mov
sub
insl
mov
out
add
dec
pushf
add
out
test
xchg
sub
fildll
sub
xor
jle
pop
push
mov
out
sbb
leave
test
xchg
fildll
sub
mov
and
call
cld
mov
inc
lds
dec
xchg
ficoms
out
ss
dec
cmp
mov
push
jge
push
js
dec
pushf
in
inc
dec
mov
sub
cmp
jle
movsb
dec
test
loopne
jno
sub
hlt
lahf
lds
dec
xchg
and
xlat
cmp
add
jo
daa
mov
shl
xchg
and
or
arpl
fidivl
mov
pop
sub
lods
sbb
bound
mov
ffreep
lock
sbb
sub
xor
out
adc
xchg
bound
daa
push
call
ss
pusha
cmp
jmp
mov
adc
push
pop
mov
les
push
adc
push
cmp
xchg
roll
fcoml
or
adc
gs
fcoms
xchg
andl
ds
das
and
fstp
insl
pop
shll
ss
push
mov
fdivs
int3
push
pop
stos
jg
sub
jmp
inc
xorl
test
stc
stc
dec
push
xchg
push
lea
xchg
push
mov
mov
popa
sbb
mov
outsl
das
lret
adc
fbld
test
jbe
lods
add
xor
idivb
pop
xor
not
movsb
testl
cwtl
sub
pop
xor
and
lds
sbb
cmpsl
xchg
jno
push
jns
aaa
outsb
fsubs
xchg
dec
dec
sbb
clc
xor
lret
jge
sbb
rclb
sbbb
mov
and
ja
add
add
sbb
mov
pop
sahf
sub
jb
fldenv
push
adc
jb
xlat
aad
xchg
fidivrl
enter
add
sbb
jne
shlb
cli
mov
mov
adc
and
mov
in
inc
push
es
ljmp
adc
mov
and
test
or
data16
sbb
out
pop
mov
xchg
inc
call
addr16
xor
repnz
in
add
ss
jg
cltd
and
xchg
stc
test
imul
gs
mov
mov
sti
dec
jp
ds
xchg
orb
add
stc
call
insl
push
test
mov
movsl
adc
or
inc
adc
gs
sti
into
push
mov
jle
push
dec
out
mov
loopne
fidivrs
pop
adc
aam
mov
adc
imul
andb
sub
shr
or
adc
mov
insb
fiadds
test
adc
push
out
int
aad
sarb
mov
aaa
xchg
hlt
dec
xor
inc
or
mov
or
adc
push
in
add
adc
adc
mov
adc
add
shrb
adc
sbb
into
cmp
and
xchg
pop
xchg
jb
xchg
and
xor
jge
or
cmpsb
dec
xor
pop
ror
xchg
sub
fwait
jge
mov
sti
mov
or
scas
sbb
cltd
mov
or
jb
cld
pusha
push
adc
xchg
jns
cmp
xchg
push
movsb
dec
test
xchg
and
adc
movsl
loopne
je
hlt
lahf
movl
enter
xlat
lock
test
jg
add
adcl
dec
fsubp
xchg
sub
mov
fwait
lds
xor
sub
cs
repz
inc
test
pop
mov
fucomi
or
adc
popa
and
test
dec
pushf
xchg
out
mov
cwtl
push
movsl
ss
sti
cmc
xor
xchg
sub
imul
gs
leave
outsl
fidivrl
es
ds
lods
pop
mov
xchg
inc
ss
jnp
mov
adc
adc
and
fidivl
xchg
decb
loop
pop
xor
out
loopne
or
xchg
iret
add
adc
ljmp
rorb
push
and
jp
scas
data16
enter
cmp
cmp
pusha
cmp
and
lret
outsb
push
leave
sub
enter
mov
mov
pop
aaa
insb
dec
dec
fsts
xor
aam
push
clc
or
and
push
jmp
mov
xchg
fxtract
or
mov
adc
shrl
cmp
std
sbb
fidivs
inc
shll
mov
xor
cmc
enter
cmp
movsb
shlb
daa
cmp
pusha
ljmp
add
mov
sub
fs
das
stos
decl
stc
int
push
mov
test
ds
pop
ljmp
popa
mov
mov
loopne
fs
mov
sahf
mov
xchg
rclb
test
bound
dec
aad
inc
push
inc
pop
and
into
push
jle
xchg
es
shlb
adc
cmp
sbb
sbb
dec
test
and
dec
nop
pop
mov
push
add
or
dec
cmpsb
jae
jnp
dec
mov
push
xlat
ss
scas
into
aam
mov
lret
rclb
mov
sbb
into
arpl
push
mov
aaa
dec
mov
push
jl
cmp
decb
inc
mov
dec
add
movsl
sub
sbb
adc
bound
xchg
sbb
stos
daa
es
jg
hlt
push
cmc
xor
xor
add
ret
notl
pop
hlt
out
jge
mov
mov
ret
xchg
xchg
pop
repnz
adc
and
sub
ljmp
les
add
xor
xor
xchg
push
add
push
mov
adc
jae
xchg
pop
loopne
xchg
add
sahf
movsb
cltd
outsl
push
mov
adc
in
or
adc
in
stos
xor
push
sbb
dec
out
loopne
or
inc
aad
pusha
push
adc
mov
pop
inc
stos
dec
icebp
clc
iret
mov
xchg
ds
lcall
mov
je
mov
push
adc
imul
sbb
sarb
in
or
adc
dec
fs
cmpsb
cmpb
hlt
dec
xor
std
fmul
mov
icebp
xor
inc
sub
push
xor
sub
scas
sbb
fwait
and
out
bound
out
mov
xchg
shl
xchg
addr16
outsb
or
pop
repz
jl
shlb
lret
insl
aam
fisubs
adc
popf
in
xchg
mov
loopne
jns
jno
out
lock
out
xorl
sub
pushf
cmp
xchg
jnp
xor
sub
cmp
adc
pop
push
xor
in
add
cmpsb
dec
call
jns
call
sarb
les
mov
mov
dec
xor
or
xor
stos
push
movsl
dec
lods
xchg
cmp
fistpl
xchg
dec
xchg
mov
out
sbb
sbb
test
pop
cmp
mov
movsb
dec
stos
pop
into
xchg
and
fidivl
dec
pushf
lods
lea
fcmovnu
lods
pop
mov
loope
movsl
dec
pop
sbb
imul
pop
sub
pushf
cmp
jle
and
movsl
dec
xchg
pop
sub
dec
xchg
and
cmp
pop
mov
scas
pop
xor
lcall
addr16
sub
cmp
cmpsl
dec
xchg
and
stos
ficomps
adc
cmpsl
xor
push
popf
nop
jae
test
movsl
add
sub
loopne
xor
jne
mov
pop
in
xchg
sub
xor
cmp
xor
push
cmc
movsl
dec
xchg
cmp
cmp
jbe
xchg
and
inc
cmp
xchg
and
daa
arpl
popf
mov
out
movsl
dec
out
cmpsl
jnp
push
repnz
mov
xchg
adc
jno
arpl
xor
jo
scas
shlb
xor
push
cmpsl
pushf
jmp
dec
xchg
daa
mov
mov
in
sti
movsb
dec
fwait
xchg
or
mov
aad
fwait
mov
push
cli
mov
cmp
imul
pop
cmp
xchg
jge
xor
push
jo
mov
pop
stos
inc
outsb
push
jge
mov
fwait
es
fidivl
sbb
insl
sti
stos
mov
inc
ret
or
sub
mov
mov
push
cmp
mov
stc
dec
xlat
mov
jl
lods
sbb
add
inc
jb
push
bound
cmp
lods
sbb
sbb
or
or
push
inc
dec
jle
stos
shll
fcmove
nop
popa
sarb
aaa
cmpsb
cld
xor
push
pop
imul
jne
xchg
push
fnstenv
ret
and
jg
outsb
fstps
mov
mov
mov
push
jb
pop
mov
fidivrs
stos
ret
adc
push
sbb
lret
sub
leave
adcb
out
pop
icebp
fldenv
adc
adcb
adc
push
into
mov
mov
jae
fldl
mov
mov
inc
test
mov
or
push
mov
inc
mov
mov
push
out
loopne
cmp
imul
xchg
and
mov
push
push
sti
sahf
mov
hlt
testl
jp
sti
add
mov
xor
frstor
pop
outsb
inc
add
call
inc
xor
sub
ss
shlb
in
in
nop
cmpsb
iret
shlb
mov
push
sbb
cmp
stc
sbb
and
mov
cwtl
lods
out
mov
or
mov
pusha
push
adc
in
ljmp
sbb
gs
gs
insb
cli
cmp
dec
es
add
stos
ss
dec
add
lods
lock
insl
mov
loope
add
sub
jge
push
repnz
xlat
xchg
call
inc
movsb
push
and
sub
mov
sbb
push
sub
add
xor
fdivp
or
adc
push
addl
adc
imul
cmp
push
loope
or
pop
adc
adc
lea
jae
pop
xor
inc
pop
inc
sbb
xchg
sub
sub
repnz
call
mov
pop
ljmp
or
scas
mov
mov
stos
movsl
leave
mov
popa
or
cmp
call
cs
pop
cmp
cmovns
ja
cmp
lods
ror
mov
dec
pop
mov
xor
mov
pop
rorb
lds
out
push
cmpsl
fnstcw
sub
adc
ljmp
scas
adcl
test
mov
push
xchg
xchg
sub
xchg
lock
jae
mov
out
push
movsl
dec
lods
xchg
push
pop
pop
pop
gs
xchg
pop
pop
jne
jns
mov
or
jnp
in
loopne
dec
xchg
sub
or
fisttpl
mov
or
push
xor
push
cmpsl
cmp
ret
xor
dec
xchg
xlat
fdivs
out
fwait
sbb
fistpl
pushf
dec
xchg
test
aad
xlat
add
out
test
xchg
sub
daa
jns
pop
call
repz
loopne
push
cmp
push
cmpsl
pop
aaa
add
or
pop
inc
push
ds
add
xchg
and
gs
ljmp
jge
xchg
movsb
jl
xchg
push
xchg
fcmovnb
mov
xor
sub
xchg
and
pop
pop
ficoms
scas
dec
xchg
sub
rcll
pop
nop
sub
push
loope
pop
mov
and
shl
fisubrl
mov
test
mov
test
aaa
adc
stos
popa
dec
cmp
sub
adcb
pop
mov
xchg
aad
fidivl
mov
pushf
add
dec
ds
je
and
mov
adc
cmp
scas
and
xchg
add
lea
adc
xor
jmp
pop
stos
aaa
sub
add
jne
inc
popf
loopne
sub
mov
or
or
popa
push
adc
rcrb
dec
mov
jp
in
xchg
and
mov
sbb
jne
mov
or
stos
cld
cld
pusha
push
adc
out
lea
pop
insb
mov
jecxz
or
dec
icebp
or
adc
adc
popf
jne
push
adc
add
movsb
dec
stc
cwtl
xorl
xor
or
pop
pop
add
adc
pushf
in
or
adc
hlt
fimull
dec
mov
and
adc
ficoms
gs
cmp
and
ror
lret
push
sub
mov
pop
inc
clc
into
inc
icebp
and
out
shrb
or
mov
jg
sub
pop
ficompl
sub
movsb
scas
mov
adc
mov
lea
fsubrs
pop
adc
in
push
xor
mov
pop
adc
insb
sahf
sub
sub
inc
and
adc
inc
sbb
sbb
mov
cmp
push
cmp
ljmp
sbb
test
adc
or
adc
mov
add
sbb
jo
or
xor
inc
jecxz
aad
aaa
mov
mov
fwait
je
or
out
leave
test
sti
fsubrl
aam
mov
and
scas
adc
push
cltd
movsb
stos
xchg
push
lret
pop
xchg
test
dec
mov
mov
call
iret
push
int3
pop
adc
adc
aas
xchg
rdtsc
subl
cmp
or
adc
out
test
and
insl
enter
pop
decb
or
ds
push
push
dec
mov
adc
dec
jl
dec
mov
adc
mov
or
adc
pop
push
push
mov
cmc
loope
and
pop
jmp
or
adc
xchg
unpckhps
or
pop
enter
or
mov
sub
cmp
icebp
or
adc
sbb
adc
dec
movsb
mov
in
or
adc
fwait
sbb
jno
inc
rclb
mov
icebp
or
adc
mov
adc
cld
pusha
push
adc
flds
pop
ss
add
sub
mov
mov
xor
lods
pop
adc
mov
mov
bound
add
popa
repz
and
add
pop
cmp
cli
push
movsb
dec
in
dec
test
sub
jnp
cmp
push
xor
mov
pop
adc
ja
and
xor
lea
gs
or
int3
sub
push
cli
test
pop
adc
xor
xchg
push
pop
lds
cmc
daa
xor
fstp
push
mov
adc
mov
push
sti
aad
push
cmp
add
adc
mov
dec
lret
pop
adc
inc
mov
adc
dec
sbb
fisttpll
adc
xor
mov
xchg
sub
cmp
push
adc
pop
inc
lea
sub
xor
cmp
push
add
xor
in
enter
cmp
int3
or
or
lea
sub
adc
mov
loope
frstpm(287
leave
xor
out
xlat
and
or
pop
sbbb
pop
jae
aas
mov
mov
xchg
sub
or
sub
dec
mov
and
jo
es
xchg
jmp
xchg
jp
sbb
in
cmc
xchg
sub
pop
test
mov
fidivl
aaa
movsb
loope
es
cmp
es
addb
scas
sarl
pop
jno
es
addb
je
mov
sub
cs
adc
lods
cltd
xor
sub
insl
inc
iret
rcl
xchg
inc
fwait
push
out
mov
pop
mov
cltd
dec
cmp
sahf
jge
lods
sub
adc
xor
inc
cli
and
adc
or
dec
iret
test
jle
mov
fistl
mov
movsl
outsb
push
addr16
push
mov
xlat
jecxz
push
mov
arpl
sub
lds
scas
je
or
inc
pop
testl
das
xchg
sbb
inc
jbe
xchg
cltd
sbb
mov
stc
dec
sbb
sbb
je
or
xchg
fcomp
mov
xchg
lret
dec
xchg
movsl
pusha
je
or
push
jne
out
int
sub
mov
mov
dec
enter
cs
inc
rclb
sub
or
adc
sub
mov
mov
mov
pop
andl
mov
xchg
pop
adc
dec
mov
adc
cmp
inc
in
or
adc
std
xchg
cmp
mov
xchg
js
or
adc
or
or
movsl
push
mov
adc
adc
insb
mov
mov
orb
outsl
xlat
or
or
dec
fstpt
pop
dec
or
enter
mov
mov
in
or
adc
push
les
faddl
popa
push
mov
push
adc
scas
push
lock
test
cmp
mov
or
sbb
mov
aam
adc
xchg
pop
adc
xchg
jae
mov
dec
iret
jmp
adc
lods
mov
mov
adc
pop
rorb
lods
mov
adc
push
adc
jp
and
pop
dec
stc
fidivrs
lcall
fsubr
dec
out
ret
cwtl
mov
adc
mov
fcmovnu
cmp
vmread
test
hlt
pop
mov
sub
shrl
pop
jmp
ret
negl
push
pop
test
daa
or
jo
es
sbb
pop
movsb
mov
xor
dec
sahf
rorl
jbe
sub
nop
imul
movsl
inc
test
and
inc
leave
xor
push
adc
arpl
pop
mov
sbb
out
xchg
sub
xchg
pop
adc
dec
xchg
push
sti
cltd
test
maxps
push
push
xor
ja
adc
pop
push
mov
pop
pop
inc
ja
mov
dec
mov
mov
pop
adc
xchg
inc
movsb
addl
gs
adc
xor
xchg
imul
sarl
cmp
pop
out
sarl
xor
pop
je
push
cmpsl
mov
mov
inc
stc
jecxz
sub
or
adc
or
cmpsl
pop
leave
xchg
loope
xorl
push
mov
ds
dec
xchg
push
imul
adc
dec
jnp
int3
pop
adc
pop
push
push
mov
pop
adc
insb
mov
cs
fdivp
or
adc
push
loope
cmp
cmp
or
pop
adc
mov
lock
and
adcb
push
aam
or
push
sbb
or
sbb
loopne
push
enter
dec
pop
mov
xchg
push
aam
out
dec
xchg
nop
inc
mov
sub
movsb
cmp
mov
fidivl
dec
les
aaa
adc
shl
or
adc
adc
adc
adc
pop
cmp
and
xor
enter
aam
or
adc
aas
cmp
push
clc
xchg
pop
dec
push
stos
mov
mov
or
xor
mov
xor
dec
outsl
shrl
lods
sub
cmp
mov
mov
aaa
jge
shrl
dec
mov
sub
sub
mov
cmp
loop
bound
in
mov
cltd
aaa
sub
push
inc
or
inc
hlt
insl
and
std
jne
test
test
dec
aam
inc
int
daa
and
pop
adc
fildll
int3
lods
dec
in
icebp
sub
adc
fadds
outsb
xchg
or
adc
cmc
in
sub
notl
or
adc
or
adc
push
sub
mov
xlat
icebp
or
adc
sub
stos
in
or
adc
je
jns
xlat
imul
or
mov
jmp
movsl
enter
sahf
in
or
adc
jo
xchg
lret
add
fdivl
or
gs
cmpsl
in
or
adc
adc
mov
bound
adc
rorl
adc
adc
stos
add
in
or
adc
push
fs
jb
faddl
push
ljmp
push
xchg
jnp
or
adc
xchg
out
and
adc
inc
add
cmc
bound
out
or
adc
pop
loope
incl
adc
cmp
punpcklbw
nop
xor
sbb
or
adc
rolb
test
adc
js
shr
mov
mov
js
ret
scas
sub
xchg
mov
jmp
fnstcw
gs
sti
push
mov
inc
jb
ja
out
paddsw
cld
mov
call
test
or
or
mov
inc
xchg
js
xchg
movsb
mov
adc
pop
adc
nop
mov
adc
inc
mov
cli
xor
adc
and
cmp
fistps
cmp
adc
enter
adc
ss
addr16
aaa
movsb
les
mov
and
or
or
adc
enter
cmpsl
in
jo
mov
shrb
int
mov
push
je
mov
aam
pusha
rorl
imull
out
popf
jne
outsl
fwait
popf
scas
sub
jo
push
and
or
in
or
adc
adc
fidivrs
or
pusha
push
ficoml
outsb
je
or
push
jo
or
xor
cwtl
cmpsl
leave
xchg
and
adc
and
adc
adc
mov
mov
adc
cld
pusha
push
adc
pop
call
int3
pop
adc
or
adc
push
jae
mov
ja
or
das
xchg
out
fmuls
je
rclb
mov
data16
pop
and
movsl
dec
cs
testb
xchg
test
loopne
pop
add
ljmp
jbe
pop
inc
or
out
xchg
dec
cmp
out
nop
pushw
adc
dec
inc
lea
leave
js
pusha
push
adc
dec
pop
flds
dec
sbb
fimuls
shlb
shlb
push
fistpll
movsb
sbb
loopne
cld
imul
and
out
mov
nop
pushw
adc
jmp
in
pop
pusha
push
adc
cmpsb
test
movsb
ret
xchg
mov
mov
adc
shlb
inc
dec
pop
ljmp
sahf
lcall
xchg
mov
cmp
adc
jb
pop
pusha
push
adc
mov
aad
cs
add
dec
sbb
dec
jle
arpl
adc
add
pop
jmp
mov
sarb
adc
sub
aas
das
lahf
mov
cmp
xor
push
xor
inc
arpl
adc
fisubrs
push
por
xchg
and
shll
push
mov
pop
pop
push
loop
enter
adc
inc
jmp
popf
rclb
sub
test
popf
mov
pusha
push
adc
push
jp
inc
push
mov
dec
adc
mov
incl
mov
push
and
jl
lods
pop
jns
shl
lods
sbb
push
adc
mov
adc
cld
pop
sbb
imul
inc
in
jb
test
push
adc
movsb
sub
xchg
dec
cs
cli
and
movsl
enter
jae
jae
popf
out
lret
xchg
es
push
pop
sarb
insl
push
push
stc
and
les
shrb
add
xor
shlb
xchg
sbb
dec
push
push
pop
sbb
insb
pop
inc
pop
cmp
xchg
loope
aad
pop
ss
out
jae
pop
test
push
call
jno
in
mov
scas
sub
mov
addr16
pop
bound
incb
cli
and
or
aad
push
xor
mov
mov
shll
cmp
cwtl
jbe
shll
push
adc
dec
xchg
inc
ds
test
or
arpl
xchg
ret
adc
call
imul
xor
in
xor
pop
out
call
xor
scas
cmp
jne
adcl
test
fstpl
jo
andl
xchg
popf
add
push
inc
imul
cs
ss
cs
lock
adc
mov
in
jns
fwait
insl
adc
movsb
push
mov
mov
popa
push
adc
xlat
inc
xchg
leave
push
mov
gs
mov
popa
push
jmp
adc
out
mov
rcll
adc
jmp
gs
mov
xchg
cmpsb
add
adc
mov
shl
scas
jle
incb
xchg
add
or
adc
add
addl
dec
sbb
fisttpl
cmp
pusha
push
adc
daa
ficomps
xchg
pop
xor
push
in
fbld
pop
push
sti
inc
aas
lock
pop
or
push
adc
aad
lret
pusha
push
adc
jbe
adc
sub
outsb
cmp
xchg
fdivs
mov
adc
aaa
push
mov
out
ret
cmp
xchg
in
xlat
xor
cmp
mov
push
mov
dec
pushf
cmp
in
and
pop
adc
mov
and
push
xchg
and
cmp
mov
cmp
and
leave
in
and
pop
fsubrl
in
pop
xchg
ds
ficoms
and
cmpsb
dec
pushf
scas
lock
adc
pop
cmp
xor
dec
add
out
push
mov
loopne
jmp
lds
fisubrs
xchg
and
mov
and
push
xor
jmp
es
dec
pop
sub
push
cmp
inc
dec
xchg
and
fadds
or
xchg
pusha
movb
mov
lret
shrl
and
andl
in
push
adc
pop
fmull
or
out
xor
jne
repz
cmpsl
dec
or
xor
aad
xlat
xor
sub
out
pop
cs
and
cmp
lods
dec
or
add
repnz
movsl
cmp
dec
dec
xchg
and
imul
cmp
xchg
out
pop
adc
cmp
pop
sub
dec
xchg
daa
in
push
mov
cmc
xchg
cwtl
imul
dec
cmp
dec
pop
mov
mov
shll
es
xchg
mov
addb
cmp
fs
mov
inc
pop
mov
popf
sub
mov
push
mov
jo
pop
iret
outsl
push
or
es
push
test
cli
stc
dec
sub
jb
jno
sub
mov
jecxz
cmpsb
in
cmpsl
shrl
gs
xchg
mov
xor
pop
adc
les
adc
sub
int3
pop
adc
jb
and
pop
adc
jle
adc
pop
adc
jae
es
int3
pop
adc
int3
pop
adc
mov
ror
adc
scas
movsl
dec
enter
int3
pop
adc
pop
loopne
push
adc
inc
or
sbb
fwait
sbb
inc
or
or
adc
add
sbb
sub
int
push
or
adc
arpl
cmp
sub
lret
data16
sub
add
push
adc
clc
or
adc
lcall
jmp
mov
lahf
lock
push
adc
pop
int3
pop
adc
xchg
dec
xlat
fs
pop
adc
xchg
dec
add
adc
js
outsl
fwait
push
loope
pop
bound
jno
int3
pop
adc
iret
iret
fisubrs
adc
cwtl
arpl
adc
add
adc
mov
xor
adc
fcomip
push
inc
mov
cmpsb
je
push
adc
inc
lret
icebp
stos
mov
adc
xor
push
adc
lret
in
jne
scas
jo
mov
int3
pop
adc
pop
adc
int3
pop
adc
test
push
xchg
lds
shlb
sbb
inc
dec
std
pop
mov
mov
int3
pop
adc
insl
aas
add
adc
cmp
pop
int3
pop
adc
sub
xor
adc
pusha
mov
add
cli
out
xor
adc
mov
or
cli
or
or
add
push
lret
jmp
andl
pop
adc
popa
push
adc
int3
bound
adc
sbb
pop
insb
and
fs
adc
cwtl
and
pop
adc
std
jl
bnd
adc
mov
pop
pop
scas
addr16
adc
mov
adc
dec
jo
push
adc
inc
and
shrb
xchg
iret
pop
arpl
adc
mov
adc
push
xrelease
push
adc
push
cmp
and
dec
leave
mov
repnz
test
sub
adc
ss
decl
out
mov
sub
xchg
ret
pop
fs
adc
cmpsl
pop
stos
and
loopne
sbb
fildll
cli
push
cmp
push
fucom
and
adc
cs
dec
js
arpl
adc
mov
push
sub
push
adc
cmpsb
xor
xchg
sub
andb
adc
and
les
adc
mov
xor
add
jecxz
sub
insl
fcmovnu
push
int3
pop
adc
popf
cmp
fistpll
aad
sbb
adc
clc
lahf
mov
push
insl
shrb
sbb
stos
mov
mov
ret
outsb
push
loopne
push
les
lds
in
mov
ret
xor
fwait
mov
fldenv
adc
mov
lcall
in
pop
out
pop
jae
movb
gs
add
ds
inc
ja
jge
in
inc
scas
scas
xchg
ds
cmp
clc
in
mov
xchg
dec
shll
shl
push
inc
push
sbbl
mov
scas
push
sti
pusha
andl
adc
push
clc
jle
mov
popf
cmpsl
add
sbb
jns
mov
cltd
sbbb
jae
fdivrl
cs
mov
pop
out
mov
xor
jmp
pop
stos
push
mov
out
jmp
int
fucomp
fwait
lods
xchg
or
mov
inc
jnp
stos
testl
int3
pop
adc
fcoms
push
sbb
mov
push
jne
and
push
out
imul
orl
out
jnp
je
out
cwtl
mov
xchg
fs
in
adc
sub
fsubr
aam
sti
fisttps
in
pop
dec
shll
mov
push
push
aam
sub
push
int3
pop
adc
test
pop
dec
push
jo
push
adc
movsl
and
imul
and
pop
jo
cmp
mov
mov
int3
pop
adc
outsl
dec
bound
push
es
pop
adc
out
sub
ret
pop
adc
inc
push
int3
pop
adc
add
aad
xor
push
int3
pop
adc
push
ljmp
call
push
push
push
ljmp
push
leave
ret
fcomip
loope
loope
add
imul
adc
adc
xor
xor
loop
iret
xor
sub
xchg
push
add
mov
mov
fsts
enter
lds
xchg
lods
lret
stc
push
les
fs
cld
data16
sti
test
xor
and
subl
pop
push
imul
fisttpll
sub
or
in
xchg
push
fisttpll
add
mov
inc
mov
xchg
add
pop
mov
in
xchg
xchg
cmp
sub
lahf
mov
sbb
popf
aas
and
push
sbb
pusha
pop
out
push
test
fsub
inc
fistps
shll
in
and
pop
movsl
insb
pop
cli
xor
mov
aad
enter
js,pn
test
test
mov
arpl
adc
in
sub
add
push
popf
cli
movsl
push
out
cmp
cmp
inc
movsb
and
add
shlb
dec
sbb
icebp
mov
out
icebp
or
pop
jbe
int3
rcll
imul
pop
cmp
sub
lcall
push
mov
pushf
jmp
jno
lock
mov
shll
sbb
adc
sbb
call
lret
aas
movsb
test
mov
out
lods
pop
outsb
pop
pop
daa
pop
jo
xor
push
movsb
lds
shll
push
in
mov
add
cmp
fldenv
aad
lods
pop
mov
fidivrs
push
repz
mov
and
test
loopne
in
mov
out
in
enter
out
ljmp
pop
pop
test
sbb
adc
push
pop
push
push
fsubs
adc
insl
mov
imul
xor
lea
mov
test
movsl
call
insl
lret
aas
sub
les
repz
lods
lea
insl
fidivl
fildll
std
movsb
popa
pop
add
sub
test
and
mov
adc
cmp
push
push
xlat
enter
mov
xchg
push
enter
call
xchg
push
jo
pop
or
xchg
pop
popa
push
adc
jge
repnz
std
aam
fcoms
push
xor
cmpsl
in
data16
sub
jecxz
sbb
sub
pushf
dec
mov
pusha
push
adc
fbld
cmp
aaa
inc
cmp
inc
sbb
jbe
pop
out
out
faddl
jp
test
movl
pop
in
pop
nop
jb
adc
push
xlat
pushf
jns
sarb
adc
mov
and
xor
lcall
inc
notb
je
test
mov
call
and
or
test
jp
movsb
addr16
cmp
or
sti
das
sbb
std
aas
jle
repz
mov
xchg
xchg
mov
and
das
pop
in
fcmovbe
push
jp
leave
push
jnp
mov
mov
loopne
shll
sub
sbbl
in
enter
ss
jb
insb
cmp
mov
ret
jecxz
icebp
push
mov
cltd
cltd
outsb
jns
pop
jb
lahf
mov
mov
xchg
stos
and
in
inc
dec
push
add
mov
jl
mov
mov
ficoml
fs
mov
push
pop
cmp
or
add
ljmpw
add
insl
jge
mov
outsb
dec
xor
in
pop
lret
js
insl
das
add
mov
sub
cmp
fmuls
mov
mov
movsl
adcb
push
mov
pop
cmp
xorb
ds
lahf
sub
xchg
movsl
fdivrl
cmpsb
ja
out
je
mov
scas
sti
les
or
sahf
outsb
and
inc
and
lret
sub
ret
adc
popf
in
pop
imul
pop
data16
gs
push
mov
sub
pop
adc
mov
mov
addr16
adc
dec
xor
sbb
dec
jns
roll
push
adc
pop
dec
icebp
lock
bound
mov
mov
mov
scas
mov
je
imul
and
outsb
xchg
push
adc
mov
add
jns
sub
cmp
or
leave
mov
adc
sbbb
icebp
mov
push
rorl
fdecstp
or
insl
adc
lret
fiaddl
std
call
pop
scas
dec
out
mov
mov
das
rolb
test
inc
enter
loope
icebp
out
imul
leave
test
das
jns
dec
pop
pop
mov
push
sti
test
lock
jecxz
roll
and
pop
jns
scas
pop
jl
outsb
or
mov
ss
add
mov
es
call
cs
std
sti
fnsave
push
sub
pop
adc
sbb
stos
or
push
adc
cmpsl
outsb
or
jle
fnstenv
cmp
dec
loop
test
pop
mov
pop
loopne
pop
scas
cltd
dec
xchg
pop
rcll
cld
aad
shrl
push
pop
enter
pop
pop
adc
lock
loop
adc
inc
lahf
fdivs
les
in
jns
jp
cmp
ja
sub
icebp
gs
outsb
out
mov
sub
pop
hlt
pop
cmp
add
mov
push
rclb
pop
pop
scas
movsb
in
pop
gs
repnz
cmp
mov
ds
cmp
fisubs
test
into
mov
fstpt
push
cmpsl
push
sbb
or
dec
ds
mov
sarl
jo
repz
sarl
lods
shll
push
push
stos
mov
loop
sbb
xchg
and
sub
mov
xchg
test
into
xor
movsl
stos
sarb
mov
ljmp
lea
movsl
rolb
dec
inc
hlt
addr16
and
xchg
scas
fwait
repnz
shlb
sbb
pushf
cltd
push
hlt
push
mov
popf
pop
cld
pusha
push
stos
aad
dec
fldcw
inc
jmp
mov
push
fcomps
inc
and
int3
cmpsl
je
mov
pusha
mov
test
adc
and
inc
sub
push
pop
gs
jge
les
add
sbb
push
loope
outsb
push
adc
xchg
in
loope
jle
pushf
inc
sub
xor
pop
adc
lea
sbb
push
adc
inc
outsb
cmp
xchg
scas
sub
cmpsl
ds
lods
xor
inc
pop
push
jns
cmp
push
addr16
test
inc
out
aad
addr16
test
xchg
push
dec
sbb
dec
sbb
sub
xchg
out
mov
mov
xchg
pop
out
and
xchg
lods
sahf
mov
cltd
adc
push
add
fisttps
add
mov
clc
int3
ficomps
add
cmp
fcoml
in
popf
mov
jns
jo
enter
not
cmp
out
xchg
jbe
bound
aam
scas
pop
pop
fnstcw
and
jmp
inc
jmp
push
mov
lock
push
jmp
xor
fildll
sbb
lahf
mov
shlb
daa
fisttps
aaa
xor
scas
sbb
dec
scas
fwait
into
aas
add
in
dec
pop
dec
in
dec
pop
inc
cld
imul
fdivrs
sbbl
insb
sbbl
inc
adcl
ljmp
pop
sub
pop
inc
xchg
shlb
xchg
rcr
testb
icebp
rolb
mov
jge
fwait
mov
or
insb
data16
xor
mov
js
or
and
es
jmp
fldl
popa
inc
shr
push
ret
mov
rcrb
mov
xchg
sar
inc
sub
enter
or
xchg
and
decb
xor
fildl
xchg
adc
je
xor
xchg
not
xor
add
call
or
adc
jmp
test
lret
in
mov
pop
inc
sti
sarl
nop
insl
lock
mov
lock
pop
movsl
dec
loopne
daa
adc
out
inc
stos
pushf
popf
push
lods
push
ja
out
mov
sbbb
pop
out
stos
pop
pop
mov
push
sti
popf
push
mull
jne
mov
cs
dec
int3
adc
fisubs
ds
sarb
adc
jecxz
daa
daa
push
mov
push
stc
push
pusha
xchg
lods
mov
dec
xchg
sub
pop
pop
push
sub
shrl
das
ds
xor
jecxz
push
cli
ror
dec
ficoml
lock
mov
out
in
sbb
movsl
ds
inc
repnz
outsl
fstpt
sub
aas
sub
mov
pop
ljmp
hlt
imul
shl
jnp
lods
or
imul
mov
sub
icebp
je
xchg
push
ror
addr16
push
push
xor
fidivl
fiadds
imull
dec
cwtl
cld
xchg
icebp
gs
add
pop
movsl
ds
dec
xchg
pop
jg
filds
nop
movsb
jae
pusha
add
ret
pop
ds
cmpsl
and
mov
mov
mov
pop
pop
popa
leave
out
movsl
scas
mov
pop
inc
pop
aas
sub
xchg
nop
test
outsb
in
mov
jmp
xchg
hlt
insl
push
aas
sub
cmpb
pop
mov
add
sub
jecxz
es
pusha
test
cwtl
lcall
mov
jl
fstl
dec
sbb
dec
pop
aad
sar
mov
shrb
out
iret
pusha
ljmp
jg
popa
sub
xor
push
xor
mov
repnz
mov
and
andb
cwtl
mov
pop
and
pop
pop
rol
xor
lcall
cltd
fildll
dec
inc
push
ja
xor
sub
sbb
in
push
clc
sbbb
fidivl
ljmp
mov
es
inc
push
pop
push
mov
movsb
mov
mov
insb
adc
enter
dec
movsb
scas
sub
push
ret
pop
repz
mov
pop
lods
mov
mov
maxps
inc
into
lods
mov
push
adc
std
int
mov
cltd
stos
cmp
mov
mov
jg
xor
icebp
push
clc
fmull
cmp
mov
in
and
out
jp
or
and
test
and
sbb
lcall
push
mov
inc
testb
and
shlb
or
adc
aad
aas
in
mov
jnp
push
popa
push
in
jle
fbld
loopne
adc
pusha
xorb
mov
fimuls
fwait
xchg
mov
cli
cmpsb
add
add
je
push
mov
jb
cmpsb
fwait
call
shr
cmpsb
stc
mov
xchg
jl
insl
ficoms
pop
jg
addr16
push
fcmovnbe
jle
in
cmc
push
push
mov
ss
pop
sub
push
fadds
xor
and
or
movsl
fnsave
push
subl
dec
jnp
add
dec
push
decb
clc
inc
nop
dec
mov
mov
mov
rcrl
es
or
popa
dec
das
in
pop
jecxz
push
pushw
adc
in
pusha
lcall
lock
or
and
or
loopne
inc
push
es
pop
dec
mov
lret
mov
dec
push
cmpsl
movsl
xor
or
sti
repz
push
in
inc
push
lock
bound
jmp
fidivl
out
jmp
adc
mov
adc
adc
mov
cmp
pusha
xor
shlb
movsl
xchg
movsl
test
mov
and
call
pop
xor
push
shlb
or
push
cmp
aam
in
fidivl
fstpl
clc
or
xchg
push
movb
xor
loopne
jge
xchg
out
mov
xor
leave
xchg
push
clc
jnp
stos
arpl
jnp
mov
into
inc
fndisi(8087
sbb
in
add
and
movb
xchg
sub
push
cmpsb
push
nop
mov
fdivrl
movsl
mov
imull
cmc
xor
cmp
or
push
fcoms
cmpsb
xor
lcall
hlt
fwait
xchg
push
rcr
repnz
dec
xchg
pop
movsl
shl
arpl
add
adc
out
push
inc
loopne
test
mov
adc
movsl
cmpsb
movsb
dec
xchg
sub
pop
pop
aam
mov
pop
shrb
ss
cmp
ss
cmp
pop
je
pop
pushf
and
push
cwtl
mov
fnstsw
gs
in
ret
inc
dec
mov
and
dec
loop
push
sarb
scas
inc
loopne
push
into
jae
adc
xchg
jb
mov
mov
xchg
sub
pop
call
cmpl
push
cmpsb
dec
xor
jbe
loope
sub
movsb
int3
pop
adc
adc
xchg
mov
and
add
loope
dec
in
inc
mull
and
fdivrs
das
sub
aad
and
sti
out
int3
pop
adc
arpl
das
and
jl
icebp
inc
push
movsb
int3
pop
adc
cld
pusha
push
adc
or
popa
inc
sub
xchg
lret
mov
inc
clc
leave
mov
or
mov
and
dec
mov
adc
mov
xlat
loope
and
xchg
mov
fs
pop
imul
rorl
pop
xchg
add
and
push
jg
sub
out
pop
fldl
popa
push
adc
mov
and
mov
aad
mov
loop
nop
fcomps
pusha
push
adc
adc
and
ds
and
cltd
sub
aas
jle
sbb
fadd
adc
push
sbb
mov
repnz
cmpl
xchg
fwait
out
mov
mov
cmpsb
lret
cmc
aad
fs
push
inc
push
dec
add
fists
or
push
adc
mov
push
incl
test
movsl
inc
frstor
xchg
inc
xchg
outsb
push
xchg
lcall
scas
sbb
hlt
imul
in
ja
popl
call
data16
inc
movsl
pusha
pusha
and
clc
fdivrs
jbe
shr
lcall
in
xchg
insb
xor
data16
add
pusha
cmp
sub
aas
andb
inc
mov
pop
jo
mov
jecxz
pushf
out
lock
dec
push
daa
and
jnp
push
repz
mov
adc
cmp
push
lods
mov
adc
paddw
push
pop
sbb
xchg
xor
push
cmp
dec
lods
mov
push
adc
add
pop
mov
rcrl
jl
ss
bound
ret
sbb
and
cmp
jns
into
cli
into
les
adc
cmp
out
int
inc
or
push
push
and
mov
pop
adc
sub
push
and
adc
ljmp
xchg
mov
xor
mov
push
xor
and
mov
fistpll
es
pop
adc
test
pop
adc
test
sub
repz
and
insb
sahf
cmp
outsl
ds
out
jge
inc
jne
push
or
insb
push
sti
fnstenv
pop
jae
dec
loopne
pop
cmp
outsb
lea
ss
pop
add
pop
mov
mov
xchg
jne
sbb
add
jne
push
pop
call
push
sbb
push
or
test
pop
mov
push
dec
fs
push
adc
pop
int3
pop
adc
andb
call
adc
jle
fildll
mov
pop
mov
mov
les
adc
seto
sub
push
adc
push
lret
push
mov
adc
mov
xchg
add
ss
xor
sub
test
mov
adc
adc
adc
mov
xchg
ret
int3
pusha
push
adc
out
addr16
lock
xlat
dec
xchg
and
pop
insb
arpl
adc
xor
lods
jb
mov
xlat
push
dec
arpl
adc
sbb
in
scas
dec
test
dec
xchg
sub
xor
jns
lock
push
dec
push
repz
dec
js
arpl
adc
push
call
hlt
mov
call
sbb
jne
aam
pop
call
push
inc
test
sub
sahf
out
mov
mov
or
pop
push
xor
pusha
pusha
push
adc
insl
aam
inc
aad
pop
fisubl
add
xor
mov
test
mov
mov
sbb
xor
mov
xchg
mov
pop
mov
arpl
adc
or
mov
cmp
push
fmul
je
inc
push
sbb
push
in
push
addr16
in
shrl
icebp
sub
push
and
jb
stos
push
jl
insb
mov
das
stos
incl
icebp
or
push
les
pushf
or
mov
icebp
imul
in
and
add
xchg
js
add
mov
das
ljmp
mov
xchg
dec
lret
sahf
ljmp
lahf
dec
je
jmp
sub
scas
inc
and
dec
sbb
jp
jp
sbb
mov
icebp
and
pop
push
sub
xchg
lds
add
dec
push
adc
adc
cmp
les
and
in
inc
jbe
lret
fldt
lods
xchg
adc
gs
push
popa
bound
push
mov
jne
cmpsb
subl
dec
cmp
jo
scas
sbb
pop
cltd
outsb
cltd
jbe
imul
repz
pop
or
push
adc
lea
fisubrs
sub
and
push
jne
mov
or
sahf
add
lods
xor
test
in
sub
mov
xor
scas
push
arpl
sbb
inc
test
adc
jne
lock
inc
jae
lock
lds
inc
cmp
jo
out
enter
je
cwtl
loope
jl
push
test
mov
inc
outsb
incb
repnz
lds
cltd
jecxz
or
push
mov
sar
and
mov
add
xorb
fnstsw
mov
ss
sbb
jge
mov
decb
mov
jmp
setg
xchg
int3
mov
andb
out
jp
add
jmp
jecxz
sbb
mov
add
aas
mov
pop
mov
in
hlt
repz
in
aaa
fwait
pop
aas
xchg
les
and
mov
jnp
es
fs
adc
ret
sahf
fdivrs
mov
cmp
repnz
jae
or
lret
adc
mov
lds
ss
pop
mov
xor
sahf
mov
test
pop
popa
lods
xchg
inc
push
mov
fistpl
rorl
sub
decb
jae
leave
in
jns
sub
lods
pop
cmp
sbb
and
sub
mov
dec
or
mov
ss
outsl
jno
sub
shlb
mov
mov
loopne
dec
xchg
sub
pushf
cmp
repnz
and
push
cwtl
xchg
sub
and
jge
mov
pushf
mov
fnstcw
sub
and
popa
popf
cmp
test
xchg
sub
add
out
push
push
movsb
dec
cmp
lcall
aad
repz
lea
fidivrs
lods
xor
xchg
cmpsb
or
jecxz
mov
rcrl
dec
loopne
jb
cmp
and
pop
mov
and
xchg
mov
ds
xor
fidivl
pop
in
jae
pop
xchg
mov
in
inc
lods
pop
mov
pop
jecxz
pop
out
dec
xchg
mov
mov
adc
pop
cmp
mov
xor
mov
adc
sti
ja
sbb
dec
mov
adc
adc
iret
loopne
cmpsl
fistpl
xor
inc
sub
mov
sub
push
mov
sbb
dec
iret
push
cmpsl
xor
xchg
mov
and
inc
dec
xchg
xchg
sub
movsl
in
pushf
out
cmp
stc
sbb
xchg
inc
sub
inc
mov
adc
pop
sub
cmp
sbb
pop
es
add
in
pop
adc
mov
roll
fstps
stos
aaa
dec
loope
mov
hlt
popa
repnz
lods
lds
push
mov
inc
mov
cmp
cmp
fbstp
fmuls
adc
pop
fsubrs
or
and
popa
push
adc
push
lea
and
or
pop
dec
mov
imul
push
sbb
jle
bound
fucomi
mov
mov
test
scas
xchg
stos
stc
sub
push
pop
test
leave
mov
adc
in
push
jno
ja
popf
in
sti
sub
rolb
int3
pop
adc
stos
unpckhps
mov
push
movsb
into
pop
sub
rcr
ficoms
xchg
pop
stos
pop
jge
sbb
sub
push
arpl
dec
push
mov
ljmp
lods
stos
fsubs
lret
sar
sbb
inc
jae
imul
adc
jle
fidivrl
lea
pop
jae
pop
add
dec
jb
mov
daa
dec
pusha
mov
adc
aam
inc
flds
sub
xor
push
and
mov
pop
jne
jecxz
int3
outsb
xchg
cmp
jge
mov
fbld
pusha
adc
pop
push
shlb
adc
sahf
sub
ss
pop
stos
ljmp
aas
push
sbb
bound
cmc
sub
sti
test
add
es
movsb
add
mov
fs
inc
inc
mov
insb
or
cli
jle
mov
mov
mov
sub
or
inc
dec
jp
gs
add
notl
jmp
mov
or
popf
push
mov
push
imulb
out
cmp
sahf
xchg
xchg
or
add
adc
jp
or
xchg
mov
push
push
out
out
push
loop
jmp
sub
out
fimull
pop
pop
jae
aam
loop
inc
out
in
mov
fdivs
lea
mov
gs
lcall
push
outsb
bound
push
inc
inc
das
bound
push
cltd
inc
scas
repz
gs
xor
mov
lock
aaa
add
mov
stc
mov
ss
cmp
dec
loopne
xchg
pop
loopne
lea
pop
xchg
and
push
lds
lea
ss
adc
out
sbb
mov
fs
mov
jb
jnp
loope
pop
icebp
inc
test
dec
sbb
cmp
cmp
aam
or
sbbl
adc
xorb
pop
bound
xchg
sub
cmp
frstor
adcl
movsb
dec
loopne
pop
test
xchg
and
stos
dec
pushf
cmp
push
cmp
or
dec
js
pusha
push
adc
mov
push
mov
lea
scas
bound
cs
adc
ficompl
pop
adc
cmp
dec
pushf
repz
or
fwait
sub
or
push
or
lea
push
or
cmp
lcall
sbb
insl
popa
loopne
pop
adc
les
aad
inc
inc
and
out
js
les
xchg
push
or
sub
fists
pop
adc
testl
dec
push
pusha
aad
mov
adc
xchg
sub
mov
push
fucomp
out
xor
fisubrs
pop
stos
adc
inc
add
or
mov
adc
imul
mov
imul
in
push
adc
or
loope
jne
into
aam
or
jl
pop
mov
jne
cmp
insb
dec
sub
mov
je
ret
jo
inc
in
pop
ljmp
sub
out
pop
ljmp
daa
insl
mov
loope
fs
dec
inc
and
xchg
push
lea
inc
cltd
adc
mov
scas
aas
jnp
dec
ja
pushf
or
call
fwait
add
lods
jbe
sbb
sbb
jno
dec
movsl
xor
xchg
in
ljmp
sub
lahf
in
aad
lcall
sbb
rcl
aas
xor
movsl
lea
rclb
pop
adc
insb
outsl
fldenv
push
lret
xchg
mov
adc
js
shrb
orl
outsb
mov
je
push
arpl
dec
jmp
enter
rcl
mov
or
nop
inc
or
or
and
adc
mov
push
or
loope
xchg
jae
stos
jne
add
or
mov
push
or
push
push
pop
push
mov
popa
clc
or
cld
pusha
push
adc
arpl
aad
inc
lahf
test
inc
mov
push
adc
fstp
insl
push
sub
xchg
sarb
aam
pop
shlb
or
jbe
and
aaa
mov
sub
xor
mov
sub
cmp
push
in
and
movsb
int3
pop
adc
adc
mov
lods
mov
add
adc
int3
cwtl
int3
pop
adc
push
pop
in
adc
mov
out
adc
xor
pop
adc
mov
pusha
lods
dec
xor
mov
leave
iret
mov
mov
push
sbb
sub
xchg
mov
and
xor
push
in
xor
mov
sub
sbb
stos
shll
int3
pop
adc
lcall
adc
dec
jne
add
int3
pop
adc
call
test
mov
int3
pop
adc
dec
pop
adc
int3
pop
adc
adc
pusha
push
adc
test
insl
pop
jo
int3
pop
adc
sbb
push
sub
push
adc
push
ror
mov
mov
push
adc
shlb
andb
mov
pop
inc
xlat
add
int
pusha
push
adc
maxps
es
pop
pop
sbb
test
insl
outsl
fidivrl
lods
aad
pop
cmp
xchg
iret
push
xor
sub
out
into
xchg
arpl
adc
cmp
sub
pushf
cmp
dec
leave
js
arpl
adc
lcall
xchg
arpl
adc
sub
lea
cmp
lods
or
mov
xor
and
xchg
test
mov
mov
popa
mov
out
bound
dec
cmp
push
adc
push
adc
in
dec
pushf
cmp
repz
pop
and
xchg
sub
ss
xchg
push
pop
jecxz
test
add
add
mov
adc
xor
fldenv
mov
adc
pop
or
pop
jno
in
push
push
xor
lods
pop
or
cmp
push
dec
xchg
sub
or
sbb
sbb
fstpt
out
sbb
dec
cmp
outsb
fstpt
call
in
and
popa
push
fists
call
sbb
xchg
sub
cmp
pop
dec
xchg
and
sub
inc
mov
lods
arpl
mov
dec
fbstp
and
add
adc
push
adc
lods
scas
stos
out
sbb
mov
adc
pop
lea
cmp
lahf
pushf
fidivl
pop
sub
sarb
cs
mov
inc
das
push
mov
movsl
and
sbb
cs
divps
das
insl
jge
std
scas
addr16
adc
pop
jge
popf
pop
cmp
cs
popf
test
cmp
fldcw
cli
stc
test
lods
add
aaa
dec
sub
clc
pop
adc
mov
mov
xchg
out
pop
adc
imul
add
je
subl
pop
pop
test
stos
push
stos
jp
mov
adc
jg
cmp
push
adc
pop
std
sbb
jnp
filds
adc
jo
mov
sub
movsl
pusha
imul
mov
cmp
push
adc
fdiv
mov
inc
xchg
addb
mov
aaa
es
btr
mov
outsl
xor
mov
fcompl
jge
gs
sarl
das
fcmove
inc
inc
push
imul
clc
sub
cmpsb
or
mov
enter
cli
xlat
pop
jbe
bound
imul
cs
adc
mov
fsts
add
adc
xchg
pop
xor
inc
jne
cld
jmp
mov
push
pop
psadbw
popa
mul
sbbl
mov
inc
ret
jmp
data16
mov
adc
insb
mov
adc
jne
fs
adc
pop
adc
imul
andb
xchg
or
aam
imul
popf
pop
xchg
cmpsb
jae
fisubs
add
inc
xor
push
stos
jo
notl
out
or
movsb
push
subb
push
adc
cmp
or
adc
popa
lcall
into
es
addl
fiaddl
mov
or
xor
push
sbb
add
xchg
adc
adc
mov
jecxz
ds
ja
pop
cli
mov
xor
inc
test
dec
push
mov
cld
xchg
stc
xor
insl
mov
scas
add
adc
push
int3
pop
adc
mov
cmp
je
sub
shll
pop
adc
shlb
scas
sbb
outsl
sbb
pop
jmp
mov
outsb
mov
adc
repnz
xchg
jae
rolb
stc
push
int3
pop
adc
push
pop
test
movsb
leave
imul
xor
fistl
xchg
test
mov
mov
popa
mov
ds
insl
aad
xchg
jecxz
or
adc
cwtl
or
adc
xchg
in
push
lods
cmp
xchg
and
cmp
mov
adc
popa
push
adc
pop
sbb
pop
mov
scas
pop
xor
xor
and
xchg
fnstenv
add
movsb
dec
xchg
push
imul
adc
les
adc
lea
mov
sub
or
add
dec
js
popa
push
adc
jnp
lods
pop
out
fs
pop
adc
pop
add
in
rcll
pop
adc
mov
fistpl
or
push
dec
jbe
popa
push
adc
pop
add
mov
pop
adc
xor
daa
dec
xchg
mov
test
imul
xchg
in
ss
fimull
clc
or
adc
loopne
in
sub
cli
aad
sarl
xor
mov
lods
fnstenv
sub
dec
xchg
and
js
popa
push
adc
nop
push
or
loop
add
xchg
lods
movsl
mov
adc
sbb
push
int3
pop
adc
scas
pop
mov
sysret
in
test
cmp
sub
push
int3
pop
adc
mov
ficompl
sbb
xchg
xor
lods
icebp
or
adc
push
xor
aas
cmp
push
xor
faddl
iret
cmp
jecxz
scas
lds
add
aas
jmp
cmp
mov
or
adc
mov
leave
add
cmp
int3
pop
adc
int3
sbb
adc
pop
leave
sarl
iret
inc
andl
adc
push
adc
mov
cmpsl
adc
adc
xor
mov
dec
jae
lahf
ss
loope
or
push
adc
dec
or
outsb
mov
popa
icebp
inc
ja
fimuls
insb
setg
and
mov
ss
int
int3
pop
adc
enter
lods
subb
ljmp
mov
push
clc
adc
out
mov
imul
movsb
daa
cltd
pushf
pop
xor
mov
adc
in
mov
push
adc
mov
mov
adc
outsb
jno
movhps
adc
fadd
iret
rcl
mov
mov
pop
adc
nop
mov
push
push
bound
repz
in
mov
arpl
add
int3
pop
adc
dec
pop
or
insb
cltd
rclb
cltd
jbe
xchg
mov
pop
adc
mov
test
outsl
push
test
add
adc
aad
and
adc
pop
sti
pop
xor
mulps
add
enter
push
adc
push
clc
or
adc
out
jecxz
insb
mov
adc
pop
mov
adc
mov
adc
stos
enter
test
ret
imul
or
sub
adc
pop
mov
adc
pop
adc
push
adc
and
pop
loopne
jnp
popa
push
adc
mov
pop
cmp
inc
ds
jb
test
and
adc
shlb
stos
hlt
pusha
push
adc
mov
mov
dec
push
lock
push
adc
and
pop
adc
sub
pop
pop
mov
dec
addb
out
stc
pop
scas
or
add
push
pop
push
jecxz
push
dec
bts
pusha
push
adc
bnd
addr16
mov
inc
rorl
push
dec
loopne
jmp
and
enter
and
adc
gs
pop
adc
add
cmp
pop
adc
push
lock
pop
adc
mov
cmp
mov
sub
push
dec
pop
cmp
pop
adc
dec
xchg
and
cmpsl
dec
call
xchg
push
xor
push
movsl
cmp
lret
dec
cmp
pop
adc
xchg
subb
add
or
clc
pop
adc
mov
xchg
add
outsl
push
popa
push
adc
inc
testl
cmp
pop
adc
jp
mov
adc
out
mov
out
mov
dec
xchg
mov
into
inc
int3
pop
adc
notb
dec
ljmp
bound
xlat
pop
adc
test
fsubrl
add
cmp
lret
dec
xor
adc
notb
dec
loop
mov
dec
xchg
and
add
out
sub
test
push
adc
pop
sub
xchg
sub
or
add
in
push
sub
push
cmpsl
dec
mov
pop
int3
pop
adc
jnp
push
movsl
in
test
xor
add
in
and
pop
mov
pusha
int3
pop
adc
int3
nop
and
fistps
pop
popf
adc
xchg
sbb
fidivl
fnstenv
pop
adc
mov
sahf
test
sub
mov
bound
insl
fidivl
mov
mov
mov
lahf
fsubrs
push
sti
in
jb
fnsetpm(287
aas
mov
sub
in
ret
push
adc
insb
xchg
pushf
data16
mov
and
xchg
arpl
adc
popa
adcb
pop
cltd
sbb
ret
jl
push
dec
fs
push
adc
sub
cltd
test
xchg
les
jp
dec
jbe
dec
frstor
pop
mov
mov
mov
fwait
int3
les
adc
lock
sti
enter
mov
out
cli
jb
shlb
mov
rcrb
imulb
cmp
pop
adc
pop
xorl
lret
mov
mov
popf
lods
popl
xchg
push
int3
pop
adc
adc
out
push
fchs
aam
fsubr
pop
xor
rcl
inc
add
sbb
aad
divb
adc
lods
outsb
fcoms
js
mov
aad
test
mov
jge
test
xchg
cmp
shrl
cmp
sbb
mov
adc
rcl
lods
mov
leave
cmp
popa
push
adc
out
mov
push
fisubl
jae
int3
pop
adc
push
enter
add
jne
adc
pop
adc
or
pop
ss
int3
pop
adc
push
dec
jbe
daa
or
icebp
push
jg
xchg
adc
lods
jmp
addr16
lea
out
and
sbb
mov
xor
outsb
xchg
daa
xor
add
adc
pop
sar
pop
adc
bound
aad
and
push
adc
divb
push
cmpsl
repz
cltd
push
sub
inc
xchg
jle
hlt
mov
std
andb
push
xor
dec
addb
sti
lea
mov
push
daa
adc
mov
adc
dec
outsb
sbbb
popa
rcl
mov
movsl
adc
and
mov
ret
loop
pop
aad
xor
sar
clc
pop
adc
mov
sbb
dec
fsubrp
dec
mov
addb
push
test
xchg
mov
xor
loopne
repz
out
mov
xlat
fisttpll
pop
adc
roll
adc
push
push
mov
lea
push
out
and
push
mov
nop
pushw
adc
xchg
mov
pusha
push
adc
mov
aad
into
sub
mov
adc
dec
fstps
arpl
adc
repnz
pop
adc
jbe
sbb
sbb
adc
pop
add
mov
adc
pop
push
sub
sub
lods
pop
ss
gs
les
adc
dec
fcomps
push
adc
enter
jp
mov
push
pop
or
cmp
imul
mov
mov
mov
mov
sti
in
pop
lds
iret
or
packssdw
lods
dec
cmp
cmpsb
push
movsb
dec
pop
in
ret
dec
add
hlt
shll
cmp
add
push
push
movsl
dec
lods
push
and
push
adc
clc
dec
dec
xchg
sub
jb
mov
and
xchg
pop
adc
dec
xchg
sub
sbb
push
adc
fldt
push
cmpsl
cmp
jb
in
in
or
or
call
mov
adc
pop
je
dec
pushf
xchg
ficoms
xchg
xchg
movsl
mov
aas
call
lea
and
shlb
es
push
sbbl
jp
xchg
out
ss
cmpsl
dec
xor
out
xor
push
inc
add
and
push
xchg
sub
pop
aaa
sub
inc
out
dec
cmpsb
dec
pushf
mov
jno
xchg
filds
sbb
hlt
add
and
pop
std
es
cmp
sbb
enter
xchg
bound
xchg
test
xor
and
xchg
mov
xor
adc
inc
push
out
xchg
push
mov
sub
orl
push
cmp
cmp
es
shlb
push
adc
enter
mov
es
mov
xchg
and
or
dec
xchg
fdivl
push
adc
out
fmull
jne
js
popf
sub
sbb
pop
adc
sub
pop
adc
inc
aaa
xchg
cwtl
je
pop
fcomps
and
mov
push
ret
or
cmpl
add
rorb
xchg
xchg
fsts
mov
inc
dec
sub
int3
push
nop
int
mov
pop
aaa
xchg
les
int3
mov
outsl
lcall
cmc
sbb
inc
fmuls
xchg
daa
lret
inc
pusha
push
adc
lea
scas
or
jle
daa
in
mov
push
repz
push
adc
lds
pop
mov
adc
and
push
adc
arpl
nop
test
lret
int
cmpsb
enter
mov
sub
cld
xchg
mov
mov
fadds
xor
call
mov
fcmovnbe
dec
mov
shlb
add
mov
leave
sahf
repnz
cwtl
lock
inc
sub
add
sub
mov
xchg
or
adc
or
in
mov
sub
push
adc
mov
jne
xchg
mov
xchg
aas
xor
shl
mov
push
aam
mov
adc
add
or
pusha
push
adc
insl
add
jbe
incb
pop
dec
js
lock
pop
sub
cmp
pop
out
and
pop
in
or
push
std
lcall
pop
add
in
push
inc
mov
mov
push
xor
sbb
out
fucomp
imul
and
ljmp
movsb
subl
sub
dec
push
imul
sbb
pushf
mov
adc
sub
adc
sahf
mov
jle
pusha
push
adc
pop
lea
adc
adc
jp
or
int
push
ret
xchg
cmp
push
adc
int3
push
mov
or
ja
dec
xor
sbb
sbb
dec
and
ficomps
mov
sbb
pusha
push
adc
mov
and
pop
ss
pusha
push
adc
stos
sbb
bound
imul
or
cs
std
or
cmp
in
and
adc
push
fstl
mov
xor
push
lret
mov
addr16
pop
mov
addl
xor
lahf
and
mov
out
call
insl
loopne
jp
fidivl
loope
jge
sbb
push
sbb
xor
sub
mov
and
cmp
jo
adc
xor
jp
mov
xchg
sub
arpl
pop
out
cmp
pop
jns
sti
std
loope
pop
shlb
xor
xchg
xlat
shll
pop
and
pop
gs
sti
std
lock
lahf
cmp
test
cmpsl
jmp
rcrb
push
adc
outsl
in
pusha
push
adc
cmp
pop
out
sahf
cmp
cld
cmpsl
jmp
pop
dec
mov
xchg
sub
jmp
ret
in
pusha
xchg
scas
cmp
push
adc
clc
xchg
leave
js
pusha
push
adc
xlat
gs
lods
add
xor
pop
popa
pop
lods
xchg
jb
dec
and
jp
and
pop
mov
ja
mov
mov
adc
fcmovu
imul
pop
cmp
ja
sbb
xchg
into
mov
push
adc
je
xchg
sub
mov
push
adc
and
mov
xchg
in
pop
insb
xor
xlat
scas
fimull
pop
mov
pusha
push
adc
pop
mov
aad
xor
cmp
out
sbb
xchg
and
sbb
inc
fnsave
fbstp
cmp
iret
pop
mov
or
jmp
ja
arpl
adc
mov
fcmovb
shlb
mov
adc
cmpsl
cmp
push
adc
test
insb
cmp
loop
ret
jae
mov
and
add
cld
shlb
adc
insb
fldcw
and
push
cmpsl
sti
mov
in
ja
xchg
aad
and
adc
mov
sahf
adc
or
es
pop
mov
lret
icebp
mov
cwtl
out
push
cmpsl
lret
jge
dec
xchg
daa
jmp
mov
repz
dec
cld
cmpsb
and
es
xchg
fsubs
movsl
insl
shrl
ljmp
push
adc
shl
xchg
push
cmp
enter
push
mov
inc
popf
jb
cmp
mov
fldenv
xchg
ret
mov
decl
jne
sub
push
adc
lcall
fsubl
daa
dec
add
sbb
push
adc
add
adc
mov
add
mov
push
or
outsl
fwait
stc
test
cmp
sahf
xchg
xor
pcmpeqw
mov
sbb
adc
cmp
enter
push
adc
pop
int3
pop
adc
andb
fnsave
push
jb
sarb
sahf
dec
in
xchg
les
adc
sub
push
adc
lahf
mov
outsb
mov
mov
cmp
sub
loopne
jle
or
jp
mov
sub
or
loope
xchg
lahf
adc
jl
lahf
cmpb
scas
xchg
jae
pop
pop
fisttpl
stos
inc
dec
ret
fimuls
pop
cmp
mov
xchg
call
rorb
dec
cmc
mov
ja
lock
sbb
adc
pop
cmp
pop
inc
adc
cmc
push
flds
sbb
adc
lret
fildll
lea
es
ja
std
xchg
and
inc
sub
lds
insl
shrl
push
adc
xchg
or
sarb
push
rclb
popf
jp
mov
jmp
mov
adc
push
inc
mov
vpcmpgtb
std
or
test
pop
ss
fmuls
dec
mov
mov
aaa
insb
push
lock
call
loopne
mov
push
adc
add
popf
cmp
jecxz
sbb
pop
ds
bound
push
bound
addr16
dec
call
es
sbb
out
daa
gs
shl
lds
lret
rorl
adc
cwtl
les
and
pop
cmp
outsb
inc
lret
and
sbb
testb
mov
out
xor
lahf
mov
push
mov
lods
sar
popf
sbbb
mov
adc
cmpsb
lods
mov
or
in
mov
adc
adc
lock
or
mov
pusha
push
adc
cmp
dec
pop
mov
or
add
pusha
pusha
push
adc
and
pushf
cmp
push
sbb
jge
call
inc
imul
sub
push
adc
and
ficoml
test
out
aad
xor
pop
loopne
or
mov
repz
or
les
adc
dec
arpl
adc
push
mov
jae
fisttps
and
or
push
insb
fidivl
push
icebp
mov
mov
lret
into
pop
adc
push
cmpsl
dec
cmp
dec
pop
int3
into
pop
adc
movsb
movl
xor
xchg
imul
mov
loope
mov
lcall
cmp
adc
xchg
pop
stos
mov
mov
push
dec
push
out
sub
fs
jg
sar
enter
je
fidivl
pop
cmp
fsubs
adc
mov
pop
adc
loope
xchg
add
lea
daa
mov
lods
rcl
into
pop
adc
adc
pop
int3
lret
and
mov
into
pop
adc
mov
pusha
push
adc
bound
into
pop
adc
ss
int3
into
pop
adc
push
adc
pop
shlb
adc
repnz
cwtl
ret
fstpl
popa
push
adc
cmp
adc
mov
adc
inc
push
out
or
adc
leave
ljmp
adc
inc
lcall
adc
and
pop
adc
mov
daa
xchg
out
mov
je
inc
stos
push
idivl
movsb
faddl
push
out
cmp
testb
adc
sbb
scas
cwtl
mov
adc
cltd
mov
adc
jo
or
adc
jp
popa
push
adc
mov
pusha
mov
adc
arpl
adc
mov
adc
mov
inc
cltd
mov
and
pop
adc
push
call
fcmovne
scas
addr16
adc
cld
mov
adc
fdivs
push
adc
stos
push
es
mov
inc
repz
add
movsb
addr16
popa
push
adc
shlb
sbbb
push
adc
ffree
pusha
push
adc
ja
add
andb
pop
mov
mov
push
dec
iret
sub
adc
or
pop
adc
cmp
mov
in
sub
pop
dec
sbb
xchg
mov
dec
lea
cmc
or
adc
je
xor
mov
xor
ja
outsl
fimull
add
push
xor
jecxz
and
pop
cmp
sub
xor
xchg
arpl
adc
pop
call
pop
ljmp
es
cmp
sahf
pop
sbb
jmp
adc
fists
dec
sahf
sbb
push
inc
clc
out
xor
and
fs
adc
pop
test
mov
fidivrs
leave
adc
pop
adcl
jo
xchg
add
adc
jo
push
adc
lahf
cmpsb
push
sbb
popa
mov
xchg
or
pop
add
adc
adc
in
add
cmp
adc
pop
adc
outsl
sub
or
or
dec
jle
pusha
push
adc
lret
enter
jp
or
adc
shrl
mov
add
or
push
adc
ret
lock
push
adc
into
pop
adc
cmp
add
or
pop
iret
fucom
loope
ror
pop
adc
mov
lods
xor
mov
ds
adc
loop
sbb
insl
mov
mov
push
insl
add
dec
push
add
mov
fidivrl
lahf
mov
loopne
xchg
stos
lods
pop
in
ds
mov
loopne
xor
lret
or
movsb
sub
push
adc
sbb
movsl
xchg
add
or
ret
dec
mov
in
mov
cmp
ds
adcb
pusha
push
adc
dec
addr16
fcmovu
dec
mov
adc
mov
sbb
xor
int3
bound
adc
adc
adc
sysenter
cli
roll
push
mov
neg
inc
pop
outsb
push
addr16
xor
rcrb
aam
dec
cmp
pop
out
pop
mov
hlt
fidivl
in
xchg
push
jbe
xchg
insb
dec
fwait
xchg
and
xchg
mov
cltd
scas
sahf
cmp
ljmp
mov
out
mov
ds
cmp
mov
popf
pop
clc
insb
push
rcrl
xor
or
stos
add
cmp
scas
mov
dec
loopne
clc
jbe
fbstp
repnz
inc
push
jb
and
inc
nop
mov
call
loope
je
adc
dec
push
in
push
rorl
adc
sbb
inc
inc
lods
pop
push
int3
lcall
cmc
iret
dec
fst
scas
mov
xchg
sbb
das
or
sbb
sbb
push
and
sub
xchg
xchg
mov
push
bound
add
mov
leave
mov
movsl
xchg
test
push
popa
inc
lods
jp
out
fnsave
rcl
call
sbb
sub
lds
xor
adc
lret
xor
fcomps
out
sub
sub
pop
jecxz
push
paddd
stc
cmp
xor
pop
lods
mull
or
loopne
push
push
add
cmpsb
and
fbstp
mov
lret
push
es
push
fdivr
rcll
xor
mov
jne
pop
mov
push
adc
push
sub
icebp
add
in
cmpsb
lods
add
xchg
ds
sahf
sub
mov
mov
rcrl
fdivl
repz
inc
jbe
ret
mov
jle
call
xchg
jle
mov
and
mov
out
jns
int
push
outsb
inc
push
popa
xchg
mov
cld
push
mov
dec
es
aaa
xor
jl
push
fisttpl
push
add
js
ret
mov
push
out
pop
mov
xchg
dec
jnp
jl
movsl
cld
sbb
cs
icebp
mov
lods
mov
andl
cltd
loop
lret
popl
cwtl
stc
and
jecxz
push
adc
lahf
add
imul
or
sub
dec
arpl
mov
dec
movsb
push
pop
pop
adc
sahf
inc
std
fnsave
sbb
push
adc
rcrb
das
push
adc
into
test
inc
sarb
mov
out
mov
mov
icebp
test
cmp
pop
xor
into
loopne
lods
or
sub
mov
loopne
mov
cmpsl
xchg
jnp
scas
aad
outsl
dec
enter
xchg
mov
dec
aam
xor
fldenv
loopne
add
mov
cmp
fbld
ds
adc
fiadds
cmp
dec
xchg
scas
repz
mov
ja
xchg
jb
clc
mov
adc
xor
imul
sub
loopne
mov
sub
adc
dec
lock
mov
and
mov
xor
fwait
es
stos
lahf
xchg
push
out
mov
dec
enter
xchg
or
dec
loopne
test
clc
and
pop
sub
outsl
shl
iret
dec
shrb
imul
pop
popf
loopne
loope
sti
inc
mov
outsb
sbb
cmp
xor
pushf
inc
lock
out
insl
sbb
and
sbb
outsb
in
push
out
cmpsb
pop
jge
mov
xchg
je
hlt
rorl
mov
subl
dec
cmp
fdiv
dec
pop
push
repz
fisttpll
cmpsl
xor
push
adc
add
cmpsl
xchg
sub
es
jge
sti
popa
test
loopne
mov
cmp
pop
lcall
mov
aas
jle
mov
push
insb
add
sbb
dec
sub
sub
das
pushl
add
xchg
es
addr16
add
aad
xor
es
pop
adc
sub
jno
xchg
and
xchg
fimuls
fisubrl
popa
mov
fs
sbb
xchg
add
mov
adc
pop
orl
div
pop
xor
pop
jmp
imulb
lcall
cmp
push
daa
mov
sub
xchg
push
mov
lea
mov
repz
fsubs
dec
sbb
lcall
mov
fidivrl
in
sbb
jnp
jnp
inc
js
mov
divb
shll
sti
xorl
shrb
insb
cmp
pop
mov
jmp
push
int3
arpl
mov
push
xor
imul
mov
mov
sbb
dec
sbb
inc
sbb
adc
push
mov
and
jo
and
mov
popf
sub
out
fsts
pop
sub
stos
mov
filds
push
test
test
adc
dec
push
les
mov
dec
jo
in
pcmpeqd
inc
mov
test
dec
arpl
test
push
inc
or
and
aam
hlt
mov
mov
mov
xor
xchg
mov
dec
aad
in
add
adc
xor
cmp
lods
jmp
mov
jmp
push
pop
call
es
dec
aaa
cmpsb
mov
aas
push
cmc
add
std
cmovbe
dec
mov
sub
or
roll
mov
or
or
call
cmp
ja
mov
rorl
jns
iret
fdivrs
jo
dec
mov
sarb
push
push
push
add
cmc
mov
cmc
push
testb
dec
jle
mov
or
jns
cmp
inc
pop
es
cli
push
and
imul
sub
push
push
imul
sub
inc
mov
in
mov
inc
fstpl
mov
sub
inc
mov
dec
mov
mov
or
fisubrs
in
xchg
cwtl
cmc
outsb
pop
dec
jb
xor
cs
pusha
cwtl
leave
pop
das
push
adc
in
aaa
jmp
rcl
scas
inc
jle
mov
sbb
mov
loop
push
xchg
dec
enter
xor
pop
rclb
xchg
pop
jne
xor
fidivl
and
xchg
sub
cmpsb
rorl
roll
dec
xchg
sub
pop
nop
and
stos
loopne
bound
imul
shll
cs
leave
xchg
lds
mov
or
push
js
sbb
mov
in
je
mov
fcoml
jb
jbe
ss
or
jns
insl
pop
rcll
daa
push
mov
cmp
or
sbb
in
xchg
sbb
mov
adc
loope
push
js
push
push
daa
push
mov
inc
xor
jno
pop
arpl
outsb
and
mov
sub
loope
push
das
push
sub
orl
pop
mov
push
repz
mov
pop
mov
add
xor
das
movsl
subl
mov
mov
pop
fistpl
pusha
mov
pop
ljmp
sbb
in
lock
fimuls
cmp
push
sti
fnstcw
xchg
mov
rol
lea
jnp
loopne
in
push
xchg
xchg
mov
out
jb
sub
clc
lds
insb
push
icebp
ljmp
pop
cmp
pop
inc
popf
mov
push
imul
cmp
test
or
fldl
add
enter
dec
sbb
mov
orb
dec
sub
stos
fbstp
push
cld
sahf
sub
push
mov
in
movsl
or
push
adc
xor
mov
out
jmp
inc
jmp
sub
push
xchg
cmpsb
jnp
and
pushf
cwtl
dec
mov
pop
and
and
sub
xor
scas
pop
pop
lock
sbb
nop
stc
sbb
sbb
out
dec
or
mov
mov
and
mov
jg
xor
test
and
mov
shll
ljmp
push
sarl
mov
cs
pop
dec
push
pop
dec
dec
outsb
push
outsb
mov
outsb
imul
das
or
roll
inc
int3
cmpsl
pop
cld
lahf
cs
lds
jge
mov
loop
xchg
sbb
inc
pop
sti
in
ljmp
popa
lods
xchg
roll
bound
mov
dec
jb
sub
fcmovnbe
mov
aam
inc
mov
adc
mov
xlat
cmp
ret
push
sbb
pop
insl
inc
rcrb
mov
mov
xor
fimuls
and
pop
adc
outsb
jno
loop
adc
mov
pop
ret
xchg
xor
sbb
adc
sub
int3
sub
pusha
mov
insb
push
in
xchg
add
push
int
xor
test
subl
mov
pop
gs
mov
test
icebp
add
subb
or
test
jae
sarl
lods
icebp
xor
mov
add
mov
test
cld
ds
gs
sahf
xchg
arpl
and
mul
in
xchg
xchg
xor
add
div
test
push
add
push
mov
mov
in
pop
or
cwtl
sti
cmp
mov
ds
dec
mov
or
cmp
mov
out
cld
jecxz
out
push
and
adc
lea
lea
jp
adc
hlt
or
adc
xor
or
sbb
jmp
cmp
fcmovnu
jo
ficompl
and
ds
insl
scas
lret
out
ss
mov
fbld
adc
inc
add
aam
mov
shlb
jo
sti
mov
xchg
inc
cmp
inc
in
inc
pushf
cmp
pop
ds
xchg
jecxz
sar
fwait
adc
jnp
out
mov
fistpl
and
pop
sbb
sbb
jae
imulb
mov
cwtl
and
out
ss
daa
adc
inc
dec
push
mov
shlb
jnp
out
cmp
sub
sub
xchg
and
leave
xchg
xor
xchg
push
mov
testl
lods
xchg
mov
xchg
xor
mov
pop
in
ds
sbb
jae
push
cmpsl
ja
out
xchg
jge
xor
sub
pop
aad
scas
pop
out
out
inc
out
mov
ficompl
xchg
lock
sar
lahf
mov
push
mov
xchg
fldcw
leave
out
ds
ds
clc
mov
in
push
movsb
ret
gs
js
aam
insb
and
lods
dec
popf
dec
lret
popa
push
repnz
aas
adc
xor
mov
mov
xchg
jae
in
in
cmp
dec
xchg
out
push
cmpsl
shlb
sbb
shlb
xorb
addr16
hlt
andl
push
mov
aaa
push
mov
mov
cmp
jnp
in
mov
adc
mov
pop
and
inc
popf
sub
push
pop
jbe
sbb
es
mov
test
aaa
fwait
cmc
sub
orb
mov
mov
loope
push
jne
bound
push
jmp
adc
push
mov
data16
xchg
addr16
sarb
repz
insb
mov
inc
cmp
xchg
leave
inc
sahf
pop
xor
pop
aaa
push
mov
sub
xchg
scas
adc
mov
lods
pop
sbb
outsb
fdivs
cmpl
dec
xchg
fbstp
or
stos
mov
arpl
adc
jecxz
fwait
jne
xchg
xchg
or
push
mov
adc
scas
xchg
aam
bound
fidivrs
mov
inc
pop
jne
cmp
aaa
sbb
fbstp
test
cwtl
mov
adc
cld
enter
mov
inc
mov
bound
or
xchg
xor
aad
push
jmp
mov
mov
adc
push
cmpsb
push
push
adc
iret
fcomp
adc
and
cmp
lahf
sub
roll
sub
stos
inc
xor
aam
into
lods
aas
push
lea
pop
push
xor
sahf
push
inc
lea
aas
fdivl
xor
xor
xor
or
jmp
cmpsl
ljmp
pusha
push
adc
mov
sbbl
fsubrp
jge
pop
lret
jecxz
push
mov
adc
sbb
aaa
fimull
push
cmp
aas
lret
xor
mov
adc
movaps
imul
std
xchg
xor
sbb
push
add
in
xor
push
jns
add
jno
jmp
and
out
jae
jecxz
push
jmp
sub
into
aad
cmpsl
push
cmp
cmp
or
test
xchg
movsb
cmp
mov
fsubs
adc
push
stos
fwait
loopne
mov
lcall
repz
popf
std
xchg
addr16
adc
iret
in
push
adc
adc
mov
mov
pop
push
sub
or
out
lea
cmp
jge
imul
mov
fcmovnbe
lods
rorb
and
in
inc
xchg
and
pop
mov
xchg
add
cmp
sbb
or
push
adc
lods
aad
sbb
lods
pop
out
mov
repz
popa
dec
ds
outsb
mov
mov
cmpsb
push
out
cmp
adc
xor
scas
fimuls
sub
mov
adcl
xchg
and
cmp
push
shll
jb,pt
mov
ret
dec
xchg
sub
cmp
idivl
xor
xlat
lods
pop
fistpl
xor
sub
enter
bound
jecxz
and
fnstsw
cmp
mov
and
movsl
xor
cmp
das
dec
xchg
and
mov
pcmpgtw
and
gs
movsl
dec
out
and
lret
fisubrs
stos
or
push
gs
xchg
and
xlat
cmp
sub
pop
fimull
mov
add
push
adc
cmp
cmp
lret
jl
sub
inc
call
loopne
mov
xor
imul
dec
popf
xlat
pop
loop
jmp
cmc
sub
dec
xchg
mov
cmp
loop
fnstenv
sub
xchg
dec
xchg
sub
mov
fcmovbe
scas
add
adc
movsl
in
popa
sbb
and
push
in
mov
push
pop
int3
fisubrl
insl
cltd
cli
sar
mov
dec
jmp
out
mov
outsl
inc
mov
shlb
in
inc
fwait
pop
pop
stos
mov
add
sbb
es
subl
lea
xor
push
popa
pop
popa
push
adc
add
dec
xchg
ret
jae
daa
adc
dec
mov
int3
adc
sbb
pop
bound
int3
mov
jbe
or
lods
sbb
les
adc
mov
lcall
sub
pop
int3
pusha
in
pop
aaa
sub
adc
pop
xor
lods
loope
and
mov
cmp
outsb
fldenv
repnz
push
xchg
mov
lods
iret
dec
fidivs
sbb
xor
mov
shlb
adc
push
xlat
inc
push
cmpsb
mov
and
push
ret
cmp
or
push
ljmp
jg
aam
jge
mov
fldl2t
push
mov
stos
jae
stos
les
dec
aaa
lds
cmp
inc
shll
mov
repz
in
xchg
data16
ja
xchg
and
mov
mov
cmc
mov
nop
mov
jnp
mov
push
sub
mov
les
push
jne
lcall
aaa
in
push
pop
fnstsw
lret
cwtl
sub
push
sub
icebp
add
fs
adc
pop
int3
or
pop
xor
shlb
sub
mov
dec
lret
xor
fdivr
mov
mov
push
adc
icebp
into
daa
orl
jl
mov
insl
push
adc
jae
cmpsb
adc
xor
or
pop
addr16
aam
stos
insb
cli
push
decb
out
add
lret
es
rol
mov
pop
jo
dec
es
rol
mov
and
dec
mov
mov
push
cld
xchg
xchg
cmp
ficomps
std
or
loopne
push
jmp
scas
stc
and
cmp
jmp
pop
cld
dec
mov
stos
bnd
rolb
push
cmc
inc
sub
cmp
stos
pushf
mov
jge
adc
popf
push
out
nop
fs
insl
nop
cmp
jmp
out
popf
or
mov
outsb
and
add
cmc
mov
inc
jmp
sub
cmpsl
lcall
mov
shrb
cmp
rolb
test
push
pop
cmp
ret
cmp
sarb
dec
shlb
mov
xchg
and
out
mov
rcrb
in
loope
lds
push
loop
and
pop
cwtl
cmp
loop
xchg
push
or
and
out
mov
push
cmp
enter
test
lods
xchg
push
loopne
scas
mov
push
lock
ljmp
cmp
pushf
mov
dec
loope
mov
lock
sbb
stos
test
test
das
push
adc
scas
fdivs
mov
andb
loope
xchg
mov
imul
in
and
ljmp
lods
add
arpl
add
scas
mov
loopne
daa
push
mov
into
fisttpll
sub
mov
popf
xchg
sub
shrb
ret
out
mov
push
mov
cwtl
aam
mov
lahf
lock
push
inc
push
in
mov
or
fmull
mov
aam
fcmovnbe
lahf
movb
outsl
in
pop
loop
inc
filds
xchg
push
pop
ret
ret
jne
js
scas
mov
les
stc
adc
dec
and
xchg
pop
loope
jmp
adc
ds
fidivl
sbb
pop
sub
sbb
fsubrl
out
divl
push
adc
jno
outsb
pop
pop
sub
sarb
dec
mov
pop
in
inc
cmp
and
aad
cmpsb
and
inc
out
and
dec
test
jl
xor
divl
fldenv
inc
movsb
xchg
inc
arpl
insl
push
adc
repz
push
call
xor
or
je
lcall
clc
or
push
iret
pop
sbb
jne
adcl
scas
in
pop
add
fisubrs
scas
addr16
adc
inc
repnz
cs
pop
pusha
sbb
or
dec
cli
add
decb
test
ja
movhps
mov
outsl
popf
and
mov
pusha
push
adc
push
cmc
scas
inc
xchg
sub
rcrb
adc
jne
pusha
dec
xchg
xchg
sub
adc
mul
cs
adc
scas
cmp
and
dec
fs
cmp
jmp
push
adc
shl
scas
inc
mov
inc
punpckldq
daa
aaa
mov
cmp
pop
pop
adc
leave
mov
dec
jg
or
push
adc
inc
adc
mov
fisttpl
sbb
ljmp
enter
mov
xor
imul
mov
sbb
fs
mov
stos
mov
bound
lods
pop
or
and
lds
dec
xor
nop
mov
mov
dec
in
xchg
mov
xlat
xor
lock
aaa
push
pop
jne
std
nop
stos
sti
lahf
mov
ret
pop
es
in
push
shrl
scas
sti
lds
scas
xchg
mov
sub
pop
or
push
repnz
xchg
xchg
out
or
push
adc
sbb
pop
cmpsl
push
and
pop
inc
lcall
xor
pop
inc
jmp
and
lcall
leave
gs
push
out
out
push
xchg
inc
push
inc
imul
jb
fildl
mov
adc
jecxz
movsb
dec
push
shr
pop
and
arpl
sub
lcall
adc
xchg
pop
pop
add
iret
stos
aad
scas
xor
testb
jns
popf
pushf
adc
scas
popf
sub
not
cmp
nop
imul
arpl
jp
push
add
dec
loop
jo
push
es
fucomp
shlb
fisttpl
pop
inc
push
and
call
sbb
ds
insl
test
xor
xlat
pop
jb
dec
xchg
pop
loope
cmp
lret
inc
jbe
loop
mov
xchg
xchg
pop
jae
dec
xchg
push
mov
xchg
test
pop
fs
enter
fidivs
out
mov
xlat
das
push
adc
push
lret
fdivs
pop
mov
lods
push
repz
jmp
cmp
into
and
test
adc
dec
fisubs
sahf
out
pop
dec
sbbb
insl
fidivrl
or
push
adc
add
mov
pop
pop
sbb
mov
sti
roll
andl
popf
push
shrb
mov
dec
js
pusha
push
adc
and
bound
mov
jne
xchg
imul
pop
mov
mov
loopne
data16
lahf
pop
fs
lods
pop
pop
data16
in
adc
loop
xchg
jge
ss
and
mov
pop
out
lahf
dec
imul
dec
inc
repz
xchg
pop
out
jmp
sahf
jp
push
repz
pop
mov
jne
mov
xor
mov
ds
xorl
pushf
stos
push
jbe
dec
mov
lods
pop
xchg
xor
xor
sub
in
lcall
stos
xchg
es
and
nop
push
or
and
inc
sub
push
repz
test
push
xor
and
dec
xchg
pop
out
fucom
loope
add
movsb
sbb
xchg
fstps
and
pop
out
pop
xchg
jge
mov
dec
jl
and
es
aas
inc
jle
iret
jb
inc
popa
sub
xor
jg
mov
sub
aam
dec
frstor
hlt
mov
lock
cmp
dec
jmp
bound
sub
jmp
ja
je
push
cmpsl
clc
mov
adc
stos
popa
lahf
sbb
jbe
push
test
std
dec
push
lcall
pusha
push
adc
dec
pop
aaa
inc
iret
leave
sahf
jmp
lods
lds
lret
fisubrl
test
lods
pop
fildll
ret
aam
mov
adc
or
cmpsb
scas
addr16
adc
gs
mov
shll
imul
and
dec
dec
push
arpl
add
loope
push
cwtl
loopne
push
jne
jge
jne
mov
aad
scas
clc
mov
adc
push
adc
jno
stos
add
shrl
pop
fs
jno
fcmove
testl
pop
cli
mov
cmp
push
adc
sbb
cwtl
and
loope
mov
arpl
mov
adc
and
adc
mov
push
adc
adc
sub
add
push
mov
push
cmp
adcb
sub
lock
mov
jb
repnz
pop
test
xchg
test
imul
mov
out
fdivrs
in
jp
in
jp
stos
inc
or
xor
cmp
mov
mov
cltd
insl
add
inc
sbb
or
pop
inc
pop
cli
mov
xlat
dec
dec
mov
test
push
jb
and
pop
pusha
push
adc
mov
in
mov
push
cmp
dec
push
popl
adc
mov
push
adc
jno
cmpsl
jbe
out
pop
inc
inc
cmp
and
push
mov
nop
pushw
adc
imul
jle
pusha
push
adc
loopne
push
jmp
adc
stos
add
mov
cmp
add
pop
aaa
jns
dec
xor
leave
lods
mov
leave
and
test
cwtl
jbe
sub
sbb
stos
fwait
sub
mov
push
cmp
repnz
jmp
jmp
sub
ss
pop
adc
adc
xchg
in
ss
loop
sub
adc
pop
jg
fidivl
out
cs
mov
insl
pop
jno
adcl
jmp
scas
lcall
xchg
ret
movsb
popa
push
adc
and
bound
imul
ret
shlb
adc
sbb
jo
jns
cmp
arpl
inc
xlat
lret
xchg
pop
jne
push
mov
movsb
nop
push
adc
clc
pusha
push
adc
push
sub
lea
adc
adcl
adc
mov
xchg
add
mov
dec
and
cmp
mov
loop
loope
xor
mov
push
nop
out
leave
js
popa
push
adc
pop
and
repz
and
icebp
sub
std
es
xchg
sub
sbb
ss
push
lock
ret
pop
xor
into
movsb
popa
push
adc
cs
mov
fwait
popw
fidivrs
cs
std
or
fwait
ret
mov
lods
or
pop
arpl
pop
jne
loop
and
mov
mov
loopne
dec
outsl
lods
or
cmp
push
adc
sbb
addr16
push
xor
adc
add
loopne
into
shlb
adc
dec
jne
pusha
push
adc
pushf
es
nop
ss
pop
push
jmp
mov
daa
dec
sbb
jge
popa
push
adc
add
dec
clc
pusha
push
adc
dec
push
daa
mov
fnstsw
pop
hlt
pusha
push
adc
nop
push
adc
nop
push
adc
push
out
inc
mov
xor
push
es
and
aaa
dec
push
mov
adc
adc
dec
movsl
lock
inc
scas
movsb
sub
ror
jmp
mov
sbb
pusha
push
in
outsl
sub
and
pop
sahf
lea
sub
inc
push
xor
mov
sahf
and
pop
movsb
lret
inc
push
cmpsl
mov
out
mov
add
mov
jae
dec
xchg
daa
inc
adc
scas
adc
push
aad
pop
mov
pop
fsubs
cli
xchg
and
je
adc
mov
jnp
test
and
mov
jge
sbb
inc
popf
sub
push
adc
std
pop
or
das
lea
adc
aaa
sarb
cmp
push
jae
fmull
idivl
jle
mov
scas
sbb
jbe
add
ficoml
es
out
shlb
adc
push
adc
mov
push
sub
arpl
and
fdiv
in
data16
int3
adc
pusha
push
adc
adc
pusha
push
adc
push
mov
inc
mov
cmp
clc
ret
aam
jl
xchg
add
mov
and
adc
and
push
sar
mov
scas
jo
fs
push
in
inc
pop
xor
aam
cmc
inc
arpl
adc
call
mov
or
inc
arpl
adc
add
es
push
sbb
bound
adc
dec
cwtl
stc
out
stos
cmp
pop
imul
cmp
into
mov
outsb
xchg
pop
jae
sub
adc
stos
or
mov
nop
outsb
lcall
push
loop
xor
aad
pop
sub
push
or
into
cmp
pop
in
aas
test
sub
or
push
adc
shrl
in
or
adc
lahf
sub
add
std
repnz
add
sbb
dec
clc
add
push
adc
sub
cwtl
pusha
push
adc
pop
mov
into
jbe
pusha
push
adc
push
adc
lock
repz
js
insl
pop
jae
fnstenv
cmp
insl
ficoml
mov
mov
push
aad
test
lods
pop
xor
sbbb
sub
mov
sbb
ret
jae
xor
dec
jbe
pusha
push
adc
and
adc
stos
mov
arpl
mov
adc
jmp
clc
pusha
push
adc
push
sub
push
rclb
into
hlt
pusha
push
adc
shll
cmpsl
les
jb
mov
aad
cs
movsl
mov
cmp
shlb
lods
aam
push
mov
mov
adc
xchg
sbb
pop
adc
xor
dec
js
arpl
adc
pushf
mov
leave
xchg
mov
push
lods
xlat
xor
xchg
into
cwtl
popa
push
adc
adc
xor
cmp
xchg
iret
pusha
popa
push
adc
fsubrl
loopne
cs
cmpsl
dec
xor
cwtl
fsubs
adc
mov
push
movsl
cmp
xor
dec
bound
insl
in
push
adc
aas
pop
lahf
fists
call
pop
loope
and
adc
jb
push
dec
mov
mov
outsb
fchs
ds
out
rorb
push
adc
push
push
mov
aad
les
and
arpl
adc
insb
sub
adc
fmuls
adc
xchg
shlb
dec
inc
sbb
lcall
ljmp
pop
dec
and
jp
adc
push
xchg
insl
pop
out
and
inc
adc
inc
addl
jno
mov
push
stc
inc
pop
mov
out
mov
adc
add
push
adc
sbb
xchg
cwtl
cmp
inc
or
mov
les
adc
das
out
push
sub
sahf
inc
divb
push
aam
push
adc
push
adc
repnz
adc
movsl
ljmp
jns
jmp
adcb
dec
fs
push
out
xor
shlb
nop
sbb
pusha
push
mov
mov
xchg
pusha
push
adc
mov
inc
repz
push
adc
ret
cmp
mov
into
jbe
scas
shll
in
les
jmp
inc
test
imul
push
mov
pop
jo
daa
loopne
pusha
push
adc
push
pop
jp
mov
scas
sbb
push
sbb
into
jg
int3
lcall
ss
mov
shr
int
sbb
xor
add
jmp
movsl
sbb
lret
jmp
pop
insb
dec
adc
mov
subb
lahf
xchg
jge
push
xor
call
dec
sub
mov
aas
push
cmc
add
incb
xor
imul
push
sbb
mov
add
add
test
push
add
ret
loop
lods
aam
das
cmp
mov
shll
push
jmp
mov
push
adc
outsb
ds
and
xchg
push
loopne
bound
or
insb
mov
stos
mov
jge
fwait
sbb
sub
aas
repnz
sbb
and
ja
pop
push
jecxz
adc
fwait
loop
pop
xchg
cli
and
cltd
pusha
cld
pop
sub
push
adc
inc
xchg
lds
xor
sub
test
jne
dec
xor
push
or
mov
jo
push
adc
add
mov
sub
scas
mov
cld
push
xchg
mov
ret
lds
adc
adc
rorb
adc
xor
push
adc
inc
pop
in
xchg
loope
pop
ret
cmp
es
mov
neg
mov
cmpb
cmpsb
xchg
sub
dec
push
jae
leave
ds
outsl
adcb
xchg
sub
mov
push
xor
outsl
push
and
in
push
inc
imul
dec
xchg
and
sub
push
adc
cmpsl
dec
jbe
pusha
push
adc
xchg
sub
mov
dec
xchg
and
xor
push
adc
loopne
jp
in
dec
pushf
cmp
cli
imul
pop
adc
sbbl
insl
fidivrl
sahf
test
mov
pop
sbb
insl
scas
mov
mov
mov
and
and
pop
arpl
lea
imul
sbb
mov
fistpl
and
push
xor
lods
pop
loope
popa
inc
in
out
int3
pusha
push
adc
jno
pop
sub
insl
ds
xchg
or
or
fnstsw
inc
dec
xchg
and
mov
in
mov
push
repz
xor
lods
pop
loope
daa
push
in
xor
xor
lods
pop
in
test
inc
popa
push
adc
mov
jecxz
popa
push
adc
stc
mov
sub
pop
mov
xlat
push
das
outsl
xchg
or
xor
cmp
les
adc
mov
mov
adc
push
stos
pop
mov
test
cwtl
pusha
push
adc
popf
push
ds
xor
pop
loop
aam
popa
push
adc
push
rcl
stos
pop
xor
push
adc
imul
popa
push
adc
mov
push
iret
sub
loopne
push
mov
jmp
push
adc
shrl
aas
shrl
xchg
push
adc
pushf
dec
adc
scas
sarl
mov
lea
repz
out
inc
imul
in
push
mov
adc
sbb
adc
test
adc
inc
xor
sub
adc
xchg
sbb
adc
adc
jp
mov
daa
sub
dec
xchg
es
and
inc
adc
dec
xchg
cs
push
adc
and
adc
dec
xchg
cs
pop
pusha
popa
push
adc
and
mov
scas
add
loopne
in
ss
out
adc
adc
je
test
mov
dec
jmp
dec
jb
push
mov
test
shlb
adc
scas
aad
mov
popf
pop
sbb
ljmp
add
mov
jbe
nop
imul
in
pop
xor
pusha
aad
fidivs
jmp
pusha
add
leave
adc
mov
inc
inc
lock
test
jae
arpl
adc
and
xor
mov
mov
fstl
hlt
nop
push
adc
cwtl
arpl
lods
sti
inc
test
xchg
inc
xor
hlt
mov
inc
sbb
test
fs
test
in
nop
push
adc
mov
and
pop
jmp
or
loope
or
bound
clc
inc
inc
bnd
or
ret
popa
and
sbbb
mov
out
fsub
or
test
testb
std
pop
outsb
mov
ss
mov
subb
jno
xchg
mov
imul
gs
pop
adc
push
mov
adc
mov
fisubs
hlt
dec
sahf
push
xor
iret
cmp
mov
js
sbbb
pop
fdivl
mov
movsl
decb
mov
bound
mov
arpl
popa
push
adc
mov
addr16
adc
fdivs
ss
faddp
adc
int
fsubs
inc
popa
out
xchg
mov
andl
mov
adc
popa
push
adc
sub
dec
jbe
pusha
push
adc
xchg
dec
xor
daa
cltd
out
sbb
pop
mov
sbb
loopne
xchg
popa
es
xchg
push
inc
sub
arpl
sub
mov
es
pop
mov
pop
sub
add
jae
dec
lods
cmpsl
movsb
aam
push
adc
popl
adc
sahf
mov
std
movsb
mov
push
mov
pusha
push
adc
pushf
mov
fucom
loope
sbb
push
mov
lods
or
push
adc
dec
xchg
push
adc
mov
in
cmp
push
dec
movsb
popa
push
adc
inc
call
mov
fcmovu
imul
adc
cs
lods
or
jle
pusha
push
adc
test
cwtl
mov
ss
push
lea
xchg
push
push
push
xor
mov
mov
nop
push
adc
jp
adcb
and
push
adc
call
insl
in
cmp
mov
int3
xrelease
aad
mov
in
movsb
mov
push
dec
loopne
and
cmp
mov
dec
dec
xchg
sub
xor
xlat
lods
pop
cmp
inc
dec
pop
pop
outsb
xlat
lods
cmpsb
movsl
movsb
popa
push
adc
mov
sbb
cmp
mov
xchg
lea
mov
dec
xor
loop
movsb
and
dec
cmp
pushf
lds
and
cmpsl
nop
pusha
push
adc
cmp
cmp
ljmp
pop
bound
mov
adc
push
adc
add
aam
mov
shlb
adc
cmpsl
les
adc
add
sub
dec
xorb
dec
ret
mov
xor
push
adc
cmp
mov
adc
jbe
popa
mov
push
nop
push
adc
mov
int3
inc
nop
push
adc
push
xor
mov
repnz
lret
pop
sbb
adc
mov
ja
inc
dec
adc
sarb
push
aaa
or
jo
push
movsb
jbe
xor
cmp
xchg
and
pop
es
xchg
cs
lcall
dec
xchg
sbb
dec
xchg
popa
pop
jmp
arpl
aam
int
mov
cmpsb
lret
push
sub
jnp
pop
mov
cli
xlat
jae
mov
insl
aaa
out
mov
cmp
push
mov
ds
and
js
mov
add
cmp
insb
cwtl
jne
dec
loope
aaa
lret
and
mov
out
sbb
mov
push
adc
mul
fmul
das
lea
adc
push
jb
fwait
shr
outsb
in
push
js
push
dec
dec
inc
rorl
mov
stos
fs
mov
push
adc
or
rcll
shlb
adc
mov
adc
repz
mov
cwtl
daa
push
jne
sar
movsb
mov
sub
lock
push
adc
or
sbb
push
jae
mov
or
adc
sbb
sub
shll
sarb
inc
dec
mov
inc
dec
cmp
pop
push
push
adc
jecxz
sti
nop
dec
std
cmp
push
adc
mov
push
and
clc
pusha
push
adc
in
stc
test
hlt
pusha
push
adc
push
pop
cmp
xchg
js
mov
xor
dec
sti
mov
scas
addr16
adc
push
adc
lock
push
adc
adc
push
dec
out
sub
sbb
inc
arpl
adc
cs
test
push
shrb
adc
outsb
xchg
pop
fisttps
fwait
mov
fnsave
insl
test
test
inc
push
mov
mov
loope
lret
cli
shll
ss
add
out
repnz
mov
test
mov
cli
fnstenv
fnstenv
xchg
inc
dec
sarl
adc
sub
addr16
push
adc
jb
push
xor
mov
cmp
or
jb
mov
pusha
push
adc
ret
xor
in
mov
insl
aad
sub
mov
mov
in
or
out
repnz
pop
mov
mov
inc
mov
pop
jno
sub
jl
pushf
roll
push
adc
dec
xchg
mov
xor
xchg
js
stc
cmpsl
movsb
les
adc
loopne
ret
les
adc
dec
fwait
mov
addl
movsl
dec
cmp
aas
jbe
fidivl
mov
mov
mov
out
fidivs
mov
or
adc
jb
and
xchg
daa
shrl
push
icebp
fnstenv
sub
fsub
and
pusha
push
adc
jle
insl
lods
xor
nop
push
adc
dec
out
push
cmc
add
aaa
out
cwtl
pusha
push
adc
xor
test
pushf
fldl
adc
and
loope
nop
pusha
push
adc
lods
movsl
cmp
rcrb
inc
out
pushf
fldl
adc
inc
xchg
push
adc
mov
pop
adc
gs
pusha
popa
push
adc
xchg
sub
mov
lea
sub
call
bound
stos
jecxz
xor
test
cwtl
sub
loopne
popa
push
adc
loop
stc
push
inc
or
dec
jne
mov
inc
sub
cwtl
lea
in
push
loope
lea
adc
ljmp
std
loop
jmp
popf
mov
jbe
pusha
mov
icebp
sbb
adc
sub
in
and
mov
je
xchg
mov
fwait
inc
pop
mov
mov
and
lahf
cmp
pop
and
push
adc
push
and
daa
adc
dec
mov
addr16
int
or
sub
leave
sub
push
mov
xchg
and
fstpl
out
xchg
ss
cmpb
stos
mov
adc
push
bound
sarl
stos
call
push
fcmovu
sahf
and
sahf
sbb
ret
push
or
inc
icebp
rcrb
or
cmc
scas
inc
add
ljmp
fcoml
shlb
sbb
mov
jp
inc
push
std
shll
xor
jmp
and
addb
repz
pop
test
inc
out
mov
or
pop
mov
sub
sar
fadds
push
adc
jnp
add
push
adc
clc
nop
mov
jge
je
adc
mov
push
adc
in
pop
adc
imul
xchg
push
adc
mov
fprem
insl
dec
mov
aas
mov
popa
mov
xchg
push
adc
push
pop
mov
cmp
out
mov
xchg
gs
nop
push
adc
fisubrs
aam
xor
push
mov
insl
jecxz
mov
ret
std
xchg
adc
pusha
push
adc
test
jp
jb
fldl
adc
lea
adc
mov
aaa
mov
repnz
sub
aaa
pop
mov
jmp
dec
mov
xchg
outsb
mov
xor
jne
push
aas
lock
push
adc
mov
pop
mov
or
repnz
pusha
push
adc
cmp
ss
pop
pusha
adc
or
into
jbe
pusha
push
adc
push
xchg
pop
xchg
fists
mov
dec
dec
xchg
cmc
aad
inc
repnz
loopne
hlt
out
xchg
mov
xchg
ret
inc
arpl
adc
push
xor
ss
nop
push
adc
jmp
in
loopne
xchg
pop
xchg
fst
xchg
push
adc
in
mov
or
sub
cmpl
xchg
push
adc
xor
dec
mov
cmp
jnp
int3
xchg
push
adc
push
jmp
and
insb
loope
adc
in
nop
push
adc
jecxz
lods
movsl
out
mov
xchg
or
insb
xor
sub
add
ss
xchg
cmp
lods
pop
in
test
pop
mov
sbb
sbb
or
push
in
xchg
pop
into
lea
mov
lods
or
and
xlat
jo
jmp
adc
fnstcw
push
adc
js
fs
adc
xchg
xor
lods
pop
cmp
jmp
cmc
stc
aam
fnstenv
into
lea
cmc
cmp
call
xchg
xchg
jae
js
popa
push
adc
xchg
iret
or
adc
jno
fistl
call
popf
adcb
pusha
push
adc
sbb
dec
mov
cmp
xor
stc
out
sub
mov
xlat
lods
pushf
icebp
xchg
aad
pop
mov
iret
cmp
push
adc
sbb
imul
les
adc
ss
push
mov
out
xor
outsl
fdivs
adc
shr
push
cmp
and
dec
aas
fists
sub
adc
push
idivl
in
insb
dec
fwait
iret
jle
popf
mov
push
mov
inc
popf
test
outsl
inc
pop
fldl
cld
out
pop
adc
sbb
adc
in
adc
push
mov
loop
mov
inc
imul
jb
lods
addr16
loopne
pop
icebp
add
adc
movsl
add
fwait
es
push
xlat
dec
mov
push
adc
clc
pusha
push
adc
pop
adc
pusha
push
adc
xchg
push
adc
push
xchg
fs
mov
mov
inc
push
int3
dec
push
adc
test
roll
adc
adcb
push
adc
cmp
stos
mov
popa
push
adc
jo
inc
jb
inc
stos
xchg
aam
sti
outsl
test
adc
ret
fsubs
or
adc
jne
pop
jmp
int
xlat
xchg
fs
push
adc
iret
pop
adc
pop
dec
add
dec
jmp
or
and
push
adc
pop
add
les
inc
cmp
pop
addr16
pop
insl
jle
or
sub
push
push
enter
sbbl
paddsb
jb
xor
adc
adc
les
les
adc
mov
pop
adc
inc
jne
pusha
push
adc
xor
adc
and
fwait
and
pop
adc
inc
dec
jnp
mov
push
adc
sbb
rcll
mov
adc
cld
push
and
ljmp
or
lock
adc
lcall
push
xor
fiaddl
push
sarb
sbb
xchg
loop
jo
xor
adc
pop
je
outsb
fldl
adc
jne
sub
das
movsb
add
push
fucomi
orb
and
movsb
scas
pop
pusha
mov
and
inc
mov
gs
mov
adc
int
push
in
inc
sub
shrl
pop
arpl
lods
dec
clc
loop,pn
gs
inc
test
imul
push
jmp
in
adc
fsubl
adc
rorb
adc
push
mov
jb
xor
iret
ret
mov
push
imul
push
or
and
and
jb,pt
mov
sub
icebp
push
out
jge
dec
xchg
mov
call
in
test
or
xor
sti
into
xchg
and
dec
xchg
sub
pop
mov
and
shlb
adc
cmpsl
cmp
pusha
push
adc
push
movsl
dec
xchg
add
testb
adc
insl
fidivl
dec
out
clc
xor
mov
adc
mov
es
fisubs
dec
js
pusha
push
adc
mov
mov
pusha
push
adc
shrb
xchg
and
cmp
pusha
push
adc
sti
nop
pusha
push
adc
xchg
sub
in
mov
enter
jge
add
push
cmpsl
dec
insb
js
dec
fisubs
mov
sub
dec
cmp
dec
xchg
and
cmp
movsl
pop
mov
dec
popf
cmp
dec
mov
adc
ds
hlt
or
adc
mov
int3
bound
adc
mov
xchg
jo
leave
mov
lods
xor
push
adc
int3
sarb
xor
jb
enter
pop
sub
push
rorl
push
and
xchg
mov
mov
adc
adc
xchg
sbbb
xchg
out
pop
sub
push
adc
daa
mov
push
xor
push
movsb
aas
loope
je
into
cmp
cmpsl
mov
adc
xchg
inc
out
mov
gs
pop
push
mov
push
jmp
dec
xchg
leave
add
pop
and
arpl
push
adc
cmp
sub
test
test
repz
mov
push
sar
test
inc
aaa
jge
mov
mov
cmp
dec
das
and
dec
mov
fcomi
and
add
mov
and
fildll
pushf
rcrb
insl
mov
icebp
mov
mov
cwtl
loope
pop
sub
fnstenv
sub
sbb
sub
jno
aad
rcrb
push
outsb
lods
iret
lods
fdivs
dec
fwait
shl
xor
cmpsb
add
sarl
dec
ret
fcompl
pusha
push
adc
cmp
xchg
and
pop
sub
fldcw
ret
ret
inc
popf
xchg
insl
lcall
xor
sub
mov
xlat
dec
cmp
lds
cld
cmp
les
popf
jne
icebp
xor
movsb
ljmp
push
or
and
sbb
pop
jne
xchg
push
bound
aam
fadd
jecxz
jmp
enter
mov
outsb
fwait
xlat
pop
fst
mov
js
repz
inc
xor
pop
popa
and
and
popf
mov
sti
movsl
inc
pop
inc
mov
inc
jmp
scas
jbe
sti
mov
les
adc
das
xor
mov
jbe
out
jns
out
jl
aaa
leave
test
andl
lods
shlb
pop
in
ds
std
adc
add
or
fildl
mov
push
fdivp
add
popa
push
adc
cmp
insl
mov
and
and
adc
mov
test
imul
mov
push
adc
es
ds
and
and
cmp
jae
popa
push
adc
sub
xchg
push
adc
xor
pushf
pusha
push
adc
ret
hlt
pusha
push
adc
push
push
mov
in
push
adc
out
outsb
add
arpl
popa
push
adc
sub
pop
jmp
inc
fidivl
popa
adc
popa
push
adc
scas
inc
in
add
int
pusha
push
adc
les
adc
add
das
repnz
add
xor
je
fneni(8087
cmp
loopne
movsb
mov
call
push
rorl
or
shll
xor
loopne
mov
mov
pop
fcmovnu
outsb
lods
lcall
cmp
gs
inc
sbb
loop
mov
mov
push
mov
push
push
add
pushf
mov
shll
fidivrl
cmp
sub
fdivrs
dec
adc
mov
pop
mov
call
jne
pop
in
push
lcall
fiaddl
adc
pop
out
push
loopne
jmp
pop
sarl
fstps
xor
in
mov
lahf
test
fcomps
sub
pop
arpl
imul
pop
pop
pusha
dec
int3
adc
adc
pop
ds
repnz
gs
test
stos
mov
les
fistpl
mov
shlb
adc
ret
push
mov
xchg
lock
fstpt
fisubs
mov
shrb
lea
mov
pop
fdivrs
aas
mov
xor
repz
lods
test
xor
cmp
mov
cmp
or
insl
sbb
xchg
mov
test
sub
fdivs
stos
aam
cmp
jecxz
mov
xchg
dec
mov
mov
xchg
mov
mov
fnstsw
sahf
and
sub
or
aas
push
xor
std
stos
shlb
lret
popf
pop
in
inc
fcomp
jmp
jecxz
testl
push
int
xor
mov
jnp
inc
xchg
mov
jle
fstl
inc
and
cwtl
cmc
mov
push
xchg
mov
sub
lcall
std
jbe
xor
in
push
push
das
or
or
faddl
clc
adc
push
fs
xor
inc
and
rclb
das
fwait
sub
rolb
pop
mov
sbb
ret
movsb
cwtl
enter
jl
shl
mov
in
movsb
enter
adc
mov
push
jne
fs
in
sub
lahf
dec
out
xchg
lret
dec
int3
into
xchg
push
mov
inc
push
insl
outsb
sbb
xor
or
cmp
adc
movsl
js
jae
add
xchg
jae
les
push
mov
pop
adc
jbe
sahf
jmp
jne
sbb
and
push
insl
fwait
jb
int
popf
mov
addr16
loop
fnsave
in
fnstenv
push
sub
xorb
push
push
sub
aaa
cmp
lcall
mov
mov
pusha
push
adc
cwtl
in
inc
adc
pop
stos
aaa
xorb
sub
or
scas
ja
pop
jmp
jbe
and
dec
std
mov
push
arpl
adc
loope
mov
mull
pop
fadds
mov
adc
cltd
sbbb
pop
in
outsb
clc
adc
or
jecxz
daa
push
sarl
xor
loope
xor
fadds
cmp
mov
dec
adc
sbb
pop
mov
fnstenv
nop
xchg
icebp
bound
xor
subb
sub
sbb
adc
add
add
pop
push
and
fs
cld
mov
pusha
push
adc
nop
xchg
xor
nop
pusha
push
adc
cmp
sub
shrb
and
inc
add
test
lea
push
popf
je
nop
mov
adc
es
in
cmp
bnd
imul
mov
cwtl
rcl
and
sbb
mov
pop
xor
xor
nop
add
adc
xchg
add
fldenv
enter
cmp
xchg
push
adc
les
mov
push
test
mov
lods
mov
and
call
cld
cmpsl
cwtl
pusha
push
adc
cs
std
movsl
mov
cmp
in
aaa
xchg
fidivl
out
daa
leave
jmp
es
ss
aad
mov
outsl
fstpt
pop
loope
pop
les
in
sbb
es
sti
or
addl
dec
out
xor
or
lods
push
dec
mov
jne
leave
adc
jecxz
ret
cld
bound
adc
sarb
aad
mov
push
mov
fisttps
gs
stos
fdivrs
dec
gs
mov
cmp
sub
dec
xchg
push
cmp
fidivl
mov
cltd
roll
test
mov
fs
movsl
imul
rcll
dec
add
cmpsl
dec
out
xorl
sub
in
mov
ds
dec
xchg
push
inc
call
lock
pop
movsb
aad
outsl
xchg
fucom
addr16
inc
out
and
jbe
ficoml
mov
xchg
lods
xchg
stos
movsl
cmp
gs
dec
enter
push
adc
mov
dec
out
out
mov
enter
lahf
mov
out
sbb
adc
pop
jg
fsts
mov
sarb
out
fucom
cmp
cmp
inc
stos
pop
mov
cmpsl
dec
xchg
and
idivl
insb
shll
sbb
cmp
nop
imul
mov
pop
stos
xor
and
mov
mov
insb
cli
xchg
inc
int3
jle
inc
int3
imull
test
enter
andl
push
adc
popa
addl
bound
jmp
add
lods
mov
sub
int
add
xchg
cmp
inc
push
and
mov
ret
repz
xchg
imul
add
data16
aaa
and
sub
negl
jnp
sti
fsubrl
ret
jnp
push
pop
shll
and
adc
rol
fsubs
insb
shll
and
xchg
arpl
adc
cmpsl
aad
es
and
ret
pop
mov
pop
cs
std
int3
out
add
jnp
test
push
mov
fs
fiaddl
push
jae
fmulp
push
mov
fcmovnbe
jge
add
pop
push
repnz
pop
outsb
cltd
push
shl
adc
les
dec
pusha
push
dec
out
or
xor
add
xchg
push
adc
arpl
iret
decb
adc
adcb
pop
leave
xor
cltd
and
xor
aad
pusha
xlat
shlb
push
and
inc
xchg
lcall
ds
push
xorb
repz
push
mov
stc
nop
iret
mov
adc
push
fwait
push
ljmp
add
out
adc
sub
je
loope
xor
ret
push
mov
pop
push
dec
and
cmp
insb
js
xchg
add
dec
jnp
daa
sbb
xor
dec
cld
in
push
sbb
rorb
pop
sbb
hlt
test
data16
roll
push
out
push
and
arpl
mov
sub
aas
xor
mov
xor
sub
mov
inc
sub
addl
mov
jmp
movsl
sbb
sahf
and
mov
cs
xlat
jo
push
ror
cwtl
pusha
push
adc
mov
add
push
adc
imul
mov
push
adc
cs
std
movsl
arpl
iret
lods
pop
mov
sahf
outsb
rcr
mov
pop
in
pop
loope
cmp
mov
leave
in
shl
shll
fidivs
out
ds
ds
out
rorb
loop
xchg
jb
inc
xchg
iret
add
push
adc
clc
pop
pop
sub
dec
xchg
and
rcrl
xchg
jecxz
and
push
cmpsl
les
shlb
push
lock
cli
movsl
mov
fmulp
xchg
push
adc
mov
dec
jle
pusha
push
adc
push
lock
push
mov
cwtl
xchg
push
adc
sub
out
or
imul
loope
dec
shrb
pop
dec
xchg
push
insl
das
cmpb
decb
in
mov
sub
xchg
mov
pusha
push
adc
ds
cmpsb
push
xchg
sbb
cmp
add
cmp
mov
add
test
xor
sub
xlat
stc
xchg
sub
xchg
in
es
loopne
into
test
aad
pushf
cmp
inc
and
loopne
and
mov
xor
test
call
outsl
fimuls
out
pop
xchg
push
movsl
or
xchg
push
adc
mov
pop
adc
enter
pop
outsl
add
dec
pusha
dec
enter
pop
push
cs
mov
and
movsl
sbb
loope
cld
cmpsb
lds
aad
sbb
xchg
sub
loopne
xor
xchg
lods
dec
xchg
mov
notrack
into
pop
aad
pop
sub
xor
loope
out
mov
sbb
std
loope
outsb
leave
addb
lds
and
mov
sbbb
loopne
mov
je
xchg
call
lea
shlb
invd
adc
divb
sub
stc
xor
je
or
or
adc
inc
or
xor
mov
fnstcw
mov
pusha
push
not
movsl
xor
push
pop
popa
ret
data16
adc
jecxz
ljmp
loopne
addr16
and
ss
popa
loop
sbb
jg
jecxz
cmp
addr16
aam
movsl
dec
dec
outsb
jo
aad
dec
jbe
rorl
out
push
data16
into
push
sub
inc
out
ja
sub
test
or
loopne
xchg
loop
aad
fisubrs
out
dec
les
testb
push
ja
push
std
sub
jp
cld
mov
in
fcomip
aas
ja
pop
pushl
mov
xlat
mull
dec
int
pop
xor
scas
push
ljmp
bnd
dec
imul
lea
ljmp
mov
push
jbe
sub
pop
imul
dec
out
mov
cmp
sub
pop
dec
lret
hlt
sbb
sub
bound
mov
in
xor
out
fstpt
in
sub
or
mov
push
push
scas
ja
pop
stc
lods
jbe
xchg
jge
cmpsl
into
ds
jo
pop
call
push
push
pop
cwtl
sub
fisttpll
add
pop
mov
push
mov
jno
xor
push
add
roll
into
ror
out
clc
iret
int
jp
dec
and
ret
roll
insb
mov
mov
jne
xor
jne
pop
xor
gs
call
pusha
push
adc
push
je
push
shll
gs
mov
loopne
adc
adc
aad
inc
aad
dec
and
jecxz
aas
add
std
test
sbb
jecxz
ret
fnsave
mov
add
out
or
les
movsb
movsb
rorl
out
push
cmc
and
lds
lock
push
mov
mov
xor
or
or
jae
adc
mov
jmp
sub
fimuls
jmp
addr16
inc
outsl
xor
lret
cmp
ficoms
mov
mov
fidivrl
std
inc
mov
outsl
xor
ss
or
cmp
pop
in
lea
cmp
scas
shll
mov
jle
pop
mov
pop
mov
or
push
movsl
out
test
jnp
les
mov
mov
push
or
ds
jp
insl
fidivl
mov
popa
mov
shrl
xlat
std
outsl
in
addr16
mov
lret
rorl
push
in
dec
fisttpll
cmp
dec
fisubrl
lods
ret
jno
fnstcw
xchg
scas
xchg
popa
xor
xchg
mov
popa
lea
xor
push
xor
cmp
fsubs
sbb
dec
sbb
dec
push
fiadds
pushf
cmp
fbld
movsb
sbb
loopne
inc
mov
sub
loopne
push
adc
sbb
arpl
push
adc
mov
shl
xchg
ret
shlb
adc
mov
add
insb
outsb
scas
sbb
popa
pop
and
shlb
clc
xchg
push
adc
insb
mov
js
push
adc
mov
pop
loop
xchg
cmpsl
mov
aas
pop
pop
stos
or
cmp
cmp
test
aaa
sbb
mov
int
adc
push
adc
or
test
ljmp
andb
movsb
dec
xchg
test
in
repz
mov
pop
insb
add
fsub
loope
xchg
data16
cmc
mov
aam
rcrl
pop
aaa
pusha
scas
std
or
aam
push
lock
mov
invd
adc
mov
push
fidivrl
dec
mov
pusha
push
int
inc
rorb
or
push
movsl
nop
jno
scas
std
pushf
enter
and
loopne
sub
insl
adc
in
loope
invd
adc
loopne
jno
jp
gs
cwtl
push
and
push
sub
inc
pop
lods
pop
and
xchg
cmp
adc
push
lods
pop
daa
inc
lahf
mov
outsb
sbbl
gs
sbb
mov
fbld
ret
nop
loopne
sub
dec
adc
cld
mov
xchg
movsl
pop
sub
lods
xor
push
shlb
mov
lock
int3
stos
int3
fwait
lods
push
and
xchg
test
xchg
sub
pop
jl
push
cmpsb
push
mov
pop
std
adc
ss
mov
mov
add
pop
mov
in
fisttpl
lods
or
bound
jle
add
in
push
fwait
mov
shlb
adc
xlat
fistpll
pop
aam
cmp
lcall
pop
sub
in
seto
push
cmc
ficoml
mov
test
popa
mov
adc
add
repz
pusha
push
adc
in
mov
and
sti
test
es
push
dec
shll
cmp
xor
sbbl
and
aam
adc
cmc
xlat
adc
sub
rcrl
sub
push
adc
add
mov
mov
jb
push
loope
push
loope
imul
mov
jb
jmp
xchg
test
jecxz
xchg
cmp
jecxz
and
xchg
cmpsb
cli
ret
pusha
push
adc
es
iret
jmp
jnp
mov
pop
adc
out
adc
push
fninit
fdivl
ss
pop
in
cmp
out
cmc
ret
ffreep
mov
pusha
push
adc
xchg
adc
adc
push
bound
pop
pop
cs
jp
cltd
jbe
fsubrp
lods
sbb
fdivs
inc
add
fs
adc
mov
fidivrl
pusha
push
adc
pop
in
sar
add
mov
or
add
out
ss
sarb
push
repz
mov
test
xchg
xor
mov
and
popa
push
adc
fildll
nop
cli
xor
mov
ds
adc
fwait
inc
jb
push
cmp
push
jmp
lods
fbstp
mov
mov
adc
xchg
test
dec
loope
test
mov
xchg
das
repz
adc
add
push
adc
sub
jmp
xor
aam
xchg
jb
sbb
push
adc
cs
add
xchg
outsb
test
nop
and
aad
mov
test
xchg
sub
push
pop
pop
adc
push
push
cmp
loop
adc
lods
scas
pop
jge
dec
and
inc
xchg
and
pop
mov
ja
mov
jmp
mov
and
sbb
xchg
push
adc
lods
pop
ss
into
sbb
adc
sbb
ss
jmp
add
mov
scas
addr16
adc
fbstp
and
push
adc
cwtl
les
xorl
fcmovu
sbb
sbb
cmp
fstpt
sub
adcl
dec
jmp
insb
mov
insl
push
adc
movsl
ret
mov
push
cmp
xlat
lods
pop
pop
mov
stos
dec
mov
aad
lcall
adc
xchg
daa
dec
lods
pusha
orb
jne,pt
mov
mov
pop
in
and
or
push
hlt
jp
mov
adc
cmp
call
pop
pop
pop
ds
mov
mov
pop
hlt
insb
repnz
jae
push
roll
and
mov
pop
rcrb
mov
mov
xor
xchg
add
sbb
jns
mov
xchg
mov
js
fdivrl
insl
and
and
sub
pop
sub
and
data16
lods
mov
xchg
loope
push
jp
jecxz
jg
xor
xlat
and
fnstcw
jp
xchg
mov
ficompl
outsl
pop
ret
sub
mov
jae
jecxz
mov
sub
ret
das
sbb
xor
adc
orb
xchg
sub
stos
inc
fldt
adc
int3
aas
vrcpps
push
mov
fadd
xor
xlat
aas
js
arpl
mov
xor
push
jp
sub
xchg
pushf
sub
std
lock
pop
out
and
sbb
loope
xchg
sbb
adc
mov
iret
adc
jne
pop
jne
fistpl
sahf
and
fsubrp
fsub
adc
mov
xor
push
mov
and
pop
push
or
imul
lds
cmpsb
and
inc
imul
sti
mov
clc
push
fildll
pop
fadds
mov
pop
and
mov
out
sbb
xchg
pop
loopne
iret
sarb
mov
leave
push
xor
pop
pop
mov
dec
and
jge
inc
push
dec
push
sub
adc
ja
ss
jp
aaa
mov
enter
xchg
dec
mov
stos
mov
cmc
fadds
add
ss
loop
shl
or
push
sbb
hlt
push
loope
fsubr
push
sahf
ss
jne
dec
inc
lock
repnz
add
stc
mov
push
scas
in
insb
jg
xchg
ja
push
cmp
jbe
jle
lods
xchg
lock
jmp
addr16
mov
or
pop
shlb
mov
and
outsb
lahf
and
rclb
movsl
lret
jl
cli
mov
ja
leave
out
mov
shlb
mov
jge
jge
scas
pop
xchg
sub
or
inc
jp
arpl
lods
pusha
ja
sub
push
fistps
mov
fstl
cmp
leave
fdivs
mov
scas
mov
popa
push
lds
imulb
insl
pop
mov
cmp
sti
lret
xchg
and
pop
in
add
pop
pop
push
lods
mov
push
std
gs
je
xchg
movsb
out
popa
lea
jnp
xchg
pushf
xor
call
dec
fnstenv
test
or
jb,pt
mov
fisubrs
sahf
movsl
out
dec
cmpsb
dec
xchg
mov
aam
mov
fiaddl
pop
addr16
hlt
lahf
les
jecxz
movsl
movsl
mov
xchg
sub
int
push
in
gs
xor
xchg
repz
and
mov
add
movsl
pop
mov
mov
lea
and
dec
push
add
cmp
arpl
sub
ficoms
and
cmp
pop
jp
push
cmpsl
xor
or
imul
pop
ds
shrb
xor
shll
push
adc
in
aaa
dec
imul
cli
sarb
mov
stos
add
or
push
icebp
lcall
mov
mov
pop
adc
fstps
adc
out
xchg
popa
out
dec
test
scas
pop
pop
add
pop
imul
xchg
fsubs
cmp
pop
ja
and
cs
add
gs
mov
out
dec
adc
das
roll
sub
pop
hlt
loop
cwtl
scas
and
add
sub
out
aaa
cmp
push
daa
mov
cmp
add
mov
inc
push
fs
mov
in
add
lcall
mov
fiaddl
push
fwait
cmc
ret
dec
cwtl
mov
into
lret
sub
xor
outsb
xchg
fxch
sti
dec
fs
pop
mov
xor
arpl
pop
shrl
mov
xorl
mov
xor
movsb
aaa
jge
ret
and
and
mov
stos
pop
mov
cwtl
sub
or
mov
adc
enter
out
mov
mov
aad
bound
sahf
mov
mov
loope
outsl
fdivl
jg
jne
inc
xchg
push
adc
jo
mov
cmp
push
adc
test
cmc
aad
jle
xor
imul
leave
cmpsl
test
pop
adc
lcall
call
test
push
cmpsb
cwtl
nop
mov
adc
fisttps
push
jae
popa
xchg
fdivrp
pusha
push
adc
inc
xor
cli
js
or
adc
mov
sub
xor
adc
cmp
mov
rolb
push
mov
loope
adc
das
dec
cmove
push
mov
dec
mov
inc
pop
fs
rorb
test
stc
sbb
adc
lods
cld
or
adc
mov
aam
popa
push
adc
cmp
movl
hlt
or
adc
into
adc
cmp
clc
pusha
push
adc
icebp
inc
cld
or
adc
adc
cli
sub
loopne
jbe
stos
xchg
cmc
orb
fisubs
hlt
or
adc
push
adc
jbe
add
mov
pop
adc
fwait
insb
pop
mov
gs
mov
add
jmp
jbe
repz
fsub
mov
cmp
adc
cmp
pusha
push
adc
shr
and
pop
adc
add
adc
testb
adc
js
arpl
add
imul
lods
movsb
arpl
and
pusha
push
adc
jecxz
bound
push
lods
xor
in
into
inc
popa
push
adc
cld
shl
inc
fidivl
add
adc
add
or
fldcw
adc
or
adc
pop
dec
mov
jne
int
pop
fwait
push
lods
movsl
mov
xor
les
cmc
or
adc
sbb
insl
mov
push
lods
xlat
xor
lods
pop
mov
mov
in
adc
adc
cmp
loop
fdivl
mov
fwait
icebp
dec
xchg
mov
mov
adc
xchg
xchg
sbb
jl
popa
repz
daa
dec
add
lcall
xchg
push
xor
mov
cld
aad
inc
mov
lock
and
adc
daa
repnz
pop
sbb
lods
dec
add
inc
sub
loop
mov
pop
repnz
sbb
stos
jno
popf
das
lods
pop
ret
leave
aas
inc
loopne
xchg
jae
and
xchg
inc
xchg
or
ds
cmp
popa
push
adc
xchg
jle
pop
in
dec
ret
dec
mov
add
mov
insb
lret
push
aas
xchg
in
push
sub
lahf
rolb
dec
insl
mov
shrb
adc
icebp
dec
enter
cmpsb
bound
ds
lahf
mov
rcll
fsubrs
out
lds
pop
imul
jge
and
pop
adc
adc
sub
nop
lcall
cmpsl
and
pop
adc
cld
pusha
push
adc
xchg
ljmp
push
adc
sub
adc
push
aas
out
aad
adc
push
dec
sarb
add
mov
dec
jne
repnz
sbb
pop
adc
shrl
ficompl
mov
pusha
push
adc
adc
fstps
push
mov
pop
mov
aad
and
out
mov
fld
sub
sbbb
xor
in
jge
xchg
cs
daa
test
stos
sub
scas
lret
inc
fnsave
pop
shrl
insb
leave
add
js
popl
adc
sti
scas
aaa
mov
les
dec
mov
adc
stos
jmp
add
xor
mov
jecxz
stc
xor
fidivrs
repz
xchg
and
in
push
adc
fistl
push
ljmp
insl
inc
jp
cmpsb
ja
adc
test
jns
adc
repz
test
xor
imul
jmp
pop
jmp
jmp
jge
les
mov
test
fsubl
adc
in
fwait
outsl
cmpsl
xchg
push
outsl
xlat
mov
inc
xchg
pushf
push
cwtl
jnp
mov
push
adc
lea
imul
dec
mov
stc
call
mov
xchg
push
adc
mov
movsb
fiadds
xchg
outsl
dec
mov
sbb
movsl
repnz
leave
mov
jge
and
cmp
fnstenv
jae
aas
lret
cltd
mov
cmp
ds
xchg
dec
pop
clc
push
sbb
xchg
in
cmp
pop
daa
jg
shlb
adc
clc
and
xchg
ffreep
pusha
push
adc
and
mov
mov
cmp
add
inc
sub
call
fcomp
popa
push
adc
call
dec
pop
ret
cmp
mov
push
sub
push
adc
out
inc
fmuls
push
adc
pop
dec
adc
mov
stos
shlb
xor
cmpsb
leave
aad
cmp
loope
push
inc
dec
xchg
push
adc
pop
xor
cltd
dec
xchg
in
fmul
or
shlb
repz
jle
in
loopne
or
rcrb
jno
scas
dec
xchg
and
insl
fidivl
imul
xchg
mov
out
push
movsl
dec
cmp
mov
ds
shlb
adc
sbb
dec
pushf
cmp
les
adc
sub
popa
lea
and
pop
in
dec
xchg
pop
loope
out
cmp
insl
fidivl
mov
ds
xor
cmp
cmp
loop
das
daa
pop
mov
push
stc
pop
mov
pop
push
sar
xchg
mov
fdivrl
or
mov
jb
cmp
es
shl
test
test
mov
andl
jb
mov
scas
mov
and
ds
repnz
mov
sub
sub
ja
inc
jno
xchg
scas
xchg
jae
lea
mov
mov
jae
xor
pop
jg
scas
pop
xchg
pop
int
fneni(8087
cmp
fwait
mov
push
adc
aam
push
fcom
xchg
xlat
and
arpl
cli
shlb
lods
es
add
and
adc
andb
repnz
loop
adc
aad
bound
jb
and
adc
scas
das
mov
mov
sahf
mov
push
loope
mov
aad
sbb
outsb
mov
mov
mov
fdivrp
pusha
loopne
push
int3
addr16
shll
pop
lret
iret
pusha
push
popf
mov
pusha
jbe
mov
aad
cmp
jg
aam
jne
jle
shll
inc
mov
insl
stc
rolb
fisubl
or
sub
add
in
pop
idivb
lods
dec
insl
cltd
rcll
pushf
stc
fcmovne
xchg
lcall
lahf
mov
je
icebp
cwtl
sti
xchg
lods
cmp
xchg
mov
scas
add
or
sarb
dec
mov
shrb
mov
insb
mov
jle
aam
fsubrs
fucomp
dec
sbb
popa
mov
push
lcall
sahf
sub
ret
sub
pop
insb
test
cli
xlat
pop
cmp
xor
xorb
xchg
int3
or
std
adc
pop
cli
lds
test
adc
jle
insb
pop
cltd
add
or
sbb
rcrb
or
cmpsb
pusha
push
cmc
lods
pusha
sub
sbb
jmp
and
mov
addr16
sbb
pop
inc
int
std
es
in
fwait
test
jle
jmp
mov
mov
adc
addr16
inc
sbb
xor
test
mov
inc
fsubs
in
inc
aam
rcr
inc
mov
into
aaa
sbb
adc
adc
xchg
lods
imul
pop
clc
pop
loop
adc
lods
in
rcl
jbe
pop
cmp
push
fmuls
xchg
jmp
push
add
mov
push
jae
pop
mov
jne
stos
repz
sbb
jae
pop
mov
insl
stc
lret
gs
sahf
push
jns
andb
fs
xchg
stos
push
pop
stos
pop
xorl
fldenv
mov
mov
in
pop
xchg
and
sarb
or
call
sub
mov
sub
cmp
or
adc
pusha
decb
pop
adc
in
inc
enter
in
out
jecxz
xchg
xor
fisubl
cli
or
add
in
pop
mov
imulb
xor
sarb
loop
cmp
mov
mov
fbstp
pop
cld
imul
cwtl
mov
jbe
pusha
push
adc
xchg
and
aas
fdivrs
insl
fisttpl
pop
jne
cld
daa
in
arpl
lea
aad
std
mov
out
aam
movsb
xor
push
lock
push
mov
adc
cs
lds
push
adc
mov
call
out
xor
mov
jecxz
xor
adc
xchg
popw
scas
jecxz
aad
pop
cmc
or
adc
hlt
dec
dec
xchg
pop
jb
mov
adcl
dec
push
push
int
dec
insb
fidivl
mov
rcr
fisubrs
mov
push
repz
xchg
pusha
push
adc
adc
in
mov
sbb
dec
push
lret
in
leave
push
pop
mov
xchg
jecxz
stos
add
cs
std
movsb
gs
sahf
adc
sub
add
in
pop
out
loopne
cmp
dec
mov
adc
mov
jb
pop
jbe
pop
push
imul
push
dec
jbe
bound
adc
addr16
mov
mov
mov
sub
imul
rol
out
stc
lcall
push
adc
inc
testl
dec
mov
hlt
popa
push
adc
cmc
call
mov
mov
mov
pop
adc
add
dec
mov
fistl
fwait
adc
jecxz
les
adc
insb
push
pop
mov
fcmovnb
push
mov
testl
mov
adc
movsb
pop
xchg
pusha
push
adc
jns
popa
push
adc
xchg
xor
rcl
sub
leave
test
icebp
xchg
adc
lea
push
add
xchg
ret
pop
adc
sbb
push
addr16
popa
push
adc
fimull
mov
pop
cmp
lods
push
jmp
mov
insb
jbe
mov
mov
or
push
xchg
push
adc
loopne
movsb
lret
ljmp
test
adc
adc
adc
loope
lret
pop
int3
ret
dec
xchg
stos
xchg
xor
daa
adcl
sti
es
in
adc
xchg
int3
loope
sbb
add
mov
pushf
loopne
jge
enter
inc
mov
inc
inc
bound
xchg
add
ss
fldcw
mov
bound
jne
scas
fs
out
dec
imul
or
mov
sar
push
mov
popaw
sbb
mov
or
mov
xchg
add
fstl
pop
scas
out
mov
sbb
dec
xchg
pop
out
jne
add
and
iret
adc
outsb
mov
xor
or
cmpsl
test
data16
mov
inc
cltd
and
push
xor
fildll
push
cmp
fidivrs
mov
adc
call
jl
inc
adc
int
inc
scas
sti
adc
mov
push
aas
fstpt
data16
and
xor
test
movsb
mov
insb
add
jns
insl
sbbb
movsl
cltd
pop
add
fcomps
xor
adc
xchg
xor
pop
sbb
mov
mov
sub
fs
or
adc
dec
inc
cmp
or
adc
repz
jnp
fs
adc
mov
or
xchg
push
adc
stc
push
notb
and
cltd
xchg
call
xchg
or
fucom
mov
repz
mov
stos
addb
pop
in
imul
call
es
xchg
mov
pop
xchg
fs
xchg
xchg
push
sahf
jmp
mov
in
push
adc
cmp
pop
sub
or
pop
pop
out
or
pop
shrl
lahf
cmp
and
push
adc
outsb
daa
mov
dec
xchg
push
mov
xor
add
out
xchg
push
sub
push
movsl
cmp
rclb
dec
in
dec
xchg
and
test
adc
xchg
push
adc
xchg
ds
and
mov
lret
sub
mov
sbb
daa
mov
fidivrs
jnp
scas
imul
out
xchg
loope
pop
shlb
push
pop
imul
daa
dec
xchg
push
xchg
lods
xchg
sub
loop
neg
dec
xchg
mov
loopne
movsl
cmpsb
dec
xchg
in
data16
sahf
dec
insb
scas
mov
dec
lea
out
decb
mov
fisubs
into
dec
xchg
and
aas
push
and
dec
xchg
test
pop
fistpl
inc
dec
nop
sub
out
out
imul
adc
out
rclb
dec
call
clc
push
dec
xchg
sub
or
les
cmpsb
push
sbb
jnp
ss
adc
dec
pusha
mov
nop
mov
and
pop
sub
xchg
sub
fidivs
and
cmp
push
adc
inc
dec
pushf
cmp
mov
push
mov
dec
xchg
pop
movsl
or
rcr
mov
cmp
push
cmpsl
pop
scas
pop
jb
mov
xchg
push
pop
shrb
mov
pop
or
fimull
and
test
mov
mov
dec
xchg
sub
push
cmpsl
dec
cmp
ds
pop
and
fwait
ds
mov
rcr
pop
pop
icebp
out
mov
fidivs
sub
icebp
and
mov
test
fldcw
sub
xchg
arpl
inc
xchg
and
scas
daa
icebp
or
cmpsl
adc
push
adc
test
jl
loopne
cmp
add
xor
cmpsl
cmc
jo
or
and
sbb
inc
out
or
scas
mov
shlb
push
pop
mov
call
or
pop
xor
push
adc
adc
vfmaddsub231ps
aad
dec
dec
sbb
sbb
sbb
pop
das
add
adc
xor
or
shll
repz
mov
loop
mov
aad
repz
xor
bound
adc
fstpt
lock
push
shrb
fidivl
inc
fstl
mov
xchg
ja
test
cmpsb
mov
int
mov
jl
lds
xchg
push
ljmp
adc
add
adc
xor
add
adc
pusha
push
adc
lock
mov
scas
aas
or
adc
inc
ss
and
lock
mov
call
push
adc
jl
mov
ds
inc
or
xor
xor
push
mov
sbb
ss
stos
push
femms
fsincos
movsb
adc
loopne
addr16
jl
push
xchg
jg
push
sub
push
inc
sbb
xchg
out
push
xchg
push
adc
jmp
dec
jnp
test
mov
out
pushw
and
xor
push
adc
out
mov
inc
add
push
clc
imull
cmp
or
mov
sub
push
adc
mov
jp
xchg
in
pop
sti
jecxz
mov
pop
fisubrs
fchs
push
ss
call
mov
loopne
repz
mov
mov
mov
pop
fdivr
push
repz
sbb
push
jmp
shrb
addr16
push
sahf
clc
mov
xchg
es
popa
pop
mov
movsl
fs
test
leave
adc
cmpsb
shll
or
data16
adc
pop
fcomps
pop
and
orb
movsl
dec
loop
pop
mov
cltd
and
push
sub
cmp
lods
xchg
sub
mov
pop
push
mov
loopne
dec
xchg
and
cmpsl
dec
fidivs
leave
xchg
mov
dec
xchg
fldcw
lcall
xor
cld
mov
add
lea
mov
xchg
ret
adc
push
adc
imul
cmp
cmp
gs
std
movsl
in
push
insl
lods
loopne
bound
mov
mov
fidivs
leave
bound
xchg
sub
fstl
jno
dec
xchg
scas
out
add
adc
xlat
push
in
insl
cwtl
cmp
loope
sbb
daa
pop
sub
sarb
test
loopne
mov
jb
inc
inc
mov
cmp
push
mov
xchg
and
and
pop
sub
sub
dec
push
push
mov
addr16
cmpsb
xchg
and
cmpsl
loopne
dec
or
lret
arpl
push
mov
dec
xchg
push
mov
push
xor
push
cmpsl
cmp
jae
aas
out
mov
adc
sbb
xchg
and
xchg
and
test
add
xchg
xor
fdivl
popf
cwtl
cmp
daa
cmp
lock
xchg
sub
iret
imul
mov
cs
mov
mov
push
jne
mov
xchg
push
adc
js
xlat
xor
out
push
xchg
fwait
es
add
xchg
push
adc
mov
adc
mov
xchg
push
adc
sahf
insb
rclb
fcmove
xchg
push
adc
mov
jno
lea
pop
pop
cmpsb
sbb
push
adc
lcall
mov
fisubrs
fists
and
inc
cmp
xor
ljmp
sub
pusha
xchg
sahf
loope
inc
and
outsl
sub
mov
sbb
mov
cmp
iret
ret
mov
mov
pop
mov
dec
pusha
push
insb
movsl
fcoms
insb
sarl
lahf
insl
stos
or
xchg
push
adc
in
ds
pop
dec
mov
cwtl
xchg
push
adc
pop
dec
cmpsb
stc
xor
int3
push
jns
xchg
mov
cmp
mov
ja
ljmp
es
push
adc
data16
jnp
mov
sub
lods
mov
inc
mov
adc
mov
dec
subl
adc
and
cld
popa
push
adc
cmp
fucomi
push
sub
movb
and
xchg
push
in
fucomi
xor
insb
pop
in
xchg
test
arpl
inc
xchg
dec
pusha
cwtl
jnp
mov
mov
gs
push
std
dec
scas
mov
dec
js
and
push
sub
movsl
adc
pop
mov
test
pusha
sbbb
shlb
cmp
mov
xor
adc
inc
addb
mov
pop
adc
jmp
dec
dec
test
sub
xor
xchg
aaa
into
jp
sbb
push
jne
push
add
mov
push
stc
xchg
dec
pop
mov
and
cmp
addb
and
loop
mov
out
out
and
or
cld
pop
mov
sub
adc
xchg
push
repnz
xchg
ljmp
outsb
loopne
push
adc
stos
push
in
adc
sbb
xchg
pushl
scas
adcb
jp
lea
mov
adc
mov
pop
mov
and
jle
mov
scas
leave
adc
test
in
jg
bound
loopne
push
adc
push
lea
mov
frstpm(287
loopne
add
les
insb
fimuls
loopne
pop
xchg
sub
dec
fisubs
movsb
dec
xchg
or
xchg
faddp
pop
push
xor
pushf
jae
out
leave
xchg
xor
in
cmp
out
inc
xchg
and
ds
insl
aad
cmp
cmp
xchg
outsl
add
bound
mov
mov
pop
or
sub
dec
gs
push
out
add
lods
das
dec
xchg
sbb
shrl
dec
xchg
shrb
pusha
push
adc
loopne
sbb
push
adc
das
dec
xchg
fcmovb
dec
mov
out
insb
lods
dec
pushf
xchg
out
gs
push
out
add
lods
das
dec
xchg
fidivl
pop
sub
inc
pushf
cmp
xchg
mov
and
xchg
xchg
or
mov
outsl
inc
xchg
and
fsubs
xchg
sub
and
push
adc
push
fisubs
fistps
sub
pop
and
xor
shll
push
dec
jbe
pusha
push
adc
pop
out
mov
add
cmp
push
cmpsl
dec
xor
fcmovb
xchg
and
cmp
push
out
add
or
lods
pop
dec
jne
pusha
push
adc
sbb
pusha
in
xor
inc
fildll
xor
fsubrl
xchg
lea
adc
test
push
dec
xchg
jge,pn
cmp
xor
and
cmp
fdivl
inc
pop
test
popf
sub
jmp
fwait
mov
pop
shrl
or
and
push
push
jmp
andl
adc
push
adc
or
push
daa
icebp
and
mov
push
adc
lcall
testl
cld
nop
pusha
push
adc
push
adc
in
cmp
sarb
jmp
inc
sub
push
sub
cwtl
inc
inc
push
js
adc
or
sub
push
xor
clc
pop
mov
mov
ret
lea
adc
and
scas
pop
ret
and
mov
and
push
adc
fs
xchg
pop
sbb
movb
xchg
cmpsb
mov
jp
je
xchg
sub
lea
adc
das
shlb
fldt
fistpll
pusha
push
adc
mov
clc
sub
stos
jne
mov
jecxz
lds
mov
adc
inc
push
in
mov
mov
xchg
mov
inc
lods
sbb
test
pop
ljmp
popf
dec
pop
in
adc
push
adc
test
iret
adc
and
mov
clc
inc
sahf
cmpsb
movsb
and
in
mov
dec
lahf
sub
mov
lret
mov
dec
mov
adc
pop
adc
iret
mov
sub
test
push
adc
and
dec
mov
push
fadds
xchg
jl
mov
rcr
pop
in
add
addr16
js,pt
mov
push
adc
clc
ljmp
push
pop
iret
addr16
mov
add
and
xchg
push
adc
mov
ja
out
ja
es
jmp
notl
cmp
sarl
mov
mov
add
inc
pusha
push
adc
shr
push
fildll
mov
in
adc
pushaw
add
xor
in
adc
mov
inc
ret
sbbb
in
adc
mov
aaa
or
and
jne
xchg
andl
jp
lods
cltd
mov
std
data16
out
repz
ret
xor
arpl
sub
enter
inc
xchg
push
adc
or
pop
adc
sbb
sub
or
pop
loopne
pop
pop
xchg
and
mov
lea
add
cmp
mov
xchg
sub
or
cmp
shrl
dec
xchg
push
add
and
dec
jbe
pusha
push
adc
shlb
sahf
inc
xchg
sub
xor
pop
dec
push
mov
push
insb
add
insb
inc
out
ss
mov
cmp
sub
in
mov
mov
inc
xchg
sub
jb
and
push
adc
push
xor
pop
aas
lock
xchg
and
lock
xchg
sub
jb
mov
pop
lock
pop
xchg
fistl
lock
xchg
and
lock
sub
sub
in
cmp
push
movsl
in
test
fisubs
cltd
and
cmp
dec
xchg
xchg
jno
cmp
cmp
dec
xchg
sub
out
xchg
sub
cs
and
xchg
into
add
adc
push
je
dec
pushf
xchg
add
sbbl
dec
out
jne
dec
xchg
mov
addr16
xchg
and
push
adc
push
xor
out
jp
movsb
dec
pop
push
cmp
pop
inc
xchg
and
pusha
push
adc
pusha
push
adc
cmp
lahf
inc
xchg
sub
xor
inc
xchg
and
mov
lahf
cmp
popf
cmc
lcall
jbe
sub
pop
sbbl
pop
sub
sbb
push
loop
jb
pop
mov
xchg
cli
xlat
xor
sub
fnstenv
mov
or
popf
pusha
push
nop
es
stos
insb
in
bound
aam
out
dec
fwait
es
rcrb
mov
insl
jno
decl
xorb
lods
je
ss
mov
lea
mov
ss
sti
pop
mov
pusha
push
adc
stos
call
or
mov
jne
movsb
addr16
or
dec
rolb
shll
sahf
in
jle
cmp
lret
or
inc
in
xchg
and
and
mov
sbb
mov
scas
rorl
pop
adc
dec
adc
pop
movsb
adc
addr16
inc
jns
sbb
in
sbb
cwtl
inc
loopne
ja
xor
fwait
test
pop
mov
jo
pusha
into
jbe
jle
sub
out
jne
shlb
adc
outsl
mov
fisubrs
xchg
jno
addb
lcall
lds
mov
ret
xor
mov
addb
cs
std
scas
xchg
or
cwtl
inc
cld
fcoms
sub
shr
in
adc
enter
xchg
xor
or
add
mov
jne
mov
movsb
sbb
sbb
cmc
pop
test
adc
dec
in
loop
cmp
sarb
cmp
jg
mov
and
ljmp
in
push
mov
push
add
inc
loopne
mov
sub
hlt
mov
fiaddl
mov
mov
out
shrb
pusha
in
dec
jle
add
das
lahf
adc
dec
es
lds
jp
jne
lea
xor
lahf
ds
mov
pop
test
mov
lock
and
push
pop
in
or
mov
je
xchg
out
or
adc
insl
mov
or
cli
into
pusha
pusha
push
adc
pop
test
mov
sbb
add
xchg
adc
popa
push
adc
or
push
adc
inc
sub
lea
push
cld
pusha
push
adc
pop
mov
cmpsb
push
in
std
popf
pushf
jb
jno
xchg
adc
nop
xchg
pop
jno
push
cmp
cld
cmpsl
bound
lret
cmp
test
mov
fcoms
pop
mov
push
xor
mov
push
adc
pop
mov
ds
dec
push
mov
xor
xchg
sub
pop
scas
lea
leave
js
pusha
push
adc
aam
imul
mov
add
test
and
mov
movsl
mov
pop
and
mov
inc
ljmp
clc
sbb
adc
sub
out
mov
rep
jecxz
dec
cmp
inc
and
and
pop
in
dec
xchg
test
sarl
inc
add
leave
out
inc
xor
idivb
cmp
lods
pop
mov
sbb
and
xchg
sub
cmp
xchg
push
jae
adc
sub
rcrb
aaa
mov
sarb
hlt
lahf
dec
enter
sub
lods
andl
mov
rorb
or
pop
mov
pusha
push
adc
and
pop
adc
outsl
xlat
lods
pop
cmp
cs
movsb
dec
cmp
mov
sub
xchg
inc
popa
and
ja
fisubl
dec
xchg
and
test
lds
cmc
sar
outsl
cmp
pop
mov
sub
xor
xchg
or
sub
lret
mov
lods
out
in
adc
pop
and
pop
adc
pop
fisttpl
and
pop
adc
fmuls
sub
inc
sbb
push
cmpsb
dec
add
popl
adc
xor
sbb
insb
mov
xor
adc
test
sbb
std
mov
adc
push
test
or
push
mull
std
or
jns
add
outsl
xor
scas
js
push
adc
xor
adc
aad
bound
lcall
push
adc
lds
mov
jmp
mov
mov
shll
adc
mov
adc
add
mov
pushf
ja
sbb
sub
jne
xchg
addr16
loope
adc
loope
inc
incb
adc
in
mov
popa
push
adc
les
iret
lds
push
adc
les
shrb
mov
adc
jns
es
sub
fs
xor
jmp
test
or
sbb
roll
popa
push
adc
and
pop
adc
pop
sbb
pop
push
cmp
cmpsl
shrb
push
adc
inc
lret
inc
inc
lret
inc
mov
push
adc
adc
or
mov
mov
insb
aas
cwtl
mov
jne
js
push
adc
dec
mov
or
or
inc
xorb
aam
or
adc
test
push
adc
out
or
orl
sbb
pusha
adc
xchg
dec
or
push
or
pusha
push
adc
xchg
jp
or
and
jecxz
or
mov
sbb
or
ds
sub
inc
sbb
or
push
movsl
ds
sbb
or
push
cmpb
or
adc
jp
lods
insl
insb
orb
addr16
or
adc
jmp
xchg
fiadds
push
dec
dec
test
ja
inc
in
xor
jmp
adc
gs
ljmp
in
int
testl
push
orb
xchg
sub
xor
push
and
popa
or
and
cmp
xchg
cli
and
sbb
or
xor
mov
arpl
sub
inc
addb
hlt
cmp
lea
and
imul
sub
xchg
fs
ficompl
adc
push
test
jecxz
mov
cmpsb
in
push
mov
push
sub
cmp
ss
es
pop
mov
inc
scas
and
insb
dec
sbb
ss
push
ja
ds
insb
mov
fcmovnb
mov
aad
xor
scas
cmpsb
mov
leave
cmp
outsb
and
cwtl
fstps
add
mov
and
xor
scas
cmpsb
mov
leave
cmp
outsb
and
cwtl
fstps
add
mov
and
xor
scas
cmpsb
mov
leave
cmp
outsb
and
cwtl
fstps
add
mov
and
xor
scas
cmpsb
mov
leave
cmp
outsb
and
cwtl
fstps
add
mov
pop
ja
xchg
mov
sub
mov
push
popf
fwait
mov
pushf
fsubrs
loopne
xchg
push
jb
and
mov
inc
lock
out
mov
dec
xor
lcall
jmp
xchg
fimuls
lcall
shll
pop
ret
insl
out
test
movsb
imul
sub
clc
arpl
test
cmp
inc
mov
fidivrl
fisubrs
mov
mov
xor
cmp
sub
mov
adc
push
sub
push
adc
mov
pusha
inc
inc
xchg
push
adc
pop
fldt
inc
mov
flds
xchg
dec
gs
call
inc
cltd
push
adc
add
popf
push
adc
insb
scas
xor
xchg
push
adc
gs
push
adc
mov
pop
out
mov
xlat
mov
adc
dec
inc
popf
push
adc
aad
jp
mov
inc
xchg
push
adc
xchg
pop
cmp
mov
popa
and
sub
push
xchg
addl
outsl
jbe
jmp
stc
sbb
jbe
inc
xchg
push
adc
std
aas
inc
mov
ljmp
sub
call
adc
cmp
ficompl
adc
nop
rorb
movsb
dec
inc
xchg
push
adc
out
pop
and
push
adc
stos
enter
fcmovb
sub
insb
into
adc
cltd
push
adc
xchg
movsb
cs
inc
popf
push
adc
dec
out
mov
push
adc
inc
mov
mov
lods
clc
fcomp
lds
adc
inc
popf
push
adc
repnz
outsb
cmpsb
fadds
push
adc
lock
jmp
mov
adc
lea
je
dec
ds
cltd
push
adc
adc
push
adc
push
mulb
inc
xchg
push
adc
mov
mov
lea
mov
in
jp
test
outsl
xor
jbe
pop
popf
nop
into
pusha
push
mov
push
test
arpl
inc
inc
popf
push
adc
push
xlat
cmp
adcl
adc
inc
sub
sub
sub
inc
mov
ja
movsl
inc
les
inc
xchg
push
adc
stos
cmc
or
imul
addr16
jns
push
movsl
negb
pop
scas
jg
leave
mov
test
mov
pop
and
cld
sbb
cmp
dec
int
inc
mov
push
clc
xor
leave
clc
int3
int3
faddl
test
add
mov
int
pop
std
jle
inc
jb
jnp
je,pt
xor
js
pop
jbe
lods
or
jbe
mov
mov
icebp
push
test
inc
and
popf
pusha
add
cmpsb
mov
pop
dec
inc
inc
jnp
xchg
aaa
lds
repnz
xchg
movsl
jge
out
push
add
and
test
out
incl
jbe
sbb
das
sbb
sbb
out
cli
out
data16
dec
fs
dec
mov
hlt
xchg
bound
shlb
sub
bound
fcoms
imul
xor
out
test
lods
pop
mov
sahf
dec
push
lahf
mov
lods
pop
cmp
adc
in
fidivl
and
popf
hlt
out
repz
rcr
fs
sbb
mul
aam
pusha
mov
cli
out
shll
hlt
out
repz
rcr
inc
repz
sbb
mul
aam
pusha
mov
shll
lea
xchg
sbb
sub
lret
jo
call
aas
sbb
cmp
loop
shl
pushf
dec
enter
push
lock
pop
fdivl
push
fisubs
sbb
loopne
popf
push
lock
leave
or
leave
xchg
and
mov
add
adc
lea
pop
ljmp
das
push
ret
aam
pop
mov
mov
xorl
hlt
sub
mov
mov
mov
mov
xchg
xchg
inc
ret
inc
fwait
cmp
lcall
mov
mov
xchg
pop
mov
mov
xchg
xchg
inc
ret
popa
fwait
cmp
lcall
fsubp
lcall
pop
dec
imul
stos
lods
mov
sbb
outsl
mov
xor
sub
call
addb
shl
or
dec
repz
jecxz
mov
mov
or
hlt
pop
andb
stos
cmp
push
cmp
fwait
xor
or
pop
lcall
sub
adc
push
pop
mov
adc
sbb
jno
stc
adcl
sub
cli
dec
push
jp
js
pop
xchg
mov
nop
lea
add
add
add
in
pusha
mov
cmp
mov
mov
in
rcrl
mov
ret
inc
pop
lock
xchg
rolb
push
movsl
es
inc
pop
inc
inc
pop
dec
rcl
es
mov
jecxz
fidivrs
ret
rcrb
loop
add
outsb
push
jp
mov
xchg
insb
mov
xor
adc
aam
fsubp
mov
push
mov
adc
mov
ljmp
push
stos
add
lods
and
lds
xor
mov
stos
stos
dec
mov
mov
add
inc
or
cltd
adc
mov
int3
mov
mov
push
and
fdivr
sub
mov
xor
mov
add
int
out
test
scas
pusha
dec
sub
jmp
mov
sub
adc
mov
pop
scas
dec
aaa
outsb
lret
adcl
xchg
faddp
or
dec
iret
fs
jae
loope
test
outsl
out
xchg
int
cli
sbb
xchg
mov
ret
iret
test
adc
sahf
into
cltd
jbe
xor
inc
sub
movsb
adc
pop
jl
sbb
cmp
or
stos
mov
test
push
push
jge
fidivrl
aaa
mov
jp
mov
pop
xor
mov
xchg
mov
sub
dec
std
xchg
cmp
dec
cli
jge
mov
jl
dec
xor
mov
xchg
sbb
sbb
mov
and
sub
fs
pop
cmp
push
push
lock
push
iret
cmpsb
inc
jl
xor
mov
in
sub
subl
cmpsl
jae
mov
cmc
icebp
fcomps
movsb
subb
xor
sti
xchg
add
pop
inc
or
mov
sbb
rclb
stos
shlb
sub
push
and
lea
imul
movsb
in
lock
loopne
push
lret
inc
add
leave
cmp
outsl
jmp
sar
push
pop
jmp
shl
fcomip
dec
and
rcl
shl
pop
in
aaa
mov
ljmp
addr16
rorb
push
mov
in
daa
push
aad
mov
mov
jmp
lods
pop
xor
mov
sub
jne
sub
scas
mov
mov
dec
xchg
and
sub
fs
mov
mov
dec
sbb
and
jge
lods
push
or
adc
shl
movb
scas
jnp
mov
inc
cmp
mov
mov
adc
push
adc
jb
ss
push
cmp
inc
test
lods
cmp
ficompl
lds
jmp
rolb
adc
bound
roll
adc
out
push
sub
dec
insl
push
xor
int3
mov
in
adc
ss
in
fs
insb
jae
pop
in
jmp
cmp
lods
ljmp
shl
cmp
lret
cmp
adc
push
add
fdivs
out
lods
hlt
jmp
cmp
jmp
push
mov
notb
push
mov
pop
iret
in
rorl
cltd
in
mov
xchg
sbb
and
push
in
mov
dec
repz
lahf
repnz
andl
loope
cmp
insb
inc
xchg
sbb
aam
xor
mov
adc
mov
lods
loop
arpl
js
xchg
cmc
jmp
cli
notl
dec
and
fbstp
movsb
inc
test
les
cld
push
mov
ss
stc
mov
or
call
pop
loopne
fsubp
mov
jbe
outsb
or
call
lret
add
adc
test
cmp
mov
and
pop
xor
out
mov
mov
xchg
sbb
push
mov
int3
jp
es
sbb
cmp
daa
fidivrs
mov
rcr
movsb
into
jmp
push
lods
lret
sbb
mov
adc
in
fucomip
sbb
dec
fistpl
inc
pop
int
cltd
test
pop
jns
jne
test
cltd
and
pop
js
int
ja
adc
jno
fs
cmp
dec
daa
std
xor
jno
xor
xchg
scas
jae
fmull
cmp
push
lods
inc
popf
pop
es
sbb
clc
ljmp
dec
and
popa
dec
popl
pop
add
sti
xlat
jne
out
sub
in
scas
cs
lret
mov
and
out
dec
xlat
xchg
add
xlat
mov
data16
imul
nop
sti
jmp
call
rclb
mov
into
sbb
mov
outsl
push
mov
lret
jecxz
dec
jmp
cmpsb
es
lea
fdiv
shll
jno
aad
mov
in
out
mov
or
xchg
cmpsb
fimull
push
sbb
push
add
adc
cld
mov
pushf
imul
outsl
out
lods
outsb
xor
mov
std
sub
inc
jl
mov
cmp
add
iret
adc
fimull
outsb
out
enter
jo
in
ljmp
out
in
cli
and
pop
mov
inc
outsb
adcl
push
mov
int
aad
ret
cs
into
movb
ss
cmp
aad
les
sub
outsb
xchg
div
pop
insl
fwait
dec
jmp
jns
dec
ja
sbb
in
out
adc
mov
rorl
mov
js
push
mov
lods
or
pop
popa
out
sub
and
shrb
jmp
mov
pop
mov
push
adc
xchg
and
aam
outsl
lods
cmp
insl
fidivrl
fstps
fdivs
rolb
adc
cmp
xor
roll
adc
fbstp
in
shlb
push
xor
shrb
scas
jnp
mov
nop
fstl
stos
pop
push
push
insb
xchg
sbb
nop
fsubl
jg
mov
in
sar
cmp
ja
lea
pop
aam
and
mov
pop
push
std
call
sub
mov
shlb
clc
lock
push
sti
push
fstps
pop
lock
cmp
shl
sub
add
stos
ret
enter
in
push
shl
pop
dec
sarl
sub
push
xor
cmp
out
test
inc
pop
subb
mov
clc
lods
pop
ds
out
xor
sub
xchg
pop
stos
popa
jmp
lret
xchg
and
pop
out
xor
pop
xor
mov
pushf
shl
cwtl
pushf
shl
push
pop
xchg
scas
jp
mov
inc
xor
push
and
das
jp
mov
push
and
xlat
lods
shll
outsb
fnstcw
xor
aad
pop
rcll
mov
push
aaa
dec
mov
mov
xchg
jg
out
adc
and
subb
pop
subb
mov
das
jb
insb
inc
les
and
xor
inc
push
jmp
pop
stos
inc
and
inc
sub
push
add
inc
fwait
es
inc
xor
lds
push
mov
in
and
dec
dec
out
push
dec
out
dec
out
ss
xor
mov
push
bound
sbb
je
push
in
pop
fbstp
out
cmpsb
add
adc
xor
and
call
mov
cmpsb
or
cmpsb
clc
aad
add
call
rorl
sbb
jl
push
xchg
daa
rcl
ret
xlat
jb
xchg
test
lret
inc
xchg
sbb
xor
inc
fnsave
lret
xchg
stos
xchg
mov
dec
pop
test
bound
lods
and
mov
lds
int
and
shll
xlat
clc
push
shrl
scas
add
xor
fdivr
add
inc
pop
ret
cmp
fcompl
daa
push
cmpsb
and
adc
je
and
xor
jecxz
std
out
out
stos
outsb
push
cmp
fldenv
mov
mov
adc
pushw
or
test
pop
mov
sbb
repnz
mov
imulb
outsl
movsl
cmpsb
jecxz
mov
cwtl
scas
jecxz
stos
aas
sbb
push
xor
add
xchg
int3
jecxz
cs
movsl
std
lea
mov
cwtl
push
enter
cwtl
fcmovnb
dec
cltd
mov
push
fsubp
fwait
insl
mov
scas
push
mov
leave
jle
insw
push
test
add
xchg
divl
inc
call
and
add
jl
jns
push
xor
ret
out
mov
xchg
in
cli
cld
into
xchg
shrl
clc
nopl
jnp
jp
xchg
mov
jle
aas
stc
pop
and
loop
or
or
ds
push
pop
stc
fidivl
call
mov
cmpsb
push
xor
mov
xor
stc
fidivrl
idiv
into
sahf
cli
movsl
xchg
cmp
and
mul
xchg
cld
inc
add
sub
je
push
pop
dec
xor
movsb
add
pop
adc
mov
cmpsb
mov
xlat
cmpsl
fs
loop
sti
ds
leave
ret
push
jl
leave
cmp
fwait
sbb
loopne
push
dec
push
and
aas
cmp
aas
and
movb
push
xor
lret
cmp
leave
mov
mov
push
mov
xlat
cmc
bound
xor
adc
cwtl
jae
rolb
ds
mov
or
xchg
fneni(8087
xchg
mov
lods
in
rcr
mov
lods
pop
sahf
mov
cmp
mov
fidivrl
es
in
cld
xchg
dec
shl
movsb
scas
xchg
loopne
jno
jg
fwait
pop
sarb
inc
bound
insl
fidivl
cld
xchg
xchg
or
xchg
dec
jecxz
fsubrs
sub
inc
adc
sub
es
push
xchg
xchg
pop
shl
fwait
pop
mov
ret
lahf
push
sti
mov
cmp
es
adc
push
loop
push
sar
fwait
xchg
daa
dec
icebp
xchg
xchg
dec
in
ret
cwtl
xor
inc
call
cltd
test
sar
fwait
xchg
daa
dec
icebp
xchg
xchg
dec
in
ret
cwtl
push
jp
fwait
inc
sar
xchg
sub
push
loopne
push
push
pop
ret
daa
pop
out
cmpsb
fsubrl
fs
inc
out
inc
sub
lods
mov
dec
popf
pop
mov
nop
in
shll
aas
jnp
push
out
mov
cld
addr16
xchg
iret
xchg
and
push
mov
mul
ret
repnz
movsl
inc
insb
push
mov
and
fwait
pop
mov
sub
cmp
push
andl
mov
dec
xchg
inc
push
and
mov
xchg
cli
jl
mov
dec
mov
mov
push
jno
rcrb
mov
test
decl
fwait
movl
jp
and
fidivl
cltd
test
add
push
insl
rcrl
add
in
sbb
mov
loopne
sub
and
insl
fcomps
sahf
and
out
or
jbe
jecxz
inc
sbb
out
lods
call
aas
ret
shlb
shrb
xor
sub
sahf
jne,pt
ficomps
dec
sbb
sub
mov
fldl
call
cmpl
add
adc
sbb
movsl
sbb
mov
test
add
loop
cmpl
and
repnz
lods
mov
xchg
dec
pop
dec
jno
jl
add
cmpsb
fstl
test
add
sbb
jb
push
outsl
pop
push
inc
dec
sbb
mov
mov
clc
and
lahf
mov
mov
mov
sub
sub
jns
mov
ffreep
gs
inc
pop
cmp
cltd
fld
outsl
xorb
lret
xor
testl
jmp
es
loopne
imull
inc
enter
sub
lahf
insl
mov
aam
inc
shld
jl
arpl
inc
push
data16
or
ficomps
ffreep
cld
adc
test
inc
imul
mov
and
mov
sub
je
sbb
push
ret
fnsave
sub
scas
cmp
mov
popf
mov
xchg
mov
xchg
and
push
push
jae
ret
loope
xlat
ss
xor
sub
scas
or
sub
mov
push
sbb
xchg
out
enter
mov
pop
dec
mov
js
std
into
ljmp
repz
mov
hlt
lods
xchg
xor
test
jp
xor
mov
ss
dec
push
outsb
cwtl
repnz
dec
test
sahf
push
out
xor
jle
xchg
sbb
cld
cwtl
pop
mov
jae
data16
rcrb
ret
aas
add
adc
cmp
test
out
cmp
pop
mov
mov
and
bound
imul
arpl
fldcw
lea
scas
mov
push
gs
mov
inc
mov
inc
imul
ds
es
in
push
out
movsl
loop
inc
shll
je
push
lock
pop
call
and
inc
in
push
in
push
pop
mov
push
jl
imul
adc
cld
push
mov
fucomi
cmpsb
dec
insl
aam
popf
aam
imul
mov
lret
mov
jne
lock
pop
lock
xor
lret
les
sub
loop
xchg
nop
ss
scas
lcall
cli
or
movsb
dec
in
mov
xor
lods
xchg
inc
inc
ja
das
push
in
jns
mov
jae
jbe
lock
jmp
sbb
insb
fidivl
cmp
jne
cmp
test
movsb
in
xor
notb
insl
jae
bound
imul
shll
cmp
mov
mov
test
sbb
fs
aas
stos
fwait
lods
enter
lods
pop
jbe
fidivrs
pop
push
arpl
bound
mov
flds
inc
lds
cmp
scas
mov
push
adc
mov
jmp
cmp
movsb
dec
out
mov
popa
out
xor
in
dec
cmp
in
xor
imul
xchg
ss
insb
push
clc
jl
enter
push
scas
push
mov
fstpt
push
out
mov
fldcw
aad
or
lret
out
mov
mov
mov
sub
push
jl
in
push
ficoml
lock
enter
mov
jb,pn
test
push
adc
pop
jmp
int3
shr
adc
in
cmp
and
in
rcr
sti
test
inc
mov
jl
aam
mov
push
cmpsb
dec
jl
rcr
mov
sub
ret
xchg
lods
or
and
ret
sbb
imul
cmpl
or
push
pop
sub
mov
mov
inc
das
lahf
stos
sbb
jbe
push
adc
push
jae
mov
mov
adc
xchg
mov
push
mov
dec
cmova
cmp
frstpm(287
std
inc
outsb
cmc
push
push
mov
fidivrl
sub
imul
jb
xor
mov
scas
mov
push
pop
jnp
outsb
add
pop
leave
fdivrs
gs
mul
fldcw
mov
fucom
or
mov
movsb
and
mov
cmp
ss
mov
and
sarb
cmp
inc
jbe
mov
push
inc
push
data16
addb
fidivs
out
push
popa
mov
jo
rcl
mov
add
sarb
out
sbb
test
sarb
fidivs
push
inc
loope
dec
push
inc
dec
mov
push
loop
xchg
xor
sbb
adc
negb
jne
pop
stos
xchg
aad
pop
xor
and
sub
rcl
pop
push
add
sahf
xor
ds
adc
sub
sbb
add
cmpsb
sbb
mov
xor
fimull
jnp,pt
inc
inc
fnstcw
add
or
subb
insb
xor
fsubr
mov
jecxz
fisttpl
popf
in
std
xchg
addr16
mov
test
mov
xchg
and
jo
push
push
ss
cmpsl
out
xor
xor
lret
or
sbb
push
xor
sti
xchg
aam
popa
shl
out
pop
and
jns
xor
dec
sbb
pop
sbb
dec
mov
and
xchg
and
jns
pop
subl
dec
lret
bsr
cs
fiaddl
fmul
mov
mov
fidivl
fisubrs
sbb
xor
mov
mov
sahf
dec
bound
xchg
xchg
dec
loopne
jg
mov
cmp
jecxz
xor
lods
fisubrs
movsl
movsl
sbb
es
insl
fisttpl
xchg
mov
enter
mov
lock
xchg
xor
xchg
out
mov
lock
inc
dec
pop
icebp
imul
imul
ja
xchg
sub
es
insl
aam
mov
push
lock
fstps
pop
dec
cmp
aam
fldcw
xchg
push
shr
fwait
push
push
xor
push
jne
fimull
daa
xchg
jo
mov
add
pop
dec
push
je
into
scas
lcall
hlt
pop
jmp
pop
mov
dec
popa
fidivrl
mov
push
std
or
test
xchg
and
and
cmp
ret
and
jge
leave
data16
mov
movsb
mov
scas
and
cs
loope
push
daa
add
sbbl
dec
outsb
xlat
xor
mov
pop
ljmp
int
adc
shlb
notl
ffreep
mov
jb
cmp
sbb
cmp
out
into
jns
inc
icebp
pop
xchg
jle
int3
js
push
adc
jl
mov
stos
je
cwtl
sub
nop
mov
in
les
nop
movl
and
push
in
push
sti
xchg
mov
push
in
xchg
jnp
cmpsb
jp
je
inc
js
lret
repnz
iret
aam
aad
and
adc
mov
adc
mov
or
test
or
cli
mov
lods
mov
insb
push
jb
dec
and
mov
pop
mov
rcrl
enter
jmp
imulb
push
cs
add
add
inc
adc
mov
arpl
outsl
jae
js
sub
inc
aas
test
aaa
dec
inc
and
and
push
dec
xor
hlt
jmp
pop
in
stc
outsl
fcoml
xor
mov
jmp
jp
inc
sbb
in
xor
sbb
mov
add
sub
mov
push
inc
xor
jmp
adcl
sbb
xor
mov
out
adc
xchg
and
add
inc
shrb
shll
loop
lock
push
xlat
inc
insl
push
loopne
sub
pop
clc
lods
mov
sbbb
cmpsl
in
fbld
sub
sbb
mov
std
cmp
out
es
inc
inc
lock
push
dec
mov
lea
enter
add
xchg
push
or
or
sti
imul
out
outsb
dec
cmp
or
bound
enter
push
and
enter
xchg
mov
ficomps
mov
popf
pop
iret
cmp
pop
ss
inc
jmp
lret
or
inc
and
daa
mov
mov
insl
xchg
xor
js
fdivs
push
adc
fsts
push
ljmp
xchg
in
pop
outsb
es
mov
push
sub
mov
ss
xchg
dec
loopne
jle
mov
sub
mov
and
mov
sbb
inc
add
insb
jns
sbb
inc
sbb
lret
fmul
fwait
lret
lds
add
mov
int3
lahf
movb
loopne
push
push
add
loopne
cmp
xchg
inc
outsb
add
cs
lahf
mov
mov
std
push
cmp
es
sar
sub
xor
pop
jno
lods
pop
les
leave
cmp
mov
push
shlb
pop
mov
push
repz
aam
insl
and
mov
mov
out
xchg
lahf
dec
call
imul
popf
mov
jne
mov
test
lea
cmp
sahf
repz
test
dec
pop
xor
fyl2xp1
and
and
xor
xor
fwait
mov
stos
push
pop
mov
fstpt
push
adc
sti
xor
pop
call
cs
mov
and
mov
pop
add
daa
fwait
xor
lods
xor
dec
imul
add
and
sub
xchg
bound
xchg
push
icebp
lcall
xchg
mov
pushf
or
aas
test
mov
in
mov
mov
and
cmpsb
loop
loope
pop
sub
loope
decb
mov
test
cmp
lahf
ret
or
push
hlt
xor
in
pop
xchg
push
pushf
sub
shlb
pop
mov
pop
cld
push
stc
jp
mov
movsl
jl
xchg
mov
inc
cld
and
jne
hlt
add
sub
jb
sti
incl
xor
fwait
stc
mov
int3
cmp
clc
bound
xchg
or
int3
mov
mov
push
adc
mov
int
jecxz
sub
xchg
leave
lcall
test
je
fldcw
mov
out
mov
sbb
or
push
xlat
dec
sbb
and
xchg
mov
lock
cmp
mov
push
adc
xchg
and
xlat
fnsave
mov
es
stc
into
fisubrs
out
bound
adc
dec
push
addr16
or
scas
fs
jo
sbb
vpcmpgtb
dec
js
mov
test
jg
pop
gs
loopne
sub
push
mov
pushf
and
mov
jecxz
cld
jmp
cld
repz
fs
stos
or
pop
lock
mov
mov
mov
jmp
xchg
les
push
les
inc
fdiv
sub
pop
mov
in
and
in
xchg
in
lahf
mov
rorb
fnstenv
cmc
shrb
mov
and
fwait
lods
adcb
push
into
mov
js
push
mov
aaa
push
sbb
rorl
pushl
mov
mov
mov
std
cmp
std
push
test
add
mov
xchg
div
inc
inc
sub
in
dec
dec
jbe
xchg
mov
daa
xchg
std
cmp
mov
push
adc
arpl
adc
sub
gs
mov
out
iret
lea
xchg
add
lret
mov
or
sub
push
in
dec
fisubl
fcomi
lods
repz
pop
jmp
sbb
push
adc
adc
mulb
aaa
mov
in
pop
mov
inc
shrl
test
outsb
es
mov
pop
xor
ds
jb
lret
mov
push
mov
sub
mov
mov
clc
sub
dec
adc
in
icebp
dec
lods
sarb
jecxz
test
xchg
scas
push
jge
nop
in
mov
sub
fidivrl
mov
xchg
push
push
add
sti
xchg
push
jns
cmp
and
pusha
push
jb
into
pop
sbb
mov
and
outsb
shlb
loopne
in
inc
sbb
add
les
cmp
add
xchg
jne
jne
aad
mov
adc
stc
jbe
mov
dec
nop
out
std
loopne
and
push
pop
mov
fstpt
push
adc
sti
add
push
push
mov
sub
mov
cmpsl
or
adc
dec
adc
mov
mul
xchg
std
loopne
sub
add
in
inc
sbb
cmpsl
or
sub
or
enter
jns
das
add
fsts
das
ret
lock
mov
mov
insl
adc
and
cmp
xchg
push
mov
lock
lea
push
pop
mov
aaa
out
dec
gs
lods
movsb
stc
xchg
pop
arpl
outsl
add
and
cmp
test
decb
scas
pop
mov
xor
ds
sahf
sub
sbb
pop
sub
mov
pop
mov
push
lods
dec
mov
fdivl
pop
xor
shrl
xbegin
lods
scas
jle
out
lahf
mov
hlt
xchg
pop
testl
addr16
cmpl
repnz
lock
out
or
into
in
lock
bound
mov
or
or
inc
cmpsb
outsb
mov
push
pusha
fists
pop
or
pop
cmp
sub
inc
in
loope
push
push
sahf
rolb
frstor
cmpsb
mov
movsl
xchg
inc
cmp
pop
or
mov
in
sbbl
adc
xchg
and
sub
ljmp
scas
outsb
imul
fwait
jne,pt
jns
fnsave
inc
pop
xchg
dec
jle
int
fisttps
cmpsb
arpl
imul
jmp
rcl
into
push
cmc
mov
movsl
and
insl
test
xchg
test
mov
mov
cs
lret
dec
mov
mov
fidivrl
aam
sub
cmp
cmp
push
bnd
push
mov
mov
pop
adc
mov
xor
xchg
cmpsl
sub
fwait
stc
mov
pusha
lahf
inc
lock
and
in
fneni(8087
sbb
sti
pop
icebp
fcoms
pop
sub
mov
cmp
test
enter
pushf
mov
inc
mov
js
call
sub
lret
xor
test
ja
popl
adc
or
adc
stos
mov
pop
mov
cwtl
das
fildl
hlt
cmp
push
adc
ja
mov
es
xor
jb
mov
lret
and
dec
jbe
xor
dec
nop
subl
xchg
adc
jl
mov
outsb
mov
test
push
je
gs
loope
jns
xchg
out
fsubr
dec
loop
sahf
adcb
sub
push
das
std
push
fs
lods
std
mov
jmp
pop
push
xchg
jle
dec
add
dec
pop
pop
inc
mov
dec
cmpsb
mov
cmpsb
incb
lcall
shrl
jbe
sbb
repnz
pop
in
and
adc
insl
dec
lahf
cmp
inc
sub
cmp
push
pop
mov
shl
lods
sbb
addl
movsl
ret
jg
stos
mov
mov
dec
xchg
pop
leave
add
pop
ljmp
loop
push
mov
mov
push
lods
pop
mov
flds
sub
mov
sbb
call
fcomps
mov
stos
fmul
popa
ffreep
pusha
pop
lret
mov
shrb
dec
pushf
cmp
jae
xor
fwait
sub
xlat
add
aam
add
dec
flds
adc
add
dec
fiaddl
adc
fildl
adc
add
icebp
fildl
adc
faddl
adc
add
push
faddl
adc
fldl
adc
add
xlat
fldl
adc
add
cltd
loopne
adc
add
out
add
jecxz,pn
adc
in
adc
add
dec
in
adc
out
adc
add
and
adc
out
adc
call
fwait
scas
test
nop
mov
jne
jmp
adc
dec
push
testb
pop
fdivrp
cmpsl
dec
cmp
xchg
lods
test
jecxz
push
lret
inc
mov
addb
in
xor
loop
or
sarb
ss
or
gs
repz
call
mov
pop
imul
mov
daa
sbb
mov
lock
or
movsl
mov
loope
jl
pop
out
lods
loope
push
call
jo
mov
sub
and
pop
cmp
jl
sahf
jecxz
sbb
aas
sub
and
pop
pop
mov
xchg
jbe
mov
push
push
push
cltd
in
fisubrs
out
and
enter
dec
sbb
jecxz
inc
imul
js
les
mov
outsb
out
mov
adc
dec
lods
gs
mov
stos
adc
aam
popf
iret
stc
mov
enter
mov
jge
pop
lret
xlat
adc
sbb
fdivr
es
test
in
push
out
xor
out
xchg
and
je
pop
leave
and
sub
pop
imul
cmc
add
lret
scas
popa
or
push
fisubrs
jnp
sub
dec
and
mov
jmp
leave
push
adc
loopne
mov
mov
js
fucomip
push
sbb
bound
xor
imul
sbb
int
stc
cmpsl
sbb
test
mov
add
xor
sbb
mov
pushf
mov
mov
mov
cmc
scas
xchg
cmp
aas
and
std
jecxz
jecxz
adc
push
out
cwtl
dec
int
mov
inc
shl
repz
aas
pop
push
mov
daa
cld
fdivrs
mov
aaa
jno
xor
leave
dec
pop
fsubp
mov
fistl
xor
jb
aaa
xor
std
mov
mov
std
rorl
clc
dec
push
mov
scas
pop
push
sub
xlat
inc
jns
pop
jmp
ds
adc
lods
cmp
mov
push
insl
loopne
movsb
imulb
dec
pop
inc
push
ret
mov
enter
jecxz
cmpsl
mov
cmp
push
push
ret
gs
bound
dec
popa
mov
lock
mov
xor
int
lock
daa
test
loop
adc
push
push
test
lea
mov
mov
ss
xchg
insl
cmp
jmp
stos
test
data16
xlat
pop
iret
mov
or
cli
jecxz
jp
cmpsl
aad
sub
xor
push
sub
xor
rcr
negl
xor
fidivrs
mov
movsb
movsl
sahf
pop
lods
cmpsb
scas
jmp
ss
push
mov
pop
xor
mov
mov
aam
push
movsl
loopne
daa
push
add
mov
or
mov
ljmp
pop
jmp
push
movsl
aas
mov
out
mov
jge
cmp
xor
jle
outsl
and
xchg
cmp
sbb
add
mov
in
movsb
loopne
adc
data16
push
push
es
and
and
dec
sub
xor
mov
shll
cmpsl
xchg
lods
lds
iret
xchg
xchg
xchg
xor
push
outsl
fidivl
xlat
lahf
cwtl
cmp
cmp
inc
insl
test
imul
pop
and
insl
popa
test
out
cltd
mov
mov
jno
loopne
xor
shl
out
lcall
cmp
scas
mov
cmp
dec
pop
jl
sub
pop
mov
or
insl
push
push
insl
push
add
xlat
movsb
inc
add
ss
pop
cmp
push
cmp
inc
in
mov
lds
bound
imul
or
push
jecxz
out
ds
and
mov
lods
aad
pop
push
mov
into
flds
sar
dec
mov
push
add
mov
std
dec
mov
mov
pop
mov
aad
shl
xchg
mov
dec
and
push
test
stos
cwtl
sbb
out
push
mov
fisttpll
mov
cmpsl
mov
in
push
add
fnstsw
cld
cltd
mov
mov
fcomps
loopne
stc
fdivp
cwtl
push
negl
inc
in
imul
out
xor
xchg
xchg
xchg
and
sub
into
mov
mov
jno
mov
cmpl
mov
insl
pop
out
fstpl
and
lds
mov
loope
jmp
dec
mov
gs
rolb
pop
and
lods
xchg
shll
sahf
icebp
leave
adc
les
in
rcr
push
addr16
ficoml
xchg
scas
pop
gs
push
stos
cli
xlat
mov
mov
xchg
movsl
sbb
shrb
scas
push
pop
mov
and
fimuls
and
cmpsl
cmp
fiaddl
push
mov
dec
mov
mov
cmp
jb
mov
outsl
sub
xchg
pop
or
stc
es
jbe
test
and
inc
dec
inc
pop
dec
mov
xor
stos
sbb
test
sub
push
pop
mov
push
fwait
or
jns
mov
or
push
xchg
lret
movsb
fstl
xor
pop
jns
adc
outsl
sub
pop
packssdw
mov
xor
mov
aam
lahf
fnstcw
sbb
mov
outsb
test
decl
pop
sti
addb
jg
decl
les
dec
stos
push
jae
sub
add
sbb
lret
push
popa
or
pop
cmc
cmpsl
cwtl
lcall
sbb
rclb
inc
rorb
jo
and
outsb
pop
jp
rolb
push
test
out
into
bnd
int
push
cs
lods
loopne
and
in
clc
cli
xchg
loopne
and
outsb
pop
xchg
sbb
fbstp
ss
aam
add
loope
mov
jecxz
test
test
mov
jg
dec
cmp
mov
add
in
xlat
shll
ja
pop
ljmp
xchg
loope
bound
jne
pop
ja
pop
sub
add
jge
jmp
inc
or
aas
jmp
iret
mov
pop
push
rclb
pop
push
adc
nop
shlb
arpl
push
sahf
jmp
lahf
dec
push
rcll
shlb
lea
pop
fstps
mov
cltd
push
pop
lret
shr
repz
es
add
mov
jecxz
pop
sub
push
cs
pop
out
push
faddp
pop
or
aad
or
lods
pop
xor
cltd
push
loopne
pop
loopne
mov
dec
sub
inc
in
inc
in
dec
loop
push
and
lahf
pop
imul
xlat
sub
lods
push
add
dec
shlb
out
add
lods
xor
std
adc
cs
gs
push
gs
imul
or
ss
push
test
ds
or
inc
sbb
arpl
int
xchg
jg
add
es
inc
or
mov
push
rclb
push
stc
adc
insl
mov
out
mov
cs
mov
fdivrs
push
cmp
cmp
cmp
dec
cmpb
mov
mov
mov
pop
daa
imul
push
push
ficoms
adc
insb
push
cmp
shrl
mov
add
scas
mov
arpl
addr16
push
jle
scas
shl
jl
ss
jb
dec
cs
and
and
mov
xor
scas
jge
cmp
movsb
insb
rcll
movsl
fcmovne
fwait
mov
push
and
or
inc
xor
and
inc
xor
mov
aam
mov
xor
popa
lods
fs
pop
es
iret
xchg
add
mov
movsb
inc
stos
std
mov
jb
jb
and
jno
je
fsts
ja
mov
subb
hlt
add
and
xchg
out
ja
add
sbb
out
pop
pop
cmp
xchg
in
testb
imul
adc
fistps
mov
mov
sub
sbb
dec
xchg
fstps
and
arpl
dec
ret
fsubr
inc
popa
inc
ret
and
loop
mov
shr
xchg
inc
sahf
je
pop
sbb
test
push
sub
and
fildl
cmpsb
loopne
dec
xchg
dec
cmp
dec
int
shrl
cmp
stos
int
aas
int3
add
int
pop
mov
js
lahf
test
mov
and
lcall
sub
push
sahf
push
shll
cmpsl
xor
scas
sbb
mov
lods
icebp
lods
scas
sbb
out
and
sub
mov
push
and
mov
sub
sbb
sti
bound
rclb
aam
outsb
inc
jle
fsubr
lahf
mov
rcrb
out
data16
cs
ljmp
lret
sbbl
cmp
and
mov
lods
jbe
in
bound
pop
or
mov
fdivrs
xor
fwait
out
mov
jecxz
mov
out
or
push
pop
sub
mov
xchg
xor
cmp
push
xlat
aaa
fidivrl
push
jmp
shll
js
lret
mov
aas
lcall
mov
xor
in
or
sub
cld
pushf
pop
out
mov
iret
xlat
or
repz
insl
fistl
inc
rorb
call
jnp
ficomps
push
jge
aad
xor
mov
mov
fisttps
mov
out
push
sti
adc
lcall
in
adc
and
adc
push
push
or
lret
cmpsb
xchg
cmp
ss
rorb
shrl
loop
lods
pop
inc
sub
into
and
cmp
sbb
mov
stos
cmp
fstpl
aas
insl
fstpt
mov
loopne
imul
mov
pop
mov
stos
pop
pop
jns
sbb
in
add
lods
es
call
and
sbb
aad
cmp
imul
dec
sub
daa
and
scas
fmul
mov
pop
mov
repz
mov
mov
scas
pop
insb
cmp
in
mov
pop
mov
pop
stos
sarb
fxch
mov
call
loop
inc
sub
sbb
xchg
mov
fcomps
insl
mov
pop
pop
push
mov
pop
lock
rclb
pop
insb
inc
loopne,pn
xchg
test
xor
outsb
xchg
push
call
in
call
xchg
and
xchg
pop
jnp
push
loopne
mov
mov
fidivrl
repz
call
jl
cmc
jg
in
aas
repz
mov
dec
add
lods
cmpsl
icebp
ja
shl
xchg
jg
add
pop
cmp
shl
imul
fidivl
mov
enter
or
cmp
mov
mov
push
add
mov
push
add
fimull
mov
xchg
cmp
jl
rep
shll
add
inc
push
jle
scas
shl
insb
dec
xchg
or
and
and
add
stos
xlat
loope
push
lods
jnp
and
lret
mov
cs
cmp
adc
pusha
mov
push
mov
ret
lods
out
mov
fwait
xchg
cltd
lds
and
fbstp
mov
leave
aam
inc
sarb
inc
inc
insb
xlat
test
fwait
cmc
cmp
xchg
out
adc
repnz
fstps
xchg
inc
push
shll
push
lods
jns
stc
add
fldt
ficoms
movsl
aaa
push
mov
dec
pop
jp
sbbb
sbb
mov
xchg
pop
xchg
sub
das
stc
daa
cmp
cmpsl
mov
hlt
test
das
fldenv
cmp
movsb
into
pop
cmp
imul
dec
mov
sbb
push
stos
cli
andl
push
fildl
cwtl
ret
and
push
adc
mov
sub
stos
into
dec
cmc
mov
dec
or
iret
add
ja
jb
popf
les
mov
xchg
push
pop
push
add
inc
pop
stos
loopne
aaa
dec
inc
adc
xor
pop
pushf
sub
scas
sbb
daa
test
mov
or
out
add
mov
insb
and
xor
test
pop
xor
and
xchg
inc
aad
jno
pop
xor
pop
fucomp
insb
pushf
ss
push
dec
and
jecxz
xchg
js
sub
lret
jg
and
xchg
cli
jns
push
jb
mov
cmp
out
sub
jo
jp
pop
out
sub
jg
nop
je
mov
adc
xchg
divl
mov
xor
sub
cli
std
movsb
push
mov
rclb
mov
cmp
ret
gs
out
mov
adc
mov
testb
mov
and
loope
addr16
xor
push
and
or
rcl
or
call
or
imul
call
jnp
imul
insl
gs
pop
fcompl
push
je
inc
mov
popf
xor
push
adc
int3
mov
hlt
and
mov
push
insl
rcrb
cmp
sbb
sub
add
xor
push
sub
cmpsb
xchg
mov
pop
dec
ss
shll
fdivl
pop
daa
xchg
lcall
arpl
mov
lret
outsb
mov
movsl
rcl
cmpsl
rcll
xor
push
mov
push
jnp
mov
cmpsb
inc
xchg
ds
shll
or
push
or
imul
push
dec
outsb
adc
in
mov
sub
leave
call
in
xchg
xor
push
adc
ds
mov
mov
ss
outsl
push
sbb
adc
mov
pop
mov
xchg
mov
push
stos
jl
cmc
jg
in
cmp
into
pop
addl
mov
lods
pop
dec
sub
jl
or
fwait
push
aad
imul
int3
mov
cmp
fistps
mov
push
ds
mov
cltd
sub
lea
bound
rolb
adc
pop
bound
in
roll
adc
lcall
add
cmp
ljmp
mov
loopne
cmp
fisttpl
test
push
push
push
dec
pop
enter
mov
mov
mov
xchg
mov
fcoml
mov
xlat
and
movsl
loope
sbb
and
inc
adc
mov
in
mov
jle
scas
rol
xchg
ds
data16
push
or
inc
cmp
push
push
jp
stos
and
lret
xor
push
in
test
inc
arpl
cmpsb
xor
jo
negl
xor
insb
push
jmp
je
mov
inc
adc
jl
mov
cmp
cmp
sbb
mov
fldenv
hlt
xchg
dec
cmp
fbstp
add
cwtl
sbbl
fistps
add
ljmp
ss
xor
sub
cwtl
sbb
fwait
adc
adc
and
enter
push
pop
aaa
in
stos
jl
stos
es
adc
xchg
dec
pop
leave
add
pop
fsts
sahf
nop
stc
xchg
and
lods
lahf
inc
enter
adc
test
add
fdivp
pop
sbb
stos
push
test
push
subl
notb
adc
push
and
das
xor
mov
add
push
and
jae
cmp
push
mov
pop
fstp
cmp
dec
mov
ljmp
xor
xor
adc
dec
fdivr
sbb
sub
popf
ret
scas
inc
mov
jae
fwait
pop
jmp
popf
mov
push
test
push
rcrb
jmp
xchg
shlb
add
dec
sub
arpl
in
push
xor
mov
inc
jecxz
mov
xor
push
in
sub
insb
xchg
jne
es
decb
in
es
clc
sti
mov
out
sub
outsl
pop
fstpt
sub
shll
pop
nop
fsubrs
in
or
mov
imul
push
inc
andl
pop
mov
add
xor
loopne
add
out
out
test
mov
adc
js
add
push
je
push
pop
sub
aad
sbb
cltd
pop
decb
push
push
push
pop
and
adc
or
mov
push
cmp
pop
sbb
pop
cmp
mov
xor
sbb
in
rol
aam
cltd
mov
sbb
pushl
add
jle
push
add
sub
cli
out
je
inc
sarb
cld
bound
rorl
and
sub
add
lock
nop
lock
es
dec
lret
cmpsl
andl
mov
sbb
mov
cmp
in
sarb
cmp
or
push
jle
inc
mov
jmp
xor
popf
mov
xchg
ds
add
insl
adc
push
pop
call
imul
mov
cs
or
jae
insl
fidivrs
push
mov
xchg
dec
in
std
jg
lods
lahf
aaa
das
rorb
mov
pop
sub
xor
xchg
xchg
pop
jns
mov
pop
in
mov
dec
or
loop
push
pushf
xor
mov
mov
pop
shr
fdivs
int
sub
fmul
arpl
call
inc
pop
test
mov
push
cmp
ret
cmp
dec
fsts
ss
push
jge
aaa
scas
cmp
outsl
out
lods
pop
jo
fucom
jns
mov
and
pop
xor
mov
adc
sub
mov
push
or
push
adc
mov
ja
sub
cmp
shlb
fdivrp
ja
lea
mov
loopne
inc
lea
and
es
dec
insb
cmpsl
inc
loopne
push
shl
xchg
dec
or
insb
fstpt
out
clc
push
mov
pop
xor
mov
pop
js
mov
es
cmp
popf
test
xor
sub
cli
jl
scas
shll
shll
xchg
mov
cmp
lret
into
in
cmpsb
insb
shll
sar
js
stos
aad
in
mov
pop
cmp
and
aam
loope
sbb
out
mov
sub
pop
and
aad
loopne
repz
mov
sub
jae
lahf
lret
push
or
shlb
in
andb
inc
cmp
es
adcl
sbb
jge
mull
sbb
in
lods
sahf
push
jmp
test
mov
sub
dec
pop
mov
std
ret
adc
push
test
lods
mov
jle
mov
pop
test
push
cmpsl
rorl
insb
fdivs
jmp
mov
call
pop
cs
mov
pop
mov
lods
outsb
sahf
and
movsb
int
cs
mulb
dec
sbb
dec
fwait
es
mov
push
lds
adc
cmp
std
or
data16
xlat
mov
ret
mov
cli
inc
lea
clc
add
fcmovnb
cld
pop
sub
lcall
and
adc
adc
cmpsl
mov
mov
icebp
lret
cmpsb
jmp
mov
daa
data16
push
test
dec
xor
pusha
jecxz
das
cld
fstpt
jg
das
rol
xchg
lods
mov
sub
pcmpeqd
mov
sarl
xrelease
ds
inc
sub
sbb
lods
std
lea
int3
pop
add
psrad
push
outsl
or
fs
adc
rclb
and
adc
mov
xchg
cli
inc
ds
add
xor
dec
es
jecxz
mov
cmp
ds
int
push
jne
jecxz
sbb
in
ja
in
je
scas
pop
add
aam
ds
fsub
aam
jmp
out
add
push
push
enter
cmp
add
std
pop
adc
xchg
sbb
int
pop
cmpb
sub
mov
pop
xor
or
xchg
jge
leave
xchg
and
cld
jl
cmpsb
jnp
jbe
dec
bound
test
mov
jge
aaa
test
push
mov
xor
mov
movsb
jo
jmp
rcrl
xchg
mov
mov
faddl
movsb
mov
push
jnp
mov
pop
scas
sarl
xlat
rorb
push
adc
pop
imul
sbbb
mov
pop
stc
dec
xor
adc
sti
arpl
inc
add
lods
pop
cmp
bsr
into
aas
cmc
addr16
movsl
shrl
int
insl
and
jb
add
sahf
push
sub
shrb
dec
mov
xor
add
jo
dec
add
cmp
jp
imul
or
fcomi
cmp
pop
cmpsl
dec
out
inc
or
cmp
pop
lods
pop
mov
pop
imul
pop
mov
cmp
rorb
jmp
aas
mov
dec
xchg
mov
cwtl
jecxz
aaa
xor
lret
lods
fcmovnbe
pop
add
out
mov
lock
sahf
out
fcoml
lock
jmp
push
adc
sub
sub
sahf
mov
loope
sahf
jle
test
arpl
aad
inc
dec
push
icebp
mov
xchg
sub
movsl
mov
scas
mov
fnsave
pop
sbb
gs
xchg
sbbl
outsb
pop
jmp
in
mov
xchg
daa
in
xor
jg
imul
cmp
shrl
mov
shlb
push
pop
cmp
fs
pop
fnstenv
sub
push
stos
aam
pop
mov
pop
les
popf
out
push
inc
jnp
xchg
es
aam
jb
push
lds
and
addl
and
mov
mov
jnp
mov
out
mov
xchg
mov
in
shl
mov
imul
repnz
cmp
in
adc
inc
push
test
mov
cmp
ret
out
cmpsb
sbb
add
xchg
sub
xchg
jbe
fnstcw
movsb
jbe
addr16
push
push
cmp
movsb
and
mov
fcomp
sbb
and
testb
js
mov
test
out
cmp
stos
xor
sub
sbb
cmp
mov
in
addr16
add
jbe
pushf
inc
arpl
loopne
popf
mov
and
adc
mov
xchg
xchg
add
mov
popa
test
notb
fwait
add
jae
addr16
inc
push
adc
jmp
sub
repnz
gs
mov
mov
sub
add
mov
cmp
dec
test
xor
imul
adc
add
sub
fs
in
jp
mov
mov
js
cli
xor
dec
mov
push
call
fwait
or
in
lahf
mov
and
or
repnz
mov
leave
sbb
imul
cmp
nop
sbb
insl
ljmp
add
hlt
or
push
jns
pop
xor
scas
add
es
movsb
push
test
fldenv
pop
outsb
add
sub
shll
rdpmc
pop
dec
cmp
mov
add
push
dec
sub
cmp
jae
call
cmpsl
cmp
dec
lcall
leave
add
sub
and
out
sbb
pop
out
push
push
sbb
data16
cltd
pop
aad
insb
sbb
out
push
pusha
addr16
pop
outsb
xor
xchg
mov
xor
inc
xchg
sbb
scas
mov
push
outsl
shl
outsl
in
dec
fcmove
outsl
sbb
pop
repnz
fcomps
dec
fistpl
lea
mov
push
adc
pop
mov
pop
mov
roll
outsl
loopne
mov
jge
mov
sbb
in
shlb
pop
mov
loopne,pn
lret
xchg
mov
adcb
jae
lods
movsb
ret
dec
js
pusha
push
adc
stos
mov
cmp
imul
aad
fwait
jne
lcall
in
pushf
das
outsl
fcmovne
jnp
push
pop
adc
hlt
jg
test
cld
outsl
cmp
mov
scas
fidivs
xor
pop
fidivrs
jnp
scas
shll
orb
gs
and
and
subb
adc
lcall
orl
ret
pop
loope
sbb
in
call
call
mov
fwait
in
test
jmp
mov
mov
imul
jne
push
mov
push
mov
xchg
pop
enter
xlat
ss
push
bnd
push
daa
xchg
pop
and
dec
xchg
sub
adc
xchg
mov
ret
out
push
pop
inc
pop
mov
lods
test
ds
testl
repnz
mov
aam
out
scas
fs
test
mov
mov
sti
pop
sub
jae
nop
out
mov
mov
xor
loope
mov
xchg
xor
pop
js
stos
decl
mov
pop
cld
stc
sub
mov
out
inc
mov
cli
and
loope
sub
test
test
xchg
movsl
fwait
push
mov
jae
xchg
mov
cld
popa
lods
pop
fs
incb
mov
je
push
mov
int3
clc
notb
cmp
rclb
cmp
popa
pop
adc
movsb
xchg
imul
push
cmpsb
fisttps
pop
bound
jae
loope
inc
mov
mov
jge
add
push
das
mov
xor
out
bound
int
mov
loope
jo
out
repz
adc
mov
test
push
pop
jae
jo
ffreep
cltd
push
mov
push
or
and
iret
push
test
inc
dec
icebp
outsb
insl
push
and
sbb
xor
sbb
lods
fldenv
fcom
rcl
testl
mov
lahf
ret
xchg
xor
arpl
cs
imul
mov
ljmp
fs
or
xor
loop
push
xor
js
test
jbe
arpl
inc
insl
add
call
pop
shll
iret
aas
mov
loopne
gs
add
out
push
pop
fiadds
mov
add
xchg
outsb
mov
xchg
mov
cwtl
pop
iret
lret
and
push
fwait
xor
fildl
mov
mov
out
imul
cmp
popf
aaa
and
adc
mov
out
pop
push
pusha
dec
icebp
std
rcrb
insl
int3
orb
push
test
stos
push
push
insl
pop
subl
or
dec
sahf
roll
sbb
lds
or
xchg
flds
xchg
into
mov
imul
popf
cmp
bound
pop
push
test
es
jmp
inc
aas
movsl
pop
fdivrp
mov
jmp
mov
mov
and
sahf
xchg
outsl
pop
cld
dec
ds
and
cmp
fistps
push
hlt
addr16
in
cmp
loop
cwtl
push
imul
pop
jecxz
daa
and
js
mov
adc
xchg
mov
cs
loopne
xchg
push
jae
adc
pop
jecxz
daa
es
xchg
gs
mov
mov
shlb
sahf
out
mov
out
xor
dec
jmp
mov
cmp
sbb
xor
cmc
das
and
outsl
movb
xor
push
lea
jnp
std
mov
cmpsl
fidivl
xor
pushf
mov
pop
mov
shrl
push
movsb
dec
xor
mov
mov
cmp
xor
cmc
es
dec
loopne
es
loop
mov
out
push
cmpsb
pop
fimull
sarb
mov
out
clc
push
ficoms
mov
pop
call
scas
shlb
mov
sub
out
test
mov
dec
enter
movsl
pop
ljmp
cmp
push
scas
adc
cli
roll
shl
leave
sbb
mov
mov
in
pop
jbe
ficomps
adc
fs
dec
push
aaa
out
mov
lahf
test
int
xlat
flds
cmp
mov
enter
leave
outsl
pop
in
pop
fs
dec
xchg
cmp
mov
fwait
mov
pop
cli
jl
in
mov
stos
mov
scas
fs
xchg
outsb
push
shrb
pop
cmp
xor
mov
popf
mov
sarl
es
dec
ret
push
jmp
mov
leave
sub
mov
mov
mov
push
shlb
and
dec
jnp
insb
loope
inc
pop
push
test
sbb
pop
mov
pop
sti
aad
mov
mov
inc
mov
out
pop
shr
jge
fst
adc
adc
push
in
fsts
mov
je
and
int3
push
pop
stos
sarl
insl
dec
fcmovbe
lds
add
inc
outsl
mov
bound
mov
je
repnz
in
iret
addr16
xor
pop
add
adc
push
and
xchg
pop
xor
popf
jae
stos
and
inc
push
enter
adc
xor
pusha
push
adc
movsl
into
pushf
sub
lods
xor
lcall
mov
add
push
in
aad
adc
sbb
push
adc
inc
daa
loopne
pusha
push
adc
sbb
push
adc
inc
outsb
inc
sub
outsl
cmp
or
lret
cmp
in
invd
adc
arpl
shr
int
in
divb
xor
lods
dec
stc
push
xor
shlb
daa
fisttps
xor
scas
in
jmp
lahf
fs
mov
fbld
bound
sub
iret
aas
inc
and
leave
xor
mov
mov
sbbl
and
xor
xchg
xchg
cltd
in
sahf
mov
sbb
fldcw
out
or
shrb
fsubp
pop
ret
out
stos
xor
cwtl
inc
fmuls
pop
enter
mov
divb
and
dec
lea
mov
jbe
outsl
ds
cltd
xor
fs
loop
push
xor
mov
in
out
movsl
outsb
dec
add
and
bound
sbb
pop
cmpsb
in
inc
xchg
jae
leave
pop
iret
cmp
pop
lret
jmp
imul
mov
outsb
xchg
jp
lret
jbe
or
iret
out
add
repz
push
in
es
inc
fldenv
jno
cmp
out
data16
inc
push
or
imul
push
js
fidivrl
vcvtps2pd
inc
jne
clc
add
sub
dec
dec
push
ficoml
mov
and
stos
test
test
xor
adc
cs
mov
cmp
movsl
or
mov
dec
xchg
movsl
ds
pop
leave
test
push
cs
push
mov
in
xor
inc
out
scas
in
pop
mov
inc
arpl
enter
xchg
movsl
sahf
test
out
cmpsl
fcom
xchg
fstpt
sub
mov
xor
xlat
lods
add
mov
gs
lock
pop
mov
mov
or
daa
mov
sbb
cmp
cmp
loopne
or
adc
mov
fisubs
pop
pop
call
jbe
leave
jne
les
repnz
cmp
cmp
pop
data16
jno
mov
adc
stc
and
and
shr
addr16
cli
add
fsubrs
scas
ljmp
fidivrl
es
scas
out
gs
xchg
and
push
mov
sbb
pop
dec
fnsave
cli
rol
imul
cmp
loopne
test
shlb
das
call
cmp
push
loopne
cmp
push
mov
sub
aas
mov
jmp
mov
fnstcw
xor
aaa
movntps
inc
lock
xchg
es
cmp
shlb
mov
xchg
daa
dec
out
mov
nop
inc
add
add
sbb
push
jmp
dec
sbb
cli
dec
xchg
and
push
mov
fbld
or
outsl
jmp
fistps
sbb
inc
mov
inc
aaa
int
add
adc
and
aaa
int
std
stc
in
sbb
inc
pop
adc
pop
rclb
aad
add
dec
xor
or
and
add
fwait
cld
pop
imul
or
in
lret
in
cmc
in
push
pop
sub
fcoms
inc
gs
aad
add
mov
dec
into
adc
cltd
mov
rorl
pop
cmpsl
cmp
inc
xchg
daa
adc
loope
push
and
jge
fsubrs
mov
mov
jge
lods
outsb
rcl
bound
pop
dec
hlt
lds
gs
fidivs
lods
xchg
mov
mov
mov
and
stos
lods
lahf
sbb
sub
adc
filds
jno
fildl
jge
mov
dec
pusha
cmpl
xor
xorb
mov
fdiv
scas
push
jns
mov
sbb
xchg
je
sbb
call
std
call
mov
xchg
pop
out
call
xor
aad
adc
rcrb
fs
inc
ss
or
xchg
push
std
mov
test
jmp
lahf
jmp
arpl
popa
sub
push
adc
mov
xor
sbb
jb
insl
or
jb
push
lods
dec
repnz
sub
rcr
xchg
test
adc
xor
mov
in
push
cmpsb
or
push
xor
enter
mov
lea
jne
dec
and
fiadds
jbe,pt
mov
push
in
int3
sbb
or
jne
push
arpl
mov
pop
xor
and
loope
xor
add
push
jo
adcl
add
imul
mov
mov
and
xor
dec
jge
inc
xlat
jnp
pop
pop
inc
or
les
adc
cmp
and
popf
adc
xchg
add
lods
jae
outsb
add
lret
pop
gs
aaa
jmp
nop
leave
pop
adc
cmpsb
adc
adc
roll
jge
xor
out
mov
dec
out
push
flds
sub
and
fwait
mov
fnstenv
stos
sar
mov
inc
les
inc
push
pop
imul
jecxz
aaa
xor
jmp
sub
mov
out
mov
je
cmc
and
mov
and
adc
movsl
sbb
daa
dec
pop
popa
dec
pop
cwtl
divb
loope
and
fnstenv
in
insb
cs
xchg
scas
dec
xchg
scas
dec
xchg
scas
inc
subl
loopne
addl
sti
roll
pop
cmp
out
add
dec
xchg
mov
add
and
xchg
mov
fcmovu
push
jecxz
pop
aas
call
pop
ja
xor
and
xor
sub
pop
fildll
arpl
xor
jecxz
ss
andb
xor
push
scas
xlat
lret
outsl
pop
call
pop
mov
test
xchg
push
psraw
or
js
and
or
lcall
cmpsb
sub
popa
push
cmc
arpl
call
lock
sbb
mov
dec
xchg
sub
pop
call
mov
pop
stos
cmpsl
shll
loopne
xchg
push
mov
xchg
test
mov
mov
pop
ds
push
xorl
ja
andb
xchg
insb
inc
jno
lret
cmp
loopne
aam
popa
lret
jbe
mov
pop
loope
dec
push
movsb
dec
in
or
jp
jbe
push
push
sarl
dec
mov
loope
fdivrl
mov
xchg
and
in
out
pop
dec
mov
xchg
andb
cmp
mov
mov
or
jg
dec
pop
pushl
int
jg
lea
and
and
sarl
stos
xlat
mov
push
shrb
fwait
and
sbb
and
sbb
orl
inc
ror
jbe
ljmp
test
inc
shrl
sbb
lcall
pop
cmp
sahf
cmp
test
xlat
cmp
dec
push
push
sub
sbb
rcrl
lahf
sub
addr16
pop
ss
xchg
xor
sbb
ret
pop
shlb
jb
jp
insb
cmpsl
lea
imul
popa
imulb
add
pop
sub
jge
and
mov
dec
add
xchg
rcll
lea
pop
imul
cmp
pushf
cmp
inc
or
jle
add
push
in
cmc
mov
std
cmc
sbb
sbb
mov
outsl
mov
fdivr
jmp
or
jg
pop
icebp
fldenv
pop
cmp
int3
cmpsw
inc
sub
out
mov
cmpsb
iret
adc
lock
push
mov
scas
add
ss
or
xor
lret
and
test
movsb
imul
jmp
mov
into
loopne
adc
in
aaa
lock
mov
sbb
xor
scas
cwtl
in
inc
mov
xor
xchg
cli
std
mov
bound
clc
xor
push
mov
jg
pop
push
lods
idivl
in
hlt
push
pop
and
adc
sbb
add
loope
lcall
add
pop
sub
push
jmp
xchg
mov
add
jb
mov
dec
or
xchg
pop
out
in
and
in
jg
repz
outsb
jecxz
cli
and
fstpl
lahf
push
out
jnp
lods
inc
and
add
cmp
cwtl
mov
push
call
jo
out
in
push
cmp
cmp
inc
leave
pop
in
sbb
pop
inc
jmp
imul
sub
jns
mov
imul
pop
std
push
xchg
jbe
rorl
push
leave
in
shr
push
inc
mov
xchg
jae
test
xor
lods
xchg
push
pop
pop
popf
jmp
out
pop
mov
push
cmpsl
xor
imul
inc
xorl
movsb
dec
out
mov
imul
inc
mov
jnp
leave
out
mov
pop
lods
mov
mov
cmp
cmp
call
imul
xchg
adc
loop
pop
mov
aas
es
out
mov
dec
xchg
push
xchg
mov
out
loopne
mov
pop
jecxz
jae
sub
out
out
out
inc
loop
hlt
shl
aas
dec
lret
inc
mov
mov
sbb
add
stos
test
in
mov
fidivl
or
sbb
imul
out
mov
loopne
push
sti
popf
scas
xchg
cwtl
outsb
push
adc
mov
inc
aas
daa
dec
call
cs
sti
shll
cmp
dec
add
and
mov
loop
adc
out
mov
dec
out
ss
mov
shll
and
ds
mov
rorl
es
mov
rol
sbb
jp
daa
sub
xor
xchg
inc
loope
test
in
outsb
mov
xor
mov
jmp
mov
sub
lds
pop
les
inc
dec
imul
push
mov
lods
mov
fwait
xchg
je
push
cli
push
pop
push
aad
mov
fdivrs
mov
mov
cmp
mov
sub
add
popl
fbstp
push
cli
push
mov
ds
xchg
pop
jbe
test
xchg
incl
dec
loop
dec
call
inc
cli
inc
xchg
add
adc
popa
pop
fldenv
dec
pushf
xchg
in
mov
add
loope
sbb
sbb
xchg
lock
sbb
sub
add
sbb
dec
jp
movsl
enter
adc
push
iret
lahf
cmp
loope
imul
xor
shll
dec
loope
andl
movsb
fnsave
cmc
fists
aad
pop
xchg
pop
pop
sub
popf
mov
std
test
mov
out
mul
add
cmp
lods
cli
sbb
pop
inc
sub
dec
pop
fs
adc
and
loope
ljmp
or
push
bound
push
xlat
hlt
sub
sub
xchg
out
dec
xor
mov
jbe
adc
loope
test
jnp
cmp
sbb
mov
lcall
pusha
mov
xchg
ret
adc
out
out
push
mov
mov
pop
stos
cmpsl
daa
outsl
mov
adc
jbe
sub
dec
ss
jle
popa
xor
divb
jmp
push
inc
cmp
or
push
scas
cwtl
add
mov
shrb
mov
test
add
fsubrs
in
in
push
imul
or
in
push
data16
mov
push
loopne
outsb
xchg
push
cmp
adc
int
pop
cmp
push
clc
movsl
or
clc
test
push
adc
fiaddl
out
bnd
sub
jecxz
mov
or
dec
push
pop
pop
adc
js
sbb
mov
loop
adc
popw
jmp
lcall
xchg
jo
in
sarl
xchg
add
lea
rolb
pop
dec
mov
es
fimuls
dec
scas
sti
and
in
adc
add
and
jle
pop
jb
push
ficoms
mov
fdivs
push
cmpsb
sarb
or
or
data16
inc
jns
test
ja
lods
sarl
idivl
cmp
xor
push
cmpsl
movsb
sub
nop
stc
test
sbb
lods
xchg
mov
cmp
lret
nop
test
shll
repz
dec
movsl
imul
cmp
xor
dec
xlat
lods
shl
addr16
or
out
mov
xchg
test
es
out
pop
dec
clc
mov
pop
ljmp
bound
xchg
sub
repnz
pop
in
pop
cmp
lret
mov
lahf
mov
ljmp
fidivrl
lods
loop
xor
adc
cmp
loope
cmpsl
mov
les
xchg
pop
rclb
cmp
jecxz
pop
pop
xchg
dec
xchg
push
sti
cltd
test
lods
mov
sarl
scas
fidivs
jecxz
daa
es
xor
mov
and
pop
cmp
cwtl
dec
pop
ss
xor
adc
dec
push
cld
or
out
loope
scas
inc
cmpl
movsl
dec
loopne
jno
mov
cwtl
mov
imul
push
push
sti
cltd
push
lock
test
lods
mov
sarl
scas
fbstp
data16
call
outsb
sbb
pop
xchg
aaa
dec
xchg
xor
cmp
fcoms
xchg
mov
jo
outsb
fidivs
xorb
stc
cmpsl
shlb
lcall
and
mov
sbb
sti
or
pop
pop
arpl
les
pop
dec
fnstenv
dec
sbb
or
shll
stc
or
fincstp
fists
xchg
mov
sub
test
pop
sahf
mov
paddusb
fdivs
and
fnstsw
add
mov
aam
lods
dec
popa
add
fnstcw
sub
and
sbb
mov
bswap
cmp
fistpll
pop
cmpsl
cli
sub
mov
popa
mov
daa
dec
shrb
int
out
clc
cmpsl
inc
push
lods
pop
imul
mov
test
ror
das
sub
lea
stc
int
outsb
js
sbb
adc
call
sbb
xor
push
pop
sbb
fsubl
add
mov
call
mov
aad
mov
popf
lods
sbb
adc
inc
jne
mov
pop
inc
sub
jge
push
maskmovq
idivl
test
cld
xor
and
push
jae
mov
mov
mov
arpl
icebp
jecxz
adc
enter
adc
fucomi
popf
push
mov
sbb
adc
divl
jle
push
sbb
aam
jmp
xor
xchg
icebp
jmp
push
adc
ret
popa
xlat
jmp
xor
jbe
inc
lahf
sub
insb
push
fstpl
nop
fcmovu
std
sar
mov
or
and
inc
lods
mov
int
push
adc
add
mulb
cmp
jmp
sbb
or
sbb
aam
lcall
int
push
adc
dec
ss
fsts
mov
push
dec
inc
pop
fs
fiaddl
cmp
gs
testb
add
insl
mov
mov
int
push
adc
cltd
mov
cmp
inc
jl
and
cmc
pop
push
xchg
jno
cltd
push
loop
lea
push
adc
cmpsb
adc
inc
repnz
rol
add
int
repnz
out
pop
cmp
jae
and
mov
sbb
fs
call
sub
incb
out
std
jecxz
int3
mul
popw
cmp
lret
and
arpl
outsb
aas
leave
jmp
in
push
xor
fcoml
and
push
shl
arpl
outsl
pop
mov
push
pop
cmp
rcll
lods
pop
mov
dec
rclb
mov
push
jl
shrb
xor
sbb
cmp
into
fidivrs
ds
imul
dec
insl
pop
ja
mov
fiadds
sahf
cmp
pop
movsb
sbb
in
mov
pop
out
xchg
mov
and
lcall
out
mov
pop
in
fwait
movsl
mov
daa
es
out
mov
andl
loopne
mov
cli
in
fwait
movsl
mov
and
push
shl
adc
jecxz
ss
mov
pop
xor
gs
and
push
shl
arpl
outsl
pop
mov
push
pop
cmp
rcll
std
sar
imul
push
lret
xchg
push
lock
outsl
pop
mov
pop
inc
or
daa
mov
sbb
mov
pop
adc
adc
push
shrb
pop
adc
pop
out
and
or
pop
addl
inc
push
cmp
adc
cs
or
pop
adc
pop
dec
outsb
mov
pop
adc
mov
and
roll
adc
xor
rol
imul
jae
mov
js
pop
adc
push
push
push
ret
outsl
mov
xor
in
and
rolb
adc
inc
jb
inc
pusha
mov
fldl
adc
dec
jg
mov
adc
cs
mov
push
push
sar
pop
adc
icebp
stos
inc
fwait
pop
pop
dec
int3
push
adc
and
movsb
out
adc
ss
mov
dec
rcll
adc
divl
scas
xor
mov
adc
sbb
pop
adc
sbb
data16
pushf
cltd
testl
pop
xor
push
notl
jge
in
pop
adc
dec
ss
pop
dec
jmp
mov
pop
adc
stos
sbb
pop
pop
into
je
pop
adc
outsl
fdivs
sub
movsb
jmp
adc
insl
add
lock
adc
sti
pop
mov
mov
popf
push
dec
sti
mov
cmp
adc
call
pop
adc
lods
cwtl
ret
xchg
stos
mov
in
test
fbstp
push
adc
cmp
push
mov
jg
fdivrl
sub
sub
mov
or
sbb
and
xchg
jge
pop
inc
push
out
outsb
insl
push
and
sbb
std
push
jns
cmp
jmp
pop
in
add
test
pusha
xchg
fadd
fdivl
jmp
jmp
nop
fldl
mov
sar
sub
cltd
push
in
mov
or
pusha
mov
arpl
xor
adc
inc
inc
push
insb
sarb
mov
aaa
int3
cs
fdivrs
leave
pop
inc
sub
push
cmp
jno
xchg
inc
sbb
out
in
in
ljmp
cmp
lcall
mov
add
out
add
lret
es
xor
fiaddl
mov
dec
inc
push
shl
call
add
mov
icebp
xor
adc
inc
pcmpeqw
adcb
cmp
popf
cmp
add
lret
dec
scas
or
in
out
push
mov
push
cmp
pop
sub
and
mov
rorl
sbb
rcl
popa
mov
ja
add
cmp
sub
fmuls
mov
cmp
test
test
outsb
subb
scas
adc
push
adc
push
pop
sbb
pop
xor
or
cltd
daa
mov
hlt
and
sahf
ja
xlat
xor
or
fidivl
xchg
fsubrp
das
xor
sub
cs
out
insl
pop
clc
xchg
sub
xlat
cli
push
ds
mov
sbb
test
lods
sarl
popa
cli
sbb
out
mov
scas
mov
outsb
pop
in
pop
pop
outsb
pop
jbe
mov
into
mov
mov
xor
std
or
movsl
sbb
insl
pop
jbe
cmp
rcrb
cmp
cmpsl
cmp
push
arpl
jge
lock
xlat
lods
pop
mov
shll
sbb
sti
cmp
shl
cmp
mov
push
lea
push
fisubs
xchg
pop
xchg
shll
cmp
lods
mov
call
popf
xor
mov
push
push
scas
jmp
shrb
repz
lahf
sarb
mov
repz
push
cmc
mov
pop
in
pop
shr
mov
or
insl
loopne
movsl
mov
sbb
jge
mov
push
cmpsl
pop
mov
dec
lea
jae
fistps
sub
inc
pop
xor
insb
push
adc
pop
xor
lahf
aam
mov
fidivl
pop
mov
lods
pop
xor
or
ret
xor
mov
push
insb
push
in
lcall
out
mov
xchg
es
jmp
std
sbb
xchg
pop
jmp
out
cwtl
jp
loop
and
add
and
jp
xchg
bound
xchg
and
test
ret
push
adc
adc
movsl
adcl
xchg
mov
imul
push
out
adcl
mov
mov
xchg
mov
push
inc
mov
aad
adc
mov
mov
movsl
stc
andl
test
je
pop
adc
popw
insl
loopne
and
sbb
adcl
test
stc
addr16
xor
mov
ljmp
mov
ss
pop
and
into
lret
jg
pop
imul
ficompl
xor
je
das
inc
xchg
sub
rcr
adc
mov
cs
sbb
xor
adc
ss
movsl
adc
sub
push
mov
push
pop
mov
decb
mov
fldcw
mov
fcom
inc
jne
add
xlat
in
pop
add
cli
pop
ror
int3
outsl
jge
out
mov
cmp
insb
fbstp
add
fistl
fimull
mov
xor
cmp
push
pushf
mov
pop
cwtl
and
in
xchg
sub
inc
or
out
sub
std
pop
flds
jbe
bound
push
mov
or
shll
inc
cltd
lea
dec
fistpl
mov
pop
incl
ds
mov
aaa
cmp
xchg
mov
sarl
inc
inc
dec
xor
dec
imul
cmpsb
jo
xor
adc
mov
outsl
push
mov
out
or
xorl
jl
sahf
xchg
dec
out
rorb
mov
leave
push
leave
jl
lret
out
dec
mov
jmp
xchg
lcall
dec
xor
mov
repz
sbb
mov
pop
xor
push
xor
jg
sbb
push
xchg
scas
cmc
push
and
mov
out
xchg
stc
data16
xor
inc
pop
adc
mov
out
testb
ret
into
sbb
shl
mov
jg
and
lret
jg
pop
pop
scas
popf
sub
lahf
call
es
inc
and
and
xor
xchg
jne
and
mov
push
outsl
shlb
xor
pusha
pop
cmp
into
or
out
mov
cld
push
movsl
ds
shlb
adc
mov
fidivl
in
sub
dec
mov
daa
es
loopne
test
loope
and
es
enter
sub
push
jecxz
lcall
pop
shrl
mov
out
mov
scas
push
jmp
push
pop
cmp
push
rep
in
xchg
das
mov
add
sti
popa
xor
and
shl
outsl
std
mov
lea
sub
pop
mov
sbb
cmp
shrb
test
jbe
xor
test
orl
ficoml
enter
push
jnp
mov
nop
test
lea
lret
ret
ds
pop
loope
pop
fldenv
jb
popa
loopne
dec
cmp
mov
test
push
sar
popa
loopne
jge
push
xor
arpl
push
js
lret
mov
and
rorl
sahf
fwait
pop
push
pop
jp
mov
and
pop
arpl
inc
push
dec
cmp
adc
out
aaa
repnz
cmp
push
inc
dec
repz
cmp
jg
insb
push
icebp
mov
and
add
xor
cmpsl
dec
add
pop
pop
adc
sub
lods
xchg
sbb
pop
outsl
fnstcw
dec
cmp
adc
in
xor
in
mov
imul
ret
xor
addb
push
adc
pushf
jb
jb
and
mov
mov
adc
test
jmp
pop
adc
adc
xor
out
or
push
adc
mov
xor
and
lds
stos
int3
dec
cmp
adc
sub
cmp
cmpsb
or
call
outsl
sbb
push
mov
adc
test
scas
sbb
xor
call
mov
pop
pop
adc
js
bound
adc
lcall
xor
inc
sub
dec
xchg
jecxz
mov
push
adc
test
imul
movsl
xor
mov
sub
stos
cmp
mov
cmp
dec
push
aad
xchg
fldcw
mov
push
int
fistps
push
in
sbb
mov
test
dec
in
cli
sub
xlat
mov
or
mov
imul
dec
cmp
adc
rclb
mov
out
adc
std
sbb
xor
test
sbb
cwtl
and
jno
mulb
mov
mov
je
mov
adc
jbe
add
fwait
xchg
push
adc
movsl
daa
mov
stc
outsb
push
in
mov
pusha
mov
arpl
push
adc
inc
inc
xor
testl
push
mov
mov
lahf
fldl
cld
test
adc
cmc
call
arpl
nop
adc
inc
cmp
pop
test
pop
pop
adc
ret
es
or
push
adc
fadds
mov
cmp
cmc
rcll
mov
pop
mov
cmpsb
dec
cmp
adc
mov
xor
loopne
cmp
sbb
cmp
inc
inc
xor
push
cld
test
adc
dec
add
in
pop
push
push
fimuls
sahf
cwtl
fwait
jecxz
push
pop
pop
adc
adc
or
push
adc
aam
or
fiadds
sarl
mov
lods
mov
jb
inc
pop
insl
sbb
nop
and
inc
cltd
pop
adc
vpandn
cld
test
adc
xor
fcoms
pop
mov
sbb
jae
pop
pop
adc
xchg
sbb
or
push
adc
and
cmp
fisubs
adc
sbb
insl
fidivrl
lods
loop
cmp
adc
out
aaa
repnz
mov
jo
popf
loope
xor
test
adc
sti
mov
mov
es
out
mov
and
mov
dec
add
adc
xchg
sbb
or
push
adc
scas
lcall
or
imul
pop
jl
shrb
loope
cmpsb
mov
int
cmpsl
dec
out
stc
cmp
shll
sbb
adc
sbb
inc
and
jecxz
sbb
pushf
cmp
pop
insl
and
mov
subl
fbstp
xor
fistpll
sub
and
cmp
pop
ss
ficoml
mov
add
push
jae
mov
lcall
adc
addb
test
or
or
fsubrl
mov
mov
pop
cmp
in
pop
out
and
dec
push
mov
js
scas
mov
negl
dec
jmp
stos
test
jecxz
lods
pop
mov
mov
mov
xor
sbb
xor
mov
xor
push
adc
fistpl
push
hlt
push
loopne
cmp
js
inc
pop
mov
test
adc
pushl
pop
aam
fdivrl
add
mov
sub
pop
pop
adc
pushf
adc
loop
adc
aad
popa
pop
xor
sbb
add
jb
arpl
test
ret
test
pop
push
mov
lea
dec
mov
or
xchg
fadds
js
mov
add
dec
xor
xor
int3
push
sti
test
movsl
dec
jne
enter
std
pop
lret
xor
sbb
sub
jecxz
push
insb
push
sub
subl
aad
or
shll
sbb
or
popl
push
adc
jae
neg
push
test
decb
xchg
jbe
lods
add
mov
sub
inc
inc
adc
adc
inc
ret
cmpsb
ficoml
xchg
aam
lds
jae
xor
xor
adc
data16
fsubl
js
xor
and
in
jmp
lock
pop
out
les
sbb
cwtl
and
xor
add
leave
lods
aam
jge
jne
cmp
push
jecxz
lods
xor
adc
aaa
aas
mov
dec
push
in
pop
cmp
stos
xor
push
dec
test
xchg
sbb
sahf
inc
dec
xor
mov
lods
jbe
fs
stc
sti
mov
dec
and
dec
inc
call
ljmp
shrb
adc
adc
pop
popa
les
pop
and
movsl
imul
aaa
xchg
mov
xor
and
lock
repz
out
push
les
in
test
cmp
out
cmp
ja
pop
sbb
int
mov
xor
sahf
scas
adc
cmp
loopne
int
pop
sbb
xchg
add
mov
loope
and
fldl
pop
inc
cmpsb
dec
aad
pop
push
pop
sbb
jle
inc
jge
std
pop
mov
inc
sbb
lcall
push
cwtl
mov
and
mov
add
scas
int
movups
cmp
and
pop
adc
outsb
mov
mov
shl
inc
imul
call
rorl
inc
loope
and
push
rep
pop
mov
mov
loopne
inc
cmp
mov
sbb
xor
icebp
dec
repz
cmp
dec
adc
cmp
cmp
xchg
fisttps
iret
inc
push
cmp
and
out
sbb
sub
push
fisubrl
xor
outsb
loop
xor
adc
cmp
cmp
sub
dec
mov
cmp
sti
movsb
ret
jge
enter
out
lahf
movsl
push
cmc
sub
xor
push
xchg
sub
popf
mov
cmpsb
sbb
fsubrl
mov
cmp
mov
mov
jae
test
maxps
notb
push
adc
cmp
imul
call
ds
fdivrp
rcl
fwait
pop
call
ret
dec
sbb
pop
das
cmp
xor
loope
outsl
out
sbb
xorb
das
pop
sbb
adc
xchg
and
stos
mov
push
fldcw
repz
lock
repz
aas
pusha
sbb
pop
sahf
and
icebp
jp
leave
cmpsl
mov
andl
rcrb
mov
aad
adc
xchg
es
out
jmp
xchg
mov
in
pop
test
mov
push
fdivs
decl
fwait
mov
push
roll
pop
insl
shll
adc
cltd
mov
shlb
jg
jno
xor
adc
add
sub
sub
dec
loope
inc
bound
push
fldl
aad
pop
inc
andl
dec
fstl
dec
cmpsl
je
mov
arpl
sahf
fsubrs
pop
cmp
xchg
dec
cmpsl
icebp
push
ljmp
adc
adc
inc
xchg
mov
movsb
lea
shlb
sti
mov
das
lea
sub
cmp
mov
jl
push
mov
dec
lret
nop
fs
inc
inc
sbb
inc
xlat
sub
push
adc
ficoms
jae
mov
xchg
movsb
mov
push
cmpsb
dec
std
mov
addr16
stos
cmp
scas
or
mov
adc
push
adc
or
add
mov
push
out
aam
mov
xor
jge
sarb
xchg
loope
push
inc
andb
adc
mov
and
mov
mov
pop
orl
inc
mov
push
mov
or
jae
ret
push
sahf
and
addr16
push
jb
push
outsb
jns
rcrb
int
aad
adc
pusha
xchg
fistpl
insb
and
pop
jmp
lock
mov
lahf
pop
push
pop
cmp
push
xor
inc
or
shlb
push
mov
jbe
test
add
inc
scas
and
push
enter
std
xor
lds
mov
add
pop
loopne
out
push
arpl
jne
sub
or
jmp
pop
mov
xchg
push
test
cld
orb
mov
pop
stos
cwtl
inc
fisttps
pop
shll
fnsave
pop
lods
dec
test
subl
or
mov
insl
ss
push
push
test
pcmpeqd
stos
sets
or
jo
jnp
pop
push
loop,pn
xchg
adc
push
adc
lods
in
outsl
mov
ret
mov
incb
or
jmp
fwait
cmc
fmul
repz
shll
outsb
outsl
movsb
mov
out
sbb
xchg
pop
adc
test
insb
adc
ret
out
jmp
js
ljmp
shlb
fwait
push
mov
stos
shll
aad
adc
xor
repz
sbb
sbb
sarl
pop
mov
leave
out
mov
ss
out
std
sarb
jbe
nop
and
dec
mov
loopne
inc
xchg
mov
adc
pop
loopne
cmp
rolb
xchg
mov
and
into
or
inc
dec
mov
add
es
pop
ret
movsb
fcoml
mov
out
cmpsl
fildl
mov
xchg
sub
sbb
call
adc
mov
lcall
out
mov
mov
sub
sub
andb
and
pop
mov
ret
mov
dec
mov
adc
cmp
pop
sbb
xor
mov
andl
out
aaa
add
test
stos
xchg
sub
lcall
out
mov
aad
rcl
lods
pop
out
mov
fisttps
lods
sarl
fiadds
fsubrl
shlb
adcl
movsl
dec
or
out
mov
sub
repz
aad
cmpsb
xor
xchg
ss
rol
pop
aad
adc
xchg
sahf
push
out
pop
fstps
outsb
fidivl
popf
mov
ret
into
sbb
insl
pop
jbe
mov
push
adc
pop
dec
repnz
pop
jno
pop
jbe
call
inc
add
jmp
scas
les
test
cld
bound
insb
mov
lahf
shr
sub
pusha
push
adc
mov
lods
stos
stos
lods
adc
adc
jns
mov
fldcw
in
xor
adc
sub
adc
mov
dec
pop
and
divb
fisttpl
xchg
add
in
and
rcrl
pop
bound
in
fists
xchg
xor
lret
cmp
insb
jmp
pop
arpl
jns
fwait
inc
cs
sti
arpl
call
sahf
mov
rdmsr
mov
pop
and
mov
xchg
movsb
mov
aad
adc
and
int3
xchg
mov
xlat
inc
push
imul
dec
xchg
mov
cltd
mov
movsl
ret
xchg
call
lahf
dec
int3
aad
adc
mov
sub
pop
daa
ret
pop
and
test
mov
mov
xchg
shrl
xchg
leave
xor
fs
jno
fbstp
mov
pop
and
dec
fdiv
and
xchg
enter
jecxz
int
cli
inc
push
out
call
cmp
ljmp
add
mov
popa
imulb
mov
les
outsb
leave
addb
mov
pusha
push
adc
pop
ds
mov
xor
add
or
jbe
fnsave
repz
and
adc
lea
xchg
push
add
xchg
test
mov
inc
push
fs
jnp
xchg
hlt
out
push
pusha
movb
push
jo
nop
shll
or
mov
dec
fucomi
mov
aaa
stos
faddl
pushf
mov
push
inc
fmuls
loopne
mov
stc
dec
fdecstp
fisubl
insl
cmp
jecxz
pushf
arpl
filds
mov
jmp
mov
pop
push
es
jmp
pop
adc
ret
adc
adc
or
sub
inc
mov
or
cwtl
mov
mov
sub
lea
inc
sbb
fwait
and
lahf
or
sbb
loopne
sahf
test
mov
fdivr
scas
mov
push
xor
js
or
pop
ljmp
pop
ss
notl
imul
xor
pop
repnz
jns
fstpl
mov
dec
inc
repz
dec
add
sarl
cmp
mov
test
outsb
pop
ficompl
inc
dec
pop
pop
cwtl
insb
push
adc
sub
pop
add
out
out
test
cmp
adc
out
mov
mov
cmp
fxch
arpl
or
mov
sahf
inc
out
mov
mov
mov
dec
out
push
mov
lods
or
xchg
scas
mov
mov
xchg
sub
mov
mov
in
movsl
ds
push
dec
in
push
xchg
sahf
dec
insb
test
loop
sbb
xchg
jae
jecxz
mov
xlat
pop
call
push
test
xchg
nop
and
adc
pushf
mov
in
loopne
add
inc
movsl
popf
xchg
sub
outsb
out
pop
mov
mov
xchg
into
fstl
dec
sub
loop
out
push
add
mov
repz
xchg
pop
jno
pop
jmp
xor
dec
out
push
repnz
pop
pop
fcoms
fwait
scas
xchg
pop
stc
fsubrl
xorl
movsl
dec
or
out
mov
sbb
xchg
sub
js
insl
push
jns
sbb
xchg
and
pushf
xchg
inc
pop
cmp
cwtl
mov
add
and
addb
dec
add
fildll
clc
xor
jno
push
shlb
mov
in
stos
pop
mov
pop
out
out
cmpb
fdivrl
aad
aam
xor
adc
cmp
fldenv
adc
out
push
pmaxsw
and
jmp
mov
aam
aaa
sub
mov
xor
iret
out
bound
bound
dec
testl
jp
test
fldcw
insl
fwait
or
xchg
adc
push
in
fldenv
or
loopne
pop
adc
and
scas
test
sub
pop
xor
ret
lahf
adc
and
add
int
sbb
jns
push
insb
fldenv
inc
mov
adc
ljmp
fdivrp
fsub
test
cld
jb
push
fcoml
out
fucomip
cltd
push
jae
mov
movsl
gs
dec
pop
pop
pop
stos
inc
lret
dec
ret
push
test
mov
adc
push
adc
mov
pushf
shll
fs
lds
jp
jg
pop
pop
cmpsb
in
push
out
and
inc
xchg
in
popa
jbe
dec
jecxz
clc
jmp
es
push
mov
hlt
xchg
xor
pop
xor
pop
cmpsb
xchg
out
mov
push
loope
adc
xlat
and
lahf
sub
xor
pop
add
cmpsb
xchg
inc
arpl
pop
dec
es
fdivs
or
imul
dec
dec
inc
mov
lods
and
mov
push
std
dec
jecxz
push
stos
mov
or
fs
rcl
lods
dec
stos
lds
jge
mov
cmp
push
imul
cli
inc
dec
jo
cmp
mov
push
inc
mov
cs
outsb
push
adc
notl
dec
push
dec
loopne
ficompl
push
call
and
ss
sub
js
lcall
lahf
leave
xor
sahf
adc
test
lea
mov
add
cmpsb
sub
dec
popf
rolb
sub
pop
inc
outsl
adc
shl
xchg
out
cs
dec
push
jnp
in
push
sahf
xor
lahf
add
bound
pop
mov
rolb
mov
adc
push
push
test
adc
mov
dec
xchg
leave
adc
outsb
mov
xlat
mov
cmp
mov
add
mov
inc
sub
fsubrl
mov
dec
loopne
pop
shl
imul
mov
es
inc
xor
cmpsb
test
fisttpl
jecxz
push
adc
push
xorb
sarb
rorl
sti
aad
repz
push
lret
fsts
fistl
jmp
repz
daa
dec
loopne
mov
push
push
xor
fidivl
pop
adc
loopne
cltd
out
jo
mov
in
pop
push
xor
xlat
lods
pop
in
xchg
bound
mov
ds
dec
pushf
dec
lret
adc
sub
pop
adc
xchg
enter
je
or
das
inc
sbb
insl
pop
dec
pop
mov
pop
adc
out
and
jecxz
adc
lea
mov
into
shlb
fildl
adc
or
dec
js
mov
adc
mov
push
jecxz
sbb
fucomp
add
adc
lods
pop
xor
mov
sti
pop
adc
push
shl
cld
pop
adc
push
push
ja
insb
mov
xor
out
and
xlat
pop
adc
inc
je
inc
imul
bnd
add
rolb
adc
dec
pop
mov
pop
adc
sbb
and
pop
adc
ss
in
shrb
cli
pop
adc
adc
loop
testl
push
addr16
sbb
push
cld
mov
dec
add
mov
adc
test
cld
and
inc
push
es
fdivr
mov
das
sbb
mov
xchg
lahf
sub
sbb
push
inc
mov
cmp
stc
sbb
stc
and
inc
loopew
mov
decl
mov
xor
test
ds
bound
outsl
fidivrl
in
pop
xor
nopl
cld
outsb
cwtl
add
sbb
inc
pop
jl
jns
std
pop
fdivs
cwtl
xchg
rep
xchg
shlb
movsl
sahf
mov
pop
and
mov
je
jmp
sbb
mull
je
nop
stos
add
ret
mov
mov
pop
inc
shrb
adc
cmpsl
pop
mov
out
mov
and
loopne
xchg
xchg
mov
cmpsl
xor
popf
test
mov
jnp
lret
jl
fs
loopne
push
adc
imul
sub
and
mov
inc
into
jns
sub
mov
pop
fildll
lods
pop
outsl
mov
cmc
clc
xchg
cmp
mov
aad
inc
adc
push
out
push
sbb
push
adc
out
cmpsb
sbb
int3
sbb
jne
or
adc
xor
xchg
xchg
jmp
jmp
dec
in
sahf
test
fsubr
mov
notb
mov
mov
adc
xor
mov
cli
std
cmp
push
adc
out
jns
fisttpll
push
jae
scas
mov
shrb
push
adc
pop
daa
lods
mov
pop
mov
inc
ds
or
std
mov
or
adc
cmpsl
ret
out
mov
xchg
mov
ljmp
outsb
ss
pop
rorb
or
jbe
stos
add
out
ljmp
push
es
xchg
insl
and
pop
adc
lock
mov
pop
inc
push
and
test
pop
push
dec
and
ret
into
sbb
movsb
xchg
pop
mov
aad
adc
and
and
adc
mov
adcl
ds
pushw
ret
ds
push
bound
fdivs
arpl
jmp
test
outsb
push
fs
mov
push
push
js
push
sub
pop
adc
fstps
pop
in
pop
adc
pop
pop
dec
dec
mov
pop
adc
sbb
fidivs
adc
mov
jae
jecxz
adc
fs
int3
movsb
dec
xchg
mov
loop
adc
xchg
popa
or
movsl
dec
or
push
adc
xchg
or
dec
add
repz
pop
add
rclb
lods
scas
jno
test
sub
movsl
out
pop
loopne
pop
and
dec
xchg
mov
pop
fstpt
outsb
inc
es
sahf
cmp
fsubrl
push
movsb
movsl
out
adc
mov
adc
in
fstpt
add
out
out
add
rcll
adc
xor
mov
xchg
jb
ds
cmp
add
inc
or
cmpsb
dec
out
outsb
pop
add
mov
mov
mov
lahf
insl
loop
jge
enter
pop
cmp
add
sub
out
xchg
popa
cmpl
dec
or
xor
xchg
out
pop
gs
inc
loope
nop
and
adc
cmp
ret
lds
fistl
lcall
sahf
fnstenv
loope
sub
pop
in
mov
std
mov
adc
enter
pushf
pop
jmp
jmp
mov
fdivs
xor
aam
xchg
jo
roll
test
push
jl
or
pushf
cmpsb
ss
cmp
ds
xchg
cs
xor
pushf
fs
cmp
fdivr
rorb
or
pop
hlt
jb
inc
aaa
mov
inc
jle
sub
aam
xchg
shlb
icebp
inc
inc
fmuls
outsl
aaa
iret
test
inc
adc
in
xchg
scas
pop
jp
adc
sarb
xor
add
xor
pop
adc
das
xor
mov
push
adc
in
sub
pop
adc
pop
inc
popaw
inc
push
insb
and
roll
sub
inc
ss
push
rcrb
mov
popf
pusha
cmovno
mov
fsubs
mov
dec
sbb
dec
nop
mov
pop
sbb
insb
mov
pop
push
pop
cmp
out
xchg
test
test
mov
pop
leave
lods
pushf
cmpsl
or
out
mov
pop
push
outsb
xchg
andl
add
cmp
push
adc
sbb
fcmove
out
pop
fs
jl
enter
mov
repnz
std
in
sbb
adc
and
adc
in
leave
cltd
mov
mov
lods
out
push
test
sbb
sarb
outsl
call
jp
inc
cmp
scas
push
mov
inc
lahf
pop
std
jl
jmp
jne
loope
push
jecxz
movsb
xor
mov
sbb
mov
in
ss
daa
decb
mov
icebp
ss
aam
sbb
repz
pop
push
and
mov
test
movsb
cwtl
push
xchg
or
movsl
jo
push
pop
inc
and
aad
adc
sub
in
inc
dec
jo
sub
add
in
and
add
jmp
pop
movsl
dec
dec
std
xchg
neg
stc
into
push
push
mov
inc
cmp
es
aad
jmp
push
adc
shlb
xchg
movsl
or
outsb
popf
sub
in
cmp
bound
pop
inc
dec
pop
dec
mov
outsl
aas
sarl
mov
div
push
jl
insl
push
mov
push
aad
aas
push
adc
cltd
cltd
lahf
mov
mov
test
stos
data16
push
jo
fbstp
icebp
test
cmp
pop
ss
cmpsl
push
mov
icebp
xchg
and
mov
nop
sti
pop
adc
and
pop
psubq
mov
dec
ror
div
dec
xchg
pop
jmp
cmp
adc
sbb
loopne
stos
out
sbb
loop
pusha
rol
mov
or
inc
jns
cmp
push
adc
clc
mov
xchg
mov
loop
adc
mov
adc
std
push
movsl
out
adc
pop
dec
outsl
scas
mov
adc
adc
out
add
inc
dec
ss
aad
aaa
fidivrs
push
adc
mov
push
xor
pop
adc
inc
sub
leave
notb
es
out
lea
fildll
loope
pop
aas
fnstenv
pop
xchg
mov
out
movsl
or
add
xchg
nop
and
dec
mov
loopne
popa
adcl
mov
xor
or
inc
mov
addb
xor
lahf
dec
xchg
sub
and
iret
fidivrs
dec
xchg
mov
pop
mov
pop
fwait
decb
mov
pop
fstpt
add
sahf
cmp
push
ret
mov
mov
lods
sar
popf
sbbb
mov
adc
adc
xor
adc
insl
xchg
adc
or
mov
inc
aas
push
cli
mov
lock
sub
enter
pusha
call
shlb
pop
xlat
xor
fnstenv
pop
adc
fstps
mov
mov
pushf
jle
cmp
add
loop
fwait
mov
pop
out
pop
sub
jg
push
inc
mov
mov
ds
or
xor
add
lret
inc
fwait
mov
add
cmp
ret
cmpsb
sub
das
mov
enter
lcall
jno
stc
xchg
scas
inc
mov
add
and
add
je
mov
push
imul
add
mov
sbb
and
xorb
jno
push
pop
lret
aam
push
orl
insl
into
xchg
fwait
xlat
scas
int3
xor
sub
ljmp
rcr
sar
add
ret
mov
inc
loop
mov
movsl
sbb
shrb
adc
stos
inc
xchg
and
movsl
sbb
jnp
test
inc
fwait
sahf
mov
nop
jnp
popf
test
mov
adc
jo
pop
lret
loope
add
pushf
jl
data16
fs
pushl
lret
inc
cmp
popf
cmp
pop
adc
or
xchg
and
adc
ret
repz
pushl
mov
adc
cmp
xor
add
adc
cmp
push
adc
repz
test
mov
sub
inc
lahf
pop
pushl
xchg
outsb
dec
or
cld
and
dec
jecxz
and
cmpsl
dec
sub
dec
loopne
sub
xor
mov
icebp
ss
aam
sbb
mov
ljmp
mov
lahf
mov
xor
ret
inc
stos
dec
mov
aaa
mov
xor
stos
daa
call
inc
outsb
nop
fdivl
stos
xchg
test
mov
in
or
rorl
mov
cmp
cmp
out
stos
xchg
add
xor
jns
push
adc
fnstsw
xchg
cli
mov
jbe
add
mov
add
dec
xor
int
pop
in
pop
jno
fisubl
mov
cmp
sbb
jne
push
jno
clc
in
test
push
in
ljmp
shlb
pop
jne
adc
dec
sbb
pushw
sub
test
adc
stc
movsl
inc
iret
inc
les
leave
pushf
cmp
fildl
push
adcl
das
push
pop
push
repnz
insb
xor
push
inc
loopne
test
cmp
lea
outsl
push
lret
push
mov
test
das
scas
ds
test
xor
addl
xor
dec
push
aas
testb
mov
push
inc
pop
adc
pop
loop
cmp
lods
xor
mov
pop
fistpll
dec
xchg
mov
push
pop
je
aam
mov
fld
lea
into
xor
rep
pop
jmp
cmp
ficompl
mov
lea
repnz
add
xor
pushf
mov
mov
push
inc
jge
xchg
xchg
mov
jnp
mov
cmp
mov
aad
shl
outsl
pop
jmp
out
in
mov
sbb
out
mov
push
inc
loop
test
jmp
ret
imul
xchg
cld
stc
rcr
pop
cmp
xchg
mov
push
addl
mov
sub
out
in
mov
jae
fimuls
xchg
scas
xchg
jg
sarl
xchg
mov
xor
dec
pop
fstpt
mov
cmpl
xchg
inc
push
and
movsb
pop
loope
sub
and
xchg
and
outsb
aas
jecxz
mov
inc
call
jne
sub
jge
jecxz
inc
mov
fsubr
ds
rorl
cmpsb
cmp
lahf
dec
sbb
cmp
dec
cmp
cmc
mov
push
and
shlb
xchg
cmp
popf
pop
int
push
in
in
jmp
aam
pop
xor
adc
aam
jo
xlat
adc
and
pop
inc
cmp
lods
and
sahf
sub
int3
rcll
dec
scas
rcrl
notl
xchg
out
inc
mov
jmp
jbe
sti
mov
daa
loopne
callw
lcall
adc
adc
sub
enter
ret
in
pop
xor
sbbl
add
ds
cmp
xchg
and
dec
dec
push
push
pusha
jno
push
inc
sbb
mov
mov
std
mov
int
lret
das
push
and
outsl
cs
pop
push
gs
ret
fdivrl
test
cmp
insb
leave
das
rclb
lods
lret
and
inc
push
gs
lret
jnp
bound
jae
fwait
push
mov
sbb
ja
dec
inc
xor
jp
cltd
mov
test
push
psubq
cmp
add
das
and
adc
jo
and
adc
call
outsl
fwait
lea
ljmp
subb
mov
push
mov
test
mov
ja
cmp
imul
xor
outsb
cmpsb
sub
mov
pop
mov
icebp
nop
mov
push
jae
dec
push
sti
add
push
je
lods
jbe
xor
mov
int
lea
add
jbe
int
imul
loope
imul
pop
push
xchg
jg
test
clc
inc
mov
push
inc
mov
inc
rclb
pop
repnz
mov
xor
cmp
push
cmp
ret
movb
sbb
subl
xor
mov
push
sub
cmp
out
js
outsl
xchg
mov
pop
pop
fucomp
arpl
imul
xchg
popf
jmp
stos
or
ret
hlt
ret
aad
sbb
ret
fld
mov
inc
mov
dec
xor
sbb
stos
push
insl
lcall
fdiv
sahf
jnp
ja
inc
pop
stos
jl
jo
sub
or
mov
mov
sub
out
adc
dec
out
rcll
insb
inc
fcompl
ss
push
jnp
loope
cmpsb
dec
shrb
push
movsb
mov
lea
pop
bound
push
cmpsl
pop
inc
cmp
xor
push
cmp
imul
pop
aam
dec
xchg
in
movsl
loope
sbb
lahf
sbbl
push
nop
clc
test
dec
xchg
sub
cmpsb
sarb
ss
xchg
and
mov
push
xor
lret
subb
pop
jmp
jecxz
sub
push
out
fdivrs
into
cmp
std
psraw
or
cmp
fistl
push
fiadds
mov
lret
cmp
sub
dec
call
sbb
in
aam
pop
mov
pop
call
lock
push
mov
push
repz
pop
pop
lock
lea
mov
fisubs
fwait
sahf
test
push
pop
lea
lds
jb
ss
shl
imul
dec
xor
sub
repz
dec
cmp
lret
out
adc
std
push
psraw
or
cmp
lods
sbb
loopne
movsl
jo
xchg
cmp
pop
jbe
in
jb
inc
mov
fcoml
imul
mov
and
xchg
scas
mov
mov
int
in
test
mov
cmp
shl
jp
scas
fnstenv
push
sub
fldt
adc
in
cmpsl
fdivs
loope
and
cmp
xchg
xchg
es
sbb
fs
inc
hlt
add
pushf
pop
add
stos
into
aad
push
mov
xchg
fnstenv
clc
mov
jge
cmp
aad
popw
mov
dec
add
pop
les
flds
rorl
pop
andl
sarb
push
cld
mov
ss
pusha
mov
cmp
dec
repnz
arpl
pop
fldt
inc
push
out
jbe
in
popa
icebp
add
inc
and
add
mov
rcr
ljmp
arpl
aaa
in
es
insb
or
mov
movsl
pusha
push
jno
mov
ret
mov
test
add
iret
adc
jae
jnp
scas
shll
mov
mov
mov
lods
xchg
mov
push
jne
loope
inc
jle
mov
or
jnp
test
push
in
jns
push
jns
xor
sahf
and
mov
int
test
clc
int3
int3
and
dec
imul
xchg
lahf
lea
push
fnsave
inc
push
repz
sbb
pop
nop
xor
xchg
jbe
es
in
gs
insl
jge
inc
movsl
push
out
in
in
fidivrs
sbb
push
pusha
sub
push
pop
mov
aam
mov
or
xor
outsl
lret
or
aas
mov
out
mov
imul
mov
mov
mov
xchg
daa
adc
repz
inc
fildl
fsubs
fdivrs
mov
pop
jae
and
mov
push
insl
aad
push
outsb
inc
aaa
xlat
notb
push
xchg
or
xchg
add
push
aaa
fiaddl
in
adc
loope
jne
shr
mov
cli
xor
insl
jae
push
sub
popf
in
int
or
cld
sbb
add
data16
sub
adc
jecxz
xlat
loopne
xor
xchg
psrlq
cmp
mov
xor
repnz
into
fsubp
scas
xor
dec
dec
cld
lds
sbb
sti
xchg
add
mov
es
data16
sbb
repnz
jmp
xor
adc
std
add
sub
cmpsb
ss
shll
stc
movsb
inc
std
movsb
inc
loope
inc
jecxz
adc
dec
ud0
es
mov
cmpsb
cmp
sub
and
out
lahf
movsl
push
push
push
mov
lret
mov
adc
pop
fcoms
sbb
ret
fstpt
ds
das
mov
xor
xchg
loope
arpl
mov
cwtl
loopne
scas
xchg
xor
push
cmpsl
xor
popa
scas
inc
xor
push
adc
jo
cmp
repz
rclb
ljmp
enter
imul
test
js
and
and
ss
push
outsb
fiaddl
mov
imul
rol
pushf
mov
pop
ficompl
sbb
pop
cmp
xor
inc
push
in
mov
lods
add
test
push
adc
fisubrs
mov
loop
dec
clc
pop
popa
in
inc
loop
inc
rol
sub
dec
ret
sti
adcl
fiadds
pushf
cmp
sub
mov
mov
jg
call
cmp
lret
aas
jb
dec
call
sbb
mov
mov
cltd
test
or
insl
fidivl
mov
push
adc
inc
scas
lods
or
loope
mov
in
push
ret
cmp
pop
pop
mov
insb
add
es
js
popf
mov
dec
test
les
push
ret
test
movsl
sarb
dec
jecxz
jmp
mov
rcrb
mov
push
cld
sahf
push
idivl
cmp
popa
leave
adcb
sbb
fadd
xor
adc
cmp
ret
sarb
shrl
adc
xchg
es
adc
cmp
mov
dec
xlat
mov
lea
and
leave
daa
xor
scas
popa
test
out
pop
xchg
push
insl
out
mov
push
in
fldcw
push
jmp
int3
xlat
insl
ret
loop
lea
pop
mov
mov
inc
mov
fldenv
jmp
push
xlat
cs
sub
cmpl
outsb
inc
sbb
push
dec
fwait
imul
cwtl
push
push
inc
js
add
shrw
int
pop
jne
xor
fidivrs
and
ds
jecxz
shr
adc
or
xor
mov
sarb
jne
or
ja
xchg
shll
inc
xor
sahf
mov
add
push
adc
mov
into
push
add
sarb
xchg
push
bound
add
xchg
inc
adcb
and
adc
dec
frndint
fs
mov
test
cli
sahf
test
sub
sub
mov
les
xchg
pusha
xlat
xor
nop
out
and
xorb
arpl
adc
dec
push
jbe
and
stos
outsb
div
push
repz
inc
dec
dec
call
sub
push
stos
jnp
cmp
les
in
mov
or
dec
push
sbb
jg
inc
push
lret
enter
mov
jae
mov
gs
dec
mov
mov
sub
loope
mov
dec
and
out
inc
xchg
dec
lea
sbb
xor
xchg
imul
xchg
and
in
in
dec
flds
push
and
test
repz
pop
pop
cmp
and
lock
jmp
add
sub
cmp
push
rcrb
call
imul
push
dec
std
arpl
leave
sbb
xchg
addr16
int
jae
or
test
sub
arpl
xor
adc
mov
push
sarb
popa
out
xchg
adc
aas
sub
aas
xor
pop
push
int
xchg
pop
jmp
cmp
jge
imul
or
and
xchg
and
xchg
mov
loopne
popa
lods
xchg
push
pop
pop
ret
xlat
jo
gs
fstpt
bound
push
cmpsl
dec
out
lea
ffreep
mov
adc
cld
mov
rolb
lret
xchg
push
clc
arpl
mov
orl
ds
loopne
bound
daa
adc
inc
push
lods
pop
ds
movsb
sbb
push
adc
cwtl
fisubrl
adc
jecxz
pop
push
push
pop
adc
and
cmp
es
fwait
out
shr
outsb
push
adc
xlat
clc
mov
add
xchg
mov
ds
repnz
xchg
adc
out
cmp
mov
xchg
andb
bound
fcoml
lods
pop
mov
dec
ror
mov
dec
xchg
andb
popa
andl
dec
loopne
add
mov
xor
lahf
dec
push
sbb
xchg
in
or
cmp
fsts
xchg
xor
sub
hlt
xchg
pop
aad
lret
and
or
out
js
repnz
fcomps
lret
mov
out
sbb
in
pushf
sub
push
repz
adc
dec
add
out
popf
dec
insl
mov
and
cltd
daa
imul
dec
nop
cs
push
adc
or
dec
xchg
pop
out
cmp
sbb
sub
das
sbb
mov
inc
jmp
mov
mov
in
aam
push
mov
jb
mov
jne
jnp
scas
je
or
adc
mov
test
sarb
in
lock
loop,pt
pop
or
pop
sbb
mov
scas
sbb
outsb
push
adc
nop
cmc
daa
in
adc
push
sub
xor
and
movsl
cwtl
sahf
call
call
dec
shr
aaa
outsb
jo
mov
cmp
sbb
ljmp
inc
ret
mov
push
pop
push
outsb
rcr
out
ret
mov
lret
mov
dec
mov
jb
fdivrp
xchg
in
xchg
fiadds
in
bound
mov
pusha
or
or
scas
add
adc
mov
jp
push
into
xor
jge
xchg
test
dec
jb
mov
inc
add
mov
cmp
jbe
mov
adc
lods
inc
xchg
xchg
push
ljmp
fwait
and
xor
out
cwtl
and
cli
mov
pop
mov
adc
sub
mov
scas
mov
jl
and
cmp
mov
inc
lcall
test
in
pop
mov
mov
orb
jns
pop
ret
jns
xor
adc
ret
inc
dec
popa
sarb
stc
sti
cmp
cwtl
stc
fdivrs
sub
mov
fwait
insb
xorl
stos
test
aad
mov
stos
jecxz
mov
insb
cmp
stc
and
inc
stos
leave
mov
mov
sbb
dec
fucomi
cmp
insl
mov
inc
test
xchg
cmp
dec
cld
imul
mov
sbb
test
sub
insl
es
or
or
cltd
dec
addl
ss
xor
xchg
scas
xor
and
nop
mov
inc
jne
jecxz
xor
sub
test
fstcw
mov
sbb
pop
stc
push
mov
and
and
jb
push
ljmp
fcom
std
jmp
xchg
sub
add
fldl
mov
add
popf
jae
pop
fiadds
inc
fnstcw
test
dec
xchg
sub
mov
jecxz
mov
fisttpl
xchg
adc
pop
shrb
jb
pop
xchg
mov
out
jns
lock
roll
mov
fidivrl
and
sub
lahf
cmp
pop
jp
loop
xchg
mov
xchg
adc
test
xchg
mov
out
js
hlt
lahf
shlb
nop
and
pop
or
es
daa
dec
out
lea
xchg
shlb
fpatan
xlat
andb
cmp
add
dec
push
cli
pusha
es
pop
and
adc
repz
or
and
xchg
and
xchg
mov
loopne
popa
lods
xchg
push
push
pop
inc
lret
jo
cmp
rcrl
cmpsb
pop
pop
sub
movsb
cmp
arpl
loopne
pop
insl
fidivl
mov
cmp
dec
mov
sub
or
loopne
push
test
dec
xchg
and
adc
mull
in
ds
ficomps
cs
std
mov
scas
fnstenv
mov
andl
je
leave
out
inc
xor
leave
sarl
cmp
sbbb
mov
pop
outsb
push
mov
insb
xor
adc
or
cmp
fsts
out
cmp
push
rcrb
test
lahf
xchg
add
dec
xchg
push
outsb
sub
shl
push
ret
push
rclb
stc
mov
fdivrl
jne
cmc
jp
cmc
fs
out
cmp
fdivl
ljmp
mov
mov
push
bound
push
mov
lds
xor
jge
fldenv
arpl
testl
dec
lods
sbb
test
sti
pop
mov
cmp
aad
lods
ficoms
leave
insl
adc
push
or
scas
sbb
and
jg
inc
js
dec
sahf
mov
jmp
pop
pop
das
fiaddl
cs
sbb
out
pop
lock
ljmp
sub
arpl
mov
aad
mov
hlt
mov
lods
or
lods
ss
jl
repz
ret
push
out
into
lds
or
push
and
test
pop
mov
mov
xlat
mov
into
frstor
in
push
push
inc
lret
jnp
lret
sub
mov
sub
mov
mov
aam
dec
mov
inc
add
lret
cmp
cmp
mov
movsl
inc
std
pop
cli
mov
shll
andb
shll
pop
jno
dec
and
mov
scas
out
jbe
mov
xchg
cmp
das
sbb
stc
and
xchg
pop
ljmp
mov
iret
or
pushf
push
sub
movsb
xlat
mov
adc
cmp
repz
jg
push
mov
mov
push
adc
loopne
sub
cmp
movsb
push
jo
repnz
cli
fdivrs
adc
pop
pop
adc
movsl
sub
loop
adc
adc
addl
int
jne
pusha
mov
popf
xor
and
outsl
push
inc
mov
test
xchg
adc
lods
mov
mov
imul
mov
stos
mov
mov
pop
rclb
stos
in
or
jp
mov
out
inc
loop
sub
pop
out
out
dec
imul
loopne
push
cmp
push
je
and
mov
push
jno
int
iret
cmpb
xchg
dec
mov
pshufw
stos
repnz
jnp
ficompl
sbb
push
sahf
pop
ljmp
xor
jne
push
or
test
shrb
ret
movsb
fstp
fisttpl
inc
pop
insl
sbb
fistl
xchg
sub
sbb
lods
xchg
jmp
cmp
sahf
mov
nop
test
shll
repz
pushf
es
out
test
jmp
dec
xchg
and
sub
ds
daa
adc
sbb
into
repz
loop
lods
pop
mov
adc
loopne
push
dec
xorl
movsb
dec
out
clc
pop
add
mov
shrb
xchg
scas
xchg
jns
jns
fisttpl
repnz
rorb
push
mov
mov
je
fistpl
or
pop
je
aas
cld
mov
nop
push
ljmp
and
ds
out
mov
imul
xor
leave
cmp
push
aam
lods
popa
jmp
mov
xor
cmp
pop
pop
sarl
cmp
add
out
out
scas
dec
xchg
mov
cmp
pop
leave
sbb
pop
ljmp
fs
jecxz
aaa
out
scas
dec
xchg
scas
mov
les
clc
adc
movsl
sub
push
imul
out
scas
dec
xchg
scas
cmpsb
xchg
scas
mov
mov
repz
ja
pop
inc
or
sub
cmpsl
xchg
scas
mov
hlt
inc
xchg
sub
popf
mov
inc
dec
rcrl
sub
jge
jecxz
inc
movsb
inc
xchg
daa
ss
mov
std
mov
out
sub
and
jl
fists
sbb
inc
jb
xchg
and
scas
int3
js
mov
addb
xchg
jmp
outsb
sub
insb
xor
cmpsl
inc
fwait
pop
inc
jo
xorl
sub
int
and
pop
jp
xor
outsb
pusha
add
push
cmp
jbe
push
adc
pop
pop
stc
jecxz
adcb
or
adc
pusha
notl
call
and
insb
adc
mov
jmp
cmp
mov
imul
pop
xor
sub
hlt
ljmp
dec
jg
in
cmpsl
dec
sbb
movsl
clc
adc
scas
inc
xchg
daa
dec
xchg
jge
push
jg
dec
sbb
dec
mov
sbb
scas
mov
es
int
aaa
xchg
jg
and
sahf
bound
fs
push
inc
xchg
push
xchg
test
mov
enter
push
push
push
xor
fcomps
ljmp
movsb
arpl
pop
paddd
stc
out
and
rolb
push
mov
push
nop
or
sbb
xchg
and
xchg
imulb
dec
fldl
scas
sub
pusha
sbb
outsb
mov
and
aam
sti
mov
cmp
cmpl
adc
mov
lahf
je
iret
inc
ret
rep
mov
stos
inc
sti
sbb
das
pushf
push
mov
scas
std
inc
fidivrs
fistpll
cwtl
push
add
xchg
jl
and
stos
xor
adc
cmp
add
and
mov
and
fdivl
ds
pop
inc
sub
sarl
sar
mov
adc
or
loopne
add
cld
mov
adc
ds
test
insb
pop
push
jno
xchg
pop
xor
clc
add
out
js
push
xor
push
stc
push
cs
lea
pop
mov
int3
adc
push
lret
ljmp
or
ds
in
cmp
and
dec
inc
xlat
in
testl
cmc
mov
repnz
xchg
adc
fistpl
popf
scas
cltd
mov
inc
loope
in
mov
movsl
lret
mov
rcr
fidivs
leave
adc
mov
movsb
lret
test
dec
pop
lret
mov
dec
xchg
ds
ljmp
mov
aad
sbb
dec
mov
out
pop
xor
pop
out
xlat
and
out
pop
pop
ja
xchg
mov
push
loope
pop
mov
outsl
jmp
xlat
clc
addr16
test
cltd
mov
imul
adc
int3
mov
xor
imul
push
adc
jle
fidivl
lods
stc
sarb
fwait
jecxz
arpl
das
mov
mov
xchg
mov
sub
adcb
xchg
mov
fistps
sub
jbe
mov
out
push
cmpsl
dec
mov
ljmp
subl
dec
loopne
adc
adc
hlt
lahf
stc
pop
leave
fdivrs
xchg
sub
add
hlt
fmul
rcr
sbb
sub
imul
push
aas
mov
lea
mov
push
mov
cmp
add
mov
aaa
cmpsb
out
insl
lods
xchg
push
pop
cmp
mov
inc
out
add
inc
ret
dec
xchg
and
icebp
xor
pop
jmp
and
lret
jo
mov
pop
loope
pop
sub
xchg
pop
ja
scas
mov
xchg
sbb
push
adc
xchg
bound
in
adc
insb
mov
fdivs
push
adc
sub
and
lods
movsb
mov
stos
pop
mov
in
flds
push
adc
mov
xchg
dec
inc
popa
xor
mov
fistpll
adc
xor
or
push
mov
inc
jb
stos
stc
test
out
mov
pop
jne
mov
sub
push
xor
xor
xor
push
outsb
lret
xchg
out
push
mov
in
xchg
mov
push
cs
xlat
ljmp
lods
inc
push
adc
daa
inc
push
adc
push
jl
call
nop
incl
xor
into
lahf
push
jno
lret
sbb
icebp
sbb
mov
fisubl
xchg
adc
sbb
into
inc
rcrb
jae
mov
xchg
out
cmpsb
dec
sub
lret
and
jns
in
sarb
popa
pop
jmp
adc
and
dec
sub
lcall
sub
cmpsl
jns
dec
aam
pop
adc
ljmp
leave
jnp
xchg
push
mov
push
addr16
ds
pop
int3
out
adc
sub
scas
sbb
insb
sbb
pop
add
aam
scas
sbb
pop
sbb
jge
out
pop
adc
jecxz
dec
ljmp
inc
loope
in
xlat
imull
xor
jle
loopne
pop
cli
pop
adc
cmp
jecxz
mov
mov
xchg
ja
xlat
mov
sahf
ja
add
sub
nop
mov
xchg
adc
xor
jbe
push
repz
ret
stos
push
lock
jmp
push
in
adc
aas
imul
or
and
adc
call
imul
jg
dec
dec
jnp
test
fadd
orb
mov
cmpsb
sub
pop
inc
sbb
shlb
shr
jb
inc
imul
pop
test
dec
cld
inc
enter
repnz
imul
repnz
cli
push
and
or
stc
and
in
test
inc
xchg
fs
mov
xor
or
xor
and
mov
adc
mov
jmp
stos
push
out
ja
or
mov
xchg
add
cmpsb
mov
adc
fistpll
das
lods
movsb
out
adc
in
fyl2x
out
in
lods
cmp
pop
jae
cmp
mov
xor
fidivl
push
flds
jbe
in
lea
ss
sbb
adcb
pusha
test
insl
push
dec
call
mov
cld
push
cmp
adc
xor
lods
xlat
outsl
pop
in
pop
cmp
pmulhuw
dec
call
arpl
ret
cmp
ret
jbe
fdivs
and
push
aad
lret
lea
ss
push
clc
fwait
lea
add
fs
mov
pop
ja
xor
mov
push
adc
cmp
ds
es
mov
cmp
fistpll
fisubs
push
mov
jo
push
idivb
jmp
cmp
ret
scas
in
scas
out
stos
in
test
loope
lea
loopne
sub
repz
pop
out
imul
cmp
out
daa
push
ljmp
imulb
pop
jmp
ss
sub
lock
mulb
pop
xlat
adc
arpl
nop
inc
gs
repz
xchg
adc
subl
and
mov
xchg
inc
xor
das
int3
mov
rclb
xlat
lods
pop
mov
adc
add
out
xchg
pusha
push
icebp
push
scas
shl
fs
int
mov
frstor
mov
idivb
lock
cmc
jl
ljmp
sub
xchg
sbb
pop
jb
dec
xchg
push
hlt
pop
push
icebp
pop
pop
out
imul
std
or
jmp
sub
sahf
fdivr
pop
push
out
xor
xchg
xor
nop
xor
xchg
xor
xchg
sub
icebp
lods
fimuls
roll
cli
stc
sub
inc
shll
lds
sub
push
fldenv
rcll
mov
mov
add
fwait
jno
inc
or
inc
cwtl
push
sbb
rcr
mov
enter
sbb
cwtl
loop
inc
and
mov
sbb
cs
repz
add
sbb
lods
mov
pusha
dec
sbb
sbb
loopne
vshufps
insb
pop
pop
sub
mov
jecxz
int3
stos
or
dec
sbb
mov
std
xchg
sbbl
pop
int3
out
fisubrl
fwait
int
das
jge
pop
pop
bound
enter
add
ja
xor
jne
inc
xor
cmpb
mov
roll
enter
pop
cli
cmp
js
adc
mov
out
mov
popf
push
sub
cltd
mov
add
xchg
and
data16
mov
mov
adc
xchg
lock
dec
push
lret
adc
dec
jnp
sahf
sub
ficoms
pop
outsb
mov
mov
xor
sahf
lock
sti
and
mov
jp
fdivrs
js
xor
out
pop
fwait
jnp
sbbl
scas
pop
mov
pushf
or
xchg
or
jb
popa
lock
push
add
shrl
inc
repnz
test
lds
pop
addr16
add
sbb
xor
jecxz
loope
cmp
mov
sub
pcmpeqw
or
loopne
and
sbb
add
push
or
or
adc
mov
andb
dec
pop
sarb
pop
aas
test
sub
inc
lret
maxps
pop
js
cmp
push
cli
dec
push
cmp
aad
jmp
jmp
mov
arpl
adc
xchg
and
aam
mov
xchg
mov
or
js
movsb
leave
out
pushf
or
push
sub
mov
adc
mov
push
xchg
xchg
outsl
in
mov
outsb
add
and
add
dec
inc
repz
push
scas
test
mov
mov
neg
mov
xchg
mov
mov
fisubs
enter
es
hlt
dec
movsl
dec
call
in
add
dec
ljmp
dec
push
data16
movsl
shlb
mov
jge
js
sbb
xchg
sub
or
inc
js
dec
sbb
lahf
sub
shrb
mov
push
movsl
loopne
add
dec
pop
lds
into
in
mov
rep
aas
jb
mov
and
lds
frstor
lods
dec
pushf
cmp
mov
mov
imul
pop
loop
lods
pop
cmp
lock
repnz
cmp
icebp
push
cmpsb
ds
test
mov
and
aas
mov
test
sub
loopne
popf
xchg
jnp
mov
push
xor
dec
loopne
imul
outsb
lock
cmp
xor
sub
out
imul
mov
es
xchg
sbb
sahf
cwtl
adcb
test
xchg
and
test
jmp
out
push
std
aam
or
daa
fildll
inc
xchg
and
push
lods
mov
rol
mov
push
mov
in
sub
dec
xchg
lods
movsl
out
mov
addl
fwait
ds
pop
test
fimuls
inc
gs
xchg
sub
cmp
xchg
and
and
leave
adcb
cmp
push
subb
bound
push
adc
and
movsl
sarb
in
iret
test
push
and
in
sahf
dec
pop
add
dec
mov
fisttpl
daa
jp
adc
push
sbb
test
sbb
mov
or
bound
jmp
ffreep
cli
leave
ds
call
int
lods
pop
aaa
sti
cmc
push
in
pop
enter
sub
jno
inc
push
mull
dec
mov
xchg
adc
jp
dec
dec
lods
xchg
int
mov
stc
dec
cmp
xor
pop
mov
notb
and
and
xchg
and
add
mov
ds
outsb
mov
scas
fcom
mov
mov
aam
push
out
push
push
imul
push
shrb
stos
jne
test
stos
jne
leave
test
xor
jae
sub
mov
scas
aad
cmpsb
adc
cmc
insb
add
mov
xor
and
addr16
lcall
pop
fisttpl
loope
fdivl
dec
adc
iret
andb
fnstenv
adc
or
mov
mov
int3
cltd
and
test
lahf
sub
sbb
inc
cltd
xor
cmpsl
inc
xchg
and
mov
inc
sarl
sub
lods
jbe
es
es
jmp
cmpsl
fcmovnu
icebp
mov
or
adc
mov
aas
lock
stc
orl
shlb
adc
and
jmp
xchg
xchg
stos
pop
sbbb
repnz
push
ror
and
lret
gs
or
bnd
sub
pop
pop
jo
dec
jbe
pop
jmp
dec
std
out
ja
lahf
xchg
jp
repnz
mov
and
es
fisubrs
and
lahf
sub
imul
xor
subb
or
cmp
inc
sub
iret
lds
stos
push
sbb
inc
pop
in
es
in
lret
inc
cmp
pop
in
fistps
push
icebp
inc
mov
or
aas
loopne
xor
flds
sbb
insl
and
cmp
shll
push
cmpsl
fsubs
mov
pop
mov
pop
stos
mov
mov
push
shlb
sbb
mov
push
sub
repz
xchg
mov
imul
xlat
mov
sahf
xchg
outsl
andb
cmp
dec
pop
mov
rolb
mov
call
xor
push
adc
jl
pop
loopne
xchg
push
data16
loop
mov
sub
rcll
out
xchg
test
dec
loopne
mov
mov
sub
sar
cltd
test
xlat
mov
lods
xchg
jae
xor
pop
jl
pop
in
test
or
pushf
push
rcrl
vmovapd
xlat
imul
outsb
ds
mov
cmp
shlb
adc
mov
cmp
dec
cmpsl
dec
call
stos
test
loop
lods
pop
mov
lea
insl
push
sti
xorl
add
pop
pop
leave
push
push
pop
loopne
movsl
or
push
ret
aas
imul
push
lock
cmp
xchg
and
sbb
lods
nop
mov
cmp
iret
mov
push
pop
cmp
fldenv
daa
xchg
scas
mov
cmp
sub
jae
adc
mov
sub
rcrw
sar
cwtl
push
lret
movsb
mov
adc
data16
shlb
xchg
sub
call
push
mov
adc
and
lock
loopne
adc
sbb
and
dec
out
and
mov
fwait
lods
mov
mov
lods
scas
sub
push
icebp
push
repnz
xor
jp
aas
or
push
stc
mov
andl
lahf
lods
cmp
pop
fnstcw
jne
and
lds
mov
mov
mov
xor
mov
lea
xchg
jae
jl
in
cmpsb
pop
clc
lods
cwtl
std
cmp
fnstenv
pushf
int
xchg
in
mov
add
adc
scas
mov
int3
inc
outsb
push
push
rcl
test
out
ss
sarb
push
es
pop
int3
jo
decb
iret
pop
push
addr16
lds
dec
popa
rolb
loop
into
aad
data16
in
push
xchg
mov
mov
int
jge
jl
fbstp
pop
add
xor
mov
sub
les
fcmove
xlat
add
fnsave
outsb
push
mov
ljmp
orb
and
ljmp
out
mov
xor
add
fdivp
lret
mov
jmp
xor
cmp
dec
bound
mov
jl
adc
xor
fiadds
xor
fildll
sbb
mov
dec
out
inc
rep
cwtl
mov
mov
sti
lea
jmp
ss
jne
adc
push
mov
and
sbb
test
jns
lock
or
movsl
je
es
ds
aad
rol
fisubrl
out
repnz
int3
mov
add
xor
and
dec
out
repz
rorb
clc
out
pop
sbb
inc
loopne
xchg
ficoms
push
mov
bound
loop
shl
dec
stc
jecxz
lret
mov
push
cld
and
scas
cmp
pop
inc
inc
inc
jle
imul
or
and
ret
mov
popf
adc
adc
mov
sbb
mov
rsqrtps
push
repz
test
pop
mov
push
mov
and
andl
ss
jp
cmp
jbe
and
sbb
cmp
ret
ret
mov
leave
xchg
and
dec
dec
sbb
sbb
pop
push
xor
arpl
js
out
lea
mov
fcmovbe
cmp
arpl
pop
xor
call
xchg
mov
mov
xchg
jle
push
std
arpl
push
ds
loopne
pop
cmp
dec
call
xor
pop
call
push
cs
and
xchg
scas
mov
cmp
xor
xchg
push
mov
xchg
mov
and
popa
xor
nop
shl
imul
xor
mov
xchg
jbe
pop
inc
shl
popa
loop
gs
mov
les
mov
leave
sbb
pop
xchg
cmp
ss
lock
push
and
repz
cld
xchg
cmp
adc
ret
cmp
es
cmpsb
in
dec
sbb
aas
and
and
adcl
dec
xchg
push
imul
fs
xchg
push
clc
lahf
pop
jmp
mov
aaa
insb
adc
pop
inc
fcomps
pop
jmp
xchg
cmp
jo
jae
mov
test
cmp
xor
xchg
sarb
xchg
mov
dec
ret
and
cmp
shll
mov
pop
xor
dec
xchg
pop
jne
push
incl
xchg
negl
mov
int
adc
pop
and
inc
popf
sub
jbe
iret
jb
int3
pusha
es
test
je
and
lea
jl
jbe
inc
icebp
leave
mov
and
xchg
or
adc
std
xorl
adcb
stos
pushf
sub
push
insl
rcrl
pop
outsb
les
ja
pop
push
mov
xor
insb
repz
fwait
aaa
in
pop
mov
pop
mov
lahf
ja
popf
sbb
pop
inc
pop
aas
xchg
aad
pop
aas
cltd
iret
imul
jp
mov
ds
rcrl
dec
jns
dec
imul
clc
shrl
or
call
adc
and
dec
xchg
jl
xchg
scas
jecxz
mov
mov
adcb
bound
adc
mov
push
sbb
mov
adc
repnz
cmp
pop
fld
and
lds
int3
pushf
arpl
pop
and
jns
xchg
or
icebp
xor
push
std
decl
fildl
sub
in
inc
pushl
outsb
adc
popf
push
cmp
pop
loopne
inc
into
stos
sub
jl
jo
int
icebp
mov
lcall
xor
dec
inc
cmp
dec
mov
mov
repnz
inc
inc
jnp
xor
or
jo
lcall
rcll
shrb
push
jecxz
push
imul
mov
push
cmovne
dec
mov
dec
stos
dec
jl
ss
mov
xchg
dec
lea
popf
push
rorb
xchg
rorb
lock
jns
sahf
out
inc
jns
xchg
jo
in
imul
lods
arpl
add
shl
fmul
call
fisttpll
out
jae
mov
pop
add
test
push
loope
pop
leave
mov
test
int
ret
fdivs
push
mov
lahf
and
in
data16
std
repz
mov
rorb
ldmxcsr
dec
adc
ret
inc
shrb
pop
movsb
leave
adc
cmp
cmp
inc
cmp
gs
subl
mov
and
popa
xor
and
shl
imul
xor
mov
xchg
jbe
and
rclb
adc
es
sub
cwtl
fidivrl
jno
mov
movsl
sarb
movsb
ret
popa
push
imul
pop
in
cmp
loop
push
es
pop
xchg
sub
sahf
xchg
out
mov
dec
out
inc
out
mov
mov
movb
ss
es
lods
cmp
out
stos
push
sbb
sbb
jnp
in
push
into
cmovge
in
mov
cmp
and
scas
xchg
scas
cmpsb
in
dec
sbb
cmp
shlb
adcl
in
lea
dec
out
pop
xchg
loopne
pop
test
sub
in
jns
sarb
xor
push
mov
lods
mov
in
dec
push
fiadds
pushf
cmp
pop
ds
push
xchg
adcb
mov
nop
mov
xlat
out
aas
and
daa
pushf
subb
into
cmp
sub
dec
cmp
shlb
mov
xchg
cmpsb
in
movsl
out
inc
or
cmp
mov
sti
cmp
cmp
xchg
sub
mov
scas
cmpsl
xchg
scas
mov
dec
lahf
cmp
adc
sbb
dec
push
rcll
dec
sbb
xchg
daa
pop
loop
sarb
js
ficoml
sub
xchg
loope
sub
sub
aad
xor
aaa
xor
or
out
and
and
in
lods
push
faddp
push
pop
sub
out
out
lods
xchg
xor
lea
stc
test
sahf
cwtl
push
lea
dec
das
jne
sub
les
adc
inc
jle
inc
bound
out
pop
push
out
add
stc
push
insl
stc
pop
insb
cli
pop
pusha
pop
movsb
xor
ljmp
pop
push
sti
mov
pop
dec
stc
mov
sub
sbb
pop
das
cmp
loope
ret
jmp
mov
test
and
fsubp
inc
int3
jo
sub
and
js
push
lcall
xor
jge
sub
or
xor
and
call
xor
cmpsl
jo
xor
mov
sbb
in
test
mov
fstp
adc
pop
xchg
cmp
pushf
or
xchg
add
pushf
pop
xchg
sti
lods
push
xchg
insb
mov
aam
mov
adc
in
bound
sbb
xor
adc
wbinvd
jae
lahf
mov
test
outsb
push
rclb
adc
xor
fidivl
sbb
push
add
pop
stos
aas
mov
sahf
cli
pop
xor
mov
mov
lcall
adc
mov
outsl
inc
mov
pop
jne
imul
or
stc
or
adc
mov
or
and
leave
pop
aaa
mov
scas
or
xor
sbb
push
sbb
xor
insl
jb
xchg
cmp
inc
out
setno
adc
test
mov
mov
push
das
cltd
xchg
xchg
push
pop
scas
es
ficoml
xor
movsb
pop
incb
test
aad
in
dec
mov
pop
jge
pop
jge
pop
jae
and
sub
pop
and
inc
outsb
aad
mov
pop
cltd
adc
movsl
inc
sub
xchg
jnp
sbb
dec
movsl
pop
leave
aaa
xor
lds
aad
ret
fisttpl
push
mov
stos
pop
movsl
and
in
mov
cs
loop
sbb
sub
fwait
cmp
mov
add
push
outsl
fs
mov
xchg
and
mov
es
cs
out
aas
or
dec
sbb
cmp
pop
fcompl
into
add
cmp
xchg
movsl
out
jno
in
ficoms
dec
out
cmpsb
out
pop
xchg
loopne
imul
aam
jb
fidivrl
jno
mov
movsl
shlb
or
sarl
sbb
cmp
fisubl
je
leave
out
push
xchg
out
mov
add
sub
sti
cltd
push
repz
or
imul
pop
ljmp
adc
dec
lods
pop
ss
decb
sbb
cmp
ret
dec
pop
mov
xchg
jle
mov
sbb
and
ret
pop
dec
rcpps
popa
test
insb
xchg
sub
popf
mov
out
aaa
mov
dec
push
and
add
ds
mov
lock
std
mov
xchg
and
out
cmpsb
out
push
xchg
out
jo
int3
dec
cs
lods
leave
xchg
pop
pop
jg
imul
inc
aas
pop
mov
sarl
sbb
and
pushf
repnz
mov
stc
jbe
pop
in
dec
xchg
push
cli
cwtl
push
repnz
push
pop
mov
aad
testb
sbb
sub
bound
jecxz
mov
fistps
cs
movsb
cmp
cmp
inc
loope
xchg
mov
dec
sub
ss
fnstsw
rcrb
dec
xchg
mov
pop
push
loopne
sub
cmpsl
popa
pop
ss
adc
das
leave
mov
aad
bound
pop
adc
sub
aaa
repnz
int3
inc
divl
inc
test
cmp
mov
push
daa
add
in
fildll
in
pop
sbb
mov
add
inc
mov
movsb
cli
jmpw
xchg
aam
ljmp
sub
aaa
sti
add
inc
pop
mov
fnstenv
iret
insl
repnz
push
arpl
dec
xchg
scas
xchg
shll
xchg
outsb
fdivs
aad
dec
jge
ret
sbb
push
imul
pop
ret
adc
mov
fdivl
cs
shll
lods
mov
cmp
rcrb
out
mov
into
rcl
or
fs
pop
outsb
cli
xlat
add
bound
inc
stos
add
ja
fidivs
inc
test
lds
adc
aaa
cld
inc
fwait
movb
lods
sbb
push
pop
mov
cmpsl
xchg
cltd
jne
push
jp
mov
cmpsl
xchg
in
jb
or
mov
pop
xor
in
push
mov
sbb
int3
outsb
pushf
mov
enter
jmp
mov
adc
lods
test
push
adc
cmpsb
inc
lahf
sub
or
pop
test
ds
stos
dec
into
mov
pusha
sahf
mov
push
aas
push
mov
add
dec
mov
rolb
movsl
mov
lret
jns
lahf
xchg
pop
pop
adc
fwait
nop
xchg
adc
mov
shr
xor
pop
jns
and
inc
aas
lret
mov
aad
adc
xchg
insb
out
addl
xor
clc
adc
je
sub
mov
inc
syscall
mov
jecxz
add
stc
and
test
ljmp
int
fdivl
imul
ss
stos
sbb
push
ja
xor
pop
in
or
sbb
fisubrl
xlat
test
stos
push
out
jp
in
scas
jecxz
inc
movsb
jne
push
push
and
push
sti
push
cmp
cmp
les
in
pop
mov
inc
adc
lds
movb
es
mov
cwtl
movsl
mov
mov
xchg
lods
mov
and
adc
mov
int
cmp
notb
sahf
movsl
ds
lods
fcoml
cmp
outsb
inc
pop
lahf
cmp
pop
sub
push
cmp
push
xor
xor
mov
test
lea
addr16
lret
in
cld
xor
enter
rclb
and
push
push
cmp
sbb
ds
xchg
cmp
mov
out
adc
insb
test
jb
jae
pop
std
sub
inc
inc
pop
sub
lods
pop
das
lcall
mov
outsb
mov
mov
mov
dec
dec
fldenv
mov
jmp
ss
fdiv
popa
lea
dec
xlat
lods
pop
ss
fistpll
xor
lods
adc
ss
xchg
mov
out
lock
mov
fstpt
and
pop
hlt
inc
push
cmpsl
cmp
fidivs
lods
xchg
push
push
shll
mov
cmp
into
in
pop
loop
pop
outsl
loop
sbb
jle
leave
mov
das
imul
cli
js
sbb
and
cmpb
sahf
lock
mov
sub
dec
cmp
adcl
xchg
daa
dec
sbb
cmp
mov
mov
popf
notl
mov
xchg
shl
xchg
cs
or
jp
ds
mov
adc
inc
cmovo
popf
sub
lods
mov
fcomip
inc
out
jb
faddl
rcll
pop
test
xor
adc
fstps
pop
subl
dec
paddusw
push
and
int3
cltd
pop
push
xor
adc
xchg
insl
lcall
mov
xchg
fldcw
bound
insb
cwtl
mov
mov
mov
xor
shlb
cld
sub
and
sbb
mov
movsb
lret
cwtl
in
into
push
pextrw
mov
ss
xchg
jecxz
pushf
pop
push
sub
sub
rcr
sbb
jo
inc
mov
subl
cld
mov
adc
imul
pop
mov
sub
cld
mov
adc
push
loopne
push
dec
jae
mov
stos
andl
mov
cmp
aaa
mov
stos
fcmovu
rol
stos
jae
xchg
test
test
imul
jecxz
cld
lods
scas
in
xchg
cmp
test
push
ljmp
jp
mov
out
and
sub
xlat
jbe
imul
add
ss
or
sub
insb
fsubr
arpl
pop
dec
sbb
pop
jecxz
aam
sub
and
pop
push
repnz
mov
push
jl
loopne
and
push
sub
std
sbb
cmp
mov
sbb
and
test
movsb
adc
out
loopne
out
jnp
dec
das
loope
movsb
mov
xchg
pop
mov
dec
imul
add
lret
and
cmp
fnstenv
sti
mov
bound
loopne
cld
pop
adc
add
pop
adc
stc
int
cmp
out
jns
icebp
xor
and
loop
ss
cs
mov
out
in
pop
xor
mov
repz
adc
addr16
push
jecxz
jbe
mov
shrl
xchg
test
and
adc
notb
repz
xchg
repz
in
push
dec
clc
out
test
pop
mov
xlat
js
nop
push
leave
daa
leave
mov
push
adc
bound
pop
jb
andl
loopne
pop
cmpsl
xor
xchg
pop
lret
fxch
ds
pop
cmp
data16
or
cmp
dec
and
scas
test
bound
loopne
out
mov
push
mov
dec
add
mov
adc
fwait
sub
dec
xchg
scas
stos
sar
mov
adc
xchg
ja
cmp
cmp
inc
cmp
add
xchg
aas
enter
and
test
xchg
sub
frstor
popf
cmp
faddp
mov
jle
xchg
test
sti
mov
pop
mov
dec
xchg
test
pop
cmp
push
jae
leave
stos
lahf
dec
bound
cli
mov
mov
pop
out
adc
test
icebp
inc
mov
ss
mov
addr16
sub
fwait
mov
fstpt
sub
jno
dec
ret
pop
mov
scas
mov
outsb
pop
in
pop
pop
outsb
pop
jbe
pop
lret
or
pop
cmp
push
fsubp
inc
jne
in
pop
scas
pop
mov
cld
mov
adc
xchg
sub
dec
sbb
movsl
xorl
mov
dec
xchg
sub
inc
or
mov
adc
leave
pop
das
ds
xchg
pop
ljmp
sti
in
int3
xchg
sub
pop
sarl
push
movsl
cmp
adc
and
xchg
sub
popf
xchg
jmp
xorb
mov
sub
push
or
outsl
push
cmp
repz
movl
jecxz
out
cs
gs
mov
push
jg
or
and
and
nop
xchg
ret
jge
adc
push
mov
pop
stos
xor
aad
adc
mov
aam
mov
mov
sub
xchg
popf
subb
lds
inc
ja
ss
les
test
lock
scas
pop
stc
pop
subb
gs
out
lds
xchg
adc
lcall
rorl
adc
cwtl
jg
mov
sub
dec
popa
push
adc
xor
push
cmp
pop
inc
add
mov
aad
divb
dec
test
outsb
fdivs
push
scas
pop
mov
js
pusha
and
sub
mov
lds
mov
lock
into
jne
xchg
data16
push
inc
xchg
movsb
jg
inc
popf
mov
addl
int3
push
ficoml
cmp
jnp
or
stos
and
rcll
push
add
cmp
lock
and
movsl
cmc
or
outsb
jno
sbb
push
nop
mov
push
adc
pop
xor
and
cmp
jmp
xor
mov
or
inc
and
es
cltd
mov
ficomps
pop
pop
pushf
sub
sbb
jns
loope
scas
sahf
mov
es
xor
mov
or
adc
cmove
push
cmp
aaa
addr16
jmp
xor
jg
adc
popa
dec
mov
xchg
push
push
cld
pop
fnstenv
fcmove
je
dec
jb
imul
mov
push
inc
xchg
pop
adc
push
and
in
adcb
loopne
adc
jo
outsb
mov
mov
sub
cmp
xchg
hlt
cld
pop
sub
stos
push
push
pop
dec
xor
mov
insb
pop
dec
daa
xchg
cmp
dec
dec
inc
gs
or
scas
xchg
xor
inc
test
lds
lods
xchg
cmp
xchg
xor
xchg
jae
push
mov
lds
pop
test
adc
mov
les
mov
roll
push
xchg
sub
fcomps
push
repz
int
sub
pop
mov
jno
mov
sub
mov
push
sub
jb
mov
mov
and
jae
sub
jb
pop
insb
push
cmp
sub
dec
pop
and
loopne
xor
lods
cmpl
and
scas
mov
mov
fistps
and
pop
outsb
push
clc
push
pop
lret
pop
ficomps
adc
stos
cli
ss
cmp
scas
repz
dec
sbb
loopne
xor
sub
lods
xchg
out
mov
sbb
cmp
add
insl
fstpt
and
pop
sub
loope
xor
call
fsts
fcmovb
movsb
in
xor
mov
dec
xchg
stc
es
leave
sbb
cmp
dec
inc
inc
push
xchg
sub
cld
mov
adc
and
sub
mov
dec
pushf
mov
movsb
cld
mov
adc
sbb
dec
jle
mov
add
adc
push
cmpsl
dec
push
gs
rcll
push
movsl
dec
cmp
push
sub
pop
jb
push
sti
jge
dec
cmp
das
mov
lret
xchg
mov
imul
dec
xchg
sub
dec
jns
sbb
out
xchg
sub
xchg
leave
xchg
es
jo
pusha
mov
loopne
push
sar
jle
lock
cmp
push
movsb
loope
mov
jbe
andb
cs
mov
and
mov
out
or
test
mov
aad
fldcw
sbb
push
aaa
push
mov
push
cltd
bound
pusha
xor
inc
push
adc
movb
sarb
stc
mov
cmp
mov
sbb
cmp
xchg
mov
bound
insl
fwait
add
add
jns
popa
bound
xchg
xor
pop
mov
popf
inc
jns
nop
pusha
lcall
fdivs
xchg
gs
popf
xchg
or
fwait
shll
or
push
cmpsb
adc
sub
daa
leave
mov
mov
test
mov
out
es
mov
stos
xchg
aam
sbb
lcall
dec
jle
into
push
sub
mov
aaa
jge
dec
fisubrl
lods
lock
aam
mov
inc
push
rcll
enter
rorb
mov
push
adc
es
mov
mov
dec
xchg
push
mov
pop
dec
aaa
dec
fdiv
sub
inc
pushf
jbe
xchg
xchg
scas
add
jne
sbb
icebp
sbb
movsl
push
fcmovnu
pushf
and
jbe
fs
sbb
push
push
test
cld
mov
and
dec
mov
xor
mov
in
sub
mov
sub
shl
add
outsl
inc
lock
xchg
sub
les
les
inc
insl
jb
inc
xor
inc
repz
in
sbbl
loopne
into
test
add
sbbl
and
movsl
test
xorl
int3
sarl
loop
and
sbbl
addr16
mov
cmp
mov
fistpl
stc
int
cmp
out
push
jns
icebp
xor
and
nop
scas
push
mov
out
mov
iret
push
rcl
adc
mov
sub
xor
stc
shlb
adc
outsb
cmp
push
arpl
sbb
cltd
sbb
push
xchg
sbb
sti
loopne
sahf
lcall
pop
stos
filds
inc
or
je
pop
adc
aas
mov
fdivp
cwtl
push
icebp
stos
outsb
ss
sub
sub
sbb
or
loopne
popa
adc
cmpsl
dec
out
push
fcomps
out
mov
fwait
push
cmpsl
mov
jmp
es
cmpb
call
out
xor
mov
push
cmp
jp
jb,pn
pop
mov
xor
mov
push
mov
es
ss
fisubrs
test
pop
gs
imulb
repz
into
jae
ficomps
and
data16
add
pop
mov
xchg
movsl
add
outsb
push
repz
sti
gs
lock
pop
jmp
fstl
mov
push
fnstenv
in
repz
ret
ret
outsb
loop
push
mov
leave
call
jmp
mov
into
fistps
sub
jbe
mov
jge
pop
call
fldcw
mov
mov
pop
pop
aam
pop
xor
push
clc
popa
xor
sub
jno
pushf
push
pop
es
subb
adc
fwait
mov
xor
pop
adc
pop
xor
gs
repnz
aas
add
mov
pop
jmp
xor
imulb
mov
push
test
mov
cmp
pop
adc
clc
mov
data16
sub
ds
pop
pop
fnstenv
pusha
lds
mov
sub
fwait
mov
dec
jmp
ret
jno
lock
testl
fisubrl
jb
addl
aad
jp
mov
mov
xchg
mov
mov
dec
jp
dec
and
push
fwait
pop
bound
xchg
jmp
mov
fisttpll
cmp
insb
push
adc
pushf
push
iret
inc
stos
adcl
test
mov
cli
xorl
jne
mov
adc
or
jb
out
aad
push
jmp
loope
scas
sbb
ljmp
imul
sub
push
ljmp
out
movsb
enter
push
sub
stos
andb
cmp
repz
test
pop
push
sub
cmpsl
adc
sbb
bnd
lcall
adc
inc
shrb
push
ret
cmc
jne
insb
lods
xchg
mov
loopne
pop
adc
pop
shrl
pop
lods
jbe
sub
enter
aaa
mov
ret
pop
pop
dec
pop
insl
jge
es
test
xchg
dec
sbb
push
adc
jbe
jne
xchg
mov
lret
add
roll
rcrl
cmp
js
adc
repz
mov
call
add
sahf
das
lahf
cltd
out
lret
cltd
loopne
jl
in
push
jb
je
mov
fmulp
fldcw
pop
data16
add
jmp
nop
aam
xlat
mov
loopne
test
cmp
xor
push
iret
fisubl
jg
sub
stc
ret
outsb
and
rcrl
mov
sub
scas
jo
icebp
push
xchg
or
sbb
push
shll
add
add
pop
in
sbb
mov
in
lahf
out
dec
cmpb
pop
pop
mov
mov
neg
in
mov
not
push
mov
loopne
add
lds
pop
test
outsl
ret
arpl
repz
jae
dec
fdivs
jae
jmp
imul
mov
lcall
pop
cmp
adc
jmp
sub
and
hlt
rcr
cltd
push
push
push
aad
sub
xor
push
pop
pop
cmp
jge
or
push
jl
sbb
push
inc
mov
push
in
fwait
xchg
xor
sub
pop
mull
sarl
or
cmp
push
sub
push
pop
cld
sub
pusha
dec
ss
adc
push
out
mov
cmp
sarb
cmp
xchg
fidivrl
out
push
cmpsl
dec
ljmp
dec
loopne
mov
cs
ljmp
xor
das
cltd
shll
dec
xchg
sub
out
xchg
and
xchg
scas
mov
sub
mov
movb
loopne,pt
in
xchg
sub
pop
inc
push
push
movsb
cmp
outsl
pop
das
push
dec
xchg
push
cmp
sub
pop
dec
test
mov
fmulp
sarl
cmp
push
mov
adc
adc
ss
adc
mov
jb
pop
mov
sarb
loope
push
out
xchg
and
mov
sbb
jb
imul
outsl
push
enter
push
cmc
movsb
dec
xchg
mov
and
pop
xlat
pop
cmp
mov
lock
and
popa
inc
fs
in
pop
mov
push
repz
ja
pop
xchg
push
lods
adc
ss
lods
pop
std
fs
adc
insl
xchg
mov
fidivrl
cs
daa
sbb
push
add
ds
mov
push
mov
push
sub
sbb
sbb
xchg
and
das
fbstp
mov
imul
dec
xchg
and
pop
pop
inc
push
cmp
xchg
fimull
mov
push
stos
xchg
xor
push
adc
subb
dec
sbb
cmpsb
aad
sbb
push
push
mov
fldcw
push
adc
dec
test
push
rcl
out
je
add
push
mov
mov
xchg
cmc
or
movsl
out
xchg
mov
ja
fcmovu
dec
js
mov
popf
rorb
push
out
add
aaa
int
ja
decb
sbb
ftst
adc
push
ret
out
pop
mov
sbb
pop
in
add
lea
add
sbb
push
mov
dec
sbb
stos
subl
mov
push
jmp
ljmp
lcall
jnp
sub
jno
outsb
stos
pop
and
mov
cmpsl
sub
fs
sbb
add
or
les
push
outsb
mov
and
in
in
cs
push
adc
les
pop
stos
inc
enter
int
das
adc
adc
push
aad
arpl
sub
mov
mov
andb
lds
iret
fildll
mov
add
add
daa
js
insl
mov
adc
push
std
mov
mov
mov
dec
clc
jecxz
mov
jmp
test
adc
xlat
jle
arpl
iret
imulb
out
mov
pop
mov
xor
fwait
dec
lahf
sub
xchg
jecxz
pop
fldl
xor
sti
cmp
push
fs
push
mov
xchg
inc
cwtl
pop
dec
mov
lods
mov
add
adc
int
inc
inc
loopne
inc
rorb
pop
lret
in
mov
movsb
outsb
inc
addr16
sbb
outsb
xchg
inc
test
movsl
cmp
lcall
inc
dec
fucomip
data16
dec
push
dec
push
sub
inc
loope
dec
lcall
push
ss
mov
loopne
add
xchg
adc
inc
loopne
xchg
inc
dec
xchg
cli
push
call
in
testl
add
data16
xchg
pop
adc
sarl
sub
out
addr16
push
push
les
mov
pop
ss
mov
int3
cmp
dec
loopne
and
es
jge
push
ror
out
repnz
sahf
dec
mov
cmp
mov
mov
sub
adc
push
mov
test
arpl
mov
pusha
xchg
movsl
mov
dec
fimuls
dec
xchg
push
inc
inc
ds
pop
enter
xchg
mov
fidivl
dec
pushf
dec
or
xchg
and
mov
cmc
sub
jb
mov
and
sub
mov
cmp
jnp
push
lock
test
arpl
pop
aaa
push
push
cmpsl
cmp
mov
in
in
dec
sbbl
xchg
and
sub
pop
stos
das
mov
call
loopne
mov
dec
xchg
push
inc
inc
cmp
mov
and
jb
sub
dec
xchg
leave
xchg
push
xor
sub
in
mov
imul
dec
out
pop
mov
jmp
repz
and
xlat
lock
pop
and
dec
xchg
pop
loope
pop
mov
jb
mov
sub
dec
sbbl
movsb
dec
out
lea
fwait
ret
jmp
xchg
arpl
mov
push
cmp
and
aam
xchg
pop
pop
jno
jb
mov
push
jbe
cmp
mov
sub
xor
sub
out
xchg
subl
and
aad
into
add
out
insb
loope
movsb
xlat
repnz
sahf
dec
jnp
lea
dec
ret
mov
cmp
dec
xchg
pop
and
add
xchg
daa
ds
loop
and
sub
xor
rorb
sbb
adc
xchg
mov
and
cmp
lods
outsb
inc
mov
fnstsw
and
xor
cmp
sub
test
cmp
es
adc
push
idivl
lods
jg
cmp
mov
inc
mulb
xor
adc
jne
fs
bound
fists
nopl
imul
orl
adc
lret
adc
nop
dec
aam
popa
dec
aad
inc
jo
subb
xor
out
fadd
movsl
mov
xor
daa
mov
cmpsl
aad
mov
shll
psrlw
fsubrs
jb
fdivl
and
push
sub
dec
sbb
mov
add
fwait
out
mov
aam
adc
inc
jns
fcoms
stos
jne
popa
cmp
or
pop
fiadds
cmovae
dec
mov
shlb
sbb
jg
test
in
popf
call
mov
adc
xchg
sbb
or
into
adc
in
enter
push
mov
adc
and
repz
movsb
insl
inc
cltd
lea
mov
xor
push
inc
lahf
push
jg
pop
jo
sub
fwait
and
xchg
mov
movsb
jbe
scas
sti
push
pop
lods
adc
mov
dec
add
push
dec
cmp
inc
cwtl
cmp
scas
fidivrs
push
clc
mov
in
xchg
call
xlat
push
add
shrb
cmp
pop
std
or
cld
dec
pop
ret
cmpsb
pushf
fstpl
sbb
mov
rcl
pop
int
inc
aas
lret
stos
mov
mov
test
loope
repz
in
jmp
addr16
xchg
xor
sbb
cwtl
jle
lock
xor
and
fsincos
fwait
arpl
lods
pop
xchg
cmp
cld
dec
pop
test
repnz
addb
dec
dec
sti
mov
mov
dec
sahf
lds
icebp
enter
pop
mov
add
stos
jmp
cmpsb
movsl
push
in
pop
and
adc
fcoml
sbb
mov
out
shr
scas
and
xchg
lret
pop
enter
mov
lret
shrb
cs
cmp
cmp
sarb
push
dec
push
into
gs
xchg
and
lcall
xchg
loopne
push
dec
cmp
cmpsl
dec
out
clc
pop
add
xchg
mov
sub
aaa
das
xor
dec
out
dec
sbb
mov
dec
pop
loop
repz
and
pop
ret
jmp
xchg
sbb
pop
ljmp
leave
sbb
in
insl
movsl
dec
xchg
mov
fidivl
mov
push
mov
mov
mov
lcall
mov
out
icebp
push
nop
and
mov
push
fbld
out
mov
push
mov
mov
pop
call
push
adc
das
mov
ret
pop
adc
mov
loop
pop
movsl
sarb
sti
mov
ret
test
push
fcmovnbe
lahf
movb
ficomps
rclb
xchg
pop
jne
xor
fidivl
add
adc
inc
iret
cmpsb
rorl
roll
es
sub
or
outsb
bound
imul
shll
das
xor
lahf
mov
pop
or
pop
mov
push
jns
js
xchg
and
lods
in
jne
mov
mov
jno
insl
je
inc
mov
outsl
fdivrs
and
jecxz
es
pusha
pop
ljmp
je
fcompl
sbb
xor
cmp
das
adc
das
push
mov
push
xor
iret
test
pop
and
inc
loope
test
push
fdivr
js
push
jo
and
fdivrl
push
mov
dec
xor
les
mov
and
add
mov
faddl
loope
and
mov
inc
lods
nop
inc
mov
loop
cmp
xchg
insb
ret
int
adc
sbb
or
loopne
jns
push
dec
pop
sub
and
mov
cmpsl
inc
movsb
sbb
ja
xchg
out
mov
lods
setg
adc
clc
scas
push
les
lret
pop
pop
call
fistpl
push
inc
jge
mov
rcll
inc
sbb
push
fdivp
or
sub
bound
adc
and
dec
lods
out
pop
jb
mov
sbb
ljmp
xchg
adcb
aaa
movsl
mov
mov
call
lret
rclb
cld
call
and
lea
int
dec
loopne
mov
imul
shr
cmc
pop
jmp
xor
loopne
int3
inc
adc
inc
lea
cmp
xor
aaa
dec
sbb
or
test
push
aaa
push
adc
sti
xor
mov
and
xor
push
xchg
dec
call
and
jae
roll
shlb
imul
xchg
or
in
push
xchg
or
sbbb
mov
es
js
out
movsl
xor
jle
enter
fsubr
insb
push
enter
popa
cld
dec
fld
lea
or
adc
push
or
sub
or
push
js
jno
mov
add
mov
icebp
ja
push
or
mov
xor
add
xlat
push
xor
lea
imul
repnz
and
dec
inc
xor
pop
in
xchg
and
add
pop
es
jge
jmp
arpl
bound
data16
fisubrs
int
lahf
xor
pop
shlb
movsb
icebp
es
adc
in
pop
mov
inc
cmpsl
popf
cltd
or
mov
out
outsb
and
loop
test
mov
scas
adc
add
jo
cmp
inc
lds
xor
xlat
lods
fnstenv
aas
and
mov
push
clc
gs
ja
lahf
mov
inc
cwtl
dec
rorb
push
sbb
push
ds
jbe
cmp
in
mov
insl
dec
xchg
pop
ljmp
es
add
sub
das
es
jo
daa
mov
and
xchg
lods
mov
dec
bound
pop
rclb
cmp
pop
or
xlat
outsb
dec
xchg
pop
jno
cmp
dec
sarb
lahf
movsl
pop
jge
pop
loopne
mov
mov
pop
dec
xchg
pop
jno
mov
das
bndldx
push
and
or
add
aas
sub
ds
fdivrp
push
pop
sub
jo
mov
sub
or
or
movsb
xor
imul
dec
xchg
pop
loope
aad
lret
lea
ss
push
clc
xchg
popf
fdivs
scas
xlat
mov
fs
push
adc
test
pop
xor
pop
adc
cmp
xchg
mov
xchg
push
in
pop
in
adc
loope
jo
mov
sub
leave
push
push
shrl
pop
or
fidivl
outsb
push
cmpsb
or
lret
cmpsb
loop
jecxz
fstpl
pop
push
cmpsl
pop
mov
dec
xchg
add
mov
add
mov
cltd
imulb
bound
pop
aad
xchg
fildll
adc
fs
xchg
shrb
pop
ret
ror
insb
inc
fwait
push
jp
lar
mov
sub
lods
stos
fdivrp
aam
sbb
mov
push
jne
test
jbe
and
je
and
out
fsubs
xchg
mov
pushf
ds
xchg
cmp
sbb
xchg
hlt
add
fs
mul
mov
popf
ljmp
fidivl
mov
adc
syscall
and
jb
leave
imul
mov
mov
xorl
mov
mov
xchg
cs
pop
jp
push
mov
push
loop
shrb
daa
scas
mov
push
mov
jnp
mov
adc
and
push
sahf
jns
int
sub
aad
adc
addl
test
pop
rorl
mov
adc
jl
insl
test
xor
decb
jl
test
sub
es
add
sbb
jp
inc
in
jle
or
or
adc
sbb
icebp
mov
iret
push
inc
movsb
dec
adcl
in
add
jl
xor
lahf
sub
jo
std
push
idivl
lea
xchg
lods
mov
xor
imul
push
sti
addb
pop
lock
outsl
mov
sbb
add
in
cmp
push
adc
and
lcall
pop
adc
push
xor
push
dec
pop
push
inc
pop
push
je
xor
fsubp
push
dec
and
fimull
jmp
icebp
pop
popa
xor
jnp
mov
sub
dec
out
mov
push
cltd
loop
mov
lods
cmp
data16
mov
ja
ret
shll
jle
icebp
cmpsb
jne
arpl
push
dec
mov
mul
mov
jp
out
and
outsb
inc
push
jo
jae,pt
lret
es
jb
dec
mov
push
in
fnstenv
test
xor
stos
sahf
and
push
jnp
or
sar
fs
cltd
add
daa
into
ljmp
dec
push
jp
movsl
shlb
call
jge
js
in
add
and
js
dec
sbb
mov
push
movsb
shrb
in
fidivl
xchg
add
dec
pop
lds
into
in
mov
rep
aas
jb
mov
and
leave
and
shll
dec
pushf
cmp
mov
sub
imul
pop
loop
lods
pop
cmp
lock
repnz
cmp
icebp
push
cmpsb
ds
test
mov
and
aas
mov
test
fiadds
popf
xchg
jnp
mov
push
xor
dec
loopne
imul
outsb
lock
cmp
gs
movsb
sub
out
imul
mov
es
xchg
sbb
push
cs
and
test
jmp
out
or
cld
arpl
or
fisubrs
popa
nop
and
test
lods
mov
sbb
push
mov
mov
xchg
movsb
dec
xchg
scas
cmpsb
in
mov
addb
cmp
pop
xchg
inc
jle
xchg
sub
lahf
sahf
loopne
push
test
xchg
and
sarl
and
pop
cwtl
stos
lods
pop
jmp
mov
mov
push
adc
mov
rcl
pop
adc
pop
cmpsb
ret
js
pop
aad
ficoms
adcb
xor
pop
sub
xlat
cwtl
roll
push
push
aaa
xchg
pop
jb
xor
push
jg
push
xchg
adc
repnz
test
je
fmull
xor
lahf
sub
push
push
jge
xor
inc
insl
roll
inc
adc
stos
stos
dec
addr16
repnz
scas
sbb
mov
dec
push
push
push
push
in
sbb
filds
sbb
pop
pusha
iret
fists
movsl
and
sbb
dec
sarl
cwtl
cwtl
imul
and
gs
cli
mov
cmp
roll
popf
loopne
mov
jecxz
sbb
mov
sub
mov
fcmovnb
fnstsw
fwait
jle
aaa
fwait
outsb
shrl
xor
xchg
pop
jne
out
jle
dec
ret
es
in
aam
inc
jb
pop
stos
inc
bound
bound
bound
jae
mov
jge
les
lock
pop
push
fisttpll
test
out
int
shlb
pop
xchg
xchg
xor
xchg
cwtl
jp
daa
decl
sahf
test
mov
and
rolb
mov
fsubl
and
shlb
gs
adc
mov
xlat
xor
dec
xor
inc
lahf
push
jg
cmp
in
sahf
lods
fdivp
fdivl
mov
jecxz
into
ja
inc
mov
imul
iret
push
lock
cmp
addr16
or
inc
aas
imul
fs
jg
std
or
rorb
or
jp
daa
movsb
or
dec
mov
les
pop
push
dec
pop
xor
and
fimuls
fnstsw
pop
ljmp
call
out
xor
jge
test
ret
and
and
mov
push
cli
and
loop
push
push
xchg
push
xor
xchg
jle
xchg
or
pop
pop
push
xor
push
je
cmp
aaa
push
adc
xchg
xlat
or
sarb
hlt
fmuls
pop
fwait
and
cld
out
cli
in
rolb
or
cmc
enter
fadds
out
push
test
cmpsb
adc
adc
jb
push
xor
sahf
pop
pop
mov
push
in
dec
adcl
xchg
cmpl
cmp
xchg
call
mov
inc
imul
cmpb
ds
dec
xchg
fdivs
add
push
jnp
ret
dec
call
mov
out
into
pop
mov
cwtl
test
mov
push
lock
adc
movsb
mov
inc
and
leave
out
push
mov
loop
pop
arpl
repz
cmpsb
and
in
sbb
nop
movsb
push
dec
push
push
in
gs
les
push
fnstenv
pop
arpl
outsb
and
mov
into
or
test
lods
fdivs
push
repz
push
ljmp
push
lods
movsl
ror
fdiv
dec
sbb
cmovnp
bound
mov
inc
dec
or
in
mov
pop
jecxz
ds
std
call
in
lcall
adc
and
es
push
les
out
jg
decl
in
add
movsb
dec
out
mov
push
movsl
out
sbb
fistpl
adc
iret
out
jae
sub
fistl
lea
dec
xchg
gs
ret
arpl
movsb
mov
cmpb
lahf
lea
filds
xchg
sub
sahf
mov
cmp
jg
stos
jmp
sar
push
and
mov
test
gs
sub
fildll
xchg
mov
sub
mov
sbb
cs
sub
les
out
inc
jnp
and
sub
pop
dec
cmp
sub
mov
mov
shrl
push
pop
mov
aad
fs
out
mov
add
sub
arpl
push
int
mov
orl
orl
jne
lods
sbb
xchg
mov
imul
inc
outsl
js
jecxz
adc
sub
adc
pop
outsb
xor
and
pop
popa
in
pop
repz
loop
rclb
stos
sbbl
call
aaa
push
adc
movsb
cmpsb
popf
jne
shlb
bound
outsl
ficoms
sbb
sub
jge
mov
push
pop
insb
pop
dec
sub
mov
aad
xchg
fldcw
mov
push
int
fistps
push
in
sbb
mov
test
dec
in
cli
sub
xlat
mov
or
mov
imul
mov
ror
push
mov
and
xchg
adc
or
dec
out
xchg
mov
lea
jg
cmp
stos
aaa
outsb
xor
or
adc
mov
inc
mov
je
cld
aas
mov
out
mov
imul
inc
or
lret
push
push
shlb
test
and
and
nop
and
les
cs
popl
sbb
in
or
stos
jle
pop
sbb
xchg
jg
data16
or
xchg
lods
mov
outsl
into
push
push
mov
inc
cmpsb
int
jl
or
mov
ret
in
loopne
jb
stc
inc
aad
or
scas
mov
fwait
xchg
cmp
mov
jbe
shr
lock
out
int
or
lret
leave
loope
ret
xor
pushf
pop
mov
push
aaa
sbb
pusha
xchg
movsl
adc
sahf
jb
pop
pop
cmpsb
divb
add
cmp
or
xchg
add
cmp
bound
push
aaa
xor
mov
out
out
push
pop
sub
jle
pop
mov
in
mov
sbb
dec
bound
push
scas
pop
inc
out
mov
iret
fs
lret
lods
rclb
daa
xor
sub
movsl
shlb
mov
sbb
out
jp
xchg
and
dec
cmp
push
inc
in
pushf
das
and
dec
loopne
mov
dec
sbb
aas
sub
in
sub
push
cmp
xor
dec
fisubs
xchg
test
dec
xchg
mov
lea
rcrl
and
inc
lcall
popl
fwait
mov
cltd
fmuls
push
repz
jecxz
push
enter
inc
dec
pushf
cmp
ds
mov
dec
out
push
mov
mov
scas
mov
fiadds
cmpsl
dec
cmp
fidivrl
sub
es
cmp
shrb
mov
out
test
addr16
movsb
cmpsl
les
lds
mov
fisubl
adc
repz
pop
fcoml
dec
xchg
pop
jno
pop
loope
pop
add
in
sbb
ds
push
das
movsl
out
mov
ret
popa
and
imul
call
in
mov
cmp
and
scas
xchg
scas
cmpsb
in
dec
sbb
cmp
shlb
adcl
in
mov
dec
out
pop
xchg
loopne
outsb
test
ds
sub
mov
inc
push
lahf
movsb
shll
push
out
push
jg
and
xor
fs
in
mov
cmp
mov
ljmp
leave
inc
pop
cmp
aad
pop
sub
int
pop
stc
dec
mov
frstor
mov
mov
pop
ljmp
push
jmp
jae
xor
fdivl
daa
sub
popf
mov
test
jo
jp
push
lea
and
push
and
dec
pop
lock
inc
push
cwtl
test
jb
dec
imulb
negl
xlat
cltd
mov
popa
in
pushf
jne
bound
xor
testl
cmp
xor
mov
clc
test
mov
pushf
ror
pop
aad
cmc
mov
scas
shlb
fdivrs
cltd
into
push
or
fdivs
mov
fsubr
pop
nop
out
addr16
fimull
push
sbb
inc
sbb
scas
int3
mov
adcb
and
sub
fldcw
sbb
inc
popf
sub
cs
ljmp
cmp
bts
cmpb
fmull
sahf
add
inc
xor
jo
push
mov
pushf
es
std
jecxz
out
and
lock
mov
rorl
aas
cmp
adc
inc
in
jo
int3
cwtl
inc
cmpsb
cwtl
sub
cmp
cs
outsl
arpl
test
xor
fbld
mov
lahf
xor
xor
int
push
jmp
pop
dec
and
mov
jmp
popf
pop
adc
aas
cs
and
sbb
inc
dec
mov
jbe
movsb
lahf
xchg
movsl
adcl
cmc
push
mov
movsb
outsl
inc
inc
mov
ljmp
fldln2
sahf
push
dec
scas
dec
jae
push
aaa
aad
pop
sti
mov
push
mov
pop
xor
sbb
lock
jno
or
mov
cmp
outsb
mov
in
adc
add
sub
jbe
nop
inc
mov
ss
and
in
xor
push
and
xchg
lods
icebp
cld
shl
sub
cmp
cmp
shr
xchg
loop
hlt
xor
cli
popa
xlat
mov
push
in
test
popa
adc
push
inc
xchg
out
jp
pop
lcall
fsubr
xchg
adc
sbbb
subl
push
sbb
das
leave
bound
cmp
xchg
jae
mov
sub
movsl
dec
cmp
fsubs
sbb
loopne
scas
mov
dec
call
xchg
push
clc
jg
clc
scas
cmp
ret
xor
fnstcw
sub
cmp
fisubs
xchg
in
xchg
and
push
pop
cmpl
mov
and
push
pop
daa
outsl
jb
outsl
xor
push
imul
shl
jnp
movsl
sar
imul
adc
into
push
sub
outsb
ds
mov
sahf
movsl
sar
addr16
out
aas
and
out
mov
sub
pushf
xchg
out
mov
stos
ljmp
out
jnp
fmuls
sub
dec
sbb
dec
push
fimuls
xchg
pushf
cmp
mov
pop
in
ss
es
test
jge
mov
stc
addr16
lds
mov
and
movsl
out
jne
pop
xchg
sbb
xchg
pop
jb
push
clc
mov
call
clc
or
shlb
pop
lods
xchg
in
cs
xor
and
pop
out
cmp
dec
dec
mov
pop
loopne
ds
mov
loope
pop
pop
imul
shr
jle
mov
jb
fs
loope
mov
cmp
out
in
out
push
mov
xor
pop
outsl
rcrb
add
mov
sub
dec
aas
and
jne
cmp
cs
mov
adc
cltd
mov
sub
xchg
push
mov
cmc
loop
vpsubsw
sub
inc
pop
fdivs
cmp
fucomp
mov
test
imul
adc
cmp
add
xor
mov
out
in
mov
add
add
mov
push
rcrl
sbb
cmpsb
mov
and
jnp
jno
inc
js
push
cmp
aaa
sahf
in
scas
sahf
loope
sahf
xor
or
xor
sub
cs
loop
jle
shrl
mov
pop
pop
sub
iret
mov
mov
xchg
es
push
xchg
pop
inc
xor
adc
popf
push
mov
sub
imul
pop
push
out
pop
cmpsl
xor
jecxz
call
aam
dec
adc
and
cmpsb
add
lods
inc
loope
push
ret
loope
pcmpgtb
into
pop
add
and
add
mov
jle
mov
push
stc
xchg
xor
lods
xchg
orb
insl
push
insb
and
or
adc
jecxz
jnp
mov
call
mov
pusha
sbb
xor
jmp
jbe
rcll
and
pop
gs
adc
jmp
xor
and
xchg
movsb
daa
or
out
and
daa
inc
lret
dec
xchg
or
sti
mov
dec
mov
add
mov
adc
jl
and
fs
sbb
lret
cmp
mov
or
and
xchg
add
faddp
cld
test
pmaxub
popa
inc
ds
je
loope
ret
aam
lock
in
xchg
fdivl
sub
add
fdivl
jbe
in
addb
xor
sub
push
aam
imul
add
in
fneni(8087
dec
leave
loopne
lds
movsb
push
mov
je
stc
mov
sub
dec
mov
mov
cmp
adc
popf
push
jmp
sub
and
int3
mov
push
loopne
xchg
jp
repz
in
and
out
pop
popa
push
xchg
mov
aam
jo
mov
mov
mov
xchg
pop
movsl
popf
int
cmp
pop
mov
fdivrp
mov
sbb
push
rolb
sbb
push
dec
cmc
scas
dec
ljmp
lock
test
dec
loop
mov
mov
mov
push
push
cmpsl
loop
mov
in
xchg
and
das
mov
dec
out
scas
inc
sahf
dec
out
mov
cld
ja
inc
cwtl
repnz
pop
dec
imul
and
mov
and
xchg
scas
mov
or
cmp
mulb
jo
lods
movsl
shlb
push
pop
jg
dec
xchg
sub
imul
push
xor
mov
cmp
into
push
cs
sarl
and
and
popf
xchg
jle
push
lock
inc
add
xchg
sub
lahf
xchg
loopne
outsb
test
push
fisubs
add
jae
and
pop
dec
pop
xchg
jae
and
cmp
jge
mov
pop
ja
dec
sub
in
lods
xchg
mov
mov
push
gs
popa
push
jnp
in
cmp
push
xor
xlat
clc
mov
mov
ret
jge
in
jge
outsl
pop
jmp
stc
push
enter
addb
dec
jmp
aaa
adc
aaa
push
adc
lods
pop
xor
test
ret
dec
out
aad
jne
lock
push
enter
add
xchg
mov
mov
and
cltd
cmp
cmp
in
cmp
outsb
push
lret
rcll
sbb
rcrb
mov
pop
stos
xor
and
jmp
cltd
mov
fwait
sub
lcall
addb
call
hlt
pop
dec
insl
sti
mov
std
mov
into
push
jo
and
push
out
pop
adc
in
push
in
sbb
and
mov
bound
inc
rclb
cmpsl
and
daa
aaa
in
sub
push
sub
das
addl
dec
xchg
sub
outsl
mov
mov
je
int3
xor
xchg
cmp
nop
sbb
int
mov
test
push
lods
shrb
scas
or
mov
movsl
push
sub
mov
xor
pop
ds
pop
adc
and
ret
adc
test
xor
sub
push
and
stos
or
pop
push
inc
loope
jo
mov
imul
les
or
push
adc
jecxz
adc
sbb
repz
sti
adc
fstpt
inc
push
cwtl
imul
dec
xchg
or
insb
cmpsb
shlb
outsb
mov
aam
sbb
hlt
bound
fists
and
lcall
out
mov
mov
fisubl
test
pop
mov
icebp
mov
dec
inc
push
popl
gs
test
call
dec
repz
dec
pop
push
xchg
or
xor
mov
cld
or
aam
lahf
in
rorb
test
outsl
das
push
mov
lds
or
fucomp
xchg
gs
mov
decb
lds
xlat
pop
inc
loope
mov
pop
fldln2
dec
icebp
dec
cltd
in
push
adc
arpl
cmpsl
jbe
out
test
mov
pop
sub
es
inc
ret
sbb
mov
sbb
push
outsl
or
add
mov
xchg
pop
into
inc
sub
xchg
cmp
adc
sbb
xchg
callw
mov
out
pop
insl
push
arpl
jns
inc
test
fcoms
cmc
imul
xchg
adc
push
in
je
movsl
mov
dec
jbe
notb
aaa
push
adc
mov
inc
mov
test
inc
dec
jmp
popa
lock
pop
shlb
push
push
mov
pop
test
cmp
ss
fistpll
es
in
pop
aad
aas
adc
aas
sbb
je
pop
mov
sbb
and
insl
loop
lea
out
xchg
out
inc
push
pop
andl
call
inc
pop
imul
popa
push
into
gs
int
pop
xchg
rcl
dec
cmp
pop
mov
test
mov
stos
sub
jb
xor
add
cmp
jb
repnz
push
clc
mov
cmp
dec
pop
loop
dec
xchg
push
sti
cltd
test
maxps
shl
cmp
loopne
movsl
or
ss
lods
push
sahf
scas
adc
loopne
sub
add
nop
cmpsl
les
mov
cmp
xchg
ja
and
insl
push
repz
mov
jmp
mov
cs
enter
arpl
jae
fmuls
sub
dec
sbb
leave
popa
mov
sub
cmpsl
dec
loopne
popf
lock
push
add
in
rcrl
jne
jmp
into
aaa
push
adc
cltd
loop
pop
icebp
jg
aas
fbld
das
xchg
pop
and
sub
cmp
fstpt
in
xor
shl
cwtl
pop
push
rolb
lea
mov
adc
and
inc
jp
aas
sub
cli
mov
stos
cs
xlat
sarl
inc
push
cld
mov
dec
cmp
and
inc
xor
lock
andl
xor
lock
xor
add
sbb
mov
and
in
stos
mov
or
push
mov
addr16
dec
xchg
imul
push
mov
push
adc
mov
pop
sbb
jnp
lock
js
mov
movsl
shll
adc
cwtl
dec
inc
pop
lods
fwait
cwtl
stc
fistps
xchg
mov
bound
popa
push
scas
rcrl
cs
sub
jo
shll
xor
jg
nop
pop
mov
ds
cmpsb
ficomps
es
mov
mov
adc
lret
enter
ds
push
insb
inc
jno
lret
lods
jbe
mov
mov
sub
js
int3
jp
test
inc
aas
aaa
cmpsl
adc
into
aaa
push
adc
push
dec
fildll
addr16
outsb
pop
add
mov
mov
nop
or
repnz
xchg
cwtl
bound
stos
adc
jmp
std
insb
pushf
or
nop
mov
movsl
loope
aad
jmp
xchg
pop
mov
jne
or
adc
pop
into
mov
jecxz
pop
jecxz
mov
test
in
sahf
test
out
nop
aad
dec
xchg
xchg
pop
xchg
nop
sbb
or
jo
dec
push
mov
inc
into
dec
and
les
dec
enter
jl
repnz
aad
mov
adc
mov
cmpsl
outsb
pop
or
sahf
adc
mov
lret
push
or
push
ss
es
xor
or
fiaddl
mov
into
jns
mov
nop
gs
dec
jne
cmp
or
cld
sbb
dec
xchg
andl
es
leave
cmp
adc
sti
mov
jo
cwtl
jae
sbb
sahf
jle
daa
jl
stc
mov
or
mov
sub
mov
xchg
ja
inc
sub
cmpsl
jecxz
mov
std
repnz
adc
mov
xor
jecxz
push
adc
adc
sbb
popf
sub
popf
cmp
pop
sub
sbb
aam
cmp
lahf
pop
shrl
in
out
inc
loopne
repz
lods
pop
mov
sbb
mov
loopne
inc
jns
pushf
cmp
aad
xchg
xor
cmp
push
popa
dec
xchg
mov
aam
insb
and
xor
sub
imull
adcb
fdivrp
mov
mov
push
add
xor
mov
xor
pop
inc
push
out
aaa
sbb
and
mov
aas
sub
dec
xchg
scas
mov
mov
xchg
mov
cmp
jo
xor
cmp
fdivrp
mov
mov
dec
xor
adc
cmpsl
dec
xor
ds
dec
xchg
push
insl
das
mov
and
cmp
pushf
mov
sub
and
inc
pushf
mov
bsr
mov
imul
mov
fistpll
pop
pushf
push
jae
xor
pop
aas
mov
pop
jecxz
pop
push
fcom
xchg
fistpl
inc
dec
xchg
push
shlb
sarl
fstp
nop
imul
pop
sub
ds
jns
pop
push
xchg
and
push
sahf
cmp
repnz
sar
or
out
pop
pop
xor
pop
loope
pop
adc
and
jmp
mov
push
mov
xlat
lods
xchg
jne
fimull
cmc
aaa
push
adc
push
or
lods
movntq
out
cmp
jge
outsb
xor
sub
ret
pusha
out
push
out
xchg
cmp
ljmp
in
push
mov
pushf
sub
and
lcall
push
push
xor
fwait
push
out
pop
push
mov
pop
hlt
xchg
mov
add
push
mov
imul
lods
ficoml
stc
cmp
lcall
cmpsb
addr16
cmp
jp
mov
or
pop
and
je
iret
jns
mov
popf
or
cmp
add
clc
mov
lahf
cmp
pop
arpl
jle
out
es
loopne
inc
das
add
cli
cmp
xor
ja
mulps
fnstenv
pop
repz
daa
adcl
sub
aaa
push
adc
and
cs
inc
scas
in
pop
push
push
test
lods
sbb
loope
cmp
xchg
inc
cmpsb
jge
mov
lcall
lea
sbb
rcr
insl
fxch
aas
sbb
fwait
xlat
movsb
inc
test
ja
sbb
jae
ffreep
ret
adc
xor
or
cmc
scas
shlb
push
adc
and
xchg
mov
cld
pop
sbb
jle
mov
js
insb
in
outsb
shll
and
pusha
data16
ret
xchg
xor
std
and
mov
cmpsl
lret
jo
out
rclb
jmp
pop
std
outsb
mov
lcall
cmp
inc
fists
cmp
push
leave
dec
lods
jbe
lods
mov
or
mov
outsl
push
mov
cmp
cmp
icebp
jno
jl
sbbl
lods
mov
fisttps
repnz
repz
lods
pop
xor
enter
scas
or
jmp
es
xor
push
jge
xor
mov
insl
mov
mov
add
mov
mov
add
push
subl
adc
imul
mov
les
loopne
mov
jmp
test
cmp
sub
ret
mov
into
iret
fucom
fwait
es
sub
test
inc
adc
sbb
jne
dec
movsb
pop
jp
in
inc
repz
jl
bnd
outsb
lcall
adc
gs
sub
pusha
mov
cmp
inc
push
scas
mov
clc
mov
out
dec
xchg
push
enter
sahf
outsb
cmp
scas
fsubrl
push
xor
adc
cs
push
adc
cmp
push
ret
jge
mov
mov
nop
rolb
shrl
xchg
test
aas
xor
cmp
pop
jmp
pop
jge
lock
ss
cmp
pop
ljmp
scas
xchg
aas
xor
cmp
fcompp
pop
cmp
into
push
call
lods
pop
arpl
pop
cmp
mov
fisubrs
lods
arpl
fwait
test
mov
fisubs
adc
push
mov
stos
mov
mov
sub
pusha
out
pop
leave
adcb
sub
insb
push
lock
daa
push
mov
mov
nop
stc
test
xchg
sub
xor
pop
push
ljmp
jp
push
aam
dec
call
jno
ds
lods
xchg
mov
cmp
fistpll
sub
mull
test
out
mov
dec
loopne
test
sti
cltd
sbb
cs
shrl
cmp
push
outsb
dec
mov
xchg
mov
xchg
scas
xchg
jl
inc
in
aas
cs
enter
xor
pop
push
push
xor
push
adc
test
rclb
xchg
xchg
add
sbbb
sub
dec
insb
pop
in
inc
loope
xchg
lods
subb
jmp
call
fwait
sub
dec
cmp
or
jmp
mov
pop
mov
out
subl
js
dec
inc
adc
mov
pusha
mov
and
loope
lahf
dec
xor
adc
sbb
das
xchg
jo
out
xlat
xchg
mov
mov
jne
stc
insb
adc
push
cli
pop
xor
insb
ret
in
or
aas
je
outsb
mov
cwtl
loopne
inc
repz
and
cld
pop
dec
xchg
es
sarb
mov
adc
loopne
jge
aas
popf
jbe
push
fisubrl
push
mov
les
fisubrs
frstor
sbb
into
pop
sbb
xlat
orb
jns
inc
std
and
inc
push
stos
into
aad
aam
mov
arpl
pop
dec
jae
scas
push
mov
xchg
pushf
cmp
stos
cli
xor
test
cmp
dec
pop
pop
xchg
mov
push
sbb
xchg
add
into
sub
outsl
fwait
and
dec
adc
push
fucomi
test
fadd
lods
iret
adc
imul
mov
pop
mov
scas
mov
lock
cmp
cmp
sarl
aas
sbb
xchg
mov
dec
lret
mov
ret
dec
daa
cmp
dec
xor
mov
push
add
and
std
stos
test
mov
lods
outsl
xchg
jl
pop
sbb
daa
inc
filds
jbe
add
mov
loopne
jnp
dec
inc
leave
push
les
add
mov
push
ss
inc
mov
xor
and
adc
push
cmp
xchg
ljmp
jle
push
in
push
out
push
decl
jecxz
mov
jmp
and
push
pop
or
fucomp
shrw
xchg
jbe
std
cld
shl
repnz
sbb
repnz
sub
dec
mov
aad
in
sub
sub
xor
cmp
push
cltd
mov
sub
dec
xor
clc
nop
lcall
out
push
cmp
or
ja
pop
mov
xor
fsts
movsb
js
add
and
mov
bound
jb
outsl
xor
xchg
xor
rorb
cmp
fmuls
sub
cmp
push
std
outsl
subl
push
cmp
out
mov
push
mov
mov
pop
cmp
daa
dec
sbb
cmp
push
sub
in
xchg
scas
movsl
loopne
mov
fcoms
sbb
add
das
pushf
mov
popf
addr16
mov
call
sub
loopne
cmpsl
lods
out
movsl
stos
cmp
lea
popa
cmp
push
adc
xor
cs
xchg
scas
mov
and
js
pop
mov
scas
mov
mov
imul
int3
pop
mov
cmpsb
test
mov
mov
cwtl
mov
fcoms
and
pop
les
dec
xchg
sub
dec
cmp
xchg
scas
mov
test
outsb
and
test
leave
mov
xchg
jb
dec
cmp
adc
cs
cmp
out
pop
mov
dec
xchg
push
dec
out
sub
imul
into
push
aad
mov
insl
das
nop
add
xchg
outsb
test
sbb
lods
or
lods
das
mov
lret
mov
and
insb
andb
out
inc
out
call
xlat
lods
pop
mov
pop
mov
lea
cmp
adc
push
inc
pusha
out
add
sub
loopne
movsl
mov
xor
xor
sub
cli
xlat
jp
call
push
and
or
mov
xchg
ss
jl
test
scas
xor
sbb
xor
xlat
inc
pusha
mov
push
stos
fdivl
out
pop
stc
testl
dec
mov
lcall
sahf
or
mov
pop
fdiv
roll
scas
bound
sub
or
sbb
in
push
push
bnd
xor
fwait
sahf
arpl
scas
xchg
push
pop
sub
arpl
ljmp
sub
xchg
sub
push
adc
movsb
cmpsb
lea
loop
pop
dec
jo
push
push
mov
and
daa
mov
ja
loopne
push
jae
sbb
jge
loope
rcr
in
inc
adc
jmp
jne
test
fsubp
mov
inc
adc
jne
shlb
enter
xchg
arpl
cltd
out
pop
ror
aam
lds
jae
test
fs
sarl
adc
int
aad
sarb
add
daa
pop
test
mov
jb
adc
testb
xor
fwait
push
sub
out
lock
push
imul
push
xor
push
test
adcb
or
shlb
adc
mov
adc
adc
aas
mov
jbe
les
je
pop
adc
shrb
int3
sub
addb
jae
es
mov
adc
push
outsb
inc
push
imul
rsm
loope
pushf
pop
pop
and
mov
in
pop
adc
inc
je
fiaddl
mov
sbb
les
je
insl
flds
sbb
cmp
sbb
inc
sbb
mov
mov
sbb
out
mov
in
add
adc
sbb
lds
and
ret
int
test
mov
push
adc
ds
aam
xor
jae
sbb
mov
jne
lcall
jne
jl
shlb
and
add
data16
jno
jo
jmp
enter
inc
xlat
pop
test
pop
adc
jmp
call
xchg
xor
mov
aas
cli
movsl
dec
xchg
mov
pop
adc
xor
jno
enter
insl
fidivl
mov
mov
adc
test
push
das
pushf
mov
icebp
push
mov
cs
mov
mov
rcr
xchg
rolb
adc
xor
sbb
lods
pop
pop
fldt
push
movsb
in
hlt
out
adc
test
pushf
mov
icebp
push
mov
inc
das
fildll
loopne
pop
adc
insl
pop
jno
push
insb
sub
sbb
insl
xor
xchg
sub
mov
adc
xor
push
mov
jbe
repnz
ss
sbb
subb
enter
lea
scas
mov
pop
jno
push
insb
sub
sbb
insl
xor
adc
scas
out
rcll
jle
jbe
mov
cmp
imul
insl
xor
ret
jo
mov
add
lahf
cmp
jle
insl
push
lock
or
cmpsb
dec
out
xchg
dec
xchg
mov
pop
fstpt
add
sub
enter
push
insb
lahf
fwait
pop
imul
xor
push
es
ds
adc
push
arpl
push
adc
loopne
fdivs
and
or
rorb
xchg
inc
push
cmpsb
mov
stos
pop
cmp
xor
in
pusha
pop
pusha
mov
std
xor
xchg
stc
or
push
adc
pop
xor
leave
dec
sahf
sbb
imul
or
push
mov
enter
mov
aas
or
in
mov
inc
push
pop
dec
mov
xor
aam
bound
xchg
adc
loope
cmp
push
adc
loope
in
add
into
jb
xor
outsl
or
imulb
stos
dec
jne
sbb
push
mov
adc
sub
dec
int3
jecxz
pop
mov
and
nop
es
rcr
inc
fwait
mov
adc
mov
dec
xchg
ja
out
ret
je
call
sbb
mov
pop
adc
fimuls
popf
test
fiadds
out
mov
inc
loopne
inc
scas
ljmp
cld
jp
jno
test
xchg
loopne
sbb
and
ss
xor
dec
adc
push
jbe
fists
sub
mov
fisubrl
pop
imul
mov
mov
mov
sbb
xor
add
sub
jmp
jbe
sub
test
popf
sub
shlb
cs
in
mov
insl
mov
shll
adc
adc
and
loopne
mov
add
cli
sbb
pop
adc
or
pushf
pop
in
add
push
arpl
imul
push
arpl
xchg
mov
inc
jle
mov
mov
jmp
imul
mov
inc
or
push
add
and
or
aad
nop
mov
adc
fsts
xchg
cmp
or
in
and
cmc
jnp
loop
insb
fsub
dec
jns
arpl
shll
hlt
mov
xor
test
cmpsb
inc
dec
sub
inc
jle
out
pop
inc
arpl
jbe
jbe
fmull
cs
xchg
push
mov
xchg
xor
loopne
mov
mov
icebp
xor
mov
xchg
xchg
pop
jae
jae
lret
cmp
aas
push
mov
lea
movsb
pop
in
or
cmpsb
subb
xchg
lret
lock
pop
aas
insl
push
insl
push
xor
dec
xchg
call
es
cmp
outsb
lea
ss
inc
xor
imul
pop
mov
sbb
pop
jle
xor
stos
cmp
adc
in
adc
lods
sti
sarb
out
mov
mov
jmp
xchg
dec
je
sbb
jne
push
sbbl
pop
jo
push
icebp
jno
outsb
loop
fs
scas
dec
rclb
filds
push
xor
lods
pop
lock
stc
loopne
mov
test
cmc
shl
mov
or
ss
ficompl
mov
adc
cmp
jae
adc
dec
xchg
push
clc
arpl
aad
or
fimuls
xor
pop
fisttps
movsl
out
xlat
and
push
test
insl
fstpt
and
pop
cmp
cmpsl
cmp
into
out
scas
xor
dec
pop
and
rol
xchg
push
jg
ljmp
add
xchg
cmp
add
repz
es
out
and
push
movsb
xor
push
out
and
pop
pop
push
lahf
jb
mov
sub
xlat
cli
push
adc
cmpsl
mov
add
xchg
and
loopne
dec
xchg
sub
popf
cmp
dec
mov
pop
push
movsb
pop
jle
jmp
fstl
xor
aas
in
pop
inc
inc
das
pushf
cmp
dec
mov
sub
and
sub
sarb
push
cmpsl
movsb
dec
fwait
repnz
pop
mov
fsubrl
out
pop
ret
push
out
xor
push
sarb
mov
add
lock
inc
popf
pop
hlt
js
sub
inc
adcl
and
and
cmc
cmp
ljmp
mov
jb
arpl
adc
pop
and
push
adcl
jmp
cmp
add
cmp
mov
push
adc
xchg
lcall
push
shll
cwtl
push
inc
push
mov
jo
pop
push
and
imul
mov
adc
roll
in
in
les
ret
dec
pop
jnp
loope
xchg
and
cmpsb
lcall
stos
jmp
ss
mov
imul
jp
add
jmp
div
addl
xlat
mov
push
sar
out
fbld
sbb
cmpsb
fs
faddl
lods
bound
inc
scas
fwait
std
mov
std
and
outsl
data16
push
xchg
xor
jle
cwtl
sub
bound
add
push
sub
pop
shll
mov
and
sbb
or
rcrl
imul
push
pop
pop
dec
jmp
xor
daa
dec
or
xchg
imul
and
lock
std
sub
and
dec
dec
pop
sti
add
es
mov
movsb
cltd
mov
jae,pn
insl
mov
pop
in
aad
add
or
imul
xchg
sbb
es
iret
leave
mov
enter
sbb
mov
sub
push
dec
xchg
cltd
dec
mov
sahf
hlt
icebp
mov
mov
pop
cld
xchg
jmp
lods
mov
ds
mov
dec
std
inc
xchg
and
add
pop
push
mov
mov
sbb
pop
stc
fs
or
fisttpll
in
insl
sub
fnstenv
jp
pop
aam
cmp
mov
push
inc
jnp
push
jmp
push
imul
outsl
adc
mov
loop,pt
mov
mov
push
xor
cltd
imul
js
mov
inc
call
popa
cmp
negb
jno
movsb
fsubp
and
adc
rorl
push
adc
add
clc
addr16
dec
xchg
pop
cmpsb
fcmovne
jo
ret
int
xor
leave
jle
stc
pop
mov
xchg
mov
movsl
cs
stos
insl
push
lds
mov
mov
dec
int3
pop
sysexit
faddp
outsb
pop
aad
pop
pusha
out
mov
mov
in
outsb
push
enter
outsl
out
mov
lods
jecxz
nop
sbb
push
arpl
mov
out
ss
cmp
pop
jmp
mov
sbb
cs
add
cmp
xor
fisubrs
lods
arpl
xor
loop
test
xchg
sbb
xor
fcompl
dec
cli
pop
mov
pop
in
ds
and
mov
xchg
inc
out
mov
xorl
mov
push
push
xor
outsl
pop
lods
mov
loop
movsl
sar
imul
push
std
ja
cld
inc
cmp
fimull
xor
lods
pop
pop
lods
pop
ss
mov
pop
inc
insl
fidivl
les
dec
lret
adc
mov
push
test
subl
sub
ljmp
xchg
popa
pop
out
ss
scas
sub
in
mov
lods
mov
scas
gs
in
popa
lods
popf
scas
insb
cmp
dec
xchg
pop
in
push
cmp
cmp
sarb
sub
aam
fs
inc
push
and
es
mov
push
int3
jb
stc
jle
out
movsb
xchg
cmpsb
xor
inc
adcl
push
outsl
inc
cli
dec
sub
stc
int3
sub
fsubrs
aad
int3
push
xlat
mov
inc
mov
ljmp
jbe
roll
pop
fs
in
inc
fldt
pop
movsb
repnz
add
mov
int3
xchg
push
push
sub
into
cltd
jmp
fwait
in
aam
jmp
daa
inc
lahf
insb
mov
nop
into
adc
xlat
scas
pusha
push
mov
fsubr
pop
jns
sub
sbb
sbb
imul
adc
pop
push
ljmp
push
inc
sbb
sub
and
xchg
mov
cmp
adc
fiadds
into
jge
adc
mov
xor
ret
insb
jno
aad
and
cmp
jl
or
clc
sub
les
xchg
cmp
daa
jle
in
sub
shll
std
jmp
cmc
shll
cmc
sahf
pop
inc
outsb
fwait
sub
push
or
in
pushf
jle
fistpll
shll
pusha
sbb
fisubs
xor
popa
mov
pop
mov
and
pushf
iret
fs
mov
mov
movsl
mov
pop
xchg
inc
rorl
rol
es
xchg
dec
mov
and
mov
popa
adc
movsb
addr16
push
imul
mov
xlat
movsb
cwtl
jl
test
or
mov
jbe
js
mov
neg
push
push
mov
xor
pop
jmp
ret
mov
mov
mov
cmp
add
dec
xchg
xchg
dec
mov
int
loop
mov
cmp
xchg
sbb
aas
xchg
adc
add
fldcw
cltd
dec
add
xchg
sbb
inc
xor
xor
shrb
dec
xor
or
lret
icebp
dec
xor
dec
lea
lret
jne
cmp
movsb
jmp
push
test
hlt
inc
mov
xchg
sub
enter
cmp
fstp
mov
xlat
push
pop
rorl
or
icebp
mov
dec
enter
mov
xchg
mov
addb
xchg
and
jne
adc
xchg
mov
jb
cmp
lahf
movsl
cmp
xchg
push
imul
and
popa
mov
fiadds
pushf
cmp
fildll
xor
pop
loopne
mov
mov
scas
mov
dec
cmp
xchg
sahf
test
jge
dec
out
fstpl
xchg
and
inc
movsl
scas
add
movsl
dec
loopne
mov
dec
sbb
aas
sub
jecxz
rolb
dec
mov
gs
movb
push
aas
sub
loopne
dec
dec
xchg
and
cmpsl
les
jb
cmp
and
orb
imul
mov
push
push
js
insb
cmp
pop
leave
sbb
pop
jb
push
movsl
in
xor
iret
loopne
mov
inc
sbb
xchg
pop
out
dec
pusha
pushf
dec
jp
rclb
arpl
aad
out
adcb
adc
pop
dec
xor
jnp
imul
pushf
mov
xchg
jae
mov
cmp
pop
jae
push
movsb
dec
xchg
push
repz
jno
mov
fisubl
sbb
enter
dec
test
movsb
cmp
xchg
scas
mov
and
scas
iret
repnz
jmp
push
fistl
jmp
mov
mov
shlb
mov
dec
aaa
sub
xchg
cmpsb
xor
push
dec
out
mov
shrl
movsb
mov
movsb
mov
insb
jmp
jmp
icebp
add
adc
sub
int
es
test
cmp
mov
fistpll
notl
pushf
pop
dec
mov
and
fsubl
push
add
in
fistl
push
lods
dec
dec
mov
xlat
xchg
mov
hlt
or
lcall
out
data16
or
adc
or
mov
popf
push
decl
or
sbb
das
cmp
pop
out
and
jmp
jo
loop
cs
pop
rcl
popa
push
je
outsb
push
inc
push
outsl
inc
repnz
mov
lret
shrl
xchg
lock
push
inc
sbb
pop
ret
lret
shrl
sbbb
jo
fisttps
daa
adcb
pop
ret
shr
cmp
adc
xchg
mov
lcall
iret
pop
pusha
add
xchg
out
scas
aad
cmpsb
outsb
imul
in
add
sarl
xchg
and
clc
loopne
sahf
sbb
xchg
fs
and
mov
cmp
xor
mov
pop
jne
add
aad
in
push
sub
insb
cmpsl
or
push
cmp
adc
xchg
mov
mov
pusha
pop
mov
fcoml
xchg
add
pushf
jp
nop
outsb
enter
jmp
and
and
sub
and
sub
add
push
in
loopne
insb
add
clc
mov
test
stos
test
rcl
insl
ss
js
inc
pop
dec
movsl
decb
mov
jno
pushf
sti
mov
dec
mov
add
ljmp
arpl
mov
mov
mov
ss
xchg
dec
cld
xchg
jae
xchg
mov
js
fdivrl
ret
movsb
sub
aas
xchg
cmpsl
fstpl
stc
push
fsub
inc
flds
imul
fs
jg
pop
push
mov
cmp
mov
jle
pop
push
pushl
inc
sub
push
add
pop
rcrb
push
xchg
imulb
pop
bound
jns
push
mov
in
movsl
fdivs
aad
pushf
outsb
pushf
xor
cmp
inc
in
push
jae
mov
fs
pusha
pop
lds
stos
push
jb
mov
cmp
push
mov
inc
cmp
jmp
xor
std
sub
les
clc
dec
sbb
ds
fnstenv
cmpsb
jo
insl
pop
jbe
mov
nop
mov
in
sbb
sub
and
andl
movsb
adc
movsb
mov
cwtl
adc
leave
loopne
test
sub
jo
daa
mov
xlat
dec
fdiv
dec
xchg
sub
aam
adc
fstpt
movsb
ds
leave
dec
xchg
push
imul
xor
call
mov
mov
ror
call
outsb
add
add
in
mov
outsb
inc
cmp
adc
negl
insl
pop
pop
xor
lods
pop
out
or
push
inc
sbb
test
lods
sub
nop
and
lcall
in
outsb
in
push
xchg
mov
in
mov
idivl
xchg
mov
push
xor
lret
pop
jmp
pop
pusha
dec
lret
loopne
sub
push
sub
xchg
xchg
push
stos
sahf
dec
outsl
xor
loop
push
or
pop
dec
pop
lret
outsl
xor
lahf
sub
fisubrs
loope
pop
jnp
dec
xchg
push
xor
and
lds
cmp
leave
outsl
lods
mov
dec
xchg
cmp
cmpl
cmp
sub
xor
pushf
mov
test
push
cmp
and
pop
cmp
fcomps
push
call
addl
pop
push
add
pop
gs
and
icebp
add
mov
inc
popf
push
jle
push
jle
ljmp
dec
lea
and
sbb
jecxz
subl
scas
stc
ret
cmp
daa
and
aas
popa
stc
add
mov
dec
icebp
jne
push
js
adc
cld
mov
pusha
into
scas
pop
inc
je
cmp
fisubrl
rorl
cmpsl
inc
pop
lods
inc
push
fs
inc
push
cmpsl
ret
push
cltd
in
nop
es
push
pop
cmp
mov
add
dec
in
ret
jnp
mov
ja
ss
daa
mov
push
sub
mov
data16
daa
negb
and
push
xor
inc
stc
leave
pop
jmp
push
loope
jecxz
mov
pop
and
aam
jbe
enter
test
aaa
fs
test
enter
bound
cli
pop
addr16
sar
test
mov
fucomp
in
fisttps
push
out
in
xchg
loop
ljmp
lock
adc
adc
test
outsl
push
mov
inc
pop
push
pop
mov
mov
cmp
adc
adc
dec
adc
sub
rcrb
cltd
and
cltd
push
adc
test
cmp
mov
adc
fldl
into
and
lds
push
xor
fadds
lock
push
loope
and
xlat
jae
out
push
and
jg
fstpt
mov
sahf
mov
lahf
or
scas
mov
bound
dec
jbe
test
leave
aaa
loope
mov
sbb
push
push
cmp
lret
and
negb
out
mov
xor
pop
push
sub
lods
out
cmp
dec
mov
mov
insl
pop
scas
push
pop
sub
and
stc
and
jno
loopne
fnstenv
sub
add
xchg
pop
pop
jmp
xor
jle
xor
repnz
sub
cmp
pop
out
movsb
imul
sbb
call
cmpsl
sub
or
mov
jns
fwait
in
cwtl
jno
adc
fcmovbe
stos
inc
sti
mov
dec
orb
pop
fnsave
and
xchg
inc
jge
inc
pop
sub
clc
jnp
stos
mull
mov
mov
fwait
loopne
adc
enter
dec
cmp
movb
nop
and
and
lea
faddp
insb
pop
stos
arpl
outsl
mov
pop
int
cli
cs
cmp
and
gs
jge
push
push
xchg
sub
sbb
xchg
jae
mov
mov
xchg
pop
movsl
shl
gs
mov
sbb
dec
out
mov
nop
xor
pop
movsl
dec
loopne
and
mov
fnsave
fidivrl
pop
mov
xor
pop
call
decb
pop
mov
hlt
mov
push
leave
movsb
mov
ss
inc
adcl
lock
xlat
sbb
cmp
and
scas
dec
pushf
dec
shr
out
jmp
pop
mov
notb
sbb
pop
ficomps
pop
and
or
pop
inc
xchg
lods
pop
xor
xlat
popf
sub
jecxz
ljmp
sti
mov
ljmp
repz
xchg
scas
mov
dec
loope
pushf
xchg
jp
xor
sub
stc
sahf
mov
sarl
adc
cmp
adc
icebp
popa
lds
mov
fcoml
scas
dec
jecxz
push
in
jecxz
mov
xchg
sub
dec
fs
iret
cld
popa
cmp
pusha
fists
aad
push
mov
daa
cmp
ret
xchg
pop
out
call
cmp
jae
popa
insl
cmp
adc
das
adc
jbe
cld
outsb
ljmp
imul
imul
and
xlat
mov
and
add
pop
mov
mov
fildll
lcall
fucomi
mov
mov
push
adc
stc
repnz
pushl
popa
ret
inc
ret
push
in
inc
pop
inc
inc
jecxz
and
xchg
sub
jno
jno
pop
push
lahf
ret
mov
movsb
mov
dec
int
scas
das
add
adc
xchg
and
out
sbb
push
adc
aad
dec
push
iret
pop
push
addr16
mov
scas
outsl
in
aas
adc
adc
or
mov
popa
sub
fmul
push
lret
aad
xchg
fldcw
mov
add
xlat
movsb
or
mull
cmp
cmp
je
out
inc
push
cmp
fsts
in
pop
bound
pop
inc
mov
ja
push
adc
and
mov
push
push
sbb
xchg
push
xor
int3
cwtl
pop
ret
xchg
xor
pop
aaa
jecxz
mov
cmp
pop
in
scas
dec
mov
mov
mov
or
jbe
or
jecxz
xchg
call
lods
jbe
idivb
out
fildll
cs
jl
in
sbb
jg
sub
idivl
adc
test
add
xchg
push
inc
mov
xor
xchg
add
adc
inc
xchg
fcoml
mov
sub
xor
push
cs
data16
in
push
in
mov
stos
mov
stos
add
adc
add
or
push
or
in
addr16
cmp
cwtl
je
js
pop
les
popa
sub
pop
gs
or
fptan
iret
flds
pop
stc
movsb
dec
imull
sbb
push
sahf
stos
inc
mov
imulb
in
jle
xor
adc
subb
les
and
push
leave
cwtl
push
mov
test
lea
xchg
mov
mov
and
test
xchg
fsts
push
lret
fidivrs
sbbb
push
push
push
ret
jbe
ret
jno
jns
scas
lods
xchg
mov
cmp
or
hlt
sub
xchg
aas
mov
push
inc
ret
jg
ret
jge
jns
scas
mov
dec
mov
lea
ss
and
movsl
fs
in
inc
pop
mov
mov
pop
dec
jno
mov
jle
mov
in
test
mov
mov
cs
xchg
dec
xchg
xor
imul
fisttpl
mov
cwtl
dec
dec
sti
sarb
sub
dec
pop
imul
xchg
xor
insl
fidivl
mov
stc
test
mov
icebp
fcoms
sbb
cmp
and
mov
outsb
es
pop
cmpsl
call
push
inc
xor
push
jns
out
mov
sub
mov
sti
cs
movsl
test
ret
jbe
enter
outsl
pop
stos
mov
call
out
in
lods
pushf
movsl
dec
out
push
inc
inc
xor
fistpll
adc
cmpsl
les
push
inc
ss
sub
pop
test
push
test
test
xor
jmp
sbbb
mov
jge
cmpsb
dec
add
fildll
mov
push
xor
fscale
push
dec
xchg
loop
sbb
cmp
adc
push
fnsave
shrl
adc
fwait
es
add
xchg
push
out
xor
xor
les
and
mov
loope
insl
sti
cli
pop
mov
push
jne
push
in
jl
push
jl
and
movsb
pop
insl
lcall
lods
sbb
push
xchg
xor
add
or
shrl
mov
push
subb
sub
ret
dec
add
sub
cld
mov
repz
pop
sbb
mov
mov
flds
fldt
rorl
insb
pop
inc
and
fwait
sub
adc
fnsave
adc
imul
movsb
mov
fldenv
jns
mov
scas
outsb
aad
lcall
lods
mov
xchg
push
rcll
mov
adc
test
lds
test
leave
mov
addb
dec
xor
fstpl
push
add
daa
test
out
fstl
out
pop
sbb
mov
adc
popa
aam
or
iret
adc
inc
mov
outsb
loope
push
push
jp
mov
aas
pusha
repnz
pop
fdiv
push
pop
add
lahf
sub
mov
xor
adc
push
adc
cmp
ret
cs
data16
lock
fldl
popf
sbb
cld
movsb
addr16
dec
mov
sbb
test
rcll
jg
xchg
and
daa
test
add
mov
insb
fildl
mov
mov
pop
mov
inc
out
xor
sbb
lock
outsl
mov
jne
adc
out
hlt
xchg
dec
mov
mov
xchg
dec
push
out
enter
cmp
or
cli
aam
mov
add
push
push
cs
rolb
ljmp
cmp
dec
xor
sub
repnz
ret
mov
fimuls
into
xlat
loopne
clc
call
or
push
jge
or
push
in
fcoms
dec
xor
mov
mov
fs
in
pop
xor
cmc
stos
outsl
push
stos
lds
lret
or
into
pushf
mov
xchg
stos
inc
and
fxch
arpl
fadds
lock
xchg
and
arpl
sub
push
cmpsl
cmp
out
jb
leave
sbb
cmp
push
movsl
dec
out
mov
cmp
and
cmpsl
dec
pushf
mov
and
scas
pushf
loopne
mov
adc
out
mov
xchg
sub
pop
jecxz
jno
mov
mov
adc
inc
push
movsb
cmp
scas
xchg
push
andb
pop
int
xor
jge
inc
sub
xor
push
repz
mov
push
dec
xchg
test
pop
cmp
pop
gs
inc
xchg
and
inc
mov
mov
insb
sub
leave
jnp
push
data16
ss
sub
pop
xchg
lret
clc
dec
xchg
and
jnp
pushf
cmp
mov
imul
mov
sbb
dec
out
movsl
xchg
lock
shrb
pop
sub
push
das
mov
shlb
dec
sbb
dec
sbb
in
pop
mov
dec
pushf
xchg
gs
int3
xchg
and
movsl
dec
xchg
pop
sub
xchg
and
js
lret
gs
imul
xchg
aam
stos
cmp
jmp
sub
xchg
scas
mov
sub
xchg
cmpsl
inc
cmpsb
out
xchg
fdivs
test
sbb
mov
lock
xchg
es
xor
fwait
ds
cmp
cs
jg
adc
test
cltd
xchg
and
rorl
dec
in
stos
jmp
popf
mov
stos
inc
fwait
loopne
jo
popf
sub
aad
sbb
cwtl
lods
lret
cmp
push
adc
pushf
aas
and
mov
cmpsb
cmp
xchg
inc
jp
dec
mov
scas
xchg
mov
loop
stos
mov
xor
sbb
sbb
jno
inc
mov
inc
fiaddl
mov
mov
adc
pop
sti
or
out
pop
inc
push
stc
mov
sti
xor
xor
cmp
ds
movsb
mov
push
dec
adc
imul
imul
mov
mov
jnp
rcrb
push
data16
push
jecxz
lds
push
stos
in
pop
mov
data16
adc
aam
fnstenv
push
push
lret
lods
xchg
insl
add
scas
imulb
stos
rcll
mov
mov
lret
mov
mov
dec
stos
jae
pop
rcl
bound
mov
scas
sbb
sub
clc
sahf
mov
mov
pusha
test
push
aam
sub
adc
mov
in
push
sub
push
xor
jmp
cltd
mov
pop
push
ss
inc
lahf
sub
or
xor
nop
push
insb
call
cmc
jl
xor
daa
cmc
jmp
aad
or
scas
add
inc
sbb
ja
aaa
jno
inc
rorb
iret
sub
add
fs
inc
flds
inc
jg
adc
push
aam
jg
jl
xchg
mov
push
mov
mov
in
clc
repnz
ret
repnz
jne
loopne
sahf
aas
lret
and
cmp
pop
dec
std
xchg
pop
sub
jmp
jnp
mov
dec
jbe
mov
or
sti
mov
push
repz
xor
loop
mov
loop
stc
loopne
xor
cmp
inc
jecxz
ja
aam
pop
jns
pop
inc
mov
adc
test
pop
xor
hlt
dec
and
mov
ficoml
mov
pop
xchg
gs
stos
add
adc
movsl
and
sub
addr16
lds
mov
push
or
jle
and
pop
adc
push
adc
cmpsl
shlb
xor
pop
test
xor
call
jmp
mov
push
mov
lea
jns
lods
pop
jl
lods
push
cmp
lea
pop
ljmp
fsubrp
icebp
dec
xchg
sub
push
cmp
inc
pop
dec
xchg
push
repz
jne
aad
push
mov
adcl
addr16
jmp
cmp
cs
sarb
popf
xchg
and
adc
dec
push
frstor
sbb
repz
and
sarl
mov
mov
test
dec
xchg
and
fcmovnbe
push
movb
mov
sub
jmp
adc
fisttpl
ljmp
xlat
lods
fistpl
nop
inc
gs
dec
orl
mov
fdivp
or
adc
xor
jne
inc
dec
outsl
xor
adc
mov
das
mov
repz
stos
imul
scas
out
push
and
popa
xchg
jae
mov
es
dec
adcl
dec
out
and
lret
cmp
fidivrs
sub
and
dec
rclb
in
fldl
push
adc
outsb
adc
js
mov
pop
clc
xchg
sub
adc
sbb
dec
fs
xchg
in
fsts
enter
cmp
cs
pusha
jge
cmp
adc
arpl
scas
ficompl
pop
sti
push
jecxz
sub
and
outsl
xor
mov
shll
pusha
pop
out
loopne
or
dec
push
ljmp
jecxz
cmp
jge
je
cmp
fdivp
nop
xchg
fnsave
jnp
aad
adc
cs
mov
add
sti
cltd
and
add
push
adc
cld
mov
sub
pop
adc
cli
jae
jmp
scas
cmp
jl
xlat
dec
mov
pop
mov
insl
int3
sahf
mov
pop
xor
adc
mov
aam
ljmp
mov
inc
fsubs
out
movsl
and
flds
cli
xlat
icebp
popa
push
push
push
outsl
andb
cmp
fiaddl
daa
dec
xchg
pop
pop
das
jne
and
das
push
mov
lock
rorb
les
outsb
shrl
neg
std
ljmp
add
aaa
stos
sub
cmpsb
or
int3
in
mov
sbb
push
sahf
pop
cmpl
mulb
mov
xchg
mov
out
push
cmp
adc
rorb
mov
pop
adc
adc
pop
jg
adc
fistl
pop
icebp
sbb
test
in
sub
outsb
sub
jbe
mov
jge
aam
pop
mov
arpl
mov
popa
aas
es
add
addr16
in
divb
cmp
inc
lahf
pop
std
fimull
test
and
mov
cmp
and
shrb
in
stos
mov
icebp
mov
cmp
push
adc
aam
insl
add
and
mov
in
pop
std
push
pop
pop
inc
ds
mov
pop
jl
dec
and
divl
addb
or
mov
insl
pop
jb
jle
cmp
mov
dec
add
lock
enter
xchg
sub
mov
mov
ds
xchg
scas
or
shr
fnstsw
aad
adcb
gs
cmpsb
in
jnp
mov
aam
mov
mov
fwait
mov
cmp
scas
sub
inc
movsb
add
int3
cmp
movsl
mov
xchg
lods
sbb
insl
push
jmp
in
mov
daa
cli
jmp
inc
xchg
mov
test
jp
sahf
ds
sbb
jo
lret
movsl
inc
cmp
stos
jge
dec
xchg
mov
adcb
pop
sbb
xor
cmp
pop
inc
sarb
or
adc
inc
xchg
cmc
push
cs
mov
push
cmp
mov
add
lods
xchg
push
pop
pop
xchg
dec
push
movsb
in
fidivrl
loopne
dec
xchg
and
mov
or
imul
es
pop
xchg
dec
xchg
push
cmp
dec
xchg
ds
jecxz
pushf
cmp
xor
xchg
and
xchg
in
arpl
daa
add
mov
push
mov
cmp
jae,pn
leave
test
sub
fistps
sub
cmp
fisttps
and
sub
mov
pop
movsl
dec
xor
dec
xchg
adc
cmpsb
mov
in
cmpsl
dec
loopne
mov
and
cmp
inc
daa
dec
pushf
cmp
xchg
xor
push
cmpsb
dec
add
and
jp
mov
mov
cmp
pop
mov
add
cmp
ds
movsl
dec
adcl
pop
xchg
and
cmp
push
cmpsl
ja
cmp
dec
cmp
push
movsb
jo
daa
mov
adc
xchg
and
cmpsl
dec
xor
int3
dec
xchg
sub
mov
sub
repnz
fistpl
popa
dec
xchg
push
cli
bound
adc
mov
mov
mov
pushf
lcall
xchg
sub
pop
cltd
add
xor
stos
pop
mov
pop
out
ljmp
test
mov
movsl
cmp
adc
cmp
sarb
jmp
mov
sub
scas
int3
jns
int3
add
jno
hlt
jo
aaa
push
push
mov
loop
addr16
dec
das
fs
mov
int3
lods
das
sbb
scas
xchg
out
mov
pop
push
in
popa
aas
add
xor
fldenv
inc
or
xor
jo
jns
addr16
fsubr
pop
aaa
clc
lods
inc
pop
jl
cwtl
mov
inc
popf
idivl
mov
aad
and
stos
pop
inc
into
jecxz
scas
int3
icebp
xor
fnsave
enter
pop
mov
aaa
mov
fcompl
jge
outsl
rcl
fs
sti
inc
aad
adc
addr16
jae
sub
mov
mov
addr16
jae
xor
adc
roll
mov
xchg
add
in
call
push
mov
and
sbb
scas
xchg
sti
mov
xchg
data16
add
xchg
addr16
sub
mov
clc
sarb
and
test
lock
xlat
mov
scas
aam
or
cs
or
iret
adc
dec
lds
icebp
scas
aad
dec
inc
and
jb
pop
test
jecxz
pop
test
aad
adc
pop
mov
cmp
leave
es
jo
cmp
std
sahf
and
mov
sub
mov
dec
add
je
hlt
fs
jl
xchg
iret
out
push
xchg
xchg
out
push
invd
movsl
adc
xchg
mov
lods
pop
xor
fisubrs
inc
add
inc
or
clc
xor
and
inc
testb
jecxz
mov
popf
into
lock
cld
jecxz
add
mov
jg
push
pop
ret
mov
mov
repz
loop
out
dec
or
shl
inc
imul
gs
pop
adc
xchg
sub
inc
mov
repnz
sub
sub
push
pop
pushf
dec
xor
mov
push
in
out
ljmp
push
rep
in
push
dec
sbb
xchg
mov
mov
or
mov
stos
shlb
mov
inc
push
in
pop
outsl
mov
sub
cmc
outsl
dec
enter
push
push
xchg
sub
std
call
lea
loopne
dec
xchg
sub
dec
cs
mov
xchg
mov
push
and
push
dec
outsl
xor
daa
dec
loopne
mov
sub
inc
repz
xchg
and
movsl
dec
xchg
xchg
xchg
pop
push
inc
dec
xchg
push
cmp
dec
xchg
mov
enter
push
rcll
push
cmp
dec
xchg
xor
mov
bnd
xchg
push
lock
push
cmpsl
dec
xchg
andb
cmp
jecxz
insl
push
rep
pop
in
pop
xor
imul
pop
movsb
dec
cmp
inc
pop
fidivl
pop
push
sub
fsubs
push
rorl
inc
loop
das
xchg
sub
sbb
cmp
push
mov
mov
mov
sete
sti
mov
pop
xlat
lods
movsb
stc
cmpb
cmp
lea
mov
mov
in
fwait
push
cs
cmp
push
loopne
mov
and
das
mov
roll
or
pop
loopne
pop
cmp
movsb
xor
sahf
pop
cmp
inc
out
xor
sub
in
sbb
dec
imul
mov
xchg
push
xchg
xchg
imul
sbb
in
jecxz
pop
adcb
dec
jecxz
pop
pop
cmp
enter
cmp
fnstenv
mov
xchg
add
pusha
cmp
inc
out
scas
jmp
mov
mov
xor
aam
push
pop
cwtl
stos
adc
cmc
fiadds
xchg
scas
mov
xor
xor
adcl
adc
aad
xchg
xchg
cmp
mov
imul
stc
xor
mov
lds
xchg
lret
mov
mov
mov
add
out
popf
fstps
push
outsb
push
add
xor
out
sbbl
fildl
lods
pop
arpl
dec
sub
dec
decb
sbb
mov
sbb
insl
fwait
jp
push
pop
mov
and
movsl
das
xchg
sub
ret
sub
imul
aas
mov
mov
push
jge
cmpsl
insb
rcl
fs
push
mov
outsb
popa
xchg
push
dec
rolb
mov
scas
inc
sarl
xlat
in
xchg
clc
sub
mov
inc
and
lds
inc
dec
mov
scas
xor
je
jno
mov
les
mov
xor
sahf
loope
xchg
imulb
mov
pop
push
stos
and
mov
sub
iret
dec
arpl
outsb
xchg
cmp
gs
mov
adc
int3
adc
and
and
and
std
les
arpl
xor
lahf
mov
lahf
mov
mov
sub
or
leave
cmp
adc
cmc
sub
cmc
movsl
push
jbe
clc
sti
mov
add
pusha
in
rcrb
sbb
push
mov
xor
lods
out
add
cld
das
jmp
leave
leave
test
push
inc
cmpsl
mov
push
decb
xor
je
test
mov
dec
cltd
in
push
adc
arpl
cmpsl
ja
insl
or
cmp
adc
int
stos
xchg
cmp
mov
inc
out
push
cmp
cwtl
fwait
lea
add
cmpsb
cmc
push
adc
rcl
xchg
jne
nop
add
inc
dec
push
in
mov
inc
push
push
inc
jne
sub
xor
lret
and
adc
out
fimuls
pop
jns
in
mov
out
or
inc
pop
enter
mov
and
and
leave
push
add
and
lods
call
cmp
add
and
popa
andl
fsubrl
aad
push
or
insb
cwtl
push
push
ret
cmp
lods
pop
mov
fwait
pop
add
hlt
mov
adc
jecxz
daa
and
icebp
movsl
xorb
xchg
pop
jecxz
jmp
ljmp
push
adc
lock
push
inc
cwtl
mov
sub
mov
pop
je
cmp
es
movsb
dec
in
inc
in
pop
xchg
and
movsl
dec
loopne
jno
mov
sub
xlat
pop
ds
xchg
mov
test
out
push
push
cmpsl
dec
out
inc
push
in
xchg
mov
mov
hlt
push
xor
mov
mov
out
in
out
test
dec
pushf
dec
lock
data16
jg
fnstcw
mov
mov
sarb
and
adc
xchg
push
pop
add
scas
loopne
insl
pusha
xor
and
out
jno
push
adc
dec
pushf
leave
or
xor
ljmp
pop
cmp
push
pop
sub
insl
push
cmp
cmp
call
xchg
and
xchg
and
loopne
push
and
pop
pop
pusha
in
in
leave
aas
dec
xchg
sub
movsl
cmp
xchg
cmp
loope
stos
sahf
dec
imul
lds
pop
cmp
cmp
mov
pop
sbb
sti
mov
mov
push
push
adc
jp
xchg
push
pop
pop
adc
popf
push
fsubrs
xor
ljmp
pop
push
push
xor
hlt
mov
mov
sub
pusha
push
out
out
xchg
ret
sbb
shlb
jle
mov
inc
fdivs
sbb
daa
cmp
add
adc
pushf
add
add
jbe
subl
fbld
xchg
in
add
sub
fistpl
aaa
nop
dec
aam
imul
cmp
mov
cmpsb
outsl
fnstenv
mov
test
xchg
lcall
imul
cmp
rcrb
stos
pop
mov
imul
push
mov
movsl
cwtl
sub
jg
adcb
mov
addr16
inc
pop
adc
aam
stos
arpl
mov
aad
push
adc
pusha
mov
mov
mov
test
aaa
fiaddl
test
cld
adc
mov
inc
or
ljmp
dec
mov
in
inc
push
adc
std
sahf
sahf
ljmp
clc
in
movsb
adc
adc
add
lods
aas
outsl
fdivs
jmp
mov
push
adc
jbe
aas
cltd
sbb
pop
cmp
adc
xor
mov
pushf
ficoms
pop
pop
stos
aam
push
adc
pop
inc
lea
cmp
lods
insb
sbb
ja
jecxz
xor
test
cmpsl
adc
xchg
mov
pop
test
push
or
fstpl
mov
pop
aad
pushf
sti
mov
pop
lods
sti
inc
stos
aaa
mov
cmp
dec
and
mov
xchg
mov
xchg
adc
gs
xchg
dec
fs
outsb
cmp
in
and
or
repnz
test
sti
jnp
or
cwtl
loop
push
xor
pop
stc
pop
xchg
push
cmpsl
js
sti
and
dec
cs
ljmp
inc
pop
mov
jo
pusha
call
xchg
cs
mov
pop
or
mov
ljmp
push
sti
cltd
in
push
fnsave
push
adc
cvtsd2ss
mov
lret
xor
lret
sar
fs
fsts
cmp
dec
out
shll
fs
push
and
out
push
mov
sub
mov
xchg
ljmp
push
pop
aas
push
movsb
cmp
mov
xchg
and
adc
dec
xchg
mov
mov
jae
fstps
mov
movsl
ds
pop
sub
sbb
dec
xchg
sub
cmpb
cmpsb
push
sub
nop
movsl
or
outsb
inc
ret
int3
xchg
and
insl
mov
loopne
or
dec
call
sbb
cmp
sbb
dec
cmp
rcrl
push
mov
push
xor
and
sbb
loopne
jmp
pop
ficoms
pop
cmp
mov
loopne
test
imul
in
imul
sub
xlat
imul
push
jp
and
cmpsl
dec
out
mov
pop
leave
push
lods
pop
push
push
scas
imul
dec
test
sub
aad
pushf
cmp
nop
mov
dec
loopne
pop
ds
lods
pop
mov
xchg
inc
out
pop
dec
lock
mov
add
jle
cmp
adc
mov
pop
jnp
cli
rorb
xchg
mov
fsts
dec
push
fiadds
arpl
out
imul
adc
mov
pop
jae
pop
ja
fidivs
mov
adc
in
mov
lea
call
clc
xchg
jo
daa
dec
in
mov
push
push
mov
and
adc
in
mov
addb
and
imul
fiadds
push
adc
sbb
push
push
cmp
and
pop
int
aad
testl
mov
cmc
sub
leave
mov
imul
imul
sub
movb
mov
test
mov
push
push
add
ja
sbb
pop
adc
iret
test
jnp
cwtl
loopne
js
inc
sahf
and
jmp
sub
dec
aam
pop
js
and
mov
dec
adc
fxtract
pop
xor
add
push
xchg
daa
jae
daa
mov
fnstenv
adc
movsb
mov
rcrl
push
ja
es
cs
leave
inc
lret
jo
fcoms
sbb
pop
sbb
jnp
bound
fisubl
shr
test
add
jnp
call
pop
push
xor
iret
cltd
add
jae
xchg
test
pop
and
pushf
cmp
mov
lds
sub
or
sti
and
and
ret
out
push
shr
jmp
fs
inc
int3
adc
scas
aam
mov
sbb
frstor
inc
push
adc
mov
repnz
sub
repz
sub
push
and
inc
xchg
mov
mov
scas
jo
jno
into
mov
dec
inc
lods
jbe
inc
nop
repz
mov
fwait
iret
test
ljmp
outsb
testl
adc
pusha
sub
mov
orl
flds
into
iret
fs
cmp
dec
and
inc
aas
mov
sub
sub
xchg
ljmp
outsb
jl
ds
dec
mov
jae
xchg
mov
lret
dec
scas
or
in
out
mov
xchg
dec
out
lds
fldl
clc
jae
sub
cmp
pavgb
out
les
xchg
mov
inc
sub
iret
sar
mov
mov
xchg
cmp
xchg
cmc
insb
jmp
xchg
or
fwait
and
ret
fs
pop
mov
leave
add
daa
leave
mov
in
pop
mov
xor
ss
call
cli
sub
sti
jge
dec
ds
icebp
sub
push
cmpsl
cmp
fidivl
dec
cmp
jle
sbbl
scas
push
adc
popa
mov
cmp
push
loope
std
std
out
push
xchg
cmp
cli
push
movsb
dec
cmp
dec
out
mov
ja
cmp
cmp
push
movsb
pop
loop
dec
xchg
push
sub
xor
pushf
cmp
outsb
xchg
and
shl
add
out
sahf
dec
xor
lods
dec
enter
push
cltd
xchg
sub
sbb
xor
dec
xchg
mov
loopne
dec
xchg
sub
dec
push
xchg
mov
push
and
xchg
sub
dec
xor
dec
out
cmp
lcall
cwtl
divl
push
xlat
cmp
sub
pop
or
dec
xchg
push
mov
sub
xor
popa
xor
sti
sub
cmp
sub
pop
aaa
jo
xchg
and
sbb
xchg
mov
xchg
jb
inc
xchg
and
pop
mov
adc
cmp
testl
push
cmpsl
cmp
jmp
in
cmp
cmp
sub
jb
sub
dec
aas
mov
loope
cwtl
xchg
sub
cmc
pushf
leave
data16
es
dec
xchg
sub
xor
aas
pop
xchg
es
cltd
push
movsb
dec
mov
and
into
add
aas
sub
xchg
and
fnsave
xchg
addr16
loope
jl
mov
cwtl
es
rclb
xor
cwtl
inc
popf
sub
sub
das
mov
mov
idivl
mov
testl
divb
push
lea
adc
sbb
imul
push
adc
data16
repnz
xlat
test
push
subl
and
xor
cmc
inc
sahf
call
arpl
nop
rclb
aaa
outsb
jne
xchg
cmpsl
fmull
loop
popf
iret
xchg
data16
pop
mov
push
pop
pusha
bswap
lret
shrl
xor
push
int
jnp
lock
mov
movsl
sbb
inc
stc
aam
fs
dec
sub
out
cmpsb
loopne
xchg
inc
mov
jbe
push
sub
fsub
mov
mov
and
int
sbb
mov
xor
aam
stos
jne
adcl
cli
mov
sbb
dec
jecxz
mov
ljmp
and
inc
sti
mov
inc
arpl
mov
inc
lods
aam
lds
adc
mov
mov
lock
aad
mov
shll
in
mov
xor
insl
mov
daa
jecxz
in
push
mov
xchg
adc
push
adc
dec
pop
or
jbe
or
mov
daa
inc
dec
enter
pusha
push
lret
shrb
xchg
jl
xchg
sahf
test
inc
adc
mov
pop
or
js
and
out
xor
leave
mov
or
inc
dec
and
inc
aas
lret
push
cld
sbb
repz
mov
dec
xchg
mov
dec
icebp
std
push
or
mov
dec
std
xchg
mov
rcrl
xchg
cli
and
nop
push
sti
and
cmc
and
and
xchg
push
push
sub
jmp
inc
pop
xchg
jge
cmp
addb
sub
lret
call
or
insl
sbb
out
jmp
lahf
pusha
scas
sbb
scas
xor
jo
in
mov
pushf
mov
test
and
fidivl
in
bound
and
add
shl
leave
xchg
add
aaa
sub
imul
pop
mov
and
mov
push
and
lds
dec
and
bound
push
lods
xor
and
cmpsb
sbb
out
fwait
sbb
int3
stos
cs
lret
cmp
push
movsl
jae
sub
dec
call
xor
push
cmpsl
mov
fidivs
leave
bound
push
lods
or
cs
std
repz
adc
dec
push
fisubs
xchg
pop
xchg
xor
in
lods
aad
sub
out
loop
movsb
dec
push
pop
scas
xchg
and
push
sarl
out
push
cmpsl
dec
mov
push
in
out
lods
xchg
sub
cmp
ret
dec
in
adcb
xchg
sub
mov
cmp
xchg
mov
dec
xchg
outsb
scas
xchg
and
loopne
mov
cmp
jbe
xchg
jae
mov
lods
xchg
push
pop
pop
es
push
movsb
insl
call
out
pop
sbb
add
cmp
out
jno
in
add
movsl
dec
call
loopne
dec
xchg
and
sub
mov
in
pop
cmpsl
dec
out
dec
and
leave
xchg
xor
jo
push
or
push
and
xchg
and
sub
mov
adc
xchg
sub
in
cmc
pushf
cmp
dec
pusha
pop
jb
cmp
stc
stc
sub
out
loope
sti
xchg
and
xchg
sub
sbb
pop
popf
stos
fidivs
ffreep
dec
push
roll
sbb
and
ss
dec
xchg
sub
or
sub
cltd
push
pop
jbe
aad
mov
mov
fbstp
lods
fsub
out
xchg
cs
mov
inc
ss
mov
sub
pop
fs
aas
inc
popf
pop
hlt
inc
push
js
cmp
fdivl
xor
insl
sti
stos
mov
inc
xor
dec
mov
mov
decl
mov
loopne
scas
shll
jne
push
mov
pop
cmp
lods
sbb
nop/reserved
pushl
fs
jnp
loop
sbb
pushf
out
pop
inc
and
nop
sub
mov
sub
jmp
sub
jl
xor
lods
lds
xchg
mov
fsubs
xchg
js
adc
mov
aad
daa
mov
mov
mov
loope
stos
pop
push
jb
pop
mov
loopne
ljmp
push
fldcw
add
nop
aad
adc
mov
adc
les
stc
sub
mov
add
and
mov
adc
xor
mov
mov
push
jecxz
jnp
dec
cmp
or
add
popf
inc
scas
fnstsw
test
inc
cmp
sbb
push
ljmp
adc
daa
and
push
call
jo
mov
push
jns
into
and
cmp
sarb
test
pop
test
lahf
test
es
call
inc
pause
mov
out
int
sahf
cmp
mov
and
dec
loopne
sti
data16
les
add
movsb
aad
dec
xchg
mov
int
insl
push
jns
movsb
adc
mov
movsb
movsb
adc
adc
lock
aam
insb
movsb
mov
xorb
mov
aad
and
dec
and
inc
aas
mov
cmp
sub
dec
icebp
mov
add
cmp
in
test
gs
cmpsl
subl
adc
mov
jecxz
cli
xor
out
adc
xchg
stc
out
mov
pop
in
repz
pop
fmul
mov
pop
dec
xor
adc
fsubp
lock
inc
mov
mov
mov
es
or
push
repz
jno
xchg
or
sbb
push
push
jo
cmpsb
aas
add
fstpt
leave
adc
adc
inc
adc
out
addl
fsubrs
inc
out
cs
mov
push
cmp
dec
xchg
ds
aaa
dec
pushf
dec
or
enter
out
std
movsb
dec
xchg
adc
cmpsl
mov
and
pop
fstpt
out
push
cmpsl
dec
movsl
xorl
rorl
cmp
xchg
dec
cmp
pop
push
adc
dec
pushf
cmp
xchg
sub
mov
sub
xor
and
loopne
jns
sub
sub
pushf
cmp
insb
fidivl
scas
fisubl
pop
jns
pop
and
xchg
and
shlb
jg
push
cmpsl
loope
dec
fucom
leave
xchg
sbb
xchg
fiaddl
aaa
xchg
sub
xor
and
stos
lahf
dec
popa
ds
ret
pop
mov
sub
xor
push
xchg
and
loopne
dec
xchg
and
cmpsl
fldt
enter
xor
and
pop
mov
pop
mov
push
cmp
push
cmpsl
pop
aaa
test
in
call
std
xlat
cmp
sub
jo
daa
mov
and
aad
popf
cmp
jae
rcrb
adcl
and
xchg
and
cmp
pop
dec
xor
cmp
xchg
jb
enter
xchg
sub
adc
sub
repnz
adc
sub
lods
fidivl
lret
aam
jecxz
mov
pop
add
jecxz
dec
xchg
daa
jae
and
cmpsb
dec
aaa
stos
mov
xchg
pop
out
mov
mov
out
loope
and
mov
jne
jmp
jmp
stos
inc
fwait
mov
inc
popf
pop
les
inc
adc
cs
andb
push
mov
ss
into
out
bnd
out
jbe
cs
test
ss
call
outsl
scas
sbb
sbb
test
insl
aaa
add
rcr
out
scas
sbb
sbb
jnp
pop
loop
jle
mov
pop
xor
push
cwtl
and
dec
pop
ret
pop
aaa
sahf
sub
cmpb
int
adc
scas
sub
stos
aam
pop
mov
lods
pop
gs
rcrb
jae
push
xchg
cs
push
pop
in
dec
mov
adc
stos
lea
dec
adc
in
dec
xchg
xchg
sarb
test
or
add
movsb
and
rcl
mov
aad
fs
jmp
xchg
lea
enter
jbe
xor
jae
loop
lds
enter
adc
and
add
push
sahf
pop
mov
scas
pop
icebp
sub
jbe
sahf
ljmp
rclb
pusha
adc
add
iret
adc
dec
pop
dec
mov
lret
insb
mov
sub
xor
sub
cmp
xor
les
xor
push
popf
cmp
cwtl
ja
mov
add
push
xor
daa
rorb
pop
sti
mov
loopne
addr16
add
push
adc
mov
push
ss
das
and
xchg
je
push
inc
add
ds
shll
inc
dec
fidivl
dec
test
sub
cmp
cmp
lea
push
jle
add
call
xchg
dec
icebp
and
and
sahf
jnp
jp
add
xor
cltd
loop
stc
in
out
movsl
xchg
stc
and
push
xor
jle
incb
mov
pop
xchg
xor
sub
sub
mov
mov
xchg
pop
dec
xor
mov
test
rcl
jmp
push
mov
imull
or
push
jmp
add
lahf
pop
insl
jp
adc
mov
jmp
lret
adc
movsb
leave
data16
inc
adc
shll
mov
cmp
mov
stos
dec
xchg
sub
push
movsb
out
sahf
dec
push
dec
out
shlb
bswap
xchg
mov
add
and
popa
lods
xchg
push
pop
pop
mov
adcb
fs
sub
ja
xchg
and
movsl
dec
subl
dec
out
out
and
out
stc
xchg
sub
out
fisubs
leave
push
sub
xor
in
pop
das
test
xor
push
adc
xchg
and
pop
pop
ds
movsb
xor
pop
lea
in
roll
insl
fidivl
cmp
xchg
and
adc
cmpsb
out
insl
lods
xchg
push
pop
ret
imul
leave
xchg
and
cmpb
push
movsb
dec
out
cmpsb
pop
jge
mov
xchg
push
les
push
loop
cmp
xchg
sub
icebp
xor
xchg
and
xchg
jmp
call
decl
pop
mov
xchg
sub
xchg
sub
jb
loopne
sbb
in
xchg
popa
xorl
stc
push
mov
mov
mov
movsl
dec
push
ds
dec
loopne
pop
ret
dec
cmp
das
mov
xchg
inc
push
and
pusha
lods
xchg
push
pop
pop
ret
mov
push
adcl
cmpsb
dec
lahf
dec
add
xchg
es
insb
dec
push
cmpsb
cmp
popf
push
cmpsl
dec
xchg
es
daa
and
pop
mov
dec
in
les
jnp
imul
jmp
add
sarb
push
and
in
pushf
push
fiadds
insb
out
stos
inc
popf
pop
or
sub
pop
wrmsr
es
test
lret
xchg
xchg
add
decl
mov
dec
int3
fisttps
lea
cmp
dec
pop
adc
dec
mov
fcomi
fldenv
push
jmp
push
insl
fwait
add
jns
mov
fsubr
xchg
addr16
mov
and
mov
and
outsb
and
mov
mov
jg
in
cltd
scas
int3
jecxz
scas
pop
mov
ret
sbb
mov
fmul
in
lret
sub
loope
adc
scas
enter
pop
sbb
cmp
fbstp
adc
mov
push
lock
mov
xchg
and
mov
sbb
lds
cs
push
adc
jb
add
decl
in
fcmovu
push
sub
roll
lret
pop
sub
bnd
push
rclb
repz
xchg
addr16
enter
clc
rep
sti
sub
mov
inc
and
adc
icebp
xor
iret
adc
iret
fcmovnbe
mov
mov
ss
aaa
jg
pushl
fimuls
and
mov
or
shll
cmc
fidivs
movsl
add
push
scas
lcall
push
xor
test
imul
cmc
sub
std
add
mov
jmp
cmpsl
call
xchg
push
rcrb
jl
add
insl
ljmp
movsl
decb
or
leave
cmp
inc
dec
and
repnz
lea
aas
mov
cmp
out
xchg
dec
fs
insb
ds
mov
xchg
dec
xchg
dec
mov
mov
jns
das
js
xchg
cli
outsb
or
adc
adc
and
push
notl
cltd
jecxz
mov
pop
adc
dec
xor
es
out
mov
in
dec
hlt
pop
aaa
fwait
iret
pop
push
shrb
jecxz
insb
mov
xchg
add
loopne
lods
sbb
repnz
push
in
insl
sub
fidivs
cmp
push
cmpsb
ljmp
in
pop
mov
adc
add
xor
into
loopne
popa
or
sub
aad
dec
xchg
xor
pop
int
sub
int3
sbb
mov
pop
loopne
pop
sti
lea
mov
xor
cmpsl
dec
pushf
cmp
dec
xchg
test
mov
sub
sub
and
xchg
push
xor
push
mov
pop
jl
push
movsl
xor
jno
sub
pop
or
aad
pop
cmp
data16
cmc
push
lods
mov
dec
sub
mov
stos
mov
fcmovnu
insb
push
clc
mov
mov
in
mov
xchg
lods
pop
mov
push
in
movsb
dec
xchg
push
cmp
pop
lock
cmp
cmp
fidivs
loopne
shl
fldt
sti
popf
xor
jnp
mov
mov
xchg
jb
dec
int3
pop
leave
sbb
test
push
movsb
out
scas
lea
pop
jne
ret
cli
cmpsl
imul
dec
sbb
push
cs
cmpsb
out
mov
fidivl
or
xor
cmp
dec
movsl
rorl
or
fdivrs
dec
xchg
push
mov
pop
jno
pop
test
out
cmp
sbbb
ret
adc
pop
dec
mov
push
inc
inc
in
lea
or
dec
sbb
aas
fwait
pop
loopne
cmp
xchg
es
js
loope
cmpsl
dec
in
mov
xor
stos
sub
jle
sbb
push
and
dec
and
dec
mov
cs
lea
aad
cmpsl
or
jbe
adc
pop
lret
bound
insl
mov
pop
out
dec
sbb
lods
divl
dec
iret
jno
sbb
pop
push
mov
inc
scas
xlat
mov
jb
lods
nop
sbb
xorb
in
and
or
sbbl
shll
sahf
fldenv
cmp
fsubrp
push
sub
mov
and
les
mov
push
sub
mov
mov
rcr
loopne
adc
and
inc
ror
jne
mov
pop
push
dec
and
test
sbb
sub
lret
das
fldt
shll
movsb
jns
push
mov
sahf
lret
push
jae
mov
dec
inc
jl
sub
out
push
je
inc
fwait
xlat
out
or
inc
mov
rol
mov
sbb
push
mov
fmul
xor
xchg
mov
mov
xchg
adc
mov
push
clc
jecxz
and
or
adc
adc
int3
fwait
pop
ret
int
scas
sub
push
jbe
add
sub
aad
sub
pop
lods
mov
mov
fs
jns
fldenv
sahf
add
sub
xor
push
cmpsl
mov
lods
sahf
push
mov
jle
sti
adc
movsb
test
stos
and
out
jl
sbb
adc
mov
mov
movsb
popa
movb
inc
jno
movsl
xor
ljmp
dec
inc
test
push
or
flds
mov
push
in
int3
cmp
add
loop
and
sbb
mov
jae
push
sti
or
cltd
loop
lds
push
sub
pop
psubw
xor
push
jmp
and
icebp
lds
mov
fisttpl
sbb
mov
mov
dec
out
pusha
or
jne
push
test
stos
push
mov
cmc
enter
addr16
inc
out
add
push
adc
and
push
fdiv
jmp
shll
cmp
loop
das
inc
jge
xchg
and
sbb
ss
mov
cmpsl
pop
repnz
lea
pusha
test
lods
push
hlt
or
insb
pop
in
loopne
adc
and
cmp
arpl
inc
outsl
in
mov
jae
and
pop
adc
test
loop
das
pushf
mov
gs
mov
xchg
pop
fisubrs
xchg
dec
test
mov
fcmovnu
dec
mov
cltd
lods
pop
cmp
sbb
sahf
test
xlat
clc
mov
xor
dec
xchg
mov
pop
add
cmp
icebp
movsb
pop
mov
and
dec
cmp
call
dec
xchg
popf
ss
stc
ret
das
pushf
fisttps
inc
data16
movb
mov
sub
jae
pushf
in
pop
loopne
pop
xor
pop
sub
imul
clc
out
cli
orl
add
sti
sti
shll
mov
test
sahf
mov
dec
push
jno
sub
ds
push
pop
add
bound
xchg
and
pop
fnstsw
sub
pop
adc
repz
cmp
mov
adc
es
adc
insb
lods
sub
push
andb
cmp
sub
push
add
push
insb
push
cmp
dec
xchg
push
inc
push
mov
pop
mov
dec
jle
ret
aaa
add
mov
mov
mov
mov
outsl
cs
movb
xor
adc
pop
jge
insl
xor
sbb
in
dec
xchg
and
lods
fsincos
fdivl
lahf
cvtdq2ps
fildll
es
pushf
aas
movsb
aas
xchg
lock
dec
cmp
mov
push
or
inc
add
mov
iret
fstl
and
mov
fnsave
xchg
int3
call
add
stos
mov
out
sbb
cmpsb
dec
lods
sbb
mov
jne
loope
in
lret
lods
cmp
or
or
ljmp
fucomp
pop
aaa
xchg
fs
rclb
mul
and
xorl
scas
shrl
lods
test
es
add
cs
pop
mov
jno
outsb
lret
inc
adc
cmpsl
pop
std
mov
push
adc
scas
lahf
das
push
icebp
pop
les
mov
in
inc
adc
add
iret
call
mov
out
lahf
sub
cmc
dec
add
push
lcall
shll
mov
mov
stos
sbb
add
daa
sbb
and
dec
and
xchg
test
jl
and
jae
loope
hlt
push
jecxz
int3
cwtl
pop
mov
xlat
fnstsw
pop
mov
add
stc
xchg
pusha
jmp
cmp
or
out
mov
jb
sarb
movq
add
rcl
scas
jo
push
int
push
adc
mov
lea
test
inc
das
pushf
test
stos
mov
test
pop
in
adcb
adc
gs
sti
mov
stos
mov
leave
xor
dec
js
mov
leave
mov
mov
fimuls
int3
mov
in
cs
les
dec
pop
mov
dec
add
mov
push
xchg
sub
jo
or
imul
out
mov
notl
sbb
xchg
cmpsb
or
daa
out
stos
repnz
push
adc
inc
add
mov
mov
dec
xchg
inc
mov
cmp
adc
sti
jmp
dec
mov
mov
dec
clc
es
xchg
mov
icebp
jae
push
movsl
lret
jno
lret
cwtl
mov
pop
aas
leave
adc
insl
pop
pushf
cmp
push
push
sub
sub
pop
cmp
and
call
and
dec
mov
sub
enter
push
outsb
stos
sahf
dec
outsl
test
xchg
sub
mov
mov
push
shlb
push
outsb
in
into
xchg
and
loopne
icebp
xchg
sub
cmp
adc
js
and
adc
mov
jmp
call
dec
fisubrs
cs
lret
jno
mov
pop
loopne
pop
pop
nop
dec
xchg
pop
jbe
adc
adc
loopne
mov
sahf
in
out
cmpsl
gs
lock
sub
into
xchg
and
xchg
cmp
push
pushf
cmp
dec
mov
lock
out
mov
push
sti
aad
inc
and
dec
add
xor
in
xchg
and
movsl
dec
xchg
test
mov
cmp
dec
out
pop
mov
pop
and
dec
pushf
cmp
inc
nop
and
xlat
clc
sarl
pop
push
dec
xchg
xor
cmp
jno
jno
jae
cmpsl
dec
pushf
xchg
gs
xchg
and
sahf
cmp
mov
push
jge
sahf
dec
imul
aad
push
cmp
icebp
sub
mov
sbb
fsubl
add
sbb
push
cmpsb
mov
inc
repnz
xchg
mov
sub
push
aad
adc
dec
xchg
xor
imul
pop
aas
sub
xor
test
out
xor
and
and
and
pop
es
dec
xchg
ss
sbbb
stos
inc
out
insb
out
stos
inc
popf
xchg
mov
gs
sub
mov
pop
scas
aas
fiaddl
stc
xchg
sbb
pop
push
add
and
lods
push
mov
jecxz
loope
adc
imulb
aam
mov
pushf
inc
out
into
push
outsl
mov
pop
mov
and
xor
mov
ljmp
or
out
mov
imul
inc
fldt
lahf
xor
movb
sbb
sub
stc
fdivs
repnz
and
xor
pop
mov
shrl
stos
pop
mov
jae
add
push
ror
shrl
adcb
out
push
mov
push
imul
sbb
xor
ror
jge
sbb
cmp
insl
inc
mov
stos
fidivrl
shrl
push
loopne
daa
mov
popf
or
xchg
adc
bound
xchg
lock
clc
mul
mov
rorb
sbb
xchg
dec
adc
aad
and
cmp
jge
mov
loope
sub
inc
insb
jmp
pushf
push
push
insb
dec
imul
je
in
sahf
sub
jb
xor
rcrb
in
popa
cwtl
dec
mov
scas
sub
adc
hlt
inc
pop
or
xchg
jl
pop
in
shlb
add
jbe
jns
and
push
add
sub
clc
xor
inc
and
cmp
mov
inc
inc
ds
out
imul
jge
lret
dec
icebp
add
cltd
cmpb
ljmp
inc
mov
xor
ficoml
mov
cltd
loopne
fldz
test
adc
jmp
test
mov
cmpsb
inc
hlt
jp,pt
sub
jmp
ret
push
inc
xor
mov
popf
repnz
jge
imul
fnsave
or
jmp
cs
popf
stos
mov
inc
pop
adc
or
sub
push
into
add
or
fucom
stos
ds
jb
ds
inc
xchg
sub
mov
mov
mov
and
mov
add
nop
ja
and
jle
cmp
mov
cmp
shll
test
pop
mov
fdivrp
xlat
sti
arpl
loope
dec
xchg
push
icebp
jne
jno
lea
and
mov
push
jae
adc
pop
loopne
cmp
fcom
xchg
push
inc
pop
shrb
fs
push
adc
outsl
xchg
adc
add
movsb
dec
out
call
mov
pop
repnz
mov
pushf
mov
or
sub
jae
in
fnstcw
sbb
call
mov
push
ficoml
push
jbe
inc
push
clc
jnp
inc
jbe
xorl
mov
lret
adc
adc
xor
xchg
fisubrs
sti
popf
aam
outsb
pcmpgtw
cmp
xchg
std
fs
test
lock
xor
fdivrl
fisttpll
adc
ljmp
mov
adc
dec
pop
mov
pop
jo
pop
mov
lods
loopne
pop
aad
adcb
dec
xchg
pop
pop
pusha
inc
gs
outsl
pop
mov
pushf
cmp
cmp
push
fidivrl
daa
imul
lahf
cmp
repz
aam
sub
sub
adc
xchg
daa
cmp
cmp
xchg
lds
mov
and
sub
in
jle
in
mov
in
mov
ja
mov
and
sbb
leave
adcb
mov
mov
sbb
pushf
pop
push
push
cmc
mov
arpl
call
xchg
cltd
sar
incl
or
pushf
adc
and
in
mov
inc
ja
dec
mov
lods
xchg
pop
sub
movsb
outsb
fwait
popa
sub
lods
fs
ljmp
mov
scas
pushf
movsl
shll
adc
and
clc
sub
push
sub
ds
adc
dec
xchg
sub
jecxz
shll
pop
sbb
sbb
push
insb
pop
das
or
shrb
xchg
jns
pop
je
xor
in
loope
and
lret
dec
and
movsl
pushf
sub
or
pop
dec
int3
jno
inc
andb
inc
inc
scas
jmp
call
mov
push
push
xchg
add
hlt
and
mulb
xor
push
inc
stc
dec
mov
enter
cmp
jle
icebp
xchg
push
ljmp
cwtl
sub
and
mov
jg
pop
jmp
push
mov
int3
cli
cs
mov
out
pop
xor
test
popf
dec
push
sub
push
pop
scas
lods
and
ds
sub
sahf
mov
in
pop
push
sub
xchg
dec
fistpl
dec
dec
mov
dec
mov
add
les
mov
and
mov
dec
mov
loopne
insl
addb
inc
jecxz
ds
adc
in
outsb
add
mov
dec
push
jp
sub
in
mov
ds
pop
fdiv
mov
pop
addl
pop
dec
idivb
imul
mov
in
pop
test
popa
cmp
and
out
mov
loope
jne
cltd
loop
into
xor
fndisi(8087
dec
das
out
pop
clc
mov
stc
mov
xor
repz
movzbl
ds
adc
mov
add
outsl
loop
cmp
sbb
fcomps
pop
sbbb
es
loopne
dec
bound
addr16
lret
dec
xchg
loope
sub
mov
les
shlb
fdivrs
movsl
mov
fists
inc
pusha
dec
cmc
pop
mov
xchg
movsl
or
cs
sarb
movsl
mov
and
dec
dec
pushf
dec
shr
stos
test
xor
lods
xchg
je
fisttpl
repz
adc
mov
xlat
lods
or
call
cmp
fwait
mov
mov
xchg
movsl
call
stos
mov
in
popa
push
lock
lods
or
xchg
and
xchg
xor
mov
mov
push
enter
ror
outsl
pop
loopne
cmp
lret
out
sahf
mov
xchg
pop
in
out
pop
sbb
push
movsl
ds
pushf
jmp
fisubrl
repz
outsl
mov
in
mov
or
aas
sub
ss
fisubrl
in
xor
clc
addr16
call
pop
mov
xorl
enter
push
fstpl
push
scas
mov
fildll
ss
mov
push
sti
cltd
test
or
imul
pop
ljmp
rcrb
pop
arpl
fdivs
loopne
dec
xlat
ret
popf
test
pop
inc
or
cmp
and
mov
xlat
cmpsl
dec
xchg
pop
jae
adc
aas
push
adc
mov
lds
hlt
insl
outsl
fnstenv
adc
cwtl
push
out
popf
inc
in
mov
in
xchg
mov
out
repnz
shll
sbb
lea
into
pop
adc
stos
fdivl
dec
inc
popa
xor
fwait
and
fxch
push
shll
push
push
lret
pop
addr16
cmp
add
mov
mov
stos
popf
jnp
inc
test
loope
adc
inc
sub
jl
in
iret
nop
add
mov
lea
rolb
adc
mov
sahf
jl
loopne
mov
lods
repnz
sbb
push
loopne
lcall
in
fisubl
mov
ficompl
aad
bound
daa
and
adc
ret
dec
fwait
mov
push
inc
adc
pop
or
push
mov
nop
dec
cmp
adc
fstpt
out
pop
pop
dec
sbb
pop
insl
add
pop
stos
inc
jbe
sub
inc
lock
or
int3
into
xor
notb
dec
pop
or
dec
jl
pop
xor
dec
test
lds
pop
adc
mov
jbe
adc
sbb
jno
sbb
dec
mov
sbb
jge
in
adc
jecxz
scas
ljmp
inc
loop
in
fcomi
scas
lea
insb
int3
adc
roll
adc
cmpsb
xchg
mov
sbb
pop
cmp
mov
pop
stos
inc
adc
js
pop
adc
cwtl
cs
inc
scas
repz
cs
push
adc
stos
cmove
xor
pop
adc
test
loope
out
inc
push
push
popf
jmp
sbb
xchg
outsb
xchg
inc
mov
or
pop
adc
pop
sub
add
or
pop
shll
push
ret
pop
adc
xchg
dec
fs
dec
fldl
adc
xchg
push
outsl
mov
stos
mov
testl
xchg
push
pop
cwtl
loop
outsl
rorb
sar
pop
adc
mov
fucomp
rcl
fcompl
mov
or
dec
cmpsl
cmp
adc
cmp
xor
arpl
pop
xor
insl
lcall
or
sub
pop
adc
mov
daa
dec
mov
loop
repz
xchg
push
sub
leave
xchg
sbb
pop
adc
les
sub
cmp
sbb
fs
imul
mov
mov
xor
and
pop
aad
lock
xchg
sbb
out
push
mov
lods
fldcw
dec
and
xor
pop
adc
repz
jno
mov
adc
cs
mov
sub
mov
movsb
jmp
adc
xor
jno
push
insl
cs
mov
sahf
dec
fidivl
xor
add
xchg
or
mov
push
jle
and
test
xchg
sub
mov
inc
test
lods
pop
mov
push
push
movsb
dec
out
xchg
dec
xchg
push
dec
loopne
push
xchg
sub
int3
stos
mov
cmp
hlt
push
push
movsb
cmp
adc
loopne
mov
and
mov
ss
xchg
lock
adc
xorl
mov
pop
mov
pop
jae
adc
mov
inc
xchg
and
mov
mov
sub
mov
pop
mov
cmpsl
scas
pop
mov
add
mov
inc
pop
dec
xchg
sub
push
mov
stc
out
lahf
jge
push
xchg
pop
mov
aas
or
outsb
xor
push
movsb
lahf
lods
cld
jmp
out
scas
jg
push
in
sub
sbb
xor
lods
repz
movsb
dec
inc
test
xor
xchg
popa
in
jo
sub
jne
je
pop
mov
fdivrp
subl
les
shll
in
popf
mov
pop
jl
and
pop
push
sbb
inc
popf
pop
div
push
out
js
and
cmp
test
lods
or
xor
xchg
and
clc
inc
orb
and
lds
insl
lcall
cmp
shrb
jbe
mov
adc
lcall
sub
mov
outsb
xchg
fxch
sti
jns
in
pop
inc
sahf
mov
push
cmp
arpl
cli
mov
mov
adc
stos
pop
mov
push
outsb
popa
mov
ret
cmp
scas
xor
movsl
js
stos
pop
mov
loop
push
push
data16
and
sbb
insb
mov
pop
cmp
cmpsl
sub
add
fldl
bound
mov
push
filds
movsb
jb
jne
iret
inc
test
mov
lret
aam
or
icebp
scas
sbb
ljmp
adc
push
xchg
xor
dec
jmp
jne
inc
in
mov
mov
mov
sbb
aam
fdivl
jmp
jne
aaa
xor
aad
out
cmp
inc
mov
and
and
pop
dec
cltd
and
push
loop
mov
addr16
in
adc
inc
xchg
sbb
stc
mov
jmp
lret
pop
lahf
inc
mov
and
cmp
mov
inc
and
mov
mov
push
pop
fs
sbb
xchg
or
and
pusha
or
or
lock
movsl
je
pop
inc
inc
leave
data16
dec
push
mov
and
dec
push
inc
jbe
jno
mov
dec
loopne
lock
dec
mov
ds
mov
iret
push
ret
and
mov
and
div
lea
insb
fnstsw
add
scas
repnz
test
dec
mov
mov
faddl
repnz
scas
aaa
cmp
cli
mov
fsts
mov
push
xchg
lods
out
jb
pop
jle
nop
mov
push
xor
jecxz
or
outsb
add
rcr
xor
mov
mov
adc
std
adc
mulb
aas
push
adc
push
xchg
fidivl
loop
das
and
pop
out
mov
jmp
or
mov
es
ficoms
loop
pop
mov
loopne
mov
cmp
and
pop
mov
lahf
add
test
adc
loopne
pop
pusha
ja
add
mov
out
pop
or
xchg
and
add
mov
scas
pop
push
sub
movl
enter
adc
movsl
ss
jns
pop
jnp
and
and
ljmp
shl
cmp
cmp
fsubs
cmpsb
xchg
scas
mov
fisttpl
sub
pushf
movsl
stos
add
and
dec
dec
push
ficoml
mov
and
test
nop
aas
push
adc
xlat
loope
insl
mov
cmp
push
fisubs
stos
aas
adc
ret
lock
push
adc
cmpsl
cmp
xchg
push
sti
jae
nop
addr16
xchg
pop
loopne
aas
adc
adc
shll
mov
fidivl
or
pop
and
out
lea
cmp
imul
jo
push
adc
sub
xchg
pop
mov
dec
xchg
push
stc
je
pop
push
sub
std
xchg
dec
lock
adc
aas
push
xchg
daa
daa
repnz
out
lret
and
out
mov
aad
xchg
jo
rcr
shl
mov
rol
pop
cmp
les
jmp
xor
mulb
aas
push
adc
push
inc
js
mov
fwait
pop
cld
xchg
mov
nop
sti
nop
xchg
add
lcall
push
je
mov
fdivrl
lcallw
shlb
jecxz
jb
int3
adc
sbb
movsb
add
pop
jmp
test
mov
pop
movsl
mov
in
icebp
inc
stc
stc
sub
fucomi
fstp
fidivrl
pop
aaa
cwtl
loope
jle
movsl
or
push
sub
mov
push
adc
test
dec
adc
jle
jno
sbb
push
push
jae
push
jns
inc
jg
stos
and
outsl
fisubrs
repz
test
cltd
cmpsl
mov
negb
repnz
ss
or
lods
gs
divl
dec
and
jge
mov
xor
mov
mov
jae
dec
xor
and
jl
add
dec
mov
repz
out
outsl
cs
jge
fildl
jbe
stos
vcvtss2sd
std
repz
in
inc
cltd
out
mov
int3
bound
sbb
pop
fmuls
idiv
frstor
cmp
fistl
and
test
and
sub
mov
sub
insb
xchg
push
pop
sub
int
into
lds
dec
lret
dec
jbe
mov
nop
inc
sarb
xor
inc
inc
fimuls
cld
or
lock
scas
pop
cmp
or
push
loopne
outsb
js
inc
push
add
ret
leave
out
iret
cmp
es
iret
rcr
cmp
fiaddl
flds
mov
fistpll
out
cs
call
mov
leave
mov
mov
inc
sbb
cmp
and
inc
rorl
loop
pop
jbe
cmpsb
mov
sub
sbb
sti
icebp
adc
hlt
dec
int3
fldl
icebp
mov
es
xor
rolb
push
stc
mov
xor
popa
adc
inc
jge
mov
es
jle
shll
es
jge
xlat
cmp
scas
pop
mov
xor
into
jmp
inc
and
mov
jmp
test
dec
lret
adc
or
fwait
out
and
popf
and
aad
mov
xchg
push
clc
mov
xchg
pop
loopne
jmp
adc
pop
cmp
loop
dec
mov
mov
pop
jmp
mov
adc
sahf
out
mov
xor
loop
das
inc
add
lods
scas
mov
sub
fs
call
mov
hlt
addl
pop
movsl
rorl
xchg
fsubrl
dec
ret
pop
loope
dec
xchg
mov
ret
adc
cmp
mov
mov
pop
pop
shl
imul
lods
mov
dec
pushf
cmp
pop
fimuls
imul
shlb
xor
sbb
pop
aas
xor
out
andl
xor
xor
sub
loop
inc
rol
mov
fnsave
fcmovnb
jnp
fmuls
movsl
sub
push
dec
sbb
pop
dec
and
xchg
push
clc
lahf
mov
sahf
out
pop
dec
sbbb
insl
mov
push
cmp
dec
insl
fucomi
pop
fcmovnu
insl
xor
xchg
lods
xchg
or
aas
push
adc
fwait
cs
xchg
or
loope
movsb
or
in
inc
in
pop
andb
inc
lock
dec
in
adc
shll
mov
mov
cmp
ds
and
lcall
xor
fdivl
fnstenv
mov
cmp
aad
and
dec
add
jmp
inc
popf
pop
je
and
pop
andb
cld
pop
int
mov
mov
cmp
andb
jecxz
jmp
test
sbb
or
lds
rcrb
les
cmovns
mov
xor
and
lcall
adc
aas
push
adc
imul
xchg
movsl
movsl
repz
mov
cli
inc
je
aam
ret
fdiv
lret
mov
cmc
fdivs
scas
outsb
fistpll
fwait
sbb
and
jne
arpl
cmp
xchg
ss
fcomp
push
insl
xchg
mov
dec
push
es
inc
loopne
or
lret
cmpsb
daa
pop
sub
fmuls
std
pop
dec
jb
mov
mov
movsl
repnz
mov
cmp
pop
adc
fistpll
mov
jo
insb
jns
shll
xor
inc
cmp
test
adc
lcall
push
mov
and
xchg
outsb
aad
jmp
xor
pop
xor
pop
pop
call
adc
cmp
imul
mov
or
aam
loopne
adc
dec
xchg
jno
xor
ret
dec
cs
push
enter
scas
cltd
jno
inc
stos
aas
stc
rcrl
adc
mov
cmpsl
insl
sbb
xchg
call
push
in
pop
in
xorl
mov
adc
flds
mov
add
aas
mov
xlat
pop
adc
push
testb
into
add
lock
add
push
push
mov
fs
adc
xor
sahf
or
push
rcrl
xor
out
enter
add
push
out
or
jbe
xor
dec
mov
or
mov
pop
adc
or
lods
sbb
outsl
sbb
pop
jp
in
fwait
jbe
pop
jle
sbb
cltd
mov
and
iret
dec
pop
aas
test
mov
dec
rcpps
and
mov
or
bound
jb
outsl
bound
imul
jno
inc
adc
push
sti
mov
dec
out
js
cmp
jp
pop
lret
xchg
xor
push
jno
add
ljmp
sub
sub
mov
adc
xchg
cmp
jmp
sbb
xchg
fdivrs
out
sahf
or
clc
sti
jp,pt
dec
pushf
dec
ror
stos
lahf
dec
imul
pop
loopne
pop
adc
dec
xchg
push
sti
cmc
xor
sub
cld
lahf
cmp
repnz
mov
dec
xchg
push
jno
push
clc
lahf
mov
sarl
and
out
addl
mov
adc
pop
xor
call
andl
dec
call
lods
xor
ss
movsl
dec
cmp
push
test
push
dec
push
lods
mov
mulb
push
mov
enter
and
ds
pop
in
movsl
frstor
fldt
insl
and
sbb
jae
rcll
imul
push
adc
subb
mov
mov
dec
je
cmp
fiadds
mov
mov
pop
fidivl
aad
hlt
lods
pop
cmp
hlt
or
enter
xchg
sub
mov
xlat
out
fimull
pop
jmp
xchg
jno
or
adc
cs
push
fs
pop
dec
xchg
lods
shl
lods
scas
imul
push
xchg
je
sbb
xchg
pop
in
xor
and
xor
fdivr
nop
mulps
sub
mov
cmp
inc
popf
pop
ljmp
mov
mov
mov
and
inc
pushl
dec
andl
mov
mov
or
out
fucom
xchg
mov
insb
mov
and
push
adc
adc
push
push
pop
fmuls
mov
sub
inc
in
call
shll
fisttpll
repz
xor
aad
into
addb
jg
rcr
and
push
cmpsl
and
pop
adc
iret
adc
into
pop
xor
and
jmp
dec
xchg
lods
xchg
stos
sbb
pusha
jb
stos
xor
xchg
ss
leave
xchg
jne
je
es
push
shlb
ret
inc
popf
add
repnz
add
in
push
xor
jbe
mov
sbb
add
cmp
jecxz
fidivrl
or
mov
jg
into
sahf
out
outsl
cwtl
jbe
scas
testl
adc
int
and
adc
aam
int3
xchg
lea
pop
mov
insl
and
aaa
pop
cmc
fidivs
mov
inc
cltd
push
fistl
and
rcrl
nop
out
mov
nop
push
mov
je
into
sub
inc
icebp
mov
adc
jo
jae
das
xchg
test
inc
push
addr16
pop
pop
insb
push
adc
loope
dec
xchg
sbbb
push
fs
outsb
xchg
andl
pop
out
push
cmp
cmpb
imul
shrb
sahf
push
push
pop
add
mov
in
pop
bound
xchg
jne
insl
clc
les
adc
pop
sbb
push
testl
fwait
data16
xchg
push
adc
mov
xchg
stc
test
jbe
movb
inc
addb
dec
xor
jo
mov
idiv
cmp
sub
enter
outsb
and
adc
fisttpll
std
repz
lcall
sbb
movsl
dec
xchg
mov
or
xor
push
sub
mov
push
data16
popf
int3
mov
sarl
in
lods
cmpsl
mov
push
push
add
es
add
insl
in
mov
cmp
pop
imul
mov
cmp
in
in
out
ret
lea
lods
pop
call
mov
lcall
movsb
fcoml
mov
ret
mov
pop
jne
and
out
lock
fidivrl
sub
pop
adc
mov
pop
fidivl
sbb
arpl
cmpsl
pop
aam
lea
gs
mov
aad
xchg
fs
or
insl
mov
ds
inc
call
aaa
insl
ficompl
clc
mov
rcrb
dec
xchg
mov
pop
add
cmp
lods
pop
cmp
cmp
or
sub
fildll
loopne
pop
inc
icebp
dec
xchg
pushf
ss
clc
shlb
jp
mov
mov
xor
sub
stos
mov
loopne
or
cmpsl
sbbb
adc
enter
pusha
dec
xchg
pop
sti
xchg
and
insl
lea
es
mov
pusha
aaa
out
mov
enter
sbb
test
cwtl
insb
fstpt
mov
mov
loope
dec
add
call
jae
pop
ja
pmaxub
addb
popa
lds
fsubrs
xor
scas
xchg
decb
cmp
nop
pop
int
dec
xchg
pop
jbe
pop
sbb
fs
notl
adc
pop
mov
sub
mov
hlt
fdivl
xchg
push
aaa
roll
adc
loopne
fs
pop
aas
movsb
lods
jbe
les
mov
cltd
cmpsl
push
out
insb
push
adc
xchg
daa
cmp
mov
mov
push
lea
stc
or
xor
pushf
test
scas
je
icebp
adc
jmp
mov
push
push
fildl
adc
sbb
jge
movsb
dec
shll
xchg
sub
mov
and
es
pop
inc
gs
push
sub
iret
ret
mov
mov
pop
fsts
sbb
movsb
sti
adc
mov
jecxz
xchg
and
js
add
mov
test
sbb
aad
fucom
dec
adc
jmp
jecxz
xor
push
into
lods
pop
mov
flds
adc
lahf
jg
push
xor
jl
movsb
adc
cs
push
adc
push
pop
maxps
dec
pop
fnstsw
jmp
insb
data16
in
lcall
adc
xchg
inc
and
jo
outsb
xor
sbb
adc
das
push
jle
pusha
add
frstor
loope
int
aaa
add
push
xor
das
decl
fsubr
mov
jb
mov
xchg
pop
stos
inc
xchg
shrl
cs
pop
movsb
push
mov
adc
sub
push
cmpsb
in
cmpsb
icebp
rorb
test
push
fs
out
in
jg
in
push
in
cmp
out
or
test
rcll
cmp
mov
enter
cs
cmp
pop
rclb
mov
xlat
xchg
out
ds
sbbl
push
pop
addl
cmp
out
cmp
imul
std
or
and
js
push
adc
clc
and
dec
int
test
lcall
push
stos
repnz
push
jg
ds
cmp
mov
inc
popf
sub
fmul
push
shrb
dec
pop
xor
mov
mov
fdivs
jae
push
jmp
push
adc
popf
lods
sbb
inc
pop
inc
dec
mov
fs
lds
shrl
push
adc
stos
add
fucom
xor
cmp
imul
or
xor
pop
flds
dec
xchg
pop
loop
cmp
xchg
and
pop
mov
iret
andl
sbb
data16
lods
pop
mov
add
sbb
sub
imul
pop
pop
ret
xchg
mov
pop
fstpt
and
lahf
cmp
aad
mov
jl
nop
cmc
jns
call
shlb
out
inc
mov
repz
gs
mov
adc
xor
movsl
dec
shll
push
adc
out
mov
pop
sub
add
in
pop
pop
fsubrs
mov
jno
orl
jnp
popa
push
cmpsl
dec
ljmp
lret
cmp
push
loop
cwtl
cmc
popf
repz
ficompl
add
push
sti
add
jne
pushf
dec
add
xor
push
movsl
cmp
jbe
pop
mov
fwait
xchg
and
jecxz
mov
inc
adc
xor
xor
imul
xchg
je
fneni(8087
out
fsubrl
mov
pop
adc
arpl
push
ds
mov
xlat
and
adc
dec
daa
dec
pop
fcmovnu
insb
push
cmp
lods
pop
pop
mov
insb
mov
out
les
sarl
add
jl
push
test
jno
sti
cltd
add
cs
mov
xchg
mov
xchg
push
jnp
xor
popl
adc
mov
or
sar
xlat
inc
cmp
mov
fwait
mov
cmp
testl
push
in
jmp
xchg
hlt
push
pop
xlat
clc
sub
cmp
pop
sub
sbb
sti
leave
test
pop
mov
push
mov
lods
pop
ret
adc
xor
mov
aam
outsb
jnp
pusha
out
pop
inc
push
xchg
push
test
push
adc
lea
outsb
push
adc
inc
fisttpll
push
sub
cld
mov
mov
push
cmpsl
pop
out
sbb
ja
dec
mov
loopne
dec
stos
push
iret
xor
clc
lods
xchg
push
addr16
dec
inc
mov
movsb
adc
rorl
rorb
sbb
imul
adc
pop
mov
daa
lret
adc
pop
stos
sbb
inc
jne
jp
aad
rolb
and
fimull
mov
xor
inc
push
adc
mov
push
mov
sub
sbb
pop
nop
sub
pop
xor
pop
sub
xchg
or
or
pusha
fwait
les
sub
mov
fmuls
in
sub
jecxz
fmuls
ss
out
movd
daa
mov
inc
in
xchg
shll
pop
testb
in
mov
sar
inc
sub
mov
and
dec
mov
lods
mov
push
jne
pop
dec
cmp
inc
stos
push
mov
in
sbbl
add
bound
pop
loopne
test
repz
or
dec
dec
sahf
mov
mov
add
or
and
add
pop
test
dec
icebp
inc
dec
mov
jb
mov
sbb
sub
pop
xor
inc
fsubs
xchg
cli
push
mov
in
pop
iret
add
stc
test
xchg
lods
and
fisttps
cmp
pop
int
getsec
mov
inc
push
adc
mov
or
push
les
stos
push
test
stos
push
out
decb
xchg
add
add
lcall
dec
cwtl
dec
mov
lret
lds
mov
imul
shl
popa
fimull
cmp
pop
imul
xor
xor
inc
push
adc
and
out
andl
pop
mov
std
gs
es
rol
dec
clc
repz
sbb
xchg
xlat
push
es
dec
sbb
dec
sbb
pop
pop
and
lods
out
call
pusha
fidivl
ja
push
cs
test
pop
insl
fucomi
pop
fcmovu
imul
mov
arpl
fimuls
xchg
scas
xchg
jg
sarl
xchg
mov
xor
mov
cltd
cmp
inc
imul
jmp
adc
pop
in
mov
jmp
sub
pop
cmp
xchg
and
roll
and
dec
in
mov
popf
mov
push
test
xor
push
stos
cmp
push
popa
ret
shl
imul
fidivrs
insl
pop
in
cmp
xchg
mov
cmp
fdivp
shl
dec
lret
jmp
sbb
lds
push
add
sbb
fnstcw
sub
gs
clc
imul
sbb
popf
cmp
repnz
xchg
mov
cwtl
movsb
add
cs
in
scas
shlb
adc
push
pusha
lds
hlt
test
mov
sarb
popf
scas
loop
popf
inc
in
cmp
xchg
dec
xchg
sub
out
loop
jne,pt
test
and
fstl
loope
push
mov
sub
xchg
and
jl
jmp
popf
pop
verr
pop
stos
xor
loope
popf
sub
in
xchg
adc
cwtl
fsubrs
lods
cmp
inc
aaa
xor
add
lcall
inc
mov
xor
inc
dec
jb
cld
iret
pop
sbb
stos
push
insl
popl
imul
xchg
jg
std
push
xor
fdivl
push
pop
mov
jne
pop
jno
mov
icebp
xor
lds
int3
out
aad
pop
mov
push
scas
pop
mov
iret
cld
mov
pop
lcall
adc
jae
or
mov
mov
out
fisubrs
ljmp
mov
repnz
sbb
data16
xor
push
mov
enter
cs
aam
push
push
xchg
lea
push
jnp
and
add
bound
fs
stos
loop
xor
jae
test
or
cmovg
cmpsb
lahf
ficoml
cmc
insb
add
fmul
clc
cwtl
jecxz
mov
popf
cmp
jae
ret
lret
sub
add
outsb
mov
cmc
push
and
adc
fdiv
mov
adc
fcomip
fucomi
push
xchg
sbb
jmp
and
movsb
mov
sbb
inc
lahf
adc
pushf
aad
jnp
pop
stos
aaa
cmc
lods
imul
xor
sub
xor
xchg
sti
inc
rorl
jmp
enter
stos
mov
mov
jp
jl
loopne
insb
or
adc
pop
adc
js
out
repnz
dec
es
shrd
es
aaa
dec
jg
decb
jae
and
inc
aas
lret
push
push
push
stos
cmp
out
test
mov
inc
push
sub
inc
lds
lock
pushf
adc
repz
xchg
jae
jmp
cmp
cltd
dec
pusha
leave
xor
test
push
mov
xlat
sub
andl
out
xchg
cmp
inc
push
jbe
fdivl
daa
lock
cld
outsb
xchg
mov
loopne
scas
and
push
push
in
cs
mov
cmp
mov
dec
adc
xor
int
shlb
adc
dec
adc
pop
jne
cmp
test
cwtl
xchg
sub
jmp
xor
jb
loope
pop
clc
call
cld
mov
shlb
pop
fldt
cltd
test
dec
xchg
scas
pop
xchg
loopne
pop
rcll
pop
out
xchg
push
mov
cmpsb
test
and
bound
sbb
es
loopne
xchg
das
mov
inc
xchg
push
cmp
sub
pop
xchg
mov
xchg
dec
xchg
and
inc
mov
lods
aad
lret
lea
ss
push
clc
fwait
ds
repz
arpl
inc
push
adc
sub
lea
cmp
xchg
pop
rorb
outsb
cli
xchg
and
in
in
sub
add
cmp
leave
sbb
cmp
sahf
push
movsl
dec
loop
push
mov
jmp
in
ljmp
cmpsl
dec
pushf
dec
cmp
xchg
and
out
fsts
sub
daa
mov
pop
xor
lods
shll
cmp
mov
sub
pop
popa
out
movsl
or
and
jnp
jmp
pop
rcll
jne
cmp
and
xchg
pop
lret
or
cmpb
mov
pop
lock
sub
cmp
add
nop
and
adc
push
sub
dec
push
dec
or
xchg
es
cmp
pop
jno
mov
push
adc
cwtl
jnp
aas
inc
cmp
cltd
icebp
loope
adc
test
mov
jp
in
sbb
nop
rcr
push
aas
icebp
mov
jmp
mov
aaa
and
rol
fwait
es
xlat
les
in
pop
aas
or
pop
test
icebp
xchg
sub
sub
icebp
xor
mov
incl
lea
push
daa
cltd
pop
dec
andb
mov
cmp
cmp
push
mov
in
mov
out
comiss
pushf
or
clc
cmp
and
pop
dec
mov
popa
push
sub
mov
ss
into
scas
jle
scas
sub
jmp
scas
pop
mov
fisttpl
lds
pop
scas
pop
mov
mov
mov
pop
jno
stos
sub
jae
rcr
dec
jge
pop
insb
rcr
sub
add
es
stos
enter
out
mov
xlat
mov
adc
jl
xchg
add
jne
shl
jne
movsb
loopne
jae
fcoml
push
jae
fistpll
jnp
inc
scas
repz
cmpsb
bound
out
pop
dec
aaa
in
inc
sub
push
mov
and
inc
ffreep
push
ljmp
popa
cmp
scas
jnp
jl
mov
fdivp
xlat
shlb
addr16
andl
out
in
mov
insb
ss
out
pop
push
jl
inc
lahf
push
mov
xor
add
inc
jle
sahf
mov
es
xor
push
mov
or
adc
cmove
push
cmp
ret
addr16
jmp
xor
jg
adc
popa
push
sbb
gs
aam
inc
dec
pop
cmpsb
cmp
leave
push
sbb
enter
into
cmp
cs
dec
outsb
sub
add
xor
icebp
add
mov
xchg
dec
std
cmp
lock
sbb
mov
ja
mov
faddl
push
pop
lods
push
adc
cld
pop
adc
fistl
sub
pop
rsqrtps
hlt
cmp
sub
inc
loopne,pt
sub
xor
shll
pop
repnz
dec
push
insl
lds
lock
mov
pop
sti
jmp
xchg
pusha
mov
into
lret
pop
lret
mov
adc
push
adc
push
repz
loop
or
sarb
cmp
fcoms
sub
cmp
fidivl
jp
jb
ds
pop
outsl
aas
lods
pop
cmc
cmp
fcoms
test
and
cmp
inc
mov
arpl
pop
data16
mov
cmp
out
mov
mov
fidivrs
adc
push
fistpll
call
test
mov
nop
mov
insb
push
adc
push
stc
pop
fiaddl
arpl
push
ret
mov
and
pop
mov
ffreep
pushf
aam
adc
test
nop
insb
fidivl
scas
fisubrl
cwtl
mov
outsb
add
push
dec
xchg
sub
dec
xchg
push
clc
imul
cmp
xchg
pop
clc
xchg
sub
xlat
stc
xchg
sub
fstps
mov
lcall
insl
sub
mov
push
rep
pop
in
pop
cmp
add
gs
sub
pop
mov
dec
xchg
push
shll
jae
cmp
dec
inc
pop
cmp
add
and
adc
movsl
sbb
and
xchg
jae
mov
add
xchg
xchg
sub
icebp
xor
dec
pop
push
lock
fxch
loope
outsb
movsb
out
out
pop
mov
shll
dec
out
xchg
arpl
stos
mov
les
mov
aad
pop
cmpsb
cmp
mov
imul
jne
pop
mov
push
rorl
xor
lods
pop
out
mov
imul
out
inc
xchg
and
cs
add
bound
cld
mov
xor
inc
popf
mov
fs
daa
popf
mov
mov
mov
xor
pushf
adc
inc
test
les
push
not
scas
pop
stc
mov
icebp
in
push
in
dec
bts
test
mov
adc
mov
rcrb
xor
scas
cmc
fcomps
xor
into
pushf
aad
int
adc
outsb
popl
and
loop
shrl
fidivl
adc
sbb
sbb
les
cmp
addr16
std
pop
push
adc
fcomps
pop
int3
push
inc
outsb
pusha
mov
mov
popa
dec
inc
popf
jb
fwait
mov
mov
pop
ret
push
cmp
jo
mov
filds
inc
test
mov
mov
pop
jp
xor
mov
repnz
jbe
jg
lock
pop
or
stc
lock
shll
mov
and
inc
sarl
mov
iret
adc
jle
popa
out
or
sub
lret
push
cmp
daa
pop
fidivl
push
jle
inc
lahf
pop
std
push
pop
clc
bound
jnp
shl
add
jp
clc
jno
mov
jno
call
shll
int3
jno
xlat
mov
xor
jmp
jecxz
adc
mov
mov
mov
sub
pop
loopne
mov
adcb
inc
mov
inc
dec
imul
out
lret
sti
mov
pop
fnstcw
ss
xchg
dec
cmp
xchg
dec
icebp
popf
xchg
push
dec
cld
in
inc
in
push
cmp
inc
jl
adc
cs
mov
dec
and
and
shr
fucom
inc
popf
loopne
dec
inc
aaa
xchg
mov
jp
or
xor
push
jbe
fnsave
icebp
mov
push
aas
mov
jg
mov
mov
push
int
xor
xchg
xor
popf
inc
or
add
lret
push
jge
iret
enter
lahf
and
mov
xchg
out
call
data16
mov
cmp
insl
sbb
mov
pushf
xchg
gs
insl
fidivl
int
lods
pop
mov
pop
adc
sbb
insl
cmpb
push
xor
pop
iret
push
rcr
xor
xchg
cmp
pop
gs
repz
fnstsw
jmp
mov
ficompl
push
push
cmpsl
xor
cmp
ss
fstpt
es
inc
int3
mov
loopne,pn
mov
fcmovne
test
mov
dec
fld
jmp
xlat
xchg
push
cs
mov
mov
push
cmp
mov
shlb
lds
lods
xchg
push
push
mov
inc
insb
sbb
dec
loopne
inc
xchg
sub
test
cmp
jo
push
cmc
outsl
andl
sub
loop
xchg
and
sbb
cmp
xchg
and
in
adc
scas
lods
out
xchg
or
out
mov
xchg
jae
sbb
imul
out
dec
xchg
aas
icebp
movsb
dec
xchg
mov
add
loop
mov
add
cmp
decb
push
cs
and
jne
popf
cmp
xchg
insb
xchg
mov
pop
adc
xor
adc
add
push
mov
loope
pop
inc
pop
mov
push
lock
mov
xor
dec
aad
fidivs
dec
pop
mov
pop
xlat
lds
sub
and
outsb
push
int
fnsave
push
cmpsb
mov
dec
out
push
lret
xor
fwait
push
insb
mov
jmp
inc
fwait
push
insl
mov
xchg
in
in
and
jns
mov
test
sub
scas
lds
inc
dec
add
mulb
rorl
xchg
loope
xor
mov
mov
cwtl
lcall
jg
fs
push
adc
movsb
subl
enter
sbb
lea
sub
loopne
push
clc
jge
inc
aad
dec
pop
adc
lock
inc
pop
cmp
addr16
and
jns
push
inc
push
incb
out
pop
frstor
or
sbb
iret
vcomiss
sub
and
cli
inc
jne
jle
cs
into
lret
sti
inc
call
pop
cltd
mov
mov
scas
xrelease
push
add
push
push
pop
sti
faddl
and
dec
mov
push
mov
dec
std
cwtl
pushf
sbb
std
cwtl
xchg
adc
clc
sbb
fcompl
shlb
adc
ret
jb
mov
imul
xor
pop
fucomi
aam
jecxz
and
sbb
outsb
inc
aam
aas
jmp
out
in
stos
test
mov
stos
test
lds
into
arpl
fs
lret
rcll
xor
lods
push
sub
mov
stc
mov
mov
cld
jle
test
andl
pop
hlt
jns
add
outsl
or
out
nop
jl
lock
jg
adc
cltd
lock
lods
aam
std
push
jle
cmpsb
push
mov
iret
fcmove
lods
or
jmp
push
xor
sub
mov
mov
out
jp
fnsave
call
mov
outsb
xchg
push
jno
add
scas
mov
ja
mov
jmp
int
mov
push
fwait
insb
test
ret
cmp
push
dec
lahf
movb
push
jne
mov
repnz
dec
pop
lahf
sub
lods
shrl
xlat
push
adc
push
outsb
jp
aam
ficomps
test
aad
add
mov
aaa
daa
leave
popfw
push
or
sbb
mov
out
mov
dec
add
pop
cmp
xchg
and
scas
loope
and
sbb
daa
pop
dec
adc
gs
xchg
and
pop
ds
push
lret
in
cmp
shr
test
daa
mov
xor
cmp
cmp
movsl
dec
loopne
test
mov
loope
stos
test
mov
xchg
pop
movsl
shl
arpl
sbb
mov
sub
movsl
pushf
mov
in
popa
and
movsl
dec
xchg
push
imul
mov
loopne
mov
hlt
lahf
xchg
add
test
xchg
sub
pop
dec
pop
push
xchg
adc
lods
adc
jecxz
mov
mov
scas
xchg
jae
cli
mov
xchg
sub
jb
push
mov
test
scas
mov
pop
inc
or
push
cmp
ds
lahf
xchg
sub
push
mov
mov
sub
sbb
xchg
mov
dec
loopne
movsl
xchg
je
fisttpl
push
inc
push
adc
xchg
mov
daa
xchg
fisttpl
pop
lret
push
movsl
mov
in
mov
and
pop
jno
dec
xchg
push
leave
movsb
mov
adcb
imul
movsb
fcoml
adc
sub
stos
lahf
pop
or
push
adc
loopne
mov
dec
leave
sbb
sbb
fsubrl
fisttpl
cmpsl
test
or
push
dec
xchg
daa
repnz
outsb
jecxz
stos
pusha
inc
adc
add
lcall
xchg
sub
mov
ret
scas
xchg
or
jmp
stos
and
dec
out
xchg
mov
aad
insb
push
repnz
xor
jl
xchg
scas
lcall
leave
pop
and
call
aad
inc
cmp
stos
lcall
cli
push
add
pop
sti
pop
pushf
cwtl
out
js
outsl
inc
mov
add
in
push
daa
sahf
sbb
mov
ret
push
mov
scas
lea
push
mov
add
pop
aaa
clc
xchg
dec
outsl
mov
or
pop
ret
mov
mov
aaa
dec
sbb
sbb
push
push
movsb
fnstsw
mov
rcl
pop
rcl
fisubrs
lcall
imul
pop
add
cmp
push
cmc
int3
cmpl
iret
nop
sub
sub
push
inc
push
adc
mov
adc
jbe
xor
andb
push
icebp
cmp
movsl
rorb
loop
test
adc
xchg
mov
jo
cltd
sti
in
int
adc
and
push
pop
pop
adc
faddp
mov
dec
sub
add
out
xchg
mov
les
xor
cltd
call
inc
push
adc
and
push
adc
fwait
arpl
cmp
daa
mov
sbb
sahf
out
orb
cmp
or
push
adc
adc
arpl
adc
sbb
popa
add
cld
orb
outsl
mov
lods
mov
clc
cmp
addr16
dec
sbb
loope
es
fsubp
and
adc
xchg
loop
adc
xor
cmp
dec
mov
jnp
mov
jno
adc
popf
sub
vpminsw
imul
lea
pusha
inc
rcll
push
adc
test
test
shr
repnz
xor
in
push
mov
ds
jne
cmp
mov
mov
stos
lea
iret
mov
imul
scas
popf
mov
std
jp
jb
lret
xchg
adc
jno
mov
mov
push
adc
cmp
daa
in
das
xor
shll
xor
push
push
pop
ds
mov
shl
arpl
push
mov
rol
outsl
pop
pop
mov
jecxz
pushf
sbb
pop
ficompl
push
pop
out
aas
and
aas
sub
ds
adc
xor
fwait
mov
fsubs
adc
aas
insb
xor
xchg
mov
sahf
test
loop
dec
lds
mov
sub
sub
insl
fistpl
xlat
mov
lea
pop
pop
jmp
xor
cmpsl
stos
fwait
cmpsb
insb
lea
lret
sub
dec
call
jl
rclb
movsl
fcmove
jnp
fcoms
and
mov
mov
and
sub
mov
ds
fwait
movsl
push
loopne
in
xchg
mov
dec
xchg
push
lock
sti
jnp
in
cmp
ss
pop
es
push
cmc
arpl
add
in
mov
lods
xchg
mov
popf
sbb
mov
dec
xchg
pop
stos
fcmove
jp
fmuls
and
mov
clc
arpl
dec
mov
fmull
es
push
dec
loopne
test
in
pop
lea
dec
xchg
and
fmul
jb
stc
or
and
jb
lods
sar
lcall
lock
and
and
and
jle
jae
fdivrs
cmpsb
imul
out
jmp
push
xchg
dec
lret
adc
stos
sub
cmpsl
scas
adc
adc
aam
daa
sub
in
stos
pop
mov
add
cmp
jge
push
adc
imul
xorl
out
jmp
pop
test
test
out
sub
nop
xor
and
les
sub
int3
push
flds
jmp
jl
inc
stos
add
out
dec
jg
ret
pop
cmp
imul
lods
jne
pop
lds
add
jp
mov
rcl
jmp
ljmp
and
test
adc
in
add
movsb
jl
lds
ficompl
push
mov
pop
sub
scas
into
mov
enter
lds
pop
movsl
mov
xchg
jne
fcomps
insb
movsl
xchg
mov
imul
and
sub
inc
fwait
out
lahf
scas
inc
and
scas
pop
cli
inc
fwait
ja
dec
jae
in
daa
pop
mov
mov
xchg
add
faddl
aas
shlb
pop
std
mov
sti
inc
jecxz
add
jns
out
lcall
inc
jecxz
mov
frstor
ret
in
cmp
mov
jmp
loope
and
xchg
pusha
xlat
xor
inc
mov
repnz
mov
ds
sub
xchg
push
or
and
shrl
and
dec
pop
std
mov
mov
inc
std
fimuls
jge
cld
pop
cltd
popf
jmp
and
sbb
cmpsl
in
hlt
pop
xorl
shl
ja
in
movsb
sti
mov
mov
das
push
inc
mov
cmp
fcoml
mov
push
xlat
mov
add
dec
mov
mov
mov
outsb
sarb
dec
jbe
cmp
in
mov
xchg
pop
jle
out
mov
sub
fimull
mov
xor
pop
bound
push
mov
cmp
xor
cmpsb
mov
mov
inc
sub
daa
sbb
sti
mov
sbb
cmp
xor
std
arpl
xor
mov
pop
pusha
mov
les
or
sbb
jmp
movsb
inc
push
adc
outsb
mov
pusha
adc
addr16
sub
inc
sarl
mov
shl
xorl
out
mov
mov
ss
pop
test
push
movsl
or
sub
popf
movsl
loopne
out
lds
pop
xchg
sub
imul
add
mov
adc
and
jb
jle
adc
outsl
in
mov
pusha
push
push
aad
dec
xchg
aad
popa
insl
sbb
es
pop
enter
push
outsb
outsb
add
pop
loope
push
aaa
sbb
out
mov
dec
ds
jge
ret
mov
adc
push
push
fmull
adc
gs
movsl
ds
xchg
scas
mov
and
xchg
pop
xor
jno
xor
push
insl
mov
mov
sbb
and
mov
es
insl
loop
mov
jecxz
aas
sub
pop
add
sbb
push
mov
arpl
push
cmp
and
cli
sub
call
in
mov
out
dec
movsl
dec
out
mov
xchg
pop
cmp
jae
mov
cmp
cmpsl
mov
xlat
lods
mov
fwait
and
insl
popf
mov
std
mov
test
aad
fidivl
ds
or
shlb
pushf
adc
out
mov
aas
jne
inc
jp
hlt
fs
test
mov
cmp
dec
cmp
stos
pop
xor
int
mov
in
aam
push
mov
mov
xorl
xchg
xor
inc
push
or
xchg
and
xor
jno
leave
fcmovb
aam
adc
push
sub
push
jp
xor
add
cltd
jne
adc
in
lods
xchg
jne
mov
jb
sbb
rcl
fistl
xchg
aad
nop
push
or
mov
dec
rcrb
es
lret
add
xlat
push
adc
stos
or
jp
addr16
jg
lods
pop
mov
sbb
xor
jecxz
fidivs
sub
xchg
movsl
sbb
push
ds
int
fsubl
push
adc
pop
ss
sub
adc
adc
adc
jbe
into
cmpsb
or
add
sbb
daa
insb
adc
clc
xlat
pop
adc
push
or
fidivl
push
cmp
aam
adc
push
scas
lods
test
in
pop
xchg
dec
jbe
sbb
adc
pop
adc
jecxz
sahf
pop
setae
nop
xchg
mov
adc
jbe
add
iret
adc
jne
addr16
and
mov
add
or
mov
push
jne
sub
shll
cmc
mov
mov
rcl
add
xor
xlat
push
adc
shll
adc
jb
push
insb
enter
stc
push
mov
pushf
mov
shrb
adc
mov
add
stos
loope
rorl
out
dec
push
ss
js
aaa
mov
sub
mov
test
shr
xchg
fwait
sub
dec
std
xchg
dec
js
push
bound
jne
or
outsb
in
pop
xor
pop
and
nop
cmp
ret
pop
stos
jo
push
jmp
adc
sti
sub
push
push
test
xor
adc
inc
sub
sti
cmp
xor
push
jns
or
adc
lods
push
es
fsubp
test
jnp
jmp
xchg
cmp
jne
pop
pop
pop
xor
inc
in
pop
in
pop
mov
xor
fimuls
mov
mov
dec
add
insl
ficompl
fcoms
cmp
mov
out
mov
dec
mov
lods
fistl
test
jl
push
lods
pop
ds
popf
call
pop
fdivrs
nop
push
loop
xor
dec
xchg
push
push
movsl
shrb
insb
push
mov
push
decl
sbb
insb
push
adc
lods
pop
mov
fstp
jl
pop
adc
xor
push
pop
jae
test
sbb
cmp
sar
imul
insl
fidivrl
adcl
aas
inc
lea
mov
and
mov
addb
xchg
and
lods
aam
arpl
mov
pop
fdivs
mov
lea
ss
rcr
sbb
pop
adc
adcl
pop
mov
pop
mov
mov
sub
call
test
mov
xchg
and
gs
jo
xor
imul
sarl
ret
lea
mov
ds
dec
xchg
pop
fnstenv
test
insl
fcmovnu
fs
std
pop
adc
pop
adc
mov
mov
xor
arpl
push
mov
xchg
mov
adc
pop
cmp
in
push
and
mov
mov
push
dec
xchg
push
rolb
fisubl
adc
pop
adc
pop
xor
out
repz
in
cmp
pop
scas
xchg
mov
sbbb
xchg
and
sbb
shl
insb
mov
and
push
movb
dec
cmp
outsl
popa
sbb
mov
dec
mov
adc
out
inc
fwait
sub
pop
jb
fwait
push
push
lahf
cmp
adc
or
xor
sarb
jae
stos
push
cmp
faddl
adc
movsb
inc
in
int3
mov
aam
sbb
call
xor
pop
and
push
adc
sbb
pop
mov
in
loopne
arpl
cltd
pop
sbb
sub
jmp
pop
ja
dec
lcall
inc
into
int3
mov
scas
repnz
popf
lahf
out
imul
sub
mov
fcompl
in
outsl
sub
and
leave
cs
jnp
inc
rcrb
sar
scas
xlat
or
es
test
lahf
cmp
scas
jl
stos
loopne
pop
jmp
jecxz
ljmp
test
int
int3
popa
shl
sub
xor
lcall
and
out
push
dec
es
sbb
cmpsl
pop
mov
fs
xor
mov
jmp
mov
arpl
xor
adc
push
inc
inc
lahf
test
in
fwait
add
mov
movsl
test
add
popf
pop
or
xor
mov
mov
inc
mov
dec
mov
xchg
mov
adc
jecxz
xchg
jmp
insl
push
adc
int
movsb
addr16
push
insl
fistpll
mov
outsb
sub
jp
mov
rcrb
mov
mov
inc
mov
movsb
jno
jne
sub
adc
jb
outsb
ss
cs
mov
loopne,pt
mov
aad
daa
rcll
in
arpl
mov
imul
and
and
fdivrs
repz
mov
and
nop
mov
jecxz
xor
sub
test
fstcw
mov
sbb
pop
stc
push
mov
and
and
jb
test
xchg
adc
insb
sub
aam
loopne
clc
out
ret
pop
clc
mov
xlat
js
mov
frstor
mov
aas
mov
push
cmpsl
xchg
sarl
mov
ss
adc
clc
rcrl
andl
dec
xchg
push
js
and
sub
cmp
adc
xlat
push
sub
sbbl
dec
in
mov
shl
out
movsb
or
cmp
xchg
adc
inc
mov
insl
cmpl
mov
xchg
jb
leave
insl
mov
lcall
and
inc
test
jecxz
mov
das
cmp
inc
leave
xchg
and
movsl
dec
xchg
xchg
xchg
and
insb
sub
or
cmp
leave
xor
movsl
dec
xchg
es
mov
and
cmp
push
aad
xlat
js,pn
enter
adc
push
movsl
pop
mov
push
movsb
cmp
rcl
in
mov
lods
sar
xchg
cs
ss
adc
clc
rcrl
in
pushf
push
repz
scas
mov
sarb
push
adc
adc
dec
pop
arpl
clc
jge
mov
and
mov
xchg
inc
push
adc
jp
mov
push
inc
push
mov
or
mov
push
inc
cmp
jae
push
cmpsl
cmp
aaa
fs
nop
and
in
lods
pop
mov
push
mov
dec
xchg
jmp
nop
xor
pop
sub
cmc
rclb
ss
xchg
pop
sub
sarl
popf
dec
outsl
xor
test
xor
xchg
pop
xchg
or
xchg
push
pop
pop
add
mov
out
dec
xchg
and
stos
mov
insl
xor
aad
fs
ljmp
mov
mov
popa
pop
hlt
outsb
push
lods
leave
sub
or
ficompl
inc
popf
icebp
jp
jne
mov
and
fisttpll
push
add
and
cwtl
test
lds
inc
and
scas
pop
stc
fcomp
test
fisubrl
stos
fs
jl
lods
sbb
lods
push
sbb
mov
and
sbb
xor
xor
in
fisttps
inc
xchg
or
and
sub
shlb
mov
cmpsl
jge
xor
aad
pop
and
outsb
fdivs
ljmp
push
jnp
mov
adc
call
test
inc
sbb
lds
pop
mov
xchg
adc
insb
add
mov
push
aam
bound
lret
jae
mov
outsl
adc
mov
mov
lds
out
mov
mov
cli
cmpsb
adc
cmp
pop
jecxz
mov
out
push
icebp
sbb
mov
int
push
loopne
rcr
adc
lods
aam
mov
mov
pop
int3
adc
and
cmp
lahf
test
jmp
dec
test
stos
mov
sub
out
ja
data16
mov
inc
popa
sub
xor
and
mov
mov
and
lock
call
arpl
push
sbb
loopne
mov
jg
add
shlb
nop
js
cli
insb
cli
pop
decb
sar
xor
sti
xchg
cmp
mov
push
jmp
pushf
sti
mov
loope
dec
dec
mov
insl
mov
xchg
dec
pop
pop
xchg
xchg
xchg
dec
mov
mov
xchg
dec
out
int3
xchg
sub
push
lret
insl
cmpb
loop
mov
clc
stos
clc
and
mov
xchg
cli
and
adc
pop
push
mov
cmp
cmp
or
push
push
push
lret
les
or
mov
aaa
sbb
lods
fwait
cltd
aaa
push
insl
lcall
sti
nop
add
jne
and
iret
dec
ja
mov
xchg
push
adc
or
in
pop
mov
shrl
mov
inc
xchg
and
movsl
dec
xchg
pop
xor
dec
xchg
and
xor
fwait
and
xchg
pop
movsb
aad
adc
jb
fs
arpl
sarb
push
xor
outsl
push
xor
mov
sub
out
sub
cmpsl
push
sbb
add
sbb
push
cmpsl
cmp
jb
ds
fsts
cmpl
push
sbb
and
pop
sub
cmp
jb
ds
lret
popf
xor
sub
mov
bound
adc
incl
sbb
movsl
loopne
and
leave
xchg
sub
adc
mov
xchg
mov
sub
fmull
sbb
adc
ds
sarl
cmp
sbb
xor
outsb
pop
mov
sbbl
arpl
into
arpl
lret
in
jo
push
adc
xchg
lret
mov
testl
cmp
inc
fstps
pop
push
cmp
xchg
and
sub
fimuls
arpl
adc
mov
xchg
sub
mov
xchg
out
cmp
cmpsb
dec
xchg
sub
std
adc
bound
sbb
mov
dec
loope
cmp
mov
push
repnz
push
mov
dec
lahf
xchg
out
xlat
push
adc
xchg
les
jmp
data16
sarb
jmp
dec
xchg
sub
aas
xor
dec
into
sti
test
sahf
iret
push
inc
ja
xchg
and
out
test
xchg
and
adcl
xor
subb
mov
xlat
push
adc
pop
push
push
stos
pop
inc
sub
sbb
adc
ss
dec
test
xlat
push
adc
mov
and
insl
loopne
dec
outsb
iret
les
out
inc
bound
cmp
sbb
inc
sub
mov
stos
mov
jle
outsl
mov
and
inc
fidivl
and
aaa
inc
lods
inc
push
xor
and
jo
push
adc
fstps
in
pop
sub
imul
lods
inc
sbb
and
mov
jp
cmc
imul
and
leave
out
stos
pop
jge
sbb
std
fdivl
cs
mov
adc
bound
inc
push
adc
out
adc
cmp
sub
stos
jae
stos
mov
add
rorl
jae
test
lahf
repnz
cld
les
or
out
cli
jge
xlat
push
adc
mov
outsb
pop
stc
mov
repz
nop
fs
in
int
adc
mov
pop
push
fldt
pop
sub
iret
ficoms
rcr
dec
push
sub
mov
movl
pop
mov
jl
push
mov
xchg
mov
xor
pushf
shrl
les
dec
mov
jbe
std
sahf
or
int
ss
sbb
add
cs
or
addl
add
lock
or
mov
leave
lods
mov
add
lea
pop
push
aaa
daa
and
sub
ds
mov
insl
mov
push
and
xlat
in
out
leave
or
inc
mov
xor
xchg
lahf
test
cltd
bound
lods
inc
and
stos
cmp
mov
fcomi
ljmp
addl
or
and
testl
dec
mov
or
and
inc
add
arpl
pop
xor
add
adc
pop
hlt
jo
jecxz
repnz
jbe
push
mov
mov
fidivrs
popa
mov
jae
int
nop
out
mov
sub
push
mov
xchg
and
movsb
dec
call
insl
fisubrl
sub
mov
sbb
mov
sbb
fwait
sbb
pop
stos
aam
in
sbb
jae
sub
lods
fmul
mov
repz
push
xor
ja
ss
sub
mov
ds
mov
adc
xchg
xor
sub
ror
adc
dec
xchg
pop
push
adcb
add
scas
arpl
inc
push
adc
loop
imul
mov
mov
cli
shl
popf
push
dec
in
adcb
cmpsl
dec
pushf
dec
adc
xchg
and
movsl
dec
loopne
icebp
rolb
daa
aas
lock
sub
lea
xchg
pop
jecxz
in
mov
dec
xchg
scas
mov
fidivl
pop
in
and
mov
aad
inc
xlat
lods
pop
ds
push
movsb
dec
push
adc
fidivrl
sub
xchg
fstp
pushf
cmp
mov
outsb
sub
pop
mov
xchg
and
test
fstp
popf
cmp
or
out
xchg
sub
lods
arpl
xor
test
push
xor
aam
xor
mov
fidivl
cltd
mov
outsb
fdivrs
loopne
mov
scas
addr16
adc
lret
or
cltd
dec
xchg
fidivs
cltd
push
mov
xchg
and
and
mov
lahf
mov
loopne
and
lods
cmp
mov
push
loop
fldenv
loopne
mov
dec
jb
push
add
aas
lret
les
popa
stos
je
loope
inc
lret
push
xchg
ret
stos
rclb
adc
sbb
pop
imul
adc
arpl
mov
pop
inc
nop
fsubrl
xor
sub
sub
pop
aaa
in
jle
jne
sub
xor
xor
aad
pop
nop
or
scas
pop
mov
hlt
mov
xchg
ror
mov
clc
outsb
mov
fnsave
mov
sbb
adc
mov
cmpsl
or
fwait
mov
mov
push
outsb
imul
test
arpl
dec
sbb
sub
aam
shrl
stos
pop
adc
stos
jne
mov
push
push
mov
mov
mov
mov
mov
jnp
or
ret
sbb
cmpsl
xchg
imul
arpl
test
std
sub
push
ljmp
int3
adc
clc
add
cli
adc
xchg
das
movsb
xor
mov
cmp
cltd
and
and
push
cmp
xor
inc
sub
or
aaa
xor
hlt
out
dec
imul
ja
lods
jbe
sub
ds
int3
ret
enter
ljmp
fs
testl
push
jle
pusha
or
or
sbb
and
inc
mov
push
enter
and
mov
pop
mov
loop
cmp
mov
add
jl
pop
stos
fwait
dec
cld
out
mov
pop
push
je
loop
jmp
outsb
xchg
sti
and
fstl
inc
fchs
dec
aad
pop
adc
inc
test
jp
je
sub
dec
mov
xor
inc
sub
xor
cs
enter
in
mov
or
insl
fwait
std
fstpl
lahf
mov
mov
jb
popf
loope
mov
sbbb
adc
push
lret
adc
rorb
sub
lret
mov
stos
rorl
or
xchg
and
lods
inc
nop
sub
out
and
loopne
cmpsb
xchg
and
mov
dec
data16
mov
and
push
movsb
in
fidivrl
loopne
dec
xchg
and
fwait
inc
cwtl
cmp
xchg
xchg
and
movsl
dec
xchg
xchg
push
xchg
and
xchg
mov
loopne
xchg
lods
xchg
push
pop
pop
jg
jno
gs
fstpt
out
push
movsl
dec
addl
dec
cmp
fwait
dec
xchg
and
cmpsl
cmp
xor
inc
push
in
mov
lods
sar
fwait
pop
outsb
add
gs
adc
or
pop
jl
sbb
or
mov
dec
sbb
aas
sub
aas
loopne
dec
xchg
sub
arpl
aam
mov
pop
sub
dec
xchg
sub
pop
xchg
and
sub
test
fdivs
stc
insb
inc
inc
sbb
insl
push
shlb
or
sub
shll
push
dec
xchg
in
cmp
out
cmpsl
dec
xor
out
ss
sub
sub
or
out
push
movsb
dec
stos
sahf
dec
outsl
xor
push
dec
cmp
jb
mov
and
dec
pop
pop
and
dec
xchg
and
lcall
fwait
dec
mov
mov
dec
xor
loope
mov
add
out
aaa
aad
fidivl
lods
sub
mov
shll
lret
mov
aad
add
add
std
or
jecxz
dec
xchg
daa
jae
and
cmpsl
dec
aaa
stos
mov
xchg
pop
mull
mov
loop
dec
xchg
xor
mov
cld
lock
cmpsb
fdivr
mov
add
popf
sub
addb
ljmp
xor
lea
add
add
xor
cmp
sub
lcall
lret
mov
or
movsb
arpl
bound
push
xchg
fs
nop
in
mov
dec
inc
push
adc
push
xchg
addr16
mov
and
xchg
jmp
cwtl
pop
and
push
lret
adc
lahf
cmp
scas
into
sbb
sbb
shlb
lods
fisubl
pop
sahf
mov
sbb
imul
adc
into
push
inc
mov
sbb
sbb
mov
and
dec
leave
mov
mov
pop
cmp
addr16
jae
pop
push
mov
inc
popf
mov
cltd
mov
mov
ja
inc
imul
mov
enter
fdivrl
jo
push
mov
movsl
adc
cli
ret
xchg
popa
les
sbb
std
cmp
push
sahf
and
xchg
js
sbb
xchg
cmp
xchg
into
in
ret
jmp
dec
loope
in
pop
sbb
cld
mov
and
test
or
mov
and
xor
sub
lahf
pop
not
cmp
ficoms
push
adc
daa
inc
lret
mov
in
stc
sti
xor
pop
icebp
std
lock
xor
inc
stc
dec
rclb
sar
movsb
addr16
or
adc
inc
mov
xor
int
mov
cmp
outsb
xchg
stos
mov
inc
push
adc
outsb
pop
mov
loopne
decb
mov
xor
add
pushf
xlat
push
adc
mov
push
adc
pushf
in
jmp
push
cld
xchg
cmp
jae
push
es
and
sbb
push
dec
sbb
stc
fmuls
jmp
filds
out
les
sarl
cmpsl
cmp
int3
jo
repnz
aam
jp
sbb
shrb
adc
imulb
insl
ret
arpl
fnsave
push
push
add
mov
inc
ds
fdivr
pushf
jo
push
movsb
pop
xchg
jmp
sub
ss
icebp
cltd
push
mov
cmp
mov
sbb
ja
call
or
insl
xor
into
fwait
mov
jno
inc
fs
subl
dec
adc
fwait
cmp
jae
insl
loopne
repnz
outsb
lea
movsb
sbb
push
adc
inc
in
mov
pop
pop
popa
loope
and
test
data16
fdivl
pushf
xlat
push
adc
mov
push
adc
sub
dec
xchg
pop
loop
cmp
cmp
iret
xchg
and
out
nop
sub
aad
insl
and
movsb
mov
jle
sbb
xor
jge
fwait
movsl
popa
jp
xchg
push
pop
ret
mov
data16
and
xor
mov
inc
aam
imul
sarb
xchg
mov
es
ffreep
pop
pop
pusha
jb
jne
imul
push
insl
fistpl
jns
insl
orl
addr16
cmc
adc
in
xor
aas
jmp
mov
fistpl
js
imul
mov
lock
mov
ffreep
pop
pop
sarb
push
movsb
pop
outsl
call
in
sbb
cmp
rorb
push
adc
cmp
cmp
ficomps
sbb
sub
mov
jg
daa
loop
jmp
push
mov
test
mov
in
push
or
addr16
test
aam
mov
shrl
mov
cld
cmp
sub
xor
sub
adc
mov
pop
cmc
je
xor
in
xchg
jb
repz
leave
fadds
dec
mov
test
cmp
jb
stos
stc
xchg
scas
mov
cmp
pop
sbb
push
sbb
lods
outsl
les
sahf
mov
mov
or
and
dec
lret
divl
inc
adc
inc
pop
lods
inc
push
lods
cmp
and
inc
push
adc
in
dec
adc
inc
ret
sbb
lcall
es
into
push
inc
mov
movsl
movsl
sti
out
cmpsb
adc
mov
fisttps
xor
mov
cmp
mov
mov
lods
fwait
cmc
and
inc
popf
sub
jecxz
xchg
mov
cli
xlat
aad
push
loopne
movsb
movsb
in
mov
sub
fcmovnb
and
inc
jne
dec
xor
or
ja
fsubp
imul
call
sub
xlat
addr16
and
punpckldq
out
shll
push
jnp
shrb
aam
repz
jne
push
adc
vpcomuw
jb
outsb
lret
inc
mov
mov
test
cltd
xor
stos
inc
lahf
push
ficomps
sub
icebp
add
mov
sbb
rorb
cmp
out
xor
xchg
mov
push
std
mov
mov
sbb
inc
and
adc
xchg
add
inc
shlb
out
rsm
loope
xchg
ret
mov
inc
scas
or
loop
ret
lret
leave
mov
push
sub
repz
push
xchg
mov
lock
aaa
shl
mov
mov
ret
push
mov
loop
push
xor
jb
push
fnsave
push
test
dec
ss
test
push
out
add
or
mov
popf
roll
mov
int
add
adc
lea
incb
cmc
xchg
push
sbb
lret
sahf
fucom
jbe
sahf
mov
outsb
cltd
and
lcall
jne
or
loope
iret
inc
cmpsb
sub
clc
push
mov
or
cmpsl
mov
addl
lods
pop
loopne
xchg
add
stos
test
push
pop
out
mov
hlt
ja
int3
bsr
cmp
mulb
pop
lods
loop
mov
repz
negl
repz
hlt
pop
mov
mov
dec
sub
sub
sarl
loopne
xchg
and
inc
jo
insl
pop
lret
jae
ficomps
adc
stos
fidivrs
outsl
call
clc
rcrb
lea
mov
xor
or
xchg
cmpsb
cmp
ficomps
cmp
repz
shl
loopne
inc
jnp
sahf
cmp
push
outsb
rorb
adc
ret
es
cmp
push
mull
mov
push
scas
or
and
imul
outsl
inc
mov
pop
inc
fcomps
lea
xchg
mov
xchg
popf
push
mov
cli
out
leave
sbb
ds
sub
push
ds
out
shlb
and
dec
push
lock
pop
loope
mov
std
addb
adc
jle
stos
sar
outsl
aad
shl
gs
out
adc
push
shll
cmovg
ss
xchg
loopne
sub
dec
outsl
test
out
xchg
push
push
cmp
out
sbb
fcmovu
ja
movsb
dec
cmp
outsl
orb
shll
movntps
jno
jo
adc
sub
clc
roll
jne
push
repz
lock
inc
mov
add
pop
dec
sbb
daa
adc
mov
push
jg
movsl
dec
xchg
and
out
int
push
or
jmp
ljmp
mov
xchg
stc
cmp
mov
insl
xchg
adc
xchg
or
jl
cmp
lods
icebp
mov
insb
push
adc
inc
iret
mov
inc
fadds
adc
dec
xchg
gs
fsts
pop
sub
in
pop
adc
xchg
mov
out
sbbl
mov
xor
pop
mov
lods
rcrb
aaa
mov
push
and
jle
cmpl
in
push
ss
sbb
jne
push
mov
cmp
mov
lret
scas
les
lea
arpl
push
lods
dec
lds
std
push
xchg
cs
and
lret
inc
pusha
push
adc
out
mov
fisubrs
pop
lea
push
imul
pop
and
xor
fdivrs
pusha
push
adc
adc
adc
mov
add
mov
test
fisttps
pop
push
dec
pop
xor
sub
pop
and
out
dec
inc
test
push
jbe
syscall
xchg
xor
fninit
xor
push
stos
aam
xor
popf
mov
sahf
aaa
in
call
and
cmpsb
cmp
xor
shll
sahf
push
into
inc
mov
pusha
xlat
loope
adc
sbb
mov
pop
jmp
xor
sahf
mov
stos
std
lea
ret
imulb
test
lock
outsl
movsl
xchg
xchg
hlt
pop
addr16
mov
sbb
ficoml
add
or
pop
adc
sbb
mov
jo
mov
jne
push
inc
mov
mov
cmp
ds
les
add
push
mov
outsb
jecxz
lahf
pop
adc
inc
je
imul
lods
add
add
xor
push
fwait
mov
sub
xchg
pop
pop
or
jmp
cmpsl
aas
out
in
inc
mov
ret
orl
fisubs
sbb
test
repz
dec
std
icebp
jge,pt
popf
popf
adc
ret
int
push
jbe
jae
movsl
inc
adc
inc
leave
aad
and
in
subb
pusha
adc
xor
mov
in
out
cmc
pushf
push
mov
xchg
test
jecxz
lock
xor
push
shlb
rcr
adc
scas
mov
and
hlt
add
imul
cli
cmp
jns
ret
or
cwtl
shll
sub
xor
xor
push
push
push
ljmp
push
repz
pop
movsl
fistpll
es
jg
push
sbb
outsb
fstps
pop
out
mov
mov
push
fnstcw
in
push
das
mov
adc
lods
mov
fwait
out
aaa
push
outsb
insl
scas
stos
loopne
movsl
dec
cmp
mov
sbb
imul
int3
inc
inc
in
scas
jmp
lods
inc
push
adc
sbb
xor
mov
out
inc
mov
ret
nop
add
enter
pushf
push
or
in
inc
test
xchg
and
mov
ret
nop
into
call
pop
cs
sub
cmp
sub
test
dec
xchg
and
sub
push
adc
xchg
push
cmpl
mov
and
pop
adc
sahf
push
cmp
mov
stos
pop
sarl
cli
cwtl
push
or
xor
jnp
or
dec
xchg
push
cli
xorb
lret
sar
xchg
dec
dec
inc
imul
mov
jg
andb
xchg
lods
mov
mov
sub
jbe
sbb
cmp
loope
cmp
cmpb
aam
pop
inc
mov
stos
stos
mov
mov
scas
sbb
out
pushf
mov
aad
dec
fsubs
test
bound
je
in
fsubl
inc
inc
xor
nop
mov
and
push
in
adc
subl
adc
push
outsb
les
stc
data16
lcall
ret
push
into
sahf
rcl
into
lret
sahf
nop
fst
add
fwait
add
xlat
lods
fwait
shll
or
dec
das
or
cmpsl
adc
sbb
dec
shrl
rolb
cmpsl
mov
roll
inc
shll
insb
jge
and
cmp
into
jmp
push
shlb
xchg
fimuls
pop
inc
jge
push
cmp
mov
push
addr16
and
or
test
mov
andl
fbstp
dec
push
mov
or
jne
into
jno
dec
dec
int
icebp
les
sti
in
ljmp
cwtl
imulb
sahf
pushf
xchg
xor
lcall
lods
inc
loopne
cmp
inc
add
into
mov
add
ljmp
lahf
test
imul
imul
sbb
and
add
sti
rorb
push
mov
insb
add
sti
std
xor
or
ss
jne
add
clc
loopne
out
inc
push
gs
sbb
push
insl
fistpll
test
mov
inc
shll
inc
ds
adc
lea
decb
dec
stos
sub
cmp
fiadds
cmp
fmull
cmp
jne
outsb
mov
lods
mov
push
adc
lret
sub
cmc
rorl
adc
mov
cs
out
mov
push
jecxz
push
out
scas
cmpsb
in
jnp
or
sub
out
imul
repnz
pop
fdivl
test
and
and
out
dec
and
loopne
cmpsb
nop
sub
mov
dec
clc
in
inc
cmp
es
ret
inc
out
gs
fs
push
xchg
lock
pop
outsb
es
shll
and
dec
lock
sbb
stos
inc
dec
ds
ficomps
sub
dec
sbb
cmpl
mov
add
xor
jne
push
cmp
divps
leave
xchg
sub
push
out
mov
xor
aas
test
inc
pop
push
insb
push
sti
cltd
test
in
mov
lods
sar
xchg
popf
gs
cwtl
insl
fidivrl
jecxz
push
adc
pusha
icebp
mov
mov
xchg
scas
mov
es
rorb
cmp
cmp
mov
inc
pop
adc
push
movsb
cmp
test
in
mov
lods
xchg
jae
movb
xor
push
lds
mov
jg
loopne
mov
es
out
push
cmc
add
dec
sti
adc
imul
lock
je
fisttpl
std
inc
push
adc
repz
inc
popa
pop
cmp
arpl
decb
xor
xor
cmpsl
mov
sbb
lret
push
imul
xlat
lock
fbstp
and
adc
movsb
mov
jecxz
loopne
xor
clc
pop
call
inc
push
xchg
and
and
fcoml
push
cmpsl
cmp
push
xor
push
cld
jb
addr16
icebp
xchg
aad
push
xor
and
push
ficoms
dec
shl
lret
shlb
push
jecxz
mov
mov
cmp
ds
mov
clc
sub
leave
xchg
jl
fsubrs
cmp
xlat
icebp
outsb
push
std
pop
hlt
ja
xor
dec
xchg
and
jl
pop
mov
nop
cmpsb
push
jb
cwtl
stos
ds
cmp
mov
push
out
sbb
mov
insb
dec
xchg
pop
int
mov
push
lods
icebp
mov
inc
mov
out
stos
dec
push
loope
sub
or
or
adc
or
lea
jbe
test
or
cmp
xchg
mov
gs
adc
add
adc
inc
push
adc
mov
adc
and
negb
int
adc
push
dec
scas
cmp
mov
ret
dec
jns
sub
int3
mov
and
sahf
scas
inc
xchg
test
xchg
gs
imul
push
mov
fnsave
mov
sub
int
and
ja
push
and
cltd
sub
sub
push
and
push
mov
adc
cmp
not
jg
fmull
test
rcll
mov
out
daa
jbe
in
and
jbe
xchg
adc
pop
xchg
mov
inc
adc
adc
test
outsl
sarb
adc
add
mov
aaa
xor
xchg
sbb
inc
mov
rcll
test
cmpb
sub
inc
adc
xor
sti
fs
hlt
push
repz
xor
inc
push
mov
leave
mov
lods
popf
jecxz
xor
jle
out
into
jg
jmp
lcall
fnstsw
xchg
cmp
push
adc
cwtl
insb
push
lret
pop
mov
sbb
fs
cmp
inc
inc
jnp
clc
aaa
mov
xor
push
cmp
cmc
jmp
mov
ret
mov
sarl
jp
xchg
out
icebp
add
dec
ja
movsl
ljmp
cmpsb
arpl
push
adc
frstpm(287
aad
push
xor
pop
pop
add
inc
push
adc
cmp
push
stc
stos
sarb
nop
xor
inc
addb
test
andl
xchg
jge
and
or
or
and
sbb
aas
jecxz
sub
insl
rclb
pop
ss
or
out
mov
fisubs
lea
mov
and
pop
mov
es
pop
xchg
mov
cmp
icebp
mov
sub
in
pop
sarb
add
fsts
out
cmpsb
pop
jge
repz
ss
lods
pop
cmp
push
push
lret
mov
pop
lock
out
mov
outsb
mov
sub
out
lahf
popa
cmp
mov
out
sbb
leave
cmp
xchg
lods
pop
xor
pop
lret
or
pop
cmp
push
push
data16
inc
and
je
shlb
sub
lods
out
cmp
lcall
xchg
scas
stc
out
jle
lock
sbb
lea
dec
xchg
test
push
cmp
adc
lds
push
movsl
ds
inc
sub
and
xchg
fadd
inc
aad
cs
cs
sti
ss
pop
jnp
in
imul
pop
fisubs
cs
and
pop
fstpt
add
cwtl
cmp
fstp
arpl
mov
aaa
push
movsb
xor
xchg
inc
xor
pop
mov
mov
fidivrs
mov
pop
outsl
pop
mov
pop
inc
or
lea
push
jecxz
pop
movsb
shll
or
lods
jecxz
cltd
call
das
daa
cmpsl
insl
scas
std
push
test
fildl
cmp
fsts
jecxz
out
xor
mov
cwtl
mov
scas
fnstsw
les
bound
push
jmp
ljmp
ss
cmp
andb
loope
repnz
sti
add
mov
cmp
sarl
mov
or
les
leave
pop
and
mov
or
cmpb
push
and
fildll
sub
lahf
lds
cld
add
adc
mov
pushf
test
les
out
jb
mov
sub
push
and
adc
gs
inc
pop
push
pop
insb
ret
sahf
in
lods
rcrb
fdivr
mov
and
push
adc
jns
mov
outsl
pop
clc
adc
inc
cmpsl
pop
sbb
sbb
lods
jne
cs
dec
adc
push
outsl
and
cmp
cs
lret
lret
dec
xchg
mov
inc
and
inc
push
out
repz
pop
sbb
bound
bound
clc
jecxz
jg
stc
pop
fxch
iret
sbb
and
filds
xchg
aad
and
mov
ret
int
sub
mov
les
out
inc
xchg
xchg
push
ljmp
xchg
sbb
mov
outsb
adc
rclb
fs
mov
pusha
pusha
adc
push
and
xchg
inc
enter
push
ja
xchg
inc
loope
adc
sbb
sub
and
adcl
testb
add
pop
sub
xor
sbb
aas
fldt
sub
mov
scas
cmc
or
xor
shll
xchg
jl
mov
or
shrb
or
adc
movl
in
cmc
popa
roll
adc
jmp
fiaddl
xor
sub
sarb
push
clc
in
popf
imul
dec
push
xchg
rorb
clc
in
repnz
cmc
mov
fisubrl
xchg
cli
pop
sbb
cli
mov
cwtl
mov
nop
cmpsl
push
push
daa
aad
xor
or
mov
aam
mov
pusha
push
adc
into
icebp
addr16
popa
mov
push
shrb
and
jge
xor
insl
lcall
adc
add
arpl
pusha
push
adc
cltd
cld
scas
xchg
in
imul
dec
push
cmp
push
sub
push
pop
cld
sub
pusha
xor
adc
push
into
fidivl
cmp
es
mov
mov
aas
fcomps
mov
and
xor
out
xchg
dec
xchg
push
js
ds
nop
sub
adc
push
ss
fidivl
inc
cmpl
dec
fwait
lahf
xchg
gs
push
pop
cmp
pop
call
xor
jecxz
pop
sarl
loopne
test
cmp
pushf
mov
js
cmp
add
mov
cmp
add
test
inc
push
adc
in
test
jb
sub
lock
mov
cs
imul
push
adc
shl
fadds
adc
push
adc
lahf
dec
loop
pop
or
xor
test
mov
push
cmc
outsl
mov
mov
in
fadds
adc
inc
xchg
sub
push
inc
xor
xor
imul
xchg
jae
xor
pop
pop
je
pop
in
xchg
xor
aas
and
jno
shrb
xor
cmp
jnp
pop
push
movsl
dec
loopne
inc
js
xchg
and
and
call
lods
pop
js
jg
inc
push
adc
inc
lret
xlat
lods
or
cmp
push
dec
out
mov
adc
pop
adc
imul
outsl
or
dec
xchg
pop
jne
les
and
cmp
mov
movsb
jbe
cmp
mov
aad
bound
sahf
push
jbe
adc
fsubrl
dec
cmp
xor
mov
sbb
aam
xor
lret
or
insl
mov
out
sub
mov
inc
push
adc
sub
adc
adc
mov
out
insb
iret
movsb
add
lcall
aaa
sbb
ljmp
or
dec
jl
push
push
shrb
lods
xchg
ret
dec
into
sahf
loopne
lcall
mov
inc
aam
sbb
test
jae
scas
sbb
xor
inc
fnstcw
outsl
xor
jae
sahf
sbb
ret
jne
out
fsub
add
outsb
fmul
push
or
out
pop
int3
push
mov
sti
dec
fdiv
ss
stos
sbb
sub
inc
popf
mov
ret
push
or
int3
enter
insb
aaa
dec
aas
xchg
aad
dec
pop
jg
addl
mov
add
or
in
std
out
movsl
inc
test
data16
sub
sub
sti
out
ljmp
bound
das
push
mov
and
mov
inc
and
outsb
popf
imul
add
xchg
xor
out
xchg
mov
jne
mov
pop
test
adc
adc
push
pusha
push
aam
aas
mov
jb
pop
adc
jp
and
jl
lods
sub
dec
scas
sti
cmpb
sub
stos
out
inc
or
or
jnp
data16
fwait
lds
pop
jo
lock
mov
add
xchg
rcll
in
and
aaa
mov
cmp
cmc
jmp
xor
mov
out
ljmp
mov
sub
nop
dec
std
fwait
imull
jl
sbb
and
push
push
mov
fsubp
inc
push
adc
mov
sub
imul
negb
adc
cmp
popa
mov
cmc
ds
pusha
sub
in
cmpb
mov
popl
out
jno
es
imul
outsl
pusha
and
std
in
popl
out
cltd
add
repnz
and
test
push
jbe
ds
push
mov
ror
push
jnp
clc
or
sbb
fildll
fcoms
mov
push
movsb
cmp
fidivl
test
add
pop
or
nop
mov
cmpsl
dec
jmp
xor
cli
sarl
jo
sbb
push
sub
dec
pop
in
push
ss
or
mov
xor
mov
mov
orl
mov
imul
lock
mov
test
int3
xchg
and
sub
out
mov
nop
sub
lock
insl
push
in
xor
daa
dec
jmp
mov
lds
mov
lahf
mov
pop
bound
mov
mov
xor
loopne
mov
lods
push
cmpsl
xor
jae
xchg
movsl
loop
mov
push
shl
jge
icebp
imul
lret
lahf
cmp
fldt
scas
xchg
loopne
mov
aam
mov
push
jns
fsub
xchg
add
push
sub
in
out
mov
lock
xchg
xchg
pop
js
dec
xchg
push
mov
fdivp
add
stos
add
sbb
ds
inc
inc
cmp
add
daa
and
inc
pop
sarb
mov
mov
push
rolb
out
test
repnz
add
push
adc
mov
fcmovb
mov
xor
sub
mov
aad
pop
out
xor
fdivs
aad
fdivs
cli
dec
xchg
je
shlb
stc
shrl
inc
xchg
jge
fdivl
scas
sarb
aaa
add
xor
and
push
aas
ss
mov
or
movsl
setns
cmc
ds
mov
fldenv
xchg
scas
subl
mov
mov
jno
in
xorl
mov
push
and
or
in
add
push
adc
mov
fsts
mov
fsubrl
mov
jns
xor
je
fbstp
test
loope
inc
dec
inc
stos
movsl
enter
int
pop
jb
pusha
mov
adc
sbb
leave
jno
das
inc
xchg
sub
adcl
sub
inc
push
adc
into
ja
and
movb
mov
movsl
movsl
cwtl
cmp
inc
fwait
stos
fdivs
lahf
jmp
adc
fmulp
push
stos
inc
popf
ret
aaa
inc
sarb
stos
sbb
push
fs
adc
mov
mov
add
jb
ljmp
mov
mov
in
pop
inc
or
jbe
adc
aam
inc
inc
mov
mov
xor
outsl
fwait
jb
mov
cltd
mov
out
inc
push
adc
lods
scas
in
push
stos
xor
jmp
xor
mov
arpl
mov
je
inc
cltd
push
in
push
stc
and
xor
pushf
aas
mov
pop
ret
in
cmpsb
add
inc
jae
jo
mov
mov
and
bound
push
mov
out
xor
das
inc
cmove
mov
call
xchg
jl
dec
popf
sbb
in
sbbb
sub
daa
lods
iret
shll
lcall
adc
dec
dec
and
push
shll
jnp
cmp
rolb
in
pop
xchg
dec
cld
in
push
out
or
xchg
sub
repnz
out
clc
inc
add
jecxz
jmp
fnstsw
nop
shr
jbe
cli
and
and
je
sub
test
inc
xor
push
repz
mov
pop
mov
dec
mov
movsb
aam
stc
mov
stc
sub
out
mov
lods
sbb
pop
mov
jmp
mov
fs
data16
adc
rclb
out
leave
imul
cltd
gs
or
cmp
call
jns
repz
pop
ret
push
dec
xchg
pop
dec
xchg
mov
in
inc
dec
data16
popa
and
mov
movsb
dec
xchg
xor
and
out
and
aad
sbb
in
xchg
push
cmc
outsl
push
xor
xchg
sub
mov
cmpsb
add
arpl
xchg
mov
pop
mov
jb
pop
xchg
lea
outsb
cld
sarl
fadds
dec
out
mov
lcall
pushf
cmp
dec
cmp
and
popa
andl
cmp
arpl
or
xchg
push
loope
dec
out
dec
icebp
in
xchg
xor
xchg
sub
cmp
sub
jno
cmpsl
dec
xchg
and
imul
andl
jns
push
lods
pop
ds
cwtl
in
test
fidivs
adc
in
sub
lods
or
cmp
rclb
out
pop
inc
daa
dec
xchg
mov
out
hlt
cmpsl
dec
pushf
cs
in
leave
xchg
pop
rclb
jnp
test
shrb
out
sbb
imul
push
out
dec
aad
leave
xchg
xor
xor
sub
cmp
xchg
and
pop
cmpl
mov
add
and
in
xchg
sub
iret
mov
xchg
and
loope
test
jno
lret
mov
sahf
and
out
xchg
sub
outsb
xchg
xchg
daa
ss
rol
push
insb
fcomps
dec
inc
xchg
push
bound
mov
mov
fwait
and
adc
mov
cltd
mov
mov
add
stos
loopne
aas
movsl
out
pop
mov
push
loop
dec
movsb
ret
leave
mov
jo
mov
inc
cmp
inc
sub
int3
jp
test
jbe
mov
fcomi
lods
or
out
int
bound
jecxz
imul
fs
ficoms
in
hlt
and
sub
xchg
dec
clc
cmp
dec
cmc
and
dec
xor
icebp
mov
add
inc
cmpsl
sbb
rorl
mov
stos
pop
push
iret
lea
mov
addr16
arpl
pop
test
push
adc
enter
out
mov
sub
dec
xchg
and
jmp
xchg
cs
and
adc
ja
push
cld
into
inc
jno
imulb
aam
imul
test
sbb
push
adc
adc
push
adc
dec
jg
lds
fstpt
xchg
dec
mov
fdiv
mul
add
imul
add
mov
out
fucom
xchg
jne
sub
and
push
adc
mov
push
adc
sbb
jb
or
sarl
mov
or
pusha
mov
fbld
leave
jnp
push
ret
cmpsb
aaa
leave
test
sbb
faddl
cltd
adc
add
and
push
shl
pop
mov
shrl
xor
fwait
mov
cmp
adc
je
pop
mov
and
aas
std
mov
into
into
leave
leave
lods
or
enter
xchg
cmc
rcll
mov
pop
mov
inc
push
adc
bound
movb
clc
fildl
orl
mov
sti
jo
outsb
insl
test
and
push
pop
pop
adc
pop
pop
push
sbb
mov
loop
adc
and
push
sub
inc
mov
cmp
pop
dec
cmpsl
pop
dec
cmpsl
mov
int3
insl
pop
dec
push
scas
cli
xchg
outsl
jge
add
mull
popf
and
inc
fimuls
push
sbb
cmpsb
push
push
jne
push
inc
push
adc
mov
mov
cmpsl
ss
jnp
push
xchg
dec
enter
rcrl
das
movsl
xor
movsb
dec
out
sahf
cmpsb
dec
sub
sbb
xorb
sub
sbb
sub
in
fmuls
insl
scas
pop
pop
fistpl
inc
mov
pop
loope
cmp
rolb
in
mov
lods
add
es
xchg
xor
push
jnp
jmp
add
rolb
xchg
dec
xchg
scas
cmpsb
xchg
scas
mov
call
add
inc
push
adc
and
cld
or
daa
mov
mov
loop
pop
shl
popl
pop
ss
dec
push
push
das
mov
dec
xchg
xchg
mov
sub
xor
sub
sbb
sub
in
fcoms
insl
scas
pop
pop
fistpl
inc
mov
pop
loope
out
cmp
insl
fidivl
ds
repnz
mov
out
pop
jns
dec
xchg
pop
jae
in
fdivrs
ss
arpl
ss
mov
sub
dec
dec
sbb
dec
sbb
pop
movsb
and
xchg
push
push
push
mull
scas
dec
xchg
mov
sub
push
dec
sbb
pop
and
xchg
pop
jno
pop
outsl
or
outsl
lret
xchg
scas
movsb
xchg
mov
aas
xor
dec
xchg
pop
jae
adc
pop
cmp
fmuls
adc
xchg
xchg
sub
stos
fcomi
test
jo
push
adc
push
mov
xchg
adc
mov
xchg
cmp
test
daa
adc
sub
mov
mov
fs
insb
mov
ffreep
outsb
push
inc
jmp
mov
push
dec
and
sti
nop
lea
push
jae
jp
incl
roll
cmp
sub
cmp
push
mov
and
fldenv
pop
mov
push
ret
inc
and
mov
cmp
fwait
jno
mov
scas
inc
fildl
fdivs
and
es
rolb
inc
sub
pop
dec
hlt
xchg
test
lods
pop
adc
jne
cltd
outsb
push
inc
push
ja
test
loop
loop
nop
iret
xchg
mov
loop
sbb
cmc
sbb
mov
push
pop
lret
shrl
adc
popf
lret
shrl
mov
push
popa
aad
cwtl
in
inc
push
out
mov
int
test
mov
insl
sbb
insb
jns
pushf
mov
xchg
jp
xor
xor
xorb
rorb
pusha
cli
cmp
or
fstpl
mov
roll
imulb
pushf
sub
jbe
sahf
sub
dec
fwait
cmp
push
jbe
push
pop
stos
mov
shlb
push
arpl
inc
push
mov
pop
icebp
fdivl
xchg
test
pushf
aad
cltd
rcll
adc
and
cmpsb
repz
inc
and
and
fdivrs
sahf
mov
push
repz
jnp
inc
push
mov
mov
int
out
inc
or
fisubs
add
gs
or
ret
mov
xchg
push
xor
scas
adc
lahf
rdtsc
mov
mov
notb
adc
sub
jbe
cmp
out
jg
dec
subb
loopne
ret
cmpsb
sub
jecxz
ljmp
xorl
pop
add
xchg
adc
push
pop
adc
inc
xor
xchg
fstl
mov
inc
mov
fmul
movsl
xchg
movsl
push
out
xor
xchg
scas
adc
sub
outsl
pop
jbe
xchg
test
push
push
pop
fs
fnstsw
popf
push
lds
in
pop
mov
dec
mov
pop
xor
mov
lret
cmc
cmp
cmp
subb
cmp
aam
xchg
and
push
cmp
xchg
lods
mov
dec
loop
movsl
mov
out
mov
mov
sub
out
cmp
aad
inc
push
adc
daa
imul
mov
insb
adc
loopne
and
cltd
sahf
mul
inc
adc
pop
push
inc
sbb
cmp
and
xchg
adc
repz
pushf
cmp
mov
mov
pop
fnstsw
js
pusha
push
adc
insl
push
clc
mov
ss
jnp
sub
movsl
jae
sub
insl
push
xor
push
adc
xchg
jb
pop
inc
nop
push
adc
mov
mov
call
dec
mov
adc
and
adc
xor
and
call
lods
pop
mov
jnp
in
xchg
fidivrl
mov
imul
dec
xchg
fstpt
fidivl
dec
push
cmpsl
dec
arpl
or
stos
fldcw
enter
pop
fsubrl
gs
xor
push
lods
pop
mov
inc
and
enter
lods
push
add
pop
mov
dec
pop
xchg
and
xlat
arpl
dec
pusha
mov
xchg
mov
daa
dec
xchg
push
inc
cmpsb
sbb
and
ss
outsb
mov
in
add
dec
pop
cwtl
iret
xchg
and
iret
stos
pop
lods
movsb
mov
dec
xchg
mov
xchg
dec
cs
cs
fidivl
jno
add
repnz
mov
imul
aam
fwait
int3
les
adc
mov
or
mov
mov
cmpsb
idivl
jb
sub
outsb
push
mov
mov
sub
stc
mov
arpl
or
jne
add
adc
shrl
rorl
das
icebp
adcl
dec
sahf
out
iret
xchg
lret
xor
adc
xchg
and
adc
mov
iret
enter
cwtl
sub
fnstenv
ja
insb
out
adc
push
cmpsb
dec
adc
jno
jg
push
or
push
mov
pop
inc
xchg
pop
sbb
xor
cmpsb
push
out
rcl
add
stos
pop
cmpsb
xchg
mov
test
insb
cmpsb
shll
mov
leave
lock
mov
lahf
movsb
push
or
loopne
push
inc
jne
mov
inc
inc
push
stos
cmp
jge
adc
sub
les
push
or
stos
lahf
cld
pusha
push
adc
cmp
shll
inc
int3
mov
sbb
jno
out
inc
ja
cltd
jbe
nop
lds
push
inc
sub
jnp
adc
mov
jne
jg
xor
das
fdivl
cmp
fwait
adc
cwtl
addr16
and
xchg
inc
or
shrb
push
adc
aad
js
in
jmp
xor
ret
mov
dec
sbb
sar
subb
popa
int
sub
cmc
mov
pushf
push
fadds
popa
push
adc
pop
xorl
aad
push
or
push
scas
fcoms
scas
sahf
test
sbb
xor
add
xchg
mov
push
dec
imul
stos
flds
add
cmp
jne
fldt
imul
inc
imul
xchg
dec
icebp
inc
mov
jae
enter
adc
popf
xchg
cmc
fstpl
add
in
fistps
pop
sub
pop
mov
add
pop
enter
mov
inc
ss
or
addl
dec
fstps
bound
adc
pop
and
jmp
adc
pop
sahf
sbb
inc
imul
addr16
mov
sbb
push
adc
scas
cmp
fwait
push
or
push
cmp
pop
mov
push
xor
jmp
mov
pop
subb
scas
push
repnz
shll
fdivp
fs
insb
xor
cmp
adc
jne
xlat
outsb
movsb
ret
out
scas
xchg
popa
xor
xchg
sub
jne
add
lahf
mov
pop
outsl
xchg
mov
mov
scas
mov
push
adc
jno
rcr
leave
sbb
in
mov
sub
jb
xchg
loope
int3
push
or
pop
cmp
insl
jmp
movsl
rorl
das
xchg
jns
pop
les
xchg
pop
jno
push
insb
sub
repz
fidivl
dec
push
or
add
xchg
push
mov
push
adc
rcl
mov
xchg
fcoml
xchg
decb
stos
ss
rcl
popf
push
inc
cmp
iret
adc
lods
add
gs
add
test
fdivs
push
inc
xor
in
mov
lods
add
ret
mov
in
pop
mov
xchg
push
mov
mov
cmp
push
push
xchg
xchg
add
fiaddl
hlt
shll
test
jne
scas
pop
out
in
loopne
pop
pop
out
insl
push
dec
jle
popa
outsb
xlat
daa
push
xchg
push
mov
push
inc
sub
fwait
cmp
je
aad
cltd
out
test
cmpsl
rorl
sbb
lods
ds
loop
aam
pusha
push
adc
subl
jp
lds
dec
push
stc
xchg
cmp
mov
shr
sub
pusha
push
adc
sub
sahf
push
popf
mov
inc
fsts
js
push
cmp
mov
dec
and
imul
mov
divl
stc
mov
js
cmp
mov
jl
push
lods
mov
daa
mov
mov
test
push
dec
push
sbb
js
pop
cwtl
jp
lret
cmc
iret
adc
xchg
push
fsubs
xchg
dec
sti
or
movsb
cwtl
inc
and
jno
pusha
mov
ret
inc
scas
stos
pop
xchg
bound
add
stos
lods
ss
sbb
aam
pop
leave
pop
dec
push
lock
sbb
test
fdivrl
mov
lds
adc
shrl
dec
sub
ss
dec
inc
lret
dec
pop
push
jno
push
xlat
popf
sub
fwait
jmp
cwtl
jbe
test
mov
push
imul
or
aam
mov
pop
jl
or
and
out
adc
std
test
and
mov
adc
dec
cli
cmp
pop
cltd
jecxz
sbbb
jle
fistpll
pusha
pop
mov
movsl
outsl
mov
push
adc
fstpl
popa
xor
mov
rcl
dec
xorl
inc
xchg
jne
cld
and
popf
mov
popf
lret
stos
cld
enter
mov
cmp
add
cmp
mov
mov
test
add
pop
loopne
xchg
in
sbb
jl
mov
stos
push
ffreep
ret
push
jne
flds
jecxz
mov
lea
cmp
cmp
push
dec
test
ja
mov
add
inc
mov
outsb
mov
lods
ljmp
mov
inc
fbld
bound
insb
fnstenv
in
roll
fldcw
loopne
push
mov
movsl
sub
scas
jle
pop
repz
out
negb
mov
push
iret
sarl
jbe
and
aad
mov
movsl
inc
cli
mov
lods
popf
lcall
pushl
je
dec
aaa
pop
jne
pop
mov
lret
cmpsb
sub
leave
adc
lret
aad
enter
xor
call
xor
adc
and
cmp
fisubl
cltd
xchg
jle
sbb
pop
mov
fisubrs
lret
mov
mov
daa
fsts
pushf
mov
jae
insl
fnsave
dec
loopne
mov
insb
mov
cmp
call
push
mov
inc
dec
or
adc
insl
ds
push
das
xchg
jge
addb
scas
shll
add
sbb
cs
or
loopne
fstps
sub
cmp
and
fnsave
iret
insb
call
hlt
outsl
cs
push
movsl
mov
rclb
orb
push
cmp
lods
fidivs
int3
es
movsl
mov
xchg
arpl
aam
mov
mov
cwtl
mov
mov
mov
nop
mov
or
inc
je
mov
push
fsts
andl
pop
mov
in
out
mov
arpl
inc
push
sbb
sub
mov
cmp
arpl
jmp
rep
pop
arpl
xor
xor
lods
pop
in
xor
pop
pop
insl
test
scas
shlb
or
cmpsb
les
jmp
adcb
cmpsb
dec
jecxz
lock
adc
decb
jecxz
pop
sub
and
scas
mov
mov
movsl
mov
movsb
mov
dec
xchg
mov
xlat
xor
fdivl
mov
pop
stos
xor
and
sbb
xor
xor
jno
xchg
add
mov
cmp
out
sub
lea
push
icebp
mov
push
scas
mov
dec
dec
in
push
jmp
sbb
and
imul
add
jno
cmp
adc
mov
cmpsl
add
inc
lds
cwtl
push
and
ljmp
cli
mov
push
cs
lock
pop
add
add
aas
cmp
outsb
push
cmpsb
sbb
repnz
pop
out
and
arpl
scas
add
push
sub
cmc
pop
push
pop
and
adc
pop
jns
int
inc
mov
lods
hlt
fsubs
in
ret
pop
jge
add
in
dec
xor
jae
jae
mov
fs
jne
movb
jns
js
sbb
data16
out
out
jno
pop
insl
and
jb
sahf
sub
insb
cmp
in
mov
into
adc
mov
sub
sub
xor
push
sub
xchg
and
jp
fcomi
fcoml
mov
imul
inc
imul
jecxz
test
into
sub
mov
and
fnstenv
lea
aam
shll
rol
clc
mov
rclb
or
enter
imul
add
loop
pop
loopne
xchg
repnz
stc
or
enter
out
cmpsl
or
dec
stos
adc
pop
out
add
lret
and
xchg
mov
jne
xchg
cmp
cld
lcall
mov
and
testl
jns
push
and
or
jmp
popl
sub
add
dec
and
inc
clc
cld
pop
loop
pop
xor
sarl
inc
hlt
cmp
pop
cmc
push
imul
loopne
inc
jle
sub
mov
push
cld
out
out
test
mov
push
mov
mov
mov
aad
mov
int3
lahf
aas
test
fisttpll
stos
push
cmpsb
xchg
into
fs
imul
mov
mov
sub
decl
out
pop
loope
ljmp
dec
xchg
and
and
loope
sbb
dec
call
xchg
and
sar
xchg
subl
dec
test
dec
xchg
and
adc
repnz
outsb
fidivl
clc
xchg
subl
inc
test
dec
xchg
and
mov
in
and
ds
es
shlb
mov
xchg
and
out
mov
push
insl
pop
cmp
ss
xchg
and
pop
inc
loop
sub
dec
xchg
and
out
dec
out
mov
pop
enter
mov
push
inc
mov
sbb
cmp
imul
dec
pushf
dec
int
mov
es
aaa
adcb
movsb
dec
out
mov
pop
je
pop
jmp
jb
mov
es
xor
nop
mov
out
mov
push
insl
pop
cmp
ss
into
xchg
and
pop
inc
push
lret
xor
and
xchg
and
sbb
pop
movb
bound
imul
test
mov
xchg
and
in
loopne
bound
xchg
sub
cld
sahf
nop
pand
test
dec
xchg
sub
movsb
shl
pushf
jmp
fdiv
mov
mov
fs
ja
push
xchg
cmpsl
dec
xchg
ds
fmuls
es
xchg
push
sti
xchg
subb
mov
jge
into
imul
pushf
loop
xlat
jnp
cmp
loope
inc
lods
cmp
inc
sbb
gs
stc
lea
pop
stos
inc
loop
mov
sub
xchg
pop
add
fimuls
cmc
jle
std
mov
sub
in
xchg
sub
mov
imul
xchg
xor
xchg
loopne
add
jbe
ljmp
adc
mov
xor
xor
aad
and
aaa
in
and
sahf
push
sub
es
scas
sub
pop
ret
aam
inc
adc
outsb
fld
fcmovbe
pop
daa
mov
push
repz
adc
movsl
sbb
shlb
push
push
loop
jge
mov
inc
test
jns
inc
mov
cmp
xchg
inc
jno
aam
push
outsb
mov
lods
adc
ja
mov
cmc
mov
mov
adc
pushf
insl
aam
aas
fbld
lds
lods
pushf
sub
ss
addr16
jecxz
lcall
out
sbb
fbstp
cmp
mov
loope
popa
mov
xor
or
popf
cmpsb
aad
mov
shr
xchg
test
pop
popa
push
xor
sub
dec
lahf
sub
sub
mov
lock
imul
and
insb
jb
test
dec
out
inc
loop
and
jmp
push
mov
dec
pop
loopne
test
stos
cmp
fistps
sbb
adc
jnp
sub
jae
inc
dec
xor
ds
push
dec
inc
xchg
mov
add
cs
dec
es
les
gs
out
jno
popa
arpl
cld
xchg
ds
jle
dec
xchg
in
mov
loopne
sahf
aad
jae
xchg
mov
and
fsubl
xor
lea
dec
imul
das
test
mov
cmp
pop
xor
or
sbb
lret
inc
cmp
dec
xor
pop
in
xchg
or
cltd
mov
lahf
sub
aad
xchg
fs
arpl
pop
in
and
adc
out
pop
ja
test
cmp
scas
sbb
fs
fiaddl
mov
fldln2
xor
mov
shlb
mulps
shlb
enter
out
dec
in
mov
les
clc
pop
leave
sbb
jecxz
jo
movsl
dec
loopne
mov
popf
xor
mov
sarb
pop
jmp
stc
sbb
test
imul
imul
popa
fstpt
shlb
adc
lods
sub
in
mov
and
ds
sub
popa
fsubr
gs
lods
loopne
mov
mov
adc
mov
sahf
lcall
adc
mov
xchg
mov
mov
add
xor
mov
mov
add
push
lea
jb
add
jb
add
jb
add
jb
add
adc
add
clc
mov
decb
add
stos
mov
jb
add
jb
add
sub
add
jne
add
scas
mov
xchg
mov
rorb
add
jne
add
adc
mov
push
popl
jne
add
mov
loopne
push
dec
out
sbb
and
mov
cs
stc
dec
and
bound
xor
ds
inc
fistpl
xchg
fimull
adc
aas
insl
pop
pop
shl
xchg
pop
ljmp
into
sub
aas
sub
push
cmp
xchg
es
jmp
fisubl
mov
push
jnp
mov
xchg
sub
fwait
mov
xor
xchg
mov
push
imul
jg
test
cs
mov
cmp
fdivs
stos
xor
sahf
sub
push
mov
xchg
add
stos
inc
jno
mov
dec
and
lea
sti
sbbl
or
outsb
mov
fnsave
sbb
and
dec
mov
sbb
inc
or
inc
cwtl
loope
inc
and
push
scas
cwtl
inc
das
add
xor
test
stos
pop
xchg
mov
aad
pop
aas
insl
stos
add
scas
xor
scas
and
fsts
sbb
out
push
js
add
add
pop
insl
fdivl
movsl
adc
dec
fcomp
sbb
jge
push
inc
pop
into
jge
call
inc
int3
lods
and
push
lods
sub
aam
imul
lret
movsb
sub
dec
and
fdivr
xor
push
lock
push
push
cmc
scas
lcall
arpl
mov
sub
shll
stc
in
ja
mov
sbb
les
scas
inc
lret
mov
fcoms
iret
adc
and
mov
rclb
and
imul
push
test
push
inc
data16
xchg
push
cmpsb
mov
dec
mov
lret
jne
clc
pop
mov
es
inc
js
jmp
jmp
insb
sbbl
mov
movsb
adc
mov
jb
jne
push
push
pop
imul
xor
ds
icebp
mov
pop
inc
mov
push
je
and
push
roll
insl
mov
lods
pop
mov
or
shl
jnp
mov
jno
mov
or
and
cwtl
sub
ss
and
and
mov
pop
cmp
mov
ds
push
int
icebp
pop
xor
in
and
dec
xor
sub
movb
sub
mov
sahf
pop
mov
test
mov
fimull
scas
xchg
movsb
addr16
xlat
dec
ljmp
push
fistpll
add
das
push
xor
pusha
push
push
mov
cmp
aad
stos
andb
ss
sar
mov
cwtl
and
out
xor
mov
gs
xchg
and
fnstcw
cmp
push
std
imul
add
pop
loope
xorl
out
fidivl
jno
cmp
fwait
cmp
aam
loopne
mov
pop
add
lods
scas
andl
pop
jge
loopne
cmp
fdivs
adc
mov
push
pop
arpl
rcrl
mov
fbstp
addr16
cmpl
sub
mov
xchg
mov
sub
push
pop
xor
xchg
push
inc
call
xchg
push
push
gs
fimull
adc
loop
dec
pop
movsl
dec
xor
add
test
lret
mov
loop
cs
leave
xchg
push
clc
xchg
push
imul
dec
pop
sbb
sub
mov
js
into
add
xor
xchg
mov
std
jnp
inc
xor
xchg
and
out
loopne
push
enter
fmuls
xor
adc
xchg
shr
addr16
sarb
fisttps
and
lods
push
lock
adc
imul
push
dec
xchg
in
arpl
and
push
movsb
fxch
imul
sbb
scas
cltd
imul
in
aaa
mov
lcall
pop
bound
mov
nop
jne,pt
icebp
jecxz
dec
adc
sub
pop
mov
push
out
outsb
mov
mov
push
aam
js
lret
arpl
mov
push
stos
inc
loope
sub
dec
pop
fdivrl
stos
sub
aad
mov
pushf
push
divl
insl
sti
mov
int
add
inc
xor
inc
imul
fldenv
xchg
adc
sub
lds
mov
sbb
scas
outsl
inc
fstps
cwtl
add
ret
xlat
xor
sub
insl
aaa
cli
and
pusha
movsb
pop
call
or
fld
outsl
scas
scas
fistl
adc
shrb
daa
lret
cmp
inc
push
das
xorl
sbb
push
fcmove
insb
push
xchg
pop
cmp
sahf
dec
mov
fdivl
sub
pop
cmpsl
sub
mov
inc
pop
pop
dec
pop
and
inc
fwait
int
roll
out
fdivrs
mov
and
sub
mov
mov
fmul
ds
ds
or
imul
and
xchg
cld
jmp
or
sahf
test
nop
mull
adc
outsb
mov
adc
mov
adc
mov
sub
mov
out
xchg
adc
lret
test
pop
movsb
inc
lahf
pop
inc
in
movl
push
push
xor
imul
mov
in
and
sub
scas
jbe
scas
repz
mov
jb
add
adc
cmpsl
push
mov
out
jg
ljmp
pop
or
cmpl
mov
pop
mov
push
xchg
fs
loopne
iret
test
jmp
inc
hlt
test
mov
loope
jge
jae
jle
push
andb
decl
movsb
mov
push
or
jo
mov
push
test
icebp
jmp
push
push
sbb
data16
xlat
mov
and
iret
mov
pop
fmul
lds
ds
sub
ds
push
jecxz
pop
dec
mov
sbb
mov
aam
lcall
call
std
inc
dec
and
popf
xor
push
in
aas
mov
out
fidivl
fidivrs
stos
leave
adc
jae
fcomip
bound
xor
sahf
ss
push
dec
sub
inc
sub
imul
xorl
sub
roll
lods
pop
out
mov
dec
fdivrp
pop
mov
test
or
cs
cmpsb
pop
lret
cmp
xor
lcall
icebp
enter
xor
sarb
mov
pushf
and
call
lock
cmp
inc
jl
leave
call
call
push
or
ficompl
es
xchg
push
xchg
pop
les
add
test
pop
xchg
sub
inc
movsl
adc
pop
mov
and
sub
inc
ds
out
sbb
mov
pop
stos
add
adc
cmp
cli
cmpsl
rcll
and
pop
imul
clc
rcrb
mov
lea
lcall
dec
nop
clc
sbb
dec
push
mov
xchg
sub
jae
imul
sub
in
popa
lea
sub
pop
ret
pop
fdivl
mov
ss
xchg
pop
jne
sbb
push
dec
push
lret
xor
and
pop
mov
mov
ss
xchg
pop
jbe
pop
and
mov
jns
dec
fildll
insb
add
movsb
mov
lea
fidivs
mov
addr16
xchg
in
mov
sub
outsb
in
push
rcrb
xchg
ficoml
push
cmp
ss
cmpsb
aaa
test
out
and
add
mov
test
loope
and
cmp
inc
out
scas
outsb
les
mov
mov
push
jno
mov
cmp
faddl
shl
push
mov
inc
inc
ret
adc
mov
push
testl
pop
div
lods
sbb
bound
out
adc
sbb
stos
int3
out
insl
pop
adc
popf
inc
fstl
pop
jns
inc
fildl
lret
xor
and
mov
pop
and
xchg
rcl
es
add
in
push
dec
push
xlat
hlt
fbld
mov
movsl
sub
cwtl
mov
or
fnsave
inc
pop
dec
stos
pop
mov
scas
add
mov
and
inc
sbb
pusha
adcl
push
mov
inc
scas
jmp
dec
pop
push
push
inc
fldenv
scas
stos
aas
xchg
stos
jne
dec
jns
mov
push
aam
push
add
addr16
fidivl
xor
mov
push
mov
xor
lods
dec
cld
jmp
popf
mov
xchg
push
lea
xchg
cmp
pop
xor
cmp
mov
iret
adc
lock
xchg
aas
outsl
cmp
in
push
inc
loope
xchg
imul
jmp
dec
mov
in
mov
ss
inc
lahf
push
inc
jne
in
xor
das
jbe
sub
in
jb
mov
push
jp
sub
jbe
mov
inc
stos
in
mov
adc
aaa
notb
mov
movsb
push
push
insb
dec
outsl
xchg
shr
xchg
jmp
inc
not
mov
fisubrl
push
iret
pop
dec
out
dec
cmpb
xor
push
incl
popa
cmp
mov
lcall
outsb
shl
mov
sbb
push
test
mov
and
mov
jbe
pusha
and
test
xor
pop
inc
scas
xor
test
shl
std
into
xchg
fwait
pop
xor
cs
cli
adc
ljmp
jmp
out
xchg
lcall
jmp
cmpsl
adc
scas
fs
adc
js
test
push
mov
fidivrs
inc
pop
fucom
push
je
cs
repnz
xchg
push
cmc
outsl
pop
loopne
cmp
shlb
push
mov
push
js
fidivl
dec
out
adcb
xchg
mov
fmuls
aam
and
mov
pop
dec
bound
lea
ds
subl
jmp
rcrb
dec
xchg
push
dec
loopne
dec
scas
outsb
js
jp
mov
sarl
xchg
sub
pop
xchg
and
lods
scas
lods
pop
in
loopne
inc
je
pushf
cmp
jecxz
mov
dec
pushf
or
popf
mov
dec
out
pop
fidivl
mov
dec
enter
mov
loopne
inc
addr16
xchg
sub
fwait
aas
sub
lret
mov
cmp
xor
dec
enter
and
mov
subl
movsb
ret
xchg
push
jge
sahf
mov
sub
sbb
inc
gs
hlt
outsl
pop
data16
subl
movsb
ret
xchg
push
jge
sahf
mov
sub
cmpsl
mov
jnp
push
hlt
outsl
mov
sbb
pop
xchg
and
lods
cmpsb
mov
add
repz
push
sar
outsl
sub
mov
cmpsb
xor
sub
test
push
lods
shl
xchg
ds
cmpsl
out
pop
cld
aaa
dec
xchg
push
insl
shl
push
bound
pop
mov
mov
dec
jmp
leave
adc
bound
push
ja
lahf
into
pusha
test
stos
xlat
mov
and
push
stos
out
mov
mov
xor
mov
fwait
push
cli
push
push
push
mov
push
cmp
push
jnp
gs
sar
lea
fistpll
inc
and
lds
aaa
test
mov
aas
leave
stc
std
mov
push
dec
scas
inc
pop
insb
ret
insl
outsl
add
sbb
in
or
inc
nop
in
mov
bound
mov
mov
inc
in
adc
scas
mov
mov
add
fsts
sbb
add
dec
pop
fsts
leave
ja
scas
dec
sbb
scas
rolb
scas
setns
pop
ret
mov
mov
and
dec
xchg
insb
sub
pop
les
lahf
js
push
and
negb
pop
pop
stos
inc
int
dec
nop
pusha
push
adc
pop
and
dec
sub
adc
loope
icebp
xlat
pop
lds
stos
dec
mov
xchg
jmp
sbb
aam
cmp
iret
iret
inc
cmp
xchg
cli
sub
in
dec
loop
or
sub
lret
pop
fwait
fwait
sahf
and
stc
cs
stos
mov
xlat
xor
inc
incb
mov
xor
jge
or
xor
ss
test
sahf
fcmovnu
mov
mov
int
sbb
mov
push
inc
es
cmpsl
hlt
push
jo
movsl
jno
mov
sahf
mov
mov
xor
mov
andl
sub
inc
pop
out
xchg
or
loope
sbbl
or
jnp
mov
inc
pop
adc
or
adc
je
shlb
invd
adc
invd
adc
decb
jle
add
bnd
cmpsl
cmp
stos
jo
cltd
push
insl
outsb
clc
and
dec
sub
rolb
call
jnp
sbb
push
adc
dec
aad
xor
dec
addl
mov
dec
je
push
mov
dec
popf
add
addr16
sbb
inc
loop
push
in
lods
fwait
pusha
and
scas
scas
mov
dec
in
lahf
pop
shrb
and
adc
popfw
push
xor
shl
imul
adc
movsl
lods
pop
xor
mov
pop
leave
test
push
sub
rcll
lods
pop
mov
pop
loopne
aas
xor
pop
push
xor
jecxz
arpl
jmp
push
shlb
nop
pusha
push
adc
fwait
mov
fisttpl
mov
mov
ret
loopne
dec
push
fisubrl
dec
outsl
xor
lcall
jge
pop
mov
sbbl
xchg
mov
ds
mov
xchg
loopne
sbb
jle,pn
adc
mov
ret
xchg
sub
push
pop
pop
andl
pop
je
adc
movsb
mov
mov
in
pop
sub
push
jb
pop
ds
pop
inc
out
cmp
mov
out
mov
jb
push
out
jae
sub
push
sar
jge
ja
sbb
jg
push
cmpsl
testl
push
mov
shlb
and
mov
loope
pop
jge
jb
mov
aad
stos
cmp
sbb
mov
dec
pop
push
daa
adc
xchg
cmp
push
gs
mov
out
push
repnz
pop
ja
sahf
dec
imul
pop
jbe
cmp
gs
cmpsb
shl
imul
pop
pushw
lock
icebp
jo
sub
notl
pushf
out
imul
sub
loop
or
push
xor
lret
cmp
lods
cmpsb
stos
jns
cmc
cwtl
adc
inc
das
sub
inc
out
lcall
test
mov
push
cltd
pop
je
je
aaa
test
sub
mov
pop
divl
je
push
or
pop
jmp
sbb
lods
jecxz
mov
push
cmpl
push
adc
xchg
mov
out
mov
mov
lahf
and
loop
inc
pop
jl
arpl
push
inc
mov
dec
xchg
sub
fisubl
sbb
lret
fbld
ds
rcr
mov
fsubr
dec
sbb
sahf
jge
loop
push
pop
pop
lret
mov
xchg
mov
scas
mov
sar
scas
cmp
icebp
or
inc
sub
push
jbe
mov
mov
insb
repnz
sbb
push
adc
lods
enter
and
adc
and
pop
mov
in
xchg
iret
push
mov
or
mov
scas
inc
jmp
adc
add
lea
mov
mov
pop
xor
xchg
insb
xor
mov
push
insb
jp
lahf
pop
cmc
xchg
push
in
jecxz
mov
shrl
pop
mov
les
sbb
xor
scas
mov
fsubrs
xchg
jl
and
jg
sub
mov
popf
mov
out
push
mov
cs
enter
aas
dec
and
lea
fnstcw
int3
and
fnsave
out
add
pop
jmp
sub
xchg
jbe
aas
mov
mov
int
shll
push
repz
test
into
add
and
jecxz
lret
stc
addr16
int3
jecxz
push
aaa
sbb
pop
and
sahf
fnstsw
push
mov
inc
mov
cmp
rcl
popf
cmp
or
iret
push
fsubs
adc
sub
fbstp
and
mull
outsl
jge
add
addr16
scas
subb
adc
jo
pop
je
mov
pop
push
scas
cmp
push
mov
inc
dec
inc
inc
outsl
push
mov
sahf
test
and
jne
outsl
mov
fistpl
xorl
xchg
jle
pop
jl
aam
pop
jbe
jp
pop
mov
std
in
insl
lods
add
pop
lods
aad
addr16
inc
outsl
xor
lods
pop
mov
pop
mov
sbb
sbb
aas
insl
push
std
outsl
push
gs
ljmp
out
imul
lcall
and
mov
pop
pop
aad
addr16
stos
int
push
sti
dec
ds
dec
xchg
pop
jecxz
pop
fsubrs
xchg
push
jo
sbb
pop
ljmp
lcall
cmp
out
fsubl
test
and
pop
repz
and
pop
loopne
cmp
cmp
sbb
and
loop
mov
fimull
mov
rolb
pop
loop
push
lock
ja,pt
dec
xchg
push
repz
mov
xchg
cmp
jb
int
mov
push
loopne
pop
lahf
jg
movsb
in
fidivrl
and
pop
test
xchg
pop
loope
cmp
jno
inc
push
in
mov
lods
sar
fwait
lea
les
jg
mov
push
inc
subl
loope
test
mov
mov
aas
fwait
aas
adc
fidivrl
sub
aas
lods
mov
cmp
xchg
pop
shlb
daa
pop
mov
adc
fwait
jecxz
sub
es
xchg
pop
shlb
es
fbld
sub
mov
or
stos
aad
outsb
push
ja
pop
out
sub
sub
cld
aam
in
or
jmp
mov
sbbl
jmp
es
inc
xor
dec
and
add
fistps
int3
lcall
jb
clc
and
and
sarl
and
dec
push
mov
sbb
sbb
jp
repz
lahf
jbe
xorl
pop
sbb
jnp
dec
out
jo
je
sub
lret
adc
aaa
cwtl
call
dec
rolb
shlb
iret
push
clc
jne
jb
dec
push
adc
inc
lret
dec
xchg
jnp
ljmp
mov
mov
roll
mov
sbb
push
outsl
mov
dec
xchg
cs
pusha
sbb
iret
pop
push
inc
mov
mov
mov
add
sarl
xchg
int3
test
popa
sub
pop
jle
fwait
es
ljmp
decb
mov
test
dec
push
sub
mov
into
fists
adc
mov
adc
adc
adc
pop
jno
jle
scas
and
lods
popa
jbe
stc
cli
lret
les
mov
lods
xor
imul
pusha
cmpsb
inc
add
outsl
mov
mov
dec
push
adc
xor
xchg
shlb
sub
dec
xor
sub
add
pusha
ss
in
in
dec
sbb
inc
push
pop
pop
adc
icebp
mov
push
or
push
adc
mov
jbe
push
into
dec
push
adc
pushf
mov
dec
arpl
nop
orl
adc
mov
in
lds
stos
cmp
mov
dec
pop
inc
stos
cltd
outsl
addb
ss
inc
aas
mov
jecxz
and
fwait
inc
push
mov
into
lcall
cmp
insl
mov
je
mov
cli
stc
data16
fsubr
in
cmp
pusha
ja
mov
add
jbe
imul
stos
pop
push
xor
jecxz
jne
sub
cmpsl
cmp
xchg
jns
lock
xchg
mov
std
les
mov
inc
cmp
mov
push
xchg
out
jle
push
es
or
andb
xchg
mov
pop
mov
sub
dec
jmp
xor
cmp
clc
int
jb
icebp
xor
xlat
lock
cmp
dec
out
pop
mov
adc
pop
xor
xchg
and
movsl
jecxz
daa
inc
sub
and
sbb
pop
push
stos
mov
push
lret
cmp
push
adc
call
jge
loopne
sub
andl
lahf
pop
cmpl
mov
mov
fidivrl
movsl
ds
dec
pushf
jg
in
jb
jge
sbb
xchg
outsb
ds
and
sbb
out
arpl
push
fsub
test
xchg
sub
ficomps
mov
mov
add
sub
push
adc
sub
or
cwtl
ja
fsub
test
insl
fidivl
push
sub
pop
pusha
xchg
scas
movsl
xchg
mov
mov
movsb
xor
xor
cmp
lret
dec
pushf
dec
ret
adc
mov
fiadds
rcll
out
pop
outsl
inc
dec
xchg
nop
test
jno
roll
push
ds
ss
ficoms
fistpl
adc
mov
cmpb
and
je
jns
push
repnz
ds
xor
sbbb
xchg
inc
push
outsl
mov
sbb
in
je
fidivrl
and
xor
bound
xchg
and
sub
sub
or
stos
and
cmp
gs
pause
lret
adcb
lds
fwait
sub
mov
lahf
stos
push
hlt
mov
mov
pop
test
lcall
dec
out
jl
push
inc
orl
loop
fdivrl
pop
adc
push
lea
mov
sbb
add
data16
mov
sbb
xchg
int3
add
adc
or
mov
test
inc
and
sub
in
add
push
sti
ret
pop
dec
shl
jmp
popf
mov
push
adc
add
rcl
leave
hlt
fisttpl
jo
push
dec
mov
or
into
jecxz
mov
ds
xlat
inc
jnp
scas
pop
mov
outsb
inc
push
inc
int
adc
lret
movsl
js
mulb
movsl
fwait
bnd
sub
popf
inc
inc
jne
sub
add
and
xlat
mov
dec
push
add
and
and
xor
scas
pop
xchg
std
inc
inc
in
jp
pusha
data16
pusha
sub
cmp
xchg
sbb
mov
test
jne
lock
hlt
dec
push
adc
xor
jmp
mov
js
sarb
pushf
or
or
jecxz
adc
push
mov
fsubrp
outsb
push
adc
push
xchg
mov
push
sbb
loope
fstpt
sti
xchg
inc
mov
and
adc
mov
lds
pop
int3
xchg
notb
mov
movsb
mov
fldenv
popa
xchg
or
mov
test
int
insl
inc
stos
aaa
lea
cli
dec
fdivrl
sub
cmp
push
cmp
push
adc
and
jg
mov
sar
js
or
cmpsl
sbb
dec
push
cltd
loop
push
mov
mov
bound
jecxz
dec
idiv
mov
xor
or
inc
xchg
rcrl
mov
or
adc
lods
les
dec
pop
sbb
mov
leave
and
jmp
in
movsl
xchg
enter
stos
popf
mov
mov
in
outsl
lea
mov
into
adc
xlat
mov
fstps
cmp
inc
pop
adc
es
add
insl
adc
shl
gs
cmp
push
mov
icebp
sub
filds
scas
xchg
jnp
fistpl
lds
adc
jp
xlat
push
cs
jae
pop
mov
imul
sarl
arpl
ss
mov
sub
dec
dec
sbb
dec
sbb
pop
les
dec
xchg
push
push
push
mull
scas
dec
xchg
mov
sub
push
pop
jge
dec
xchg
pop
jb
adc
xor
adc
cmp
ss
cmp
sti
rolb
scas
inc
sbb
jno
rcr
push
adc
push
mov
mov
mov
dec
pop
pop
mov
movsb
cmp
jo
daa
mov
mov
push
cltd
movsl
xorl
cmp
scas
lods
mov
sarb
adc
jecxz
daa
and
cltd
mov
xchg
test
dec
out
mov
dec
loopne
mov
xor
inc
dec
push
adc
cs
mov
andb
cmp
es
sbb
xchg
and
or
mov
xchg
in
sbb
cmpsl
dec
jmp
cwtl
push
repnz
pop
push
shl
fisubrl
push
push
adc
jb
mov
xchg
fcoms
jmp
push
pop
cmp
lea
dec
xchg
daa
mov
dec
jecxz
pop
add
sbb
push
jno
arpl
adc
xor
sarb
inc
in
jb
mov
sub
xor
xlat
pop
cmp
sub
sub
xor
mov
sbb
cli
stc
inc
out
push
mov
idivl
mov
ret
jb
stos
stc
inc
mov
fmuls
mov
insl
adc
jbe
or
jp
mov
mov
cltd
jno
xor
pop
fwait
ljmp
cmpsb
add
mov
mov
pusha
mov
outsb
stos
pop
ret
outsb
xor
inc
ret
pushf
es
xchg
sub
jmp
or
std
and
in
jne
cmc
orl
cmpsb
jg
dec
xchg
mov
xchg
sarb
pusha
aas
adc
mov
popa
insl
cltd
sahf
mov
arpl
mov
aad
xchg
mov
jno
ja
jb
stos
bound
aad
stos
add
inc
popa
add
fdivl
mov
mov
std
dec
sti
and
outsb
push
xchg
cltd
popf
fs
scas
xchg
sti
cwtl
jmp
fs
mov
adc
push
int
scas
ret
adcl
pop
mov
scas
cmpsl
pop
arpl
adc
repz
adc
pop
and
arpl
sahf
sub
setg
jl
mov
std
mov
dec
inc
sub
and
ds
mov
cli
in
push
sti
addb
push
push
inc
rcrb
mov
fwait
insb
or
adc
test
das
xchg
pop
mov
in
out
jbe
movsl
mov
call
scas
and
cmpl
adc
mov
rsqrtps
adc
add
pop
clc
gs
sarl
pop
xor
shrl
out
pop
mov
jns
add
push
repz
fsubl
cltd
loop
inc
xlat
or
jnp
cwtl
arpl
add
loope
mov
in
mov
mov
push
or
pop
adc
pop
cld
in
pop
inc
fiadds
and
jne
or
xchg
leave
push
jmp
jmp
in
push
dec
mov
adc
lahf
xor
dec
or
inc
jecxz
mov
lds
pop
pop
leave
adc
daa
into
xor
out
ss
sub
sub
or
out
push
movsb
dec
stos
sahf
dec
insb
xor
frstor
dec
cmp
jb
mov
dec
push
movsl
dec
ficomps
push
inc
nop
and
test
nop
imul
lds
sahf
cmp
stos
shll
xchg
pop
xor
dec
xchg
sub
sbb
xchg
sbb
fisubs
lea
orb
std
xlat
sti
outsl
ds
push
cmp
jle
xchg
push
pop
mov
ss
dec
push
push
lds
mov
mov
test
jb
pop
cli
fidivl
dec
xchg
xchg
fimuls
nop
and
bound
insl
fidivl
dec
pushf
mov
fidivl
inc
xchg
out
cmp
dec
xchg
and
lock
lods
pop
mov
outsb
jo
leave
sbb
ds
jp
movsl
dec
inc
push
add
dec
outsb
push
xor
daa
dec
xchg
mov
decl
outsl
leave
xchg
and
out
xchg
sub
stc
xor
inc
and
jmp
jmp
jb
leave
push
sarl
out
push
movsl
dec
subl
ficoms
rcll
or
fbstp
pop
and
dec
xchg
and
xchg
and
testl
jae
lret
add
and
mov
pop
rorb
nop
pusha
int3
pop
into
xadd
xchg
and
sarl
mov
fsubs
imul
loope
sbb
push
push
mov
xor
cmp
fldenv
pop
stos
inc
xor
cmp
sub
push
es
inc
andl
add
jb
pop
sbb
dec
into
das
int3
xor
mov
fcmovb
test
inc
mov
scas
adc
xor
push
jo
sbb
icebp
push
bt
fwait
lea
outsb
cwtl
jno
stos
sub
push
movups
aam
mov
jne
cld
leave
nop
shrb
fs
pop
xor
dec
paddd
ljmp
mov
jge
call
pop
mov
push
nop
es
push
ja
dec
ret
mov
jecxz
into
es
sbb
arpl
push
pop
push
mov
pusha
push
inc
adc
mov
fsubl
adcb
das
je
test
aam
in
lods
cmp
xchg
lods
adc
cmp
std
rolb
dec
mov
inc
test
mov
inc
shl
jns
mov
scas
repz
ret
push
std
lods
sbb
push
xchg
popf
sahf
addr16
sbb
and
out
in
jmp
mov
mov
adc
lods
cmp
and
push
pusha
shl
ljmp
fcomip
data16
push
scas
pop
test
mov
outsl
dec
inc
lahf
pop
ds
inc
cltd
mov
mov
rcrb
std
and
lods
scas
jo
jo
push
jo
push
and
ret
mov
mov
movsb
pop
adc
aas
xchg
jl
or
jp
movsb
outsb
int
adc
pop
jb
or
push
push
scas
pop
call
flds
xor
in
fiaddl
jg
btcl
push
adc
out
pop
aam
mov
cmp
sahf
dec
jbe
repz
lcall
inc
ret
das
xchg
cli
pop
add
ljmp
and
jnp
out
stc
push
mov
pop
fstpl
add
insb
and
ret
lea
mov
jle
ds
sti
sub
push
pusha
in
xor
push
cwtl
fiadds
and
sbb
aad
jb
test
mov
icebp
ja
into
out
cltd
insb
test
popa
in
cwtl
pop
cmpsb
adc
imul
outsb
mov
sub
jg
nop
fucom
inc
gs
lock
and
and
pop
push
sub
jns
clc
incl
dec
enter
and
pop
call
sti
movsb
ret
std
mov
rcrl
sub
xchg
push
push
mov
dec
loopne
test
sti
movsb
shlb
xchg
loop,pt
mov
inc
dec
or
mov
repz
aas
adc
aas
sub
pop
mov
mov
sub
rorb
push
jb
mov
sub
cmp
out
pop
cmpsb
test
insl
fidivrl
and
es
out
scas
ss
or
lods
movsl
rcl
repz
imul
mov
xchg
mov
xchg
cmp
jo
icebp
lock
dec
cmp
inc
cld
xor
xor
inc
xchg
push
js
lahf
dec
push
adc
xchg
and
sub
call
sub
inc
sub
xchg
scas
mov
dec
loopne
xor
loopne
and
adc
xchg
mov
cmc
jecxz
dec
loopne
xorl
mov
pop
ficoms
lock
dec
xchg
mov
dec
stc
adc
sbbb
xchg
pop
cwtl
and
out
cmp
xchg
js
mov
pop
mov
cwtl
inc
mov
psubusb
sbb
dec
mov
jcxz
out
sbb
mov
out
mov
fcomp
xor
popf
and
pushf
fistpll
out
call
mov
inc
comiss
push
into
pop
std
inc
fsub
jmp
in
aad
add
fcomps
cmp
test
lea
jnp
mov
fcoms
lods
insb
int3
pop
add
pop
and
sbb
mov
out
sarl
call
sbb
out
adc
movsb
enter
pop
mov
into
push
pusha
lds
dec
shll
scas
pop
cmp
iret
cmp
inc
dec
xchg
jae
sbb
iret
movsl
lret
jne
cs
dec
sbb
and
popf
and
daa
cmp
dec
mov
cmpb
add
inc
sbb
mov
fldenv
push
cli
xlat
minps
outsb
adc
add
sbb
aam
xor
mov
xor
adc
stos
icebp
sti
inc
ljmp
pushf
jne
fnstenv
jbe
push
out
push
ljmp
adc
add
in
add
push
add
mov
sbb
inc
sbb
xor
push
adc
adc
add
cltd
pop
lds
mov
or
ss
jle
daa
mov
jle
fmuls
clc
xor
test
cmp
push
std
lea
pop
lock
mov
jb
add
mov
adc
dec
fs
or
sbb
xchg
cmpsl
out
jbe
movsl
imul
xor
ret
decb
call
xchg
mov
xchg
lea
or
outsb
mov
rcrl
ds
nop
xchg
sub
aad
out
push
test
popa
scas
popl
pop
push
cmp
and
add
xor
mov
fisubrs
hlt
dec
fwait
mov
xchg
rcrb
out
test
js
and
fcmovne
rcrl
add
fs
loop
mov
sahf
jnp
jbe
and
scas
dec
out
add
sbb
rol
add
sub
mov
xor
add
mov
jle
dec
push
adc
xorb
lods
or
cmp
sarl
sub
cmp
pop
jbe
lret
push
adc
and
movsl
dec
out
mov
movsl
repz
xchg
test
cmp
xchg
and
pop
dec
imul
push
clc
and
pop
dec
cmp
cmp
xchg
out
mov
rolb
dec
xchg
sub
pop
cmp
mov
test
aad
mov
lea
lock
mov
inc
pop
movsl
dec
out
stc
pop
mov
push
sub
sbb
sub
dec
lea
test
cmp
hlt
add
es
shlb
adc
mov
fidivl
or
dec
push
adc
sbb
or
lcall
lcall
imul
sub
call
xchg
and
pop
mov
mov
pop
out
loopne
out
mov
inc
xor
leave
xor
xor
lods
fsts
fsubrl
cmp
mov
xor
sub
lea
lock
mov
cld
pop
movsl
dec
out
leave
mov
nop
and
loopne
out
test
dec
xchg
sub
push
stc
mov
xchg
mov
out
pushf
pushf
repnz
fistpl
and
xchg
mov
add
and
mov
lret
dec
xchg
pop
pusha
mov
test
push
sar
lcall
fnstenv
in
xor
xchg
std
imul
stos
xlat
call
pop
or
push
aas
push
fnsave
das
push
sar
push
popf
sub
movsl
orl
fisttps
aad
sub
jle
call
push
mov
lds
push
stc
inc
jle
test
cmp
lds
inc
mov
mov
cmp
or
mov
xor
mov
popa
aas
fiaddl
mov
jmp
int
in
adc
pusha
push
adc
xchg
and
pop
aaa
addr16
mov
xor
ret
imul
sarb
add
shll
mov
fnstenv
xchg
adcl
dec
lret
mov
test
pusha
jno
rolb
pop
insb
inc
jno
mov
aad
push
out
mov
fiadds
mov
les
adc
imul
inc
clc
add
fcmovne
push
dec
sub
mov
stos
out
fcmove
roll
jb
jmp
scas
scas
push
out
insb
add
jg
add
xor
mov
adc
fs
and
rorb
outsl
in
push
loop
fcmovne
fstpl
les
movsb
mov
jg
std
mov
mov
cmp
lcall
pusha
dec
add
mov
jle
ss
mov
scas
jo
lcall
aaa
push
sub
jg
ficomps
es
lock
sbb
scas
fistpl
fwait
out
cwtl
push
in
push
adc
lret
in
pop
sub
push
in
dec
push
sub
sub
mov
lret
shlb
bound
add
divb
in
push
insl
mov
jne
cmpsl
jbe
cmp
ss
arpl
adc
fs
mov
jns
push
cmp
mov
adc
in
in
mov
shl
shr
lea
popf
hlt
js
mov
adc
xchg
cmp
pop
adc
fadds
rolb
cmp
pop
adc
adc
cmpsb
cmp
add
and
lcall
xchg
jnp
mov
adc
int
dec
pop
out
dec
cmp
pop
adc
jecxz
pop
push
or
mov
pop
adc
pop
outsl
sub
test
out
and
push
movsl
pop
mov
cmp
scas
mov
adc
inc
mov
adc
mov
push
sbb
add
insl
pop
mov
cmovno
mov
loope
sbb
and
adc
arpl
ss
lcall
sbb
gs
xchg
xchg
fnsave
ret
imul
add
push
adc
fwait
rorb
sbb
pop
mov
loope
cmp
xchg
and
pop
mov
sub
push
dec
js
arpl
adc
fstp
call
push
adc
pop
dec
ss
bound
xchg
xor
lods
cli
sarb
insl
in
inc
loop
rorb
loopne
and
mov
xchg
imul
inc
lds
clc
arpl
adc
outsl
es
pop
in
mov
insb
adc
sub
and
cmp
add
sbb
into
add
cmp
jnp
dec
insb
arpl
adc
sub
cmp
push
and
mov
fisubs
and
and
cmp
dec
pop
jae
mov
test
or
nop
out
pop
adc
insl
fidivl
or
cmp
or
push
push
mov
scas
popa
sub
push
dec
xchg
xlat
xor
fnstenv
aas
loope
pop
jecxz
cmp
sbb
push
mov
mov
mov
aad
call
rorl
je
popf
sub
stc
lods
je
inc
in
insb
into
addb
lods
and
push
adc
subps
jno
stc
inc
fisubs
sub
dec
mov
lea
test
dec
das
add
dec
mov
fstpt
pop
adc
lcall
pusha
push
adc
aas
sub
insb
cwtl
jno
adc
adc
xchg
adc
sbbl
int
fildl
adc
arpl
iret
out
xchg
and
lret
and
lret
aaa
mov
ret
and
arpl
adc
js
icebp
sbb
pop
adc
cltd
sbb
ss
fnsave
push
adc
loopne
adc
xor
sbb
inc
fwait
sub
pop
inc
popf
sub
sbb
aad
push
mov
ja
in
mov
mov
cmp
mov
cltd
clc
arpl
adc
pop
inc
fwait
inc
scas
mov
fcmove
mov
add
mov
push
or
sub
sub
jecxz
punpcklbw
pop
adc
or
sub
mov
mov
adc
mov
push
sub
fs
in
rol
xchg
inc
ss
push
mov
add
cmp
mov
cmp
arpl
adc
js
xor
inc
lods
jbe
cs
shrl
filds
push
adc
pusha
or
lea
mov
mov
push
or
xchg
aam
push
adc
test
daa
clc
inc
xchg
mov
lahf
and
loope
push
cmp
mov
jno
mov
dec
cmp
fwait
enter
mov
mov
jecxz
lahf
test
push
je
subps
lods
inc
daa
bound
jne
fildl
adc
fadds
fcoml
mov
cmp
cmpsb
or
mov
pop
mov
sbb
sub
fwait
mov
lcall
movsl
jne
mov
cmpsb
and
inc
repnz
mov
push
xor
and
das
xor
mov
pop
aam
mov
adc
lcall
pop
ds
xchg
mov
adc
lock
or
adc
gs
xchg
xchg
and
pop
sub
adcb
in
lahf
or
pop
mov
adc
movsl
loopne
jne
mov
xchg
jne
sub
push
adc
cmp
jp
int3
push
pop
out
push
fnstcw
cs
lds
dec
add
mov
and
push
and
mov
dec
or
xchg
and
pop
mov
push
rorl
fsubs
jle
fs
adc
mov
push
inc
sarl
dec
cmp
sbb
xchg
pop
sub
pushf
cmp
sbb
mov
sahf
movsl
andb
js
popa
push
adc
lea
mov
sub
push
xchg
jecxz
ljmp
dec
xor
fists
dec
rcrb
push
shlb
sub
fucom
xchg
or
add
and
loopne
ds
out
jns
lock
xlat
inc
stos
cmp
pusha
xchg
and
push
adc
dec
leave
xchg
scas
lcall
sub
fsubl
xor
fistps
imul
mov
jae
aaa
insb
mov
xlat
lods
pop
dec
jns
arpl
adc
mov
push
out
adc
mov
mov
mov
xchg
nop
out
pop
adc
outsl
fdivs
add
dec
jno
pusha
push
adc
sbb
and
sbb
and
jne
mov
push
testl
call
ret
pop
stos
lods
sbb
push
adc
test
shr
adc
stos
es
sti
cmp
pusha
push
adc
pop
cmp
push
adc
adc
mov
and
fsubs
dec
imul
add
sbb
pop
adc
adc
imul
sbbl
push
nop
std
cltd
xchg
fsubrl
xor
adc
xor
enter
imul
mov
pop
das
or
jge
and
push
inc
stos
aad
adc
push
movsb
dec
fs
jge
es
and
out
or
leave
inc
sub
sbb
adc
and
push
jnp
pop
out
push
mov
aas
add
dec
fwait
es
inc
cmp
frstor
fildl
adc
adc
mov
inc
add
pusha
jg
stc
or
jae
pop
dec
mov
aam
push
adc
inc
add
pop
loop
sub
push
xchg
cmpsl
sbb
jae
shl
push
adc
jmp
mul
aad
test
fnsave
data16
es
popa
push
adc
dec
mov
push
adc
xor
iret
mov
mov
mov
outsl
pop
stos
inc
sub
xorl
push
adc
cmc
jns
mov
xchg
inc
fldt
mov
ret
popf
pop
dec
lock
lock
out
adc
sbb
add
adc
mov
cmpsb
pop
sbb
mov
fildl
adc
fiaddl
scas
push
cmp
aas
lret
call
mov
ds
sbb
arpl
adc
cld
cmp
pop
inc
lds
stc
add
sti
outsb
jp
add
mov
cltd
loop
xchg
arpl
data16
mov
push
adc
push
cmp
sbb
push
test
lret
mov
hlt
dec
xor
mov
push
adc
shrl
or
or
push
push
push
dec
fisttpl
sbb
inc
loopne
aad
jmp
add
lods
sbb
sub
jo
lcall
mov
stos
shlb
fbld
movsb
leave
clc
or
push
adc
add
fstl
xchg
sub
mov
cmp
int
dec
xchg
cmp
lea
jle
popa
push
adc
push
add
cmp
outsl
dec
xchg
and
pop
mov
lahf
jb
stos
xchg
and
pusha
push
adc
out
dec
xchg
and
test
test
rolb
ffreep
cmp
leave
xchg
xchg
push
test
stos
shrl
push
cmp
outsb
dec
xchg
sub
aad
mov
mov
int
push
xor
sub
in
dec
cmc
pop
mov
push
cmp
and
push
fdivp
sub
or
xchg
popa
add
mov
fdivs
mov
es
xchg
mov
add
cwtl
cmp
and
xchg
es
cmp
inc
push
movsb
dec
xchg
scas
mov
and
mov
xchg
cmp
repnz
jecxz
cmpsl
adc
cmpsb
mov
mov
mov
pop
lret
mov
fistps
es
jae
insl
fidivl
mov
lods
pop
ss
push
adc
call
ljmp
dec
xchg
sub
or
testb
dec
xchg
into
in
push
adc
and
or
pop
mov
add
xchg
mov
and
mov
pop
xor
dec
xchg
and
insb
pop
jo
test
fsubrl
cmp
bound
push
cmovns
pusha
push
adc
sbb
jno
add
and
sub
ret
dec
fwait
jne,pt
and
sub
pop
ja
xlat
mov
imul
popa
stc
pop
mov
lahf
jge
les
adc
and
call
sub
xor
test
xor
popa
push
inc
and
sub
into
pop
divl
dec
xor
mov
stos
mov
stc
mov
jecxz
jns
sub
push
xchg
xchg
mov
adc
movsb
inc
mov
pop
jbe
cltd
pop
inc
outsb
iret
call
mov
inc
sub
xor
incl
xchg
fnsave
in
pop
fwait
cwtl
in
into
jb
rorl
xchg
mov
test
fcomps
popa
push
adc
sbb
lret
push
or
mov
cli
add
cmpsb
sti
movsb
mov
test
aad
sbb
adc
push
pop
daa
add
dec
mov
pusha
push
adc
xlat
in
icebp
and
mov
mov
test
jb
enter
lock
jae
adc
adc
sti
and
in
push
push
mov
out
xchg
mov
inc
add
jbe
pop
scas
clc
ljmp
insl
mov
sub
adc
hlt
pusha
push
adc
sahf
inc
jmp
es
push
adc
dec
repnz
cli
dec
arpl
mov
ss
mov
adc
push
adc
sahf
sti
sub
mov
fsts
es
les
sti
stc
inc
test
mov
cmp
inc
repnz
inc
push
ret
dec
scas
mov
push
loopne
insb
adc
imul
mov
xchg
das
cmp
push
adc
loope
ja
in
js
mov
out
pusha
jmp
repnz
push
cmp
iret
mov
push
jne
adc
mov
in
adc
loopne
push
and
ds
mov
rorl
cltd
push
push
lea
pop
mov
notb
push
out
jmp
cmp
mov
int3
cmp
repnz
data16
in
dec
lock
dec
inc
add
shl
pop
scas
lahf
xor
sahf
lods
fwait
sub
call
data16
clc
imulb
lret
inc
and
aam
adc
icebp
xor
adcb
mov
mov
jle
rcrl
ja
clc
pop
mov
dec
push
movsl
fildl
adc
and
jo
daa
mov
jl
nop
sub
mov
lods
into
and
stos
inc
dec
ds
fistps
xor
imul
push
lock
mov
adc
add
loopne
sbb
pop
loopne
pop
adc
movsb
loopne
scas
add
out
ds
dec
pushf
inc
dec
punpcklwd
lahf
popa
cmp
loop
out
push
movsb
xor
and
popa
push
clc
mov
pushf
scas
lock
adc
mov
xchg
sub
dec
cmp
divps
dec
xchg
pop
enter
add
inc
addb
pop
add
stos
inc
dec
lds
jmp
push
repz
aas
cwtl
cmp
in
fldenv
or
or
mov
cmp
mov
inc
inc
aam
cmp
jecxz
sbb
dec
push
inc
cmp
imul
or
insb
push
sti
mov
dec
cmp
lods
aad
fldt
jb
int
xor
cmp
lods
xlat
clc
mov
xchg
mov
insb
push
sti
aad
push
out
sub
cmpsl
push
ss
sbbl
call
ror
gs
adc
pop
jne
int3
daa
insl
andb
in
push
fdivs
xchg
out
and
sbb
pop
insl
test
daa
and
cmp
sbb
cmp
sbb
loopne
dec
push
adc
xor
pop
fs
iret
adc
iret
lods
mov
mov
aam
wrmsr
mov
mov
adcl
stc
insl
pop
cmp
fldenv
clc
or
add
adc
or
fmull
sbb
or
iret
mov
xor
inc
jb
out
sub
idivl
push
inc
adc
test
in
shrl
popf
jmp
out
int3
mov
mov
pop
out
or
and
fldl
adc
cmpsl
xor
mov
pop
adc
mov
adc
mov
adc
or
cld
pusha
push
adc
in
rolb
adc
shrl
xor
xchg
lret
inc
les
enter
cmp
mull
adc
mov
jge
mov
dec
mov
fs
je
add
call
adc
jae
inc
push
mov
in
jae
stos
xor
cltd
add
push
or
push
sub
push
out
arpl
adc
mov
jo
xchg
repnz
mov
adc
pushf
mov
sbb
aam
in
sub
shrb
fdivl
aad
cmp
adc
mov
gs
or
cmp
jae
popa
push
adc
xchg
and
out
ds
jle
inc
or
jmp
cmp
push
adc
nop
push
push
rorl
xchg
mov
cmp
lods
jbe
and
dec
inc
addb
inc
mov
stos
sub
pop
popa
into
aad
jg
jg
imul
pop
in
adc
or
test
sbb
pop
mov
jp
lret
and
dec
dec
mov
lea
mov
sbb
jnp
scas
mov
repnz
inc
into
cmp
leave
cmp
jg
mov
jnp
xchg
in
jnp
loope
mov
loopne
stc
lea
loope
iret
pop
fildll
inc
jmp
scas
mov
mov
jg
pop
inc
fwait
cmp
xor
add
fwait
repnz
sbb
imul
lret
cmp
imul
es
xadd
adc
mov
lret
mov
data16
dec
ret
lret
mov
cmpsb
leave
adc
sub
mov
adc
and
es
inc
pop
ss
sub
or
imul
mov
pushf
dec
rclb
test
xchg
pop
ds
push
movsb
dec
sbb
cmp
ja
das
dec
dec
xchg
sub
push
cmp
jno,pn
leave
stos
lahf
xor
lods
pop
pop
insb
dec
push
movsb
out
fs
es
mov
movsb
dec
out
mov
dec
mov
sub
fildll
and
loope
dec
xchg
push
adcb
push
adc
fidivs
leave
cmp
push
movsl
mov
xchg
push
pop
dec
mov
out
or
mov
cmp
lock
mov
add
inc
out
insl
fistpl
mov
lock
dec
pushf
cmp
nop
in
pop
adc
and
pop
mov
cmp
dec
xchg
push
jp
jg
xchg
sub
pop
pop
pop
jbe
fimuls
dec
xchg
push
imul
dec
test
stos
xchg
and
pop
clc
or
cld
pusha
push
adc
xchg
cmp
add
cwtl
test
aas
pusha
fidivl
pop
mov
sbb
xor
dec
push
adc
lock
cmpl
mov
lcall
cmp
jecxz
pop
shl
cmpb
pop
adc
jecxz
cmpsl
mov
mov
jb
push
outsb
push
xor
scas
pop
cmp
mov
xchg
daa
in
sub
outsb
nop
leave
pop
adc
xchg
pop
mov
repz
cmp
and
idivl
pop
mov
mov
adc
in
sbb
outsl
dec
mov
adc
dec
xor
pop
stos
inc
push
mov
mov
aad
shll
pop
lret
pop
sub
das
and
dec
mov
inc
test
cmp
sub
int3
ficoms
push
int3
pop
adc
dec
or
push
jmp
mov
in
mov
push
fdivr
pop
mov
jle
pusha
cmp
les
adc
movsl
push
int3
pop
adc
xor
mov
int3
pop
adc
jmp
and
xchg
test
aad
stos
repz
add
mov
jge
rcrl
loopne
pop
adc
fildll
fisubs
je
pop
adc
out
adc
cld
mov
adc
mov
push
mov
adc
pusha
out
mov
popf
sub
scas
cmp
mov
mov
sub
outsl
jge
xor
mov
pop
mov
mov
adc
mov
ds
add
aad
outsl
add
push
out
inc
adc
es
sbb
xor
in
add
imul
shrb
sti
les
fcomp
insb
clc
inc
inc
roll
mov
out
jo
pop
adc
in
inc
lahf
test
xchg
mov
imul
sti
add
mov
xor
lds
mov
adc
inc
ret
pop
adc
mov
inc
mov
adc
xchg
sarb
data16
inc
mov
adc
mov
pop
sub
mov
mov
mov
adc
cmp
pop
adc
mov
adc
inc
mov
adc
iret
add
out
push
dec
inc
xor
dec
decb
adc
and
insb
mov
inc
popa
pop
jle
adc
or
push
and
fucomp
add
aad
sbb
adc
sbb
mov
data16
sbb
or
out
stos
insl
or
mov
or
movsl
pop
cs
stc
ds
xor
out
stos
push
insl
jb
les
insl
int3
sti
loopne
ljmp
arpl
push
mov
add
xchg
mov
pop
fstl
sub
and
mov
imul
loopne
pop
adc
scas
add
out
in
pop
andl
push
cs
mov
xchg
jecxz
or
add
adc
cs
jecxz
push
or
mov
daa
dec
xchg
out
clc
or
cld
pusha
push
adc
loop
ret
push
popa
push
adc
loope
pop
into
xchg
and
dec
dec
popa
push
adc
js
pusha
push
adc
pop
add
dec
test
pop
rolb
adc
jb
clc
or
push
movsl
mov
cmp
adc
loopne
pop
adc
cmp
fs
arpl
bound
adc
xchg
push
xchg
pop
les
push
aad
xchg
loopne
xchg
pop
push
mov
out
sub
loopne
xor
jmp
fdivl
xchg
sub
xchg
pop
adc
xchg
mov
sub
cld
lahf
cmp
push
mov
and
into
push
movsl
ds
and
fstps
mov
insl
and
pop
cmp
es
pop
push
nop
dec
xchg
mov
cli
pop
adc
fwait
mov
jl
cmp
mov
mov
pushf
icebp
xchg
shrb
xor
dec
xchg
fnstenv
lahf
xchg
fists
loope
shlb
jo
xchg
daa
mov
pop
sti
test
movsb
cmp
push
aaa
xor
push
mov
pop
dec
jg
arpl
adc
mov
jns
insb
inc
iret
or
das
sub
adc
push
push
sbb
pop
stos
cmp
in
push
mov
adc
adc
mov
cmp
mov
xor
lea
push
adc
pop
fs
adc
cmp
push
popa
mov
out
fcmovu
lods
sbb
hlt
pop
adc
or
sbb
push
and
xchg
je
shlb
xor
inc
cltd
mov
ljmp
or
int
mov
adc
arpl
xacquire
pop
adc
sub
xor
fadd
sarb
sahf
mov
cmpsl
aad
mov
shll
sub
mov
lods
xchg
mov
loopne
mov
or
or
fxam
push
insb
add
or
xchg
add
or
cli
lods
lcall
or
cld
pusha
push
adc
pop
push
or
add
adc
or
mov
mov
ja
sub
daa
jle
je
or
jecxz
ss
out
or
push
or
fistps
adc
jmp
xor
fildl
mov
stc
sub
icebp
addl
aas
lods
dec
stc
push
cmp
xor
fbld
ss
push
mov
mov
mov
sbb
stos
enter
je
jp
sbb
int
ret
push
cmp
insl
es
fsts
push
add
mov
mov
jmp
loopne
in
imul
pusha
xchg
dec
shrb
daa
clc
or
xchg
clc
add
mov
pop
and
shl
pop
rclb
mov
loopne
divb
mov
cli
mov
jp
mov
mov
fstl
addb
addl
out
lret
in
sbb
and
or
push
push
insb
pop
test
idivl
mov
xor
dec
inc
xor
push
inc
sub
pop
sbb
into
movsb
stos
lea
lock
arpl
and
adc
movsl
and
pop
and
cld
mov
adc
pop
icebp
out
jecxz
jno
mov
ret
popw
int
or
mov
pusha
out
ds
mov
fisubrl
mov
out
cmp
shlb
stos
mov
cmp
idivb
mov
adc
pop
ds
std
scas
xor
scas
xchg
gs
adc
sbb
mov
cmp
out
sub
xchg
loopne
movsl
pusha
jo
rorb
adc
popa
lds
lock
lods
xchg
dec
xchg
sub
cltd
mov
lea
adc
add
jae
outsl
dec
int
sbb
push
rclb
pop
repnz
sarb
dec
dec
xchg
and
imul
loopne
sbbl
insb
ds
movsb
dec
xchg
cmp
shll
fwait
scas
mov
push
inc
dec
icebp
cwtl
cmp
sbb
scas
mov
inc
loopne
jl
pop
lock
xchg
loopne
xor
aad
adc
and
das
mov
dec
xchg
pop
jb
and
popa
push
jle
in
cmpsl
dec
cmp
insl
mov
lcall
cli
mov
xchg
and
cmp
mov
andl
jb
imul
es
arpl
or
xchg
scas
mov
sbb
mov
mov
xchg
pop
aad
cmp
xchg
mov
cltd
mov
outsl
fisttpll
adc
pop
push
fidivl
es
aam
nop
sub
push
repz
out
shr
pusha
mov
pusha
lcall
pusha
loop
insb
mov
inc
dec
in
fsub
fnsave
inc
test
mov
xorb
aad
and
xlat
cld
js
fs
mov
sbb
push
adc
mov
xor
cmp
mov
adc
pop
push
xor
push
lods
loop,pn
mov
aas
or
clc
test
testl
or
imulb
jp
jne
push
sbb
das
adc
push
fs
and
faddl
adc
fprem1
or
gs
xchg
fs
dec
fstp
scas
lea
and
push
adc
jb
ljmp
loope
inc
ror
cs
xchg
sub
adcb
icebp
shll
adc
ds
lods
inc
aad
lods
fistps
jge
push
sbb
adc
sub
stos
sbb
mov
loope
xchg
jne
push
imul
dec
gs
mov
addl
xchg
or
mov
lahf
xlat
in
xchg
add
mov
mov
pop
add
dec
ds
pop
jg
xchg
lods
mov
aam
fidivrl
cltd
jbe
shll
inc
outsb
dec
and
cmp
xorb
je
push
adc
call
aam
adc
mov
lahf
js
xchg
lret
xorb
je
push
adc
add
mov
out
mov
inc
mov
data16
sarb
cmpsb
xchg
jne
sarl
les
pop
int
xor
dec
pop
adc
lods
sti
inc
cs
int
aaa
mov
add
imul
fwait
insb
fiaddl
mov
sbbb
or
inc
xchg
inc
nop
lcall
xor
leave
insb
ret
xchg
shll
pusha
aas
fiaddl
cmp
cwtl
flds
sar
filds
adc
sub
ja
incb
cmp
cld
aas
std
mov
and
inc
inc
andb
cmp
push
inc
xor
sub
pop
push
cs
push
arpl
cmp
or
bnd
xchg
insl
push
rcr
push
adc
sti
or
mov
inc
ds
stos
mov
inc
movsb
std
in
roll
out
jmp
sahf
rcrb
lods
nop
dec
sbb
adc
addr16
mov
xor
fisttpll
jmp
outsl
push
mov
test
jle
sbb
inc
sbb
mov
mov
xchg
mov
fidivrl
jbe,pn
cwtl
filds
adc
repz
sub
and
push
cmp
mov
push
filds
adc
fnstcw
push
adc
push
adc
lock
xchg
imulb
cmp
pop
cwtl
insl
out
or
pop
xchg
stc
lea
mov
fiadds
adc
xorl
sub
sahf
push
cmp
lods
aad
ret
scas
fiadds
adc
pop
dec
fisubs
pop
mov
xchg
cmp
jnp
mov
push
adc
movb
mov
fidivl
in
jne
pop
mov
jo
push
adc
sub
addl
mov
jae
xor
lret
xchg
mov
and
push
add
out
mov
sub
dec
fiadds
in
imul
cmp
jbe
inc
fiadds
adc
test
xor
cwtl
in
bound
adc
mov
call
mov
cmp
fidivrl
loope
sar
bound
adc
incl
ret
in
push
adc
cmc
push
mov
cmp
in
fs
loope
xor
mov
mov
fidivrl
inc
cmp
mov
fbld
push
xor
out
mov
scas
nop
cs
mov
xor
dec
pop
sbb
xor
divl
or
mov
insb
sbb
mov
icebp
dec
push
adc
loopne
push
inc
out
out
stos
sub
sbb
aad
loope
inc
cmp
adc
push
mov
ljmp
sub
mov
and
pop
test
mov
les
jno
andb
sbb
sbb
mov
addr16
cwtl
xchg
lcall
push
in
jo
dec
cld
movsb
dec
clc
xchg
inc
add
adc
sbb
ficompl
int
scas
xor
push
pop
pusha
lret
push
jge
insb
mov
inc
sub
xchg
mov
mov
jecxz
sbb
push
leave
jmp
mov
mov
jge
sbb
mov
rcl
arpl
and
push
es
sbb
test
xchg
mov
and
inc
fwait
roll
push
pop
js
push
fcmovne
aad
or
cmp
mov
mov
or
int3
push
pop
ret
sti
mov
imul
pop
fiadds
aad
cmp
adc
jno
sbb
mov
in
leave
jmp
pusha
sahf
xor
shrl
sbb
or
add
or
pop
mov
inc
push
inc
std
daa
lahf
mov
mov
test
pusha
cmp
pop
or
or
out
jb
les
ret
sbb
dec
xor
outsb
aas
fsts
inc
mov
mov
mov
divl
xlat
dec
fsubrs
out
or
enter
movsb
cwtl
cmpsl
push
insl
sahf
xlat
out
popf
ja
test
pop
into
sbb
xor
leave
dec
test
mov
stc
cltd
shlb
inc
and
addr16
and
outsl
cmp
mov
bound
dec
mov
jmp
pop
sbb
xlat
repz
filds
in
mov
xchg
push
scas
jl
lcall
cltd
cwtl
sub
jecxz
push
lea
xor
mov
xchg
mov
inc
lahf
fiaddl
mov
fs
adc
repnz
cltd
mov
clc
mov
push
inc
out
std
stos
cwtl
sahf
mov
or
pop
mov
fs
adc
fisubs
and
lret
mov
pop
adc
xlat
jnp
fildll
fstps
jb
mov
cli
ror
dec
fisubrl
movsb
sarb
sbb
mov
cli
push
cmpsl
xor
xor
jle
out
sub
dec
loopne
scas
xchg
popa
pop
inc
sbb
movsl
shll
pushf
inc
dec
pop
jns
xor
roll
push
movsb
dec
out
mov
imul
inc
mov
jb
leave
out
mov
pop
lods
mov
loopne
push
dec
out
cmp
xlat
pushl
jge
and
movsl
or
loopne
inc
lds
and
xor
or
pop
push
lea
mov
out
andl
repnz
insl
sub
loop
inc
rol
mov
fnsave
fcmovnb
jnp
fmuls
movsl
sub
push
dec
sbb
pop
bound
xchg
push
clc
lahf
mov
sahf
out
pop
dec
sbbb
insl
mov
push
cmp
lea
out
pop
fcmovnu
insl
xor
loop
cmp
aas
es
dec
pop
repnz
push
rorb
and
xor
lahf
cmp
add
xchg
pop
sub
jb
mov
adc
in
pop
mov
pop
mov
das
inc
xchg
sub
xlat
fdivrs
insb
mov
xchg
fbld
cmpl
cmp
cs
pushf
push
icebp
data16
or
dec
lret
in
fs
xchg
out
pop
aam
sbb
daa
shlb
push
out
mov
add
push
jns
je
mov
xchg
jae
fdivrl
cs
mov
xchg
scas
ret
les
mov
icebp
mov
xlat
jo
bound
lods
popf
mov
pushf
sub
out
dec
pop
mov
shlb
mov
int3
jl
pop
push
xchg
or
fisubrs
out
jbe
insl
push
call
test
pop
fidivrl
test
inc
mov
or
scas
xchg
in
inc
ss
out
inc
sahf
mov
fidivl
icebp
mov
sti
or
movsb
cwtl
sahf
hlt
imulb
dec
inc
insb
es
xor
sub
pop
mov
mov
ror
lods
test
cmp
jg
cmpsb
pop
mov
shll
sahf
jge
mov
rcl
pop
lds
fdivl
mov
movsl
xchg
call
enter
nop
push
fcmovne
popf
jno
shlb
mov
stos
inc
popf
jae
adc
mov
mov
fdivs
jno
sar
adc
push
fsubl
inc
fdivrl
mov
pop
into
pop
mov
xchg
lsl
push
ljmp
inc
inc
push
push
out
imul
hlt
in
inc
pusha
xchg
arpl
xchg
je
repnz
pop
sbbw
aas
mov
xor
bound
mov
pop
xor
lahf
sub
mov
pushf
bound
add
sub
push
xor
mov
es
movsl
repz
std
cmp
je
ja
lods
add
lahf
jae
pop
mov
or
test
ficomps
jno
stos
xchg
imul
sbb
cli
dec
fnsave
xchg
mov
insb
dec
and
add
out
sbb
adc
push
mov
cmp
jb
cmp
xacquire
sub
pop
mov
imul
call
push
lcall
add
jmp
fisttpll
pop
dec
mov
xor
sub
inc
mov
into
shl
fadd
les
sub
push
xor
jle
cmpsb
push
insl
lcall
xor
adc
aas
into
es
fs
fldcw
rcr
mov
push
sub
inc
stc
shlb
sarl
fisubrl
pop
filds
sbb
push
cmp
xchg
pop
sbb
das
jmp
fidivl
jb
nop
push
ljmp
orl
scas
ds
call
xor
orl
movsl
loopne
cwtl
xorl
jecxz
outsl
mov
dec
ret
pop
fiadds
dec
xchg
pop
ret
pop
jmp
adc
jmp
and
cmp
gs
sti
outsl
pop
stos
sar
outsl
pop
arpl
cmp
mov
cltd
movsb
add
daa
loop
inc
push
fisubrs
lahf
fwait
xor
mov
and
out
jae
cs
xchg
push
test
lcall
shrb
pop
fidivl
call
dec
push
adc
in
pop
xchg
mov
and
stos
out
adc
in
test
adc
es
inc
adc
nop
sub
ds
insl
push
repz
cmp
push
jno
push
cmpsl
fsts
adc
xchg
sbb
inc
and
push
mull
clc
lahf
mov
push
mov
mov
cmc
push
push
adc
lods
pop
xor
sahf
cmp
sarb
shl
aam
push
cmpsb
dec
xor
jmp
cld
test
adc
and
xchg
daa
or
pop
loop
pop
rorl
jecxz
push
pop
pop
adc
loop
xchg
sbb
push
adc
ljmp
mov
or
cmp
mov
xor
std
cmpsb
add
lock
pop
incb
sbb
mov
in
xchg
cli
stc
cltd
mov
leave
xchg
popl
xor
xlat
mov
jge
push
and
jbe
pusha
dec
or
mov
out
fld1
push
sbb
mov
in
push
sub
or
mov
jecxz
cwtl
neg
jbe
push
rclb
sbb
push
inc
rcll
inc
sbb
mov
scas
push
enter
mov
jge
inc
push
mov
xchg
xlat
pusha
scas
inc
push
bound
loop
shrl
mov
jge
jmp
into
cs
inc
out
fst
out
push
jmp
int
dec
popa
aad
test
sbb
inc
mov
xor
fisttps
in
fbstp
or
fdivrl
pop
jle
or
dec
int
sub
mov
js
adc
es
sbb
imull
sub
outsl
adc
cmc
pop
or
mov
adc
push
shrb
pop
sahf
loop
popw
inc
in
jmp
popl
cmp
shll
adc
jmp
adc
push
addr16
stc
mov
dec
jbe
and
aas
fdivrs
enter
mov
stos
je
pop
or
xchg
jb
pop
adc
je
sub
aas
lea
sbbl
push
out
sbb
movsl
mov
sub
testb
nop
popa
and
ds
icebp
pop
aaa
and
test
popf
xor
out
ds
test
jnp
jl
mov
xchg
dec
std
out
cli
incl
mov
xor
sbb
mov
iret
adc
and
xchg
jno
loope
mov
int3
in
lock
xchg
nop
dec
xor
pop
jl
inc
jge
push
xor
push
loopne
add
and
lret
sub
inc
add
and
xchg
out
push
mov
sahf
jge
mov
mov
inc
mov
dec
push
adc
mov
pop
pop
jnp
mov
dec
in
inc
sbb
push
xor
je
lret
test
lcall
in
xor
fdivrl
outsb
and
jno
mov
scas
mov
jne
sub
lock
test
loop
lods
pop
mov
cmovg
ss
dec
push
adc
fwait
imul
mov
out
mov
out
mov
cmp
sub
ficoms
movsl
pop
jmp
pop
pop
out
movsl
or
rcrl
and
xchg
push
and
mov
gs
lahf
mov
clc
xchg
dec
out
add
and
pop
loope
addr16
mov
gs
insl
fidivrl
es
add
loop
lods
pop
mov
cmpb
mov
sahf
dec
push
adc
arpl
push
notl
cmp
mov
xchg
push
movsb
xor
mov
mov
arpl
repz
xchg
popa
repnz
push
jo
daa
mov
scas
mov
add
dec
arpl
rcrl
clc
xchg
stos
pop
test
lods
pop
cmp
mul
test
call
ljmp
mov
test
pop
push
addb
push
push
lcall
mov
mov
and
data16
jge
out
inc
mov
xchg
and
push
adc
daa
cmp
shrb
lret
mov
xchg
xchg
pusha
icebp
pusha
pop
fistl
xchg
mov
fsub
jecxz
lcall
roll
aad
fisttpll
pop
push
mov
inc
dec
pop
rcl
jmp
pop
test
sub
push
adc
cwtl
push
add
mov
stos
into
cs
hlt
mov
fwait
sub
and
push
adc
xchg
jle
popa
mov
push
std
mov
scas
js
jge
jno
les
and
loop
ss
mov
sub
adc
push
mov
xchg
into
iret
mov
sbb
fnsave
adc
int3
and
rcl
and
rcl
aad
cld
filds
adc
bound
enter
cmpsl
and
iret
push
push
outsl
imull
test
ljmp
out
ficoms
jae
fdivrl
aad
sub
jle
insl
mov
cs
inc
fisubs
outsb
sub
jmp
mov
mov
lcall
xor
push
cmpsl
scas
aam
rclb
xor
xor
push
or
xor
popf
sbb
pusha
test
dec
sbb
out
scas
sbb
aad
arpl
out
popf
mov
loopne
scas
add
in
push
test
push
lahf
push
iret
scas
lods
fnstenv
pop
xor
mov
jns
dec
inc
mov
sbb
ret
add
push
enter
jecxz
mov
mov
xor
inc
out
test
dec
dec
xor
outsb
stos
xor
mov
scas
xor
mov
inc
push
mov
gs
adc
ficomps
cli
sbb
popf
cmc
dec
mov
and
cmc
sbb
sub
inc
mov
mov
cmp
xchg
push
pop
clc
scas
push
rcrl
mov
jb
cmpsb
mov
mov
repz
xor
dec
negb
lea
sti
pop
sbb
mov
sub
adcb
sbb
lahf
or
stc
and
pop
daa
out
xor
test
std
push
cld
hlt
dec
xor
cmp
dec
sti
push
push
mov
mov
aaa
push
and
push
outsl
jns
pop
xorl
add
mov
push
popf
sub
fs
or
jmp
ror
sbb
adc
cmp
mov
bound
fldcw
in
and
ljmp
lods
xchg
je
fisttpl
lret
adc
xchg
inc
lods
or
call
and
std
dec
in
mov
xor
mov
test
call
xchg
and
fwait
inc
adcl
movsl
dec
out
inc
out
call
lods
pop
js
ret
pusha
cmp
es
jg
ficompl
mov
pop
sub
dec
xchg
mov
loopne
daa
test
cmp
sbb
ds
xor
aad
dec
push
adc
lock
push
inc
dec
out
mov
mov
hlt
push
movsl
ds
fisubrs
ds
insl
call
lea
arpl
mov
fcmovnu
jae
fisttpl
add
adc
mov
mov
mov
stos
fldcw
pop
mov
jmp
or
xor
sub
or
cmp
mov
push
cmc
sub
xor
imul
fmuls
scas
lcall
cmp
jge
mov
inc
dec
pop
mov
scas
test
cld
filds
adc
insl
pop
jbe
add
push
lds
mov
dec
outsb
jne
push
mov
mov
out
dec
mov
xchg
out
inc
or
xchg
fcmove
xchg
lock
mov
and
cmp
inc
in
sbb
fisubrs
sub
bound
xchg
loop
sbb
push
sar
mov
adc
gs
add
add
push
dec
dec
push
push
jle
sbbb
int
mov
sbb
xchg
pop
lds
fcom
pop
xor
cmp
rorb
scas
mov
out
cltd
int
mov
jb
push
push
adc
add
mov
push
in
xlat
xchg
lcall
mov
inc
rcrl
push
jmp
mov
jno
adc
fwait
cwtl
in
int
loope
aaa
cli
mov
adc
repnz
cmp
lods
adc
cmc
pop
jo
lret
and
push
mull
stos
aaa
popf
dec
rcrl
test
push
adc
scas
pop
push
data16
mov
into
in
sub
aad
cmc
mov
jecxz
call
cmp
jp
push
push
ret
call
lods
inc
popf
sub
cmpsb
inc
pop
fisttpll
in
adc
cmpsl
stc
and
aam
popf
push
iret
les
dec
inc
add
mov
rorl
adc
scas
enter
pusha
jo
cmc
adc
in
enter
push
mov
nop
inc
arpl
push
adc
fidivl
push
mov
cwtl
inc
dec
in
out
sub
and
fisttps
and
push
adc
and
ljmp
sbb
aam
mov
push
test
test
adc
nop
callw
ds
sti
cmp
xor
push
adc
cmp
inc
lea
mov
test
mov
shlb
stos
add
scas
pop
fs
mov
out
popf
add
jg
test
lret
xor
fistl
aam
bound
adc
adc
pushf
xor
push
loopne
adc
bound
adc
dec
std
xchg
call
int
je
jns
dec
sahf
pop
jmp
dec
test
test
or
sahf
lcall
push
and
and
pop
clc
mov
pop
or
aad
cmp
call
ds
out
clc
loope
jne
sub
aam
popa
sbb
popf
imul
pop
inc
cmp
sub
es
nop
xor
mov
xchg
enter
lret
pop
jae
fs
int
xchg
push
and
cmpxchg
shrl
xor
cmpl
loopne
jno
pop
clc
mov
cmp
cld
inc
xor
lret
test
jmp
rclb
mov
xchg
cmp
mov
sarb
cs
fwait
lds
xchg
arpl
jge
mov
pop
call
dec
cmp
xor
sarl
movsb
cmp
and
leave
xchg
and
push
in
xchg
repz
repz
xchg
pop
icebp
mov
in
out
cmp
fdivrp
or
ficoms
xchg
push
xchg
fidivl
adc
insl
and
adc
ds
shl
mov
repz
mov
sub
sub
dec
xchg
xchg
mov
mov
cmp
mov
sarb
and
lea
ss
cmp
fdivrp
xor
push
adc
dec
jl
jecxz
mov
mov
dec
call
test
lret
popf
lock
mov
mov
cmp
add
std
adc
arpl
sbb
lahf
mov
in
pop
call
out
cmp
ss
pusha
xlat
push
adc
cmp
mov
aas
das
cmp
mov
mov
aas
lods
pop
mov
add
add
mov
sub
sbb
ds
mov
lahf
jne,pt
inc
mov
cmpsl
sbb
adc
sub
lea
pop
mov
test
mov
cmp
fs
jp
pushf
and
inc
fs
stos
fldlg2
lcall
nop
inc
loope
xlat
addr16
jnp
sub
mov
mov
inc
aam
ss
mov
fdecstp
lods
outsb
iret
test
lcall
dec
ljmp
rorb
pop
mov
add
and
dec
mov
shll
cwtl
pushf
repz
mov
inc
into
cs
fisubrl
lret
shrl
mov
and
ret
push
insb
shrl
mov
int
fisttps
insb
sub
outsl
push
sub
add
push
lods
sub
addr16
push
jne
push
arpl
sbb
pop
and
movsb
lods
push
mov
fcmovnb
mov
pop
pop
add
punpcklbw
int3
pop
mov
icebp
mov
shlb
ljmp
adc
stos
xchg
xor
jecxz
sub
pushf
bound
pop
mov
push
adc
leave
push
sub
lods
mov
mov
xor
jo
pusha
sub
outsb
push
in
pop
cmp
daa
mov
repnz
stos
jmp
jmp
push
cmp
imul
sti
or
and
inc
lods
sub
cmp
mov
lds
mov
addb
enter
ficomps
ficoms
frstor
and
and
cmp
es
xor
adc
mov
mov
sub
xor
xor
inc
sub
orl
ret
outsl
mov
push
call
in
repnz
std
test
lock
in
jmp
idiv
scas
xchg
cmc
add
and
xchg
cli
and
xchg
xor
movsl
jmp
jnp
test
cmp
aad
lock
jae
dec
inc
scas
and
xchg
sub
cmp
loopne
and
lods
xchg
cmp
gs
insl
nop
dec
gs
es
sahf
scas
rorb
push
jp
mov
cwtl
jno
or
loop
xchg
lcall
push
jae
pop
cmc
fs
push
je
dec
lret
dec
outsl
out
dec
out
and
pop
or
and
aas
adc
pop
add
dec
xchg
pop
jmp
jne
ja
scas
dec
out
xorl
lea
das
aas
sub
rolb
pop
iret
inc
cmp
jecxz
and
pop
pop
xor
dec
push
and
dec
cmp
dec
cs
dec
shlb
mov
pop
pop
jecxz
dec
sbb
pop
imul
dec
call
out
and
push
mov
dec
xchg
sub
cmpsl
cmp
filds
pop
shll
leave
xchg
lahf
inc
loopne
pop
popa
lock
and
adc
lea
mov
divl
dec
shl
jno
shll
dec
cmp
sub
mov
frstor
dec
xchg
sahf
dec
push
cmpsl
dec
sbb
push
loope,pn
or
sbb
out
test
mov
mov
mov
scas
xchg
jge
stos
cmp
push
arpl
addr16
nop
jo
push
mov
mov
shlb
mov
adc
xchg
mov
icebp
lods
pop
dec
sub
aam
jb
lret
pop
mov
ja
sti
rolb
popf
mov
push
mov
fidivrl
sub
loope
test
or
ffreep
jae
daa
inc
aas
movsl
aas
inc
stos
dec
xchg
lea
std
mov
loopne
outsb
mov
mov
inc
idivb
push
inc
adcb
cmpsb
dec
xchg
mov
fdivs
sub
cmp
movsb
dec
fwait
xchg
add
mov
and
adc
int3
jp
stos
push
and
test
mov
cltd
jl
test
stos
xor
stos
inc
fwait
push
mov
xor
fdivl
pop
mov
cmp
scas
push
push
or
adc
add
in
pop
and
dec
int
orb
dec
xlat
bound
inc
int
daa
and
fwait
stos
fstl
pusha
in
dec
add
add
add
and
push
mov
mov
sub
enter
fidivl
cwtl
call
insl
loopne
imul
out
sbb
pop
repz
sub
push
adc
dec
mov
dec
adc
pop
negl
adc
and
jge
or
movsl
inc
repnz
push
imul
rcr
dec
xchg
and
arpl
pusha
rcrb
xor
lret
in
jbe
push
mov
cmpsl
sbb
jnp
xchg
add
lods
aaa
dec
hlt
or
push
cmp
fadd
jne
daa
inc
or
jle
icebp
lahf
inc
ljmp
bnd
push
cltd
inc
ret
out
out
xchg
rolb
sbb
out
mov
fnsetpm(287
xor
pusha
adc
add
adc
scas
mov
jle
mov
and
cmp
pop
dec
push
adc
and
xor
std
sbb
pop
stc
mov
xor
idivb
dec
ret
scas
jo
hlt
sbb
inc
mov
popa
enter
jge,pt
pop
adc
mov
inc
sbb
pop
loopne
in
and
es
lret
add
pushf
fildl
mov
add
shl
push
jp
cmpsb
repz
nopl
out
std
cmp
aaa
or
into
mov
or
ds
mov
or
out
es
push
xlat
shr
cmpsl
add
imul
cwtl
cmp
bound
pop
loopne
adc
test
cmp
mov
jl
cmp
fiadds
xor
push
mov
xchg
jge
jmp
cli
sbb
fnsaves
jmp
stos
lret
fcom
in
sarl
lret
cmpsb
sahf
mov
push
out
fisubl
in
pop
daa
into
pushf
dec
mov
loop
inc
ror
mov
std
jnp
adc
mov
fcmovu
insb
loopne
adc
movsb
cmpl
ss
iret
cld
bound
adc
loopne
test
or
sahf
pop
out
xor
pop
fldlg2
adc
arpl
mov
push
push
dec
sbb
adc
repz
cmp
lock
push
insb
push
xor
mov
test
jo
push
adc
movsb
cmpsl
out
push
out
out
mov
jno
inc
inc
sbb
insl
push
mov
in
xchg
jp
push
repz
mov
pop
cmp
jp
xchg
xchg
insl
fidivl
ss
cmpsl
cmp
jg
enter
jae
mov
call
enter
jae
or
mov
mov
fildl
adc
sub
dec
outsl
outsb
out
cmp
push
decl
dec
cmp
cs
insl
scas
mov
jns
mov
cmpsl
les
xchg
push
clc
scas
ds
dec
xchg
push
enter
nop
loop
mov
and
cmp
jnp
xor
subl
sub
cmp
mov
ficoms
or
jb
aam
sub
aas
das
aaa
daa
push
out
mov
cmpl
adc
movsl
mov
lds
xor
aad
pop
cmp
sarl
lock
es
mov
xchg
cmpsl
fidivs
lds
sbb
push
mov
pop
cmp
xor
fs
imul
out
imul
das
aad
push
fwait
sub
jmp
aam
push
out
jg
aam
je
jns
mov
repnz
sub
dec
sub
mov
stc
les
imulb
xchg
aad
or
and
out
int3
pop
push
loope
add
jbe
clc
add
inc
in
add
add
fidivs
mov
inc
sbb
popa
adc
enter
inc
hlt
sahf
cwtl
push
inc
adc
pop
out
cltd
stos
sbb
js
pop
sbb
mov
push
dec
mov
inc
sbb
mulb
sahf
push
fisubrs
and
imul
imul
andl
adc
in
ja
push
adc
test
dec
jnp
xor
bound
mov
stos
add
xor
pop
stos
mov
cmpsl
clc
push
pop
mov
push
mov
mov
outsb
adc
pop
xchg
cmp
dec
and
aaa
adc
mov
sbb
test
sbb
and
adc
mov
mov
mov
adc
lcall
sub
push
jecxz
dec
cmpsb
xchg
inc
pusha
aas
lods
push
pop
fimuls
mov
adcb
je
sti
test
xor
xor
and
dec
fdivl
add
mov
fs
test
add
pop
in
dec
lahf
in
cmp
cld
push
mov
dec
es
xor
adc
ret
ret
leave
mov
and
add
test
pushw
call
ds
xchg
movb
lock
sub
arpl
inc
shrl
in
in
mov
xor
push
popl
push
cld
bound
adc
jbe
add
inc
sub
std
mov
orl
dec
dec
mov
or
adc
mov
es
ljmp
lahf
xor
das
mov
enter
adc
jmp
push
adc
sub
jecxz
enter
push
sub
xor
xchg
fnsave
popl
adc
xor
je
pop
adc
jo
pop
adc
jae
dec
pushf
cmp
or
pop
imul
pop
out
mov
loopne
pop
adc
je,pn
lods
add
pushf
es
fs
push
or
dec
xchg
push
lcall
test
push
adc
dec
lods
popa
push
adc
jns
sbb
repnz
insl
mov
and
mov
dec
leave
aas
cmp
sbb
repnz
pop
mov
mov
xchg
popa
mov
shl
push
adc
mov
lret
repnz
std
movsb
out
push
inc
out
xchg
jge
mov
xor
cwtl
clc
or
jns
out
push
dec
hlt
bound
adc
jbe
fdivl
pushl
rorb
fisttpll
js
mov
adc
cwtl
mov
cmp
loopne
push
adc
int3
adc
adc
ret
sbb
cmp
lods
pop
mov
cmp
roll
inc
fs
inc
pop
mov
nop
jb
nop
pusha
push
adc
push
out
shr
mov
fsubrl
mov
iret
je
push
adc
inc
jmp
insb
lahf
shll
push
lods
pushf
icebp
xchg
xlat
lods
pop
mov
fiadds
jecxz
jb
pop
jae
mov
mov
shlb
sub
popf
dec
xchg
daa
dec
xchg
xor
mov
inc
dec
sbb
push
out
mov
mov
rcr
mov
fdivl
mov
sbb
ss
mov
xor
adc
daa
stos
iret
push
lods
push
mov
sub
adc
add
xor
ret
outsb
sub
lds
je
push
adc
or
jnp
mov
mov
xchg
inc
push
fnsave
cmp
andb
stos
aas
pop
movsl
cmc
pop
push
inc
xor
sub
jbe
xlat
dec
mov
insb
cwtl
mov
xchg
hlt
and
sub
clc
aad
stc
jb
push
cld
bound
adc
and
es
insl
cltd
cmp
xchg
es
aam
cmp
inc
pop
cmpsl
dec
adc
jb
fdivs
cli
fucomi
mov
into
xchg
and
int
fiadds
push
sub
lds
mov
nop
dec
push
adc
xor
push
mov
into
popf
sub
lret
adc
lods
and
insl
and
sub
jno
pusha
add
out
mov
rcll
or
add
cmp
les
pusha
push
adc
pop
xorb
and
andb
ljmp
js
popf
sbb
mov
scas
adc
adc
nop
mov
pop
xor
mov
das
cmp
xor
pop
xor
sarb
mov
sti
jmp
dec
add
push
mov
loopne
xor
mov
std
lcall
xchg
add
adc
sub
sbb
add
mov
fistpl
adc
test
adc
sbb
mov
jge
adc
test
arpl
add
cmp
ss
inc
mov
aaa
mov
loopne
push
out
add
fprem
scas
js
push
adc
ljmp
andb
in
jno
pop
outsb
cld
mov
icebp
mov
sbb
push
push
xor
repnz
data16
add
or
xchg
or
negb
jp
mov
sub
arpl
push
imul
mov
and
xchg
jmp
aas
pushw
push
mov
test
inc
rcll
xchg
stc
daa
lcall
push
jb
pop
pusha
data16
icebp
jmp
loopne
adc
mov
out
push
and
mov
mov
fcmovnb
imul
and
push
jae
movb
adc
jne
fistl
es
cmp
je
fcmovnu
insl
mov
add
aam
arpl
jb
jl
push
adc
and
xchg
and
lods
push
lock
push
repz
pop
ljmp
mov
xchg
mov
adc
clc
pop
test
int
xchg
xchg
dec
lret
add
lahf
dec
xchg
ret
mov
jmp
cmp
sbb
jno
gs
pop
push
clc
push
mov
xchg
adc
andl
pop
outsl
call
cmp
mov
shl
imul
shlb
dec
lods
pop
mov
sarb
lahf
shl
inc
aas
dec
pushf
cmp
lods
pop
cmp
fisubs
pop
stos
fmull
imull
gs
fidivl
scas
fisubl
pop
push
cmp
call
mov
into
jo
push
adc
stos
pop
pop
les
lock
pop
rcrb
shrb
es
imul
push
mov
lock
movsb
insl
xlat
lods
pushf
bnd
loope
adc
lods
cmpsb
mov
shlb
push
inc
in
call
mov
adc
xchg
jbe
push
inc
in
out
sbb
in
mov
stos
dec
mov
shlb
mov
cmp
dec
cmp
xor
scas
fs
mov
int3
mov
adc
push
loop
pop
out
jmp
stos
out
push
dec
adc
out
je
stos
je
jne
scas
add
add
outsb
xor
mov
andl
push
dec
fisttpl
movsb
enter
int
dec
or
or
in
mov
adc
adcb
mov
bound
adc
push
in
pop
iret
enter
in
mov
bound
adc
lret
lahf
mov
push
inc
push
xchg
aad
mov
push
adc
push
push
movsb
mov
sbb
enter
add
pop
cmp
in
mov
cwtl
bound
adc
insl
xchg
pop
jge
mov
aad
xchg
bound
adc
mov
push
mov
push
dec
lcall
insb
cli
mov
std
or
dec
xor
faddp
ds
mov
loope
adc
mov
adc
scas
nop
movsb
pushf
mov
and
cld
out
cld
out
adc
adc
lcall
stos
dec
jno
pop
ljmp
icebp
sub
mov
sub
push
adc
into
mov
out
fbld
mov
adc
or
rol
mov
std
mov
mov
insl
add
jecxz
mov
mov
mov
xor
add
inc
push
loopne
and
out
jg
add
or
pop
sub
addr16
ret
inc
xchg
ds
into
lds
jno
test
mov
pop
mov
push
mov
push
mov
lock
xor
or
cmp
jnp
add
jae
add
adc
push
jg
sbb
pushf
add
cmp
sbb
sub
shll
addl
dec
and
adc
xlat
or
enter
fs
adc
fiaddl
cmpsb
sub
push
imul
dec
nop
xor
invd
adc
or
mov
or
fst
push
sub
pusha
mov
shll
mov
inc
bound
cmp
or
mov
push
push
add
popf
xchg
out
mov
sub
call
jne
mov
sub
shll
daa
cs
scas
lea
push
insb
lahf
mov
loope
adc
and
mov
or
ds
invd
adc
stos
out
pop
sub
cmp
arpl
subl
mov
inc
mov
sub
lea
xlat
and
mov
push
adc
iret
and
xor
insl
pop
iret
dec
lret
les
hlt
jnp
and
mov
fisubs
jmp
stos
or
insl
cmpb
adc
dec
push
adc
and
cmp
fwait
ds
mov
and
gs
rcll
imul
push
adc
adc
and
fwait
pop
shll
mov
push
mov
mov
lcall
leave
aas
ds
scas
mov
ds
mov
es
call
ficompl
adc
int3
cmpsl
imul
mov
imul
shl
gs
push
jp
mull
cld
addr16
fs
xor
add
jecxz
mov
push
lods
pop
mov
sbb
loope
adc
jmp
out
xor
aam
movsb
cmp
pop
lock
lea
adc
and
xchg
cmpsl
movsl
mov
adc
cld
fidivl
dec
lods
cwtl
dec
insl
shrl
fs
adc
or
pop
stos
push
ret
mov
mov
out
cwtl
xor
test
inc
andb
ret
insb
cli
pop
loope
adc
fmuls
and
sub
les
pop
adc
inc
scas
pop
stc
jnp
add
dec
push
adc
xor
pop
outsl
js
insb
jmp
cmp
movl
push
loope
adc
push
lods
call
xchg
sahf
outsb
mov
xchg
cmp
lret
dec
xchg
jl
shrb
mov
fdivs
push
adc
push
dec
fwait
push
shll
jle
adc
test
jge
dec
xchg
and
push
sbb
hlt
lods
loop
push
dec
pop
pusha
dec
stos
inc
fwait
es
mov
xchg
fsts
add
das
dec
mov
pop
add
push
mov
add
adc
sub
mov
sbb
ljmp
shrl
mov
jbe
nop
stos
lcall
or
gs
sahf
dec
fdivrs
xor
xlat
jae
fldcw
scas
adcb
push
push
fdivr
bound
mov
adc
cmp
js
xchg
adc
into
and
int
inc
sub
lods
jbe
std
popf
movsl
and
jno
mov
jne
ljmp
xor
mov
data16
push
sbb
xchg
inc
jb
jmp
or
rcrl
mov
ds
or
popf
cmp
adc
add
push
jns
sub
dec
jbe
cmp
filds
cmp
xorl
cmp
xor
lret
adc
pusha
lds
jge
and
mov
lcall
dec
xchg
xchg
sub
ja
popa
mov
jne
daa
mov
push
imul
jecxz
stos
cmp
repz
pop
mov
sub
lcall
lret
sbb
in
shlb
jl
jo
test
ret
mov
xor
push
mov
in
pop
mov
in
push
jmp
insl
aad
scas
pop
mov
ds
dec
mov
cmpb
pop
xor
sub
mov
xchg
jb
ljmp
sahf
mov
mov
fistpl
xor
pminub
aam
push
push
lret
cmpsl
imul
xlat
sarb
jle
enter
lret
mov
adc
mov
jno
test
shrl
hlt
mov
xorl
pop
mov
and
shlb
sbb
addr16
jg,pn
ss
push
shlb
das
mov
mov
fwait
mov
pop
jne
les
sbb
addr16
cs
insl
xchg
into
mov
pop
leave
pop
mov
push
stc
push
fsubp
mov
dec
shlb
xor
fucomi
stos
lahf
push
push
lods
pop
pop
addr16
call
dec
imul
push
movsb
dec
xor
aas
sub
xor
fildll
repz
jge
mov
push
sarb
push
pop
cmp
mov
sbbb
orb
lods
or
shlb
scas
mov
add
loope
adc
test
shrl
out
iret
mov
mov
negl
pop
insl
mov
pop
in
ret
push
adc
insb
fucomi
lods
xchg
dec
pop
mov
lds
mov
cmp
pop
pop
push
mov
pop
ds
add
jne
mov
pop
ljmp
cmp
xchg
jbe
out
cmp
xor
cmp
cmp
mov
nop
imul
mov
shlb
xchg
out
or
fwait
sub
cmp
invd
adc
leave
xor
invd
adc
mov
sbb
mov
lock
loopne
sub
ficompl
or
push
in
xlat
das
mov
jo
invd
adc
outsl
dec
xchg
and
shlb
loop
into
sahf
mov
cwtl
invd
adc
lret
cmpsb
ret
push
out
xchg
loop
invd
adc
into
xor
adc
or
rcr
mov
out
and
sub
addr16
test
mov
and
adc
pop
pop
dec
adc
aaa
stos
into
push
adc
pop
imull
lret
rcl
lods
adc
mov
or
aas
inc
les
test
lods
mov
test
stc
xlat
mov
adc
adc
and
mov
and
or
test
test
in
push
stos
mov
insl
xchg
jg
inc
dec
lahf
dec
mov
js
cmp
rcr
sub
rcrl
lahf
dec
xchg
add
or
imul
inc
rcrb
fs
push
fs
mov
mov
sub
inc
cltd
jp
invd
adc
je
and
sti
int
or
inc
pop
aas
push
mov
jo
cld
invd
adc
je
mov
jae
jge
pop
push
scas
add
invd
adc
jmp
out
add
pop
add
cmp
clc
inc
inc
testl
push
rdpmc
mov
ss
invd
adc
int
in
dec
push
adc
aas
in
in
push
in
loop
xchg
loope
adc
xchg
cmc
sbb
loope
add
clc
and
xchg
pop
xor
scas
or
ret
rol
into
shrl
jbe
xor
rcl
xchg
pop
aas
sub
dec
dec
fcomi
hlt
xchg
cmp
sub
inc
dec
xchg
fs
sbb
xchg
cmp
xchg
adc
orl
push
xor
adc
mov
in
aam
gs
inc
scas
cmpsb
gs
mov
out
in
or
xorl
pop
mov
and
fidivrl
and
cmpsl
loop
movl
pause
sub
xor
sub
dec
ds
loopne
mov
adc
mov
inc
fisttps
es
pop
jb
push
movsb
inc
sub
mov
xor
jnp
lods
add
movsl
cwtl
dec
pop
ss
dec
push
adc
mov
cmp
sbb
imul
cwtl
cmp
cmp
loop
mov
inc
xchg
push
adc
jne
mov
loope
adc
dec
pop
xlat
cwtl
jbe
mov
mov
sarl
jg
fbstp
adc
fsubrl
nop
pop
add
loop
pop
mov
xchg
sub
clc
imul
and
cwtl
mov
xchg
dec
push
push
jp
mov
mov
mov
and
dec
mov
es
and
pop
mov
lahf
fstl
nop
sub
cs
mov
push
adc
and
movsl
ds
shlb
adc
mov
fidivl
or
push
adc
fwait
shlb
adc
adc
ja
push
inc
sbb
cmpb
dec
roll
or
dec
lods
dec
in
adc
mov
daa
dec
aaa
push
jge
xchg
pop
in
sbb
push
dec
gs
dec
fnstenv
pop
mov
pop
daa
cld
lcall
dec
xchg
push
cld
je
in
dec
mov
sarl
adc
in
lahf
sub
or
push
push
xchg
inc
fwait
js
adc
adc
adc
adc
mov
aas
or
xchg
dec
mov
stc
add
push
dec
cmpsl
je
mov
addr16
scas
cmp
loope
sbb
pusha
xchg
out
xchg
adc
adc
movsl
jb
outsl
dec
or
add
xor
mov
lret
adc
xchg
sti
enter
cwtl
lcall
fcmove
add
inc
aam
lret
pop
sub
xchg
sub
mov
sub
or
dec
xchg
movsl
mov
dec
fwait
insl
mov
xchg
cs
rcll
fsubs
lods
sbb
and
adc
cmp
sbb
sbb
push
add
out
push
inc
je
sub
jecxz
fcom
dec
sub
andl
adc
iret
cmp
xchg
xchg
add
pop
dec
jle
mov
mov
xchg
or
sbb
clc
cwtl
sub
cwtl
jne
lock
negb
jne
fstl
aad
push
icebp
sbb
pop
sbb
push
pop
and
jle
arpl
push
push
pop
push
icebp
mov
outsb
and
loope
adc
adc
pusha
pop
int
pop
push
and
mov
aam
push
js
leave
sub
mov
and
cmp
sete
pop
jg
jbe
std
mov
mov
loopne
inc
stos
shlb
iret
xor
jno
sbbl
jns
pusha
push
adc
mov
fstps
outsb
insb
or
test
pop
in
ds
shr
adc
enter
push
inc
mov
out
mov
xor
xor
sub
lea
insw
movl
outsb
mov
test
je
xchg
mov
push
adc
shrb
push
adc
mov
sbb
cltd
add
loop
adc
fnsave
fiadds
incb
dec
bound
pop
push
dec
xor
and
adc
nop
mov
dec
out
inc
fcomi
popa
mov
jb
lods
push
insl
sbb
push
adc
push
lods
inc
outsb
aaa
arpl
cmp
popf
xor
shlb
pusha
push
xchg
loop
adc
mov
lods
movsl
rorl
das
xchg
xor
push
insb
add
sbb
lods
xchg
imul
and
fwait
lret
data16
and
push
adc
loop
in
dec
dec
pop
repnz
push
fdivs
sbb
mov
loopne
daa
mov
cld
mov
fidivl
mov
sbb
push
xchg
and
pop
sbb
push
sbb
push
cmp
je
push
adc
roll
xor
push
adc
ret
dec
pop
lret
mov
shl
mov
push
adc
repnz
lods
fidivs
add
mov
and
adc
loop
repz
fidivl
in
xor
fsubrl
mov
xor
jne
inc
dec
outsl
cmp
lods
add
jo
test
scas
sbb
mov
push
adc
sbb
arpl
and
jle
push
stos
or
insl
cmpb
cli
cmpsl
lds
push
ljmp
stos
mov
push
adc
popf
call
push
pop
out
movsl
popf
shll
or
fisubl
cli
das
push
xor
or
pop
cmp
es
sub
or
jae
sub
inc
add
push
push
adc
subl
or
pop
lret
outsb
sbb
pop
loop
pop
sbb
sbb
push
popl
adc
loop
movsb
pop
mov
pusha
fdivl
test
adc
popf
rorb
adc
cmpsb
stos
lods
mov
inc
push
icebp
mov
push
adc
xor
pop
adc
mov
mov
popa
add
mov
in
shl
pop
mov
dec
pop
adc
adc
pop
xor
bound
adc
adc
pop
rcr
pop
mov
jnp
imul
inc
mov
cmpsb
sub
nop
cwtl
pusha
sbb
adc
fstl
sub
lret
sub
sub
dec
cld
out
push
inc
aam
iret
push
push
inc
jbe
inc
pop
push
movsb
adc
mov
sub
cs
fildll
cmp
cmpsb
sahf
jns
xchg
ja
mulb
xchg
leave
dec
pop
sbb
adc
adc
pop
stos
inc
pop
jle
jno
adc
out
and
inc
out
xlat
mov
push
add
sbb
dec
xor
test
jo
cmp
lods
loop
bound
sbb
adc
and
xchg
inc
scas
sbb
nop
add
arpl
or
adc
aas
adc
mov
jne
jo
adc
sarb
in
push
pusha
xlat
mov
xor
sub
pusha
mov
adc
mov
push
jp
dec
jmp
jbe
and
ret
mov
add
push
add
push
add
push
lock
and
test
out
mov
cmpsl
les
or
in
push
sarb
push
jle
xor
negb
and
mov
and
push
jecxz
mov
insl
mov
mov
scas
out
cltd
add
or
add
sbb
or
add
push
imul
es
dec
add
lods
inc
add
add
pop
adc
dec
test
xor
jecxz
mov
pop
dec
push
pop
dec
fwait
pop
dec
dec
push
outsb
inc
int3
mov
mov
pop
lahf
add
or
insl
fwait
jbe
pop
scas
and
leave
mov
pop
xor
inc
or
cmp
jo
fildll
mov
push
adc
adc
fmul
xor
push
mov
stos
push
pop
sarl
mov
add
mov
inc
mov
lock
out
insl
pcmpeqw
call
jecxz
aaa
out
es
sbb
pop
adc
shl
outsl
push
gs
cmp
filds
lods
pop
cmp
into
push
pop
xor
cmp
pop
fldenv
pop
mov
mov
fildl
mov
loopne
mov
enter
into
ds
mov
cmpsb
out
mov
scas
mov
mov
add
int
fcoms
push
ficoms
mov
and
insl
mov
add
pop
enter
stc
mov
inc
les
sub
lahf
stos
out
dec
out
mov
mov
push
int
ljmp
cs
mov
cmp
xlat
cmp
pop
jmp
icebp
and
ds
es
pop
loopne
clc
loopne
add
fbstp
rcll
push
in
sbb
ds
mov
ret
gs
lret
popa
fcmovne
cmpsb
push
lock
pop
loope
imul
testb
das
in
sub
lcall
mov
push
mov
test
outsb
push
notb
adc
lods
xchg
pusha
pop
test
aas
adc
scas
shll
push
repz
int
aad
rolb
in
rorl
test
push
and
aaa
mov
stc
mov
fsubs
pop
mov
or
in
mov
dec
pop
ret
fldcw
and
aam
bound
push
mov
mov
xchg
jno
orl
les
lea
and
or
adc
mov
fbld
mov
rorl
xchg
cmc
sarb
sbb
pop
lods
inc
push
pop
pop
popa
pushf
in
daa
scas
lea
in
push
dec
xor
add
scas
mov
shl
lret
rcl
fsub
mov
dec
xchg
fdivrs
mov
in
mov
push
mov
or
fisubs
push
loop
test
jo
ret
xchg
dec
dec
sti
push
inc
jne
jb
sub
jns
icebp
into
jle
sahf
and
mov
inc
popf
sub
daa
pop
test
imulb
out
repz
mov
mov
pop
jle
pushf
imul
pop
jo
add
cmc
scas
sbb
pushf
dec
cltd
jbe
adc
xchg
sub
lcall
shll
fildll
mov
pop
in
arpl
mov
out
xor
sub
sbbl
push
mov
rclb
pusha
sub
aad
dec
xchg
fsubr
fisubs
jg
mov
cmp
cmpsb
mov
fstl
adc
and
cmp
movsl
add
adc
push
in
adc
mov
pop
adc
lods
xchg
in
push
fs
pop
fs
mov
lahf
in
mov
adc
add
jb
or
dec
adc
add
or
nop
testl
rep
dec
xchg
or
imull
cli
adc
insl
or
imul
aad
push
xor
pop
imull
test
addb
ds
into
out
lock
pop
fildl
mov
hlt
pop
out
xor
incl
dec
mov
into
sahf
cli
mov
lcall
mov
inc
sub
mov
loop
cmpsl
jle
loop
adc
roll
aad
pusha
sbb
adc
scas
sbb
outsb
dec
sbb
adc
aaa
mov
arpl
mov
movsl
lods
pop
in
loop
dec
fdivr
xchg
and
pop
push
insb
sub
sbb
out
sbb
adc
insl
push
imul
loopne
fisttpl
pop
sbb
adc
mov
pop
insb
fidivl
fildll
mov
jne
cmpsl
xchg
imul
jl
mov
sbb
push
rclb
ret
pop
cmp
xor
cmp
dec
pop
repnz
mov
xchg
sub
out
scas
mov
mov
cmp
test
pop
dec
les
test
jecxz
ret
test
adc
sbb
cld
cmpsl
movsb
mov
adc
adc
adc
adc
pop
mov
sub
lcall
xor
outsb
sub
sub
pop
ret
jmp
pusha
mov
fidivl
imul
js
bound
adc
lcall
sub
xor
xor
sub
xchg
daa
sbb
outsl
xor
cmc
adcb
insl
mov
push
sbb
xchg
mov
cmp
fldenv
pavgb
adc
movsb
adc
adc
and
outsl
ja
xchg
outsl
fidivl
and
lods
dec
xchg
rcrb
adc
lock
push
int3
adc
adc
cli
mov
rorl
in
mov
add
mov
out
cltd
dec
jecxz
pop
cmp
out
mov
jmp
popf
pop
lcall
fldenv
hlt
xchg
mov
outsl
aad
fs
or
daa
adc
jg
negl
jmp
xchg
daa
cmp
das
leave
and
roll
stc
mov
push
xlat
dec
mov
and
lods
sub
scas
imul
outsb
stc
pop
call
mov
nop
pusha
iret
push
push
push
cmpsl
pop
inc
pop
roll
sub
sbb
incb
stos
aam
mov
scas
pop
cltd
lret
cli
inc
lcall
pop
inc
mov
mov
xor
rol
pop
mov
lods
xchg
stos
ret
cltd
push
and
test
sbb
movsl
push
shrb
hlt
test
push
outsb
lret
xchg
pop
jne
aam
push
push
dec
adc
xor
adc
inc
int
daa
insb
cli
xlat
addr16
iret
aas
iret
repz
orb
inc
fnstenv
mov
mov
test
sbb
adc
sahf
mov
mov
xchg
cmp
aaa
mov
in
push
test
dec
adc
mul
or
pushf
out
xor
pop
xor
imull
cs
aaa
cli
inc
addb
pop
hlt
inc
shll
mov
jnp
jo
mov
mov
je
sbb
add
lea
fsubrp
loop
adc
ds
mov
mov
fldl
push
sbb
push
add
fidivl
sahf
imul
add
adc
out
jg
int3
bound
adc
mov
mov
jne
movb
mov
rolb
jecxz
adc
decl
mov
add
loop
adc
adc
xor
imul
jne
mov
xchg
repnz
shll
inc
lods
and
add
mov
mov
mov
divl
repz
inc
adc
jne
lock
mov
or
inc
xlat
push
loope
pop
dec
mov
pop
rcr
push
or
push
adc
xchg
xor
sub
fiadds
in
dec
in
dec
jmp
adc
jg
push
xor
stc
daa
lcall
mov
inc
movsb
gs
push
jne
into
ficoml
sbb
pop
xorl
aad
push
popf
mov
mov
xor
or
fidivrl
aad
sarl
xor
lcall
xor
das
lahf
mov
sub
outsb
shl
xchg
arpl
shrb
in
insl
mov
mov
imul
xchg
andb
xchg
addr16
push
shl
shl
das
popf
lock
push
daa
repnz
cmp
loop
nop
bound
shl
aam
shll
call
repnz
fidivs
test
or
out
stc
sbb
mov
in
mov
adc
and
jns
xor
push
adc
loopne
jno
leave
and
int
pop
loopne
sahf
fisubl
mov
ss
add
lea
pop
call
call
aaa
push
mov
jnp
jmp
lea
push
ds
xchg
pop
aad
lods
pop
jp
xlat
fiadds
push
adc
out
xchg
sub
aam
movb
cmp
sbb
les
push
enter
xchg
cmpsb
adc
ds
movsl
mov
dec
pop
shrl
mov
push
loope
dec
sbb
pop
mov
xchg
and
pop
xor
lcall
sub
push
pop
sub
push
cmpsl
jbe
int3
fstl
push
adc
dec
xchg
sub
iret
insb
repnz
daa
lret
dec
sbb
inc
scas
dec
xchg
cs
imul
loope
mov
xchg
inc
xchg
ss
push
arpl
mov
or
fisubrl
mov
sub
pop
push
push
mov
jge
lds
std
pushf
fcmovbe
inc
test
ljmp
inc
push
je
mov
fwait
dec
sbb
adc
mov
add
gs
or
nop
mov
cltd
insl
mov
mov
mov
jae
shl
sahf
out
das
insb
inc
push
je
jecxz
adc
push
inc
repnz
inc
and
cli
adc
lret
test
sub
sub
arpl
jp
in
jno
push
dec
movsb
fcoml
sub
in
dec
jae
out
add
mov
pop
sbb
adc
mov
addr16
ret
xor
sub
insb
adc
scas
xlat
sub
jl
call
pop
test
inc
xor
mov
jae
sbb
push
outsb
andl
insb
mov
sbb
or
ljmp
fstl
fildl
into
and
adc
adc
mov
jmp
push
nop
and
adc
xchg
push
pop
jmp
outsb
xchg
inc
and
adc
fwait
movsb
int
call
test
sbb
adc
cwtl
bound
adc
jecxz
adc
mov
dec
clc
cwtl
jae
inc
lods
das
inc
insl
add
mov
cmp
fidivs
leave
mov
push
out
jg
mov
hlt
loope
outsb
xchg
imul
ret
addl
sbb
aam
mov
hlt
sarl
aad
lds
enter
mov
xchg
fdivl
jbe
cmpsb
ss
je
outsl
and
std
jae
or
adc
faddl
push
sbb
push
in
jae
push
lock
call
clc
mov
in
mov
pop
sbb
js
push
in
mov
push
adc
in
sub
insl
lcall
repz
inc
mov
or
cltd
ja
repnz
push
cmpsb
sahf
rcl
push
es
dec
mov
test
lret
ds
lahf
push
xorb
pop
push
push
lods
pop
xor
shll
das
push
cmpsl
jae
push
data16
insl
scas
movsb
xchg
mov
sub
push
dec
sbb
pop
push
daa
dec
xchg
sbb
xchg
jecxz
sub
adc
push
pusha
ss
cmpl
mov
or
loopne
or
sub
adc
sbb
or
lea
or
sbb
push
cmpsl
dec
xchg
pop
jbe
add
pop
jae
adcb
sub
adc
fcoml
hlt
add
imul
mov
jne
sub
adc
je
mov
mov
or
loop
cs
mov
or
imul
lods
pop
pop
fidivs
jb
mov
adcl
sub
adc
outsl
mov
sti
mov
mov
or
push
mov
or
andb
jecxz
adc
daa
mov
imul
pop
push
sub
cmp
and
push
lret
mov
lock
ds
pop
mov
mov
sbb
repnz
push
pushf
cmp
out
jbe
inc
mov
in
jns
sbb
cli
dec
filds
fdivs
pop
lods
inc
dec
outsb
jns
sbb
pop
outsl
xlat
lods
pop
mov
jle
insb
fidivl
xlat
lods
pop
mov
les
lret
nop
cmpsl
mov
push
pop
cmpsb
test
outsb
fnstenv
dec
in
adc
mov
mov
push
mov
ret
mov
ficomps
cmpsl
push
lock
push
std
dec
fstps
dec
out
cmpsb
adc
mov
sub
sahf
pusha
repnz
cs
adc
push
jle
jg
mov
incl
jae
js
add
cmp
inc
scas
stos
ds
or
sahf
xchg
add
imul
sub
rcrb
add
lea
pop
xchg
dec
shlb
add
mov
sbb
sub
add
stos
mov
xor
add
adc
lods
or
scas
push
xchg
mov
cmp
movsb
int3
push
in
adc
push
and
push
fisttpl
add
or
xor
lods
pop
ret
inc
adc
sub
lds
cmp
jecxz
push
rorb
add
out
pop
mov
mov
inc
pop
mov
sub
jae
or
add
add
add
adc
sbb
add
adc
sbb
add
adc
test
scas
rcl
data16
xor
test
gs
scas
rcr
pusha
sbb
in
push
loop
and
dec
in
lahf
cs
xor
push
pop
out
sub
and
inc
in
shll
mov
or
or
add
push
add
adc
push
add
adc
dec
hlt
or
js
mov
test
movsl
xchg
xor
xchg
and
out
shr
or
or
call
daa
test
rolb
fimuls
push
xor
push
inc
mov
xchg
aaa
mov
and
bound
jb
insl
mov
add
popa
insl
ss
data16
push
xchg
inc
cmpsl
xchg
dec
sub
test
add
add
and
pop
add
pusha
shll
and
ja
in
jmp
lret
pop
leave
lods
push
add
test
add
add
adc
pop
add
bnd
or
jne
sbb
sub
gs
push
in
cmp
shll
add
mov
popa
adc
sbb
jmp
add
add
adc
inc
arpl
loop
test
add
scas
jns
jecxz
scas
shl
outsl
push
icebp
outsl
push
lock
sbb
jmp
xor
out
and
dec
xchg
sub
dec
xchg
jmp
test
add
pop
pop
add
adc
adc
adc
adc
add
adc
lods
ljmp
lods
loop
and
das
pop
mov
cmp
sahf
cmp
call
add
mov
xchg
and
das
pop
test
cmp
mov
fidivl
dec
inc
push
test
add
pop
add
adc
pop
add
adc
lahf
mov
and
orb
arpl
lahf
lods
shl
outsb
push
icebp
outsb
push
lock
push
repnz
dec
mov
daa
sbb
jecxz
scas
shl
insb
push
icebp
insb
push
repz
mov
loopne
lods
dec
mov
xchg
mov
and
push
cmp
dec
xchg
movsl
jb
cmp
pop
mov
dec
clc
repz
scas
lods
pop
ss
fisubrl
lods
cmp
xchg
push
adc
push
mov
lret
xlat
cmp
mov
pushf
fistpl
xor
adc
jnp
pop
js
sbb
jl
dec
repnz
test
pop
mov
pop
push
sar
dec
fsub
cltd
sbb
and
push
faddl
sub
shrl
push
xlat
mov
and
mov
xchg
loop
fdivl
pusha
adcb
cwtl
pop
sarl
cli
es
js
mov
fistl
fldenv
pop
mov
cmpsl
stc
mov
scas
mov
stos
mov
jle
imul
inc
fiaddl
mov
pop
and
call
in
daa
push
bound
popf
xlat
cs
fnsave
inc
out
dec
adc
push
loopne
inc
add
adc
popa
adc
jbe
and
push
call
xor
call
pop
push
dec
lea
xor
aad
inc
into
in
push
cmp
clc
xor
into
lret
sbb
fsubp
imul
jl
push
imul
mov
jp
push
pop
pop
stos
sbb
adc
pop
int3
cmpsb
add
mov
adc
bound
aaa
int3
jp
loop
fisubl
push
or
test
mov
mov
adc
inc
push
mov
push
dec
pushf
lock
gs
shlb
cmp
stc
cwtl
dec
adc
pusha
pop
add
imul
mov
dec
jecxz
repz
aad
pop
xor
into
aaa
outsb
les
iret
cmp
les
arpl
test
mov
pusha
xor
roll
flds
aad
lods
add
push
xchg
pop
and
pop
adc
imul
push
insl
or
pushl
lods
shl
mov
pop
adc
imul
fisubrs
push
fs
xchg
or
ret
das
lock
inc
dec
jae
push
mov
xor
add
pop
jno
daa
mov
dec
push
ret
out
loop
shll
and
pop
adc
repz
mov
mov
sbb
ret
movsb
and
pop
adc
sbb
xchg
and
inc
mov
xchg
mov
jp
or
inc
ja
loopne
inc
cmp
and
pop
adc
das
xchg
popf
add
sub
dec
mov
mov
pop
xchg
inc
cmp
cmc
and
insl
mov
mov
jae
push
xchg
pop
repnz
repnz
inc
pop
test
dec
sub
jo
ror
je
std
mov
xor
add
into
in
dec
adcl
and
mov
aad
lods
out
sub
ss
fidivs
xchg
scas
dec
xchg
mov
lods
sarb
popf
mov
adc
js
movb
dec
shl
adc
pop
outsl
pop
lods
pop
mov
arpl
jne
lock
lock
ds
or
add
sbb
dec
push
cs
imul
sub
aas
cmp
leave
das
cmpsb
mov
adc
fiadds
pop
aaa
push
fildll
mov
push
dec
insb
popf
mov
sbb
jb
insb
inc
dec
sub
stos
pushf
test
jb
cmpsb
pop
mov
xor
pushf
test
mov
push
rolb
scas
xchg
inc
out
andl
das
call
cmp
mov
lea
and
fs
mov
mov
push
shlb
outsl
rclb
push
xor
mov
xchg
mov
mov
pop
xlat
out
lcall
inc
ljmp
jl
fsubrs
fwait
mov
aas
and
xor
cmpsl
dec
imul
xchg
mov
repz
adc
push
shll
insl
fidivl
and
mov
fldl
pop
adc
aad
pop
dec
sbb
sub
lods
inc
out
pop
loope
pop
mov
loop
mov
repz
insb
rcr
dec
fsubrs
mov
sahf
xor
in
fnsave
cmp
rorl
mov
jmp
jmp
aam
mov
mov
jle
stos
daa
xor
into
out
mov
mov
pushf
lds
inc
divb
and
add
pop
push
mov
inc
test
cmp
adc
inc
int
negl
jbe
inc
sub
xor
adc
in
shlb
cmp
push
pop
rcl
pop
arpl
ja
addr16
sti
es
sub
mov
rclb
rcl
mov
rcrl
scas
or
ret
dec
fwait
cmp
xor
dec
subb
movsl
dec
inc
dec
xchg
stos
adc
push
mov
ds
mov
fwait
lods
xchg
and
xchg
lods
scas
xor
cmp
ds
test
dec
lods
sub
pop
jle
push
dec
and
call
push
cld
xchg
cmp
repnz
mov
push
mov
nop
and
sub
sub
pop
adc
sbb
pop
xchg
xor
into
mov
rcrb
xchg
adc
fwait
push
fimull
fs
sub
pop
adc
jno
inc
mov
pop
test
shrb
mov
mov
aam
add
sbb
testl
repnz
push
and
test
and
sub
mov
cmp
mov
rcrb
popf
xchg
in
test
mov
inc
sarl
into
mov
push
mov
mov
add
into
rcrb
pop
ret
mov
mov
jl
dec
dec
es
jl
add
jbe
outsb
mov
xchg
outsb
mov
mov
jns
out
daa
add
jmp
daa
add
add
adc
es
jge
or
xchg
or
mov
pop
dec
mov
rcl
test
aam
jge
mov
mov
dec
sbb
arpl
adc
pushf
imul
daa
pop
ja
bnd
pop
je
shrb
mov
les
nop
adc
mov
mov
mov
fsubr
aad
fnstenv
xchg
jl
add
jae
add
adc
add
adc
add
adc
daa
add
adc
repnz
aas
sub
sahf
cmp
call
sub
loopne
and
shl
jecxz
aas
sub
sahf
cmp
call
sub
out
and
imul
stos
mov
and
clc
jl
add
daa
add
adc
daa
add
repz
scas
dec
cmp
push
mov
lahf
mov
and
rolb
sub
es
mov
cmp
cmp
push
mov
pushf
mov
xchg
lods
shl
popa
dec
lret
sub
jmp
pop
outsb
lret
out
lret
inc
stos
fdivs
pop
inc
pop
xor
pop
xlat
dec
cwtl
jae
movsl
xchg
sbb
add
mov
xchg
loopne
sub
call
insl
fidivl
xchg
rcr
push
ss
xchg
sub
sbb
add
add
adc
add
mov
sbb
test
ss
das
mov
jmp
lcall
sub
shl
outsl
stc
data16
mov
popf
mov
ds
shl
bound
sbb
fstp
rorl
jo
cmpsl
xchg
sti
sbb
add
mov
add
sbb
out
xchg
hlt
insl
adc
cmp
shrb
mov
jmp
mov
cs
mov
xor
jmp
int3
sub
adc
sub
adc
sub
adc
sub
adc
xor
int
std
fsubs
ss
mov
andl
xor
lods
sbb
sahf
in
int
call
jmp
popa
lds
sub
adc
push
push
sub
pop
sbb
add
sub
adc
add
adc
pop
clc
push
pop
jmp
scas
or
js
pop
jmp
js
imul
adc
cld
xchg
shll
shlb
aad
fsub
dec
sbb
arpl
js
arpl
add
xor
mov
jae
fiadds
pusha
or
mov
xor
cmc
dec
mov
and
dec
mov
faddl
aam
xchg
jne
sahf
xchg
pop
xchg
mov
sub
in
icebp
daa
inc
cmp
stos
in
and
mov
push
add
loop
adc
test
add
aas
loope
mov
pop
in
xchg
pop
fs
cmc
mov
test
adc
pop
mov
sub
xchg
jne
in
mov
cmp
xor
icebp
sub
cmp
sub
push
in
inc
pop
and
adc
jg
or
push
adc
lods
xchg
push
push
aaa
or
xorl
sbbb
xor
pop
fcomip
dec
es
jecxz
repz
mov
push
ret
out
les
jno
jne
out
pop
decl
les
jecxz
adc
or
fildl
sbb
andb
xor
stos
pop
test
inc
fstps
push
and
sbb
test
push
push
roll
psubsw
mov
mov
or
push
adc
push
xchg
clc
mov
adc
xchg
lods
out
jae
mov
push
adc
push
cmp
orb
repnz
sub
push
adc
mov
sub
pusha
adc
adc
rol
add
jmp
mov
lock
mov
adc
cli
dec
xchg
and
out
pop
hlt
and
jl
bound
ss
xchg
es
jmp
shrb
addr16
and
fwait
sahf
xchg
arpl
fcomps
mov
jae
adc
pop
adc
mov
arpl
cmp
pop
adc
cmp
pop
adc
lods
add
ret
pop
adc
push
add
ret
pop
adc
dec
ret
pop
adc
jbe
sub
or
ficoml
nop
adc
adc
data16
lahf
ss
add
sbb
jns
sbb
cmp
mov
cmp
cld
shl
outsl
dec
les
mov
fildll
cwtl
mov
jge
jg
pushf
push
ret
gs
jg
push
cld
imul
cmp
dec
outsl
aas
out
sbb
fs
jle
test
fdivs
test
mov
add
cmp
cmp
arpl
mov
cmp
call
lods
pop
pop
and
pop
adc
xchg
pop
fldenv
ljmp
dec
jle
bound
adc
stos
insl
shr
shll
scas
stc
loop
mov
mov
das
arpl
xchg
dec
pushf
adc
adc
mov
sub
in
ret
push
adc
out
dec
pop
dec
push
mov
xor
cmpsl
in
movsl
fldcw
mov
pop
adc
shll
dec
inc
mov
mov
faddl
pop
adc
cmp
push
xor
cwtl
adc
adc
push
add
hlt
inc
mov
or
sahf
aam
xor
fxch
jl
clc
add
lcall
sbb
leave
mov
test
add
in
leave
xor
jae
xor
int3
pop
add
adc
fnclex
add
xlat
or
in
imul
lcall
aad
sub
mov
in
sub
sbb
push
enter
sub
xchg
es
sbb
inc
sarb
cltd
lods
or
scas
int
push
outsl
lods
movsb
pop
fwait
ds
lods
ret
inc
xchg
cs
sbb
es
add
test
out
imul
inc
insb
add
insb
in
pop
xchg
pop
sub
inc
loopne
lods
fists
sbb
pop
push
out
sub
cli
xlat
or
or
test
mov
call
jo
scas
cmp
les
sbb
insb
sbb
popa
mov
inc
outsl
fnstsw
rorb
cmp
mov
in
jp
decb
lret
loopne
xchg
pop
in
push
test
int3
mov
pop
clc
iret
scas
push
mov
pushf
mov
lock
adcl
imul
in
in
lea
pop
jl
adc
mov
aam
push
mov
or
std
test
and
dec
test
push
adc
es
mov
fsubs
lods
push
int
sbb
xor
shlb
adc
dec
pop
out
pusha
jl
call
adc
lahf
std
or
or
adc
loope
pop
in
mov
inc
ds
es
sub
stc
add
jne
rcll
bswap
sub
adc
mov
jecxz
lock
push
jne
out
out
add
movsl
jmp
xor
insl
xor
js
test
jns
js
popf
jp
sub
ss
test
and
jmp
das
pop
pop
xchg
mov
pop
fildll
hlt
xor
into
fdivrp
std
fimull
fmuls
out
movsl
aaa
adc
mov
aas
mov
decb
in
push
inc
cld
out
repnz
aad
sbb
or
pusha
and
sub
es
jecxz
adc
xchg
mov
daa
fnstcw
lea
mov
mov
lods
pushf
mov
pushl
push
sub
outsb
cmp
sub
call
lea
xchg
and
fidivl
pop
or
jb
cmc
xchg
scas
push
xor
pop
mov
adc
mov
xor
xchg
sub
jne
add
xorb
push
mov
pop
shl
mov
push
dec
loopne
mov
out
mov
imul
fistl
pop
xor
push
stc
and
das
mov
sbb
add
dec
inc
pop
jl
mov
and
aam
pop
push
das
mov
loop
adc
ss
pop
mov
sbb
cmp
cmp
mov
insb
loopne
mov
inc
mov
inc
sub
sub
cmp
push
sti
jge
xchg
loopne
daa
and
fcmovnb
ret
sub
movsb
ds
ficompl
cmp
and
movsb
loope
xchg
lods
mov
shrl
mov
xchg
pop
push
fisubrl
test
es
cmp
push
loopne
scas
mov
lea
mov
mov
pop
dec
adc
push
lahf
movsl
lock
and
les
out
xchg
retw
fnstenv
cmp
mov
sti
jb
sbb
pop
push
loopne
pop
insb
lcall
cs
mov
movsl
movsl
aaa
mov
xchg
mov
hlt
pusha
fsubr
adc
sbb
adc
aaa
sub
push
out
jmp
aam
adc
push
dec
call
stc
pop
les
insl
add
mov
scas
dec
pop
aas
cmp
into
imul
icebp
xor
push
fbld
cmpsb
aad
mov
cmpsl
popa
push
mov
fimuls
cli
sbb
pop
dec
adc
xor
sub
xchg
shrb
fildll
fildll
fldenv
add
push
out
popf
ret
xchg
clc
and
into
addr16
pop
sbb
ret
inc
cs
sbb
je
push
loope
leave
push
pop
pop
sub
call
sub
push
push
mov
out
xchg
sub
lock
ss
xlat
lret
inc
pop
ret
int3
fwait
test
lahf
adc
and
lods
or
push
xchg
push
mov
push
clc
mov
mov
jne
push
out
sub
adc
fldenv
mov
and
sarl
mov
adc
lret
jg
movsb
sbb
xor
push
sub
leave
inc
pop
icebp
add
outsb
fdivs
jmp
fmul
fisubrl
xchg
cld
popa
push
push
scas
mov
js
hlt
push
nop
mov
xor
mov
rcl
jnp
test
clc
lret
scas
hlt
or
rcr
dec
jmp
xchg
je
insl
push
lock
test
daa
lcall
sbbb
pushf
out
sbbb
mov
inc
scas
outsb
or
xorb
push
rolb
in
jae
or
sbb
pop
out
mov
loopne
mov
xor
mov
inc
push
add
sbbb
xchg
sbb
xchg
push
xlat
xchg
fucomip
add
pop
mov
and
push
jno
out
loope
in
jnp
test
mov
mov
or
mov
jns
in
xor
mov
mov
pop
adc
jmp
xor
sub
fdiv
xchg
sbb
es
mov
xor
add
gs
lret
rcl
mov
push
pop
aaa
imul
sbb
loope
imul
inc
pop
pop
mov
lcall
inc
xchg
pop
je
push
mov
push
daa
dec
iret
inc
ja
inc
mov
loop
jecxz
movsl
loope
and
notb
les
fbstp
out
nop
mov
popa
dec
imulb
cltd
xchg
test
pop
dec
xchg
mov
mov
aaa
xchg
cmp
mov
xchg
jbe
pop
inc
push
or
cmp
das
mov
lea
mov
push
pop
lret
fcomps
scas
loopne
xor
out
mov
pop
out
adc
dec
fdivs
sub
lods
dec
out
xor
mov
xchg
mov
in
jns
repz
mov
loop
mov
mov
mov
pop
cli
inc
cmp
push
dec
mov
lods
shll
mov
rcrb
fidivl
pop
ljmp
fidivrs
aad
in
lods
pop
std
and
mov
sbb
bound
push
lods
shl
ja
out
outsl
lcall
ss
shrb
in
out
pop
aad
dec
xchg
popl
mov
jae
daa
aas
mov
add
push
cs
mov
push
scas
jmp
mov
xlat
sahf
cltd
pop
or
mov
mov
mov
cmpsb
aad
xchg
xor
xchg
stos
adc
fld
mov
sub
fsubrs
hlt
stos
dec
push
add
mov
jp
push
dec
sbb
and
outsb
and
xchg
rorl
xor
mov
push
mov
fcoms
lods
icebp
push
mov
adc
jmp
test
lods
jno
stos
je
push
and
aad
cs
fwait
cltd
push
lea
push
pop
shll
xor
flds
or
dec
fisttpl
pushf
xorb
add
xchg
cmpl
cmpsl
sbbl
sub
and
jecxz
xor
in
scas
and
ror
sbb
mov
adc
push
sbb
sbb
fdivrl
dec
xchg
sub
loop
fcmovnb
add
movsb
xchg
lret
movsb
insl
shrl
or
cmpsb
xchg
push
pop
fstl
fstl
fistpl
dec
jne
ss
adc
jl
xchg
mov
and
mov
pop
adc
mov
ds
inc
add
xchg
push
icebp
das
push
jne
pop
call
rclb
mov
sar
je
mov
and
jl
lahf
and
xchg
data16
sbb
addr16
mov
scas
sbb
adc
or
in
or
jg
lahf
frstpm(287
lods
aam
add
sub
or
and
cmpsb
mov
dec
int3
outsb
push
and
mov
pop
cmp
xlat
mov
stc
fs
push
mov
xor
repz
inc
lods
jbe
mov
shrl
bound
adc
cli
js
push
adc
sub
mov
stc
out
das
in
pop
mov
or
in
pop
int3
mov
mov
push
push
add
mov
push
ja
mov
frstor
xchg
idivb
mov
enter
out
clc
out
xchg
add
outsb
mov
xchg
arpl
jns
pop
xchg
push
scas
stos
xchg
lahf
stc
pop
cmpsb
push
push
add
lcall
test
jne
pop
cmp
sub
inc
push
inc
inc
sub
test
nopl
out
dec
push
bound
pop
xor
jbe
sbb
rol
mov
ret
add
lret
dec
and
mov
popf
jbe
jmp
rorb
xchg
jnp
cwtl
inc
mov
xor
xor
aas
jo
mov
mov
xchg
jno
mov
cmp
pop
sar
mov
mov
jb
add
jp
fisubrs
sub
jmp
push
repz
jmp
roll
push
shlb
mov
flds
push
out
push
sub
push
shl
mov
xchg
mov
pop
mov
push
mov
mov
pop
dec
dec
aam
iret
fidivl
lds
je
inc
ss
dec
mov
fldcw
or
insl
fcmovnu
add
push
adc
mov
aam
mov
scas
jecxz
adc
sbb
das
test
scas
cmpsb
and
xor
lods
pop
ja
and
repnz
xchg
dec
cmp
lods
pop
jno
add
lahf
push
push
aas
cmpsb
pop
mov
dec
inc
push
inc
gs
shll
pop
mov
adc
xorl
push
and
lods
xor
in
adc
fisubl
fbstp
shrb
cwtl
mov
xchg
sahf
push
sbb
lods
pop
in
xor
cmp
sti
mov
es
push
sbbb
xor
mov
out
pop
pushf
mov
test
cmp
sub
stos
jmp
out
push
sub
xor
lods
pop
cmp
mov
xor
sbb
lods
shl
mov
shlb
cwtl
cmp
cmp
pop
scas
fbstp
insb
arpl
xor
dec
sub
inc
loope
insb
shll
xchg
clc
push
ret
clc
push
clc
push
int
arpl
mov
rdrand
js
xchg
mov
pop
add
bound
cld
mov
jl
ds
mov
xchg
sbb
jle,pn
mov
sub
jb
test
inc
pusha
je
mov
fidivl
pop
and
xlat
in
push
jmp
popf
subl
in
xchg
mov
mov
jle
xorb
inc
lret
adc
xchg
rcr
cs
cs
mov
sahf
sub
iret
lahf
mov
movsl
jbe
pop
cmp
subb
lods
adc
rorl
ret
jecxz
rcrl
arpl
xchg
sub
mov
pop
dec
push
lds
mov
rcrl
je
or
xchg
pushf
xchg
adc
and
rcl
sbb
inc
sbb
inc
jmp
add
lds
daa
insb
cli
pop
lcall
filds
cmp
jae
fldl
cld
mov
inc
scas
xor
sbb
fbld
in
jae
popa
addr16
imul
fbstp
dec
inc
test
cwtl
stc
lahf
push
fmul
xchg
outsb
add
in
push
sub
jne
adc
cli
mov
and
pop
cmp
jle
cmp
sbbl
arpl
test
scas
test
jle
aam
ds
jbe
mov
lea
shlb
fisubrs
in
add
repz
sub
mov
sti
or
test
push
and
mov
xchg
out
into
mov
mov
push
xor
std
dec
and
inc
xchg
mov
fildll
push
out
push
add
xchg
ds
jle
ret
popa
xor
inc
cmp
pop
call
lahf
adc
cltd
sub
push
and
or
ljmp
aad
cmpsb
aam
cmpsl
mov
mov
add
xlat
repnz
test
pop
mov
cli
jmp
cmp
imul
xor
in
push
nop
jae
arpl
call
adc
add
scas
push
and
jo
es
sub
outsb
daa
sub
and
push
je
add
sahf
cs
ss
lret
mov
xchg
mov
fidivl
out
stos
add
adc
sbb
push
rorl
test
push
into
push
sub
in
popa
and
push
dec
xchg
sub
lahf
scas
xor
fsubrl
ret
dec
pop
repnz
jb
adc
add
adc
mov
pop
jl
and
xor
insb
push
lock
lods
xlat
xchg
pop
ret
jbe
fnstcw
adc
nop
fisubrs
leave
out
xchg
jg
insl
daa
mov
cmpsb
lcall
push
icebp
dec
ret
xchg
jae
leave
aas
sub
enter
push
xchg
jae
jne
insb
out
add
push
loope
into
cmpsl
cwtl
les
sarl
out
xchg
jg
jg
inc
loopne
es
xchg
jge
inc
out
pop
sub
insl
loopne
mov
aaa
loop
nop
jb
lret
pop
je
pop
mov
cltd
sub
out
inc
or
test
xchg
jnp
imul
pop
aam
aas
repnz
xchg
pop
xchg
jge
mov
call
push
rcrl
inc
mov
xor
nop
outsb
mov
push
imull
xor
nop
outsb
push
push
adc
dec
bound
mov
aas
pop
rcll
jmp
push
and
and
rorl
sbb
cltd
popf
pop
mov
stos
pop
cmp
aam
xor
les
popa
arpl
pop
mov
inc
iret
add
jecxz
inc
fs
and
sub
ljmpw
and
pop
mov
fildl
sbb
enter
dec
push
ret
pop
adc
stc
dec
pop
fists
out
fs
inc
and
dec
sbb
jl
sbb
jne
insl
icebp
out
mov
movsb
add
icebp
add
ljmp
ljmp
push
adc
rcl
subb
cmp
repz
nop
sub
jno
lret
mov
ret
pusha
push
adc
fdivs
push
dec
push
push
gs
pop
push
push
jae
inc
push
andb
push
fidivl
out
mov
mov
inc
sbb
mov
add
scas
push
repz
outsl
mov
jne
popf
push
ret
pop
adc
js
aas
es
inc
daa
mov
xorb
dec
push
adc
sbb
inc
call
mov
mov
in
pusha
pop
and
adc
fisttpll
lods
ja
xor
aas
scas
cwtl
xchg
rolb
push
or
inc
std
mov
xchg
imul
mov
cmp
add
jne
pusha
push
adc
inc
xchg
scas
pop
fnstsw
cld
xor
inc
sub
dec
mov
jbe
in
adc
stos
mov
sbb
idivl
sbb
mov
add
fsubrs
xchg
sahf
sub
mov
jg
dec
xchg
leave
or
dec
jp
or
enter
mov
loopne
lret
cs
sbb
cmpsl
lret
mov
dec
push
mov
lods
movsl
add
ds
aas
ds
popa
loopne
inc
jbe
adc
cld
mov
add
adc
mov
imul
push
push
in
adc
test
jnp
xchg
lds
jle
xor
or
mov
or
idiv
mov
imulb
push
adc
and
leave
sbb
dec
sbb
in
test
arpl
mov
aad
mov
fbstp
in
pushf
ss
pop
ss
fscale
adc
inc
push
je
dec
enter
push
mov
jl
int3
es
bound
fwait
lahf
cld
insb
pop
shrl
pusha
mov
or
cwtl
dec
xchg
fcmovb
mov
fmuls
test
fcoms
ds
xchg
lods
mov
or
stos
mov
addl
xchg
mov
sub
pop
jp
loopne
and
sbb
fbld
fcompl
je
push
adc
shr
repnz
mov
insl
fstpt
mov
pop
xlat
ljmp
xchg
mov
repnz
dec
xchg
pop
jb
sbb
loopne
std
or
call
adc
mov
dec
loopne
and
dec
in
mov
xor
imul
push
cmp
shr
in
jo
mov
fisubs
sbb
loop
push
mov
stos
sahf
dec
insl
lret
mov
xor
inc
and
inc
push
rep
push
insl
cs
push
push
mov
cmp
xor
sub
int3
imul
pop
aaa
push
pop
jno
aad
ror
xchg
cmp
test
insl
push
je
fistps
push
ficompl
mov
lods
fdivs
pop
jbe
in
xor
jmp
xchg
dec
fildll
push
movsb
in
push
cmc
and
cmp
ret
xchg
mov
stos
movsl
pop
mov
lret
cmpsb
ss
nop
jne
fwait
mov
lock
cltd
lods
mov
mov
cmp
adc
popa
xchg
cs
sub
fsubr
jmp
fimuls
sbb
jge
xor
xor
stos
inc
out
mov
cld
xchg
sahf
sub
aad
fs
out
push
xchg
or
ljmp
inc
stos
sub
push
int3
and
add
xchg
fiadds
flds
mov
insl
decl
push
mov
lods
in
adc
cld
pop
mov
dec
in
addr16
pop
pushf
out
jnp
repnz
mov
movsb
push
in
push
dec
repz
inc
push
test
add
rcll
aaa
xor
cmp
in
pop
mov
lock
add
push
pop
jns
xor
pop
xor
sbb
lcall
inc
jnp
push
mov
xchg
and
ljmp
sti
xor
push
adc
xchg
fldenv
push
stos
inc
les
call
mov
xchg
add
add
cmp
jbe
movsb
mov
mov
fmul
fidivrs
hlt
mov
pop
dec
enter
neg
and
stc
aas
lret
std
sub
jne
xchg
add
mov
jae
iret
inc
or
inc
pusha
adc
outsb
xor
fstl
mov
jne
in
repz
dec
pop
in
jl
imul
push
stos
fsubr
cs
push
stc
jecxz
mov
push
iret
gs
cmpsl
and
jb
inc
push
test
andl
inc
jne
dec
push
jae
test
sub
scas
jo
dec
inc
movsl
rol
mov
cmpsl
push
outsl
mov
sbbl
pop
nop
add
das
in
sbb
nop
outsb
xchg
inc
iret
std
pop
cmp
cltd
inc
rol
call
aas
fiaddl
mov
sbb
xchg
adc
mov
mov
dec
jmp
xor
push
in
jge
pop
addr16
sbb
pop
adc
mov
pushf
fists
adc
hlt
fucomi
ret
sbb
pop
test
pusha
in
clc
fcoml
push
loop
es
mov
dec
cli
pop
ss
popf
push
inc
scas
fnsave
repz
add
subb
xchg
fsubrp
bound
mov
mov
add
frstor
out
add
cmp
and
push
dec
jecxz
dec
daa
ss
adc
movsl
dec
sahf
dec
test
inc
pop
inc
insl
sbb
pop
enter
pop
xor
ret
inc
loop
xchg
lods
xchg
test
sbb
cmp
insl
fcmovb
insl
push
loopne
dec
add
push
mov
shlb
mov
pop
jmp
or
inc
outsl
push
lea
push
sub
pop
push
repz
pop
jne
aam
push
andb
mov
xchg
mov
repnz
pop
inc
and
jnp
pop
dec
pop
loop
in
dec
lret
repnz
push
fdivs
sbb
popf
mov
pop
jne
adc
push
fstpt
scas
mov
nop
lods
pop
ds
repnz
sar
popa
call
adc
push
xor
xchg
leave
dec
push
push
jle
je
mov
gs
mov
test
mov
mov
dec
sub
loop
movsl
add
ljmp
mov
fidivl
hlt
arpl
dec
pop
ds
pop
cs
lods
pushf
mulb
mov
fucomi
scas
xchg
jo
xor
insl
fidivrl
sbb
pop
adc
mov
ficompl
push
call
mov
mov
push
iret
imul
aaa
adc
lods
shl
xchg
aad
lods
movsb
mov
aas
dec
sub
fisubs
and
sbb
jmp
cmpsb
fnsave
fnstsw
imul
dec
adc
or
push
push
jbe
gs
lods
sbb
das
and
pop
and
das
int
lods
fisubs
lcall
insl
push
push
fldenv
sub
cmp
mov
in
pop
addr16
xlat
adc
jb
stos
lahf
cld
cmp
or
mov
outsb
aaa
aam
jb
stos
lahf
jmp
or
adc
cwtl
jne
pushf
xchg
lea
out
mov
xchg
adcl
stos
pusha
out
lahf
add
ret
jmp
mov
sahf
leave
inc
pop
push
enter
ljmp
and
sub
lds
ucomiss
or
inc
cwtl
xchg
and
leave
jg
mov
xor
xchg
scas
nop
std
cmp
xor
cmpsb
xor
lret
cs
sub
jne
xor
sub
mov
fwait
mov
lret
lods
sbb
sub
xchg
sbb
sub
lods
jp
iret
sbb
push
shrl
popa
sub
into
mov
and
mov
or
fxam
cmc
lea
and
xchg
fmull
sbb
out
and
mov
sbb
jns
xchg
in
xlat
jle
fldenv
mov
les
cmp
mov
fidivs
dec
xor
pop
fs
lods
outsb
in
lods
mov
dec
pusha
mov
pop
loop
mov
adcl
fadds
xor
lods
mov
jbe
lods
add
sub
out
cmp
push
clc
subl
pop
imul
int
adc
sbb
sbb
pop
scas
repz
lods
rorl
inc
pushf
adc
dec
dec
jp
imulb
shlb
divl
rclb
ficoms
testb
inc
sbb
xchg
xor
pop
cmpsl
jbe
insl
dec
jp
nop
xchg
cmpsl
push
sub
in
push
fwait
loop
xchg
jbe
addl
xchg
jb
jp
scas
inc
or
ja
pop
adc
xchg
sbb
add
sbb
jp
outsb
pop
loope
addb
cld
test
sbb
pop
rcpps
sub
outsl
mov
mov
and
testb
cli
and
push
push
jne
push
jbe
push
cmpsb
xchg
adc
fbld
cmc
add
mov
stos
outsl
loop
dec
test
insl
push
std
jg
insb
fwait
pop
jnp
push
and
insl
sbb
out
out
push
lock
xchg
andb
nop
jae
push
clc
xchg
mov
pop
xchg
ss
inc
mov
or
xchg
arpl
push
push
ds
lods
xchg
jbe
pop
inc
or
cltd
mov
push
testb
adc
es
adc
push
mov
pop
call
lods
cs
scas
mov
sub
add
dec
enter
fcmovb
outsb
pop
call
sti
rol
gs
out
pop
stc
push
dec
xchg
pop
jb
lcall
xorl
pop
xchg
xchg
mov
push
mov
fcmovu
dec
cmp
inc
outsl
add
mov
shr
fimull
ss
fcmovnb
dec
push
sti
xchg
aad
test
inc
ret
mov
scas
mov
jmp
nop
sub
test
jbe
adc
in
sub
dec
popa
test
and
push
jmp
pop
or
scas
mov
icebp
insl
fidivrl
xchg
pop
icebp
push
xor
push
call
gs
test
pop
cltd
mov
ljmp
lock
in
xor
fildl
push
das
sahf
xchg
jmp
dec
insl
push
stc
bound
daa
mov
cmp
mov
scas
pop
cmp
fadd
ret
push
jne
mov
push
jno
add
mov
sbb
or
adc
cmpsb
xlat
inc
push
hlt
cmp
clc
mov
pop
lods
sbb
cs
xchg
stc
push
repz
daa
pushf
into
push
pop
mov
stos
stos
mov
iret
xchg
xchg
loopne
pop
out
and
jb
lods
mov
lahf
add
lods
lahf
cmp
push
int3
sub
jno
inc
pop
jns
adc
inc
movsb
sete
mov
insb
cwtl
sbb
fidivrs
sbb
movsb
fistl
sbb
mov
push
sbb
jns
aaa
data16
pop
movsb
cmp
mov
push
jg
dec
jp
test
and
das
aaa
nop
retw
add
mov
fnsave
adc
jae
test
jb
test
popf
je
pop
pop
sbb
xchg
jmp
sbb
mov
stos
jae
arpl
xchg
aad
mov
inc
pop
icebp
daa
insb
jns
test
xor
add
xlat
dec
or
cmpb
inc
xchg
lret
push
and
test
cmp
sbb
lahf
cmpsb
pop
out
xor
sub
shlb
orb
aam
daa
mov
cwtl
cmp
pusha
adc
daa
adc
inc
bound
inc
cltd
push
in
in
mov
mov
ss
into
push
out
jl
push
nop
push
sub
int
les
xchg
ret
stos
mov
inc
push
pop
dec
jmp
mov
test
lds
adc
jnp
enter
push
adc
mov
jl
imul
xchg
jmp
adc
cmp
insl
pop
icebp
push
fdiv
mov
outsb
stos
pop
mov
loope
mov
ss
sahf
test
jp
jo
jb
mov
shrl
fnstenv
jmp
movsb
jo
mov
sbb
sub
push
ljmp
out
jae
popa
test
imul
mov
or
aam
adc
aad
stos
push
int3
mov
out
ret
push
mov
nop
mov
insl
lret
xchg
sub
insb
pop
subb
fwait
jbe
add
scas
cwtl
mov
and
out
pop
jo
xchg
inc
das
pop
xor
push
pusha
push
scas
sbb
pop
inc
and
cltd
pushf
jp
xchg
xor
xchg
addr16
jmp
cmp
call
push
in
lret
bound
lea
push
std
push
fisttps
icebp
cli
or
lret
pop
out
mov
pop
jno
in
imul
notb
sbb
adc
adc
xchg
test
shrb
inc
cmc
cmp
dec
fdivrp
mov
xchg
sub
jbe
scas
mov
adc
sbb
fucomi
sub
pushf
mov
repz
push
fidivl
jne
adc
mov
add
pop
mov
push
cmpsl
sbbb
fildll
ret
inc
mov
and
dec
pop
sub
pop
subb
adc
lea
loopne
sbb
pop
sbb
lea
fbstp
arpl
dec
fsub
xchg
jl
or
pop
test
pop
lcall
ret
jl
pop
or
loopne
jb
sub
xchg
daa
mov
mov
aam
test
call
push
push
xchg
dec
xchg
xor
pop
in
in
rol
lea
sbb
adc
int3
pop
mov
sahf
aad
mov
daa
dec
add
pop
mov
stos
movsb
pop
cmp
ds
outsl
push
repnz
loope
sub
fisubl
popl
fld
pop
in
adc
jge
daa
xchg
mov
dec
fwait
cwtl
popa
cmp
pop
aad
clc
aad
pop
jmp
movsb
push
mov
xchg
and
push
testl
cmp
nop
pop
mov
push
inc
cmpsl
xlat
pop
push
mov
aam
mov
pop
test
mov
in
adc
mov
shrb
stos
mov
idivl
popa
add
in
loop
insl
arpl
mov
inc
ret
push
in
or
push
fwait
jno
mov
gs
cwtl
loope
std
push
adc
xor
and
int3
adc
stc
sub
sub
sbb
movsb
icebp
push
movsl
fimull
js
sti
es
into
loop
sub
mov
imul
mov
inc
mov
dec
xchg
and
xchg
movsl
add
sbb
arpl
and
inc
push
aaa
fildl
push
or
test
popa
mov
lods
push
sahf
mov
aas
mov
mov
cmp
mov
and
aaa
cmp
pop
cmc
scas
sbb
popa
insl
xorb
ljmp
scas
fwait
mov
adc
inc
add
push
jmp
xor
das
pop
cli
cwtl
pop
or
jmp
sbb
pop
repnz
xor
push
or
sub
bound
aad
xchg
dec
and
mov
mov
fstps
xor
dec
xor
std
lea
dec
paddd
scas
push
fsubl
mov
icebp
insl
jg
adc
sbb
addl
jnp
inc
mov
cmp
mov
xor
mov
add
xor
ret
sbb
in
dec
inc
cmp
stos
sub
xor
clc
ljmp
pop
xor
lret
scas
flds
sbb
in
adc
pop
inc
and
jnp
push
test
out
mov
xchg
lods
in
jmp
test
cmp
jo
les
add
or
xchg
in
adc
pop
pushf
pusha
push
adc
imul
test
push
adc
mov
rep
outsb
jae
bound
mov
mov
dec
int3
bound
adc
pop
jecxz
add
ss
add
xchg
xchg
jmp
out
mov
xor
sbb
imul
in
fnstcw
pop
xor
scas
jp
mov
fcomps
pop
loop
in
xor
loop
adc
mov
adc
lea
xor
out
stc
sbb
mov
pop
sub
push
fdivs
sahf
ret
xor
mov
mov
adc
add
or
pop
adc
ds
push
insl
das
mov
or
test
pop
push
repz
jb
into
in
in
adc
adc
fbld
and
mov
addb
inc
sub
or
clc
or
sbb
dec
jle
popa
push
adc
sub
aas
pop
loopne
or
aas
cs
push
fcoml
or
mov
cmp
in
mov
sub
adc
leave
or
sub
adc
sub
adc
test
call
mov
xor
pop
mov
arpl
mov
adc
cmc
xor
pop
adc
andl
movsl
dec
xor
cmpsl
dec
test
mov
fisttpl
pop
cltd
in
or
jb
test
xchg
sub
xchg
cmpsb
sbb
fsubl
lcall
sub
cmp
aaa
push
fimull
repz
push
fnstenv
sbb
insl
mov
push
fistpl
push
cmpsb
xor
or
in
adc
mov
fdivs
movsb
mov
adc
sub
adc
sbb
test
insb
shrl
popf
jmp
jb
sbb
adc
jecxz
subb
adc
xchg
stc
cmp
iret
popa
mov
or
mov
mov
js
sbb
adc
push
stos
mov
sub
mov
inc
or
adc
decl
xor
scas
cmp
adc
popa
dec
fucomip
adc
jno
nop
xlat
and
push
data16
inc
lock
es
push
sub
dec
fcoml
or
enter
imul
es
jle
jecxz
cmpb
pop
stos
loopne
pop
adc
aaa
popa
push
out
xchg
movsl
mov
fwait
ds
dec
push
add
push
adc
fsubp
push
mov
push
loop
ret
out
mov
xchg
outsl
mov
pop
push
or
push
adc
xchg
cmpb
mov
adc
iret
dec
cmp
mov
push
dec
mov
lahf
mov
push
adc
or
icebp
sub
in
pop
data16
std
fimull
and
mov
inc
nop
mov
pusha
mov
mov
and
dec
lcall
outsl
std
xor
pop
mov
je
stos
ds
xor
sbb
pop
pop
push
mov
cmp
mov
test
mov
sbb
out
jnp
sbb
flds
dec
sti
ds
outsb
mov
cmpsb
jg
jg
out
pop
icebp
cmp
xor
or
call
movsl
xchg
insl
fdivs
fstl
push
loopne
add
lock
cli
pop
std
push
ljmp
xor
adc
flds
cmp
cmp
rolb
dec
mov
mov
jne
or
scas
pop
or
mov
sub
call
sbb
inc
and
xor
sub
push
push
sub
outsb
mov
hlt
jle
add
ljmp
push
jne
je
push
adc
mov
bnd
mov
xor
xor
les
inc
xchg
gs
lahf
sub
loopne
std
call
cld
cmpsb
push
insb
cwtl
jno
into
sbb
add
rcll
adc
daa
lcall
pusha
call
in
pop
xor
xor
pop
pop
adc
ds
dec
push
ds
repnz
lods
je
shlb
test
lods
inc
inc
outsl
addr16
pop
pusha
push
cli
shlb
cmp
rorb
xchg
sub
cmp
outsb
sub
ss
sub
je
pop
push
insl
or
in
fidivl
lods
pop
sbb
call
sbb
sub
xchg
add
inc
dec
outsl
fsts
rorl
push
stos
ds
xor
shrl
sub
mov
inc
mov
pop
out
movsb
jmp
lea
hlt
nop
test
sbb
das
es
lea
cmp
insl
fcmovbe
push
xchg
mov
rclb
insb
lea
mov
xchg
mov
lods
lea
mov
xor
fiaddl
dec
sbb
cmp
daa
fsubrl
push
jmp
mov
ss
lods
mov
mov
adc
repz
scas
mov
push
lock
mov
pop
mov
lea
mov
mov
inc
pop
scas
insl
fstpt
pop
dec
xchg
sub
pop
xlat
imul
fcmovnb
jge
das
mov
lods
mov
insl
jbe
sbb
xor
es
xor
les
mov
push
adc
sbb
jmp
out
push
lods
lcall
inc
mov
xchg
cmp
dec
mov
push
inc
jecxz
push
loope
cmpsb
push
adc
ja
sub
or
add
lods
fldenv
pop
adc
cmp
in
shl
outsl
movsb
or
jnp
sub
shlb
inc
stc
daa
mov
lods
test
sub
les
jo
les
xchg
ljmp
or
add
mov
add
add
fwait
pop
pusha
pusha
jo
mov
dec
fsubl
push
inc
cmp
in
pop
sti
enter
jmp
ret
dec
sbb
pop
sub
scas
inc
outsl
in
adc
dec
xchg
daa
dec
stos
fdivrl
mov
push
pop
cmp
pop
sbb
loopne
and
mov
cmp
int
add
push
push
inc
shll
test
outsl
cld
adcb
adc
inc
push
pop
std
lods
or
outsb
dec
adc
jne
cli
fstps
aas
lods
pop
mov
daa
push
mov
cmp
mov
push
or
mov
xor
out
sub
in
lods
in
adc
adc
push
xor
jo
jne
mov
xchg
test
cs
xor
in
fdivrs
jnp
pushf
or
mov
cmp
test
loop
dec
sbb
loop
dec
mov
mov
jmp
in
jns
popa
call
inc
negl
mov
sbb
lods
mov
leave
add
pop
adc
mov
and
adc
pop
xchg
mov
cmp
push
lahf
lret
daa
or
std
stos
pop
jp
fstpt
bound
mov
cld
pop
cwtl
inc
es
mov
jp
scas
sub
cmpsl
aam
mov
push
mov
xchg
adc
xchg
pushf
dec
icebp
jbe
out
xchg
cmpb
add
orl
adc
arpl
inc
push
es
add
cmp
push
push
xchg
jb
pop
aam
loope
mov
cmp
xor
mov
cmpsl
stos
mov
mov
pop
and
nop
loop
into
out
lods
outsl
xchg
int
push
lcall
mov
movsb
fcom
inc
imul
cli
and
hlt
push
jecxz
mov
pop
jbe
lds
xchg
hlt
adc
test
dec
jmp
add
sarb
sbb
imul
lret
mov
sub
xor
jns
imul
subl
lods
and
xchg
movsb
xor
repnz
cltd
nop
bound
inc
test
push
outsb
je
xchg
jne
ljmp
pop
lods
shl
pop
std
mov
ds
mov
push
aad
mov
enter
mov
and
mov
cmp
lea
sub
fstps
pop
decb
mov
xchg
aad
ret
mov
sbbl
mov
scas
test
jge
mov
scas
xchg
mov
mov
nop
jbe
push
stc
dec
shlb
dec
pop
jne
stc
test
cmp
mov
gs
and
ss
lods
and
add
push
das
xchg
mov
test
adc
mov
std
call
and
pop
cmp
mov
ds
cmc
xor
adc
fildll
fnstcw
cmp
mov
jb
sbb
repnz
pop
data16
psubd
scas
xor
pop
xlat
lods
shl
push
in
test
ret
imul
jmp
jo
xchg
inc
dec
shl
addb
pop
mov
adc
ds
mov
outsl
mov
push
dec
push
jno
shl
shl
adc
push
mov
mov
xchg
fadd
dec
pop
iret
js
adc
jge
sbb
pop
cmp
stos
sub
aam
bound
jo
sub
mov
lods
jb
shll
cmp
and
inc
rcrl
dec
aad
pop
sahf
jb
sub
xchg
loope
inc
push
popa
add
in
and
mov
push
add
xor
insb
in
rcr
std
fsubrl
xor
and
in
mov
xchg
in
fldenv
pop
lock
sahf
stos
cwtl
cmpsb
dec
xchg
sub
jmp
sbb
sbb
push
sub
fimull
jae
sbb
pushf
and
movsl
adc
icebp
xchg
stos
pop
lea
scas
jge
mov
fstl
jge
cld
insl
fwait
mov
adc
jmp
dec
and
xchg
mov
sbb
aas
scas
addl
in
pop
fldl
iret
jmp
fisttps
mov
mov
add
adc
lods
cmp
nop
jo
fstl
jbe
xor
xchg
inc
lcall
es
popf
mov
mov
xchg
in
adc
jns
adc
iret
sahf
push
fsubrs
test
cmc
sbb
adc
pop
test
aas
push
in
cmp
mov
aas
dec
in
xchg
push
lcall
sub
xchg
dec
sbb
rcr
in
adc
jp
mov
js
pop
mov
scas
cmpsl
in
jl
in
data16
sub
imul
mov
pop
mov
out
mov
xor
enter
rclb
int
dec
es
jns
inc
stc
mov
mov
out
sub
cmp
test
outsl
ss
xchg
mov
sbb
xchg
push
xor
add
loop
and
mov
cltd
push
fucomp
ret
push
push
xchg
inc
movl
insl
adc
cmp
pop
aad
stos
sbb
scas
pop
mov
sub
push
mov
cli
push
outsl
jge
push
pop
lcall
sti
nop
add
jp
adc
cltd
cmpsb
xchg
repnz
test
cmp
jge
jae
popa
clc
and
outsb
lahf
es
movsb
jnp
sar
lahf
pop
scas
movsl
int
mov
and
scas
loopnew
push
add
pop
test
cmp
mov
sbb
mov
or
movsl
rol
xor
roll
or
cltd
stc
push
fimuls
mov
pop
data16
pop
arpl
push
ds
xor
fiadds
mov
mov
in
imul
cmp
fdivr
xor
mov
cmp
dec
outsl
mov
cmp
daa
dec
xchg
sub
sbb
jae
lock
adc
pop
mov
loop
dec
mov
inc
lods
rol
or
mov
orl
les
lea
loopne
mov
es
mov
ret
mov
lahf
mov
call
or
mov
ret
outsl
mov
sub
je
push
andb
mov
mov
dec
gs
and
pop
mov
std
mov
push
and
or
lea
ss
dec
out
xchg
fnstenv
push
dec
cmpsl
pop
mull
xchg
push
roll
je
cld
sahf
cmp
add
fwait
ja
mov
mov
push
imul
mov
mov
jbe
cmpsl
in
shll
xchg
mov
scas
pop
mov
pop
outsb
sbb
dec
sbb
loope
mov
test
and
js
mov
mov
push
outsb
inc
xor
test
cmp
les
push
cs
push
out
out
mov
adc
xchg
imul
scas
cmp
aad
inc
mov
cmc
fmul
pop
aad
out
and
arpl
fdiv
pop
in
xor
cmpsb
lds
icebp
or
sbb
pop
jp
fcmovne
sub
mov
add
push
in
sbb
pop
adc
sub
mov
push
inc
adc
dec
insb
mov
cs
pop
test
xchg
adc
lret
inc
dec
fs
out
lods
adc
adc
sub
imul
inc
negl
adc
mov
repz
xchg
out
xor
lahf
sbb
push
inc
ret
cltd
leave
dec
sbb
xchg
mov
mov
jle
fstps
in
into
inc
adc
jnp
call
mov
push
lds
and
inc
pushf
in
test
adc
and
out
adc
jne
sub
and
push
cld
cld
dec
fwait
mov
std
sbb
adc
jne
imul
add
and
lea
jmp
xor
orb
dec
jp
dec
insb
mov
pushf
adc
fildll
iret
into
cmpb
data16
lds
mov
scas
and
inc
imul
dec
ss
mov
xchg
pop
outsl
add
movsb
adc
ds
test
xchg
js
mov
mov
ret
out
push
test
mov
std
dec
push
je
push
jl
pop
fmul
xlat
mov
fstps
std
xor
mov
lea
outsb
ja
dec
jne
loop
pop
dec
icebp
add
stos
jns
jle
std
nop
xchg
jp
sub
cmp
test
out
ds
and
inc
imul
jl
in
jnp
dec
xchg
mov
add
test
ds
sub
js
xchg
out
insl
sarb
out
pop
mov
push
mov
test
test
ficomps
test
dec
popw
cmp
xor
rclb
cmc
mov
es
das
xor
xchg
jno
mov
cmp
lret
shll
or
mov
sub
testl
divl
sbb
push
pop
repnz
mov
xor
mov
xorb
pop
loopne
mov
sbbb
inc
lods
pop
mov
test
movsb
dec
out
loopne
frstor
insl
fidivl
push
adc
adc
pop
cmp
movsb
adc
adc
popf
mov
mov
or
ds
adc
adc
xchg
test
aam
outsb
test
or
sbb
aaa
mov
and
adc
fnstenv
xlat
push
lods
adc
adc
test
lods
cmpb
inc
inc
popf
arpl
or
inc
addr16
jne
lods
mov
imul
mov
pand
push
adc
je
or
mov
lcall
ss
adc
or
inc
jnp
imul
fwait
lret
rcrb
mov
sbb
dec
xchg
mov
inc
dec
and
ficompl
cmp
xor
push
pop
fidivl
mov
cs
insl
xor
out
push
fdivs
outsb
adc
or
adc
or
mov
adc
adc
ret
xchg
and
test
lods
pop
pop
adc
lods
pop
pop
movsb
mov
xor
out
and
mov
fstl
mov
faddl
mov
je
xchg
in
sbb
pop
adc
adc
jb
mov
hlt
outsl
inc
fnsave
popa
push
adc
adc
lret
pop
or
dec
xchg
mov
jp
dec
push
mov
mov
xor
sub
aas
push
mov
inc
nop
jne
push
mov
cmpb
je
cmpb
je
pop
ret
jmp
pop
dec
xchg
xchg
xchg
nop
nop
mov
mov
nop
nop
call
xchg
xchg
xchg
nop
nop
mov
mov
nop
nop
addl
xchg
xchg
xchg
nop
nop
mov
nop
nop
sub
xchg
xchg
xchg
nop
nop
mov
mov
nop
nop
addr16
xchg
xchg
xchg
nop
nop
mov
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
mov
nop
nop
dec
xchg
xchg
xchg
nop
nop
mov
mov
nop
nop
jne
xchg
xchg
xchg
nop
nop
mov
mov
nop
nop
xor
imull
and
jae
xchg
xchg
in
sbb
or
int
hlt
ficoml
push
and
or
je
sbb
scas
out
mov
xchg
inc
arpl
jmp
int3
clc
add
call
adc
inc
in
inc
leave
push
aad
mov
xchg
hlt
adc
mov
arpl
push
adc
mov
or
leave
inc
mov
xor
xor
adc
jo
mov
decb
adc
add
js
subb
or
push
cmp
dec
andb
sbb
sub
or
pop
in
sbbb
dec
sahf
and
adc
scas
lods
psubd
std
lods
icebp
cmp
enter
icebp
shlb
or
mov
mov
mov
push
jo
icebp
push
insb
mov
idivb
mov
outsb
xchg
in
frstor
pop
or
adc
cmp
adc
push
push
out
stos
cmp
inc
adc
mov
mov
pusha
push
adc
xor
ds
or
pop
dec
fcomi
and
inc
sub
outsb
sbb
mov
adc
mov
pop
xchg
sub
addr16
aas
fldl
lock
and
xchg
outsb
push
lret
dec
cmp
inc
cmp
cmp
jg
mov
xchg
sub
shl
in
outsb
push
xor
rep
les
sbb
fildll
fdivrs
jle
pusha
push
adc
sbb
cmp
mov
in
gs
adc
xchg
pop
rorb
stos
rcr
jne
fiaddl
mov
stos
mov
cmp
lods
pop
dec
sbb
dec
sbb
loopne
scas
push
xchg
mov
cmp
pop
call
lods
pop
jb
sub
mov
pop
jbe
pop
push
xchg
ds
pushf
dec
call
lock
cmpsb
dec
or
fwait
imulb
outsb
ret
pop
or
mov
mov
push
xchg
pop
push
push
into
and
cmp
dec
xor
lock
outsl
sub
movsb
addl
insl
xchg
mov
xor
mov
into
push
push
fdivrs
xor
rolb
inc
imul
mov
dec
sbb
in
scas
xchg
xchg
iret
js
push
adc
dec
pop
fwait
inc
outsl
aas
xchg
scas
push
addl
movsl
dec
xor
lock
ret
ret
mov
jno
and
mov
arpl
mov
jecxz
push
movsb
sti
and
mov
fisttps
adc
adc
xor
pop
mov
pop
jmp
ss
daa
shrb
xchg
mov
aad
push
xchg
imul
xor
loope
pushf
mov
cli
mov
sbb
mov
sbb
jne
sbb
shr
lods
scas
stos
iret
insb
es
bound
adc
xchg
pop
int3
mov
add
jl
iret
clc
stos
mov
sub
cmp
inc
stc
cmp
vmread
and
mov
xor
xchg
movsl
dec
fisttps
insl
push
push
popa
sbb
pop
sbb
push
pushl
out
pushaw
push
or
adc
loop
mov
adc
aam
unpcklps
out
sbb
aad
stos
mov
and
adc
bound
sbb
imul
jle
pop
cmp
stos
push
dec
xchg
mov
fs
push
mov
mov
adc
pop
push
jle
lods
or
xor
xor
push
jge
pusha
add
insb
bound
adc
jp
adc
test
and
sub
stos
sarl
inc
ja
push
fcmovbe
add
pop
adc
cltd
mov
stc
sub
or
leave
dec
popa
cmp
sub
xor
insl
xor
sahf
jle
pop
pop
dec
adc
adc
jo
mov
lret
and
in
mov
xor
clc
inc
xchg
mov
push
stos
push
int
inc
scas
cwtl
mov
xor
in
ja
scas
cwtl
lods
sbb
inc
mov
fwait
insb
mov
sbbl
js
sbbl
pop
inc
mov
loopne
pop
mov
cmp
loop
xor
lahf
jmp
adc
bound
adc
ficomps
sbb
popf
xchg
jecxz
subl
sub
xchg
mov
push
ret
pop
adc
inc
push
or
stos
repnz
out
xor
or
adc
and
orb
or
lods
inc
pushf
jae
xchg
dec
ss
aad
insb
sti
xchg
pop
xchg
mov
pop
dec
mov
daa
ficompl
add
test
jmp
sti
adc
jbe
sbb
sub
insb
sbb
pop
adc
mov
adc
push
imul
test
adc
dec
sbb
insb
fidivl
xor
hlt
das
loopne
adc
cmp
push
aam
mov
or
in
insl
fidivrl
in
scas
pop
mov
addb
xchg
and
sub
xor
add
pop
adc
jo
or
in
insb
sbb
adc
xchg
mov
and
xor
jo
sbbl
push
es
or
add
xchg
jno
add
pop
adc
push
adc
mov
or
mov
adc
repnz
ret
and
movsb
sbb
clc
mov
pop
in
cmp
data16
pop
out
lods
pop
ds
outsb
mov
dec
fisttps
mov
sbb
inc
aam
adc
adc
out
adc
pop
adc
shlb
lods
adc
add
push
push
lods
into
inc
sti
insl
lods
sub
repz
push
push
int
push
adc
insl
mov
ds
stos
mov
adc
out
clc
or
inc
jle
lret
outsl
xlat
fsts
xchg
add
and
out
std
mov
pop
jae
push
push
xor
mov
mov
pop
xor
push
dec
mov
push
xor
imul
sbb
xchg
loope
adc
mov
push
adc
stos
mov
push
adc
rol
dec
out
mov
mov
mov
add
pop
mov
mov
out
dec
outsl
cmp
xchg
mov
push
pop
mov
aad
in
test
mov
es
std
pushf
push
ret
sub
push
xchg
inc
pop
pusha
push
lea
subb
lods
push
and
popa
and
inc
insl
mov
loop
mov
inc
cmp
lret
adc
std
or
aaa
ror
ret
aaa
in
pop
xchg
std
pop
lret
xor
push
push
adc
dec
loop
add
outsb
fdivs
and
fs
xor
or
mov
sbb
adc
push
je
out
pop
sub
scas
popa
dec
adc
cwtl
insb
adc
jle
push
add
add
int
push
jle
push
inc
xchg
jns
aas
push
fcoml
sbb
es
mov
and
push
aad
pop
jbe
and
cmp
lods
in
xchg
sbb
adc
clc
std
and
mov
add
jbe
dec
nop
in
pop
or
adc
syscall
mov
int3
mov
mov
jo
or
lahf
inc
or
and
out
sbb
sar
and
sub
popf
in
inc
data16
inc
lahf
loop
xchg
call
or
test
fsts
scas
add
add
std
sahf
and
xor
sbb
mov
add
cmpsb
pushf
pop
loopne
popf
or
mov
inc
lcall
cs
or
aas
push
inc
and
ret
fdivr
mov
imulb
scas
cmc
cmp
out
inc
mov
fidivl
mov
push
mov
daa
mov
jno
in
pop
stc
mov
xor
cld
cmpsb
dec
mov
xchg
xor
ja
mov
dec
into
filds
add
cmp
lcall
xchg
or
mov
pop
adc
leave
cltd
xchg
mov
sbb
mov
jp
dec
iret
pop
test
dec
hlt
or
outsb
pushf
xor
shrl
leave
xchg
xchg
in
xor
andl
loopne
push
lret
gs
insl
fidivl
jl
cmp
inc
popa
push
mov
adc
xchg
jne
inc
push
lock
pop
mov
xchg
add
cld
aad
jecxz
lea
test
mov
mov
fildl
fidivl
loop
lods
push
data16
mov
mov
movsb
call
in
and
and
fcmovne
outsl
xbegin
ds
push
add
push
mov
xor
xchg
das
mov
rolb
dec
inc
mov
fisubrs
loopne
xor
and
fmuls
mov
lahf
in
sbb
dec
fisubl
sub
push
adc
xor
and
call
sub
jns
popf
rolb
scas
jmp
rol
dec
movsb
ret
pop
or
xchg
push
repz
pop
call
pop
and
push
adc
inc
lea
and
test
mov
sub
mov
mov
dec
pop
xchg
mov
adc
inc
in
dec
xchg
and
test
in
push
adc
outsl
jae
pop
pusha
xor
sub
aaa
movntps
in
push
out
xchg
dec
xchg
aas
movsb
pop
mov
dec
lret
cld
frstor
dec
xchg
push
les
sahf
cs
cmpsl
in
lods
jns
rolb
cmp
pop
sub
or
mov
subb
xchg
cs
popf
jmp
int3
rolb
pop
fsubrp
test
mov
cs
fadd
pop
adc
in
fwait
in
aam
pop
adc
rolb
cmp
pushf
sub
fadd
pop
adc
sbb
sub
push
adc
int3
rolb
lods
xor
cmp
add
and
push
mov
xchg
xchg
mov
insl
push
add
cmp
jbe
int3
rolb
bound
fldcw
adc
push
leave
xchg
dec
repz
and
rolb
clc
or
xchg
int3
rolb
into
adc
lds
pop
adc
lock
pop
adc
cli
mov
lods
cmpsb
adc
ficoms
mov
add
std
inc
sbb
dec
mov
xchg
and
stos
pusha
cmp
and
cmpsb
cmpsb
loopne
gs
fwait
ljmp
mov
int3
sub
adc
inc
adc
xchg
mov
mov
mov
push
int3
and
test
mov
dec
outsb
idivb
cli
mov
adc
jmp
sub
pop
icebp
sub
jne
dec
and
lea
push
les
aam
gs
adc
lock
inc
repnz
addr16
adcb
adc
aas
mov
pusha
and
mov
test
or
fisttpl
inc
ret
dec
adc
inc
rolb
inc
mov
xchg
jbe
testl
cmove
movl
addr16
adc
mov
stos
test
rolb
in
push
arpl
add
mov
mov
adcb
adc
jb
sub
decb
lds
jae
stos
xor
adc
push
test
mov
add
inc
rolb
cmp
bound
fmull
adc
and
int3
sbb
nop
xchg
push
ljmp
sarb
jae
pusha
mov
inc
sub
dec
repnz
dec
popf
mov
loope
sub
jnp,pt
sub
xor
or
xchg
hlt
lods
sbb
or
pop
xchg
test
pop
adc
call
scas
push
jmp
xor
adc
mov
fldt
add
adc
test
lahf
add
ljmp
pop
mov
pop
cs
rolb
loope
pop
push
xchg
and
sbb
mov
sub
pop
ret
out
call
fsubrl
aas
call
and
add
ficomps
ja
xchg
ja
adc
orl
cmp
aaa
out
outsl
imul
mov
rolb
fstps
fistpll
sub
mov
fnstsw
call
in
arpl
pushf
cs
leave
xchg
pop
jno
push
push
pop
mov
mov
pop
push
xchg
and
out
mov
pop
adc
adc
cmp
ss
xor
mov
bound
mov
xor
dec
pop
stc
das
mov
sub
cmp
pop
and
clc
addr16
xchg
and
adc
leave
xchg
pop
jne
jmp
mov
lret
fwait
out
pop
xchg
sub
jno
in
pop
pause
mov
shll
cmp
xchg
mov
pop
and
xor
addr16
xchg
sub
rolb
movsb
andl
or
push
xor
sbb
dec
add
in
push
adc
pop
pop
dec
mov
lods
scas
xchg
xor
xchg
inc
cmpsl
dec
lahf
into
fwait
int
stos
inc
add
scas
pop
mov
push
inc
cmpsb
dec
xchg
mov
jmp
adc
xor
sub
jbe
ss
pop
icebp
sub
mov
adc
push
xor
mov
nop
mov
or
lds
adc
lcall
pop
stos
inc
shll
rolb
es
lret
pop
in
lea
push
rcll
int3
rolb
sub
out
cmp
inc
outsb
mov
dec
into
test
imulb
adc
xchg
add
lods
xor
push
xchg
inc
sbb
sahf
sub
rolb
testl
nop
popa
mov
mov
pop
xchg
es
sarb
ficoml
dec
sbb
scas
pmulhw
pop
cmp
push
adc
sub
push
sub
sub
int3
rolb
cmpsl
insb
and
adc
aaa
jge
adc
test
inc
fwait
cmpsb
out
sbb
inc
popf
sub
loop
push
xchg
mov
cmpsl
adc
mov
dec
shll
xchg
inc
push
mov
sarl
leave
jl
mov
jmp
jns
scas
outsb
cltd
jbe
cs
xchg
icebp
pop
sbb
fbstp
dec
sbb
adc
adc
sahf
cmp
sbb
aam
hlt
out
lock
push
iret
fnsave
jb
xchg
hlt
sbb
and
and
sub
mov
xor
or
and
fiadds
iret
pop
pop
jae
xchg
dec
mov
dec
dec
inc
rclb
and
xor
sub
xor
out
movsl
mov
in
imul
fs
add
pop
adc
mov
jnp
roll
mov
movsl
decb
icebp
xorl
and
jno
dec
ret
loope
call
push
xchg
jl
pop
jae
cltd
sarl
loopne
xor
loop
aam
cld
xchg
ds
ja
dec
jae
pop
leave
int3
rolb
pop
repz
mov
cltd
cs
sub
stc
and
lds
inc
push
mov
sub
sub
and
cmp
cs
pop
adc
mov
imul
mov
rolb
nop
xchg
in
push
in
and
int3
rolb
scas
bound
arpl
pop
test
lret
push
sub
adc
and
les
ds
add
mov
movsb
mov
push
xchg
pop
pop
xchg
and
call
imul
pop
pop
lea
sub
cmp
sahf
inc
cmp
push
add
call
insl
fcmovu
aas
ds
cli
dec
xchg
es
aas
sbb
lea
push
adcb
pop
mov
mov
dec
xchg
sub
push
push
adc
adc
pop
adc
rolb
ss
rcl
push
cmp
or
in
xor
inc
mov
pusha
lds
adc
ret
pop
adc
or
aas
sub
pop
in
or
pop
ljmp
mov
mov
out
or
adc
out
jo
or
pop
ljmp
mov
mov
sahf
or
mov
xchg
pop
push
ljmp
pcmpeqw
pop
adc
sar
mov
cwtl
and
xor
orl
dec
pushf
call
incl
loope
pop
sar
mov
repz
xor
fidivs
xor
fldt
lods
out
enter
pop
pop
inc
aas
adc
sub
icebp
push
cmp
xor
xlat
fldenv
das
shll
pusha
test
mov
mov
aaa
add
lods
mov
shll
scas
sbb
aam
pop
mov
fadds
pop
lds
mov
test
pop
adc
pushf
cmp
dec
sysexit
into
addr16
push
cmp
push
mov
mov
dec
in
push
adc
fstpl
mov
dec
and
sarl
dec
lcall
lds
lret
mov
imul
test
popa
pop
cld
mov
dec
xchg
or
cmp
jns
shrl
shr
das
and
pop
int3
adc
fstpl
lret
subl
push
xchg
sub
ret
mov
rorl
jge
sub
lods
sub
test
inc
gs
jae
and
add
sbb
jge
dec
xchg
and
cmp
xchg
mov
mov
fs
testl
mov
inc
push
xchg
ret
inc
fwait
pop
push
inc
aaa
xchg
daa
insb
call
cmp
rcrl
in
push
adc
jae
fmul
xor
dec
inc
push
xor
mov
insl
sub
cltd
daa
push
gs
fwait
cmp
mov
xorl
nop
pop
inc
and
jle
lock
int3
sti
push
sub
call
xor
in
mov
push
cmp
dec
push
scas
pusha
mov
mov
ss
jo
push
adc
inc
outsl
lret
sarb
fdivrs
lock
inc
lret
enter
push
fdivl
popa
in
mov
pop
sbb
push
sub
incb
imul
loope
roll
dec
jae
out
sbb
cmpsb
jmp
push
dec
stos
dec
mov
inc
mov
stos
div
je
insl
mov
add
dec
jbe
loop
sbb
icebp
mov
lods
js
add
leave
sbb
icebp
pusha
push
push
loop,pn
loop,pn
push
data16
cld
popf
xor
sbb
mov
push
jae
in
ds
adc
fiaddl
shrl
pop
and
aad
jne
push
mov
jne
push
sbb
sbb
pop
test
cli
scas
push
xchg
mov
sub
push
jb
fildll
mov
popl
insl
jge
inc
inc
dec
mov
cmp
es
push
adc
ror
push
push
cmc
insb
push
lock
stc
mov
addr16
pop
out
cmp
cli
mov
xchg
sub
jb
push
ret
lea
xchg
push
shlb
movsb
dec
mov
lea
ss
push
xorl
inc
repz
sarl
sub
jne
adcb
xor
cmp
lods
sar
stos
pop
in
pop
out
leave
mov
push
sti
rcll
jmp
lods
pop
xor
jbe
sbb
ss
loopne
mov
scas
sbb
mov
jb
mov
int3
fcmovnb
clc
cmp
int
sub
addl
movsb
dec
xor
jbe
aad
push
inc
dec
xchg
xchg
mov
sahf
cmp
outsl
scas
mov
add
jo
movsb
dec
out
cmp
push
call
xor
leave
or
insl
fidivl
xor
pop
cmp
scas
mov
fldcw
jbe
arpl
push
sbb
stos
xchg
push
ss
sub
scas
vcmpsd
push
lods
add
out
sbbb
xlat
cli
mov
push
lods
add
call
mov
fidivrl
sub
and
fs
lret
cmp
mov
and
das
sbb
mov
xorb
fsubrs
pushf
mov
bound
testl
jmp
outsb
fmuls
int3
dec
sbb
add
dec
jle
mov
mov
das
pushf
mov
fcompl
pop
int3
je
fisubrs
mov
push
jp
movsb
enter
adc
mov
mov
jmp
xor
std
pushf
stos
pop
mov
scas
repz
inc
push
sbb
stc
mov
and
or
cld
dec
add
or
nop
cmpsb
fldenv
xchg
mov
int3
loopne
dec
sti
bound
ljmp
cmp
add
xor
push
movsb
ds
ja
in
xor
cmp
lret
scas
dec
xor
fdivs
in
bnd
pop
fwait
and
adc
cmp
sbb
mov
pop
int3
mov
out
and
sahf
fidivl
shll
popf
mov
push
lret
ret
add
mov
es
test
jge
je
sub
das
aas
mov
pop
add
test
xor
mov
int
notb
adc
push
out
imul
daa
stc
inc
in
jge
es
sbb
mov
outsl
jae
cmc
inc
or
enter
repnz
pop
clc
int3
cwtl
jo
test
adc
and
sub
adc
aas
mov
xchg
dec
inc
or
scas
mov
lock
pushf
xchg
lahf
mov
mov
and
add
xor
and
cmpl
std
es
and
scas
push
xor
gs
fisubs
subl
sbb
mov
xchg
sbbb
fcomip
mov
adc
rsqrtps
mov
pop
lds
inc
dec
pop
shrb
push
pushf
mov
sarl
loop
outsb
dec
cmp
or
mov
sub
in
ljmp
ljmp
sbb
adc
imul
fisubl
imul
push
pop
push
sahf
mov
cmp
xor
add
jns
jmp
mov
mov
sarb
movsb
shr
jle
imulb
bound
sbb
push
mov
or
jge
packsswb
fwait
mov
xor
scas
test
pop
ss
xor
push
fdivs
loop
out
push
pop
xlat
lods
pop
ds
and
fwait
mov
jmp
pop
and
adcl
fcomps
mov
xor
aaa
push
mov
out
lods
pop
mov
mov
sub
imul
sbb
mov
je
xor
fnstcw
jae
mov
xchg
mov
ds
dec
xchg
push
sti
cltd
pop
jb
loope
mov
mov
sbb
xchg
ds
xor
pop
mov
stos
mov
cmpsl
cmp
pop
fmull
cs
es
ds
and
mov
fildll
xchg
aas
cmp
aas
and
enter
fwait
pop
xchg
cmpsl
ret
lock
fsubrp
and
push
insl
add
jbe
loopne
xor
sahf
pop
adc
adc
cwtl
dec
test
lret
test
mov
and
dec
sbb
dec
push
ret
mov
inc
popa
xor
call
cmp
push
sti
cltd
pop
jne
in
loope
cmp
sbbb
stos
mov
shll
or
and
sub
test
mov
loop
nop
sbb
and
dec
sub
jnp
pop
xor
scas
xchg
scas
mov
scas
mov
dec
lahf
inc
dec
cmp
mov
scas
or
test
fsubp
dec
daa
dec
xchg
or
cmp
mov
jp
mov
xchg
mov
fiadds
adc
mov
mov
pop
shll
xchg
mov
cmp
jle
xor
xlat
outsb
aam
xor
add
outsb
push
outsb
dec
jecxz
dec
jnp
mov
jg
pusha
sti
lea
and
fbld
push
push
sub
loop
fcom
and
stos
stos
pushf
mov
daa
lock
cmc
jne
in
or
mov
xchg
or
lea
inc
and
cmpsb
and
repz
cwtl
fadd
sbb
int3
sahf
pop
cmp
mov
mov
mov
scas
xchg
cmp
jp
icebp
mov
jle
sbb
test
cmp
ret
pop
push
out
movsl
mov
push
jne
test
aad
cmp
out
hlt
shrb
push
jge
jnp
sti
pop
jo
pop
adc
lahf
repnz
inc
ja
jae
lcall
xlat
scas
cmp
inc
dec
xchg
mov
arpl
sub
shl
xchg
loopne
movsl
inc
push
mov
hlt
push
repz
test
movsb
adc
adc
add
or
push
out
mov
pushf
jae
cmp
test
ficoms
aaa
xor
leave
lock
jp
and
push
adc
or
and
inc
jecxz
mov
adc
js
pop
push
mov
sub
mov
sbb
adc
movsb
bound
adc
lea
pusha
sbb
adc
cs
outsb
cmp
adc
or
bound
adc
push
mov
or
pop
and
fsubl
adc
mov
ss
pop
mov
mov
aaa
dec
or
mov
loope
cmp
mov
insl
dec
cmp
adc
mov
push
test
sbb
adc
jge
sub
dec
sbb
adc
fstl
adc
push
cmp
xor
adc
movsl
je
add
cmpsb
xchg
cmp
adc
das
mov
push
scas
dec
sbb
adc
xchg
enter
sbb
adc
cs
inc
sbb
adc
adc
xchg
jnp
sbb
adc
jo
sbb
adc
inc
or
sbb
adc
sbb
adc
mov
jle
rolb
pop
lret
arpl
popf
sbb
jne
in
insb
sub
push
outsb
push
cmp
push
sti
gs
hlt
jnp
daa
sub
xor
pop
jae
pop
inc
push
movsb
mov
fstpt
loope
repnz
fidivl
mov
mov
add
mov
cmp
push
loopne
push
loopne
pop
stc
lods
inc
mov
sbb
mov
push
std
imul
call
arpl
or
data16
mov
add
and
and
xchg
jb
mov
sti
adcl
inc
mov
imul
movsl
mov
rcll
fisubl
or
jnp
fprem
lahf
pop
negl
fisubl
add
mov
pop
insl
mov
and
outsb
mov
xor
mov
push
inc
bound
insl
mov
lods
mov
inc
popa
xchg
jmp
or
pop
ds
loopne
cmp
xchg
lea
scas
shll
sbb
inc
mov
rclb
mov
insl
pop
lds
jle
cmp
nop
push
jg
in
outsl
ffreep
dec
pop
loope
xchg
pop
cmp
xlat
cld
mov
pop
fwait
or
fsubs
push
lods
cmpsl
cld
arpl
sti
push
mov
shll
cmpsb
sar
push
sti
push
clc
bound
insb
pop
out
cmp
leave
add
sbb
and
movsb
mov
xor
mov
nop
inc
loope
jp
out
push
cmp
xor
in
test
fcomip
out
imull
fld1
cltd
mov
inc
mov
ds
scas
pop
in
xor
movsl
je
mov
test
dec
out
shrb
scas
ret
orl
insb
xchg
mov
push
xchg
cltd
fildll
push
imul
cmp
sahf
out
sub
movb
jo
movsl
enter
cwtl
loope
pushf
scas
pop
jmp
xor
xor
sub
call
iret
push
sub
dec
daa
dec
xchg
lods
inc
pop
sbb
adc
scas
fsubl
adc
and
inc
nop
pop
sbb
and
jb
inc
test
adc
inc
sbb
adc
inc
sbb
mov
adc
or
mov
pop
sbb
adc
daa
insb
cli
jbe
sbb
adc
in
inc
sbb
adc
les
xlat
cmc
js
ds
fsts
inc
sbb
adc
lock
jns
into
aam
sbb
adc
push
mov
pop
sbb
adc
pushf
bound
adc
mov
adc
mov
mov
inc
sbb
adc
push
aaa
push
call
popf
repnz
lahf
pop
push
mov
sbb
adc
adc
lds
dec
sbb
adc
push
sbb
adc
test
adc
jle
sbb
adc
add
sbb
adc
in
push
sbb
adc
fmuls
sbb
scas
addr16
sbb
adc
hlt
pop
sbb
adc
and
jo
add
inc
xor
adc
dec
dec
sbb
adc
test
sbb
adc
ffree
das
mov
pop
mov
or
mov
push
push
pop
test
mov
fisubl
int
add
stos
in
sahf
add
mov
cmp
add
in
imul
shl
push
adc
int3
aas
mov
mov
in
sub
pop
sbb
adc
sub
xor
cs
jge
lahf
push
adc
scas
jmp
adc
jmp
cmc
movsl
in
insl
dec
xor
push
mov
jle
mov
in
push
pop
out
sbb
xchg
inc
sbb
mov
sahf
mov
gs
cs
mulb
imulb
jbe
nop
rcrb
popf
sbb
lods
cmp
xor
dec
js
pusha
push
adc
lods
scas
mov
sub
lea
imul
shl
xchg
mov
adc
test
cmp
lret
sahf
push
cmpsl
xor
sub
and
cmp
pop
cmp
jno
daa
inc
fidivl
xor
fidivl
mov
mov
push
repz
fimuls
fidivl
stc
addr16
int3
adc
fisubs
mov
mov
pop
mov
and
in
sub
ljmp
mul
lahf
mov
mov
scas
test
ss
xchg
shll
cwtl
shl
cmp
call
arpl
dec
in
push
ret
jge
cmp
std
std
push
xor
out
fsubl
out
lods
pop
mov
fstpt
and
cmp
es
inc
out
mov
push
clc
jnp
lock
mov
mov
sbb
fidivl
mov
aaa
out
dec
stos
cs
aaa
xchg
call
push
cmpl
and
xor
adc
aad
mov
push
fldl
sbbl
cmp
fnstenv
dec
repnz
jge
sub
stos
add
mov
inc
call
seto
dec
jne
fnsave
cmp
cmp
xchg
in
push
xor
xor
lds
cmp
cmpsl
xlat
lds
and
lds
lods
cmp
in
cmp
ja
mov
and
repnz
in
rcll
iret
je
or
add
loopne
or
add
loope
mov
loope
adc
cltd
call
aaa
xor
inc
pop
mov
outsb
mov
pusha
cmpsb
pop
jmp
sbb
add
and
or
mov
daa
aas
subl
sahf
push
xchg
mov
cs
add
dec
xchg
and
inc
enter
add
hlt
popa
mov
push
scas
cwtl
lods
or
iret
fstps
mov
inc
mov
test
mov
pop
pop
sbb
push
add
xchg
and
jo
or
popa
sti
dec
xchg
jbe
es
sbb
rorb
sub
mov
jbe
sahf
sbb
sbb
dec
aam
xor
jmp
test
xor
pop
mov
dec
mov
hlt
adc
xchg
add
cmp
test
sbb
pop
cmc
addb
xchg
cmpsl
push
dec
stos
cld
or
mov
ret
inc
and
test
movsl
std
mov
stc
mov
jnp
sub
lock
sbb
xchg
mov
shl
pop
xchg
add
push
pop
mov
rorl
add
mov
push
pop
mov
dec
mov
xor
xor
cmp
cmp
xchg
scas
mov
mov
or
mov
in
pusha
loope
int
fimull
out
push
cltd
loope
xor
xchg
or
adc
push
push
test
add
push
or
ja
aad
ss
rcr
sbb
aad
dec
testl
es
inc
add
xlat
jge
inc
sbb
adc
push
dec
sbb
adc
negl
bound
add
lret
fistl
pop
mov
fdivr
adc
daa
fisubrl
dec
sti
mov
and
shl
xchg
ja
sbb
adc
in
inc
push
add
pop
cmp
shl
xchg
sarl
cltd
mov
jmp
test
sbb
ds
mov
mov
jnp
stc
dec
pusha
sbb
push
ss
xchg
cmpl
rol
test
outsb
bound
imul
shrl
cs
push
push
movsl
cmp
sub
dec
cmp
cmc
loope
xchg
popf
int
outsb
add
dec
jno
lods
jns
xchg
push
enter
xchg
repnz
xchg
sbb
mov
les
lahf
ss
ficoml
dec
call
dec
and
out
dec
loopne
lds
xchg
mov
and
inc
loopne
cmp
js
mov
loope
jno
lods
jnp
fwait
lods
lods
inc
fnsave
pop
into
arpl
fcoms
test
and
mov
xor
xor
rorb
mov
loopne
test
inc
addr16
jbe
in
jne
call
outsb
sbb
pop
bound
dec
xchg
push
insl
out
or
repz
pop
out
dec
xor
decl
and
pop
mov
push
insl
pop
mov
cmpsb
dec
loope
pop
shl
xchg
shll
push
pushf
and
cmp
sbb
xchg
aaa
xchg
call
in
imul
in
aam
pop
mov
lahf
stos
arpl
lods
jmp
fnstenv
cmp
xchg
push
into
push
aad
mov
xor
push
in
loop
dec
gs
out
inc
aam
fs
lcall
jmp
aam
push
in
mov
daa
lods
fsubp
nop
lods
cltd
je
dec
out
call
inc
out
dec
sub
cmp
stc
mov
mov
int3
in
jb
sub
sub
test
fs
gs
movsb
jmpw
outsl
lock
insl
ret
pop
insb
lock
pusha
ret
push
mov
out
iret
loop,pn
push
xchg
lahf
in
and
scas
shlb
xor
adc
jno
shrl
dec
xchg
stos
fisubrl
js
push
test
daa
dec
xchg
cmpsl
cltd
jle
add
and
or
cmc
sahf
lds
mov
dec
xchg
cs
mov
outsb
mov
sahf
lds
push
mov
jmp
popf
stos
xchg
jne
push
or
xchg
fisttps
and
sarl
mov
fnsave
add
mov
and
inc
aas
sahf
add
add
dec
inc
sbb
adc
into
mov
sbb
or
scas
xchg
cmp
jge
pop
jb
dec
xor
mov
push
pop
bound
adc
roll
rcl
and
iret
cwtl
adc
adc
adc
lahf
pop
cld
inc
fbld
in
inc
les
adc
mov
test
cltd
into
andb
and
and
adc
adc
in
dec
lods
jbe
les
jbe
stos
push
jnp
test
add
pop
sbb
pop
adc
adc
das
lock
sbb
cmpsl
arpl
mov
clc
scas
xor
adc
xor
jmp
cltd
and
push
adc
les
call
cwtl
in
push
adc
mov
mov
jnp
shlb
and
stc
push
ret
dec
add
cltd
loop
lea
add
jecxz
mov
mov
pop
xor
lds
jns
xchg
repz
repnz
mov
xlat
add
mov
popf
sub
dec
insb
bound
sahf
sbbl
les
adc
xor
movsl
insb
sbbl
je
dec
adc
jo
shlb
popa
repnz
inc
rcl
inc
insb
std
mov
or
shrl
xor
sub
fdivr
xchg
and
out
sub
dec
cmp
enter
fidivl
lock
push
sti
xchg
rorl
push
std
inc
sub
mov
push
scas
popf
cs
sahf
popf
movsb
mov
fidivrs
pop
in
dec
ljmp
mov
push
cmp
push
scas
mov
xor
sub
xor
cmp
push
insl
fidivl
dec
xchg
popl
aas
xchg
and
imul
arpl
jb
cmc
out
mov
imul
xor
pop
call
clc
sbb
xchg
iret
nop
adc
adc
pop
repnz
fsubrl
sbbl
pop
adc
adc
and
leave
call
jbe
dec
xchg
in
cwtl
loopne
mov
mov
adc
adc
dec
out
stc
jo
pop
hlt
pusha
push
adc
shr
push
adc
movsb
pusha
add
loope
mov
or
push
mov
mov
into
nop
adc
adc
fnsave
into
xchg
adc
adc
pop
mov
rcrl
adc
pop
nop
adc
adc
push
bound
adc
adc
adc
push
bound
adc
adc
mov
or
push
add
adc
adc
roll
pop
add
stos
sbb
test
sub
pushf
test
push
mul
xchg
in
roll
ss
xchg
adc
adc
movsb
lods
mov
les
adc
stos
lods
popf
shll
push
adc
xchg
cmpsl
test
jp
push
out
cs
cmc
sub
fmuls
in
push
adc
cmc
cmp
rorb
push
filds
out
test
jp
ja
push
insl
xor
mov
dec
flds
cwtl
mov
lcall
adc
mov
sbb
pop
adc
scas
jmp
cwtl
or
mov
mov
xchg
xchg
xchg
test
pushf
push
pusha
and
pop
and
vmovntps
push
pop
push
outsl
pop
sbb
dec
repz
leave
cmpb
lods
xor
or
lods
sbb
inc
pushf
sub
das
cld
cltd
es
test
push
call
cmovae
inc
mov
mov
mov
psrlq
cmp
lea
stos
sbb
lods
jl
jbe
pushf
jge
sbb
sbb
mov
jmp
pop
or
scas
cwtl
inc
arpl
jg
sbb
adc
pop
or
dec
add
or
mov
sbb
adc
jmp
cmp
sarb
inc
ss
decb
sbb
adc
adc
jno
mov
scas
jo
xor
jbe
sahf
mov
sub
push
xor
js
daa
add
push
fmuls
gs
jl
xchg
lods
ds
pop
mov
and
jae
jmp
scas
fwait
call
sub
es
add
pop
cli
and
jl
loopne
sub
aas
fisubs
adc
cmp
pop
or
xor
xchg
dec
cld
xchg
andb
adc
xchg
sub
insl
roll
ja
cli
out
and
or
push
out
out
and
jecxz
push
cld
idivb
or
pop
lock
or
ss
in
sub
loopne
outsb
pop
es
mov
or
jb
test
add
or
sahf
mov
mov
sub
cltd
sbb
and
and
or
inc
cmpsl
push
xor
mov
mov
mov
fwait
mov
mulb
mov
sub
pop
mov
adc
cmc
push
adc
in
daa
cmc
dec
cwtl
into
sub
lods
call
jmp
and
or
lret
cmp
pop
ja
push
cmp
pop
jl
jne
inc
jle
dec
adc
pop
or
xchg
out
ss
pop
lea
mov
std
dec
imul
xchg
pop
outsb
xor
adc
pop
dec
xchg
mov
cmp
mov
es
mov
cs
push
out
in
push
push
out
add
or
sub
out
stc
adc
arpl
daa
dec
xchg
or
pop
or
aas
sub
or
and
push
push
lret
mov
jae
aaa
sub
mov
test
xchg
sub
fwait
in
sub
imull
int3
sarb
ds
ficomps
repz
mov
lahf
mov
roll
rorl
insl
push
push
lods
pop
mov
cmp
xor
cmp
adc
fwait
movl
lcall
and
or
sub
sbb
adc
jg
pop
or
arpl
push
lods
fcmovne
test
mov
mov
xchg
pop
out
xor
pusha
lds
add
push
aaa
and
or
popf
jb
xchg
mov
pushf
outsb
mov
repz
pop
adc
pop
cmp
imul
cli
mov
sub
xlat
lock
and
pop
adc
adc
movsl
mov
fs
jp
or
lcall
lcall
inc
testl
outsb
ja
pop
or
test
lds
push
shll
roll
outsb
jnp
xor
or
icebp
dec
xor
pop
or
sub
mov
or
xchg
daa
mov
into
pop
and
xchg
fnsave
ljmp
dec
fwait
and
or
ret
push
xchg
sub
subb
mov
aad
add
or
fsubrs
jp
ret
mov
pop
or
arpl
sbb
adc
mov
adc
adc
lods
cmpsb
lock
fnsave
lret
mulb
jae
fsts
push
in
mov
adc
mov
imul
sub
addr16
xor
mov
adc
adc
jg
cmpps
adc
adc
mov
test
mov
adc
jbe
add
adc
sub
push
pushf
adc
adc
fnsave
dec
xor
push
or
and
or
popa
dec
cmp
cmp
lea
or
xor
pop
fwait
mov
adc
roll
mov
inc
xchg
xchg
xchg
and
cltd
and
and
repz
and
or
xor
cli
or
or
adc
mov
add
or
shrb
push
or
movsl
in
jle
test
adc
cltd
in
push
repnz
push
out
mov
add
aam
xor
pop
or
xchg
sbb
repnz
jmp
mov
enter
inc
sbb
adc
aas
imul
pop
or
sahf
xchg
in
adc
shlb
add
or
pop
or
jecxz
ljmp
inc
sub
mov
repz
sub
rcr
in
add
dec
xchg
sti
push
sahf
nop
sub
adc
test
mov
pop
jae
sub
adc
jbe
sbb
aad
adc
loopne
das
cmp
imul
and
mov
in
shlb
shll
frstor
mov
popa
loope
outsl
movsl
stos
imul
cmp
popa
pop
dec
xchg
scas
mov
outsl
lea
in
mov
ss
sub
push
lea
mov
pop
int
fcomps
es
iret
cwtl
mulb
bound
imul
repz
aam
dec
xor
lea
xchg
test
or
pop
push
fistl
es
movsb
test
push
outsl
mov
or
push
xor
jo
sub
test
movsb
mov
pop
jbe
pop
aad
lods
fxch
fwait
lea
aaa
bound
push
lods
lods
lock
sbb
or
in
loop
aaa
aad
push
xlat
lods
pop
cmp
cli
mov
mov
mov
imul
fistps
aaa
adc
xor
mov
std
jne
xor
rorb
daa
xlat
mov
xor
lods
pop
cmp
test
push
gs
cmp
sbb
adc
adc
mov
xor
dec
xchg
pop
mov
or
mov
shlb
lods
adc
adc
test
xor
fnstenv
insl
pushf
mov
dec
outsb
push
insl
pop
add
pop
test
mov
or
out
cmc
push
or
pop
jecxz
sahf
xor
push
mov
fsubrl
lock
adc
mov
xor
xchg
sub
jb
mov
dec
dec
xchg
and
pusha
push
adc
mov
lock
adc
pop
jb
push
shll
mov
adc
add
and
out
lds
test
mov
or
xlat
push
lock
bound
fs
add
adc
cmp
mov
inc
or
xorb
adc
adc
cmc
lret
outsl
daa
sbb
scas
xchg
jl
mov
lock
adc
or
stos
push
insb
in
loop
lods
ds
aas
xor
sarb
ror
cs
push
pop
mov
aaa
iret
lds
push
adc
loop
mov
aas
mov
adc
outsb
xor
popa
push
adc
push
adc
sbb
ret
roll
bound
adc
out
cmpsb
mov
mov
and
pop
adc
int3
add
sub
cs
push
adc
mov
sarb
mov
adc
adc
xchg
mov
ss
xor
jp
inc
mov
outsb
pop
mov
jo
jb
and
rolb
mov
adc
scas
push
ljmp
dec
mov
pop
fdivr
out
adc
push
adc
mov
push
in
in
push
mov
adcl
cwtl
and
pop
jmp
push
adc
adc
push
adc
mov
and
call
sub
dec
lret
outsb
sub
inc
outsb
jnp
dec
jg
jo
js
call
imul
sbbl
faddl
push
out
push
adc
xchg
xchg
push
push
hlt
sahf
adc
xor
aas
ds
orb
mov
loope
xor
es
xor
add
push
cmp
xchg
or
out
push
adc
pop
popf
jg
dec
cld
push
inc
out
push
adc
xchg
xlat
and
cmp
adc
adc
or
stc
and
adc
sbb
push
adc
or
pop
pop
subb
ja
xchg
repnz
scas
dec
mov
mov
sub
incb
test
outsl
fcomps
popf
pop
jecxz
addr16
adc
adc
sub
pop
lea
inc
in
leave
clc
clc
adc
adc
jmp
addr16
in
xchg
add
popa
push
adc
clc
adc
adc
jne
out
clc
adc
adc
add
lock
adc
out
dec
xchg
push
nop
pusha
sbb
adc
xor
sub
xor
cmp
pop
repnz
in
loop
dec
fidivs
sarb
sarl
xor
cmp
and
push
lret
xchg
imul
fxch
mov
fmuls
sbb
fsubrl
sbbl
sub
push
jmp
stos
xor
ds
xor
pop
pop
mov
jne
push
pop
cmp
addb
fs
pop
pop
mov
jle
push
xor
mov
int
or
insb
inc
push
sbb
insl
push
sti
arpl
movsb
cmp
pop
jmp
cmp
fbstp
push
dec
mov
stos
jmp
cmp
addr16
dec
mov
gs
dec
sarb
fadds
mov
inc
dec
inc
inc
push
pop
xchg
out
pop
in
or
insb
mov
or
gs
mov
sahf
lods
sarl
into
and
dec
loop
test
mov
ja
mov
sahf
mov
sub
inc
cmp
pusha
push
add
or
shlb
aaa
mov
mov
push
mov
xor
adc
mov
mov
jb
add
in
test
adc
clc
push
mov
xchg
clc
imull
hlt
or
mov
adc
call
fidivl
and
xchg
or
mov
sbb
and
and
xchg
dec
and
stc
push
sarb
sbb
mov
mov
mov
jg
scas
cmpsb
jnp
jb
stc
lcall
inc
push
mov
mov
pop
sbb
add
stc
sbb
subl
push
out
or
scas
dec
stc
or
out
fbld
and
scas
adc
dec
insb
lods
enter
push
mov
daa
leave
je
sti
in
fldl
inc
sbb
mov
adc
outsb
push
dec
adc
popf
es
or
push
xchg
push
iret
xor
int3
jg
push
mov
pop
adc
sahf
xchg
and
loop
xchg
fucom
std
sbb
pusha
inc
jge
inc
fwait
jne
mov
push
mov
sub
popf
jge
push
shrb
push
add
cli
pop
xor
push
mov
inc
aaa
and
aaa
dec
cmp
das
repz
xor
inc
pop
rorb
lock
adc
push
popf
stos
es
xchg
enter
lock
adc
outsl
loopne
mull
mov
push
call
dec
iret
fstps
mov
outsb
sbb
leave
mov
hlt
mov
repz
and
xor
mov
push
inc
scas
fwait
aad
arpl
adc
lock
mov
push
jnp
adc
sub
sub
dec
jbe
mov
loopne
les
lods
jbe
jecxz
int3
pop
lea
fildl
out
into
cltd
loop
roll
cmc
jl
push
mov
test
add
cltd
sti
aas
add
stos
faddl
mov
dec
jae
imul
jno
sub
xor
xor
int3
push
jle
imul
cmp
push
mov
outsb
ss
mov
pop
mov
je
xchg
stc
add
sub
cmp
outsl
loope
sbb
and
push
cs
shl
push
frstor
imul
xor
mov
test
xchg
imul
aas
cmp
movsl
lea
lcall
fcompl
call
mul
fidivrs
or
push
out
aad
repz
pop
popf
mov
fnstcw
jbe
jmp
cmpsl
fmull
fldt
and
aaa
fldcw
and
adc
sti
aaa
insl
ficompl
lods
pop
mov
mov
ret
jl
icebp
in
mov
mov
shlb
insl
fimull
mov
xchg
xor
fisttpl
shrl
mov
insl
fimull
mov
xchg
add
fildl
pop
adc
mov
popf
xchg
in
pop
xor
push
sbb
sub
cmp
cmpsb
insb
fidivl
mov
pop
fsubr
cmp
xor
mov
jb
ds
push
push
aas
mov
mov
and
bound
fidivl
mov
inc
gs
cmp
push
mov
in
rorl
in
ljmp
imul
pushf
subl
sarb
es
mov
movsb
dec
xchg
movsb
xor
fidivl
mov
aaa
insl
fidivrl
sub
and
or
pop
mov
pop
jbe
rcll
sbb
pop
adc
in
es
pop
xchg
insb
fidivl
mov
adc
iret
mov
xchg
jno
push
rcrl
xchg
inc
rcl
cmp
das
pop
stos
pop
mov
xor
sub
scas
out
sub
loopne
dec
adc
aad
aas
inc
sub
jmp
mov
fadd
or
or
sub
imull
fnsave
lods
mov
aam
aam
icebp
fwait
hlt
neg
mov
fcompl
pop
pop
movsl
repz
mov
out
fldenv
sbb
push
out
mov
aam
jmp
cmp
mov
sub
dec
dec
jne
mov
stos
lcall
dec
and
lds
leave
mov
out
mov
pop
pop
mov
call
fsubs
out
push
addr16
in
push
in
sbb
push
mov
and
popa
test
iret
nop
popa
cmpsl
add
push
pusha
rcrb
lcall
or
outsb
nop
es
xchg
ret
cli
movsb
dec
xchg
test
test
daa
jmp
ret
mov
jne
into
loopne
int
dec
and
mov
out
push
mov
sub
je
out
sub
dec
popf
sub
and
testb
push
jne
xor
rcrb
in
loope
and
mov
mov
rorl
push
pop
xor
xor
mov
add
nop
xor
rcrb
and
daa
push
cmc
push
or
and
sbb
mov
pop
inc
jecxz
push
sbb
cwtl
pop
jge
and
add
adc
inc
loope
aad
aas
cmp
loope
in
and
std
jmp
mov
sub
xor
mov
and
popa
push
xor
add
jbe
mov
shl
xchg
xor
test
jmp
xchg
jl
arpl
fimuls
pop
in
inc
push
je
pop
loopne
test
inc
int3
bound
jne
cltd
inc
aas
or
sub
jge
and
xor
rol
cmpsb
sbb
pop
adc
pop
jmp
push
mov
sbb
inc
sub
or
xor
mov
jbe
out
sub
rcrl
push
adc
add
stc
and
inc
inc
outsb
push
sbb
inc
pop
sub
cli
aad
pop
lret
hlt
inc
mov
push
lret
add
push
std
dec
xor
push
out
ret
dec
xor
push
in
sub
adc
repz
sbb
xchg
xor
cli
scas
repnz
push
pop
mov
repnz
lret
ss
mov
in
pop
outsb
ljmp
push
sahf
shrb
pop
les
cmc
pop
shll
pop
jge
add
outsl
sbb
and
clc
hlt
add
mov
rcrl
lods
test
lcall
push
loope
mov
mov
nop
out
out
shrb
fxch
stos
rclb
sub
mov
adc
mov
lea
jae
movsb
mov
xchg
insl
shll
adc
pop
xor
outsb
jno
fidivl
cld
mov
out
mov
lock
or
xor
sbb
in
out
dec
push
nop
int3
adc
mov
dec
and
and
jno
lahf
jo
pop
jmp
stc
add
mov
fistl
or
xchg
or
lock
les
ss
push
call
rorl
pop
ret
repz
pop
jns
jbe
mov
in
data16
scas
fadd
pusha
adc
ljmp
insl
fstpt
jbe
push
outsb
pop
fwait
mov
ljmp
or
dec
ds
dec
xchg
pop
jb
and
rcll
xlat
lods
pop
cmp
jae
push
xchg
cwtl
mov
je
scas
mov
push
icebp
fidivrs
mov
adc
adc
sbb
sub
ljmp
push
lock
sti
in
outsl
cmp
cltd
stc
imul
cmp
fisttpl
insb
xchg
repz
xor
test
inc
push
or
fdivl
add
inc
dec
adc
pushf
es
call
mov
inc
pop
insb
xor
imul
inc
andl
repnz
mov
fisubs
pop
cltd
stos
je
aas
add
into
push
lea
sub
pop
lea
popf
cmp
insl
out
hlt
jmp
in
push
outsb
xchg
ds
xchg
imul
cwtl
adc
and
dec
jno
adc
add
adc
cltd
add
adc
add
adc
add
jl
dec
sti
jae
mov
push
pop
jno
pop
inc
enter
daa
pop
mov
jecxz
sbb
jb
cld
adc
adc
mov
cmpsl
loop
mov
ljmp
lea
pop
scas
jb
lock
adc
subb
adc
mov
leave
dec
mov
cmp
clc
push
dec
cmp
inc
xor
mov
and
pop
adc
std
test
cmpsb
call
ja
sahf
cs
jmp
mov
lahf
mov
mov
or
xor
stos
int
lcall
mov
es
sub
cmp
or
add
js
sarb
sbb
pushf
sbbb
or
mov
je
jmp
xlat
and
pop
lods
jge
sub
cltd
jne
mov
pop
imul
mov
out
push
sar
inc
sbb
mov
push
icebp
mov
adc
adc
mov
sbb
dec
sahf
aam
cltd
lahf
push
adc
inc
mov
lcall
lret
in
daa
jp
push
dec
mov
add
mov
push
repnz
in
sbb
stc
jae
adc
repnz
cmp
leave
imul
enter
jmp
jmp
iret
stos
addr16
lock
adc
pop
ja
and
push
xchg
or
push
cmp
xchg
ret
out
mov
adc
into
in
les
or
sbb
test
pop
adc
fdiv
push
adc
mov
fcoml
mov
aad
mov
push
xchg
pop
mov
mov
enter
lea
inc
push
push
pushf
cmp
inc
mov
aad
sti
xlat
lods
pop
adc
adc
adc
xor
and
mov
pushf
cmp
dec
ficoms
dec
xchg
hlt
stc
enter
pusha
jno
pop
shrb
cmp
cmpsl
call
leave
test
pop
jecxz
jecxz
ret
xor
push
mov
adc
stos
fnstenv
jb
lods
pop
mov
popf
loopne
adc
push
mov
and
pop
adc
loope
xchg
jno
jnp
outsb
push
cmp
mov
out
bound
push
lods
push
pop
test
adc
adc
jb
mov
add
push
add
push
enter
ficomps
adc
adc
mov
push
jecxz
bound
imul
imul
adc
sbb
or
mov
push
jne
ret
mov
or
pop
es
insb
adc
adc
fs
fdivs
ret
rcll
mov
or
mov
mov
push
adc
dec
cmp
and
pop
adc
insb
adc
adc
sbb
adc
ret
jecxz
sub
pop
adc
mov
xchg
out
mov
pop
adc
sub
sbb
or
pop
js
push
adc
xor
mov
pop
adc
ljmp
pop
adc
or
imul
adc
or
add
pop
xor
outsl
js
ret
pop
loop
mov
ret
adc
sti
mov
cmp
sub
je
cwtl
lcall
lea
repz
lea
bound
sbb
adcb
push
and
pop
adc
mov
mov
out
xchg
push
and
dec
pushf
lahf
push
sub
lret
ret
clc
mov
push
cs
imul
loope
mov
ret
pop
sbb
and
pop
adc
dec
fnstcw
pop
adc
dec
push
cs
mov
pop
adc
inc
xor
ret
mov
stos
pop
mov
mov
jl
adc
and
ffreep
fdivrl
and
test
push
scas
cmp
mov
push
aad
mov
dec
add
adc
dec
dec
stos
and
push
fiadds
ret
pop
adc
xchg
lods
xchg
vcmpeq_osps
pushf
sub
popf
mov
shrl
mov
aam
push
mov
pop
out
aam
pop
xlat
lock
aad
bound
mov
std
jbe
sub
sub
mov
mov
jp
or
shr
lcall
mov
popf
subb
shlb
fidivl
pop
inc
test
add
sbb
icebp
or
add
jnp
aas
cmc
inc
popa
add
out
outsb
push
mov
loopne
pop
testb
into
lret
or
inc
add
pop
adc
or
or
pop
adc
dec
pusha
outsl
inc
add
add
sbb
jbe
cmp
sbb
inc
ja
stos
jno
out
xlat
scas
outsl
xchg
fidivs
in
xor
ret
push
scas
jp
and
lahf
xor
test
mov
sbb
inc
xchg
inc
push
mov
jb
push
mov
mov
mov
mov
xchg
jbe
sub
pop
adc
enter
scas
push
push
ret
fwait
jno
inc
inc
mov
loopne
ret
push
shll
mov
push
pop
push
and
and
stc
and
pop
adc
enter
loop
test
adc
jmp
ret
mov
sub
xor
loopne
cmp
ror
jg
xchg
mov
adc
xlat
lea
ret
mov
lea
add
adc
adc
sub
mov
lret
bound
aam
push
mov
or
bound
mov
fs
test
adc
adc
sbb
mov
or
push
loope
jno
mov
or
in
addl
mov
or
mov
cmp
adc
adc
mov
in
bound
push
or
mov
or
pop
jb
mov
or
cld
push
push
pushw
adc
adc
adc
mov
pusha
adc
adc
cmp
adc
adc
xchg
fcoms
push
sti
mov
xchg
sub
jb
xor
or
xchg
push
out
sub
mov
ds
pop
out
test
cmp
in
lods
popl
sbbb
push
movsl
ss
sahf
es
mov
enter
mov
js
inc
and
lret
fs
and
pop
roll
test
test
stos
mov
adc
lea
pusha
mov
scas
in
insl
mov
adc
pop
mov
push
fadd
ret
push
das
lods
pop
imul
int3
ret
mov
fsubl
lock
adc
dec
pop
in
int3
adc
adc
add
and
in
int3
adc
adc
mov
adc
adc
mov
inc
je
stos
je
popa
sub
mov
sub
jne
mov
jbe
adc
jecxz
or
ds
adc
push
sub
mov
sub
enter
push
inc
and
cmc
cmp
cmpsl
jne
fsts
push
jg
dec
lret
inc
adc
xchg
je
leave
and
shlb
sub
es
mov
mov
dec
xchg
pop
inc
adc
inc
pop
enter
aad
dec
xorl
in
inc
sub
pop
push
das
mov
inc
popf
test
fldcw
xor
ss
mov
xchg
enter
rclb
or
popa
xor
int3
adc
cmp
or
mov
push
inc
scas
sub
int
mov
cwtl
pop
test
cmp
cwtl
adcb
and
daa
andb
xchg
adc
inc
adc
aaa
mov
aam
mov
call
stos
iret
data16
add
mov
or
mov
dec
pop
test
mov
fistl
popa
call
dec
pop
stos
aaa
add
and
sub
out
leave
xor
orb
inc
imul
add
mov
je
gs
sbb
in
mov
mov
or
sbb
add
lret
f2xm1
inc
inc
in
cmp
mov
das
cmp
std
sahf
jecxz
int
imul
or
push
cmpb
jnp
or
dec
push
add
std
mov
je
nop
push
movsb
dec
lods
inc
cwtl
xchg
add
sbb
daa
or
mov
fwait
jg
xor
jbe
mov
je
mov
and
into
ret
pop
dec
push
jo
mov
ret
mov
pop
adc
push
inc
bound
fdivs
sbb
inc
aaa
xchg
pop
cld
shl
int
dec
je
pop
in
popa
enter
mov
sbb
pusha
adc
shr
fiadds
leave
adc
xor
xor
mov
insl
fimull
es
shl
jae
and
dec
xchg
mov
in
mov
sub
loope
fstpl
in
sbbl
xchg
mov
dec
dec
xchg
push
lock
lods
nop
lock
xchg
test
popa
or
pop
and
sub
cmpsb
data16
jg
daa
or
outsl
xor
in
out
add
cmp
repnz
mov
mov
imul
lea
aas
repnz
es
xchg
jns
repnz
lret
test
mov
dec
dec
sub
and
cmpb
repnz
cmp
xor
inc
mov
sbb
push
jge
mov
inc
and
mov
dec
mov
test
jge
mov
xchg
outsl
mov
xor
into
scas
aas
repnz
icebp
dec
fidivl
iret
push
insb
lcall
jae
fistl
aad
std
mov
out
sub
dec
or
mov
mov
jge
cmpsl
xor
lahf
clc
ljmp
pop
adc
imul
aad
jmp
outsl
shl
inc
ret
fists
adc
popa
jg
shr
sarb
push
mov
std
inc
push
xor
xchg
pushf
ret
and
xor
es
lea
dec
push
rol
popf
and
inc
xchg
cmp
sub
scas
pop
out
jns
mov
jbe
sbb
adc
push
pop
or
mov
test
out
stos
push
inc
adc
dec
xor
sub
mov
lock
aad
and
cli
push
xor
mov
int
xchg
xor
loop
lcall
sub
addr16
jl
jb
mov
rorb
jne
test
mov
gs
jbe
dec
inc
mov
xor
dec
inc
das
cmp
loopne
repnz
mov
xchg
add
or
pop
ror
sbb
pop
fisubl
xchg
in
push
mov
shlb
leave
in
das
dec
out
aaa
fildll
fidivl
imul
cmpsb
pop
xchg
test
icebp
push
adc
dec
fisubs
add
subb
sub
lods
xchg
fiadds
daa
sbb
add
xor
and
insl
xlat
xchg
movnti
idivb
shlb
cmpps
int
cmp
add
sbb
out
sbb
imul
and
stc
in
je
mov
pop
mov
cwtl
sub
push
scas
push
int3
popf
push
aam
fisttpl
sub
mov
push
mov
push
sub
ret
inc
js
adc
mov
push
sub
mov
scas
mov
stc
lods
mov
rorl
xor
jne
inc
pop
test
mov
outsb
and
and
hlt
rep
jge
in
aam
sti
mov
test
add
iret
sub
xchg
out
into
push
imul
aas
insb
mov
hlt
mov
leave
inc
ffree
mov
mov
lock
ror
mov
dec
and
rcr
jmp
jmp
jo
or
cld
into
push
ret
pop
adc
xor
popf
fistpl
or
push
jae
loopne
shl
xor
loop
push
int3
mov
xor
mov
js
xchg
loope
je
mov
cli
sbb
dec
dec
clc
out
ret
xor
popf
repz
outsl
gs
mov
push
pop
out
lcall
sub
xlat
add
in
pop
pop
in
or
sahf
pop
mov
jb
leave
out
dec
loopne
mov
inc
jno
xchg
and
scas
mov
ja
mov
xchg
jae
lea
cs
xlat
lock
xchg
stos
mov
jmp
push
xchg
mov
pop
flds
fstpt
cmpsl
popa
inc
fnstcw
lcall
sub
out
mov
pushf
mov
pop
jmp
lds
bound
call
push
adc
scas
mov
sbb
xchg
pop
jmp
jb
cmp
lahf
popa
sbbl
dec
add
pop
dec
sbb
cmp
pmulhw
xchg
dec
call
popa
test
xor
cmp
outsb
push
cmp
mov
jnp
fdivs
jmp
and
mov
ds
movsl
dec
xchg
pop
jb
xchg
scas
lods
xchg
mov
cmp
adc
inc
and
movsl
shlb
dec
dec
sbb
dec
sbb
pop
frstor
dec
xchg
push
push
lea
xor
xlat
lods
mov
and
lods
add
scas
mov
pop
mov
icebp
push
adc
push
push
sbb
push
adc
fwait
or
mov
add
imul
push
xor
adc
xlat
lcall
hlt
mov
scas
mov
icebp
push
adc
adc
jo
shl
sub
push
adc
xchg
shl
push
adc
sub
add
dec
mov
dec
xchg
sbb
jle
dec
into
cmp
pop
out
mov
cmpb
bound
inc
out
cwtl
lea
inc
dec
lahf
gs
lds
xor
scas
fdivrp
inc
shll
push
or
stos
mov
lahf
dec
sbb
xchg
ja
rorb
in
mov
xchg
ss
add
xorl
js
cltd
pusha
sub
in
mov
rclb
and
push
adc
sarb
sub
jbe
stos
shll
adc
push
pop
sar
out
xchg
lods
int3
aas
sub
sbb
stc
movsb
dec
xchg
movsb
stos
mov
mov
jo
mov
add
or
inc
xchg
jecxz
xchg
fcoms
xchg
dec
mov
inc
leave
dec
ret
and
imul
call
lahf
cmpsb
push
mov
sub
ret
xor
inc
fwait
scas
sbb
pushl
cmp
rclb
fcmove
mov
add
sahf
fcomi
mov
aaa
sub
fs
jl
push
ljmp
mov
mov
out
out
in
or
pusha
adc
push
cmpsb
cwtl
mov
or
pop
int3
fldenv
lret
in
pusha
push
adc
and
adc
pop
sbb
dec
xor
mov
loopne
in
js
in
jge
mov
daa
xor
xor
mov
sub
shrl
setp
negb
or
std
jl
daa
fwait
sbbb
aas
jl
movsb
gs
mov
jecxz
sti
push
ret
mov
clc
xor
enter
push
adc
sbb
push
inc
cmp
dec
xor
sub
pop
andb
or
daa
in
jl
and
inc
and
xchg
in
jmp
les
ss
movsb
or
popfw
rcrb
scas
bound
sub
movl
data16
sti
xchg
pop
adc
outsb
mov
loopne
out
push
push
in
inc
mov
push
mov
outsb
inc
sub
mov
lds
push
adc
out
jle
push
call
push
ffreep
add
or
shl
push
sub
lods
jb
pop
aaa
cltd
add
and
fdivs
cmp
out
out
inc
das
out
pop
sarl
dec
dec
sbb
in
add
and
sbb
jbe
xchg
and
pop
mov
mov
sti
mov
xchg
push
xchg
pop
clc
xchg
sub
arpl
push
pop
rolb
mov
jns
lods
add
out
xchg
and
insl
shll
and
adc
nop
int3
movsl
dec
test
es
xchg
gs
test
insl
fidivl
xchg
sub
sub
loopne
mov
out
and
push
rol
pop
leave
lods
pop
fsubrl
test
insl
fimull
lods
xor
insl
and
ret
les
adc
cs
push
adc
and
in
push
pop
xchg
lea
mov
pop
test
adc
push
jb
dec
xor
mov
shrb
xchg
leave
xchg
xorl
sub
xchg
popa
mov
icebp
push
adc
daa
add
adc
loopne
insb
mov
add
or
cmp
push
subl
xor
cmp
jmp
mov
cs
insl
push
mov
lahf
xchg
shll
je
popf
cmp
xchg
jb
xor
dec
lods
xlat
movsl
pop
mov
pop
cli
mov
sbb
pop
mov
subb
in
mov
mov
mov
stos
loope
dec
test
mov
enter
out
mov
or
push
sahf
in
movsl
mov
rcrb
jmp
jne
fstl
xor
mov
xchg
and
sub
mov
xchg
mov
cmp
xor
cld
adc
adc
mov
sahf
xchg
adc
das
cmp
push
xchg
add
ss
scas
pop
stc
or
pop
ficompl
inc
push
add
mov
sub
ds
mov
loope
adc
xor
mov
jecxz
loop
sti
mov
sub
pop
xchg
es
scas
ja
test
cmpsl
aam
dec
xchg
daa
dec
adc
imul
arpl
mov
cs
mov
and
and
mov
push
mov
arpl
test
push
cmpsb
pop
stos
inc
jbe
popf
cmp
scas
out
sbb
stos
aam
test
mov
cwtl
mov
mov
dec
dec
jbe
repnz
lret
push
addr16
pop
mov
loope
pop
mov
dec
ljmp
repz
stos
sub
in
or
in
push
rcl
sub
pop
mov
pop
ja
pop
or
pop
scas
ror
xor
mov
pusha
xlat
inc
adc
icebp
test
outsb
xor
adc
adc
call
cwtl
cmp
call
dec
daa
sub
aas
pop
and
enter
and
shl
cs
jle
rolb
icebp
push
adc
add
fs
pop
outsb
pop
adc
fs
push
mov
add
cwtl
push
jp
fiaddl
sub
adc
aaa
add
flds
sbb
adc
mov
sbb
das
inc
mov
inc
sahf
cmp
push
mov
into
sbb
les
out
xor
or
daa
add
scas
jl
or
mov
sbb
xor
inc
mov
jl
or
lock
test
lea
pushl
loopne
or
xlat
popa
mov
popl
adc
sbb
adc
stos
and
jp
push
out
pop
push
std
repz
jbe
inc
lock
push
fs
and
jl
or
mov
shlb
jmp
cmc
lret
push
ror
mov
jl
or
loopne
stos
ror
in
push
das
movsb
in
mov
test
leave
and
popf
in
and
dec
sbb
pop
mov
adc
jmp
and
out
push
pop
fistpl
addr16
cmpsl
call
addr16
mov
dec
imul
pop
cmp
push
jmp
inc
or
call
cmp
and
sbb
fucomi
xor
sub
cmp
dec
arpl
xchg
sub
imul
xchg
push
or
bound
inc
push
ss
pop
jno
push
insl
das
mov
adc
clc
repz
jne
push
jns
sbb
jge
dec
popa
dec
pusha
ds
shlb
push
add
jbe
jmp
insb
push
xchg
call
pop
sub
jl
aaa
lea
outsl
xchg
sub
ja
ss
mov
shr
pusha
push
pop
or
or
test
es
xchg
gs
lock
jae
bound
imul
lock
insb
inc
dec
sbb
insl
jb
pop
xchg
xchg
loop
mov
mov
adc
pop
ljmp
es
fucomi
adc
rcll
scas
xchg
lods
mov
mov
push
cs
mov
xor
stos
xor
cmp
aaa
sbb
ds
ss
es
ret
jae
les
and
dec
inc
aas
pusha
sbb
pusha
ds
adc
push
xchg
dec
frstor
jecxz
mov
in
push
pusha
aam
pop
shlb
xlat
pop
dec
mov
xor
stos
fs
mov
movsb
cmp
hlt
inc
cmpsb
lret
xor
or
cmpsl
mov
dec
pop
data16
push
jmp
sub
out
rorl
test
xorl
shr
adc
movsb
out
fwait
sbb
jae
test
scas
mov
or
xor
sub
shrl
negl
adc
mov
enter
fildll
cmpsl
addr16
cwtl
scas
shll
push
push
pop
dec
das
dec
adc
out
fdivs
lds
xchg
jmp
and
addr16
sub
xchg
mov
inc
insl
pusha
ror
jno
pusha
push
adc
imul
aam
andb
inc
inc
lds
sub
add
mov
dec
push
pop
add
mov
addr16
je
pop
or
push
push
sub
mov
jbe
out
mov
outsb
cltd
std
in
loope
xchg
je
loopne
ljmp
adc
xor
sbb
xchg
cmpsb
cwtl
add
shlb
loop
aaa
sbb
out
fcoml
push
fldt
mov
add
in
scas
mov
sbb
xchg
stos
ljmp
popf
mov
xor
cmp
jo
or
xor
in
idiv
movsb
add
push
sbb
movsb
inc
dec
pop
in
mov
shlb
pusha
lds
insl
pop
shlb
adc
or
andb
pop
iret
xchg
cmp
div
jmp
push
loope
leave
lcall
or
orb
stos
push
call
adc
sbb
lret
sbb
sarl
or
add
jnp
popa
jb
lods
add
sahf
and
mov
lds
psadbw
rorb
flds
pop
in
dec
call
aad
xchg
sbb
sahf
cmovb
and
adc
int
pop
dec
call
push
or
pusha
xchg
scas
cmp
pusha
outsl
imulb
scas
data16
inc
cmp
call
insb
and
imul
cmpsb
xchg
scas
mov
dec
pushf
inc
dec
pop
mov
ds
rorb
adc
pop
or
xchg
pop
xchg
imul
dec
loopne
jno
fisubs
mov
pop
call
lock
in
mov
out
scas
xor
mov
lea
ficomps
dec
xchg
push
lea
mov
xchg
and
cmp
dec
shl
andl
mov
jb,pt
inc
jge
mov
mov
lods
pop
xor
mov
mov
xchg
jnp
jb
aam
push
adc
cs
dec
push
ficoms
andb
xchg
test
cld
mov
in
jb
mov
and
fsts
pop
push
pop
cmp
or
out
cmp
and
addr16
lods
out
stos
test
test
mov
adc
out
mov
or
sub
call
loopne
xor
push
or
ds
dec
inc
cmp
ja
fnstcw
shrb
ret
adc
insl
xorl
sub
popf
pop
mov
iret
dec
sbb
dec
sbb
out
jecxz
cmpsl
dec
loope
adcb
nop
sub
mov
xor
jmp
dec
out
sti
mov
lcall
lock
nop
dec
mov
jecxz
cmpsb
or
shll
into
xor
rorl
out
icebp
stos
fidivrs
cmp
jge
adc
adc
sbb
inc
xor
push
out
jno
out
popf
xchg
mov
dec
jmp
mov
sub
cmpsl
xor
cmp
or
popa
mov
and
and
loope
decl
sub
jecxz
cmp
xchg
jns
sbb
lods
inc
outsl
inc
fldenv
push
cmp
imul
push
mov
push
ret
xchg
add
or
in
pop
xchg
adc
loopne
sbb
push
dec
es
subb
adc
aaa
dec
imull
sbb
iret
clc
aas
jne
test
sbb
sub
lea
gs
testl
scas
das
push
mov
jmp
cmpsb
jmp
sbb
stos
inc
std
sbb
lods
dec
pop
add
sub
insl
sub
fwait
inc
imul
ljmp
push
mov
cmc
fcompl
cmp
mov
pop
push
xor
aaa
sub
cmc
scas
sbb
dec
sbb
cltd
adc
scas
sbb
and
dec
adc
dec
or
outsl
mov
fdivl
mov
xlat
aas
imul
adc
cmp
or
dec
insb
aam
in
data16
xor
pop
mov
jge
data16
push
lcall
mov
enter
ret
shrb
sub
int
inc
adc
pusha
sub
pushf
das
xchg
and
lea
out
sub
xor
call
loope
cmp
ja
pop
fdivr
insb
xlat
jne
js
aam
mov
cmp
dec
shl
fnsave
xor
das
movl
pop
or
subl
scas
xor
mov
shrl
pusha
jle
jbe
nop
inc
scas
dec
arpl
mov
cwtl
adc
sub
adc
push
sbb
addl
jb
test
jns
ret
dec
push
outsl
pop
out
stos
mov
jns
mov
mov
sub
adc
inc
push
sti
or
sahf
xor
ds
jle
imul
jb
pop
mov
jl
adc
lcall
jmp
sub
testb
mov
pop
and
lock
add
rcl
ljmp
mov
mov
fdivp
fs
loopne
mov
push
in
and
xchg
mov
adc
and
sub
mov
pop
xchg
push
in
sbb
mov
dec
xchg
sub
lahf
mov
mov
icebp
push
adc
call
call
xlat
mov
es
ja
fidivrs
push
pop
add
or
loopne
das
mov
fcmovbe
outsl
push
mov
xchg
popf
pop
mov
mov
fidivrl
insb
and
push
dec
fsubp
fbstp
mov
xor
andb
loop
dec
mov
loopne
imul
pop
iret
inc
xchg
ss
sub
push
push
in
pop
pop
dec
xchg
sbb
pop
xor
and
jnp
and
pop
ds
cmp
shll
aas
fisttpl
add
mov
xchg
sub
pop
and
mov
mov
test
xor
lahf
clc
adc
xlat
lods
pop
push
add
or
jno
call
insl
fidivl
mov
sub
cltd
aas
xchg
pop
aam
xlat
push
mov
adc
pop
mov
or
out
sbb
mov
decb
jmp
loope
xchg
mov
xchg
rclb
mov
outsb
xor
and
ret
gs
outsl
insb
shrl
scas
shll
int3
or
mov
ljmp
sub
adc
sbb
push
or
icebp
mov
out
loopne
in
cmp
adc
xchg
mov
and
dec
test
add
ja
and
jae
lods
xchg
ret
out
shll
mov
call
sub
call
bts
test
gs
jmp
mov
cmp
shrb
push
pop
pusha
push
adc
mov
or
push
sbb
xchg
addr16
mov
or
sbb
lret
sbb
xchg
jnp
imul
cmc
lods
dec
xchg
jle
jecxz
xchg
and
push
jp
loope
mov
xlat
in
xorl
scas
std
inc
push
shrl
push
or
es
inc
cmpsb
jb
test
bound
push
std
lcall
and
rcrb
pushl
add
xchg
cli
aam
iret
pop
jae
cmp
adc
test
cli
mov
lret
arpl
push
adc
push
scas
sbb
loopne
daa
daa
add
push
dec
mov
sahf
pop
mov
push
and
loope
mov
xor
or
jmp
repz
pop
ja
sub
imul
sar
fbld
sbb
outsl
pop
leave
lahf
sub
call
test
push
mov
lock
mov
loope
add
or
std
sub
aaa
inc
stos
push
sbb
notl
fsubl
mov
adc
fsubrs
movsb
pop
insb
xchg
mov
xlat
lahf
loopne
dec
test
inc
leave
add
or
jge
test
mov
shlb
inc
xchg
adc
sub
adc
xchg
inc
adc
orb
add
imul
incl
push
push
ss
sbb
fisubs
xor
push
pop
stc
pop
loop,pn
adc
jl
and
filds
push
adc
je
hlt
dec
or
dec
adc
pop
dec
adc
push
outsb
dec
int3
mov
inc
lea
fsts
mov
push
mov
aad
sahf
cs
mov
xor
sahf
jle
mov
addr16
shl
push
adc
fstpl
cmp
cmp
push
pop
daa
mov
sbb
or
push
bound
popf
push
ret
popa
push
call
sbb
adc
sub
inc
into
sub
xchg
push
sub
mov
scas
and
xor
xrelease
xchg
sub
arpl
push
data16
and
mov
in
and
test
cmp
pop
sbb
adc
js
bound
adc
mov
bound
scas
stos
cmp
out
sub
xor
leave
or
xchg
and
push
fildll
jns
dec
xchg
xorb
pop
jp
dec
xchg
adc
icebp
push
adc
mov
jbe
call
ror
and
xor
jmp
mov
xor
sarl
or
adc
adc
sbb
adc
scas
hlt
fwait
lcall
dec
pop
aad
pop
push
call
int3
jl
or
cmp
idiv
cmpsl
movsb
mov
adc
sub
push
movsb
out
int3
jl
or
aas
jno
repnz
dec
pushf
test
ss
push
lock
sub
dec
xchg
adc
jg
xchg
xorb
xchg
outsl
in
mov
fimull
cmp
stos
das
test
push
or
out
xor
lds
pop
sbb
insl
push
dec
pop
xor
insl
add
in
adc
adc
jecxz
mov
pop
pop
outsb
lods
movsl
daa
lods
mov
fcoms
lahf
ss
mov
pusha
push
adc
insl
push
lods
insb
out
jno
movsb
test
leave
mov
bound
lcall
pop
xor
lock
or
add
jno
shlb
dec
add
or
inc
jae
dec
insl
dec
popf
mov
scas
mov
test
cmovne
stos
pop
lea
mov
or
call
iret
inc
es
shlb
ret
and
ret
or
bsr
cmpsl
fwait
jg
sub
push
pusha
push
adc
in
xchg
or
mov
pusha
sub
jno
lret
aaa
push
adc
scas
clc
adc
lods
push
mov
jno
call
mov
cld
daa
lahf
mov
mov
mov
loope
xchg
in
mov
mov
inc
jae
and
sbb
pop
sub
inc
lock
push
adc
adc
or
jno
dec
ret
lock
pop
dec
pop
xor
or
fidivrl
adc
xor
pushf
xor
negb
pop
jne
xchg
xor
outsl
fwait
sub
mov
xor
cmpsb
scas
aam
imul
jbe
fistpll
scas
ret
outsb
lret
or
cli
cwtl
sarb
add
fbld
ss
mov
sub
mov
mov
insl
sti
mov
sub
das
add
xor
test
shlb
scas
fdivrp
add
or
push
pop
and
sub
push
mov
js
pusha
push
adc
repnz
adc
leave
lock
bound
mov
xchg
arpl
es
aas
add
pop
xorb
or
inc
cltd
pop
and
arpl
xchg
repz
stos
insb
mov
mov
add
or
xchg
push
je
sbb
std
cmp
add
or
fsubp
sbb
add
cltd
sub
call
jbe
xchg
jle
sub
out
or
or
mov
and
jbe
mov
push
fldt
add
gs
out
out
jae
out
mov
inc
cmc
gs
outsl
push
insb
cwtl
mov
add
mov
cmp
pop
aaa
cltd
inc
data16
mov
push
adc
aas
fistps
and
xchg
push
ss
push
pop
cmp
dec
xchg
xorb
dec
loopne
xchg
push
or
scas
pop
in
pushf
das
es
je
shrl
xor
xchg
xor
cmpsl
dec
fldl
sbb
cmp
andl
push
add
sub
rolb
push
or
cmp
push
test
lods
nop
daa
outsb
or
test
outsl
cs
dec
stos
fwait
mov
pop
fidivl
stos
repnz
dec
cld
xor
cmpsl
push
cmp
dec
cmpsl
dec
xchg
vprotq
pop
sti
mov
fildll
repz
mov
sub
jne
ficoms
push
adc
sub
push
cmp
and
add
adc
mov
mov
insb
bound
adc
mov
xchg
or
adc
adc
pusha
push
adc
sbb
add
adc
lods
pop
mov
fwait
cltd
gs
xchg
mov
rcll
fsts
sub
xor
sub
sub
adc
adc
shlb
inc
dec
sbb
dec
sbb
dec
sbb
dec
push
ficoms
push
lea
mov
das
scas
das
mov
adc
push
xor
xor
xor
lea
push
adc
adc
rorl
pop
xor
clc
dec
sbb
pop
mov
xchg
push
xchg
adc
or
into
push
fidivrs
sub
stc
push
loope
fisttps
pop
int3
loop
test
pusha
push
adc
repz
inc
popa
ds
adc
push
xor
and
xor
mov
hlt
popf
sub
add
sub
dec
aad
cs
or
xchg
adc
pop
sti
jecxz
cmp
inc
out
cmpb
sbb
fcomps
xorb
pop
add
adc
int
lcall
sub
js
push
adc
adc
pusha
dec
sub
jge
mov
bound
adc
addr16
jno
sub
cmp
dec
xchg
scas
xor
test
ret
subb
test
pop
out
loop
out
mov
enter
push
push
test
ljmp
push
addr16
jle
push
dec
std
scas
xchg
popa
mov
adc
cltd
andl
cli
sbb
cmp
cmp
insb
bound
adc
sti
and
rorl
push
aam
lods
sub
push
in
push
push
in
imul
popf
pop
jle
push
xchg
stos
xchg
cltd
sarl
pusha
push
push
aam
das
adc
pop
iret
sahf
jge
je
push
adc
or
pop
mov
fdiv
mov
jb
sub
test
mov
aaa
cmp
sahf
push
mov
adc
jbe
lods
jbe
lret
aas
ds
cmc
or
hlt
xor
loope
adc
xchg
stos
ret
mov
mov
add
loope
lods
xchg
aam
xchg
test
ja
mov
roll
jns
mov
push
loope
mov
rorl
pop
push
dec
fwait
dec
jg
cmp
call
imul
add
leave
in
jno
call
xor
pushl
stc
xlat
mov
sbb
popa
icebp
lcall
sub
repz
mov
stos
mov
cmp
cmp
imulb
xchg
jnp
jg
inc
out
insl
mov
jge
xchg
push
or
sbb
jmp
gs
gs
sbb
xor
repz
push
in
ficoms
sbb
das
inc
into
shlb
push
jmp
test
dec
mov
add
xchg
sbb
pop
mov
movsb
fstpt
mov
mov
xchg
sub
imul
cltd
mov
push
repz
jo
and
push
or
push
fnsave
push
es
je
aam
pop
mov
pop
ret
mov
fcmovu
imul
mov
sbb
fdivrs
ds
inc
cmp
shll
out
cmpsb
sub
pop
or
xchg
mov
lods
movsb
ret
cltd
and
popf
and
xchg
xor
mov
lea
arpl
and
push
mov
popf
lods
loop
movsb
shll
xor
fisubs
pop
mov
jmp
fstpt
f2xm1
fwait
out
cmp
jge
push
cmp
ret
xor
pop
rclb
mov
lock
mov
mov
insl
push
addl
dec
mov
and
dec
xchg
outsb
xchg
popf
mov
test
push
ret
lds
jae
inc
imul
push
test
ds
ret
pop
lahf
es
xchg
call
sahf
sub
cmp
sub
sub
lock
outsb
add
pop
push
xchg
push
repz
mov
sbb
ljmp
mov
mov
sar
mov
and
jp
mov
stos
jl
out
or
mov
pop
push
xchg
ret
aam
stos
sub
cmp
cmc
push
adc
dec
xor
push
sub
mov
push
pop
rcll
mov
lods
sbb
sub
push
cwtl
jbe
in
mov
add
add
scas
insb
cwtl
dec
loop
sti
lea
xchg
pop
xor
imul
pop
fldenv
inc
push
sahf
inc
test
scas
add
pop
push
adc
jge
mov
jl
mov
sbb
sub
push
push
imul
push
pushf
mov
cmp
mov
daa
movsb
jne
pop
push
mov
sahf
mov
mov
lcall
inc
insb
call
imul
jns
push
cmc
push
adc
add
pop
js
add
or
stc
push
fxch
rcrl
stos
int
and
out
adc
jae
dec
pusha
push
adc
idivl
mov
popf
add
or
inc
or
mov
sub
push
in
jg
sbb
lods
sbb
mov
adc
adc
repz
mov
push
adc
cmp
mov
fnsave
push
iret
jmp
xor
push
inc
mov
cmc
push
dec
push
adc
std
jle
imulb
insb
in
pop
mov
fdivrs
sub
xor
cmp
sub
scas
jo
sarb
cmpsb
ret
fsubrs
fiadds
test
sbb
fs
mov
je
cwtl
push
or
es
sub
es
scas
repnz
xor
and
sti
and
pop
dec
imul
mov
sbb
mov
xor
lock
rol
sub
outsb
mov
cmp
icebp
add
stos
jns
jb
into
je
push
adc
imul
mov
pusha
push
adc
mov
into
rcrb
cltd
add
hlt
out
inc
jle
out
pop
push
cmpsl
in
ror
roll
adc
outsl
jae
sub
adc
out
lods
sbb
jecxz,pn
fcomps
inc
imul
mov
fsubr
xlat
js
pop
shrb
jnp
in
pop
mov
inc
mov
mov
cltd
in
jge
shlb
push
out
ret
dec
pusha
push
adc
call
pop
mov
push
cmpsl
call
incb
outsb
or
sub
adc
cmp
xchg
sub
insl
adc
or
sub
push
sub
jns
popf
data16
xlat
ljmp
cmpb
fdivl
mov
cmpsb
xor
mov
ds
push
pusha
dec
xor
mov
adc
adc
mov
call
adc
sti
stc
xchg
sub
mov
in
in
xor
scas
cmp
push
sub
push
arpl
dec
mov
cmp
movsl
in
xor
pop
mov
jecxz
sbb
dec
pop
adc
or
inc
sbb
adc
adc
leave
push
test
or
pop
mov
fildl
test
test
cltd
les
or
add
xchg
and
or
call
cmp
cmp
cmp
out
stc
push
out
rolb
loop
outsb
ds
push
mov
jecxz
sbb
xchg
mov
dec
xor
shrl
sarl
insl
outsl
sub
or
mov
lret
jae
mov
scas
mov
iret
and
repz
shr
pusha
scas
test
or
rcrb
dec
mov
mov
popf
lret
jo
sub
cs
mov
pop
arpl
mov
shll
xchg
cmc
fistpl
popf
enter
subl
mov
push
adc
pop
int3
fadd
arpl
fs
out
push
mov
lock
or
mov
and
in
fwait
pop
repnz
mov
fisubrs
dec
sub
cld
mov
int
test
cli
imul
push
push
and
xchg
ficoml
dec
push
or
push
xchg
das
jmp
lods
or
sbb
leave
out
push
in
xchg
enter
push
cmpsl
cmp
cmpsl
and
or
pop
ror
fwait
stos
mov
aam
pop
xor
nop
andb
pop
or
cs
mov
addr16
mov
scas
scas
rorb
cmp
xor
je
mov
movsl
adc
push
add
and
enter
ret
sub
nop
lret
mov
adc
inc
or
aam
cmc
das
inc
popf
sub
or
adc
aad
imul
adc
add
or
xor
adcl
jo
xor
adc
push
cmpsl
adc
out
frstpm(287
std
in
in
scas
jge
out
pop
jne
stos
mov
sbb
push
and
pop
or
loope
jge
inc
xchg
inc
inc
xor
pop
pop
loope
mov
pop
xchg
cmp
mov
adc
fwait
loope
xchg
test
push
adc
add
je
fistpl
pusha
enter
iret
and
pop
adc
sbbl
xchg
xchg
andb
outsb
js
cltd
mov
and
adc
jb
adc
aaa
lods
jp
xor
pusha
push
icebp
mov
jne
mov
test
xlat
lods
ja
mov
adc
mov
out
cmp
divb
aas
andb
rclb
add
xor
push
inc
and
dec
adc
push
push
pop
cltd
pop
jb
jmp
cli
mov
in
in
repnz
popl
sbb
cmc
stc
pop
xor
push
adc
push
fistps
push
pop
add
mov
out
dec
adc
std
mov
rorl
and
dec
pop
sub
add
lret
aam
lret
mov
leave
xchg
loopne
addl
lahf
mov
popa
push
adc
xor
icebp
add
cmp
mov
cmp
data16
dec
xchg
pop
rclb
popf
push
loopne
jp
les
adc
sbb
popa
lds
xchg
pop
mov
cmp
xchg
xchg
movl
mov
jecxz
imul
inc
lahf
sbb
insl
push
in
arpl
shr
arpl
sub
insl
pop
aam
lahf
cwtl
icebp
mov
lea
ss
and
imul
aas
sub
cmp
cmpb
shrb
mov
sbb
insl
push
mov
adc
les
adc
cld
cmp
je
aam
es
mov
out
les
adc
test
les
adc
outsb
add
lods
xlat
lea
movsb
sarl
lods
push
lret
aaa
mov
push
lods
pop
mov
mov
insl
sbb
bound
ljmp
gs
and
insl
das
mov
mov
fistpl
pop
dec
fidivl
idivl
inc
lea
ss
xor
pop
lods
pop
jne
fildll
ljmp
in
and
imul
sub
pushf
aaa
insb
fistpl
push
push
leave
mov
pop
fstps
sub
xchg
lods
call
jmp
xor
mov
mov
repz
jge
xor
lods
bound
adc
rcrl
mov
aad
push
dec
push
clc
mov
and
mov
jbe
pushf
sbb
pop
dec
pop
mov
mov
inc
mov
push
fistpll
jle
add
les
adc
xlat
fildl
test
pop
adc
aaa
xor
push
in
sbb
or
or
in
imul
and
or
adc
xor
test
and
xchg
inc
shll
adc
inc
and
iret
lahf
cmp
adc
ljmp
pop
out
push
adc
jns
add
adc
cmpsl
sub
popf
or
imul
repz
dec
gs
test
sbb
adc
outsl
lret
into
adc
adc
add
sbb
dec
cld
scas
daa
insl
mov
les
adc
fcoms
or
xlat
push
movsb
xchg
jae
fcoml
cmp
push
adc
fcomip
repz
pop
push
sbb
mov
push
out
push
adc
std
rcl
mov
ret
int3
les
adc
sbb
fs
pusha
or
adc
ret
jno
in
push
test
sbb
jne
data16
pushf
int3
les
adc
shll
xchg
inc
cltd
xor
mov
pop
inc
cmp
adc
sub
push
add
inc
xchg
sbb
scas
cwtl
cld
idivb
shrl
lods
jbe
outsb
xlat
sbb
or
xor
stos
and
ds
jne
outsl
mov
subb
repz
sbbb
xor
jg
dec
adc
or
jmp
push
fsubp
mov
mov
inc
cwtl
hlt
in
mov
adc
mov
aaa
mov
push
mov
gs
popl
push
adc
jne
push
arpl
leave
sti
outsb
add
cli
and
xchg
cmpsl
stc
xor
and
adc
insb
in
pop
stc
push
adc
mov
sarb
xor
dec
inc
inc
sbb
sbb
into
test
push
test
adc
scas
or
test
lods
sbb
out
cmp
sahf
bound
adc
rep
outsl
push
movsl
stos
arpl
xor
push
repnz
mov
and
pop
dec
cmp
fdiv
test
aaa
in
pop
ss
icebp
lahf
dec
scas
and
pop
ret
frstor
sarb
pop
dec
xchg
es
lock
jle
fdivrs
adc
inc
out
xchg
jb
es
fisttpl
ficoms
je
push
adc
inc
in
jle
sub
xor
test
xor
test
sub
pop
loopne
and
push
loopne
cmpb
xchg
sub
pushf
mov
fnstsw
jne
adc
notl
test
ds
push
xchg
xchg
jge
out
fidivs
dec
xchg
hlt
shrl
or
pop
test
mov
lahf
or
lods
pop
out
cmp
fcmovne
sbb
fildll
fcoms
jle
pusha
push
adc
sbb
fimull
xor
clc
pop
leave
sbb
jecxz
adcl
pusha
push
adc
sbb
sbb
mov
add
or
cmp
sub
push
adc
cltd
jecxz
xlat
inc
mov
inc
mov
mov
xchg
or
xchg
scas
mov
push
adc
fsts
push
or
add
popa
mov
call
addr16
sti
jns
mov
fnstcw
outsb
xchg
and
repnz
dec
xor
cmp
jnp
pop
push
test
cmp
dec
xchg
adc
rcrb
or
xor
pop
adc
loopne
push
sub
lock
mov
aad
nop/reserved
jne
pop
ljmp
dec
sbb
and
mov
push
cltd
push
cmp
mov
pusha
push
adc
das
iret
cmp
les
fcoms
std
mov
jp
loop
jo
and
sbb
ss
into
push
dec
xor
xor
mov
mov
mov
push
sub
pop
sbb
push
in
movsb
push
jno
cmpsl
popf
xchg
popa
jbe
fisttps
outsb
movl
in
adc
dec
cmp
push
sub
dec
fstl
push
sti
xor
incb
mov
dec
push
sub
and
bound
enter
jp
in
sbb
cs
cmp
mov
repnz
lods
xchg
mov
push
push
stc
push
push
pop
sbb
loop
sbb
add
sbb
sbb
xor
lods
hlt
xchg
shlb
fisubrl
adc
out
jno
clc
pop
push
jne
test
adc
cli
xchg
test
cmp
push
adc
ja
scas
add
adc
flds
lahf
xchg
push
movsb
adc
adc
push
mov
mov
ljmp
push
adc
clc
hlt
pusha
push
adc
adc
inc
loope
test
add
or
in
scas
jl
les
pop
xchg
and
dec
jb
and
mov
sbb
xchg
aaa
sbb
popa
shrl
fsubrs
popa
push
adc
insl
cmc
lea
sub
dec
xor
ficomps
jl
lods
jecxz
pop
pop
adc
xchg
pusha
adc
adc
push
adc
pop
arpl
dec
int3
stc
mov
adc
out
mov
lcallw
and
icebp
rclb
jmp
iret
cmp
xor
in
sub
repnz
jecxz
adc
xchg
sbbb
rcrl
ss
stc
test
push
xor
push
and
pop
lock
imul
xor
dec
mov
ds
sub
mov
movsl
inc
mov
xor
push
std
jno
push
outsb
mov
repnz
xchg
xchg
mov
and
inc
pop
add
test
ja
xchg
cwtl
cmpsb
add
shll
into
push
cmp
push
or
sub
xor
push
lock
mov
inc
sub
movsb
loop
jo
leave
data16
sub
xchg
mov
es
xchg
rorb
pushf
lea
mov
xchg
gs
xchg
pop
jmp
in
xchg
push
cs
xor
push
cmc
pusha
and
icebp
xor
pop
lcall
jmp
out
pushf
dec
sbb
in
cmp
sub
fnsave
xchg
scas
dec
cmp
bound
lock
xchg
mov
sub
xor
sub
das
dec
cmp
pop
cmpsl
dec
xchg
rorb
popf
loop
mov
xchg
mov
cmp
cmp
xchg
push
dec
push
sub
mov
xchg
and
and
sub
sub
out
xchg
pop
jno
fstl
repz
daa
in
mov
xchg
pop
ljmp
lret
out
sub
dec
out
lds
fcoml
ret
xchg
mov
es
xchg
fstl
setbe
and
sbb
out
out
movsl
dec
call
loopne
cmp
dec
cmp
mov
dec
popf
int3
je
jno
mov
push
sub
cmpsl
out
fcoml
dec
and
sub
pop
sub
mov
fwait
cmp
int
lahf
lret
xchg
cmpsb
ret
xchg
xchg
dec
xchg
daa
ss
cwtl
mov
aad
pop
loop
pushl
int
xor
push
dec
loope
cs
mov
mov
push
and
xchg
mov
sub
xchg
inc
add
cmp
ljmp
xor
scas
inc
popf
filds
push
xor
mov
test
orb
sub
repnz
mov
test
mov
and
dec
push
sarl
and
push
mov
pop
push
out
fnstcw
sbb
aam
mov
fidivrl
shrl
push
movsb
sahf
mov
scas
xor
adc
pop
fwait
sti
out
in
pop
dec
shr
inc
sbb
dec
push
push
mov
imul
aad
pop
push
jae
mov
sahf
fcmovb
adc
ret
inc
push
mov
xchg
fdivrl
insl
jo
xchg
fnstenv
inc
imul
adc
inc
enter
scas
addr16
push
out
push
xchg
ror
add
or
xor
adc
test
lds
mov
xor
inc
push
jg
mov
xchg
data16
push
out
mov
mov
ja
dec
lret
bound
scas
aam
adc
adc
adc
jne
adc
int3
fwait
js
sbb
mov
xchg
cltd
and
and
inc
lahf
mov
lahf
sub
dec
push
xchg
xchg
imul
xor
xchg
cwtl
cmp
add
mov
xor
out
mov
movsb
lcall
mov
jne
jg
fwait
shlb
gs
out
iret
mov
pxor
es
int3
popf
fbstp
dec
and
adc
clc
inc
aas
inc
mov
adc
add
xchg
dec
js
imul
cld
xchg
dec
jne
pop
xchg
icebp
mov
sbb
jns
sbb
xor
xor
add
xchg
stc
pop
scas
inc
and
test
data16
pop
sub
mov
adc
hlt
dec
jnp
or
sub
inc
arpl
popf
sub
jne
push
test
sub
inc
xor
in
sbb
or
fs
adc
test
daa
lds
pop
ss
mov
ret
movsl
lret
mov
xor
jno
leave
xchg
and
pop
pop
lcall
call
adc
sub
or
sbb
pop
fistpl
xor
push
pop
add
sbb
test
push
xchg
sub
jno
fcomi
or
sbb
xchg
hlt
mov
in
push
mov
push
mov
or
fidivl
push
mov
pop
adc
push
ret
xor
call
adc
mov
fsts
adc
mov
xor
inc
and
xor
rep
pop
mov
mov
xor
aad
outsb
clc
mov
std
mov
inc
and
xor
shlb
mov
imul
pop
adc
sti
push
movsb
out
xor
jecxz
aaa
out
mov
pop
and
adc
jecxz
and
or
shrb
adc
sbb
pop
scas
stos
loopne
mov
aaa
inc
jle
pop
popf
cli
push
movsl
dec
pop
insb
adc
lcall
in
or
cmp
adc
mov
insb
adc
insb
xor
mov
push
shrl
sbb
inc
inc
dec
push
andl
mov
mov
test
test
imul
and
xchg
xchg
sub
push
sub
pop
mov
push
test
sub
push
pop
mov
stos
mov
enter
push
pop
repz
in
or
sub
cmp
add
adc
mov
cmp
fdivr
cwtl
push
loope
jmp
aad
ret
and
shl
stos
xor
rol
outsb
cmp
stos
pushf
pop
inc
mov
dec
in
mov
mov
push
sub
mov
sahf
fcomi
lods
nop
jb
cld
mov
sbb
push
outsl
mov
push
repnz
pop
aaa
push
and
and
sub
daa
and
cwtl
push
inc
imul
xchg
xchg
push
mov
mov
in
or
sbb
clc
mov
mov
adc
sub
loopne
or
enter
and
push
push
push
mov
js
pop
ret
fsubp
sarb
aad
insb
adc
or
mov
adc
insb
adc
and
pop
adc
mov
pop
adc
pop
ret
pop
adc
push
mov
addr16
push
push
lds
xchg
movsb
cltd
jbe
sahf
sub
adc
adc
add
loopne
sbb
scas
jb
jne
and
pop
adc
stos
dec
inc
in
ss
pop
adc
fwait
push
loope
popf
mov
mov
mov
ret
in
mov
scas
cmpsb
add
pushl
mov
shlb
adc
negl
jns
test
mov
and
test
loope
mov
inc
xchg
xchg
push
test
mov
or
ja
gs
or
mov
and
pop
adc
loope
cmp
adc
pop
adc
fstl
jge
dec
es
xor
pop
adc
lds
sbb
adc
test
pop
mov
aaa
jmp
cmp
loop
sarl
loopne
add
and
or
mov
xor
xor
adc
loop
fcoml
loopne
or
movb
mov
pop
adc
clc
insb
adc
xlat
or
xlat
in
xor
ljmp
sbb
jl
jb
fwait
jmp
in
and
mov
push
es
xor
mov
lcall
and
or
pop
test
pop
jmp
lret
jne
fcoml
xor
sub
pop
lcall
aas
pop
aam
pop
push
adc
mov
pop
insb
xor
dec
out
mov
fsubrl
cwtl
and
sbb
pop
insb
xor
dec
out
mov
fdivrl
fsubrl
cwtl
and
push
dec
out
test
fildll
inc
scas
dec
xchg
fstl
cmc
dec
mov
cmp
push
sub
dec
out
test
fildll
bound
cmc
inc
mov
ja
fsubrl
or
and
jne
jne
mov
jb
pop
pop
and
mov
mov
cmp
dec
pushf
int
xchg
jne
mov
ds
pop
out
push
movsb
mov
mov
cmp
dec
pushf
inc
dec
pop
cmp
xchg
or
xor
and
xchg
push
cmc
inc
mov
cmp
xor
cmp
xchg
or
add
inc
adc
and
test
test
dec
pushf
xchg
rcrb
and
mov
mov
cmpsb
cmp
pop
movsb
fmuls
mov
movsb
mov
mov
ret
popf
in
and
rcrl
outsl
dec
adcb
daa
inc
mov
hlt
mov
sub
in
cld
fcoml
and
pop
adc
and
pop
adc
xchg
scas
aad
outsb
jge
mov
mov
pause
inc
lahf
and
pop
adc
loopne
or
xor
adc
out
jo
xorb
ljmp
pop
and
dec
jb
xchg
decl
imul
and
int
mov
push
imul
mulb
lock
jmp
mov
outsb
add
hlt
or
subl
adc
call
sbb
insl
jnp
es
push
in
xchg
fs
rol
dec
sbb
or
fwait
cmp
adc
adc
adc
sarl
popf
xchg
mov
push
subl
push
jl
adc
popa
sti
mov
lret
data16
pop
dec
enter
adc
mov
push
aaa
mov
mull
lods
xchg
inc
dec
push
arpl
insb
cli
sub
mov
nop
adc
clc
xor
stc
into
add
jne
adc
sbb
lds
mov
std
in
push
dec
es
movsl
pop
ss
jnp
cltd
orb
sub
mov
sbb
outsl
pusha
add
pop
pop
jb
icebp
cmp
mov
or
pop
xchg
test
popf
adc
mov
ss
adcb
inc
inc
or
mov
push
lock
lea
mov
cmp
imul
je
insl
push
out
fwait
insb
testl
cwtl
inc
xor
push
adc
in
iret
xchg
mov
push
adc
mov
lods
stc
push
adc
ja
add
stc
push
adc
sub
stc
push
adc
push
test
movsb
stc
push
adc
into
jnp
adc
ret
fsubl
mov
loop
mov
mov
push
xor
ss
fsub
movl
fldt
hlt
dec
cli
ds
dec
ret
mov
hlt
pop
sarl
por
sub
xchg
lahf
mov
xchg
enter
test
icebp
bound
pop
inc
and
pop
fnstenv
adc
dec
out
aam
dec
loope
aam
dec
in
iret
xchg
and
lods
mov
sub
cmpsl
xor
mov
adc
ds
shl
xchg
cmp
mov
lret
or
xchg
push
xchg
fistl
push
scas
dec
mov
xchg
movsb
mov
pop
jbe
rcll
and
mov
test
mov
mov
sbb
xor
test
xor
xchg
sub
jno
mov
cwtl
cmp
or
shlb
js
or
rolb
jp
adc
scas
scas
popa
loopne
mov
fprem
push
movsl
jl
shrb
pop
adc
mov
push
xor
out
orl
mov
aad
pop
fildll
lods
pop
mov
mov
nop
adc
mov
cs
arpl
fnstcw
xchg
out
mov
adcl
popf
xor
sub
jae
mov
fadds
es
push
clc
push
cmpsl
js
xchg
push
divl
mov
fdivrp
shl
xchg
xor
and
out
fists
pop
jmp
adc
scas
stos
repz
dec
xchg
shrl
loopne
into
nop
adc
fsts
jo
or
sub
ja
xlat
lods
or
out
sub
dec
pop
test
shll
jle
lret
cmpsb
push
push
jecxz
xor
jns
adc
mov
xchg
cmpsl
ret
addr16
enter
adc
jb
push
addr16
mov
push
hlt
out
mov
mov
scas
insb
leave
pop
aam
cmp
jo
or
cmpsb
push
xor
adc
and
mov
adc
mov
dec
loop
pushf
mov
add
push
testl
adc
jo
or
jmp
push
js
or
mov
mov
mov
jge
adc
ror
jo
or
leave
mov
sub
pop
dec
aad
cmpsb
sub
adc
jl
adc
jo
or
sub
dec
xchg
daa
imul
movsb
dec
fwait
push
or
in
jl
or
mov
lea
pop
nop
adc
aad
adc
jo
or
sub
data16
inc
fwait
es
ret
jae
adc
andl
icebp
jb
mov
mov
adc
or
adc
mov
mov
mov
mov
pushf
out
xchg
adc
sbb
xchg
and
fstl
mov
rorb
test
jnp
push
mov
sub
out
repz
jb
mov
ret
jmp
adc
and
adc
pop
je
or
into
pop
lea
adc
in
sahf
ret
pop
mov
sub
mov
mov
fs
scas
and
sub
mov
push
mov
sub
cwtl
addr16
jg
sbb
fistpll
jo
mov
push
pop
icebp
dec
add
in
and
ja
or
adc
push
std
pop
mov
sbb
jmp
pop
aaa
rorb
mov
adc
add
popf
pop
sub
pushw
mov
pop
xor
cli
out
mov
addb
mov
adc
sub
ds
push
loop
push
cmp
jo
or
aad
xor
or
xchg
inc
je
or
aam
adc
sbb
xchg
cmp
test
pop
sbb
les
in
movsl
add
shlb
mov
pop
shll
stos
ds
out
adc
adc
mov
push
adc
jo
or
imul
adc
or
repz
and
adc
pop
inc
mov
jbe
js
adc
pushf
cmpsl
dec
loopne
mov
out
jbe
ss
je
or
imul
adc
out
into
adcb
data16
mov
cmp
adc
and
js
adc
les
call
mov
push
adc
jo
or
popf
adc
sbb
push
push
mov
repz
or
dec
in
mov
push
xchg
push
inc
pop
inc
mov
jbe
adcb
mov
or
xor
fidivl
mov
xchg
and
into
mov
mov
cmp
inc
outsb
jo
or
outsl
mov
adc
ds
adc
add
push
movsb
adc
adc
pusha
push
adc
nop
adc
sbb
adc
in
adc
cwtl
fldcw
stc
mov
and
mov
or
jne
adc
and
sbb
faddl
mov
xor
xchg
and
adc
adc
jo
or
mov
xchg
mov
ret
xor
hlt
sub
jo
or
movsb
cld
xor
adc
flds
mov
dec
xchg
dec
inc
sbb
adc
pop
cmpl
popf
sub
xor
inc
xorl
aas
ljmp
lods
mov
lods
lcall
jo
or
movb
adc
or
pop
fisubrl
mov
sbb
test
mov
mov
bound
adc
or
sub
and
adc
je
or
pop
fnstsw
adc
dec
sbb
jno
inc
aad
pop
lods
jmp
or
rcrl
lods
pop
js
or
inc
rcrb
mov
out
loope
push
test
and
sub
push
inc
stos
cmp
adc
lret
shrl
pop
stos
nop
cmc
sub
es
push
nop
adc
pop
je
imul
push
repz
test
jge
js
or
les
adc
inc
pop
rcrb
cld
xlat
mov
push
fisubrl
insb
mov
shll
sbb
dec
xor
mov
fldenv
inc
outsb
dec
and
inc
aas
adc
jmp
jmp
test
xor
sti
das
stc
fistpl
inc
jecxz
iret
popa
pop
cmp
outsl
les
adc
adc
xor
cwtl
cmp
arpl
inc
adc
mov
and
mov
and
add
adc
rcrb
pop
sti
or
cmp
mov
aas
fsts
jmp
aam
bound
adc
push
repnz
mov
out
dec
mov
fstl
adc
das
out
mov
imul
and
sarb
push
mov
popa
mov
and
dec
push
inc
pop
nop
mov
cmp
rclb
insl
mov
lods
add
sbb
outsb
cmp
test
jnp
imul
aad
or
sbb
add
pop
test
test
test
data16
ret
call
rorl
or
pop
std
inc
mov
xor
adc
xchg
sbb
xchg
cmp
sub
incb
mov
es
les
adc
aam
mov
push
mov
pusha
push
sub
ret
push
cmp
mov
xor
sub
push
add
inc
xor
aas
and
cmp
scas
fbld
sahf
fcomps
xor
test
rcll
pop
roll
pop
ret
ret
jle
xor
pushf
adc
pushf
adc
in
adc
cwtl
adc
shll
mov
sbb
sub
cmpb
es
out
mov
and
push
cmp
inc
lock
xchg
adc
xchg
adc
mov
mov
fstpt
ss
cmpsl
mov
inc
inc
sbb
insl
loope
push
rol
pop
pop
stc
mov
movsb
and
ret
pop
or
lahf
xchg
cmp
cmp
pop
ds
and
mov
mov
sarb
cmp
mov
mov
dec
push
lods
xchg
icebp
mov
mov
mov
lock
mov
push
cs
add
mov
aas
and
sub
das
adc
sbb
insl
pop
enter
inc
dec
sbb
sbbb
lret
lea
mov
gs
cld
xchg
mov
movsb
shll
add
shlb
rol
pop
dec
popa
mov
mov
xchg
js
push
std
xor
push
ret
outsb
pop
jmp
cmp
test
es
stos
andb
mov
fldcw
ljmp
or
sbb
dec
jg
pusha
push
adc
xchg
ljmp
adc
push
hlt
pusha
push
adc
sbb
pop
adc
stos
outsl
out
sbb
or
or
adc
es
insb
clc
pop
pop
adc
push
adc
xchg
movsb
adc
adc
or
lods
das
faddl
pop
adc
test
idivl
in
les
pop
adc
lods
xor
mov
or
dec
mov
or
cmp
je
aad
into
test
sub
push
cltd
jns
cwtl
in
mov
adc
jmp
xchg
adc
mov
or
and
jp
jns
int
pop
addr16
mov
adc
out
stos
jb
dec
stos
mov
inc
xor
adc
push
dec
rcl
sub
mov
aad
xchg
jne
mov
hlt
sbb
loop
push
outsl
bound
or
xor
inc
mov
mov
push
or
mov
dec
xor
or
or
lds
xchg
fistpl
popf
inc
push
cmpsb
and
xchg
xor
xchg
insb
sbbl
jle
popa
mov
sahf
push
popa
sbbl
pop
fcmove
jnp
pusha
push
adc
int3
arpl
aad
int3
push
lahf
adc
push
jo
test
xchg
push
lea
jmp
mov
pop
xlat
mov
push
add
movsl
mov
ds
stos
or
outsl
mov
orl
scas
les
or
cmc
pop
fiadds
das
push
stos
mov
sbb
adc
mov
mov
jp
jg
xor
adc
adc
ret
out
and
pusha
push
nop
push
jb
xchg
dec
push
jp
xchg
pop
popf
aas
inc
dec
cld
push
jb
sbb
dec
mov
sti
outsb
movsb
jle
frstpm(287
sbbb
adc
fchs
add
jae
pop
lds
sub
pop
dec
xchg
lds
push
das
cmp
mov
cmp
imul
es
pop
pop
andb
jne
loope
sbb
outsb
xchg
xor
ret
pop
xchg
insb
dec
es
fstp
push
xor
les
xchg
add
or
fstpt
inc
dec
pop
js
cmp
sub
pop
dec
pop
xor
push
inc
pop
xor
mov
xchg
test
or
adc
stc
pop
sti
cmp
fucomi
repnz
scas
cmp
das
push
jnp
xor
cmpb
fisubrs
dec
cs
cmp
cmp
push
fnsave
lahf
clc
adc
cmpl
and
dec
out
mov
adc
mov
into
and
adc
cmp
xchg
shl
xchg
test
adc
sahf
xchg
arpl
jl
or
xlat
xor
cmp
loop
lods
fnstenv
pushf
fsubrs
out
xchg
imul
icebp
loopne
mov
pop
sbb
test
insl
cltd
loopne
cmp
mov
out
mov
cli
jmp
pop
bound
cwtl
stc
xchg
push
shlb
mov
xchg
push
push
lcall
push
daa
xchg
xchg
lods
dec
shr
cmpsl
or
fwait
mov
cltd
fdivrs
fwait
xor
sub
sbb
sahf
push
rcrl
pop
xchg
pop
dec
pop
shll
dec
aas
jns
pop
imul
aas
test
jno
das
roll
sbb
loope
das
mov
loope
movsb
push
add
in
push
ret
aas
xchg
push
dec
pop
xor
pop
push
cmp
cwtl
pop
sar
push
sbb
mov
xor
daa
lret
aaa
xchg
nop
pop
mov
ds
into
xchg
push
notl
and
cli
sub
and
pop
jb
fisubrs
loop
insb
leave
punpckhwd
leave
jle
push
mov
frndint
mov
sub
insb
push
out
out
xchg
mov
add
in
decl
mov
imulb
mov
in
add
icebp
sub
push
iret
mov
add
lods
sbb
mov
lods
jo
inc
or
inc
sahf
loope
inc
inc
lret
fidivl
and
out
and
push
push
cld
inc
shl
fdiv
outsb
push
inc
jmp
bound
ljmp
mov
jbe
sbb
scas
pop
mov
jbe
xchg
cmpsb
loop
rol
inc
sub
xchg
mov
xchg
jge
mov
rorl
bound
in
mov
cs
jb
push
stos
cmpsl
popf
sub
and
ret
jno
xorb
fstpl
lods
dec
push
pop
ja
add
test
js
pop
adc
fidivrl
xchg
sahf
ds
imulb
mov
nop
lds
adc
push
rorl
adc
mov
pop
call
leave
xchg
sarb
pop
outsl
repz
sbb
or
std
xchg
mov
mov
fistpl
mov
xchg
dec
xor
pop
lahf
sub
xchg
pop
js
xor
or
inc
pop
ret
insb
sarb
mov
insl
es
and
ret
adc
mov
in
fwait
insb
jl
call
add
shlb
xchg
push
mov
mov
sarl
push
test
ret
cmp
push
jl
dec
dec
mov
xor
sbb
pop
add
xchg
incb
add
xchg
jo
leave
out
fistpll
lea
sub
in
jb
xchg
add
add
in
nop
inc
pop
push
push
cs
xor
pop
loopne
inc
stc
repnz
push
leave
stos
mov
mov
jecxz
aam
sub
call
lods
inc
cmp
lret
insl
fwait
enter
sub
mov
jno
inc
or
cmp
sub
in
hlt
dec
adc
addb
ljmp
lock
shlb
jnp
mov
outsb
movsb
push
or
arpl
gs
in
outsl
pop
mov
cmp
into
push
mov
and
dec
loopne
insb
mov
lods
cmp
es
mov
xor
lret
pop
movsl
shl
outsl
pop
je
push
lods
xor
pop
jb
sub
pop
mov
fwait
mov
in
jmp
mov
ja
mov
out
cmp
arpl
test
sahf
bound
das
mov
out
mov
nop
lret
ror
ds
dec
mov
pop
fmuls
adc
aas
sub
mov
shlb
lret
pop
mov
ds
jb
xchg
pop
loopne
xor
xlat
cmp
sub
out
stos
add
mov
xchg
outsb
imul
pop
lret
out
fwait
sbb
ficomps
mov
xor
cs
mov
adc
adc
fistpll
in
jno
dec
mov
lods
jns
cmp
lods
pop
mov
data16
test
mov
rorl
mov
fists
imul
xlat
mov
mov
adcb
shlb
pop
lahf
movsl
xor
outsb
fnstenv
inc
cmpsl
sar
sbb
sbb
sub
sub
pop
mov
fidivs
movsb
rcrl
sbb
add
sbb
mov
mov
mov
addl
mov
imul
bnd
mov
movsb
jb
test
lds
mov
sbbb
gs
pop
push
in
push
out
dec
mov
push
mov
mov
movsb
fistl
stc
stc
cmpb
pop
and
pop
xor
and
lods
mov
sbb
mov
pop
lods
xchg
jg
scas
pop
mov
bound
dec
inc
sbb
adc
fneni(8087
imul
or
imulb
cli
pop
push
jbe
jns
pop
push
addr16
lds
into
imulb
mov
mov
fs
es
test
fs
mov
shrl
stc
das
fld
lret
sbb
mov
aam
push
adc
and
push
adc
sbb
pop
xchg
data16
and
in
sahf
mov
mov
loopne
and
or
icebp
add
xchg
inc
data16
mov
int3
mov
stc
sub
and
ret
xchg
xor
dec
xor
call
cmp
inc
gs
xchg
add
or
sub
xor
mov
lods
sti
lret
sahf
je
ret
sahf
popf
mov
hlt
cmc
movsb
push
jo
mov
out
gs
mov
xchg
mov
push
mov
jb
movsb
adc
lahf
std
or
or
or
jne
pop
jecxz
mov
mov
inc
inc
pop
fiaddl
xchg
in
pop
dec
inc
aas
mov
push
mov
push
in
or
mov
dec
cld
aaa
jbe
ja
std
xchg
je
jge
imul
and
and
mov
mov
push
push
xchg
jb
mov
mov
or
mov
sub
cmp
mov
cmp
out
dec
arpl
sub
sbb
xchg
dec
test
adc
lcall
and
cs
inc
xchg
push
testb
icebp
test
xor
movsb
cmpl
insl
pop
ss
fstps
ss
neg
imul
scas
andl
fwait
sbb
insl
xor
and
push
roll
inc
insb
iret
jb
cs
pop
mov
sub
cmp
cs
or
fdivl
fidivl
out
mov
ss
roll
cs
push
adc
dec
mov
mov
scas
cld
push
fidivl
jbe
xor
ljmp
inc
sbb
xor
pop
push
out
push
xchg
pop
mov
stc
add
xorl
movsl
dec
lods
mov
push
sub
in
mov
arpl
dec
pop
ret
mov
cmp
xlat
lods
pop
mov
sahf
mov
fidivl
mov
sarl
mov
and
repz
int3
and
mov
adc
imul
fisttpl
sbb
ss
scas
push
inc
vcmpsd
insl
fidivl
mov
ss
fisubl
dec
loopne
cs
dec
push
and
ja
out
sub
pop
mov
das
fistpl
xchg
pop
xchg
push
outsl
mov
push
lods
shl
fs
cmp
imul
pop
cmp
sub
cmpsb
ret
cwtl
sub
dec
dec
jnp
pusha
push
adc
sahf
loop
sbb
stc
movsb
cmpsl
pop
pusha
push
adc
mov
push
dec
andb
cmp
sub
add
dec
outsb
mov
xchg
push
insl
pop
pop
push
iret
pusha
pop
out
stos
mov
adcl
inc
popf
push
negl
test
pop
sbb
jne
dec
imul
aaa
cmp
sub
mov
test
mov
mov
push
nop
cmpsb
shrb
jmp
jl
std
nop
adc
mov
sub
stos
push
imul
lea
test
sub
dec
sub
data16
pop
enter
push
mov
cmp
mov
mov
xchg
stc
pop
int3
jecxz
int
sbb
mov
jo
aam
dec
jg
jmp
mov
cli
jns
push
loopne
int
rorb
pop
insb
pop
movsl
hlt
cmpsb
inc
sub
push
adc
cmp
mov
in
aad
pop
sub
push
mov
mov
ret
aad
icebp
xor
or
adc
out
rorl
jbe
mov
inc
jae
pop
jae
pop
add
fidivrl
dec
pop
xor
push
out
sub
jp
xor
mov
jne
sbb
jmp
sahf
pop
add
out
popf
or
adc
call
or
adc
ja
int3
adc
in
enter
mov
push
push
in
call
push
adc
push
adc
cmpl
push
adc
push
mov
jbe
scas
sarl
into
cmp
cs
jl
lock
xchg
dec
pusha
push
adc
pop
in
sbb
cwtl
sbb
shll
jb
clc
inc
lds
pusha
and
stos
jecxz
scas
lods
bndstx
adc
fistl
rcrb
push
insl
mull
sti
xchg
roll
lock
in
and
ret
mov
shlb
pop
sbb
push
adc
lds
add
xor
data16
je
sub
cmp
sub
aas
test
pop
leave
xor
push
out
dec
xor
daa
or
inc
imul
adc
lods
vpshab
jno
cmc
loopne
mov
cmp
mov
mov
adc
je
mov
das
test
add
inc
mov
sbb
jecxz
mov
pusha
push
adc
lods
aam
scas
pop
call
mov
jge
push
rcl
sbbl
repz
xchg
and
jno
jne
adc
mov
push
imul
dec
pop
sub
shr
mov
inc
push
scas
push
sbb
cmp
int
or
shlb
outsl
in
push
push
adc
xor
cs
sbb
pop
and
ja
rorl
pushf
dec
enter
fst
ljmp
push
movsb
dec
cmp
dec
sbb
dec
push
lret
dec
pusha
push
adc
adc
jae
sub
dec
xchg
scas
cmpsl
cmp
lea
jle
pushf
inc
dec
pop
shlb
imul
pushf
pusha
and
xor
inc
push
mov
mov
repz
and
xchg
cmp
push
inc
in
xchg
and
pop
ret
fidivs
pop
adc
fisttpl
cmc
jb
in
jecxz,pn
rclb
cli
or
xchg
into
les
adc
sbb
arpl
rclb
js
pusha
push
adc
mov
pop
rclb
insl
jnp
adc
pop
shlb
and
mov
mov
pop
scas
fidivl
mov
in
pop
gs
movsb
push
test
sub
leave
xor
lods
cmp
sbb
pusha
push
adc
sbb
cltd
popf
pop
out
stos
pop
cmp
and
stos
fbstp
mov
pop
pop
les
or
or
mov
or
mov
xchg
xor
cmp
mov
inc
push
das
and
inc
sub
inc
adc
push
lods
sbb
dec
sbb
push
ja
das
sbb
sub
mov
sub
inc
push
movsl
decb
out
jo
push
mov
mov
jne
stc
stc
cwtl
fmuls
xchg
push
je
push
adc
das
sub
sqrtps
inc
dec
and
pop
aaa
dec
das
mov
and
sub
and
sarb
scas
pop
jns
push
jg
adc
sarl
int3
push
push
adc
out
and
or
jle
mov
andb
into
imul
mov
lahf
sub
xchg
adc
test
popf
sub
and
test
jp
sbb
pop
stc
call
jne
dec
aas
in
xor
and
fcmovb
and
mov
bound
adc
push
inc
add
scas
sbb
insl
mov
sbb
sbb
dec
adc
push
add
xor
add
sub
add
pop
cmp
sub
xchg
adc
sub
xor
inc
cmp
and
cmp
xchg
stc
mov
xor
sub
xchg
add
add
mov
testb
cmp
mov
js
push
adc
aad
mov
mov
push
mov
mov
cmp
int
iret
ror
scas
or
iret
push
movsl
clc
xor
sub
pop
popf
or
dec
icebp
fisttpl
mov
mov
test
mov
or
inc
mov
scas
push
lahf
or
stc
test
in
call
push
push
sbb
out
add
and
xor
xor
jge
jle
sub
cmp
sbb
xor
arpl
loopne
fxch
sub
push
inc
inc
xlat
sarb
and
stos
mov
int
mov
cwtl
mov
sub
cltd
fidivl
in
pop
mov
out
scas
movsl
popf
xchg
ljmp
lock
lcall
bound
fs
mov
shrl
mov
shl
cmpsb
push
xor
aam
pop
dec
dec
pop
rolb
push
adc
and
sbb
out
fbstp
mov
in
mov
ret
pop
adc
pop
fsubrl
hlt
outsl
xchg
sub
fnstcw
mov
mov
fidivl
sbb
pop
mov
gs
jle
insl
mov
xor
push
push
push
sub
push
adc
push
ret
pop
adc
sub
pop
jecxz
mov
xchg
jmp
jmp
sub
repnz
dec
ficompl
ss
pop
dec
cs
fimull
fldenv
adc
mov
imul
pop
pop
aad
lea
jns
rcrl
lods
pop
xor
ss
loop
jecxz
dec
xchg
and
pop
adc
in
xchg
pop
dec
pop
fldcw
cmp
test
dec
xchg
and
sub
imul
mov
loopne
inc
add
and
push
jne
inc
pop
dec
sub
cmp
pushf
mov
sbb
cmpsl
dec
out
aad
in
push
push
ret
pop
adc
repnz
imul
cmpsl
jg
push
icebp
pop
call
mov
js
push
test
ret
mov
bound
lock
pop
pop
pop
pop
mov
dec
sub
imul
aam
dec
xchg
push
push
les
xor
push
push
jb
call
mov
inc
fwait
lods
jecxz
xor
out
mov
xchg
popf
sub
movsb
subb
sub
leave
xor
int
mov
mov
dec
sub
dec
adc
dec
mov
sub
fs
or
pop
popa
ds
in
loope,pt
decl
in
adc
aam
sub
adc
and
int
pop
repnz
scas
mov
lret
inc
push
adc
sbb
leave
push
mulps
adc
xchg
push
push
pop
or
cmpsb
or
test
push
popf
mov
mov
xchg
and
outsb
adc
popf
scas
scas
cltd
ss
mov
jne
stos
xchg
inc
jmp
filds
punpckhbw
inc
ret
popf
xlat
movl
test
cmp
arpl
movhps
sub
inc
jns
mov
insl
mov
out
push
pushf
sbb
mov
jmp
lds
inc
and
clc
pusha
push
popf
push
inc
stos
lea
pop
dec
fidivl
sar
pop
xor
inc
jecxz
stc
and
ficomps
pop
scas
pusha
xor
push
pusha
push
cmpsb
adc
sub
push
cmc
or
mov
aas
push
mov
loopne
ds
xorl
stos
and
push
xchg
insl
fidivrs
adc
sub
and
lahf
loopne
adc
jo
test
adc
dec
adc
push
mov
cmp
sub
and
and
sub
popf
test
mov
cmpb
cmpb
pushf
ds
fwait
xor
js
inc
adc
test
lds
push
cli
movsb
sbb
out
mov
add
push
or
or
inc
jbe
push
push
xor
rolb
fldt
inc
cmc
mov
push
dec
ss
movsb
jmp
add
adc
add
adc
add
adc
push
adc
add
adc
push
adc
add
push
adc
push
adc
nop
fiaddl
es
push
roll
or
scas
mov
lea
xchg
and
sub
fmul
sbb
push
das
mov
ret
gs
xchg
stos
mov
das
pushf
lods
out
clc
sbb
xchg
and
fnstenv
mov
cmp
lea
int3
adc
adc
mov
nop
xor
rorl
mov
pusha
push
adc
or
cmp
mov
cmp
and
pop
dec
pop
lcall
pop
and
pop
mov
xchg
add
dec
enter
xor
lods
fbstp
rorb
sbb
ret
ret
xchg
xor
outsb
sub
cmp
cmp
fdivl
out
mov
xor
notb
test
mov
and
mov
call
out
xchg
addr16
mov
sub
lds
jbe
push
loope
and
push
outsl
adc
ds
repnz
fwait
mov
xchg
and
out
pop
mov
pop
ljmp
and
push
xor
gs
lock
dec
popf
inc
dec
push
mov
scas
mov
xchg
movsb
repnz
ljmp
jo
mov
lcall
pop
push
js
and
ror
insb
adc
inc
cmp
push
adcl
jecxz
outsb
mov
mov
adc
in
mov
mov
cmp
cmp
fsub
cmp
jp
ja
mov
mov
shll
insb
sbb
imul
pop
jmp
push
out
out
xor
sarb
mull
int3
out
mov
dec
xchg
mov
mov
inc
cmp
stos
je
mov
loope
jg
insb
iret
inc
bound
mull
mov
sbb
mov
push
and
jmp
lahf
mov
pop
cwtl
std
cli
sub
xor
in
fldt
jbe
lods
out
dec
jbe
lret
pushf
in
and
movlps
mov
out
dec
pop
or
aad
mov
daa
adc
test
inc
in
ret
fucomi
dec
sbb
adc
xchg
and
push
out
mov
push
sub
ret
rorl
loopne
hlt
call
xchg
cwtl
pop
sub
int
clc
scas
je
mov
aad
fwait
es
sbbl
add
mov
repz
fnstenv
sbb
mov
push
xchg
xor
sahf
cmpsb
es
sbb
stc
jne
sbb
rorl
push
mov
jl
sbb
and
adc
mov
sub
jbe
pushf
in
fsubl
cmpsb
xchg
push
stos
sbb
sahf
dec
imul
jmp
int3
pusha
sbb
fsts
das
push
cmpsl
sub
jge
dec
xor
jns
pop
jbe
scas
push
mulb
shr
lock
in
jecxz
insb
negb
out
subb
ja
in
sbbb
pop
mov
adc
enter
inc
shll
iret
int3
mov
or
or
adc
mov
int3
test
popf
sub
out
rcrb
xchg
or
adc
lock
xchg
jae
insl
mov
or
sub
cmp
pop
adc
pop
out
push
xor
sub
ffree
push
xchg
jne
adc
in
sbb
cmpb
int
pop
lds
inc
bound
cmp
sub
sbb
mov
mov
je
fwait
sub
lret
xchg
and
or
into
scas
push
insb
sbb
dec
adc
sti
fldt
gs
mov
sub
jo
push
cmpsl
movsl
and
and
gs
sub
pop
xchg
xchg
iret
lret
push
aam
ja
fcoms
cs
dec
imul
dec
mov
sahf
inc
cmp
push
cmpsl
cld
jae
clc
ljmp
sub
dec
imul
and
cmp
dec
and
sub
or
mov
push
rorl
cmp
and
inc
loopne
outsb
enter
sub
into
jb,pt
dec
pushf
dec
enter
cmovns
pop
call
dec
xchg
and
sub
in
imul
nop
jnp
fiadds
lock
insb
sbb
fistl
mov
jecxz
mov
mov
push
fisubrs
xchg
lea
pop
dec
arpl
dec
aaa
xor
push
shrb
sti
xchg
test
ss
popa
sub
jb
mov
je
and
lods
imul
clc
mov
sbb
fcoms
ja
ret
lea
mov
mov
xor
xchg
jp
mov
fildll
pop
push
dec
pop
iret
add
sbb
jmp
in
dec
andl
xlat
lods
xor
frstor
dec
xchg
push
push
lea
outsb
fsub
in
mov
stos
aam
mov
rorl
xchg
cs
or
mov
push
les
push
shrl
pop
loopne
popf
sub
mov
cmp
cmp
test
fstl
jge
test
mov
push
int
mov
jo
rcrl
lahf
lea
sub
fdivrl
sbb
ss
subb
pushf
sbb
sbb
pushf
lcall
mov
ds
int
lea
fstp
int3
call
or
cmc
aaa
push
xchg
popa
push
adc
pop
or
cmp
aas
fdivrl
in
mov
mov
jns
jl
fadd
imul
adc
pushf
push
jne
jnp
int
insb
shll
stos
movsl
mov
stos
pop
int
das
lds
movsl
xchg
test
adc
jne
cmp
adc
fiadds
cmp
mov
sbb
test
mov
filds
mov
or
pop
jl
mov
outsb
jae
pop
mov
scas
cltd
jbe
jae
or
cmpsb
pop
notb
sbb
jg
push
ljmp
popf
push
into
push
pop
lods
jle
in
push
dec
pop
lret
inc
out
outsb
lock
push
xchg
mov
push
les
negb
jbe
out
into
imul
adc
mov
xchg
jle
std
js
mov
cmpsl
jns
add
and
enter
daa
jbe
faddl
push
jns
lds
or
sub
or
add
push
in
std
adc
pop
out
shll
movsb
jnp
dec
mov
jae
mov
and
mov
xor
add
adc
add
push
cld
outsb
ss
mov
lea
pusha
imul
fimuls
das
jmp
cli
xchg
push
xchg
or
adc
pop
cs
fildll
xchg
or
fmul
lea
idivb
mov
test
sbb
sub
or
int3
popa
scas
inc
pusha
into
cmpsb
lods
gs
sub
mov
movsl
sbb
xchg
movsb
mov
mov
imul
mov
mov
leave
adc
outsl
cwtl
mov
nop
mov
xchg
shll
data16
insl
pop
ret
call
lods
pop
mov
mov
scas
sub
inc
xchg
mov
push
data16
pop
shr
stos
push
movsb
dec
sbb
dec
sub
shrb
inc
push
xlat
pushf
xorl
xchg
lahf
inc
adc
pop
inc
loopne
movsl
cmp
jbe
cmp
fsubs
adc
nop
jnp
push
sti
insl
cmp
faddl
rcrb
shrb
xor
lods
pop
xor
add
xchg
imul
ds
add
xchg
and
scas
xchg
dec
adc
mov
test
pop
adc
xchg
push
mov
xchg
sub
insl
or
pop
adc
jnp
and
shrb
push
shl
ficoms
cmp
popa
sbb
addr16
mov
and
sbb
cmp
and
or
pop
xlat
cmp
sub
enter
and
sub
adc
xor
dec
xchg
hlt
imul
test
sti
mov
sub
cmp
loop
sahf
lcall
sar
jmp
lods
cs
push
fs
and
repnz
fistps
xchg
les
sub
xchg
and
sarb
xor
mov
adc
adcl
mov
test
push
adc
adc
int3
adc
mov
xor
int3
adc
mov
call
and
jle
hlt
jp
xor
sub
or
pop
adc
imul
cmp
jle
mov
adc
or
mov
push
cmp
mov
je
mov
jb
and
add
or
cmp
test
xor
je
out
jo
pop
fisttps
popa
and
mov
xchg
mov
adc
leave
adc
insl
lods
mov
cmpsb
lret
adc
pusha
dec
push
sbb
bound
adc
sub
jae
xor
push
pop
inc
push
nop
sbb
and
dec
add
inc
lds
leave
inc
pop
pushf
sub
andl
pop
push
out
loope
stos
and
and
add
mov
sub
xchg
inc
fwait
es
nop
sbb
ret
inc
fwait
lods
or
lds
call
ffreep
das
mov
addb
popf
cmpl
aam
aaa
cmp
pop
dec
fsubs
ljmp
mov
push
adc
jbe
sub
cs
testb
mov
xor
xlat
xor
bound
fsubs
mov
lret
xchg
and
add
dec
repz
ja
push
negb
nop
popf
xchg
stos
aaa
cmp
outsb
dec
stos
imul
out
leave
call
inc
mov
mov
test
jl
shlb
push
adc
inc
push
imul
in
jmp
js
mov
jle
je
adc
adc
inc
aad
cmp
add
xor
mov
jne
out
push
repnz
jecxz
dec
icebp
cld
out
notrack
enter
xchg
pop
push
inc
inc
sub
std
pop
inc
outsb
xlat
imul
push
loop
dec
daa
cltd
xchg
mov
push
push
mov
xchg
jae
out
in
ss
aaa
add
pop
mov
scas
mov
dec
jno
xchg
or
into
lret
into
addr16
sub
pop
and
inc
xchg
out
mov
add
push
adc
and
xchg
inc
pop
jae
pop
movsb
lret
push
push
xor
cli
add
outsl
popw
cmc
add
sub
xor
mov
scas
mov
adc
xchg
movsl
shr
dec
loopne
sbb
cmp
adc
mov
leave
xor
inc
call
pop
push
inc
lea
fsubrl
lock
push
sub
push
cmc
xchg
and
mov
xor
out
scas
lods
cmp
pushf
cmp
fildll
in
jge
push
fcoms
addl
dec
xor
push
in
cmpsb
out
jge
xchg
mov
les
clc
add
sbb
dec
push
push
das
mov
mov
push
inc
call
inc
cmp
cmp
incb
hlt
add
lods
pop
enter
aas
pop
call
inc
imul
fwait
out
repz
or
xor
xchg
jnp
subb
pop
jbe
xlat
ds
pop
test
lea
xchg
lahf
negb
ret
shlb
pop
xor
inc
faddp
adc
adc
sbb
and
movsl
in
mov
adc
adc
stos
cs
cltd
loopne
cmp
push
stos
scas
mov
sbb
push
fcoms
mov
insl
scas
inc
cmp
xlat
mov
lods
or
xchg
and
popf
pop
inc
xor
movsb
les
test
bound
and
xor
imul
fidivl
fbstp
test
in
sti
repz
push
repz
mov
nop
jne
pop
inc
fistpl
push
lock
pop
repnz
popa
inc
inc
jecxz
or
aam
nop
movsl
stc
mov
jbe
and
push
jmp
pop
out
stos
ret
jb
pop
push
sbb
cmp
add
adc
adc
enter
jmp
inc
adc
sub
sti
mov
adc
adc
jno
decl
mov
int3
adc
adc
aam
add
pushf
lea
aad
and
xlat
lods
popf
xchg
push
dec
mov
shrd
outsl
sub
les
or
adc
int3
adc
adc
mov
ss
sahf
or
int3
adc
adc
push
and
lcall
lods
sub
adc
lods
mov
fstl
jmp
imul
cli
shrb
and
xchg
test
popf
stos
push
js
dec
sbb
cmp
cltd
adc
aad
insl
test
or
or
ret
mov
aad
mov
ror
ret
mov
sub
dec
mov
dec
mov
ds
mov
dec
enter
xchg
fisubrl
icebp
sbb
lods
mov
in
mov
adc
daa
or
negl
adc
adc
adc
scas
pop
and
mov
aam
jo
or
adc
ret
mov
xor
ljmp
sub
push
xchg
xor
dec
mov
pop
adc
enter
xor
mov
and
inc
cmpb
das
clc
xrelease
sbb
movsb
mov
sbb
jb
jge
pop
sbb
jbe
adc
push
in
aam
jae
jns
push
push
jle
cmp
mov
sbb
aad
add
or
mov
out
iret
sbbb
xor
jne
insl
mov
sbb
fs
dec
int3
in
add
xchg
pop
adc
nop
cmpsb
pandn
adc
icebp
add
and
add
das
pop
adc
xor
loopne
dec
repnz
and
shl
dec
mov
push
cli
mov
jae
inc
sub
sbb
pop
xchg
fs
hlt
inc
mov
fldt
outsb
dec
incb
sbb
pop
add
add
mov
jnp
mov
cmp
mov
and
and
jns
mov
xor
pop
call
and
jle
adc
adc
aas
sub
xchg
arpl
add
stos
lahf
or
lods
pop
cmp
push
and
jp
push
sti
mov
clc
mov
mov
hlt
fisttps
pop
mov
xlat
cld
xor
imul
push
adc
jbe
bound
call
inc
sbb
insb
mov
dec
aas
sub
cmp
sub
shl
scas
mov
xchg
mov
add
adc
mov
push
dec
movsb
dec
insl
fstpt
cmp
pop
fcoms
arpl
xlat
add
aas
mov
pop
jne
outsb
fs
call
dec
bound
insl
fidivl
adc
push
stc
adc
add
push
mov
xchg
push
push
cs
scas
jle
into
clc
pusha
push
adc
sub
andb
cmp
or
adc
ret
sti
rorl
loopne
sub
cmpsl
mov
xor
add
dec
js
pusha
push
adc
cs
inc
stos
mov
inc
test
adc
enter
dec
mov
pop
lcall
out
clc
add
rclb
adc
lea
lock
push
adc
adc
mov
pop
jecxz
out
xlat
push
mov
mov
outsb
sbb
in
icebp
inc
movb
and
lods
pop
mov
stos
pop
jbe
out
mov
aam
js
leave
pop
test
out
pop
aam
fs
sahf
adc
fwait
lods
jb
inc
jno
pusha
push
adc
or
mov
andb
fdivrp
mov
adc
add
aas
or
and
stc
sbb
test
push
std
mov
fsubs
cmp
insl
jo
pusha
push
adc
aam
outsl
int3
pop
insl
xchg
repz
cli
xchg
mov
inc
ret
mov
and
or
fisubl
adc
push
adc
test
popf
push
pop
out
pop
adcb
outsl
fld
sbb
scas
pop
mov
sub
insb
shrl
stos
sbb
pop
adc
imul
push
mulb
jge
cmp
cmpsl
adc
push
fsubl
mov
sarb
mov
jae,pn
shlb
inc
fiaddl
mov
xchg
cmp
cmpsl
pop
cli
cmpsl
int3
cmc
push
out
and
inc
sbb
bound
out
inc
mov
push
ljmp
test
adc
ret
pop
scas
xchg
add
pop
adc
enter
sarl
mov
jae
pop
pop
adc
test
xor
push
cwtl
int
lahf
pop
subb
cltd
xor
pushf
inc
xchg
or
add
push
popl
movsl
push
xor
mov
adc
sub
xor
mov
pop
adc
aam
adc
ja
mov
inc
mov
mov
pop
adc
pop
pop
mov
inc
aas
leave
add
insb
sbb
adc
repnz
and
adc
scas
cs
loope
mov
ss
gs
mov
loopne
pop
adc
dec
cld
xchg
shl
xor
jg
adc
cmp
pop
adc
push
mov
pop
adc
popa
cs
stc
push
negb
add
cltd
cli
push
mov
in
es
dec
jne
sbb
adc
and
dec
aas
push
pushf
sbb
adc
jnp
or
cmp
add
sbb
adc
push
pop
in
and
inc
pop
xchg
pop
cmp
pop
adc
adc
add
sbb
sbb
adc
in
test
sub
sbb
sbb
adc
push
movsb
cmp
sub
jmp
xchg
bound
push
jnp
xor
cs
loop
sbb
adc
loopne
outsb
test
sbb
adc
xchg
and
in
xchg
sub
push
bound
and
lds
sbb
adc
sub
pop
loopne
pop
testl
aaa
lahf
and
out
js
cmp
sbb
adc
xchg
mov
xor
and
xor
jbe
rcrb
adc
out
inc
sbb
movsl
dec
shl
sbb
adc
and
pop
mov
push
cmpsl
cmp
and
xchg
and
adc
push
movsb
cmp
pop
pop
scas
lahf
dec
xchg
push
clc
aas
sub
pushf
jle
sbb
cltd
sub
clc
mov
add
sti
mov
faddl
dec
rcll
pop
adc
loopne
mov
dec
out
jns
dec
xor
test
call
sbb
aad
push
pop
adc
xchg
sub
mov
and
scas
bound
pop
adc
xchg
jp
xor
inc
sub
sub
pop
lock
bound
adc
fmul
push
pop
adc
and
scas
push
xor
mov
pop
rcrb
sub
mov
test
out
test
adc
cld
mov
les
and
insb
pop
pop
adc
inc
xchg
cmp
sub
and
and
aam
loope
dec
lcall
jnp
add
pop
imul
push
lea
pop
adc
or
mov
pushf
fdivp
fildll
fwait
jne
sbb
pop
adc
add
dec
arpl
imul
inc
pop
jl
ficoml
and
adc
lock
ss
sub
xor
pop
adc
cwtl
addr16
push
pusha
and
adc
popa
fnstenv
adc
rcl
pushf
and
ficoms
rcr
mov
inc
mov
in
pop
adc
dec
sar
lods
cmp
push
enter
push
mov
aam
adc
and
and
adc
iret
pop
push
cmpl
pop
movsb
je
add
popa
push
cmpsl
lahf
fstl
and
sbb
push
mov
inc
xchg
loop
jle
sub
push
pushf
and
adc
icebp
ret
adc
mov
and
adc
inc
int
rolb
cltd
push
in
adcl
pop
test
adc
mov
loopne
pop
adc
sti
mov
push
std
inc
into
mov
xchg
sti
mov
and
mov
sar
movsb
add
loope
add
fs
imul
or
jns
daa
insb
aas
movsb
decb
loope
leave
push
mov
aas
enter
cmp
daa
clc
inc
sub
inc
and
adc
cmpsb
pushf
jmp
dec
cld
jecxz
mov
dec
icebp
add
clc
pop
push
fistps
out
or
cltd
push
clc
and
lds
and
adc
mov
std
pop
pusha
ss
mov
dec
inc
mov
cmc
dec
xor
mov
sub
sub
sti
xchg
cs
int
mov
in
es
pop
dec
mov
fisttpl
inc
mul
mov
pop
in
jno
mov
popf
movsb
lret
es
iret
adc
mov
fildll
js
mov
dec
rcr
mov
and
dec
xchg
sub
xchg
and
and
pushf
orb
loope
pop
mov
dec
xchg
sub
xchg
sub
sahf
xchg
and
test
in
xchg
and
xchg
jmp
cmp
push
mov
xlat
popf
xchg
sub
push
aaa
and
test
xchg
sub
and
fcoms
inc
sbb
sub
cwtl
push
shlb
andl
fwait
pop
das
je
int3
xchg
push
clc
fwait
push
insb
jb
pop
mov
push
and
pop
adc
xlat
andl
fwait
pop
mov
cmp
jb
jnp
pop
je
aas
repnz
pop
loopne
xor
orl
adc
nop
jnp
xor
xor
push
loop
and
andl
ljmp
mov
xlat
in
loopne
or
dec
out
jns
scas
aaa
and
xchg
and
cmpsb
dec
out
dec
fucom
leave
xchg
xor
cmp
push
movsb
pop
lcall
xor
sub
cld
fldt
push
enter
sti
aas
jb
dec
xchg
outsb
in
pop
adc
jb
and
xchg
mov
cmp
outsb
scas
arpl
pop
adc
movsl
ret
ret
inc
data16
xor
pop
adc
mov
cwtl
jbe
sub
sub
js
pop
adc
cmp
lcall
pop
sbb
push
mov
popf
mov
xor
nop
and
daa
sub
xorb
pop
leave
loope
mov
mov
push
xlat
js
cmp
jmp
sarl
addb
mov
inc
dec
nop
dec
mov
mov
test
nop
dec
mov
in
push
in
mov
in
adc
pop
adc
add
adc
sbb
js
mov
ficoml
fidivs
cli
inc
and
pop
inc
pop
push
and
sub
inc
rcl
cwtl
mov
insb
sub
adc
fsubrl
outsb
stos
les
push
stc
sbb
cwtl
sub
adc
sti
dec
mov
mov
fsubl
scas
rorb
pop
mov
jle
sub
adc
roll
fs
adc
bound
ret
fsubs
adc
mov
mov
fisubs
fcmovb
lds
int
xor
and
xchg
sbb
push
out
shr
xchg
data16
push
loopne
addr16
mov
inc
es
mov
cmpsb
int3
pusha
fstpl
and
test
adc
test
iret
adc
loop
scas
aad
hlt
jecxz
shr
les
pop
fidivl
push
xor
lahf
outsb
js
pop
adc
cmc
nop
mov
pop
mov
push
std
andb
daa
xor
loopne
sub
mov
push
sti
mov
cltd
mov
push
fdivrs
adc
out
xchg
jl
or
gs
pusha
int
add
or
jl
sub
adc
sbb
sti
push
out
mov
int3
es
call
push
mov
es
inc
sub
mov
pop
mov
js
pop
adc
cmp
dec
std
test
jg
pop
faddp
push
jns
lahf
lds
cltd
nop
addr16
and
pusha
xchg
stc
push
out
and
adc
mov
jge
test
dec
xor
les
je,pt
repnz
inc
inc
sub
pop
subb
mov
mov
fisubrl
gs
xchg
lahf
push
in
and
mov
ret
dec
sbb
adc
sti
mov
cmpsb
scas
sbb
add
popa
adc
mov
cmp
adc
sbb
pop
sub
xor
adc
xor
push
clc
mov
pushf
jle
cs
adc
subl
aas
ja
dec
xchg
arpl
pop
xchg
sub
cs
adc
xchg
and
in
xchg
sub
push
test
xchg
and
and
pop
lds
lcall
xchg
sub
pop
sub
loopne
push
test
xchg
and
cmpsl
dec
mov
in
loopne
jmp
enter
cmp
and
xchg
xor
cmp
shll
pop
adc
aad
das
pop
adc
xchg
sub
pop
xor
and
mov
in
shll
xor
or
pop
inc
cmp
movsb
push
test
pop
adc
xchg
xchg
sar
xor
adc
loopne
add
dec
roll
pop
xchg
and
or
pop
adc
push
mov
pushf
jle
xor
adc
inc
subb
xlat
clc
mov
xchg
push
sti
jmp
dec
out
xor
out
cmp
and
cmovnp
xor
and
xchg
sub
dec
pop
cmp
pop
adc
xchg
mov
xor
and
rclb
xor
adc
pusha
xor
adc
pop
xchg
sub
adc
nop
daa
or
cmp
mov
fwait
dec
hlt
fadds
out
pop
add
mov
adc
loope
mov
jge
je
cmp
insb
and
neg
xor
inc
popf
insb
sbb
adc
sub
dec
xchg
outsb
mov
stc
mov
or
dec
iret
in
inc
push
cmp
dec
xor
adc
fldcw
sahf
jne
jo
pop
adc
jbe
adc
cwtl
xlat
fiadds
xchg
xor
adc
std
push
sub
xchg
inc
sub
in
sbb
cli
jnp
jmp
sub
orl
into
jae
push
fdivl
adc
jns
mov
push
js
test
call
pushf
push
es
fisubs
mov
in
and
pop
adc
scas
add
clc
hlt
mov
mov
pop
adc
aam
fsubs
mov
pop
adc
gs
mov
aas
jb
in
or
pop
adc
out
nop
ss
adc
ss
pushl
adc
xchg
push
pusha
andb
lock
stos
out
testl
adc
jecxz
dec
adc
fists
and
scas
aam
imul
adc
inc
fistl
scas
xchg
sbb
pop
adc
rcrl
pop
adc
xor
ss
inc
lahf
outsl
nop
cmp
adc
loopne
pop
adc
sti
addb
lahf
cmp
into
add
pop
adc
sub
daa
sbb
push
lret
push
movsl
adc
nop
cmp
adc
pop
gs
or
add
movsb
push
sbb
pop
adc
cli
pop
leave
pop
sbb
mov
pop
adc
jge
dec
and
push
mov
inc
dec
jns
push
sete
adc
pushf
jp
orb
pop
fldt
std
xor
int
les
pop
adc
fisubs
xchg
mov
loop
cli
xor
adc
push
out
and
cltd
xchg
gs
pop
adc
xchg
icebp
lds
hlt
pop
pop
subb
pop
jge
sub
push
inc
dec
xor
sbb
mov
jae
dec
call
in
push
repnz
loopne
es
dec
mov
scas
insl
and
mov
fsubl
xlat
and
mov
enter
cmp
adc
enter
xchg
mov
aas
fsub
dec
xchg
pop
loopne
pop
pop
bound
cmp
dec
xchg
aas
mov
dec
pushf
dec
add
xchg
and
movsl
cmp
push
inc
and
and
fdivrl
lea
push
aad
iret
xor
adc
pop
loopne
pop
xlat
test
cmp
outsl
pop
xlat
and
pop
js
ja
mov
push
movsl
cmp
push
pop
movsb
dec
test
loopne
inc
xchg
sub
or
fwait
and
mov
lods
dec
xchg
xor
cmpsl
and
xchg
mov
dec
out
dec
adc
shrl
sarl
fbld
push
movsb
pop
pop
adc
cmp
adc
dec
pushf
dec
rclb
xchg
pop
and
inc
xchg
sub
xchg
and
loopne
inc
xchg
and
cmpsl
cmp
pop
jnp
leave
test
push
xchg
sub
xlat
cltd
xchg
sub
pop
and
lock
adc
push
cmpsl
cmp
and
nop
and
adc
xchg
sub
pop
mov
dec
xchg
push
cmp
cmpsb
emms
in
and
pop
mov
xchg
push
movsb
dec
test
and
movsl
xchg
cmp
arpl
enter
xchg
sub
enter
mov
cmp
daa
andb
xor
mov
in
xchg
xor
mov
sub
pop
stc
mov
push
cmp
dec
xchg
cmp
jbe
fwait
dec
pop
mov
cmp
loope
push
mov
nop
and
cmc
dec
xchg
cs
xor
xchg
setns
daa
push
inc
mov
stos
cs
out
pop
sub
lret
and
movsb
mov
test
incl
dec
in
sub
and
cmp
dec
fneni(8087
jbe
je
fs
xchg
je
push
jnp
outsl
scas
sbb
and
lods
sbb
push
imul
inc
cwtl
fdivrl
pushf
fbstp
cwtl
sub
pop
aaa
cli
push
stos
and
mov
pop
ja
mov
cmpsl
xor
push
outsb
stos
popf
fdivs
aam
sub
ja
mov
imul
mov
mov
sarl
sbb
mov
out
pop
fdivp
xchg
xor
addr16
push
loop
push
mov
mov
aam
je
cli
popa
in
imul
sub
mov
enterw
cmp
mov
fimull
test
rcrl
inc
shrl
pop
in
sub
movsb
cld
push
push
mov
and
push
xchg
cmp
push
out
nop
adc
and
leave
adc
cmpsb
sbb
adc
mov
adc
push
jp
and
rcrl
mov
fcomi
push
inc
fadds
pop
adc
pop
xchg
sbb
lahf
push
cwtl
mov
push
cwtl
inc
pop
adc
dec
mov
push
add
inc
in
push
xchg
je
mov
aam
adc
imul
loopne
pop
adc
push
adc
dec
sbb
push
pop
cmp
adc
mov
aas
leave
push
dec
push
sub
add
dec
bound
adc
in
aas
mov
mov
dec
mov
imul
lock
jmp
pop
std
xchg
in
shl
mov
mov
dec
and
pop
adc
and
xchg
mov
and
push
or
ret
test
dec
inc
pop
adc
fldcw
hlt
cmp
sub
pop
adc
mov
cs
cltd
xor
les
adc
mov
and
inc
sub
push
in
call
sti
movsl
repz
xlat
and
ret
movsb
mov
adc
pusha
fsubrs
jae
mov
notb
or
pop
mov
dec
xchg
push
sti
jno
repnz
sub
loopne
inc
pop
adc
loop
and
out
adc
push
sti
mov
dec
aad
inc
pop
adc
push
popf
cmp
xchg
xchg
mov
inc
pop
adc
and
lds
add
leave
test
std
xchg
sub
xlat
sbb
and
mov
loop
dec
pushf
jae
int3
leave
xchg
xor
jbe
fwait
jns
into
and
mov
loop
dec
out
dec
add
leave
xchg
xor
and
ret
add
pop
cmp
lds
push
dec
pushf
dec
add
sub
jle
movsb
dec
test
clc
xchg
and
sbb
pop
adc
mov
dec
pushf
dec
add
xchg
and
movsl
cmp
add
xchg
and
dec
inc
pop
adc
dec
mov
push
aad
mov
pop
sub
xchg
push
clc
scas
aas
arpl
xchg
outsb
test
pop
adc
push
mov
cmpb
cmpsb
dec
out
dec
icebp
in
xchg
xor
sub
clc
fistpll
ja
dec
xchg
push
cmp
jp
sub
cld
cli
cs
push
leave
xchg
arpl
inc
pop
adc
xlat
cli
mov
dec
loope
xchg
xchg
sub
es
aas
jno
js
xor
inc
pop
adc
fadds
adc
xor
movsb
aas
sub
and
loope
push
mov
cmpsb
dec
out
or
aas
and
xor
xchg
cmp
pop
adc
cmp
fs
pop
adc
xor
adc
inc
fwait
xor
sbb
popa
mov
adc
xchg
aaa
dec
enter
mov
push
lea
pop
adc
dec
xor
xor
testb
jne
add
push
lret
cmpsl
xor
pop
adc
in
pop
dec
pop
adc
dec
adc
cld
test
fidivl
cli
inc
sub
pop
inc
pop
jo
sti
in
fnstenv
dec
pop
adc
inc
mov
cmpsl
sbb
mov
sbb
mov
fsubs
cmpsl
sbb
mov
or
pop
adc
sti
inc
mov
movsl
fcomps
mov
fsubl
test
pop
lret
xchg
dec
mov
into
push
lcall
inc
aad
push
cmpsb
cli
arpl
mov
lret
into
fsts
stos
jne
iret
mov
faddl
xchg
stos
push
mov
movsb
rcrb
cli
lds
push
out
sub
ret
test
xor
mov
clc
adc
mov
mov
adc
mov
mov
lods
sbb
and
iret
add
adc
adc
inc
int
rolb
cltd
push
in
adcl
pop
test
je
inc
lahf
outsl
lods
dec
pop
adc
pusha
xchg
sub
aaa
dec
stc
add
pop
adc
sti
lea
xor
push
jle
sbb
sar
popa
shll
out
fs
dec
pop
adc
cmp
jne
mov
dec
push
xor
icebp
aas
leave
push
dec
outsb
sub
mov
pop
adc
fadds
push
push
repz
dec
push
mov
fsubrs
testb
dec
pop
lods
dec
mov
dec
icebp
mov
cmp
sbb
adc
xchg
and
and
xchg
mov
std
pop
pusha
divb
mov
sti
sbb
sub
cmp
imul
pop
adc
sahf
lds
pushf
xchg
pop
xchg
fs
sbb
pop
adc
push
jb
mov
pop
mov
pop
test
repnz
pop
adc
pop
repnz
sbb
leave
pusha
push
loop
dec
jle
test
into
in
loopne
or
dec
out
and
dec
aad
dec
pop
adc
push
cmpsl
or
dec
pop
adc
mov
pop
dec
pop
adc
test
push
sti
mov
dec
sarl
adc
loopne
sub
dec
out
shll
and
xchg
sub
sbb
cmp
jnp
xor
and
push
xlat
clc
mov
xchg
push
cmp
jmp
sub
aad
add
jb
fucomip
nop
dec
xchg
outsb
add
pop
adc
les
dec
pop
adc
sub
repz
xchg
and
xor
pop
adc
loopne
data16
adc
in
aad
dec
pop
adc
xchg
sub
push
inc
test
mov
pop
adc
mov
dec
pushf
dec
rclb
dec
nop
dec
xchg
pop
loopne
pop
ja
push
movsb
cmp
imul
dec
xchg
push
clc
aas
jle,pn
pushf
dec
rcrb
outsb
test
pop
adc
inc
xchg
push
sti
mov
inc
and
dec
ror
dec
pop
adc
aad
push
pop
adc
xchg
sub
push
test
and
pop
movsl
lahf
push
cmpsl
cmp
aas
jno
enter
xchg
sub
dec
xchg
sub
and
loope
jne
and
mov
out
pushf
push
pop
adc
imul
daa
dec
xchg
nop
es
rclb
pop
sbb
je
mov
cwtl
push
mov
and
in
push
pop
adc
mov
push
sar
mov
popf
insl
adc
adc
xor
sub
cmp
jmp
xorl
dec
daa
jl
dec
mov
mov
lea
inc
jg
push
mov
push
mov
test
pop
flds
add
push
pop
adc
cmp
push
sti
jp
inc
sbb
adcb
and
je
fiaddl
push
and
in
ss
das
xchg
sub
cmp
jbe
sbb
lret
mov
mov
hlt
add
ret
shll
jb
cmp
mov
dec
xchg
out
jmp
push
add
cmp
dec
xchg
xbegin
xor
inc
pop
incb
es
mov
push
pop
adc
xchg
pusha
push
pop
adc
pop
fsts
adc
nop
inc
stos
add
cmp
les
imulb
cmp
sti
mov
je
pop
adc
mov
mov
pop
sahf
jno
out
mov
aam
pop
adc
lea
add
lret
jb
lock
je
pop
adc
js
adc
fimull
and
shlb
inc
cltd
push
in
xchg
xchg
pop
test
adc
mov
xor
or
sti
cmp
or
mov
sti
dec
inc
and
dec
mov
adc
dec
lods
aas
push
std
adcb
mov
sbb
fs
mov
inc
sub
data16
outsb
inc
inc
add
mov
pop
adc
clc
iret
sub
ds
and
out
add
or
out
es
and
cmp
pop
ljmp
jo
pusha
push
pop
adc
ljmp
pop
xorl
xchg
imul
and
xor
or
inc
and
adc
pop
jge
test
inc
stos
cmp
push
lds
push
pop
adc
dec
pusha
sub
add
pop
sbb
adc
push
jmp
adc
loopne
lahf
pushf
pop
mov
dec
cwtl
lret
cmp
shll
adc
jmp
enter
cmp
push
jl
das
mov
push
cmp
push
movsl
pop
xchg
nop
push
movsb
cmp
stos
dec
xchg
and
pushf
pushf
dec
xchg
pop
and
pushf
cmp
xchg
and
movsl
dec
orb
push
pop
adc
add
pop
loope
pop
stos
xorb
and
stos
nop
push
movsl
cmp
bound
xchg
and
js
pop
adc
sub
push
pop
adc
mov
mov
jb,pt
dec
xchg
sub
arpl
adc
outsl
xchg
sub
inc
xor
push
inc
pop
pop
adc
jmp
sub
xchg
pop
pop
adc
bound
pop
pop
adc
aad
pop
pop
adc
add
pop
loope
pop
xchg
sbb
pop
pop
adc
addl
pop
pop
popf
dec
xchg
push
sti
fnstenv
lcall
pop
adc
and
jns
test
sub
sti
fnstenv
mov
xchg
add
out
mov
repnz
and
rol
pop
pop
adc
loopne
bound
outsb
inc
mov
popf
cmp
push
mov
pop
or
dec
loopne
push
test
repz
and
xchg
hlt
pushf
cmp
push
popl
and
or
insb
jmp
jne
cmp
outsl
inc
repnz
sahf
cmp
sub
pop
adc
or
cmpsb
push
jl
pop
adc
dec
xchg
pusha
int3
pop
pop
adc
jmp
das
and
pushf
adc
cld
repnz
out
es
cs
mov
mov
mov
xchg
mov
pop
in
sbb
adc
out
pop
sbb
stos
inc
icebp
xchg
sub
cmpsl
cmp
test
xchg
xor
dec
cld
push
pop
pop
adc
and
cmp
xchg
imul
js
pop
adc
push
stos
push
pop
sub
sbb
add
pop
adc
push
mov
aaa
ljmp
cmp
ss
sbb
cli
jnp
jmp
pop
imul
sbb
pop
pop
adc
fsubr
push
js
mov
pop
pop
adc
jmp
mov
mov
pop
daa
push
data16
mov
sarl
sbb
mov
frstor
fisubs
xchg
pop
pop
popa
aad
push
jb
push
mov
mov
ret
aad
repnz
add
dec
gs
ss
jne
mov
das
enter
ja
gs
adc
xor
pop
cli
mov
nop
ljmp
sub
jmp
adc
push
icebp
daa
ljmp
cmp
imul
mov
sbb
adc
jge
mov
test
jb
jg
rolb
cltd
push
in
xlat
push
jp
pop
test
lahf
sub
xchg
inc
cltd
push
in
leave
push
jno
push
inc
jno
dec
mov
mov
mov
adc
and
xchg
push
stos
jnp
fucomp
mov
pushf
add
adc
mov
cmp
or
push
mov
add
pop
adc
loopne
cmp
in
pop
push
aaa
mov
and
sbb
dec
and
out
pop
xchg
dec
test
jae
and
dec
mov
sar
dec
out
pop
xchg
sub
jo
outsl
out
mov
and
push
sbb
cmpsl
and
pop
stc
and
jmp
inc
call
fldl
cmp
cmc
xor
pop
xchg
xor
sub
mov
inc
push
cmp
outsb
xor
pop
out
mulb
bound
mov
mov
push
fiaddl
push
in
out
test
push
ret
lret
cmc
es
xorl
pushw
movb
adc
pushf
cmp
test
add
sar
popf
xor
and
xchg
sub
sub
push
and
orb
push
pop
pop
adc
jb
and
addb
dec
fneni(8087
pop
pop
adc
pop
add
dec
aad
pusha
pop
adc
or
xchg
pop
loope
pop
xor
jno
mov
pusha
pop
adc
and
pop
sub
dec
xchg
arpl
jp
dec
out
mov
dec
rcll
bound
adc
loopne
push
test
outsb
xchg
and
adc
adc
leave
sbb
dec
push
ds
stc
inc
xchg
sub
add
hlt
bound
adc
or
xchg
outsb
inc
arpl
adc
mov
clc
jnp
fisubrl
arpl
adc
xchg
mov
inc
call
pop
cmp
mov
adc
out
mov
dec
aad
arpl
adc
push
cmpsl
dec
push
sub
fiadds
hlt
add
or
test
arpl
dec
push
ds
push
inc
cmc
aad
fs
adc
xchg
sub
push
or
test
aas
pop
lea
dec
rol
test
dec
xchg
outsl
test
pop
adc
add
cli
mov
dec
out
adc
jno
or
adc
in
or
jecxz
popa
xchg
xchg
sub
xor
pop
adc
in
and
and
and
xchg
cs
adc
stos
lock
and
push
pop
add
cltd
jge
mov
insl
cwtl
sbb
pop
adc
insb
pushf
sub
sub
adc
mov
pop
test
nop
es
sar
push
mov
popw
adc
adc
jl
popw
adc
shll
jne
movsb
jb
data16
insl
jmp
lods
or
fldenv
or
lds
pop
xor
inc
cwtl
in
aaa
ljmp
sub
pop
aaa
sahf
jmp
adc
push
jle
fdivl
mov
ret
ja
mov
stos
pop
xor
inc
fidivl
aam
les
adc
sbbl
jge
mov
fnsave
mov
pop
adc
test
movsl
jb
lods
push
mov
adc
arpl
and
pop
adc
daa
jl
jge
loope
sub
mov
fld
movsl
ret
pop
jb
fcmovb
mov
jne
add
daa
js
int
leave
push
nop
data16
and
inc
dec
xor
mov
shlb
sbb
mov
and
pusha
frstor
iret
adc
add
mov
adc
or
fwait
and
lods
push
outsl
sahf
sub
sub
inc
cltd
push
in
adcl
fsubrs
adc
xchg
push
popl
cld
inc
cmp
push
mov
sub
xor
add
pop
adc
aam
adc
adcl
jp
pusha
int
add
adc
sahf
xchg
js
inc
decb
cmp
ds
xor
mov
decb
mov
daa
clc
aaa
dec
fsubl
inc
loope
rorl
aad
imul
mov
xlat
xchg
cmp
dec
loopne
icebp
mov
hlt
iret
push
or
cli
and
hlt
cmp
es
nop
data16
xchg
stc
xor
cmp
xchg
mov
loop
ljmp
imul
cmc
dec
inc
jbe
in
lret
pop
inc
bound
stos
xor
imul
sahf
leave
mov
push
adc
inc
dec
mov
cmp
mov
pop
mov
repnz
pop
adc
pop
and
data16
and
push
mov
add
sbb
into
out
dec
inc
in
xchg
xor
cmp
push
xlat
cmp
out
dec
xchg
push
sti
mov
push
aad
iret
cmp
fisttps
loopne
pop
mov
push
movsb
cmp
mov
xchg
and
adc
dec
xchg
pop
and
cmp
xchg
and
in
xchg
sub
push
push
test
xchg
and
loopne
dec
xchg
sub
popf
cmp
xchg
ficoml
xchg
movsb
dec
out
cltd
movsl
dec
xchg
xor
mov
jge
sub
cmp
jb
mov
aas
orb
pop
adc
sarb
push
andb
push
adc
xlat
dec
xchg
sub
inc
fisubl
dec
loopne
push
test
adc
in
xchg
outsl
std
xchg
sub
push
sub
jne
pop
xchg
and
out
cmp
arpl
jnp
xchg
and
movsb
dec
xchg
aas
mov
dec
xchg
sbb
and
fsubl
xchg
or
and
sbb
ret
mov
sti
popa
xor
mov
dec
cmp
fisttps
and
dec
xchg
sub
nop
and
loopne
dec
xchg
and
cmpsl
cmp
mov
mov
cwtl
xchg
sub
sqrtps
loope
fwait
xchg
and
cmpl
dec
in
dec
mov
adc
sub
cwtl
imul
mov
mov
mov
frstor
loop
xchg
xor
fldt
push
sar
clc
cmp
popa
dec
xchg
push
cld
fidivl
loope
mov
in
popf
pop
aaa
int3
and
stos
push
data16
xor
cwtl
inc
popf
sub
pop
inc
fwait
push
cs
inc
andl
inc
adc
cmp
stc
cltd
dec
mov
mov
mov
push
fwait
cmc
xchg
mov
ds
push
dec
int
in
jne
xchg
pop
ja
imul
test
insb
ljmp
pop
cltd
xor
xor
hlt
in
pop
jo
insb
pop
adc
lds
stos
inc
xlat
lds
mov
cmpsl
fdivr
mov
aad
xchg
jge
fadd
fdiv
mov
cmpsl
sbb
mov
sarl
xor
mov
inc
pushf
imul
or
leave
lds
or
mov
mov
xor
aam
adc
fnstenv
loope
add
push
in
arpl
test
mov
jae
test
dec
push
sub
cli
mov
out
in
and
xchg
jmp
and
insb
pop
adc
movsl
push
out
in
xchg
mov
adc
fldl
insl
pop
adc
int
into
adc
jge
mov
shrl
and
fsubrl
adc
nop
push
jp
aas
rcll
inc
fiadds
outsb
pop
adc
into
push
outsb
pop
adc
popa
mov
cmp
movsl
lahf
mov
cmp
push
jge
jmp
mov
mov
loopne
movsb
adc
mov
cmpsb
adc
sarb
mov
mov
jp
enter
jns
bound
dec
and
dec
es
pop
sti
lret
xchg
sub
dec
jmp
mov
and
out
mov
outsb
pop
adc
dec
icebp
stc
int
cmp
daa
mov
cli
push
sub
add
call
mov
ds
ljmp
outsl
pop
adc
sbb
dec
xor
in
push
repz
into
add
adc
call
lods
outsl
pop
adc
mov
popf
jb
imul
push
outsb
xchg
inc
enter
xor
pop
adc
xchg
lret
adc
pop
lret
mov
and
jecxz,pn
jo
adc
push
jo
adc
xchg
and
or
xchg
sub
jle
and
test
add
mov
xchg
and
cmpsl
dec
out
lea
es
loopne
stc
xchg
sub
movsb
cmp
jnp
xor
scas
sub
cmp
push
sbb
xchg
push
cmp
and
xchg
aas
popf
lahf
dec
pushf
jle
jo
adc
and
sub
clc
cmpl
sahf
dec
xchg
arpl
jo
adc
adc
out
out
pop
call
push
sub
or
adc
add
mov
pop
adc
push
movsl
cmp
push
inc
test
and
mov
mov
cmp
repz
xor
hlt
cltd
or
pop
dec
adc
jb
adc
out
mov
repnz
pop
daa
dec
out
jns
test
sub
sti
std
xor
es
aad
jb
adc
jl
cmp
push
stos
test
mov
mov
xchg
and
and
pop
pushf
jecxz
xchg
pop
loope
pop
mov
jae
mov
adc
arpl
jae
adc
jb
and
pop
adc
jl
cmp
push
movl
push
in
cmpsl
pop
daa
dec
aam
jae
adc
sbb
cmp
xchg
es
incb
mov
pop
adc
dec
xchg
pop
loop
pop
out
and
jecxz
daa
sub
and
jae
adc
adc
push
lcall
inc
iret
in
mov
pop
stos
xor
sub
xchg
loope
jmp
lahf
sub
das
and
sbb
andb
sbb
inc
inc
add
mov
popf
dec
cmp
aas
xor
mov
inc
popf
pop
dec
mov
in
mov
sbb
jp
sub
lea
test
push
jmp
inc
or
add
test
and
jmp
fs
adc
pop
xor
fnstsw
fnstcw
xor
jg
push
xchg
mov
cwtl
imul
jns
pop
jge
scas
std
adc
xchg
pop
shrb
stos
pop
cmpsl
rorb
push
ret
int
mov
push
xchg
mov
mov
adc
lods
pop
push
mov
mov
adc
mov
sbb
fld
jecxz
lds
hlt
push
out
imulb
enter
push
push
inc
mov
xchg
inc
push
ljmp
push
out
jecxz
lahf
out
xchg
fs
push
add
or
scas
cmpsb
push
dec
adc
mov
add
scas
xchg
mov
add
sahf
sub
inc
xor
inc
in
fwait
outsl
mov
sbbl
clc
imul
cmc
dec
mov
mov
mov
and
stc
push
xor
cwtl
test
ss
pushf
mov
mov
pop
sbb
mov
dec
xchg
jg
cs
adc
sahf
addr16
aas
and
adc
aaa
mov
xor
inc
jbe
adc
lret
mov
adc
ja
loopne
jnp
jbe
adc
mov
lods
push
cmp
cmp
pop
xchg
pop
dec
icebp
int3
xchg
jbe
adc
fimuls
xchg
mov
and
pop
stos
es
push
and
adc
pop
insl
adc
pop
xor
hlt
cmp
mov
repnz
pop
subb
lea
sub
cs
into
mov
ja
adc
xchg
cmp
pop
pushf
call
scas
sub
mov
insb
enter
push
mov
fsubrl
das
mov
xchg
push
clc
sarl
push
insb
dec
xchg
outsb
int3
ja
adc
push
cmpsl
and
cmpb
cmpsb
dec
out
mov
repnz
dec
sar
ja
adc
loopne
out
xchg
and
test
js
adc
xchg
and
movsl
dec
orb
push
test
xchg
and
cmpsl
dec
mov
in
loopne
mov
sub
inc
pop
sub
cmp
and
and
out
inc
cmpsb
dec
pushf
das
or
subl
movsl
pop
pop
loopne
movsb
push
jo
pop
adc
xlat
cmpsl
and
out
jl
fistl
jb
mov
aas
sbb
xchg
pop
loopne
pop
cmp
dec
xchg
push
sti
fnstenv
cli
pop
sub
loopne
pop
adc
add
in
movsl
dec
xchg
aas
movsb
inc
dec
xchg
push
cmp
js
sub
aad
jae
jb
fisttps
dec
xchg
pop
and
xchg
sub
xchg
and
loopne
dec
xchg
and
cmpsl
or
pop
adc
sahf
adc
pop
and
dec
xchg
sub
nop
and
loopne
dec
xchg
and
cmpsl
cmp
shlb
leave
test
adcb
adc
xchg
and
and
adc
dec
xchg
pop
loope
pop
stos
bnd
mov
loop
movsb
or
jns
adc
adc
fdivrl
adc
jmp
jle
movsb
cwtl
and
jecxz
pop
fidivl
cmp
insl
dec
xchg
push
clc
sahf
pop
je
xor
pop
sub
call
fstpl
in
mov
inc
bound
xor
das
push
push
jne
mov
sub
sbb
mov
and
stos
inc
cmp
add
jp
adc
lods
daa
pop
fdiv
mov
mov
out
dec
jae
inc
dec
cld
dec
mov
mov
inc
inc
lock
mov
mov
popf
jns
and
mov
insl
adc
jbe
daa
jbe
in
popa
loope
je
mov
cwtl
sti
cmc
push
pop
mov
in
std
or
fstp
int3
push
push
sub
or
and
insb
xor
es
iret
mov
inc
lret
mov
mov
hlt
jle
fld
fcmovu
shll
fwait
jne,pt
or
jp
adc
popf
pop
mov
push
mov
xlat
test
rorl
jnp
adc
gs
daa
or
mov
xlat
mov
adc
iret
xlat
test
shll
in
jo
pop
adc
test
xor
bound
adc
xchg
or
push
lcall
mov
pop
mov
or
lret
pop
adc
xchg
int
frstor
fcmovbe
fs
mov
jl
adc
sbb
xor
pop
adc
jmp
js
aam
sub
mov
test
jg
ljmp
adc
mov
push
fdivrl
inc
xchg
pop
push
mov
and
cmp
stos
dec
xor
pop
adc
out
lods
or
jp
push
pop
jge
adc
adc
ja
dec
loopne
fimuls
mov
pop
cmp
mov
imul
cmp
cmp
loope
cmp
test
adc
sti
inc
xchg
dec
test
jae
pop
pop
xchg
xchg
dec
mov
imul
clc
jge
adc
or
adc
push
sub
stc
push
shlb
ss
pop
adc
xchg
repz
pop
inc
outsb
and
int
dec
jne
jle
adc
dec
jl
repnz
cwtl
fistps
or
pop
mov
inc
pop
pop
rorb
pop
adc
inc
pop
mov
sti
mov
scas
sub
adc
test
adc
js
mov
out
test
pop
adc
pusha
xlat
insl
adc
shll
test
jb
int3
jle
adc
loopne
inc
mov
pop
and
out
sbb
dec
jle
adc
das
mov
stos
mov
aad
jg
adc
ja
cmp
push
out
test
xchg
pop
adc
xchg
and
nop
jg
adc
sub
jg
adc
mov
fwait
popa
mov
pop
sub
insb
addb
test
xchg
and
cmpsl
dec
mov
leave
loopne
popa
adcb
dec
out
leave
movsl
dec
xchg
xor
pop
and
pop
adc
ja
cmp
push
ljmp
les
jo
and
adc
pop
adc
mov
addl
and
loopne
pop
fnstenv
pop
addr16
xchg
push
sti
popf
pop
ja
xor
sub
cld
xchg
inc
dec
pandn
dec
xchg
outsb
cwtl
addl
dec
xchg
push
sti
popf
xor
shlb
dec
sarl
dec
in
out
inc
loopne
es
pop
out
and
pop
push
cmp
sub
outsb
loopne
pop
adc
pop
fmulp
xchg
push
clc
cmpsl
aas
push
fs
xchg
pop
loopne
pop
fsubp
dec
xchg
push
sti
jge
nop
aam
push
aad
jb
xchg
movsl
lret
xchg
arpl
pop
adc
xlat
cli
mov
dec
aam
addb
inc
ret
jne
cmp
push
cmp
sub
adc
orl
popa
xchg
nop
es
mov
sbb
je
mov
aad
and
inc
jmp
adcb
pop
xor
jl
pop
fldl
sub
pop
lcall
addl
push
and
inc
fwait
push
out
push
xor
sub
pop
adc
pushf
adcb
addl
sub
lret
pop
adc
imul
adc
sub
lcall
lods
sbb
je
pop
adc
nop
pop
insb
ljmp
in
sbb
test
adc
daa
rcll
scas
test
or
dec
mov
in
movsl
push
rcll
jmp
outsb
lods
add
test
lods
pop
repnz
test
adc
mov
mov
addr16
pop
ret
lock
adc
xchg
pop
mov
mov
lret
fidivs
shrl
adcb
pop
adc
cltd
push
mov
mov
mov
fldenv
xchg
inc
dec
test
adc
mov
pop
mov
rorl
mov
ja
mov
cmp
or
mov
inc
mov
push
out
pop
mov
push
xchg
sti
fsubr
nop
fs
lods
jo
bound
scas
ret
adc
mov
adc
pop
adc
jbe
jle
mov
inc
push
clc
push
pop
test
sub
adc
pop
notb
lods
gs
xchg
lock
mov
inc
jno
dec
mov
sub
aas
adc
and
adcb
fucomp
movsl
mov
mov
pushf
lock
scas
movsl
adc
push
sbb
loopne
fs
or
pop
bound
stc
inc
dec
jnp
test
fimuls
cli
sub
stos
lret
push
movsl
inc
das
shr
sbb
mov
mov
pop
adc
jbe
xchg
ds
sahf
pop
test
dec
icebp
dec
cltd
push
mov
inc
add
xchg
cli
push
sub
imul
clc
and
dec
sub
sbb
repz
sub
cmp
loop
movsb
mov
dec
push
int3
fidivrs
fnsave
pop
out
test
push
lods
sbb
pushf
or
mov
pop
popf
sbb
repnz
and
adc
pop
adc
push
into
gs
push
xchg
adc
xlat
notb
add
sbb
movsb
mov
jns
daa
mov
sbb
inc
movsb
fwait
xchg
sub
push
sub
test
pop
adc
ja
dec
pushf
dec
ror
mov
dec
xchg
pop
loopne
pop
mov
push
movsb
push
aam
pop
adc
ja
and
out
adc
jnp
cmp
jnp
xor
sub
add
scas
and
pop
adc
push
cmpsl
cmp
inc
fs
push
movsl
dec
addb
mov
nop
and
test
and
lahf
cmp
mov
and
rol
mov
adc
loopne
lret
dec
test
adc
out
loopne
xor
out
mov
or
dec
loopne
out
xchg
and
mov
in
xchg
xor
inc
mov
adc
loopne
inc
test
sub
mov
adc
xchg
and
lcall
mov
scas
and
xchg
mov
cs
xchg
sub
outsb
loopne
pop
adc
inc
lcall
js
and
fwait
pop
mov
cmp
mov
sbbb
movsb
dec
loopne
inc
mov
enter
mov
adc
push
cmpsl
cmp
pop
fcompl
xchg
and
mov
push
push
movsl
cmp
sub
popa
dec
xchg
arpl
mov
sahf
push
mov
cwtl
inc
aam
loopne
push
sub
nop
daa
in
aaa
sbb
rorb
add
and
pushf
dec
xchg
pop
out
pop
cmpsl
dec
xchg
push
cld
mov
push
out
mov
adc
insl
mov
push
mov
fxtract
cmpb
js
pop
adc
jg
es
dec
fstps
or
push
mov
adc
mov
dec
int3
jecxz
jp
sub
enter
fists
jmp
scas
sbb
pop
adc
xchg
leave
arpl
shrb
add
sbb
push
mov
adc
int
in
pop
inc
pop
dec
dec
shrb
flds
repnz
js
test
mov
inc
test
mov
push
adc
sbb
mov
jae
pusha
psllw
mov
insb
mov
adc
push
fnsave
push
fsubrl
in
les
arpl
enter
jnp
gs
out
je
jmp
lock
adc
daa
push
sbb
cwtl
inc
sti
xorb
sti
addb
lea
adc
xchg
jb
fld
xchg
xchg
inc
inc
jp
push
ljmp
jno
and
push
add
aad
fs
test
loop
insb
adc
pop
adc
nop
aad
mov
mov
add
jmp
fiadds
jle
mov
daa
push
es
pop
test
pop
mov
adc
push
inc
lahf
pop
notb
pop
in
jl
pop
adc
fxch
aas
push
sti
addb
xor
loopne
inc
insb
jb
pop
pop
aas
push
sti
addb
jne
pop
push
movsb
addr16
lods
arpl
push
lret
gs
or
sbb
mov
jge
pop
rorb
movsb
cmp
clc
inc
mov
xor
and
out
sbb
sub
mov
pop
mov
adc
rorl
cwtl
popl
adc
adc
mov
inc
jo
pop
adc
mov
test
pop
adc
and
mov
adc
inc
dec
fmul
pop
adc
adc
imull
hlt
out
push
pop
adc
rolb
clc
enter
and
popf
in
xchg
gs
and
in
inc
popa
push
adc
pop
mov
adc
pop
adc
je
mov
pop
adc
leave
fdivs
pop
adc
fsts
pushf
leave
pop
adc
mov
pop
adc
add
push
push
adc
out
scas
arpl
xchg
mov
jb
sbb
adc
xor
adc
pop
dec
xchg
xorl
cld
or
pushf
roll
push
adc
leave
pop
adc
pop
adc
out
into
and
pop
adc
test
pop
adc
stos
push
dec
xchg
push
jl
pop
adc
jbe
mov
xchg
into
inc
popa
push
adc
mov
scas
and
adc
cmp
add
push
push
adc
out
scas
arpl
cmpl
adc
xor
mov
inc
popa
push
adc
movsb
int3
pop
adc
dec
push
push
adc
hlt
cltd
xchg
js
popa
push
adc
adc
pop
adc
jle
and
xor
into
pop
adc
pop
adc
in
enter
adc
pop
adc
sbb
in
enter
adc
adc
cmc
fwait
andb
inc
popa
push
adc
lods
or
adc
or
test
push
push
push
adc
or
in
scas
call
movsb
mov
adc
or
fcoms
adc
adc
dec
lahf
pushf
dec
sub
ds
xchg
rolb
adc
or
push
or
pop
sub
add
hlt
mov
adc
push
dec
inc
popa
push
adc
rorb
or
in
call
push
adc
jno
es
xchg
mov
lods
inc
popa
push
adc
or
les
movsb
dec
mov
adc
xorps
cli
and
dec
push
inc
popa
push
adc
xchg
push
fs
adc
push
push
adc
lret
fucomp
mov
popa
push
adc
or
in
push
push
adc
movsl
add
pop
xchg
shl
push
adc
test
pushl
adc
fwait
pop
mov
in
adcl
into
xchg
pop
aam
std
mov
xchg
push
push
adc
xchg
or
and
cmpsb
push
jmp
std
mov
push
adc
sub
into
icebp
pusha
mov
push
push
push
adc
mov
sbb
lahf
orb
sub
into
push
push
adc
inc
leave
mov
xchg
jae
insb
mov
adc
je
adc
cmp
or
sbb
fwait
nop
mov
adc
aaa
cmp
sub
add
push
adc
mov
pop
xor
mov
adc
xchg
mov
or
clc
lahf
loop
mov
adc
nop/reserved
inc
push
add
jbe
and
mov
mov
sbbl
adc
mov
hlt
aad
push
or
insl
mov
cmp
mov
dec
mov
int3
push
or
push
test
push
adc
push
imul
outsl
adc
leave
mov
push
push
adc
lds
out
sbb
mov
pop
push
push
adc
xor
or
adc
push
adc
xor
or
jae
cmp
or
mov
icebp
jp
mov
stos
mov
fs
or
cmc
push
scas
and
push
adc
pop
mov
clc
invd
adc
stos
pop
test
adc
xchg
clc
mov
push
mov
inc
sub
jne
adc
adc
sbb
popf
loop
xchg
fs
outsb
jae
push
push
adc
mov
mov
nop/reserved
and
adc
mov
leave
pop
adc
push
gs
and
nop
mov
lods
scas
mov
fdivrp
movsl
in
adc
adc
dec
xchg
arpl
xchg
mov
jb
ss
fisttpl
mov
adc
sub
movsb
jne
fcmovnu
insb
bound
adc
dec
mov
adc
movsl
mov
push
jecxz
int3
pop
adc
int3
dec
or
mov
cmp
adc
pop
fcmovu
push
push
mov
adc
aas
mov
insl
mov
aam
mov
adc
lcall
or
mov
adc
sub
movsb
jne
fcmovnu
insb
bound
mov
mov
jno
aam
mov
adc
dec
xchg
sub
mov
fimull
loopne
pop
adc
repnz
das
push
mov
sub
mov
or
sub
dec
aam
or
les
or
pop
icebp
lcall
adc
loopne
xchg
les
movsb
dec
ficoml
adc
mov
or
inc
xchg
and
fs
add
push
loope
push
or
repnz
es
shlb
push
or
orb
movsl
dec
aam
push
or
pop
icebp
lock
xchg
sbb
jge
sub
adc
adc
je
sar
mov
iret
and
scas
arpl
push
or
adc
cmpsl
dec
invd
adc
pop
xor
or
inc
fcomps
cmp
or
sub
push
adc
adc
cmp
or
or
cmp
dec
xchg
sub
or
addl
or
imul
adc
adc
popa
pop
stos
add
add
fistl
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
call
xchg
xchg
xchg
nop
nop
mov
nop
nop
pop
xchg
xchg
xchg
nop
nop
mov
nop
nop
add
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
xor
xchg
xchg
xchg
nop
nop
mov
nop
nop
ret
xchg
xchg
xchg
nop
nop
mov
nop
nop
popl
xchg
xchg
xchg
nop
nop
mov
nop
nop
add
xchg
xchg
xchg
nop
nop
mov
nop
nop
push
xchg
xchg
xchg
nop
nop
mov
nop
nop
push
xchg
xchg
xchg
nop
nop
mov
nop
nop
push
xchg
xchg
xchg
nop
nop
mov
nop
nop
push
xchg
xchg
xchg
nop
nop
mov
nop
nop
jmp
imul
test
sub
fildl
mov
nop
nop
call
xchg
xchg
xchg
nop
nop
mov
nop
nop
subl
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
and
xchg
xchg
xchg
nop
nop
mov
nop
nop
add
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
movzwl
xchg
xchg
xchg
nop
nop
mov
nop
nop
add
xchg
xchg
xchg
nop
nop
mov
nop
nop
cltd
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
div
xchg
xchg
xchg
nop
nop
mov
nop
nop
xor
xchg
xchg
xchg
nop
nop
mov
nop
nop
xor
xchg
xchg
xchg
nop
nop
mov
nop
nop
ror
xchg
xchg
xchg
nop
nop
mov
nop
nop
inc
xchg
xchg
xchg
nop
nop
mov
nop
nop
cmp
xchg
xchg
xchg
nop
nop
mov
nop
nop
jl
xchg
xchg
xchg
nop
nop
mov
nop
nop
call
xchg
xchg
xchg
nop
nop
mov
nop
nop
pop
xchg
xchg
xchg
nop
nop
mov
nop
nop
test
xchg
xchg
xchg
nop
nop
mov
nop
nop
je
xchg
xchg
xchg
nop
nop
mov
nop
nop
dec
xchg
xchg
xchg
nop
nop
mov
nop
nop
je
xchg
xchg
xchg
nop
nop
mov
nop
nop
dec
xchg
xchg
xchg
nop
nop
mov
nop
nop
je
xchg
xchg
xchg
nop
nop
mov
nop
nop
xor
xchg
xchg
xchg
nop
nop
mov
nop
nop
ror
xchg
xchg
xchg
nop
nop
mov
nop
nop
xor
xchg
xchg
xchg
nop
nop
mov
nop
nop
cmpw
xchg
xchg
xchg
nop
nop
mov
nop
nop
je
xchg
xchg
xchg
nop
nop
mov
nop
nop
sub
xchg
xchg
xchg
nop
nop
mov
nop
nop
and
xchg
xchg
xchg
nop
nop
mov
nop
nop
jmp
xchg
xchg
xchg
nop
nop
mov
nop
nop
add
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
cmpw
xchg
xchg
xchg
nop
nop
mov
nop
nop
jne
xchg
xchg
xchg
nop
nop
mov
nop
nop
and
xchg
xchg
xchg
nop
nop
mov
nop
nop
pop
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
jmp
xchg
xchg
xchg
nop
nop
mov
nop
nop
xor
xchg
xchg
xchg
nop
nop
mov
nop
nop
jmp
xchg
xchg
xchg
nop
nop
mov
nop
nop
xor
xchg
xchg
xchg
nop
nop
mov
nop
nop
jmp
ds
mov
addl
imul
test
arpl
arpl
xorl
shlb
jae,pt
push
adc
cmp
lahf
inc
aad
addr16
es
es
push
xchg
push
shrl
xchg
out
inc
mov
ficoml
ret
loopne
push
push
std
cmpsb
pop
mov
shrb
lahf
bound
std
movsl
inc
xadd
mov
pop
sbb
mov
lock
cs
out
imul
pop
pop
cmp
aaa
pop
jecxz
nop
cs
popa
enter
dec
lahf
push
cs
jp
cmpsb
inc
fs
sahf
push
fisubrl
mov
imul
pop
jne
lods
fidivl
jp
pop
imul
dec
cmp
pop
xchg
mov
cs
daa
mov
fwait
aas
rcrl
out
jns
ljmp
test
mov
push
sbb
insb
mov
pop
dec
nop
imul
mov
xchg
jbe
sti
fnstsw
lods
jae
cld
add
lahf
loopne
popa
and
fnstenv
ror
pop
in
ss
repz
sub
mov
fistpl
sbb
gs
dec
fwait
inc
jae
pop
scas
mov
dec
movsb
mov
shrb
xlat
mov
das
mov
sbb
mov
enter
mov
fcoms
hlt
add
insb
adc
call
mov
scas
xor
subl
imul
fwait
les
pusha
and
mov
aam
lds
xchg
pop
fsts
mov
dec
sub
fistpl
scas
push
nop
lock
adc
lds
loopne
add
hlt
sub
mov
mov
enter
mov
fcoms
hlt
add
insb
adc
call
mov
and
je,pn
sbb
dec
lahf
add
pop
ss
xlat
mov
insl
daa
sub
cmp
ss
scas
sbb
lock
lcall
mov
push
or
inc
pop
repz
fstl
fcoms
fistl
outsl
loopne
fld
mov
push
push
pop
sbb
call
inc
and
dec
out
add
and
sbb
add
sbb
and
clc
movsl
out
jb
add
pusha
out
mov
fstps
pop
sub
out
adc
mov
imul
or
repz
insl
pop
imul
lock
pop
push
add
jnp
loopne
or
mov
adc
shl
mov
mov
aam
adc
imul
add
jnp
fcoms
pop
loopne
adc
ficoml
insl
lods
mov
repz
sbb
sub
xor
sub
insl
and
push
jecxz
mov
sbb
jle
rol
imul
lock
xor
clc
popf
jl
shll
es
mov
cmp
adc
push
sub
insl
pop
pop
mov
stos
call
lods
lea
mov
call
ficompl
cld
out
push
leave
lods
shlb
je
loopne
fs
fldl
push
push
xchg
cmp
out
insl
lods
insl
ds
fs
imul
jp
in
es
repz
in
mov
mov
hlt
push
xchg
addr16
in
lcall
pop
xor
fidivl
imul
fwait
jbe
and
mov
call
pop
adc
jmp
mov
mov
or
pop
insl
imul
rcl
pop
lret
out
inc
mov
jbe
cmpsl
sti
imul
ds
fwait
mov
xchg
inc
mov
loopne
adc
dec
ds
arpl
or
sti
insl
lods
lcall
loopne
push
pop
insb
and
inc
xor
jns
repz
je
les
inc
mov
lock
out
insl
fnstcw
xor
insl
pop
loopne
test
xchg
fcmovnbe
fisubrl
cmp
mov
fcomps
cmp
iret
out
add
repz
popa
fisubrl
daa
sub
adc
imul
push
sti
pusha
and
xchg
nop
and
push
imulb
ds
pop
call
lods
sub
mov
cmp
xor
lahf
xor
push
cmc
shlb
stos
out
jge
push
fldl
in
fwait
mov
lock
cmp
pop
lods
inc
mov
mul
or
cmp
lods
jp
aas
adcl
loopne
stc
cs
mov
xchg
dec
jae,pt
ja
add
xchg
inc
pop
push
popw
dec
lahf
pop
cmpb
fsts
cmpsl
pop
lods
lahf
mov
mov
lcall
dec
xchg
lret
rcl
mov
xor
and
mov
cmp
mov
fidivrl
arpl
ds
aaa
pop
xor
fsubrl
aam
fistpl
es
lret
mov
hlt
inc
aad
push
push
shll
mov
je
loopne
fs
pop
push
repz
call
mov
lahf
mov
sbb
pop
je
je
pop
popa
mov
movsb
sub
pop
mov
sub
imulb
fisubs
push
pop
mov
lods
mov
xchg
inc
push
sbb
cmp
ficompl
imul
rep
dec
push
fldt
insl
es
mov
pop
pop
fldt
jmp
mov
lods
push
lock
pop
mov
mov
outsl
in
cmp
repz
push
sbb
in
ficoml
repz
sbb
pop
push
lock
mov
cmp
andb
pop
fcmovnbe
sub
cmp
pop
mov
cmp
and
mov
shrb
xchg
ja
stos
cmp
stos
in
inc
pop
jmp
lea
push
icebp
adc
test
arpl
imul
cmp
push
pop
push
nop
cs
cs
xchg
inc
pop
lret
out
arpl
dec
ds
pop
insb
xor
fwait
cmpl
pop
lock
pop
sbb
xchg
mov
and
neg
lods
insl
pushf
pushf
pop
jecxz
mov
dec
insl
lods
subb
das
gs
fnsave
xor
aad
movsl
ljmp
insl
fwait
sub
add
cmc
sbb
es
in
ds
cmp
insb
push
pop
mov
mov
je
loopne
fs
pop
push
repz
call
mov
lahf
mov
sbb
pop
je
je
pop
popa
mov
movsb
sub
ds
in
loope
mov
imul
xor
push
jb
cmp
lahf
pusha
mov
lahf
mov
cs
daa
repz
mov
mov
lea
push
stos
call
mov
imul
inc
mov
xchg
xor
cmp
fmulp
dec
dec
push
pop
in
sub
pop
repz
fiaddl
mov
xchg
xchg
xchg
clc
mov
cmp
fildll
fwait
sub
lea
in
adc
push
mov
inc
mov
mov
and
in
rcl
jb
dec
mov
shrb
lods
inc
stos
cmp
cmp
mov
sbbl
cmp
push
icebp
cld
addr16
xchg
lods
ficompl
daa
in
lea
in
push
pop
jge
xchg
push
fidivrl
arpl
aaa
pop
xor
dec
ss
lods
je
jge
xchg
fnstenv
push
cmp
cltd
test
inc
xlat
fstpl
rcrl
out
insl
ss
dec
lahf
mov
shlb
je
loope
xlat
fnsave
pop
xchg
insl
mov
push
xor
xchg
movsb
mov
sub
sbb
sbb
sub
jecxz
scas
inc
push
lock
mov
aas
pop
adc
fisttpll
and
scas
scas
xchg
push
rorl
fcmovnbe
pop
xor
repz
jle
pop
imul
mov
cmpsl
out
std
das
mov
sbb
call
out
xchg
push
dec
cmp
ds
sbb
in
ficoml
repz
push
lock
pop
mov
cmp
xchg
ficompl
and
dec
pop
adc
pop
xor
xchg
cs
push
or
lds
and
lods
mov
pop
stos
mov
mov
pop
add
lret
loopne
push
scas
mov
adc
test
bound
imul
cmp
mov
and
sub
dec
dec
sub
call
push
or
in
and
sti
cmpsl
out
sub
pop
je
and
push
sbb
sub
mov
loopne
lcall
outsl
inc
insl
pop
imul
loopne
sbb
xchg
insl
pop
repz
adc
gs
xor
cs
ja
movsl
mov
xchg
imul
add
in
rcll
mov
shl
setb
cmp
xchg
xchg
test
cmp
in
insl
sub
dec
xchg
sub
mov
out
pop
mov
cmp
sub
in
loop
mov
in
pushw
jb
xchg
lods
mov
pop
xchg
popa
insl
pop
loopne
ljmp
lods
in
fs
loopne
stos
xchg
xor
xchg
sub
fidivrs
pushf
dec
push
ds
cmp
or
inc
xor
xchg
in
rorl
dec
lahf
mov
es
es
aas
xchg
ss
sahf
mov
insl
mov
xchg
jbe
xchg
aaa
and
jb
and
mov
mov
pop
push
int
sub
push
decb
xchg
pop
mov
cmp
in
and
movsb
xchg
dec
mov
cmpsl
rcrl
loopne
es
cmp
pop
mov
push
lcall
sahf
lock
pop
xor
mov
and
rorl
pop
mov
xchg
pushf
out
inc
mov
xor
shr
xchg
dec
leave
rorb
aaa
insb
gs
out
sub
push
pusha
mov
pusha
es
mov
xchg
xchg
mov
addr16
lods
sub
popf
out
repnz
push
dec
pop
push
xchg
sub
mov
push
adc
mov
ds
in
mov
mov
fldcw
mov
leave
sub
in
sbb
es
dec
sub
push
pop
loopne
popf
insb
pop
scas
cmp
pusha
lods
and
push
push
call
out
mov
pop
scas
cmp
push
mov
imul
cmp
cs
cmp
dec
loopne
cli
push
dec
cmpsl
aam
shrb
movsb
push
outsl
cmp
pop
sbb
dec
xchg
test
cmp
push
dec
dec
pop
push
fcmovnbe
call
or
sahf
stos
bound
dec
dec
sub
add
cmp
xchg
in
cmpl
in
sahf
dec
addb
mov
and
pop
xor
nop
daa
xchg
in
push
xchg
leave
sub
inc
push
clc
popf
jl
shll
es
shrb
push
xor
ss
rorl
lock
cmpl
pushf
xorl
mov
xchg
xchg
out
insb
mov
mov
and
in
insb
lods
lea
pop
xchg
pushf
xchg
lock
sti
out
std
ss
fidivl
push
jb
fistl
out
pop
mov
xor
push
and
insl
imul
hlt
dec
in
fistpl
fidivl
daa
lcall
rcrl
push
jle
and
fdivl
and
and
jecxz
arpl
push
sub
imul
repnz
leave
sub
fisubs
lcall
push
fisubrs
xchg
xchg
push
ds
and
arpl
in
xchg
and
sbb
and
and
pop
inc
dec
dec
xor
push
sub
xchg
fistpll
mov
loopne
push
jp
xchg
es
pop
and
push
dec
rcrl
xchg
pop
xchg
xchg
loopne
ja
mov
dec
out
adc
sub
sbb
out
pop
dec
dec
aam
rcr
xchg
push
jbe
and
adc
gs
ret
roll
pop
sbb
mulb
and
das
xchg
lods
inc
fbstp
pop
xchg
and
mov
adc
dec
xchg
pushf
insl
shlb
cmc
inc
push
and
pop
xchg
xchg
mov
mov
mov
sub
jb
loope
mov
sbb
sbb
lds
mov
xchg
cmp
movsl
cwtl
jne
and
sahf
inc
sub
out
das
xchg
dec
push
jb
push
lcall
mov
mov
sub
in
and
sub
movsl
pop
out
lcall
cmpsl
and
loope
and
xchg
sbb
mov
cmp
popf
xor
dec
push
and
lods
insl
adcb
in
pop
lcall
cmp
xchg
cmp
in
cmpsl
and
xchg
test
out
and
mov
dec
out
jns
mov
xchg
pushf
cmp
es
sbb
jno
fistpl
loopne
xchg
jp
dec
pop
mov
shrb
sub
xchg
neg
pop
fistpl
sub
adc
pop
cltd
jp
xchg
push
fstpt
out
push
lcall
cmpsl
and
sbb
pop
stos
nop
sub
subl
add
call
es
mov
movsl
inc
daa
fidivl
xor
sbb
or
lods
fiaddl
dec
clc
imul
out
cmpsl
xchg
call
push
and
jb
mov
aam
push
xchg
pop
pop
cmp
loop
inc
xchg
push
mov
insl
mov
pop
xchg
adc
xchg
ficompl
and
lcall
mov
mov
pushf
xchg
fsubrs
scas
and
push
sub
xchg
sub
movsl
and
imul
jecxz
movsb
imul
jge
xor
aad
mov
pop
fldcw
mov
pusha
pop
jmp
pop
dec
dec
mov
imulb
insb
xchg
pop
cmp
xchg
and
add
mov
es
lcall
cmp
lods
and
push
fldt
pop
insl
adc
scas
mov
subl
fstpl
and
push
mov
imul
jp
xchg
push
fisttpl
cmp
out
xchg
dec
push
mov
lret
push
addr16
xchg
xchg
push
mov
fsts
out
xchg
lock
flds
pop
imul
jno
sti
and
adc
loop
test
jle
xchg
and
lea
inc
xchg
pushf
out
fwait
mov
cmpsl
and
call
cmp
movsl
push
std
imul
ljmp
mov
push
xchg
call
cs
and
cwtl
or
jb
mov
inc
xor
sub
out
gs
movsb
fldenv
lods
in
call
in
ficompl
out
pop
dec
dec
mov
pop
js
xchg
xchg
mov
dec
push
sbb
cmp
sarb
out
lcall
cmpsl
and
insl
lods
insl
loopne
outsb
mov
sysexit
cmp
cmpsl
ficoms
ficoml
pop
dec
cmpsl
fcmovnbe
fisubrl
inc
leave
xchg
pop
lcall
dec
pop
adc
fsubrl
mov
cmp
push
loopne
mov
push
dec
in
xchg
xchg
xchg
lds
push
pushf
pushf
xchg
es
mov
and
outsb
out
mov
sbb
inc
pushf
ds
call
mov
jg
sub
pop
repz
xchg
cs
popf
enter
fidivrl
xchg
cmp
mov
xchg
mov
setne
imul
ljmp
cmp
xchg
dec
push
ss
ficompl
pop
lcall
sub
insl
jns
call
dec
xchg
stos
mov
hlt
inc
cmp
outsb
sub
leave
sub
push
cmpsb
hlt
popa
pop
filds
mov
inc
pop
push
int
and
push
mov
in
pop
mov
cmp
lods
xor
lods
xchg
dec
mov
cmpsl
rcrl
loopne
cmp
cmp
pop
mov
push
lcall
dec
and
fwait
push
pop
mov
and
rorl
stos
sub
ficompl
mov
xor
sbb
sub
leave
sub
push
mov
mov
es
pop
xor
xchg
es
dec
xchg
xchg
ss
mov
push
addb
es
ss
jae
in
mov
pop
fcmovnu
insb
jle
mov
leave
xchg
aam
pop
movsl
pop
insb
push
xchg
inc
aad
jge
xchg
pushf
cmp
sub
jl
sub
sub
stos
lret
insb
add
inc
pop
cmpl
stos
in
push
xor
ss
sub
lods
pop
sub
mov
mov
insb
add
adcl
arpl
jmp
and
pop
xor
add
push
dec
pop
sahf
and
push
dec
pop
xchg
rclb
dec
pushf
xchg
sub
movsl
nop
cmp
jb
mov
ret
inc
xchg
dec
push
ds
and
fnstenv
nop
out
pop
jb
lea
sahf
xchg
push
ds
dec
pop
xchg
push
push
out
pop
xchg
dec
mov
dec
lods
in
fcmovnu
enter
lds
popf
pushf
xchg
shlb
dec
inc
push
and
push
xchg
call
nop
out
and
fsin
shr
clc
mov
mov
mov
push
mov
inc
dec
leave
call
xchg
pop
jb
pop
sbb
adc
imul
mov
pop
lahf
loopne
es
scas
ds
ss
fcmovnbe
xchg
lahf
fwait
push
jb
rep
dec
push
mov
pop
mov
aas
fcmovnbe
push
fwait
fwait
push
xchg
pop
cmp
stos
in
xchg
and
gs
push
ss
xchg
loopne
stos
inc
dec
dec
lods
aad
pop
shrl
stos
out
fisubl
dec
dec
sbb
pop
push
lock
sub
xchg
dec
mov
fcmovnbe
push
sub
clc
mov
fwait
pop
xor
popa
sahf
pop
arpl
lcall
cmp
fwait
push
dec
ss
push
fcomip
popf
xchg
push
push
or
cmp
call
push
adc
lods
cmp
es
mov
dec
out
es
outsl
call
mov
pop
pop
jle
dec
ss
mov
ljmp
inc
leave
push
xor
xchg
xchg
movsb
call
mov
rorb
inc
jns
pop
divl
push
xchg
pop
pop
daa
lcallw
arpl
pop
and
xchg
loopne
dec
mov
xor
out
and
dec
xchg
ficompl
xchg
pushf
and
push
cmp
xchg
out
cltd
mov
sarb
xlat
sti
popf
and
push
lock
repz
xchg
je
mov
xchg
subl
xor
xchg
fistpl
mov
cmp
xchg
mov
push
pop
cmp
xchg
in
cmp
inc
nop
clc
popf
jl
shll
sbbl
mov
sahf
ss
and
cmp
inc
nop
cmpl
pushf
subl
mov
push
cmp
gs
call
lea
cmp
sub
dec
push
test
imul
xor
xchg
and
cmc
movsl
insl
mov
arpl
push
cmpl
pop
ds
stos
cs
mov
ss
scas
in
dec
xchg
shlb
inc
sbb
fs
mov
sub
pop
dec
dec
fstp
push
ffreep
popf
xchg
push
push
pop
mov
inc
add
insl
inc
dec
sub
cs
loopne
pop
lods
pop
sub
stos
lret
insb
add
popf
cmp
xchg
xchg
movsb
ds
push
scas
xchg
dec
push
adc
daa
idivl
mov
ficompl
jecxz
mov
lods
xor
aas
inc
mov
movsb
xchg
pop
mov
sub
push
bound
xchg
pop
out
inc
xchg
push
lea
cmpl
pusha
cmp
sbb
sub
ret
movsl
nop
lea
jp
adc
lods
sahf
or
pop
sub
in
lea
mov
inc
movsl
in
xchg
pop
mov
jge
dec
cmp
pushf
aad
mov
mov
sbb
mov
lods
insl
loopne
es
dec
in
fistl
jge
inc
into
aad
pop
call
cmpsb
mov
and
pusha
ja
out
push
mov
xor
test
dec
and
sbb
addr16
cmp
loopne
dec
push
jne
pop
cmpl
push
orl
cmp
cmp
mov
loopne
inc
mov
pop
imull
dec
pop
push
pushf
xchg
fdivs
aas
sub
scas
and
out
adc
mov
lea
sub
pop
data16
sub
and
push
jmp
inc
dec
leave
loopne
mov
lds
aas
pop
add
imul
test
outsl
lods
mov
mov
sub
lods
lea
xor
xor
and
pop
inc
sub
jmp
aas
pop
imull
dec
lahf
or
out
test
in
rcrl
in
adc
inc
inc
xchg
sbb
pop
jbe
pushf
xchg
fadds
scas
and
pop
adc
ret
and
sahf
stos
ficompl
shrb
aaa
int
shrb
xchg
pop
jnp
hlt
cmp
pop
pushf
fwait
xchg
xchg
daa
sti
or
outsb
pop
jg
xchg
mov
sub
pop
dec
dec
pop
fsts
addr16
xchg
push
out
pop
aaa
pop
xor
in
xchg
and
xor
fwait
sub
fcmovb
jns
sub
xchg
mov
aaa
insw
in
fidivrl
fcomp
dec
inc
xchg
push
dec
xchg
or
and
mov
pop
sub
push
stc
loopne
and
movsl
xchg
xor
pop
jb
cmp
xchg
arpl
aas
rclb
mov
faddp
aam
shr
mov
mov
fnstenv
push
inc
dec
dec
fldenv
test
leave
sub
pop
nop
arpl
dec
out
adc
push
and
xchg
xchg
movsb
ds
inc
insb
xor
fwait
popf
jge
pusha
negl
inc
nop
cs
dec
mov
call
inc
sbb
pop
insb
pop
inc
push
fwait
ss
pusha
lods
pop
repz
icebp
cmp
mov
es
cmp
fs
insb
pop
mov
sub
sbbl
insl
lods
addb
in
push
rcll
mov
sbb
push
rcrl
pop
and
in
xchg
and
dec
mov
inc
jle
dec
xchg
call
test
aaa
insw
in
pop
repz
cwtl
stos
fcmovbe
enter
es
ret
shr
mov
pop
test
aaa
shrl
adcl
fistpl
lock
mov
mov
leave
ficoml
add
xchg
ss
test
sbb
xlat
sub
pop
sbb
mov
sub
xchg
insb
shrl
scas
and
in
out
pop
pop
inc
nop
sub
lods
pop
subl
cs
mov
repz
pop
and
out
ficoml
pop
stos
nop
es
mov
and
ss
subl
mov
sub
adc
clc
outsb
inc
dec
leave
call
aad
jb
xor
leave
call
xor
sub
sub
leave
sub
mul
call
pop
cmpl
out
sbbl
push
fnstsw
popf
xchg
push
test
lret
rcrl
ss
push
bound
ds
pop
and
test
xchg
mov
push
mov
imul
or
push
cmp
push
sub
sahf
loopew
fisubrl
inc
leave
xchg
xor
xor
pop
jb
xor
fists
outsl
and
daa
repz
idivl
rcll
mov
xchg
xor
dec
dec
cmp
jg
stc
rcrl
push
loopne
sahf
pop
or
fiaddl
ljmp
aad
pop
data16
push
xchg
call
stos
popf
and
push
or
pop
cmp
push
xchg
mov
adc
lods
loop
cmp
mov
dec
out
insl
fsin
ret
out
sub
outsl
cli
pop
insl
imul
pop
scas
in
xchg
xchg
rolb
rclb
mov
pop
and
and
dec
mov
loopne
add
xchg
push
fstpt
out
iret
fwait
movsb
dec
xor
add
and
sbb
out
repz
dec
sbb
in
inc
je
movsl
leave
insb
addr16
sbbl
fisubrl
gs
dec
bound
mov
je
dec
lea
ds
sub
xor
es
jge
mov
nop
lea
dec
mov
xchg
es
mov
mov
xor
cmpl
mov
cmp
mov
dec
xchg
call
dec
sbb
push
cltd
pop
xchg
xchg
fisttps
sahf
mov
cltd
test
cmp
add
push
jmp
jns
pop
sbb
pusha
mov
mov
jnp
pop
sbb
test
lret
movb
mov
pop
adc
mov
fistpl
imul
andl
in
mov
dec
pop
mov
adc
xor
es
sub
xorl
push
mov
std
adc
inc
xor
dec
xor
loop
fisubrl
xchg
data16
out
cmp
inc
testb
in
sub
push
or
or
aad
mov
push
push
cmp
jns
cmp
jmp
ds
repnz
xchg
push
and
xchg
mov
flds
xor
jo
mov
stc
pop
cmpsl
divb
into
jb
jge
out
out
stc
gs
cli
add
or
test
fsubs
dec
ljmp
dec
push
lock
sar
aas
ss
scas
add
