lahf
push
ja
js
ja
out
fdivl
mov
fidivs
ljmp
pop
ja
ja
xlat
fdivl
jns
ja
outsl
fdivl
insb
fdivl
mov
add
inc
iret
cmp
or
add
lods
jle
ja
mov
ja
xchg
ja
icebp
ja
ljmp
jns
icebp
ja
jo
ja
nop
icebp
ja
pop
icebp
ja
imul
sub
ja
xchg
ja
pop
icebp
ja
pop
icebp
ja
mov
ja
popa
icebp
ja
pop
icebp
ja
jge
ja
outsb
icebp
ja
mov
ja
jmp
icebp
ja
mov
ja
popa
icebp
ja
iret
repz
popa
icebp
ja
stos
icebp
ja
dec
hlt
ja
mov
ja
pop
icebp
ja
xchg
icebp
ja
add
add
cmpb
jl
scas
cmpb
jl
mov
cmpb
jl
fwait
cmpb
jl
cwtl
cmpb
jl
stos
cmpb
jl
movsb
cmpb
jl
xchg
cmpb
jl
pop
cmpb
jl
fiadds
jl
dec
test
cmpb
jl
nop
jl
jo
jl
lcall
pop
or
jl
scas
cmpb
jl
add
add
pop
stos
jl
sbb
add
divl
add
add
mov
jle
mov
jle
adc
jle
bound
jle
cmp
mov
jle
cwtl
aaa
jle
cwtl
aaa
jle
repz
outsb
cmp
call
aaa
jle
xchg
cmp
int
jle
leave
aaa
jle
nop
aaa
jle
xchg
aaa
jle
cltd
aaa
jle
scas
aaa
jle
imul
jb
je
arpl
mov
sub
push
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
push
pushl
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
mov
push
push
push
call
mov
call
push
push
push
mov
call
lea
push
push
push
call
add
mov
mov
push
push
push
call
push
push
push
push
push
pushl
call
pushl
call
push
push
pushl
pushl
pushl
call
push
push
push
push
push
call
pushl
pushl
push
call
add
pop
pop
jmp
lea
push
pushl
call
mov
lea
push
call
pop
push
lea
push
push
push
push
call
lea
push
pushl
call
jmp
push
call
xor
pop
leave
ret
push
mov
sub
mov
andl
andl
mov
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
andl
push
mov
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
push
push
push
pushl
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
pushl
call
pushl
pushl
push
push
call
add
cmpl
jb
mov
leave
ret
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
jmp
push
push
push
pushl
call
push
pop
pop
ret
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
push
lea
push
push
call
add
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
lea
push
call
call
call
movzwl
mov
mov
mov
mov
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
not
mov
pop
mov
or
mov
leave
ret
pop
incb
add
add
pop
and
and
pop
inc
add
or
adc
add
add
add
add
pop
sub
add
add
add
add
mov
arpl
rolb
add
add
sbb
add
adc
sbb
sbb
sbb
jecxz
cmp
fwait
das
inc
dec
outsb
jge
imul
dec
je
mov
test
fnstenv
sahf
addr16
clc
mov
add
push
je
cld
or
cvtdq2ps
pop
lea
mov
cld
mov
lock
leave
addb
mov
add
xchg
push
add
adc
add
inc
push
mov
inc
add
push
adc
loopne
mov
mov
adc
pushl
push
incl
mov
push
cmp
loope
pushl
and
cld
sahf
push
adc
or
add
stos
addl
lea
out
loopne
add
dec
add
lcall
call
adc
adc
xor
adc
add
pop
add
pop
sbb
add
add
sbb
inc
sbb
sbb
push
sbb
sbb
sbb
pop
add
sbb
add
mov
outsb
add
je
add
jb
outsb
outsl
inc
insl
fs
add
add
add
add
insb
fs
insb
add
popa
inc
je
fsubs
jae
jle
add
inc
xor
popa
add
pop
add
add
sahf
sti
add
add
out
dec
add
add
jle
add
add
add
ret
xchg
cmp
push
lods
mov
popf
cltd
cmp
sub
xor
enter
scas
mov
lods
mov
push
mov
imul
xchg
cmp
push
and
or
and
fdivrs
aad
in
adc
mov
sub
cli
and
aam
cmp
pop
loope
sahf
jnp
mov
or
pop
fidivrs
mov
nop
lock
xor
scas
pop
decl
jno
dec
out
pop
push
mov
in
xchg
dec
notl
int
les
mov
sarl
dec
nop
add
dec
cwtl
aas
mov
frstor
mov
dec
fcompl
xchg
dec
loopne
outsl
push
xor
mov
inc
incb
jbe
cltd
cmpsb
add
pushf
test
mov
mov
jbe
outsl
and
inc
pop
or
cmpsb
popf
call
insb
mov
dec
sbb
push
loop
mov
sub
addr16
jecxz
push
xchg
add
cmp
loopne
out
aam
xor
aaa
aas
pop
sbb
lods
je
mov
mov
inc
jno
cmp
test
inc
cltd
sarb
lahf
loop
fistps
in
adc
pop
repz
rorl
ljmp
sbb
fdivs
movsb
outsb
pop
sbb
in
call
das
and
jg
push
and
sub
mov
das
mov
pop
or
mov
repz
outsb
dec
rcrl
rcrl
icebp
and
js
lret
out
mov
js
dec
xchg
lods
in
ljmp
shlb
ficoms
cmp
dec
pop
icebp
adc
fdivrl
and
lock
mov
sub
cmp
inc
aaa
out
pop
dec
jns,pn
push
mov
call
das
pop
push
ret
insl
adc
clc
xchg
sahf
push
fsub
push
aam
mov
add
mov
or
xchg
repnz
add
cmp
dec
scas
ret
orl
cltd
dec
xchg
je
aad
cltd
jle
sub
xchg
push
mov
push
fwait
mov
sub
mov
in
inc
rcll
ljmp
imul
cmc
dec
pop
inc
icebp
loope
jp
push
jecxz
push
rol
out
sub
xchg
adcb
and
scas
inc
mov
adc
cmp
inc
arpl
cmp
jge
out
xor
imul
adc
xor
ret
mov
mov
jl
popa
loop
xchg
das
jnp
test
es
cmc
in
mov
or
and
ja
js
mov
mov
dec
inc
pushf
xchg
dec
mov
insl
dec
ror
jle
jo
stos
mov
xor
lahf
into
stc
fwait
scas
js,pn
inc
inc
idiv
out
push
leave
mov
push
fwait
xor
or
test
dec
jmp
pop
les
mov
pop
jecxz
daa
sub
and
fwait
xor
stc
int3
jbe
stos
xchg
add
lock
fs
popl
imul
fcos
mov
mov
cli
adc
xor
nop
xchg
xlat
andl
or
sub
nop
lahf
pop
aaa
or
ss
mov
test
and
push
push
mov
nop
das
icebp
lods
xchg
xor
mov
pop
push
dec
add
mov
ja
fldcw
mov
xchg
xor
dec
push
repnz
movsl
imul
sub
insl
aam
enter
pop
icebp
scas
loop
je
outsb
xor
fwait
dec
sub
dec
cmp
lret
sbb
mov
das
jp
push
fwait
popf
sti
or
lahf
pop
pop
mov
dec
mov
rcrl
sbbb
pop
fsub
pop
pop
push
adc
inc
popf
add
mov
sbb
pop
lcall
cmc
adc
ljmp
cmp
lahf
push
jecxz
rcr
inc
pop
push
push
fs
lcall
orl
mov
in
adc
cltd
jmp
hlt
mov
or
mov
cmp
notl
in
in
notl
test
adc
push
cmpl
out
xchg
fimull
arpl
das
cltd
dec
cld
repnz
hlt
pop
and
mov
dec
imul
insl
sub
test
je
mov
sbb
xchg
es
dec
add
icebp
int3
cmp
add
out
cltd
mov
aas
leave
jge
push
cmpsl
mov
icebp
mov
xchg
mov
mov
nop
fwait
lret
ja
insb
lcall
inc
rorl
inc
ficoml
in
adc
rorl
jb
cmp
fwait
insb
in
pushfw
lcall
sub
adc
test
sub
cli
xchg
dec
mov
sbb
xchg
rcr
cmp
test
rorl
xchg
shll
cmpsb
loopne
adc
adc
lret
enter
dec
sub
sub
xor
cmp
sub
jne
inc
fadds
and
sub
insb
xor
push
insb
nop
inc
cmp
test
popf
mov
pop
call
lcall
repnz
push
idivb
stos
movsl
mov
int
pop
jg
hlt
les
mov
xchg
xchg
push
aam
cmpsb
push
fcmovnu
mul
nop
sub
sub
faddl
scas
cmpsl
lock
clc
and
mov
jne
adc
fwait
cwtl
mov
imul
and
xor
dec
mov
mov
jae
dec
fwait
dec
cmp
dec
pop
jb
xor
cmp
pop
mov
xor
fmuls
inc
cltd
sub
fsubrl
out
push
rcrb
mov
ret
add
out
fwait
pop
fsubrl
adc
pop
pop
cld
fnstsw
mov
sub
sbb
pop
mov
xchg
insb
pop
mov
cmpsl
gs
adc
pop
dec
pop
imul
leave
pop
xchg
or
cmp
cld
bound
pop
xor
int3
pop
out
xchg
comiss
inc
lret
testb
mov
repz
inc
or
mov
mov
pusha
jbe
test
push
lds
shl
xchg
push
dec
nop
daa
push
add
lcall
mov
mov
pop
stos
sub
jns
mov
test
mov
arpl
pop
aam
in
andb
mov
adc
xchg
stc
pop
jle
lret
xchg
test
sub
lret
add
mov
sub
mov
sub
jne
mov
add
cmc
and
push
mov
fbstp
lock
mov
pop
jo
or
cmpsb
clc
movsb
push
xor
xor
arpl
sub
xor
repnz
jp
add
jb
mov
dec
xchg
and
or
sub
mov
mov
bound
xlat
das
sbbl
sub
out
or
push
sub
push
sbb
test
xchg
pop
cmp
jg
ljmp
mov
mov
std
imull
xchg
jb
dec
fsts
adc
stc
fistps
push
jecxz
repz
bound
mov
pop
push
call
dec
jns
enter
and
push
test
in
test
adc
sub
xor
andb
xchg
add
cwtl
and
jns
xchg
xor
xor
cmp
cmp
je
cmp
aam
cmp
lret
sub
jle
sbb
fsubs
test
cwtl
lods
cmpsl
push
stc
mov
xchg
lods
lcall
pop
mov
ss
cmp
jl
sub
push
fnsave
xchg
jp
mov
sub
je
adc
push
mov
popl
push
imul
push
in
addb
out
inc
out
loop
hlt
out
xchg
sbb
mov
sub
test
mov
mov
ds
push
clc
mov
mov
jns
fsubs
pop
movsl
or
cli
cmp
jae
in
xchg
lret
push
sbb
icebp
ret
pop
inc
gs
dec
je
loop
sub
out
iret
movb
dec
xor
pop
icebp
fsubrl
cmp
mov
jecxz
jne
roll
add
and
and
xchg
div
pushf
test
imul
dec
das
ret
mov
dec
inc
mov
add
dec
xlat
inc
ss
lret
cmp
jo
sbb
lcall
inc
rclb
scas
les
pop
mov
sub
sub
add
mov
push
mov
das
mov
mov
rcll
sti
scas
shrl
cmpsb
jmp
push
jge
rorl
and
add
add
fwait
mov
or
xor
push
ret
push
jg
fsubrp
mov
and
pop
push
imul
mov
add
jnp
add
mov
stos
test
add
or
cmp
pop
stos
jne
add
aas
mov
aam
loopne
xchg
jge
mov
cmp
arpl
bound
dec
mov
lods
loopne
dec
mov
arpl
mov
mov
mov
fstpl
jnp
sbb
std
push
cld
jae
sbb
movsl
addr16
movsb
jmp
callw
inc
clc
ss
add
jp
ljmp
mov
fistpl
jnp
fcmovnbe
dec
jne
fdivrl
into
stos
mov
cmpsb
mov
cmpl
stc
lock
les
les
jmp
inc
dec
sub
pop
pop
jge
xchg
shlb
or
jmp
pop
pop
aad
pop
enter
inc
cmpsb
inc
mov
andb
dec
or
test
jb
das
fdivrs
popf
push
fwait
or
cmp
nop
cmc
mov
popa
das
add
sub
loop
loop
jecxz
lock
jae
sbb
and
inc
cmp
mov
sub
std
jl
sub
sub
mov
mov
mov
dec
imul
shrl
rolb
pop
jp
xchg
pop
push
add
mov
in
pop
in
incl
push
iret
aad
add
scas
mov
jb
cmpl
scas
mov
ss
jb
divb
mov
mov
add
cmp
xor
outsl
in
lret
mov
add
jp
sbb
int3
fstl
std
xchg
mov
in
mov
stos
mov
inc
out
mov
or
sbb
das
push
imul
sbb
faddl
rcrl
cs
mov
inc
stos
adc
jecxz
mov
add
push
lods
pop
adc
lahf
jns
popf
call
and
inc
insl
jl
shll
lea
js
pop
ljmp
out
cs
pop
xor
lret
cmp
lods
iret
xchg
sub
movl
xor
repnz
shlb
push
cwtl
idivb
sub
adc
xlat
add
nopl
mov
fldenv
movb
fucom
sbb
xor
xchg
adc
push
inc
stos
movl
shll
stos
sub
mov
scas
xor
sub
scas
push
addb
xchg
jle
loop
jb
cmp
mov
pop
aaa
push
out
scas
pop
push
pop
cmp
xchg
sbb
js
pop
mov
and
dec
adc
cmp
pop
rcl
adc
test
insl
adc
jne
mov
pop
dec
je
adc
rol
push
ret
int
repz
adc
mov
icebp
repnz
jnp
push
dec
lock
mov
sti
mov
or
inc
mov
ljmp
movsl
jae
xor
xchg
jae
imul
mov
mov
sbb
leave
data16
dec
into
ljmp
fldt
int3
sbb
sbb
loope
test
subb
enter
iret
rclb
pop
iret
loop
jmp
push
sbb
scas
outsl
push
test
and
test
fnstcw
arpl
jmp
sbb
jl
xchg
adc
xchg
inc
or
fisubs
repnz
insb
filds
jl
lahf
and
test
pop
fimuls
mov
ret
jbe
jmp
fistl
xchg
jecxz
jbe
les
test
adc
into
lds
xchg
test
mov
icebp
out
lods
dec
adc
repz
push
mov
sti
adc
adc
clc
lods
sbb
std
cs
lret
lods
mov
hlt
xchg
stc
nop
push
inc
insb
insl
jne
xchg
xchg
out
mov
lahf
mov
cmp
scas
int
lahf
adc
pop
pusha
or
out
data16
jo
pop
nop
lahf
or
mov
mov
add
push
jbe
lret
or
in
test
cmpl
shll
das
faddl
outsb
jecxz
insl
cmpsl
push
adc
js
and
mov
mov
subb
loop
pop
add
mov
fstpt
cmp
das
lret
cs
imul
sbb
lahf
mov
pop
sbb
lret
in
cmp
adc
mov
push
dec
pop
dec
sbb
ljmp
push
push
xor
push
lea
shrl
lea
or
ret
mov
in
lret
xchg
in
and
push
inc
int3
adcl
pop
push
arpl
pop
pop
jl
mul
stos
idiv
jmp
and
insl
xchg
push
sub
jmp
cltd
test
push
xor
arpl
pushf
pusha
lea
xor
inc
pop
das
dec
mov
lods
cmpsl
add
xorl
out
push
ljmp
jne
jne
inc
je
sbbl
lcall
cld
ds
stos
xor
or
pop
jb
ja
insl
hlt
mov
add
test
call
push
cmp
adc
pusha
sbb
sub
ror
adc
pusha
ss
popf
test
sti
xchg
test
sarl
into
mov
mov
push
fdivs
push
rol
cmp
mov
sbb
bound
add
fildll
and
in
imul
mov
fcmovnbe
adc
push
inc
mov
cmp
pop
bound
push
xor
push
adc
jge,pn
jo
sub
movb
mov
inc
sbb
push
push
testl
test
loope
fcoms
repz
jbe
xor
jle
dec
test
jbe
popa
sub
fsubp
loope
aam
mov
aam
js
popa
sub
gs
inc
lcall
mov
bound
lret
pop
ja
pop
inc
ds
int
fs
push
sub
or
iret
push
inc
subl
nop
stos
adc
pop
push
sub
mov
stos
sbb
lcall
xlat
je
cmp
ja
add
or
addr16
hlt
insb
jp
inc
xor
ja
ret
lock
adc
fildll
sub
jmp
daa
or
sti
pushf
je
icebp
in
test
sti
js
mov
mov
scas
jmp
pop
mov
in
mov
sub
sub
or
sub
push
push
pop
loop
inc
test
push
sti
shrl
sbb
ret
cmc
pop
movsl
call
xchg
pop
mov
add
dec
add
shrb
push
fisubl
movsb
icebp
jbe
stc
pop
jbe
xchg
and
push
dec
sahf
push
dec
sub
adc
fbld
pop
lds
call
ljmp
lea
add
les
cmp
mov
push
daa
jbe
mov
popa
xchg
mov
loopne
jecxz
test
sbb
rclb
repz
mov
out
jmp
loop
out
xor
jno
pop
addr16
call
fwait
xchg
aad
cmc
xchg
gs
mov
xor
cld
dec
dec
xlat
movl
xor
popf
inc
loopne
iret
movsl
cmp
sahf
push
pop
loope
xchg
sub
inc
stos
dec
add
movsb
inc
rcrb
pushf
shr
xchg
ret
out
mov
jne
cmpsb
repnz
sahf
dec
loop
jle
xor
inc
pop
jne
dec
sub
pop
jne
jl
mov
mov
pushf
mov
inc
jne
lods
aad
mov
jbe
mov
push
pop
jle
or
lea
mov
orl
push
pusha
fldl
outsl
inc
push
add
lods
inc
lahf
clc
adc
adcl
or
cmp
adc
push
and
je
repnz
lret
es
int3
add
adc
jnp
test
cltd
jbe
lret
and
push
sub
cmp
mov
dec
shll
add
ret
iret
lret
out
je
in
and
adc
es
and
or
mov
xchg
adcb
inc
je
in
jno
bound
data16
in
mov
sub
inc
pop
stos
push
pop
inc
test
int3
mov
add
adc
mov
adc
jb
add
sbb
divb
dec
fisttpl
lret
sahf
inc
ret
dec
int
stc
push
pop
push
scas
xchg
sub
outsl
cmp
cmp
cli
imul
popa
or
out
lods
mov
sti
cmp
mov
mov
or
in
aad
out
adc
adc
test
jbe
xlat
je
jae
pop
je
inc
xlat
jne
loope
test
jg
aam
fucom
cmc
sti
lret
fstpt
lea
mov
cmp
pop
and
dec
lods
push
ret
test
sbb
jae
mov
adc
mov
jl
notb
pop
repz
fisubs
push
stos
sarb
in
mov
das
das
cmpsb
int
cli
sbb
and
jmp
and
sbb
and
push
and
sub
pop
cmp
pop
out
decb
adc
jmp
aad
mov
push
jo
gs
push
popa
aad
test
inc
or
arpl
lret
inc
out
loop
in
dec
lahf
dec
push
inc
sbb
dec
test
fldl
pop
out
aas
cmpsb
push
pop
mov
cmp
aam
push
repnz
jge
cwtl
inc
dec
lret
push
xor
sub
aas
cmp
push
aam
xor
add
inc
loopne
shlb
cmp
adc
stc
loope
pop
outsb
pop
lock
push
push
cmpsb
push
or
fidivl
sub
mov
addr16
xchg
pusha
imul
push
xor
xchg
lret
adc
xchg
cli
dec
flds
movsl
cmp
aam
fildll
call
decl
push
and
sbb
mov
jb
sbb
cltd
cmc
aas
popa
inc
sbb
inc
jge
pop
mov
aas
out
pop
addr16
pop
inc
cmp
jp
cltd
mov
xor
arpl
int3
out
stc
ror
das
mov
roll
xor
mov
add
mov
and
inc
jbe
notb
jecxz
repnz
leave
fldt
and
lcall
hlt
push
aad
enter
out
cmp
mov
xchg
hlt
jge
sahf
mov
pop
popa
jb
inc
hlt
stc
mov
sbb
adc
rcrb
xlat
xor
sbb
push
and
xor
rcrl
mov
stos
mov
mulb
mov
dec
sbb
cmp
push
mov
mov
in
push
dec
cwtl
out
dec
sub
jl
xchg
sub
insb
stos
insb
iret
xchg
nop
lock
aaa
cmp
push
cmp
xchg
mov
xchg
sbb
mov
lahf
xchg
filds
push
mov
xor
mov
sub
loopne
movsb
adc
jmp
mov
loope
adc
sub
xchg
fwait
mov
dec
ss
pop
cmp
rclb
cs
pushf
fdivs
ss
mov
mov
loop
and
sbb
leave
and
pop
js
dec
adc
cmp
fdivl
pop
frstor
mov
movsb
shl
mov
mov
xchg
scas
cltd
fsubl
dec
add
sub
fsts
hlt
jae
adc
cmp
dec
inc
shr
push
push
xor
pop
insl
bsf
jmp
xchg
aam
push
insl
push
fwait
mov
or
push
add
inc
xor
shlb
in
int3
jb
mov
sahf
inc
cld
or
dec
xchg
push
dec
push
fmull
or
test
sub
adc
scas
or
mov
and
jge
xor
lahf
movsl
cs
xchg
adc
test
mov
pop
repz
repz
sbb
xchg
mov
stos
mov
cmp
out
push
lea
stc
add
out
dec
adc
insl
hlt
incl
dec
mov
sbbb
js
mov
sub
add
push
pop
jae
inc
mov
test
cmp
pop
pusha
lods
rcrb
pushf
dec
adc
jne
inc
arpl
mov
jo
aad
adc
subl
bound
out
das
push
cmp
cmp
dec
icebp
mov
insb
adc
or
mov
out
outsl
mov
addl
mov
cmp
mov
lretw
xor
dec
into
jo
rorl
shrb
xchg
jmp
dec
movl
cmp
jmp
inc
scas
xlat
jmp
popa
mov
jns
std
inc
sti
popf
das
dec
mov
stos
xchg
pop
mov
jbe
mov
shrb
iret
out
add
add
add
add
add
add
add
add
add
incb
add
add
add
add
add
add
add
add
fiadds
add
add
add
add
xor
xor
xor
or
add
add
add
add
stos
stos
add
in
ja
mov
icebp
incl
incl
add
sub
orb
addr16
jne
or
add
add
mov
add
add
add
push
add
add
add
dec
add
add
and
add
add
outsl
add
add
add
xchg
add
add
add
addb
add
and
pop
gs
push
jae
inc
je
cld
je
popa
outsb
add
push
getsec
inc
mov
sbb
fmul
sub
cld
mov
in
mov
or
add
add
cld
inc
faddl
and
call
push
add
ret
push
add
mov
sbb
push
push
sarb
lret
mov
lea
add
shlb
cmpsl
adc
mov
pop
sti
add
lock
cld
push
add
clc
add
push
push
adc
std
test
and
inc
cld
or
adc
push
adc
call
add
cmp
clc
mov
sub
addl
inc
hlt
lock
in
push
inc
add
lock
add
add
add
add
add
add
clc
add
add
push
aaa
add
inc
cs
outsl
imul
xchg
test
inc
jo
jbe
je
arpl
and
inc
add
jb
addr16
jge
add
push
gs
imul
inc
inc
push
arpl
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xlat
popf
mov
inc
outsb
ljmp
lcall
ja
jmp
mov
sub
arpl
pusha
cmp
sbb
cmp
mov
dec
stos
xor
repnz
aas
movsl
xor
outsl
lret
mov
push
add
mov
push
add
lea
shll
pop
stos
fdiv
push
mov
sub
jbe
lea
int3
push
pop
push
pop
mov
in
cmp
sub
and
push
lret
insl
lock
in
adc
inc
jge
mov
pop
cmp
jo
lods
inc
std
das
repz
aas
stc
movsb
jmp
les
jp
inc
bound
enter
loopne
mov
mov
sub
adc
push
xor
addb
mov
sbb
xlat
stc
out
in
pop
fdivrl
sub
push
pop
pop
outsb
sbb
mov
inc
ret
pop
jp
decb
xlat
jl
ret
ret
test
inc
cmp
or
mov
xchg
ljmp
mov
mov
test
mov
mov
adc
outsb
cld
scas
fnsave
mov
fwait
xchg
cmp
cmp
gs
mov
push
into
ret
test
and
xchg
and
adc
int3
push
mov
inc
loop
fisubrl
movsl
mov
cmp
pop
mov
inc
sbb
mov
lret
sbb
repz
dec
stc
pushf
inc
dec
gs
adc
mov
aam
and
imul
xchg
dec
imul
in
lret
dec
inc
repz
cmp
mov
mov
lret
pop
xchg
aaa
movsb
add
xchg
push
mov
mov
cmpsl
mov
enter
push
and
add
jle
xchg
pop
in
pusha
mov
sbb
repz
adc
jo
frstor
jae
push
ror
test
jge
lcall
insb
aaa
movsb
jecxz
xchg
sub
pop
push
inc
paddsb
fyl2xp1
lcall
insl
jecxz
aad
gs
adc
mov
sbb
xchg
subl
mov
and
sub
or
inc
mov
cwtl
pop
sbb
xor
pushf
mov
mov
repz
icebp
dec
sbb
js
xchg
dec
sub
mov
fwait
add
popa
idivb
and
aad
xchg
or
data16
jae
hlt
in
adc
stos
daa
mov
movsl
insl
cmp
fcomps
xchg
jb
rcrl
sbb
in
sbb
int
lcall
jo
nop
stc
mov
leave
inc
adc
xor
les
iret
psubw
test
jp
adc
out
mov
push
iret
mov
xchg
adc
sti
ss
adc
xchg
dec
popf
sbb
or
jnp
pop
les
orl
add
inc
cmc
adc
adc
push
int3
fdivrl
cmpsb
xlat
int
or
push
dec
cmc
push
push
inc
sbb
dec
mov
and
jne
cmpsb
scas
leave
hlt
mov
xchg
lods
mov
scas
inc
fcmovnb
imul
test
fwait
adc
std
add
mov
xchg
push
mov
mov
ss
add
sbb
sti
das
lds
rolb
and
cmp
lret
xchg
mov
xrelease
out
pop
jbe
pushf
in
aam
shlb
mov
cmp
xchg
sub
xchg
cs
xchg
add
repnz
bound
cmp
add
call
les
and
mov
leave
inc
xchg
mov
jmp
mov
xchg
in
fcmovu
inc
call
sbb
dec
push
mov
in
and
jb
or
adc
sub
mov
cltd
scas
and
imull
xchg
fnstsw
in
shlb
mov
lahf
fidivl
push
daa
sbb
rcrl
inc
call
das
je
int3
popa
js
imul
int
pop
xor
mov
fildl
xchg
les
sbb
inc
mov
inc
sahf
divb
cmp
cmp
jmp
sti
int3
movsb
xchg
mov
pop
insb
ret
ds
divb
mov
out
push
mov
arpl
sarb
and
pop
add
scas
popf
out
pusha
or
xchg
insl
sub
lret
aas
xlat
jmp
push
mov
iret
mov
mov
mov
mov
data16
jnp
cltd
nop
pop
jl
flds
addr16
lcall
pushf
xor
xchg
mov
in
and
xchg
adc
cmp
cmp
int
ret
fisubl
ss
in
leave
mov
inc
pop
addr16
inc
push
lret
dec
arpl
fwait
stos
cmpsl
xchg
les
pushf
sbb
bound
mull
stos
enter
cmp
sarb
push
loopne
loopne
or
adc
and
pop
add
lods
out
bound
inc
out
add
stos
dec
dec
inc
addr16
in
sub
std
or
cmpsb
push
popa
sti
ss
mov
mov
stos
mov
inc
int3
dec
push
push
daa
mov
and
add
inc
sbb
mov
scas
mov
popa
push
test
xor
sahf
push
mov
ficoms
sbb
lock
cmp
dec
xor
sbb
les
mov
addr16
iret
xchg
xor
mov
mov
or
mov
push
push
jmp
jbe
jl
jl
loopne
dec
mov
aas
popa
jp
or
or
roll
dec
and
inc
mov
cmp
mov
sbb
dec
loop
and
xor
cwtl
lea
fstpt
in
daa
pop
dec
jg
add
mov
in
pop
out
call
shll
or
sub
decl
ds
aad
ds
mov
jo
dec
inc
cli
sub
inc
pop
adc
push
rclb
xor
subb
xor
shrb
dec
shl
stc
mov
sbb
inc
rcrb
adc
ss
push
or
lret
in
or
jo
or
mov
lds
and
clc
dec
xchg
push
shrb
cmpl
xchg
fs
xchg
sbb
cmpsb
mov
popf
dec
inc
lahf
xchg
jo
xchg
popa
mov
in
inc
mov
add
cli
dec
jmp
or
jg
xchg
mov
gs
test
push
test
inc
add
or
pop
scas
std
xchg
inc
decl
push
fistpl
cmp
cmp
in
mov
fistpll
adc
or
mov
mov
enter
out
leave
mov
fs
je
cltd
insl
out
cwtl
push
scas
cli
dec
pop
jmp
insb
dec
pop
aaa
add
outsb
sub
sub
push
in
ficomps
push
inc
adcb
stos
add
in
jo
add
nop
lds
pop
adc
and
add
and
jbe
xor
sub
dec
fimull
insb
xchg
test
test
pusha
adc
lods
sar
push
in
cmp
pop
adc
cmpsb
adc
cmc
inc
mov
jp
push
popl
pop
adc
ds
lock
add
sbb
fldl
adc
fistpl
adc
push
mov
add
out
fucompp
adc
cmp
mov
mov
scas
addl
popa
jp
sbb
stos
pop
adc
sbb
imul
lret
enter
ja
pusha
pop
inc
jns
xchg
dec
les
lds
out
mov
rolb
stc
cmpsb
sbb
inc
push
adc
xchg
jae,pt
adc
push
sahf
sub
fimuls
push
hlt
aam
lret
scas
sbb
std
mov
sub
je
loope
push
sbb
mov
inc
xlat
xchg
mov
mov
in
inc
push
mov
jo
shlb
rorb
mov
xor
cmp
mov
call
outsb
mov
sbb
push
orl
pop
adc
mov
or
scas
mov
jge
dec
mov
dec
cmp
mov
lret
mov
xchg
das
cmpl
xchg
or
pop
inc
mov
pop
popa
mov
cs
loopne
inc
jne
and
fsubrl
pop
lock
cwtl
les
mov
jo
fdivl
das
or
jg
enter
sub
ljmp
in
and
inc
jle
sbb
push
xor
in
repz
int
add
fmull
cwtl
stc
aad
stc
ljmp
mov
jmp
jecxz
or
mov
mov
add
mov
sub
sub
das
data16
pop
inc
ja
sub
or
in
xchg
enter
test
jle
scas
bound
dec
lock
lods
in
call
mov
test
pushf
cmpsb
mov
cmpsl
cli
outsl
mov
add
or
jne
bound
icebp
bound
mov
addl
adc
js
sub
xchg
shrb
add
ret
shr
movsl
aaa
and
test
add
xor
xlat
shll
sub
repz
int3
inc
popl
mov
dec
mov
hlt
mov
mov
stos
jb
mov
clc
sub
dec
lds
popa
mov
xchg
mov
xchg
cmp
inc
xor
fs
and
fldenv
push
repz
lds
incl
xlat
cmp
sti
rcrb
cmpsb
and
sbb
xchg
lret
test
jg
stc
add
mov
and
gs
xchg
mov
jecxz
aaa
xor
cmp
fcomps
sub
inc
add
outsl
lea
cmp
call
bound
popa
lock
shl
out
add
icebp
int3
orb
stos
addr16
cwtl
xchg
xor
rcll
fstps
and
out
in
adc
push
dec
fisttps
pushf
push
out
call
mov
dec
add
stos
stos
and
or
add
cmp
lret
or
jno
sbb
js
push
hlt
and
enter
and
int3
int3
fisubs
sahf
sahf
int
pop
mov
into
imul
faddl
jb
in
inc
push
insl
mov
lods
dec
cld
pop
push
cmpsb
in
push
into
and
and
jne
xchg
shlb
aam
out
mov
mov
and
inc
icebp
scas
pop
mov
in
adc
add
mov
int
push
repnz
or
popa
mov
mov
int
mov
lock
adc
insb
sti
push
ret
aas
addr16
inc
decb
aad
or
lock
shrb
scas
sbbb
lods
fisubrs
outsb
fsubr
es
insb
cmp
pop
cmc
mov
sub
lock
mov
add
cli
aam
inc
mov
imul
adc
shlb
insl
iret
pusha
in
in
arpl
inc
gs
sbb
or
cmpsb
test
mov
dec
jecxz
push
jle
out
lret
iret
faddp
dec
mov
lods
stos
cmpsl
inc
adc
sub
sub
mov
int
lock
jg
inc
lret
aaa
repz
repz
and
insb
negb
and
or
mov
insb
iret
icebp
dec
jmp
pop
mov
out
dec
pop
ss
das
add
jge
sub
out
xor
and
adc
lahf
inc
xor
mov
sub
xchg
je
in
push
jnp
or
repnz
mov
fstl
xchg
ficoml
daa
adc
or
cmp
lret
lds
sub
int3
mov
das
repnz
mov
arpl
push
cmpsl
aaa
jle
lret
movsb
aas
pusha
or
out
adc
xlat
xor
dec
cmp
clc
repnz
rcrb
jg
push
fdivs
push
pop
adc
sbb
jge
loope
add
aad
pop
push
insl
adcb
adc
lret
add
and
divl
rcl
fs
xchg
lcall
xor
icebp
ror
adc
or
xchg
inc
xchg
xchg
add
cmp
ja
push
insl
popl
test
add
ret
pop
sub
imul
leave
cmpb
addr16
pop
fcoml
lods
int
cwtl
push
lahf
xor
loopne
dec
ret
jp
in
outsb
cld
mov
outsb
add
rorb
loopne
into
sub
mov
sti
or
push
lock
push
out
sbb
fisubrl
dec
jmp
and
fldenv
cli
cmp
xchg
push
mov
fwait
ja
out
subl
pushf
mov
push
repnz
jbe
mov
cmp
movsb
aaa
jb
mov
loopne
mov
adc
cmp
inc
ret
andb
les
sub
xchg
push
sub
pop
cmpsb
mov
pop
testb
test
sub
loope
jecxz
cmp
pop
out
outsl
mov
pop
fwait
lahf
leave
test
cmpsb
dec
imul
xor
and
push
fsts
push
sub
mov
cmp
ror
sbb
pop
es
add
sub
pop
mov
scas
jae
push
in
inc
scas
call
repnz
add
adc
mov
adc
movaps
in
lahf
dec
sbb
cmp
aad
and
inc
mov
xchg
xchg
int3
lock
fildl
mov
add
jmp
int3
roll
rcrl
mov
pop
xchg
je
mov
lea
loop
jo
negl
push
dec
push
sub
cmpsl
std
das
jb
pop
ljmp
and
fstl
pop
lret
cld
mov
push
cli
jae
xchg
fists
sub
insb
push
mov
cmp
mov
insb
pop
in
jecxz
mov
fildl
pop
inc
cs
psubsw
in
jae
and
les
mov
dec
cmpsb
lret
or
daa
sbb
push
leave
jne
or
aam
jo
adc
inc
or
add
fistpl
out
mov
push
les
je
dec
and
pop
test
dec
dec
insl
das
mov
test
decl
test
ret
lret
in
into
mov
movsb
xor
xchg
adc
rclb
pop
xchg
or
rorl
lcall
xor
sbbb
clc
mov
jle
inc
pop
cmp
sbb
fstpt
pop
icebp
jl
fsubrl
iret
xor
sbb
lcall
packuswb
call
scas
jmp
movsl
loopne
xor
lea
mov
pop
int3
sub
jo
add
lock
js
int
pushf
cmpl
push
mov
mov
std
in
mov
iret
dec
inc
insl
lock
test
mov
xor
les
outsb
je
mov
pop
mov
and
xchg
push
mov
pop
and
add
cwtl
mov
push
pop
inc
add
cmp
sti
push
repnz
insb
neg
gs
mov
sbb
push
gs
push
cli
cmp
mov
gs
fists
mov
repnz
cmp
pop
fwait
jnp
push
sub
jl
int3
and
sub
loope
data16
xlat
js
out
leave
scas
ja
cmc
push
pop
xchg
enter
sbb
jbe
or
mov
int
leave
sbb
in
rcrb
mov
mov
jecxz
cmp
cli
sub
sbb
jl
cmp
mov
addr16
aad
iret
pushf
inc
or
mov
jbe
jnp
fs
jge
es
mov
int
adc
mov
movb
incl
sub
imul
inc
shl
pop
xor
sbb
mov
inc
xor
repz
pop
inc
fbld
in
xorl
xor
popf
shl
roll
or
mov
mov
int
jne
jle
test
mov
jmp
and
xchg
or
and
adc
sub
sub
and
aaa
xor
decb
mov
jbe
lea
jbe
nop
ja
mov
adc
inc
push
outsb
js
mov
cmc
or
aam
dec
add
mov
adc
lahf
add
icebp
xchg
xchg
xchg
clc
in
mov
popa
mov
or
mov
test
inc
pop
out
mov
add
xchg
push
pop
push
popa
pop
movsl
mov
mov
idivl
cmp
addr16
sub
xchg
xchg
sti
xchg
add
pop
mov
gs
pop
js
pop
xor
movsb
cmp
mov
jmp
xorb
push
xlat
imul
ds
gs
lahf
add
mov
popf
ret
pop
mov
sbb
mov
je
lret
gs
jno
fadd
loopne
insl
out
mov
adc
xchg
cmpb
jecxz
cmp
mov
push
mov
and
fnstcw
movsl
lcall
xchg
xor
push
mov
mov
mov
mov
ja
cmovp
and
xor
xchg
aam
std
test
pop
icebp
stc
faddl
lahf
outsb
and
cmp
mov
shrb
push
mov
fcoms
mov
xchg
push
test
outsl
push
sarb
push
push
mov
jno
outsl
and
lahf
xchg
sub
mov
add
adc
sbbb
xchg
out
daa
daa
xor
sbb
outsl
xchg
and
adc
roll
xor
aaa
pop
aam
adc
sbb
das
xchg
test
mov
push
neg
adc
div
fisttpll
rcll
out
cli
mov
test
orb
xor
lods
jp
jmp
jmp
popa
icebp
les
sub
stos
sub
fisubrl
sbb
add
xchg
mov
test
sarl
mov
sahf
cmp
dec
push
pop
lcall
ss
sub
push
scas
xchg
xchg
sbb
test
nop
and
daa
inc
jmp
mov
test
jle
int
add
pop
pop
dec
inc
push
xlat
scas
fldenv
stos
pop
scas
cmpb
pop
dec
repz
sub
mov
stos
popa
notl
jns
fidivrl
adc
mov
xchg
dec
nop
sub
jne
sub
daa
adc
cmc
adc
sbb
jae
shrl
in
mov
leave
or
gs
adc
dec
psllw
nop
jp
push
or
pop
push
xchg
jmp
dec
dec
stos
xchg
add
call
es
xor
xor
aad
fmul
outsl
js
outsl
fldl
sahf
movsb
outsl
inc
cmp
inc
fcmovnb
insl
mov
mov
mov
mov
mov
jg
jns
inc
daa
mov
insl
sub
cmp
xor
jle
in
push
int
xor
negl
jg
lahf
call
pop
pop
jb
xor
mov
pop
pop
xchg
push
std
mov
sbb
leave
mov
lods
mov
sahf
ret
cmp
flds
mov
bound
xor
sbb
aad
cmp
adc
in
stos
ds
imul
pop
les
pushf
pop
cmp
and
dec
lahf
xor
inc
lds
inc
ret
pop
xlat
int
cmp
sub
es
inc
mov
jg
pcmpgtd
daa
sbb
cmp
mov
loope
lcall
movsl
mov
daa
push
adc
pop
jnp
lods
imul
dec
out
add
xor
shrl
ss
cmpsb
lods
pop
xchg
popf
cmp
xchg
push
mov
arpl
lock
je
xchg
dec
lock
cmpsl
lret
ss
jmp
in
movl
mov
mov
pop
add
stc
sub
jg
rep
or
push
xor
or
out
shll
jns
idiv
cmp
and
pop
repnz
xchg
adc
popf
inc
je
xchg
cmp
sub
and
and
sub
pop
sub
mov
or
imul
inc
xchg
mov
or
xchg
dec
pop
lock
filds
push
mov
aad
cmpsb
inc
adc
ja
add
mov
xchg
mov
mov
jne
mov
dec
cmpsb
xor
dec
and
insl
divl
iret
jmp
xlat
mov
and
sbb
movsb
sub
sbb
loopne
ljmp
imulb
sbb
mov
cmp
loope
cld
std
pop
inc
xchg
cmpsb
pop
cmp
pop
xchg
pop
and
bnd
push
lds
or
or
scas
loope
mulb
push
sbb
dec
mov
aam
mov
cmp
icebp
mov
fwait
add
frstor
mov
add
bound
fnsave
cmp
stos
sbb
push
icebp
mov
notl
or
or
fistpl
xor
mov
sbb
push
push
and
daa
sahf
xor
dec
push
andl
adc
cmpsb
fistps
inc
in
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
push
dec
add
add
dec
add
add
add
in
add
add
add
add
je
add
add
sub
add
ljmp
xrelease
add
add
add
and
ljmp
add
add
add
add
add
add
lret
add
add
add
add
add
add
add
pop
add
add
imul
add
pop
dec
outsl
pop
push
mov
and
sti
fidivl
add
sahf
add
andnps
hlt
xchg
mov
mov
push
push
lea
add
jne
jne
lcall
lea
rclb
push
test
add
maskmovq
mull
add
mov
mov
in
add
push
add
mov
incl
call
in
add
add
loopne
add
adc
outsb
insb
add
call
call
decl
std
loopne
decl
adc
adc
push
decl
inc
test
decl
mov
stc
cwtl
jne
clc
jg
loopne
jne
add
lea
je
call
fwait
pop
add
add
add
add
enter
inc
jp
imul
inc
dec
gs
shlb
je
mov
dec
jae
add
add
je
dec
sub
fs
add
insl
jne
popa
outsl
dec
leave
jae
push
gs
push
jbe
cs
arpl
gs
add
cmp
add
add
add
add
mov
add
add
add
add
fadds
add
add
dec
lea
fldcw
jle
sub
xlat
rclb
adc
xchg
aam
mov
xchg
aam
mov
mov
push
inc
std
cmp
ss
sub
sub
adc
sti
adc
clc
ss
cs
mov
jb
out
ss
bound
ficoml
mov
popf
sub
popa
stos
sbb
arpl
hlt
pop
cmp
mov
in
lds
aaa
out
repnz
lea
shrb
xor
sbb
fildll
push
data16
inc
mov
fstps
jmp
dec
push
add
rcrl
inc
jl
cmp
in
adc
lret
sbb
mov
jno
cmpsl
imul
push
fdivrs
dec
sub
adc
int
repz
inc
ja
sub
addl
movsb
into
outsl
stc
cwtl
mov
cmp
mov
mov
add
cmp
mov
jnp
fcoml
fbstp
mov
xchg
sbb
adc
jp
and
ds
and
mov
js
mov
or
adc
cltd
pop
xchg
push
sub
or
shrl
fs
sti
xchg
sub
pop
in
pop
or
lods
xor
jecxz
or
jnp
loopne
jne
ds
stos
lret
cmp
jns
stc
movsl
jge
inc
push
mov
stc
pop
sbb
imul
sub
cmp
in
or
scas
in
out
fdivr
imul
add
cltd
mov
popf
fldenv
imul
addl
jp
rol
in
imul
jmp
aas
pop
enter
sub
sbb
aas
inc
inc
dec
inc
sbb
lret
stos
cmp
xor
pop
mov
sub
inc
js
sbbb
sub
xchg
aad
clc
in
out
ljmp
cli
data16
mov
push
adc
jp
ret
jmp
subl
popf
cmp
enter
ret
jno
jle
int3
pop
iret
enter
cld
icebp
outsb
repz
xchg
testl
out
adc
pusha
in
jbe
add
imul
sbb
or
std
ret
sub
daa
outsl
shll
cltd
lds
cwtl
pop
cmpsb
adc
testb
testl
inc
cs
mov
daa
mov
aaa
inc
or
xchg
out
mov
jg
das
test
jnp
fxch
dec
jg
insl
xlat
mov
push
jp
ret
or
push
adc
mov
sub
jecxz
jge
add
mov
mov
jmp
sub
int3
sbb
jecxz
pop
repnz
aam
sub
mov
imul
mov
popf
add
xchg
repnz
js
inc
sub
jecxz
jle
jle,pt
cmc
scas
mov
fimuls
xchg
jge
xchg
mov
cmp
xor
popa
lret
les
outsl
add
push
shrl
cmp
ret
aad
test
ja
push
fisubrs
sub
mov
mov
out
lods
movsb
cmpsb
shrl
inc
out
push
out
lock
sub
lds
pop
dec
xchg
push
sbb
sbb
and
ja
dec
imul
sbb
stos
jo
xor
jnp
jle
iret
sarl
subl
jb,pt
sub
adc
push
ret
sbb
int
test
das
add
pop
cwtl
sbb
out
sbb
ljmp
aam
leave
adc
pop
and
jecxz
les
cli
xlat
cmpsb
xorl
movsb
bound
ss
or
dec
ja
mov
xor
add
je
xor
shlb
jp
leave
add
mov
cmp
inc
cmp
nop
andl
lock
push
clc
mov
push
sub
inc
sub
xlat
ljmp
sbb
clc
test
cmp
and
cmp
and
les
add
pop
out
sub
cmp
jl
sub
ret
push
jge
sub
mov
adc
int3
stos
and
scas
inc
repnz
leave
mov
fisttps
sbb
mov
aad
mov
je
aas
shll
cmpl
pop
scas
loop
adc
sub
test
mov
lcall
repnz
pop
xchg
sub
icebp
cmp
mov
mov
cmp
fbstp
popa
lcall
shlb
jbe
xchg
xchg
stos
push
test
cmp
add
inc
mov
mov
aam
cltd
mov
cmp
push
out
decb
xchg
add
ret
mov
xor
mov
ret
out
jg
iret
xor
and
sbb
cltd
es
mov
pop
xor
pop
adc
push
xchg
or
add
sub
mov
jp
fisttps
adc
fdivrs
iret
push
dec
fs
xchg
pop
aad
fadd
jo
mov
cmp
pop
mov
lcall
xchg
jg
cmp
push
js
sahf
mov
mov
dec
xor
in
sbb
stos
dec
mov
jl
shll
push
fstl
adc
adc
and
dec
mov
shrb
into
mov
push
xor
inc
in
hlt
jne
loop
pop
scas
sti
in
icebp
sub
dec
cmpl
and
stc
out
cs
or
mov
pop
mov
test
cmpsl
loope
sti
rcr
and
dec
fidivl
aad
xchg
pop
gs
roll
js
lds
loop
and
mov
jnp
int
cmpsb
sub
sahf
insl
push
int
pop
sbb
push
rdmsr
popl
gs
leave
sti
decb
add
bound
inc
inc
mov
sub
pop
pop
sub
rcrb
call
test
int3
movsl
xchg
dec
lods
mov
jecxz
cltd
fwait
lds
call
dec
xchg
jb
test
sbb
mov
gs
push
and
mov
shll
sub
push
xchg
mov
inc
js
cwtl
mov
cld
dec
insl
iret
ja
shl
popl
ret
pop
or
cs
das
lcall
or
jge
inc
lods
out
pop
cmp
mov
dec
sub
xchg
mov
jmp
ret
xchg
mov
out
push
add
or
mov
mov
cld
xchg
dec
outsl
xor
and
test
je
iret
sub
mov
out
jne
std
lcall
je
lea
adc
cltd
xchg
shlb
push
call
mov
popa
scas
sbb
fdivrp
testb
test
es
and
push
sbb
sub
sbb
cmp
add
jae
and
int3
push
ret
mov
sub
inc
imul
push
nop
ret
shlb
ret
int3
ja
fiadds
jle
cmp
fwait
or
dec
dec
mov
clc
call
add
sbb
rolb
fstpt
insb
and
inc
ret
sub
jge
cmpsb
push
bound
sbb
xchg
popa
push
ljmp
add
push
loope
pushf
pop
imul
ret
mov
loop
repz
ficompl
mov
or
add
jae
out
sub
ret
adc
popf
xor
mov
cmp
jle
std
dec
out
sub
or
xchg
shlb
cwtl
mov
cmp
mov
mov
lds
in
popf
adc
mov
sarl
dec
mulb
and
ss
out
add
scas
or
jo
cmp
sbb
dec
addb
in
mov
daa
add
mov
int
mov
pop
pushf
imul
push
in
or
aas
pop
std
repz
mov
jbe
push
push
xchg
cltd
push
push
mov
mov
adc
lock
lea
cmpsl
jp
xor
and
pop
outsl
ljmp
sti
xchg
cmp
jno
imul
sub
adc
das
cmp
movsb
dec
xor
test
sub
js
push
sarl
adc
fstpl
adc
sbb
add
cmpsb
outsb
or
sbb
jbe
fidivl
das
sahf
je
shrb
jnp
jmp
cmpsb
scas
in
fucompp
sarl
sub
mov
insl
icebp
cld
sar
xchg
inc
dec
push
jle
sub
ljmp
push
mov
dec
mov
push
inc
into
lret
xlat
test
xlat
jge
into
in
fdivrs
push
lock
jg
movsb
jg
aad
daa
push
or
int3
dec
jno
arpl
jg
cld
fs
ret
xchg
outsl
jb
inc
test
mov
push
idivb
pop
shl
es
gs
test
call
aam
orb
fsts
aam
das
and
lret
aam
add
or
cmp
adc
adc
and
mov
loopne
and
lock
sti
push
add
inc
cwtl
insl
int3
into
pop
scas
rcll
fdivrl
arpl
push
bound
fdivrl
sub
in
test
jns
mov
inc
add
dec
and
daa
into
sub
add
movsb
pop
dec
sub
jl
std
adc
cmpsl
sbb
orl
in
sbb
sahf
cmpsl
stos
mov
cmp
cwtl
dec
jmp
xor
roll
push
paddsb
icebp
or
pop
xchg
pushf
repnz
dec
mov
pop
cltd
push
pop
insb
fadd
inc
dec
shll
enter
repz
adc
cmp
xchg
jno
dec
pop
cmpsb
sub
scas
inc
out
mov
push
enter
roll
test
loop
push
pop
call
jg
and
fiaddl
cmpsl
call
aad
adc
dec
add
sbb
shrl
fbld
insl
inc
or
in
mov
insl
dec
or
iret
aaa
enter
iret
aam
insb
push
test
sbb
movsb
inc
ljmp
iret
sahf
mov
aas
mov
adc
inc
mov
repnz
cli
and
mov
rcrl
ror
out
mov
or
test
mov
lods
insb
mov
and
pop
jge
popa
inc
les
mov
daa
adc
in
mov
sbb
pop
pop
cltd
push
pop
cmpb
pusha
dec
fcompl
jmp
pop
jmp
jae
or
scas
out
das
sbb
in
out
pop
jge
xor
jl
lcall
pop
in
fwait
cli
xor
adc
rcrl
test
sub
add
lcall
ja
and
dec
or
shr
ss
insl
or
mov
adc
jmp
dec
or
pusha
pop
xlat
xchg
mov
enter
jb
aas
iret
or
inc
lcall
dec
subb
psubusw
mov
lret
sub
into
andl
nop
loop
cld
xor
out
test
inc
mov
sarb
adc
out
sub
jge
scas
fnstcw
mov
icebp
sub
fcoml
mov
ss
jae
mov
fsubrs
je
repnz
mov
fidivrs
imul
ljmp
dec
jnp
cltd
loope
iret
cmp
das
ficoml
add
cltd
pop
ret
sbb
daa
jno
push
fcmovnu
mov
adc
cld
and
dec
inc
movsl
je
cmp
adc
loopne
iret
cld
imulb
sbb
das
lea
nop
or
push
pop
movsl
or
imul
test
test
add
test
add
popa
cmp
loope
loop
sub
mov
dec
pop
mov
orl
jae
push
loopne
add
cmp
or
cli
add
push
or
xchg
xchg
insb
add
lcall
dec
lock
mov
cmc
dec
dec
xchg
xchg
and
jae
ret
fimull
ds
inc
jnp
lahf
out
in
mov
add
and
pushl
notl
or
fsubrs
cmp
cmpsl
outsl
ret
dec
mov
inc
outsl
je
jns
xor
aaa
cltd
dec
fistpll
iret
jbe
add
cmpsl
and
movsl
cmpsl
add
pop
setnp
cwtl
pop
nop
adc
in
faddl
and
or
jge
outsl
das
cmp
push
jg
shlb
jecxz
dec
pop
test
mov
or
jbe
dec
lea
mov
mov
pop
sub
fwait
and
mov
inc
inc
insb
stc
lods
mov
popf
stos
or
and
and
and
or
add
cmp
out
adc
gs
fdiv
lahf
sub
sub
cmp
out
or
xchg
add
mov
int
or
fs
cld
int
fnstenv
aas
xchg
inc
cmp
mov
push
ret
cmp
inc
fcomip
cltd
xchg
add
pop
xchg
push
mov
or
xor
daa
mov
lahf
fldcw
dec
dec
in
mov
xchg
or
mov
imul
push
jo
push
xchg
adc
pop
xchg
push
push
test
add
cmp
push
jmpw
mov
sub
cmc
lods
and
push
mov
pop
gs
push
mov
arpl
jmp
or
mov
push
in
scas
jmp
pushf
jge
mov
xor
pop
scas
dec
leave
sbb
xchg
int
pop
push
hlt
or
mov
mov
lock
imull
into
fsubrp
pusha
shlb
sarb
out
rcr
insl
xchg
mov
xor
daa
fmul
cli
gs
cmp
fildl
ret
jg
dec
pop
mov
xor
push
daa
pop
jo
ss
mov
mov
aas
mov
dec
dec
cwtl
add
adc
xorl
addr16
lds
movsb
mov
dec
xchg
loope
push
sahf
pop
cmp
loop
inc
sbb
js
neg
cmp
xchg
xchg
rcrl
pop
pop
jmp
popa
sub
leave
lret
lahf
xor
aad
loop
xchg
sbb
mov
mov
mov
loopne
or
mov
add
je
scas
lea
js
and
sub
jp
push
push
mov
add
imul
shrl
jnp
xchg
cmp
pop
or
cs
mov
pop
or
js
frstor
cli
and
arpl
xchg
add
test
pop
pop
pop
jno
push
push
dec
aas
and
insb
lds
dec
jns
dec
stos
std
add
lret
arpl
mov
mov
ljmp
cli
out
mov
in
in
aaa
mov
loopne
adc
aas
adc
dec
iret
xlat
push
adc
xor
ficomps
add
out
sub
or
insb
out
dec
mov
inc
ds
push
and
jg
jmp
push
and
pop
pop
insl
andl
stc
idivb
jmp
jb
xor
aam
test
sbb
or
xchg
add
aam
sahf
mov
fs
mov
mov
mov
mov
ljmp
mov
cmpsb
mov
cmpsb
mov
xchg
negl
cli
rcrl
mov
jns
repz
dec
inc
hlt
inc
add
fsts
in
or
inc
adc
xchg
xor
scas
sub
jb,pn
xchg
bound
mov
out
pop
jle
stc
lret
negb
testb
mov
lock
adc
insl
mov
jp
sub
mov
jg
notb
bound
enter
popf
scas
mov
adc
xor
mov
repnz
xchg
aaa
cld
jle
xlat
sbb
mov
mov
hlt
insb
pop
sbb
out
repz
and
mov
jbe
mov
mulb
hlt
addr16
lea
bound
xchg
pop
dec
push
jg
pop
mov
popf
out
jmp
sbbl
ljmp
jg
pop
loop
jbe
test
pop
scas
cmp
adc
pop
fnstsw
pop
test
jno
sub
movsb
inc
clc
call
mov
cmp
sub
lock
add
adc
incl
dec
pop
mov
mov
dec
jge,pt
rcll
les
push
sub
cmp
dec
ret
mov
int
pop
sub
add
cld
out
test
mov
mov
lahf
fdivl
adc
stos
out
adc
adc
jae
lahf
dec
xor
lret
pop
movsl
stos
lods
out
inc
dec
ss
pop
mov
xchg
pop
aaa
add
push
fildl
fildll
mov
or
mov
call
shrb
push
cltd
mov
dec
mov
jge
mov
leave
bound
xchg
testl
ret
jge
rcr
sub
movsb
pusha
daa
aad
or
test
mulw
jo
or
mov
add
dec
adc
dec
adc
mov
shrb
stc
lods
sbb
sti
push
sub
in
inc
mov
pop
sub
or
stc
sub
mov
outsl
stos
jno
popa
cmp
sub
xor
mov
and
test
mov
lahf
push
mov
xlat
mov
inc
pop
adc
rol
sub
mov
mov
push
stos
cmpsb
pop
out
lret
mov
test
adc
insb
push
push
add
cltd
es
ja
dec
fcmovne
lret
scas
mov
scas
sbb
sub
cmpb
jnp
out
gs
stos
mov
or
adc
out
jnp
jnp
and
cmp
push
push
lret
das
xchg
add
push
shl
lret
inc
jle
leave
lock
and
mov
inc
in
repnz
outsb
daa
repz
inc
arpl
mov
jns
and
mov
dec
xchg
mov
adc
jnp
lcall
jo
pop
fildl
push
ds
jle
mov
push
adc
popa
inc
das
ret
cmpsl
inc
adc
aad
out
daa
push
sahf
mov
scas
xchg
or
push
int
lahf
xchg
test
add
push
mov
xor
cltd
inc
movsl
int3
lods
rcll
xchg
inc
shrb
in
jne
xchg
rolb
lcall
mov
xchg
cmp
mov
or
mov
sahf
inc
sahf
inc
pop
pop
add
and
clc
inc
sub
das
std
cli
xor
std
cwtl
and
push
fldcw
repz
outsb
inc
fstps
aam
aaa
lock
or
sbb
mov
mov
movsl
and
push
ret
lods
stos
lds
into
cmp
inc
rcrl
pop
inc
repz
mov
ja
sahf
sbb
jns
mov
jb
shrl
movsl
mov
push
mov
addr16
adc
pop
ja
leave
push
sub
push
rclb
arpl
lods
aam
jne
inc
or
mov
and
daa
nop
dec
xchg
ret
dec
test
mov
fbld
jl
aas
out
loop
stos
and
sub
sti
cmc
add
hlt
xor
sbb
push
mov
inc
cmp
fwait
push
rcr
sub
xor
fistl
mov
dec
adc
xor
pushf
lret
dec
mov
pushl
sbb
sbb
push
rorl
fsts
or
sbb
cmpsl
cmpsl
cmp
or
in
ljmp
adc
push
jnp
push
lods
lret
and
leave
dec
mov
pop
inc
jge
mov
dec
scas
in
insl
mov
inc
xchg
add
or
jge
mov
test
loope
orl
insb
push
xor
cltd
or
jbe
cmp
insl
cld
and
xlat
adc
mov
fmull
push
fldl
xchg
add
sbb
add
rcrl
xor
cld
js
pop
aad
outsl
mov
ja
sbb
je
mov
xlat
or
pusha
adc
bound
mov
push
cmp
fisttps
or
push
mov
fistpll
rcrb
push
cmp
daa
movsb
outsl
jno
jns
and
pop
mov
cmp
fcmove
xlat
jp
lea
xor
xor
mov
cmpsl
mov
rorb
andl
jle
and
sub
mov
pop
lods
dec
inc
sbb
pop
bswap
out
js
shlb
jecxz
clc
xchg
xor
sub
fbstp
dec
inc
jge
mov
xchg
inc
insl
pop
lahf
xor
xchg
jg
xchg
mov
scas
xor
push
mov
xor
hlt
inc
lock
or
push
scas
fmulp
fs
cmp
cli
cmpsl
out
mov
roll
inc
stos
lock
aad
ffreep
pusha
mov
mov
adc
fs
movsl
mov
scas
in
shlb
adc
dec
xchg
je
or
fs
shlb
push
push
arpl
aas
xchg
icebp
add
out
inc
outsl
inc
loop
pop
sub
push
sub
pop
imul
mov
xor
push
jg
sub
mov
testb
dec
sbb
jge
mov
add
add
or
add
add
add
add
lcall
add
add
add
pop
add
add
ljmp
add
add
add
enter
add
add
add
mov
lret
add
add
add
add
add
sub
add
add
add
stos
xor
add
and
incl
add
add
add
add
or
add
adc
adc
add
add
mov
add
add
adc
add
add
add
jb
add
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
xchg
sbb
add
inc
pop
jns
jne
dec
outsl
je
jb
outsl
lea
add
add
shl
out
xchg
dec
mov
inc
or
add
addl
mov
repz
xchg
incl
push
stos
call
adc
lock
clc
lcall
pop
mov
mov
incl
cmp
incl
movsl
enter
add
pop
adc
leave
jmp
incl
add
jnp
add
xor
cmp
test
test
je
rcrb
dec
or
push
add
add
call
test
call
inc
clc
decl
mov
movsl
repz
push
ljmp
push
call
inc
sbb
add
add
leave
pop
sbb
add
aam
pop
add
mov
sbb
sbb
sbb
sbb
cmp
sbb
sbb
add
insb
add
gs
jae
shlb
insb
add
add
add
fs
add
insl
insb
outsl
cltd
popa
imul
add
je
xor
gs
add
add
fs
add
mov
inc
dec
xor
add
add
add
add
add
inc
les
add
add
push
add
add
and
add
add
add
adc
mov
dec
adc
xchg
add
call
enter
sub
mov
fcmovbe
cmpsb
add
xor
adcl
inc
loop
or
or
adc
lods
push
dec
aas
and
int
jns
mov
or
sbb
push
lods
jl
mov
call
fldl
dec
xchg
jmp
es
xor
push
popa
lods
pop
mov
adc
mov
inc
mov
xor
daa
fcmovnbe
in
nop
sub
test
fsincos
rolb
mov
imul
xchg
push
cmc
test
sub
adc
ret
and
fmulp
loopne
rdpmc
sbb
xchg
std
add
sub
sar
dec
adc
push
mov
push
ds
adc
je
sbb
push
call
jmp
mov
push
les
dec
js
out
and
push
ss
out
cmpsl
mov
xchg
outsl
inc
popf
pop
inc
lock
cltd
js,pn
loopne
in
or
lods
jg
fiaddl
cmp
cmp
scas
xchg
push
inc
add
in
push
inc
mov
ja
push
fsubl
pop
xor
or
filds
adc
push
add
in
andb
enter
loop
adc
mov
push
dec
cmc
fwait
adc
jns
mov
xor
rorl
sahf
fstl
js
mov
adc
add
int
pop
ljmp
call
jmp
lds
sub
repz
in
movsb
sbb
jg
push
dec
int3
xlat
sub
adc
shrb
bound
xchg
add
xchg
push
in
loope
inc
xchg
cmp
lcall
push
lock
dec
call
cli
pop
and
xchg
sub
mov
insb
jne
jmp
popa
mov
fyl2x
lret
sub
cmp
adc
add
push
pop
fdivs
add
sbb
dec
mov
nop
aam
in
sahf
sub
or
xchg
mov
lahf
outsb
shr
mov
xchg
std
movsl
test
dec
cmp
and
xor
jmp
lret
rcl
lcall
jp
aas
cmp
xlat
cltd
pop
cmc
in
lea
dec
fimull
dec
push
xorl
mov
pop
int
jecxz
or
in
out
adc
jns
mov
out
xchg
into
xor
inc
mov
das
and
jl
in
pusha
mov
xor
inc
push
and
loope
xchg
stos
xorb
addr16
dec
jmp
lods
fcompl
in
jge
lds
jo
jge,pn
add
stc
jne
inc
imul
mov
pop
lds
add
or
rcrb
cmc
push
or
sarb
push
outsl
inc
and
pop
rolb
sub
sub
out
push
in
cmp
sub
fimuls
sub
imul
sahf
sbb
sub
stos
lret
popf
cwtl
andb
test
pop
and
pop
nop
or
jp
add
or
test
mov
add
rol
inc
clc
fistpll
mov
xor
jl
mov
insl
sbb
push
xor
and
cmp
mov
xchg
ret
popa
into
pop
lds
int
ret
daa
inc
daa
cmpsl
pop
loop
cld
xchg
cmp
mov
outsl
pushf
imull
xor
xor
mov
out
mov
jl
int3
sarl
nopl
ja
lds
jne
pop
sti
loopne
lods
insb
mov
iret
xor
sbb
sbb
mov
aas
movsl
adc
pop
mov
mov
xor
dec
jg
jmp
in
push
xor
adc
into
ss
jno
clc
int3
xor
lods
loopne
lods
aaa
in
in
mov
fwait
call
pop
dec
mov
dec
adc
mov
in
dec
mov
xorl
mov
hlt
adc
dec
mov
lock
aam
xchg
jo,pt
mov
adc
mov
dec
imul
mov
adc
arpl
jmp
adc
xchg
push
in
dec
mov
ret
loop
inc
sbb
subb
out
imul
rorl
jmp
mov
push
mov
ja
push
js
mov
push
mov
dec
daa
fcomps
cmp
lods
inc
sti
subl
les
cmp
arpl
mov
push
hlt
add
jl
or
hlt
xchg
mov
insb
sbb
inc
xchg
ljmp
push
ficoms
lret
xor
les
and
xchg
or
adc
dec
mov
lds
ljmp
aam
call
push
push
sarb
fiaddl
imul
lret
jecxz
cmp
adc
and
lcall
jnp
punpckhdq
dec
scas
sarl
inc
lahf
mov
jecxz
mov
lds
push
pushf
pop
mov
pop
mov
pop
push
loope
or
fbld
aas
mov
jno
xchg
xchg
adc
shrl
push
inc
gs
sbb
aaa
mov
push
xchg
stos
test
lea
and
jae
sbb
rcr
sub
push
sbb
mov
xor
jo
or
mov
jmp
negb
jbe
add
call
movsl
mov
sbbl
pop
rcrb
rcl
sub
incb
lret
xchg
gs
aad
jg
leave
je
cmpsb
inc
sbb
add
push
je
dec
cmpsl
loope
adc
fwait
sbb
pop
out
addl
in
andb
sub
jno
and
mov
sbb
and
es
mov
jns
mov
mov
outsl
mov
jo
stos
jnp
pop
fstl
sti
filds
mov
movsl
push
mov
adc
lods
repz
pushf
pop
mov
cld
mull
popa
xchg
roll
arpl
push
pop
pop
adc
mov
dec
xor
insl
mov
push
mov
lds
and
xor
scas
xchg
inc
xor
mov
or
fwait
xor
sub
jp
fcmovu
cmpsb
push
fsts
andb
push
data16
mov
mov
lds
cwtl
push
mov
ss
mov
mov
mov
nop
ret
ljmp
stos
jmp
add
xchg
mov
cmp
push
clc
inc
inc
into
cli
gs
add
dec
jmp
sub
in
cmp
pop
popa
cwtl
jecxz
adc
test
sub
pop
loop
iret
popf
and
push
inc
sbb
hlt
pusha
lock
test
xchg
mov
and
xchg
lret
pop
jns
xchg
movsl
nop
or
repz
inc
ds
xlat
xchg
repz
pop
mov
adc
dec
fadds
mov
scas
xchg
fdivrp
lret
jnp
incl
fdivrl
lods
sub
shl
loope
mov
sbbb
rorb
imul
daa
rcrb
pop
call
add
sti
andl
cmpl
mov
add
in
stos
rol
clc
imul
mov
sub
lcall
inc
pop
lahf
or
in
andl
sbb
insl
nop
cmc
jb
inc
ror
lcall
js
jp
inc
fldln2
pop
push
icebp
mov
xchg
out
les
push
cwtl
fsts
sbb
mov
subb
adcb
pop
ljmp
xor
shrb
adc
push
xor
adc
mov
xor
pop
and
cmp
mov
subl
push
or
insl
loope
cmpsl
mov
stos
jp
push
and
std
sbb
add
pusha
popa
jg
call
pop
jge
std
xchg
test
popa
mov
fisttps
or
or
loopne
mov
and
inc
inc
dec
into
lcall
out
outsl
mov
xor
inc
fs
jae
cld
lret
in
ljmp
ficoml
orb
out
call
inc
cmp
and
push
aaa
xor
pop
sbb
daa
insl
imul
adc
mov
lcall
lret
pop
imul
ja
aaa
add
fstpl
sbb
mov
push
subb
aas
cmp
cmp
fs
iret
dec
or
inc
pop
sahf
imul
std
jge
xchg
and
ret
dec
outsl
iret
jp
stos
sub
mov
orl
movsl
out
push
mov
hlt
mov
sbb
push
shlb
xchg
cmp
dec
mov
xchg
insl
push
pushf
lret
loopne
lcall
jnp
mov
push
fs
mov
inc
cmp
jo
jne
imul
insb
sub
cmp
jp
and
xor
sti
scas
clc
pop
repnz
mov
je
cli
mov
leave
add
aad
push
push
outsl
mov
inc
add
jge
pop
stc
cmp
mov
mov
popf
xchg
pop
iret
sub
aas
jbe
pop
cltd
outsl
lock
sarb
pop
or
cmp
cmovl
jecxz
testb
cmp
push
mov
push
push
jecxz
dec
mov
jne
mov
mov
popf
pop
jmp
cmc
mov
lods
sbb
push
ret
xchg
fiaddl
push
mov
test
and
test
mov
out
or
xor
daa
fdivp
ja
das
add
dec
jne
pop
sbb
cli
jle
mov
fidivrl
lcall
fistpl
xchg
sub
xor
pop
dec
lcall
mov
jecxz
add
mov
fildll
mov
subb
sub
xor
mov
add
jmp
sub
aad
jb
and
mov
push
jecxz
je
add
adc
dec
adc
push
jns
pop
mov
fimuls
int
roll
xlat
pusha
xchg
adc
cmc
sub
sub
idivb
fcompl
xchg
out
ret
outsb
jge
cmp
mov
adc
mov
mov
mov
adc
sbb
inc
adc
lds
les
out
jmp
xchg
das
movsb
scas
inc
popf
pop
xorb
popf
pop
outsb
in
fstl
xchg
or
jbe
dec
repnz
movsl
sbb
dec
sbb
mov
mov
bound
cmp
test
mov
mov
xor
out
push
xor
xor
mov
or
jbe
daa
nop
dec
dec
cmp
jmpw
sbb
imul
xchg
in
aad
ror
lods
loopne
out
add
push
out
test
push
sub
lods
in
repnz
push
dec
mov
scas
les
lods
xchg
inc
push
xor
xchg
mov
xchg
mov
fcom
jno
cmp
xchg
sbb
fwait
cmp
fsubrp
ret
sub
divb
xor
jg
ss
push
push
daa
in
addr16
cmpsb
push
loope
repz
push
inc
psubw
inc
cmpl
fadds
sub
in
pop
adc
repnz
hlt
leave
mov
ljmp
sub
sub
cld
arpl
dec
aaa
sub
jbe
mov
adc
roll
pushf
out
fwait
addr16
sub
mov
je
mov
jns
cmpsl
test
or
dec
cmp
out
sbb
mov
sti
into
pop
mov
movl
mov
dec
lret
movsb
and
mov
mov
test
es
jl
inc
loopne
and
jo
cmp
mov
xchg
push
xchg
xchg
inc
mov
negl
imul
and
cmpl
stos
cltd
cmpb
cmc
in
and
je
pop
icebp
fildl
out
enter
pop
jo
aam
xor
or
mov
inc
cld
sub
loop
mov
dec
pop
mov
add
cs
mov
mov
inc
ja
shrb
mov
and
ret
or
jbe
testl
pop
xchg
xchg
cmc
cmc
lock
fstpl
mov
adc
inc
test
xor
xchg
or
cli
jne
push
jbe
dec
inc
in
dec
loop
add
lahf
sbb
insb
dec
incl
das
jb
jno
push
jg
jmp
push
dec
iret
scas
data16
cld
js
dec
jne
xchg
mov
pop
int3
movsb
ret
sbbl
ds
arpl
dec
dec
cmc
push
sub
std
or
scas
sub
push
dec
pop
bound
xchg
push
mov
insl
pop
mov
inc
lahf
popf
std
sub
xchg
in
inc
je
aaa
sbb
lret
mov
pop
std
test
insb
pop
jno
negb
aaa
movups
lret
xchg
mov
fildll
or
add
loop
cmc
insb
repz
in
fldl
fwait
in
test
rol
in
out
inc
cmp
dec
fisttpl
fnsave
cmp
scas
fcmovnu
leave
addl
inc
push
hlt
lods
jle
jmp
fdivrl
mov
ss
testl
add
push
fadd
in
xchg
mov
in
loopne
dec
jb
push
xor
jo
pop
bound
stos
jge
dec
stc
scas
pop
daa
push
push
stos
push
xor
inc
xchg
jno
mov
or
setae
push
and
rorl
adcb
mov
add
arpl
pushf
in
or
cmp
cli
je
mov
xchg
jbe
imul
pop
and
mov
frstor
rolb
out
xchg
lock
lcall
loope
fs
xchg
or
pushf
mov
pop
jnp
inc
ljmp
pusha
mov
sbb
cmc
movsl
mov
xchg
xor
rcrb
aaa
aad
dec
cmp
in
pop
xchg
pop
into
fsubp
pop
fidivs
call
jbe
sub
xchg
pop
jecxz
cmp
mov
cltd
and
adc
push
sti
pushf
nop
ljmp
cmpsb
into
data16
in
test
sub
call
push
cmp
mov
or
aam
rorb
push
pushl
adc
xor
push
outsb
call
ss
call
das
inc
psllq
sub
mov
daa
xchg
sbb
mov
mov
cs
mov
fiaddl
pop
rclb
and
fisubrl
daa
pop
mov
shrb
ret
or
lds
insb
repnz
push
rcrl
lock
pop
jmp
aas
cmp
es
aas
push
es
push
lock
std
push
lods
stos
xor
dec
in
insb
das
testl
sti
rol
mov
dec
adc
mov
xchg
xchg
push
fcom
mov
test
fcompl
sbb
inc
ret
push
lcall
scas
cmc
xor
pop
testb
adc
xchg
xor
addl
or
add
aam
ja
test
mov
push
dec
inc
inc
and
dec
ss
sbb
out
mov
lret
jns
inc
adcl
pop
les
testb
adc
pop
mov
xchg
clc
jns
pop
mov
aad
adcb
fisubl
stos
xchg
icebp
sub
cmp
or
dec
lcall
jne
test
xor
push
dec
sbb
clc
xchg
xchg
sbb
fsts
inc
push
mov
dec
xchg
xchg
lret
pop
mov
mov
pusha
mov
sub
setns
xor
dec
lahf
shrl
jb
addr16
popf
cmp
xor
int3
std
pusha
mov
lahf
mov
xor
or
mov
inc
das
sarl
mov
inc
movsb
xor
adc
mov
out
sub
jle
je
aad
push
mov
mov
sarb
xor
dec
pop
dec
stos
push
lods
jns
dec
mov
fs
mov
pop
or
loope
push
in
or
js
or
adc
incb
lahf
hlt
out
test
xor
sbbl
jo
mov
mov
push
sbbb
pop
sub
fimull
outsl
dec
push
sbb
xor
xor
fistpll
and
cld
leave
jns
fs
pop
roll
ja,pn
mov
mov
cmp
inc
fiadds
pop
and
and
push
lcall
pop
sbb
arpl
mov
nop
or
std
test
mov
es
scas
pop
rcrb
inc
lods
out
pop
cmp
addr16
jp
mov
xchg
pop
je
mov
add
mov
jle
test
xor
movsl
pop
mov
sbb
add
sub
push
xchg
int
xchg
mov
mov
or
mov
sbb
sub
int
jne
adc
loopne
mov
adc
sti
push
aaa
jno
mov
push
xor
fmulp
lret
push
xor
out
test
sbb
sti
ja
imul
push
mov
inc
jmp
iret
ss
movsl
cmpl
sbb
stos
jns
out
dec
xor
mov
aam
mov
jns
mov
adc
lds
mov
push
les
shll
xor
out
imul
adc
pop
orb
in
pop
inc
mov
fldz
cld
dec
js
cli
inc
cs
jp
push
in
rorl
pusha
and
fsubrp
aad
test
jmp
xor
inc
push
pop
pusha
or
push
gs
shl
adc
sub
in
stos
cltd
xchg
arpl
jno
arpl
jnp
fnstenv
cmp
lods
pushf
xor
outsb
adc
lea
sub
insl
enter
mov
fwait
bound
mov
js
bnd
sarb
es
mov
cmpsl
or
lods
cli
and
push
push
ljmp
sub
in
fucomip
push
xchg
inc
jbe
sahf
sbb
or
sarl
sub
loope
jmp
and
mov
arpl
es
mov
or
xor
cmpsb
mov
or
mov
out
dec
int
enter
push
xor
push
mov
jb
pop
leave
push
sbb
imul
loop
psubsw
or
inc
xlat
aam
in
pop
pop
stos
andl
and
insb
test
stos
ss
pop
push
repnz
xchg
dec
fwait
xor
adc
rcrl
mov
sbb
aad
lea
sub
xchg
subl
out
add
push
cmp
cmc
lcall
les
fmuls
inc
enter
in
mov
addr16
xchg
inc
fstl
sub
inc
bound
inc
outsl
movl
push
pusha
xor
add
cmp
adc
pop
cwtl
jne
scas
and
fisttpll
add
stc
sub
push
push
sub
ja
shr
cmp
std
dec
in
sbb
cmovp
inc
sbb
fwait
sub
movsl
repz
imul
mov
inc
mov
dec
push
shr
je
repnz
jle
xor
cmp
mov
sbb
mov
js
dec
pop
xorl
mov
add
fimuls
cs
mov
arpl
push
mov
inc
sub
xchg
nop
mov
les
je
push
jecxz
sub
inc
and
push
mov
mov
in
lea
je
cmpl
test
je
fdivrl
out
fistps
scas
aas
cmp
mov
in
adc
xor
sbb
fwait
mov
mov
pop
sub
in
js
xchg
stc
jne
sbb
push
ret
xchg
loope,pn
jae
push
movsl
mov
dec
inc
insl
imul
int
cmc
movsl
imul
pop
aas
dec
idivb
int
sub
add
mov
nop
xchg
jecxz
dec
cmp
or
fs
cmp
ss
cwtl
js
test
pusha
sbb
or
imul
int
inc
add
movsb
ljmp
sub
adc
mov
xchg
decl
cmp
mov
mov
sbb
lea
and
aad
insl
imul
xor
or
mov
aaa
int
add
lock
insb
mov
psllq
add
arpl
arpl
mov
mov
aam
cmp
int3
jmp
rcr
outsb
loope
cmpsb
mov
adc
push
add
cmpl
mov
push
pop
aas
insl
dec
int
lods
jbe
in
fsubrl
push
pop
roll
loopne
mov
or
xchg
popf
jb
ja
xorb
xor
xlat
inc
push
test
mov
lods
add
fistpll
and
leave
jne
mov
je
adc
jbe
jg
popa
aaa
mul
pop
hlt
test
inc
mov
mov
addr16
pop
imul
cmpb
pushf
jnp
mov
jo
xor
nop
movb
add
rolb
add
inc
add
add
xor
add
add
add
add
mov
and
add
add
mov
add
add
add
add
add
add
add
hlt
add
add
add
add
add
add
lret
add
mov
jg
add
add
add
add
ret
or
add
add
add
add
add
add
add
jae
add
add
js
add
add
add
add
insb
add
add
in
add
add
xchg
pushf
add
and
popa
add
jne
outsb
jae
jae
dec
add
mov
and
mov
iret
jne
leave
sarl
inc
adc
add
dec
push
mov
incl
add
or
or
je
call
add
push
arpl
or
mov
cmp
add
lea
pop
rclb
jge
cltd
test
mov
push
add
mov
insb
decb
test
incl
inc
incb
je
push
loopne
decl
subl
call
jge
push
push
incl
push
add
std
test
call
mov
ret
lea
add
adc
push
clc
test
inc
add
add
add
add
add
jecxz
add
add
add
add
sbb
je
imul
jb
sbb
push
add
add
gs
add
arpl
dec
gs
insb
add
insb
inc
dec
js
push
fs
dec
push
jns
jo
add
add
outsl
gs
or
outsl
jb
dec
add
mov
inc
sub
add
add
faddl
add
add
add
add
ret
mov
mov
xchg
into
hlt
stos
cmc
xchg
lods
xchg
sbb
cmp
push
xchg
cwtl
mov
mov
jg
jo
mov
fisubl
aam
icebp
adc
sbb
xor
lret
pop
dec
sub
scas
cwtl
clc
push
ljmp
push
mov
lock
enter
pop
in
stc
xor
aad
das
xchg
rorb
sbb
add
lock
or
movsb
xor
into
pushl
clc
divb
sub
jp
xor
mov
orl
mov
fcmovbe
lahf
dec
std
mov
xchg
hlt
jbe
pusha
dec
mov
mov
pusha
icebp
xchg
inc
int3
add
outsl
sbb
push
adc
dec
sub
test
loop
pop
fs
enter
dec
mov
or
cmp
ret
call
xor
inc
cld
out
lahf
andb
or
dec
mov
mov
inc
add
jo
mov
pop
pop
stos
ljmp
mov
imul
repnz
cmpsl
or
subl
mov
inc
mov
repz
popa
aas
add
jae
push
insb
repz
jp
loope
imul
push
jecxz
mov
ljmp
fucomip
cmpl
push
and
jae
mov
cli
iret
addl
pop
mov
cwtl
popf
int
mov
sub
icebp
test
ljmp
lds
sub
popl
fcomi
sbb
pusha
js
imul
fdivl
push
or
dec
rcll
iret
aaa
cs
mov
push
jmp
xor
dec
cmp
sti
sub
add
lcall
cmpl
mov
mov
cmc
cmp
ds
push
mov
lcall
sub
mov
inc
lcall
add
xchg
sbb
add
aam
dec
dec
push
sub
jecxz
xor
add
sub
add
ja
nop
incb
pop
mov
lods
out
loop
jne
xorb
enter
loope
push
dec
pop
ja
scas
pushf
sub
mov
mov
repnz
cmp
fstps
dec
out
and
pop
in
enter
ja
inc
loopne
mov
ja
pop
inc
lret
aas
sub
stc
shll
fidivs
add
or
fld1
lss
sahf
scas
xor
or
mov
inc
lcall
pop
out
repz
ret
pop
out
mov
out
cld
jnp
ss
inc
sub
in
in
mov
loope
and
jns
pop
and
jbe
lock
hlt
inc
add
or
mov
lods
mov
add
mov
mov
jb
stos
cmc
stos
jge
mov
imul
xor
bound
into
pop
inc
push
or
leave
mov
adc
cmp
flds
inc
dec
cli
lcall
sub
or
aaa
adc
sub
jne
mov
add
in
push
or
jbe
in
xchg
cmp
cmp
mov
lret
and
or
aas
insb
incb
cld
fldcw
hlt
sbb
lea
sbb
in
or
iret
and
pop
add
xchg
push
sbb
cmp
icebp
cmp
out
mov
adc
or
ficompl
and
jbe
jmp
daa
sub
aam
lahf
dec
psllq
loopne
cmpsb
inc
movsl
pusha
jno
and
fs
insb
outsb
inc
pop
aaa
xor
adc
movsl
ljmp
fildl
jae
push
adc
cmc
push
gs
in
mov
repz
sbb
jg
repz
outsl
jne
cli
push
or
adc
pop
xchg
fwait
ja
sbb
lods
ja
mov
mov
push
mov
xor
sti
xchg
mov
ss
xchg
ljmp
adc
jno
push
mov
cli
test
outsb
call
jb
repz
sbb
fbld
mov
and
outsb
cltd
je
cmp
sub
mov
mov
pop
test
test
adc
mov
xor
xchg
nop
mov
lret
mov
sub
mov
sbb
stos
mov
stc
dec
mov
popf
arpl
xchg
mov
lret
outsb
sti
or
int3
jae
cmp
loope
xchg
mov
leave
stc
mov
xor
cmp
inc
jne
outsl
lahf
push
and
or
xchg
mov
fisttpl
ss
andb
adc
aam
fdivp
fnstenv
inc
cwtl
cmp
cmp
xor
inc
jecxz
inc
dec
mov
mov
and
in
add
mov
es
sar
ret
dec
push
daa
es
js
adc
add
dec
pop
cmp
jno
adc
mov
push
push
stos
mov
mov
pop
sbb
out
xchg
scas
fs
scas
test
rcrl
sbb
pop
inc
lds
dec
subl
pop
xor
xchg
repnz
inc
and
xchg
ja
out
fwait
out
into
adc
imul
jno
in
iret
fnstenv
pusha
sbb
enter
fcomps
aam
aas
push
dec
cmpsb
or
inc
sbb
sbb
frstor
lret
outsl
aas
sti
push
ljmp
aas
xor
leave
sub
mov
mov
cmp
popa
sbb
pop
xor
lret
or
mov
and
xor
sbb
fbstp
mov
sub
test
stos
jbe
mov
or
push
or
fnstsw
arpl
outsb
sub
std
addr16
mov
push
pop
sbb
lock
cmpsl
test
add
add
push
mov
leave
fwait
sahf
aas
ss
xor
loope
push
adc
data16
jne
mov
ljmp
cwtl
adc
andb
mov
push
pop
ret
cmp
je
and
dec
mov
vhsubps
mov
mov
xor
adc
mov
dec
xlat
stc
in
push
sub
aas
mov
imul
shlb
in
test
mov
cld
repz
rolb
fnstcw
pushf
xor
push
adc
sarl
pop
arpl
lds
fnstsw
jp
stos
icebp
mov
lds
test
cmp
sbb
xor
and
and
push
sub
loopne
sub
jp
dec
dec
adc
jo
dec
sbb
dec
insb
sub
xchg
ret
mov
out
pop
jmp
adc
pop
movsb
or
iret
jmp
outsl
fsubrl
sbb
jecxz
mov
nop
inc
scas
adc
or
pop
push
adc
pop
stc
jmp
adc
inc
cmp
cmpsb
xchg
cmp
shll
xchg
scas
xor
sbb
cmp
mov
mov
rol
mov
jle
movsl
cmc
inc
mov
cmc
push
shrb
inc
fwait
jge
push
das
xor
pop
cmp
or
pop
push
jmp
ret
mov
mov
or
cltd
pop
jp
data16
push
jns
sbb
je
shlb
mov
stc
xor
dec
push
movsl
adc
xchg
jne
push
push
inc
xchg
sbb
aas
fnsave
stos
out
mov
inc
mov
inc
addr16
iret
lcall
adc
repz
inc
sahf
scas
std
aas
andl
loop
int3
cmpsl
pushf
inc
jge
les
inc
mov
fwait
leave
repnz
mov
pop
xchg
int
xchg
jecxz,pt
jne
into
cltd
addb
xor
cwtl
pop
clc
lods
jecxz
mov
xchg
int
sub
stc
push
sarb
sar
jne
pop
and
jg
cmp
orl
jae
out
fistl
shll
lret
dec
mov
add
mov
mov
cmpb
jg
jae
test
mov
add
cmpb
sbb
ficompl
sbb
adc
into
xor
xor
mov
dec
sub
lods
leave
adc
lods
out
or
aad
jl
push
stc
jge
cld
xor
in
test
mov
shll
cmpb
or
es
enter
repnz
mov
xchg
inc
enter
inc
inc
gs
xor
or
out
into
les
jl
mov
xor
stc
test
fwait
or
test
jecxz
mov
popf
add
int
imul
or
or
xchg
test
dec
ret
loopne
pushf
inc
bnd
fdivrs
repnz
arpl
out
hlt
jecxz
stos
idiv
cmp
test
mov
jle
jae
iret
jo
add
lea
loop
mov
pop
xchg
aad
notb
pusha
das
je
stc
and
adc
xor
xor
mov
outsl
mov
loop
or
test
mov
pop
pop
fiadds
and
sub
ret
cmp
cmp
into
dec
into
mov
cmpsl
aam
xor
mov
jge
cmp
xchg
push
sbb
es
mov
stos
push
daa
cmp
insb
cs
xchg
mov
jmp
xchg
add
cmpsb
add
mov
in
lds
sbb
nop
xchg
mov
dec
adc
cmp
sub
test
sbb
cmp
pop
je
rcr
nop
insw
lea
into
out
aad
outsl
mov
pop
jns
dec
xchg
xchg
stos
cmpsl
add
jle
push
or
mov
fwait
insb
jmp
cs
xorb
sbb
bnd
loopne
call
inc
stos
scas
dec
dec
lret
stc
pushf
and
dec
mov
add
movb
fsubrl
lahf
jmp
lea
pop
push
mov
in
add
or
gs
sahf
pop
mov
cmp
popf
and
xor
sub
shl
ljmp
jecxz
in
sbb
sahf
ret
ss
mov
mov
mov
insl
dec
mov
in
pop
mov
mov
ss
xor
mov
enter
and
js
sar
mov
pop
in
mov
cmp
int
test
add
leave
dec
and
addr16
sahf
notl
inc
sahf
jae
xchg
les
sbb
cmc
pop
mov
add
cmp
sub
xchg
inc
sahf
sbb
movsl
jb
call
repnz
loopne
jb
movsb
inc
std
pop
push
shr
adcl
adc
xor
out
lret
shrl
and
lcall
enter
dec
lahf
shl
sahf
adc
dec
jecxz
frstor
add
inc
int
dec
cli
int3
mov
xchg
jo
insb
xor
imul
mov
dec
subl
test
pop
loopew
or
insb
mov
sub
das
xchg
in
push
jmp
gs
gs
insb
lea
dec
in
cmp
cmp
xor
adc
in
xor
faddp
mov
add
push
dec
lahf
test
ss
dec
mov
pop
sbb
dec
mov
pop
cs
test
adc
ss
rcrb
mov
shrb
xchg
jmp
xchg
or
mov
or
test
lock
ljmp
mov
bound
loop
test
sub
mov
adc
mov
mov
mov
orb
mov
inc
pusha
sti
aas
insl
sub
sbb
enter
in
daa
push
xlat
in
xor
rorb
adc
pop
mov
das
mov
aad
mov
das
test
push
rdpmc
hlt
cmpsb
inc
and
lea
jo
scas
dec
insl
lret
jmp
push
std
push
jle
in
or
mov
nop
dec
loop
int
mov
fwait
es
out
sub
jp
out
iret
mov
xchg
dec
in
push
dec
leave
dec
into
aas
gs
pop
pop
lea
mov
ror
test
stos
faddl
mov
nop
ljmp
icebp
sahf
data16
mov
imul
sbbl
test
mov
lret
push
mov
scas
cmp
fidivs
int3
call
dec
scas
scas
fpatan
jl
call
pop
aas
xchg
or
fmuls
push
xor
fistpll
fiadds
movsb
mov
and
into
mov
fs
pop
push
push
xchg
ja
jae
shll
and
push
push
ret
jge
or
fs
cmpsl
add
inc
xor
rcrb
mov
inc
pop
adc
dec
ficompl
in
into
jne
adc
push
dec
or
xor
xchg
out
or
adc
pusha
jecxz
mov
jne
mov
jns
sarb
dec
mov
pop
jp
pop
in
jmp
andb
push
outsl
mov
enter
out
mov
or
xor
sbb
jae
sarb
pop
leave
stos
sar
ret
jae
cwtl
jmp
dec
std
jns
repz
xor
sub
mov
mov
jp
push
dec
inc
sbb
ljmp
loop
fnstcw
pop
aam
xchg
movsl
add
push
int
out
and
xchg
leave
xorl
lock
fsubrl
or
adc
dec
push
data16
xchg
out
mov
ds
cld
dec
jnp
pop
lea
into
dec
cmp
pusha
cmp
lret
andl
clc
pop
mov
fisttps
fsubrp
adc
mov
mov
add
dec
dec
arpl
xchg
outsl
push
jno
ss
sti
addr16
sub
gs
or
jb
int3
icebp
cmpsl
xor
incl
and
inc
in
lods
cmp
mov
pop
or
aaa
aas
rcrb
mov
les
mov
jecxz
fcmovnb
addr16
aam
mov
jne
lcall
or
clc
loope
imul
mov
ret
add
xor
sub
test
xor
int3
fwait
xor
pushf
inc
int
data16
imul
push
iret
lods
dec
or
jbe
cmp
mov
push
inc
add
and
fs
jb
xchg
iret
add
cmp
fldl
pop
and
movsb
xor
shr
testb
sbb
scas
cmp
in
das
enter
mov
mov
lods
mov
arpl
idiv
jno
pop
pop
cmpsl
cmp
je
adc
call
lret
dec
loopne
jle
stos
and
sub
je
push
lret
lds
pop
test
popf
push
mov
adc
leave
out
rcrb
cmp
xchg
div
push
outsb
push
sbb
sub
repz
xor
xor
xor
jne
fst
fs
mov
sbb
inc
cmpsl
jl
addl
icebp
jmp
cmpsl
das
in
mov
jp
and
add
jle
mov
mov
repz
sub
into
mov
imul
mov
sbb
jnp
repz
js
stos
call
add
jge
cmpsb
or
pop
popf
jbe
mov
ss
dec
jmp
jnp
lods
sbb
mov
and
mov
dec
push
pusha
cltd
mov
out
and
sub
mov
xor
icebp
and
adc
jb
jp
pop
ret
test
cmc
fistps
sbb
test
test
xor
pop
mov
mov
mov
cmp
test
pop
repz
lret
cld
cmp
sbb
mov
inc
xchg
int3
js
sub
mov
lret
mov
xor
pop
hlt
mov
outsb
ret
fnsave
stc
sbb
push
mov
int3
jl
dec
out
stc
movsb
pop
je
data16
mov
jb
cmp
push
xchg
xor
in
jae,pn
mov
rcr
jge
wbinvd
xor
adc
outsl
leave
popa
lock
add
mov
outsb
mov
xchg
lods
adc
inc
mov
sarb
call
push
xchg
pop
and
adc
fisttpl
iret
movsb
repnz
sbb
dec
ljmp
addr16
pop
imul
ret
mov
inc
movsb
jmp
fiaddl
cmp
int3
mov
or
sbb
or
mov
addr16
sbb
mov
test
aas
add
cli
into
out
xor
stc
inc
xchg
push
fnsave
cmpsl
mov
cmp
pop
repnz
aad
rcl
in
pop
sahf
aaa
mov
aas
enter
in
mov
std
lcall
mov
xlat
scas
dec
adc
leave
cmp
and
imul
add
mov
fdivrl
jp
mov
nop
pop
push
lea
inc
rclb
pop
jle
out
cmp
pop
lret
dec
dec
pop
cltd
cmpb
mov
addr16
cmp
push
inc
mov
cmp
pushl
out
adc
push
sbb
xor
cmc
int
bound
mov
int3
jmp
rclb
sti
into
hlt
xor
mov
outsb
adc
rolb
icebp
rcll
int
adc
lods
clc
adc
cmpsb
aaa
adc
add
cmp
ja
pop
nop
inc
cli
out
push
in
pushf
pop
into
sub
inc
dec
outsb
out
mov
les
dec
sub
pop
or
push
xchg
push
push
popf
dec
fistpl
and
xchg
adc
in
and
mov
data16
in
enter
jb
xchg
sbb
lret
or
jno
sbb
mov
mov
ficomps
xchg
or
inc
in
out
pop
dec
sub
pop
and
dec
cltd
jecxz
int
adc
jbe
jg
mov
and
std
stos
lret
or
cwtl
cld
fcmove
push
movsb
add
loopne
xchg
xchg
xor
gs
sbb
je
pop
stos
sbbl
std
sbb
aaa
stc
movsl
mov
sbb
in
add
loopne
cmp
xlat
cmpsb
lods
lods
js
or
inc
std
push
das
push
mov
push
jg
fwait
fwait
push
out
dec
cwtl
pop
aas
enter
mov
addr16
lret
mov
cmp
adc
out
push
orb
ud2
inc
hlt
cmp
data16
cwtl
pop
aaa
pop
and
loopne
push
loope
js
sbbl
mov
fisubl
push
mov
mov
jmp
jno
pop
push
sub
sbb
mov
xchg
aad
fs
jp
inc
repz
add
mov
mov
cmc
pop
shrl
lock
or
and
fwait
mov
add
pop
inc
jle
sahf
loopne
fs
push
mov
movsb
ds
ss
frstor
push
add
adc
or
xlat
push
and
pop
xor
ja
outsl
sub
dec
push
int
push
cmp
dec
data16
cmc
mov
mov
mov
pop
cmp
mov
dec
lds
mov
cmp
sahf
push
pop
out
lret
stos
pop
and
add
mov
pop
inc
xchg
imul
dec
jbe
mov
dec
pop
add
sbbb
dec
sbb
jno
pop
dec
or
dec
loopne
sbb
clc
jecxz
dec
push
test
or
dec
adc
aam
xchg
dec
fs
add
add
cltd
inc
push
push
xchg
xchg
or
jmp
in
inc
js
or
xchg
lock
xchg
mov
push
pop
adc
les
mov
jmp
push
adc
int
push
popf
cli
lods
xchg
xchg
hlt
inc
sarl
xchg
mov
xor
fists
cmpsb
pop
push
imul
gs
jg
xchg
lret
add
shr
test
out
mov
imul
sub
or
pop
repnz
push
push
in
packssdw
and
imul
dec
in
jnp
cld
insb
push
lahf
ds
leave
push
push
shr
dec
jle
cmp
popf
std
int
xor
and
adc
xor
bound
mov
xchg
ja
lea
movsl
ret
mov
or
inc
adc
dec
stos
and
push
clc
insl
jns
cmpsl
clc
scas
fwait
test
pop
dec
push
jae
int
pop
mov
inc
add
daa
pusha
in
aad
icebp
repz
repnz
fiadds
pop
dec
bound
sbb
sub
xor
push
pop
mov
sub
inc
scas
or
jne
push
cmp
pop
mov
mov
fisubs
cmp
sbb
ljmp
push
movsb
pop
sbbb
arpl
addr16
or
add
jecxz
adc
int3
inc
das
idiv
mov
mov
jl
cmc
and
jmp
lock
push
jg
xchg
cmp
and
mov
mulb
enter
jecxz
or
add
pavgw
mov
and
push
mov
mov
cmp
mov
cli
test
loopne
jl
mov
xor
mov
outsl
mov
adc
sub
data16
xor
cs
int
scas
pushf
insl
in
lahf
addr16
sub
inc
cmp
jns
fldenv
stos
adc
push
jl
mov
fwait
adc
add
add
ret
lods
add
add
push
pop
add
add
jecxz
add
add
add
add
jae
add
add
add
add
add
add
add
xchg
pushf
add
stos
stos
and
ja
mov
jo
jo
add
add
add
add
add
and
add
add
add
add
stc
add
add
add
add
add
add
add
imul
add
add
add
inc
add
add
flds
add
add
add
add
push
add
dec
fs
mov
fs
gs
add
dec
je
fs
fiaddl
sub
inc
sbb
cld
pop
add
fadds
add
in
or
inc
orb
ljmp
clc
cmp
or
or
mov
cld
mov
rcrb
cld
adc
push
insb
leave
cs
mov
pop
xor
adc
add
enter
fdivr
adc
adc
add
adc
mov
push
add
add
call
push
add
add
lcall
sar
add
push
and
addl
cld
inc
xor
enter
add
incl
jne
lret
aam
dec
xor
adc
call
lea
push
add
add
or
add
add
mov
add
xor
dec
stc
or
xor
add
insl
jb
je
js
outsl
outsl
outsb
sub
jo
insb
scas
imul
outsb
jns
pop
gs
inc
gs
aas
add
imul
dec
addr16
push
insb
add
insb
jns
outsl
outsl
imul
je
je
je
insb
add
add
mov
add
add
add
sbb
add
add
add
add
add
add
mov
add
add
add
adc
iret
mov
fs
jb,pt
fimull
lea
jb
push
add
adc
andb
test
stos
js
in
jecxz
inc
xchg
mov
into
lret
test
loope
fstp
sub
inc
inc
inc
pop
divl
adc
test
jnp
stos
add
ja
lods
jmp
subb
mov
es
xchg
mov
ficompl
xor
push
enter
repnz
pop
or
pusha
repnz
sbb
mov
mov
add
repnz
or
add
rclb
cmpl
adc
lds
aad
inc
test
dec
mov
add
inc
jp
ja
sbb
out
inc
pop
sahf
enter
inc
fldenv
pop
lcall
jg
lahf
cmp
fnstcw
out
data16
mov
fmull
xor
sub
jecxz
mov
push
popa
mov
loope
jns
xchg
bound
shrl
pop
dec
sbb
mov
dec
rolb
sbb
adc
mov
cmpsb
icebp
inc
sub
nop
iret
orb
sbb
mov
stos
cs
sbb
sbb
lea
fwait
aad
jae
or
dec
xchg
out
jne
and
xchg
test
aad
mov
adc
scas
std
inc
scas
pop
push
fbld
dec
push
in
into
sub
es
or
outsb
es
inc
cwtl
inc
sub
lcall
jmp
inc
inc
insl
sti
and
mov
jb
pusha
shrb
movsl
and
dec
jl
push
lea
xor
add
lods
pop
cld
cld
lret
jl
in
jb
je
xor
pop
xlat
sub
mov
mov
sahf
add
rorb
fptan
shlb
sub
es
in
pushf
push
rorb
insl
out
xlat
xor
mov
xorl
test
daa
test
lods
pop
stos
pop
push
fcomi
rcr
lret
or
push
add
testl
pop
test
ja
push
pushf
rcl
js
pop
iret
and
cmp
fimull
sub
pop
movsl
outsl
insl
leave
std
xchg
push
lahf
movsl
cwtl
in
adc
incl
dec
jge
dec
and
nop
adc
outsl
mov
adc
push
xchg
enter
mov
mov
lcall
xchg
lret
stc
dec
jge
mov
lcall
cmp
sbb
cmp
jae
mov
gs
loope
inc
lods
push
push
repnz
orb
pop
adc
cmpsb
add
das
aad
sbbl
imulb
aad
push
in
sbb
or
cwtl
movsl
je
sub
mov
pop
sbb
xchg
lret
jo
sub
push
in
lods
setle
lock
xor
stos
mov
inc
dec
push
xor
call
lret
mov
inc
loope
xchg
xor
in
adc
fadds
cmc
test
sbb
mov
adcl
mov
imul
inc
test
lret
mov
leave
fcomps
ljmp
sub
stos
xor
call
loop
mov
ret
mov
sbb
or
adcl
outsb
push
push
lea
pusha
es
cli
or
push
in
cmpsb
dec
int3
and
in
lds
fwait
inc
jb
pop
mov
xchg
jo
in
leave
shrb
xchg
mov
clc
cs
xor
fldt
fnsave
or
je
das
mov
dec
add
pop
aaa
and
add
lods
aad
inc
mov
mov
aas
stc
int
add
jmp
dec
sbb
jne
jno
mov
push
nop
adc
lret
imul
gs
sub
mov
pop
clc
rcl
mov
sbb
mov
loopne
mov
cmp
pop
dec
inc
xor
cmpsl
test
aaa
pop
sahf
push
pop
popa
in
xchg
mov
fldenv
xor
push
adc
clc
push
aaa
mov
mov
daa
or
xlat
std
jecxz,pn
and
les
cltd
push
jp
or
or
inc
sub
push
cmp
insl
pusha
push
xchg
scas
movsl
sahf
adc
sarb
add
jno
push
outsb
sarb
test
mov
jb
daa
xchg
loop
sub
mov
or
loope
fldl
or
xchg
jg
push
ret
in
lret
pop
fidivrs
fdivr
add
cmc
inc
stos
pop
in
in
add
shr
outsl
jbe
sbb
mov
sbb
addr16
cmp
aam
ret
fbld
shll
cmp
jae
dec
lods
or
cmpsl
or
movsb
mov
std
or
mov
les
push
xor
xchg
jne
imul
cli
add
jnp
js
mov
ds
jge
mov
mov
xor
adc
push
fcmovb
and
iret
mov
imul
out
test
cmpsb
and
or
sbb
xlat
fs
lret
add
and
mov
in
roll
fwait
jmp
mov
pop
and
repz
gs
jae
and
mov
dec
hlt
push
xor
outsl
jecxz
out
ss
incb
loope
mov
notl
cmp
xchg
movl
add
xchg
or
jb
movsb
icebp
xchg
jecxz
test
in
les
pushf
jge
sbb
xchg
inc
cmp
cltd
insl
jbe
movsl
test
icebp
sbb
ret
shll
outsb
jecxz
push
pop
cmp
xor
js
pop
xchg
jmp
jecxz
pop
test
mov
inc
adc
std
or
shrl
pop
push
je
add
cwtl
mov
inc
rorb
or
aas
in
xchg
clc
sbb
sahf
cmpsb
sub
and
outsl
ljmp
push
fs
imul
shl
mov
dec
xor
ja
cwtl
adc
pusha
dec
pop
and
fisttpl
ja
mov
ljmp
inc
inc
xor
or
push
and
xchg
lock
inc
lods
andb
cmpb
mov
scas
push
lret
inc
mov
xchg
mov
sti
push
sub
loopne
int3
dec
repz
icebp
push
rcl
sarb
outsb
cwtl
enter
push
loope
int3
ja
mov
sbb
shl
scas
push
sahf
dec
in
mov
into
sti
dec
dec
movsl
pop
repnz
testl
int3
ret
iret
fs
mov
lcall
ret
stos
mov
cmp
mov
inc
pop
xchg
push
adc
xchg
outsb
inc
cmp
aad
xor
dec
fcoml
icebp
or
mov
cmova
and
repnz
jle
imul
xchg
pop
mov
out
cltd
push
fmul
iret
jg
xchg
jp
mov
push
gs
jp
pop
pop
mov
add
mov
into
rorl
nop
jnp
hlt
push
dec
shlb
mov
cld
push
movsl
push
ljmp
leave
js,pt
aam
cmp
and
jmp
mov
outsb
cmpsl
push
test
adc
je
dec
jbe
popf
js
inc
stc
sbb
pusha
int
xchg
sbb
pop
push
fldl
mov
in
mov
outsb
aad
aas
sarl
push
xor
mov
adcl
and
pop
jecxz
push
and
lret
sub
leave
aaa
mov
faddl
dec
imul
aaa
je
mov
imul
test
ret
lock
jne
mov
adc
cmc
daa
pusha
xor
adc
adc
push
bound
jns
mov
mov
into
dec
pop
inc
mov
mov
test
ret
mov
mov
cmp
inc
push
cmp
mov
mov
mov
nop
nop
divb
movsl
mov
mov
lods
icebp
daa
neg
icebp
outsl
pop
loop
ja
sbb
roll
lods
mov
in
lret
lock
pop
xchg
repz
mov
and
push
mov
dec
mov
mov
ds
mov
fs
rol
xorl
jge
push
pop
out
inc
mov
frstor
xchg
icebp
outsl
dec
xchg
mov
in
dec
xchg
loopne
push
cltd
fcmovnu
add
push
adc
frstor
out
jns
insb
xchg
dec
movsb
cwtl
pop
clc
sub
lds
cld
adc
pop
rcll
adc
dec
mov
xor
insl
in
push
mov
cmp
mov
imul
jle
ja
pushf
rclb
in
push
jecxz
or
inc
jl
imul
daa
xchg
pusha
jp
mov
int
mov
out
fldcw
xchg
inc
test
stc
xor
add
push
scas
sbb
stc
sbb
in
cmc
inc
test
adc
aas
push
push
scas
aaa
rorl
cmp
cmpsb
lods
sub
or
pop
test
sarb
jmp
dec
clc
and
xchg
fdivl
insb
out
mulb
andb
cmpl
pop
sub
int
mov
insl
jg
cli
test
jmp
add
mov
lods
xor
xchg
pusha
xchg
std
popa
and
les
cmp
ja
ss
xchg
sub
rorl
out
push
aaa
fstpt
sub
lods
jae
or
imul
cmp
dec
sub
out
inc
inc
aam
int
cmp
call
data16
and
lods
lock
dec
addr16
das
xchg
pop
push
xor
aam
jb
xchg
nop
cmp
cmp
cli
movsb
xchg
test
and
jno
stos
mov
or
enter
xorb
push
and
cli
mov
sbb
fstpl
add
je
cmp
insb
test
or
xchg
push
mov
aam
stos
xor
dec
aas
scas
pusha
cs
orb
jmp
xchg
or
xor
imul
bnd
add
inc
sti
push
xchg
and
fmulp
in
inc
mov
pop
xor
flds
mov
cmc
dec
out
data16
imul
loopne
jbe
mov
push
cltd
xchg
jo
fdivr
cmpsl
or
iret
fnsave
ljmp
shll
aas
inc
or
ret
dec
mov
es
sbb
es
clc
push
pop
inc
dec
mov
adc
add
mov
repnz
popf
les
les
aas
scas
mov
push
in
mov
rcrb
std
rcrb
stc
mov
jp
incb
stos
add
xor
push
std
scas
clc
mov
mov
add
jnp
loope
sbb
mov
cmp
push
xchg
or
push
das
add
and
mov
sbb
jmp
jmp
cs
sbb
xchg
les
mov
mov
outsl
push
pop
pop
sub
jbe
mov
popa
push
retw
jmp
pusha
jb
rcll
repnz
add
jle
push
xchg
int
push
fwait
adc
sahf
subb
loope
roll
push
sub
xchg
jbe
adc
and
bound
mov
push
pop
dec
mov
clc
test
or
cmpsl
mov
inc
inc
cmp
xor
mov
sub
popf
in
push
or
sbb
test
stos
in
cmpsb
jo
mov
push
mov
ficoms
into
inc
ds
xchg
inc
mov
pusha
test
pushf
mov
sbb
call
xchg
or
icebp
or
sbb
push
cmpsl
lahf
sub
add
icebp
je
pop
xchg
adc
rcrl
fsubr
mov
pop
adc
cwtl
out
lret
xchg
jl
jno
shlb
dec
into
std
jns
pmaddwd
xor
cs
leave
rcll
in
and
divb
sti
mov
into
insl
movsb
in
ds
pop
in
insl
inc
jle
lods
mov
mov
orl
jl
out
daa
pop
lret
nop
mov
inc
sarb
mov
movsl
or
out
adc
sub
mov
les
pop
and
call
cmp
mov
inc
adc
ret
sbb
js
and
leave
jne
bound
je
mov
call
mov
mov
cwtl
lds
dec
int3
fcoms
mov
push
add
pushf
mov
mov
inc
jecxz
ret
xchg
pop
popa
imul
push
pop
add
xchg
inc
movsl
fmul
test
inc
arpl
xor
insb
scas
mov
mov
rorb
outsl
pop
jo
repz
out
test
pop
roll
fcoml
adc
pop
popa
mov
dec
rorb
out
xchg
pushl
psubusb
and
jge
ja
test
add
xchg
cltd
lea
shlb
cli
sub
jbe
or
sbb
inc
cs
testl
test
cmp
call
js
inc
arpl
in
mov
mov
repnz
pop
jge
sbb
into
jne
jl
add
xchg
mov
and
in
and
nop
out
ss
mov
xchg
rcl
test
loope
in
mov
cmpsb
mov
xchg
inc
push
negb
outsl
test
pusha
nop
xchg
push
call
pushf
pop
loope
xor
or
or
add
pushf
loope
ja
lahf
mov
xor
sahf
lahf
lods
shrb
and
popf
jecxz
lods
mov
aaa
xor
pop
test
nop
cmpsb
jmp
mov
or
lea
sbb
sti
fdivrp
pop
int
pop
out
and
addl
mov
sub
cmp
jp
xchg
adc
and
add
mov
sbb
xor
in
sti
mov
scas
mov
lock
push
or
dec
scas
popa
outsb
jnp
notl
fdivrs
or
ljmp
pop
inc
test
push
in
pop
scas
sbb
xchg
xchg
lcall
jg
popf
or
push
decl
mov
pushf
cmpsb
mov
mov
xchg
mov
outsb
jne
stc
cwtl
or
add
mov
xor
arpl
xor
mov
pusha
mov
mov
cmp
sub
cmp
or
nop
int
insb
jb
dec
roll
mov
fnstenv
lock
cmp
pop
push
je
or
cwtl
pop
cltd
mov
pushf
push
mov
adc
pop
mov
xchg
dec
adc
clc
dec
cltd
movsb
push
push
dec
and
in
or
mov
lods
iret
push
sub
cmp
bound
mov
test
pusha
push
dec
mov
xchg
psllq
repnz
xchg
inc
adcl
lret
push
out
jl
sub
jmp
xchg
mov
movsb
insl
xchg
lds
jmp
xchg
fistpll
cmp
xchg
ljmp
in
push
pop
sar
je
les
xchg
dec
mov
pop
pushf
rorl
das
scas
dec
xchg
dec
sbb
xchg
add
pop
and
in
mov
dec
mov
dec
pop
into
dec
inc
mov
mov
test
test
xor
cli
outsl
cmc
clc
ljmp
xor
dec
leave
lahf
xchg
push
cmp
cwtl
mov
packsswb
lahf
fsubl
lods
sbb
jns
incb
cmpsl
adc
inc
lahf
sub
dec
clc
jno
cmc
mov
imul
sbb
mov
ds
jp
lock
movl
mov
sub
movsl
ja
mov
mov
sahf
pop
scas
imul
ds
push
dec
cli
lret
iret
cmc
adc
xor
mov
pushf
leave
aad
nop
pop
sbb
icebp
lods
js
pop
cmc
ret
and
push
insl
inc
cmpsb
cltd
sub
mov
jb
or
mov
outsl
lea
hlt
aas
pop
jno
mov
imul
aam
daa
push
dec
rclb
or
repnz
push
aad
enter
xchg
sub
insb
xchg
and
repnz
dec
pushf
test
cli
shll
xor
mov
and
icebp
jae
aad
fimuls
int
hlt
rol
rcl
bswap
mov
cmp
jb
pushf
mov
or
push
lods
test
adc
mov
mov
xchg
ss
lret
xchg
pop
mov
loop
lods
or
sbb
jbe
loop
mov
lock
jmp
or
jbe
or
jb
mov
popf
mov
mov
test
bound
add
les
enter
mov
add
push
es
les
jge
mov
jb
daa
mov
and
pop
push
pop
xchg
sbb
adc
xchg
push
insl
pusha
xchg
jbe
rolb
adc
xchg
adc
dec
fists
gs
xchg
adc
mov
xlat
mov
sub
test
cmp
aaa
xchg
nop
pop
dec
pop
test
aad
pop
lret
pop
and
ljmp
or
out
lock
inc
mov
push
push
outsb
fdivl
int3
aad
push
and
or
addr16
pop
cld
pop
fdivrl
lods
mov
sbb
hlt
push
inc
fsubs
jae
xchg
iret
xor
dec
sbb
push
mov
xchg
pop
pop
dec
inc
fdivl
mov
js
push
nop
cmc
nop
push
out
jge
out
push
mov
insl
add
out
ds
iret
pusha
and
sbbl
mov
xchg
and
lret
mov
loope
lcall
repnz
push
cmc
jb
jae
enter
test
push
incl
clc
and
xor
bound
test
pop
jb
stc
imul
jg
mov
cli
mov
stos
mov
mov
iret
sub
stos
loopne
cli
pop
mov
pop
rcl
pop
push
mov
inc
insl
jns
adc
dec
or
sbb
into
repz
inc
addb
add
inc
push
fstl
loope
cmp
int3
dec
jecxz
jmp
lcall
mov
pop
hlt
lds
outsl
push
out
loopne
cmc
aam
filds
test
lock
imul
or
test
mov
add
popa
cmp
cmp
lret
mov
mov
sbb
pop
ret
dec
fldenv
xchg
push
aad
decl
pusha
mov
aaa
cmp
cli
aaa
stc
sub
gs
fwait
outsl
or
fs
or
push
pop
dec
jmp
jl
lret
and
cmp
outsl
sub
dec
fmul
out
in
pusha
xchg
adc
cmpps
mov
xchg
stos
loop
mov
cmp
je
inc
and
or
cld
roll
nop
cmp
mov
and
mov
push
les
jno
fnstsw
cmp
lea
and
xchg
cmp
ret
xlat
out
outsb
adc
out
cmpsl
inc
nop
mov
scas
ss
test
std
or
xor
push
ljmp
cltd
jb
in
inc
push
or
lcall
in
ret
test
pushf
dec
add
outsl
jmp
or
push
loopne
pop
lods
mov
push
push
std
inc
data16
add
std
in
out
jl
lahf
das
movb
xor
into
jl
jnp
or
cmp
push
push
push
mov
push
add
push
test
fiadds
cwtl
rcrb
cmp
loopne
push
ja
scas
andl
inc
shl
loop
fisubrl
mov
stos
inc
jle
mov
movsb
mov
sbb
into
popa
insl
sbb
sti
mov
cmp
jae
outsl
mov
mov
xchg
shll
lods
or
test
cmp
pop
cmp
pop
sub
jns
sbb
daa
push
mov
mov
mov
add
nop
jae
jno
insb
mov
jecxz
test
std
scas
sub
jecxz
pop
mov
fidivrl
shrl
pushf
adcl
sub
aaa
lret
ret
rolb
bnd
pop
lret
fsts
sub
lret
lods
data16
arpl
loop
xchg
js
dec
sbb
add
pop
outsl
mov
xor
push
hlt
add
or
mov
or
pop
sub
cmp
dec
lock
jbe
out
or
and
pop
cwtl
scas
movsb
xchg
mov
cmp
xchg
dec
ljmp
inc
jecxz
xchg
cs
inc
pop
insl
pop
jg
jge
pop
das
or
movsl
sbb
mov
ljmp
mov
jmp
lret
add
movsb
adc
mov
pop
or
xorb
adc
and
xchg
jmp
jecxz
xchg
ret
daa
mov
std
cmp
xor
aaa
outsl
ja
fisttpll
add
mov
jl
inc
jle
lcall
mov
sub
in
cmc
aad
filds
repz
adc
or
mov
push
rclb
sub
sbb
in
mov
lods
sbb
aas
insb
xlat
bound
mov
pusha
arpl
or
mov
mov
scas
movsl
pop
ss
sub
or
fs
jbe
sub
add
add
cmp
add
add
add
cltd
add
add
add
lea
add
add
add
add
sbb
add
add
add
stc
add
add
add
insl
add
add
add
nop
add
imul
add
add
add
add
add
add
fld1
add
pop
add
add
add
add
addb
xorb
add
ja
mov
incl
add
cmpsl
adc
add
push
add
outsb
add
mov
addl
add
add
adc
xchg
add
add
add
add
add
add
adc
out
add
add
add
and
outsb
push
xor
jo
push
jb
inc
mov
sti
ret
enter
mov
inc
les
push
lea
adc
notb
fcomps
incl
pop
add
mov
enter
pop
dec
adc
jge
out
ret
add
push
incl
push
push
decl
int3
inc
lea
adc
add
jae
decb
push
decl
adc
shll
add
shlb
cmp
add
cld
adc
lea
adc
push
cmp
inc
mov
rorl
aaa
leave
add
jne
cmp
add
add
pop
add
cmpsl
adc
add
add
addl
add
add
add
inc
inc
add
gs
gs
pop
inc
dec
je
gs
je
jo
sbb
insb
jo
add
add
push
dec
arpl
insb
mov
gs
addr16
push
gs
xchg
jb
ret
push
imul
js
xor
add
add
mov
add
add
add
xchg
add
mov
clc
and
sub
inc
adc
xchg
mov
xor
stos
jno
arpl
lods
pusha
xor
jns
inc
repz
out
mov
movsl
fnstsw
xchg
stc
or
mov
aas
nop
mulb
je
push
pop
pushf
jnp
in
cmpb
xchg
adc
jae
pop
lea
push
fsts
pushl
pop
add
rclb
pushf
adc
jb
test
adc
outsb
sbb
xlat
push
test
test
out
in
mov
daa
adcb
sti
adc
ss
addr16
in
lret
xchg
jg
or
xchg
sahf
mov
in
xorb
jge
rol
sbb
cwtl
lret
mov
jnp
out
xchg
aas
push
sarb
data16
rolb
pop
outsb
cmp
mov
jle
push
addr16
adc
cwtl
mov
in
adc
sub
jmp
test
cmp
adc
mov
sub
mov
inc
pop
hlt
popf
mov
mov
dec
xchg
push
xchg
loope
shrl
mov
pusha
jg
sub
xor
or
cmp
ret
repz
push
stc
fldcw
scas
in
add
dec
xor
jno
and
or
cli
inc
notl
gs
mov
inc
lcall
aas
mov
dec
mov
xchg
enter
fidivl
inc
add
push
mov
pop
pop
jno
bound
insl
mov
cmp
enter
push
dec
and
or
int3
or
mov
in
dec
dec
inc
sub
pop
xor
mov
or
and
adc
mov
loope
imulb
dec
and
pop
push
mov
and
push
lret
mov
fistps
sar
js
cmp
jnp
loopne
push
pop
data16
mov
out
into
cmp
into
cmp
adc
mov
xor
or
std
dec
mov
lret
lods
inc
loopne
call
stos
mov
mov
lret
int
fsubrs
add
scas
hlt
lods
push
fs
aad
xchg
nop
add
cmp
ret
aad
mov
mov
int
dec
adc
test
es
and
cmp
cmovg
inc
jno
xor
sar
int3
add
xor
rcr
jge
lret
das
mov
outsl
pop
xor
sub
add
or
sbb
ds
push
outsl
fcoms
popa
rol
and
push
ret
pop
mov
cs
mov
or
mov
negl
popa
or
fsubs
cmpsl
add
add
push
cmp
push
cmpsb
lahf
adc
sbb
sarb
fsubrs
xchg
fildl
pop
push
cmp
in
add
mov
es
leave
jnp
sti
add
xchg
add
repnz
push
mov
test
adc
int3
xlat
jl
aaa
rolb
sub
cmp
icebp
mov
pop
sarb
adc
negl
and
popa
lcall
cmp
jnp
out
dec
aad
rolb
and
lods
js
in
cmpsl
cmpsl
mov
ss
rcr
daa
stos
mov
rcrb
sbb
cmp
adc
cmpsb
sbb
popf
push
sbb
lods
scas
push
sahf
popa
cwtl
addr16
jmp
nop
fs
mov
je
outsb
lds
mov
or
cwtl
js
iret
sbb
push
sbb
xchg
pop
jns
xor
push
ds
add
sub
ds
cltd
jo
adc
mov
and
inc
dec
adc
ret
cmpsb
addr16
jge
jnp
gs
test
sub
or
cmp
test
sbb
pop
jecxz
imul
or
arpl
dec
rorb
jecxz
mov
cwtl
sub
ljmp
and
insl
enter
cmc
dec
fwait
push
jno
les
pop
movsl
jo
shl
test
fs
pop
mov
sub
movsl
jae
mov
inc
add
in
dec
dec
cmp
xchg
pop
mov
and
sub
adc
cmp
shl
ucomiss
mov
add
and
mov
cld
je
leave
movsb
inc
imul
mov
inc
dec
xchg
pop
dec
scas
lock
clc
pop
jg
push
insb
test
push
xor
hlt
dec
int
xlat
jb
or
out
or
movsl
dec
sbb
xchg
stos
jns
loope
pinsrw
cltd
ret
out
out
or
aad
and
pusha
sub
jne
mov
push
fildll
into
mov
or
xlat
in
push
cmpsb
sub
in
ret
frstor
sub
add
push
xor
in
testb
mov
push
aad
repnz
push
loopne
je
or
sub
outsb
lock
dec
jmp
hlt
cmp
pushl
cmpsl
add
jbe
xor
in
inc
jnp
mov
xchg
adc
jo
addb
sbb
shr
push
fdivs
lea
lea
dec
sbb
sub
lcall
outsb
add
std
cmp
repz
stos
adc
bound
cmpsl
gs
mov
les
xlat
mov
inc
jo
cmp
xor
sub
mov
push
lea
sbb
daa
xchg
mov
jnp
testb
xlat
loop
arpl
mov
jg
aad
mov
push
imul
out
mov
xchg
je
sbb
push
xlat
sub
cld
leave
fidivrs
jne
clc
mov
sti
cmpsb
lcall
sub
and
dec
and
push
cmp
popf
push
jle
cli
inc
mov
xor
jnp
popf
jne
push
xchg
popa
xchg
mov
jne
pop
lock
pop
lock
stc
cmpsb
xor
add
repz
inc
icebp
inc
cmp
aaa
xor
js
jmp
call
insl
lods
add
xchg
nop
in
flds
xor
cmp
loope
mov
out
and
movb
xlat
add
cmpl
ss
mov
loop
xchg
push
sub
xor
mov
xchg
jns
fstp
shrl
mov
or
mov
lds
rcrl
push
inc
xchg
ret
icebp
fidivrs
daa
push
sbb
jne
insl
outsb
jns
jecxz,pn
lahf
jg
dec
fidivrs
mov
pop
sbb
lods
push
sahf
repz
mov
repnz
mov
out
insl
mov
sbb
lahf
jae
cmpsl
daa
adc
shll
mov
test
out
mov
jbe
std
mov
cs
out
mov
fnstenv
adc
push
pop
out
fsubs
lret
test
stos
sbb
xor
arpl
jmp
xchg
or
dec
mov
push
aaa
sbb
aad
adc
sbb
mov
inc
inc
pop
jb
sbb
pop
addr16
std
sbb
mov
cmpsb
pop
loopne
add
les
cmp
pop
lldt
enter
test
insl
out
in
inc
cmp
or
cltd
out
fcoms
push
adc
adc
scas
cmp
inc
rclb
mov
adc
push
sahf
cs
and
pop
fstl
movsl
cltd
mov
daa
std
arpl
mov
pop
jecxz
push
xchg
xor
push
cmp
ljmp
or
loop
rolb
dec
xchg
mov
mov
aad
adc
xor
mov
mov
sbb
pop
mov
cmpsb
mov
or
jae
test
lret
aaa
sar
or
dec
mov
jg
jns
movsb
fmul
mov
out
sarl
cmc
push
outsl
clc
jl
xchg
cltd
sub
add
jl
jecxz
loop
sti
dec
ret
xor
xchg
cmp
or
jo
pop
push
inc
aaa
ljmp
int
bound
mov
rcll
enter
insl
sbbl
push
jae
inc
push
test
xchg
ss
xchg
subb
add
fmul
data16
in
ds
fcoml
lods
div
mov
dec
sbb
push
sub
jecxz
and
mov
or
push
xor
stos
dec
pop
ljmp
mov
pop
mov
dec
sbb
out
add
call
int3
into
in
or
ss
pop
or
stos
sbb
and
int3
cli
cmp
int
mov
xchg
mov
push
push
pushf
adc
cltd
pop
stc
jl
pop
aad
fstl
movsl
loope
outsb
test
mov
in
inc
sub
mov
movsl
cmc
js
jae
add
xchg
mov
cltd
mov
and
orb
fsubs
sub
imul
mov
push
or
or
add
push
ret
fcmovnb
dec
sbb
lcall
mov
xchg
and
adc
inc
je
dec
mul
push
sar
nop
fdivrl
hlt
lret
outsl
jmp
jmp
mov
aaa
fdivrs
adc
test
out
pop
movsl
rcrl
jg
jb
push
lods
cmpsl
cmp
cltd
inc
shlb
out
jecxz
cltd
sbb
popf
scas
stos
jp
outsb
stos
orb
cwtl
add
iret
out
cmp
xor
pop
shrl
loop
mov
fwait
xor
cmp
mov
repnz
dec
out
addl
sarb
xchg
scas
test
mov
adc
gs
daa
lret
fcoml
movsl
dec
inc
in
bnd
shrl
and
or
jp
sbb
sub
dec
fisubs
out
sub
sbbb
jnp
js
dec
aam
outsb
lods
into
mov
xchg
xor
add
sti
addr16
mov
outsl
fisubs
lods
push
xchg
mov
lock
mov
fidivrl
loope
adc
mov
add
lret
rcl
sbb
out
fwait
sbb
sub
adc
jecxz
repnz
pop
dec
lret
hlt
fisttpll
lret
or
movsb
xlat
sub
jno
and
jp
sub
in
xchg
rcl
sahf
call
popa
adc
fcmovne
jnp
std
pop
aam
xchg
mov
xchg
fisubrs
scas
loope
xor
loopne
mov
addr16
add
in
push
cmc
je
loope
dec
lret
mov
dec
dec
movsl
mov
mov
gs
mov
test
test
roll
pop
stc
mov
fprem1
scas
add
add
notl
and
mov
lahf
icebp
aam
popa
sub
shll
mov
xor
inc
adc
inc
pop
mov
cmpsl
mov
adc
cmpsb
sub
or
sub
mov
cmpsb
rcll
push
imul
mov
shlb
xchg
adc
add
lock
sub
mov
dec
cmpsl
idivl
sub
pop
in
pop
pop
daa
jmp
xor
mov
lcall
push
loope
jecxz
pop
mov
inc
hlt
adc
push
lods
scas
loop
sub
popf
in
ret
cmp
add
inc
or
sti
rorl
sub
cmp
push
mov
lcall
pop
xchg
cld
and
cmp
pusha
xor
jnp
std
jno
sarl
sbb
movsbl
notl
fnsave
inc
popf
lods
iret
pop
ret
dec
jb
in
ljmp
cmpb
in
pop
aaa
mov
daa
jnp
sbb
subb
into
test
fldenv
aaa
repz
xchg
lret
les
mov
cltd
jecxz
mov
or
call
xor
testl
mov
lods
cmp
xor
adc
jmp
and
sub
mov
sbb
popf
mov
lahf
pop
loope
or
imulb
jmp
push
out
sar
sub
xlat
inc
pop
aad
ss
dec
and
mov
fcmovu
mov
pop
dec
cltd
nop
ss
push
fdiv
es
imul
xor
ret
mov
push
scas
push
adc
xchg
movsl
daa
pop
call
sub
mov
push
xchg
negb
ret
dec
negb
push
cli
or
fbld
cli
jle
xor
jnp
aas
in
adcb
adc
push
pusha
mov
dec
rcll
sbb
push
cmp
xchg
dec
dec
push
mov
mov
jb
jecxz
dec
push
cli
inc
mov
mov
mov
mov
shlb
push
add
cmpsl
xor
dec
pop
sub
pushf
out
dec
mov
mov
mov
dec
jns
and
xlat
jecxz
in
loope
roll
pop
std
pop
pop
xor
cwtl
sub
sahf
test
clc
fucom
hlt
sub
aaa
dec
mov
std
adc
inc
mov
xchg
movsl
scas
push
fwait
xchg
loopne
inc
aas
flds
rcrl
pop
jbe
mov
or
daa
fisttps
jns
sub
in
adc
push
mov
xor
lcall
push
push
mov
xchg
popf
clc
sbb
fdivrp
xchg
xchg
mov
hlt
or
data16
cmp
out
shlb
cld
mov
adc
jbe
shrl
dec
je
out
sub
xor
imul
pusha
cmp
push
shrl
mov
cld
xor
xchg
xorb
pop
fstpt
mov
and
pop
fistpll
call
subl
dec
sbb
push
sbb
mov
jecxz
sbb
and
sub
lret
pop
adc
inc
lahf
outsb
clc
daa
jbe
jne
jns
imulb
int
scas
lret
inc
add
pop
scas
xor
push
jo
xchg
or
test
sbb
fsubrl
shlb
add
mov
pushf
fstps
cli
lahf
or
inc
das
jecxz
cld
mov
push
movsb
fisubrl
jp
inc
sbb
jnp
mov
cmp
or
lahf
orl
bound
dec
dec
inc
cmp
ja
mov
enter
xchg
xchg
add
xchg
stos
pop
cltd
lret
jg
mov
sub
cwtl
imul
dec
outsl
stos
clc
jno
lret
mov
and
jmp
nop
push
pop
icebp
out
hlt
mov
imul
mov
aad
rclb
jbe
adc
xlat
lcall
lret
jge
addr16
or
inc
cltd
xchg
xor
add
adc
clc
mov
pop
dec
or
imul
inc
jmp
mov
fstp
popa
lds
mov
add
pop
mov
test
xor
mov
xor
add
xchg
in
jl
fnsave
or
leave
shrl
les
mov
or
insb
rolb
dec
test
cli
mov
fmul
xchg
loope
xor
cld
inc
leave
push
sub
fsubl
push
mov
dec
adc
xchg
xor
int3
dec
rorb
lcall
pop
mov
ret
jns
loopne
and
sbb
lock
cmp
xchg
or
aad
roll
inc
test
mov
xchg
idiv
lahf
mov
faddl
cmpsl
lahf
jae
adc
nop
lcall
lds
in
mov
push
jg
or
adc
ljmp
or
xchg
xchg
pop
pushf
test
xchg
mov
pop
add
xchg
cld
std
jle
aas
pop
push
test
push
push
movl
xor
notl
aas
xor
pushf
mov
rolb
fstl
push
or
jge
mov
dec
or
popl
xchg
fisubs
push
aaa
data16
and
stos
sub
std
jns
ljmp
xchg
xchg
jecxz
xchg
xlat
pop
daa
jge
imul
cmpxchg
jo
in
xchg
mov
add
cmp
inc
mov
jae
test
jge
popf
das
sbb
ja
jnp
dec
enter
cli
sbb
ljmp
mov
dec
jl
add
pushf
sbb
sbb
cmpsl
mov
fld
fisttpll
sbbb
adc
in
pop
aas
pop
mov
mov
lea
jno
das
push
add
xchg
mov
lds
mov
jmp
or
pop
ror
scas
ja
pop
and
ljmp
pop
xor
dec
or
int3
ss
mov
cmp
leave
hlt
notl
shr
and
mov
lods
jecxz
xor
ja
out
mov
dec
fnstenv
popa
lods
fld
xchg
mov
lods
jo
push
repnz
adc
jmp
xlat
pop
push
mov
stos
cli
mov
jg
xor
pop
daa
stos
int
cltd
nop
mov
ret
mov
xor
push
sub
cmc
ss
iret
arpl
xchg
rolb
xchg
adc
cmp
jo
ret
pop
jp
daa
or
gs
and
repnz
pop
inc
sbb
sbb
jb
iret
mov
insb
ret
bound
iret
mov
jmp
fidivrs
bound
test
adcl
sbb
pop
bound
sbb
push
jecxz
out
in
fdivr
test
std
fnstenv
mov
out
adcl
xor
sti
pop
push
movsb
call
dec
sub
add
xor
push
fs
mov
lea
cmp
stc
xchg
test
ja
cld
mov
fisubrs
and
testl
je
in
cmc
push
test
inc
arpl
movsl
cmpsb
add
ss
pop
push
test
arpl
stos
sub
addr16
lret
jg
pop
mov
nop
push
or
mov
add
dec
and
stos
jl
dec
rcrb
repnz
xchg
aad
es
mov
sbb
mov
fld1
cmp
fimuls
mov
xchg
xor
jmp
sbb
outsb
daa
or
jmp
and
pop
add
imul
in
arpl
mov
jmp
push
jns
add
sub
sbb
roll
jp
inc
lods
xchg
push
lcall
cs
ret
and
mul
push
in
int3
push
pushl
mov
pop
sub
sbb
sub
add
sbb
cltd
cli
outsl
add
cmp
add
fcompl
rcr
dec
popf
or
mov
cmp
push
lcall
test
push
test
test
and
cli
xor
or
xchg
pushf
jne
and
jae
push
repz
dec
sbbb
iret
sub
arpl
lahf
fcompl
push
inc
sbb
mov
mov
sub
push
rorb
test
les
repnz
iret
retw
daa
int
mov
imull
imul
aaa
test
sub
add
sbb
ja
lds
xchg
dec
push
mov
xor
add
mov
imull
sub
in
je
das
je
xor
movaps
mov
cmp
push
push
call
sti
dec
sahf
ja
xchg
test
cwtl
xchg
addb
and
in
negb
aas
xchg
sbb
sahf
mov
push
pop
in
fisubrl
ja
mov
insl
mov
lods
loop
hlt
mov
pop
xchg
enter
dec
push
xorl
mov
mov
push
push
movsb
sub
push
xor
lea
or
sub
push
inc
jne
fwait
cmp
ret
clc
in
pushf
imul
ljmp
xchg
mov
test
xor
popf
mov
hlt
arpl
out
jnp
adc
and
jp
pop
sahf
add
mov
and
push
pop
insb
jo
loopne
popa
fs
push
jae
dec
xlat
pusha
and
iret
pop
out
xchg
mov
fldcw
stos
movsl
inc
js
mov
add
pop
mov
loop
in
sub
das
andb
call
xchg
inc
lods
cmp
cmc
dec
push
lods
xor
fadd
cmc
add
xchg
ja
and
inc
xchg
push
sbb
test
addl
or
or
push
mov
ret
loope
inc
inc
and
outsl
scas
cmpsb
jecxz
and
mov
sub
cmp
sbb
je
jle
mov
cwtl
xor
fmul
cmc
aaa
jl
xchg
repz
and
sbb
xchg
test
roll
out
mov
xchg
sub
out
add
add
push
sbb
sub
sarb
cld
out
pop
xchg
test
fisubrl
mov
out
mov
stos
xorl
loope
adc
fsubp
les
or
out
std
xchg
jns
ja
into
in
test
jg
repz
mov
lret
mov
mov
movsl
test
into
xchg
movsl
es
stos
dec
cmc
jmp
mov
push
fldenv
jae
jae
dec
aas
xor
xchg
add
cli
lods
cli
in
sbb
rorb
ret
scas
xor
fldl
jmp
push
mov
xchg
cmp
idiv
test
dec
sbb
ja
out
popf
pop
mov
adc
push
add
pop
aad
out
and
sahf
mov
loope
adc
cs
in
sub
iret
ljmp
pushf
jge
leave
add
sub
in
sub
int
in
loopne
mov
add
add
mov
cmpsl
adc
add
add
addl
add
xchg
add
add
out
add
rolb
add
ja
mov
ljmp
in
push
push
push
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
push
mov
pop
add
mov
mov
cmp
je
cmp
jg
mov
mov
mov
movb
movzbl
sub
inc
test
jne
jmp
mov
movb
call
mov
mov
movzbl
sub
je
incl
jmp
push
pushl
call
push
push
mov
push
push
mov
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
dec
out
inc
add
add
push
and
push
les
js
xor
add
add
add
add
add
ret
lds
push
add
add
or
push
add
add
add
add
add
lcall
sub
clc
xor
add
popaw
popa
jb
push
pop
push
ja
jae
inc
inc
and
push
ja
mov
inc
stc
add
add
xor
mov
fcmovnu
inc
or
pushl
pop
or
push
ret
cmp
movsl
adc
test
test
push
test
lea
push
xor
in
jno
mov
add
adc
inc
push
cld
repz
movl
push
roll
adc
xor
rolb
and
incl
lea
add
test
pop
std
std
sar
xor
cld
shlb
push
ljmp
adc
test
add
pushl
rorb
jo
xchg
clc
push
clc
push
add
add
push
adc
outsl
add
add
add
mov
xchg
repnz
cmp
cmp
out
push
sbb
add
inc
scas
outsb
insb
outsb
movsl
jne
adc
inc
popa
inc
inc
jo
movsl
popa
xor
outsb
outsl
je
inc
imul
icebp
popa
push
insb
imul
gs
insb
xor
xor
inc
jae
jae
loopne
insb
inc
insb
inc
dec
add
add
add
add
add
add
add
adc
add
add
add
add
arpl
add
add
add
add
add
add
add
les
dec
addr16
cmpsl
fwait
sub
stos
adc
stos
sar
rcrl
leave
ret
dec
roll
pop
push
push
add
ss
inc
rcrb
inc
xchg
dec
hlt
sbb
outsl
push
dec
adc
clc
repz
fs
add
jo
jge
mov
mov
jge
shlb
inc
out
jge
stos
xlat
jg
mov
lds
cmp
cmp
mov
repz
mov
cmc
add
fldenv
mov
dec
pop
jg
adc
lret
mov
pop
push
shll
pop
sbb
jp
pop
add
lret
xlat
fwait
sbb
dec
hlt
test
cmp
callw
dec
mov
sub
pushf
filds
out
icebp
sti
rcrl
dec
mov
fbstp
shlb
testb
dec
pop
rolb
xchg
aam
popf
cmp
push
xchg
loopnew
filds
pop
push
stos
gs
imul
lods
das
les
xor
mov
jno
insl
mov
sub
sbb
and
ret
pop
xchg
fiaddl
pop
xchg
mov
pop
jle
add
fmulp
add
push
iret
mov
mov
dec
aam
das
pushf
sbb
jge
jmp
sub
lock
add
orb
and
push
pop
jge
dec
sti
in
inc
lret
push
mov
mov
jns
cmp
add
push
loope
pop
arpl
lea
faddl
and
sbb
mulb
cwtl
aas
adc
cmpb
xor
repnz
imul
and
arpl
js
or
pop
sbb
loop
jp
lcall
lcall
jmp
fstpt
cmp
jecxz
loop
dec
hlt
adc
mov
push
data16
sub
outsl
std
cmp
jns
int3
add
or
cwtl
inc
lock
sbb
dec
repnz
lods
xlat
movsl
fwait
mov
or
je
shlb
push
jp
cmc
addl
or
lret
imul
fldl
stos
mov
xor
int
cwtl
imulb
inc
lahf
jmp
movl
ja
pusha
add
clc
icebp
dec
cmp
xchg
test
cltd
sbb
cmp
fists
in
enter
cmpsl
and
or
add
jle
loop
sub
mov
xchg
jle
sti
or
or
pop
or
out
sbb
inc
or
ret
mov
or
outsb
or
pop
mov
pusha
mov
lds
popf
dec
xor
sub
cmp
and
roll
popa
add
xor
enter
and
imul
cld
lea
dec
in
fsubrs
or
push
icebp
push
pop
dec
fstpt
add
sub
loope
loopne
lahf
enter
mov
ss
dec
std
icebp
cli
insb
pop
test
inc
shll
mov
out
fdivrs
in
mov
fwait
add
pusha
gs
scas
jecxz
and
pop
setle
push
addr16
push
lods
nop
aaa
mov
or
ja
sbb
add
dec
sub
dec
jle
sahf
sbb
aam
xchg
out
cmp
ret
jno
dec
dec
imul
pop
shl
push
mov
int
test
out
lcall
push
outsb
into
or
lret
jecxz
mov
xchg
pop
jns
jnp
and
fnstsw
loope
mov
xchg
push
sub
xchg
nop
lret
stos
push
pop
sahf
cld
mov
pop
pop
or
jno
cltd
dec
rcll
or
in
leave
ds
mov
mov
xchg
les
jbe
sarb
test
sub
mov
xchg
pop
jmp
sbb
orb
das
je
fldl
and
pop
adc
cmp
inc
out
lods
cmp
jo
inc
mov
fsts
mov
mov
outsl
dec
rolb
outsb
fdivl
cltd
out
jno
repz
popa
xor
xchg
mov
testl
ljmp
movsb
pop
jle
mov
cltd
imul
mov
push
xchg
sub
push
aad
and
push
std
data16
leave
push
pop
bound
jp
mov
xchg
popa
loope
ror
push
test
push
popa
in
sub
xchg
testb
inc
test
lods
cli
push
xorb
mov
cmp
insb
xchg
loope
sahf
popa
loope
cwtl
jo
xchg
or
pusha
out
adc
jecxz
repnz
add
incl
pop
cmc
ficomps
and
push
je
lds
add
daa
out
xchg
nop
mov
pop
xor
mov
sbb
movsl
xor
xlat
test
push
ret
mov
dec
mov
pusha
daa
xlat
fldl
in
and
lcall
jmp
inc
add
pop
jb
cmc
leave
pop
mov
jecxz
das
mov
scas
pop
pop
add
or
xor
insl
inc
addr16
in
pop
lods
in
or
movb
mov
bound
xchg
xchg
ja
push
repnz
jecxz
mov
sbb
sub
cltd
cmp
aam
popa
sbb
ja
sbb
clc
sub
clc
rcr
fwait
nop
je
imul
lcall
popa
mov
stos
xchg
lcall
leave
mov
std
sar
stos
shrl
jae
sahf
jo
xchg
mov
pusha
xlat
xchg
pusha
add
loope
aam
out
out
mov
dec
sub
sbb
js
shlb
sub
test
jmp
pop
jo
loop
sub
sti
mov
add
mov
subl
es
sub
addr16
addl
mov
push
ret
fidivrs
and
ret
inc
movsl
jo
stos
dec
loopne
aaa
in
repnz
test
scas
repz
adc
xchg
pop
ja
xchg
test
mov
je
jb
icebp
sub
inc
sbbl
cmpsb
aas
sub
out
cmc
sub
or
repz
sbb
sahf
shll
cs
and
sub
stc
loop
cmp
push
mov
jp
repz
mov
add
push
iret
enter
mov
add
lock
lods
cmp
stc
and
insb
mov
lahf
cld
into
xchg
and
xchg
aas
or
mov
mov
je
mov
aad
inc
pop
sub
pop
test
jecxz
cs
sub
jno
pop
outsb
sbb
sub
repnz
xor
jmp
movl
testb
sbb
fistps
ds
jo
push
fldenv
jns
jp
mov
xor
push
mov
notb
lret
sahf
inc
lcall
add
shr
cmp
das
es
add
ds
push
xchg
jl
pop
add
jno
pop
aam
xorb
xchg
daa
loopne
sahf
inc
imul
jno
xchg
sbb
icebp
mov
adc
inc
jle
dec
repz
xchg
sbb
out
mov
xchg
jge
fbld
ljmp
jne
sub
inc
pop
out
loope
arpl
aam
inc
aaa
test
xchg
pop
mov
push
js
jge
cmp
pop
mov
or
shll
icebp
xchg
cmp
iret
in
push
inc
xor
data16
jns
clc
adc
mov
jmp
mov
out
adc
je
imul
sbb
call
push
lods
lahf
jmp
and
insb
int3
in
test
inc
inc
adc
push
cmpsl
push
xor
xor
or
dec
aam
push
push
sbb
sub
push
mov
xor
mov
mov
xor
or
push
movsl
push
shlb
lret
pop
add
lds
sbb
leave
ret
mov
dec
dec
pusha
nop
jg
add
aad
sbb
ljmp
cli
pop
in
pop
arpl
int
mov
push
adc
dec
in
mov
test
test
mov
enter
jge
inc
sbb
je
cmp
jle
and
std
push
inc
inc
mov
leave
pop
cmpsb
roll
loop
xchg
in
sbb
cmp
pop
add
scas
sub
nop
enter
fcomp
mov
jae
push
sbb
rclb
lret
inc
and
mov
daa
cmpsb
enter
inc
push
ret
into
mov
xor
call
dec
call
out
sbb
fldenv
scas
das
push
pop
fsubrl
ja
add
dec
mov
icebp
jp
repz
push
dec
push
cmp
imul
daa
sbb
jg
daa
sub
xchg
pop
pop
cmc
popa
adc
daa
lock
inc
add
lea
lds
movsb
xchg
push
and
pop
lock
lcall
jg
dec
rol
repz
push
mov
mov
add
repz
je
mov
lret
jo
add
sub
lods
lods
mov
xchg
out
cs
fistpl
int3
jle
mov
mov
mov
dec
andb
sar
std
mov
ret
inc
std
dec
movl
ret
mov
jmp
sbb
aad
add
lds
mov
sbb
jecxz
out
lods
inc
gs
xchg
mov
shl
nop
mov
shlb
mov
mov
jmp
mov
pop
arpl
inc
sbb
and
cmp
fwait
cmp
and
push
add
mov
les
cmpsl
mov
sub
xchg
aaa
out
loopne
mov
lcall
cmp
sbb
or
sub
shrb
add
popa
in
inc
cmp
mov
pusha
sub
mov
pop
jbe
out
inc
lods
sahf
int
mov
cmc
fmulp
scas
sahf
sbb
dec
xor
scas
imul
jl
movsl
std
sub
dec
inc
mov
daa
mov
lret
jb
in
lahf
sbb
popf
or
jne
dec
fs
adc
test
xchg
mov
fisubl
out
push
fcoms
push
sbb
dec
sbb
sbbl
xor
in
jp
dec
xchg
out
inc
push
sbb
aam
divl
mov
pop
mov
inc
push
or
call
fwait
xor
loope
js
stos
das
dec
sub
cmpsl
sar
fbld
inc
lds
mov
int
rcll
sbb
or
jg
enter
sub
hlt
cmp
add
fistpl
sahf
movsb
push
fdivrs
push
std
inc
cmp
pop
arpl
popa
pop
repnz
fs
popa
inc
sahf
outsb
xor
mov
inc
sbb
test
pop
push
push
rcl
pusha
ret
cltd
aaa
jg
cmp
sub
fdivl
lds
lock
cmp
inc
sbb
jmp
and
adc
pop
test
push
adc
push
jnp
loopne
popa
jecxz
pop
cld
mov
jno
push
enter
mov
pop
jae
in
mov
pop
xor
dec
or
lods
movsl
testl
mov
mov
pop
xor
sub
clc
jnp
inc
pop
insl
shrb
stc
cld
add
pop
jle
sti
sbb
lock
jg
dec
aad
xchg
lcall
cmpsl
hlt
cltd
sbb
mov
rcll
inc
adc
aas
push
jae
mov
add
loope
mov
mov
outsb
std
movsl
sub
inc
dec
push
cli
rolb
ror
icebp
mov
loopne
andl
add
lcall
jecxz
inc
xor
push
mov
enter
insl
inc
pop
mov
arpl
push
arpl
stos
sti
pop
cmp
jmp
call
and
hlt
jno
push
fstl
sub
and
fs
sahf
adc
adc
clc
mov
add
inc
aam
xor
xlat
push
inc
cmp
cs
cmc
shrl
es
sti
dec
mov
sarb
or
adc
dec
insl
mov
pushw
xchg
or
mov
dec
mov
popf
and
ja,pt
jge
mov
add
or
rcrl
rcrl
and
adc
sbb
imul
mov
sbb
jle
lock
sti
lds
sbb
add
jne
mov
repz
sbb
add
adc
stos
push
das
loope
xlat
xchg
call
push
outsl
mov
rcrl
jns
mov
mov
jne
call
xchg
pop
test
adc
movsl
add
lock
divl
sub
es
xchg
sub
xchg
sti
fildll
roll
aad
or
scas
int3
sub
or
mov
xor
fstpl
inc
cmp
in
lret
xor
call
cmp
mov
rcl
aam
je
push
repz
iret
adc
pop
leave
xchg
pusha
adc
fs
aad
jge
adc
std
adc
xchg
lcall
cltd
lahf
test
pop
int3
ljmp
cmpsl
in
mov
cmp
and
sub
shll
cmp
sbb
cmp
inc
pop
iret
mov
sub
mov
std
push
xor
std
and
shll
xchg
pop
mov
mov
push
and
inc
push
sahf
mov
data16
sub
testb
lcall
arpl
cld
push
sahf
cld
push
push
stos
hlt
push
mov
dec
or
daa
or
cmp
enter
mov
sub
and
loop
jge
mov
add
test
sti
mov
movb
popl
movsb
cmp
jo
pop
fstps
pop
push
in
insl
lahf
cli
mov
mov
sbb
imul
xchg
adc
enter
adc
subb
sbb
sub
mov
fucom
jbe
in
pop
cmpsl
pop
mov
and
add
and
push
gs
xor
adc
dec
inc
scas
rcr
or
add
pop
out
or
fstpt
push
add
movsb
adc
mov
mov
negb
lea
stc
cmp
std
lret
stc
in
or
and
mov
adc
movsb
sub
adc
pusha
jno
out
cltd
lret
movsb
addr16
cwtl
inc
filds
jecxz
mov
adc
outsl
xor
insl
scas
pop
and
mov
or
movsb
push
cwtl
sbb
sbb
sbb
arpl
cli
popa
iret
lret
cmp
enter
or
out
pop
loopne
mov
and
fwait
ja
and
addr16
adc
les
lds
mov
mov
lahf
inc
inc
xchg
or
cmp
sub
jnp
mov
and
push
sub
cmp
dec
and
in
pop
fidivrs
add
lcall
mov
mov
insb
dec
push
jle
das
jl
daa
mov
mov
fs
lcall
push
cld
jp
cmp
cld
or
movsb
push
int3
cli
and
cmc
mov
jg
cmpsl
insl
cmpsl
nop
sbb
data16
ja
dec
test
xchg
push
push
cwtl
dec
into
dec
push
push
jp
pop
out
xchg
sub
mov
and
sub
push
pushf
in
test
xchg
mov
xchg
test
popf
sbb
mov
fiadds
inc
or
inc
xorl
jb
rorl
or
enter
lret
icebp
sub
xor
loopne
inc
scas
fnsave
shl
roll
xchg
cmp
jbe
jp
ss
jmp
loop
jmp
lock
mov
xchg
lea
sti
mov
push
adc
test
adc
rclb
push
pop
rorl
adc
decl
jl
outsb
sbb
setge
ljmp
mov
fisubrs
in
shll
call
push
jbe
imulb
cwtl
xor
hlt
adc
xor
push
add
insl
cmpsb
sub
test
arpl
dec
fs
es
movsl
push
mov
popa
sarb
ja
icebp
xchg
imul
imul
mov
int3
add
movsb
int
pop
dec
testb
scas
leave
push
add
loope
mov
test
dec
add
push
fs
clc
sbbb
xor
pop
mov
mov
push
daa
mov
out
in
sub
cmpl
fists
and
sbb
stos
scas
daa
or
popf
daa
ret
push
movsb
sbb
scas
in
add
stos
cmpsb
repz
loop
xchg
jle
cwtl
push
mov
fs
or
and
mov
aam
stc
ret
icebp
mov
push
sub
cmp
pop
sbb
cltd
mov
div
dec
sarb
lahf
mov
sub
repz
jmp
mov
iret
in
jmp
fnstsw
pop
mov
outsl
sbb
cmp
mov
in
adc
fsubrs
jb
xlat
lahf
jmp
xor
push
and
mov
sti
test
out
dec
dec
mov
jecxz
mov
or
pushf
mov
xor
fsubrs
add
push
cmp
je
inc
cmp
movsb
jbe
andb
insb
mov
inc
test
push
dec
movl
rclb
insl
jo
aad
lods
nop
aad
lds
mov
adc
mov
call
je
out
push
scas
jmp
xor
fwait
adc
mov
mov
cmp
hlt
inc
mov
xchg
aam
sub
mov
or
inc
xchg
jle
sbb
inc
push
fucomp
inc
mov
add
mov
jne
dec
jae
inc
xor
jo
fildl
push
jo
add
cmc
ret
mov
std
std
cmp
or
lods
pop
shl
jmp
fnstcw
pop
cmp
jge
fnstenv
leave
into
xchg
stos
mov
in
sbbl
push
gs
ds
imulb
mov
push
ja
cmp
push
dec
mov
mov
sbb
fwait
pop
arpl
popf
mov
sbb
lods
sub
xor
out
dec
and
xor
icebp
loope
jbe
pop
jno
jns
movsl
scas
nop
mov
and
in
lret
rclb
push
popa
sti
hlt
imul
jmp
adc
mov
cs
jno
mov
repz
sub
pop
or
cli
jge
push
out
loopne
insb
fsubp
sub
cmpsl
scas
sub
dec
push
xchg
dec
imul
sarl
sub
and
imul
fwait
jge
jns
xchg
sub
sbb
sub
in
sbb
add
xchg
or
fadds
insb
daa
adc
or
negl
ja
adc
fdivl
mov
cmp
clc
push
leave
cmpsb
adcl
mov
and
push
xor
rorb
xor
pop
xor
leave
lods
mov
fistpll
das
popf
sub
test
mov
sbb
adc
push
pop
test
push
pop
xchg
inc
cmp
subl
xchg
movsl
dec
pop
push
enter
inc
and
pop
sahf
mov
inc
mov
jle
popf
roll
xchg
push
xor
in
shll
xchg
add
xor
js
add
sbb
and
mov
cmp
into
rol
push
out
pop
xchg
popf
movb
das
call
xor
test
xchg
fsubrs
cmp
push
test
mov
sub
lret
fs
fwait
jmp
loope
in
mov
leave
daa
mov
push
mov
imul
cld
ret
add
movsb
fldcw
aam
out
and
mov
cld
adc
inc
add
sbb
in
outsb
les
dec
dec
sub
cmc
dec
jno
xchg
adc
fucomi
cwtl
xchg
sub
inc
fidivrl
enter
aam
negb
inc
scas
push
pop
push
fisttpl
ljmp
add
movsb
stos
addl
out
xor
int3
fadds
fldl
sub
or
dec
push
sbb
shl
fistpl
mov
add
xchg
sbb
push
dec
shrl
jae
sbb
push
int
cmp
loop
or
jecxz
jmp
into
sahf
inc
or
xor
and
fistps
xor
mov
ret
aas
adc
jl
test
adc
pop
jb
fbstp
ss
adc
das
push
test
push
sbb
aam
or
fsubrs
or
jg
pop
mov
movsb
push
shl
cmp
pop
ds
push
imul
shl
fwait
jmp
fwait
push
and
jecxz
data16
mov
scas
sahf
sbb
movsb
addr16
js
lods
sbb
lret
jecxz
nop
or
enter
push
insl
sbbb
pushf
stos
int
rolb
hlt
call
rol
mov
cltd
cwtl
repnz
xor
stc
mov
pop
xchg
dec
imul
xor
or
cmp
and
jae
hlt
cli
addr16
popa
mov
pushf
into
outsl
mov
into
sub
adc
aam
add
cltd
xchg
jne
add
add
add
add
in
add
add
add
add
add
add
add
add
add
add
push
adc
add
add
add
add
add
add
add
add
xor
lods
in
in
in
inc
add
add
fisubrl
ja
mov
js
js
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
in
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
in
add
fsubr
add
aam
add
int3
in
add
in
add
mov
in
add
lods
in
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
out
add
dec
out
add
push
out
add
pop
out
add
fs
add
insb
out
add
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
out
add
mov
out
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
loopne
add
or
add
xor
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
scas
lock
pushf
lock
xchg
lock
mov
add
test
add
jl
add
je
add
insb
lock
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
shl
add
fdiv
add
lock
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
push
icebp
add
mov
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
inc
repnz
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pusha
repnz
push
repnz
mov
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
