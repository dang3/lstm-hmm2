add
or
add
add
add
jne
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
call
pushl
mov
call
push
push
pushl
call
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
xor
test
jle
push
lea
push
mov
cmp
je
inc
add
cmp
jl
pop
pop
cmp
jl
xor
jmp
test
jle
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
inc
xor
test
mov
jle
lea
mov
inc
add
cmp
jl
pop
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
pushl
pushl
jne
push
pushl
call
jmp
dec
push
call
pop
ret
int3
int3
int3
int3
int3
call
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
pushl
mov
pushl
mov
push
call
mov
mov
movzwl
movl
mov
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
push
push
mov
mov
push
call
mov
push
push
push
pushl
call
mov
push
call
mov
push
mov
call
neg
sbb
inc
push
push
push
sub
lea
push
mov
push
call
cmpl
je
cmpl
je
push
call
mov
xor
xor
call
mov
xor
call
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
test
jne
mov
not
mov
or
mov
lea
push
call
mov
pop
leave
ret
push
imul
jb
je
arpl
add
add
push
pushl
call
push
mov
pushl
call
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
mov
push
push
call
mov
call
push
push
pushl
mov
call
push
mov
pushl
call
mov
jmp
push
lea
push
push
pushl
call
xor
mov
push
push
push
push
pushl
call
pushl
mov
pushl
pushl
push
push
call
push
pushl
pushl
push
call
lea
push
call
pop
push
lea
push
push
push
push
call
push
lea
push
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
pop
jmp
call
push
mov
call
xor
leave
ret
push
mov
mov
mov
push
push
mov
mov
push
mov
mov
mov
mov
mov
add
xor
mov
movl
mov
add
mov
mov
cmp
je
movzbl
sub
push
call
add
cmpl
jg
mov
mov
mov
movzbl
sub
incl
test
jne
jmp
mov
mov
mov
call
decl
movzbl
sub
je
incl
call
jmp
call
mov
push
push
mov
push
push
mov
push
push
push
push
push
pushl
pushl
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
andl
andl
push
mov
push
push
movl
movl
movl
movl
mov
call
mov
mov
push
push
movl
movl
mov
movl
call
andl
push
mov
call
pop
ret
push
mov
sub
push
pushl
call
pushl
mov
xor
movl
pushl
mov
movl
movl
movl
movl
movl
movl
movl
call
add
test
jne
push
pop
jmp
push
push
push
pushl
call
mov
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
push
lea
push
push
call
add
leave
ret
push
mov
sub
push
push
push
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
pushl
call
mov
mov
add
push
pushl
call
mov
mov
movzbl
mov
movzbl
sub
test
je
mov
add
mov
push
push
push
pushl
call
mov
sub
mov
add
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
call
call
jmp
push
call
mov
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
push
call
mov
add
mov
jmp
jmp
push
pushl
call
mov
pushl
pushl
pushl
push
push
call
add
pushl
call
cmpl
jb
mov
pop
pop
pop
leave
ret
add
add
add
add
and
outsb
and
and
les
push
xor
add
add
add
add
add
add
add
add
add
faddl
add
add
add
add
add
add
add
dec
add
cmpsb
add
add
add
or
xor
and
insb
popa
add
push
outsl
inc
jne
outsb
fs
inc
enter
insb
gs
jnp
shll
call
fadds
push
incl
dec
add
call
std
std
mov
push
adcl
dec
push
push
jne
mov
cltd
stc
mov
pop
pop
add
push
adc
push
sar
repz
cmp
add
add
add
push
add
daa
adc
xor
test
add
and
lea
loopne
loopne
lcall
add
call
loopne
lock
push
adc
std
lcall
mov
ret
repz
adcb
push
call
and
push
push
subb
add
add
cld
add
add
add
xchg
add
add
add
add
cmp
out
add
add
inc
add
mov
jb
mov
inc
gs
movsl
js
add
outsl
arpl
gs
gs
gs
insb
add
inc
push
js
push
xor
push
jne
push
add
add
and
jae
jae
loopne
insb
insb
insb
dec
dec
add
add
add
sbb
add
add
add
add
mov
add
add
add
add
add
add
add
add
out
addr16
cmp
int3
sub
fidivl
fadds
xlat
inc
in
inc
cmc
les
adc
iret
sbb
jecxz
insb
mov
cmc
data16
cmp
test
cmp
adc
mov
push
adc
daa
xchg
and
sbb
js
xchg
test
pop
loope
out
mov
mov
ds
dec
dec
aaa
dec
mov
int3
cmp
arpl
int3
mov
fiadds
inc
imull
ficomps
popf
jp
mov
das
lock
xor
xchg
movsl
cli
mov
adc
push
out
shrl
stc
jns
xchg
xchg
dec
in
push
mov
or
insl
ljmp
nop
insl
add
call
sub
rcrl
xchg
sti
mov
pop
mov
push
pop
pop
int
mov
icebp
aaa
xor
jne
call
ja
mov
dec
jmp
outsl
cld
or
fsubrs
int3
sub
movsb
inc
int3
jae
cld
mov
push
testl
cmpsb
jo
and
scas
inc
stos
adc
pop
xor
jecxz
xor
pop
add
jbe
setae
mov
jle
xor
stc
mov
mov
lcall
sbb
push
dec
xor
xabort
sbb
sub
ds
mov
inc
or
inc
jno
and
mov
mov
stos
fimuls
cmc
outsb
inc
jne
aam
or
into
fidivrl
adc
ficompl
cmpsl
ret
push
fisubs
add
in
ret
js
sbb
insb
fcomi
fisubl
imul
mov
mov
cmc
adc
sbb
inc
testb
mov
and
arpl
fmuls
lahf
clc
cmpsl
dec
or
cmpsl
lods
adc
or
push
outsb
sbb
aas
stc
sti
push
fnstsw
repz
shlb
fidivl
aad
arpl
push
sahf
std
xchg
add
push
and
xchg
adc
decl
imul
mov
xor
not
dec
mov
and
push
inc
push
push
movsb
aas
xchg
xor
adc
repnz
int
mov
mov
pop
sub
inc
mov
out
addr16
mov
cwtl
sbb
int
sub
pop
inc
add
insb
out
xchg
scas
fcompl
inc
sub
cmp
cmpsb
test
inc
xor
push
data16
inc
adc
aad
repz
push
ja
lods
loope
and
xchg
xorl
lcall
add
lcall
ljmp
lea
sbb
fcmovnb
mov
xor
jb
adc
insb
movsl
mov
stc
inc
or
icebp
aas
les
rol
cmp
pusha
push
inc
xor
and
cltd
add
sbb
lret
out
add
or
jne
ljmp
lret
faddl
pop
sbb
mov
cs
mov
jns
mov
and
movsl
dec
xchg
mov
jmp
aam
movsl
decl
icebp
dec
scas
sbb
les
mov
and
jl
bswap
mov
pop
cs
imul
push
dec
push
shrb
mov
mov
imul
movsb
out
leave
fsubrp
sti
lods
loope
sbb
scas
jbe
out
in
lret
fwait
dec
mov
or
in
inc
jle
test
stos
and
cmpsl
rol
sarl
hlt
xor
jo
xchg
pop
xlat
cmc
stos
fldenv
mov
cmpsb
mov
rorb
fildl
sti
adc
loopne
scas
pop
lret
jbe
dec
dec
push
adc
std
adc
push
dec
inc
jg
mov
scas
ds
xchg
add
in
sahf
ds
leave
pop
clc
fidivl
push
int
imul
stos
stos
ja
inc
adcb
jbe
inc
movsb
jne
aas
sbb
sub
add
pop
jge
sbb
imul
and
out
pop
outsl
ljmp
mov
cli
iret
pop
mov
adc
arpl
in
xor
mov
sub
xchg
mov
cwtl
int
test
addr16
nop
mov
test
aam
mov
lds
stos
cmpsb
xchg
in
add
adc
and
jb
inc
rclb
mov
aam
lahf
faddp
sub
add
cli
aad
cmp
ret
pop
insb
addb
popa
mov
adc
popa
add
out
lock
mov
mov
sub
fcmovne
test
xchg
call
data16
add
in
test
hlt
pop
pushf
xchg
out
cmp
dec
mov
or
jl
dec
in
or
clc
cmp
es
and
int
insb
push
cmp
sub
push
mov
gs
ljmp
sbbb
stc
pop
inc
rorb
imul
je
iret
out
stos
loop
push
sbb
xchg
gs
scas
cld
scas
fsubrp
jb
icebp
mov
and
jge
nop
int
mov
popf
push
loop
mov
jle
rol
mov
repz
sbb
pop
and
inc
and
mov
push
icebp
pop
cli
repnz
push
and
mov
fildll
rorl
adc
and
mov
mov
fs
ljmp
mov
imul
pop
adc
add
movsb
rcrb
scas
jp
lods
dec
mov
cltd
push
jno
popa
jae
push
in
loope
andl
popa
inc
mov
fstp
mov
pop
adc
sub
lret
popw
xor
sysenter
dec
add
icebp
add
inc
pop
fnstcw
mov
rcr
adc
jnp
or
sbb
aaa
inc
movsb
cmp
fadds
mov
test
or
mov
insl
inc
mov
mov
test
mov
ljmp
push
sub
mov
mov
sub
inc
jmp
and
mov
pop
outsb
xchg
mov
push
testl
push
lahf
fbld
inc
cmpsb
sub
decl
sti
mov
dec
into
ret
test
dec
int
orb
xor
jae
dec
mov
adc
sbb
jb
sti
xchg
ret
sahf
hlt
vcvtsd2ss
adc
ret
pop
je
insb
cmp
xchg
in
mov
cmp
jmp
bndstx
sbb
aas
aaa
shl
mov
push
bound
xor
xor
sahf
out
popf
pop
push
xchg
cli
ss
xor
push
repz
and
mov
fistpll
orb
js
test
jns
rcl
mov
leave
imul
shr
movsb
pop
pusha
or
sub
lea
iret
or
adc
xchg
push
fs
lcall
std
test
cmp
das
ret
mov
xor
movsl
and
pop
loopne
aam
bound
aaa
mov
out
ja
push
and
adc
fcmovu
adc
adc
jb
lods
push
aas
sbb
lcall
in
imul
les
daa
arpl
arpl
andw
add
add
xchg
xor
test
lret
sub
fsubrp
movsl
pop
push
stc
xchg
dec
lcall
stos
inc
push
add
dec
mov
sbb
arpl
stos
push
icebp
mov
cwtl
push
or
arpl
sbb
pushf
loope
fstpl
jb
loopne
xchg
lods
sbb
sbb
test
ja
stos
movsl
add
pop
call
jle
add
int
inc
nop
pushf
lock
push
xorb
inc
and
xchg
inc
iret
pop
cmpsl
sbb
sbb
and
jecxz
ret
cmpsb
push
stos
shl
xor
nop
xchg
cmp
mov
add
outsb
testl
lds
cld
mov
insb
and
adc
mov
push
test
jbe
jno
sub
adc
pop
lret
enter
mov
test
cmp
pusha
out
jl
arpl
lahf
in
lods
cmp
jo
push
hlt
out
test
dec
jne
call
rcrb
cmpsl
ret
and
and
inc
repz
cli
pop
rcl
mov
enter
xor
jecxz
sbb
subl
lahf
fwait
clc
rcl
in
and
and
lods
xlat
sbb
aaa
mov
and
nop
or
jmp
cmp
sub
and
mov
nop
mov
xchg
fcmovnb
sbb
imul
dec
jle
faddl
xchg
loopne
nop
push
pop
sbb
jbe
xor
insb
xorl
and
jecxz
mov
aas
push
jg
shrl
dec
inc
roll
mov
test
adc
sub
dec
in
les
or
jecxz
jl
jbe
insl
out
std
push
dec
add
ret
mov
mov
mov
pusha
xor
pop
bound
sbb
pusha
or
dec
scas
lret
in
and
inc
ljmp
xor
jno
inc
jns
jecxz
imul
mov
mov
stc
rol
sbb
adc
scas
and
stos
pop
cmp
push
adc
out
test
jae
rol
xchg
not
test
test
test
jns
pop
and
jnp
ret
test
subb
pop
adcl
aad
bound
or
nop
mov
addl
xlat
mov
or
mov
jg
leave
cmp
in
sbb
ja
mov
fmull
stos
leave
je
lcall
cmp
test
fldenv
test
clc
scas
xor
jl
fimuls
cmpsl
cltd
push
aad
hlt
and
add
fs
pop
call
xlat
out
addr16
sbb
fisttpl
adc
or
push
mov
popa
lock
sbb
mov
pop
mov
fwait
push
mov
dec
cs
push
jecxz
pop
inc
sub
jno
in
inc
or
add
sbb
outsl
inc
xor
sbb
mov
jo
ret
in
jbe
rcr
pop
mov
cld
pop
inc
pop
or
mov
xchg
fstl
fisubrl
pop
push
or
xor
add
les
movsl
xchg
add
loope
rorb
inc
mov
sub
and
dec
and
mov
pusha
sahf
sahf
mov
cmp
mov
or
jns
xor
fdivp
icebp
adc
sahf
bound
or
sub
push
jo
inc
jle
nop
push
mov
cwtl
or
stos
jecxz
xchg
es
sbb
mov
and
out
das
aam
cwtl
or
mov
fdivs
cltd
shl
fidivrs
jecxz
inc
rolb
out
in
pusha
ss
pop
in
inc
inc
push
insb
inc
enter
fidivs
xchg
in
leave
stos
push
test
jle
imulb
lret
pcmpgtw
je
dec
sub
sub
and
aas
movsb
in
mov
pop
inc
je
jl
mov
nop
fcomi
inc
push
idiv
mov
sbb
imul
or
xchg
push
mov
pusha
cmc
fisubl
mov
in
add
push
pop
outsb
ret
fildll
mov
mov
out
pminsw
inc
mov
out
and
xchg
sbb
mov
mov
adc
in
fs
jbe
out
test
out
mov
cmc
daa
je
dec
mov
mov
imul
daa
cld
aad
cmp
out
sbb
adc
add
sub
mov
or
push
xor
pop
mov
loope
jne
dec
daa
popf
xchg
sub
aad
iret
cmp
cmp
in
ljmp
outsb
xor
cltd
imull
push
adc
xor
lret
sub
rclb
xor
test
xchg
rorl
adcl
mov
mov
xor
mov
mov
sahf
lret
insl
pushf
mov
call
cmp
pop
je
push
dec
xlat
daa
push
push
adc
mov
into
push
sub
pop
in
jns
aas
fsubp
cmpsl
lock
js
test
or
f2xm1
pop
jo
sub
sti
js
faddl
pop
cmpsl
dec
inc
jae
fiaddl
pusha
or
push
ret
out
jo
fadds
push
repz
add
rorb
mov
aam
ds
or
dec
popf
and
icebp
add
inc
hlt
sbb
cmp
cwtl
or
sbb
cmp
cltd
dec
dec
and
and
cli
sbb
rcl
adc
les
lea
jecxz
lds
mov
inc
xchg
es
add
cwtl
dec
push
push
das
orb
xchg
icebp
out
xchg
stos
push
lcall
mov
jae
pop
adcl
sub
push
push
sub
push
cmpsb
cmp
iret
mov
sahf
ds
or
in
mov
mov
dec
test
dec
jmp
std
sub
jecxz
pop
repnz
out
popa
jle
push
aas
xrelease
test
push
mov
add
pop
stc
mov
dec
sbb
shl
push
call
fsubrp
jg
bound
pop
cmp
mov
ss
sarb
or
jo
js
fdivs
test
or
sub
dec
popa
xchg
shr
es
add
pop
sarl
pop
into
jmp
jb
inc
ja
movsb
mov
std
out
loopne
pop
test
fucomip
push
dec
sub
mov
sub
add
cmpsb
sti
mov
cmp
fnstsw
inc
pushf
clc
out
sub
jo
xor
pop
cmp
mov
jne
loopne
mov
das
rcll
sub
loope
pop
fcoms
stos
and
sub
mov
enter
push
loop
jmp
xchg
cmp
adc
jecxz
xchg
cmp
leave
inc
add
fwait
jbe
pop
stos
add
ret
outsb
mov
pop
xor
add
outsl
stos
mov
push
pop
inc
mov
add
cld
or
dec
in
ss
mov
shlb
mov
outsl
ljmp
pop
in
decb
fstp
xor
sbb
cli
fwait
xchg
push
repz
cmp
jbe
test
adc
or
dec
pop
int
shrl
mov
aam
add
in
daa
sub
cld
cwtl
mov
in
cmp
push
pop
sbb
xchg
aaa
sbb
mov
jmp
aad
iret
pushf
fisubrl
mov
nop
jge
aas
pop
and
sahf
xor
jns
es
xchg
shrl
and
stos
movsl
repnz
flds
inc
push
cmp
dec
in
and
stc
push
xor
xchg
ja
cs
xchg
dec
push
push
mov
pushf
or
inc
daa
sbb
xchg
mov
pop
xchg
rcl
xchg
mov
xchg
jnp
or
mov
rcrl
xor
mov
arpl
mov
enter
inc
outsb
jb
push
movsb
mov
ret
lods
jmp
push
cmp
mov
adc
nop
inc
gs
pop
jmp
ljmp
in
mov
repnz
in
addr16
pushf
cwtl
pop
mov
insl
dec
mov
scas
leave
test
add
ja
jns
mov
subl
mov
sub
cmc
scas
ljmp
sbb
clc
adc
dec
pusha
add
or
outsb
cltd
sub
adc
pop
pop
fnstcw
xor
mov
pop
call
pop
gs
mov
add
xor
hlt
insb
or
add
xchg
lahf
or
sbb
cli
das
mov
or
incw
jp
xchg
dec
jnp
inc
adc
insl
jns
loope
pop
out
inc
lock
mov
or
dec
int
sbb
data16
adc
sub
mov
arpl
daa
rol
call
arpl
sahf
and
mov
cmp
lahf
mov
stos
cmpsl
pop
mov
mov
loope
adc
xor
jge
adc
jge
divl
cmp
std
cltd
and
sahf
test
xlat
mov
inc
leave
mov
aad
dec
lds
outsb
loop
clc
loope
sub
jae
loopne
add
jo
mov
push
int
lcall
and
shlb
jge
lret
jb
in
les
xchg
push
mov
mov
roll
fimull
ljmp
xorl
ja
add
test
addr16
lods
or
mov
pop
cs
jmp
sub
cltd
jb
divb
cmp
jl
or
pop
add
movsl
push
xchg
cmpsb
imul
mov
sbbb
loop
popw
push
jbe
sti
or
adc
mov
xchg
mov
mov
xchg
xchg
call
xor
pop
cmc
and
dec
enter
aad
out
jne
xor
sub
push
sub
sbb
add
inc
or
ljmp
rolb
xchg
inc
stos
or
sbb
push
xor
gs
jno
jge
repnz
subl
add
sahf
cmp
push
dec
add
adc
ss
xchg
test
xchg
push
sub
shrb
fwait
mov
in
push
add
mov
in
push
sbb
push
aam
scas
cmc
and
outsb
pop
jnp
popf
inc
mov
pop
push
sub
shlb
enter
xchg
daa
int3
jno
nop
mov
pushf
orb
cmpl
cmp
insl
idivw
sar
cmp
out
aam
cmp
mov
and
sbb
dec
cmp
divb
push
mov
sub
cmp
jbe
pop
and
cwtl
aaa
xchg
cmpsb
cmpsb
icebp
sbb
or
cmpsl
sub
inc
cmp
inc
adc
dec
push
clc
fcoms
mov
sbb
add
lret
add
daa
add
adc
and
lcall
in
xor
jmpw
add
mov
xor
xor
or
adc
push
add
adc
xchg
dec
inc
xchg
sti
divl
mov
cmpsb
cmp
pushf
int3
cs
arpl
daa
xor
popf
movq
mov
adc
loope
testl
mov
lcall
adc
mov
decl
mov
add
arpl
lret
sub
xchg
bound
inc
cs
adc
out
repz
jmp
lea
icebp
mov
call
fs
int3
cltd
jb
push
jg
ds
into
pop
repz
lods
jecxz
sub
sub
push
andb
mov
adc
mov
mov
test
mov
pop
pop
cmp
xor
repnz
xchg
je
adc
mov
sbb
mov
insb
push
cltd
in
scas
add
and
hlt
add
rolb
mov
cld
fcmovne
cmpsb
xor
repnz
adc
sahf
push
pusha
xor
and
add
add
add
add
add
add
add
add
loope
add
add
add
add
push
add
add
add
pop
add
add
add
push
sbbb
lds
add
add
add
add
add
or
xor
add
mov
in
inc
add
add
add
sub
stos
add
ja
js
js
imul
add
add
push
push
fisubrs
push
insl
add
add
add
add
add
add
add
add
push
add
add
add
add
add
fiaddl
add
add
add
add
sub
clc
dec
add
sbb
popa
add
push
pop
fs
jae
inc
cmp
je
fs
mov
inc
roll
jecxz
sbb
decl
add
push
fildl
inc
fadds
xor
or
push
inc
cmp
mov
idiv
ljmp
or
or
jmp
test
cmpsb
mov
adc
subb
mov
pop
cmp
incl
fpatan
decl
inc
js
jge
push
adc
add
adc
mov
push
jb
push
adc
lea
push
adc
popf
or
call
sar
add
push
sar
add
enter
add
test
jb
lret
clc
add
clc
adc
sahf
add
mov
adc
add
add
insb
or
add
add
add
add
add
add
push
add
add
insl
jbe
inc
inc
outsb
inc
outsb
outsl
jne
adc
jo
insb
inc
imul
outsb
jns
pop
inc
gs
mov
add
push
imul
dec
cmp
insb
gs
insb
insb
jae
outsl
jne
inc
outsb
jb
xor
inc
je
insb
add
add
add
cmpsl
add
mov
add
add
add
add
add
adc
dec
mov
nop
aad
xor
push
pop
icebp
sub
push
dec
mov
pop
loope
idiv
pop
xchg
popa
pop
push
dec
rorl
daa
out
adc
sbb
scas
mov
sbb
xchg
push
jmp
out
nop
cs
leave
lods
fwait
mov
sbb
push
dec
std
arpl
jle
stc
mov
out
xchg
jno
cmp
push
vmovaps
ret
rol
jae
dec
sub
pop
adc
or
jecxz
dec
mov
sub
fidivrl
test
and
sbb
pop
je
les
fiadds
les
movsb
xchg
pop
pop
sub
mov
shll
lods
test
or
or
pop
pop
and
repnz
adc
jbe
int3
aam
xchg
fwait
and
sbb
std
mov
cmpsl
or
sahf
mov
fs
test
dec
cmp
inc
rclb
stc
les
add
mov
mov
mov
xchg
pop
xor
popw
stos
ss
rcrl
push
adc
scas
mov
fdivs
or
movsl
xorl
sub
int3
fnstenv
inc
add
xchg
fcoms
jmp
mov
xchg
cs
dec
mov
popf
and
lea
xor
cs
inc
fs
into
pop
pushf
fidivl
mov
pop
pop
xor
shlb
mov
mov
idiv
xor
cli
sub
imul
mov
out
and
sbb
cltd
sub
mov
aaa
dec
and
jne
or
jnp
inc
push
and
or
mov
push
rcll
sbb
test
lcall
div
aad
dec
xchg
movsl
in
and
mov
in
jp
into
xchg
push
cmc
or
lds
sbb
ljmp
call
mov
mov
or
cs
inc
xor
int
dec
out
lret
pop
xchg
jb
lahf
cmc
lds
push
push
xlat
pop
sub
cmpsl
and
add
mov
popa
push
out
push
lret
arpl
sbb
or
mov
sub
enter
push
incl
cli
je
jg
lock
pusha
cmpsb
xchg
fsts
lock
orb
add
imul
and
xor
mov
inc
add
mov
enter
mov
std
ror
push
ror
inc
cld
aad
cmp
negb
add
cmc
movsb
test
add
add
movsl
insl
js
mov
loop
push
sbb
jns
push
inc
mov
lods
jb
push
sub
mov
lret
popw
cmp
scas
push
dec
cmp
mov
rcl
mov
testb
push
sbb
push
in
out
scas
incl
adc
push
dec
lret
mov
jg
aad
or
cmp
das
sti
and
cmpsb
add
out
loop
imul
xchg
lds
sbb
pop
xchg
in
adc
xor
and
outsb
clc
push
scas
fmuls
push
jns
je
mov
xchg
sti
xchg
in
adc
mov
push
in
adc
call
fwait
outsl
push
sub
jae
loopne
xchg
push
cmp
xchg
adc
rorb
mov
adc
cmpsl
repnz
pop
or
push
sti
pusha
clc
and
pop
push
adc
dec
outsb
cmp
sub
test
insl
mov
cld
sub
jo
mul
das
cmp
dec
pop
xchg
fnstenv
stc
adc
lret
dec
inc
or
sub
add
imul
sbb
jbe
dec
cmpb
in
xchg
xchg
or
int3
std
sub
out
inc
sbb
les
xchg
sub
xchg
sbb
xlat
call
aam
push
jecxz
mov
out
psubsw
lahf
cltd
js
imul
cmp
or
or
mov
xor
mov
fmull
fistpll
sub
fstps
push
cmp
fldl
pusha
or
cmp
dec
pop
mov
pop
shrb
jne
test
gs
push
cltd
pop
or
push
mov
lods
addb
pop
notl
aaa
imul
dec
cld
xor
add
add
aas
push
sub
insb
push
mov
ret
xchg
mov
adc
mov
push
mov
xchg
dec
mov
or
push
jns
inc
and
pop
test
xor
or
mov
sbb
jno
push
jle
out
dec
dec
mov
in
dec
arpl
ljmp
adc
cmpsb
hlt
xor
dec
int3
sub
jg
fld
das
addr16
out
call
jp
inc
xor
mov
stos
mov
and
mov
sar
dec
xor
push
int
iret
sub
popf
das
xchg
sbb
fsubs
jnp
test
add
aas
inc
test
test
mov
mov
pop
into
xor
cli
aam
jle
inc
push
dec
dec
jle
xorl
insl
inc
mov
flds
sub
sub
and
dec
sub
gs
pop
jnp
mov
push
call
pop
push
into
vmovhps
cmp
xor
add
or
mov
sbb
hlt
ja
cmp
jae
lret
sub
mov
test
sbbb
xor
xor
mov
leave
pusha
inc
leave
lcall
jno
add
lea
push
inc
mov
xchg
pop
dec
cmpsb
push
sub
cltd
jb
xor
mov
push
fs
roll
lahf
xor
jmp
xchg
cmpl
dec
jge
cmpl
enter
in
mov
icebp
test
mov
xchg
mov
clc
sbb
andl
mov
out
inc
dec
and
movb
cmp
fucomi
stos
cmp
fisubrs
jge
insb
call
shrl
loopne
repz
addr16
push
in
xorl
outsl
scas
inc
add
inc
or
loop
sub
mov
jbe
dec
gs
pavgw
aaa
movsb
push
sbb
mov
push
arpl
lds
jno
insb
mov
add
sbb
jg
shrb
in
mov
mov
cwtl
cmp
pop
scas
inc
mov
ljmp
pop
aam
adc
aas
xchg
push
push
sti
inc
xchg
cmp
add
inc
dec
int3
outsl
out
pushf
jl
push
bswap
mov
pusha
pop
in
cmpsb
popf
mov
adc
dec
mov
js
adc
rorl
ret
dec
test
jae
pop
xor
lret
test
into
and
aaa
fiaddl
push
cmpl
popa
xchg
popl
xchg
mov
leave
insb
mov
xor
cmp
lret
xchg
lret
jnp
or
sub
pop
mov
sti
jmp
sbb
adc
shll
stos
scas
mov
sbb
add
cmp
push
shrl
dec
imul
inc
pop
enter
loopne
jb
cli
data16
stc
int3
jl
adc
jno
out
push
rorb
pop
insl
mov
ds
adc
and
stos
cmp
and
mov
int
sbbb
ret
ret
inc
or
daa
test
jb
std
push
add
jmp
mov
sahf
xchg
nop
sahf
jns
mov
ljmp
push
leave
repz
ja
pop
push
mov
test
fsubs
push
loope
xchg
add
ss
add
das
std
push
cmpsl
inc
cli
test
jo
ss
and
sub
incb
xchg
rcll
push
fldl
or
jp
push
inc
fdivrs
sub
popf
adcb
vpunpckhbw
shrl
gs
sbb
xchg
insb
out
call
inc
or
ret
mov
sahf
loopne
test
xchg
adcb
pop
pop
pop
cmpsb
sbb
fwait
jae
sbb
inc
lea
out
stc
pop
sahf
lcall
mov
cli
std
ffreep
shll
pop
xorl
rclb
addr16
jmp
jb
repnz
loop
pop
pop
fldenv
int3
fwait
xchg
xchg
pushf
call
in
pop
dec
jno
dec
pushf
adc
push
jb
leave
jg
lods
and
fadd
aad
daa
std
cmc
sub
inc
or
int3
aam
mov
pop
inc
sub
add
insb
loope
add
enter
cltd
shlb
imul
dec
sbb
add
sub
dec
arpl
and
pusha
pop
sub
dec
shl
adcb
or
cmp
sbb
push
cmpsl
xchg
cmpsl
movsl
push
xchg
bound
loop
movsl
add
scas
push
mov
out
pop
ret
adc
push
jns
cmp
cmovl
out
adc
dec
lock
out
lock
lcall
fstpt
add
jnp
call
popa
in
mov
pop
jbe
fbstp
aam
inc
cmp
push
jmp
adc
xlat
push
nop
dec
lcall
addr16
bound
mov
fucomip
stos
xor
aad
sub
push
arpl
lcall
cmc
fmuls
js
mov
jnp
sarb
and
rolb
out
xchg
xor
xchg
jg
and
mov
push
lret
imul
into
sub
test
mov
pop
inc
int3
adc
jl
mov
imul
les
sub
insb
xchg
pusha
sub
pop
repnz
rolb
push
cld
clc
add
mov
pop
or
aam
add
aad
push
jmp
mov
push
arpl
dec
pop
jle
sub
dec
or
mov
dec
xorl
fnstenv
xor
pop
mov
inc
out
adc
and
in
fucom
mov
outsl
sub
and
daa
mov
mov
mov
cmp
leave
jb
dec
jbe
sbb
in
and
leave
mov
outsl
jp
ret
fbstp
sete
insl
cmp
jp
or
into
cmc
nop
loop
imul
xchg
addr16
jg
pop
inc
rcrb
inc
test
cmp
xchg
scas
inc
loop,pt
mov
push
pop
inc
inc
stos
sub
sub
add
scas
pop
xchg
and
or
dec
jnp
cmp
jno
pop
push
or
sub
loop
lcall
jmp
fs
negb
mov
iret
fsubs
imul
pop
sbb
mov
dec
sbb
stos
fdivs
xor
repz
shlb
aad
unpcklps
jg
push
cmp
js
insl
icebp
xor
cltd
addl
mov
addb
stos
mov
cmp
in
add
or
faddl
imul
icebp
xchg
pusha
je
xchg
mov
sarb
jp
gs
orl
insl
in
rclb
push
mov
addr16
sub
loopne
cmp
xor
insb
je
ret
adc
mov
test
movsb
cmp
xor
sti
mov
lods
dec
repz
idivb
xchg
mov
sub
sbb
cli
scas
push
xchg
mov
jno
mov
push
icebp
nop
xor
inc
jecxz,pn
cld
inc
adc
jo
ret
stos
arpl
and
lahf
ljmp
es
adc
pop
cmp
stos
fcompl
aaa
sbb
inc
xchg
dec
push
mov
push
pushf
adc
ret
sbb
dec
pop
cmpsl
or
mov
mov
int
jae
out
mov
repz
or
rolb
loope
rorb
and
adc
adc
pusha
mov
jnp
popa
in
fcoms
out
jnp
shlb
xchg
push
jne
test
pop
jp
xlat
daa
jnp
inc
je
xlat
insb
fstl
mov
mov
in
adc
push
enter
ss
flds
cmp
cltd
subl
push
mov
lahf
jmp
repz
sub
dec
lcall
icebp
sbb
cmp
icebp
cli
ja
test
sub
int3
mov
aaa
cmp
push
faddl
into
xchg
jbe
adc
fs
sbb
das
pop
push
sbb
push
pop
mov
jns
sbb
shrl
les
sbb
mov
mov
loop
aaa
in
inc
shlw
xlat
cmpsl
out
popa
test
inc
test
movsl
adc
sbb
ljmp
in
jmp
mov
orl
jb
and
xchg
pop
scas
xchg
xchg
faddp
lret
lock
shll
addr16
nop
aam
cltd
add
lods
cmp
push
dec
mov
push
aas
out
push
xchg
or
inc
dec
inc
inc
jp
insl
xchg
fidivs
and
sbb
sarl
add
adc
adc
mov
test
test
test
mov
je
pusha
dec
mov
scas
ljmp
bound
cmpsb
xchg
call
xchg
shrl
mov
adc
mov
out
outsl
out
outsl
xor
ljmp
mov
js
hlt
lds
arpl
cmp
pop
into
xor
xchg
push
scas
adc
mov
sahf
rorb
mov
cli
pop
aad
into
pusha
pop
dec
push
add
pop
call
icebp
xor
xchg
sub
aad
pop
inc
xlat
xchg
cmp
push
pusha
jg
mull
pop
lahf
pusha
push
subl
and
sbb
mov
lock
jl
leave
ljmp
xor
lret
fdivl
sbb
add
sub
stc
push
aaa
pop
inc
movsb
xor
xchg
inc
mov
adcl
add
in
xchg
xchg
sbb
mov
arpl
mov
ds
inc
or
iret
ds
leave
pop
cwtl
test
mov
xor
jmp
push
sti
cmp
jg
sub
mov
jnp
or
ss
outsb
dec
daa
cmp
and
sbb
icebp
jp
add
punpcklwd
ficomps
sti
xor
add
inc
push
pop
lds
lahf
fmull
test
dec
jp
push
cmc
and
insb
jg
loope
jecxz
test
jg
xlat
inc
clc
sbb
mov
ljmp
xchg
pop
add
pop
fidivl
setle
aaa
ds
xchg
mov
negb
popf
mov
cmp
mov
and
shll
dec
xchg
jnp
sbb
inc
push
dec
push
jmp
ja
rcr
mov
push
lods
outsb
in
xor
outsb
pop
push
rcll
jg
lcall
pop
and
sti
mov
scas
xor
repz
jae
repz
cwtl
loopne
inc
in
mov
xor
or
sub
andb
xor
pusha
sahf
rcl
push
adc
adc
fwait
sbb
xor
pop
mov
mov
xchg
cli
sbb
adc
ss
add
cltd
cwtl
outsl
loop
jns
seto
clc
ss
or
lock
xorb
and
mov
les
imull
leave
push
frstor
sbb
cltd
scas
add
inc
call
test
or
cmpb
sub
jo
mov
mov
dec
mov
aam
push
and
mov
fwait
or
push
xor
xchg
pop
leave
loope
push
into
dec
movsl
mov
dec
dec
xor
xor
push
push
ficoml
jnp
hlt
push
mov
sbb
xor
mov
cmpsl
adc
cmpsb
cld
repnz
mov
mov
or
jle
scas
mov
arpl
push
sub
test
sub
stos
push
movb
lods
pop
mov
mov
cli
out
mov
push
fidivrl
in
sub
cld
jmp
enter
imul
test
adc
fdivs
lods
jae
idivb
dec
push
andl
cmp
cmp
mov
mov
or
mov
or
rcrb
mulb
in
inc
sbb
in
fdivs
add
dec
and
idivb
xchg
outsb
and
cltd
fs
cmc
push
incl
and
or
dec
iret
adc
push
jno
jns
jmp
in
in
mov
mov
jo
pop
xor
scas
popa
orb
mov
ss
popl
pop
outsl
pop
cmpsl
into
aaa
push
sbb
mov
dec
push
inc
addb
lea
sbb
mov
pop
out
xchg
je
dec
jbe
cmp
lcall
sub
xor
into
mov
xor
sub
fmuls
bound
lcall
sub
lcall
lods
xchg
mov
mov
std
add
in
mov
push
arpl
ficoml
pop
ljmp
inc
or
jp
int3
mov
push
mov
stc
xchg
fbld
lods
sub
xchg
push
xchg
pop
lgdtl
mov
push
push
out
mov
xchg
push
ret
popf
sub
fisubs
iret
inc
fmuls
test
jo
mov
pop
rolb
imulb
dec
pop
mov
test
andl
int
int
dec
push
add
daa
lret
daa
mov
and
popa
jb
lock
mov
xor
xor
out
sub
mov
test
xor
and
icebp
dec
mov
pmulhw
add
pop
sarl
aad
mov
cmpsb
jnp
mov
fldcw
and
inc
sbb
cmp
cmpsl
cwtl
or
add
cmp
push
test
or
or
add
jmp
cmp
sub
push
dec
aam
and
or
cmp
inc
mov
jne
xchg
sub
stos
inc
arpl
test
mov
iret
aad
repnz
cmp
lods
adc
mov
jl
push
push
fimull
jae
test
in
pop
mov
xor
cmpsl
pop
and
or
hlt
shll
int3
andl
mov
and
movb
out
push
divl
and
shll
das
mov
movsl
mov
insl
ja
sti
pop
cmp
dec
sub
mov
frstor
les
xchg
fsub
js
ds
inc
push
dec
fsubrl
xor
in
fwait
pop
push
add
pop
mov
pusha
out
add
or
mov
js
jb
mov
jmp
adc
leave
or
sarl
inc
jmp
cltd
js
out
sub
adc
mov
loop
ljmp
xchg
std
or
nop
lods
outsb
and
pop
mov
or
pop
in
xchg
scas
mov
int3
addr16
sub
incb
pop
xor
lods
adc
cmp
dec
sub
dec
inc
cltd
mov
mov
insb
adc
test
ja
jnp
or
fiaddl
and
leave
and
add
sbb
cmpsl
add
mov
add
add
jp
add
add
ljmp
add
adc
add
add
add
add
add
add
or
add
add
sbb
add
xor
sbb
fildl
mov
sub
add
addb
cmp
inc
ljmp
ja
mov
incl
add
add
add
add
push
or
test
add
add
add
pusha
add
add
add
add
add
add
add
add
add
add
add
add
test
add
add
jae
inc
jb
add
pop
add
push
xsavec
enter
or
test
lods
inc
ret
incl
add
cmp
incb
decl
push
push
push
push
pop
sbb
adc
dec
insb
push
rcl
lret
in
mov
rolb
cmp
mov
adc
pop
add
incl
pop
popl
push
fisttpl
movsb
push
push
clc
decl
incl
add
mov
decl
push
cmp
clc
cmp
stc
sub
lea
adc
inc
jne
add
adc
in
push
mov
add
add
les
imul
inc
imul
test
gs
mov
xchg
jae
add
jbe
je
arpl
rolb
gs
dec
fs
ja
add
addr16
popa
add
out
imul
push
addr16
add
push
repz
add
add
shll
add
add
mov
inc
ror
xor
push
rol
push
cmp
data16
push
cmp
iret
and
call
out
and
push
rolb
jns
dec
addr16
out
adc
adc
cmp
dec
mov
rorb
sub
and
rorb
sbb
cld
cmp
pushl
push
push
call
lcall
sahf
das
sahf
mov
shr
fildll
and
jg
sti
loope
jge
dec
jle
into
xchg
pusha
fsubl
sbb
es
gs
gs
push
arpl
aam
lods
cmpsl
scas
inc
xchg
cmc
xor
push
dec
xchg
mov
add
data16
xchg
cmc
or
iret
fstl
outsb
pop
pusha
int
addb
test
or
mov
aam
cltd
iret
cli
ja
addl
jbe
adc
gs
int3
out
test
mov
ss
xor
in
test
pop
mov
test
adc
cmpsb
mov
repz
inc
push
adc
ja
dec
fwait
sar
sub
movsb
add
and
sub
pop
fmul
aas
pop
sub
jl
outsb
push
int3
xor
loopne
enter
adc
and
xchg
leave
inc
pop
pop
push
dec
inc
rolb
pop
ficompl
cwtl
mov
arpl
push
lock
mov
cmp
nop
addr16
inc
stos
hlt
sbb
pusha
scas
xchg
pop
repnz
lret
push
in
lret
jno
subb
gs
aad
ret
hlt
mov
push
xlat
add
je
rorb
xchg
in
jge
and
mov
mov
dec
push
sbb
xchg
jno
in
mov
bound
insl
mov
push
imul
dec
mov
iret
mov
pushf
mov
or
mov
cmpsl
jnp
xchg
lret
mov
push
mov
mov
ja
mov
jnp
hlt
fs
jecxz
or
xchg
fmuls
or
add
outsl
pop
cltd
dec
sub
mov
mov
xlat
repz
hlt
pop
lock
or
mov
mov
leave
inc
sub
xor
enter
addb
sti
cmp
and
ja
push
stos
xor
inc
sbb
cmpsl
sbb
sub
int3
mov
push
loop
arpl
wrmsr
orb
filds
xchg
xchg
in
xchg
fiadds
outsb
bound
sub
adc
lods
fsubs
mov
xchg
pop
xchg
mov
roll
xor
cmpsb
xchg
mov
out
cld
xchg
lahf
push
je
or
stc
and
inc
loope
lock
inc
pop
ljmp
push
cwtl
loop
xchg
cmpsl
das
insl
test
neg
jbe
adc
fcoml
add
jns
enter
call
adc
pop
sti
sub
jmp
fiadds
aas
orl
adc
sub
lret
xor
mov
mov
ljmp
push
inc
das
aam
int3
sub
or
sti
sti
out
sti
scas
mov
dec
mov
popa
jg
lods
call
fwait
sub
add
cmpsb
push
dec
and
jbe
pop
movsl
mov
push
mov
mov
imul
fldt
out
std
inc
sbb
in
fdivrl
test
pop
outsb
mov
mov
dec
leave
mov
in
xlat
or
js
mov
jp
xor
out
cmp
fdivs
fisubs
bound
xchg
dec
jb
cmc
cmp
rclb
cs
jbe
jl
sub
pop
lcall
popf
idiv
cmp
add
ss
imul
js
ljmp
js
mov
iret
push
jge
decb
jbe
pop
imul
rclb
inc
aas
lret
fldt
int3
lea
cmc
cmp
and
pop
test
adc
cmp
movsb
dec
xlat
je
test
jmp
imul
mov
scas
mov
es
sbb
frstor
mov
and
popf
sub
imul
je
in
iret
punpcklwd
dec
add
fnstsw
jg
jl
pushf
adc
ja
xlat
inc
jg
dec
push
jae
jecxz
mov
xchg
sbb
or
adc
call
push
sub
lcall
fsubl
aas
mov
inc
add
lds
popa
pop
popf
call
mov
lret
daa
pop
stos
ljmp
lods
cld
pop
fcmove
mov
loope
loopne
enter
lcall
lret
ret
xchg
mov
fcomps
jnp
dec
adc
xor
xchg
pop
mov
xchg
iret
sbb
jg
loopne
cmp
test
dec
mov
jp
pop
dec
xchg
jnp
xchg
jne
mov
or
sub
js
pop
loope
jo
arpl
xor
cmp
call
pop
cld
or
xchg
pop
and
call
inc
fisubrs
aaa
and
scas
push
sahf
lea
add
jle
daa
daa
fsts
pop
insb
sub
sub
mov
xchg
and
lea
adc
into
push
popa
ja
mov
cmp
negl
add
pop
pop
jmp
test
mov
or
dec
in
rcrl
aam
push
imulb
mov
hlt
adc
sub
push
adc
mov
lret
push
jecxz
inc
push
scas
imul
call
dec
cld
sbb
lock
push
popf
jb
push
push
data16
mov
push
test
aad
adc
repz
inc
sub
push
jo
jp
lret
inc
into
xor
xchg
adc
popf
cs
pop
jo
int
xor
incb
cmp
dec
inc
scas
push
mov
sub
ljmp
inc
test
ja
or
and
mov
and
mov
mov
inc
pop
stos
jl
mov
push
pop
mov
cmpsb
add
push
das
dec
xor
das
jp
stc
sbb
cmpb
push
repnz
addr16
in
xchg
pusha
push
and
nop
je
dec
jmp
adc
sbb
notl
pop
mov
lea
push
mov
stos
mov
lret
mov
pop
int3
mov
addr16
and
scas
mov
and
imul
in
sub
push
xor
mov
fisubs
fcoms
jbe
sub
stos
int3
aad
xchg
lds
lods
mov
cmp
popa
mov
arpl
pusha
and
push
pop
mov
clc
aam
insb
jns
and
sub
je
aas
ljmp
mov
xchg
adc
stos
lds
xor
jp
jl
push
clc
sbb
scas
ror
push
aas
push
mov
pop
icebp
mov
aas
push
dec
das
and
push
push
call
push
dec
xor
sub
push
inc
mov
ja
mov
xchg
mov
daa
push
add
mov
daa
inc
loope
ja
int
mov
xchg
cmp
dec
leave
push
std
mov
or
mov
loopne
subl
xor
fisubrl
sbb
hlt
shrl
mov
addr16
add
js
mov
push
imull
cmp
ljmp
xor
aaa
xor
insb
iret
fistpl
test
popa
stc
jg
es
or
clc
pop
outsl
mov
adc
jmp
adc
test
jo
ds
jo
pop
arpl
dec
or
filds
lret
lahf
lock
dec
cmpsl
faddl
xchg
dec
sbb
add
shll
sti
popf
xor
mov
xor
xchg
pop
jp
jecxz
mov
inc
lret
jl
sub
push
es
adc
outsb
xchg
fsubl
or
imul
sub
decl
out
mov
in
cmp
int
pop
aas
sbb
and
inc
scas
stc
dec
dec
loopne
xor
imul
adc
adc
std
and
dec
jns
mov
jbe
cld
out
cs
push
add
pop
popa
in
xchg
dec
stc
mov
mov
mov
xchg
aas
je
mov
pop
add
sbb
or
cmp
popa
sbb
mov
jnp
fisubrs
jbe
stc
pushl
adc
cli
out
add
out
jp
mov
sub
test
repnz
int3
jb
mov
pop
iret
or
rorb
and
push
inc
es
mov
into
das
into
xor
sbb
test
enter
cmp
cmp
out
daa
dec
pop
sbb
xchg
xchg
enter
outsb
sarl
js
sub
ja
mov
shll
adc
addl
pop
xchg
mov
push
ret
pop
pop
dec
fcmovne
jle
xorl
shrb
lcall
mov
push
nop
or
les
rcrb
jnp
in
stc
or
and
and
hlt
pop
stos
xor
out
test
xchg
or
push
dec
adc
sbb
data16
cmp
jbe
sti
mov
mov
pop
mov
clc
mov
lods
hlt
pushf
pop
js
sub
mov
mov
enter
test
test
xor
xlat
inc
push
nop
sub
push
stos
rorb
js
aaa
std
clc
xchg
les
iret
mov
out
jge
les
mov
and
mov
out
jp
inc
inc
pusha
imul
aaa
mov
cmp
cmpsl
cmp
repnz
repz
cmp
icebp
sbb
sub
jl
shll
les
cmpsl
pop
cmp
sub
pop
mov
jle
inc
and
loope
jb
ljmp
jle
add
lock
cmp
mov
xor
or
loopne
mov
sahf
or
fwait
scas
mov
mov
add
sbb
loope
outsb
mov
mov
mov
push
mov
push
out
mov
mov
leave
sarl
fwait
xlat
cmp
insb
rcll
outsb
xchg
js
xlat
insl
insb
mov
pushf
adc
xchg
mov
lahf
sub
mov
pop
push
jge
popf
push
sahf
xor
sub
pop
xor
stos
push
enter
pop
pop
or
int
fdivrp
jno
pushf
and
mov
xchg
int
fstpt
and
aas
cmp
lods
clc
into
faddp
std
dec
push
test
jo
lock
push
ja
cmp
loope
pop
cmp
push
sub
inc
or
in
pop
enter
adc
fsts
pop
pushl
pop
js
or
jecxz
dec
addr16
dec
adc
mov
sarl
in
iret
insl
insl
mov
jbe
in
in
push
mov
stos
pop
int
cltd
pop
jne
es
xchg
sub
lahf
test
and
sbb
hlt
rol
movsl
push
pushl
scas
pushf
out
pop
xor
xchg
and
xor
lret
stos
and
cwtl
pop
ja
mov
sbb
xchg
adc
sahf
and
mov
data16
loope
adc
jecxz
pop
inc
loop
mov
dec
movsb
add
add
mov
ljmp
dec
test
roll
stc
inc
je
jg
in
sbb
ret
add
outsb
in
pop
sub
pop
mov
adc
jp
push
outsb
aad
lcall
or
out
lock
fs
xchg
sbb
dec
stos
mov
pop
jp
inc
jbe
fwait
movsl
mov
and
mov
cmc
sub
imul
dec
scas
or
or
push
fbld
cmp
and
ret
mov
jae
addb
daa
sti
or
jl
gs
jmp
hlt
in
std
dec
or
mov
bound
shrl
push
rolb
loopne
pop
mov
dec
leave
shll
push
push
push
mov
mov
mov
jecxz
aam
pop
jg
jns
sahf
xchg
mov
es
mov
mov
out
mov
mov
and
hlt
fisubrs
push
add
dec
xchg
jo
pop
fistps
pop
adc
or
push
filds
rorl
cwtl
and
cltd
jg
sbb
cmp
push
ret
nop
jge
aad
mov
jne
in
repnz
sbb
jb
sti
inc
dec
cmc
mov
jle
repz
jle
sbb
sub
sub
push
movsl
frstor
add
and
pop
or
push
add
into
adc
mov
pop
dec
add
rorl
orl
rol
imul
iret
lods
stos
xor
mov
scas
es
rcrb
and
sub
clc
xchg
loop
fsub
test
add
xlat
mov
mov
push
or
int3
ret
jge,pn
lcall
movl
shll
int3
cmp
or
imull
mov
out
cmpsb
add
fists
fwait
std
icebp
inc
popf
in
aad
imul
ret
enter
mov
or
add
popf
imul
call
mov
ret
shll
dec
repz
jb
lahf
insl
sub
dec
add
xor
jg
ud0
shrb
ret
push
xchg
adc
stos
sub
push
mov
lea
lret
repnz
movsl
dec
adc
movsl
scas
push
movsb
mov
dec
jae
pushf
inc
mov
lds
sbb
cmp
xorl
jb
lods
xlat
mov
jmp
xchg
lea
xor
pop
mov
clc
lods
es
addr16
jnp
out
jmp
dec
insl
jnp
and
sub
mov
aad
aam
jb
icebp
mov
insl
ret
xor
cli
negb
mov
cld
adc
cmp
inc
popa
push
push
xchg
sub
int
or
sahf
lods
add
dec
movb
add
lods
xor
sbb
push
iret
jg
into
loop
cmpsl
jmp
mov
and
lods
jle
cmp
mov
inc
lret
in
dec
cmp
push
xchg
scas
or
insl
jae
icebp
out
jge
loopne
jo
sbb
add
lea
fists
xchg
dec
sbb
les
mov
ja
cli
jg
es
lret
or
mov
inc
cltd
std
mov
mov
std
out
aas
decl
add
aas
fdivrs
mov
sbbl
sti
xor
imul
jmp
testb
and
popf
mov
mov
aam
loopne
jns
out
jp
lahf
push
jecxz
in
inc
in
aaa
dec
mov
jmp
test
jmp
fwait
add
loope
gs
adc
test
mov
sub
adc
rcrb
pop
lods
sbb
xchg
out
mov
gs
cwtl
jmp
ja,pt
dec
mov
mov
ret
inc
jg
stos
mov
mov
push
das
lds
add
dec
or
or
in
xchg
xor
inc
xchg
cmp
popf
xchg
adc
push
sbb
jmp
push
sar
lea
shlb
mov
mov
jl
cmp
mov
sahf
cmp
adc
dec
shrb
inc
shlb
jbe
adc
aad
rcl
jnp
inc
rcrb
cmp
xor
aam
pop
inc
dec
pop
sti
aas
jecxz
pop
and
and
repz
fsts
inc
mov
mov
adcb
lods
xor
lock
insl
stos
iret
add
or
lahf
xchg
xchg
inc
and
fldl
xor
stos
loope
mov
outsl
adc
or
test
mov
insl
imul
pop
push
or
cli
push
idiv
js
in
pop
mov
jmp
mov
popf
gs
mov
repnz
adc
les
mov
movsl
sbb
adc
mov
add
adc
and
jbe
ret
jge
mov
in
pop
jp
fwait
mov
jb
inc
stos
jp
and
pop
addr16
mov
push
xchg
outsl
outsb
loop
lock
dec
test
dec
push
push
pop
sub
mov
xchg
mov
adc
fbld
mov
inc
cmp
fwait
adc
jne
div
mov
outsl
loopne
jnp
cmp
add
push
aaa
xchg
dec
rdmsr
or
icebp
das
insl
imul
ret
lods
mov
mov
in
inc
sbbl
insl
cmp
imul
or
shl
loop
cmpsb
jns
push
mov
push
xchg
and
cld
adc
pop
rorb
sbb
or
mov
bnd
test
cmp
ret
pop
adcb
mov
and
dec
cmpsl
and
xchg
imul
das
mov
popf
or
push
ds
and
xor
sub
jns
add
xchg
adc
out
xlat
imul
xlat
inc
outsb
mov
xor
inc
xchg
sbb
inc
mov
sahf
imull
bound
jbe
divb
push
enter
loop
mov
sbb
xchg
loopne
enter
cmp
or
sub
push
or
pop
push
enter
xchg
mov
xchg
sbb
dec
jg
movsb
mov
lods
cld
fistl
jge
popf
push
push
int3
lret
stos
and
dec
hlt
aas
dec
loope
adcl
sub
ss
lds
xchg
shrl
pop
mov
xor
push
pop
out
xchg
mov
lods
out
cmp
cmp
xor
sbb
scas
or
repz
neg
mov
push
repnz
xor
cmpl
mov
repz
or
cmc
mov
jp
fstpl
cmp
pusha
es
and
sub
xchg
imul
adc
sbb
jbe
adc
repz
aaa
mov
dec
inc
and
cs
aaa
pop
dec
xchg
mov
popf
shlb
int
jmp
mov
ret
daa
mov
ljmp
push
shlb
jne
cmpsl
mov
scas
push
mov
lret
jmp
sahf
bound
out
cvtpi2ps
pop
push
mov
les
outsl
movsb
out
push
subl
jle
pushf
mov
and
lret
cmp
scas
mov
xchg
test
in
and
jmp
lcall
mov
jge
imul
mov
int3
adc
int
dec
and
es
fldl
cmpsb
ds
push
push
push
test
movsb
adcl
imul
jmp
dec
out
pop
push
mov
dec
mov
in
add
fwait
mov
add
stc
leave
inc
inc
dec
inc
and
pop
push
xchg
mov
std
sub
mov
fnsave
xchg
push
cmc
sahf
out
shll
and
in
loope
xchg
imul
in
add
iret
push
jno
mov
sub
fisubl
mov
in
aam
mov
mov
inc
mov
lahf
or
das
repnz
pushf
les
and
pop
mov
xor
mov
rolb
lahf
scas
lret
popa
sub
shlb
fwait
adc
shll
add
add
add
aam
add
addb
add
add
adc
add
add
add
add
jecxz
add
addb
add
add
stos
stos
add
ja
mov
imul
clc
pushl
jb
jo
add
add
add
add
jb
or
add
adc
adc
adc
add
add
adc
add
lahf
adc
add
add
add
jb
add
add
sbbb
sbb
sbb
sbb
sbb
sbb
cld
sbb
add
sub
js
add
je
jb
outsl
in
outsl
jo
fidivs
push
enter
jecxz
out
xchg
out
mov
sub
clc
add
addl
mov
repz
xchg
incl
push
ret
pusha
adc
lcall
pop
jnp
rcrb
incl
cmp
incl
movsl
mov
add
dec
jmp
incl
add
adc
mov
add
xor
cmp
test
test
je
rcrb
dec
or
push
add
lock
call
test
jl
inc
clc
jmp
decl
or
push
push
incl
push
loopne
add
push
leave
pop
sbb
add
mov
lret
add
sbb
sbb
sbb
sbb
sbb
push
sbb
sbb
popa
add
insb
add
gs
jae
mov
mov
outsl
insb
add
fs
add
outsl
insl
insb
outsl
repnz
imul
add
je
xor
outsb
add
add
jo
add
fs
add
fildll
dec
xor
add
add
add
add
add
add
lods
add
add
fildl
add
add
add
add
add
add
add
adc
mov
movsb
dec
in
xor
ja
in
pop
push
daa
push
cmc
sub
pop
movsb
stos
xor
dec
pushf
xchg
hlt
push
pop
into
ret
clc
leave
fstl
mov
out
jno
call
mov
test
adc
push
inc
and
jns
or
aas
adc
aas
scas
jl
movsl
xor
sbb
adc
push
repnz
xor
pop
xor
jl
adc
fsubrl
cmp
jb
arpl
scas
lock
mov
pop
add
leave
or
lods
aam
stc
sbb
mov
aad
mov
jne
cwtl
sahf
mov
in
in
sbb
mov
cs
and
mov
in
pop
xchg
add
inc
scas
fistl
and
and
adc
mov
push
shll
movsb
cmc
mov
mov
inc
orb
cmp
outsl
sub
pop
rcl
loop
stos
aas
jl
and
xchg
gs
ret
xchg
lret
cmp
loope
leave
ja
test
xchg
into
call
push
ljmp
xor
push
add
pushf
pushf
pop
icebp
pop
mov
xor
lds
movl
je
pop
sbb
ret
xchg
push
sbb
xor
sbb
jae
lods
pop
jle
lcall
jmp
sub
sub
mov
dec
pop
test
stc
push
xlat
fistpl
sub
lods
je
inc
pop
xor
or
loop
lahf
int3
xchg
icebp
or
stos
fisttps
mov
loop
sbb
outsl
add
dec
xchg
mov
aaa
cmp
pop
lods
pop
je
test
dec
push
scas
enter
jl
xchg
sub
loop
dec
cmpsb
in
xlat
sub
mov
lret
negb
adc
or
shlb
fildl
cltd
sub
jge
repnz
shl
out
ds
lea
repnz
adc
xlat
or
add
add
jo
cmp
mov
push
push
jnp
lds
dec
mov
addr16
aas
push
jl
les
arpl
ja
push
aaa
pop
test
jecxz
or
cmp
cli
stc
push
push
mov
pop
pushf
out
add
sub
sbb
lea
test
or
pop
xlat
les
cmc
mov
addr16
mov
dec
xor
loopne
cmp
dec
dec
mov
dec
mov
add
dec
xchg
loop
xor
and
into
int
cmp
xor
imul
outsl
mov
enter
fwait
bound
test
aas
mov
inc
pop
sbb
inc
xor
sbb
xchg
adc
cmp
insl
sarl
arpl
sbb
adc
xor
mov
add
scas
lock
push
dec
inc
jmp
arpl
leave
lock
cltd
sub
int
push
addl
add
insb
cmp
addr16
xor
adc
cld
sbb
adc
sbb
out
lds
jl
jnp
jae
movsl
pop
or
test
sti
xchg
rcrb
iret
sub
aad
fmull
aas
or
jbe
js
lea
ret
or
jbe
push
jl
mov
repz
call
decl
push
push
in
imul
mov
je
mov
or
inc
ljmp
insb
dec
push
mov
dec
lret
mov
std
clc
mov
ja
add
and
xchg
push
or
hlt
pop
das
rcll
shll
sbb
test
jns
cs
sbb
outsb
sar
movsb
jb
repnz
add
mov
inc
lds
aaa
push
aad
adc
mov
shll
repz
jne
negl
aas
xor
inc
cli
add
imul
mov
cmp
dec
and
push
lret
aas
add
xchg
jg
js
int
int3
pop
fcoml
jle
xchg
cmp
jne
and
cmp
jge
daa
sbb
mov
adc
lret
jg
xchg
popa
lods
jecxz
and
fsubr
gs
and
cmp
sub
seta
jae
jl
jb
mov
adc
pop
pushf
and
rcll
dec
pop
push
mov
xor
fsubrs
call
inc
adc
andb
xchg
inc
stos
jb
mov
and
aad
mov
adc
pop
add
mov
add
pop
or
jo
pop
test
hlt
cmp
hlt
aas
pop
sub
inc
fdivs
rcll
sbb
sbb
dec
repz
mov
sbb
jg
fcmovnbe
incl
cmp
lods
xchg
mov
jae
mov
jecxz
or
push
xchg
in
imul
fisubrs
sar
movsl
adc
in
pop
push
xchg
lock
jo
mov
sbb
push
fs
mov
repz
daa
jb
ss
mov
cmpsl
mov
in
dec
arpl
pusha
ja
into
add
xchg
dec
mov
or
stos
ss
sub
nop
popf
mov
jno
mov
out
mov
cli
inc
mov
scas
and
idivb
push
and
pop
and
xor
out
es
and
arpl
ds
jge
out
cltd
pop
mov
loope
xlat
ds
cmc
sub
adc
jnp
push
xlat
into
lea
into
shr
mov
test
repz
outsb
ja
xor
stos
fstps
loope
jns
xchg
pop
inc
jg
pop
jmp
or
cmp
int3
xchg
shrl
mov
xlat
or
sarl
or
loop
push
or
dec
or
nop
sub
pop
cmp
fcompl
subb
sbb
inc
scas
mov
adc
mov
mov
jo
test
pop
scas
in
xchg
pop
sbb
sub
sub
fisttpl
jmp
jnp
or
cmpsl
mov
adc
ljmp
insl
mov
cmpsb
scas
jmp
pop
cmp
cmpsb
out
mov
sbb
or
ret
add
jb
ja
jne,pt
cltd
mov
inc
sub
push
adc
mov
lods
push
pop
sbb
sub
das
xor
popf
sbb
out
xlat
sub
mov
ret
shrb
push
dec
mov
shl
xor
dec
sub
fbstp
ss
push
lea
aam
pop
push
sbb
lock
clc
cmpsl
cmpsb
pop
dec
rorb
jmp
jge
mov
es
mov
imul
jmp
and
rorb
mov
fwait
add
fs
inc
int3
shrb
insb
bnd
ljmp
rorb
dec
push
xor
inc
sub
sub
fisubl
sbb
sub
inc
leave
aaa
in
lds
fwait
clc
cmp
aas
leave
out
xor
imul
icebp
js
xchg
fwait
xchg
xchg
hlt
incl
sub
inc
ja
es
cld
sub
push
loop
data16
xchg
in
je
lods
inc
in
fsts
add
cmp
push
adc
dec
iret
sub
jl
loope
cmpsl
adc
mov
mov
test
xchg
lcall
hlt
aad
jns
dec
inc
std
jo
mov
pop
jmp
ds
jae
or
inc
hlt
vmaxss
adc
or
jp
adc
loopne
dec
sbb
lcall
daa
movsb
sub
js
mov
dec
aas
mov
mov
loope
cs
movsb
adcl
jge
mov
xchg
push
loop
das
lret
mov
pop
xchg
jbe
inc
and
std
adc
lock
fwait
icebp
mov
or
and
pop
mov
xchg
mov
sti
jmp
lods
inc
mov
gs
popf
movsb
xor
push
in
add
ds
mov
cltd
mov
jo
and
nop
mov
leave
push
fwait
sub
test
aas
mov
or
cmp
push
call
cmp
test
fisttps
jns
push
pop
scas
dec
imul
cmp
cmp
fnstsw
loop
mov
pop
xor
test
lcall
cmp
adc
nop
xchg
lock
ret
mov
cmp
or
aas
cmp
mul
js
adc
sbb
out
in
out
add
test
pushf
and
sub
xchg
dec
and
push
popf
dec
mov
jnp
cmp
mov
cld
sti
je
jnp
sub
push
mov
inc
mov
dec
aad
neg
ja
pop
ffreep
mov
adc
sti
add
insl
jle
push
mov
in
hlt
fcoml
bound
and
js
add
push
repnz
dec
lods
aad
enter
mov
xlat
pusha
add
pop
cmp
sub
cmp
jle
loope
std
clc
pop
dec
lock
in
repnz
fbstp
ja
pushf
sub
dec
dec
jg
aam
in
sub
sub
int
xor
subps
adc
ja
addr16
or
xor
and
imul
jno
lock
sar
sub
mov
adc
mov
fbld
push
mov
insb
cli
mov
xchg
andb
cwtl
sbbb
dec
xchg
mov
cs
aam
cli
dec
stos
test
sub
pop
xor
pop
sbb
sub
jmp
imul
mov
outsl
push
push
lcall
in
cmp
push
jns
sarl
insb
cmp
test
insl
jnp
inc
pop
push
shll
jp
dec
pop
xchg
dec
pop
sbb
sub
int
xor
mov
imul
loop
mov
pop
stos
incl
push
sub
inc
bnd
mov
fwait
leave
jp
dec
outsl
and
fwait
ret
mov
xor
out
jmp
mov
cwtl
ja
imul
jp
jo
push
sahf
cmp
and
loop
lcall
sbb
cld
cmpsb
pop
gs
movsl
faddl
push
mov
in
adc
insb
adc
fwait
jb,pt
int
add
outsb
jbe
idivb
testb
fsubl
fcmove
jb
mov
nop
mov
jmp
movb
popf
mov
xlat
sbb
lret
adc
and
in
inc
insb
push
push
jecxz
xlat
xchg
or
jp
sbb
lcall
stos
repz
push
mov
js
rorl
or
nop
cmp
insl
jnp
push
adc
out
pop
sbb
js
loope
arpl
lock
jecxz
js
and
loop
sbb
pop
rcrl
pop
xor
loop
movsl
ds
adc
das
inc
xor
xorb
push
mov
push
ja
movsb
mov
loope
mov
xchg
cmpsl
aaa
push
push
aas
fwait
movb
cltd
mov
mov
push
sub
stos
loop
pushf
arpl
ljmp
pop
out
mov
pop
aam
cld
cmp
loopne
mov
push
xchg
fcomip
das
call
test
xchg
sti
dec
inc
cli
test
sbb
jmp
lods
mov
cmp
pop
and
push
icebp
mov
or
mov
inc
cmpsb
movsl
fldenv
call
cmp
pushf
lods
add
insl
jb
sti
fdivrs
sahf
scas
daa
lods
sbb
add
popa
xchg
cmp
out
dec
xchg
sbb
xlat
push
push
aaa
pop
pushf
mov
add
mov
aad
test
leave
jnp
mov
out
call
repz
push
enter
push
out
lods
filds
in
cmp
std
stc
cwtl
mov
add
jge
or
cli
inc
enter
pop
jb
inc
hlt
scas
repz
push
insb
xchg
sbb
adc
or
mov
sahf
inc
sahf
lret
adc
out
icebp
mov
sbb
addps
cmp
out
cld
sarb
pop
inc
loope
pushf
mov
cmp
js
aas
fsubl
xchg
mov
gs
sti
addl
pop
and
or
sahf
jge
push
add
outsb
shll
dec
or
shrl
sub
pop
inc
out
int3
pop
lods
sub
gs
inc
mov
xchg
cmpsb
and
cs
xor
lods
fcoml
mov
lea
aas
xchg
imul
push
jge
add
sbb
or
addb
sub
pop
pop
cmp
dec
and
fsubrs
movsl
pop
sarl
lock
jmp
loope,pt
add
add
xor
decl
xchg
mov
push
scas
in
loopne
push
rol
push
inc
test
push
dec
ret
lahf
fdivs
mov
sti
xchg
xchg
xor
data16
adc
pop
loope
xor
repz
sti
insb
bound
sahf
and
mov
popa
into
mov
in
dec
jp
mov
xchg
xchg
push
cwtl
movl
out
roll
dec
xchg
insb
shr
xchg
or
adc
fsubrs
cld
cmp
add
dec
scas
add
or
and
rorl
push
mov
fildll
inc
negl
insb
dec
pop
mov
cmp
scas
cmc
xor
ds
dec
dec
lods
pop
lods
out
cmpsb
loopne
mov
pop
hlt
xchg
inc
and
fwait
xor
xchg
sbb
sub
mov
or
loope
adc
fdivrl
jmp
cmp
mov
mov
cmp
nop
dec
cld
mov
push
pusha
ds
out
incb
ljmp
out
jo
xlat
mov
lods
or
in
int3
adc
cmpsl
cmp
hlt
cmpb
mov
jge
scas
fistpl
imul
call
adc
pop
dec
dec
mov
idivl
ljmp
mov
pop
mov
out
mov
push
cltd
dec
pop
lret
and
lods
jge
pop
test
cmp
inc
xchg
push
pop
fcom
data16
ret
inc
xor
inc
repz
scas
sbb
ret
add
jne
mov
mov
sub
jl
adc
jo
cli
mov
sbb
dec
pop
sbb
loopne
rcrl
out
std
mov
das
mov
jmp
xchg
jb
inc
pop
das
aam
push
mov
sbb
int3
adcl
adc
mov
adc
loope
cltd
push
add
in
or
push
sbb
test
inc
push
notb
sub
decl
inc
xchg
lods
jg
lock
bound
adc
mov
cmp
jae
rcl
pop
movsb
cmp
xor
gs
pop
rorl
lods
pusha
jb
pop
loop
jno
test
inc
mov
inc
or
mull
and
stc
or
pushf
cmp
and
push
add
pop
add
or
mov
jno
push
xchg
mov
pop
jp
adc
movsb
test
or
push
xor
add
stos
adc
pop
outsb
insl
repz
std
pusha
lock
inc
push
or
dec
inc
push
sbb
pop
and
or
xchg
pop
push
add
out
dec
dec
pushf
push
shlb
ljmp
clc
or
cmp
imul
pop
pop
inc
into
mov
push
or
mov
lods
dec
jg
mov
pop
jl
lock
les
sub
sarl
mov
lret
pop
add
sub
lea
decl
imul
mov
add
mov
mov
and
pop
jo
incb
push
cmp
mov
pop
mov
lret
sub
in
jnp
int3
lret
cvtpi2ps
xchg
jno
orl
int3
js
enter
push
adc
cwtl
sarb
in
mov
xchg
jge
pop
into
in
repz
push
int3
mov
ljmp
mov
fucomip
ret
jns
push
pop
mov
inc
xor
mov
cmc
push
mov
jg
popf
movsb
mov
das
fists
jecxz
sub
jnp
cmpsb
dec
imul
outsl
mov
sbb
std
dec
jbe
jp
loop
push
add
mov
jns
insb
in
xchg
sub
pop
std
and
data16
jae
cmpsl
and
sub
cld
outsb
pop
cmp
mov
out
flds
rolb
push
xchg
jle
ljmp
dec
jae
push
lods
push
loop
xchg
stos
adc
lods
shl
mov
lods
cltd
sbb
dec
xchg
nop
das
mov
idiv
pushaw
scas
sbb
jp
nop
pop
jmp
xor
icebp
sub
jbe
int
scas
arpl
mov
movsl
gs
xor
in
cmp
sub
mov
inc
xchg
out
call
inc
mov
mov
or
push
loope
sub
popf
jb
xor
inc
in
add
test
rolb
enter
xchg
add
mov
inc
jno
pop
push
inc
fistps
enter
and
lret
push
adc
daa
xor
pusha
cmc
inc
push
inc
pop
jo
add
jae
add
fistpll
mov
inc
mov
mov
loope
repnz
stos
pop
or
mov
out
mov
ficompl
addr16
fisubrl
xlat
inc
fadds
nop
call
test
sub
xor
loop
insb
bound
dec
sub
pusha
xchg
xchg
ss
repnz
xchg
add
fisttps
sub
icebp
sbb
out
imull
flds
insb
call
outsl
xor
lret
jecxz
dec
mov
cmpl
add
aam
dec
leave
jp
xchg
cmp
xchg
daa
loopne
cmp
add
push
add
inc
popa
add
outsl
inc
sub
xorb
mov
in
out
sbbl
add
sbb
divl
mov
int
xchg
dec
xchg
xchg
jecxz
and
cli
sub
dec
lret
dec
pop
jno
pop
mov
cmp
cmp
mov
mov
lret
out
stc
mov
mov
cmp
addr16
in
push
shrl
aam
push
popl
les
push
mov
cmp
subl
dec
inc
iret
inc
push
add
stos
mov
aad
cmp
ret
sbb
sbb
xchg
repnz
xchg
jbe
popf
lret
lods
cltd
pop
stos
int3
xor
jnp
xlat
push
push
inc
cmp
push
xor
jl
stc
loopne
outsl
xor
sbb
and
gs
jg
add
xchg
clc
lret
call
in
push
push
stos
dec
ljmp
jae
dec
push
xor
scas
mov
movsl
lcall
addr16
cmp
hlt
cmp
fsubr
rcl
adc
xchg
adc
test
jbe
out
inc
fwait
push
repz
sbb
add
xchg
pop
movsl
lods
xadd
adc
negl
shrb
bound
std
sub
mov
mov
xchg
repnz
mov
mov
cmpsb
add
add
fildl
add
add
add
add
add
add
add
add
sti
pop
add
add
imul
add
in
add
add
sbb
add
add
add
add
add
add
add
add
popl
add
add
add
add
add
stos
stos
cmp
ja
mov
jg
incl
add
add
add
and
and
mov
add
or
adc
add
add
add
adc
add
add
insb
add
add
add
mov
fcomps
push
sbb
push
sbb
sbb
cmp
call
outsb
push
push
pop
add
dec
imul
imul
roll
mov
lea
jmp
sub
add
in
pop
cld
inc
orb
shrb
call
incl
xor
incl
jne
push
fs
push
inc
add
je
in
jmp
add
adc
adc
enter
fcoml
in
in
xor
and
sar
add
add
lcall
xchg
call
incl
mov
push
cmp
push
cld
and
add
lea
add
add
decl
popf
loopne
add
lret
cmp
xor
add
mov
push
jne
flds
adc
push
pop
add
add
in
js
add
jmp
sbb
sbb
or
xor
add
jb
je
js
outsl
push
outsb
outsb
je
add
imul
outsl
jb
outsb
push
imul
add
popa
add
cmc
fs
insb
addr16
popa
add
jns
outsl
outsl
imul
popa
popa
push
jne
ljmp
add
in
push
pop
cmpsb
int
add
cmpsb
xchg
and
adc
cmp
adc
cmpsl
xchg
xchg
int
jge
pushf
jbe
mov
jmp
jle
adc
dec
push
dec
mov
movsb
push
xorl
dec
cmpl
pop
lea
rcrb
addr16
xor
add
xorb
fnsave
scas
xchg
pop
pop
jne
fcmovbe
mov
adc
icebp
clc
fisubrl
repnz
push
movsl
cmp
mov
add
insb
push
les
sub
mov
push
aaa
mov
icebp
inc
mov
mov
data16
popf
sub
xchg
pop
sbb
imul
or
mov
aam
cltd
rolb
sub
ficoms
outsl
mov
cmp
filds
mov
filds
pop
sbb
mov
adc
scas
sbb
gs
orb
sub
fsubp
in
out
outsb
aas
cmp
lods
jg
jg
pushf
std
popf
push
test
mov
out
mov
jmp
xchg
mov
out
and
add
ljmp
dec
mov
sub
push
mov
jmp
lea
dec
idivb
popf
push
dec
clc
or
aam
sbb
mov
rorl
xor
jbe
inc
fmull
dec
in
add
lea
mov
jmp
cld
xor
les
iret
pop
sarb
pop
ljmp
and
cs
jmp
imul
jge
subl
jo
pop
inc
enter
xlat
push
mov
std
lds
xchg
jecxz
mov
cld
inc
repz
ret
jmp
xchg
outsl
xchg
mov
ret
ljmp
xchg
outsl
add
mov
repz
pxor
aad
mov
sbb
add
fs
add
dec
xor
test
outsb
scas
sub
movsl
sbb
sbb
add
pop
pop
imul
stos
faddl
out
lods
cmp
lret
mov
repz
ret
pop
aad
pushf
fistl
jcxz
ret
int
mov
gs
sbb
adc
stos
pop
xor
dec
stc
adc
je
iret
inc
inc
inc
test
push
nop
sbb
add
inc
in
sub
mov
jp
fdiv
cmp
dec
shlb
add
dec
mov
and
mov
and
cltd
pop
popf
test
movsl
jne
xor
jo
xchg
int3
jno
and
mov
icebp
test
add
scas
xorl
ljmp
repnz
leave
mov
inc
add
fwait
lcall
add
xor
leave
inc
xor
mov
mov
jb
out
add
mov
iret
hlt
enter
out
into
xor
es
xor
xor
int3
jbe
mov
push
inc
adc
inc
sbb
push
mov
out
mov
and
sbb
xchg
xor
jle
mov
xchg
out
adc
into
leave
sbb
and
cmp
inc
cmp
in
push
mov
jmp
pop
repnz
dec
dec
pop
sub
fnstcw
or
sahf
cltd
mov
in
fldcw
lret
cmpsl
in
push
enter
mov
mov
mov
lret
bound
mov
lods
outsb
fdiv
jle
xchg
mov
shrl
adc
ds
ljmp
inc
jge
in
cmp
jb
outsl
ficoms
sub
pop
sti
push
cmp
mov
xchg
jno
sub
clc
inc
divl
dec
adc
cli
push
mov
bound
mov
orb
mov
out
outsl
dec
push
or
lcall
mov
jge
outsb
dec
shl
mov
shll
pop
mov
mov
jno
cmp
xchg
push
fcoml
mov
inc
add
mov
insl
push
mov
xchg
int
inc
sub
mov
mulb
pop
inc
xchg
test
gs
and
push
ja
mov
daa
xchg
push
popl
les
mov
sbb
or
popa
and
ret
and
lahf
fisubs
cmp
push
cmp
loope
inc
cli
fsubs
insb
and
ds
and
fnstenv
lret
push
push
pop
dec
or
sub
sahf
mov
sbb
int3
push
cs
and
stos
mov
fwait
adc
mov
push
push
and
lock
inc
in
xchg
push
cmp
jle
or
mov
int3
inc
lret
and
iret
sbb
imul
add
out
jae
push
ja
in
mov
dec
add
addr16
mov
pushf
in
mov
or
insl
jmp
push
fisttpll
xchg
or
ret
in
push
mov
int
fistps
imul
add
jg
cmp
pop
push
mov
xchg
xor
adc
shr
xor
iret
test
imul
ret
adc
xorb
adcb
in
jne
pop
out
ret
les
ss
arpl
inc
sub
fstps
jb
fcmovnu
in
or
int3
pop
mov
xchg
mov
std
adc
dec
pop
adc
lret
aas
xor
xor
cli
aas
jae
test
movsb
xor
and
inc
aam
sbb
test
int3
sub
clc
arpl
pop
or
pop
mov
xor
cltd
out
adc
or
std
push
mov
mov
jns
out
sti
sub
je
mov
cmpsl
and
push
jle
xor
iret
imul
les
pop
add
js
dec
jb
fdivrs
lds
adc
xchg
or
mov
lcall
xor
aaa
sbb
push
xchg
iret
and
loop
aaa
icebp
fiadds
push
cmp
mov
push
push
call
pop
lcall
nop
scas
sbb
xor
pop
mov
cmp
aaa
in
push
dec
lcall
les
cs
test
daa
aam
push
mov
mov
inc
or
xor
test
mov
inc
into
pop
sub
outsb
xlat
ljmp
in
jb
and
push
rorl
xchg
jae
rorl
test
lods
pop
xchg
das
jp
cmp
mov
lds
ffreep
addr16
aaa
sbbb
pop
hlt
sub
push
jle
testb
test
jb
and
fldl
and
dec
dec
outsl
roll
aad
out
pshufw
or
int
popa
mov
mov
adc
clc
das
inc
xchg
mov
lcall
dec
lcall
fistpl
add
test
push
pop
push
sahf
cmp
and
mov
jns
sahf
test
push
jp
nop
cmpb
insl
ret
xor
jne
push
mov
and
xor
mov
push
loop
jb
popf
rcll
or
or
ds
xchg
push
cmp
in
cmp
pop
push
inc
lods
daa
push
rorb
loopne
loopne
ret
gs
cmpsb
sub
in
les
enter
mov
and
mov
dec
rcrb
jge
push
inc
sub
xor
ja
and
ds
pop
subb
aas
mov
cltd
mov
jmp
mov
lods
xor
dec
addr16
mov
fistpl
add
or
and
xchg
push
jns
and
inc
jl
neg
dec
jnp
rcrl
dec
pop
adc
sbb
sahf
lret
inc
cmc
push
ja
mov
cltd
push
std
fsubrp
xchg
lcall
sbb
sub
aas
xchg
in
adc
xchg
jno
push
xlat
jecxz
mov
pop
sub
frstor
cs
pushf
jp
nop
dec
xor
je
jl
test
jecxz
loop
orb
cld
arpl
xor
jp
push
dec
dec
pop
std
mov
cld
cpuid
and
add
imul
adc
dec
outsb
pop
and
in
jns
repz
mov
and
cmp
std
cli
jp
and
and
mov
push
in
and
mov
or
aas
pop
push
adc
imul
push
cmp
push
bound
mov
jl
sub
test
flds
out
fdivp
sbb
mov
aas
arpl
repz
fistps
pop
cmc
cmp
outsw
pushf
pop
fcompl
roll
jo
in
sbb
test
pop
fiaddl
pop
xlat
pop
and
and
inc
data16
xchg
jo
mov
lds
push
pop
fidivs
js
in
iret
les
xor
lods
cmpsl
add
andl
stos
jo
xchg
inc
xlat
dec
jb
std
add
xor
loop
add
out
in
pmulhuw
cmp
int3
ljmp
imulb
or
addr16
mov
fadd
cmovg
inc
cld
xor
jle
xor
subb
inc
stos
dec
bnd
jae
add
lahf
clc
cmp
mov
jl
ret
popa
and
jno
xor
jb
mov
stc
pop
xchg
gs
rclb
dec
repnz
push
inc
sbb
or
stos
sub
xchg
or
add
aad
mov
test
jns
xor
das
push
cmp
mov
xchg
xorb
movsb
inc
jmp
or
fisubl
stc
push
data16
shl
pop
and
mov
or
push
iret
mov
jno
push
xor
ljmp
test
sbb
xor
push
sub
mov
divb
mov
push
pop
xchg
sti
inc
sub
xor
gs
shl
sarb
into
or
xchg
sub
pop
repz
call
pop
shlb
or
adc
mov
fucomp
jno
decb
cmp
out
xchg
stos
mov
cli
and
push
jecxz
or
jecxz
aad
lret
stos
mov
add
cltd
test
iret
lds
lcall
inc
xchg
cli
push
pop
out
jge
jno
int3
jge
add
adcb
sub
jl
inc
sbb
xor
cmp
imul
mov
xor
pusha
adc
test
or
jl
inc
xor
dec
sub
xor
scas
add
pushf
add
sbb
cmp
testl
notb
push
or
notl
mov
ja
or
dec
enter
cmpsb
fsub
inc
ja
lahf
mov
mov
movsl
pop
test
fstl
add
or
mov
fstpl
clc
dec
mov
into
in
jle
dec
or
sbb
arpl
pop
and
push
cwtl
adc
mov
ljmp
adc
pop
fistpll
les
insl
call
xchg
and
dec
mov
outsl
inc
fs
enter
jmp
adc
jp
inc
or
and
repnz
into
push
adc
mov
arpl
pop
aaa
push
mov
mov
cmpsl
bswap
in
or
mov
movb
fs
add
mov
jno
push
mov
add
pusha
jae
jno
or
sub
pop
jp
cmp
in
iret
mov
neg
lcall
inc
sbb
pusha
std
sub
jb
out
and
arpl
test
add
dec
movsb
push
jge
iret
mov
fidivrs
inc
jae,pt
out
cld
loopne
ljmp
addr16
in
movsb
clc
lret
pusha
sub
mov
fdivr
mov
xlat
mov
mov
push
xor
pusha
lcall
aaa
in
rorl
popa
or
aam
pop
scas
imul
sub
lfs
sbb
jle
xor
iret
sbb
jns
aam
fsubl
push
not
pop
int3
in
and
daa
dec
adc
popa
cmp
fcmovnbe
jmp
adc
call
test
and
jmp
push
stos
and
inc
pushf
gs
lea
add
xor
jl
lods
jnp
mov
adc
fstpl
das
roll
insl
ja
ja
shl
cmp
mov
push
xlat
jo
in
ja
loope
jns
push
sub
test
mov
or
jge
ljmp
xor
daa
or
imul
mov
loope
fnstenv
cmp
xchg
aas
les
cli
xorl
xor
or
arpl
sbb
xchg
push
shr
xchg
xor
dec
lods
mov
sbb
test
jl
mov
push
xor
xchg
leave
push
adc
xor
push
sar
std
incl
lods
sahf
dec
pop
or
nop
and
daa
test
adc
test
mov
sub
pop
adc
adc
inc
mov
sub
int
mov
sub
jp
mov
aaa
jnp
push
pop
cmp
pop
ss
outsb
sti
inc
out
inc
dec
fistpll
movsl
inc
adc
sbb
test
jo
out
inc
inc
ficompl
int3
std
loope
jp
gs
das
lds
adc
inc
ss
fmul
nop
fwait
insl
ljmp
arpl
and
cli
pop
stc
roll
cli
jle
subl
or
inc
and
ss
or
aad
outsl
stos
add
int3
jmp
test
jp
pop
mov
ja
inc
das
inc
repz
scas
aad
pop
int
in
jmp
mov
sbb
repz
mov
aaa
sub
and
ljmp
leave
pop
mov
cmp
leave
xchg
or
rcrl
shlb
lahf
jb
inc
push
jns
lea
std
scas
pop
insl
lret
mov
push
xchg
inc
sbb
and
shlb
jbe
js
mov
aad
mov
sarb
cmpsl
cmp
stc
xchg
mov
dec
imul
lahf
les
adc
jle
pop
into
cmp
or
pop
push
cmpsl
andl
xchg
dec
jne
or
mov
xchg
push
addr16
invd
jecxz
push
std
cmp
lcall
xchg
or
sbbl
in
loopne
xlat
clc
xchg
loop
adc
cmpb
ja
jecxz
add
or
or
test
push
push
fs
stos
fbld
sbb
idivl
clc
sub
mov
out
mov
mov
mov
dec
jno
adc
cwtl
popf
xor
arpl
mov
jno
xchg
outsl
out
xchg
sub
sahf
jecxz
lods
arpl
out
jae
stc
mov
mov
xor
out
aad
js
lods
push
xchg
and
adc
sub
add
fsubrs
mov
stc
movsb
cmp
loopne
loope
mov
or
and
enter
cld
or
dec
dec
mov
cmpl
mov
lods
add
xchg
fs
pop
lods
adc
je
or
jg
pop
push
ds
and
test
xor
xor
orl
mov
pop
or
aam
jle
mov
xor
push
mov
pusha
dec
or
out
sarb
and
dec
or
aaa
mov
ret
call
adc
pushl
aad
call
lahf
test
adc
mov
aaa
jo
xor
sub
jns
sub
push
mov
cltd
cmpl
adc
inc
aad
sub
xor
add
sub
std
and
add
adc
pop
or
dec
mov
mov
cmpsb
cli
test
sub
call
addr16
shrb
jge
xor
push
int3
xchg
add
push
movsl
cmp
roll
cmp
add
andb
mov
dec
mov
mov
xchg
pop
cmp
popa
leave
add
and
out
xchg
add
jmp
movsb
cmp
or
ds
xor
mov
clc
jo
pop
inc
cmc
mov
imul
repnz
fxtract
add
lahf
sub
add
insl
mov
filds
adc
push
pop
or
and
lods
mov
mov
mov
cmp
lods
add
mov
add
push
fs
dec
test
sti
jge
out
push
xchg
movsb
mov
fstl
loop
scas
push
sub
dec
jge
push
fdivl
fst
add
sti
cmp
adcl
lret
add
in
push
jae
and
inc
scas
or
and
xchg
dec
cltd
mov
data16
or
push
les
jns
jmp
xorb
pop
pop
xor
push
push
xchg
push
cltd
xchg
mov
lahf
cs
fsub
cli
xchg
add
pop
pop
ret
popa
loopne
jp
popa
inc
test
jno
sub
xlat
fmuls
jnp
fldcw
outsl
sub
ss
lea
or
int3
or
nop
and
insb
test
xchg
and
repz
mov
dec
mov
ss
xlat
add
sub
aam
test
iret
pop
sahf
adc
shl
xchg
inc
sbb
lret
das
sub
frstor
inc
mov
lahf
xchg
add
pop
jbe
iret
and
add
scas
pop
adc
loope
and
inc
sub
fs
mul
or
aas
nop
sub
sbb
fidivrl
popa
xor
or
aaa
imul
sahf
mov
in
cwtl
mov
daa
add
arpl
mov
xchg
xor
cwtl
xlat
jle
imul
fnsave
mov
stc
push
or
loop
add
pop
add
jae
stos
xor
stc
in
dec
les
adc
ljmp
stos
xor
ds
out
jle
clc
ret
xchg
inc
inc
xchg
and
pop
xor
shll
sbb
pop
adc
pop
hlt
push
nop
enter
mov
fstl
xchg
cld
jg
mov
xor
lcall
enter
data16
dec
enter
lahf
adc
out
xchg
cbtw
xor
stc
pop
lds
cmpsl
sbb
cmpsb
sub
xchg
pusha
popa
loope
out
iret
mov
sbbb
mov
pop
call
cmp
lret
dec
rcrb
mov
fistpl
ljmp
jns
ljmp
addb
push
cmc
push
fisttps
sub
push
mov
cmp
scas
xor
ljmp
out
rcl
cmp
cmp
push
decb
add
iret
adc
cmpsl
out
mov
loop
test
test
or
pop
imul
mov
or
cli
pop
add
pop
aam
pop
or
imul
mov
xchg
add
or
fwait
pop
xor
aas
push
xchg
push
stos
mov
push
fwait
icebp
sub
pushf
in
lock
jecxz
hlt
sahf
stos
mov
push
loopne
minps
mov
data16
add
add
add
pop
cmpsb
int
mov
add
add
add
add
add
add
add
add
adc
add
call
add
sub
add
add
stos
stos
add
ja
mov
call
add
add
outsb
add
mov
add
add
add
adc
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmpsb
add
add
add
add
adc
outsb
arpl
pop
and
ja
dec
add
push
mov
mov
xor
cvtdq2ps
push
mov
push
testb
add
lea
jne
lcall
std
adc
pop
cmp
add
popa
movl
push
add
mov
orl
adc
add
add
adc
test
add
call
adc
add
sar
mov
mov
out
add
add
push
jmp
push
push
push
out
pop
add
mov
enter
mov
jbe
add
jne
pushl
push
add
add
pop
add
out
add
add
add
add
add
add
push
and
add
inc
dec
xchg
gs
gs
jo
sbb
fs
inc
dec
inc
insl
jb
gs
insb
subl
fs
push
js
push
gs
jb
addr16
dec
gs
push
jae
push
jbe
cs
arpl
js
xor
add
add
xchg
add
add
add
add
testb
add
add
add
addb
add
add
add
data16
add
add
add
xor
add
add
add
jae
lahf
insb
fs
repnz
mov
jecxz
arpl
lret
fmuls
xchg
xor
clc
lods
outsb
push
xor
stc
sbb
ja
fldcw
jge
daa
jge
nop
stc
fimuls
lahf
sbb
imul
les
cmpsl
orb
mov
mov
leave
dec
cmp
icebp
mov
pop
ret
scas
xor
cltd
jecxz
mov
xor
lds
mov
nop
repnz
sub
push
movsb
imul
add
shlb
pop
fdivrp
mov
jae
mov
in
jbe
icebp
ljmp
je
pop
in
pop
icebp
jmp
fnstcw
mov
in
lcall
dec
ret
lock
xchg
std
sbb
popa
cmp
and
dec
mov
nop
xor
enterw
insl
mov
mov
loop
sub
aad
dec
out
dec
enter
insl
cmp
mov
jno
clc
testb
scas
test
lret
jnp
addb
dec
outsb
lock
stos
cmp
test
enter
xchg
xchg
mov
aas
xor
mov
stos
push
cld
inc
pusha
enter
add
lods
sbbl
ja
into
cwtl
mov
idivl
jecxz,pt
enter
dec
stos
mov
inc
mov
stos
xchg
mov
cld
dec
pushf
in
sbb
pop
xor
adc
in
push
jbe
cltd
in
mov
mov
xchg
push
mov
nop
mov
mov
gs
adc
push
mov
jp
fs
mov
push
xor
jo
emms
cmp
pop
fisttpll
mov
xor
pop
xor
into
mov
das
mov
sbb
mov
mov
es
inc
cld
jp
inc
sbb
daa
xor
jnp
xor
push
in
dec
movsl
movsb
mov
push
lea
movsl
mov
lret
aam
nop
cmc
jg
lea
cmc
test
cltd
aas
cmp
mov
jmp
call
xchg
rcl
pushf
or
mov
bound
scas
cmp
cs
inc
sub
jmp
xchg
mov
lock
and
filds
mov
mov
jne
jno
pop
loop
outsl
add
xchg
xchg
cmp
ljmp
pushf
xchg
jne
in
cmp
imul
in
bound
jae
cmpsb
xor
and
xchg
mov
push
clc
fsubr
sub
pop
out
std
sbb
xchg
inc
mov
mov
and
push
add
adc
push
jg
inc
push
sbb
add
leave
dec
andl
inc
in
cld
adc
insl
enter
jno
sub
add
arpl
int3
lret
scas
adc
adc
fiadds
mov
sbb
cs
arpl
adc
std
les
dec
ret
xchg
stc
pop
subl
rcrl
jne
mov
fimull
adcl
fsubrl
pop
icebp
fs
pop
test
dec
sub
jno
shl
sbb
out
cli
roll
sahf
fwait
cs
dec
adc
cli
mov
icebp
jmp
out
cmpsl
std
scas
sbb
inc
out
push
andb
test
ljmp
add
add
lret
dec
cmp
dec
cltd
sarl
push
inc
xchg
decb
push
iret
jp
movsb
mov
xchg
pop
das
mov
pop
dec
sbb
inc
mov
or
dec
rcl
loop
xor
and
jo
int
jmp
ret
inc
adc
aas
push
rcl
jmp
pop
xlat
mov
popa
mov
outsb
popa
jae
dec
xlat
jns
mov
addr16
and
pop
mov
das
xchg
int
lock
movsl
sti
mov
mov
ss
mov
iret
push
iret
sub
int
xchg
lods
or
lods
mov
jb
popl
sahf
and
out
pop
loop
sbb
mov
mov
ljmp
test
jmp
int
js
xlat
in
sbb
or
leave
xor
add
add
push
loop
adc
pop
cwtl
inc
aad
rcll
pop
dec
jo
sbbl
not
sub
and
fwait
dec
and
inc
cmp
add
ds
mov
mov
sahf
inc
pop
dec
xor
out
rolb
mov
lea
shll
ljmp
pop
cmp
in
or
xchg
inc
sbb
xchg
dec
aad
pop
add
inc
aad
add
cs
mov
nop
fisttps
dec
in
push
orb
or
in
mov
dec
inc
push
mov
dec
pop
imul
push
xor
std
fdivs
sti
stos
aas
xor
outsl
jae
xor
dec
daa
pop
lahf
mov
push
adc
test
das
adc
sti
lcall
sarb
pop
movsl
mov
movsb
cmpsl
movsl
inc
gs
adc
xchg
pop
mov
and
fidivrl
push
mov
cmp
stos
imul
and
rolb
dec
pop
push
aaa
lds
inc
xlat
pop
test
jns
push
mov
frstor
mov
adc
xchg
pop
ret
add
ret
insb
dec
stc
aas
aas
push
leave
fldt
push
sahf
and
test
jbe
add
sub
or
fsubs
push
mov
push
xor
xchg
sti
push
ds
lods
cltd
jbe
mov
push
and
negb
mov
in
inc
push
dec
jge
in
aam
pusha
fistl
lock
daa
lock
mov
ret
ljmp
pop
jns
pop
add
rcll
xor
stos
or
pop
jne
mov
cld
cmp
std
adc
loop
in
loope
or
cli
push
leave
dec
mov
push
cmpsl
rcll
test
ds
xor
repnz
lahf
arpl
cmp
sub
inc
and
jns
push
jae
push
out
fadds
xor
mov
mov
dec
or
int3
cwtl
fsubp
enter
pop
sub
mov
push
loopne
je
nop
mov
outsb
aaa
inc
pop
push
loop
add
repnz
in
mov
or
jnp
fucomi
push
dec
pop
mov
and
nop
lret
pushf
lods
mov
mov
inc
cmp
shl
jle
mov
dec
mov
int3
add
fimull
lds
xchg
insb
fcoms
repnz
inc
popa
push
mov
pop
push
data16
xor
ss
addr16
insl
das
mov
adc
daa
jmp
mov
jl
cmp
and
outsl
sub
repnz
sub
fcmovbe
cmc
xchg
dec
incl
cmpsb
pop
in
xor
xchg
or
outsb
push
push
imul
cs
xor
aas
mov
sahf
cs
push
push
dec
push
roll
out
iret
aam
and
cmpsl
and
or
cmc
fidivrl
inc
out
jmp
or
mov
int3
shl
and
jo
pop
loop
rclb
ds
out
enter
cmpsl
lret
xchg
mov
and
mov
jo
jne
mov
pop
int3
mov
cmp
es
pop
mov
dec
test
mov
mov
push
or
cmp
adc
fnsave
fsts
xchg
mov
imul
cmp
cltd
push
jg
mov
movsb
addr16
fucom
repnz
stos
cli
jnp
xor
push
fs
cmp
gs
icebp
cmp
fstl
sbb
cltd
mov
movsb
addr16
fdivs
mov
cmpsb
pop
int
xor
add
cmpl
lds
mov
xor
lret
dec
add
xchg
sahf
stc
es
dec
and
or
insl
sbb
mov
mov
add
test
and
icebp
in
loop
sbb
inc
sub
pop
xchg
dec
stos
mov
jns
lahf
or
fnstcw
je
shll
jecxz
jae
in
sub
imul
icebp
mov
push
jae
mov
mov
cmp
fmull
test
adc
sbb
add
sbb
push
popf
jg
and
pop
sbb
stos
mov
or
dec
and
fiadds
pop
scas
adc
mov
imul
or
mov
imul
addr16
adc
sbb
xor
mov
jae
pop
pop
xchg
js
dec
jp
or
into
leave
pop
cmp
hlt
js
lret
and
icebp
xchg
or
and
cmp
rcll
fs
cmp
sub
sti
jbe
pushf
mov
repz
cltd
xchg
jecxz
adc
out
sub
loope
outsb
movsl
mov
data16
lret
mov
call
xor
jo
pop
push
sahf
loopne
jecxz
xor
xor
test
popa
jg
shrb
jae
dec
int
fsubr
out
adc
test
jne
out
lods
repz
loope
mov
cli
jb
cmp
jne
push
add
fcoml
mov
sbb
icebp
push
pop
ficoml
sub
fcomi
pop
test
cs
cmp
jnp
adc
cmpsb
jb
pop
lahf
and
movsl
sub
cmp
test
bound
or
pop
pushw
faddl
cmp
loope
stc
dec
mov
clc
xor
sub
ror
clc
xchg
test
push
push
or
inc
stos
jp
dec
fistpl
repnz
ds
jmp
pop
stc
mov
inc
xchg
xchg
ja
andb
pop
push
adc
aas
scas
jp
dec
lea
push
add
ror
gs
jg
rorl
jmp
xchg
xchg
shl
cmp
jnp
daa
jecxz
dec
mov
andl
lea
int3
sbb
xor
and
popa
push
cmp
adc
inc
inc
add
stos
cmpsb
sub
icebp
pop
push
jp
mov
xchg
fildll
or
cmpl
or
repz
pop
push
pop
subl
sub
lret
in
les
add
shl
inc
cltd
push
mov
dec
shrb
clc
push
adcl
sub
add
xor
jecxz
in
sub
bound
sub
or
lods
sub
movsl
js
test
xor
or
add
test
and
imul
imul
and
ret
cmpsl
int
pusha
or
popa
in
loopne
int3
pop
xor
jle
jge
jmp
jns
pop
jmp
push
loope
jl
mov
dec
das
rcrb
loope
push
cmp
addr16
ret
ret
or
popa
jne
sbb
sub
incl
mov
sub
xor
out
scas
ficompl
adc
lret
data16
outsb
lods
jg
ljmp
jp
int3
lock
orl
mov
mov
and
lret
enter
xor
enter
dec
push
sbb
sbb
mov
adc
out
in
outsl
xchg
xchg
sub
cmp
or
aas
lret
inc
pop
lcall
test
mov
lock
cmp
xor
dec
pop
push
aas
popa
jg
sahf
or
sbbl
sub
out
gs
mov
jbe
fsts
jo
lcall
imul
adc
cmc
pop
popf
push
in
mov
and
cmp
lahf
mov
mov
idivl
loop
adc
inc
xor
jae
ja
xor
or
xor
fs
xchg
call
pop
sbb
shrb
in
cmc
cmp
cwtl
mov
inc
dec
test
cwtl
adc
sbb
das
pop
sarb
dec
faddp
xchg
xchg
vhsubpd
incb
mov
add
sub
data16
repnz
sub
dec
sahf
gs
lcall
inc
scas
and
mov
dec
std
jnp
or
out
mov
gs
xor
test
pop
mov
std
fsubrs
mov
es
dec
enter
xchg
outsb
lahf
inc
pop
xchg
test
mov
push
lea
pop
lods
fildll
nop
push
aas
push
xchg
or
fs
cmp
and
mov
mov
clc
jle
cs
mov
adc
cld
cmp
js
pusha
int
aas
sarl
dec
xchg
jo
jne
rorl
ja
imul
pop
xchg
or
jmp
cmp
pop
jnp
jno
lret
loope
popf
adc
or
paddsw
mov
repz
or
sbb
stos
stos
les
and
mov
loop
mov
inc
mov
lcall
stc
fwait
and
fisttps
add
mov
inc
inc
mov
xchg
mov
inc
sub
imul
les
scas
jmp
sub
dec
lods
or
adc
sahf
arpl
frstor
and
push
bound
loopne
cmp
das
sub
fsub
iret
imul
jns
jecxz
adc
pushf
cmp
push
popa
add
cli
dec
arpl
and
out
fiaddl
repz
les
xchg
mov
push
ds
push
inc
repz
mov
imul
movsb
inc
arpl
push
nop
enter
sahf
cli
movsb
pop
mov
cmpsl
lahf
pop
jne
xchg
icebp
data16
xor
fwait
clc
in
lock
rorl
jo
dec
into
and
icebp
insb
add
out
addl
xchg
inc
mov
or
popa
cmp
shll
jmp
adc
mov
rcll
jns
pop
out
stos
gs
xchg
loopne
ret
inc
dec
movsb
sub
cli
bound
mov
out
xor
adc
cmpsl
cmp
rcr
push
loope
mov
pop
push
cltd
xor
xor
xor
and
add
out
int
lods
or
ja
bound
out
jle
enter
sbb
stos
pop
call
scas
jb
aam
and
sti
mov
cmp
sub
or
sbb
pop
imul
dec
inc
cmp
pop
or
push
shll
adc
push
in
nop
mov
cli
mov
test
aad
mov
das
jo
adc
outsl
sarl
sub
lock
dec
dec
push
aaa
icebp
jne
sub
in
cmp
push
xor
add
mov
hlt
outsl
iret
test
sub
jae
sar
mov
lret
adc
dec
sbb
mov
add
sub
addr16
mov
dec
and
movsl
popa
lea
xlat
or
mov
lcall
mov
lods
fnsave
adc
add
jecxz
fs
jnp
stos
inc
add
inc
bound
dec
insl
mov
sbb
jo
mov
idiv
mov
xor
shll
movsb
int
int
in
test
hlt
mov
neg
out
cs
pop
jne
cmpsb
or
xor
sub
pop
dec
push
xchg
ret
fldl
push
sub
xchg
sub
xchg
ret
jl
mov
int3
cltd
notb
lret
push
jo
cmpsl
fs
icebp
lcall
les
fucomi
ss
lret
rorl
int
popa
jns
movsl
inc
popa
mov
jo
insl
shll
push
pop
call
sets
dec
lods
icebp
aaa
jl
in
ds
aam
int3
jle
pop
data16
andl
scas
jae
lock
repz
xor
ds
xchg
cmp
or
mov
leave
push
jb
jecxz
push
idivl
xchg
add
add
jp
mov
fwait
add
pushl
cwtl
cmp
xchg
sbbl
ficoml
push
or
push
jb
mov
cli
dec
and
push
repz
pop
pop
and
popa
jo
jnp
inc
sbb
fimull
jns
jne
cmc
xchg
div
mov
out
mov
je
xchg
test
xor
cmp
jne
sub
out
fistl
or
cwtl
das
adcl
fsubl
les
and
fcmovu
rclb
cmp
sbb
push
xor
or
sbb
mov
subb
cmp
dec
out
out
test
into
repnz
pop
mov
jb
fisttps
pop
mov
adc
aas
je
xor
call
std
jge
cs
mov
test
pop
and
dec
jns
jmp
mov
pusha
ljmp
icebp
in
imul
xchg
mov
ss
loope
daa
mov
jnp
inc
cmp
pop
or
adc
subps
leave
jo
jge
insl
ja
add
mov
adc
push
repz
sbb
pop
mov
sti
push
pop
sahf
imul
add
pushl
movsl
sbbb
pop
inc
xor
testl
mov
cmp
xor
xor
imul
adc
mov
cld
test
xor
jp
adc
mov
jecxz
jmp
test
mov
jmp
in
jno
add
xor
xchg
push
inc
arpl
xchg
cs
dec
fsubr
xor
adc
cld
push
mov
pop
mov
in
arpl
inc
xchg
adc
mulb
cld
cmp
sbb
filds
popl
je
mov
xor
aad
sub
test
mov
test
xor
shrb
lahf
sub
sbb
sbb
mov
push
lret
in
cmp
jb
add
imul
mov
pop
inc
or
dec
in
adc
fcmove
repnz
rcr
add
adc
inc
push
int3
mov
popa
pop
jmp
sarb
test
dec
mov
push
ss
es
inc
jbe
pop
pop
jae
lock
and
in
pushf
add
xor
push
mov
sbbb
mov
mov
out
adc
inc
mov
mov
shlb
cs
push
fmuls
out
ficoms
cwtl
lret
cmpsl
imul
into
addl
test
bound
pop
mov
or
sub
sbb
lcall
imul
fs
mov
incb
xchg
mov
lds
addr16
std
lds
nop
xor
pop
jp
adc
je
mov
bound
sti
js
ficomps
xor
xchg
mov
mov
repnz
notl
jnp
lea
into
leave
push
mov
fucomi
aam
jecxz
jecxz
sub
add
rolb
add
add
add
add
add
data16
add
add
add
xor
add
add
add
add
mov
add
add
inc
rolb
add
add
add
add
add
add
inc
add
add
add
add
repz
add
add
add
xchg
add
add
add
ja
mov
stc
pop
lcall
sbbb
jae
and
inc
add
add
add
inc
add
inc
add
add
add
add
add
add
mov
add
je
add
and
add
add
add
add
xchg
sbb
sbb
les
js
sbb
fisttps
arpl
jae
push
dec
imul
add
outsb
dec
jne
push
or
cld
mov
sbb
fdivr
jne
mov
je
cld
lea
inc
divps
pop
adc
inc
leave
inc
leave
and
or
ret
in
add
add
dec
push
add
adc
incl
call
inc
add
rclb
loopne
mov
call
ljmp
add
push
incl
jmp
call
push
and
inc
std
or
xchg
push
call
adc
push
add
lea
test
loopne
add
mov
inc
sub
repnz
push
incl
sbb
add
jmp
add
test
add
or
add
add
ficompl
sbbb
sbb
xor
sub
clc
add
sbb
push
add
fldcw
fs
add
gs
add
je
imul
inc
gs
add
inc
gs
add
insb
clc
inc
insb
add
push
inc
gs
gs
jae
sbb
push
xor
push
add
add
add
std
add
jbe
add
add
add
add
xlat
hlt
mov
and
imull
add
mov
pop
sbb
ret
aaa
sub
or
inc
sub
lods
loopne
xchg
movsb
pop
outsb
fsubr
cmp
mov
add
ja
ds
aaa
movsl
inc
pcmpgtw
adc
push
repnz
call
stos
jmp
test
mov
in
mov
shl
mov
es
mov
cli
dec
or
push
dec
outsb
orb
dec
insb
ret
xor
dec
adc
es
jmp
jne
iret
rcr
cltd
pop
sbb
sbb
jmp
lret
and
nop
mov
lcall
pushf
aam
inc
insb
push
int
mov
mov
roll
push
repnz
mov
test
inc
jmp
adc
dec
je
xlat
adc
jge
xchg
stc
daa
icebp
xor
pop
idivb
mov
sahf
inc
test
lahf
dec
ret
mov
mov
fisttpl
stos
push
loop
push
xor
pusha
inc
and
mov
loop
push
push
mov
shl
inc
cmp
pmaxub
pushf
lea
iret
pushf
cmp
dec
pop
xchg
mov
mov
dec
mov
ss
lcall
cmp
stos
out
or
mov
loop
movsl
fbstp
lods
jle
rcl
jo
in
and
ret
call
xchg
fucomip
sbbb
push
and
cmp
imul
div
out
xorb
rolb
xchg
cmpsl
ljmp
push
icebp
imull
push
pop
imul
popa
lcall
mov
sahf
test
xchg
test
xor
xor
xchg
out
push
fcmovne
xchg
sub
cmp
adc
addr16
arpl
mov
add
cltd
push
cmp
adc
jle
lret
xchg
nop
and
jnp
int
insl
cmp
stos
sarb
fs
sub
xor
xor
loope
aam
in
cs
daa
mov
sub
sub
lods
js
cld
lret
js
pop
jne
jge
loopne
out
cli
addr16
mov
push
cmp
cld
movsl
shll
aad
xor
pop
adc
and
adc
dec
fists
jecxz
jne
add
aas
call
fs
sub
inc
pop
dec
fsubl
lods
jae
mov
sbb
push
jg
mov
imul
lsl
sub
sbb
imul
into
andl
insl
test
pop
xor
call
jnp
pop
mov
xor
ds
inc
push
mov
loope
sbb
int3
xor
roll
mov
int3
cmpb
sbb
sub
xor
jg
cmpsl
outsb
push
scas
out
dec
movsb
hlt
sti
push
jnp
subl
inc
sub
lret
sub
hlt
or
out
jecxz
sub
sub
fadds
adc
push
xor
xchg
hlt
sbb
inc
insb
jnp
or
xor
stc
lea
xchg
fimuls
das
lahf
negb
pop
hlt
call
jle
test
sub
fidivrl
stc
in
aad
nop/reserved
dec
hlt
pushf
push
std
inc
fwait
xchg
ljmp
sub
add
xchg
in
push
daa
mov
and
imul
lret
pop
hlt
rcrb
mulb
jb
test
mov
int3
aam
or
inc
inc
xor
push
and
xor
fistps
and
and
and
pop
cmp
popf
fsubrs
add
sahf
xor
into
mov
setl
ret
clc
leave
clc
xor
out
dec
add
or
mov
dec
add
js
cmpsl
fsubs
mov
and
scas
sub
rolb
jns
outsl
add
mov
addr16
dec
inc
sbb
cmp
cmp
add
push
or
jo
xchg
lahf
ret
push
les
and
push
mov
outsl
push
mov
into
cmpsl
roll
repz
and
xor
xchg
inc
fldcw
or
insb
test
push
xchg
xchg
in
inc
pop
push
pop
repnz
scas
push
test
cli
lahf
scas
mov
movq
mov
lret
enter
insl
push
xchg
and
cmpsb
test
push
icebp
fwait
outsl
mov
add
adc
pop
dec
inc
push
sti
sub
fists
rcll
cmp
je
fadd
out
and
or
aaa
mov
mov
je
push
xchg
imul
data16
scas
jmp
cmpsl
aad
xchg
lret
cmp
cltd
add
xchg
pop
aaa
sbb
jg
arpl
push
lcall
xchg
loope
push
cs
sbb
lds
int
xor
js
lahf
jae
lahf
bnd
jbe
adc
rorl
jns
cmp
lock
dec
xchg
xchg
push
sub
stos
scas
scas
xchg
mov
shrl
icebp
sub
dec
mov
jbe
add
push
loop
jb
mov
adc
push
loope
pop
push
pop
cmpsl
mov
jno
jae
xchg
pop
lea
add
inc
popa
aas
dec
aad
jo
add
ljmp
mov
cld
insb
andb
sbb
jno
ds
clc
dec
adc
push
pusha
add
dec
mov
xchg
lret
scas
sbb
popa
pop
inc
mov
push
xor
out
and
sbb
sbb
adc
mov
jle
push
dec
cli
pop
jle
and
xor
iret
add
out
mov
and
or
sbb
mov
int3
in
pushf
mov
subb
fmuls
pop
daa
add
mov
and
ss
jl
jne
cmp
mov
lds
clc
sub
decl
idiv
arpl
push
adc
popf
mov
mov
gs
addr16
fnstsw
dec
add
js
xor
enter
inc
cmc
icebp
ss
jg
insb
ja
js
popl
or
lahf
ss
push
shll
adc
mov
sbb
and
push
movsl
out
sbb
into
fildll
and
push
push
jns
inc
add
dec
call
cld
jp
cs
dec
fnstenv
ja
adc
call
out
pop
cmp
test
xchg
fcoml
int
pop
add
or
fnstenv
sarb
dec
lahf
stc
xchg
insb
or
arpl
mov
push
aad
push
je
mov
push
cltd
jp
push
push
adc
push
pushf
test
mov
jecxz
jne
test
xchg
mov
cmpsl
in
cld
cmpxchg
js
aam
mov
ficoml
sbb
dec
into
mov
mov
push
gs
inc
not
js
xchg
leave
bts
mov
lret
icebp
jo
lahf
inc
or
adc
xor
adc
je
pop
cmp
adc
andl
add
dec
push
pop
adc
gs
rorl
in
cltd
aas
rol
dec
popa
fdivrl
hlt
lret
hlt
cwtl
xor
inc
sbbl
jne
mov
push
pushf
mov
jo
push
ficompl
movsl
repnz
sub
outsl
leave
push
out
xchg
xor
push
sbb
movsl
push
out
dec
push
xor
jo
jg
cwtl
and
gs
insl
fimull
pop
xor
loopne
ret
push
mov
mov
lods
pop
rorb
addr16
out
jl
xor
sbb
lock
push
mov
jno
jmp
ljmp
push
adc
push
jnp
xor
or
rcll
push
lods
add
test
jl
fmuls
jmp
repnz
mov
dec
push
ret
xchg
and
popf
push
add
push
mov
and
mov
repz
jecxz
test
insb
cli
mov
std
ss
mov
add
es
mov
jge
jno
decl
mov
arpl
push
nop
sbb
xchg
repnz
dec
sub
jbe
and
ds
movsb
mov
and
mov
push
aam
or
ret
scas
jmp
es
adc
ret
cmpsl
das
xchg
mov
fwait
mov
repnz
ds
dec
out
push
mov
sub
or
fcmovbe
out
pop
lods
add
mov
sarl
out
sbb
xchg
popf
fstps
dec
xchg
scas
js
mov
aam
pop
push
stos
pusha
iret
pop
icebp
mov
imul
cltd
shll
jno
push
cmp
in
fcmovnu
and
dec
sbb
test
out
std
xchg
insl
in
in
mov
lcall
and
mov
mov
inc
clc
mov
sbb
movl
mov
sub
inc
leave
inc
test
or
scas
sbb
pop
xchg
aam
xchg
hlt
aam
xchg
divb
or
in
lahf
ds
mov
lcall
popf
sti
stc
fcmovnbe
sub
movsl
xor
out
xor
push
jecxz
jnp
adc
outsl
inc
push
mov
pop
aaa
fdivrl
fst
loope
and
insl
imulb
lret
jp
mov
in
push
mov
pop
dec
dec
hlt
popf
es
popa
mov
or
stos
xchg
xor
insl
out
bnd
cmp
out
ret
ret
cmpsb
cmpsb
int
inc
shrl
pop
aad
das
rcll
repnz
jmp
mov
mov
in
jg
nop
insb
xchg
xor
push
fmuls
popfw
dec
pusha
pop
fs
add
add
sti
scas
and
out
dec
push
push
nop
sbb
pop
adc
mov
aam
lds
nop
cmp
or
pop
out
pop
icebp
add
mov
push
gs
into
cmp
cltd
or
inc
ljmp
lret
xor
sub
mov
popa
loope
test
repz
sbb
xchg
movsb
in
pusha
aad
mov
fbstp
or
insb
mov
or
std
int
sbb
enter
aad
sti
or
jle
push
lahf
add
dec
cli
inc
je
mov
fists
and
cld
lcall
adc
mov
lods
xor
cmp
pusha
aaa
cmp
insl
in
mov
or
pop
adc
adc
mov
add
scas
push
dec
mov
jle
loop
mov
aam
in
jg
adc
mov
mov
inc
mov
xor
or
mov
filds
arpl
stos
data16
sarl
pop
inc
jb
inc
jecxz
dec
pusha
hlt
jecxz
sarb
mov
aaa
jl
cmp
cmpsl
push
pop
sbb
jae
pushf
jp
adc
jns
aad
aam
clc
int3
rep
or
data16
adc
cmp
add
mov
cli
push
sbb
mov
fwait
xchg
sbb
stos
out
pop
gs
add
xlat
movsl
adc
insl
push
sbb
and
pop
sbb
outsb
adc
or
xor
mov
lock
cs
mov
jecxz
outsl
mov
cld
dec
loop
icebp
xlat
lea
rcll
mov
pushf
int3
and
pop
push
xchg
xchg
sbb
jbe
and
sbb
test
sbb
clc
and
insl
pop
and
andl
xor
fs
imul
in
repnz
pop
adcl
lds
scas
or
adcl
aam
out
lods
cmp
ss
adc
addr16
outsl
xchg
addr16
xor
jne
int3
fisttpl
or
or
clc
jae
push
sbb
jl
dec
pop
sti
push
aaa
inc
mov
lcall
fisubs
mov
out
pop
cltd
std
pop
arpl
inc
lods
lods
mov
pop
xchg
aaa
ret
inc
mov
fisubrs
call
out
lret
movsl
dec
andl
xor
push
imul
jno
inc
decl
or
mov
sbb
sub
mov
lea
xor
pop
mov
dec
jnp
popf
push
je
add
in
sub
psllw
and
leave
jmp
call
pop
test
sub
popf
push
cmpsl
lahf
dec
cs
mov
mov
cmp
mov
lea
xchg
mov
out
ror
xor
arpl
add
aaa
jb
sarb
jns
nop
push
adc
push
jno
mov
int3
add
adc
aad
call
mov
pop
js
les
mov
iret
mov
push
mov
jne
mov
shlb
cmp
enter
lods
inc
pop
or
mov
pop
cld
mov
mov
mov
lcall
int
mov
jns
pushf
negb
mov
mov
lea
mov
and
mov
repz
ss
cwtl
ja
mov
add
dec
sahf
mov
adc
lock
mov
xchg
je
in
and
mov
cmp
sub
arpl
imul
flds
lods
sub
imul
sub
push
lea
xchg
inc
into
setno
call
testl
jo
out
cmp
je
mov
ljmp
repz
or
jno
stc
and
call
testl
mov
mov
sbb
movl
fistpll
add
sub
add
mov
shl
or
mov
mov
bound
dec
repnz
xchg
sub
push
xor
movsl
add
ds
pop
rolb
mov
ror
jnp
lods
and
cmpsl
and
enter
aas
cmp
dec
in
push
fcmovne
out
push
sarl
int
testb
dec
dec
mov
imul
das
or
pop
addr16
out
in
adc
inc
add
inc
sbb
int
fmuls
adc
jo
out
dec
rorl
arpl
and
mov
jo
xlat
sbb
cmp
movsl
repnz
jae
outsb
and
push
roll
inc
dec
lcall
add
aas
and
pop
mov
xchg
mov
aas
sub
mov
mov
bswap
adc
shrl
mov
pop
and
jne
or
fstpl
adc
and
jae
lcall
pop
xchg
dec
xchg
mov
mov
push
jmp
mov
mov
xchg
dec
hlt
cmpsb
pop
and
nop
arpl
sub
fldt
push
push
add
fwait
lods
xchg
sahf
and
or
in
xor
shlb
mov
movsb
cmp
dec
cli
mov
and
out
into
push
fsts
xchg
mov
pop
pop
pushf
clc
and
rcl
lods
jmp
outsl
pop
pop
xor
inc
iret
cmp
xor
test
popf
ds
inc
enter
cmp
push
lret
shl
cld
inc
cmpl
rcl
mov
jno
js
and
jmp
mov
adc
pop
cmpb
out
adc
ss
add
pop
fisubrs
popf
andl
jecxz
xchg
adc
test
aas
or
mov
stos
push
test
cmpsb
cmp
cmpsb
shl
out
testl
shlb
icebp
add
test
mov
divl
aaa
in
das
mov
insl
mov
fstl
jg
daa
add
mov
inc
test
sbb
iret
cmp
insl
add
inc
jae
jbe
mov
mov
shrl
mov
das
ror
icebp
lret
mov
xor
outsb
pop
addl
sbb
and
mov
insl
xor
jp
xor
sbb
test
cmpsb
pop
dec
fstpt
jl
movsb
push
add
dec
mov
ffreep
xchg
and
js
daa
sbb
inc
push
sbb
fildl
jae
jmp
push
leave
inc
fdivs
mov
sub
sbb
sub
test
fs
jnp
jle
cmp
in
repz
inc
inc
and
data16
aas
pop
xchg
shrb
not
cmp
xchg
stc
ss
add
xor
mov
adc
leave
iret
fsubl
add
add
test
pop
add
mov
add
dec
jns
sbbb
sti
and
aam
cmp
inc
dec
rcl
jecxz
cwtl
cmp
cld
fistpl
pushf
inc
xchg
push
jle
or
mov
pop
add
dec
sub
das
sub
cmp
int3
movsb
and
mov
roll
push
jge
xor
jge
add
xor
sbb
lahf
sbb
sbb
adc
cmpsb
cli
xlat
dec
cmc
enter
mov
jmp
ficomps
lret
out
jecxz
inc
pop
push
lock
orb
jle
jae
neg
out
std
cmp
add
cmp
adc
lods
icebp
mov
fsubrl
push
shlb
xorl
mov
in
pop
push
jns
push
les
cmp
cwtl
shr
pop
sub
cmp
lret
mov
mov
repz
or
push
xorb
aam
sbb
les
lret
mov
mov
ljmp
je
dec
ret
scas
fnstcw
les
sbb
inc
mov
mov
ret
test
cmp
loop
inc
jge
inc
sti
fcom
movsb
movsb
jge
int3
scas
loopne
es
mov
repnz
lret
aad
dec
ret
xchg
stos
lcall
rol
mov
mov
or
cmc
and
imul
pop
incl
fptan
push
roll
idivb
ret
mov
mov
stos
mov
rorl
lcall
ret
sbb
and
push
dec
push
jo
mov
into
adc
add
mov
xor
mov
xchg
sbb
pop
outsl
pop
fmull
shll
insl
and
insb
std
std
int
pop
out
xchg
shlb
fnstsw
sub
bound
lods
ja
das
sbb
fs
sbb
mov
jae
pop
fisubrs
sbb
in
adc
in
sbb
stc
xchg
popa
add
push
xlat
pop
add
mov
pushf
push
aas
pop
addb
andl
adc
iret
hlt
sub
fsts
xchg
movsl
loop
push
xchg
je
lods
pop
add
popa
push
pop
xlat
xor
loopne
cmpsb
outsb
xchg
loop
inc
jnp
xor
dec
pop
divl
inc
jmp
push
dec
cmp
pop
sarl
xor
pop
fcompl
stc
xchg
adc
ljmp
nop
dec
add
sbb
mov
notl
or
sahf
pop
add
rolb
test
push
mov
mov
adc
and
out
push
movsl
aaa
test
xchg
and
cmp
jns
adc
insb
sbb
add
add
dec
add
add
add
push
add
add
add
add
add
add
add
pop
add
xor
xor
xor
add
add
add
add
addb
add
ja
mov
incl
add
add
dec
jo
gs
add
dec
add
add
add
add
add
add
add
repz
add
add
js
mov
add
add
insb
arpl
add
add
add
add
roll
add
add
add
jae
cs
push
outsb
sub
dec
jae
jb
inc
and
add
icebp
jecxz
jne
leave
push
js
mov
adc
push
pop
mov
pop
lea
or
testb
je
lcall
add
push
clc
add
push
pop
or
cmpb
adc
push
push
lcall
push
rcll
sarb
sub
add
push
incb
call
pop
lea
push
or
add
je
push
push
cmp
add
and
cld
dec
adc
mov
loopne
adc
lea
loopne
clc
jo
enter
inc
push
adc
clc
clc
inc
adc
add
push
add
add
add
push
add
add
add
add
add
add
lahf
gs
imul
add
arpl
je
inc
or
jns
dec
add
inc
push
gs
insb
dec
shrl
fs
add
ret
outsb
push
add
inc
outsl
imul
add
add
add
add
xor
add
add
add
add
mov
add
add
popa
adc
add
add
add
add
add
add
movsl
push
fidivl
push
mov
push
kxnorw
pop
gs
xchg
repnz
dec
fs
mov
and
mov
add
into
js
inc
adc
jo
rorl
ffreep
add
or
pop
jmp
out
sbb
mov
mov
ret
out
or
push
call
fst
test
mov
xor
lods
add
dec
xor
pop
jmp
xchg
adc
push
iret
pop
pop
adc
iret
ret
fwait
je
test
adc
or
dec
fwait
and
stos
xchg
sub
lea
addb
sbb
es
clc
jge
xchg
dec
mov
mov
push
sub
xchg
orb
cmp
ss
dec
leave
dec
popa
xchg
je
das
aas
sbb
lahf
fdivrl
mov
ds
gs
cmp
cltd
sub
js
cwtl
mov
inc
jge
data16
insb
icebp
adc
adc
lahf
jge
mov
andb
fcomi
mov
repnz
xchg
or
fmuls
loope
cmp
mov
jmp
stos
jb
push
clc
sahf
mov
cli
jmp
mul
push
adc
into
jg
xchg
xchg
sbb
xchg
movsl
jae
ljmp
pop
push
mov
add
aam
sub
and
call
push
in
dec
ja
pop
lcall
fcmove
xchg
pop
pusha
iret
negb
mov
xchg
repz
in
dec
jge
sbb
incb
pop
outsb
out
cwtl
inc
nop
fiaddl
push
pop
mov
scas
jns
pop
sbb
mov
xor
xorl
stos
jp
pop
or
push
enter
bound
enter
jno
sub
stc
ret
jnp
in
inc
xchg
sbb
andl
test
adcb
and
mov
popf
popf
add
out
push
cs
sbb
decl
dec
pop
push
add
xor
xchg
jns
push
cmpsb
or
push
mov
test
or
inc
sub
imul
xchg
lock
inc
cmpsb
add
adc
jae
rclb
inc
add
sub
int3
roll
add
sub
daa
xchg
or
mov
dec
sub
ret
sysexit
cmpb
mov
mov
sbb
sahf
rcr
xchg
ficoml
push
out
scas
aad
dec
cwtl
in
xorb
fdivr
push
jne
sbb
subl
aas
mov
sbb
imul
pop
lret
or
hlt
fisubrl
and
je
addr16
fdivrl
dec
orl
jbe
popa
aaa
aam
loopne
addb
lock
call
ds
shlb
and
push
pop
insl
sbb
cmpsl
pop
add
or
rolb
xor
cmp
pushf
jp
jecxz
into
or
daa
test
rcll
jecxz
std
or
fisubrs
cmp
sbb
jmp
or
push
pop
enter
dec
test
repnz
outsb
mov
mov
in
and
adc
push
and
lahf
in
mov
pop
push
rcrb
test
out
bound
int3
cltd
sub
shll
xchg
loopne
je
sti
cld
pop
mov
xchg
pop
adc
push
add
push
sub
inc
fidivrs
out
sbb
mov
xor
and
inc
push
xlat
addb
test
int
movsl
shll
dec
pop
aaa
inc
jb
les
xchg
loope
leave
pop
and
lds
aam
push
jecxz
push
xlat
call
adcl
sti
dec
sarb
nop
sbb
mov
ds
cmp
or
icebp
push
js
decl
adc
mov
pushl
icebp
js
pop
sbb
and
fnsave
sbbb
pop
fisubrl
sbbb
pop
scas
or
and
jle
enter
repz
push
lods
popa
pop
dec
push
pop
fdivl
inc
and
sbbb
sti
pop
lds
sti
outsl
pop
pop
mov
and
mov
mov
jae
sbb
inc
xchg
dec
fisttps
negl
lret
add
mov
xchg
xchg
cmpsl
mov
in
mov
stos
xor
iret
clc
insl
test
fimull
insb
push
loope
lods
mov
negb
push
push
jo
pop
fdivrl
fisttpl
aaa
ficoml
ret
lret
cld
add
out
lods
mov
fstl
mov
push
inc
cmp
scas
adc
ja
ficoms
hlt
in
pop
leave
loope
push
push
mov
and
mov
lea
cmp
lret
cli
mov
xor
mov
int
sub
push
jmp
sbbb
gs
fnstsw
mov
adc
test
mov
mov
testl
or
rolb
pop
test
imul
outsb
test
adc
sahf
cmp
jb
lods
addr16
gs
insl
loop
inc
mov
jbe
push
js
aam
sub
jmp
mov
pop
movsl
inc
pop
rcll
outsl
je
frstor
pop
cwtl
or
or
xchg
out
xchg
push
movsb
ds
xchg
into
rcr
sti
popf
add
faddl
dec
bound
sbb
push
insb
add
push
fnsave
std
dec
aad
imul
xor
insl
sti
data16
negl
push
jl
sahf
push
pop
cmp
adc
ficomps
repnz
testl
xchg
stos
movsb
fdiv
sub
xchg
aaa
jnp
outsl
loopne
pop
pushf
push
jp
pop
cmp
aam
add
jge
aad
pop
mov
js
dec
aam
mov
scas
jl
sarb
int
inc
bound
lods
aad
int3
lea
aad
cli
inc
pushf
jno
sbb
sub
mov
mov
sbb
mov
sub
ja
mov
xor
fdivs
push
sbb
lea
fcoms
sub
and
outsb
addl
shl
mov
xlat
ja
push
lock
xchg
pop
lods
testl
int3
mov
fsubrl
loop
lahf
adc
cmp
out
out
ret
out
in
test
or
or
jge
mov
inc
and
mov
jno
xor
daa
test
mov
sbb
pop
adc
out
test
push
iret
int3
sbb
lods
cmpsl
pop
mov
mov
dec
ret
pop
mov
testb
inc
inc
bound
mov
or
push
push
or
push
xor
shr
jle
ljmp
sbb
adc
iret
adc
scas
and
int3
and
mov
and
insb
scas
xchg
std
and
adc
sub
lret
loope
xor
add
shll
cmpsl
xchg
cmc
adc
jo
xor
mov
mov
push
sub
push
mov
dec
or
push
daa
xchg
shll
repnz
xchg
mov
je
mov
repnz
sub
lock
xchg
jnp
pop
lret
cmp
dec
sti
mov
add
pop
xor
push
in
cs
push
in
mov
ret
jp
clc
das
in
sbb
mov
jae
dec
aad
out
cltd
cmp
pop
enter
push
jae
mov
out
iret
cmp
stc
xor
cmp
xchg
cmpsw
addr16
jge
outsl
jl
mov
lret
mov
pop
leave
outsb
loop
mov
jbe
jnp
aas
dec
xorl
mov
cmpsl
in
pop
xchg
int3
call
adc
xor
jecxz
lea
dec
mov
lea
clc
into
sahf
orl
leave
lock
jmp
div
push
or
lock
push
mov
or
push
mov
xor
jae
sti
adc
cmp
sub
dec
mov
scas
xchg
fwait
pusha
inc
mov
in
xchg
jb
dec
sub
pop
adc
loop
outsl
pop
movsl
xor
pop
inc
sub
nop
je
or
pop
lret
fs
jl
adc
dec
jb
dec
jnp
xor
sub
pop
jno
pop
int
mov
xchg
ss
pusha
lods
push
mov
int3
push
mov
jg
pop
add
jno
adc
adc
outsb
pushf
movsb
adc
sub
pushf
mov
sub
int3
jae
popf
hlt
dec
add
aad
fnstsw
xor
pop
xchg
inc
es
in
mov
sbb
popa
popa
xchg
sub
xor
mov
cmpsl
bound
outsb
add
in
and
jmp
lds
mov
xchg
mov
insl
cmp
and
icebp
leave
mov
add
pop
jmp
sbb
js
push
repnz
stos
jle
in
insb
loope
mov
mov
lods
xchg
sub
pop
sahf
fwait
or
leave
addr16
dec
cld
pop
lret
imul
cld
inc
and
fisubl
arpl
pop
inc
mov
das
test
fadd
jae
mov
xor
imul
mov
nop
iret
xchg
push
push
ljmp
cli
mov
fdivs
dec
shll
les
scas
adcl
mov
push
sub
aam
mov
mov
sbb
xor
mov
adc
packuswb
cld
rcll
xor
mov
aas
imul
jne
push
mov
mov
mov
pop
mov
push
sbb
push
dec
es
pop
xor
fcomi
popa
xor
jle
adc
cmpxchg
inc
cmpsb
in
dec
cmp
cmpl
push
dec
or
or
sub
ja
pop
sub
adc
mov
jne
sbb
or
dec
lret
push
scas
jns
mov
jmp
inc
es
dec
fisttpll
push
jge
jmp
and
jge
cmp
jge
in
dec
into
sbb
mov
jnp
sub
add
jnp
xor
roll
lahf
or
mov
por
fisubl
or
into
leave
xor
pop
test
fdivrl
cmp
dec
and
push
lahf
push
aad
xor
jno
push
and
out
cmp
pop
mov
into
fstpt
mov
dec
xchg
adc
mov
test
repz
sub
ret
je
hlt
dec
test
stos
mov
inc
xor
cmp
cmp
and
or
cli
inc
sbb
js
mov
addr16
cmpsl
popa
lret
sub
adc
cmp
sbb
es
in
or
int
cmpsl
mov
push
cmp
mov
push
je
stc
mov
ret
mov
mov
fs
add
mov
adc
out
lret
bswap
fnstsw
mov
aaa
incb
arpl
xlat
jmp
mov
aam
mov
xlat
pop
divb
es
imulb
sbb
or
out
sub
jge
jg
mov
fmuls
cwtl
sbb
ljmp
dec
or
sub
mov
sbb
cmp
hlt
insb
or
jb
jns
popl
inc
jo
and
push
into
and
lea
pop
jno
dec
sbbl
filds
mov
in
sbb
inc
pop
mov
rcrb
add
std
cmovp
add
test
ljmp
cmp
and
repz
adc
imul
xchg
sub
pop
pop
idivb
xchg
jp
jnp
shl
and
idivb
jp
and
pop
fdiv
jmp
call
pop
and
addr16
loop
add
cmp
inc
int3
adc
mov
push
sbb
stos
outsl
fs
sbb
cli
push
push
xchg
ficompl
push
adc
dec
mov
aam
andb
arpl
test
add
dec
std
xchg
idivl
lcall
leave
add
scas
push
je
or
in
add
sbb
lcall
dec
jno
stos
and
lahf
mov
pop
push
je
jbe
addr16
cltd
mov
inc
jno
jge
mov
in
int3
js
lret
sti
hlt
notl
mov
or
sub
inc
ja
inc
fbld
push
je
cltd
mov
incl
push
sbb
fnstsw
mov
mov
dec
ficomps
shrl
jl
in
imul
les
push
and
stc
jmp
insb
movsb
lret
jle
inc
sub
and
ds
scas
cmp
test
gs
jbe
and
pop
lret
nop
in
fsubrl
shlb
sbb
adc
loope
daa
jecxz
and
sbb
mov
ds
pusha
lock
push
lahf
pushf
lahf
movsb
adc
lret
loopne
sti
insl
adc
mov
xchg
fimull
dec
mov
insb
insl
mov
sub
xor
fisttpl
push
sbb
xor
sub
lock
sbb
sbb
fisubrs
mov
push
xchg
xchg
push
push
adcl
xchg
xlat
xor
cli
jle
cmp
test
jnp
dec
sbb
jnp
fst
xchg
lods
mov
adc
ret
jns
pop
mov
mov
fsubrs
cmp
movsl
test
aaa
dec
adc
clc
jo
je
repnz
lahf
xchg
stos
jmp
pop
add
int3
jmp
lret
sti
dec
fstl
adc
mov
out
cmp
jnp
inc
mov
dec
jmp
or
repz
jge
xchg
fadd
jns
sub
cs
stc
adc
mov
xchg
sarl
mov
mov
test
je
icebp
jbe
adcb
sbb
lea
dec
aad
xor
pop
insb
mov
push
and
jg
sub
pop
pop
shll
movsb
and
xlat
stc
push
daa
aad
lds
sbb
outsl
clc
adc
xchg
in
fdivl
imul
xchg
int
sar
dec
int
push
in
jmp
xchg
sub
divb
jl
or
mov
or
fs
jne
stos
fwait
inc
cli
aad
push
lds
sti
stos
dec
enter
ror
popf
pop
sahf
dec
sub
dec
add
add
fwait
xchg
and
outsl
jno
sahf
ljmp
pop
push
add
push
mov
insl
bound
call
insl
imul
mov
leave
xchg
aas
in
dec
gs
inc
clc
push
cld
adc
pop
stos
push
push
and
jmp
jo
jnp
push
adc
cmp
and
insl
inc
in
aad
cmp
fnstcw
inc
fsubrl
es
push
mov
or
jb
dec
jle
shrl
ss
fcmovu
add
outsb
dec
cli
jns
and
hlt
add
pop
sbb
repz
punpckldq
ret
mov
mov
ss
push
jns
pop
push
mov
pop
stos
inc
jae
inc
mov
xchg
fistpll
mov
out
in
hlt
pusha
adc
mov
scas
gs
mov
inc
pop
inc
repnz
sub
sub
sbbb
es
xchg
xor
jle
cmp
fnstenv
lods
inc
leave
aas
in
mov
mov
push
xchg
jno
popf
in
mov
xchg
xchg
jg
mov
and
test
jg
mov
adc
jmp
cmp
inc
lea
addr16
clc
push
cmc
mov
ss
jno
mov
ret
mov
repnz
pop
xor
xor
jmp
cmc
sub
mov
pusha
cltd
cmp
cwtl
inc
cmp
in
sbb
and
shll
mov
sbb
sub
addr16
mov
subl
pushl
scas
loopne
jmp
test
adc
inc
inc
push
inc
xlat
sarb
decl
jecxz
add
scas
pop
mov
int3
pop
mov
dec
cld
sbb
jns
mov
add
push
insl
cmp
stc
and
jne
enter
mov
dec
and
mov
mov
pop
cli
cwtl
mov
add
lret
dec
adc
je
enter
mov
and
cmp
bound
mov
fistps
mov
mov
push
jmp
fcoms
ss
jb
adc
jle
add
push
or
mov
decl
sub
jns
in
push
adc
lret
fnstenv
scas
cmp
mulb
jne
xchg
aad
sub
inc
sbb
push
stos
int3
jle
test
jo
xchg
inc
cmp
inc
and
fidivl
xor
stos
fldt
or
outsl
mov
push
shll
mov
xor
xchg
sbb
mov
ss
push
and
mov
xchg
mov
sbb
dec
mov
xchg
cmpsl
and
pop
mov
movsb
jnp
enter
jbe
mov
pop
adc
negl
dec
or
pushf
inc
imul
test
lret
lret
sub
mov
xchg
push
stos
clc
loop
je
in
ret
mov
clc
arpl
push
and
imul
mov
ret
fsubrp
cmc
adc
cmpsl
xchg
xor
xchg
cmp
cmp
pushw
xchg
lcall
lret
dec
lock
xchg
mov
push
jb
add
hlt
jno
mov
sbb
xchg
fwait
icebp
and
inc
bnd
test
movsb
fwait
aaa
pop
pop
mov
cmp
xchg
inc
ja
scas
push
dec
pop
ja
cli
add
mov
mov
fwait
or
dec
ds
xor
sti
dec
cli
jg
test
xchg
sub
jbe
into
movsl
or
cmp
push
ds
cmpsl
loop
in
push
mov
adcl
into
mov
les
push
divl
clc
pusha
sbb
out
out
inc
sub
pop
in
push
pop
fwait
and
outsl
mov
loope
jle
cld
leave
jne
jmp
into
xor
ss
mov
push
in
pop
push
fmull
mov
mov
mov
inc
sbb
cmc
inc
in
sub
inc
or
ss
mov
ja
push
xchg
subl
inc
lods
mov
lds
sub
sbb
iret
jbe
stos
pop
jecxz
inc
jne
push
sbb
sbb
push
fcompl
cs
push
test
and
mov
or
push
sti
popf
xchg
cmp
lret
shrb
cmc
mov
iret
mov
mov
ljmp
mov
mov
mov
dec
stos
insl
call
add
mov
and
imul
mov
dec
adc
mov
xchg
dec
lret
xchg
mov
sbb
adc
inc
mov
scas
out
cltd
and
sub
sub
cmc
aas
ss
lds
push
adc
xor
ror
insl
imull
add
add
add
add
popa
adc
add
add
add
add
addl
add
add
add
inc
jae
add
add
add
add
jecxz
add
add
add
add
add
add
push
adc
add
add
add
add
add
add
stos
stos
add
divb
mov
dec
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
jo
add
pushf
add
rcl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
aas
xlat
add
sub
add
and
add
sbb
add
adc
add
or
add
add
add
cld
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pop
xlat
add
pusha
xlat
add
insb
xlat
add
adc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
clc
xlat
add
sbb
add
inc
fadds
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xchg
fadds
add
add
lods
fadds
add
add
fadds
add
fadds
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
lock
add
fadds
add
flds
add
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
pop
fiaddl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sbb
add
and
add
sub
add
inc
fildl
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
fildl
add
faddl
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
push
faddl
add
add
add
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
mov
faddl
add
faddl
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
