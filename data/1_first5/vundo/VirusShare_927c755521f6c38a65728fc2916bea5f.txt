add
add
jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
mov
out
inc
push
aaa
clc
sub
mov
or
pop
add
push
add
add
add
dec
add
add
add
insb
add
add
push
add
movsb
add
add
add
cmp
insb
add
add
inc
add
add
add
add
sub
pop
add
dec
add
out
pop
add
add
inc
add
add
add
add
insb
add
add
add
xchg
push
add
add
add
add
add
pop
add
add
add
add
add
insb
add
add
add
sub
add
add
insb
add
xlat
add
insb
add
xor
cmp
add
add
add
add
add
add
add
add
add
movsb
add
add
insb
add
inc
add
add
add
add
add
insb
add
add
insb
add
add
add
add
add
insb
add
add
and
xor
sub
insb
add
add
add
dec
add
insb
add
or
js
pop
add
add
add
add
add
add
add
add
jmp
add
cs
add
pop
add
add
add
add
add
add
jle
sbb
flds
and
dec
add
add
adc
push
pusha
add
add
add
add
add
add
sbb
insb
add
add
add
mov
add
add
add
sbb
sub
jno
roll
dec
add
jle
flds
cmp
pop
add
insb
add
add
inc
add
into
add
add
add
pop
add
add
add
insb
add
add
add
jbe
jle
movsb
add
add
jnp
sbb
movl
rolb
push
add
add
add
add
add
add
add
movl
rolb
inc
add
add
add
add
add
add
movl
insb
add
add
push
add
sub
insb
add
add
add
or
add
movl
insb
add
xor
roll
jbe
data16
pop
add
add
add
add
add
jnp
insb
add
jle
cmp
dec
add
add
add
add
jnp
inc
add
add
add
add
add
add
add
push
push
add
add
mov
roll
into
add
add
rolb
add
mov
test
push
add
sub
pop
add
add
jle
inc
add
add
adc
push
add
add
add
ljmp
add
test
testl
inc
add
add
add
rolb
add
mov
test
and
inc
add
add
add
add
inc
add
add
add
add
add
test
data16
test
inc
add
cmpsb
add
cs
add
add
add
pop
add
xor
loopne
insb
add
add
add
add
testl
flds
mov
dec
add
add
mov
add
sub
add
xchg
add
add
add
insb
add
add
add
add
add
add
add
sub
add
mov
or
cmp
insb
add
add
push
add
add
cmp
add
movl
roll
add
add
cmp
dec
add
movl
movl
jle
xchg
add
inc
mov
lods
inc
or
adc
mov
inc
gs
nop
jmp
enter
jns
and
inc
lahf
loope
icebp
sub
sbb
fdivrs
cmpb
add
xor
jmp
adc
pop
nop
cmp
ret
pop
or
push
rolb
and
inc
cld
mov
push
jae
enter
mov
sti
cmpsl
mov
xor
push
sub
sub
jl
int
es
push
out
das
mov
jecxz
jle
lods
sbb
int
push
dec
lds
jae
dec
lahf
enter
mov
js
xchg
lret
mov
xor
mov
fidivrs
jge
jl
xor
outsb
mov
outsb
fmuls
movsl
outsb
sahf
sbbl
sub
popf
sub
aaa
in
sub
in
fwait
cmp
inc
out
flds
jge
int3
movsb
bound
inc
in
xor
mov
orl
add
adc
sub
mov
cld
mov
sbb
dec
call
movsl
jl
add
xchg
pop
lahf
hlt
dec
jmp
scas
and
inc
pop
cwtl
fisttpl
xchg
jbe
das
mov
sub
popa
jge
iret
xchg
fistpll
dec
xchg
inc
sub
test
pop
test
jg
into
mov
rcll
inc
cmpsl
pop
jno
xchg
dec
movb
clc
shl
cmp
mov
icebp
inc
ss
lods
inc
push
ja
in
fcomps
movsl
shll
inc
pop
pushf
mov
xchg
sarl
dec
inc
mulb
mov
int
inc
push
mov
sub
jle
sbb
add
pop
sbb
cmp
cmc
or
lods
pusha
icebp
mov
push
dec
clc
cwtl
aam
orl
push
adc
jmp
xchg
cmovo
call
adc
sub
aad
adc
add
ljmp
push
enter
push
cmp
cltd
je
lahf
repz
lahf
je
int
dec
sbb
lcall
mov
push
and
push
push
mov
xor
fdivl
pop
add
and
fwait
lock
and
pop
ss
mov
je
inc
ss
addr16
mov
or
pop
lock
dec
sbb
jle
es
cld
cmp
and
es
and
xchg
es
pop
add
adc
enter
mov
mov
add
fwait
loop
lock
shl
fsubrs
cmc
xchg
push
in
icebp
loop
pop
cwtl
lds
or
mov
scas
jl
hlt
hlt
cmp
cmp
xchg
cmc
cld
jno
stc
mov
cmp
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
mov
testl
pop
add
addr16
ja
add
pop
in
daa
int
int
cmp
testl
pop
mov
ja
pop
cwtl
jae
daa
fnsave
int
cmp
xor
mov
dec
inc
mov
push
jecxz
mov
inc
mov
mov
rolb
je
push
push
push
je
cwtl
bound
push
or
cmp
jle
xlat
insl
push
mov
bound
cmpsb
gs
in
out
ja
wrmsr
out
roll
test
cwtl
fwait
mov
add
add
or
insl
cmpsb
push
mov
push
inc
add
ja
mov
mov
adc
int
std
sub
sbb
aaa
add
adc
jecxz
decl
inc
pop
mov
hlt
scas
pop
std
ja
inc
sub
sbb
outsl
out
xlat
dec
les
call
pop
mov
hlt
cmp
fwait
or
cmpsl
pop
cmovge
popf
imul
mov
mov
dec
jmp
cmp
cmp
int
mov
into
push
std
outsb
mov
push
scas
jo
push
pop
inc
mov
imulb
lret
or
arpl
push
filds
cli
sbb
je
jb
push
mov
in
xchg
js
jne
dec
xchg
insl
cmpsl
pop
mov
inc
mov
ja
pop
std
pop
in
daa
fnsave
int
cmp
testl
inc
mov
ja
pop
std
pop
in
daa
fnsave
int
cmp
test
lret
mov
in
adc
ficoml
pop
shrl
int3
adc
xchg
xchg
arpl
fstps
in
clc
nop
mov
inc
or
or
ja
stc
adc
mov
xor
inc
scas
jp
mov
push
cmc
adc
dec
jp
test
insl
outsb
fs
dec
cmp
pushf
call
jne
divb
and
inc
outsl
xchg
int
mov
mov
call
push
push
hlt
adc
addr16
push
test
pop
lahf
or
or
sbb
aaa
push
stc
popf
pop
addr16
iret
repnz
ret
cmpsl
pop
das
es
hlt
and
pop
jns
sbb
outsl
lahf
and
add
dec
jge
cmp
jbe
xor
ret
jbe
mov
pop
jge
ljmp
and
push
stos
lahf
cmpsl
mov
popf
jecxz
cmpsb
pop
in
es
ljmp
sbb
sbb
ret
jne
stc
xchg
fs
nop
xchg
cmc
sbb
adc
pushf
sbb
cs
xor
push
push
frstor
inc
lret
in
jmp
xchg
fcos
mov
or
movsb
mov
push
lds
ja
ljmp
sbb
push
test
popa
inc
psubw
mov
outsb
dec
push
jl
jle
das
sbb
jo
rcr
cld
sbb
inc
aam
jo
mov
cltd
add
jecxz
je
cmp
mov
mov
jnp
mov
rolb
iret
outsb
mov
scas
sbb
or
out
sub
lods
inc
jae
ucomiss
jge
inc
cmp
adc
movsb
jecxz
scas
mov
xor
icebp
cli
and
xor
icebp
ss
int
add
or
aaa
add
mov
and
and
xor
aad
cld
in
sub
rorl
sub
mov
and
jmp
mov
jmp
mov
xor
sbb
pop
lods
and
xchg
mov
sbb
ss
out
aaa
cmp
dec
rorb
fnsave
or
ljmp
insb
shr
ds
push
es
out
xor
rclb
cs
cs
mov
aas
hlt
mov
adc
fs
cmp
dec
dec
lock
pop
sub
fwait
rcr
filds
inc
imul
adc
pusha
imul
ss
or
and
add
pushf
xor
out
out
jp
stos
add
jle
and
loope
sbb
cltd
cwtl
into
aas
pop
leave
loop
xor
rolb
jp
add
add
lea
orb
je
add
fldenv
scas
aam
mov
ja
pop
lahf
jo
pop
adc
or
mov
xor
adc
arpl
sbb
mov
js
dec
mov
push
pop
xchg
aam
pop
lahf
add
add
dec
js
in
je
in
leave
pop
push
fstpl
xor
dec
add
mov
or
adc
clc
cmp
aam
push
sbb
lret
icebp
add
cld
movsb
enter
or
push
lcall
inc
out
hlt
out
cmp
push
adc
jmp
mov
sub
stos
lret
sbb
xchg
xchg
sub
fstl
cmp
mov
scas
addr16
mov
xchg
ljmp
cli
xchg
ret
test
push
push
add
int
in
test
mov
das
sbb
ds
jo
xlat
push
jle
xchg
bound
aad
insb
add
add
mov
fwait
ljmp
out
mov
xchg
cmp
pop
mov
cmp
push
jl
mov
roll
mov
aam
popa
mov
mov
fdivrl
shl
mov
push
push
out
lods
outsl
adc
cli
dec
lret
rolb
repnz
scas
mov
add
jne
lods
add
cmp
sub
mov
shlb
les
cli
insb
inc
push
fbstp
pushf
fistpll
xorb
xor
cli
jmp
pusha
pop
dec
mov
aad
dec
in
fs
inc
push
adc
lods
dec
pop
scas
xchg
lahf
push
in
adc
out
mov
loope
popa
out
xchg
loopne
jl
js
fstpl
sbb
retw
add
jg
push
insl
adc
stc
inc
pop
mov
cmp
lock
loopne
jg
jp
inc
pop
lcall
sub
mov
icebp
sti
inc
cmp
jb
hlt
mov
cmpsb
sbb
pop
aad
sbb
pop
xchg
in
and
mov
cmp
pushl
xchg
mov
push
shll
mov
mov
js
std
in
cmp
add
xchg
dec
ret
pop
dec
call
insb
jne
lock
cmpb
push
xchg
and
outsb
ror
jne
push
mov
out
xor
mov
dec
pop
test
ja
push
sub
jno
push
sbb
inc
jnp
call
sub
mov
push
add
inc
aas
in
out
arpl
sbb
cmpsl
movsl
je
and
mov
test
xchg
clc
adc
xchg
mov
scas
das
xchg
test
mov
jle
cmp
sub
fucom
jnp
inc
mul
enter
adc
mov
or
fcom
inc
and
ficoms
incl
push
enter
mov
inc
jecxz
into
ror
insb
pushf
pop
stc
mov
xchg
sbb
add
cmpsl
movb
movsb
in
xor
dec
lea
mov
mov
popl
mov
mov
movb
call
jp
testb
push
sub
mov
call
int
pop
pop
push
push
lret
gs
mov
add
adc
dec
xchg
mov
add
pushf
sub
jnp
ret
xor
out
mov
jae
xchg
fdivrl
xchg
xchg
mov
mov
sbb
sub
xchg
push
test
mov
lret
jne
fisubl
int3
sub
adc
repnz
adc
dec
outsb
movsb
or
stos
fbstp
out
add
lds
lahf
mov
pop
inc
adc
sbb
shll
mov
push
xchg
imul
xchg
xchg
int3
xor
loopne
xchg
pop
outsl
test
cmp
inc
sbb
ja
in
jmp
add
jns
vmulps
dec
adc
mov
fadds
js
das
fs
test
cmc
inc
mov
inc
scas
int
popf
leave
sub
and
pop
push
jno
mov
jo
xchg
lret
lods
out
inc
dec
stc
fdiv
push
cmpsb
sbb
pop
adc
scas
xchg
fisubs
jne
add
popf
rcl
cmpsl
popf
mov
lahf
icebp
notl
or
push
xchg
add
xchg
lock
jp
cwtl
xor
in
lds
cmpsl
pop
push
xchg
and
push
cmpsw
sbb
aad
mov
lods
mov
imul
mov
testb
iret
mov
lret
pop
loopne
test
enter
jecxz
incb
cmp
jge
cs
mov
dec
xchg
aas
repz
fwait
imul
popf
movsb
cli
pop
mov
cli
mov
js
inc
mul
cmp
repnz
out
mov
fwait
mov
je
clc
inc
mov
inc
xorb
call
dec
jl
lds
mov
cmp
scas
lock
adc
popa
mov
repz
repz
push
arpl
out
cli
sub
sbb
mov
and
xor
jg
out
call
push
xorl
cmpsb
push
dec
sbb
movl
fldcw
xchg
das
mov
daa
iret
leave
bound
add
mov
add
push
jno
inc
jle
vmptrst
aaa
movsl
roll
in
aas
mov
xchg
pop
aas
aaa
aad
in
lret
stc
repnz
and
mov
pushf
dec
dec
adc
mov
or
mov
hlt
sbb
sbb
add
mov
ljmp
int3
outsl
inc
push
jp
lcall
aam
jbe
mov
in
fcmovbe
int3
cmp
sub
out
rorl
push
or
xor
pusha
arpl
cmp
adc
stos
cmc
inc
mov
lcall
stos
repz
into
sub
out
jb
cmp
int
mov
sbb
outsl
hlt
lea
pushf
pushf
mov
adc
push
inc
adc
mov
scas
xchg
xchg
xor
jmp
rol
stos
stos
push
push
xorb
xchg
mov
es
inc
sub
pop
inc
sti
cmp
fisttps
inc
push
mov
jecxz
xor
jle
adc
mov
clc
cmc
push
int3
jae
sub
push
daa
js
jle
cwtl
shl
inc
int3
rcrb
cmp
mov
rcr
inc
mov
inc
lcall
push
push
jns
gs
jmp
xor
mov
dec
daa
dec
ljmp
jecxz
sarb
pop
cmp
je
push
cmpsb
sbb
mov
mov
rcrl
movsl
push
mov
imul
cmp
fiaddl
push
push
adc
mov
pop
and
pusha
pop
add
cld
ficomps
lret
out
ljmp
and
std
pop
movsl
into
cli
test
loopne
in
mov
pusha
imul
std
xchg
dec
das
pop
imul
and
add
mov
fbld
nop
cwtl
shrb
inc
lock
fdiv
mov
and
push
inc
cmpsl
icebp
sub
add
insb
test
add
mov
loope
xchg
sub
imul
mov
ret
outsb
lret
repnz
xchg
push
add
push
hlt
xchg
in
fs
pop
dec
cmp
mov
fsts
mov
cli
mov
int3
lret
stos
fstpt
rclb
mov
inc
or
sti
aam
pop
mov
cmp
sub
addr16
push
jns
fstl
ret
xchg
jg
xchg
rorb
adc
pusha
adc
lods
leave
mov
ss
dec
add
mov
lods
dec
xchg
pop
jp
push
call
sbb
stos
clc
int3
dec
pop
sbb
dec
jle
or
out
rcrb
mov
orb
mov
and
popa
xchg
inc
sbb
aaa
or
inc
dec
push
xchg
lods
jle
sbb
lock
jp
dec
test
mov
mov
sub
lock
xor
xchg
xchg
lods
xchg
lock
adc
data16
dec
rep
lods
jne
mov
sbb
addr16
loopne
adc
repnz
cld
fidivs
repz
xchg
pusha
ror
push
jb
stc
je
sub
fadds
jle
xor
ret
movhps
test
test
arpl
add
xchg
out
addr16
lret
mov
inc
push
mov
push
test
outsl
xchg
ds
cmpsl
sti
adc
fstpl
mov
test
sbb
mov
mov
imul
sub
and
and
dec
xlat
sub
push
leave
sbb
outsb
aas
mov
movb
into
aas
inc
cwtl
in
in
stos
adc
loopne
sub
sahf
aam
insl
fcomp
push
pop
sti
popa
dec
rolb
fsts
outsl
or
sub
inc
pop
hlt
les
insb
aam
push
dec
xchg
sbb
inc
gs
adc
and
icebp
loope
inc
lar
pusha
xchg
pop
fldl
mov
jb
pushf
adc
lock
lret
mov
mov
pop
shrb
adc
mov
adc
mov
aad
sub
hlt
xorl
add
jp
cmp
jp
movsb
lea
in
cmc
js
cmp
adc
dec
cltd
insb
or
pop
and
repnz
add
adc
mov
insb
imul
cli
xor
stos
xchg
in
rcrl
sub
cmp
and
test
shr
pop
movsl
es
mul
adc
sub
dec
imul
inc
out
rcrl
dec
pusha
xor
pop
mov
push
test
xchg
inc
mov
inc
inc
jl
pop
lea
xor
popa
and
test
andl
in
repnz
push
iret
int3
add
fwait
cltd
push
add
clc
mov
xor
inc
lahf
adcl
stos
mov
inc
test
cmp
inc
pop
push
in
jnp
push
dec
aaa
es
nop
mull
pop
and
pop
jmp
leave
add
push
push
dec
data16
cmpl
mov
iret
lds
sub
arpl
insb
dec
outsb
add
mov
rclb
addb
inc
mov
bound
subb
je
rorl
in
mov
pop
pop
in
cs
add
out
mov
dec
pop
js
mov
jp
outsb
mov
xlat
andb
cmp
shrb
daa
and
mov
std
dec
mov
int
stos
xchg
insl
xchg
shlb
test
andb
andl
xchg
add
test
cmp
mov
je
imul
dec
or
pop
idiv
popa
jb
mov
cltd
fcom
ljmp
pop
into
rcl
sbb
jb
pop
mov
sub
sub
test
syscall
fs
adc
out
repz
jge
mov
mov
sbbl
leave
xlat
cli
out
lea
mov
jns
pop
test
dec
sbb
out
rol
fdivrl
pop
out
sarl
jo
add
jp
jns
dec
cwtl
dec
fnstenv
into
clc
mov
lahf
ja
xor
mov
dec
pushf
lods
lcall
mov
lock
mov
fwait
mov
push
jmp
add
mov
jge
fiadds
rcll
dec
sbb
scas
cltd
sbb
scas
lods
icebp
ljmp
fld
arpl
aas
in
sbb
lret
es
pop
and
lahf
out
pop
mov
leave
inc
call
pusha
inc
mov
mov
aas
inc
mov
jecxz
ret
lods
pop
jl
fdivs
inc
popa
mov
in
daa
pop
push
lds
popa
adc
xchg
fldl
sbb
or
popf
sub
xchg
mulb
in
xchg
repnz
jge
rolb
sbb
xchg
in
xlat
dec
aam
movsl
push
adc
jle
mov
sti
insb
pop
aaa
js
or
jg
sahf
mov
jne
movsl
mov
sbb
inc
gs
pusha
pop
mov
lcall
movsl
scas
cmp
cmp
mov
sti
sbb
pop
mov
add
and
imul
lret
push
pop
pusha
push
data16
dec
push
das
leave
out
pusha
insl
pop
lret
mov
xor
aaa
sbb
in
ret
or
outsb
loope
ljmp
imul
dec
pop
mov
popa
out
xchg
jns
lds
fsubrs
jb
dec
dec
mov
jmp
outsl
out
sub
add
pop
and
sub
jle
sub
dec
pusha
out
in
pushf
sahf
sahf
enter
loope
hlt
sbb
icebp
cwtl
out
shrb
out
loopne
push
cmp
mov
jne
or
cwtl
jg
mov
mov
cltd
dec
mov
faddl
scas
jb
imul
int3
mov
movsl
fs
push
leave
pop
mov
and
outsb
ret
loopne
cmpb
sbb
or
cltd
dec
inc
push
fld
stos
sub
addb
push
dec
lock
lahf
inc
mov
movsb
add
mov
add
mov
std
mov
lods
sahf
mov
mov
in
mov
fistl
adc
pushf
stos
clc
mov
xchg
jo
lcall
sub
xchg
in
jno
adc
loop
imul
jg
arpl
out
lret
sub
sub
test
and
cmp
rorl
adc
dec
jmp
inc
and
mov
sbb
xchg
das
xor
cltd
lcall
insl
data16
inc
stos
sarb
mov
fstpl
mov
insl
jmp
inc
sub
push
fnstsw
cmp
jo
dec
push
or
xchg
out
scas
sbb
arpl
scas
push
push
insb
adc
popf
lret
jecxz
xchg
jo
ss
jae
test
fwait
pop
loopne
popfw
std
and
inc
cltd
and
int
mov
xor
pop
sub
sub
out
pop
mov
int3
fs
test
sbb
fbstp
push
pop
sti
xlat
or
in
jbe
movsl
pop
stc
rcr
adcl
daa
lret
sar
fisttps
icebp
or
idivb
repz
sbb
inc
push
popa
mov
sahf
mov
inc
fcoms
test
push
mov
jmp
jp
insl
lock
inc
mov
jl
sub
int
adc
iret
dec
mov
ds
mulb
ret
ja
pop
sbb
inc
clc
stos
push
add
mov
in
push
fsubrs
cwtl
push
push
mov
mov
imul
mov
in
cld
inc
popa
out
aam
cmpsl
pop
negl
pop
add
xor
icebp
out
jecxz
out
jb
xchg
fisubrl
daa
cmpsb
insb
mov
decb
shrb
shlb
add
jae
jle
fstps
push
aad
insl
scas
fildl
aam
scas
adc
push
adc
jns
push
aaa
das
adc
repz
addl
mov
ficoms
in
mov
outsl
dec
xor
push
sbb
sti
dec
addl
rcrl
shl
xchg
subb
cmp
in
jmp
mov
loope
jecxz
dec
in
xlat
stos
adc
mov
push
mov
fnstsw
or
stc
int
std
mov
pushw
scas
jecxz
xchg
orl
push
push
push
inc
popa
adc
fisubrs
test
aam
movsl
in
cmp
pop
push
sub
jno
dec
pop
div
fucomi
int
dec
shlb
sbb
test
mov
xchg
sub
jbe
inc
mov
dec
sbb
rorl
scas
mov
pushf
bound
loop
test
dec
add
imul
push
fldenv
cs
dec
cmpsl
xor
jb
fs
insl
out
xor
dec
or
pusha
je
movsb
inc
ret
imul
xor
insb
in
outsb
gs
arpl
jnp
out
cmp
inc
jmp
sub
and
sub
or
jno
pushf
dec
xor
xchg
daa
aaa
jns
mov
and
xor
mov
sbb
mov
addr16
jl
arpl
mov
test
sub
add
sarl
pop
mov
out
out
shrl
push
push
cmpl
lods
clc
mov
or
mov
mov
mov
leave
jmp
jne
push
push
mov
shll
dec
ret
sub
mov
jns
push
fstpt
das
mov
pop
sbb
xor
mov
or
xor
jne
jmp
mov
cmp
sub
pop
adc
into
scas
scas
xor
icebp
cmp
hlt
cmp
popa
inc
mov
dec
mov
lahf
out
in
mov
mov
test
mov
sbb
insb
pop
sbb
adc
popa
imul
mov
mov
jecxz
mov
inc
mov
mov
jne
in
xchg
test
and
sub
pop
test
popf
xchg
stos
fldcw
lods
push
daa
adc
push
sahf
aaa
mov
mov
or
xchg
pusha
iret
cmpsl
jl
jns
sti
in
and
fsubrs
mov
ss
inc
push
mov
adc
arpl
fstp
push
test
add
nop
test
cmpl
push
lret
subb
rolb
jge
aad
lods
pop
sub
xchg
push
scas
out
dec
and
xchg
jne
cmp
jmp
xchg
enter
fiaddl
cmp
mull
dec
fiaddl
dec
les
sub
or
push
fcoml
dec
adc
sahf
pop
aam
sbb
shl
dec
fisttpll
add
xchg
mov
cmc
popa
cwtl
dec
rolb
lock
aad
or
push
and
dec
mov
adc
icebp
movsl
stc
enter
fwait
push
pop
mov
ljmp
bound
rcr
aaa
je
test
shr
aam
inc
mov
adc
push
cmp
push
mov
cmc
mov
dec
cmp
or
bound
xchg
mov
and
jae
call
mov
mov
iret
inc
dec
shl
adc
sub
dec
or
fsubrs
sbb
mov
lret
add
fnstcw
xlat
pop
cwtl
fs
xchg
or
push
fmuls
dec
sbb
in
icebp
sahf
shrb
stos
inc
sbb
cmp
bound
push
mov
sub
dec
and
insl
nop
and
add
cmpsl
pop
movsb
scas
pop
stos
lods
aaa
jl
fimull
inc
xchg
stos
sti
rolb
cmp
cs
cmc
mov
adc
sbb
mov
int3
lret
repnz
mov
pop
int
add
jns
xor
ret
pushf
sub
shr
daa
adc
lods
cs
dec
mov
mov
jge
insl
cmpsl
pop
mov
inc
mov
ja
pop
std
pop
in
daa
fnsave
int
cmp
testl
inc
mov
ja
pop
std
pop
in
daa
fnsave
int
cmp
testl
inc
mov
jae
pop
std
push
in
and
pop
int
cmp
fisttps
cmpsl
pop
aaa
lea
test
int
ja
jo
lahf
adc
and
xor
mov
popl
iret
cmpb
das
das
push
pop
movd
ljmp
scas
scas
sahf
lahf
out
out
iret
iret
aas
aas
das
dec
jle
movq
outsl
pop
sbb
scas
scas
lahf
lahf
out
out
iret
iret
aas
xchg
das
das
jle
push
sbb
push
add
and
mov
je
iret
or
add
sub
adc
mov
sti
in
push
les
ljmp
adc
mov
rolb
addb
movzwl
cmp
scas
mov
sti
jb
ds
lahf
mov
rorb
lock
fsubl
scas
sub
push
arpl
aas
push
iret
xor
in
inc
push
loopne
pop
lahf
adc
inc
ret
push
push
int3
sbb
cli
iret
dec
push
ret
pop
js
loopne
iret
sub
pop
xchg
fisubl
scas
push
adc
mov
bound
stos
or
rorb
push
orb
push
test
dec
dec
dec
loopne
scas
scas
lahf
lahf
out
out
iret
iret
aas
aas
das
das
pop
pop
movq
outsl
pop
pop
dec
es
shr
scas
repz
mov
xchg
stos
lahf
push
pop
popf
pop
jo
imul
and
pop
cmp
loopne
in
lods
jmp
std
lcall
iret
insl
inc
inc
pop
addr16
pusha
xor
sbb
pop
leave
testb
mov
iret
aas
aas
das
das
pop
pop
movq
outsl
pop
pop
dec
dec
mov
lahf
out
out
iret
iret
aas
aas
das
das
pop
pop
movq
outsl
pop
pop
dec
dec
mov
sub
fwait
push
data16
data16
js
daa
ficoms
fildl
pop
stos
popf
dec
inc
add
xchg
inc
mov
call
pusha
adc
daa
fsubs
leave
es
inc
mov
sarw
xor
jg
mov
xor
in
cmp
xchg
sbb
add
sub
dec
mov
enter
out
in
ljmp
repnz
mov
fsubl
ret
xor
xor
invd
das
sub
test
call
jnp
cmp
pop
andps
js
dec
cli
call
iret
add
out
mov
cltd
mov
dec
add
xchg
ror
js
sbb
sbb
lods
js
shrb
imul
cld
dec
inc
pop
pop
scas
push
cmpsl
sbb
sub
mov
aas
inc
addl
mov
loopne
pushf
pop
fildll
cmp
cmp
add
or
pop
leave
cmp
push
loopne
pop
sbb
out
stos
orl
test
xchg
or
cmc
clc
nop
jmp
pop
xor
or
pop
adc
out
int3
and
cmp
je
push
pop
insl
jg
std
dec
adc
popf
stos
inc
or
es
dec
std
fdivr
cmp
mov
cmp
sbb
adc
ret
test
push
lds
popa
out
ret
in
adc
dec
jmp
xchg
jmp
je
mov
test
adc
cld
cmpb
dec
mov
cld
mov
fdivrs
pop
bound
xchg
sbb
and
cli
or
in
jae
stos
inc
pushf
inc
sub
dec
or
or
sub
daa
xchg
mov
cwtl
dec
ret
gs
mov
push
mov
mov
inc
mov
xchg
xor
call
test
push
mov
push
lcall
jno
pop
inc
out
inc
cltd
out
or
lods
xor
or
mov
mov
into
ret
scas
dec
or
not
sbb
xchg
addr16
push
into
sbb
mov
xchg
xchg
cmp
imul
sub
inc
cs
pop
pusha
arpl
jecxz
dec
cli
mov
dec
lahf
push
xchg
pop
hlt
sbb
inc
popf
nop
cmp
push
mov
fsubrl
in
in
mov
ja
pop
lock
lds
and
push
or
rolb
jae
cwtl
add
or
call
sbb
xchg
ss
or
sub
xor
ja
lcall
push
jl
adc
daa
outsb
push
fstl
insl
in
mov
sub
movsb
xor
js
pop
dec
xchg
add
or
or
push
sbb
mov
andnps
icebp
imul
xor
lock
hlt
in
repz
shlb
out
sub
fs
rol
or
mov
out
push
stos
std
pop
jnp
adc
mov
dec
push
mov
jb
lock
pop
movb
arpl
out
icebp
je
jnp
sbb
cwtl
pop
mov
xchg
cwtl
test
arpl
inc
loopne
lds
cmp
pop
pop
jno
je
fcom
int3
sbb
pushf
rolb
push
cmp
add
and
push
mov
mov
bound
pop
test
jp
dec
pop
mov
adc
add
mov
xchg
push
jg
mov
es
out
sbb
aas
sti
addl
mov
add
sbb
xor
shlb
xchg
jno
sub
mov
xor
pop
fnsave
adc
out
xchg
in
dec
pop
adc
stos
cmc
sbb
or
add
sbb
cld
sbb
js
imul
dec
shr
xor
pop
adc
mov
push
xor
or
out
adc
mov
inc
add
add
popa
mov
pop
popf
jmp
out
pop
iret
pop
jecxz
jns
leave
xlat
aaa
pop
and
sarl
scas
stos
or
test
dec
outsl
xor
hlt
andb
and
dec
xchg
inc
mov
jl
aad
je
xor
sub
jmp
test
pop
or
xor
sbb
and
cmp
adc
fnstcw
cli
stc
in
cs
mov
push
popa
popa
pop
ss
inc
xor
xor
mov
pop
jmp
lods
sbb
insl
int
and
mov
loopne
mov
mov
sbb
jb
jp
pop
rcr
dec
jmp
xchg
mov
hlt
dec
imul
enter
fldl
pop
jge
insb
out
ss
mov
ret
push
xchg
mov
pop
repnz
jmp
mov
sahf
mov
xor
sti
inc
pop
test
fwait
mov
imul
pop
fisubrl
popf
mov
lcall
and
sub
mov
dec
xor
sub
mov
mov
cmp
sbb
dec
xor
out
out
xchg
sub
inc
inc
lods
les
dec
mov
repnz
inc
pop
stc
dec
in
adc
mov
and
push
fisubrs
int3
lahf
js
mov
pusha
xchg
int
cmp
jne
cmpsl
ja
or
xor
addl
add
out
adc
push
xlat
addb
arpl
shll
cmc
mov
jb
jne
std
pop
push
xor
dec
jecxz
into
lea
inc
sub
mov
mov
add
into
fidivl
test
pop
adc
insb
andl
xchg
inc
mov
fwait
jecxz
cmpl
cld
movsl
adc
mov
cwtl
mov
push
and
dec
lods
lcall
inc
out
cmpsb
pop
sbb
cs
enter
das
ss
xor
jmp
sarb
mov
add
sarb
repnz
cwtl
call
or
scas
movsl
sbb
inc
jp
cmpsb
movsl
orl
mov
push
shll
out
scas
inc
sub
mov
add
dec
cmp
stos
vmovlps
subb
jb
adc
mov
mov
push
mov
das
mov
mov
dec
push
aaa
mov
popf
xor
popa
push
pop
push
sbb
push
dec
pop
push
sub
or
inc
sub
std
sarb
inc
jo
inc
push
pop
push
mov
pop
sub
xor
fmull
addl
repz
inc
stos
mov
sahf
fbstp
daa
mov
mov
int3
pushf
sbb
push
scas
pop
adc
rcll
sti
sub
jp
xor
sbb
test
pop
mov
fs
aam
js
insl
ret
cmpsb
mov
insb
or
add
mov
mov
lods
dec
xor
jae
and
push
xlat
repz
lods
mov
add
push
push
ret
mov
sbb
jmp
test
push
cmpsl
pushf
fdiv
mov
mov
add
mov
pop
lods
mov
inc
shl
scas
out
fistps
pop
pcmpgtd
xchg
cwtl
mov
cmp
mov
xor
or
stos
xchg
lods
pop
push
push
or
fsts
movsl
imul
cmp
add
fists
add
mov
bound
push
jne
call
jbe
sub
bound
fwait
cmp
roll
dec
sysenter
mov
call
not
and
mov
repz
sbb
add
sbb
xchg
xchg
xor
add
cmc
or
rol
dec
arpl
ror
cwtl
sub
sub
cmp
mov
mov
dec
sbb
pop
mov
push
and
in
lock
cmp
adc
divb
sbb
jbe
or
mov
out
jne
aad
sti
fldl
cmpl
shl
rcll
insb
testl
xor
fisttpl
in
clc
push
frstor
mov
scas
sti
and
cmc
test
add
in
mov
jbe
push
push
stos
push
nop
xlat
jge
cmp
int
loopne
sbb
mov
notl
sti
out
adc
or
push
jo
repnz
enter
clc
jae
mov
fwait
or
pop
xchg
stos
adc
inc
test
out
stos
or
jg
jbe
xor
jbe
xchg
push
rcrb
sbb
outsb
sti
jae
scas
jne
lods
jmp
dec
das
inc
div
xor
shrb
fwait
xchg
push
inc
inc
push
jge
lods
or
gs
add
fadd
add
popa
sub
scas
ret
lret
lahf
cltd
mov
aam
imul
jge
cmp
int3
pop
jno
lds
ljmp
cmpl
shlb
test
addr16
lcall
adc
add
pop
mov
dec
insl
mov
sbb
sub
xor
inc
mov
icebp
jle
xor
pop
mov
and
xchg
add
cmp
sub
sub
mov
fs
push
adc
stos
imul
xor
repnz
pusha
adc
ficoml
pop
push
mov
movl
mov
xchg
gs
out
xor
cvtps2pd
sahf
arpl
clc
inc
xlat
cmpsb
adc
inc
sbb
inc
fs
repz
mov
pop
fidivs
mov
mov
lret
mov
inc
mov
mov
cmc
jmp
mov
fcmovnbe
xchg
mov
jmp
into
mov
cmp
mov
je
mov
add
jecxz
and
xchg
add
xchg
les
cmc
inc
jl
sti
fists
and
sbbb
xchg
inc
dec
fidivrl
or
in
push
add
daa
jecxz
mov
test
scas
adc
shrb
adc
mov
adc
ljmp
cmp
pusha
push
inc
je
rcrl
je
dec
test
cmp
ret
stc
and
sub
cmp
lret
lock
fs
ret
out
les
out
pop
out
rorb
movsl
inc
shll
ss
inc
xor
gs
inc
shl
sub
ficompl
adc
pop
stc
cmp
add
mov
inc
jmp
stos
or
stos
cmp
inc
push
je
hlt
mov
push
loop
enter
sbb
add
pushf
shll
test
outsb
in
movsl
sti
lcall
pop
and
and
pop
insb
addl
imul
sub
fsubs
loop
xor
cwtl
cmpsl
xchg
lods
inc
repz
into
mov
fcmovbe
scas
subb
mov
scas
inc
js
punpckhdq
lcall
popf
repnz
xchg
call
xchg
loop
pop
pusha
jae
je
cmpsb
outsl
bound
fisubrl
push
out
xor
data16
stc
push
jo
xor
imull
pop
jne
push
scas
dec
out
ss
cs
test
xchg
inc
or
cld
pop
xor
fwait
jns
mov
dec
lea
xchg
mov
push
push
js
mov
xor
test
xchg
and
pop
adc
sbb
out
jecxz
pop
out
adcl
es
or
pop
sbb
mov
xchg
test
dec
hlt
out
xor
fisubs
es
adcb
lcall
pop
pop
fs
jmp
stos
pop
push
ror
adc
xor
inc
jg
jae
sbb
xchg
scas
push
inc
push
popa
jns
jbe,pt
xor
dec
lock
adc
enter
add
js
dec
jle
push
insl
jnp
std
aaa
inc
rorb
subl
xchg
sbb
mull
sbb
push
ds
test
dec
jns
sub
and
or
movsl
cmp
jo
mov
sub
fstpl
mov
cmp
daa
pop
jle
jp
les
mov
cmc
xor
adcl
add
outsl
daa
test
inc
movsl
test
gs
imul
xor
stos
pushf
inc
fldenv
pop
enter
ljmp
push
cltd
xchg
aad
shrb
mov
mov
les
idivl
sub
xor
ja
xor
inc
xchg
imul
inc
movsb
ljmp
sub
repnz
add
filds
repnz
inc
adc
mov
movsb
or
and
int
mov
add
dec
adc
aam
jmp
bound
jnp
xor
aas
in
int3
les
stos
mov
popa
push
jbe
mov
mov
dec
cs
jmp
xlat
sarl
xor
mov
mov
jns
int3
jg
ret
sub
fstpt
mov
add
mov
push
dec
sar
mov
sub
sub
mov
xchg
data16
xor
jmp
lahf
pop
out
cltd
pop
cmp
in
xchg
mov
mov
sub
mov
xchg
ljmp
xchg
lods
pop
jl
pop
or
push
push
cmp
lcall
fmuls
aas
sub
or
enter
cmpsb
fcomps
mov
xor
xor
test
jecxz
adc
xchg
push
or
mov
mov
sbb
test
loop
jl
mov
pop
inc
mov
xor
cmpsb
out
clc
imul
cli
mov
inc
in
sub
lret
faddl
insb
mov
push
or
mov
mov
icebp
loopne
data16
or
hlt
loopne
jge
fdivrs
notb
cmp
and
fdivrs
leave
hlt
adc
rcr
cmp
adc
call
sub
daa
cld
mov
ret
jle
xor
mov
out
mov
or
pop
ret
or
fcoms
iret
lea
cmp
mov
xor
pushf
pop
push
push
cmpb
pop
push
sbb
mov
dec
and
jnp
inc
sub
cmp
movsb
sbb
push
pop
lea
test
and
jl
inc
orl
mov
out
add
xchg
jbe
xor
and
cmp
shrb
pop
icebp
jbe
push
call
lret
adc
dec
push
adc
xchg
push
push
cmp
push
jno
test
mov
loope
cmp
xchg
adc
sub
test
push
fsubs
adc
repz
and
xchg
jl
push
iret
dec
cmp
inc
mov
adc
mulb
mov
mov
lods
pop
ret
or
sti
xchg
pop
mov
pop
sbb
jmp
data16
cmp
or
inc
out
outsb
xchg
lods
and
xor
jno
out
xor
push
subl
pop
adc
pop
pop
pusha
adc
pop
xor
adc
cmpsb
dec
cwtl
sbb
scas
int
jb
or
push
sti
lretw
bound
jle
insl
jne
pop
test
test
push
pushf
fimuls
adc
cmp
mov
shrb
xchg
push
rcrb
inc
add
dec
mov
sbb
adc
fisubrl
cmp
mov
aaa
int
push
movsl
add
adc
nop
lcall
sub
cwtl
sbb
cmp
push
stos
inc
hlt
pop
pop
xchg
xor
sarb
insl
adcl
sti
sahf
sub
stc
aas
dec
sub
mov
xor
aas
fldl
daa
ljmp
jmp
stos
mov
mov
stos
adc
data16
pop
mov
outsb
xor
jb
shlb
adc
cli
pop
clc
hlt
imul
pop
or
adc
ds
gs
adc
leave
sahf
jnp
mov
pop
mov
mov
out
xchg
sahf
cmpsl
les
adc
loopne
fildl
aad
mov
mov
clc
addr16
aam
push
add
pop
sbb
aaa
xchg
jl
in
xchg
nop
xor
jne
shll
sahf
pusha
arpl
push
pop
neg
cltd
rcrb
ljmp
notl
aad
or
ror
adc
gs
and
and
mov
sbb
xor
lret
xchg
mov
aas
test
pop
cmp
xchg
inc
mov
test
lods
aas
mov
inc
jns
out
rorl
scas
pushf
lcall
cmc
icebp
out
fdivp
and
ja
jp
jno
xchg
enter
jmp
inc
xchg
pusha
add
sbb
adc
sarb
push
loop
stos
add
mov
insb
add
cmc
mov
push
in
test
sub
test
mov
fwait
stc
adc
fisttpl
sub
jmp
lds
jmp
imul
jnp
sbb
adc
jbe
les
dec
mov
and
xchg
xor
adc
mov
cmc
cmc
mov
insb
mov
and
out
or
aaa
sub
mov
hlt
and
push
mov
mov
pop
add
push
xor
pop
cwtl
jno
inc
mov
sarb
cmp
das
cmc
cmp
sub
or
lods
and
and
leave
movsbl
sub
sahf
sbbl
sti
shlb
pop
cs
loopne
jecxz
mov
roll
sub
divl
cmp
and
mov
add
hlt
inc
mov
repz
rcr
cmp
pop
sahf
enter
mov
int3
scas
mov
mov
loope
std
int
incb
inc
push
sbb
mov
mov
fcmovne
clc
mov
mov
cli
and
test
movsb
xor
and
mov
bound
lahf
cmp
mov
in
sub
jne
mov
sub
xchg
jne
or
popa
jl
or
int3
outsb
jno
mov
ret
pop
mov
xor
lods
repz
inc
fs
testl
cmp
mov
in
jecxz
int3
mov
aam
pop
popf
mov
fcomip
cmp
into
js
mov
fidivrs
int3
imul
pop
cmp
jae
dec
cmpsl
mov
sub
in
xor
lret
cmp
sub
inc
popf
cmpsl
cltd
mov
xchg
rcr
sarb
shrb
das
lds
lods
loop
leave
mov
adc
adc
movsl
daa
adc
pop
mov
mov
test
cmpsb
jle
adc
and
pop
xor
add
aad
push
jbe
lods
out
dec
mov
jbe
jge
fcom
dec
xchg
push
scas
mov
call
cwtl
or
iret
call
repnz
sbbb
and
inc
xor
arpl
int
mov
faddp
lret
repnz
add
jl
rclb
cmpsl
jns
ret
loope
cmp
dec
xchg
mov
push
xlat
out
aaa
push
je
movsb
or
adc
ret
cmp
je
hlt
push
loope
dec
mov
aad
fistpl
aad
sbb
inc
or
out
xchg
in
sub
xchg
outsb
or
dec
imul
mov
es
in
sti
push
adc
out
mov
xor
or
add
pop
and
pop
aam
cmp
movsb
or
sbb
test
fildll
jb
pop
fdivl
mov
xchg
lcall
xchg
cmpsb
push
shrb
stc
mov
pop
mov
roll
lods
es
push
iret
dec
pop
jns
rolb
mov
jmp
mov
xchg
push
repz
and
sub
mov
enter
jnp
xchg
xchg
pop
sti
or
sub
mov
mov
addr16
mov
sbb
push
mov
sub
push
pop
test
mov
leave
cmp
clc
or
mov
cs
pop
notl
xor
push
xchg
dec
rcl
mov
hlt
in
daa
sbb
pop
sub
add
ficoms
jle
push
mov
mov
jl
mov
jl
insl
int
jo
mov
or
mov
pop
mov
jno
jp
xor
jno
sub
stc
aas
mov
dec
jnp
shll
mov
sub
or
xchg
push
xchg
mov
std
pushf
std
push
push
cmp
jnp
es
fsubl
xchg
lods
test
orl
push
mov
mov
or
sbb
sti
cmp
adc
in
scas
pop
and
icebp
xchg
fs
shl
cltd
lds
dec
adc
test
inc
fidivrl
pop
xor
and
enter
xchg
jnp
xchg
or
xchg
sbb
push
pmaddwd
xor
fbld
push
cmp
pop
int3
out
or
adc
sarb
mov
adc
add
adc
dec
mov
jns
push
mov
dec
fdivrs
rolb
sub
out
sahf
xor
divb
dec
movsb
xor
dec
add
into
or
push
inc
lods
cld
push
movsb
fsubr
mov
adc
imul
out
out
iret
iret
aas
aas
das
das
pop
pop
movq
outsl
pop
pop
dec
dec
mov
lahf
out
out
iret
iret
aas
aas
das
das
pop
pop
movq
outsl
pop
pop
dec
dec
mov
pop
out
outsl
iret
iret
aas
mov
movq
outsl
pop
pop
dec
dec
mov
lahf
out
out
iret
iret
aas
aas
das
test
mul
nop
mov
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
inc
jo
pusha
pusha
push
jo
mov
jg
push
inc
cmp
loopne
shl
rolb
mov
inc
jo
pusha
pusha
push
jo
add
adc
and
xor
shl
shl
loopne
inc
xorb
sbbb
pusha
js
push
and
adc
add
into
repz
and
cld
cmc
out
sub
adc
xor
lods
push
notb
loope
adc
jecxz
in
sub
mov
orl
inc
int3
mov
movsl
sbb
or
stc
sbbb
rcl
subb
nop
dec
jl
lods
mov
cmpsl
ss
addr16
stos
stos
pop
lock
mov
xchg
mov
popl
test
xor
xor
stc
xor
ret
shl
aad
jg
nop
lock
mov
in
xchg
fildll
rclb
push
loope
sub
repz
nop
in
xchg
mov
cwtl
daa
push
xor
rcr
cmp
popf
aam
rol
ret
push
mov
jo
pusha
pusha
push
jo
pop
xor
and
adc
add
lock
jmp
mov
sub
xor
push
jae
jbe
insl
jne
jo
pushf
mov
scas
sbb
adc
in
xor
sub
push
add
insb
push
adc
and
add
xchg
iret
in
out
and
and
xor
pop
adc
and
xor
shl
loopne
shl
rolb
mov
inc
jo
pusha
pusha
push
jo
add
adc
and
xor
shl
loopne
shl
rolb
mov
inc
jo
jne
mov
fiadds
or
push
jecxz
test
adc
in
lahf
daa
push
pop
xor
cmc
ss
fcoms
dec
add
adc
cmp
jnp
mov
dec
cmpsl
add
cmp
and
sub
mov
dec
loope
leave
or
sbb
jae
and
insl
in
hlt
ljmp
ljmp
jg
jns
push
push
jns
movq
and
and
mov
jne
add
stos
sbb
push
or
and
stc
jle
les
jno
sarb
push
mov
mov
mov
outsb
cmp
imul
ret
shr
pop
dec
mov
mov
pop
lcall
repnz
mov
jnp
and
add
xchg
sub
ja
jbe
adc
push
in
cmp
dec
dec
cmpsb
sbb
add
dec
cmp
loop
mov
adc
int
mov
sbbl
fwait
jae
push
fistps
pop
mov
lret
imul
cmp
add
jne
popf
dec
cmp
and
xchg
ljmp
mov
mov
cmp
push
mov
cmp
or
enter
lcall
xlat
xor
pop
loopne
test
shlb
xchg
dec
fimuls
enter
popf
mov
repz
and
enter
xchg
shrl
pop
mov
xchg
cmp
out
cs
add
jp
ss
or
loope
dec
test
xor
or
inc
inc
nop
mov
mov
insb
mov
cmp
pushf
add
pop
pop
lods
popa
enter
push
xor
push
das
add
lretw
xchg
out
dec
pushaw
dec
push
cmp
mov
cmp
fwait
jmp
mov
cmp
pushf
adc
ret
or
jno
sti
fidivrl
cwtl
aad
mov
leave
xor
add
inc
lahf
mov
or
fyl2x
loope
and
outsl
mov
lods
pop
inc
pop
out
in
arpl
movsl
lds
push
mov
mov
fnstcw
adc
jb
jmp
mov
jge
add
adc
mul
pop
cmp
xchg
jns
adc
lock
test
sub
pop
loopne
cmp
and
mov
or
in
fisttpl
dec
ror
xchg
xchg
iret
test
testl
es
sbb
xchg
divb
mov
dec
jae
xchg
or
fiaddl
xor
clc
inc
add
mov
pop
gs
cwtl
sub
cli
sarb
mov
push
pop
mov
xlat
sbb
leave
inc
jecxz
pushf
and
mov
lahf
xor
outsl
sub
mov
push
test
hlt
or
adc
movsl
aas
mov
jns
aaa
sub
xor
fisttps
shrb
mov
adc
movsb
inc
adc
loopne
jmp
aas
cmc
roll
test
cmp
cmpsb
clc
test
insl
push
in
lea
cwtl
test
stos
into
mov
pop
pmuludq
pusha
mov
out
jo
dec
adc
decl
repz
aaa
scas
xchg
jbe
ds
hlt
inc
pushf
aam
pop
add
out
pusha
rorb
push
mov
lea
aam
adc
xchg
pop
add
nop
in
xlat
pop
cmp
sarl
subl
mov
xchg
sbb
pushf
nop
mov
add
outsl
and
stc
mov
pop
pop
and
push
stos
adc
mov
gs
ss
or
xchg
lods
leave
shrb
xlat
or
shlb
jae
in
jmp
sub
xchg
aaa
sub
or
mov
xchg
mov
std
mov
bound
dec
shl
adc
les
push
js
fs
dec
dec
into
mov
shl
pop
inc
outsl
mov
arpl
es
push
inc
nop
popa
xor
iret
jle
xchg
repz
jmp
cmp
aaa
stc
inc
popf
lods
mov
out
mov
stc
fmull
xchg
sbb
filds
push
add
and
cmp
ret
aad
jbe
inc
push
mov
add
sbb
mov
push
lock
mov
aaa
mov
inc
fcmovne
xor
jnp
fsubr
pop
xlat
jmp
jecxz
nop
sub
stos
cmc
mov
iret
pop
cmc
jnp
sub
push
pop
imul
out
repz
xchg
cmc
and
add
lahf
xchg
cmc
fdivrs
iret
mov
and
inc
dec
xor
push
push
mov
add
outsl
iret
xchg
pop
shufps
cwtl
dec
outsl
fprem1
enter
test
into
pop
into
mov
loop
pop
jle
movl
sarl
sbb
xor
dec
ret
or
pop
push
das
pop
push
and
cs
sbb
out
mov
mov
mov
stos
insl
mov
daa
mov
ljmp
mov
shrb
mov
xchg
pop
cmp
xor
xchg
sub
fs
or
jg
addl
add
test
movsl
repnz
and
sarb
jge
dec
gs
lcall
insl
cltd
add
insb
mov
sub
xlat
and
push
jp
pop
and
clc
sbb
jne
xchg
jb
test
lahf
mov
hlt
aas
lods
lods
jbe
jo
clc
repnz
lock
mov
sti
in
mov
je
or
adc
ljmp
mov
dec
jecxz
sub
ljmp
in
out
sbb
rolb
sti
mov
popf
push
inc
push
push
pop
push
mov
lahf
int
cld
outsb
sbbb
ret
mov
mov
cmpsl
sbb
dec
inc
std
lods
mov
fs
mov
sbb
push
jb
negl
fists
in
add
roll
ret
orl
pop
enter
mov
pop
fisubs
push
xor
jp
xchg
jg
lahf
cmc
dec
jge
jb
stos
lret
sbbl
mov
xlat
test
cmp
punpcklwd
push
out
pop
test
sahf
xchg
test
ret
pop
iret
mov
int3
add
inc
pushf
fstl
or
xor
loope
in
xor
sti
xchg
push
sbb
sub
enter
je
nop
push
dec
imul
cli
mov
fcoms
sub
sub
outsl
lods
inc
int3
ljmp
dec
xchg
sti
cmp
lock
pushf
adc
xchg
fwait
push
gs
data16
inc
outsl
fwait
and
sbb
stos
sti
inc
fistps
movb
aas
movsl
in
call
cwtl
negb
inc
jl
mov
jle
jbe
test
cmpsb
or
mov
dec
xchg
movsb
arpl
mov
dec
sbb
imul
cltd
mov
or
mov
mov
out
xchg
sbb
enter
jae
aas
ja
ror
mov
mov
test
mov
out
sub
sbb
cmpsl
fiaddl
lea
popf
pop
xchg
sbb
mov
jge
mov
cmp
xor
mov
leave
imul
add
inc
fwait
sub
pop
or
sub
scas
add
rcrl
sub
adc
rep
es
pop
imul
in
inc
push
cmpsb
adc
and
cmpl
adc
out
in
xchg
cmp
mov
xchg
inc
call
xchg
xchg
jns
jl
push
sub
sbb
xlat
hlt
jle
pop
lods
xchg
dec
aad
ja
mov
push
or
repnz
jge
xchg
xor
pop
inc
cmp
insb
sub
aad
pusha
pop
push
jb
std
pop
test
inc
pop
lock
jg
add
mov
cwtl
lcall
enter
xlat
and
mov
lcall
movsb
pop
xor
mov
loopne
repz
mov
xor
std
xchg
push
rcr
imul
xor
xchg
enter
adc
cli
mov
imul
adc
ret
mov
pop
pop
push
aaa
mov
lcall
stos
sbb
iret
xchg
push
mov
mov
lods
imul
daa
jge
jne
shrb
addb
push
cmp
fsubl
xbegin
push
ja
and
sbb
rcrl
sub
cs
sbb
or
mov
xor
test
mov
cmp
sahf
xchg
cmpsb
imul
ficompl
and
icebp
outsb
int3
sbb
mov
xlat
repz
imul
shll
scas
cmpl
jo
insb
loop
xor
aas
xchg
out
push
inc
insb
inc
or
scas
test
stc
popa
lds
int
add
imul
push
push
fs
xorb
mov
aam
imul
mov
jmp
add
hlt
mov
and
scas
mov
inc
mov
dec
and
or
cwtl
fwait
subl
hlt
andl
mov
push
lea
loopne
mov
inc
mov
xor
imul
pushf
xor
aam
imul
cmpsl
push
outsl
and
cmc
ss
cwtl
mov
incb
rcrb
popf
adc
icebp
sbb
cmp
lds
inc
jno
inc
add
pop
cmp
mov
in
inc
lcall
out
movq
xorl
inc
pop
bound
sub
jne
adc
outsl
addr16
ficompl
jg
mov
and
rcl
lods
mov
mov
gs
xchg
xchg
data16
or
cltd
push
push
xor
inc
in
pop
ret
pop
andl
imul
stos
out
pop
mov
insl
imul
xchg
and
lret
in
push
jo
jnp
adc
fisubrl
mov
cmpsl
out
pop
fistl
shll
xor
mov
fsubrp
addr16
movsl
cmp
repz
jg
test
insb
xchg
xchg
pop
xor
sbbb
mov
and
cmp
les
dec
push
push
xchg
push
sbbl
fcomi
rcr
cwtl
je
pop
sbb
cmp
jmp
mov
add
iret
test
or
std
sbb
fisttpl
negb
cmp
sub
inc
mov
xor
pop
push
in
cmpsb
fmull
or
mov
fbld
pop
cmc
mov
mov
repz
ds
cltd
jg
push
stos
xor
lcall
outsb
cmpb
jmp
xlat
mov
pusha
xor
repz
inc
cmp
mov
gs
call
clc
bswap
push
inc
inc
pop
jo
sbb
bound
jb
lret
nop
clc
pop
sub
ljmp
jecxz
inc
sub
sub
mov
sub
cwtl
adc
push
and
mov
mov
jge
cmc
lea
shll
stos
jne
inc
cli
faddp
test
arpl
mov
mov
outsb
or
jmp
pop
pop
pop
outsl
scas
adc
push
mov
hlt
and
jb
int
fs
pushf
pushf
mov
push
mov
sub
cmc
rcrb
inc
loope
movsl
pop
ret
insl
jnp
fisttpl
mov
nop
mov
in
ror
int3
pusha
sbb
dec
cmpsb
test
adc
bound
out
orl
sbb
lcall
pop
mov
add
sahf
inc
daa
jmp
lret
mov
pop
pop
xor
sbb
and
daa
adc
aaa
mov
xlat
xchg
inc
movl
ret
cld
out
fwait
lcall
push
out
jmp
mov
push
jbe
incl
rorl
inc
sub
lea
pop
insb
adc
addr16
cld
push
xor
adc
fmuls
bnd
mov
mov
testl
mov
push
or
aam
pusha
imul
push
jmp
push
imul
push
lret
jo
dec
inc
mov
mov
ja
aad
push
sub
xor
push
inc
sub
sbb
mov
in
and
push
cmp
lret
jg
out
pop
adc
nop
adc
push
inc
mov
add
cmpsl
pop
adc
jecxz
inc
clc
and
pop
push
call
or
clc
push
cmpb
sbb
rcrl
xor
jb
push
adc
and
in
imul
test
fbstp
and
mov
les
dec
pop
jge
jp
icebp
sub
arpl
xor
lret
scas
outsb
rolb
stos
push
leave
outsb
or
jns
pop
into
pop
lret
jnp
mov
out
lds
outsb
jmp
test
test
push
jmp
mov
stc
orl
rcrb
mov
jle
cld
imul
jecxz
inc
lret
dec
inc
xchg
jnp
cmpsb
sbb
popf
call
sub
mov
or
sbb
xor
dec
movsl
stos
jns
push
add
insb
add
lods
cmc
mov
es
aas
push
movsb
mov
dec
ja
or
or
mov
notl
jb
sbbb
xchg
sbb
and
out
test
lock
mov
sub
sti
adc
sub
je
je
sbb
lods
cmc
push
cwtl
lret
ds
std
or
loopne
and
jle
and
into
push
sbb
repz
sub
ror
out
mov
or
pop
stos
xchg
jl
pop
mov
movsb
pop
les
fimuls
push
lcall
sub
xchg
sub
enter
shrb
mov
mov
cmp
or
das
xchg
shll
xor
in
stos
inc
cmp
orl
push
test
mov
jge
pop
lea
dec
jl
push
add
push
mov
sti
ret
std
xchg
shll
sub
in
adc
iret
mov
daa
ret
shlb
cmp
sarl
mov
lret
mov
test
lds
addr16
clc
cmp
ja
xchg
cmc
sbb
mov
push
inc
jno
int3
leave
push
pusha
ljmp
lea
cmp
test
mov
push
mov
repnz
dec
xchg
mov
xchg
cmp
mov
cs
jge
jle
scas
test
mov
aad
inc
inc
sbb
stc
aas
cli
test
fistpll
popa
pop
cmpsl
xlat
out
into
xor
lret
jno
mov
sbb
cmc
adc
int3
jp
in
pop
incb
std
jl
bound
icebp
in
aad
mov
mov
jmp
shlb
jecxz
sub
mov
ret
es
pcmpeqd
in
mov
icebp
fwait
push
mov
xor
pop
cmp
aaa
inc
je
test
in
stos
mov
xchg
pop
mov
fwait
jge
sarl
jge
push
push
jg
out
pop
in
add
sbb
sub
jo
aam
mov
push
inc
mov
lret
xor
push
jae
pop
int
adc
lcall
lds
mov
inc
pop
sub
les
leave
movsl
inc
cmp
das
int3
shl
push
rcll
mov
mov
mov
cmp
lds
mov
mov
inc
dec
pop
pop
hlt
mov
clc
imul
jmp
ficomps
dec
cmp
arpl
gs
mov
lock
test
push
insl
mov
int
arpl
push
stc
out
out
pop
daa
jbe
fdivs
out
dec
mull
sarl
test
and
dec
fisubs
stos
call
push
dec
xor
idivl
add
jge
adc
cmp
ret
sbb
imul
sub
sub
lcall
fmul
fcomi
fsubr
push
mov
sbb
cmpb
cmp
cmpsl
loop
lahf
inc
inc
push
push
xor
push
lock
xlat
pop
push
pop
sahf
add
ret
pop
cli
movsl
dec
fdivs
loop
push
adc
iret
mulb
inc
xchg
in
push
mov
xchg
scas
push
repnz
js
pop
in
aaa
add
lahf
daa
jp
ret
clc
and
push
mov
out
aad
xchg
and
mov
leave
fwait
xchg
xchg
mov
ja
and
sbb
aam
ret
clc
jne
dec
in
cltd
add
test
or
push
sub
mov
sahf
xor
cmp
rep
ljmp
adc
js
fdivs
pop
or
shlb
or
or
sbb
xchg
lock
ds
loope
sbb
cmp
int
shlb
lcall
mov
or
scas
mov
in
jg
out
pushf
in
rorb
test
pop
fdivl
lahf
push
dec
push
jns
push
mov
vprotd
or
clc
push
test
pusha
icebp
daa
jp
pop
leave
ret
lcall
jge
mov
fildl
xor
ljmp
int3
cmc
mov
push
ljmp
mov
cld
fstpl
frstor
mov
mov
jl
out
sbb
outsl
pop
mov
xor
cmp
cli
testb
repnz
jo
ficoms
mov
shl
cmpsl
xchg
adc
insl
jnp
movsb
insl
pop
sbb
cmp
cmc
insl
cmc
dec
mov
xchg
dec
add
daa
push
xchg
imul
or
jle
cs
in
lcall
cmp
cs
rol
int3
lret
dec
dec
sbb
adc
sub
sbb
cmp
push
pop
jmp
out
and
stos
pusha
dec
test
inc
repz
push
and
dec
aam
sti
jl
or
cmp
sbb
jecxz
outsb
movsb
inc
push
cltd
xchg
rorl
movsl
into
cwtl
jo
pop
add
ds
cmp
imul
lret
cmp
mov
push
cmpsl
adc
sbb
sbb
and
lea
outsl
inc
lea
scas
scas
dec
pop
das
jp
adc
stos
inc
scas
aad
xchg
fcomp
and
pop
push
xor
xchg
jg
sub
stos
sub
mov
pop
xor
adc
mull
sbb
xchg
jno
cmp
push
shll
int
jno
daa
int3
mov
stc
les
jae
cmc
outsl
out
cmp
and
mov
sbbb
jmp
sbb
pop
or
jge
dec
mov
mov
xchg
inc
xor
jno
sbb
jmp
sub
lds
dec
push
and
roll
xor
sbb
dec
sbb
pop
daa
les
xchg
sbb
not
in
push
es
mov
mov
and
push
pop
cmp
or
sub
scas
es
push
pop
xor
or
lcall
fs
inc
jbe
icebp
sbb
xchg
ss
ljmp
adc
fadd
add
mov
xchg
cld
test
das
imul
sub
pop
loop
sub
push
loop
adc
movsb
jg
mov
lret
loopnew
dec
scas
lods
jmp
ss
xchg
idivl
jno
pop
mov
movsl
pmaddwd
push
xor
cmc
xor
lock
daa
push
fsubl
and
jecxz
inc
pushf
clc
or
outsl
testb
std
jl
loopne
xor
popa
mov
sbb
adc
mov
pushf
in
add
test
push
cmp
dec
loopne
andl
push
mov
xchg
shll
dec
aam
sbb
or
sbb
cmp
xchg
cltd
cld
fdivl
lds
xchg
outsl
fistl
fidivrl
lahf
scas
xchg
xchg
lahf
jb
or
movsb
dec
fsubrs
pop
cs
xchg
jecxz
adc
jmp
xor
out
xor
in
loop
bound
xor
xchg
repz
pop
jge
and
inc
push
pop
cmp
out
stc
fbstp
rcl
mov
mov
ret
out
dec
mov
inc
jecxz
xchg
mov
mov
push
gs
jns
xor
or
push
or
sahf
loope
jecxz
inc
daa
leave
and
or
insl
inc
cmp
xor
xor
xchg
xor
or
int
mov
push
enter
pusha
inc
xlat
dec
inc
pop
jns
lahf
fs
and
add
jmp
cmp
xchg
rdpmc
sbb
mov
pop
push
jnp
lret
pusha
mov
adc
adc
inc
xor
iret
sahf
mov
adc
pop
inc
push
dec
or
inc
pop
cmp
js
push
ficoml
std
sbb
sub
iret
clc
jb
cmpsb
ret
pop
adc
aaa
or
ljmp
mov
push
sbb
xchg
es
test
or
mov
stos
pop
call
mov
sub
jo
push
sbb
out
sub
xor
inc
add
adc
and
xor
shl
loopne
shl
rolb
mov
inc
jo
pusha
pusha
push
jo
add
adc
and
xor
shl
loopne
shl
rolb
mov
inc
je
pusha
pusha
push
jo
add
adc
and
xor
shl
loope
shl
rolb
mov
inc
jo
pusha
popa
push
jo
add
adc
aas
comiss
shl
mov
cmp
pop
pop
outsl
dec
jg
fidivl
inc
add
inc
adc
add
push
stos
movsl
pop
mov
test
xchg
cmpsl
in
testl
add
aaa
stc
pop
inc
pop
and
movsl
notl
out
mov
xchg
test
cmp
dec
sbb
aam
scas
fidivl
pushf
shll
cmp
jo
inc
and
fstpl
lea
inc
pop
aad
sbb
mov
pop
shrb
mov
and
in
sub
xchg
push
xor
pop
inc
cmp
ss
pavgw
mov
divl
rorb
xlat
sbb
add
pop
and
fsubs
sbb
out
mul
inc
mov
imul
xchg
xchg
push
lret
inc
mov
push
divb
inc
xchg
xchg
loop
mov
jg
fwait
sub
adc
das
fsubs
fdivp
clc
add
repz
and
xchg
xchg
push
cmp
and
inc
adcl
pop
lahf
mov
and
insl
jae
xchg
out
out
leave
mov
mov
xor
cmp
pop
sbb
pop
xor
jecxz
lock
mov
sub
pusha
adc
xor
push
inc
repnz
add
jecxz
loopne
repnz
mov
es
add
je
aaa
jne
inc
pop
push
out
divl
cmpsl
in
cmc
xchg
xchg
aad
and
push
adc
pop
inc
pop
push
out
divl
cmpsl
in
cmc
xchg
xchg
aad
and
xchg
cmp
cld
dec
mov
mov
fisubrl
imul
lcall
gs
sbb
je
sbb
jnp
mov
loop
sbb
movsl
fistps
mov
decb
mov
incb
imul
xchg
xorl
repnz
cs
pop
adc
cs
mov
inc
js
hlt
xchg
cltd
push
inc
jmp
mov
test
sbb
aad
loope
addr16
popa
aam
repz
int
inc
outsl
mov
dec
imul
sbb
roll
les
pop
push
fmull
mov
in
ja
inc
insl
jmp
xchg
lret
mov
pop
imul
inc
into
cmp
out
pop
dec
fsubrl
xor
dec
notl
cmp
cli
and
scas
jnp
sbb
sbb
and
dec
mov
icebp
jnp
sbb
into
leave
loop
mov
sub
mov
pop
and
sub
adc
mov
leave
aaa
sub
sbb
pop
cltd
test
sub
shll
fistps
cmpsb
icebp
pop
and
jge
out
jbe
int
pop
shll
sbb
fidivrs
dec
adc
dec
cltd
push
ss
inc
insb
lods
insl
pop
push
inc
xchg
sar
ja
mov
es
cld
jmp
icebp
lock
int3
mov
fs
sbbb
enter
jne
movsb
outsb
add
mov
shl
pop
or
rcr
emms
sub
sarl
add
imul
jle
rcrl
fdivrs
xchg
les
enter
insb
lahf
sub
cmpsl
popa
sub
adc
sar
cmpsb
stc
shrb
push
push
cmp
sub
dec
arpl
ds
ds
les
ficoml
data16
inc
js
push
leavew
fcompl
inc
in
xchg
push
or
out
stc
mov
inc
notb
mov
insb
dec
pop
mov
pop
into
es
out
push
sbbb
xchg
xchg
push
outsb
xor
pushf
dec
icebp
fcomps
mov
or
sbb
jmp
pop
nop
lahf
test
gs
adc
sub
lock
push
dec
fadds
outsl
or
fsubs
adc
dec
jne
jp
shr
mov
test
out
add
lret
push
xor
adc
out
sti
pop
or
push
mov
xchg
jns
pop
les
pop
pop
mov
xchg
cmp
mov
les
ss
fnsave
pushl
sahf
lahf
mov
mov
pushf
pop
int3
int3
sbb
scas
stos
fimull
sub
xor
sbbb
dec
sbb
push
imul
mov
xchg
ret
dec
popa
pusha
cmp
jge
sbb
xchg
or
fwait
sub
jbe
jle
aas
jp
push
in
sbb
andb
push
and
mov
popl
jno
jmp
lock
xor
mov
and
pop
mov
into
adc
sti
hlt
into
aaa
sahf
pop
or
movsl
imul
and
inc
xor
lods
int
stc
cmp
mov
aas
pop
pop
add
jnp
mov
dec
jne
or
fcomi
pop
fwait
lahf
clc
jne
mov
push
aam
icebp
and
das
movsb
repnz
jmp
mov
jo
push
in
inc
mov
push
out
inc
repz
jg
leave
inc
rorl
cmc
outsb
shl
sbb
mov
add
cmp
inc
cmp
jecxz,pn
ret
dec
shlb
lock
sub
test
jle
mov
push
cmc
enter
out
dec
push
pushf
mov
mov
jne
lcall
xchg
cwtl
sbb
enter
push
mov
fistpl
mov
push
pop
lock
lcall
bound
pop
test
ret
push
aad
sahf
int3
insb
inc
pop
and
pop
scas
outsb
cld
fnstsw
je
mov
push
hlt
inc
mov
jnp
fdivrl
repnz
mov
stos
imul
adc
and
push
dec
clc
cmp
xor
inc
movsl
test
jp
je
mov
arpl
jo
mov
pusha
ljmp
mov
push
jo
outsb
loop
cmp
mov
cmp
aaa
lods
sub
jmp
mov
cld
pushf
mov
dec
scas
mov
insl
inc
aas
loope
addr16
jae
and
inc
or
mov
mov
xchg
jmp
fdivs
mov
and
orl
mulb
decl
sub
lods
js
sub
mov
aaa
cmp
les
xor
adc
flds
inc
aas
dec
push
xor
pop
fnstcw
in
imul
in
int
aam
cltd
mov
jecxz
fs
push
sub
adc
fisttps
test
dec
jns
xlat
sub
jno
mov
dec
push
push
jns
clc
cwtl
dec
test
leave
fstl
jp
arpl
sbb
mov
scas
or
add
sbb
mov
dec
cmp
jg
repnz
mov
push
jecxz
mov
lahf
push
jl
cmp
sbb
cmpsb
adc
mov
notb
xchg
or
xchg
push
mov
call
push
jns
stc
or
in
push
scas
push
xchg
jp
xor
les
fisttps
dec
add
fwait
leave
sub
add
sub
push
sbbl
not
push
cmp
fcom
or
lock
xchg
push
jbe
sbb
cmp
mov
sub
mov
rclb
xor
dec
js
xchg
pop
jbe
in
outsw
fidivs
and
xor
dec
fistps
in
sbb
icebp
out
in
hlt
out
cltd
jae
and
sbb
mov
lds
pop
cmp
int3
adc
in
mov
xlat
dec
lcall
aam
lods
mov
jne
out
movsb
adc
sub
out
out
xchg
mov
jecxz
fwait
inc
sub
shll
push
fnsave
dec
sub
negb
ret
xor
outsb
test
fisttpl
stos
iret
dec
test
jne
iret
test
ret
clc
mov
lea
mov
xor
inc
or
or
push
xor
mov
stos
push
iret
inc
sub
in
jae
xchg
push
test
inc
add
ds
lret
in
mov
in
cmpb
or
or
repnz
inc
scas
loop
jg
hlt
imul
test
pop
push
mov
mov
cmp
mov
cmpl
mov
mov
lock
aas
scas
ret
ror
cmp
test
clc
shrb
enter
pop
add
xor
inc
cltd
mov
pop
inc
mov
std
push
call
je
mov
or
xor
stc
jmp
clc
jp
sub
or
les
jbe
movsl
ret
inc
or
or
neg
inc
arpl
dec
or
fucomi
sbb
jbe
jo
in
adc
xchg
inc
dec
inc
fcmovb
push
jne
into
add
out
loope
cmpsl
cmpsb
std
orl
xor
xchg
shll
xchg
mov
popf
int3
bound
aam
cltd
jecxz
and
pop
test
add
jmp
pop
testb
in
dec
jbe
les
jne
imul
cmpsl
pushf
pop
and
addr16
lret
adcl
jns
sbb
addr16
pop
mov
cs
js
test
xlat
outsb
and
pop
comiss
jmp
aad
shlb
in
gs
insb
sarl
loopne
inc
adc
enter
and
stos
and
loope
ljmp
jno
push
cs
jne
je
push
lcall
repz
or
xor
loop
push
xchg
cltd
jnp
cmpsb
stos
daa
mov
jl
sarb
cwtl
in
cmp
push
stos
jecxz
dec
mov
and
das
int3
jmp
dec
lahf
ror
js
rcrb
mov
mov
loopne
dec
lahf
mov
fs
jbe
les
stos
lods
pop
mov
testl
mov
cmp
sub
jo
sub
fistps
mov
lods
cwtl
jne
and
data16
fcom
mov
mov
mov
insb
movsl
xor
mov
push
lahf
sbb
xchg
repz
lcall
iret
and
mov
popf
cmp
add
scas
jl
push
lret
pop
sbb
sbb
outsb
test
int
jns
ss
enter
sub
aad
sbb
and
jmp
xchg
sahf
fucom
push
pusha
insl
cmp
pop
arpl
mov
repnz
push
mov
or
mov
push
xlat
mov
push
or
jge
pop
dec
jmp
imul
and
and
fisubrl
ljmp
lds
out
movl
or
jae
je
ljmp
mov
push
xchg
fbstp
add
mov
aas
outsb
adc
add
es
xlat
lds
ds
fldenv
out
mov
inc
int
outsl
xor
fldt
adc
je
repnz
xchg
les
sbb
inc
push
mov
fwait
cld
xlat
out
xchg
sub
ja
mov
cwtl
mov
jno
out
xor
lret
out
inc
inc
jmp
loop
inc
insb
repz
add
mov
aas
fstpt
js
out
sbb
lcall
pop
adc
jno
push
fildll
cltd
cmpsl
sub
out
aad
xchg
adc
es
call
jge
lods
inc
call
std
test
fldt
pop
pop
daa
add
adc
xlat
hlt
jno
sbb
mov
mov
mov
mov
addl
push
push
cmpsb
mov
mov
lahf
mov
dec
arpl
add
arpl
pop
shlb
inc
sahf
jle
or
icebp
cmpsb
jecxz
dec
mov
mov
or
test
stos
lds
pusha
sahf
or
push
dec
mov
insb
popa
daa
je
lret
or
xor
dec
adcl
lods
or
rcrl
jne
sbb
sbb
arpl
jne
or
and
inc
and
xor
jmp
jecxz
jg
add
out
add
leave
sub
inc
lds
int3
push
jg
lcall
lods
mov
orl
pop
jnp
repz
or
test
dec
sub
clc
out
shl
inc
push
sbb
inc
push
popf
into
icebp
fists
fidivrl
and
aad
jae
xor
lods
iret
out
aad
cmpsb
mov
int3
cmp
xlat
mov
xlat
mov
xor
sub
and
or
cmp
and
pop
repnz
fst
sub
sbb
jb
or
cmp
loop
adc
and
das
add
stos
cmc
mov
or
xchg
mov
jns
incl
gs
jae
aaa
icebp
jp
js
add
xchg
mov
push
sbb
pop
iret
xlat
clc
ret
arpl
mov
dec
cltd
lds
fwait
arpl
jecxz
insb
test
xchg
sub
cmpsl
mov
or
inc
or
in
mov
or
shrb
and
lods
mov
add
inc
pop
inc
aad
jae
mov
shll
mov
clc
xor
mov
les
cwtl
pop
inc
add
sbbb
or
nop
push
fsubrs
inc
mov
test
ret
cmc
push
or
pop
adc
push
or
je
cmp
sub
push
inc
lahf
insl
nop
lret
lahf
dec
mov
cmp
test
std
add
or
dec
pop
mov
pop
es
imul
call
jo
or
pop
iret
sbb
dec
add
negb
fstpt
xor
aam
push
repz
or
inc
aam
in
xchg
jp
push
jg
scas
shll
add
test
mov
sti
frstor
jp
add
cmp
sub
jl
es
pop
test
aaa
in
cmc
aas
scas
js
enter
xchg
outsl
inc
cmp
inc
je
int
loope
sub
and
in
dec
idiv
cmpsb
xchg
shlb
pushf
sarl
divb
js
push
push
ljmp
ret
adcb
repz
jbe
xchg
and
fwait
pop
or
clc
out
and
subl
pop
lcall
jecxz
jecxz
sbb
mov
lods
aas
mov
loop
nop
and
orl
jbe
and
dec
insl
jg
ds
sub
int
out
xor
adc
cmp
lock
sub
rorb
lahf
rcrb
xchg
rcrb
sbbl
jnp
shrl
push
jp
mov
ror
subb
sbb
fucomip
pop
jo
mov
jl
cmp
mov
enter
daa
je
cmc
inc
mov
pop
popl
jno
add
jge
es
dec
std
sahf
push
pop
test
fucomp
push
ljmp
in
sbb
add
sub
push
into
stos
and
cmpsb
adc
mov
cmp
mov
movsb
dec
inc
sbb
test
pop
ret
movsl
imul
dec
mov
push
adc
mov
add
jns
push
jecxz
lock
out
enter
in
enter
jo
mov
enter
sub
xchg
xor
lahf
or
xor
popa
les
loope
pop
xchg
cltd
mov
cmpl
ljmp
pop
shufps
cmc
incl
and
andl
sub
int
js
popf
stos
sub
inc
lret
xor
inc
sub
lods
xchg
mov
movsb
or
inc
jns
push
aam
pop
in
pushf
mov
mov
into
cmpl
icebp
pop
cmp
into
add
paddsw
push
in
xchg
das
cvtpi2ps
add
sub
cmp
jp
out
or
mov
inc
in
mov
insl
cli
push
adc
lods
insl
push
lock
nop
mov
mov
ja
and
pop
clc
rcrl
cld
je
pop
fwait
in
jns
dec
outsl
js
pop
popa
inc
call
das
xchg
mull
lods
lahf
inc
lods
icebp
xor
lock
xchg
es
out
lods
adc
ret
cwtl
pop
or
bound
ret
fidivrl
add
cmpsl
fwait
adc
jle
addl
sub
stos
enter
mov
push
lret
in
and
mull
xor
xchg
les
sub
cmpsb
dec
xor
ljmp
cmp
inc
pop
sbb
add
aas
cmc
lods
fwait
pusha
fcmovnb
mov
jnp
pushf
idivb
xchg
sbb
call
addr16
call
pop
adc
push
sbb
outsl
cld
fcmovbe
in
in
mov
or
lahf
cmp
add
ret
xchg
cs
inc
lock
or
arpl
jns
ret
sbb
mov
xchg
hlt
int3
jo
arpl
fcoms
into
inc
test
mov
int
test
sbb
dec
pop
pushf
scas
rcrl
aad
or
call
mov
pop
in
repnz
pop
cwtl
push
pushf
mov
lret
cmc
add
xchg
fisttpl
dec
pop
enter
aad
inc
daa
imul
sbb
lret
and
cmp
adc
push
scas
stos
out
test
xchg
sbb
mov
add
loope
aas
out
pop
std
dec
xor
scas
and
mov
ja
push
cmp
fcmovb
enter
aad
std
std
call
push
cld
std
fidivs
imul
or
adc
ja
daa
loop
in
pop
arpl
push
loope
movsb
fstpl
rolb
cmc
ficomps
jp
outsl
push
popa
cmc
sbb
loope
ss
mov
ret
push
pop
sarb
mov
adcl
roll
sub
mov
daa
push
ljmp
gs
fidivrs
xchg
fisttpl
int
loop
movsb
or
daa
jmp
sub
dec
lods
mov
lods
std
fnsave
push
mov
pop
dec
pop
push
outsl
dec
xchg
mov
test
add
xchg
cmp
cmpsb
jae
push
jecxz
outsb
xchg
inc
fadds
cmp
je
aas
adc
sahf
movsb
call
addb
je
pop
mov
jmp
mov
pop
sahf
sahf
jo
xchg
sub
cmp
leave
es
cmp
add
out
mov
icebp
rclb
push
jge
popa
movl
xor
adcb
pop
push
mov
test
repz
dec
fildll
mov
cld
pop
mov
das
jbe
mov
mov
jo
mov
or
ror
fisttps
shrb
lock
lods
mov
xchg
jns
mov
mov
add
aad
mov
jp
daa
cmpsl
jmp
push
mov
jp
testl
cmp
shl
push
cmp
loope
sub
add
pop
sbb
fistl
and
ficoms
cmp
inc
in
loope
or
xchg
test
xchg
mov
dec
mov
dec
fisttps
test
cmp
lock
out
stos
push
mov
repnz
cmp
push
push
jnp
lods
pop
sarb
xchg
pusha
mov
lods
bswap
push
aam
sub
xchg
fcompl
push
arpl
push
adc
scas
or
js
call
sub
mov
jmp
jb
andb
cmpsl
pushf
cmp
xchg
and
jg
pop
scas
push
je
mov
or
pop
push
lcall
xchg
test
sub
add
jmp
jno
dec
sarb
test
iret
mov
aam
fcoms
stos
imul
inc
mov
ljmp
subb
ror
pop
imul
jns
loopne
fdivrs
sbb
scas
xchg
push
outsl
jg
push
sbb
adc
and
push
leave
pop
xor
adc
outsl
repnz
xchg
or
adc
imull
stc
and
lock
adc
stos
adc
fbstp
and
or
popf
std
push
inc
and
dec
insb
call
inc
sub
imul
cmp
out
fnstcw
adc
and
jns
mov
jg
and
bound
insb
cmp
dec
xchg
in
jp
jae
fcom
orb
inc
cwtl
rcl
leave
bound
cmp
fwait
mov
les
sub
adc
leave
lahf
loop
adc
mov
cmp
xchg
stos
cmp
xor
mov
jbe
dec
in
dec
add
xor
or
bound
subb
aad
cmp
daa
aam
mov
pusha
in
outsb
mov
cmpsb
sub
ret
arpl
mov
fucomp
mov
out
popa
into
push
fcoml
iret
idivl
xchg
inc
out
rol
xchg
in
cmc
push
nop
xchg
stc
in
pop
inc
mov
shr
shr
push
cmp
sub
mov
sbb
inc
sub
shll
adc
das
jle
jb
mov
imul
std
sub
xor
aam
sbbl
inc
lret
mov
inc
or
sub
pop
mov
enter
xor
mov
fsubs
cmpb
push
jl
imul
sub
sub
adc
jae
clc
add
mov
test
lret
mov
xor
es
leave
xchg
shrl
jl
aam
lock
ss
cltd
jle
sbb
dec
push
add
dec
push
icebp
rcll
mov
push
pop
cmp
add
in
lds
push
push
aas
xchg
negb
dec
push
dec
xor
popa
sbb
out
dec
xchg
or
nop
or
fnop
xchg
arpl
add
pop
pop
pop
fnsave
ret
jmp
or
mov
lahf
inc
int3
mov
and
or
dec
cmp
xchg
fsubs
call
pop
mov
pop
pop
jl
addr16
fisttps
mov
and
sahf
cmc
or
push
mov
repnz
and
jns
fwait
add
dec
fstp
mov
loop
in
jecxz
lods
mov
out
in
push
rdpmc
mov
xchg
fcmovb
xor
sub
xchg
xchg
imul
jge
mov
sbb
leave
repz
popf
inc
scas
adc
loop
test
adc
xor
jne
xchg
stc
or
cmpsl
pop
sub
push
and
xchg
mov
shrb
or
jbe
lcall
lock
lods
lds
cmp
inc
dec
sub
or
sbb
push
or
sbb
jmp
cmc
insb
imul
jae
mov
loopne
cmp
adc
mov
sahf
loopne
arpl
decl
fisttpl
ds
test
clc
call
int
cmp
fst
aam
xor
daa
gs
jne
inc
pop
push
out
divl
cmpsl
in
cmc
xchg
xchg
aad
and
push
adc
pop
inc
pop
push
out
divl
cmpsl
in
cmc
xchg
xchg
aad
and
push
adc
pop
inc
xlat
push
out
divl
cmpsl
in
cmc
xchg
jg
jae
sub
daa
gs
jne
lds
pop
insl
test
loop
insl
aas
or
push
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
call
jne
gs
imul
xchg
and
dec
in
out
xchg
cmp
call
jne
gs
mov
and
dec
aad
in
idivb
push
or
clc
inc
enter
test
mov
aas
push
sbbb
aam
jmp
jecxz
movsl
mov
pushf
sub
add
subl
dec
shl
mov
jle
mov
mov
std
daa
cltd
push
sahf
mov
lods
xchg
push
std
sub
xlat
adc
rcrb
xchg
call
iret
sub
add
push
dec
cwtl
pusha
js
inc
test
sbb
mov
xor
cwtl
test
cmp
js
mov
sub
movsb
sub
mov
and
pop
cs
and
or
sbb
pop
pop
movsl
or
scas
push
dec
in
sets
mov
jo
js
mov
dec
dec
cwtl
mov
push
clc
push
enter
test
mov
cmp
int
fisttpll
pop
cld
sub
sbb
test
je
fs
lret
pop
lcall
mov
cmp
imul
inc
lods
add
std
aaa
lock
lret
lods
sub
out
ljmp
clc
and
jns
add
push
cmc
pop
in
xchg
cmp
call
jne
gs
mov
and
dec
cmc
pop
in
xchg
cmp
call
push
divl
sub
xor
rcll
dec
data16
mov
lcall
imul
movsb
pop
jns
push
aam
not
xchg
dec
sub
flds
in
pop
repnz
test
imul
sub
or
pop
mov
mov
adc
mov
test
mov
ss
stos
xor
fisubl
lock
sahf
rcl
clc
mov
inc
scas
cmp
fstl
push
inc
ss
sub
pop
mov
xchg
cmp
push
mov
push
jg
mov
mov
pop
insl
into
test
or
xchg
mov
out
mov
aam
cld
push
movsl
rolb
or
pop
or
inc
inc
add
lret
add
push
lahf
mov
in
lock
andnps
mov
test
call
fsubs
jp
int3
sahf
icebp
loop
mov
and
sub
rcr
imul
mov
cmp
xchg
and
add
test
pop
mov
xchg
jo
shrl
jecxz
adc
inc
ret
out
fmul
test
xor
sbb
and
jp
mull
ret
jle
inc
js
ds
xor
out
dec
and
mov
fcomps
inc
sub
adc
test
fstpl
sbb
mov
je
sub
wbinvd
rclb
pop
sbb
sbb
inc
subl
leave
movl
jns
push
out
rol
or
aad
lahf
mov
lcall
pop
arpl
push
in
inc
pop
jnp
fimull
ss
inc
cmc
jl
nop
mov
arpl
repz
cmp
lods
sub
xchg
add
test
call
xor
das
bnd
bound
repz
rcrl
mov
out
ret
pop
adc
inc
mov
jmp
pop
call
shll
adc
notl
popf
pop
and
rclb
call
outsb
add
pop
jo
adc
in
pushf
notl
lcall
pop
daa
les
cltd
enter
and
sarl
jno
adc
and
movsb
arpl
adc
add
mov
mov
sbb
and
jmp
push
inc
or
imul
icebp
or
xchg
jp
push
rorl
dec
imul
pop
lds
xor
push
adc
fcoml
jp
mov
xchg
mov
jns
ss
aaa
mov
jne
lahf
dec
adc
mov
push
vpsllw
lods
ja,pn
lret
push
es
pushf
mov
mov
dec
cmp
jb
sub
out
xor
cmp
inc
divb
cltd
push
test
gs
ja,pt
push
push
dec
add
pop
pushf
sahf
xchg
movb
notl
stos
dec
popf
addr16
lods
stos
cmp
add
xchg
clc
test
in
je
loop
pop
test
sub
jne
aad
or
xorl
lahf
leave
jl
cmp
sti
fstpt
fisubrl
cmp
cmp
ret
pop
cmp
jp
lret
pop
lret
sahf
jmp
call
mov
movsb
insb
stc
mov
outsl
pop
xor
and
jns
jp
int
push
cmp
sub
aaa
std
lock
pop
adc
ja
push
mov
insl
stos
jnp
addl
mov
imul
or
ljmp
rcrb
fdivs
fimull
fs
adcl
iret
ret
push
imul
or
addr16
fadds
orl
subb
enter
mov
shr
mov
das
gs
adc
cld
pop
sbb
push
cs
mov
cli
icebp
daa
cmp
arpl
fs
add
out
out
int
push
mov
rcl
lods
in
pushf
stos
movsl
ds
inc
dec
cmpsl
pusha
rorl
pop
push
dec
or
aas
inc
loopne
lods
mov
sarl
iret
mov
dec
inc
hlt
add
pop
push
daa
clc
pushl
cs
imul
xchg
xor
pop
out
inc
andl
mov
scas
inc
idiv
xchg
push
adc
push
outsb
sbb
add
push
jecxz
push
and
mov
mov
rcrb
int3
shrb
push
ret
mov
mov
out
fnstsw
aam
outsb
pop
in
lock
iret
mov
mov
inc
mov
fs
scas
hlt
dec
nop
pop
cmpl
leave
lret
jmp
aad
sub
push
outsb
push
arpl
jae
mov
xor
xor
dec
pop
push
shlb
add
push
jmp
cmp
rcrb
test
pop
rorb
jo
xor
mov
ja
or
aas
popa
pop
shrb
push
mov
add
cmpsl
outsl
xchg
add
and
fisttpl
push
push
mov
lock
or
popa
aad
and
mov
in
shrl
jae
icebp
out
xchg
or
mull
or
out
and
xor
mov
arpl
roll
dec
dec
mov
jecxz
popf
pop
rcll
int3
fnstenv
xor
dec
mov
jecxz
pop
push
pop
dec
rcrb
mov
mov
sbb
js
mov
mov
gs
push
shl
test
sbb
and
in
cli
iret
pop
rorb
push
inc
xchg
mov
jnp
jb
jecxz
lret
inc
popa
sbb
insl
xlat
js
ja
jnp
mov
add
stc
sub
lcall
pushf
or
shl
pop
add
ret
mov
push
ljmp
adc
fxch
pop
xor
ljmp
outsl
or
and
push
dec
ljmp
rcr
xchg
fisttpll
ljmp
and
cmp
insl
rorl
mov
insb
ficoms
or
shll
and
insb
adc
and
add
scas
pop
lods
xchg
adc
mov
push
mov
push
xor
inc
mov
out
paddusw
inc
lods
repz
pop
xor
shll
or
ret
xchg
idiv
out
fstpt
jns
push
xchg
cmpl
mov
xchg
push
mov
out
mov
mov
and
pop
fnstsw
dec
or
inc
xchg
and
out
and
pop
mov
mov
icebp
mov
hlt
cmp
enter
int3
cmp
xchg
push
btr
jge
cmp
fucomp
jecxz
sahf
fs
dec
clc
lcall
add
or
xchg
adc
loopne
cli
ja
pop
mov
jl
data16
rclb
push
iret
xchg
les
sarb
insb
sti
out
setl
faddl
mov
sbb
jp
mov
test
sub
xchg
dec
adcb
xor
sarl
xchg
dec
bound
jecxz
addb
pop
repnz
aam
ds
insb
cmpsb
mov
adc
dec
jns
cld
dec
xlat
int3
and
test
es
shll
imul
ljmp
enter
sbb
mov
or
inc
nop
add
test
ds
jmp
cld
jp
adc
add
daa
icebp
cmp
xor
pop
pop
dec
adc
and
aaa
xchg
je
orb
mov
mov
bound
xchg
gs
push
adc
sarl
xor
lods
in
dec
ljmp
imul
mov
popf
mov
rol
adc
cltd
push
dec
push
sbb
cwtl
pop
xor
mov
cmpsl
js
sbb
hlt
hlt
mov
jns
movsb
push
push
cwtl
mov
fwait
xlat
push
sub
sub
xchg
mov
fs
jmp
mov
repnz
leave
lret
jb
dec
cmp
repnz
stc
outsb
pop
push
test
or
adcl
mov
into
mov
lods
and
dec
sub
pop
cli
mov
adcb
pop
or
xchg
push
rclb
ret
setno
xchg
je
cmp
sbb
jecxz
pop
ds
jg
cmc
ljmp
incb
cmp
test
mov
mov
jmp
dec
mov
mov
push
ss
adc
iret
daa
inc
jo
jb
or
pop
mov
mov
mov
jecxz
scas
cmp
enter
mov
repnz
jne
pusha
inc
mov
mov
rorb
sbbl
jle
xor
jg
das
and
pop
mov
ds
sahf
lods
daa
jnp
pop
mov
ficompl
jb
xor
filds
lea
xor
mov
mov
mov
ljmp
jns
repz
stc
test
lods
idivl
js
xchg
lret
lret
sub
mov
data16
dec
mov
jge
sub
std
cmp
mov
mov
scas
jbe
jmp
adc
lret
daa
sub
sbb
dec
dec
or
ret
inc
pop
aam
loope
dec
jle
ds
mov
je
loopne
xchg
inc
mov
sbb
ret
sbb
adc
mov
or
mov
mov
or
xor
jmp
outsb
pop
or
push
mov
nop
mov
fildl
xchg
add
push
das
mov
sarl
pop
xor
mov
ret
inc
add
repz
loopne
mov
jne
test
pop
jae
loopne
out
cmpsb
scas
psubusb
pusha
movsl
adc
nop
add
mov
fmulp
pop
xor
push
pop
adc
cli
data16
cli
adc
mov
in
jp
into
jne
in
push
jge
repz
xchg
loope
or
jp
push
pop
inc
movsb
repnz
and
xchg
lea
icebp
adc
adc
jns
xor
mov
into
jp
nop
cmpl
fmul
mov
jl
and
jbe
out
xchg
mov
imul
sub
arpl
cmp
cmp
pop
stc
sub
adc
scas
sbb
xor
sub
imul
adc
in
in
and
mov
pop
test
jnp
xor
sahf
stos
jmp
mov
loopne
jl
pop
sbbb
xchg
mov
icebp
mov
mov
push
out
mov
cs
and
sub
mov
and
ds
sub
std
add
lods
fwait
in
sub
mov
dec
in
cltd
or
fsubl
cld
jge
and
cmc
cmp
shll
in
dec
outsl
push
and
call
cmp
xchg
dec
cmpsb
xchg
mov
mov
jmp
mov
push
repnz
cld
sti
cli
shr
mov
dec
and
mov
pushf
add
adc
pushf
sub
adcb
fisubrl
jae
nop
orb
cld
pusha
cmpb
outsl
sub
sbb
rcrl
test
xchg
mov
jle
mov
stos
daa
jmp
fdivs
pop
es
pop
jl
and
shrl
xor
andb
pop
call
lods
xchg
add
scas
andl
inc
icebp
fwait
push
xlat
cmp
shll
cmp
mov
pop
out
and
mov
js
mov
sbb
mov
mov
jmp
mov
scas
out
out
test
push
and
adc
cli
filds
mov
sti
imul
call
cld
daa
std
lods
cmpsb
mov
aam
mov
jge
push
jecxz
and
xchg
xlat
fldenv
rclb
cmpsb
aad
addr16
inc
outsl
cmpsl
cld
mull
lahf
fsubs
out
inc
cmp
decb
cld
cmp
mov
sbb
mov
xor
and
cld
adc
sarb
mov
call
xchg
in
jg
ja
mov
outsb
mov
push
push
jle
dec
mov
add
cmp
cmp
jge
out
adc
inc
and
std
popa
popl
pop
mov
bound
daa
mov
sbb
inc
pop
jp
sub
cmp
andl
das
and
xchg
fstps
je
fcomps
cmp
in
fsubr
sub
fwait
xchg
in
rorb
mov
ja
jge
das
lock
mov
and
push
ss
push
and
scas
shll
xor
xchg
lock
jo
pop
fwait
mul
mov
xor
xchg
mov
mov
leave
mov
ret
mov
hlt
popf
adc
jne
xchg
push
mov
push
inc
mov
adcb
push
pop
std
pop
incb
leave
clc
mov
dec
fsub
and
sahf
push
xchg
xchg
stc
test
jnp
mov
xor
insb
add
cmpsb
fidivs
cmpsb
in
cmpsl
ret
test
cwtl
mov
mov
cmp
test
adc
lods
icebp
fisttps
mov
mov
icebp
sbb
mov
xchg
out
pop
xor
cmc
mov
lcall
and
push
pop
outsl
ficoml
fsubrs
mov
cmp
mov
sbb
xor
imul
call
ss
shrb
push
xor
je
lea
mov
lret
cmp
cli
inc
nop
push
mov
shll
xor
sbb
insb
or
repz
fwait
sub
popf
aad
mov
mov
push
xchg
lods
inc
insl
jp
mov
mov
mov
inc
lods
in
pop
leave
push
inc
test
test
addb
cmp
sub
test
cli
pop
lahf
lret
das
add
das
popf
jp
sti
loop
push
inc
das
sub
loope
mov
shrl
dec
dec
xor
addl
mov
test
lods
cltd
adc
pusha
cli
push
add
imul
or
inc
or
mov
lahf
cltd
jmp
push
test
ds
adc
ss
hlt
pop
push
cwtl
out
cwtl
sbb
mov
dec
arpl
push
or
mov
mov
cmc
sub
aad
inc
sahf
dec
movsl
rolb
and
cmp
outsl
pushf
das
pop
cmc
test
in
xchg
loopne
xchg
sub
cmpsb
cmp
fdivs
jmp
stos
dec
xor
push
mov
out
ret
adc
ficoms
mov
xchg
and
ret
mov
jecxz
cmp
shlb
jnp
mov
aad
sub
sub
inc
pop
sbb
lret
xchg
icebp
dec
or
pushf
outsb
fidivs
and
cmp
testl
dec
and
or
stos
rcrl
les
adc
pop
arpl
jle
mov
ret
mov
rcrb
ljmp
scas
sbb
add
out
or
xor
in
pop
inc
push
mov
jae
xor
sub
shlb
jne
je
out
not
cmc
mov
fwait
push
cmpsb
mov
inc
xor
in
test
shr
daa
inc
sbb
lahf
jl
cwtl
jge
or
adc
es
ficomps
pop
ret
jmp
lods
negl
pop
sbb
frstor
insl
pop
mov
jns
scas
lea
push
cmp
cmpsl
mov
inc
push
mov
sarb
dec
mov
pop
push
inc
xor
mov
loopne
xchg
rorl
ret
montmul
cmpsb
sbbb
jne
stos
imul
xor
fsubs
cvtps2pd
push
jmp
call
jnp
xchg
sub
pop
or
inc
cmpsb
rcrb
push
xchg
cmp
movsb
out
gs
ret
dec
and
out
cmp
movsl
fwait
ret
push
mov
and
push
repnz
xchg
js,pn
in
add
out
outsb
dec
loope
lods
test
pop
stc
sbb
dec
push
sbb
dec
faddl
push
and
sub
sbb
ja,pn
cmp
ja
mov
lea
outsl
test
enter
in
jp
ss
xor
sbb
daa
sbb
mov
mov
and
inc
std
int3
sub
jecxz
cmp
push
inc
cmp
scas
or
mov
test
pop
call
fsubr
cs
ja
arpl
pop
xor
sub
bound
sub
outsl
jne
jp
jg
imul
ljmp
cmc
out
ret
sub
stos
pop
pop
sbb
push
adc
movsl
pop
xor
scas
stc
push
btl
xchg
mov
aam
addl
jnp
imul
push
xor
mov
mov
fnstcw
ja
div
jecxz
xor
xlat
bound
xor
sub
rcrl
jle
or
xor
ja
and
fistl
popa
aas
cmpsl
je
test
pusha
lock
pop
push
bound
test
shrb
jns
push
out
cmpsb
pop
adc
mov
and
jp
inc
cmpsl
aad
mov
or
or
jge
lahf
pop
add
mov
dec
pop
pushf
sub
nop
xorl
int
test
scas
std
mov
xchg
jl
mov
jae
cmc
jl
repnz
and
ror
cli
xor
lret
pop
insb
in
stc
adc
cltd
lret
aad
or
ret
pop
mov
pop
cltd
cmc
popa
mov
les
sbb
cmc
das
add
cmp
mov
dec
les
sub
or
sub
xlat
push
jb
lock
lea
in
inc
rclb
sub
mov
loope
sti
popf
cmpsb
fs
and
nop
pop
sbb
cmpsl
dec
push
mov
sbb
stos
mov
ljmp
push
lret
imul
xor
loop
adc
mov
mov
adc
and
add
adc
fs
shlb
ret
xchg
xchg
pop
sub
push
nop
repz
mov
cmp
pop
ret
mov
repz
test
xchg
mov
fimuls
pop
loop
loop
rep
in
daa
test
mov
ret
fsubl
pop
add
cmpsb
loope
cmp
aas
lret
add
mov
jnp
push
sbb
mov
mov
and
in
pop
and
adc
pop
test
inc
inc
arpl
jns
mov
test
mov
mov
daa
repz
lahf
js
add
mov
mov
add
movsl
fistpl
dec
aaa
push
gs
pop
cltd
cmp
leave
pop
sbb
and
cmpsb
and
xor
jbe
inc
mov
dec
dec
cmp
mov
stos
out
mov
test
subl
lahf
push
xchg
sbb
sbb
rcrb
insl
ret
sbb
and
pop
gs
lds
jnp
push
push
fnstcw
dec
pop
dec
jl
movsl
xchg
jne
mov
jecxz
out
xchg
sbb
cltd
xchg
sub
sub
push
cmp
inc
das
add
xor
nop
dec
popa
out
push
sbb
loop
jbe
fst
jmp
mov
sbb
mov
rcll
mov
add
int
lock
add
jg
inc
xchg
shlb
jmp
fists
out
maskmovq
idivl
outsl
dec
push
mov
push
cmp
lahf
push
sti
adc
mov
adc
pop
jmp
mov
dec
jns
daa
sub
pop
push
xor
inc
outsb
test
xchg
mov
and
or
jge
lea
repz
mov
pop
pop
cld
adc
cwtl
mov
repz
sub
push
bound
rcll
dec
out
imull
push
int3
test
sub
insl
mov
lea
outsb
mov
out
fs
aas
xor
add
outsl
jg
cmpsb
fldenv
cwtl
divl
daa
outsb
dec
cmp
aad
jmp
and
sub
movsb
fnstenv
repnz
cmpsl
ss
xchg
adc
mov
enter
pushf
cld
and
scas
sub
jmp
cmp
adc
dec
ss
out
mov
ja
and
sbb
xor
add
sahf
mov
imul
and
leave
daa
pop
clc
mov
ds
add
fstpt
repnz
insl
push
xchg
push
je
xchg
stos
repnz
xchg
xchg
stc
lgs
mov
ret
adc
xchg
and
jl
push
fisttpll
repnz
sti
inc
popf
in
and
dec
in
xorb
add
and
sub
push
jo
xor
in
out
cmp
xchg
ljmp
aas
mov
dec
or
rcl
jns
mov
cmc
out
mov
ljmp
lret
das
lea
mov
jp
cmp
imul
push
fs
stos
xchg
mov
faddl
mov
cmpsl
pushf
sarb
fldenv
test
xchg
mov
hlt
sbb
xor
in
jnp
decb
lcall
mov
add
jnp
jbe
jo
mov
lea
dec
out
cmp
test
addr16
push
sub
aaa
pop
leave
dec
xchg
sbb
sbbl
fsubs
adc
cwtl
and
dec
cmc
pop
in
xchg
cmp
call
jne
gs
mov
and
dec
cmc
pop
in
xchg
cmp
call
jne
sub
sbb
dec
cmc
pop
in
xchg
cmp
call
jne
gs
mov
and
loop
pop
xchg
pop
sbb
push
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
je
fs
roll
incl
popa
mov
xor
out
aam
les
xor
je
fs
roll
mov
mov
hlt
jae
arpl
push
les
pop
movsl
and
fs
roll
mov
mov
hlt
jae
inc
movsb
and
je
jge
jo
addb
cmp
iret
push
ficomps
das
xor
pop
cwtl
mov
mov
es
pop
imul
adc
push
mov
push
out
ds
mulb
fisubs
dec
and
inc
adc
xchg
test
xchg
sti
inc
xchg
pop
adc
mov
add
imul
sbb
add
xchg
mov
cmpl
call
mov
das
pop
lods
dec
inc
in
and
imul
std
dec
jbe
outsb
outsb
ret
mov
imul
mov
push
push
xor
jo
adc
jecxz
roll
mov
mov
hlt
jae
arpl
push
les
xor
adc
pop
mov
push
dec
lret
adc
or
aaa
xor
inc
icebp
push
dec
add
add
out
push
cli
inc
out
cmp
es
pop
shll
inc
out
insb
adc
and
adc
add
hlt
jae
arpl
push
les
xor
je
fs
roll
mov
mov
hlt
jae
arpl
push
les
xor
je
add
add
sbb
imulb
out
call
xor
js
mov
xorb
push
cs
adcb
dec
and
mov
aas
movsl
dec
call
enter
je
jg
push
leave
loop
mov
in
xlat
push
inc
and
mov
jo
sub
sbb
push
test
clc
test
pop
out
iret
xor
sbbb
iret
and
rcr
push
adc
lds
das
jbe
imul
cmpsb
in
jp
enter
shrb
pop
loope
je
and
rcrb
sub
cld
mov
hlt
neg
outsl
xchg
add
test
lret
repnz
mov
xchg
andb
bound
repz
insl
sbb
ljmp
sbb
mov
stos
aam
mov
jecxz
lea
xor
mov
scas
mov
xor
or
xchg
lds
repz
loopne
imul
out
sbb
loope
xchg
inc
call
mov
mov
xchg
mov
outsl
push
daa
push
mov
outsl
push
adc
rcll
xchg
push
jb
cmp
xchg
adc
notl
movsl
jl
dec
ja
les
stos
outsl
push
shll
stos
mov
lods
add
jns
gs
xor
jl
cmc
jmp
push
adc
scas
dec
fbld
adc
test
pop
outsb
jb
repz
cltd
jns
push
mov
mov
push
in
pop
repnz
mov
fcmovnu
div
xor
scas
sbb
pop
shrb
mov
lret
lods
int
or
in
cmpb
mov
int
in
mov
aad
lret
in
cmpsl
scas
sbb
out
jnp
mov
inc
int3
lds
adc
mov
or
ror
sub
rcrb
in
adc
jae
cli
push
or
test
pop
jns
not
and
mov
inc
sub
inc
jae
mov
and
push
xchg
je
mov
or
sub
adc
addr16
popl
jmp
outsb
hlt
push
cltd
xor
cmp
jbe
pop
xor
or
add
movsb
push
push
daa
xor
daa
push
xchg
ficoms
es
mov
cmovge
ret
push
add
mov
xlat
test
xchg
xchg
ja
sti
lahf
jbe
adc
hlt
std
insl
filds
cmp
es
jo
xchg
dec
add
push
add
dec
pop
pop
add
fadds
popf
cs
pop
jo
pop
aad
cli
inc
dec
pop
add
imul
pop
inc
inc
es
or
and
jnp
pop
or
shl
outsl
lret
jne
out
je
scas
aad
dec
call
xchg
popf
call
arpl
test
scas
ss
xchg
fmull
mov
inc
lds
test
mov
sub
mov
xor
add
popa
out
mov
shlb
mov
or
aad
shll
or
inc
lea
fistl
and
in
arpl
adc
xor
pop
dec
cmp
sub
ss
and
cwtl
data16
neg
imull
jno
inc
dec
xchg
push
mul
cmp
and
fcomps
popa
es
mov
test
cmp
mov
inc
sbb
pop
sbbl
inc
lock
hlt
js
and
pop
mov
repz
mov
and
adc
jecxz
sti
shlb
xlat
mov
push
push
sub
xchg
jecxz
scas
test
loop
add
fmul
mov
outsl
xor
ss
cmp
shr
mov
xor
pop
fldenv
out
mov
adc
push
mov
jmp
xchg
adc
push
push
out
sbb
movsl
sub
lret
sbb
decb
fs
dec
rcrb
or
outsb
pop
outsl
xchg
mov
jne
out
and
or
lret
add
pop
outsb
test
fwait
add
out
adc
mov
sub
out
out
mov
sub
xchg
add
inc
out
cwtl
add
das
cs
ds
imul
sarb
inc
cmc
aam
jecxz
jl,pn
push
adcb
repnz
cmpsl
sbb
inc
jb
and
sahf
pushf
lret
jnp
leave
and
rcl
out
or
inc
jb
mov
ret
testb
pop
push
adc
daa
stos
xchg
shlb
call
je
fbstp
xlat
lahf
jo
push
push
jne
xchg
inc
dec
xor
je
push
jge
shll
les
stc
pop
and
jo
loop
pop
jp
pushf
ja
add
out
pop
sub
xchg
lods
and
rcrl
lahf
push
xchg
int
dec
jnp
bound
or
outsl
xor
dec
and
xor
lret
lods
test
int3
lfs
and
inc
mov
push
stos
fwait
sub
jmp
sahf
xchg
pusha
loop
out
add
fisttps
lods
xor
pop
sub
xor
mov
or
add
imul
mov
popf
push
sbb
cmpsl
icebp
mov
cwtl
dec
cmp
xor
fbstp
mov
pop
popf
push
mov
mov
out
adc
mov
pusha
mov
jae
xor
mov
test
mov
sbb
add
shll
push
xor
in
stos
sahf
ret
lods
icebp
xchg
addl
insl
outsl
mov
pop
fs
xchg
cmp
add
jno
inc
sub
xor
data16
test
xchg
test
xchg
pop
jae
int
dec
divb
push
push
push
fnsave
pusha
push
test
cmp
lcall
fs
jl
jno
into
jmp
mov
fwait
sub
outsl
popa
mov
mov
jo
in
scas
sub
out
out
test
enter
daa
jecxz
test
sbb
xchg
in
fsubs
dec
arpl
lahf
clc
shlb
out
cmp
ret
sahf
cmp
shlb
pop
movb
inc
push
xor
movsl
jae
stos
cmp
push
dec
push
pusha
out
cmp
sti
sub
pop
lock
loop
ja
aas
out
and
xor
and
fisubs
jbe
or
dec
lods
push
data16
jo
push
pop
or
movsl
fbstp
mov
mov
mov
sub
nop
mov
ret
shr
lahf
std
cmp
roll
int
jle
sub
sahf
ja
cli
lds
mov
xor
stos
cwtl
push
insl
in
sub
scas
ds
or
xor
pop
frstor
lea
lods
pop
cmpsb
and
pop
leave
in
xchg
inc
out
jecxz
xchg
aam
aas
data16
call
int
test
dec
adc
dec
lret
fisubs
cmp
mov
cmp
test
mov
lods
pop
scas
fildll
cld
adcl
gs
push
mov
jo
lret
xor
jne
jno
or
adc
rcrb
inc
cmp
push
add
imul
in
xor
xchg
jg
sub
rcrb
pop
dec
inc
rcrb
push
pop
lret
xor
xlat
push
scas
cmp
test
jge
inc
jo
sbb
daa
cmp
rcll
jl
sbb
add
hlt
dec
das
stos
lods
inc
xchg
jg
sbb
xor
mov
lods
rolb
shlb
ljmp
inc
sbb
repnz
jne,pt
mov
xorb
add
sub
xor
inc
or
nop
mov
imul
xchg
jne
inc
mov
xchg
and
mov
call
xchg
loopne
popf
hlt
cltd
adc
test
shrl
sarb
out
jl
jp
rcll
scas
fldt
insl
leave
sti
in
mov
cmp
movsb
mov
push
ffreep
cs
add
adc
icebp
idivb
lock
jmp
loope
sub
dec
jge
jbe
fwait
push
xor
iret
dec
jno
pop
or
adc
fwait
adc
ljmp
arpl
inc
lcall
in
outsl
vxorps
test
cmc
mov
mov
clc
push
cmp
dec
fsub
ret
adc
push
cmp
dec
push
scas
test
test
sbb
dec
push
in
mov
add
iret
insb
push
sub
jg
lret
aam
dec
inc
adc
mov
or
mov
mov
bound
xor
mov
div
bound
inc
mov
mov
mov
sbbl
sbb
dec
dec
adc
pop
cmpsb
jp
jo
pop
xor
es
movsb
test
loopne
xor
into
mov
inc
dec
dec
pusha
lock
loop,pn
ja
fistps
cmp
push
sub
shlb
jmp
out
mov
aaa
movsl
adc
and
sub
pop
std
ja
mov
pop
bound
and
sub
nop
inc
pop
stc
inc
jbe
push
bound
imul
faddp
or
in
xchg
pushf
xlat
cmp
ret
push
add
jo
jo
daa
and
insl
nop
push
xor
shlb
pushf
faddl
or
jmp
xchg
cmp
or
jns
clc
sub
dec
lcall
xor
in
mov
shl
cli
push
adc
std
dec
ss
aad
addr16
mov
cmpsl
or
gs
push
inc
mov
ds
xchg
lods
gs
lret
loopne
imul
arpl
iret
xorl
jo
call
dec
imul
and
jae
andb
repz
out
jb
push
rcl
push
insb
test
subl
mov
icebp
adc
in
mov
divb
gs
sahf
jecxz
int
mov
pop
pop
lret
pop
sbb
shl
dec
xor
imulb
fsubp
jl
shrb
jo
dec
dec
mov
jne
add
arpl
inc
add
adc
mov
das
fucomi
jnp
mov
jmp
or
or
das
jp
push
fistpll
add
das
ror
and
xor
pop
cmp
inc
daa
jnp
daa
xlat
mov
xchg
fstpt
or
and
dec
stc
into
mov
enter
push
shrb
jo
jns
and
cmp
mov
push
mulb
imul
pop
sub
xchg
fdivs
out
iret
or
arpl
in
sbb
mov
cltd
pop
push
mov
ret
or
and
shrb
movsl
xlat
sti
xchg
xchg
dec
out
in
lret
mov
mov
mov
pop
inc
xchg
xor
pop
mov
push
mov
jle
add
ret
sub
dec
or
cmp
cmp
xchg
sub
mov
jmp
bound
sbb
sbbb
leave
hlt
cmpl
adcb
fs
fsubrs
popf
inc
sbb
inc
mov
mov
jnp
pop
mov
sub
dec
xchg
cmpsb
setle
int3
jno
insb
mov
push
mov
adc
gs
sbb
push
cli
sti
xchg
xor
xor
lds
rol
jb
lods
cli
das
cmc
insl
sti
inc
iret
add
bound
mov
xor
mov
sub
call
cltd
xchg
data16
gs
mov
mov
out
popa
mov
pop
pop
fcmovne
loop
sbb
lds
lods
daa
cli
pop
rclb
mov
xor
fildll
jge
pop
sti
testw
stos
xor
addr16
in
lahf
jp
cld
popa
xor
add
test
popf
xor
subl
ror
xor
mov
shlb
lea
xchg
xchg
push
push
push
pop
ret
mov
ret
insb
sbb
adc
aaa
aam
xlat
fdivrs
mov
rorl
pop
dec
in
push
int3
rol
and
cmp
jmp
push
pop
mov
mov
adc
add
nop
jmp
or
lods
sub
pop
cld
lret
pushf
add
cmp
mov
bnd
xor
fadds
adc
dec
xor
negl
xchg
nop
adc
in
and
insb
xor
daa
jl
in
and
dec
push
jno
xchg
mov
cs
xchg
out
push
mov
fisttpl
inc
pop
pop
xor
mov
daa
add
jns
sbb
xor
daa
push
jg
dec
jg
rcrb
cmc
sbb
mov
cmc
xchg
jbe
push
iret
ja
or
jb
psraw
xor
sub
fsubl
cmpsb
outsb
mov
mov
pop
stc
dec
inc
inc
mov
fwait
jge
out
pop
sub
or
ja,pn
das
cmpsl
push
orb
adc
cmp
inc
and
mov
mov
dec
and
cmpsb
adc
pop
mov
inc
ja
into
nop
mov
dec
cmpsl
inc
lcall
popf
inc
enter
jge
and
adc
sbb
fsubrp
imul
cmpsb
and
in
add
loopne
test
mov
sbb
inc
fs
push
shl
fisttps
mov
push
add
pop
sub
dec
cmpsl
mov
daa
ljmp
mov
sarl
mov
xor
mov
imul
insl
mov
xacquire
adc
in
pop
pusha
icebp
cmpsl
mov
loop
sbb
pop
adcb
fcmovbe
cltd
notl
fsubrp
lock
nop
inc
sbb
das
shrb
out
leave
xchg
pushf
into
push
scas
push
jne
and
sub
stc
mov
movsb
lcall
jae
ja
roll
jp
or
clc
mov
mov
add
pop
call
out
movsl
scas
addr16
int
xor
jle
adc
ret
repnz
add
into
sbb
sub
imull
outsl
aad
add
ss
mov
pop
sbb
jmp
xor
fcmovne
sub
repz
cmp
sbb
fwait
test
sbb
mov
iret
or
test
daa
dec
push
mov
jp
jl
cltd
pop
add
mov
pop
aaa
ss
in
mov
cli
dec
pop
jbe
cmp
jmp
xchg
push
lods
xor
inc
and
das
dec
xor
into
push
adc
stos
sarl
and
xor
and
mov
bound
sub
roll
push
add
or
das
pop
scas
lea
lds
jno
das
mov
mov
insl
in
cmp
and
lods
xchg
out
lret
mov
add
xchg
shll
aaa
repz
pop
and
sub
cli
and
mov
imul
push
insl
push
mov
push
scas
jb
scas
jle
sub
dec
imul
out
ss
in
sbb
mov
xchg
mov
cs
aaa
inc
das
aas
into
cmc
jp
dec
pop
mov
cmpsb
push
dec
mov
sbb
nop
sahf
pushf
xchg
mov
pop
scas
push
inc
and
push
add
and
xor
imul
stc
in
jo
bound
fmull
xchg
add
xor
push
or
ret
mov
sub
mul
icebp
pop
cs
dec
inc
cwtl
ror
pop
and
adc
int3
pusha
xchg
xchg
mov
xchg
outsb
mov
cli
lahf
sub
pop
in
push
subl
sbb
mov
fiaddl
or
mov
xchg
fisttpll
or
sbb
xor
mov
jmp
test
imul
leave
adc
jmp
mov
adc
in
jb
out
jg
mov
ss
inc
mov
out
shl
aas
lcall
push
iret
sbb
negl
mov
mov
movsb
mov
pushf
and
xchg
std
jmp
shlb
shll
sub
sahf
or
lret
imul
jae
pop
aam
test
xchg
jmp
inc
and
add
jge
inc
or
pop
mov
pop
mov
sub
loop
or
cmp
mov
outsl
es
insl
pop
dec
fcomp
pop
popa
fsubl
lods
sub
mov
int3
je
dec
je
fwait
loop
imul
sbb
fstp
cmc
std
out
push
push
in
or
mov
and
pop
mov
dec
or
fwait
cld
pop
sar
xchg
lock
mov
xor
push
test
pop
pop
pop
sub
pop
mov
js
mov
dec
mov
dec
xchg
addr16
jns
sub
lahf
cmpsl
jg
aad
push
push
outsb
jnp
jg
loopne
pop
jge
das
mov
dec
aam
mov
and
dec
jg
es
or
rcrl
push
xor
fucomp
aaa
shl
stos
mov
data16
jne
bound
std
mov
cmpsl
xor
loope
nop
mov
fwait
or
clc
jg
jne
jge
addb
adc
push
jp
imul
cmpsl
or
mov
dec
cwtl
fidivrl
aas
mov
pop
sahf
xchg
aad
adc
clc
in
pop
mov
pusha
or
loopne
out
add
push
int3
fildl
cld
aad
xchg
stc
push
mov
mov
mov
jge
repz
insl
ss
xchg
mov
rcr
xor
add
pusha
pop
xchg
aad
lods
in
inc
shlb
sub
fucomip
add
mov
mov
push
cmp
push
rolb
addr16
dec
adc
sarb
and
adc
and
inc
adc
lret
mov
cmpsb
jnp
xlat
xchg
mov
sbb
pop
dec
push
and
push
jnp
jne
pop
mov
js
movsl
push
iret
mov
out
out
pop
jne
xchg
jge
faddl
pop
in
xor
rcrl
jl
js
out
clc
adc
ljmp
cmp
dec
or
jecxz
mov
xchg
sarl
jmp
int
xchg
lds
es
imul
int
stos
push
and
fs
jmp
das
lods
fs
jbe
and
ret
lcall
add
and
jl
pop
loope
fcmovne
xor
test
and
lock
or
inc
jp
xor
ret
ret
ret
scas
fcmovu
repz
movsl
jbe
cmp
pop
ss
movhps
adc
outsl
int
adc
push
ds
sbb
out
sti
lock
cmp
mov
and
mov
mov
outsb
addl
mov
clc
push
pop
xchg
mov
mov
incb
and
pop
push
scas
fstl
or
inc
xchg
aas
into
pop
or
pop
inc
cmp
test
adc
lods
xlat
loop
jne
int3
test
sahf
in
fistl
mov
or
test
inc
cmp
adc
jmp
int3
mov
rclb
int3
fstpt
sub
jmp
sbb
adcl
stos
ljmp
pusha
bnd
xor
arpl
push
sub
adc
in
roll
cli
fidivs
inc
pop
jne
and
popf
rcl
add
push
mov
lds
xchg
insl
mov
push
outsl
push
pop
and
outsl
lret
andl
sub
and
xor
mov
jg
jmp
jg
scas
add
fwait
mov
or
mov
and
imul
es
jecxz
gs
jmp
mov
inc
inc
rolb
cmp
aas
push
and
out
lcall
int
into
out
leave
scas
popa
test
ss
inc
dec
xor
jg
loop
and
dec
and
out
sbb
or
xchg
fdiv
lcall
dec
std
loopne
jne
dec
fwait
jnp
repz
adc
fwait
fwait
lret
push
xchg
imul
push
xor
jae
jg
inc
jge
icebp
and
mov
jle
cmp
and
gs
iret
repnz
shlb
rcrb
fwait
mov
clc
xor
out
repnz
mov
leave
push
jno
clc
popa
jg
mov
cmpl
mov
imulb
sarl
test
addl
test
mov
jbe
test
aam
test
push
and
aam
and
mov
aam
mov
mov
repnz
push
ds
jmp
sti
jno
cmp
mov
inc
pop
pop
mov
stos
xchg
repz
out
enter
sub
xor
shlb
imul
hlt
scas
insl
mov
inc
imul
aam
xchg
roll
dec
dec
pop
sub
push
jecxz
pop
and
sbb
stc
mov
out
jae
movsl
mov
lea
adc
dec
mov
or
pop
cli
rol
sbb
mov
jo
loopne
les
cmp
pop
pop
xchg
cmp
mov
popa
xorl
js,pn
clc
jns
cmp
dec
jb
jmp
cwtl
xchg
arpl
notl
shll
les
in
in
jnp
cmp
push
or
stos
popf
pop
rorb
jl
xchg
mov
push
stc
insl
dec
aad
test
das
negl
cmp
fs
xor
ds
adc
mov
hlt
hlt
jecxz,pt
xchg
sbb
in
push
sub
sub
jecxz
roll
mov
mov
hlt
jae
arpl
push
les
xor
je
fs
roll
mov
mov
hlt
jae
arpl
push
les
xor
je
fs
roll
mov
mov
cmc
jae
arpl
push
lds
xor
je
fs
roll
mov
mov
or
leave
jle
les
mov
jl
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
ret
pop
rorl
jns
imul
in
push
enter
stc
add
xor
jecxz
repz
aad
leave
pop
stc
jae
add
adc
ret
inc
rcll
popa
repz
add
xor
push
ljmp
jo
insl
lret
pop
mov
orl
sub
dec
movb
and
mov
add
pop
outsl
ret
push
jo
cmp
movb
es
out
test
push
xlat
and
push
cmp
pop
and
dec
jnp
fstl
pop
je
fnstcw
leave
pushf
xchg
sbb
mov
mov
shlb
sbbl
sbb
fldt
push
push
fs
movsl
jnp
and
mov
mov
cwtl
jl
xor
ss
cli
push
mov
es
cmpsb
jmp
movsb
adcl
lods
pop
cmp
jns
mov
mov
aas
mov
imul
dec
rcrl
pusha
repz
fsts
arpl
jae
add
xor
xchg
or
sbb
push
add
pop
mov
jp
addr16
addr16
mov
push
lds
incl
dec
mov
lods
push
lods
and
mov
xor
stos
pop
mov
mov
xchg
or
fsts
arpl
jae
add
xor
jecxz
repz
fsts
arpl
jae
add
xor
pop
xlat
imul
lret
xchg
into
push
mov
inc
xchg
lds
ljmp
cmovno
adc
jle
cmp
aas
jg
stc
test
pop
das
push
mov
xchg
pop
cwtl
lahf
inc
aad
dec
and
push
mov
arpl
jns
mov
stos
lock
les
or
cmp
adc
sbb
mov
push
lods
jno
cltd
lock
and
jge
pushf
clc
ljmp
dec
xchg
xor
lcall
lds
xchg
xchg
dec
inc
xor
xlat
inc
in
add
ret
mov
in
iret
jl
and
mov
mov
stc
mov
aad
aas
rorl
or
hlt
mov
sub
lahf
insl
add
aam
jno
pop
jl
add
mov
ret
jae
fidivl
roll
lahf
sbb
adc
cli
cmp
add
xorl
xchg
lret
call
push
rcl
fwait
sub
jg
jno
push
and
cmpsb
inc
sub
xchg
push
loope
sbb
test
stos
mov
fsubrp
push
or
in
rorl
pushf
aam
movsl
loop
add
xchg
ds
adc
add
mov
stos
sub
sbb
cmp
scas
sub
jl
and
jnp
mov
mov
mov
mov
mov
addr16
mov
addb
lea
out
mov
negl
in
cmp
filds
sbb
inc
aaa
mov
jnp
dec
mov
call
fimull
daa
and
adc
xchg
mov
and
pop
adc
mov
aad
aad
cmp
jns
add
push
xchg
or
test
mov
clc
hlt
mov
adc
lods
fcompp
lea
in
add
pushf
mov
mov
pop
pushf
fsts
xchg
cmp
lahf
lahf
dec
xchg
test
adc
jbe
xchg
aam
lret
imul
out
push
jecxz
push
jae
lods
shlb
xchg
pop
sub
stos
or
cs
push
mov
or
pop
dec
scas
xchg
jl
out
mov
cmc
mov
adc
and
jns
xchg
std
mov
gs
dec
lock
ja
sbb
jg
cmpsl
stos
es
push
jae
push
imul
nop
mov
aaa
mov
jecxz
pushf
mov
push
pop
hlt
pop
sub
and
sub
mov
add
popf
push
pop
or
popf
inc
mov
xchg
repnz
adcb
ja
ljmp
out
gs
push
or
jmp
aas
scas
cltd
lds
push
pop
dec
out
or
lret
es
mov
mov
in
mov
std
faddl
cmp
pop
lret
push
jmp
aam
std
in
pop
in
into
add
mov
push
loopne
ror
ret
scas
mov
ror
mov
fsubs
in
dec
clc
and
icebp
ds
pop
notb
pop
dec
push
mov
cltd
dec
cltd
shl
arpl
fisubrl
insl
into
fs
and
sub
jno
mov
xor
sar
sub
push
pop
mov
ret
mov
add
cltd
push
fldt
xorb
cmp
testb
in
or
pop
sub
mov
mov
cmp
xor
daa
pop
insb
xor
sbb
xor
cmp
xlat
lods
adc
mov
in
jmp
ljmp
pusha
and
add
sbb
call
pushl
into
imul
add
cmc
mov
stos
sbb
mov
into
daa
mov
push
dec
mov
push
mov
mull
stos
ret
addr16
fiaddl
cmpsb
inc
pushf
cmpsl
scas
sub
inc
pop
pop
cs
xor
dec
cli
xchg
xchg
ret
loopne
lahf
in
mov
dec
fists
aam
xchg
fistpll
das
shll
pop
mov
pop
stos
inc
inc
int
push
int
lret
pop
fcomps
lods
out
cmp
out
ficomps
enter
test
mov
xchg
jle
insb
negl
jb
dec
inc
jae
mov
pop
call
cwtl
push
scas
xor
in
mov
or
dec
je
mov
mov
push
in
sbb
mov
inc
dec
loop
dec
and
push
mov
cltd
xchg
aam
pop
dec
and
cmp
mov
enter
add
xchg
call
xchg
sti
dec
outsl
sub
ja
jo
lcall
ljmp
imul
call
xchg
adc
mov
push
inc
std
or
adc
lds
adc
inc
pop
cld
lods
call
sub
mov
movsb
in
das
push
push
mov
lea
push
mov
push
cmp
adc
or
xchg
mov
add
xor
push
outsl
pop
mov
cmp
int
lret
popa
iret
push
scas
add
iret
ret
adc
pop
in
inc
in
inc
fdivrl
mov
rclb
sbb
roll
repnz
inc
mov
add
test
fsts
data16
jo
mov
loopne
aam
sbb
dec
inc
bound
mov
jb
clc
sbb
cwtl
push
daa
in
inc
cmpsl
and
sub
or
jae
lea
sbb
lret
dec
jle
inc
cmp
add
lods
pop
out
mov
stos
fwait
test
loope
xchg
and
loopne
mov
sbb
and
jns
mov
das
push
test
pop
mull
xchg
xor
arpl
ficoms
sub
popf
mov
or
add
push
mov
pop
mov
and
es
aaa
in
jae
mov
sbb
prefetch
mov
inc
xlat
cwtl
adcb
pop
xchg
pop
mov
outsb
ss
cltd
jae
lods
int
jne
adc
fld
inc
cwtl
xchg
jl
inc
cltd
shrl
push
cmp
mov
and
mov
mov
stc
mov
dec
hlt
push
sub
sub
xchg
lds
sub
nop
mov
pop
data16
cmp
sub
out
pushf
test
dec
data16
mov
movsl
dec
push
push
jne
or
jnp
xor
nop
cld
adc
shrl
jecxz
fwait
sub
jns
sub
inc
les
mov
jb
insb
mov
int
movsl
shl
push
js
mov
mov
mov
push
xor
inc
push
inc
out
jae
mov
xor
dec
dec
clc
push
sbb
pop
xchg
and
pop
push
sahf
movsl
cmc
push
pop
xor
mov
push
jbe
or
ja
inc
loopne
mov
pop
xor
lods
nop
rclb
pop
jae
fisttpll
cld
adc
mov
jne
nop
add
sbb
and
pop
shlb
outsl
jno
testb
cmp
mov
mov
mov
in
sbb
and
movsb
fs
rclb
xchg
jmp
fdivrl
mov
mov
in
mov
add
neg
inc
pop
xchg
mov
xchg
lea
lea
sbb
loope
in
stc
inc
jg
jae
mov
insb
es
movb
lret
xchg
cmpsl
jl
sbb
insb
rclb
je
adc
lock
inc
cwtl
xchg
ret
pop
inc
into
sbb
push
pushf
mov
mov
sti
addr16
or
jb
mov
xchg
adc
enter
pop
xlat
xchg
rcrl
call
enter
dec
lret
xchg
mov
pop
in
arpl
stc
push
cmpsb
ss
js
inc
xchg
call
push
fisubl
sbbb
aad
clc
and
outsb
and
and
test
cmpsb
lret
adc
mov
stos
pop
aaa
add
jne
pop
in
sub
xor
mov
pusha
jno
aaa
or
and
je
adc
aaa
xchg
insb
jbe
mov
sub
in
test
add
mov
ret
cs
pop
sub
test
ss
outsb
out
fbld
dec
push
test
mov
icebp
xchg
test
fwait
imul
shl
dec
cs
or
mov
jne
out
scas
jae
mov
cmp
pop
addl
aad
sbb
or
ret
and
add
psubusb
mov
sahf
sbb
imul
pusha
test
in
mov
leave
fistl
fdivrl
pop
push
jns
imul
test
pop
mov
adc
enter
pop
loop
sar
in
iret
testb
roll
sbb
loope
and
sarb
sbb
mov
stc
clc
into
aam
pop
cmp
add
fbstp
addr16
pop
cmc
sbb
xchg
cmpsl
and
sarb
inc
push
adc
addb
fsubrl
mov
inc
in
aam
mov
outsb
mov
add
shrl
sahf
or
mov
stc
add
mov
inc
pop
push
sbb
add
xor
inc
fwait
add
xor
sarl
andb
ljmp
xchg
jmp
xor
inc
lahf
test
js
outsb
rorb
pop
into
mov
cli
dec
push
addl
mov
sub
and
sbb
fcmovb
insl
add
movsb
sub
inc
cmp
adc
aad
or
fldln2
cltd
jbe
fcmovnbe
ja
xor
adc
test
adc
sti
xor
pop
aam
adc
gs
adc
aas
xor
sbb
jecxz
cmp
loope
arpl
sbb
int3
jge
iret
adcl
in
out
outsl
sti
pop
in
cld
rdpmc
cmp
shll
sub
fstpt
dec
mov
push
rcll
cmp
clc
dec
loope
sbb
push
pop
das
sbb
das
ror
cwtl
imul
daa
aas
sahf
add
mov
xor
mov
std
das
pop
xor
inc
je
jle
add
lods
es
mov
mov
mov
rcll
push
js
rcll
push
cmpsl
outsl
test
dec
mov
cmp
idivl
mov
adc
cli
std
test
sub
and
adc
or
int
lods
lahf
pop
out
imulb
cmc
mov
iret
push
out
stos
and
gs
cld
mov
stc
popa
iret
test
icebp
mov
push
inc
push
push
or
mov
xor
push
and
push
xlat
pop
pop
mov
ffree
sub
mov
dec
jg
dec
decb
pushf
fcoml
push
aam
fnstsw
mov
sub
mov
mov
cs
fsubrs
sbb
mov
fcompp
imul
mov
hlt
inc
ss
dec
and
mov
jmp
ja
mov
push
sbb
sti
xor
inc
mov
repnz
pop
jbe
pushf
lcall
xor
xchg
cmp
into
loop
pop
and
bound
inc
sti
loope
aad
xchg
jb
dec
scas
repz
adc
and
mov
sub
leave
movsl
sub
dec
repnz
cmp
pop
jne
add
dec
jg
andb
or
jae
jnp
in
mov
mov
cmc
stos
mov
lcall
lcall
pop
shlb
sbb
lea
xchg
sbb
pop
stos
xchg
adc
push
aam
dec
insb
lea
test
jge
pop
and
call
add
addr16
mov
adc
adc
ja
dec
jp
lret
hlt
inc
cli
and
cs
fstpt
dec
loope
inc
jge
stos
push
sbb
loopne
scas
clc
fldl
cmp
and
aaa
iret
sbb
fldcw
pop
xchg
out
or
mov
scas
mov
pop
dec
xor
push
out
cli
inc
sbb
ret
mov
imul
xchg
or
lret
lea
std
xchg
dec
fstl
in
les
stos
sub
pop
mov
push
jmp
lods
pop
xor
dec
in
ljmp
sub
dec
inc
mov
xchg
pushf
pop
into
mov
adc
inc
aad
push
add
sub
sbb
dec
mov
dec
cmp
jle
inc
les
or
add
xor
fadd
stos
std
pop
sub
repnz
fildl
inc
fwait
loope
jnp
sbb
mov
sti
add
mov
cltd
dec
mov
pop
or
pushf
outsb
and
jbe
lds
inc
outsl
or
sahf
sub
ja
inc
jmp
adc
jge
adc
inc
mov
mov
xchg
pushf
sbbb
mov
dec
inc
xor
pop
mov
jmp
or
dec
shll
mov
shl
push
mov
sbb
in
out
adc
fildl
pop
fwait
sbb
gs
fidivl
inc
xor
mov
and
add
lahf
sarb
xchg
leave
shll
and
movb
pushf
mov
gs
xchg
mov
movsb
pop
clc
cmp
movsb
pop
lock
jmp
dec
test
loop
cli
cli
adcb
cmp
lods
dec
mov
scas
outsl
data16
test
push
dec
jo
orb
mov
xor
pop
roll
sub
mov
push
sti
mov
in
lret
sahf
jbe
outsl
push
dec
stc
and
iret
cmpsb
push
xchg
mov
sbb
inc
lahf
cmp
cld
out
stos
jno
pop
cs
xchg
jge
mov
andb
and
stos
ret
ficompl
mov
xor
inc
mov
aas
outsb
js
ret
jbe
and
xorl
inc
push
xchg
sbb
adc
mov
add
push
nop
xorl
pop
hlt
xchg
popf
shlb
dec
adc
add
es
pusha
lahf
cltd
cld
addb
subl
int3
mov
mov
sbb
aaa
xchg
xchg
loope
sub
push
lock
add
shlb
push
stos
nop
push
cmp
test
push
insb
xor
mov
test
mov
out
or
icebp
andb
add
jo
and
fists
xor
or
xchg
scas
hlt
insb
rclb
rorl
into
sub
aam
int3
daa
adc
fsubl
pushf
js
jo
lret
sbb
nop
cld
mov
pop
cli
jns
std
jg
pop
adcl
xchg
inc
iret
cmc
mov
dec
push
lock
mov
or
jnp
xchg
xchg
cmc
add
loope
xchg
mov
loopne
jne
sbb
and
mov
addb
pop
add
call
add
outsl
loope
in
jg
xor
or
sbb
out
xchg
push
fs
xor
aas
ss
addr16
and
cli
xchg
sahf
aaa
push
mov
push
jbe
shr
adc
lahf
xchg
scas
pop
pop
and
dec
insb
fimull
iret
push
imul
xchg
es
gs
push
and
fs
fsubrs
ja
push
add
scas
push
adc
ss
fadds
pop
repz
dec
setge
push
int3
dec
cltd
dec
lock
shll
xchg
pusha
mov
mov
push
adc
adc
mov
sbb
jno
daa
icebp
dec
es
add
loope
aam
pop
jmp
arpl
xchg
js
iret
scas
xor
dec
clc
and
popf
mov
adc
cmp
and
mov
inc
xchg
dec
push
cmp
inc
pop
jbe
jae
stos
xchg
push
pop
scas
jbe
mov
pop
xchg
outsl
xor
lret
jns
mov
sbb
push
paddusb
rolb
xchg
sti
aam
fildl
inc
pop
incl
dec
dec
xlat
ffree
mov
cmp
mov
or
xor
pop
shrb
pop
ss
outsb
bnd
aam
or
push
shll
and
cmc
cmp
lret
mov
xor
std
or
jae
lock
lods
pop
push
mov
mov
orl
sub
movsb
dec
inc
mov
das
scas
in
sbb
sar
and
xor
mov
loopne
inc
xlat
in
das
xlat
xor
jae
adc
dec
and
push
xchg
jnp
sbb
add
jmp
adc
aas
push
cmp
and
lcall
shll
inc
pop
inc
xor
orb
ljmp
ja
lret
mov
add
sbb
sub
jnp
in
jbe
xlat
sub
jecxz
mov
aaa
and
sbb
insb
sub
test
cmp
leave
stos
sub
xor
shll
les
mov
xchg
jne
jp
int3
jns
sti
es
sub
testl
negb
and
arpl
and
outsb
pop
add
mov
push
mov
jmp
iret
addr16
popf
xchg
popa
xor
push
push
imul
sarl
shll
add
enter
mov
pusha
jbe
cmp
xor
sbb
subl
dec
js
and
adc
dec
insl
lock
out
ljmp
mov
or
dec
xchg
sub
ljmp
jle
call
push
ja
shll
lcall
test
fsts
insl
add
add
sub
mov
adc
mov
xchg
lock
int
lahf
lret
daa
jne
xchg
inc
mov
xchg
clc
dec
loopne
les
add
cltd
mov
sbb
mov
fidivl
jo
nop
sbb
mov
cltd
arpl
and
stos
cmp
addr16
mov
pop
aam
repz
xor
loope
leave
jmp
xchg
sbb
movb
pop
jne
out
pusha
sahf
rcr
sbb
mov
les
insl
pop
mov
sbb
dec
dec
aaa
nop
mov
sub
push
push
cmp
rolb
fwait
mov
mov
lret
mov
jns
or
sub
insb
jle
pop
out
xor
popa
out
cmc
lods
push
aaa
jae
stos
xchg
call
jne
sub
xor
add
test
out
push
jp
test
mov
sub
sbb
shl
and
movsb
xor
insw
rcl
jge
jno
rol
mov
and
je
jp
cmc
cld
in
popl
rorl
adc
mov
mov
mov
mov
mov
into
or
push
cmpsb
fldt
xchg
jno
inc
xor
push
gs
fxam
pusha
das
rolb
pop
mov
mov
sti
mov
iret
add
fcmovbe
inc
lods
dec
inc
pop
pop
test
mov
or
adc
les
aas
imul
mov
adc
adc
cld
fidivs
loope
adc
mov
outsb
clc
dec
jo
cld
insl
dec
cmp
aaa
cmp
mov
xor
dec
mov
sarb
das
ret
mov
cli
mov
cmp
nop
cwtl
aaa
lock
arpl
dec
dec
or
in
call
mov
sub
lret
rcll
mov
xchg
jo
adc
push
iret
push
inc
stos
aam
test
sti
ss
aam
mov
adc
js
mov
ret
xchg
pop
lahf
push
int3
rclb
add
push
ret
mov
movsl
jo
sarb
push
cmpsl
fnsave
movsb
xchg
das
push
imul
mov
add
decl
ret
mov
xchg
lea
sti
in
mov
push
xor
nop
and
scas
roll
push
cwtl
sbbl
lahf
out
es
fiaddl
and
inc
orb
mov
call
inc
mov
outsl
mov
xchg
push
xchg
test
adc
xchg
movl
in
mov
or
xchg
pop
loope
testb
xchg
pop
pop
and
ljmp
xor
mov
dec
inc
es
sbb
xor
xor
xor
jp
inc
test
adc
add
dec
hlt
xor
loope
decb
lock
lds
ret
mov
fsubl
scas
in
inc
aaa
cmpsl
jbe
jl
mov
or
push
or
jbe
sbb
cmc
mov
loope
dec
mov
jb
insl
push
push
inc
mov
jmp
inc
sbb
test
xchg
push
and
pop
lods
mov
mov
add
cmp
pop
movsl
pop
repz
push
stos
in
cmp
jno
out
orl
sbb
int
jg
inc
sbb
in
cli
sub
ds
mov
mov
mov
lea
inc
out
cmp
adc
sub
or
mov
xchg
lret
adc
rcl
jno
leave
sub
mov
ficomps
out
jg
cs
cmp
ret
insl
mov
aas
or
mov
lods
mov
scas
repz
mov
mov
xchg
outsb
xlat
addr16
sbb
addr16
xchg
xor
mov
pusha
lahf
fmull
mov
add
xchg
repz
loopne
mov
dec
jns
imul
fsts
arpl
jae
add
xor
jecxz
repz
fsts
arpl
jae
add
xor
jecxz
repz
fsts
arpl
jae
add
xor
jecxz
repz
fsts
leave
stc
jae
je
fwait
neg
int3
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
aad
lahf
sbb
sub
dec
or
shrl
lea
jne
test
mov
lahf
push
fistps
out
sub
push
add
loopne
clc
dec
cmpsb
pop
cwtl
outsl
test
mov
mov
cmpsl
push
cmp
push
mull
call
sti
inc
mov
pusha
fistl
sbb
push
fdivr
or
sbb
cmp
sbb
fsubrl
out
out
rcll
cmp
xchg
addr16
jo
dec
adc
or
ss
pop
xor
andl
cmc
add
lahf
add
xor
and
out
or
jmp
sbb
mov
pop
dec
insb
xor
ljmp
mov
dec
ja
das
pop
arpl
lret
adc
outsl
sahf
pusha
movsl
notb
pop
sbb
jmp
loopne
cmp
aas
or
loop
loop
xchg
loopne
xor
addps
cmp
fwait
loopne
sarb
ds
loopne
fisttpll
les
js
or
sbb
sub
stos
push
enter
ljmp
outsl
mov
mov
dec
cli
aaa
lret
adc
lods
mov
in
pop
xchg
jg
mov
test
dec
push
fwait
and
cmp
or
sbb
push
lahf
push
lret
adc
pop
mov
addl
or
mov
sub
pop
int
lret
out
lods
mov
mov
fistps
out
sub
cmp
enter
call
pop
cwtl
outsl
test
mov
scas
push
fistps
out
sub
cmp
enter
call
pop
cwtl
outsl
test
mov
notb
ret
sti
outsl
call
pop
inc
lods
pusha
add
dec
xlat
into
cmpsl
es
adc
pop
xchg
popf
add
popa
push
xchg
add
push
mov
sbb
push
jecxz
inc
lock
outsl
and
mov
or
inc
add
or
cmpsb
pop
push
cmpsl
aaa
xor
icebp
or
adc
pushf
out
add
ret
dec
push
int3
mov
pop
into
in
scas
mov
shll
push
leave
in
inc
jecxz
sub
ret
jge
inc
ja
fisttpll
jmp
test
mov
int3
push
adc
mov
inc
push
push
aas
push
push
call
jae
add
pop
or
repz
jns
icebp
pop
iret
add
stos
stos
fstpt
mov
mov
popf
out
mov
mov
call
popf
or
xor
dec
cli
xchg
fcmovb
and
iret
shll
sub
fbld
mov
into
cmp
and
pop
mov
movsb
pshufw
imul
mov
xlat
lds
push
inc
clc
imul
pop
rorl
hlt
sbb
and
ficoml
imul
lds
jbe
mov
mov
sbb
pushf
push
into
mov
adc
ret
xor
and
adc
aaa
xor
dec
pop
fcomip
mov
mov
cmovb
mov
pop
insl
jg
pop
sub
add
mov
xor
mov
inc
testl
aaa
xor
mov
mov
je
dec
push
jb
mov
iret
je
or
inc
out
and
fld
cmpsl
aad
push
and
mov
and
xchg
mov
inc
lahf
jnp
dec
dec
push
ficompl
mov
cmp
cltd
jle
lods
mov
out
bound
mov
mov
call
data16
push
inc
test
lods
scas
inc
ret
xor
sbb
les
into
stos
lahf
push
mov
lds
aad
in
mov
adc
push
mov
enter
int3
jo
repnz
cmpsl
inc
mov
arpl
xor
mov
mov
je
sbb
out
imul
xorl
cmp
rorl
or
sub
sbb
jle
pop
inc
push
data16
inc
iret
fstpl
rolb
lret
decl
xchg
sub
rcrb
cs
shll
in
por
adc
mov
fcomip
pop
fcomps
testb
cwtl
ror
insl
mov
cwtl
lods
or
into
dec
bound
push
pop
or
jo
adc
xor
imul
pop
mov
mov
hlt
sbb
push
pushf
push
bnd
push
sub
push
push
mov
notb
xor
lea
mov
shrb
and
lret
shll
std
sbb
cmp
loopne
xchg
mov
aaa
pushf
pop
mov
in
pop
sub
and
int
lret
pop
mov
and
aam
xlat
xchg
popa
xchg
rolb
loope
shrb
push
mov
mov
xchg
mov
fdivrl
sub
mov
mov
adc
adc
cmp
ljmp
inc
cmpsb
jb
test
xor
xchg
insl
fildll
lret
mov
mov
ss
fiadds
adc
jge
mov
aad
pop
pop
dec
mov
arpl
sub
pop
das
or
push
repz
popf
push
sbb
scas
subb
cmp
cmp
dec
mov
data16
cmp
sti
or
cmpsb
adc
sub
add
xchg
jp
out
or
mov
xor
insl
adc
xor
out
push
jns
jge
xor
jge
aam
insl
out
xchg
push
sti
icebp
and
jbe
inc
mov
pop
mov
jno
pop
xor
das
xlat
loop
fsubs
bound
add
in
pop
xchg
in
movsl
addr16
jg
bound
movsl
push
mov
mov
xchg
jmp
repnz
xchg
push
aam
add
add
inc
dec
mov
mov
ret
push
push
icebp
pop
jl
push
cmp
in
mov
cs
shlb
scas
add
sbb
sub
popf
imul
ja
xchg
add
cwtl
lods
dec
insl
push
es
mov
cmp
inc
movsb
fbstp
jl
mov
dec
pop
xchg
or
dec
js
mov
insb
cvtps2pd
mov
and
or
orl
mov
pushf
pop
and
xchg
loop
sbb
pop
iret
and
sbb
jne
sbb
ficoms
pushl
int3
add
popa
and
mov
frstor
xchg
stos
lods
shrb
fstl
mov
dec
xchg
icebp
out
ja
ret
pop
cmp
jb
imul
sub
lds
adc
mov
cmp
ljmp
pop
cmp
fnstsw
xor
push
xchg
mov
pushf
or
cmc
imul
sub
lcall
add
mov
mov
das
scas
cmc
test
cmp
dec
mov
add
push
fistpl
lock
mov
or
stos
xchg
sub
sub
adc
jge
roll
mov
xor
das
jge
loope
mov
in
js
pushf
inc
lret
sbb
and
adc
add
jecxz
lret
sbb
fadd
pop
dec
sub
ja
cmp
push
sbb
jp
cltd
in
es
ret
test
fwait
mov
out
dec
mov
add
inc
fadds
pop
add
fcmovnu
sub
dec
mov
icebp
fs
rolb
xor
cmp
fnsave
push
jns
add
mov
ja
sbb
pop
mov
xor
insl
out
or
cmp
cltd
aam
aaa
mov
push
popf
adc
cmp
test
or
add
aas
jnp
sbb
dec
cwtl
xor
gs
shlb
enter
mov
push
push
mov
sti
mov
insb
mov
imul
cli
out
xlat
sti
inc
push
es
iret
repnz
scas
stos
out
and
pop
in
adc
fisubrs
inc
ret
pop
insl
jp
pop
test
enter
and
cltd
mov
push
stos
nop
in
outsl
cmp
xchg
sbb
xchg
popf
in
mov
xor
jle
mov
mov
adc
mov
ds
out
and
repz
aam
push
rcrl
and
fmul
pop
cmovg
clc
cmp
nop
into
scas
je
push
jno
pop
scas
out
add
add
aad
xchg
sbb
inc
xor
subl
pop
adc
cmc
fucomp
pop
mov
or
aad
sarl
nop
and
jnp
sub
jae
out
mov
xchg
sar
adc
sahf
cmp
imul
push
jbe
pop
add
lea
pop
dec
dec
and
add
xlat
push
cmc
loop
cmp
xchg
inc
inc
dec
sub
cmpsb
or
mov
inc
jge
or
adc
in
pop
cld
rol
fdivs
cltd
jnp
std
lock
or
and
rsm
int
push
cmp
fisubrl
xchg
sahf
orb
shlb
cmp
cmp
imul
enter
fcomps
jnp
jle
pop
mov
pop
jbe
pop
sub
pop
test
mov
add
cwtl
sub
or
mov
jl
aas
icebp
sbb
dec
xor
push
pop
xchg
decl
jmp
sub
int3
and
xchg
andb
and
xchg
or
cmpsb
pop
jne
pop
stos
fstl
mov
xchg
sub
push
repz
cli
xchg
mov
adc
add
mov
ds
aam
xchg
test
imul
clc
inc
enter
or
or
jae
cmpsb
adc
scas
js
xor
xlat
jp
mov
jbe
mov
icebp
sbb
div
dec
push
cld
ds
rorb
jp
repz
ficoms
stos
sbb
mov
sbb
jg
mov
es
movsb
xchg
sti
mov
pop
jmp
mov
lds
or
or
cli
mov
and
xchg
sub
cmp
ds
cmp
fisubrl
pop
ljmp
scas
mov
in
dec
das
xor
push
into
daa
jno
loope
hlt
js
stc
sub
adc
push
jp
hlt
push
jne
inc
adc
push
and
jbe
popf
enter
imul
xchg
add
mov
movsb
movsb
cwtl
pop
ds
arpl
loopne
xchg
push
cmp
sbb
sub
test
cmp
sbb
pop
adc
pop
inc
pushf
int
cmp
arpl
or
test
jo
outsb
or
mov
inc
jecxz
or
push
jge
pop
sub
scas
lea
xchg
jns
adc
loope
repz
ss
cmp
or
xor
sub
outsl
push
sbb
mov
les
cwtl
and
push
xor
push
sub
mov
jns
dec
nop
outsb
mov
ret
push
in
icebp
enter
outsl
es
fdivl
nop
sub
add
sahf
enter
scas
push
js
out
jae
push
and
and
pop
data16
jp
js
in
xchg
into
dec
sti
sub
jbe
or
and
addr16
jge
inc
adc
insb
or
stos
pop
pop
push
aad
xchg
jmp
pop
and
data16
loopne
iret
fwait
lret
fcompl
pop
lea
aam
or
lret
xor
fcoms
in
mov
test
cmpb
mov
shrl
icebp
fsubs
push
leave
push
outsl
cmc
xor
in
test
and
mov
sub
fidivrs
in
cmp
mov
pushf
lret
bound
mov
out
scas
out
sti
cmpsb
shll
sub
pop
pop
das
jae
outsl
xor
call
dec
shl
pop
dec
cwtl
and
insb
jge
stos
js
add
fiaddl
sub
mov
insb
out
xchg
push
incb
fcompl
stos
xchg
adc
rcll
jo
inc
mov
cltd
mov
mov
int
push
jecxz
fsubl
mov
stos
push
in
in
add
xor
lahf
icebp
jae
or
jo
jecxz
enter
ret
iret
cmpsb
mov
test
mov
add
inc
daa
sub
mov
lea
lahf
dec
outsb
jp
test
clc
test
outsb
xor
mov
cmp
mov
and
adc
mov
popf
mov
je
push
mov
dec
pop
or
out
outsb
push
cmp
dec
pop
xchg
xchg
daa
cli
pop
lds
addr16
or
xor
and
cmp
test
jbe
mov
inc
sbb
xlat
jmp
cmpsl
add
and
sub
scas
cmp
test
addr16
adc
hlt
stos
sbb
gs
jl
pop
mov
jecxz
out
pushf
aaa
cmp
or
inc
ja
jae
frstor
stos
fs
cmc
xchg
xchg
cwtl
fimuls
push
xor
fists
push
xor
adc
fsub
daa
inc
jae
cmp
insb
movsb
adc
inc
les
int
push
cmc
adc
js
jno
call
or
inc
test
and
inc
or
cmpsl
out
xor
test
mov
int3
lock
add
movsl
and
add
lods
fcoms
testl
inc
xor
xchg
inc
mov
cli
add
mov
adc
sub
mov
pop
aam
add
sarb
mov
mov
clc
outsl
popf
mov
cltd
icebp
out
push
cmpsl
mov
push
xchg
into
xchg
testb
movsl
mov
mov
push
popa
notl
aam
mov
sub
into
or
jno
insb
dec
xor
pushf
xor
inc
xchg
jmp
mov
aam
or
andnps
jle
test
jnp
inc
or
add
nop
popf
mov
fwait
fwait
cmpb
pushf
inc
rcrl
push
test
mov
cltd
ficoml
movsl
lods
arpl
movl
imul
iret
pop
cmpsl
mov
iret
push
pop
out
or
outsl
out
filds
loope
jns
cs
push
add
das
push
xor
inc
jl
xlat
pop
pop
test
es
repnz
dec
add
push
ret
mov
mov
dec
pop
push
cli
jg
mov
xor
adc
cld
mov
mov
push
test
mov
div
ss
cmpsl
nop
sub
rcrl
pusha
adc
sub
pop
rorl
mull
and
cmpsb
mov
jae
inc
inc
outsl
cmp
fimull
or
lret
or
ret
adc
sbb
imul
insl
ret
lods
pop
ss
iret
insb
push
arpl
aad
mov
mov
or
and
out
jge
ret
sbb
aad
pop
jns
or
in
add
pop
in
mov
outsl
addr16
div
enter
addr16
cmp
bound
cmpsb
push
ret
in
hlt
pop
hlt
ds
fldenv
xor
sub
lret
sub
lds
or
shr
lods
cmpsb
fldenv
enter
mov
outsb
mov
push
xor
jmp
mov
jbe
cltd
lock
xor
push
sub
std
mov
sub
push
int
ret
hlt
add
and
mov
push
imul
jns
cmp
mov
push
add
cmp
pushf
mov
inc
jbe
leave
shlb
mov
pop
jl
jmp
inc
jns
add
push
mov
mov
xchg
xchg
sub
dec
xchg
mov
pop
xchg
jecxz
xchg
mov
arpl
clc
loopne
push
adc
mov
cmp
adc
loopne
xchg
das
popa
push
xorl
mov
imul
xlat
in
push
xchg
scas
jecxz
ja
cmp
fidivrl
mov
pop
jp
cmpsl
xchg
cmp
cmpsl
and
shlb
je
cmp
xchg
pop
iret
jae
xchg
lcall
rcrb
loopne
loopne
arpl
dec
push
movsb
scas
push
movzbl
push
cmc
add
inc
jae
loope
mov
lahf
mov
dec
jge
loopne
loop
sbb
fldcw
inc
popf
sahf
xor
push
mov
xor
cld
shlb
movsl
sbb
mov
and
mov
stos
cmpsl
dec
leave
or
stos
dec
dec
cmp
cmp
sub
mov
movsb
xor
shlb
test
adc
jmp
pop
pop
jg
movsl
pushf
mov
cmp
adc
cmp
mov
cltd
push
aam
sti
xchg
addr16
and
xor
pop
push
outsl
sub
or
adc
inc
popf
cmp
in
mov
enter
xchg
push
jmp
jne
daa
mov
aam
jae
mov
cmp
push
mov
mov
lcall
fwait
inc
enter
icebp
mov
enter
cmp
data16
mov
push
sub
mov
imulb
fnstcw
mov
lods
sub
xor
fsqrt
movsb
imul
add
cld
jg
call
jb
mov
sub
mov
push
out
jg
fsub
jns
xchg
mov
inc
dec
mov
insl
pop
lahf
jns
or
mov
sahf
push
ficoms
mov
js
loope
or
jecxz
loop
sbb
outsb
cltd
cmpsl
test
xor
dec
std
ret
adc
xchg
push
pop
fimuls
fsubl
add
push
xchg
adc
push
mov
cmp
xchg
jle
in
push
push
inc
adc
aam
sahf
mov
aaa
dec
mov
pcmpeqd
dec
push
ja
dec
pop
sbb
add
mov
cwtl
cmp
and
addr16
dec
sub
mov
addr16
sub
push
imul
mov
movb
fmuls
rcll
jbe
movsl
mov
enter
sbb
mov
enter
and
jnp
test
cwtl
int3
scas
push
push
aas
lock
cli
sbb
and
jge
cmp
arpl
mov
mov
fnstenv
sbb
mov
sub
outsl
cmp
aam
int3
xchg
and
cwtl
and
or
leave
loope
popa
cmp
mov
cmc
fsubr
imul
jg
xor
push
nop
jecxz
sub
adc
mov
mov
mov
idivl
xlat
and
idivb
and
mov
xchg
jmp
in
or
sbb
xor
sbb
idivb
push
lret
push
pushf
push
push
inc
pop
sarl
fucomi
sub
add
xor
pop
cmpsl
xchg
dec
add
aas
mov
popl
sub
mov
mov
sbb
sub
pop
divb
lods
fld
out
repnz
xchg
enter
or
mov
jle
fidivrs
clc
jbe
add
jne
fsubl
xor
shll
pusha
lret
cmp
bound
ds
scas
loopne
rcr
push
pop
cmpsb
cs
and
mov
mov
mov
adcl
fnstcw
inc
jp
in
lret
je
and
fcompl
es
ficoms
and
pushf
sbb
lea
pop
sbb
mov
scas
mov
out
xchg
inc
cmpsl
repz
ljmp
test
outsl
pop
iret
int3
fistpl
pop
or
leave
or
movsl
mov
cmp
jge
push
ret
cmp
fcom
jmp
loope
mov
adc
adc
pusha
addl
sub
pop
cmovl
push
dec
popf
adc
adc
jno
mov
cmp
daa
xchg
mov
and
outsl
lcall
xchg
and
js
ljmp
xchg
lods
je
out
mov
mov
sub
mov
idivl
fstp
loopne
iret
pop
out
push
les
push
bound
mov
aam
pop
and
lods
fbld
xor
repz
in
daa
pusha
pop
mov
lods
mov
jg
or
inc
lock
mov
popa
in
xchg
jne
adc
ds
lret
mov
stos
push
daa
gs
out
and
and
sub
clc
hlt
rorb
pop
jecxz
sub
arpl
jae
lcall
dec
aad
jno
push
clc
popf
imul
push
out
pop
add
aad
popa
fdivl
lcall
pop
cld
stos
idivw
mov
push
pop
inc
or
jne
cld
pushf
sub
cmp
cs
in
sarl
repnz
dec
xchg
mov
and
ja
ret
adc
push
imull
aam
test
shl
or
dec
lret
mov
xchg
sbb
inc
scas
repnz
fsub
and
or
mov
repnz
adc
push
cmp
rcl
or
dec
data16
shl
in
xchg
lahf
mov
fabs
adc
arpl
adc
xchg
aaa
pop
cmpl
jne
int
movsb
dec
xorl
fisubrs
and
jle
pop
xor
or
loop
add
pop
mov
adc
imul
mov
and
outsb
and
lea
sub
xchg
mov
fmull
cs
outsb
scas
dec
lds
mov
push
cmp
arpl
gs
ss
jecxz
push
test
hlt
mov
inc
push
dec
sub
jg
frstor
mov
mov
xchg
and
sbb
push
xchg
mov
xchg
xchg
or
jl
jmp
test
test
or
push
pop
push
cmpsl
jns
imul
mov
add
or
cwtl
sub
inc
dec
enter
fcmove
lods
mov
aam
fstl
cmove
lcall
imul
repz
push
cltd
sbb
cld
fs
jle
movsl
sub
or
sbb
testb
rcrb
std
mov
pop
lcall
xor
out
fptan
xchg
xor
xchg
pop
out
pop
int
jo
push
push
and
or
aad
mov
movb
lcall
gs
ret
aam
rcrl
pop
mov
cmp
inc
xor
cld
or
mov
jb
call
bound
cmp
sti
add
outsl
aas
and
pop
movsb
xor
fildl
cmp
push
loop
int
repnz
dec
cli
sub
sbb
adc
jbe
pop
sbb
aas
and
in
out
ds
addr16
lret
in
xlat
sbb
ljmp
out
nop
out
and
or
out
fldcw
test
popa
xchg
test
xchg
mov
movsl
jmp
lds
add
rolb
aad
sub
inc
xchg
or
out
jmp
xchg
test
movsl
mov
push
ljmp
neg
cmp
ss
cmp
xor
mov
pop
and
outsb
daa
sbb
sbb
ficompl
insl
mov
sbb
sub
cmp
enter
call
pop
cwtl
outsl
test
mov
scas
push
fistps
out
sub
cmp
enter
call
pop
cwtl
outsl
test
mov
scas
jo
jl
or
jae
sub
cmp
leave
pop
fsubrl
call
pop
cwtl
outsl
mov
stos
mov
iret
or
sbb
jg
lock
loopne
test
aas
cmp
xlat
loopne
rolb
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
