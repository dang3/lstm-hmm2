out
sub
add
dec
add
add
sub
xchg
sbb
add
sub
add
adc
sldt
add
jmp
je
add
cmp
add
arpl
add
or
add
dec
or
int
add
test
pop
add
push
add
jns
or
add
add
inc
leave
add
fldl
add
or
je
or
fldt
or
repz
add
jb
add
lea
add
jg
add
dec
or
add
mov
add
fistpl
or
out
or
add
xchg
or
xor
or
call
mov
add
or
or
flds
add
or
add
sbb
add
add
add
add
add
out
add
sub
or
add
push
add
stc
push
add
add
add
ja
add
add
loope
or
cmpsb
movl
add
out
add
loope
add
add
jb
jnp
push
add
add
pop
adc
add
mov
add
push
mov
addb
pop
push
or
sub
popl
mov
jge
push
mov
subb
subb
pop
xor
jmp
mov
mov
and
mov
xorl
and
jmp
sub
push
popl
mov
and
cmp
jne
lea
mov
push
popl
mov
and
cmp
je
xor
jmp
push
rclb
xor
in
out
xor
add
nop
mov
push
mov
sub
mov
add
scas
mov
lock
aam
adc
mov
mov
subw
mov
lods
mov
pop
ret
push
mov
push
mov
sbbl
pop
add
push
push
push
push
mov
sbbl
jae
push
mov
addw
andw
pop
mov
add
pushl
mov
add
sub
add
mov
add
xor
lea
mov
jmp
xor
clc
fs
mov
and
test
adc
jmp
jmp
xchg
cmp
jl
out
fnstsw
jl
dec
inc
lock
ljmp
out
fstpt
mov
xchg
js
mov
test
pop
into
push
fistpll
and
js
add
pop
sahf
sahf
adc
jg
dec
add
mov
xor
xorl
rol
xor
inc
cmpb
jne
cmp
je
andw
inc
cmp
jb
mov
push
mov
xorw
pop
add
movzwl
mov
add
mov
add
andw
ja
call
dec
push
xchg
jp
jmp
js
and
addr16
push
cli
add
outsb
cmpsl
pop
mov
addl
andb
hlt
adc
shlb
mov
test
mov
adcb
jecxz
ret
push
imul
jle
jne
push
dec
or
push
inc
cwtl
adc
icebp
nop
test
popl
pop
cmp
jbe
cmp
jae
pushl
pushl
sub
push
mov
orl
pop
movl
addl
pushl
call
call
jmp
mov
sub
sub
xor
dec
xchg
jecxz
jno
and
mov
movsl
mov
cmp
enter
popa
cwtl
lret
push
xchg
imul
pop
enter
or
pop
subl
jb
call
aas
mov
es
push
pop
mov
pop
adc
mov
mov
sbb
jns
xor
xchg
mov
shll
mov
icebp
cmp
jmp
push
xchg
sub
das
pop
mov
lds
and
sub
sbbl
fistpl
xchg
out
test
xchg
call
std
add
pop
leave
ret
call
test
jne
ret
push
push
jmp
jge
push
xchg
jb
and
ret
jne
aas
inc
mov
insb
popa
mov
stos
lds
jle
xorl
xchg
xchg
fisubl
jmp
pop
adc
cs
xchg
outsl
addr16
fildll
add
mov
in
insb
fcoml
pop
dec
mov
lds
incl
and
push
dec
xor
push
xor
push
mov
orw
pop
call
push
push
not
mov
add
xchg
mov
pusha
call
mov
sub
movl
addl
push
mov
movl
pop
push
call
mov
mov
xor
xor
rol
addw
inc
dec
jne
cmp
je
cmp
jne
popa
shl
push
xor
push
mov
xorw
pop
push
call
push
mov
push
jmp
push
mov
subl
xorb
pop
jmp
popa
shl
push
popl
push
xor
push
call
push
mov
push
mov
movw
pop
push
jmp
pop
mov
mov
push
push
push
mov
mov
mov
rep
xor
jae
call
call
xor
out
test
xchg
mov
cmp
mov
sbbl
lods
cmp
insb
aad
cmp
fisttps
sub
cmc
push
xchg
push
mov
data16
mov
pop
sbb
mov
push
cli
cmpl
jg
adc
loop
cmp
insl
and
xor
xchg
add
pop
pop
push
push
add
mov
xor
pop
push
xor
jmp
sub
push
mov
subl
orb
pop
mov
add
sub
pushl
popl
mov
add
or
jne
add
jmp
jmp
xchg
or
arpl
iret
cmp
mov
fimuls
fs
sti
jne
aad
sub
ljmp
add
roll
std
push
out
shll
mov
jmp
xor
lea
stos
and
cmp
nop
sub
mov
jp
test
xchg
jo
add
mov
int
sahf
lret
popf
and
cmp
call
mov
add
lret
mov
add
mov
cmp
add
push
lds
jno
das
lods
xlat
mov
xchg
cmpsl
sahf
mov
movsl
push
ficoml
arpl
add
adc
inc
push
cmp
add
xlat
int3
bound
xor
inc
ja
pop
inc
mov
sub
mov
add
sbb
mov
mov
js
test
mov
sti
sbb
lret
cmp
pushf
fdivrl
dec
sub
xor
sbb
dec
test
mov
or
pop
push
ret
cmp
mov
add
jecxz
sbb
bnd
xor
xor
loop
sbb
pop
xchg
inc
clc
cltd
pop
inc
push
testl
fcom
mov
jnp
cs
push
jno
ret
inc
pop
sbb
arpl
dec
outsb
fisttpll
out
sbb
cmpl
imul
cmp
leave
push
mov
sub
or
pop
xchg
jmp
fidivl
mov
insb
jne
dec
popa
daa
in
inc
xor
mov
mov
push
ljmp
mov
adc
add
fiaddl
ret
fnstsw
pop
inc
mov
inc
stos
pop
rolb
gs
jb
xor
push
and
sbb
adc
adc
scas
jbe
push
daa
pop
push
jge
bound
sti
fnstenv
pop
push
mov
xchg
stos
sub
test
pop
inc
jg
sub
in
test
mov
scas
pop
bound
sbbl
mov
adc
stos
xlat
jbe
push
cmp
mov
mov
mov
aas
int3
pusha
out
aas
out
mov
sbb
call
out
push
cli
add
test
or
stc
fsubs
or
fildl
lods
jns
mov
stos
inc
mov
mov
cmp
push
jg
inc
mov
cmp
lods
adc
icebp
and
cmp
aas
jecxz
mov
popf
xor
fldenv
or
cld
mov
es
or
jne
nop
inc
iret
fs
jg
loopne,pn
cmp
pop
jg
inc
loope
inc
ficomps
cmp
fadd
aad
sub
cmp
addb
and
xchg
ret
pop
in
or
sbb
xorl
das
fwait
and
push
mov
push
sub
lods
push
dec
cmpsb
outsb
test
mov
add
jns
lea
insb
fiadds
loop
mov
push
mov
in
cmpsb
add
jecxz
mov
lret
inc
mov
nop
jge
push
subl
lret
xor
fisubl
outsl
aas
inc
stos
sti
iret
inc
int3
mov
jo
or
push
push
jbe
clc
inc
sub
fadds
faddp
sbb
push
or
mov
pop
jl
lret
pop
inc
lods
je
int3
mov
jae
rclb
fsubs
or
pusha
das
movsl
mov
inc
ljmp
mov
out
xchg
push
xor
push
pop
loope
add
mov
pop
smsw
ds
adc
test
inc
ret
add
fcomip
mulb
clc
cmp
aas
sub
sahf
cld
inc
or
fistpll
xchg
push
adc
push
and
pusha
lds
sbb
cmp
mov
shlb
add
aaa
insl
dec
pop
add
lds
and
aaa
shrl
xchg
and
mov
rorb
pop
pushf
fnstcw
pop
sarb
lock
cld
fimuls
stos
cmp
adcb
push
js
push
add
mov
cwtl
inc
xchg
sarl
ss
cli
rcrb
pop
add
ss
or
jo
add
inc
icebp
divl
movsl
es
enter
mov
adc
push
les
aad
mov
leave
pusha
or
vpaddq
mov
and
loop
das
sub
outsl
cmp
mov
insl
cmp
out
mov
mov
dec
jns
sub
mov
popa
xchg
orb
jp
jmp
mov
push
adc
inc
pop
adc
xor
loopne
sub
dec
inc
pop
adc
jl
inc
decb
jns
adc
bound
decl
sub
fidivrs
jno
pop
inc
out
adc
insl
sub
dec
inc
in
sbb
xchg
int
mov
add
mull
add
or
fmuls
mov
xor
fidivrl
xchg
andb
movsl
icebp
les
jne
cs
divl
inc
pop
jne
cmp
sbb
xchg
out
add
imul
mov
bound
out
loope
jbe
out
xchg
movsb
hlt
lock
movsb
mov
mov
xchg
dec
xchg
jecxz
rorl
cmc
out
jle
pusha
icebp
sub
add
sub
adc
pop
into
xchg
mov
cmp
shl
sbb
lfs
cmp
fldt
sub
lods
repz
sbbl
outsl
lahf
and
movsl
xchg
ja
ret
add
jecxz
cmp
mov
pop
ss
call
cmp
or
add
enter
rol
fistpl
mov
cmp
dec
mov
cmp
aas
fwait
and
dec
xor
mov
outsb
repz
xor
push
sbb
stc
pop
scas
loopne
es
inc
jg
mov
jne
mov
bound
pop
sub
push
mov
fcmovnbe
push
mov
inc
xchg
in
fidivrs
pop
jg
inc
pop
dec
push
sub
cmovno
pop
jge
addr16
imul
dec
lahf
add
popa
std
pop
push
xor
cmp
push
add
inc
mov
daa
xchg
jae
add
repz
mov
or
inc
leave
rcrl
inc
aad
int3
fsubrp
test
ds
mov
xchg
imul
mov
ret
sub
sub
pop
xorl
pushf
mov
cmp
xor
or
cmp
pushf
dec
add
and
and
nop
test
aas
xor
adc
out
popf
fnstcw
arpl
test
xor
lods
sub
pop
jae
mov
popf
inc
pop
hlt
cli
outsb
xchg
jmp
sbb
adc
movsl
sbb
in
shll
pop
add
mov
sub
mov
mov
into
and
clc
lahf
dec
pop
jl
std
in
aas
mov
iret
call
mov
jle
cmc
int3
mov
shrl
xchg
pop
enter
jg
bound
pusha
icebp
icebp
inc
xchg
xor
or
jecxz
mov
jns
outsb
or
ret
or
insl
dec
fsubr
xor
or
fidivrs
sahf
push
leave
in
fbstp
pop
fidivrl
push
jnp
in
inc
add
pop
sbb
jbe
dec
or
addl
push
cs
pop
mov
popa
inc
pop
jg
inc
xor
fidivrl
jecxz
push
fdivrs
add
inc
or
aas
inc
pop
pop
iret
aam
pop
push
imul
mov
testb
mov
push
roll
and
mov
ss
mov
xchg
in
popf
aas
mov
fwait
cs
mov
cltd
mov
add
ja
pop
xor
test
movsb
inc
je
inc
pushf
out
in
shr
shrb
jl
enter
jg
gs
cmpsb
add
and
or
pop
inc
mov
cmp
lcall
dec
pop
rcr
and
jbe
fisttps
mov
insl
std
cs
iret
cmpsl
enter
jg
and
in
mov
test
mov
test
repz
inc
movsl
push
shll
popa
fs
cmp
jg
in
or
push
repnz
filds
test
mov
into
repnz
lds
inc
mov
mov
repz
dec
mov
xchg
mov
jb
xor
stos
es
sbb
mov
imul
pop
and
mov
ret
xchg
lods
mov
subb
dec
xorb
daa
ds
repz
xor
push
out
mov
jns
sbb
jg
mov
negb
lods
and
fistpl
inc
fdivl
sarb
inc
xchg
mov
rclb
pop
lea
cmp
adc
jg
rcl
fnsave
cmp
xor
xchg
in
popa
jg
out
jge
push
pop
aas
mov
jb
dec
add
imul
pop
sub
movsb
add
push
mov
or
pop
fidivl
xor
inc
mov
stos
jo
lahf
mov
mov
xor
gs
cmc
push
pop
lret
iret
jne
jae
inc
pop
xchg
mov
sub
in
mov
outsl
pop
lock
sub
cmc
mov
leave
push
jne
fs
das
fisubrs
adc
jg
xlat
pop
arpl
and
loop
inc
mov
mov
pop
inc
enter
sub
push
cmp
test
add
or
pop
inc
test
enter
in
out
pop
mov
xchg
inc
fiadds
pushf
call
ljmp
mov
jle
jg
std
std
ja
out
pop
out
sbb
dec
mov
mov
out
jl
add
mov
cs
addr16
mov
and
fwait
cmc
cmp
jno
push
sbb
pop
pop
xchg
inc
pop
das
dec
sub
sub
faddp
test
jmp
ret
add
iret
dec
mov
movsb
push
cmp
or
test
mov
cmp
jl
fsubrs
sbbb
fisubrs
mov
and
pop
push
cs
sahf
mov
call
dec
jge
repnz
mov
loop
stc
fnstenv
lcall
mov
xchg
jns
mov
cmpsb
pushf
sub
pop
xor
mov
xchg
out
clc
fidivrs
rolb
and
and
push
into
cmp
sbb
cwtl
jg
inc
out
dec
into
push
xchg
add
es
xor
call
cltd
cltd
sti
push
push
sub
pop
loop
and
loop
imul
pop
pop
cmpsb
sbb
aad
lea
mov
lock
sbb
test
rcrl
es
inc
jg
add
ja
int3
add
cmpl
psadbw
sbb
sbb
fldl
fiaddl
mov
fisubs
xchg
inc
arpl
lock
add
sub
jo
adc
aaa
jnp
jmp
mov
inc
add
xor
mov
adcb
movsl
or
or
fwait
lcall
enter
sub
lock
xchg
pop
shrl
cmp
dec
mov
push
loope
jnp
mov
mov
scas
in
push
cmc
sub
into
sbb
aas
push
push
push
les
mov
ret
loop
mov
jno
xlat
loope
insb
jo
in
inc
and
sbbl
cs
mov
or
inc
pop
jnp
mov
arpl
shl
pop
push
xchg
jne
aas
std
addr16
lods
les
cmp
jg
inc
sahf
mov
and
jbe
mov
cmp
push
scas
lock
lret
inc
divl
lods
sub
cli
xor
es
jmp
sbb
mov
scas
aaa
inc
lea
push
shrb
dec
mov
cmp
mov
pop
repz
sub
dec
mov
fstps
repnz
inc
jecxz
mov
shlb
or
call
jne
in
mov
sbb
repnz
push
mov
lods
inc
es
scas
adc
jns
mov
popa
addr16
ljmp
xor
pop
call
pop
pop
add
sbb
jle
xchg
sbb
inc
xchg
xlat
loop
mov
ja
or
jg
inc
xchg
cmp
pushf
mov
leave
sbb
cli
and
dec
outsb
lret
push
mov
cmp
or
jle
mov
orb
inc
in
jo
inc
jg
xchg
inc
in
repnz
sbb
fmulp
stc
dec
fdivr
pop
mov
pop
out
pop
mov
popa
jecxz
imul
push
cmp
xchg
inc
push
jbe
outsb
orb
fs
in
insl
addb
das
enter
sarb
xchg
jmp
insb
adc
mov
enter
fwait
inc
mov
sub
in
adc
sbb
xchg
rcrl
test
scas
sub
sub
dec
not
push
add
mov
int
mov
cmp
sub
dec
inc
iret
sub
pop
fisttps
jle
inc
mov
push
jl
ret
cli
daa
and
xor
xlat
fcomps
adc
jl
faddl
movsb
and
xchg
push
enter
jg
push
popa
ja
flds
sbb
jmp
push
pop
pop
jno
cmp
stos
fcmovne
in
lcall
icebp
hlt
adc
sti
and
xchg
pop
inc
cmp
push
add
inc
mov
xchg
scas
sub
out
or
movsb
cmc
push
cwtl
leave
push
in
jne
pop
in
sub
cltd
arpl
addb
push
loopne
xchg
inc
push
test
cwtl
xchg
lods
adcl
fldt
movsl
inc
and
sahf
enter
enter
rcl
subb
loopne
pop
movsb
or
inc
push
add
sbb
add
out
test
repz
scas
add
out
cmp
das
cltd
sbb
and
inc
arpl
sbb
inc
push
enter
add
add
sub
mov
pop
inc
mov
icebp
xchg
int
xor
stos
pop
mov
xchg
dec
jg
iret
scas
ss
inc
push
mov
cmp
data16
inc
jg
loope
inc
in
roll
sbb
add
push
sub
lods
fnstcw
mov
jmp
fnstenv
pop
inc
inc
xor
adcl
cmp
adc
pop
inc
ljmp
push
loopne
pop
or
jns
bound
add
icebp
sbb
cmp
jae
dec
mov
sub
and
push
fs
popf
dec
shll
cmpsl
ret
sahf
in
cmp
cmp
stos
jg
cmp
dec
loopnew
mov
movsb
pop
les
scas
mov
mov
jp
adc
fsubrp
cmpsl
imul
push
sub
sub
mov
sub
xlat
push
lahf
fldenv
andb
sbb
cs
and
movsl
inc
and
pop
mov
push
mov
dec
out
js
mov
mov
orb
test
mov
mov
inc
int
xor
pop
popa
mov
icebp
cs
jns
jl
mov
pop
enter
sarb
inc
push
add
jmp
stos
dec
adc
loopne
dec
cmp
sub
inc
ja
pop
inc
bnd
pushf
ret
int3
push
pop
sahf
pop
into
addr16
les
ror
movsb
add
popaw
push
imul
mov
add
lock
bound
or
fidivrs
das
xchg
sti
inc
sbbb
in
fxch
sbb
call
add
fisubrs
xor
and
xlat
mov
adc
push
pop
mov
sbb
and
loope
jle
pop
jno
cltd
mov
inc
aam
xor
push
pusha
das
xchg
pop
rorl
or
and
fdivp
mov
cmc
mov
add
std
inc
jnp
pop
inc
dec
mov
sub
scas
cmp
shrl
das
mov
add
lahf
movl
adc
push
cmp
push
pop
push
dec
lock
jg
xchg
test
aam
inc
subl
pushf
pop
sbb
loop
pop
jl
add
add
mov
push
dec
jg
das
loopne
sarl
das
out
imul
lds
xor
or
add
jo
push
jl
sub
enter
push
cs
cmp
mov
inc
sti
out
pushf
pusha
in
add
in
insb
fists
xlat
xchg
adc
gs
pop
mov
jge
cltd
sub
pop
jle
mov
movsl
pop
inc
mov
scas
mov
inc
cld
mov
dec
adc
inc
push
loopne
adc
pop
sub
popf
bswap
mov
mov
rcr
cmp
sbb
popa
xchg
mov
pop
jl
das
gs
xchg
sub
insl
dec
or
sti
shr
mov
inc
jno
mov
leave
insb
jl
lcall
repz
and
lock
int
out
or
repz
mov
repz
sbb
aad
mov
aas
sbb
push
mov
enter
in
cld
in
js
mov
jae
cmpsl
lds
push
cmp
stc
inc
push
mov
xor
cmpsl
pop
fistps
sahf
test
ss
fildll
hlt
xchg
lods
dec
xchg
sub
test
mov
fbld
mov
pop
inc
mov
mov
mov
loopne
cmp
dec
dec
in
or
push
iret
out
inc
lahf
call
push
mov
aad
mov
insl
cmp
fwait
insl
call
sub
xchg
or
lahf
mov
cmp
das
mov
call
xor
cld
cltd
movsb
and
adc
jno
sbb
or
pop
push
pusha
inc
jl
xchg
xchg
js
push
dec
inc
pop
jg
inc
fimull
lods
pop
nop
xor
cltd
loop
mov
ss
insb
nop
mov
sub
push
cmp
mov
jg
inc
mov
pop
or
icebp
xlat
mov
xchg
xchg
scas
mov
cwtl
aad
mov
inc
inc
inc
stc
decl
mov
test
sti
lea
mov
mov
mov
int
subl
sub
mov
sbb
push
adcb
jno
xchg
pusha
repz
inc
enter
dec
loop
fwait
jbe
push
xor
jecxz
jmp
sbb
arpl
sahf
push
andb
into
fidivrs
std
xor
inc
mov
mov
dec
arpl
sub
mov
pop
inc
pop
dec
inc
jns
and
fidivl
enter
and
xchg
and
stc
jecxz
imul
inc
push
mov
mov
test
bound
int3
mov
push
lret
sarb
pop
cmp
cmp
les
cmp
push
repz
mov
loopne
iret
cmpsb
and
data16
push
mov
add
push
mov
repz
std
jnp
or
ret
xchg
mov
lcall
pop
xchg
arpl
orb
xor
test
push
mov
movsl
inc
jl
push
out
das
cmp
pusha
push
pop
mov
inc
sub
and
cltd
notl
test
push
sbb
mov
push
inc
and
mov
stos
and
lcall
mov
pop
das
enter
push
push
jp
ds
and
mov
in
cmp
lahf
push
jae
subb
lahf
in
jb
mov
cltd
subb
mov
leave
mov
inc
pusha
inc
mov
dec
fldl
pop
inc
ljmp
les
arpl
dec
jp
push
jnp
sbb
mov
mov
sbb
jp
into
or
xor
and
add
stc
rcl
add
fnsave
imul
repnz
pushf
mov
daa
pop
inc
jg
iret
mov
je
or
fcmovu
rclb
dec
or
cmp
stos
and
or
idiv
mov
int3
popl
mov
rorl
xchg
loopne
loopne
aaa
test
jno
dec
mov
es
mov
mov
mov
scas
out
out
pop
rcrb
sub
and
inc
in
cmp
lcall
inc
loopne
and
xchg
leave
jecxz
jle
stc
push
cmp
pop
and
sub
cwtl
ja
push
pop
subl
aas
pusha
push
adc
adc
sbb
cmp
or
fisttpll
fisubrl
or
sub
jmp
sbb
es
xor
inc
enter
movsb
inc
mov
jnp
fmuls
pop
or
jmp
fcmovnbe
push
loopne
inc
jmp
pop
inc
ljmp
mov
xchg
repnz
repz
data16
xchg
mov
jmp
leave
jbe
mov
imul
jmp
xor
pop
ljmp
jg
pop
fstpl
pop
dec
sti
rclb
ret
xchg
scas
outsl
cmp
fmuls
add
fmul
or
sub
rcr
pop
sbb
and
or
pop
out
push
push
jg
jl
add
in
sbb
sbb
fcmovbe
mov
lea
cwtl
adc
sub
jle
mov
cmp
inc
aam
clc
movsb
divl
sbb
pushf
nop
movsb
fisttpll
scas
or
mov
cwtl
xchg
hlt
mov
rorl
push
mov
jo
cmp
pushf
or
lret
sub
mov
fs
shlb
repz
jne
imul
cmp
sti
dec
cwtl
dec
lods
and
or
pop
xchg
leave
in
inc
incb
int
mov
repz
jb
addl
mov
mov
push
sahf
shrl
prefetch
fidivs
xchg
dec
decb
pop
pop
jg
jp
out
lahf
mov
stc
jae
ficoml
jg
lret
rcrl
ss
addr16
xchg
ja
fildl
fistpl
dec
stc
popl
bnd
adc
scas
sub
pusha
inc
mov
pop
inc
jg
cmpsl
or
adc
push
push
adc
ja
divb
cmpsb
aad
cmc
and
fisttps
or
pop
add
jnp
daa
mov
add
add
lahf
fdivrl
xor
xchg
and
bound
orb
pop
or
cmp
in
sti
ds
xor
clc
push
xor
scas
cmpsl
call
mov
jg
mov
pop
ret
pop
mov
roll
cltd
fisubrs
sub
jns
xchg
mov
push
cmp
pop
inc
cmp
pop
arpl
push
enter
in
jnp
andb
int
sub
loope
mov
xor
inc
pop
iret
cmp
sub
scas
inc
dec
jmp
iret
sub
sar
sub
enter
jg
ficoml
into
enter
sub
mov
sub
cmp
mov
into
mov
pop
imul
fidivs
fcom
cmp
sbb
mov
test
mov
test
fs
aam
xor
push
mov
mov
pop
sarb
lock
pop
inc
dec
inc
fs
sub
mov
and
push
fbld
ret
arpl
lods
jb
iret
inc
dec
mov
decl
adc
xchg
lea
jle
xchg
fwait
inc
fidivrl
cltd
xchg
mov
lahf
push
cltd
cmpsl
mov
jbe
cs
inc
sub
daa
jo
pop
mov
lds
out
jno
mov
xor
fidivrs
xchg
lods
sbb
icebp
jle
jmp
xchg
insl
jmp
subl
push
dec
inc
pop
jg
inc
adc
sahf
inc
cmp
mov
jp
mov
call
mov
push
mov
add
mov
push
popf
lea
fsubp
mov
mov
fisubs
nop
iret
stc
xor
sbb
test
icebp
add
and
insb
ret
push
sub
adc
add
icebp
mov
and
xchg
scas
and
lods
iret
imul
xchg
dec
xchg
push
nop
scas
mov
rolb
cld
xchg
xor
push
clc
adc
into
inc
andl
adc
aad
cmp
jbe
addr16
fs
daa
nop
sub
mov
testb
xchg
jp
xchg
xor
outsl
dec
or
fisubl
cmc
dec
std
enter
ret
xchg
mov
mov
inc
mov
xor
mov
scas
cmc
outsb
mov
xchg
add
push
fstpl
insb
mov
push
xchg
icebp
inc
hlt
or
mov
mov
sub
rep
test
stos
sbb
push
aaa
out
enter
inc
cmc
outsl
inc
sub
and
cmp
and
push
adcb
push
insl
push
es
stc
out
pop
popf
fwait
jmp
repz
adc
pop
jg
inc
cmc
addr16
in
lods
in
mov
fstpt
xor
mov
pop
add
sbb
nop
test
dec
data16
or
fs
add
add
andb
inc
mov
cmp
dec
sbb
mov
mov
fistpl
jle
mov
mov
stos
push
push
jecxz
push
mov
mov
int3
sti
scas
out
repz
mov
push
repnz
mov
rcrl
call
mov
push
xchg
out
adc
adc
cmp
jle
pusha
mov
mov
mov
aas
daa
xor
mov
dec
mov
stos
sub
daa
dec
adc
iret
inc
pop
fidivrs
mov
fidivrs
push
mov
sbb
cmp
add
sahf
movsl
sbb
cmp
push
jle
dec
mov
push
sbb
dec
andb
mov
das
mov
cmpsb
xchg
scas
jno
insl
loop
mov
fcomi
push
mov
xchg
sub
xor
jno
lods
int
stc
xchg
inc
mov
div
push
xor
iret
imul
fidivrs
push
pop
loope
xor
stos
in
fisubrl
push
stos
jge
sar
add
push
cltd
mov
cltd
inc
or
loop
es
pushf
xchg
sbb
mov
cmp
xorb
jno
das
inc
pop
sub
decb
jnp
sbb
ret
jne
je
outsb
fyl2xp1
mov
fs
hlt
addr16
lock
cs
subl
call
lock
insl
pop
add
jmp
repnz
movsb
out
add
stos
rcr
sub
pop
mov
loope
jne
inc
into
adc
jo
fidivrs
pop
inc
or
rcll
and
sub
outsb
or
pop
lret
push
sub
mov
iret
in
or
mov
cld
fimull
dec
lcall
shll
divb
fldt
lret
filds
inc
push
mov
pop
bound
insb
daa
mov
lods
xchg
fcomp
mov
sub
dec
cmp
cmp
in
packsswb
shlb
out
imul
aaa
pusha
mov
xlat
addl
mov
inc
jg
sub
pop
jb
fidivs
sbb
push
mov
cli
les
pusha
jae
lcall
jge
fwait
lock
adc
push
xor
outsl
inc
mov
add
xchg
les
inc
mov
mov
cs
pop
call
push
lods
jns
pop
inc
dec
lahf
xlat
jb
enter
xor
test
pop
mov
dec
jbe
pop
dec
xchg
xchg
pop
int
xchg
pop
mov
jno
pop
push
scas
jle
jae
imul
pop
cmp
cmpsb
mov
jo
addr16
mov
pop
bound
lods
mov
rcrl
ss
pop
imul
imul
adc
fstl
in
mov
cmp
imul
or
scas
imull
js
pop
cmp
mov
mov
xchg
lret
cmp
call
adc
push
xlat
iret
adc
aad
push
rdtsc
jb
outsl
adc
xchg
inc
dec
dec
jnp
lods
sbb
insb
xchg
pushf
iret
add
pop
orb
inc
jnp
push
clc
dec
stc
inc
jmp
lret
xchg
pop
dec
mov
loop
adc
xor
lahf
mov
xchg
int3
cld
pop
rorl
mov
repz
pop
xchg
mov
clc
pand
inc
outsl
push
cmp
lahf
fidivrs
pop
arpl
les
test
cmp
orl
outsb
inc
jg
cmc
lods
xchg
shr
incb
fistps
retw
and
xor
xchg
daa
jnp
mov
fcoml
icebp
out
aad
in
xor
sub
incl
stc
cli
aam
or
movsl
mov
jmp
inc
adc
das
in
aad
sub
out
jg
sbb
cmc
dec
pop
pop
xlat
lock
lret
addb
xchg
cmpb
dec
sti
inc
repnz
and
mov
fcompl
out
sbbb
rcrl
and
fisubrs
aad
cmp
xor
push
push
pusha
inc
fwait
iret
adc
stos
lods
jno
sahf
add
stos
jmp
test
inc
rorl
fxch
pop
in
or
fidivrs
cmp
stos
in
xchg
adc
mov
push
imul
and
xchg
das
mov
dec
fwait
push
enter
jg
rcll
ja
fnstcw
inc
hlt
mov
pop
jb
xor
sbb
test
pop
inc
or
jecxz
xchg
lock
ret
xor
inc
outsl
stc
lods
and
into
mov
push
mov
jns
pop
push
sub
sub
icebp
jp
insb
lahf
lahf
mov
aas
pop
inc
jg
xor
push
addr16
je
inc
mov
andb
inc
mov
addr16
push
sub
les
repnz
mov
insb
xor
lods
or
and
xchg
cmp
repnz
mov
cmp
pop
das
fcomps
jecxz
push
sub
icebp
cmp
inc
jle
in
and
inc
fidivrs
or
xchg
jecxz
add
or
fs
inc
jg
test
mov
push
sub
les
leave
push
jae
xor
push
shlb
lods
mov
dec
pop
or
sar
xchg
push
aad
scas
sub
and
cmp
addr16
dec
outsl
inc
dec
std
or
mov
insb
cmp
arpl
ss
rcrb
leave
inc
inc
jns
nop
ljmp
pop
inc
vshufps
daa
dec
push
xchg
xor
mov
cmp
mov
sub
mov
fldenv
cmpsb
jno
or
and
fcoms
fmuls
adc
push
push
push
xchg
add
push
lret
mov
js
xor
sub
and
mov
add
inc
fdivrl
stos
mov
shlb
jecxz
xchg
dec
iret
in
lods
pushf
movb
int
jno
sub
js
mov
push
inc
jg
pushf
and
pop
iret
sti
addb
into
or
xchg
or
xchg
imul
xor
add
pusha
test
push
arpl
in
push
cmp
loope
jnp
add
xor
inc
jne
pop
inc
fisubl
sub
push
adc
flds
fwait
or
xchg
dec
nop
pop
xor
dec
dec
mov
out
jecxz
or
fidivl
jl
jbe
enter
mov
lcall
jg
push
cmp
cmp
inc
add
push
scas
mov
outsb
enter
pop
movl
pop
sub
push
add
mov
inc
pop
jae
lret
es
inc
int
add
or
sub
js
inc
add
inc
aaa
out
rcrb
pop
jg
mov
insb
mov
cmp
pop
jg
inc
adc
out
iret
popf
sar
push
add
iret
cmp
mov
ds
xchg
mov
lret
cwtl
dec
pop
inc
jg
xor
xchg
outsb
leave
jmp
lahf
pop
inc
mov
pusha
pop
inc
jg
push
sbb
out
mov
mov
push
jle
cmp
xchg
or
dec
int
aam
mov
jg
cmp
in
shll
pop
neg
cmp
sub
popa
xor
inc
mov
and
dec
aaa
mov
push
fstl
imul
sub
dec
lret
cmp
ret
addl
sbb
dec
incb
push
or
xchg
pop
push
jmp
xor
inc
movsb
sub
mov
pop
das
out
cwtl
cmp
inc
ljmp
sti
loopne
ror
fs
push
dec
pop
mov
icebp
or
pusha
out
shl
mov
or
cmp
cmpsb
ret
cmp
inc
addr16
test
mov
inc
pop
inc
jg
xor
jg
cld
push
sub
lret
xor
sarb
xchg
pop
inc
mov
push
sahf
add
push
sbb
test
pop
enter
into
push
push
push
adc
lret
jno
push
divb
popa
cs
or
sub
xchg
popf
mov
push
popa
xor
lcall
mov
movl
push
mov
lds
dec
cmpsb
arpl
lret
mov
mov
push
clc
or
sbb
mov
push
mov
mov
sbb
test
push
sub
mov
js
out
mov
in
ljmp
sub
fwait
mov
andb
xor
movsl
dec
ret
push
outsb
scas
cmpsb
mov
lods
das
mov
int3
inc
test
cmp
sbb
cmp
imul
dec
call
pop
insl
jno
inc
testb
cli
push
icebp
xchg
xchg
loopne
lcall
or
add
cli
xchg
jecxz
imul
shld
test
xchg
in
dec
pop
jnp
xchg
cmp
add
inc
mov
pop
xor
pop
jae
mov
add
mov
xchg
or
int3
imul
sti
enter
rolb
jle
lea
add
stc
cmp
lods
sbbl
jmp
ret
lret
adcb
add
jecxz
sahf
mov
outsl
hlt
adc
out
mov
mov
cmpsl
js
cmp
aas
push
cltd
stc
cmpsl
pushf
mov
stc
arpl
jge
xor
adc
jg
insb
inc
lods
adc
iret
inc
sub
mov
xchg
les
loopne
jbe
int3
mov
int
bound
jb
mov
cltd
inc
lret
sub
mov
dec
js
jnp
into
xchg
mov
mov
in
addr16
sbb
fstpl
imul
jge
inc
icebp
adc
push
lret
in
jmp
stos
rcll
inc
mov
iret
int
adc
xchg
push
inc
sbb
cmp
testl
mov
fbstp
cmp
inc
clc
mov
lahf
fistl
inc
push
xchg
adc
mov
fnstsw
sti
int
pop
jge
imul
loope
fists
xchg
push
in
call
sbb
test
insl
jb
repz
aam
shl
lea
xchg
sti
loop
mov
jg
mov
outsb
in
or
xor
pop
pusha
xchg
pop
sub
sbb
mov
inc
fs
sub
and
and
inc
test
lret
xlat
call
sbb
adc
fcoms
leave
loopne
fcmovnbe
push
mov
inc
xchg
lret
fidivrs
cmp
addl
mov
pop
cmp
lea
xor
stos
jne
in
aam
movsb
into
jecxz
lock
daa
jmp
arpl
push
jns
add
lds
cmp
inc
mov
sub
fidivrs
leave
mov
mov
and
test
test
or
or
inc
push
xchg
push
mov
subb
cvtps2pd
je
imul
mov
and
nop
push
push
subl
lret
sub
movl
pop
fs
cltd
nop
adc
and
push
call
lea
icebp
xchg
out
rcl
push
repnz
enter
mov
mov
and
mov
add
mov
sub
loopne
push
mov
jle
shrb
jb
out
mov
mov
out
clc
hlt
xchg
pop
xchg
and
cmp
or
or
popa
add
lcall
jg
xor
repnz
sbb
test
adcb
pop
iret
cmp
in
fsubrl
lahf
ficomps
cmp
ljmp
addl
cmpsb
hlt
fdivrp
stos
jmp
push
adc
outsb
mov
std
loop
mov
addr16
scas
scas
imull
xchg
inc
jg
cs
or
aad
pusha
mov
rcr
xchg
or
mov
cs
lock
les
cmp
push
push
inc
nop
in
inc
and
insb
add
sub
add
sbb
loope
mov
leave
gs
icebp
daa
scas
data16
fstpl
lods
adc
test
divb
pushf
or
pop
fs
gs
adc
lea
test
cli
jnp
jle
jnp
sub
leave
call
pop
movsb
xchg
pop
xchg
xor
popa
and
pushf
js
adc
xchg
pop
cmp
enter
jne
stos
mov
push
push
cltd
in
mov
inc
jg
pop
fwait
sbb
mov
mov
jns
mov
inc
fs
or
sbb
mov
sub
bound
in
ja
sbb
mov
push
sets
add
iret
imul
das
jle
pop
mov
sarb
leave
std
pop
fnstcw
lcall
pop
addb
cwtl
push
push
inc
test
jmp
xor
outsl
mov
cmpl
fisubrl
std
jmp
add
mov
scas
sub
cmp
mov
inc
push
xorb
dec
pop
cmp
in
popf
pushf
rorb
xor
popf
dec
push
inc
adc
and
mov
cmp
dec
add
ret
pop
inc
jg
xchg
sub
sub
jae
mov
stos
sub
add
outsl
cmp
adc
or
orl
dec
xlat
adc
pop
inc
mov
enter
pop
inc
mov
fs
incb
aas
sub
fcompl
movb
test
or
incb
or
xor
sbb
sub
mov
mov
mov
add
mov
out
sbb
iret
test
mov
pop
dec
jb
popf
jmp
popf
jp
dec
mov
lcall
js
xor
cmpsl
or
es
mov
inc
je
in
cmp
jecxz
jb
pop
cs
cmp
adc
and
adc
mov
test
out
scas
das
fcompl
and
dec
lahf
inc
or
shl
daa
mov
push
xchg
test
jecxz
std
sbb
shll
rclb
jl
mov
mov
mov
xchg
xor
mov
or
cmp
in
insb
cli
jecxz
subb
add
push
push
inc
jecxz
outsb
xchg
aas
push
iret
pop
dec
jbe
fidivrs
or
jecxz
mov
lret
jbe
or
adc
out
pop
sahf
jl
sub
and
adc
in
push
addr16
push
push
pop
stos
push
push
stc
incl
out
aas
xor
in
pusha
lods
pop
sahf
jo
loope
in
xlat
sbb
mov
mov
cmp
inc
pop
std
jecxz
cmpsb
push
inc
test
xchg
jae
mov
repz
call
sub
xor
out
sub
leave
fldt
pop
xchg
aas
loop
mov
cmpsb
mov
pop
in
adc
stos
and
push
mov
dec
push
fidivrs
mov
push
mov
inc
jne
push
aam
pop
data16
mov
push
push
jne
ret
lock
popa
shr
mov
push
jg
rorb
adc
jo
pop
adc
adc
xchg
lret
xchg
jb
or
movsb
pop
mov
fisubrs
pop
iret
fisubs
fs
fstp
xor
xchg
in
adc
ja
pop
inc
dec
cwtl
pop
fsubrp
sbb
cs
mov
xor
enter
mov
and
sub
fwait
roll
pop
lret
rcll
mov
lcall
mov
addr16
xorl
dec
jecxz
mov
rclb
and
fidivrs
cmp
je
loope
jne
sbb
push
pop
adc
lds
sbb
stos
cmc
loope
lret
fiaddl
mov
inc
xchg
xchg
sbb
movsb
adc
js
shlb
out
jl
xchg
dec
lret
cmp
sub
cmpsb
mov
xor
jne
test
clc
int
test
iret
jg
jo
or
mov
cmc
test
xor
hlt
inc
inc
pop
adc
das
mov
mov
and
aas
ljmp
ret
adc
mov
mov
fidivrs
into
sub
fbstp
mov
pop
cmp
loope
push
dec
push
sahf
ljmp
push
test
int
js
mov
cmp
fs
cltd
cmp
ret
ja
sub
and
lahf
int
gs
mov
jbe
mov
repnz
and
cld
movb
inc
jg
mov
in
mov
gs
popl
sub
pop
jg
mov
sub
pop
lcall
movsb
cmpsl
in
lea
mov
xchg
cmp
lahf
mov
mov
outsb
push
inc
hlt
nop
inc
mov
movsb
shll
je
push
adc
mov
sub
mov
pushf
jge
jmp
inc
dec
mov
insb
mov
cmp
das
mov
aaa
mov
pop
loope
lret
ss
call
sub
enter
idivl
movsb
mov
adc
in
cmc
fucomip
call
cmp
fs
sub
push
enter
jg
push
mov
push
loope
stos
fucomip
inc
outsl
mov
mov
xor
adc
popf
lds
bound
addr16
or
ljmp
jg
cltd
or
sbb
xchg
and
mov
xchg
fsubrl
sbb
jae
sub
push
xchg
aas
pop
mov
hlt
loope
inc
loope
aad
data16
cmp
pop
or
aad
repz
cmp
push
cli
adc
mov
in
sti
sub
int3
outsl
iret
xor
int
jb
mov
test
stos
sub
xor
pop
pmaxsw
mov
mov
dec
adc
je
fildll
ds
cmpsb
mulb
data16
repz
sbb
xchg
in
data16
fistps
push
divb
outsb
and
sarl
sbb
stos
stos
mov
inc
shr
inc
sub
mov
outsl
mov
mov
out
adc
imul
mov
gs
mov
inc
jg
mov
xor
in
add
xchg
ljmp
inc
or
iret
mov
les
and
mov
decl
add
cmpsl
dec
inc
roll
insb
lea
shrb
ja
rcl
jg
iret
mov
std
cli
popa
fcoms
inc
test
js
mov
imul
mov
sbb
sub
jno
movsb
leave
cs
fwait
int
daa
addr16
insb
cmp
ret
push
fcomps
mov
test
push
pop
cmp
hlt
pusha
jl
add
inc
loope
inc
mov
pop
das
fwait
mov
jge
xor
mov
out
mov
ret
cmpsb
mov
sbb
xlat
sbb
gs
pusha
iret
inc
and
and
dec
pop
mov
cmp
jecxz
mov
and
imul
sbb
fwait
iret
stos
inc
xor
lcall
shr
jmp
cmp
jg
push
adc
andb
pop
rolb
shlb
mov
leave
popf
sub
jno
dec
pop
mov
repnz
sub
jne
mov
mov
mov
sbb
push
jp
pop
arpl
mov
mov
test
sbb
shll
movsl
mov
or
int3
sbb
dec
repz
inc
icebp
jge
inc
inc
adc
inc
mov
jns
mov
mov
mov
inc
test
inc
sti
pop
jb
adc
cs
cmp
or
xor
loope
fdivr
inc
sbb
insl
outsl
sahf
lret
out
cmp
dec
fucomp
jle
inc
inc
movsl
fwait
sbb
enter
mov
fisttps
les
sub
fcmovne
movsb
aam
fldt
fsub
lret
aam
pop
xchg
ficomps
xchg
pusha
pop
test
call
cmc
ljmp
xchg
dec
cmp
das
stos
into
jnp
add
hlt
add
xchg
xor
mov
add
shll
xchg
xchg
jmp
or
xor
mov
aad
pop
imul
jbe
jge
mov
cmp
leave
mov
xchg
push
addb
cs
xchg
dec
mov
fwait
movsl
repnz
gs
sarl
loop
mov
mov
jae
leave
loope
adc
rcrb
fsubrs
inc
aaa
sbb
iret
popf
xor
cmp
jne
mov
pop
jnp
cwtl
dec
cmp
ljmp
xchg
loopne
mov
je
inc
cmc
adcb
fstps
push
dec
icebp
cmp
in
int3
rcrb
add
inc
pop
inc
mov
faddp
sbb
addr16
mov
and
inc
jg
cs
cmp
and
ret
cmp
mov
shrb
push
loopne
stos
or
stc
subb
xchg
add
fiadds
jecxz
mov
mov
and
push
imul
std
jmp
clc
addb
shlb
testl
cwtl
lea
or
test
movsb
xor
and
outsl
dec
mov
xchg
pop
inc
imul
pop
mov
popf
xor
cld
dec
cld
arpl
adc
pop
mov
shr
dec
mov
dec
pop
inc
mov
orb
and
dec
jge
cmp
fcom
test
cli
xor
hlt
test
push
cmp
cmp
xor
movsb
pop
sub
adc
iret
sbb
push
into
xlat
mov
mov
testb
addl
lret
xchg
into
mov
cmc
pushf
int3
orb
fidivrs
push
jg
inc
daa
cmp
int
and
lods
daa
adcb
pop
das
mov
mov
cmp
iret
sbb
lods
orb
cmpl
addr16
jno
adc
mov
fs
insb
add
push
fstpl
sub
cld
pop
inc
cld
into
es
inc
jg
adc
int
outsb
cli
jge
jae
inc
lock
popf
or
push
dec
jg
das
loopne
mov
mov
aad
inc
xlat
jecxz
aaa
mov
lods
pop
jb
mov
pop
test
or
dec
fbld
into
enter
adc
inc
jns
pop
inc
mov
fsts
dec
notb
jp
iret
lahf
dec
jge
inc
sub
sub
mov
addl
stc
push
mov
lods
push
mov
xchg
pusha
sbb
mov
es
imul
adc
fistpll
sub
fyl2xp1
adc
andb
js
xor
xchg
cmc
jno
jbe
fbld
leave
call
scas
pop
xor
add
add
cmp
and
aas
outsl
enter
pop
iret
int3
dec
jo
enter
jg
add
repz
xor
out
inc
mov
test
enter
xchg
bound
pop
inc
iret
pop
repnz
outsl
jo
adc
cld
mov
inc
cmpsl
cmp
adc
jmp
bound
dec
das
movsl
xor
pop
mov
andb
mov
inc
mov
out
ds
arpl
pop
test
repz
mov
push
mov
movsl
xor
push
mov
mov
es
jg
xchg
cmp
fld1
adc
and
out
ja,pt
leave
inc
mov
mov
cld
mov
sub
mov
fwait
bound
sub
jg
cmp
arpl
pop
inc
jg
jl
or
xchg
in
shr
js
pop
jnp
cld
pop
and
cwtl
pusha
hlt
mov
xchg
inc
aas
mov
adc
push
add
add
push
ljmp
inc
xchg
xor
dec
fnsave
pop
inc
mov
xchg
test
mov
or
outsb
cmc
mov
insb
mov
testb
rcrl
test
sub
mov
in
cmpsl
or
ds
ret
add
inc
mov
movsl
xor
lods
dec
inc
push
sub
inc
and
negl
jae
fsubs
ret
adc
jmp
xlat
sbb
jmp
dec
mov
xchg
cmp
es
ds
movsb
clc
sbb
xchg
pop
xor
call
lock
push
pop
cmc
ds
scas
sti
fiadds
out
testl
sub
test
jne
mov
inc
mov
movsl
outsb
sub
arpl
cmp
inc
cld
into
sub
sbb
xchg
xchg
or
dec
sub
gs
mov
and
sahf
aaa
sub
dec
lods
push
jbe
cmp
mov
mov
xchg
jae
in
xor
sbbb
cmp
ret
outsl
xor
pop
int
es
frstor
inc
mov
add
mov
gs
fiadds
dec
add
mov
sbb
cs
je
xchg
std
mov
bound
test
cmp
mov
or
cmpsb
jno
mov
push
pusha
aam
repz
add
repnz
in
dec
push
fs
and
xor
cli
mov
and
mov
push
fidivrs
scas
out
scas
jno
jno
insl
mov
cmpsb
mov
mov
lcall
add
in
daa
inc
sub
inc
push
pop
leave
out
js
add
fisubs
push
inc
mov
xor
cmpsb
xor
inc
xor
cmp
cwtl
pop
inc
mov
push
pop
inc
jg
adc
xlat
adc
in
jmp
xor
pop
mov
inc
pusha
push
pop
inc
jg
pop
in
ds
fdivrl
pop
or
jns
push
push
jns
sbb
lds
inc
mov
dec
fildl
pop
inc
negl
ret
add
inc
mov
daa
outsb
pop
xor
gs
jmp
daa
rol
push
cltd
jne
cmp
clc
repz
jne
cltd
scas
in
sub
shlb
mov
negl
push
mov
push
std
into
cmp
inc
pop
sub
xor
add
mov
cs
fsub
decl
aas
cmp
or
mov
fdivl
jge
sub
ja
mov
xchg
in
inc
cmpsb
cmc
jne
pusha
push
pop
mov
nop
sub
pop
outsb
leave
arpl
cmp
int
addr16
enter
jg
adc
xlat
mov
xchg
cmp
and
and
pop
dec
push
jmp
cld
cmp
inc
and
push
les
and
addr16
fisubs
imul
inc
adc
xchg
pop
sub
mov
movsl
out
icebp
out
adc
push
aad
sbb
jno
cmp
pop
jns
xchg
cmpl
iret
cld
lret
xor
mov
bound
je
fwait
mov
jmp
jmp
pop
pop
test
sbb
mov
aas
xor
jmp
push
adc
xchg
inc
jg
or
out
push
loopne
adc
push
push
in
cli
leave
ljmp
push
icebp
test
inc
test
inc
cmp
add
mov
lods
sub
pop
stc
in
movl
mov
mov
sub
inc
mov
sub
ret
xor
jo
scas
jecxz
ror
cmp
and
cmp
mov
cld
lret
das
mov
adc
data16
ds
shr
test
mov
jno
pop
inc
mov
xor
and
in
jmp
or
xorl
xor
lcall
mov
cmp
inc
out
inc
cld
movsl
pop
sub
mov
jbe
pop
jecxz
dec
push
cmpsb
mov
cli
andb
cld
pop
inc
bound
jg
mov
imul
mov
mov
call
ss
pop
adc
mov
std
leave
mov
jl
pop
movhps
movsb
in
dec
and
xor
sbb
mov
nop
cmp
pusha
cltd
pop
lcall
add
add
adc
add
mov
pop
pop
test
dec
or
das
aaa
xlat
mov
push
mov
jge
dec
aas
dec
outsb
mov
cmp
inc
sti
ss
xor
fwait
mov
push
add
loop
test
pop
adc
xor
push
femms
jne
lcall
out
jnp
ja
xchg
sbb
and
mov
ficompl
add
enter
lds
jge
out
inc
add
xor
jl
mov
out
aas
jmp
mov
jg
inc
roll
pop
imul
sub
sub
push
mov
jg
inc
pop
push
adc
xor
adc
mov
fwait
sbb
scas
iret
imul
mov
sub
andl
xor
mov
out
sub
arpl
dec
lea
scas
push
xor
cmp
and
mov
insl
push
sub
lcall
inc
int3
jp
shl
adcb
das
ds
and
jle
sub
inc
ds
xor
add
mov
ljmp
test
daa
xchg
cmp
insb
inc
or
cmp
add
cld
pop
add
out
ficompl
mov
push
stc
leave
rcrb
mov
inc
xor
mov
movl
or
sarl
jnp
inc
pop
pop
inc
pop
jg
inc
shll
mov
pop
or
jns
push
call
mov
sti
mov
push
ror
xchg
enter
mov
sahf
gs
arpl
std
mov
xor
jmp
ret
inc
mov
push
ja
and
jnp
pop
inc
xchg
sub
adc
jno
jne
scas
clc
hlt
mov
mov
jns
jae
rorb
negb
leave
push
pop
push
daa
sub
xchg
xchg
sti
leave
sub
cmp
addr16
xor
inc
mov
pop
mov
pop
je
imul
lcall
pop
mov
jmp
sub
sti
aam
jg
imul
cmp
inc
lds
mov
jg
rorb
add
mov
jnp
fs
cmp
push
adc
les
or
push
je
inc
scas
jge
jae
movsb
cs
scas
divl
jb
cmp
rclb
sub
je
inc
and
imul
cltd
push
sub
push
sub
lods
push
inc
sbb
popa
icebp
inc
andb
add
pop
aaa
test
inc
loop
mov
inc
outsl
lret
cmp
sub
pushf
lock
stos
dec
pop
mov
mov
mov
mov
add
inc
jg
mov
imul
mov
test
pop
insb
lds
mov
dec
orl
pop
mov
fs
jnp
pop
mull
dec
inc
stos
push
dec
pop
push
dec
mov
mov
mov
jne
mov
sarb
dec
ljmp
pop
lock
sub
add
out
sub
xor
jg
in
jns
mov
enter
je
push
dec
insl
inc
pop
outsl
xor
sti
cld
ret
into
adc
out
in
cmp
mov
dec
mov
mov
dec
adc
push
popa
dec
jp
jp
adc
outsb
pop
add
fcomi
add
mov
pop
inc
ret
addr16
cmp
dec
dec
jle
jns
fadds
flds
cmp
mov
inc
idivl
lock
ret
mov
xchg
pop
pop
.byte
fidivrs
