push
mov
sub
mov
andl
andl
test
push
push
push
lea
jle
lea
mov
xor
cmp
jle
mov
mov
mov
cmp
jne
cmp
jge
mov
mov
cmp
jle
mov
mov
inc
cmp
jl
incl
mov
addl
cmp
jl
cmp
jge
xor
jmp
mov
sub
sub
inc
xor
dec
test
jle
lea
lea
lea
mov
mov
mov
sub
inc
add
add
dec
cmp
jl
sub
xor
inc
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
push
pushl
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
call
pushl
mov
call
push
push
pushl
call
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
xor
test
jle
push
lea
push
mov
cmp
je
inc
add
cmp
jl
pop
pop
cmp
jl
xor
jmp
test
jle
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
inc
xor
test
mov
jle
lea
mov
inc
add
cmp
jl
pop
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
pushl
pushl
jne
push
pushl
call
jmp
dec
push
call
pop
ret
int3
int3
int3
int3
int3
call
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
pushl
mov
pushl
mov
push
call
mov
mov
add
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
call
mov
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
fstpl
sub
cmp
push
scas
das
adc
push
leave
mov
pushf
xchg
int3
loop
lock
ret
sbb
sbb
sbb
cmp
dec
bound
inc
jl
xchg
jle
int3
in
cmp
adc
stos
and
push
pop
inc
dec
je
imul
xchg
rol
loope
mov
fwait
lahf
mov
sarb
pop
pusha
ja
inc
inc
push
mov
mov
or
push
sarb
xchg
mov
xchg
and
sub
mov
mov
arpl
push
ljmp
add
jno
andl
cmp
xor
jle
cmovae
xor
cltd
repnz
add
ret
or
int3
adc
sbb
hlt
loop
mov
outsb
dec
jecxz
or
in
aaa
jecxz
jne
dec
xchg
sbb
pushf
aaa
jl
insb
push
test
arpl
data16
repz
roll
arpl
mov
icebp
and
push
scas
jae
arpl
push
jge
mov
int3
or
int3
and
sub
sub
pop
bound
insb
cwtl
rclb
xchg
movsl
fcmovbe
into
les
in
ret
jg
jns
dec
inc
pop
cmp
push
xor
clc
in
neg
not
sti
mov
sbbl
dec
arpl
aaa
cmp
cmp
mov
pushf
in
out
cmc
test
mov
jne,pn
push
cmp
xor
pop
jb
inc
jl
mov
mov
repnz
ret
or
sbb
sub
cmp
dec
bound
inc
jl
mov
mov
repnz
ret
or
jne
push
ds
lret
popa
stos
mov
bound
insl
ljmpw
jmp
dec
xor
sbb
pop
and
mov
ficoms
jb
pop
les
mov
movsl
jnp
sub
push
enter
xor
outsl
cli
pushf
sbb
push
ds
sahf
imul
int3
inc
inc
cmc
and
outsb
mov
bnd
fldt
mov
ret
call
nopl
call
aam
mov
mov
jae
sbb
xor
pop
test
adc
mov
mov
sub
xor
andl
and
mov
test
mov
xor
push
mov
es
dec
stos
xor
jns
popf
pusha
cmp
dec
jno
pop
jb
pushf
dec
push
testl
dec
push
jb
lea
ljmp
mov
lock
pop
sbb
or
rolb
push
lds
jp
pop
icebp
ret
xchg
mov
pop
push
dec
inc
iret
xor
adc
cmp
or
cmpsb
xor
gs
and
roll
mov
shlb
sbb
std
xor
mov
fldcw
mov
int3
test
test
inc
or
sbb
mov
inc
mov
or
xlat
push
les
pop
shlb
ja
mov
pop
sub
dec
cmp
std
or
cli
xlat
shlb
insb
push
pop
icebp
inc
or
aad
cs
dec
daa
mov
rcl
cmc
sub
xor
and
cs
inc
movl
inc
mov
stos
add
mov
fistpll
lcall
loop
cmp
pop
gs
int3
cmp
imul
test
sbb
push
push
loopne
inc
int
imul
xchg
xor
scas
push
daa
mov
mov
inc
dec
icebp
mov
addl
popa
rorl
inc
push
inc
es
mov
rcrl
mov
gs
dec
jmp
jbe
loope
xchg
xor
cmp
sub
movsb
inc
xchg
mov
jbe
mov
push
cs
and
or
or
negl
dec
repnz
cmp
xlat
adc
sbb
add
enter
mov
or
adc
sub
adc
cld
imull
repz
aaa
push
jge
cmp
aad
mov
sbb
ss
out
sbb
jae
cmp
mov
cmpsl
jmp
pop
mov
cli
mov
in
sbb
daa
rorb
pop
jl
inc
pop
mov
inc
movl
fcmovnbe
xor
cmp
mov
mov
andb
lods
fmull
or
push
or
jne
pop
sbb
negl
mov
push
push
mov
popf
aad
dec
stos
mov
lret
clc
sbb
out
fisttpl
add
fwait
xchg
xchg
cmpsb
push
mov
iret
cmp
sbb
je
push
mov
jge
dec
sbb
stc
pop
mov
inc
xchg
xor
lods
cli
mov
sub
gs
fstl
jecxz
adc
mov
adc
cmp
dec
aaa
loop
push
adc
sbb
sbb
pop
adc
push
jbe
and
negl
pop
mov
cmp
sub
pusha
push
stc
dec
mov
or
icebp
mov
mov
cmpsl
sahf
fdivrl
and
push
js
cmpsb
dec
or
push
mov
lcall
xlat
xor
lcall
aad
movhps
jle
test
mov
xlat
jnp
adc
std
scas
mov
stc
es
sub
push
stos
and
dec
fsubs
imul
movsl
pop
adc
mov
loopne
in
sub
ficompl
inc
cmc
push
sbb
jp
jge
test
xchg
fsub
in
jg
add
inc
and
mov
lea
stc
aas
int
mov
ret
out
or
movsl
rorb
je
jb
and
mov
xor
add
int
in
ret
add
jmp
mov
popf
call
xor
xchg
adcb
xchg
add
cli
adc
ret
lds
loop
imulb
sub
ds
stc
push
lret
sbb
inc
ret
jae
dec
and
mov
lods
lahf
fmull
fimull
fsubs
xchg
mov
pusha
lods
shl
pop
mov
inc
jbe
in
test
mov
add
cmp
xchg
push
cltd
gs
sub
repnz
dec
in
inc
push
dec
adc
xlat
arpl
ret
rorb
cmp
rcr
or
jne
jg
clc
lods
adc
es
pushf
stc
scas
sub
or
add
mov
push
push
xor
mov
mov
jmp
and
lea
mov
mov
enter
aad
addr16
add
aas
xchg
xlat
fisttpl
arpl
mov
jo
js
aas
loope
popf
push
xor
jl
shl
sub
ret
mov
inc
xlat
pop
xor
cmp
jno
and
or
daa
jnp
mov
cmp
fcompl
sbb
lock
test
testb
adc
outsl
shrl
sti
loope
cltd
cmp
movsl
lcall
out
outsl
lods
repz
and
notb
xchg
mov
lret
fidivl
xlat
dec
cmpsb
call
or
aad
stc
mov
fnsave
enter
xchg
mov
inc
inc
sbb
or
cmp
or
mov
fcmovu
push
mov
repnz
and
cmpsb
jp
pushf
pop
jnp
or
icebp
pop
ss
jmp
mov
lcall
cmp
push
lcall
pop
fldcw
mov
loope
ljmp
pop
dec
test
incl
adc
stos
aas
dec
sbb
testl
clc
int
cmp
jg
mov
and
and
mov
or
leave
sbb
ljmp
mov
cmpsb
leave
shrl
call
enter
jno
inc
scas
adc
jl
inc
jmp
xor
jb
add
mov
pop
cmp
sub
adc
mov
repz
nop
imul
outsb
push
adcb
cli
mov
pop
xchg
and
das
sbb
dec
push
fidivl
pusha
xchg
imul
daa
mov
xor
pop
sbb
inc
push
pop
testl
test
jmp
mull
push
out
jo
jge
cmpsb
fldz
add
xchg
icebp
mov
fsubrl
cmpl
xchg
aad
lods
xor
jae
addb
inc
xorl
test
cltd
mov
xor
pusha
fisttps
mov
bound
stos
jl
mov
pop
jp
pop
xchg
movsb
adc
xchg
or
cmc
push
jp
xlat
icebp
push
inc
add
add
hlt
and
stc
mov
jmp
ffree
dec
lods
and
hlt
std
xor
add
adc
std
cld
xor
fcomps
mulw
jecxz
leave
aam
sbb
cmp
int3
xor
std
incb
and
sub
jge
imul
into
add
cwtl
ret
and
pop
popa
xor
mov
ljmp
lock
test
movsl
jne
push
icebp
push
pusha
xor
pop
pop
je
ljmp
push
mov
cwtl
push
jb
pop
mov
addr16
or
adc
inc
repz
in
mov
stos
jb
add
ficomps
and
inc
jne
xor
mov
mov
out
sti
sbb
out
sub
jg,pt
dec
ret
scas
insb
xor
push
lahf
rcr
mov
add
add
in
mov
movsl
add
sub
and
inc
xlat
or
fists
or
and
or
adc
aaa
into
jle
mov
dec
in
jnp
adc
xchg
dec
pop
test
push
rclb
pop
sub
xor
outsl
popf
test
jmp
push
mov
insb
or
shr
pop
and
out
stos
pop
cmc
outsb
ror
lock
or
sub
dec
adc
fistpl
shrl
mov
lahf
call
fisubrl
cmp
cmpsl
mulb
in
out
cmp
mov
xchg
gs
mov
sub
jge
jno
mov
adcl
jb
mov
and
inc
adc
loope
xchg
cmpsl
mov
sub
mov
fidivrs
push
push
jno
dec
fidivl
stos
dec
stos
or
adc
outsb
cmp
push
inc
aad
sahf
cmpsb
dec
and
add
sbb
dec
inc
fmul
pop
call
loope
adc
mov
adc
lea
xor
mov
loope
pushf
sbbl
mov
rorl
in
pop
insl
push
hlt
mov
ds
sbb
repz
pop
stos
cmp
ljmp
cmp
leave
mov
add
lcall
pop
rcrb
fistpll
sub
outsb
dec
and
xchg
fisttpll
cld
pop
mov
dec
outsl
inc
and
lds
sub
push
cmpsb
pushf
inc
adc
sub
out
mov
sub
or
push
adc
gs
xchg
mov
pop
fisubrl
cld
add
and
add
hlt
push
mov
jmp
jmp
lock
loop
push
out
sub
adc
jns
lea
sahf
adc
seto
dec
in
adc
sub
push
mov
sbb
and
ljmp
mov
imul
aaa
leave
mov
lcall
scas
xor
out
adc
rcrb
mov
orb
fstpl
jo
ret
xor
jo
dec
fistl
push
mov
push
lcall
adc
xor
adc
push
mov
jo
mov
cmp
sbb
jb
mov
mov
mov
mov
cmpsl
push
dec
fs
cld
xor
es
int
cltd
iret
xchg
dec
adc
ficompl
shrb
notl
sbb
incb
adc
xor
div
inc
enter
outsl
addb
jge
add
adc
pop
into
lahf
and
aaa
xor
mov
hlt
cmpsb
add
mov
and
ret
mov
xlat
stos
jle
cmp
mov
rcrb
rcl
jo
movb
cld
scas
idivl
cmp
popf
pop
push
lret
pushf
add
jbe
lods
cmp
ss
dec
dec
test
test
pop
xchg
int3
cmp
push
cmpsl
fcoml
fwait
push
inc
arpl
jp
pop
or
xchg
cli
out
mov
mov
lock
insl
push
pushf
in
aad
clc
sti
enter
mov
popf
and
mov
movsb
jmp
xchg
push
xor
jns
push
je
lock
mov
inc
jae
xchg
outsl
repnz
lahf
sub
into
popa
mov
xor
sbb
push
and
sbb
std
mov
jmp
xchg
mov
inc
gs
repz
ror
jg
push
es
cmp
inc
pushf
in
stos
scas
ret
out
hlt
jb
or
jmp
lret
lods
and
insl
cmp
mov
push
mov
lock
or
pop
shr
sub
xchg
orb
jge
scas
jp
shrl
or
inc
stc
adc
mov
dec
fcmovne
sub
repz
mov
lea
loope,pn
cmpsb
nop
lock
mov
pop
jns
dec
icebp
dec
addr16
test
js
xor
pusha
fnsave
adc
sbb
sbb
xchg
int
jl
or
mov
cmp
mov
sub
ja
lods
adc
push
lock
in
xchg
fs
ret
bound
mov
mov
fdecstp
mov
mov
push
adc
das
push
aad
inc
sub
jl
flds
out
push
push
cmc
pop
hlt
clc
out
cwtl
fldl
in
aaa
outsb
mov
arpl
cli
dec
shlb
mov
mov
jnp
mov
js
cmp
addr16
mov
pushf
dec
and
push
sub
jbe
sbb
enter
mov
or
scas
in
cmp
in
out
ja
hlt
js
inc
cmp
cld
in
or
orb
scas
jbe
xchg
ljmp
cmp
cmp
lret
popf
xchg
xor
movsb
lds
ret
lret
imul
cmc
sti
lds
jge
add
add
popf
cmp
pop
dec
nop
mov
in
mov
xchg
pop
addr16
sub
test
lcall
orl
adc
aas
pop
ret
push
cmp
test
pop
dec
in
inc
sbb
sub
inc
push
nop
fidivs
out
add
xor
imul
xchg
test
xor
pushf
shll
loop
pop
or
imul
lcall
mov
gs
pop
fnstcw
incl
inc
jmp
lds
cmp
sub
sbb
jb
xor
dec
jp
ds
adc
ret
or
lods
add
fdivr
jp,pn
mov
or
mov
repnz
ja
or
jb
cmp
enter
pushf
dec
xlat
in
xchg
push
outsb
push
fcomp
je
mov
push
xchg
sub
sub
aad
fs
pop
push
pop
add
xor
jo
das
aam
fs
pop
dec
xchg
cmp
insb
and
je
icebp
test
or
mov
out
xor
and
lock
out
dec
call
mov
pop
lea
in
mov
lds
sbb
and
into
scas
jo
xor
xor
fwait
outsl
rorl
testl
stc
or
into
add
add
testl
pop
inc
or
test
arpl
lret
cli
mov
out
ret
jecxz
aam
out
cli
in
pop
and
roll
orb
inc
inc
jnp
push
adc
je
jg
daa
sbb
or
std
cmp
repz
inc
hlt
adc
lret
ds
jp
sbb
jbe
jb
sub
lea
xlat
nop
inc
cltd
dec
hlt
cmpsb
cs
jp
fidivrl
fiadds
jnp
sbb
loope
inc
mov
aaa
mov
in
jl
es
mov
pop
aam
sbb
mov
pop
adc
adc
ss
xchg
sti
movsl
or
mov
sbb
mov
jae
mov
in
lret
sbb
xor
push
lock
addr16
lahf
push
cmpsb
sbb
stos
jne
loope
push
bound
sbb
sub
fisubs
mov
test
loopne
insl
pop
mov
and
add
mov
clc
jb
sbb
das
rcll
in
xlat
repz
icebp
cmp
arpl
call
sbb
mov
cmc
pop
or
shll
jp
repz
stos
mov
mov
int3
mov
adc
movhps
or
fisttpl
mov
dec
mov
push
ficoml
mov
xchg
lods
cmpsl
popf
movsl
mov
cmp
enter
mov
jb
push
cmp
push
xchg
insl
or
out
xchg
cmpb
lds
push
test
dec
pop
faddl
negl
mov
aaa
pop
stos
xchg
mov
cmc
sub
pop
leave
pop
add
xor
lods
xchg
jle
mov
fsts
xor
adc
fcoms
rolb
mov
hlt
adc
es
mov
repz
lods
and
int3
pusha
add
lret
scas
lcall
sbb
mov
mull
xor
dec
stos
sti
cmpsb
cli
test
cltd
adc
add
outsb
andl
shlb
into
hlt
xor
lret
cmp
fwait
leave
adc
or
or
ret
adc
push
xor
cltd
outsb
cmc
je
out
enter
repz
inc
out
mov
pop
mov
xchg
loop
pop
jmp
cs
xorl
adc
xor
and
jbe
test
inc
xlat
sbbb
movsb
out
and
aad
pop
xlat
mov
xor
inc
ds
xchg
and
inc
push
pop
stos
sub
mov
fcomip
mov
and
loopne
add
xchg
push
fbld
pop
xchg
jg
fldcw
cwtl
add
adc
lret
fs
dec
subl
scas
pop
mov
cmp
sub
jge
mov
lods
push
out
fists
lret
jnp
sub
or
xchg
test
dec
sbb
mov
sub
push
outsb
xchg
js
sbb
jg
in
shl
adc
jl
fiaddl
int3
jge
push
gs
orb
sti
push
iret
cmp
cmp
shl
ss
add
sti
pusha
lahf
sub
in
mov
mov
addb
mov
pop
cmp
xchg
push
leave
mov
pusha
sbb
xchg
jnp
sub
dec
mov
inc
xor
mov
cltd
xchg
test
add
fucom
scas
in
push
imulb
jp
xchg
imul
or
and
jb
iret
cmp
leave
pushf
mov
cmpb
jnp
jmp
jp
mov
das
add
out
mov
jl
and
or
mov
sub
popf
testb
cmp
sbb
in
mov
cmp
ret
data16
nop
aam
lret
das
std
dec
inc
loopne
das
sbb
pop
iret
mov
sbb
call
and
or
and
xor
sbb
sarl
sub
push
pop
mov
subl
xor
and
inc
repnz
or
and
cmp
add
nop
push
hlt
adc
pop
pop
push
xor
ljmp
add
xchg
aaa
imull
xchg
and
dec
mov
cmp
pop
stos
insl
lods
push
xchg
jge
xor
mov
cmc
scas
aaa
push
mov
cmp
xor
dec
xchg
jne
stos
mov
pop
sub
pop
jmp
xor
sarb
pop
fdivrs
ss
repz
mov
xchg
add
fsubrl
ss
inc
jae
aaa
mov
cmpsb
push
fsubl
sbb
push
xor
incl
std
aam
rcll
sbb
out
add
ja
xchg
test
sbb
int3
pop
and
inc
out
pop
jmp
sbb
cmpsl
jne
fisubs
mov
les
or
out
out
roll
mov
mov
sbb
add
ds
aaa
or
push
push
cmc
notl
adc
es
mull
mov
outsb
inc
cmpsl
dec
fwait
push
add
fisubrl
add
cmpsl
daa
jae
ret
js
ja
mov
out
push
cltd
xchg
popf
sar
mov
lahf
in
jp
and
mov
in
xor
gs
ljmp
xor
xchg
push
fs
inc
dec
scas
pop
lahf
sarl
mov
fsubrs
in
xchg
add
repz
inc
sbb
mov
movsl
adc
sub
dec
sub
bound
sbb
dec
add
push
imul
fsubrl
dec
scas
test
push
mov
inc
pop
push
or
cmpsb
add
lods
int
push
fucomp
int
test
push
dec
aad
adc
or
stos
push
dec
cmpsb
in
out
aam
into
out
cmp
xor
dec
into
jne
or
out
outsl
xor
daa
push
mov
jecxz
loop
ror
pusha
std
ror
std
movsl
out
repnz
adc
xor
xlat
mov
cli
jo
data16
loop
and
movsl
inc
xchg
sub
out
outsb
ljmp
pop
cs
push
adc
leave
cmp
in
mov
push
adc
push
jnp
lods
or
mov
je
ljmp
fistps
dec
call
jno
jne
lds
inc
mov
mov
leave
test
mov
mov
jecxz
idivl
jg
jnp
push
nop
icebp
sar
sub
rorb
and
push
add
test
mov
xchg
test
pop
dec
jo
and
loop
and
popf
mov
cld
lret
pushf
sub
mov
or
push
add
sti
cmp
mov
mov
mov
add
hlt
cmp
in
mov
mov
mov
adc
leave
nop
std
dec
outsl
imul
lret
jbe
sbb
lea
js
icebp
pop
inc
lock
jp
adc
inc
xchg
inc
les
sbb
test
mov
xchg
xchg
jp
sbb
pop
lds
lret
inc
cltd
cmp
ror
mov
int3
cmp
pop
ficoml
mov
cli
sub
sti
mov
pop
clc
inc
dec
shrl
je
inc
or
xor
bound
inc
jl
mov
mov
repnz
ret
or
sbb
sub
cmp
dec
bound
inc
jl
mov
mov
repnz
ret
or
sbb
sub
cmp
dec
bound
inc
jl
mov
mov
cmpb
loop
sarb
and
xor
add
dec
bound
ret
jae
arpl
push
cmpb
cmp
in
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
nop
loop
repnz
mov
fldl
bound
jb
inc
and
and
jo
pusha
adc
ret
shlb
loopne
adc
adc
inc
and
and
jo
pusha
adc
ret
shlb
loopne
adc
and
es
push
push
xor
jo
adc
loop
lods
mov
leave
sbb
xchg
push
sbb
xchg
fdivr
sub
pop
daa
xlat
fucom
lret
mov
jl
jg
dec
movsb
pop
sub
or
or
lods
mov
filds
push
inc
fisubs
push
xor
mov
jmp
arpl
ret
scas
lahf
adc
scas
push
and
repnz
pusha
fwait
nop
mull
sarb
or
lea
sarl
inc
int
std
jmp
ret
add
sub
or
imul
sahf
or
add
ror
std
pusha
lahf
lods
je
or
sti
xlat
dec
aas
push
div
jb
pop
inc
jb
push
dec
push
mov
adc
mov
bound
push
loop
repnz
mov
mov
and
adc
jb
inc
and
and
jo
pusha
jnp
jecxz
imulb
scas
mov
int3
fs
gs
inc
sub
inc
add
add
push
out
hlt
lock
loope
mov
mov
mov
movsl
xchg
bound
addr16
dec
and
cmp
sbb
inc
imull
lds
lock
adc
jb
inc
and
and
jo
pusha
adc
ret
shlb
loopne
adc
jb
inc
and
and
jo
pusha
adc
jo
xchg
add
pop
out
or
pusha
cmp
lods
in
xor
cmovl
push
cmpsl
pop
mov
fs
bound
div
mov
repnz
int3
xor
jle
cmp
jp
in
test
mov
xchg
adc
and
imul
inc
imul
es
shlb
or
mov
cmp
cmp
mov
pop
arpl
sub
jnp
push
pop
sahf
cmp
xchg
out
fucomp
addb
test
add
leave
xchg
xlat
nop
pop
push
sbb
ja
mov
lret
add
fdivr
mov
jle
xor
add
test
adc
pusha
fnstsw
imul
or
fwait
sub
lods
xor
or
cmp
in
dec
xor
int3
and
cmc
pushl
mov
inc
cmp
add
inc
inc
popf
js
adc
inc
mov
pop
cltd
push
or
jns
inc
mov
rolb
ret
je
pusha
popa
mov
leave
das
push
lds
enter
ret
mov
xchg
repnz
pop
aam
sbb
xchg
es
fldcw
sti
es
xlat
aaa
insb
sti
xchg
or
mov
sub
adc
and
xchg
repz
push
and
mov
cmp
jecxz
mov
sar
adc
out
imul
leave
jne
inc
adc
sub
pop
dec
add
push
dec
add
fildl
xchg
mov
pop
xor
pusha
sahf
add
or
push
xchg
dec
movsl
xor
pop
aaa
test
out
or
sub
outsl
test
loopne
ror
into
lcall
popf
cltd
mov
fs
push
push
loop
bound
xchg
dec
mov
rorl
in
shr
sub
xorl
dec
dec
pushf
movsl
push
addr16
stos
pusha
stc
sub
inc
inc
fs
mov
pop
test
mov
add
jo
xchg
shlb
mov
add
mov
push
or
sbb
ds
jae
jg
or
add
mov
or
jno
mov
bnd
pop
pop
imul
jns
rcrl
sub
pop
dec
jl
inc
push
cld
leave
mov
cmp
mov
jle
or
fs
rcrb
sub
adc
mov
and
cmp
push
dec
inc
cmp
stos
mov
mov
icebp
mov
fnsave
adc
mov
mov
lods
cmpsb
pop
imul
mov
rcll
fmuls
mov
notl
sbb
adc
sahf
mov
jns
shrl
in
inc
inc
pop
dec
jl
sbb
out
inc
addb
or
add
push
scas
out
adc
test
pop
std
mov
mov
jns
clc
sbb
xor
jno
outsl
andl
adc
jmp
sbb
dec
leave
popl
mov
mov
rorb
and
sbb
lahf
mov
jp
cmc
jbe
scas
data16
inc
pop
mov
mov
or
dec
out
shll
inc
cltd
sub
sub
jle
je
sbb
movsb
cli
adc
pusha
stos
inc
sub
dec
mov
sbbl
pop
sub
jmp
jle
arpl
lcall
cmc
adc
xlat
or
div
pop
fildll
cmp
scas
cmp
inc
or
pop
movsb
mov
out
lret
nop
xor
sarl
into
mov
pinsrw
sbb
pop
jne
inc
adc
sbb
int
je
into
test
inc
mov
xchg
pop
cs
aas
ret
mov
fnstenv
movsl
out
into
ret
cld
xor
sbb
std
sbb
pusha
pop
out
out
cld
insl
adc
mov
push
inc
sti
jecxz
add
iret
xor
and
push
outsl
push
iret
xchg
cltd
mov
xchg
cmp
lods
push
mov
mov
pop
rol
mov
push
pop
xchg
movl
popf
divl
lahf
mov
mov
test
rcrb
push
js
sbb
int
test
inc
or
mov
mov
jae
cmpsb
in
ds
adc
sahf
push
aaa
jl
mov
dec
rclb
ror
sub
mov
mov
daa
dec
cmpsl
xor
adc
pop
push
pusha
or
mov
xchg
mov
rcrl
jno
neg
jo
adc
inc
pusha
rolb
test
rcrl
iret
mov
pop
jns
xor
sub
jmp
stos
mov
add
xor
xchg
xchg
daa
cwtl
inc
inc
jge
test
aad
bound
mov
mov
xchg
or
sub
repz
lret
adc
xchg
mov
xchg
push
mov
mov
movsb
xchg
dec
in
pop
stc
inc
ss
mov
int3
jmp
jle
jle
lcall
add
xchg
ficoml
or
mov
add
jge
dec
leave
cmp
movsb
sub
adc
loope
push
jae
jge
inc
pop
fld
cmpsl
adc
les
mov
insb
mov
sbb
inc
push
out
pop
mov
repnz
sbb
frstor
cmp
mov
lret
inc
push
lods
imul
jp
add
pushf
push
lods
es
pop
ficompl
xchg
jge
xchg
xor
dec
or
insl
pop
lret
adc
sub
sub
lock
cmp
jl
in
xchg
mov
add
sti
add
in
cmp
rolb
dec
data16
sbb
cli
rcll
push
pop
test
ret
movsb
xchg
pop
aas
popf
aas
into
cmc
shl
movsb
sub
insl
sub
xchg
roll
or
ds
cld
imul
jle
push
push
or
push
loopne
jl
lcall
shlb
rcrb
lock
jecxz
arpl
in
adc
loope
cmp
and
mov
push
inc
dec
jle
xor
and
loopne
into
fldcw
jecxz
gs
in
scas
icebp
cmp
shll
sbb
mov
xchg
movsl
out
fists
and
and
in
cmp
hlt
int3
ss
dec
mov
jb
push
outsl
inc
mov
inc
push
or
mov
test
jne
jl
push
rorl
pop
xchg
jb
inc
shll
icebp
sti
mov
or
push
mov
aad
stos
and
pop
testb
movsb
pop
repz
fildl
push
push
test
and
and
and
mov
xor
jl
mov
cmp
into
pop
das
adc
fimuls
mov
loop
cs
jmp
das
dec
inc
in
pop
push
jno
out
enter
xor
insb
xor
rcrb
cmpsl
out
cs
cmp
movsb
fwait
mov
inc
shlb
inc
addb
sub
push
lret
pop
cld
cmp
dec
fs
cmp
gs
jle
stos
icebp
das
add
and
push
mov
mov
jle
mov
pusha
fdivl
inc
gs
mov
or
mov
stos
cmpsb
sub
push
call
mov
daa
dec
fists
adc
mov
xlat
nop
imul
aaa
cmpsb
sbb
mov
sub
jb
pop
mov
inc
ljmp
xor
shrl
pop
xlat
icebp
add
inc
xchg
ss
dec
jmp
pusha
add
dec
cwtl
add
jmp
repz
and
jmp
adc
xchg
mov
ficoml
xchg
jl
sbb
repz
mov
xchg
pop
fisubl
jecxz
pop
xchg
imul
mov
cmpsl
bound
sbb
pop
repnz
andl
mov
jae
mov
lret
xor
jne
mov
out
dec
loope
cs
das
mov
fcmovnu
in
mov
lret
sbb
outsb
or
cld
jae
lock
pop
add
xchg
xchg
hlt
xchg
jmp
test
jecxz
cmp
adc
push
test
inc
inc
or
dec
js
addl
inc
enter
xor
and
popf
adc
jle
dec
mov
nop
mov
mov
mov
cmpsl
push
out
dec
int
mov
xchg
mov
mov
int3
outsl
sub
pushl
mov
inc
icebp
ss
xchg
cwtl
int3
pop
add
into
xor
jne
jnp
ret
adc
dec
add
cmp
add
mov
push
mov
dec
mov
vunpcklpd
aas
mov
in
or
lret
rcl
xlat
icebp
iret
jg
lret
in
out
jno
lcall
icebp
cmp
xor
sbb
dec
jno
xor
out
fwait
mov
xchg
sbb
jge
sbb
inc
loopne
stos
push
mov
and
push
insl
push
in
and
xor
xchg
jb
push
mov
add
mov
and
nop
jle
xchg
lret
push
iret
mov
add
adc
jle
cmp
cld
iret
and
idiv
outsb
ljmp
pusha
xchg
in
and
xor
mov
rorb
xor
add
in
dec
add
xor
xor
push
push
inc
mov
cltd
jg
outsb
push
cmp
mov
push
mov
packuswb
mov
repnz
scas
jne
ret
cwtl
iret
nop
dec
xchg
adc
mov
imul
ss
and
sbb
jne
cmpsl
dec
dec
pushf
sub
jmp
daa
jb
in
fwait
ds
lret
popf
daa
leave
cmp
pop
fisubrs
push
adc
add
movsb
out
inc
hlt
xor
cmpsl
jno
enter
or
inc
hlt
shll
notl
sbb
repnz
filds
divl
cld
movsl
test
out
outsb
xor
mov
push
ljmp
out
inc
or
ret
xor
ljmp
inc
lret
push
fnsave
mov
cwtl
lods
add
mov
push
jg
mov
rcrb
push
lods
push
jnp
inc
call
sbb
iret
ss
and
lcall
pop
jg
sbb
scas
adc
inc
jb
adc
mov
jle
pop
movsb
mov
push
lods
mov
aam
cwtl
daa
cmpsb
std
sbbl
mov
push
popf
mov
push
cli
jmp
cmp
aad
int
pop
pop
shl
repnz
outsl
fisttps
sub
lds
ja
fimull
cmp
fxch
lock
iret
dec
js
lcall
sub
push
clc
mov
jbe
and
cmovnp
mov
call
in
xchg
or
faddl
fldl2t
fprem
jl
hlt
push
test
lock
sub
mov
dec
std
pop
mov
add
adc
push
out
inc
push
pop
shrl
cld
push
out
aaa
fmull
mov
inc
or
aas
push
lcall
push
cmpsl
xchg
adc
mov
pop
xchg
stc
and
adc
rolb
push
cmp
jg
sub
fidivl
pop
cmp
out
cmp
and
jb
jnp
movsb
jmp
cltd
pusha
pop
mov
cmp
pop
and
bound
push
push
sbb
dec
gs
test
sbb
adc
pop
cmc
lods
sbb
sub
leave
mov
add
xchg
hlt
pop
fbstp
sbbb
jmp
pop
push
adc
roll
ret
dec
js
lret
pop
je
repnz
aas
mov
jmp
jnp
loop
in
fs
inc
data16
lcall
lahf
jns
cmpsb
aam
xchg
test
mov
clc
xor
cmc
lods
xchg
mov
mov
neg
aam
and
arpl
inc
dec
sbb
cli
dec
dec
and
xchg
xor
and
jbe
lcall
out
mov
loope
sbb
pusha
mov
ja
out
dec
mov
pop
sub
push
fnstsw
std
adc
jnp
les
xchg
and
jae
jne
shr
cmp
dec
jmp
sub
sbb
adc
das
jle
stos
cmp
in
addr16
fwait
inc
cmpsb
mov
ret
mov
repnz
mov
mov
cmp
cmpsb
cmp
mov
mov
dec
cli
js
mov
sbb
popf
sbb
push
or
pop
sysexit
into
sbb
dec
test
xchg
testb
loopne
sub
fs
test
lods
push
lock
repz
sbb
notl
int
cmp
mov
sub
mov
inc
push
call
inc
ficoms
iret
cmpsl
cltd
je
add
cmp
add
mov
push
sub
pop
mov
pop
idivb
fdivl
mov
push
je
in
das
mov
out
ret
xchg
scas
mov
push
cltd
or
push
dec
pop
sahf
xchg
push
lret
sti
or
mov
dec
sbb
andb
xor
fisttps
xor
in
ljmp
arpl
pop
cmp
or
jnp
and
push
aaa
dec
push
mov
fcoml
inc
mov
adc
fdivrs
fildll
fdivr
aad
std
inc
xchg
lea
cmp
mov
lds
cli
insb
ret
pop
push
mov
and
sahf
cmp
enter
stos
fs
ss
cld
leave
xchg
dec
out
dec
dec
in
enter
fildl
mov
mov
add
mov
pop
cltd
repz
mov
push
xchg
cmp
cmp
pop
fnstcw
lahf
imull
into
mov
sahf
iret
test
mov
hlt
aad
adc
ficoms
push
xchg
repz
pop
inc
subb
pop
pop
test
cmp
pop
lcall
xchg
lods
sub
enter
add
push
mov
pop
and
test
std
aas
dec
ljmp
ja
and
cmc
add
and
imul
cmp
adc
jns
mov
dec
ljmp
dec
aas
mov
andb
and
rcrl
lea
daa
pop
jns
pop
out
inc
push
cltd
mov
mov
lret
into
sub
gs
and
add
lods
mov
xor
test
mov
jns
or
push
sbb
cmpsl
xchg
pop
jmp
fisubl
sbb
pop
pop
outsl
clc
push
sbb
sbb
pop
sti
fst
stos
mov
shll
ljmp
sbb
popf
mov
outsb
fbld
jmp
xchg
js
int3
std
out
dec
pop
ret
call
je
cwtl
dec
rorb
and
js
outsb
xchg
es
sub
adc
dec
sbb
lahf
sub
lret
cmpsl
push
xor
jg
jne
sbb
mov
in
mov
out
adc
lahf
xor
cmpsb
pop
and
mov
iret
cmp
jo
pop
xor
push
mov
movsb
imul
je
sub
mov
and
jle
mov
in
mov
pop
cmc
mov
cs
ljmp
data16
stc
leave
icebp
push
mov
andl
scas
push
mov
xchg
sarb
pushf
imul
insl
cmp
push
jb
push
rorb
std
xchg
pop
clc
push
ss
fnstcw
test
mov
xchg
jno
aam
xchg
cmp
xor
popa
push
ret
adc
stc
sbb
push
movhps
loope
xor
jecxz
cmpsb
mov
xchg
jg
icebp
xor
adc
lcall
cmpsb
ret
sbb
mov
fildl
out
xchg
mov
mov
fcomp
mov
dec
fisttpll
daa
jle
sub
mov
jb
cmp
cli
cmp
daa
or
cs
mov
shll
test
imul
cmc
mov
sbb
pusha
push
sahf
push
or
dec
cmp
mov
cmpsb
or
mov
or
push
int3
add
inc
push
mov
inc
call
add
dec
push
mov
sub
pushf
jp
gs
rolb
ljmp
jnp
and
icebp
and
arpl
imul
icebp
and
loopne
pop
shll
xchg
mov
inc
out
adc
test
mov
cs
mov
sub
out
lcall
jns
dec
xchg
cmp
add
jg
inc
add
movsl
inc
ror
stc
pop
pop
push
ret
mov
shlb
xor
lcall
mov
lea
jle
inc
dec
mov
setno
adc
imul
aam
cmpsb
and
push
rcl
leave
sbb
lods
ljmp
cmpsb
out
test
shl
push
fbstp
sub
jne
shll
xor
rolb
sub
sbbb
aad
xchg
mov
jmp
movsb
dec
sub
fcoms
add
stc
add
inc
pushf
jo
jae
lret
das
test
xor
sub
pushf
movl
cmpsb
sar
mov
movsb
pop
xchg
mov
inc
and
push
jle
cli
jmp
xchg
pop
mov
sahf
ret
enter
bnd
and
add
imul
cmp
inc
idivl
ds
mov
jg
in
push
sub
jns
jecxz
ljmp
mov
mov
ds
jl
scas
aas
adc
aaa
xlat
xchg
jle
sub
shlb
in
xor
stos
jb
sub
mov
or
sub
push
sub
jo
mov
pop
ss
cmp
cmp
jmp
mov
cli
sti
dec
ljmp
jle
aas
sti
rcrl
xor
push
jnp
pop
xchg
sbb
aas
stos
add
movsl
and
pushf
xchg
pop
sub
mov
aaa
loopne
cmp
fbstp
bnd
sbb
jnp
xchg
insl
cmp
in
mov
xor
and
es
in
out
test
sub
andb
addr16
dec
pushf
mov
sub
fnstenv
add
push
dec
mov
sub
fcompl
pop
mov
dec
jle
call
add
mov
or
mov
pop
ds
push
dec
sub
lcall
mov
mov
je
out
sub
arpl
frstor
insl
in
lret
mov
pop
and
popa
sub
popa
rorl
push
lock
adc
outsb
ret
into
repz
mov
sti
xor
pop
push
xor
pusha
lds
ficomps
and
aaa
lret
ds
jae
mov
shll
push
ret
xchg
add
js
mov
addr16
test
or
pop
fs
lds
daa
pop
ss
jbe
jnp
scas
jg
loope
daa
orl
insl
int3
lret
into
popa
ja
loop
arpl
xor
xor
int
into
xchg
sub
and
sub
inc
ljmp
adc
mov
sbb
bound
out
std
jne
dec
cmp
xchg
push
xchg
pop
adc
addl
add
call
rolb
loope
jp
jbe
mov
or
adc
movsb
test
movsb
fadds
outsb
ja
scas
mov
mov
aam
inc
fcomps
lds
lcall
fisubl
cmpsl
test
cwtl
dec
and
cltd
and
push
aam
notl
jmp
xchg
push
insl
loope
lods
dec
mov
lock
dec
cmpl
aaa
ljmp
outsl
xor
mov
stos
inc
movsb
push
jo
movsl
jnp
xor
mov
je
outsl
inc
inc
cmp
ljmp
mov
lds
imul
dec
jns
arpl
pop
mov
push
push
sub
xchg
repnz
dec
repz
popl
add
in
and
in
xchg
cmpsb
lea
sub
rcr
adc
loope
jge
jg
outsl
inc
and
addr16
mov
nop
push
in
cli
or
popf
test
inc
mov
inc
jnp
jnp
mov
lods
and
aad
test
add
or
inc
popa
dec
mov
insb
fucomi
jnp
dec
int
pop
or
fmulp
xchg
jns
pop
movsb
sbb
xchg
xor
les
push
aad
xchg
cmp
lret
lret
or
mov
mov
pusha
outsb
push
and
fadds
and
xlat
cmp
test
jl
xor
add
jp
add
jns
mov
addr16
inc
jne
adc
inc
mov
inc
inc
stc
mov
outsb
sbb
dec
jns
and
loope
inc
ret
inc
cli
jge
dec
addb
sbb
addl
xor
add
adc
repnz
mov
mov
and
adc
jb
inc
and
and
jo
pusha
adc
ret
shlb
loopne
adc
jb
inc
and
and
jo
pusha
adc
inc
mov
xor
and
adc
add
inc
and
and
jno
pusha
adc
ret
shlb
pusha
xchg
out
fcomps
stos
enter
cwtl
in
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
arpl
inc
mov
xchg
lret
jno
push
fnclex
sub
aaa
ret
sbb
sbb
pop
xchg
pop
arpl
push
fwait
and
xor
add
adc
repz
cmp
sub
sbb
dec
xchg
pop
jp
push
pop
xchg
dec
cmpb
sub
sbb
adc
cli
enter
jle
sbb
sbb
sbb
inc
jmp
and
push
aam
mov
mov
xorb
loop
mov
cmp
out
or
add
stos
fcmovbe
aas
sbb
orl
pushf
push
cmp
aam
jmp
mov
shll
mov
or
sti
mov
sahf
mov
mov
pop
sti
arpl
fmul
xor
cld
xchg
adc
jnp
imul
sub
pop
cmp
xor
xchg
pop
into
je
jnp
lret
sub
dec
fwait
jecxz
jecxz
xor
sbb
mov
jl
andl
lods
push
xor
lock
sbb
sub
mov
cmp
push
xorl
inc
fwait
push
xorl
or
cli
xor
and
adc
add
dec
xchg
aas
bswap
push
mov
push
mov
adc
mov
mov
mov
dec
ss
adc
dec
cwtl
xor
add
xchg
pop
ret
jg
pop
mov
daa
idivl
push
ljmp
imul
fninit
sub
cmp
or
sbb
dec
xchg
pop
arpl
push
fwait
and
xor
add
adc
jecxz
repz
or
sbb
dec
xchg
pop
arpl
and
and
int
xlat
orl
sahf
stos
or
stc
aaa
sti
mov
lahf
rorl
mov
dec
fcomps
xchg
cmp
mov
sub
js
cs
scas
mov
fnsave
das
lahf
sub
pusha
shll
jmp
xchg
bnd
dec
test
mov
in
xor
ja
jp
adc
adc
pop
pop
mov
cmp
out
enter
cmp
add
push
pushf
std
mov
xor
inc
int
xchg
pop
lods
jmp
dec
lret
enter
mov
bound
in
jl
pushf
rclb
jmp
mov
xor
inc
mov
cmpl
adc
push
in
bound
int
dec
add
mov
cld
xchg
imul
cmpsb
jge
movsb
rorb
fildl
jmp
nop
jecxz
aaa
xchg
dec
pop
imul
outsl
ret
addl
pop
push
xor
lds
cmp
aad
sub
jl
in
jmp
cmp
adc
sahf
or
lea
out
int
stos
sbb
xchg
mov
lods
sbb
dec
mov
dec
dec
adc
adc
xor
fwait
adc
ffree
push
xlat
jmp
xchg
sahf
dec
adc
mov
inc
xchg
push
push
push
ja
pop
xchg
xor
mov
xchg
aaa
mov
cmp
lahf
sbb
dec
outsb
cmpsl
add
stc
cmpsl
shrl
and
mov
out
shll
mov
test
push
mov
test
dec
loopne
cmp
pop
xchg
fdivr
adc
rol
and
dec
lret
jmp
loop
sub
mov
lret
rcll
mov
jl
pop
fstl
enter
cld
lods
xchg
mov
lret
subb
mov
mov
xor
push
rep
subb
mov
dec
mov
inc
scas
clc
popf
mov
nop
test
add
jl
jae
ljmp
insl
fcomip
push
popf
or
sti
sbb
scas
insl
add
jno
inc
pop
call
data16
pop
jbe
xor
lea
and
sbb
mov
dec
nop
ss
xor
mov
loopne
add
into
jge
lea
pushf
in
xor
adc
out
add
xchg
push
lret
insl
sbb
and
testb
cld
cmp
fwait
jp
mov
jne
jnp
pop
cmp
sahf
push
sbb
inc
push
jmp
loope
adc
mov
shrl
jp
scas
loopne
xchg
sbb
sbb
mov
cs
test
lret
push
sub
xchg
lret
sbb
pop
sub
les
inc
xchg
test
mov
outsb
add
mov
push
ljmp
sbb
stos
ljmp
mov
mov
sub
adc
inc
out
test
out
cwtl
aam
xor
fbstp
pop
mov
fadds
adc
dec
xchg
dec
add
mov
push
adc
clc
adc
fcmovb
mov
xlat
push
idivl
add
xchg
mov
in
jge,pt
adcl
dec
cmc
pop
add
testl
sbb
inc
and
or
lock
outsl
aad
aam
mov
push
xchg
inc
pop
inc
push
sub
movb
out
lea
cmp
push
gs
xchg
mov
scas
mov
push
mov
fwait
cmpsb
cmp
ja
out
push
add
xchg
add
popa
mov
lahf
call
arpl
es
fs
or
sti
pop
dec
popa
pop
add
insb
mov
fmul
lcall
xchg
or
cwtl
lods
push
loope
sub
rol
movsl
andl
inc
js
data16
push
mov
cs
adc
inc
dec
mov
mov
in
jp
addr16
stc
push
push
movsb
out
fimull
xchg
push
and
lcall
insl
xlat
add
arpl
pop
jne
bound
jl
fiadds
mov
movsl
mov
mov
fcoml
pop
fsubrl
loopne
dec
mov
jmp
movsb
pop
loope
inc
xor
insb
repnz
adc
jo
std
sbb
adc
push
pusha
cmp
mov
inc
mov
sbb
sarb
enter
or
sub
jb
sub
insl
pop
add
xor
fbstp
mov
jg
mov
pop
mov
cmc
adc
push
test
sbb
mov
push
xchg
dec
mov
movsb
pop
pop
mov
movsl
test
sbbb
mov
push
cmp
mov
cmp
jns
sub
lods
add
sub
or
pop
adc
jae
lahf
mov
push
xchg
notl
mov
xchg
cmpsl
jge
leave
fisttpl
mov
movl
mov
scas
add
and
mov
test
xorl
dec
shrl
or
std
mov
dec
enter
gs
jo
cmp
mov
sbb
in
movsl
sub
jge
pop
rorb
idiv
repnz
sbbl
pop
pushf
mov
sbb
movsl
inc
dec
fwait
mov
ja
mov
subb
pop
mov
lret
adc
adc
int3
adc
es
lock
add
imul
cltd
enter
xchg
push
mov
std
push
mov
and
scas
notl
stos
mov
inc
adc
mov
mov
movsb
das
fstps
lds
jmp
test
jle
ffree
rorb
into
arpl
dec
and
push
test
jmp
loope
cmp
cmp
aaa
and
xor
push
dec
fildll
adc
enter
lods
nop
mov
and
repnz
addl
push
ljmp
fnstcw
pop
movsl
fidivrs
out
shr
cmp
xchg
mov
cmp
fsub
out
xchg
pop
das
shrb
or
movsb
test
adc
sub
sub
ret
jle
adc
int
ret
lods
test
daa
dec
out
cmp
inc
imulb
addr16
cmp
mov
popa
jne
and
je
push
dec
adc
pop
push
xor
sarb
add
mov
mov
aam
popf
dec
cltd
test
xor
or
fwait
je
adc
push
mov
movsb
ficoml
pop
sbb
cbtw
pop
or
add
cmp
sbb
cmc
cmp
sti
add
das
sbb
ds
out
mov
imul
adc
or
ret
add
ja
shll
std
adc
or
cmp
fimull
sti
outsl
add
pop
ss
mov
pcmpeqd
and
mov
xor
scas
sub
inc
inc
xchg
test
sub
mov
jbe
jb
les
or
lods
xrelease
push
cmc
inc
jbe
pop
xchg
sub
sbb
repnz
mov
rcrl
lods
jb
mov
imul
popf
push
push
xchg
mov
int3
xor
sub
aas
loope
dec
mov
cmp
pop
dec
jae
jae
stc
ret
imul
fcmovbe
lods
daa
aad
mov
int3
cmpsl
sbb
rcl
and
jne
push
pop
and
ret
test
ja
add
mov
icebp
mov
add
pop
pop
pop
push
sub
int3
fbstp
push
scas
loopne
popf
stos
loopne
jge
cli
cld
or
imul
in
mov
add
xor
push
jno
fwait
shl
cld
add
sub
push
sub
fimull
mov
push
adcb
pusha
cmc
lahf
aas
lods
mov
mov
inc
sbb
or
jae
mov
pushf
repz
aas
mov
push
lock
out
cmpsb
cwtl
pop
push
iret
popa
mov
maskmovq
negl
nop
add
adc
shrb
imul
insl
pop
je
fs
push
out
cli
and
adc
call
in
and
sti
sbb
fldcw
and
sbbb
cmp
rcll
mov
in
std
int
jbe
sbb
imul
inc
pop
dec
jb
xor
loopne
mov
cs
jb
leave
pop
pop
repnz
sub
mov
or
xor
bound
or
xchg
pop
push
mov
adc
and
xchg
mov
mov
xor
mull
xchg
loope
xor
stc
loopne
arpl
sbb
cmpsb
cmp
gs
fsubs
and
test
and
mov
daa
mov
pushl
sub
push
ret
js
insl
inc
into
sbb
fucom
adc
pop
xor
rcrl
mov
into
pop
out
cmpsb
test
into
cli
push
popf
gs
ljmp
pop
fstpt
addl
cltd
pop
adc
mov
insb
rclb
es
enter
sub
mov
or
mov
sbb
stos
pop
lcall
jge
jnp
jge
std
loop
mov
pop
mov
and
or
out
cmp
and
fcompl
out
inc
inc
shll
push
xor
fnsave
xor
xor
add
sti
outsb
mov
mov
mov
rcrl
fdiv
xchg
push
sahf
addr16
fisubs
and
mov
notl
cmpsb
ss
jo
and
fcoml
jne
adc
push
mov
sub
inc
push
mov
mov
xchg
and
mov
jno
or
dec
sub
sub
cmp
mov
xor
sbb
xchg
std
mov
popa
pusha
jnp
cmp
xor
rorb
stos
test
mov
inc
movsl
adc
mov
lret
xchg
pop
mov
aam
popa
mov
lea
stos
xchg
js,pn
xor
outsb
sarb
lahf
enter
nop
adc
lahf
andb
sarb
pop
inc
jmp
ss
sbb
mov
xor
ja
push
mov
test
fs
dec
int3
aas
inc
jmp
push
push
aaa
ret
mov
pop
fimuls
sbb
rclb
inc
push
insl
or
add
out
cwtl
or
sbb
stc
pop
jecxz
mov
jp
rol
push
addl
xchg
enter
push
shrl
jb
ds
int
lds
movsb
cmpsl
xchg
adc
repnz
cmp
movsb
lods
addb
icebp
icebp
loopne
jmp
pushf
mov
xchg
mov
in
pop
mov
xchg
sbb
lret
test
sub
push
mov
add
adc
push
cmp
mov
dec
mov
cmp
mov
ror
loopne
or
adc
fisttpll
xchg
sbb
fldl
imull
lods
loope
dec
add
push
mov
repz
lods
jb
xor
leave
inc
popf
cmc
mov
add
lods
mov
or
sub
push
sbb
mov
fcoms
dec
addr16
sbb
pop
aaa
dec
cwtl
imul
pop
repnz
mov
push
jno
xchg
cltd
mov
aas
xor
sbb
xor
fistpl
mov
add
mov
pop
mov
pop
jb
jo
out
add
dec
fists
mov
jo
xchg
adc
outsb
pop
jne
mov
std
or
sub
mov
mov
lret
enter
sub
mov
dec
or
inc
and
mov
je
call
inc
data16
mov
je
and
xor
mov
arpl
dec
sbb
leave
cmp
xor
sub
jg
jns
adc
jmp
out
push
sbb
jbe
outsb
lret
fistl
sub
mov
cmp
out
and
hlt
fnsave
mov
inc
sbbb
pop
pop
imul
xchg
push
enter
stos
clc
inc
in
loope
fildl
mov
xlat
adc
fmuls
in
pop
ljmp
mov
and
mov
jne
cmp
and
cmc
rclb
mov
stc
mov
into
es
ret
test
cmp
sti
inc
je
jmp
das
xchg
cs
sbb
fistl
lret
cmp
mov
lods
mov
loop
decb
movsb
mov
sub
xor
fwait
xor
pop
mov
inc
jg
nop
pop
orb
jmp
mov
sbb
add
xor
add
or
adc
repz
cmp
sarl
shl
fidivrs
out
mov
outsb
dec
out
add
mov
inc
mov
or
dec
pop
cltd
inc
jg
rcrl
inc
jmp
stos
jle
mov
nop
mov
ror
icebp
ret
and
add
aaa
inc
outsb
add
shl
aas
lcall
xchg
lea
insb
push
add
sbb
outsl
lods
cmc
les
pop
jp
inc
outsb
xchg
push
jge
xchg
mov
into
sti
stc
lods
insl
pop
popa
jb
xor
bound
dec
imul
add
and
loop,pt
mov
insb
insb
and
lds
stc
lds
sahf
push
jo
dec
std
scas
adc
xor
add
aaa
loop
and
cltd
in
sti
sahf
push
dec
js
shrb
mov
pop
scas
mov
mov
pop
decb
insb
ss
pop
sbb
push
sbb
ss
xor
pop
push
adc
xchg
cmp
and
xchg
cld
cmp
repz
cld
dec
das
imull
rcll
jbe
ror
rorb
sub
mov
or
orb
cmpsb
lock
add
cwtl
or
aad
ljmp
pop
lcall
fwait
inc
pushf
add
and
dec
inc
jl
sub
loope
mov
rcrb
push
into
adc
xchg
les
mov
mov
repnz
jl
ss
pushf
cltd
test
push
dec
mov
sbb
jo
or
inc
add
push
mov
iret
fst
out
ret
push
push
repnz
lahf
mov
dec
ret
sahf
addb
mov
and
test
mov
outsb
cmpsb
sub
movsl
sub
jmp
sbb
inc
icebp
sub
pop
adc
push
arpl
mov
mov
int
incb
and
lcall
into
mov
leave
cli
jg,pn
insl
sub
test
inc
sbb
insl
jne
ret
dec
and
rep
jmp
push
fbstp
pusha
call
mov
es
nop
mov
popa
insb
pop
inc
pop
test
push
push
lret
testb
inc
fcomps
xor
dec
scas
push
sub
movsl
js
cmp
adc
mov
movb
jae
and
les
cmpsb
iret
push
xor
lcall
add
fwait
repz
mov
mov
sbb
and
andl
call
repz
ret
rcr
pop
jns
enter
hlt
and
pop
xchg
sub
xchg
pushf
inc
imul
mov
xchg
shll
xchg
pusha
and
sti
int3
addl
leave
sub
rcrb
mov
cmp
cmpsb
addl
cmp
nop
adc
add
stos
cld
dec
mov
daa
or
leave
movsl
nop
lcall
ja
out
inc
push
jo
cwtl
push
or
pop
or
sbb
pop
jb
inc
add
fdivrl
aas
pop
jbe
cld
fidivs
aaa
out
fwait
lret
sarb
stc
mov
pop
stc
mov
lret
sub
movsl
das
in
pop
push
lea
scas
push
insl
mov
rclb
sbb
imul
push
jno
ror
fdiv
and
fwait
push
je
addr16
pop
jne
int
popa
fdivr
out
loopne
sbb
mov
jp
mov
imul
int
inc
xlat
mov
outsl
mov
out
mov
aaa
sbb
test
push
or
lds
mov
or
int
pop
xchg
enter
or
call
mov
or
xchg
inc
sub
aas
in
dec
xchg
movsl
leave
mov
push
scas
test
push
cmc
and
lds
ss
divl
xor
out
sahf
negb
jmp
test
jl
data16
mov
sub
outsl
jle
lock
aad
insb
sbb
and
lret
mov
popf
sub
inc
xor
imul
adc
xchg
das
movsb
gs
loop
lods
je
cmpsb
push
arpl
push
sub
mov
pop
imul
imul
cli
inc
aam
adc
pop
aad
mov
loopne
pusha
loop
fs
push
mov
cmpsl
xor
mov
jge
cmpsb
in
mov
int3
and
xor
or
push
sahf
inc
dec
or
stos
pop
mov
push
push
and
ret
rcrl
cltd
iret
sub
stc
addr16
or
push
dec
inc
in
xor
fs
or
jae
movsb
sarl
incl
add
pop
cmpb
mov
sbb
lock
or
bound
into
jl
xor
push
ds
inc
loope
popf
sbb
sbb
push
mov
enter
sbb
xorb
mov
jle
dec
pop
in
aad
and
imul
mov
push
mov
repnz
pop
jge
rorb
inc
and
lret
test
jge
cmp
push
int3
adc
adc
mov
pop
add
aaa
aaa
inc
lock
stos
lods
mov
fsubl
int3
cld
shrl
push
shrl
mov
pop
adc
cltd
add
hlt
cmpsb
loopne
add
rclb
add
mov
movsb
or
and
jle
dec
mov
imul
loopne
rclb
inc
pop
cmp
lcall
and
jno
push
outsb
insl
jmp
cmp
pusha
sub
bound
push
push
jae
pushf
dec
cmp
inc
sub
cmp
scas
xor
lret
add
inc
std
mov
in
cmp
cli
inc
xor
loope
push
sbb
mov
sub
xor
xchg
lret
ret
filds
xchg
jmp
insl
sbb
pop
xchg
xchg
into
pop
inc
push
jmp
rcll
popf
loop
xchg
test
das
dec
inc
fs
iret
jno
pop
cmp
cld
lods
jmp
ljmp
adc
sbb
cmp
dec
cltd
shrb
lods
xor
mov
jnp
outsl
cmp
xchg
sub
roll
inc
cmc
mov
push
jle
and
lcall
lret
add
push
dec
cmova
aaa
es
imul
jo
enter
sbb
xchg
dec
or
adc
fcoml
adc
loopne
sub
add
mov
ds
inc
dec
push
add
adc
fildll
jb
inc
mov
inc
popf
xchg
inc
jmp
cmp
enter
repnz
imul
push
sub
mov
dec
mov
and
dec
mov
or
hlt
int3
stos
inc
mov
xchg
icebp
rcrb
push
add
out
mov
push
cmp
xchg
inc
jne
cltd
popa
mov
jo
aad
dec
fstl
bound
les
scas
addl
cmp
or
cmp
aaa
mov
mov
int3
push
dec
lea
popf
xchg
jb
xchg
adc
jmp
or
ss
jns
test
mov
fiadds
in
in
and
jnp
xchg
das
lds
in
jle
lcall
jnp
incb
leave
cli
mov
cmp
rolb
jae
orb
fcmovnbe
sarb
mov
pop
rcll
loope
pop
xchg
push
out
pop
shll
pusha
jbe
test
hlt
xchg
and
adc
adc
inc
pop
lret
scas
cmp
je
xchg
dec
lahf
jmp
and
push
cld
add
push
gs
cmpsl
fstpl
dec
push
mov
or
pop
adc
pop
dec
inc
dec
xchg
addl
and
dec
lods
pushf
mov
repz
inc
sub
or
scas
cltd
xchg
or
push
pop
cld
and
cld
fsubrp
movl
out
pusha
out
pop
mov
and
push
push
stos
gs
fadd
mov
les
dec
push
dec
aas
xor
sub
mov
data16
cmpsb
fs
repnz
push
iret
add
sub
sub
mov
xchg
push
dec
and
push
in
test
sbb
mov
jns
ror
out
ds
arpl
fisttpll
mov
cmpsb
mov
pop
mov
mov
repz
add
cmc
cli
mov
fcmovnbe
mov
inc
push
push
fs
addr16
pusha
add
fisubrl
movsl
or
push
into
loop
add
ljmp
sbb
adc
adc
or
cmc
cld
sub
push
fwait
and
xor
add
adc
jecxz
repz
or
sbb
dec
xchg
pop
arpl
push
fwait
and
xor
add
adc
jecxz
repz
or
sbb
dec
xchg
pop
arpl
push
fwait
and
xor
add
adc
jecxz
repz
or
sbb
dec
xchg
pop
arpl
push
fwait
and
xor
or
fistpl
or
imul
cmp
sub
sbb
cmp
pop
popf
lahf
lea
fucomp
int
std
lret
sbb
or
push
dec
insl
cs
cmpsb
lea
fstpl
in
ficompl
adc
bound
insl
inc
popf
stos
lea
mov
scas
mov
or
outsl
pop
jge
mov
xchg
mov
jo
divl
cltd
push
adc
jno
xor
mov
enter
ja
leave
mov
fwait
movsl
imul
xor
sub
mov
movsb
cld
cmp
and
mov
push
cmc
cmp
push
add
pop
popf
stos
out
inc
loopne
gs
inc
inc
cwtl
lret
pop
je
lds
lods
dec
pop
push
push
ds
inc
xor
pop
and
movsl
jg
xor
jns
push
cmc
adc
inc
insb
xor
jb
and
iret
ljmp
xor
nop
movsl
loopne
filds
ret
inc
jne
gs
int3
sbb
enter
cmp
sub
jp
dec
insl
inc
popf
stos
lea
int
std
shr
fistpl
fs
pop
outsl
dec
jg
push
sub
fadd
mov
mov
movsl
mov
push
insl
jns
jne
push
xor
ds
push
cld
out
call
cli
lods
in
scas
je
imul
pop
pop
dec
jp
dec
insl
pop
popf
stos
lea
fucomp
int
std
lret
sbb
or
jp
dec
insl
pop
popf
stos
lea
fucomp
int
std
lret
sbb
lea
sbb
iret
jns
jnp
push
push
jge
daa
push
mov
push
int
jecxz
fisttps
les
dec
push
in
dec
xchg
adc
dec
mov
inc
xchg
fisttpl
sbb
shrl
xchg
out
out
xor
jno
ret
lret
sahf
shl
mov
das
ja
pop
imul
js
pushf
enter
xor
scas
or
jo
fcoms
push
jp
sub
and
and
test
and
leave
sbb
stos
mov
cmpl
push
add
sub
add
xchg
cmpl
mov
adc
jecxz
xchg
mov
out
out
lret
and
repnz
inc
pop
ret
loope
popa
xor
adc
pop
push
mov
ror
sti
sti
sbb
sbb
sahf
sbb
add
mov
hlt
cmp
ret
jmp
jnp
xchg
arpl
push
mov
xchg
jns
cs
mov
std
ds
or
adc
inc
cmp
je
pop
mov
repnz
dec
add
int
test
aam
imul
jp
fsubl
xor
in
mov
imul
add
sbb
out
cld
pop
adc
mov
faddl
andl
mov
pop
divl
gs
mov
test
repnz
insl
mov
lods
fdivs
scas
adc
ror
xchg
add
loop
pop
aas
jbe
jne
and
jg
sub
jge
xor
decb
dec
test
and
sub
lock
push
cmp
jne
sbb
cld
and
fs
sbb
xlat
lock
sbb
aas
movl
push
pop
lcall
mov
cmp
ret
aad
ds
xchg
pop
jo,pt
mov
dec
and
dec
and
inc
int3
stc
dec
insb
xor
adc
pop
pop
aam
mov
lret
jecxz
jecxz
dec
out
inc
gs
cmovle
in
das
in
mov
cmp
pop
inc
js
push
dec
movsb
in
out
shll
push
inc
add
mov
ds
lods
dec
xchg
rcrb
lods
fldenv
lcall
lods
sbb
and
pop
push
repnz
aad
sbb
jl
jnp
scas
push
rcl
inc
lcall
pushf
out
loop
lret
jnp
cmp
cli
cld
mov
or
daa
sbb
in
arpl
frstpm(287
dec
push
xlat
xchg
das
jmp
push
pop
imul
mov
lcall
into
call
jecxz
stc
imul
push
popf
cmp
daa
sub
dec
push
cmp
loop
xchg
shrl
rolb
insb
call
ficoms
dec
std
call
adc
xor
stos
push
jo
fldenv
push
and
lcall
aas
mov
mov
std
add
pop
cld
jg
aas
adc
cmp
xor
insl
subl
sub
adc
loopne
and
lock
lahf
fwait
fwait
test
int3
or
aad
mov
cld
or
mov
jnp
stc
pop
mov
sahf
stos
icebp
push
loop
cwtl
jb
ljmp
dec
pop
inc
bound
nop
inc
divl
aam
sub
mov
ss
sbb
fildll
or
xchg
sub
cltd
cmpsl
push
sbb
xlat
jns
pop
dec
jecxz
or
sahf
sub
or
pop
sarl
dec
or
mov
mov
shrl
aad
icebp
sbb
insl
inc
cmp
sbb
shll
xchg
ds
lea
mov
sub
imul
inc
mov
add
add
jne
ret
or
xchg
add
cmpsl
sti
adc
mov
gs
es
xlat
sub
xchg
insl
sbb
pop
mov
lds
adc
dec
and
cmp
sbb
out
pop
pop
adc
fwait
dec
shlb
jl
fcmove
xchg
aam
xor
imul
jbe
inc
shll
insb
scas
lea
repnz
bound
sbb
jmp
in
clc
out
sti
xchg
test
cltd
cmp
ja
aam
add
xchg
aas
cwtl
mov
xchg
in
sub
aas
mov
cli
pop
or
or
addr16
push
and
sbb
jns
mov
dec
loope
sub
jg
hlt
in
sti
cmp
jbe
lret
and
xor
lcall
mov
sbbb
and
pop
push
cmp
dec
adc
mov
and
dec
sbb
aad
fdivl
cli
push
imul
xor
jae
addr16
jecxz
jbe
inc
shl
mov
xchg
xor
decl
ss
add
dec
shr
dec
mov
mov
cmc
mov
mov
lret
std
inc
mov
imul
pop
sbb
jne
lea
add
mov
aaa
fwait
outsl
lods
lahf
loope
dec
or
repz
dec
lods
adc
or
or
divl
jg
ja
jns
out
sbb
mov
dec
rcrl
jecxz
cs
or
ja
dec
push
cmp
xor
mov
enter
push
mov
or
lahf
test
xor
imul
shl
jbe
nop
mov
xchg
fwait
in
cmp
jnp
and
je,pn
stc
dec
sarl
repz
in
xor
dec
lcall
add
out
mov
pop
mov
out
stos
sub
xor
aas
or
jp
adc
mov
scas
cmp
push
sub
or
lret
std
and
sahf
mov
jbe
ss
clc
xchg
mov
sub
sbb
outsb
ds
adc
cmpsb
adc
stos
mov
jl
arpl
pop
mov
inc
fidivl
xchg
popf
add
cs
mov
jge
bound
call
push
rol
adc
mov
out
jp
add
jle
jmp
push
ljmp
push
push
or
sbb
ret
inc
icebp
mov
clc
call
mov
jo
loope
into
xor
test
xchg
sbb
faddp
inc
lret
mov
push
fstl
das
mov
ja
adc
fisubl
cmpsl
xorl
dec
daa
ljmp
xchg
mov
aas
addr16
cwtl
int3
shlb
insb
mov
jl
mov
stos
jns
mov
dec
mov
ret
push
mov
pop
aam
mov
push
repz
sbb
mov
lds
out
frstor
push
adc
xchg
int
push
cmpb
inc
sub
mov
stos
jl
mov
outsb
loop
adc
aaa
call
stos
repz
in
icebp
lretw
js
mov
sbb
pop
xor
or
mov
int
xor
cmpsb
and
mov
sti
jp
pop
push
cmpsb
adc
xchg
int
test
ss
test
mov
imul
cmp
aam
push
sbb
notl
in
insl
mov
ss
dec
into
sbb
adc
pop
ret
fstp
inc
dec
mov
push
sbb
std
cmpsb
inc
mov
pop
dec
mov
imul
push
ret
sarb
jnp
and
pop
aam
aas
or
add
fisttpl
test
adc
pusha
lods
inc
aad
out
jae
lahf
test
int3
sub
jns
xchg
sbb
add
negl
dec
pop
dec
dec
xchg
or
in
cmp
adc
xor
pushf
aas
or
movsb
test
dec
mov
bound
jbe
dec
test
rcrb
push
mov
sbb
sbb
pop
sub
sub
push
clc
or
cltd
cwtl
nop
rcll
scas
in
aas
pusha
cmc
mov
push
dec
adc
inc
push
pop
outsl
pop
lret
loope
aad
rcrl
ds
pop
dec
mov
movsl
push
out
xchg
stc
xchg
and
mov
sub
mov
xorl
imul
int
shr
fwait
xchg
add
jecxz
inc
dec
enter
lock
mov
pop
ret
mov
pop
sbb
fisubrs
adc
jae
dec
add
sahf
mov
inc
mov
call
jns
xchg
out
jb
adc
in
mov
and
and
xchg
and
lds
pop
pop
inc
xchg
sub
inc
xor
pop
push
adc
mov
test
xchg
aaa
pop
jmp
gs
mov
xchg
inc
cltd
ja
es
in
dec
into
pop
or
out
repz
cli
fdivl
or
xor
sub
jle
sub
fnstsw
jg
adc
data16
jecxz
or
sub
hlt
sub
insl
sub
fs
movsb
mov
mov
stc
scas
fldl
xchg
hlt
lahf
mov
dec
enter
xor
adc
nop
and
aad
insb
sti
shr
movsb
and
mov
sbb
dec
leave
adcl
mov
in
sub
push
call
notb
out
and
call
mov
dec
das
popa
xchg
mov
outsl
mov
aaa
cmp
mov
sbb
ds
lret
mov
idiv
push
mov
movsb
rclb
inc
and
loopne
movsb
dec
xchg
loopne
in
and
nop
sub
retw
mull
stc
clc
mov
test
and
and
pop
lret
fwait
lret
repnz
add
and
ljmp
push
push
das
inc
fidivrl
mov
jmp
fdivr
mov
inc
mov
push
dec
pusha
push
cmpsb
loop
sahf
in
mov
inc
mov
lahf
inc
and
iret
dec
dec
mov
xor
daa
pop
into
adcb
push
es
cmp
push
aaa
lret
jno
mov
push
test
addl
sub
rorb
jnp
fs
cmp
cmpsb
test
stos
mov
mov
dec
sub
mov
xchg
add
testb
lds
repnz
loopne
std
cmp
stc
xor
mov
das
repnz
mov
aaa
dec
mov
test
mov
aam
fstps
stos
mov
aas
pushf
jbe
pop
sub
cli
adc
mov
mov
pop
jl
xchg
mov
repz
mov
fdivrl
xchg
in
sbb
cltd
push
popf
test
sub
cmp
addr16
loop
mov
or
ret
ja
movsb
sbb
jae
mov
call
test
dec
pop
in
push
es
mov
outsl
and
and
cs
jb
push
pop
lcall
pop
daa
jne
das
push
push
cli
inc
ljmp
adc
data16
mov
shlb
mov
lock
sbb
push
rorl
xchg
jae
into
mov
aas
dec
mov
loope
insb
pop
adc
dec
cmpsl
dec
sbb
adc
pop
int
mov
repz
out
or
ss
loop
stos
ja
not
enter
xchg
adc
ficompl
movsl
roll
dec
mov
popf
ja
test
sbb
xchg
mov
pop
sahf
and
ret
mov
cli
mov
outsl
inc
inc
add
and
outsl
in
cmp
mov
inc
test
adc
and
adc
sahf
sub
dec
push
pop
in
ja
inc
and
inc
dec
lea
icebp
ficompl
rclb
dec
xchg
jne
pop
adc
fnstenv
jmp
in
jmp
xor
sbb
xchg
pop
mov
hlt
ret
into
and
or
cwtl
aam
ss
push
aaa
xchg
jge
mov
divl
adc
and
loopne
scas
hlt
mov
sub
inc
cmp
rcl
hlt
jecxz
loop
add
and
mov
mov
xchg
or
bound
mov
leave
sub
xor
or
mov
cmp
sbb
gs
push
inc
push
aad
or
inc
jecxz
sbb
mov
es
lods
push
adc
xor
xchg
mov
fisttpll
jge
fnstenv
addb
or
in
cmpsl
pcmpeqb
aas
mov
vmaxss
jle
dec
jge
bound
add
idivb
cli
and
and
xchg
cld
jmp
addl
push
ficomps
repz
loope
movsl
daa
daa
outsl
adc
subb
and
adc
dec
inc
sbb
stos
imul
insl
pop
arpl
adc
mov
ja
orb
xor
jge
jge
mov
push
push
pop
pop
adc
mov
idivb
jne
jb
and
dec
or
mov
ja
fwait
int3
mov
sti
repnz
cmpb
or
roll
mov
mov
jo
mov
sub
or
in
cmpsl
push
mov
push
push
jne
jg
mov
movsb
xor
xchg
cmp
stos
and
sub
int3
inc
mov
pop
pop
out
dec
xchg
or
jo
arpl
imul
shll
mov
fisubs
sub
mov
mov
out
pop
shlb
dec
adc
jl
xor
stos
xchg
test
cmc
sbb
add
jmp
stos
les
cld
in
pushf
aam
sbb
inc
pop
inc
call
xlat
sbb
insl
test
sbb
dec
push
jge
out
ja
dec
in
fdivrl
xchg
insl
paddq
xchg
iret
notb
push
cmpsb
sub
repnz
and
add
mov
sbbb
mov
vphaddudq
push
arpl
gs
lahf
jns
jbe
mov
mov
sbbl
and
cmp
cmp
xchg
pop
cli
movsb
mov
ljmp
jmp
lcall
mov
jo
mov
in
aad
or
cmpsl
or
arpl
pop
jl
pop
mov
jae
repz
stc
and
rclb
loop
stos
push
call
jbe
enter
jmp
and
xchg
jecxz
xchg
push
popl
and
fs
movsl
and
cmp
cmp
add
add
mov
into
cmp
inc
push
sub
and
test
ds
out
imul
jnp
aam
imulb
xchg
pusha
adc
lods
mov
push
enter
adc
popa
mov
and
jecxz
lret
jb
dec
ljmp
rcll
xor
gs
paddw
repnz
add
or
mov
jb
testl
xchg
dec
stos
repz
mov
cmpb
or
lcall
pop
outsl
rorl
out
pop
add
cmc
pusha
ffree
loope
or
lods
dec
pop
and
in
jp
or
insl
inc
pop
cmc
and
dec
mov
imul
nop
inc
and
popa
push
jmp
inc
jne
stos
mov
jno
push
adc
cmp
sbb
pop
mov
cmp
pop
adc
mov
dec
inc
ljmp
jg
mov
xchg
or
stos
scas
sub
sbb
cmp
stos
leave
leave
cmp
popa
mov
xchg
leave
adc
cmpsl
adc
mov
or
inc
push
daa
inc
sub
xor
lea
loopne
pop
push
insb
ss
out
sbb
lahf
insl
ja
lods
fwait
test
jecxz
scas
jle
jp
dec
and
sbb
pop
outsb
movl
and
add
mov
adc
lock
cmp
imul
adc
pop
cli
lds
nop
lret
sti
add
sub
inc
xchg
rclb
ret
jecxz
mov
cmp
inc
rcrl
fcompl
out
pop
or
data16
pop
out
shlb
lock
dec
cs
adc
push
sbb
cmp
fwait
xchg
and
not
jnp
sub
pushf
insb
popf
pop
jmp
movsl
lret
lret
cmpsb
ret
xchg
sahf
sahf
fsubp
in
adc
xlat
mov
cwtl
scas
rcrl
lahf
into
add
sub
test
xchg
pop
cmp
rcl
cwtl
loopne
mov
push
ss
and
mov
add
ja
sbb
sbb
push
or
cs
subb
or
adc
inc
mov
pop
dec
jne
push
inc
or
out
jns
sub
push
lret
inc
stos
das
inc
dec
mov
scas
test
bound
xor
rcll
je
push
pop
inc
popf
and
mov
pop
leave
lods
and
loop
inc
jns
rorl
loopne
iret
xchg
mov
jmp
ja
repz
mov
lds
jl
mov
std
in
mov
pop
fisubrs
packuswb
fnstsw
add
lret
mov
jno
lcall
mov
push
add
rol
sbb
lock
sub
jle
sbb
iret
dec
push
inc
mov
pusha
test
rclb
stos
pop
jo
into
push
test
adc
sub
scas
pop
lock
jae
shll
push
and
add
push
repnz
enter
adc
xchg
insb
mov
or
jecxz
mov
test
call
cmp
sub
fs
mov
scas
dec
rcl
adc
jno
xchg
cltd
jecxz
mov
mov
push
mov
mov
int3
xor
imul
fistpll
mov
jle
push
add
aad
ret
aam
in
aas
js
lea
seta
jge
sub
gs
adc
adc
jbe
add
mov
xchg
lods
pop
push
imul
push
inc
out
ss
mov
aam
sbb
xor
xchg
fcomi
sub
mov
fidivrs
sbbl
lcall
movsl
adc
push
arpl
sbb
jbe
repnz
cs
dec
xchg
clc
test
imul
mov
jne
repz
imul
or
pop
xchg
adc
pop
sub
and
fwait
add
jg
call
sbb
and
adc
mov
jae
iret
sbb
fldcw
hlt
xor
testl
aam
push
sarb
xorl
ja
stos
loope
jle
lret
push
scas
xchg
stc
incl
pop
or
jp
xchg
jbe
push
loop
cmp
or
sub
popa
add
leave
shl
leave
daa
cs
and
xchg
adc
adc
ret
out
sbb
add
lret
arpl
xor
lea
jns
cmp
pop
push
rcrb
stos
xor
push
repnz
mov
call
rcl
pop
push
in
ds
shrb
inc
enter
mov
jl
ss
jmp
and
addb
cmpsb
inc
jg
movsb
int
mov
mov
bnd
pop
lea
push
mul
add
mov
add
jno
adc
divb
es
ljmp
es
mov
enter
xchg
ret
mov
sub
mov
push
outsb
fs
dec
lock
mov
jmp
sub
bound
lcall
xchg
loop
aas
test
inc
repz
jle
inc
xchg
aam
mov
push
inc
mov
fucomip
ljmp
mov
cmp
stos
mov
push
loopne
sbb
inc
adc
mov
xchg
sahf
add
xchg
sub
scas
add
repnz
jmp
sbb
insl
pop
sbb
dec
push
mov
test
icebp
dec
stos
mov
xchg
adc
jae
cs
inc
adc
adc
adc
out
repz
jno
mov
pushf
jmp
sbbb
mov
aas
sbb
xor
mov
ret
sub
adc
ficomps
loope
pop
dec
pop
cmp
cs
or
aam
jo
rol
enter
addr16
or
adc
popa
pushf
lret
cmp
mov
and
lret
call
push
pop
test
out
xor
pop
push
lcall
pop
jmp
jle
test
jbe
ds
jno
and
inc
into
or
xor
sub
es
ljmp
jecxz
mov
push
sti
inc
adc
fisttps
inc
push
lcall
xorl
subl
fs
push
hlt
adc
in
addr16
into
enter
adc
sub
pop
mov
push
or
inc
aam
jp
add
cmp
adc
sbb
repz
push
dec
mov
xchg
mov
call
inc
mov
out
pop
adc
sbb
out
mov
je
in
in
add
lds
mov
mov
push
inc
xor
add
cmp
test
pop
adc
xchg
mov
hlt
mov
sbb
dec
jp
dec
insl
pop
popf
stos
lea
fucomp
int
std
lret
sbb
or
jp
dec
insl
pop
popf
stos
lea
fucomp
int
std
lret
sbb
or
jp
dec
insl
pop
popf
stos
lea
fucomp
int
std
into
in
ficomps
push
sub
jp
dec
insl
lcall
lods
in
stos
bound
add
in
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
push
stc
push
jmp
xchg
cmc
cmp
adc
scas
dec
fidivrs
into
sub
sbb
or
stc
push
jmp
pop
mov
outsb
icebp
sahf
jns
imul
sbb
or
stc
push
jmp
pop
mov
outsb
mov
sub
jle
ja
jp
mov
ds
leave
xchg
cltd
lds
lcall
lcall
push
push
stos
test
test
dec
mov
xchg
xchg
andl
xchg
inc
dec
push
sub
test
stc
push
in
mov
iret
aad
cmp
cmc
push
fcompl
add
mov
sub
mov
cs
jns
pop
test
rep
ja
xchg
xchg
inc
ffree
test
jge
fisttpl
loope
out
mov
pop
xor
std
repz
cmp
xor
scas
sbb
mul
jl
fs
leave
movsl
mov
outsb
int3
leave
push
xchg
inc
jp
sbb
sar
push
jmp
pop
mov
outsb
mov
pop
scas
dec
fidivrs
into
sub
sbb
pusha
pop
std
jp
push
flds
pop
fdivrl
sbb
insb
fstpl
cmp
cmp
popf
pusha
test
jnp
imul
or
push
lock
sti
xor
adc
mov
data16
push
mov
adc
outsb
mov
pop
scas
dec
fidivrs
into
sub
sbb
or
stc
push
jmp
pop
mov
outsb
mov
pop
scas
dec
fidivrs
into
sub
sbb
or
stc
sub
mov
mov
inc
xor
je
xchg
or
daa
push
outsb
filds
cmc
inc
mov
test
and
mov
pop
adc
popf
pop
test
push
imul
and
dec
ss
enter
out
adc
and
mov
lret
pop
ja
ljmp
push
and
lcall
or
je
test
jmp
iret
imul
jnp
in
lret
scas
pop
add
pop
cmp
cmp
inc
and
xchg
jae
int
add
sbb
mov
xor
scas
mov
pop
pop
push
lock
pop
add
sbb
jbe
fstpl
jl
sbb
into
xchg
sahf
mov
fsubs
pop
sub
inc
or
dec
cwtl
pop
rorb
mov
sbb
dec
push
adc
pop
dec
add
cld
push
loop
mov
jle
pop
push
daa
fcompl
out
jno
cmp
daa
into
push
cltd
int
xor
inc
bound
inc
hlt
lret
je
dec
ds
ret
or
repnz
cmp
inc
push
mov
ret
loopne
lea
loop
lahf
and
cmp
iret
fiadds
mov
cwtl
mov
movsb
inc
mov
xchg
scas
and
cmpsl
mov
arpl
jge
push
mov
adc
mov
lea
sbbl
sub
sbb
or
pusha
inc
aad
out
fsts
or
xor
shl
mov
es
pushf
xchg
fstps
cmp
adc
push
push
bound
cmp
xchg
into
out
sbb
mov
or
mov
das
and
pop
sbb
cs
stc
pusha
icebp
mov
push
insl
xchg
lahf
mov
push
mov
hlt
push
mov
dec
mov
inc
shrl
mov
out
in
outsb
add
jp
js
xchg
dec
rolb
xchg
mov
and
push
pop
pop
popf
testl
sbb
xchg
pop
clc
movsb
dec
xchg
sub
pop
ljmp
icebp
add
lods
iret
mov
imul
jno
imul
rclb
ficompl
ret
sbb
pop
fcompl
shrb
inc
dec
test
or
add
test
pop
out
mov
xor
test
xor
xabort
daa
pop
fdivrp
dec
mov
enter
aaa
adc
test
mov
movsb
pop
fsubp
pop
dec
ljmp
int3
xchg
and
popl
ljmp
shrl
cmpsb
mov
dec
sti
dec
pop
call
xor
mov
push
mov
sbb
pop
xor
icebp
cmp
mov
gs
in
xor
sbbl
jns
fbld
rcrb
and
mov
fcoml
mov
shrb
sub
adc
hlt
cmpsb
mov
xchg
into
mov
mov
mov
mov
aam
outsb
mov
mov
sarl
das
test
adc
aam
pushf
lahf
push
je
leave
leave
mov
cmp
push
or
push
addr16
xchg
pop
test
cltd
sub
xor
sbb
sub
mov
cld
inc
mov
enter
and
andl
pop
testl
cltd
cwtl
out
fistps
ftst
in
cld
rcrl
pop
dec
add
sbb
mov
mov
inc
lcall
cmp
push
data16
push
or
es
call
inc
xor
adc
jae
fcomip
fildl
cmp
iret
xchg
mov
or
pop
mov
scas
rcrb
sbb
loope
xor
pop
xchg
je
out
bound
clc
dec
fisttpl
insb
push
rcl
add
adc
mov
in
sub
nop
jl
insl
pop
jnp
imul
scas
in
fadd
cmc
jne
and
xchg
jns
call
cltd
loopne
clc
fistps
dec
int3
ljmp
mov
lock
shrb
mov
testb
inc
jo
aad
xor
mov
adc
xchg
das
lods
out
cwtl
and
xchg
jle
mov
outsb
inc
mov
popa
lret
xor
mov
jecxz
outsl
inc
ljmp
mov
jecxz
adc
jbe
rolb
jae
lods
loopne
adc
mov
mov
or
out
sub
push
stos
cli
add
or
dec
pushf
mov
sub
inc
push
mov
mov
in
add
jp
jae
movsl
ljmp
cmpsl
inc
fcomip
jne
loop
fcompl
add
xchg
pushf
insl
adc
out
pop
xorb
sbb
fs
xlat
dec
jp
pop
ljmp
aam
orl
sti
loope
mov
adc
arpl
fsub
movsb
and
cmp
adc
scas
xor
or
jge
inc
pop
jbe
or
subl
sub
xor
jge
notl
lods
push
mov
jno
pop
dec
xchg
fildll
ss
mov
mov
inc
cmp
repnz
mov
and
int3
punpcklqdq
jle
push
xchg
xor
xor
lahf
push
pop
mov
data16
xor
push
inc
push
adc
outsl
ret
subl
ret
inc
ja
jl
pop
mov
mov
pusha
jg
insl
jp
and
sbb
jle
out
dec
xor
add
dec
mov
push
jp
mov
ljmp
mov
and
stc
sbb
inc
mov
or
outsl
aad
cwtl
mov
imul
fwait
add
imul
xchg
pop
lahf
nop
lret
push
jp
dec
mov
push
popa
and
mov
insl
sbb
stos
inc
test
mov
pop
je
push
push
mov
dec
pusha
cltd
test
aad
aaa
stos
faddp
movsb
cmp
adc
xchg
rcrb
jmp
mov
adc
lea
dec
xor
jl
cld
in
test
lret
pop
adc
xor
test
into
mov
adc
outsl
test
insl
daa
push
ret
popa
pushf
sbb
pop
rcrl
sarl
push
add
imul
vmptrld
or
sbb
push
in
aaa
mov
nop
xchg
fimull
bound
scas
inc
orl
ja
cmp
inc
and
cmp
sbb
in
adc
pop
sbb
cld
andb
xchg
pop
hlt
xor
scas
push
sbb
push
adc
into
adc
scas
js
xchg
fadds
mov
cmp
mov
add
fidivrs
outsb
or
xor
cli
pop
fisubl
sub
stos
repnz
dec
ja
fcomps
push
shl
loopne
out
ja
popa
jb
cwtl
jl
add
sub
adc
cmpsl
pop
loopne
sti
xchg
ret
jmp
cmp
cmpsl
out
int3
pop
mov
outsl
push
mov
add
jne
pusha
add
xchg
aad
cld
sub
pushl
fmul
cmc
cmp
pop
inc
fwait
sub
inc
js
fisttpll
stos
cmp
ret
and
cmc
xchg
xchg
jle
mov
mov
inc
jle
jne
and
sarb
xor
push
into
cs
rcrl
cmp
mov
mov
and
loop
push
xor
dec
cli
jae
mov
pop
jecxz
jo
js
dec
jecxz
dec
in
mov
dec
call
xor
int
inc
test
lahf
push
into
mov
not
xor
xor
push
ret
ja
lods
mov
clc
or
cli
push
cmp
xor
xchg
mov
cmp
inc
mov
inc
pmulhuw
add
cmp
push
adc
mov
mov
pop
dec
cmpsb
or
jns
xchg
sbbb
inc
pushf
cmp
cld
push
sti
sbb
dec
test
int3
pop
movsl
pop
sti
addr16
aam
mov
adc
and
sysexit
lahf
mov
das
xchg
movb
dec
mov
jmp
inc
mov
loop
ret
gs
cmp
or
scas
mov
inc
fisubl
movsb
jno
and
mov
es
xor
test
fildll
jne
shrb
pop
sar
rorl
shrb
test
imul
iret
outsl
lcall
sarb
out
test
mov
dec
jmp
pop
ljmp
mov
lcall
popa
dec
mov
xchg
rorl
and
mov
addr16
sub
std
cmp
cmpsl
nop
ret
mov
in
push
inc
cmpsl
sbb
into
cltd
pusha
andl
mov
jnp
arpl
test
push
and
cs
shl
sub
scas
mov
dec
pop
loop
or
or
movsb
out
mov
iret
add
push
or
sub
sbb
add
inc
jne
xor
test
cmpsl
fs
dec
aam
dec
in
into
mov
stos
sub
arpl
mov
imul
imul
pusha
xchg
xorb
pop
lds
xor
out
movsb
xor
push
adc
or
scas
lock
aas
ret
sbb
dec
xchg
sahf
pop
pop
lods
dec
adc
lea
cwtl
cli
mov
jg
ds
rclb
mov
pop
or
iret
inc
xor
popa
faddp
cmp
xchg
and
cmp
dec
mov
jmp
mov
dec
ljmp
mov
sti
test
movsl
sbb
fmull
push
aaa
xchg
sbb
jp
arpl
test
mov
jne
lock
cmp
stc
movsb
cmp
and
ja
or
xor
jbe
clc
jmp
mov
faddl
addl
cmp
push
lahf
ret
div
popf
imul
enter
cmpsb
dec
mov
ja
fimull
cli
push
outsl
fcoms
movsb
dec
popf
in
push
pop
es
sbb
lods
push
mov
popa
adc
fildll
or
mov
mov
and
fisubs
leavew
cli
lret
sub
mov
pop
aad
dec
sbb
lds
or
mov
push
pushw
dec
sarl
enter
and
pop
pop
lods
jl
mov
mov
aas
dec
push
dec
pop
stos
and
xchg
imul
int
add
imul
ficomps
push
mov
mov
lret
add
arpl
rclb
enter
mov
add
pop
jb
mov
inc
sub
dec
fcomip
imul
and
fwait
call
cs
cmp
mov
lds
pop
adc
into
push
push
pop
cmp
mov
push
xor
lods
aam
orb
and
rcll
jns
in
xor
mov
add
sub
arpl
outsb
pusha
and
cmp
inc
movsb
ret
insl
sbb
int
jp
add
dec
outsl
dec
mov
mov
push
cli
adc
xor
pop
test
lea
jnp
cmp
rolb
and
stos
cmp
mov
pop
mov
mov
xor
mov
outsl
sbb
push
cld
mov
mov
adc
arpl
dec
jmp
flds
lahf
cli
je
push
add
sbb
cmpsl
xor
sub
pop
jp
leave
ret
loopne
push
rolb
imul
scas
or
inc
cmp
push
mov
adc
aam
and
in
cmpsl
inc
fisttps
adc
test
xor
xchg
or
fisttps
sbb
pop
out
lods
out
mov
pop
sbb
rcrb
lea
pop
push
jne
xor
cmc
jmp
adc
dec
insb
add
outsl
pop
int3
icebp
cmp
mov
cmp
sbb
arpl
sub
adc
xor
cmp
aam
xor
xor
sub
cmp
cmp
stos
sahf
popf
sub
ja
mov
arpl
adc
push
int
ljmp
add
and
sbb
jecxz
xchg
insl
fisubs
aas
int3
pusha
xchg
imul
out
mov
aad
jecxz
mov
ss
test
add
or
mov
push
mov
incb
adcl
xchg
addl
rorl
int3
andl
aam
push
fcomps
jnp
dec
pop
push
mov
notl
add
out
dec
int3
or
xchg
dec
mov
lret
cli
repz
jae
xlat
inc
add
jmp
test
mov
xchg
cs
inc
ret
rorl
jae
inc
test
shlb
pop
push
adc
shl
dec
adc
cs
shlb
shrl
mov
dec
in
lret
mov
fbld
cmc
and
test
or
adcl
inc
stc
mov
in
flds
and
push
lock
dec
inc
cmp
andl
and
jnp
iret
jmp
ret
pop
adc
ret
aaa
push
dec
cmpb
stos
add
jge
sti
stc
mov
sbb
aad
pop
push
int
mov
add
dec
jnp
mov
dec
mov
push
or
push
or
pop
inc
push
gs
adc
cmp
sbbb
ds
sub
adc
xchg
test
and
icebp
adcl
lods
dec
or
mov
ljmp
cmp
cmp
inc
das
xchg
push
pop
adc
mov
jno
mov
out
sbb
adc
dec
imull
pop
sbb
outsl
mov
jne
push
sub
jo
pop
je
xchg
ss
ja
and
inc
xor
cmpsb
mov
jbe
test
mov
rorb
inc
bound
dec
dec
in
pusha
pop
sarl
imul
jle
mov
stos
pop
mov
sbb
loope
shld
dec
in
cmc
adc
pop
or
into
jns
aam
cltd
and
je
mov
insl
icebp
push
dec
in
mov
ret
das
sub
push
inc
xor
dec
and
mov
sti
aam
push
jmp
and
jns
adc
addb
dec
push
add
push
out
mov
sbb
or
xor
sbb
push
xor
adc
sbb
cmp
sahf
repz
and
adc
enter
stos
push
jne
jge
adc
pop
mov
inc
push
push
pop
fmuls
icebp
adc
pop
mov
jecxz
sub
out
in
or
push
jg
inc
push
call
sbb
push
shrl
mov
mov
rcrl
or
test
mov
dec
imulb
clc
jecxz
sbb
and
mov
xchg
add
pop
into
in
mov
xchg
cmpsl
pop
mov
test
pusha
dec
scas
aam
mov
dec
ficoms
jecxz
add
and
out
fidivrl
je
adc
push
adc
scas
inc
and
dec
jne
inc
xchg
int3
mov
cltd
lock
pop
adc
sti
mov
outsb
adcl
insb
in
test
cmp
test
out
fsts
sub
rolb
repz
xor
std
cmp
out
mov
and
push
cltd
jbe
pop
nopl
inc
stc
fwait
ss
xchg
xchg
fwait
adc
sbb
test
lea
orl
push
inc
cmp
hlt
dec
push
data16
loop
dec
fs
data16
das
in
jb
fs
sub
mov
push
or
movsb
mov
test
sarl
mov
jb
pop
sbb
inc
mov
testl
xor
out
sbb
jg
scas
scas
add
adc
sbbb
xor
jle
ret
and
shl
data16
roll
xchg
outsl
lcall
mov
lea
mov
mov
bound
mov
mov
stos
cmpsl
sbb
jecxz
cmp
xor
pop
rcrl
aaa
adc
xchg
mov
cwtl
xchg
das
push
nop
cmp
std
mov
jp
add
clc
and
shlb
jae
int3
add
push
push
push
sub
rcr
mov
nop
cmp
sbb
push
testb
and
fimull
lods
ds
out
int
in
fldl
inc
pop
sti
or
movq
or
lds
sub
inc
dec
divb
ja
push
push
sbb
push
xor
mov
pop
repz
shrb
push
in
xchg
push
int
inc
dec
or
lret
stos
imul
movsb
sbb
test
mov
add
jp
sbbb
xchg
popf
aas
and
idivl
arpl
bound
sub
lahf
aaa
pop
pop
rcrb
xchg
sub
dec
fstp
stc
mov
push
sub
xchg
in
stc
xor
sbb
aaa
lea
call
pusha
mov
aaa
sarb
enter
mov
xchg
loopne
push
mov
shll
popf
xchg
xchg
mov
jp
clc
outsl
cmp
jo
add
cmp
ud2
and
xor
int
mov
out
jge
and
testl
mov
in
rclb
ja
or
ljmp
push
inc
sub
fmulp
outsb
movsl
mov
sub
pop
mov
subl
pop
popa
sti
out
sti
sahf
fsubp
lock
cmp
jnp
iret
sub
imul
bound
sub
out
mov
test
push
sub
out
hlt
ja
or
dec
push
lret
inc
or
cmp
adc
push
fiaddl
mov
jns
pop
movl
pop
mov
in
inc
shl
cmp
sub
mov
pop
pop
bound
sub
dec
jns
mov
push
fdivrs
stos
sbbl
mov
mov
es
repnz
loope
jg
gs
adc
xor
lea
call
adc
push
push
fimuls
xchg
iret
push
lock
push
xchg
push
rorl
cltd
aam
push
mov
into
dec
stos
js
test
push
inc
test
cmpsb
or
or
push
add
push
inc
mov
movsb
lret
dec
and
bound
les
in
fnstcw
rorb
sahf
lcall
ds
popf
fs
jno
repz
and
xchg
cli
dec
and
xchg
jp
out
mov
dec
add
sbb
sub
sub
sbb
and
push
mov
inc
faddl
xchg
enter
pusha
lret
loop
out
das
xchg
inc
xchg
dec
pop
xor
shl
and
cli
dec
scas
scas
sbb
orl
or
jl
lret
adc
cmp
push
mov
cmpsl
mov
cltd
cli
add
push
push
cmp
lahf
mov
xchg
imulb
lea
test
aas
mov
call
out
dec
lds
hlt
flds
mov
aam
add
repz
mov
in
mov
loope
hlt
loopne
stc
in
add
cmc
mov
mov
mov
lret
dec
xchg
mov
mov
sahf
test
inc
mov
cmpsl
loopne
lock
movsl
lods
add
cmpsb
sbb
fdivr
cmpsl
adcl
mov
sub
es
jp
leave
lods
mov
add
rclb
fimuls
mov
mov
sub
je
mov
push
lahf
popf
xor
loope
mov
dec
xor
sub
push
lods
adc
sti
pop
stos
lret
jmp
mov
dec
popf
jge
pop
imul
pop
cmp
cmc
xchg
mov
dec
mov
loope
outsb
pop
sub
hlt
rorl
cmp
inc
and
or
xchg
sbb
or
xor
sbb
cmpsl
mov
and
cmp
sub
inc
call
jnp
data16
push
and
xchg
adc
popa
mov
pop
push
fisttps
pop
lea
ret
sbb
cmpsl
lds
adc
and
sub
ss
stc
xchg
lock
call
jne
stos
addr16
push
aas
adc
inc
or
cmp
add
cmp
push
mov
roll
jnp
adc
mov
lret
fucomp
sub
mov
test
cmp
and
and
push
insb
pop
and
dec
adc
and
mov
nop
inc
outsl
leave
cs
inc
pop
xchg
icebp
push
cld
roll
test
mov
jae
fs
xchg
xorps
sub
sbb
lds
and
push
jns
xchg
xchg
test
mov
pushf
jnp
idiv
dec
iret
push
xchg
jmp
cld
ss
adc
adc
shr
shl
lds
inc
in
decb
dec
xchg
push
pop
xor
add
jmp
cmpsl
daa
clc
out
icebp
lret
data16
iret
sahf
add
jae
cmp
add
bnd
addr16
jl
lods
adc
decw
filds
hlt
nop
cmc
icebp
rcll
inc
cli
loop
cmp
adc
mov
imul
adc
push
out
mov
aas
fldcw
leave
pop
mov
outsb
mov
pop
scas
dec
fidivrs
into
sub
sbb
or
stc
push
jmp
pop
mov
outsb
mov
pop
scas
dec
fidivrs
into
sub
sbb
or
stc
mov
mov
mov
out
mov
pop
scas
dec
fidivrs
into
sub
sbb
or
stc
push
jmp
pop
mov
outsb
mov
pop
scas
ds
mov
mov
sahf
divb
xchg
mov
xchg
xchg
jne
add
jmp
stos
aaa
fwait
pop
mov
addr16
fildl
push
xor
or
pop
dec
xlat
jmp
stos
aaa
mov
mov
sti
addr16
ja
inc
lret
push
loope
stos
mov
xchg
xchg
imul
divl
mov
mov
ja
pop
mov
ret
pop
jecxz
jnp
and
ss
les
mov
test
xchg
pop
add
pusha
scas
scas
sahf
int3
cli
sahf
aaa
scas
jl
and
xchg
or
iret
fistpll
lcall
jle
jp
pop
inc
inc
stos
imul
sti
repz
jl
shlb
out
leave
add
add
inc
sub
push
mov
xchg
jp
xchg
out
cs
xchg
stc
je
jbe
jmp
jbe
cmp
dec
in
lret
push
out
or
cmp
cmpl
mov
scas
jmp
mov
pop
mov
xchg
hlt
fimuls
push
inc
fcoms
lcall
sbbl
sub
jnp
das
negl
repz
dec
daa
cmp
inc
pop
xchg
pop
fwait
addr16
ja
inc
scas
adc
pop
fs
shll
mov
mov
mov
ljmp
or
xor
out
std
pop
xchg
rclb
or
aaa
test
xlat
andl
push
out
mov
mov
scas
xor
ret
imul
jecxz
mov
pop
dec
xlat
mov
pop
mov
sti
addr16
fildl
push
cmp
or
pop
dec
xlat
mov
pop
mov
sti
addr16
fildl
push
cmp
push
inc
aaa
and
cmp
pop
push
push
ja
dec
jnp
mov
cwtl
cmp
out
cmpsl
cmp
popa
mov
pop
inc
rep
push
cmpsl
jne
int3
adc
int
je
sub
hlt
mov
jle
cmpsl
or
push
sbb
mov
dec
mov
int
dec
fidivrl
mov
loope,pt
movsl
lods
push
ret
cwtl
mov
addb
mov
int
lret
outsl
jmp
rcl
jnp
cld
push
enter
stc
int
cmp
in
movsb
jle
push
rclb
sub
add
add
pop
std
pop
push
and
inc
rorb
push
cmovle
fwait
cmc
mov
lock
data16
ret
and
sub
loopne
add
call
mov
fdivrp
pusha
jp
xor
aaa
ds
je
jmp
inc
lods
xchg
cmc
test
lods
test
sti
ja
xchg
mov
pop
jge
mov
inc
sub
dec
out
mov
int3
or
imul
pushf
lahf
fisubl
and
fstp
pop
mov
dec
rcr
loop
push
mov
and
lcall
jmp
js
stos
cmp
ja
pop
loopne
mov
stos
std
cmp
mov
movsb
cld
pop
test
mov
mov
inc
push
roll
mov
mov
shlb
mov
jle
fsubs
adc
outsb
push
lock
xchg
lods
into
cmp
bound
cmpsl
sbb
mov
inc
in
popf
xchg
mov
aaa
cmp
xor
iret
cmp
sti
mov
call
insb
arpl
gs
ret
insb
cmpsb
dec
cltd
mov
lret
cmp
jne
shll
xchg
out
les
dec
pusha
pop
pop
dec
pop
lcall
jno
hlt
fwait
xchg
cltd
repz
sahf
mov
push
and
mov
dec
sbb
push
das
cmp
fnstenv
daa
push
fwait
mov
out
jae
sub
mov
adc
inc
jge
pusha
fistl
ficoml
imul
or
loop
cmovno
jge
sahf
adc
push
fwait
mov
xor
ja
loope
aas
pop
mov
mov
xchg
lcall
pop
sbb
cmpsl
jg
stos
insl
pusha
inc
sub
pop
add
adcb
mov
xor
add
jge
xorb
popf
lahf
fadd
loop
pushf
fcompl
xor
adc
imul
pushf
aad
mov
mov
inc
jle
xchg
jne
inc
adc
scas
jl
gs
xor
fsub
pop
fs
stos
in
jae
stos
in
int3
push
or
lea
mov
mov
cmp
cwtl
push
popa
stos
scas
lahf
cwtl
movsb
jge
xchg
loop
cmp
out
out
cmp
cld
mov
push
push
aaa
fdivp
adc
jnp
dec
pop
divb
loop
icebp
popa
dec
xor
cmp
sti
repz
adc
pop
xchg
jge
mov
mov
rorb
popf
add
mov
and
out
popa
in
mov
push
imul
mov
fldl
lods
in
mov
mov
fucomip
sbb
push
cs
dec
test
or
and
jne
mov
sbb
ja
pop
xor
mov
adcl
sub
xchg
mov
popl
les
mov
sti
dec
movsb
cmp
sbb
mov
cmp
jmp
or
xor
jae
mov
cltd
cmp
jo
jmp
lcall
scas
fwait
push
out
and
adcl
xlat
push
fs
adc
hlt
push
and
stos
movsb
mov
adcb
and
cmp
mov
inc
lods
lds
add
test
mov
pusha
add
lahf
pop
jb
ss
ja
pop
xor
cmp
je
daa
sbb
lret
gs
push
inc
adc
fwait
cmc
jg
mov
popf
mov
outsl
mov
dec
rolb
mov
fwait
enter
sahf
xchg
fidivrl
hlt
mov
add
or
mov
sub
xchg
dec
xor
cld
sbb
lcall
insl
das
aaa
sbb
xchg
rorb
fwait
outsl
aad
push
or
fstp
jl
out
jo
ljmp
sub
sti
repz
dec
jns
stos
fistpl
rorb
jnp
cld
xor
adc
jnp
inc
push
arpl
aas
jnp
sbb
add
rorl
add
leave
es
push
incb
push
out
nop
adc
pop
or
sbb
lret
fucom
outsb
into
jp
mov
inc
push
dec
mov
stc
pop
std
xchg
push
sub
sub
mov
xchg
pop
fstl
mov
or
dec
jnp
movsl
fisubrl
nop
pop
xlat
jns
adc
hlt
mov
dec
jecxz
rep
xlat
mov
jbe
cld
in
or
into
out
xchg
mov
add
aaa
sub
lea
sbb
xchg
sbb
sti
add
mov
or
xlat
inc
loope
loopne
mov
xchg
loopne
mov
stos
dec
testl
out
xlat
and
xchg
dec
add
ret
jb
repz
out
loop
and
ss
mov
xor
fbld
mov
outsb
fiaddl
das
aad
push
sub
mov
enter
les
xor
test
insb
mov
scas
or
jno
mov
pop
sub
cmp
shlb
stc
inc
shrb
cmpsb
push
wbinvd
dec
inc
pop
jne
xchg
out
je
mov
mov
es
dec
mov
das
xchg
adc
xor
sub
fs
dec
sbb
sarb
mov
jg,pt
dec
adc
mov
xor
stos
call
inc
mov
scas
mov
dec
push
das
inc
xchg
mov
sub
mov
xchg
mov
lea
pop
hlt
adc
into
ljmp
or
test
shl
or
jae
ss
xchg
sbb
loope
fwait
xchg
inc
ds
insl
pop
pop
je
popf
pop
xlat
push
jge
daa
fidivl
and
jne
mov
aad
and
stos
dec
sahf
sub
pop
dec
and
add
mov
subl
shrl
or
test
push
stc
and
pop
popf
scas
ss
ja
sub
or
in
std
mov
iret
scas
insb
sub
inc
pop
cwtl
popa
js
push
jge
gs
out
loopne
cmp
mov
mov
das
mov
inc
cmp
add
outsb
mov
adc
cmp
leave
mov
arpl
inc
cmpsl
loopne
xor
loop
fsubl
clc
dec
loop
test
rcrl
loopne
inc
das
xchg
xchg
imul
sub
sbb
sbb
es
gs
icebp
push
inc
add
scas
imul
or
xchg
cmp
xchg
lea
iret
scas
popf
out
jne
es
std
call
mov
rcrl
mov
push
ss
ret
dec
lcall
mov
fdivrs
stos
xchg
sti
xchg
iret
sti
lods
cmc
sbbl
mov
and
adc
adc
loope
sub
inc
js
add
pop
repnz
push
les
push
ror
dec
xchg
insl
lret
xorl
and
std
clc
lret
pop
call
inc
sbb
jmp
mov
pop
cs
ss
outsl
cs
xchg
shrb
mov
scas
imul
movsl
cmp
sbb
in
int
push
ss
out
push
inc
sub
imul
cmp
rclb
mov
fimull
push
cltd
push
and
enter
je
mov
rcrl
aad
or
and
aas
aam
sub
xchg
enter
or
fcoml
lea
lods
repnz
aad
dec
mov
jmp
jae
xlat
add
movsb
or
mov
pop
jecxz
sbbl
lock
dec
insb
ret
icebp
adc
xor
jno
dec
pop
jnp
adc
or
test
push
ja
divl
jno
push
outsl
sbb
dec
sarb
lea
ret
xchg
push
cmpsb
xor
and
cli
xchg
push
and
mov
fisttpl
inc
xrelease
test
pop
mov
lret
aaa
ds
jl
pop
stos
push
mov
lret
mov
inc
sub
subb
in
or
loopne
and
mov
repnz
or
sbb
in
ficompl
cmp
jp
call
sub
inc
push
inc
orl
and
jmp
adc
dec
push
add
adc
xchg
movsb
mov
sub
jp
fwait
mov
jae
jb
repz
cltd
mov
push
bound
pop
insl
dec
ja
test
in
ljmp
dec
lret
insl
and
sbb
sub
mov
shr
loopne
pop
lods
add
aad
lea
pop
pusha
pop
stos
cmp
stos
std
std
cs
or
sub
sub
mov
cmc
sbb
into
pusha
push
and
sbb
mov
stos
lea
xchg
push
rclb
cmp
xor
pop
jne
fwait
and
stos
lods
pop
sbb
mov
rcrl
imul
popf
adcb
clc
aaa
lods
psraw
test
daa
add
sbbb
cmp
dec
popa
push
cmp
mov
pop
mov
lret
test
lock
test
dec
xor
pop
and
cld
stc
jnp
jbe
xor
lds
mov
sbb
adc
and
jns
inc
iret
lret
push
aas
add
mov
mov
ret
cld
push
xchg
jmp
mulb
out
mov
ret
fdivl
js
std
lods
scas
mov
or
dec
icebp
inc
xchg
xchg
mov
adc
xchg
lds
cli
cmp
xchg
or
pop
mov
push
sub
cmp
jecxz
sbb
ljmp
nop
scas
dec
mov
jae
mov
stos
rclb
lret
mov
aas
xchg
nop
pop
fmull
lds
pop
mov
lods
mov
dec
sub
aad
cmp
pop
lcall
xchg
jmp
push
mov
push
xchg
arpl
or
mov
add
inc
movsb
add
daa
sub
add
inc
xchg
cmpsl
negb
cmc
mov
jno
addb
xor
sbbl
sti
or
and
lret
pop
popf
insl
mov
adcl
adc
loop
es
iret
xchg
jp
adc
lea
loope
jle
cmp
xchg
jle
fucomip
repz
fbstp
dec
push
ret
fcom
leave
test
push
mov
jo
mov
enter
out
lcall
xchg
roll
imul
sbb
idivw
loopne
sub
inc
jp
daa
imul
cltd
push
std
pop
scas
xor
sbb
jg
inc
mov
dec
pushf
push
scas
mov
mov
lock
add
loop
nop
add
cwtl
jns
and
push
xchg
stc
add
fadds
ljmp
mov
into
pushf
sub
nop
lcall
cs
xchg
mov
aas
out
aad
repnz
test
call
sbb
dec
fisttps
xor
loopne
xchg
push
mov
imul
add
call
sub
rcll
psubsb
cmp
loop
outsb
repnz
cmpsb
repz
dec
sub
lret
mov
in
mov
mov
add
inc
mov
push
out
cmp
sbb
mov
dec
xchg
or
leave
out
pop
loop
sbb
imul
mov
pop
pop
mulb
inc
mulb
adc
xchg
pop
data16
cltd
pop
dec
test
cmpsb
mov
cmp
inc
loopne
shr
jl
jnp
cmp
cmc
mul
sub
inc
adc
out
dec
repnz
pop
xor
or
sbb
xor
ljmp
jno
outsl
pop
jp
movsb
dec
mov
pop
sete
xchg
repnz
dec
jmp
xor
dec
xchg
daa
out
push
decb
orb
insl
xor
idiv
add
out
or
orb
mov
lock
jns
divl
outsb
xchg
sub
arpl
xor
ret
outsl
loopne
lock
jl
mov
imul
xor
cld
insb
lea
aad
push
dec
leave
push
subl
jge
or
xchg
inc
cmc
sbb
sbb
iret
std
inc
cwtl
add
pop
and
popf
mov
ret
mov
sub
xchg
aas
jmp
and
in
xchg
sub
movsb
push
lahf
outsl
jg
cwtl
stos
mov
leave
outsl
pushf
inc
dec
push
sub
mov
cld
mov
data16
push
fmull
push
mov
jge
cld
adc
mov
pop
mov
or
insl
and
and
pushf
sub
movsb
in
std
lock
push
lock
out
mov
inc
pop
mov
or
cmp
andb
jns
add
daa
mov
jl
inc
int
shrb
lock
xchg
push
cmp
repnz
test
out
es
pusha
xchg
lea
adc
out
andl
in
js
test
add
and
sbb
stc
arpl
test
ret
pop
or
stos
xor
leave
jecxz
testl
stos
mov
data16
or
leave
or
pushf
push
sarb
or
adc
sub
bnd
aaa
pushf
cmp
push
mov
inc
cmp
xchg
sub
std
mov
dec
xchg
into
mov
daa
jg
mov
sahf
jl
das
shll
dec
mov
xor
dec
jp
cltd
sbb
shr
test
xchg
mov
jg
jb
dec
push
lods
xchg
jp
jmp
cmp
js
mov
les
mov
ja
stos
xchg
das
fsts
sahf
int3
movsl
sti
add
push
stos
mov
int
ret
adc
gs
adc
sbbb
int3
out
sahf
or
pop
jb
or
popf
lods
js
push
add
sbb
pushf
ss
inc
lods
dec
shll
aad
or
ds
sbbb
pop
inc
bound
adc
cltd
pop
lret
ljmp
ds
aad
and
int3
xor
adc
xor
mov
mov
sub
enter
xor
gs
cld
lock
push
mov
je
lahf
adc
cmpsb
pop
cmp
mov
bound
sbb
adc
ss
adc
jne
clc
loopne
hlt
lret
pop
xchg
inc
dec
lea
sub
int
xchg
mov
mov
sbb
mov
adc
repz
out
shll
hlt
insl
mov
mov
pop
iret
adc
adc
lret
es
inc
enter
pop
out
mov
inc
aas
frstor
shl
mov
call
std
xchg
and
xlat
dec
pop
xchg
enter
insb
push
in
xchg
pop
jmp
mov
cltd
testb
push
cwtl
lcall
test
sub
mov
ret
push
in
push
inc
dec
adc
lcall
mov
clc
daa
sub
sti
mov
aam
scas
sbb
push
loopne
lock
mov
rorb
push
dec
inc
lock
jae
scas
pop
cmp
out
mov
cmp
push
xchg
insb
test
mov
aaa
imul
stos
add
xor
xchg
push
lahf
lahf
cmp
fwait
pusha
pop
insl
adc
xchg
js
add
cld
movsb
xchg
adc
aaa
lods
cmpsl
shlb
xor
push
or
pusha
sub
fldcw
mov
pop
push
lret
or
cld
xchg
cmp
outsl
fdivp
pushf
dec
adc
repnz
push
push
pop
ficoms
and
cmpsb
cli
dec
sbb
outsb
into
sbb
mov
dec
iret
mov
out
inc
test
addr16
mov
push
cmp
lret
sbb
push
nop
es
xchg
inc
das
jnp,pt
pop
inc
xor
lds
sub
cli
xchg
sub
jbe
data16
mov
addr16
pop
imul
fcompl
jmp
test
insb
mov
dec
rcll
adc
jae
dec
add
push
dec
daa
and
mov
sub
mov
ret
xchg
dec
outsl
mov
loope
xchg
inc
out
and
pop
fsubr
cmp
mov
scas
bound
dec
inc
pop
mov
jge
and
xchg
push
mov
cmp
push
scas
push
xor
mov
pop
sub
aad
fstps
in
sub
adc
mov
sbbb
jl
je
sub
sti
inc
js
inc
push
sbb
or
dec
cmp
adc
xchg
mov
lods
jle
fsubl
mov
inc
outsb
cwtl
jl
iret
xor
push
lahf
test
ss
mov
inc
mov
or
stc
ljmp
jb
inc
xchg
mov
into
add
mov
mov
es
ljmp
out
stos
pop
nop
leave
push
in
mov
call
ja
and
dec
add
fdivl
lcall
lret
adc
cmpsl
mov
test
nop
mov
into
sub
dec
popa
ret
or
inc
sub
ds
mov
and
mov
and
stc
xchg
jle
pop
ds
fnsave
mov
mov
push
dec
jns
in
mov
repnz
push
adc
cmpsl
rclb
adc
adc
mov
dec
sbb
xlat
jns
lret
loope
cmp
sub
pop
xchg
jne
fcoml
lret
sub
adc
ja
adc
imul
cmp
popa
pop
sub
fisttpl
push
pop
pop
mov
or
push
jle
loopne
add
in
imul
fmul
loop
pop
cld
sub
outsb
aad
cwtl
call
aaa
inc
scas
cwtl
ficoml
into
lock
mov
dec
push
cmp
lock
mov
mov
sbb
cmp
rolb
scas
scas
ljmp
mov
mov
mov
cmp
dec
xor
adc
aaa
pop
xchg
add
ss
mov
add
mov
insb
sub
adc
push
bound
fsubrl
inc
ljmp
adc
lock
push
fmulp
test
xlat
addr16
mov
ljmp
jbe
mov
mov
cli
arpl
adc
cs
stos
aam
aas
xlat
jo
push
in
test
fwait
movsl
hlt
fisttps
iret
xor
push
xor
pop
sbb
js
mov
dec
ficompl
lahf
pop
lea
sbb
das
pop
mov
mov
popa
cwtl
test
xchg
sbb
stc
adc
inc
pop
sbb
das
cmp
dec
lret
das
push
in
add
push
dec
mov
rorb
fisttpl
fmuls
mov
jne
movsl
mov
in
insb
lds
in
mov
push
pop
xchg
arpl
enter
sti
ja
stc
fwait
mov
lods
mov
jge
adc
inc
rorb
and
or
xor
inc
ret
or
jns
sarl
shrb
sub
mov
cwtl
mov
add
dec
or
inc
imulb
push
lods
inc
cwtl
ret
cmp
fisttpll
dec
in
les
fsts
sub
pusha
and
ret
clc
imul
cmp
jnp
mov
mov
subl
jge
inc
aas
test
andb
cmp
mov
xor
xchg
js
arpl
das
fs
xor
push
adc
mov
std
loopne
mov
sub
mov
ror
int3
dec
ret
aas
jbe
rcrl
jb
mov
sub
repnz
and
adc
cli
movsb
movsl
ds
and
sarb
mov
call
aad
dec
lds
fldl
inc
push
popa
push
push
push
cld
adc
orb
test
mov
gs
sub
lods
xchg
mov
xorl
cwtl
mov
jbe
mov
mov
in
dec
mov
dec
and
push
jbe
shlb
and
pop
icebp
xor
loop
inc
xor
popf
daa
aas
out
ss
jge
cmp
pop
daa
add
out
push
int3
dec
pop
iret
adc
shrb
nop
dec
xor
or
and
pop
xchg
fnstenv
loopne
test
fs
dec
xor
gs
sbb
pop
pop
jle
cmpl
dec
lret
jg
mov
jge
push
ret
pusha
js
rcl
imul
xchg
mov
mov
or
and
in
push
popf
fcomps
pop
push
dec
cwtl
jb
jg,pn
out
sub
xchg
mov
icebp
xchg
adcl
addb
jnp
mov
xor
insl
adc
mov
cmc
mov
mov
loop
push
xor
cmpsl
push
icebp
jnp
xchg
pop
xlat
mov
inc
or
jne
repnz
ds
and
mov
push
rcl
push
enter
shlb
push
loope
pop
xchg
jnp
imul
dec
xlat
mov
pop
mov
sti
addr16
fildl
push
cmp
or
pop
dec
xlat
mov
pop
mov
sti
addr16
fildl
push
cmp
or
pop
dec
xlat
mov
pop
pop
sti
data16
inc
sti
push
and
and
pop
inc
lret
sub
pop
mov
out
arpl
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
mov
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
call
push
mov
call
xor
leave
ret
xchg
ljmp
aam
mov
aam
lret
aam
jo
dec
and
push
sub
sbb
ljmp
aam
les
adc
add
push
dec
and
adc
inc
cmp
sbb
jbe
es
lret
mov
jo
daa
pop
pop
das
inc
xor
insb
data16
insl
cli
cmpsb
enter
int
rclb
les
mov
lahf
push
jmp
test
dec
jo
pusha
fidivrs
js
xor
and
mov
imul
mov
fmuls
cmp
popa
je
fwait
dec
push
sarl
sbb
je
push
xlat
pop
inc
push
jnp
dec
and
inc
aad
push
mov
addr16
out
push
fisttps
sub
in
adc
mov
fildll
jg
sbb
mov
sub
dec
push
jg
outsl
lcall
popa
pop
adc
sub
sbb
mov
pop
shrb
in
xor
add
adc
push
jle
aas
shlb
je
addr16
ljmp
xor
inc
lcall
adc
sbb
dec
cmp
fs
std
ljmp
mov
out
in
adc
push
arpl
inc
sub
pop
sub
js
jg
xchg
xchg
movb
incl
fnsave
or
sub
stos
call
mov
hlt
mov
lcall
and
push
sub
or
ljmp
aam
les
adc
add
xor
and
push
sub
or
ljmp
sbb
adc
mov
push
lret
ja
jp
mov
jnp
outsb
sub
mov
sti
daa
dec
xor
fiaddl
and
sti
or
outsb
jae
inc
jnp
das
int3
js
mov
and
inc
int
sub
xchg
and
push
cwtl
in
push
mov
sbb
je
xchg
mov
cmc
push
inc
jne
sub
mov
sbb
mov
dec
lcall
push
mov
test
cli
cmp
ja
cmp
xor
sbb
sub
add
dec
cwtl
cmp
push
mov
cmpb
stc
fnsave
cmpsb
sbb
mov
mov
sbb
or
adc
dec
push
dec
je
ret
repz
insb
dec
push
xchg
lcall
es
in
sbb
loope
mov
fs
inc
pop
jle
mov
push
sub
in
ja
add
aas
insl
mov
sarb
loope
loope
pushf
inc
inc
jne
into
mov
inc
out
pop
mov
imull
cwtl
pop
out
jecxz
jecxz
inc
adc
sahf
js
test
dec
push
cmp
cmpsl
sbb
pop
cmpsl
fistpll
cmp
out
adcl
scas
std
push
mov
inc
pusha
lret
mov
movsl
test
adc
lcall
adc
rolb
pop
insl
leave
clc
aad
sbb
push
stos
std
or
pop
adc
aaa
cmpsb
outsb
dec
xor
ja
push
aaa
sub
pop
and
cmp
cwtl
push
push
pop
std
repz
out
hlt
popf
fistpll
sbb
inc
or
adc
jnp
dec
add
mov
push
sub
int
dec
cmc
jge
jnp
insl
jae
das
adc
test
xchg
outsb
cltd
xchg
pop
and
cmc
fdivr
and
pop
adc
lods
dec
xchg
mov
lret
xchg
pop
daa
arpl
mov
testl
jp
mov
pop
fists
mov
push
cltd
adc
jae
sub
xor
lcall
lock
push
sbb
mov
das
adcl
shl
in
xchg
add
cmp
stos
mov
pop
cmpsb
mov
lahf
outsl
dec
sbb
andb
inc
test
addr16
jne
jmp
pushf
orb
sbb
push
or
inc
jnp
mov
out
addr16
gs
cmpsb
jae
dec
lods
mov
push
scas
imul
out
es
jns
ficoms
loope
cmp
clc
out
in
adcl
mov
nop
sbb
xchg
ret
push
loop
ds
mulb
test
add
cmp
jecxz
lcall
cmpsb
fnstenv
icebp
push
add
iret
push
lods
jae
inc
push
inc
dec
or
dec
popa
int3
pop
ds
sbb
test
subl
wrmsr
xchg
pop
sti
mov
test
loop
ret
and
out
mov
loop
xor
dec
es
fsubs
push
jmp
mov
and
adc
cmp
out
jo
xchg
xchg
movsb
mov
dec
fistpl
ret
jne
jb
jnp
dec
dec
lahf
pushf
mov
mov
sti
add
dec
xor
mov
jno
or
xchg
ror
sub
out
daa
inc
mov
cld
js
addr16
mov
mov
pop
cmp
jl
sub
ds
sub
adcl
orl
test
test
sbb
ds
fisttps
ficoml
dec
push
pop
inc
data16
sub
rclb
icebp
cmp
fdivrp
sti
jmp
mov
fmul
lods
int
dec
hlt
enter
ret
mov
jl
mov
dec
sbb
or
mov
lods
inc
btr
loopne
outsl
lea
andl
push
or
pop
loopne
sbb
xchg
std
mov
ljmp
xor
sbb
scas
jl
mov
inc
xchg
jmp
pop
fwait
xor
sbb
xor
adc
fucomp
mov
stos
sub
xorb
jb
add
movsl
iret
xor
aam
mov
sbb
out
cld
pop
or
xchg
jb
jo
lock
mov
loope
popa
fldcw
push
ret
inc
pop
ja
leave
fwait
shrb
pop
cmp
cmpl
mov
dec
icebp
sub
pop
bound
shrl
push
cmp
test
adc
dec
lock
xor
jg
push
pop
or
pop
jge
xor
out
outsl
xor
int3
xlat
inc
sbb
mov
inc
out
inc
out
mov
loope
mov
adc
xchg
scas
aam
ret
sbb
bound
pop
jbe
aad
push
test
mov
inc
int3
je
addr16
sahf
mov
pop
nop
cmp
inc
out
dec
or
and
push
push
popf
jl
sbbl
sbb
and
cmp
nop
dec
aaa
decl
push
jb
insl
pop
jae
jmp
ds
inc
addr16
addr16
dec
cmp
cmc
and
cs
xchg
popf
sbb
inc
and
cmp
jns
jb
std
in
sbb
mov
lods
cld
aas
or
in
loop
push
push
jae
mov
test
pop
test
pop
xlat
mov
movsb
mov
xchg
xchg
inc
dec
out
scas
inc
dec
shlb
mov
xchg
or
cli
inc
ljmp
or
aad
loop
xchg
pop
push
xor
pop
and
cld
fstpt
ret
add
sti
popf
call
dec
mov
jnp
insb
insb
and
jnp,pn
add
imulb
inc
push
push
dec
into
pop
pop
mov
add
push
daa
ljmp
pop
lods
add
fs
push
lea
cs
push
ja
insb
sub
push
out
fwait
mov
pop
cmp
negl
jge
int
test
fsts
push
out
in
clc
fwait
js
sub
xlat
adc
cmc
cmp
push
outsl
mov
cli
mov
cli
dec
nop
cwtl
loop
push
push
fcmove
mov
jge
sub
mov
cmc
xor
push
pushl
mov
test
add
flds
jno
sub
lds
xchg
mov
or
fwait
jl
push
insb
loope
test
imul
mov
ja,pt
push
mov
xorb
lods
xor
and
in
mov
adc
mov
in
fxch
jp
mov
lret
sti
movsl
add
dec
in
and
adc
stc
jne
inc
stos
sar
mov
outsl
adc
add
in
dec
mov
leave
mov
insl
sub
mov
dec
testb
fists
pop
loope
scas
daa
push
leave
ret
push
xor
cmp
call
inc
cld
dec
icebp
push
je
mov
mov
push
pop
push
xor
sbb
mov
test
stc
inc
sub
mov
add
jmp
cmpsb
jle
or
sbb
icebp
mov
jae
xor
test
dec
pop
roll
cltd
jno
rorl
sbbb
adc
lcall
inc
add
jg
out
jmp
push
mov
dec
dec
shrl
enter
push
jns
and
mov
adc
adc
pop
xor
int
push
push
or
ljmp
addr16
test
push
shlb
out
fisubrl
clc
out
into
scas
pop
jle
jns
jno
pop
jl
clc
mov
sub
xchg
xchg
out
and
xrelease
dec
bound
jp
xor
stc
push
fisubrs
scas
nop
orl
sbb
or
pop
loopne
jb
xor
inc
ret
nop
in
dec
or
call
mov
dec
loopne
push
dec
sub
mov
push
lds
ret
dec
add
and
lahf
cmpsb
rcrl
pop
nop
or
jbe
out
les
sbb
shr
or
jae
test
push
arpl
jae
mov
sbb
mov
pop
pusha
scas
ljmp
cmp
iret
mov
movb
bound
inc
ret
ds
inc
adc
in
or
scas
push
cmp
push
loopne
xchg
lret
or
test
xchg
push
xor
inc
adc
rcrb
push
test
mov
lea
jb
lods
sar
xor
sub
jnp
pop
xchg
sub
mov
jno
popf
push
neg
pop
sub
inc
xor
aas
lea
or
jg
sbb
inc
out
rol
push
push
xor
mov
mul
mov
out
dec
or
loopne
shll
mov
out
int3
pop
mov
cmc
lds
ljmp
jo
shrb
lret
push
jo
cs
xor
dec
vsqrtpd
ja
ljmp
fadd
cmp
and
ficoms
jnp
aam
fstl
je
addr16
loop
mov
sub
mov
cmpsl
pop
mov
enter
dec
mov
xchg
fst
jnp
jne
sbb
scas
sbb
push
ret
out
cmp
insb
or
lock
push
sbb
into
jle
mov
dec
cmp
push
pop
fimull
and
mov
xor
out
iret
enter
xchg
cs
in
loope
hlt
xchg
cltd
and
mov
gs
mov
jle
cmp
sarb
pop
sub
adcb
movsb
sub
movsb
sub
fs
scas
cmp
cmp
xchg
cmp
inc
sti
rclb
ret
mov
xor
cmp
inc
xchg
push
jge
adc
clc
test
out
lods
je
fistl
jne
subb
scas
xor
jle
jae
iret
push
ficomps
push
enter
xor
iret
push
sub
jmp
imul
xlat
out
cwtl
xchg
jge
shr
stos
in
push
xor
inc
ljmp
jp
jo
jnp
ret
sub
dec
push
cmc
js
mov
xor
hlt
add
fs
cmp
gs
inc
loope
jle
push
pop
fwait
cld
mov
cmp
xchg
xor
sub
pushf
pop
adc
enter
cwtl
pop
notl
xor
imul
roll
or
dec
xor
and
mov
mov
lock
ss
aas
fisttpll
aam
inc
mov
out
test
ljmp
lret
cmpsb
mov
xor
and
in
adc
rcll
push
and
cld
pusha
bound
jns
ret
jbe
in
sub
outsl
mov
lcall
xlat
mov
popf
xor
jb
push
and
pop
pop
aaa
sarb
movsl
sti
ret
mov
stos
out
xchg
xchg
popf
fisubs
jecxz
pop
into
xor
adc
cmp
jmp
mov
ret
add
dec
inc
aas
popf
pop
clc
add
xlat
xchg
pop
adc
jo
loop
lods
addr16
stos
cmp
out
in
add
jmp
mov
call
stc
add
fs
mov
add
mov
cmc
jo
or
test
mov
or
dec
inc
enter
dec
mov
cmp
or
push
xchg
fildl
push
jbe
into
fsubrs
push
int3
and
mov
mov
fnstsw
stos
or
cmpsl
repnz
cltd
out
int
or
fldt
and
pop
inc
loop
mov
cs
cli
mov
adc
hlt
ret
adcb
dec
pop
mov
sti
xchg
jge
popf
dec
cmp
mov
pop
js
mov
leave
xchg
or
out
adc
jne
and
sarl
icebp
dec
ret
jle
stos
jnp
stos
and
movsl
pop
aam
roll
ss
adc
adc
inc
add
test
adcl
ljmp
pop
xchg
jnp
sbb
aaa
pop
fcomi
xchg
lods
pop
aam
mov
std
popa
mov
add
out
mov
fwait
add
popa
lock
lods
test
xchg
divb
test
and
jns
push
jne
mov
push
xchg
inc
jns
addr16
or
sub
cmp
jmp
repz
repnz
inc
imul
movsb
pop
mov
add
and
lcall
shlb
mov
lods
and
or
in
dec
andb
adc
jns
inc
mov
jno
mov
dec
adc
push
jmp
push
sbb
call
jl
cld
imul
xchg
lods
jae
cmp
out
sub
scas
xor
adc
jbe
inc
mov
xlat
mov
and
fidivrl
sub
pop
js
inc
mov
insb
aad
and
mov
gs
insl
mov
pop
imul
sbb
and
xlat
cmpl
add
and
sbb
jp
shrl
in
pop
inc
mov
dec
fadds
jle
mov
aas
hlt
mov
mov
inc
push
stc
push
cmc
push
insb
jg
fwait
insb
mov
xor
mov
sbb
adc
outsl
and
ja
fst
dec
mov
xchg
pushf
jne
push
xchg
push
adc
add
pop
jb
push
out
repnz
cmpsb
inc
shl
pop
ja
insb
aad
or
daa
jecxz
dec
add
test
out
cmc
xor
sbb
jmp
pusha
iret
inc
mov
or
stos
mov
popa
xchg
movsl
xor
sub
fstpt
pop
movsb
insb
aam
out
xor
cmp
shlb
jge
add
add
xchg
inc
pop
cmp
dec
mov
sub
pusha
push
and
outsb
add
xchg
mov
dec
popf
pop
enter
sbbb
scas
push
addr16
fsubrp
daa
mov
dec
push
cmp
insl
ret
daa
push
push
test
arpl
cmpsl
cwtl
stos
lret
pop
jbe
inc
dec
xchg
mov
cltd
scas
cli
sub
jne
mov
ja
jecxz
in
xchg
popa
sub
mov
jle
jb
jmp
mov
rcll
lock
cmp
jb
cmpsl
jle
ss
cwtl
pusha
rcrl
lret
xchg
jmp
jo
in
out
sarb
out
fidivrl
jb
hlt
cld
jnp
bound
xchg
jl
rol
pop
pop
fdivs
push
cmpsb
andb
scas
pop
sub
dec
sub
pop
mov
arpl
and
jbe
cmc
push
rorb
arpl
cmpsb
in
leave
scas
lea
fsqrt
imul
mov
mov
scas
jbe
jmp
sub
mov
mov
ja
fimull
mov
jb
andl
loope
push
dec
mov
xchg
fwait
sti
fstpt
or
enter
pop
cld
jl
jns
clc
push
cli
mov
and
push
rcr
adc
lcall
out
jg
pop
fnstcw
insb
mov
mov
dec
movsb
cmc
iret
add
and
popa
and
enter
fldcw
ja
jecxz
or
enter
cmpsl
pop
mov
shr
out
pop
push
test
es
movsb
aas
xchg
test
xorl
lods
pop
outsb
xor
mov
cmp
std
fisubl
sbb
cmp
lds
aaa
pop
cld
iret
mov
cmp
test
sub
repz
arpl
enter
in
pop
mov
scas
jge
incl
aad
and
mov
mov
sysret
xchg
fldenv
pop
push
in
xchg
pop
xchg
sbb
and
inc
mov
fidivl
ljmp
fimuls
cmpsb
scas
jns
sti
fldt
adcb
repnz
loopne
sub
sub
sbb
push
mov
pop
xchg
test
clc
push
subl
or
out
inc
or
sub
es
aad
int
ss
faddl
adc
in
dec
in
inc
lret
lods
lock
ret
mov
push
cmp
std
mov
hlt
movsb
sbb
cmp
push
in
lods
sbb
jecxz
jg
int3
mov
push
cli
stc
push
or
out
out
sbb
je
cmp
dec
sub
leave
lcall
push
push
popa
push
cld
fwait
jne
lock
inc
cmpsb
out
outsb
test
jne
or
push
daa
mov
pusha
sti
movsb
hlt
and
lods
sbb
sub
and
mov
sub
jp
xchg
mov
sahf
pushf
jmp
mull
enter
imul
inc
imul
in
add
adc
xchg
mov
mov
cmpl
iret
mov
bound
mov
dec
xlat
and
jo
cmpsl
jns
popa
ret
out
fildl
mov
and
lods
outsb
sub
idivb
cmpl
sub
mov
out
inc
outsl
push
push
loopne
enter
andb
in
cwtl
xchg
cwtl
mov
aam
aas
addr16
mov
mov
xchg
add
push
aad
aaa
outsb
rcr
nop
mov
test
dec
inc
pop
cld
in
sub
xchg
adc
push
mov
jp
test
and
int3
xorb
dec
rorl
add
inc
fmul
mov
jo
lds
mov
gs
sarl
xchg
sbb
pop
lret
mov
aaa
xchg
fwait
adc
es
mov
jl
add
mov
jns
dec
out
scas
and
movsb
cwtl
je
mov
cltd
and
lret
and
xor
outsl
mov
movsb
dec
fnsave
icebp
rcrl
xchg
cmp
std
push
hlt
mov
xchg
add
mov
outsb
jge
dec
xor
pop
xchg
mov
in
ficoms
xor
cmp
xchg
jb
xchg
jno
xchg
push
push
in
push
scas
dec
dec
pop
clc
fildl
in
imul
aad
stos
ret
lcall
das
xchg
movb
mov
fistl
pop
sbb
or
jecxz
xchg
popa
repnz
cmp
shll
or
scas
ljmp
shlb
out
pop
adc
mov
xchg
mov
fidivrs
pop
add
lea
dec
rorl
jo
cmp
mov
pop
push
es
or
cld
jne
fwait
mov
xchg
inc
je
mov
out
push
xchg
mov
out
mov
dec
pop
adc
xchg
ret
push
sub
fcoms
pop
mov
mov
and
test
and
mov
test
dec
ja
pushf
push
in
pop
lods
jb
gs
sbb
jmp
jl
mov
fadd
adc
add
repnz
jb
push
std
xor
or
cmpsl
fldpi
cmp
imul
and
test
dec
xor
sarl
xorl
test
add
or
mov
subb
sub
mov
push
mov
aad
mov
aaa
cmp
ss
enter
cs
pop
rcl
and
sub
out
fsqrt
sbb
cwtl
push
cwtl
sahf
test
divl
mov
push
mov
jnp
inc
fwait
pop
fisttpl
subl
dec
xchg
mov
out
add
mov
enter
aam
out
shll
mov
movsl
or
outsl
pop
push
adc
nop
or
fistps
sbb
fadd
mov
addr16
adc
fildll
js
loop
and
mov
xchg
lods
les
std
jno
lcall
gs
or
ret
inc
push
jnp
pop
ds
xchg
testb
test
fs
loope
sbb
adc
lea
sub
ret
cmc
xor
stos
incb
shlb
shlb
mov
rcl
push
add
fucom
xor
jg
push
sbbb
inc
bound
pop
mov
mov
mov
xlat
testl
jnp
pop
xchg
pusha
dec
inc
mov
cmpsl
aad
add
test
cmpb
cmp
data16
int
call
mov
das
jne
dec
xor
mov
pop
mov
inc
jb
iret
or
iret
outsb
xor
push
cmp
xor
mov
push
cmpsb
cmpsl
dec
ss
bound
xlat
loopne
cmp
sar
or
shrb
cmpsb
cmp
sub
mov
mov
lds
xor
jno
sbb
jb
es
into
adc
adc
cmp
mov
outsb
or
cltd
shlb
cmp
xchg
mov
jns
ja
js
mov
insb
mov
mov
xchg
addr16
or
mov
lods
orl
loop
std
or
test
sub
rclb
jg
movsl
repnz
leave
xchg
fidivl
pop
testl
arpl
js
xchg
popa
outsl
je
mov
lock
pop
inc
push
shl
clc
mov
sbb
sbb
mov
out
push
add
inc
fcomps
fists
sahf
jne
icebp
pop
mov
pop
cmp
fstl
js
lret
jo
lods
mov
pop
sub
mov
jbe
xchg
jmp
lahf
scas
cmc
icebp
scas
jge
jb
mov
mov
popf
jl
xlat
jae
cli
repz
aam
les
adc
add
xor
and
push
sub
or
ljmp
aam
les
adc
add
xor
and
push
sub
or
ljmp
inc
stos
les
adc
add
les
pop
push
sub
or
out
lret
aam
aam
hlt
mov
push
rcrb
mov
fwait
in
jl
sub
inc
dec
mov
add
cmp
cmp
jecxz
call
mov
mov
pusha
push
xor
and
adc
add
lock
loopne
mov
ror
xchg
mov
mov
pusha
scas
push
ret
xor
and
adc
cmp
clc
loopne
mov
movsl
mov
mov
out
in
add
sub
adc
jmp
xor
jno
jecxz
fistps
xor
addr16
and
sub
mov
sub
jne
test
pop
adc
daa
dec
cwtl
dec
lods
pop
negl
adc
pop
add
mov
fwait
call
mov
xchg
aas
ss
dec
pusha
push
adc
mov
pusha
push
xor
sbb
fadds
test
jge
or
daa
sub
push
lods
repz
lea
push
mov
or
sub
flds
hlt
cwtl
fistl
cmp
ror
mov
mov
lds
call
stos
ss
shlb
loop
hlt
pusha
dec
push
sub
dec
xor
and
adc
add
rcr
shl
test
mov
cmp
push
and
popf
inc
inc
push
insl
gs
cwtl
mov
movsb
stos
in
std
in
hlt
loope
and
and
or
jno
cmp
mov
test
std
lahf
sti
push
or
xor
and
je
sub
sbb
or
clc
loopne
rcr
ror
mov
orb
pop
inc
dec
xor
and
adc
add
lock
loopne
rcr
ror
mov
orb
and
add
dec
shlb
push
jecxz
dec
lret
sub
popf
mov
aam
add
out
loopne
divb
jo
cmp
addr16
jno
inc
stc
movsl
lahf
decl
dec
pushf
jle
dec
sarb
sub
sbb
mov
inc
lcall
int3
test
lcall
xchg
jne
clc
xor
loopne
ret
add
dec
out
ds
sub
inc
dec
mov
clc
cmp
push
test
and
mov
enter
push
test
add
sub
stos
xor
clc
stos
mov
cmp
aam
dec
mov
ljmp
not
loopne
sbb
and
sbb
push
je
dec
pusha
pop
icebp
popf
push
pop
push
push
jb
or
gs
sub
fsubrl
lods
stos
dec
sub
adcl
pop
xchg
rcl
lds
stos
repz
ja
nop
adc
fdiv
xchg
xchg
out
mov
pop
push
push
and
xchg
sub
out
out
inc
mov
adc
push
mov
loopne
pop
mul
xor
adcb
movsb
ss
inc
stos
les
jle
xor
xlat
push
out
inc
fisttpll
lcall
xchg
cmp
or
sub
cmp
mov
arpl
aad
scas
cmp
jle
sti
mov
pop
sbb
xor
mov
in
sbb
mov
mov
inc
outsl
add
jmp
in
out
loop
or
inc
movsl
sbb
icebp
aad
loop
pop
popa
shll
mov
lods
mov
mov
xor
mov
mov
push
cs
sbb
repnz
leave
shlb
idivb
mov
ror
rcrl
cmpsb
aaa
fcompl
fadd
adc
pop
mov
out
cltd
xchg
dec
push
jge
inc
and
popa
loop
scas
push
mov
in
rcr
aas
in
das
mov
jb
push
xor
sub
sbb
xor
stos
popa
mov
xor
push
inc
add
jmp
jb
fcoms
jmp
icebp
test
inc
dec
outsb
mov
cs
sub
mov
cld
dec
sbb
rcll
jl
adc
imul
mov
in
hlt
mov
dec
popa
fbstp
jp
jl
out
jle
ret
inc
inc
je
loop
cmp
je
fadds
pop
daa
rolb
clc
ret
push
or
jp
xor
negl
scas
ret
pop
add
xchg
lahf
xchg
xchg
jg
pop
cmp
bound
sub
fstl
in
clc
mov
lret
test
movsl
push
mov
inc
jecxz
mov
mov
mov
sti
cmp
test
mov
sbb
push
cmpsl
lods
push
push
stos
mov
mov
sbb
cmc
dec
loope
ds
fcompl
lock
ja
xor
mov
add
out
jp
xlat
xlat
mov
pop
mov
dec
xlat
add
and
call
add
in
xchg
push
inc
aas
push
jmp
jnp
sbb
cmpsb
in
clc
dec
outsb
add
xchg
lea
xor
dec
test
ret
adc
in
or
sbb
out
add
push
into
dec
mov
popa
je
push
idivl
mov
jecxz
adc
cmpsl
jne
int3
pop
mov
lods
jns
push
sarb
movsb
int
mov
fcoms
adc
ret
xorb
mov
pushf
push
test
pop
mov
xchg
adc
stos
test
int3
dec
jmp
pop
sbb
sub
negl
mov
enter
jmp
inc
mov
data16
sub
sbb
jecxz
sahf
mov
pop
fiadds
roll
insl
inc
fs
xchg
mov
iret
push
ret
out
popf
adcl
jmp
imul
and
and
push
enter
cltd
mov
dec
xchg
push
imul
or
scas
insl
daa
shll
je
dec
repz
push
xor
cmp
cltd
adc
rorb
fdivs
sarl
test
insb
mov
adc
sbb
push
out
dec
sbb
adc
xlat
shrl
add
mulb
iret
or
cmc
pop
es
xor
jo
push
stos
pop
ja
cmp
and
add
jbe
call
stos
mov
rorb
pop
push
not
sub
push
test
in
std
dec
mov
cmp
aad
cmp
jnp
mov
pop
sub
stc
cwtl
sbb
xchg
jae
mov
daa
cmp
mov
mov
sti
sbb
cmp
mov
adc
xchg
xchg
test
and
daa
rcl
jne
push
or
jno
sub
mov
dec
enter
stc
adc
test
popf
test
jmp
test
adc
xor
test
mov
mov
push
test
push
inc
in
stos
lds
cmp
add
xchg
out
sub
leave
rol
pop
dec
addr16
in
ss
mov
or
scas
dec
std
sbbb
setle
mov
insl
sub
jne
fbld
push
data16
mov
hlt
push
lods
int3
pushf
pushf
mov
sub
mov
pop
mov
fwait
in
inc
sub
inc
mov
sub
push
xor
sbb
out
jno
aad
cmp
cmp
subl
push
mov
mov
ss
cmpb
leave
mov
push
push
test
xchg
mov
cmp
les
fisttpl
jae
mov
incb
in
sub
mov
dec
pop
fdivr
cmpsl
in
fwait
xor
cmc
das
std
mov
ljmp
mov
loopne
push
das
test
popa
add
fisubrl
fsubrs
sbb
sti
insb
push
push
inc
mov
push
xchg
movsl
aad
repz
rolb
loopne
xchg
lahf
lret
pop
test
adcb
popf
jle
jbe
sub
push
dec
push
pop
lret
pop
fnstcw
fs
outsl
sbb
sbb
push
sbb
gs
cmpsb
dec
and
mov
fldcw
in
mov
movl
jmp
xchg
std
sub
push
and
orb
ret
ret
lcall
inc
push
pop
push
jmp
ja
fcomps
mov
mov
dec
add
mov
leave
lret
repnz
add
popf
mov
mov
ret
ja
push
add
fldcw
int
scas
int
xchg
sbb
sbb
in
mov
fadds
pop
add
add
jbe
mov
lcall
sub
mov
jg
pminub
or
movsb
mov
std
push
fldl
sub
mov
xlat
ljmp
arpl
mov
xor
inc
adc
cld
xchg
ljmp
or
push
ret
out
add
cmp
or
sub
or
cmpsb
sub
xor
imul
std
lcall
add
push
inc
int
pop
xor
mov
ret
push
push
adc
insb
movsl
add
inc
inc
nop
icebp
loop
cmpsb
sbb
fwait
gs
gs
adc
ret
cmpsb
cmp
ljmp
mov
sahf
dec
iret
jge
sbb
fs
mov
inc
push
xchg
push
mov
push
and
and
aad
xchg
arpl
pusha
adc
aaa
sub
gs
push
addb
scas
stos
mov
jle
xchg
jmp
fdivrs
jmp
subb
sub
jb
fisubrs
fcmovnbe
cmp
mov
lret
xlat
js
mov
and
mov
add
cmp
rcr
sbb
jg
shrl
or
punpckhbw
and
call
add
test
pushf
out
fdivrl
arpl
fidivrl
xor
mov
mov
mov
cmp
int3
enter
fcomi
push
cmp
inc
fidivl
xchg
sbb
mov
sub
fnstenv
bound
in
xchg
mov
mov
jecxz
and
cwtl
mov
lret
outsb
mov
cmp
xchg
pop
add
add
pop
js
filds
frstors
adc
mov
loop
push
mov
jp
xor
ret
out
es
rclb
push
xchg
pop
ss
test
fidivs
sub
pop
or
imul
xchg
push
enter
jmp
fs
mov
hlt
fbld
mov
mov
dec
dec
imul
or
sarl
stos
pop
adc
inc
jno
pop
addl
mov
out
fmull
adc
sbb
out
xrelease
pcmpeqd
das
insb
xor
xchg
mov
or
mov
mov
test
jmp
fldt
mov
mov
rol
jbe
or
and
lahf
mov
sbb
xchg
in
cmpb
pop
addr16
pop
rcr
popf
lock
push
fs
dec
or
sbb
or
hlt
sti
ja
push
or
das
fisubrs
mov
ja
pusha
ss
addr16
mov
xchg
imul
dec
mov
cmpsb
cmc
push
iret
adc
or
in
xor
push
adc
mov
jae
ret
repnz
jo
pop
mov
out
jb
inc
lret
mov
movsb
add
ljmp
dec
std
mov
ljmp
dec
pop
or
inc
push
cmp
in
cmp
sub
fisubl
rorl
push
aam
push
addb
xchg
lea
fwait
stos
stc
dec
fistpll
pop
dec
pushf
pushf
aam
push
inc
adc
shr
icebp
xchg
pop
sub
daa
cli
loopne
mov
xor
ret
or
lahf
push
push
pop
outsb
cmp
sbb
js
test
inc
cmp
jmp
pop
inc
inc
cmp
cltd
adc
mov
mov
lods
out
mov
lock
dec
sub
sub
pop
cltd
sbbb
cmc
rol
xchg
out
test
dec
nop
je
addb
push
shr
xor
push
fxch
inc
inc
cmp
shll
inc
and
inc
addr16
movsl
arpl
mov
hlt
lock
cmpsl
bound
cmp
add
stos
into
pop
jle
pop
jg
push
mov
push
lods
jle
xchg
inc
push
jns
dec
enter
stos
in
add
dec
push
mov
sahf
test
sbb
jmp
divl
push
sbb
lcall
fcmovnu
into
xchg
stos
push
mov
mov
into
sbb
mov
xchg
or
or
lret
lea
sub
push
rcrb
xor
and
sbb
adc
inc
stc
dec
imul
pop
cli
jae
or
push
stos
mov
and
stc
add
mov
sbb
fisubs
cltd
pushf
add
out
in
out
gs
push
movsb
les
call
sub
icebp
out
mov
push
jl
pop
and
ficoml
mov
add
aaa
push
rol
into
jmp
popf
jnp
inc
mov
out
pop
or
xor
shl
xchg
push
les
mov
add
call
iret
push
das
leave
push
in
loopne
inc
imul
dec
mov
call
aam
adc
pushl
mov
popa
sahf
loop
in
out
orb
insl
xchg
rcl
loop
jecxz
leave
pop
lods
xchg
stos
insb
aaa
push
fisttpl
xlat
xchg
test
outsb
jge
mov
pop
pop
lret
lea
into
clc
je
push
in
cmp
and
inc
push
and
xchg
cmpsl
notb
rcll
push
lds
loope
dec
push
pop
inc
xor
mov
dec
scas
dec
xor
sti
movsl
popa
xor
xor
adc
lcall
daa
notb
sub
add
sbb
dec
nop
xchg
jmp
pop
push
jne
cmp
cmp
in
mov
fdivrl
addr16
pop
rol
or
mov
je
subl
cmp
xchg
movsl
call
imul
jg
push
pop
xor
repz
pushf
inc
xchg
insl
jg
and
mov
mov
filds
lods
cld
cld
cmpl
insb
arpl
jecxz
test
pop
and
int
insl
lret
mov
imul
vpackssdw
dec
in
push
imul
inc
inc
xor
push
cwtl
lds
fnstsw
push
outsl
scas
and
cltd
mov
or
sbb
xchg
popa
or
mov
lahf
rcrb
jns
dec
xor
ljmp
or
sub
push
aam
stos
cmpsl
dec
sub
sarl
aad
js
loopne
sahf
mov
stos
inc
sbbb
aas
sbb
dec
stos
fsubrs
or
mov
xchg
add
jnp
sahf
jo
fnstenv
fnstenv
push
pusha
or
jbe
push
stos
fisttps
ret
mov
dec
inc
push
push
add
push
push
mov
inc
inc
cmc
sub
cmp
popa
xchg
dec
sbb
jp
aad
jo
lahf
lret
add
mov
push
xor
iret
mov
push
enter
lea
stos
sub
or
mov
rcll
mov
js
push
inc
push
sahf
mov
lods
cld
add
shr
shr
out
fildll
mov
cmc
xchg
or
roll
arpl
cmp
and
add
in
dec
cld
divb
inc
fisubrs
andl
add
mov
out
outsl
sub
mov
mov
adc
pusha
pushf
dec
mov
cmp
shrl
jns
mov
pop
inc
dec
rcll
ds
adc
enter
mov
stc
in
push
xchg
inc
es
push
sbb
inc
xchg
shrb
gs
fwait
pop
jg
pushf
push
cld
fimull
test
pop
or
cmc
dec
pop
or
adc
pcmpgtw
inc
sub
lahf
pmulhw
sbb
cmp
mov
outsb
push
xchg
xchg
lcall
cmp
ret
fcoms
cli
push
xlat
jg
add
mov
out
add
pushf
imull
gs
xchg
jbe
mov
xor
sub
dec
push
add
rorb
push
xor
shll
in
lcall
lret
fcoml
mov
repnz
hlt
cmp
mov
push
cmpsl
inc
int
xor
inc
and
lret
sti
xor
frstor
push
adc
jmp
add
lds
mov
or
sub
out
aad
mov
pop
aam
adc
dec
enter
mov
out
and
dec
lods
jmp
cmp
pop
mov
xchg
mov
and
and
adc
sub
aam
mov
add
stos
outsb
imul
leave
aad
sar
dec
fnstenv
popa
ss
mov
xchg
ret
daa
push
push
add
jge
sub
pop
insb
cmp
faddl
lock
mov
scas
inc
ss
cwtl
fsubp
sub
test
or
inc
push
repz
bound
test
inc
pop
loop
adc
pop
mov
int
outsl
icebp
dec
aas
mov
roll
addb
rolb
mov
cltd
sub
mov
inc
aam
icebp
inc
jmp
sbb
divl
aas
repnz
xor
sub
push
sbb
add
out
sbb
jge
mov
addl
push
jp
pop
xchg
scas
push
sub
lods
pop
and
sbbb
and
out
jmp
mov
jne
sub
faddl
jnp
xor
lcall
cmp
daa
shr
ljmp
xchg
and
mov
jb
in
jp
andb
icebp
xchg
pop
jae
inc
int3
cmp
fistpl
mov
scas
cmp
rcll
js
test
and
push
cmpsb
jae
sbb
mov
fidivrl
fiaddl
scas
jb
imul
push
fisttpl
mov
mov
push
loopne
flds
xor
sub
popa
idiv
into
jae
ficoml
insb
adc
insl
sub
repz
fwait
out
mov
xchg
sub
xor
cwtl
mov
sbb
jl
fmuls
inc
jnp
cs
mov
mov
add
mov
jle
jns
out
pop
inc
cmpsb
mov
scas
inc
lods
push
pop
imul
jno
test
adc
mov
dec
mov
mov
dec
adcl
jns
mov
cmp
mov
lea
aad
ror
inc
push
inc
jne
inc
push
cmp
fwait
hlt
lret
or
cmp
and
in
lds
cmc
pop
xor
mov
stos
add
sbb
lret
adc
or
mov
idivb
movsl
sbb
idivl
pop
ljmp
jp
aas
outsb
jae
shl
jbe
scas
xchg
jns
cmpsl
jno
push
loope
push
mov
mov
or
clc
mov
call
xor
push
imul
jae
les
inc
cmp
stos
cmp
and
push
inc
aad
add
jae
push
inc
ret
lods
sub
int
jae
jge
out
fistpll
mov
popf
jecxz
cmp
push
cmpsb
ja
imul
sbb
mov
jecxz
mov
mov
ret
ret
insl
mov
pop
mov
pop
test
stc
cmp
testb
bound
pop
pop
mov
clc
mov
or
jne
or
in
cmc
insl
mov
std
push
xor
pushf
jp
pop
stos
cmpsl
jge
imul
fcmovu
fbstp
jmp
xchg
xor
lret
jp,pn
inc
cld
stos
popf
sub
mov
loop
cmp
jp
push
daa
mov
push
add
adc
and
xor
or
outsb
add
into
out
jo
pop
ss
cmp
aam
mov
xorl
leave
int
sbb
add
in
leave
std
xor
negl
inc
xchg
pop
sbb
je
repnz
mov
shll
shll
push
mov
arpl
sub
sub
dec
push
lahf
push
ds
movsl
sub
pop
fiaddl
xchg
xor
divl
jmp
xchg
loope
lds
jecxz
adc
fildll
mov
add
incl
je
jns
lds
gs
loope
mov
sbb
or
add
jp
movsl
mov
jae
push
outsb
or
lock
lret
xor
leave
sar
dec
mov
js
out
xchg
xchg
mov
fcomip
mov
mov
cwtl
pop
jl
mov
fiaddl
cld
sbb
test
cmp
push
lret
jns
jg
in
mov
mov
std
and
sub
fisttps
adc
jmp
cmp
sub
int
mov
jmp
xor
leave
dec
fstpt
cmp
xchg
push
stos
test
sti
into
xchg
sub
sbb
movsb
jno
push
mov
iret
mov
lods
xchg
fsubl
outsl
push
int
iret
dec
sarb
cmp
dec
sub
adc
pushf
adc
xor
push
out
ljmp
push
fdiv
inc
int
mov
and
jg
out
lods
inc
xchg
and
sub
movsb
out
pop
mov
and
pop
xor
xchg
push
aam
cmp
rcl
add
xor
mov
pop
cmp
loop
mov
cmp
inc
int
addr16
lods
aaa
int3
jle
inc
pushf
push
xchg
sub
push
leave
out
jp
pusha
or
outsl
jae
xchg
cld
jo
pop
imul
cmp
imul
idivw
pop
adc
ret
or
push
out
push
pop
movsl
mov
mov
fdivrs
inc
scas
rcrl
movsl
or
push
imul
push
out
xchg
arpl
mov
and
scas
ffree
out
ror
cmpsl
mov
aad
mov
push
aad
imul
xor
cld
jp
pop
out
icebp
jmp
adc
jmp
movsb
jno
and
and
and
mov
les
mov
push
lahf
dec
scas
scas
in
push
jmp
ja
pop
push
xlat
dec
adc
imul
push
push
mov
fdivr
cmp
mov
push
mov
gs
pop
mov
mov
pop
sub
sbb
stos
sbb
aas
push
aas
es
push
pop
pop
call
add
gs
push
mov
std
xchg
fsubs
cmp
roll
lds
ja
mov
adc
mov
push
out
mov
xchg
stc
lock
loope
cmp
mov
ss
es
adc
sub
in
ret
xor
fldt
or
mov
bound
leave
test
sub
fxch
adc
popf
xorb
cmp
sub
lret
add
xor
add
ret
in
adc
add
pop
and
fiadds
ret
adc
movsb
and
push
loope
dec
inc
mov
inc
shl
stos
cmpsb
mov
insl
push
add
cs
xor
and
adc
add
lock
loopne
rcr
ror
mov
orb
pop
inc
dec
xor
and
adc
add
lock
loopne
rcr
ror
mov
orb
inc
inc
dec
xor
and
sbb
or
stc
loopne
rcr
rol
mov
subl
inc
or
cmp
sub
cwtl
add
lock
loopne
jp
sarb
loopne
lock
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
call
push
push
pushl
push
push
call
call
mov
leave
ret
cmp
xchg
sbb
loopne
cmpsb
test
add
add
add
add
push
add
add
add
or
add
addl
lea
addl
popf
add
movsl
add
add
add
stos
add
add
add
add
add
add
add
add
enter
inc
add
add
add
jae
pop
add
mov
in
pop
add
add
add
enter
sub
add
or
push
add
add
insb
add
pop
add
add
add
add
add
add
add
add
add
add
or
add
add
movsl
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
mov
jns
add
stos
add
add
add
push
add
add
add
add
mov
push
inc
add
add
add
add
mov
lods
add
xchg
add
add
or
add
add
add
add
add
add
add
and
out
add
popa
add
add
rolb
add
mov
add
sbb
fiadds
add
add
sbb
pop
add
push
add
sbb
jge
aad
daa
add
pop
add
fiaddl
pop
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
roll
add
add
popa
add
add
add
add
mov
fadds
aaa
add
add
add
add
add
add
add
dec
add
add
add
xchg
add
add
add
add
add
inc
add
add
rolb
add
jb
addl
addl
adc
add
add
jns
sub
mov
add
lds
mov
mov
add
xchg
add
add
add
add
add
into
add
add
add
add
add
add
dec
add
add
mov
add
cmp
pop
add
add
add
add
add
aam
inc
add
add
or
add
and
adc
add
add
add
add
add
add
add
and
cmp
jnp
addl
roll
add
add
add
add
adc
xor
or
scas
add
add
lock
add
add
add
lock
add
mov
push
add
add
add
add
add
add
inc
add
add
icebp
add
add
jge
jo
scas
add
add
add
pop
add
jae
xor
sub
or
add
add
jge
push
add
add
add
add
add
add
add
and
xchg
add
add
add
add
add
add
stos
add
add
add
add
add
movsl
add
rolb
push
add
add
add
add
add
add
add
add
add
add
roll
roll
add
in
add
add
add
push
add
add
xchg
add
add
dec
add
sbb
mov
add
jnp
popf
add
add
inc
add
add
add
fildl
int
outsb
xchg
je
mov
loop
dec
fistpll
mov
mov
fldcw
cli
stc
gs
loop
cli
cmp
cmpsb
inc
mov
es
dec
rorb
sub
movsb
loope
pop
clc
and
enter
push
xchg
xchg
mov
xor
outsl
jecxz
pop
popf
cmp
xor
dec
jbe
mov
div
push
sti
mov
inc
cmpsl
push
lcall
xor
outsb
and
insl
aam
loopne
bound
fsubl
test
cmp
push
jecxz
push
adc
jmp
pusha
xchg
mov
popf
mov
mov
inc
cmp
mov
add
aam
xchg
aaa
ss
jmp
sbb
sbb
and
and
jmp
stos
cwtl
mov
push
pop
or
push
mov
ja
xchg
jg
data16
dec
jg
int
cmp
test
mov
adc
call
xor
inc
dec
sahf
icebp
outsl
nop
xchg
and
shl
loop
or
cmc
jo
int
ja
aas
in
jns
jnp
adc
dec
mov
mov
ret
es
ficoml
pop
adc
lahf
sarl
mov
fcomi
sbb
shll
out
imul
int3
xchg
mov
jae
mov
ja
add
cmc
dec
dec
add
mov
push
or
mov
push
mov
dec
flds
negb
push
jmp
sbb
scas
adc
fldcw
mov
call
mov
mov
nop
inc
inc
xchg
arpl
rcrw
adcb
jne
jge
shlb
dec
mov
inc
fldcw
cwtl
lcall
or
or
faddl
repnz
repnz
push
jecxz
xor
test
jl
dec
push
dec
mov
ljmp
pusha
push
pusha
rolb
adc
js
ljmp
stos
or
mov
jmp
rclb
ja
mov
or
mov
pop
or
pop
cmp
inc
push
sub
inc
lahf
sbb
test
rcl
xchg
sub
mov
lods
mull
outsb
cmp
insl
jbe
in
jle
divl
fwait
sbb
aam
add
insb
inc
scas
mov
imul
xchg
not
xlat
jno
lahf
fists
jmp
hlt
pop
sti
sub
inc
push
imul
jo
lcall
hlt
sti
fisubs
loopne
and
test
push
pop
mov
test
ret
xor
push
lods
movsl
ret
ret
aam
inc
pop
loop
push
push
lahf
test
and
dec
xchg
aaa
push
push
test
xorl
in
lcall
mov
sbb
mov
and
cmp
add
add
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
cmp
add
pusha
repnz
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
fcomip
add
int3
repnz
repnz
mov
repnz
lods
repnz
movsb
repnz
pushf
repnz
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
repnz
add
add
or
add
and
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cwtl
repz
mov
repz
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xor
add
cmp
add
inc
hlt
add
dec
hlt
add
push
hlt
add
pop
hlt
add
fs
add
ja
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
hlt
add
cwtl
hlt
add
test
add
mov
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
loopne
add
or
add
xor
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
scas
pop
add
pushf
pop
add
xchg
pop
add
mov
add
test
add
jl
add
je
add
insb
pop
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
rclb
add
fcoml
add
lock
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
push
sbb
add
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
inc
sbb
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pusha
sbb
add
add
js
add
mov
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
