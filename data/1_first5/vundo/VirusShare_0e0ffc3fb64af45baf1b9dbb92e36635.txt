and
add
or
mov
add
mov
xor
shl
mov
mov
push
lea
rol
xor
add
rol
mov
jmp
rol
inc
add
add
mov
sub
jmp
add
jmp
add
add
insb
and
sub
or
mov
and
sub
mov
add
xor
dec
mov
ror
mov
jmp
es
repnz
jmp
call
jmp
subl
push
push
jmp
leave
call
nop
call
inc
pop
xorl
jmp
jne
cmpb
jne
nop
jmp
fistl
push
sub
test
jne
ror
and
rol
mov
movzbl
jmp
push
push
jmp
ret
notl
and
push
nop
jmp
pushl
jmp
ror
mov
mov
xor
jmp
test
jne
push
jmp
push
nop
xorl
call
or
add
mov
push
jmp
push
inc
shr
ror
ror
dec
mov
sub
shr
test
lea
jle
inc
sub
or
add
mov
mov
jmp
jmp
call
push
jmp
jmp
call
int3
leave
call
pop
xorl
call
lea
jmp
push
or
test
jne
push
jmp
call
call
push
call
addl
pushl
jmp
push
call
test
jne
push
call
add
ret
add
add
add
inc
ror
shl
or
mov
jmp
push
mov
mov
mov
add
add
mov
jmp
lea
nop
movzwl
nop
nop
nop
nop
nop
shr
sub
dec
inc
xor
mov
and
cmp
jne
and
add
add
add
add
jmp
call
pushl
jmp
mov
lea
jmp
xor
cmp
mov
mov
jle
jmp
ror
inc
mov
or
mov
mov
jmp
jmp
jmp
ret
jmp
movsbl
rol
add
jmp
add
imul
call
out
mov
and
mov
sub
cmpl
lea
je
push
jmp
jne
rol
dec
ror
mov
xor
mov
mov
xor
and
cmp
sete
mov
ret
add
add
add
or
jmp
sub
rol
xor
mov
add
add
jmp
movl
jle
add
jmp
mov
sub
and
mov
jmp
add
push
and
xor
mov
sub
mov
push
push
push
push
jmp
push
dec
pop
call
xorl
jmp
push
push
lea
sub
add
add
inc
and
mov
add
jmp
aad
cmp
add
jmp
cmp
je
jmp
lea
xor
mov
sub
cmpw
jmp
push
call
mov
sub
xor
sub
sub
mov
jmp
call
lea
addl
call
mov
shr
shr
mov
mov
add
or
mov
mov
test
jmp
sub
test
jne
movzbl
add
jmp
sub
jne
add
cmpl
jne
nop
nop
nop
nop
nop
pop
pop
pop
mov
pop
ret
jmp
add
jmp
add
mov
test
je
push
push
mov
jmp
mov
add
add
push
mov
mov
mov
mov
mov
inc
mov
add
and
mov
jmp
test
jne
mov
shl
mov
movzbl
add
mov
nop
nop
nop
nop
nop
lea
ror
and
and
sub
mov
shr
jmp
ror
mov
jmp
add
add
push
mov
or
mov
test
je
mov
add
cmpl
je
push
jmp
test
push
mov
movl
mov
jne
xor
jmp
call
mov
rol
rol
mov
movzwl
movzwl
add
and
rol
dec
mov
jmp
add
sub
jmp
sub
mov
jmp
add
add
push
inc
xor
xor
mov
sub
push
push
and
add
mov
jmp
movb
call
cmp
push
jae
call
push
jmp
int3
addl
push
jmp
subl
jmp
push
push
call
jmp
call
add
pusha
mov
call
popa
jmp
mov
ret
add
add
add
test
add
add
loopne
sar
mov
or
mov
test
jmp
push
push
jmp
add
add
in
call
sub
mov
push
mov
movl
mov
push
jmp
push
jmp
jmp
call
int3
jmp
inc
addl
call
ret
add
add
add
test
add
add
nop
nop
nop
ret
and
shl
shr
mov
mov
sub
mov
mov
add
sub
mov
test
jne
add
jmp
jne
sub
add
or
mov
mov
rol
mov
lea
mov
add
and
shl
add
mov
jmp
mov
icebp
ret
rol
xor
shr
or
or
mov
mov
ror
mov
shr
lea
lea
jmp
and
rorb
ret
add
add
mov
add
add
mov
push
jmp
cltd
and
add
sar
test
jle
sub
mov
and
or
shr
mov
inc
mov
test
jmp
add
add
and
movb
jmp
add
mov
lea
xor
sub
mov
shr
jmp
lea
sub
test
mov
mov
mov
jmp
cmp
jmp
test
jmp
add
jmp
lea
jmp
add
push
jmp
push
subl
push
jmp
pop
call
int3
push
leave
call
int3
addl
push
jmp
jmp
call
push
pop
push
push
addl
call
test
je
add
ret
mov
jmp
pop
add
pop
add
add
mov
call
cmpl
jmp
mov
or
add
mov
push
mov
mov
movl
movl
jmp
add
add
add
stos
inc
add
sub
mov
push
jmp
call
call
leave
call
call
leave
call
push
addl
call
mov
jmp
sub
and
mov
shr
and
add
test
je
jmp
mov
add
jne
add
ret
mov
xor
test
je
jmp
mov
rol
rol
or
xor
mov
jmp
pop
mov
pop
ret
mov
ret
add
add
add
movsl
add
add
adc
xchg
add
add
mov
add
add
loope
cs
mov
sub
sub
jmp
and
add
test
jne
mov
mov
pop
ret
add
add
add
ret
rolb
rol
mov
sub
test
mov
jne
movzbl
nop
nop
nop
nop
nop
add
rol
mov
mov
mov
and
mov
shr
and
add
jmp
xor
mov
test
jne
cmp
jmp
jmp
or
push
push
call
jmp
push
xor
mov
mov
lea
push
push
jmp
leave
ret
call
leave
leave
push
leave
leave
addl
jmp
je
add
cmp
jl
pop
xor
pop
xor
mov
pop
jmp
mov
mov
add
or
sub
dec
mov
mov
mov
xor
mov
rep
movzwl
sub
or
mov
jmp
add
mov
dec
mov
add
test
jne
jmp
cld
cmp
jne
sub
jmp
mov
into
test
mov
je
shl
ror
dec
mov
sub
test
jne
movzbl
add
nop
nop
nop
nop
nop
mov
lea
xor
mov
jmp
ret
add
mov
movzwl
xor
add
add
mov
mov
pop
jmp
add
cmpl
jne
pop
pop
pop
mov
pop
ret
add
add
add
cmp
rorb
mov
add
add
addb
add
xlat
push
jmp
push
int3
call
pop
leave
addl
mov
call
push
jmp
call
push
call
pop
call
dec
xorl
jmp
cmc
dec
insb
shr
and
add
test
je
jmp
add
pop
and
shl
shr
sub
mov
mov
pop
ret
add
add
add
add
mov
mov
jmp
aas
xorl
or
cmp
jge
add
sub
jne
jmp
cmp
add
call
push
jmp
leave
call
push
call
pop
ret
subl
mov
call
jmp
adc
std
mov
rol
mov
mov
mov
push
mov
push
add
jmp
test
mov
jle
jmp
push
jmp
xorl
mov
call
add
mov
movb
movb
jmp
xor
movl
ror
or
add
inc
mov
sub
test
jne
movzbl
add
lea
nop
nop
nop
nop
nop
and
and
rol
mov
mov
jmp
sub
add
sub
sub
rol
mov
call
add
mov
sub
add
inc
mov
call
push
jmp
dec
inc
call
push
call
ret
subl
push
jmp
push
call
push
push
call
dec
xorl
jmp
rol
roll
shlb
loop
shr
mov
jmp
movb
call
cmp
jmp
inc
aad
shr
and
add
jmp
xchg
iret
inc
push
call
inc
mov
mov
call
ror
mov
call
movl
lea
jmp
popf
into
mov
push
add
add
adc
push
jmp
call
call
call
jmp
ret
int3
xorl
jmp
test
and
add
int3
incl
call
mov
shl
xor
mov
or
xor
and
and
mov
jmp
jno
cmp
enter
push
sub
pop
push
fildll
jmp
inc
addl
call
push
jmp
push
call
inc
subl
call
lea
jmp
std
out
je
sbb
test
cmp
test
mov
mov
cmp
jne
jmp
push
push
test
enter
jmp
stc
clc
leave
push
call
test
push
jne
jmp
xorl
mov
sub
mov
mov
jmp
sub
xor
pop
mov
jmp
fcmovnb
and
or
sub
dec
mov
xor
add
jmp
fimull
call
jmp
dec
dec
jb
roll
mov
add
add
jmp
movzbl
dec
and
mov
shr
shr
mov
and
jmp
xor
lcall
add
add
in
in
ret
add
add
add
out
lcall
pop
rol
mov
pop
ret
add
add
add
jmp
jmp
dec
xorl
nop
nop
nop
nop
nop
push
jmp
call
push
call
dec
xorl
call
test
je
jmp
xchg
jg
add
add
shr
mov
mov
je
test
je
jmp
mov
pop
ret
pop
pop
mov
pop
rol
xor
mov
pop
ret
add
add
add
shlb
mov
sub
add
nop
nop
nop
nop
nop
sub
mov
mov
jne
ror
rol
xor
mov
mov
mov
movl
jmp
nop
nop
nop
nop
nop
movl
mov
movl
jmp
lea
call
nop
nop
nop
nop
nop
cmpl
nop
nop
nop
nop
nop
jne
cmp
jne
nop
nop
nop
nop
nop
call
jmp
mov
je
ror
and
mov
nop
nop
nop
nop
nop
sub
add
sub
mov
mov
jne
mov
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
sub
jmp
nop
nop
nop
nop
nop
sub
nop
nop
nop
nop
nop
ror
rol
mov
nop
nop
nop
nop
nop
movzbl
shl
add
nop
nop
nop
nop
nop
add
lea
shr
and
shl
mov
ror
mov
mov
call
cmp
jb
nop
nop
nop
nop
nop
add
cmp
jb
add
cmp
jae
add
test
mov
nop
nop
nop
nop
nop
je
nop
nop
nop
nop
nop
lea
add
mov
sub
mov
mov
add
sub
jne
mov
nop
nop
nop
nop
nop
mov
rol
mov
ror
mov
add
rol
shl
mov
ror
mov
movl
nop
nop
nop
nop
nop
jmp
mov
mov
add
add
mov
movl
mov
nop
nop
nop
nop
nop
cmpl
je
pop
nop
nop
nop
nop
nop
dec
dec
dec
inc
inc
mov
sub
pop
pop
or
and
mov
pop
ret
add
push
popa
add
inc
popa
add
es
add
xor
add
add
add
pusha
add
out
pusha
add
add
add
add
add
pusha
add
push
popa
add
inc
popa
add
es
add
xor
add
add
add
pusha
add
out
pusha
add
add
add
add
add
pusha
add
add
add
add
inc
insb
outsl
jae
inc
jb
jbe
jb
or
dec
jo
outsb
inc
jb
jbe
jb
add
add
push
popa
je
push
gs
outsl
jbe
inc
popa
arpl
insb
popa
jae
inc
add
imul
push
gs
outsl
jbe
inc
jb
jae
add
add
je
inc
imul
inc
outsl
insl
jo
outsb
outsb
je
add
push
add
gs
je
inc
imul
js
je
jb
arpl
jae
mov
je
push
add
filds
inc
gs
imul
je
adc
add
add
add
add
xor
add
add
add
into
test
add
add
sbb
add
add
add
xor
aaa
shll
mov
movsb
sarl
aas
add
inc
xor
push
ss
cmp
sarl
in
cmp
cmp
cmp
pop
cmp
cmp
int3
fnstcw
movsl
aas
idivb
aaa
cmp
in
xor
inc
xor
xor
cmp
xor
je
cmpb
cmp
add
add
add
xor
xor
xor
add
add
add
add
and
scas
push
nop
dec
icebp
icebp
mov
fstpt
or
cltd
and
or
fidivs
mov
pop
jge
cmp
cld
xchg
cmc
inc
cmp
or
scas
xor
lcall
adc
negb
dec
adc
inc
inc
data16
xor
mulb
xchg
popf
loope
pop
fidivl
jb
dec
sub
jle
cltd
aad
xorb
addr16
mov
fmull
dec
popa
ljmp
popa
int
push
popf
pushf
push
jb
out
lock
ja
xlat
call
leave
adc
xor
hlt
aad
lahf
aam
pop
jle
iret
xor
hlt
int3
iret
rcll
jne
fstps
sub
xchg
push
add
popa
lea
cmp
sbbb
jo
fisubl
mov
imul
push
das
addr16
rclb
jbe
push
mov
mov
push
inc
rcr
sub
or
lds
cmp
jbe
rol
leave
int
aam
push
and
mov
push
adc
rorl
das
icebp
adc
fwait
loope
jle
test
cmpsl
xchg
mov
mov
rcll
cmp
rcr
insb
mov
xor
movsl
loop
fwait
mov
cmp
inc
mov
js
arpl
insl
ds
loopne
adc
cmp
insl
push
jecxz
sub
ret
inc
pop
test
adc
sbb
popa
leave
vcvttsd2si
repz
mov
mov
mov
js
dec
sarb
inc
inc
sub
cmpsl
push
xchg
xchg
stos
pop
push
cmc
lret
lahf
mov
dec
push
cltd
int
or
cmpsb
push
xor
lret
mov
add
add
lods
iret
aad
lret
fcomps
daa
pop
inc
jl
sar
mov
cmpsb
xchg
dec
sub
pusha
fidivs
jmp
lahf
in
lahf
adc
dec
shll
add
das
mov
jae
inc
inc
mov
iret
shll
gs
sub
pop
lods
mov
leave
shrb
or
fistpl
mov
adc
push
shl
jno
dec
js
xchg
sub
dec
aaa
mov
cmc
filds
movsl
idivb
imul
adc
outsb
cmp
hlt
pop
bound
mul
xchg
xor
ret
mov
xor
out
jne
add
sahf
push
adc
enter
sub
mov
int
sahf
fiadds
lcall
push
pop
mov
sub
mov
dec
xor
pusha
cmp
fiadds
cwtl
inc
mov
sub
das
jae
push
jle
sbb
add
inc
and
sub
mov
push
fdivrl
xchg
xor
movsb
nop
aad
push
cld
xorb
pop
imul
and
jge
ljmp
mov
cli
mov
jne
fcoml
pop
inc
pop
andl
add
lods
sbb
imull
mov
push
mov
pop
or
pop
fsubr
ja
jmp
imul
or
filds
mov
aad
movsb
mov
sub
adc
aam
adc
sbb
pusha
lret
pop
das
inc
push
sub
test
int3
or
dec
addb
aad
mov
and
cmp
test
out
mov
test
adc
mov
in
data16
repz
mov
sub
push
add
nop
or
push
sbb
aaa
ds
push
jb
repnz
int3
or
jp
in
push
xchg
adc
push
add
mov
cmp
fistpll
pop
inc
fnstsw
cmpsb
popa
sbb
js
dec
ja
sbb
push
push
inc
les
pavgw
add
pushl
mov
mov
and
add
std
lea
imul
mov
aas
clc
repnz
lods
rol
add
testb
mov
dec
xor
into
std
lret
out
gs
les
fisubrs
ss
mov
test
ss
decl
mov
mov
xchg
jg
mov
inc
scas
rclb
das
push
sti
je
fsqrt
adc
xor
or
call
sub
ds
nop
inc
ds
jmp
cld
in
mov
pop
out
outsl
push
movsb
lods
add
lret
sahf
pushf
inc
int3
lods
pusha
xor
pop
and
mov
inc
push
pop
add
call
popa
gs
push
mov
push
or
fcompl
aam
jnp
xchg
cmpsl
xchg
sub
loope
and
xor
lahf
jae
jbe
enter
and
es
inc
data16
mov
pop
mov
dec
pop
fs
adc
cltd
sbb
arpl
add
cmp
cwtl
orl
lds
sbb
or
cmp
mov
sbb
xor
loope
xor
ja
lcall
loope
stc
add
.byte
