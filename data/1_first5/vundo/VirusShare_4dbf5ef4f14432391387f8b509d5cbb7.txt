jmp
jle
sub
mov
sbb
xor
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
jmp
mov
and
inc
push
nop
mov
lret
push
jmp
cmpsl
push
std
repnz
sar
ds
in
mov
mov
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
aad
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
pop
jmp
pop
jmp
lods
jne
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shr
ss
movsb
or
push
das
cmp
sbb
inc
out
lods
adc
add
daa
jns
pop
jmp
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
mov
mull
xchg
ror
jmp
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
cs
pop
cmp
push
add
push
hlt
jmp
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
jmp
lahf
in
mov
mov
test
xor
imul
jmp
xchg
jmp
sahf
jg
xchg
stos
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
jmp
mov
es
mov
cmpb
jnp
jmp
jmp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
jmp
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
add
sub
jb
inc
jns
pop
insb
xor
xchg
pop
add
sub
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
jmp
adc
mov
int
xchg
ror
into
out
jmp
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
jmp
cs
pop
jmp
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
jmp
std
jmp
repnz
sar
lahf
in
mov
mov
jmp
test
xor
imul
stos
or
push
and
fstps
add
jne
jmp
dec
add
jmp
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
jmp
popa
xchg
popf
adc
loopne
pop
aas
or
push
out
pop
clc
shll
aaa
movsb
or
adc
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
jmp
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
ret
jmp
shlb
int3
adc
div
fs
int
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
jmp
les
xor
cmp
jmp
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
mov
sub
push
jmp
icebp
push
and
push
xor
mov
mov
mov
xor
sub
or
and
sub
or
add
xor
sub
and
add
ror
or
rol
and
dec
jne
mov
mov
push
add
pop
jmp
jecxz
cltd
pop
aas
or
xor
jmp
push
add
pop
xor
leave
ret
push
mov
sub
push
push
xor
mov
mov
mov
sub
or
or
xor
or
sub
or
lea
and
or
add
and
and
lea
and
dec
jne
mov
mov
mov
jmp
in
mov
cmp
jmp
dec
mov
test
les
add
add
mov
add
add
sub
leave
ret
push
mov
sub
sub
jmp
sbb
cli
stos
or
sbb
jmp
fstl
and
sahf
jg
xchg
stos
pop
sub
push
xor
mov
mov
mov
or
rol
add
lea
xor
xor
sub
xor
ror
push
orl
mov
roll
add
roll
pop
push
subb
push
and
pop
andl
add
rolb
pop
and
dec
jne
mov
mov
mov
jmp
pop
mov
es
add
jmp
mov
pop
lods
add
mov
addb
add
andl
mov
add
leave
ret
push
mov
sub
push
jmp
pop
gs
dec
loope
adc
sub
orl
xchg
rolb
mov
xor
mov
mov
mov
sub
xor
push
roll
add
rorl
add
sub
add
inc
and
or
and
add
sub
shr
sub
or
or
or
lea
add
and
and
dec
jne
mov
mov
pop
xchg
rolb
mov
roll
add
add
leave
ret
call
data16
dec
pusha
cmp
outsb
sub
pushf
mov
sahf
inc
mov
aam
sar
and
sub
push
outsl
adc
pop
orl
test
inc
and
jnp
adc
sub
push
and
mov
or
in
cs
jne
shrb
fldt
push
lret
mov
mov
fbld
or
pop
push
adc
jge
mov
lret
jns
mov
mov
ja
mov
cmp
push
notl
ret
xor
cmp
xchg
mov
loop
ljmp
push
push
inc
stos
add
pop
sub
jo
xor
jbe
lahf
cmp
cmc
inc
mov
inc
cmpsl
in
pop
aaa
lahf
out
pop
inc
filds
sub
fcmovne
or
mov
popa
pop
xchg
mov
sti
sbb
arpl
lret
mov
xor
pop
jb
cmp
jge
shr
mov
jne
or
xor
inc
popl
movsb
out
out
insb
cmp
pushw
add
pop
jno
gs
pop
push
inc
idivl
ror
sub
mov
das
pop
ror
lcall
dec
push
popa
inc
lea
popf
push
mov
jb
xchg
adc
cli
sbb
adc
mov
out
sub
insl
loop
xor
inc
push
mov
ret
mov
adc
gs
int
dec
ja
les
pop
xor
push
aad
add
fldenv
icebp
out
sahf
xor
clc
cmpb
aam
loopne
add
push
cld
adc
jge
enter
xchg
jl
xchg
cltd
cmp
repz
lock
mov
pop
inc
dec
les
out
js
jnp
cmp
mov
mov
aas
lret
lret
insl
dec
pusha
push
or
data16
mov
test
aad
jb
mov
std
or
sbb
inc
xchg
mov
mov
out
add
sbb
or
mov
inc
popf
cltd
push
xchg
shrb
out
push
jne
loope
pop
xor
out
sbb
mov
mov
bound
cs
lea
cmp
rclb
imul
jb
inc
xchg
pop
or
divl
sub
sub
cmp
mov
pop
fidivrl
in
cmp
out
cs
dec
mov
insl
xchg
ret
pop
xchg
sbb
mov
negl
sbb
jo
inc
jg
loope
jbe
pop
ja
leave
std
pop
pop
das
mov
xchg
clc
loopne
jg
or
out
push
cmp
enter
sbb
sub
fsubr
idivb
mov
sbb
adc
and
mov
insl
push
and
jecxz
mov
insl
std
ffree
roll
cmpsl
cwtl
iret
or
bound
testl
lcall
and
adc
test
ficomps
imul
xchg
cmpb
xchg
cli
scas
mov
int3
lret
lcall
mov
sarb
inc
add
bound
out
aaa
mov
mov
jo
mov
mov
cmpsb
pop
mov
cmp
add
out
dec
mov
xor
sbb
mov
and
inc
xor
stc
xchg
sbb
jecxz
mov
cmp
das
pop
pop
xor
adc
js
mov
bound
sarb
out
cltd
sar
adc
stos
adc
andl
shl
jb
and
shll
lret
imul
mov
xor
lds
dec
or
repz
sbb
push
mov
jge
loopne
pop
dec
sub
dec
pop
loopne
lods
mov
fisubs
xchg
or
pushf
js
cmp
mov
fwait
sbb
and
loopne
popa
fcoml
repz
std
mov
sbb
adc
xchg
sahf
adc
pop
cmp
ret
mov
xchg
paddusb
scas
adc
cmp
pop
mov
mov
xor
aas
mov
inc
arpl
pop
mov
dec
mov
xchg
ljmp
adc
jb
dec
ss
in
aas
lret
lcall
fisttpl
push
xchg
sbb
pop
inc
scas
xor
adc
sub
mov
out
jae
or
add
sub
int3
movsb
cmp
nop
mov
mov
jnp
in
cmpsl
push
idiv
cmp
cltd
leave
mov
sbb
sarl
in
cmp
out
or
sarb
daa
sahf
int
movsl
cltd
div
pop
insl
push
outsl
pushf
push
mov
pop
lods
xchg
fs
sbb
adc
sbb
scas
jnp
ud1
ret
lea
popf
push
cli
push
test
jmp
aam
cmp
adc
js
push
outsb
adc
xchg
loop
shrb
shrl
pop
push
cmp
gs
dec
push
mov
jmp
out
jmp
push
push
xor
mov
pcmpgtd
pushf
ljmp
rcll
pop
and
shll
sbb
push
int
xchg
adcl
push
fbstp
jnp
mov
int
push
je
add
inc
sbbb
arpl
cs
into
scas
jbe
test
call
pop
cltd
loop
sbb
mov
dec
outsl
sbb
cmpsb
mov
popa
aas
push
popa
popf
sbb
sub
dec
mov
dec
insl
mov
lock
lcall
inc
movsl
adc
loop
mov
ds
inc
xorb
popa
xchg
popf
test
ja
and
add
call
cwtl
call
nop
fldcw
or
movsl
mov
cs
jae
les
push
aam
mov
cli
lock
dec
push
loop
lahf
push
data16
div
ljmp
sbb
fld
sahf
pop
push
cmp
mov
add
fldenv
repz
xor
mov
cmpb
add
insl
jmp
mov
mov
mov
outsl
int
push
mov
stos
inc
cmpsb
ret
out
or
mov
push
push
xor
adc
mov
jmp
xchg
mov
stc
or
mov
inc
pop
lea
pusha
mov
inc
in
push
out
cmp
gs
jg
popf
mov
enter
bound
adc
cmp
mov
xchg
jmp
les
in
or
iret
daa
inc
xor
pop
add
sub
pop
mov
out
push
adc
fdivrl
fisubrl
cmp
fistpll
push
fbstp
jnp
mov
int
js
test
and
faddp
leave
mov
cmp
rorb
push
dec
dec
nop
mov
mov
fwait
scas
addr16
mov
jns
dec
or
mov
dec
jae
lahf
xor
lods
testl
repz
xlat
jp
div
pop
sbb
and
les
sub
adc
adc
pop
sbb
lret
xor
sub
loope
arpl
ljmpw
pop
mov
adc
jne
cmp
ljmp
xchg
pop
mov
pusha
mov
inc
fcoml
cmp
xor
fisubrl
jb
pop
out
jb
inc
loopne
mov
inc
or
out
cmp
out
cmp
cs
int
adc
mov
jo
dec
addr16
inc
push
add
jae
mov
jns
jg
xor
mov
lahf
fidivrl
inc
push
push
lret
mov
movsb
mov
push
lods
inc
test
jno
push
xchg
inc
out
cltd
xchg
leave
mov
or
inc
push
movsb
mov
jmp
popl
stc
icebp
popa
fidivl
dec
jns
push
imul
cmp
jae
jl
inc
push
push
enter
test
call
mov
rclb
jae
and
subb
adc
xchg
cmp
and
mov
scas
test
scas
scas
or
ret
addb
test
test
es
cs
xchg
sub
addb
cmpsl
aaa
pop
pop
shrl
mov
lods
stos
insb
pop
pop
movsb
xchg
out
xchg
faddl
jg
and
out
push
jp
and
sbb
or
push
mov
cltd
and
lea
lds
scas
notl
pop
addl
and
add
lcall
sbb
mov
stos
gs
inc
cmpl
out
and
add
loopne
push
mov
popf
cmp
imul
sbb
jge
je
test
cmp
sbb
fcomi
frstpm(287
mov
out
dec
sarb
cs
push
out
cmp
jno
gs
bnd
xlat
sti
rorl
push
cmp
xlat
sub
into
push
sub
push
mov
push
mov
pop
test
xor
xchg
dec
hlt
lock
into
add
inc
ret
enter
push
in
loop
ficoms
bound
pop
mov
cld
orl
sets
or
iret
cmp
getsec
add
lea
or
cmp
jae
popa
mov
sub
mov
outsl
push
sbb
lcall
popa
fadd
dec
pop
inc
jne
incl
movlps
mov
mov
pop
aas
xchg
pop
test
in
mov
inc
pop
loopne,pn
jle
xchg
std
stos
lret
mov
and
es
inc
cld
push
push
pushf
repnz
fdiv
mov
stos
dec
jmp
or
out
cmpsl
xorl
mov
pop
mov
insl
std
push
xchg
aaa
jmp
mov
pop
push
mov
es
push
add
inc
enter
cli
jnp
test
iret
leave
repnz
jg
or
icebp
decl
cltd
xchg
gs
and
adc
scas
dec
inc
and
xor
pushf
jge
cld
adc
jb
enter
lock
lret
lcall
sbb
rcll
xchg
loope
sbb
lret
dec
fs
pop
stos
inc
adc
xor
imul
jns
in
or
iret
repz
mov
rorb
inc
jg
cmpl
lcall
aaa
cmp
push
popa
test
lock
lret
or
repnz
inc
fcmove
imul
pop
xor
arpl
loop
ss
subl
xor
dec
pop
pusha
iret
adc
idivl
jecxz
rep
ljmp
sub
dec
into
test
ds
and
out
cwtl
outsb
xor
inc
sbb
jg
cmp
push
inc
jl
cmp
sub
mov
into
jae
fstpl
and
push
cmp
jb
cmp
enter
js
leave
test
sahf
and
add
int3
xor
in
out
cmp
fsub
out
cmp
out
pop
mov
mov
stos
fisubs
shl
out
dec
lods
mov
sbbb
outsl
scas
shlb
test
mov
stos
lss
dec
cmc
dec
std
push
lcall
or
cmp
and
cmp
nopl
inc
fldenv
jmp
rolb
leave
pop
xchg
or
and
ja
mov
sahf
out
out
loop
jno
inc
loop
adc
dec
ret
mov
sub
dec
in
and
aaa
cmp
pop
xor
sarl
or
or
in
mov
lea
pop
inc
sub
rolb
jle
out
out
imul
adc
dec
mov
xor
jo
loopne
iret
or
mov
popf
push
lods
loopne
sub
addr16
cli
add
pop
mov
push
cltd
and
or
mov
cmp
in
out
cmp
shl
out
and
cmp
jns
mov
into
and
mov
push
ret
cltd
pusha
aad
loopne
fiaddl
das
rol
mov
or
int
jns
jge
sbb
iret
loopne
mov
aaa
mov
mov
mov
sub
fisubs
cs
jge
sbb
loope
jno
mov
pop
cmp
mov
lret
sbb
jb
fcoms
popa
xchg
cmp
inc
test
hlt
adc
rdtsc
xor
sub
sahf
pop
and
into
test
out
sub
mov
mov
mov
xchg
pop
adc
insb
test
inc
push
out
mul
imul
mov
into
jae
inc
xor
out
jnp
cmp
mov
cwtl
jg
out
loopne
adc
jns
xchg
enter
mov
jnp
fs
mov
popl
cmp
orl
jne
adc
inc
jecxz
inc
in
mov
out
out
dec
std
dec
xchg
xorl
adc
sti
inc
mov
enter
push
push
divl
jg
shlb
mov
or
xlat
lea
mov
cmp
jecxz
data16
mov
jl
mov
and
mov
sbb
inc
jg
rcrb
cmc
lea
mov
sub
test
scas
mov
sti
test
imul
dec
cli
icebp
rcl
loopne
cli
lods
and
jp
lock
pop
mov
jne
xor
cmp
sub
rcrb
jo
dec
mov
cmp
lret
outsb
fmull
mov
xlat
bound
les
roll
mov
loopne
push
lret
movsb
mov
inc
testb
push
cmp
scas
pushf
ljmp
push
imul
add
ds
cmp
pop
popf
out
imul
fbld
gs
pushf
lret
iret
mov
pop
movsb
fimuls
push
popa
je
decl
jmp
sbb
dec
ja
pop
dec
mov
cli
dec
cmpsl
jae
daa
fninit
aad
sbb
scas
or
push
mov
mov
add
ljmp
push
push
lods
cmp
xchg
test
sbb
mov
mov
sub
imul
mov
sub
icebp
repnz
movsl
cmp
cmpsl
bound
sbbl
pusha
mov
cmp
or
popf
cmp
ret
dec
lods
bound
sub
mov
fwait
and
pop
jne
xor
out
adc
dec
adc
test
outsl
jbe
sub
nop
mov
ja
inc
rcll
arpl
hlt
loop
call
cmp
and
pop
and
ds
jae
ja
pop
lods
repz
popf
lock
sbb
shr
les
pmaddwd
nop
jae
ja
xor
lods
int3
aaa
mov
std
sub
sub
imul
lret
cltd
int
mov
test
leave
pop
mov
jne
insb
dec
in
pusha
popf
mov
icebp
sub
icebp
add
clc
into
and
lcall
jbe
movsl
mov
cwtl
adc
xchg
cmp
arpl
xchg
mov
add
test
clc
out
sbb
cmp
setb
cmp
adc
sbb
jl
push
test
bound
mov
mov
inc
dec
test
outsb
in
in
jne
daa
adc
insb
mov
or
push
mov
cmp
lock
les
gs
and
lret
scas
adc
mov
repz
mov
nop
pushf
inc
inc
xchg
mov
cltd
adc
pop
ficoml
inc
jl
fidivl
lahf
xchg
pushf
repnz
fdiv
mov
dec
cmpsl
and
or
out
xor
sbb
inc
push
pop
pop
dec
addb
pop
or
ds
adc
or
push
movsb
lret
adc
sti
inc
nop
sbb
pop
dec
repz
mov
and
lock
push
pop
xchg
mov
cs
rcll
push
cltd
xor
mov
out
call
pushf
mov
jo
lock
sbb
test
jge
ret
loopne
xchg
jns
cmp
das
sbb
dec
cmpsl
jae
daa
fninit
push
xor
mov
arpl
xor
pushf
das
pop
mov
add
clc
inc
adc
in
fsubl
push
inc
stos
adc
inc
mov
xor
mov
and
imul
fstpt
fisubrs
stc
icebp
aaa
movsl
cmp
bound
xlat
inc
in
adc
mov
insb
out
adc
cmp
sub
lods
xor
jno
loope
mov
dec
and
sti
mov
push
in
push
jecxz
dec
into
fdivrs
push
pop
fcompl
cmp
jg
ret
out
daa
loope
xor
or
xchg
ja
fistpll
out
pop
dec
add
mov
stos
mov
out
sub
insl
loop
jo
pop
ljmp
fstp
push
outsl
cmp
dec
jns
mov
and
adc
stos
fmull
std
jns
mov
and
subb
lods
xor
push
in
fisttpl
repnz
loopne
int3
mov
ljmp
xor
mul
insb
lock
cmp
cltd
sbb
stos
cmpsl
lret
shll
or
mov
rcr
push
shrb
adc
and
jbe
call
mov
push
sbbl
push
cmp
xchg
inc
sbb
sub
sahf
cmp
sbb
push
or
and
addr16
dec
lock
sbb
iret
cli
fsubl
push
inc
inc
mov
insl
inc
test
sbb
lds
aaa
in
imul
inc
xchg
div
xchg
mov
test
add
jecxz
int3
xor
mov
inc
insb
in
pop
dec
xchg
hlt
rorb
adc
popf
addl
and
adc
and
mov
scas
inc
sbb
idivl
xchg
inc
xor
imul
jns
mov
popa
fsubl
mov
lcall
lea
out
loopne
adc
sti
sbb
fsubrl
clc
cmp
sti
outsl
repz
lret
nop
insb
sahf
pop
cs
or
leave
adc
inc
leave
adc
inc
or
inc
in
push
xchg
cmc
sbb
incl
testl
dec
cmc
lcall
rorb
mov
sbb
mov
imul
dec
mov
int
pop
push
mov
pop
sbb
ret
adc
mov
xor
cmp
shl
pushf
cmp
jmp
xor
pop
inc
or
lods
or
cs
pop
lock
ret
mov
jb
adc
das
iret
mov
mov
dec
movsl
pop
ds
pop
pop
fidivs
xchg
inc
push
out
lret
cmp
stos
cs
mov
in
jae
sub
mov
mov
sbb
and
xchg
pop
scas
adc
push
or
jge
loopne
scas
andb
fimuls
leave
mov
mull
inc
jp
out
lds
scas
add
into
jp
lcall
and
ds
xor
sbb
stc
mov
ret
shrb
out
push
imul
push
mov
mov
sub
sbb
test
out
jmp
daa
mov
dec
scas
pop
scas
push
and
or
cmp
ds
lods
ss
jo
xor
loopne
lock
xor
pop
cmpsl
jae
ja
jecxz
mov
jl
cmp
mov
jmp
mov
sarb
xchg
out
mov
sbb
dec
sub
jbe
lahf
xorb
mov
sub
inc
cmp
pop
inc
filds
sub
fcmovne
or
mov
popa
pop
xchg
mov
adc
out
jae
arpl
sti
fadd
pop
hlt
add
sti
in
xor
dec
loope
loop
test
or
data16
mov
ret
ficomps
inc
or
dec
in
push
scas
xchg
daa
push
fcmovnb
sbb
shll
popa
int3
inc
or
inc
or
ror
push
adc
in
lea
outsl
loopne
mov
div
jp
rolb
mov
hlt
mov
test
sarb
xor
fisttpll
add
sbb
mov
bound
inc
adc
mov
mov
xchg
mov
stc
icebp
popa
test
xchg
and
push
sbb
push
sub
jns
addr16
cmp
lods
cld
mov
mov
fadd
push
fs
jo
ljmp
popf
cmp
xchg
sub
mov
jns
in
dec
adcb
addl
jns
dec
push
cltd
sbb
push
inc
xchg
js
pop
adcb
mov
jae
int3
insl
rorl
pusha
cmp
sub
or
mov
sub
out
repz
and
dec
xorb
push
mov
mov
cmp
mov
mov
sub
jo
xor
jbe
lahf
cmp
cmc
inc
mov
inc
cmpsl
in
pop
aaa
lahf
in
or
filds
sub
fcmovne
or
mov
xchg
add
mov
loop
int
jne
int
xchg
ss
push
add
xchg
enter
pop
nop
out
dec
cs
pop
xchg
inc
inc
in
add
repz
jo
push
ljmp
xchg
daa
push
fcmovnb
sbb
cmp
arpl
push
inc
lods
rcrl
sbb
mov
sarb
outsb
sarb
outsb
insb
jecxz
lock
test
or
pop
xchg
add
cwtl
aaa
jae
or
lcall
les
xor
mov
mov
cli
divl
test
sub
subb
fnstenv
imul
popa
cli
out
scas
stos
cmc
in
std
flds
or
ficompl
mov
jl
adc
mov
loop
fadds
ds
sbb
jge
or
xchg
xor
or
mov
bound
pop
jecxz
sbb
add
mov
cmp
add
jg
int3
jno
data16
adc
call
jae
inc
add
adc
dec
jns
lret
mov
inc
pop
pop
push
test
lret
lretw
or
cld
mov
add
iret
push
mov
out
xchg
pop
ret
cltd
pop
stos
xor
lods
push
push
mov
lcall
jbe
outsb
enter
outsb
and
pop
mov
imul
dec
mov
int
add
shlb
jns
xchg
jge
div
jmp
outsl
lods
and
add
adc
mov
cmc
hlt
and
xor
repnz
scas
ss
jae
fsub
rorl
sbb
das
adc
xor
mov
jns
mov
arpl
or
jb
and
out
punpckhbw
mov
add
clc
inc
adc
in
fsubl
sbb
sbb
xor
idivl
sub
sar
mov
adc
in
pusha
std
pusha
jb
jns
ljmp
out
mov
jns
fidivl
ja
sub
jae
ret
mov
xchg
movb
pop
or
cmp
add
insl
adc
pop
insl
dec
jns
mov
cmpb
xchg
cli
scas
add
lcall
rorb
loop
push
in
add
jmp
mov
fiadds
sbb
dec
pop
out
mov
repz
fwait
inc
out
cltd
pop
leave
mov
push
mov
xchg
scas
cld
stos
push
insl
mov
xchg
jnp
mov
shrb
pop
popf
out
mov
inc
push
out
sub
jne
loope
out
xor
xlat
pop
sbb
dec
lahf
test
jecxz
inc
icebp
das
xor
mov
shl
int
cmp
jnp
and
adc
add
bound
scas
stos
jecxz
lea
lods
jg
inc
mov
clc
cltd
xchg
mov
xor
inc
into
pushf
in
inc
in
push
test
mov
mov
shll
daa
decl
fwait
xor
test
dec
lods
mov
jecxz
sub
ds
sub
clc
and
pop
popa
int3
mov
clc
scas
fcoml
ljmp
mov
jne
adc
mov
psrlq
cltd
xchg
into
sub
jge
arpl
xchg
out
cmp
loope
cmpsl
jno
and
mov
orl
fisttpll
adc
mov
in
cld
iretw
adc
xchg
cltd
leave
mov
or
mov
xchg
mov
adc
jge
icebp
add
xor
jo
push
mov
fsub
loop
mov
mov
js
cmp
out
xchg
sub
and
in
arpl
loop
add
in
add
ret
add
insl
test
jb
dec
ds
xor
mov
scas
test
in
push
ljmp
jno
in
add
push
mov
cld
or
mov
stos
push
and
dec
lods
inc
test
scas
addr16
sub
scas
xor
js
stos
lcall
adc
sbb
xchg
cwtl
inc
test
pop
outsb
jbe
adc
push
mov
out
push
addr16
int
sahf
mov
cltd
out
jnp
fwait
mov
xchg
mov
inc
test
dec
sub
push
or
add
xchg
outsb
inc
or
pop
or
scas
stos
cli
notl
stos
aas
ret
xchg
pop
xchg
adc
cld
mov
mov
pop
jns
ds
sbb
sbb
repz
mov
adc
pop
shlb
fwait
scas
sub
xchg
fistpl
shlb
sub
test
in
ljmp
icebp
pop
fidivl
pop
xchg
adc
cmp
rcrb
mov
inc
dec
ljmp
add
or
or
pop
sub
sbb
lods
pop
lods
mov
inc
push
out
cmp
adc
enter
xchg
lcall
jae
int
jne
int
xchg
ss
push
add
xchg
enter
pop
nop
out
dec
cs
pop
xchg
inc
inc
in
add
repz
jo
push
ljmp
jnp
pop
dec
dec
push
icebp
stos
jb
mov
mov
mov
aad
inc
push
dec
adc
xchg
cmp
adc
subb
xor
call
pop
sarl
inc
push
out
xchg
das
stos
outsb
inc
popf
shll
and
cltd
inc
cmp
loopne
and
dec
pop
add
sbb
push
inc
mov
mov
jp
repz
movb
jecxz
out
inc
out
cmp
cs
cmpl
test
lcall
xor
dec
ja
dec
mov
mov
mov
xor
push
add
fldenv
or
insb
mov
call
jb
ficoms
jle
hlt
flds
rcrl
imul
sbb
dec
mov
add
push
mov
fdiv
cwtl
xor
adc
xchg
cmpsb
cld
add
inc
cmp
je
xor
lds
sbb
or
int3
repz
xor
arpl
loopne
ja
push
fwait
testl
mov
mov
xor
rcrb
inc
add
add
inc
loop
mov
pop
dec
mov
jae
imul
jne
int
xchg
ss
push
add
xchg
enter
out
stos
mov
outsl
push
shrl
mov
lret
sbb
jb
fists
into
mov
lcall
mov
push
cmp
push
lock
sub
dec
loop
stc
dec
adc
jmp
icebp
mov
imul
xor
pop
cmp
push
repz
mov
es
add
sub
call
data16
int
cs
mov
jp
or
jae
or
jno
pop
push
lds
std
in
je
push
push
mov
cs
dec
adc
stc
jle
or
sarl
mov
leave
movsl
fimull
inc
push
mov
mov
pop
jp
shll
dec
ljmp
sbb
adc
sub
in
xchg
icebp
push
jne
inc
mov
aam
fistps
push
fucomi
add
ret
add
and
xchg
test
pop
bound
into
add
mov
cli
out
fimuls
dec
cmp
pop
lcall
mov
in
adc
mov
cmpsl
mov
cli
cmp
mov
pop
lret
mov
sti
xchg
js
or
out
jmp
divb
dec
lea
loopne
cmp
pop
mov
pop
pop
mov
lcall
outsl
cwtl
rcll
add
push
cmp
sub
add
fistpl
xor
fwait
lods
les
test
pop
xchg
xchg
fwait
xor
mov
ljmp
test
or
jbe
jo
push
cwtl
es
into
mov
mov
or
scas
clc
movsl
roll
addl
dec
popf
outsb
lcall
adc
sub
mov
and
lock
sahf
int3
test
jge
lcall
jns
adc
dec
andl
negl
daa
mov
insl
popf
scas
adc
mov
aaa
or
lods
jle
addb
pop
push
sub
xorb
or
lret
iret
mov
mov
imul
xor
jle
movsl
jns
vxorps
adc
ret
std
or
and
mov
or
movl
pop
les
into
pop
mov
pop
xor
outsb
cmp
repz
or
lahf
cmp
or
lock
lea
das
daa
loopne
inc
mov
add
mov
sbb
std
inc
sub
int
mov
fsubl
mov
jno
jns
sbb
pushf
dec
ja
je
xchg
adcb
sbb
adc
aas
fisubl
add
pop
mov
inc
push
nop
sub
imul
inc
pop
clc
ja
or
and
or
cmp
sbb
add
xchg
lret
enter
fwait
mov
and
outsb
push
push
dec
shll
cltd
shrb
clc
push
neg
xor
ficoml
mov
inc
push
inc
sub
adc
xorb
sbbb
jns
mov
mov
aad
mov
jbe
mov
lcall
jbe
outsb
sarb
repz
xchg
int3
dec
fdivl
mov
int
push
andl
ret
sbb
insl
mov
sbb
das
push
cmp
imul
hlt
and
jno
add
or
repnz
sbb
pusha
je
inc
inc
mov
call
dec
and
pop
xor
aas
sbb
iret
test
push
stc
jmp
lret
xor
xor
sbb
sub
out
into
xchg
popa
mov
jecxz
mov
ret
mov
lea
add
pusha
add
mov
int3
inc
or
or
out
mov
in
mov
mov
or
jb
xchg
pop
icebp
or
mov
popa
sub
sahf
cmp
sub
push
push
divb
jae
push
add
adc
lods
fadds
or
call
sub
out
fwait
icebp
push
lds
aaa
in
imul
pushf
sub
xor
push
cs
mov
dec
int3
jle
dec
cwtl
loop
loopne
hlt
fld
and
lcall
gs
xchg
pop
lcall
mov
jle
addl
xor
ja
outsb
sahf
mov
dec
mov
adc
mov
aam
pop
inc
sbb
pop
sub
pop
jmp
aaa
fcmovnb
fldt
inc
jno
mov
push
out
add
jecxz
leave
sub
pushw
mov
es
xchg
pushf
or
mov
xor
iret
push
inc
or
jge
inc
lret
sbb
xchg
insb
in
or
cmp
sahf
int3
test
ret
jne
push
mov
divb
shll
add
addr16
movsl
mov
ret
out
sub
or
sbb
xor
mov
loopne
add
xlat
or
jg
negl
sub
cmp
adc
xchg
outsl
mov
shlb
sarl
out
dec
and
iret
sub
es
outsl
mov
adc
sbb
clc
sub
js
jmp
xor
cli
adc
jae
add
mov
aaa
and
jns
out
int
xchg
ss
push
add
xchg
enter
pop
nop
out
dec
cs
pop
xchg
inc
inc
in
add
repz
cli
shll
push
adc
cmp
cmc
mov
push
cmovb
inc
sahf
enter
mov
sub
std
jmp
movsl
add
add
push
sub
mov
or
imulb
cld
enter
test
les
xor
mov
mov
cli
divl
test
add
sbb
push
dec
mov
mov
xchg
sub
push
lahf
fistpl
lea
outsb
pop
loopne
mov
jns
loop
mov
push
xlat
xor
xchg
sti
xor
dec
inc
dec
mov
notl
aas
adc
jg
cmp
jg
and
fwait
dec
adc
sub
and
test
repnz
inc
or
sahf
lock
imul
mov
inc
jge
dec
xor
mov
test
adc
shrl
sbb
rclb
repz
add
xor
dec
movsb
mov
stos
lods
xchg
iret
orb
sub
in
and
sbb
dec
adc
jbe
test
cmp
cmp
push
push
xchg
roll
fistps
mov
lret
pop
aam
jg
outsb
and
xchg
adc
sbb
inc
pop
mov
lcall
test
nop
pop
cmpsl
sbb
jmp
cmp
jae
jl
inc
push
push
shlb
push
cmpb
in
adc
inc
mov
rclb
jae
and
subb
adc
xchg
cmp
and
mov
scas
test
scas
stos
cld
loope
std
icebp
test
xchg
mov
mov
adc
xor
push
sbb
leave
inc
mov
fimull
jmp
stc
and
cli
mov
loop
jg
cmp
xchg
xchg
or
mov
inc
ret
adc
mov
testb
cmp
sub
xchg
add
jno
dec
test
ret
xchg
cmp
jnp
les
mov
inc
sbb
and
lods
lds
lahf
dec
in
sarl
inc
adc
jae
jg
in
js
cli
add
and
mov
cmp
xor
pop
inc
jb
inc
xchg
cmp
adc
and
in
pop
fnstsw
in
das
bound
jbe
out
push
out
ljmp
mov
xchg
shl
in
add
or
xchg
jecxz
loopne
xor
imul
jp
inc
scas
adc
xor
and
ljmp
lahf
ss
or
rcrb
mov
sub
into
cli
cld
mov
sbb
cmp
aas
xor
mov
out
jne
hlt
packsswb
ret
aaa
repz
pop
addr16
shlb
shlb
lods
and
inc
pop
stos
dec
icebp
pop
and
enter
aad
repz
jmp
outsl
repz
or
push
fbstp
jnp
mov
int
js
xchg
ret
jne
adc
mov
push
xor
cmp
jg
and
fwait
dec
adc
sub
and
test
mov
push
lahf
lock
imul
dec
mov
dec
push
fistpl
imul
orb
jno
sub
sbbl
pop
dec
xlat
stos
push
stc
push
out
sarb
mov
and
add
gs
sbb
insl
scas
adc
xor
add
dec
popa
push
dec
xor
stos
das
mov
jle
mov
pop
pop
scas
iret
xchg
mov
jo
fadds
gs
jge
icebp
mov
enter
into
push
test
addb
inc
push
push
pushf
xchg
dec
shlb
jne
mov
rolb
call
xor
inc
pop
push
push
pusha
mov
sbb
aaa
ja
lret
daa
lcall
cmp
ret
fsubs
mov
mov
imul
dec
cli
je
mov
enter
ds
mov
add
mov
stos
inc
in
out
or
mov
aam
mov
js
daa
cmp
cli
jb
test
mov
aad
loope
jmp
aas
mov
outsb
dec
add
add
dec
lds
popa
sahf
ret
inc
outsl
fistpll
rorb
jne
in
fnstcw
sbb
xchg
cmpsb
nop
out
das
or
pop
in
leave
std
xchg
pop
das
mov
xchg
clc
loopne
jg
or
jbe
xor
adc
mov
int3
or
mov
sbb
outsb
pop
fdiv
ss
sbb
or
sti
aaa
dec
and
cmp
out
mov
pushf
test
mov
cmp
cmp
xor
imul
movsl
mov
xchg
fst
out
lahf
shrb
jge
xorps
das
xlat
in
cld
jcxz
imul
and
cmp
insl
pop
pop
xor
mov
pop
mov
sub
sarb
out
sar
cmp
stos
cltd
jmp
mov
xchg
stos
jns
fdivrp
fisttpl
push
enter
jle
sub
sub
dec
mov
fiadds
int3
addb
mov
mov
aad
in
dec
mov
imul
sub
mov
dec
adc
sub
iret
and
push
mov
or
cld
pop
inc
pop
test
test
lock
inc
jge
dec
xor
lcall
std
sbbl
pop
dec
xlat
sbb
lahf
fstl
fistps
jbe
push
aas
cmp
xchg
in
and
xor
sub
adc
xchg
or
into
fdivrs
xor
jno
xor
in
mov
jne
adc
test
jmp
cwtl
mov
mov
aas
cmp
xchg
pop
in
jo
lret
enter
and
or
lock
in
push
andl
mov
jnp
iret
sarl
imul
xor
inc
iret
push
add
fldenv
or
pop
mov
roll
rclb
insl
test
jmp
or
xchg
js
icebp
mov
and
mov
scas
test
bts
loope
std
icebp
test
pop
xchg
add
add
cld
icebp
push
call
pop
adc
ja
in
test
xor
push
mov
lahf
jmp
aas
mov
cmp
xor
cmp
out
dec
and
imul
sar
jp
fbld
lea
hlt
mov
or
leave
out
lods
cmp
and
aas
sub
pop
ficoms
bound
pop
mov
cld
orl
sets
or
iret
cmp
cmovae
cmp
cmc
mov
popa
push
test
ss
mov
push
addb
in
fidivrs
inc
cld
lahf
xchg
pushf
repnz
fdiv
mov
dec
cmpsl
and
or
stos
loopne
xchg
xor
xor
jecxz
xor
cmp
jb
cwtl
arpl
push
pop
outsl
fidivrs
shlb
sub
repz
xchg
pop
insl
mov
push
out
cmp
pop
dec
pop
popf
xor
hlt
cmp
mov
dec
arpl
sub
mov
jmp
pop
andb
sub
xchg
inc
add
cmpb
fdivl
adc
pop
or
gs
lcall
das
cmc
adc
or
mov
add
push
cmc
cmp
aam
jno
jns
or
dec
adc
pop
int
push
push
lret
lcall
mov
jno
xchg
mov
xor
or
iret
xor
jmp
icebp
cmp
lds
fcomps
jp
adc
out
and
pop
and
fucomi
out
js
mov
out
loopne
push
fwait
icebp
adc
imul
adc
mov
pop
mov
fldenv
pusha
inc
mov
pusha
dec
frstor
xlat
mov
mov
out
or
jno
repnz
cltd
movsb
cmp
dec
adc
push
push
push
repnz
xor
mov
push
jle
pop
shrl
dec
pop
fnstsw
xor
ljmp
insl
std
dec
pop
dec
inc
das
adc
leave
xor
icebp
insb
pop
xchg
mov
es
push
add
inc
enter
hlt
jmp
lret
test
jg
or
popf
xor
mov
faddl
ret
and
mov
ret
xor
imul
xchg
mov
cmpsb
adc
add
sbb
jg
test
sub
fs
stos
loopne
mov
pop
aad
sub
in
out
enter
and
stc
add
and
jno
jns
sbb
sbb
push
adc
repz
adc
aas
sub
xchg
mov
xchg
jo
xchg
fwait
push
jl
jmp
push
movsb
mov
das
pop
inc
xlat
ret
jmp
mov
mov
mov
subb
das
and
das
sub
dec
jge
add
fcoms
pop
push
adc
push
mov
push
pop
mov
cltd
das
sbb
and
xchg
movsl
inc
ss
push
dec
outsl
xchg
imul
je
pop
cmp
add
mov
mov
pop
scas
adc
xchg
lahf
sti
es
psrad
je
sub
js
dec
mov
dec
add
or
pop
mov
mov
aad
sbb
xor
test
adc
sbb
lods
mov
mov
xchg
mov
aaa
imul
mov
je
int3
mov
dec
mov
cmp
or
iret
fsubr
test
bound
psubq
xchg
pop
xlat
mov
ds
mov
adc
mov
sub
cmpb
inc
push
out
rolb
add
iret
jl
jp
sbb
dec
dec
xor
pcmpeqw
mov
lods
and
mov
call
add
enter
cmpsb
or
loop
mov
ret
jle
movsl
sub
sbb
fcmovnb
or
aad
mov
or
xor
pop
inc
cmp
or
fcmovnu
push
mov
rcrb
pop
sbb
and
dec
adc
rolb
vpshld
and
addr16
lcall
pop
loope
fcomip
mov
call
mov
out
cmp
aas
cmp
mov
jb
or
test
hlt
mov
mov
jg
loope
in
jecxz
jbe
pop
in
leave
std
xchg
pop
das
adc
cltd
pop
xchg
movsl
cltd
jecxz
push
lods
pushf
mov
xchg
jns
and
rol
cmp
mov
fiadds
loope
into
outsl
sbb
pop
xchg
cmp
scas
imul
arpl
cmp
mov
mov
add
add
mov
cmpl
into
test
call
and
mov
push
vrsqrtps
cmpb
jp
sti
mov
enter
out
xor
sbb
sbb
sbb
jb
xchg
adc
mov
push
adc
stos
mov
pop
stos
jnp
fs
dec
shrb
mov
jmp
movsl
out
fsts
fisubl
nop
pop
cmpsl
xchg
add
inc
sbb
divl
sub
inc
fstpt
repnz
or
insb
pop
rolb
rclb
insl
test
jmp
or
xchg
js
icebp
adc
leave
je
push
inc
mov
cs
dec
adc
iret
inc
jecxz
ja
jg
mov
leave
fimull
inc
ret
sub
mov
pop
lock
xchg
or
sbb
pop
fwait
cmp
cmp
cmc
inc
mov
inc
cmpsl
in
pop
aaa
lahf
in
in
mov
gs
add
addr16
mov
loop
cld
push
enter
cmp
xchg
inc
or
ficoms
xor
mov
sbb
inc
mov
pusha
dec
push
mov
sahf
idivb
sub
js
out
add
addr16
out
xchg
sbb
pop
aaa
push
xchg
leave
xchg
es
icebp
loope
mov
loopne
mov
inc
xchg
int3
test
or
jbe
jo
push
cwtl
es
mov
mov
imul
loope
pushl
xor
pop
adc
pop
cmpsb
xchg
test
dec
cmp
das
bound
jecxz
bound
mov
jo
lock
sbb
test
jge
ret
push
jge
ja
lcall
push
outsl
xchg
adc
xchg
imull
pop
ret
push
fadds
jl
test
mov
and
cmp
xchg
test
and
mov
sbb
mov
fdivrl
and
mov
adc
pushf
dec
xlat
repz
push
mov
out
sbbl
lret
dec
mov
jmp
cs
insb
add
orb
cmp
push
xor
jno
mov
adc
and
mov
das
or
ja
mov
lret
sub
adc
gs
xor
movsb
adc
outsb
stos
xor
push
mov
sub
inc
push
jl
jecxz
enter
mov
or
or
icebp
sbb
jmp
add
inc
cmp
jae
jl
inc
push
push
shlb
push
addb
aam
outsl
fisubl
jmp
inc
test
js
sti
add
jno
jo
jle
cmp
mov
fadds
lods
jb
mov
data16
jbe
insb
pop
pop
mov
notb
jl
xchg
push
push
sbb
imul
pop
std
movsl
loope
or
ljmp
stc
iret
add
outsl
inc
faddp
ljmp
rorb
and
add
xor
mov
xchg
in
mov
out
add
insl
pop
ds
dec
pop
orb
cmp
mov
into
fdivrs
push
pop
fcompl
cmp
jg
ret
out
daa
loope
xor
and
cwtl
mov
ds
sbb
jb
xchg
adc
mov
push
mov
shrb
in
push
pop
or
lock
insl
loop
jo
pop
ljmp
fstp
push
rep
mov
mov
filds
sbb
xchg
cmp
aad
dec
dec
adc
cmp
push
fdivl
mov
cwtl
mov
mov
das
call
adc
int
cmp
mov
sub
imul
out
jns
adc
dec
andl
negl
daa
mov
ret
out
shrd
mov
dec
adc
fidivs
push
push
inc
stos
add
pop
sub
jo
add
lea
cwtl
lcall
cwtl
mov
stc
ss
cmpsl
push
xor
jg
int3
jno
mov
adc
xor
sbb
popl
insl
adc
dec
insl
dec
fxch
mov
inc
jg
sub
xchg
mov
inc
ret
inc
or
sbb
cld
mov
mov
js
out
add
addr16
out
xchg
pop
push
int
fcoms
int
pop
cmp
add
cmp
inc
cmp
daa
push
jo
dec
mov
icebp
mov
imul
xor
pop
cmp
push
std
jl
or
push
shlb
cli
clc
sub
int
adc
int
cs
mov
jp
or
jae
or
jno
pop
push
lds
cmp
and
jne
sub
sub
cmp
ret
fdivs
pusha
sbb
into
callw
inc
push
cmp
or
xchg
mov
push
mov
fdivrp
cmp
and
fadds
push
ja
xchg
sub
mov
mov
adc
sbb
nop
cld
stos
test
lret
dec
mov
jp
nop
mov
and
imul
mov
fldenv
loopne
pop
adc
dec
lea
ds
bound
mov
xchg
fs
sbb
adc
sbb
scas
jnp
ud1
ret
lea
aaa
mov
cmp
test
or
cmp
nop
inc
cmpsb
js
push
repz
pop
loop
shrb
shrl
pop
push
cmp
aaa
xor
sbb
dec
cli
jmp
out
jmp
push
push
xor
or
and
call
mov
lods
lcall
xchg
mov
in
mov
cmp
sbb
mov
pop
mov
mov
jl
xchg
jns
rcrl
inc
fidivrs
bound
into
dec
cmp
sbb
pusha
je
inc
inc
mov
jo
data16
das
add
lods
stc
jle
mov
inc
mov
cmp
inc
out
repz
dec
add
xorb
das
pop
mov
push
lock
arpl
xor
sbb
pop
xchg
cmp
scas
imul
arpl
cmp
xchg
add
jno
dec
test
ret
xchg
cmp
aam
lcall
mov
aam
push
fimuls
in
xor
dec
loope
pop
cli
scas
add
lcall
mov
adc
iret
leave
adc
xlat
inc
or
dec
in
sbb
aaa
cld
incl
jl
repz
xchg
rcrl
enter
in
and
inc
in
and
fidivl
ljmp
mov
sbb
arpl
mov
aaa
out
mov
mov
xchg
sbb
scas
popf
adc
inc
clc
cmc
hlt
push
pop
xchg
pushf
scas
ss
shlb
int3
insl
rorl
ds
loope
and
je
sarb
ja
jecxz
mov
out
std
lret
sbb
jmp
mov
std
insb
clc
adc
xchg
int3
jp
sarb
xchg
ds
lea
xchg
mov
sub
es
outsl
mov
adc
sbb
clc
sub
js
jmp
xor
sti
sbb
dec
jb
mov
movsb
mov
aaa
sti
inc
dec
jg
stos
mov
call
sub
rcrb
dec
mov
xchg
mov
out
mov
ret
fidivs
push
ljmp
xchg
daa
push
fcmovnb
sbb
sub
dec
fstps
mov
inc
jg
mov
das
test
and
insl
in
pop
rorl
mov
cwtl
rolb
add
rclb
add
xchg
data16
pop
xor
rcrl
add
pop
int
vunpckhpd
mov
and
lock
xchg
push
push
repz
subb
rorb
test
jbe
stos
out
pop
shrl
jg
and
in
cmc
lods
jbe
pop
cltd
mov
in
cltd
std
xchg
daa
adc
pushf
fstps
xor
and
int3
lea
outsl
cmc
loope
jecxz
cmp
fcmovnb
call
stos
dec
mov
sbb
cltd
shr
adc
fcmovb
sbb
aaa
or
int3
dec
pop
sahf
xchg
push
jnp
adc
ss
or
or
add
dec
inc
leave
jg
stos
mov
nop
pop
aaa
call
mov
push
mov
xor
add
lods
fwait
ja
lods
and
fsubrp
fwait
rorl
push
bound
and
mov
mov
jo
in
jo
adc
std
xor
cltd
mov
xchg
mov
outsl
push
dec
jb
push
push
add
les
add
outsb
clc
pop
and
cmp
add
mov
repz
subl
dec
pop
adc
sub
gs
int
add
push
dec
shl
aam
push
jbe
stos
cs
into
mov
test
out
mov
mov
jns
bndstx
aam
rolb
xor
outsl
out
movsb
mov
sub
lea
daa
push
pop
xlat
mov
popa
push
jge
jp
stc
movb
outsl
imul
ljmp
ret
sbb
sub
sbb
ficomps
pop
mov
cmp
lods
loop
push
dec
fcmovnb
loop
fsubp
data16
mov
ljmp
mov
fnstenv
adc
imull
pushf
or
shlb
or
lret
daa
repz
fs
xlat
ficoms
xor
call
das
ret
cwtl
push
bound
push
mov
sub
xchg
jp
shlb
mov
or
mov
dec
jbe
mov
add
pop
ss
stc
jno
pop
mov
adc
cmp
and
pop
inc
lret
incl
out
cli
adc
pop
sbbb
mov
faddp
mov
mov
jg
out
cmp
push
into
scas
jbe
test
loop
mov
mov
jns
dec
sbb
mov
popa
sub
lods
notl
sbb
push
or
js
jae
xchg
out
std
idivb
sub
adc
add
mov
and
and
mov
std
ffree
xchg
inc
jmp
lds
ret
sub
cmpsb
loop
iret
dec
jle
dec
lahf
jecxz
sbb
inc
arpl
sarb
aaa
clc
mov
or
push
sbb
movsl
mov
xchg
fst
out
lahf
shrb
jge
xorps
das
xlat
in
cld
jcxz
imul
push
inc
or
test
push
xchg
data16
pop
loopne
cwtl
and
addr16
dec
or
sbb
ds
popf
or
stos
arpl
out
xchg
movsl
add
mulb
dec
pop
or
sub
loopne
sti
push
repnz
loopne
adc
xor
dec
test
mov
loope
mov
iret
inc
pop
mov
inc
lahf
out
fs
stc
inc
call
dec
cmp
ss
xchg
jb
sub
aaa
aam
imul
sub
sbb
sbb
adc
sub
inc
pop
mulb
ror
ljmp
out
mov
cwtl
mov
mov
or
push
push
xor
sbb
das
fistpll
leave
pop
or
xchg
fists
insl
adc
dec
insl
dec
fxch
mov
inc
jg
push
test
icebp
loope
out
jno
and
ret
inc
or
sbb
cmp
lds
idivb
out
add
addr16
out
xchg
pop
out
cltd
pop
stos
mov
push
mov
adc
mulb
xchg
loop
dec
sahf
xor
icebp
lds
jbe
jo
push
cwtl
es
mov
mov
and
scas
clc
movsl
roll
mov
lret
dec
out
cmp
jb
es
inc
pop
cs
fxch
repnz
pop
dec
loope
sbb
xor
mov
and
xor
push
xchg
push
daa
ljmp
hlt
xchg
inc
xchg
inc
fucomi
outsb
shll
pop
sbb
xor
inc
dec
enter
mov
sbb
sub
sahf
cmp
sub
push
push
divb
jae
push
add
adc
xor
lret
cmpsb
andb
jnp
repz
in
inc
std
xor
fildl
scas
ja
scas
mov
insb
in
xchg
mov
jne
adc
add
mov
push
cmp
xor
ss
fs
push
jecxz
dec
into
fcoms
push
pop
fsubr
imul
daa
gs
sahf
push
imul
jo
lret
stos
mov
insb
push
cmp
add
mov
out
out
xchg
mov
jmp
outsl
dec
insl
dec
cmp
xor
mov
sub
int
dec
ja
les
pop
xor
push
aad
add
fldenv
or
insb
dec
pop
shrb
jb
int
mov
or
gs
lcall
sbb
iret
mov
add
push
cmc
in
das
sbb
xchg
not
xchg
inc
lcall
scas
sub
add
xor
or
mov
or
adc
fnsave
mov
shlb
shll
out
dec
and
out
mov
movsl
xor
pop
cmp
cld
inc
or
bound
divl
outsl
je
cmp
xchg
cmp
mov
xor
cmp
add
push
jno
pop
daa
test
dec
ds
jns
mov
sahf
and
inc
cli
mov
sahf
out
out
inc
jns
lret
add
and
push
ss
ret
out
out
ret
out
addb
cmpsb
jle
in
or
lret
sub
jb
cmp
push
lcall
adc
in
push
jp
gs
or
xor
or
popf
xor
roll
les
iret
pop
popf
xor
fcom
mov
push
dec
or
xor
cmc
jns
imul
push
out
pop
add
int
jmp
aas
adc
pushf
cmova
iret
call
add
sub
into
jae
cmc
test
and
jl
fstps
roll
push
jnp
inc
lods
jb
adc
loopne
push
pop
push
fnstcw
push
fcompl
mov
inc
push
sbb
jb
cmp
xchg
icebp
stos
pop
popa
sub
or
insb
shll
inc
mov
stos
push
out
loopne
fmul
sbb
lock
outsb
out
incb
xchg
pop
dec
cmp
pop
jb
cmp
push
xchg
fwait
lods
add
loop
sbb
sbb
sub
movsl
or
push
dec
faddl
and
inc
mov
and
xchg
inc
lds
adc
popf
sub
pop
test
xlat
lea
mov
out
pop
out
cmp
jle
push
sbb
lret
push
stos
into
jae
xchg
aad
xlat
mov
mov
test
ret
mov
sbb
push
push
push
insb
aad
mov
mov
mov
dec
sbb
loopne
out
cmp
sbb
out
cmp
das
jo
fisttps
call
jns
pop
in
inc
aas
lock
out
cmp
adc
dec
add
push
sub
mov
mov
shl
pop
int3
xor
sub
add
sahf
and
push
adc
cmp
adc
mov
out
mov
add
out
add
or
push
cmp
push
fldcw
arpl
mov
int
sub
popa
mov
insl
sbb
dec
push
out
cmp
add
dec
inc
dec
adc
filds
add
xor
sahf
sub
or
inc
in
inc
lret
jb
cmp
cltd
int3
addr16
lret
jae
icebp
imul
sub
mov
mov
sub
stc
add
sbbb
and
or
bound
mov
lock
icebp
into
jge
xor
sahf
dec
mov
shrb
cmc
mov
inc
cld
leave
ret
nop
fld
mov
pusha
push
shl
add
testb
push
out
out
inc
mov
add
jns
jns
xor
mov
xor
mov
xor
mov
pop
movsb
inc
inc
icebp
repnz
or
shl
mov
cmc
sub
scas
xchg
mov
decb
sar
mov
sti
cmovnp
cli
inc
cmp
imul
mov
shll
stc
cmpsb
lret
loop,pt
xchg
add
div
aam
or
cmp
pop
sub
and
bound
push
xchg
repnz
das
sbb
neg
mov
or
stc
pop
pop
scas
movsl
sbb
push
mov
pop
sbbb
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
imul
xor
xor
data16
out
rcll
jecxz
aad
stos
fcompl
sbb
rclb
test
xchg
test
mov
mov
std
xor
cld
adc
lret
adc
dec
bound
ss
movsb
mov
push
jge
mov
and
cmp
and
cmp
aad
push
mov
mov
mov
inc
sar
mov
mov
cmp
cmp
daa
xchg
inc
pop
cli
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
mov
xlat
add
dec
stos
pop
jge
adc
jae
ret
xchg
xor
mov
xor
dec
cmp
pop
addr16
int
mov
push
mull
lock
data16
xor
mov
cmc
dec
jb
imul
push
test
xchg
push
jmp
sbb
and
aam
mov
inc
sar
cltd
lret
cmp
jnp
xor
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
aam
mov
inc
sar
inc
ds
and
mov
orb
ljmp
rorl
add
dec
ds
xchg
mov
rol
test
and
push
cmp
add
push
mov
daa
or
mov
xchg
jl
xlat
lret
mov
inc
and
sbb
shlb
pop
test
in
jb
repz
jg
and
pop
jmp
outsb
mov
outsl
mov
inc
es
jecxz
mov
pop
inc
sbbb
sti
and
push
jle
adc
lret
movsl
jno
out
testb
je
stos
out
lods
xacquire
rcrl
mov
add
jno
loopne
shll
int3
orl
jo
jne
mov
jecxz
scas
sbb
xlat
aaa
popa
push
fisubrl
pop
out
sub
add
mov
jae
push
loope
jne
ja
mov
and
cs
or
add
pusha
arpl
jns
movsb
xchg
cmp
stc
mov
loope
fwait
xchg
jg
dec
out
jo
ret
rcr
test
push
repz
rolb
call
fadd
lret
jge
fndisi(8087
negb
or
aam
nop
sti
inc
mov
das
ficompl
sub
mov
pop
push
jp
loope
lods
cmpb
inc
lret
or
push
icebp
loope
addb
jl
add
out
or
orb
mov
pop
add
push
xchg
jl
gs
pop
cld
data16
fstps
test
clc
popf
or
or
push
dec
call
pop
xchg
dec
sti
mov
jl
push
mov
andl
add
inc
sub
pop
xor
in
push
lea
pop
fmull
fmuls
sub
mov
cmp
into
xor
popa
ret
mov
add
lahf
mov
dec
clc
or
jp
sahf
xor
test
mov
pop
jge
psubsb
clc
adc
jne
mov
mov
xchg
mov
pop
sar
mov
or
cmp
les
sbb
sahf
int3
mov
gs
enter
in
icebp
mov
mov
dec
loop
cs
add
adc
fistl
xlat
inc
adc
xchg
test
addr16
inc
lods
je
enter
sub
mov
hlt
add
out
xchg
xchg
sbb
call
push
arpl
mov
xchg
negl
out
mov
pop
mov
cwtl
cli
and
cmp
pop
lock
jnp
mov
fnsave
data16
push
cs
cmp
sbb
imul
mov
int3
scas
cmp
adc
add
sti
cmp
movsl
push
cmp
lcall
xchg
mov
sbb
das
cmp
lahf
pop
adc
push
xchg
rcll
pop
and
mov
arpl
xchg
mov
inc
mov
insl
inc
xchg
cli
imul
movsb
into
test
sbbl
dec
cld
mov
int
hlt
mov
ljmp
mul
sbbb
icebp
add
or
mov
push
aad
fst
adc
push
cmp
shrb
pop
cmp
call
fcomps
out
sub
rcl
mov
into
loope
fsubl
jecxz
sub
sar
mov
imul
popa
gs
mov
inc
lahf
test
dec
add
sbb
out
js
lods
out
push
xlat
fcmovu
popa
push
adc
jge
fsts
add
pushf
lret
jge
adc
ss
cmp
cmpsb
daa
mov
jns
dec
rorb
xor
cmpsb
mov
or
cmpsl
sub
clc
xchg
test
cmc
inc
jmp
into
xchg
repz
sti
ret
mov
adc
jmp
xchg
pusha
sub
pop
mov
mov
ret
mov
inc
cmpb
addb
sbb
das
dec
jle
fisttpll
dec
enter
xor
cmp
add
insb
xchg
or
add
adc
sbb
es
cs
mov
lds
xor
mov
nop
jnp
dec
pusha
pop
push
pusha
sti
jmp
fisubs
rcr
cli
out
sub
xor
cmc
mov
mov
insb
out
add
cli
jno
pop
stc
ret
into
sub
je
test
mov
mov
cmp
jmp
add
or
mov
lock
int
push
pop
xchg
inc
lock
insb
xor
shrb
sub
js
mov
sbb
xor
jno
imull
ret
xor
shrb
out
cmpl
sahf
adc
pushl
cltd
icebp
adc
jle
pop
mov
fisttpll
in
insl
fadd
in
bound
and
cmpsb
jge
call
idivl
sbbb
int
les
lds
popa
das
inc
mov
icebp
push
sub
mov
int
js
clc
pop
jne
andb
or
call
movsl
dec
outsb
loopne
ljmp
loop
xchg
mov
aaa
xchg
addr16
push
mov
test
lock
jb
movsl
sub
data16
movsb
lret
dec
nop
test
inc
inc
push
cmp
lea
scas
inc
test
pop
enter
jmp
push
mov
sub
fisttpl
mov
xchg
pop
inc
movsb
in
ljmp
loopne
or
das
icebp
push
clc
stos
mov
push
movsl
pop
cld
inc
mov
movsl
lahf
xor
dec
mov
push
add
mov
jle
push
jp
xor
ljmp
test
add
mov
in
jbe
jp
or
cmp
xlat
fsubr
gs
mov
and
ret
call
jne
inc
sahf
adc
cmp
nop
ljmp
insl
mov
subl
cmp
fnstcw
and
rcrb
dec
mov
or
nop
dec
push
int
inc
sbb
je
mov
in
lret
adc
xchg
dec
loope
and
aas
es
cwtl
shrl
add
jb
out
fdiv
or
add
dec
loop
jb
jle
mov
popf
sbb
jae
adc
enter
push
in
outsl
testb
push
sub
imul
out
jge
in
sub
sub
mov
scas
fiadds
mov
sub
add
add
inc
jmp
fldenv
sarl
fbld
je
jne
js
sbb
test
sti
fistl
scas
dec
out
lds
sbb
fs
outsl
mov
iret
adc
xor
mov
xchg
lock
aad
outsl
imull
mov
xchg
pop
add
shlb
sahf
cmp
sub
add
xor
push
mov
mov
inc
imul
mov
imull
push
std
ds
imul
xchg
cli
lods
rcrl
add
pop
loopne
xchg
cmp
imul
ret
test
movsl
ja
testb
movsb
add
addr16
scas
test
jmp
mov
es
mov
mov
ss
fsubl
push
mov
xchg
je
jnp
in
mov
fbstp
xor
inc
loope
xchg
or
daa
mov
int
lret
sar
dec
movsl
sbb
xor
pop
roll
pop
xlat
aam
sbb
test
lods
adc
popa
cli
jle
dec
ret
lret
nop
sub
rcrl
mov
jnp
or
push
jne
adc
lret
add
or
out
test
jmp
inc
jecxz
aad
pop
mov
imul
test
out
aam
jnp
test
sbb
and
push
jno
inc
inc
xchg
sbb
xor
sub
out
pop
adc
jno
aam
scas
les
fisttpl
jecxz
inc
dec
cmp
test
sar
in
in
imul
stos
dec
add
push
dec
mov
push
inc
out
push
mov
mov
sub
orl
xor
mov
test
out
push
mov
mov
pop
xchg
jp
add
sbb
add
into
notb
out
imul
xor
and
pushf
in
cmpsb
and
and
and
xor
or
jmp
cmpb
repz
pop
adc
inc
dec
das
mov
and
adc
add
shll
bound
nop
and
imul
into
or
imul
hlt
mov
aas
aam
cld
out
daa
scas
fwait
addr16
in
gs
out
push
mov
mov
add
jb
lret
fcmovnb
jns
jecxz
jbe
psubw
lods
ret
dec
fs
add
dec
enter
sbb
mov
cmpsb
jecxz
xchg
lods
addr16
subl
push
orl
cmc
pop
je
mov
call
adc
stos
push
or
loope
jne
mov
std
clc
push
pop
movsb
lods
sub
or
out
rorl
mov
call
mov
jmp
mov
mov
cmp
popf
fbld
lret
push
jle
adc
jmp
sub
jge
out
mov
vmovq
outsb
jg
jg
pop
or
cwtl
je
adc
jno
inc
jp
adc
or
push
xchg
inc
incb
scas
inc
sub
std
mov
cmpsb
pop
std
mov
dec
adc
inc
in
fldt
cmp
imul
iret
test
pop
adc
push
add
pusha
lcall
mov
dec
jns
mov
ljmp
cli
or
rol
cmp
inc
and
pop
hlt
popf
mov
push
push
mov
add
xor
pop
aad
pop
push
cmp
add
in
pop
push
jnp
xchg
stc
mov
jb
or
or
mov
pop
sub
jle
scas
and
movsl
in
loop
sbb
cmp
jl
fcmovu
inc
sbb
cmc
mov
ljmp
rcll
add
mov
sbb
les
mov
xor
fs
fs
or
xchg
repz
mov
lds
pusha
sbb
add
fwait
les
cmp
lods
js
mov
cs
mov
mov
or
jl
test
outsl
mov
adc
push
mov
xor
repz
and
mov
lcall
sub
shll
mov
mov
mov
movsb
sub
jmp
sub
or
pop
dec
adc
in
aad
movsl
mov
mov
es
outsl
pop
sub
iret
xchg
lcall
lea
fs
imulb
test
and
inc
fisttpll
sahf
sbb
add
sub
repz
test
pop
cld
or
cmp
mov
push
stc
into
movsb
dec
and
std
stos
ja
and
faddl
ret
addr16
and
jns
jecxz
add
lock
jbe
cmp
dec
mov
int3
jnp
mov
mov
lods
insl
repnz
push
pop
or
sahf
jp
dec
push
cs
dec
in
call
mov
mov
dec
inc
mov
sbb
mov
xor
jle
enter
cmp
aaa
mov
into
incl
hlt
js
cmc
lret
pop
popa
ja
fiadds
ds
jne
sbb
or
push
jbe
bound
jl
mov
stos
inc
sub
jecxz
adc
sbb
add
mov
les
daa
lret
out
inc
pop
adcb
xor
out
or
jnp
push
jb
scas
pop
sarl
imul
test
movsl
lock
scas
out
pop
cmp
enter
add
mov
push
dec
mov
dec
or
xlat
movsl
je
mov
add
mov
pop
xchg
add
dec
or
xor
or
js
pop
jbe
adc
test
pop
sbb
and
stos
scas
dec
sub
loopne
fmulp
movsb
jge
sbb
movsl
jb
mov
lods
push
movsb
mov
dec
scas
cmpsl
sarb
psubsb
ljmp
pop
out
sbb
fnstenv
pop
call
or
dec
arpl
es
jge
pushf
std
gs
mov
pop
jmp
sbb
lret
mov
dec
mov
inc
and
stos
daa
dec
js
push
ss
test
inc
aam
cmpsl
idivl
mov
jbe
or
lods
loopne
xor
jmp
and
sub
imul
cmpsl
cmpsb
mov
scas
sahf
adc
adc
lock
xlat
test
sub
dec
mov
loope
xchg
jle
pushf
jge
jae
pop
add
inc
arpl
push
insl
pop
pop
and
int3
movlps
or
imul
and
ss
hlt
push
cmp
shr
mov
xor
rcll
xchg
rcll
movsw
rclb
pop
in
ss
push
cmpsl
andb
rol
mov
lar
mov
cmpl
loope
push
lret
and
jp
mov
sysret
adc
add
jae
jecxz
xor
pushl
xchg
mov
jp
xchg
icebp
repnz
fsubs
jecxz
push
inc
push
sub
pop
inc
aam
xchg
push
aam
ja
or
jmp
adc
inc
push
push
inc
push
scas
mov
adc
cmpb
adc
xlat
sub
loope
push
mov
addb
iret
mov
add
faddl
pop
mov
daa
mov
rorb
push
outsl
repz
data16
sti
pop
addr16
add
inc
fcomps
loope
cwtl
stos
pop
or
or
aad
sbb
sbb
lea
pop
xchg
sub
push
jg
mov
les
cmp
movsl
pop
lock
add
cltd
add
rcl
cmp
mov
stc
addr16
sbb
pop
popf
enter
iret
gs
mov
addr16
fcomp
or
in
aas
iret
sti
or
xchg
cmp
mov
daa
push
addr16
sti
cmp
dec
imul
mov
or
xor
rcrl
or
xchg
enter
xchg
ret
je
into
jmp
dec
dec
jl
repz
or
add
and
orl
call
mov
jp
into
xchg
mov
jmp
pop
mov
test
jg
mov
push
sub
inc
jno
addb
outsb
and
jbe
xor
mov
inc
add
jmp
jecxz
lock
push
xchg
push
sbb
xchg
ja
or
iret
pop
scas
sbb
xor
divl
jecxz
rep
xor
out
and
cmpsl
jp
in
and
addr16
jns
xchg
imul
enter
in
sub
dec
test
fcmove
lods
mov
mov
test
jae
cmpl
insb
mov
mov
mov
sub
scas
add
pusha
aam
xor
mov
iret
and
loopne
jae
push
std
mov
enter
mov
test
and
cmp
xor
sbb
in
lcall
push
scas
movb
sub
jno
je
pop
lret
call
add
bound
leave
push
mov
insb
inc
and
gs
sbb
cmp
push
scas
aas
lock
scas
dec
loop
mov
cmc
aad
out
mov
cs
mov
cmp
pusha
cmp
push
scas
push
push
adc
xchg
stos
jmp
dec
sbb
adc
popa
and
adc
dec
in
sti
sbb
jecxz
outsl
test
dec
add
jg
xor
std
outsl
mov
xlat
fstpt
js
jo
jb
lock
int
mov
cmp
jne
sbb
xchg
mov
pop
rorl
xor
push
mov
mov
pop
dec
mov
and
cwtl
imul
adc
shlb
lret
mov
nop
cmp
push
mov
loope
std
mov
sahf
jb
mov
jo
mov
or
pop
and
add
andb
or
add
cmp
mov
insb
scas
mov
out
stc
lret
loopne
inc
lods
mov
lret
xchg
lcall
in
pop
mov
add
mov
add
andl
int3
push
add
xchg
out
xor
jns
mov
movsl
sub
push
cmp
jg
adc
pop
test
jl
iret
mov
pop
cli
stos
or
add
std
pop
sub
or
and
test
push
xchg
xchg
out
inc
rol
fmull
addr16
mov
adc
push
fisttpll
fwait
inc
js
pop
and
aaa
pminub
in
mov
push
mov
pop
jge
cld
mov
inc
je
xchg
jnp
hlt
jle
daa
sub
sub
pop
mov
not
pusha
mov
pop
mov
mov
and
jo
adc
pop
xchg
adc
mov
jno
and
dec
inc
cs
in
in
call
daa
mov
test
sti
loop
pushf
ljmp
add
add
mov
sbb
pop
lods
int3
push
sbb
mov
int3
fstpl
pop
and
ds
mov
lds
jp
out
lea
out
lods
dec
das
push
sbbl
into
iret
push
pusha
stos
call
xor
insb
js
scas
inc
movl
xchg
insb
aad
add
clc
mov
adc
cltd
das
ss
jge
aaa
dec
adc
js
sbb
pushf
outsb
popf
jno
add
fistpll
jl
xor
sbb
push
insb
std
ret
jl
fwait
push
jmp
jnp
iret
ja
sub
aam
sbb
mov
or
popf
aaa
inc
xchg
pop
sbbb
adc
mov
mov
pop
or
xchg
ret
or
adc
je
pop
pop
or
xchg
inc
je
cwtl
push
or
je
pop
enter
popa
out
jno
ficompl
andb
shl
aam
push
jl
int3
lds
cmp
pop
mov
push
lods
or
add
jb
dec
mov
sub
inc
call
sbb
dec
dec
aaa
or
sbbl
mov
scas
ret
push
sbb
shrb
sbb
jmp
inc
outsb
xor
push
pushf
jmp
js
cmpsb
jge
leave
testl
xchg
jecxz
add
and
pop
jmp
mov
mov
xchg
or
mov
push
pop
cld
xchg
jae
pop
jbe
add
cltd
xor
xchg
je
pop
fists
sub
imul
data16
shlb
mov
pop
push
dec
rorl
dec
jle
mov
pop
cmp
inc
ret
sbb
or
lock
mov
and
pop
jnp
xchg
fsubr
mov
adc
cmpsl
lock
sbb
xchg
movl
mov
notb
cmc
repnz
mov
cld
and
mov
and
mov
in
pop
insl
xlat
pop
icebp
fsubrl
adc
add
dec
sub
dec
dec
lods
push
mov
jnp
jnp
sbb
jecxz
jne
mov
or
orl
loop
rcrb
adcb
lods
sbb
mov
jae
loop
shl
jbe
jb
push
out
or
jno
or
test
jb
bound
mov
sub
and
scas
aas
inc
dec
mov
mov
mov
scas
sbb
fidivs
mov
lock
sbb
mov
jle
mov
rorl
adc
jae
cwtl
pop
inc
sbb
fs
test
rcl
pop
jmp
push
aam
inc
shrb
flds
sub
rcr
mov
das
sahf
jno
jmp
movsl
cmp
push
sahf
mov
sti
or
lahf
ljmp
jb
push
fwait
arpl
fstpl
sbb
cmp
mov
mov
das
inc
and
dec
add
inc
pop
dec
lret
int
mov
aam
sub
mov
lods
movsl
into
lock
jae
ss
mov
out
imul
nop
icebp
xchg
lcall
imul
dec
push
mov
mov
cmp
pusha
push
sbb
mov
mov
lahf
push
hlt
mov
gs
push
in
repz
mov
lock
push
cmc
nop
addr16
adc
cmc
mov
or
jmp
neg
cmp
test
pop
sbb
fistps
ss
into
lahf
push
aad
inc
je
adc
enter
pop
jae
push
mov
mov
add
rcrl
es
icebp
xor
shl
push
sbb
pop
fdivr
ds
imul
push
jne
xchg
aas
pop
mov
cmc
pop
dec
scas
cltd
mov
loopne
mov
inc
xor
popa
xor
mov
adc
xor
scas
jmp
insl
insl
movsb
nop
pop
in
loop
das
fsts
scas
mov
jo
mov
sti
ja
outsb
test
adc
shr
mov
repnz
adc
xchg
out
mov
ficoms
mov
outsb
ja
lcall
inc
test
jns
ss
fldcw
movl
cmp
xor
cli
xor
test
mov
jge
imul
mov
sub
xchg
push
and
testb
cltd
mov
push
das
repz
mov
leave
xchg
lahf
subb
rep
xor
incb
aaa
int
movsl
sub
out
xchg
mov
mov
adc
inc
scas
pop
js
ret
mov
dec
xor
outsb
daa
xchg
add
out
rcll
fxch
lahf
dec
fwait
call
cmpsl
sub
das
data16
imul
out
rorl
cmp
xchg
mov
dec
ljmp
sub
xor
loope
mov
inc
jne
inc
or
loopne
pop
iret
test
and
out
enter
adc
insl
insb
fsubr
nop
lret
xchg
shll
test
cs
int3
std
ss
fisubs
or
dec
xor
ret
or
jns
cmp
adc
mov
cwtl
sbbl
cld
inc
pop
aad
or
pushl
sbb
and
stc
stc
pop
sbb
and
jge
push
xor
arpl
enter
inc
xor
call
out
jmp
push
push
xorb
jmp
movsl
inc
js
daa
cmp
and
push
cmpsb
dec
pop
dec
xor
inc
loopne
xlat
das
mov
movsb
xor
pop
fdivs
pop
or
nop
jne
adc
jbe
pop
ret
mov
pop
sbb
jae
jp
rcrb
sahf
sbb
jbe
stos
xchg
sbb
cmp
sub
fisttps
call
repnz
pop
adcb
insb
xchg
cmpsb
cmp
lock
push
test
in
add
or
pop
inc
dec
test
dec
insl
ficoml
push
pusha
lcall
sub
out
stos
adc
lds
jo
pop
movl
icebp
lahf
and
dec
pop
call
jnp
sbb
sbb
xor
fcmovne
iret
and
fwait
movsb
gs
adc
sbb
pop
das
cmpsb
das
leave
mov
push
pop
leave
ret
mov
pop
jnp
add
inc
or
mov
je
cmpsb
cmp
and
mov
movsl
rcl
out
adc
lret
in
imul
inc
not
les
divb
mov
and
mov
icebp
lods
mov
cmpsl
dec
imul
mov
mov
sub
scas
in
rol
insl
in
dec
inc
lods
stos
or
cmp
roll
enter
pop
pop
dec
clc
imul
inc
mov
lods
adc
outsl
mov
shll
shll
cli
jecxz
arpl
lahf
cli
mov
push
cmpb
je
or
rcll
add
popa
cmp
int
into
stc
jo
xchg
pop
push
outsl
ret
fnstenv
test
mov
mov
mov
shr
ror
fwait
in
dec
out
in
pop
sbb
ss
and
or
sahf
inc
xlat
int
addr16
mov
mov
mov
subb
lds
iret
arpl
xchg
or
and
sbb
js
or
mov
jnp
mov
lea
push
xor
lds
bts
xor
test
out
pop
xchg
sub
icebp
sbb
sbb
cli
movb
popf
cmp
dec
icebp
popa
cltd
sbb
mov
outsl
lret
dec
fldenv
dec
insl
fcmovnb
push
dec
sub
call
loop
push
imul
mov
xor
push
push
and
lds
pop
jbe
or
and
mov
mov
movsl
inc
jns
mov
sti
stos
pusha
aaa
into
push
andb
pop
mov
dec
iret
inc
sub
scas
ret
xor
sbb
pop
lock
enter
ret
inc
push
ficompl
and
sub
cmpsl
pop
in
pop
data16
xor
cltd
es
popf
cmc
adc
add
fistpll
imul
inc
test
mulb
sahf
sti
jb
scas
pushf
out
je
pop
aas
lahf
cmp
mov
dec
in
jbe
add
mov
mov
xchg
adc
inc
pusha
push
insb
xchg
xchg
or
in
lea
fmul
mov
or
mov
mov
iret
aas
xchg
movsb
lods
or
aad
jb
jle
lock
xor
jne
icebp
iret
sti
int3
pop
loope
add
dec
adc
jmp
rcrl
fcoml
jle
bound
xchg
in
jae
and
xchg
fsubrs
aam
insl
aam
xchg
mov
add
and
lock
dec
sbb
in
daa
xchg
add
aas
int
into
cltd
lahf
in
scas
sbb
addr16
mov
nop
das
adc
mov
hlt
mov
loop
aas
mov
or
push
pop
fisubrl
mov
adc
push
popa
loopne
in
ret
sti
pop
mov
in
jmp
popa
lods
je
movl
mov
xchg
ret
testl
shrd
jb
in
ljmp
mov
lock
xor
out
es
mov
shrb
inc
out
arpl
cmpl
adc
lock
or
cltd
inc
xchg
dec
hlt
loope
insb
pop
add
jns
or
inc
jg
sti
mov
and
outsb
stos
pop
in
clc
pushf
fldt
imul
bound
pop
push
pop
push
popa
inc
jge
pop
into
and
out
inc
movsb
lods
xchg
outsb
push
jl
imul
sti
jae
repz
cld
hlt
ljmp
sub
push
addr16
or
mov
mov
pop
jbe
ljmp
ds
cmp
movsb
clc
daa
pop
jns
cmp
mov
xchg
and
fildl
rcrb
in
cmpsl
mov
rorl
popa
test
sarb
rcrl
lock
dec
jecxz
aad
xlat
jns
cwtl
jnp
push
lds
imul
out
mov
cmc
cli
mov
sarb
inc
aaa
setp
mov
inc
out
mov
call
shrb
dec
adc
pushf
dec
popf
adc
aad
popa
push
jg
and
xchg
push
add
mov
std
notl
sahf
lret
jno
inc
mov
add
sub
hlt
je
dec
xorb
dec
out
mov
test
fisubs
xchg
mov
in
cmpsb
repz
sub
fildl
scas
push
push
jl
inc
mov
or
lods
sahf
adc
pop
add
stc
das
inc
test
mov
lods
bound
inc
cmp
les
data16
int3
push
flds
dec
dec
sbb
cs
or
add
aad
out
pusha
nop
dec
mov
sbb
mov
fisubrl
mov
rcll
aaa
sbb
inc
sbb
adc
pusha
push
pop
cli
xchg
lret
adc
add
cmpb
sahf
popa
sbb
add
std
pop
mov
clc
push
jne
roll
pop
xchg
popa
shll
cmp
lock
lods
dec
les
inc
mov
mov
sbb
pop
pop
lds
fs
int
mov
lock
pop
pushf
push
add
inc
mov
adc
ja
push
cs
cmp
fbld
sarb
out
mov
jmp
imul
add
push
mov
loop
dec
jecxz
jae
dec
sub
test
mov
test
xchg
cmp
cmp
test
cmpsb
imull
sbb
repnz
push
les
lret
xor
into
mov
jno
and
loope
stos
push
loop
cwtl
sbb
jge
mov
dec
cmp
sbb
jnp
icebp
faddp
sub
stc
add
cli
retw
inc
sub
jae
loop
inc
loope
xor
and
cmp
repz
jl
frstor
or
or
mov
dec
mov
ret
imul
xchg
pop
cli
sar
in
sbb
jl
loop
out
jne
mov
cwtl
call
sub
cwtl
or
out
addr16
loopne
in
mov
sub
mov
push
fimuls
or
aad
ss
ja
jns
push
fcmovne
scas
mov
out
cld
rolb
mov
test
pushf
pop
pop
pop
pop
aaa
mov
sarl
push
mov
ljmp
or
push
rorl
rclb
adc
sbb
jo
and
dec
aaa
pop
mov
mov
mov
dec
pushf
cmp
in
in
imull
jl
js
das
or
cmp
in
inc
out
and
std
into
pushf
sub
dec
jl
mov
outsb
ds
imull
hlt
mov
mov
push
dec
inc
hlt
stos
mov
test
xchg
and
sub
mov
or
inc
js
mov
les
inc
push
mov
test
adc
add
imul
mov
jg
in
push
mov
pop
scas
dec
outsb
lahf
or
pop
daa
jle
push
ret
movsl
adc
sbb
xchg
xchg
pop
sub
push
lods
repnz
and
mov
inc
outsl
xor
jle
cwtl
and
mov
adc
lahf
gs
shrl
inc
dec
mov
xor
ljmp
push
xchg
inc
movsb
call
aas
pop
lea
stos
mov
nop
add
out
or
iret
fistpl
fistl
pop
sub
pop
out
and
mov
sbb
cli
jp
adc
dec
mov
in
mov
mov
dec
dec
cli
jmp
cld
fbstp
fisttps
xor
inc
pop
push
movsb
in
xchg
enter
add
adc
std
pop
fiaddl
iret
test
in
mov
aam
std
fcoml
lock
jnp
leave
faddp
pop
js
dec
add
xchg
mov
xchg
push
lods
mov
push
loop
pop
add
in
xchg
sub
iret
cmc
aam
fiaddl
incb
outsl
mov
lds
jmp
jns
mov
daa
out
pop
clc
adc
sarb
mov
shr
or
mov
repz
push
lahf
mov
mov
pop
adc
pop
cmc
dec
imul
and
repnz
xor
ljmp
adc
frstor
adc
into
mov
push
hlt
cmp
sbb
divl
je
jg
lea
adc
xor
inc
xchg
and
push
pop
push
and
mov
clc
dec
inc
aas
shrb
addr16
mov
jge
pop
push
mov
sub
arpl
mov
decb
pushaw
cmp
pop
mov
add
fdivl
shrl
xor
fisttpl
sub
mov
cmpsb
cwtl
dec
mov
clc
mov
int3
stc
outsb
out
in
push
movsb
inc
sbb
jle
pop
fcomps
or
mov
sub
mov
and
test
arpl
xorb
loop
dec
enter
push
xchg
lcall
cli
mov
test
mov
mov
pop
push
mov
mov
add
push
rdpmc
int3
dec
mov
push
mov
adc
xchg
push
mov
daa
gs
mov
dec
push
push
hlt
cmc
mov
mov
xor
xor
and
jg
pop
mov
push
mov
mov
int3
sbbb
cld
xchg
or
mov
test
jmp
insl
lea
fstps
sub
xor
cld
lea
push
cmp
fnstsw
push
or
xchg
fucomi
mov
stos
and
xchg
pop
das
dec
nop
sbb
out
jg
sbb
test
stos
leave
add
or
mov
cmp
sub
inc
jg
mov
pop
popf
int
jmp
jae
inc
sahf
adc
stc
mov
sbb
or
add
mov
repnz
mov
xor
xor
fmuls
outsl
xchg
inc
aaa
sbb
dec
cmpsl
mov
push
rorl
push
cmp
js
pop
sbb
pushf
fcoms
fiaddl
push
jnp
add
dec
negb
cmpb
lcall
mull
das
jno
or
sub
outsl
cmc
leave
fistl
inc
xchg
js
or
clc
inc
andl
or
popa
rcr
into
cmp
les
fs
and
pop
push
movsl
cmc
xchg
add
dec
and
mov
xchg
push
xchg
adc
dec
lds
adc
pop
mov
xchg
movsl
and
imul
ret
ds
dec
bound
xor
mov
xchg
mov
les
ja
xchg
and
xchg
ss
jge
sbb
add
cmp
cwtl
enter
enter
arpl
xchg
clc
les
loop
inc
jae
push
ret
aas
outsb
and
out
push
jbe
cwtl
pop
shll
mov
sub
lock
jmp
pusha
repnz
xchg
mov
jp
ret
aam
sbb
mov
cmp
cmpb
mov
push
or
push
sbb
jge
sbb
dec
fdivrs
in
popa
mov
sbb
add
outsb
pop
or
das
imull
dec
je
shlb
inc
mov
sbb
movsb
pusha
inc
cmpsl
sbb
nop
push
es
hlt
mov
dec
jge
jnp
aas
mov
mov
cld
xchg
xor
loop
das
fmuls
and
mov
outsl
cld
add
lods
out
jnp
scas
dec
call
stos
xchg
xchg
out
jbe
and
clc
aad
adc
pop
pusha
dec
push
inc
lods
mov
mov
jle
xchg
jmp
inc
cs
mov
dec
int3
daa
fwait
xchg
cmp
subb
loop
sbb
or
sbb
xchg
mov
dec
imul
aas
cwtl
inc
mov
cltd
mov
cmp
pop
pop
lahf
push
nop
cmp
sarl
adc
ret
jno
in
rcrl
push
jne
cmpsb
movd
idivb
je
jnp
inc
sub
jno
fwait
jge
lcall
mov
inc
stos
pop
mov
mov
test
pusha
pushf
mov
xchg
xchg
or
mov
jb
inc
add
mov
or
mov
repz
lods
push
aad
mov
mov
pop
testb
xchg
cli
cli
lret
dec
je
add
test
imul
xor
inc
arpl
cli
pop
cwtl
shlb
hlt
fincstp
ret
aaa
sub
dec
adc
lret
fcmovbe
mov
jecxz
and
xor
ljmp
xchg
and
ljmp
loop
stc
cmp
mov
pop
jmp
sub
jge
or
mov
mov
jle
mov
movsl
subb
sub
jmp
fs
les
cmp
sbb
jne
scas
pop
loop
mov
mov
loop
cmp
sarl
adc
mov
js
xchg
and
les
or
push
lock
dec
sbb
sbb
je
mov
push
mov
gs
xchg
loopne
mov
int
test
sarb
and
pusha
inc
pop
mov
rcll
pop
shll
imul
addr16
cwtl
xor
popa
mov
test
jecxz
inc
repnz
int3
mov
daa
sti
xchg
sbb
push
sti
outsl
lods
mov
inc
or
or
push
pushf
js
jno
fwait
dec
rolb
loop
push
stc
or
mov
xchg
ficoms
mov
sbb
aaa
jo
popa
mov
inc
or
loope
popl
aas
stc
add
lahf
pop
popa
cld
lock
pop
cs
sbb
and
cs
lock
daa
xor
cmp
jecxz
sahf
inc
clc
addb
shl
add
in
icebp
jb
cmpsl
es
mov
fnstcw
ja
jl
repnz
pop
mov
jp
push
out
inc
mov
jg
sbb
mov
cld
lds
and
shll
jo
shll
jne
mov
clc
adc
insl
sbb
mov
popa
cs
and
enter
push
out
notb
cmp
loop
jg
adc
daa
dec
sbbb
daa
jbe
fcoms
add
aad
inc
clc
jae
out
add
jae
push
dec
daa
adc
xor
scas
adc
xchg
ret
adc
loopne
and
mov
std
cmpsb
jl
loopne
xor
and
lea
aas
mov
xorb
jge
xchg
sub
add
mov
dec
push
mov
sbb
test
jl
outsl
insl
cmp
mov
jns
push
mov
sub
and
mov
cmp
sub
jae
movsb
in
pop
jecxz
and
or
push
lret
roll
out
adc
test
fs
and
int
aaa
sub
adc
pop
jle
clc
dec
sbb
dec
imul
cld
mov
ljmp
iret
test
mov
mov
push
pop
xchg
xchg
lods
repz
add
ja
push
ret
xchg
pop
das
imul
mov
xor
stos
cmp
notl
inc
inc
add
data16
insb
and
xchg
es
adc
add
imul
aam
pop
cmp
enter
jo
mov
paddsw
or
add
test
or
clc
fidivl
jns
and
sarl
in
scas
push
jecxz
fdivl
clc
cs
es
sub
fcoms
push
xchg
inc
notb
xchg
ljmp
fwait
mov
lods
cmpsl
xor
or
fs
ror
insb
adc
xchg
xor
sbb
dec
jo
inc
out
outsl
divb
int3
mov
or
xor
mov
jmp
stos
pusha
js
jp
dec
icebp
int3
sbb
movsb
fistps
lahf
das
aaa
push
outsl
dec
sbb
mov
sbb
repz
add
mov
repnz
cmpsl
lods
imul
arpl
fisubl
insl
ficoms
cmp
stos
xchg
xchg
mov
js
or
iret
ret
inc
fcomp
cmc
stc
outsl
inc
clc
stos
stos
imul
std
push
dec
xlat
sbb
xchg
mov
lcall
and
pop
mov
movaps
pop
fimuls
cmp
xchg
jbe
mov
stos
movsl
push
scas
jg
xchg
mov
push
das
xor
scas
mov
cltd
rcr
adc
xor
pop
out
icebp
cmp
mov
jecxz
data16
cmpsl
mov
cmpsl
movsl
movsl
xchg
pushf
push
lods
push
jnp
rcr
pop
in
pop
jnp
add
cwtl
mov
test
mov
inc
pop
imul
das
addr16
popa
inc
pop
sub
loop
adc
push
repz
cld
add
push
jg
push
adc
les
push
insl
fsub
push
das
pop
adc
add
xchg
add
adc
adc
pop
lret
addr16
ret
sbb
inc
xchg
in
aaa
sahf
cmp
pop
or
mov
sarb
jmp
ret
xchg
cmp
mov
psrlw
jecxz
ss
das
pop
movsb
test
cld
repz
sbb
or
cmp
in
mov
popf
dec
inc
add
aas
loope
pop
inc
mov
or
test
out
fwait
push
mov
mov
cmc
pop
mov
mov
and
leave
jno
popf
cmp
adc
mov
adcl
cmp
push
and
fcomps
adcl
dec
jge
inc
loopne
les
leave
lret
jnp
ret
pop
dec
pop
add
mov
cmp
xchg
xchg
cmp
ret
icebp
mov
lds
pushf
sbb
xchg
pop
nop
adc
subl
mov
push
mov
bound
pusha
mov
insb
jae
in
mov
gs
pop
lods
cmp
mov
dec
sbb
sbb
je
xor
and
mov
jmp
push
add
inc
mov
ficoml
push
es
fldenv
sub
out
jl
jo
fcmovb
sbb
movsb
mov
jae
insl
cmp
call
cmp
push
data16
mov
mov
and
bound
add
cmp
push
ljmp
sub
add
outsb
idivl
and
decb
fldt
xchg
inc
lar
insl
inc
leave
jno
xlat
fnsave
ljmp
stc
cld
lret
cmp
jne
xchg
sahf
loope
popa
leave
inc
scas
mov
mov
mov
das
int3
rcll
xchg
add
cltd
fidivrs
repz
fdiv
mov
sub
mov
ficoml
jg
out
xchg
in
or
andb
mov
mov
adc
and
push
les
adc
insl
sarb
es
pop
andb
nop
jne
jnp
rorl
mov
call
jae
sub
call
fidivs
ja
mov
icebp
or
lods
in
cmp
gs
cmc
fwait
aas
or
jg
and
out
inc
cli
pop
les
les
icebp
dec
rclb
pop
clc
test
inc
jp
lret
xchg
inc
sti
mov
sbb
push
ja
or
cmp
int
cld
mov
dec
dec
arpl
test
sub
fbstp
add
xchg
or
pop
add
mov
mov
xchg
daa
pusha
in
ret
mov
jne
outsl
cli
pop
lods
cltd
dec
in
fdivp
sbb
test
xchg
sbb
mov
dec
adc
fnstsw
insb
dec
pop
icebp
mov
popa
xchg
insb
aaa
cmpsb
jmp
mov
inc
shrl
and
push
xor
jle
leave
enter
push
sub
cmc
adc
and
scas
bound
sahf
rcl
lahf
or
or
xor
mov
es
ret
mov
push
sbb
imul
scas
sub
out
pop
aaa
and
inc
loope
jg
sbb
inc
in
iret
stos
subl
xor
mov
addb
and
xchg
rcrl
ss
mov
xchg
arpl
fs
inc
in
pop
lea
and
xor
lahf
cmc
cmp
call
std
push
mov
jmp
pop
aas
mov
std
mov
push
mov
arpl
pop
pushf
jae
movw
in
cs
push
sub
cmpsb
in
lahf
int
mov
in
pop
pop
pop
jnp
pusha
or
shrb
mov
jnp
iret
pop
dec
decl
lds
sbb
mov
rolb
cwtl
negl
pop
fucomip
sub
cli
adc
negl
scas
push
jge
inc
out
adc
loope
push
add
mov
test
clc
ficompl
xor
mov
lahf
fildl
insb
mov
and
jo
pop
jl
shlb
sbb
jbe
add
jbe
inc
and
cmp
clc
lcall
mov
mov
sub
jno
adc
sub
lea
push
pop
pop
outsb
pop
mov
jge
mov
sub
pop
lock
popf
ljmp
mov
cwtl
xchg
js
xlat
data16
icebp
xlat
and
xchg
clc
sbb
cmp
bound
out
jne
ja
lods
xor
sarb
sbb
add
mov
test
dec
xchg
push
add
jb
sub
outsb
fnstenv
mov
mov
das
ss
ret
ret
cmp
jns
add
xchg
aas
mov
add
pop
adc
mov
mov
pusha
push
sarl
dec
stos
mov
cmp
aam
and
sub
xor
rclb
dec
subl
arpl
lret
test
add
es
mov
pop
loope
dec
in
ljmp
in
xor
dec
mov
adc
movsl
pushf
call
xor
subl
repnz
lds
ror
ficomps
in
and
out
pop
adc
daa
and
out
sub
dec
outsb
jle
push
dec
mov
aad
hlt
stc
adc
mov
dec
sarb
loope
or
inc
pop
mov
jne
test
es
out
out
ficoms
fnstcw
jle
int
xor
adc
int
popf
les
int3
lods
test
sub
sub
sti
jg
adc
mov
jno
mov
cmp
jne
enter
add
push
lock
sub
lcall
mov
test
jmp
or
rclb
inc
in
fidivrl
aad
push
js
jb
leave
adcb
dec
int
andb
xor
add
fnsetpm(287
cmp
pop
mov
daa
ds
pop
cmp
jae
inc
loope
test
mov
push
fsubrs
mov
mov
in
aad
sti
ljmp
scas
inc
push
pop
lea
ret
pop
les
cltd
stc
and
xchg
out
sbb
sbb
lds
mov
movsl
lahf
call
xor
mov
jmp
inc
sbb
adc
lahf
xor
inc
js
repnz
pop
cmpl
and
scas
adc
mov
pusha
sbb
dec
stc
in
rorl
mov
xchg
lea
pop
push
insb
out
xchg
std
fmul
aam
addr16
fsubs
or
mov
jne
outsb
mov
mov
imul
xchg
leave
in
das
mov
fcoml
xchg
cmp
inc
jb
fbld
testb
ffree
sub
lock
or
aas
adc
int
and
mov
aam
mov
inc
mov
jbe
jp
and
and
pop
pop
or
adc
cs
cmp
cli
bnd
arpl
fcompl
push
sbb
lock
jmp
pop
stos
push
fmul
xor
push
add
jge
daa
push
popa
aad
or
scas
jle
lcall
out
pop
push
mov
mov
mov
mov
jp
cltd
popa
loop
dec
xchg
lret
imul
pushf
mov
dec
mov
mov
push
xchg
inc
jmp
pop
mov
xchg
push
mov
sub
fdivrs
and
vpmullw
idiv
mov
and
lea
imul
out
adc
add
xor
xchg
into
push
jae
cvtdq2ps
mov
aas
pop
sub
scas
sub
jle
scas
inc
sub
repz
sub
push
sub
mov
adc
int3
iret
xchg
cld
xchg
mov
adc
in
xchg
mov
mov
pusha
pop
add
pop
inc
adc
inc
adc
xor
mov
xchg
fsub
push
aaa
pop
dec
daa
sub
pop
dec
gs
aas
add
mov
cmpsl
jmp
dec
xchg
jge
comiss
insl
repz
sub
ja
push
xchg
dec
lret
stos
js
in
addr16
out
adc
sti
or
dec
orb
push
stc
add
sahf
in
jg
pop
data16
ss
mov
test
push
inc
jl
sbb
push
push
jne
fcompl
pop
push
sbbb
cmc
mov
mov
aad
jmp
loopne
push
pusha
push
int3
rcl
dec
mov
outsb
hlt
sarb
add
repnz
jns
mov
pop
das
and
sbb
pop
aaa
push
inc
test
clc
out
sub
bnd
clc
pop
mov
shl
add
mov
sbb
sub
pop
jl
popl
sbb
arpl
cmpb
ja
loope
xchg
mov
jecxz
imul
push
in
aam
jl
outsl
lahf
pop
sub
shl
popf
lret
std
repnz
ss
stc
out
pop
fsubp
xchg
cmpl
inc
loopne
leave
gs
cli
and
mov
jno
setnp
add
stos
add
mov
sub
jle
fcomps
mov
lcall
cltd
mov
inc
mov
xor
pop
pop
jle
mov
movsb
mov
push
mov
cmp
aad
subb
jbe
mov
jbe
addr16
xor
add
mov
adc
lret
push
test
stos
daa
adc
sbb
mov
dec
push
test
sub
or
mov
arpl
shr
in
std
dec
lods
push
cmp
sub
and
cmp
divb
movsl
push
mov
lea
adc
lret
mov
dec
clc
scas
sub
mov
aad
adcl
cltd
mov
push
test
jmp
bound
testl
cld
pop
out
inc
mov
add
ja
sub
cmp
adc
pushf
imul
cs
outsb
iret
pop
cs
pop
nop
int
jp
lods
mov
in
push
roll
gs
fs
sti
stos
mov
xchg
pop
fadds
fs
mov
pop
xor
pushf
add
xchg
loopew
inc
sar
adc
sub
inc
daa
pop
scas
subl
sbb
and
mov
neg
pop
in
subb
aam
mov
pop
add
sarb
call
dec
or
cmp
sbb
cmp
lods
add
pop
out
fcomi
insl
jge
insb
xchg
sub
push
sarb
sub
jmp
or
xchg
jle
adc
mov
sub
inc
ret
push
cld
jecxz
push
aad
jmp
ljmp
push
imul
daa
jns
xor
lock
mov
fcmovnb
or
stc
fsubs
sub
mov
imul
orl
lea
push
add
xlat
popf
xchg
cmp
push
inc
test
pop
push
loop
ret
add
js
fbld
mov
or
mov
add
cmpsb
inc
inc
sbb
cltd
ret
pop
repnz
jle
ret
inc
add
mov
mov
ret
xor
push
lcall
js
fimuls
pop
lahf
mov
mov
test
out
pop
mov
jae
lock
stos
mov
xlat
mov
dec
js
jle
jle
mov
pop
out
mov
enter
je
add
insb
scas
inc
cmp
pop
out
sub
cmpsb
jbe
adc
xor
out
xor
jle
imul
inc
cltd
xchg
mov
test
repz
lods
decb
das
pop
push
xchg
in
mov
xchg
add
daa
mov
insb
int3
mov
and
cli
sbb
pop
inc
mov
pop
scas
or
icebp
ss
pop
arpl
into
enter
leave
test
or
sbb
xchg
cltd
pop
pop
and
mov
pop
pop
data16
sbbl
aad
fcomip
pop
adc
xchg
das
imul
mov
pop
in
jmp
ljmp
xor
mov
pusha
out
pop
jecxz
pop
lahf
pushl
int
out
cld
lock
xor
or
imul
inc
lock
pop
mov
test
cmpsl
ja
pop
jae
sbb
lock
pop
mov
and
push
add
pop
and
xor
insl
das
add
fwait
dec
outsl
sbb
and
ja
push
mov
outsl
jae
xchg
fxch
ds
fstpl
ja
dec
mov
dec
out
mov
sti
pusha
inc
fsubl
jmp
test
out
iret
inc
imul
sub
pop
imul
mov
dec
dec
stc
cmp
add
lcall
mov
gs
daa
fcomps
mov
mov
push
push
and
cmpb
mov
fisttpll
je
roll
or
lahf
arpl
push
xor
sub
hlt
cwtl
outsl
int
pop
mov
testb
mov
outsl
push
sub
sbb
mov
pop
mov
data16
push
xchg
lock
out
in
mov
in
push
out
fwait
push
cltd
jno
fstpt
adc
sub
xchg
sbb
bound
fistps
mov
pop
mov
test
mov
mov
jp
fdivrs
mov
orl
shrb
jae
clc
fldenv
push
repz
es
jnp
push
sbb
add
inc
int
ja
push
test
or
push
sbb
xchg
loope
jo
insl
adc
movsl
xchg
add
fs
out
lods
fildll
repnz
div
mov
sahf
pop
mov
scas
jbe
int
adc
pop
out
push
pop
loope
aaa
aam
add
pusha
ja
add
pop
push
sbb
xchg
fwait
push
clc
leave
jae
add
mov
add
scas
inc
sbbb
loopne
add
mov
lods
xchg
stos
sbb
xor
icebp
outsl
mov
push
mull
sub
sbb
inc
test
fxtract
sub
and
or
mov
mov
es
mov
mov
jno
add
push
inc
sbb
dec
sub
out
mov
scas
jle
fs
shrl
mov
jmp
outsl
aam
out
xchg
adc
mov
in
xlat
sub
das
scas
sub
dec
out
adcl
pop
or
lods
sbb
or
enter
lret
leave
mov
dec
loope
and
loopne
sahf
inc
add
fcmovb
cmpsb
mov
push
shrb
ret
sbb
ss
jae
stos
jb
movsl
mov
cmc
test
imul
scas
fwait
leave
cmp
test
mov
nop
cmp
adc
xchg
or
xlat
cmp
flds
push
mov
pop
and
in
frstor
fistpl
inc
addr16
fs
add
mov
xchg
mov
xchg
fs
mov
mov
gs
cmp
mov
xlat
gs
aad
mov
movsb
insl
out
js
pop
adc
paddsb
data16
test
jp
mov
lea
dec
adc
cmp
test
mov
add
dec
pop
addr16
and
mov
mov
xchg
inc
mov
push
lret
mov
or
cmpsb
subl
mov
imul
and
scas
movsb
shll
sbb
std
repz
mov
movsb
mov
dec
imul
push
insl
push
add
dec
jg
or
jbe
add
mov
xchg
arpl
cmp
dec
mov
test
cltd
jbe
fcmovnbe
jnp,pt
mov
out
xchg
and
pushl
cmp
mov
jo
mov
sub
mov
stos
xor
mov
dec
in
aaa
xchg
dec
or
push
inc
push
push
push
adc
dec
mov
loopne
or
pop
mov
jge
mov
jle
xor
adc
mov
or
dec
push
jbe
xchg
dec
popf
dec
or
jnp
xchg
xchg
jns
cli
out
jbe
cwtl
in
xor
daa
call
fildll
inc
insb
rclb
pop
aad
sub
add
inc
das
pcmpeqb
push
je
lods
outsb
pusha
fdivp
jnp
add
in
dec
pop
add
xchg
lock
cli
or
and
lret
ret
popf
fsubr
xchg
icebp
xlat
fdivrl
pop
bound
aas
orl
push
adc
xchg
popf
mov
lea
pop
popa
fisubrs
cltd
stos
cmc
add
ret
push
sbb
sbb
cmc
lock
inc
and
push
push
out
stos
jne
movsb
adc
dec
jnp
scas
xchg
fmulp
or
lods
ljmp
jne
cltd
cmp
mov
jb
add
into
rcll
adc
stos
adc
lret
scas
xchg
mov
jne
dec
push
push
paddusb
faddl
pusha
or
nop
call
or
es
jmp
xor
pop
out
das
push
pop
xlat
bound
xlat
pop
pop
dec
in
sbb
gs
frstor
jmp
mov
xchg
fiaddl
aam
push
jg
cmp
imul
xchg
in
mov
xchg
cmpsb
inc
pop
enter
sbb
fstpt
mov
fstps
inc
xchg
jg
cmp
xlat
out
cltd
and
sub
in
add
loope
cli
mov
int3
lods
in
and
pop
jle
jp
enter
xor
push
jne
sti
xchg
pop
push
xlat
movsb
imul
add
std
xchg
aam
xorb
cmp
xchg
mov
inc
fcmovnu
cwtl
xchg
add
cmc
xor
cmpsb
test
rolb
cmp
lock
loopne
ficoml
pop
cmp
test
jbe
es
pop
or
movsl
jg
cmc
fistps
or
int3
or
and
loopne
lock
adc
bound
pop
sub
jge
in
dec
cmp
jmp
sub
push
jp
out
fucomip
jno
cld
loopne
movsl
das
arpl
lock
sub
ret
mov
mov
push
clc
push
or
adc
cmp
aas
sbb
hlt
aam
sub
or
dec
rorb
mov
sub
enter
push
out
pop
and
xlat
pusha
fmuls
into
xchg
iret
pop
jo
mov
movsl
in
and
out
mov
mov
movsb
or
jno
mov
mov
pop
or
pop
mov
or
and
jle
out
mov
or
cmp
mov
jns
fnstcw
xchg
pop
xorb
adc
adc
push
push
xchg
mov
rcl
push
mov
cmp
loope
imul
push
in
movsb
xchg
inc
aam
in
pop
add
add
das
lods
cltd
jne
shr
add
adc
xchg
mov
jp
pop
push
dec
adc
cmp
out
xchg
arpl
sti
imul
into
out
adc
mov
inc
jge
hlt
sbb
jle
inc
clc
lds
insb
adc
movsb
sbb
sub
mov
lods
pop
test
sarb
pop
add
add
add
outsb
cli
fnstcw
imul
cwtl
andl
nop
jno
lcall
mov
inc
sti
dec
mov
out
cmpsl
cli
xchg
js
or
mov
sub
adc
inc
fbstp
mov
sbb
or
push
out
jo
test
out
es
adc
or
xchg
inc
xchg
popf
arpl
push
ja
lods
adc
mov
sbb
dec
jecxz
shrl
aas
xor
jno
push
xchg
xchg
aad
and
int3
inc
mov
dec
sub
in
mov
mov
inc
jmp
and
and
dec
xchg
push
and
mov
cmp
test
les
shl
sarl
mov
andl
sbb
in
nop
rol
int
sub
insb
nop
push
bound
dec
xchg
inc
ret
hlt
mov
adc
mov
sahf
and
dec
ja
cmp
mov
cmp
das
xor
call
adc
lahf
pop
mov
xorl
sbb
pop
sbb
dec
inc
xchg
push
sbb
insl
cmp
or
mov
repz
mov
jp
jg
pop
ss
out
out
pop
mov
pcmpgtd
jnp
call
repz
imul
int
movsl
and
adc
inc
and
gs
cli
pop
test
mov
cmp
arpl
mov
fsub
push
xor
add
or
jl
push
nop
repnz
shl
fucomi
ret
xor
imul
mov
mov
push
mov
mov
imul
lods
nop
hlt
mov
out
pop
loope
xor
lcall
ja
xorl
aaa
and
mov
ss
dec
mulb
es
aas
stos
divb
test
cli
xchg
push
mov
les
sub
adc
push
inc
sbb
int
mov
add
jbe
push
jo
xor
cmp
xchg
sbbb
pop
ret
movsb
scas
fsubs
jnp
fwait
xchg
fildll
mov
adc
fsub
es
sub
fisttpll
adc
loope
jmp
push
pop
pop
dec
xchg
push
imul
mov
lock
xchg
in
lock
ret
xor
popa
movswl
pop
or
push
int3
sub
push
lret
xchg
or
mov
mov
arpl
xchg
xor
fildl
sbbl
test
lea
dec
cmc
fimuls
cmpsl
mov
xchg
decb
subb
sbb
enter
gs
iret
mov
ss
mov
data16
mov
lret
dec
xchg
adc
sbb
fwait
insl
gs
or
jg
inc
in
popa
push
cmp
cmp
dec
mov
xor
daa
cmp
out
or
push
es
mov
cwtl
xchg
insl
cltd
iret
stos
pop
mov
ret
movsb
mov
idivb
rclb
sbb
idivl
jo
cmp
mov
push
in
dec
cmp
add
xor
ds
test
sub
cs
mov
pushf
fcompl
stc
sar
shl
and
pop
mov
outsb
mov
popa
and
inc
negb
mov
mov
sbb
daa
shlb
ds
inc
aad
out
add
pusha
xor
sbb
vcvtsd2ss
jg
push
movsb
aas
sahf
push
sbb
fsubr
cs
dec
mov
outsb
loop
mov
out
pop
in
shll
push
pop
jns
ds
out
adc
cmp
and
xchg
stc
scas
dec
insb
xchg
mov
mov
pop
cbtw
cli
mov
cmpsl
or
push
dec
mov
dec
xchg
pop
mov
pushf
ftst
adc
loope
push
mov
in
inc
loopne
insl
ret
mov
xchg
pop
adc
cld
dec
subl
sub
movsl
jmp
loopne
test
jbe
in
aam
mov
stos
sbbb
xlat
mov
xor
gs
mov
add
lock
nop
clc
daa
loopne
sub
flds
dec
xchg
or
lahf
movsb
call
xor
fisttps
imul
add
out
movsl
loope
call
xchg
cmp
repnz
push
std
in
cmp
jmp
mov
out
xor
in
stc
xchg
fs
push
jbe
and
enter
pop
aad
hlt
sbb
pushf
outsl
pushf
sbb
sahf
push
rcll
add
dec
pushf
scas
sub
mov
jnp
mov
jne
mov
pop
add
xor
iret
cmp
psubsb
pusha
cmp
out
daa
mov
jns
add
inc
adc
mov
and
ja
xor
mov
fwait
cs
mov
pop
test
dec
sbbb
aaa
movsb
pop
out
dec
insl
imul
shlb
push
and
js
adc
adc
test
rorb
daa
mov
lret
pop
cmp
push
out
fstpt
fdivrs
aaa
insb
aad
ja
iret
sub
mov
pop
push
dec
icebp
cmp
push
jle
mov
push
or
je
or
lahf
xor
cs
inc
xchg
clc
pop
inc
rcll
pop
cmpl
sbb
jp
fld
ficoml
inc
nop
es
and
clc
std
test
cli
mov
vpminub
fidivrl
outsl
ret
sbb
sti
leave
mov
mov
pop
stos
fwait
std
stc
pop
xchg
pop
fdivs
cld
ss
mov
push
fisubl
adc
cmp
xor
sbb
adc
popa
cmp
popf
lods
iret
xchg
add
xor
xor
cmp
imulb
jp
dec
test
cltd
call
lret
xchg
dec
mov
xor
mov
mov
mov
mov
out
sbb
lret
fdivrl
test
mov
pop
repnz
adc
aaa
push
cmp
fisubrl
les
jge
roll
dec
cmpsb
cmpl
loopne
fisubrs
cmp
outsb
dec
repz
je,pn
dec
push
dec
mov
add
outsl
mov
enter
je
mov
out
dec
cmp
in
add
sbb
addb
int3
jecxz
fnstenvs
movb
push
sahf
imul
and
jle
xchg
sbb
mov
lahf
dec
lret
or
cmp
and
es
sti
mov
or
inc
scas
push
and
fcmove
sti
sub
icebp
daa
test
sti
pop
and
pop
xor
movups
std
in
lret
sub
push
jmp
cmpsb
test
or
data16
jbe
data16
fistpl
rcrb
das
js
push
jns
mov
dec
mov
and
pusha
jle
negl
loopne
adcb
jb
lret
ja
outsb
push
mov
incl
add
fists
or
mov
dec
mov
inc
ret
lret
les
clc
stos
jnp
jl
jae
in
mov
pop
adc
dec
push
shrd
sub
dec
dec
shlb
xor
jne
mov
pusha
sti
sbbb
jge
dec
mov
pop
fldl
or
fs
fimuls
sbb
or
lds
imul
sbb
mov
scas
xchg
push
add
nop
xchg
cmpsl
arpl
dec
mov
mov
mov
xor
addr16
push
jl
jmp
mov
inc
mov
sub
stc
adc
jo
gs
imul
sbb
pop
mov
subl
mov
sbb
and
cmpsl
xor
xchg
add
jbe
adc
push
jecxz
pop
nop
add
add
push
xlat
sbb
repz
imul
adc
in
cmpsb
and
sbbb
push
cmp
cwtl
nop
push
dec
pop
push
mov
sbb
test
or
leave
mov
pushf
inc
inc
push
add
jecxz
jle
mov
sbb
dec
stos
mov
js
push
in
dec
sbb
fcomip
int
in
push
aam
jae
push
cmp
inc
arpl
push
sbb
loopne
add
scas
jecxz
cmp
fdiv
push
jae
mov
ffree
xchg
es
jmp
mov
and
mov
jbe
lret
iret
fbld
pushl
in
insl
std
xlat
test
inc
or
cwtl
fcoms
fldt
cwtl
mov
sbb
lock
inc
xchg
cmp
xchg
mov
sub
and
nop
jb
push
xchg
pop
fbld
scas
flds
cld
sahf
sbbl
outsl
pop
push
repnz
jmp
add
stc
sti
push
inc
mov
pop
jl
out
ds
sub
adc
fisttpll
add
jo
push
push
lret
jae
aaa
xchg
mov
sbb
int
push
fwait
popa
in
daa
xchg
cmpb
xchg
mov
mov
add
mov
repnz
adcl
mov
push
pop
or
mov
dec
pop
xchg
mov
adc
or
mov
stos
xchg
sbb
stos
jbe
cmp
pusha
mov
insb
aaa
aam
insb
stos
and
mov
jb
ss
mov
jbe
sbb
or
in
cli
cmc
mov
pusha
inc
pop
xchg
jno
dec
jp
push
pop
outsl
enter
xor
test
stos
cli
and
cmpsl
cmp
inc
sbb
into
std
mov
cs
push
jmp
xchg
nop
xchg
enter
test
cmpsb
mov
dec
add
add
cltd
mov
fdiv
sbb
testl
jg
pop
push
adc
dec
mov
push
sub
cmp
add
xchg
ljmp
fmull
xchg
push
and
das
or
mov
lods
out
lods
xor
xchg
mov
fxch
sbb
and
adc
push
iret
popf
in
testb
sub
mov
insl
jo
in
cmp
or
in
sbbb
dec
insl
sub
push
lock
push
clc
movsb
into
pop
cmpsl
lcall
add
in
mov
mov
and
mov
ss
insl
sub
add
sub
lock
scas
fcoml
data16
sbb
sti
lock
and
mov
pop
fdivl
subl
push
push
shrl
stos
arpl
add
mov
push
push
add
mov
xchg
fnstenv
jmp
jnp
enter
test
dec
cmp
lahf
pop
fildl
fdivrs
xor
int3
adc
add
mov
leave
insl
push
cmp
xchg
cmp
mov
arpl
imul
jbe
mov
jecxz
sub
cltd
cmc
xchg
xchg
ss
adc
int3
jne
out
test
aam
cmpsl
inc
push
adc
sub
pop
outsl
inc
ds
fbstp
mov
aam
lds
and
push
sub
jae
nop
aaa
xor
cmp
or
mov
add
sub
lds
and
fstl
nop
pop
testl
hlt
mov
into
cwtl
jg
push
stos
push
inc
mov
and
icebp
ja
movsb
inc
xchg
repnz
dec
add
push
shll
and
jg
into
push
push
mov
jae
enter
mov
or
xchg
rcrb
in
nop
es
lret
clc
dec
int3
sub
xchg
cmp
push
cs
add
cs
and
cmp
xor
sub
minps
cld
jmp
loopne
mov
cmpsl
sarb
mov
lcall
sbb
das
pop
outsl
cmp
and
outsb
cmp
out
cmpsl
stc
push
rolb
cwtl
pop
fmuls
jne
cmp
jmp
push
adc
dec
push
ljmp
orb
mov
test
in
dec
outsl
testb
js
xor
cmp
and
push
cmpsb
cmc
pop
fbld
jne
mov
test
sub
push
add
add
xor
mov
cmp
insb
pop
push
or
in
push
pop
jecxz
fnstsw
add
pop
add
jl
adc
cmc
arpl
push
sub
add
sarl
mov
leave
dec
outsb
mov
dec
dec
sub
icebp
xor
test
pop
push
pushf
into
sub
mov
push
sti
enter
xchg
sbb
lahf
inc
mov
inc
lret
scas
mov
adc
mov
aas
cmpsb
adc
or
int
mov
rol
sbb
xchg
ret
mov
and
icebp
add
mov
ja
jle
jns
sub
mov
ja
inc
cmpsl
outsb
fisttps
cmpsb
cmp
lcall
xchg
xchg
or
test
shll
jbe
sbb
sbb
ret
mov
pusha
mov
fwait
rorb
xor
fstpt
addr16
add
ja
push
subb
out
push
pop
and
orl
lock
std
std
outsb
sti
mov
jge
xchg
pusha
xchg
mov
pop
out
sbb
cld
xor
bound
cmc
hlt
cmp
mov
hlt
lds
in
je
std
cs
imul
fwait
in
jne
xchg
mov
jb
iret
xlat
inc
push
fs
inc
cmp
mov
inc
push
dec
ret
nop
test
lds
xchg
pop
scas
data16
and
fisttps
fisttpl
fmulp
cmp
dec
rep
xlat
addr16
ficompl
outsl
addr16
pop
in
pop
and
xor
lds
cmc
jae
push
xchg
or
jle
push
add
fisubs
mov
xchg
ljmp
add
clc
sub
mov
mov
xchg
jecxz
aas
mov
inc
and
add
fldcw
repz
ds
mov
rol
or
xchg
mov
pop
xchg
jg
mov
add
sbb
mov
ret
fidivs
mov
jp
xor
dec
push
in
add
pop
xchg
clc
cmpsl
sbb
aaa
fdivr
imul
inc
lock
call
dec
adc
jbe
cmc
mov
inc
mov
in
dec
mov
pop
lret
jb
not
sbb
or
jno
mov
jmp
mov
rorl
js
pop
aam
push
dec
push
xor
test
jl
xchg
loop
cmp
and
mov
or
pop
repnz
repz
mov
mov
stc
scas
or
or
in
arpl
sahf
mov
fistl
dec
jmp
xchg
xchg
fdiv
sub
test
stc
test
mov
pushf
cli
dec
jns
jle
std
outsb
dec
and
add
stc
cmp
jp
jbe
xchg
mov
insl
out
add
xor
mov
add
cmp
sbb
cltd
iret
es
adc
mov
and
daa
test
outsb
add
xlat
sbb
xor
xchg
stos
in
xchg
rcrl
mov
and
mov
push
xor
fadds
jmp
pop
jg
jmp
aam
lds
ret
clc
aaa
push
push
dec
cmp
fnstcw
mov
or
jns
das
cs
out
bts
mov
jge
mov
fisubl
fwait
cmp
mov
sub
xchg
inc
cmp
dec
jne
push
pop
je
add
mov
mov
hlt
js
subb
mov
icebp
iret
setns
fwait
and
scas
sbb
addb
bound
jp
xorb
int
add
loope
push
fcmovb
mov
and
iret
idivl
pop
jb
sbb
adc
lds
xchg
es
jno
mov
xchg
mov
fsubrl
gs
cwtl
add
outsb
adc
mov
and
mov
mov
xor
xchg
loope
fistps
sbb
sub
sub
aam
lods
push
ljmp
cmp
xlat
mov
cmpsl
das
stos
and
cwtl
jle
add
bound
inc
add
add
imul
shlb
lea
and
sbb
jns
sub
adc
pop
mov
xrelease
inc
imul
repz
rcl
or
roll
dec
dec
adc
std
and
out
mov
add
out
jmp
mov
hlt
stos
aas
dec
pop
sub
cld
cmpsl
daa
push
fcmovu
in
adc
mov
mov
imul
cmp
push
and
sar
rcr
xchg
sahf
lahf
pop
dec
rcll
fs
sbb
xchg
movsb
xchg
lahf
mov
push
test
sbb
lock
std
push
cmp
insb
add
pop
cli
mov
sbb
test
sub
test
clc
jmp
repz
sub
dec
ficompl
add
arpl
xchg
into
jge
in
push
out
sbb
or
mov
jmp
ds
int3
dec
cwtl
cmpl
lret
ljmp
aad
push
std
icebp
aaa
xlat
outsl
jns
add
jns
mov
mov
adc
movl
xchg
jge
mov
and
fsubrl
mov
mov
or
push
orb
ret
jmp
xchg
fisubl
cmp
cld
arpl
scas
shrb
cmc
push
sub
mov
adc
cmpsl
mov
mov
inc
push
insb
nop
lods
xchg
ljmp
and
mov
lcall
mov
popa
insb
cmp
inc
cli
mov
push
rorl
aam
les
aad
cmp
xchg
mov
aam
jae
xor
loop
pushf
push
lcall
xchg
fisubrs
xor
rcll
das
xor
outsb
call
insl
ret
mov
inc
fcmovnbe
mov
lret
jl
sub
or
cld
sbb
add
fs
push
outsb
iret
repz
das
jecxz
mov
dec
cmpsl
je
dec
rorl
gs
push
fdivr
out
xlat
cmp
dec
jnp
ja
fs
jl
mov
push
flds
scas
push
rcll
push
shrb
cmp
loopne
cmp
sub
adc
push
xchg
lods
and
dec
push
jp
cmp
rcr
jecxz
sbb
push
mov
inc
mov
sub
mov
aas
fsubp
cwtl
outsl
inc
ret
inc
leave
push
in
movsb
and
push
and
lds
adc
push
inc
mov
test
fwait
xchg
lret
xchg
xor
jmp
divl
fwait
mov
or
mov
jnp
dec
or
pop
in
push
jne
sbb
xchg
inc
dec
scas
ret
or
adc
adc
div
cmp
out
in
es
jp
mov
dec
lret
inc
xor
pushf
cli
js
push
in
adc
pop
scas
jo
aas
mov
aas
popa
aam
and
test
dec
cmp
xchg
inc
jns
sarl
sub
or
lret
arpl
lods
es
mov
inc
rolb
and
loope
pusha
into
push
jmp
aam
push
and
out
or
ljmp
mov
movsl
mov
push
movsb
sub
in
test
mov
mov
fidivrl
push
mov
pop
sbb
jmp
inc
pop
and
cltd
lods
pop
dec
jne
outsb
mov
sahf
and
or
add
in
pusha
xchg
xchg
lret
mov
mov
dec
xchg
addr16
inc
xorl
cmp
ret
add
pop
mov
cli
in
cmp
push
faddl
sbbb
lcall
xchg
and
lcall
out
xchg
les
int
cs
ret
add
int3
mov
jle
xorl
jb
xchg
ds
push
rcrl
jo
jg
adc
scas
ret
or
lret
test
cwtl
sub
movsl
xchg
daa
xchg
cmc
fnstsw
mov
cmp
inc
sbb
imulb
mov
inc
gs
or
jae
clc
cmc
xlat
test
mov
sub
push
push
fldz
mov
cmpsb
rorl
push
clc
nop
leave
xlat
loop
push
ljmp
jg
out
js
sbb
dec
push
stc
jnp
mov
daa
aas
pop
lahf
int
sbb
dec
cmp
movntq
out
sbb
adc
popf
mov
lock
add
cmp
daa
outsl
push
icebp
loope
pusha
repz
pop
cltd
aam
ljmp
leave
push
shr
and
push
xor
sub
push
mov
push
pop
loop
mov
cmp
xor
jp
push
fnstcw
int
dec
jecxz
xor
inc
adc
xor
inc
jmp
or
lret
arpl
dec
push
ja
call
jno
dec
and
pop
scas
and
mov
jp
mov
sub
fists
xor
loop
mov
xor
stc
pop
je
push
fs
mov
or
bound
sub
or
cltd
insb
adc
mov
pop
ss
sarl
bound
inc
push
jne
popa
cmp
pusha
sbb
cmpsb
jl
lahf
sbb
mov
pop
fnstenv
push
xor
cmpb
hlt
clc
in
pop
adc
out
mov
stos
fstl
out
in
fisubs
or
enter
fidivs
dec
xchg
sbb
sbb
push
pop
add
add
and
fnstsw
ret
pop
arpl
add
sbb
mov
push
cmc
and
bound
mov
das
xor
xchg
movsl
push
sub
inc
imulb
sbb
shrb
test
rorb
sbb
iret
push
dec
xchg
int3
jnp
aas
mov
loop
lahf
add
dec
testb
sti
into
inc
mov
mov
ds
cmp
stos
cmp
xor
sarl
xchg
movl
pop
enter
mov
pop
clc
sub
push
xor
in
sub
gs
mov
inc
movsb
cld
cmp
push
repz
push
sbb
inc
jo
repnz
mov
dec
in
and
or
ret
sub
scas
or
dec
dec
cld
leave
out
jmp
mov
dec
xor
int3
call
cmp
pop
xchg
mov
ljmp
mov
push
fstpl
xorb
mov
pop
js
test
sub
enter
xor
sub
jae
dec
xchg
rorb
pop
mov
es
adc
and
stos
sub
inc
push
or
mov
sahf
negb
xchg
in
repz
insb
loop
mov
test
repz
shr
fildll
mov
lods
ret
jecxz
stos
push
dec
fcmovnu
cwtl
fstl
sub
out
adc
test
rolb
in
cmp
adc
mov
dec
scas
pop
orb
test
push
outsb
jl
xchg
mov
jp
cltd
mov
fisttps
inc
jmp
call
in
push
mov
add
mov
jg
sub
inc
add
test
daa
stos
add
or
aaa
jmp
sbb
sub
test
fst
iret
test
and
jge
fstps
push
das
dec
leave
sbb
mov
fdiv
or
add
xor
xor
cli
xchg
sub
stos
out
pop
test
and
sub
jecxz
or
imul
das
leave
ret
jg
jge
xorb
push
pushf
out
jae
push
int3
out
push
fwait
adc
lret
loop
pop
aaa
iret
das
xor
add
addr16
out
sub
dec
jg
int
shl
jno
cmp
test
addr16
mov
xchg
scas
and
fadds
out
dec
jle
subb
ud2
hlt
inc
xchg
pop
fnstenv
dec
dec
repnz
inc
pop
jecxz
mov
shll
lcall
inc
cmp
adc
int3
adc
xchg
mov
fstpt
sahf
inc
pop
push
jo
adc
sub
les
bound
mov
adc
in
gs
push
fistl
push
jp
cmp
jle
scas
adc
ds
test
xlat
adc
repz
pop
lods
and
js
in
mov
mov
dec
ret
xchg
mov
rorb
dec
pop
xchg
or
jg
loop
popf
pushf
cld
aas
in
mov
insb
inc
fisttps
and
ljmp
and
sbb
pushf
int
stos
xcrypt-cbc
cmpsl
xchg
dec
dec
and
lods
add
xchg
dec
xchg
pop
fcoms
aad
cltd
mov
call
and
or
push
out
call
mov
fbld
and
addr16
push
in
test
nop
xchg
jp
jle
in
pop
inc
stos
xor
mov
and
cli
fistl
les
mov
inc
lret
das
adc
inc
sub
dec
add
popf
push
stos
stos
fists
pop
sub
fdivrl
dec
dec
lcall
push
and
add
xchg
stos
stos
sbb
xlat
repz
movsl
cmp
lret
std
inc
jg
aam
lcall
jo
jg
ret
fs
stos
sbb
repz
and
pop
outsl
stos
aad
xchg
and
bound
dec
or
call
sbb
movsb
xchg
pop
shll
ret
or
addl
or
pop
xchg
int
mov
pop
jecxz
adc
xor
das
cltd
push
sbb
lret
icebp
mov
lods
xchg
out
inc
cld
mulb
shl
lock
dec
ss
xchg
adc
adc
mov
dec
sete
outsl
mov
mov
xor
lods
cmp
in
mov
xchg
adc
sarl
popa
push
rolb
pop
das
jp
or
in
push
lock
or
push
inc
lock
scas
in
or
xchg
mov
and
jnp
jecxz
and
in
inc
sub
ja
or
xchg
imul
mov
sbbl
je
fiadds
pop
add
ljmp
mov
xor
dec
hlt
jl
and
adc
adc
daa
sbb
dec
adc
loope
mov
test
sbb
sbb
test
stos
stos
jge
inc
std
aas
leave
jae
mov
lea
pop
jle
in
out
jecxz
movsl
cwtl
dec
push
cwtl
jl
scas
xchg
movsl
push
inc
push
or
lock
aaa
aas
push
jb
mov
dec
rorl
jle
repz
push
cmp
rorl
add
sub
xchg
outsb
in
fmul
daa
xlat
bound
test
movsb
add
lcall
pushf
out
cmp
push
rcll
fwait
lds
popf
inc
jle
stos
loopne
imul
loopne
leave
sub
adc
xchg
stos
inc
add
mov
hlt
ficomps
jo
nop
rclb
mov
in
sti
push
les
shlb
scas
adc
push
lods
pop
mov
fwait
xchg
enter
stos
jecxz
ret
jmp
cli
or
and
outsl
jo
sbb
inc
mov
repnz
push
dec
jnp
fistl
push
pusha
mov
aam
mov
pop
mov
aas
aas
pop
pusha
addr16
fiaddl
xor
xlat
inc
fcmovnbe
outsl
int3
cmp
mov
lahf
sub
adc
ja
xchg
jg
push
cmc
inc
push
jle
sub
or
jb
jmp
in
pop
inc
mov
lds
mov
ror
test
imul
push
xchg
aad
cmp
in
into
inc
cmp
fs
mov
inc
pusha
xchg
and
test
mov
push
cltd
in
mov
push
sub
rolb
sbb
push
adc
pop
inc
and
pop
mov
add
dec
xorl
in
push
xlat
jmp
lods
in
xor
test
sbb
ja
jmp
inc
lret
xor
xor
enter
mov
xchg
and
pop
pop
and
inc
sbb
jge
int3
cmp
lock
adc
push
push
in
fildll
push
test
in
rcl
pusha
push
das
nop
mov
cmp
popa
inc
cmp
fmulp
mov
or
jne
dec
fsubp
sbb
xchg
push
sbb
stos
ljmp
es
idivb
inc
scas
inc
mov
insb
sub
jnp
mov
pop
out
hlt
scas
dec
xchg
enter
loope
daa
sbb
daa
test
sbb
lret
jg
verw
lock
mov
push
sub
add
out
pop
xchg
mov
adc
xchg
mov
cmp
jle
xchg
adc
cli
test
scas
aam
or
popa
xchg
mov
xchg
sbb
sahf
mov
mov
mov
scas
mov
outsb
dec
sbb
pushf
pop
mov
xlat
mov
and
pop
pop
mov
or
mov
adc
pop
dec
sbb
aad
adc
fcomip
cwtl
mov
push
out
int3
inc
mov
pop
mov
mov
xor
jle
leave
mov
imul
enter
sbb
push
dec
mov
movsb
pusha
adc
push
add
in
inc
mov
jp
mov
xchg
xor
std
lods
sbb
xchg
loope
inc
cmp
or
out
pop
test
xlat
idivb
das
xchg
fsubl
jl
xor
mov
mov
mov
je
leave
add
mov
mov
data16
dec
scas
leave
fldenv
push
xchg
pop
cltd
lods
dec
pop
mov
xchg
mov
cld
leave
xchg
mov
cmpsb
adc
inc
xchg
jno
je
in
and
aam
xor
mov
data16
jmp
adc
lahf
mov
insb
jbe
push
adc
dec
xchg
push
mov
cli
rorl
sub
xchg
cmc
sbb
jmp
dec
outsl
ds
dec
mov
add
push
jp
test
sbb
pop
push
xchg
pop
adc
add
sub
js
push
push
movsb
and
fucomip
dec
push
push
es
shll
sbbb
scas
repz
mov
mov
call
mov
test
iret
pushf
mov
outsl
xchg
mov
bnd
fildll
or
into
test
insb
clc
xor
jnp
out
int
mov
cs
cmp
cli
leave
add
mov
push
and
sub
mov
cmp
outsl
int
outsl
lret
cmovnp
inc
xchg
fldenv
pop
cld
mov
xchg
aas
pusha
add
jne
call
push
test
in
icebp
inc
sahf
jle
adc
mov
rcll
jne
out
inc
je
or
das
in
pusha
sahf
nop
sbb
lss
dec
movsl
mov
adc
daa
jns
jmp
mov
cmp
in
mov
push
bound
push
faddp
sub
add
jp
ret
shrb
daa
ljmp
in
pushf
xchg
sti
jp
mov
das
mov
out
aam
jmp
inc
leave
pop
loop
and
orb
xchg
push
jle
inc
test
push
cmpsl
daa
pop
out
loope
popf
jecxz
xlat
or
int
jecxz
stc
sahf
jns
push
dec
jg
mov
rorl
lcall
dec
mov
mov
cmp
or
push
mov
inc
mov
insl
sbb
lret
jge
inc
in
int
sub
xor
push
stc
mov
iret
push
push
je
mov
leave
lcall
xor
cli
test
pop
lods
dec
jae
ret
movsl
ja
adc
cmp
cltd
rol
lock
xchg
xor
xchg
stos
cmp
inc
adc
fiadds
cmpsb
mov
enter
or
or
inc
leave
shlb
fsubr
leave
lcall
dec
aam
aaa
cmp
fs
test
aaa
jns
xchg
and
mov
shrl
inc
jecxz
xchg
into
mov
and
sbb
mov
in
and
add
sub
mov
lea
ret
inc
sbb
xor
jle
andl
add
push
mov
xor
adc
ds
add
or
fnstcw
and
mov
insl
add
test
lahf
xchg
lods
mov
loop
mov
or
and
repnz
pop
je
jp
dec
mov
lcall
aaa
inc
stos
dec
jmp
push
mov
push
shrl
push
jns
jp
dec
lret
insl
push
add
inc
and
mov
popa
mov
flds
cli
jo
insb
popa
add
inc
mov
and
loope
out
orl
add
and
mov
push
je
imul
in
add
js
mov
xor
jp
popa
pop
outsl
xchg
iret
add
leave
andb
mov
or
fldenv
push
adc
in
push
in
popa
lahf
jp
mov
mov
loope
sahf
jle
test
mov
mov
or
and
lret
inc
sub
inc
and
pusha
dec
pop
push
push
cltd
adc
icebp
mov
mov
and
add
xor
adc
inc
imul
rcll
sbb
andl
lea
mov
xor
sbb
and
jns
pop
loope
mov
xchg
repnz
xchg
push
ss
lea
xchg
push
outsb
sbb
lahf
hlt
jnp
push
pushf
pop
dec
adc
xchg
inc
iret
xor
push
inc
iret
jb
xchg
jmp
cld
dec
xor
jne
xor
mov
aad
push
cwtl
jne
mov
or
stos
jno
xlat
mov
lret
loope
xor
test
jae
jmp
lea
xchg
pop
int
fnsave
mov
aaa
test
loope
cli
sub
ret
cs
std
cli
mov
mov
inc
adc
pop
jnp
pop
outsl
sbb
bound
rclb
lcall
bound
xchg
and
sbb
mov
xor
push
popa
mov
inc
fsubrs
mov
stc
push
daa
sub
cmp
pop
movq
sbb
ror
mov
xor
cmp
push
ror
dec
pop
sbb
mov
movsl
xchg
mov
xchg
imul
sub
jle
movq
sti
ja
mov
sarl
push
outsl
jmp
xchg
cmp
clc
rcrb
scas
flds
int3
prefetcht2
jno
sbb
sub
jmp
cmovne
pop
arpl
xor
addr16
ffreep
jg
sub
loop
inc
jle
int
mov
test
mov
mov
mov
loopne
xlat
sbb
pop
mov
jg
adc
pop
shrb
mov
pop
mov
icebp
fs
fsubp
and
cld
sbb
adc
push
and
add
das
testl
les
addr16
xor
loopne
stos
pop
mov
sbb
mov
mov
addr16
lcall
enter
push
call
add
mov
out
or
push
imul
imul
mov
aad
jecxz
xor
roll
adc
adc
jecxz
jb
popf
lds
or
sbb
mov
adc
mov
xor
aas
cmc
insl
outsb
call
sub
insb
inc
ja
lcall
jp
shrl
fs
jb
js
add
test
pop
mov
test
jo
fsts
mov
cmp
fstpt
cmpsb
adc
jl
mov
data16
push
inc
mov
lods
push
sbbl
ret
xor
sub
sub
lds
sub
dec
sbb
sbb
push
notb
inc
enter
and
pop
aam
int
lahf
xchg
push
push
mov
addl
pop
mov
rcrl
push
jno
inc
push
sub
loope
cmp
xchg
shlb
mov
nop
push
insb
andl
outsb
fisttpl
push
cmpl
or
mov
push
pop
xchg
push
mov
sub
sub
decb
xor
jae
movsl
mov
mov
mov
icebp
push
loope
jo
lods
clc
pop
je
stos
lock
mov
inc
jp
mov
or
aam
icebp
pop
out
xchg
int
clc
stos
add
lods
hlt
add
bnd
cmpsb
mov
push
sbb
fs
movsl
add
fstl
shlb
add
shlb
sbb
push
fidivrs
push
clc
jecxz
sbb
pop
jl
lret
and
insl
scas
int
jb
scas
inc
mov
scas
mov
mov
jb
pop
std
lods
nop
or
aas
ja
dec
imul
mov
or
jo
clc
add
aas
fnstcw
or
test
sbb
jle
xor
push
stos
jbe
push
out
cmp
fcmovnbe
iret
jae
ja
aaa
call
imul
jecxz
mov
test
xchg
mov
pushf
fs
lret
imul
test
sbbl
ret
dec
cwtl
sbb
push
clc
mov
sbb
mov
insl
inc
lret
jbe
and
cmp
call
out
adc
call
je
mov
les
sbb
fimuls
xchg
lock
add
lcall
cs
lock
cmp
push
mov
int
pop
sub
cmc
push
pusha
jbe
mov
ret
rorl
enter
cmp
imul
fnstenv
mov
jb
and
out
sub
subl
ljmp
mov
sub
xchg
pop
push
add
int3
xlat
cli
fidivl
cmp
mov
aaa
mov
xlat
lods
inc
mov
jnp
and
mov
dec
sahf
cmpsb
inc
mov
inc
lahf
inc
add
data16
cmpsb
inc
mov
outsl
stos
adc
mov
mov
xchg
dec
dec
and
xchg
data16
and
xchg
arpl
push
push
jl
insl
push
mov
mov
fadds
mov
jno
je
ficoms
pop
arpl
lahf
das
movsb
add
iret
and
cmpsb
push
push
mov
fdivrs
jg
mov
popa
fsts
sbb
pop
fwait
arpl
rcr
pop
inc
mov
adc
or
xlat
aas
xor
push
pop
lahf
leave
shll
aas
icebp
or
stc
hlt
cwtl
or
xor
and
flds
sub
xchg
sub
idivl
or
js
jnp
sbb
sbbl
sub
xchg
mov
adc
push
int3
xchg
or
pushf
ret
inc
je
cmc
or
icebp
test
sbb
or
sbb
cmp
adc
out
cmpsb
sbb
inc
mov
pop
fwait
into
fsubrp
jo
out
aam
lret
notl
nop
inc
mov
jl
stos
pop
push
xchg
imul
xor
mov
out
cli
pop
and
iret
xchg
jae
in
mov
push
scas
int3
into
inc
test
push
and
pop
aas
fldenv
cli
adc
shlb
lods
inc
movsbl
mov
leave
mov
pop
cmc
fs
dec
iret
lcall
push
rcll
lds
and
out
adc
orl
inc
je
adc
xbegin
cltd
mov
cmp
fdivl
lods
or
cmp
test
lea
lret
stc
mov
leave
push
dec
popa
lret
xchg
lods
mov
xor
shll
pop
movsl
inc
aaa
lds
inc
pop
imul
int
mov
js
xchg
cmpsl
dec
jl
push
push
xor
mov
dec
outsl
out
or
out
xchg
add
in
add
add
and
push
shlb
pop
or
ds
stos
xchg
sti
int3
inc
movsl
and
jno
lret
outsl
sub
ret
sahf
ret
or
cmp
dec
sbb
out
sbb
stos
fimull
push
daa
push
jae
xchg
mov
mov
pusha
out
push
dec
ja
and
out
fsts
rcrl
icebp
fcompl
xchg
cmp
xor
roll
and
cmp
pop
mov
mov
fwait
mov
pushf
cmpsb
and
lds
bound
sbb
mov
push
stc
repnz
cmpsb
ret
xor
mov
sub
hlt
jle
add
xchg
fs
int3
ja
fs
out
shll
cmp
xor
dec
and
int
fnstcw
shlb
popf
fnstsw
fnsave
jp
or
add
dec
nop
cwtl
test
adc
mov
push
rclb
ja
mov
push
xchg
jbe
loop
mov
jnp
adc
loopne
sbb
mov
ss
das
jle
call
cmpsl
movsl
mov
dec
andl
nopl
lret
scas
mov
outsb
in
mov
mov
push
xor
jnp
test
and
ret
push
pusha
aas
lods
test
out
cmp
lret
adc
int
loopne
pushl
cmp
push
stos
std
out
cs
push
sbb
aas
jnp
outsb
or
push
push
ret
std
mov
mov
jnp
orl
movsl
in
into
je
in
pushf
add
xor
ret
push
jp
mov
in
cmp
aas
rcl
or
mov
xchg
std
pushf
imul
jge
adcb
ret
mov
cmpsl
mov
lock
mull
iret
sbb
mov
mov
or
xlat
inc
push
pop
ret
add
cmpsl
or
dec
cmc
movb
cmp
xchg
gs
in
sub
cmpsl
es
subb
out
jnp
mov
icebp
repz
loopne
mov
jmp
push
xor
mov
push
mov
es
push
es
sub
aas
xchg
sub
adc
xor
push
push
pushf
xor
adc
jle
xchg
push
mov
sbb
into
gs
inc
mov
jns
sbb
jl
mov
popf
sbb
mov
inc
sti
mov
iret
pop
inc
cmp
sbb
fisubl
add
cld
mov
mov
and
and
mov
das
dec
add
test
scas
test
mov
lds
fisubl
push
dec
and
dec
adc
cmp
std
xchg
lret
sbb
das
mov
mov
in
or
inc
add
test
sbb
pop
dec
mov
mov
mov
and
shll
ret
scas
jo
outsb
ficoms
mov
push
adc
scas
adc
pop
icebp
mov
addr16
ds
cmp
pop
push
adcb
ds
jno
xor
adc
outsb
scas
xchg
push
lods
sti
movsl
adc
pop
mov
jns
lret
cmpb
out
jl
or
xor
fcomp
test
xor
jne
inc
jne
stos
je
addr16
mov
xchg
jg
mov
out
and
adc
dec
xor
add
stc
in
xlat
sub
movsb
mov
lods
sahf
xor
jle
cmp
mov
fsubs
sub
push
bound
imul
es
fdivr
loop
mov
sbb
mov
pop
pop
mov
frstor
aad
rcrl
adc
int
dec
mov
mov
das
fcomp
mov
imul
pop
or
popf
push
stc
lods
mov
xchg
add
mov
mov
cmc
daa
enter
cmp
sub
xchg
jecxz
cmp
mov
mov
cmp
push
and
mov
mov
xor
inc
cmp
add
int3
or
push
into
cmp
inc
ljmp
popf
into
call
inc
jo
scas
and
cmp
jo
adc
daa
out
add
jns
in
push
fistpl
adc
in
std
jg
and
sbb
push
adc
pop
js
and
or
xchg
dec
push
aas
cltd
mov
fstl
test
pop
enter
or
lret
mov
sbb
inc
xchg
sbb
ds
pop
int3
mov
or
cmpb
orl
hlt
test
pop
jmp
mov
test
stos
xor
dec
mov
imul
adc
mov
push
xlat
pop
test
and
out
xor
jno
outsl
frstor
lods
fs
popf
shl
jno
xchg
out
sti
lea
call
pop
bound
cmp
pop
jnp
mov
push
jno
push
jl
or
add
cmp
sbb
xor
ja
stos
mov
std
pop
adc
rcrl
rorb
cmp
arpl
pop
xor
add
jb
xchg
insb
divb
lods
cmc
jmp
mov
loopne
pop
aam
pop
mov
pushf
mov
xchg
mov
jns
inc
int3
push
out
xor
test
ja
pop
cmc
mov
mov
into
in
imul
scas
jnp
gs
mov
fwait
in
inc
or
pop
sbb
sahf
popf
xor
test
xlat
push
nop
push
pushf
rcrl
or
xor
mov
jno
dec
mov
rcll
add
inc
cmp
jnp
mov
push
cs
cli
sti
popf
adc
daa
shr
outsl
rorb
mov
mov
mov
inc
adc
out
shll
push
mov
imul
jbe
hlt
inc
fsubrs
jns
popa
movl
clc
xchg
frstor
das
inc
rcrb
cwtl
push
xchg
or
adc
daa
sbb
and
mov
jae
dec
aam
pop
add
fnsave
mov
push
xchg
and
jae
xchg
idiv
sub
pop
shll
mov
push
fwait
push
fs
fiaddl
cwtl
pop
int3
inc
dec
inc
ficomps
pop
adc
daa
fwait
ret
sti
cltd
pusha
lea
rolb
test
mov
outsl
dec
sbbb
fs
ret
movsb
or
or
xor
das
out
loop
test
bound
neg
mov
test
push
shrb
push
jns
outsb
cmp
adc
ret
jecxz
in
lds
inc
arpl
add
jle
movsb
shll
push
push
cld
cwtl
xor
dec
xorl
jmp
ljmp
iret
bound
repz
int
inc
outsb
lods
shl
imul
mov
aam
cmc
out
scas
xor
pop
xor
je
and
loop
dec
and
aad
bound
mov
cvtpi2ps
loop
sub
or
stos
jg
ss
lea
je
sbb
add
inc
fidivl
xlat
jbe
jg
testl
sub
or
popl
sub
sbb
jne
imul
add
mov
orb
xor
fadd
pop
cli
mov
shll
sub
inc
inc
dec
stos
mov
mov
sbb
mov
decl
mov
data16
pop
in
dec
and
fsubr
movsb
fstpl
dec
ja
fidivl
push
push
pop
in
int3
or
cltd
popa
fwait
lods
inc
movsb
mov
scas
mov
dec
mov
dec
jne
cmpsb
jge
push
call
push
add
rcl
repz
jg
std
mov
xor
mov
fwait
or
pop
mov
repz
push
push
out
inc
or
and
andb
aam
int3
in
add
pop
push
andb
out
cli
inc
push
mov
push
daa
imul
mov
xor
inc
pand
lahf
jns
mov
add
aaa
lods
mov
subps
push
sub
lahf
call
adc
mull
and
dec
int3
mov
out
add
je
mov
mov
xlat
test
add
mov
fadds
cld
push
popf
loopne
pop
pushf
and
cmp
sub
insb
jo
xor
jns
add
gs
xor
movsl
ljmp
pushf
scas
enter
ret
mov
mov
dec
adc
adc
xor
les
mov
nop
jne
jae
xor
fcmovnu
add
lea
sbb
stos
cmc
lcall
adc
fcomps
data16
aas
imul
lea
aaa
mov
lahf
sbb
imul
jle
sub
jae
cwtl
sub
or
mov
pop
add
daa
pop
push
lea
stos
xchg
mov
lea
ja
data16
cs
das
int
sarw
mov
sbb
sub
fsub
xor
cmpsl
xorb
rcll
pop
push
cmp
jnp
cmp
mov
inc
cltd
dec
mov
mov
jecxz
add
add
mov
in
cmp
dec
xchg
ret
mov
lret
lret
icebp
das
dec
push
sbb
mov
sub
xor
cmp
mov
divl
mov
add
jb
clc
push
lods
sahf
movsb
xor
mov
ds
push
pusha
nop
push
cltd
push
adc
mov
addr16
sub
pusha
push
in
fstpl
pop
sbbb
xchg
shlb
insl
xor
loopne
cmpsb
cmp
cmc
add
scas
out
das
cmpsl
fimull
mov
pop
ret
inc
lcall
xor
pushf
sub
fwait
out
jle
rclb
out
adc
jg
es
cmc
xor
inc
and
mov
inc
cli
ss
and
xchg
jp
jbe
and
mov
call
jbe
mov
mov
test
mov
sbb
mov
cmp
dec
mov
sbb
lock
adcl
insb
inc
ss
mov
ljmp
dec
cwtl
fiaddl
stos
in
mov
out
jmp
nop
jmp
cltd
add
loope
add
mov
ja
mov
sub
clc
gs
pmaddwd
jmp
push
mov
pushf
push
pop
push
jne
fadd
xchg
mov
movb
pop
and
movntq
fucomip
mov
inc
addr16
sbb
pop
pop
add
cs
xchg
pusha
xor
ljmp
mov
sarb
push
aam
mov
