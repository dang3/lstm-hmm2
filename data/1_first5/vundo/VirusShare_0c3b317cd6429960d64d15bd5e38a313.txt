add
insb
add
add
popa
add
add
add
arpl
arpl
add
jae
imul
insb
add
je
jns
pop
add
imul
inc
add
outsb
add
add
jae
je
add
add
push
add
insb
add
arpl
je
add
add
jp
add
add
add
outsl
add
je
jb
outsl
add
add
popa
add
add
add
jo
jo
add
jb
popa
add
arpl
add
add
ja
and
push
add
push
add
jae
add
add
xor
add
xor
add
push
add
insb
add
arpl
je
add
add
add
add
add
add
add
add
add
add
add
add
js
add
bound
add
add
push
sub
add
add
sbb
add
sub
add
add
add
add
add
mov
add
das
add
jl
add
jl
add
in
add
pushl
add
add
add
mov
add
js
add
bound
add
add
push
sub
add
add
sbb
add
mov
add
add
add
add
add
add
mov
add
das
add
jl
add
jl
add
insb
mov
add
jl
add
dec
add
add
add
sbb
mov
outsl
test
or
add
adc
adc
add
adc
add
add
add
add
add
add
jb
add
add
add
mov
sbb
sbb
sbb
sbb
pop
sbb
add
or
js
add
je
jb
outsl
inc
dec
outsl
jo
std
jbe
push
enter
jecxz
out
xchg
inc
dec
mov
or
clc
add
addl
mov
repz
xchg
incl
push
callw
adc
add
clc
lcall
pop
stos
mov
push
add
add
push
incl
movsl
add
add
add
leave
jmp
incl
add
mov
add
xor
cmp
test
test
je
rcrb
dec
or
push
add
lock
call
test
fdivs
incl
decl
or
push
push
incl
push
loopne
add
push
leave
pop
sbb
add
sbb
pop
add
call
sbb
sbb
sbb
sbb
lock
sbb
inc
add
insb
add
gs
jae
push
popa
dec
insb
add
jae
fs
add
shll
outsl
jae
outsl
insb
add
dec
add
inc
je
dec
add
add
jo
add
fs
add
cld
push
add
add
add
add
or
add
add
add
add
clc
cwtl
add
add
push
add
das
adc
mov
movsb
dec
into
xor
ja
in
imul
push
mov
cmpsl
fistl
cmc
ljmp
inc
add
push
and
add
xchg
pop
push
cli
clc
jb
pop
xor
jmp
in
xchg
mov
mov
inc
sbb
in
in
push
shr
aam
fdivrl
in
dec
outsb
adc
in
shrl
mov
push
insb
mov
mov
mov
lods
sub
shll
xchg
inc
cli
jo
pop
cmpsl
mov
inc
icebp
mov
outsl
mov
les
or
xchg
fildll
mov
rclb
jno
inc
rcll
pop
sbb
into
add
adc
and
cmpsl
cmp
lcall
movsb
xor
shll
fisubl
fcmovb
mov
out
cmpb
cmpsl
pusha
xchg
jnp
out
shll
lea
or
xlat
xchg
pop
and
xchg
pop
arpl
push
xor
ds
adc
jb
sar
jg
mov
xchg
push
mov
adc
adc
jb
inc
mov
out
push
cltd
inc
iret
pop
inc
or
mov
insl
das
add
cmpsb
mov
lods
mov
mov
sbb
popa
dec
aas
out
ja
stc
sbb
and
xor
pop
in
mov
rcrb
jne
es
jmp
lcall
xchg
outsb
jp
push
aaa
xchg
ja
inc
pop
and
and
xor
js
in
stos
and
sbb
push
jns
cld
mov
push
cmp
data16
cli
mov
int
jge
adc
adc
mov
pop
std
popf
mov
stos
insb
and
out
cs
push
test
fdiv
mov
nop
out
aad
aaa
mov
add
xchg
add
sub
or
frstors
das
clc
xchg
insl
and
and
ljmp
cmp
adc
xchg
sub
lret
sbb
outsb
sub
jnp
add
adc
out
dec
sub
push
insl
jg
jae
adc
ljmp
xor
adc
imul
cmp
inc
xchg
shrb
pusha
iret
or
and
push
out
outsl
sub
add
pop
int
mov
push
addl
mov
mov
adcb
xchg
lahf
xchg
popf
pop
lods
movsl
test
clc
xor
xchg
inc
lahf
cmc
in
aam
pop
popf
imul
xchg
aaa
lret
jecxz
xchg
hlt
jecxz
dec
insb
xor
scas
ret
dec
add
dec
sub
movsb
cmp
mov
mov
dec
sti
repz
mov
push
iret
xchg
mov
rcrb
scas
movsb
mov
jne
fstps
mov
adc
sbbb
rorl
outsl
mov
roll
inc
mov
fimuls
cmp
lret
aam
xchg
in
pusha
pop
mov
int
ficoml
icebp
inc
push
popf
or
push
cld
xor
pop
mov
ja
pop
imul
cmp
in
lcall
stos
in
xchg
jns
bound
shll
into
sub
mov
mov
jecxz
ds
xchg
test
or
dec
mov
fs
pop
enter
insb
imul
add
and
shrb
mov
or
dec
push
testb
and
or
bound
jnp
xchg
sarb
sbb
or
lods
fmulp
pop
aad
add
or
imul
mov
jno
sbb
movl
xchg
mov
mov
aaa
dec
lea
jmp
push
jl
dec
add
or
insl
push
fwait
and
xor
mov
fisttpl
dec
cmp
mov
shrb
sbb
test
jno
push
xor
fwait
loopne
xor
xchg
inc
sub
aas
repz
xchg
lds
addr16
cmp
stos
push
in
ret
pop
jnp
push
int3
add
in
in
jg
add
nop
adc
adc
es
dec
loope
iret
lods
mov
pop
mov
push
movsl
cmp
sub
jnp
lds
and
stos
mov
divb
mov
xor
nop
test
sub
sbb
push
add
repnz
cmpsl
fcomp
test
in
loopne
or
lcall
aas
inc
push
or
mov
pop
dec
add
adcl
int
rcrl
test
xchg
daa
or
lret
dec
xchg
xchg
bnd
pop
pop
rolb
sarb
cmpl
cli
jg
lcall
vmovupd
sar
ds
in
push
call
cmp
adc
pushf
out
dec
cmp
insb
push
jns
add
sarl
jnp
inc
mov
es
sbb
push
xchg
shlb
pop
sahf
movsb
fwait
xchg
jecxz
inc
subl
insl
jo
ficoml
mov
add
xchg
out
jae
sbb
stos
adc
das
xor
adc
xchg
in
imul
daa
std
mov
out
lret
fwait
pop
jge
pop
jno
sbb
push
sbb
enter
out
ret
comiss
icebp
ss
inc
adc
out
lock
cmp
jo
insb
pop
xor
leave
adc
inc
inc
dec
add
inc
arpl
sti
sbb
push
in
xchg
xchg
mov
and
pusha
scas
push
mov
icebp
push
les
sbb
inc
push
mov
and
stc
jmp
add
faddl
ja
push
jle
stos
mov
pop
fs
clc
clc
inc
xchg
lcall
inc
out
fcomi
mov
addr16
out
jecxz
inc
test
aaa
and
mov
push
sarb
pusha
add
roll
sbb
aad
cmp
or
xchg
jno
push
sbbb
andb
xchg
fimuls
shll
ret
inc
negb
cmp
cmpsl
sub
push
aas
int
sbb
dec
push
lret
mov
notl
pop
and
inc
mov
push
repz
fstps
mov
mov
pop
lock
addr16
pop
push
subb
into
sub
xlat
mulps
mov
push
imul
and
mov
in
aaa
inc
loopne
inc
lret
mov
cld
nop
inc
add
addr16
adc
pop
xchg
push
inc
stos
lods
mov
sub
lcall
lcall
adc
jbe
lods
adc
dec
fistps
add
ret
loop
xchg
mov
xchg
mov
cmp
mov
lret
scas
gs
jbe
jns
xadd
mov
jns
shrd
arpl
mov
inc
mov
mov
ret
jge
mov
ret
cs
or
insb
mov
push
out
push
fnstcw
out
or
xchg
cmp
jb
cmp
xor
mov
insl
sbb
fiadds
sahf
jae
xchg
lds
cmp
lret
dec
mov
push
mov
pop
daa
push
sub
cmp
jmp
data16
jge
inc
sets
stos
sub
jmp
mov
pop
aam
add
sarb
mov
sbbl
push
cmp
test
push
mov
mov
sbb
cld
pop
insb
adc
movsb
outsl
lcall
mov
popa
push
jmp
push
iret
ror
movntps
push
inc
dec
mov
xchg
jb
mov
pop
or
xor
inc
xchg
push
pop
jecxz
into
inc
dec
or
and
rcll
aas
icebp
addr16
xor
mov
jmp
adc
gs
fsubp
or
and
ficoml
xor
pop
lods
dec
sub
ret
mov
scas
inc
sub
jbe
sub
cwtl
sbb
je,pt
addr16
std
push
divb
xchg
xchg
push
shll
leave
jle
mov
and
fwait
push
sbb
jmp
jnp
jne
into
adc
fsub
mov
or
push
lcall
shll
mov
les
add
lahf
mov
clc
stos
xorl
adc
pop
mov
fwait
test
sub
mov
pop
dec
hlt
jmp
cmp
mov
cmp
popa
and
xor
test
push
add
cmp
cld
enter
jle
mov
sub
sbb
jnp
test
add
cmc
ja
ja
imulb
pusha
sub
mov
xchg
mov
jae
or
fdivrl
push
and
ljmp
xchg
xchg
fidivs
or
scas
and
movsb
out
push
lods
scas
in
ret
and
push
mov
jmp
mov
outsb
enter
sub
jbe
cmp
inc
insl
mov
scas
fstps
jle
je
into
fdivrs
aad
xchg
jl
dec
and
insl
loop
rcr
adc
jbe
stos
pop
int
lret
jb
jge
adc
call
dec
dec
out
push
adc
mov
nop
add
jbe
test
jbe
ror
jecxz
sbb
mov
subb
sub
pop
mov
add
or
clc
mov
sub
push
sarl
fwait
rcrb
cltd
xor
outsl
loop
imul
jl
shlb
mov
xor
mov
mov
int3
fwait
jnp
test
jbe
stc
dec
lcall
cmp
mov
cwtl
je
fnstcw
add
ljmp
outsb
dec
jp
cmp
fcmove
test
stc
out
rcl
push
ja
mov
jne
pop
das
lods
int3
jne
jle
jle
lret
aaa
es
int
js
mov
aaa
push
mov
sbb
cld
and
mov
pusha
shrl
xchg
js
jae
fs
fimuls
pop
cs
mov
xor
sbb
or
idiv
es
andb
sbb
lock
mov
pop
adc
mov
out
dec
movsb
inc
subb
movsb
call
stc
dec
imul
push
dec
jo
call
scas
test
lods
test
daa
xchg
sti
and
sar
fsubrp
or
adc
push
pop
sub
and
pop
out
or
clc
sti
mov
pop
pop
push
cmc
push
push
pop
pop
mov
outsl
mov
jg
dec
mov
cmp
popf
xchg
add
pop
sbbb
imul
push
testb
sti
mov
in
in
adc
mov
lret
stos
pop
push
scas
mov
adc
xchg
testb
or
arpl
and
push
push
lret
push
idivl
fildl
xor
loop
mov
inc
sbb
sahf
dec
mov
sbb
lods
mov
adc
in
test
movsb
cmp
dec
dec
push
cmpsl
sub
subl
pop
and
dec
nop
mov
xchg
inc
dec
loopne
cwtl
sub
hlt
sbb
mov
jg
sti
adc
or
mov
jnp
jb
movb
loope
push
enter
outsl
scas
das
ret
fsubrl
cmc
mov
cmp
test
jge
add
out
pop
mov
jae
mov
scas
and
cli
mov
inc
mov
pop
mov
fdiv
inc
sub
clc
or
lock
lea
jnp
cmpsl
es
xor
pop
mov
stc
cmp
mov
lock
ja
inc
xchg
add
call
dec
mov
cmp
lret
push
jo
pushf
xchg
leave
bound
jl
loop
sub
push
pop
popa
dec
push
daa
inc
fimull
insb
cmp
adc
mov
hlt
push
pop
or
mov
mov
negb
sbb
test
pop
fwait
add
aam
cmp
mov
inc
inc
test
mov
lods
or
fistl
inc
into
je
add
mov
pushf
movsb
dec
xor
cmp
adc
jl
mov
sbb
aaa
out
negl
fadds
lret
adc
mov
idivl
push
into
cmp
insb
cmp
sbbb
and
test
roll
push
adc
push
push
pop
inc
stos
das
int3
loope
jmp
mov
lods
lock
mov
adc
inc
mov
mov
push
mov
xchg
push
icebp
in
ret
push
sbbl
xchg
out
jne
test
cmpsb
push
test
jbe
scas
into
pop
sti
stc
jge
ret
push
cmpsl
jo
insb
adc
fwait
or
dec
push
pop
mov
cmp
xchg
ret
in
cs
jbe
sbb
cld
pop
add
mov
inc
test
mov
or
xor
lahf
xor
jnp
hlt
mov
cmp
mov
push
xchg
test
adc
rcl
addb
push
mov
in
ljmp
pusha
sbb
or
inc
dec
outsb
sbb
daa
adc
jecxz
movsb
fcomp
xor
add
mov
popa
xlat
lea
imul
imul
jbe
fildl
mov
mov
scas
xor
inc
cmp
sub
mov
ljmp
popf
stos
adc
inc
lods
ret
lret
lods
add
sbb
cmp
push
and
or
mov
movsl
jecxz
scas
call
mov
jae
daa
adcb
or
jl
mov
pop
jle
cmp
ja
lock
fistpl
jmp
nop
push
push
fstps
add
xchg
sbb
lret
fsubl
mov
imul
in
mov
insl
cltd
ficoms
pop
or
push
add
inc
push
divb
in
mov
aaa
add
shrb
push
int3
mov
fbld
mov
dec
jge
fwait
inc
and
sub
aad
xchg
jg
mul
rolb
pushf
les
cmp
xor
in
or
cltd
mov
sub
cs
fimuls
inc
pop
hlt
and
lds
inc
add
mov
imul
mov
xlat
add
adc
push
mov
test
inc
sbb
sbb
iret
add
xchg
daa
sbb
or
int3
das
push
cld
push
jnp
in
ret
scas
inc
pop
mov
mov
fimull
or
xor
push
push
lea
sbb
jbe
pop
ficompl
xchg
xchg
adc
xchg
fwait
xchg
ja
mov
mov
mov
sub
iret
in
dec
aas
pop
fidivs
or
lahf
lret
pushf
or
pop
aaa
inc
fdivrp
popa
xor
enter
orl
push
xchg
adc
mov
push
dec
mov
mov
mov
movsl
int
loop
cmp
mov
sbb
cmp
xor
arpl
in
bound
dec
lds
jo
imul
mov
xor
insl
push
into
pop
xchg
lods
outsl
dec
push
sbb
cmp
rorb
inc
ds
inc
fimuls
and
dec
int3
dec
das
mov
test
xlat
jo
inc
shl
adc
mov
jb
pop
mov
xchg
pop
cwtl
dec
push
lret
xlat
fmuls
push
lahf
sub
test
add
cs
push
xor
test
leave
sbb
sbb
jl
sbb
pop
mov
or
in
pop
mov
imul
or
sbb
orl
dec
cltd
ret
cli
outsl
or
cmp
sub
sub
stc
mov
rcl
dec
adc
pop
push
ja
loop
leave
outsl
fwait
jl
incl
lods
cmpsb
pop
adc
pop
or
test
jp
fcomip
adc
dec
jnp
xchg
test
fmull
xlat
or
fstl
sbb
and
push
je
scas
insb
inc
cmpsl
jae
and
adc
jmp
inc
ret
negb
in
enter
and
pop
mov
iret
pop
loope
push
adc
jne
stos
inc
pusha
loope
ja
jae
pop
repnz
lods
gs
xor
std
add
xchg
inc
xor
sbb
or
pop
mov
sbb
inc
lret
xlat
and
jae
lea
notb
ficomps
es
cmpsl
adc
sbb
loopne
sbb
imul
jo
mov
pop
fadds
fstl
mov
gs
mov
xor
adc
xor
mov
lock
sbb
jb
mov
push
pop
dec
sarl
sub
rcll
dec
sbb
and
ftst
jnp
push
mov
shlb
daa
adcb
rorb
and
jb
add
andb
dec
lahf
mov
fidivrl
nop
test
adc
and
jp
xchg
fdivrp
fistl
xor
or
jns
dec
jno
jo
outsl
inc
test
push
jp
inc
outsb
inc
stos
add
sub
sahf
cmpsb
popf
inc
pop
daa
or
lods
push
add
rclb
jl
cmp
mov
jle
push
xor
dec
mov
aad
inc
addr16
mov
icebp
pop
fidivrs
mov
pop
nop
inc
jle
fistl
es
pop
out
rcrb
ljmp
call
outsb
test
cmp
jnp,pn
into
xchg
imul
mov
dec
or
cmp
mov
add
outsl
mov
rclb
loope,pn
scas
xchg
pop
dec
icebp
int
fsubrs
jbe
daa
mov
fcmovbe
clc
sub
lods
inc
repnz
push
or
roll
mov
dec
and
repnz
xchg
les
push
test
dec
mov
xchg
pop
pop
add
xchg
sub
sbb
dec
pop
add
int3
or
mov
add
ljmp
xor
pop
jl
sub
pushf
pushf
std
mov
out
sub
repnz
test
insl
or
das
pop
dec
mov
mov
mov
xchg
je
mov
sub
bound
test
rorl
loop
out
and
sbbl
mov
shll
jbe
xlat
adc
lds
xchg
scas
sahf
pop
enter
mov
inc
jmp
scas
rorl
mov
pop
cmpsl
push
add
addr16
in
les
mov
xchg
xor
test
dec
imul
addr16
mov
lds
clc
inc
pop
mov
scas
jo
xchg
ja
lret
jp
pushf
sbbl
sub
sbb
mov
jl
mov
aam
dec
sub
xor
adc
rcrl
js
cs
push
aas
stos
dec
sbb
add
jecxz
cld
mov
iret
xorb
loopne
and
mov
or
pop
add
add
sub
add
add
add
add
cwtl
mov
or
add
add
add
add
clc
cwtl
add
add
push
add
add
add
add
add
sbb
sar
ljmp
ja
jo
jg
aaa
add
in
sub
lea
push
push
push
pushl
call
cmpl
je
mov
cmp
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
pushl
call
pushl
call
mov
jmp
push
lea
push
push
pushl
call
xor
mov
push
push
push
push
pushl
call
pushl
mov
pushl
pushl
push
push
call
lea
push
pushl
call
lea
push
call
pop
push
lea
push
push
push
push
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
pop
xor
leave
ret
pop
call
add
add
and
inc
add
add
add
add
add
pop
add
add
add
add
mov
add
je
add
and
add
outsl
add
add
add
xchg
sbb
sbb
dec
cmp
test
or
pop
je
das
push
dec
imul
jne
push
or
cld
mov
sbb
fdivr
movsb
clc
mov
je
cld
lea
inc
divps
lea
add
mov
lock
leave
inc
leave
and
or
ret
in
add
add
dec
push
add
adc
incl
inc
inc
add
rclb
loopne
mov
call
ljmp
add
xchg
inc
das
jmp
call
push
and
inc
je
adc
push
call
adc
push
add
lea
or
loopne
add
mov
inc
sub
jnp
incl
sbb
add
jmp
add
test
add
add
sbb
add
sbb
mov
sub
clc
add
sbb
push
add
push
cs
add
gs
add
je
imul
inc
add
popa
add
insb
sub
add
push
inc
gs
gs
jae
xchg
popa
add
push
add
add
add
je
add
add
add
add
add
xchg
add
xchg
add
add
xlat
jge
push
div
imul
data16
aas
inc
pop
push
fstps
jns
cmp
adc
dec
add
sbb
test
mov
out
in
sti
and
in
sahf
clc
roll
test
loopne
xlat
adc
movsl
ss
es
in
xchg
adc
inc
test
mov
shl
push
push
cmp
pop
or
and
adc
fiaddl
mov
fdiv
ja
cmpb
inc
stc
aaa
fdivl
aam
mov
and
and
push
data16
popa
xchg
pop
xor
jo
int3
shrb
call
mov
shll
pusha
repnz
and
mov
je
int3
popa
cmp
mov
pop
sub
int
test
jae,pt
mov
jns
inc
pop
pop
insb
adc
cmp
mov
lods
push
inc
pusha
jmp
xchg
xorps
pop
sbb
add
mov
xlat
ret
pop
xor
mov
shlb
dec
xor
adc
rcll
adc
aaa
pop
lea
popa
xchg
ss
inc
pop
add
add
cld
pusha
lret
push
and
iret
mov
js
or
shr
mov
adc
mov
aaa
adc
mov
push
pushf
call
hlt
lock
push
cmc
jl
leave
cmpsb
push
mov
icebp
xchg
cmp
xor
pop
adc
test
inc
daa
pop
div
jo
lret
in
inc
adc
mov
and
call
loopne
mov
and
mov
push
adc
sbbl
loope
aad
pop
mov
data16
push
ljmp
outsb
mov
cmc
pop
sahf
divb
dec
jne
jo
sete
jle
gs
iret
icebp
arpl
fdivl
push
xchg
loopne
sbb
shll
mov
pop
das
je
jmp
in
xor
add
inc
or
cwtl
ss
lret
pop
les
sahf
xlat
lcall
jns
aam
dec
je
mov
xor
in
enter
dec
int3
mov
jne
sub
sub
xchg
xchg
push
loope
add
xchg
pop
xor
xchg
mov
mov
pop
jno
xor
insl
jg
cmpsb
aaa
addr16
shl
mov
jecxz
or
shll
lds
xor
jo
in
mov
ret
test
daa
out
aad
mov
sub
jge
xchg
rcr
pop
fs
lret
lret
xchg
outsb
jnp
push
mov
and
dec
cmp
add
lock
jbe
mov
out
jo
test
push
xchg
xor
fists
and
rep
mov
pop
push
es
push
inc
mov
pop
cmp
fnclex
mov
fisubrl
pop
imul
mov
and
inc
mov
sbb
test
sbb
push
outsl
mov
hlt
add
and
push
bound
sub
sbb
js
dec
mov
leave
test
push
fs
xchg
sub
push
dec
xor
jnp
fwait
jg
lret
add
or
inc
dec
jne
pop
cld
pop
out
sti
mov
dec
pop
leave
jecxz
lds
jne
sub
pop
cli
xor
jno
lods
xor
xchg
push
push
stos
push
add
repz
jmp
stos
jg
mov
outsw
pop
sbb
mov
dec
fstpt
into
dec
cmp
adc
mov
rclb
lea
in
int3
lret
hlt
add
push
mov
sbb
jmp
lods
iret
xor
cmc
sbb
shl
lcall
popf
cmp
mov
stos
mov
outsb
leave
sub
mov
push
and
or
in
push
cmp
cmp
hlt
pop
add
and
and
imul
lods
mov
sub
in
sbb
fildll
xor
jno
jge
ds
dec
inc
stos
or
repz
mov
push
out
daa
popf
fnsave
ljmp
and
cld
lea
xor
or
mov
cmpl
inc
ss
and
adc
out
inc
xor
daa
push
mov
in
adc
scas
sahf
outsl
sbb
ja
inc
pop
push
vpsrlw
jle
add
pop
mov
rolb
into
pop
sbb
mov
mulb
fstl
idivb
fwait
out
add
or
or
mov
cltd
in
bound
aas
in
jl
xchg
add
push
loop
mov
fadds
adc
shrl
sti
mov
mov
cmpsb
jb
movsb
inc
inc
adc
inc
and
cmpsl
xor
nop
pop
inc
mov
or
out
cli
je
mov
ds
test
test
push
jmp
xchg
movsb
sbb
pop
int
loop
pop
fs
pop
lds
add
mov
xchg
dec
add
mov
xor
sahf
in
or
sar
aas
popl
sub
pop
mov
movsl
pop
test
stos
push
stos
pop
mov
sub
cwtl
jno
scas
call
sbbl
aam
fistl
mov
and
out
push
inc
bound
xchg
xchg
dec
in
loop,pt
imul
pop
jo
sub
lock
fstl
pop
fcmovu
scas
inc
out
popf
add
and
inc
stos
lods
adcb
lret
sbb
out
mov
lock
lea
rcl
jno
sbb
ret
mov
into
je
enter
sbbl
inc
nop
add
and
sub
outsb
mov
stos
mov
rolb
inc
mov
stos
pop
mov
arpl
shl
sti
push
mov
repz
dec
enter
inc
es
inc
push
into
push
nop
pop
mov
sbb
pop
stos
sbb
les
jo
lods
ret
or
xchg
adc
xor
pop
add
jl
add
jnp
cltd
mov
cmc
xor
inc
sbb
push
xchg
mov
lret
popa
jo
test
js
inc
data16
lock
sub
sub
test
rcll
or
nop
mov
fwait
inc
shl
in
jmp
ljmp
loope
adc
mov
insl
jnp
jne
out
and
inc
cmp
bound
mov
insb
xchg
loope
fidivl
out
in
cmp
sub
lret
insb
mov
xchg
pop
bound
lods
sub
sub
and
int
adc
push
inc
jb
push
inc
add
pop
add
mov
ret
adc
jae
pop
sbbb
std
or
push
pop
shr
inc
dec
mov
pop
adc
dec
jne
lds
sub
and
jns
stos
inc
or
into
in
sahf
push
sbb
mov
cmpsb
push
dec
mov
jge
ljmp
inc
and
stos
je
and
movsb
and
fdivrs
jecxz
dec
lret
xor
or
sbb
xchg
pusha
clc
xchg
xchg
and
pop
cs
icebp
fmuls
and
iret
push
push
sbb
fwait
iret
test
dec
push
push
mov
and
inc
dec
leave
fs
test
sub
hlt
adc
insb
sti
sbb
adc
insb
bound
pop
pusha
dec
rcrb
xchg
push
ror
arpl
data16
xchg
jno
cmp
and
out
push
xor
ficoml
dec
std
dec
inc
aaa
mov
xchg
pop
mov
outsb
adc
arpl
movsb
lock
cmp
idiv
mov
or
test
fs
outsb
call
inc
bound
sbb
ljmp
imul
js
cltd
iret
cld
adc
int3
ret
mov
cmp
mov
push
idiv
push
inc
jo
push
stos
out
mov
mov
mov
outsl
dec
xchg
call
sti
xor
test
add
jp
loop
adc
insl
dec
imul
mov
or
jl
shl
testl
pop
jp
xor
xor
dec
pushf
jg
mov
inc
insb
inc
pop
inc
pop
jle
xchg
mov
insb
lock
or
imul
clc
sbb
fnstenv
cmp
std
cmp
cmpsb
loope
or
xorb
into
sarl
ja
push
cmp
repz
rcrb
arpl
lcall
data16
push
scas
dec
xchg
and
subb
jne
ffreep
shrl
sbb
xchg
fsubrs
test
imul
cltd
sbb
mov
push
sub
sbb
frstor
in
mov
or
loop
cmp
pop
scas
xor
mov
ljmp
arpl
mov
enter
adc
dec
ja
out
popa
rolb
adcl
sarb
shlb
inc
lahf
mov
testb
and
repnz
lret
data16
xor
push
push
sub
leave
outsl
or
and
popf
push
stos
or
mov
pop
lods
dec
jecxz
push
loope
lods
xchg
cld
mov
or
dec
nop
xchg
in
jb
add
adc
repnz
std
clc
add
ljmp
mov
push
icebp
pop
lret
jno
mov
sahf
loope
jns
out
mov
dec
xchg
push
push
jg
outsb
cmp
and
in
movsb
rcr
fcmove
xor
and
jecxz
pushf
test
sub
mov
and
in
dec
jnp
ds
leave
push
shr
jle
mov
hlt
and
jge
pop
das
add
and
inc
jge
inc
lret
ficoms
sbbb
pop
cwtl
test
in
mov
cltd
pop
cmp
fwait
lods
lds
adc
pop
push
push
xor
adc
mov
and
mov
in
ror
rclb
xor
call
lahf
clc
xchg
dec
inc
xor
mov
data16
out
aaa
rol
dec
or
mov
xchg
in
mov
lahf
mov
imul
test
lcall
cmp
rorl
cli
ljmp
jnp
das
sbbb
cmpsl
xchg
stos
sub
call
jns
repnz
adc
cmp
testb
fcompl
mov
aad
loopne
mov
inc
mov
inc
ffree
adc
add
push
adc
xlat
addr16
divb
xor
mov
in
jg
pushf
fcmove
xchg
jmp
jle
jo
and
inc
cmp
test
or
ljmp
out
sub
rorl
mov
xor
or
pop
sbb
adc
jp
add
add
popa
xchg
popf
mov
cmp
into
xchg
pop
push
adc
xchg
pop
sbb
xor
ror
fldcw
lahf
cmp
movsb
lret
mov
repz
loope
push
sbb
or
and
mov
shll
lret
cld
pop
inc
cmpsl
insb
add
cmpsl
sbb
out
xchg
movsl
or
shrb
mov
outsb
and
xchg
fbstp
xlat
xchg
add
dec
imul
push
dec
aad
test
inc
lea
pop
ret
cmp
pop
imulb
mov
add
sbb
and
in
push
xlat
outsb
fwait
pop
loop
push
das
lds
jle
into
int
fildll
mov
mov
dec
aaa
jbe
push
push
filds
sbb
mov
mov
or
xor
inc
cmp
and
pop
rclb
dec
cmp
mov
das
sbb
push
insl
mov
pop
pop
mov
jmp
fisubrs
in
sbb
dec
jp
xor
sub
dec
push
in
pop
sbb
cmp
cmpsl
add
cs
call
outsb
sbb
out
pusha
pop
cmp
leave
inc
xchg
popf
dec
scas
jg
popf
test
sbb
int3
and
push
xor
das
jb
push
xor
in
push
xchg
jae
movsb
stc
fadd
cld
xor
daa
cmp
or
movsb
arpl
mov
gs
ds
inc
lods
dec
adc
add
ljmp
mov
mov
add
aaa
jge
jae
lret
aad
shrl
ljmp
stos
add
push
js
cmc
scas
data16
pushf
pop
mov
jo
pop
sahf
pop
shlb
into
cwtl
sti
sub
call
dec
push
cmp
inc
loopne
loop
dec
add
cli
and
es
cltd
test
push
subb
push
ljmp
xchg
test
nop
push
imul
inc
fmuls
rcrb
xlat
popa
adc
outsl
lock
int3
add
or
jnp
repz
sbb
or
ljmp
adc
icebp
dec
psubusb
lea
sbb
cmpsb
pop
movsl
inc
xchg
into
fstpt
pop
cmp
stos
cld
dec
push
push
into
pop
fisttpl
daa
and
pop
ja
sahf
leave
mov
shlb
mov
mov
and
jo
mov
push
pop
test
cwtl
das
mov
ss
into
aam
imul
test
push
cmc
dec
lcall
add
mov
jno
or
sbb
popa
cmp
lea
xor
xchg
xchg
fcompl
jae
mov
dec
cmpsb
sbb
fldenv
add
mov
xchg
mov
mov
mov
or
mov
scas
jb
cmp
loopne
add
gs
mov
jle
testb
mov
jbe
add
in
sbb
into
mov
ret
mov
daa
dec
fildl
add
mov
fldl
mov
cmp
insb
mov
push
xor
xor
xchg
in
dec
cmp
mov
sbb
mov
push
stc
addr16
xchg
outsl
pop
mov
mov
sbb
stos
adc
inc
outsb
call
jp
pop
sbb
mov
jns
es
push
sub
pop
cmpsb
xor
add
movsl
xor
and
jg
daa
inc
rcrb
ss
mov
repnz
and
repz
scas
pop
movl
aas
out
pop
sti
dec
lock
push
adc
jns
movsl
lea
jmp
mov
dec
stos
iret
mov
arpl
jg
test
dec
mov
xchg
data16
pop
inc
jmp
rorl
xorb
addr16
jae
fldl
xlat
sub
neg
mov
cltd
mov
pusha
fdivs
dec
call
leave
sahf
pop
inc
movsb
cmc
gs
sub
xchg
pop
pusha
fcmovnbe
xor
add
daa
popf
pop
fnstsw
fcoml
dec
into
xchg
mov
mov
jg
xor
inc
mov
lods
add
cld
out
and
rolb
push
shl
int
addl
fwait
jle
sbb
out
mov
scas
arpl
movl
mov
push
cwtl
popf
or
or
das
mov
mov
lcall
fisubrs
sub
in
mov
leave
pushf
int
mov
mov
add
mov
xchg
mov
push
mov
inc
and
cli
mov
add
jl
dec
rcrl
jg
xorl
in
dec
rorb
mov
or
sbb
push
inc
xchg
jmp
pop
mov
js
stos
ret
cs
xchg
pop
push
sti
mov
push
jno
dec
sbb
pusha
jmp
mov
push
scas
mov
xchg
dec
mov
cmp
aaa
lahf
mov
and
dec
jno
and
dec
ss
fidivrs
push
mov
and
es
and
ja
mov
ja
mov
les
cltd
outsl
mov
sub
ficoml
xchg
xchg
negb
in
inc
add
ja
pop
adc
and
into
cmpsl
dec
fstpl
or
lods
shrl
fdivp
and
call
sub
mov
push
adc
jecxz
add
test
and
aad
sbb
inc
insl
push
subps
stc
mov
pop
ds
pop
icebp
sub
sarl
lret
std
hlt
shl
adc
call
leave
enter
hlt
aaa
ja
cs
push
push
shll
aam
sub
mov
call
xchg
das
lret
mov
and
repz
sbb
arpl
inc
leave
pusha
in
sbb
add
lcall
push
sub
iret
jg
cmc
scas
cmpsb
inc
int3
lret
adc
jmp
pop
sub
cmp
push
mov
lcall
js
jae
jl
lahf
pushf
in
outsb
psllq
add
notb
mov
les
test
insb
mov
cmpsb
and
pushf
jp
jbe
sbb
push
rclb
xchg
mov
push
lahf
icebp
mov
adc
mov
seto
inc
ja
jnp
test
mov
mov
cmpsb
or
xlat
into
sub
out
mov
xor
cmc
dec
sub
jp
add
pop
add
push
outsb
mov
adc
inc
lods
and
les
mov
sahf
xor
mov
jnp
dec
aam
shrl
test
mov
arpl
lcall
push
aas
mov
mov
xor
push
cwtl
push
mov
sub
nop
jae
push
mov
xchg
lgs
test
and
test
jmp
orl
pop
mov
aad
xlat
xchg
mov
fldl
mov
ja
inc
call
xchg
imul
repnz
sti
je
mov
lahf
sub
add
push
lods
mov
xchg
hlt
xchg
popf
jno
aas
pushf
fs
imul
or
test
lods
dec
scas
sub
aad
cld
adc
push
inc
cmpb
fisttps
inc
jne
std
push
mov
dec
xchg
pop
sahf
subl
mov
popa
psadbw
xlat
jbe
ret
shr
mov
sub
push
test
fsubr
loopne
or
dec
pushf
sahf
push
loop
stos
mov
pushf
cmp
test
out
shl
andl
in
adc
push
jmp
rorl
sub
cli
and
das
push
push
mov
mov
xchg
rol
mov
add
out
notl
int
sub
or
jae
std
mov
mov
popf
or
lahf
cmp
data16
je
inc
jmp
mov
arpl
push
mov
fldcw
cmpsl
mov
stos
hlt
add
push
add
fstl
rcrl
adc
ja
clc
and
jnp
adc
ret
mov
je
sub
cmp
cltd
add
add
inc
add
in
add
add
je
add
add
add
add
js
add
add
test
add
add
fcoms
add
add
add
xor
xor
xor
adc
add
add
add
addb
stos
stos
add
incl
add
add
jne
or
add
add
add
data16
add
add
add
testb
add
add
add
pusha
add
add
add
add
inc
lock
add
add
add
add
and
add
push
jae
inc
imul
add
shufps
jmp
mov
enter
or
pop
push
lea
mov
enter
in
or
inc
call
add
cld
or
or
call
push
rolb
push
add
aas
adc
dec
insb
push
mov
mov
pop
pop
cmpl
add
add
jmp
add
add
adc
add
adc
add
xor
call
add
decb
cld
test
std
std
jg
and
cld
decl
add
enter
add
push
cmp
clc
dec
cmp
pushl
lret
mov
add
adc
lock
in
push
hlt
adc
add
add
add
add
add
inc
data16
add
add
insl
mov
inc
inc
inc
inc
outsl
outsl
mov
test
insb
imul
insl
inc
jns
les
jbe
je
arpl
mov
gs
cs
outsl
inc
jb
insb
jge
add
outsl
imul
je
je
je
insb
nop
add
add
add
add
and
add
add
add
add
add
add
mov
add
add
add
add
rolb
adc
shlb
xor
data16
aad
xor
xor
jae
lcall
or
mov
xchg
imul
pop
ret
fnstcw
movsb
and
in
mov
mov
cmp
fisttps
xor
push
pop
push
sbb
insb
cmp
adc
loop
dec
hlt
ret
jp
stc
jnp
cld
inc
push
fwait
ss
push
jle
mov
cli
cmp
pop
push
jne
lods
popf
ljmp
loop
jns
pusha
mov
addl
mov
out
inc
add
sub
jecxz
mov
lods
jmp
add
inc
repnz
mov
mov
or
push
out
sbb
pop
and
mov
ds
sbb
xchg
enter
shlb
pusha
cmpsb
rcl
outsb
and
jne
sbb
std
sbbb
xchg
aad
xchg
and
jg
push
ds
aam
add
xchg
jae
push
jbe
iret
and
dec
daa
and
xchg
mov
jg
imul
enter
cs
pop
rcrb
pop
fldcw
cmp
gs
psubsb
mov
mov
and
mov
or
mov
call
test
stos
loopne
loopne
and
jns
movsl
pop
shlb
xchg
cli
xchg
pusha
lods
fdivrl
aam
jl
inc
adc
xor
sub
push
push
or
pop
bound
cmp
loop
push
movsb
mov
outsl
or
aad
cmp
dec
stos
outsb
xchg
jmp
adc
cmc
shlb
jns
cmp
cmp
xchg
inc
push
sar
popl
stos
mov
ss
movsb
idivb
mov
call
arpl
xchg
arpl
mov
or
mov
pop
loopne
cmp
sahf
xchg
aaa
or
mov
out
sub
mov
negl
add
jle
push
dec
rolb
imul
mov
pmulhuw
test
scas
fmull
popf
mov
pop
xlat
sub
loopne
dec
jl
loope
cli
or
jne
mov
or
scas
aaa
inc
neg
pinsrw
jnp
ds
out
repz
pop
test
aam
push
decl
mov
sub
mov
push
xchg
in
adc
xlat
cs
cmpsb
into
into
sub
add
es
ret
and
and
pop
mov
mov
leave
cmp
arpl
mov
inc
add
fwait
push
xchg
shlb
ss
lds
xor
jo
mov
mov
push
or
pop
pop
subb
add
sub
pop
pop
jnp
or
lods
and
sbb
idivl
call
shlb
and
jae
aas
inc
pop
les
sbb
adc
mov
cli
in
xchg
and
and
lds
int
add
stc
out
and
roll
in
xorl
ljmp
jp
push
adc
out
in
movsb
push
out
lods
test
jge
xor
int
push
or
xor
xchg
lcall
xor
pop
mov
or
xor
xorb
or
adc
mov
jno
mov
or
push
std
stos
lcall
push
lock
andl
pop
mov
xchg
push
add
js
ljmp
jae
cli
ficomps
into
cmpsb
mov
andb
xchg
fwait
xor
fsub
push
xchg
push
jge
push
test
call
iret
or
push
jg
hlt
mov
imul
test
stc
aaa
ret
inc
dec
mov
movsl
out
mov
jns
scas
repnz
iret
inc
or
sbb
ldmxcsr
sub
jmp
out
cmp
pop
movsl
popf
lods
adc
cmp
pop
adc
mov
xchg
sti
repnz
mov
out
jl
mov
lods
push
fisttpll
mov
jbe
in
add
cmpsb
fldt
jb
cld
sub
add
mov
add
adc
fstl
sbb
aad
lret
shrb
and
inc
fdiv
jecxz
sbb
jne
jns
pop
dec
pop
lods
jnp
roll
ret
mov
stos
push
test
jmp
cmp
aam
jge
sub
rorb
imul
pop
cmp
lret
mov
pop
add
in
xor
test
in
lods
aam
xchg
sti
divl
adcb
lahf
repnz
adc
jp
jno
pop
es
or
jp
hlt
push
adc
cmpsb
mov
add
jp
insl
dec
mov
cmc
icebp
in
filds
mov
nop
cli
fisubrs
push
scas
sub
ljmp
ret
mov
mov
inc
mov
movsl
out
xchg
out
mov
ljmp
xchg
enter
mov
mov
daa
mov
push
unpcklps
aas
movsb
adc
lea
push
push
push
popa
mov
pusha
mov
mov
cmpsl
mov
lods
stc
into
mov
enter
cmc
sbb
mov
fists
fdivrs
addr16
jno
sub
add
idivl
fsubs
into
xchg
sub
lods
mov
pop
dec
mov
xor
cmpsl
sahf
inc
lds
cmp
clc
inc
cld
push
test
cli
dec
loopne
mov
sub
sbb
jg
loope
mov
xor
push
addr16
leave
pop
rolb
ret
jge
mov
jmp
push
push
or
add
testb
in
mov
adc
inc
pop
inc
inc
jno
cltd
dec
fdivl
out
inc
bnd
mov
into
jecxz
mulb
rcrb
arpl
lods
lea
imul
cltd
in
stc
mov
jne
mov
mov
rolb
arpl
loope
push
cmp
lods
inc
in
int3
je
xchg
arpl
clc
cmp
outsl
jp
scas
xchg
jle
inc
outsb
data16
loope
lods
push
pop
insb
inc
jecxz
xchg
test
dec
and
je
imul
outsb
sbb
cld
push
sub
push
test
xchg
aad
rcrl
push
cli
mov
loope
cmpsl
pop
mov
sti
jne
xchg
jle
or
jno
xchg
mov
sar
jmp
mov
pop
jns
and
pop
lahf
insb
mov
and
lahf
pop
mov
incb
xchg
mov
inc
pop
dec
jmp
xchg
imul
sbb
inc
xchg
scas
pushf
xor
mov
loope
insb
mov
xchg
into
sub
xchg
xor
lret
addl
sub
push
fs
pop
and
and
fisubs
mov
lret
jbe
or
adc
test
mov
mov
xor
mov
jae
and
les
lcall
sbb
mov
rolb
push
mov
mov
mov
push
aad
ljmp
mov
lea
or
cmp
mov
jecxz
mov
lea
fimuls
xchg
psubsb
xchg
lret
lds
push
push
jb
sbb
test
inc
fcmovb
shr
ss
lock
decb
orl
push
xchg
sbb
mov
shll
int
cmpsl
popf
bound
sub
dec
repnz
aam
cmp
sub
insb
shll
sub
jne
sbb
icebp
xchg
shl
inc
mov
jl
dec
repnz
stos
xchg
inc
mov
out
mov
lods
pop
andl
sub
stc
nop
test
dec
mov
cmp
insb
push
sub
ret
adc
in
imul
xchg
bound
fwait
lret
je
jnp
scas
sbb
xchg
mov
je
fwait
subb
cmpb
mov
clc
jns
fsubl
subl
and
call
cli
pop
or
jns
jne
bound
mov
bound
nop
xchg
cltd
xor
aam
cmpsl
sub
and
pop
aaa
repz
xor
nop
xor
jno
subb
inc
jmp
mov
add
xor
and
or
pop
inc
rcl
pop
mov
loopne
and
adc
push
lret
xchg
stos
adc
test
popa
dec
int3
adc
xchg
fisttpll
sbb
fwait
jbe,pt
repnz
mov
add
call
xchg
adc
push
pop
mov
add
jo
les
or
or
aam
mov
mov
push
inc
lcall
jg
in
in
or
xchg
out
dec
cmp
sub
faddp
imul
push
enter
jo
push
add
add
mov
or
mov
fsubl
adc
imul
cmp
dec
pop
dec
lahf
cmovp
mov
jne
mov
dec
jge
test
mov
mov
fucomp
idivl
hlt
cmpsb
stc
xchg
inc
jecxz
sub
jmp
pushf
imul
mov
pushf
push
xchg
pop
mov
add
mov
mov
xlat
subl
push
xor
inc
sub
test
jno
daa
andl
outsb
mov
test
and
mov
mov
clc
jne
lret
imul
mov
das
cmp
sahf
test
outsb
dec
dec
jne
push
arpl
lea
jmp
push
pop
sub
add
roll
loop
iret
cwtl
push
andb
push
adc
add
outsb
xchg
xor
enter
xchg
xor
bnd
push
scas
xchg
scas
fsubl
divl
enter
ljmp
push
mov
and
xor
mov
aas
dec
pop
pusha
sbb
idivl
nop
add
sub
cmp
xor
pop
sbb
pop
lds
or
cwtl
mov
out
or
jae
jne
leave
lods
stc
sbb
pop
in
cmpsb
fistl
cli
mul
lods
mov
test
les
mov
jg
mov
jb
pushf
push
dec
mov
fmuls
test
sub
fisubrs
add
inc
inc
xor
popa
les
sbb
fs
imul
xchg
sbb
jne
adc
psubusb
movsb
inc
jo
int
int3
test
fsub
cs
rcr
xchg
rcrb
in
mov
pop
adc
lods
jmp
xor
xchg
ss
mov
ljmp
call
inc
push
mov
xlat
cmp
mov
aam
pop
sbbb
xorb
push
sub
sbb
in
in
lds
aas
push
je
movsl
sbbl
nop
imul
data16
push
sbb
dec
stos
adc
adc
iret
cmc
sub
xchg
and
dec
xchg
test
int
imul
xchg
sub
mov
sub
pusha
jns,pn
iret
enter
push
dec
push
push
test
inc
sbb
sub
call
push
dec
cmpsb
iret
xchg
out
cmp
fldenv
add
and
mov
test
into
insb
rclb
stos
jge
mov
sti
dec
pop
push
jb
adc
pop
dec
inc
fiadds
cli
pop
push
subb
mov
push
je
in
jg
addr16
sbb
xor
pop
or
in
jmp
dec
xchg
mov
adc
cmc
sbb
pop
scas
jle
mov
das
aaa
mov
mull
cmc
es
push
lock
pop
dec
inc
scas
cmp
mov
es
dec
mov
icebp
pop
cmp
sub
lock
icebp
jbe
add
adc
shrl
fidivrl
jle
loope
push
lock
or
adc
pop
ss
fs
sbb
mov
lock
ret
jno
sbb
xchg
addr16
add
pusha
ror
daa
sbb
dec
mov
inc
into
sbb
aam
xor
out
push
jnp
cmc
mov
jge
out
fbstp
aaa
and
jge
cmp
add
mov
push
lahf
push
xchg
xchg
add
out
mov
mov
pushf
mov
ja
push
adcl
leave
mov
lods
jp
xchg
dec
aaa
stc
inc
fimull
push
repz
mov
push
xchg
repnz
imul
mov
mov
mov
and
fisubrl
xor
sbbb
lahf
inc
imul
adc
in
pop
pushf
fsubs
outsl
cltd
jnp
das
add
xor
aas
add
pop
xor
aaa
pop
aas
mov
pop
or
daa
and
mov
jns
aad
pop
ljmp
dec
cli
out
and
push
ret
shl
mov
sub
shl
sub
inc
lahf
popf
and
xchg
pop
icebp
sub
dec
rclb
and
dec
sbbb
jecxz
jmp
pop
cmp
shlb
mov
fisubl
repz
push
js
cwtl
ja
mov
dec
and
push
in
fiaddl
test
fwait
adc
sbb
rorl
jecxz
cld
ficompl
xor
test
sahf
shl
cmp
daa
add
xchg
scas
test
je
cmp
lock
mov
repnz
sahf
inc
popw
xor
bound
outsl
das
pop
mov
jg
loop
flds
fimull
jl
mov
adc
mov
ljmp
pop
popl
mov
in
insb
or
jl
push
xor
lcall
je
and
pop
inc
jne
arpl
jne
cmp
dec
stos
je
adc
xor
mov
sbb
fs
std
jp
cmc
mov
sub
add
cmpsl
arpl
xchg
leave
and
sbb
out
pop
shr
mov
flds
in
rol
ds
fbstp
divb
add
stos
inc
xchg
inc
jmp
push
lock
movsb
sbb
cltd
int
out
jecxz
push
in
outsb
push
sahf
int3
loop
sub
mov
inc
sub
bound
fcomip
jno
pusha
pop
stc
xchg
loope
fists
fmull
sub
cmp
clc
jle
es
jl
xor
iret
push
scas
in
arpl
jecxz
in
pop
lds
sbb
pop
das
ss
push
movsb
je
or
jg
mov
push
ds
sub
sbb
rcl
call
and
xor
mov
mov
pop
xlat
cmp
outsl
mov
lcall
ret
fisttpl
push
outsl
dec
mov
cmpsb
inc
popf
or
lahf
push
xor
push
insb
jge
jge
mov
pop
push
out
jno
jno
icebp
std
mov
jns
bound
sbb
notl
cmp
gs
stc
icebp
fdivrl
aaa
outsl
into
cmp
cmc
push
sbb
clc
movsb
out
imull
push
jmp
mov
rclb
jecxz
sub
mov
adc
cwtl
push
lock
loop
loope
cli
lods
inc
add
adc
sbb
push
mov
out
inc
scas
sbbl
pop
arpl
ds
aas
fldcw
dec
mov
loop
mov
jmp
xchg
jmp
out
or
arpl
add
insb
pop
push
or
in
test
das
cmp
or
push
inc
mov
jge
lret
adc
mov
push
push
loope
sbbl
pop
sarl
ret
test
sub
in
adc
cwtl
pop
bnd
mov
das
std
mov
outsl
xor
cmpsb
push
cmp
arpl
add
sahf
pop
dec
xchg
jmp
and
ja
and
gs
mov
xorl
cmp
mov
test
pusha
fs
jl
add
sub
out
mov
jecxz
sub
pop
roll
or
jno
les
adc
or
in
jae
enter
sbb
shl
xor
inc
sbb
xchg
mov
adc
aam
repz
sbb
mov
inc
push
fisttpll
adc
inc
cmc
fwait
jle
push
push
or
lock
dec
insb
lock
aas
ficomps
jb
decb
pop
outsl
pop
adc
jae
jne
enter
mov
cmp
inc
sbb
rol
push
push
lods
sbb
into
repz
xor
icebp
add
pop
xor
sbb
and
push
jge
mov
fsub
or
cmp
and
mov
aad
iret
sub
mov
rorb
cmovnp
jp
xor
ja
dec
push
sub
xchg
jl
out
and
xorl
scas
divl
pop
dec
sbb
mov
mov
stc
cmpsb
js
cmpb
dec
jne
cli
rorl
imul
lahf
xchg
xor
and
xor
movsb
call
adc
inc
and
int
outsb
out
aam
imul
std
inc
cmc
jle
movsb
mov
cmpsb
hlt
nop
xor
fdivs
ljmp
das
scas
pushf
ret
pop
loopne
sbb
cmp
adc
add
jb
loope
pop
xchg
adc
xchg
cld
and
mov
mov
in
int
leave
mov
push
xchg
sub
imul
jge
out
aam
or
dec
add
or
cli
or
mov
rolb
js
xor
jl
in
loop
insl
add
cmpsb
mov
sarl
mov
inc
sub
xor
push
xchg
ljmp
mov
xchg
add
stos
lahf
jo
xchg
mov
mov
fcmove
stos
pop
into
cmp
xchg
int3
ret
cmp
sbb
jle
daa
and
or
dec
add
clc
inc
ret
mov
jl
test
pop
sarb
gs
shr
mov
dec
ror
push
sub
xor
adc
cs
cmc
push
lcall
pop
or
xchg
ret
fidivrs
pop
mov
mov
je
push
loop
adc
pop
dec
pop
repz
addr16
lods
inc
adc
dec
mov
cmc
lcall
dec
cmp
movb
inc
mov
addl
pop
in
dec
movsb
iret
scas
movsb
cmp
xchg
mov
or
cmc
and
inc
sub
jle
push
push
cli
xor
jb
movsb
imul
push
popa
mov
rorb
mov
pop
sub
fwait
inc
jne
ja
xchg
xchg
pusha
data16
and
xor
arpl
adc
jecxz
mov
sub
or
popa
lods
jae
or
sbb
xor
adc
xchg
inc
repnz
xchg
sbb
mov
insb
push
jo
mov
out
sub
cmp
cmp
fstpt
int3
sub
stos
adc
add
add
add
add
add
nop
add
add
add
add
and
add
add
add
xchg
add
add
add
add
add
add
push
add
add
add
add
rolb
add
add
add
out
addb
scas
stos
stos
add
ja
mov
incl
push
mov
sub
orl
mov
inc
mov
pushl
pushl
pushl
push
push
call
add
mov
cmp
jbe
andl
cmpl
jne
call
mov
add
push
pushl
call
mov
mov
movzbl
mov
movzbl
sub
test
je
mov
add
mov
push
push
push
pushl
call
mov
sub
mov
add
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
movl
mov
sub
test
je
push
push
push
call
push
push
push
push
push
pushl
call
pushl
call
push
push
pushl
pushl
pushl
call
call
call
call
call
call
push
push
call
mov
call
mov
push
push
push
call
push
lea
push
push
call
add
pushl
pushl
pushl
call
add
pushl
pushl
pushl
call
mov
pushl
pushl
call
mov
pushl
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
push
pushl
call
mov
pushl
call
cmpl
jb
mov
leave
ret
dec
add
add
add
and
add
add
add
add
add
adc
add
add
add
add
bound
add
add
add
push
add
add
add
add
mull
add
add
add
add
add
sub
clc
add
add
and
popa
outsb
and
pop
ja
jae
inc
dec
and
push
ja
mov
add
xor
or
fisttpl
xor
or
push
adc
push
lea
adc
lea
mov
jmp
test
jbe
cmpl
add
dec
jno
and
cmp
inc
add
add
push
sbb
repz
adc
add
incl
add
add
mov
incl
adc
rcr
inc
or
inc
arpl
sar
adc
repz
add
push
push
add
mov
clc
mov
sar
add
jne
pushl
add
add
pushl
add
inc
add
insb
add
add
add
add
add
repnz
add
push
add
add
add
inc
inc
outsb
and
jne
adc
je
jo
sbb
popa
jo
out
inc
je
inc
gs
insb
mov
lret
arpl
popa
inc
insb
push
jae
cmp
jb
insb
push
jae
gs
jne
inc
push
jb
xor
gs
js
xor
add
add
and
add
add
add
add
add
add
push
add
add
add
ja
add
add
add
add
out
add
add
add
les
test
pop
dec
cmc
and
nop
mov
cmp
aaa
psubb
addr16
dec
inc
adc
lock
out
mov
repnz
fcomi
test
clc
rcll
daa
outsl
test
mov
fnsave
cmp
mov
jns
loope
nop
xor
mov
lock
aad
mov
les
xchg
sbb
or
stc
sub
arpl
and
rcrl
xchg
scas
lret
stos
pop
or
push
rol
push
loope
insl
adcb
out
clc
lods
outsb
or
sbbb
xchg
andb
jno
cs
loop
xor
jne
mov
sahf
xor
dec
clc
jp
call
inc
add
dec
add
roll
shrl
pop
adc
cs
push
out
add
jg
test
mov
mov
mov
insl
pop
daa
mov
fdivl
jecxz
lret
in
andb
adc
dec
cs
cltd
in
imul
pop
adc
out
cld
cmpsb
hlt
mov
push
push
or
inc
out
dec
cmp
cmc
pop
clc
dec
sbb
repnz
or
pop
pop
push
out
int3
sub
inc
test
pop
in
jecxz
loope
mov
into
mov
aad
inc
popf
inc
mov
test
add
jno
mov
xchg
mov
mov
inc
fadds
pop
add
test
jle
adc
test
xlat
test
jb
fildll
or
lea
gs
scas
in
popf
jmpw
sub
scas
out
sbb
pusha
xchg
and
adc
testl
dec
test
outsb
in
pop
jcxz
dec
stc
je
add
out
fadd
inc
into
xchg
psubsw
insl
int3
iret
pop
mov
inc
loopne
stos
sbb
outsl
inc
push
aas
xor
ret
inc
push
cwtl
loop
and
daa
imul
xchg
cmp
push
imul
or
addr16
sbb
loop
sbb
sub
pop
lea
repnz
add
adc
aad
ja
adc
sarb
or
inc
pop
mov
cmp
fsubl
sbb
mov
test
popf
cmp
xchg
sub
cltd
dec
ljmp
sub
inc
inc
fcoml
cli
fidivrs
and
pop
xchg
movsl
jge
test
ficomps
push
cmp
xor
hlt
out
cwtl
fcoml
subl
mov
dec
lods
adc
add
test
cmp
lock
mov
push
dec
jmp
adc
xchg
int
dec
ficoms
mov
mov
je
add
dec
or
fimuls
scas
cwtl
xor
nop
cmpsb
aam
call
testb
xchg
or
daa
es
push
into
add
push
je
mov
jmp
xchg
das
push
je
rclb
roll
wrmsr
fcmovnbe
jbe
loop
das
jecxz
cmp
pop
sarb
cmpsb
lcall
cmp
mov
daa
inc
jb
std
repz
cmpsl
pushf
add
iret
out
push
ds
repnz
pop
test
inc
test
imul
adc
pop
stos
gs
outsl
stc
fwait
cmp
lret
xor
or
out
mov
enter
hlt
das
add
dec
pop
and
mov
add
and
arpl
test
jge
test
lds
push
dec
addl
aad
popa
pop
xor
push
jns
dec
pop
sub
cmp
fdivl
out
pop
es
insl
imul
xchg
pop
daa
punpckldq
push
mov
jp
rcl
mov
popa
fisubrl
ror
das
or
mov
sbbb
popf
fidivrs
cmp
push
mov
push
movsl
cmp
add
sub
and
sbb
cmp
or
leave
int3
sub
filds
push
js
dec
lea
in
xchg
jo
in
mov
mov
in
lcall
dec
mov
ljmp
or
inc
jb
pop
cwtl
push
inc
divl
adc
cmpsb
mov
jge
mov
inc
mov
jl
fbstp
mov
pop
jmp
gs
pop
adc
push
ficoms
es
xor
imul
push
xchg
loopew
and
popf
dec
push
or
jbe
popf
movsb
cmp
out
sub
push
pop
push
mov
pop
loopne
xchg
adc
push
fistpll
mov
or
sbb
xchg
outsb
pusha
inc
jg
jmp
je
xor
cltd
in
pop
push
lods
daa
xchg
adc
pop
xchg
mov
es
std
xchg
xchg
mov
push
clc
leave
aam
jns
sub
ret
push
dec
popl
outsl
ja
cmpsb
mov
jp
cmc
mov
dec
pushf
and
imul
out
or
xor
lret
mov
lods
rcl
in
ficoms
xor
pushf
push
out
lahf
mov
lods
mov
addr16
and
mov
dec
leave
fbld
js
cmp
out
push
in
aad
loope
xor
gs
jns
sub
cltd
out
adc
mov
ljmp
inc
aas
or
push
pop
dec
lock
and
inc
jecxz
cmp
sub
cs
subl
dec
data16
ja
daa
cmp
and
cmc
test
xchg
cli
adc
nop
jne
out
sub
test
call
mov
lds
mov
and
jae
adc
push
dec
push
popw
mov
test
dec
mov
add
arpl
test
jne
movsl
lret
pop
int
in
int
pop
mov
rcl
mov
inc
mov
cmc
inc
and
sbb
push
mov
loop
or
push
cmp
sbb
daa
push
cmp
popa
push
mov
fwait
in
shlb
fpatan
popf
out
push
lods
inc
fisttpll
lods
negb
push
dec
and
rorb
movsb
outsb
ds
jne
xlat
cmpsb
jne
sbb
insb
les
fldl
sbb
pop
push
cmp
enter
adc
jmp
and
sbbl
repz
aaa
push
clc
adc
cwtl
dec
jp
mov
cmp
pop
mov
mov
jmp
movsl
cld
and
pop
cmpsl
outsl
mov
dec
inc
inc
xchg
loopne
mov
cwtl
xchg
jno
in
push
push
stos
push
jmp
dec
les
xor
add
lea
inc
mov
jge
cmc
cmc
xchg
cmp
xor
jmp
jecxz
imul
inc
std
gs
cmc
pop
test
sbb
fldl
lods
inc
fiaddl
addr16
dec
and
inc
ret
fcmovu
orl
addl
and
sbb
test
pop
jno
push
xor
adc
cmc
adc
gs
movsl
subb
jp
pushf
movsl
xchg
lret
je
adc
inc
or
jo
adc
out
imul
pop
pop
mov
outsl
andb
mov
xor
add
inc
loope
mov
jo
fstpl
xchg
mov
push
js
sub
dec
aaa
int
mov
sub
pushf
mov
pop
addr16
cld
ss
xchg
xchg
and
les
sti
iret
jge
incl
lret
inc
mov
cmpsb
xor
das
sub
jnp,pn
cmc
sbb
add
push
stos
icebp
ss
jns
lds
mov
gs
inc
in
fstpl
lcall
mov
imul
inc
add
aas
out
ret
mov
jge
and
mov
add
mov
and
cmp
mov
leave
shrl
cmpsl
xchg
cmc
xchg
leave
push
cs
insb
fmull
insl
inc
lods
cmp
cmp
leave
jns
push
jl
clc
mov
add
adc
pushf
stc
mov
out
lea
xor
xchg
je
pushf
ror
cmc
testb
jb
stos
jae
push
mov
cld
or
out
mov
sub
movsl
cltd
dec
lock
sub
rclb
movl
sbb
xchg
sbb
or
arpl
mov
mov
aas
shrl
inc
es
ret
ret
mov
xor
xchg
pop
je
mov
test
add
mov
int3
lods
rcll
aad
sbb
sbb
js
or
and
push
jp
sub
mov
out
sbb
cmp
daa
ret
push
cmpsb
aad
mov
inc
cmpsl
in
cmpb
push
test
jae
stc
xchg
mov
and
in
into
cltd
push
dec
add
push
lods
in
and
fsubrl
xchg
push
adc
pop
fidivs
mov
sahf
mov
jbe
repnz
cmpsb
dec
dec
cmpsl
xchg
xchg
aas
add
out
push
pop
pop
clc
and
add
daa
rorb
jne
data16
sbb
sahf
jle
pushf
dec
push
in
sarl
push
out
pusha
add
nop
aad
into
sbb
adc
xor
mov
test
mov
aam
loope
dec
int3
js
out
mov
fbstp
or
test
shlb
nop
jne
movsl
bound
or
mov
sbb
movsl
sahf
xor
shll
sbb
and
fimuls
fsubrs
enter
xor
jo
stc
add
pop
mov
xchg
mov
and
push
inc
xor
jecxz
je
adc
cmp
mov
sbb
mov
notl
test
pushf
sbb
inc
movsb
pop
add
jecxz
xchg
pop
and
in
inc
dec
push
inc
jge
mov
inc
mov
icebp
adc
fwait
mov
ret
push
jb
and
mov
hlt
cmpsl
xor
shr
cmp
mov
cmp
leave
mov
adc
lds
pop
cmp
sbb
icebp
and
push
cmp
popa
popf
dec
or
sbb
push
adc
push
xchg
popf
ret
outsl
jne
sbb
mov
insb
xchg
mov
jae
test
sbb
sbb
mov
mov
sub
sti
imul
jmp
xlat
jnp
aaa
repnz
pushf
fldl
into
dec
mov
daa
subb
jne
push
push
ljmp
push
stos
adc
dec
mov
mov
dec
ss
cmp
xor
jl
pushf
dec
in
mov
xor
pshufw
cmpb
adc
ja
mov
out
and
lods
jns
xchg
mov
pop
sub
add
inc
dec
cld
sbb
clc
sarl
xor
inc
mov
inc
shr
mov
lock
adc
in
mov
xchg
ss
adc
sbb
icebp
popa
push
movsb
and
icebp
mov
stc
repz
xor
adc
arpl
sbb
mov
addr16
push
inc
xchg
lods
ljmp
mov
push
or
and
jb
cmpsl
sub
lds
mov
push
pop
cmpb
ja
aad
xchg
ret
jecxz
in
xchg
rcrb
cmpsl
inc
or
arpl
jge
stos
pop
cltd
movsl
cmp
incl
sub
push
andnps
cmp
and
outsl
ficompl
call
mov
mov
sub
ret
inc
mov
cmp
adc
nop
lods
push
pusha
aam
cmp
adc
fsubrs
outsb
dec
jae
pop
inc
je
push
push
das
xchg
adc
pusha
adc
pop
fiadds
sbb
cltd
mov
and
mov
ret
push
repz
addr16
xchg
mov
jo
cwtl
dec
insb
jae
arpl
mov
mov
bound
negb
daa
dec
lahf
lds
ret
dec
xchg
ud2
jno
out
add
fistps
xor
xchg
mov
scas
mov
shrl
sbb
mov
icebp
imul
popf
or
loope
das
les
xor
js
pop
cmp
jne
jbe
inc
or
xlat
jmp
mov
add
jp
xor
mov
les
flds
and
or
in
movsb
insl
sbb
dec
adc
out
in
rclb
scas
fwait
fwait
and
push
cwtl
jg
sub
movsb
mov
shll
jne
in
leave
xchg
and
pop
add
mov
scas
and
fstl
inc
outsb
xor
jmp
pop
sbb
inc
sub
and
in
mov
lds
movsb
sahf
es
add
jns
inc
fstp
or
fmuls
mov
les
xor
int3
mov
add
sbb
jbe
inc
sub
pusha
xchg
and
icebp
inc
sbbb
xlat
cmp
jno
sbb
pusha
push
mov
lret
mov
inc
push
adcl
sbb
in
mov
cmp
ret
or
stos
mov
dec
testl
std
adc
int3
xor
inc
mul
enter
cmp
adc
std
inc
adc
imul
xchg
loope
es
pop
push
rcll
dec
jmp
add
daa
inc
stos
dec
push
jg
inc
ds
dec
and
jae
pop
push
bnd
mov
shlb
xlat
out
xchg
in
sub
jecxz
insb
aad
shrb
loop
mov
sbb
in
and
mov
xor
fsubs
aad
mov
mov
mov
add
pop
cs
clc
lret
push
in
adc
mov
jg
into
pop
xor
nop
push
out
mov
pop
mov
add
fnstcw
sbb
out
jge
ret
lods
pop
mov
xlat
pop
je
orb
fildl
push
push
sahf
and
mov
lret
mov
outsb
jne,pt
mov
hlt
imul
jmp
mov
pop
addb
outsb
push
sub
sub
test
add
mov
push
mov
test
shr
subb
mov
clc
jb
jecxz
xor
jo
out
inc
lods
lock
adc
rcrb
test
xor
xchg
test
jecxz
add
aaa
and
fisubrs
lahf
test
imul
popf
xchg
cmp
das
or
daa
and
mov
mov
rcl
pusha
hlt
nop
loope
pop
pusha
push
push
xchg
mov
cld
add
jle
int3
sbb
jmp
filds
inc
movsl
adc
inc
sbb
jbe
mov
shrl
or
lret
call
pop
jns
inc
add
adc
stos
mov
aas
in
addr16
inc
insl
fs
stos
fs
mov
lods
dec
scas
iret
cmc
xchg
cmp
sub
mov
xchg
xchg
dec
dec
push
sahf
outsl
cmpsb
mov
stos
dec
rcl
inc
dec
and
xchg
mov
add
adc
mov
cs
sub
nopl
repnz
aaa
lods
mov
inc
xchg
inc
in
out
std
in
add
sbb
mov
mov
jmp
cmp
mov
pop
pop
add
sub
call
test
lds
fsubs
loop
jp
lahf
jmp
jae
inc
push
aas
in
mov
inc
int
jp
call
into
adc
add
cli
gs
repz
mov
es
push
pop
push
call
sub
and
fwait
push
push
inc
jns
sub
mov
addr16
cmp
sbb
jb
imul
pop
and
add
and
dec
mov
iret
or
jmp
pop
push
sub
fs
pushf
mov
sub
pop
fnstcw
js
clc
sarb
pop
jg
xor
jg
popf
leave
inc
jp
jbe
push
push
leave
cmpsb
or
repnz
cmc
pushl
mov
fisubl
cltd
loope
imul
lock
stos
insb
outsl
mov
dec
dec
adc
add
ret
dec
int
jge
pushf
mov
adc
enter
sub
fldenv
xchg
cli
push
add
cmp
add
mov
mov
or
jo
inc
mov
cmc
jge
mov
adc
sub
push
les
sub
mov
nop
inc
xor
repz
mov
stos
into
pop
cmovae
cld
xor
fdivr
mov
inc
loope
cmp
test
mov
sahf
je
lea
xchg
and
sarb
adc
movsb
mov
adc
adc
hlt
inc
stos
enter
cmpsb
mov
and
and
adc
and
lock
jnp
mov
sub
jmp
out
push
xor
sub
cmp
cmp
and
ret
adc
andb
xlat
jno
mov
lods
mov
rcrl
xorl
rcll
call
je
push
cmp
push
jb
xor
sub
out
pop
scas
adc
pop
push
mul
adc
sbb
jle
js
mov
ss
repnz
aas
xlat
adc
push
push
lret
daa
jl
or
int3
filds
int
jecxz
sub
ficoml
lock
mov
fmuls
cwtl
pop
or
mov
mov
pop
arpl
cmpsl
andb
inc
pop
aad
sub
or
dec
aaa
mov
in
add
add
pop
stc
xchg
adc
cmpsb
js
sbbl
test
or
mov
sub
mov
pop
mov
rorb
mov
jnp
and
test
jecxz
mov
test
add
jp
xor
pop
aam
add
add
es
xchg
std
xchg
inc
cmp
cltd
jo
dec
arpl
enter
adc
fidivl
dec
mov
lods
in
fnsave
or
xor
mov
into
addr16
pushf
mov
cmp
repz
test
lods
jnp
inc
test
mov
aaa
lahf
negl
insb
push
push
jnp
sub
adc
dec
sub
daa
pop
mov
xchg
out
lea
stos
mov
inc
popa
dec
subb
enter
je
push
leave
xor
call
fstl
nop
gs
push
sbb
daa
inc
add
sbb
call
or
lods
stc
sbb
pop
mov
in
add
mov
cmc
inc
sbb
mov
rolb
insb
int
jb
cmp
ds
test
dec
not
mov
cmp
das
jo
pop
adc
or
dec
mov
aad
or
popa
push
and
das
aam
cmc
adc
ret
ret
lret
sbb
cmp
aad
cmp
jmp
sbb
sbb
repnz
bound
filds
lcall
popw
mov
jecxz
pop
add
lahf
fldt
aam
dec
pop
mov
xor
add
fs
xchg
sub
fistl
dec
and
jae
and
mov
popl
sbb
add
add
add
add
add
cmpsl
add
mov
add
add
add
add
and
add
add
add
add
add
add
push
add
adc
add
jbe
add
add
add
add
add
or
add
add
incb
add
xor
sbb
sub
mov
add
add
add
add
add
stos
stos
add
xchg
ja
mov
cmp
add
in
sub
mov
push
mov
push
movzbl
mov
sub
je
call
mov
incl
movzbl
jmp
cmpl
je
cmpl
je
call
mov
xor
call
mov
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
not
mov
or
mov
call
mov
pop
pop
leave
ret
push
mov
mov
mov
mov
mov
add
add
mov
push
mov
pushl
add
mov
mov
mov
call
mov
call
mov
mov
mov
movzbl
movzbl
sub
je
addl
xor
mov
push
push
push
push
push
push
push
push
push
pushl
pushl
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
ret
push
mov
push
xor
push
push
movl
movl
movl
mov
movl
mov
mov
call
mov
mov
mov
push
push
movl
movl
mov
movl
call
push
push
mov
call
push
mov
call
pop
pop
ret
push
mov
sub
push
pushl
call
mov
pop
movl
push
andb
call
mov
mov
andb
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
movl
movl
movl
pushl
movl
call
pop
test
pop
jne
push
pop
jmp
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
push
lea
push
push
call
add
leave
ret
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
jmp
push
push
push
pushl
call
call
push
pop
pop
ret
jae
jb
jo
add
call
add
push
pushl
call
push
push
push
push
push
call
push
imul
jb
je
arpl
incl
add
add
add
and
gs
gs
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
iret
je
add
add
mov
add
add
add
sbb
sbb
sbb
jecxz
cmp
cs
push
push
jbe
dec
add
imul
add
mov
fimull
mov
adc
mov
inc
cmc
mov
decb
mov
mov
subb
lds
test
incl
loop
decl
fs
push
adc
jge
out
in
add
sar
push
mov
mov
gs
add
add
add
sar
push
decl
push
push
push
cmp
cmp
add
add
cld
add
inc
mov
testl
call
inc
add
lret
clc
cmp
out
cmp
adc
adc
add
inc
push
pop
enter
add
add
add
add
add
add
add
pop
sbb
sbb
pop
add
add
imul
les
outsb
gs
inc
insl
inc
imul
gs
push
push
inc
add
js
add
gs
mov
gs
popa
inc
je
lods
gs
outsl
jb
sbb
inc
fs
add
add
add
add
add
clc
add
aas
add
add
add
dec
add
scas
add
movsl
xchg
cmp
mov
movb
fucomip
and
ss
out
adc
mov
mov
movsl
addr16
adc
fwait
cmc
sbb
cs
iret
push
mov
popf
mov
xchg
mov
add
or
push
pop
and
je
into
xchg
das
or
lret
sub
ss
mov
push
outsl
dec
inc
out
add
mov
push
outsb
data16
mov
cmpsb
rcrl
mov
and
enter
sbb
mov
mov
fs
sbb
loope
insl
loopne
or
rcll
jmp
mov
or
push
jge
dec
and
inc
ror
dec
movsb
cmp
imul
push
push
sbbl
jg
mov
sbb
dec
adc
jb
mov
popl
xor
sub
push
push
lock
lret
jecxz
add
movsl
mov
in
loop
mov
xchg
pusha
jns
and
mov
sbb
es
adc
jb
push
sub
inc
test
out
jle
lret
int
mov
mov
ds
sub
sub
fldt
in
xchg
gs
and
dec
das
divl
ret
loop
xchg
scas
mov
mov
mov
pop
push
pusha
or
rclb
add
iret
jo
sub
bnd
out
sub
arpl
std
jmp
dec
sbb
inc
andb
push
cmp
cmp
jmp
sbbl
add
xchg
ja
mov
or
test
mov
int
jne
xor
shlb
adc
lds
inc
push
pop
sbb
lock
in
shll
stos
jg
push
mov
mov
mov
sarl
and
out
push
das
cs
or
cmp
loopne
sub
lock
insl
fs
and
xor
aam
std
or
ret
mov
cmp
insb
xor
jl
sbb
jge
dec
pushf
dec
jns
scas
daa
mov
in
aam
pop
out
jno
jne
mov
cmc
sbb
push
clc
sub
mov
or
inc
movsb
test
int
insl
je
aaa
js
mov
mov
cmp
lds
aam
add
cmpsl
cmpsb
fisttpl
mov
jle
jb
cltd
out
sahf
jns
popa
fists
in
and
jnp
ja
jecxz
hlt
sub
cmp
mov
adc
call
push
sub
imul
jge
pop
lock
push
add
add
roll
add
pop
or
dec
fucomi
pop
ret
int3
xchg
fimull
sbb
leave
jp
sbb
and
loope
outsb
out
push
or
mov
sub
adc
lcall
insl
and
mov
mov
mov
xlat
imul
xor
mul
mov
jae
jmp
shr
jmp
mov
pusha
mov
cmpsb
cmc
xchg
das
add
iret
imul
jmp
ljmp
lret
push
dec
sub
rorl
pop
pushf
or
insb
xchg
stos
inc
popa
fs
lds
fisubs
mov
arpl
ret
mov
mov
pop
pop
xchg
scas
outsl
jae
lahf
scas
faddp
dec
mov
lds
mov
loopne
xor
sbb
jo
jle
add
jb
andl
sbb
pop
lcall
pusha
nop
orl
push
inc
imul
mov
fidivs
cld
and
mov
pop
inc
stc
sbb
lods
xchg
pop
pop
fs
jp
sahf
xor
inc
mov
movsl
je
lods
jns
fs
sbb
push
mov
out
mov
dec
sub
mov
cmp
ljmp
daa
cmovp
pop
mov
ret
dec
rclb
adcb
dec
xor
xchg
stos
std
xor
mov
jp
cmp
jmp
idivl
nop
xor
shr
cltd
hlt
stos
scas
iret
adc
mov
mov
jle
test
mov
orb
xchg
cltd
xchg
sbb
iret
arpl
clc
mov
or
imul
pop
lret
xchg
mov
daa
int3
adc
lret
out
lock
sbb
rcrb
inc
xchg
imul
repz
test
clc
into
bound
and
mov
mov
sbb
aas
push
mov
stos
sbb
add
scas
fcomp
cs
or
and
xchg
clc
orl
cmc
iret
inc
arpl
ret
dec
pop
mov
add
xor
cmpb
scas
test
inc
sub
or
pop
xor
out
popa
push
dec
ret
andb
addr16
or
xlat
xchg
lcallw
andl
mov
xchg
push
aaa
push
test
iret
adc
cmpsb
and
mov
je
xlat
stos
fs
push
cmc
pop
cmpsl
cmp
out
les
cmp
jge
cli
adc
call
xor
mov
fcoml
rcrb
sarb
lret
ss
fcompl
negl
sti
testl
pop
and
repz
out
adcb
gs
lods
in
stos
push
ss
sbb
mov
jmp
icebp
inc
hlt
pop
ret
adc
push
pop
aaa
jle
fnstenv
inc
nop
inc
or
aad
in
or
sbb
push
pushl
or
in
mov
cltd
mov
pop
rolb
or
lods
mov
popf
scas
addr16
sub
sbb
or
push
dec
cwtl
cld
out
or
enter
bound
insl
mov
insb
inc
pop
repnz
mov
insl
cli
test
jecxz
ja
hlt
jg
push
mov
add
in
xchg
bound
setp
sbb
sbb
ret
cmp
lods
rorb
fs
js
inc
dec
dec
jb
repz
lods
push
testl
shlb
lahf
inc
sub
lahf
mov
cwtl
int
push
ret
fucomip
loopne
pop
or
push
jg
pop
popf
jmp
mov
push
cmpsb
test
mov
cmp
mov
pop
sub
shl
je
adc
addr16
test
inc
rcrb
mov
xchg
lret
pop
pop
xchg
int3
pushf
adc
repz
bound
jno
push
mov
dec
adc
iret
and
cmp
loope
adc
test
push
jp
push
cmpsl
cmpl
add
mov
xchg
scas
xor
lods
or
push
out
jns
cmp
jno
cwtl
pop
adc
sti
add
mov
adc
aas
sbb
ret
push
popa
cmc
nop
out
das
mov
jo
jbe
movsl
ret
sbb
pop
test
sub
lods
or
sbb
mov
js
mov
mov
test
scas
js
ret
dec
sub
or
inc
sbb
inc
lret
sub
adc
dec
lcall
sbbl
icebp
pop
mov
mov
or
les
cmp
js
adc
mov
pop
or
ja
adc
sub
adc
fsubr
mov
sub
cmpsl
inc
aam
out
xor
mov
jl
jp
pop
lods
imul
in
insl
aad
push
xchg
lret
pop
pop
cli
sbb
mov
aaa
mov
ss
jns
sti
xchg
lahf
lret
not
push
push
call
rcrb
loopne
jmp
sbb
sub
negb
mov
inc
icebp
pop
pop
out
jge
pop
iret
dec
sub
xchg
inc
add
jl
lcall
adc
mov
out
dec
jo
sbb
in
cmp
and
and
pop
xchg
js
cld
or
inc
jmp
push
inc
adc
sub
cli
lahf
mov
pop
inc
push
aad
mov
pusha
xor
mov
add
movsl
pop
cltd
inc
daa
mov
push
int
sub
and
mov
dec
lcall
xchg
jno
fdivl
movsb
mov
addr16
insl
out
jbe
dec
loopne
subb
scas
fdivs
out
xchg
pop
icebp
out
pop
jl
lods
fcmovnbe
cmpsl
gs
stc
fsubrl
push
xor
faddl
sbb
sbb
jecxz
push
test
das
fs
imul
cmpsl
lods
mov
cmp
shll
mov
bswap
sub
mov
je
push
xor
ja
pop
imul
mov
mov
aaa
cmp
mov
outsb
dec
or
pop
cli
in
add
call
out
sti
push
mov
and
loop
or
xor
xchg
cld
jmp
cwtl
push
fcomip
loopne
push
inc
mov
sbb
scas
popf
lahf
add
dec
leave
mov
scas
rol
xor
pop
push
fidivrs
push
xor
nop
addr16
sub
mov
rclb
mov
cld
mov
outsl
jmp
mov
add
jne
mov
xchg
ja
mov
mov
push
adc
sbb
xor
jbe
inc
xor
push
and
mov
es
sub
or
lods
and
jnp
and
repz
push
scas
iret
push
inc
cli
arpl
and
jmp
test
sarb
jno
dec
mov
xor
mov
jb
mov
jno
mov
ret
imul
arpl
xchg
or
xor
and
sbb
in
out
cld
iret
cmp
jmp
cli
loopne
jmp
cmpsl
out
fsts
iret
cmp
xchg
xor
xchg
jne
mov
inc
xchg
shlb
test
cltd
mov
cmp
mov
and
xchg
xor
rclb
stc
jle
add
mov
repnz
insb
repz
popf
mov
mov
out
or
xor
and
sub
push
repz
test
or
or
fwait
or
fsubr
f2xm1
jmp
add
inc
std
adc
adc
or
dec
xchg
outsb
test
negl
in
cmp
cmpsb
mov
mov
cmp
dec
push
jbe
xor
loope
ss
scas
sbb
inc
sbb
xorb
and
je
lods
cmpsl
add
add
lock
xchg
cwtl
jge
fnsave
cs
xor
fs
cmp
cld
mov
push
leave
inc
mov
icebp
xchg
ror
in
lret
pop
inc
subl
xchg
popf
shr
das
mov
pop
adc
call
mov
inc
jecxz
lcall
stc
or
sub
dec
jne
jmp
ret
loopne
loopne
lcall
push
push
dec
ficoms
imul
mov
iret
pop
js
adc
mov
mov
and
popf
xor
cmp
icebp
mov
and
sbb
mov
shll
rclb
adc
out
ret
fisttpl
in
lret
mov
mov
mov
fdivrl
xchg
pop
negl
sub
mov
dec
and
pop
fisubrl
repz
shll
sub
repz
jns
sub
fs
loop
fsubrl
daa
cmpb
pop
add
push
rclb
jle
adc
fwait
xchg
leave
xchg
or
cmp
or
les
xchg
mov
mov
add
cltd
push
xchg
adc
pop
cmp
mov
incb
out
lds
mov
mov
fdivl
cmp
xchg
es
mov
inc
fisttps
pushf
ds
sbb
pop
and
outsl
cld
aaa
add
call
sarb
pop
inc
push
push
mov
iret
or
cmp
incl
test
xchg
mov
mov
mov
mov
sub
arpl
xchg
lock
mov
dec
add
outsl
stc
or
adc
shr
stos
push
idivl
pop
cmpsb
cmp
jb
imul
pop
int
mov
xor
js
test
ljmp
das
pop
fiaddl
or
xorb
mov
rorl
cld
add
sahf
rolb
mov
es
mov
imul
pop
scas
in
jne
lahf
test
and
imul
int
mov
push
xlat
shrl
xor
stos
out
jl
imul
add
adcl
cltd
push
add
testl
in
icebp
adc
fisttps
push
scas
mov
loop
and
cli
or
cmpsl
ss
in
int
xchg
jle
ret
call
adc
bound
js
or
cmp
pop
dec
push
xor
cmpb
and
lahf
and
xor
inc
lcall
push
cmp
jnp
mov
icebp
inc
es
push
jnp
fists
jb
das
add
mov
mov
loope
lods
es
and
pop
cmp
ficompl
push
jns
in
cmc
fsubrs
lods
mov
lcall
addr16
jecxz
xchg
dec
sbb
mov
jo
into
jne
push
dec
sbb
mov
add
ja
mov
mov
repnz
bound
pop
int
jb
cld
jmp
mov
pushf
jp
mov
fxch
sbb
adc
rorb
scas
mov
jle
cmpl
cpuid
push
sbb
mov
pcmpgtb
dec
icebp
sbb
add
xchg
jle
loope
cmp
ret
loop
mull
inc
das
jne
inc
testl
arpl
mov
mov
lret
pop
push
xchg
movsb
dec
mov
and
shl
in
cld
mov
and
fidivl
jns
andl
std
daa
test
into
push
xor
xchg
movsl
and
adc
es
arpl
call
pop
js
jge
push
mov
dec
cltd
test
out
and
int
push
cmc
lock
sbb
push
ret
data16
insb
in
shlb
pop
cmp
add
or
stos
enter
mov
xchg
push
rorb
fucomip
sarb
or
pop
jae
jne
pop
sbb
dec
mul
subb
popf
pop
rcr
ficompl
test
jne
daa
or
shll
ret
jg
sub
xchg
jb
lret
iret
mov
out
mov
sub
jns
popa
xchg
stc
xchg
sub
cmc
add
adc
mov
jmp
sub
cmp
adc
fisubrs
pushl
loop
cltd
inc
mov
jg
div
mov
sub
aaa
mov
xchg
jno
mov
push
icebp
out
pop
cmp
shrl
xor
andl
jnp
inc
ds
ret
jle
fucom
mov
jns
cmc
cmp
inc
xchg
pop
icebp
mov
inc
ficoms
mov
idivl
jnp
in
int3
push
out
aad
popa
scas
lret
push
pop
loopne
xchg
cmpb
popf
lea
sar
xchg
sub
mov
cli
push
jb
mov
push
add
cmpsb
popf
mov
sahf
lds
fcoms
push
xchg
dec
fcompl
mov
or
andnps
outsl
cltd
mov
jl
pusha
ja
pop
addr16
xor
sbb
push
mov
stc
call
movsb
ljmp
call
cmp
gs
in
cmc
xor
leave
cld
pop
xchg
xchg
push
and
imull
push
push
fcmove
xor
pop
add
cmp
inc
sbb
jge
mov
out
pop
add
sub
cmp
jl
sahf
push
xchg
int3
pop
sbb
sub
hlt
inc
pop
push
xchg
das
xchg
js
decl
sahf
adc
push
xor
mov
clc
inc
fwait
mov
gs
and
lock
ficoms
jp
xchg
in
aas
add
fnsave
mov
in
mov
fisubl
jecxz
mov
xor
jl
lcall
fmull
push
xorb
cwtl
out
mov
mov
sbb
push
cmc
adcl
testl
das
pop
bound
cmp
out
sub
gs
push
add
adc
sbb
cmp
push
ret
testb
push
popa
adc
jae
mov
push
add
mov
test
and
sub
orb
fwait
pusha
out
int3
in
sbb
jp
fistpl
js
or
dec
or
jl
add
xchg
and
xor
mov
lret
inc
pushf
xchg
outsl
ret
shlb
cmp
aad
pop
stc
in
roll
pop
cmpsb
or
dec
pop
pop
jmp
mov
mov
inc
mov
stos
xor
sub
and
inc
push
mov
into
orb
push
mov
cmp
stc
dec
pop
xor
cmp
pop
cmpsb
pop
xchg
jp
xchg
int3
mov
aaa
div
jbe
imul
cmp
inc
mov
insl
loope
pop
out
dec
les
add
add
shrb
jne
add
or
sbb
xlat
jmp
dec
mov
hlt
popa
sbb
mov
jp,pn
mov
lods
xchg
add
cmpsb
inc
pop
pop
mov
mov
add
and
das
ja
js
jp
inc
push
jp
or
mov
xchg
orl
mov
pop
xor
mov
mov
inc
mov
cmpsb
stc
ret
lea
jb
sarb
xor
lret
adc
adc
mov
jbe
add
sbb
pop
lcall
add
jo
lcall
pop
push
shrb
in
ficomps
test
rcrl
aad
out
inc
das
mov
add
movsl
bound
mov
add
cmp
in
sub
or
inc
lds
push
mov
mov
data16
jp
sbb
adc
scas
cli
aas
mov
sbb
xchg
push
loop
je
inc
sub
adc
jno
jne
stos
rclb
aad
xlat
fstl
lret
mov
aaa
mov
loop
shrl
jge
jae
sub
mov
jb
mov
jb
add
add
add
add
mov
add
add
add
add
sbb
add
add
add
add
push
add
add
add
popl
add
add
add
add
aas
add
add
add
dec
add
add
add
add
add
scas
add
add
add
fadds
add
add
pop
mov
incl
add
add
add
add
add
outsl
and
out
add
test
add
add
add
pop
insb
add
pusha
popa
jmp
add
add
add
add
jns
add
push
add
add
add
add
jb
push
jb
add
dec
pop
add
push
cmc
movl
add
sahf
xor
pop
push
lea
add
add
in
push
cld
addb
cmp
push
lea
call
cld
pushl
in
add
push
adc
jne
push
insb
leave
lea
or
in
addr16
add
adc
add
enter
fcoml
in
add
add
add
popl
incl
fildl
insb
xchg
test
add
add
and
mov
and
adcl
inc
shlb
gs
decl
add
stc
pushl
lcall
xor
add
adc
add
add
add
in
js
add
addr16
leave
lcall
add
add
add
imul
imul
je
add
gs
andl
imul
gs
add
imul
add
push
jne
popa
jns
jns
outsl
imul
push
insb
dec
insb
push
popa
push
add
add
popa
add
test
add
roll
add
add
inc
add
dec
cmpsb
dec
ret
inc
iret
int3
adc
imul
push
sub
repnz
int3
jbe
xor
daa
xchg
ret
pusha
lock
inc
sbb
out
mov
data16
shlb
or
mov
flds
imull
or
inc
or
cmp
addr16
or
jle
les
jp
push
xor
xor
cmp
sbb
cli
lret
js
mov
and
sahf
shll
fld
xor
cmc
mov
xor
mov
inc
push
lds
xchg
and
cmp
jmp
inc
sbb
sub
out
in
stos
inc
jg
inc
mov
or
xor
imul
and
pop
fnstcw
sahf
loope
in
in
lods
cmpsb
xchg
popf
jae
jl
notl
roll
ror
pop
xor
insb
sbb
mov
jns
lret
mov
jl
or
cmc
dec
mov
push
lret
enter
dec
call
ja
and
cltd
idivb
push
push
jmp
lcall
lret
xchg
push
icebp
jecxz
xlat
lret
clc
in
lods
mov
inc
jne
ret
loopne
push
lret
loop
mov
and
adc
mov
insb
mov
outsb
push
daa
outsb
cmpsb
test
lds
outsl
and
pop
inc
insl
add
push
enter
dec
fidivl
icebp
dec
dec
sub
xchg
clc
dec
fiaddl
pop
xchg
mov
jl
or
push
and
into
cmpsb
cmp
jl
lock
das
pop
cmp
mov
push
loope
mov
push
pop
xor
push
mov
inc
and
rol
push
sahf
push
xor
mov
idivl
dec
jmp
mov
ds
stc
fiadds
push
aas
outsl
or
adc
lock
mov
daa
push
lret
push
lea
sub
pop
inc
popl
aas
mov
sbb
gs
rcll
stos
iret
and
out
xchg
mov
or
hlt
mov
inc
push
rcrb
movsl
pop
jb
dec
xor
xor
sbb
jb
add
dec
dec
mov
and
aaa
pop
es
xchg
mov
adc
loop
inc
testl
bound
jg
int3
jg
dec
stos
xor
push
or
adc
imul
out
jge
pop
dec
dec
addl
pop
pop
pushf
add
nop
lea
in
movsb
clc
jge
out
cmc
push
andl
mov
leave
mov
sub
pop
mov
mov
aaa
xchg
movsl
inc
push
mov
ret
inc
xor
es
test
mov
pop
sbb
jns
add
pop
gs
jmp
xor
dec
push
sub
jns
iret
popa
sti
mov
pop
fdivs
lret
lods
lret
je
inc
fcoms
std
sub
icebp
jno
dec
aas
jb
aaa
lock
pushf
sbb
ljmp
adc
jmp
push
xchg
sbb
and
cltd
dec
cmp
sbb
and
fmul
mov
pushf
mov
loopne
cmpsl
int3
mov
dec
add
aam
movsb
xor
cmc
js
xchg
insl
lret
ret
jns
cwtl
push
pop
jp
sub
sbb
les
jp
jo
push
sbb
addr16
mov
inc
ficomps
aad
mov
sbb
xor
or
loopne
loop
or
add
mov
pop
xlat
out
jnp
sub
adc
lret
or
movsb
das
push
fcomps
or
fldenv
cmp
out
push
mov
dec
out
repz
add
adc
test
sub
lret
cmpsl
sar
in
xchg
push
dec
in
es
mov
cmp
addb
or
adc
les
shlb
mov
jg
hlt
mov
add
imul
mov
mov
cmp
out
in
lods
sbb
inc
aam
dec
out
or
sbb
ss
add
out
xchg
jge
jge
dec
push
sbb
bound
cltd
test
or
daa
mov
xor
loop
mov
dec
lods
inc
nop
mov
pop
lcall
mov
jle
mov
add
cmp
rorb
iret
sbb
sub
inc
cmp
loope
jbe
iret
xchg
cs
in
arpl
out
popa
nop
or
das
xorl
enter
lods
xor
pop
es
mov
and
sbb
in
mov
imul
outsb
sub
jns
sub
popf
and
aam
lcall
xor
clc
sbb
testl
and
sub
adc
ds
add
aas
mov
dec
aas
jae
insb
pusha
xor
pop
pop
sub
popa
pop
mov
pop
scas
add
ds
push
mov
mov
divb
test
jo
adc
ss
xchg
and
xchg
outsb
mov
mov
push
xchg
lds
stc
fwait
add
jg
jno
ror
adc
xor
loop
push
test
xchg
dec
adc
adc
mov
xor
pop
pop
inc
push
jae
jle
aaa
mov
push
inc
xchg
xchg
mov
fstl
pop
fstpl
sub
mov
roll
add
lock
sub
cmp
jae
push
push
negb
push
int3
mov
insl
xor
adc
les
cwtl
cmp
popf
sub
rcrb
stos
fimuls
add
add
push
inc
sbb
add
sar
int
pop
decl
adc
fstps
loop
sarl
jns
mov
stos
ljmp
lcall
and
imul
and
pop
sbb
jne
jb
push
push
sbb
add
jb
push
add
cmp
push
jb
test
adc
inc
dec
sub
js
loopne
movsl
loopne
in
inc
push
aaa
in
scas
aaa
cmp
cs
popa
pop
jmp
xor
mov
outsl
push
xor
jge
idivl
adc
sub
test
outsl
or
push
jns
mov
mov
xlat
gs
ficoms
push
sbb
cltd
pushf
cli
nop
pop
notl
inc
push
lcall
mov
xchg
ret
testl
add
ljmp
in
pop
mov
pop
adcb
leave
xchg
enter
jl
sbb
fdivrp
mov
jmp
cltd
xor
push
inc
sbb
add
mov
hlt
inc
cmpsb
mov
das
cmp
dec
add
inc
lds
fimull
push
push
outsb
cmp
jge
and
and
mov
dec
jmp
xchg
mov
or
sub
jle
xor
cmpsb
push
into
mov
inc
sub
ret
adc
and
or
es
stos
scas
cwtl
lds
fadd
push
das
and
or
xchg
or
fcomps
movsl
xchg
je
fs
jb
or
jecxz
mov
repnz
sub
lock
popa
inc
or
jo
xor
jg
mov
mov
mov
mov
int3
pop
sarl
test
test
lret
repnz
mov
mov
loop
cmp
outsl
ljmp
pop
and
setbe
jl
jmp
push
jge
sahf
into
push
enter
pop
cmp
inc
mov
jae
ljmp
and
mov
stc
and
sub
gs
stos
add
into
std
gs
rcrl
mov
push
stc
int3
in
and
cmp
mov
mov
sub
divl
addr16
pop
push
or
adc
inc
mov
inc
mov
mov
jl,pn
xor
cmp
stc
push
ret
outsb
std
lret
and
scas
into
jecxz
push
aas
dec
mov
pusha
jmp
inc
mov
sub
jb
mov
loope
pop
sbb
addr16
lahf
notl
or
xchg
cs
scas
sahf
jne
cs
add
mov
push
inc
mov
cli
sbb
cmovg
aas
add
int3
jmp
mov
dec
adc
enter
test
stos
mov
mov
lods
ss
push
lds
xchg
mov
cmp
fs
sub
outsl
nop
rolb
pop
lcall
imul
jne
pop
dec
push
sarl
scas
mov
sub
jg
push
sub
stc
and
dec
mov
movsb
or
mov
bound
out
arpl
std
adc
xchg
rclb
ror
jnp
sub
mov
xchg
ret
in
ljmp
adc
test
aad
xchg
stos
mov
cmp
cwtl
in
pusha
stos
adc
inc
js
mov
inc
jns
imul
jle
scas
int3
in
pusha
xchg
jecxz
insb
push
int
sub
xor
adc
mov
adc
jp
mov
pop
cmp
cwtl
jle
push
push
and
xor
xchg
jbe
push
clc
pop
sub
fildl
or
cwtl
and
xchg
lods
ret
or
cmp
shl
test
mov
mov
loopne
xchg
mov
inc
lret
push
stos
mov
xchg
or
sub
in
and
jnp
shrl
cmc
inc
movsb
jno
lds
push
xchg
scas
scas
hlt
repnz
jo
sub
adc
mov
push
icebp
stos
rcr
pcmpeqd
movsl
fnstenv
push
inc
dec
mov
rorb
dec
adc
stos
jp
sbb
bound
xor
aas
mov
or
mov
add
add
sbb
mov
loop
repz
testb
cmp
mov
pop
out
fdivrs
xchg
mov
shrb
cmp
cmp
pop
ret
pop
push
inc
cmp
loopne
call
adc
cmp
xlat
push
mov
mov
lcall
mov
call
mov
adcl
leave
xorb
int3
mov
pop
dec
out
popa
xchg
fistl
pop
cmp
fisttpl
adcl
ds
xchg
jmp
inc
push
into
push
dec
cmp
dec
mov
int
aaa
push
lock
add
or
and
sbb
nop
mov
adc
lret
mov
pop
test
mov
scas
popa
cltd
mov
cmc
mov
cwtl
sbb
or
pushf
test
test
and
in
mov
mov
cwtl
add
bound
cmp
or
outsb
dec
jl
je
arpl
push
imull
nop
lods
in
cli
outsb
xchg
es
scas
dec
sub
jl
stc
jbe
sbb
mov
aas
in
lock
inc
enter
les
adc
int3
scas
mov
leave
push
sub
jecxz,pt
lcall
js
pop
xchg
mov
pop
jmp
int
je
daa
insb
test
adc
js
sbb
loopne
lods
push
pop
fnsave
fwait
dec
orb
loope
es
cli
sub
mov
jno
or
orl
jmp
jno
sbb
mov
pop
clc
mov
out
and
cltd
test
xor
lret
btsl
mov
dec
negb
mov
int
pushf
adc
hlt
add
rolb
scas
scas
and
cmpsl
sbb
mov
loop
jb
lret
xor
xchg
lock
clc
cmp
into
jp
mov
xor
pop
test
shr
mov
call
dec
imul
adc
movsl
dec
loop
scas
insl
jae
mov
and
faddl
pop
add
test
jnp
xchg
lods
pop
rcrl
rclb
xchg
inc
jge
scas
add
mov
mov
sub
imul
xchg
imul
sub
inc
and
push
lods
xchg
ffreep
rorb
pop
cltd
jns
and
mov
aas
xor
daa
jg
jb
mov
xor
push
pop
cld
push
xchg
fcmove
push
outsb
inc
jb
push
fildll
lcall
jnp
pop
push
jo
xor
pop
jo
or
cmp
das
loope
in
xchg
mov
mov
lret
mov
mov
fwait
pop
push
stos
pop
das
sub
add
sbb
jg
js
pop
popf
sbb
vaddps
xchg
pop
les
loopne
push
cmp
mov
ljmp
nop
cld
pop
jg
mov
push
sub
push
sub
inc
cmp
and
int3
test
mov
arpl
mov
mov
mov
mov
sub
push
std
add
mov
xchg
xlat
insl
dec
hlt
or
xlat
mulb
test
shlb
lock
popf
and
mov
js
ljmp
movsl
inc
sbb
and
fldt
add
aam
and
push
loope
in
cwtl
dec
and
addr16
mov
push
sub
aad
and
fstl
shlb
mov
mov
jae
push
fstl
bound
pop
scas
push
xchg
add
mov
out
pop
mov
xchg
mov
dec
xchg
push
loopne
fildl
or
andl
lcall
pop
and
xor
ret
cmp
rolb
negb
sub
lret
fs
cmpsl
push
xchg
cmpsl
mov
ljmp
lahf
icebp
nop
add
subl
rolb
mov
decb
js
nop
mov
fcoms
lret
xchg
mull
cmpsb
xchg
sbb
loopne
jns
outsb
in
fnstcw
add
xchg
jl
dec
mov
mov
mov
lods
mov
mov
push
insb
insl
pusha
sti
in
pop
rcr
pop
jmp
mov
and
push
das
rolb
lret
or
test
arpl
fisttps
out
or
lods
aad
mov
fcomps
and
dec
mov
xchg
sub
gs
add
dec
cltd
cmpb
mov
jge
pop
inc
lcall
and
sarl
mov
mov
fdivs
in
xlat
cmp
jo
or
jae
loopne
mov
inc
sbb
in
call
fcmovb
mov
mov
xor
inc
or
cmp
mov
cli
loop
cli
pop
push
add
mov
adc
xchg
rorl
xlat
mov
cmp
cli
cmpsl
mov
inc
std
cwtl
sbb
pop
jo
cmpsl
mov
repz
sub
sub
xchg
sbb
fistl
movsb
es
dec
mov
mov
sbb
fiadds
mov
push
dec
mov
xchg
cmp
stos
sub
add
rolb
push
xor
cmp
loopne
cld
test
adc
and
cmp
push
fs
cmc
popf
in
mov
or
fldcw
dec
push
fucomi
or
and
aad
push
jmp
sbb
sub
scas
clc
xor
fisttps
push
testl
sbb
inc
xchg
pop
aaa
push
fs
cli
hlt
cmc
mov
sar
cmp
jmp
movsl
mov
popf
mov
sub
and
dec
enter
sbb
int3
rclb
dec
cltd
call
adc
jae
leave
lods
adc
jo
cmp
sar
dec
add
cs
scas
xchg
xchg
jo
enter
sub
xchg
jns
jne
ret
sbb
add
fcmovbe
in
jb
dec
mov
push
fidivl
ficompl
push
push
cmp
outsb
test
mov
sti
mov
add
jle
xchg
mov
pop
cld
loopne
mov
sbb
inc
jge
icebp
xchg
ljmp
cmc
sahf
test
jae
pop
shrl
inc
mov
jmp
or
adc
aad
jns
push
aas
loop
xchg
mov
inc
nop
xchg
out
in
add
pop
jmp
dec
mov
mov
pop
sub
lret
xchg
jle
pusha
mov
adc
nop
test
and
iret
xchg
aaa
adc
push
lret
in
test
or
mov
pop
cmp
mov
sub
rolb
sbbb
mov
lret
insb
xor
xorb
jno
add
lret
ret
test
mov
sbb
jnp
mull
mov
dec
das
xlat
add
out
xor
daa
dec
sti
mov
out
aaa
sbb
dec
iret
xor
sbb
out
nop
cmp
jbe
out
mov
mov
stos
mov
and
fstl
aam
fs
xchg
xlat
sub
sahf
mov
sbb
scas
mov
roll
lods
inc
add
sub
jg
in
dec
loopne,pn
in
mov
mov
cmp
imul
loop
adc
inc
pop
pop
fmulp
in
lcallw
dec
daa
xchg
aaa
mov
insl
addr16
lret
add
js
mov
xchg
fnstenv
lock
ds
push
hlt
xor
aas
into
arpl
dec
jle
imul
stos
adc
jne
cmpsb
ret
das
xlat
xor
int
or
gs
inc
xchg
mov
push
mov
lods
sbb
fsub
mov
jne
add
sub
jbe
adc
push
mov
sbb
and
mov
adc
imul
test
or
xchg
pop
lock
xor
fimuls
sub
enter
insl
or
mov
cmc
movsb
sub
lcall
imul
sub
out
dec
or
insb
jecxz
inc
mov
out
std
out
push
xor
mov
inc
js
sub
lods
cli
daa
sbb
jne
ret
jns
push
sub
mov
jl
test
cli
les
cld
inc
clc
lods
scas
and
sbb
scas
push
xlat
push
xchg
js
pop
mov
jo,pt
xchg
fistpll
out
mov
pop
cmp
dec
xor
mov
sbb
xlat
out
or
push
add
cmp
or
sub
imul
xchg
test
fnsave
sbb
adc
sbb
xor
push
jae
pushf
xchg
loop
aaa
push
add
and
dec
sbb
cwtl
sbb
inc
xchg
test
out
inc
jle
sub
aas
sarl
mov
xor
xchg
pop
les
add
jns
add
add
mov
add
add
sbb
add
add
xor
nop
add
adc
sarb
addb
lock
add
add
add
add
add
and
add
adc
add
addb
add
jae
add
ja
mov
incl
add
add
add
add
and
outsb
and
and
les
dec
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
mov
movb
add
mov
add
rolb
and
insb
popa
add
push
outsl
data16
outsb
fs
inc
and
add
gs
jnp
shll
jns
shr
fadds
push
incl
dec
add
call
std
std
scas
test
call
adc
lea
push
jne
mov
jne
mov
pop
pop
add
push
adc
jno
push
repz
aad
add
add
add
push
add
daa
adc
xor
test
add
add
xor
std
loopne
lcall
add
call
loopne
lock
push
adc
std
pushl
dec
repnz
mov
call
enter
lea
in
subb
add
add
adc
add
add
add
add
add
cmp
out
add
add
inc
add
pushf
imul
add
inc
gs
movsl
js
add
outsl
arpl
gs
gs
gs
insb
add
inc
push
js
push
xor
push
add
add
add
jae
jae
loopne
insb
insb
insb
dec
dec
add
add
add
lock
and
add
add
add
add
add
add
add
add
add
add
out
mov
scas
cmp
int3
sub
fcmove
mov
jne
ss
jns
sub
popa
pop
xlat
ret
jno
fcmovne
mov
jp
movsl
xlat
sarl
decl
out
or
ret
hlt
cwtl
mov
enter
sbb
nop
icebp
shlb
leave
jle
jle,pn
adc
test
jge
mov
sbb
cmpsb
lcall
or
cmpsb
sub
test
imul
mov
add
cmp
js
or
sbbl
dec
les
jne
in
inc
std
push
sti
mov
pop
in
jae
push
jo
mov
xchg
and
xor
add
sub
jmp
jnp
stos
mov
es
push
push
xchg
cmpsb
and
loopne
pop
adc
add
pushf
les
inc
adc
lahf
sub
out
pop
lock
lret
mov
jmp
jbe
jne
mov
insl
xchg
xor
mov
hlt
ljmp
inc
dec
sbb
inc
or
cmp
xchg
inc
nop
pop
xor
pop
das
xchg
push
sub
sbb
out
and
jle
pop
lea
mov
push
add
push
inc
testb
adc
outsl
xchg
add
js
push
dec
push
test
cmp
rclb
mov
fsubp
mov
mov
sbb
in
lods
movsl
add
test
pop
cmc
ret
and
sbb
movb
pop
je
mov
sub
movsl
ljmp
adc
adc
pusha
dec
fs
or
insl
sahf
mov
popl
pop
int3
push
adc
movsl
int3
inc
nop
or
jne
lods
or
addr16
loop
xchg
fwait
jb
lret
clc
xchg
mov
mov
mov
mov
inc
add
mov
sub
jl
adc
xorl
dec
cs
mov
xchg
cmp
mov
mov
mov
fnstsw
push
mov
stc
loopne
pop
mov
xor
xor
insl
cld
ds
add
sub
in
fsts
insl
inc
jmp
mov
cmp
dec
cmpsb
or
push
mov
cmp
jl
push
mov
dec
rcrl
loope
sbb
add
hlt
out
inc
mov
sbb
dec
mov
push
mov
push
movsb
mov
mov
sbb
sbb
cmpl
hlt
bound
cmp
lods
jns
lods
inc
sub
sar
pop
idiv
dec
ljmp
fcoml
in
add
enter
add
add
inc
mov
inc
mov
out
xchg
cs
insb
or
push
pop
xorl
pushf
out
mov
int3
dec
orl
pop
xor
and
mov
push
test
xor
pop
and
inc
es
fdivl
test
sahf
je
emms
xcrypt-cfb
cmpsl
movsl
mov
fcmove
cld
mov
shlb
mov
addr16
stos
int3
add
jle
inc
rorl
pop
or
xor
xchg
mov
popa
mov
push
pop
xor
pop
xor
cmp
sbb
push
cli
into
mov
popf
pop
movsb
jo
pop
addr16
cmpsb
jl
mov
jbe
pop
gs
mov
or
sub
lods
xchg
pop
pop
in
or
jb
jmp
or
pusha
pop
stos
in
addl
jle
aaa
mov
inc
mov
mov
bound
pop
or
push
in
stos
dec
insl
sub
out
pop
cmc
dec
adc
pop
mov
jbe
add
xor
aam
pop
popf
sub
lds
iret
jmp
xchg
cmpsl
clc
dec
shlb
mov
sub
and
sub
jne
xchg
pop
enter
loop
sub
loope
imul
adc
in
or
jmp
cmc
mov
clc
or
test
lcall
arpl
add
outsl
mov
dec
dec
repz
add
push
les
insb
rolb
dec
push
lock
cmpsl
movsb
shll
shrb
stos
dec
xor
stos
ljmp
imull
push
dec
push
jg
fcoml
cltd
iret
jp
cld
loopne
xchg
jecxz
cld
jmp
mov
rcrb
gs
xchg
or
or
into
add
in
mov
mov
adc
cmpsb
out
hlt
cmpsb
andb
out
ffree
xor
mov
dec
es
dec
xchg
ror
int3
mov
pop
mov
shlb
nop
add
mov
push
fs
sbb
fstl
cmc
enter
enter
jmp
pushf
test
icebp
imul
insb
mov
out
and
shrl
xchg
sub
in
shll
mov
icebp
outsl
mov
or
dec
outsb
cld
int
xlat
add
sub
test
pop
mov
and
jle
scas
mov
pushf
js
mov
pop
jecxz
mov
xchg
ret
and
dec
sti
lds
cwtl
insl
push
cltd
inc
ljmp
mov
cmp
and
fcmovb
mov
inc
mov
shl
aas
clc
cld
in
mov
jmp
fstpt
test
shlb
cmp
adc
mov
fwait
jnp
jg
inc
push
movsl
inc
aas
bound
repz
mov
rclb
and
ret
inc
popf
or
mov
mov
jmp
ss
jecxz
fcoml
push
add
fcompl
jnp
scas
jge
jae
cmp
push
ja
call
jbe
mov
sbb
out
cmp
les
sbb
xchg
cmp
insl
mov
mov
cmpsb
push
cmp
dec
aas
loope
enter
leave
push
push
leave
xor
dec
data16
mov
push
test
fwait
push
push
das
repnz
sbb
push
repnz
test
lods
xchg
xor
das
stos
mov
pop
adc
pop
in
sbb
mov
pop
hlt
pop
rolb
lds
sbb
and
test
dec
mov
mov
lods
pop
adc
rcrl
add
insl
sbb
cmpl
sub
cmpl
xchg
test
jge
pop
loope
call
lds
test
pushf
inc
and
out
aas
push
jg
pop
cltd
add
ret
pop
and
adc
aas
out
sti
mov
jbe
or
push
outsb
jp
push
push
es
fdivs
fwait
xchg
or
shrl
jbe
inc
in
xlat
inc
add
lds
rdmsr
sarl
pop
jne
push
push
in
pop
adc
nop
loopne
or
mov
add
lahf
mov
push
sub
das
push
cmp
mov
add
cmp
loop
loopne
rorl
popa
jg
ss
clc
inc
xchg
mov
dec
sub
sub
lret
lcall
data16
sub
ret
jge
popa
jbe
adc
jge
div
push
mov
push
xchg
add
fldcw
or
pop
in
ljmp
ret
sub
std
xchg
push
lret
xor
jne
fsub
mov
lds
and
dec
test
jo
ja
ds
sbb
jp
out
lods
cli
dec
icebp
mov
mov
push
sub
test
xor
push
lret
xor
fstpt
jmp
int
xlat
ss
outsw
lds
leave
and
xor
or
movsb
add
loopne
ficoml
fldt
lods
ss
mov
mov
shrl
mov
pop
cmc
popa
lret
sub
leave
push
xor
in
daa
jae
cmp
push
dec
out
ret
pop
xor
sbb
test
std
fimull
add
sbb
sbb
dec
add
daa
ret
out
xor
jp
pop
cmp
mov
ja,pt
das
mov
pop
movsl
mov
mov
xchg
and
mov
out
movl
or
mov
sub
mov
cltd
imul
mov
data16
shrl
insl
movsb
jo
psrld
xchg
mov
add
mov
daa
inc
bnd
out
mov
cmp
lock
push
mov
adc
sti
add
add
adc
mov
mov
pop
dec
into
xchg
mov
pshufw
hlt
lea
mov
rcll
sub
inc
mov
mov
popa
fnclex
dec
stos
ret
inc
add
adc
inc
and
adc
and
push
or
stc
xor
fstps
ds
shll
bnd
sbb
cmpsl
ljmp
sbb
adc
ljmp
mov
stos
pop
and
into
cmp
xor
pop
loop
into
insb
sbb
adc
cmp
rorb
out
test
pop
cmp
bound
stos
push
iret
and
ret
jmp
test
cltd
pop
sbb
sub
pop
shll
xchg
and
aaa
xor
andb
mov
cmp
add
or
pop
imul
pop
xchg
pop
hlt
pop
pminsw
les
sbb
call
or
jb
in
jecxz
mov
xor
mov
xorb
xor
xor
xchg
int3
mov
out
xlat
cwtl
in
daa
jge
lods
jns
mov
roll
push
mov
jp
mov
mov
jg
xchg
mov
adc
lea
cmpsl
xchg
push
into
cs
xchg
cmc
lret
jecxz
adc
icebp
pop
and
rep
test
push
xchg
xchg
jnp
sub
mov
inc
push
std
rcrb
mov
pop
rcrb
dec
mov
sbb
ret
and
addb
jmp
sbb
ss
or
fsubs
cld
xor
cmpsb
pop
test
pop
mov
or
sbb
outsb
push
add
scas
xchg
arpl
pusha
inc
pop
push
inc
arpl
sub
mov
xor
aas
xchg
adc
out
stos
lds
push
lret
inc
fidivrs
xchg
inc
push
mov
mov
sbb
mov
loopne
mov
sti
stos
fildll
std
cpuid
cmp
leave
stos
gs
pop
xor
xchg
add
aaa
inc
rep
mov
or
iret
lea
jp
or
pop
bound
in
ret
fs
and
xchg
iret
push
mov
mov
stos
jbe
addr16
dec
xchg
xchg
or
in
push
cmpsb
daa
or
inc
mov
aaa
xchg
aad
mov
imull
popf
or
into
push
fsubl
andnps
into
jl
push
or
leave
mov
cmp
mov
rcl
fiadds
jae
fisttpll
btr
insl
add
inc
xchg
mov
mov
push
sbb
adc
push
or
jae
xchg
xorb
or
btc
scas
cmp
mov
cmp
jne
outsl
mov
inc
fnstsw
out
gs
ror
jo
add
shrb
mov
cmp
mov
dec
ds
push
shlb
aam
daa
jno
out
clc
cmc
mov
xor
repz
and
mov
cmp
adc
cmp
inc
mov
and
mov
push
add
sbb
icebp
dec
das
mov
int3
rcrb
mov
aad
addl
loope
orl
iret
dec
push
scas
test
testb
aad
and
hlt
mov
mov
out
adc
sub
test
enter
popf
lret
mov
inc
cmc
dec
popa
push
imul
icebp
push
fst
xchg
cmp
inc
cmc
int3
jnp
sbb
mov
cwtl
or
cmp
cmp
imul
ret
in
stos
sub
mov
mov
inc
movsl
mov
jmp
jno
sti
and
movsb
fistl
adc
xor
jp
movsl
mov
cltd
pcmpgtd
push
in
test
mov
mov
or
or
xchg
mov
gs
cli
push
in
and
aaa
cmpl
jno
add
cs
leave
js,pn
jle
mov
xor
in
mov
xor
mov
jmp
or
outsl
js
sahf
enter
sbbl
gs
mov
pop
pop
gs
dec
jl
push
fldt
sbbb
mov
push
shll
pop
or
sub
ficoml
pop
lods
jo
out
ret
pop
imul
cmp
jmp
pop
jl
pop
ds
mov
into
cmpsl
es
fs
fisubl
aas
call
dec
je
mov
in
sbb
jecxz
dec
loope
dec
adc
xchg
repnz
movsl
scas
push
gs
aam
scas
pop
mov
adc
sub
lahf
xor
mov
xchg
pop
push
pushf
jnp
insb
push
add
arpl
adc
add
in
xor
adc
push
mov
leave
sbb
sbb
pop
or
sub
and
fsubrl
out
iret
cmp
loopne
inc
pusha
repz
adc
sbb
in
push
mov
dec
inc
adc
das
lods
clc
outsl
dec
sbb
inc
fidivrs
mov
xor
cmp
mov
or
loope
and
insl
test
and
shr
jmp
dec
and
and
jg
dec
add
mov
inc
dec
loopne
stos
dec
fidivrs
mov
mov
jmp
fisttpll
test
pop
aas
cmp
sub
xchg
and
sbb
lahf
rcr
rcl
cmc
cmp
or
roll
xor
es
orb
fisubrs
push
inc
mov
cmp
mov
mov
sbb
sbb
lahf
subl
loop
scas
jg
cmp
and
inc
fcomip
cld
mov
pop
jbe
and
fwait
pop
cmpsl
mov
pop
adc
mul
in
mov
mov
sub
lahf
cmp
addl
mov
push
mov
mov
movsb
cmp
jmp
in
repz
fs
sbb
insb
cmp
cmpsl
int3
sub
jno
je
sbb
mov
loopne
xchg
es
outsl
xor
xchg
dec
xor
pop
mov
ljmp
adc
push
enter
outsl
sahf
push
cs
jbe
test
mov
mov
mov
fndisi(8087
cmc
insl
xor
jl
in
fdiv
imul
aaa
cld
fiadds
ljmp
add
xor
inc
scas
jmp
jbe
mov
ret
cmp
pop
cld
inc
push
cmp
mov
cmp
enter
cmp
repnz
mov
sbb
mov
fs
xchg
inc
ficompl
fstl
inc
dec
and
dec
je
pop
roll
ds
inc
fimull
out
add
xor
daa
mov
cmp
pop
xchg
scas
rcll
cmpsb
std
lret
push
or
mov
sub
movl
outsl
lahf
mov
insl
pop
stc
or
shll
lret
mov
sub
cltd
add
jp
fcoml
cmp
mov
arpl
test
add
push
add
xlat
pop
nop
inc
mov
mov
or
test
addr16
out
aaa
cmp
arpl
xor
jnp
or
lea
add
push
sbb
pop
aam
dec
lods
lock
sub
mov
cmpsl
in
mov
aam
sub
push
cmpsl
pop
cmpsb
mov
sub
xchg
push
and
mov
cwtl
jp
nop
popa
adc
ret
psubusb
push
jle
clc
gs
pop
mov
int3
js
inc
mov
icebp
fcmovne
sbb
jnp
out
cmc
inc
insl
mov
inc
les
mov
testl
shlb
std
or
jns
mov
sub
fisubrl
inc
mov
mov
jo
repz
push
dec
mov
das
imul
les
mov
inc
cmp
loopne
pop
push
xor
xchg
inc
fdivrp
enter
cmp
jb
ret
jl
xor
pushf
cmp
pop
mov
add
leave
addr16
dec
subl
fs
mov
das
mov
les
jns
jae
xor
in
xor
aas
imul
cmp
out
dec
xchg
cmpl
in
or
cs
push
sub
xlat
add
pop
add
out
xchg
jae
fwait
jns
mov
loope
cmpsb
into
mov
inc
pop
xchg
add
int3
ror
mov
or
mov
or
repz
and
adc
dec
inc
test
aam
mov
jle
pop
jecxz
iret
sub
or
jge
rcr
xadd
movsb
testb
jp
out
mov
scas
nop
mov
js
sbb
add
sti
mov
cmc
bound
cmp
pop
lds
push
je
pop
pop
icebp
insl
lods
aad
jge
add
bound
xor
pusha
lods
xchg
daa
mov
mov
cwtl
fidivrs
dec
jb
sti
fdivrl
lahf
rorl
pop
call
cmp
pop
jb
cmpb
cwtl
ja
inc
push
pop
mov
add
ret
push
mov
inc
push
jb
and
out
jns
pop
pop
leave
pop
std
fldl
add
or
push
pop
xchg
mov
shlb
add
adc
repz
xor
fldenv
jl
daa
add
mov
pop
popa
xchg
mov
jecxz
dec
adc
jg
mov
xor
cmp
adc
adc
orl
icebp
inc
jecxz
inc
lods
jp
mov
lret
and
inc
enter
out
dec
les
jle
inc
and
xchg
sub
aas
and
sar
or
xchg
xor
jb
push
icebp
cs
mov
div
adc
out
pop
pushf
xchg
xor
sahf
incb
xchg
out
pop
enter
stos
sbb
fstpt
mov
repz
mov
int3
shr
stc
and
in
cmp
xchg
or
and
sti
cs
cmp
in
and
popf
mov
fwait
into
in
js
fidivrl
mov
lcall
jb
adc
leave
push
sub
cmpsl
sbb
mov
mov
addb
mov
pop
loopne
adc
and
sarl
adc
mov
jo
and
sbb
pop
inc
adc
stos
bound
and
add
add
add
add
add
rolb
inc
add
mov
add
add
add
add
and
add
push
sbbb
add
add
imul
addb
push
add
add
or
or
in
in
and
in
inc
add
add
add
add
jo
jo
sarb
add
add
add
pop
add
dec
add
add
add
add
add
adc
jns
add
add
add
add
cltd
add
popa
add
add
insb
cltd
or
add
and
gs
arpl
and
jae
jae
dec
dec
push
and
and
push
js
pushf
xchg
adc
mov
push
lea
add
int3
mov
jne
jne
lcall
lea
dec
popa
stc
clc
push
test
add
add
mov
add
lea
call
adc
inc
mov
and
in
push
add
add
adc
fbstp
test
loopne
add
adc
or
std
je
push
cli
imul
and
jne
push
cmp
test
clc
test
lea
pop
enter
movb
push
jne
lea
add
add
jmp
add
je
inc
inc
insb
add
inc
gs
mov
outsl
gs
inc
dec
gs
jns
dec
pop
fisubrl
dec
add
fs
add
fs
dec
insl
jns
ljmp
push
push
pop
outsl
jbe
cs
arpl
dec
inc
add
dec
flds
add
add
dec
imul
add
ret
lahf
adc
jno
pusha
repnz
adc
sbb
decb
and
roll
xor
std
lock
repnz
jb
push
sub
inc
aaa
and
sbb
loope
rcl
dec
mov
insb
xor
jae
fldl
fistps
test
js
cmpsb
std
sub
add
mov
push
js
mov
jg
sti
inc
xchg
je
aad
mov
inc
or
jecxz,pt
sub
scas
mov
leave
pop
cltd
jmp
mov
jle
andl
and
leave
out
xchg
js
loopne
clc
inc
add
lret
mov
push
inc
ret
or
add
data16
pusha
or
mov
pop
std
ret
sbb
aaa
or
lret
inc
out
inc
lds
mov
loop
sahf
rcll
adc
or
adc
pop
mov
cmpsl
or
loope
in
cmp
outsb
or
loope
out
mov
jae
sbb
scas
push
pushf
xor
sub
pop
lds
in
cmp
dec
mov
gs
imul
cmp
jecxz
insl
lock
movsb
inc
cs
movq
jne
ret
sti
pop
lods
xchg
test
push
stos
xor
js
test
ss
mov
ljmp
and
cmp
out
and
fdivl
mov
and
jle
lods
cli
ficoms
cmp
mov
mov
mov
adc
mov
or
cmpsl
adc
jae
adc
adc
dec
dec
bound
inc
jecxz
rcl
arpl
dec
bound
lcall
fdivrl
mov
jb
mov
add
jae
push
pop
pop
fnsave
mul
out
loope
stos
andl
js
in
data16
in
xchg
in
cld
mov
sbb
add
add
popa
lods
add
test
inc
clc
mov
std
push
push
xor
push
imul
lahf
jns
xchg
movsl
push
inc
adc
or
stos
and
fmull
push
or
mov
dec
decl
mov
outsb
xchg
movsl
add
insb
and
inc
popa
mov
mov
pop
mov
rol
inc
add
aaa
ret
jmp
mov
or
xchg
mov
inc
mov
mov
sti
jp
cmp
cld
mov
cmp
jbe
cmp
inc
jbe
lods
and
xchg
push
push
xchg
ss
nop
in
ret
push
cmp
arpl
mov
outsl
nop
push
push
sahf
mov
aaa
xchg
adc
sbb
xor
ret
scas
sub
nop
ljmp
or
std
or
add
pop
fmull
ret
dec
sbb
mov
sbb
aam
adc
jp,pn
dec
add
xchg
test
es
jbe
dec
cmc
lds
mov
pop
cmp
mov
sbb
daa
push
aam
xor
test
jle
pop
or
lds
push
and
mov
lock
or
jmp
add
and
jle
pop
jns
pop
and
sub
fidivs
jge
mov
in
jo
dec
stc
out
fwait
cli
fnstenv
movsb
inc
push
aaa
or
lcallw
adc
ja
hlt
loopne
adc
mov
mov
jg
adc
arpl
mov
call
dec
xchg
add
pop
cltd
sbb
iret
leave
jbe
dec
int3
lcall
xor
lahf
cmp
mov
inc
mov
and
mov
dec
xchg
into
dec
mov
xor
mov
cld
mov
fldl
into
fildll
loopne
mov
lret
sub
inc
pop
shll
clc
inc
ljmp
addl
inc
into
in
adc
sub
add
cmpsb
cli
bound
pop
out
cmc
loope
sub
mov
push
fistl
fbld
cmp
xor
mov
ljmp
add
dec
mov
test
and
sub
and
xchg
pop
ret
or
imul
repz
inc
lock
aam
out
or
fidivs
rep
out
and
cmpsb
scas
cwtl
ret
mov
fstl
xchg
xor
test
jbe
jmp
sahf
in
movsl
aad
aam
shr
negb
jno
cmp
and
push
mov
xchg
fwait
gs
dec
jb
popf
and
push
mov
add
lret
mov
fwait
out
add
aas
push
or
pop
movl
gs
add
cmp
cs
jp
mov
aaa
mov
jbe
call
push
ret
and
cmp
call
cltd
pop
adc
cli
aad
pop
xchg
sbb
jge
rcrb
add
jg
jno
add
dec
fwait
std
aam
mov
ficompl
popf
jae
xor
mov
insb
cli
pop
cmpsb
ret
loop
jecxz
fadd
adc
scas
fldl
pop
xchg
add
sbb
sub
std
lock
ss
mov
cwtl
cwtl
xor
xor
xchg
movsb
ret
in
pop
xor
xor
call
mov
sbb
push
movsl
jae
push
jmp
mov
mov
mov
and
loop
pushf
and
ljmp
jb
or
cmpb
mov
mov
test
cmc
push
mov
outsb
sub
cli
test
xchg
mov
testl
and
mov
outsb
sbb
sub
je
icebp
ds
push
cmp
sub
sub
repz
and
cmp
sub
cmp
jne
clc
xchg
mov
lahf
mov
jp
mov
int
dec
sbb
fdivrs
adc
cmp
cmp
data16
mov
cmp
stos
dec
ret
cmp
lods
xchg
cmp
lock
out
mov
lahf
mov
fists
clc
test
sub
andl
fld
bound
stos
xchg
icebp
jecxz
or
pop
add
lahf
es
stos
add
sub
in
mov
int3
adc
push
sbb
out
cli
cmpsl
mov
and
lock
test
ret
aad
les
cmpsl
jp
pop
mov
insl
or
lock
sti
test
mov
adc
leave
lds
shll
add
xchg
mov
inc
and
out
mov
push
pcmpeqb
ljmp
sub
mov
jge
xor
arpl
ret
into
out
inc
cmp
or
ret
cwtl
inc
lock
or
lods
stos
pop
xchg
ret
push
xor
dec
insb
adcl
add
xor
fistl
jmp
arpl
xor
arpl
add
inc
js
jns
out
mov
push
negb
xchg
rorl
lcall
push
fxch
fisubrl
inc
push
mov
nop
clc
ret
and
cmp
aas
xor
add
xchg
in
mov
subb
mov
addb
cli
jb
lods
cmc
add
stos
push
out
adc
in
clc
aad
cmp
mov
out
rcrl
cmpsl
adc
sahf
mov
jo
cmpsl
jp
scas
mov
and
pop
inc
sbb
sub
or
push
inc
lods
lret
nop
xchg
dec
cmp
xchg
push
sbb
iret
or
push
cli
cmp
les
xchg
stos
add
fmul
imul
fnstsw
mov
mov
inc
cmp
scas
pop
cmp
leave
cld
mov
loopne
cmp
xor
push
and
sub
shlb
pushf
adc
xor
es
jle
jne
mov
popa
jne
xlat
mov
dec
out
fs
lea
sbb
push
mov
sbb
sahf
in
jmp
pushf
clc
je
addr16
sbbb
int
sahf
jl
or
sbb
filds
dec
jbe
scas
push
lds
adc
jne
cli
cmp
jmp
pop
xor
adcl
sbb
cs
pop
sub
aaa
jecxz
jb
test
push
lea
xlat
mov
pop
rcrl
or
push
out
mul
movsb
fidivrs
sub
or
and
idivb
shr
cmpb
xor
xchg
jns
adc
iret
cs
pop
mov
pusha
mov
fbstp
inc
xchg
push
pop
xorl
je
sub
jmp
popa
iret
fstps
inc
aad
mov
push
push
js
test
dec
fs
lret
cmp
jns
cmpsb
ret
push
daa
and
xchg
adc
add
add
daa
leave
and
adc
push
and
mov
pop
sbb
push
and
inc
sub
jns
nop
xchg
in
cmc
push
pop
and
popa
mov
push
sarb
push
inc
fisubl
jl
in
int
inc
dec
shl
test
dec
movsb
sub
push
cltd
popf
adc
arpl
call
outsl
mov
imul
test
cmp
pop
mov
scas
jne
jbe
aas
fdivl
mov
xchg
cs
lds
fistl
gs
adc
dec
stos
les
cmpsl
icebp
pop
sti
xor
and
mov
out
pop
insl
cmpl
repz
lahf
and
cmpsb
pop
lret
test
xor
repnz
cmp
xor
adcl
add
rclb
xor
addb
cwtl
cmp
jns
xchg
cmpsl
je
or
mov
or
pop
lea
in
xor
lods
xchg
adcb
lea
sbb
mov
dec
call
inc
bound
fimuls
jmp
sbb
lods
or
arpl
mov
push
xchg
sarb
sbb
mov
loope
fstl
cmpsl
fnstcw
hlt
xor
pop
loopne
add
xchg
adc
jae
insl
test
test
imul
xlat
call
icebp
jo
js
xor
mov
movsl
inc
imul
mov
add
mov
jp
cs
jo
adc
sbb
inc
cmp
test
adc
cs
jg
shlb
push
das
rcrb
sub
add
push
add
sub
rorl
or
mov
ss
test
out
jo
adc
cmp
add
add
loope
arpl
dec
and
xchg
out
dec
aam
cld
clc
test
out
and
dec
inc
add
outsb
out
jmp
int
pop
es
stos
pop
mov
cmc
shl
adc
adc
lods
aam
xchg
xor
add
sahf
cs
daa
lods
ja
xchg
pop
into
mov
mov
xchg
inc
xchg
sbb
inc
cmc
popa
mov
cwtl
or
iret
out
cmpsl
sub
lea
dec
mov
popf
mov
pop
iret
mov
jmp
jbe
pop
stos
decl
ret
mov
leave
shl
mov
daa
add
pop
test
cmp
and
mov
andb
or
pop
es
pop
fidivs
push
ljmp
push
inc
adc
jle
and
mov
sarl
lret
mov
xchg
pop
scas
mov
xchg
cmpsb
shrb
stos
fistl
test
and
lea
aaa
push
push
push
and
andb
dec
jno
push
fisubl
xchg
lret
stc
fsubrs
jb
imul
jns
pop
push
pop
out
inc
xchg
and
jne
pop
pop
jnp
cli
clc
mov
shlb
dec
lock
into
xchg
pop
mov
sub
and
mov
cwtl
or
fdivl
cmc
and
outsl
int
cmpsb
fwait
sub
sub
dec
push
lahf
push
insl
pop
and
inc
insl
add
test
and
mov
dec
dec
clc
pop
call
mov
mov
cmp
rcrl
stos
or
inc
pop
sub
mov
aad
mov
aaa
xor
loop
mov
jge
add
dec
test
push
or
mov
out
or
sub
imul
pop
and
mov
jne
sbb
sbb
xchg
popa
push
sbb
inc
imul
jmp
mov
test
std
xlat
jbe
pop
add
push
shrb
pushf
aaa
and
repz
daa
fiaddl
enter
cmp
test
push
hlt
sub
pop
ret
lock
push
mov
cmp
je
mov
or
sahf
xchg
sbb
movsl
incl
xor
cs
fmull
xchg
pop
in
ss
add
xlat
adc
fdiv
adc
pop
push
pop
aam
ret
inc
add
xchg
mul
imul
int
mov
mov
test
cmp
lret
push
cwtl
xor
out
repz
in
lea
and
pop
mov
inc
adc
cltd
push
addb
fsubrl
gs
jmp
jmp
cld
push
ds
inc
mov
jecxz
daa
loope
ret
repz
mov
movsl
dec
push
das
ret
pop
ss
in
pop
aam
test
hlt
xchg
add
xor
lret
mov
cmp
add
mov
ja
data16
repz
cmp
loopne
mov
sti
and
mov
cwtl
dec
and
cltd
mov
inc
mov
mov
scas
notb
out
notl
cmp
adc
cmp
mov
jg
or
cmc
xchg
std
ds
in
xor
sub
push
fisubrl
roll
sbb
aam
sbb
aas
mov
test
test
xor
sahf
lret
incl
xchg
sarb
or
adc
int
mov
lret
mov
mov
lds
popf
int
xor
movsb
ret
and
push
aam
jl
aad
in
imul
in
pop
ljmp
pop
cmpl
sti
xchg
inc
sub
adc
movups
out
rep
sub
mov
mov
std
inc
loop
filds
lds
xchg
push
aas
cs
mov
xchg
push
and
cmpsl
sahf
mov
adc
sbb
cmp
jle
lock
sbb
sti
cli
inc
jle
jecxz
fisubs
shrb
lods
pop
mov
dec
or
mov
pushw
jnp
adc
xchg
hlt
aaa
dec
mov
mov
push
aaa
loop
loop
lret
cmp
dec
iret
imul
scas
jns
jecxz
push
lea
cmp
shl
arpl
adcl
lods
les
xlat
dec
btc
sub
mov
mov
inc
ljmp
pop
add
or
loopne
stos
cmp
xchg
pop
mov
mov
cmpsl
sahf
lods
stc
xchg
pop
scas
enter
pop
test
enter
sbb
cmp
push
mov
out
rcll
jmp
mov
adc
inc
in
icebp
sbb
push
dec
push
sbb
nop
ja
cmp
cmc
loopne
mov
dec
pop
in
jnp
cmp
mov
mov
adc
add
mov
jl
bound
scas
in
icebp
test
mov
jno
out
or
jge
inc
das
out
sub
in
into
in
popa
inc
or
pop
lods
mov
adc
jmp
popf
and
in
test
in
cmpsb
js
js
add
cmpsb
sti
mov
sbb
cli
inc
ja
jbe
mov
adc
in
mov
xor
cmp
mov
adc
inc
pop
jns
cmpsb
sbb
or
std
mov
and
popa
xchg
or
push
jne
pusha
fsubr
imul
ljmp
stos
decb
cmp
sbb
shrl
sbb
xchg
xchg
and
or
jo
icebp
cmc
jecxz
adc
pop
push
dec
inc
iret
adc
jbe
ss
cmp
into
or
inc
jg
jge
les
jmp
jae
jg
out
cmp
cmp
push
notb
sti
add
lods
xchg
stos
sub
stos
xchg
shl
jo
adc
push
adcb
insb
clc
pop
mov
lahf
icebp
pop
dec
xchg
cmp
mov
sbb
add
out
xor
xor
cwtl
andl
cmc
test
sub
daa
nop
aaa
cli
jnp
mov
std
sbb
pop
adc
xor
daa
ljmp
ror
dec
sbb
xor
and
sub
cmpsb
adc
in
cli
xchg
fistps
jne
daa
mov
call
mov
pop
test
test
clc
mov
inc
sti
shlb
xchg
jecxz
sbb
and
or
cs
mov
movsb
pusha
pop
lock
repz
xchg
jb
test
lret
mov
xchg
test
hlt
sbb
stc
adc
fnstcw
sbb
add
pop
enter
into
and
mov
jae
inc
sbb
push
jecxz
push
and
sub
xchg
pop
mov
movsl
inc
shrb
dec
jnp
add
aam
jae
in
dec
mov
ljmp
cwtl
and
rclb
ja
mov
jns
jb
daa
mov
scas
loop
arpl
jo
dec
mov
push
scas
xor
test
aad
js
xchg
push
popf
mov
push
add
shlb
mov
push
or
dec
icebp
xchg
out
ss
pop
pop
pushf
out
mov
test
or
and
dec
mov
fucomi
enter
mov
mov
aam
or
pop
cmp
mov
adcb
push
fxch
rcrb
pop
lret
dec
sbb
mov
push
and
cs
cmc
jbe
in
xorl
adc
ja
dec
rorl
mov
sub
xor
into
nop
sub
pusha
jo
xchg
sarb
jbe
mov
cmp
mov
xchg
shll
xchg
fisubs
filds
iret
jae
xor
inc
out
pop
repnz
lea
in
adc
imul
enter
call
outsl
ret
bound
sub
lods
pop
lods
sbbb
lea
clc
data16
nop
clc
loop
sbb
fcompl
aam
adc
pop
or
rorl
pop
insb
xorb
cmp
icebp
mov
fisubs
outsb
pop
adc
sbb
out
jmp
jbe
mov
jg
shrb
mov
aam
test
int3
adc
fistl
ret
jg
add
sub
mov
add
add
add
add
add
add
add
stc
imul
add
ja
mov
incl
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
aad
add
aad
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
outsl
add
pop
add
push
add
dec
add
inc
add
cmp
add
xor
add
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
nop
add
pushf
add
mov
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
sub
add
dec
xlat
add
jo
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xlat
add
int3
xlat
add
aam
add
add
in
add
in
xlat
add
hlt
xlat
add
pop
fadds
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
and
add
sub
add
cmp
add
dec
fadds
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
flds
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
fiaddl
add
add
adc
add
or
add
add
add
cld
flds
add
flds
add
flds
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
fiaddl
add
add
pop
fiaddl
add
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
fildl
add
fildl
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
fildl
add
add
lods
fildl
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
fildl
add
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
