add
add
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
inc
add
jb
add
jb
add
add
inc
add
je
imul
inc
add
jb
add
jb
add
add
push
add
je
insb
add
push
add
js
je
add
push
add
outsb
add
add
push
add
js
je
add
add
dec
add
outsb
add
push
add
js
je
add
add
push
add
outsb
add
add
inc
add
popa
add
add
add
imul
outsl
add
add
add
dec
add
outsb
add
add
add
dec
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
je
imul
push
add
sbb
push
stc
mov
inc
scas
mov
pop
add
add
add
add
add
add
add
jecxz
outsl
add
push
add
add
enter
inc
add
testb
add
add
add
scas
add
add
movsl
add
add
xchg
add
add
add
add
enter
xor
scas
add
add
add
add
add
add
add
add
add
scas
add
add
push
add
add
add
add
add
dec
add
add
add
add
add
adc
cmp
iret
add
add
add
add
jo
jo
cmp
insl
add
add
add
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
scas
add
scas
add
add
add
add
lret
add
loopne
mov
add
add
add
add
add
add
scas
add
pop
add
add
add
add
enter
lods
add
add
add
sbb
into
add
xchg
add
add
movsl
add
mov
add
add
scas
add
add
add
push
add
add
ljmp
add
inc
add
add
add
repnz
add
scas
add
add
add
xchg
add
add
add
add
add
and
xchg
add
enter
out
add
add
scas
add
add
add
add
iret
add
add
add
add
add
add
add
add
test
add
add
pop
add
add
add
scas
add
jo
ljmp
add
add
add
add
add
or
scas
add
add
add
mov
roll
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
scas
add
insb
add
add
add
add
add
add
or
add
add
add
lret
add
add
add
add
sub
add
jns
push
add
daa
add
mov
add
int3
add
xchg
add
add
add
jp
sub
xchg
add
add
lods
add
adc
add
inc
add
filds
filds
add
add
roll
add
add
or
add
push
add
add
add
add
add
add
scas
add
add
add
add
add
add
add
add
add
add
add
add
sbb
hlt
add
add
sbb
scas
add
add
add
add
add
adc
add
add
add
add
add
xchg
add
scas
add
add
add
add
or
scas
add
add
add
add
jns
filds
inc
add
add
add
add
adc
add
add
add
xchg
add
xchg
add
add
add
add
add
and
fstpt
xchg
dec
loope
sbb
push
test
push
jne
adc
jle
shr
mov
pop
mov
cmp
or
dec
xchg
mov
sbb
orl
movsl
test
mov
mov
pop
mov
push
aaa
mov
sarb
sub
mov
sbbb
rclb
dec
dec
and
stos
sbb
pop
es
int
es
fildl
pop
movsl
mov
cmc
ret
sbb
cmp
push
cld
mov
push
mov
inc
js
mov
xchg
pop
jnp
lahf
fdivs
daa
ljmp
rorb
push
sbb
dec
test
and
xor
call
xchg
mov
push
add
mov
or
sub
mov
inc
and
push
push
jne
nop
scas
mov
xor
mov
test
imul
push
cmp
adc
and
jle
jmp
or
ds
or
rcl
sbb
cltd
test
xor
cmp
pop
fcoms
loope
dec
std
mov
xchg
push
pop
push
hlt
cmpsl
imull
cmp
ja
sbb
outsb
pop
xor
xor
adc
les
ja
sbb
pop
pusha
sub
das
pusha
jp
lret
std
test
mov
cli
lea
and
je
call
lret
mov
cwtl
push
push
inc
fwait
xlat
addr16
lret
cwtl
jecxz
cmp
inc
mov
rcrb
sub
mov
jmp
or
jle
adc
sbb
fbstp
xor
jae
cltd
movsb
cltd
icebp
sbb
inc
cmp
mov
ret
inc
fcom
orb
repz
sar
mov
lods
adcl
outsb
dec
ljmp
mov
xor
popa
es
fwait
jo
xchg
dec
ja
mov
loope
mov
fstpl
jle
aad
mov
fwait
mov
insl
dec
icebp
testb
clc
daa
movsb
xor
imul
icebp
pusha
mov
pop
xor
movsl
pop
jmp
ds
leave
or
xchg
xchg
negb
fld
enter
jo
xor
xor
cli
movsl
mov
inc
sub
jp
imul
push
ljmp
fsubrl
and
and
jae
jae
gs
mov
les
frstor
or
mov
cltd
in
popa
hlt
adc
adc
sbb
mov
outsb
adc
fcomi
jnp
fdivrs
icebp
and
cmp
decl
loope,pn
fsubs
sbb
add
add
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
call
call
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
hlt
lods
mov
pushf
icebp
in
fsubr
mov
ds
ds
insl
jge,pt
pop
pop
pop
mov
mov
cld
into
int3
fidivrs
push
int3
sbb
or
dec
dec
pop
pop
mov
cmpsl
mov
imul
out
int3
leave
fsubrl
sub
pop
bound
jb
sub
and
loopne
int3
ret
stc
out
add
std
iret
daa
scas
mov
push
repnz
sbb
orb
mov
cwtl
scas
lods
xor
cld
add
inc
pop
push
out
rol
repz
sarb
mov
mov
pop
pop
mov
pop
pop
sub
sarl
xchg
cmp
rcrl
outsb
cltd
adc
cld
es
fidivrs
rclb
push
lret
jmp
sub
pop
dec
insb
inc
inc
xlat
jae
xchg
mov
popf
into
fsubl
rol
sub
repz
sbb
aas
jg
ret
and
mov
shll
xchg
push
mov
cmc
push
shrl
cmp
jns
jecxz
jge
sub
dec
pop
mov
mov
cld
into
int3
fdivl
sub
cmp
or
sbb
insb
data16
dec
inc
sbb
lods
fcmovnb
jmp
cli
fisttpll
test
ds
add
sbb
sub
cmp
scas
sarb
lcall
repnz
ds
dec
imul
or
or
in
mov
jmp
sahf
in
fdivrp
cld
into
int3
cs
cmp
or
sbb
insb
jle
dec
dec
pop
pop
scas
lods
mov
pushf
out
in
cld
into
int3
cs
cmp
or
sbb
insb
jle
dec
dec
pop
pop
scas
lods
jge
xlat
jecxz
pop
rcrl
push
or
shrl
shlb
cltd
dec
outsl
or
push
dec
inc
add
sbb
cmc
mov
jmp
mov
out
pop
hlt
aas
dec
pop
and
add
mov
lahf
sbb
cmc
fwait
pusha
loope
push
push
in
xor
push
pop
fs
cmpsb
push
xchg
test
add
insl
xchg
mov
sub
jno
jge
out
aad
stos
sbb
push
mov
jns
xor
mov
fcoms
stos
inc
and
in
fdivrl
in
nop
repz
mov
xchg
std
jg
loop
sbb
and
sbb
imul
enter
test
or
notb
gs
lret
or
leave
mov
outsl
push
fnstcw
aas
lods
movsl
mov
cmp
es
int
adc
sbb
lea
inc
xchg
xchg
ret
pop
xor
in
sub
notb
jno
dec
gs
xchg
lock
fstpt
cmpsb
inc
addr16
mov
imul
insl
outsl
mov
mov
jnp
je
jae
xchg
mov
adc
les
sub
aas
loope
xchg
dec
in
mov
xor
dec
outsb
pop
in
adc
scas
outsb
mov
adc
cmp
mov
mov
js
or
lds
dec
das
adc
push
or
mov
mov
jg
mov
sub
les
jns
adc
sbbb
mov
pop
fstpl
fsts
fcoml
sub
cwtl
cli
or
ret
divb
xlat
inc
add
ja
popa
arpl
add
xchg
dec
xchg
push
ljmp
xchg
sub
popf
inc
test
inc
pop
sbb
into
and
pop
outsb
sub
jnp
inc
xchg
or
in
lret
jno
loopne
xlat
inc
aam
push
pop
prefetch
lahf
mov
cli
into
ds
daa
fdivl
sbb
les
stc
adc
mov
xor
xchg
mov
dec
and
inc
cmp
sbb
fiadds
dec
cmp
xchg
xor
movsl
xchg
mov
scas
stos
les
and
or
mov
mov
fwait
jne
je
cmp
cmp
imul
lret
xlat
loopne
xor
stc
xchg
jg
test
mov
pop
push
or
push
int3
cmp
repz
insl
jns
popa
lods
pop
add
pop
mulb
cmp
divb
mov
ljmp
pop
jmp
push
cmp
push
gs
mov
pop
pop
jbe
jle
inc
lock
sbb
jo
lahf
jl
lock
fwait
and
xchg
mov
push
push
jecxz
and
mov
xchg
fsubrl
call
insb
imul
fistpll
rorl
adc
inc
jns
mov
cmp
stc
mov
push
stc
and
lock
xor
xchg
js
sbb
fistpl
sub
xchg
scas
mov
popa
xchg
bound
test
aad
inc
mov
jns
push
and
ficoms
mov
jp
or
sub
imul
popf
into
inc
mov
ret
fwait
scas
cmp
inc
mov
mov
out
dec
imul
addr16
push
mov
aam
cltd
sbb
adc
stos
sbb
add
movsl
xchg
out
pop
or
jns
pop
movsl
dec
enter
jle
dec
and
push
mov
popf
out
jl
enter
scas
add
dec
adc
inc
add
cmp
ret
and
sbb
neg
cld
rorb
cmp
gs
rcl
lods
in
std
cli
shlb
testb
mov
test
stos
push
out
lock
jge
inc
lcall
sub
sarl
cwtl
push
mov
clc
xor
mov
mov
pop
lock
cltd
mov
add
stos
dec
dec
fisttps
pushf
fdiv
fld
ret
pop
dec
dec
cmp
jp
test
xor
arpl
push
jge
push
addr16
push
out
and
lea
loop
push
sbb
sbb
add
mov
sbb
lock
pop
pop
mov
jle
mov
adc
jp
neg
jmp
adc
inc
cltd
push
push
inc
xor
cwtl
repz
test
out
jnp
scas
xor
jg
jg
jno
adc
call
push
mov
xlat
mov
movsl
aaa
sarb
jg
xchg
mov
outsb
cmpsb
fisubrs
jecxz
movsl
xchg
push
sbb
das
or
inc
mov
lcall
push
gs
idivl
shr
addb
dec
ret
jecxz
rolb
adc
or
es
lret
iret
cmc
out
adc
movsl
in
repz
mov
pop
into
imul
pop
lcall
sub
xchg
dec
sti
fwait
stos
lahf
add
pop
pushf
mov
fsub
cmp
dec
leave
mov
sub
inc
push
mov
jecxz
mov
pop
pop
jmp
test
pop
mov
jb
arpl
xchg
push
shl
mov
sbb
aaa
push
test
adc
sub
jmp
xchg
out
cmp
ja
insl
cmp
sbb
pop
faddl
cmp
jnp
inc
or
les
bound
fistl
and
push
inc
scas
xchg
rorb
push
jns
sub
std
xor
rcr
popf
mov
xchg
jecxz
movsb
icebp
jnp
inc
out
mov
sub
add
add
jmp
imul
lret
pop
into
push
xchg
adc
pop
xor
push
xlat
and
hlt
adc
xchg
imul
mov
add
mov
xor
sbbl
in
xchg
loopne
xlat
mov
lock
sbb
icebp
js
fistl
daa
dec
scas
aad
push
out
cltd
lahf
movsb
xchg
aam
pop
sahf
iret
stos
xor
pop
jg
test
repz
out
adc
mov
dec
insl
mov
or
jle
inc
scas
jmp
rol
mov
jne
push
jo
lahf
das
mov
sbb
sub
iret
in
repnz
fnsave
cmpsb
fdivrl
repnz
popf
daa
cmp
insl
shr
jl
add
sbb
xor
not
movl
adc
pop
hlt
mov
pop
xor
movsb
xlat
xor
mov
pop
cmp
lret
mov
mov
pop
xor
cmp
movsl
sbb
das
pop
and
xor
xor
addb
leave
test
test
push
insb
jecxz
jmp
push
add
cld
mov
imul
imul
data16
arpl
clc
jne
jne
mov
sbb
or
cwtl
loope
xchg
sub
mov
movsl
jne
aad
aas
out
sub
sti
and
mov
imul
mov
cmp
add
rolb
cmc
rcll
test
jo
mov
repnz
ds
in
jb
jl
lods
xor
push
fdivrs
out
adc
cmp
lahf
int
push
cld
xor
adc
and
jbe
addr16
icebp
jae
xor
pop
mov
sub
or
mov
jmp
out
ja
pop
mov
es
pop
loop
xchg
fst
leave
jne
pop
incb
sti
out
dec
pop
cmpsl
mov
in
or
dec
sbb
jns
fstpt
in
dec
aas
ficoms
add
adc
push
xor
and
in
lea
dec
add
rcrl
add
loopne
out
lret
cld
ret
cmpsb
jnp
jecxz
xchg
xchg
add
xlat
lea
mov
ss
movsl
add
mov
dec
das
or
jo
mov
dec
lret
sub
test
jge
or
sub
pusha
sti
lods
in
pop
dec
xchg
xchg
jne
or
cmp
sbb
add
aad
call
shrl
mov
mov
loope
std
adc
dec
cwtl
and
inc
xor
dec
lock
shlb
mov
pop
ja
popa
aaa
push
xchg
jbe
mov
or
and
lcall
dec
xor
jmp
sub
daa
movlps
in
cmpsl
mov
imulb
pop
sti
inc
add
dec
push
test
ret
insl
adc
fadds
adc
xchg
aad
in
mull
sub
clc
xchg
pop
in
mov
cwtl
mov
xchg
or
jbe
mov
repz
push
inc
int3
pop
push
mov
mov
in
sbb
push
xchg
sbb
mov
outsb
adc
push
mov
sub
push
cs
cmc
stc
dec
addr16
pop
dec
add
mov
sbb
push
or
inc
scas
dec
xor
or
out
or
ja
dec
fcmovnbe
push
pushf
jle
and
lret
leave
out
fnstcw
loope
adc
dec
jmp
mov
push
lret
adc
pusha
mov
jmp
and
add
jb
loop
xor
mov
mov
push
nop
xor
mov
mov
sub
sub
int
fwait
sub
test
or
lret
dec
lods
fisubs
pop
adcb
dec
or
lahf
mov
or
mov
jns
hlt
adc
mov
fsubp
sub
mov
sub
mov
sub
mov
adc
outsb
inc
xchg
ds
adc
jnp
mov
cmpsb
fisubrs
jne
inc
jp
mov
xor
orl
in
popa
fdivs
mov
xchg
nop
sahf
sub
popa
jne
jp
fdivp
dec
popl
jno
or
sar
stos
shlb
ret
dec
sbb
loopne
jo
add
mov
pushf
pushf
lret
add
pop
xor
push
leave
and
mov
mov
push
aam
jmp
xchg
into
popf
mov
pop
jl
jns
cmp
push
out
adc
jge
not
imul
daa
fmulp
jle
pop
push
test
xor
aam
ds
add
ss
pop
mov
in
push
insl
mov
sbb
loopne
sub
jno
aad
ja
int3
xor
adc
enter
xor
mov
fistpll
add
fisttpll
loop
mov
mov
sti
and
adc
inc
sub
add
rorl
addb
and
pop
mov
rcrl
inc
daa
mov
in
daa
mov
mov
imul
je
aad
mov
inc
and
aaa
xor
insb
iret
sbb
dec
xchg
aad
test
add
fs
sbb
mov
lcall
add
lahf
fstpt
sbb
movsb
repnz
mov
or
imul
jae
pop
subb
xor
xor
popf
jbe
sbb
insl
arpl
or
test
sub
icebp
or
movb
dec
aas
daa
inc
mov
mov
push
enter
push
dec
push
sbb
mov
lea
int3
les
push
xor
data16
sbb
fisttps
leave
xchg
repnz
aas
idiv
ds
dec
inc
fdivp
stos
mov
repnz
loopne
mov
cs
imul
repz
sub
pop
sub
xchg
mov
jns
cmp
lret
pushf
fwait
and
xchg
add
stc
xchg
out
in
mov
pop
push
cs
out
xor
pop
loop
mov
cmp
push
sub
sub
and
hlt
out
push
repnz
mov
xor
mov
adc
inc
cli
mov
inc
shlb
les
xchg
test
dec
mov
fisubl
push
imul
inc
data16
pop
inc
inc
cmc
frstor
xchg
lret
vpcomb
test
xor
jnp
mov
repz
or
and
lods
cli
outsl
stos
shrb
mov
repnz
lret
add
jl
cmp
in
fcmovb
lret
imul
xchg
rcll
or
cmp
fwait
pop
pop
mov
stc
outsl
inc
sbb
pop
out
add
push
popf
fcomip
scas
scas
insb
or
ljmp
cmp
cmpsb
sub
orl
mov
leave
out
pop
push
jae
out
pusha
inc
divl
cli
loopne
test
mov
xchg
jnp
inc
jo
inc
push
out
xchg
dec
test
cmp
xlat
pop
dec
xchg
xor
jge
jp
and
and
mov
push
cmpsl
and
es
outsl
xchg
pop
ret
fildl
cmpsl
popf
out
shll
jns
rcrb
in
cmp
sar
addl
std
mov
jbe
mov
push
out
sub
mov
xor
xchg
lcall
dec
mov
orl
dec
xor
outsl
cli
dec
jp
test
outsb
pop
lods
scas
add
lea
mov
sub
rcl
adc
push
in
jl
mov
cmp
out
pop
inc
push
or
mov
cltd
scas
lds
jo
xor
add
test
fstps
lret
fs
lods
scas
das
pop
out
lret
add
cltd
jmp
push
jge
adc
sarl
adc
aas
xor
test
lcall
mov
dec
add
mov
loopne
lods
mov
call
mov
test
mov
rol
pushf
or
jl
out
push
jbe
inc
dec
jns
scas
jns
inc
clc
jecxz
test
negb
mov
pop
pop
inc
aam
mov
pushf
xlat
inc
sub
fwait
push
dec
mov
add
popa
push
aaa
int3
push
push
xchg
sub
fisubl
iret
or
fildll
iret
stos
or
push
enter
adc
ret
xor
sbb
adc
jns,pn
in
jp
mov
push
dec
and
and
pop
sbb
add
jb
pop
push
xor
sub
rclb
push
cltd
mov
in
leave
dec
dec
pop
lods
loope
cmp
push
pop
lods
pop
mov
and
aad
sbb
jle
pop
or
nop
lahf
push
xor
sub
pushf
dec
and
fs
cmp
mov
mov
push
inc
ret
mov
xchg
int
dec
and
mov
inc
inc
cmpsl
inc
push
orl
stos
adc
hlt
pop
das
mov
shlb
ret
xlat
inc
push
jns
cli
inc
lret
mov
mov
insl
jmp
push
ljmp
mov
xchg
adc
lods
ljmp
nop
push
and
imul
sar
mov
inc
mov
cmpsl
mov
cmpsl
push
inc
sbb
mov
cmpsl
jno
mov
pop
lahf
imul
insb
mov
xor
inc
mov
jg
lret
mov
dec
adc
sub
mov
mov
xchg
dec
dec
dec
or
roll
nop
mov
leave
sub
icebp
mov
je
stc
std
sbb
and
push
jp
cmpl
xchg
jge
lods
jno
dec
mov
mov
push
incb
pop
inc
inc
mov
adc
jge
fwait
mov
stc
mulb
aam
and
dec
je
mov
jle
lods
pop
movsl
out
xchg
jecxz
aaa
out
arpl
xor
pop
add
insl
or
orl
fsubs
push
sub
popa
sti
push
inc
aas
out
push
shl
mov
jno
dec
jl
jl
mov
inc
arpl
repz
xor
inc
mull
mov
inc
aam
mov
hlt
or
clc
dec
int
popa
push
shr
jnp
cmp
inc
push
daa
je
xlat
hlt
mov
cmpl
mov
mov
dec
inc
or
cmp
pop
push
cmp
cmp
in
push
pop
cld
cmp
cld
xchg
xchg
stos
daa
popf
adc
xor
repz
lcall
into
aas
ds
xchg
das
ja
icebp
in
inc
inc
stos
mov
jnp
das
outsl
jns
and
shll
add
pop
loope
pop
xchg
lret
jo
pusha
aas
cmp
sbb
mov
cmpsl
sahf
popf
leave
fs
rorb
decl
mov
pop
mov
shll
loope
inc
and
adc
std
jns
popf
xor
sarb
push
cmc
test
push
call
fcoms
adc
popa
out
pushf
xchg
cs
ljmp
lods
rcrb
jl
stc
or
jne
aam
inc
mov
mov
cmpsb
and
pop
jmp
dec
or
fiadds
mov
mov
cli
sbb
pop
cs
lods
mov
push
mov
fnstcw
les
mov
adc
xchg
icebp
dec
dec
clc
push
pop
bswap
dec
or
lods
dec
out
push
xchg
cmp
int3
rcl
sbb
je
pop
pop
dec
pop
cmpb
inc
mov
pop
inc
mov
lcall
pop
inc
je
dec
adcl
add
inc
out
enter
lcall
sbb
jne
imul
insb
icebp
mov
jmp
adc
fs
sti
sub
xchg
mov
pop
in
scas
push
sbb
fcoms
mov
mov
pop
out
mov
jp
adc
inc
pop
dec
xchg
loop
in
mov
stos
testl
in
test
rorb
sbb
shll
ss
int
ja
out
int3
js
and
in
xlat
mov
in
cltd
mov
mov
popa
das
mov
adc
cmp
stos
and
xchg
mov
addr16
pop
lods
scas
repnz
ss
inc
xlat
dec
into
test
in
inc
xor
jno
lret
pop
ffree
or
jns
jl
shll
cmp
insb
shll
scas
cwtl
xor
dec
or
mov
shrb
ret
mov
xor
pop
shl
paddusb
lcall
sbb
adc
jg
cmc
sub
cli
cmp
add
nop
xor
cs
int
ret
bound
movsl
movsl
cmp
es
aam
not
outsb
lock
pop
inc
xlat
or
lods
aad
or
dec
clc
movsb
pop
filds
nop
ror
pop
lea
push
outsl
fistpll
ret
movsb
pop
movsl
xchg
ss
jbe
inc
add
sbb
inc
mov
mov
cli
mov
dec
mov
jecxz
cltd
push
jne
popf
and
sbb
cli
and
je
fnsave
dec
adc
fucomi
sar
mov
lcall
add
cmp
add
mov
mov
xor
aas
shlb
ja
mov
add
mov
rcll
jns
mov
mov
and
cmp
dec
pop
in
test
aam
xor
addr16
jmp
inc
and
jo
fidivrs
push
or
adc
pop
in
nop
mov
xchg
pop
mov
xchg
push
clc
rorb
and
rorl
cs
xor
lods
mov
arpl
repz
cwtl
movsl
or
lea
mov
sub
rcrb
dec
sbb
adc
movb
movsl
and
sub
sti
sub
xor
test
or
loopne
jg
dec
mov
push
inc
cmc
je
leave
add
subb
rolb
mov
push
outsb
cs
sub
lods
cmpsb
addr16
pop
scas
pop
imul
arpl
mov
cmc
dec
xlat
mov
or
jg
mov
outsl
mov
cmp
mov
pushf
add
repz
aas
arpl
mov
iret
in
icebp
loop
pushf
cltd
sti
aad
fwait
mov
insb
dec
iret
arpl
and
push
mov
nop
insb
fisubl
arpl
cmp
cmp
ret
adc
outsb
repnz
das
jmp
pop
mov
sbb
lret
mov
je
pop
mov
dec
and
xor
mov
sbb
sbb
pushf
rcr
pop
push
int3
stc
sti
sahf
dec
jns
mov
imul
test
jge
sarb
jg
mov
jno
jmp
aas
pop
jae
int3
and
cwtl
push
divl
dec
sub
test
test
xchg
cmpsb
jbe
cmpsb
fldt
shlb
out
mov
cmp
pop
adc
lods
fiadds
xor
pop
pop
xchg
push
ret
div
add
movsb
outsb
lret
repnz
js
fwait
adc
test
outsb
lret
fmuls
mov
or
xchg
pushf
lahf
xchg
shll
xor
inc
out
cmp
test
nop
imul
and
sub
mov
add
and
loopne
add
sub
pop
enter
xor
lds
pop
mov
xor
mov
call
jo
cmp
and
add
clc
jecxz
jl
sbb
mov
xchg
inc
adc
dec
insl
in
add
outsl
leave
cmp
push
xor
mov
leave
jb
pop
mov
mov
std
mov
rclb
shlb
cmp
ret
push
adc
subl
fidivrs
push
pop
adc
das
mov
jb
repz
cmp
lahf
loope
outsb
inc
sub
mov
xchg
cmp
lea
les
dec
dec
inc
aas
test
out
inc
xor
cld
out
cwtl
and
mov
imul
or
jne
xor
mov
sti
dec
stc
xor
iret
push
and
rcl
push
mov
cmp
jmp
inc
shlb
mov
lea
cmpsb
les
daa
sbb
shrl
call
and
pop
mov
fstl
pop
add
xlat
and
jl
push
es
stos
add
loop
jmp
daa
jnp
cmp
mov
mov
mov
clc
sub
sbbl
adc
popa
mov
loop
scas
pop
pop
lahf
jo
cmp
inc
out
mov
in
cmp
cld
pop
pop
mov
mov
arpl
sub
sbb
push
loope
sbb
pop
test
mov
jmp
shl
jne
cmp
repnz
xchg
enter
js
mov
mov
lds
jmp
lods
inc
mov
jp
rcr
das
in
add
cmp
dec
dec
xor
popf
push
cmpsl
imul
jns
loop
icebp
jnp
or
add
repnz
in
icebp
loop
xchg
push
xchg
int
sbb
mov
mov
and
imul
pushf
test
sub
adc
mov
or
mov
adc
dec
and
jne
jno
mov
out
jne
mov
test
jmp
pop
add
out
imul
xchg
stc
push
pop
fmul
mov
push
sub
faddp
cmpsb
sbb
jnp
ret
mov
sub
cmpsl
xor
jp
xchg
mov
clc
mov
cmpsb
mov
pushf
addr16
jae
sbb
pop
repz
or
mov
insb
or
adc
hlt
int3
imul
push
iret
bnd
pushf
out
in
cld
into
int3
cs
cmp
or
sbb
insb
jle
dec
dec
pop
pop
scas
lods
mov
pushf
out
in
cld
into
int3
cs
cmp
or
sbb
insb
jle
dec
dec
pop
pop
scas
lods
mov
pushf
out
in
cld
into
int3
cs
cmp
or
sbb
insb
jp
dec
dec
outsl
pop
lcall
pushf
out
in
cld
dec
int3
pop
sbb
sub
xchg
movsb
or
imul
testb
int3
int3
int3
int3
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
lea
outsb
lods
pop
mov
dec
mov
cwtl
push
or
fidivrs
scas
insl
sahf
jge
lea
outsb
lods
pop
mov
cs
push
std
jbe
sbb
into
dec
rcrb
insl
sahf
jge
lea
outsb
lods
pop
mov
cs
push
std
push
or
lods
adc
and
adc
les
iret
dec
lea
xchg
push
test
sbb
outsb
mov
sti
dec
mov
push
sub
xor
out
pop
stos
out
or
mov
adc
mov
sbb
jle
arpl
xor
scas
nop
in
adc
test
arpl
xchg
in
stos
aam
or
mov
dec
sbb
popf
int
adc
or
pop
sbb
mov
xor
jb
jmp
ret
jbe
cmpsl
in
je
cs
and
lea
movsl
jecxz
dec
pop
push
xor
push
jbe
pop
out
ja
aad
js
jno
pop
std
insl
sahf
adc
outsb
lods
pop
mov
cs
push
std
push
or
fidivrs
scas
insl
sahf
jge
lret
jp
das
enter
mov
pop
mov
out
dec
mov
xor
sub
sub
mov
out
or
cmp
dec
mov
in
ja
push
mov
xchg
insb
lea
sub
or
in
stc
les
sub
adc
cs
push
std
push
or
fidivrs
scas
insl
sahf
jge
lea
outsb
lods
pop
mov
cs
push
std
push
or
fidivrs
scas
insl
sahf
jge
lea
push
push
mov
mov
dec
and
and
xor
cwtl
xchg
pop
xorl
repnz
jg
int3
sbb
test
fists
loopne
jle
ss
add
xchg
mov
test
rolb
ret
outsl
jmp
in
mov
js
incl
loope
push
popf
test
lret
lcall
jno
dec
es
mov
dec
lcall
dec
shrb
pop
in
dec
xchg
ljmp
pop
and
and
mov
in
push
sub
jbe
lret
adc
adcb
mov
cmp
pop
aad
clc
fidivrl
lret
shl
cld
jno
cmp
inc
ss
fnstenv
xlat
andl
aaa
nop
in
pop
mov
sbbl
sbb
dec
dec
enter
push
mov
and
lds
lret
and
rclb
inc
scas
pop
cmp
pop
mov
mov
sub
aas
push
clc
dec
or
les
jb
call
in
scas
divb
lahf
insl
sub
jp
jb
sbb
inc
data16
xchg
je
pop
jmp
jg
negb
mov
stc
add
sbb
sbb
mov
sub
daa
les
mov
push
movsl
sbb
arpl
cs
aaa
addr16
lods
out
adc
xchg
pop
lods
fdiv
lcall
inc
ficomps
jl
jbe
int
jecxz
sub
dec
rcrl
xchg
les
aaa
shlb
add
mov
data16
je
sbb
dec
fistps
imul
jecxz
test
cmp
dec
movsl
ljmp
loopne
adc
jmp
js,pn
mov
jnp
ljmp
jecxz
adc
popa
test
cmp
test
repz
jne
inc
mov
das
movsb
test
icebp
mov
adc
in
mov
or
pop
daa
and
xchg
pop
mov
lods
and
fs
out
dec
int3
sbb
pop
mov
icebp
adc
jno
out
leave
xor
xlat
dec
push
pop
and
dec
daa
mov
rorl
mov
pop
pop
push
jg
das
xor
jne
shl
outsb
cmp
mov
fucomi
sbb
xchg
lods
mov
mov
aas
pushf
daa
xor
in
fldenv
fidivs
dec
mov
movsb
mov
pop
lock
lods
xorb
out
xor
or
adc
sbb
leave
xchg
jmp
test
push
push
das
xor
or
mov
add
test
das
insb
or
jmp
jl
sbb
xchg
ja
pusha
jbe
mov
sahf
rcr
or
push
mov
loopne
pop
xor
push
sbb
fnsave
icebp
push
cltd
mov
sub
repnz
shl
popa
jmp
and
mov
sbb
rcrl
xchg
mov
lea
in
out
sub
pop
mov
jp
decb
fwait
pusha
aam
repnz
cmp
xchg
jle
jmp
cmp
imul
mov
and
popf
cld
pop
and
popa
dec
fwait
mov
stos
nop
adc
push
mov
mov
loopne
jg
jbe
sub
dec
mov
cmp
mov
sbb
pop
dec
xchg
push
loope
cmp
insb
sbb
gs
popa
ret
lods
push
pushf
push
mov
mov
lods
leave
sahf
nop
mov
fbstp
test
lret
add
pop
inc
mov
cmpsb
jno
mov
sub
mov
ret
push
or
mov
adc
pop
pop
xorl
xchg
fnop
push
mov
pop
inc
pop
xchg
out
pop
mov
or
decl
sub
lea
xchg
push
movsb
sbb
popa
push
mov
push
mov
faddp
sub
lea
ja
loope
std
hlt
iret
mov
jg
hlt
add
cmp
sub
push
cmc
stc
lret
pusha
orl
mov
xlat
inc
adc
addr16
xlat
sub
fstp
js
loopne
xchg
pop
cli
clc
push
test
cmpsb
push
pop
and
pushf
mov
stos
test
mov
loop
imul
cmpsb
push
push
push
std
aam
mov
divl
sub
enter
push
xchg
jns
mov
inc
xor
dec
loopne
jne
mov
aaa
push
addr16
int3
lcall
sbbl
sub
arpl
stos
mov
lock
mov
inc
sub
loopne
into
mov
clc
inc
fs
lods
dec
aas
push
inc
mov
pusha
test
scas
outsb
outsb
add
ret
cmp
popl
cmp
test
xchg
cld
jg
mov
sahf
push
icebp
sub
xor
stc
cs
scas
leave
dec
fistps
out
repz
cmp
leave
gs
fmul
add
add
mov
xor
iret
sahf
xor
mov
bound
fwait
mov
jmp
popf
mov
adc
mov
insb
sbb
dec
xor
aas
addr16
js
orl
aam
icebp
or
push
icebp
mov
add
sub
inc
mov
in
sbb
jecxz
inc
sti
mov
cmp
mov
mov
xor
sarb
push
iret
lret
lock
pop
inc
or
or
das
mov
lret
and
lea
mov
mov
mov
cmp
dec
aaa
pop
in
repnz
stos
imul
test
fwait
in
sbb
xchg
decl
stos
fs
mov
call
aam
orl
pop
and
jbe
lret
nop
xchg
cltd
push
mov
jno
scas
xchg
xchg
dec
fdivr
lea
loope
into
pop
pop
push
add
xchg
test
addr16
pop
subb
jmp
sub
and
test
push
rcrl
pushf
push
inc
sahf
add
jge
sub
inc
xchg
pop
daa
dec
mov
or
xlat
arpl
xchg
imulb
popf
dec
addb
enter
mov
aad
vmptrld
mov
cmp
inc
mov
imul
push
addr16
std
arpl
sti
sarl
push
push
pop
mov
bound
sahf
ds
lret
jmp
lea
arpl
sbb
inc
push
jl
xlat
xor
std
popa
jmp
pop
fldt
ljmp
xor
dec
pop
push
jno
movsl
sub
cmp
cwtl
clc
mov
sbb
mov
dec
enter
scas
je
mov
mov
sub
dec
sahf
call
bnd
imul
adc
mov
push
sti
lahf
lahf
lret
cmc
push
dec
in
sub
jae
sub
adc
fsubrp
cmp
mov
int
cmp
incl
add
sub
mov
or
sub
adc
sbb
jae
dec
hlt
push
or
sbb
lock
mov
dec
sarl
and
cli
cld
pop
lock
adc
iret
mov
push
pushf
and
jecxz
sbb
fists
js
jp
jbe
or
out
outsl
cmpsl
jnp
xor
call
xchg
mov
xor
mov
scas
xchg
test
or
sub
inc
or
outsl
xchg
cmpsl
xchg
insb
dec
xchg
pop
xchg
mov
xchg
arpl
scas
imul
push
call
call
fsubrl
mov
shr
cmpsb
push
popf
mov
aam
sbb
jne
lcall
adc
aam
dec
stos
arpl
out
scas
xchg
jmp
and
cmpsb
popa
pop
cmpsb
cmp
lahf
fisubs
add
rcll
xorl
insl
lahf
call
dec
iret
xor
ret
jo
mov
test
ffree
das
lea
stc
push
cmp
inc
repz
lods
dec
lea
xchg
dec
xlat
aam
inc
stos
jns
sub
sub
fnstsw
adc
push
clc
sub
pop
jae
gs
pop
xchg
xchg
and
lock
pop
xchg
or
adc
dec
js
xor
sub
enter
xor
or
dec
cmp
sbb
outsb
push
xchg
pop
mov
mov
adc
je
sub
cmp
push
jle
loop
dec
fisubrs
insl
or
in
pop
insl
dec
fisttps
push
push
dec
loope
arpl
cld
dec
fwait
mov
mov
cmp
dec
aam
dec
ss
sbb
fimuls
and
call
lods
fisttps
sbbl
jne
inc
adc
subl
jl
sbb
nop
leave
and
dec
cmpsl
cmp
jge
or
lret
jl
xor
les
stos
sbb
sbb
pop
push
sbb
sti
and
xchg
mov
lcall
loopne
adc
and
mov
repnz
mov
notb
lcall
mov
mov
fbld
sbb
inc
sbb
sbb
dec
mov
ja
mov
test
sub
xlat
sbb
pop
push
jp
imulb
cmp
fisttpll
xchg
mov
outsl
xchg
push
test
sbb
xchg
fcmovu
dec
xchg
imul
rcrl
outsl
ja
xchg
mov
cld
cmp
je
cs
bound
mov
es
mov
xor
aaa
mov
cmpsb
outsl
cmpsl
jecxz
sub
mov
movsb
popf
aad
loop
ret
adc
imul
das
popa
shrb
test
repz
ljmp
mov
cmp
cmpps
or
xchg
cmp
jge
pushf
or
pop
mov
cmp
out
jnp
jl
jecxz
orl
inc
inc
subb
push
mov
stc
es
test
fcmovnu
mov
mov
out
imul
stc
inc
dec
icebp
xchg
mov
dec
ljmp
insb
stos
fimuls
pop
mulb
ds
or
ds
fmuls
sbb
jp
jae
dec
pop
in
or
and
mov
pop
std
add
dec
addr16
es
aas
daa
xchg
push
cmc
stos
into
pop
loop
add
push
lock
das
mov
imul
aas
ret
movsl
test
rcll
xor
mov
inc
jp
mov
iret
push
je
pop
adc
enter
shlb
fwait
inc
sub
shl
mov
sbb
jnp
cmc
or
ljmp
mov
scas
outsw
fcompl
loope
xchg
lahf
aas
out
movsl
mov
lods
add
lock
arpl
sbbl
inc
popf
scas
aam
cmp
mov
in
mov
dec
mov
push
xor
xlat
or
mov
xor
mov
and
andb
jg
mov
xchg
and
mov
scas
ficompl
test
fcmovu
inc
jbe
outsb
dec
testb
pop
sbb
arpl
jae
cltd
push
lahf
movsl
mov
lret
ret
outsl
dec
in
sub
mov
insb
xchg
pop
aaa
sbbb
btc
leave
test
mov
sbb
push
int3
testb
inc
xor
sub
test
ret
popf
sti
arpl
mov
popf
mov
inc
mov
adc
push
push
pusha
xchg
xor
scas
jbe
xchg
roll
loop
sbb
xchg
iret
std
jle
push
je
nop
cmp
shl
popl
mov
mov
movlps
push
bound
bound
fstpt
mov
cmpsl
les
mov
adc
fldl
jp
stc
or
pop
mov
and
xchg
mov
sub
cwtl
sub
movsl
cwtl
jmp
inc
iret
inc
lods
lds
add
push
fsubrl
push
lret
test
and
jno
push
in
mov
push
lods
mov
scas
fldcw
mov
ja
fwait
mov
jae
pop
adcl
loop
push
pop
hlt
shll
out
mov
xchg
mov
test
cmp
idivl
or
call
mov
add
pop
mov
imul
add
cmp
mov
and
adc
dec
incb
jno
aaa
nop
adc
nop
nop
mov
out
add
mov
sti
ror
xlat
jg
and
dec
pop
in
mov
ss
jge
arpl
ja
repz
xchg
sahf
cwtl
imull
lret
xor
stos
mov
add
jno
cmp
adc
push
lcall
dec
cltd
hlt
cmpsl
test
inc
sbb
pop
push
dec
pop
and
sub
pop
or
movb
push
and
popa
sub
test
or
cld
mov
out
sbb
push
mov
jo
fimuls
cmp
jl
lahf
xor
int
jbe
popa
sub
push
sub
pop
sbb
lcall
loope
mov
xchg
pusha
scas
sub
lret
sbb
push
test
out
sub
in
sub
stc
xchg
cltd
popa
das
cmc
jo
lcall
insl
popf
hlt
add
inc
pop
loopne
fsubrp
ljmp
movsl
test
out
out
add
xor
cmpl
jnp,pn
je
sbb
sub
mov
jae
adc
jno
sahf
dec
in
sahf
push
adc
sub
mov
mov
push
jmp
inc
mov
mov
pop
mov
clc
aaa
lock
or
sub
scas
jmp
jg
sahf
jo
sbb
xor
sub
aas
icebp
aas
repz
dec
add
movsb
dec
sar
add
pop
jnp
shlb
lock
jbe
push
jbe
jns
sti
int3
lea
lds
inc
lods
es
adc
inc
xor
shll
mov
lahf
scas
icebp
fstpt
sahf
jns
cld
xchg
icebp
xchg
inc
repz
aas
add
popa
test
cmp
lcall
mov
pop
inc
inc
jns
or
inc
int
fisttpll
loopne
adc
clc
testl
test
inc
insl
clc
orl
dec
push
mov
push
mov
dec
gs
cwtl
dec
pop
mov
lret
inc
out
xchg
nop
in
jns
jbe
xchg
shll
out
arpl
cmp
in
mov
xor
addr16
jmp
push
fisubs
mov
shlb
pop
icebp
mov
sbb
dec
imul
pushf
xchg
scas
enter
dec
out
std
mov
hlt
mov
adc
inc
test
in
pop
sti
cmp
mov
add
mov
sub
mov
pusha
shll
mov
iret
mov
ja
inc
repz
push
movsl
xchg
js
push
fcoml
pop
hlt
cmpsl
xchg
jmp
lahf
je
mov
leave
sub
pusha
lods
frstor
in
jns
push
pop
inc
cwtl
push
xlat
lods
jp
int3
sub
jb
insb
test
mov
mov
repnz
push
cmpsb
cmpsl
sbb
in
popa
push
sahf
int
xchg
stos
sbb
xor
pusha
dec
cwtl
inc
aad
ss
gs
and
or
aad
add
dec
cmp
jnp
sbb
popa
sub
out
push
inc
dec
sub
xchg
icebp
xor
aaa
jle
dec
leave
inc
mov
adc
cmp
sbb
dec
dec
xor
adc
jg
or
iret
sbb
and
xor
jmp
ret
push
inc
imul
pop
push
nop
insl
leave
pop
mov
das
dec
dec
add
push
mov
dec
push
scas
in
cmp
stos
inc
inc
cmp
mov
cwtl
and
aas
ret
cmp
cltd
mov
outsl
xchg
shr
pop
rcll
lods
in
ret
in
adc
mov
cmc
fdivr
movsb
loopne
sub
stos
pop
jl
xor
dec
test
jge
add
loope
push
push
push
ret
nop
outsl
lock
jne
fsubrl
xor
je
jp
test
in
movsb
test
push
cmp
fisttps
in
int3
outsl
ret
outsb
jmp
rorb
lea
fs
insl
test
jae
xchg
rorb
stos
pop
push
lcall
push
adc
mov
adc
and
xorl
jnp
jne
psubsw
xchg
pop
mov
in
int3
stos
pop
pop
sbb
dec
rol
test
call
fidivrs
mov
jbe
adc
fisttpl
or
ret
cwtl
pop
add
pop
scas
adc
rolb
push
in
and
cmp
adcl
out
push
xchg
rolb
sub
mov
cmp
push
test
mov
jecxz
flds
mulb
dec
and
enter
jns
fwait
cmp
pop
dec
cmc
outsb
leave
inc
jb
arpl
lret
subl
mov
sti
fisubrs
mov
ja
out
idivb
and
mov
call
aam
cmp
adc
push
cmp
mov
aas
or
je
jo
fsts
lods
adc
js
xchg
stos
imul
or
sahf
loop
mov
lds
or
sbb
icebp
hlt
push
je
lret
jno
lds
pop
sub
or
rorb
dec
push
lret
jns
shl
mov
adc
mov
lods
xchg
loope
pusha
mov
lds
imul
xchg
xchg
mov
sub
pusha
adc
sub
xchg
push
add
jp
mov
sbb
mov
flds
xchg
mov
mov
adc
push
rolb
mov
fisubl
insb
cmp
dec
sbb
jno
add
sub
hlt
push
jle
xchg
cmp
je
sahf
mov
xor
mov
push
popa
add
dec
sub
sub
fsubs
and
mov
or
or
movsb
and
add
sbbl
mov
gs
cmp
push
push
sub
mov
leave
push
int3
dec
cmc
into
cld
mov
std
ss
dec
mov
popf
push
and
mov
mov
xchg
add
enter
mov
aas
adc
jno
sub
push
mov
je
mull
mov
inc
ret
call
lea
int
out
push
xchg
mov
jmp
fistps
dec
call
es
cltd
dec
fwait
pop
xor
icebp
movsl
jmp
fwait
or
jmp
sbb
or
leave
pop
inc
ja
push
or
aas
lods
int3
in
out
les
push
lret
inc
inc
lret
cmc
add
aam
jl
inc
sar
ja
test
das
les
lds
sbb
pop
testl
adc
shrb
scas
adc
std
stos
cmpsl
xchg
aas
adc
mov
addr16
cs
cmp
rcrb
mov
scas
lods
fsubl
and
mov
stos
dec
shrb
das
or
cmp
jecxz
mov
jne
jb
sub
jecxz
movsb
cmp
xchg
fldenv
stos
push
getsec
cmpsb
aas
sbbl
aam
and
addr16
adc
ss
mov
mov
xorl
inc
ret
repnz
fnstcw
jae
das
lods
repz
cmp
or
dec
xchg
out
jno
shl
jle
fdivs
dec
xchg
push
pop
pusha
rorb
jnp
es
cmp
js
jne
inc
dec
cwtl
or
icebp
ja
dec
pop
inc
jbe
pop
dec
insb
mov
divb
adc
xchg
ja
out
jecxz
mov
pop
sarb
or
pop
mov
rcll
test
es
in
shl
sbb
and
sub
sbb
xchg
pop
pop
cmpsl
add
cwtl
sbb
adcl
dec
push
std
inc
popl
cli
test
int
or
aaa
mov
cltd
jge
push
xchg
adc
fimuls
cmp
std
xchg
outsl
xorb
mov
xchg
push
cmpsb
ret
in
jge
cs
shll
lret
test
jns
xchg
add
aad
inc
mov
clc
aam
hlt
push
rcr
arpl
int3
fnstenv
stos
xchg
mov
into
fs
xchg
dec
movsb
inc
call
outsl
ror
ds
je
iret
mov
shl
call
fstl
mov
loop
fcmovne
addb
dec
xchg
pop
mov
jbe
mov
clc
hlt
mov
xchg
jge
and
call
fimuls
icebp
push
cmp
mov
mov
mov
mov
push
shr
push
js
mov
sub
jbe
das
cs
in
xor
loope
or
in
arpl
rclb
stc
lret
push
popf
xchg
cmp
lret
fildll
xor
bound
jno
or
mov
and
out
es
mov
ret
mov
rorl
inc
movsl
add
popa
scas
mov
fisubs
xor
insb
call
lock
sbb
fs
jmp
negl
cmp
ret
movsb
test
shrb
pop
daa
shll
mov
push
or
addl
cmp
imul
push
push
in
aam
movsb
bnd
and
cmc
mov
pop
shrl
sarl
aam
les
ret
int3
shrb
imul
repnz
ss
lods
repnz
xlat
jno
cmp
mov
jmp
ljmp
mov
jb
in
dec
mov
ret
xchg
or
test
sbbl
jmp
leave
sub
rcll
add
lea
jg
mov
cltd
bound
add
sub
movsb
fldl
out
mov
rcr
ds
in
jl
xchg
jecxz
stos
fdivrl
push
es
mov
cli
add
pushf
pusha
inc
push
add
cmp
shrl
repz
or
push
rcrl
jecxz
out
js
sub
data16
or
xor
add
mov
loopne
dec
jmp
insb
inc
arpl
in
cmp
jge
inc
pop
es
int3
mov
pop
dec
scas
mov
inc
sbb
stc
inc
shll
xchg
add
cmp
or
pop
daa
clc
add
cmp
dec
mov
test
cmp
movsb
enter
inc
adc
loope
jl
sahf
fisubrs
xor
fcomps
dec
pop
mov
and
and
mov
cs
ljmp
cltd
insl
pusha
daa
sti
push
ret
shr
mov
sbb
pushf
mov
mov
popa
ljmp
orb
fcomps
add
cs
data16
fisubs
out
sbb
adc
icebp
sbb
repnz
fnsave
xor
aad
pop
pop
mov
jae
adc
push
xchg
aaa
sbb
xchg
ret
aaa
sbb
cmp
sub
subl
xchg
mov
mov
xchg
sbbb
movsl
mov
in
sbb
jecxz
and
nop
sub
lds
imul
enter
ret
sbb
fistl
std
dec
push
sbbl
lcall
outsb
repnz
mov
cs
push
std
push
or
fidivrs
scas
insl
sahf
jge
lea
outsb
lods
pop
mov
cs
push
std
push
or
fidivrs
scas
insl
sahf
jge
lea
outsb
lods
pop
mov
cs
push
std
push
or
fidivrs
scas
insl
sahf
jge
lea
outsb
lods
pop
mov
cs
push
std
push
or
fidivrs
push
xchg
popa
xorb
int3
int3
int3
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
push
mov
push
mov
push
push
push
push
movl
movl
movb
call
andl
andl
push
mov
push
mov
movl
movb
movl
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
mov
movb
movb
call
mov
lea
push
movl
call
pop
pop
leave
ret
insb
mov
int3
xchg
push
mov
lahf
xchg
call
xor
dec
adc
inc
or
cld
mov
int3
xchg
mov
rorl
add
popa
sub
sbb
or
cld
mov
int3
xchg
mov
rorl
jno
adc
inc
adc
mov
pushf
jge
daa
mov
addr16
std
cmp
sbb
test
test
nop
lea
sbb
pushf
xchg
push
add
mov
hlt
lods
jns
in
shll
std
mov
stc
push
jl
cmp
or
roll
mov
in
mov
andb
mov
sub
pop
jmp
or
push
jo
cmp
dec
push
fldcw
movsb
push
pushf
mov
or
dec
and
inc
xor
inc
repz
in
dec
push
orb
sub
or
sbb
and
add
sub
sbb
mov
int3
xchg
mov
rorl
add
popa
sub
sbb
or
mov
test
mov
adc
mov
mov
movsb
jmp
pop
xor
jg
or
or
js
mov
addl
cs
push
sub
push
pop
push
dec
xor
aas
mov
ret
cmc
in
in
lea
jl
insb
xor
adc
sub
sbb
or
cld
mov
int3
xchg
mov
rorl
add
popa
sub
sbb
or
cld
mov
sahf
inc
iret
and
cmp
arpl
in
inc
repnz
idivb
pop
ljmp
call
jne
loope
cmp
inc
lea
fsubrs
aad
or
aas
je
lods
mov
sbb
mov
movsl
pop
call
adc
arpl
xor
arpl
popa
test
cli
mov
into
mov
shll
int
push
mov
jae
shrl
sub
lods
inc
cmpsb
ret
dec
addl
into
out
jns
ficoml
adc
decb
es
mov
pop
xlat
out
cmc
lcall
push
adcl
mov
sbb
pop
aaa
mov
movsl
fmuls
out
lock
mov
lods
or
cs
pop
jmp
inc
repz
mov
shlb
xor
push
jle
ds
inc
mov
ja
stos
sub
icebp
icebp
aaa
xchg
arpl
daa
cld
adc
nop
test
adc
leave
xor
mov
xchg
pop
nop
or
pop
pop
ficompl
push
pusha
and
out
inc
sbb
or
xor
dec
lahf
push
push
or
push
mov
dec
and
mov
push
aaa
loope
sar
xchg
add
shrl
in
xor
pop
lods
arpl
fbstp
jns
add
mov
js
iret
mov
dec
xor
gs
enter
rclb
shrb
cmpsl
ds
das
pop
or
adc
or
test
mov
out
fnstsw
cmpb
inc
xlat
insb
lods
sarl
or
test
and
rcll
add
jle
mov
sub
stos
jle
push
in
jp
push
xor
idivl
ja
ds
in
cmove
push
mov
cmp
call
mov
add
push
loopne
popf
xlat
sub
or
push
mov
roll
faddl
outsb
pop
mov
push
xchg
inc
sub
jne
pusha
dec
gs
add
nop
pop
jle
int3
mov
mov
jbe
jl
xor
je
push
rcrl
insb
jge
std
imul
cmp
mov
sub
ljmp
xchg
repnz
mov
mov
inc
inc
xor
popl
xlat
mov
outsl
in
pop
jno
jg
hlt
fldcw
js
nop
mov
xchg
repz
pop
enter
js
xchg
cmp
adc
imul
leave
lret
dec
pop
jb
jmp
sub
cltd
lret
jecxz
pop
fistps
daa
xor
rcr
scas
int3
pusha
cmc
push
int
sub
jge
lods
cmp
jecxz
jnp
pop
lods
cmp
rcrl
in
xchg
or
aas
dec
xchg
scas
jne
pop
push
outsl
sbb
out
xchg
cmpsl
inc
movsl
in
scas
jge
dec
sub
push
add
add
xchg
mov
mov
test
les
bound
push
in
in
decl
repz
arpl
inc
xor
inc
dec
hlt
sbb
pushf
imul
pop
mov
jmp
mov
je
arpl
hlt
fisubrl
xchg
lahf
gs
divl
or
movsb
pushf
fbstp
xchg
stos
sub
aam
mov
iret
pop
ret
jnp
add
cmp
sbb
or
jbe,pn
shlb
pop
loop
adc
pusha
push
frndint
sub
std
jo
inc
add
mov
xor
mov
adc
cmp
mov
push
divb
jg
mov
cmp
lahf
mov
fdivrl
and
leave
fdivrs
nop
in
inc
inc
adc
or
aas
mov
test
lock
test
test
xor
cmp
fisttps
add
pusha
rolb
in
mov
sub
push
inc
mov
jl
mov
insl
ss
dec
jecxz
scas
test
fcomip
out
sub
lds
adc
or
add
imull
sbb
sub
popf
xor
add
xchg
shrl
pop
int3
clc
push
pop
mov
add
jg
xor
fildll
and
adcb
cmp
adcl
pop
and
hlt
lock
jb
incl
in
movsb
push
inc
fldcw
imul
mov
pop
loop
mov
xchg
cmp
sub
xor
jg
loope
push
jmp
mov
sti
repnz
fdivrs
in
mov
jg
movsl
or
lea
out
cmp
insl
mov
je
cmpsb
mov
fmull
ret
pop
loopne
jo
movsb
xor
ljmp
dec
dec
jno
xchg
pop
hlt
or
dec
andl
stc
adc
xor
mov
in
adc
mov
sbb
and
jno
add
mov
cld
xor
jbe
mov
xlat
movsl
xchg
cmp
fbstp
adc
loopne
cmp
int3
fs
add
stos
sbb
or
vpmullw
cmp
dec
aam
inc
inc
sbb
in
sub
clc
sbb
dec
outsb
sub
pop
push
mov
inc
mov
sbb
aad
pusha
mov
xchg
out
test
jl
xchg
rorl
xchg
stos
subl
clc
mov
inc
dec
test
jg
inc
shlb
cmc
rorl
hlt
ja
arpl
push
jb
push
movsl
in
mov
arpl
or
shlb
pop
cltd
fadds
test
lret
or
dec
mov
das
inc
mov
mov
and
aaa
int3
adc
sti
clc
pop
jl
mov
ja
mov
stos
inc
out
daa
push
clc
shll
clc
push
outsb
inc
insl
sbb
xlat
and
adc
xchg
adc
cltd
out
leave
sbb
xor
push
fwait
imul
and
mov
pop
mov
cs
lea
xchg
cltd
xor
or
xchg
jnp
pop
sbb
mov
or
jo
in
cs
addr16
mov
insl
pop
sbb
push
rclb
out
fidivl
out
inc
and
lds
fcomps
or
cmp
cmpl
jmp
mov
and
dec
mov
movsb
mov
outsb
test
cmp
pop
xchg
test
mov
hlt
fnstsw
pop
std
scas
push
les
test
sbb
arpl
cltd
cltd
push
arpl
fcompl
xchg
cltd
adc
xchg
les
clc
xchg
or
fnsave
addr16
jb
adc
lcall
popa
and
shrb
adc
mov
sar
push
rcll
divb
sbb
and
jb
pop
out
mov
pop
dec
fs
adc
push
mov
lret
das
sub
jb
mov
cmpsb
test
adc
sub
lcall
cmp
addl
aam
and
jns
mov
cmp
push
jp
adc
pop
in
push
imul
adc
jl
imul
push
inc
push
push
push
xchg
dec
and
add
mov
mov
xchg
xor
ja
popa
mov
mov
aaa
enter
aas
inc
mov
fcompl
xchg
je
scas
sub
clc
push
and
imul
pop
imul
ret
aas
jno
sbb
xor
cld
shrl
inc
roll
in
push
xchg
jno
aaa
dec
lock
scas
inc
mov
stos
nop
sti
push
stos
jno
sti
inc
or
pop
add
xchg
push
pop
mov
popa
sahf
push
aaa
and
dec
scas
or
insb
pop
lock
stos
jns
push
xchg
and
andl
ficomps
jg
aaa
jo
test
fbld
sbb
mov
inc
arpl
or
lea
adc
mov
out
mov
out
loopne
rcrb
jp
cmp
sbb
sarb
mov
push
fst
mov
cld
icebp
jp
sub
lcall
mov
push
sbb
mov
aas
in
ret
inc
sub
aad
cmpsb
iret
adc
adc
les
inc
jno
mov
test
dec
jnp
popa
data16
pop
push
cmp
les
add
iret
sbb
pop
outsb
loope
sti
xchg
loop
sub
jbe
pusha
stos
push
outsl
jb
fs
iret
repz
iret
test
inc
subl
inc
adc
cmp
adc
pusha
sbb
push
fwait
leave
adc
or
outsb
clc
mov
cmpsl
mov
mov
out
jge
jo
or
jmp
mov
cmp
orl
mov
inc
pop
enter
das
cmp
aas
inc
cmp
jmp
xchg
push
insl
mov
sbb
out
jl
adc
dec
stos
int3
add
loop
std
jbe
adcb
or
lret
mov
mov
pop
outsb
mov
xchg
subb
stc
stos
lods
push
fbld
movsb
or
jb
push
jb
lcall
cli
int3
sbb
ss
sub
sub
inc
je
imul
pop
xor
popf
sub
in
int
pop
mov
int
mov
lock
sbb
jl
mov
lahf
pop
xor
push
push
push
mov
jbe
mov
enter
scas
sub
lock
nop
mov
enter
cltd
cmpsl
mov
jp
cmp
jge
adcl
imul
ror
jg
sub
push
sbb
lahf
xchg
and
shll
popa
xchg
dec
sti
sub
lret
nop
xor
stc
sub
insb
push
loop
pop
adc
aam
xlat
nop
cmc
rorl
lcall
fisubl
rol
mov
pop
les
in
les
inc
add
jp
sub
stos
mov
paddb
xchg
adc
add
iret
cltd
push
sub
jecxz
or
insb
inc
cmp
insl
sahf
orb
repz
or
stos
jl
mov
xchg
call
dec
das
aad
jb
push
popa
mov
mov
mov
imul
jge
jmp
inc
lods
ja
lea
fmull
pop
jecxz
mov
rep
xchg
mov
push
push
movb
jp
das
test
out
mov
cmp
push
cmovb
xchg
sub
adc
jbe
insl
aad
mov
cwtl
inc
pop
sbb
inc
popf
dec
test
js
jbe
cwtl
add
mov
icebp
mov
jo
stos
lds
imul
push
xlat
push
int3
test
imul
xor
xchg
in
adc
sub
mov
loope
xor
leave
push
jne
mov
pushf
insl
and
imul
mov
mov
sbb
jns
xchg
sbbb
dec
fwait
daa
pop
pushf
cmpsl
xchg
add
enter
adc
xor
loop
mov
sbb
repnz
sub
aaa
xlat
mov
add
fidivrs
sub
adc
add
mov
test
test
lock
cwtl
mov
push
inc
jb
pop
filds
gs
out
loope
jmp
xlat
jmp
nop
xchg
xchg
hlt
fistps
pop
dec
cmpsb
hlt
out
fisttpll
arpl
push
pop
test
rcl
push
movsl
nop
shl
leave
jno
xor
ficomps
sub
pop
mov
les
mov
jo
das
pop
push
mov
repz
out
mov
sbb
xchg
add
shl
jbe
sti
mov
add
inc
mov
pop
lock
sahf
cmpsl
sbb
sahf
push
cmc
mov
in
jmp
fbld
xchg
lcall
pop
mov
je
or
inc
sbb
ret
sbb
or
aas
xor
lcall
inc
mov
inc
jmp
jb
cmpsb
sub
ja
inc
xchg
mov
mov
shl
lret
dec
and
push
or
aad
mov
dec
jmp
push
inc
add
dec
repnz
cld
divl
in
popa
sub
xor
cmc
sbb
test
fisubs
dec
jno
stc
loope
inc
cmp
test
push
in
push
ljmp
fucomp
and
dec
cltd
in
or
push
jmp
std
xchg
pop
xchg
or
xchg
jl
out
and
iret
movsl
cmpb
dec
cmp
jp
mov
lret
adc
fiadds
xor
in
jnp
fisubl
push
insb
out
mov
fiadds
ja
repz
loope
cmp
cld
outsb
cmc
int
stc
push
xor
xchg
fcoml
xor
mov
pusha
scas
mov
mov
das
mov
jae
jne
jo
adc
mov
mov
dec
loopne
cwtl
push
stos
sbb
cltd
fbld
daa
pop
ss
fisttps
jnp
xor
dec
xor
aaa
or
frstor
fstpl
and
arpl
out
fs
scas
jmp
stc
movsl
out
add
sub
dec
push
or
xor
mov
jle
xor
in
dec
xchg
cmp
pop
addl
adc
push
cmp
shrb
imul
lret
cltd
repz
xchg
pop
out
or
inc
and
pop
fnstsw
jne
adc
gs
jnp
xchg
lahf
mov
nop
fstps
loopne
icebp
movsl
adc
jl
mov
xchg
adc
mov
jle
and
or
mov
jl
xchg
jge
in
xchg
sbb
and
ljmp
shl
lret
cltd
dec
xor
int3
popf
mov
es
dec
cmp
dec
fnstsw
fs
std
lods
mov
call
push
mov
sti
fstpl
xchg
lret
mov
js
dec
mov
inc
inc
je
pshufw
mov
mov
xchg
sbbl
dec
mov
mov
dec
out
lret
clc
pusha
frstor
adc
mov
mov
pop
inc
mov
fidivl
adc
out
jae
or
xchg
sahf
imul
scas
xor
mov
arpl
jg
loope
gs
stc
dec
in
les
cmp
sub
dec
mov
mov
or
xor
enter
pushf
sbb
lret
loope
sarb
test
inc
mov
test
inc
sub
call
mov
lahf
loope
pop
inc
push
lea
pmaxsw
bound
sbb
movsb
xchg
adc
aaa
test
rcr
or
pop
sbb
stos
inc
xor
aaa
mov
jb
xor
lods
jno
and
and
clc
cmp
mov
push
mov
js
inc
xor
mov
jbe
cld
mov
xchg
jbe
fstpl
fwait
ss
jmp
xor
pop
sbb
inc
mov
mov
into
scas
jecxz
je
inc
fucomp
mov
lods
subl
int3
dec
sub
jge
subb
jo
sti
incb
or
mov
and
push
push
arpl
stc
adcb
push
mov
push
push
sti
movsb
cld
popf
mov
iret
xchg
inc
out
sti
cmp
xor
faddl
cmpsl
mov
xor
jno
or
pop
cmp
jns
jo
divb
or
rclb
mov
int
ficomps
js
inc
daa
mov
dec
dec
mov
cltd
data16
sbb
andb
addl
fs
jp
dec
and
scas
push
jle
lock
sarb
pop
cltd
scas
dec
scas
js
inc
hlt
sbb
pusha
inc
call
shrl
iret
call
adc
xchg
push
div
hlt
gs
pop
jb
cwtl
jns
inc
or
inc
std
jne
fistpl
in
orl
jp
data16
add
mov
data16
and
mov
sti
pop
cmp
jp
xor
xor
inc
cmp
repnz
push
push
loopne
pop
cmp
popf
mov
cltd
popa
imul
or
outsb
fstl
or
mov
fidivs
neg
inc
rcll
mull
mov
cs
dec
fmuls
jbe
or
pop
mov
jecxz
ja
pop
call
fxch
inc
icebp
and
shl
xor
clc
aad
clc
mov
xchg
in
dec
mov
mov
loope
call
stos
mov
out
loopne
push
jbe
pop
jo
inc
imull
mov
incl
ret
int
mov
fiadds
push
cmp
daa
cmpsb
dec
sahf
xor
test
fsub
sub
and
and
push
call
sub
and
xchg
pop
xchg
enter
add
fs
inc
mov
out
sbb
adc
movsb
data16
insb
mov
ja
lcall
pop
push
sub
dec
mov
pop
rolb
cmp
dec
insb
ret
jno
inc
mov
sub
es
fldt
mov
sarb
xchg
cltd
ja
test
mov
lret
jmp
jg
xor
add
mov
sub
adc
sbbl
adc
pushf
loop
push
cmpsl
iret
or
shll
push
xchg
fwait
inc
pop
pop
pop
aaa
inc
ds
adc
or
int3
push
outsl
inc
sub
int3
jb
inc
push
dec
test
and
xchg
lods
add
data16
ret
cmp
lahf
or
dec
push
push
stos
and
fisubrl
lock
clc
aas
mov
mov
out
aam
out
add
lcall
imul
mov
jle
mov
fcmovu
mov
lea
mov
pop
arpl
imul
pop
xor
sbb
hlt
inc
inc
pop
lcall
loopne,pn
mov
jo
adc
sub
inc
ss
ljmp
pop
in
ds
faddl
and
pop
addr16
fucom
jecxz
jmp
mov
loop
push
mov
outsb
shl
rcll
mov
xor
sub
sbb
sub
pop
adc
mov
and
mov
aam
xor
rolb
inc
cmc
jno
jl
jg
add
push
scas
cmp
popa
sahf
dec
arpl
add
ret
dec
bnd
and
push
xor
loop
dec
subl
cmp
and
pop
cmp
rcl
in
in
pop
sbb
or
pushf
andb
cmp
aad
pushf
rorb
sahf
gs
adc
mov
rcrl
jmp
lcall
cmp
gs
cmp
push
ljmp
inc
ret
sub
enter
pop
sub
sbb
sub
fnstsw
jge
jns
and
inc
xor
mov
addr16
lgs
cmp
jl
cld
movb
test
cmp
dec
dec
sti
sub
pop
pop
lahf
cmp
dec
js
int
fldenv
or
mov
and
in
pop
push
push
iret
add
test
sbb
pop
adc
mov
icebp
ret
lods
xor
inc
jg
dec
pop
mov
loope
xor
jae
mov
sbb
inc
mull
inc
mov
jle
xor
lret
add
in
mov
and
and
jae
mov
jnp
mov
push
mov
jno
aam
aaa
sbbl
in
push
popa
mov
fwait
mov
and
xchg
sbb
orb
adc
and
and
orl
fisubrs
sub
call
das
cmp
cwtl
cld
iret
inc
jbe
aad
or
lea
xor
add
pop
fildll
mov
lret
push
adc
mov
xchg
stos
outsb
mov
mov
pop
jle
xor
push
imul
mov
adc
cwtl
jp
mov
in
or
fsubs
xchg
sti
stc
unpckhps
xchg
ss
push
pop
push
call
hlt
mov
jmp
mov
cltd
dec
dec
cmp
or
out
fs
or
push
lret
lahf
mov
push
loope
dec
mov
lods
pop
push
xor
add
mov
cmp
mov
inc
std
pop
js
dec
sub
push
mov
adc
sub
ja
push
add
jns
mov
dec
sub
shl
mov
push
inc
jmp
and
sbb
ret
lcall
mov
xlat
shll
lret
adc
inc
dec
cmpsb
stc
sbb
jl
adc
adcb
xchg
fildl
mov
int3
inc
mov
scas
mov
push
pop
xchg
ds
shl
push
or
sub
cmp
insl
ret
sub
mov
inc
and
sub
adc
lock
movsb
sbb
sub
and
sbb
add
sub
sub
rolb
shrb
cwtl
cmpsl
aad
sbb
cwtl
fmul
mov
rcrl
imul
jecxz
cmpsl
jae
push
push
jmp
insl
out
mov
adc
jp
je
inc
dec
add
sahf
dec
test
mov
fimuls
lret
hlt
jg
in
jno
loop
lods
rcll
shll
stos
test
lret
stos
mov
inc
jae
adc
ds
xchg
mov
stos
mov
loop
or
in
popa
cmc
mov
out
into
cmp
push
and
lret
sti
add
mov
jbe
adc
dec
imul
mov
cmp
jo
push
xlat
jns
or
cltd
out
add
mov
aas
sub
in
loop
lock
arpl
in
into
xchg
test
mov
pushl
jae
jmp
mov
imul
xchg
add
scas
int
xchg
push
mov
and
add
cmpsb
jge
movsl
ss
xor
lret
hlt
inc
in
movsb
imul
mov
xchg
and
pushf
xorb
cltd
and
inc
outsb
lcall
mov
sbb
jne
es
and
ret
inc
stos
jne
xor
mov
je
pop
push
ret
xor
or
les
into
mov
jnp
mov
sbb
jg
fnstcw
stos
dec
push
or
push
insl
mov
pop
punpcklbw
xor
jbe
xchg
xor
aas
mov
cmp
or
jl
loop
call
dec
fsub
ret
or
frstor
scas
mov
xchg
jns
sbb
pushl
and
sbb
adc
in
xchg
iret
aad
out
cmp
cmpsb
adc
rclb
jbe
ret
mov
insb
add
sub
sbb
mov
rolb
lcall
shr
pusha
popa
mull
mov
ljmp
pop
and
inc
in
je
jge
mov
sbb
mov
mov
mov
mov
mov
pop
aas
or
jns
pop
int
pop
xor
out
loop
sub
pop
inc
cmp
mov
push
sahf
adc
lea
mov
or
xor
fcompl
imul
sub
sbb
mov
rorl
add
popa
sub
sbb
or
cld
mov
int3
xchg
mov
rorl
add
popa
sub
sbb
or
cld
movsl
in
mov
or
icebp
pushf
rorb
add
pusha
sub
sbb
or
mov
or
jno
inc
mov
jl
insb
fwait
testb
dec
jmp
repz
int3
int3
int3
int3
int3
push
mov
movsl
jo
pusha
test
popf
mov
sub
and
nop
jne
loopne
push
mov
movsl
jo
pusha
test
cmc
add
xor
and
shlb
loopne
nop
jne
gs
mov
movsl
jo
pusha
test
cmc
add
xor
and
rcrb
test
repz
leave
inc
and
and
jo
or
pop
xor
fisttpl
stos
rcrl
jmp
cli
inc
out
sbb
pop
out
mov
repz
jp
jbe
sbb
ror
test
fimull
adc
mov
add
adc
in
sub
inc
js
xor
xchg
jg
outsb
enter
aad
clc
xchg
je
movsl
xor
addr16
test
jmp
imul
dec
adc
pop
push
rcrb
lcall
lds
adc
lock
shrb
jge
imul
add
insb
and
jl
orb
xchg
inc
test
je
shll
xchg
mov
movsl
jo
pusha
test
cmc
add
xor
and
shlb
loopne
nop
jne
gs
mov
movsl
ss
es
jne
outsl
in
fwait
movsb
xchg
mov
jge
inc
push
adc
push
aad
rolb
mov
cmpsl
adc
dec
xorl
cmpsl
push
lea
addr16
in
fnstenv
lret
cld
inc
divb
std
add
in
aad
shlb
jne
gs
mov
movsl
jo
pusha
test
cmc
add
xor
and
shlb
loopne
nop
jne
gs
mov
in
in
daa
pop
ret
add
cs
xchg
aaa
cli
xorb
xor
stos
jo
add
frstor
mov
mov
jmp
add
imul
ret
mov
pop
cmp
dec
jo
pushf
mov
in
lods
pushl
mov
jb
int
sbb
adc
xor
insb
push
mov
xor
xchg
imul
sbb
ss
das
shrb
xor
add
sbb
push
data16
gs
pop
rclb
imul
outsl
xor
stos
pop
out
stc
std
pop
push
insl
push
imul
xchg
xor
hlt
jmp
data16
sbb
sbb
hlt
cmpsl
in
les
add
push
xor
mov
jo
jecxz
xchg
nop
mov
es
stc
and
in
nop
dec
inc
mov
cmpsb
cmp
mov
jnp
jo
ds
push
inc
dec
outsb
add
mov
imul
pushf
xchg
je
icebp
xchg
popf
mov
dec
test
nop
dec
push
cld
jne
pop
inc
subb
cwtl
mov
pusha
outsl
dec
nop
mov
cmc
cmp
and
flds
mov
adc
cli
test
xor
call
mov
adc
loopne
movsl
lahf
cmp
jecxz
mov
or
cltd
jmp
pop
ret
sub
andl
decl
rclb
pop
xchg
add
arpl
fsave
jle
out
test
idivl
in
aaa
xlat
push
out
pop
js
add
rcrl
out
test
cmpsb
sub
mov
pop
adc
jns
je
pop
aas
cli
adc
in
fistl
jne
cmp
sbb
push
push
fstp
push
rcrl
orb
in
inc
mov
xor
or
ds
add
std
add
sbb
cwtl
loop
xor
aam
dec
cmp
pop
sub
movsl
rclb
xchg
lds
popa
add
pop
outsb
imul
inc
fwait
and
movsl
dec
or
stos
jge
test
inc
sbb
add
dec
push
test
push
mov
hlt
adc
fildll
push
mov
shlb
jle
sub
imul
in
repnz
divl
add
push
jb
cmp
out
jnp
push
push
inc
lods
insl
sbb
xor
mov
test
in
push
dec
or
xor
repz
daa
outsb
dec
in
mov
lahf
les
xchg
jle
adc
cmp
je
adc
jge
in
pop
cmp
fsubs
dec
inc
push
out
lea
push
dec
lahf
xchg
dec
in
loop
sub
stos
xchg
jmp
adc
xor
sub
mov
popf
jg
adc
repnz
adc
xchg
shlb
aad
push
inc
xchg
dec
test
mov
or
mov
cli
mov
xor
xor
int3
xchg
test
stos
in
cwtl
cmp
mov
fcomps
cs
ljmp
mov
fcoml
stos
enter
fsubp
add
dec
jbe
xorb
stos
add
aas
inc
sub
cwtl
roll
mov
das
ss
fmull
inc
std
or
mov
cmp
hlt
out
frstor
imul
pop
fwait
mov
or
arpl
jp
sbb
es
out
ljmp
cli
and
xor
mov
xor
add
sti
jnp
mov
outsl
arpl
hlt
mulb
mov
nop
femms
jecxz
loope
ja
rorl
sti
inc
xor
rol
inc
addr16
add
mov
add
xchg
cltd
adc
popw
insb
lods
pop
idivl
shlb
mov
sub
inc
stos
stos
jge
stos
xor
jne
lahf
in
cs
lock
mov
push
inc
jo
sahf
mov
add
mov
sub
inc
jmp
dec
jbe
fs
mov
dec
js
or
mov
arpl
roll
and
out
data16
adc
clc
stos
or
pop
in
sbb
insl
ret
mov
add
mov
pop
xor
jb
add
adc
js
stos
lcall
xlat
or
pusha
cmp
mov
data16
push
aad
leave
xlat
and
scas
jl
push
dec
cmp
pusha
in
xchg
dec
jge
pop
pop
push
lea
test
sbb
dec
xchg
mov
adc
pop
sub
xchg
in
test
xchg
pop
lods
xchg
cld
mov
adc
inc
mov
or
and
dec
test
and
test
stos
adc
js
adc
rdmsr
std
cltd
scas
or
lret
pop
push
push
rolb
cmp
jo,pt
cmp
cwtl
cmp
test
cltd
fwait
ljmp
addl
cmp
pop
push
das
fadds
ror
mov
addl
mov
pop
stos
pop
adc
in
push
in
ljmp
jnp
inc
add
cwtl
test
lods
in
or
jle
mov
mov
in
lods
jg
pushf
mov
outsb
mov
jle
negb
rcrl
subl
jmp
dec
pop
mov
in
test
std
cmpsb
gs
sub
in
push
xchg
icebp
or
ror
or
push
xchg
mov
xor
stc
fbstp
jg
adc
inc
add
int3
imul
add
mov
fidivl
xor
push
in
mov
rolb
xlat
shl
pop
out
mov
stos
pop
push
clc
dec
int
jne
fidivs
jno
in
imul
add
mov
js
cmpb
cs
ds
jnp
inc
jl
scas
and
in
aad
sub
sarb
shrl
add
adc
lods
mov
mov
shrl
mov
jns
rcr
test
dec
mov
test
jno
pop
jecxz
xchg
jbe
adc
xor
push
repnz
lcall
popa
insb
jae
jnp
mov
inc
jb
stos
pop
inc
inc
xchg
test
es
ret
or
xchg
pop
cmp
movsb
xadd
shlb
ret
filds
scas
sub
mov
rcr
jmp
pushf
arpl
lds
scas
jmp
test
push
sub
jle
push
call
outsb
sti
xor
fiaddl
mov
pop
outsl
loopne
xchg
or
dec
inc
rorb
inc
popa
js
rolb
inc
bound
mov
ficomps
mov
push
dec
dec
notb
sbb
jb
lahf
adc
push
xlat
es
inc
xchg
cwtl
ret
jle
lods
sbb
push
adc
in
dec
bound
loopne
mov
and
je
cld
push
sbb
fcoms
int3
sub
lods
std
or
mov
cmpsb
shlb
jle
sbb
in
imul
lock
scas
sbb
xor
lds
cmpsl
pop
mov
jne
xchg
aaa
inc
push
sbb
lock
xchg
and
cmp
xchg
shll
sub
push
cmp
mov
test
insl
pop
push
fdivr
inc
je
fdivr
in
fldcw
pop
push
arpl
mov
cmp
outsl
inc
push
sbb
pop
cmpl
mov
ss
stos
fists
jns
adc
cwtl
clc
dec
push
push
inc
xchg
xchg
cmp
in
nop
xor
test
mov
inc
mov
mov
std
and
outsb
adc
fmull
xchg
cs
push
jno
in
push
xchg
call
xchg
jbe
mov
pop
ljmp
test
test
lahf
and
push
xchg
mov
mov
dec
ljmp
fwait
mov
scas
mov
lcall
inc
jmp
orb
cli
pop
cmp
fcomp
scas
mov
stos
xchg
bnd
popf
mov
dec
pop
imul
and
lods
pop
loope
pop
pop
sub
test
test
pop
out
shrl
rclb
ljmp
icebp
test
cltd
jne
push
push
outsb
dec
std
ja
mov
cmp
xor
es
leave
xchg
jecxz
xor
mov
test
pop
xor
adc
cltd
jnp
pop
fimuls
dec
iret
lahf
out
imul
jp
aaa
cld
ret
and
push
roll
pop
sub
cmp
test
int
repz
nop
push
xor
add
cmpl
fwait
jg
fists
scas
xlat
pushf
fs
sub
dec
push
xor
out
lret
sub
inc
test
xchg
mov
inc
inc
clc
jno
cmc
ss
sahf
pop
imul
popf
aaa
movb
test
mov
out
and
and
out
mov
in
in
jge
in
pop
mov
dec
pop
pop
pop
cs
adcb
dec
cmp
rcrl
movsb
sti
mov
in
xchg
mov
xchg
dec
aas
cmpsb
pushf
sbb
or
mov
test
lea
sbbl
std
push
pop
in
pusha
mov
icebp
xor
or
cwtl
xchg
jo
lret
cmpb
call
adc
jp
xor
out
stos
cmp
stc
enter
lock
mov
stc
aad
push
xchg
pusha
sbb
enter
popf
repnz
inc
notb
dec
xchg
imul
sbb
jns
pop
vsubss
repz
insl
scas
pop
dec
push
pminsw
ret
xor
dec
xchg
out
test
negl
mov
sub
jle
fsubr
add
negl
push
fadds
pop
fldcw
js
mov
add
dec
xlat
arpl
repnz
mov
and
fldenv
jns
push
adc
sub
gs
or
lea
sub
mov
cmp
push
mov
or
push
ret
cmpsl
xor
fdivr
ss
mov
jb
imul
hlt
in
ss
insl
jns
xor
mov
mov
add
jne
bound
xor
cmc
cmpsl
add
sub
xor
and
lcall
xchg
jl
lods
jp
out
gs
pop
gs
shrl
lods
ret
pop
fcoms
cmp
subl
movsb
cs
jno
cvttps2pi
mov
in
mov
pushf
mov
mov
arpl
movsb
cmp
pop
xchg
or
jae
mov
cs
mov
sbb
mov
pop
cmp
aam
jge
pop
or
pop
hlt
aad
sub
dec
mov
dec
cmp
jns
in
ss
push
xor
lods
iret
call
dec
jecxz
loopne
imul
imul
jae
frstor
sub
dec
or
stos
adc
je
cmpb
stos
push
sbb
mov
adc
pop
clc
xor
add
pop
pop
cld
scas
int3
popa
xor
jl
aad
loop
scas
sbb
cltd
dec
mov
sbb
pop
mov
mov
out
pop
cmc
inc
mov
into
negl
sub
out
arpl
cwtl
pop
and
push
pushl
lods
jmp
lea
dec
pop
and
bound
dec
jae
ficoml
add
loopne
stc
scas
push
or
test
aaa
sbbb
sbb
fistpl
mov
cmp
xchg
mov
rol
rcrl
add
pushf
cmpb
pop
call
gs
daa
faddl
movsb
lret
sti
and
iret
mov
mov
mov
jno
sbb
fdivrl
sbb
inc
dec
cs
movsl
mov
xchg
fwait
arpl
out
mov
pop
gs
ret
mov
mov
cltd
push
scas
lods
mov
mov
inc
testb
push
sbb
movsb
inc
test
nop
sbb
cmp
test
mov
mov
mov
mov
outsb
insb
into
repz
out
sbb
xchg
push
jl
icebp
adc
in
fimuls
cmp
mov
push
xchg
insb
ficoms
push
pop
pushf
into
repnz
hlt
mov
add
pop
fiaddl
jb
imul
popf
xchg
or
pop
sbb
or
dec
fs
insl
jg
adc
int
add
inc
insl
mov
pop
jns
push
mov
daa
sbb
inc
sbb
xchg
xor
sub
mov
push
andl
lea
cmp
shll
xchg
sub
xchg
movsl
jg
leave
cwtl
mov
fwait
mov
cmc
lret
lretw
inc
cmp
rcll
mov
cmp
jne
test
push
and
push
inc
jg
test
test
jg
mov
mov
imul
sbb
mov
loopne
mov
fimuls
test
scas
jge
inc
inc
and
inc
es
push
fimull
call
pushf
scas
dec
xor
jle
dec
lods
dec
aad
test
jle
jne
shrl
sti
adc
mov
cmp
xor
xchg
fdivrp
shrl
jle
fisttps
push
mov
hlt
iret
aam
pop
aam
pop
les
into
mov
lea
push
cmp
dec
add
out
aad
pop
in
push
dec
pop
js
imul
xor
and
adcb
jg
mov
mov
mov
xchg
leave
lods
pop
hlt
pusha
lcall
cmpsl
xchg
xchg
pop
loop
push
cmp
sbb
cmp
out
sarb
push
push
es
shl
ljmp
jecxz
pushl
mov
mov
add
mov
sbb
mov
insl
adc
in
aad
jb
in
sbb
sbb
pop
aaa
or
sbb
vcmpsd
les
divl
insb
xor
dec
daa
inc
das
flds
mov
xchg
cmpsb
mov
mov
push
xchg
idiv
jae
mov
add
mov
ror
dec
xor
push
fucompp
push
popf
fildll
xor
and
sub
repz
out
add
and
push
xchg
fisttpl
mov
jne
sahf
push
loop
mov
inc
push
cmpsb
stos
jg
loope
xchg
cmp
and
mov
mov
adc
adc
add
inc
pop
push
push
cs
cs
xchg
inc
out
mov
inc
adc
sub
mov
inc
je
scas
test
mov
mov
push
pop
in
xchg
hlt
mov
mov
hlt
sub
movsb
je
pusha
lds
jnp
mov
in
lods
out
pop
gs
jo
dec
dec
aaa
test
mov
dec
jmp
je
jo
push
scas
aam
test
jo
sarb
pop
das
dec
sub
pop
aas
aaa
lods
aaa
lods
in
mov
mov
or
pop
dec
lret
outsl
xchg
testb
or
jmp
mov
fistpl
dec
push
dec
pop
rcr
or
ds
in
dec
cmc
cld
leave
fsubl
sub
in
and
inc
dec
js
shlb
add
outsl
push
sbb
cmc
cmpsb
inc
testl
mov
repnz
ret
mov
in
out
mov
jg
mov
pop
sti
jbe
push
arpl
aaa
data16
push
mov
fstpl
or
mov
dec
data16
insb
pop
inc
std
fisttpl
add
jg
pusha
scas
loop
mov
lods
fwait
lahf
sub
out
fsubr
dec
jge
shlb
add
lods
in
mov
dec
xchg
addr16
in
mov
mov
in
outsl
in
into
adc
pop
cmpsl
pop
icebp
subb
xchg
and
int3
cmpsb
subl
adc
or
in
xchg
push
xlat
imul
lock
sub
fnstsw
xchg
fsubrs
add
xchg
call
dec
in
mov
and
push
adc
daa
dec
idivl
faddl
pop
testb
out
mov
sbb
rcrb
xlat
xchg
adc
or
les
push
lock
xor
cmp
lret
inc
mov
and
shrl
adc
sub
push
push
pop
mov
popf
and
out
and
jmp
mov
mov
bnd
dec
jmp
outsb
sbb
xor
rorb
mov
add
test
or
cli
xor
lock
jo
stos
inc
jo
andl
cltd
jns
jle
aam
subl
dec
movsl
bound
adc
in
mov
les
mov
cwtl
sti
xor
push
cmc
jns
jne
inc
out
xor
cmp
sub
push
scas
inc
out
mov
rorl
in
cli
mov
ja
sub
pop
in
in
adc
in
adc
cli
in
add
fstps
mov
and
sub
cli
sbb
pop
jle
push
add
andl
shlb
in
jecxz
cmp
and
fiaddl
movb
mull
in
lods
fwait
imul
les
imul
movsb
jae
lret
xor
int3
add
fiadds
pop
imul
cmp
adc
fisttpll
mov
fiadds
inc
xchg
mov
push
outsl
loop
jl
pop
leave
rcrl
mov
dec
icebp
enter
lret
stc
mov
dec
xor
jmp
rorl
dec
pop
mov
jl
xor
mov
insl
je
es
and
outsb
dec
lahf
pop
push
test
aam
mov
inc
ds
popa
in
pop
cld
mov
icebp
jp
xchg
scas
push
mov
dec
data16
mov
sub
xlat
and
mov
xor
test
mov
data16
rorb
inc
je
xor
xchg
hlt
or
std
sbb
mov
jecxz
dec
xor
fsts
add
cmc
fistps
int3
cmp
cli
call
sbbb
cwtl
mov
call
sbb
add
mov
fwait
mov
sbb
lcall
lods
add
pop
push
sbb
popf
les
enter
dec
push
jmp
xchg
in
insl
shll
pop
mov
cmp
loope
jg
and
jecxz
cmp
daa
inc
into
int3
psubd
ror
jmp
clc
jle
xchg
pop
mov
movsl
out
fs
insl
shrb
scas
or
jb
insb
xor
nop
aam
add
jae
inc
loope
cmp
cltd
lret
rclb
add
out
sub
adc
hlt
clc
lret
sbb
mov
bound
lahf
pop
ja
iret
lret
repz
sub
mov
shll
sub
rcr
testb
xchg
mov
insb
loope
div
outsb
fsubrp
sbb
negl
dec
inc
roll
into
sub
insb
add
out
rorl
add
js
add
rcrl
jo
cli
or
mov
pop
outsb
fwait
push
cmp
adc
cmpsb
dec
js
aas
add
sbb
sbb
mov
rcr
out
int
mov
pop
push
outsb
cld
cmc
jg
and
sarb
mov
jge
xor
cmp
and
mov
insl
or
mov
mov
cmpsl
mov
std
arpl
pop
mov
lret
aas
sub
lahf
push
push
test
push
ss
outsb
pop
push
into
pop
sub
cwtl
cmp
rcr
dec
fs
mov
jae
inc
xor
and
sbb
pop
ret
mov
jle
jb
in
sbb
ljmp
mov
shr
pop
jns
std
xor
pop
mov
aad
mov
jns
int3
jecxz
fcoml
mov
addb
lds
mov
std
inc
or
jl
stc
push
mov
in
fisttpl
adc
test
jbe
bound
dec
loope
jl
arpl
ljmp
push
movsl
dec
mov
sbb
push
rorb
and
enter
loopne
call
shll
pusha
mov
add
ja
aaa
jp
jae
jge
sub
and
adc
jle
cltd
loop
hlt
mov
lods
rcll
lret
imul
cld
push
mov
mov
test
cmp
mov
rol
xchg
push
inc
repnz
xor
sahf
daa
mov
xchg
or
cld
mov
mov
hlt
test
jge
mov
mov
cmp
pop
fldt
push
movsl
xor
dec
xchg
inc
xor
negb
mov
lods
lcall
and
cmp
push
push
je
cmpsl
mov
orb
inc
jnp
pop
push
sbb
pop
push
outsl
cmp
add
lods
lods
xor
xchg
dec
push
nop
adc
xor
dec
add
pop
dec
sarl
loopne
inc
xchg
inc
fmull
fdivrs
sbb
andb
hlt
arpl
inc
jns
and
dec
mov
sub
inc
mov
rcll
cmp
lds
push
pop
pop
push
sub
xchg
dec
fldenv
push
sub
xor
je
adc
inc
insb
outsl
popa
fcoml
scas
hlt
insb
push
inc
jge
cmp
mov
sub
adc
xchg
notb
sbb
imul
fistl
inc
loop
std
cmpl
mov
int
xor
pushf
adc
fmuls
cmp
inc
movsl
jae
mov
jns
fisttpl
int3
and
lods
mov
cs
sbb
lock
dec
jo
add
shl
pop
mov
movsb
data16
divl
bound
imul
add
cmp
iret
push
mov
cmp
aaa
cmpsl
mov
mov
inc
out
adc
xchg
mov
nop
or
insb
mov
pop
mov
sub
fcoml
cmp
aas
leave
js
mov
js
and
repnz
mov
inc
in
add
inc
out
sub
add
int3
sbbb
and
clc
mov
cmpsb
xchg
mov
push
shlb
xchg
icebp
leave
sti
jg
rcrl
test
loop
test
xor
push
rol
fs
fdivp
dec
jbe
lds
je
bound
jae
pushl
jb
idivb
scas
adcb
das
repz
jno
add
andb
insl
push
dec
dec
inc
or
aaa
flds
std
add
stos
add
mov
xor
mov
cmp
scas
push
es
mov
dec
ret
jmp
add
imul
sub
popa
das
sarl
shll
pop
mov
daa
cmp
aaa
dec
xchg
xorl
sti
cmp
dec
aad
cmp
mov
fisttps
jmp
cwtl
inc
pop
mov
leave
xor
dec
jnp
pop
loopne
ljmp
add
sarl
les
test
push
add
jb
xchg
dec
aas
cmpsl
cld
popf
push
jl
shll
hlt
mov
aad
in
mov
or
cmp
dec
fistpll
xor
xor
scas
mov
mov
test
cmc
add
xor
and
shlb
loopne
nop
jne
gs
mov
movsl
jo
pusha
test
cmc
add
xor
and
shlb
loopne
nop
jne
gs
mov
and
adc
add
aad
shlb
jne
gs
mov
movsl
jo
pusha
test
cmc
add
mov
mov
pop
adc
or
int3
int3
int3
int3
int3
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
cmp
mov
xchg
push
iret
sub
sub
stos
ss
push
mov
sti
jmpw
inc
lret
push
cmp
or
pop
dec
mov
fwait
push
test
sti
or
jbe
push
lret
push
and
mov
adc
sub
mov
pop
repz
xor
push
cmpsb
inc
fcomps
repz
sub
imul
mov
cmp
rcll
lcall
mov
fdivl
or
xchg
xchg
add
push
stos
addr16
mov
inc
xor
les
dec
mov
shlb
pop
in
stos
push
mov
mov
fwait
sti
inc
pop
jbe
xchg
inc
cmp
cmpsb
rclb
push
movsb
cmp
stos
data16
xor
addr16
push
scas
lret
add
xchg
aad
adc
mov
es
ja
push
fldt
pop
xchg
hlt
lods
test
inc
sub
pop
out
fisttpl
mov
inc
lret
shl
cmpsb
xor
add
pushf
insb
out
negb
push
push
mov
push
xchg
pop
jecxz
repz
inc
lret
cmp
dec
mov
lds
or
dec
mov
pusha
jae
jb
jg
or
aaa
push
jecxz
divl
mov
mov
pop
test
mov
fwait
arpl
jno
cmpb
daa
scas
cmp
ja
arpl
xor
dec
mov
push
mov
sti
data16
fildl
push
cmp
or
pop
dec
mov
push
mov
sti
data16
fildl
push
cmp
js
pop
jg
in
xor
test
mov
mov
inc
or
ljmp
xchg
pop
xchg
push
add
sbb
and
add
sub
mov
repz
sub
push
fwait
pusha
xchg
rclb
dec
daa
cld
ficoml
add
mov
inc
int3
xchg
add
sub
mov
jle
dec
add
cmp
dec
cmp
jecxz
jp
cmp
leave
jnp
and
and
jecxz
and
test
sbb
push
inc
ds
mov
enter
push
adc
mov
jmp
xchg
fimull
mov
xor
pop
cmp
data16
insl
loop
cmp
push
add
lods
mov
xchg
push
jmp
sarl
popf
leave
shll
mov
mov
popf
lcall
pop
fcomp
scas
and
shlb
sbb
jb
jl
mov
or
push
aaa
js
ficoml
pop
sub
imul
clc
aam
mov
imul
std
imul
push
mov
in
rclb
iret
and
loop
cltd
add
pop
xchg
push
mov
inc
sub
stos
or
lret
nop
sti
roll
subb
and
inc
daa
aaa
and
xchg
xchg
addb
idivl
xor
cmpsb
push
adc
push
mov
fisttpl
ds
mov
push
call
inc
test
sbb
cmpsl
push
dec
sbb
sti
and
mov
idivb
mov
inc
jne
dec
jne
add
mov
mov
pop
cltd
or
and
out
cs
in
js
cld
pop
outsl
xor
push
jb
divl
or
outsl
gs
ds
dec
leave
in
adc
jmp
imulb
rcrl
jns
pop
les
mov
fstpt
lods
arpl
cmp
dec
rorl
cli
outsw
leave
lahf
fistpl
loopne
imul
mov
enter
push
mov
adc
xchg
les
cmp
sbb
add
insl
sbb
add
scas
mov
enter
int
adc
lret
mov
repz
aas
adc
fwait
ret
outsl
inc
pop
xchg
shlb
daa
addr16
mov
mov
icebp
or
mov
cmc
movsl
outsb
mov
in
mov
pinsrw
pop
lods
jp
dec
push
dec
popf
lea
xchg
push
adc
iret
aad
sub
mov
movsl
mov
cld
sub
insb
shlb
fsubl
scas
mov
cs
lods
stc
icebp
ljmp
add
fidivs
ja
inc
inc
inc
movsb
pop
in
xor
or
cmp
ss
cs
adc
iret
loope
adc
jo
sbb
arpl
push
rcrl
push
lds
lock
repnz
fstp
stos
adc
jo
mov
bound
or
sub
pop
mov
rclb
xchg
pop
dec
loopne
sbb
pop
adc
jae
out
shl
sbb
mov
jl
daa
hlt
cli
adc
in
inc
repnz
sbb
lahf
push
cli
cltd
dec
mov
lods
mov
gs
xchg
cmp
rcl
add
pop
ret
mov
mov
inc
mov
int3
cmpsb
out
cmp
and
mov
mov
adc
mov
mov
mov
in
push
arpl
inc
ret
repz
les
xor
or
scas
fstps
idiv
nop
test
mov
push
call
adc
cmp
fnstenv
fisubs
xor
jg
jo
out
lahf
mov
xchg
cmpl
mov
imul
out
adc
ljmp
out
cmp
aam
sbb
pop
and
ljmp
xor
stos
pop
xchg
cmp
jae
push
lahf
cmpsb
fs
pop
sbb
cld
aam
jnp
jbe
or
leave
sub
sbb
test
xchg
outsl
inc
jae
xchg
xchg
cli
gs
jg
xchg
xchg
adc
lds
jb
icebp
popa
stos
sbb
xor
jno
or
call
cltd
cmp
xor
clc
imul
or
mov
ss
bound
bound
xchg
xlat
loop
test
enter
fdiv
add
and
outsl
xor
xor
jge
inc
out
mov
xlat
adc
or
xor
xor
imul
decb
pop
push
pop
pop
enter
stos
sahf
inc
and
popa
sub
aas
rcr
insl
adc
or
push
cmp
clc
cmpsb
cli
js
or
call
jb
movsl
adc
add
lds
mov
or
or
adc
xchg
or
das
lea
pop
jb
push
dec
xorl
mov
rcl
inc
arpl
mov
sahf
cmp
mov
pusha
adc
add
addr16
rcl
es
inc
jne
jle
dec
dec
push
lcall
js
mov
es
xchg
inc
mov
dec
jp
sub
ljmp
into
pop
fs
mov
cmp
jl
mov
mov
out
dec
in
into
pop
test
mov
rcrb
loopne
fwait
fs
cmp
dec
mov
mov
xor
int
cs
xchg
and
mov
insl
fmull
add
or
pusha
clc
lock
insl
push
iret
imul
xor
popl
or
fimull
cmp
pop
fs
cmp
dec
scas
jl
mov
xchg
pop
sbb
xchg
xchg
cmpb
jne
xchg
xchg
fprem1
ret
rcrb
push
sarl
mov
das
in
sbb
out
mov
mov
into
push
outsb
and
fbld
idiv
push
iret
out
dec
stos
mov
add
mov
mov
nop
xor
lock
xchg
or
sbb
jb
push
into
jmp
iret
in
loop
inc
sub
sbb
push
mov
cs
sub
sahf
mov
in
xor
arpl
adc
mov
incl
cmp
test
int3
mov
gs
xor
push
fiaddl
into
push
pop
jne
and
das
jecxz
loop
pop
jle
ja
outsb
dec
stos
imul
or
incl
xchg
mov
push
dec
sub
mov
mov
push
mov
lahf
test
out
jno
pop
inc
pop
push
jge
clc
nop
pop
aad
fldt
repnz
jl
stc
test
xor
js
mov
mov
jno
sbb
sub
push
cld
sti
bound
inc
push
push
mov
xchg
cmp
mov
out
mov
fcoms
xchg
aas
and
adc
mov
ljmp
icebp
mov
or
enter
ss
cmpsl
mov
scas
mov
cmp
and
out
call
jns
and
cs
mov
ss
stos
cmpsb
addl
int
nop
push
rorl
shll
jns
icebp
int
aad
imul
pop
push
dec
pop
xchg
pop
into
cmp
mov
mov
leave
xlat
pop
cmp
jp
inc
jae
imul
add
push
jmp
dec
sbb
addb
out
push
mov
rorb
movsl
push
jl
out
incb
lock
pushf
sub
pop
jbe
xor
xchg
data16
es
ljmp
jg
pop
mov
das
cmpsl
test
add
push
and
ljmp
rcll
sbb
pop
clc
cmpsl
addr16
push
repnz
lock
mov
push
sbb
xchg
ja
stos
jmp
dec
fucomp
jnp
push
sub
jle
fnsave
es
rcrb
sbb
cltd
movsl
adcb
or
or
push
pop
jmp
out
jnp
push
jp
adc
shlb
nop
loop
pop
pop
fcoms
jnp
flds
test
iret
lds
pop
outsb
jb
je
jnp
rcrl
or
and
test
lods
fiaddl
test
mov
inc
xchg
int3
inc
and
ja
dec
insb
nop
push
testb
jne
popf
int
xor
aaa
mov
lcall
sbb
lods
lods
xchg
jae
leave
stc
cmp
mov
popf
popa
sub
mov
and
dec
mov
clc
push
mov
mov
mov
xchg
aad
lcall
mov
sub
je
fadds
jnp
test
push
jae
jmp
bound
cld
xchg
xchg
dec
bound
lret
xchg
repnz
add
xchg
pop
jns
cmpsl
fnsave
inc
pop
pop
gs
inc
cli
sbb
cmp
xor
dec
push
xlat
mov
mov
cs
pusha
cs
ror
popf
sbb
and
sti
cmp
mov
push
lock
stos
add
mov
test
cmp
popa
negl
movsb
popa
sub
out
xchg
or
int3
daa
fxch
imul
pop
push
iret
jne
rolb
mov
xor
mov
push
pop
int3
mov
es
sub
lea
call
out
out
push
test
outsl
fcompl
lret
out
jo
test
mov
std
adc
adc
ja
testb
dec
or
sti
mov
push
xchg
mov
arpl
gs
sarb
shlb
pop
xchg
dec
pop
add
jecxz
lret
int
imul
adc
mov
fbstp
jecxz
imul
lds
dec
sub
mov
int
inc
cmp
adc
data16
jecxz
mov
clc
jnp
bound
insb
sarl
hlt
mov
pushf
push
inc
jb
iret
fldl
gs
mov
leave
fisubl
aaa
or
pop
pusha
notb
dec
push
js
xchg
pusha
sbb
xchg
sub
mov
fidivs
out
push
scas
jno
in
jg
and
xchg
cmpsl
ja
mov
pop
cmp
push
and
lds
fistpll
pop
jmp
rorb
add
cmp
shll
xchg
push
jns
cli
cmp
xchg
rorl
sub
push
xor
repz
mov
stos
das
into
sar
orl
test
mov
mov
xor
sbb
scas
xor
jmp
lret
jns
les
xor
xchg
mov
es
imul
mov
and
push
push
int3
sbb
mov
orb
sub
test
or
push
das
sub
lock
jg
push
ret
mov
ds
addr16
push
sbb
xlat
push
ficoml
jecxz
dec
push
pop
int3
out
xchg
mull
insb
addr16
or
xor
mov
add
repnz
adcb
ror
dec
fisttpll
out
dec
fwait
dec
or
iret
xchg
xor
std
cli
dec
adc
outsb
lcall
insb
repz
sub
call
data16
xchg
leave
hlt
dec
xchg
or
xchg
and
push
roll
icebp
divl
mov
xor
add
outsb
or
cmp
pop
es
sbbb
repnz
mov
xchg
decl
rcl
pop
jge
std
mov
cli
jp
push
shrl
mov
or
ret
mov
inc
push
add
clc
subl
inc
push
test
xor
add
outsl
test
cli
bswap
jle
inc
push
aam
and
cwtl
sub
or
mov
mov
decb
inc
insl
mov
imul
inc
mov
cmpsb
insl
jecxz
sbb
bound
jb
rorb
ret
and
sti
push
cltd
sbb
mov
loope
cwtl
in
inc
sub
call
lods
adc
aas
inc
mov
dec
out
jmp
mov
nop
push
sbb
dec
or
sbb
jns
fcmove
imul
dec
mov
inc
loope
mov
shrl
js
add
pop
fwait
repnz
lods
popf
cmp
jecxz
mov
dec
setno
pop
mov
aad
out
sbb
sub
lret
lcall
jo
scas
mov
fwait
push
push
fcoms
pop
test
jne
fs
xchg
add
or
add
push
mov
xchg
xor
stos
pop
xchg
xor
loop
lods
sbb
adc
sahf
loopne
jnp
movsl
xor
mov
loop
mov
cli
int
cmpsb
dec
xlat
pushl
mov
movsl
or
jo
mov
pop
sub
push
pop
ja
aam
mov
xor
pop
push
xor
aas
sbb
ljmp
mov
adc
test
fwait
pop
roll
aaa
or
stos
clc
ret
and
sub
adc
mov
jno
add
lods
push
enter
sub
push
pop
dec
test
inc
popf
and
notb
stos
bound
xchg
and
push
movsl
dec
adc
and
pop
shrl
iret
shll
pop
or
cs
push
xchg
popf
popf
and
and
inc
mov
sti
dec
push
adc
fdiv
inc
push
rcl
push
jecxz
fcompl
into
sahf
icebp
cmp
std
or
fldlg2
cmp
mov
mov
out
cmc
cmp
leave
mov
mov
loopne
mov
jmp
bound
and
push
sbb
test
enter
sub
test
test
jne
jno
notl
ja
stc
cmp
jp
xor
adc
mov
cmp
lea
xchg
shlb
and
xchg
daa
push
gs
mull
xchg
bound
adc
negb
bound
push
aad
sarb
pop
enter
add
push
sub
pop
xchg
pop
jle
adc
mov
lods
movsb
fisubl
cltd
shl
or
mov
or
add
push
cmpsl
mov
popf
ret
mov
pop
jno
lret
mov
jae
aaa
test
xchg
xchg
fwait
inc
ja
andb
xor
push
call
aaa
int
dec
mov
dec
aaa
xchg
cmc
jecxz
aam
fcoms
lret
mov
and
ljmp
insb
int3
mov
and
add
mov
adc
rcrb
out
xor
popf
clc
jmp
mov
outsl
inc
gs
ja
mov
push
sbb
roll
insl
sub
repz
add
cwtl
push
lods
jns
or
mov
bound
in
mov
cld
addr16
mov
daa
push
mov
jge
sarl
xorl
loope
sahf
aaa
shll
std
or
leave
loope
je
mov
sub
add
cmp
cld
jp
rcrl
stc
xchg
lock
sti
pop
mov
mov
pop
out
inc
sub
fcomi
sti
push
mov
add
sbb
lds
fidivrl
daa
add
xlat
sti
xchg
add
cs
leave
insb
pop
xchg
in
dec
sar
or
aas
sub
xor
in
lock
mov
add
push
inc
jo
in
pop
mov
push
mov
mov
or
inc
add
xchg
jmp
outsb
jne
test
imulb
cltd
jmp
jecxz
sub
fidivrs
hlt
hlt
adc
pushf
pop
sbb
out
gs
xchg
pop
cltd
mov
jbe
push
arpl
ljmp
lock
inc
rcll
mov
cld
fsubr
es
sub
xchg
es
hlt
jp
and
push
and
test
scas
xchg
int
sbb
mov
pop
sbbb
in
sarb
out
dec
add
les
cli
or
loope
loop
int
xor
mov
popf
clc
test
rolb
sahf
les
in
sbb
pop
ss
addr16
and
dec
and
pop
cmp
lahf
ss
dec
xchg
outsb
pop
mov
test
mov
addl
je
adc
popa
rol
xchg
icebp
mov
sub
xor
xchg
sub
or
push
and
jns
lahf
psignw
mov
mov
hlt
dec
jge
push
lret
push
andl
inc
nop
xchg
dec
mov
hlt
pop
popa
push
dec
mov
in
or
xchg
sub
push
int3
mov
mov
bound
mov
sbb
pop
movsb
stos
pop
fisttps
movsb
sbb
push
cmpsb
ficomps
xor
pop
lret
pop
call
fwait
stos
jns
xchg
push
lods
scas
push
hlt
incl
aaa
out
aam
pop
imull
fdivrl
test
ja
insb
icebp
mov
inc
dec
iret
and
jnp
not
pop
xchg
dec
xchg
scas
push
lea
push
fs
ds
out
inc
mov
dec
gs
pop
pop
sbb
mov
out
mov
inc
adc
push
outsb
loop
repz
lods
arpl
cmc
pop
inc
lret
lods
in
cmpsl
add
repz
movsb
sbb
mov
push
inc
clc
andl
cmp
out
lcall
mov
jns
push
fistps
bndldx
jmp
int
jae
nop
test
push
mov
ret
or
pop
add
lods
pushf
subb
je
push
sbb
stc
or
lds
testl
lret
leave
push
xchg
cld
and
lahf
push
dec
cmc
xchg
push
cltd
fiadds
negl
and
fsubrl
notl
mov
sub
daa
dec
mov
into
cmp
push
mov
pushl
sub
lcall
push
insb
inc
insb
adc
out
mov
arpl
insb
mov
fisubrl
sbb
push
add
sub
inc
fldenv
mov
popf
adc
pop
daa
sbb
fcomps
mov
inc
adc
mov
aaa
pop
sbb
xchg
mov
or
sbb
cmp
adc
push
imul
bound
notb
inc
test
mov
loop
xor
inc
stos
pop
pushf
sahf
adc
push
cmp
insb
or
push
adc
sbb
stc
in
rol
ret
test
mov
incb
jb
imul
ja
dec
pop
out
pushf
in
xorb
loope
add
mov
imul
ds
pop
or
or
sub
mov
loop
pop
aam
mov
lret
push
inc
icebp
jge
outsl
inc
xchg
adc
cmc
mov
or
adc
push
sti
nop
ja
pop
sub
movsl
xchg
clc
xchg
roll
adc
lods
aad
hlt
clc
int
mov
lea
xor
roll
mov
jmp
mov
rol
push
dec
pop
iret
xchg
fcompl
mov
pop
cmpsb
push
cld
pop
push
pop
mov
out
mov
mov
lret
rorl
mov
fstl
stos
or
xor
hlt
divl
fidivs
andl
xor
neg
aam
mov
push
sbb
dec
stos
push
adc
add
lret
out
dec
ja
and
add
jp
int3
jnp
sub
cmp
mov
mov
rorl
sub
iret
or
shll
add
fdivl
inc
cmpsl
rcrb
cltd
jecxz
pusha
out
fcoms
jbe
adc
cmp
dec
ret
movsb
adc
fsub
push
mov
adc
shl
fsubrp
jmp
test
lock
stc
push
outsb
pop
aaa
enter
out
pop
and
pusha
popf
pop
push
jmp
loopne
pop
pop
or
or
fs
cmpsl
sub
add
fwait
xor
enter
pop
addr16
mov
adc
hlt
jae
stos
cmp
push
pop
fiaddl
xchg
loopne
jmp
roll
dec
in
xor
ret
test
mov
xlat
mov
fldl
gs
test
xchg
xchg
int
mov
sbb
pop
push
cmp
insl
adc
popa
js
or
sub
shrb
ljmp
data16
cli
sub
jno
xor
jno
and
stos
es
xor
cmp
push
into
repnz
mov
fsubrs
and
mov
inc
call
mov
cmp
into
mov
cmp
stc
mov
sub
loop
dec
push
adc
jbe
push
jb
lods
ss
in
lret
or
rorl
dec
and
dec
mov
out
mov
subb
xchg
inc
icebp
dec
fidivl
mov
and
pop
inc
push
ret
jae
fcompl
into
mov
xchg
xlat
ret
or
int3
dec
xchg
jbe
inc
mov
adc
icebp
xor
jne
xchg
and
mov
pop
push
jno,pt
addb
or
or
and
in
shlb
inc
and
imul
xchg
sbb
les
inc
sahf
dec
jg
jg
adc
nop
xor
and
add
test
idiv
jp
sub
shll
jmp
mov
enter
pop
xor
and
nop
mov
idiv
sub
mov
cmp
pop
aad
jb
iret
int
stos
xchg
call
les
mov
mov
xlat
addr16
xchg
pop
popf
dec
jp
psubsb
pop
les
push
xchg
and
pop
sub
push
xor
jns
cmovns
mov
shufps
lea
jmp
cs
add
inc
add
stos
retw
test
mov
push
in
mov
xor
adc
mov
aaa
clc
js
into
mov
cli
xor
cmp
and
stos
movsl
out
or
mov
push
and
and
loop
and
jp
dec
scas
and
fisubs
xchg
imul
mov
mov
mov
gs
inc
or
and
pop
les
jle
outsb
adc
pushw
push
fimuls
insb
sbb
dec
notl
ret
outsb
scas
mov
add
js
xor
pop
ret
in
repz
nop
fmuls
mov
push
inc
xchg
and
sahf
lret
out
dec
sti
popa
icebp
cld
jl
lds
addb
sar
inc
inc
out
fistps
mov
cld
ja
subb
mov
cmpl
xchg
imul
das
cmp
and
orl
and
add
pop
mov
lock
jno
mov
cmpsb
inc
jne
jbe
movsl
popf
mov
push
std
jbe
dec
cmp
jns
loop
subb
scas
jnp
push
mov
jl
pop
lods
dec
lret
sub
ja
or
cmp
push
fs
imul
jge
pop
and
dec
loope
ss
je
dec
inc
lods
insb
mov
aas
sub
dec
mov
daa
out
mov
xor
adc
sar
xor
mov
push
jno
adc
or
pop
dec
mov
push
mov
sti
data16
fildl
push
cmp
or
pop
dec
mov
push
mov
sti
data16
fildl
push
cmp
or
pop
dec
mov
push
mov
sti
ljmpw
push
cmp
or
fildl
inc
fsts
push
mov
out
arpl
int3
int3
int3
int3
int3
mov
loope
xchg
into
xorl
test
jle
outsl
sub
dec
add
je
mov
push
push
inc
mov
mov
mov
rorl
and
dec
add
pop
cs
push
push
push
inc
pop
out
fimuls
into
idivl
fisttpl
add
jo
jae
and
imul
and
faddp
mov
sbb
mov
imul
or
mov
bound
in
push
jae,pn
or
frstor
fs
ds
fiaddl
clc
fxch
mov
sbb
xor
xor
mov
outsb
adcb
test
xchg
mov
mov
cltd
in
rcrl
adc
shll
outsb
in
popf
scas
cmp
ds
xor
ret
sbb
adc
jbe
icebp
xor
insl
sbb
je
add
int3
add
pop
sbb
mov
mov
sub
jno
imul
and
mov
out
sbb
icebp
scas
loope
rorl
mov
dec
cmp
push
dec
push
jae
mov
into
mov
cmpsl
in
mov
movsb
mov
pop
mov
bound
ss
jge
dec
sub
loop
in
mov
mov
aas
push
pop
inc
dec
xor
ds
popa
jb
jnp
fwait
ret
mov
mov
loope
rorl
and
dec
add
jno
popa
push
push
push
inc
mov
mov
mov
rorl
and
dec
add
jno
popa
push
push
push
inc
mov
testl
or
popf
mov
sbb
add
aad
arpl
shrl
cmp
movsl
mov
fmul
movsb
jns
fs
adc
dec
mov
cmpsl
jle
outsb
cli
mov
sbbb
push
cltd
shrl
push
and
pop
mov
mov
mov
sbb
jnp
xchg
stos
fcomip
fldcw
call
int
scas
inc
fisubl
movsl
int
and
inc
push
insb
mov
testl
dec
mov
test
xchg
mov
or
mov
push
add
mov
movsb
cmp
adc
sarl
cmc
imul
std
repnz
cwtl
loopne
test
xor
and
loop
movsl
fwait
cmpxchg
mov
pop
bound
aaa
out
fdivr
into
out
jl
imul
sub
adc
mov
xlat
ficompl
add
popf
sbb
stos
jb,pn
xor
ret
xor
imul
lret
or
mov
hlt
xchg
test
inc
dec
cmp
xchg
xor
mov
sbb
out
ret
aam
mov
or
hlt
movsl
out
test
mov
cwtl
mov
adc
dec
ret
ret
or
rolb
push
xchg
dec
sbb
adc
xchg
xchg
aam
stos
das
pop
adc
insl
mov
xchg
mov
mov
cs
je
repz
aas
jge
arpl
sub
inc
sbb
adc
pop
adc
xor
test
stc
push
test
sbb
mov
mov
jo
mov
mov
mov
push
mov
insl
repz
jo
jne
cmp
dec
push
add
add
push
shl
js
std
jb
scas
cs
or
push
xor
mov
sti
jb
ljmp
and
push
in
fildll
ret
rolb
ja
cmpsl
xor
add
ret
and
jo
cmp
and
add
sub
lea
nop
scas
mov
fadd
je
lds
jno
pushf
in
leave
add
insl
pop
pop
shr
pop
std
mov
mov
push
dec
mov
adc
cld
xor
dec
sbb
je
jg
add
cld
or
xchg
aaa
push
mov
ret
xor
daa
hlt
cmp
ficoms
mov
iret
sbb
mov
jg
scas
mov
popf
and
icebp
or
adc
push
out
mov
movsl
adc
lea
loope
adc
xchg
mov
enter
popf
repz
mov
dec
cmp
push
lcall
xchg
out
fidivrs
enter
mov
repnz
ror
cmpsl
mov
dec
shlb
xor
dec
jo
pop
fucomp
jmp
shlb
dec
mov
add
mov
and
push
xor
out
and
mov
jle
jle
out
jb
dec
mov
in
mov
clc
das
jecxz
adc
cs
out
pop
xor
add
or
inc
sbbb
outsb
xor
mov
dec
add
push
cmpb
jmp
call
test
pop
dec
or
fdiv
inc
push
ds
cmp
inc
add
xchg
ret
std
out
loop
mov
ja
dec
out
loop
fdivl
jns
mov
lret
and
adc
sbb
push
aam
mov
add
out
mov
mov
data16
and
scas
sti
mov
xchg
mov
test
jle
mov
mov
jbe
sahf
mov
scas
aaa
fiaddl
jno
ss
inc
inc
and
das
cs
scas
bnd
sbb
cmp
lods
mov
push
jns
pusha
mov
jno
cmpsb
bound
sub
jb
xorb
insb
and
les
clc
daa
rcrl
add
stc
sbb
sahf
mov
jne
mov
jno
mov
cwtl
lcall
push
gs
frstor
and
jne
sub
imul
ss
lods
clc
fwait
outsl
xchg
pop
out
xchg
inc
sbb
sbbl
adcl
aaa
jbe
arpl
out
test
sub
jns
divl
jo
test
xor
shlb
sub
out
adc
clc
push
nop
test
ret
adc
shlb
int3
pop
mov
mov
sub
nop
dec
rol
pop
mov
adc
mov
add
adc
dec
sahf
into
cmpsl
iret
xor
loop
inc
testb
mov
inc
push
sbb
sarl
lcall
lret
test
xor
pop
call
ret
add
add
pop
stc
faddl
dec
subb
dec
pop
sbb
jnp
xorl
inc
ret
stc
mov
stos
aad
cltd
int3
loop
ret
addr16
jle
in
lock
out
pop
repz
lea
repnz
rorb
arpl
jnp
xor
mov
aas
clc
in
sub
push
sbb
jl
and
pop
jnp
jbe
cwtl
cmp
pop
xor
inc
mov
dec
lods
or
xchg
outsl
gs
and
jbe
sbb
ds
cld
mov
dec
xchg
or
mov
xor
cmp
popa
cli
xchg
ret
mov
mov
pop
dec
inc
aaa
loope
int
mov
sbbb
outsb
cmp
pop
pop
enter
and
mov
sub
and
pop
ljmp
jbe
inc
movsb
mov
sti
je
das
dec
ficompl
rolb
inc
pop
jecxz
and
test
jecxz
fwait
ret
push
jl
cmpsb
movsb
jle
cmp
add
xchg
negl
lret
jo
pop
int3
mov
mov
in
nop
gs
jbe
enter
clc
shlb
sti
fistps
xor
or
add
icebp
repnz
mov
les
loopne
testb
jbe
subl
outsl
repnz
cmp
cs
xchg
jg
shlb
enter
jl
sarb
pop
shlb
ds
xchg
and
mov
xor
sbb
shrb
jne
push
or
or
fwait
stos
jp
cmp
aam
mov
mull
jns
insl
mov
pop
cmp
popa
or
sub
mov
or
fadd
mov
cmp
aaa
ror
mov
or
movsl
pop
jb
push
test
sub
xor
addl
fstl
push
lods
enter
dec
sbb
mov
push
sub
jle
xchg
lock
mov
imull
scas
movsl
loop
clc
popf
mov
pop
pusha
sub
or
mov
or
movsb
or
loope
cmc
inc
enter
jle
mulb
inc
sub
fstpl
or
enter
imul
adcb
mov
das
xchg
push
fcmovu
fstpl
or
fxch
pop
and
xchg
mov
lods
insb
mov
pop
sub
clc
or
cmp
adc
les
leave
push
mov
adcb
mov
mov
or
lcall
inc
push
out
dec
leave
mov
push
inc
mov
adc
push
nop
call
mov
mov
jg
cmp
sbb
or
and
pop
addr16
imul
cld
sbb
jmp
and
cli
loopne
mov
fstl
xchg
or
jle
cmp
lret
test
push
iret
inc
mov
lahf
in
stos
and
dec
jp
fxam
out
out
push
cmc
pusha
das
loopne
mov
adc
push
pop
imul
and
jg
pop
in
push
scas
sub
or
inc
mov
ror
and
sbb
pop
jo
or
shrl
out
pop
jbe
mov
sbb
dec
jnp
daa
enter
cmc
push
in
int3
fistl
pop
lret
mov
dec
mov
and
and
jmp
sub
int
test
imul
push
jecxz
daa
and
dec
out
ds
aad
insl
cs
sbb
push
fistpl
outsl
int
pop
and
xlat
inc
xchg
in
push
or
loop
shl
jne
xchg
stos
test
pushf
shlb
repnz
push
xor
fimull
repz
pop
cwtl
mov
leave
movsl
jnp
jp
pusha
push
push
xchg
repnz
nop
jecxz
leave
in
mov
push
rcrb
stc
mov
fucomp
shl
pop
dec
sar
inc
jno
adc
bound
aad
mov
dec
stos
insb
mov
popf
loopne
mov
out
hlt
nop
cltd
mov
inc
movsb
and
mov
dec
and
jg
pop
push
xchg
or
movsb
lods
pop
fdiv
mov
stc
or
dec
xchg
jbe
fadds
mull
cmpsb
dec
lcall
dec
mov
ret
iret
mov
xor
outsb
cmp
jne
rcr
cmp
mov
mov
cmp
dec
cmp
rol
decl
out
mov
inc
mov
mov
xchg
fadds
xor
mov
push
push
js
orb
xor
fdivl
xchg
lods
add
aad
dec
push
mov
xchg
mov
jle
out
mov
test
cli
xor
lods
or
mov
out
xchg
repz
jp
push
outsb
mov
add
jg
pop
ror
push
xlat
ret
in
xor
pop
pop
pop
pop
pop
rclb
xlat
push
das
mov
dec
mov
and
adc
sbb
aas
jl
mov
nop
leave
mov
dec
imul
dec
xchg
imul
xor
sbb
mov
pop
into
stos
mov
sub
xchg
adc
lods
rcrb
sbb
mov
movsb
lcall
lret
cld
or
addl
xchg
inc
dec
push
test
test
sub
nop
jl
out
jno
les
mov
mov
jno
xor
loop
shlb
xchg
sahf
cvtpi2ps
inc
fsubp
fbld
adc
lods
nop
add
outsb
xchg
loope
xor
sub
mov
jmp
ffreep
xor
mov
cmp
dec
in
les
pop
push
jbe
jae,pt
icebp
sub
add
pop
mov
jb
xchg
sub
mov
pop
adc
mov
pusha
imul
pop
pop
mov
jl
ljmp
mov
push
sbb
xor
xchg
mov
pop
mov
sub
adc
dec
mov
lcall
into
xor
lock
mov
out
call
repnz
and
sbb
pop
sub
push
cmp
xchg
movsb
arpl
negb
es
clc
rorl
je
xchg
out
xor
loopne
pop
inc
ljmp
push
adc
and
add
addl
pushf
xchg
xchg
fnstcw
cli
leave
pop
fsubs
ficomps
and
call
sti
dec
dec
add
sub
push
push
dec
adc
repz
lret
push
mov
in
push
loopne
sub
push
cmp
icebp
aas
mov
shr
filds
xor
mov
pop
sbb
clc
dec
mov
xor
push
lret
shl
lea
sub
test
push
mov
leave
ret
lcall
gs
in
push
mov
cmp
in
push
shlb
push
push
or
fsts
xchg
push
test
stc
loop
push
jl
stc
scas
pop
imul
xlat
inc
addb
push
inc
add
cmovno
mov
scas
ljmp
mov
cmp
inc
flds
inc
and
aas
insl
shlb
sbb
int
testb
jge
repnz
inc
push
es
mov
mov
ljmpw
imul
lods
sahf
insl
subb
cmp
lock
mov
cmpsb
stc
sar
iret
lea
cld
roll
sub
es
xor
mov
jmp
inc
stc
sar
or
mov
test
lcall
mov
nop
insl
jno
push
mov
and
push
jg
out
add
mov
test
cmpsl
sbb
in
aas
js
jg
setge
mov
add
cmc
orl
pop
shrb
dec
mov
aam
xchg
insb
mov
repz
pop
jne
sub
pop
mov
mov
testb
jmp
mov
or
fbstp
cmpsb
fmuls
outsb
mov
dec
cltd
movsb
fstl
aam
insb
xchg
xchg
or
in
xor
dec
in
cmp
add
insl
cli
out
movsb
fisubs
or
loopne
scas
out
ss
movsl
insb
or
pop
add
jge
mov
fwait
mov
aas
dec
dec
mov
mov
mov
data16
inc
dec
push
mov
cld
out
mov
dec
dec
push
call
lret
inc
inc
rcll
inc
jno
stos
insb
imul
insb
mov
int3
xchg
lea
imul
out
push
enter
pusha
ret
pop
and
add
xor
aaa
stos
or
xor
mov
mov
xlat
pop
xchg
bound
fs
pop
scas
es
sub
mov
ljmp
mov
fldl2e
sbb
jmp
lcall
roll
pop
into
adc
fcompl
or
lcall
popa
pop
jne
jnp
ret
or
and
dec
fs
xchg
adc
clc
inc
lcall
fisttpll
bound
xchg
dec
inc
aam
scas
dec
adc
jns
jae
lock
dec
cmp
mov
stc
rcrl
mov
fmulp
gs
fldl
arpl
subb
loop
xchg
pop
les
call
xchg
cmp
add
push
dec
stc
mov
push
sub
outsb
mov
cmp
mov
mov
nop
lret
and
in
mov
and
add
xlat
sarl
and
mov
pop
punpckhwd
repnz
mov
cltd
mov
test
aad
cld
icebp
xor
xor
push
or
jno
pop
cmpsb
sub
sbb
sub
dec
mov
jnp
arpl
lock
test
movsl
lods
mov
pushf
inc
inc
pop
rorb
add
lahf
pop
lds
jp
jns
hlt
and
scas
xor
pusha
inc
mov
sbb
sub
shll
push
pop
xchg
mov
push
dec
sbbl
xor
insb
dec
mov
sub
mov
mov
aam
ja
rcrl
int3
cli
sub
mov
mov
mov
int
xor
jnp
push
mov
out
and
push
cwtl
arpl
stos
and
xlat
xchg
ja
mov
inc
mov
fadd
mov
rcll
or
jnp,pn
stos
add
mov
jle
bound
jo
cmp
out
push
stos
cmpsb
pop
and
sbb
clc
xchg
fs
or
jle
movsb
xchg
adc
adc
inc
xor
mov
jmp
inc
sub
add
lahf
dec
mov
dec
pusha
jg
push
jg
push
enter
xor
and
inc
push
mov
lds
pop
mov
and
inc
ss
shl
lcall
mov
in
mov
es
adcb
test
pop
xchg
push
and
test
or
jno
sub
inc
push
jb
inc
loope
sbb
subb
ds
cmp
ss
cmp
cld
subb
mov
pushf
dec
pop
xchg
push
cmpl
fisttps
scas
popa
and
push
sub
and
push
lods
jns
sbb
jg
sarb
inc
mov
push
icebp
sub
cmp
lock
orb
push
inc
ss
or
dec
sub
sub
jle
test
sbbl
cmc
test
xlat
dec
pop
repnz
iret
mov
inc
adc
sbb
popw
loopne
into
ret
pop
lahf
addr16
mov
out
push
pop
lods
mov
scas
test
movsb
aas
jecxz
inc
scas
mov
jmp
je
pushf
lahf
pop
fistpll
std
outsb
call
into
add
dec
mov
cmpsl
mov
and
lock
sbb
lock
mov
cs
sbb
cmp
mov
cltd
lods
sbb
sub
jecxz
das
js
mov
mov
push
sub
xchg
sti
dec
movsb
inc
cmp
gs
mov
repz
jae
les
xorl
cmpsb
push
push
add
xor
xchg
push
xchg
aad
or
loope
pusha
rclb
and
push
leave
and
mov
les
inc
jb
mov
aaa
push
outsl
mov
sub
push
cmp
and
cmpsb
int
mov
popa
pop
and
pop
enter
mov
shll
or
sbb
loop
mov
cmpsb
pop
movsb
cmc
outsl
shlb
dec
je
pushf
adc
mov
jno
test
pop
mov
sbb
aas
xchg
pushf
es
mov
loopne
jbe
orb
es
or
leave
dec
mov
mov
rep
jae
mov
mov
sbb
shll
pop
inc
push
sub
dec
add
into
pop
xor
sub
and
fwait
fstpt
adc
fidivl
out
xor
fs
fistl
xchg
pop
cmp
push
ja
jo
cmp
das
xchg
push
ljmp
test
or
jbe
xchg
int
insb
dec
roll
loopne
loop
cs
pop
and
es
seta
xor
popa
jge
in
cwtl
xchg
and
or
xorb
sub
sbb
ret
dec
stos
daa
ret
jnp
shlb
sbbl
and
jo
push
int3
add
shrb
mov
lods
dec
mov
repz
lds
or
and
and
mov
into
add
jg
xchg
dec
inc
cwtl
stos
sti
xor
sti
aaa
pop
mov
sbb
in
rcrb
lods
pop
xor
jb
dec
lods
mov
mov
std
orb
inc
mov
push
xchg
push
mov
add
mov
hlt
stc
cltd
mov
xchg
das
cmp
stc
repz
jne
cmpsb
testb
inc
sub
lret
in
rolb
and
lcall
xor
clc
imul
push
icebp
popf
sbb
incl
jbe
mov
hlt
xchg
into
into
pop
push
or
inc
mov
pop
pop
jmp
push
or
test
movsb
sbb
fwait
into
or
or
fisubl
mov
sbb
repnz
pop
xchg
mov
stos
pop
test
lods
ror
es
roll
and
adcl
es
loop
enter
fwait
cmp
js
jl
fmuls
lock
dec
xor
lret
ror
and
and
icebp
adc
adcb
jl
xchg
jl
jns
xchg
lret
dec
jbe
lret
test
or
stc
jne
shrl
addr16
push
andl
jb
add
xor
int
and
jbe
fwait
jg
in
out
push
nop
dec
je
mov
arpl
inc
xchg
rorl
push
pop
arpl
sub
daa
adc
lods
out
or
subl
xorl
loopne
imul
inc
ds
popf
cmp
stos
mov
std
ja
shlb
xlat
jmp
xchg
jo
les
xchg
sub
jmp
pop
imul
out
xor
jle
js
or
jle
pop
fcomps
xlat
sbb
adc
dec
mull
ds
sbb
adc
sub
inc
push
lahf
cmpb
loope
fidivrs
lods
mov
sarb
jae
lods
push
imull
test
xor
xchg
cmpsb
pop
hlt
inc
arpl
addr16
mov
sub
cmp
cmp
pop
icebp
lds
and
fsubrs
pop
gs
jecxz
jp
mov
cmp
adc
sub
inc
xchg
inc
cmp
scas
test
jo
push
and
je
cmp
aas
scas
adc
xchg
jnp,pt
sbb
jnp
push
jns
shl
cmp
sub
mov
fwait
xchg
in
rorb
pusha
mov
cmp
arpl
xchg
or
push
cs
sahf
sub
or
cli
push
dec
and
ret
mov
dec
pop
loopne
xchg
or
lret
mov
push
sub
into
dec
cmc
push
xchg
sbb
mov
xchg
cmp
outsb
lods
mov
stos
hlt
and
insl
sbb
xchg
mov
shrb
push
dec
in
adc
pop
das
mov
push
gs
and
xor
xchg
and
das
add
xchg
adc
pop
nop
ja
popa
jg
pop
loop
adc
sar
cmp
mov
or
xchg
popf
adc
and
jle
mov
xchg
push
scas
xlat
in
inc
jl
addr16
mov
mov
in
sbb
jge
adc
out
loope
push
fucomp
mov
ret
popf
cmpsl
clc
cmp
push
lcallw
inc
inc
xchg
bound
roll
xor
pushf
sub
push
fninit
int
mov
jo
lcall
add
jbe
scas
push
cmp
fldcw
xor
iret
stos
js
lods
ds
cltd
mov
sarb
aaa
fisttps
cmp
sbb
push
mov
mov
adc
inc
push
xor
int
test
sbb
push
jmp
into
lock
mov
iret
lods
cmp
add
sbbl
pop
jl
sub
outsb
jl
sbb
aaa
in
dec
ljmp
sub
push
mov
or
fbstp
iret
adc
into
divl
mov
popf
pop
push
mov
or
cmp
icebp
push
fcmovne
mov
gs
pop
ja
xchg
call
dec
mov
cld
and
dec
and
adc
mov
les
pushf
divl
int3
pop
ds
sbb
xchg
fstl
out
mov
sahf
mov
orb
cmp
and
mov
pop
mov
mov
fwait
inc
insl
sub
out
mov
lahf
hlt
xor
jl
jge
pop
or
jle
mov
push
dec
lahf
mov
mov
cmp
or
ds
nop
rcll
push
mov
insb
jns
out
xor
frstor
jmp
orb
mov
mov
rorl
and
dec
add
jno
popa
push
push
push
inc
mov
mov
mov
rorl
and
dec
add
jno
popa
push
push
push
inc
mov
scas
pop
mov
test
icebp
scas
mov
xor
pop
adc
jne,pt
popa
push
pop
push
movsl
push
out
inc
fidivs
sarl
mov
jle
outsb
mov
adc
dec
or
outsb
sub
int3
int3
int3
int3
int3
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
mov
push
push
call
mov
call
push
push
pushl
mov
pushl
pushl
call
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
call
push
mov
call
xor
leave
ret
or
pop
pop
das
insl
aas
jge
sub
jae
bound
ret
int
shrl
fistps
imul
inc
insl
aas
jge
or
jg
iret
lahf
int
std
out
fistpll
lods
mov
mov
adc
add
jmp
mov
std
movsb
int3
lods
repz
dec
push
xor
sbb
dec
loop
les
inc
lods
push
lock
fbld
jecxz
jecxz
scas
in
andl
repnz
dec
jmp
sub
inc
std
xor
or
lods
add
icebp
mov
ficompl
sub
xchg
sbb
sbb
fistps
ret
mov
lret
dec
mov
pop
fstl
popf
lahf
and
or
fbld
daa
call
lock
mov
mov
xlat
loope
jge
cmp
inc
sbb
scas
test
std
mov
fists
pop
lods
repz
lock
cmpb
aaa
mov
nop
pop
dec
mov
int3
fwait
leave
es
dec
in
inc
fimuls
push
dec
dec
dec
das
jge
stos
or
fldenv
aad
vpmuludq
mov
lods
fldenv
insl
pop
pop
insb
inc
jl
pop
xor
inc
jg
movsb
int3
movsl
lret
xchg
mov
lods
lcall
sbb
cmp
lcall
mov
mov
mov
xchg
mov
cmp
insb
or
pop
sbb
int
fistps
cmovge
pop
das
insl
aas
jge
or
jg
int
fistps
cmovge
outsb
xorb
xchg
out
in
inc
adc
addb
repz
adc
mov
test
pop
nop
aam
push
xchg
in
loope
xchg
adc
imul
sub
xchg
push
cwtl
push
mov
in
cmovno
je
loope
aad
inc
jmp
stc
jne
in
add
aad
xlat
shll
hlt
mov
sbb
imul
movl
decb
push
pop
ljmp
adc
in
mov
inc
stos
int
adc
cltd
xor
mov
gs
push
mov
popa
rcr
lea
jns
je
sbb
fmull
xchg
scas
push
mov
insl
sbb
push
add
aas
lret
jle
fdivrs
cmp
xor
mov
es
das
int3
divb
stos
mov
sbb
dec
pop
xchg
mov
adcl
in
mov
pop
or
test
shll
cmp
jp
mov
jb
cld
mov
jb
pop
jle
mov
comiss
sbb
pop
xor
or
sub
pop
xchg
pop
jmp
pushf
dec
jp
cmpsb
ja
xchg
aaa
outsl
hlt
nop
scas
cvttps2pi
jl
xlat
sub
sub
test
out
xchg
mov
add
lret
adc
or
pop
mov
inc
imul
xchg
push
es
icebp
xchg
push
insb
sbb
sub
cld
xor
loopne
or
sti
xor
push
cs
ds
insb
adc
inc
stos
cmp
loopne
outsb
rcrl
lret
scas
gs
dec
sbb
jl
mov
sbb
add
or
add
xchg
sarb
loopne
fdivp
and
xorl
cmpsb
insb
popf
rcll
imul
fbld
cmp
popf
test
and
mov
dec
mov
fistpl
mov
in
mov
dec
pop
add
test
xchg
xchg
fists
call
jbe
add
fs
jg
stos
out
lods
std
call
inc
mov
pop
cmpsb
dec
jle
pop
sub
lods
dec
outsb
lret
aas
sar
inc
out
fisubrl
sub
scas
pop
add
and
mov
out
lret
mov
movb
pop
out
notl
add
lret
mov
sub
pop
add
push
adc
cwtl
xorl
xchg
movsb
inc
inc
sub
jle
inc
jno
subl
adc
dec
and
dec
lret
pop
movsb
pushf
xchg
jmp
pop
fdivs
lods
push
rolb
push
js
and
sub
shll
and
xchg
pshufw
movsl
mov
ds
aas
mov
iret
unpckhps
pop
jns
pop
xchg
mov
nop
push
mov
or
mov
sbb
mov
push
rcrb
aas
dec
pop
pop
hlt
mov
or
mov
cwtl
mov
mov
cmpsb
mov
xchg
mov
sets
daa
and
adc
in
adc
inc
scas
fwait
mov
pop
lret
loope
ja
or
sub
pop
xchg
out
lods
ret
lret
push
ret
cli
addr16
repz
repz
frstor
enter
pop
push
imul
push
push
cltd
in
filds
mov
outsb
test
pop
cs
mov
daa
xor
pop
xor
int
popa
loopne
add
or
xchg
sub
mov
add
ljmp
mov
jne
and
xchg
inc
fsubrp
inc
push
and
sbb
jnp
mov
xchg
jmp
jne
xchg
enter
mov
mov
pop
mov
add
sbb
data16
add
cltd
or
aaa
lea
mov
jno
push
lods
xchg
xlat
repnz
lahf
jbe
xor
fistpl
dec
push
and
mov
cmpsl
out
jecxz
xchg
in
xlat
sbb
ljmp
xor
cmp
aas
cld
cmp
movsb
mov
xchg
and
xchg
in
inc
xchg
pop
pop
ret
adc
jge
pop
pop
pusha
lock
mov
add
push
or
inc
aad
sub
push
mov
fistpll
dec
aam
add
inc
dec
js
sub
sub
pop
test
mov
sub
pop
add
mov
das
add
cld
iret
inc
sub
adc
scas
call
cmp
nop
addb
out
test
adc
sub
cld
and
pop
pop
sub
fs
jns
inc
xor
das
xor
jbe
mov
pcmpgtw
pushf
jg
sbb
mov
jb
sti
jbe
xor
jp
fildll
inc
das
xchg
jecxz
add
push
rcrb
xor
cmovb
out
lcall
sbb
xchg
mov
cltd
xchg
cwtl
pop
ja
imul
sbb
add
mov
int
add
cmp
call
pusha
jnp
mov
push
in
adc
xchg
out
out
das
outsb
loopne
cmpl
xor
outsl
adc
sti
popl
mov
mov
adc
push
lock
int
popf
nop
movsb
pop
sub
imul
jg
pop
imul
stc
push
xor
push
sbb
in
and
mov
lods
je
lock
int
test
mov
mov
cmpsb
popa
lret
pop
ds
xor
pop
mov
or
xchg
ljmpw
adc
add
mov
lea
mov
movsl
jmp
xor
jmp
push
cwtl
movl
imul
sub
out
dec
xchg
jg
sub
inc
in
jl
sbb
push
pop
mov
neg
gs
dec
mov
mov
pop
mov
pop
pop
sbb
dec
pop
shlb
bound
stos
sub
popf
jns
jl
sub
or
lock
add
ljmp
lock
lea
stc
add
rolb
imul
adc
js
mov
fs
sahf
mov
fsubr
lahf
mov
sub
fistpl
sbb
cmp
cli
imul
pop
int3
pop
jo
inc
int
and
hlt
jl
arpl
push
mov
pop
addb
js
sub
xor
cmp
jmp
xchg
shrb
and
push
stos
lds
mov
pop
jecxz
arpl
cltd
call
push
push
shlb
mov
test
pop
cmp
xchg
cmp
or
jmp
mov
xor
xchg
xchg
and
and
sbb
insl
andl
fbstp
or
iret
mov
or
or
fidivrs
mov
adc
sub
push
push
daa
xchg
mov
add
sbb
mov
sub
jo
mov
adc
sahf
cmp
aad
imul
lret
ja
jmp
stos
sarb
cltd
or
cli
je
push
orb
and
pop
cmp
xor
xchg
loope
xchg
inc
aaa
pop
out
mov
fistl
add
mov
repnz
in
std
cmp
cmp
mov
dec
scas
add
sti
addr16
and
xchg
mov
aas
cmpsl
cmpl
sub
mov
test
iret
inc
sbb
cwtl
test
mov
or
leave
mov
push
int
or
mov
in
ss
lcall
push
cmp
popf
inc
xor
ljmp
scas
mov
push
xchg
jns
sub
fdivl
sub
notb
mov
aas
dec
push
add
cli
inc
xchg
mov
imul
cmp
cmp
xor
scas
cli
lahf
adc
leave
ret
mov
fisubrs
xor
and
icebp
dec
popa
jne
adc
shll
adc
les
mov
dec
pop
outsb
push
xor
cmpb
or
fnstenv
mov
pop
sub
mov
repz
sub
sbb
lret
dec
mov
dec
add
std
nopl
or
ficomps
xchg
int3
mov
xchg
frstor
pop
xor
scas
xchg
sbb
ret
push
jg
jno
push
and
stos
mov
push
data16
ss
sub
fisubrl
lahf
mov
dec
push
js
or
and
xchg
cwtl
xchg
push
mov
in
inc
xchg
sbb
gs
shrl
ret
push
roll
enter
cmp
pop
hlt
outsl
add
in
out
lods
movsb
insl
sub
mov
jle
push
rcll
pop
push
or
scas
in
shr
pop
sahf
add
xchg
mov
adc
push
xor
in
mov
fidivrs
in
bound
push
mov
adc
and
xor
filds
inc
lea
jmp
adc
rcr
outsb
inc
mov
lea
pop
dec
cmp
cmpsb
and
jecxz
in
call
jp
jnp
lods
roll
enter
jo
jmp
test
jle
and
push
and
xor
mov
pop
loopne
js
test
out
scas
sbb
cwtl
movb
pop
inc
out
jnp
mov
or
and
and
ret
sti
stos
xor
call
adc
sub
mov
repz
frstor
fimull
or
mov
dec
aaa
pop
and
mov
rcll
dec
test
ss
xchg
jne
push
jae
adc
ficoml
adc
xchg
and
addr16
fstpt
in
jno
jmp
repnz
xchg
or
push
xor
rol
add
loope
push
mov
pop
mov
fisttpl
pop
dec
jl
add
inc
xchg
add
scas
in
adc
mov
add
hlt
movsl
push
cmp
subb
push
cmp
lods
ljmp
lcall
shrb
pop
xchg
movsw
sub
inc
icebp
js
in
pop
add
pop
mov
int
or
push
mov
push
pop
push
and
mulb
popf
clc
ficomps
add
pop
sbb
add
nop
dec
inc
popf
mov
jge
sub
jne
mov
push
roll
lahf
jbe
aas
lds
jnp
sub
add
fimuls
add
mov
xor
lret
dec
pop
and
das
xchg
jle
imul
fs
lret
jo
cmp
xchg
push
mov
fbstp
nop
add
xchg
add
fwait
in
adc
dec
lahf
dec
clc
add
add
cmc
clc
popa
arpl
arpl
pop
jbe
or
cltd
sahf
add
mov
ret
aad
lods
out
mov
mov
sbb
sbb
push
std
frstor
pop
dec
cmp
insb
into
pop
int3
lahf
jo
mov
movsb
mov
repz
sbb
jg
ljmp
pusha
les
sbb
test
push
mov
dec
mov
js
inc
dec
mov
jne
push
imul
jg
int3
repnz
pop
rol
cmp
out
adc
out
sub
sub
push
pop
repnz
popa
lret
xor
fwait
jecxz
aad
loopne
outsb
je,pn
stc
and
loop
fidivrl
out
in
xchg
jge
adc
add
lahf
leave
sub
dec
imull
push
mov
jg
pop
aaa
aaa
in
ds
and
xchg
mov
das
push
shlb
add
ja
addr16
jne
ret
pushf
in
xchg
outsl
mov
lret
shll
outsb
movsl
or
jl
sbb
mov
mov
xor
push
push
and
int3
divl
or
jne
fs
add
or
mov
movsb
jae
out
dec
xchg
push
mov
loope
popf
mov
jge
and
bswap
in
xor
push
sub
data16
jl
add
mov
push
or
popa
sub
mov
xor
addb
mov
repz
xor
jmp
cwtl
jns
shlb
fnsave
or
iret
notl
ss
mov
fdivrp
fs
mov
out
jb
addb
push
jns
repnz
and
sbb
cld
ror
xchg
daa
pop
cmp
addr16
std
mov
add
mov
xorb
rclb
sub
add
sbb
daa
sub
pop
jmp
adc
cmpsl
mov
lret
aam
sbb
mov
decl
pop
inc
dec
addl
pop
stos
and
mov
push
cmp
dec
and
outsl
test
jmp
insb
sbb
inc
dec
cmp
pop
jmp
push
loopne
sbb
pop
xor
adc
dec
shl
lcall
cmp
jmp
orb
mov
popa
pop
jl
sbb
mov
adc
sar
test
pop
int3
jle
mov
js
fadd
cmpsl
orl
movsbl
pop
in
sahf
out
xchg
mov
mov
dec
push
inc
inc
sub
pop
stos
aam
jg
ss
mov
sbbb
inc
adc
dec
jb
pop
inc
inc
sbb
sub
mov
sub
sbb
cmpsb
imulb
pop
mov
push
stc
das
movb
adc
push
xor
xor
push
mov
xor
adc
cld
mov
or
pusha
mov
pop
dec
xchg
and
xchg
rorb
mov
in
sub
push
jae
insb
jg
aaa
imul
mov
push
sbbl
xor
ljmp
stos
xchg
mov
ja
in
rcrb
push
icebp
mov
subb
stos
sub
fistl
or
push
pusha
or
inc
mov
xchg
and
pop
ja
stos
je
cmpsl
ret
mov
test
and
xchg
dec
aaa
push
test
sub
and
fstpl
or
push
addl
icebp
clc
or
pop
je
clc
jge
add
mov
fdivrs
add
or
rorl
xlat
jnp
es
repnz
xor
inc
insl
lods
and
and
cmpsl
mov
pop
xor
mov
lahf
mov
pop
aas
mov
inc
out
pusha
cmp
cmp
mov
ss
pop
lea
or
inc
mov
icebp
test
push
cmpb
nop
jns
jae
mov
jp
jne
mov
test
xor
ds
scas
stos
jns
cvttps2pi
cmpsl
scas
movsl
mov
enter
push
cmp
push
add
in
inc
push
sbb
xchg
icebp
into
pop
sbb
stos
decb
xor
pop
shlb
mov
dec
push
scas
lods
aaa
in
sbb
je
mov
pop
mov
ucomiss
fsubl
stc
iret
and
adc
jmp
cmp
aas
mov
int
xor
xchg
or
lret
test
cli
test
sub
ret
movsb
mov
and
add
mov
dec
leave
inc
les
jmp
mov
inc
push
jp
mov
xchg
dec
dec
jo
loope
cmp
pop
mov
lds
stc
repnz
mov
out
xor
into
lds
fisttps
test
add
cmp
xor
add
jne
push
loopne
cmp
cmp
adc
fsts
xor
xchg
cmpsl
movsb
scas
adc
cmp
lds
loopne
in
lcall
enter
jle
or
push
adc
jns
fidivl
je
loope
sub
xchg
jp
fidivl
imul
pop
cmp
jp
pcmpgtb
aas
add
fwait
movsb
int
in
cmpsl
cmp
and
aas
adc
pop
daa
push
pop
or
lahf
aam
in
add
or
test
cwtl
push
repnz
shrb
adcb
add
add
aaa
or
clc
pop
inc
lods
lret
aam
dec
stos
insb
inc
insl
sti
mov
jge
cld
xor
push
test
jne
negb
jne
fdivl
div
test
xor
inc
mov
pop
jecxz
sub
add
mov
push
pop
mov
push
inc
xchg
mov
or
test
or
mov
jo
movsl
or
pop
mov
leave
push
and
in
sub
jbe
xchg
jnp
mov
loopne
fnstcw
inc
sub
outsl
test
nop
div
sahf
out
shll
loop
mov
subl
jle
mov
xchg
mov
enter
sub
dec
mov
cmp
adc
cmp
mov
nop
hlt
imul
fisubrl
push
out
cmp
jae
xchg
mov
js
xor
jbe
pushf
pop
and
add
insb
aam
add
and
xchg
mov
sub
xchg
cmc
inc
jmp
ljmp
imul
push
cmpsb
in
ljmp
mov
aas
add
dec
mov
pushf
test
cli
sarb
negl
int3
stos
fdivl
mov
and
and
into
dec
jnp
push
adc
pop
movsl
push
mov
push
pop
ljmp
ja
xchg
repz
mov
scas
add
inc
adc
lods
sub
pop
sbb
fistps
push
sub
inc
xchg
aaa
arpl
pop
das
push
aad
cvtpi2ps
xlat
mov
xchg
imul
test
repnz
rorb
inc
enter
sbb
loop
cmpsl
rcll
jne
loope
xchg
or
rcll
out
and
out
pop
lret
jns
iret
jae
mov
xchg
or
outsl
pop
test
lods
mov
add
into
mov
mov
and
test
fistl
mov
outsl
inc
add
aad
pop
push
push
loop
xor
push
or
dec
pop
cmp
fcmovu
mov
mov
movsb
out
jb
mov
mov
and
popa
jns
jno
cltd
inc
movb
pop
stos
jp
sub
adc
xchg
jle
jmp
loopne
jns
sti
and
xor
adc
mov
jl
rorb
fwait
mov
enter
js
in
ret
pop
test
sbb
mov
add
xchg
popl
xchg
mov
pop
sti
cli
loopne
inc
shl
push
pusha
add
xchg
mov
fisttpll
sbbl
mov
mov
in
xchg
hlt
xor
jns
mov
adc
cmc
ljmp
mov
shrb
outsl
scas
mov
or
enter
cmp
sub
enter
xchg
mov
fwait
cltd
addb
stos
and
pop
sbb
ja
jbe
sub
xchg
negb
inc
lds
movsb
mov
sbb
in
roll
inc
adc
mov
mov
add
mov
fsubr
ss
fildl
add
push
adc
jge
inc
shr
data16
insl
xchg
iret
add
xor
push
into
jl
in
jp
and
cmp
xchg
mov
and
push
pusha
and
ljmp
lock
in
xor
push
push
sub
dec
in
sbb
das
inc
daa
ror
cld
stos
pusha
mov
jle
in
sub
cli
dec
jb
jl
push
pop
outsb
imul
pop
pop
test
enter
out
aam
mov
fsubs
jbe
enter
add
and
shll
iret
lret
adcb
sahf
push
in
rcrb
subl
fbld
mov
ds
cmpl
ljmp
fnstcw
imul
divl
sub
xor
lret
mov
insb
repnz
or
and
out
jecxz
xchg
pop
in
sti
mov
push
or
adc
jne
sub
dec
jne
jb
xchg
and
fimuls
mov
sbbb
data16
dec
inc
sbb
inc
pop
mov
cmpsb
xor
mov
mov
dec
add
push
cmp
nop
in
pushf
fildll
int3
push
xchg
mov
fs
or
adc
xlat
ficomps
push
mov
inc
sbb
fs
js
call
fs
imull
pop
testl
mov
jo
or
scas
les
pop
add
xor
out
sub
loop
xor
or
negb
push
mov
adcl
mov
aas
enter
mov
xchg
adc
inc
scas
push
int3
xchg
adc
pushf
lret
sbb
cmpsl
or
mov
in
jo
daa
inc
mov
push
andb
std
hlt
inc
or
adc
push
mov
mov
bound
cs
aas
mov
pop
orb
fdivrp
imul
mov
dec
sbb
call
xchg
push
aad
insl
push
shr
insl
rcrl
mov
pop
cmc
inc
ret
hlt
leave
out
lea
cwtl
rcrl
and
pop
inc
shlb
gs
mov
or
ljmp
mov
jmp
inc
sbb
call
and
das
mov
pop
cmp
ficompl
je
jnp
outsl
adc
outsb
pop
push
pop
int3
sti
adc
pushw
or
rcll
sti
sar
cmp
test
in
jge
shl
scas
mov
sbb
sub
or
or
push
mov
mov
push
or
clc
jecxz
je
je
sbb
mov
mov
aad
testb
aaa
mov
ljmp
or
cli
jno
mov
stos
mov
outsb
sarb
push
aam
leave
fimull
ret
test
jb
mov
mov
leave
add
test
push
mov
mov
dec
arpl
sub
inc
dec
pop
std
fwait
push
out
loop
adc
push
lock
insl
xchg
sbb
ficompl
and
sbbl
lret
rorb
andl
roll
scas
and
fsubrs
fs
leave
mov
push
rorb
cmp
push
aaa
mov
fldcw
lock
mov
mov
mov
movsl
xor
dec
mov
fcmovnb
or
mov
cwtl
in
mov
lods
in
sbb
push
push
bnd
and
leave
push
dec
pop
loop
stos
pushl
dec
xchg
adc
clc
pop
outsb
test
pusha
xchg
imul
push
mov
jnp
rcll
pop
sub
imul
dec
int3
and
aas
xor
sub
pop
adc
in
push
xor
loope
jo
jns
pop
lea
mov
push
jl
mov
mov
popf
cs
jle
xor
or
fisttps
leave
mov
inc
add
aad
aad
and
and
cmpsl
loop
data16
stos
mov
push
mov
aas
push
xor
popa
xchg
jl
inc
cmc
mov
cmp
sub
loop
and
or
sub
flds
leave
mov
iret
inc
imul
clc
and
shl
cmp
shrl
adc
std
popw
loop
lods
push
mov
push
in
popa
in
add
pop
push
or
jg
int
fistps
cmovge
pop
das
insl
aas
jge
or
jg
int
fistps
cmovge
pop
dec
insl
aas
jge
or
mov
fstpl
mov
popf
out
lods
pop
mov
jne
pop
jge
or
cmp
add
add
add
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
push
push
sub
nop
and
popa
add
stc
mov
test
aaa
clc
mov
cwtl
adc
js
dec
sub
sub
js
push
clc
xchg
enter
fisubrl
ret
popa
mov
xor
and
add
mov
lods
clc
out
int3
cli
fwait
negl
sub
jl
pop
aas
shl
or
imull
int3
and
add
xor
push
mov
lret
push
imul
out
pop
jne
inc
cwtl
inc
daa
pop
enter
js
pusha
dec
hlt
sbb
cmp
pop
shlb
push
inc
fsubr
ja
inc
mov
inc
add
mov
xchg
jge
pop
sub
popf
lea
fildl
test
push
push
push
xchg
lret
ja
mov
mov
sub
call
and
adc
pop
inc
xor
test
fistpl
or
mov
rcl
mov
xchg
dec
pusha
xorb
aaa
test
pop
or
mov
jg
push
pop
sub
js
rolb
push
sbb
pusha
shll
mov
push
jle
jl
inc
cmp
imul
xchg
clc
call
int
mov
sbb
adcb
cmp
aaa
xor
sub
jl
sub
lods
fisubrl
out
test
js
sub
sbb
js
push
clc
mov
test
mov
sbb
js
dec
sub
sub
js
push
clc
mov
test
mov
sbb
imul
sub
mov
jno
push
subl
add
xor
and
aas
xchg
stos
mov
lods
lock
sbb
std
mov
adc
xchg
xor
sbb
mov
test
sbb
xchg
pop
mov
test
xchg
lods
pop
in
mov
cmp
lret
cmpl
mov
mov
sub
pop
mov
pop
loop
loopne
lods
sbb
rolb
push
mov
mov
decl
hlt
jno
test
loop
lahf
jae
xlat
adc
adc
pop
mov
or
imul
adc
stos
es
mov
mov
dec
sbb
or
mov
mov
push
les
movsl
pop
jp
leave
shlb
pop
push
sbb
mov
imul
shlb
dec
pop
jecxz
mov
jne
lods
insl
xchg
pop
test
outsb
imul
stc
push
fwait
push
push
dec
jno
aam
das
mov
int3
pop
xor
bound
and
dec
in
xchg
push
sub
lret
ds
push
es
dec
or
stos
xor
jge
int
mov
fnstsw
push
or
mov
sub
bound
fwait
pop
dec
roll
jecxz
enter
add
or
imul
jae
mov
mull
xchg
pop
add
in
inc
adc
repz
sbb
add
or
iret
iret
fiadds
jae
iret
cld
and
mov
dec
ss
push
xchg
jne
lret
fisubrs
push
jo
enter
test
xor
push
xor
jbe
mov
cmpsb
jmp
arpl
pop
adc
dec
push
pop
xchg
or
call
out
pop
cmp
imul
gs
inc
movsl
cmpsl
scas
adc
pusha
jg
incb
cld
xlat
xchg
stc
cs
out
scas
imul
enter
inc
jmp
fsubrl
stos
test
sub
sub
leave
sbb
sub
sbb
hlt
js
daa
sub
out
jo
inc
cmpsb
fs
sbb
sbbl
addl
movsb
cwtl
lret
in
adc
mul
push
adcb
divb
inc
lea
dec
pushf
mov
sbb
xchg
push
mov
in
jnp
shl
xchg
add
outsl
outsl
arpl
clc
inc
jae
and
test
lret
mov
push
jg
adc
shrb
aaa
scas
and
in
inc
add
push
enter
and
lahf
add
and
cmp
push
lcall
cmp
dec
dec
dec
lret
pop
xor
fwait
push
aas
cmp
and
inc
out
idivb
inc
push
fldt
cmpsb
mov
jo
shll
sub
popf
scas
test
cmc
xlat
jp
bound
cld
mov
jecxz
jle
xchg
jae
lcall
cmp
fnstenv
outsl
jge
push
out
mov
ds
jle
xchg
sub
push
jo
cmp
jmp
sub
cld
in
movsb
aad
jae
hlt
scas
mov
shll
xor
and
or
cld
jge
inc
stos
in
xchg
and
in
and
dec
icebp
push
rol
inc
dec
leave
loopne
mov
inc
jno
pop
jns
ret
out
sbb
pop
xor
xchg
std
cmp
fwait
sub
xlat
stos
stos
xchg
mov
stc
pop
insl
add
cmp
sub
mov
push
xchg
repz
pop
loop
test
adc
aas
jp
lods
cmpsb
and
out
sbb
stc
es
testb
sbb
ficomps
push
in
pop
nop
push
xor
xlat
push
inc
out
call
cs
and
sarl
cmp
sahf
xchg
push
sub
mov
jge
imul
or
mov
iret
ljmp
scas
repnz
mov
mov
cmp
mov
test
mov
and
or
mov
into
add
in
mov
dec
sbb
stc
xchg
hlt
pop
dec
jb
fistps
jnp
jbe
aas
xchg
xlat
inc
repz
sbb
xchg
mov
pushf
pop
sub
fld
add
shll
ret
cltd
sbb
sub
repz
xor
bound
stos
inc
jl
adc
xchg
add
repnz
adc
int3
jp
adc
fidivrs
and
arpl
fstl
push
pushf
xchg
ds
mov
mov
jl
js
sahf
mov
mov
sbb
movsl
sbb
adcb
jbe
in
sub
pop
jb
cmpsl
fimuls
add
jne
gs
popa
sub
stos
fiadds
pop
or
xadd
sbb
bound
popa
cltd
mov
outsl
mov
ficoms
fwait
adc
add
mov
aas
pushf
shlb
sub
mov
les
jae
leave
jns
mov
adc
fsubrs
lea
imull
ret
nop
sbb
frstor
xchg
cmp
data16
xor
popa
sbb
jns
ljmp
mov
icebp
mov
sub
iret
fs
dec
pushf
and
sti
clc
aad
lret
ret
nop
je
push
sti
lahf
and
add
adc
cmp
cmc
pop
bound
out
addr16
ss
pop
cli
ret
mov
pop
and
repz
pop
cmp
stos
and
adc
jb
cmp
push
add
and
in
leave
callw
add
mov
lahf
and
sbb
cmp
mov
aas
sbb
inc
sbb
pop
pop
jl
adc
jl
or
movsb
shll
mov
stos
pop
pop
cmp
xor
lret
push
aad
enter
jns
adc
mov
push
in
pop
dec
mov
mov
sahf
pop
jp
jmp
cmp
enter
in
insl
pushf
lds
xchg
iret
mov
cmp
mov
pop
and
dec
mov
repz
xchg
cmp
mov
cmp
lret
cmp
scas
pop
aas
dec
js
cmp
pushf
loopne
hlt
dec
jne
jno
mov
sub
push
cwtl
or
xor
jae
sbb
in
mov
jmp
movsl
into
aam
mov
out
sti
cmpb
inc
push
testl
push
mov
das
pop
test
dec
out
stos
enter
mov
sub
mov
inc
scas
push
out
mov
in
dec
and
mov
arpl
or
enter
fisubrl
jg
xor
sbb
xchg
pop
push
in
movsb
xchg
pushf
aas
daa
popa
pop
lds
or
stos
nop
xor
jecxz
divl
test
cwtl
rcll
icebp
pop
mov
popa
arpl
and
cmp
add
mov
jbe
xor
sub
scas
clc
pushf
inc
mov
repnz
dec
xchg
jo
pop
ret
push
dec
xchg
xlat
inc
lret
sysexit
sbb
insl
mov
divl
shll
adc
call
das
das
ret
cmp
ljmp
inc
push
cmpsb
mov
roll
mov
mov
pop
pop
in
ret
jl
bound
mov
or
out
ret
scas
cmpsl
dec
dec
lock
fildll
xchg
outsb
in
jno
scas
mov
aaa
adc
mov
adc
cmp
lods
jne
cmpsl
push
xchg
daa
pop
ret
xchg
sbb
dec
or
or
aaa
in
out
push
mov
xchg
xor
loopne
in
lock
in
and
mov
and
mov
cmp
xor
dec
fpatan
inc
jle
cwtl
nop
pop
leave
adc
mov
mov
ss
cmp
shr
cmp
daa
inc
sarb
push
into
xor
ljmp
stc
and
loope
pusha
xchg
hlt
xor
cmp
push
lea
pop
lods
sarl
dec
cmpsb
mov
or
int3
popa
jbe
xchg
jl
mov
stos
dec
push
add
xlat
push
iret
enter
mov
adc
imulb
mov
dec
scas
cmpsl
cmp
sti
xor
add
in
mov
pop
fs
test
cmp
mov
add
cld
icebp
fldt
push
sbb
mov
jl
enter
xchg
ja
stos
out
cmpsb
or
sub
sub
mov
pop
int3
push
cld
jbe
xor
addr16
mov
in
inc
push
mov
sub
jo
push
or
jo
or
icebp
int3
loope
sub
push
popa
xchg
pop
shl
cmp
xor
mov
sub
and
cmc
inc
lods
sub
sub
cmpl
and
or
ja
repz
ret
mov
add
int3
push
or
rcrb
and
aad
pop
pop
xchg
jge
or
pop
call
mov
scas
push
push
adc
jmp
es
dec
and
jp
or
mov
leave
test
add
pushf
lahf
notl
lea
fcoms
neg
adcl
and
fistl
out
dec
push
lods
fnsave
cwtl
daa
inc
xor
test
push
push
jge
aad
lret
and
sub
pop
mov
repnz
xchg
lds
dec
and
sti
mov
stc
dec
in
jb
add
dec
pmullw
xchg
imul
lcall
ljmp
or
sub
mov
cmpsb
push
stos
or
cmp
into
in
out
daa
xor
sub
sub
or
jbe
mov
notl
mov
sbb
shlb
xor
fisubrl
fldcw
in
movsb
inc
rcrb
inc
xor
les
and
sub
ljmp
lret
add
mov
lock
sub
andb
call
imul
sbb
jge
cmp
pop
and
inc
pop
out
int3
aad
fsubl
aad
xchg
bswap
xor
pop
sbb
lahf
ret
push
scas
lods
cmp
push
push
sarl
dec
push
lds
sub
popa
add
push
adc
das
repz
xchg
nop
gs
xor
jns
insl
xor
jmp
dec
outsb
push
cmc
aam
jbe
sarl
xchg
pop
lahf
mov
arpl
int3
je
cmp
repz
in
pusha
mov
jecxz
jge
out
jnp
and
fisttpl
and
lret
leave
push
cmp
pop
aas
and
adcb
in
jae
arpl
shll
shll
pusha
bound
icebp
andl
in
repz
xor
in
out
clc
xorl
jg
out
sarb
push
cwtl
outsl
jp
jle
decl
mov
jle
sti
xchg
xor
dec
scas
in
repnz
and
adc
xchg
pop
flds
xchg
bound
dec
dec
inc
fdivs
or
pushw
cld
add
inc
jp
dec
xchg
xor
fnstsw
iret
mov
faddl
ljmp
mov
mov
ljmp
cmp
mov
pop
mov
adc
flds
add
jl
lea
in
mov
popa
dec
lock
mov
xor
in
xor
jno
jne
push
push
jp
xorl
out
push
push
enter
adcl
mov
mov
mov
jo
dec
lret
sub
cmp
adc
adc
jns
sbb
inc
rorl
xor
xor
sarb
loope
mov
stos
mov
mov
imul
imul
jnp
cmp
add
sbb
jmp
sahf
jl
movsl
push
xchg
scas
sub
dec
xchg
in
imul
adc
add
lret
add
bound
lcall
loope
rclb
mov
aaa
jne
jb
mov
pop
jb
and
jo
aaa
pop
sub
push
jecxz
inc
out
loop
stc
cmp
jl
das
addl
stos
sti
idivl
jne
mov
mov
inc
pusha
mov
ficompl
ret
outsl
xchg
sbb
jl
pop
sti
sub
add
xchg
punpckhbw
xchg
push
pop
mov
aam
mov
jg
mov
jb
call
repz
orl
push
popw
leave
or
sbb
test
lahf
dec
frstor
lcall
cmp
into
sbbl
cmp
add
ret
out
dec
data16
xchg
inc
out
or
mov
mov
dec
lahf
je
inc
mov
lods
les
sub
std
mov
out
int3
sbb
es
push
push
dec
repnz
or
adc
jg
sbb
and
lret
call
int
mov
and
bound
test
leave
mov
adc
push
fidivl
or
dec
pop
xor
pop
ja
pusha
dec
mov
cmp
jnp
mov
push
add
fisttpll
mov
adc
xchg
outsb
or
dec
or
pop
pop
and
or
cmp
into
cmp
pop
jle
add
mov
lds
and
imul
push
jb
pop
inc
cmp
xlat
test
mov
loop
mov
repz
out
mov
out
and
jp
jne
sub
cli
jecxz
iret
sub
out
out
fldt
cmp
or
out
out
adc
lock
or
es
icebp
leave
add
lods
inc
das
and
inc
mov
jmp
adc
cmp
pop
fisubs
data16
jp
std
fstp
cmc
add
sbb
mov
insl
sub
mov
push
inc
jno
push
jae
jecxz
cmp
cmp
mov
fdivrl
inc
pusha
mov
call
jb
lock
adc
push
lods
fldl
dec
and
orl
clc
jb
lods
mov
inc
or
xor
inc
aam
popf
mov
inc
insb
mov
or
out
aad
lret
cmpsb
lods
stc
jg,pn
lret
jo
loopne
shrb
popf
idivb
call
pop
cmc
loope
es
xor
repnz
loope
push
pushf
pop
adc
sub
cs
push
jbe
fiaddl
ret
add
fstl
pop
bound
test
call
scas
ljmp
push
jne
push
loopne
sub
in
sbbl
test
repz
jp
mov
push
ljmp
add
sub
scas
and
cmp
sbb
and
inc
shrl
mull
pop
loop
insl
ret
mov
push
adc
cltd
gs
xchg
mov
jns
insb
dec
popa
adc
lods
pop
xorl
and
fwait
or
jmp
int
out
sbb
rcrl
mov
sbb
insl
std
fprem
repnz
mov
sarl
dec
push
xor
and
cltd
inc
rclb
mov
in
mov
mov
mov
push
sub
inc
jns
outsl
repnz
ret
rcrb
mov
std
ficoms
imul
cli
mov
pop
fadd
mov
cs
ficompl
xchg
pop
pop
inc
call
stos
insl
loop
xchg
das
dec
test
mov
fcmovbe
push
pop
add
pop
pushf
sti
cmpsl
push
outsl
cltd
lahf
sbb
cmp
cmp
mov
inc
or
fs
rcl
std
dec
pop
test
or
in
mov
push
ret
out
sbb
push
sub
ljmp
jg,pt
sbb
cld
mov
stos
popa
sbb
push
test
push
sbb
neg
lret
out
lea
std
insb
shlb
sbb
popa
shr
mov
push
jecxz
mov
imul
push
arpl
pop
add
xchg
sbb
fmuls
mov
fsubrl
cltd
ror
inc
fwait
or
xchg
lahf
jo
sub
inc
adc
jae
incb
jo
pop
fsubrs
mov
or
jle
push
shl
push
or
adc
scas
loop
insb
insl
adc
sbb
adc
mov
std
test
sbb
jp
loopne
adc
insl
mov
ja
lds
push
mov
loop
es
xchg
or
repz
sbb
loop
daa
dec
cmp
les
sub
xor
mov
jecxz
cmpsb
add
xchg
sahf
sub
pop
out
aam
mov
int
inc
or
pop
insl
lock
sbb
vcvtpd2dqy
out
in
ljmp
jnp
sti
test
gs
and
dec
cmp
xchg
inc
je
cwtl
inc
data16
push
in
xchg
cs
out
insb
mov
lahf
jp
popf
jb
and
popa
push
mov
dec
or
push
cmp
pop
inc
test
icebp
sub
pop
lahf
add
shlb
es
cwtl
jbe
sbb
call
xchg
dec
mov
cmpsb
jp
jp
int
xchg
cwtl
dec
int
pop
andb
add
lods
xor
in
popf
stos
das
fistps
cmpb
fwait
push
bnd
loop
and
ret
icebp
add
fcmovne
insl
and
imul
les
out
sbb
dec
out
mov
int3
cli
rcr
cltd
dec
add
push
cmp
cmp
jge
scas
jle
aam
cmpl
outsb
scas
mov
jecxz
addr16
cmpsb
movsl
xlat
filds
mov
mov
jmp
aam
repnz
adc
and
sub
in
mov
jae
dec
xor
sub
popa
in
popa
rorl
fcoml
jb
int
xchg
in
daa
insl
pop
and
adc
scas
shll
xchg
adc
fimuls
std
push
inc
popf
add
daa
or
dec
pop
mov
xor
cmp
push
les
mov
adc
push
dec
std
fldcw
mul
into
out
push
int
test
dec
jo
push
ja
adc
outsb
nop
loopne
cmp
mov
add
pop
imulb
bndldx
mov
dec
cmc
hlt
shlb
push
stos
xlat
mov
je
fcomp
out
mov
sti
ja
sbb
cld
cli
and
cmpsl
cmp
orl
push
xor
sbb
int
cli
imulb
sub
add
aam
bound
repnz
pop
xor
flds
mov
lods
ljmp
inc
bound
mov
pop
pop
call
fcmovu
or
adc
dec
lock
adc
xchg
stos
cmp
lods
mov
push
shlb
popf
or
pusha
lret
jle
loopne
mov
addr16
mov
xchg
mov
push
adc
xor
pusha
mov
xor
xchg
lcall
mov
xchg
xchg
xor
push
cwtl
mov
or
jg
jne
pop
inc
jb
and
push
and
out
push
sbb
adc
insl
loope
jo
jae
pop
pop
push
dec
inc
test
lock
roll
lret
push
cmpsl
xor
jnp
cmp
add
or
mov
add
and
push
loope
in
popf
inc
pusha
sbb
orl
aam
mov
inc
dec
fsubl
pop
cli
xchg
pop
jbe
mov
enter
scas
loop
mov
push
jne
ret
cmpsl
insl
mov
jl
xchg
mov
pop
push
jbe
cltd
daa
jmp
rol
icebp
sbb
mov
mov
rep
jmp
add
and
cwtl
popa
add
fisubs
mov
test
test
idiv
xchg
or
xor
mov
push
outsb
mov
out
dec
cli
call
lret
jle
into
pop
jne
dec
popf
and
xchg
mov
xchg
rol
push
rorb
fbstp
fadd
mov
repnz
pop
fwait
js
pop
xor
sub
sub
pop
mov
dec
shl
adc
adc
mov
cmpsb
jnp
inc
stc
cs
lea
das
hlt
lds
xchg
gs
push
in
cltd
movsb
mov
xor
aad
xor
icebp
aam
mov
addl
jg
or
pop
sub
movsl
xchg
rclb
and
push
in
filds
push
in
es
test
mov
adc
jg
iret
insl
cmpsb
data16
inc
dec
dec
xchg
icebp
in
pop
cmp
fucomp
fwait
cmp
inc
loope
lret
pusha
cmp
mov
xchg
das
scas
cwtl
or
out
sub
lods
jnp,pt
std
fcmovbe
loope
lock
xchg
add
cs
ret
js
xor
pop
inc
addl
and
shr
push
aad
lods
push
push
pop
pushf
es
and
loop
cmpsb
sahf
fsubrp
push
fldenv
in
adc
sub
ret
pop
gs
inc
lds
cmp
xor
divb
inc
js
bound
mov
push
jnp
shrl
fcomip
jecxz
mov
xlat
xor
testb
xlat
mov
fisttpll
fisubrl
cmp
pop
aas
jmp
inc
mov
js
adc
movsb
cmp
mov
loopne
test
xchg
xlat
mov
outsb
test
inc
addr16
sarb
andb
test
dec
pop
push
mov
ret
leave
adc
mov
rcll
mov
in
sbb
and
jno
mov
int
cmp
bound
jle
jecxz
jo
xchg
push
and
sbb
mov
and
xchg
ret
fcompl
xor
jl
ret
rol
mov
xor
mov
dec
loope
push
pop
out
outsl
fistps
dec
pop
sub
int3
or
sub
cltd
or
call
and
in
ds
sbb
popl
sub
jb
fwait
aas
jecxz
xchg
sub
shll
popf
lock
test
aas
cwtl
jae
call
push
push
fisttps
fdivp
shrb
aam
fbstp
rcrb
mov
leave
cmpsl
ret
into
std
addr16
xchg
lods
jmp
stos
inc
stos
cmc
xchg
pop
xchg
icebp
adc
fsub
je
sub
jmp
pop
scas
inc
movsl
sbb
inc
popf
sbb
inc
push
test
ret
lcall
mov
fs
xor
addl
dec
lods
jo
xchg
stc
scas
addr16
fwait
lret
sti
fdivl
mov
mov
leave
jb
or
outsb
movsb
xchg
call
adc
jmp
dec
pop
push
mov
rep
fisubrs
shrb
fsubr
lods
jle
cmp
enter
push
jp
dec
push
adc
jl
cmp
jl
jnp
dec
add
lea
push
mov
xchg
call
xchg
lds
xchg
add
mov
imul
push
ret
jmp
or
loopne
lret
or
inc
lods
cmpsl
cmpsl
rcrb
inc
mov
push
int3
pop
cmp
xor
in
jbe
mov
cmpsb
test
pop
lods
pop
loop
mov
fnstsw
dec
stos
pushf
lods
pop
dec
lcall
arpl
inc
je
cs
je
aad
add
sub
fwait
push
dec
lret
mov
hlt
outsl
dec
adc
add
dec
mov
inc
popl
mov
ret
adc
mov
dec
loop
push
and
cmp
dec
pop
add
and
aam
lods
mov
inc
push
dec
lcall
daa
dec
mov
lock
xor
movsb
dec
push
mov
xchg
cmp
aaa
mov
dec
adc
aad
sahf
testl
push
shll
add
mov
aas
and
xchg
xchg
cmpsl
in
popa
in
pop
faddl
pop
out
aas
imul
js
dec
xor
pop
sub
js
push
clc
mov
test
mov
sbb
js
dec
sub
sub
js
push
clc
mov
test
mov
sbb
js
dec
sub
sub
or
pushf
call
lods
test
mov
add
mov
add
sub
js
call
push
adc
test
scas
and
pop
notl
out
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
rolb
add
cld
add
add
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
lahf
add
add
add
jl
add
je
add
insb
add
add
add
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
add
add
add
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pop
add
add
add
mov
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
hlt
add
add
add
add
add
adc
add
sbb
add
and
add
aaa
add
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
add
add
push
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
add
faddl
add
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jg
add
insb
pop
add
fs
add
pop
pop
add
push
pop
add
dec
pop
add
inc
pop
add
cmp
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
pop
add
mov
pop
add
rolb
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cmp
add
pop
or
add
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
aam
add
fmull
add
in
add
in
or
add
or
add
or
add
add
pop
or
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
add
cmp
add
dec
or
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
