mov
mov
mov
mov
add
xor
push
push
mov
mov
push
push
add
push
mov
mov
mov
mov
push
push
push
push
push
push
push
movb
call
pushl
mov
push
call
pushl
call
xor
inc
ret
push
mov
sub
cmpl
push
mov
je
cmp
je
mov
mov
push
push
mov
call
mov
xor
mov
mov
movl
test
je
mov
add
mov
xor
xor
call
cmpl
mov
jne
lea
push
call
call
mov
movzbl
push
pop
cmp
sbb
and
add
mov
mov
movzwl
mov
movzwl
xor
movzwl
xor
lea
push
call
mov
xor
xor
pop
pop
test
jne
mov
call
not
mov
mov
or
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
push
lea
push
push
call
add
leave
ret
nop
add
add
add
cmp
leave
push
add
add
add
add
add
int
inc
adc
cmp
add
add
add
add
add
add
add
add
add
popa
in
add
add
fildl
add
add
adc
add
imul
add
stos
in
mov
and
sti
add
jecxz
sbb
enter
push
pop
pop
xchg
fcoms
mov
push
or
incl
clc
xchg
decl
mov
lea
and
clc
cld
test
popa
insb
add
mov
add
push
push
add
shr
incl
or
inc
add
add
adc
inc
sub
loopne
add
xor
jmp
push
push
push
adc
or
std
popf
cld
mov
inc
or
inc
incl
push
cld
jnp
push
enter
add
push
clc
test
in
add
add
lret
movb
test
pop
hlt
add
add
add
add
stos
int
add
add
inc
je
inc
shrl
inc
inc
outsl
gs
gs
insb
mov
outsl
outsb
outsb
je
dec
jns
outsl
je
pop
inc
cwtl
dec
je
dec
push
gs
jge
inc
insl
insb
adc
insb
dec
outsl
jae
push
jne
outsb
jbe
je,pn
je
je
insb
add
or
add
add
fwait
mov
sub
add
add
add
shll
cmp
shll
jne
in
shr
pop
test
jle
fldl
pop
xor
inc
or
jecxz
push
loopne
jge
dec
mov
pop
movsb
push
shl
ja
jo
inc
ret
lahf
fdivrp
add
jmp
mov
js
out
and
push
mov
push
mov
pushl
or
cmp
and
mov
sub
mov
mov
orb
push
bound
in
mov
das
sahf
mov
pusha
sub
shll
push
ss
sahf
xor
mov
outsb
sbb
mov
jo
stc
cli
outsl
mov
jo
in
in
std
test
insl
jnp
sti
mov
imul
mov
xor
ds
jl
jp
clc
fisubs
aaa
je
push
pop
cs
jmp
stos
pop
pusha
adc
cmp
mov
mov
add
add
and
push
adc
push
pop
repz
xchg
push
jge
int
out
lods
shlb
ror
xorl
mov
ljmp
mov
stos
popf
insb
mov
jae
js
or
add
jo
js
aas
xchg
fwait
aad
jns
jge
cmp
add
and
les
mov
sarl
jmp
sbb
xor
je
fdivrl
push
in
fwait
inc
inc
mov
sti
add
xor
dec
out
mov
pop
pop
sbb
jecxz
push
jnp
sub
mov
jnp
insb
ljmp
push
mov
into
call
call
dec
inc
xchg
repnz
dec
mov
or
in
mov
insl
sub
fistpl
dec
rclb
jae
mov
test
mov
jb
cltd
jecxz
xchg
jno
je
fwait
std
sub
sahf
jo
imul
pushf
ficoms
xor
fidivrs
jge
or
fldl
and
gs
pop
dec
in
jp
out
xor
jecxz
hlt
inc
add
je
pop
enter
adc
cmp
pop
push
testb
jno
pop
dec
sahf
push
int3
lea
pusha
jo
pop
jle
xchg
sbb
repz
fiaddl
sbb
jae
inc
and
or
mov
fucomip
je
xchg
xchg
loope
cltd
call
push
scas
and
scas
negb
outsl
cmp
out
enter
inc
add
mov
jae
les
jae
lret
pop
sbbl
ds
dec
pushf
nop
add
aaa
repz
dec
jns
pop
mov
fisubrs
mov
lahf
mov
jo
sub
ja
xchg
outsb
aam
xor
pushf
cmp
cmp
push
loop
ss
pop
mov
mov
jbe
cmp
mov
mov
xchg
jl
xorl
or
in
imul
cmpsb
or
ljmp
and
lock
dec
dec
xchg
add
mov
repnz
cld
pop
shlb
ljmp
xchg
push
fs
jmp
dec
jecxz
fs
jp
cwtl
scas
clc
cmc
shl
inc
push
xchg
lods
loopne
mov
pop
inc
pop
xorl
nop
incl
out
scas
clc
jl
sbb
scas
ss
cmp
aad
inc
lods
addl
or
push
cwtl
jle,pn
mov
test
jae
cmc
je
sbb
jl
adc
mov
and
mov
bound
lods
push
sbb
sub
inc
sbb
sar
jo
arpl
addr16
inc
dec
xchg
fmuls
cld
lret
addl
pop
ret
lock
mov
fiadds
add
je
arpl
and
popa
je
cmpsl
lea
xor
test
movsb
cmp
dec
repnz
aaa
cwtl
das
fnsave
sbb
adc
cli
and
jmp
nop
add
inc
mov
lods
ja
or
mov
mov
fnstsw
add
and
or
pop
fwait
sar
adc
adc
aad
shlb
or
jmp
fwait
mov
cmp
aad
lds
pop
fstpt
inc
ret
stos
cmc
lds
add
mov
inc
rcl
in
add
cmpsl
jg
add
sbb
cmc
cmp
lds
aas
stos
bnd
mov
sub
rcr
stos
pushf
call
sub
and
and
xchg
sub
cltd
pavgw
and
rolb
rcrb
nop
inc
repnz
push
xor
and
int3
daa
cmp
push
outsl
int
aas
data16
sarb
sub
lock
dec
icebp
aam
jb
fimull
dec
test
popf
movsb
push
ja
out
lret
push
mov
lret
sbb
xor
fidivl
repnz
mov
mov
adc
ljmp
fwait
xchg
int
or
popa
nop
sub
stos
and
jmp
fcoml
hlt
dec
adc
fmull
mov
pusha
xchg
les
in
and
jae
inc
mov
std
shlb
ss
xchg
and
pop
sbb
movsb
repnz
sbb
loopne
jecxz
xchg
imul
sub
add
mov
nop
repz
sbb
sub
jle
dec
stc
mov
lods
adc
xor
sti
push
int3
or
sahf
sahf
dec
insl
xor
lds
scas
pusha
push
adc
sarl
hlt
stc
popa
imulb
mov
es
out
mov
pop
test
add
and
add
xchg
cli
pop
gs
or
jl
dec
aad
hlt
add
das
adc
sahf
sub
sarb
xor
push
fs
inc
cli
stc
push
add
andl
adc
dec
es
out
jmp
jne
fisttpll
pop
mov
out
testl
hlt
ljmp
mov
or
or
out
daa
pop
sbb
loop
repnz
inc
stc
adc
or
ret
pop
lds
das
sbb
inc
mov
dec
jo
add
aam
cmp
fnstenv
orl
sar
std
dec
cmp
inc
dec
outsb
dec
stos
add
ds
pop
loop
lea
out
das
ja
push
jno
bound
adc
insl
xor
sbbl
test
push
inc
sahf
fsts
adc
jl
mov
call
sbb
in
jg
mov
icebp
fmuls
xchg
dec
or
dec
lock
lcall
push
cmp
mov
jno
jge
dec
enter
les
mov
mov
in
xor
xchg
pusha
pop
ljmp
pop
jecxz
cmp
pop
sbb
sti
adc
outsl
sbb
aas
adc
not
jae
jmp
pop
jg
jb
dec
cmpsl
mov
or
add
jmp
pop
xchg
or
sbb
sbb
mov
jecxz
push
sti
ds
jmp
and
fwait
movsb
or
aad
push
and
and
jle
adc
icebp
js
and
adc
jl
loope
inc
in
in
leave
inc
xor
jnp
xor
jne
je
push
lcall
mov
pop
cmovb
andb
dec
push
out
xor
adc
int
fs
mov
lahf
test
mov
stc
lea
or
cmp
dec
jge
add
push
bound
das
pop
cli
js
test
push
mov
and
adc
pop
in
and
rcrl
and
jbe
push
mov
xchg
jmp
in
adc
mov
or
loope
sahf
in
dec
add
mov
push
test
and
and
push
outsl
icebp
ret
dec
sbb
outsb
inc
int
lret
fnstenv
loopne
xchg
mov
sar
scas
in
imul
add
add
ds
loopne
mov
es
std
dec
sub
mov
adc
cmpsb
leave
mov
sti
movsb
add
in
negl
les
xor
jge
jle
andb
cmpsl
cwtl
rol
test
push
add
dec
mov
mov
es
mov
ficoms
push
stos
es
insl
in
and
dec
sub
into
icebp
outsl
and
js
out
outsb
bound
lods
dec
fstl
lea
or
or
test
clc
stos
xchg
mov
cwtl
mov
bound
xchg
sub
xor
jnp
outsb
loop
sbb
xchg
inc
mov
add
orl
xchg
mov
add
int3
cmpsl
dec
stc
push
xor
mov
xorl
sbb
xchg
fincstp
pop
pop
out
or
push
lock
sbb
inc
data16
push
imul
outsl
xchg
fwait
mov
push
mov
inc
in
xor
jmp
js
pop
movsl
test
mov
and
bound
mov
arpl
sbb
or
das
inc
xchg
loope
inc
jmp
or
cmc
sub
jg
call
inc
push
mov
inc
jae
into
test
mov
insl
ds
sahf
or
xor
jnp
loope
out
pushf
jmp
in
jl
in
push
cs
cmpsb
adc
add
push
jbe
cltd
and
mov
movsl
xchg
inc
flds
inc
cld
scas
mov
cmc
or
clc
inc
mov
gs
stc
popf
out
xchg
aas
lock
ss
mov
dec
fldenv
cli
repz
cmp
sti
neg
fs
shl
sub
dec
pop
jo
pop
negl
lret
jp
mov
sbbl
pop
mov
or
and
out
jp
cmp
mov
loopne
or
xchg
adc
or
mov
mov
xchg
and
lds
lock
jns
sbb
pop
mov
les
pop
mov
push
jmp
dec
xorb
pusha
js
cmpsl
cmp
daa
ret
inc
xor
mov
inc
mov
inc
dec
push
xchg
xor
xchg
shll
mov
mov
sub
pop
mov
sub
out
sbb
pop
fwait
sbb
xchg
mov
jae
bnd
idivl
icebp
lcall
int3
movsl
sbbb
and
xchg
rol
jmp
xchg
mov
fwait
jecxz
xchg
mov
fs
movsl
mov
or
mov
sub
dec
sahf
xor
adc
adc
sbb
js
in
sbb
test
mulb
aas
push
movsl
inc
push
fs
push
aas
lret
add
inc
cs
dec
sub
xor
popf
hlt
loop
shrb
xchg
pop
mov
cmp
sbb
push
cli
xchg
xchg
sbb
sbb
mov
loopne
bound
inc
sar
mov
pop
andl
shrl
iret
repz
jb
dec
scas
jb
lds
push
mov
call
and
loopne
or
scas
in
fstps
mov
sti
pop
jmp
in
repnz
xor
call
ss
lods
inc
pop
int
xchg
pop
pop
sub
outsb
inc
xor
fs
jb
jne
pop
aad
sarl
xchg
outsl
test
movsw
dec
cmc
cmp
pop
pushf
and
test
insl
add
loop
dec
mov
insb
or
xchg
cwtl
sub
add
inc
push
mov
in
inc
sub
movb
inc
icebp
pop
add
xchg
adc
sbb
adc
mov
mov
jne
inc
stos
inc
or
gs
in
or
notb
ja
push
js
xchg
sub
orps
mov
inc
adc
dec
dec
aas
or
sti
insl
mov
lods
push
mov
xor
sub
adc
outsb
loopne
jo
subb
add
inc
dec
or
cmp
and
cmp
mov
scas
push
xchg
loope
sahf
mov
cli
dec
adc
int
cmpsl
and
jl
test
sub
sbb
and
lret
cld
fisubrl
leave
and
js
ds
test
jns
aad
iret
push
stos
xlat
cltd
jmp
add
movsb
sti
mov
push
and
rolb
aaa
sub
jbe
loopne
int3
adc
test
cmp
stos
and
std
mov
cs
fbld
test
fistl
sub
xor
arpl
and
adc
xor
jo
jns
or
and
repz
mov
mov
shrb
xchg
in
fisubrs
add
mov
leave
jl
jns
mov
jle
jge
leave
scas
jne
adc
pop
and
in
push
mov
sub
cwtl
in
repnz
xor
xor
sub
xor
cmc
sub
and
jl
lret
jp
test
shll
rcl
and
jae
lahf
out
cmp
xchg
test
mov
sarb
push
addr16
popf
dec
or
mov
or
and
push
pop
hlt
cmp
cld
js
jle
pop
cli
sti
or
jge
aaa
add
sub
add
sub
mov
leave
in
clc
daa
mov
enter
mov
icebp
je
sbb
mov
jl
jmp
mov
sbb
inc
xchg
xor
fs
add
push
cmp
mov
shll
in
jle
leave
push
push
pop
clc
or
xor
xor
lods
in
jp
and
out
or
or
pop
repnz
pop
inc
loopne
adc
mov
test
fstpt
rcrl
and
fldl
js
inc
jl
jo
rcrl
fcoml
ljmp
int3
lods
push
xor
rolb
xchg
push
lock
dec
fidivrs
xchg
pop
pop
out
mov
xor
jne
mov
sub
fisubrl
ret
jle
push
clc
out
mov
lret
bound
and
gs
fdivs
cvtdq2ps
pusha
fisttpll
jbe
sub
mov
xor
mov
add
mov
fildl
popf
mov
and
jmp
imul
pop
mov
push
jns
insl
lret
cwtl
xor
ret
mov
int
add
fcmovu
call
pop
outsl
cmp
stos
into
cltd
sarl
repz
dec
adc
cs
aad
or
ss
in
xchg
cwtl
and
add
adc
je
lock
xchg
pop
shlb
xchg
sbb
xchg
lds
roll
add
inc
gs
js
and
lahf
in
adc
in
mov
outsb
sbb
cmpsl
and
and
adc
insl
sub
cmp
loop
lret
shlb
mov
and
into
dec
rorb
jae
lods
mov
sarl
mov
lahf
pop
mov
fistl
jmp
mov
sbb
sub
enter
mov
mov
cmpsl
pop
mov
push
adc
dec
test
or
dec
push
das
fbld
and
and
and
xchg
mov
ja
push
or
mull
push
xlat
jne
sub
sub
imul
imul
mov
cmpsl
fwait
loop
xor
test
or
jne
fwait
ljmp
push
cmc
xchg
imul
mov
inc
and
js
or
cld
outsb
scas
fldcw
inc
inc
adc
lahf
xor
fnstsw
sub
cmp
push
push
scas
out
mov
xor
popa
addr16
mov
jb
inc
test
das
push
xor
inc
in
xchg
scas
push
inc
push
mov
icebp
cwtl
aad
dec
enter
mov
js
sub
mov
jno
sbb
fs
enter
popf
mov
lods
outsl
outsb
cmp
cltd
push
test
pop
and
je,pt
in
mov
cmp
aaa
loope
ret
divb
jne
in
stc
out
sbb
lret
mov
push
mov
stos
insb
aad
or
insb
fldl
cmc
shlb
inc
insl
sub
push
xchg
rorb
stos
sub
out
sub
mov
xchg
sub
js
jo
adc
jl
orb
bound
imul
cmc
pop
adc
inc
clc
mov
or
or
pop
xor
sbb
lods
sarb
cmpsb
rol
mov
xor
inc
jecxz
xchg
mov
aad
add
pop
outsl
or
cmp
psrad
sti
xor
out
mov
dec
icebp
std
sub
rcrb
pavgb
out
fcompl
adc
insl
jo
mov
push
dec
lret
add
jns
push
lret
sbb
int
sbb
xor
inc
mov
fs
call
ret
sub
xor
pop
mov
and
jle
mov
aaa
mov
out
dec
mov
inc
sbb
cmpl
lock
jmp
cmp
adc
xchg
add
or
fidivs
scas
sbb
mov
rol
xor
subb
nop
ds
in
cwtd
subl
mov
sbb
xor
outsl
push
pusha
jp
mov
mov
divl
test
xchg
pop
dec
sub
and
xorl
lods
xor
test
push
lds
mov
lret
inc
rclb
mov
sub
sahf
mov
cltd
mov
pusha
jbe
pop
stc
popf
push
mov
clc
das
or
mov
out
cmpsl
fsubrp
test
jmp
daa
test
lret
fiadds
jno
sahf
mov
xor
repz
add
xorl
lret
jp
test
xchg
push
outsl
dec
mov
sahf
and
js
cmp
jmp
mov
xlat
push
jmp
mov
scas
insl
sbb
scas
js
mov
pop
add
jo
test
mov
mov
push
cmp
repnz
stos
ja
cmp
int
adcl
cmpsl
fisubrs
jne
mov
aaa
aaa
mov
jmp
mull
pop
aam
mov
sub
ljmp
mov
push
cmpsb
mov
dec
jge
orl
cwtl
in
lods
sub
testb
int3
mov
les
inc
xchg
mov
lcall
mov
mov
jne
cmp
mov
bound
aam
mov
cwtl
push
rorl
pop
int
mov
insl
fidivrl
push
int3
xchg
arpl
pop
lcall
add
cmpsb
and
cld
les
cmpsl
fisttpl
jae
sahf
sbb
jo
push
pop
in
push
fsubrl
into
and
xor
sub
clc
mov
loope
push
aaa
dec
rclb
xchg
xlat
pop
gs
mov
or
sbb
jno
shr
mov
ja
jecxz
inc
dec
sbb
adc
adc
adc
popf
pop
pop
inc
inc
push
pop
inc
mov
mov
adc
mov
push
jne
hlt
mov
pop
in
dec
cli
sbb
lock
sub
and
add
xchg
fisubl
cld
adc
cmp
les
addr16
pop
outsl
fsubrs
rcl
cmp
xchg
lcall
inc
mov
fsts
mov
scas
cmp
xor
sub
jae
stos
add
jecxz
fldcw
sbb
mov
add
add
sbb
add
add
stos
int
add
add
add
add
add
add
add
add
pop
add
add
dec
add
add
add
add
add
add
in
add
add
fiaddl
add
add
add
addb
add
roll
ja
mov
dec
int3
int3
int3
pop
add
add
add
add
dec
jae
and
add
mov
and
add
inc
add
add
lods
pop
add
add
add
js
fldl
add
add
insb
add
add
add
sbb
sbb
add
add
add
sbb
pop
add
add
and
popa
das
push
dec
push
subl
dec
dec
push
cld
add
sti
jecxz
jne
leave
in
js
fdivr
adc
mov
pop
adc
mov
pop
adc
lock
or
je
call
push
leave
in
mov
inc
or
dec
or
adcb
sbb
push
decl
call
mov
loopne
mov
mov
add
xor
push
loopne
inc
xchg
incb
jmp
push
pop
sub
rorb
decl
add
stos
push
add
add
loopne
add
mov
or
inc
insl
adc
push
clc
add
loopne
inc
adc
add
pop
add
add
add
cmp
sbb
stos
add
add
add
add
add
les
gs
add
fs
imul
movsb
add
jb
outsb
je
inc
fs
dec
add
sub
add
je
sub
insb
imul
inc
scas
jne
outsb
jae
adcb
imul
js
add
add
bound
add
add
adc
add
add
addb
mov
ret
push
das
je
mov
adc
fwait
jmp
mov
adc
mov
xor
scas
inc
ljmp
cli
ja
test
dec
cmpsl
sub
nop
loop
mov
inc
ds
scas
push
pop
mov
mov
adcl
jae
cmp
fsubrp
jns
xor
and
xchg
sub
pop
popa
lds
push
xchg
mov
movsb
jae
sub
lods
cmp
cmp
pop
pop
inc
jns
adc
cmp
repnz
lret
iret
adc
cs
sti
xchg
cld
xchg
add
loop
js
pop
scas
sbb
into
jae
out
dec
cmp
lods
int3
xor
out
cld
and
xchg
scas
lea
or
jbe
xlat
push
popf
mov
inc
jecxz
js
fstp
stos
mov
jae,pn
jo
mov
fsubrs
mov
outsl
xchg
bound
push
mov
push
adc
pusha
mov
ljmp
sub
fs
in
cli
in
jle
sub
subb
stos
jecxz
xchg
mov
mov
inc
add
mov
pop
add
pop
js
add
je
mov
push
test
lcall
out
in
push
imulb
lds
inc
mov
movsl
imul
push
stos
clflush
sub
mov
sbb
xchg
dec
xchg
mov
sub
mov
dec
push
lret
out
adc
cwtl
andb
jecxz
cltd
xor
cmp
mov
fs
aam
jl
mov
mov
insl
xchg
addr16
dec
orl
mov
rcr
sub
pop
xor
jg
fxch
dec
mov
jne
icebp
sub
pop
loope
int
call
cmp
mov
pop
adc
enter
fmuls
dec
cli
sub
in
in
mov
mov
pop
dec
lret
mov
outsl
adc
xchg
xor
adc
push
arpl
scas
out
cmpsl
xchg
scas
fyl2xp1
fs
lock
sahf
jae
push
in
ret
adc
mov
icebp
sbb
into
jg
dec
outsl
mov
xor
xor
jl
pop
sbb
push
cs
cmp
or
pop
adcb
arpl
adc
pop
mov
push
and
mov
cmp
fisttpl
cwtl
dec
sub
inc
cmp
sar
les
js
lret
fldt
das
sbb
jle
lcall
ret
pop
add
fwait
jns
clc
es
gs
add
insl
mov
cmp
cmp
mov
aam
add
xor
enter
nop
cmc
cwtl
inc
inc
filds
movsb
jmp
inc
out
std
mov
jecxz
sbbb
sahf
or
mov
insb
adc
or
mov
pop
lods
push
out
push
orb
pcmpeqw
inc
xor
bound
nop
pop
push
cs
ja
out
pop
lods
and
daa
inc
sub
mov
gs
cmp
mov
out
sub
pusha
dec
bound
lret
mov
add
pop
repnz
mov
les
push
popf
xchg
insl
out
repz
je
div
adc
lea
adc
scas
dec
hlt
or
inc
xor
dec
dec
loopne
xor
jno
bound
sarl
push
pop
pop
mov
sti
adc
iret
subb
xchg
mov
fisubs
insb
outsl
pop
inc
pop
ja
mov
fsubrl
leave
cmp
into
inc
stc
lds
fstpt
mov
xchg
lock
jle
sarl
dec
arpl
ret
cmp
push
out
lods
addr16
in
sub
and
movsb
and
adcl
fcompl
xor
in
fwait
pop
mov
negl
xor
ret
dec
pop
xor
cwtl
ficoms
or
jmp
outsb
sub
mov
pop
stos
add
fs
pop
call
xchg
fimuls
aas
cmpsb
imul
ret
rorl
cli
cmc
shrl
mov
or
movb
cmp
sbb
adc
cmc
fnstcw
icebp
movsl
jmp
loop
cmp
lock
dec
adc
adc
testl
and
enter
and
pop
mov
fcom
mov
iret
mov
inc
insl
jge
or
test
dec
jae
lods
sarb
jns
xchg
sub
adc
rclb
pop
data16
jns
filds
addr16
call
cmp
into
out
xlat
fs
pop
or
jecxz
aam
mov
push
sbb
add
sbb
test
cmp
jecxz
aas
enter
and
repnz
xchg
mov
or
fstpl
lret
xor
or
lea
insb
das
and
jns
rcrb
and
inc
dec
adc
or
dec
test
mov
sbb
dec
insb
push
xor
aaa
sarl
jae
cmp
mov
cltd
ss
sub
jb
mov
push
jns
inc
sbb
add
imul
data16
or
mov
inc
inc
mov
push
xlat
movsb
data16
in
testb
push
push
and
jmp
ret
lea
movb
icebp
add
add
sub
stos
cs
fwait
mov
fstpl
dec
push
jnp
pop
inc
call
jmp
loope
add
push
lods
jb
push
xor
or
sbb
je
jnp
push
popa
test
mov
out
mov
inc
iret
repnz
jns
xor
lock
jl
ss
popf
lret
loope
dec
lds
or
mov
pop
dec
sbb
test
or
inc
sub
cltd
scas
jg
or
mov
mov
mov
and
roll
lods
pop
inc
aam
pusha
outsb
cmp
fdivrs
scas
jae
add
in
rcll
daa
xchg
cwtl
inc
sbb
lods
out
adc
lock
xor
mov
jae
inc
push
pop
lret
pop
push
test
pop
mov
xor
mov
pop
inc
jmp
ficoms
arpl
aaa
xlat
testb
ret
jo
ret
or
push
xchg
popa
pushf
fnsave
js
movsb
in
mov
repz
cmpl
scas
test
rcr
icebp
repnz
es
decb
sti
ret
mov
sbb
jno
inc
movsb
loopne
cmp
nop
nop
jmp
lret
sub
insb
cmp
jae
xlat
std
repnz
aam
jno
scas
mov
out
sbb
push
cmc
jmp
les
inc
mov
xorl
aaa
cmpsb
loopne
data16
and
push
js
rorb
or
inc
jmp
mov
outsb
xchg
mov
pop
jbe
es
jecxz
cs
and
add
xor
inc
lods
xchg
orl
push
mov
xor
lds
shl
ret
out
sbbl
dec
fxch
push
jae
int
fisubrs
xchg
out
mov
push
mov
mov
mov
jmp
daa
das
int3
lahf
dec
ficomps
or
iret
cmpsb
lea
cmpsb
fidivrs
mov
xchg
or
hlt
lret
int
fstpl
pop
mov
cmp
and
lds
xchg
mov
xor
xchg
mov
push
sbb
xchg
jne
repnz
xor
adc
addr16
outsb
call
dec
mov
out
adc
push
fistl
cmpsl
jg
pop
sub
lods
push
in
mov
ret
rcl
stos
outsb
jbe
jae
movsb
int
mov
mov
stos
cmp
add
lods
call
lret
ss
pop
loope
enter
mov
mov
hlt
jne
xchg
and
fstl
fidivrl
test
mov
lahf
inc
jle
bound
test
jp
and
inc
mov
inc
jne
or
ja
push
cmpsl
rcll
clc
mov
or
mov
dec
mov
std
xchg
ljmp
jno
sub
jae
xchg
lods
mov
jle
push
shrb
loop
adc
lea
mov
cli
mov
cmpsb
mov
push
sub
inc
xchg
push
cmpsl
call
push
cmpsl
sti
mov
mov
test
xor
adc
adcb
fcmovnu
inc
leave
inc
jp
imulb
pop
push
xchg
push
mov
mov
je
jge
int
insb
dec
pop
mov
jge
popf
mov
mov
xchg
cli
call
xchg
inc
mov
loope
repz
and
mov
loop
add
cwtl
out
addr16
repnz
push
aam
ljmp
sbb
and
or
loopne
sub
stos
fwait
cmp
xchg
xor
sub
or
loopne
jb
pop
xlat
adc
push
push
jb
in
cmpsl
lcall
jb
call
dec
nop
sub
subl
xchg
js
test
jo
sub
pminub
mov
mov
loop
dec
lock
mov
xor
popa
cmc
add
and
lods
add
cmp
outsb
fs
xor
pop
sub
sbb
inc
mov
ret
mov
mov
jb
lods
push
mov
out
and
cwtl
xor
out
xchg
xchg
pop
mov
imul
sbb
cmp
sub
push
bound
or
jg
push
mov
cmp
xchg
mov
push
inc
arpl
mov
dec
rcll
and
cmp
jnp
in
xchg
pop
test
xchg
mov
sub
xchg
in
mov
and
notb
aas
jno
and
js
shlb
scas
xor
add
adc
nop
mov
lods
cs
xchg
outsl
lcall
cmp
aaa
repz
pop
hlt
jo
push
inc
arpl
popf
fisubrl
mov
pusha
mov
jmp
pop
inc
pop
rcrl
lds
jns
hlt
cs
cmp
mov
push
nop
jg
or
inc
into
std
add
insb
addr16
or
nop
shll
xchg
repnz
cli
andb
pop
inc
lret
fbld
es
push
fdivrs
inc
add
stos
sbb
stos
mov
push
jmp
std
addr16
sbb
arpl
in
mov
push
leave
rolb
imul
fs
xchg
ss
iret
lret
push
out
test
enter
enter
cmp
xor
xor
or
test
rol
and
cmp
imul
iret
popa
or
imul
jge
mov
fsubrp
fildll
cmc
jmp
daa
sbb
pushl
push
sbb
test
addb
inc
or
push
test
lea
fsubrs
int3
lret
imull
fcomip
shlb
dec
push
das
mov
lea
call
and
std
out
mov
scas
cmp
mov
lods
xchg
cs
cmpsl
jl
in
xchg
aas
daa
mov
outsl
cmp
fchs
cld
pop
pop
push
push
jns
les
push
dec
fcmovnbe
clc
stos
clc
fisttps
out
jle
int
enter
repz
xchg
outsl
jle
sbbl
xor
mov
in
push
fsubl
scas
insl
jle
xchg
or
pop
imul
sub
push
xlat
and
lcall
pusha
icebp
and
adc
pop
fwait
mov
mov
pop
push
mov
jbe
fnstcw
dec
mov
jmp
ret
mov
mov
test
inc
add
inc
push
cmp
lods
xchg
rcrb
push
int3
int3
sub
loope
xor
or
jnp
mov
loopne
mov
iret
xchg
arpl
cmp
scas
mov
xlat
das
pop
push
mov
addl
inc
aaa
cwtl
sahf
sub
cmp
jne
cs
in
xor
in
or
xor
mov
arpl
or
jnp
mov
clc
enter
adc
enter
mov
leave
lock
sarl
xchg
ret
pop
cmp
sub
fs
mov
xor
push
pop
xchg
or
xchg
icebp
adc
mov
pop
dec
adc
sbb
jge
jno
xchg
inc
stc
mov
fcompl
stc
pop
cmc
iret
sub
inc
and
mov
fdivl
out
cs
rcr
mov
dec
test
xchg
jno
sbb
aad
fdiv
jne
xor
insl
push
cmp
mov
subb
loop
jae
mov
sub
xor
ret
jns
or
xchg
xor
pop
push
and
xor
pop
notl
pop
pop
push
loope
cmc
arpl
and
add
mov
jge
xlat
adc
cld
xor
movsb
pop
sbb
sub
jg
cmp
lea
clc
test
popf
ret
test
or
adc
not
daa
sub
mov
and
add
out
aad
xchg
mov
js
pop
sbb
sub
pop
test
mov
or
inc
adcl
xor
lds
cmpb
dec
xor
jbe
add
inc
mov
mov
clc
adc
pop
cmp
cld
sbb
sub
sti
mov
and
mov
push
mov
mov
xor
sub
int3
pop
pop
out
call
sub
cli
clc
fstl
cli
sub
jae
pop
mov
xchg
mov
movsb
popa
cmpsl
push
test
pop
addr16
sbb
mov
adc
mov
outsb
ret
stos
aam
or
test
mov
outsl
inc
jle
or
icebp
push
in
lock
mov
outsl
xchg
pop
sbb
int3
xor
adc
aaa
fnstenv
in
inc
enter
sarl
jno
xchg
adc
scas
mov
xchg
test
shr
dec
mov
dec
mov
push
or
mov
mov
adc
cltd
nop
mov
ljmp
lods
xchg
out
enter
stc
repnz
jnp
fwait
add
mov
xchg
xchg
pop
jbe
or
add
movsb
pop
push
lahf
int3
lahf
mov
pop
loope
daa
or
mov
inc
cld
out
jle
pop
roll
cmp
inc
fistpl
sub
mov
dec
jl
xor
clc
ds
loope
sub
pushf
lea
out
mov
xchg
push
negl
or
lds
sbb
dec
stos
cs
fwait
scas
loop
sub
xchg
scas
mov
or
push
dec
xchg
push
xchg
fmull
push
mull
jno
mov
fucomp
xor
mov
cmpb
in
loopne
shrl
jb
insb
xorl
add
sbb
and
cltd
cmp
lock
mov
push
xchg
or
inc
xor
cmp
test
inc
jmp
test
cmp
daa
ja
pop
sub
xchg
ds
mov
lock
xor
dec
xchg
ret
imul
das
push
cmpb
dec
insl
out
bound
iret
push
pop
add
popf
xor
adc
inc
xor
adc
fldt
mov
and
out
adcl
xchg
xchg
sbb
fiaddl
mov
rep
lods
xchg
dec
or
lahf
cmp
dec
orl
sahf
shlb
shll
scas
popa
adcb
or
lcall
sarl
and
push
ds
xor
testl
mov
dec
jnp
mov
sahf
daa
out
mov
lahf
pusha
xchg
cmp
jge
dec
and
or
addr16
mov
iret
ret
lea
xchg
imul
cmpsb
sbb
das
inc
inc
loope
xchg
clc
inc
sub
sub
adc
or
and
cs
arpl
xor
lods
push
test
jg,pt
push
call
int
push
testb
mov
js
divb
dec
cmp
pop
and
pop
scas
push
jp
pushf
in
xchg
dec
std
std
and
xchg
aam
and
stc
and
and
and
jns
ljmp
jne
rorb
fbld
or
jne
push
mov
pop
outsb
sahf
mov
popf
pop
cli
mov
sub
mov
mov
mov
test
jbe
pop
dec
xchg
or
lods
dec
lea
ret
negl
rorb
jmp
push
cmp
js
mov
cli
add
cltd
or
fcoml
push
scas
shll
sbbl
adc
sub
pop
lods
xor
inc
nop
sub
movsb
mov
jmp
mov
cmpl
and
sub
orl
push
pop
lcall
daa
das
into
notl
pusha
xchg
pop
mov
xor
loopne
sbb
mov
aas
lgdtl
ljmp
leave
jp
pop
lds
shlb
int3
mov
jb
and
push
mov
movsl
push
mov
jae
outsl
xor
jmp
ds
fucomip
cmc
xchg
cmp
sbb
adc
or
fsubs
push
mov
sub
jae
adc
sbb
sbb
cs
jno
push
xchg
sbb
ffreep
add
cmp
jecxz
shl
arpl
xchg
scas
outsb
incb
cltd
sbb
adc
adc
out
enter
fs
sub
arpl
mov
pop
test
std
jmp
dec
sbb
mov
push
sti
jnp
cmp
adc
push
inc
aad
inc
xor
js
xchg
bound
aas
cld
sub
jmp
adc
lea
test
mov
mov
mov
xchg
mov
dec
xchg
adc
ret
mov
fwait
mov
xor
scas
jge
pop
filds
or
fiaddl
cmp
mov
lret
push
cmc
xchg
rcrb
insl
lods
mov
rorb
in
je
push
sbb
or
movsb
and
jns
mov
ss
fwait
jge
outsb
push
stos
int3
pxor
ret
cs
icebp
add
add
int
push
jae
mov
sahf
xor
mov
insl
sub
dec
ficoml
out
jp
jmp
push
aam
jnp
cmp
jbe
test
gs
lock
jbe
cmp
jg
dec
push
aad
adc
inc
cmp
add
xchg
out
jmp
xchg
ret
sub
xor
xchg
popl
xor
mov
dec
sub
jae
lock
outsb
jl
call
loopne
fstpl
movsb
xor
shlb
mov
pop
test
sarb
adc
and
addb
pop
negl
sbb
out
mov
pop
nop
sbb
test
mov
xlat
mov
and
inc
xchg
insb
in
sub
test
aas
imul
bnd
out
fstpl
das
es
xchg
stos
push
call
outsb
mov
sub
add
or
add
push
jnp
nop
mov
jo
add
add
add
xchg
add
lea
add
add
add
add
cmp
add
mov
add
add
and
add
add
add
add
rolb
add
add
xor
xor
xor
add
add
add
addb
add
add
stos
stos
std
add
mov
dec
int3
int3
int3
add
add
sbb
add
outsb
add
lds
or
lea
add
add
add
add
jge
add
add
add
add
add
add
arpl
xchg
pop
add
add
add
and
outsb
push
inc
mov
jo
push
jb
inc
mov
sti
mov
sbb
enter
mov
inc
les
push
lea
adc
notb
cs
call
adc
push
clc
adc
pop
dec
adc
jge
out
ret
add
push
incl
push
pop
decl
int3
inc
lea
adc
add
push
decl
adc
popf
jne
inc
inc
je
push
cmp
add
dec
add
cld
adc
lea
adc
push
cmp
inc
mov
rorl
inc
movl
adc
push
add
push
sbb
lea
add
add
add
add
add
gs
gs
inc
dec
je
gs
je
jo
sbb
insb
jo
jb
inc
inc
jb
add
push
dec
arpl
insb
rcrl
add
gs
addr16
push
gs
xchg
jb
int
imul
js
xor
add
add
mov
sub
push
popf
add
adc
sub
dec
jl
mov
add
jmp
xor
lods
adc
test
aam
pop
mov
or
and
aas
in
and
jmp
dec
pop
out
pop
stos
cmp
cmc
lcall
add
rep
dec
jmp
and
enter
sarl
js
jecxz
mov
dec
sti
daa
push
add
imulb
xchg
orl
shl
xor
xchg
sub
leave
pop
in
pushf
adcl
fmul
sbb
stc
mov
nop
xor
pop
push
mov
pop
sahf
rcr
push
sub
cmp
push
mov
sub
andl
pop
ja
mov
cltd
aas
dec
ss
lcall
arpl
xchg
jl
cmp
in
gs
out
or
aaa
and
jae
push
repz
rcrb
or
cltd
push
in
rolb
mov
stos
hlt
xchg
sub
test
enter
gs
inc
push
adc
dec
jge
ljmp
pushf
dec
mov
dec
xor
les
mov
roll
mov
test
push
dec
mov
and
jb
lcall
pop
movsb
inc
adc
out
jp
ljmp
mov
fsubr
mov
je
enter
sub
or
mov
stos
imul
dec
sub
lret
inc
lahf
daa
jge
xchg
dec
mov
fs
outsb
cmpsb
flds
mov
orb
xor
lods
xchg
arpl
sub
inc
rorl
dec
mov
jae
cltd
scas
movsl
dec
jp
out
mull
mov
shrl
adc
ss
in
or
mov
out
jg
loopne
pop
and
dec
movsb
repz
scas
fisttpl
mov
push
mov
inc
pop
jge
cmp
test
cmpsl
push
out
cmp
xor
mov
adc
scas
jp
mov
imul
mov
icebp
enter
mov
popa
cltd
adc
sub
cmpsl
js
fstl
cmpl
sbb
mov
mov
gs
add
pop
sbb
and
mov
push
sahf
jecxz
inc
sub
push
pop
sub
fwait
sbb
inc
cli
sbb
mov
std
lea
add
nop
mov
or
jb
fwait
and
btl
jns
mov
xor
jp
xor
mov
fsubs
jno
inc
mov
in
in
push
insb
add
cmp
mov
jmp
idivb
pop
xchg
cmp
mov
xchg
xor
jl
jb
mov
sbb
js
cmc
cmc
sbb
filds
insb
shlb
sbb
lods
pushf
cmp
jne
inc
int
or
enter
cmpsb
loop
call
cmp
outsb
std
cmp
cld
push
notl
xorl
dec
dec
or
jb
pop
cmpl
add
lods
sbb
adc
or
sub
mov
arpl
push
mov
scas
pop
lds
lock
push
sbb
imul
outsl
jle
sbb
fsubrs
dec
add
dec
clc
imull
inc
sbb
add
xchg
pop
outsb
das
and
fsubrl
xchg
orb
inc
loop
xor
or
loop
ljmp
leave
pop
iret
mov
adc
ficomps
movsb
adc
xchg
lods
xor
ljmp
js
and
sub
mov
sub
sub
arpl
bound
inc
out
push
xor
jne
mov
test
sub
or
jb
sbb
sub
or
mov
jns
dec
loop
mov
push
pop
fcoml
ljmp
popf
sub
into
pop
fxch
pop
lds
jg
fisubl
repz
push
cmp
cmp
push
dec
rorb
add
scas
xorl
cmp
jmp
ljmp
es
pop
mov
dec
pop
out
in
xor
and
mov
or
push
pop
and
mov
pop
jmp
pop
sarb
pop
mov
and
and
mov
or
mov
insl
aaa
and
shlb
mov
push
adc
and
pushf
mov
fisttps
mov
xchg
jne
lcall
pop
and
xor
xchg
dec
jp
popl
or
stos
nop
loopne
adc
loop
jnp
cld
pushf
jle
jnp
inc
sti
pop
and
xchg
ficoml
into
pusha
add
cmp
mov
cltd
lzcnt
es
scas
add
push
xchg
mov
call
pop
dec
popf
dec
jbe
out
out
daa
mov
pop
scas
ljmp
call
pushf
sahf
or
enter
pop
jo
mov
int
out
cmp
fiaddl
add
mov
xchg
dec
pop
or
stos
sarl
or
int3
mov
ja
sbb
mov
jns
scas
imul
xchg
loope
mov
fwait
pop
push
gs
cmp
sub
mov
adc
or
cmovnp
xor
mov
mov
push
arpl
fisubrl
mov
pop
add
aad
lods
mov
cmp
xor
pop
or
dec
xchg
add
cltd
mov
imul
jb
aas
pusha
lock
aam
xlat
or
test
sbb
xlat
cmpsb
call
push
xor
push
pushf
lock
push
das
pop
inc
dec
es
sbb
jb
jge
leave
in
jmp
mov
sub
add
scas
mov
enter
xor
inc
call
stc
jbe
sbb
mov
add
xor
pop
ret
fisttpll
sarb
lret
mov
ret
ljmp
cmp
mov
or
add
sub
fisubl
rcl
or
das
decb
push
xor
arpl
rcrl
pop
leave
mov
into
pop
sbb
lret
add
arpl
cli
push
cwtl
arpl
imul
add
xor
mov
adc
pushl
int3
mov
or
enter
and
in
inc
ds
test
icebp
mov
das
inc
add
cmp
ss
adc
inc
hlt
jge
popf
dec
inc
push
cmp
call
mov
jnp,pt
xchg
or
adc
mov
mov
stc
sub
imul
sbb
inc
pop
mov
addr16
dec
xor
push
push
int
pop
push
hlt
pop
jnp
push
cmp
cmp
push
ret
push
xor
in
add
push
pop
xchg
shlb
ror
sbb
push
pop
dec
or
xchg
test
lds
and
rorl
ret
jmp
dec
add
shll
add
pop
xchg
inc
imul
addr16
testl
incl
jb
aas
sti
sti
xlat
lret
scas
push
sub
mov
and
iret
push
arpl
push
sub
dec
jle
sbb
sub
pop
cwtl
xchg
push
xor
and
add
xor
je
pop
xor
mov
jmp
cs
lahf
push
imul
popa
xorl
cmp
push
pop
cmpsb
inc
dec
in
lret
lock
movsl
in
cli
mov
idiv
je
fcompl
cltd
and
pop
mov
movsl
push
loope
into
xchg
lods
jp
push
aas
mov
xor
leave
inc
jnp
stos
lds
popa
loop
jmp
jb
mov
es
cld
test
cli
popa
sbb
cld
mov
mov
not
and
push
subl
dec
pop
push
dec
cmpsb
lea
xchg
jno
jo
cmp
push
inc
push
sub
fcmovnbe
sub
sub
jg
outsl
dec
push
mov
mov
or
stc
mov
push
je
orb
push
testl
dec
popa
inc
or
out
data16
addb
incl
sub
mov
daa
cmpsl
rol
add
test
insl
nop
adc
lea
mov
inc
sub
iret
call
cwtl
stos
rol
and
lock
insl
adc
fwait
cmp
xor
stos
fwait
cmp
inc
mov
hlt
mov
scas
sbb
shll
insb
jecxz
push
int3
adc
mov
or
test
test
outsb
leave
mov
hlt
mov
je,pt
popf
sbb
and
sub
fcomp
repz
xchg
xor
out
outsl
mov
mov
mov
add
adcb
adc
push
add
jp
pop
sub
pop
mov
jecxz
xchg
aas
inc
je
dec
cmp
add
jmp
sub
out
je
xchg
add
xchg
xlat
into
insb
and
inc
push
xchg
jns
icebp
mov
jb
or
jl
sbb
daa
shlb
stc
jmp
xlat
dec
fldenv
push
mov
cmc
test
sbb
in
sahf
into
inc
inc
xchg
idiv
or
xchg
mov
adc
loop
jnp
push
and
ret
ljmp
shll
je
xchg
rclb
mov
fmull
and
sub
pop
mov
adc
imulb
lahf
call
loopne
fcomp
loope
push
leave
sub
sahf
add
jle
cwtl
sbb
je
mov
lcall
rorb
dec
mov
in
inc
xchg
rorb
aad
orb
js
cmp
inc
mov
int3
push
mov
sub
jl
dec
inc
mov
rol
xchg
js
aaa
stc
ret
call
loopne
dec
pop
fstl
push
xchg
rorb
fstps
inc
popf
dec
scas
cmp
stos
shrl
jmp
pop
inc
xorl
int3
fwait
ret
insb
rolb
pop
jnp
in
insb
pushf
xor
or
mov
sbb
fiadds
inc
aas
rol
adc
mov
xchg
bound
and
or
adc
in
dec
stos
lcall
jae
fxam
sbb
lcall
pop
fldt
in
jnp
mov
jmp
or
dec
call
enter
popf
sti
fiadds
mov
jg
mov
ficompl
scas
dec
mov
stos
bound
cwtl
sar
js
pop
cld
push
ljmp
aaa
mov
mov
ficoms
cltd
movsl
dec
test
shll
nop
xchg
xchg
pop
addr16
inc
sbb
shrb
pop
cmp
mov
add
or
add
pop
pop
cmp
mov
mov
enter
dec
or
outsb
movsb
mov
addr16
mov
cmp
adcb
repnz
iret
add
stc
xchg
pop
lret
lea
out
aam
sahf
insl
push
fbld
lret
xchg
xchg
or
jmp
iret
and
adc
loop
cmpsb
xchg
scas
testl
xor
dec
xor
loopne
add
and
pop
into
in
pmulhuw
mov
add
mov
xlat
pop
or
test
aam
adc
loop
sub
push
ds
jl
xchg
pusha
dec
movsb
jo
add
test
adc
shrb
inc
dec
lea
xlat
inc
adcb
aad
and
std
int
jbe
dec
jb
sbb
aam
stos
out
ljmp
mov
pop
jg
lahf
jne
push
mov
jle
lods
sub
xchg
ficomps
gs
aaa
lcall
sub
and
fwait
out
mov
mov
xor
fimuls
dec
jne
and
adc
icebp
lods
std
push
out
ret
mov
cmp
mov
push
orl
cmpsb
rcl
pop
and
pop
shll
idivl
inc
mov
jg
sbb
sti
lahf
sar
pop
rcr
adc
xchg
dec
cwtl
jae
cltd
jo
rorl
mov
adc
pop
shll
mov
stos
aad
xchg
and
dec
xchg
es
cmp
cltd
aaa
push
push
into
data16
popf
pop
or
in
mov
sbb
jmp
and
pushf
sub
fsubrs
mov
clc
push
xor
mov
in
subl
nop
adc
push
lea
mov
movsb
in
ljmp
subl
push
pop
adc
inc
mov
mov
or
aaa
loope
lcall
lcall
in
add
add
bound
xorb
add
dec
jns
push
lret
lret
sarl
out
js
imul
jge
outsb
les
push
push
cmp
dec
jbe
adc
mov
xchg
dec
nop
xor
cmp
popf
dec
jge
lcall
aad
shl
and
push
lock
hlt
xchg
jne
pop
dec
xchg
sub
inc
cwtl
mov
jne
sti
test
shrl
sbb
dec
repnz
clc
jle
out
ljmp
rcll
jnp
in
add
movsl
dec
push
push
cli
cmovo
sti
cmp
push
rcl
fcoml
cmp
imul
int
cltd
test
adc
inc
mov
jl
int
iret
test
sahf
cmp
sub
mov
mov
xchg
cmp
and
jp
push
or
lds
adc
jp
jl
xor
mov
xchg
cmp
mov
add
popa
or
mov
std
enter
repnz
ret
aaa
iret
xor
jbe
lahf
ret
test
ja
dec
cmp
or
or
adc
insb
add
enter
or
inc
dec
test
jp
jmp
mov
sub
sbb
jle
icebp
xchg
adc
mov
cmp
fwait
and
bnd
inc
sti
mov
test
aas
jmp
or
pop
imul
loop
jae
adc
jge
das
aaa
jecxz
inc
add
rol
mov
test
pushf
out
lcall
divb
adc
mov
jo
lcall
mov
stos
xchg
xorb
mov
lret
and
dec
jge
fimuls
inc
jne
loop
mov
lock
in
dec
push
xor
loopne
and
vmulss
mov
mov
lret
out
dec
pushf
mov
xchg
push
mov
in
hlt
inc
sub
push
jnp
lds
mov
mov
dec
inc
jg
xchg
mov
and
aam
inc
fdivr
mov
lret
ret
test
mov
xchg
pop
jge
popf
pop
dec
pusha
cmp
insb
mov
cmc
mov
pop
add
cmp
addl
mov
jns
jl
js
nop
pop
shrb
jge
aaa
lahf
dec
mov
das
fcmovnb
jl
push
sub
jmp
cmc
sbb
dec
xor
jge,pn
or
mov
dec
fs
insb
mov
push
pop
loope
ljmp
pop
mov
or
and
sub
mov
imul
icebp
stc
loop
arpl
movsb
fisttps
inc
sti
pop
aas
dec
movsb
icebp
arpl
xchg
int3
lcall
addl
add
mov
mov
adc
test
cmp
shr
lods
loop
lahf
out
push
out
pushf
arpl
cmpb
pop
fsubrs
mov
fwait
mov
pop
jae
gs
je
arpl
dec
adc
sub
negl
adc
aam
imul
sub
push
lahf
das
rorl
xor
push
sub
into
fisubs
and
cmp
xchg
mov
pusha
andb
xchg
sbb
and
and
jne
or
mov
inc
ret
ljmp
and
pop
pusha
sbb
fisttps
and
cli
bound
dec
push
jno
sahf
jge
push
popa
cmp
enter
push
lcall
fmull
or
fwait
pop
pusha
and
in
test
inc
mov
xchg
cmp
mov
idivb
call
testb
das
dec
js
ja
mov
mov
pop
mov
jecxz
rcrl
xchg
in
push
dec
popf
jbe
repz
cmp
xor
push
or
push
inc
add
fstps
mov
jp
into
xchg
fistpl
mov
and
dec
cmp
push
sub
mov
or
fucomi
movsl
outsl
add
stos
popf
orl
movsb
fnstsw
js
sub
xor
loopne
xor
popa
js
cmp
jns
and
sbb
ljmp
inc
push
cs
fidivs
cmp
in
xor
pop
sbbl
mov
ljmp
xchg
roll
or
or
cs
pushf
add
mov
or
inc
cmpsl
pop
cmp
in
xor
outsb
or
aas
lcall
push
addb
adc
mov
fdivr
sarb
pushf
cld
or
adcb
mov
dec
rorb
mov
jns
neg
cmp
add
inc
subb
fnsave
roll
into
jae
push
xor
mov
push
repz
out
out
adc
pop
test
enter
movsl
loope
xchg
mov
mov
loop
movsl
test
mov
sbbb
fmul
clc
imul
mov
sbbl
test
sti
dec
jge
test
lea
pop
scas
xor
cmp
mov
pop
push
iret
pop
fwait
pop
enter
lea
enter
nop
sbb
cmp
aaa
es
mov
push
fistpl
and
loopne
or
addr16
int3
push
sti
andb
dec
xchg
dec
call
or
or
js
cmp
sbb
push
stc
mov
int3
test
inc
xor
in
in
outsl
mov
bound
lock
das
sub
stos
cs
mov
xchg
push
cltd
pop
push
jo
xchg
leave
test
dec
mov
rcrl
into
scas
xor
sahf
test
in
movaps
ret
rcrl
stc
xchg
pop
negl
push
hlt
sbb
out
sbb
cwtl
and
insb
out
pop
sbb
or
bound
mov
mov
or
shr
mov
loop
cmpsl
push
outsl
and
les
ret
or
nop
inc
jle
ds
mov
mov
loop
cmc
lock
mov
sub
hlt
stos
cmpsl
cmp
arpl
into
nop
ds
fldcw
sbb
mov
in
or
push
jg
or
sub
cltd
mov
fcomp
add
mov
sbb
and
mulb
lds
in
and
jns
ret
sbb
cmp
jmp
inc
jmp
test
jecxz
test
repnz
push
pop
jg
loopne
push
lret
xchg
lock
dec
not
pop
leave
int
leave
ds
dec
cwtl
fsubr
mov
bound
dec
sub
mov
or
add
inc
lods
sbb
lea
add
add
jge
add
add
in
xchg
pop
add
rolb
add
ja
mov
fnstenv
dec
int3
int3
int3
add
add
add
add
push
and
outsb
dec
or
add
add
add
or
add
add
add
add
mov
add
dec
add
add
shlb
add
sub
add
add
add
add
add
add
add
add
pop
mov
add
inc
outsl
outsb
jne
outsb
add
lods
imul
ja
sahf
clc
shll
mov
add
push
inc
jmp
xor
cld
add
dec
pop
mov
mov
cld
decl
std
mov
addb
out
add
add
xchg
pop
jne
mov
add
fstl
mov
jge
pop
incb
inc
add
mov
add
daa
and
decl
cwtl
push
call
incl
cmp
loope
decl
pop
and
adcl
call
inc
jge
push
jo
lea
add
std
ud0
cmp
lret
ret
imul
adc
lea
movl
sbb
sbb
mov
sbb
sbb
sbb
sbb
sbb
pop
add
add
je
imul
jb
add
xor
push
js
add
push
arpl
outsl
insl
gs
add
insb
add
js
push
insb
cmp
push
popa
add
add
outsl
insb
insb
jne
gs
leave
outsl
popa
insb
jne
hlt
add
jns
add
add
add
add
jmp
add
mov
add
add
add
sbb
add
add
add
add
and
adc
cmp
imul
inc
daa
fisubs
xor
into
jmp
pop
jae
pop
pop
inc
nop
xchg
xchg
fs
popa
pop
clc
xchg
shrl
lcall
pop
xor
or
inc
push
into
in
ja
divb
in
inc
push
mov
mov
or
cltd
ficoml
cld
mov
and
int
push
mov
aaa
mov
xor
xchg
in
xor
lcall
pop
cs
adc
rcrb
scas
sti
ds
xchg
mov
imul
popa
out
cmc
jnp
fcompl
inc
mov
test
add
es
insb
ja
ror
imul
ja
std
int3
in
cmc
xor
xchg
inc
inc
pop
cli
push
aaa
pop
sbb
adc
xor
fxch
incb
mov
cld
out
or
xchg
mov
adc
imul
mov
xchg
cmpsl
or
sbb
inc
xlat
mov
mov
push
cmp
xor
insb
sahf
shrb
nop
mov
adc
daa
sub
cmc
addr16
rolb
repnz
enter
push
xor
push
gs
int3
xchg
cwtl
jnp
out
ret
idivl
mov
and
or
mov
sbb
cmpsl
dec
fildll
mov
jnp
add
add
sub
ror
lret
mov
cs
fadds
cmpsb
lahf
aaa
loope
hlt
sbb
jl
incb
xchg
jno
out
jo
xchg
and
mov
les
addl
xor
cmc
push
dec
xchg
imul
addr16
mov
insb
mov
test
outsb
cli
push
int
shrl
popf
sub
cmp
daa
stc
es
push
dec
xchg
dec
cmp
mov
xor
out
mov
sbb
inc
adc
pop
aam
popf
cmp
data16
push
daa
lea
sbb
scas
ss
lods
aas
lahf
ljmp
xchg
cmp
cmp
jmp
sub
lret
inc
inc
xchg
ret
cmpsl
jp
sub
subps
gs
pop
inc
mov
add
adc
popa
sub
xor
loopne
sbb
inc
and
adc
cmp
in
push
pop
cwtl
xor
inc
rolb
inc
xor
add
inc
adc
jnp
pop
mov
inc
fwait
in
adc
cmp
sub
out
int3
mov
jp
mov
mov
hlt
stos
or
fwait
sbb
in
out
xlat
jge
out
push
cmp
arpl
mov
push
icebp
push
outsl
test
int3
aas
pop
leave
dec
ret
push
negb
adc
ret
dec
or
inc
out
fistl
test
lret
stos
sahf
call
mov
dec
fsubrs
cmp
cs
movsl
cmpsl
and
mov
sbb
rorb
xor
nop
aad
adc
out
pslld
mov
sub
and
dec
neg
pop
out
dec
inc
mov
inc
xchg
loop
sub
outsl
mov
aam
lret
sub
rorl
xor
or
rclb
cmc
push
mov
rclb
cli
sarl
jl
daa
fldcw
icebp
dec
xlat
call
outsb
sub
int3
stc
cmp
in
nop
mov
pop
iret
loopne
mov
add
cmp
sbb
pop
and
jb
push
jns
push
mov
push
push
jge
faddl
and
in
jg
popf
jle
mov
testb
popa
push
sbb
pop
xor
and
cmpsb
or
jp
fsubp
ffreep
pop
and
xchg
xchg
aam
in
jmp
mov
push
or
lock
and
mov
adc
cmpsb
data16
hlt
lea
jmp
data16
jmp
cmp
pop
mov
mov
and
jl
les
xor
pop
pop
jmp
lret
inc
daa
lea
or
cmp
inc
mov
jbe
sbb
in
sub
jp
inc
cmp
lock
outsl
arpl
not
test
inc
lods
pop
adc
out
popa
aaa
outsl
jl
mov
jg
sub
dec
dec
sub
movsl
es
fbstp
aas
dec
sbb
fistpl
lods
xchg
and
jl
xchg
sub
std
shlb
dec
push
arpl
sti
push
rorl
sarb
rolb
sub
mov
adc
lcallw
scas
cmpsb
fdivrl
call
or
insl
std
dec
mov
adc
test
test
lds
int
mov
aaa
das
aaa
xlat
outsl
insb
pop
dec
pop
pop
insl
popa
stos
xor
inc
push
mov
jp
pop
adcl
xchg
jae
push
std
std
lret
mov
adc
cmp
push
repnz
repnz
or
sub
jne
rcrl
xchg
sbb
or
jmp
enter
ja
mov
fidivl
popa
inc
movsl
into
mov
jle
cld
fcomps
mov
shl
mov
mov
and
decb
xor
inc
imul
push
dec
jge
shll
aam
adc
pop
mov
sbb
inc
cmp
lods
push
loopne
jno
shll
es
loop
stos
add
in
xchg
das
sub
mov
push
adc
ret
xor
inc
imul
xchg
pop
int3
sti
inc
mov
test
cmp
int3
xor
out
mov
mov
push
imul
decl
inc
lret
sub
cmp
jl
mov
sarb
in
mov
add
cmp
inc
sbb
mov
and
adc
sub
sahf
mov
and
mov
cmp
xchg
cmp
popl
sarl
inc
daa
popa
popa
ds
test
pop
das
cmp
clc
lods
enter
mov
test
xchg
mov
or
das
push
dec
push
xor
dec
fdivrl
rcll
inc
insb
fsubrp
mov
push
mov
int3
push
inc
xor
testb
or
ss
adc
cs
neg
mov
inc
aam
fiaddl
dec
or
inc
in
in
lret
dec
mov
sub
shll
or
lret
mov
sbb
ss
xor
outsl
xor
shlb
jl
sub
lea
in
mov
mov
push
daa
or
mov
xchg
ds
in
out
xorl
adc
dec
xlat
add
out
mov
sub
sub
pop
add
in
imul
addl
fs
mov
fcompl
rcll
push
push
push
out
outsl
std
shll
aas
fwait
adc
sbb
loop
subl
test
loopne
lods
lret
sbb
in
mov
jnp
dec
mov
dec
mov
lret
mov
loop
cmp
rcr
imul
inc
cmp
outsl
stc
lods
and
mov
push
sub
and
lds
lret
repnz
dec
push
xor
loope
in
pop
xchg
aam
xchg
rclb
addb
in
sub
mov
test
arpl
test
mov
mov
push
sub
movsl
test
adc
push
test
mov
daa
sti
jge,pn
into
mov
pop
jo
push
test
xlat
adc
call
push
and
sub
xchg
dec
int
mov
hlt
movlhps
jge
sub
or
cmp
pop
scas
xor
sbb
stos
sarb
xchg
adc
jno
nop
pop
fimuls
movsb
nop
pop
and
or
sbb
xchg
ret
mov
cmp
outsb
scas
adc
clc
mov
daa
and
pop
mov
aas
gs
mov
cmovns
cmpl
jb
lret
dec
xlat
cmp
aas
push
lcall
dec
pop
or
andl
sbb
inc
insl
dec
fdivrl
aaa
cs
sub
sahf
push
clc
jne
mov
int
movsl
fs
out
and
in
test
mov
adc
ror
leave
xor
jne
shl
pop
lahf
pop
or
repz
cld
gs
mov
lds
lahf
cmc
std
push
mov
jb
addr16
push
jp
cmc
add
loope
mov
mov
push
insl
outsb
or
rorb
out
imul
shrl
or
rorb
mov
jns,pn
pusha
aam
xchg
xor
outsb
ret
pusha
mov
push
cli
sbb
out
sub
mov
and
cmc
in
cli
bound
ror
scas
cmp
adc
test
cmp
sbb
and
or
or
stos
xor
das
cmp
or
xor
dec
stos
add
sub
fistl
jb
out
pop
mov
cmc
aad
addr16
jle
push
lock
xor
mov
push
mov
lods
mov
aaa
les
sti
sbb
mov
adc
xor
loope
loopne
pop
rol
aas
push
mov
pushf
adc
adc
mov
imul
fimull
mov
push
int
cwtl
icebp
xor
mov
sbb
jle
jge
xor
xchg
hlt
iret
in
fwait
cmpsl
dec
xchg
dec
sbb
push
adc
jnp
add
push
xchg
into
add
xor
adc
jmp
inc
push
stc
sub
fisubs
xor
icebp
lds
outsb
inc
popa
adc
dec
push
stos
sub
add
pop
scas
jg
xor
inc
push
mov
dec
nop
add
mov
clc
mov
xor
in
sub
mov
scas
pushf
mov
les
dec
push
dec
adc
sar
sbb
push
adc
cld
icebp
push
leave
mov
sbb
repnz
iret
sbb
enter
jge
shll
data16
js
es
mov
icebp
loopne
mov
dec
sub
popf
test
push
sub
xor
push
enter
mov
sbb
mov
test
frstor
pop
into
push
shl
pop
scas
test
roll
dec
inc
sbb
into
and
and
int
push
mov
sbb
sahf
jmp
xor
sbb
addr16
js
inc
jmp
jnp
daa
mov
sbb
jl
adc
mov
pop
repz
scas
sbb
rcl
repz
or
mov
push
sub
mov
jns
adc
pusha
or
pusha
pop
scas
mov
imul
inc
pop
xor
sti
sbb
mov
pushf
mov
or
or
int
ret
adc
adcb
ja
stos
or
mov
test
xor
sbb
push
cltd
inc
movsl
pop
sbbl
and
add
sti
jl
fdivrp
scas
or
ficoml
inc
sub
pop
mov
jo
icebp
test
mov
pusha
jg
fsubrl
mov
fisubrl
sub
or
xor
jge
push
testb
mov
add
xchg
fbld
jne
mov
repz
mov
sub
add
das
mov
stc
add
jmp
fidivl
push
sub
mov
add
adc
xor
aam
mov
mov
push
push
sbb
test
sub
xorb
fsts
push
pinsrw
hlt
cmpsb
xor
test
call
and
xor
cli
inc
push
std
push
popa
test
push
test
stos
mov
push
cmc
xchg
and
adc
loopne,pt
xchg
inc
cmp
adc
mov
push
nopl
jp
fsubr
int3
mov
inc
notb
loopne
mov
cs
fisubrl
mov
mov
rcr
xor
dec
xchg
push
mov
cld
jne
test
sarl
add
mov
test
fisttps
jge
push
pusha
mov
jbe
cmp
addr16
scas
fisttpll
pop
pop
pop
into
cltd
adc
xchg
push
rcl
in
repnz
lea
je
inc
push
mov
icebp
pop
icebp
stc
xchg
push
hlt
mov
cltd
inc
mov
aas
inc
push
mov
outsl
push
notb
and
jmp
dec
leave
int
and
xchg
push
lcall
cmpsl
test
sub
ss
xchg
pop
test
rcll
cmc
inc
pushf
xlat
fnsetpm(287
jg
xchg
bound
out
out
out
into
push
rorb
cltd
add
or
into
adc
add
sbb
jbe
cmp
cwtl
jl
out
dec
cmpsb
leave
jp
paddusb
push
dec
loop
in
mov
lahf
xor
fcmovb
clc
shll
rorl
add
rclb
pop
dec
mov
hlt
push
into
mov
mov
mov
xchg
add
pop
cmp
daa
xchg
ret
or
sub
test
inc
ss
insl
repz
mov
sub
sub
cmp
add
fs
outsl
pop
dec
cwtl
shrl
pushf
int3
jecxz
jp
aaa
icebp
push
mov
jns
in
xor
nop
pop
addr16
sub
and
mov
hlt
jg
es
pop
nop
je
cmpsl
mov
xor
and
dec
addl
ret
or
call
xlat
pop
neg
std
xchg
jae
inc
cmp
divb
dec
sbb
cmpsl
push
jb
cwtl
aas
xor
and
loop
iret
xchg
cld
inc
into
js
cli
scas
cmpsb
pop
ja
out
adc
aad
pop
int
sub
cli
out
dec
mov
pop
and
out
add
pop
xor
and
add
sub
loopne
vminss
test
xchg
rcl
sub
push
pop
mov
push
mov
stos
add
pop
ss
jg
fnstenv
mov
popa
xlat
dec
mov
sbb
mov
sub
fsubrl
popf
mov
and
aam
das
mov
adc
push
mov
rcr
or
sub
shll
and
cmc
xchg
and
cltd
outsb
xlat
shrl
xor
es
and
insl
stos
rcl
dec
jecxz
xor
or
adc
xchg
loopne
fstpt
icebp
jae
mov
imul
adc
test
xlat
push
loop,pn
push
popa
dec
jbe
xchg
mov
cltd
in
jl
jne
pop
sub
sbb
cmp
sub
rorl
mov
movsl
aam
aad
mov
popf
adc
sbb
mov
lret
mov
jp
scas
popa
adc
dec
push
mov
add
faddl
in
rorb
dec
cld
rcll
pop
out
das
push
sar
xor
push
les
sbb
lea
inc
or
jmp
lock
add
and
scas
arpl
jae
mov
aas
mov
fists
add
push
mov
mov
adc
int3
ret
sbb
out
stc
dec
adc
call
sub
inc
test
jns
ret
cmp
insl
mov
pop
and
aam
xchg
mov
push
decl
jbe
ss
sub
mov
cmp
or
test
or
push
and
test
hlt
rcl
cs
push
xchg
mov
ror
imul
ret
inc
aad
and
sub
fcoms
mov
adc
gs
jg
into
dec
daa
icebp
stos
stc
sbb
pop
jae
mov
mov
ret
jns
iret
das
jo
fwait
lods
sbb
mov
cmp
inc
fidivrs
cltd
mov
movsl
inc
sbb
int
add
rcr
cld
pop
rolb
shrb
les
stc
jp
je
dec
adc
scas
jb
testb
push
xor
insl
xor
jmp
sub
cli
sti
shrb
lds
lret
jmp
adc
push
push
jg
and
pop
popf
mov
xor
cmpb
sub
gs
sti
push
xchg
xchg
jns
neg
sarl
into
jg
popf
mov
pop
int
sub
mov
push
xchg
testl
call
imul
aad
fwait
loop
shlb
and
dec
mov
rsm
sarb
jnp
lret
mov
cmp
addb
inc
jae
inc
scas
cmp
int
fidivs
and
loop
idivl
aam
xchg
jbe
out
push
les
fcoms
jno
lcall
in
jp
push
pop
cmp
mov
pop
jmp
push
sbb
das
jne
movsb
nop
mov
xor
arpl
loop
insl
pop
sub
dec
cmc
push
push
rsm
popw
aaa
dec
lods
ds
into
loopne
xchg
mov
push
sbb
aad
subb
add
sbb
xchg
inc
bnd
cmpsb
lret
outsl
mov
das
je
pop
cwtl
mov
sub
popf
dec
xor
adc
mov
rclb
negb
xchg
cmp
adc
cmp
jmp
sbb
pop
lock
xor
xor
mov
out
daa
loope
and
and
loopne
js
ljmp
jo
out
xchg
roll
popa
fisttpl
cmp
jbe
lock
lcall
in
scas
xchg
dec
lret
andb
in
jmp
mov
or
cld
cmpsb
xchg
test
sarb
xor
testl
adc
cld
sub
ja
repnz
lods
mov
mov
pop
addl
push
push
ja
adc
shl
frstor
sub
jp
sub
push
xchg
lds
ss
stc
xchg
jecxz
pop
xchg
sbb
outsb
insb
pop
ficoms
push
dec
fisubrs
mov
in
iret
cmp
pop
mov
pushl
ds
flds
add
jecxz
mov
repz
imul
adcb
pop
loope
mov
test
repz
rcrl
inc
shrl
test
outsb
or
or
jp
stos
out
push
xchg
xchg
shl
xchg
xchg
mov
push
or
incb
test
dec
mov
mov
sub
push
add
pop
gs
cmp
pop
jmp
lcall
es
jns,pn
push
jnp
mov
xchg
cmp
nop
adc
sti
out
call
adc
jno
cmp
xchg
jle
pop
pop
dec
fsub
push
ljmp
xchg
mov
pop
out
jae
and
or
push
mov
into
push
pop
hlt
xchg
cmp
mov
int
out
scas
jg
jle
jo
add
cwtl
js,pt
std
xorb
sbb
mov
mov
int
lods
inc
or
cmp
mov
stc
imul
loop
movb
sbb
sub
push
push
loopne
ret
jns
sbb
ja
loop
jl
rclb
enter
icebp
ret
or
push
or
or
fs
pop
ja
cltd
inc
dec
xchg
loop
jge
mov
dec
dec
andl
cmp
stos
test
loope
jo
loope
lcall
popf
outsb
sub
mov
lret
loop
jmp
mov
xor
cmovl
insb
shll
movsb
or
pop
lds
jp
loopne
sbb
inc
or
sub
xor
jge
enter
insb
adc
jae
sub
jle
ret
add
jle
div
inc
insl
xor
int
push
les
pop
hlt
cwtl
in
cmc
mov
sub
add
add
add
add
add
add
imul
add
add
cltd
add
add
add
test
add
add
add
add
fadds
add
add
dec
add
add
add
add
add
sub
add
add
add
add
pop
add
stos
stos
add
pop
jo
jo
jo
jo
int3
int3
int3
int3
dec
add
add
mov
insl
add
add
add
adc
incl
add
add
adc
add
sbb
add
add
add
jb
add
add
add
sbbb
sbb
sbb
sbb
sub
clc
sbb
add
data16
jne
dec
pop
je
jb
outsl
inc
dec
and
pop
ja
mov
inc
roll
out
xor
add
add
lods
inc
mov
xor
add
cmp
mov
das
push
sub
test
test
std
call
incl
lock
clc
push
pushf
adc
xor
sub
add
inc
ljmp
jmp
cmp
inc
pop
js
jge
push
push
add
adc
je
test
jg
adc
decl
adc
test
inc
je
rolb
sar
dec
inc
add
push
push
jne
test
add
push
movsl
lea
stc
push
clc
push
inc
call
testl
push
xor
add
add
insb
add
add
sbb
add
sbb
push
sbb
add
jbe
inc
outsb
outsb
add
adc
popa
outsl
inc
add
popa
imul
insb
xchg
jbe
imul
popa
dec
insb
je
xor
je
ljmp
add
inc
je
add
add
pop
inc
inc
inc
xor
add
add
scas
rcrl
add
add
add
add
add
les
test
pop
add
push
lods
pop
iret
dec
cld
inc
scas
add
mov
into
cltd
popf
or
and
in
lcall
data16
or
cmp
sti
push
adc
les
lret
xchg
mov
sbb
fs
rcl
fsubrp
push
mov
xchg
into
cmp
repz
in
adc
mov
filds
movsb
push
aam
aas
cmpsb
dec
mov
cmpsb
or
aam
xchg
dec
mov
daa
jmp
xchg
adc
rorb
pop
imul
sbb
lea
mov
pop
adc
cmpsl
sbb
xchg
mov
adc
xor
popa
inc
sahf
sbb
sbb
jmp
incb
divps
imul
mov
cmp
pop
or
cmp
xchg
fabs
pop
inc
pop
sti
push
js
jnp
ja
mov
sub
mov
ror
mov
dec
jno
cmp
loop
push
stos
pop
adc
inc
call
scas
fisttps
imul
push
dec
mov
push
adc
fnstsw
push
adc
scas
xchg
imul
push
inc
mov
leave
xor
and
jle
mov
leave
inc
push
arpl
adc
pop
fwait
inc
pop
pushf
test
je
hlt
cli
cmpsl
rcr
inc
adc
pop
pop
pop
dec
jbe
pushf
jo
daa
push
jge
jl
adc
add
jmp
mov
test
xor
ret
xor
ret
imul
xor
mov
pop
jo
sbb
jmp
lock
add
add
mov
or
add
loop
dec
jle
xchg
xchg
shlb
int
loope
push
mov
adc
jmp
xlat
dec
sub
jns
popf
cli
int
ret
in
fldcw
or
add
sarb
subb
and
jmp
pop
push
push
sbb
dec
jno
insl
dec
mov
inc
jp
out
sub
xchg
mov
mov
or
bound
sub
jecxz
ret
sbb
push
push
cli
cmp
pusha
adc
mov
xor
pushf
stc
call
loop
daa
sahf
jnp
jge
lea
cwtl
loop
hlt
in
cli
cltd
xor
test
call
popf
lods
mov
ret
in
or
cmp
mov
je
inc
lock
roll
push
dec
mov
fucomp
push
cwtl
iret
mov
rcl
add
xchg
xchg
dec
push
xchg
popf
add
es
int3
lods
and
jo
jno
xchg
dec
and
lds
xor
inc
add
out
mov
andb
test
mov
sub
fisttpl
neg
dec
adc
mov
push
fnsave
jg
pop
jo
xchg
ljmp
ds
fwait
adc
pop
xor
stc
insb
dec
adc
fwait
pusha
inc
lea
pushf
xchg
push
mov
into
lods
stc
fdivs
pop
xor
fsubs
divl
or
mov
mov
test
push
mov
lea
les
sbb
lahf
xchg
push
xchg
adc
rclb
jae
add
icebp
dec
mov
fcomps
pushl
inc
sbb
shll
jbe
xor
push
subl
mov
sub
add
popf
out
clc
js
add
dec
fcoms
mov
sub
cmp
xor
out
mov
repnz
jne
pusha
xlat
addr16
mov
fsubs
mov
popf
out
sahf
sub
dec
and
jge
push
lret
rcl
xchg
sub
lock
add
dec
sbb
inc
cmp
and
pusha
lret
ret
mov
inc
and
orb
pop
rcll
inc
sub
sub
stos
in
pusha
cmpxchg
mov
rcrl
pop
fdivrl
push
nop
out
sbb
loop
mov
test
jmp
pop
ss
xchg
or
adc
mov
or
or
stos
add
and
clc
das
lods
adc
jae
pusha
sbb
mov
cs
xchg
cld
adc
mov
or
mov
add
lock
lods
test
jg
icebp
cli
addl
scas
or
call
and
fmulp
push
mov
aas
movsb
mov
nop
les
or
jge
or
mov
incb
mov
addr16
fucomp
outsl
mov
ss
jecxz
sbb
mov
das
std
jle
xchg
xor
xchg
in
stc
mov
push
jne
mov
outsb
aam
imul
aas
into
mov
loope
push
jp
lcall
icebp
pop
dec
dec
adc
out
add
movsl
or
pop
iret
inc
addl
pop
sets
jl
xor
cmp
cwtl
out
test
mov
adc
jmp
in
xchg
aas
push
les
js
fldl
outsl
jle
cld
mov
add
add
mov
cs
sti
push
subb
ja,pn
xor
jns
xchg
cltd
pushf
ret
and
dec
addr16
xor
xchg
dec
inc
or
or
sbb
stc
jle
fistl
fstl
or
mov
xchg
adc
cli
xchg
jnp
rcl
dec
dec
xor
xor
pop
jg
sahf
jl
inc
movsb
pushf
enter
push
push
mov
xchg
sub
shrl
insb
repnz
cmp
mov
lods
std
sahf
dec
fbld
jle
fstl
pop
gs
rcrb
std
cmp
iret
incl
scas
aam
scas
enter
fildll
iret
jb
inc
xor
pop
out
cli
hlt
sub
in
adc
push
lods
outsb
sub
lret
inc
popa
lret
adc
popa
cmp
icebp
push
cld
jmp
sub
out
mov
jne
lods
mov
mov
xchg
cmp
data16
inc
pop
adc
mov
add
pop
inc
mov
mov
sub
and
sbb
aad
fneni(8087
dec
inc
jns
test
nop
sbb
stos
push
jae
aad
negl
gs
daa
push
btr
aas
jl
cmpb
mov
dec
jnp
push
push
sbb
test
cmp
bnd
test
xchg
push
xor
call
lret
pop
lods
mov
or
imul
fsubr
or
dec
popa
lret
insl
sahf
fnstsw
mov
stos
repz
popf
daa
cmp
cmp
push
or
pusha
aam
test
das
xchg
mov
fstps
stos
mov
add
push
in
adc
test
jae
add
push
xchg
scas
dec
cltd
pop
jle
cmp
inc
xlat
cwtl
cmp
jnp
lock
sahf
adc
icebp
leave
fistps
jo
adc
and
sub
dec
je
rolb
test
xchg
pop
dec
mov
and
outsb
push
lret
vsubss
call
dec
push
divl
scas
loope
fdivp
pop
notb
sbb
je
rorb
lret
adc
ljmp
cmp
pop
xor
jle
pop
rorb
mov
or
ror
mov
dec
mov
inc
dec
mov
fisubrs
lahf
icebp
aam
mov
mov
fs
and
push
sub
scas
out
and
cmp
adc
xchg
mov
mov
mov
add
in
dec
or
ret
cs
cltd
aam
inc
ficompl
scas
add
push
lcall
aas
shlb
sbb
sbb
add
pop
loope
cmp
iret
add
movsl
xchg
les
pushf
add
push
inc
nop
mov
ss
jnp
xchg
dec
push
pushf
and
fwait
xchg
cld
jle
lods
leave
xchg
and
sub
or
js
cmp
xchg
cs
jne
add
xor
aam
jbe
rcll
into
in
iret
push
xor
jb
pop
push
and
pop
test
or
and
pusha
stos
cmc
cltd
xor
xlat
fimull
jae
add
and
sti
sub
mov
lods
xor
push
or
jno
sub
jmp
ret
imul
test
mov
push
daa
sahf
lret
cmp
nop
je
pop
jmp
pop
mov
adc
pusha
sbb
sbb
pushf
mov
sub
testb
scas
sbb
pusha
int
addr16
cld
dec
push
adc
dec
jl
xchg
mov
movsb
inc
outsl
shrl
aam
out
add
loop
outsl
hlt
es
imul
pop
outsl
test
xor
and
add
in
xchg
orl
fcompl
dec
push
sub
loopne
std
push
lock
xchg
out
mov
add
jmp
fnstsw
xchg
xchg
mov
or
lods
fildl
jae
outsl
adc
pushf
cmp
sbb
sbbl
popa
lds
gs
mov
gs
js
mov
imul
mov
xor
ss
shl
sbb
mov
aaa
inc
cmpsb
add
push
xchg
cmp
push
pop
jecxz
add
xor
xor
mov
dec
cmc
int3
lahf
mov
enter
testb
movsl
in
les
or
and
pop
into
push
sub
leave
lods
lret
stos
nop
cmp
cmp
loop
xchg
out
out
mov
repz
faddl
cmp
jecxz
mov
cmpl
dec
in
lods
add
popf
in
mov
cltd
lret
insb
jmp
or
adc
mov
jae
lcall
ficoms
mov
or
fwait
pop
mulb
adc
cmc
mov
jo
or
fdivrs
sahf
add
fmull
and
mov
aam
rclb
call
bnd
pushfw
ljmp
cmp
jno
pusha
pop
addr16
cwtl
mov
jmp
mov
imul
push
sti
nop
dec
clc
les
jbe
or
xchg
jae
das
mov
jmp
jno
les
jecxz
loopne
inc
push
sub
icebp
out
mov
pop
push
das
or
dec
mov
fiaddl
dec
mov
fildl
outsb
push
bound
xor
sub
jno
xor
lret
popf
jl
mov
movsl
mov
das
mov
pusha
test
nop
or
mov
sbb
jl
mov
xchg
pop
sbb
mov
out
pop
out
int
call
mov
jo
xorb
in
cli
aaa
ljmp
jae
data16
out
popa
xchg
jo
inc
pusha
fldl
xchg
cmp
loopne
jne
pop
in
sbb
pushf
in
sbb
int
sub
sbb
das
sub
cmc
xor
js
jp
mov
loopne
dec
shlb
daa
fnstenv
jmp
ljmp
sub
mov
dec
popa
cld
or
out
mov
fwait
mov
jge
fwait
in
xchg
lds
sbb
insb
sub
lock
jno
dec
rcrb
pop
add
sbb
pop
fcoml
fsubrs
cs
push
ret
xor
push
lret
hlt
stc
mov
dec
fsub
lea
cwtl
inc
std
xor
push
jmp
inc
xor
push
jno
shl
jae
call
dec
outsb
sub
adc
insb
jno
add
repz
mov
pop
cmpsl
cmp
fldt
lds
imul
or
addr16
sbb
inc
push
adc
push
sbb
and
ja
out
shll
push
xchg
pop
push
loop
ljmp
nop
inc
pop
test
scas
lcall
fcmovnu
cmpsb
arpl
inc
les
adc
push
shlb
shr
xor
dec
inc
ljmp
jne
xchg
or
push
pushf
repnz
push
inc
xchg
xor
pop
in
shlb
addr16
xor
stc
mov
mov
pushf
fcoml
jnp
movsl
popf
fwait
sbb
inc
dec
out
aam
push
pop
push
cmc
sbbl
pop
mov
shll
xor
rcrb
push
mov
add
adc
push
jbe
or
stos
add
jns
lods
mov
mov
loop
push
pop
sahf
mov
jg
incl
mov
dec
cltd
mov
dec
inc
or
jmp
popa
add
idivb
mov
push
jg
aas
in
lea
lea
cmpl
mov
or
mov
pop
mov
loope
fists
cmpsl
jecxz
mov
ss
das
fdiv
inc
cmp
jle
out
mov
add
loopne
cmpb
xchg
daa
push
pop
popa
fisubl
dec
mov
push
mov
jno
sub
add
pop
movsl
cmpsb
fwait
push
jns
test
inc
fwait
pop
mov
inc
and
xchg
xchg
mov
movsl
testb
sub
xchg
les
xchg
cmp
push
jg
sub
scas
inc
fwait
test
push
lahf
cmp
fildll
sub
and
pop
lods
mov
xchg
xor
mov
pop
arpl
rcll
inc
jg
or
js
aaa
push
xor
lret
mov
je
loop
mov
test
sti
xorb
add
je
stos
lods
adc
jp
fnsave
cmpsl
jmp
por
and
or
or
jmp
fstpt
xchg
and
mov
xor
je
pop
mov
lahf
adc
out
mov
dec
mov
mov
mov
jne
cli
dec
lods
xchg
inc
pop
fmuls
movsl
imul
jle
xchg
sbb
and
decl
xchg
inc
xchg
push
jno
fsubr
fs
xchg
ljmp
push
mov
test
xor
inc
jns
jnp
lret
stos
je
pusha
jp
jne
pop
test
lret
mov
add
inc
aam
and
mov
mov
xor
or
out
fsubrl
aaa
popf
out
add
adc
sub
clc
push
or
jl
lea
sbb
lods
fsts
cmp
xor
jp
mov
cmpsb
jb
jne
rorb
imul
inc
out
mov
adc
fwait
or
pop
mov
sbb
xor
add
or
lds
dec
cmp
data16
aad
shlb
pop
mov
imul
cmp
cmp
notl
add
dec
int
out
femms
pop
icebp
sbb
mov
fsubl
sti
xchg
jno
stos
push
push
ds
mov
loop
push
jge
in
push
sub
push
pusha
or
cmpsl
or
rorl
cwtl
sbb
loopne
shll
ret
xor
cmpsl
lods
fistps
xor
shlb
sar
or
mov
inc
mov
push
xor
out
xor
ss
ljmp
cmp
jmp
mov
ds
adc
cmc
pop
cmp
mov
push
dec
jnp
jae
mov
sar
hlt
sar
jg
xchg
inc
dec
aam
dec
mov
shrl
in
movsb
sbb
cwtl
mov
push
jnp
dec
sub
dec
repz
or
add
scas
mov
jmp
ja
bound
mov
test
mov
setge
adc
jns
inc
nop
aad
testb
movsl
outsl
mov
stc
xor
daa
sahf
aas
popf
packsswb
mov
xor
icebp
inc
icebp
inc
pusha
mov
lds
dec
and
mov
and
in
jmp
and
testb
fucom
jns
push
lock
out
repnz
bound
pop
iret
loopne
test
adc
mov
cli
mov
ja
inc
cmp
stos
cmpsl
mov
lock
out
xchg
lods
xor
out
jo
idivl
shll
addr16
test
cmp
ret
mov
adc
repnz
push
into
mov
mov
insb
fimull
inc
mov
sarb
rolb
and
hlt
test
push
es
ja
fistpl
ret
push
mov
inc
dec
jmp
xchg
in
xchg
lret
ds
setb
xor
adc
scas
imul
adc
cmpsb
xchg
xor
movsl
fs
test
mov
sbb
jecxz
hlt
aas
dec
andb
in
addb
sarl
outsb
push
pushf
in
cmp
mov
jge
cwtl
negb
cwtl
mov
bound
arpl
sbb
dec
gs
xchg
mov
mov
iret
jg
lea
xor
pop
push
jno
cwtl
lock
dec
arpl
inc
cmpl
loope
mov
std
hlt
xor
lret
xchg
gs
pop
pop
stos
jnp
daa
into
xchg
cmpl
int
insb
xchg
int
add
or
push
push
pop
stos
fstl
lret
movsb
cmp
dec
lods
fdivs
cld
outsl
mov
in
lea
scas
cwtl
sbb
ss
ljmp
jl
lods
jp
dec
dec
inc
pop
xor
dec
shrb
std
xchg
or
fnstcw
loopne
pop
test
stos
out
in
cmp
push
mov
and
push
into
sbb
test
jmp
aam
out
dec
and
in
push
cmp
pop
loope
jmp
xor
jge
sub
sub
pop
mov
insb
inc
or
jge
andl
fld
aaa
repnz
inc
cmp
jne
pusha
pop
daa
pop
decl
adc
dec
lods
xchg
or
jno
js
add
mov
sbb
inc
adc
aam
ret
fsubrp
pop
adc
jne
mov
xchg
inc
or
mov
sbb
nop
hlt
data16
xchg
cmp
lret
jecxz
popa
push
sar
jb
aam
mov
jbe
stos
or
push
loop
aam
fisttpl
mov
mov
push
movsb
mov
ss
and
and
fisubl
xchg
mov
pop
ss
push
adc
sbb
push
rorl
je
push
mov
mov
jae
sti
insl
add
mov
inc
lods
mov
sbb
ret
mov
push
sub
gs
cmpsl
push
lods
pusha
lds
cs
xchg
je
inc
outsl
outsl
and
inc
mov
lret
jnp
imul
test
sbb
insb
test
outsb
pop
repnz
aaa
push
fnstsw
incb
xchg
push
add
daa
fnstenv
mov
inc
sub
adc
jmp
scas
mov
out
or
daa
shr
mov
add
je
mov
jno
in
push
shrl
fnstcw
repnz
out
cs
int3
aaa
mov
inc
test
add
mov
in
xchg
jno
jmp
shlb
les
jecxz
mov
lds
stos
add
mov
lods
pop
scas
aaa
out
insl
mov
mov
dec
cmp
mov
cld
jae
pusha
popf
call
jge
rclb
setge
je
xorb
dec
bound
sub
faddl
cmpsb
or
jno
test
sbbb
outsb
insl
cwtl
lock
nop
out
or
dec
adc
incl
dec
test
lds
xorb
rorb
lcall
pushf
adc
sub
and
sbbb
and
out
add
repnz
sti
ljmp
inc
xchg
or
or
mov
dec
lea
iret
add
shrb
mov
add
add
add
ret
dec
jae
add
add
add
adc
add
add
add
add
loop
add
add
or
add
add
sbb
add
xor
sbb
mov
add
add
add
add
and
ja
mov
jg
jg
int3
int3
int3
or
outsl
jne
or
add
add
add
add
add
into
cmc
add
add
inc
add
add
add
add
add
add
add
add
aad
popa
and
jo
add
pusha
jae
inc
jb
add
pop
add
push
fsts
fimull
or
push
pop
test
or
incl
add
inc
aad
call
decl
push
push
push
push
and
dec
insb
push
rcl
lret
in
mov
rolb
cmp
mov
adc
pop
inc
push
popl
push
fisttpl
add
clc
decl
incl
movsl
and
add
or
decl
leave
incl
cmp
clc
cmp
stc
sub
lea
lock
inc
jne
inc
lock
in
push
mov
add
add
add
outsl
lods
cmc
inc
imul
outsl
dec
test
gs
sub
inc
jae
add
jbe
je
arpl
scas
cmpsl
gs
dec
fs
ja
add
addr16
popa
add
inc
imul
push
addr16
add
push
mov
ds
scas
xchg
fsubp
popa
dec
popf
mov
inc
ror
and
inc
push
lods
rcrl
outsb
movsb
test
fs
and
pop
push
cli
dec
or
push
repz
push
cmpl
pop
insb
rorl
mov
jae
ljmp
adc
fcompl
mov
icebp
pop
jb
mov
mov
jbe
sub
pop
mov
daa
je
push
pop
dec
lock
sarb
add
sub
fsts
push
push
xchg
inc
mov
out
mov
pop
rcrl
andl
pop
dec
add
stc
aas
jmp
repnz
shrb
or
scas
push
sub
cmpsl
imul
adc
lds
push
int3
cld
push
insb
jle
int
cmp
testb
cmp
test
mov
repz
mov
or
fdivs
rcl
cwtl
je
movsl
je
dec
hlt
mov
in
mov
ss
mov
pop
sahf
fidivl
push
mov
push
int
pop
mov
jg
scas
ljmp
or
mov
xor
in
dec
cmp
add
ja
nop
cmp
cld
cld
imul
jecxz
rclb
addr16
sub
in
aam
jbe
cmp
adc
push
xor
icebp
pop
movsb
enter
xchg
mov
mov
in
leave
jg
out
incl
jg
cli
or
sahf
push
mov
jge
enter
inc
sbb
xchg
fisttps
cmp
cwtl
sbb
call
pop
in
xor
call
add
cmc
pop
lret
mov
lds
push
and
aam
imul
rcrl
imul
mov
cmp
hlt
dec
mov
push
rcrb
rcrl
push
loop
fildl
aam
je
scas
mov
int3
popa
shlb
fisubrl
cld
fnstcw
xor
data16
inc
and
push
fimuls
imul
pusha
cmpsl
fldcw
cmp
out
mov
nop
fmull
mov
test
es
fidivs
mov
leave
xchg
dec
mov
lds
xlat
ss
mov
push
pcmpeqw
cmp
mov
sti
pop
sub
push
mov
jge
jae
add
mov
in
push
enter
push
lahf
div
adc
out
pop
scas
inc
xchg
bound
xor
fistpl
fisubs
xor
push
imul
sub
call
cltd
lcall
orl
lret
scas
inc
xchg
jg
adc
aam
mov
dec
mov
jns
mov
jle
lcall
sub
and
imul
popa
mov
push
cli
and
pop
fadd
ja
bound
mov
push
jo
mov
cmp
cmp
xor
enter
out
lods
cmp
jnp
rorb
adc
test
mulb
rorl
mov
push
icebp
sub
ds
mov
mov
mov
dec
xor
sbb
jb
clc
push
and
pop
repz
xor
sbb
dec
shll
mov
adc
mov
push
jl
xchg
push
or
or
les
dec
mov
add
lahf
movsb
push
test
test
jl
lar
aaa
aam
xchg
add
mov
add
push
push
add
push
push
cmpsl
mov
adc
cmp
fnstsw
dec
push
push
dec
lods
jno
sarb
sbb
mov
sbb
test
lock
dec
xchg
cltd
xor
js
jmp
pusha
es
mov
divb
cmp
add
in
and
xorb
popf
pop
shll
lahf
inc
mov
mov
and
adc
dec
xor
sti
fistl
add
mov
nop
inc
mov
ret
ret
das
pop
jns
sbb
stos
pop
jl
scas
in
lods
jle
pop
fsts
xor
add
sbbb
insb
out
mov
jae
idivl
pop
ret
fwait
xor
repz
mov
pusha
jecxz
lds
mov
out
add
cld
add
flds
rclb
stos
scas
hlt
cmp
mov
movsb
ljmp
repz
stc
les
cmp
int3
pop
inc
in
cltd
fcoms
or
mov
sub
push
jecxz
imul
mov
sub
je
gs
outsb
sbb
imul
imul
aam
add
add
repz
stos
cmpsl
rclb
push
adc
mov
inc
out
shrb
jmp
test
lods
hlt
insb
loop
and
bnd
cltd
dec
hlt
mov
movsl
out
mov
aam
push
loopne
daa
xchg
stc
mov
sti
arpl
push
jbe
fnsave
add
fxch
mov
ja
imul
pop
neg
pop
push
divb
mov
out
scas
lods
push
ljmp
inc
div
aaa
push
dec
popa
ja
pop
adc
stos
and
and
iret
jo
ret
sub
stc
out
rorl
mov
or
das
movsl
xchg
pop
test
ret
xorb
mov
les
jle
adc
push
push
ficomps
add
xchg
lods
int3
push
lock
pop
jecxz
addl
or
fadds
mov
dec
insl
lret
adc
movsl
enter
stc
mov
xchg
sarb
test
fiadds
jmp
lea
and
pop
xchg
mov
daa
push
adc
add
loopne
and
std
xlat
fs
xor
std
add
in
pushf
testl
fwait
xor
insb
fwait
jne
inc
xchg
jbe
loopne
inc
es
lock
dec
mov
sbb
mov
addr16
popa
mov
fistps
fimuls
ret
dec
cld
pushf
testl
mov
cld
cwtl
data16
cmp
xor
int
jno
jp
stos
aam
loope
sub
cli
jp
sahf
jnp
dec
ljmp
xchg
pop
sub
adc
mov
ret
data16
sbb
movsl
gs
push
aad
jne
cmp
inc
lea
aad
xchg
push
call
add
inc
gs
add
pushf
xchg
adc
iret
cli
push
repz
pusha
hlt
ss
fistpl
aaa
or
adc
stos
popa
insl
shr
sahf
fs
ljmp
repnz
mov
dec
push
cmp
mov
int3
jb
add
xchg
orl
daa
stos
xchg
lock
push
imul
imul
sub
cmp
incb
pop
mov
adc
in
ret
das
xchg
sub
mov
ret
inc
cwtl
or
xorb
pop
push
dec
mov
sbb
mov
test
jae
js
out
jmp
inc
add
inc
dec
ret
notl
ret
or
or
xor
jp
mov
les
shr
lock
cld
ret
call
mov
or
or
or
fcmovnbe
jns
and
push
cli
mov
in
xchg
xor
push
insl
sbbb
inc
cmp
hlt
inc
sub
xchg
xchg
push
daa
stos
or
jg
jmp
mov
scas
jo
dec
mov
dec
mov
ds
xlat
scas
jae
jp
mov
cmp
cvttps2pi
stc
mov
jge
pop
or
enter
cmpsl
clc
sub
mov
into
in
or
outsb
lods
fs
out
int3
filds
fdivrl
iret
mov
or
mov
std
popl
inc
inc
leave
inc
or
xor
pop
mov
cmpsl
push
pushf
mov
adc
and
std
inc
cmp
and
mov
popa
sbb
and
call
cmc
fcomip
pop
inc
xchg
test
ror
pop
scas
leave
mov
adc
sub
pop
mov
out
sub
iret
xchg
in
std
push
pop
inc
rolb
sub
lret
pop
cli
fptan
addr16
mov
shll
sbb
cmp
pop
xor
sbb
test
nop
lahf
dec
add
mov
mov
cltd
cli
mov
cld
leavew
nop
sbb
lret
fcoml
int3
test
test
push
aas
and
inc
sub
mov
cli
loope
call
repz
sbb
xor
stos
mov
int
jle
into
lock
subb
xchg
int3
or
jo
inc
jbe
and
cwtl
adc
aam
add
xor
mov
mov
fcompp
es
cs
sub
stc
iret
jns
fsubrl
jb
adc
pop
cli
push
loope
mov
xor
jge
imul
pushf
das
test
adc
push
ljmp
fmull
imul
or
and
mov
mov
mov
mov
jmp
repz
aas
faddl
push
mov
add
lods
add
hlt
in
xlat
test
pop
popf
lahf
stc
pop
pusha
sbb
jne
and
nop
jmp
cmp
mov
enter
insl
mov
mov
jbe
dec
fisubrl
jnp
test
pop
jg
cmp
xchg
lcall
pop
movb
sub
inc
jg
push
mov
mov
xchg
es
inc
adc
jno
nop
mov
jle
sub
xor
jge
scas
adc
loope
subl
negb
outsl
add
cmp
sub
jb
xor
lcall
mov
movsl
xchg
or
dec
popa
test
push
int3
push
lcall
push
and
sarl
rorl
mov
fbstp
notl
cmp
stos
or
and
lret
sub
cs
adc
arpl
mov
jp
rol
mov
jo
mov
inc
push
lret
ja
and
xor
xorb
xor
mov
jno
aam
sub
pop
pop
xor
fwait
test
iret
fwait
dec
cmpsb
mov
lds
outsl
fisubs
sahf
dec
mov
movsl
int
and
or
test
pop
out
dec
sbb
cmp
daa
push
push
in
loopne
rclb
xchg
outsl
pop
and
stc
cmpsl
and
loopne
imul
lret
mov
cwtl
loop
xchg
loopne
pop
jnp
loope
cmp
fbld
mov
enter
lea
cli
mov
push
in
es
iret
lods
nop
cmpsb
adc
sub
sar
inc
scas
mov
mov
adc
dec
xchg
xor
push
pop
mov
pop
and
shlb
and
nop
sbb
sub
in
xor
jge
mov
push
test
cld
jg
cmc
xchg
es
leave
sti
sti
jmp
aam
stc
push
mov
dec
out
pop
cmc
push
mov
adc
mov
fwait
dec
dec
inc
sub
lea
mov
push
cli
xchg
in
sub
insb
subl
negb
or
iret
stos
push
push
cmpl
or
or
inc
dec
inc
xchg
imul
mov
lds
push
and
sub
lea
call
dec
pop
stc
cwtl
imul
cld
enter
mov
push
cmpsb
xor
jno
lcall
or
test
cmp
icebp
push
fxch
xchg
and
adc
cmp
cmp
sets
lahf
add
or
pop
xchg
mov
sbb
aam
jbe
dec
or
test
xor
dec
push
or
mov
ja
lds
sbb
mov
or
pop
pushf
add
jle
mov
inc
adc
enter
mov
adc
inc
mov
dec
bound
pop
bnd
sbb
push
jae
sub
sub
pop
bswap
cmp
xlat
imul
pop
insb
out
testl
mov
clc
mov
jg
mov
sbb
out
sbb
dec
jmp
pop
add
scas
adc
pop
arpl
jno
dec
push
cwtl
xor
mov
cmp
mov
sbb
rcl
cmp
push
xor
data16
xor
xor
test
adc
enter
mov
sahf
mov
ja
push
pushf
xchg
hlt
xchg
jns
mov
push
or
xchg
popf
xor
pop
dec
push
dec
add
repnz
mov
xchg
mov
cld
loope
jbe
inc
mov
ss
cmp
jnp
arpl
add
imul
xchg
mov
inc
xchg
sbb
in
in
mov
mov
insb
inc
cmc
mov
sarb
pop
push
leave
jmp
mov
sub
aam
inc
sbb
mov
dec
xchg
push
repnz
pop
sub
iret
daa
cmpsb
lret
psrlq
addl
fildl
xorb
mov
pop
roll
out
ret
xchg
pop
mov
sbb
pop
mov
dec
jmp
mov
or
cmpsl
xorl
out
jb
push
fwait
push
push
lds
imulb
add
xor
jl
or
or
xor
scas
inc
lahf
push
in
sub
mull
sti
sbb
es
dec
adc
fcoml
cld
push
adc
xchg
adc
sub
xor
loope
xlat
je
pop
rolb
jae
out
push
cmp
pop
pop
cld
push
mov
out
xchg
jl
decl
enter
add
mov
add
mov
bound
pop
ret
mov
lods
cmp
and
call
pop
das
test
shrl
mov
pusha
mov
cmc
xor
jne
jnp
and
mov
adc
mov
push
dec
popf
mov
fsubs
cmp
sti
faddl
adcb
aam
jge
outsl
roll
mov
adc
push
cmp
subb
popf
xchg
cli
push
repz
push
lock
lock
mov
lret
jecxz
fisttpll
mov
setnp
ds
lret
insl
loop
inc
call
and
dec
mov
pop
jmp
nop
das
add
pop
mov
lods
dec
fsts
xlat
imul
rcrl
push
jmp
rorb
aaa
jno
xchg
inc
and
insb
jecxz
mov
outsb
or
pop
xchg
jp
push
aaa
or
pop
mov
inc
into
pop
jg
xchg
push
icebp
xchg
lcall
scas
cmc
int
scas
dec
sub
xchg
lret
push
mov
loop
lret
iret
loopne
inc
cmp
add
cmp
daa
dec
pusha
test
mov
ljmp
inc
sbb
cmpsl
mov
andps
adc
in
test
mov
fs
in
out
dec
ds
and
js
imul
push
inc
lret
lahf
pop
jne
xchg
bound
or
pop
fwait
or
jns
lret
pop
jmp
xchg
lods
mov
ss
mov
enter
jnp
cltd
shlb
sub
iret
inc
leave
add
cwtl
loope
mov
cltd
pop
imul
mov
pop
fisttps
sub
xchg
leave
les
pop
fstpt
or
push
notl
xchg
scas
jl
sub
int3
enter
sbb
das
mov
xor
icebp
in
xor
dec
cmp
push
shl
mov
lret
sbb
lock
cmp
add
dec
cmc
inc
pop
cld
vmread
mov
dec
xlat
loope
cwtl
xchg
outsb
xor
and
nop
sbb
inc
xor
shrb
adc
out
iret
pop
pop
mov
push
dec
js
cmp
es
push
imul
lahf
or
mov
xchg
xor
test
sbb
in
jecxz
repz
xchg
divb
out
lods
in
cltd
jg
popa
insb
out
call
add
push
stos
stos
int
mov
std
and
pusha
les
popa
sub
inc
ret
fisubl
push
cmp
pop
cmp
enter
in
push
decl
sbb
imul
mov
xchg
popl
xchg
mov
insb
nop
add
jge
int
mov
push
ss
and
mov
jne
or
data16
loope
cmp
stos
sbb
int
in
out
cli
fcmovne
inc
push
psubb
int
and
pop
pop
aas
ds
lods
adc
hlt
scas
sub
mov
int
add
stc
jle
mov
lret
fcoml
lahf
sub
fstpt
sbb
adc
xchg
mov
test
enter
and
mov
sub
arpl
cmp
mov
dec
pop
push
sub
push
xor
lahf
rcrl
filds
xchg
loope
inc
dec
int
cmp
push
cltd
lcall
push
lcall
push
gs
outsl
sub
pop
inc
int
jge
mov
pop
sub
mov
movsl
add
mov
push
lret
xchg
or
dec
xchg
jge
push
xlat
fildll
inc
in
mov
push
icebp
pop
cmp
aam
adc
sti
test
in
fmulp
ucomiss
test
data16
arpl
mov
mov
mov
mov
test
movsl
dec
mov
xor
xlat
sahf
sub
lods
or
cmpsl
mov
mov
add
call
mov
dec
imul
cld
xchg
pop
mov
sahf
push
mov
pop
mov
insb
dec
mov
cmp
xchg
and
dec
sbb
cmp
movsl
add
sar
dec
sub
paddsb
out
mov
mov
jp
mov
push
fimull
mov
dec
mov
test
mov
mov
je
ret
cmc
or
dec
lahf
lods
or
and
in
add
push
mov
dec
pop
popf
inc
lods
mov
xor
pop
fsubl
sbb
lea
stos
push
cmpsb
insb
scas
outsl
loope
out
inc
and
dec
fistps
jae
jle
divl
sub
mov
xchg
pavgw
pop
fcomps
insb
test
gs
insb
movsl
cwtl
jnp
push
lods
lock
hlt
inc
dec
sbb
pop
fucomi
aas
aaa
dec
aam
xchg
jge
or
lea
mov
leave
pop
xor
fisubrl
push
loopne
int3
mov
mov
cmpsb
cmp
xchg
insb
jnp
pop
sub
jp
mov
inc
or
and
dec
adc
std
lds
aam
test
orl
test
sbbb
adc
or
pop
push
subb
icebp
or
jecxz
cltd
inc
pop
push
fisttpll
xchg
sti
dec
popf
adc
jnp
jmp
sbbl
outsb
and
test
cmp
mov
repz
int3
pop
jle
dec
jno
bound
icebp
loop
cmpsl
cwtl
test
jmp
cmp
test
mov
fnstsw
cmc
std
adc
push
cmp
mov
sub
jp
xor
enter
fildl
mov
ret
sub
scas
xor
inc
mov
int
dec
loopne
ds
dec
fnstenv
push
test
cmp
das
add
pop
mov
int3
mov
jle
jmp
cld
pop
lods
pop
cmp
mov
inc
mov
and
fwait
sbb
mov
add
add
add
add
add
add
adc
pop
add
add
into
jne
addb
add
add
add
add
add
add
add
out
aad
add
add
add
stos
stos
add
ja
lods
mov
clc
clc
dec
int3
int3
int3
add
add
add
stos
xorb
add
add
add
add
push
pop
add
add
movsl
lret
mov
add
je
add
and
add
add
outsl
xor
sbb
sbb
sbb
cmp
imul
sbb
and
pop
js
add
imul
outsb
add
push
push
aaa
add
xchg
mov
or
add
orl
add
test
inc
test
aad
push
add
ret
add
decl
repz
sbb
cmp
incl
inc
add
add
add
adc
leave
adc
incl
add
add
add
mov
add
xor
add
mov
imul
call
jmp
inc
dec
or
aad
push
adc
lock
push
add
call
adc
call
adc
cmp
inc
add
incl
sbb
inc
add
add
add
inc
stos
or
add
add
ficompl
sbbb
sbb
sbb
sbb
sbb
add
push
add
je
jae
lods
outsl
dec
imul
inc
jae
imul
inc
insl
popa
outsl
inc
popa
inc
outsl
popa
jo
insb
outsl
add
add
mov
push
add
add
dec
jbe
fs
push
insb
inc
insb
push
push
add
add
add
or
add
add
mov
inc
sub
add
das
xlat
mov
cltd
lret
push
pop
jg
adc
sub
sub
ja
jb
fiadds
sbb
sub
and
sub
dec
mov
mov
cwtl
jmp
mov
fdivrs
fbstp
mull
and
dec
cmp
movsl
xchg
in
shrl
add
fs
dec
add
mov
push
lods
sub
add
mov
push
push
xchg
xchg
imul
cld
andl
and
stos
sahf
cmp
pop
shll
je
ljmp
push
sar
inc
movsb
enter
inc
gs
daa
fs
dec
pop
dec
outsb
cmp
outsb
ljmp
xchg
adc
add
loope
push
cmp
cmp
sub
push
mov
jno
fildl
imul
inc
pop
jl
mov
insb
daa
mov
mov
mov
or
mov
adc
push
adc
sbb
or
xchg
fimull
jmp
push
cmc
jb
mov
lea
sub
sahf
push
fiaddl
int
dec
scas
adc
por
pop
jmp
imul
imul
fwait
jecxz
fsubrs
adc
mov
xchg
xor
sbb
pushf
push
es
sub
jge
adc
subb
and
aas
fs
cld
stc
inc
jns
dec
test
mov
arpl
cs
sbb
icebp
sbb
push
out
scas
mov
sbb
lds
pop
icebp
outsl
stos
sbb
je
mov
xchg
cmp
inc
cli
mov
xor
push
mov
xor
pop
jb
insl
xor
jnp
aad
jnp
xor
adc
mov
std
adc
xlat
inc
sub
jg
push
movsl
jne
adc
imul
push
xor
mov
gs
out
dec
adc
push
cmpsl
jbe
mov
jge
test
sub
push
and
mov
enter
ljmp
sub
test
adc
add
mov
shlb
fwait
rclb
sbb
scas
add
test
jecxz
cmc
add
sti
mov
cmp
ljmp
xor
stos
sahf
xchg
pop
mov
dec
in
pmulhw
ja
sbb
pushf
mov
cs
int3
and
imul
mov
repz
or
popa
out
jo
insb
scas
cmp
push
mov
call
mov
test
sub
mov
mov
cmp
mov
xor
dec
fcomp
stos
pop
sub
int
pop
xor
pop
cmp
cltd
sahf
in
ljmp
sbbl
mov
pop
jmp
lcall
loope
cld
cwtl
mov
xor
stos
idiv
pusha
gs
inc
mov
sub
iret
aam
sub
jo
cld
out
inc
mov
xor
sbb
add
xchg
ret
mov
add
ret
push
sub
ret
push
mov
mov
xor
in
addr16
inc
movsl
adc
push
jmp
lahf
push
or
cmp
pop
in
xchg
pop
outsl
inc
mov
lds
out
rcrb
hlt
pushf
sahf
push
push
or
je
sub
mul
leave
and
stc
mov
lcall
xchg
nop
stc
fistpll
int
xor
add
jmp
aam
lods
cmp
sub
add
test
jno
cmpsb
sub
pop
xor
mov
sub
xchg
lods
into
es
mov
adc
xchg
mov
or
mov
adc
xchg
lea
addr16
and
aaa
sub
fcoml
jne
push
rolb
cli
ja
cmp
aad
sti
test
pop
sbb
pop
jle
lret
push
inc
testl
test
mov
rcrl
lret
call
mov
dec
movsl
mov
stc
jp
cmc
xchg
xor
fldpi
mov
pop
cmp
repz
jns
sbb
lahf
movsb
test
scas
fidivrl
hlt
or
out
in
pop
xlat
jo
or
fwait
mov
jb
or
jae
mov
lock
push
jae
lods
inc
test
jle
pop
push
call
shl
pop
xor
xor
cs
add
lret
pop
cld
or
push
jle
aad
mov
bound
addb
and
sbb
inc
mov
nop
mov
pop
mov
jge
xor
mov
sbb
adc
repnz
xchg
mov
out
movsb
jmp
sbb
pusha
lahf
test
xchg
push
iret
sub
cmc
mov
xor
pop
sbb
push
add
mov
or
mov
stos
bound
orl
cmp
and
loop
sub
movsb
in
xchg
scas
jno
lret
xor
push
jne
in
outsb
mov
shr
aad
mov
enter
push
rclb
cltd
fsubrs
test
inc
cmp
imul
int
test
stc
repz
inc
in
loope
rcl
mov
fcomps
ficoml
xchg
test
sub
loopne
inc
mov
lret
out
sbb
ljmp
pop
jb
lret
mov
xchg
mov
push
push
and
sbb
mov
std
repnz
in
outsb
xor
dec
aaa
addr16
sbb
outsl
jbe
inc
dec
adc
adc
clc
adc
mov
mov
mov
add
pop
or
andl
test
or
insl
imul
ret
repz
aam
movsl
sub
lock
dec
aam
sub
push
and
ret
sub
xchg
jne
pop
es
add
mov
stc
leave
cmp
and
jg
sbb
out
mov
jb
popa
inc
movsl
xchg
push
ret
sub
ja
popf
adc
push
and
test
popa
inc
popf
sahf
mov
jle
mov
in
and
mov
cmc
jge
push
pop
mov
pusha
fwait
dec
adc
mov
cld
cmp
cmp
mov
pop
lcall
xchg
dec
sbb
out
shll
loope
sbb
into
dec
adc
cwtl
dec
stc
lock
mov
cmpl
call
adc
je
aam
ret
out
xchg
inc
pop
popf
jb
cmp
mov
mov
dec
call
xorl
xchg
adc
repz
stos
lock
jle
jmp
mov
nop
outsb
and
xor
stos
push
cmp
sub
pop
sbb
mov
sbb
lock
mov
mov
jno
dec
inc
mov
leave
xor
test
and
or
xchg
push
inc
sub
ljmp
dec
sbb
jnp
push
das
es
push
ss
bound
adc
mov
push
test
jno
rcrb
cmp
movsl
push
outsb
push
sbb
cmpsw
adc
arpl
movsb
arpl
out
add
mov
call
cld
in
in
mov
fstl
cld
aad
dec
fisubs
test
movsb
das
sahf
pop
cwtl
pop
lcall
jl
push
mov
fsubs
je
jb
jno
xchg
in
add
cli
xchg
xchg
mov
push
pusha
mov
movsb
fsubrs
ss
xor
out
cmp
mov
mov
or
popa
divb
roll
pop
fabs
push
iret
or
iret
orl
outsl
in
fisubrs
or
inc
stos
sti
dec
sbb
xlat
or
xchg
jmp
mov
mov
nop
call
and
cmp
add
jmp
loop
cs
add
push
enter
pop
inc
add
add
test
call
js
xchg
jb
fsts
jae
cmp
or
jge
add
mov
xchg
pop
popf
sbb
pop
nop
jae
mov
inc
cmp
add
cmp
mov
cmp
addr16
in
xor
into
imul
pop
xchg
testb
add
mov
adc
cld
clc
lcall
outsl
arpl
inc
add
outsb
and
gs
loope
imul
inc
xlat
xchg
and
cmp
and
adc
push
outsb
inc
push
mov
mov
sub
aad
loope
pop
pop
xchg
divb
filds
push
mov
fisttpll
mov
xor
stos
xor
cltd
rolb
xor
lock
loope
leave
adc
subps
mov
aad
jl
sbb
inc
cltd
cltd
mov
mov
push
mov
pminub
push
sub
subb
loop
xor
cmp
lcall
insb
lea
lret
cmp
inc
cli
lcall
mov
mov
pushf
mov
ss
nop
aad
jge
xchg
cmp
jmp
leave
in
and
inc
sub
lods
test
cmp
rcrb
cmp
jo
jecxz
xor
mov
leave
sti
push
inc
stc
lcall
push
rol
push
dec
jno
aam
push
lods
gs
jg
push
pusha
sbb
xor
in
popf
movsl
xchg
mov
mov
xor
push
inc
out
pop
cld
lds
pop
mov
dec
aad
sub
mov
fsubp
int3
testb
xor
arpl
pop
iret
outsb
xlat
lods
sub
pop
jle
xchg
inc
sbb
std
xchg
mov
dec
xchg
stos
stos
lahf
pop
xchg
add
sub
adc
lahf
jge
enter
loopne
es
xor
adc
bound
push
xchg
jbe
or
or
adc
push
sbb
or
jmp
jae
mov
adc
and
aam
inc
mov
sbb
inc
enter
popa
adc
in
fistps
movsl
pushf
xchg
insb
mov
mov
mov
sub
int3
add
jbe
sarb
add
cli
add
jb
pusha
push
negl
mov
loopne
sub
inc
sub
cld
add
add
push
aas
xchg
sbb
pop
lods
stos
iret
xor
movsb
dec
cmpl
mov
or
mov
sub
sbb
repnz
in
rcrb
sbb
cmp
es
cmp
test
fsts
pop
mov
insl
test
mov
pop
out
jmp
mov
pop
pusha
dec
add
add
mov
pop
imul
and
adc
int
jnp
out
jnp
test
add
filds
adc
mov
mov
jecxz
jns
mov
jno
popa
out
les
cld
inc
pop
fs
imul
fistps
push
xchg
push
push
pop
push
es
fsubs
pop
mov
leave
add
cmp
jne
movsl
das
repz
in
xor
cwtl
sbbb
pop
cs
pop
xorb
dec
push
test
add
dec
loope
nop
mov
outsb
lods
jg
adc
inc
roll
fldl
cli
popa
xchg
pop
inc
les
adc
pop
in
sub
out
or
pop
mov
sahf
out
or
sub
cmp
adc
in
mov
pop
mov
lcall
add
fwait
lahf
push
and
data16
cmpsb
out
inc
jmp
add
dec
xchg
sbb
push
sub
pop
dec
push
sub
movhps
or
stos
pop
enter
push
mov
cmp
sbb
out
stos
xor
inc
or
les
fcmove
daa
mov
xlat
sub
or
adc
mov
xchg
jmp
dec
pop
pop
or
xchg
push
in
fiaddl
adc
add
push
sub
insl
mov
xorl
lahf
je
loop
and
loope
je
rolb
sahf
repz
stos
rcrl
insl
mov
ja
mov
icebp
cmp
fistl
insb
sub
loop
jne
jbe
mov
jecxz
fstpt
cmpsb
jl
pop
jo
mov
push
xor
mov
jmp
add
push
sub
mov
or
cmpsb
mov
push
stos
ljmp
sbbl
aaa
xchg
and
adc
mov
sbb
add
xchg
outsb
les
jnp
call
push
and
and
pop
pop
push
out
jbe
mov
out
fsts
int
insl
in
sub
inc
std
movsb
ret
inc
std
xchg
and
or
jg
mov
dec
addr16
mov
mov
aas
jg
fnstcw
movsb
fwait
test
lea
int3
enter
and
icebp
adc
xchg
sbb
mov
fldcw
sahf
jecxz,pt
add
aad
test
dec
jb
fidivrl
hlt
iret
movsb
loope
outsl
xchg
loopne
pusha
pop
insl
pop
mov
adc
insb
aas
in
sbb
or
repnz
mov
adc
push
mov
adc
jae
add
rcrb
xlat
mov
adc
jno
fistpll
adc
popa
jecxz
scas
mov
push
das
mov
inc
lret
jmp
stos
dec
jbe
mull
mov
xchg
dec
sbb
iret
push
aas
xor
std
mov
nop
mov
inc
and
in
add
ret
fwait
out
or
dec
int
addl
fdivl
es
sti
rcll
sbb
lret
mov
bound
into
bnd
pop
rorl
cli
sub
pop
mov
cmp
mov
lret
out
or
mov
pop
push
jno
dec
mov
cltd
xchg
jnp
or
dec
sub
stc
aaa
les
andnps
adc
xchg
fmulp
adc
out
in
xor
rcll
lods
push
shll
addr16
pop
aaa
push
sub
push
dec
leave
push
xor
clc
inc
ljmp
sarb
xchg
xlat
and
push
jmp
dec
clc
mov
rcrl
xor
and
negb
push
xchg
jo
lods
je
aas
int3
fcompl
sbb
fidivs
inc
sub
or
dec
daa
fwait
test
lds
pusha
mov
adcl
gs
cmp
popf
or
cwtl
add
in
or
mov
ljmp
pop
lods
xchg
mov
aad
loop
scas
xor
adc
mov
pop
loop
fs
out
leave
mov
std
ljmp
inc
jecxz
sbb
aam
pop
jg
aad
xchg
das
das
idivl
push
stos
outsb
adc
xor
add
sti
xor
xchg
sbb
decb
dec
stc
sbb
mov
and
movsb
es
fistpl
adc
cltd
mov
pop
mov
dec
sbb
pop
or
inc
push
ret
add
xchg
fnstcw
stc
je
lock
xchg
adc
xor
jge
in
inc
sub
fidivrl
ret
push
ljmp
cwtl
inc
cmpl
std
sub
sarb
and
and
imul
pop
leave
scas
popa
ret
and
out
shrb
jo
push
pop
cmpl
pop
std
lret
cld
xchg
mov
rclb
push
dec
dec
popf
sbb
mov
pop
cld
mov
lret
pusha
outsb
bound
or
jge
xchg
scas
cmp
jns
add
dec
call
ja
roll
aas
push
adc
loop
and
fcoms
jle
mov
ret
clc
outsb
mov
push
sbb
rcrl
sbb
rclb
cmp
pop
shl
sti
pop
dec
addl
out
out
insb
js
xchg
xchg
push
lahf
inc
dec
cmp
frstor
or
test
cltd
loop
imul
insb
fxtract
sbb
fnsave
cmp
ret
dec
rcrb
pop
aas
cmp
shl
dec
cltd
cmp
jo
adc
mov
int3
push
arpl
mov
fdivrs
loopne
daa
idivb
sbb
in
xor
mov
sbb
xchg
inc
clc
pop
mov
mov
jge
cmp
sahf
add
scas
test
stos
fsubrl
and
push
pop
and
in
test
popa
sbb
fistps
mov
mov
lea
xchg
loop
mov
adc
pop
xlat
add
lea
cmpsb
push
dec
adc
test
scas
test
int3
rolb
cmp
in
test
pushfw
push
cmp
je
loopne
cmp
outsb
in
cwtl
sub
jbe
mov
add
out
ror
adc
mov
mov
sbb
xchg
cmpsl
in
mov
mov
test
jge
pop
je
push
jns
shll
in
pusha
inc
incb
ljmp
mov
sub
fstpt
dec
lock
xor
jge
xor
sahf
pop
dec
adc
sbb
xor
loopne
popa
ret
mov
fistpll
or
sbb
jge
icebp
dec
adc
lds
cwtl
inc
lcall
cmc
xor
inc
sbb
jge
iret
sbb
loop
pushf
push
loopne
loope
cmpsb
xor
mov
xchg
jl
cmc
adcl
jno
mov
jmp
mov
xlat
movsl
mov
pushf
negl
jae
push
xchg
jge
or
xchg
sub
and
js
push
loop
sbb
mov
dec
dec
shr
mov
cli
punpcklbw
pop
fmul
sub
sahf
negb
mov
mov
leave
into
jle
xor
adc
std
loope
cmp
xchg
sbb
lods
xchg
pop
mov
dec
inc
pop
jge
inc
or
pop
xchg
jnp
dec
lret
stos
dec
push
push
push
jp
mov
imul
aaa
cwtl
dec
shlb
into
mov
and
lea
sbb
ljmp
into
js
fstps
sbb
std
aad
adc
movsl
jge
cltd
pop
ss
and
movsl
cmp
mov
add
lock
test
incb
aad
iret
sub
notl
fdivrl
jmp
out
mov
rcrl
and
sub
pextrw
hlt
iret
sub
and
mov
adc
sbbl
push
jg
jne
xchg
sub
mov
jle
mov
inc
arpl
aas
and
sbb
repz
testl
sbb
shrl
sub
inc
xor
push
jg
arpl
sbb
add
enter
out
cmp
push
sub
shl
sbb
jne
sbb
xchg
iret
mov
es
mov
in
push
out
and
pop
sbb
dec
lahf
sbb
test
insb
add
out
pop
pop
xchg
stc
add
jp
ficomps
lcall
fs
mov
cmp
lea
pop
js
in
jb
test
mov
pop
fbstp
fsubrl
test
shrl
cmp
loopne
mov
aas
and
xchg
fadds
fscale
mov
add
fsubrs
sub
in
pop
ror
mov
jecxz
xchg
sbb
call
cld
pop
sahf
test
sub
cmp
sub
jno
dec
sub
movsb
lods
sub
shl
or
or
repz
pop
hlt
jns
idivl
in
dec
imul
and
dec
push
pop
rcll
cmpb
add
insb
add
lds
push
pop
add
dec
add
add
movsl
lret
test
add
add
fadds
add
add
add
add
xor
add
add
add
add
add
add
addb
stos
stos
add
ja
mov
ljmp
add
add
add
and
and
insb
and
and
mov
xor
add
add
adc
push
add
add
add
mov
fwait
inc
add
add
add
mov
lcall
push
or
xor
and
out
imul
push
jb
outsb
inc
dec
inc
add
gs
add
fcmove
sub
inc
mov
lcall
jmp
fsubs
nop
in
add
ret
xorb
adc
push
push
je
test
cld
push
call
cmp
bound
push
lock
in
inc
stc
or
xor
add
adc
repz
cld
enter
faddl
dec
add
add
sbb
adc
xor
rolb
add
incb
incb
lea
incl
jl
or
cld
xor
cld
and
adcl
inc
lock
add
lcall
sar
dec
mov
pushl
pop
xor
push
mov
hlt
push
push
add
cmpsl
push
and
je
add
add
add
in
movb
adc
xor
cmp
out
xor
add
pop
add
je
js
outsl
movsl
outsb
insl
je
add
inc
icebp
jo
movsl
gs
jb
outsb
outsl
imul
pusha
jae
insb
imul
push
xor
push
jne
push
cli
xor
outsl
sti
imul
loopne
insb
push
insb
and
add
add
add
add
add
fildl
add
add
add
add
ret
add
out
iret
addr16
fdivl
arpl
sub
push
cmpsb
fsubrp
test
push
dec
xor
sbb
stos
into
loop
xchg
push
jmp
in
push
loopne
xor
cmp
cmp
loopne
pop
js
mov
mov
xlat
jns
inc
jge
add
sahf
cmc
test
xor
fs
cmc
jo
adc
or
scas
loope
add
jle
cmp
stos
int3
xlat
add
ljmp
pop
jge
inc
sub
in
aaa
popa
in
cmp
bound
cmp
test
jp
iret
pop
dec
int
out
shll
push
or
pop
test
adc
hlt
dec
dec
int3
or
mov
je
mov
xchg
mov
mov
adc
pusha
ret
gs
jg
int
mov
rdpmc
dec
inc
daa
movsb
cmp
stc
and
pop
movsl
fimull
xor
mov
es
adc
clc
in
loopne
leave
imul
scas
jb
int
clc
adc
mov
sub
xchg
loope
addr16
xchg
and
cmpsl
mov
test
xor
adc
pusha
repnz
fldcw
inc
in
sub
rcrl
mov
dec
repz
jecxz
and
ljmp
mov
push
in
xor
js
or
hlt
jl
xor
enter
iret
inc
adc
push
or
add
out
mov
out
sub
lods
pop
lods
push
and
sub
cmp
jecxz
and
fcomps
mov
sbb
sahf
movb
mov
mov
dec
or
dec
xchg
in
pop
pusha
sti
mov
dec
mov
in
mov
xchg
dec
xlat
add
sub
pop
sbb
loop
ds
pop
xor
dec
aas
jae
repnz
pop
leave
or
jmp
pop
js
repz
adc
sub
pop
sbb
or
out
test
int
push
leave
or
in
xchg
sub
mov
mov
sub
push
movsl
std
fcompl
xor
inc
loope
clc
pop
dec
adc
inc
push
insb
scas
mov
push
add
clc
repz
movsl
xchg
aaa
pushl
xchg
xchg
push
incb
mov
shll
cmp
fwait
push
mov
pop
sti
jecxz
mov
cmp
jbe
and
xchg
flds
int
push
jb
pop
jecxz
sbb
cltd
cmpl
jae
jno
adc
xchg
or
xor
out
fcomps
aam
clc
ljmp
and
push
out
mov
enter
xchg
push
nop
pop
lds
or
sbb
ljmp
pop
in
fdivrl
lds
and
ja
outsl
fwait
jle
mov
pop
hlt
dec
ret
adc
sub
adc
rcl
in
mov
mov
out
mov
cmp
xchg
ja
adc
dec
sub
int
mov
popf
orb
add
jge
neg
push
faddl
lds
mov
rcr
inc
sbb
std
icebp
out
mov
faddl
push
stos
cmpsb
pop
add
repnz
cmpsl
xor
cmpl
out
inc
outsb
fisubl
ds
les
push
outsb
adc
out
shlb
mov
movl
sub
nop
icebp
cmp
or
push
xor
out
fwait
jne
rol
call
push
xlat
jl
push
test
insb
aam
in
lret
or
dec
dec
pop
shrl
clc
sub
mov
adcb
lret
iret
push
fwait
sub
cmpsb
fucom
movsl
adc
test
dec
pusha
lahf
call
popf
push
rolb
adc
mov
pop
inc
test
shl
subl
test
cmp
dec
iret
fldt
xchg
fnstcw
std
add
cmp
xchg
stos
sub
pusha
xor
adc
pop
jnp
test
add
aad
outsb
pop
adc
mov
lea
or
mov
lods
sbb
xor
nop
in
push
jl
fwait
cmp
push
pop
dec
aas
mov
iret
stos
mov
push
test
imul
cmp
fnstsw
xor
adc
adc
lret
pop
add
xchg
fstps
pop
loopne,pn
push
add
into
xlat
roll
mov
xor
sub
xor
and
cwtl
test
pop
rclb
xchg
or
sti
xchg
mov
ds
adc
sbb
pop
popf
arpl
and
repnz
int
into
enter
enter
cmp
std
mov
adc
mov
or
lret
xchg
out
jmp
pop
mov
mov
push
shlb
adc
jns
pop
mov
lea
stos
push
xor
or
xor
inc
xor
push
clc
adc
or
jbe
xor
jbe
xchg
out
push
xor
pop
icebp
jge
add
jge
sbb
pop
dec
imul
les
xor
sbbl
pop
fs
xchg
rcll
test
mov
bound
call
jmp
mov
iret
outsl
pop
enter
aad
xchg
ss
cmp
adc
mov
mov
cmp
add
sti
xor
or
adc
mov
dec
clc
lds
mov
in
push
popa
dec
repnz
cltd
xchg
lret
dec
ds
sar
adc
or
cld
xor
subl
inc
sub
movsb
push
fcoms
mov
imul
mov
jae
or
int3
test
loope
rolb
bound
cmp
inc
push
jecxz
mov
dec
sti
sub
xchg
mov
jne
jecxz
pop
jnp
pop
sar
pusha
das
jmp
and
mov
hlt
int3
mov
sub
jle
sbb
adc
lahf
shl
mov
in
cmp
cmpsb
sbb
in
cli
mov
sbb
shll
cmc
cmp
shrb
and
jb
adc
push
inc
flds
lods
test
inc
int3
xor
xchg
push
add
or
xor
fldt
das
sbb
cltd
nop
rcll
inc
pusha
mov
movsb
jge
xor
fbld
mov
out
inc
je
jbe
sub
jmp
push
xor
sbb
loope
and
cmpsl
pop
aam
mov
icebp
lcall
sbb
test
cli
fs
xor
or
cli
stos
jae
addb
pop
addb
stos
dec
rcrb
xlat
fiaddl
fwait
sub
stos
add
data16
out
mov
pop
add
or
sbb
insl
jg
mov
sub
fistl
pop
mov
cli
push
push
mov
xchg
adc
dec
push
dec
jl
mov
jae
repz
or
sub
mov
stos
or
lret
dec
aaa
addr16
into
or
pop
jbe
jp
ret
xor
ja
mov
mov
inc
call
dec
sub
into
je
cmpb
mov
add
pushf
add
jnp
jp
or
or
cmp
stos
imul
inc
gs
push
xchg
mov
insb
sbb
and
sbbb
or
jecxz
leave
jge
jb
and
stos
hlt
jecxz
or
and
xchg
fsubr
icebp
cli
pop
dec
sub
xor
adc
fsubl
jge
pop
sbb
cli
jge
aam
mov
nop
cmp
xchg
dec
cli
ds
mov
cmp
sbb
bound
pusha
xor
mov
in
jl
fs
cld
xchg
push
sub
inc
jne
mov
or
out
mov
pushf
adc
pop
mov
mov
jecxz
xacquire
xor
jl
sub
arpl
scas
adc
cmp
sub
dec
push
outsb
repz
push
adc
pop
scas
mov
rcrl
repnz
dec
inc
jl
testb
dec
and
jle
filds
dec
out
cmp
mov
push
xchg
pop
popa
push
push
loopne
imul
leave
sahf
cmpsl
sbb
cmpsb
hlt
in
jo
imul
mov
jne
cmc
aas
cld
sbb
std
sbb
bound
je
inc
add
jo
push
adc
repnz
mov
cli
pop
cltd
out
pop
popaw
jne
fwait
aas
ljmp
jns
sub
ljmp
data16
aaa
adc
arpl
mov
ja
loope
out
lcall
add
jl
sahf
ret
scas
mov
test
subl
inc
dec
and
pop
cld
xchg
bound
inc
push
dec
or
cmp
adc
cltd
icebp
in
or
inc
sbb
push
dec
jmp
rol
sbb
iret
dec
push
mov
jle
shll
arpl
mov
xchg
rcl
jnp
imul
popf
stos
push
and
xchg
push
inc
push
mov
outsb
lock
and
out
cmp
test
xchg
lds
jecxz
cmp
or
inc
subb
rcrb
mov
push
mov
and
jo
xor
int
aam
loope
push
enter
fldcw
insb
pop
push
test
outsl
shl
loopne
andb
inc
sbb
dec
jmp
push
jge
mov
cmp
push
push
std
xor
call
mov
inc
test
inc
or
ds
sub
adc
xchg
or
cmpsl
outsb
cli
xor
adc
xor
cli
enter
movsl
and
pop
sti
adc
or
les
sub
or
mov
and
lods
jp
mov
jl
subl
pop
xchg
mov
mov
std
xchg
adc
cmpb
mov
or
pop
xor
addr16
stc
cli
jl
int3
sahf
dec
daa
hlt
cmp
daa
mov
stos
push
ret
push
mov
pop
sahf
xchg
int3
jle
dec
push
lcall
nop
xor
xchg
loop
cmpb
xchg
jae
scas
call
lea
push
mov
sar
adc
mov
aam
iret
sub
cs
pop
gs
outsb
mov
pop
push
outsb
bound
in
test
call
gs
dec
shlb
std
aam
cmp
mov
fdivrs
cmp
pushf
popa
and
mov
js
mov
lcall
sub
idiv
rcrb
cmp
pop
adc
adc
jnp
ret
jg
pop
mov
cmc
das
adc
cld
rcr
les
ss
jb
out
xor
adcb
fucomip
dec
cmp
add
pop
and
aaa
push
push
into
cltd
push
dec
sbb
lret
subb
and
push
movsl
loope,pn
xor
push
mov
sub
pushf
cmp
std
enter
push
adc
jmp
push
out
mov
add
mov
mov
add
cli
xchg
rclb
jne
push
call
lods
imul
inc
jge
mov
repnz
and
les
jnp
inc
enter
lock
mov
push
mov
sub
fucom
jmp
fcmovb
push
aad
push
xchg
push
subl
out
cmp
jg
int
fs
outsl
pop
xor
addr16
ficomps
pop
or
cltd
bound
sbb
mov
xor
pop
sub
fwait
sub
jb
fmuls
push
xchg
push
inc
das
adc
dec
mov
scas
dec
push
add
rcrl
ret
jl
mull
mov
xor
jo
hlt
popf
es
sbb
loopne
add
sbb
cmp
clc
repz
xchg
xor
jmp
pusha
sbb
push
mov
stc
movsb
pop
pushf
aam
push
lock
inc
sbb
bound
inc
nop
nop
adc
popa
hlt
enter
pop
xchg
pop
inc
xchg
jae
cwtl
cmp
sti
sub
jae
or
inc
outsb
add
xchg
cmp
out
push
rorb
sub
inc
pop
sub
xor
xchg
and
cmpsb
sbb
out
cmp
mov
pop
or
jl
push
jbe
insb
scas
jns
xchg
adc
push
ret
jb
dec
push
add
and
jb
push
stc
stc
add
sbb
les
inc
dec
xor
in
in
mov
push
pop
inc
bound
mov
fcoms
ret
popf
call
cs
cmp
push
bound
nop
dec
add
es
and
pushf
scas
mov
inc
add
in
sbbb
lret
fcompl
cmp
in
adc
test
mov
std
push
les
mov
popa
pusha
fcomp
add
cmp
jmp
cmp
xor
and
test
fdivs
popa
es
mov
and
testb
arpl
aam
sbb
push
pop
jae
adc
lock
daa
cs
icebp
insl
js
fs
hlt
test
jp
sbb
sbb
and
pop
leave
lods
outsb
jne
inc
cmp
rorl
mov
or
xchg
inc
aam
cmp
and
or
and
and
es
jl
dec
inc
fstpl
mov
mov
or
aam
sbb
jnp
push
jecxz
notb
sbb
jge
xlat
shr
sarl
add
adc
shr
cwtl
inc
add
out
jnp
out
sub
push
in
sbb
inc
test
jl
out
inc
andb
or
sub
out
and
es
sti
sub
or
arpl
out
out
lock
dec
imul
movsl
sub
imul
or
adcb
push
xchg
fld
adc
add
mov
xchg
aaa
stos
dec
sub
ror
mov
rdpmc
gs
sub
and
fwait
xor
jmp
or
data16
and
stos
stos
test
add
ss
mov
ja
pop
or
dec
sub
jbe
pop
fwait
jl
sbb
inc
fadd
out
dec
and
sub
add
cmpsb
je
xchg
mov
leave
aas
inc
mov
sub
aas
out
push
jp
iret
pop
adc
push
notb
shrb
mov
fcomps
orl
pushf
sbb
xor
dec
movsl
inc
push
rcrb
xchg
xor
bound
lret
adc
cmpsl
stos
fs
out
test
push
mov
fs
mov
or
fidivrl
les
push
adc
mov
cli
xchg
ljmp
out
imul
jnp
bound
mov
into
xor
mov
xor
cltd
add
cltd
mov
jo
stc
jp
loope
rorb
push
hlt
adc
dec
mov
mov
push
loope
je
dec
loop
pop
cmpsl
rcrl
inc
mov
pop
pushf
mov
pusha
push
shrl
push
ljmp
push
arpl
push
or
sahf
das
ffreep
jae
mov
int
mov
ret
add
les
pop
dec
jns
mov
pop
pop
cwtl
and
loopne
pop
mov
loope
fstl
sbb
shlb
iret
push
and
scas
jmp
lahf
sbb
call
sbb
popf
pop
jmp
lods
jns
subb
test
movsb
adc
jecxz
sub
jnp
sub
mov
mov
xorl
enter
and
fildl
sub
inc
fistpll
add
lret
or
aad
xchg
icebp
and
aad
jp
xlat
dec
outsl
push
sbb
sub
dec
pop
inc
push
dec
mov
push
mov
pop
divl
inc
sti
aam
sahf
cmp
push
adc
test
int3
adc
or
jecxz
mov
pop
loope
mov
add
mov
sub
ret
lods
push
jmp
test
rcll
stos
in
inc
xor
mov
dec
sub
pop
and
cli
inc
mov
inc
cs
out
mov
pop
int
mov
dec
out
jp
pop
dec
add
add
and
or
push
sbb
mov
sub
adc
lret
sahf
push
mov
mov
dec
sbb
mov
cmp
add
cmpsl
add
fbld
nop
jp
pop
sar
dec
xchg
xchg
push
ret
cmp
sub
int
fwait
add
daa
adc
add
outsl
and
xchg
push
lods
sarb
push
mov
stos
xchg
loop
cmpsb
push
mov
in
xchg
aaa
jb
dec
jae
pop
cwtl
mov
fcoml
cld
sbb
sbb
jae
scas
insl
mov
subb
stos
test
push
insb
and
add
fwait
push
fisubrl
fcmovbe
adc
jno
xor
adc
out
mov
adc
stos
repnz
push
rep
dec
cmpsb
loopne
jp
add
xor
enter
aas
xor
aas
or
movsb
xorb
imul
add
adc
pop
outsl
pushf
pop
mov
pop
add
adc
fnstcw
loop
sbb
jge
push
shrl
jmp
mov
stos
repnz
and
and
sbb
sbb
xchg
xor
fsubl
fnsave
loope
sub
xchg
add
and
inc
loop
mov
add
inc
mov
pop
movhps
sbb
jmp
pop
xlat
data16
add
jb
and
xchg
stos
scas
fwait
push
int
and
mov
outsb
mov
mov
cmp
in
or
mov
adc
jo
popf
and
mov
aaa
repnz
loope
mov
imul
lret
lahf
push
dec
popl
dec
jp
or
mov
xchg
cld
enter
xchg
mov
stos
add
rorb
mov
shlb
out
pop
loop
testb
sub
hlt
movsl
xchg
les
add
lcall
push
push
dec
pop
xchg
mov
push
adc
loop
inc
jae
das
clc
bound
or
shlb
fs
sbb
in
mov
out
je
xor
dec
xchg
push
push
es
push
icebp
call
rorl
sbb
cmpl
push
jb
mov
into
mov
adc
test
in
xchg
in
adc
cmpsl
fildl
jnp
mov
cli
xor
pusha
in
mov
dec
mov
sar
enter
mov
imul
movsl
pop
mov
mov
pop
sub
icebp
dec
and
into
push
dec
aas
mov
sti
iret
xchg
mov
jle
lods
push
or
test
push
sub
jp
push
mov
or
scas
and
rcl
sbb
xchg
xchg
mov
cmc
ret
jae
fnstenv
hlt
cwtl
sub
pushf
cli
mov
add
jg
jnp
mov
jbe
inc
or
or
jg
xor
test
lods
xchg
mov
cmp
jno
cmp
sbb
stos
jp
mov
repnz
inc
lods
shlb
testb
daa
mov
sub
jmp
lahf
sbb
hlt
ljmp
adc
cs
adc
ljmp
cmp
dec
dec
test
mov
mov
xchg
lret
xchg
inc
mov
push
test
jns
sbb
das
sbb
jp
dec
mov
ljmp
lcall
fisubl
jmp
add
add
add
add
add
add
add
add
sub
add
add
add
add
xor
push
pusha
adc
add
add
imul
rolb
add
xchg
add
add
or
in
in
in
in
inc
add
add
addb
stos
add
cmp
js
int3
int3
int3
lahf
push
ja
js
ja
out
fdivl
mov
fidivs
ljmp
pop
ja
ja
xlat
fdivl
jns
ja
outsl
fdivl
insb
fdivl
mov
add
inc
iret
cmp
or
add
lods
jle
ja
mov
ja
xchg
ja
icebp
ja
ljmp
jns
icebp
ja
jo
ja
nop
icebp
ja
pop
icebp
ja
imul
sub
ja
xchg
ja
pop
icebp
ja
pop
icebp
ja
mov
ja
popa
icebp
ja
pop
icebp
ja
jge
ja
outsb
icebp
ja
mov
ja
jmp
icebp
ja
mov
ja
popa
icebp
ja
iret
repz
popa
icebp
ja
stos
icebp
ja
dec
hlt
ja
mov
ja
pop
icebp
ja
xchg
icebp
ja
add
add
cmpb
jl
scas
cmpb
jl
mov
cmpb
jl
fwait
cmpb
jl
cwtl
cmpb
jl
stos
cmpb
jl
movsb
cmpb
jl
xchg
cmpb
jl
pop
cmpb
jl
fiadds
jl
dec
test
cmpb
jl
nop
jl
jo
jl
lcall
pop
or
jl
scas
cmpb
jl
add
add
pop
stos
jl
sbb
add
divl
add
add
mov
jle
mov
jle
adc
jle
bound
jle
cmp
mov
jle
cwtl
aaa
jle
cwtl
aaa
jle
repz
outsb
cmp
call
aaa
jle
xchg
cmp
int
jle
leave
aaa
jle
nop
aaa
jle
xchg
aaa
jle
cltd
aaa
jle
scas
aaa
jle
add
add
add
add
add
mov
push
mov
push
mov
push
lea
push
mov
call
pop
pop
pop
ret
push
mov
sub
orl
movb
movb
movb
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
movb
mov
movzbl
mov
sub
movzbl
sub
je
mov
add
mov
mov
sub
je
call
push
push
push
pushl
call
call
pushl
call
mov
push
push
push
push
pushl
call
push
push
push
push
push
call
call
jmp
push
pushl
call
mov
push
push
push
pushl
call
andl
mov
sub
mov
mov
sub
mov
jns
mov
and
or
mov
jmp
fldl
call
inc
mov
mov
pushl
pushl
pushl
push
push
call
add
push
push
call
mov
pushl
pushl
call
mov
mov
movl
mov
sub
je
push
push
push
pushl
call
pushl
pushl
call
pushl
call
mov
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
andl
movl
movl
mov
movzbl
sub
je
call
jmp
movl
movl
andl
jmp
mov
inc
mov
mov
sub
add
mov
movzwl
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
movzbl
mov
add
movzbl
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
lea
sub
mov
xor
mov
push
push
mov
push
lea
push
push
pushl
call
mov
dec
dec
je
sub
je
dec
je
sub
je
call
mov
sub
movl
movzbl
mov
cmp
je
movl
movl
call
mov
mov
sub
movzbl
mov
movzbl
sub
je
call
int3
pushl
call
call
xor
push
push
mov
call
push
pushl
call
pushl
mov
pushl
call
jmp
movl
movl
call
call
pushl
pushl
pushl
jmp
cmpw
je
pushl
pushl
push
push
call
jmp
lea
push
push
call
lea
push
push
call
pushl
call
jmp
xor
push
push
push
push
push
push
push
call
mov
mov
push
push
call
push
push
push
push
mov
call
call
mov
xor
mov
pop
xor
pop
call
add
leave
ret
xor
push
mov
push
movl
movl
movl
mov
movl
mov
mov
movl
mov
cmp
je
mov
mov
push
push
push
pushl
mov
call
push
push
movl
mov
call
push
mov
call
test
jne
push
pushl
call
mov
mov
movzbl
sub
je
push
push
call
mov
call
int3
call
push
call
pop
pop
ret
push
mov
sub
mov
xor
mov
push
push
mov
push
call
push
mov
call
mov
mov
mov
movb
call
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
call
pushl
movb
push
movl
movb
movl
movb
movl
movb
movl
movl
movb
movl
movb
movb
movb
call
add
test
jne
inc
jmp
mov
push
xor
jmp
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
push
lea
push
call
test
je
mov
pop
mov
pop
xor
pop
call
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
cmp
jb
cmpl
je
push
push
and
and
cmp
pop
pop
jne
pop
pop
pop
jmp
test
jne
shr
and
cmp
jb
rep
jmp
nop
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
cmp
inc
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
or
inc
add
faddl
lock
call
faddl
fcomp
inc
add
faddl
enter
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
and
inc
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
fldl
call
fiadds
mov
and
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
fiadds
insb
fiadds
je
inc
add
add
inc
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
rcr
add
fiadds
fcomp
inc
add
fiadds
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmpl
je
push
mov
sub
and
fstpl
cvttsd2si
leave
ret
cmpl
je
sub
fnstcw
pop
and
cmp
je
push
mov
sub
and
fld
fsts
fistpll
fildll
mov
mov
test
je
fsubrp
test
jns
fstps
mov
xor
add
adc
mov
adc
jmp
fstps
mov
add
sbb
mov
sbb
jmp
mov
test
jne
fstps
fstps
leave
ret
cmp
jne
repz
jmp
mov
push
mov
cmpl
jne
call
pushl
call
push
call
pop
pop
pop
ret
push
push
call
xor
mov
lea
push
call
push
pop
mov
mov
cmp
jne
mov
cmpl
jne
mov
cmp
jne
cmpl
jbe
xor
cmp
setne
mov
jmp
mov
xor
inc
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
push
call
pop
cmp
je
push
call
pop
call
test
je
movzwl
jmp
push
pop
push
push
push
push
call
mov
cmp
jne
push
call
call
mov
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
mov
cmpl
jne
push
call
call
movl
mov
jmp
xor
inc
ret
mov
movl
mov
call
ret
call
jmp
push
mov
sub
mov
mov
mov
mov
mov
shr
jmp
adc
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
lea
dec
jne
mov
mov
mov
pop
ret
push
mov
sub
mov
mov
mov
mov
mov
cltd
mov
mov
xor
sub
and
xor
sub
cltd
mov
xor
sub
and
xor
sub
mov
or
jne
mov
mov
and
mov
cmp
je
sub
push
push
push
call
add
mov
mov
test
je
mov
mov
add
sub
mov
add
sub
mov
mov
mov
mov
rep
mov
jmp
cmp
jne
neg
add
mov
mov
mov
mov
rep
mov
add
mov
add
mov
sub
push
push
push
call
add
mov
jmp
mov
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
mov
mov
mov
pop
ret
push
push
call
andl
movapd
movl
jmp
mov
mov
mov
cmp
je
cmp
je
xor
ret
xor
inc
ret
mov
andl
movl
mov
call
ret
mov
push
mov
sub
xor
push
mov
mov
mov
push
pushf
pop
mov
xor
push
popf
pushf
pop
sub
je
push
popf
xor
cpuid
mov
mov
mov
mov
mov
cpuid
mov
mov
pop
testl
je
call
test
je
xor
inc
jmp
xor
pop
leave
ret
call
mov
xor
ret
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmpl
jne
push
call
pop
push
call
push
call
leave
ret
mov
push
mov
mov
mov
cmpl
jne
cmpl
jne
mov
cmp
je
cmp
je
cmp
je
cmp
jne
call
xor
pop
ret
push
call
xor
ret
mov
push
mov
push
mov
push
call
pushl
call
add
cmp
ja
test
je
pop
pop
ret
mov
push
mov
call
pushl
call
pushl
call
push
call
add
pop
ret
mov
push
mov
push
call
test
je
push
push
call
test
je
pushl
call
pop
ret
mov
push
mov
pushl
call
pop
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
push
mov
push
mov
jmp
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
push
mov
xor
jmp
test
jne
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
cmpl
je
push
call
pop
test
je
pushl
call
pop
call
push
push
call
pop
pop
test
jne
push
call
mov
movl
call
cmpl
pop
je
push
call
pop
test
je
push
push
push
call
xor
pop
ret
push
push
call
push
call
pop
andl
xor
inc
cmp
je
mov
mov
mov
cmpl
jne
pushl
call
pop
mov
mov
test
je
pushl
call
pop
mov
mov
mov
mov
sub
mov
cmp
jb
call
cmp
je
cmp
jb
pushl
call
mov
call
mov
call
pushl
call
mov
pushl
call
add
cmp
jne
cmp
je
mov
mov
mov
mov
mov
mov
jmp
push
mov
call
pop
push
mov
call
pop
movl
call
cmpl
jne
mov
push
call
pop
pushl
call
xor
inc
cmpl
je
push
call
pop
ret
call
ret
mov
push
mov
push
push
pushl
call
add
pop
ret
mov
push
mov
push
push
pushl
call
add
pop
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
mov
push
call
mov
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
mov
pop
ret
mov
push
mov
push
push
push
mov
push
push
xor
xor
mov
cmp
je
inc
mov
cmp
jb
cmp
jae
push
call
pop
cmp
je
push
call
pop
test
jne
cmpl
je
cmp
je
push
mov
push
mov
push
call
add
test
je
push
push
push
push
push
call
add
push
mov
push
push
movb
call
test
jne
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
push
call
inc
pop
cmp
jbe
push
call
sub
add
push
mov
push
sub
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
jmp
xor
push
push
push
call
add
test
je
push
push
push
push
push
call
add
mov
pushl
push
push
call
add
test
je
push
push
push
push
push
call
add
push
push
push
call
add
jmp
push
call
mov
cmp
je
cmp
je
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
pop
pop
pop
leave
ret
push
call
pop
cmp
je
push
call
pop
test
jne
cmpl
jne
push
call
push
call
pop
pop
ret
ret
mov
push
mov
push
push
push
call
mov
test
je
mov
mov
push
mov
mov
push
cmp
je
mov
imul
add
add
cmp
jb
imul
add
cmp
jae
cmp
jne
mov
jmp
xor
test
je
mov
mov
test
jne
xor
jmp
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
add
cmp
jge
imul
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
pop
pop
pop
leave
ret
mov
push
push
xor
cmp
jne
call
mov
test
jne
mov
mov
cmp
ja
test
je
test
je
cmp
jne
xor
test
sete
mov
movzbl
push
call
pop
test
je
inc
inc
jmp
cmp
ja
inc
mov
test
jne
pop
mov
pop
ret
cmpl
jne
call
push
mov
push
xor
test
jne
or
jmp
cmp
je
inc
push
call
pop
lea
mov
test
jne
push
inc
push
call
mov
pop
pop
mov
test
je
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
push
call
pop
pop
mov
test
je
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
add
add
cmpb
jne
pushl
call
andl
andl
movl
xor
pop
pop
pop
pop
ret
pushl
call
andl
or
jmp
mov
push
mov
push
mov
push
xor
push
mov
mov
mov
movl
cmp
je
mov
addl
mov
mov
cmpb
jne
xor
cmp
mov
sete
inc
mov
jmp
incl
test
je
mov
mov
inc
mov
mov
movzbl
push
inc
call
pop
test
je
incl
cmpl
je
mov
mov
incl
mov
inc
mov
mov
test
je
cmpl
jne
cmp
je
cmp
jne
test
je
movb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
dec
test
je
movb
inc
incl
test
jne
mov
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
movsbl
push
test
je
call
pop
test
je
mov
mov
incl
mov
inc
incl
mov
mov
incl
mov
jmp
call
pop
test
je
inc
incl
incl
mov
inc
jmp
test
je
movb
inc
mov
incl
mov
jmp
mov
pop
pop
test
je
andl
incl
leave
ret
mov
push
mov
sub
push
xor
push
push
cmp
jne
call
push
mov
push
push
mov
call
mov
mov
cmp
je
mov
cmp
jne
mov
mov
lea
push
push
push
lea
call
mov
add
cmp
jae
mov
cmp
jae
mov
shl
lea
cmp
jb
push
call
mov
pop
cmp
je
mov
lea
push
add
push
push
lea
call
mov
add
dec
mov
mov
xor
jmp
or
pop
pop
pop
leave
ret
mov
push
mov
mov
sub
push
push
mov
push
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
push
pop
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
jne
xor
jmp
mov
cmp
je
inc
inc
cmp
jne
inc
inc
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
pop
mov
cmp
je
push
push
pushl
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
jne
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
push
mov
call
mov
pop
cmp
jne
push
call
jmp
pushl
push
push
call
add
push
call
mov
pop
pop
pop
leave
ret
push
push
call
xor
mov
lea
push
call
movl
push
push
pop
push
call
pop
pop
cmp
je
mov
mov
lea
jmp
movb
orl
movb
mov
movb
movb
movb
mov
movb
add
mov
add
cmp
jb
cmp
je
mov
cmp
je
mov
lea
lea
mov
mov
cmp
jl
mov
movl
jmp
push
push
call
pop
pop
test
je
mov
lea
mov
addl
lea
jmp
movb
orl
movb
andl
andb
movb
movb
andl
movb
add
mov
add
cmp
jb
incl
cmp
jl
jmp
mov
andl
test
jle
mov
mov
cmp
je
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
shl
add
mov
mov
mov
mov
mov
push
lea
push
call
pop
pop
test
je
incl
incl
inc
addl
cmp
jl
xor
mov
shl
add
mov
cmp
je
cmp
je
orb
jmp
movb
test
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
test
je
push
call
test
je
mov
and
cmp
jne
orb
jmp
cmp
jne
orb
push
lea
push
call
pop
pop
test
je
incl
jmp
orb
movl
inc
cmp
jl
pushl
call
xor
jmp
xor
inc
ret
mov
movl
or
call
ret
mov
push
mov
mov
push
mov
cmp
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
mov
push
mov
cmp
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
push
pushl
mov
call
test
je
mov
cmp
je
push
pushl
call
call
test
je
mov
jmp
mov
push
call
test
jne
push
call
pop
test
je
push
push
call
test
je
pushl
call
mov
mov
pop
pop
ret
push
call
pop
ret
mov
push
mov
push
pushl
mov
call
test
je
mov
cmp
je
push
pushl
call
call
test
je
mov
jmp
mov
push
call
test
jne
push
call
pop
test
je
push
push
call
test
je
pushl
call
mov
mov
pop
pop
ret
call
ret
mov
push
pushl
call
mov
test
jne
pushl
call
pop
mov
push
pushl
call
mov
pop
ret
mov
cmp
je
push
pushl
call
pop
call
orl
mov
cmp
je
push
call
orl
jmp
push
push
call
mov
push
call
test
jne
push
call
pop
mov
mov
movl
xor
inc
mov
test
je
push
push
mov
call
mov
push
pushl
call
mov
mov
movb
movb
movl
push
call
pop
andl
pushl
call
movl
call
push
call
pop
mov
mov
mov
test
jne
mov
mov
pushl
call
pop
movl
call
call
ret
xor
inc
mov
push
call
pop
ret
push
call
pop
ret
mov
push
push
call
pushl
mov
call
call
mov
test
jne
push
push
call
mov
pop
pop
test
je
push
pushl
pushl
call
pop
call
test
je
push
push
call
pop
pop
call
orl
mov
jmp
push
call
pop
xor
push
call
pop
mov
pop
ret
mov
push
call
mov
test
jne
push
call
pop
mov
pop
ret
push
push
call
mov
test
je
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
cmp
je
push
call
pop
push
call
pop
andl
mov
test
je
push
call
test
jne
cmp
je
push
call
pop
movl
call
push
call
pop
movl
mov
test
je
push
call
pop
cmp
je
cmp
je
cmpl
jne
push
call
pop
movl
call
push
call
pop
call
ret
mov
push
call
pop
ret
mov
push
call
pop
ret
mov
push
push
mov
push
call
test
jne
push
call
pop
mov
test
je
mov
push
push
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
cmpl
mov
mov
je
cmpl
je
cmpl
je
test
jne
mov
mov
mov
movl
mov
mov
call
mov
cmp
je
pushl
push
call
test
je
call
pushl
call
pushl
mov
call
pushl
mov
call
pushl
mov
call
add
mov
call
test
je
push
pushl
call
pop
call
mov
cmp
je
push
push
call
mov
pop
pop
test
je
push
pushl
pushl
call
pop
call
test
je
push
push
call
pop
pop
call
orl
mov
xor
inc
jmp
call
xor
pop
pop
ret
mov
push
mov
xor
cmp
push
sete
push
push
call
mov
test
jne
pop
ret
xor
inc
mov
pop
ret
int3
int3
int3
push
pushl
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
pushl
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
sub
push
mov
push
mov
xor
push
mov
movb
movl
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
testb
jne
mov
lea
mov
mov
mov
mov
cmp
je
lea
lea
mov
lea
mov
mov
mov
test
je
mov
call
movb
test
jl
jg
mov
mov
cmp
jne
cmpb
je
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
movl
jmp
mov
cmpl
jne
cmpl
je
push
call
add
test
je
mov
push
push
call
add
mov
call
mov
cmp
je
push
push
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
mov
cmp
je
push
push
mov
call
jmp
mov
push
mov
sub
mov
andl
andl
push
push
mov
mov
cmp
je
test
je
not
mov
jmp
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
cmp
jne
mov
jmp
test
jne
mov
shl
or
mov
not
mov
pop
pop
pop
leave
ret
andl
ret
push
push
call
call
mov
test
je
andl
call
jmp
xor
inc
ret
mov
movl
call
call
ret
push
call
pop
mov
ret
mov
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
pop
pop
test
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
mov
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
mov
push
mov
mov
pushl
call
pop
ret
push
push
call
xor
inc
mov
xor
cmp
jne
call
push
call
push
call
pop
pop
mov
lea
cmp
je
mov
jmp
push
call
pop
mov
cmp
jne
call
movl
xor
jmp
push
call
pop
mov
cmp
jne
push
push
call
pop
pop
test
jne
push
call
pop
call
movl
mov
jmp
mov
jmp
push
call
pop
movl
call
mov
call
ret
push
call
pop
ret
mov
push
mov
mov
push
lea
cmpl
jne
push
call
pop
test
jne
push
call
pop
pushl
call
pop
pop
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
sub
mov
xor
mov
andl
push
push
lea
push
push
call
lea
mov
lea
add
mov
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
lea
movl
mov
mov
mov
mov
movl
movl
mov
call
push
mov
call
lea
push
call
test
jne
test
jne
push
call
pop
push
call
push
call
mov
xor
pop
call
leave
ret
mov
push
mov
pushl
call
pop
test
je
pop
jmp
push
call
pop
pop
jmp
mov
push
mov
mov
xor
cmp
je
inc
cmp
jb
lea
cmp
ja
push
pop
pop
ret
mov
pop
ret
add
push
pop
cmp
sbb
and
add
pop
ret
call
test
jne
mov
ret
add
ret
mov
push
mov
push
push
push
push
pushl
call
pushl
mov
mov
call
mov
pop
pop
cmp
jb
mov
sub
lea
cmp
jb
push
call
mov
lea
pop
cmp
jae
mov
cmp
jae
mov
add
cmp
jb
push
pushl
call
pop
pop
test
jne
lea
cmp
jb
push
pushl
call
pop
pop
test
je
sar
push
lea
call
pop
mov
pushl
call
mov
add
push
call
pop
mov
mov
pop
jmp
xor
pop
pop
pop
leave
ret
mov
push
push
push
call
mov
push
call
add
mov
mov
test
jne
push
pop
pop
ret
andl
xor
pop
ret
push
push
call
call
andl
pushl
call
pop
mov
movl
call
mov
call
ret
call
ret
mov
push
mov
pushl
call
neg
sbb
neg
pop
dec
pop
ret
mov
push
push
xor
lea
pushl
call
add
pop
mov
cmp
jb
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
cmpl
jne
xor
mov
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
add
movzwl
push
push
movzwl
xor
push
lea
test
jbe
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
movl
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
movl
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
mov
xor
cmp
sete
mov
ret
mov
movl
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
push
mov
mov
mov
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
push
cmp
je
mov
imul
add
add
cmp
jb
imul
add
pop
cmp
jae
cmp
je
xor
pop
ret
pushl
call
pop
ret
push
push
call
xor
mov
mov
mov
cmp
jg
je
mov
push
pop
sub
je
sub
je
sub
je
sub
jne
call
mov
mov
test
jne
or
jmp
mov
mov
jmp
pushl
mov
call
mov
add
mov
jmp
mov
sub
je
sub
je
dec
je
call
movl
xor
push
push
push
push
push
call
add
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
movl
push
call
mov
pop
xor
cmpl
je
cmp
jne
push
call
cmp
je
push
call
pop
xor
mov
cmp
je
cmp
je
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
movl
cmp
jne
mov
mov
mov
mov
add
cmp
jge
mov
imul
mov
mov
incl
jmp
call
mov
movl
call
cmp
jne
pushl
push
call
pop
jmp
mov
mov
cmpl
je
push
call
pop
ret
push
call
pop
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
xor
call
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
pop
ret
push
push
call
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
cmp
sete
mov
ret
mov
cmpl
jne
push
call
andl
movl
mov
call
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
pushl
call
pop
test
je
pushl
call
pop
test
je
xor
inc
pop
ret
xor
pop
ret
mov
push
mov
sub
push
push
push
call
andl
cmpl
mov
jne
push
call
mov
test
je
mov
push
push
call
test
je
push
call
movl
push
mov
call
push
call
movl
push
mov
call
push
call
movl
push
mov
call
push
call
pop
mov
test
je
push
push
call
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pushl
mov
call
pop
pop
mov
test
je
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
orl
jmp
mov
cmp
je
push
call
pop
test
je
call
mov
test
je
mov
cmp
je
push
call
pop
test
je
pushl
call
mov
pushl
call
pop
test
je
pushl
pushl
pushl
pushl
call
jmp
xor
pop
pop
pop
leave
ret
mov
push
mov
mov
push
xor
push
push
cmp
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
mov
cmp
jne
mov
jmp
mov
cmp
je
inc
dec
jne
cmp
je
mov
mov
inc
inc
cmp
je
dec
jne
cmp
jne
mov
call
push
pop
mov
mov
jmp
xor
pop
pop
pop
pop
ret
mov
push
mov
push
push
mov
xor
push
cmp
jne
cmp
jne
cmp
jne
xor
pop
pop
pop
pop
ret
cmp
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
cmpl
mov
jne
mov
mov
inc
inc
cmp
je
dec
jne
jmp
mov
mov
inc
inc
cmp
je
dec
je
decl
jne
cmp
jne
mov
cmp
jne
cmpl
jne
mov
push
mov
pop
jmp
mov
call
push
pop
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
mov
push
mov
mov
push
xor
push
push
cmp
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
inc
inc
cmp
je
dec
jne
cmp
jne
mov
call
push
pop
mov
mov
jmp
xor
pop
pop
pop
pop
ret
mov
push
mov
mov
push
xor
cmp
jl
cmp
jle
cmp
jne
mov
jmp
mov
mov
jmp
call
push
push
push
push
push
movl
call
add
or
pop
pop
ret
mov
push
mov
mov
push
mov
movb
test
jne
call
mov
mov
mov
mov
mov
mov
cmp
je
mov
test
jne
call
mov
mov
cmp
je
mov
mov
test
jne
call
mov
mov
testb
jne
orl
movb
jmp
mov
mov
mov
mov
mov
pop
pop
ret
mov
push
mov
sub
pushl
lea
call
movzbl
mov
mov
test
jne
cmpl
je
mov
mov
movzwl
and
jmp
xor
test
je
xor
inc
cmpb
je
mov
andl
leave
ret
mov
push
mov
push
push
pushl
push
call
add
pop
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
push
push
mov
push
xor
lea
push
push
call
xor
movzwl
mov
mov
mov
mov
shl
or
lea
stos
stos
stos
mov
add
lea
sub
mov
mov
mov
inc
dec
jne
lea
mov
mov
mov
inc
dec
jne
pop
pop
ret
mov
push
mov
sub
mov
xor
mov
push
push
lea
push
pushl
call
mov
test
je
xor
mov
inc
cmp
jb
mov
movb
test
je
lea
movzbl
movzbl
cmp
ja
sub
inc
push
lea
push
push
call
add
inc
mov
inc
test
jne
push
pushl
lea
pushl
push
push
lea
push
push
push
call
xor
push
pushl
lea
push
push
push
lea
push
push
pushl
push
call
add
push
pushl
lea
push
push
push
lea
push
push
pushl
push
call
add
xor
movzwl
test
je
orb
mov
jmp
test
je
orb
mov
mov
jmp
movb
inc
cmp
jb
jmp
lea
movl
xor
sub
mov
lea
add
lea
cmp
ja
orb
mov
add
jmp
cmp
ja
orb
mov
sub
mov
jmp
movb
inc
cmp
jb
mov
pop
xor
pop
call
leave
ret
push
push
call
call
mov
mov
test
je
cmpl
je
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
andl
mov
mov
cmp
je
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
mov
mov
mov
push
call
movl
call
jmp
mov
push
call
pop
ret
mov
push
mov
sub
push
xor
push
lea
call
mov
cmp
jne
movl
call
cmp
je
mov
andl
jmp
cmp
jne
movl
call
jmp
cmp
jne
mov
mov
movl
jmp
cmp
je
mov
andl
mov
pop
leave
ret
mov
push
mov
sub
mov
xor
mov
push
mov
push
mov
push
call
mov
xor
mov
cmp
jne
mov
call
xor
jmp
mov
xor
cmp
je
incl
add
cmp
jb
cmp
je
cmp
je
movzwl
push
call
test
je
lea
push
push
call
test
je
push
lea
push
push
call
xor
inc
add
mov
mov
cmp
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
lea
push
push
call
mov
add
imul
mov
lea
mov
jmp
mov
test
je
movzbl
movzbl
jmp
mov
mov
or
movzbl
inc
cmp
jbe
mov
inc
inc
cmpb
jne
mov
incl
add
cmpl
mov
jb
mov
mov
movl
call
push
mov
lea
lea
pop
mov
inc
mov
inc
inc
inc
dec
jne
mov
call
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
lea
mov
orb
inc
dec
jne
mov
call
mov
mov
jmp
mov
xor
movzwl
mov
shl
or
lea
stos
stos
stos
jmp
cmp
jne
or
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
orl
call
mov
mov
call
mov
mov
call
mov
cmp
je
push
call
pop
mov
test
je
mov
mov
mov
rep
andl
push
pushl
call
pop
pop
mov
test
jne
mov
pushl
call
test
jne
mov
cmp
je
push
call
pop
mov
push
mov
call
testb
jne
testb
jne
push
call
pop
andl
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
pushl
call
test
jne
mov
cmp
je
push
call
pop
mov
push
call
movl
call
jmp
push
call
pop
ret
jmp
cmp
jne
cmp
je
push
call
pop
call
movl
jmp
andl
mov
call
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
movl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
test
jne
call
mov
call
push
call
mov
pop
call
ret
mov
push
mov
push
push
xor
pushl
call
mov
pop
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
xor
push
pushl
pushl
call
mov
add
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
xor
pushl
pushl
call
mov
pop
pop
test
jne
cmp
je
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
cmp
jb
cmpl
je
push
push
and
and
cmp
pop
pop
jne
pop
pop
pop
jmp
test
jne
shr
and
cmp
jb
rep
jmp
nop
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
sub
inc
add
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
sti
adc
call
adc
fcoms
inc
add
adc
enter
rclb
add
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
adc
inc
add
inc
add
adc
cmp
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
inc
add
adc
add
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
push
adc
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
inc
add
adc
add
adc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
mov
push
mov
push
push
mov
mov
xor
push
cmp
je
cmp
je
mov
cmp
je
cmp
jne
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
mov
sub
push
call
mov
mov
sub
push
call
mov
sub
push
call
pushl
call
add
lea
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
lea
movl
cmpl
je
mov
cmp
je
cmp
jne
push
call
pop
cmp
je
mov
cmp
je
cmp
jne
push
call
pop
add
decl
jne
push
call
pop
pop
pop
pop
pop
ret
mov
push
mov
push
push
mov
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
lea
movl
cmpl
je
mov
test
je
push
call
cmpl
je
mov
test
je
push
call
add
decl
jne
mov
add
push
call
pop
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
push
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
lea
movl
cmpl
je
mov
test
je
push
call
cmpl
je
mov
test
je
push
call
add
decl
jne
mov
add
push
call
pop
pop
mov
pop
pop
ret
test
je
test
je
push
mov
cmp
je
push
mov
call
pop
test
je
push
call
cmpl
pop
jne
cmp
je
push
call
pop
mov
pop
ret
xor
ret
push
push
call
call
mov
mov
test
je
cmpl
je
call
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
andl
lea
mov
call
mov
movl
call
jmp
push
call
pop
mov
ret
mov
push
mov
mov
mov
imul
add
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
pop
ret
mov
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
mov
test
jne
push
lea
mov
mov
mov
mov
mov
mov
test
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
mov
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
mov
cmp
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
imul
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
push
mov
push
xor
cmp
jne
add
imul
push
pushl
push
pushl
call
cmp
jne
xor
jmp
addl
mov
mov
imul
add
push
push
pushl
call
mov
cmp
je
push
push
push
push
call
mov
cmp
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
mov
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
add
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
mov
cmp
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
mov
cmp
jbe
push
pop
mov
mov
cmp
jne
mov
cmp
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
lea
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
mov
cmp
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
mov
mov
cmp
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
mov
cmp
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
mov
imul
add
add
and
mov
sar
push
dec
cmp
push
push
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
jmp
mov
mov
and
and
or
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
mov
cmp
jb
cmp
jne
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
call
mov
mov
test
jne
xor
jmp
push
call
pop
mov
mov
mov
cmpl
je
mov
mov
mov
mov
cmp
je
mov
mov
and
and
or
jne
andl
mov
lea
mov
and
and
or
jne
incl
mov
add
jmp
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
add
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
lea
mov
test
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
pushl
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmpl
jne
push
mov
call
mov
mov
call
jmp
popl
add
pop
pop
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
pushl
pushl
pushl
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
pushl
pushl
pushl
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
pushl
call
add
pop
ret
mov
push
mov
sub
mov
xor
mov
testb
push
je
push
call
pop
call
test
je
push
call
pop
testb
je
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
lea
mov
movl
mov
mov
push
mov
lea
push
push
call
lea
add
mov
lea
push
movl
mov
mov
call
lea
push
call
push
call
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
test
jne
cmp
jb
cmpl
je
jmp
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
push
call
xor
mov
xor
cmp
setne
cmp
jne
call
movl
push
push
push
push
push
call
add
or
jmp
cmpl
jne
push
call
pop
mov
push
call
pop
mov
cmp
je
mov
sub
mov
jmp
mov
movl
call
cmp
jne
push
push
pushl
call
mov
mov
call
ret
xor
mov
mov
push
call
pop
ret
push
call
pop
ret
mov
push
mov
mov
test
je
sub
cmpl
jne
push
call
pop
pop
ret
mov
push
mov
sub
mov
xor
mov
push
push
xor
push
mov
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
mov
sub
dec
cmp
jge
inc
mov
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
cmp
push
push
pushl
setne
pushl
lea
push
pushl
call
mov
cmp
je
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
call
pop
cmp
je
movl
add
mov
jmp
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
mov
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testl
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
cmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
movl
add
jmp
push
call
pop
cmp
je
movl
add
mov
jmp
xor
cmp
je
pushl
push
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
pushl
push
push
pushl
call
mov
push
call
pop
pushl
call
mov
pop
jmp
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
mov
push
push
pushl
push
pushl
pushl
call
mov
cmp
jne
xor
jmp
jle
cmp
ja
add
cmp
ja
call
mov
cmp
je
movl
add
jmp
push
call
pop
cmp
je
movl
add
mov
jmp
xor
cmp
je
pushl
push
push
call
add
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
lea
pushl
push
push
pushl
pushl
call
mov
mov
add
neg
sbb
and
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
cmp
je
cmp
je
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
pushl
lea
call
pushl
lea
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
add
cmpb
je
mov
andl
leave
ret
mov
push
mov
push
push
mov
xor
mov
mov
push
push
xor
push
mov
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
push
pop
mov
jmp
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
cmp
push
push
pushl
setne
pushl
lea
push
pushl
call
mov
cmp
je
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
call
pop
cmp
je
movl
add
mov
test
je
lea
push
push
push
call
add
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
push
call
mov
pop
jmp
xor
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
pushl
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
mov
add
cmp
je
mov
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
pushl
lea
call
pushl
lea
pushl
pushl
pushl
pushl
pushl
pushl
call
add
cmpb
je
mov
andl
leave
ret
push
push
call
andl
mov
cmp
ja
push
call
pop
andl
push
call
pop
mov
movl
call
mov
call
ret
push
call
pop
ret
mov
push
mov
push
mov
cmp
ja
push
push
mov
cmpl
jne
call
push
call
push
call
pop
pop
mov
cmp
jne
test
je
mov
jmp
xor
inc
push
jmp
cmp
jne
push
call
pop
test
jne
test
jne
inc
add
and
push
push
pushl
call
mov
test
jne
push
pop
cmp
je
pushl
call
pop
test
je
mov
jmp
call
mov
call
mov
pop
mov
pop
jmp
push
call
pop
call
movl
xor
pop
pop
ret
push
push
call
mov
xor
cmp
jbe
push
pop
xor
div
cmp
sbb
inc
jne
call
movl
push
push
push
push
push
call
add
xor
jmp
imul
mov
mov
cmp
jne
xor
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
mov
pushl
call
pop
mov
movl
call
mov
cmp
je
pushl
push
push
call
add
cmp
jne
push
push
pushl
call
mov
cmp
jne
cmp
je
push
call
pop
test
jne
mov
cmp
je
movl
jmp
xor
mov
push
call
pop
ret
cmp
jne
mov
cmp
je
movl
mov
call
ret
push
push
call
mov
test
jne
pushl
call
pop
jmp
mov
test
jne
push
call
pop
jmp
cmpl
jne
xor
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
movl
call
cmpl
jne
test
jne
inc
add
and
mov
push
push
push
pushl
call
mov
jmp
mov
mov
push
call
pop
ret
mov
test
jne
cmp
je
push
call
pop
test
jne
call
cmp
jne
mov
call
push
call
pop
mov
jmp
test
jne
call
cmp
je
movl
jmp
test
jne
inc
push
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
je
cmp
jbe
push
call
pop
call
movl
xor
call
ret
call
jmp
test
jne
call
mov
call
push
call
mov
pop
mov
jmp
mov
push
mov
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
pushl
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmpl
je
cmp
jbe
lea
mov
mov
mov
cmpl
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
push
mov
sub
mov
mov
mov
shr
pxor
jmp
lea
nop
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
dec
jne
mov
mov
pop
ret
push
mov
sub
mov
mov
cltd
mov
xor
sub
and
xor
sub
test
jne
mov
mov
and
mov
cmp
je
sub
push
push
call
add
mov
mov
test
je
add
sub
mov
xor
mov
mov
rep
mov
jmp
neg
add
mov
xor
mov
mov
rep
mov
mov
mov
add
sub
push
push
push
call
add
mov
mov
mov
pop
ret
mov
push
mov
sub
push
pushl
lea
call
mov
lea
cmp
ja
mov
mov
movzwl
jmp
mov
sarl
lea
push
mov
and
push
call
pop
pop
test
je
mov
push
mov
mov
movb
pop
jmp
xor
mov
movb
inc
mov
push
pushl
pushl
lea
push
push
lea
push
lea
push
push
call
add
test
jne
cmp
je
mov
andl
xor
jmp
movzwl
and
cmpb
je
mov
andl
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
and
add
sbb
or
pop
jmp
push
lea
sub
and
add
sbb
or
pop
jmp
mov
push
mov
sub
mov
xor
mov
push
lea
push
push
pushl
movb
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
mov
push
mov
sub
mov
xor
mov
mov
mov
mov
mov
push
mov
mov
push
mov
mov
push
xor
mov
mov
mov
cmp
je
mov
lea
push
push
call
mov
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
mov
movl
cmp
jne
pushl
call
mov
pop
inc
cmp
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
push
pushl
pushl
push
pushl
call
mov
cmp
jne
xor
jmp
push
call
pop
cmp
je
movl
add
mov
jmp
mov
cmp
je
lea
push
push
pushl
call
add
push
pushl
pushl
pushl
push
pushl
call
test
je
mov
cmp
je
push
push
pushl
push
push
pushl
push
pushl
call
test
je
mov
jmp
mov
cmp
jne
push
push
push
push
push
pushl
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
pushl
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
pushl
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
pushl
lea
call
movzbl
mov
mov
movzwl
and
cmpb
je
mov
andl
leave
ret
mov
push
mov
push
push
pushl
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
sbb
not
and
mov
and
cmp
jb
mov
pop
xchg
mov
mov
ret
sub
test
jmp
mov
push
mov
sub
push
push
pushl
lea
call
mov
mov
xor
cmp
je
mov
cmp
jne
call
push
push
push
push
push
movl
call
add
cmpb
je
mov
andl
xor
jmp
cmp
je
cmpl
jl
cmpl
jg
mov
push
mov
mov
lea
cmpl
jle
lea
push
movzbl
push
push
call
mov
add
jmp
mov
movzbl
movzwl
and
test
je
mov
inc
jmp
cmp
jne
orl
jmp
cmp
jne
mov
inc
mov
test
jl
cmp
je
cmp
jg
test
jne
cmp
je
movl
jmp
mov
cmp
je
cmp
je
movl
jmp
movl
jmp
cmp
jne
cmp
jne
mov
cmp
je
cmp
jne
inc
mov
inc
mov
mov
xor
divl
movzbl
movzwl
test
je
movsbl
sub
jmp
test
je
mov
sub
cmp
movsbl
ja
sub
add
cmp
jae
orl
cmp
jb
jne
cmp
jbe
orl
cmpl
jne
mov
dec
test
jne
cmpl
je
mov
andl
jmp
mov
imul
add
mov
mov
inc
jmp
mov
test
jne
test
jne
and
je
cmpl
ja
test
jne
cmp
jbe
call
testb
movl
je
orl
jmp
testb
push
pop
setne
add
mov
mov
test
je
mov
testb
je
negl
cmpb
je
mov
andl
mov
jmp
mov
test
je
mov
cmpb
je
mov
andl
xor
pop
pop
pop
leave
ret
mov
push
mov
xor
push
pushl
pushl
pushl
cmp
jne
push
jmp
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
