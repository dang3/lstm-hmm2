jae
and
es
out
and
and
gs
icebp
cmp
shlb
pop
setbe
insl
sub
pusha
mov
mov
fbld
sarl
sub
inc
mov
mov
pop
imul
xlat
mov
xor
and
add
xchg
shr
xchg
xor
sbb
mov
imul
aas
insb
push
jmp
inc
adc
bound
movsl
xchg
push
add
bswap
dec
inc
ds
push
inc
fucom
js
std
and
pop
mov
mov
add
mov
mov
popa
loop
mov
ficoms
movb
sbb
or
movb
ja
pop
sbb
ret
imul
leave
cmp
in
rorl
fisttps
stc
test
ja
xchg
sbb
fs
pop
jns
cmpsb
arpl
inc
mov
xor
mov
sbb
aad
popf
or
movsl
enter
les
lret
dec
imul
or
pop
push
mov
mov
outsl
jecxz
push
mov
xor
pop
fs
jmp
jbe
scas
dec
clc
xor
and
jmp
stos
dec
mov
decl
and
xor
dec
adc
data16
cmp
out
sub
js,pt
lods
xlat
movsb
pop
in
xchg
test
cmp
outsl
dec
dec
jecxz
sbb
add
sbb
lret
and
ret
pop
or
fcompl
dec
jne
inc
xor
push
outsb
ds
roll
rorb
imul
xchg
add
jno
imul
mov
rcr
mov
popf
add
ds
jecxz
sbb
rclb
out
add
jb
fs
sbb
xchg
sbb
out
and
or
inc
cld
mov
sub
mov
nop
aad
cmc
mov
fwait
sarb
push
adc
jp
out
xor
cmpl
inc
mov
stos
andl
insb
sub
mov
pop
lock
jle
xchg
loope
inc
jo
inc
les
xlat
js
lods
mov
stos
scas
push
add
or
or
adc
push
pushf
es
sbb
mov
push
xor
arpl
xor
dec
addr16
outsb
xor
fwait
dec
push
pop
loope
or
ret
scas
push
mov
pop
lret
mov
std
and
test
std
sbbb
xchg
es
and
andb
aad
mov
orl
mov
and
fsubl
jne
in
pop
mov
std
addr16
mov
mov
jmp
ret
test
sub
mov
ja
or
push
movsb
cmpsl
daa
mov
lcall
add
lods
rcrl
adc
clc
movsl
testb
add
sub
rorb
in
inc
mov
jbe
inc
adc
xlat
fdivrl
jg
adc
add
jno
sbb
push
dec
sbb
daa
js
add
test
jns
addb
inc
mov
jnp
pop
pushf
push
in
ljmp
jmp
imul
jmp
xor
sub
adc
sub
xor
mov
ja
fstpl
ljmp
cmp
add
push
scas
cmp
adc
jno
mov
fs
out
ss
les
ret
lret
fldl
adc
xchg
xor
stos
and
jno
mov
std
inc
or
inc
fisubrl
mov
es
add
loop
mov
loop
aam
shrl
mov
and
and
xchg
push
mov
pop
movsb
mov
dec
add
push
insl
dec
mov
sbb
xor
lods
cld
xchg
push
loop
cmp
mov
mov
pop
adc
lea
jp
or
cmp
jnp
shl
jo
aas
cs
in
scas
outsl
push
call
push
push
pop
mov
cmp
pop
adc
add
pop
xchg
inc
xchg
and
pop
les
ljmp
ficomps
sub
jmp
fs
push
push
adc
test
movsl
xchg
lods
mov
xchg
fwait
jle
ficoml
cltd
ja
add
dec
lret
sbb
cmp
or
push
mov
aam
ret
stc
scas
pop
in
pop
mov
in
cmovne
cli
fcmovb
leave
sub
cmp
insb
dec
jl
les
daa
cmp
popf
pop
push
jmp
cltd
fbld
mov
insl
fwait
cltd
loopne
repz
addr16
data16
inc
sub
adc
pop
inc
sbb
mov
enter
in
mov
mov
push
push
or
cmp
in
cmpsl
pusha
xchg
dec
rcrb
add
repz
jno
lcall
enter
iret
add
divl
xchg
in
fs
or
imull
fnstenv
cmovle
xchg
mov
adc
testb
add
mov
daa
or
hlt
sub
out
call
loop
xchg
inc
pop
es
repz
lock
imul
ss
cmc
mov
jb
ss
and
xor
or
pop
push
cmp
scas
jl
mov
jae
popa
int3
mov
and
scas
mov
push
mov
jne
cltd
mov
cmp
xchg
test
stos
cli
push
call
movsl
pop
in
fisttpl
mov
inc
xchg
jae
lds
jno
sahf
std
test
incb
add
outsl
mov
cmp
adc
or
lahf
mov
push
xchg
aaa
cmp
and
sub
outsb
insb
dec
xchg
xchg
cli
sub
lcall
adc
pop
push
jns
dec
xor
pop
adc
mov
insl
mov
cltd
inc
fxch
movsl
sarb
loopne
push
adc
xchg
xchg
mov
jbe
out
out
gs
lea
jnp
je
jae
cmp
sbb
mov
fcmovne
dec
sbb
es
add
in
into
push
outsl
aas
sbb
jl
mov
cmp
jmp
stos
mov
and
add
jo
cld
mov
jno
mov
push
xchg
iret
sbbl
xchg
arpl
cmc
icebp
and
cmp
dec
ja
xchg
gs
adc
push
add
cmp
sub
sub
add
adc
push
inc
fs
jmp
fs
roll
jae
aas
jo
loope
stos
push
loope
lods
fnstenv
pop
test
addr16
xchg
pop
mov
mov
lret
xchg
xchg
or
jbe
leave
inc
lahf
jle
pop
daa
ds
dec
ja
jno
cmp
push
and
in
lcall
shll
movsl
and
int3
cmp
and
iret
iret
mov
jae
xor
xchg
push
lods
aam
pop
shl
inc
movsl
je
cmpsb
mul
adc
add
imulb
xchg
pop
jecxz
ret
movsb
out
add
clc
inc
pusha
stos
cmp
cmp
dec
enter
loope
sbb
loop
sub
mov
roll
aas
adc
push
pop
push
adc
and
adc
cmp
test
pop
pop
mov
mov
jnp
rcll
jmpw
mov
inc
sbb
mov
js
fs
shrb
pop
shrl
nop
push
inc
and
popa
xchg
push
mov
test
fisttps
outsb
cwtl
lcall
stc
xor
lock
into
stos
mov
shrb
jbe
mov
xor
enter
jg
bound
adc
rcrb
mov
andl
jecxz
mov
jecxz
mov
fiadds
mov
pop
sbb
xchg
sbb
aam
add
fdivrs
adc
leave
mov
xchg
les
adc
movsl
lret
outsb
call
add
in
lods
inc
cs
mov
pushf
fwait
insb
insb
imul
mov
mov
jnp
sahf
outsl
mov
loope
mov
inc
daa
clc
popf
adc
ror
xchg
roll
sub
push
inc
or
adcb
mov
loop
mov
push
xor
in
xchg
mov
je
mov
stos
push
out
call
imul
xchg
cmp
jp
push
lret
outsl
mov
add
movsb
cli
insl
vmread
add
lcall
mov
int
inc
adc
ret
or
aaa
inc
pop
sub
out
lods
pop
lea
les
jg
lock
adc
icebp
xchg
push
mov
cmp
push
shrl
jg
outsl
pop
and
jmp
push
mov
les
sbb
lret
mov
imul
aas
dec
mov
pop
jl
xor
std
pop
dec
incb
lods
mov
fidivs
inc
inc
inc
dec
insb
scas
aam
mov
inc
mov
cmc
pop
dec
mov
iret
in
sti
xor
outsl
mov
dec
sub
scas
mov
daa
hlt
stos
sbb
pop
push
call
call
out
push
mov
jo
cmc
test
pusha
and
test
ljmp
test
fadds
adc
test
dec
cmp
inc
push
or
push
loope
inc
jp
popw
insl
hlt
test
cmp
pop
adc
popa
je
jl
icebp
or
mov
xchg
es
fst
mov
push
mov
and
movsl
in
and
jo
ds
out
stc
fwait
cli
test
mov
rcll
nop
stc
cltd
sub
and
ss
and
in
cmp
hlt
int3
push
and
sub
push
sub
pop
dec
insb
jl
jp
ja
mov
xor
sarb
jbe
ljmp
lea
cmp
cmp
dec
adc
push
in
or
push
and
dec
cmpsb
mov
lods
mov
push
and
mov
imul
cld
or
pop
je
std
jp
cli
mov
jle
pop
popl
dec
jns,pt
lret
inc
stos
adc
xchg
add
rorb
sub
adc
pop
xchg
cld
jg
push
and
out
push
push
sub
cwtl
mov
popf
adc
stc
repz
scas
in
mov
mov
bound
or
xchg
and
ror
xor
push
ret
adc
es
xchg
movsl
jno
loope
in
into
outsl
daa
mov
sbb
dec
call
adc
dec
test
xchg
adc
xor
outsl
fidivl
sbb
push
pop
jp
jl
cs
test
in
cwtl
jmp
subb
scas
fnstenv
pop
or
cld
inc
cs
js
imul
iret
in
xchg
push
imul
fidivrs
popf
xchg
push
mov
aam
dec
scas
inc
fnsave
lds
sub
sbb
adc
add
jae
movsb
std
pop
add
jno
loop
sub
int
gs
dec
ret
push
int
sub
sub
add
push
fisttps
lods
push
inc
push
imul
push
clc
fstpl
jl
punpckhdq
or
mov
xchg
int
sbb
sbb
js
sbb
test
sbb
cmp
in
pop
insb
and
sbb
loope
inc
mov
outsb
or
xchg
filds
xchg
xorl
xchg
pop
movsb
daa
jg
pop
ljmp
lcall
test
xchg
xor
xlat
popa
xchg
inc
push
loope
mov
jg
mov
mov
mov
inc
or
push
add
sbb
loopne
push
pop
cmp
imul
pop
cmpsl
xchg
addr16
or
dec
sub
xor
xchg
mov
sarl
fs
sbb
xor
jle
pop
fucomp
pop
inc
push
cmp
and
xor
in
inc
imul
xchg
test
sbb
xchg
sbb
scas
fs
loopne
jno
push
push
out
lods
sub
sbb
add
lahf
test
out
cmp
shrl
push
cwtl
sub
jne
lds
aad
xchg
mov
add
scas
sarb
add
pushf
jle
sbb
ja
push
mov
mov
adcb
out
xorb
sub
jle
xchg
shr
lret
cmp
pushf
clc
push
loopne
pop
arpl
lahf
cmp
add
cmp
out
cmp
fucom
pop
adc
les
js
push
mov
iret
aad
lods
mov
call
gs
ss
loop
cmp
adc
fs
pop
xlat
jle
push
add
rolb
dec
cltd
xlat
cmp
aam
fs
xchg
jnp,pt
scas
xchg
into
xor
cwtl
or
sbb
mov
out
push
and
and
ret
lcall
popf
xchg
out
cmp
dec
mov
pop
add
js
nop
fstpt
cmp
sub
sbb
imul
sbb
imul
dec
mov
and
jge
xor
pop
lahf
je
int
xlat
fnsave
and
pop
inc
dec
sti
push
popf
out
repnz
adc
mov
cltd
fwait
and
mov
shll
cmc
dec
xchg
dec
shll
pop
pusha
ja
xor
cmc
dec
sbb
jl
mov
in
lret
ficomps
std
jg
mov
sahf
rorl
std
jnp
push
leave
inc
test
incb
jle
jns
adc
cmp
sub
aaa
add
rolb
daa
nop
je
inc
jecxz
mov
out
and
dec
sub
xchg
call
clc
jno
les
adc
in
call
adc
into
lock
rol
sub
sbb
test
pop
dec
movsl
add
push
pop
jl
mov
xchg
std
cmp
dec
sub
ret
jb
sub
ss
cld
add
xor
popa
dec
pop
sub
xlat
filds
dec
shrl
push
loop
faddl
jae
in
enter
adc
adc
sub
loopne
xchg
rcl
sarl
push
adc
mov
nop
push
stos
sub
daa
add
mov
sahf
js
inc
andnps
pop
mov
shrb
xlat
pop
fnstenv
pop
pop
add
sbb
inc
add
icebp
lahf
push
sbb
pop
bswap
ret
popa
out
mov
and
incl
mov
fwait
mov
pop
or
cmp
pop
push
mov
out
mov
data16
test
adc
shlb
sub
jo
sbb
sub
xchg
popa
bound
addr16
test
lods
sahf
push
jnp
mov
mov
sub
movaps
popf
mov
lcall
jne
inc
xchg
cmpl
orl
or
jg
int
scas
fs
jle
sub
xchg
cmp
or
pop
shl
adc
mov
sub
dec
mov
loopne
orb
movsl
inc
sbb
rcrl
sub
mov
clc
mov
inc
cs
cmp
lahf
add
rcll
inc
sub
jg
cmc
or
cmc
cmp
dec
xor
mov
dec
dec
pop
rcrl
pushf
dec
leave
pusha
lret
pop
jecxz
lahf
inc
lret
fdivp
shrb
gs
xor
pop
adc
pop
and
and
push
push
inc
daa
fcmovb
cli
cmp
lea
data16
test
push
jmp
push
loop
pop
xchg
mov
cltd
jmp
xchg
jb
sbb
xor
leave
jbe
repz
cmc
insb
xchg
fadds
idivl
rorl
mov
into
scas
mov
mov
sahf
aaa
into
std
cmpsb
insl
popa
daa
mov
inc
addr16
imul
loopne
dec
mov
test
xor
fwait
popf
sahf
sbb
hlt
pop
push
mov
loopne
xor
cmp
loop
dec
insb
xchg
leave
sbb
or
pop
push
scas
loope
stos
xor
out
test
ds
dec
leave
and
int3
rcrl
push
test
test
mov
insl
push
jo
ss
jbe
stos
xor
pop
mov
dec
lret
mov
lods
push
int
repz
cmpsb
insl
bound
lahf
sbb
in
aas
dec
sar
mov
int
xchg
mov
sbb
insb
imul
addb
out
into
popa
std
dec
mov
aaa
mov
add
andb
push
daa
and
mov
jb
push
inc
pop
cmc
clc
push
aaa
jl
ljmp
add
mov
xchg
sub
pushf
dec
push
mov
call
popa
outsb
dec
lcall
add
popf
in
aam
aad
jl
cmp
clc
sbb
pop
enter
mov
imul
rcr
mov
sbb
mov
pop
mov
lods
push
cltd
out
inc
push
lret
add
mov
or
jbe
daa
jo
movsl
sbb
insl
pop
icebp
loopne
sbb
sbb
dec
insb
jne
xor
hlt
shr
scas
sub
aas
sub
push
jno
lds
push
ljmp
add
adcl
cmp
or
sarb
xor
xor
jge
push
movsb
mov
loope
cmp
jo
push
jge
add
pop
push
xor
inc
inc
jmp
cmp
outsl
stc
repz
pop
pop
dec
ss
jg
jo
loope
xchg
subl
out
xchg
out
push
pushf
addl
into
add
lret
or
nop
and
xor
cltd
iret
ret
lahf
int
idivl
add
aaa
mov
and
mov
jb
add
cs
pushf
mov
jae
mov
test
add
inc
jnp
scas
adc
fistpl
stc
movsb
jle
lods
cmp
arpl
insb
stc
sub
ret
sub
xchg
mov
mov
cmpl
inc
subb
enter
iret
shlb
mov
frstor
push
inc
add
testl
int
test
sub
mov
xchg
adc
pop
sub
jg
adc
aaa
test
out
pop
or
int3
jmp
mov
jle
cmp
imul
mov
sbb
fwait
sub
es
es
lods
sub
scas
sahf
mov
cmpsl
push
adc
ror
in
js
vpmovmskb
dec
jecxz
jnp
push
mov
ret
dec
test
push
sbb
mov
push
and
fldcw
xor
xchg
sbbb
cmp
or
int3
mov
sub
add
out
notl
fimuls
inc
push
je
pusha
jecxz
lcall
cli
dec
inc
fidivrl
fsubrl
add
cmpsl
int
ror
inc
pushf
push
add
repz
adc
push
xchg
fmuls
push
lret
imulb
inc
and
sub
fists
xor
inc
mov
gs
mov
or
psrlq
ds
int3
movsl
popf
cltd
lock
jmp
in
mov
aam
and
daa
sub
jle
sbb
xor
dec
loop
jno
loope
lods
int3
pop
gs
pop
xor
rcll
cmpsb
je
in
xor
xchg
sbb
pop
pop
pop
orb
lods
cmp
dec
pop
or
or
jns
test
mov
inc
movsl
sub
mov
cld
bound
inc
inc
cmp
ja
rcr
pop
or
into
add
lret
add
pop
pop
or
sub
xchg
jmp
jbe
ljmp
add
push
pushf
mov
subl
jg
test
mov
sbb
lahf
push
stos
jecxz
jecxz
jne
push
insl
in
sbb
and
jge
sti
xor
mov
subl
lret
les
adc
arpl
pop
pop
imul
or
das
mov
adc
adc
inc
in
jle
int
inc
in
repz
fdivs
in
ffree
fs
test
jo
int
test
sbb
mov
ds
xlat
jns
push
mov
jge
shlb
mov
hlt
scas
xchg
cmp
test
std
push
stc
mov
les
mov
push
out
mov
stos
idivl
ja
imul
fsubrs
negl
fmuls
inc
pop
xchg
dec
es
pop
add
mov
ret
sti
lods
pop
dec
mov
cmp
out
mov
pop
sub
xor
inc
ss
adcl
lods
push
aas
fadds
test
xor
je
jle
aaa
cmp
sub
int
data16
sub
arpl
sahf
dec
lds
fdivrs
stos
fwait
mov
in
cmpb
aas
dec
js
add
loopne
jp
add
inc
rcll
ror
mov
loopne
sub
add
fidivl
jbe
cltd
jmp
shrl
sub
scas
out
and
daa
sbb
fidivs
lea
pushf
mov
shlb
xor
mov
pusha
inc
fstpl
fimull
scas
jl
lret
mov
rolb
pop
jle
or
repnz
imul
lret
loopne
push
loopne
dec
shll
hlt
sub
cmpsb
imul
adc
and
repz
std
ret
jnp
adc
jg
ficomps
pop
cmp
xor
pusha
dec
sub
sbb
sahf
or
cmpsl
aaa
icebp
rcrb
push
mov
loop
loop
scas
or
lcall
mov
jp
fidivrs
es
jecxz
loop
and
sub
ret
or
mov
std
addr16
sub
and
mov
out
sahf
mov
aaa
add
or
inc
ret
pop
cmp
in
mov
sub
test
rolb
popa
dec
sbb
adc
mov
mov
cmp
pop
int3
pop
cmc
mov
mov
cmp
adc
repz
cmpsl
sub
outsl
cmp
outsb
sbb
lods
repz
stc
inc
rcl
and
iret
pushl
enter
push
mov
pop
dec
leave
cmp
pop
xchg
push
or
cmovae
out
add
xchg
push
or
testl
ficoms
cltd
in
fcmovbe
mov
xchg
in
adc
xchg
mov
lock
jge
stos
dec
mull
xor
iret
shl
mov
sbb
sub
inc
imul
lahf
pop
repnz
call
xor
or
in
push
out
bnd
repz
xor
pop
cld
add
addb
daa
add
or
out
ss
xor
sarl
mov
int
dec
shll
pushf
inc
scas
mov
test
orb
push
call
mov
xchg
mov
ud0
popf
cmc
and
fndisi(8087
jno
mov
in
xchg
and
stos
inc
repnz
jmp
ja
out
movsl
jae
imul
frstor
or
jnp
loopne
add
mov
xchg
mov
mov
lods
adc
inc
in
mov
scas
out
cli
mov
loop
inc
xchg
fs
adc
enter
xor
lret
call
out
shlb
and
inc
ja
std
push
xchg
std
clc
adc
dec
out
cltd
leave
push
int3
fidivs
add
outsb
popa
dec
cli
sbbb
cmp
movsl
inc
and
enter
dec
stos
inc
aas
fmull
arpl
mov
mov
sub
pop
nop
and
insl
xchg
hlt
pop
dec
mov
xor
sbb
cmpsl
mov
push
mov
pop
adc
js
stos
cmc
push
inc
mov
cli
sbb
mov
push
push
fwait
sbb
mov
sbb
pop
insl
jl
inc
xor
cmp
pop
mov
clc
inc
mov
cli
rep
lds
int3
dec
sub
xchg
test
lea
scas
inc
adc
fsubl
or
lahf
inc
clc
xor
out
adc
cwtl
xchg
fs
pminsw
dec
jmp
stos
push
mov
lret
mov
outsb
adc
fldenv
mov
xor
jmp
leave
ljmp
imul
icebp
mov
lret
xor
inc
rorb
sub
inc
and
sub
fnstcw
sti
and
mov
add
jo
xchg
push
push
push
out
mov
push
in
in
andb
and
movsb
mov
test
ss
ss
push
ja
aad
sub
cmp
cmp
push
in
and
dec
pop
push
ret
add
mov
fdiv
mov
rorl
outsb
hlt
and
push
xchg
xchg
nop
mov
xor
orb
daa
xor
adc
rol
sahf
cmp
movsl
loop
fwait
pop
push
push
mov
shrb
xchg
adc
sbb
add
stc
push
and
cs
enter
in
fadd
adc
pop
icebp
jge
adc
mov
pusha
push
dec
sub
popa
lret
daa
call
fcmovu
sahf
adc
or
in
idiv
push
or
push
in
push
test
pop
cmp
sub
fwait
inc
cmp
mov
push
aad
or
pusha
pop
cmp
sub
add
and
out
js
cwtl
shll
lret
add
inc
xchg
mov
mov
pop
insb
lret
sub
std
sbb
pop
je
outsb
and
in
mov
sub
int
sahf
in
ret
fwait
mov
stos
push
mov
mov
cmp
and
mov
insl
clc
push
orl
lds
sub
stos
mov
hlt
mov
cmp
mov
insl
repnz
jnp
and
adc
popa
or
mov
bound
mov
xor
addb
icebp
out
jo
inc
lcall
push
cmp
cmp
xchg
mov
cmp
cmc
fisubrl
shrb
mov
fnstcw
imul
push
xchg
pop
in
in
ret
lret
push
scas
cltd
je
cmpsb
scas
push
or
and
ss
cmpsb
daa
jne
push
jne
sahf
or
subl
aaa
xor
adc
punpckldq
outsl
mov
leave
xchg
pop
leave
sub
cmp
mov
xor
xor
cltd
cltd
aad
or
push
sbb
jg
xor
mov
js
inc
ja
stos
jecxz
rclb
mov
cs
cltd
lcall
push
mov
sbb
ss
xchg
push
shrb
xchg
pushf
jle
outsl
addr16
adc
fdivrl
or
out
daa
push
out
mov
mov
ss
or
es
pop
js
xor
dec
arpl
lretw
push
fnstsw
and
xlat
sub
inc
stos
les
into
pop
hlt
shrl
jne
out
and
rorl
hlt
sub
enter
clc
mov
stos
adc
cmp
sub
icebp
xlat
add
push
mov
pop
jp
mov
add
popf
aas
into
dec
xor
data16
adc
and
dec
scas
out
dec
mov
adcb
dec
popa
add
cmp
add
xchg
or
fwait
sub
jge
sub
and
push
cwtl
sti
fmulp
mov
aas
ds
mov
or
pop
std
mov
adcb
aas
test
pop
icebp
ds
xchg
xchg
pop
xor
test
ficompl
mov
mov
push
xchg
push
add
clc
pop
into
clc
bound
ljmp
inc
cmpsl
ret
cmp
mov
push
jb
loopne
sbb
dec
std
nop
insb
outsl
nop
scas
mov
jmp
push
mov
aas
push
gs
xor
cwtd
cmp
adc
test
inc
sub
mov
xchg
mov
insb
mov
mov
lods
dec
xor
sub
aad
movsl
mov
loop
push
shrl
xor
lret
push
dec
dec
or
pushf
hlt
mov
cmp
sbb
jl
loop
shl
lds
out
fucom
push
inc
add
or
in
js
add
cmc
jg
or
out
mov
cmp
out
mov
cmpl
xchg
xchg
pop
iret
or
or
fwait
lcall
cmp
pusha
push
cli
xchg
mov
add
sbb
mov
dec
xchg
jge
push
insb
cli
push
pusha
pop
stos
lcall
adc
loopne
push
adc
jns
gs
aad
cmpsb
xor
push
mov
sub
sub
daa
add
dec
loop
aas
and
push
jnp
dec
in
fcomps
addr16
subb
insb
lcall
push
test
push
sub
arpl
ljmp
loop
shrb
pop
jge
cli
or
in
xchg
popa
jp
mov
pop
cld
inc
xchg
call
add
push
lret
jae
jo
xchg
pop
sub
fs
repz
mov
jg
xlat
xor
int3
psubq
cmpsb
mov
cmp
mov
popf
test
push
inc
sbb
aas
std
xor
mov
out
scas
xchg
je
in
dec
cmp
jno
push
mov
das
pop
cmp
pushf
ficoms
mov
cs
ror
test
call
xor
insl
cmp
push
mov
mov
popa
mov
push
movq
cli
pop
nop
in
pusha
dec
loop
push
lea
and
sbb
mov
pop
mov
mov
mov
push
mov
outsb
pop
or
cld
pop
pop
lods
js
bound
iret
mov
out
inc
push
jne
ret
xchg
pop
mov
mov
andb
mov
ret
add
xchg
inc
imul
xlat
add
and
mov
lods
mov
into
fs
dec
mov
cltd
sub
cmp
lcall
sub
dec
push
frstor
xchg
mov
movsl
test
add
xor
add
add
mov
cs
leave
pusha
sbb
cltd
and
push
sub
jge
dec
cmpsb
outsl
jno
aad
inc
cmp
and
pop
sbb
sahf
popf
adc
or
lret
bound
andb
adc
pop
sbb
fwait
outsb
sarl
adc
pop
push
sbb
aas
push
lret
add
xchg
lods
add
mov
sub
dec
in
fisubrs
ret
mov
inc
es
lret
jecxz
imul
dec
xor
push
and
and
xor
push
and
adcb
bound
sbb
sbb
xor
sbb
push
add
jp
mov
fadd
adc
pop
mov
xchg
popa
in
test
or
rcrb
shrb
fwait
icebp
inc
push
ljmp
rolb
rol
gs
imul
push
xor
mov
mov
pop
outsl
lea
sbb
dec
aas
push
outsb
icebp
cmp
push
jle
ret
pushl
xchg
insl
mov
stc
adc
mov
push
xlat
faddl
mov
insb
out
sbb
xor
push
pop
inc
aad
or
fisubs
inc
mov
in
ljmp
pop
lods
fldt
xor
insl
push
test
enter
insb
xlat
dec
gs
jb
jecxz
movsl
repnz
and
js
push
mov
dec
sbbb
sub
push
inc
dec
cmp
mov
xor
dec
sub
jne
cld
rcr
into
lods
adc
mov
js
clc
out
out
ret
mov
jne
cld
mov
mov
jae
and
sbb
fcomps
push
movsb
subb
pop
dec
cltd
or
mov
fistps
mov
jb
xor
xchg
mov
push
dec
outsl
push
xor
imul
xor
add
lret
out
jno
dec
loopne
rol
cmp
push
mov
imul
mov
jp
sbbl
jo
les
movl
inc
adc
ret
mov
pop
xor
pusha
leave
cltd
movsb
mov
adc
adc
sub
sub
nop
cmp
xchg
pop
loop
js
decb
stc
sub
push
imul
mov
movsl
lret
sbb
push
add
mov
stos
nop
xchg
iret
lret
bound
loope
mov
daa
js
jo
data16
mov
jle
pop
sahf
mov
sub
sbb
jmp
mov
rclb
inc
mov
fs
outsb
leavew
js
mov
mov
jecxz
push
sarb
inc
insb
adcl
decb
nopl
adc
repnz
stos
mov
sub
lcall
nop
iret
sub
mov
push
inc
xchg
jp
mov
popf
sub
push
fwait
out
or
jo
movsl
pop
pushl
inc
adc
mov
imull
fildl
inc
adc
fs
aad
fisttpll
pop
cli
sub
loope
outsb
push
imul
test
or
ss
mov
dec
icebp
inc
out
nop
icebp
leave
lock
inc
jae
and
jmp
adc
mov
jo
ss
cmp
jbe
pop
daa
clc
add
ss
cld
aad
je
rcl
mov
or
push
adc
je
cld
and
cmovg
jle
enter
push
insl
cmpsl
pop
jmp
adc
enter
lock
push
imul
mov
mov
xchg
mov
mov
jb
hlt
jbe
repz
xchg
lods
push
mov
push
mov
push
and
fdivl
pop
or
xor
adc
jb
ret
push
lret
in
mov
push
lcall
add
dec
ss
test
nop
cli
loop
cmpsb
ljmp
in
mov
imul
loopne
pop
sti
je
push
push
mov
gs
jnp
pushf
or
dec
mov
pop
data16
dec
ret
movsl
outsl
stc
sub
push
aam
sub
dec
cli
rorl
mov
leave
sub
cmpsl
pop
jecxz
js
xor
sahf
mov
lds
push
inc
cmovge
mov
in
mov
jp
mov
pop
decl
lahf
push
or
add
test
sti
mov
jg
fxch
and
aas
clc
movsl
push
nop
mov
xchg
cmp
sbb
xor
dec
out
jno
mov
movsl
imul
arpl
imul
mov
sbb
dec
cs
mov
lock
mov
xchg
stos
mov
frstor
daa
cmp
jge
push
bound
xchg
inc
sub
nop
sti
jecxz
loop
imulb
repz
aas
divb
cmp
in
test
pop
inc
pop
negl
cmc
stc
aam
movsl
int3
sti
add
xchg
push
daa
sub
xchg
push
popf
in
in
std
fwait
std
mov
mov
and
fcoml
outsl
rcr
daa
push
cmp
mov
pop
les
stc
fwait
jmp
mov
add
pop
arpl
mov
andb
fwait
ljmp
insb
bound
arpl
pushf
mov
bound
add
rcr
mov
shlb
aad
sbb
pushf
stos
test
data16
sahf
mov
addr16
mov
and
xchg
pop
push
dec
push
hlt
cmpsl
dec
subl
jns
pop
mov
popf
pushf
dec
lods
xchg
dec
mov
xchg
dec
and
out
imul
fisubrl
out
mov
das
aas
pop
cmp
push
jg
mov
pop
popf
lods
push
dec
out
mov
vaddsubps
insb
sti
jg
das
cmp
subl
xchg
dec
popa
lahf
xor
aam
sbb
jb
rcrb
aad
or
jg
push
jae
sub
loop
mov
test
aam
dec
fdivs
adc
sbb
sub
sbb
xchg
add
jb
add
imul
or
jo
sbb
scas
cld
sub
jl
push
mov
js
push
stos
jmp
enter
push
fidivrl
movsb
jecxz
sbb
mov
push
int
into
ficomps
lret
lcall
shlb
test
push
jmp
inc
jnp
push
xchg
lods
jl
jns
xchg
addr16
mov
xor
or
sahf
aad
push
rcrb
stos
repz
out
xchg
test
mov
sbb
inc
sbb
dec
dec
push
mov
fldl
in
mov
out
mov
and
ljmp
or
add
nopl
lea
inc
mov
cld
rol
cmp
ss
cmp
mov
push
jecxz
inc
sub
ret
jecxz
and
lea
inc
xor
clc
add
adc
ret
dec
xlat
dec
shrb
add
outsb
cs
jge
lock
jl
out
in
push
cmpb
sbb
cmp
jmp
insb
in
lea
mov
jmp
jno
adc
jl
fisubrl
pop
xor
in
cmp
mov
mov
adc
leave
outsl
rorl
xor
shll
fchs
pop
fimull
xlat
loope
mov
call
rcll
dec
addr16
pop
xor
and
pop
fwait
jb
nop
movsb
out
aaa
jle
push
and
loopne,pn
xorl
and
pop
xchg
jmp
mov
loop
inc
fldl2e
mov
out
xchg
mov
test
push
mov
or
inc
mov
adc
mov
mov
ljmp
push
xor
or
adc
jmp
mov
cmp
or
dec
lcall
mov
in
sbb
adcl
les
cmp
sti
cltd
xor
dec
jbe
test
xchg
outsl
push
aaa
fisttps
outsb
idivb
mov
dec
sti
stc
movsl
sbb
ljmp
fcom
pop
xchg
inc
nop
repnz
inc
repz
into
sub
cmc
jbe
mov
in
jmp
or
xchg
push
inc
stos
sbb
mov
or
lahf
xchg
addr16
popa
adc
imul
dec
mov
mov
inc
push
xchg
ss
fidivrs
xchg
sbb
cmp
adc
mov
movb
das
cli
inc
cmp
push
cmp
or
repz
mov
les
les
hlt
push
testl
push
dec
ret
pop
lret
fs
fwait
mov
dec
cltd
movsb
fnstsw
out
jae
in
sub
fistl
fs
loope
enter
dec
jns
sbbl
xchg
lret
lods
dec
repz
pop
lea
xor
stc
jecxz
jne
enter
sbb
leave
mov
movsl
fldcw
push
insl
sub
int3
add
jnp
ret
jno
mov
popf
xlat
inc
or
jno
dec
cmp
cmpsl
cmp
lahf
jg
test
sbb
mov
add
enter
push
push
fisttpll
dec
andl
pop
movsb
ret
pop
xor
push
add
cmp
push
dec
loope
push
nop
inc
enter
orl
test
or
xor
push
dec
and
mov
out
xchg
outsb
mov
jg
lret
jmp
psrlq
pushf
mov
insl
or
xor
mov
xor
push
enter
sahf
int3
jl
lahf
adc
mov
push
fs
jno
dec
mov
sbb
cli
sahf
dec
into
sub
adc
std
pop
in
loopne
data16
cmp
scas
enter
mov
cwtl
in
cmp
into
insl
outsb
loop
jns
cld
mov
inc
adc
adc
sbb
mov
jno
cmp
mov
and
dec
out
or
add
xor
sub
jnp
ret
cmp
mov
push
adc
cmp
xor
jmp
and
enter
jbe
push
lcall
pop
rcl
xchg
sbb
mov
out
addr16
ror
jl
push
fwait
push
lock
cld
sbb
xchg
xchg
stc
add
inc
mov
mov
shll
push
fnstcw
mov
inc
and
fs
and
dec
out
leave
in
bound
jno
popf
cmpsb
jns
mov
into
lcall
jg
jbe
push
ljmp
xchg
push
loop
test
sbbb
fidivs
push
enter
push
imul
push
popf
shrb
cmp
mov
fdivrs
jno
pop
mov
hlt
push
adc
inc
ret
xchg
add
jmp
cmp
mov
loopne
enter
sub
xlat
sub
popf
subb
add
add
setl
scas
pop
mov
mov
fsubrl
pop
in
dec
aaa
mov
dec
insl
in
push
fmul
fwait
pop
mov
cld
stos
cmp
shl
test
pop
dec
dec
stc
xchg
divb
and
icebp
push
inc
or
sub
fwait
call
dec
mov
jae
bound
jns
xor
aas
lret
mov
sub
int
dec
inc
std
jecxz
xchg
pop
and
int3
mov
call
fwait
sbb
xor
push
out
push
sub
imul
xchg
and
sub
inc
loope
aaa
aaa
loope
mov
mov
pop
aaa
sbb
cmpsl
inc
sbb
stos
nop
cmc
scas
test
fcoms
pop
jb
pop
mov
sub
data16
std
ret
data16
sbb
addl
inc
mov
inc
rcrb
int
mov
sbb
mov
xchg
repz
cmc
pop
clc
dec
lret
call
das
xchg
xor
imul
push
fs
jg
leave
cmp
lods
test
jae
cmp
jae
ss
or
mov
xchg
cld
cltd
cwtl
adc
lret
cmp
push
jl
dec
mov
cmp
in
dec
lods
enter
lods
pop
jecxz
mov
imul
popf
or
fisttps
leave
enter
cmp
bsf
mov
insb
ret
aam
xor
aaa
adc
push
push
test
inc
or
jmp
arpl
lods
mov
add
fwait
aam
aaa
ret
lcall
dec
outsb
mov
xor
push
inc
mov
push
cmp
pop
dec
sub
sbb
mov
ret
or
jp
xchg
sarl
and
out
mov
aad
cmp
pusha
js
push
dec
lret
sub
js
dec
sahf
lret
ljmp
ljmp
mov
add
xor
lods
push
sbb
fwait
mov
add
xor
fldenv
call
inc
cld
sub
xor
rol
adc
xchg
and
scas
dec
jmp
jle
sub
push
cld
pop
mov
subb
pushf
xor
sbb
push
jl
roll
pop
pushf
mov
movsb
sub
xor
pop
dec
scas
or
arpl
sub
inc
mov
dec
inc
adc
leave
in
in
repz
cwtl
sbb
js
jp
sahf
lcall
dec
jns
add
jne
mov
cmc
adc
mov
xor
xor
cli
lock
int3
push
add
aad
push
mov
adc
decb
xchg
push
add
in
mov
scas
lds
cltd
lods
xchg
dec
cmp
jns
pop
sbb
out
ficoml
pop
sbb
sahf
or
or
hlt
ficoml
mov
adc
shrl
decl
xchg
adc
dec
fisubs
int
cltd
xor
pusha
mov
pop
dec
cmc
in
jl
cmp
jl
neg
sbb
jmp
sbb
pop
les
and
out
sbb
rcr
fs
lahf
push
outsl
dec
xor
adc
cmp
sub
ret
jae
sub
out
inc
loope
cld
push
pop
cmp
inc
ror
jne
inc
adc
lods
cs
inc
xchg
lahf
out
stc
fildll
pop
faddl
movsl
add
mov
push
cs
out
lods
lret
out
int
shlb
daa
mov
mov
mov
ds
imul
loope
mov
stos
ficoml
das
push
mov
sbb
mov
cmpsl
adcb
adc
push
xor
into
push
das
dec
movsb
push
sub
fistpl
cmp
sbbb
aas
add
or
in
add
adc
mov
loope
cmp
xchg
sub
mov
in
jmp
int
out
out
lods
ljmp
jl
stc
stos
in
ret
xchg
pushf
push
imul
pop
push
push
push
sti
mov
mov
lods
fimuls
xchg
mov
inc
mov
mov
outsl
mov
lea
insb
out
dec
cmp
adc
mov
ds
inc
mov
dec
pop
enter
xor
or
movsl
sub
sub
dec
mov
jge
jae
adc
push
push
or
push
int
pop
xchg
imul
testb
xlat
enter
loope
test
js
mov
sbb
and
scas
call
jp
jnp
cmp
fistl
pop
mov
cmpb
shrb
mov
or
jns
and
cmpsb
fdivrl
add
mov
jmp
repnz
or
sbb
adc
lcall
lret
xor
insb
inc
mov
fcmovnu
fidivl
mov
imul
xor
fdiv
mov
xor
addr16
in
inc
fwait
test
add
pop
add
cmp
xchg
je
enter
fisubrs
repnz
mov
sarb
aaa
or
adc
std
jge
mov
or
mov
adc
inc
cltd
xchg
add
pop
cld
stos
dec
hlt
fisttpll
ja
and
sub
leave
out
stc
repnz
stos
and
adc
aam
pop
jnp
cmp
mov
xlat
xchg
push
push
mov
lods
cmp
ss
jne
in
lcall
sahf
mov
inc
vmovddup
mov
push
xor
testb
out
outsl
xchg
mov
mov
sti
iret
cmp
mov
arpl
mov
sbb
mov
mov
jle
ds
sbb
lds
pop
stos
xor
xor
jmp
cli
xor
sbb
aas
insb
mov
ja
repz
cmpsl
push
cmp
xchg
xor
inc
or
rcrl
mov
sbb
fwait
repnz
mov
and
movsb
mov
xchg
ficompl
pop
iret
pop
lret
fimull
dec
imul
test
or
repz
repnz
xlat
pop
gs
mov
jae
add
or
aaa
and
dec
clc
inc
dec
fwait
out
aam
nop
add
dec
orl
jl
sti
imul
int3
mov
popa
or
push
fisubs
dec
xor
mov
push
or
out
dec
int
mov
jp
jl
jp
mov
cmpsl
rcll
push
mov
mov
mov
or
data16
sub
lcall
rcll
lret
lds
adc
xchg
inc
sub
inc
mov
mov
dec
inc
cmc
int
stos
test
pop
test
sub
cld
lods
iret
cli
xor
les
xchg
mov
sti
imul
adc
je
push
movl
je
sbb
sub
sub
mov
int
mov
mov
and
fs
dec
sbb
sbb
in
cs
aam
inc
fisttpll
int3
and
in
mov
jae
push
lock
adc
mov
jno
fdivr
cmp
add
pop
in
inc
jmp
es
popa
xchg
arpl
fisubs
hlt
xchg
cmp
cmpsb
mov
call
out
loopne
add
enter
jge
dec
add
outsb
jp
rol
fnstenv
shld
jbe
aas
fistpll
jns
jns
xchg
mull
mov
addr16
cmpl
push
cwtl
call
lcall
push
fdivrl
js
xchg
aaa
xchg
shll
mov
dec
lods
pop
xor
fwait
pop
jne
sbb
mov
loopne
mov
mov
sbb
fsts
mov
jnp
inc
pusha
or
cmp
std
imul
sbb
jecxz
jg
leave
stos
mov
out
scas
loop
sahf
pushw
jl
pop
int
mov
jno
fldt
xor
outsb
cmp
inc
jne
cmpsl
in
pop
or
aad
fs
in
lret
and
stos
vmwrite
push
mov
add
pop
mov
cwtl
jbe
fildll
xlat
cmp
fldl
sarl
ss
inc
stos
push
lea
or
sub
and
xor
adc
cmp
and
pop
xchg
ret
les
push
das
pop
push
sar
and
punpcklwd
inc
xlat
es
in
push
movb
cltd
lret
add
outsb
and
pop
push
das
clc
imul
les
xlat
orl
mov
or
sarl
sbb
dec
push
das
pop
mov
shrb
call
push
xor
inc
ficomps
in
out
ret
ja
mov
inc
and
shlb
in
popf
pusha
fucomi
xchg
and
call
jmp
out
mov
loopne
adc
adc
ljmp
push
adc
lds
in
adc
mov
test
and
out
push
mov
gs
gs
scas
in
push
daa
cmpsb
in
mov
test
cs
enter
add
push
pop
ja
push
je
in
xchg
out
rol
lahf
test
cmp
lret
clc
sbbb
or
xchg
mov
mov
and
jl
push
inc
mov
ffreep
cwtl
xor
mov
lds
std
dec
dec
in
add
arpl
dec
mov
dec
or
xor
test
sti
jae
jns
cwtl
lods
test
mov
ret
pop
imul
mov
mov
in
dec
add
outsb
mov
pop
shrb
sub
inc
and
sub
pop
jl
int3
push
add
js
inc
idivl
ret
ss
pop
sub
aaa
popf
cmp
inc
repz
sti
test
cmp
andl
daa
insl
mov
mov
dec
inc
push
lods
or
or
in
jecxz
aaa
and
cmp
ret
sub
lds
daa
icebp
and
inc
push
lods
or
xchg
push
insb
push
xchg
int3
pop
inc
sti
lods
js
std
es
aaa
loopne
pop
pop
xchg
pop
mov
add
mov
icebp
cmp
int
loop
mov
fbstp
je
pusha
xchg
movsb
mov
int3
loope
cmp
cmpsb
loopne
add
inc
pop
aaa
int
lds
or
call
addb
fdivrs
xchg
adc
xchg
jbe
inc
lods
insb
cmp
jne
cmp
mov
cmp
add
mov
mov
push
mov
push
test
cwtl
int
es
or
stos
jle
hlt
fisttpll
push
insb
jg,pn
shl
pusha
sub
jle
dec
lods
int
cmp
or
push
sbb
inc
xchg
mov
mov
add
sbb
mov
mov
inc
add
fstpt
pop
stos
or
xchg
push
add
mov
std
es
movsl
arpl
int3
add
inc
enter
xor
or
orb
inc
pushf
aas
lret
imul
pushf
les
push
enter
test
pushf
cmp
sbb
mov
jl
pop
cmp
or
inc
enter
inc
test
pushf
insl
pop
mov
icebp
mov
lahf
in
xchg
pop
cld
popa
shll
xlat
push
lods
dec
jmp
push
dec
popf
addl
fstl
push
xchg
push
das
iret
inc
dec
inc
insb
jmp
lret
popa
adc
fisttpl
mov
sbb
mov
xor
adc
lcall
jne
dec
cmp
xor
cmc
pop
inc
mov
mov
dec
inc
lock
xchg
push
push
mov
fwait
ja
mov
dec
insb
sarl
jo
popf
mov
stos
push
sbb
cs
outsl
sti
or
in
in
and
in
pop
imul
inc
xchg
pushf
lahf
adc
push
cmp
cmp
repz
cmp
sub
inc
inc
xchg
pop
pop
loopne
in
je
jno
jae
or
inc
scas
or
add
cmp
aaa
jmp
aad
inc
mov
leave
aam
jae
shll
add
pop
inc
in
mov
test
xor
ret
lcall
cmp
jmp
sbb
js
mov
out
xchg
ljmp
gs
das
fst
and
jo
test
call
icebp
push
push
fstpl
mov
cbtw
test
push
fcompl
lcall
out
jge
scas
adcb
in
or
mov
out
xor
dec
int
xor
inc
sbb
fcmovbe
nop
jbe
fistpll
jbe
je
xlat
push
js
dec
xor
add
jb
and
in
mov
sti
daa
jl
jge
addr16
cmp
nop
mov
add
xchg
popf
jp
push
out
lahf
xchg
dec
jnp
dec
xor
mov
push
scas
packssdw
sub
adc
and
js
xor
ja
inc
rcll
cmp
aad
popa
movsl
xchg
xor
insl
ds
clc
std
xchg
and
push
imul
push
jle
lds
sarb
sbb
mov
jge
pop
das
pop
les
ja
mov
scas
and
aas
sbb
add
rcr
out
mov
push
mov
stos
pop
dec
xlat
daa
dec
mov
out
push
fiadds
aaa
gs
pop
imul
dec
dec
cwtl
rcr
mov
call
mov
or
in
popf
mov
mov
lods
out
nop
repnz
adc
or
adc
cmpsl
sub
popf
ds
inc
sarb
test
dec
pop
xchg
jl
xor
lahf
mov
outsl
repz
dec
out
lea
pop
jae
pop
add
scas
jg
int
faddp
xchg
cmpsb
test
out
jne
addl
mov
adc
test
adc
mov
in
push
jg
test
sub
test
cmpsb
sbb
test
jmp
cltd
mov
push
jne
inc
dec
inc
sbb
bound
pop
mov
ss
jmp
mov
mul
fisubl
scas
loopne
sub
pop
jg
hlt
jle
pop
popf
mov
shlb
mov
movsl
mov
pop
sahf
or
jg
push
lea
rcr
jecxz
push
mov
push
mov
cmp
aad
dec
rcll
fisttpl
add
jp
or
jecxz
sub
sbb
cld
ret
arpl
aaa
jo
lods
push
stc
push
push
pop
ret
lea
leave
fadds
lret
sbb
sarb
popa
add
cmpsl
xchg
int
pop
mov
fstpt
scas
inc
and
lret
lcall
sti
adc
je
mov
xor
fnstsw
xor
mov
lea
push
sub
lahf
dec
out
andl
cmp
dec
adc
pop
pop
jo
jmp
pop
jbe
rcll
std
pushf
add
jo
pushf
and
sbb
adc
in
xchg
sahf
int3
dec
mov
push
xchg
mov
xor
out
xchg
aad
ret
and
js
scas
lret
ja
push
xchg
lods
cld
aas
in
sbb
mov
icebp
push
shlb
add
pop
ss
rcl
inc
es
sub
add
movsb
push
test
sub
loopne
repz
addl
in
mov
xor
sub
decb
cmc
add
enter
sub
push
dec
and
inc
xchg
test
jmp
xchg
mov
cmp
adc
cmc
iret
mov
rcrb
xchg
push
pop
jne
cwtl
sbb
int
push
cmp
mov
adc
hlt
fisubl
and
lds
inc
rcrb
sbb
outsl
cmpsb
pop
add
aam
repnz
fdivl
jne
pop
dec
ljmp
andl
stos
xchg
clc
xlat
jnp
sbb
ret
sbb
icebp
mov
movsl
stc
ja
sbb
sub
add
daa
adcb
push
adc
xor
and
pop
or
push
shrl
sub
cmp
jl
dec
hlt
jns
mov
mov
lcall
sbb
dec
in
pop
sub
adc
in
pusha
js
sbb
fcoms
and
insl
pop
cmp
aas
xor
out
mov
add
subb
jle
mov
leave
or
push
adc
inc
and
pshufw
cmp
push
loopne
pop
pop
adc
imul
scas
inc
aam
adc
out
addr16
jmp
test
mov
jg
lret
dec
lret
rclb
dec
cmpsl
mov
cmp
add
mov
mov
lds
xor
aas
cmpl
cmp
leave
mov
inc
dec
imul
lods
ss
pop
cwtl
mov
cmp
jae
daa
xor
push
jl
out
push
xlat
and
dec
inc
nop
aam
mov
mov
fisttpll
jmp
mov
cmc
push
das
loop
sub
sbb
mov
mov
pop
mov
xchg
mov
pop
mov
push
adc
test
loopne
stos
push
xchg
outsb
dec
out
inc
loopne
stos
pop
loopne
add
and
mov
or
mov
ficomps
or
dec
mov
or
mov
sub
aad
pop
test
in
push
adc
mov
lock
aam
cld
jmp
add
adc
inc
mov
lahf
xorb
loope
sub
repnz
push
clc
aaa
add
inc
jnp
cld
mov
fidivs
rcr
cmc
mov
mov
leave
mov
pop
or
out
dec
push
movl
dec
pop
cmpsb
arpl
jp
mov
ret
outsb
xchg
inc
shlb
adc
dec
and
xchg
sub
and
fcomip
cli
aad
rcrl
loop
pop
add
or
cmp
inc
inc
xor
mov
sbb
in
or
pop
test
mov
cmp
jmp
jmp
les
dec
outsl
mov
inc
clc
roll
fucomi
mov
aas
data16
jl
mov
add
popf
mov
pushf
cld
push
xchg
dec
xrelease
leave
mov
lods
imul
ss
loop
stos
test
in
mov
dec
addr16
in
loope
les
out
jno
cmc
pop
mov
in
jnp
lret
mov
fwait
test
cmp
js
sub
xchg
dec
adcb
sbb
mov
fcomip
add
jnp
leave
insb
ret
xchg
mov
push
or
sub
adc
insl
in
lock
sub
jmp
rcl
loope
mov
jecxz
cmp
cmpsb
mov
mov
mov
mov
xor
or
stos
mov
icebp
pop
out
xor
js
push
jo
stos
gs
ss
in
ficompl
xchg
adc
inc
pusha
jns
cs
int
mov
fildl
pop
inc
sbb
movsl
jbe
add
jb
inc
xor
bswap
ljmp
inc
inc
ljmp
push
hlt
fwait
push
cld
std
out
inc
jecxz
xchg
and
mov
cmpl
test
inc
daa
fstl
mov
into
xor
nop
loopne
add
mov
gs
repz
hlt
fstl
or
cld
cmp
mov
xchg
push
jl
mov
icebp
mov
pop
adc
mov
ret
and
xchg
pop
ss
jecxz
xchg
sub
inc
xlat
in
cwtl
jae
decb
jge,pt
in
cli
fwait
test
dec
stc
insb
adc
lock
adc
cmp
xor
mov
mov
fucomip
pop
xor
mov
dec
or
push
mov
mov
sbb
add
jne
je
push
arpl
lret
jmp
dec
inc
mov
push
sahf
bound
push
rep
fidivrl
jmp
outsb
xchg
sbb
es
cwtl
cmpsb
daa
and
insb
ja
pop
mov
sub
jge
dec
xchg
dec
aad
lret
outsl
mov
push
mov
daa
je
cltd
inc
mov
ret
jns
xor
mov
movsb
sbb
pop
mov
push
or
add
xchg
push
jge
dec
xchg
movsl
lahf
cmp
icebp
into
loopne
sub
ficoms
or
aaa
sub
push
mov
and
jne
sub
cli
jnp
adc
pop
gs
lahf
xchg
or
jle
dec
mov
fildll
or
jg
fwait
cld
sbb
dec
loop
adc
inc
cli
add
jnp
sub
sub
dec
int3
daa
scas
mov
out
movsl
in
loopne
add
mov
inc
pushf
push
pop
repnz
jg
xchg
dec
push
cli
push
fs
std
rolb
xchg
mov
hlt
popf
incl
mov
ficomps
das
sbb
repz
jg
scas
aam
imul
lret
hlt
arpl
jns
mov
push
fucomip
or
or
sbb
dec
rcl
push
into
sbb
pop
add
adc
jle
insl
mov
outsb
mov
push
add
push
shrb
pop
cltd
ret
mov
and
sub
push
mov
jg
inc
jns
sbb
cli
and
xlat
stos
mov
or
sub
push
add
cmpsb
cmpsl
fs
sbb
adc
jno
xchg
movsl
xor
pop
cmc
fnstsw
fxam
adc
arpl
pop
mov
xor
xchg
xor
sbb
jb
lret
nop
mov
mov
jmp
pop
add
jecxz
outsb
pop
pop
adc
enter
sbb
mov
adc
das
fs
sbb
addb
jl
mov
out
xchg
push
xor
addr16
js
test
pop
es
nop
sbb
jbe
pop
cld
fs
jne
xor
pop
adc
frstor
or
jae
sub
sbb
push
dec
cmpsb
dec
push
scas
insb
es
xchg
sbb
cmp
shll
int3
fs
fbstp
push
inc
xchg
adc
popf
ljmp
inc
push
ljmp
sbb
imul
dec
lcall
pop
out
cmpsb
mov
dec
fs
mov
push
adc
scas
sub
jge
mov
lcall
lahf
xchg
jns
mov
and
inc
jne
aad
add
mov
test
xor
dec
mov
cld
aaa
pusha
dec
push
pusha
lods
enter
or
daa
mov
shrb
pop
lods
cs
lahf
mov
cmc
xchg
sub
es
test
mov
loop
sub
dec
frstor
adc
das
mov
mov
sub
jno
cmpsb
jns
sarb
and
push
adc
in
fistps
lret
add
cmc
jnp
mov
das
fs
out
mov
test
loop
movsl
or
mov
jp
test
sarl
lret
xchg
pop
into
addr16
dec
in
and
leave
inc
push
in
pop
enter
pmovmskb
mov
push
out
into
push
or
cmp
mov
mov
or
ret
scas
jb
xlat
mov
cltd
jbe
dec
lret
xorb
add
test
push
cmpl
push
xlat
fldl
jo
push
add
jbe
xchg
sti
mov
sub
or
jle
imul
stc
adc
scas
in
mov
in
lret
bound
add
imul
pop
sti
pop
mov
pop
das
mov
mov
nop
sub
xchg
cmp
and
push
pop
xchg
push
es
mov
mov
and
sarb
fistps
lods
pop
mov
shl
xchg
ret
inc
scas
pusha
mov
add
push
and
imul
scas
dec
jae
je
lcall
in
jg
mov
outsb
data16
mov
fidivrl
xorb
cmp
popf
sbb
loopne
movsb
outsl
cmpsb
int
mov
lahf
lds
dec
push
add
fwait
cmp
mov
outsb
dec
adc
and
lret
dec
scas
sarl
xchg
aad
jl
jbe
aaa
inc
lods
xchg
mov
shlb
js
mov
inc
pop
ja
or
repz
adc
into
mov
ljmp
add
rcrl
cmp
push
in
pop
dec
lock
jne
psubd
lds
insb
add
sbb
jb
sub
cmpsb
inc
push
mov
in
cmp
dec
jnp
mov
mov
mov
out
sub
mov
fbld
dec
jbe
xchg
and
dec
jnp
mov
repz
aas
lahf
dec
ljmp
push
adc
adc
pop
test
xor
aam
cld
or
push
sbb
adc
sahf
ret
push
aaa
push
and
cmp
imul
xchg
test
xchg
lods
fsubrs
stc
add
cmp
into
shrl
pop
mov
inc
mov
fmuls
scas
and
sbb
loope
mov
xlat
mov
out
pop
imul
or
push
or
imul
and
inc
sub
xchg
mov
mov
sbb
inc
mov
xchg
cmp
dec
cld
cs
mov
imul
jb
or
sub
jae
adc
jmp
xlat
xchg
pop
adc
adcb
xchg
inc
movsl
lret
pop
icebp
dec
data16
sbb
loopne
arpl
nop
mov
add
test
orb
pop
pop
out
movsb
les
jp
or
sbb
push
adc
mov
js
inc
lds
adc
pushl
push
xlat
xchg
repz
into
stos
inc
xor
arpl
cmpsb
push
and
jb
in
pop
push
in
cmc
repnz
push
es
push
clc
test
sbb
mov
popfw
mov
mov
stos
fimuls
movsb
lds
cmp
aaa
scas
pushf
add
ss
je
rol
inc
int
stos
popa
push
mov
mov
jl
xor
or
scas
jae
test
sub
fisubl
das
push
push
inc
outsl
out
jne
stos
jnp
js
scas
cmc
or
pop
mov
sub
in
mov
jmp
fwait
or
cmpsb
movsl
cltd
out
jle
dec
icebp
bound
lahf
sbb
lock
bound
sbb
test
not
stos
jecxz
push
repz
inc
xchg
dec
push
inc
movsb
dec
adc
or
pop
mov
and
adc
mov
cmp
or
into
daa
push
rcrb
xchg
inc
mov
addr16
add
mov
lods
fadd
cld
movsb
jb
inc
inc
mov
movsw
cwtl
cmp
xor
mov
xchg
cmp
inc
add
scas
stc
aam
dec
cmp
jnp
sbb
sbb
lock
aam
or
call
mov
or
mov
sar
test
inc
rcll
pop
jle
xorl
mov
popa
in
jae
pop
out
lret
sbbb
dec
adcl
adc
xchg
xchg
cmp
data16
ljmp
or
sbb
jb
mov
xchg
mov
pop
adc
cmc
pusha
mov
test
mov
scas
cmp
adc
inc
cmpsb
adc
lret
inc
movsb
sahf
in
mov
ret
xchg
sbb
sbb
aaa
notb
out
out
movsb
call
xchg
mov
daa
add
pop
orl
sti
test
enter
cmp
sbb
mov
sbb
cmp
pop
out
sti
test
rcrl
pop
syscall
movaps
inc
cmp
dec
pushf
aaa
in
pop
in
push
push
dec
mov
loopne
cmp
pop
pop
subb
cmpsl
fdiv
mov
clc
mov
shrb
push
push
in
jae
fcomip
out
xchg
aas
jne
int
and
repnz
repnz
dec
dec
clc
jae
sarb
xor
push
xor
aaa
jg
std
cltd
shlb
cmp
cmp
pop
inc
cmc
adc
and
push
mov
cmp
inc
in
push
shl
add
jae
repz
inc
jnp
mov
insl
adc
and
in
add
mul
jmp
add
push
js
fwait
inc
pop
aaa
xor
in
stos
adc
jo
shlb
in
ljmp
sub
std
movsb
mov
sar
push
mov
pop
mov
sbb
jge
daa
insl
xor
movsb
lahf
sbb
mov
push
mov
mov
cmp
loop
or
push
dec
les
sub
and
xor
push
gs
add
inc
stos
imul
lret
movsb
enter
idivl
push
scas
mov
lods
not
xchg
fsubrs
outsb
inc
mov
cmp
lods
add
leave
or
xor
push
sub
repnz
shll
aam
mulb
es
cmp
xchg
sub
fs
aas
or
adc
ljmp
adc
in
int
mov
fildll
out
lahf
adc
mov
ljmp
sbb
cld
jle
sub
lea
aad
movsl
hlt
sub
lods
adc
shr
jle
or
mov
mov
dec
andl
movsl
and
mov
mov
push
add
mov
fimull
pop
jae
sub
mov
cwtl
dec
jp
outsl
push
fstpl
push
cmovl
lahf
xchg
xor
mov
mov
outsb
ja
popa
js
ljmp
push
into
fstpl
test
bound
and
imul
call
mov
stos
cmp
movsl
dec
js
mov
test
sub
dec
lcall
mov
out
rcr
inc
jae
or
insb
nop
dec
inc
out
jg
pop
mov
xchg
or
int
sbb
jecxz
cld
je
testl
pop
in
nop
stos
cmpsl
push
mov
inc
mov
rcrb
and
or
lret
aad
aas
daa
xor
pop
icebp
outsl
lea
leave
pop
pushf
imul
iret
les
cmpsl
in
jge
fs
inc
push
or
cli
dec
scas
stc
mov
int
or
push
shl
xlat
fnsave
dec
mov
lret
popf
jo
sbbb
test
and
daa
sahf
shll
pushf
cmp
sbb
roll
ss
fstl
mov
dec
or
inc
dec
mov
inc
sub
dec
xchg
ret
imul
andb
and
movsl
mov
cs
or
adc
jae
test
mov
push
scas
xchg
mov
es
call
cmp
iret
jb
mov
cltd
in
cs
mov
fcoml
pop
ds
icebp
mov
mov
cmp
dec
inc
out
cmp
sub
mov
cld
in
push
jg
cmpsb
stos
iret
lods
inc
add
jle
outsb
dec
into
xor
imul
pop
adc
aas
jb
mov
repz
icebp
sahf
xchg
fcomps
and
pop
inc
cmpb
sbb
fiadds
test
shlb
xchg
inc
and
mov
inc
mov
clc
adc
xlat
push
sub
or
in
pop
shrl
roll
push
and
mov
add
mov
fists
jmp
xchg
mov
sbb
aad
adc
mov
xchg
sbb
in
add
push
mov
push
mov
fadd
data16
push
cwtl
int
lea
mul
push
inc
inc
push
sbb
test
nop
push
sahf
mov
pop
add
shlb
mov
sub
movsl
xchg
dec
adc
mov
push
jp
mov
scas
scas
sbb
push
dec
into
jno
dec
push
jne
mov
cmp
push
stos
push
push
xor
xor
sub
push
test
cmp
insb
inc
movsl
cs
jns
call
jne
divb
xchg
or
push
add
adc
rorb
sbbl
subl
jno
call
or
in
stos
adc
pop
movl
leave
sahf
scas
ret
mov
pop
dec
mov
add
jnp
out
std
pop
and
lods
xchg
lods
stos
cs
mov
cmp
sub
xchg
cltd
lret
mov
push
mov
int3
mov
loopne
je
sub
pop
cmp
dec
jbe
jmp
jmp
int
dec
aaa
inc
ret
arpl
push
into
cwtl
fildl
sub
dec
xor
scas
mov
movsb
daa
out
mov
std
inc
push
inc
pop
mov
sbb
sbb
mov
iret
mov
bound
or
je
lahf
push
ret
lcall
jg
push
sub
out
mov
and
popf
jns
stc
mov
fidivl
outsl
and
fdiv
dec
xchg
ds
sbb
xchg
stc
xor
mov
sub
js
push
dec
rcll
push
xor
push
mov
xchg
mov
nop
insb
xchg
jg
out
cwtl
xor
jne
cmp
push
gs
sbb
dec
xchg
nop
inc
xorb
xchg
mov
mov
mov
jmp
xor
mov
cmp
lcall
push
lock
inc
bound
dec
int
add
cli
push
pop
jmp
pop
jl
pop
fsubs
jp
ret
sub
into
xchg
rcrb
daa
aam
movsb
push
mov
and
jge
jnp
movsl
mov
jno
sbb
inc
sub
push
sbb
add
decl
and
lret
scas
mov
cmp
mov
add
inc
int
push
mov
mov
pop
into
insb
cltd
mov
ret
adc
xorl
xor
dec
sahf
pop
push
cmp
mov
out
jmp
cmp
push
call
or
out
pop
adc
fldt
cli
cmp
mov
inc
sbb
mov
js
xchg
lcall
shlb
jns
sahf
sub
and
adc
enter
into
add
scas
lret
shlb
leave
ror
push
mov
jecxz
pop
sarb
mov
das
add
cmp
imul
test
js
repz
cmc
std
mov
stos
and
into
mov
inc
sbb
jle
xor
push
dec
call
notl
int
and
or
je
mov
mov
cld
cmc
cmp
and
mov
push
mov
loopne
mov
out
inc
jp
push
add
mov
mov
btc
loope
xchg
outsl
mov
sbb
xchg
cmp
pop
pop
call
cld
lcall
inc
mov
aas
lret
sbb
pushf
lahf
push
test
mov
test
cmp
cs
shrl
dec
sahf
push
cmpsl
icebp
rcrl
cs
xor
mov
dec
int3
or
sub
fwait
xor
adc
and
xchg
xchg
jns
aad
shrl
jb
clc
mov
add
clc
pop
sarl
pop
push
or
inc
push
ficomps
mov
into
js
roll
jp
jae
addr16
stos
mov
adc
push
sub
mov
push
xchg
jnp
fadds
inc
jae
cmp
lock
xchg
sub
into
lods
test
push
test
lds
lods
movsl
add
mov
sbb
cmp
mov
inc
mov
and
outsl
nop
mov
jne
ja
fadds
mov
jns
mov
fs
out
fs
pop
ficoms
mov
mov
cmpsb
scas
jl
push
add
push
xorb
mov
adc
neg
push
and
js
add
dec
mov
xchg
mov
push
roll
mov
or
mov
jbe
shrl
and
push
mov
xlat
cmp
in
pop
pop
inc
sbb
xchg
dec
sbb
scas
in
cs
xlat
loop
adc
mov
pop
lea
out
cmpsb
pop
daa
mov
pop
fsubp
mov
sub
dec
int
jns
fcompp
imul
inc
fimull
mov
or
icebp
mov
and
sbb
aad
pushf
shl
mov
push
mov
insl
adc
nop
mov
or
xchg
push
mov
mov
and
in
xor
aas
inc
mov
fcompl
pop
pushw
scas
cmp
pop
fsubrs
loopne
mov
lods
sub
fwait
cltd
jl
mov
or
loope
xchg
xor
ljmp
cmp
mov
push
cli
and
add
or
lret
lods
dec
sub
cmp
iret
insb
mov
mov
insl
fwait
mov
adc
pop
out
jo
lods
imul
mov
pop
mov
ja
mov
jge
lcall
gs
in
mov
ret
add
inc
les
xchg
lods
jmp
adc
cmp
adc
push
int
repnz
sub
negb
inc
pop
mov
sbb
xor
cmpb
jge
repz
push
pop
and
mov
mov
jo
in
adc
mov
enter
or
pop
push
jne
sahf
and
cltd
pop
sub
in
push
cmpsl
adc
sub
pminsw
out
scas
in
or
mov
mov
scas
andb
orb
mov
in
notl
sub
test
movsl
into
into
xor
scas
add
ljmp
mov
mov
push
out
jb
ss
jp
gs
daa
mov
xchg
pop
xor
push
inc
adc
jecxz
mov
jne
pop
mov
in
aad
add
fldcw
mov
aas
fidivrl
jmp
xchg
xchg
xor
ret
aad
pop
cmpsl
int
xor
and
enter
ja
pop
lea
sarb
nop
inc
mov
dec
xor
mov
xchg
dec
je
loopne
test
sub
orb
sub
jno
daa
faddl
pop
adc
xchg
sub
pusha
incb
popa
mov
jmp
inc
xlat
fildll
mov
mov
xor
out
xchg
aad
dec
mov
jb
xchg
add
and
lcall
cmp
icebp
add
sub
push
lock
loope
in
lock
and
nop
repz
or
inc
mov
xchg
add
mov
sub
inc
sbb
push
mov
in
mov
xor
andl
iret
cmpsl
cmpb
outsb
fs
insb
fnstcw
jbe
push
rorl
mov
mov
outsl
cs
adc
dec
cs
fildl
jo
push
ret
push
jbe
in
lahf
jne
xchg
jecxz
popf
cmc
adc
xchg
lret
xchg
mov
cmc
outsb
out
repz
ret
mov
xor
mov
xchg
sbb
adcl
pop
sub
arpl
lods
push
xchg
xor
loop
add
xor
xchg
jge
xor
add
pop
and
repz
mov
imul
push
mov
jno
xlat
imul
aad
lods
push
movsl
in
test
mov
rcrl
sub
out
sbb
mov
pop
jb
dec
pusha
mov
ret
inc
push
push
loopne
int3
popf
jbe
inc
cmp
cmpsb
adc
mov
daa
mov
shll
jge
pop
sub
stc
fwait
push
and
fs
or
jno
sti
mov
cmpsl
ss
mul
gs
sarb
movl
clc
out
or
mov
inc
insb
xchg
movsb
mov
push
out
push
movsl
dec
xchg
sub
push
inc
cs
rorb
mov
lds
int
icebp
in
cmpsb
imul
clc
push
pop
movsl
lret
fidivs
xor
cwtl
in
lods
test
add
xor
push
lahf
push
imulb
jae
cmp
lahf
mov
inc
or
sbb
push
jae
jg
insb
mov
jecxz
imul
dec
cmp
or
and
into
loopne
add
inc
jle
adc
sub
addr16
inc
sbb
pushf
xor
lret
in
popf
mov
sub
push
sbb
mov
lea
iret
sbb
jno
xor
imul
push
xchg
insb
and
enter
jl
jg
push
sbb
xor
int3
scas
cmc
arpl
xchg
jns
hlt
or
mov
mov
test
jmp
or
cmp
fucompp
int3
ljmp
cmpsb
loopne
adc
sarb
hlt
loopne
jns
aas
ljmp
sbb
xchg
sub
xorl
push
mov
testl
jno
xor
lahf
xchg
lds
sub
leavew
mov
push
mov
add
jecxz
jb
and
fnstsw
fadds
loope
mov
inc
xor
xchg
outsl
lods
enter
arpl
push
add
xor
inc
cwtl
loope
jne
fsubl
lret
and
pop
cltd
mov
clc
jbe
jne
jle
adc
cmp
lods
faddl
xor
sub
push
bound
decl
loopne
dec
mov
fbstp
push
sub
and
jo
stos
sub
dec
cmpsb
jge
leave
fnstcw
ds
cld
insl
cmp
mov
rol
sub
dec
in
sub
mov
sbb
fs
and
pop
xchg
cld
loope
mov
jl
lcall
jge
pop
into
cmpsb
jp
sub
jmp
jns
jg
inc
imul
out
add
sbb
ret
jmp
or
imul
mov
cmp
and
add
test
call
cld
sbb
ljmp
pop
mov
xor
xchg
mov
add
or
push
out
push
mov
jmp
int
int
jns
push
ss
roll
jp
imul
and
xor
out
push
sub
pop
adc
or
pop
xor
xor
dec
dec
and
mov
addb
and
ret
in
std
stos
push
stos
arpl
daa
adc
insl
imul
push
cmp
cmp
imul
test
sti
out
mov
ret
lret
xchg
movsl
mov
lea
sbb
push
or
sub
and
push
pop
das
pop
repnz
imul
aad
adc
jns
sbbb
je
pcmpgtd
push
push
sub
ret
or
stc
mov
jge
cwtl
dec
and
cmp
test
push
loop
jge
shl
enter
adc
data16
jge
and
dec
loop
add
pop
fdiv
mov
mov
lret
and
lret
popf
nop
jb
cmp
lods
int
xchg
xchg
mov
lcall
lds
pop
pop
push
push
cltd
scas
sbb
js
test
sub
mov
ret
xor
push
call
out
pop
rol
mov
ljmp
adc
xor
sbb
mov
aam
cmpsl
arpl
in
push
push
jp
sub
or
cmp
enter
mov
adc
mov
fisubl
fdiv
dec
sub
int3
dec
aad
cmc
popa
inc
xchg
push
sub
mov
jge
push
push
iret
push
lahf
lcall
inc
jp
mov
mov
fdivs
in
sbb
or
rcrb
sub
mov
xor
ja
mov
fadd
pushf
or
out
ret
pop
and
mov
addr16
or
xchg
enter
pushf
or
mov
xor
dec
in
data16
test
sub
aaa
mov
fwait
cli
xchg
and
and
ljmp
stos
push
and
ret
daa
dec
std
in
bound
std
or
xor
lret
das
lock
es
shrl
jae
cmp
push
shrl
ret
hlt
pop
int
into
daa
ficoms
mov
xchg
xor
sbb
jns
jae
ffreep
rolb
xchg
in
jge
inc
push
pop
sub
or
pop
mov
lret
mov
jge
loope
and
imul
int
repnz
cmpsb
fwait
dec
sbb
sbb
xchg
adc
int3
ss
xchg
bound
adc
loopne
pop
pop
lcall
push
xchg
sub
dec
dec
push
fdivrs
mov
mov
cmp
sbb
sub
pop
ljmp
lahf
incl
jbe
mov
out
mov
cmp
rolb
inc
xchg
add
call
pop
pushl
jbe
jge
inc
das
inc
xchg
scas
ror
pusha
xchg
pop
idivb
bound
rclb
inc
xchg
xchg
push
xchg
popf
out
mov
aad
add
nop
aad
ds
sub
mov
outsl
fs
popa
addr16
pusha
cltd
mov
cmp
push
mov
adc
call
enter
jle
adc
cltd
dec
xor
addb
xor
lock
sbb
ds
rcrl
xchg
jg
xlat
insl
imul
sub
adc
sbb
xor
mov
lret
pop
jno
loope
push
adc
sub
idiv
adc
mov
mov
push
push
or
outsb
push
cmpsb
xchg
xlat
js
inc
jnp
leave
divb
inc
mov
in
out
pop
pusha
dec
out
jb
hlt
or
xor
xor
mov
sbb
or
sbb
lods
mov
and
pop
rolb
mov
nop
jge
jo
lret
mov
jmp
mov
jns
out
imul
xor
adc
negb
repnz
test
scas
push
stos
ss
ret
mov
insl
add
xchg
ds
cwtl
xchg
lock
out
clc
cld
adc
shll
inc
mov
lds
inc
pop
sbb
cmp
ret
dec
das
xchg
aad
mov
lds
in
pop
push
fidivrl
daa
jecxz
push
pop
ret
inc
push
jmp
pusha
xor
jnp
andb
mov
fsubl
loop
adcb
pop
lock
pop
pop
fs
or
xchg
dec
pop
mov
adc
push
adc
iret
sbb
pop
and
popf
lahf
dec
cmp
out
inc
cmpsb
mov
sbb
or
jo
int3
adc
pushf
sbb
sarb
movsl
cmpb
cltd
add
cmp
push
cli
cmc
hlt
imul
xor
jae
push
push
je
xchg
aam
aas
push
mov
lcall
adc
mov
pusha
mov
scas
int
in
call
jns
adc
and
adc
or
and
fwait
sar
pop
rol
inc
pushf
push
es
adcl
nop
mov
pop
pop
pop
jmp
sbb
sub
sbb
add
icebp
gs
out
push
pop
jo
sub
fcomp
xchg
pushf
mov
xchg
and
lock
xchg
xchg
je
je
dec
arpl
or
repz
push
or
outsl
in
lock
and
pusha
stos
jbe
sbb
hlt
decl
pop
in
pop
mov
inc
push
adc
int3
mov
insb
addr16
jge
scas
sbb
jne
push
pop
mov
jae
jge
aam
pop
mov
mov
mov
test
xor
loop
sbb
cmc
jg
mov
xchg
adc
lcall
andb
mov
loop
aas
mov
inc
inc
xor
into
mov
sbb
pop
and
addr16
pop
rorl
push
cmpsb
insl
jmp
arpl
cmc
mov
pop
jmp
icebp
data16
mov
hlt
or
sub
and
jl
sub
sub
repnz
mov
push
lcall
es
add
jl
pushf
movsb
dec
xor
ret
ret
and
push
loope
jge
in
jp
inc
mov
cmpsb
sahf
mov
repz
xchg
stos
sub
sbb
sbb
dec
push
mov
test
out
pop
dec
push
fisubrs
sbb
test
pushf
push
sub
or
xorl
outsl
mov
inc
ss
sub
or
mov
sarl
lds
jb
xor
xchg
jne
xchg
clc
roll
add
hlt
mov
or
push
dec
outsb
popa
inc
mov
stos
scas
sbb
adc
sbb
ds
lods
lods
push
loop
ja
adc
cmp
fbstp
popf
sarb
mov
push
arpl
dec
rolb
aaa
mov
fadds
or
imul
mov
mov
fldcw
sub
adc
into
icebp
addl
add
cmc
mov
fmuls
mov
lret
insb
bound
sub
inc
sarb
lea
nop
and
ljmp
inc
decb
pop
pop
dec
incb
mov
or
scas
or
dec
pop
mov
cltd
jecxz
push
jmp
jl
sbb
push
mov
dec
mov
addl
push
test
jb
mov
pop
and
xchg
test
dec
mov
jb
ds
cmc
mov
jb
out
enter
punpckhbw
sub
sub
lcall
or
sub
cmp
or
add
push
xor
out
pop
or
mov
mov
sbb
xchg
loop
or
popf
mov
fstpl
cmpsl
sbb
pop
lahf
or
aas
std
jmp
aas
cmpsb
push
pop
dec
in
add
je
jp
sbb
fxch
mov
mov
loope
test
dec
push
sbb
adc
cld
fldenv
ljmp
popf
int3
in
out
mov
lcall
sub
pop
inc
dec
xor
sbb
data16
dec
mov
adc
push
push
mov
fst
stc
sti
sub
dec
loopne
jbe
mov
rorl
in
repnz
test
insl
mov
je
adc
xchg
clc
mov
and
ret
lds
ljmp
repz
movsb
inc
push
push
xor
dec
loop
jbe
lods
add
adc
fidivrs
pop
push
int
cmc
mov
jge
mov
add
ss
outsb
fnstenv
daa
mov
bound
flds
inc
repz
jg
mov
inc
add
jmp
dec
or
enter
mov
jecxz
pop
call
lcall
enter
and
push
add
shld
and
sbb
add
dec
not
fcmovnb
push
std
or
pop
dec
xchg
mov
jl
xor
inc
xlat
dec
or
or
imul
pushf
lock
js
xor
push
pop
mov
insl
jl
insb
xor
ds
mov
pop
xor
nop
fsts
fs
jbe
incl
sbb
mov
ret
dec
movsb
mov
aam
or
loope
fcmovbe
cmp
movsl
andl
mov
mov
outsl
int3
or
cmp
movsl
inc
xor
lcall
xchg
insl
xchg
push
jns
mov
sbb
daa
sbbb
jns
and
jmp
sbb
cltd
into
outsb
sahf
ret
nop
xor
inc
xchg
sahf
dec
mov
orl
loope
cli
mov
push
loope
out
mov
sub
pop
out
xlat
test
rcrl
call
popf
jns
push
push
cld
sub
or
imul
mov
ljmp
xchg
mov
inc
inc
push
pop
mov
jp
and
adc
cmc
jl
cmp
ljmp
mov
jo
imul
divb
addl
pop
cmpsl
ret
inc
bound
jge
cmp
mov
scas
sub
xchg
mov
shrl
fistpll
inc
xchg
test
inc
roll
dec
inc
imul
sbb
xor
sub
mov
jb
or
iret
test
pop
sub
mov
mov
inc
xor
mov
mov
test
and
push
aas
mov
lret
pop
add
cmp
ret
and
xchg
mov
and
sbb
and
inc
enter
enter
or
iret
js
je
sub
inc
push
mov
mov
cmp
mov
dec
jno
dec
mov
scas
jae
fcoms
sub
mov
movsb
jae
sbb
pusha
or
inc
int3
mov
cmc
adc
pop
pop
adc
and
cmpsl
adc
repz
lods
cmpsl
cmp
mov
mov
push
insl
jne
jge
ret
sub
dec
dec
pop
mov
repnz
movsl
mov
dec
mov
push
in
jge
jecxz
mov
xor
pop
dec
paddsb
ficoml
xor
inc
pusha
bound
sarl
push
out
inc
sub
jp
push
or
ds
jg
int3
sub
pusha
jp
sbb
jp
sub
inc
mov
mov
leave
dec
ret
push
sbb
cmpl
xchg
or
lret
out
mov
nop
mov
jnp
out
out
data16
pusha
xor
inc
dec
aaa
and
pop
and
push
xchg
xlat
push
or
pop
popa
divl
pop
out
jg
mov
dec
sbb
add
cmp
or
pop
cmp
xchg
les
mov
iret
xor
add
push
les
insb
cmpl
pop
aad
aam
jne
leave
stos
aaa
subl
bound
decb
fs
repnz
pop
dec
mov
out
push
movsb
in
ret
in
pop
iret
xchg
aad
cwtl
dec
fadd
pop
das
push
add
push
jle
cmp
ja
mov
movsl
pop
fistpll
sub
loop
and
pop
adc
aam
push
lods
jbe
inc
mov
dec
push
cli
and
sub
or
push
in
out
cmp
in
ret
call
imul
jp
add
mov
mov
mov
jne
mov
pushf
add
inc
hlt
cltd
adcl
mov
lret
and
sub
add
cmpb
sbb
dec
pop
int3
cmp
add
lahf
ss
mov
dec
mov
cmpl
and
or
call
movsb
push
push
divb
enter
sub
scas
imul
xorl
cmp
mov
les
enter
sbb
jge
ljmp
fmul
jmp
push
sbb
jae
xor
cwtl
scas
rcl
add
xor
dec
cmp
fldlg2
test
add
pop
xor
push
mul
inc
sub
cmp
scas
testb
xchg
cmp
mov
shr
xlat
jecxz
call
push
and
mov
cmp
mov
xor
and
aad
cmp
test
pushf
dec
cli
ficoml
sbb
xchg
dec
sahf
pop
xor
and
sbb
and
fs
and
pop
and
adc
addr16
mov
ret
jecxz
and
xchg
gs
sti
adc
or
enter
mov
xchg
inc
or
lods
add
popa
push
das
push
shl
aas
insb
adcl
adc
mov
sub
aad
xor
pop
cmp
mov
add
mov
or
pop
and
inc
imul
dec
outsb
cmp
mov
cmpsb
mov
ds
and
add
xchg
rcr
jae
pop
popa
stos
jmp
add
dec
xor
push
dec
jns
int3
and
insl
xchg
jmp
fs
fisttps
mov
cmp
inc
or
push
sbb
mov
xchg
xchg
inc
rorb
fbstp
test
fcomp
push
pop
jge
push
sahf
or
repnz
push
mov
xlat
das
mov
iret
push
sbb
push
lcall
mov
fcompl
push
inc
sbb
mov
pop
adc
inc
cmovnp
leave
xlat
cmpsb
imul
mov
sub
shlb
cmpsb
jmp
xor
pop
daa
fdiv
pop
ds
addl
lods
jp
mov
cmc
incl
jno
jge
cs
nop
cmpsl
and
icebp
fcomps
pop
scas
lods
fisubrs
mov
inc
dec
into
fmuls
cmp
dec
pop
cmp
cli
in
inc
fiaddl
adc
fidivs
lcall
and
out
ficomps
fs
or
je
sub
out
roll
dec
pop
mov
out
imul
ljmp
fadds
popf
pop
out
in
cmp
insb
dec
jns
mov
adc
andl
cmp
cmp
cmpsb
test
cmp
dec
mov
push
jge
and
dec
xchg
cmpsb
test
loope
mov
mov
fwait
mov
xchg
mov
jle
cmp
xor
outsb
ret
enter
push
clc
sub
repz
xchg
addl
mov
pop
aad
mov
mov
and
cmp
leave
mov
adc
mov
pop
push
addr16
mov
mov
inc
push
rol
shlb
inc
mov
mov
xor
pop
test
push
sar
inc
test
scas
ds
cmp
negl
out
dec
inc
pusha
sub
push
ja
sarl
mov
pop
xchg
jp
out
inc
and
std
insb
pop
sub
clts
lods
lock
xchg
fldt
repz
sbbl
ljmp
clc
jle
fdivrs
sub
idiv
ja
inc
sbb
xchg
orb
and
addr16
aaa
push
bound
cmpsb
and
dec
lahf
xor
dec
ds
aad
or
and
into
sahf
fcmovnbe
rolb
cli
pop
mov
data16
dec
fld
pop
in
lock
cmp
out
mov
xlat
in
scas
push
das
cmp
pusha
outsl
mov
out
dec
mov
mov
std
mov
stos
test
dec
sbb
mov
jecxz
mov
inc
test
inc
fnsave
popa
loope
jmp
pop
xor
cmpsl
adc
int
push
std
mov
outsb
cwtl
ret
stc
sahf
push
xchg
inc
xlat
mov
ljmp
xchg
mov
pop
mov
jg
in
xchg
add
pop
shll
hlt
dec
xchg
pop
adc
imul
dec
mov
pop
loope
lock
push
fistps
sbb
ja
popa
das
xchg
jno
and
pop
and
xchg
inc
call
es
sub
in
sti
and
rcl
in
mov
dec
clc
lods
loop
mov
pop
aaa
pop
pushf
dec
adc
icebp
pop
insb
pushf
shrl
es
push
fcompl
mov
mov
out
ror
mov
repz
in
push
test
inc
call
shlb
les
int3
lds
xor
cmpsb
xchg
pop
add
inc
fs
les
xchg
mov
and
jne
stc
xchg
imul
mov
add
mov
daa
iret
clc
sti
lods
arpl
ljmp
add
xchg
mov
pusha
sbb
loop
sub
adc
movsb
jne
addr16
test
cmp
test
inc
push
fdivrl
lahf
dec
push
rorl
scas
sti
outsl
decb
out
jno
or
bound
arpl
lods
out
rcrb
fmuls
fsubs
mov
aam
fldcw
aas
lret
stos
mov
xchg
xor
out
push
sub
cmc
dec
sbb
pop
lret
sbb
icebp
cmp
dec
popf
adc
std
loopne
int3
je
ljmp
or
pop
push
cwtl
xor
mov
sbb
into
lret
pop
push
ljmp
mov
je
ficompl
pop
leave
cmp
pop
lods
cmp
out
mov
push
xor
in
mov
push
pop
push
cli
push
sbb
fildl
fwait
loopne
lret
inc
scas
out
mov
pop
rcll
mov
push
das
lret
stos
sub
sub
imulb
aad
adc
sub
mov
cli
imulb
sbb
push
cmp
sahf
cwtl
outsb
movsl
stos
dec
xchg
fmuls
cs
test
or
loopne
hlt
xchg
mov
les
pop
mov
jns
push
shlb
imul
pop
imul
ficomps
pop
daa
dec
jp
xor
cwtl
cwtl
mov
jecxz
pop
dec
ret
test
fidivs
mov
sub
mov
call
cmp
inc
adc
dec
cli
jg
fnsave
pop
lcall
push
in
test
mov
sub
fisubrl
ret
xchg
adc
sub
cmp
sub
mov
add
lea
mov
xchg
mov
iret
mov
xor
mov
jle
fs
dec
lds
mov
in
xchg
inc
imul
daa
dec
enter
or
test
lock
repnz
insl
adc
ror
add
pop
xor
push
in
dec
push
lret
out
mov
dec
or
mov
ja
bound
call
mov
and
lcall
insb
mov
pusha
iret
mov
in
sahf
les
xlat
jge
add
int3
push
sub
pop
fdivl
or
es
jae
pop
or
inc
shll
mov
cmp
lea
xchg
jno
jne
arpl
call
inc
push
enter
sub
idiv
andl
sub
jb
fld
fimuls
dec
lds
fwait
mov
aad
aad
pop
out
cmpl
push
sbb
or
pop
hlt
out
add
xor
jmp
push
lds
jecxz
jb
dec
cmp
ss
sbb
push
mov
and
adc
mov
xor
ljmp
insb
fisttpl
scas
mov
outsb
jns
sbb
leave
jae
jmp
dec
mov
mov
push
dec
scas
inc
pushf
ficompl
mov
das
mov
push
gs
insb
cmc
into
rclb
sub
push
jg
data16
scas
pop
and
mov
lods
sub
jge
pop
pop
mov
push
int3
push
jge
dec
cmpsl
mov
jne
lods
jmp
clc
sub
dec
mov
repz
xchg
jecxz
and
int
int
subl
jecxz
push
test
popf
in
push
out
mull
pop
fsubrp
aas
popa
test
dec
cmp
sarb
sbb
mov
fucomip
aaa
sub
add
and
mov
xchg
add
fldcw
push
das
repz
loop
inc
shll
stos
and
jecxz
cmp
out
cmp
dec
lahf
xchg
xchg
int
lea
push
or
pop
inc
shl
inc
insb
push
adc
pop
jbe
arpl
pop
fdivl
push
test
push
or
gs
dec
dec
popa
push
nop
jnp
lock
pushl
adcl
stos
fsub
inc
cmp
loop
nop
clc
dec
or
ljmp
fs
pop
mov
dec
sub
rcll
rorl
mov
sarl
sahf
lahf
fs
mov
xchg
pop
push
xor
fcoms
pop
mov
test
and
mov
fsubrl
pop
mov
pop
mov
xchg
aad
in
dec
test
iret
int3
jl
rep
adcb
mov
cmp
popa
or
mov
sbb
lock
dec
lcall
xor
je
add
mov
cmc
jmp
data16
mov
cmp
cwtl
std
out
mov
rolb
push
scas
mov
fadd
xchg
mov
jg
lahf
rclb
push
fidivs
lea
sub
ret
idiv
pop
hlt
sub
inc
roll
adc
sub
int3
jmp
mov
leave
pop
push
mov
lock
pusha
out
xchg
movsl
push
lea
in
int3
sbb
jecxz
mov
push
push
hlt
fadds
pop
mov
and
les
in
xchg
jge
inc
cmp
adc
mov
pop
adc
dec
or
mov
sub
arpl
xchg
add
push
in
sarb
xlat
push
pop
sbb
dec
jmp
nop
lret
sti
inc
loope
in
add
ljmp
repnz
orb
pop
mov
repnz
mov
repz
adc
cltd
fidivrs
es
or
aam
push
inc
or
or
out
divl
mov
sub
cmp
loop
sbb
pop
jno
pusha
and
ss
loopne
lock
jno
shrl
mov
addb
mov
fbld
aaa
popf
or
push
xchg
sbb
insb
pop
insl
inc
mov
fbld
sub
and
jo
jmp
jo
sub
mov
cli
sub
sbb
inc
mov
jae
out
xor
sarb
ret
cmp
xor
jo
pop
push
in
mov
mov
cmpsl
mov
ret
jmp
dec
xchg
insb
sbb
inc
pop
aam
das
pushf
nop
ss
aad
push
jp
test
fcmovb
jp
cmpsb
and
lods
sub
movsl
mov
cmp
jecxz
aad
cmp
jecxz
icebp
pop
and
popf
dec
xchg
pop
ljmp
xor
jg
sub
push
fsubp
push
dec
pop
adc
cmp
and
or
std
aad
mov
xor
push
dec
lret
jle
xchg
leave
xor
jecxz
and
add
daa
pop
movsb
pop
jmp
std
xchg
xor
mov
jbe
jge
jnp
repnz
mov
imul
aas
jl
jmp
and
je
pop
cmpsl
jmp
insb
push
ljmp
sub
lods
sub
inc
rcrb
push
xchg
cmpsb
xor
sub
loope
cmp
inc
mov
add
pop
sbb
popa
sbb
push
dec
add
fs
push
mull
push
int3
push
sbb
es
nop
cmp
es
orl
pop
outsb
cs
daa
inc
fldenv
jmp
cltd
fstpl
data16
cmp
addr16
pushf
rcrb
test
scas
push
jmpw
das
fldt
pop
fucomp
aaa
test
pop
daa
xchg
leave
fst
dec
gs
adc
pop
pop
push
adc
sbb
add
in
fldt
imul
mov
add
mov
xlat
dec
and
xchg
adc
and
mov
das
lds
xchg
addr16
inc
jecxz
push
lret
sub
push
pushf
mov
xor
movsl
pop
lret
xchg
add
cmpl
mov
mov
jno
sahf
insb
sub
push
fidivrl
iret
clc
hlt
sbb
adc
pusha
add
sbb
out
je
sti
pop
xchg
add
xor
xchg
cmp
sub
outsl
clc
scas
adc
pushf
jle
nop
lahf
push
in
lahf
jecxz
enter
add
or
sti
dec
test
movsb
loope
popf
add
pusha
lahf
idivl
bnd
aad
stos
stos
ja
sbb
sub
rol
adc
mov
sub
fnsave
xchg
jmp
push
subb
subl
cltd
popl
xchg
addr16
inc
and
sahf
gs
push
lea
out
inc
xchg
aaa
jge
cmp
adc
push
cs
dec
add
add
jmp
out
sbb
arpl
into
and
xchg
push
stos
xchg
fisubrs
das
mov
xchg
cmp
stos
mov
movsb
lods
mov
mov
add
je
mov
sbb
sub
mov
xchg
and
and
in
imul
enter
push
fidivrl
mov
mov
xchg
jp
je
pushf
jae
inc
fisubrl
lret
aas
arpl
or
lea
jge
ret
cwtl
pop
mov
add
daa
cmp
xchg
outsb
imul
mov
clc
sbb
cwtl
iret
xor
prefetchwt1
xchg
dec
xor
ror
pop
pop
lock
and
fnsave
xchg
or
into
sub
aas
ror
mov
jne
dec
mov
fadd
loop
or
mov
lds
rcr
cmpsb
and
lods
inc
enter
xlat
cmp
testl
leave
mov
sbb
outsb
fistl
push
out
scas
lods
cli
sub
sbb
ss
jno
mov
ret
aaa
pop
sbb
pop
fwait
insb
xchg
arpl
fmuls
add
in
mov
pop
push
inc
sti
imul
vpxor
in
sbb
repnz
or
mov
and
call
js
dec
push
jo
not
push
lock
dec
sbb
xchg
lds
xchg
push
lods
hlt
enter
leave
outsl
into
movsb
xor
enter
cmpsl
mov
push
test
cmp
ss
fwait
mov
mov
xor
push
and
shrb
pushf
and
cmp
mov
add
mov
les
push
mov
nop
adc
fistpl
push
push
pusha
sti
mov
or
les
dec
fsubs
jne
mov
mov
negl
in
aas
push
incb
cwtl
sbb
sub
ds
aad
outsb
sub
lock
xor
idivl
lods
insb
add
cmpl
xlat
and
mov
add
add
in
adc
loope
pop
jge
jno
pop
inc
fidivs
outsb
mov
repz
ljmp
adc
sbb
mov
pop
inc
das
add
movsb
fistps
out
ljmp
jge
sub
repz
pusha
ljmp
inc
xchg
fsubrl
aam
mov
out
jp
int3
jecxz
push
and
push
repnz
jno
shll
outsb
int3
test
pop
scas
icebp
inc
stos
sarl
pop
rcrl
adcb
lret
dec
or
data16
sbb
jbe
insb
inc
jg
add
mov
cmovno
xchg
mov
pop
cmpl
cmp
sbb
fmulp
dec
push
mov
rcr
cmpsl
push
pop
add
aas
inc
xchg
xlat
in
pop
push
xchg
mov
aad
cmp
jecxz
mov
ret
das
call
inc
int
push
inc
fsub
stc
mov
push
les
stos
jnp
insw
xor
jmp
push
dec
or
scas
lahf
lahf
mov
ja
adc
xor
popf
das
dec
movsb
pop
frstors
pop
test
add
jl
out
sub
or
xor
add
test
mov
stc
mov
jmp
mov
jp
cmpsb
popf
adc
dec
aas
ret
push
sub
sbb
xrelease
shl
cmpl
adc
in
scas
inc
jo
mov
xchg
into
cld
sub
rcll
imul
jle
adc
xor
ja
lahf
pop
in
orl
lea
push
sub
or
dec
jnp
inc
lret
pop
dec
mov
ds
enter
pop
repz
stos
cmp
das
xor
inc
punpckldq
movsl
enter
pusha
lret
pop
adc
fwait
xchg
push
dec
shl
cld
rcr
nop
test
pushf
xor
inc
mov
pop
cmp
xor
les
sub
outsb
aaa
push
xchg
gs
mov
addr16
mov
add
shl
lods
popa
je
js
cwtl
and
xchg
inc
scas
fldenv
xor
imul
push
pop
cmp
inc
sub
dec
inc
lret
flds
push
lret
xchg
loope
sbb
dec
mov
inc
out
enter
inc
dec
cld
mov
aas
divl
and
adc
je
inc
sub
mov
fs
mov
sub
roll
push
scas
lock
push
mov
and
add
mov
cmp
xor
dec
jge
push
add
movsb
inc
sahf
push
cmpsl
jecxz
lea
das
movsl
jle
test
jp
das
sti
data16
xchg
rcrl
outsl
add
push
test
jmp
mov
push
fistps
arpl
add
vshufpd
mov
jmp
xchg
sahf
push
arpl
sbb
jp
jae
aas
lock
mov
push
add
mov
sub
shll
iret
int
push
ja
shll
jp
mov
xchg
pop
das
in
xor
mov
rclb
mov
cmp
push
in
jle
push
imul
dec
jns
outsb
test
push
cmp
in
loop
ds
dec
dec
sub
and
aam
add
push
in
test
fsubs
and
add
inc
out
add
sbbb
leave
ja
dec
add
aas
sub
aaa
in
les
xchg
rcrl
psrld
outsb
push
mov
enter
icebp
mov
push
popf
lods
mov
out
js
cwtl
add
iret
mov
cmpsb
and
push
jl
push
push
xor
push
aas
mov
xorb
mov
mov
pop
mov
mov
loopne
pop
cmpsb
adcl
dec
test
popa
addb
mov
mov
sub
pop
in
aas
int3
fucomip
mov
in
dec
sbb
dec
std
pop
cmpsl
sti
lea
jmp
fadd
popa
iret
test
add
dec
adc
pop
icebp
cltd
testl
sub
push
push
test
mov
lods
mov
mov
push
cmc
ficoms
addb
test
sti
xor
ret
xor
jae
lahf
push
lahf
lea
mov
mov
sbb
or
rclb
bound
add
je
mov
push
mov
aaa
in
stos
and
pop
cmpsb
daa
cltd
ljmp
sbb
test
push
pop
cmp
bound
jo
jg
xor
das
lea
test
lds
or
aad
pop
lahf
push
into
cmpsl
fbld
mov
aam
minps
mul
mov
addl
shll
fwait
xchg
stc
js
push
push
xor
sbb
jle
adc
mov
pusha
and
xor
and
sahf
iret
les
cmp
testb
ret
cmp
fimuls
in
mov
and
popa
or
cld
int3
jne
adc
jb
inc
stos
cs
insl
loopne
popa
iret
pop
push
aad
add
jb
sbb
mov
loopne
jb,pt
divl
out
mov
jl
sahf
shld
jae
dec
mov
call
insl
mov
imul
ss
outsb
mov
into
lods
insb
add
jmp
pop
jae
xchg
lock
scas
mov
das
scas
inc
in
cli
inc
xor
cmp
imul
cs
mov
aas
pop
addr16
push
or
mov
add
or
mov
int3
js
in
dec
sub
or
mov
pop
cmp
popa
stos
and
push
cmp
push
inc
jns
cmpsb
decb
subb
push
dec
mov
mov
dec
mov
ret
iret
inc
lods
mov
ds
xor
add
xor
jecxz
adc
jg
movsl
dec
push
dec
in
test
fstps
insl
cltd
cmp
fldt
scas
scas
jno
jecxz
pop
mov
fldt
xor
je
fistps
call
pushf
push
jne
xlat
add
or
into
outsb
ffreep
mov
mov
xchg
xor
mov
stc
call
add
fmulp
xor
fimuls
loopne
test
mov
sbb
mov
push
js
hlt
fwait
dec
mov
fisubs
xchg
das
mov
imul
lods
icebp
sahf
adc
jmp
jecxz
je
outsl
wbinvd
shll
loopne
adc
adc
dec
xchg
stos
mov
jbe
sub
cmp
daa
pop
lret
fdivs
mov
stos
mov
jns
ret
imul
push
imul
out
pop
arpl
enter
ret
adc
ficomps
call
push
movsl
cmc
adc
lcall
mov
inc
pop
xor
mov
cwtl
dec
pop
ret
sbb
enter
fcomps
fisttpl
xlat
or
sbb
fistl
mov
mov
dec
pushw
rcl
pop
or
lret
leave
ljmp
mov
push
pop
sbb
fidivrs
cs
push
inc
pop
in
xor
int
xor
dec
mov
in
imul
popf
cld
jns
push
lods
jp
add
xchg
lea
jl
xchg
mov
jb
jmp
adc
xchg
xor
test
mov
test
xchg
adc
inc
push
imul
aaa
enter
lcall
outsb
pushf
inc
bnd
lods
mov
and
popa
imul
sbb
out
cmp
imul
pop
popf
sbb
pop
lock
rorb
popa
mov
xchg
push
sarl
mov
mov
cmpsl
mov
cltd
ficompl
xchg
out
ds
andl
fdivrs
nop
add
ret
ss
fdivrs
adc
out
cmpb
push
pop
dec
clc
popf
xorl
data16
rclb
mov
jns
add
pusha
sbb
fbstp
sbbl
jne
pop
fcmovne
std
shr
dec
mov
mov
loopne
fistpll
insb
xor
lea
das
cmc
and
divb
inc
and
sub
loop
dec
mov
xor
jne
dec
emms
and
mov
imul
adcl
dec
stos
repnz
imul
xchg
dec
xor
xlat
mov
test
fidivs
aam
lahf
in
negb
pop
popf
cmp
repz
popa
pop
push
sub
mov
xchg
mov
pop
lock
add
ljmp
nop
mov
mov
mov
out
int
sub
aad
xor
xchg
jnp
pop
jl
cmp
push
stos
lahf
mov
mov
cmp
sbb
les
imul
das
loope,pn
and
int3
or
sub
mov
sahf
pop
data16
push
pushf
mov
int
cvttps2pi
bound
adc
inc
and
cmpsb
cmpsb
aam
outsl
sub
mov
fstpl
outsl
mov
dec
stos
and
and
fldenv
mov
mov
lds
jns
cmpsl
push
incl
jge
enter
cmpsb
leave
mov
cmpsb
mov
or
lcall
xor
jns
or
pop
push
test
loopne
rolb
sarl
xor
ret
in
push
push
movsl
or
adc
stos
pop
mov
dec
dec
std
in
inc
inc
dec
popf
cwtl
xor
and
gs
mov
pop
cmc
sahf
ljmp
fcmovbe
sbb
jb
or
outsl
lods
pop
das
clc
aas
mov
push
cld
es
mov
ss
adc
xor
pop
cmp
jne
pop
mov
dec
push
pop
pop
mov
adc
mull
mov
shl
mov
push
in
push
test
into
rcl
mov
hlt
push
jp
sbb
mov
sti
shlb
and
sub
sub
lds
scas
flds
rcl
in
mov
nop
je
cmc
lcall
inc
jbe
aaa
sbb
imul
jns
push
mov
ja
jp
xchg
call
stos
in
out
sbbl
rolb
test
mov
pop
lcall
mov
cmp
sarb
and
sub
adc
xor
sbb
mov
cmpsb
cwtl
sbb
mov
push
std
out
rclb
xchg
daa
adc
dec
insl
popf
mov
push
cmp
lret
scas
push
pop
jl
iret
push
push
add
xchg
inc
rol
stos
mov
out
repz
pop
adc
mov
sbb
lahf
decl
push
mov
mov
loopne
and
sub
or
sbb
ljmp
repnz
int
rorl
sahf
xlat
hlt
mov
imul
fdivl
shll
mov
or
and
fistpll
sarl
jge
loopne
mov
xchg
rolb
xor
and
aaa
jnp
cmp
xor
pusha
dec
lods
mov
add
jecxz
mov
push
or
pop
dec
lods
jge
cmc
lahf
das
add
jmp
inc
mov
mov
addr16
test
in
aam
add
jb
stos
mulb
icebp
dec
dec
inc
mov
in
inc
lret
daa
sahf
outsb
jnp
jmp
popa
mov
es
and
imul
sub
mov
and
add
test
ds
pop
pop
pop
sbb
ds
mov
stc
mov
ret
sub
push
sbbb
lahf
stos
clc
cltd
aad
mov
pop
sarb
subb
shrb
mov
lahf
sbb
lret
sti
jae
imul
or
test
mov
leave
testb
jno
lret
arpl
pop
or
add
pop
aaa
lock
mov
xchg
dec
inc
inc
push
imulb
fsts
inc
cld
mov
movsl
ja
repnz
jb
out
lea
xchg
pop
mov
inc
xor
cld
lods
mov
mov
adc
ror
fcoml
loopne
enter
inc
addb
pusha
xor
mov
loop
subl
mov
notl
subb
dec
sbb
es
dec
push
aam
sub
pop
lds
adc
xchg
cmp
je
lcall
rolb
jbe
push
sbb
aad
add
outsb
mov
outsl
int3
test
in
dec
dec
lock
test
mov
adc
jno
dec
arpl
xchg
xchg
mov
test
scas
inc
jl
in
ds
or
mov
dec
cmp
test
lods
dec
test
and
jbe
sub
repz
sub
out
xor
xchg
push
push
xlat
dec
movsb
mov
in
xor
fucom
ss
clc
dec
push
jns
mov
js
stos
mov
jmp
mov
pop
xchg
lcall
mov
and
add
popf
lret
outsl
cmpsl
stos
int3
inc
je
mov
mov
dec
and
scas
ret
mov
pop
out
or
mov
faddl
popf
jns
sub
mov
and
sub
push
sahf
lock
sbb
test
push
or
int
push
and
jl
mov
test
xor
mov
jno
movsb
sub
out
or
or
mov
bound
push
mulb
sub
cli
jg
pop
push
testl
xor
xchg
in
nop
sub
loopne
hlt
pop
ss
sbb
call
pop
or
cld
movsl
jecxz
jae
push
sbb
xchg
notb
lods
fucomi
aas
test
ret
adc
mov
xchg
hlt
leave
xor
xor
ljmp
imul
or
aaa
stos
xchg
stos
mov
sub
xor
ret
les
inc
adc
sti
add
test
inc
mov
jns
hlt
jo
shll
cmp
sbb
dec
mov
lahf
pushf
lret
mov
and
jmp
in
movl
mov
orb
in
push
jne
pcmpgtb
lea
movsl
pop
xor
aad
xchg
inc
sub
mov
and
xor
test
mov
and
jecxz
sub
pop
lods
jo,pn
mov
enter
dec
mov
mov
adc
adc
mov
xchg
fldenv
imul
xor
dec
jp
fs
nop
into
jmp
jo
loop
out
cmpsl
mov
fdivrs
stos
inc
inc
je
jo
dec
out
popf
mov
push
lock
xchg
stos
mov
ret
aas
cmp
orl
jle
inc
dec
rorb
pop
sbb
mov
sub
shll
aad
sti
xor
ret
ljmp
inc
in
sbb
lock
jbe
testl
imul
rclb
xchg
test
out
sub
and
sarb
mov
push
lcall
out
test
stc
and
in
stc
mov
or
jmp
dec
mov
mov
addr16
repz
call
iret
dec
rorb
push
int3
mov
sbb
ret
inc
into
cmp
not
aam
pop
addr16
adc
add
mov
in
cmp
gs
arpl
xor
sbb
push
mov
adc
pop
std
mov
push
outsb
imul
sar
mov
pop
mov
adc
into
inc
mov
cmpsl
xchg
nop
scas
adc
add
imul
mov
fisttpl
push
ljmp
roll
mov
mov
scas
mov
adc
or
leave
push
ja
sub
ret
adc
adc
test
pop
inc
stos
movsb
and
movsb
push
es
test
or
int
pop
jg
cmpsb
ucomiss
sub
rclw
jmp
cltd
aad
inc
fbstp
pop
jmp
xor
aaa
add
xlat
xor
clc
mov
outsb
or
insl
addl
inc
hlt
ja
scas
add
jo
mov
push
repz
test
out
push
scas
in
add
jae
pop
imul
cmpsb
scas
cmpsb
daa
xchg
mov
jnp
into
jmp
cmpsl
adc
inc
sti
push
rolb
std
clc
adc
add
leave
add
mov
push
in
mov
bound
sbb
stos
int3
mov
sub
loope
push
xchg
and
out
pop
loop
mov
adc
pop
mov
dec
andl
pusha
push
mov
imul
ss
mov
sub
fucomi
lcall
inc
cltd
mov
push
clc
bnd
sub
push
push
aad
mov
cmp
pushf
lods
sub
stos
scas
in
sar
stc
push
or
out
sub
imul
push
inc
cmpsb
imul
push
mov
mov
cli
adc
in
lret
mov
mov
int
movsl
push
ss
ja
cli
mov
fdivrl
ret
imul
out
xchg
outsb
sub
enter
sbb
mov
jne
rcll
mov
cmp
add
add
loope
scas
out
int3
dec
xchg
push
in
test
pop
lcall
mov
jle
mov
adcl
scas
scas
add
cmc
cmp
xor
inc
xchg
and
push
xor
rcll
pop
mov
sub
xchg
lcall
mov
pop
adc
pushf
scas
cmp
je
sub
push
mov
cmp
dec
mov
push
inc
push
out
adc
adc
popa
jle
call
cmp
inc
mov
aam
in
cmp
lahf
xor
xor
and
imul
ret
test
push
lahf
mov
arpl
sub
mov
mov
pop
movlps
push
inc
pop
lods
leave
sbb
mov
out
mov
lock
inc
mov
pop
mov
dec
es
dec
test
jecxz
xor
sbb
into
mov
pop
lcall
test
inc
pop
dec
push
sub
add
jge
popf
adc
loop
lret
mov
xchg
ljmp
dec
popf
popa
out
call
leave
test
add
in
addr16
iret
das
push
push
dec
inc
popf
and
mov
lea
xchg
cmpsb
pop
insb
push
addr16
mov
popa
mov
in
push
jg
jb
das
lahf
lret
lds
dec
sahf
test
jmp
pushw
test
cld
roll
cltd
out
jnp
popf
dec
adc
push
inc
mov
cmp
jne
pop
sbb
arpl
ret
scas
lret
pop
xchg
inc
push
lret
xor
or
or
add
call
dec
lret
flds
mov
mov
aam
push
jge
dec
std
hlt
gs
stc
dec
xchg
or
jne
or
dec
xor
stos
filds
xlat
cmp
jae
xchg
pop
sub
frstor
call
add
jecxz
push
arpl
out
cwtl
ss
mov
jo
sbb
pushf
sub
jmp
and
mov
cmp
arpl
pop
iret
ret
sub
jmp
cmpsb
xchg
xchg
push
mov
test
rclb
es
aaa
cmpsb
or
or
rcll
jae
xchg
out
xchg
jecxz
inc
mov
ficoml
mov
dec
mov
mov
in
and
fcomi
mov
in
ja
add
dec
out
lods
sbb
pop
popa
leave
cmpsb
pop
and
xchg
cs
lods
cmp
lcall
sbb
jg
addl
scas
lock
add
mov
mov
pushl
cmp
out
ss
mov
je
scas
xchg
push
aaa
pushf
inc
in
test
sbb
dec
es
pop
fidivl
cmp
push
testl
std
jecxz
sbb
cmp
out
mov
push
pop
jmp
das
out
aad
ret
imul
lods
xchg
outsb
icebp
add
out
xchg
dec
fnstcw
gs
push
mov
jnp
sbb
sbbb
sbb
lods
in
mov
movb
mov
into
mov
push
and
inc
mov
inc
mov
sbb
push
or
repnz
add
pushf
cmp
outsl
sub
mov
bound
stos
nop
sub
pop
push
mov
popa
lea
push
mov
cmp
push
leave
rcl
pop
add
push
and
push
and
jmp
fcmovb
popf
push
cmp
or
sbb
addr16
in
in
xchg
shrb
cmp
sub
arpl
fdivl
cmp
std
pushf
addr16
scas
aam
and
jno
mov
sub
add
mov
or
popf
cmp
xor
push
cmc
and
out
or
in
jecxz
movsl
mov
jle
lock
dec
jne
adc
ret
sub
or
decl
dec
mov
int
test
lret
lret
sbb
subb
cld
hlt
xor
xchg
test
xorl
inc
repnz
sbb
popa
call
xlat
cs
sbb
enter
dec
pop
nop
adc
inc
ss
mov
scas
and
lret
sbb
mov
clc
addr16
xlat
jle
pop
sub
loop
add
xor
les
lret
mov
inc
dec
cmp
or
out
dec
mov
add
jae
or
jecxz
in
fsubr
cli
cmp
lahf
mov
ret
sub
or
push
loop
popf
aam
and
push
int
neg
bound
divl
fidivrs
mov
sbb
mov
cmpl
mov
gs
cli
xchg
clc
pop
mov
mov
fldcw
sar
and
xchg
lahf
ret
pop
pop
cmp
repz
jmp
scas
cwtl
lods
sub
test
lahf
sbb
and
xchg
or
scas
inc
cltd
dec
and
sbb
pop
push
or
cmpsb
aas
faddl
mov
test
cmp
rcll
cmp
in
fucomi
cmpsl
pop
enter
mov
adc
jecxz
mov
xor
fs
xor
hlt
cmpsl
lds
mov
mov
inc
out
or
jbe
pop
jl
idiv
jg
add
clc
fsubl
xlat
xlat
xchg
lods
mov
push
cwtl
mov
aam
lahf
mov
and
lcall
push
jl
scas
sahf
sub
dec
in
sbb
testl
clc
mov
cltd
movsl
ret
dec
inc
xlat
xchg
jp
imul
frstor
addr16
cmp
and
jo
shll
jl
sbb
data16
movsb
add
movsb
lock
lahf
and
pop
sahf
lret
lcall
loopne
es
mov
push
push
cmp
cwtl
mov
jecxz
scas
add
cmp
adcb
ror
jnp
mov
imul
jnp
outsl
jl
cwtl
dec
cmc
sub
adc
cmpsl
xchg
inc
movsl
stc
or
mov
adc
cmpsl
and
pop
sub
jno
xlat
fwait
jbe
xchg
in
ss
std
xchg
sbb
inc
dec
iret
popa
add
std
sahf
xchg
sbb
icebp
sbb
or
jo
mov
lods
insb
notb
enter
ljmp
xchg
in
xor
mov
negb
and
cmp
fcoml
jne
test
aas
sbb
in
in
add
dec
push
push
fldl
mov
jl
dec
in
popf
inc
mov
push
and
insb
sbbl
sbb
adc
mov
arpl
ret
les
fld
push
push
mov
push
pop
mov
pusha
pop
adc
mov
inc
push
and
mov
mov
xchg
sbb
jg
scas
xchg
test
sbb
lock
push
jbe
xchg
jl
test
jae
xlat
jbe
mov
enter
pop
adc
xchg
pop
jg
enter
mov
and
mov
cs
or
xchg
bound
adc
mov
ret
iret
shlb
mov
jb
in
out
ret
cmovno
lahf
je
adc
int
sub
fsubp
xchg
dec
mov
pop
or
adc
scas
mov
iret
pop
mov
xor
cmp
out
in
pushf
fs
xchg
int3
dec
insl
xlat
adc
test
sub
sub
out
mov
sbb
inc
sub
jno
jbe
das
lret
push
sbb
cmp
in
sbb
stos
add
dec
movsb
jmp
clc
adc
fidivrl
das
loop
mov
leave
add
test
xchg
lcall
add
wrmsr
cmpsb
ljmp
das
xchg
jbe
sarl
inc
sbb
push
pusha
shl
insl
lahf
sub
pop
pop
jb
xchg
xchg
push
push
mov
adc
ds
fisttps
mov
push
inc
mov
sub
mov
mov
sti
andb
inc
or
rorl
xor
addr16
das
push
aaa
aam
fwait
xchg
imul
lods
mov
sbb
neg
xor
jl
push
dec
ror
cmp
scas
cmp
push
loop
loope
ss
cld
ljmp
add
mov
int3
cmpsb
push
xchg
repz
mov
dec
enter
xchg
hlt
movsl
iret
xor
push
in
xchg
mov
out
aad
mov
and
mov
ret
mov
imul
mov
sar
sub
xchg
pop
test
repz
pop
and
sbb
adc
push
mov
jnp
iret
test
outsb
add
mov
leave
jp
ss
mov
or
pop
and
inc
mov
jl
in
addr16
pop
mov
jp
mov
xchg
aad
inc
pop
cld
add
les
xchg
xchg
daa
aas
lods
fcomps
jle
lret
pop
insl
push
xchg
imul
lods
ret
jl
mov
stc
cs
cmp
lea
mov
dec
cwtl
enter
jg
inc
or
lods
sub
jbe
ret
popf
xor
out
movsb
xchg
lods
imul
sbb
xor
xor
dec
fwait
jp
imul
push
std
adc
xchg
jb
addb
push
mov
inc
insl
sbb
and
xchg
mulb
push
clc
mov
xchg
ja
adc
dec
mov
jns
mov
mov
pop
jg
ljmp
jle
scas
repnz
mov
adc
and
lahf
push
pop
mov
push
stc
push
xchg
mov
xchg
sub
and
dec
xor
sub
in
mov
mov
cmp
sub
sbb
and
push
xor
push
push
sarl
inc
mov
push
dec
int3
lods
gs
daa
sub
outsb
add
mov
cmp
sbb
and
sbb
scas
sbb
inc
mov
and
sub
sahf
xchg
adc
cli
gs
dec
mov
ljmp
cwtl
push
int
iret
cmp
scas
fcoms
push
insb
pop
and
inc
mov
ljmp
outsb
mov
fstpl
push
mov
fdivrs
aam
adc
mov
fnsave
jg
push
inc
pusha
sbbl
in
cmp
push
xchg
xlat
lret
out
je
mov
test
std
jns
les
mov
mov
mov
out
jle
mov
and
divl
fisubrs
pop
add
sub
imul
mov
xchg
dec
testb
les
inc
sbb
int3
mov
mov
ljmp
cltd
jnp
addr16
repnz
jo
push
cmpsb
mov
mov
imul
aas
fcoml
pusha
xor
dec
push
jmp
jg
inc
or
out
fidivrs
fwait
dec
push
pop
jle
jne
lods
jmp
inc
loope
mov
call
sti
jne
movsb
mov
push
out
jmp
repnz
xchg
add
push
fmull
and
dec
loope
in
lock
lret
out
call
fimuls
pop
mov
ret
inc
mov
adc
mov
cwtl
test
pop
insl
mov
lock
outsl
cmc
push
xchg
push
fcmovnb
movsb
push
pop
arpl
fadds
xchg
test
imull
in
fdivrl
clc
test
daa
in
add
in
fisubl
or
xchg
outsl
data16
popf
adc
xchg
pushf
leave
pusha
popa
in
out
push
insb
and
imul
fidivl
arpl
and
inc
addr16
xchg
insb
test
scas
jmp
pop
pop
movsb
xor
sbb
jnp
sbb
xchg
and
leave
inc
pop
mov
sub
mov
cld
mov
popa
shl
addr16
pop
jmp
jmp
jb
mov
or
pop
jg
xchg
iret
ljmp
push
mov
sub
pop
stc
jp
mov
pushf
or
mov
hlt
data16
mov
ljmp
aam
fdiv
adc
fistpll
call
pop
add
iret
es
mov
add
imul
pop
xor
xor
mov
cmp
loope
int
mov
and
jbe
xchg
mov
cwtd
sub
lret
push
int3
dec
ds
push
jl
pop
jne
stos
out
sbb
arpl
mov
sbb
outsb
push
ret
aas
jecxz
lahf
and
adc
sub
cmp
mov
jecxz
cmp
mov
enter
pop
cld
cmp
and
xchg
sbb
lea
xchg
idiv
in
mov
mov
xor
xor
mov
add
fidivl
cmpb
addl
es
xor
movsl
mov
xor
fcompl
pop
pop
jl
sbb
fidivrl
pop
cmp
shll
test
xchg
pop
and
insb
out
ret
sarl
jnp
cmp
ss
mov
into
or
loopne
pop
add
cld
divl
push
xchg
in
imul
mov
push
xchg
push
xor
inc
mov
lods
dec
xchg
shrl
aaa
inc
dec
enter
hlt
cli
bound
cld
hlt
pop
mov
xchg
rcll
ds
mov
dec
aaa
push
pop
dec
push
jbe
stos
inc
rcrl
in
in
scas
jnp
loope
jp
cmc
push
rorl
into
jge
push
mov
pop
inc
jbe
xchg
cmpsl
aad
add
sbb
or
jnp
xchg
pop
mov
add
test
popf
lret
and
call
test
xchg
stc
cmc
or
out
dec
repnz
push
aam
or
fldt
mov
call
or
jmp
stc
out
daa
cmpl
xchg
lahf
jmp
xchg
sub
iret
adc
sub
pop
jnp
jg
in
pop
mov
jmp
shlb
rol
loope
inc
daa
stos
roll
into
mov
xor
pop
mov
lcall
mov
addr16
or
sbb
mov
aaa
adc
repz
jecxz
push
lret
mov
rorb
addb
std
hlt
sti
mov
jl
sub
rorb
lock
nop
jmp
cmpsl
ljmp
mov
pop
xchg
adc
sub
add
sbb
ja
lds
and
out
mov
and
mov
test
pushf
faddl
pop
out
and
clc
push
vmovupd
cmp
push
dec
pop
call
dec
jb
adc
adc
add
in
push
and
cli
cmp
in
daa
sub
nop
push
clc
repnz
insl
sub
es
mov
jg
and
adcb
adc
ss
jae
inc
or
jg
fs
lcall
out
daa
in
icebp
jg
cmp
dec
int
jp
into
ljmp
push
cs
es
addb
out
mov
adc
paddusb
aas
imul
mov
out
shll
sbb
inc
cmp
lahf
push
mov
xor
mov
popa
cmp
mov
fists
jle
add
stc
out
aad
rorl
cli
jne
add
bound
stc
arpl
add
lea
mov
jle
or
adc
dec
inc
jmp
or
pop
dec
pop
enter
xchg
aaa
dec
add
dec
lret
ficoml
mov
adc
pop
adc
mov
popf
bt
mov
or
mov
in
movsl
sub
push
push
std
sti
scas
xor
je
testl
lret
push
pop
add
addb
xor
mov
adc
add
xchg
push
daa
xchg
xchg
adc
jbe
mov
add
scas
mov
paddusw
nop
movb
stos
mov
mov
lods
lret
or
sbb
movsb
outsb
push
imul
pop
pop
es
add
adc
testb
fsubr
push
mov
aaa
xor
xchg
sub
pop
fdivp
out
icebp
xor
and
or
add
lock
sti
mov
clc
outsb
in
add
and
fildl
or
int3
lret
lock
cmp
mov
add
push
mov
enter
jmp
dec
rclb
mov
aaa
cmp
cmpb
mov
mov
loop
pop
pop
or
cmp
jbe
les
dec
es
push
bound
jl
mov
addr16
sbb
pop
jno
aaa
aas
imul
out
cmp
inc
jb
lahf
pop
dec
and
dec
notb
cmpsl
add
dec
adc
sub
lods
cmp
xor
aaa
pop
call
push
and
jbe
mov
or
pop
dec
sub
cld
testl
jl
in
and
inc
into
mov
jne
dec
insb
push
mov
cmp
jb
xor
and
loop
push
and
dec
orb
pop
jmp
aam
and
hlt
pop
cmp
push
push
repnz
test
fistpl
shrl
sub
aam
xor
sub
es
insl
lret
les
inc
inc
push
pusha
ja
mov
movsl
push
je
xor
xor
gs
outsl
cmp
lods
adc
icebp
pop
fwait
sub
cmp
adc
pop
divps
ljmpw
nop
inc
cmp
push
rolb
pushf
cmc
pusha
cmp
and
jmp
and
pop
push
andnps
out
js
ret
push
adc
test
xor
mov
ljmp
mov
ljmp
jl
in
test
mov
bound
push
adc
insb
cmc
lea
mov
and
addr16
aaa
sub
dec
mov
push
movsb
sub
in
mov
pop
popa
push
xchg
add
mov
mov
lods
xor
rcrb
xchg
sti
dec
jb
ficompl
mov
lds
or
xchg
sub
pop
xor
sbb
pop
mov
xchg
rcll
out
or
cmp
lods
inc
cli
je
pop
adc
inc
sub
inc
cmp
pop
push
arpl
jecxz
jnp
dec
jl
sub
mov
mov
lcall
and
mov
sbb
test
mov
sub
and
aas
sbb
sbb
icebp
int3
sub
stc
in
insb
pop
xchg
mov
pop
pop
cmp
jo
addr16
push
and
adc
or
adc
xchg
insl
add
ret
sub
dec
jle
clc
adc
or
stos
cmp
dec
pop
push
in
enter
sbb
dec
inc
hlt
jg
sbb
xor
cmp
shr
mov
pop
mov
ret
arpl
xor
add
cmp
lods
outsb
ret
jmp
cmpl
sahf
in
int
filds
std
stos
or
jp
outsl
ret
insb
dec
sub
int3
ljmp
daa
sub
or
jb
in
fpatan
inc
lds
js
out
xchg
push
push
lds
das
sbbb
push
adc
mov
cld
pop
mov
mov
push
push
add
push
xchg
push
mov
leave
rcrb
add
mov
xorl
jno
fmuls
daa
cmp
repz
in
add
jg
test
push
and
mov
cli
test
mov
pcmpgtd
outsl
jg
jb
inc
aas
lods
shl
test
es
push
dec
cmp
fsubl
push
fs
out
mov
adc
dec
aaa
mov
mov
jnp
scas
enter
jmp
xor
hlt
adc
cwtl
sti
sub
popa
mov
pop
test
add
and
in
lea
push
xor
jle
lods
xor
stos
inc
jp
mov
cld
or
xchg
push
insl
shr
aad
stos
loope
stc
mov
adc
sub
pop
imul
mov
test
testl
adc
mov
mov
inc
les
je
dec
jp
out
push
or
wrmsr
xchg
jbe
and
and
mov
cmc
sbbb
push
testl
pop
and
ljmp
cwtl
cmp
sub
sub
pop
cs
or
xor
cltd
das
sbb
or
decl
adc
dec
popf
dec
push
stc
sub
cmp
pop
pop
call
jmp
jbe
xor
inc
xchg
xor
xchg
pushf
sub
mov
cmp
aas
add
ds
add
jg
test
jae
int3
cmpsb
xchg
inc
je
stos
xorl
or
jo
das
ja
mov
ljmp
adc
dec
out
ja
stos
lds
jne
jmp
inc
test
test
or
lea
pop
in
leave
jns
loopne
aad
mov
nop
inc
out
mov
loop
jmp
xor
sbb
inc
out
jle
cmp
push
push
aaa
arpl
popf
push
cltd
test
add
lock
sub
cmp
push
dec
dec
adc
mov
insl
sarl
iret
add
filds
inc
loopne
jecxz
mov
xchg
mov
in
mov
imul
dec
rcrl
sbb
jecxz
mov
lret
loopne
push
dec
int
lds
jmp
dec
in
pusha
xchg
fisubrs
jle
adc
ja
adc
jg
pop
adc
xor
repz
idivl
add
xlat
dec
add
icebp
inc
cwtl
and
aad
es
out
movb
add
mov
mov
and
fcmove
jp
jb
adc
jne
sbb
test
aaa
add
push
out
sahf
mov
sub
stc
or
cmovae
dec
adc
std
jge
imul
xchg
pop
sub
stos
aad
stc
rcr
les
outsb
movsl
lds
mov
jmp
rorb
cwtl
test
inc
lock
mov
mov
jns
shlb
xchg
sbb
or
arpl
lcall
loop
jo
jge
daa
and
fistpll
or
pop
sbb
jbe
xchg
mov
lahf
push
and
push
cli
mov
outsb
std
std
xor
jg
rep
test
testl
dec
sub
sub
sub
jl
int
cld
mov
out
imul
lods
jecxz
push
adc
mov
xchg
xlat
cli
or
jmp
sbb
in
push
test
xor
test
xor
cmp
push
adc
std
lea
out
sbb
call
dec
dec
arpl
cld
mov
jmp
rcrb
mov
push
je,pt
jg
out
pop
mov
mov
jle
adc
mov
rclb
mov
add
rcll
xor
mov
jmp
rcr
rorl
lods
mov
and
int
out
fbstp
scas
pop
add
pop
adcb
and
push
lods
imul
push
xlat
mov
lods
mov
mov
lds
jno
or
icebp
pusha
in
loop
xor
mov
lret
lds
push
rclb
inc
mov
aad
fdivs
test
sbb
in
scas
mov
fcmovbe
and
inc
ffreep
cmp
ja
push
popa
pushf
push
adc
test
in
test
jl
sub
mov
ds
dec
mov
mov
jnp
xor
adc
xor
lock
jp
add
imul
cmp
insl
mov
add
cmp
ret
icebp
adc
das
cmp
loope
lods
dec
pop
mov
sbb
ds
hlt
pushf
xchg
and
dec
mov
sub
lea
and
sbb
into
int3
jecxz
fsqrt
jecxz
pop
int
sti
xchg
mov
mov
xlat
push
xor
fldenv
push
pop
pop
pop
in
sbb
jnp
mov
inc
mov
xor
jno
test
inc
ficompl
or
sub
mov
clc
mov
les
add
push
jmp
push
dec
xlat
xor
xchg
jmp
adc
jle
clc
das
mov
mov
add
insb
ja
jp
cmp
movsb
int3
push
mov
les
fdivs
jns
push
inc
xchg
add
test
fucomp
aad
aad
or
ljmp
faddl
cmp
dec
mov
xor
add
lds
or
loope
orl
sub
jns
mov
movsb
iret
dec
pop
out
sbb
push
and
mov
push
and
cli
out
outsb
jns
xor
insb
shll
sub
or
and
popf
filds
inc
out
stc
mov
imul
xlat
or
mov
cltd
dec
outsb
imul
fists
sahf
add
sar
xor
push
mov
mov
ret
xchg
out
popa
push
out
xchg
push
cmc
push
or
add
fdivrs
popa
iret
pop
dec
in
jne
push
dec
cmp
rcll
mov
ljmp
test
sbb
loopne
xchg
icebp
add
pminsw
cmp
mov
cs
cld
jg
repnz
ja
jbe
jecxz
dec
repnz
ss
lds
fisttps
jl
lret
sahf
scas
add
cwtl
mov
xchg
sub
adc
or
pop
outsb
rcl
xchg
push
mov
test
test
test
imul
adc
adc
add
icebp
int
mov
insb
cs
and
add
xor
add
es
push
pop
adc
fstps
dec
hlt
mov
jp
mov
xchg
adc
push
stos
mov
push
fwait
call
xchg
icebp
mov
dec
xchg
mulb
cwtl
cs
push
push
test
or
test
cmp
je
pop
or
mov
aad
jg
pop
mov
gs
movsb
cmp
lock
out
push
test
ret
xor
cli
scas
clc
pop
push
xor
pushf
lods
mov
push
cwtl
das
into
movsb
cmc
roll
sti
xor
jecxz
sbb
inc
inc
lret
out
fldcw
or
ds
jg
xor
pop
pop
cmp
fcoml
push
ljmp
xchg
mov
movsb
dec
and
ljmp
aaa
jge
sub
bound
mov
cmpsl
mov
sub
push
loop
adcb
mov
sbb
decb
xor
and
push
scas
icebp
andl
clc
jb
push
add
push
out
pusha
mov
cmp
aas
jae
push
mov
clc
pop
push
and
jp
es
nop
loopne
aaa
push
cltd
inc
adc
add
push
insl
gs
in
jo
into
sub
into
add
dec
aam
lea
repnz
inc
xor
xlat
test
push
rcrl
and
push
sub
inc
mov
shrb
outsb
mov
movsl
sti
mov
add
rcll
lods
leave
fldenv
imulb
push
dec
cmp
fwait
xchg
in
std
cmp
add
add
fbstp
divl
int
pop
cmc
jb
add
pushf
and
mov
hlt
jp
inc
push
jecxz
dec
mov
jp
insl
mov
outsl
sbb
in
pop
mov
or
repnz
jns
cmp
aad
imul
int3
jne
mov
dec
inc
dec
pop
xchg
lock
sub
mov
pop
sub
int
xchg
mov
rorb
cmpsl
out
enter
test
xchg
adc
sbb
sbb
and
dec
jg
push
loop
stc
inc
imul
dec
test
xor
fcmovb
imul
gs
and
push
and
pop
cmp
insl
xchg
insb
mov
push
outsb
mov
pop
in
inc
mov
mov
add
or
xor
imul
mov
pop
cltd
adc
pop
xchg
lret
and
cmpsb
ja
shll
mov
and
subb
adc
aad
js
fcmove
adc
inc
sahf
xlat
or
mov
mov
push
stos
data16
mov
xchg
or
mov
fwait
cmp
cmp
push
imul
call
cwtl
arpl
jae
fiadds
stos
addr16
jae
cli
movsl
mov
pushf
ja
adc
ds
jg
pextrw
xchg
mov
pop
adc
inc
jp
in
lock
xlat
ja
mov
pop
pop
fnstenv
and
gs
xchg
outsb
das
sbb
jo
jne
push
inc
inc
push
mov
adc
pop
lahf
popf
or
and
fistps
clc
jle
xor
xchg
flds
sub
pop
fdivs
cmpsb
out
fcoml
lcall
repnz
sbb
ret
sti
add
add
ljmp
mov
or
das
arpl
push
pop
add
stos
xchg
mov
and
mov
sbb
pushf
ds
mov
add
jle
push
push
test
adc
cmp
clc
repz
mov
or
iret
push
orl
mov
xchg
jnp
loope
shr
iret
pusha
push
push
xchg
mov
fisttps
lret
jle
in
mov
and
mov
imul
popf
push
mov
xchg
inc
and
xor
fldcw
push
unpckhps
jmp
cltd
or
adc
mov
jmp
sbb
insb
int
xor
jns
rol
sbb
xchg
push
xor
pop
sbb
les
shl
and
xchg
int
pop
rol
mov
jmp
adc
mov
cld
dec
push
push
iret
add
cli
imul
cwtl
sti
jae
cmc
fs
cmp
jle
dec
cmpl
sbb
xor
in
adc
clc
jg
mov
xor
jge
bound
mov
xchg
inc
popa
lahf
lods
mov
sbb
std
movsl
arpl
add
jae
mov
add
push
or
push
add
lret
loopne,pn
push
lods
jno
aad
int
cmpsb
xorl
mov
iret
xchg
ss
and
sbbb
repnz
xchg
and
add
es
jle
clc
sbb
mov
neg
dec
shr
adc
pop
and
mov
fld
add
push
icebp
sub
jle
rorb
dec
es
leave
jg
imul
xor
cmp
jnp
imul
test
pusha
leave
cmp
std
fdivl
fidivrl
int
dec
inc
adc
push
dec
int3
aaa
iret
sbb
dec
push
adc
lods
loop
pusha
inc
pop
je
inc
pop
ss
pop
jo
fxtract
mov
cmp
cmp
pop
out
fs
pop
pop
pushl
xlat
dec
clc
test
xchg
push
das
inc
fcompl
div
loopne
inc
rorl
loop
out
mov
aad
loopne
imul
jp
adc
pop
popf
add
push
xchg
int3
pusha
add
fsubrl
ljmp
addr16
mov
bound
or
lret
sbb
xor
and
scas
test
and
push
sbb
or
popa
in
in
mov
ficompl
cmp
cmp
mov
mov
inc
sbb
and
inc
xchg
jae
sub
push
inc
push
jae
aad
rolb
ds
or
mov
or
rcr
or
les
cmpsl
insl
sbb
adc
dec
popl
push
jno
mov
in
insl
xorl
leave
ficoml
sub
into
ret
fs
dec
int3
mov
jmp
pop
and
mov
mov
jne
sbb
and
mov
push
jne
mov
push
inc
mov
fildl
lahf
mov
jge
mov
negb
xor
cwtl
sub
cmp
out
push
movsl
push
mov
mov
cmp
enter
push
push
xor
or
stc
xchg
fcmovb
mov
push
ret
mov
xlat
popa
fs
jmp
mov
xchg
mov
fcom
iret
insl
mov
orb
mov
in
popa
jb
cwtl
out
jecxz
fcos
cmp
cli
mov
ret
sub
stos
cmp
mov
fcoms
jg
mov
xor
lods
repz
in
mov
rorb
jmp
shll
pop
sub
jg
test
stos
ret
daa
mov
dec
xchg
add
jb
out
mov
pop
rolb
jae
mov
sub
in
adc
cmp
scas
cmp
testl
push
push
arpl
xor
fisttps
push
mov
mov
jno
sub
outsb
adc
int3
shrl
call
mov
or
lea
jbe
cmc
cmp
subb
addr16
mov
mov
cmp
fistpll
pop
add
lret
pusha
or
cmpsl
push
add
xchg
jo
mov
jge
xor
out
sub
add
gs
push
jecxz
inc
push
cmp
pop
and
mov
stc
xor
mov
aas
imul
mov
repz
adc
cmp
mov
sahf
inc
lret
into
bound
insb
xor
popa
out
inc
xchg
fwait
and
jns
dec
insl
out
push
in
pusha
lret
pop
data16
add
fisubs
mov
pop
xchg
nop
inc
jno
add
lods
stos
cs
pop
icebp
js
sub
xorl
jns
es
pushf
sub
sub
cmp
xor
dec
add
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
add
add
push
add
add
add
addb
add
add
add
add
add
add
adc
pop
add
add
add
add
add
orb
add
clc
add
orb
add
dec
add
cmpb
add
add
cwtl
add
addb
add
call
add
add
add
addb
add
pusha
add
addb
add
mov
add
fadds
add
add
add
add
add
add
add
add
add
or
add
add
add
loopne
add
add
add
add
add
add
add
or
add
add
add
add
loopne
add
in
add
add
add
add
add
or
add
add
add
add
mov
add
add
add
add
add
or
add
add
add
jmp
add
in
add
add
add
add
add
or
add
add
jo
add
push
add
add
add
add
add
add
add
or
add
jmp
add
in
add
add
add
add
add
or
add
jmp
add
add
add
add
add
add
add
add
or
add
add
add
in
add
push
add
add
add
add
add
add
add
or
add
add
add
add
xor
add
in
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
or
add
add
mov
add
sub
add
in
add
add
add
add
add
or
add
add
mov
add
add
add
add
add
add
add
or
add
testl
add
add
add
add
add
add
or
add
add
add
add
mov
add
in
add
add
add
add
add
or
add
add
add
sti
add
addb
add
add
add
add
add
add
or
add
add
add
add
add
add
add
jp
add
add
cmpsb
movsl
add
add
add
add
add
add
add
push
add
pop
and
add
add
add
add
add
jbe
add
xchg
add
cwtl
and
add
movsb
add
shlb
add
inc
insb
insb
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
outsb
push
arpl
in
and
add
and
add
and
add
and
add
add
add
add
add
fsubl
add
mov
add
add
jb
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
mov
call
inc
sbb
push
and
imul
outsl
insl
jo
arpl
add
or
dec
add
xor
pop
or
in
jb
jne
cmp
or
dec
xchg
rolb
icebp
pop
or
clc
repnz
push
add
xorps
cli
inc
out
inc
aam
cmp
mov
loopne
dec
jecxz
call
add
sbb
ss
pop
in
hlt
jne
in
jge
int3
es
mov
je
mov
pop
jno
rep
in
dec
or
push
sub
enter
jge
mov
shl
or
inc
outsl
dec
mov
sbb
orb
xchg
or
xchg
int3
pop
hlt
iret
data16
and
and
roll
inc
stos
add
pop
sub
fwait
int
adc
popf
or
loopne
incl
js
or
setg
dec
out
or
scas
icebp
cmp
cmp
jg
icebp
cmp
mov
icebp
xor
xchg
push
hlt
and
dec
aam
mov
call
inc
add
imul
add
pop
lea
dec
cmp
repz
ds
sub
call
or
push
sub
shll
nop
pop
push
jne
and
or
pop
outsb
mov
and
movsb
cmpsb
pop
or
sbb
out
repz
or
js
pop
scas
mov
rolb
addps
sub
mov
jbe
xor
mov
push
add
add
cli
mov
or
incl
jmp
popa
andb
pop
xchg
and
bound
adc
je
cwtl
lock
cmpsl
outsb
or
or
lahf
test
adcl
add
mov
or
cmp
cltd
or
insl
std
add
je
sahf
adc
push
imul
rol
ljmp
or
adc
outsb
lods
and
inc
inc
jns
fldl
push
cltd
dec
fmull
pop
cwtl
and
sbb
adc
jge
dec
xchg
jmp
pop
movl
add
lea
or
pop
daa
push
mov
test
cmp
push
mov
clc
adcl
es
cmpsb
sub
cmpsb
mov
mov
jae
mov
sbb
bound
inc
pop
sub
mov
add
xor
in
mov
lea
push
clc
test
adc
push
jmp
mov
pop
jmp
sbb
dec
js
pusha
fmull
test
jp
dec
jae
mov
pop
lea
mov
dec
fstp
jne
out
imul
je
add
pop
push
sbb
loope
out
mov
inc
sbb
mov
mov
loop
enter
enter
sub
adc
or
mov
or
xor
xor
jmp
mov
inc
bound
mov
or
popa
jno
or
les
sub
andb
push
pushf
bound
test
sbb
das
xor
pop
rorb
fsubs
lock
cwtl
adc
sbb
inc
inc
mov
sbb
repz
jl
movsb
cs
sar
inc
jecxz
pop
decl
push
push
nop
or
incb
mov
sbb
gs
sbb
out
insl
add
jb
js
cld
in
xchg
lock
lea
mov
adc
shlb
push
imul
or
sub
inc
dec
cli
jo
fimull
mov
shl
lret
stc
xchg
jecxz
push
adc
add
push
mov
decb
jo
mov
adc
add
call
jno
push
sub
jne
lea
mov
and
or
jge
dec
test
adc
dec
adcl
mov
adc
push
dec
data16
or
jl
add
sahf
push
and
inc
mov
es
xchg
test
lock
lret
add
mov
pop
inc
dec
addb
dec
cmp
sbb
jb
xchg
pop
adc
mov
mov
sbb
mov
stos
add
push
cltd
push
pop
divl
cmp
pop
jl
push
mov
push
mov
xchg
fstpt
enter
fs
loop
xchg
leave
fldl
fildl
push
call
cld
add
mov
lea
sbb
sbb
jo
adc
lea
test
orb
or
dec
test
push
inc
add
mov
ret
or
aam
fmull
add
and
adc
push
fisubl
insb
mov
xor
push
and
and
and
pop
mov
dec
sbb
inc
adc
out
jb
sbb
sbb
xor
lret
sbb
inc
mov
inc
xchg
sub
adc
jo
outsl
popa
add
mov
mov
rcrl
add
cmp
or
push
push
push
mov
in
dec
xorb
or
rcrb
fisubrs
sbbb
mov
lods
stos
and
nop
cmpl
add
jae
test
fmull
mov
mov
rep
out
iret
and
cmp
das
sbb
push
arpl
lcall
test
call
add
dec
sub
xor
and
and
xchg
mov
test
or
faddp
jb
sbb
fwait
xchg
shrl
pop
or
add
test
je
nop
cld
les
inc
push
sbb
jnp
mov
lea
mov
cmp
sub
jl
adc
loope
mov
test
xor
push
aas
pop
inc
mov
sbb
addr16
addr16
aas
rcr
push
rclb
test
dec
inc
xor
jmp
mov
adc
and
insl
dec
inc
jo
add
test
ret
push
lcall
cmp
or
aaa
test
mov
cltd
cmpsb
cmp
and
add
add
ret
mov
les
mov
or
aas
pop
loopne
push
add
push
and
xchg
test
jo
jle
ret
ror
sti
popa
push
add
push
jne
ret
dec
push
incb
stos
pop
add
jmp
popa
and
scas
outsb
leave
push
adc
outsl
int3
pushf
inc
sbbb
pop
ret
je
dec
ja
and
push
add
in
sub
clc
push
clc
lods
cmp
xchg
bound
pop
enter
pop
cmp
in
or
push
sbb
adc
add
add
mov
cmpl
sti
or
dec
jne
popa
jp
add
jno
repnz
jmp
jbe
jae
rcrl
adc
add
orb
push
hlt
and
nop
lods
add
dec
call
or
rcrb
or
xor
pop
mov
movzwl
test
jge
lret
xchg
insb
push
xor
adc
testb
ret
loopne
rolb
or
sub
pop
dec
je
dec
mov
xor
sub
ret
and
or
rclb
xchg
inc
push
push
add
cmc
int3
inc
jmp
enter
mov
cmp
sub
sub
pop
or
js
shlb
aam
cmp
ret
in
add
jbe
push
loopne
cmpsl
incb
dec
add
push
aad
imul
pop
std
sti
ljmp
inc
mov
je
loopne
popa
push
jge
sub
daa
clc
rcll
add
movsl
mov
ds
call
add
xor
movsb
push
fcmovbe
xchg
stos
lret
pop
sub
cmp
inc
ret
jne
mov
dec
pushf
mov
push
lock
push
dec
push
xchg
fsubl
sub
lea
outsb
inc
dec
sub
loope
dec
mov
pop
xchg
and
jl
dec
add
mov
sub
push
dec
lahf
or
and
push
push
testb
in
pop
rclb
inc
je
mov
inc
jne
adc
adc
fildl
mov
lret
sbb
nop
cli
cmp
jne
push
stc
jmp
fidivrl
inc
icebp
movl
sub
pushf
dec
mov
fiaddl
stos
inc
or
push
nop
dec
add
mov
cmp
ljmp
lahf
inc
inc
rcll
ljmp
jmp
jnp
push
push
push
adc
pop
dec
ja
test
dec
lea
adc
lds
in
gs
sbb
inc
or
adcl
scas
sbb
inc
inc
mov
into
jae
rolb
test
loope
dec
int
mov
cmp
ror
and
adc
shl
add
in
test
repnz
push
outsb
mov
inc
push
dec
jg
pushf
and
and
sub
add
out
push
inc
pop
dec
xchg
pop
xor
push
dec
mov
push
inc
mov
pushf
stos
pop
test
scas
repz
xor
icebp
mov
call
and
or
or
lds
imul
sbb
lret
adc
cmp
orb
jl
prefetchnta
shr
pusha
loope
push
lret
jbe
insb
push
cmp
sti
push
add
testb
mov
inc
push
xchg
lcall
or
pop
inc
cmpsl
sub
movsb
idivl
jo
insb
push
imul
and
jecxz
lahf
or
jae
and
jne
in
rclb
icebp
popf
cmp
lahf
fs
arpl
insb
repnz
in
je
bound
ss
fs
inc
jno
rolb
cltd
andb
insb
and
xchg
xor
sub
xchg
int
movsl
out
lds
pop
fwait
xor
pop
dec
outsl
push
dec
popa
addr16
inc
outsl
js
shll
js
data16
cmp
int
cmpl
push
dec
movsb
mov
push
fs
mov
push
sbb
inc
sahf
je
test
push
insb
sbb
jl
imul
orl
lcall
mov
insl
cmp
xchg
or
and
cmp
cmpsb
xor
jno
pushf
or
pop
fildl
add
je
and
jl
sub
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
add
add
add
add
jp
add
test
add
lods
and
add
add
adc
and
add
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
add
add
or
add
xor
add
xor
add
add
inc
xor
add
sub
scas
mov
shll
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
aam
movb
fstps
fwait
cmp
pusha
jmp
adc
jmp
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
jmp
inc
je
adc
loopne
and
push
clc
shll
aaa
movsb
or
adc
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
mov
jmp
in
and
pushf
movsl
jp
mov
inc
pop
jmp
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
jmp
jmp
add
addl
jle
sub
mov
out
sti
jmp
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
ljmp
mov
lea
nop
jmp
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
shr
sbb
cli
jmp
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
addr16
mov
cmpb
jne
jnp
icebp
jmp
push
inc
sub
scas
dec
fsub
mov
popa
xchg
popf
adc
loopne
pop
aas
or
out
push
push
clc
shll
aaa
movsb
or
jmp
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
in
mov
cmp
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
test
pushf
push
call
mov
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
mull
xchg
ror
into
out
cld
test
or
add
sub
addl
jle
sub
mov
sbb
xlat
les
jmp
iret
pop
gs
dec
loope
hlt
sbb
fidivrs
jmp
ljmp
lea
nop
mov
lret
test
cmpsw
push
jmp
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
add
add
sbb
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
or
das
fstl
and
sahf
jg
xchg
stos
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
addr16
mov
cmpb
jnp
icebp
mov
pushfw
push
call
inc
sub
scas
dec
fcompl
mov
add
add
add
add
add
add
xorb
xorl
xorl
pop
popfw
jmp
jmp
je
adc
loopne
pop
jmp
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
mov
pop
add
and
outsb
setl
jmp
inc
pop
xor
shlb
push
dec
adc
div
fs
xchg
ror
into
out
cld
test
or
add
cmp
jle
sub
mov
sbb
xlat
les
sub
jmp
iret
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
jmp
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
pop
data16
pushfw
push
call
imul
add
add
pop
add
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
cli
stos
or
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
xchg
stos
fwait
cmp
jbe
in
add
push
dec
jmp
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
jmp
scas
dec
fsub
mov
inc
je
adc
mov
pushfw
push
call
aas
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
sbb
inc
out
aam
jb
inc
jmp
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
loopne
sub
pop
push
dec
adc
jmp
div
fs
xchg
ror
into
out
cld
test
or
add
das
cmpsb
out
cmp
jle
sub
jmp
mov
sbb
xlat
jmp
lods
loop
xor
cmp
dec
loope
hlt
sbb
fidivrs
ljmp
lea
nop
mov
lret
test
add
jmp
stc
ds
in
mov
xor
fdivs
push
xchg
test
xor
imul
stos
or
push
and
fstps
xchg
stos
jmp
fwait
cmp
jbe
in
add
push
dec
jmp
dec
outsl
jmp
jl
pop
mov
es
mov
cmpb
jnp
jmp
icebp
push
inc
sub
scas
dec
fsub
mov
pushfw
push
call
je
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
or
push
clc
jmp
shll
aaa
movsb
or
push
das
jmp
jmp
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
jecxz
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
daa
sbb
int
xchg
jmp
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
jmp
les
xor
cmp
dec
jmp
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
xor
jmp
stc
ds
in
mov
xor
fdivs
push
xchg
test
xor
imul
stos
or
push
and
fstps
fsubrl
ja
jmp
dec
add
push
dec
jmp
jmp
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
popa
xchg
cs
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
jmp
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
push
call
mov
pop
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
pop
push
dec
adc
mov
int
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
jmp
sbb
xlat
les
cs
pop
lods
pushfw
push
call
dec
loope
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
mov
js
jmp
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
jmp
mov
jmp
mov
test
xor
imul
sub
and
movb
fstps
fwait
cmp
jbe
in
in
add
push
dec
dec
outsl
jl
pop
mov
es
push
pushfw
push
call
cmpb
add
insb
ja
add
add
add
xorb
xorl
xorl
pop
popfw
jmp
jmp
jnp
icebp
push
inc
sub
mov
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
jmp
aaa
movsb
jmp
or
push
das
cmp
sbb
icebp
sub
daa
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
movsbl
jmp
sbb
int
xor
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
xor
sub
cmp
dec
loope
jmp
hlt
sbb
fidivrs
js
jmp
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
jmp
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
jmp
mov
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jne
sub
jnp
icebp
push
inc
sub
icebp
sub
in
imul
xchg
popf
adc
loopne
pop
aas
or
push
clc
shr
out
aaa
movsb
jmp
or
push
das
cmp
sbb
icebp
sub
daa
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
test
pushf
push
call
pop
xor
shlb
mov
add
add
mov
add
add
add
add
decl
call
mov
add
add
add
fwait
pop
popfw
jmp
jmp
xchg
jmp
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
loope
mov
sbb
jmp
xlat
les
cs
pop
gs
cmp
jmp
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
jmp
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
repnz
push
call
fdivs
push
xchg
test
xor
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
movb
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jne
jnp
sub
sub
jmp
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
das
pop
clc
shll
aaa
movsb
jmp
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
jmp
pushfw
push
call
jp
mov
inc
pop
xor
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
sbb
int
cmp
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
cs
iret
pop
gs
dec
jmp
loope
hlt
sbb
fidivrs
jmp
ljmp
lea
nop
mov
inc
lcall
jmp
std
repnz
sar
lahf
in
mov
mov
test
xor
jmp
sbb
cli
stos
or
push
and
fstps
das
ja
dec
add
push
dec
jmp
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
jmp
popa
xchg
popf
adc
loopne
pop
aas
or
lock
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
jne
jmp
pop
add
jmp
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
mov
mull
xchg
ror
into
out
cld
test
or
add
in
cmpsb
out
cmp
jle
sub
jmp
mov
sbb
xlat
les
cs
pop
jmp
gs
dec
loope
hlt
sbb
fidivrs
js
mov
pop
pushfw
push
call
inc
push
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
std
repnz
sar
cmp
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
aad
jbe
in
add
push
jmp
dec
dec
outsl
jl
pop
jmp
mov
jmp
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
faddl
jmp
jecxz
cltd
pop
aas
or
jmp
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
pop
and
sub
outsb
por
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
cmpsb
out
cmp
add
jle
sub
mov
repz
sbb
xlat
les
xor
cmp
dec
loope
jmp
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
add
pushfw
push
call
inc
sar
lahf
in
mov
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
xor
imul
and
movb
fstps
fwait
cmp
jbe
in
add
push
dec
dec
jmp
outsl
jl
jmp
pop
mov
es
mov
repz
add
jne
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
jmp
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
mov
pushfw
push
call
or
das
cmp
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
dec
sub
daa
aam
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
jns
pop
insb
xor
pop
mov
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
adcb
test
or
add
addl
add
pushfw
push
call
sub
mov
sbb
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
test
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
aad
xor
cmpsw
push
std
repnz
sar
lahf
in
mov
out
jmp
dec
mov
test
xor
imul
stos
or
push
and
fstps
xchg
stos
fwait
cmp
jbe
in
add
push
dec
dec
outsl
mov
jmp
mov
pop
lods
jne
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
jmp
clc
shll
jmp
jmp
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
outsb
por
pushf
movsl
jp
mov
inc
pop
xor
shr
icebp
mov
das
dec
adc
div
fs
xchg
ror
into
out
cld
test
jmp
cmpsb
out
cmp
jle
sub
mov
sbb
xlat
les
add
push
call
cs
pop
gs
dec
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
push
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
jmp
test
xor
clc
lock
and
movb
fstps
fwait
cmp
jbe
in
add
push
dec
dec
jmp
outsl
jl
jmp
pop
mov
es
mov
repz
jne
jnp
jmp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
jmp
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
pop
insb
xor
pop
mov
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
jmp
fs
xchg
ror
into
out
cld
test
or
jmp
add
divl
sub
add
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
pusha
sbb
jmp
mov
js
mov
jmp
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
mov
jmp
push
and
fstps
jmp
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jne
daa
or
icebp
push
inc
sub
icebp
sub
in
imul
xchg
popf
adc
loopne
pop
aas
or
push
clc
jmp
shll
aaa
jmp
movsb
or
push
das
cmp
sbb
inc
jmp
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
push
call
setl
mov
add
add
mov
add
add
add
xorb
xorl
xorl
pop
popfw
jmp
jmp
pop
jmp
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
jmp
jmp
mov
sbb
xlat
les
cs
pop
gs
dec
loope
call
xchg
arpl
fidivrs
js
mov
and
inc
push
nop
mov
pushf
push
call
inc
lcall
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
stc
ds
in
mov
mov
push
xchg
test
xor
imul
stos
or
push
and
fstps
jmp
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
mov
jmp
addr16
mov
jmp
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
xlat
push
push
clc
shll
aaa
movsb
jmp
or
jmp
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
push
jmp
movsl
jp
mov
jmp
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
sub
add
jle
sub
mov
sbb
xlat
les
cs
movl
jmp
xchg
jmp
arpl
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
aad
mov
push
xchg
test
xor
imul
jmp
and
movb
fstps
fwait
cmp
jbe
in
jmp
add
push
dec
dec
outsl
jmp
jl
pop
mov
es
mov
jmp
cmpb
jnp
icebp
push
inc
sub
add
add
dec
fsub
jmp
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jmp
jb
inc
jns
pop
insb
xor
xchg
pop
add
movl
jmp
sub
xor
pop
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
jmp
jmp
or
add
addl
jle
jmp
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
faddp
inc
adc
add
shr
js
mov
inc
mov
lea
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
and
jmp
movb
fstps
fwait
cmp
jmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
mov
jmp
popa
xchg
popf
adc
jmp
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
jmp
inc
jmp
jns
pop
insb
xor
xchg
pop
jmp
add
and
outsb
setl
inc
pop
xor
shlb
int3
adc
in
div
fs
xchg
ror
into
out
cld
test
or
add
pushfw
push
call
add
jle
sub
mov
sbb
mov
add
add
lds
add
add
add
add
decl
call
mov
add
add
add
lds
popf
jmp
jmp
iret
pop
gs
dec
loope
cmp
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
jmp
repnz
sar
lahf
in
mov
mov
sub
test
stc
mov
sbb
jmp
cli
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
jmp
outsl
jl
pop
mov
es
addr16
mov
cmpb
jne
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
inc
or
sub
das
cmp
sbb
inc
jmp
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
jmp
inc
jmp
pop
xor
shlb
int3
adc
mov
int
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
push
call
xlat
les
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
hlt
sbb
pusha
sbb
mov
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
push
xchg
test
daa
insl
mov
sbb
hlt
and
movb
fstps
fwait
cmp
jbe
jmp
in
add
jmp
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
es
add
pushfw
push
call
dec
fsub
mov
add
push
add
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
xchg
popf
adc
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
movsb
or
push
jmp
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jmp
jp
jmp
mov
inc
pop
xor
shlb
int3
jmp
jmp
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jmp
jle
sub
mov
sbb
xlat
les
sub
pushfw
push
call
pop
cmp
mov
add
add
movsl
mov
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
loope
hlt
sbb
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
mov
js
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
and
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
push
nop
mov
mov
add
add
add
add
add
add
xorb
xorl
xorl
pop
popfw
jmp
jmp
ds
in
mov
jmp
mov
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
fdivs
xor
dec
add
push
dec
dec
outsl
jl
pop
mov
out
andl
jmp
add
jne
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
popa
xchg
popf
adc
jmp
loopne
pop
aas
or
push
jmp
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
jmp
pop
add
and
outsb
setl
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
call
cmp
jle
sub
mov
popa
jmp
