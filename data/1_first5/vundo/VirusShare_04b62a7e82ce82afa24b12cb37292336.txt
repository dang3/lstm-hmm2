jl
add
fcoms
add
imul
add
lds
add
jl
add
add
add
aaa
lcall
js
add
bound
add
add
pop
lcall
jno
add
sbb
add
sub
add
add
add
add
add
outsb
add
xchg
add
das
add
jl
add
lret
cltd
add
jl
add
jl
add
jl
add
cs
gs
jne
je
add
add
add
js
add
bound
add
add
push
sub
add
add
sbb
pushf
add
jl
add
jl
add
jl
add
inc
outsl
add
jl
add
xchg
lahf
add
xchg
add
lahf
add
jl
add
adc
add
mov
sub
add
outsl
add
je
jb
outsl
add
add
popa
add
add
add
add
imul
add
jo
add
inc
add
jb
jae
outsl
add
inc
add
add
imul
add
je
add
add
add
add
and
dec
add
ja
and
push
add
insl
add
outsb
add
add
add
outsl
add
popa
add
add
add
push
add
add
popa
add
jae
and
push
add
jb
imul
inc
add
imul
add
add
nop
hlt
inc
adc
adc
fisubrs
pop
out
rclb
cwtl
mov
pusha
add
push
mov
call
pop
pop
ret
dec
add
add
dec
jbe
je
insl
jnp
mov
incl
add
adc
add
or
add
add
sldt
add
imul
push
add
fwait
roll
add
scas
sti
add
add
sti
xchg
add
add
add
add
clc
add
mov
aad
inc
pop
pop
ja
int3
ja
dec
and
push
ja
mov
pop
out
add
add
addl
je
fisttpl
xor
or
or
cmp
mov
adc
lea
jecxz
mov
jmp
test
push
pop
cmpl
inc
mov
xchg
pop
fstpt
ret
inc
mov
add
push
incb
lea
data16
inc
lea
adc
loopne
add
add
adc
test
jne
add
inc
lock
add
call
adc
add
repz
lahf
adc
jne
lret
push
call
clc
shrb
mov
add
jne
inc
or
add
jmp
pushl
add
sbb
insb
add
dec
pop
add
add
add
stos
loope
pusha
add
fldt
or
jns
inc
outsb
jp
inc
jne
adc
pop
je
jo
cmpb
icebp
inc
je
inc
sahf
dec
insb
mov
mov
imul
cs
sahf
jb
insb
jmp
jne
push
jb
xor
gs
js
jns
add
add
jnp
add
add
stos
incl
add
add
scas
add
add
or
add
add
sldt
add
imul
add
add
add
lahf
add
add
sti
dec
add
sub
cmc
and
stos
and
daa
push
sarb
mov
mov
idivb
outsl
xchg
sti
ds
test
mov
pop
sbbl
xor
mov
and
inc
or
xor
or
adc
push
fcoms
and
xor
je
inc
sub
xchg
into
sbb
jo
push
push
sbb
push
dec
or
and
jns
out
outsl
and
xlat
fmull
sbb
pop
mov
sub
mov
scas
push
in
sbb
int3
lods
xor
cmp
scas
mov
dec
out
jo
aam
push
sar
mov
pop
fwait
in
mull
add
adc
inc
aas
add
cmp
bound
pop
xchg
mov
pop
outsl
and
mov
add
insl
fsubl
pop
push
jmp
xor
fldcw
jge
pop
scas
xchg
xchg
adc
dec
xor
sbb
mov
in
nop
cmp
clc
loop
fldcw
insl
dec
mov
test
jmp
mov
pop
dec
repz
mov
dec
mov
fcoml
lret
aam
mov
xor
inc
push
repnz
lret
aad
and
adc
pop
inc
or
shl
xchg
loop
mov
and
dec
fstps
xchg
in
dec
push
add
sub
xor
sbb
cmp
mov
lret
into
out
cmpsl
in
or
ficoms
xchg
incl
imul
mov
gs
mov
add
out
mov
dec
pop
sbb
and
inc
out
mov
inc
pushw
push
pop
ds
idiv
xor
jmp
sti
jg
dec
adc
adc
shl
mov
shl
loopne
loope
cmp
dec
xchg
in
cmp
movsl
or
ljmp
xchg
imul
arpl
iret
gs
sbb
mov
int3
nop
and
test
inc
popa
push
out
icebp
mov
ja
ror
jmp
dec
push
sbb
xchg
inc
fs
dec
out
lock
xchg
xchg
xchg
cmp
sub
push
repz
xchg
jnp
aaa
stos
scas
out
cmp
mov
shlb
sbb
cld
and
mov
and
add
ds
inc
add
test
sub
shll
mov
xor
lcall
mov
jno
scas
push
stc
or
scas
in
pop
lock
pop
push
jbe
out
jmp
inc
mov
loop
sbb
in
mov
add
lds
and
xorl
and
xor
mov
lea
repz
insb
test
ret
addb
mov
orl
aam
lods
add
cld
stc
loop
stos
or
push
xchg
in
imul
mov
pop
rcll
shlb
enter
or
fcmovne
add
data16
push
pmaddwd
mov
mov
or
pushf
repnz
sbb
sub
mov
xchg
shrd
out
leave
and
lock
sbb
jne
enter
data16
dec
push
stos
into
jecxz
fidivrl
inc
pop
push
stc
add
push
lahf
dec
add
adc
push
in
pop
add
scas
or
inc
mov
cwtl
mov
ret
pop
xlat
add
cli
orl
lds
adc
cmp
mov
adc
sub
sub
adc
or
pop
sub
aaa
test
pop
pop
push
add
sbb
inc
sub
cli
stos
jl
leave
dec
ret
jecxz
jns
sbb
pop
add
xchg
scas
and
out
fldl
fwait
cmp
mov
mov
fistpl
and
sarb
mov
fidivrl
stos
and
cltd
pop
out
xchg
xor
inc
sbb
xchg
sarb
sbb
int3
push
mov
or
cmc
mulb
inc
sub
ficompl
add
sub
jge
cmp
dec
mov
jecxz
ret
jo
popf
jge
dec
ret
add
daa
inc
inc
or
dec
jl
ret
mov
xchg
fsqrt
xchg
push
pop
pop
mov
call
outsb
pop
pop
xchg
ret
aam
push
fucomip
adc
or
adc
sbb
sbb
out
sbbl
jge
in
push
push
ljmp
add
xchg
movsl
adc
iret
enter
push
jmp
push
and
mov
dec
dec
shlb
and
jp
jmp
icebp
mov
xchg
aaa
or
add
mov
dec
mov
and
out
into
cmp
lcall
sub
outsb
sbb
or
js
sbb
jo
cmpsb
adc
icebp
xor
outsl
mov
mov
mov
scas
xchg
or
cmp
daa
test
xlat
je
cmpsl
pop
or
pop
cmp
add
lret
dec
ljmp
cmp
jb
mul
mov
cmp
out
fwait
push
insl
xor
sbb
adc
jmp
mov
mov
add
andb
daa
sub
push
cmp
or
aas
aad
adc
popa
sbb
js
xchg
cmp
bound
cmpsb
xchg
adc
sub
mov
push
loope
fsts
scas
lret
jno
pop
mov
sub
inc
mov
mov
call
pop
rcll
jg
fneni(8087
adc
pop
push
inc
xchg
pop
inc
leave
mov
fimull
or
sub
test
and
xchg
rclb
adc
cmpsb
lock
sbb
push
sahf
cmp
mov
loopne
sbb
stc
cmpsb
mov
inc
mov
pushf
sub
mov
pop
inc
xlat
adc
pusha
mov
leave
adc
test
sbb
mov
xchg
ljmp
and
negl
xchg
pushf
dec
mov
stc
ljmp
fwait
cmc
jg
sbb
push
gs
lods
mov
push
or
pop
repnz
jae
andl
pop
mov
mov
inc
cmp
fnstcw
insl
lea
xor
push
inc
mov
in
fists
mov
std
pop
mov
popf
push
bound
call
mov
dec
icebp
mov
shl
inc
nop
or
loope
out
movb
sti
inc
dec
mov
xor
repz
in
jecxz
cli
sub
in
loope
jge
out
xchg
mov
sub
popf
xchg
mov
mov
dec
push
prefetch
or
enter
sbb
int3
daa
jns
scas
test
addr16
lock
aaa
inc
jb
scas
shrb
jle
add
sbb
push
add
shlb
bsr
jecxz
fsubrs
sbb
inc
xor
sub
ja
mov
xchg
add
inc
fcoms
nop
lock
add
ret
imul
in
ljmp
mov
mov
jle
dec
xlat
seta
jecxz
out
push
inc
fstpl
test
push
test
cld
dec
mov
fimull
movsb
mov
cli
out
ret
imull
inc
push
popa
jae
std
pusha
imul
imul
add
pop
dec
dec
shr
xchg
mov
push
rcrl
mov
sub
or
mov
movsl
loop
icebp
push
imul
aas
xchg
sbb
lret
sub
mov
std
dec
shl
cmp
and
lds
dec
fwait
loopne
pop
inc
and
std
lods
and
lcall
xorl
lcall
sub
cmpsl
xor
jne
adcl
aad
xchg
fidivrs
dec
stos
sbb
int3
jmp
nop
ljmp
and
sarl
scas
cwtl
mov
sub
push
push
mov
cwtl
mov
mov
leave
pandn
or
sub
cmpsl
push
hlt
lea
xchg
cs
mov
sub
adc
stc
mov
push
clc
fdivl
inc
mov
xor
clc
popf
push
pop
pop
sbb
jb
fidivl
inc
ficomps
dec
out
jne
and
mov
arpl
xchg
mov
cwtl
loopne
aaa
outsl
jecxz
inc
rep
js
push
stc
into
sbb
add
or
add
dec
js
into
pop
icebp
scas
pop
inc
into
mov
popf
pop
jmp
and
aaa
daa
int3
mov
pop
jne
das
mov
push
fiaddl
loope
jb
nop
shll
fstpt
or
lods
pushf
bound
hlt
pop
jno
jmp
ss
addr16
fstpt
and
int
out
jae
pushf
js
cmp
dec
js
push
ret
decb
mov
dec
subb
xchg
mov
movl
fldt
inc
dec
scas
aaa
negl
das
pop
enter
call
je
push
cmp
aaa
fcoml
pop
insl
jmp
xor
inc
into
sub
dec
scas
cmp
and
outsb
xchg
jo
add
hlt
or
addr16
pop
jb
pushf
les
jge
cmc
mov
jo
sub
mov
int3
add
push
daa
push
xchg
mov
push
and
test
mov
ljmp
sbb
hlt
jecxz
jb
fildll
in
mov
fcompl
std
push
jns
mov
test
stos
inc
test
arpl
push
push
andl
inc
imul
push
mov
std
mov
pop
mov
push
flds
dec
mov
lret
inc
lods
and
dec
jns
cli
dec
push
in
int
popa
xchg
cmpsb
sbb
bnd
fnstenv
leave
mov
inc
lea
mov
inc
jbe
stos
dec
icebp
sub
xor
jl
jae
shl
cmp
cs
inc
sub
cmp
loopne
add
icebp
jno
clc
ss
xchg
imul
adc
sti
fisttpl
mov
bound
mov
shlb
mov
and
dec
shl
nop
add
icebp
test
and
dec
jae
mov
inc
mov
jae
pop
inc
scas
rorl
push
cmp
outsb
push
testl
push
mov
push
int
ljmp
and
xor
and
dec
pop
push
sub
xchg
test
mov
lcall
loope
popw
lret
ljmp
int3
ss
and
xor
add
adc
cmp
pop
adc
sbb
repnz
and
jmp
xor
adc
clc
mov
js
ss
lock
lds
push
sbb
inc
insb
xchg
inc
aad
xor
mov
xchg
xchg
sub
and
inc
scas
aaa
adc
mov
jl
sub
cmp
fstps
iret
push
pushf
ficompl
pusha
idivb
push
mov
enter
hlt
adc
hlt
sbb
adc
jno
enter
js
xorb
ret
movsb
inc
cmp
mov
lds
repz
lret
cmp
fildl
xor
push
bound
mov
pop
xor
jg
fsubrl
push
fimuls
push
sahf
sbb
add
xor
jns
push
data16
xchg
call
pop
mov
xor
push
sub
cmpsl
push
mov
sub
js
sub
outsb
ds
pop
cld
cs
xchg
adc
fcomps
sub
push
push
cmp
or
mov
mov
cmp
adc
pop
sub
inc
fcomip
je
dec
inc
jns
mov
xchg
sbb
xor
push
cs
mov
inc
dec
int
push
and
aas
dec
adc
sahf
fdivp
and
mov
pop
add
push
sub
movb
push
cmc
aam
xor
push
add
fisubs
cli
add
test
fwait
xchg
test
add
or
jle
rolb
ljmp
jmp
mov
push
pop
mov
sbb
and
mov
push
stos
cltd
mov
rep
mov
out
in
push
ja
cmp
rcr
mov
jae
xor
xor
sub
cmp
test
xchg
ss
jg
push
cmc
mov
mov
jmp
or
flds
mov
xlat
sub
cmp
cmp
outsl
out
addb
inc
adc
and
push
ret
sub
pop
jnp
repz
nop
ret
rolb
repnz
lret
test
jbe
adc
dec
cli
jns
mov
divb
and
lret
cmp
cmpsl
dec
pop
insb
sahf
push
mov
mov
fbstp
push
xor
stos
int
imul
lahf
lods
aam
repz
shl
xlat
stos
cmp
adc
lret
cmc
xchg
lods
xor
pop
mov
sub
int3
negl
mov
mov
test
jle
repz
ror
jne
xchg
aaa
lea
pushf
fsub
popl
mov
mov
out
mov
lds
sub
lcall
in
nop
add
add
insl
iret
add
mov
pop
mov
pop
cmpsb
sub
fisubs
iret
inc
xchg
dec
mov
and
iret
jne
mov
sbb
rol
ret
orl
push
mov
sar
push
cltd
ret
in
jo
pop
push
push
aad
mov
loopne
jle
push
push
testl
imull
sbb
inc
gs
adc
inc
stos
fisttpll
movsl
mov
loop
pop
nop
pop
xor
xor
iret
in
stc
mov
sbb
cmp
or
pop
les
mov
inc
pop
jo
mov
mov
inc
aaa
andb
bound
stc
out
test
sub
mov
pop
sub
call
xchg
clc
mov
addr16
pushf
sbb
adc
bnd
sahf
xchg
es
sub
mov
xchg
testb
lret
add
cmp
mov
jne
pop
pop
add
adc
out
pop
mov
stos
xchg
sti
sbbl
in
push
pop
xor
insb
dec
jp
push
in
into
test
mov
fs
push
xchg
mov
int
or
mov
in
push
cmp
sbb
mov
xchg
push
dec
xlat
je
sarb
rorb
sbb
sbb
xchg
data16
arpl
mov
push
negl
je
cmpsb
mov
mov
xor
pop
insb
fiadds
mov
push
cmpsl
pusha
sti
scas
sbb
and
mov
clc
ds
js
dec
or
push
mov
test
push
sbb
icebp
in
sahf
decl
mov
mov
push
and
mov
int3
int3
int3
in
xor
cmp
adc
sub
int
sbb
sub
sub
in
ror
cmp
jmp
lcall
dec
jmp
push
cmp
or
mov
jne
cwtl
sbb
loopne
sti
push
mov
jl
cmc
jne
or
pop
cld
xorb
jg
push
data16
push
or
pop
or
mov
mov
xchg
and
adc
in
jge
add
inc
jle
or
das
dec
cli
aas
stc
and
jp
inc
shrl
ret
adc
pop
dec
pop
outsb
stos
out
pop
xor
test
insl
push
and
inc
sarb
dec
cwtl
lcall
xchg
xor
in
jne
inc
xchg
pop
pushf
gs
loopne
out
adc
jmp
ss
push
jno
xchg
lods
inc
mov
and
jecxz
ret
dec
icebp
and
or
outsl
sbb
sub
jnp
inc
je
or
fisttpl
outsl
sub
lcall
sbb
jge
and
adc
dec
cli
push
push
shll
leave
call
cwtl
mov
inc
push
scas
add
pop
xor
test
dec
inc
fwait
pusha
lcall
pop
cmp
sbb
stos
imul
mov
mov
mov
fwait
pop
sbb
add
push
jns
cmp
and
xor
inc
cs
iret
mov
mov
test
xor
ret
leave
gs
es
pop
jnp
xchg
dec
jne
dec
add
or
add
mov
rcr
sbb
lahf
in
inc
lods
lods
insl
lds
xchg
punpckhdq
mov
ficomps
jbe
daa
clc
enter
repz
mov
rclb
sub
mov
mov
negl
cmp
bound
into
imul
leave
rclb
and
ret
xor
and
and
pop
daa
lods
push
sarb
int3
iret
sub
outsb
fwait
mov
sbb
aam
fisttpl
jmp
imull
mov
nop
mov
stos
push
repz
mov
xor
sbb
je
pop
or
popa
inc
xchg
mov
lahf
sub
movb
scas
push
jg
mov
jmp
fwait
pop
sbbl
mov
lcall
push
and
lret
fst
lret
lock
insl
mov
jle
shll
scas
ret
mov
cmp
clc
lea
fwait
lcall
push
push
pop
out
xchg
or
adc
scas
leave
pop
mov
and
mov
in
mov
rclb
xor
repnz
mov
mov
iret
enter
xchg
mov
mov
jbe
cmp
cmp
adc
jb
dec
xchg
cli
push
mov
repz
add
mov
mov
int
andb
addr16
or
xor
sub
push
pop
aad
mov
call
fcmovnu
mov
sbb
and
fisubl
pop
mov
outsl
das
lods
jae
aas
sar
xchg
and
xchg
mov
scas
add
mov
repz
push
js
dec
lock
push
lahf
mov
adc
or
jle
stos
push
outsb
adc
pop
loopne
pop
sub
outsb
mov
in
mov
sbb
jecxz
outsl
adc
enter
sub
inc
push
push
aad
push
push
fidivl
xlat
lret
test
dec
inc
outsl
ret
push
test
push
add
cltd
and
sahf
arpl
mov
mov
ret
xchg
mov
dec
sti
mov
aas
pop
rclb
dec
push
repnz
adc
sbb
imul
add
les
nop
lock
mov
imul
add
pusha
jae
cs
xchg
or
mov
jo
call
mov
shrl
shufps
push
fmuls
sbb
adc
das
sub
std
dec
inc
repz
jnp
dec
mov
mov
cwtl
int3
push
xorl
cli
subb
pinsrw
out
pushf
jge
and
je
adc
imul
out
cwtl
in
out
add
jl
clc
pushf
push
sti
shrb
pop
cmp
sub
jo
add
xchg
out
sbb
add
adc
cmp
stc
xor
fwait
pop
add
push
jmp
idivb
rol
lret
add
shr
xchg
xchg
xor
adc
mov
cwtl
push
repz
dec
jg
in
mov
pusha
shrb
hlt
jno
ficompl
jg
js
stos
fwait
sbb
push
and
lods
fiaddl
or
jp
mov
rclb
dec
cmp
fstpl
adc
xor
adcl
and
mov
jnp
dec
cmc
mov
mov
clc
scas
cmc
aaa
in
dec
fildll
mov
inc
movsb
mov
imul
mov
aad
or
or
sub
and
add
lds
leave
jns
jno
pop
and
incb
mov
ds
adc
inc
out
mov
mov
jns
jp
test
sti
nop
adc
enter
adc
cmpsb
pop
mov
lcall
mov
lret
test
inc
cmp
mov
stc
sbb
jbe
mov
mov
repz
test
add
mov
xchg
pop
les
sub
sbb
fsubr
imul
mov
push
out
ss
jmp
imull
inc
pop
aas
popa
lcall
xorl
scas
stc
rolb
fsubrl
cmpb
cs
shrl
dec
jns
mov
aad
adc
dec
cmp
mov
jecxz,pn
add
lahf
js
jbe
push
test
inc
mov
rcl
mov
in
add
movaps
jb
sbb
cmp
pop
dec
lret
push
fbld
cmp
loopne
std
xchg
sar
xor
cld
sti
imul
sub
cmpsl
ja
and
pop
inc
inc
push
mov
xor
push
stos
enter
pop
lea
dec
mov
std
pop
mov
mov
jne
mulb
scas
outsb
pop
popa
insb
jne
pop
cmp
and
scas
fsubs
cmp
decl
mov
pop
aad
lods
xchg
test
or
inc
xchg
mov
iret
cmp
mov
fistpl
shld
ret
inc
popf
mov
push
mov
jno
in
sub
mov
lahf
stos
lcall
nop
pusha
jg
imul
dec
xor
pop
clc
icebp
mov
enter
fwait
lret
pusha
inc
push
lods
push
xchg
mov
add
je
sub
dec
push
or
jb
mov
orl
mov
pop
or
popa
mov
ljmp
inc
mov
or
data16
push
push
aaa
or
test
mov
cmp
test
leave
lock
sti
pop
leave
dec
push
and
aas
mov
cmp
lock
dec
inc
sub
xchg
imul
xchg
mov
jbe
int3
fwait
pushl
sti
lret
gs
or
jo
mov
lods
ret
flds
fcoml
arpl
into
js
cltd
cmp
add
push
push
inc
cmp
jmp
sbb
testb
mov
inc
mov
js
push
jle
in
push
pop
cmpsb
mov
aaa
std
add
es
jle
jo
mov
in
dec
gs
and
mov
addl
mov
hlt
jnp
nop
push
cmpsl
inc
out
imul
mov
gs
inc
loop
ficomps
pop
mov
outsb
pop
out
adc
sar
xchg
push
sbb
pop
inc
rorl
movsl
int
or
jp
fsubl
adc
sbb
and
or
hlt
in
jl
repz
test
cmp
cmc
or
push
push
mov
add
add
xor
inc
mov
es
pop
out
and
and
inc
in
mov
sub
stos
mov
iret
lret
sbb
movsb
xchg
sahf
lock
lods
dec
inc
sarb
in
stc
movsl
movb
jne
sbbb
push
divb
repz
sub
rolb
daa
add
insl
inc
xchg
jo
pusha
imul
stos
divl
dec
into
sahf
rep
cltd
or
ret
sbb
add
cmc
rcrb
sahf
pop
cmp
jge
and
push
pop
repnz
push
adc
arpl
imul
ret
ss
in
repz
clc
mov
sub
push
mov
jle
pop
pop
add
mov
mov
sti
div
ret
ret
movsb
js
sub
jle
insb
mov
mov
dec
ret
add
hlt
push
popf
addb
es
xor
es
mov
mov
cmpsb
add
int
repnz
cltd
pop
loopne
stc
push
arpl
in
movsl
xchg
enter
jnp
in
sbb
mov
adc
adc
or
inc
cs
stos
mov
pop
xor
jne
fisubs
jg
arpl
jmp
sub
fsub
add
addl
lods
adcb
or
dec
push
imul
add
jb
lock
mov
push
shlb
jle
or
xchg
and
push
int
daa
sbb
push
stos
push
leave
push
das
cmp
aas
pop
adc
lods
cmpsl
adc
mov
insb
mov
aad
and
inc
ljmp
lret
mov
adc
cmp
les
pop
lahf
xor
mov
jle
cmp
loopne
hlt
bound
inc
push
sbb
sub
in
adc
mov
cli
sbbb
ljmp
xor
addb
mov
hlt
cmp
xchg
and
sarl
popf
jo
pusha
ret
stos
loop
sarl
and
inc
or
jge
push
imul
hlt
lea
mov
mov
ret
loop
or
dec
add
sldt
add
imul
add
add
add
lahf
add
add
sti
dec
add
add
sub
add
add
add
add
mov
add
add
mov
add
mov
sbb
add
add
add
add
jnp
add
add
stos
sti
add
add
fldt
or
mov
sub
lldt
add
imul
inc
add
ja
inc
pop
incl
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
lea
push
push
push
pushl
call
mov
cmp
je
mov
movb
call
movl
call
cmpl
jne
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
call
pushl
call
xor
leave
ret
push
mov
sub
push
push
push
orl
mov
inc
mov
pushl
pushl
pushl
push
push
call
add
mov
cmp
jbe
andl
cmpl
jne
push
call
mov
mov
movzbl
sub
push
call
mov
mov
inc
inc
push
pushl
call
mov
push
push
push
pushl
call
mov
sub
mov
add
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
movl
mov
sub
test
je
call
jmp
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
mov
add
movzbl
sub
test
je
movl
movl
movl
andl
jmp
jmp
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
push
pushl
call
mov
pushl
call
cmpl
jb
call
mov
pop
pop
pop
leave
ret
push
add
add
jle
add
or
add
add
out
add
test
mov
add
add
add
push
inc
add
add
xchg
add
test
add
xor
sbb
add
add
outsb
dec
add
add
data16
test
into
jmp
fldt
scas
jg
outsl
pop
add
push
push
push
movl
add
inc
jge
mov
imul
add
adcl
ljmp
popf
inc
incl
call
pop
lea
adc
push
call
push
cli
adc
testl
mov
in
push
std
pushl
mov
std
add
add
pop
adc
add
incl
add
mov
xchg
mov
mov
lea
lea
lcall
pop
adc
xchg
cld
push
add
push
sar
add
call
call
callw
repz
outsb
loopne
jne
into
lret
adc
inc
mov
scas
filds
sbb
add
add
add
push
jbe
sbb
sbb
sahf
add
add
out
into
add
add
mov
gs
push
imul
dec
add
gs
je
xchg
ret
popa
gs
test
insl
inc
outsl
pop
add
jo
cmp
add
add
gs
add
lods
imul
jae
insb
push
insb
push
dec
gs
add
push
jbe
add
add
xchg
add
add
add
add
mov
add
add
add
push
inc
add
add
cs
add
add
cmpsb
add
add
mov
add
add
pop
sub
mov
sub
int3
je
bound
pop
test
hlt
ret
xchg
cmp
shlb
cltd
xor
pop
outsb
jle
imul
xor
sbb
mov
xlat
cwtl
lea
inc
mov
or
mov
and
int
lcall
xor
inc
pop
adcl
into
pop
popf
pushf
xchg
negl
outsb
cwtl
pop
cwtl
pop
add
dec
push
cmp
xchg
lods
adc
test
out
rcrl
sub
cmp
mov
jl
sbb
push
sahf
ret
push
dec
xor
and
negl
mov
incl
arpl
popf
jo
stc
in
mov
divl
dec
mov
jecxz
sbb
mov
push
xchg
or
dec
popa
add
mov
or
or
or
loop
jne
xor
iret
inc
cwtl
fists
pop
pop
lcall
jl
inc
imul
lret
or
clc
sub
lret
out
xor
mov
aad
pop
lea
xor
test
mov
pushf
dec
mov
mov
dec
mov
mov
flds
into
adc
orl
test
dec
push
push
cmp
mov
xchg
dec
pop
scas
push
adc
lahf
push
test
ljmp
xchg
cmp
add
sub
push
add
sub
fcmovnbe
shll
test
sub
loopne
test
lea
mov
jecxz
fs
movsl
divl
xor
imul
xor
push
shrl
mov
pop
mov
or
and
je
adcb
nop
scas
cmp
inc
pop
mov
cmp
lods
insb
insb
data16
aas
pop
fnstcw
and
and
and
divb
xchg
or
mov
enter
xchg
mov
mov
jecxz
jno
jae
int3
ret
not
rorb
inc
xchg
imul
inc
pop
fwait
sub
or
sbb
mov
xor
mov
cmpsl
mov
iret
loop
or
stos
mov
rclb
xor
lret
shlb
mov
jae
sbb
cwtl
imul
into
xchg
jno
rcrb
add
adc
or
pop
xchg
popf
stos
lea
xchg
mov
push
out
sbb
jmp
ret
out
arpl
pop
imul
pop
sub
pop
push
and
loopne
in
jmp
addr16
jne
inc
mov
out
rcl
push
rcrl
in
mov
mov
or
inc
dec
dec
xchg
add
mov
enter
pop
enter
fsubrl
push
inc
cmp
or
lods
jbe
loope
sub
add
pop
jge
mov
xlat
inc
repnz
filds
dec
popa
mov
out
into
xlat
xchg
insl
xor
add
push
sub
inc
adc
sub
out
cld
lret
mov
loop
in
xor
imull
xor
lods
pop
lods
push
lods
sbb
movb
inc
adc
cmp
icebp
call
ret
leave
in
jp
fiadds
jl
lcall
dec
inc
adc
js
je
mov
inc
adc
jg
add
adc
fistpll
popf
repz
stos
cmpsb
cwtl
xor
sbb
dec
test
fwait
idivb
adc
cs
loop
push
mov
or
xor
dec
add
jp
aad
push
movsl
xchg
adc
add
repz
cmc
out
mov
sub
xchg
lds
push
adc
xchg
xchg
jge
jecxz
cwtl
dec
cmp
data16
adc
stc
psrld
lea
inc
ds
lcall
xlat
fimull
pop
jge
mov
and
jecxz
mov
mov
addl
mov
les
icebp
aaa
in
push
sbb
inc
mov
ds
cmp
ret
sbb
std
lods
addr16
cmp
cwtl
rolb
jo
xchg
inc
inc
jbe
mul
xchg
jns
jae
aad
es
scas
pop
add
jmp
xor
cmp
dec
mov
mov
xchg
mov
sahf
xor
shlb
insl
daa
add
inc
mov
mov
into
push
sbbl
mov
outsb
cld
std
pushf
dec
adc
lahf
mov
ret
inc
sub
fldenv
scas
jle
movsb
clc
xchg
ss
sub
addr16
cli
pop
mov
pop
test
dec
mov
mov
mov
and
mov
int3
cmpsb
das
sbb
pushf
rep
rcrl
aas
loope
fcmove
shll
jnp
lock
mov
mov
sub
rcrl
jmp
cmp
and
adc
xlat
or
aas
fcomps
and
push
jno
or
lods
add
add
mov
mov
jg
adc
jno
jne
fsts
sub
pop
add
cltd
aam
stc
cltd
pop
mov
ds
sbb
lahf
movsl
jle
icebp
scas
dec
xchg
je
fbstp
push
stos
push
jbe
add
ljmp
mov
xor
adc
movsl
popa
push
insl
iret
pushf
mov
jno
xchg
loope
dec
jle
outsb
fs
or
test
popf
mov
aaa
mov
jb
ds
int3
sbb
jp
sub
add
call
add
das
bound
dec
call
cwtl
pop
data16
pusha
ja
xchg
insl
mov
cltd
mov
cmp
and
mov
loopne
mov
push
add
push
out
out
adc
pop
mov
xlat
lret
addl
andb
inc
cltd
and
aas
shlb
int3
fwait
jns
dec
lods
xchg
mov
sbb
inc
loop
inc
nop
imul
xchg
fiaddl
push
cli
dec
nop
movsl
add
inc
div
xor
jbe
rcl
lods
jbe
adc
dec
lock
mov
jne
xchg
push
sub
gs
sub
sahf
and
fisubrs
pusha
and
notb
inc
push
rclb
cltd
mov
push
mov
push
jno
fs
aad
lds
mov
sbb
jecxz
daa
jns
inc
mov
jbe
shlb
inc
adc
mov
rol
add
cli
or
divl
pop
inc
cmp
test
popf
out
sub
cmc
push
sbb
adc
jp
and
sahf
cmpsl
in
cmp
shll
fistpll
icebp
sbb
mov
xchg
and
push
mov
subb
mov
lock
inc
fmull
inc
scas
xor
mov
gs
in
jmp
inc
mov
mov
shl
cmp
jo
hlt
pop
bound
adc
fsubr
rorb
iret
add
mov
scas
nop
xor
and
das
xlat
stos
rolb
or
cwtl
incb
int3
push
popa
out
fmuls
mov
je
ret
xchg
cmp
xor
jge
jmp
mov
pop
sub
addl
les
scas
fildl
pop
push
and
pop
mov
mov
mov
dec
mov
jle,pn
cld
adc
mov
dec
cmp
mov
jae
cwtl
int
inc
dec
pop
ret
xchg
movsb
arpl
fnstenv
mov
fcoms
pusha
sub
aas
notl
syscall
push
inc
push
inc
jno
outsl
dec
insb
out
int3
xor
mov
xchg
punpckhdq
cmp
ret
lret
lods
leave
xchg
or
push
inc
jg
xchg
imul
outsb
in
es
scas
test
aam
cmp
xchg
daa
dec
sub
and
or
dec
out
hlt
sub
jmp
sub
adc
nop
adc
push
push
lahf
loope
xchg
in
ss
mov
push
add
cwtl
out
pop
mov
and
loop
push
test
insl
push
cmp
xchg
sbb
jle
mov
rcll
xchg
or
int
push
mov
inc
fwait
daa
xor
scas
popa
pop
inc
mov
sbb
lods
push
lock
dec
xchg
push
mov
nop
lods
pop
jb
movsb
mov
outsl
lods
cmp
adc
test
or
lds
xor
loop
inc
sbb
roll
div
adc
outsl
cmpsb
xor
mov
lock
subb
aam
ljmp
sub
or
and
mov
test
inc
xchg
and
and
push
insl
pop
add
shlb
lds
mov
jl
lahf
hlt
adc
dec
push
or
test
cltd
mov
dec
mov
fildll
sti
push
jb
dec
repz
aam
std
cli
pop
pop
jae
arpl
and
dec
fnstsw
pushf
fsub
mov
loope
cmp
shll
add
xor
mov
mov
adc
mov
in
dec
cs
push
lahf
mov
not
adc
mov
dec
bnd
mov
xchg
push
push
bound
sbb
jecxz
rcrb
daa
sarb
jg
rorl
cmpsb
add
cs
mov
repz
cmp
add
and
into
sbb
mov
xor
xchg
pop
mov
fbld
or
cmp
js
leave
add
pop
stos
xchg
cwtl
fcoml
popa
dec
fnstenv
push
out
and
pop
add
cmp
jle
cltd
sbb
push
xor
inc
inc
xchg
fcom
jl
jge
loope
call
int3
lds
js
ret
or
jae
inc
cmpsl
sahf
movsl
pop
fcoml
inc
repz
ret
shld
rcl
scas
inc
fdivr
mov
lahf
push
daa
xchg
and
inc
repnz
outsb
adc
dec
add
mov
std
or
cmp
jbe
inc
mov
out
pop
scas
movsl
jnp
mov
mov
dec
lea
fwait
les
pop
imul
add
and
pop
jb
or
jb
shll
push
inc
mov
pandn
sbb
lods
stos
daa
clc
icebp
xchg
lock
or
sbb
sbb
je
loope
insb
je
xor
imul
pop
aad
cmc
jne
movsb
fnstenv
push
js
and
mov
push
bound
in
sar
jge
inc
lds
aad
pusha
int3
ja
mov
pop
in
pop
sbb
dec
pop
pushf
popf
fstl
pop
rclb
lret
pop
sub
jl
div
inc
adcl
inc
loope
arpl
stos
mov
jp
mov
inc
cli
hlt
repz
cmp
mov
stc
ss
mov
scas
aam
dec
mov
cwtl
dec
paddusw
jmp
ss
fs
adc
scas
and
fcoml
imul
cmp
cmp
adc
inc
inc
push
mov
in
fisubl
adc
test
mov
jns
les
lcall
mov
mov
mov
mov
imul
xor
mov
jle
and
mov
and
sub
and
inc
outsl
cmpsb
arpl
push
adc
sub
sub
lods
imul
lods
xlat
xchg
dec
roll
fbstp
and
and
mull
inc
xchg
push
cmpsb
popa
or
ret
push
iret
imul
loopne
mov
ret
int
cli
in
inc
loopne
iret
ds
fldt
or
mov
jae
imul
in
test
aam
mov
lahf
cld
push
sbb
sbb
test
leave
es
cmc
or
fprem
scas
ss
jnp
and
adc
outsb
es
cs
and
sub
add
fs
add
jb
jae
mov
jnp
jecxz
and
filds
call
inc
pop
int
or
push
mov
inc
out
test
mov
adc
push
push
pop
mov
orb
inc
popf
lret
sahf
jae
in
mov
jp
pop
addl
insl
and
mov
xchg
fwait
inc
scas
fistps
scas
in
cmp
jg
xchg
sbb
mov
cmpsb
lcall
xor
sub
xchg
fimull
gs
adc
push
sbb
in
push
call
outsl
push
outsl
fisubrl
cmp
div
mov
in
not
rolb
jmp
test
ffree
incl
fwait
mov
adc
js
cmp
frstor
test
rcl
inc
cmpsl
xor
in
sahf
mov
cld
lods
adc
sub
sbb
dec
int
incb
ja
out
jl
xchg
rcr
out
inc
xlat
xor
scas
or
pop
aas
pop
jmp
stc
call
gs
insb
pop
add
outsl
mul
imul
xorb
cld
push
adc
popf
jns
add
jge
sub
leave
dec
outsl
rcll
inc
jbe
cmpsl
cmp
sbb
in
in
fistpll
pop
rorb
jns
scas
push
addl
cmc
push
sub
dec
jbe
pusha
jae
mov
repnz
aas
fcomps
push
aas
jmp
inc
pop
push
adc
xor
je
or
jnp
sarb
inc
fistl
cmp
loop
rorl
in
cmp
mov
xor
mov
fwait
std
mov
loop
cmp
lahf
out
cmc
cmc
je
inc
lods
out
push
ja
ror
pop
jmp
les
ja
xchg
out
and
test
pop
pop
jle
jns
mov
cs
lock
sbbb
test
dec
cmpl
dec
push
and
push
sbb
loopne
bound
mov
imul
es
insb
dec
cli
pop
mov
add
addb
icebp
cli
jb
mov
popf
adcb
aas
cmp
out
xchg
cmp
or
sub
or
pop
push
insl
xchg
fsubl
out
dec
jmp
je
dec
pop
test
loope
pop
mov
lret
cmp
gs
outsb
mov
addr16
pop
test
lahf
fdivrl
inc
adc
lret
fmul
pushf
ret
fcoml
inc
push
cmpsl
inc
jnp
add
sbb
add
cli
scas
jle
mov
xchg
arpl
adc
cmc
cwtl
jle
xchg
loop
and
in
or
mov
inc
in
movsb
push
cli
loope
ret
cmp
mov
or
call
lods
inc
iret
call
mov
xor
dec
cmpl
cmpsl
push
loope
fs
loope
stos
inc
pop
adc
loopne
dec
arpl
loop
jnp
imul
cli
mov
xchg
pop
hlt
adcl
jle
adc
fsubl
mov
push
add
and
jecxz
sti
sub
add
cli
lds
sar
aas
xchg
pop
mov
cltd
lods
aam
movsl
sbb
stos
mov
lods
add
or
push
mov
cmc
std
movsl
xor
and
push
inc
mov
mov
out
neg
pop
fsubp
sub
xchg
andb
pop
sbb
pop
xchg
enter
adc
ret
and
cmpsl
mov
push
and
lods
fiaddl
andl
pop
in
imul
in
in
sbb
push
mov
ja
pop
popa
bound
nop
xchg
mov
adc
or
sbb
mov
icebp
cmpsl
ret
dec
pop
out
lret
and
dec
addb
cmpsb
clc
js
mov
mov
sbb
jmp
popa
aad
ja
inc
dec
push
outsb
xchg
addr16
cmp
icebp
movsl
popa
xchg
mov
jnp
popa
dec
mov
push
out
adc
sbb
xchg
inc
and
fisubl
ficoml
ja
sbb
or
push
or
pushf
mov
mov
mov
fwait
popf
jmp
xchg
add
mov
push
jnp
das
cmpsl
cmp
or
xor
adc
dec
and
cs
add
stos
push
jb
inc
adc
fisttps
adc
jecxz
subl
bound
dec
cmc
fidivrs
mov
jmp
cld
shll
lock
mov
jae
sbb
push
cs
int3
push
pop
cltd
test
ss
add
aam
fs
das
push
sbb
rorb
and
or
mov
fidivrs
in
pop
scas
je
mov
std
cli
dec
iret
sub
mov
subb
and
adc
out
sbb
dec
cmp
leave
pop
push
mov
xor
insb
mov
sbb
push
add
push
daa
and
fdiv
in
outsl
inc
sub
fnstsw
pop
repnz
shrl
fistl
test
mov
pop
mov
push
push
cli
data16
xchg
inc
push
and
rorl
mov
call
into
fwait
sahf
pop
cli
cmp
and
int3
test
jo
jmp
or
bound
mov
sbb
and
insb
bound
lods
jmp
add
ror
and
adc
push
fs
mov
scas
jg
repnz
cmp
jnp
adc
bound
or
bswap
out
jo
mov
pcmpeqw
stos
rorl
xor
mov
dec
jge
jmp
loopne
lock
mov
ficoms
inc
jbe
lahf
and
dec
aas
or
inc
add
pusha
loopne
pop
dec
pop
xor
pop
outsb
pop
pmuludq
in
int
cwtl
xor
fildll
cmpsb
xchg
lock
add
inc
mov
andl
dec
xchg
push
test
fistpll
dec
adc
imul
int
loopne
lahf
mov
add
inc
push
pop
jo
lret
mov
mov
insl
pop
add
sbb
popa
aad
clc
enter
sbb
mov
cli
pop
jb
shll
aaa
rorl
mov
call
adc
stos
or
jl
into
push
add
cmpsl
aam
xchg
mov
push
sahf
xor
loope
mov
subb
loopne
add
sbb
xor
in
int
shrb
jecxz
cmp
push
in
shlb
cwtl
add
inc
sub
mov
outsl
dec
or
int3
std
pop
dec
dec
int3
pop
pop
mov
mov
mov
fcomps
pusha
adc
es
std
jmp
push
sbb
fs
mov
jl
pop
push
mov
xor
push
pop
sub
int
sti
ja
or
sahf
mov
call
mov
sbb
sbb
mov
cltd
movsl
mov
fcmovnu
xlat
jae
sub
lods
sbb
dec
dec
sahf
subl
and
push
adcb
aaa
jnp
pop
out
insb
setnp
jnp
loopne
cwtl
or
popa
jns
out
dec
ficompl
lea
fiaddl
sahf
loopne
psrld
xor
in
adc
roll
cmp
outsl
pop
test
add
mov
je
je
xchg
mov
pop
into
pause
push
popf
mov
loop
xor
addr16
cmp
mov
jno
popf
jne
aam
mov
gs
lret
adc
std
adc
fildl
movsb
cld
in
popf
and
fisttpll
pop
iret
rcr
imul
add
mov
dec
pop
mov
dec
adc
jo
ds
mov
xchg
test
ret
lret
es
inc
sbbl
sti
shrl
mov
fidivrl
lcall
mov
ret
fnsave
cmp
outsb
push
sbb
add
xor
lock
pop
scas
push
js
jns
mov
in
dec
popa
dec
ljmp
xchg
push
dec
jo
mov
push
pusha
sbb
aam
inc
and
add
lock
xor
idiv
sbb
sbb
mov
pop
stc
ret
pop
jmp
test
std
xchg
insb
sbb
scas
rorb
mov
icebp
push
cmp
out
and
dec
adc
lcall
jns
lret
div
loope
inc
cmpl
popf
movsb
adc
cmpsb
jnp
adc
mov
xor
roll
mov
push
rorb
jmp
popa
or
mov
push
test
stc
nop
cmp
and
mov
daa
lock
lcall
mov
lods
xor
ret
jmp
insb
jbe
dec
xchg
jo
pop
mov
cmp
nop
jb
add
push
jnp
cmp
shlb
hlt
jle
arpl
ja
aad
sahf
adc
ret
and
ss
das
pop
mov
cmc
arpl
mov
stc
push
out
mov
loop
les
jge
jg
mov
sarb
ljmp
inc
dec
ds
pusha
stos
repnz
out
jle
push
lods
sbb
scas
jle
jge
addr16
cwtl
mov
jmp
into
mov
xchg
pop
sub
add
jne
fs
add
cmpsl
add
xchg
mov
inc
push
lds
xlat
cmovo
xor
inc
xchg
mov
pop
dec
sbb
adc
inc
adc
xor
pop
daa
hlt
adc
test
adc
das
rcll
push
mov
sarb
enter
inc
pop
imulb
ljmp
enter
test
mov
or
ds
add
shrl
adc
sbb
and
cltd
and
sub
push
popf
mov
sahf
or
and
pop
repnz
orb
push
std
lods
insb
or
in
inc
das
jbe
lds
mov
in
add
xor
push
lods
push
dec
xchg
jno
inc
push
jle
add
adc
stos
push
sbb
mov
sub
cli
dec
in
fsubl
mov
jle
in
inc
in
aam
xlat
mov
cmp
das
adc
out
and
call
mov
push
sbb
aaa
cmc
sub
sarb
sub
sti
xchg
pop
mov
pop
pop
or
xchg
imul
add
repnz
jno
or
jae
cmp
cwtl
adc
jmp
cmpsl
jne
push
mov
cmp
imul
push
daa
sbb
or
daa
adc
and
sar
and
mov
jp
ss
push
jp
arpl
ret
and
sbb
arpl
out
rcrb
test
ror
out
xchg
sbb
lds
push
rorb
andl
data16
idivl
clc
xchg
pop
push
insb
mov
cmp
xchg
out
out
cmp
hlt
mov
fistpll
jnp
inc
pop
push
jmp
arpl
xchg
fidivs
push
mov
fildll
jns
dec
in
ja
jmp
or
out
pop
push
lods
cmp
cmp
adc
filds
mov
leave
or
cli
mov
xorb
addr16
js
stc
fimull
pop
sub
stc
jb
mov
jl
add
test
mov
aam
out
call
jae
jo
fstps
xor
push
mov
sbb
pop
into
xlat
push
sti
or
dec
mov
add
and
mov
lods
pop
push
stos
sbb
rcr
add
sub
out
lahf
mov
mov
in
push
sbb
mov
cltd
adc
test
lods
cmpsb
std
mov
cmp
mov
cmc
mov
popf
pop
sub
shll
fdivs
pop
cmp
cltd
stc
mov
pop
inc
mov
pop
mov
mov
enter
lds
dec
xor
cwtl
ret
notb
xchg
aam
push
pop
cmc
jne
mov
test
dec
push
popw
mov
call
adc
push
imul
mov
cli
adc
push
xchg
push
fdivp
test
sbbl
in
loopne
scas
cmp
or
sub
int
lcall
pop
jg
dec
popa
xchg
ja
jbe
sbb
data16
adc
negb
lock
imul
xchg
xchg
popa
js
in
je
rolb
je
ss
jle
xor
mov
aam
repz
push
adc
mov
scas
jg
sbb
add
lods
in
pop
faddl
mov
lods
in
or
imul
add
lret
ret
data16
scas
addr16
push
add
jno
js
je
fisubrs
cmp
and
dec
cmp
push
dec
cmpsl
test
sahf
inc
jns
mov
and
adc
rorl
dec
ja
push
push
addr16
es
jmp
xorl
push
clc
test
jnp
hlt
sub
jge
popa
test
sti
rolb
inc
fwait
mov
fnstenv
cmp
xlat
xor
loope
dec
sahf
jg
iret
aaa
pop
cmp
mov
inc
sub
fisubrs
imul
push
sbb
mov
dec
cmp
add
add
inc
add
add
cs
add
add
cmpsb
add
add
mov
add
add
pop
push
add
add
outsb
push
add
add
data16
add
into
mov
add
add
add
add
add
add
mov
add
add
add
add
out
add
add
mov
add
add
add
push
inc
add
add
stos
stos
cmpsb
ja
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
add
inc
adc
add
and
popa
gs
gs
les
in
add
addl
mov
in
roll
add
add
add
add
add
inc
cs
add
out
add
add
jecxz
add
add
add
add
or
xor
jae
jb,pn
push
arpl
dec
jb
fs
xor
inc
pusha
push
jb
inc
packsswb
mov
sbb
inc
shr
mov
or
incl
mov
lahf
ret
cmc
and
lods
or
mov
testb
cld
push
incl
pop
add
dec
lret
push
mov
pop
fistl
stc
cs
pop
add
leave
adc
push
push
xrelease
aam
movl
addl
xlat
push
pop
jmp
sar
add
call
push
std
push
cmp
enter
add
inc
cld
adc
cld
push
and
aaa
lea
adc
int3
cmp
clc
js
rep
jo
push
push
push
leave
push
clc
add
iret
push
stos
push
sti
add
adc
add
arpl
add
add
add
cmpl
add
rcrl
add
cmp
pop
movsl
dec
dec
gs
inc
inc
mov
jo
movsl
insb
movsb
gs
mov
jecxz
imul
jae
insb
inc
gs
push
push
imul
jne
test
xchg
dec
push
cmpsl
jb
ret
jae
add
loopne
insb
add
add
add
add
mov
add
add
addl
mov
add
add
xchg
add
add
push
add
jae
add
add
inc
add
testl
movl
xchg
add
xor
movsl
xor
push
cwtl
jecxz
shlb
lea
inc
add
pop
push
and
lea
add
and
mov
lods
mov
cmp
pop
and
inc
dec
jae
or
scas
xchg
mov
push
outsb
psllw
sub
push
push
ljmp
sbb
pusha
andl
xchg
es
out
das
xor
and
mov
xchg
or
cltd
pop
iret
sub
inc
stos
dec
add
and
inc
outsb
mov
xor
nop
sub
xor
arpl
xchg
pop
test
and
add
outsb
sub
xchg
lods
std
inc
adc
jb
push
sub
xchg
aaa
daa
xchg
lods
jne
jo
adc
aam
negb
xor
cmc
cmp
xor
jge
adc
addr16
lods
pop
sbb
push
dec
push
inc
out
les
pop
repz
pop
pop
push
pop
mov
xchg
adc
add
inc
clc
daa
xchg
mov
data16
std
adc
imul
lret
inc
or
add
fdivs
mov
jne
pop
out
xor
xor
shrb
and
pop
idivb
mov
cmp
cmp
sub
int3
dec
xchg
fsub
jnp
mov
jae
add
and
mov
xor
inc
scas
cmp
or
cs
pop
cwtl
sub
popf
mov
inc
js
sahf
mov
int3
clc
rcrl
jmp
cli
or
xlat
idiv
mov
call
cwtl
dec
inc
sbb
stos
shl
outsb
shl
or
sub
push
push
sahf
jp
mov
inc
outsl
divl
or
jns
loop
sbb
outsl
mov
mov
dec
cmpsb
pusha
iret
xor
inc
dec
mov
in
test
outsb
mov
loope
jb
add
sbb
and
nop
mov
insb
xor
fwait
aam
fdivrs
cli
cmpsb
jnp
add
jmp
inc
incl
jg
add
out
ficoml
sub
pop
test
insb
dec
ret
shr
pop
and
or
mov
rep
loope
push
ret
mov
inc
mov
and
add
and
fists
gs
cmp
movsb
adc
mov
dec
mov
inc
and
or
push
add
jp
test
test
mov
sbb
test
pop
leave
add
jne
sub
mov
adc
ljmp
sahf
mov
inc
test
addr16
cmpsl
fiadds
sbb
xchg
pop
enter
add
sub
clc
scas
mov
xchg
mov
push
mov
lcall
inc
cmp
shlb
mov
sub
mov
cli
ja
pop
aaa
bound
cmpsl
jne
test
and
fidivrs
sub
mov
dec
lahf
sub
not
push
out
les
pushf
jne
jmp
les
xchg
leave
out
enter
xor
loop
aas
add
test
fisubs
xchg
mov
fnstenv
xchg
inc
fdivrl
outsb
push
mov
cvttps2pi
lret
cmpsw
adc
push
scas
jle
gs
nop
cmc
pop
lods
mov
in
mov
fiaddl
pop
aas
lcall
sbb
fwait
xchg
test
movsb
dec
cmpsb
stos
xchg
sbb
sub
sbb
loop
mov
call
sub
sbb
add
insl
or
sbb
in
gs
dec
sub
enter
push
mov
jle
ret
lcall
push
and
lret
xchg
push
ljmp
pop
sarb
dec
sbb
mov
xor
loope
mov
bound
test
add
push
sub
mov
outsb
lret
and
pop
cmpsb
lahf
movsl
outsb
sub
pop
popf
fbld
icebp
adc
adc
inc
movsb
xchg
daa
xor
cmp
in
jmp
dec
dec
jle
jno
outsb
inc
jo
sub
ljmp
imul
call
mov
cmpsb
sbb
pop
push
dec
xor
std
cmc
xor
sbb
pop
and
adc
add
and
iret
inc
xorb
icebp
sub
jle
and
sti
in
pushf
fisubl
call
mov
xchg
popf
repnz
fsubrs
push
test
loope
xlat
push
sbbl
pop
out
fwait
push
jp
loope
mov
scas
inc
dec
jmp
mov
aaa
xor
in
je
cltd
loop
insl
outsl
sub
mov
or
mov
lods
pop
xchg
sbb
jmp
jbe
push
xchg
cmp
sub
les
std
in
lret
jge
cmp
inc
lods
add
jnp
push
lds
mov
jle
pop
outsb
scas
xchg
testl
rep
xchg
mov
inc
mov
adc
enter
daa
or
int3
cmp
iret
xlat
enter
and
stos
fists
push
pop
xor
stos
test
sub
push
mov
mov
int
push
xor
xchg
lods
clc
iret
inc
lock
xchg
jb
mov
sbb
mov
inc
inc
loop
pop
xorl
xchg
mov
ret
aam
sub
fisubrl
xor
add
mov
ljmp
xlat
je
sahf
insl
jecxz
sahf
and
cmp
mov
mov
dec
stos
cltd
loop
aas
mov
jle
ljmp
imul
cs
aaa
jl
and
cmp
inc
push
js
mov
loop
daa
pop
lds
mov
mov
xchg
push
ret
rcr
push
mov
inc
in
dec
mov
popa
pushf
and
dec
inc
andl
pop
jmp
pusha
lock
cmp
or
and
je
xchg
in
in
dec
dec
dec
sti
cmp
pop
and
in
ss
pop
mov
ja
roll
sub
nop
in
popa
inc
mov
mov
ljmp
xchg
test
sub
ret
xor
adc
and
push
fidivrs
dec
std
dec
jle
lret
dec
add
cld
cwtl
fcomip
jnp
and
xchg
push
xchg
or
dec
cmp
pop
popf
mov
mov
sub
ds
jl
jl
or
xchg
dec
jnp
fwait
cmp
inc
mov
push
test
sbb
inc
cmp
rcll
pop
pop
andb
mov
addl
js
fmulp
loopne
cmp
lea
out
mov
shld
leave
inc
aam
or
lds
add
mov
in
sub
pop
push
clc
addr16
pop
sbb
sub
test
sbb
sarb
lahf
push
push
icebp
cmp
lea
jge
cmpl
rcr
sub
inc
push
int
mov
jge
loop
nop
mov
inc
nop
xor
decb
rorb
push
fs
clc
sbb
out
lock
sub
and
pop
mov
fwait
sti
out
sahf
repz
sub
stos
imul
pushf
sub
mov
movsb
mov
or
push
mov
jl
or
push
pop
mov
es
cltd
inc
or
movsl
icebp
fucomp
mov
push
sbb
mov
cmc
out
adc
add
fsubrs
pop
xchg
insb
cmp
aaa
rcr
cmp
bound
mov
jge
add
push
pop
repz
cltd
test
popa
movsl
lret
pop
cltd
pop
push
inc
jns
xor
sub
jge
fcoms
sub
inc
std
jg
xlat
dec
pmuludq
inc
dec
nop
daa
cmpl
dec
mov
hlt
fisubrl
mov
jne
mov
or
push
lods
jbe
push
cwtl
je
shll
adc
aas
aad
int3
lds
or
and
mov
jg
and
cltd
pop
and
aam
sbb
cmp
inc
out
andb
enter
xchg
mov
popf
mov
loop
add
pop
sbb
and
pop
cld
pop
mov
or
xchg
jo
adc
or
sub
and
sbb
adc
adcb
cmp
jl
test
in
call
sbb
outsl
pop
mov
dec
insl
mov
mov
lock
xor
fbstp
cli
bound
push
push
bound
imul
jno
faddl
nop
mov
out
movsl
test
or
jg
xor
or
cmp
cmp
std
xchg
test
adc
repnz
bnd
outsl
pop
jno
inc
jl
add
jne
jmp
insb
mov
out
lea
jg
pop
mov
insb
cmpsb
loopne
cmp
lods
or
mov
aam
mov
pop
sub
push
and
test
adc
aad
repz
mov
push
jno
xchg
in
or
into
push
test
dec
dec
fisttpl
sub
jb
xor
mov
outsl
xor
aas
cwtl
fisubrl
ret
push
inc
or
xchg
mov
lock
pop
popf
sbbl
fistpl
xchg
frstor
push
jne
inc
add
cwtl
xchg
mov
jp
into
test
aaa
rclb
cmp
aam
and
sub
pop
dec
lahf
mov
xchg
xchg
and
mov
xchg
mov
int3
mov
jg
mov
cwtl
and
xchg
lret
jp
jne
mov
out
outsl
and
mov
popf
push
int
lahf
sbb
movsb
test
repnz
repz
or
mov
repnz
mov
rclb
dec
adc
sahf
nop
mov
xor
icebp
fisttps
push
das
test
or
mov
insb
or
cmp
andl
rorb
es
subb
inc
arpl
mov
ror
shlb
cmc
push
add
push
sbb
mov
xchg
outsb
pop
bound
xorb
incb
outsb
js
ljmp
movsb
jb
dec
sbb
fildl
push
xor
fcomp
xchg
dec
int3
cltd
repnz
push
jp
jae
rolb
loope
test
ljmp
loopne
in
xor
stos
out
dec
xchg
int3
lock
cmp
dec
mov
rcr
pushf
fistps
test
xor
outsl
jae
lret
push
aaa
add
les
neg
pop
faddl
sar
xchg
add
test
in
or
cmc
inc
mov
mov
or
pop
mov
lds
decb
loopne
sti
es
inc
das
push
cvtps2pd
shll
pop
stos
in
shlb
cli
jns
push
pop
call
mov
adc
add
mov
fs
ss
dec
adc
and
fisubs
lret
out
mov
push
outsb
mov
dec
es
inc
lea
sbbb
rcrb
push
or
xchg
into
inc
sbb
cmp
jno
cld
xchg
adc
dec
in
into
inc
jno
push
sar
or
and
das
inc
repz
sbb
jp
lret
leave
pop
loope
inc
fwait
fwait
or
in
add
mov
dec
aad
mov
pop
orl
loopne
repnz
ret
arpl
lret
xchg
xor
in
mov
inc
lock
xchg
cmp
inc
pop
call
xchg
and
mov
rol
inc
sti
mov
mov
movsb
into
pop
mov
arpl
out
movsl
jnp
jo
and
fsubl
cltd
mov
jg
mov
add
fs
jbe
mov
mov
in
je
mov
lret
popl
xorb
data16
dec
sub
push
sub
bound
dec
jecxz
sub
mov
clc
addr16
mov
mov
enter
jl
mov
fisubrs
js
push
sbb
pushf
rcr
call
inc
push
adc
adc
and
jo
test
sti
mov
and
rclb
fsubp
cltd
lret
jbe
pop
xchg
stc
out
jns
ret
sar
push
in
inc
mov
xlat
lds
push
js
popa
fsubl
sub
mov
cmp
ret
movsl
adc
std
mov
adc
ficompl
jns
lret
cltd
loopne
add
paddusb
mov
sub
fdivrl
roll
dec
cmpsl
pop
pop
cmpsb
pop
push
push
adcl
push
into
mov
mov
in
gs
sub
paddw
in
xor
pusha
mov
cltd
pop
or
cmp
int
sbb
adc
xchg
jo
test
mov
movsb
mov
jne
xchg
and
loopw
outsb
outsb
scas
pop
sbb
icebp
pop
fldcw
jo
cmpsb
imul
mov
imul
push
push
jnp
mov
aaa
leave
es
dec
adc
nop
mov
fisubrs
mov
ret
daa
push
jl
dec
pop
add
cmp
and
pop
je
notb
repnz
sub
fninit
xchg
movsb
lret
push
and
mov
das
out
and
hlt
inc
sti
sub
in
cli
stos
cmp
outsl
push
mov
in
shl
sub
xchg
rol
ljmp
mov
out
xor
in
push
orb
insb
dec
sbb
jno
je
out
and
ja
rcll
inc
add
imul
xchg
mov
push
adc
cld
or
cmpsb
mov
call
dec
shl
repnz
jne
mov
stos
in
and
aas
xor
adc
cmpsb
lods
stos
jg
sbb
mov
mov
jo
dec
mov
jbe
adc
xor
mov
nop
es
fisttpll
push
cmpsl
fdivrl
scas
in
loope
dec
dec
pushf
rcl
les
sahf
mov
loopne
lret
mov
not
dec
xor
jp
cltd
fnstsw
xchg
scas
mov
scas
mov
ss
mov
mov
pop
enter
push
inc
cmp
dec
es
into
xor
pop
jbe
ja
mov
cmp
lret
ficomps
nop
lock
mov
xor
add
cld
nop
jge
cmpsl
xor
fidivs
pop
int
enter
scas
xchg
add
in
cmp
pop
dec
daa
int3
nop
inc
sbb
repz
xchg
xor
dec
mov
inc
mov
call
mov
add
dec
pop
filds
dec
mov
fsubrl
add
aas
cltd
les
jnp
sbb
popa
xor
imul
lret
loope
jbe
iret
outsl
inc
aas
inc
inc
insb
dec
xor
or
sbb
sbb
fdiv
mov
mov
addr16
and
inc
sbb
mov
mov
pop
inc
aam
insb
push
jmp
mov
add
cmp
mov
mov
cmp
add
mov
push
lock
fsubrs
stos
hlt
xor
push
jns
mov
cli
test
or
cmp
cltd
mov
je
or
pushf
test
in
inc
cmp
sub
pop
pop
mov
fs
mov
push
or
andb
aaa
sub
out
icebp
lods
inc
sbb
xchg
xchg
das
mov
loopne
pop
iret
arpl
dec
pop
pop
dec
pop
push
cld
std
rclb
cmp
frstor
dec
cmp
jmp
lock
push
sbbb
repz
mov
xor
lgs
cmp
sub
inc
loop
aas
or
cmpsl
out
pop
outsl
nop
movsb
xor
sbb
in
jg
in
pop
jnp
pusha
inc
push
and
lea
sub
add
push
push
or
push
inc
repnz
mov
jge
stos
adc
pop
adc
jle
cmc
pcmpgtb
ja
cmp
jg
dec
push
inc
loopne
cmp
push
xlat
fs
adc
ret
cld
outsb
popf
mov
stc
call
sub
repz
lds
and
in
mov
xchg
jb
sub
adc
es
popf
push
sub
loope
mov
iret
ljmp
aas
fxch
out
mov
add
lods
mov
jl
xor
fmulp
push
ljmp
xor
mov
inc
jge
and
mov
aas
sti
sbb
insb
cld
clc
sbb
add
dec
cmp
xchg
jns
jae
pusha
and
gs
rcrb
dec
imul
and
sub
add
mov
push
dec
jge
jg
ret
push
jne
cmp
pop
cmpl
cs
jnp
dec
push
push
pop
and
push
and
leave
rol
cmc
mov
xlat
sbb
ljmp
loope
jl
cld
and
popa
nop
xlat
aad
mov
data16
test
cmc
jmp
fwait
cmp
dec
jae
pop
and
cltd
pop
cltd
mov
lds
in
push
xor
pop
and
pop
lods
add
jns
jb
aad
or
pushf
mov
lods
rcl
lcall
cmp
or
mov
add
shrl
sti
out
dec
in
mov
inc
inc
jg
imul
sti
jmp
mov
je
out
enter
cltd
mov
loopne
and
inc
or
cwtl
je
push
ja
jg
fcmovb
push
sbb
push
negl
enter
inc
push
testb
and
test
jno
mov
push
mov
cmp
inc
mov
pop
xchg
pusha
push
or
cmpsl
mov
stc
sub
xchg
gs
xorb
hlt
dec
cmp
push
lds
movsb
jnp
add
mov
iret
pop
xlat
push
adc
sub
popf
add
adc
mov
xor
xor
mov
leave
lcall
cmpsl
mov
imul
and
jl
inc
je
mov
pop
sbbl
mov
mov
testb
shl
push
push
push
scas
shrl
or
lahf
mov
sbb
inc
leave
loope
push
cmpsb
push
dec
cli
mov
adc
jbe
jno
test
push
mov
mov
jge
jno
add
enter
jecxz
inc
daa
call
cmp
jns
xchg
es
cwtl
notb
mov
pop
xor
outsl
inc
lea
aam
dec
std
or
sub
jo
cwtl
cmp
add
and
and
pop
xorb
outsl
sbb
adc
pop
out
sbb
clc
xor
orb
loop
push
aad
js
push
jns
gs
stos
shll
gs
repnz
outsb
aaa
in
repz
mov
gs
sub
nop
aas
loopne
insl
dec
adc
cmp
or
cmc
lcall
mov
push
mulb
and
out
filds
xchg
movsl
dec
push
rcr
repnz
xor
pushf
cld
mov
jno
inc
jg
aam
fldenv
adc
or
pop
xor
lahf
add
insb
inc
rcl
and
dec
push
stos
push
mov
inc
jg
in
insl
mov
aaa
add
cmp
or
popf
cmpsl
pop
mov
pop
inc
jb
popf
cmc
pop
pop
popa
call
insb
iret
mov
mov
repz
inc
sti
xchg
jno
cmp
out
jno
inc
sub
testl
sbb
dec
sbb
in
xor
filds
or
mov
mov
mov
push
mov
jno
jp
stos
mov
xchg
pop
loope
iret
and
cmp
fs
aas
out
cmpsl
push
test
xchg
gs
jb
fcmovne
push
mov
movsb
bound
out
icebp
jbe
push
int3
test
push
int
fdivr
mov
xchg
mov
aas
out
jae
aam
jo
lahf
sub
xor
scas
in
cmp
push
lahf
daa
into
ljmp
in
lahf
int3
popf
dec
adc
mov
shlb
adc
or
push
dec
pop
push
mov
cmpsl
movsb
push
jp
outsb
pop
jmp
pop
scas
fidivrs
aad
insl
mov
sub
jne
mov
cmpsb
pop
cmp
test
mov
scas
mov
hlt
mov
adc
cwtl
dec
fdivr
std
iret
mov
mov
pop
ret
or
fistps
xchg
cmp
push
or
in
addr16
es
and
lods
add
adc
xchg
dec
and
rcrb
lea
lods
jnp
sbb
xor
stos
mov
call
push
and
aam
dec
jns
fisubrl
jo
jg
pop
adc
addr16
sahf
pusha
ljmp
in
mov
mulb
pinsrw
stos
sub
popa
fcmovbe
xor
adc
jecxz
or
popa
inc
mov
and
push
insl
xchg
xchg
fmull
cmp
adc
les
lret
mov
xor
push
jb
jb
push
enter
pop
xchg
icebp
in
pusha
adc
stc
mov
or
lret
sbb
pop
mov
btr
idivb
mov
call
test
push
dec
ret
jg
sub
std
sub
shrl
dec
cltd
xchg
adc
fldpi
jl
test
jle
inc
nop
xor
mov
into
add
jecxz
inc
dec
imul
xor
stos
sub
sub
sub
jne
jne
and
pop
lahf
imul
icebp
or
adc
xchg
and
push
pop
lret
pushf
cmpsb
std
sbbb
fisttpl
in
cmpsb
jle
into
orl
lods
fmull
mov
adc
jge,pt
or
imul
idivl
jecxz
popf
dec
mov
pop
cli
jns
imul
icebp
rcll
or
jge
shlb
mov
cld
int3
mov
stos
and
nop
cltd
xchg
decl
jb
jnp
mov
test
xchg
inc
outsb
mov
add
dec
pop
mov
rcl
lea
aad
inc
sti
sbb
push
std
cld
in
lock
sbb
inc
mov
mov
and
fwait
jmp
test
push
cmp
xchg
push
scas
mov
adc
fwait
pop
insb
pusha
cmp
xor
repnz
pop
mov
cltd
mov
pop
sub
aas
std
sbb
inc
test
xor
adc
push
iret
jno
pop
lock
mov
nop
sbb
scas
cmp
pusha
aaa
inc
andb
push
and
mov
out
pop
and
pop
fsin
mov
es
leave
xchg
xorb
idivb
and
ret
xor
flds
xor
cli
mov
insl
dec
dec
add
pop
push
push
loopne
push
mov
lret
sar
cmpl
mov
mov
push
or
push
or
ds
inc
or
fsubrs
push
stos
stos
movsl
imul
mov
mov
or
gs
enter
mov
xor
mov
jbe
or
cld
gs
mul
or
cmp
cli
sahf
mov
icebp
pop
rol
sub
seto
addb
jp
mov
pop
push
out
xchg
push
xor
aas
xor
scas
nop
pop
mov
inc
aad
mov
cmp
sbb
inc
dec
insb
jg
adc
sub
out
imul
sbb
fbld
lea
xchg
xlat
decl
fdivs
mov
cmp
jecxz
loope
push
aam
repnz
push
scas
xchg
jno,pt
addr16
and
mov
pop
and
movsb
lahf
and
into
rclb
in
sti
add
movsb
lock
dec
imul
icebp
add
mov
sbb
repnz
push
jge
mov
mov
and
or
in
xchg
pcmpgtb
jno
pop
outsb
mov
adc
cs
and
dec
fisubrs
cmpsl
push
jge
mov
mov
adc
jg
inc
xchg
aaa
pop
mov
nop
mov
or
pop
or
popf
mov
gs
xorb
push
scas
fwait
jecxz
std
repnz
insl
xchg
bound
mov
sub
mov
daa
sahf
test
jp
dec
mov
dec
in
and
xor
mov
or
sub
xchg
movsb
cli
cmp
outsb
push
mov
bound
nop
ja
dec
psubb
ficompl
aaa
iretw
and
sub
es
mov
push
and
mov
inc
inc
or
pop
out
sti
repz
movb
push
add
jae
add
add
inc
add
testl
movl
xchg
add
xor
add
add
add
aaa
add
push
add
pop
add
mov
add
add
cmpsl
add
ret
add
jae
push
adc
add
add
add
add
mov
add
add
orl
mov
add
or
arpl
in
in
mov
inc
jae
add
add
add
ja
imul
js
int3
int3
int3
int3
int3
int3
int3
int3
int3
faddl
add
add
jl
mov
imul
adc
bound
and
insl
add
add
sbbb
add
int3
or
add
cld
add
jb
adc
pop
sbb
sbb
ljmp
cmp
add
add
jns
jne
dec
cmc
je
jb
pop
cmp
add
xchg
mov
and
jecxz
out
sbbl
xchg
mov
aaa
jns
add
push
add
adc
mov
jne
mov
xor
std
pusha
decl
clc
clc
test
imul
popa
lods
or
dec
pop
add
push
push
mov
cmpsl
pop
mov
mov
jmp
sbb
sub
int3
je
test
mov
call
test
fnsave
sub
call
or
fisubl
cld
mov
sub
test
cmp
test
mov
movsl
clc
mov
cmp
sub
adc
add
add
jl
add
add
add
sbb
sbb
imul
add
mov
inc
cmpb
insb
xlat
movsb
outsl
mov
outsl
cbtw
gs
dec
adc
outsl
je
pop
stos
pop
imul
dec
add
inc
xor
insl
aaa
xchg
gs
out
add
pop
inc
cmp
add
pop
inc
inc
xor
xchg
sub
add
add
add
add
jb
add
add
and
insb
add
add
sbbb
add
mov
add
add
cld
add
add
adc
pop
adc
mov
inc
jmp
loope
push
push
mov
or
cmp
lcall
push
in
pop
bound
sbb
roll
jnp
inc
movsl
iret
and
push
pushf
inc
or
push
stc
push
addr16
xchg
inc
jp
push
lods
add
push
xchg
notl
loope
insl
test
inc
push
lret
push
jbe
adc
mov
xchg
xchg
pop
icebp
xor
sub
sarl
imul
sbb
test
or
cmp
jg
fldcw
adc
mov
orb
jmp
cmpsl
sub
inc
sub
ja
sub
sbb
and
int3
ret
mov
jl
addr16
lock
out
out
sub
jb
hlt
fisubs
mov
push
shll
or
sbb
dec
cltd
pusha
mov
or
aaa
fildll
leave
rorl
es
cltd
lret
jge
push
xchg
mov
jae
sbb
push
mov
sbb
add
pop
ror
addl
mov
push
or
not
fsubr
pop
inc
cwtl
clc
dec
add
sarl
jecxz
push
mov
ret
jbe
js
movsb
loopne
cs
add
rcl
mov
nop
add
sarb
mov
sbb
fldt
lds
cmp
xchg
imul
or
int3
add
mov
xchg
test
push
xchg
push
stos
and
mov
and
out
mov
add
dec
xorl
mov
inc
mov
dec
sub
aam
leave
push
stos
mov
in
pop
xchg
or
push
std
xchg
mov
jns
pop
arpl
test
mov
out
hlt
pop
push
dec
xchg
loop
into
mov
pop
xor
adc
test
movb
nop
push
shrl
aaa
call
loope
push
jmp
push
mov
mov
mov
push
inc
xorb
movsb
add
mov
xor
repz
test
jl
ret
mov
jg
mov
mov
mov
dec
inc
mov
fmull
aas
jns
fsts
jge
mov
dec
jne
daa
lcall
test
sbb
imul
jns
jle
xchg
les
add
shll
scas
lret
jmp
fnstsw
jecxz
or
js
lahf
int3
push
mov
pop
rdmsr
inc
pusha
inc
sahf
adc
pop
and
or
cmp
hlt
xchg
or
cmpsl
jno
jp
or
mov
mov
stos
mov
testb
sub
leave
es
jno
cmp
lea
out
sbb
insl
rep
lcall
mov
out
scas
sbb
or
xchg
fwait
or
adc
aas
cmp
pop
scas
les
or
jmp
fstl
xor
cwtl
mov
xor
inc
xchg
jns
adc
std
bound
int
nop
mov
insb
dec
imul
push
flds
mov
mov
xlat
pop
jne
cmpsb
fs
push
scas
adc
lds
into
in
sbb
test
pop
ret
mov
jae
lret
fnstsw
add
cmp
insb
xor
movsl
cltd
cmp
mov
test
cmpsb
jl
add
inc
shlb
sbb
push
fidivrs
mov
add
in
fisubs
push
pop
enter
pop
fidivs
scas
ret
stos
adc
mov
adc
stos
adc
out
movsb
mov
scas
js
movsl
jmpw
cmp
cmp
test
dec
sub
add
or
adc
xlat
dec
push
ljmp
mov
mov
adc
repz
aad
and
mov
xorb
cmpsb
jmp
lcall
cwtl
or
pop
adc
add
fisubrs
fdivrs
outsb
mov
ss
iret
lcall
fdivrs
je
cmp
int3
movsl
push
imul
repnz
data16
wbinvd
pop
arpl
inc
fwait
sbb
jmp
sbb
cmpsl
cltd
mov
jno
inc
ror
pop
fwait
test
enter
loop
add
push
lret
xchg
jge
inc
loope
adc
cmp
and
mov
mov
cli
push
rol
pop
jae
in
mov
out
stos
dec
bound
add
dec
mov
jae
mov
push
lret
and
hlt
addr16
cld
sub
fs
mov
mov
repnz
cmp
inc
push
lret
add
mov
faddl
fildll
scas
out
mov
aad
push
sub
add
jo
incb
pop
ret
mov
imul
mov
clc
in
jne
aaa
fnstcw
inc
cmp
push
in
mov
lods
pushl
cmpsb
mov
in
loope
sahf
call
sbb
imulb
add
sti
movsl
xchg
mov
or
mov
or
mov
mov
push
bound
pop
mov
mov
shll
jns
cmp
es
xor
cmpb
mov
mov
testb
mov
adc
jl
pop
sub
push
or
mov
push
adc
jp
mov
mov
lahf
in
and
jge
xchg
das
shll
mov
fildll
dec
lret
mov
inc
cli
cmp
jmp
cld
mov
adc
jb
and
fcmovnu
cld
jmp
xor
fnstcw
jns
hlt
push
test
xor
in
aaa
data16
in
fwait
dec
lods
hlt
jmp
mov
loope,pt
adc
and
sub
loopne
pop
lret
cli
fildl
dec
or
dec
popl
push
fnstenv
sub
sub
xchg
sbb
jmp
jmp
pop
inc
push
sbb
or
pop
sub
movsl
sti
enter
or
jl
out
lahf
mov
mov
cbtw
pop
dec
lods
scas
pop
xorl
in
mov
sbb
adc
and
mov
inc
xchg
outsl
or
addl
leave
and
push
mov
mov
js
popf
jecxz
push
sbb
push
push
or
repz
outsb
mov
adc
push
mov
sub
dec
lahf
mov
xchg
int3
mov
xlat
sbb
js
and
jp
fmulp
xor
xchg
addr16
jne
repz
jmp
sub
sbb
dec
mov
dec
adc
sub
cld
mov
movsb
aam
ds
lock
mov
js
cs
test
mov
push
xchg
aaa
ret
imul
sub
sbb
outsb
adc
xchg
xor
sub
stc
in
xor
clc
add
mov
subl
sub
icebp
pop
stos
lret
push
sub
popa
jp
lea
rorl
fldenv
and
push
inc
in
pop
pop
mov
jp
loope
out
jo
rcll
and
in
lret
ficoms
xchg
mov
lcall
movsb
aad
cmp
inc
jns
sbb
mov
xor
xor
or
fwait
xor
push
ret
adc
clc
xchg
fwait
outsl
rcr
dec
or
add
jle
adcl
in
xchg
clc
pusha
mov
testb
in
xchg
or
es
sbb
ret
clc
xor
icebp
testb
xchg
cmpsb
cs
add
mov
data16
cli
negb
mov
jmp
cld
sbb
iret
hlt
push
dec
mov
cmp
mov
ss
dec
xchg
sub
sahf
gs
dec
add
das
les
push
jg
ret
daa
or
add
mov
lea
pop
popf
push
push
fistps
out
mov
mov
ljmp
add
cmp
divl
das
push
sbb
pop
test
mov
mov
ljmp
inc
mov
pushf
fcoml
lock
in
or
gs
mov
pushf
stos
mov
inc
inc
cmpsl
xor
insl
fidivrs
test
add
fcmove
cs
add
dec
cmp
aam
pop
lods
xchg
jmp
inc
loopne
xchg
push
or
and
pop
cmp
cmp
inc
sbb
sbb
rcrl
fistpll
int
insl
xchg
push
jno
mov
xchg
mov
jno
in
test
jl
out
push
adc
enter
xor
adc
sahf
ja
ret
cwtl
mov
aam
gs
dec
sbb
and
xlat
add
adc
lods
adc
pop
das
idivl
mov
dec
ds
fdivrl
sub
xchg
adc
and
xchg
push
sub
cmp
hlt
in
fsts
mov
inc
jno
aam
stos
mov
jbe
dec
fdivs
pop
mov
jge
xor
sbb
popf
add
aam
or
jnp
push
lock
mov
imul
inc
mov
pop
pop
mov
mov
stc
mov
jb
mov
sub
icebp
adc
fistpll
mov
sar
mov
inc
test
out
mov
inc
les
mov
and
fucomp
cwtl
fdivrs
ja
into
inc
cmp
mov
hlt
sub
lods
cmpl
aaa
dec
pop
sbb
les
mov
rorb
add
inc
inc
in
add
ficompl
jnp
mov
insl
das
and
stos
jmp
push
fidivrl
mov
sti
push
sub
mov
mov
rcrl
mov
and
sub
xchg
call
dec
xchg
sub
push
outsl
es
lcall
push
dec
test
xor
cmp
dec
mov
and
inc
xlat
aam
adc
in
sti
mov
dec
outsl
fcmovbe
daa
xchg
xchg
mov
hlt
cmp
lds
mov
xchg
cltd
fisubrs
outsb
scas
enter
lahf
shl
hlt
sub
dec
std
sbb
cmc
leave
push
jp
out
jmp
nop
xor
outsl
mov
clc
in
daa
ja
imul
hlt
xchg
cmpsl
inc
push
mov
or
push
mov
push
xchg
jb
mov
nop
mov
ss
fdivrs
dec
lcall
gs
and
mov
scas
push
cld
and
sub
xor
gs
lods
jbe
mov
cld
rcrl
ret
sbb
add
pop
cmp
lds
and
outsb
push
scas
insb
gs
cs
sub
mov
sahf
xor
leave
mov
pop
jecxz
mov
fwait
lock
sbb
and
insb
je
mov
jo
mov
inc
dec
icebp
and
pop
dec
xchg
sub
cmp
pop
aam
lcall
add
xlat
shl
imul
xchg
das
mov
cmp
insl
push
out
mov
pop
sbbb
xlat
dec
xchg
jb
add
push
fwait
xor
or
add
loopne
fadds
ljmp
and
sbb
ss
mov
mov
push
fisttps
fildll
pop
cmp
sbb
in
jb
push
test
aaa
pushf
decb
pushf
daa
ret
xchg
mov
fwait
jns
insl
inc
sub
xor
mov
rol
jb
pop
ret
stos
pushf
fnstenv
call
xchg
shrb
pop
dec
das
leave
loope
popa
test
xchg
sbb
dec
pop
lods
add
dec
jae
push
hlt
mov
cmp
pop
jns
cmp
cld
and
push
fists
addr16
sub
push
pop
loop
sysexit
shll
jmp
rcl
add
iret
mull
dec
mov
fsubp
and
pop
jmp
call
add
mov
cmp
std
mov
repz
sbb
xchg
and
jge
pop
jns
jmp
xchg
pop
cmp
xor
insl
push
or
addb
cwtl
fwait
jle
xor
sub
iret
int
xor
and
inc
sbb
or
sub
push
ret
rorb
jbe
jecxz
rcrl
cltd
fisubrs
add
lea
lock
lcall
pop
int3
inc
test
lods
movsb
ror
xchg
repz
repnz
fadd
sub
jne
mov
int
jge
fidivs
mov
dec
fdiv
jb
lahf
aaa
insl
mov
adc
fnstcw
sti
mov
js
stos
mov
insb
loope
stos
mov
pop
push
iret
xchg
das
shll
fwait
sbb
pop
fstpl
jo
xchg
sub
inc
in
jl
pop
jmp
aad
xchg
inc
pop
stc
or
xor
and
pop
mov
inc
pop
sub
cs
xchg
mov
ss
cmpsl
sub
sarl
adc
mov
or
test
popa
sbb
inc
mov
leave
pop
mov
lret
jno
ficompl
fbstp
pop
sub
sub
in
pop
mov
das
movsw
test
daa
jp
pop
push
insl
fmulp
test
lods
xor
ds
lea
sbb
cmc
sbb
push
jb
push
rclb
mov
inc
mov
sub
into
xor
pop
push
dec
xchg
dec
cmp
mov
ror
lahf
mov
or
in
ficomps
pop
ljmp
sub
sub
dec
or
jnp
lcall
in
push
jecxz
scas
mov
ds
jns
or
jmp
dec
fmuls
std
jno
add
test
lock
das
jo
sbb
sbb
js
sarb
movsl
lods
nop
cltd
or
mov
test
xor
daa
out
sbb
mov
sbbl
jns
mov
js
inc
cld
movl
sbb
push
ror
in
mulb
xchg
imul
inc
mov
xchg
jbe
arpl
mov
add
adc
sbb
pop
rcll
adc
mov
mov
stos
outsl
shl
mov
jmp
adc
sbb
sbb
mov
lcall
sarb
shll
js
xchg
jns
pop
inc
or
repz
in
addr16
and
adc
lret
out
test
shlb
or
sbbl
xchg
adc
icebp
insb
and
inc
mov
test
cmp
mov
or
daa
adc
stos
push
fnstcw
rcl
mov
jno
xchg
mov
lcall
pop
push
and
mov
fmull
mov
xchg
push
icebp
loopne
in
into
scas
add
mov
popa
jne
push
jle
data16
addr16
mov
jmp
mov
lret
or
jge
pop
add
mov
dec
xchg
sub
mov
pop
cmp
xlat
lock
cmpsl
xchg
imul
jecxz
pop
add
fstpl
scas
and
pushf
scas
mov
xchg
sbb
mov
or
jae
lods
push
push
loope
dec
cld
aas
les
scas
not
in
xor
test
test
arpl
dec
mov
enter
addr16
outsl
test
stos
xchg
sar
and
roll
mov
mov
dec
stos
mov
xor
mov
call
mov
jg
mov
fndisi(8087
out
sbb
hlt
mov
je
stos
xor
in
sbb
mov
leave
mov
fstpt
cs
push
cmp
ss
inc
scas
stc
or
out
sarb
out
insl
stos
idiv
stos
mov
xor
pop
fcmovnb
jnp
inc
and
daa
ja
gs
or
aam
bound
mov
push
std
test
jns
rol
ret
jecxz
ret
sbb
outsl
pop
sbbb
jns
sub
jl
fadds
js
cltd
mov
je
imull
adcl
pop
out
mov
mov
cmc
fcomps
cmp
mov
pop
push
lcall
sub
pop
std
les
ds
pop
dec
aaa
ffreep
pop
and
imul
mov
push
adc
ret
shl
hlt
xor
xchg
es
push
and
cs
mov
sub
jno
sbb
jne
scas
xchg
outsl
enter
xor
xchg
jae
add
stos
std
or
adc
push
in
sub
loope
cmp
add
icebp
out
mov
sbb
daa
xchg
dec
dec
fwait
sub
outsb
mov
icebp
jecxz
aad
std
sbbb
bound
dec
addr16
rorb
movsl
push
out
orl
xor
mov
mov
in
mov
test
jbe
aad
insb
jge
jae
pop
jnp
xor
mov
sarl
or
xor
rcrl
es
sub
jne
lret
fs
scas
xor
rorl
out
xchg
pop
dec
loopne
mov
add
fiadds
cli
cli
cmpsl
test
sbb
incb
loop
push
testl
or
in
add
xchg
sbb
or
mov
pop
jo
cmpsb
mov
add
ljmp
jle
lods
inc
outsl
lea
pop
mov
jb
movsl
out
or
ja
push
and
movsl
jle
push
push
mov
sbb
mov
iret
sub
add
push
jp
adcb
xchg
divl
outsl
and
lds
nop
fst
xchg
fwait
out
xor
aad
in
mov
push
mov
and
dec
aas
jmp
or
test
sbb
xchg
or
aas
cmp
adc
mov
ja
jns
adc
sbb
insb
cwtl
dec
add
push
inc
mov
push
or
cmpb
fldl
out
rclb
test
jecxz
fisttpl
xlat
or
es
lds
ds
mov
les
in
cmp
repz
enter
in
jns
dec
mov
into
pop
or
loop
or
movsl
jbe
jg
pushf
repz
or
scas
ret
jecxz
icebp
push
stc
rcrw
cmpsl
sbb
adc
test
repnz
pop
fstps
outsb
ficompl
mov
dec
enter
shl
out
jno
xor
pop
cmp
jb
cwtl
arpl
fcmovbe
out
jp
adc
cmp
jns
lret
jl
fsubl
loop
pop
fxch
pop
mov
cmp
adc
sar
nop
rep
mov
fisttpl
push
mov
mov
jb
cmp
clc
shlb
cs
aaa
add
sub
insl
cwtl
out
adc
dec
add
mov
loopne
lahf
andl
insb
sbb
ficoms
push
dec
xchg
aas
push
mov
pusha
push
xchg
in
or
imul
lock
or
loop
hlt
inc
push
cmp
fisubs
icebp
test
and
inc
out
push
xchg
leave
fcoml
repnz
fnstsw
fisubl
in
fcmovnbe
pop
lret
imul
xchg
test
mov
cmp
push
lods
repz
sub
mov
stc
pop
xchg
inc
jg
lods
jge
dec
pop
mov
test
outsl
imul
jp
cmp
rcll
sbb
out
sbb
clc
jmp
pop
sub
mov
cmpsl
orl
push
push
and
xchg
push
dec
jo
int3
cs
cld
pop
insb
data16
test
and
pop
adc
lock
dec
add
je
repnz
les
mov
aam
jne
mov
aaa
and
xor
mov
mov
pop
pop
scas
jg
sbb
sbb
jmp
and
dec
cmp
and
jl
arpl
gs
pop
sub
cmp
add
push
pop
lahf
bnd
cmc
mov
out
out
stos
xor
and
out
xchg
inc
mov
sub
jp
loope
shrl
fildll
xlat
jno
fstps
repz
imul
push
in
xor
xor
iret
addr16
mov
popf
ss
dec
negb
vmulsd
xchg
subb
push
les
iret
fidivl
cmp
or
mov
or
inc
out
popf
mov
jbe
lret
pop
lret
inc
fisttpll
ficompl
call
mov
data16
shll
push
out
mov
cmp
xchg
stos
or
daa
enter
mov
mov
dec
movsb
fwait
mov
and
or
ffreep
adc
movsb
loope
daa
sub
cmpsl
pop
push
fldt
sbb
mov
in
or
mov
fstps
std
std
gs
mov
or
scas
mov
fldcw
daa
and
mov
fiadds
mov
or
outsb
inc
lahf
scas
or
aam
es
cli
adc
jmp
add
mov
fidivs
jl
push
lea
insl
pop
in
pop
or
int3
fnstenv
push
jle
cmp
ret
adc
or
push
pusha
add
push
inc
shll
mov
scas
inc
push
cmp
in
fldt
adc
subl
imul
pop
aas
stos
mov
jecxz
mov
adc
rcrl
push
and
std
sub
inc
fnsave
cwtl
je
fs
mov
xchg
fdivl
sti
add
fadds
adc
mov
pop
or
sbb
adc
sub
and
pop
lcall
sarb
in
or
sbb
cmp
das
dec
enter
xchg
syscall
jp
movaps
sub
mov
into
push
inc
xor
das
jne
mov
adc
fldcw
jmp
fisttpl
decb
in
shrb
pop
clc
pop
es
xchg
andl
dec
in
repnz
loopne
test
xchg
push
fbstp
and
mov
imul
push
or
mov
hlt
inc
sbb
int3
and
fdivr
mov
mov
loope
xor
into
add
adc
mov
jle
cwtl
fisubrl
pop
test
inc
call
insb
mov
cmp
xchg
pop
and
jge
pop
jne
popf
lock
std
dec
popa
and
sbb
add
xor
xchg
mov
popl
add
and
sub
popa
xor
jbe
push
cmp
sbb
int
jge
and
mov
hlt
xlat
mov
inc
mov
adc
fwait
jle
imul
in
pop
mov
mov
mov
mov
stos
aas
scas
cmp
fcmove
adc
mov
es
scas
jg
xor
ficoms
adc
add
scas
movsb
push
mov
inc
or
outsl
mov
cmpsb
dec
adc
stos
sub
add
adc
xchg
repz
xchg
xor
and
push
adc
xor
adc
jl
and
mov
imul
sub
loopne
loope
out
aam
cmp
fmuls
pushf
inc
xchg
stos
dec
or
enter
sub
shll
pop
hlt
xlat
pop
lds
inc
outsl
repz
jno
jmp
stos
gs
mov
and
jmp
rorb
pushf
xchg
pop
lock
ds
dec
ljmp
dec
jns
mov
jle
pop
sbb
call
lahf
mov
xor
push
jne
jl
mov
add
pushf
dec
shll
add
pop
inc
lret
cld
fmuls
push
fiadds
andb
inc
and
dec
jmp
mov
stc
es
daa
sbb
test
dec
push
fidivrl
std
mov
enter
adc
mov
sbb
jl
cwtl
inc
es
aas
fistpll
nop
cmp
mov
mov
dec
xor
std
ljmp
pop
lods
ret
idiv
jnp
hlt
pop
mov
test
clc
test
lea
xchg
ret
inc
mov
xchg
push
cmp
enter
sti
pop
das
gs
xchg
jns
adc
ljmp
ss
mov
and
mov
insb
outsb
ljmp
adc
inc
mov
pop
push
pextrw
or
inc
xchg
cmc
dec
in
cli
mov
in
jae
sbb
repz
das
std
pop
daa
test
adc
call
test
pusha
jg
cli
sbb
cmp
shlb
imul
imull
add
add
add
sbbb
add
mov
add
add
cld
add
add
adc
pop
add
add
repnz
add
add
add
add
add
add
dec
add
add
loop
add
add
xchg
sub
add
add
add
add
jbe
add
add
es
insl
add
add
sbbb
add
jb
add
stos
stos
cld
ja
mov
jg
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
call
movzbl
push
pop
cmp
sbb
and
add
cmpl
mov
mov
je
cmp
je
push
lea
push
push
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
push
mov
call
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
or
mov
leave
ret
push
mov
mov
mov
mov
push
add
mov
mov
add
mov
mov
mov
mov
call
mov
mov
mov
add
push
pushl
call
mov
xor
push
push
mov
push
push
mov
push
push
push
push
push
pushl
pushl
push
call
mov
mov
movzbl
movzbl
sub
je
call
call
mov
add
inc
cmp
mov
jne
movzbl
movzbl
sub
jne
pushl
pushl
call
pushl
call
push
pop
pop
pop
ret
push
push
mov
mov
push
push
push
push
push
pushl
call
pushl
mov
call
push
push
push
push
push
push
push
push
call
mov
push
push
pushl
call
push
mov
pushl
call
pushl
mov
call
push
push
push
push
push
mov
call
push
push
push
push
push
call
pushl
call
mov
call
pushl
call
push
mov
call
push
push
push
mov
call
add
push
push
call
mov
push
call
mov
push
push
push
push
call
push
push
push
push
push
pushl
call
pushl
call
push
pop
pop
pop
jmp
add
xchg
pop
add
add
lds
jb
and
cmp
or
sti
add
add
push
fwait
add
adc
loope
add
insb
add
add
sub
add
add
add
add
mov
jae
sbb
sbb
sbb
and
push
inc
jb
xor
pop
add
fnstenv
add
shl
sahf
fdivrp
inc
mov
mov
lea
jmp
cmpsl
add
add
imul
xor
push
andb
adc
add
add
xchg
xor
fs
push
xchg
sbb
je
in
push
dec
add
adc
adc
lods
push
cmp
fcoml
pop
in
in
xor
sub
sar
cmc
les
push
add
mov
push
push
add
or
fwait
cld
and
add
lea
add
jecxz
clc
add
decl
popf
loopne
imul
cmp
cmp
adc
adc
push
jne
push
add
pop
add
dec
add
add
and
js
add
push
and
sbb
sbb
pop
mov
add
fs
jb,pn
je
int
outsl
push
outsb
outsb
xchg
inc
add
imul
aaa
out
push
imul
gs
sbb
imul
insb
bound
dec
mov
or
inc
gs
inc
stc
ds
popa
push
jne
add
add
cmc
cmp
add
add
add
add
add
test
add
add
add
sub
add
add
add
add
add
jne
add
cmpsb
xchg
rclb
cmp
xlat
dec
pop
xor
mov
nop
fdiv
adc
push
sahf
repnz
jae
add
cld
ljmp
in
add
aaa
xchg
xchg
sti
mov
jge
jb
mov
dec
and
stos
xchg
or
in
push
pop
out
or
hlt
out
lret
cmp
mov
rcl
jl
cmpsl
pop
jge
mov
inc
test
adc
and
sub
mov
dec
movsb
lahf
cmc
outsl
ja
ds
mov
adc
shlb
cmp
movsb
mov
push
popf
mov
in
jp
mov
mov
addr16
sub
jl
mov
fmul
cmp
push
inc
ja
cmp
nop
mov
subb
push
stos
clc
leave
jo
add
aam
outsl
push
in
mov
cmpsl
push
movsb
add
hlt
fmull
push
pop
scas
fldenv
cltd
fldenv
movl
cmovae
or
mov
cmpb
in
jmp
jae
pop
insl
decl
pop
sbbb
movsb
test
add
dec
in
sbb
leave
rolb
add
mov
mov
in
repnz
xor
imull
mov
cmc
je
jbe
or
gs
pop
pop
loop
push
push
add
cmpl
out
or
negl
jne
mov
add
aaa
int3
stos
pusha
and
mov
gs
push
mov
in
mov
pop
xchg
cmp
mov
les
orl
mov
cmp
notb
and
addr16
add
jns
add
rorl
fdivs
sub
inc
push
loop
ja
pop
pusha
hlt
or
and
hlt
cmp
cltd
adc
dec
cwtl
fwait
nop
xchg
dec
add
sbb
popf
pushf
call
sbb
jmp
pop
pop
cmc
sub
and
add
xchg
aam
ficoms
xchg
inc
or
and
or
and
sbb
push
sbb
testb
sbb
add
lret
movsl
and
adc
mov
leave
out
mov
movsl
pop
push
sub
dec
shlb
mov
cli
test
mov
xlat
mov
xor
int3
jmp
or
xchg
pop
movsl
out
fistps
xchg
mov
iret
iret
inc
xor
cmp
mov
jne
sbb
adc
xor
lcall
sti
sbb
je
and
shrl
outsb
rcrl
in
mov
sti
mov
movsl
push
rorb
dec
inc
adc
leave
jge
popf
mov
in
pop
pop
mov
mov
fs
or
daa
sub
dec
movsb
jns
rorb
pop
pop
sub
adc
lods
and
jno
mov
out
aam
int3
mov
stc
in
or
dec
mov
inc
loopne
mov
cmp
push
rol
sbb
bound
lret
push
add
dec
rclb
xchg
gs
insb
push
nop
sti
jg
idivl
cltd
mov
mov
sub
loope
mov
add
cmpb
icebp
dec
dec
adc
dec
sbb
push
sub
xchg
add
popa
pop
lock
and
leave
in
mov
xchg
stc
and
xchg
in
sbb
mov
push
cwtl
mov
add
negl
and
scas
or
jae
xor
shll
in
mov
or
out
je
out
or
mov
pop
lods
sub
hlt
std
and
mov
jnp
inc
jp
stos
testb
jp
leave
aaa
jns
ja
and
mov
aad
push
mov
rolb
negl
mov
imul
and
dec
rolb
pop
pop
aam
xchg
mov
inc
xchg
adc
ret
pop
rcrl
push
pop
add
fidivrl
sbb
sbb
sti
fdivl
xchg
cmp
notb
ljmp
jge
adc
sub
pop
xchg
dec
movsl
ja
repnz
and
test
fdivrs
sbb
jecxz
dec
inc
stos
adc
cmpb
lret
fmuls
shlb
cmp
pop
adc
xchg
mov
sub
call
cmp
xchg
jnp
mov
mov
mov
lods
stos
and
sub
fs
filds
ja
lea
mov
js
arpl
ficoms
adc
stc
push
addr16
out
aad
pop
mov
inc
mov
jnp
cmp
push
dec
sub
pop
xor
hlt
xor
popf
or
fildl
mov
lret
cmpsl
repnz
ret
sub
add
mov
adc
les
push
daa
or
shll
decb
mov
xchg
out
pop
ficoms
pushf
mov
pushl
pusha
cmp
xchg
icebp
pop
and
jns
sub
popa
leave
mov
ret
mov
fists
pop
int3
lock
mov
test
mov
movsl
insb
std
push
test
mov
fucom
xchg
and
cmp
nop
cwtl
popf
cmpsl
addr16
jp
push
sub
add
push
jo
mov
push
enter
jl
ds
jo
adc
adc
lcall
ss
or
movsl
out
in
out
rcl
mov
mov
sub
call
pop
out
shrb
add
inc
inc
cs
xchg
inc
xor
adc
icebp
test
in
fsubs
adc
jb
dec
mov
sbb
test
cmpl
hlt
mov
test
add
pop
ss
cmpsl
subb
adc
shl
or
pop
mov
popf
hlt
push
mov
mov
cld
or
addr16
je
arpl
aas
ss
jp
lea
mov
enter
inc
lahf
das
mov
push
mov
mov
lahf
xchg
pop
lods
dec
leave
pop
jge
fnstenv
fldt
lret
aam
popa
in
sub
ljmp
xchg
or
and
gs
int
add
pop
popl
mov
movsb
xchg
fstpl
aaa
lea
cmpsb
pushf
push
les
mov
pushf
xor
xor
dec
mov
out
mov
es
aas
xchg
xor
xor
add
jae
dec
cltd
xchg
in
mov
push
xchg
aad
scas
or
dec
cmp
xlat
dec
mov
push
inc
pop
and
pop
mov
pusha
sbb
cmp
into
ret
push
or
faddl
push
dec
sahf
test
jp
push
jp
inc
jnp
inc
movsb
jo
jne
lcall
mov
mov
inc
leave
adc
xchg
mov
add
ds
cmp
fcomi
xor
mov
test
movsb
scas
imul
ds
lcall
lret
mov
mov
adc
or
gs
pop
xchg
arpl
cld
jl
sete
jae
test
add
iret
push
aas
cld
sbb
xchg
lret
add
out
dec
jnp
push
sbbl
filds
jmp
inc
jne
xor
xchg
push
into
lods
imul
sub
cwtl
mov
insb
gs
cmp
shrb
jle
adc
mov
cmp
aam
mov
cltd
inc
jecxz
aam
lock
out
fdivp
xlat
aas
test
push
jle
mov
dec
mov
dec
sbb
dec
mov
push
imul
jg
adc
pop
add
push
jb
cmpl
arpl
pop
popa
cli
outsl
dec
adc
cmc
outsl
movsl
jno
inc
data16
adc
or
mov
sbb
mov
cmpsb
pop
mov
and
xor
daa
and
fwait
test
pop
jnp
das
cmp
pop
mov
jae
push
mov
add
sub
jns
pop
inc
cld
lods
leave
inc
rclb
or
pop
sub
add
roll
in
rol
and
mov
in
jo
sub
stos
and
enter
mov
leave
and
cmc
mov
jge
sar
mov
sbb
insl
add
jmp
jne
inc
imul
sbb
pop
ret
enter
ss
cli
jg
or
xchg
lods
cmpsb
dec
xor
in
fdivrl
cwtl
fiaddl
loop
xchg
push
add
andb
push
xchg
push
lahf
xor
lret
lock
mov
insl
ficoml
sti
mov
or
pop
idivb
mov
sarl
cwtl
xor
test
out
xabort
stc
mov
ret
hlt
sbb
jle
and
xor
cwtl
pop
xchg
or
js
imul
in
dec
pop
enter
ljmp
sbb
xchg
stos
int3
pop
aad
push
jg
sub
and
adc
jbe
xchg
xchg
rorl
lret
mov
adc
gs
notl
xchg
mov
dec
add
adc
or
cld
insb
mov
mov
cmpsb
push
jno
push
int
mov
lcall
lock
outsl
ljmp
xchg
fsubs
pop
xchg
dec
sbb
adc
sub
mov
mov
pop
push
in
rcll
rclb
cmp
push
int3
movsb
lods
nop
mov
stc
sbb
scas
xchg
pop
sahf
pusha
push
xor
repz
and
sub
dec
aaa
inc
mov
aaa
adc
jp
rcll
outsl
stos
mov
jbe
push
cs
repnz
mov
jns
iret
fmulp
in
pop
icebp
repz
xchg
push
aas
sarb
xor
dec
out
loopne
jae
jmp
mov
mov
mov
push
cmpsb
pop
pop
or
push
xchg
ja
rcrl
ficoms
test
sbb
fildl
mov
and
daa
xor
clc
fistps
mov
and
inc
jmp
imul
scas
gs
adc
sub
cmpsl
adc
sbb
and
gs
or
es
sarl
xchg
adc
pop
mov
fdivrs
push
push
ret
or
cwtl
inc
call
xchg
sbb
lret
js
mov
push
je
dec
and
jae
sahf
inc
dec
test
push
movl
movsl
lret
sub
dec
aam
push
fcomps
sti
inc
bound
jecxz
sub
shrl
movsb
inc
ret
adc
les
push
cmp
orb
inc
adc
shll
shl
inc
xor
out
das
jge
ficoml
sahf
outsl
sbb
mov
xchg
add
aad
mov
out
cld
aaa
data16
sub
outsb
and
out
out
ret
or
cmp
push
push
and
push
cwtl
cld
clc
sti
inc
push
xor
sub
sbb
mov
pushl
sub
in
and
cmp
jbe
sbb
mov
sbb
mov
inc
out
xchg
ljmp
adc
jo
repnz
pop
mov
stos
aaa
sub
or
lea
movsl
movsl
jne
jns
xor
lds
mov
cmp
xchg
or
xchg
mov
add
addr16
sbb
in
adc
fs
mov
inc
xchg
pop
nop
pop
inc
jl
xor
and
push
adc
cmp
leave
push
cmp
inc
iret
std
clc
push
sub
and
inc
lret
aaa
aam
sub
dec
scas
adc
push
popl
scas
fldenv
aas
mov
fldcw
sub
inc
int3
add
jg
out
pushf
push
pop
pop
push
jg
cmpsl
fdivrp
dec
fisttpll
stc
roll
push
lret
sub
ljmp
cs
mov
push
inc
aam
xor
sbb
or
mov
dec
aam
lea
sbb
sub
ds
cmp
loop
in
or
movsb
cmp
fsts
mov
cwtl
arpl
sbb
push
shll
fprem
mov
fwait
sahf
or
pop
gs
add
hlt
popf
sbb
dec
lock
int3
xchg
js
enter
std
dec
push
stos
repz
fs
add
and
ret
cmp
dec
lock
aam
out
mov
mov
inc
or
loope
inc
pop
xchg
inc
xchg
push
bound
fdivl
data16
push
rorl
xchg
xchg
stc
subl
pop
rorl
sbb
cmpsl
sub
lcall
jbe
pushf
jle
xlat
xor
jg
xchg
icebp
fcomi
pop
or
test
sbb
and
add
imul
repz
sub
cmp
lahf
outsb
icebp
popf
and
insb
and
sti
push
mov
sub
xor
fcomi
mov
and
enter
pop
and
arpl
in
out
in
cmp
mov
sbb
js
xor
mov
out
pop
inc
cmp
or
cmp
push
shr
movb
mov
push
enter
mov
pushf
icebp
cmp
lcall
fistpl
cmc
loop
mov
cmp
fwait
insl
fwait
cmpsb
inc
notl
cli
sti
ljmp
or
push
and
imul
and
pop
int
cmpsb
dec
sbb
mov
stc
push
cmp
or
and
sti
mov
adc
dec
xchg
lock
xchg
add
roll
aam
adc
frstor
cmpsl
add
mov
pop
test
fsubrl
pop
insl
adc
rclb
stos
stc
pop
in
dec
ret
cmpsb
int
cwtl
dec
inc
fdivrl
ds
mov
stos
movsl
xchg
mov
dec
pop
shl
xchg
jle
outsl
loop
rcrb
adc
js
add
imul
xor
xor
xchg
mov
in
jle
imul
shrb
shr
xchg
inc
ficoms
cwtl
dec
lret
mov
cmp
enter
loope
push
push
xchg
and
mov
pop
xor
icebp
push
jle
xor
sbb
in
mov
xor
popf
mov
stos
outsl
fwait
sub
inc
int
stos
fistpl
into
sub
dec
jmp
lret
mov
fwait
pop
cvtpi2ps
orl
pop
jae
clc
or
and
pop
or
sub
mov
sub
test
cwtl
pop
push
cltd
mov
adc
arpl
mov
out
pop
jmp
dec
mov
cmp
insl
rorl
jne
loop
les
lock
jl
sbb
in
jbe
cmpsb
xchg
in
xor
in
or
in
sub
xor
iret
push
adc
xor
push
mov
mov
cwtl
negb
jmp
inc
movsl
leave
rorb
test
add
orl
mov
cmpsb
mov
dec
ljmp
js
mov
mov
sub
and
mov
insl
loop
xor
cmp
jns
xorps
push
icebp
sub
aam
int3
mov
adc
in
je
ljmp
push
aam
cmpsb
stc
fisubs
cmp
movsl
mov
xchg
push
dec
icebp
push
loopne
fs
test
pop
lds
mov
stc
shrb
repnz
aaa
sbb
je
enter
pop
insb
out
or
push
inc
lret
mov
ljmp
jae
push
mov
in
jno
xor
sbb
dec
xor
or
sbb
enter
add
pop
pop
add
cli
jne
xchg
adc
dec
mov
ror
inc
push
das
stc
out
jmp
lahf
adc
filds
mov
sti
or
sbb
or
rorb
xor
out
jle
push
mov
cmc
mov
jno
dec
divl
jns
push
add
adcb
xor
aaa
jmp
fprem1
xchg
shl
imul
dec
gs
mov
xor
jge
sarb
out
inc
pop
outsl
pop
imul
add
inc
dec
arpl
mov
mov
popf
shl
mov
fiadds
out
xor
insb
mov
scas
xor
idiv
insb
push
jg
fsubrl
in
ss
push
and
xchg
insb
lret
testb
sub
aas
mov
cmp
mov
jnp
mov
cmp
rep
dec
outsb
mov
aad
fldenv
adc
call
and
mov
xchg
add
cltd
inc
or
cmp
mov
pop
jns
repnz
and
xor
pop
jne
dec
sbb
pop
mov
push
mov
int
fisubrs
add
jno
dec
mov
sub
jg
jne
dec
mov
and
std
push
jl
mov
xchg
sahf
add
mov
incb
in
pop
pop
mov
in
inc
sbb
add
adc
rcr
push
inc
mov
lahf
push
pop
push
arpl
movsb
mov
mov
or
dec
adc
pusha
push
mov
pop
mov
mov
stos
mov
jle
in
loop
movsl
jo
rorl
ds
fistpl
sbb
in
jecxz
movsl
pushf
cmc
cmc
out
lea
movsl
and
mov
repnz
hlt
out
xor
out
xchg
dec
add
push
movsl
addr16
cmp
push
xor
pop
je
in
fldcw
and
lahf
cmp
push
sub
addr16
jle
sar
lods
movb
cmp
xor
pushf
cwtl
out
or
jb
aam
data16
mulb
in
push
lret
ret
mov
arpl
mov
scas
adc
in
aam
mov
mov
mulb
dec
rcrl
sub
out
enter
rorl
fdivrs
and
dec
xchg
push
mov
loope
sub
sarb
sub
mov
scas
daa
pop
jmp
push
jbe
xchg
in
push
das
jge
pushf
les
cli
pop
nop
xchg
lahf
loopne
sub
rolb
xor
repnz
stos
cmp
mov
mov
test
or
arpl
sub
es
icebp
adc
pop
mov
scas
sbb
sbb
cli
inc
push
je
inc
cmpsb
xchg
nop
repnz
mov
cltd
cli
outsl
fcmovnb
gs
adc
sub
xor
lods
cmpsl
and
in
repz
jns
cmpsl
dec
out
ror
and
inc
cmp
xor
and
lea
push
cli
cmpl
daa
dec
mov
dec
sbb
sarb
popa
inc
outsb
xor
hlt
sbb
jl
pushf
pop
lcall
push
cmp
out
sti
push
pop
std
js
mov
pop
dec
repnz
dec
loope
fs
sub
fidivs
sub
je
cmp
mov
adc
rcll
es
jmp
or
xor
idivl
xchg
aad
and
xor
scas
ficomps
and
mov
lock
lcall
mov
imul
pop
cmpsb
inc
mov
xchg
xor
sahf
in
call
inc
dec
jns
dec
imul
out
xchg
xchg
sub
dec
dec
cmp
loopne
push
cli
mov
insb
add
call
call
jp
adc
dec
jg
pop
mov
cmc
outsb
xor
dec
inc
fldcw
movsb
and
cwtl
lahf
lea
xchg
adc
cmp
add
mov
add
lcall
adc
xchg
or
pop
call
push
popa
lahf
stos
cmp
lds
mov
jp
repz
repnz
jle
adc
pushl
stos
jnp
and
imul
jo
jo
add
stos
clc
xchg
push
sbb
leave
push
sti
inc
mov
inc
mov
ss
cmpsb
sarl
adc
mov
nop
int
mov
leave
mov
movsl
pop
stos
out
cli
inc
pop
repz
xchg
cltd
adc
jne
insl
outsl
pop
pop
stos
mov
fcomps
lcall
xor
enter
sets
outsl
outsb
fidivrs
sbb
sub
repz
jno
ds
movb
pop
pop
dec
push
mov
inc
push
xchg
sub
in
arpl
lret
addr16
add
or
rorl
xchg
mov
mov
test
movsl
inc
cmpb
lret
push
gs
sbb
mov
aam
jl
ds
nop
jno
fadds
popa
rol
arpl
jno
mov
stos
xchg
mov
mov
loop
sub
insl
cld
leave
or
xor
dec
mov
js
subl
xor
into
std
xchg
xor
stc
cmp
pop
sub
fwait
nop
in
sbb
pause
inc
rorb
sbb
pop
outsb
push
jb
lret
pop
add
jp
mov
lahf
mov
jbe
sbb
orl
sbb
push
jae
pop
adc
call
lds
aad
in
xchg
push
insb
cmp
cld
cld
pop
mov
mov
pop
nop
pushf
call
xchg
jle
xlat
out
xchg
subb
rolb
mov
outsb
fsts
test
scas
fistps
lret
mov
fidivs
std
or
xchg
or
popa
xchg
out
les
test
pop
repz
scas
out
xorl
in
ljmp
xor
and
pop
mov
mov
sbb
das
test
adc
sbb
sub
enter
leave
push
cli
or
dec
jns
cmp
mov
cmp
add
popf
sbb
jo
xchg
dec
mov
aas
in
adc
dec
mov
xchg
mov
test
add
inc
fs
pop
jns
das
xor
mov
frstpm(287
loop
ja
or
inc
mov
fistpl
jl
and
add
lods
xchg
pop
sbb
test
mov
sbb
push
mov
fwait
lahf
or
rolb
fnsave
mov
xor
dec
sub
sub
ds
jne
rcll
add
xlat
pop
iret
test
dec
mov
lahf
xchg
add
sbb
loopne
roll
pop
mov
cmpsb
stc
test
test
push
fstps
mov
or
rcrl
icebp
jno
scas
xor
xchg
out
out
mov
cld
and
adc
lea
lret
dec
rcrb
mov
stos
fistpll
push
dec
daa
out
in
pop
loop
jg
inc
xlat
sub
jp
or
sahf
insl
mov
ss
add
scas
xchg
pop
rolb
out
jo
mov
mov
outsb
enter
aaa
pop
pop
jg
pushf
mov
imul
ret
xchg
sarl
aaa
xlat
sbb
cmp
imul
mov
rcrl
iret
dec
dec
sbb
js
mov
push
cmp
imul
jg
adc
nop
dec
xchg
daa
test
pop
sbb
jns
lcall
lcall
inc
leave
adc
jns
cmp
lods
insl
cmp
loop
dec
je
xchg
mov
gs
jg
pop
cmpsl
mov
add
icebp
outsb
leave
fwait
xchg
aam
push
ljmp
inc
xchg
mov
das
pop
sbb
and
sub
ds
bound
pop
or
or
dec
lret
sbb
lret
mov
scas
icebp
inc
push
xor
mov
adc
mov
int3
dec
inc
or
cltd
push
mov
ja
lods
outsl
dec
sbb
mov
cld
incb
movsb
shr
pop
or
xchg
lcall
ret
mov
jl
aam
mov
lock
inc
mov
pop
jmp
push
pop
fisubrs
mov
mov
cltd
dec
push
sub
pop
outsl
shrl
xchg
mov
in
xchg
in
cmp
and
jle
sub
adc
sub
in
fmulp
loopne
pop
mov
dec
test
or
sbb
pop
pushf
push
jmp
cs
mov
inc
lea
or
lods
push
imul
xor
mov
lock
push
cmp
sbb
push
bound
push
or
add
out
inc
push
adc
fs
out
imul
fsubrl
jns
aad
bound
clc
nop
sti
inc
add
xor
test
xchg
pop
jns
sbbb
cli
int
imul
hlt
out
cmc
jge
addr16
and
shlb
inc
mov
inc
mov
sub
push
int
loope
int
lock
or
fisubs
or
into
in
in
mov
xorl
cwtl
cs
lret
shlb
mov
cmp
nop
jmp
jno
add
mov
in
xor
mov
xchg
cmp
sti
mov
test
outsb
ret
or
or
in
fnsave
cli
add
mov
add
add
in
add
add
adc
add
add
add
jne
add
add
movsl
imul
add
aad
add
add
add
add
add
add
add
movsl
pop
pusha
add
add
add
add
xor
add
jmp
add
add
add
call
add
xchg
jnp
add
add
sub
jno
add
ja
add
inc
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
add
add
aas
add
sub
movsl
add
add
scas
xchg
add
add
inc
add
add
sysexit
add
add
pop
add
add
and
outsl
into
cmc
add
add
mov
add
test
pop
add
cmp
stos
add
add
lods
jo
gs
mov
imul
popa
outsb
aas
jo
push
getsec
sbb
jmp
mov
push
cmpsb
sub
cld
mov
in
mov
and
pop
std
mov
cld
inc
xchg
mov
in
call
push
add
ss
add
loopne
push
push
cmp
sarb
mov
pop
mov
lea
add
shlb
cld
adc
mov
pop
sti
add
outsl
pop
lea
xor
add
pop
sub
mov
test
test
or
push
add
adc
inc
mov
push
push
dec
hlt
call
add
and
clc
mov
sub
sbb
adc
inc
add
ljmp
cmp
push
inc
add
push
ret
add
lock
addl
jne
fiaddl
sbbb
scas
fldl
sub
clc
inc
add
push
insb
xor
cmp
outsl
outsl
outsl
imul
inc
int3
icebp
inc
imul
pusha
je
arpl
xor
dec
xor
sub
jb
call
sub
imul
inc
jns
arpl
dec
jne
add
add
add
add
lds
add
add
xor
pop
add
add
outsl
push
add
add
mov
add
cmc
add
add
pop
and
push
cmp
cltd
cmp
fcompl
inc
mov
test
inc
les
inc
jecxz
cmp
xor
add
inc
add
dec
mov
fidivrl
push
jno
mov
enter
daa
adc
pusha
iret
inc
nop
inc
xchg
es
jle
fldenv
xor
add
mov
pusha
sti
lock
fildl
jo
pop
jmp
out
pop
inc
and
adc
push
jecxz
pushf
lock
loop
cld
scas
and
push
xchg
inc
cmp
mov
into
stc
jle
push
hlt
outsb
aam
movsb
or
dec
jo
popf
arpl
ficoml
xchg
lods
pop
imul
or
and
lcall
lcall
mov
sbb
xchg
movsl
repnz
sub
out
push
popf
mov
lcall
inc
jecxz
rsqrtps
or
aas
mov
sub
sysexit
jae
lock
add
mov
xchg
pushf
pop
mov
hlt
pusha
rcrl
xor
xchg
add
inc
mov
pop
and
push
mov
lds
dec
and
scas
push
mov
fdivp
push
pop
pushf
ss
out
popf
mov
pop
jbe
pop
insl
pop
std
mov
popf
mov
xlat
shrb
jne
mov
in
dec
xor
insb
pop
insb
mov
add
cmp
jl
cwtl
add
fisubs
mov
xorb
addr16
jno
mov
jae
add
mov
gs
mov
add
pop
mov
fadds
mov
pop
int
imul
and
cmp
jecxz
adc
sub
dec
xor
xor
add
mov
push
push
xchg
inc
adc
jmp
mov
gs
neg
push
dec
xchg
dec
xor
fwait
mov
xor
jbe
cmc
sarl
pop
cli
mov
cmp
mov
aaa
dec
cld
int
push
xor
xlat
push
dec
mov
dec
in
lock
xor
mov
add
or
jb
inc
pop
cmp
pop
rcrb
out
loopne
gs
sbb
popf
push
clc
xchg
inc
enter
sub
and
jno
pop
mov
sub
stos
sti
jnp
sbb
leave
repz
movsl
daa
cli
add
sub
push
pop
dec
fcmovbe
sub
mov
pop
mov
mov
in
into
pop
mov
cmp
imul
mov
xchg
and
cltd
mov
pop
pusha
adc
insl
jne
adc
das
popf
cmp
inc
pop
adc
xor
rclb
dec
out
and
dec
push
sub
mov
lods
adc
sti
dec
lods
push
popf
and
jg
xchg
pop
jbe
mov
push
adc
sub
leave
mull
addr16
mov
inc
jno
int
pop
cmpl
call
push
pushl
dec
ljmp
lahf
pop
daa
dec
mov
pop
fldt
dec
push
jp
push
jno
jge
adc
push
movsb
mov
pop
mov
fs
cltd
fbstp
lahf
dec
mov
add
lock
insl
cmp
je
in
mov
mov
test
mov
jg
daa
pushf
in
mov
lods
test
adc
mov
nop
or
sbb
xor
inc
dec
xchg
loope
arpl
sarb
mov
mov
jmp
jnp
insb
xor
lea
fwait
clc
out
and
rolb
or
scas
cmp
sbb
or
lahf
xor
rol
flds
jmp
fnstcw
sub
int
cmpsl
ds
fisttpl
test
push
aam
mov
shlb
je
popf
jne
push
aam
add
out
or
adc
aam
in
jo
negl
lods
aad
out
and
sbb
sbb
lahf
fcomps
push
mov
sbb
push
mov
pop
sarb
push
cmpsb
or
add
inc
outsl
pop
ret
add
cmpsl
push
mov
adc
in
mov
mov
outsb
sbbl
mov
movl
push
mov
jns
push
mov
in
lret
mov
push
xchg
sbb
not
jne
leave
pop
xchg
out
add
es
rcr
enter
cltd
sbb
cmp
stc
sub
push
jne
lret
aas
cmp
andl
push
int
icebp
mov
or
insb
xchg
mulb
nop
in
repnz
dec
mov
mov
das
lods
cltd
or
dec
lock
ljmp
repnz
pop
jl
insb
inc
mov
lret
imul
insb
push
movsl
inc
mov
aas
enter
fistps
xor
psrad
lock
xor
mov
mov
fstpt
outsl
cli
fs
inc
push
sbb
mov
call
pop
jmp
mov
inc
cmp
or
daa
push
dec
in
xchg
ficompl
fwait
repnz
mov
sti
xchg
cld
mov
jbe
pop
je
test
push
add
push
shlb
jg
dec
nop
loopne
mov
add
lock
lea
imul
js
ljmp
xchg
daa
cld
and
icebp
push
push
sub
jecxz
pop
loop
pop
int3
cwtl
fisubl
arpl
xchg
sbb
fcomi
outsb
dec
aam
addl
push
and
cmc
in
or
sbb
xor
in
adc
aas
mov
ljmp
ja
xchg
popf
pop
add
lods
jmp
hlt
cli
shll
push
addr16
jb
mov
out
mov
mov
push
jbe
xchg
decl
in
mov
push
fists
sub
aad
xor
scas
cmp
push
adc
mov
push
fwait
repnz
dec
pop
loope
pop
cmp
push
pop
jb
call
or
lea
mov
addr16
jl
or
jae
stos
xchg
repnz
mov
xchg
mov
xchg
xchg
mov
add
shll
add
add
cmp
nop
and
mov
repnz
loop
jl
out
repnz
mov
cmp
loop
mov
push
stos
xchg
popa
cmp
sbbl
in
fldenv
fsubrs
dec
lcall
mov
clc
lds
rclb
int
in
in
adc
jnp
inc
dec
ffree
jg
decb
push
push
sbb
push
clc
fbld
imul
inc
outsl
and
rcrl
xor
lcall
aas
in
fcmovne
mov
test
add
out
mov
pusha
mov
sbb
into
cmpb
int3
dec
mov
pop
test
out
scas
add
iret
and
cmc
sub
mov
mov
jns
and
in
sar
out
jg
dec
dec
lock
xchg
out
or
mov
iret
aaa
cmp
ds
push
sub
cmp
lods
int
push
rolb
push
gs
test
mov
movsl
mov
in
push
aam
pop
out
xchg
mov
cli
movsl
jb
pop
push
lds
out
inc
push
jmp
mov
mov
jg
cmp
bound
xchg
mov
test
xchg
cli
test
lret
jge
jle
cld
lods
fcompl
ss
sub
or
imul
testb
mov
out
add
into
push
and
iret
lret
outsb
inc
stos
shrb
push
pop
add
test
shlb
jp
lret
and
or
xchg
int3
pop
jbe
add
popf
addr16
lret
push
rcrb
cmpl
sbb
inc
pusha
outsb
lea
enter
ret
test
inc
fmulp
or
ret
adc
lret
and
loope
les
jb
inc
cmp
fstps
pop
aaa
mov
mov
hlt
aam
cmp
in
push
jmp
jo
jb
flds
push
pop
aaa
inc
aaa
sahf
jl
xchg
sbb
das
rcll
push
inc
xchg
pop
ret
adc
idivl
mov
push
mov
mov
inc
addb
push
push
cmp
cmp
jb
faddl
xchg
push
xchg
lahf
or
out
adc
shr
ljmp
in
mov
inc
and
jmp
push
dec
sbb
add
fwait
scas
cmp
outsl
mov
mov
fs
add
sub
sbbb
dec
inc
dec
scas
push
jmp
mov
nop
sbbb
xchg
dec
lret
and
and
es
shlb
inc
dec
push
push
mov
adcb
xchg
xor
cmp
dec
or
dec
test
or
add
jle
or
xor
xor
lcall
stos
int3
jge
xor
push
or
sub
dec
and
movsb
dec
jne
pop
dec
lock
xor
stos
jo
jg
mov
dec
or
cwtl
dec
fnsave
fwait
cmp
xor
mov
sbb
sub
repz
cmp
cmpsl
fiadds
rorl
ret
mov
jnp
push
fdiv
mov
mov
add
test
ja
bound
in
in
ljmp
out
inc
das
mov
mov
mov
inc
xor
jno
shll
or
adc
cmpsl
loop
inc
cld
in
dec
les
arpl
jnp
testl
sbb
pop
ret
inc
add
ret
fsts
cmp
lea
arpl
xor
mov
mov
push
outsb
mov
in
ret
dec
fsubrl
jne
in
repnz
sub
cmc
or
test
scas
repz
xchg
sti
mov
mov
dec
adc
xchg
add
mov
dec
arpl
ret
or
push
shrb
xor
cmp
into
mov
pop
lods
movsb
popf
pop
push
outsb
loopne
inc
inc
add
or
xor
fiadds
test
ds
nop
sbb
sub
lock
js
ljmpw
add
shr
std
xchg
xchg
inc
repz
loop
push
pusha
adc
jg
cmp
cli
subb
or
arpl
mov
jmp
out
gs
pop
popf
cmpl
fistpll
pusha
aad
ret
insb
fdivrs
jge
mov
movsb
clc
inc
xchg
nop
or
and
sti
push
jecxz
add
xchg
roll
mov
lret
int
cmpsl
lods
js
push
and
pop
outsb
outsl
es
testb
roll
sbb
aad
test
rorl
xchg
mov
cmp
rcrl
je
sti
fxch
mov
shlb
xchg
add
jae
xchg
cmp
es
mov
ret
bound
repnz
pushf
sub
std
mov
hlt
xor
stos
dec
jmp
sbb
xor
and
jnp
addr16
or
xchg
loope
and
lods
mov
rcll
push
dec
cmp
pop
jp
cltd
hlt
rorl
inc
dec
mov
lcall
sub
cwtl
pop
lret
call
xchg
add
lods
mov
xchg
fdivl
lds
dec
lods
stos
add
cmp
jl
push
ffree
pop
ljmp
shlb
stc
jno
sar
jl,pn
mov
mov
xor
or
xchg
or
sub
cmpsl
mov
stc
add
dec
scas
sbb
sub
xchg
fwait
jns
sub
repnz
mov
dec
push
pop
ss
movsl
pusha
loope
inc
cltd
fistpl
pop
outsb
xor
xchg
mov
inc
sbb
mov
sub
outsb
sbb
xor
push
cmpl
out
into
or
sbb
mov
dec
xor
mov
lcall
ss
cmp
test
sbb
adc
mov
jp
nop
mov
in
dec
cmp
xchg
lods
jmp
test
sbb
push
imul
add
mov
outsl
stos
imul
fiaddl
dec
mov
add
or
sub
std
adc
mov
push
jne
pop
push
dec
cmpsb
mov
jp
mov
xchg
jle
cmp
popa
sahf
insl
pop
repnz
xchg
shrb
pop
add
rcll
outsb
dec
pop
mov
lret
loope
js
push
mov
fstps
shlb
mov
adc
leave
mov
cltd
push
and
push
fldcw
ja
jle
add
add
in
imul
xor
adc
jne
loopne
inc
jae
adc
jno
add
and
hlt
mov
lcall
fucom
mov
adc
push
xchg
das
dec
push
stos
jb
jb
mov
dec
cmpsl
dec
lods
pop
mov
jns
push
fstp
xchg
popf
enter
dec
pushf
roll
inc
pop
jle
mov
out
mov
sbbb
mov
fdivs
outsl
fwait
push
rcr
mov
bound
jne
xchg
xchg
scas
mov
test
xchg
xor
mov
jbe
cld
in
and
addr16
mov
jmp
jno
mov
imul
xorps
js
push
push
fisttpll
test
iret
cmp
cmpsl
push
mov
mov
push
dec
lret
call
mov
fwait
call
adc
push
out
test
jnp
dec
cld
or
xor
movsl
inc
mov
das
test
dec
in
cmp
testl
mov
outsl
and
mov
jg
test
rclb
je
add
mov
popa
pop
lods
push
ret
pop
loop
inc
enter
pop
fistl
sarl
sub
xchg
sbb
add
test
loope
mull
add
mov
mov
pop
sub
pop
push
aam
scas
test
cmp
cmp
cmpsl
insl
pop
cmc
pop
sub
ja
xor
fs
push
add
sub
fcoml
mov
xchg
mov
div
xor
sti
add
dec
jecxz,pn
test
inc
pop
popa
popa
sahf
cs
jg
inc
ljmp
dec
jno
add
ret
roll
leave
test
ficomps
bound
push
rcr
imul
daa
cltd
pop
pop
cli
mov
sub
add
in
stos
outsb
xor
jecxz
xor
insb
stos
sub
jno
pop
add
cs
addl
push
or
test
mov
mov
fstps
push
ds
fistps
loope
mov
sbb
jne
cmp
mov
sahf
js
jns
or
mov
scas
std
les
jno
lret
or
lock
and
movsl
push
mov
xchg
es
fldenv
cmp
mov
add
xchg
sub
sahf
cmp
adc
lret
cmp
gs
push
inc
jnp
jbe
mov
pop
pop
aas
inc
adc
lahf
insl
jo
pop
xor
sti
mov
cmp
pusha
lret
pop
xchg
inc
icebp
je
and
lock
mov
fstl
repnz
mov
jne
nop
push
das
daa
or
push
mov
dec
xchg
sbb
pop
in
int3
mov
pusha
int3
jmp
test
jns
fistpl
pop
loop
mov
lods
cmp
xchg
fsts
mov
add
and
xor
lahf
loop
pop
lods
fildl
push
aas
js
mov
or
fcomi
xor
pop
aaa
js
aam
fisttps
int3
mov
stc
pop
les
test
inc
ret
mov
daa
xchg
pushl
mov
icebp
mov
call
mov
movsb
inc
xor
xor
fstps
sub
xor
xchg
inc
lods
icebp
jne
dec
popa
cs
test
rclb
pop
fldl
leave
dec
icebp
mov
inc
gs
aad
mov
xor
sub
pop
fs
test
jle
xchg
imull
scas
cmp
sub
pop
push
ja
sahf
dec
repnz
movsb
lods
test
mov
mov
jns
adc
push
aas
inc
orl
icebp
add
js
push
subb
hlt
sub
sub
fbld
ja
pop
scas
ja
push
adc
aas
push
xchg
out
jl
adc
in
mov
ret
fdiv
test
jle
jecxz
pop
jae
icebp
jno
in
pop
mov
mov
xor
dec
es
testb
test
and
cmp
sbb
pushf
sub
test
je
and
inc
dec
or
fsubrs
xor
or
push
lahf
xchg
cmc
push
pop
and
push
aaa
scas
lock
aas
cmpsb
dec
xor
cmpsl
fcoml
mov
xchg
or
repz
arpl
lcall
push
jno,pt
lock
aam
shlb
inc
insl
push
mov
ficomps
or
pop
mov
xor
vunpcklps
daa
push
pop
loop
mov
fs
out
int
xchg
push
idiv
push
shl
dec
ret
ss
hlt
jp
jae
pop
jb
fstpl
sub
jnp
jbe
push
xchg
mov
in
cltd
rcrb
repz
mulb
mov
dec
xchg
adc
fsubrs
icebp
bnd
aad
cmp
pop
pop
mov
xor
enter
add
jne
xor
sbb
pop
gs
mov
imul
shll
pop
xchg
popa
into
or
sub
mov
stos
popf
je
pop
xchg
xor
cmp
xor
sub
sarl
xchg
fildl
idivl
xchg
leave
andb
testl
out
jmp
fldenv
lcall
jmp
shrb
xor
pop
inc
push
mov
pushf
mov
popa
sub
in
mov
mov
and
lret
inc
ja
or
mov
xchg
test
stc
jo
lods
inc
hlt
jne
mov
pop
mov
insl
sub
sbbb
xchg
mov
in
test
hlt
loopne
in
sahf
jno
mov
dec
adc
sbb
mov
sub
jle
mov
adc
cmp
xchg
xor
cmc
jl
loope
roll
pop
pop
int3
fdivl
pop
cmp
bound
sar
shrl
psrld
iret
pop
es
outsl
jg
cli
js
sbbb
add
ret
loop
xor
fldcw
pop
data16
in
fnsave
pop
jp
idivl
popa
or
arpl
mov
insl
jnp
sbb
andb
mov
inc
push
push
in
jp
int3
rolb
inc
mov
cltd
popf
shr
push
sub
pop
ror
ret
insl
push
scas
adc
inc
sub
ja
jbe
fnstenv
filds
int3
aad
popf
inc
test
fstps
push
push
dec
les
fildll
pop
cmp
mov
jp
stos
mov
pop
xor
loopne
in
mov
dec
in
sub
cli
push
cld
add
daa
dec
xor
lds
es
je
fwait
imul
push
loope
mov
dec
sbb
lock
jmp
pop
push
bnd
fisubs
mov
sbb
clc
out
aas
ljmp
pop
add
sub
mov
xchg
dec
insb
aad
jg
mov
sub
xchg
push
mov
mov
jmp
inc
adc
in
daa
imul
sarl
les
in
inc
out
jae
add
mov
ss
dec
sub
cmpsl
daa
test
das
sub
sub
das
out
mov
and
insl
add
in
dec
xchg
dec
decb
pusha
cmp
push
lret
stos
bound
push
push
add
add
jg
leave
adc
push
or
fisubrs
jo
jle
dec
fsubl
or
lock
shrb
ds
dec
xor
or
hlt
test
xor
xor
and
stc
pop
out
and
sbb
jecxz
aas
xchg
lret
xchg
and
or
jl
inc
sbb
push
push
pop
in
iret
xchg
les
push
mov
addr16
mov
call
dec
mov
sub
fimull
fwait
addb
adc
idiv
mov
jl
cmpsl
mov
ja
inc
lret
ja
insl
mov
mov
fidivrs
push
cmp
test
sahf
pop
daa
std
insl
lods
call
notl
movsb
mov
insb
cli
int
pop
cmp
cmp
mov
outsl
icebp
jno
mov
xchg
ret
xor
sbb
mov
xor
shl
mov
ror
and
push
adc
mov
jns
sub
inc
insb
mov
icebp
scas
int3
and
sbb
sub
inc
and
jns
test
and
mov
loop
jnp
xchg
xchg
bound
or
das
cmp
and
pop
testl
mov
mov
ja
in
add
jmp
pop
enter
adc
popa
mov
lea
rorl
inc
dec
fistps
enter
stos
sub
xor
jne
int
dec
idivb
push
inc
jae
mov
sbb
je
mov
sbb
and
gs
mov
add
ds
xchg
popa
arpl
dec
jle
dec
pop
lods
int
pusha
outsb
mov
xchg
push
in
in
push
addr16
mov
fsubr
inc
jnp
jge
addb
and
arpl
adc
int
cmp
frstor
cmp
xor
inc
sbb
cmp
lock
hlt
mov
scas
fdivrl
cmpsb
stos
mov
aad
mov
mov
pop
lret
cmp
xchg
inc
pop
cmp
addr16
lea
push
js
repz
mov
jmp
stc
pop
movsl
mov
xor
cmpsb
shlb
mov
xchg
add
xchg
sarb
dec
adc
or
mov
push
mov
inc
and
aas
shl
adc
push
mov
inc
push
push
imul
leave
dec
fisttpl
and
push
iret
and
ljmp
or
xor
push
ljmp
scas
jno
mov
loopne
sarl
jecxz
mov
cs
pop
xlat
pop
cmpsl
lret
popf
inc
inc
pop
mov
jp
pop
adc
out
mov
sub
dec
mov
add
mov
pop
cmp
out
and
lret
or
es
xchg
ja
repz
add
popf
cmp
mov
psubusb
stos
sti
or
mov
sbb
cmpsl
into
jnp
outsb
push
fbld
icebp
xor
cmp
pop
test
push
push
mov
or
roll
cmc
mov
xchg
sub
adc
push
pop
pop
lods
mov
sub
imul
gs
int
adc
sti
fldt
test
ret
jo
negb
mov
movsb
test
add
pop
xlat
rep
pop
push
cmp
gs
bound
sub
daa
cmp
repnz
pop
test
movsl
mov
jbe
movsl
clc
int
mov
mov
lret
insb
sub
mov
test
mov
sbb
addr16
jge
dec
and
add
adc
mov
daa
scas
xchg
jae
mov
mov
inc
out
data16
add
jmp
jmp
push
inc
fistpl
aaa
pop
pop
divb
icebp
cmp
iret
pop
stc
xchg
scas
repnz
xor
dec
ss
sbb
shrl
jns
sbb
fldl
mov
mov
fs
pusha
bound
popf
mov
xchg
xchg
or
xor
fcomp
sub
push
and
cmp
popa
insb
cld
dec
xor
sbb
xchg
cmp
mov
cmc
push
sbb
je
pop
inc
stos
mov
push
dec
or
popa
sbb
xor
mov
push
jne
or
cltd
enter
inc
ret
adc
fsub
xor
fmul
stos
xor
rcll
mov
jmp
mov
push
shlb
add
xor
sti
add
cmpl
and
fimull
out
mov
scas
adc
cli
fiadds
inc
cltd
lods
fs
fcos
sub
fcmove
ret
inc
cwtl
clc
mov
mov
push
inc
in
out
or
into
xor
jecxz
leave
pushf
sbb
cwtl
out
mov
inc
or
pop
jge
out
popa
push
sbb
add
xor
mov
fsubs
addr16
sti
cmpsb
xchg
mov
mov
in
or
cltd
outsb
bound
paddd
shl
sbb
jns
cmp
loop
mov
dec
jne
scas
fbstp
sub
cmp
cmp
leave
xchg
dec
lahf
pop
data16
inc
xor
and
ficompl
test
and
jno
or
or
jp
imul
push
add
xor
pop
add
add
outsl
push
add
add
mov
add
cmc
add
add
pop
and
das
adc
jg
add
add
mov
add
add
in
add
add
aad
add
dec
aas
jge
add
add
add
add
sahf
jge
add
add
add
in
add
add
xor
pop
add
addb
stos
adc
mov
clc
clc
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
add
add
add
sbb
push
jb
outsb
pop
sub
add
add
in
addb
add
push
add
add
or
add
add
jl
add
add
lods
ret
add
pushf
push
add
add
int3
mov
cmp
add
add
insb
add
add
add
and
loop
add
cwtl
outsb
add
es
fs
lock
mov
or
jecxz
sbb
jmp
inc
jmp
fcoms
add
sbb
mov
sbb
add
std
adc
incl
lcall
push
int3
das
cld
push
adc
jne
mov
ja
mov
pop
fst
rclb
and
push
add
xlat
incl
add
roll
push
add
xor
movsl
and
xor
mov
xor
cld
loopne
popf
std
pop
add
xorl
xchg
add
enter
int
push
std
test
les
cmpsl
lock
push
adc
mov
add
lea
notl
inc
add
add
sbb
add
add
dec
and
add
add
in
addb
add
lcall
or
outsl
jb
push
add
shlb
xchg
insl
add
dec
in
gs
gs
add
or
js
push
pop
mov
push
insb
add
loop
add
xchg
fidivs
outsb
gs
je
je
push
add
add
add
in
addb
add
fcoml
add
add
add
add
jl
add
add
lods
ret
add
pushf
xchg
add
add
int3
mov
sub
repnz
sar
test
or
insl
pop
adc
dec
inc
lcall
popf
rcll
xlat
add
pushf
mov
outsb
sbb
mov
and
mov
mov
jns
repnz
dec
push
icebp
scas
push
jns
mov
mov
test
sbb
push
fistl
xchg
lcall
adc
push
sbb
mov
repz
mov
fsubrl
mov
pop
leave
push
mov
xor
cltd
popa
in
mov
pop
mov
pop
pop
out
inc
mov
addr16
xor
scas
pop
leave
addl
sbb
fldt
and
sbb
out
push
ljmp
adc
push
push
inc
push
lds
rorl
sub
mov
mov
pop
cmp
or
insl
inc
add
dec
popa
ljmp
fsts
adc
push
lea
xchg
int3
mov
sbb
mov
mov
add
in
mov
test
test
add
xchg
xlat
xor
add
push
xchg
or
aaa
mov
ret
push
mov
aam
lods
pop
push
fimull
and
js
ljmp
imull
shrl
rcr
iret
push
xor
or
cld
xor
adc
push
das
mov
out
inc
add
cmp
out
js
movsl
cmp
inc
jge
add
dec
xor
adc
dec
push
fwait
sub
mov
repnz
dec
dec
xlat
push
arpl
in
jb
out
mov
call
xchg
pop
insb
icebp
pop
add
sub
fsub
xor
mov
mov
mov
inc
jb
fnsave
cmp
ffree
sub
sub
jecxz
gs
and
ss
shlb
xchg
icebp
ret
pushf
test
dec
jmp
adc
mov
inc
mov
fists
incl
int3
lahf
dec
xchg
sbb
jl
les
or
mov
mov
int3
rorb
pop
xor
xchg
into
adc
dec
mov
leave
push
cmpsl
outsb
imul
cmp
or
outsl
out
aam
xchg
add
imul
mov
pop
mov
dec
in
jmp
jbe
xor
test
repnz
stos
mov
or
pop
std
rcll
mov
divl
pop
popa
lcall
adc
inc
and
test
jmp
or
or
jp
jns
and
jg
fs
dec
es
adc
push
test
jmp
ret
ljmp
xchg
orb
je
or
ds
mov
insl
pusha
sarb
call
js
xor
nop
push
jg
fwait
rcrb
insl
rorb
adc
sub
cmp
negb
ficompl
inc
xchg
in
mov
icebp
jg
or
xchg
rcll
out
push
push
cmp
inc
lods
sbb
mov
movsb
xchg
es
fmuls
outsb
lcall
mov
lahf
xchg
out
cmpsl
stos
hlt
xchg
aas
xchg
lds
insl
lods
pop
loop
fldenv
leave
lea
adc
sub
pop
pushf
jmp
cli
jp
scas
aaa
repz
dec
dec
dec
out
xor
mov
gs
rolb
out
and
xchg
mov
sub
sbb
cmp
nop
jge
dec
out
mov
sub
jo
mov
stos
pop
add
mov
adc
pop
or
pop
push
xchg
inc
inc
sbb
pop
pushf
pop
cmpsl
gs
xor
ljmp
cmp
pop
popf
xchg
add
clc
dec
aam
xchg
dec
dec
mov
dec
enter
pop
adc
add
fcomps
xchg
dec
xchg
in
push
decb
pop
arpl
add
mov
cmpsl
bound
sbb
negl
mov
mov
fistl
jne
pushf
inc
inc
pop
clc
sub
jmp
test
call
lahf
ret
js
outsb
mov
pop
fidivrs
fwait
lcall
cld
sahf
push
repnz
pop
xor
and
sub
sub
push
mov
xchg
stc
outsl
cwtl
cmpsl
xor
pusha
inc
cmpsl
adc
cmp
and
rolb
int
nopl
sbb
jmp
mov
ror
push
call
inc
pop
jo
inc
jno
or
fldenv
mov
lods
dec
or
loop
iret
js
inc
push
mov
push
mov
push
mov
push
jno
jnp
jne
stc
int
dec
jmp
sbbl
cmpl
xor
in
movsb
outsb
xlat
clc
gs
sbbb
into
into
bound
pop
orb
arpl
or
dec
inc
test
sbb
ret
std
bound
bound
and
sub
repz
js
push
pop
cmc
cmp
aas
xor
push
lods
ds
mov
sbb
in
jle
xlat
mov
xchg
das
fstl
in
test
pop
fcmovne
dec
or
dec
mov
pop
adc
sbb
add
nop
inc
test
movsl
pop
dec
movb
push
shll
cmpsl
add
unpcklps
dec
sahf
and
dec
pop
push
ja
pop
mov
pop
call
mov
push
or
cli
fnstenv
adc
pop
cmpsb
into
stc
xor
fwait
mov
leave
js
mov
int3
or
int3
cli
das
push
int
int3
sub
cld
shl
pop
mov
in
xchg
hlt
cli
dec
push
xor
scas
add
mov
repz
int3
rolb
lods
dec
int
pop
mov
fstps
inc
mov
movsl
cmp
popa
icebp
xchg
pop
bound
ficomps
stos
in
adc
scas
mov
and
adc
cld
daa
jp
and
mov
dec
cmp
push
sub
hlt
fcomps
iret
scas
pop
stc
enter
mov
mov
movb
arpl
sbb
mov
rorb
or
sub
cmp
dec
insb
sbb
dec
rcl
and
test
loope
in
ds
rcr
xchg
adc
pop
lret
cmp
xor
xchg
aaa
mov
repz
pop
push
aaa
mov
aas
sub
fimull
out
test
mov
cli
out
adcb
fisubrs
mov
and
gs
les
jns
in
sbb
scas
sub
dec
loope
es
dec
enter
add
out
mov
call
and
stos
pop
stos
icebp
xchg
mov
loope
pusha
cli
into
sbb
mov
sub
and
mov
adc
dec
icebp
and
cltd
iret
repnz
aas
pop
mov
jno
test
sbb
sbb
cmp
fstp
arpl
daa
call
inc
insl
jecxz
hlt
enter
mov
mov
push
pop
mov
push
sbb
sahf
dec
lahf
js
sbb
das
xchg
sahf
mov
je
cltd
iret
dec
shll
push
adc
mov
pop
xchg
cmp
mov
mov
ficoml
mov
jle
incl
jp
fcmovu
xchg
mov
xchg
mov
and
into
mov
cmc
stos
dec
mov
shrb
ss
mov
sub
imull
sbb
xlat
and
cwtl
push
jnp
adc
subb
mov
aaa
jmp
and
and
das
cld
jb
mov
lds
mov
inc
pop
xor
out
mov
lods
sbb
les
es
push
pushf
pop
lret
jno
push
xor
xchg
stc
xchg
or
push
nop
je
ud0
adc
push
mov
call
jge
in
mov
repnz
jecxz
xchg
call
sub
lds
or
icebp
add
sub
xchg
les
mov
cmp
push
mov
jb
mov
or
dec
roll
dec
out
js
ljmp
nop
push
test
mov
loopne
jns
daa
repz
cmp
jb
sbb
ret
mov
xor
int
cmp
je
pop
xorl
fyl2xp1
aad
mov
and
mov
shlb
sub
inc
xchg
ja
adc
and
sahf
add
test
sti
xchg
cltd
inc
ret
jmp
jge
pop
or
stos
dec
stos
dec
scas
mov
push
es
jl
shlb
add
subl
sbb
js
push
jne,pt
mov
andb
icebp
sub
jmp
arpl
inc
stc
cmp
pusha
int3
mov
sbb
jne
xor
lret
pop
lock
inc
cltd
insl
pop
jnp
fprem
and
loop
ljmp
mov
mov
pop
and
dec
sub
inc
push
lret
cmp
in
out
push
cltd
push
adc
std
outsb
push
in
lret
or
mov
or
adc
xchg
aam
lods
mov
in
add
inc
stos
dec
sbb
mov
or
push
cmpl
add
ja
mov
outsb
mov
jmp
mov
daa
clc
insb
in
or
sub
scas
outsl
repnz
push
cli
sti
xchg
xor
jl
xchg
add
inc
cmpsb
popa
loope
or
mov
add
nop
dec
mov
in
stc
xchg
xchg
mov
icebp
pop
decl
fwait
jbe
fldenv
xor
in
push
jbe
pop
push
sbb
cli
popa
push
cli
sub
xchg
mov
std
mov
lahf
addr16
inc
push
sub
mov
loope
cmpsb
xor
ficompl
test
pusha
dec
jl
aas
ljmp
stc
or
mov
push
jae,pn
or
xchg
imul
pop
lock
mov
push
sub
pop
aaa
cmp
push
lock
push
push
mov
mov
roll
int
in
cmp
inc
pusha
popa
idivw
loop
mov
lock
cld
push
popf
arpl
adc
mov
add
or
cmpsb
mov
cmp
mov
xchg
scas
inc
sti
ret
mov
movsb
dec
retw
lock
loop
mov
inc
sub
int3
outsl
dec
std
lock
outsb
je
into
xchg
fiadds
pusha
mov
xchg
je
jl
xchg
jbe
movsl
or
out
dec
jbe
imul
stos
bound
cli
call
add
xor
nop
jns
mull
xlat
inc
fs
fisubl
push
lods
fadds
xchg
pop
cmp
ss
ja
lea
arpl
cmp
mov
idivb
mov
inc
add
cmpl
mov
popa
lods
xchg
adc
mov
jl
fisttpll
je
xor
das
dec
sub
xor
stos
sub
js
imul
push
jno
sub
dec
prefetcht1
imul
cmp
push
dec
adc
pop
push
push
dec
pop
add
xchg
inc
sub
aaa
jmp
int
sbb
pop
bound
dec
push
add
sub
pushf
ljmp
outsl
jl
adc
int
into
mov
push
add
or
or
mov
push
adcb
cmp
je
das
or
fwait
test
pop
dec
adc
loopne
stos
inc
mov
and
inc
cwtl
push
add
lret
pand
mov
jle
inc
mov
jae
orb
scas
mov
call
adc
fnsetpm(287
test
xor
add
cmp
mov
sahf
push
imul
xor
dec
xor
pop
out
loope
rclb
push
mov
jle
push
out
xlat
adc
ret
out
xchg
pop
xor
imul
push
roll
adc
push
in
jns
repz
icebp
cs
mov
mov
bound
inc
sbb
mov
dec
fldt
int3
adc
pusha
push
adc
add
sahf
lahf
out
dec
fwait
mov
dec
xchg
lds
push
and
mov
cmpsl
mov
test
outsl
lock
xchg
and
popf
mov
mov
lods
adc
in
xorb
cmp
subl
mov
fucomi
fsubl
sbb
idiv
or
xor
or
mov
cmp
js
add
sbb
pop
gs
lods
rcll
xor
es
adc
mov
cmp
test
test
and
add
add
int3
push
sub
adc
arpl
lods
imul
outsl
push
aas
imull
jle
add
mov
repz
addr16
mov
xor
lea
aam
in
hlt
jp
mov
adc
pop
and
pop
cmpsb
jbe
xor
sub
incl
in
lcall
adcl
add
cwtl
mov
or
std
dec
call
mov
les
sbb
sarb
inc
notb
or
sbb
arpl
push
mov
test
mov
push
ror
and
in
into
push
mov
stos
icebp
test
out
cld
jns
mov
and
jo
inc
in
lret
or
mov
popf
inc
jg
xchg
fcmovnb
test
lcall
pop
add
jg
into
add
pop
sbb
or
ja
mov
dec
jle
movl
add
mov
inc
jmp
jnp
fcmovb
test
lds
dec
dec
in
xor
dec
and
fsts
js
mov
int3
push
jmp
jne
xchg
xor
pop
jl
in
jae
scas
inc
in
xchg
pop
cltd
pop
push
push
mov
icebp
fmul
out
out
roll
inc
scas
adc
dec
xchg
iret
out
stc
sub
sbb
add
loopne
mov
scas
loope
out
nop
xor
stc
hlt
inc
xchg
jb
inc
sar
and
adc
mov
sbb
loop
sahf
in
ret
aas
mov
cld
je
xchg
pop
sub
lods
imul
mov
cmc
xchg
shlb
fwait
xorl
adc
cmp
and
clc
int
ret
aas
daa
mov
testb
xor
xor
or
cli
sbb
jecxz
test
adc
lret
or
jecxz
dec
rcl
shl
bound
cmp
jmp
pop
mov
sub
dec
sbb
imul
icebp
mov
sbb
jns
sbb
jg
xchg
scas
jl
ljmp
push
pushf
cmpsb
test
adc
sarl
mov
jmp
cmpsb
cmc
ret
jecxz
in
cmp
inc
adc
sub
pop
hlt
cmpsl
pushf
push
mov
mov
outsl
mov
outsb
add
cmpsl
dec
jno
jp
pop
jg
fistl
insb
insb
dec
shll
dec
adc
pop
mov
mov
jecxz
idivl
fcompl
cmp
lret
lds
xlat
jb
adc
or
int
push
data16
jae
stc
or
les
push
xchg
test
sahf
fstps
icebp
add
scas
fdivs
fildl
adc
data16
movb
push
or
rcrl
or
imul
add
push
sar
scas
mov
ret
add
movsl
movsb
sbb
mov
in
les
iret
push
and
cmp
xorl
fimuls
rsm
dec
cmp
out
subb
push
ja
xchg
dec
add
dec
push
push
lds
mov
inc
lods
stos
or
and
test
and
xchg
mov
mov
pop
cmp
sub
cmp
pop
fistpl
mov
mov
dec
jmp
adc
lea
nop
jb
mov
ret
pop
inc
jae
repnz
add
das
xor
scas
js
lret
xor
cltd
cvtdq2ps
shl
fwait
adc
mov
adc
or
pushl
popaw
push
push
and
mov
mov
mov
scas
inc
ret
test
xchg
xor
pusha
cmp
imul
pop
xchg
jo
xor
push
daa
fs
fiadds
jmp
imul
popf
cmp
cmp
pop
sti
and
lods
mov
mov
jmp
inc
insb
jg
outsl
inc
hlt
push
mov
and
add
pop
and
sbb
jnp
cmp
add
jg
rorb
daa
inc
fld1
lods
movsl
scas
pop
add
adcl
sbb
aad
enter
jle
push
mov
mov
cmpsl
add
loop
or
popa
repz
jecxz
pop
rcr
jle
ret
dec
stc
push
aas
xchg
fnsave
jge
jge
sarl
mov
xchg
enter
mov
inc
js
dec
enter
mov
icebp
sub
insb
cmp
dec
xor
ljmp
flds
push
ss
or
dec
dec
in
jo
or
jb
and
inc
dec
push
shll
xchg
mulb
push
addb
je
lahf
les
cmp
and
sbb
ret
cmpsl
mov
lds
mov
mov
daa
pop
mov
movsb
aaa
test
lret
cltd
in
xchg
cld
ret
or
filds
mov
pop
add
aas
scas
jns
cltd
sbbl
adc
and
iret
rcll
cmp
mov
push
pop
dec
mov
dec
lret
data16
xor
imul
fadd
cld
xchg
dec
inc
pusha
inc
imul
pop
inc
es
outsl
lods
dec
sar
mov
fsubrs
pop
movsl
adc
fs
xchg
es
test
jle
sbb
pop
icebp
jae
cmpsl
sub
out
stos
shl
int3
or
mov
mov
fstp
hlt
or
das
dec
and
insl
mov
int
stc
rorb
pop
rclb
rclb
xlat
dec
add
adc
mov
in
cwtl
outsl
jecxz
movlps
loopne
mov
inc
and
jg
jb
pop
sub
sbb
push
push
push
fld
clc
or
bound
pop
and
lret
std
mov
stos
or
inc
fcom
adc
add
inc
pop
xlat
mov
ficompl
mov
popfw
jmp
inc
cmc
sbbl
jae
ret
mov
aas
and
stos
fdivrl
and
in
and
hlt
xor
xor
push
jae
inc
sbb
and
mov
pop
jne
arpl
mov
and
aam
mov
and
loop
std
sub
adc
jns
repz
aas
fnstenvs
dec
test
mov
shll
push
sbb
add
push
push
pop
and
and
cmp
sbb
sti
push
js
lret
mov
ss
mov
rclb
and
inc
and
adc
sub
jl
mov
out
in
and
mov
arpl
xor
fisttpl
sub
or
sub
mov
into
dec
mov
loopne
xchg
movsl
dec
mov
jnp
mov
imul
outsl
adc
in
inc
into
push
jecxz
sarl
sti
sub
cmc
xchg
stos
cmc
scas
jp
jmp
push
dec
xor
adc
cs
mov
mov
cld
inc
mov
aaa
pop
orb
rolb
xor
dec
pop
dec
mov
cmp
ja
mov
mul
and
imul
lea
mov
cmp
mov
nop
sti
test
mov
push
lds
subb
mov
movsl
mov
repnz
hlt
pop
in
cli
in
scas
gs
sub
mov
and
lock
cs
cli
je
call
push
ljmp
leave
sbbb
jns
imul
movsb
out
dec
mov
dec
pop
push
or
mov
xor
mov
jl
push
out
mov
mov
sub
or
dec
add
push
adc
mov
sub
mov
push
push
mov
mov
outsb
inc
rcrb
cwtl
lcall
clc
movsb
fwait
subb
or
xor
or
addr16
mov
xchg
testb
nop
notl
testl
lds
imul
loope
push
fucom
movsl
pop
mov
sbbl
int
int
mov
lds
popa
mov
xor
mov
adc
jge
cmp
push
mov
sub
inc
repz
in
insb
cmp
mov
mov
jne
inc
scas
pop
sub
cmp
rcll
scas
ret
xor
out
idivl
cltd
push
xor
fbld
push
loopne
adc
and
jg
adc
mov
es
xchg
fnstsw
shl
in
scas
push
xor
cli
dec
sbb
jne
mov
int3
and
pop
loop
jmp
sub
arpl
mov
jecxz
lds
in
cmp
arpl
adc
pop
rcrl
add
inc
lods
movsl
clc
rorb
dec
enter
mov
ret
adc
push
xchg
pop
cmp
mov
xchg
mov
out
cmc
add
fstl
stos
dec
fidivs
pop
out
lcall
adc
add
ret
pop
outsb
sbb
das
popa
adc
scas
aaa
sarb
cli
shrl
adc
incl
xor
xchg
or
test
push
and
add
push
sub
data16
enter
js
lret
lods
push
jle
lcall
mov
fcompl
js
mov
xor
loopne
pop
add
or
dec
outsl
iret
inc
mov
je
add
and
push
cmpsl
pop
xor
or
outsl
mov
outsb
fs
xlat
add
sbb
lahf
orl
or
neg
popf
and
pop
rolb
push
aad
xchg
lea
jne
fisttpl
jne
push
pusha
lods
mov
in
ja
mov
inc
int3
inc
xchg
mov
inc
jne
idiv
xchg
outsb
es
dec
sbbb
movsl
jbe
mov
roll
push
jo
fidivl
hlt
add
mov
cmc
jbe
fs
mov
jmp
sbb
xchg
push
and
call
xor
mov
int3
hlt
and
daa
mov
insl
nop
iret
out
xor
aam
jle
in
arpl
xchg
xor
inc
and
or
cwtl
xor
addr16
mov
cmpsb
gs
xchg
fcompl
negl
push
jp
js
pushf
adc
jmp
mov
fs
cld
dec
sbb
add
mov
bound
jnp
push
xchg
adc
fcmovnb
cltd
push
jae
inc
mov
aaa
mov
adc
testl
idivb
leave
outsl
cmpsb
jne
loope
xchg
inc
mov
mov
cli
cmp
dec
fdivl
dec
mov
adc
sub
sub
pop
imul
repnz
popl
insl
pop
cs
imul
or
cmp
dec
jecxz
test
sar
fscale
mov
pop
shl
ret
cmp
in
fs
arpl
pop
loop
stos
inc
repz
nop
pop
push
sar
sarb
cmc
mov
pop
xchg
mov
stos
fucomip
rorl
and
inc
xchg
stos
add
xchg
add
sbb
cmp
pop
out
loopne
lds
jle
outsb
in
mov
mov
push
hlt
dec
aad
mov
pop
mov
inc
cwtl
fwait
loop
mov
notl
ds
push
adc
inc
and
cld
orb
jno
outsl
or
into
fisttpll
jno
cmp
or
xchg
cmp
lea
stos
jne
push
aad
rorl
jb
mov
test
jmp
inc
stos
pop
push
mov
jno
sub
jno
lds
movsb
fstcw
mov
xchg
inc
neg
mov
mov
lret
cmp
or
pop
jne
andb
sbb
xlat
fbstp
xor
add
sti
or
bound
pop
rep
pop
mov
sbb
popf
xor
pop
adc
inc
sbb
mov
dec
dec
xchg
mov
adc
add
fsubs
insl
mov
andl
xor
in
push
popa
adc
roll
loope
pushf
pop
insl
jecxz
sbbb
mov
jnp
or
dec
cld
xor
sbb
in
insl
les
mov
popf
outsl
inc
mov
add
or
add
add
add
pushf
xchg
add
add
int3
mov
cmp
add
add
insb
add
add
add
add
add
cld
mov
add
add
ret
add
sbb
add
add
add
mov
add
addb
add
fcoml
add
add
add
add
cld
xor
ret
add
jmp
mov
jo
sar
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
andl
andl
push
push
movl
movl
movl
movl
mov
call
push
push
mov
call
mov
mov
push
movl
movl
mov
movl
call
ret
push
mov
sub
push
pushl
call
mov
pushl
xor
movl
pushl
mov
mov
mov
movl
movl
movl
movl
movl
movl
movl
call
add
test
jne
push
pop
jmp
push
push
push
pushl
call
mov
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
push
lea
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
jo
add
pushf
loop
add
loop
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
aas
jecxz
add
add
and
add
sbb
add
adc
add
or
add
add
add
cld
loop
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pop
jecxz
add
add
insb
jecxz
add
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
clc
jecxz
add
in
add
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xchg
in
add
add
lods
in
add
add
in
add
in
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
lock
add
in
add
in
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
push
out
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
out
add
add
add
add
cld
out
add
out
add
out
add
out
add
out
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
inc
out
add
add
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
fsub
add
clc
out
add
call
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
je
add
jl
add
test
add
mov
add
xchg
call
add
movsb
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
shr
add
fsubr
add
call
call
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
jae
jb
jae
outsb
add
inc
add
pushl
call
push
push
push
call
add
int3
mov
xor
push
push
call
push
push
push
push
push
mov
call
pushl
mov
pushl
pushl
push
pushl
call
push
push
call
pushl
call
pop
push
pushl
push
push
pushl
call
push
push
pushl
call
pop
push
pushl
push
call
push
push
call
pop
xor
add
dec
jae
and
add
add
add
push
add
add
rcrl
mov
popa
out
add
js
mov
add
orl
jle
sbb
sbb
mov
sbb
sbb
add
add
inc
push
add
and
popa
das
push
dec
mov
outsb
imul
push
cld
add
sti
jecxz
aam
leave
in
js
mov
adc
mov
sahf
mov
mov
dec
scas
test
add
in
or
or
call
push
leave
in
shl
push
lea
add
push
push
dec
jns
adcb
sbb
push
decl
call
mov
loopne
mov
mov
xor
push
loopne
icebp
or
shrb
push
pop
inc
lret
mov
call
or
dec
adc
push
add
roll
lods
loope
lea
jo
enter
add
adc
push
ljmp
adc
mov
add
add
pop
add
add
add
push
out
sbb
sbb
sbb
inc
add
add
test
add
inc
gs
add
or
inc
insl
push
je
push
add
outsb
cmc
and
gs
dec
add
inc
lret
add
je
mov
insb
imul
inc
ret
outsb
jae
push
push
add
jne
dec
gs
fs
add
add
add
add
mov
add
pop
add
add
rorl
mov
popa
out
add
add
mov
add
add
orl
jle
add
ret
dec
imul
push
popf
cmp
sub
loope
xor
push
out
add
insb
aaa
pop
mov
push
push
jmp
adc
fisubrl
mov
xor
xchg
jae
mov
add
insl
mov
xor
add
xor
push
andl
push
xor
and
inc
xor
test
pop
hlt
add
fcomi
jnp
pop
leave
inc
dec
jmp
inc
je
stos
mov
push
icebp
ret
push
lcall
mov
repz
push
mov
dec
pop
shld
in
push
test
into
aaa
lds
adc
sub
mov
mov
outsl
mov
pop
fimuls
inc
sti
mov
lock
dec
loopne
adc
pusha
sbb
clc
lret
test
push
imull
xor
out
int3
rcrl
pop
stos
movsl
int
ds
in
outsl
pop
es
mov
aas
push
je
inc
pusha
cli
insl
fwait
adc
ds
cmc
popf
mov
outsb
loop
inc
shrb
lea
push
lock
cmp
inc
or
addr16
lds
jne
mov
and
lods
cwtl
xchg
pushf
mov
push
imul
pusha
cmp
mov
xor
xor
mov
xor
add
mov
pushf
mov
loope
adc
dec
cmp
lcall
jl
inc
add
xor
mov
push
xorl
jne
test
rol
mov
push
push
jbe
jns
decb
cmc
lret
dec
mov
stos
stos
mov
sub
and
gs
inc
je
add
int
xchg
push
out
xorl
mov
sti
lods
in
jmp
js
test
cmpsb
js
ret
jmp
decb
push
and
hlt
jge
xchg
nop
mov
out
or
call
sbb
out
cmc
cmp
jp
cmpsb
mov
and
lahf
ljmp
lds
cltd
mov
cltd
stc
xor
lahf
leave
insb
push
pusha
mov
stc
mov
inc
jne
or
mov
pop
xchg
sub
mov
jmp
cmp
das
scas
ds
imul
in
cmp
ret
adc
pop
adc
popf
xor
outsb
aaa
sub
mov
pop
mov
loopne
jno
cmp
mov
and
add
mov
sub
loopne
fst
icebp
and
mov
jmp
add
outsl
cmp
in
loope
negl
in
pop
add
outsb
int3
iret
movsb
daa
mov
pop
popf
xchg
inc
push
fldt
setp
rolb
lahf
mov
sti
and
lea
xchg
in
jl
mov
mov
stc
lock
aaa
cmc
movsl
push
cmp
sbb
repz
fstl
sub
fs
int
test
rcl
outsl
adc
pop
push
adc
in
adc
lret
cwtl
push
shll
xchg
ja
cmp
cmp
pavgb
mov
xchg
sbb
sbb
ds
outsl
nop
cld
xchg
roll
push
adc
loopne
push
adc
mov
orl
or
aam
mov
and
in
dec
cmp
ljmp
arpl
mov
xchg
loope
xchg
pop
cmpsb
jns
mov
adc
into
cmp
mov
cltd
sub
sarl
sti
flds
mov
or
jg
movsl
sbb
fsubl
mov
fnstsw
loopne
out
sub
pop
pusha
sti
pop
add
and
ret
adc
aas
lock
sub
add
xor
or
push
cmc
push
add
jp
int
cli
rclb
rcl
inc
xchg
jp
xchg
rorl
std
inc
mov
lcall
sahf
call
popa
enter
shrb
pop
out
and
sub
sub
andl
dec
ljmp
ret
pop
cwtl
pop
dec
leave
mov
leave
je
mov
lock
addr16
test
xorl
pop
cltd
add
mov
mov
cmp
sbbl
dec
push
inc
sbb
call
jecxz
sub
pop
ret
mov
cmp
push
jg
xor
test
aam
shlb
stos
clc
aam
ficomps
mov
icebp
lods
xor
repnz
cmp
dec
stc
pop
mov
fwait
enter
pop
mov
sub
inc
cmp
lcall
xor
or
adc
xor
aas
int3
adc
or
mov
pop
mov
in
stos
ret
inc
and
pusha
xchg
out
pop
cmpsl
jne
lods
nop
ja
xor
cwtl
add
jb
scas
negb
test
and
nop
popf
cmc
mov
add
cltd
sub
iret
xchg
mov
jne
add
aas
pusha
lock
daa
jo
add
pop
sbb
std
mov
movsl
stc
aaa
pop
add
imulb
jge
pop
adc
cmpsb
shr
pop
imull
mov
jg
into
in
lea
cmp
fwait
repz
shrl
imul
sub
mov
xchg
jle
lcall
fucomi
sub
je
ss
jg
mov
mov
data16
orl
inc
mov
adc
imul
or
shlb
outsb
push
cltd
add
pop
fnstcw
jo
lods
fwait
lods
rorw
fs
add
add
pusha
pop
sub
mov
shrb
mov
sbb
mov
and
mov
mov
jecxz
sbb
jae
ret
mov
insb
mov
lds
aas
xor
in
sub
jg
mov
negb
sbb
into
leave
cmc
sbb
xor
repnz
daa
jl
dec
test
aaa
fwait
xor
push
dec
clc
jne
add
sarl
es
jne
or
and
mov
iret
cmp
inc
std
pop
subb
inc
xchg
xor
cmp
cli
shll
mov
xor
movl
sti
sub
gs
sbb
addb
hlt
xor
jns
cmpsl
les
mov
dec
jg
std
popf
push
mov
pop
or
fwait
movsl
jle,pn
and
xchg
test
scas
adc
sub
push
andl
fistps
sub
dec
add
in
pop
gs
xchg
icebp
cmp
jle
lea
cmp
xlat
jl
push
jne
bound
iret
inc
xchg
or
out
imul
sub
fidivrs
jge
lcall
adc
hlt
hlt
loop
hlt
jae
pop
xor
in
mov
sbb
cld
push
dec
adc
sub
cmp
arpl
xor
xor
movsb
xchg
in
lods
fwait
orb
and
shll
mov
je
add
jae
push
sbb
mov
adcl
stos
pop
aad
jno
clc
gs
aas
pop
xchg
pop
fstps
outsb
or
add
dec
pop
adc
in
push
cmp
ja
pop
mov
sub
call
sbb
in
mov
dec
nop
mov
and
insl
mov
xchg
cmp
sbb
or
adc
jno
xchg
push
pop
adc
pop
dec
add
clc
and
sbb
sahf
outsl
dec
and
and
pop
push
pop
mov
mov
xlat
adc
jge
jno
inc
and
xchg
nop
push
pop
leave
xchg
scas
jecxz
pusha
push
inc
adc
lcall
push
imul
sahf
cltd
and
mov
cwtl
int
add
lahf
test
repnz
sti
mov
adc
loope
add
add
pop
dec
sub
cmpsl
cmp
sub
adc
aad
mov
lds
jno
int
and
sbb
mov
or
test
mov
rclb
sub
jno
daa
scas
sub
inc
or
dec
cmp
push
mov
pop
stos
gs
jnp
mov
sub
jmp
cmpsl
inc
push
xchg
xor
mov
fmuls
rcll
mov
cs
popf
bnd
scas
cmc
or
dec
and
popf
mov
test
insb
sbb
test
enter
push
mov
add
jo
push
mov
or
pop
movsb
xchg
sub
stc
fistpll
mov
inc
ljmp
jne
std
dec
popa
rorl
or
ficompl
mov
push
push
push
mov
lods
das
pop
or
jg
mov
data16
shrl
xchg
pop
pop
cwtl
jmp
cmp
pushf
jl
test
push
ret
stos
add
scas
repnz
cwtl
dec
pusha
jae
xor
pop
push
cmp
pop
push
sar
pop
mov
xor
cmp
hlt
icebp
jnp
cmp
jge
push
sbb
or
ds
leave
movsb
or
add
fwait
int
int
fucomp
cmp
jecxz
jmp
stc
push
inc
mov
sub
loope
xchg
stos
js
cli
into
and
sbb
jp
sub
and
push
cmpsb
lret
leave
out
cs
ret
cli
mov
ja
push
mov
push
xor
pop
sahf
nop
adcb
cmc
fnstsw
pop
les
add
je
sbb
outsb
fisubs
jno
mov
shrb
nop
cli
adc
sub
mov
lods
test
fiadds
enter
test
fisubs
dec
dec
cmpsb
jns
xchg
fldenv
inc
inc
ja
aas
push
fwait
jle
inc
xlat
rolb
outsb
inc
jnp
inc
mov
adc
fisubl
pop
in
aas
lret
test
jnp
ja
inc
lods
ljmp
jae
dec
pop
movsb
es
jb
test
dec
cs
jne
mov
sbb
mov
test
insl
sub
inc
aad
pop
push
jno
lahf
jecxz
sahf
fadds
out
out
mov
jae
mov
pusha
ret
sbb
mov
jae
fimull
pop
jns
push
lret
add
cld
mov
jns
loopne
push
lcall
fidivrl
rcl
xchg
or
xor
dec
arpl
pop
cmp
mov
mov
sub
mov
loop
mov
xor
or
push
repz
dec
mov
jbe
add
mov
repz
sub
push
sbb
mov
aam
rcll
and
stos
test
add
xchg
daa
sbb
pushf
mov
adc
or
inc
xchg
sbb
inc
pop
cmp
adcl
dec
xor
pusha
insb
pop
arpl
and
pop
in
mov
jmp
gs
inc
shr
push
xchg
ret
mov
push
fsub
ret
mov
test
decb
stos
dec
dec
in
xchg
pop
daa
dec
jl
loope
mov
jge
cmp
pop
dec
mov
or
imul
pusha
movsb
xor
in
cmpsb
insb
mov
sbb
mov
xlat
mov
imul
mov
lods
jmp
pusha
faddl
shlb
sbb
mov
in
add
inc
cmpsb
or
jnp
cli
sbb
cmp
data16
mov
mov
pop
and
lcall
pushf
aas
mov
mov
or
push
call
jb
cmp
mov
jns
cmp
shll
lret
mov
cli
xchg
and
push
xchg
cmpsb
ret
out
or
repnz
pusha
jns
ss
xor
mov
or
mov
dec
fimuls
mov
adc
cld
dec
xchg
int3
out
mov
and
aaa
movsl
cmp
or
imul
push
add
outsb
sbb
jno
jbe
insb
aam
pop
mov
jo
fnstsw
push
dec
cltd
into
xor
addr16
cld
lahf
lods
outsl
ja
and
pushf
in
inc
jne
fistl
push
nop
inc
pop
out
pop
shl
pushf
cmp
ret
xor
xor
inc
sub
aad
sub
ja
arpl
adc
dec
cmp
sub
and
fdivp
fiadds
push
mov
loop
dec
mov
sti
mov
mov
dec
adc
sahf
cwtl
std
out
ficompl
int
fstpt
push
cmpsl
das
stc
fidivrl
xor
ljmp
insb
pushl
fwait
push
pop
inc
stos
and
jo
inc
sub
or
or
fistps
mov
adc
xor
mov
cmp
outsl
sbb
mov
jmp
int3
jnp
jo
cwtl
les
inc
add
sbb
sbb
int3
and
dec
lret
sub
cmp
loope
loopne
in
push
test
repz
subl
rcrl
add
imul
sub
xchg
out
sbb
iret
push
mov
and
shll
mov
inc
in
mov
and
mov
aas
daa
pop
cmp
xor
push
cmpsb
pop
pushf
out
jp
or
xor
and
pop
dec
mov
sbb
sub
jmp
inc
adc
movsl
jge
xchg
fsubrp
dec
and
fisttps
out
stc
fisubrl
jecxz
cmpsb
idivl
pop
js
ficomps
lock
fmuls
cmp
icebp
pop
sbb
in
mov
inc
pop
mov
add
pop
xorb
mov
mov
imul
sub
mov
cli
push
push
cwtl
xchg
jb
loopne
fmull
mov
shrl
mov
fists
cld
inc
popf
sti
jl
sub
adc
outsl
push
aas
xor
in
fwait
cltd
insl
arpl
loop
repnz
dec
mov
dec
in
dec
mov
mov
add
push
sub
push
lret
mov
imul
cmpl
test
enter
inc
bound
jns
fdivs
push
mov
jl
out
fildl
sub
pushf
sub
lea
sbb
stos
mov
stc
cmpsl
sub
jle
push
mov
jb
and
mov
dec
xchg
out
xchg
xchg
sbb
repnz
negb
dec
lahf
xchg
ljmp
call
pushf
lea
ja
push
clc
cmpsb
je
fnstsw
test
push
and
dec
mov
inc
insl
push
adc
stos
das
or
inc
cmp
mov
mov
or
int
daa
jae
xchg
js
pop
frstor
pop
fistl
sub
andl
pop
enter
and
sbb
jne
add
push
aaa
jmp
fisubrl
jno
icebp
fldcw
push
mov
pop
in
sti
pop
jno
std
inc
adc
out
popf
cmpsl
jnp
mov
int3
rolb
aam
shr
dec
jnp
rolb
sub
mov
mov
pushf
hlt
jb
sbb
sub
xor
jne
xchg
pusha
jle
xchg
clc
adc
das
jb
movsl
pop
stos
inc
in
ljmp
xor
cmp
aad
popa
mov
fld
xchg
cli
cmpsl
mov
add
or
out
cmpsl
mov
push
xchg
insb
or
or
ds
scas
lcall
lcall
movsl
cvtpi2ps
jle
or
add
in
push
or
xchg
in
orl
xor
cmpsl
mov
mov
xor
rclb
jo
jge
data16
fsubr
scas
push
stc
mov
les
data16
push
leave
rclb
sbb
cmp
jno
mov
xor
arpl
ds
cwtl
add
mov
je
clc
adc
add
lods
mov
or
sbb
jnp
into
aas
jo
jb
cmpsl
inc
cwtl
test
xor
inc
jne
movsl
jae
xor
mov
push
add
add
adc
push
fildll
xor
js
repnz
ss
movsb
aaa
xor
movsl
mov
pop
fidivrs
mov
pop
in
loope
andb
int3
add
mov
stc
and
es
mov
xlat
sbb
mov
dec
dec
mov
mov
clc
mov
pop
lods
add
inc
or
rclb
jae
mov
das
add
sarb
push
xlat
ljmp
xor
sbb
sbb
add
and
jbe
sbb
cmpsl
xor
or
subb
pushf
jno
mov
adc
es
inc
mov
inc
push
pop
aad
lret
ret
adc
scas
fsts
testl
leave
imul
mov
pop
mov
xchg
call
pop
hlt
inc
add
or
cmpsl
fs
sahf
popf
dec
jle
push
mov
add
adc
dec
dec
or
sbb
mov
test
sub
mov
dec
scas
cld
popf
ss
cld
cmp
cmp
lock
ret
sbbb
add
jns
push
jne
xor
mov
jl
iret
fwait
div
xchg
outsl
mov
sbb
xchg
or
das
and
cmpl
ret
jae
repnz
insl
lcall
adc
sti
rorl
mov
mov
ja
je
push
jge
in
mov
xchg
sti
aaa
cs
mov
stos
mov
mov
dec
lcall
repz
pushf
pop
std
xchg
std
mov
cmp
add
adc
jnp
inc
xchg
add
add
or
xchg
mov
or
add
inc
sub
insb
loop
mov
call
bound
adc
xchg
mov
inc
sbb
iret
mov
xchg
int
repz
lods
stos
ljmp
xchg
push
dec
xchg
outsb
rorb
fisttpll
cld
inc
or
jns
push
xor
xchg
pop
adc
data16
shrb
cmp
dec
int
call
in
dec
mov
out
xchg
js
jecxz
std
sub
popl
out
cmp
cmc
jecxz
cs
xor
sbb
dec
test
orb
cmp
addr16
add
icebp
iret
mov
js
xchg
adc
mov
sub
pop
sar
cwtl
sbb
frstor
dec
jno
js
in
mov
sbb
into
push
sub
xchg
xlat
inc
shlb
sbb
pop
xorb
mov
mov
jmp
xchg
sub
cmpb
lret
bound
es
iret
insl
addl
mov
sarb
clc
pusha
and
and
and
inc
leave
or
mov
movsb
nop
and
push
or
mov
stos
push
or
sub
lods
out
les
movsb
data16
lds
aas
iret
sub
shl
popf
fnsave
in
sarl
add
mov
mov
adc
rorl
jo
shlb
mov
mov
jbe
fcom
cmpsb
add
jge
rorb
xchg
in
aas
mov
or
push
adc
ja
mov
sahf
leave
or
mov
cmp
cmp
mov
imul
add
sbb
xor
pop
push
jae
push
push
sub
call
aad
add
mov
icebp
dec
nop
mov
in
mov
add
pop
imul
addr16
cmp
shll
ret
loop
xchg
stos
xor
out
out
insl
mov
add
pop
fdivr
inc
int
pop
idivb
mov
clc
cmp
mov
push
dec
xchg
add
aad
adc
dec
jecxz
dec
cmp
mov
cwtl
cmp
out
mov
sub
mov
and
jae
inc
cmp
push
mov
mov
loopne
mov
adc
push
sub
jle
add
inc
xor
mov
out
arpl
lahf
sub
dec
jl
and
adc
dec
mov
xor
xchg
lret
fmull
jnp
dec
mov
xor
sub
test
sub
sbb
jno
out
sbb
testl
loopne
jo
in
lods
roll
imul
jnp
fsts
sbb
repz
lea
mov
mov
lods
xchg
leave
jnp
cmp
lds
into
xor
fildll
cltd
jae
sbb
scas
dec
fwait
icebp
enter
inc
or
popf
arpl
cmpsb
jmp
fidivs
rcll
sub
mov
cmp
and
dec
std
repnz
jecxz
push
cmp
push
fsubs
sub
rcll
pop
jg
sub
inc
sub
lock
lds
cmp
fsubrl
adc
mov
into
lock
aam
sti
dec
andl
arpl
mov
dec
mov
out
in
rcrb
or
lret
inc
movsl
rcrb
sarb
fcompl
sub
aam
xchg
jnp
scas
aas
cmp
pop
inc
mov
pop
xchg
xchg
push
jo
or
inc
xor
fs
inc
test
dec
push
xchg
inc
mov
add
jnp
sbb
in
insl
pushf
push
lcallw
add
ret
pop
cltd
mov
lods
std
mov
add
xchg
sbb
lcall
pop
push
mov
jns
push
loope
dec
xor
push
add
imul
mov
mov
add
enter
andl
fs
xlat
sbb
in
add
jns
lea
dec
inc
ret
pop
outsl
inc
imul
and
or
lock
fsubr
fmuls
lds
sti
push
sar
filds
sub
fs
sbb
in
icebp
xlat
test
dec
mov
sbb
inc
mov
xor
mov
jo
jae
incb
lcall
inc
pusha
cld
lret
pop
rcll
dec
sub
cltd
mov
dec
fmuls
xlat
iret
repz
mov
and
sub
inc
adcb
daa
cs
std
shlb
fadd
fs
sbb
mov
add
push
ss
data16
cmp
scas
test
xor
hlt
mov
dec
push
mov
das
push
mov
movsb
loop
push
inc
jge
je
iret
push
dec
shrb
mov
jl
dec
add
xor
out
lods
mov
and
mov
lds
adc
out
sub
lret
sub
in
jne
mov
test
add
incl
pop
jg
add
xchg
ljmp
out
adc
lea
jae
nop
mov
fbld
pusha
and
popf
mov
jns
pop
lds
push
and
sbb
leave
leave
nop
push
mov
lods
jle
jb
mov
sub
insl
je
or
or
sbb
mov
and
jg
mov
sbb
sbb
loope
cs
or
push
jo
aas
sarb
fs
loope
pop
daa
mov
pop
data16
mov
inc
mov
xor
pop
mov
mov
xchg
adc
mov
push
mov
int
ljmp
jnp
arpl
push
adc
or
adc
adc
sti
call
push
and
add
dec
push
lods
out
inc
pop
rcll
cmpsb
fldlg2
sbb
insb
aam
cmp
fs
hlt
subb
inc
or
jb
jnp
test
jo
pop
xchg
aas
loope
lods
shll
es
jae
sbb
push
addr16
jae
fists
and
in
movl
js
inc
jg
clc
inc
xchg
out
cmc
xor
xor
inc
pop
mov
scas
add
notl
jp
mov
repz
addr16
add
add
loopne
mov
jnp
lods
out
xchg
aam
loop
mov
out
sub
mov
push
jmp
in
sub
push
sub
out
xor
add
addb
fidivrl
push
addb
mov
xchg
nop
and
scas
lret
jne
arpl
ja
cs
cs
insb
ficoms
movsb
sbb
cltd
shll
ss
push
mov
stos
mov
sbb
push
jns
outsb
les
adc
jb
push
std
ficoml
mov
mov
ret
rorl
sub
mov
imul
call
enter
rcll
mov
add
inc
rorb
test
repz
mov
mov
and
hlt
jns
xchg
jno
and
xchg
mov
add
imul
push
pop
inc
push
dec
cmpsl
sbb
call
testl
add
test
sbb
pusha
and
gs
sub
add
lea
jge
out
jmp
fs
jle
xchg
aad
sahf
pop
mov
repz
cmp
pusha
push
ret
andl
bound
add
es
and
xlat
mov
mov
lea
jo
fs
add
add
popa
out
add
add
mov
add
add
orl
jle
add
add
scas
add
add
jno
add
add
inc
push
add
add
xchg
add
add
loope
add
add
xor
add
add
add
push
incb
add
add
add
pop
add
add
sarl
mov
popa
outsb
add
stos
stos
add
idivb
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
