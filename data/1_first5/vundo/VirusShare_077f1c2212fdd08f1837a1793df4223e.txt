sbb
or
add
add
add
inc
add
rolb
add
inc
add
or
rolb
add
add
or
add
or
add
or
add
rolb
add
add
push
nop
add
add
push
push
loopne
aaa
add
mov
add
jo
add
or
add
lock
or
add
adc
xor
pusha
add
or
add
or
add
pavgb
pop
add
add
mov
pusha
or
add
add
or
add
loopne
jle
mov
inc
or
add
push
xor
add
loopne
add
push
nop
add
pusha
add
or
add
add
popw
rolb
pop
lock
push
adc
movsb
add
push
add
addb
push
add
rolb
add
add
add
add
rolb
add
lock
add
add
rolb
jmp
add
mov
add
pop
loopne
int
mov
add
or
xor
cmp
jo
decl
rolb
add
push
add
add
add
add
add
or
add
lock
add
add
add
jbe
add
js
add
jbe
add
js
add
jbe
add
xor
jo
mov
add
mov
adc
and
lods
add
add
loopne
test
and
fwait
or
add
add
xchg
or
add
add
push
add
or
and
fimull
and
std
sldt
add
lock
or
lock
pop
rolb
add
xor
cmp
push
add
add
add
add
add
add
add
pop
add
lcall
add
pusha
add
pop
nop
add
and
cli
or
add
lock
pop
add
push
addb
sldt
jecxz
adc
inc
or
add
mov
sub
lock
addb
add
add
push
addb
add
popa
add
add
or
add
add
add
or
ja
jo
add
and
adc
xor
and
add
push
rolb
add
rolb
ret
add
and
push
mov
push
popl
mov
movl
mov
push
popl
call
movb
push
popl
cmp
jne
movw
movw
ret
mov
movw
push
push
popl
sbbb
push
push
popl
mov
xorw
push
popl
pusha
push
popl
push
popl
call
addw
mov
sub
movl
push
xor
addb
xorl
push
popl
addl
add
and
push
or
sbbl
call
push
popl
cmpl
jne
mov
call
movl
ret
orb
orw
jmp
movl
sbbl
xor
subw
mov
orl
push
popl
shl
xorl
mov
orb
shl
xor
mov
andw
subb
cmp
jne
push
popl
push
popl
mov
push
popl
orw
sub
sbbw
call
movw
mov
popa
subw
pusha
orb
push
popl
call
orl
and
mov
push
popl
push
push
popl
xorl
push
popl
addl
andl
push
and
push
popl
call
addb
push
push
popl
subb
xorl
and
addl
push
popl
pop
or
push
popl
cmp
jne
push
popl
ret
orb
xorb
popa
push
popl
push
popl
call
push
popl
orb
push
push
popl
xorl
orb
addl
add
push
push
popl
subw
call
orb
push
push
sub
mov
add
xchg
xorl
orl
mov
push
popl
push
popl
shl
push
popl
push
orb
xor
sbbl
push
addw
call
xor
push
popl
push
push
popl
mov
movw
push
popl
push
push
popl
sub
jmp
push
popl
addl
pop
push
popl
andl
mov
orb
push
push
popl
push
andw
push
xor
xorb
mov
mov
mov
push
popl
subl
rep
push
popl
pop
subb
orb
pop
push
inc
sub
not
lea
mov
add
xchg
push
push
ror
inc
mov
xor
pop
push
popl
xor
andb
jmp
push
popl
sub
or
mov
push
popl
andw
sub
mov
xorl
sub
subw
push
popl
mov
orl
push
popl
sub
push
popl
push
popl
or
jne
sbbw
push
popl
add
andb
jmp
subw
mov
push
popl
subl
shr
push
popl
andw
shl
subw
addb
mov
subw
add
or
jmp
andb
andw
sub
addw
push
popl
mov
subb
push
popl
add
addw
cmp
jne
or
mov
push
popl
xor
add
push
popl
mov
xorw
add
add
movb
cmp
jne
push
popl
ret
mov
push
movb
push
popl
xor
xorb
movw
pushl
movw
push
popl
pop
addl
xorb
lea
push
popl
push
popl
or
xorl
mov
push
popl
mov
xorw
and
lods
push
popl
movb
mov
and
subb
pop
push
popl
xorb
ret
addl
orl
push
push
popl
movl
mov
movb
sbbl
add
movw
push
xorb
push
push
popl
push
popl
push
xorw
push
and
addw
push
xor
mov
sbbb
mov
orl
sbbl
add
xorl
pushl
subw
movl
mov
addb
andw
add
addb
movb
add
push
popl
mov
xorw
push
popl
add
and
push
popl
xor
push
popl
movw
lea
subw
push
popl
mov
xor
push
popl
add
subl
mov
subw
addl
xor
orl
rol
xorl
sbbl
xor
push
popl
inc
mov
sbbl
cmpb
jne
and
cmp
je
movb
subw
inc
push
popl
cmp
jb
xorb
subw
mov
subb
push
popl
add
orb
sbbl
movzwl
xorl
mov
push
popl
subw
add
xorb
mov
push
popl
add
xorl
pop
orl
push
popl
cmp
jbe
andw
cmp
jae
xorw
pushl
subw
pushl
subl
push
subw
xorl
push
popl
sbbl
addl
sbbw
or
pushl
subw
orl
call
xorw
call
xorl
movb
pop
orl
xorl
pop
push
popl
push
popl
pop
push
popl
pop
andw
pop
push
popl
push
popl
leave
movb
and
ret
push
popl
orb
call
xor
xlat
iret
test
or
arpl
ljmp
push
aaa
mov
jecxz
add
mov
dec
leave
mov
dec
testb
jp
jnp
jno
jecxz
fldcw
jmp
cmpsb
mov
jle
add
flds
mov
lcall
into
dec
jecxz
movsb
inc
lret
push
in
lcall
push
or
out
mul
mov
push
std
cmp
pop
decb
lahf
add
std
scas
mov
es
cmpsl
sub
push
sti
fisttps
mov
or
fs
sub
negl
fidivrl
popf
cmp
jnp
subl
jecxz
add
jmp
cmpsb
rcll
dec
cmp
les
inc
push
in
and
sbb
cmp
pusha
addr16
imul
lahf
push
icebp
leave
jle
out
aaa
pop
xchg
imul
fisttpll
jmp
gs
fwait
dec
popf
lahf
or
mov
ficompl
cmpsb
cmp
xchg
jg
cmc
sbb
mov
jl
fdivrl
jae
cmpsl
lock
push
lods
fiaddl
mulb
pop
andb
push
adc
mov
loope
scas
xor
adc
arpl
mov
lcall
xchg
punpckhwd
mov
out
in
or
mov
jo
jp
push
into
push
add
jle
stos
pusha
das
scas
leave
test
stos
les
ja
ja
and
xor
and
cmpsl
andb
cwtl
cmp
xor
in
and
mov
add
pop
addb
and
sahf
mull
inc
sbb
cmp
fsubrl
loope
cmp
inc
push
sbb
icebp
std
movsl
xlat
adc
lret
and
adc
xlat
pop
push
pop
rolb
xor
pop
cld
ss
adc
mov
jns
sti
aad
add
outsl
dec
negb
cmpsl
or
and
leave
adc
and
sub
mov
sbb
mov
mov
cmp
mov
lret
adc
mov
adc
mov
fimuls
cli
dec
xor
push
and
jnp
jb
repnz
divb
jle
adc
pop
sbb
inc
fdiv
jbe
jns
mov
jnp
sbb
lcall
sub
cmp
mov
sbb
fnstcw
aas
fstpl
ss
fdivrl
ja
mov
pop
pushw
sub
and
mov
loope
ficoms
lret
cmp
push
aaa
inc
cmc
add
mov
add
sbb
adc
shl
dec
mov
fnstcw
jnp
cmpsl
out
mov
pop
pop
add
mulb
addr16
jns
sub
loop
and
loope
cwtl
dec
sbb
sbb
push
xorb
fstps
loopne
fcompl
sahf
jle
cmp
jcxz
jge
pop
xor
mov
mov
jge
dec
fsubs
fdivl
and
lds
ss
and
cwtl
xchg
pusha
jecxz
adc
xchg
lods
sahf
fildl
xchg
xchg
ret
jl
or
ss
inc
mov
and
fistl
ja
arpl
inc
stos
mov
stc
jae
jb
sbb
dec
add
push
andl
enter
xor
scas
jo
notl
cld
pop
push
xor
inc
xor
xor
push
imulb
and
jl
fcmovnb
sbb
ss
inc
mov
sub
das
xchg
adc
cmp
loop
ds
cs
push
hlt
aad
or
faddl
add
or
lock
fs
call
push
loope
sbb
adcl
and
cltd
and
sub
xchg
lahf
fidivrs
sbb
repnz
repnz
out
sbb
movsl
cmp
pop
lret
out
mov
call
sub
and
daa
mulb
pop
clc
imul
add
icebp
rclb
dec
add
ss
imul
jp
fdivp
insb
movsb
inc
xchg
dec
lcall
enter
push
gs
sbb
pop
jae
push
push
ficoml
jl
push
and
jle
scas
rclb
rolb
sbb
stos
orb
shlb
push
cwtl
rclb
adc
cmp
mov
outsb
mov
insb
xor
dec
lds
ss
and
out
mov
ja
out
data16
sub
jno
jnp
fdivr
nop
cmpsl
mov
subl
fstpl
ss
adc
movl
adc
or
std
sub
cmpsb
int
inc
xchg
rol
xor
jne
popa
push
add
adc
lahf
push
xchg
push
add
and
ds
popa
lcall
out
and
fcompl
ss
mov
sbb
add
mov
lds
or
scas
test
shlb
mov
push
ljmp
sbb
call
test
andb
sub
sub
rcrb
lds
stos
out
les
xchg
adc
fadd
and
dec
cmp
dec
aad
lahf
sti
sub
sub
add
mov
xchg
sbb
push
cmp
in
lods
sbb
std
rcrl
sbb
sbb
xchg
sub
xor
push
adc
es
add
fidivrl
xchg
add
cmp
jecxz
and
lcall
fdivrp
mov
enter
fistpl
xor
rorb
adc
mov
push
lahf
hlt
xor
cmpsl
daa
int
xchg
mov
inc
xchg
outsb
xchg
out
push
xchg
sbb
sbb
cmc
in
and
inc
adc
pop
sar
push
les
shll
jge
or
lock
pusha
jmp
push
xor
je
fcomi
mov
dec
iret
cmp
pop
inc
mov
in
stos
sbb
cld
dec
je
mov
add
mov
mov
jbe
add
fildll
sub
out
and
pop
insb
cmc
je
lock
ss
out
and
adc
divb
inc
sbb
adc
mov
mov
jnp
fdivl
gs
push
jg
or
add
shrl
push
bound
int
cmc
repz
push
out
mov
push
push
pusha
push
test
jecxz
rcl
cwtl
scas
sub
cmp
dec
js
or
out
push
aam
or
lcall
jbe
dec
sbb
xchg
lcall
push
mov
pmulhw
lock
xchg
sarl
les
inc
push
test
adc
push
cli
rorl
adcb
add
test
mov
mov
cs
orb
std
fcomi
inc
shll
or
fisubl
xor
loope
bound
xchg
cmp
jns
jecxz
fists
icebp
and
sahf
cmpsl
es
in
ds
adc
std
mov
sbb
mulb
rcrl
inc
mov
rol
test
sbb
mov
and
dec
test
sub
test
mov
divb
ret
jp
sub
pop
ja
aas
xlat
and
sub
jnp
fldenv
cmp
fiadds
loope
inc
mov
repnz
insb
push
dec
inc
and
insl
ret
dec
js
cmc
pusha
sbb
fstps
addr16
cs
out
and
fcomp
pop
ja
sbb
xchg
aaa
xor
jle
out
pushf
push
mov
and
dec
cltd
jecxz
pop
adc
xor
lahf
repz
addr16
mov
adc
out
dec
xchg
xor
repnz
push
push
mov
bound
into
enter
sbb
xor
add
jl
outsb
mov
lret
mull
cltd
les
ss
fcom
adc
and
pop
mov
and
mov
pop
or
call
jl
das
and
mov
push
imull
dec
mov
adc
push
push
mov
xchg
in
sub
push
fisttpll
adc
cmc
out
sbb
lret
cmp
pop
cmpsb
xchg
pop
push
jmp
out
xorl
inc
stos
clc
and
jnp
in
mov
enter
push
cli
and
jnp
pop
dec
and
xchg
cmp
clc
daa
loope
and
fs
sahf
sbb
pop
aaa
popf
push
jp
lods
mov
popf
xor
pop
cmp
ss
xchg
repz
frstor
jg
jle
dec
mov
imul
sub
shlb
nop
cmp
outsl
in
xchg
std
and
jnp
xorb
ss
lcall
arpl
mov
pop
aaa
add
je
and
test
push
fdivrl
sbb
dec
push
ja
out
imul
bound
xor
sbb
cmpl
outsl
or
sbb
or
mov
cltd
ljmp
pop
in
add
jnp
push
and
mov
testl
inc
in
sarb
ja
data16
pushf
adc
ljmp
xchg
sbb
add
lahf
push
cltd
shrl
mov
push
lretw
or
sbb
jp
test
filds
pop
xor
lods
fcompl
ss
in
movsl
lods
jecxz
and
loop
dec
mov
jnp
adc
jbe
ss
xchg
pop
and
popf
inc
xlat
popf
clc
loope
cmp
aas
nop
orb
stos
fcompl
mov
fimull
xor
in
mov
jbe
negl
fidivrl
insl
xchg
lcall
push
movsl
icebp
clc
xchg
pop
cltd
stos
iret
pop
inc
jnp
gs
out
xchg
lret
addr16
mov
dec
xor
scas
xchg
sbb
or
in
in
faddl
sahf
in
out
rcr
test
xchg
sbb
xchg
arpl
push
mulb
repnz
push
ja
cmp
addr16
pop
ljmp
cld
sub
sub
fldl
test
sahf
in
adc
xchg
sbb
xor
ss
pop
leave
icebp
lahf
pop
arpl
cmp
daa
pop
jecxz
xor
cltd
enter
sbb
push
adc
cld
dec
xchg
cmpsb
jg
imul
add
divl
repz
or
xlat
out
xor
addb
daa
inc
in
push
lcall
adc
dec
fnstsw
je
mov
dec
das
iret
xchg
loopne
not
cwtl
fdivrs
out
mov
aaa
pop
adcl
xor
ss
mov
push
mov
jg
andl
sahf
test
push
gs
cmc
pop
ss
push
dec
jnp
jbe
xchg
push
pop
lcall
mov
jne
mov
sub
add
jb
pop
js
pop
mov
fisubrs
fdivrl
and
dec
adc
push
mov
daa
or
and
aad
or
das
std
mov
cltd
push
add
popf
imul
push
push
inc
mov
inc
mov
and
or
dec
jg
adc
xchg
xchg
rcll
outsl
xor
das
mov
scas
enter
in
cltd
orl
js
fcomip
scas
lods
test
std
pushf
xchg
mov
es
ss
push
inc
jp
cmp
and
push
sub
repz
inc
xchg
orl
pop
fstpl
ss
adc
jo
mov
jo
cmc
or
cmpsb
xor
inc
cmp
loopne
cwtl
and
in
cmp
lds
imul
push
rcrl
andb
lods
adc
fmul
xchg
aaa
add
inc
mulb
es
loopne
pop
cld
ss
cltd
adc
cld
jb
testb
dec
xor
paddusb
into
jmp
fcoml
push
or
das
adc
and
push
add
dec
dec
mov
push
pop
add
or
das
bound
pop
sub
or
sbb
jl
sbb
dec
cmp
xchg
jmp
or
pop
in
lcall
outsb
inc
dec
imul
or
mov
imul
aam
dec
sahf
repnz
rorl
inc
out
imul
pop
sbb
jecxz
cmc
pop
xor
adc
ss
jp
popa
fstl
insl
clc
dec
mov
xchg
shrb
rolb
mov
mov
sahf
out
icebp
mov
jge
sahf
in
out
les
decb
xchg
cmp
xchg
jle
imulb
mov
cmp
call
add
push
add
cmp
fmul
das
popf
sbb
mulb
lock
fs
and
push
rcrl
xchg
clc
loop
mov
arpl
je
outsb
jle
mov
cltd
push
sahf
rorb
xchg
mov
out
sbb
xor
mov
dec
adc
push
js
iret
das
xlat
aas
mov
adc
sahf
idiv
cmpsl
icebp
add
dec
push
add
call
sub
cs
or
xor
cmc
test
or
pmaxsw
dec
sub
rclb
push
loope
inc
pop
mov
jle
test
push
dec
mov
inc
scas
sub
xchg
dec
lcall
test
inc
push
lret
jne
icebp
mov
dec
inc
cmpsb
xchg
mov
jnp
test
out
rol
and
inc
cld
getsec
lcall
hlt
cmc
mov
mov
je
adc
popf
push
add
imul
jp
je
nop
addr16
fildll
jnp
xorl
and
mov
pop
aaa
sbb
loope
in
xor
sahf
xchg
es
xchg
push
cmp
setp
out
rcrb
sub
leave
fldl
inc
pop
pushf
icebp
mov
addr16
loope
fstp
and
aad
push
push
pushf
icebp
mov
movsl
fs
repz
xchg
loopne
stc
nop
or
les
cmp
test
scas
pop
pop
jns
cmp
push
aam
aaa
out
adcb
fs
pusha
repnz
aam
push
push
idivb
aad
add
xchg
or
movsl
clc
repnz
faddp
cs
adc
aaa
loope
mov
stc
sbb
in
xor
shlb
fisubl
adc
sahf
adc
test
vandps
push
push
subl
pop
bound
es
jl
xor
out
push
pop
jmp
cli
nop
mov
xchg
nop
mulb
negl
sub
shlb
nop
cmp
jnp
sbb
into
jo
aas
sbb
out
push
icebp
push
cmp
mov
sbb
out
je
pop
pushf
push
scas
xchg
mov
mov
test
cmc
or
scas
cmp
jns
jecxz
and
ficoml
mov
cltd
imul
negl
cld
adc
adc
fistpl
lcall
and
dec
repnz
cmp
ja
test
sbb
lds
or
ljmp
add
scas
pushf
adc
les
idivb
dec
sub
std
mov
sub
push
add
inc
dec
push
push
push
mov
dec
mov
lahf
frstor
filds
ret
shll
shl
les
cmp
xor
inc
add
and
js
repz
mov
sbb
aaa
fnstenv
jae
leave
data16
mov
std
ret
sbb
testb
mulb
es
pop
or
out
imul
xchg
ljmp
fwait
iret
mov
movsl
lds
and
push
sub
jns
sbb
jp
dec
scas
jg
jne
cmp
push
and
adc
negb
push
xchg
cmpsl
addr16
stos
sbb
lock
fwait
push
add
mov
icebp
lea
mov
outsb
sbb
mov
in
or
mov
or
and
dec
ja
aas
cs
xor
ret
loopne
fs
ss
cmc
push
inc
jg
sub
out
lahf
imull
loope
xchg
jnp
jne
ja
out
push
sub
ljmp
pop
mov
rcrb
mov
out
aas
call
aas
test
mov
jae
inc
push
pop
mov
test
outsl
cmp
enterw
pop
adc
movsb
divl
mov
dec
lods
cmp
push
inc
test
jl
push
and
fld
mov
in
stos
sub
push
and
fsubrl
adc
sar
cltd
test
outsl
or
lcall
shl
adc
cwtl
popf
sbb
ja
aam
jb
in
xlat
lods
push
sbb
hlt
push
cmpsb
rolb
dec
cmp
paddusb
js
popf
mov
push
arpl
sbb
es
adc
rol
and
ja
aad
clc
sahf
mulb
loope
lock
in
and
add
mov
push
mulb
lock
arpl
mov
or
rclb
es
out
xor
fwait
cmp
stc
push
mov
fs
mov
push
lea
pop
fadds
fdivl
push
ret
je
fwait
add
push
jns
and
cs
sub
and
in
sub
cwtl
push
test
pop
inc
repz
sbb
sbb
and
pop
into
fcompl
xor
and
ret
xchg
pop
fimull
hlt
je
cs
add
xor
movl
ss
jnp
inc
jne
add
lcall
jecxz
sbb
mov
fsts
push
lahf
or
sbb
lea
pop
cmp
mov
mov
xor
rcrb
outsl
mov
out
les
arpl
aaa
xor
fbld
dec
or
xor
fildl
xchg
test
sub
dec
or
ss
mov
adc
movl
in
sub
sti
mov
sbb
loope
xchg
xchg
push
lods
pop
push
sbb
notl
cmpsb
movsl
roll
dec
daa
add
aad
push
lds
test
subb
lods
out
fcomp
pop
sbb
dec
icebp
adc
xor
and
sbb
imulb
add
adc
adc
jge
andb
push
jno
loope
cmp
push
cmp
mov
jp
cmp
pop
hlt
imul
sti
aaa
sahf
loop
jge
inc
xchg
cmpl
int3
sub
push
dec
js
adc
lds
dec
jle
stc
aam
mov
pop
and
in
lods
pop
push
sbb
add
jmp
xor
xor
fcmovnu
xchg
xor
and
sub
and
in
xor
enter
dec
sbb
sarb
fcmovu
pop
cmp
sub
and
shrl
test
fcomp
psubsw
jno
mov
sbb
fnstsw
es
sarb
cs
and
lods
scas
xchg
mov
sbb
in
pop
repnz
addr16
imul
shr
mov
dec
push
pop
mov
fwait
sahf
in
out
enter
jg
push
push
cmp
or
ss
dec
jecxz
or
mov
or
imul
dec
andl
lds
cwtl
repnz
jg
push
jo
ja
sti
add
push
pop
adc
ds
push
rcll
xor
mov
push
pop
fdivrl
nop
sub
fbld
ldmxcsr
test
std
mov
push
es
ss
mov
es
ss
jbe
inc
push
inc
and
pop
mov
sub
movsl
icebp
mov
dec
ljmp
xchg
dec
sbb
sub
inc
xor
dec
xchg
dec
lcall
jmp
mov
mov
enter
bswap
xchg
push
pop
ss
xchg
ss
ds
xchg
shll
stos
mov
jg
and
loope
cmp
xor
or
ss
pop
imul
jge
sahf
cld
sub
jle
test
testb
int3
inc
sbb
flds
or
sub
or
imul
mov
dec
fsubs
ds
imul
sbb
imul
xor
stc
add
mov
lahf
lds
leave
xchg
jle
push
mov
shll
insb
addr16
dec
scas
and
dec
mov
mov
xor
and
push
sbb
pop
mov
lea
into
mov
imul
inc
lcall
mov
mov
je
and
and
mov
addl
mulb
addr16
jbe
das
leave
sub
scas
jns
frstor
call
fistpl
add
cmp
in
mov
cltd
lret
push
sbb
adc
sbb
xchg
pop
xchg
daa
or
pop
in
xchg
rorl
dec
movsl
xor
out
pop
insb
cltd
mov
add
xor
jnp
cli
imul
loop
pusha
les
inc
inc
test
enter
call
pop
dec
mov
clc
test
inc
add
jmp
mov
lcall
les
ss
xor
call
fiadds
aaa
cltd
cmc
pop
ss
es
and
mov
push
adc
push
lds
rorl
cmp
jcxz
cmp
jae
cmp
popf
and
cs
mov
fdivrs
jl
jno
jecxz
and
jmp
cmpsb
leave
loopne
or
daa
and
fld
sbb
testb
fbld
lods
inc
push
sbb
pop
push
cmpsb
mov
xchg
data16
add
aad
pusha
jnp,pt
and
fwait
add
push
xor
and
stos
in
mov
ficompl
lahf
addr16
js
sub
lds
dec
enter
loope
cld
pusha
lods
mov
popa
cmp
stos
push
negb
stos
and
sub
sbb
xor
mov
xchg
hlt
int3
movsb
add
cwtl
mov
mov
pushf
scas
jl
fbstp
adc
jno
cld
in
insb
push
sbb
and
stos
in
loope
sbb
mov
out
push
mov
ljmp
and
out
jno
pop
pop
popa
sbb
in
and
cmpsb
xchg
and
sbb
sub
xor
fimull
loopne
fcompl
sbb
fbld
stos
mov
xor
fcmovnu
imul
inc
in
mov
das
std
mov
cltd
mov
int
in
aas
pop
mov
mov
push
aam
aad
sub
xchg
andb
jecxz
inc
sub
arpl
dec
cmpsb
popa
movsb
jle
outsl
cmp
xchg
or
divl
inc
and
jp
popa
fstpl
ss
pop
jecxz
loop
stc
test
xchg
insl
xchg
sub
adc
xor
scas
or
xchg
push
sub
push
mov
adc
push
fsts
pop
cmp
ds
test
jl
cmc
and
push
pop
mov
clc
mov
sub
dec
push
lahf
mov
bound
and
cmp
push
cltd
rcrb
rcrb
ss
test
sbb
inc
int
nop
jnp
adc
mul
cwtl
fdivrs
insl
ret
fisubs
pop
jg
jbe
shl
xorl
cmpsb
xchg
and
fdivrl
sub
addr16
sub
movsb
xchg
mov
lahf
clc
sub
jb
nop
push
and
or
mov
ss
nop
addr16
sub
lcall
loope
jbe
div
xor
jae
aas
idivl
in
sub
in
lret
sbb
jns
sbb
mov
push
add
pop
dec
js
shll
mov
jg
pop
leave
jno
jecxz
xchg
lods
jns
sbb
or
cmpsb
mov
test
dec
cmp
pop
loopne
jge
push
leave
icebp
pop
pop
push
jae
je
imul
mov
loop
push
les
sti
fldenv
cmp
cwtl
negl
scas
cmp
push
xor
jp
jo
scas
mov
xchg
or
adc
xchg
jge
mov
test
test
fcomp
das
and
xor
jl
xor
jle
pop
xor
xchg
dec
jno
scas
xor
mov
or
dec
divl
add
xor
xor
in
lahf
subb
and
cmpsl
mov
stc
adc
das
in
ret
adc
and
pop
mov
bound
sbb
sub
and
or
dec
enter
pusha
call
push
add
sub
cmp
mov
aam
adc
sub
loopne
les
and
sahf
xchg
jb
popa
daa
or
sub
ss
add
enter
mov
or
inc
inc
adc
jp
mov
clc
shlb
or
hlt
sub
push
nop
push
add
shrl
cs
loopne
bound
push
cmpsb
adc
ja
add
xor
cs
xchg
or
loopne
fdivrs
loopne
scas
mov
das
pop
adcb
mov
sbb
add
cmpsb
aad
sbb
xchg
push
add
cmp
lret
nop
adc
stos
pop
ds
cmp
insl
push
lcall
fdivr
adc
push
cs
cmpsl
mov
popf
adc
stos
and
mov
push
mov
icebp
xchg
push
stc
cmp
les
inc
addr16
popf
pop
mov
push
call
out
sahf
in
out
ret
mov
jno
ret
lret
jge
add
pop
and
dec
cltd
jecxz
pop
sbb
fistl
sbb
xchg
pop
push
pop
mov
or
mov
fidivrs
in
pop
jg
addr16
jp
pushf
push
or
xor
dec
jge
bound
add
pop
test
shll
dec
xchg
in
aaa
and
or
add
out
and
mov
addr16
jne
jge
imull
test
mov
std
jb
pushf
xor
out
call
mov
adc
inc
adc
aas
mov
lahf
out
pop
jne
cmpl
fwait
add
or
or
mov
call
dec
lahf
cli
imul
cld
xchg
jae
nop
adc
mov
sub
inc
inc
aad
dec
sahf
cmc
out
les
hlt
sahf
push
xor
mov
addr16
add
stos
cmpsl
cmp
dec
jecxz
sub
and
lret
stc
push
adc
add
sbb
insb
push
jne
pop
fstpl
ss
pop
lahf
pop
pushf
icebp
jl
push
cmpb
mov
addr16
cltd
dec
or
push
xor
out
les
dec
adc
xlat
jae
outsl
xor
pusha
mov
cmp
adc
je
cmp
cmp
int
pushf
out
fcomp
cs
ja
push
sti
xchg
adc
xor
and
pop
rcrl
add
daa
add
push
cmp
and
dec
adc
dec
and
inc
outsl
and
arpl
dec
insb
cwtl
adc
cltd
lods
mov
mov
addl
rorb
mov
mov
mulb
inc
stos
mov
stc
shrl
jns
movsb
push
sub
jg
adc
push
jecxz
enter
sub
sahf
push
adc
push
lea
icebp
lods
mov
test
outsl
adc
mov
xchg
dec
lcall
ret
mov
adc
lods
icebp
add
aas
jns
add
test
lea
lea
call
xchg
arpl
push
pusha
add
cmp
stc
mulb
mov
ss
mov
sub
and
movsb
xor
dec
aas
aad
inc
push
enter
sbb
inc
and
pop
popf
repnz
dec
test
add
mov
push
xchg
push
add
sbb
imul
jno
cmp
loopne
in
jle
rcrb
ss
sub
inc
mov
fst
lods
fwait
dec
sub
inc
lahf
clc
xor
insl
pop
lods
scas
popf
push
dec
cmpsl
and
aad
pop
dec
cmpsl
scas
or
fwait
stos
xchg
test
and
stos
jbe
dec
xchg
popw
rcll
push
jno
pop
test
mov
jns
pop
pushf
icebp
mov
arpl
lods
enter
addr16
push
lcall
popf
mov
mov
gs
and
xchg
xor
push
cld
mov
push
add
outsb
cmpsb
lods
add
and
stos
jae
jle
lcall
mov
nop
xlat
les
ss
pushf
out
aas
mov
pmaddwd
and
cwtl
mov
sub
pop
xor
cmp
sub
mulb
clc
ja
data16
pop
fbstp
pop
sbb
mov
fcomi
in
insl
mov
mull
jnp
inc
and
jge
adc
stos
inc
jo
xlat
pop
cmove
pop
xchg
push
jb
lea
or
cmpsb
cmc
repnz
and
jg
or
movsl
xor
adc
orb
mulb
lods
int
pop
lcall
sbb
in
insb
adc
aam
pop
pusha
sbb
cmp
lds
adcb
jne
dec
popf
fisubrs
fdivrl
inc
and
push
adc
fldcw
es
jle
in
xor
mov
aaa
negb
lahf
jl
sbb
jnp
dec
idivb
loopne
in
pop
and
sub
lahf
aaa
ja
or
and
sti
addr16
mulb
neg
cwtl
fdivrs
jne
outsl
fcomp
daa
pop
jg
pop
and
mov
xor
mov
mov
push
aaa
lods
pop
push
sbb
sbb
cmpsb
shlb
test
daa
sub
fisubl
jae
in
lods
imul
add
xchg
daa
xor
fistpl
and
sbb
loope
fsubrl
sbb
add
xlat
addr16
push
sahf
stc
cmp
and
ja
test
xor
and
xchg
stc
out
mov
xchg
mul
data16
das
push
test
in
loopne
int3
popa
cmc
pop
ss
sbb
and
adc
int
test
xor
and
scas
pushf
insl
mov
cmc
roll
lds
divb
sbb
jle
sbbl
push
mov
and
sub
repz
jne
jbe
push
lds
push
mulb
inc
and
int
loope
xor
loopne
jno
jns
loope
loop
insl
pushf
mov
jnp
jns
loopne
insb
scas
out
and
xor
clc
lahf
aaa
ja
call
pop
ss
test
dec
daa
sti
sub
xor
lods
daa
notl
push
cmp
sbb
sahf
in
es
push
adc
adc
setns
int
and
lock
sbb
cwtl
push
push
adc
divl
jmp
inc
xor
xor
insb
xchg
test
dec
scas
xor
fistps
insl
aam
xor
aad
xchg
nop
cli
jnp
jbe
cmp
fdivrl
sbb
ss
adc
sub
fildll
jge
sbb
jle
sbb
bswap
inc
xchg
adc
push
pop
mov
test
pop
dec
jle
push
xchg
or
push
out
pop
pushf
stos
dec
and
testl
add
out
mov
pop
shl
or
ret
mov
adc
sub
movsl
cmp
mov
dec
mov
imul
xchg
cmp
sahf
and
movsb
cmp
or
mov
xchg
mov
push
sub
es
lds
xchg
xchg
cmc
inc
jne
sub
jbe
xor
push
popf
jne
adc
repz
aas
jg
and
jo
and
adc
add
mulb
sub
stos
repnz
andb
aaa
pop
ds
ret
je
lret
imul
mov
mov
daa
mulb
inc
loope
mov
sub
ss
mov
and
push
adc
ret
inc
mov
jmp
pop
dec
or
jg
push
push
test
je
add
pop
mulb
movsl
scas
xchg
pop
adc
mov
mov
jo
scas
icebp
add
jo
in
stos
pop
push
inc
ja
in
dec
stos
scas
movzwl
into
test
out
out
ret
or
mov
mov
lahf
jbe
in
or
cmp
aad
adc
and
push
push
inc
es
inc
xchg
addl
xor
icebp
sysret
pop
out
push
or
cmp
mov
scas
adc
push
cmp
or
or
fsubr
shl
and
data16
sahf
std
pop
add
fnstenv
jnp
js
pop
fdiv
scas
pop
pop
cld
ret
jl
scas
scas
xchg
xor
adc
and
repnz
add
mov
pop
call
mov
mov
mov
mov
shll
pop
ss
lahf
sub
ja
push
fdivrl
sbb
imul
jg
bound
icebp
rcll
adc
popl
push
lods
arpl
sub
inc
xor
adc
into
es
sbb
sti
movsb
pop
rcll
shrl
popf
xor
pop
cmpsl
and
in
ss
xchg
jle
sub
and
pop
fidivrs
cli
sub
popf
nop
mov
or
mov
jl
dec
lret
call
sbb
notw
fnstcw
xchg
cmpsl
sub
xchg
inc
mov
xor
jecxz
in
repnz
arpl
negl
inc
add
daa
xor
fldt
dec
pop
mulb
icebp
lock
push
shlb
mov
jecxz
out
std
push
sahf
icebp
xor
mov
mov
adc
inc
xor
xchg
int3
movsb
sub
xchg
or
sub
pop
movsl
and
fxch
dec
xchg
int3
or
push
sub
pushf
add
jns
pop
arpl
fisubrs
fdivrl
outsb
xchg
and
jl
faddl
pushf
and
sub
sbb
int3
sub
lea
add
adc
aaa
sbb
sahf
mov
jo
adc
mov
push
mov
popa
sub
push
cmpsb
mov
sarl
fcompp
jge
lcall
inc
lcall
add
jns
push
xchg
dec
lcall
insl
in
pop
imul
xor
rorb
es
and
dec
sub
jp
cmp
inc
pop
hlt
imul
sbb
in
or
xorl
shlb
nop
cmp
jl
cmp
push
dec
repz
push
sbbl
xor
and
leave
repz
push
xchg
scas
adc
mov
outsl
or
mov
js
lahf
or
push
or
scas
fcomi
lds
xchg
add
and
icebp
lock
icebp
inc
pop
push
mov
or
cmp
adc
inc
mov
repz
pushf
scas
adc
pop
outsl
cmc
out
and
shlw
jecxz
lds
repz
push
mov
lahf
sbb
imul
cmpsb
pop
sbb
cmovle
mov
push
mov
in
mov
push
xor
arpl
xor
push
bound
pop
aam
push
sub
sub
pusha
xor
cs
cmc
xor
ret
sbb
negb
add
and
pushf
test
lds
sub
cmp
gs
and
insl
push
push
scas
ds
cmp
jg
sub
jnp
bound
stos
je
sub
mov
out
sahf
mov
jno
or
and
jnp
test
cmc
sahf
xchg
movsl
sarb
push
jp
inc
xchg
xchg
jl
adc
adc
and
fldz
ja
sbb
sbbb
jne
lahf
add
sbb
std
jge
mov
push
jp
std
mov
cltd
add
sbb
fwait
int3
adc
sbb
enter
hlt
test
jae
mov
xchg
and
xlat
xchg
add
jne
pop
daa
xchg
dec
lcall
rcll
or
pop
shrl
popf
arpl
push
lods
test
fcomp
sbb
ja
mov
sbb
ss
and
notl
sti
or
jnp
sbb
aad
fsubrs
xor
mov
cmp
in
cld
pavgw
xchg
mov
arpl
popf
scas
pop
and
dec
cltd
jecxz
add
dec
add
insb
pop
shl
ja
dec
data16
cmpsb
dec
pop
cmp
cmpsb
add
inc
jne
dec
mov
faddp
push
insb
ja,pt
mov
ds
data16
imul
and
enter
mov
fisubrl
mov
test
lods
inc
push
sbb
adc
cmpsb
test
daa
and
fld
movsb
fs
push
mov
xchg
inc
jnp
adc
dec
jnp
add
or
inc
sub
mov
sbb
clc
ss
mov
sbb
mov
stos
add
adcb
push
addr16
cmpsb
xor
sub
idivl
fidivl
pop
fisubs
pop
jg
and
int3
add
dec
roll
stc
jns,pn
ret
paddusb
sbb
or
dec
je
xor
js
dec
repz
add
out
leave
pop
stos
sub
movsl
or
mov
lods
adc
xor
xlat
mov
imul
cltd
jo
addr16
js
sub
sbb
dec
cmp
cmpsb
jnp
jns
xor
jns
push
test
xlat
fs
ss
pop
mov
loope
aaa
addr16
cmc
fwait
adc
push
test
mov
fiaddl
in
stos
lods
inc
push
sbb
cmc
dec
cmpsb
mov
repnz
mov
cmpsl
xorl
lcall
push
and
sbb
ss
enter
jmp
lret
cmc
jp
in
loope
in
decl
fildl
xchg
sub
shrb
popf
sbb
mulb
lock
pop
pop
decl
or
inc
and
fcomip
mov
xchg
or
sti
jb
mov
sti
fwait
mov
dec
out
scas
or
add
push
fs
cmp
call
pop
add
cmp
inc
sub
or
sbb
or
pop
lds
pushf
lahf
lahf
clc
aad
mov
cmc
mov
jmp
sbb
dec
stos
scas
or
imul
ljmp
ds
or
cmc
cmc
mov
fdivl
sti
jnp
nop
cli
mov
jg
sbb
dec
mov
xor
mov
int
dec
imull
add
xor
stos
ficoms
aad
fdivrl
jnp
sub
call
sarl
test
push
add
cmp
pop
mov
dec
or
pop
ret
daa
in
iret
push
cmp
sub
repnz
adc
dec
in
dec
xchg
mov
add
sti
lahf
or
roll
or
ja
rorl
push
xor
adc
divb
rcrl
cwtl
fdivrs
fnstcw
pop
test
les
sbb
mov
popf
sbb
mulb
lock
pop
mov
insl
inc
and
push
div
jb
movsl
mov
dec
add
xor
fimull
out
pop
xchg
push
ss
sarb
cmc
out
and
pop
addr16
push
or
shlb
movsl
add
push
ja
js
adc
out
fisubrs
fdivrl
loop
xchg
loope
ficoms
stc
pavgw
jnp
into
push
sbb
fistpl
in
idivb
mov
dec
stc
mov
pusha
inc
or
or
cmp
pop
dec
jp
std
pop
js
sub
adc
and
mov
sbb
mov
out
mov
ja
pop
fstpl
ss
mov
mov
xchg
les
pop
mov
adc
push
call
stc
popf
les
aam
scas
ss
sbb
sub
out
adc
dec
mov
pop
or
movsl
nop
sahf
mov
and
jb
or
adc
xchg
xchg
and
sbb
mull
dec
add
out
aaa
xchg
xor
lret
inc
repnz
nop
test
rcrl
inc
lods
adc
je
subb
push
sub
cmp
cmpsb
mov
fwait
xchg
adc
sub
pop
mov
loopne
dec
jb
das
dec
pushf
aaa
aad
stc
js
cmp
scas
bswap
je
jle
cs
cmp
or
mov
jle
movsl
test
insl
lea
pop
cs
pop
mov
scas
mov
aaa
idivb
jb
mov
push
mov
inc
jp
sub
push
adcl
cmp
mov
dec
mov
xchg
sbb
icebp
cmpsl
xor
test
outsl
or
jmp
mov
adc
push
in
andl
test
or
gs
outsb
rcrl
mov
or
dec
push
xchg
and
mov
and
push
mov
or
xor
int3
push
sbb
cmp
add
cltd
sub
mov
stc
test
stc
imul
xor
jne
dec
jge
aas
nop
addb
inc
jnp
loop
jns
loope
and
adc
cmpsl
jge
or
jns
fst
add
push
push
or
cltd
hlt
ret
or
ds
sbb
xchg
xlat
mov
mov
scas
or
pop
insb
cmc
lock
pop
mov
data16
cltd
push
mov
pop
ds
popf
les
sub
xor
fs
ss
hlt
rol
and
fildl
pop
jcxz
mulb
loope
mov
mov
and
aam
insl
popa
out
imul
popf
pop
and
push
div
jecxz
decl
inc
repz
pop
mov
dec
pop
push
add
and
out
and
mov
enter
push
xor
fdivl
and
test
cwtl
les
ss
mov
pop
cmp
gs
inc
fiadds
cmp
xor
loope
in
inc
push
sbb
sbb
or
aaa
xlat
or
and
out
arpl
icebp
and
out
inc
jbe
push
loop
xlat
inc
pop
test
negl
mov
push
sbb
inc
cmc
icebp
sbb
aas
mov
xchg
jnp
cli
aaa
inc
cmpsb
clc
fwait
xor
addr16
jl,pt
jecxz
sbb
sti
sub
lret
fwait
push
adc
xor
mov
addr16
sahf
cs
push
insb
push
aaa
in
xchg
jecxz
jae
dec
mov
adc
and
push
or
insb
inc
add
pusha
sahf
out
out
les
mov
xchg
add
mov
mov
insb
out
mov
fcomp
push
inc
ja
popf
and
jl
sub
jge
pop
leave
jb
cmpsl
fldenv
and
and
dec
aaa
adc
stos
jae
dec
shlb
leave
cld
push
popf
out
out
dec
ret
xchg
sbb
cmp
push
pop
mov
jns
pop
scas
shl
daa
in
cmpsb
push
inc
xorl
mov
fcoml
int3
dec
jne
lcall
lcall
cwtl
xchg
jmp
cmc
movsb
hlt
xchg
cmp
push
push
add
in
out
enter
push
aas
inc
push
aaa
cmpsl
and
cmp
faddl
sbb
into
testb
call
ljmp
leave
mov
inc
add
aaa
cmpsl
scas
xor
fcomi
lods
pop
imul
add
pushf
mov
jmp
lahf
insb
aaa
lock
mov
sbb
cmp
xor
push
in
jge
cli
push
sti
lock
rcll
leave
xchg
dec
lcall
fildll
jb
gs
add
adc
push
push
out
xchg
mov
sub
ss
and
cwtl
pop
ja
sub
and
mov
push
adc
or
test
jg
and
fwait
and
push
loopne
sbb
andl
mulb
int
std
ss
aas
enter
jle
dec
adc
jno
ja
mov
pop
xchg
mov
jbe
xchg
lahf
xchg
ja
ret
rolb
cmc
in
and
mov
setno
jg,pn
jne
imul
xor
inc
or
es
popf
dec
push
popf
add
jge
inc
xchg
test
clc
fisubrl
popf
das
outsl
and
sbb
arpl
mov
mov
sub
cltd
jne
out
data16
xor
iret
das
xlat
and
enter
sahf
divl
mov
sbb
sahf
test
jo
cmpsl
icebp
and
push
add
mulb
addr16
and
xlat
test
jge
pop
inc
adc
and
fisubl
mov
jne
fs
fisubrs
jnp
mov
mov
pop
cmp
sbb
sub
and
cmc
jno
es
mov
aad
sbb
movl
mov
and
xchg
pop
lock
insb
push
sbb
push
frstor
ret
daa
cli
dec
xor
pop
push
pop
sub
jle
loopne
mov
sub
xchg
fs
out
cwtl
fdivrs
shr
mov
pop
pop
jle
jne
rcrb
cwtl
fdivrs
sub
adc
fisttpll
test
mov
bnd
jb
mov
inc
ljmp
mov
mov
or
cli
sbb
push
xchg
or
sub
mov
and
cmp
scas
pushf
test
andb
fadd
jnp
sbb
jl
sbb
jp
fdivrl
outsb
mov
vpsllw
les
notb
lretw
adc
jbe
test
std
sbb
cmpb
int3
sub
testb
fstp
sbb
imul
fstpl
ss
jl
sbb
ret
xor
in
outsb
pop
jb
jns
negl
fidivrl
lahf
sub
xlat
inc
mov
fwait
push
add
into
and
aas
movsl
addr16
add
mov
jae
sbb
es
pusha
lret
fcompl
ss
mov
cltd
push
addr16
pop
jne
out
lods
pushf
xchg
or
dec
mov
dec
in
and
push
inc
lret
push
arpl
inc
aad
loop
test
mov
lea
jecxz
push
dec
lcall
or
aas
je
push
pop
xor
test
push
and
aaa
divb
jns
xchg
sahf
pusha
fisubrs
fdivrl
inc
adcb
or
fistpll
jo
sbb
mov
xor
push
mulb
jbe
fstpl
scas
hlt
test
std
pushf
mov
ficomps
je
push
or
sbb
jge
pop
out
ljmp
fdivl
notl
loopnew
and
in
sbb
mov
fwait
pushf
add
fdivrl
add
mulb
std
negl
jnp
sbb
mov
mov
cld
data16
test
mov
fisttps
test
jle
mov
xchg
jle
sbb
jbe
and
movsb
mov
fdiv
mov
cmp
cmp
in
outsl
mov
sbbl
jnp
je
pop
mulb
aam
inc
stos
and
xor
jecxz
ss
xor
ja
clc
int3
test
inc
rolb
mov
and
xlat
xchg
and
mulb
pop
ja
and
cmp
mulb
test
loope
xchg
sbb
sbb
data16
filds
cmp
add
pop
fdivr
jbe
cmpsb
fisubrl
push
pop
out
and
jnp
sub
and
ficompl
lahf
stc
sub
sub
mov
daa
xor
icebp
call
xchg
jmp
cmpsb
shrl
pop
daa
and
xchg
ds
fisubl
loope
fcompl
enter
in
push
arpl
loope
shrl
and
xlat
pop
loopne
jl
jecxz
sub
mov
daa
lea
jp
js
push
jnp
inc
and
sub
and
ljmp
icebp
push
mov
adc
jg
aad
insl
out
adc
fcomp
call
daa
adc
xor
jle
inc
lahf
sub
jns
add
dec
int
add
or
subl
jecxz
fwait
ret
cmp
push
in
repnz
dec
jnp
inc
jns
std
and
rol
push
dec
inc
adc
sbb
sub
nop
sub
fdivs
sbb
enter
ss
cmp
or
imul
push
mov
xor
push
pop
sahf
inc
ss
repnz
cmpsl
xchg
sbb
xchg
pop
dec
test
mov
push
pusha
das
lahf
in
push
pop
mov
adc
sbb
push
sbb
jbe
ja
push
fdiv
push
pop
push
adc
lea
sarl
sbbb
xchg
cmpsb
in
loope
popf
or
jg
sub
test
out
xor
cmp
add
ss
lahf
les
cs
jl
pop
pushf
int
pop
movsl
in
test
sbb
ss
ret
addr16
das
mov
jb
cmpl
jb
cmc
push
xor
mov
leave
pop
call
test
divl
push
xchg
aas
jg
iret
cmp
or
push
sbb
jno
dec
lods
rclb
sub
pop
sbb
in
jmp
pop
push
push
mov
xchg
sbb
sbb
mov
push
sahf
lock
ret
xor
xchg
sbb
test
pop
fwait
sbb
push
jl
jnp
and
icebp
mov
xchg
xchg
int
and
fcoml
int
push
shrl
dec
cld
shr
in
dec
sub
cld
push
push
sub
adc
movsl
jmp
adc
fwait
ret
add
repz
or
out
dec
fnsave
mov
fstps
js
sbb
ljmp
xor
pmulhw
out
lods
jmp
popa
idiv
push
inc
push
lcallw
testb
inc
out
jmp
inc
and
dec
push
int
sahf
icebp
out
mov
addr16
xchg
sbb
pop
notb
mov
pop
sbb
sbb
aam
cmp
cmp
sarb
ds
ds
cs
sub
decl
sahf
out
cmpsl
rcrb
cld
lcall
shrl
int3
lods
pop
push
sbb
hlt
jo
mov
sub
dec
cmp
cs
inc
mulb
into
xchg
roll
cmp
jecxz
cmp
fisubrs
pop
adcb
cld
adc
aas
pusha
cs
xchg
inc
jno
loopne
fdivrs
add
pop
adcb
lahf
xor
sub
fcompl
mov
fcoml
lret
add
xchg
notl
push
cmp
idivl
repz
fwait
and
dec
aad
push
cmp
mov
sub
shlb
mov
ret
gs
loopne
sbb
jl,pn
push
jecxz
sti
iret
push
sub
and
clc
inc
pop
and
push
adc
arpl
cmc
inc
test
inc
std
sarb
ljmp
dec
push
shl
popw
pusha
daa
inc
sti
stc
push
push
adc
cli
fnstenv
sahf
mov
xor
cmpsl
out
jo
sbb
out
push
xor
mov
imul
les
sub
push
sub
jmp
test
jmp
jl
sbb
add
notb
icebp
repz
dec
mov
lret
inc
in
xchg
pop
push
xchg
dec
out
mov
and
sarb
fnsave
outsb
outsl
ss
arpl
mov
sbb
xor
pop
scas
into
pop
sbb
test
int
sbb
ss
xor
xor
adc
pop
imul
mov
loope
in
jbe
add
cmc
clc
sbbb
sbb
push
test
dec
test
jl
xor
fdivr
ds
xchg
and
cmovle
mov
roll
mov
repnz
dec
cs
or
addr16
rol
xchg
sti
sar
imul
push
int
add
fs
adc
scas
jbe
push
in
sub
test
mulb
es
js
ds
in
or
pop
out
sbb
dec
fstl
mov
outsl
icebp
movsl
stos
test
fcomp
and
clc
arpl
fidivl
inc
sbb
xor
js
fstpt
popf
mull
push
and
adc
fcompl
ss
mov
enter
and
adc
xor
lock
outsb
pop
cmp
lcall
and
in
and
subl
int3
pop
sbb
add
loope
sbb
ss
sbb
addr16
jae
das
clc
negl
cmpb
data16
xor
xchg
popa
fistpl
mov
jnp
js
lock
fdivrl
mov
cmp
orb
test
cmp
loop
ss
cmc
cld
cs
fcomps
jnp
sbb
cwtl
mov
cmp
gs
pop
mov
jecxz
decl
jno
mov
cli
sub
sub
adc
popf
adc
movsb
jge
aas
jg
test
pushf
xchg
inc
adc
sbb
or
pop
pushf
icebp
and
push
dec
imul
add
scas
lods
dec
mov
pop
xchg
pop
out
mov
lcall
mov
jl
xchg
sbb
imul
out
out
jns
mov
das
div
add
mov
adc
sarb
scas
or
mov
cmp
movsl
lea
repnz
add
roll
shll
lea
fcoml
jle
hlt
push
mov
cmc
lcall
subl
adc
adc
add
mov
imul
mov
js
lahf
pop
cltd
mov
mov
sub
cmp
xor
push
int3
pop
cltd
test
imulb
mov
loope
cmp
xchg
mov
xchg
push
mov
ret
jae
pop
xor
les
ss
nop
cmp
cmp
jg
mov
daa
loope
cmc
test
xor
shl
mov
or
adc
js
lods
dec
adc
sub
dec
jge
adc
je
push
cmp
out
test
jo
cwtl
push
iret
xor
lahf
or
xchg
cmp
or
loopne
scas
fwait
jne
mov
xor
iret
xchg
cwtl
mov
cmp
imul
clc
inc
fidivs
pop
adcl
lock
mulb
rcrb
ss
rcll
add
and
addr16
fiaddl
or
adc
push
xlat
mov
mov
or
aas
daa
aad
mov
bound
add
push
scas
fcomi
ret
lock
sbb
jmp
mov
sbb
xchg
imull
lods
pop
push
sbb
push
loopne
pushf
sbb
cli
dec
xor
addr16
sub
mov
iret
maskmovq
imull
lret
add
push
lcall
cmp
inc
mov
jns
inc
mov
dec
push
push
cld
lret
mov
push
inc
mov
adc
lret
stc
mov
mov
sub
jp
popa
fstpl
ss
mov
or
xchg
push
fildl
cmp
mov
sub
xchg
mov
enter
sahf
repz
shl
push
call
movsb
shrl
js
repnz
lock
sub
sub
negb
js
pushf
outsb
or
ds
rolb
movsl
dec
aam
inc
cmp
or
loopne
pop
mov
push
fs
jg
inc
mov
pop
rcll
xor
and
mov
push
iret
cmp
lcall
jg
push
jbe
push
std
adc
xchg
dec
test
movsb
cs
out
xor
cltd
shlb
int3
push
jle
fs
xchg
addb
or
mov
stos
mov
xor
das
pop
adcb
andl
push
add
cld
sbb
addr16
pushf
sub
pop
rcrl
mov
xchg
pop
mov
cwtl
clc
popf
enter
jno
rorl
xchg
dec
lcall
add
jmp
test
cwtl
push
mov
and
mov
add
rclb
inc
push
jne
sub
adc
insb
pop
inc
in
cmp
xchg
ljmp
aam
add
push
xchg
dec
mov
fwait
js
pop
mov
repz
stc
sbb
inc
push
shr
arpl
push
mov
adc
mov
mov
xor
lahf
rorl
inc
mov
cmpsl
mulb
shrl
cmp
push
sub
mulb
inc
enter
dec
lahf
js
lods
add
push
addr16
xor
out
imulw
inc
sbbb
cwtl
out
sahf
rcr
out
mov
mov
inc
repnz
jecxz
enter
rorl
out
orb
push
inc
jge
in
cs
repz
std
mov
inc
arpl
sbb
dec
push
scas
icebp
push
pop
pop
sbb
scas
xchg
out
adc
pop
cwtl
xchg
push
xchg
inc
cld
jmp
ret
nop
mov
int
lock
pop
xor
sbb
mulb
and
add
fnstsw
mov
adc
aam
scas
les
pop
aas
jbe
pop
push
and
dec
adc
iret
addr16
std
psrad
mov
and
aam
sub
pop
mov
mov
jl
mov
es
mov
pop
cmp
cmc
rcrb
fiadds
aaa
jns
or
aad
popf
xor
in
ss
and
sbb
dec
mov
push
jne
xor
and
pop
push
popf
dec
xchg
popf
cs
xchg
and
jge
aas
mov
jp
ja
mov
jnp
jl
pop
mov
scas
mov
sub
inc
in
aaa
sbb
or
inc
sub
add
mov
mov
out
pop
and
loope
and
mov
cltd
push
sahf
ret
jns
cs
xchg
push
xor
jg
and
sbbl
idivb
clc
in
sahf
xor
jnp
cmpsb
mov
fwait
cli
lldt
imul
sub
sbb
and
and
ljmp
mov
push
xlat
sbb
mov
scas
leave
test
movsb
lea
es
cmpsl
and
js
jp
bsf
sub
aam
inc
pop
imul
and
inc
adc
sub
sub
mov
pop
cmp
test
dec
mov
add
movsl
mov
push
cmp
and
mov
add
inc
insb
mov
mov
mov
inc
lahf
or
sub
sahf
lds
mov
cmp
addr16
mov
out
jg
lahf
push
daa
imul
cmpsb
dec
sti
xchg
adc
mov
fstpt
or
fmuls
jbe
fsubr
nop
dec
mov
clc
subl
push
xor
repz
push
xor
mov
test
and
shll
mulb
jb
push
divl
fdivl
or
and
jnp
push
and
mov
or
and
inc
sahf
insl
movb
dec
pop
and
xorb
push
mov
push
cmp
in
push
in
dec
lcall
jge
push
xchg
inc
sarb
out
scas
movsb
int
aad
or
testb
adc
xor
mov
jle
icebp
in
xor
insb
inc
xor
ret
arpl
dec
or
cmp
lcall
std
push
fiadds
mov
adc
dec
jge
insb
add
mov
mov
sahf
out
out
les
jnp,pn
sbb
cmpsb
xchg
and
movsl
lret
dec
push
xchg
and
lock
insb
cmp
and
rcr
add
ljmp
imul
push
dec
xor
add
stos
pushf
loope
mov
add
in
xorps
dec
jbe
in
fadds
dec
mov
es
pop
push
sbb
stos
adc
cmpsb
push
mull
push
mov
ja
cmp
xor
push
adc
es
cmpsb
mov
fwait
jnp
push
out
mov
push
je
negb
shll
or
xchg
leave
int3
dec
movsb
and
pop
out
cwtl
int3
addr16
bound
xchg
dec
cmc
mov
into
repnz
icebp
sbb
mov
or
aas
xchg
es
xor
and
jns
pop
fdiv
dec
pop
pusha
test
call
pop
mov
notl
push
xor
dec
pop
enter
mov
in
int
push
addr16
cld
jg
pop
cltd
ret
jo
and
sub
adc
xor
stos
fildll
xor
fisttpl
out
sbb
dec
outsl
lock
add
adcl
hlt
imul
sti
adc
cmp
adcl
jbe
xor
jnp
xchg
adc
push
xor
addr16
jp
sub
ds
in
cld
paddusw
fildl
xchg
out
dec
jp
xchg
hlt
in
add
pop
adc
cmpsl
xor
xchg
call
leave
jno
adc
test
and
xor
push
push
xchg
fidivrl
cltd
mov
jmp
sbbb
sub
mov
fwait
mov
test
cli
jno
stc
scas
fldcw
sbb
mulb
loope
and
push
adc
fidivrl
movsl
pushf
cs
jg
inc
loope
aaa
ret
cmc
or
shlb
inc
mov
sub
mov
pop
xor
dec
fidivl
sub
jnp
ss
insb
enter
sahf
into
lret
shrl
aas
out
lahf
or
shll
add
lahf
adc
cmpsl
stos
xor
lcall
lret
repnz
unpcklps
scas
add
sbb
sbb
imul
mov
add
push
cmp
add
pushf
dec
dec
jge
inc
movsl
cmp
xor
dec
mov
aaa
aad
popf
push
sub
or
mov
js
adc
sub
ret
push
jle
std
aad
in
jnp
or
mov
jb
push
and
adc
paddusw
cld
mov
mov
push
mov
or
ss
aas
cmp
mov
dec
push
imul
lods
pop
sub
cmp
mov
fwait
push
adc
jmp
xchg
cmpsb
inc
sub
push
sti
push
cmp
ja
iret
mov
adc
cmp
outsl
push
test
pushf
or
mov
mov
pusha
jg
jmp
mov
mov
xlat
mov
dec
push
scas
icebp
cltd
pop
data16
cmp
or
dec
out
xor
sub
es
jne
inc
sub
cs
sti
push
bound
push
pop
lret
xorl
dec
lcall
mov
or
or
imul
push
enter
pop
push
pop
iret
inc
dec
push
mov
push
xor
pop
or
gs
mov
xchg
pop
push
imulb
push
xor
xchg
hlt
gs
push
add
sbb
push
xlat
popa
faddl
xchg
and
mov
cmpsl
lret
dec
mov
mov
add
push
add
cmp
in
ss
cmpsb
mov
fwait
add
add
push
jbe
test
jno
xor
scas
pop
mov
cmpsl
lcall
out
xor
push
mov
dec
cmp
mov
adc
pop
out
in
mov
jbe
shlb
fyl2x
insb
repnz
js
sbb
test
pushf
jo
sbb
gs
outsb
lock
test
fcomp
sub
negl
pop
mov
ss
push
sub
int
jb
in
outsb
lods
jnp
sbb
add
stos
aam
daa
xor
testl
pop
pop
icebp
pushf
add
imul
xor
ffreep
push
add
popf
sbb
cmpsb
mov
sarb
fisubrs
pop
stos
mov
imulb
lea
cli
adc
lahf
mull
loope
mov
ja
out
std
fdivr
sti
fidivs
sbb
adc
add
push
sub
cmpsb
into
push
stos
mov
and
fidivl
dec
sub
dec
in
in
add
std
ret
adc
xor
cmp
push
mov
push
cmpsb
jl
sbb
movl
push
ss
in
lcall
hlt
adc
psrad
test
outsl
or
xchg
lcall
scas
cmp
push
repnz
js
addr16
push
add
out
mov
out
mov
fnstcw
mov
fstpt
cmpsl
cld
jbe
and
inc
mov
and
ss
pop
inc
jle
sub
sbb
clc
mov
loope
sbb
jg
jnp
fstl
pop
sbb
ror
cmpsb
iret
push
push
dec
imul
addr16
jl
ret
push
dec
add
adcl
ljmp
scas
push
xor
leave
dec
mov
gs
push
std
cmpsb
cmp
mov
fisttps
jns
test
cld
into
xor
rcl
es
ss
adc
lock
and
push
mov
popf
addr16
int
push
add
sub
fsubrl
mov
mov
out
add
sbb
sbb
push
push
fs
dec
sbbb
lock
mov
fwait
aas
pop
shlb
adc
das
shlb
mov
cmpsl
icebp
out
sub
mulb
pop
cmpl
rcrb
in
cli
psrad
and
ret
inc
jl
and
or
fcompl
outsl
add
ss
mov
pop
aaa
lret
jns
jecxz
loop
sub
jo
jb
sbb
jnp
jg
in
xor
repnz
loopne
repnz
iret
out
adc
scas
add
inc
imul
std
ret
sbb
negb
fisubrl
sbb
cs
bndstx
scas
xchg
mov
dec
xchg
adc
stos
lods
push
sub
push
add
movsl
cmc
incb
add
shl
gs
cmp
push
lods
out
sub
aas
mov
and
daa
ja
out
or
pushf
jmp
and
arpl
mov
xor
call
mov
cmp
ss
push
cmc
lcall
shlb
sbb
adc
divl
sub
jbe
das
sub
cmp
imul
xchg
dec
lcall
ja
or
sbb
imul
leave
enter
lods
out
inc
push
sbb
add
adcl
daa
xor
fcmovnb
inc
xor
imulb
aas
divb
pop
fstpl
ss
scas
fincstp
and
cltd
in
ret
add
imul
xchg
dec
xchg
rcr
add
mov
adc
xchg
mov
scas
inc
xchg
dec
lcall
test
ficoms
pusha
push
add
out
cmpsb
test
xor
jp
ss
jnp
mov
repnz
jnp
loop
ret
sub
scas
add
push
mov
popf
xor
jb
fs
ss
hlt
aam
and
jnp
push
cmp
fnsave
adc
out
add
push
icebp
xchg
stos
int
mov
stos
and
fdivrl
and
imul
mov
adc
mov
jge
sbb
sub
xchg
enter
dec
into
loope
les
sbb
daa
in
mov
pusha
in
sbb
inc
dec
lods
and
incb
notl
shll
push
xchg
push
add
loop
aaa
push
mov
lea
cwtl
test
adc
ficoml
xlat
fimull
and
jnp
pop
dec
and
pop
pop
jmp
pop
aas
fiadds
cmp
and
xlat
imul
add
push
mulb
or
push
loope
ficoms
sti
pandn
jae
xor
add
sbb
stos
add
and
jnp
jmp
mov
in
fadd
pop
mov
pop
sbb
and
fldenv
lods
in
xor
push
fstpl
ss
adc
stos
cmp
or
add
xchg
sbb
mov
pop
fisubl
add
out
icebp
xchg
call
jecxz
cmp
dec
outsb
push
push
mov
js
notl
dec
cmp
pop
in
cmovle
mov
xchg
push
mov
in
cmpsb
aaa
pop
cmpsw
dec
xor
cmp
adc
aam
loope
test
jo
loopne
cmp
ljmp
sbb
lahf
jno
inc
data16
sbb
nop
and
push
daa
mulb
lock
xlat
int3
paddusb
je
mov
xchg
xor
sbb
dec
inc
test
outsl
pop
adcl
outsl
xor
bnd
mov
lahf
out
mov
jle
and
pop
popa
and
rolb
push
imul
dec
xor
mov
add
adc
sub
push
mov
out
in
push
adc
lret
lods
imul
push
xor
or
insl
xor
jmp
mov
jbe
xor
ljmp
cmp
jmp
or
int
dec
lds
ss
daa
enter
clc
and
loopne
cmp
shrb
xchg
push
scas
movsl
pop
mov
add
mulb
pushf
into
dec
inc
shl
cmp
mov
mov
sub
sub
lret
cmc
or
pop
mov
incl
idivb
addr16
jae
sub
cmpsl
pushf
jle
and
pop
xor
jg
out
std
test
or
rcrb
aas
push
mov
push
inc
and
cmp
mov
push
lea
push
gs
pop
adc
les
mov
jns
andl
jle
xor
mov
aaa
imulb
cmp
idivb
ja
mov
fdivrl
fdivr
jecxz
adc
fld
sbb
movl
ret
jp
jae
jbe
inc
push
je
push
ret
shlb
fwait
pop
lahf
std
push
stos
jbe
push
dec
fldenv
dec
adc
cltd
call
and
jo
sbb
or
sbb
jnp
mov
idivb
jge
aad
ljmp
push
popa
and
in
push
sub
and
icebp
cmc
xchg
pop
lcall
iret
scas
pushw
sahf
cmp
dec
cmp
fildll
xor
daa
ret
push
push
sahf
repnz
mov
outsl
jnp
jbe
mov
inc
mov
adc
data16
push
or
add
repnz
xor
outsl
lahf
mov
or
sbb
push
or
and
jnp
and
cmp
loopne
sbb
andl
mov
sub
mov
idivb
jbe
jne
insl
fisubrs
fdivrl
push
cltd
push
loop
cmp
or
sbbl
fdivrl
jns
push
shrl
mov
shll
ficompl
add
dec
js
or
test
lods
shll
cmc
sbb
dec
push
sbbl
sub
or
or
addr16
fwait
pop
scas
leave
xchg
pop
mov
push
idiv
xchg
jmp
fwait
xchg
cmc
hlt
ret
repz
stc
xchg
cmc
hlt
sbb
in
jmp
push
xchg
out
shl
shlb
push
sub
out
inc
jns
lock
and
add
and
push
sub
pop
mov
inc
jns
or
pop
jns
adc
lcall
test
dec
xor
mov
xchg
xchg
push
sub
notl
push
or
add
cmpsl
jmp
push
je
push
inc
sub
les
or
out
in
cmp
jcxz
push
fstpt
push
and
cwtl
cmp
push
insb
addr16
pop
jns
cmp
xchg
fisubrs
fdivrl
and
dec
adc
gs
cmp
jae
mov
or
fistpl
mov
inc
fcompl
xor
fcoml
sub
and
add
sub
lcall
and
xlat
lds
divb
arpl
pop
imull
popf
cmp
popf
push
and
loopne
mov
or
ss
xchg
movl
nop
bound
test
pop
cmp
outsb
and
dec
pop
stc
stc
push
fstpl
bound
cmp
add
jp
bound
or
lds
imulb
aad
shl
jl
in
fcompl
loope
lods
push
push
xchg
xor
xchg
push
mov
in
and
ja
sbb
push
inc
fimuls
lcall
inc
std
aad
dec
outsb
mov
call
push
pushl
je
mov
fdivrl
xlat
fisubs
xchg
adc
aam
pop
rcrb
sbb
fistpll
popa
and
xchg
add
cmp
or
loop
pop
arpl
nop
fistl
sub
cmp
loop
push
push
mov
xlat
mov
dec
pushf
jns,pt
xchg
xor
inc
push
and
sti
or
test
push
pusha
sbb
and
mov
bound
xor
or
pop
int
mov
pop
popl
notb
mov
and
sub
mov
and
les
xor
std
cmp
in
imul
add
cmp
sarb
inc
xchg
xorl
clc
fcompl
inc
test
and
mov
or
pop
mov
rcll
cs
pop
and
mov
add
dec
jmp
pop
mov
push
lahf
or
es
lahf
ret
fisubrs
fndisi(8087
dec
pop
mov
sub
and
std
pop
sbb
es
jb
xor
push
dec
hlt
cmp
adc
stos
pop
jo
cmpsb
mov
add
cmpsl
dec
and
inc
imul
mov
imul
and
mov
add
jmp
mov
test
adc
std
ficompl
ret
fcompl
ss
jb
and
dec
push
loop
inc
inc
push
imul
cli
ret
out
pushf
out
sti
cmp
mov
dec
insb
jle
mov
or
inc
sbb
pop
cmpsb
aaa
in
or
inc
shrb
add
sbb
jae
push
stos
rcrl
mov
fcompl
ss
shrb
push
enter
stc
iret
and
mov
das
cmpsl
mov
xorl
mov
pop
in
sti
les
ss
sub
jae
lahf
imull
loope
push
jnp
jne
scas
or
fisubl
dec
mov
push
jb
dec
xor
mov
ret
mov
aaa
loope
pop
lret
pushfw
push
or
popa
ret
lcall
ds
scas
fcomi
adc
lahf
cmp
jmp
shll
dec
sub
and
push
or
dec
mov
es
or
lcall
scas
xchg
adc
ror
inc
push
repnz
iret
fsubr
das
cltd
rcrl
xchg
add
sbb
dec
scas
or
in
pop
push
fmuls
lahf
fidivs
and
xor
and
int
ss
dec
adc
jns
mov
push
xchg
adc
out
xchg
adc
pop
jmp
js
out
adc
sbb
lea
aaa
xchg
adc
test
push
inc
jbe
imul
sub
sbb
lock
pop
adc
cwtl
fstps
xchg
cld
xchg
icebp
or
xchg
xchg
sub
xchg
testl
test
outsl
or
cmp
in
loopne
mov
xchg
int3
jae
inc
cmpsl
sub
fstpt
xchg
mov
and
insb
xor
xor
mov
ss
cmp
and
pop
test
jg
and
mov
cmc
push
rorb
adc
inc
testb
and
jo
xor
adc
fildll
enter
outsl
cmpps
ss
sub
mov
push
push
ret
scas
shl
sarl
or
add
dec
sub
jns
fdiv
popa
pop
arpl
mov
adcl
push
cmp
out
xor
pop
push
lret
jo
test
outsl
or
cmp
data16
out
pop
lret
aaa
lcall
ss
fsubl
pop
js
pop
pop
fildll
fdivrl
js
movsl
shrb
xchg
pop
dec
and
dec
mov
aas
add
in
cmp
shrl
xor
cltd
popa
mov
jecxz
fdivrs
inc
mov
pop
adcl
xlat
xor
fs
ss
cmp
cmp
pop
fwait
xor
jle
sbb
xor
push
mov
shr
fcomp
sbb
ja
repnz
cmpl
paddusb
int3
xchg
lock
into
cwtl
fdivrs
pop
pop
das
in
pop
pop
jle
mov
mov
fsubl
popa
imul
push
movsb
pop
mov
cmp
mov
addr16
sbb
into
sbbl
push
add
test
push
mov
loop
xchg
jle
sarb
dec
cmp
jbe
in
adc
aas
push
inc
ret
lods
pushf
xchg
mov
sti
xchg
imull
xchg
cmc
adc
xchg
xchg
cld
test
outsl
push
jge
fstpt
enter
outsl
adc
bound
dec
insl
outsb
mov
jae
mov
sub
fists
add
imul
scas
std
out
data16
neg
in
dec
pop
scas
or
sbb
mov
fnsave
inc
jg
push
fs
call
jmp
jp
jbe
in
jp
inc
and
mov
dec
negb
fidivrs
mov
lahf
loop
daa
inc
mov
icebp
out
vcvtsd2si
outsb
mov
mov
addr16
arpl
inc
out
mov
movsl
xchg
aam
sbb
fbld
imul
mov
dec
and
dec
into
scas
or
cmpsb
pop
aad
xchg
dec
lcall
sar
test
xchg
dec
jle
push
dec
in
pushf
lods
or
std
mov
sbb
dec
jl
jp
adc
mov
sub
rorl
jae
in
jp
sub
and
fidivrl
jae
cmp
cmpsl
shll
fldt
sbb
js
sbb
int
dec
test
sbb
sbb
or
cltd
and
es
push
out
stos
sbb
sub
pop
mov
pop
push
pop
jo
test
insl
mov
out
sbb
adcb
insl
insl
mov
pop
fcoml
movsl
cld
xor
mov
stos
add
push
repnz
xor
cmp
inc
adc
stos
xorb
mov
ss
enter
loope
dec
pop
push
add
jp
dec
mov
cmp
pop
shl
scas
pushf
test
popf
and
aaa
hlt
cs
or
lea
push
or
xlat
lahf
repz
push
hlt
dec
outsb
jp
in
insl
pop
dec
xor
xchg
sbb
xchg
iret
push
xchg
push
or
mov
out
mov
lahf
les
jmp
sahf
stos
pushf
movsl
add
incl
movsl
icebp
inc
pop
mov
adcb
or
inc
push
or
jo
pop
imul
mov
sbb
repz
imull
push
pop
ret
mov
cmc
repz
sbb
jnp
pusha
pushl
mov
idivb
lods
mov
dec
andl
push
push
enter
mov
cli
imul
das
push
addr16
or
adc
lcall
rcrl
pop
das
pop
in
mov
xor
popf
xor
imul
dec
insb
sub
repnz
adc
jle
push
mov
dec
fdivr
xchg
mov
js
push
push
inc
and
rorb
imul
or
jg
movsl
adc
iret
fldcw
les
mov
out
mov
jecxz
pop
jnp
sbb
ret
insb
stc
fcoml
lods
int
aad
jl
decb
sahf
or
mov
dec
dec
jle
rcr
dec
mul
mov
sub
mul
cwtl
fdivrs
sbb
push
daa
pop
jg
push
fidivrs
jnp
fstpt
jb
or
cltd
in
add
ja
sbb
push
aaa
inc
cmpl
in
xchg
loopne
repz
mov
insb
cmc
mov
sahf
ljmp
xchg
gs
push
pop
and
push
adcl
call
and
rcll
dec
xor
fsubrl
and
nop
mov
imulb
and
dec
adc
scas
pop
fnstsw
adc
call
jbe
fdivrs
iret
add
pop
ja
and
imul
fmull
xor
mov
fcoml
test
jge
and
cmc
fistpl
in
cmp
pop
cwtl
sub
lods
xchg
fs
ss
insl
insb
fldl
xor
out
pmulhuw
addr16
hlt
sbb
pop
inc
jnp
jne
out
sub
jb
in
fsubrl
add
sbb
cmp
pop
jbe
sub
fidivl
sbb
jnp
push
divl
fsubrl
xor
lods
gs
sbb
testl
dec
xor
js
ficoms
imul
jl
int
and
lahf
xor
mov
into
pop
pushl
fwait
dec
adc
sub
aad
push
push
scas
mov
andb
xor
imul
sub
fnstsw
out
or
sbb
xor
push
cmp
lock
jne
pop
mov
xlat
fmuls
test
xlat
xorl
dec
cmpsl
cli
dec
xor
push
and
mov
add
mulb
js
inc
sarb
repnz
and
leave
repnz
pop
sbb
or
int
push
icebp
in
mov
shll
ss
dec
ljmp
lds
test
loop,pt
aaa
mov
es
xor
into
pop
push
int3
std
or
lock
xor
rorl
test
rclb
jnp
jbe
orl
sbb
add
cmp
add
and
into
ja
jle
clc
sub
nop
cmpb
pop
stc
imul
sbb
icebp
or
cmpb
ss
es
.byte
.byte
