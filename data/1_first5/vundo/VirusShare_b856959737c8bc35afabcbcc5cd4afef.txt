lret
bound
sti
addb
mov
ja
neg
cmp
inc
in
aas
lcall
insb
inc
lods
mov
loop
loopne
dec
xchg
dec
pop
and
add
push
dec
dec
arpl
aas
inc
std
stos
jb
inc
sbb
lcall
add
add
push
inc
cs
ret
cmp
dec
jmp
and
dec
repnz
shll
xor
add
loope
inc
push
js
lcall
xchg
int3
pusha
adc
loop
roll
neg
xchg
cli
push
inc
push
cwtl
imul
pop
sbb
and
inc
in
addb
sbb
sub
dec
pop
or
adc
in
mov
xchg
sub
out
cmp
imul
xchg
adc
int
ja
or
call
pushl
pop
rcrl
and
jge
push
push
leave
into
out
incl
and
iret
cltd
or
adc
fisttpll
movsb
insl
bound
ljmp
lock
mov
xchg
push
push
or
xlat
inc
test
ds
sbb
mov
test
inc
in
ds
push
and
dec
jb
shr
adc
jnp
inc
ds
jl
lcall
iret
xchg
mov
push
mov
push
fmuls
mov
xor
fsubl
shrl
or
flds
or
cld
testb
mov
ror
xor
imul
icebp
dec
out
pop
mov
add
daa
xor
inc
cmpsl
xchg
mov
push
repnz
xor
xchg
mov
xor
cwtl
cmp
lods
xor
data16
lcall
mov
jo
aas
popa
xor
or
scas
jne
loope
fldenv
test
mov
and
pop
sub
out
or
xor
cltd
jg
repnz
and
and
jmp
or
cmp
push
fisttps
cmp
mov
cmpsb
movsl
xchg
xor
mov
in
mov
ret
inc
js
pop
in
xor
mov
arpl
std
arpl
push
jno
loopne
stos
adc
popf
cmpsb
jl
xchg
adc
inc
dec
ret
push
test
pop
cmp
xorl
ret
pusha
fstps
dec
push
sub
inc
fldenv
add
nop
lods
push
cmpsb
dec
adc
pushf
cmc
pop
mov
test
mov
pusha
rolb
jecxz
mov
rol
addb
dec
cltd
jp
dec
fsts
popa
into
mov
add
or
xor
lea
jle
or
sbb
add
lods
pop
in
add
ret
sti
lret
cmp
aam
lea
sub
stos
loop
inc
paddsb
jnp
mov
mov
or
clc
iret
psubq
stos
pop
dec
addl
sahf
out
mov
mov
scas
mov
imul
inc
fimuls
shlb
and
popf
jns
mov
xlat
imul
cmp
push
lret
dec
or
pop
scas
jae
bound
jns
mov
mov
mov
sub
jb
pusha
jmp
cwtl
pop
cmp
dec
pop
mov
into
rolb
pop
loopne
cmp
cmp
mov
jnp
fidivl
je
inc
popa
arpl
std
arpl
mov
inc
test
mov
inc
add
inc
loopne
push
push
incl
xor
test
fdivrl
rcrl
std
pop
pop
xchg
xchg
sub
jo
addr16
popf
int
es
aas
mov
das
jl
fimull
imul
pushf
ret
mov
jno
mov
in
sarl
lods
popa
into
mov
sbb
push
cwtl
hlt
hlt
cs
jnp
push
addr16
sub
pusha
rolb
pop
leave
dec
js
adc
sarl
lods
out
xchg
in
adc
mov
nop
lret
in
leave
insl
in
push
dec
sbb
sarb
cltd
pop
pop
push
add
mov
xchg
sub
and
cmp
fidivs
imul
cmpsb
inc
xor
push
and
fbld
xchg
test
ret
pop
test
jg
fs
add
pop
mov
pop
and
mov
ljmp
nop
push
inc
aad
xor
icebp
sub
out
arpl
sahf
rolb
mov
inc
sub
cmc
mov
jo
aas
popa
xor
or
adc
fsts
in
fwait
js
ss
or
lret
les
mov
pop
iret
aaa
pushf
into
bound
push
and
dec
cmp
mov
push
add
mov
daa
repz
rclb
shlb
jo
dec
add
mov
add
pop
test
xchg
pop
pushf
inc
pop
or
add
out
lods
push
mov
inc
xor
pop
xchg
xchg
cwtl
out
jbe
cmp
mov
sar
or
testb
in
sub
sub
enter
cmp
lcall
cwtl
cmp
ljmp
xchg
jl
sar
nop
test
push
fisubrs
xorl
push
and
mov
jecxz
xchg
jbe
je
push
and
xor
aad
dec
sub
mov
mov
xor
je
xchg
shl
rcr
loope
out
mov
ret
xchg
cmp
ror
push
lcall
mov
in
pop
or
pop
lock
insb
xchg
test
jp
and
scas
sbb
jbe
dec
mov
scas
jmp
call
push
std
xor
xchg
jp
scas
inc
mov
adc
mov
addl
out
aad
je
pop
dec
fcmovnbe
stc
pop
cmp
cld
dec
jnp
fsubrs
cmpsb
les
test
xchg
dec
pop
imul
jno
pop
repz
mov
shrl
in
shrb
push
inc
pop
scas
aam
inc
adc
leave
iret
in
cli
mov
cmp
dec
fwait
jle
xor
inc
push
addb
inc
jae
fdiv
push
xlat
lds
dec
add
sbb
pop
jp
pop
sahf
or
jb
cmp
sub
fstpt
mov
cmp
jns
and
or
fsubrl
sarb
cltd
pop
in
mov
pop
jle
lock
xchg
cmp
sub
pop
mov
mov
aas
jl
jp
or
sbb
mov
int
movsl
sub
mov
les
jmp
push
or
test
push
push
repz
int
push
jae
insb
sarl
lods
in
arpl
pop
lods
jbe
push
sbb
or
inc
push
cmpsb
dec
cltd
ja
pushf
push
out
sahf
loope
pop
call
in
push
pushf
or
xor
popf
loop
das
adc
rorl
mov
mov
test
add
push
out
add
xor
xor
xchg
jp
scas
inc
mov
mov
adc
rolb
fsubs
loope
ret
push
test
lea
pushf
es
mov
mov
addl
in
repz
push
loopne
repz
aas
inc
out
pushf
loop
lods
pop
jp
cwtl
xor
pop
lock
xchg
and
les
call
out
xor
iret
adc
add
pop
pop
movsb
ret
mov
mov
mov
add
out
or
cmpsl
test
sbb
mov
gs
dec
push
lods
loope
pop
shll
dec
xchg
mov
ss
jb
pop
add
xor
pop
test
fdivrl
mov
pusha
rolb
and
in
mov
pop
jbe
xchg
mov
xchg
rol
imul
loope
xor
flds
mov
fisubs
sarl
in
or
leave
scas
dec
addr16
addr16
repnz
ret
pushl
xchg
rolb
les
and
add
xor
imul
pop
cmp
xchg
ljmp
xlat
mov
ja
clc
xchg
push
fistps
and
dec
push
cmp
inc
push
cmpsb
dec
cltd
inc
insl
mov
lret
lret
pushf
jl
data16
outsb
ljmp
test
out
xorb
orl
imul
js
and
scas
mov
or
fdivl
pushf
mov
into
ret
or
and
imul
cmpxchg
adcl
pusha
rolb
mov
pop
push
add
mov
into
jo
fwait
aas
ret
lds
in
pop
in
xor
xchg
push
or
test
les
daa
std
xchg
add
aad
sbb
aam
negb
pop
in
lock
push
fnstsw
push
inc
dec
mov
shlb
xchg
cmp
test
dec
mov
mov
daa
lea
xor
sub
fildll
dec
paddusb
ljmp
pop
ret
push
fbstp
inc
dec
ss
push
clc
adcl
mov
add
add
pushf
nop
mov
pop
adc
repnz
movl
or
sahf
out
mov
mov
scas
cmp
cmpsb
dec
cltd
xchg
push
ds
aam
div
push
fnstenv
cmp
mov
add
xchg
test
jg
fs
add
dec
adc
push
push
lock
cmp
push
lea
popf
pusha
incb
fnsave
cmpb
gs
insl
in
sub
sbb
add
jae
pop
mov
sbb
push
xlat
inc
jmp
cs
iret
out
ret
lret
cli
fdivrl
in
mov
mov
push
ss
movsl
push
fisttps
cmp
inc
add
fs
inc
sbb
dec
mov
scas
adc
pop
rorb
out
adc
mov
mov
out
out
fstpt
clc
jmp
sub
mov
test
push
cli
popf
addr16
mov
jne
rorl
xchg
mov
push
inc
cmpb
fsubrp
lock
mov
and
jnp
push
addr16
sub
popw
je
xchg
bound
shl
rcr
inc
inc
rorb
mov
dec
scas
fisubl
addb
lock
xchg
adcb
jo
aaa
mov
pop
or
rolb
aas
jmp
fildl
cltd
xor
sarb
push
add
xchg
mov
push
aad
dec
sub
mov
mov
xor
jl
mov
scas
mov
cld
pop
pop
cmp
push
mov
ss
push
inc
pop
cmpsb
dec
cltd
pop
out
cli
cs
loope
aas
insb
cmc
or
lock
int3
pop
test
mov
sub
test
push
sub
pop
lods
stos
adc
outsl
out
daa
cmp
sar
nop
mov
push
mov
rcll
or
and
imul
jae
jo
out
push
jecxz
arpl
rcll
add
and
sbb
jl
cmpsl
sti
es
stos
mul
push
adc
movsb
out
cmp
aaa
adc
call
dec
dec
inc
mov
push
popf
push
je
jb
jb
les
sarb
pop
mov
ljmp
or
xor
bound
sub
in
xor
inc
movsb
xor
cmpsb
out
cmp
xchg
push
mov
xor
push
and
je
lods
inc
fwait
stos
sub
push
fcmovnu
lahf
xchg
xchg
cmpsb
add
mov
popf
cmp
sahf
scas
cltd
pop
dec
fstps
mov
jmp
shr
sbb
cmp
sub
and
sti
adc
stos
repz
cs
mov
mov
cmp
sub
add
into
sub
push
adc
and
fists
push
adc
and
add
jae
fistpl
dec
call
popa
sbb
or
ret
fsts
pop
sbb
idiv
mov
pusha
test
test
xchg
mov
mov
push
pop
adc
lcall
or
sub
leave
add
mov
adc
gs
lea
test
dec
mov
cmp
and
test
xchg
outsl
out
add
mov
cmp
lcall
jnp
adc
mull
test
jle
test
mov
pop
mov
rolb
push
xlat
mov
mov
dec
add
xor
push
mov
jb
cmp
sub
push
mov
and
sbb
cmpsl
mov
lods
pop
pop
sarb
cltd
pop
jmp
in
mov
mov
add
adc
lcall
xor
xor
sub
outsl
inc
or
add
push
push
ret
dec
xchg
jmp
lret
ret
addr16
inc
mov
pop
dec
cmp
fs
sbb
or
outsl
jl
outsb
push
fcmovb
mov
mov
hlt
aad
out
roll
add
rolb
inc
int
ss
xor
jnp
inc
adc
sarb
mov
aaa
int3
gs
mov
xor
jae
jne
fcompl
aam
in
mov
pop
mov
outsb
iret
fsub
mov
jne
cmp
mov
dec
mov
adc
ret
loope
push
jb
rorb
sbb
xor
in
inc
aad
mov
push
push
dec
pop
inc
inc
mov
inc
pop
mov
rol
mov
dec
pop
scas
jge
outsl
mov
mov
mov
cs
pushf
test
xor
cmp
sub
xchg
inc
mov
lock
pop
orb
lock
cmp
add
mov
xchg
lds
cwtl
xor
jmp
dec
int3
lea
cmpb
ficomps
jns
fldt
sub
fstps
call
fmuls
movsl
pushf
mov
pusha
rolb
ss
int3
push
fimuls
xor
cmpsl
xchg
sub
xor
dec
ret
mov
push
lock
xchg
test
in
leave
insl
in
push
rolb
dec
add
lods
pop
mov
cmp
cmp
fimuls
cs
inc
add
sbb
fsubs
lds
push
push
lock
gs
cmc
outsl
aam
dec
fidivl
popf
cmp
cs
mov
jo
std
insb
lea
jle
xor
adc
imul
xor
fildll
iret
and
movsl
pop
ss
jecxz
loop
out
xorb
insl
xchg
fadd
pop
mov
arpl
cltd
ljmp
xchg
insl
sti
bound
and
mov
mov
popf
test
aam
jae
inc
jne
sub
or
lds
and
lods
xchg
xchg
mov
movb
pop
shll
push
addb
adc
push
mov
dec
repz
xor
call
and
out
lods
push
mov
enter
in
mov
xor
push
gs
dec
out
faddp
js
testb
or
pop
adc
aaa
fcompl
and
pusha
aaa
push
cld
pop
pop
pop
in
and
shll
scas
popf
jo
adc
fcoml
mov
mov
in
xor
sar
pushf
ljmp
mov
mov
adc
push
adc
stc
jbe
je
push
and
ficompl
repnz
push
movsb
cmpsl
stos
and
xchg
push
or
mov
xor
inc
cmpsl
xchg
mov
repnz
sahf
adc
out
mov
jg
loop
sti
rcl
jbe
mov
adc
lds
loope
cli
shll
pop
pop
shl
into
int3
push
cmp
loopne
jno
cmpb
xchg
cmp
in
cmp
ret
js
xchg
call
test
lods
pop
mov
push
cs
sub
rcr
add
push
mov
loopne
mov
test
mov
rolb
cmp
or
inc
push
cmp
cltd
xor
xchg
sbb
fwait
aas
ret
lds
call
cmp
mov
cltd
xor
jno
pop
jp
pop
mov
add
add
lock
call
mov
outsb
xchg
iret
cltd
or
adc
fisttpll
movsb
insl
bound
test
leave
push
jl
mov
jle
mov
insl
cs
lods
std
and
imul
insb
push
mov
daa
mov
mov
adc
cwtl
push
call
adc
xor
push
push
mov
add
fisttpll
fmuls
hlt
aam
div
push
repz
fstl
es
fnstcw
cmp
xlat
sub
mov
movsl
mov
sub
push
and
xchg
stos
idiv
roll
stos
xchg
sbb
jle
add
stos
add
iret
fsubr
sub
mov
loope
inc
dec
mov
adc
push
adc
lcall
or
sub
leave
add
mov
adc
negl
adc
sub
cmp
sbb
gs
dec
ds
shr
xor
outsl
xor
and
and
test
jmp
lahf
xadd
push
mov
popf
push
mov
rorb
jb
fsubl
dec
fdivs
outsb
or
mov
daa
adc
xor
push
nop
inc
loopne
add
dec
fmull
insb
mov
andb
or
add
scas
and
outsb
add
jle
mov
xchg
mov
into
fwait
std
xor
fs
and
imul
mov
xchg
sub
lds
pushf
fisttpl
dec
addr16
addr16
repnz
ret
call
imul
andb
nop
sahf
enter
sar
nop
test
pop
and
mov
les
sahf
mov
jo
xchg
pop
dec
sub
mov
mov
dec
dec
outsb
jg
out
push
xor
mov
sub
out
jbe
mov
xor
inc
ljmp
fs
mov
cmp
pop
je
push
fsts
insb
xchg
ljmp
adc
mov
pushf
and
xchg
xchg
mov
mov
in
and
jg
imul
and
and
cmp
dec
inc
mov
jle
adc
fidivrs
adc
repnz
cmp
subl
iret
loop
xchg
mov
dec
mov
xchg
cmc
not
lcall
sbb
aaa
popf
cmc
cmpsl
push
or
movl
stos
and
mov
fdiv
push
xlat
lds
dec
add
sbb
pop
jp
pop
insb
xor
mov
mov
and
sbb
sbb
mov
xchg
or
ljmp
sub
jnp
ljmp
ljmp
mov
iret
cmp
xor
xchg
add
xorl
dec
xlat
iret
cmp
mov
mov
rorl
mov
into
jo
cltd
mov
fs
sbbl
jg
mov
addb
sti
test
lods
fbstp
je
int
add
mov
jmp
hlt
or
or
daa
mov
ljmp
jno
push
mov
scas
dec
mov
xor
jo
adc
xchg
imul
push
xchg
cmp
mov
or
lcall
pushf
repnz
cmp
push
test
in
mov
sbb
push
das
sbb
mov
dec
insl
scas
ja
jne
or
lret
mov
stos
sahf
js
add
cld
inc
jmp
sbb
dec
call
es
fcomip
xchg
add
bound
es
insl
and
test
adc
xchg
shlb
xchg
daa
ret
xchg
icebp
ss
int
nop
lds
lea
cmpsb
dec
cltd
mov
lds
rorl
xchg
push
pusha
stc
push
push
repnz
mov
cwtl
pop
orb
mov
xor
push
fstpt
xchg
in
fsts
js
pop
call
push
pop
and
lret
jg
mov
popa
xchg
sbb
mov
mov
fidivrs
and
pushf
sub
pop
and
sbb
ds
mov
pop
pop
out
mov
int
cltd
jle
jo
adc
imull
mov
in
sub
outsl
cmp
lcall
cwtl
cmp
jno
shl
pop
subb
add
shlb
inc
in
mov
in
xor
cld
xchg
mov
cmp
sub
jp
sub
xchg
out
fimull
mov
popa
push
fs
fmuls
sahf
lahf
sub
or
neg
dec
jbe
push
mov
push
gs
jl
sub
push
mov
pop
mov
jecxz
cwtl
pop
cmp
dec
pop
xor
or
cmp
mov
cli
femms
cs
and
mov
dec
push
or
xchg
jecxz
cltd
xor
jbe
pop
stos
xor
sarb
add
or
clc
or
idivb
pop
xchg
sub
rorb
pop
mov
loop
add
lock
xchg
mov
sarl
insl
fbstp
xchg
dec
mov
out
xchg
mov
aam
negb
pop
in
push
jl
jno
shrl
pop
inc
push
dec
xor
push
ror
repnz
sub
sarl
mov
aad
jae
cmp
mov
shl
ret
jl
push
fldpi
add
lds
pushf
fisttpl
mov
or
sub
cmp
pop
adc
lcall
xor
xor
sub
inc
loopne
sahf
jg
xchg
lods
xchg
and
adc
xchg
xor
jo
pop
fsts
out
mov
xchg
mov
ror
push
lcall
pop
inc
cltd
jo
pop
test
enter
jb
or
test
adc
mov
add
mov
push
out
mov
xchg
imul
imul
mov
test
out
mov
cmp
add
sub
lcall
in
xor
mov
xor
fsubs
cltd
xlat
push
mov
ljmp
dec
adc
data16
enter
jp
mov
sub
jne
add
sbb
jmp
pop
inc
jecxz
inc
scas
and
jbe
xchg
jg
sahf
cmc
mov
push
jge
xor
xor
mov
arpl
xor
sahf
mov
jge
jecxz
sbb
mov
sbb
and
cmc
fcoml
mov
mov
xchg
jge
inc
sar
xchg
cmc
xchg
jno
sbb
fdivrs
and
es
adc
stc
jbe
je
push
push
lock
xchg
js
mov
movsl
xchg
xor
inc
movsb
or
jno
flds
cmpsl
repnz
lds
das
mov
mov
insb
and
loop
xor
jl
pop
add
push
pop
fdivr
push
andb
stos
out
sbb
and
sbb
dec
xchg
cli
push
inc
mov
lds
dec
pop
test
cmp
insb
in
and
call
jo
scas
dec
fucom
mov
loope
inc
dec
mov
adc
ret
loope
push
jb
rorb
cmp
add
and
fstpt
pop
jae
jo
push
inc
add
data16
rcll
add
and
stc
outsl
out
add
mov
les
and
sub
lods
pop
xor
push
add
add
in
jne
xchg
lret
inc
inc
aaa
mov
push
mov
mov
in
mov
add
xorps
adc
jbe
push
bound
push
cwtl
dec
fmuls
movsl
pushf
icebp
sahf
scas
pushf
in
jmp
loop
fisubrs
and
leave
dec
js
adc
cmp
xchg
out
push
jge
add
dec
xor
mov
mov
or
insl
and
mov
mov
cmp
pop
in
mov
mov
loope
aaa
sbb
leave
int3
cmp
repnz
or
jnp
mov
xlat
xchg
lods
xchg
repnz
mov
push
mov
sarb
and
pop
fsts
add
inc
outsl
mov
fildl
push
dec
pusha
shl
es
adc
xchg
jecxz
cwtl
pop
cmp
dec
pop
or
repz
push
stc
cmp
mov
movsl
jae
mov
mov
cmp
sbb
pop
aam
nop
adc
pushf
enter
pushf
dec
icebp
pmuludq
sub
iret
mov
dec
cmp
xchg
adc
dec
pop
and
jne
scas
dec
cltd
xor
xchg
std
and
mov
sub
cmp
push
xor
gs
and
in
and
and
xchg
xor
adc
push
jmp
mov
and
jl
mov
mov
popf
cmp
xlat
or
mov
mov
jb
aas
fst
or
lods
shll
lods
pop
hlt
sub
and
or
cmp
and
mov
subl
aas
push
das
inc
and
adc
and
fistpll
fwait
and
fcoml
mov
mov
in
xor
sar
pushf
ljmp
pop
mov
xchg
push
ds
roll
dec
lret
enter
movl
cmp
cmp
sub
cmp
cmp
mov
andb
or
xchg
stos
faddl
cmpsl
nop
cmp
insb
in
and
cli
inc
in
jmp
ljmp
iret
out
ret
lret
cli
in
shll
xor
int3
aad
pop
stc
shlb
cmp
mov
lds
mov
or
mov
aad
add
xor
aad
pop
sahf
stos
jmp
mov
cmpsb
bound
add
sbb
mov
or
jge
mov
lods
dec
lods
outsb
mov
cmp
push
xchg
movsl
dec
fstpt
xchg
div
addr16
mov
shll
dec
dec
aas
aam
repz
mov
mov
mov
lods
cmc
mov
sbb
into
test
out
movsb
cltd
cli
mov
aad
jae
and
pop
mov
je
test
out
sbb
push
xor
and
scas
insb
push
daa
sahf
inc
loope
mov
sti
leave
lret
cltd
xchg
into
jno
fisubs
dec
inc
je
imul
add
lahf
fadds
or
xor
inc
push
and
fs
pop
arpl
jecxz
push
pop
test
xor
idivl
pop
or
inc
out
inc
movsb
sahf
aas
test
clc
xchg
jbe
in
add
dec
jnp
movsl
jmp
inc
sbb
data16
popf
imul
pop
rolb
ljmp
into
inc
and
bound
test
push
cmp
push
adc
pop
pop
jbe
out
stos
xchg
sbb
outsb
jns
mov
leave
addl
fdivp
adc
xchg
jecxz
cwtl
pop
cmp
dec
pop
xor
or
cmp
mov
out
icebp
xchg
imul
jno
dec
pusha
mov
mov
dec
cmpsl
mov
icebp
fstps
inc
ss
mov
inc
add
inc
loopne
push
xor
inc
mov
pop
mov
fistps
int
es
aas
mov
jg
ljmp
sub
popa
and
loop
mov
repz
cli
je
and
xor
and
sub
mov
lds
fdivs
add
in
inc
push
imul
mov
movsl
mov
xor
ja
popf
cmp
dec
adcb
mov
mov
mov
leave
mov
mov
movsb
jecxz
aas
or
pop
jo
mov
pop
cmp
mov
add
or
pop
mov
jne
dec
xchg
dec
fwait
mov
add
push
out
mov
jmp
daa
push
pop
add
and
pop
sbb
lret
icebp
xlat
push
inc
and
aad
cmp
dec
jmp
and
xor
sahf
mov
fsts
inc
jl
pop
nop
cmp
ds
xchg
dec
jg
sbb
mov
or
inc
mov
mov
std
and
mulb
arpl
jl
into
lret
pop
jp
jle
hlt
lock
pop
orb
jmp
enter
adc
out
std
imul
push
jae
and
jl
jno
shrl
pop
inc
push
mov
addb
jg
sub
inc
into
xchg
sub
jb
mov
xor
push
fstpt
xchg
in
add
pop
repnz
xchg
fdivrs
xor
test
ljmp
mov
iret
jl
lcall
iret
xchg
mov
push
push
mov
mov
int3
popf
cmp
ffree
repz
xor
mov
cmp
into
ret
rcrl
ljmp
out
mov
adcb
dec
dec
imul
push
inc
aad
jp
sub
int3
cmc
push
sub
hlt
lds
sbb
push
inc
sub
orb
mov
cmp
pop
je
push
fsts
in
sub
xor
pushf
and
xchg
xchg
mov
jmp
xchg
aad
scas
or
dec
cmp
xchg
in
aam
ss
es
mov
jecxz
out
out
fstpt
fbld
cmp
pop
dec
push
push
fidivrs
and
or
ret
repnz
lret
leave
out
push
rorl
addb
int
sub
mov
out
cmpsb
mov
scas
add
mov
lods
pop
pop
insl
rolb
in
xchg
sbbb
xlat
test
xor
push
xchg
cli
jmp
roll
out
sub
into
mov
inc
sbb
addr16
popf
mov
movsb
jmp
jmp
xor
xchg
lock
insl
cs
lods
std
and
imul
ss
mov
pushf
nop
mov
lahf
add
xor
outsl
jns
adc
xor
push
xchg
mov
popa
pusha
mov
push
ret
xchg
andb
sarb
inc
pop
pop
in
stos
or
pusha
inc
ljmp
xlat
mov
ja
clc
xchg
push
fistps
and
fdivrs
stos
in
push
or
cmp
insl
out
int3
inc
je
test
enter
xor
sub
or
lret
mov
stos
sahf
js
add
cld
inc
sbb
inc
loopne
int
mov
out
adc
in
mov
add
les
and
dec
mov
out
insl
and
test
adc
xchg
shlb
pusha
ror
mov
icebp
ss
int
nop
cltd
dec
dec
and
aaa
shrl
pop
pushf
out
lods
pop
and
mov
std
adc
fs
cmp
daa
cltd
cli
mov
dec
or
add
lods
pop
mov
cli
imul
les
xlat
pop
dec
xor
lea
rol
cmpsb
cmp
aam
push
xlat
in
inc
push
xchg
mov
xchg
les
pusha
rcrb
rcr
iret
popf
cmp
orl
mov
push
std
repz
cmc
daa
mov
or
pop
inc
inc
push
cmpsb
dec
cltd
lods
loopne
mov
sti
push
sti
mov
xchg
addl
stc
arpl
maskmovq
imull
dec
lock
inc
sbb
cmp
or
mov
sub
adc
pop
sarl
lods
subl
fwait
cmp
jo
std
insb
ss
in
out
jnp
movsl
dec
cltd
xor
mov
shrb
push
aam
int
and
pop
adc
lret
mov
inc
shr
cs
fsub
mov
add
rcrb
mov
or
fwait
mull
cmp
inc
mov
int
rcll
or
loop,pn
int3
jae
cs
shl
cmp
add
sub
jmp
push
lahf
mov
mov
push
adc
mov
int
and
jge
push
push
leave
into
out
incl
and
jno
mov
divl
or
inc
jbe
ljmp
stos
out
push
int3
in
jbe
xchg
mov
xchg
rorl
pop
adc
paddsb
mov
sub
add
jecxz
push
fwait
cmpsb
test
xchg
cmpsb
jbe
repz
pusha
rolb
daa
fldenv
insb
adc
inc
or
ss
repz
jne
sub
out
sbb
xchg
mov
cli
fdivrs
ret
jo
adc
daa
mov
pop
pushf
fiaddl
das
data16
and
sarb
jge
gs
jae
test
inc
cmpsb
addr16
mov
mov
xchg
mov
fs
dec
je
dec
lahf
sub
in
sbb
xchg
stos
es
or
scas
add
ret
pop
jmp
fs
mov
jnp
fidivl
je
inc
popa
arpl
icebp
and
hlt
pop
sub
sub
das
lahf
mov
mov
push
adc
mov
int
and
jge
push
push
leave
jmp
int
lock
call
mov
outsb
xchg
iret
adc
mov
cmpsl
cli
mov
mov
sub
sub
inc
push
pop
and
lret
push
outsb
cmpsl
mov
adc
mov
add
in
inc
push
xchg
mov
fsts
loope
test
sub
cmp
cli
mov
dec
inc
mov
aad
cmp
xor
xchg
andb
xchg
mov
test
loopne
inc
push
push
mov
fwait
cmp
jo
push
or
xor
es
test
xor
je
xchg
shl
jae
mov
or
imul
and
sbb
lcall
loope
xor
mov
sub
fs
fnsave
gs
pop
pop
jecxz
loop
out
xorb
bound
and
aaa
cwtl
pop
cmp
dec
pop
xor
or
cmp
mov
in
mov
ret
inc
js
sbb
ljmp
jle
pop
popf
fiadds
in
rcrl
in
pop
les
inc
push
aaa
pop
fidivrs
out
orl
outsl
les
add
test
movsb
xor
dec
test
ret
sub
push
lahf
xor
pextrw
je
xlat
lods
pop
mov
xchg
or
jmp
jb
fcmovnu
lahf
xchg
jge
into
jbe
adc
cmp
and
push
add
sbb
adc
lea
rorb
int3
mov
iret
pop
out
or
jmp
fwait
enter
xchg
xor
imul
fcoml
lods
sub
cmp
xor
out
sbb
xchg
mov
inc
jb
mov
arpl
inc
mov
movsb
jmp
fwait
imul
xchg
test
je
loop
sbb
pop
sbb
mov
push
lret
dec
or
pop
scas
jae
bound
add
jle
mov
inc
sbbb
fdivp
aas
sub
inc
fsts
inc
sbb
or
cmp
mov
in
mov
ret
inc
js
sbb
clc
pop
xchg
and
mov
mov
rcrl
in
or
fwait
call
push
aaa
pop
fidivrs
out
orl
outsl
les
add
test
movsb
xor
cmpsb
out
cmp
cmp
xchg
adc
jbe
push
sbb
push
fwait
mov
cmc
loope
int
iret
pop
fs
inc
clc
xor
mov
aam
fisubrl
popf
cmp
mov
jb
cmp
sub
jle
scas
test
xlat
jns
and
incl
int
lea
leave
mov
dec
dec
in
cmp
stc
jmp
pop
adc
sub
cmp
dec
push
pop
lock
push
pop
imul
lods
fcmovb
cmp
ffree
repz
out
mov
and
mov
les
sahf
mov
jo
xchg
pop
dec
sub
shll
lahf
push
mov
dec
add
push
dec
inc
jbe
pusha
and
ffreep
rolb
jae
cmp
push
sub
hlt
lds
sbb
push
inc
sub
orb
mov
push
push
loope
jmp
xor
xlat
push
push
mov
enter
and
lret
jne
or
dec
cltd
fisubrl
popf
cmp
jb
lcall
les
push
mov
lcall
push
jb
jmp
xor
shll
lods
sbb
in
xor
push
sbb
add
pop
cmpsb
jb
jo
jo
fwait
aas
ret
mov
test
pushf
movsb
jns
mov
xor
jle
jg
jb
dec
lods
outsb
mov
cmp
lods
pop
jmp
sub
mov
popa
lret
fucomip
pop
dec
inc
outsb
push
stos
dec
push
ljmp
imul
add
pop
add
or
xchg
sbbb
pop
inc
push
fdiv
xchg
sti
lret
lret
stos
and
addb
cli
sbb
popa
ds
xchg
movsl
push
addb
addr16
mov
aaa
sub
lock
cltd
fcoms
push
cmp
mov
shl
lret
fists
jno
decl
mov
jmp
pop
dec
lock
jmp
int3
pop
imul
in
mov
sub
inc
dec
shrb
xchg
in
adc
mov
stc
int
repz
repz
lock
shlb
dec
pop
push
in
xor
cld
xchg
mov
in
push
sbb
sub
repnz
mov
mov
adc
popf
dec
add
fwait
scas
dec
loopne
mov
jl
lds
push
or
fs
idivl
inc
test
push
adc
mov
or
push
or
stos
xchg
sbb
outsb
jns
mov
in
cmp
lods
pop
mov
and
pop
es
dec
lds
adc
out
pop
push
fldl
sbb
add
pop
test
or
mov
mov
inc
cmpsb
dec
cltd
and
add
dec
mov
mov
or
ss
mov
shl
dec
rcrb
popf
and
icebp
js
ret
stc
mov
push
cmp
sub
popf
movsl
test
hlt
cld
shll
xor
mov
repnz
or
lea
xor
out
fstpt
pop
xor
ljmp
xor
jmp
mov
stc
div
js
bound
loopne
sub
out
or
les
iret
cltd
sbb
lret
jne
fcoml
or
sbb
pop
in
xor
inc
out
stc
dec
and
stos
cmpsl
sarl
mov
add
push
shr
or
xor
test
fbstp
fisubl
popf
cmp
mov
push
xchg
mov
pop
rol
inc
add
xchg
lea
dec
je
sbb
or
imul
xor
push
cmp
ds
popf
fwait
mov
bound
xchg
inc
sbb
jg
xchg
mov
mov
aas
mov
mov
xor
aas
mov
aaa
jmp
push
movsb
andb
aam
add
ret
fsts
pop
sbb
idiv
mov
pusha
test
test
dec
fdivs
mov
xchg
or
jmp
fdivl
lcall
les
dec
and
aam
push
call
sbb
push
movsb
and
fnstenv
std
lret
stos
mov
inc
add
push
lret
xchg
lds
jns
hlt
or
nop
stos
push
mov
mov
in
mov
fucomi
sub
or
cmpsl
test
cmpsl
imul
mov
cmpsl
cli
je
and
xor
and
sub
mov
dec
lods
cli
push
jle
and
or
xlat
in
aas
push
push
inc
cmp
repz
pop
mov
fmuls
mov
cltd
xchg
jge
inc
sar
xchg
cmc
xchg
jno
sbb
xlat
lret
out
stos
ret
push
and
es
adc
stc
jbe
je
fstl
in
and
jmp
mov
mov
cmp
fcoms
mov
gs
mov
xor
jae
jne
fcompl
aam
in
mov
rcrl
incl
mov
das
sbb
mov
dec
insl
scas
ja
jne
or
lret
mov
stos
sahf
js
add
cld
inc
sbb
inc
loopne
int
mov
out
adc
in
mov
xchg
sub
bound
mov
sub
xchg
inc
inc
jbe
cltd
xchg
adc
popf
cltd
aad
std
push
mov
pusha
rolb
pop
mov
out
sub
int3
popf
cmp
sbb
jecxz
sbb
repnz
cli
push
inc
push
mov
adc
pop
inc
cmp
stos
rorl
fsts
popa
into
mov
sbb
fcmovnu
out
push
jl
push
test
add
loopne
data16
aad
pop
mov
shrb
dec
loop
lret
in
das
imull
mov
fmuls
and
push
mov
aaa
and
inc
push
xchg
pop
xchg
into
mov
sbb
sti
adc
repnz
movl
add
clc
cmp
lcall
int
sahf
jmp
fmuls
mov
fistps
add
xor
mov
ljmp
sbbb
cmp
pop
and
mov
repnz
loope
xor
push
std
ljmp
ret
rclb
adc
addr16
popf
inc
cmp
aaa
pusha
mov
add
push
dec
inc
dec
mov
push
test
mov
jnp
push
mov
movsb
fnsave
cmpb
pop
push
add
fsubs
gs
es
fadds
fdivs
add
enter
push
adc
jecxz
dec
pop
jbe
cltd
jo
xchg
ret
pop
jne
sub
ss
addb
inc
jns
mov
xchg
dec
add
cmpsl
dec
dec
push
fs
cltd
cmp
cmp
sbb
mov
dec
insl
scas
cmp
lcall
xchg
or
jmp
fdivl
pushf
mov
sub
sbb
xor
in
inc
push
es
fcomip
fisttpll
jns
ds
hlt
mov
enter
lret
cmp
and
mov
mov
xor
pop
mov
loope
pop
xor
shll
push
addb
roll
insb
into
popf
cmp
inc
pop
scas
aam
inc
adc
leave
sub
in
add
dec
and
dec
mov
dec
sarl
lods
cmc
mov
push
iret
cwtl
repnz
pop
mov
dec
xor
adc
xor
mov
clc
add
aam
xchg
hlt
jmp
xchg
decl
xor
dec
ret
mov
cmp
sahf
sub
cmp
xor
add
movl
scas
jmp
pushf
ljmp
mov
mov
pop
leave
jne
aas
test
mov
dec
pushf
and
pop
jno
inc
xor
push
cmpsb
lret
sub
adc
lods
pop
mov
loopne
sahf
jg
xchg
lods
xchg
and
adc
xchg
mov
leave
mov
movsl
mov
push
and
or
xor
fisubrs
cwtl
push
sub
pop
adc
lret
and
clc
pop
call
in
cmp
and
lret
xchg
or
jmp
fdivl
lcall
les
dec
and
aam
sbb
nop
out
daa
sub
sti
push
add
pop
mov
push
icebp
rcrb
sub
outsb
loop
pop
sbb
mov
aaa
inc
dec
mov
cmp
out
jmp
push
xchg
fwait
lcall
gs
lods
pop
dec
lahf
xchg
xlat
mov
sti
iret
jge
sbb
rcrb
dec
mov
cmovb
mov
mov
or
xchg
inc
mov
lock
icebp
cmpsl
xchg
sbb
int3
orb
push
aas
jp
mov
into
loopne
sahf
ret
mov
jno
mov
in
shll
xchg
lcall
add
cmp
and
test
cmp
jg
inc
mov
pusha
pushf
in
mov
repnz
inc
push
cmpsb
dec
cltd
xor
gs
sti
or
mov
mov
pop
push
out
xor
push
jecxz
js
push
pop
mov
sub
and
pop
mov
test
aaa
push
lret
pop
in
add
jmp
clc
in
push
sbb
push
das
jb
mov
jmp
fwait
enter
xchg
xor
imul
push
fdivs
loop
mov
nopl
fbstp
je
int
add
cld
testb
push
outsl
ljmp
dec
mov
inc
adc
push
lcall
shlb
xlat
inc
sub
mov
mov
enter
jb
cli
fdivrl
in
mov
mov
push
ss
movsl
push
push
pop
dec
push
fdivrl
sbb
jno
mov
jnp
xchg
dec
jg
sbb
inc
jp
adc
lds
xchg
or
fimull
dec
pushf
test
xor
lret
mov
aam
mov
aas
jle
mov
stos
push
mov
mov
jecxz
test
sub
daa
xorps
adc
jbe
push
bound
push
cwtl
dec
fmuls
movsl
pushf
icebp
sahf
scas
pushf
in
jmp
loop
lret
in
das
imull
fisttps
dec
fnstcw
popa
mov
repnz
mov
idiv
int
repz
push
mov
clc
and
jo
xor
mov
mov
imul
loop
int
sub
scas
in
pop
mov
daa
xchg
cmp
or
jnp
mov
stos
cwtl
ds
sti
xchg
push
cmpsb
dec
cltd
arpl
xor
das
cmp
dec
stos
cwtl
add
add
in
xor
std
stos
jb
inc
sbb
lcall
mov
mov
sti
cwtl
icebp
xlat
push
inc
and
aad
cmp
dec
leave
pop
mov
aad
pop
mov
inc
movl
or
inc
clc
fdivs
int
or
insl
int3
cwtl
and
pop
lcall
or
sub
leave
add
mov
adc
gs
lea
test
dec
mov
sub
and
jmp
stc
outsl
out
add
mov
les
and
daa
ret
xchg
icebp
ss
int
nop
out
and
repnz
fwait
jle
xor
and
mov
les
aaa
std
cmp
push
popa
mov
test
lret
and
mov
and
mov
in
or
hlt
enter
sahf
loope
addr16
addr16
repnz
test
sub
add
subb
gs
pop
vpunpckhqdq
fs
sbb
inc
xchg
lods
sbb
inc
sarb
jge
gs
jae
add
ret
and
cmp
jmp
andb
dec
sub
or
dec
aas
dec
insl
xor
mov
call
in
push
mov
clc
fdivs
int
add
mov
and
scas
pusha
pop
xadd
pop
pop
jmp
ret
out
ss
push
repnz
mov
mov
mov
imul
rclb
in
xor
push
xor
adcl
adc
hlt
mov
jno
pop
add
and
push
xor
jg
cs
jb
and
test
cmc
inc
dec
lods
aad
lock
mov
xchg
scas
pop
test
jns
push
lds
rorl
xchg
push
pusha
stc
fildll
loope
xchg
sub
inc
out
stc
dec
and
inc
sbbl
pop
aad
sub
loope
negl
sahf
repnz
stos
mov
aad
xchg
inc
fidivl
popf
cmp
xchg
in
adc
mov
popa
mov
xchg
sub
repnz
jo
jne
subb
aas
scas
pop
mov
cmp
or
lods
js
adc
jg
pusha
mov
adc
push
adc
stc
pop
pop
push
pop
mov
push
and
aad
dec
sub
mov
mov
xor
je
xchg
shl
rcr
loope
out
mov
int3
mov
ror
push
lcall
pop
inc
cltd
jo
dec
mov
xlat
mov
shl
sti
mov
dec
push
or
fsub
push
jb
test
add
dec
out
inc
data16
cmp
aaa
movsl
push
fisttps
cmp
test
out
mov
jp
push
leave
shrb
cwtl
xor
loope
adcl
mov
inc
mov
inc
mov
dec
pusha
fstps
dec
push
sub
mov
out
cmp
loop
xchg
shlb
dec
mov
add
jg
sub
xchg
leave
jge
mov
dec
bound
pop
dec
add
inc
adc
pop
je
xchg
bound
shlb
push
add
inc
adc
lock
addr16
cld
icebp
inc
out
repnz
hlt
or
loope
call
jno
sbb
fsubs
lds
stos
or
pusha
inc
ljmp
xlat
mov
jae
test
dec
call
mov
dec
sub
or
dec
aas
dec
insl
xor
mov
call
in
push
mov
clc
fdivrs
mov
lret
xchg
fcoms
mull
cmp
fwait
cld
mov
adc
or
loop,pn
int3
jae
cs
shl
movswl
mov
mov
addr16
dec
mov
add
stos
push
xchg
mov
test
ljmp
inc
xchg
push
or
loopne
push
xor
gs
mov
mov
and
fisubrs
fimull
jmp
dec
test
jl
push
test
add
into
movsb
inc
pop
adc
pusha
pop
lods
cmc
mov
sbb
fsubp
push
sub
jl
sbb
sahf
mov
xor
addl
adc
and
cltd
jae
pop
lahf
sub
jae
mov
adc
fs
push
test
bnd
adc
stos
repz
pop
add
repnz
loope
aaa
shrl
iret
mov
ss
sub
inc
loopne
sahf
jg
xchg
lods
xchg
and
adc
add
add
dec
bound
fsts
add
inc
mov
push
int3
inc
jl
lcall
pop
inc
cltd
jo
or
or
xchg
call
test
adc
mov
add
cmpsb
sti
fbld
inc
clc
add
add
push
pop
aam
push
call
out
daa
sub
sti
push
add
pop
inc
jae
jmp
call
dec
dec
inc
mov
push
popf
push
je
cmp
xor
inc
adc
std
fistpll
sahf
mov
in
cmp
popf
dec
jnp
iret
loop
xchg
shlb
cmp
jecxz
mov
mov
add
sbb
arpl
bound
add
jbe
sahf
mov
dec
xor
xchg
arpl
fdivs
jg
sub
in
push
into
stos
cld
gs
sbb
cmpsw
push
hlt
dec
fxch
pop
push
jns
mov
sbb
dec
lock
inc
sbb
dec
test
sub
aaa
jmp
int
add
cld
testb
loopne
mov
jl
pop
mov
aas
push
jno
daa
sub
inc
mov
mov
lahf
adc
out
test
xchg
nop
imul
pusha
test
test
mov
jbe
int
insb
stos
sbb
push
shl
adc
dec
mov
sbb
inc
ljmp
sub
jb
lods
cmc
lds
pop
pop
inc
jae
jmp
jbe
mov
jne
push
xchg
adc
xchg
add
cld
mov
and
xchg
ror
ret
test
adc
pop
inc
push
add
popf
add
adc
mov
sub
sbb
fcmovnu
lahf
xchg
mov
imul
jl
mov
lret
ds
jns
aas
mov
jmp
jle
scas
test
xlat
jns
and
or
push
rcrl
pop
lret
popf
xor
jmp
sar
xchg
cmc
xchg
jno
sbb
xlat
lret
out
stos
ret
push
and
es
adc
stc
jbe
je
push
and
imul
jle
inc
fbld
add
push
or
mov
xor
inc
cmpsl
xchg
mov
repnz
sahf
adc
out
mov
jg
loop
inc
push
add
js
test
stos
dec
popa
xchg
hlt
js
and
movsl
push
int3
pop
popa
loop
stc
cmp
mov
movsl
push
lahf
pop
add
in
fdiv
shlb
xchg
sarl
popf
cmpsl
mov
ds
leave
fdivl
jp
mov
inc
or
jae
push
lahf
mov
orb
imul
dec
into
out
std
xchg
pop
icebp
xor
sub
mov
dec
mov
push
andb
sub
mov
sub
sub
inc
push
mov
scas
rcrl
popa
mov
test
lret
inc
or
jbe
push
push
imul
cmp
sahf
sub
das
ret
and
mov
andl
aam
repnz
ret
pushl
xchg
jb
jl
push
test
arpl
mov
cmpsl
pop
mov
icebp
xchg
xchg
test
cld
jo
ljmp
mov
outsl
pop
mov
js
mov
pop
in
or
iret
push
lods
cmp
and
ja
jmp
jmp
cmc
add
int3
imul
sbb
xor
lods
or
sbb
jae
imul
xor
xchg
imul
push
bound
jns
mov
inc
into
dec
repnz
shrl
mov
pop
sbb
gs
lods
adc
into
mov
jns
cmp
outsb
leave
mov
or
xchg
add
imul
gs
inc
cmp
xor
ljmp
and
sub
iret
repnz
and
pushf
cltd
popf
adc
movsl
jo
jo
fwait
aas
ret
lds
add
push
lret
xchg
lds
lahf
mov
orb
imul
cmp
ljmp
xchg
lcall
nop
jne
mov
sub
push
hlt
std
mov
add
call
nop
inc
outsb
xor
jnp
push
addr16
sub
popw
je
xchg
bound
shlb
rorb
mov
sti
inc
push
cmpsl
pusha
loope
sub
push
cbtw
cmp
ljmp
mov
je
test
mov
push
push
repnz
inc
xor
and
adcb
or
mov
cmp
add
push
xor
orl
test
mov
dec
pop
das
mov
inc
jne
jno
imul
in
add
dec
jnp
movsl
jmp
daa
push
daa
fidivrl
int3
adc
sbb
push
inc
cs
mov
test
mov
mov
dec
repnz
push
test
mov
xor
ret
jb
pop
adc
mov
imul
sahf
xor
cmpsl
fcoms
xor
or
aas
cmpsl
sbb
test
or
mov
add
add
in
xor
aad
mov
loopne
mov
shlb
pop
jo
addb
lret
cmp
and
and
cmp
mov
jmp
jae
inc
xchg
ds
repnz
push
jns
outsl
lods
xor
xchg
jecxz
enter
adc
mov
repnz
inc
push
add
popf
add
shlb
push
outsl
dec
xor
push
ror
mov
push
cli
cmp
fldcw
fsubrs
das
fwait
std
addl
add
pop
mov
je
test
out
sbb
cmp
sub
and
sti
adc
stos
repz
sahf
out
mov
mov
scas
cmp
pusha
mulb
insl
push
fwait
fs
mov
shlb
mov
fldenv
and
fildll
xchg
movsl
xchg
xor
iret
sbb
dec
rcll
jbe
out
enter
lret
sbb
pop
aas
dec
pop
fwait
xchg
push
inc
inc
push
mov
rorb
andl
xor
jae
cs
push
out
ret
mov
xor
rolb
fsubrs
cwtl
icebp
xlat
push
inc
and
aad
cmp
test
je
jne
nop
shl
xchg
popf
adc
jecxz
pmovmskb
popa
lret
or
aad
repnz
jb
lcall
les
dec
and
out
push
jl
push
test
dec
adc
rcrb
mov
sub
push
inc
fldcw
scas
jb
aas
inc
mov
daa
repz
loopne
mov
or
sub
xchg
push
jg
jb
dec
lods
outsb
mov
cmp
sub
aad
adcb
fstpl
test
inc
fsubs
dec
xchg
or
jnp
jno
aam
mov
mov
dec
add
xor
push
pop
dec
push
aas
mov
jmp
jle
scas
test
xlat
sarl
and
mov
jno
movsl
inc
and
jns
lahf
in
mov
mov
add
ret
sarl
dec
ret
test
popf
and
adc
in
insl
xor
mov
xchg
cmpsb
orb
mov
inc
testb
mov
push
jne
xlat
je
xor
cmpb
push
and
jmp
insl
seto
in
dec
or
inc
stc
inc
mov
mov
into
ds
push
mov
and
scas
jbe
rep
mov
pop
fidivrs
or
imul
cwtl
call
arpl
jnp
int3
add
sub
sub
sbb
clc
pop
xchg
and
inc
lods
mov
pop
daa
repz
and
xor
shll
push
addb
adc
push
cmpsl
jl
add
pop
test
movsb
xor
cmpsb
out
cmp
lcall
test
in
jp
test
jp
lods
rorb
mov
xlat
les
stos
xchg
vsqrtsd
xor
push
mov
rcrb
mov
ljmp
sub
cli
cs
ljmp
decl
cmp
pop
inc
addl
lcall
fwait
xchg
cmp
xchg
sub
stos
push
cbtw
dec
jp
sbb
sbb
imul
mov
pop
xorb
in
push
mov
xchg
xchg
add
test
call
sub
stc
push
imul
jmp
cld
cmpsl
adc
push
mov
shl
jg
fs
add
dec
adc
dec
outsl
jge
pop
xchg
inc
and
inc
adc
movsl
int3
and
cmp
xor
jae
jp
xor
push
xchg
mov
fdivrs
cwtl
xor
xor
inc
add
lods
pop
mov
sbb
mov
dec
insl
scas
ja
jne
or
xchg
mov
ret
jne
xor
cwtl
adc
pop
fs
mov
mov
push
shll
lods
mov
add
push
jnp
fidivl
je
inc
popa
arpl
std
rcr
pop
push
jno
scas
aam
fcom
jge
loop
ljmp
cmp
mov
ret
mov
lods
rcrl
mov
iret
inc
xchg
les
imul
rol
mov
cld
aas
sub
aad
sbb
repnz
pop
inc
jecxz
inc
scas
dec
jns
jmp
xchg
jg
sahf
cmc
mov
push
jge
in
addr16
add
adc
or
adc
and
mov
in
xlat
inc
popa
mov
xchg
sub
in
or
in
aas
cmpsl
pop
mov
dec
das
mov
int
xchg
xor
outsb
rcrl
in
pusha
or
cs
sbb
add
add
push
cmp
xchg
out
pushf
cmp
fldcw
jecxz
pusha
shrb
xchg
mov
xor
jb
jbe
ljmp
decb
mov
in
or
add
lods
push
cmpsb
dec
jo
addr16
popf
cs
ljmp
je
jge
call
cs
enter
fisubrl
popf
cmp
ret
test
stos
dec
popa
xchg
mov
fwait
std
movb
popa
dec
pop
inc
into
icebp
push
sarl
lods
mov
or
imul
das
add
add
jg
ljmp
bound
repz
pop
pop
mov
jge
imul
call
push
scas
out
mov
jns
mov
push
inc
mov
sub
nop
out
daa
sub
out
movswl
mov
mov
or
mov
loopne
lods
outsb
mov
cmp
mov
cmp
out
mov
sbb
push
jl
jno
shrl
pop
inc
push
xchg
lods
cmc
mov
sbb
into
test
out
std
xchg
pushf
int
nop
sbb
clc
add
pushf
cwtl
fisubrl
push
imul
lret
ljmp
xor
dec
push
mov
push
inc
pop
pop
mov
push
push
or
ret
jne
jo
imul
jge
mov
lods
js
pop
call
jo
pop
sbb
sti
adc
repnz
sub
insb
inc
cmp
inc
xchg
and
sub
pushl
repnz
and
jno
mov
sbb
push
fwait
fs
sbb
inc
xchg
lods
sbb
inc
shlb
lahf
sub
mov
dec
call
in
sbb
fildl
mov
xchg
jle
xchg
cmp
xor
or
or
xchg
sub
or
test
adc
mov
add
cmpsb
sti
cmp
sub
cs
call
mov
xchg
add
les
test
xchg
shll
cmpsb
jl
xchg
adc
int
ja
or
dec
and
int3
cwtl
and
mov
fisubl
mov
dec
out
jmp
incl
insb
jb
imul
shrl
jnp
sbb
xor
sbb
lock
mov
xchg
push
push
or
xchg
lods
std
and
mov
clc
push
mov
daa
mov
mov
adc
cwtl
push
fadds
push
push
data16
mov
mov
mov
xor
clc
scas
in
pop
mov
and
divb
iret
sub
sub
call
fsubl
push
cld
icebp
mov
test
push
adc
sub
or
mul
cmp
xor
jp
add
frstor
push
jmp
sub
pop
rcpps
lret
mov
div
js
roll
sbb
js
stos
cmp
sbb
dec
call
shll
call
mov
mov
push
jecxz
dec
dec
test
not
cmp
xchg
aas
jmp
adc
push
popf
gs
es
mov
insb
xchg
pop
jl
imul
mov
mov
and
cmp
mov
popf
cmp
nop
stos
insb
in
mov
and
dec
adc
add
and
pop
push
add
pop
test
pop
mov
rorb
std
pop
push
pop
lock
xchg
sub
dec
fwait
jle
xor
lds
or
fcoms
or
sbb
ror
mov
dec
or
daa
cltd
cli
mov
aad
jae
mov
push
inc
lock
push
lock
xchg
xor
inc
dec
fs
cltd
cmp
cmp
in
inc
push
xchg
mov
adc
add
ss
sahf
cmp
and
cwtl
fdivs
les
xor
sub
adc
and
push
fmuls
mov
fnstenv
cmp
xchg
or
cld
cmpsl
adc
push
push
xor
pop
call
mov
hlt
push
pop
outsl
rolb
cltd
mov
pop
fninit
pop
mov
push
mov
icebp
jge
movsb
sbb
jb
lods
and
cmp
andl
repnz
fisubrs
cwtl
push
sub
bound
xor
nop
orl
clc
xor
inc
sub
xchg
push
fisttps
dec
jl
push
test
mov
cld
mov
xor
pop
dec
pop
jmp
cli
sar
xchg
stos
es
or
movsl
in
add
add
push
mov
push
imul
mov
pushf
and
xchg
xchg
mov
jmp
daa
or
sub
mov
add
rolb
sub
shll
xchg
sahf
je
jne
mov
lock
mov
lcall
shll
ret
inc
pop
push
movsb
out
cmp
dec
or
or
push
xor
rcll
int
das
pop
shlb
mov
rcrl
test
shlb
sbb
cmp
lods
push
jecxz
mov
cltd
mov
gs
push
nop
sub
pushf
in
insb
mov
sub
adc
jmp
out
push
int3
in
sbb
lea
and
pop
mov
jmp
lods
mov
add
pusha
adc
fistl
push
cmpsb
dec
cltd
mov
jno
mov
xchg
imul
je
ss
lret
ljmp
xchg
sbb
push
hlt
dec
fxch
pop
push
jns
push
adc
or
sbb
pop
mov
dec
lret
enter
mov
push
das
cmp
sti
and
sbb
cmp
mov
vmovups
bsf
outsb
lea
push
jno
daa
sub
adc
sbb
insb
in
and
dec
outsb
push
in
and
clc
and
clc
jae
or
jmp
fdivl
lcall
les
dec
and
aam
push
call
sbb
push
lods
cmc
jbe
sub
pop
inc
sub
or
mov
loopne
lods
outsb
mov
cmp
mov
jbe
fs
adcl
jae
dec
dec
aas
aam
repz
mov
not
cmp
xor
or
and
sub
jns
out
mov
daa
popf
jecxz
repz
fdivl
lock
dec
push
cmpsl
popa
out
es
insb
bound
andb
mov
jmp
mov
mov
sub
loopne
adc
mov
ror
ds
int
sbb
jmp
test
jb
mov
xchg
sub
cli
sub
aas
inc
cltd
int
mov
push
jg
push
push
jbe
mov
test
lret
push
lcall
repz
push
stc
loope
push
mov
add
cld
dec
xchg
fildll
test
lea
pusha
sbb
xchg
adc
xchg
rcrb
test
pop
fmuls
mov
pop
addb
ljmp
mov
js
clc
scas
in
pop
mov
adc
sbb
dec
rcll
jbe
in
call
fsubl
push
cld
icebp
mov
test
pop
fs
mov
push
xchg
iret
xor
or
mov
sbb
push
das
sbb
mov
dec
insl
scas
ja
jne
or
lret
mov
stos
sahf
js
add
cld
inc
sbb
shrl
dec
call
jg
adc
xacquire
add
into
dec
add
hlt
jmp
and
test
adc
xchg
shlb
pusha
add
xchg
icebp
ss
int
nop
push
jle
rclb
std
inc
push
andb
sub
mov
sub
sub
inc
push
pop
and
lret
push
outsb
cmpsl
mov
adc
mov
add
inc
ja
mov
and
mov
call
pop
push
rcrb
xchg
pop
aad
cmp
xor
xchg
andb
xchg
mov
jl
xchg
lret
adc
add
jle
aaa
pusha
mov
add
sub
mov
jo
rcl
sub
orl
clc
sub
push
call
xchg
jp
test
jne
push
test
mov
rep
mov
pop
fidivrs
or
imul
cwtl
call
arpl
out
stos
xor
sarb
outsl
xor
pop
aam
mov
cmpsb
dec
mov
mov
cs
ror
push
rorb
sub
rcll
js
loope
outsb
les
mov
outsl
jmp
pop
add
add
scas
pop
adc
cltd
xor
lahf
pop
roll
pop
mov
jae
aas
mov
dec
pop
inc
mov
test
or
mov
mov
into
popf
cmp
pop
popa
data16
xchg
ds
sbb
sbb
dec
xlat
sbb
lret
or
lds
lock
push
cmc
push
xchg
outsl
jns
mov
jl
jge
jb
ss
push
clc
test
iret
jl
jmp
fwait
enter
xchg
xor
imul
fcoml
lods
sub
outsl
mov
cs
add
add
pop
dec
mov
push
loopne
call
stos
repz
cmp
push
dec
ds
or
xor
and
hlt
outsl
mov
scas
fbstp
les
jmp
adc
call
pop
rcll
call
dec
pop
cld
pop
sahf
inc
inc
push
mov
rclb
inc
sahf
add
sub
cmc
ja
js
xchg
lds
aad
scas
push
add
inc
mov
xchg
xchg
out
lret
or
sub
out
mov
add
into
stos
add
sahf
jmp
scas
dec
fucompp
mov
insl
and
daa
mov
xor
mov
push
imul
lret
arpl
sbb
xchg
jmp
fs
mov
les
add
in
xor
mov
into
xor
mov
and
push
sub
xor
and
pop
subb
mov
movsl
mov
arpl
popf
cmp
outsl
pop
fldl2t
push
add
push
test
shrl
dec
sbb
sbb
and
jmp
sub
mov
pop
movsl
lea
dec
jb
test
outsb
or
mov
daa
adc
xor
push
nop
inc
outsb
xor
jnp
push
addr16
sub
popw
je
aam
call
jl
sub
sbb
mov
and
sbb
test
mov
or
inc
shlb
iret
pop
mov
xchg
adc
pop
inc
mov
mov
xor
xchg
andb
xchg
dec
mov
push
movsl
xchg
xor
cmpsb
faddl
xchg
daa
xchg
cmp
mov
lock
imul
cmp
adc
jmp
cmp
lods
dec
cmp
sub
adc
shll
xor
add
jbe
ljmp
decb
mov
andb
or
xchg
stos
idivb
adc
out
test
xchg
sub
sub
pop
lods
stos
adc
xor
inc
lods
add
ret
adc
lcall
popl
push
pop
jg
mov
dec
fnstsw
int3
cltd
repnz
gs
cmp
outsb
roll
aas
lret
fldt
sub
push
dec
push
or
insb
add
add
jmp
imul
dec
sub
ds
call
sbb
push
lods
cmc
jmp
lods
jmp
and
test
arpl
xchg
sub
sarl
insl
fbld
xchg
gs
aas
mov
movsl
pop
mov
arpl
pop
push
dec
adc
add
xchg
and
aaa
push
into
fisubl
popf
cmp
jle
test
clc
dec
pop
in
add
mov
sarl
dec
fwait
jle
xor
cmp
lods
cmp
push
xchg
repnz
mov
out
std
xchg
and
and
pop
mov
out
dec
xor
jle
jecxz
fsubp
pop
or
out
and
ds
xor
jb
jmp
call
cli
and
jno
mov
sbb
push
fwait
add
and
imul
pop
cmp
mov
add
sub
sahf
aam
sbb
loope
out
mov
out
leave
mov
test
or
pop
inc
cltd
jo
or
or
xchg
call
test
sarl
repz
clc
stos
sahf
js
add
cld
inc
sbb
in
and
jae
in
inc
push
es
fcomip
xchg
add
les
inc
dec
mov
loop
jo
outsl
or
test
shrl
in
shrb
lods
pop
inc
sbb
stc
mov
dec
insb
xchg
adc
fsub
js
ss
popf
das
pop
lock
cmp
in
jmp
fwait
mov
test
xchg
lods
loopne
ljmp
jo
int3
lea
cmpb
call
out
jno
xchg
jo
mov
addl
cwtl
out
jbe
cmp
mov
push
or
fldcw
bnd
sbb
mov
xor
sarl
lods
cmp
ljmp
mov
add
test
inc
adc
jl
xor
mov
mov
adcl
cwtl
pushf
cwtl
and
mov
ljmp
out
mov
repnz
adc
jg
pop
mov
pop
popl
or
shlb
and
popf
jns
mov
and
dec
cltd
fwait
and
xchg
push
sahf
stos
test
cmpsb
addr16
mov
mov
fisttpll
add
ret
fsts
pop
sbb
idiv
mov
pusha
test
clc
inc
clc
fdivs
int
insb
stos
sbb
push
sahf
fs
mov
and
fs
cmpsb
mov
xchg
dec
lds
ja
xor
cltd
xlat
push
pop
cmpsb
inc
ss
mov
inc
add
inc
fnstenv
mov
lea
and
pop
cmp
loop
push
leave
into
out
incl
insb
jb
jnp
outsb
xchg
iret
cltd
or
adc
fnsave
lods
loop
xor
lock
mov
xchg
push
push
or
xlat
inc
test
ds
and
mov
lcall
lret
push
cli
ret
das
ret
and
and
dec
movsl
pop
pop
outsb
rolb
pop
in
or
inc
out
xor
mov
lretw
mov
jl
cld
pop
pop
pop
out
ret
sbb
jno
mov
mov
enter
iret
sub
sub
call
fsubl
push
cld
icebp
mov
test
fs
fcomps
jns
pop
lods
je
jge
call
sarl
sbb
addl
fdivp
adc
xchg
jecxz
cwtl
pop
cmp
dec
pop
xor
test
loopne
xchg
adc
nop
out
dec
inc
mov
mov
cmp
cmpsb
cld
testb
xchg
push
or
lds
int3
pushf
in
lods
pop
jae
mov
push
shl
scas
icebp
int
ret
aaa
dec
cltd
xor
lcall
fidivrs
sub
test
shrl
mov
out
addr16
inc
pop
scas
lahf
or
sub
push
mov
in
xor
sub
imul
jecxz
add
jbe
shrb
add
test
or
pop
test
xlat
test
aas
addr16
popf
in
push
pop
push
inc
shll
inc
lods
loop
movl
cwtl
lds
jecxz
jbe
pop
iret
aas
xchg
jne
cmpsl
adc
cld
mov
pusha
rolb
or
js
testb
in
push
andl
loop
lea
or
xlat
in
inc
push
xchg
mov
lds
outsl
into
sti
sub
cmp
cli
mov
mov
xchg
mov
imul
mov
mov
push
fdiv
insl
fsubs
mov
push
ds
in
xor
and
push
mov
shl
jg
fs
add
das
pushf
mov
pusha
dec
add
push
imul
cmpb
add
add
dec
bound
mov
or
jmp
cltd
mov
orb
fwait
xor
out
sub
add
sub
cmc
mov
jo
aas
popa
add
push
dec
fimull
stc
xor
pop
test
add
call
setno
mov
dec
add
jno
ss
jb
dec
andl
jle
jb
je
inc
popa
arpl
std
arpl
mov
mov
or
inc
push
aaa
pop
fdivp
jmp
stos
inc
jl
pop
mov
fistps
roll
jge
push
push
leave
into
out
incl
insb
jb
imul
shrl
jnp
sbb
xor
or
pop
add
out
xchg
jmp
jmp
cmc
lods
dec
aas
cltd
xlat
push
push
inc
fldenv
inc
rorb
ds
adc
jnp
and
or
pop
dec
mov
add
out
lcall
adc
cmpsl
insb
xor
cwtl
cmp
pushf
pop
addb
jbe
out
pop
sbb
gs
adc
lcall
in
sarl
jge
stc
jbe
je
push
and
ficompl
lret
xchg
sub
xlat
pop
int
daa
xchg
cmp
fisubrl
push
sub
dec
insb
jp
lock
xchg
inc
aad
xor
icebp
sub
fstl
les
fildll
pop
lods
je
jge
xor
mov
xchg
sub
cld
aad
jg
mov
test
fldt
pushf
adc
in
subb
inc
sqrtps
movsl
sbb
ljmp
daa
aam
jno
out
jb
je
sbb
data16
ja
xor
cltd
xlat
push
pop
cmpsb
inc
ss
jp
call
dec
clc
testl
es
aad
stos
sbbl
ficompl
push
push
leave
into
out
incl
insb
jb
imul
sarl
lods
je
ljmp
stos
out
push
int3
in
ret
push
test
rcr
stos
mov
pop
mov
pop
je
xchg
bound
shlb
push
add
cltd
xor
sub
clc
test
aas
inc
inc
gs
mov
cmp
or
mov
bnd
and
sub
sub
mov
mov
out
inc
push
cmpsb
dec
cltd
jmp
in
sarl
inc
sub
out
pop
push
outsb
dec
insb
lcall
out
push
mov
jbe
inc
dec
cli
mov
pop
shl
ja
mov
add
xchg
leave
xor
and
pop
out
pusha
push
jp
dec
cmp
je
int
add
aam
sbb
ret
mov
pop
imul
xchg
insb
cmc
or
repnz
pop
pop
cmp
inc
div
sti
push
dec
fimull
stc
xor
int3
aad
jmp
pop
add
xchg
jp
scas
inc
mov
mov
ret
xchg
dec
jg
mov
std
jb
inc
jp
adc
scas
icebp
int
ret
dec
outsb
sub
mov
jae
jae
inc
xchg
cmpsb
push
pop
int
fistpll
dec
jl
cli
test
add
cmpsl
mov
daa
adc
xor
push
nop
inc
outsb
xor
jnp
push
addr16
sub
popw
je
jmp
xchg
gs
add
fisubl
mov
ficomps
fildll
add
inc
jae
out
outsl
cmp
lcall
cwtl
cmp
ljmp
mov
or
cli
adcl
stc
lods
add
jnp
jo
incl
mov
xor
call
sub
sub
pop
mov
roll
add
mov
push
lret
dec
or
add
fldcw
sub
or
ret
fsts
pop
mov
pop
mov
test
lcall
xor
daa
cmp
sarl
sbb
scas
pop
scas
scas
sbb
jbe
dec
mov
push
push
sti
xlat
cmp
xchg
push
cmpsl
jl
mov
shrl
jae
mov
leave
cmp
out
pop
jbe,pt
mov
jecxz
out
out
fstpt
mov
rcrb
sbb
scas
pop
test
jns
push
lds
rorl
xchg
push
mov
cmp
das
in
and
mov
addl
loope
inc
push
addr16
sub
popw
je
xchg
bound
out
in
fiaddl
rorb
mov
in
pop
add
cmc
cli
or
shll
sti
pop
repnz
hlt
or
loope
call
dec
cmpb
add
sub
out
sbb
ss
jle
xchg
cs
cmpsl
pushf
adc
jecxz
mov
call
add
adc
fsubrs
inc
stc
sbb
and
cmp
shl
rcr
loope
inc
enter
mov
cltd
mov
fcompl
aam
in
mov
add
insb
test
enter
jb
or
test
cmc
or
lret
mov
stos
sahf
js
add
sub
shlb
aad
ljmp
pop
and
shrl
outsb
setge
and
mov
call
pushl
xchg
scas
aam
inc
adc
leave
iret
in
cli
mov
cmp
imul
inc
mov
sub
pop
sub
mov
mov
inc
pop
cmpsb
dec
cltd
mov
mul
in
push
pop
push
inc
shll
inc
push
jmp
xor
lock
mov
xchg
push
push
or
pushf
loope
lods
pop
roll
fstps
mov
jmp
mov
xchg
sub
adc
jno
pop
adc
fidivl
pusha
rolb
int
xchg
xor
addr16
lods
int3
dec
stc
rorl
mov
xorl
pop
push
or
pop
stc
gs
shrl
lret
addr16
jge
adc
xor
push
and
pop
or
sbb
sub
fnstenv
test
fucomip
push
cmpsb
clc
jnp
pop
imul
jg
push
xchg
bound
into
inc
sbb
lcall
das
aad
add
mov
jnp
lock
dec
xor
cmp
test
frstor
mov
pop
jno
jmp
adc
in
subb
inc
jg
mov
cmp
dec
or
dec
fldt
mov
lds
pop
sub
xor
pusha
dec
loop
inc
cltd
xor
loopne
mov
scas
adc
push
or
out
add
xor
jl
pop
xor
adc
leave
test
sbb
push
mov
daa
loopne
imul
add
ret
std
in
dec
repz
push
sti
mov
popa
addr16
cmp
sbb
sbb
dec
xlat
sbb
lret
or
lds
lock
push
cmc
push
xchg
outsl
jns
mov
jl
jge
jb
ss
push
clc
test
jmp
fwait
enter
xchg
xor
imul
fcoml
lods
sub
outsl
mov
nopl
xchg
push
ljmp
clc
dec
popf
or
popf
sbb
cmp
push
or
or
xchg
push
scas
adc
repnz
inc
into
sarl
divb
iret
sub
sub
or
fldenv
jecxz
jg
mov
addl
lods
ja
rolb
push
sbb
xchg
push
sarl
mov
mov
orl
clc
xor
inc
sub
cmc
mov
jo
aas
popa
xor
or
scas
jne
jge
sub
add
js
ss
or
lret
les
negl
decl
lea
adc
lods
xor
pusha
jmp
pop
out
in
add
arpl
push
xlat
cmc
mov
arpl
jae
cmp
addb
xor
aas
ffreep
mov
insb
sbb
pushf
mov
pop
stos
scas
adc
push
or
cmp
nop
sbb
ret
cmp
mov
sub
jne
add
sbb
in
pop
pop
mov
xorb
adc
roll
and
repnz
cmp
sub
xchg
leave
jge
ret
std
nop
add
aad
xor
sahf
mov
aaa
dec
inc
mov
addr16
nop
ss
push
sbb
xlat
inc
rorl
pop
jns
imul
ss
mov
pushf
nop
mov
lahf
add
xchg
lea
dec
je
sbb
or
ljmp
cmp
xchg
mov
test
int3
xchg
stos
lcall
enter
out
fimull
xor
jbe
lods
add
or
test
add
andb
or
aam
add
push
xchg
jbe
jg
dec
pop
mov
and
loop
sub
ljmp
cmp
dec
jmp
and
out
cmc
inc
pop
imul
add
cwtl
pop
cmp
dec
pop
xor
popa
arpl
mov
mov
ret
xchg
dec
jg
sbb
mov
or
inc
jno
cmp
pop
push
arpl
ljmp
shlb
sbb
cmp
hlt
push
push
hlt
lcall
sub
sub
sub
js
fstps
call
fmuls
movsl
pushf
icebp
sahf
scas
pushf
in
jmp
loop
lret
in
das
imull
fbstp
inc
dec
add
push
sub
ja
lea
adc
lret
sti
adc
repnz
cmpsb
adc
in
aas
mov
inc
stc
ds
out
mov
mov
out
jg
mov
lock
lock
inc
sbb
pop
pop
data16
sub
push
push
jle
loopne
add
orb
out
rol
fisubrl
push
sub
dec
insb
jp
inc
mov
inc
adc
dec
gs
sbb
dec
pop
jno
push
inc
cs
iret
out
ret
lret
cli
fdivrl
in
mov
inc
mov
clc
shll
xor
add
loope
ret
fwait
add
loop
popa
xor
hlt
fs
sub
addb
sbb
mov
sarb
cmpsb
dec
dec
dec
fldcw
dec
add
ficomps
insb
xor
out
lretw
in
inc
clc
sbb
aad
sti
shll
pop
mov
mov
outsb
setge
and
mov
sti
sahf
cmp
pusha
ror
leave
inc
xchg
inc
inc
add
add
in
add
out
inc
jecxz
inc
scas
and
hlt
arpl
subb
pop
sbb
into
popl
add
lret
sbb
cld
popa
mov
adc
shrb
sub
ror
mov
push
cli
cmp
fwait
cmc
ss
cmpsl
rcl
popa
or
out
mov
xchg
in
adc
mov
out
push
call
cmp
sub
and
into
mov
or
xchg
addl
sahf
out
mov
mov
scas
cmp
pusha
push
and
addr16
jge
stos
mov
mov
push
mov
sub
sub
pushf
fstl
int3
cltd
les
mov
stos
mov
cld
sub
cmp
jecxz
mov
push
mov
sarb
mov
pusha
incb
fnsave
cmpb
dec
std
cmp
adc
dec
pusha
shl
nop
add
push
xor
inc
je
ljmp
push
lret
adc
mov
add
cmpsb
sti
fbld
inc
sbb
inc
loopne
int
pop
or
push
ljmp
and
pushf
test
xor
lret
stos
mov
inc
add
push
lret
xchg
lds
jns
hlt
or
nop
stos
push
mov
mov
in
mov
fucomi
sub
or
cmpsl
test
cmpsl
imul
add
cmp
and
xor
and
sub
mov
dec
fdivrp
push
jle
and
or
xlat
in
inc
push
xchg
mov
and
jecxz
push
fwait
mov
pop
pop
sarb
cltd
pop
in
jmp
lods
js
adc
jg
pop
mov
jge
pop
mov
mov
aam
into
and
nop
mov
mov
popf
cmp
rdmsr
daa
cld
cmc
push
cmp
ja
loop
sbb
out
xchg
ret
pop
test
jge
mov
pusha
incb
inc
test
jmp
jle
fdivrs
stos
in
push
or
cmp
pop
pop
sbb
idiv
mov
pusha
imul
popf
in
aas
and
mov
jns
cmp
mov
sahf
out
xor
cmp
fstpl
or
gs
pop
imul
or
scas
sbbb
addb
aad
je
pop
dec
fcmovnbe
stc
pop
or
push
lahf
int
xorb
rolb
add
sub
setl
gs
pusha
hlt
addl
add
mov
jl
ljmp
aad
and
xchg
dec
cltd
sub
jbe
push
fcompl
ljmp
push
cmc
call
sahf
shl
jl
lcall
addr16
sub
popw
je
xchg
bound
shlb
push
add
jb
and
ret
in
cli
or
shr
gs
and
ljmp
mov
xchg
ljmp
jle
js
mov
int
les
popf
push
pop
popa
pop
rolb
add
push
mov
cmpsb
dec
divb
jne
pop
ljmp
add
cwtl
ret
cwtl
sub
es
insb
lret
mov
add
pop
xor
ljmp
cwtl
jl
push
test
scas
jne
cmc
leave
adc
divb
loopne
pop
cmp
pop
jae
popf
sbb
scas
call
xchg
xor
xlat
mov
mov
mov
bnd
inc
js
sbb
clc
pop
xchg
and
inc
lods
mov
pop
daa
repz
rclb
shlb
jo
jle
dec
inc
jp
add
pop
test
movsb
xor
call
cmpsb
pop
clc
push
sub
mov
mov
add
iret
pop
fs
inc
clc
xor
ds
pusha
call
pop
add
jmp
and
inc
push
nop
mov
inc
lcall
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
and
or
push
and
jmp
fstps
xchg
stos
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jne
jnp
icebp
push
inc
sub
popa
jmp
inc
je
adc
loopne
jmp
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
pop
mov
jmp
pop
add
and
hlt
por
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
jmp
into
out
cld
test
or
add
adcl
or
les
or
sub
mov
sbb
xlat
les
or
aam
or
add
xor
cmp
dec
loope
xor
pop
jmp
fidivrs
js
mov
and
inc
push
nop
jmp
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
jmp
test
xor
imul
and
or
push
and
fstps
fwait
cmp
jmp
dec
add
push
dec
dec
outsl
jl
pop
mov
es
pop
jmp
adc
mov
cmpb
jnp
icebp
push
sub
jmp
inc
pop
add
jmp
mov
scas
dec
fsub
mov
xchg
jmp
popf
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
jmp
pop
insb
xor
xchg
pop
add
and
cmp
je
add
jmp
mov
inc
pop
xor
shlb
int3
adc
ret
add
add
mull
xchg
ror
into
out
cld
test
or
add
aam
add
add
cmpsb
out
sub
jmp
cmp
jmp
cmp
add
add
sub
mov
jmp
jno
xlat
les
lock
lods
pop
push
jmp
cs
pop
gs
pop
jmp
cmp
icebp
jmp
jmp
mov
jmp
dec
loope
hlt
sbb
push
jmp
fstpt
mov
and
inc
push
push
mov
jmp
nop
mov
lret
test
cmpsw
push
std
sub
jmp
repnz
sar
lahf
in
mov
mov
test
or
add
insl
mov
sbb
cli
stos
add
add
jmp
xchg
sahf
add
push
mov
jmp
stos
fwait
cmp
jbe
in
sub
jmp
add
push
dec
dec
outsl
jl
pop
mov
adc
jmp
mov
sub
mov
or
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
fcoms
pop
clc
shr
sub
ret
or
das
jmp
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
pop
push
mov
jmp
mov
inc
pop
xor
shlb
int3
xor
jmp
adc
testb
fs
xchg
ror
into
out
cld
add
jmp
add
addl
jle
or
out
ja
add
sti
sbb
mov
jmp
push
xlat
les
cs
pop
gs
sub
jmp
dec
loope
pop
jmp
hlt
sbb
fidivrs
add
pop
jmp
js
mov
and
inc
push
nop
jmp
mov
lret
push
push
pop
jmp
push
std
repnz
sar
lahf
push
jmp
in
mov
mov
test
mov
add
pop
jmp
xor
imul
push
jmp
mov
push
push
pop
jmp
and
fstps
fwait
cmp
jbe
in
shr
add
add
push
pop
xor
jmp
dec
dec
outsl
add
jmp
push
mov
pop
lods
jne
mov
jmp
jnp
icebp
push
inc
sub
pop
repz
scas
dec
fsub
pop
xor
jmp
je
adc
loopne
pop
jmp
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
jmp
jmp
insb
xor
xchg
pop
add
and
outsb
setl
inc
pop
xor
shlb
int3
adc
div
fs
xchg
rcl
rolb
jmp
test
or
add
addl
jle
push
pop
jmp
mov
sbb
mov
jmp
push
xlat
les
cs
pop
sub
pop
jmp
cmp
dec
loope
hlt
sbb
push
arpl
fidivrs
js
mov
and
jmp
mov
lret
test
cmpsw
push
std
repnz
pop
jmp
inc
shrb
jmp
stc
ds
in
mov
push
mov
jmp
xor
xchg
test
xor
imul
stos
or
add
xor
adc
add
xchg
sahf
jg
xchg
stos
fwait
cmp
jbe
dec
jne
push
push
stc
xor
test
cmp
cld
pop
pop
mov
push
push
not
inc
cld
pop
pop
add
jmp
jl
pop
jmp
mov
es
mov
cmpb
jne
jnp
das
cwtl
icebp
push
inc
sub
scas
dec
fsub
mov
inc
jmp
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
jmp
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
sub
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
jmp
adc
mov
int
xchg
ror
into
out
jmp
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
mov
jmp
test
cmp
dec
push
jmp
loope
mov
add
pop
jmp
hlt
sbb
fidivrs
js
mov
push
jmp
inc
push
nop
mov
outsb
negl
pop
jmp
mov
test
cmpsw
push
std
repnz
sar
into
jmp
ds
in
mov
mov
test
xor
pop
ret
