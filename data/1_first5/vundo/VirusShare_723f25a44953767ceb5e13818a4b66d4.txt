je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
inc
add
jb
add
jb
add
add
inc
add
je
imul
inc
add
jb
add
jb
add
add
push
add
je
insb
add
push
add
js
je
add
push
add
outsb
add
add
push
add
js
je
add
add
dec
add
outsb
add
push
add
js
je
add
add
push
add
outsb
add
add
inc
add
popa
add
add
add
imul
outsl
add
add
add
dec
add
outsb
add
add
add
dec
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
je
imul
push
add
je
insb
add
add
inc
add
arpl
imul
add
outsl
add
outsb
add
add
add
cmp
js
repz
xor
jo
add
or
add
add
add
add
add
dec
add
sbb
in
add
add
add
pop
add
or
ds
add
add
inc
add
add
add
outsb
add
add
dec
add
push
add
add
add
popl
popl
xchg
sub
and
in
add
add
add
and
dec
add
dec
add
test
dec
add
add
push
add
adc
add
add
outsb
add
add
push
add
flds
dec
add
insl
add
add
push
add
sbb
inc
add
xor
addb
add
xchg
add
add
adc
fadds
dec
add
addb
add
or
push
add
pop
add
dec
add
addb
add
sbb
push
add
add
add
addb
add
dec
add
xor
adc
add
add
add
add
addb
add
add
add
push
add
pop
add
add
add
popl
push
add
add
add
sbb
jne
jo
dec
add
push
add
add
xchg
add
jae
push
add
add
insl
add
mov
add
add
push
add
add
add
ds
add
and
add
pop
add
out
mov
xor
or
popl
dec
add
push
mov
add
add
add
add
add
add
dec
add
test
or
add
dec
add
add
push
add
push
jle
sbb
mov
add
add
or
int
inc
add
push
add
add
jbe
mov
sub
pop
push
push
add
pop
add
add
inc
add
add
add
test
testl
dec
add
add
add
add
add
mov
push
add
add
add
add
pop
add
pop
add
mov
add
add
push
add
inc
add
add
add
je
js
cmp
scas
add
add
add
push
add
popl
push
add
inc
add
pop
add
jae
imul
dec
add
add
add
push
add
sbb
stos
add
add
add
xor
xor
mov
dec
add
add
cmp
and
push
add
add
add
dec
add
push
add
add
add
add
add
test
adc
dec
add
add
mov
add
fildl
addb
add
add
lcall
add
add
add
add
add
dec
add
bound
addb
add
sbb
sti
add
add
add
add
add
add
mov
addb
add
lahf
add
add
mov
sub
adc
scas
add
add
add
xor
dec
add
add
add
dec
add
push
add
add
add
inc
add
add
mov
add
jnp
inc
add
xor
add
and
cmp
jo
data16
add
pop
add
mov
add
add
dec
add
add
add
test
add
dec
add
push
add
dec
add
push
add
push
test
sub
inc
add
cmp
pop
push
xor
pop
add
xor
adc
testb
add
popl
xor
sbb
add
adc
xchg
add
jg
addb
dec
add
add
cmp
outsb
add
add
add
pop
push
pop
add
insl
int
clc
mov
stos
jge
or
jg
add
jno
and
test
cmp
out
mov
mov
pop
mov
or
ret
lret
adc
or
nop
stc
push
push
repnz
inc
out
xor
popf
sbb
lret
xchg
mov
and
jle
movsl
cmc
dec
lds
xchg
cmp
ret
shrb
and
fimuls
adc
jne
adc
pop
pop
ror
pop
jbe
lret
mov
hlt
add
movb
ss
insb
cmp
push
filds
mov
daa
sti
loopne
sbb
sar
adc
bound
lea
stc
cld
mov
add
les
mov
imul
leave
jbe
data16
imul
cs
push
mov
add
enter
ds
ljmp
sub
mov
aam
dec
push
dec
daa
hlt
nop
inc
fadds
push
cli
clc
xor
add
cmc
mov
inc
pop
xchg
iret
adc
or
push
xor
sbb
push
js
sahf
or
or
xor
xchg
add
dec
js
pcmpeqd
pop
pop
jns
sbb
push
pop
add
shl
jae
insb
sub
push
push
sub
adc
pushf
rolb
sub
xchg
pop
sub
pop
sub
dec
leave
or
mov
add
mov
xchg
jle
mov
push
push
clc
mov
xchg
repz
jmp
xchg
dec
cltd
cmp
push
adc
mov
and
push
imul
cld
mov
fcmovne
lods
mov
push
mov
cmp
push
mov
inc
nop
inc
or
mov
std
jmp
pusha
in
arpl
addr16
in
in
push
iret
cmpsl
push
test
xchg
insb
sarl
adc
dec
xor
dec
clc
dec
push
rcl
lods
std
ror
xorl
test
or
loope
insl
mov
adc
push
adc
ror
push
and
sahf
and
pop
mov
out
adc
fstpt
jl
pop
xchg
mov
mov
push
jle
dec
or
popf
leave
cmp
sti
lods
outsl
sbb
lock
or
xor
gs
sbb
das
cmp
inc
mov
mov
xchg
push
mov
jnp
or
sub
popa
mov
ds
sti
inc
push
fnsave
jb
xor
test
or
ljmp
push
cmpsl
fiadds
mov
push
dec
mov
aam
jmp
pushf
sahf
iret
scas
out
je
loope
test
sahf
std
fpatan
int
jecxz
mov
fs
mov
push
loop
push
mov
mov
out
fdivrp
mov
inc
lea
lea
mov
cmp
add
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
call
call
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
sbb
push
call
sbb
lds
icebp
pop
mov
dec
pop
xchg
cmpsl
cmpsb
sbb
call
push
mov
ss
int3
je
push
xchg
sub
loope
icebp
jle
outsb
rcrb
mov
and
mov
cmpb
push
addr16
cwtl
sub
ljmp
mov
sbb
shrb
out
jno
clc
shll
ror
pop
pushl
xchg
xchg
sbb
sti
mov
pop
shll
cmp
lret
fs
subl
mov
dec
xor
xorl
aad
js
push
jns
rcll
xchg
cmpsb
inc
pop
xchg
std
fwait
and
ss
out
stos
lds
add
lods
out
pop
sbb
daa
add
nop
es
test
xchg
repz
xchg
cmp
dec
dec
lea
and
inc
mov
cltd
sbb
add
cmpsl
divl
inc
sbb
clc
shlw
mov
das
xchg
fistpll
jo
inc
out
push
sahf
and
or
mov
jnp
and
pop
in
mov
push
ljmp
fs
xchg
push
addl
mov
jae
les
or
jecxz
in
jg
jl
clc
fs
jle
push
test
cwtl
ss
js
push
xchg
xchg
sub
clc
push
call
push
mov
ss
js
push
xchg
xchg
sub
clc
xchg
sti
aas
pop
push
lret
or
jg
sub
hlt
xchg
and
shrl
push
aaa
repnz
fwait
pushf
mov
ret
enter
into
pop
out
push
int
shlb
cmp
insb
inc
stc
lahf
push
cmp
mov
and
pop
std
lcall
dec
xchg
stos
pop
loop
mov
imul
repz
jp
dec
cmp
sub
xchg
lcall
push
mov
outsb
pop
xchg
jp
push
sahf
les
lahf
xchg
sbb
push
sbb
push
dec
mov
in
and
cltd
adc
mov
imul
and
in
mov
and
xchg
push
pop
cmp
nop
xor
idivb
stc
addr16
jle
sub
and
jbe
hlt
pop
sub
fstp
rcrl
jnp
pop
pop
ds
mov
inc
mov
out
int3
stos
call
mov
pop
pop
sarl
mov
push
xor
popa
ret
imul
add
or
scas
mov
and
adc
xchg
mov
aaa
and
mov
push
or
mov
jae
mov
js
shrl
lret
stos
inc
jne
jae
xor
jmp
or
and
fidivrs
lcall
out
stc
pop
stc
cwtl
sub
xchg
cld
outsb
sarl
in
push
mov
movsl
andb
sbb
wbinvd
sub
icebp
jge
or
fnstsw
int3
or
mov
and
mov
in
mov
out
add
sub
out
lahf
mov
cli
cwtd
xchg
lock
or
clc
and
mov
insb
ljmp
popa
lret
cmp
fwait
leave
jge
stos
in
test
in
outsb
test
cmp
pop
test
xchg
push
int
loop
push
into
aaa
scas
push
rorl
les
pop
mov
loopne
daa
ds
sbb
sbb
sarl
jo
aad
dec
out
imul
push
scas
mov
in
cwtl
sub
faddl
dec
mov
imul
les
pop
popa
dec
mov
ljmp
enter
test
mov
scas
push
imul
shlb
mov
inc
xor
daa
or
std
in
xchg
xor
mov
call
dec
lock
pop
push
jb
jb
imul
and
pop
push
mov
jbe
push
insb
lret
sbb
scas
mov
mov
insb
push
mov
adc
cs
mov
fbld
movsb
sbb
sbb
flds
and
cmpsb
pop
cwtl
add
leave
lret
fs
pop
loope
fs
aas
inc
mov
adc
mov
lret
cmp
outsb
mov
loope
cltd
mov
sbb
sbb
insl
or
lea
inc
push
cmp
rcrb
in
cwtl
insl
mov
loop
or
ss
inc
call
and
dec
roll
dec
add
jae
outsl
leave
xchg
add
fwait
mov
adc
cltd
dec
sub
jl
or
dec
lret
add
pop
jno
xchg
out
ljmp
inc
xor
sarb
xchg
xor
dec
push
leave
sarb
push
xchg
test
mov
insl
in
adc
mov
cmpxchg
lret
sti
pop
jnp
pop
lahf
pop
xchg
scas
ds
insb
shlb
jb
pop
test
call
add
cmpsb
mov
cmp
jp
push
lret
mov
push
fcomp
loop
pop
push
lahf
pusha
cmc
ret
ja
pop
or
cmc
mov
jl
sbb
adc
push
sub
enter
jnp
arpl
lretw
mov
daa
or
subb
mov
jp
ret
adc
sub
or
xchg
cli
int
repnz
mov
add
inc
aad
ds
enter
dec
sahf
pop
mov
jmp
hlt
in
or
dec
sbb
lock
aas
jo
fildll
mov
or
push
dec
lcall
xor
ja
sbb
mov
ljmp
pop
cli
add
mov
sbb
cmp
dec
push
pop
js
fildll
jl
ja
xchg
cmpsl
pop
aad
sub
jae
insb
lcall
ret
pop
cmp
xor
loop
cli
aam
add
and
push
add
push
mov
jecxz
xchg
stos
sahf
es
aad
outsl
fwait
outsb
daa
das
aad
popa
push
ret
push
jns
mov
scas
inc
mov
or
in
es
jge
outsl
jmp
pop
xor
imul
jae
jo
xchg
xchg
push
fnsave
xor
loopne
adc
clc
pop
add
leave
lods
lret
mov
jecxz
add
mov
xor
testb
cld
sub
insl
into
test
movl
lods
fs
mov
jns
test
add
mov
adc
cmp
push
xchg
jbe
ljmp
dec
bound
ss
mov
imul
and
bound
add
or
add
jp
fs
mov
push
out
shll
mov
into
push
pxor
xchg
fwait
jle
stos
and
push
call
in
shll
xchg
pop
xchg
xchg
ss
ret
int
pop
cld
cwtl
je
push
adc
sbb
jg
pushf
pop
enter
ja
cwtl
in
shl
insb
pop
mov
ss
push
pushf
repnz
dec
sbb
fnstcw
adc
pop
arpl
inc
mov
out
sbb
lret
cmp
jmp
notb
scas
cmpsb
icebp
icebp
xchg
cmp
or
jns
sub
push
mov
xchg
stos
sub
mov
ret
adc
xor
mov
push
inc
rcll
inc
sti
pop
fcomi
mov
test
out
arpl
dec
cmc
inc
sbb
ret
sub
fcmovne
mov
aas
cltd
pop
cmp
les
fptan
in
fisttps
cld
clc
pop
repnz
clc
xor
adc
popa
leave
push
and
push
mov
movsl
popf
shlb
lods
sub
sahf
call
xchg
out
jne
sub
mulb
or
sti
xor
sub
push
cs
jns
sbbb
cmp
or
jne
xchg
cwtl
sub
xchg
cmp
nop
mov
or
dec
fmul
mov
fistpl
or
dec
lahf
incl
push
cmp
std
call
test
xor
jmp
sub
jae
mov
leave
int
scas
push
jp
dec
out
lods
add
cs
popa
sbb
sbb
scas
aaa
int
adc
dec
dec
mov
jne
jbe
sub
sahf
add
insb
cmpsb
cmp
outsl
rcl
cmc
pop
inc
js
and
lcall
stc
fdivrs
leave
xchg
xor
jl
lods
mov
mov
jne
ret
dec
pushf
enter
jno
and
pop
push
call
cli
or
xor
sahf
loop
sbb
shrl
xchg
pop
adc
xchg
mov
nop
sbb
push
jo
pop
repnz
inc
pop
iret
pushf
jb
jl
testb
mov
or
sti
faddl
xchg
mov
dec
jg
aad
cmp
fmuls
sbb
sub
ja
push
dec
ds
loop
lds
lods
imulb
test
or
jg
in
arpl
pop
push
imul
cltd
loopne
into
sub
add
push
mov
lock
mov
aaa
int
mov
pop
jno
sbb
cmp
jp
cmp
push
sbb
jnp
mov
mov
push
and
pusha
push
jle
pusha
lock
sahf
shlb
out
dec
mov
xor
lods
push
or
sbb
add
dec
icebp
or
cmc
lret
push
stc
cwtl
stos
sbb
sub
add
call
xor
lods
or
jl
imulb
add
and
push
cmp
fists
inc
test
test
test
sbb
js
mov
sbb
jle
mov
cmpsl
xor
mov
cmpsl
jne
int
ret
jb
mov
scas
mov
leave
insl
mov
fimuls
inc
jo
hlt
sbb
int3
dec
mov
or
mov
add
ret
es
out
xchg
cmp
and
nop
pop
fs
rclb
cs
aad
mov
fdivrs
cmc
fldenv
aam
mov
decb
aas
sahf
enter
das
fstpl
and
push
inc
pop
in
dec
movsb
es
xlat
ret
sub
addr16
mov
xor
les
js
popf
inc
popa
push
enter
and
xchg
jae
xor
inc
outsl
xor
push
outsb
imul
out
out
push
xchg
iret
call
jno
jae
cmp
shrb
xor
stc
clc
mov
inc
aam
cmp
in
and
iret
xor
in
mov
push
mulb
and
rolb
scas
jnp
aas
mov
lds
test
stc
dec
test
insl
xor
pop
cmp
lods
pushf
mov
repz
xlat
mov
dec
xchg
mov
sbb
xor
push
bound
inc
stc
adc
fldl
pop
mov
scas
repnz
adc
pop
xchg
sbb
cmp
push
fimuls
subb
jno
std
adc
xchg
pop
push
add
je
mov
xchg
and
popa
js
add
aad
in
divb
inc
pop
dec
call
ds
push
outsb
push
mov
cmc
jmp
jge
stos
dec
idivl
fcoml
popa
fidivs
lret
ljmp
out
jne
insb
ds
mov
xor
mov
mov
in
not
mov
ds
aaa
lret
mov
xor
aam
jp
push
and
inc
test
mov
aad
fidivl
adc
dec
aas
jge
cmp
loope
outsb
icebp
inc
add
lods
xor
cmc
xchg
xchg
aam
xchg
jmp
imul
adcl
pop
and
sub
lret
arpl
mov
mov
sub
fdivrs
in
mov
sub
pushf
imul
sbb
retw
vmread
mov
jp
push
xchg
mov
les
loop
popa
mov
pop
push
fwait
movb
es
movsb
jg
cmp
movsl
aas
les
mov
add
mov
cmpb
xor
in
mov
lea
push
dec
and
pop
lock
leave
xor
add
jp
mov
call
add
jge
lea
xchg
push
ret
adc
into
repz
mov
push
out
sub
push
test
mov
data16
fwait
lods
push
push
ficomps
inc
adc
ror
jnp
aas
or
push
in
push
mov
xor
shl
pop
fs
sbb
daa
cmc
stos
dec
jo
sbb
jl
jle
xchg
adc
lcall
out
decl
mov
popf
lods
rorl
ljmp
inc
inc
pushw
and
arpl
mov
stc
aad
jae
push
xchg
push
ljmp
pop
leave
mov
adc
sbb
lods
andl
jbe
mov
mov
mov
sub
cmpsb
inc
aaa
daa
xlat
mov
push
fidivl
mov
testl
xchg
std
or
or
fiadds
js
push
sbb
ficoms
inc
hlt
aad
mov
scas
xor
adc
push
jg
dec
dec
mov
jns
mov
loopne
mov
lcall
push
xor
sbb
pop
notb
inc
call
popf
mov
jbe
loop
xchg
jmp
loopne
or
loope
sbb
or
out
mov
add
test
push
push
jl
push
loope
bound
jecxz
jg
roll
mov
mov
lock
cmp
icebp
faddp
xchg
sahf
cmp
cs
add
jo
inc
dec
mov
ss
cmp
clc
sub
ds
out
pop
mov
roll
test
mov
adc
sub
sub
xlat
dec
pop
mov
xchg
jnp
test
paddw
test
fisubrs
mov
push
loope
inc
icebp
and
add
or
mov
test
bound
cmp
xchg
cltd
xchg
and
rcrb
adcb
movsb
sarb
jbe
mul
cli
outsb
jbe
test
add
xchg
mov
ss
sbb
cmp
xchg
pop
mov
lods
push
loopne
jg
dec
adc
adc
sbb
lods
push
add
enter
mov
and
adc
mov
fucomi
rcrl
push
sbb
cmp
dec
addr16
pushf
imul
jecxz
inc
repz
scas
push
pop
arpl
pusha
or
subb
push
data16
cmpl
and
mov
xor
and
mov
mov
or
into
outsl
adc
jae
mov
push
sbb
stc
push
cmpl
aad
and
and
clc
pop
xchg
jl
xor
rep
push
loopne
rcrl
lods
lods
mov
fwait
jp
loopne
leave
cld
and
xchg
movsb
push
lods
push
xchg
rorb
push
nop
jg
dec
pop
cmc
cmp
pop
jmp
mov
mov
adc
in
cld
mov
sbb
mov
jecxz
imul
shrb
dec
xor
das
cs
add
dec
sub
decl
scas
arpl
popf
sub
push
aad
lcall
add
loop
mov
cmp
and
mov
loopne
mov
jge
fistl
dec
addb
jbe
mov
test
mov
les
pop
movsl
xchg
mov
mov
aad
adc
cmp
mov
setge
aad
ror
or
mov
fisubl
push
gs
mov
add
je
jo
jno
cmp
fdiv
pushf
sub
jg
icebp
inc
mov
stos
popf
mov
add
insb
lods
push
dec
sahf
aas
jne
stos
sub
shll
js
push
adc
xor
sub
cmpl
jae
xchg
jle
rorb
ret
ret
jne
pop
in
movl
push
scas
xor
divl
clc
or
imul
cs
push
inc
mov
repnz
mov
jmp
scas
popa
pop
ss
cli
dec
jmp
push
stos
in
jne
push
movsb
xor
fsubr
lds
mov
rorb
pop
mov
pop
xchg
adc
cmp
dec
jae
jno
sbb
and
or
sbb
fcompl
cltd
xor
add
mov
pop
mov
mov
fs
mov
orl
flds
sub
and
jge
fwait
jl
mov
push
inc
mov
jae
mov
xchg
mov
inc
pusha
xchg
les
sbb
adc
int3
lret
je
into
dec
addl
xchg
pop
into
nop
sub
dec
mov
add
lea
das
mov
inc
sub
jge
and
xchg
sub
jns
je
iret
fsubr
push
push
js
mov
jg
mov
popf
xor
jae
pop
stos
lcall
adc
sbb
jmp
rcl
jns
cmpsb
repz
dec
jo
in
out
cmp
into
push
jmp
cvtps2pi
movsb
jns
xor
xorl
push
lret
pop
out
lods
lret
jnp
pop
cltd
cmp
insb
aas
lods
pop
fdiv
jle
mov
sub
push
aaa
mov
sti
cmp
xchg
pop
jecxz
imul
sbb
loop
rolb
outsl
cmp
negb
and
push
inc
ljmp
dec
call
in
push
mov
es
insb
xor
adc
repnz
sbb
cmpsl
ucomiss
fs
ds
sbb
cltd
xor
mov
jbe
dec
pop
sub
dec
testl
adc
push
push
jnp
sub
cs
cmp
adc
mov
es
mov
popf
inc
adc
clc
insb
in
cld
das
inc
scas
cmp
xchg
mov
cmp
mov
shll
imul
fsubrp
shlb
push
jge
or
daa
pop
es
cs
sub
lret
push
pop
cmpsb
pop
test
mov
and
and
out
sub
or
sub
dec
adc
mov
xor
push
add
jns
jo
push
je
jmp
xchg
lods
cmc
mov
xchg
inc
std
mov
cli
addr16
in
push
inc
mov
ljmp
sahf
ficomps
jecxz
pop
jno
jecxz
rolb
test
mov
cmc
rclb
and
inc
add
sub
in
jnp
insb
xchg
cs
scas
clc
or
fsts
add
adc
fidivrs
xlat
insb
mov
jne
dec
xor
jp
dec
fisubrs
adc
aam
xchg
mov
adcb
repnz
push
test
push
mov
lcall
and
xor
push
mov
xchg
sahf
and
dec
xor
repz
xor
add
xlat
imull
mov
lock
add
and
mov
popf
fcompl
jmp
int
pop
xchg
inc
dec
mov
adc
pop
xchg
stos
inc
add
in
stos
stos
mov
jmp
cmp
bound
sub
in
cwtl
mov
mov
rorl
call
sarb
cmp
mov
fnstcw
pop
cmp
push
push
mov
and
sub
hlt
pusha
add
filds
leave
adc
mov
dec
push
push
push
ret
out
jle
jle
sbb
test
jmp
subl
push
idiv
pop
stos
adc
inc
push
es
aaa
mov
pop
stc
add
pop
sub
in
jle
push
push
inc
mov
push
sub
sti
sti
sbb
add
imul
fstpt
andb
cmp
add
mov
stos
test
roll
xchg
lock
andl
mov
xchg
enter
inc
es
fidivs
push
add
xor
fcom
addr16
push
push
cmp
in
mov
aas
in
cmp
pop
in
xchg
and
jo
jae
fwait
xorb
outsl
mov
xchg
xchg
xchg
js
xchg
int
test
icebp
ret
ljmp
outsl
cmp
pushf
sti
mov
enter
jb
scas
leave
imul
rcrb
cmp
popf
sbb
imul
icebp
repnz
ds
push
inc
sbb
sub
jo
in
ficompl
mov
add
jbe
sahf
addr16
mov
mov
or
out
mov
inc
mov
jle
cwtl
mov
clc
pop
sbb
add
mov
xchg
mov
add
pop
fdiv
scas
out
push
push
iret
jle
push
test
ljmp
lcall
test
ret
mov
xor
test
cli
aaa
mov
je
xor
dec
xor
sbb
stos
add
fs
daa
andl
into
sbb
jno
jp
sub
cmp
jno
fisttpll
shl
sbb
pop
and
movsl
and
dec
flds
jecxz
or
and
dec
mov
sti
aad
xchg
cld
bnd
leave
push
test
jp
dec
cmp
leave
and
data16
cmp
imul
inc
and
imul
add
rcl
adc
jp
aam
adc
dec
js
mov
cmp
lds
and
in
decl
dec
add
mov
adc
cmpsb
jmp
repnz
xchg
fs
xor
mov
mov
call
sbb
ds
jno
dec
fadds
loop
mov
out
popa
addr16
jne
pop
and
ret
es
add
in
flds
fimull
in
icebp
mov
xchg
fcmovbe
jmp
call
dec
fsubrp
push
leave
dec
pop
imul
call
jg
in
mov
mov
lds
mov
cld
cli
mov
fcom
mov
fdivrp
push
fnstcw
xorl
fs
clc
lret
mov
pop
nop
inc
fidivl
adc
sarl
cli
fistpll
loopne
mov
jle
sahf
xor
sub
and
sub
sub
push
mov
out
push
and
sbb
pop
lcall
pop
int
ja
pop
addr16
push
fldenv
dec
aad
hlt
mov
xor
sbb
xchg
dec
inc
mov
int3
enter
mov
dec
jle
add
inc
inc
mov
adc
bound
jecxz
stc
loop
ret
daa
push
adc
push
les
lret
popf
enter
xchg
in
ja
push
dec
imulb
push
call
icebp
mov
add
rolb
enter
lcall
sbbl
and
cltd
push
cmc
mov
jmp
add
and
jbe
test
dec
mov
sbb
pushf
xchg
in
xor
insb
je
scas
sahf
push
jo
jns
sti
cmp
mov
add
cmpsb
std
inc
push
fiadds
mov
fs
lods
scas
int3
addl
lock
cld
int
xor
jecxz
cs
rep
sbb
iret
jns
pop
fstl
enter
lods
dec
and
pop
daa
fs
mov
xor
sub
in
cmpsl
jge
stc
mov
adc
outsl
fmuls
leave
in
cmp
into
scas
into
sub
cmpsl
mov
roll
arpl
clc
out
sub
or
and
into
and
push
and
nop
jg
andb
jg
xchg
and
bound
cmp
imul
dec
push
aad
sub
mov
jb
sysenter
fbstp
adc
ljmp
imul
pusha
xchg
sahf
hlt
adc
sti
out
pop
push
jmp
stos
inc
out
mov
mov
fdivs
push
mov
ss
js
push
xchg
xchg
sub
clc
push
call
push
mov
ss
js
push
xchg
xchg
sub
clc
push
call
push
mov
ss
js
push
xchg
xchg
sub
cld
in
push
fdivl
push
mov
mov
cmp
ret
idivb
icebp
mov
push
pop
addr16
ja
int3
int3
int3
int3
push
cmp
testb
jge
dec
inc
repz
lods
addr16
jbe
pop
std
pop
in
fnsave
int
cmp
testb
pop
mov
inc
mov
jbe
push
xchg
push
in
fnsave
int
cmp
testb
pop
mov
inc
mov
adc
gs
pop
mov
stos
jne
or
pop
test
pop
push
fsubrs
daa
cmc
or
mov
movsl
xchg
inc
mov
xchg
call
xor
test
jmp
cs
pushf
inc
cmp
xchg
or
scas
ret
sbb
push
and
les
in
movsl
pop
jae
add
or
xor
mov
mov
inc
nop
push
sbb
std
inc
adc
xlat
cmp
cmp
jge
dec
jecxz
outsb
cmc
sahf
in
aaa
mov
cs
and
bound
push
scas
jle
mov
mov
jae
data16
movsl
pop
push
jo
mov
gs
cwtl
jb
push
mov
cltd
cmp
testb
pop
mov
inc
mov
jbe
push
std
push
in
fnsave
movsb
mov
xchg
insb
mov
repz
sbb
sbb
in
or
adc
jb
pop
mov
inc
sbbl
mov
and
idivb
aam
into
adc
dec
xchg
gs
jbe
sub
test
push
cmpsb
pop
mov
inc
mov
jbe
push
std
push
in
fnsave
int
cmp
testb
pop
mov
inc
mov
jbe
push
std
push
in
fnsave
int
cmp
movsb
iret
cmc
or
lock
movsb
popa
and
push
popf
js
push
test
movntq
out
mov
push
xor
fnstsw
aas
jo
cli
aas
jecxz
jb
sub
and
popf
jp
rcll
ja
dec
cmp
lret
aas
pusha
cs
loope
andb
xor
inc
push
pushf
jbe
mov
mov
fiadds
mov
loop
out
cli
pop
pop
cmpsb
mov
lret
out
pushf
xchg
xchg
out
xchg
pop
inc
fidivl
stc
mov
sub
push
cld
dec
scas
mov
fistpll
jecxz
inc
dec
rclb
adc
push
mov
dec
js
fidivrl
addl
sub
mov
jo
xorb
sti
and
jmp
xchg
or
push
and
and
shlb
lret
jle
js
repnz
shlb
xor
loopne
jl
xor
mov
mov
jae
inc
sbb
jnp
aaa
xor
sub
scas
fisttpl
xor
in
mov
cltd
aam
and
imul
pop
fidivrl
sbb
fisubl
ja
jnp
enter
push
lea
push
mov
adc
push
ffree
jge
inc
das
fildll
cmpsb
test
push
aad
loope
clc
cld
movsb
mov
dec
dec
xchg
cmp
jmp
imul
or
rclb
cltd
fnstsw
std
mov
leave
rcll
jecxz
or
repnz
js
loope
cltd
xor
jmp
and
xor
scas
fld
or
pop
pop
stos
or
lahf
push
mov
jg
loop
or
xchg
test
jl
rcll
imul
mov
adc
int3
sbb
in
lcall
adc
test
int
inc
daa
jb
cmpsl
jmp
pop
imul
pop
cmp
stos
jbe
and
arpl
adcb
scas
iret
sub
sbb
adcb
or
pop
lea
cmp
pop
bound
mov
jnp
inc
lcall
and
sub
outsb
sbb
jmp
or
pop
lahf
push
out
ret
jge
cmp
leave
lcall
stos
pop
or
mov
mov
mov
jae
dec
mov
add
and
nop
aas
cmpsb
stc
sbb
scas
dec
popa
cmp
dec
icebp
jg
mov
mov
cwtl
into
insb
in
pop
outsb
mov
in
subb
cli
in
sti
pop
jb
lock
call
pop
and
mov
push
mov
adc
insb
cmp
stos
mov
mov
popa
mov
mov
daa
fstpl
mov
dec
andl
pusha
std
xchg
cmpsl
sbb
stos
xor
xchg
inc
jo
and
push
xchg
mov
mov
xchg
sub
jae
add
push
push
es
pop
push
test
lods
push
andl
inc
push
and
imul
cmp
add
jne
push
stos
inc
sar
cmp
in
or
sub
adc
or
adc
rorb
or
jae
xor
mov
hlt
sbbl
push
je
push
or
xchg
frstor
jp
fldcw
and
push
sbb
fadd
pop
test
sarl
push
mov
cwtl
jno
pop
hlt
or
jne
pop
scas
iret
and
pop
xchg
adc
xor
adc
ljmp
push
es
in
push
imul
xchg
adc
and
rcrl
in
dec
xchg
adc
in
aad
test
stc
adc
jmp
stos
xor
call
push
fisttpll
fdivs
mov
xor
faddl
pop
or
xchg
lock
fmuls
mov
lea
mov
and
daa
xor
xor
ljmp
add
movsb
sub
pop
loopne
pop
xor
out
shrl
lea
outsl
fcomi
add
pop
test
rolb
sbb
ficoms
sbb
mov
xor
into
or
pop
les
adc
aaa
push
lahf
inc
leave
aas
into
jnp
xor
ret
faddl
roll
lcall
push
shlb
mov
pushf
mov
sti
push
cli
out
inc
xlat
pop
call
jge
les
add
adc
cmp
fildll
xchg
mov
add
mov
lods
inc
jmp
push
test
mov
mov
mov
pop
repz
popf
xchg
fdivs
mov
in
mov
dec
jo
mov
jb
mov
test
cmp
sar
dec
dec
in
loopne
sub
iret
mov
sbb
jne
imul
aad
loop
jns
or
aam
test
pusha
sub
sbb
not
cld
int3
and
out
popf
insb
in
pop
push
fbstp
dec
mov
pop
pop
nop
nop
and
mov
stos
pop
pop
nop
xor
enter
cwtl
leave
sbb
sbb
fsin
fiaddl
in
fwait
push
movsl
mov
or
mov
mov
fldt
aaa
xor
sbb
cwtl
sbb
test
inc
xchg
pushf
cwtl
icebp
dec
aam
clc
cmp
or
movsl
xchg
add
lock
inc
pop
cld
lods
scas
and
fidivl
fwait
sub
jmp
xor
and
or
dec
adc
loop
mov
mov
add
in
ds
call
roll
pop
mov
test
inc
sub
stc
stos
push
and
rcrl
mov
jno
out
movsb
add
call
pop
inc
push
adc
jo
int3
fnsave
cmpsb
mov
xchg
mov
je
in
sbb
jp
lds
mov
scas
inc
cwtl
dec
xor
cmpsl
sbb
jge
or
cmpsl
push
jno
shrl
and
inc
jle
imul
jecxz
sub
out
fidivl
sub
adc
cmpsl
push
mov
test
xchg
into
enter
jl
das
les
and
push
jge
pop
mov
cmp
mov
pop
add
fiadds
mov
dec
movsb
mov
cmp
or
mov
clc
fistpl
lret
pop
cmp
repz
pop
das
sub
fldl
push
pusha
in
xor
scas
mov
cld
adc
icebp
aaa
ss
daa
mov
sbb
dec
cmpsl
fbld
inc
aas
adc
add
mov
cs
mov
add
pusha
dec
hlt
std
imul
inc
mov
adc
adc
insb
pop
xor
lcall
lret
jge
xor
hlt
lret
movsl
lcall
data16
data16
int
cmp
mov
shlb
into
insb
jg
xchg
mov
repnz
andb
dec
dec
pop
js
mov
in
ljmp
inc
inc
fmul
lock
add
stos
shl
sbb
inc
ljmp
dec
mov
cmp
rcl
and
jae
jb
call
ja
aam
jmp
daa
pop
loop
jne
mov
addr16
sub
in
sbb
push
insb
push
mov
cmp
add
cs
mov
outsl
mov
rcl
shl
popf
mov
loop
jnp
xchg
jecxz
inc
aas
sbbl
xchg
mov
add
loopne
push
repz
lcall
test
mov
add
sub
scas
repz
xchg
pop
mov
mov
lahf
stos
and
outsb
xor
jle
leave
dec
test
mov
es
test
or
jne
out
jmp
or
dec
mov
ds
mov
ret
outsb
out
js
test
lahf
mov
mov
lods
and
test
test
jg
cwtl
fcmovu
xlat
mov
or
lods
add
ja
aam
mov
mov
or
lcall
fiaddl
mov
nop
cwtl
inc
popf
imul
cld
jl
mov
in
xor
xor
mov
pop
subb
xchg
and
stos
lea
jle
div
mov
xor
adc
dec
or
shlb
lds
mov
lods
and
lock
add
push
push
jg
incb
jge
jo
mov
cmp
cmp
popf
lret
shrb
pusha
test
push
fisttpll
mov
addb
jmp
pusha
roll
mov
xchg
mov
and
arpl
inc
popa
sar
int3
add
daa
sbb
pop
mov
lods
loop
xchg
mov
and
mov
out
adc
test
cmp
data16
std
mov
addr16
mov
enter
fisubrs
mov
fcmovne
jnp
inc
sub
and
push
imul
mov
or
ret
push
jp
pop
push
cli
std
and
jle
sub
cmp
mov
sbbl
and
xchg
and
sub
js
outsl
lods
gs
out
mov
add
into
xor
sbb
stos
adc
mov
dec
add
loope
stos
lcall
jnp
lock
pop
in
mov
outsb
int
js
mov
mov
rclb
push
dec
loop
xor
stos
jl
xchg
sub
push
sub
lods
clc
sub
add
push
xchg
and
out
movb
xor
add
pop
mov
push
jmp
adc
dec
push
pop
int
xchg
outsl
and
pop
inc
jne
dec
cld
test
xor
push
mov
inc
xchg
xchg
mov
test
mov
lahf
psraw
fs
iret
pop
bound
sbb
xchg
or
imul
fwait
mov
jecxz
imul
shll
cmp
mov
shrl
jno
or
push
inc
sarl
sub
cs
popa
insb
bound
push
adc
pushl
fwait
and
imul
jg
xor
sub
pop
mov
mov
in
and
cs
les
xchg
and
and
sub
sti
stos
iret
sbb
xor
adc
lcall
imul
add
push
js
jmp
mov
lds
cwtl
mov
aad
sub
mov
fsubrl
adc
push
lds
in
jno
add
fst
add
adc
and
xlat
adc
push
sbb
out
sub
shr
rcl
cld
dec
stc
in
xchg
lods
ret
cmp
xchg
sbb
xchg
xor
adc
in
pop
aam
stos
mov
test
and
ret
int3
int
pop
jns,pt
pop
adc
mov
and
push
and
push
and
imul
dec
pop
stos
stos
lods
scas
cmpsb
pop
mov
inc
loopne
jmp
aad
xor
add
cmp
jbe
addb
sub
lods
sub
inc
popa
sti
ss
test
mov
inc
xchg
or
icebp
xchg
lock
sbb
test
lcall
inc
and
loopne
lret
xchg
clc
fsts
nop
aas
bound
pop
dec
pusha
idivb
clc
jns
aam
sti
pop
sbb
in
or
mov
pusha
inc
outsb
scas
mov
mov
adc
lcall
movsb
push
stc
adc
inc
push
les
xchg
xlat
mov
mov
adc
rorl
mov
lods
scas
mov
mov
push
sahf
lcall
add
fs
fmul
cmp
inc
add
push
xor
cmp
lea
push
fs
rclb
jae
push
push
fwait
mov
sub
push
mov
gs
lret
push
or
hlt
popf
scas
push
pop
or
sarb
sbb
ss
cmp
jecxz
adc
adc
mov
push
dec
int
les
cmp
adc
mov
xor
movsl
sarl
xchg
push
inc
jl
fwait
cmp
mov
imul
jbe
sbb
and
add
pushf
add
push
xchg
pop
mov
arpl
dec
xchg
aas
mov
push
xchg
imul
xchg
adc
movsl
sbb
jnp
out
xchg
fdiv
ret
repnz
decl
inc
sub
iret
cltd
ret
sbb
scas
scas
jecxz
sub
xor
loop
add
test
xchg
mov
jno
dec
shlb
cwtl
mov
inc
adc
loop
daa
cmpl
push
pop
cmc
sub
push
into
pop
jbe
mov
jnp
push
addr16
add
lahf
in
push
dec
cmc
mov
xor
dec
mov
adc
aad
adcl
in
adc
mov
fdivs
std
push
push
dec
notb
aad
bound
mov
xor
movsl
inc
mov
fwait
cmp
addr16
int3
mov
gs
jns
mov
inc
cmp
cmpsl
sub
fmulp
sbb
xor
add
dec
dec
rcr
insl
adc
lret
xlat
sbb
cmc
or
adc
inc
pop
push
or
into
mov
sub
push
aam
cltd
sbb
or
sub
pushf
mov
add
mov
jl
cmp
xchg
or
fdivp
lods
inc
jmp
push
cmpsl
pop
xlat
aam
mov
and
cmp
ljmp
ficompl
jbe
sar
mov
mov
mov
xchg
adc
ret
mov
mov
push
jno
mov
int
xor
cwtl
xor
and
adc
xchg
xchg
in
xchg
inc
adcb
ret
inc
leave
mov
into
fisubl
push
rorl
roll
addr16
jp
idivb
sbb
faddl
or
out
pop
das
roll
aad
adc
sahf
dec
pushf
adc
mov
call
xchg
mov
scas
fld
cmp
call
fadd
push
int
scas
lret
mov
fidivrs
rolb
out
subb
lods
adc
xor
gs
test
push
repz
xchg
adc
pop
cmpsb
and
jle
loop
ss
xchg
cwtl
push
mov
fiaddl
push
leave
mov
mov
out
pop
je
dec
cmp
mov
cltd
sbb
xchg
inc
adc
mov
aas
jnp
jns
mov
std
int
imul
dec
shr
or
mov
mov
ss
inc
dec
test
jns
shrb
lock
inc
mov
test
dec
lea
repnz
mull
add
test
mov
push
loope
mov
mov
or
adc
mov
mov
ja
jbe
push
jae
sub
js
sbb
pushf
icebp
bound
cs
inc
jecxz
mov
stc
xor
pop
xchg
repz
jns
xor
aad
in
add
es
and
pop
pop
fisubrl
rcr
xchg
shrd
std
js
adc
leave
imul
out
push
out
out
xlat
cmpsb
imul
mov
sub
fmul
push
pop
mov
xor
call
mov
sub
insl
jne
icebp
inc
and
sbb
loopne
xor
add
push
lea
rclb
inc
dec
hlt
sbb
jl
mov
inc
jle
mov
hlt
or
rclb
adc
rorl
push
loopne
rorl
mov
cs
data16
test
test
jo
mov
in
jae
pop
cmp
daa
js
aam
rcll
or
in
mov
or
cmp
mov
mov
inc
aam
inc
ret
orps
insb
and
pusha
bound
inc
xor
cli
insl
adc
lock
in
add
push
stos
scas
movsl
push
mov
aam
adc
sbb
aad
pop
test
and
lret
jno
adc
mov
sub
sub
or
stos
mov
dec
inc
sbb
pop
or
hlt
dec
fidivs
dec
scas
sti
cld
xor
jne
mov
mov
sub
lret
xchg
cmp
pop
or
aam
fdivs
inc
aaa
fs
out
fdivp
mov
jo
lret
fs
jl
test
and
xor
hlt
sub
shlb
push
inc
outsb
mov
pop
mov
or
xorl
popf
sahf
test
js
sbb
fwait
pushf
sbb
stos
push
outsl
jg
cmp
ss
pop
and
inc
outsl
inc
shr
enter
addl
jl
dec
testb
sub
negl
cmc
rcl
push
es
sahf
dec
shlb
dec
push
enter
aaa
shr
sub
loope
xor
mov
fsub
push
movzbl
mov
pop
daa
aas
mov
jb
or
fwait
jmp
xor
push
pop
xchg
dec
xchg
inc
pop
insl
es
xchg
pop
or
stos
je
mov
dec
ja
pusha
daa
xchg
pop
mov
sti
add
pop
inc
jo
mov
in
adc
scas
sbb
lahf
addb
sbb
cmp
jbe
out
lods
adc
out
add
sti
inc
iret
pop
testl
jo
and
repz
movd
xor
mov
add
test
movsl
aad
loop
pop
filds
cmc
aas
insb
out
pop
decb
repz
cmp
dec
sbb
cld
addl
test
or
je
and
jecxz
insl
dec
xchg
xor
push
jnp
pop
xor
or
clc
mov
mov
and
stc
jae
jl
sub
jbe
push
mov
jl
int3
repnz
push
je
push
outsb
cmpsl
xor
hlt
mov
int
adc
and
and
js
bound
leave
cmp
mov
lods
xor
xorb
sub
adc
scas
adc
lret
test
and
pop
fs
dec
mov
push
fidivs
test
jl
and
sub
mov
sbb
jo
xchg
loop
addr16
mov
xchg
stos
dec
cmp
jnp
xchg
int
sarb
mov
pop
sub
xchg
out
lods
pusha
and
shr
les
cmp
inc
jo
fxch
adc
and
dec
xchg
mov
sbb
lcall
cmp
cmp
dec
push
mov
cmpsb
jecxz
fs
sti
xchg
jmp
pusha
jmp
sub
rclb
push
psubsw
sbb
je
sbbl
aad
in
xor
mov
jecxz
dec
in
jne
mov
lcall
fnstenv
loop
test
push
xchg
enter
pop
test
xor
mov
inc
scas
push
xchg
and
lahf
stc
push
or
fwait
lock
andb
js
push
add
ret
repz
sub
mov
mov
mov
jg
jbe
out
cwtl
mov
xlat
fisubs
lret
or
lret
in
push
pop
jno
cltd
xchg
pop
adc
pushf
mov
imull
ret
adc
movsl
jmp
jge
or
out
ja
xchg
pop
mov
add
arpl
xchg
int3
arpl
mov
or
lods
xor
and
iret
or
movsb
out
rcr
mov
insb
fwait
mov
sbb
push
lfs
dec
outsb
xor
xchg
and
lcall
repz
icebp
mov
es
fwait
cli
int3
sbb
idivb
push
lret
dec
sbb
loopne
sti
push
pop
xor
jp
in
adc
cld
daa
rolb
dec
or
sbb
cs
sbb
test
sub
inc
lods
push
shlb
sahf
xchg
ret
pop
push
jmp
fmul
int
dec
mov
fdivl
inc
pushf
pop
push
andb
push
push
mul
inc
aam
pusha
push
lcall
xchg
and
sub
es
roll
fwait
pop
cwtl
mov
sbb
add
call
mov
xor
test
lods
ds
mov
lock
addl
sbb
xchg
cmpsb
mov
sub
mov
ss
mov
xlat
outsl
cli
sahf
pop
mov
add
mov
test
repnz
jns
xor
cmpsl
fwait
mov
out
mov
imul
idivl
imul
lret
outsl
push
add
icebp
or
add
hlt
iret
fidivl
or
mov
jb
inc
adcl
out
shll
push
das
or
lods
pop
gs
outsl
inc
cmc
js
jns
jo
aas
shll
xchg
popf
add
icebp
mov
aaa
daa
or
int3
adc
sub
xchg
or
pop
push
cmp
mov
leave
and
mov
cmp
mov
adc
add
in
push
jo
dec
dec
jns
scas
testl
test
fldt
xor
sarl
and
jnp
dec
and
push
outsb
mov
sti
pop
xor
daa
push
testb
ss
sub
inc
or
mov
lock
imul
xchg
ret
std
xchg
mov
nop
dec
mov
stc
repz
sbb
rcr
ljmp
mov
sbb
in
xor
pop
out
mov
adc
lret
xchg
fimuls
or
daa
add
icebp
daa
pop
mov
cli
jmp
arpl
pop
idivl
ret
idivl
dec
pop
sti
dec
sub
pop
fwait
add
sbb
mov
jle
jp
xchg
loopne
jnp,pt
adc
shll
inc
mov
or
adc
add
and
rcrb
jge
and
push
mov
fdivrl
sub
xlat
dec
mov
out
addl
or
pop
scas
in
loop
push
outsl
scas
pushf
mov
test
push
cs
pop
gs
mov
jne
dec
fs
mov
iret
mov
lods
push
xchg
pop
aad
out
mov
je
scas
inc
jnp
push
dec
push
enter
sar
daa
enter
bound
dec
xchg
ss
sarl
je
cmp
in
scas
sub
in
mov
test
cmp
mov
mov
lea
pushf
mov
inc
dec
loopne
xor
call
inc
int3
lcall
jb
and
clc
xchg
inc
test
je
and
mov
jns
call
push
pop
sti
lcall
jno
xchg
je
clc
jae
xchg
adc
ss
dec
push
jl
push
mov
call
outsb
out
rcrb
and
insl
xchg
dec
mov
repnz
xor
pushl
mov
push
adc
arpl
call
das
mov
dec
push
sbb
lcall
mov
xor
sub
xchg
insl
cmpsb
pop
mov
inc
mov
jbe
push
std
push
in
fnsave
int
cmp
testb
pop
mov
inc
mov
jbe
push
std
push
in
fnsave
int
cmp
testb
pop
mov
inc
mov
jbe
push
std
push
in
fnsave
int
cmp
testb
pop
mov
inc
mov
jbe
jno
sahf
adc
and
xor
int3
int3
int3
int3
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
push
mov
push
push
push
push
movl
movl
movb
call
andl
andl
push
push
movl
movb
movl
mov
movb
call
push
push
mov
call
andl
mov
lea
movl
push
movb
movl
movb
movl
movb
movb
movl
call
pop
leave
ret
mov
cmpsb
pop
xchg
sub
cmp
dec
daa
xchg
push
cltd
pop
mov
push
jmp
cmpsb
sbb
dec
out
imul
cltd
push
mov
data16
inc
stc
mov
cmpsb
fists
jns
adc
arpl
dec
mov
lret
jbe
or
jmp
jp
pop
aas
inc
insl
mov
push
add
data16
jmp
push
xor
and
pop
push
inc
mov
or
or
sub
mov
jmp
add
mov
popa
scas
inc
xchg
jo
leave
jge
xchg
mov
mov
push
test
inc
cmp
and
mov
cmpsb
sbb
sub
repz
mov
mov
aad
jae
dec
filds
jbe
jns
scas
jp
pop
push
test
test
stos
jo
xchg
dec
jnp
and
mov
pop
out
pop
or
stos
pop
sbb
js
fcmovbe
leave
jmp
mov
xchg
jp
cmpsb
cmp
dec
out
imul
xor
stos
push
test
data16
push
icebp
inc
lret
testl
out
push
imul
xchg
xor
sbb
ds
push
or
fidivl
data16
popf
add
repz
ljmp
add
adc
push
mov
or
cmp
stc
stc
inc
ljmp
imul
cltd
push
test
data16
inc
stc
mov
cmpsb
sbb
dec
out
imul
cltd
push
test
data16
inc
stc
mov
orl
test
mov
mov
adc
ficomps
xor
sbb
je
mov
or
jle
adc
and
clc
push
in
cwtl
loop
jg
stos
inc
cmp
ja
xchg
jmp
arpl
mov
add
movsb
out
repz
cmp
psrlq
ret
push
xchg
test
into
cltd
pop
mov
mov
sbb
mov
fldenv
mov
leave
je
sub
sub
pop
stos
mov
add
movsb
add
js
pop
sub
call
pop
icebp
rolb
ds
inc
enter
lret
add
inc
push
lock
cmpb
inc
sub
pop
xor
mov
out
push
rcll
insb
sbb
inc
jle
in
mov
xor
mov
dec
xor
cmpsl
pop
dec
call
and
fcoml
clc
mov
outsl
stc
outsl
sub
xor
jg
test
hlt
mov
subl
adc
lea
xor
test
cs
add
test
aaa
cmp
xor
decl
gs
mov
negl
mov
pop
mov
test
cmp
add
xor
mov
call
pop
mov
in
push
sbb
jecxz
pop
pop
movsb
gs
filds
inc
lea
lds
inc
clc
mov
loopne
dec
js
push
loope
fnstenv
xchg
out
test
add
jb
push
push
andnps
xchg
movsb
cld
sti
fmul
jecxz
outsl
dec
hlt
fildl
rorl
je
scas
stos
xor
js
mov
outsl
inc
add
add
loop
testl
test
outsl
test
les
adc
push
xor
or
mov
sbb
insb
or
and
xchg
cld
pop
mov
cmp
xchg
inc
sub
test
repz
adc
repz
cmpsl
sub
sub
ds
stos
pop
sbb
push
sbb
add
lods
outsb
or
pop
or
or
fwait
es
mov
jae
mov
std
std
and
inc
insb
pop
rorl
pop
fdivrp
push
mov
cmp
mov
mov
outsb
mov
not
jne
xor
mov
sbb
lret
cmpsb
loopw
jg
repnz
jo
cmpxchg
sbb
adc
jno
in
or
mov
mov
cmp
fimuls
push
pop
shll
int3
push
add
hlt
inc
dec
mov
loope
or
mov
mov
data16
mov
std
inc
adc
add
mov
or
mov
and
pop
test
je
pop
in
add
mov
cmpb
xchg
adc
jne
cmp
stc
adc
lret
imul
aam
ljmp
and
mov
addb
lret
inc
test
jmp
cmp
fiadds
mov
js
push
push
stos
add
scas
iret
ds
mov
inc
repnz
loopne
nop
in
cmp
adc
mov
cltd
mov
loop
push
add
mov
cltd
das
jns
popf
mov
or
outsl
sti
jne
push
mov
aaa
adc
push
outsb
insb
mov
xchg
xchg
cmp
sti
imul
out
jp
mov
loope
in
scas
jecxz
iret
test
in
adc
push
dec
xlat
push
outsb
cmpb
dec
cwtl
pop
fmuls
jp
insl
inc
outsl
and
stc
push
call
fcompl
xor
adcl
gs
in
jb
lods
lods
adc
shl
sbb
ret
xlat
pop
mov
ret
mov
xchg
out
and
movsb
mov
jmp
inc
aas
pop
jecxz
mov
cltd
popf
sbb
cwtl
imul
mov
cmp
test
push
in
sub
or
dec
dec
test
or
popa
movsb
loop
sub
stos
pop
outsb
loop
pop
dec
dec
jnp
mov
pslld
cwtl
dec
cmp
cs
mov
mov
nop
jae
addr16
cmp
leave
pop
subl
cmc
cwtl
mov
pop
cld
mov
xchg
cmp
inc
aam
mov
movl
aaa
mov
sbb
push
sbb
lcall
xor
mov
lea
lea
sub
mov
cwtl
push
loop
test
push
add
xor
iret
repz
mov
jbe
inc
push
adc
jg
mov
repnz
jns
cmpsb
js
mov
hlt
int
jg
data16
neg
jp
jp
ljmp
pop
out
mov
ficompl
push
inc
jecxz
mov
mov
repz
mov
fnstsw
and
mov
mov
loope
lret
jne
sub
sub
or
dec
jge
cld
mov
push
es
inc
sahf
mov
je
sub
notb
xor
mov
out
add
mov
xchg
fbstp
xlat
push
cld
into
aaa
std
dec
lret
pushl
fxch
mov
or
and
aas
push
inc
push
sub
jg
loope
push
clc
xlat
bound
cltd
mov
shlb
popa
mov
mov
mov
push
adc
xor
fisubrs
in
aam
js
adc
push
cwtl
mov
leave
test
jb
push
mov
rclb
sbb
push
lock
mov
shll
xor
fdivl
and
cld
rep
xchg
push
inc
ds
movl
inc
iret
add
dec
je
jo
cmp
xchg
repnz
rclb
xchg
dec
into
pop
and
lock
pop
xor
add
fisttps
arpl
loop
cmpsb
divb
sarl
mov
dec
jmp
and
xor
mov
sbb
fnstenv
adc
ret
push
jnp
sbb
push
mov
sub
sbb
pop
call
inc
stc
sbb
cmp
mov
dec
jmp
jg
add
inc
jecxz
nop
inc
dec
push
push
inc
mov
lds
pushf
push
push
mov
and
out
cmp
pop
xor
roll
sub
pushw
es
jmp
test
jmp
xchg
jecxz
push
hlt
lahf
mov
dec
aas
cmp
test
push
cmp
push
lea
push
adcl
pop
addb
ja
dec
cmc
fimull
add
shlb
aas
scas
into
and
sub
sub
push
fs
mov
pop
movsl
mov
lret
pop
testb
ffreep
mov
rolb
enter
inc
pop
dec
bswap
test
inc
dec
mov
xor
out
mov
aad
fs
outsl
and
pop
pop
push
sbbb
dec
and
dec
outsb
imul
inc
dec
imul
cmp
push
sub
scas
scas
enter
jl
mov
pop
imul
xchg
popa
inc
shrb
shlb
xchg
pop
cltd
sahf
pop
dec
jge
mov
shll
and
pop
aad
lret
cli
stos
or
sbb
mov
xchg
jmp
mov
mov
es
xchg
in
xchg
sarl
andl
push
pop
stos
push
js
mov
inc
mov
je
lcall
ljmp
ljmp
in
in
test
push
mov
jae
jo
sub
pop
dec
loope
and
sarl
cmp
xchg
lods
lret
lret
sub
push
xchg
leave
pop
imul
adc
repnz
int3
inc
clc
ficompl
sbb
jecxz
mov
dec
xchg
loop
inc
and
adc
jo
lea
mov
movsb
ja
cmp
stos
pop
aaa
dec
xchg
out
sub
dec
stos
test
and
mov
or
outsl
nop
adc
add
fwait
xor
push
cwtl
mov
jne
push
mov
repnz
mov
jmp
xor
mov
repz
jmp
sub
jb
pop
pop
fidivs
pop
push
pop
mov
mov
pop
daa
adc
scas
mov
movsl
pop
fbstp
mov
mov
out
xchg
xchg
rcl
jae
add
push
enter
add
loop
adc
jns
ljmp
shr
inc
xchg
ds
jo
cld
and
and
cmp
in
cmpsb
mov
insb
xor
dec
dec
imul
hlt
cwtl
and
fsubl
outsl
int3
sti
stc
lcall
mov
or
push
imul
add
bound
sbb
mov
adc
adc
jl
and
sub
test
stos
arpl
out
data16
mov
pusha
out
jb
lea
movsb
insb
xor
pop
jbe
jnp
add
jns
sub
imul
sub
pushl
xor
sub
shrl
mov
cltd
hlt
adc
mov
call
jecxz
addl
into
or
dec
pushf
lret
cwtl
lock
and
add
frstor
and
and
and
or
xchg
xor
loope
cmc
arpl
mov
jbe
inc
call
push
xchg
icebp
sbb
add
cmc
lds
scas
leave
les
mov
stos
ss
cmp
loop
mov
int
cmpsb
push
cmp
mov
mov
mov
push
xor
popa
dec
cmpsl
icebp
add
lods
inc
push
xor
cwtl
push
mov
mov
and
jo
hlt
pop
and
icebp
pop
out
and
sbb
mov
add
scas
jge
aad
sub
mov
ret
mov
daa
data16
lahf
out
bound
int
sub
or
adc
mov
movsb
loope
pop
jmp
push
ds
std
lea
ss
jecxz
cli
pop
mov
xchg
jecxz
or
add
out
sbb
pushf
mov
roll
add
pusha
inc
and
fwait
ljmp
pop
ret
mov
or
les
clc
pop
push
pop
mov
mov
mov
sbb
roll
xchg
lds
xchg
sbb
jo
scas
out
out
data16
sub
inc
fadds
xor
add
add
loop
fcmove
mov
push
and
data16
dec
push
or
adc
or
insl
mov
pop
stos
dec
shrb
ss
jg
fs
repz
stos
xchg
andl
das
push
aaa
das
jns
cmpb
mov
cmp
cld
mov
pop
push
mov
scas
pop
push
adc
inc
fldl
ret
xchg
loope
lods
or
popa
sub
cmp
push
inc
jge
pop
pop
sub
cmp
add
iret
aad
xchg
adc
dec
add
cld
mov
rcrb
push
inc
sub
pop
mov
or
subb
lret
add
mov
mov
hlt
mov
pop
out
add
mov
test
or
dec
push
adc
push
xadd
test
dec
sub
gs
loopne
xor
xor
clc
cli
pop
push
lock
in
mov
out
xchg
bound
jne
or
pop
inc
insl
or
adc
xchg
popf
adc
xchg
movsb
ret
adc
sub
pop
stos
push
cs
scas
xchg
jne
fs
cmc
leave
scas
test
inc
lea
mov
pop
loope
xchg
fistpl
hlt
addr16
ljmp
faddl
mov
pushl
inc
mov
mov
or
in
into
push
test
adc
pop
sahf
inc
push
dec
adc
and
and
jg,pt
mov
ret
cmpsb
xchg
aas
jo
fldt
adc
cltd
popa
cli
leave
nop
lret
dec
in
mov
jmp
leave
fwait
push
mov
and
pop
push
jns
cmpsl
gs
xchg
jne
mov
mov
adc
mov
mov
cmp
push
aam
push
dec
dec
pop
sbb
inc
mov
pop
jbe
jo
stc
dec
jnp
arpl
adc
lcall
push
mov
push
xchg
jmp
xchg
test
sahf
loopne
int3
insl
loope
adc
dec
jle
loop
paddb
xchg
stos
jecxz
mov
xchg
xchg
data16
std
dec
dec
cmpl
rcll
cwtl
push
ret
out
or
enter
mov
push
shrb
mov
jns
clc
pop
cs
or
xor
ds
stc
or
inc
push
insl
inc
and
fsubrs
push
in
mov
xor
mov
lods
mov
rol
adcl
lcall
popf
xchg
scas
pop
mov
or
mov
cmp
pop
adc
xorl
add
inc
aad
cmp
dec
mov
xchg
mov
mov
add
rcrl
std
lret
test
repz
and
call
repnz
inc
add
lea
mov
jno
add
lahf
push
dec
push
popa
mov
test
inc
and
mov
lods
sub
jl
movsl
sbb
and
out
lds
mov
dec
jl
sub
jo
xchg
out
inc
dec
les
push
nop
lcall
bound
ret
push
pop
inc
jle
fldl
pop
stos
jge
outsb
pushf
dec
ret
mov
das
into
in
test
sub
cmpsb
adc
mov
xchg
mov
push
in
dec
jns
push
inc
loop
sub
xchg
std
ret
stos
pop
int
inc
pop
sub
or
xchg
dec
repz
data16
sahf
lcall
xlat
notl
rorl
pop
inc
adc
jmp
icebp
ljmp
iret
push
xor
gs
movl
inc
mov
scas
testl
dec
repnz
fwait
sub
mov
imul
fistpll
push
or
sub
adc
adc
cmp
or
add
sub
dec
xchg
fcoms
xchg
aas
mov
hlt
jg
fnstsw
call
ret
xor
push
add
dec
test
add
pop
push
sub
jge
inc
test
push
xchg
push
imul
addr16
popa
push
gs
mov
xchg
mov
outsb
shlb
test
mov
loope
aam
dec
or
sbb
mov
cmp
out
sbb
push
ja
daa
xchg
lret
sub
sbb
jns
xor
and
and
js
repz
jns
or
inc
pop
test
and
lea
and
mov
popf
mov
es
movsl
inc
iret
xor
pop
bound
mov
stos
or
or
mov
rolb
push
xor
push
lea
jo
roll
shr
or
cmpsb
jbe
fisubl
cmp
inc
fsts
daa
outsl
mov
jl
lods
inc
shrl
shll
push
mov
cmp
mov
jns
mov
call
aas
popf
or
cltd
push
repnz
fbstp
leave
cwtl
jns
or
outsl
push
xchg
push
jnp
shrb
jae
lcall
enter
test
stc
int3
rorb
aaa
cwtl
xlat
add
mov
push
nop
testl
inc
pop
dec
sarb
sbb
pop
test
cld
das
mov
in
and
hlt
pop
js
out
inc
push
xchg
jmp
scas
sub
pop
insb
int
jge
cmc
call
inc
add
test
xchg
inc
iret
cwtl
push
aam
and
cmp
scas
cltd
shl
je
push
push
and
cmp
mov
sbb
into
mov
sbb
cmpl
pop
push
xchg
push
in
daa
adc
lods
mov
ja
addb
jne
popf
out
pop
or
dec
jnp
adc
inc
add
or
xchg
jge
mov
jne
lock
xchg
fnstsw
iret
mulb
xchg
mov
mov
loopne
add
std
jo
imul
mov
pop
popl
popf
inc
dec
fucomp
push
ss
cmc
jecxz
enter
mov
push
test
xchg
gs
pop
and
push
f2xm1
inc
out
and
add
dec
int3
flds
adc
bound
pop
cmpsb
int
ss
sbb
mov
sbb
push
movsl
or
faddl
cmpsl
dec
out
cli
mov
or
test
push
mov
sahf
jnp
in
push
fwait
out
adc
lret
xchg
rcr
inc
mov
jns
repnz
jno
repnz
and
daa
std
mov
dec
fnstsw
addr16
fdivl
push
sbb
xchg
lcall
cwtl
sub
and
aas
dec
cld
out
stos
push
outsl
xlat
imul
imul
mov
andb
insb
sbb
lods
clc
xchg
pcmpgtd
in
push
and
sbb
jge
push
lahf
pushf
repz
sar
sbb
and
push
jbe
jl
push
aaa
lret
shll
clc
cmp
ljmp
push
cmp
outsb
xchg
ljmp
lahf
pop
sub
aam
xor
jle
and
push
imul
cmovl
xor
int
xorl
fcompl
addr16
and
cwtl
push
xchg
jge
and
cmpsb
ja
xor
pop
pushf
outsl
push
rol
icebp
je
add
mov
add
test
add
dec
ds
sub
test
lds
add
sub
in
push
aas
aas
mov
sub
rorb
xor
das
scas
lock
or
pop
sub
lret
and
mov
mul
sub
fs
push
ja
in
leave
push
imulb
out
cmpsl
jp
pop
jno
fs
jnp
inc
pusha
das
in
in
add
outsb
jecxz
mov
adc
xlat
dec
mov
xor
lcall
adc
jge
jae
sub
and
dec
inc
clc
inc
test
cmpsb
mov
jge
lahf
out
ret
lods
sub
and
mov
pop
stos
and
mov
and
cli
outsl
cmp
lods
cs
mov
sbb
jge
ret
cmpsl
fidivs
sbb
mov
push
js
jne
sbb
ljmp
mov
ljmp
jnp
adc
mov
aas
xchg
jge
fisubl
es
xchg
cmp
lods
cs
filds
jg
mov
dec
lods
out
aam
in
nop
scas
sub
mov
rolb
arpl
and
repz
test
addl
jp
cmc
popf
pop
in
jp
mov
mov
add
fcompl
sbb
fiadds
jne
test
sahf
and
insl
cmc
xor
sub
push
mov
es
xchg
push
and
lods
stc
add
jge
inc
mov
insb
dec
insb
mov
lret
push
pop
mov
lahf
scas
aam
and
adc
loopne
shll
mov
pop
lret
xchg
mov
add
mov
mul
pop
mov
add
cmp
rorl
mov
call
adc
or
sbb
aad
sub
repnz
push
addr16
mov
jl
scas
add
imul
je
mov
cmpsl
xchg
in
cs
sub
mov
mov
imul
daa
mov
mov
mov
xor
stos
cmpsl
popa
scas
std
loopne
sub
inc
arpl
mov
pop
test
mov
push
or
sti
mov
js
xor
repnz
and
push
cmovo
xchg
jmp
mov
pop
mov
mov
pop
lret
and
mov
test
xchg
pop
lcall
sub
jle
mov
inc
dec
adc
adc
or
test
es
pop
data16
ljmp
dec
xchg
repz
dec
sub
dec
fstl
xor
bnd
cmp
jbe
add
imul
dec
dec
push
insl
jae
mov
xchg
clc
jp
xchg
aam
es
push
or
add
and
sub
sbb
std
xor
sub
inc
xor
scas
cmpsl
loope
imul
cmp
push
xchg
ficoms
push
fisttps
jns
xchg
dec
loope
aam
or
outsl
pop
stos
cltd
cmpsl
nop
cmp
xchg
mov
jge
xchg
dec
loope
test
mov
mov
popl
andb
xchg
jg
dec
shrl
adc
inc
insb
xchg
mov
movsl
jmp
lods
dec
inc
call
in
divl
sub
and
arpl
dec
cli
loopne
mov
cwtl
bound
loope
xor
out
fcmovnbe
inc
push
aam
or
mov
ret
xor
cs
fimuls
enter
nop
rcrb
push
mov
sbb
scas
cmp
or
or
xor
adc
or
mov
jmp
fldt
stos
pop
test
cwtl
push
sbb
cld
lds
repnz
fimuls
mov
ss
sub
cwtl
clc
xchg
imul
cmp
add
xchg
adc
cmc
loope
mov
lret
mov
xchg
subl
inc
jnp
outsl
test
idivb
rcrb
xchg
xlat
je
xor
icebp
lods
mov
ss
popa
fmul
je
test
add
movsl
push
and
adc
xchg
mov
shll
fstps
push
inc
mov
mov
cmc
add
push
repnz
jae
inc
xchg
mov
in
aas
ljmp
xchg
sbb
sti
aaa
dec
mov
cmp
gs
jl
add
sbb
dec
jne
push
addb
loope
jecxz
movsb
or
jbe
imul
cli
mov
rorb
into
pop
jl
inc
add
call
aad
jmp
stos
pop
and
sbb
js
dec
add
enter
cmp
loope
xor
jno
addr16
inc
movl
repnz
push
mov
xor
pop
addr16
inc
push
es
imul
and
xor
in
stc
mov
and
or
roll
repnz
xchg
xor
and
adc
mov
pop
lock
sub
add
aaa
imull
mov
dec
pop
fstl
inc
inc
xor
jg
sub
xchg
push
sbb
sub
repnz
sbb
ret
lea
add
mov
popf
imul
pop
xchg
stc
jmp
pop
mov
shll
sub
inc
adc
ret
faddl
andb
sbb
and
mov
push
sbb
add
rcrb
in
sub
cmc
sbb
dec
out
imul
cltd
push
test
data16
inc
stc
mov
cmpsb
sbb
dec
out
imul
cltd
push
test
data16
inc
stc
mov
es
push
xor
xor
insl
inc
jns
mov
popf
push
test
data16
inc
sbb
xchg
int
jns
dec
out
jmp
xor
push
mov
int3
int3
int3
int3
int3
idivb
outsl
pop
dec
add
inc
in
mov
ja
out
push
filds
ss
push
idivb
outsl
pop
dec
mov
cmpsb
das
xchg
pop
xchg
jmpw
push
fisttps
ss
push
out
jg
outsl
into
pop
fimuls
aas
mov
movq
out
or
dec
rorb
lahf
jg
xor
xor
int3
push
lds
lock
popf
out
mov
dec
js,pt
and
xchg
aaa
dec
ja
sbb
scas
cmp
pushf
mov
adc
pop
dec
adc
lret
push
iret
stc
fimuls
daa
sbb
test
and
and
sbb
add
xor
mov
push
push
imull
in
pop
xchg
loop
dec
cmpsl
das
imul
mov
push
popf
pusha
push
add
fisubl
mov
ds
mov
mov
bswap
scas
es
jmp
jmp
cmp
gs
out
mov
push
into
jae
jne
push
mov
mov
jg
outsl
pop
dec
mov
pop
lahf
movq
jle
dec
fistps
cs
push
out
adc
lds
das
fistl
pop
jbe
or
fiadds
fs
imul
jg
insl
mov
ja
dec
xchg
push
add
fmull
pusha
cli
fists
aaa
scas
sub
aas
cmpsb
das
xchg
pop
xchg
jbe
out
push
filds
ss
push
idivb
outsl
pop
dec
mov
cmpsb
das
xchg
pop
xchg
jbe
out
push
filds
ss
push
idivb
es
rcr
hlt
sbb
es
cmc
je
fisttps
es
and
movsbl
ret
adc
pop
sub
mov
in
rcll
jnp
sbb
andl
xchg
jno
inc
adc
dec
xchg
rorb
cmpsl
dec
fildl
or
ds
stos
mov
orl
mov
in
daa
call
fidivrs
test
and
iret
push
shlb
jb
es
add
dec
jne
push
mov
sub
cld
push
sti
std
lds
xor
ja
sub
and
sbb
daa
xchg
push
pop
sbb
sub
test
shr
jle
rcrb
add
popf
loope
push
push
pop
mov
adc
and
fsubp
lahf
jmp
xchg
aad
sub
xlat
cwtl
sahf
jnp
hlt
pop
and
fcomps
out
mov
mov
or
mov
bound
cmp
popf
add
icebp
js
jbe
jnp
lret
inc
xor
movsl
popa
mov
addr16
push
cmc
and
mov
xchg
cmp
jle
push
je
loopne
xchg
bnd
push
xor
push
cli
xchg
cwtl
cwtl
dec
filds
inc
loop
fdivrl
fsubp
dec
icebp
cmp
test
mov
adc
testl
mov
xor
in
in
test
rorl
pop
insb
filds
imul
lret
icebp
int3
mov
or
dec
cwtl
push
test
decl
bound
lret
jmp
dec
sbb
adc
sbb
cmpsl
ficoms
push
aad
jo
mov
jl
sbb
fnsave
cmp
out
add
sub
push
imul
fnstsw
fldl
jne
scas
out
mov
inc
sub
sbb
insl
mov
xchg
sbb
xchg
mov
cltd
jg
xchg
test
mov
rorb
jns
sub
lods
jnp
mov
push
stc
jmp
aad
mov
leave
inc
test
fcompl
cmp
xchg
xchg
pop
repz
ret
shr
pop
repnz
test
xor
jmp
rolb
jno
mov
movsl
xlat
push
inc
mov
pop
lahf
loopne
or
xchg
add
cmc
jp
sbb
mov
and
xchg
je
cld
loopne
inc
inc
dec
push
loopne
xor
sub
push
das
sub
stc
loopne
cmpsb
test
inc
mov
mov
mov
push
adc
popf
jl
stos
cli
fcmovu
jnp
or
sbb
inc
sub
sub
or
stos
fs
rcrl
cmpsb
mov
addr16
or
les
out
push
pop
xchg
out
lret
push
mov
inc
inc
mov
hlt
ret
xor
inc
loope
sbb
and
mov
in
je
scas
in
ja
adc
es
stos
aad
add
sub
add
xor
cmc
aaa
pusha
sub
cs
mov
dec
test
cmp
add
xchg
jbe
sbb
inc
adc
stos
pop
scas
imul
push
jnp
aam
push
repz
and
mov
mov
lcall
xor
sbb
jp
sbb
jg
test
cwtl
xchg
lret
jl
test
pusha
cmp
and
lods
outsl
or
sbb
jns
out
and
inc
sub
add
add
stc
nop
hlt
jae
pop
rclb
cli
shlb
lret
add
adc
or
dec
pusha
repnz
add
dec
add
sahf
push
add
int3
or
lret
pop
sbbb
movsb
and
mov
movsb
push
sub
stc
inc
insl
add
pop
add
mov
sub
in
cmpsl
rclb
movsl
push
shrl
pop
mov
xor
or
daa
or
lret
es
aam
aaa
cld
adc
push
mov
lret
cmc
and
cmp
and
adc
in
mov
adc
or
cltd
sub
jae
fs
xchg
mov
add
int3
and
xlat
inc
adc
out
pop
sub
cmc
pop
les
iret
outsl
mov
mov
or
xor
mov
repnz
jns
push
inc
jb
or
sub
mov
mov
lds
dec
mov
je
mull
or
mov
ffree
or
push
addr16
ret
mov
dec
mov
add
outsb
outsl
jg
leave
cld
out
pushf
enter
movsb
add
shrb
adcb
lods
sub
inc
mov
insb
xchg
sbb
pop
scas
aas
int
cmp
arpl
pusha
popa
dec
push
jns
sbb
scas
loope
test
add
aam
test
insb
and
orl
rolb
and
inc
push
daa
ficoml
scas
pop
or
mov
adc
add
inc
cmp
mov
je
popf
scas
cmp
or
adc
ja
dec
push
cltd
pop
cmpsb
jbe
xor
or
fistl
mov
repnz
stc
mov
dec
lods
jp
mov
mull
cwtl
adc
ffreep
into
es
out
mov
mov
inc
faddl
inc
in
enter
push
mov
sbbl
dec
adc
gs
inc
jns
call
add
jp
push
xchg
push
in
and
rcr
gs
or
inc
sub
fcmovne
push
sub
or
outsl
loopne
daa
jbe
and
out
fimuls
dec
cmp
aam
dec
sarl
fistps
scas
xor
rcr
mov
je
lds
clc
divl
lods
js
insb
rcr
cmpsb
cmp
push
cmp
or
shl
cwtl
test
and
data16
jl
loope
aad
xchg
xchg
sub
push
icebp
lods
jb
lds
adc
mov
pop
push
rolb
in
push
pop
addr16
adc
cwtl
mov
add
into
add
sti
test
rorl
cmp
pop
loope
pop
cmc
je
dec
adc
sbb
mov
in
push
fldenv
hlt
fwait
std
sub
mov
out
imul
loopne
pop
sbb
daa
out
push
sbb
js
addr16
cmpb
clc
add
add
mov
fidivl
subb
jmp
loopne
or
mov
jno
lods
rcll
loopne
lahf
outsl
pop
push
pop
rcrl
gs
dec
mov
cmpsl
call
xor
cs
inc
or
stc
insl
scas
std
cwtl
testb
adc
out
adc
pop
mov
add
fwait
dec
xor
sub
mov
sbb
or
imul
mov
jmp
js
mov
in
add
and
mov
je
push
rol
mov
int
and
or
pop
lds
rolb
repnz
cli
dec
iret
std
add
pop
pop
iret
jo
repnz
sub
push
icebp
insb
mov
aad
push
lods
jne
jg
or
xchg
test
jno
mov
dec
mov
ljmp
and
push
mov
adc
stc
adc
pop
ror
xor
dec
cmpsl
push
xor
jnp
lahf
push
loop
loopne
stc
in
repnz
popf
das
push
into
loopne
jmp
sbb
loop
mov
std
repnz
add
or
xor
test
push
movsb
jge
sbb
int3
enter
mov
mov
shll
fistpll
cwtl
or
mov
xor
pop
test
das
jae
xor
mov
fcmovbe
pop
or
fdivrs
je
test
fldl
dec
mov
adc
dec
add
inc
jo
ret
dec
add
jbe
xchg
xor
lock
iret
xchg
pop
xchg
or
cmp
loopne
cmpsb
inc
lods
and
pop
notb
divb
ret
loopne
aas
rcrb
xor
and
ss
jnp
xchg
xor
stos
or
and
push
decl
subl
add
xlat
mov
pop
or
jne
inc
push
cmp
and
lcall
into
call
xchg
and
insb
cs
push
addb
pop
lcall
js
lds
mov
mov
sbb
mov
ss
jge
out
and
cwtl
cmp
mov
cmc
fcmovnbe
mov
rcrl
dec
or
inc
xor
jnp
cmp
sub
mov
mov
and
leave
test
dec
sub
cwtl
call
mov
rcl
stos
mov
dec
enter
cltd
rolb
ds
pop
inc
lahf
sub
out
xchg
sbb
je
test
inc
add
xor
lods
movsb
int
xor
and
inc
pop
mov
add
mov
jg
les
cmp
loopne
sbb
setbe
pcmpgtb
pop
sbb
loope
push
mov
xchg
ds
add
mov
pop
test
test
shrb
push
daa
jb
or
sub
xor
sbb
mov
lret
sub
loopne
or
lds
push
mov
jnp
push
pop
loope
dec
sub
stos
mov
in
std
cmpsl
inc
xchg
lahf
push
das
adc
iret
fs
sbb
mov
cmpsl
dec
aad
sti
out
fs
mov
sub
outsb
sub
stos
push
push
jg
orl
lret
scas
enter
or
sub
mov
orb
aaa
cmp
or
dec
xor
lock
add
call
mov
inc
negl
jp
aam
mov
adc
jne
sub
push
dec
cmpsb
bt
lret
pop
and
cmc
jmp
lds
test
xchg
shll
bound
aam
fildll
hlt
in
xchg
add
inc
jne
xor
loop
shl
jl
test
push
push
movsl
mov
sbb
sahf
mov
xchg
pop
cli
and
fs
imul
mov
enter
xchg
push
mov
in
dec
in
ror
push
test
or
negl
fwait
cmc
jecxz
das
les
add
mov
mov
push
lcall
in
sbb
aaa
enter
cmp
sbb
js
fcomip
jg
xchg
and
iret
out
mov
mov
mov
icebp
push
dec
push
jecxz
pop
jnp
mov
rorb
xor
imul
repnz
int3
in
mov
ss
pop
sub
push
mov
mov
jg
inc
daa
insl
insb
sti
add
jp
lods
sbb
cltd
popa
les
fistl
cwtl
xchg
mov
xor
call
inc
pop
add
jbe
lret
jle
popf
iret
cltd
mov
jle
push
add
ljmp
rclb
push
lret
sub
aad
testb
cmpb
jecxz
stos
fs
lea
jge
sub
add
push
pop
mov
les
cwtl
scas
aam
mov
lods
in
mov
pop
jb
bound
je
add
push
push
pop
stc
aam
jb
js
add
push
mov
outsl
cld
jnp
mov
pop
ss
xor
mov
sti
repz
adc
jle
scas
cmp
xor
xor
cmpsl
jge
popa
fwait
lds
cmc
xchg
cmp
sahf
adc
popf
aad
cs
dec
ljmp
mov
arpl
pop
or
pop
mov
jnp
xor
movsl
gs
pop
test
mov
dec
and
sub
sbb
jne
in
push
push
cwtl
inc
add
mov
inc
jecxz
fldt
sub
xor
aad
cmp
sub
dec
dec
inc
or
mov
fdiv
mov
jg
mov
int3
mov
pop
mov
pop
cmp
les
ret
push
jne
ja
cltd
or
cmp
xchg
test
outsl
xor
loopne
pop
jns
adc
add
fidivl
aaa
stc
lret
in
adc
sbbb
pop
add
inc
cwtl
aad
cmp
mov
stos
mov
lods
fcmovnu
scas
jno
in
out
fidivrs
sub
imul
jbe
jbe
mov
dec
stos
aas
push
jl
test
in
inc
cli
add
rcrw
lds
aas
cmp
adc
inc
jb
lret
scas
addl
lods
pop
cmc
cli
inc
or
outsl
mov
mov
cmc
mov
mov
fs
mov
cmp
cmp
popa
cmp
aam
and
inc
jnp
cmpsb
xchg
push
xlat
subb
fcoml
push
adc
adc
mov
ss
cmp
or
movsb
push
cltd
mov
fwait
imul
adc
lods
mov
loop
sbb
idivb
jl
pop
addr16
ja
flds
aas
lcall
stos
stc
push
inc
dec
mov
push
push
xchg
das
das
divb
mov
call
jbe
stos
dec
and
repz
bound
jmp
dec
inc
and
dec
jp
dec
xchg
add
xor
xor
and
sub
adc
push
sub
or
cmpsl
inc
aaa
pop
icebp
sub
ret
fsubr
push
ficompl
sub
movsl
std
push
xlat
scas
push
fimull
cmp
adc
pop
pop
fxch
insb
adc
add
scas
pop
pop
adc
push
mov
arpl
sbb
ret
rolb
ja
xor
popa
dec
push
add
mov
je
or
jmp
jge
fcomp
test
mov
xchg
out
cmp
xchg
adc
pusha
pop
sub
test
xchg
negb
lea
clc
movsb
xor
sub
out
xchg
movsl
sbb
sub
or
and
pop
cmpsl
lahf
mov
sub
push
aaa
mov
push
into
and
xor
fidivl
lcall
es
sub
and
lret
data16
ret
lret
mov
shrl
adc
and
and
outsl
sar
movsl
sahf
jp
pop
popf
fdivs
addr16
adc
mov
mov
jecxz
neg
fldt
sub
cmp
adc
popf
jbe
pop
jnp
xchg
sub
mov
lret
xchg
sbb
mov
mov
and
jmp
push
add
jne
rcll
xor
and
in
ja
mov
sbb
cmc
ljmp
out
jmp
fildl
xor
sbb
mov
or
in
divl
movb
pop
inc
xor
xor
test
pop
inc
lock
push
cltd
stos
push
pop
dec
sbb
cltd
dec
mov
jle
popl
push
add
add
jbe
add
int3
push
pop
push
ljmp
xchg
xchg
inc
fcmove
imul
xor
mov
jnp
ret
pop
lret
bound
jecxz
sbb
je
sbb
jae
xor
out
in
and
adc
sub
arpl
hlt
stos
pop
out
aam
pop
mov
jmp
cmpsb
sahf
in
pop
shlb
loopne
mov
mov
ja
lahf
push
int
subl
mov
and
sbb
mov
cld
lea
xor
sbb
jp
add
pop
add
shll
inc
nop
mov
ret
mov
into
mov
mov
clc
bnd
stos
xchg
jmp
inc
push
stos
mov
xorb
and
add
push
push
inc
sbb
fnstsw
stos
aam
xchg
lahf
pop
jecxz
jne
and
sub
nop
mov
leave
xor
ss
sub
in
in
test
outsb
pop
popf
rcrl
jmp
repnz
xchg
mov
hlt
adc
pop
jo
movl
enter
ljmp
xor
loope
pop
int
pop
jo
out
push
mov
xorb
inc
mov
les
insb
lret
flds
mov
mov
mov
cmp
cld
imul
xchg
je
mov
add
in
and
and
dec
xor
out
or
push
stos
jns
pop
andb
push
repnz
sbb
dec
sahf
xchg
mov
sub
addr16
ds
jle
add
fcmovu
adc
lret
push
mov
int3
loop
out
inc
stos
mov
adcl
adcl
pop
jge
xor
pop
xchg
jbe
push
sub
pop
xchg
pop
andb
add
fst
repnz
pop
mov
rcrb
inc
dec
test
out
test
das
sbb
les
pop
inc
aas
sarb
idivl
sbb
jns
add
das
adc
data16
in
add
pop
inc
rcl
dec
ljmp
shrl
mov
gs
lret
std
xchg
pop
mov
mov
mov
mov
repnz
lods
dec
subb
cmpsb
pop
jns
hlt
or
out
test
xchg
dec
popf
sti
je
and
imul
aad
push
xchg
xor
push
dec
negl
js
sbb
orps
stc
in
lods
add
sahf
inc
mov
cmp
rorb
scas
repnz
dec
fisubrl
mov
scas
sub
repnz
hlt
jp
fbld
sbb
mov
cld
xchg
jmp
sbb
mov
xchg
sarl
jg
inc
xor
icebp
and
pop
clc
divl
pop
std
aam
sub
fdiv
loopne
insb
add
movsl
pop
test
cmpsl
and
mov
movsb
lahf
fsubr
adc
jp
bound
rol
rclb
jbe
lods
push
push
or
jnp
xchg
imul
push
divl
je
and
pop
outsl
inc
sbb
test
scas
pusha
mov
mov
movswl
lods
cmpsb
push
test
jmp
xor
in
jge
cmp
adc
mov
jecxz
fstps
lds
jo
ficomps
add
enter
rcrl
xchg
sub
xchg
mov
pop
and
lds
add
dec
std
jge
cmp
scas
cltd
mov
loope
dec
scas
insl
daa
fnstenv
push
xor
out
in
nop
inc
mov
cmp
js
jnp
xor
xchg
cmpsl
fadds
add
jp
test
push
or
push
add
xchg
out
jle
shrl
popf
movsb
cld
pop
mov
xor
setl
sbb
es
ljmp
dec
jns
dec
push
sbb
xor
push
addl
inc
adcl
xor
lahf
inc
mov
xor
dec
pop
fcoml
adc
ja
out
cs
std
adc
sub
stc
fbld
lods
cltd
and
and
std
jmp
add
jp
or
pop
xlat
add
subl
test
mov
push
repz
mov
jns
test
clc
pop
ret
sbb
jmp
clc
fldenv
stos
mov
push
push
mov
and
mov
sbb
mov
clc
adc
movsl
cltd
outsl
pop
push
dec
pusha
fisttpll
rclb
xor
pop
mov
in
inc
pop
jae
jmp
inc
imul
mov
add
mov
cwtl
enter
mov
mov
jecxz
imul
mov
inc
pop
push
add
or
test
imulb
and
fwait
xchg
lret
add
fs
imul
fidivs
dec
icebp
sub
mov
mov
je
jecxz
jecxz
xchg
lock
add
or
jnp
scas
out
pop
mov
and
in
xchg
push
inc
cmp
xchg
push
loopne
addb
jne
jg
fcomp
mov
jp
rorl
push
adc
push
sub
jmp
jge
jno
jae
stc
jne
cs
int
in
adc
mov
scas
mov
inc
rcrl
mov
clc
mov
cmp
call
xchg
and
mov
pop
ja
les
jp
jp
and
mov
fimull
and
or
mov
mov
aas
jns
movsl
mov
adc
add
clc
push
lock
cmp
jno
or
imulb
decb
adc
fstps
hlt
test
adc
insl
int
mov
in
leave
and
leave
mov
cwtl
and
lahf
jae,pn
sarl
idivl
or
addr16
cwtl
loopne
pop
xlat
xor
icebp
pop
xchg
cld
fisubs
xchg
imul
hlt
push
cmp
push
jne
in
xchg
lock
jmp
cmpsl
popaw
call
push
out
lods
mov
pop
add
out
mov
ret
cltd
fiadds
lock
iret
jnp
mov
push
pop
mov
fwait
cmp
dec
js
adc
adc
nop
sahf
addr16
adc
mov
sti
iret
sbb
sbb
pushf
outsb
adc
test
int
push
movl
test
push
lret
pop
mov
inc
adc
jle
aaa
cmpsl
mov
in
lea
in
insl
xchg
dec
fbstp
jnp
cmpsb
or
sbb
dec
xchg
cmpsb
jle
mov
mov
xchg
xor
inc
mov
sub
jge
in
loope
sub
inc
inc
xor
pop
adc
push
xor
scas
mov
dec
adc
pop
pop
lcall
arpl
dec
hlt
andb
jno
adc
xchg
mov
lret
pop
mov
sbb
sub
inc
xor
jbe
mov
sbb
sahf
out
lret
sub
daa
xor
int
sub
dec
adc
pop
ret
mov
jo
add
aad
lods
dec
andl
sahf
lret
in
in
jmp
adc
jb
out
mov
int
add
dec
push
addb
xchg
push
roll
inc
push
je
fs
addr16
mov
mov
push
nop
mov
pop
and
push
adc
daa
shrl
pop
adc
lret
jbe
mul
dec
push
mov
out
push
mov
call
out
fcmovnu
cmp
aad
adc
pop
mov
mov
push
loop
dec
mov
xor
mov
sub
add
jge
sbbl
sub
or
mov
inc
pop
repnz
xchg
jbe
push
test
jg
daa
mov
popa
mov
ja
out
jmp
xchg
ret
loop
xchg
mov
xchg
push
mov
inc
and
icebp
cs
mov
loope
and
pop
nop
mov
mov
fs
xchg
inc
test
lods
les
push
aad
nop
adc
aad
cmpl
or
das
mov
dec
mov
cmpsb
das
xchg
pop
xchg
jbe
out
push
filds
ss
push
idivb
outsl
pop
dec
mov
cmpsb
das
xchg
pop
xchg
jbe
out
push
filds
ss
push
idivb
out
ffreep
dec
mov
cmpsb
scas
xchg
pop
xchg
jbe
out
push
filds
ss
add
idivb
outsl
xlat
pop
dec
mov
cmpsb
das
push
pop
push
jns
filds
inc
aaa
scas
push
jmp
int3
int3
int3
int3
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
add
sbb
xor
sbb
xchg
mov
vpmullw
in
cmc
int
cmp
xor
loope
pop
jne
test
mov
lds
cmc
int
scas
adc
cmovne
push
gs
push
test
into
aad
sar
lds
pushf
int
cmp
pop
pop
dec
dec
add
mov
xchg
dec
mov
mov
dec
add
or
mov
cmp
inc
enter
push
xchg
cltd
sbb
sbb
pop
cmc
dec
popf
xchg
cld
aad
mov
movsb
inc
cli
cmp
sub
jl
adc
xchg
sti
sub
cmp
subb
adc
add
fstpl
sbb
add
or
stos
add
jne
sbb
inc
test
jno
cld
aad
sbb
sub
mov
push
decb
out
popf
mov
xchg
scas
push
in
sbb
cmc
xor
std
in
nop
pop
or
aaa
outsb
cmp
out
rcrl
lds
fists
and
testl
cltd
xor
insl
xchg
test
xchg
imul
aad
in
cmc
mov
arpl
and
or
add
xor
sub
sti
lock
inc
xchg
xchg
cltd
sbbb
inc
jl
sub
adc
pop
and
xor
neg
repnz
fdivr
mov
xor
lahf
cmpsb
bound
push
dec
push
outsb
add
push
insl
gs
jne
test
mov
vpmullw
in
cmc
int
cmp
xor
insl
gs
jne
test
mov
vpmullw
in
cmc
int
cmp
dec
and
sub
xchg
cltd
add
shll
jne
cs
jae
pop
movsb
lret
mov
or
mov
stc
fdivrs
fidivs
add
add
sbb
push
and
cmp
or
jbe
sbb
rcrl
aaa
mov
xor
push
lret
stc
pop
or
and
mov
rolb
sti
jecxz
dec
push
or
mov
mov
shr
iret
dec
inc
mov
add
pop
pop
add
add
mov
and
fsubrs
and
pusha
bound
cld
jno
lahf
data16
les
dec
test
fists
push
in
gs
pop
aaa
in
cwtl
push
jl
pop
notl
push
sbb
jmp
rcl
xor
ret
sbb
testb
inc
push
xchg
pop
js
cmp
adc
add
cmp
xlat
fsubr
cmp
dec
inc
or
enter
notb
jae
jno
xchg
mov
cld
loop
and
xor
mov
pusha
and
xor
add
lock
jb
cmp
push
mov
cmp
shl
and
mov
rol
jmp
pop
xchg
sub
sbb
mov
ret
add
dec
popf
push
addl
mov
pop
jns
xchg
inc
lock
fisttpll
out
jle
pop
sbb
dec
orb
dec
push
pop
call
xor
xchg
add
add
test
shrl
iret
popf
je
dec
aam
xor
stc
pop
adcl
in
cs
xchg
mov
or
out
es
push
push
lcall
mov
sub
arpl
jecxz
jp
dec
sub
sti
mov
sbb
shl
inc
mov
dec
or
pop
mov
test
mov
mov
mov
movsl
xor
popf
fs
test
in
push
sarl
js
inc
scas
and
jge
loopne
mov
aam
mov
cltd
repnz
mov
pop
xor
mov
push
test
testl
mov
mov
add
sbb
fcompl
lcall
lods
cmp
js
mov
mov
in
inc
mov
jl
push
cmp
inc
jmp
mov
cmp
push
leave
xchg
fwait
cmp
movsb
das
adc
jb
or
cmp
into
insb
jg
call
scas
push
push
push
imul
shrb
ret
sub
mov
hlt
fcompl
popf
in
aas
mov
xor
sbb
xchg
jmp
aaa
inc
out
pop
sub
sub
jo
fbstp
repnz
lret
mov
fucomp
rcrl
enter
inc
add
pop
cmpsl
push
add
daa
std
in
jo
sub
xchg
lret
xlat
pushf
bound
jg
mov
scas
out
and
xchg
in
fstl
data16
jecxz
xchg
sahf
mov
xchg
into
push
dec
xchg
and
push
jle
jecxz
fs
inc
pushf
shrb
cmp
ja
pop
cli
push
jecxz
jb
push
loope
xchg
cs
mov
pop
fwait
xchg
popa
aam
dec
fs
fisubrl
cmpsb
pusha
or
push
push
ljmp
hlt
sbb
or
fstl
push
iret
je
push
loopne
fmuls
jl
je
fwait
rcr
pop
jmp
inc
imul
scas
pop
and
lock
adc
fs
jl
subl
push
shrb
xor
je
mov
xor
sti
add
jno
ret
data16
aas
popf
lret
fwait
cmp
adcl
leave
ds
and
nop
xchg
dec
mov
fsts
in
loope
jns
mov
stos
xor
inc
incb
xor
notl
push
fiaddl
cmpsb
jb
popf
out
sahf
ret
ret
push
xchg
iret
xor
mov
sti
xor
lods
loop
cmp
xor
dec
mov
sub
in
das
ss
push
mov
push
loop
mov
mov
aaa
cmpsl
addr16
ret
loopne
and
flds
inc
add
add
sub
rcrl
outsb
pop
jle
push
ds
mov
stos
orb
fcoms
add
addr16
push
stc
mov
imul
out
jmp
mov
inc
push
jp
mov
adc
adc
mov
mov
jnp
inc
loop
pop
loopne
xor
bound
fldcw
das
pop
js
adc
sahf
aas
xchg
sbb
ret
call
xchg
test
fdivl
das
mov
jo
loope
or
insl
scas
pop
mov
mov
outsb
rcrb
jbe
pop
mov
push
and
movsl
jge
pushf
lahf
sahf
pop
scas
pop
push
xchg
and
pushf
mov
adc
mov
fdivrs
mov
movsb
ja
sub
dec
push
add
loope
mov
fst
ret
repz
mov
rcrl
div
adc
scas
out
mov
xor
sbb
push
sub
fidivl
add
lods
pop
pop
out
push
lea
add
frstor
mov
mov
and
xchg
mov
fstps
dec
adc
add
pushf
lods
or
subb
mov
add
cmpsb
xchg
sti
xor
xor
dec
cltd
pop
or
push
xor
nop
insb
mov
xchg
xor
std
out
stos
arpl
dec
sub
lea
cmpsb
into
jle
in
iret
hlt
mov
data16
or
xchg
mov
xchg
aad
jb
in
movsb
and
adc
mov
test
mov
inc
mov
adc
push
pop
shl
dec
pop
add
sti
dec
jo
xor
out
fisubl
sbb
andb
gs
xchg
int3
xchg
dec
sub
mov
out
cmpsl
dec
lret
popa
not
loope
cwtl
sarl
out
dec
xor
push
cmpsb
inc
insb
loopne
out
insl
push
jl
cs
loopne
dec
adc
insl
call
sbb
inc
or
mov
inc
std
add
push
hlt
repz
sbb
xchg
jne
stc
mov
movsb
icebp
mov
push
fnsave
jle
and
push
lahf
mov
jb
jb
mov
es
inc
jnp
add
add
imul
mov
test
aam
dec
loope
mov
gs
rcll
or
mov
data16
bound
cmpb
sbb
outsl
mov
inc
mov
leave
fcomps
mov
aas
mov
xor
pop
mov
js
cmc
adc
cmp
jge
in
pop
out
add
in
sbb
mov
or
or
les
loop
ds
cmp
dec
sub
sub
cmpb
outsb
loopne
popa
pop
sub
andb
xor
dec
negl
lds
sbb
jbe
or
or
cwtl
mov
mov
mov
mov
mov
mov
jecxz
fcompl
mov
add
sub
ficoml
or
ja
mov
sti
and
inc
dec
and
rcll
in
dec
fs
mov
pop
ret
sub
out
push
sub
pop
adc
gs
out
add
push
aaa
shlb
repnz
rorb
popf
dec
sub
xchg
mov
mov
mov
ret
mov
call
mov
mov
jae
je
mov
sub
jbe
test
pushf
xor
or
or
inc
add
stos
adc
out
mov
inc
jp
lret
mov
or
or
addl
ljmp
movsl
je
test
call
jno
push
and
lret
mov
xchg
stos
cmpsb
int3
push
test
adc
sarl
and
mov
mov
mov
cmp
fsubs
mov
incl
dec
jl
enter
stos
jo
sbb
push
stos
rcll
sub
sbb
shrb
mov
pop
and
out
push
xchg
push
cli
xchg
jnp
hlt
mov
aaa
sub
loop
insl
sti
sub
xor
and
adc
lds
add
std
sub
sub
in
mul
sbb
rcrl
or
ja
icebp
jnp
cmpl
push
pusha
jecxz
jmp
jo
popa
aad
xchg
adc
jmp
into
xchg
lret
pop
push
sbb
push
xchg
xlat
fcom
mov
mov
scas
push
ss
fstl
inc
addr16
les
pop
arpl
mov
cmpsb
test
sub
xor
xchg
mov
aaa
adc
jbe
dec
pushf
sbb
clc
int3
push
call
mov
inc
gs
dec
xchg
popa
ljmp
cmp
and
fidivs
or
fsubl
sti
mov
les
mov
inc
xchg
fdivr
lock
int3
mov
jp
jno
fidivrs
insb
sbb
gs
cmp
insl
enter
mov
xchg
scas
leave
adc
cmp
sbb
out
nop
cwtl
cmc
outsb
imulb
inc
sbb
jnp
pop
dec
mov
addl
mov
cmp
push
mov
mulb
fcompl
sysenter
push
rcrl
pop
cltd
sub
lds
mov
xor
in
mov
and
je
push
imul
mov
notb
mov
cli
stos
das
cli
sti
aad
cmp
mov
push
mov
jbe
lahf
ljmp
push
sbb
pop
add
push
lock
insl
ffree
sub
std
je
dec
lahf
test
aam
es
jne
cmpsl
daa
sub
lock
push
inc
icebp
and
subl
push
addr16
or
adc
jb
mov
enter
int
lret
push
scas
pop
mov
mov
jb
stos
mov
xchg
dec
push
les
pop
xor
jb
xchg
mov
ret
icebp
sahf
mov
sub
jns
clc
inc
iret
push
pop
and
cmp
dec
adc
dec
add
push
test
dec
movsb
xchg
add
out
mov
data16
or
ret
ret
cld
rcl
int
mov
or
sbb
cmp
cli
jmp
dec
test
jb
push
shr
push
dec
icebp
test
xchg
or
mov
cltd
int3
inc
js,pn
cmpsb
sbb
jo
aad
aam
mov
popa
jge
inc
cmp
cs
push
dec
xchg
andb
xchg
outsl
fcomps
in
in
shll
pop
sbb
sub
mov
xor
cltd
push
in
xchg
dec
jg
movsb
mov
pusha
sarl
add
repnz
lods
dec
sti
dec
add
jp
and
pushf
notb
mov
shll
xor
sub
sti
mov
adc
repnz
dec
stos
out
mov
mov
push
sub
add
test
dec
cli
dec
leave
push
sbb
mov
data16
aas
mov
out
sbb
mov
bound
adc
fldl
aam
popf
idivl
and
xor
arpl
cmc
jno
rolb
jo
movsb
add
dec
outsb
rol
inc
inc
loopne
mov
mov
jo
xchg
loope
hlt
mull
movsl
ja
sarl
sub
incl
bound
xchg
jg
sbb
ds
xor
mov
insl
dec
push
adc
repz
aad
out
push
je
xor
ds
push
lock
cmp
add
cmpsl
daa
ret
push
cmp
jbe
xor
int
push
test
js
xor
popa
lcall
and
push
mov
jnp
andb
add
xor
add
in
push
pop
out
xorl
test
push
and
sub
inc
pusha
xlat
fidivs
ss
pop
jp
and
jp
pusha
aaa
movsb
arpl
pushf
or
dec
adc
add
fidivl
cmp
std
loope
mov
adc
aas
shll
sbb
mov
lods
inc
cmp
sub
subl
mov
mov
out
movsl
or
adc
outsl
mov
loop
insb
add
lea
int3
sarb
imul
pop
aas
xchg
mov
sub
mov
call
outsb
mov
sti
inc
jl
cltd
dec
jp
rcll
scas
dec
jecxz
vpdpwssd
dec
sbb
les
mov
addr16
stos
pop
mov
stos
xchg
insl
inc
xlat
inc
pop
jecxz
xchg
xchg
jae
jle
neg
sti
lods
jge
loopne
pusha
daa
adc
lcall
add
ds
int3
scas
test
push
cwtl
xchg
fdivrl
push
push
sbb
xchg
cmp
clc
lret
mov
or
dec
cmp
mov
cmp
loopne
dec
in
mov
xor
shlb
mov
adc
cltd
jo
out
ret
jp
cs
movsl
ja
test
xchg
rcrb
lods
or
cli
lahf
sbb
dec
aad
cmpsl
js
xor
xchg
adc
cmc
mov
cs
mov
pop
es
mov
cmpsl
stos
iret
pop
jne
sahf
aaa
aaa
sbb
into
arpl
mov
aaa
xchg
adc
insb
lahf
es
rclb
pop
cmc
and
aaa
xor
fsubrs
arpl
pusha
jb
xor
mov
in
int
add
mov
lods
out
mov
mov
adc
push
cli
cltd
movsl
test
and
lcall
push
jl
mov
int
pop
lock
inc
pop
inc
fcompl
out
cmp
insl
mov
pop
and
loope
and
cmp
jno
mov
scas
pop
xchg
xchg
rorb
je
sbb
pop
aad
mov
out
xor
inc
add
ds
xchg
enter
xor
push
inc
push
sar
in
divl
popf
mov
sub
inc
popa
cmpsl
inc
sub
scas
xchg
movd
negl
ljmp
sti
mov
mov
and
push
push
rcll
add
por
push
adc
pop
pop
adc
std
stos
cmc
cmp
das
ljmp
or
push
std
mov
fdivl
mov
adc
dec
imul
inc
add
xor
pusha
push
mov
fs
insl
xchg
test
stc
adcb
add
in
or
ret
mull
mulb
mov
mov
sti
daa
push
call
nop
jl
jp
xchg
arpl
negl
or
mov
rolb
pop
shrb
test
pop
subb
fildll
hlt
lods
cld
hlt
cli
jmp
pop
mov
orl
imul
push
testb
jl
jnp
lcall
and
push
mov
jne
shrl
aad
cmp
mov
mov
decb
popa
jns
das
xchg
and
jecxz
or
xchg
push
xor
js
ljmp
jae
lcall
outsb
pop
pop
lea
loope
jns
and
mov
fstps
and
cmp
mov
loope
push
cmp
xchg
or
shll
imul
sub
pop
mov
add
jno
cmp
lods
mov
push
jp
mov
in
adc
arpl
mov
sbb
sbb
loope
enter
lods
sbb
xchg
jno
in
xchg
push
cmp
xchg
sahf
lret
insb
sbb
cli
mov
mov
rolb
xorl
lcall
sahf
aas
and
add
fbld
mov
jmp
sbb
xchg
and
xor
nop
fdivrl
dec
add
int
repz
pushw
or
idivl
repnz
imul
cwtl
addl
out
jne
enter
int
sub
rorl
rcrl
mov
arpl
sarl
add
aaa
push
add
fimuls
mov
mov
ds
lock
into
es
mov
adc
pop
cmp
jno
mov
xor
jge
mov
xor
push
jecxz
mov
jae
mov
into
mov
pop
jo
mov
xor
je
dec
push
test
mov
jmp
xchg
cmpsb
ret
nop
jmp
addr16
stos
lret
loopne
xchg
sub
push
psrlw
scas
hlt
cld
pop
aaa
jne
loope
or
sbb
add
mov
jne
push
mov
test
cmp
mov
xor
aam
dec
inc
jne
mov
cmpsl
cmpsb
je
mov
push
xlat
mov
imul
sub
outsl
xor
jbe
int3
stos
pop
inc
push
aad
int3
in
leave
lods
push
mov
loope
dec
imul
ljmp
out
mulb
adc
dec
pop
pop
mov
inc
rorl
pop
test
cmp
ret
cmpsb
adc
loope
push
mov
or
jns
push
jae
dec
sub
ret
xchg
les
into
push
mov
ficoms
iret
out
mov
in
scas
incl
popf
pop
mov
test
leave
mov
mov
cmc
ret
push
loop
test
pop
pop
adc
stc
xchg
lcall
mov
add
or
inc
div
movsl
jecxz
mov
jns
dec
aam
mov
or
mov
pop
push
test
mov
inc
jle
pop
inc
jge
fs
lret
aaa
arpl
jle
xchg
mov
inc
repnz
sub
add
cmp
jl
movsl
hlt
clc
sub
lods
jae
gs
ret
icebp
in
pop
or
cmpsl
mov
cmpsb
movsl
jne
xchg
or
inc
daa
dec
enter
int
cmpsb
adc
dec
push
inc
ret
sbbl
xchg
data16
mov
sbb
fldt
pop
sub
pop
enter
gs
mov
cmp
cwtl
ljmp
lahf
jo
shl
jg
aam
and
in
mov
cmp
sbb
flds
xchg
adc
xlat
inc
add
add
lret
mov
js
movsl
xchg
out
js
sarl
xor
sbb
movsl
test
out
and
inc
cmp
xchg
test
sub
push
inc
xchg
sbb
sub
adc
mov
xor
inc
arpl
mov
mov
data16
bound
xor
add
inc
add
jmp
cmp
jge
mov
xchg
add
sti
dec
inc
xchg
xor
fsubrl
dec
push
mov
rclb
push
out
stos
jno
jecxz
aad
xor
adc
test
xchg
cltd
cmp
mov
push
roll
jle
cmp
inc
add
and
sbb
js
cltd
rol
fldt
fstpl
or
inc
jmp
xor
subl
subl
mov
stc
adc
adc
into
addl
sbb
popf
movsl
icebp
jb
adcl
lods
inc
or
push
cs
std
cld
mov
mov
lods
lock
xor
jmp
push
test
roll
cmp
xor
lret
dec
add
xchg
stc
enter
adc
call
and
stos
push
ret
jecxz
in
mov
fcomp
ljmp
mov
jmp
jo
mov
ffree
or
cmpsb
stos
inc
cmp
jecxz
js
mov
sbb
nop
adc
dec
les
cli
mov
pushf
out
or
shlb
jge
iret
sbb
mov
das
es
sub
adc
les
filds
lret
dec
outsb
scas
mov
or
mov
popf
icebp
cld
repnz
push
adcl
jb
fsub
call
inc
cmp
mov
add
push
arpl
xlat
enter
imul
ffreep
shr
xor
gs
cmp
cmp
pop
call
push
das
popf
jnp
dec
cld
loopne
cmp
iret
and
fwait
shlb
adc
mov
mov
imul
sub
mov
dec
orl
loop
jns
add
in
and
out
mov
xchg
fdivp
rcrb
inc
sbb
dec
ds
fcmovnu
icebp
test
or
ud2
mov
inc
sub
ljmp
and
bound
mov
adc
xchg
adc
daa
push
or
dec
subb
xor
pop
pop
dec
xchg
fs
adc
test
jae
push
sub
clc
iret
aam
xchg
aas
xor
adc
jecxz
jle
pushf
mov
stos
andb
fmuls
shl
lds
and
push
loop
dec
aam
fcmovnbe
je
mov
adc
or
fmul
imul
xor
adc
out
push
add
add
lret
cmc
ja
cltd
jecxz
inc
dec
push
dec
addr16
iret
jns
mov
xor
add
adc
mov
mov
push
pop
out
pop
in
pop
mov
xor
gs
xor
and
jne
adc
fbld
testl
scas
adc
cltd
push
lcall
xchg
stos
mov
xlat
lahf
inc
dec
lret
pushf
xor
insl
inc
mov
popa
push
mov
add
dec
xchg
int3
pop
outsl
add
or
pop
cmc
cmp
xchg
sbb
pop
sbb
or
rolb
push
push
and
push
push
push
lahf
dec
push
dec
dec
adc
inc
test
inc
xor
sbb
mov
fs
aam
pop
shrb
popf
imul
arpl
push
adc
xlat
jmp
adc
xchg
call
loop
push
pop
xchg
mov
out
jns,pt
das
movsl
cmp
in
and
pop
inc
jb
je
aaa
and
inc
pushf
in
mov
dec
cmp
xor
mov
out
dec
add
and
jo
popa
arpl
add
in
mov
mov
and
or
jge
ficompl
pop
push
popf
sarb
jo
mov
cltd
mov
iret
in
push
adc
xchg
in
mov
stos
daa
pop
push
movsl
inc
push
aas
or
cmp
outsl
je
inc
ja
mov
and
xor
mov
les
push
xor
daa
repnz
dec
sti
jmp
pop
fnstsw
cmp
pop
jb
lcall
roll
addr16
idivb
pop
sbb
in
rorb
jle
aaa
pushf
mov
sub
mov
dec
ret
fstps
mov
sub
inc
jge
insl
gs
jne
test
mov
vpmullw
in
cmc
int
cmp
xor
insl
gs
jne
test
mov
vpmullw
in
cmc
int
cmp
xor
lds
jne
test
lods
movsl
popf
mov
vpmullw
in
cmc
int
cmp
xor
insl
in
cmc
dec
jp
push
setge
adc
int3
int3
int3
int3
jne
nop
pop
sbb
jg
add
pusha
and
rcrl
mov
sub
outsl
or
punpckhbw
pop
das
dec
aas
call
iret
mov
clc
in
mov
scas
enter
test
sahf
ja
pushw
pop
je
mov
mov
lcall
scas
stc
mov
ss
sbb
repz
pop
mov
decb
jmp
test
popf
push
stc
in
adc
and
addl
cmp
push
aaa
jmp
jge
jns
pop
scas
inc
repnz
xor
pop
sub
jo
clc
dec
push
pop
addr16
jbe
pop
lahf
gs
sub
mov
outsl
pop
dec
jns
xchg
fistps
dec
shrb
ja
jne
ljmp
ja
mov
xchg
jmp
sbb
add
js
clc
fbld
mov
or
call
inc
mov
outsl
lods
mov
xor
mov
inc
into
push
lret
cltd
cli
mov
jge
call
scas
or
dec
sbb
gs
sub
pop
ss
xlat
cmp
inc
notb
mov
scas
lods
fisttpl
pop
pop
pop
outsb
data16
pop
sbb
push
fldenv
jmp
int3
lods
scas
sarb
aaa
mov
jp
jl
sub
xorb
mov
lods
ret
mov
dec
push
sbb
push
arpl
pop
das
dec
aas
mov
out
mov
clc
scas
enter
sub
outsl
or
punpckhbw
pop
das
dec
aas
mov
out
mov
clc
scas
enter
in
fdivs
xor
jl
aad
adc
mov
inc
adc
xor
xchg
inc
iret
dec
popa
push
pusha
mov
pushf
int
inc
cwtl
cltd
cmpsl
mov
and
jb
inc
daa
and
testb
out
fdivl
ret
add
ret
adc
push
dec
inc
outsb
arpl
push
mov
shrb
ret
lret
repz
aam
push
pop
push
mov
test
dec
sarl
mov
dec
xchg
add
add
fs
jo
lea
and
cmp
add
out
sub
enter
and
mov
adc
cld
and
aad
ret
test
adc
mov
mov
stc
mov
dec
adc
enter
je
xchg
imul
mov
neg
adcb
xor
cmp
data16
pop
imul
jecxz
or
xchg
out
call
je
shll
imul
add
push
movsb
test
pusha
sbb
or
negl
push
inc
out
int3
dec
xor
sbbb
out
cmp
cmp
icebp
ja
mov
pop
cmp
in
adc
jecxz
pop
add
jns
bound
loope
sbb
pop
dec
adc
and
dec
dec
test
popa
sub
mov
popa
mov
jmp
push
frstor
pop
std
cmp
test
and
shll
push
mov
mov
xor
inc
cmp
out
push
or
push
repnz
stos
or
push
sub
add
push
js
fisubrl
or
pop
sarl
or
pop
mov
adc
inc
addr16
or
jb
insl
sbb
mov
jnp
int
xchg
push
mov
adc
cmpsb
mov
pop
popa
mov
popa
dec
or
movsl
jmp
cs
mov
jle
jle
mov
clc
and
cld
xor
leave
mov
jnp
popa
out
sbb
fsts
dec
mov
adc
cmp
sarb
and
out
bound
dec
mov
push
mov
int3
dec
lds
into
jnp
aad
sub
mov
sbb
mov
pop
in
xchg
rcr
mov
sbbb
inc
mov
aaa
dec
das
lods
jo
dec
xor
shrl
pushf
pop
pop
cld
js
cmp
scas
repz
cmp
outsl
dec
imul
test
insb
pop
sub
fwait
dec
dec
mov
mull
in
dec
push
cwtl
xor
and
add
xchg
cmp
or
jne
or
lds
mov
testb
inc
or
dec
lea
dec
pop
jle
movsb
clc
mov
mov
xchg
and
shl
jbe
sbb
push
pop
lods
cmp
push
xlat
jle
mov
incl
or
jmp
pop
daa
mov
aaa
in
andl
mov
mov
aam
cmp
sbb
adc
cli
aam
pop
test
cmpsl
dec
cmc
mov
inc
inc
out
jne
xlat
es
sbbl
pushf
jo
xor
mov
das
sbb
push
xchg
repnz
push
int3
mov
add
jnp
sbb
cwtl
sti
les
nop
jl
test
mov
les
cmc
outsb
mov
sbb
movsb
loop,pn
add
es
dec
xor
and
subb
sub
jbe
cmpsb
fcomp
ret
sub
jne
mov
out
arpl
aaa
cwtl
mov
shll
leave
xchg
xor
lds
or
ds
cld
in
cmp
cmp
adcb
xor
clc
lcall
out
int
movsl
cmp
and
fidivrs
popf
xchg
pop
mov
notl
nop
xchg
jns
out
lea
cs
das
jmp
dec
push
stc
push
pop
iret
repz
mov
or
mov
iret
dec
pop
mov
sub
shll
xor
popf
sbb
ds
mov
mov
mov
in
sbb
xor
cmpsl
lret
aad
aaa
cmp
jp
sahf
inc
filds
mov
adc
int
addr16
std
mov
add
sbb
mov
jle
scas
in
clc
mov
jmp
and
and
inc
and
xchg
pop
rcl
cmp
insl
mov
sub
pop
mov
movsb
and
mov
mov
xchg
cwtl
push
cmpb
lea
push
push
xlat
stos
inc
test
push
sbbb
test
push
nop
loopne
jl
add
push
je
lret
iret
dec
cmc
out
test
sbb
out
sub
in
and
and
xchg
xor
leave
test
xchg
outsl
shrl
sub
push
call
add
or
push
sbb
mov
cmpsb
or
cld
jne
sub
gs
mov
pop
pop
loop
pusha
sbb
gs
aas
xor
loopne
jne
xor
xor
xchg
inc
ss
mov
cld
inc
arpl
sub
xor
jb
imul
pop
xor
cs
sbb
shr
push
cs
aam
sbb
popf
mov
ja
cmp
mov
gs
out
cmp
add
pushf
pop
push
inc
adc
jb
xchg
insl
aam
xor
xchg
xchg
mov
test
jp
mov
popa
xchg
pop
cmp
cld
xor
and
push
xchg
mull
jp
mov
popf
lock
xor
adc
xor
pusha
ljmp
stc
xchg
adc
inc
push
adc
test
adc
jns
je
mov
dec
sti
push
push
popf
mov
lcall
add
mov
loop
inc
add
pop
dec
ja
imul
mov
xchg
scas
xchg
or
jne
push
or
mov
push
test
jno
adc
insb
or
sbb
mov
lcall
mov
insb
test
aad
je
mov
sahf
push
test
adc
call
and
dec
sbb
cmp
imull
xchg
int
sbb
incb
into
aad
mov
inc
inc
nop
dec
push
int3
cli
into
mov
or
in
mov
cmp
pop
cmc
pop
rclb
insb
pop
xor
mov
stc
jmp
subb
das
add
push
out
mov
mov
inc
data16
mov
dec
ret
nop
pop
sti
dec
xchg
push
xor
sbb
data16
lock
lods
jbe
ja
jg
lods
mov
add
nop
mov
jge
es
mov
push
arpl
mov
lret
jg
and
ljmp
add
test
imul
shlb
mov
add
sub
dec
iret
jp
push
sti
and
mov
cmp
add
and
mov
push
stc
icebp
int
push
lcall
popf
pop
or
mov
sbb
dec
push
jno
mov
shl
cmp
push
es
dec
xor
out
add
dec
pop
xchg
arpl
and
or
add
add
test
jp
dec
mov
addl
mov
lret
jle
cmp
add
out
mov
cmpsl
pushf
fstpt
cs
push
or
js
push
jl
jg
mov
andb
roll
and
iret
pop
mov
sbb
jp
sbb
lret
xor
aaa
pop
mov
mov
int3
imul
das
pop
or
add
je
lret
cmp
inc
push
xchg
and
jbe
inc
test
shl
repnz
or
loope
out
dec
cmp
das
jns
test
cmpsl
jns
xlat
test
ja
out
or
fdivrs
lds
ds
ljmp
sahf
test
and
xchg
pop
call
out
jae
and
pop
sub
in
lods
push
hlt
push
mov
dec
sub
dec
push
mov
xor
bnd
lea
cmpsl
mov
add
add
push
push
pop
mov
add
xchg
ja
leave
or
mov
rclb
push
sahf
dec
pop
mov
mov
sarb
cmp
mov
sti
jmp
lock
dec
in
das
stos
cmp
fidivl
xor
pop
imul
in
aaa
sbb
pop
shl
inc
adc
mov
fsubp
sbb
pop
int3
add
mov
mov
or
mov
mov
ljmp
cmp
les
shll
sub
inc
mov
mov
aaa
sbb
xchg
cmpsl
add
dec
jecxz
fisttpll
bound
jmp
test
mov
jae
mov
xchg
pop
lock
and
ret
leave
jno
and
push
xor
xchg
fmul
ljmp
fcom
shll
sbb
cwtl
aaa
shrb
imul
shl
mov
bswap
ja
popa
clc
das
and
aad
hlt
stos
jb
call
jns
pop
in
push
in
and
cmc
icebp
test
bswap
xor
jbe
or
leave
fwait
inc
cli
in
add
in
adcb
dec
sbb
adc
aam
aas
pop
leave
cmpsb
dec
imul
sub
outsl
jge
pop
fdivrs
scas
lret
mov
movsb
movl
loop
dec
sub
and
xchg
js
xlat
and
pop
push
test
jge,pt
push
fidivrl
or
inc
loop
xlat
sbb
mov
clc
subl
out
xlat
pop
pop
add
lods
lret
stc
les
stc
lret
push
mov
and
shlb
movsl
pop
sub
cwtl
pop
lea
icebp
jns
aas
lcall
inc
xor
je
test
adc
rclb
into
mov
enter
clc
mov
lea
push
retw
cmp
mull
cmc
xchg
dec
pop
adc
sbb
sub
pop
shlb
popa
movsl
bound
iret
scas
xchg
inc
jmp
mov
cwtl
pop
rclb
mov
mov
leave
jl
mov
lret
sti
dec
or
test
int3
push
and
addr16
inc
mov
pusha
mov
mov
movb
adc
loop
xor
popf
jnp
call
sbb
jbe
or
dec
shlb
daa
fwait
arpl
dec
sub
adc
call
inc
shlb
outsb
mov
mov
imulb
xor
repnz
rolb
jg
rclb
push
mov
push
mov
sub
sbb
ret
ss
adc
stos
rcrb
les
mov
sub
mov
mov
call
mov
jnp
jecxz
push
xchg
orl
ljmp
jl
cwtl
int
cmp
xor
pushf
mov
jmp
mov
fcoml
mov
test
popa
jo
lock
and
arpl
dec
jbe
inc
mov
imul
ds
pop
lret
test
cmp
mov
jbe
insb
movsb
mov
lds
pushf
pop
daa
rolb
adc
sbbb
daa
mov
cmp
cld
cmp
lods
lods
pop
ret
mov
dec
jns
xchg
pop
andb
jns
inc
dec
push
lea
sbb
fnsave
daa
mov
ret
xchg
nop
xor
lods
mov
shlb
pushf
xchg
lcall
inc
cmp
cmp
fiadds
negb
leave
nop
cmpb
inc
mov
mov
loopne
aad
push
jmp
push
cmc
pop
decb
cmpl
add
ds
mov
cmp
or
sti
sarb
out
pop
push
cmp
xor
out
int3
push
jnp
add
aad
mov
and
xlat
stc
insl
js
mov
outsb
xchg
iret
sbb
pop
roll
and
in
sti
std
enter
cmc
mov
fwait
out
shr
mov
mov
jp
dec
iret
aad
aad
repnz
sahf
arpl
movsb
mov
adc
scas
adcb
mov
jp
jle
imul
lods
sub
mov
adc
add
lods
or
ficoml
sarb
nop
jg
jp
or
in
popa
dec
hlt
cmp
add
or
shll
nop
cmp
xchg
into
movsb
test
dec
scas
mov
lcall
pop
stos
push
jno
int3
mov
xchg
pop
cmc
cli
dec
inc
push
xchg
pop
and
cmp
jnp
roll
or
adc
dec
jmp
push
ret
sub
pop
xor
repz
jae
cld
push
pop
sub
cmpsl
xor
leave
daa
xchg
mov
sbb
mov
dec
aam
cmp
test
xchg
xchg
push
fisttps
xor
push
sub
xchg
add
pop
and
cmp
sub
jp
push
lahf
push
jne
push
inc
fs
jno
pop
push
and
rcll
adc
xchg
sbb
xchg
jge
out
xchg
movb
pushf
cli
ss
mov
leave
push
jg
sub
out
adc
shl
addr16
pop
xchg
and
mov
xchg
aam
mov
jb
adc
or
adc
cmpb
push
int3
bound
stc
mov
mov
insb
lahf
cmpsl
add
push
push
loop
and
int
out
movsl
cli
in
pusha
jp
addr16
fs
xchg
adc
les
push
icebp
add
cs
inc
lret
outsb
dec
loopne
fcomip
dec
sbb
lods
jp
test
clc
cld
dec
in
sub
mov
jl
and
stos
inc
sub
pand
mov
daa
jmp
fisubs
lods
test
lea
or
mov
lret
cmpsb
out
aam
add
stc
push
cwtl
push
push
dec
sbb
je
out
pop
mov
or
shrb
cmp
mov
mov
mov
adc
in
std
and
mov
scas
push
jo
push
iret
fldenv
aad
fldenv
xor
dec
jns
imul
ljmp
and
fdiv
arpl
in
loope
aas
mov
pushf
xor
adc
xchg
xchg
mov
jo
aam
sub
xchg
out
add
test
mov
jbe
dec
lock
fnsave
es
xor
inc
icebp
inc
mov
lods
repnz
loopne
and
aas
xchg
mov
sbb
xchg
cmp
nop
xchg
xor
xchg
add
out
and
das
ds
ret
enter
movsb
xchg
out
xchg
pop
cld
mov
mov
jb
add
mov
shrb
or
popa
pop
dec
push
fistps
ja
inc
shll
push
mov
or
insb
pop
xchg
and
or
in
jnp
sbb
inc
fiadds
test
push
sub
notb
pop
and
lock
and
dec
fidivs
push
mov
add
sub
movsl
sbb
leave
imul
xchg
push
sbb
add
outsl
adc
aam
fistpl
inc
in
add
lahf
and
cmp
fisttps
sahf
bound
mov
enter
fldl
imul
das
mov
cltd
aam
fwait
jg,pt
push
fnstsw
xchg
ds
in
fs
mov
mov
add
test
adc
sbb
jmp
movsl
cwtl
mov
fbstp
push
push
push
enter
testl
or
rorl
mov
or
ds
mov
aam
adc
mov
in
scas
xor
mov
nop
shrb
xor
out
mov
push
jp
or
pop
mov
push
lds
lret
cmpsb
hlt
jmp
and
imul
leave
xlat
mov
xchg
and
cmp
mov
mov
iret
lds
fcmovbe
scas
pop
repnz
sub
and
pop
lret
or
push
xor
pop
dec
nop
mov
or
iret
mov
fmull
ljmp
mov
inc
icebp
xchg
mov
mov
test
jae
cmp
sub
dec
test
jp
stc
or
lods
lahf
inc
mov
call
jl
xchg
and
loope
push
insl
sbb
pushf
or
sbb
int
xor
sub
jl
jmp
dec
test
fwait
mov
mov
adc
mov
mov
and
jg
cmc
out
out
xor
testl
repz
pop
test
pop
xchg
cmc
mov
das
aad
popa
aad
jne
adcb
mov
or
clc
pop
loopne
ds
sub
into
cmp
fs
mov
in
pop
out
mov
outsb
mov
sti
movsb
push
lods
loopne
sbb
sbb
cmp
aaa
xchg
jae
adc
adc
pop
sub
xor
or
xchg
dec
pushf
dec
leave
and
pop
and
and
inc
addr16
or
fmull
fld
or
out
xchg
pop
inc
mov
mov
cmp
jo
dec
test
fisubrl
jmp
loope
adc
je
add
and
lcall
call
sub
pop
push
cmp
icebp
in
push
mov
jbe
cmpsl
lea
mov
daa
dec
mov
popa
out
dec
test
mov
jne
fcompl
cmp
xchg
push
stc
into
sbb
scas
push
in
push
loop
les
or
cmp
mov
test
push
xor
mov
sbb
push
popa
insb
pop
fcmovbe
int
les
cwtl
cmp
aad
popa
enter
mov
sub
aam
mov
cwtl
or
int3
xchg
out
cwtl
mov
jl
icebp
push
mov
fmuls
push
in
lds
movsl
cs
add
punpckhwd
loopne
add
push
push
iret
dec
lret
jbe
lea
sbb
lret
bound
push
xor
out
aam
ja
mov
mov
and
pop
xchg
jl
imul
mov
xchg
data16
scas
fnclex
add
mov
sub
cmpsb
out
sbb
insb
lcall
out
arpl
ss
xchg
lds
dec
mov
and
cmp
or
outsb
ret
fwait
mov
lods
fbld
ss
aaa
pop
movsl
dec
test
add
testl
repz
jl
cmpsl
cmc
push
incl
enter
ret
xor
popf
sub
or
repz
insb
bound
repnz
ret
fadd
xchg
pop
test
adc
sub
jge
jo
jmp
mov
fs
aad
jecxz
mov
bound
imul
sub
cmp
insl
sbb
cmc
cltd
int3
jle
adc
movzwl
lods
std
inc
pop
scas
loopne
push
mov
and
sti
cmc
cmpsb
mov
jg
and
sub
or
xchg
stos
scas
mov
jbe
sti
cli
or
mov
aad
mov
addb
out
add
aaa
push
xchg
cmp
dec
pop
leave
sub
mov
dec
jae
pop
dec
scas
adc
loopne
jns
adc
pop
sub
into
jmp
hlt
les
out
cmpsb
mov
sarb
filds
les
les
xchg
inc
adc
mov
pop
and
and
mov
mov
mov
out
jp
std
repz
fdivrl
aad
mov
push
sub
mov
std
addr16
push
xor
loope
pushf
aam
and
and
pop
xor
mov
cmp
daa
jae
inc
aas
mov
push
ret
test
clc
push
test
fsubr
repz
xchg
leave
jo
popa
inc
or
movsb
roll
inc
orl
push
pop
mov
addr16
mov
and
jp
fdivp
mov
aam
or
mov
pop
leave
rolb
or
dec
xchg
stc
and
into
in
cmp
enter
mov
add
sub
lea
xchg
int3
adc
pop
arpl
push
dec
mov
xor
pop
mov
xchg
loope
push
scas
popa
cmc
jp
cmp
push
test
sbb
ret
std
push
sub
xchg
mov
mov
pop
add
lds
in
fdivl
adc
roll
lds
mov
movsl
out
fistpl
xor
and
xlat
jnp
stc
ljmp
insl
push
mov
aam
test
dec
aaa
dec
pop
rcl
add
push
sub
inc
fiadds
dec
push
pop
lret
mov
pusha
rol
mov
push
mull
imul
pop
rcll
mulb
mov
mov
mov
pusha
aam
or
fwait
mov
ret
fwait
aad
jns
data16
and
sbb
movsl
xlat
scas
ret
repnz
shll
mov
jns
jns
lret
or
mov
sbb
inc
out
in
std
rcll
das
mov
fwait
lods
fwait
pop
xor
ror
dec
pop
loope
inc
jmp
lock
push
lods
adc
arpl
or
xlat
add
xor
xchg
sub
test
and
roll
push
jle
jge
jmp
inc
movsl
jge
mov
cmp
xchg
sub
pop
and
fs
jns
iret
mov
or
jl
int3
gs
enter
enter
es
hlt
xchg
insl
mov
or
xchg
adc
mov
mov
pop
into
xor
xchg
mov
pop
addr16
enter
jecxz
and
scas
shll
sub
adc
xor
jns
in
shrl
test
neg
jg
pop
jbe
jo
xchg
jp
test
dec
mov
xchg
daa
iret
adc
jecxz
mov
inc
mov
sbb
lock
loopnew
mov
je
pop
repnz
sahf
fcomip
jns
sbbl
mov
loop
fiadds
xor
bound
fbstp
mov
sbb
lcall
cmpsl
dec
sbb
pop
scas
and
sahf
xchg
mov
sahf
loop
pop
mov
cmpsb
les
adc
adc
jl
pushf
call
lods
sti
ret
outsb
push
pop
shrl
in
lock
fiadds
mul
push
jp
jnp
mov
push
xor
xchg
add
inc
sti
sub
adc
jno
jle
lods
cmp
es
mov
xor
or
daa
stos
call
mov
clc
rol
jg
sub
mov
jno
pop
in
xchg
jmp
inc
push
fisttpll
fstps
xor
inc
out
inc
popf
add
lahf
mov
test
pop
push
outsb
inc
cmpsl
das
xor
fisubrs
cmp
fcmovb
pop
fsubl
pop
jecxz
test
or
pop
mov
test
sti
jae
std
call
pop
xchg
lret
inc
outsb
mov
dec
xor
insb
push
cli
stc
push
stc
imul
fildl
dec
adc
es
pop
mov
punpckhbw
pop
das
dec
aas
mov
out
mov
clc
scas
enter
sub
outsl
or
punpckhbw
pop
das
dec
aas
mov
out
mov
clc
scas
enter
sub
outsl
or
pop
pop
das
dec
aas
mov
out
mov
clc
icebp
lahf
fsubrl
add
nop
outsl
and
vmread
pop
das
enter
push
jne
out
mov
daa
push
aaa
inc
int3
int3
int3
int3
int3
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
mov
push
push
call
mov
call
push
push
pushl
mov
pushl
pushl
call
mov
push
push
pushl
call
mov
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
call
push
mov
call
xor
leave
ret
push
pop
inc
dec
je
fs
dec
jbe
adc
or
cwtl
fisubl
hlt
cli
in
xchg
lcall
xor
dec
sbb
push
sbb
xor
and
aam
lret
in
aam
test
in
pop
mov
out
mov
or
cmp
mov
out
pushf
mov
out
loopne
clc
stos
cmp
je,pt
or
lret
out
cmp
leave
xchg
negl
rcrl
mov
or
imul
cmp
test
mov
addr16
jno
sbb
imul
mov
pop
push
stos
dec
add
dec
inc
cmpl
in
test
cwtl
stos
mov
mov
sbb
lret
shll
aad
fbstp
sbb
mov
movsb
mov
lods
stc
xchg
call
lds
lret
hlt
push
mov
iret
dec
mov
fnstenv
jmp
in
or
icebp
adc
jge
adc
sbb
jle
scas
cmpsl
stos
cvtps2pd
dec
je
fs
sbb
cmp
lret
aam
fcompl
movsb
in
cmp
cmp
sub
jne
dec
inc
pop
and
aam
xchg
mov
out
ljmp
sbb
add
jp
cmp
rcll
mov
xchg
cmpsb
hlt
lods
pushf
xchg
cmc
jmp
in
cmp
sub
adc
jbe
or
and
aam
lret
in
xchg
lcall
push
pop
inc
dec
je
fs
sbb
xor
and
aam
lret
in
xchg
lcall
push
pop
loop
mov
movsb
mov
int3
push
repz
mov
mov
fsub
xor
subb
imul
push
cwtl
dec
pop
mov
jb
stos
sbb
dec
add
adc
stos
mov
dec
sub
cld
mov
aam
inc
pop
xchg
shr
insl
sahf
push
fcmovnu
jge
fstps
push
repnz
test
sub
push
gs
aaa
jno
repz
mov
and
addb
jae
and
dec
fldenv
jo
pop
fadds
fucomi
repnz
iret
enter
jecxz
stc
pusha
in
lds
bound
mov
xor
ret
cli
fcmovb
dec
mov
add
sbb
mov
sub
and
rorb
or
call
popa
std
pop
or
push
xchg
test
jge
or
test
test
adc
scas
fucomp
int3
std
mov
add
mov
icebp
cmp
cli
insl
jns
loop
loopne
out
pop
push
mov
or
lret
dec
jns
fwait
and
xchg
xchg
out
pushl
xchg
xchg
add
ja
shrl
xchg
pop
pop
xchg
cmc
repz
punpckhwd
and
mov
lcall
mov
adc
sub
lahf
sbb
icebp
jmp
ljmp
sahf
das
lods
hlt
add
lahf
jns
inc
adcl
andl
jbe
mov
inc
pop
mov
or
jae
jns
jmp
pop
rcrl
lcall
xor
pcmpgtd
mov
sti
subb
inc
or
xchg
shrb
inc
cli
cli
dec
adc
xchg
mov
push
cmp
pop
mov
xor
xor
pop
pop
dec
jbe
ret
loopne
sub
xor
or
jbe
hlt
jmp
cld
push
scas
mov
sub
repnz
sub
cmp
jb
fdivs
sub
in
add
adc
dec
fsubrl
push
xor
ljmp
push
fsubl
xchg
int
mov
pop
xor
mov
adc
pop
inc
inc
jmp
inc
cmc
push
inc
imul
loopne
sub
xlat
jecxz
or
or
pop
fldenv
jmp
imul
cmc
sbbb
cld
add
adc
mov
arpl
dec
sbb
pushf
cld
arpl
push
js
adc
in
ja
je
jae
outsb
out
jbe
movsl
pop
gs
mov
shrb
xchg
push
adc
xor
or
mov
lds
loope
add
shrb
inc
out
cmp
sbb
imul
xchg
mov
dec
repz
push
leave
sahf
aam
and
dec
xor
xor
cmp
or
xor
mov
lret
insl
sti
leave
lcall
mov
rcll
stos
cmpsb
fstl
or
js
push
stos
xor
add
iret
lcall
push
lret
ja
jno
int
adc
call
jge
or
mov
pop
cmp
notl
add
call
mov
sub
sahf
mov
add
out
cmpsl
jp
inc
cmp
or
mov
adc
adc
and
jle
fwait
das
in
mov
sub
sbb
lods
gs
xor
cmpsl
out
mov
sub
push
xchg
mov
cmp
inc
push
fisttpll
or
or
and
sti
lret
xor
ja
arpl
inc
jb
jns
cli
stos
lods
jecxz
push
pop
jg
jg
inc
push
outsl
mov
fdivl
inc
or
adc
sarb
lret
sbb
data16
mov
and
outsb
movsl
stos
inc
inc
clc
jns
or
outsb
xchg
loope
mov
xchg
mov
mov
out
sub
scas
mov
in
adc
fidivrs
pop
test
xchg
es
fnstsw
jl
adc
imul
mov
out
into
xor
xchg
inc
sahf
fildl
mov
push
js
xor
push
dec
dec
dec
mov
rcrb
or
into
jbe
fildl
cwtl
lods
jle
insb
mov
imul
pop
int
das
test
fsubrl
jl
cwtl
lea
jnp
aad
and
call
jb
test
mov
lea
push
jmp
lret
mov
sarb
mov
jp
mov
in
xchg
jb
fdiv
fs
mov
pop
inc
push
adc
adc
icebp
sub
inc
pop
js
cmp
xor
bound
sbb
out
stc
inc
mov
in
dec
fnstenv
or
and
movsb
popa
lcall
push
pop
sbb
pushf
push
popf
and
cmp
ret
or
mov
pushf
pop
adc
xchg
lds
repz
xchg
dec
pop
call
out
pop
xchg
pop
hlt
mov
or
or
jg
pop
loopne
ljmp
pusha
pop
dec
xchg
cmpsl
inc
mov
insl
aad
sub
or
push
lret
popa
mov
loope
jno
add
insb
mov
mov
fcomps
icebp
inc
and
pop
mov
jno
repnz
jns
xlat
orw
or
roll
adc
icebp
fidivl
dec
fwait
in
sub
fstl
or
inc
int3
lods
cmp
loop
mov
add
cmp
lods
int3
leave
lea
clc
pop
cbtw
push
int3
and
push
push
push
mov
idivb
orb
mov
lcall
or
fcmovbe
pusha
cli
das
jp
cmp
clc
mov
out
push
adc
outsl
popa
add
test
inc
push
xor
pushf
leave
cmp
sub
testl
addr16
das
push
cwtl
jbe
stos
sub
in
orl
outsl
outsb
pop
pop
hlt
inc
and
fldt
cmpsb
repnz
pusha
jno
xor
repnz
pop
or
dec
rclb
mov
mov
outsl
in
sub
xchg
lcall
pop
and
or
jo
loopne
pop
call
call
inc
int3
mov
pop
outsl
iret
into
cmpsb
xchg
sub
adc
jbe
dec
lret
jo
ljmp
ja
pop
mov
outsb
inc
ret
xchg
jno
cli
cli
dec
add
mov
adc
and
daa
fs
mov
cmp
push
mov
add
xor
jbe
sub
jbe
mov
repz
dec
push
inc
dec
ret
mov
cltd
bound
loop
cmp
cwtl
inc
pusha
sbb
fs
ja
jnp
cmp
lods
mov
pop
popf
cmc
cmp
pop
jo
sub
int
push
call
push
loope
mov
jnp
mov
dec
shl
pop
mov
leave
test
cmp
dec
or
call
adc
es
out
mov
xor
mov
xchg
fidivs
sbb
ret
push
mov
rcrb
xor
iret
and
dec
and
rclb
mov
pushl
adc
idiv
pop
add
pop
imulb
insl
sub
imul
sahf
cs
scas
mov
dec
push
cli
sbb
andb
gs
pushf
jb
cmp
nop
dec
les
frstor
add
imul
mov
jb
push
fldcw
sbb
imul
mov
or
push
xlat
mov
mov
out
adc
mov
out
mov
or
push
sbb
cmp
pop
adc
and
and
mov
in
jecxz
ret
or
scas
dec
mov
dec
jb
xchg
in
das
push
jnp
data16
xchg
scas
adc
jae
or
out
cmp
xor
pop
cmp
ja
add
xor
jnp
mov
lret
insb
arpl
xchg
push
jmp
fsubr
adc
ret
cld
sbb
lock
fisubl
stc
test
mov
jnp
fwait
add
mov
cmp
andb
cmp
add
or
mov
shrb
lods
movsb
inc
inc
adc
and
in
mov
xchg
mov
adc
dec
push
mov
jecxz
sbb
adc
mov
pop
mov
aam
ss
imul
sti
ftst
inc
and
inc
mov
orl
pop
pop
aad
adc
and
push
and
scas
cld
jb
popl
aas
add
mov
call
sub
sbb
pop
sbb
lods
inc
cltd
repnz
or
mov
jg
das
pop
cs
jo
sahf
into
cmpb
in
cmpsb
dec
inc
xchg
and
dec
je
jp
hlt
in
mov
xor
in
je
mov
push
dec
dec
scas
shrb
mov
call
cmp
jno
and
test
in
sbb
push
in
xor
pop
mov
ja
or
test
fbstp
sub
test
ror
outsb
sbb
jl
xchg
aam
fwait
movsb
in
shr
pop
mov
pop
inc
std
sbbl
int3
xor
leave
pop
dec
adc
xchg
cmp
xchg
mov
adc
ss
dec
jp
cmp
and
adc
cmpsb
inc
subb
xchg
in
aad
gs
int3
mov
rcrb
sbb
push
js
cwtl
push
into
dec
or
shlb
test
or
ret
and
enter
ds
mov
mov
adc
insl
shl
loopne
cmp
jb
dec
push
mov
in
cmpl
mov
jmp
stos
push
mov
fldt
insl
push
test
jecxz
dec
or
cmp
xchg
dec
cmp
iret
xor
add
pop
insb
ds
addr16
hlt
scas
cmc
jns
fsubs
insb
mov
or
int
jo
cwtl
aas
mov
sub
shl
lret
pop
and
in
xchg
xchg
insl
dec
lret
ja
stos
mov
nop
jo
stos
jecxz
xor
aam
stc
jecxz
cmpsl
fwait
jae
int3
xchg
or
mov
dec
loope
fisttps
xchg
mov
scas
popf
jns
xchg
int
pop
mov
sub
insb
loopne
cmovge
or
add
imul
idivl
mov
out
push
add
push
push
jo
cmpl
lds
mov
repz
push
fld
fwait
addr16
lock
lds
jp
jns
push
push
jmp
imul
leave
lcall
fmul
test
jp
add
jge
xchg
or
dec
movsb
mov
push
rorl
mov
daa
ja
shl
xor
iret
xchg
sbb
xor
flds
lret
xor
bound
add
int3
repz
xor
jecxz
mov
xor
int3
mov
mov
loop
sub
lret
cmpsb
mov
das
cmp
sbb
adc
jnp
fbstp
sub
shr
cs
mov
out
pop
ficompl
jecxz
leave
faddl
out
aaa
je
jae
orl
inc
sub
jmp
loopne
test
xchg
cwtl
mov
lret
xchg
fiadds
fcomp
repz
std
sub
add
push
xchg
enter
dec
jmp
jnp
lock
mov
mov
popf
jbe
xorb
hlt
fwait
cmp
adc
jg
lea
or
addr16
jae
es
insb
sub
cmp
fiadds
dec
roll
and
inc
sub
adc
sub
inc
mov
dec
xchg
jle
aad
je
mov
xor
dec
cli
out
popf
dec
hlt
cmc
mov
sbb
pop
aaa
lahf
mul
fnstsw
js
loop
insl
dec
mov
pop
sub
andl
mov
lea
dec
insb
fstpt
dec
je
clc
adc
scas
cs
rorl
pop
dec
or
push
hlt
adc
lea
pusha
scas
ret
into
cmp
jae
mov
lods
aad
sbb
fcom
adc
add
or
mov
sub
jge
add
sub
insb
stos
mov
stc
out
test
imul
inc
push
lock
aam
das
xor
pop
mov
xchg
stos
push
stos
cmpsl
push
fcmovnu
dec
cmove
push
nop
sar
fmull
fidivrl
mov
mov
inc
or
icebp
scas
or
loopne
pop
xor
pusha
cmp
sbb
cmp
imul
out
lcall
in
jb
pop
fwait
mov
ljmp
test
test
push
mov
iret
ss
pop
pushf
inc
ret
push
xchg
jle
mov
repz
jp
xlat
iret
cld
shll
outsb
xor
call
push
lret
popa
and
sbb
pop
aam
popf
jbe
cmp
and
int3
dec
fdiv
enter
lods
xlat
shl
ja
pop
stc
cmp
jo,pt
adc
mov
ljmp
pop
adc
cmp
add
sbb
xor
test
cmp
add
adc
push
add
pop
les
or
cmp
imul
fs
sub
dec
ds
or
fbstp
lock
out
test
cmpsb
or
leave
arpl
mov
or
push
imul
xchg
xor
fisttpll
mov
lock
adc
mov
pusha
mov
je
scas
cltd
and
pop
pop
enter
imul
push
rcll
popa
adc
mov
inc
jno
ds
adc
add
andl
ss
sub
and
jmp
mov
sbb
cmpb
jl
outsb
jo
or
push
imul
lret
xchg
pop
cmc
jns
imul
inc
mov
xor
mov
dec
loop,pn
cmp
sahf
cmp
je
mov
xchg
out
aad
mov
pop
sub
or
lds
jns
fdivr
rcll
xor
lock
cmpsb
cld
dec
data16
sub
test
push
movsb
dec
clts
dec
sbb
frstor
jo
mov
filds
xor
dec
insl
xchg
unpckhps
mov
xlat
bound
mov
mov
imul
loope
push
aam
fwait
push
stos
adc
adc
cwtl
add
in
adc
stc
mov
jb
sub
add
cmp
or
mov
orl
xchg
inc
stc
js
data16
push
cmp
push
mov
lcall
and
lcall
ds
sti
imul
pop
jns
sbb
sbb
fstl
in
icebp
pop
xchg
mov
sbb
push
pop
stos
xchg
xchg
popf
ss
add
movsb
xlat
cli
xor
shr
jbe
hlt
mov
push
arpl
dec
loop
push
xchg
ret
loopne
cmp
lock
and
stc
push
cmpsl
arpl
push
and
je
ds
or
cmp
jp
cmp
pop
cmpsl
scas
pop
xchg
lock
test
mov
inc
imul
arpl
pop
adc
and
divl
push
add
lds
add
bound
movsb
mov
es
test
mov
cmp
mov
dec
dec
ja
adc
mov
and
xchg
push
adc
xor
out
addb
xchg
es
xchg
jecxz
dec
or
or
adcl
inc
gs
mulps
xchg
out
jle
arpl
push
sub
and
mov
xchg
sub
les
test
js
test
fldenv
add
push
lock
mov
jg
mov
pusha
lods
xchg
loopne
push
pushf
nop
test
add
jnp
cs
shr
lret
cmp
les
cltd
incl
sarl
mov
pop
test
pushf
sbb
das
lea
fdivl
popa
cmc
aas
out
shll
fsubrl
in
cmpsb
xchg
into
xchg
gs
xchg
pop
inc
add
popf
push
movsl
out
pop
ror
mov
mov
rol
inc
cmp
cld
scas
xor
cmpsb
insl
push
xchg
and
dec
aas
repnz
adc
jl
loope
lahf
loopne
xchg
push
inc
cmpsb
or
adc
popf
ljmp
mov
imul
faddl
fistpl
push
xor
repnz
ljmp
jle
pop
mov
cmpsl
clc
stc
aaa
xchg
outsl
in
std
jl
fidivrl
pushf
fs
xchg
cmp
lods
jle
outsb
sahf
testb
ror
aad
mov
pop
xchg
cmpsb
push
mov
repz
rorl
mov
sahf
sbb
push
mov
pop
lea
rol
out
jecxz
ljmp
lret
mov
cs
jno
xlat
ror
dec
or
mov
scas
js
cmp
inc
inc
push
gs
movsl
mov
and
fidivl
loope
xchg
lea
adc
add
dec
fnstcw
scas
and
push
jl
xor
and
jbe
jnp
lds
jne
scas
test
jae
xchg
aam
test
enter
pop
into
test
stos
insb
push
sub
mov
mov
out
mov
sbb
mov
fadds
das
sbb
sbb
imulb
and
mov
outsb
mov
jae
movsb
cmpsb
xor
sbb
es
loop
sub
rclb
adc
aaa
insl
sti
lret
rclb
out
inc
inc
out
xor
and
cmp
pop
incl
cld
fmulp
sbb
inc
imul
pop
test
mov
repnz
jge
lock
mov
andb
xchg
pusha
sub
inc
pop
fstl
dec
imul
popa
push
stc
andl
js
aas
in
dec
mov
xchg
in
in
cmpsl
clc
or
out
push
push
fcompl
jbe
lea
add
rclb
lock
pushl
inc
icebp
inc
cmpsb
cltd
out
loopne
divl
and
push
rcr
adc
push
push
xlat
or
mov
cltd
xchg
lahf
adc
push
daa
sbb
xchg
or
cmpsl
jo
mov
or
sub
dec
into
xor
nop
and
mov
jmp
insl
mov
inc
movsb
xor
push
les
mov
jge
fists
pop
ficoms
mov
push
testb
sbb
mov
jbe
scas
mov
out
shl
out
push
adc
sub
sbb
jb
cli
pop
imul
lods
dec
insl
jp
enter
xor
int3
and
les
push
inc
mov
ja
cs
inc
cmpsl
lret
add
in
data16
sbb
jge
mov
mov
aas
fisttps
int3
stos
push
sub
mov
ljmp
pop
arpl
pop
test
repz
sahf
adc
addb
jg
rcrb
sub
mov
repz
and
sub
hlt
fwait
adc
pop
dec
jns
push
push
call
jb
cmp
mov
loopne
jmp
mov
inc
pop
mov
mov
pop
shl
pusha
rolb
test
adc
xchg
xchg
mov
ljmp
mov
and
pop
lea
mov
loop
rcl
jns
jnp
ret
add
setp
jg
imul
cmpsb
mov
sarl
js
clc
pop
cmp
sbb
adc
fmull
pop
pop
scas
jle
jb
dec
pop
mov
jae
jo
rorb
pop
rorl
es
lret
xchg
std
sub
in
std
xchg
aas
push
andl
push
insl
xchg
jns
fstps
ficompl
test
ret
xor
inc
inc
cmp
leave
movsb
cli
mov
dec
sbb
add
pop
lods
clc
jns
pop
jo
jae
sub
xor
cmp
sbb
andb
lds
adc
add
outsb
dec
nop
jnp
adc
adc
or
movswl
div
incb
jg
mov
ret
into
and
sub
xor
add
fs
test
test
mov
scas
and
mov
mov
lahf
sub
gs
cmp
jo
filds
test
push
jl
adc
pop
jo
int
and
and
fdivl
int
test
dec
test
inc
mov
add
lret
fcompp
inc
adc
loopne
xor
inc
dec
movsb
hlt
mov
pop
sti
movd
mov
addr16
xor
add
jae
or
out
cmp
mov
inc
lcall
sub
xor
inc
inc
xchg
shr
xor
jmp
rcrb
cld
bound
test
addr16
mov
mov
outsl
into
fistpl
jne
add
lods
xorb
scas
xchg
icebp
cmc
test
arpl
pop
add
adc
in
jb
sub
xlat
test
xchg
insl
and
into
mov
cltd
scas
hlt
adc
jge
ds
pop
sub
in
enter
cmp
jnp
enter
enter
lcall
add
enter
dec
fstl
popa
sbb
mov
cmp
imul
lods
subl
xor
popf
cmc
xchg
push
mov
es
in
in
lock
aaa
shlb
mov
out
loopne
ja
fidivrs
ds
cli
mov
leave
ficoml
sub
pop
mov
enter
jecxz
mov
dec
idivb
aad
adc
mov
shlb
push
sub
cltd
mov
or
mov
push
fldt
insb
xchg
stc
add
es
outsb
ret
dec
xor
test
js
stos
sbb
in
push
divl
mov
icebp
mov
add
bound
es
mov
outsl
mov
jns
bnd
mov
cmc
adc
mov
lds
jmp
xchg
mov
push
mov
mov
sbb
rorb
add
pop
mov
dec
arpl
and
xchg
jp
push
jne
insl
movsl
sahf
push
in
xchg
inc
in
int
fstpl
aad
dec
test
fmuls
stos
xor
mov
xor
daa
es
lret
pop
mov
imul
test
stos
push
into
cmp
icebp
xor
jmp
clc
sarb
arpl
outsb
ss
invd
jmp
xchg
shl
mov
mov
pop
mov
jnp
in
jl
and
mov
pop
pusha
scas
inc
mov
mov
push
movsb
sbb
add
cltd
outsl
call
jmp
repnz
sbb
bound
pop
and
data16
inc
gs
test
icebp
ror
ret
dec
pop
sti
outsb
outsl
out
cmp
ljmp
jnp
push
sbb
xor
and
aam
lret
in
xchg
lcall
push
pop
inc
dec
je
fs
sbb
xor
and
aam
lret
in
xchg
lcall
push
pop
je
adc
imul
sub
fcmovb
lret
add
in
xchg
fwait
xchg
mov
sbb
jp
outsb
adc
adc
xor
movsb
aad
and
in
jecxz
or
dec
inc
pop
push
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
jnp
imul
or
xor
and
jmp
fisttpl
stos
cli
fisttpl
cmp
dec
sbb
imul
sbb
ds
stos
jmp
scas
mov
fwait
mov
lret
mov
jnp
imul
or
cmp
jnp
dec
or
stos
jmp
test
in
shrl
in
xor
dec
sub
jle
shrl
xchg
nop
dec
lock
cmp
xor
rcrb
mov
xor
pop
lock
sub
jnp
notb
ret
std
rorl
je
mov
mov
cmpl
sti
xchg
fld
fsubl
cmp
sti
stos
cmpl
incb
pop
cmpsb
push
sub
push
jnp
inc
arpl
push
dec
in
push
inc
sti
ret
sbb
jmp
les
hlt
jae
and
xchg
sbb
or
push
pop
scas
lret
je
fwait
ss
sahf
cmp
stos
adc
and
lock
adc
stos
cmpl
fwait
lret
jecxz
and
or
cmp
jnp
dec
or
stos
jmp
fisttpl
stos
sti
fwait
lret
mov
ds
cs
push
sub
movd
dec
das
mov
fsubs
mov
js
sbb
inc
js,pn
sub
sbb
jne
into
jmp
leave
fimuls
mov
xor
arpl
pop
sub
dec
or
stos
jmp
fisttpl
stos
sti
fwait
lret
mov
jnp
imul
or
cmp
jnp
dec
or
stos
jmp
fisttpl
stos
sti
fwait
lret
mov
jnp
into
adc
outsl
fsub
sahf
mov
and
sub
jbe
or
fs
pop
fisubs
and
add
jge
repz
fisubrl
xchg
sub
lods
sbb
pop
xor
mov
xchg
gs
jo
adc
in
add
sbb
mov
lods
cli
test
pop
test
fsts
pop
or
or
inc
dec
inc
mov
add
pop
popa
pop
sbbb
cmp
mov
sub
test
or
fidivrs
sbb
sub
cmpsl
aam
xor
inc
pop
push
repz
out
std
adc
xchg
adc
cs
cld
iret
cmpsl
addl
pop
cmp
jmp
adc
add
cs
cmpsl
sub
clc
adc
mov
mov
pop
dec
outsb
lds
lahf
add
lods
cmpsl
jbe
lock
cmp
xchg
loope
leave
push
movzbl
rclb
hlt
jg
inc
rcrb
mov
aas
dec
scas
cmp
cmp
addr16
punpcklbw
cs
leave
gs
lahf
push
mov
inc
iret
js
lock
add
out
lcall
cli
cmpsb
xor
cmpl
in
sub
mov
inc
sub
call
lcall
cmp
and
int3
fs
scas
jp
sahf
nop
mov
outsl
fists
pushf
sbb
andb
aas
lret
sti
dec
mov
xor
add
pop
lods
sarb
or
out
mov
mov
jge
ja
loop
sarl
or
in
inc
call
mov
pop
in
mov
mov
push
dec
push
pop
bound
jbe
sub
in
inc
push
add
addr16
pop
popf
or
mov
ficoml
cmovl
mov
add
cmp
cs
push
dec
outsl
mov
mov
and
sub
push
stos
sbb
iret
leave
frstor
cmp
push
mov
push
xlat
and
mov
jno
push
sbb
xor
jno
inc
dec
push
cmpl
sbb
iret
in
ds
in
lret
cmp
sub
xchg
pop
into
jl
jbe
mov
pop
nop
push
push
popf
jecxz
mov
mov
mov
pop
mov
mov
sti
icebp
push
sti
fidivs
movsb
cwtl
xlat
hlt
test
gs
mov
mov
or
lahf
cmpsl
popa
and
cli
lret
in
adc
mov
dec
add
fnsave
xchg
rcl
sahf
icebp
rclb
jb
push
add
mov
cltd
js
test
push
xor
xchg
ret
pushl
xor
pushf
aad
ljmp
add
movsl
daa
sbb
imull
mov
inc
orb
xchg
int3
inc
cmpsl
sbbl
cmc
in
sbb
lret
lds
daa
or
iret
lsl
cli
cmp
sbb
mov
xor
rorb
pop
hlt
adc
inc
sub
mov
and
loopne
pop
aas
in
xchg
cld
pop
addr16
xchg
adc
insb
adc
loop
lret
ret
adc
inc
adc
jno
lock
mov
cwtl
sbb
negl
arpl
mov
adc
sub
or
pop
arpl
div
loope
jl
test
std
dec
stc
jne
push
incb
cltd
jp
xrelease
in
lret
insl
test
pop
test
in
pop
push
push
cld
mov
sahf
push
inc
nop
scas
insb
mov
nop
jl
cs
jmp
icebp
int3
and
cmp
addr16
push
loope
mov
es
sub
or
push
out
and
jbe
jns
mov
scas
and
sbb
sub
test
lea
adc
sbb
push
in
stos
or
sbb
pusha
mov
popa
arpl
sahf
mulb
fcomip
fcompl
nop
lahf
loopne
adc
hlt
xlat
sbb
sbb
push
into
jle
push
mov
cmp
lret
jae
adc
or
and
push
int
mov
js
ret
loopne
popa
add
aad
incb
push
push
jne
rclb
dec
ss
paddsb
sarl
pop
mov
cmp
sarb
nop
pop
and
cmp
inc
sbbb
push
and
jl
bound
adc
jecxz
mov
dec
push
cmpsb
cmp
xlat
leave
xlat
stos
add
dec
sbb
repnz
pop
add
mov
sbbl
adc
movsl
out
cwtl
gs
repnz
nop
lret
addr16
mov
xchg
insl
arpl
adc
sahf
lods
pop
jae
sub
lods
fistpll
cmp
faddl
dec
xor
push
int3
in
push
stos
push
jl
adc
fldl
shll
loope
xlat
cwtl
push
sub
lea
pushf
test
fcmove
hlt
ja
inc
sti
clc
sub
sub
push
pop
pop
lcall
cmp
add
rcrl
jo
dec
mov
pop
jnp
fistpll
push
in
xor
sub
aam
lcall
xchg
out
adc
dec
cmp
or
cmpsb
ret
mov
repz
rcr
shll
pop
sarl
test
pushf
add
push
mov
ds
xchg
test
add
bnd
or
push
xlat
inc
pop
jecxz
pop
outsb
xchg
hlt
fldt
bound
xor
cmc
xor
sbb
jp
and
mov
rclb
in
stos
mov
push
daa
frndint
sub
cwtl
sbbb
ss
daa
cmp
out
aaa
mov
xlat
es
inc
fadds
jg
cmp
or
in
mov
sti
or
fcmovbe
fldl2t
adc
dec
push
push
mov
mov
lret
sbb
xlat
xchg
mov
lret
xchg
stos
and
mov
lahf
imul
mov
das
add
nop
lods
mov
and
xchg
arpl
movsl
sub
mov
in
sahf
mov
iret
popa
aam
add
jge
dec
pop
test
push
mov
outsl
jne
sub
lea
out
mov
jmp
add
mov
jmp
pop
inc
mov
orb
into
pop
inc
scas
pop
jae
ja
push
pop
ret
int
lock
push
fsts
mov
and
lahf
mov
movb
out
mov
std
sbb
dec
inc
std
pop
aas
cltd
jl
mov
test
jg
dec
push
fs
cld
jmp
lcall
mov
icebp
stc
or
leave
arpl
or
mov
sbb
mov
shl
cmc
shll
imul
xchg
in
sbb
pop
sub
enter
xor
mov
lret
call
xor
push
loop
jae
shrl
or
jl
scas
sti
outsl
fstpl
jno
sub
adc
shlb
add
inc
shlb
or
sub
push
popa
sarl
insb
in
mov
jno
in
clc
mov
nop
mov
arpl
das
iret
test
jnp
outsb
add
movsb
enter
mov
mov
mulb
aam
cmpsl
loopne
or
pop
xchg
fs
sub
mov
pushf
or
jno
mov
jge
pop
mov
fistpl
fstpt
mov
in
gs
and
adc
rcrb
cmp
xor
mov
imul
mov
jecxz
push
mov
fdivs
add
pushf
jg
adc
ja
ret
and
ret
cmp
mov
int
xchg
in
sub
xchg
jo
xor
adc
data16
pushf
imul
aad
add
aaa
or
push
xor
inc
adc
add
fldt
mov
sub
jle
cltd
dec
in
fdivrs
sub
es
dec
lcall
mov
push
lret
bnd
adc
mov
in
lock
cli
mov
daa
jo
aas
pushf
jge
lods
cmpsl
incb
sub
fldt
inc
push
and
push
pop
push
adc
repz
push
es
adc
testb
in
push
mov
jmp
jnp
das
push
jb
lret
xchg
inc
lahf
inc
xchg
ret
flds
mov
mov
jo
cmp
mov
dec
in
mov
imul
shrb
xchg
jo
sub
inc
sahf
int
ja
in
arpl
scas
pop
aam
and
pop
jmp
test
testb
sahf
sbbl
and
fs
inc
jle
push
xchg
lock
cmc
or
and
cmp
xchg
mov
frstor
std
or
mov
xor
std
cs
cmp
clc
mov
in
lods
or
mov
mov
pop
loopne
adc
cld
jecxz
push
jb
leave
xchg
jg
inc
das
cmp
xlat
cmp
pop
in
sub
stos
pop
mov
dec
insb
out
lds
cs
out
mov
out
sti
cmp
popa
push
sbb
sub
mov
ds
outsl
out
iret
popf
pop
add
mov
sti
pop
jns
shll
or
notl
repnz
mov
jo
inc
fsubrs
movsb
sub
push
in
sbb
jae
inc
clc
outsl
xchg
in
js
inc
push
mov
outsb
js
in
pop
cltd
pop
out
inc
icebp
pop
scas
outsl
adc
push
jge
mov
lods
adc
test
jbe
mov
mov
lret
pop
or
xchg
jns
mov
pop
xchg
test
lods
inc
push
sub
popa
jae
sub
inc
movsl
cmpsl
push
adc
je
pop
and
lds
insb
add
xor
jae
adc
arpl
and
mov
jo
fwait
out
mov
mov
lods
pop
jb
sti
popa
sub
mov
jo
pop
das
clc
sub
jl
fsubl
add
inc
sub
int
jbe
js
dec
jnp
pop
and
inc
or
mov
ret
out
mov
add
and
fldl
jb
sbb
sbb
out
xlat
lds
cmc
inc
lds
push
sbb
fs
mov
push
sub
mov
dec
or
out
aam
ja
mul
xchg
ja
pushf
pop
jnp
mov
push
mov
dec
xor
mov
cmpsl
mov
adc
cwtl
int3
sub
testb
and
fldcw
jmp
adc
dec
sbb
xor
cli
mov
pop
jno
jae
daa
jg
insl
icebp
jecxz
data16
mov
insw
pop
mov
ret
add
mov
cmc
repz
mov
or
add
mov
in
ja
cmp
pop
int3
testl
int3
pop
pop
das
in
add
mov
push
test
xor
jno
jle
sbb
push
pop
pop
addb
aaa
cmpsl
adc
inc
dec
push
mov
push
sbb
push
mov
inc
mov
mov
lds
jecxz
ss
add
sbb
lods
mov
fistpll
jle
fists
aaa
rcr
xchg
mov
or
incb
sub
ja
mov
outsl
cmp
fyl2xp1
or
andb
xchg
jg
xchg
and
in
sub
aad
or
cmp
sbb
rcr
mov
push
adc
roll
daa
js
cltd
cltd
mov
movl
jb
mov
iret
xor
xor
xor
aad
outsb
insb
inc
lcall
ficompl
or
or
jo
int
xor
add
lret
add
push
mov
daa
rorb
ljmp
mov
adc
int3
movsl
inc
mov
inc
inc
or
and
inc
cld
xor
cli
push
sbb
aaa
cmpb
or
add
add
test
and
cld
leave
je
jle
sub
test
out
add
lcall
xor
xchg
pop
push
cmp
in
aas
mov
cld
cmp
add
shll
lret
ficomps
mov
sbb
cli
rcll
or
xchg
xchg
ja
mov
mov
lret
xor
xchg
push
iret
rcrl
lock
adc
xchg
stc
jecxz
ja
movsl
js
cmpsl
inc
dec
jbe
cmp
stos
loop
mov
jge
pop
aad
rolb
lcall
shr
mov
cwtl
ret
and
int
mov
js
jbe
mov
aas
pop
or
daa
repz
ret
mov
outsl
dec
cmp
out
bnd
ja
xor
mov
xchg
scas
fidivs
jecxz
cmp
movsb
sbb
xor
popa
fisubl
pop
pop
mov
dec
sbb
xchg
outsl
inc
test
out
pop
pushf
fidivs
adc
push
sbb
dec
mov
mov
cmpsb
bound
or
sbbb
mov
mov
lea
cmp
and
adc
movsb
xchg
and
mov
push
sub
pop
in
lods
aam
xchg
sbb
movsl
mov
inc
cmp
cmc
sbb
push
loope
xchg
inc
sub
dec
push
sub
loop
mov
cmp
pop
into
mov
or
sbb
aad
imul
aam
mov
or
jge
jae
pop
mov
je
add
mov
scas
jb
jns
or
out
pop
insb
mov
and
fsubrp
sub
mov
arpl
shll
ss
push
sub
sub
fsubl
shrl
pushf
cmp
sub
fst
clc
push
out
scas
cld
and
dec
dec
aas
int3
and
sbb
cld
push
sbb
pop
ss
inc
xlat
xchg
push
pshufw
aaa
pop
mov
cwtl
test
sbb
mov
popl
popa
orb
jp
sub
in
jnp
sbb
and
sub
jle
adc
cmc
push
dec
mov
repz
dec
pop
out
mov
stos
sub
xor
push
loopne
or
ss
push
add
push
loope
aas
cmpsb
popf
sub
cmp
mov
adc
mov
js
lfs
test
lcall
bound
sarl
add
xchg
loop
pop
es
pop
test
and
ffree
inc
or
and
lahf
aaa
fs
out
or
lods
jnp
pushf
sub
leave
mov
jle
sahf
add
les
loope
dec
inc
aad
jp
mov
mov
xor
xchg
test
jbe
shlb
sbb
cwtl
adc
add
jns
add
cltd
fsts
dec
dec
push
ret
and
adc
into
rol
mull
xchg
cmp
aas
sarb
popa
mov
icebp
cmp
jg
and
sub
add
push
inc
pushw
icebp
adc
int3
cmp
je
jp
shll
cs
bound
out
xchg
xor
cmpsb
gs
or
ljmp
and
dec
push
or
cmpsb
icebp
addr16
ret
out
push
push
dec
arpl
and
test
cmp
je
std
xor
pop
shrl
lret
and
add
add
leave
xchg
xor
fucomip
dec
xor
pusha
clc
add
jne
pop
mov
out
leave
push
mov
mov
pop
sub
std
cmp
pop
mov
push
fistpl
push
and
pop
shlb
jbe
sti
sub
das
xor
jne
lods
pusha
repz
rclb
pop
mov
or
psubb
add
bnd
push
push
dec
or
pop
outsb
addr16
sbb
fdivr
ljmp
push
mov
adc
inc
les
cmpsb
cmp
sub
out
xor
sbb
mov
in
fwait
cmpsb
mov
loop
mull
or
testb
mov
xor
adc
rorb
fsubl
scas
add
gs
cltd
dec
or
test
cmp
pop
nop
daa
outsb
sbb
xchg
inc
adc
mov
push
mov
xor
push
insb
jb
sbb
and
adc
lods
mov
dec
arpl
push
scas
adc
adc
push
outsb
push
shrb
pop
in
or
push
push
fisttps
insb
cwtl
and
xor
mov
loope
fisttps
out
mov
es
dec
ljmp
push
mov
cmp
cmp
fs
inc
dec
push
jle
decb
movsb
sbb
sbb
jo
or
addr16
sbb
enter
add
xor
repnz
pusha
adc
mov
add
sahf
outsb
push
jmp
rolb
mov
ret
jnp
mov
out
and
mov
sahf
jae
cmp
jle
cld
mov
add
pop
sub
hlt
dec
imul
setne
stos
xchg
call
sub
cmp
or
jno
xor
lea
sub
pushf
mov
std
insb
lret
mov
xchg
shll
mov
pop
jbe
jge
fnstenv
dec
scas
sti
push
mov
push
sub
ljmp
or
pop
jo
sbb
lea
pop
shlb
pop
clc
js
jle
pop
mov
cs
push
mov
xor
push
or
mov
add
push
jmp
cmpl
pop
pop
test
out
add
jmp
mov
push
xchg
repnz
xor
fimuls
push
mov
xchg
into
mov
mov
sbb
pop
inc
insl
adc
cld
scas
cmp
daa
rorl
and
rcrb
pop
dec
es
les
popa
push
rclb
lds
adc
je
lods
inc
pop
dec
mov
mov
mov
dec
push
fstps
jge
call
lahf
sahf
and
mov
push
add
cld
div
inc
sbb
rclb
in
push
gs
aas
aam
mov
into
ret
lea
cmp
insb
daa
add
pop
cmp
popa
test
ds
fwait
popf
inc
dec
pop
fsubs
push
adc
push
mov
rcrb
push
jbe
icebp
mov
lods
pop
sbb
and
loope
ds
das
pop
cmp
imul
scas
inc
xor
popf
fsubrl
push
xor
mov
orl
adc
lods
or
cmc
xor
and
mov
mov
shll
and
dec
aaa
gs
and
sbb
imul
adc
jmp
es
shll
sub
mov
sub
inc
movsb
add
add
es
cs
daa
mov
frstor
lds
push
push
sub
sahf
pop
insl
inc
js
push
or
adc
cltd
push
test
js
mov
dec
cmp
mov
test
mov
mov
es
adc
push
dec
push
xchg
inc
mov
cli
dec
cmp
mov
mov
mov
arpl
dec
xchg
fistpll
lods
loop
inc
rcrl
mov
xchg
push
clc
mov
sbb
clc
nop
mov
sub
bswap
cmp
loope
or
pop
lret
out
stos
aad
out
js
dec
xchg
push
gs
sub
jp
stos
dec
xchg
xchg
addb
pop
and
pop
push
loope
pop
jp
scas
mov
push
int3
pop
cmp
repz
aas
nop
inc
mov
popa
or
stos
and
mov
jmp
outsl
pop
cmpsl
aad
add
call
sbb
add
addr16
stos
insl
lret
sub
mov
testl
sub
xor
cmp
test
sub
mov
xchg
pop
dec
pop
fmul
sbb
popl
lret
xor
gs
xchg
mov
loopne
loopne
dec
fsubrs
or
cs
ret
mov
xor
and
jne
nop
push
sub
push
sarb
je
add
xor
lods
dec
xor
pop
lret
jp
shrb
cmp
fiadds
imul
lret
dec
cwtl
div
je
gs
mov
xchg
movsb
and
int
jbe
mov
pusha
jae
cmp
insb
clc
xchg
mov
or
loope
adcb
sbb
lret
sub
xchg
inc
pop
jg
inc
mov
mov
or
inc
adc
xchg
hlt
int
jmp
lahf
or
das
lea
adc
pop
loope
in
xchg
mov
pop
dec
cmp
ret
daa
xchg
in
dec
dec
lret
popf
cmp
repz
pop
dec
outsb
adc
mov
inc
pop
test
mov
test
cmp
in
ret
pop
mov
inc
inc
cmp
scas
in
outsl
in
sahf
inc
cmpsl
std
adc
loop
jne
sbb
test
inc
out
mov
sub
jl
cmc
test
nop
xchg
out
fnstenv
fcomi
or
inc
repnz
sub
enter
ljmp
xor
shl
xchg
dec
sub
add
push
xchg
imul
add
and
mov
xchg
movsl
xchg
loopne
sbb
xchg
ficomps
inc
sarb
mov
mov
dec
shrl
push
ficoms
dec
loopne
xchg
sbb
mov
dec
test
enter
outsb
add
das
inc
xor
or
cli
mov
pop
fildll
add
fmull
lods
add
sbb
dec
pop
sub
mov
inc
mov
cli
stc
push
sbb
or
pop
cld
jo
sbb
int3
dec
pop
sbb
sub
push
push
xor
pop
imul
pop
scas
pop
push
pop
jo
mov
gs
mov
lock
shlb
dec
mov
loop
inc
stos
arpl
sub
mov
cmpl
cmp
js
mov
jg
jnp
repz
out
in
andl
jl
jbe
shll
push
inc
add
push
scas
fstpl
sub
inc
cmc
or
push
shll
leave
mov
mov
pop
pusha
mov
cld
xchg
leave
dec
jno
cmp
lret
mov
aad
push
or
jns
dec
clc
fidivl
jae
sub
aaa
sub
rcrb
test
icebp
xchg
int
outsl
mov
push
icebp
sti
insl
push
hlt
cmp
fdiv
pop
in
iret
mov
shl
cld
aad
cmc
xor
cltd
gs
xor
dec
shrl
mov
sar
shlb
add
clc
scas
sub
lahf
mov
outsb
and
je
fildll
imul
les
sbb
pop
push
int3
pusha
jmp
insl
mov
ds
mov
inc
enter
push
test
fdiv
dec
loopne
mov
call
add
mov
les
cld
mov
arpl
imulb
mov
pop
loopne
add
fdivr
outsl
jl
sti
addr16
or
and
aas
jmp
inc
xchg
pop
int
push
add
mov
out
je
andb
orl
xor
in
xor
mov
mov
cmp
mull
mov
and
aas
pushf
dec
out
not
loopne
mov
idivb
mov
add
dec
mov
mov
mov
sbb
outsb
sbb
cmp
or
cmp
jnp
dec
or
stos
jmp
fisttpl
stos
sti
fwait
lret
mov
jnp
imul
or
cmp
jnp
dec
or
stos
jmp
fisttpl
stos
sti
fwait
lret
mov
jnp
imul
or
cmp
jnp
dec
or
stos
jmp
fisttpl
stos
sti
fwait
lret
mov
jnp
imul
or
cmp
jnp
dec
or
jno
lret
in
int3
arpl
add
xor
and
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
rolb
add
add
add
add
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
lahf
add
add
test
add
je
add
insb
add
add
pop
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
add
loopne
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pop
push
add
js
add
mov
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
hlt
push
add
cld
push
add
add
add
or
add
adc
add
sbb
add
and
add
aaa
pop
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
pop
add
pop
pop
add
push
pop
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
add
fmull
add
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jg
add
insb
or
add
add
add
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
or
add
or
add
or
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cmp
add
pop
or
add
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
aam
add
fmull
add
in
add
in
or
add
or
add
or
add
add
pop
or
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
add
cmp
add
dec
or
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
