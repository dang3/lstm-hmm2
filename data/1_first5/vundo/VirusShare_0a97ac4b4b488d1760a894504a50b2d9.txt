sub
sub
or
mov
test
nop
nop
nop
nop
lea
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
nop
jmp
popa
ljmp
notb
inc
xchg
call
push
pop
jmp
nop
nop
nop
push
xchg
or
mov
sub
addr16
mov
addr16
jmp
add
xchg
add
or
mov
shr
mov
xor
add
sub
shr
xor
mov
push
mov
push
mov
jmp
mov
xchg
jmp
jne
sub
xor
xor
add
shr
mov
movzbl
nop
nop
nop
nop
inc
addr16
mov
mov
mov
mov
jmp
lea
nop
nop
nop
nop
call
xchg
test
nop
nop
nop
nop
jne
sub
add
sub
inc
or
mov
sub
sub
or
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
mov
mov
xor
xor
pop
mov
mov
pop
and
and
xor
mov
pop
sub
sub
xor
pop
call
push
pop
cmpb
xchg
je
cmpb
xchg
jmp
push
xchg
mov
xchg
mov
xchg
lea
nop
nop
nop
nop
nop
nop
nop
call
addr16
test
nop
nop
nop
nop
nop
nop
je
jmp
nop
nop
nop
nop
push
xchg
mov
or
dec
inc
mov
sub
xchg
jmp
push
xchg
pushl
xchg
call
xchg
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
jmp
je
jmp
nop
nop
nop
nop
push
addr16
add
sub
add
sub
mov
mov
sub
mov
or
mov
shl
inc
mov
mov
xchg
andl
addr16
push
mov
jmp
sub
add
mov
test
nop
nop
nop
nop
nop
nop
nop
nop
jne
xor
addr16
jmp
push
push
pop
call
mov
movl
xchg
jmp
nop
nop
nop
nop
pushl
nop
nop
nop
nop
nop
nop
nop
and
ror
xor
shr
pop
mov
cld
mov
mov
jmp
nop
pushl
nop
nop
nop
nop
nop
nop
nop
nop
mov
inc
rol
sub
pop
mov
nop
mov
mov
mov
mov
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pushl
nop
nop
nop
nop
nop
mov
dec
or
or
pop
mov
mov
mov
xchg
mov
xchg
jmp
nop
nop
nop
nop
nop
nop
nop
push
mov
cmpl
addr16
push
nop
nop
nop
nop
nop
nop
jne
pushl
nop
nop
nop
nop
nop
add
or
and
pop
mov
push
pop
mov
mov
jmp
idiv
sub
nop
shr
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
xchg
or
mov
push
nop
call
xchg
jmp
xchg
xchg
nop
nop
nop
nop
push
xchg
jmp
mov
mov
inc
mov
test
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
je
lea
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
pop
jmp
lea
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
nop
push
mov
pushl
xchg
pushl
mov
call
nop
leave
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
xchg
push
cld
push
addr16
add
addr16
jmp
sub
addr16
jmp
nop
push
xchg
mov
and
add
mov
and
xchg
sub
xchg
sub
add
add
mov
push
mov
jmp
push
xchg
push
mov
pushl
nop
call
cld
push
popl
call
mov
jmp
andl
xchg
push
xchg
xor
mov
and
addr16
mov
mov
lea
nop
nop
nop
nop
nop
inc
mov
jmp
push
inc
push
mov
xor
xor
sub
and
pop
mov
inc
add
dec
test
jne
pop
push
sub
shl
mov
inc
shr
pop
mov
call
xor
mov
mov
mov
mov
mov
mov
mov
lea
nop
nop
nop
nop
push
addr16
jmp
ror
inc
add
mov
mov
xchg
add
xchg
add
mov
add
xchg
test
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
nop
nop
jle
add
and
mov
rol
mov
jmp
sub
ror
mov
mov
test
nop
nop
nop
nop
nop
jne
xor
mov
ret
nop
nop
nop
nop
push
push
pop
call
addr16
rol
rol
shl
rol
mov
pop
jmp
push
pop
nop
nop
nop
nop
nop
add
mov
pop
pushl
nop
push
xchg
pushl
mov
push
xchg
call
addr16
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
xchg
push
mov
push
push
pop
call
mov
add
shr
mov
or
dec
pop
call
xchg
push
xchg
sub
mov
rol
ror
shr
mov
and
mov
shr
pop
jmp
pushl
or
dec
pop
push
sub
pop
add
pushl
inc
sub
dec
mov
shl
pop
rep
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
and
or
mov
add
jmp
push
mov
call
addr16
or
sub
inc
mov
mov
push
pop
call
nop
xor
and
and
and
sub
mov
jmp
movl
mov
or
mov
sub
ror
mov
xor
sub
mov
shr
nop
nop
nop
nop
nop
nop
nop
add
xchg
and
xchg
mov
xchg
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
and
sub
sub
sub
mov
test
nop
nop
nop
nop
nop
nop
jne
xor
push
pop
jmp
push
xchg
call
addr16
jmp
push
mov
push
mov
push
mov
push
mov
test
nop
nop
nop
nop
nop
nop
jne
jmp
leave
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
add
fildl
mov
add
nop
mov
mov
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
je
mov
xchg
jmp
mov
add
mov
xor
mov
rorl
nop
nop
nop
nop
nop
nop
nop
add
xchg
dec
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jne
and
mov
or
pop
or
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
pushl
add
inc
pop
lea
nop
nop
nop
nop
nop
sub
mov
rol
or
mov
call
xchg
cmpl
mov
je
push
xchg
and
mov
jmp
add
and
mov
sub
sub
mov
add
addr16
movzwl
nop
nop
nop
nop
nop
push
xchg
ror
shr
pop
cmp
addr16
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
je
and
and
sub
mov
jmp
add
mov
mov
mov
pusha
nop
nop
nop
nop
ror
mov
add
ror
xor
mov
push
xchg
call
mov
jmp
call
xchg
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
je
call
mov
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
je
push
mov
xor
nop
sub
mov
mov
sub
pop
jmp
movl
mov
push
mov
dec
mov
and
push
add
dec
or
xor
mov
and
add
sub
mov
sub
and
xor
dec
test
jne
pop
pop
call
jmp
lea
nop
nop
nop
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jbe
lea
nop
nop
nop
nop
nop
nop
jmp
pushl
mov
xor
inc
sub
or
pop
mov
ror
inc
mov
mov
mov
jmp
add
addr16
mov
movb
xchg
jmp
lea
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
mov
dec
xchg
jmp
cmp
mov
jne
xor
xchg
cmpl
xchg
setne
nop
nop
nop
nop
leave
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
movl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
nop
nop
nop
nop
nop
nop
nop
jmp
shr
mov
movsbl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
and
rol
mov
add
mov
mov
cld
ror
mov
shl
mov
rol
rol
mov
mov
jmp
movl
mov
call
mov
popa
nop
nop
nop
nop
nop
nop
nop
nop
jmp
xchg
pusha
nop
nop
nop
nop
nop
nop
nop
nop
call
xchg
popa
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
push
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
lea
nop
nop
nop
nop
jne
test
nop
nop
nop
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
nop
jmp
rol
nop
nop
nop
nop
nop
nop
nop
nop
xor
mov
incl
mov
add
or
mov
mov
xchg
test
nop
nop
nop
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
jne
or
mov
jmp
and
nop
nop
nop
nop
nop
nop
nop
nop
lea
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jle
mov
xor
shr
mov
movzwl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
and
dec
inc
mov
and
addr16
cmp
xchg
jmp
cmp
inc
or
je
incl
nop
or
mov
jmp
jne
push
add
or
shl
and
sub
pop
add
add
and
addr16
add
push
pop
jmp
rol
dec
add
mov
rep
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
rol
and
mov
mov
add
xchg
movzwl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
incl
xchg
jmp
dec
ljmp
add
icebp
cltd
dec
xor
mov
jmp
test
add
mov
cmp
addr16
jl
or
inc
add
or
xor
mov
dec
inc
add
and
dec
mov
jmp
sub
xchg
mov
addr16
mov
mov
jmp
movb
xchg
incl
xchg
jmp
cmp
mov
jl
xor
mov
jmp
and
or
sub
xor
mov
movzwl
nop
nop
nop
nop
nop
mov
mov
jmp
sub
add
mov
add
push
pop
inc
xchg
inc
mov
dec
nop
nop
nop
nop
nop
nop
nop
nop
jne
add
xchg
jmp
add
cld
sub
dec
xor
add
inc
pop
shr
mov
shr
pop
add
xor
mov
add
sub
pop
leave
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
xchg
jne
mov
and
add
pop
jmp
mov
dec
add
xor
and
add
andl
mov
mov
dec
add
and
mov
add
mov
jmp
jmp
and
mov
xor
xor
dec
mov
nop
nop
nop
nop
nop
movzbl
nop
nop
nop
nop
nop
incl
nop
xor
mov
inc
xchg
mov
sub
mov
and
mov
inc
nop
inc
cld
shr
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
sub
inc
add
sub
xor
mov
add
or
mov
mov
push
pop
add
mov
mov
pop
push
popl
dec
ror
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
xchg
shr
add
mov
add
xchg
cltd
nop
nop
nop
nop
nop
and
mov
add
push
pop
sar
nop
nop
nop
nop
nop
nop
nop
nop
nop
shr
nop
nop
nop
nop
test
nop
nop
nop
nop
lea
nop
nop
nop
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
jle
nop
nop
nop
nop
nop
mov
xchg
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
jle
shl
ror
mov
mov
nop
sub
xchg
jmp
test
nop
nop
nop
nop
nop
nop
nop
je
nop
nop
nop
nop
nop
dec
and
add
mov
and
sub
shl
mov
sub
addr16
mov
mov
jmp
cmc
xor
dec
and
nop
nop
nop
nop
nop
nop
nop
jne
xor
mov
mov
addr16
sub
xchg
decl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jne
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
hlt
movl
leave
dec
xchg
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jne
jmp
mov
xchg
mov
nop
jmp
call
cld
test
nop
nop
nop
nop
nop
jmp
ret
inc
std
mov
nop
nop
nop
nop
nop
nop
nop
nop
jmp
sbb
adc
test
clc
add
add
lea
nop
nop
nop
nop
call
xchg
test
nop
nop
nop
nop
nop
nop
je
or
and
shr
shl
sub
mov
sub
xchg
jmp
inc
xchg
rorl
mov
shr
mov
xor
mov
add
xchg
add
xchg
dec
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jne
test
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jle
rorl
nop
nop
nop
nop
add
and
add
mov
jmp
cld
sub
loop
push
in
mov
cld
incl
mov
dec
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
mov
xor
mov
add
mov
dec
nop
nop
nop
nop
nop
nop
nop
jne
jmp
xchg
sub
jne
jmp
sub
addr16
jmp
cmp
pop
push
xchg
pushl
mov
call
mov
mov
addr16
call
nop
jmp
xchg
or
jmp
dec
mov
dec
xchg
dec
mov
nop
nop
nop
nop
nop
movzbl
nop
nop
nop
nop
nop
nop
shl
nop
nop
nop
nop
nop
nop
add
xchg
incl
push
pop
lea
nop
nop
nop
nop
nop
nop
jmp
test
nop
nop
nop
nop
nop
nop
je
and
mov
mov
mov
call
xchg
dec
and
mov
mov
xchg
jmp
orl
mov
nop
nop
nop
nop
nop
or
ror
xor
or
mov
xor
sub
xor
ror
mov
mov
mov
add
rep
nop
nop
nop
nop
nop
nop
pushl
mov
jmp
pusha
mov
inc
dec
mov
call
xchg
cmp
xchg
jb
inc
nop
cmp
cld
jb
inc
cld
jmp
outsb
lcall
mov
pushl
xchg
call
push
pop
or
sub
dec
mov
mov
test
nop
nop
nop
nop
nop
nop
jmp
cmpb
cmp
mov
jae
inc
xchg
inc
nop
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
je
ror
mov
mov
mov
sub
addr16
jmp
and
add
add
loop
adc
sub
mov
add
mov
sub
mov
jmp
add
mov
sub
nop
shr
nop
nop
nop
nop
nop
nop
nop
nop
jmp
jge
std
mov
xchg
incl
xchg
dec
xchg
mov
nop
nop
nop
nop
nop
nop
nop
jne
mov
xchg
xor
cld
inc
mov
jmp
jmp
cmp
pop
test
nop
nop
nop
nop
lea
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
jle
jmp
sbb
and
xor
mov
and
mov
mov
jmp
cmp
mov
xchg
xor
add
mov
movzwl
nop
nop
nop
nop
nop
nop
nop
xor
add
ror
mov
and
mov
jmp
sub
xchg
incl
push
pop
incl
xchg
nop
nop
nop
nop
nop
mov
xchg
xor
push
pop
cmpl
nop
je
and
add
xor
mov
and
inc
add
pop
sub
xchg
sub
and
and
add
pop
leave
nop
nop
nop
nop
nop
nop
nop
nop
jmp
mov
incl
xor
rorb
cmp
add
and
push
pop
jmp
daa
xchg
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
xchg
add
xchg
add
xchg
sub
ror
mov
add
addl
push
pop
decl
nop
nop
nop
nop
nop
nop
jne
nop
nop
nop
nop
nop
add
cld
cmpl
mov
jne
pushl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
or
pop
mov
xchg
nop
nop
nop
nop
nop
mov
mov
mov
xchg
xor
add
mov
push
push
pop
call
xchg
or
dec
inc
pop
nop
nop
nop
nop
nop
push
xchg
mov
mov
call
xchg
mov
mov
nop
nop
nop
nop
nop
test
nop
nop
nop
nop
nop
nop
pop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
je
and
or
mov
lea
nop
nop
nop
nop
nop
nop
nop
jmp
sub
shl
mov
add
mov
nop
nop
nop
nop
nop
push
xchg
call
mov
cmp
xchg
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
je
xor
mov
test
nop
nop
nop
nop
nop
nop
jne
nop
nop
nop
nop
nop
shl
dec
mov
add
and
add
mov
shl
sub
mov
mov
add
push
pop
add
push
pop
jmp
jns
movzwl
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
pushl
or
pop
nop
nop
nop
nop
nop
add
mov
add
mov
push
push
pop
pushl
xchg
call
xchg
nop
nop
nop
nop
nop
mov
mov
add
mov
nop
nop
nop
nop
nop
add
xchg
add
mov
test
nop
nop
nop
nop
jne
add
nop
cmpl
addr16
jne
pushl
nop
nop
nop
nop
add
add
sub
pop
nop
nop
nop
nop
nop
mov
mov
inc
and
mov
mov
shr
ror
mov
and
mov
and
add
mov
xchg
nop
nop
nop
nop
nop
cmp
xchg
jne
and
ror
sub
and
add
add
mov
and
add
add
sub
or
pop
nop
nop
nop
nop
nop
mov
nop
mov
xor
or
xor
shl
and
add
add
xchg
mov
inc
or
pop
shl
or
xor
and
shl
pop
xor
shr
sub
inc
ror
mov
shl
or
xor
xor
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
cltd
popa
outsb
mov
in
push
xorb
cli
mov
sub
add
mov
mov
movsb
pop
mov
mov
jno
jb,pt
mov
or
or
bound
data16
clc
jo
and
add
jns
int3
shlb
negb
mov
mov
outsb
sahf
add
mov
or
adc
lcall
mov
stos
mov
xchg
int
and
sub
cmp
lret
inc
out
push
repz
add
stos
andl
rcrl
gs
int
pop
lcall
rcll
rep
inc
jne
mov
jne
dec
mov
jnp
test
xchg
mov
sbb
jl
and
xor
fistps
stos
xchg
mov
popa
ret
loop
mov
and
loope
ffreep
in
sbb
mov
test
bound
rorl
lods
sub
js
mov
push
jnp
mov
icebp
dec
nop
aad
xchg
xchg
mov
mov
rcl
pop
add
fnsave
fxch
jnp
shlb
mov
lods
out
xchg
mov
mov
adc
clc
icebp
nop
push
cmp
aas
aad
xchg
jge
or
arpl
movsl
idivb
pop
cmp
ret
sub
and
jb
subl
mov
mov
pusha
pop
cli
push
int
out
imul
pop
mul
scas
sbb
adc
repnz
subl
dec
data16
mov
stc
mov
pop
scas
outsl
xlat
pop
xchg
xrelease
jb
inc
stos
cmovs
test
fists
mov
mov
push
pop
mov
dec
scas
cwtl
mov
cmp
push
xchg
int3
dec
js
jae
adc
addr16
mov
das
imul
adc
adc
push
xlat
loopne
or
jg
inc
mov
sbb
jle
jne
lock
push
xor
xchg
xchg
adc
and
mov
push
adc
imul
gs
iret
xchg
outsb
fwait
jbe
neg
jbe
sbb
loopne
mov
push
orl
mov
jp
dec
pop
cmpl
pushf
mov
enter
add
popf
add
div
stc
cmp
push
pop
adc
xchg
shl
xlat
or
mov
pop
popa
and
push
adcb
mov
dec
data16
xchg
xor
shlb
pushf
xor
adc
mov
lods
adcb
je
push
mov
scas
aas
cmp
and
cwtl
pusha
loopne
sbb
push
orl
ljmp
pop
xchg
cs
cmpsl
lret
pop
and
fnstsw
xchg
xchg
sbb
xor
ds
or
in
movsb
jb
or
andl
aam
xchg
xor
sub
sub
mov
pop
or
pop
fcomps
loopne
popa
imul
xchg
enter
mov
shlb
out
gs
lcall
xchg
shrl
icebp
sbb
mov
mov
push
into
dec
adc
push
icebp
jne
popf
sub
pop
mov
stos
sub
sbb
fildll
push
int
stos
popf
push
mov
stos
dec
or
jle
mov
or
dec
jbe
xor
pusha
pop
pop
sahf
popa
das
add
jne
cmp
or
mov
sub
js
call
jp
xchg
lcall
je
rcrb
stos
addr16
pop
jne
push
push
loope
mov
xchg
sub
jno
popa
gs
imul
in
es
dec
push
and
dec
inc
push
cmp
push
add
add
inc
or
jmp
xchg
or
mov
push
sub
mov
sti
jae
test
daa
xchg
popf
repz
pusha
int
les
loopne
outsl
icebp
rorl
push
mov
push
mov
fs
push
iret
ds
outsb
pop
movl
or
and
notl
cmp
dec
cmpsb
aaa
cwtl
pop
jge
mov
jns
xchg
or
mov
cwtl
cld
sbb
in
dec
leave
mov
jp
lods
clc
mov
out
xor
ljmp
stos
movsb
mov
dec
arpl
or
out
fists
hlt
mov
push
xchg
rol
pop
or
fsubr
inc
mov
cli
mov
testb
inc
xor
add
xchg
xchg
popf
js
and
or
pop
inc
push
xorl
cmpsb
jb
or
fiadds
cmpsl
dec
mov
mov
test
js
sub
cmpsb
pop
dec
cwtl
adc
inc
pop
inc
aad
pop
cwtl
mov
jge
sbb
sarb
loope
and
jb
call
cs
imul
lahf
mov
repz
ja
mov
cmp
scas
mov
pop
rcr
in
out
mov
xchg
and
inc
push
mov
addb
lahf
fsubrl
clc
xor
mov
jmp
cltd
insl
gs
lds
loop
mov
es
push
xor
jp
adc
add
inc
ljmp
sbb
lret
add
xor
test
loope
and
daa
or
ja
and
and
pop
xor
dec
aad
les
add
dec
sub
sbb
test
cmc
mov
mov
outsb
sbb
jo
pop
outsb
out
add
and
hlt
adc
push
lock
lcall
adc
mov
ss
hlt
pushf
fstps
aam
and
sbb
adc
jmp
push
mov
ret
pop
lahf
add
mov
pop
into
int
add
loop
xorl
cmpsl
mov
mov
fldenv
xchg
jle
push
adc
adc
xor
mov
cwtl
enter
dec
xchg
and
popa
pop
mov
lods
add
fdivp
int
dec
out
loope
je
test
push
pop
imul
ficomps
mov
sub
push
fwait
nop
and
std
dec
rol
jl
icebp
adc
imul
cltd
out
mov
mov
aam
mov
lea
mov
in
enter
adc
iret
mov
jmp
inc
mov
cmp
pushf
pop
stc
cmp
fwait
jo
xchg
das
jb
loope
dec
sub
sbb
mov
je
dec
sbb
cmp
enter
call
loopne
pushf
fmuls
arpl
jo
jmp
movsb
frstor
adc
sahf
add
movsb
dec
fdivl
inc
fdivrl
gs
sbb
fists
xor
mov
inc
ds
push
pop
mull
push
dec
outsl
insl
sub
or
push
xor
popa
cltd
mov
test
aad
jge
test
mov
inc
scas
cmpsl
sbb
inc
sub
rolb
sub
rcrb
add
leave
addr16
scas
cmp
mov
jecxz
jo
std
test
push
jmp
dec
mov
adc
xchg
nop
outsl
lret
pop
aas
xor
adc
mov
enter
fdivs
aas
sub
cli
adc
push
lods
add
shrb
aad
scas
sbbb
cmpsb
insb
sub
push
mov
mov
mov
enter
fsin
mov
jns
mov
and
xor
jmp
mov
jle
xor
loop
mov
pop
fstl
inc
xor
nop
cmp
inc
sarl
dec
push
or
test
es
lret
mov
sub
out
in
jae
cmp
mov
jmp
sub
pop
dec
dec
lahf
dec
add
inc
out
mov
lea
inc
sub
roll
repnz
push
stos
push
js
sar
subl
gs
push
mov
rcll
test
cmp
mov
push
cmp
push
dec
sub
insl
mull
cld
sbb
dec
jnp
sub
lret
testb
pop
ror
cmp
sbbl
in
lds
je
xlat
mov
insb
vcvtss2sd
and
in
cmp
std
jbe
test
pop
rclb
jb
mov
icebp
mov
fsubp
mov
push
and
pop
punpckldq
popl
out
or
lcall
pop
and
sub
pop
std
sbb
fs
jnp
lods
sahf
pop
stos
fs
mov
cmp
inc
cmp
lods
sbb
and
jl
lahf
loop
cltd
fucomip
int
repnz
push
dec
xor
scas
dec
mov
xchg
xorl
jl
sbb
es
push
movsl
push
mov
xchg
cmp
bound
daa
xor
jle
popa
lahf
mov
gs
inc
and
enter
xchg
or
iret
fsub
push
aas
adc
pop
mov
mov
pusha
adc
cltd
iret
sub
push
ror
in
jno
cmp
mov
lock
pop
mov
aas
push
lahf
test
adc
shl
add
sub
rcll
mov
lock
or
in
sub
shll
ret
incb
mov
aad
into
mov
flds
insl
jmp
cld
imul
and
pop
cmc
out
adc
je
cmp
dec
int3
pop
aad
xor
dec
lahf
ret
daa
outsl
push
sub
in
xor
push
mov
in
popf
mov
dec
stos
outsl
cmp
in
pop
das
cmp
and
inc
in
nop
sti
mov
xchg
andb
mov
fmulp
push
mov
pop
cmp
sub
nop
mov
sub
pushf
adc
sbb
call
daa
jo
jg
icebp
out
outsb
sub
rcrb
jb
repz
pop
pop
jbe
jb
out
fiadds
add
lods
mov
adc
dec
push
dec
insl
or
mov
jns
cld
ja
xchg
pop
das
nop
sbb
std
movsb
mov
int
or
mov
mov
icebp
and
das
cld
jno
call
jge
fcomps
movsl
mov
and
mov
arpl
or
fs
scas
adc
sbb
fdivs
mov
imul
jl
jns
add
cmp
stc
mov
scas
or
push
jecxz
and
dec
stc
iret
jae
movl
sbb
test
mov
filds
inc
adc
xchg
dec
push
into
adc
popa
ds
ret
pop
push
dec
int
les
pop
xchg
subl
cmp
mov
jmp
cmp
insl
sbb
arpl
and
aas
aad
lahf
mov
push
push
push
mov
sub
repz
sbb
sbb
sub
xor
inc
adc
sbb
mov
or
int3
dec
out
fucom
popf
sub
push
cmp
addr16
adc
lcall
mov
xchg
decl
mov
sbb
mov
cmovno
cmpsl
inc
adc
push
pop
xchg
roll
ret
xchg
xchg
shll
dec
pop
mov
sbb
std
fsubrs
ljmp
fcomi
pop
sarl
mov
adc
outsl
jbe
sub
mov
outsl
or
daa
and
jo
lea
sbb
inc
insb
sbb
or
xchg
or
push
ror
dec
filds
sub
fstpt
mov
inc
jle
ja
sbb
ss
lea
xor
dec
icebp
mov
xor
pop
xor
sbb
lds
cli
aaa
xor
mov
lea
lock
cmp
sub
sbb
sbb
cmp
aas
cmp
or
xor
cwtl
out
das
fsts
cmp
mov
inc
fildl
lods
jb
and
lods
add
aam
mov
pop
xchg
adc
sbb
and
shlb
add
jne
adc
mov
nop
shr
cmp
bound
stc
test
cmpsb
jo
jle
push
mov
lds
sbb
ret
push
scas
mov
test
shrl
and
cmp
testl
jnp
sub
fsubrs
pop
mov
imul
xchg
pop
movsl
rclb
lcall
cs
loop
or
aad
out
add
rorl
lds
ret
les
add
cmp
xor
inc
lods
insb
xchg
enter
sub
xchg
mov
daa
stos
or
mov
test
or
cmp
lea
sub
int3
mov
loopne
fstpl
into
push
repz
pushf
mov
fcmovb
inc
or
in
jmp
stos
or
inc
jecxz
stos
leave
mov
out
cltd
jae
ja
cmp
xchg
sbb
xlat
out
dec
lret
add
call
xor
out
mov
mov
xor
cli
pop
inc
mov
sbb
hlt
sub
add
jo
movsl
aad
in
popf
xor
push
and
adc
push
in
add
dec
mov
xor
mov
popf
pop
icebp
xchg
dec
or
jle
mov
sti
dec
movsl
pop
dec
fimuls
jb
popa
fwait
loopne
mov
and
fbld
sub
jns
push
or
xchg
nop
add
leave
cmc
mov
lea
into
inc
enter
and
test
sbb
mov
outsl
mov
or
mov
mov
adc
mov
pusha
dec
xchg
or
cmp
sbb
in
les
sbb
pop
push
ljmp
ja
repz
lahf
loopne
push
mov
test
inc
addr16
loop
in
lahf
rcrb
xor
fwait
push
adc
stos
cwtl
fsubr
jb
pop
mov
lret
pop
es
mov
das
inc
out
loopne
adc
add
pop
stos
sbb
jge
inc
cmpsb
repz
cmp
into
out
and
sub
imul
adcb
mov
movsl
sbb
push
inc
sbb
and
sbb
xlat
mov
out
jmp
out
rcr
pusha
outsb
ss
push
repnz
int
shlb
pushf
sbb
ficoms
test
cmp
jnp
andl
bnd
cmc
pop
notl
sbb
ljmp
popa
inc
aas
dec
push
in
test
imul
les
scas
or
sbb
lahf
lcall
pop
xor
jecxz
mov
mov
movsb
and
lret
mov
inc
xchg
add
or
insb
cld
xchg
or
in
sti
std
pop
lret
cmp
push
ljmp
cmp
movsl
adc
aad
mov
inc
sti
inc
and
fwait
ljmp
push
arpl
jb
mov
insl
in
mov
ss
imul
test
test
mov
pop
adc
lret
pop
movsb
xor
enter
lods
sub
fistl
mov
push
cltd
xor
rolb
push
add
dec
loope
adcb
mov
add
lahf
clc
arpl
hlt
mov
test
mov
aas
jne
push
enter
cli
imul
scas
popa
fisubs
out
mov
das
sbb
out
cmp
ret
mov
aad
sub
out
add
add
add
sub
add
pop
pop
or
push
inc
rol
mov
notb
add
movsl
mov
faddl
sub
dec
ljmp
or
pop
jmp
fisubl
out
enter
sub
inc
adc
out
fistl
fcmovu
scas
int
in
shlb
or
and
cmp
mov
sub
jns
mov
in
mov
std
repz
jae
outsb
ja
cmpsb
mov
xchg
sti
mov
icebp
sbb
in
sub
push
or
cmp
xor
mov
jo
repnz
pop
mov
dec
inc
andb
xchg
lret
lds
test
dec
movsb
mov
sub
dec
pushf
pop
imul
movsl
add
cmp
fs
lods
pusha
loope
ds
push
inc
sbb
cmc
das
or
push
push
out
stos
pop
cmp
add
jmp
outsb
out
inc
cli
call
subb
rcrl
mov
lret
inc
out
sbb
das
sub
fnstenv
ljmp
adc
imul
cmpsl
imul
fxtract
inc
pop
push
sbb
repz
xchg
outsb
sbb
xchg
imul
jns
pop
inc
push
xor
or
and
push
mov
scas
loopne
pop
pop
test
jns
cwtl
stos
push
adc
push
fldenv
jmp
fdiv
int
negb
idivb
mov
sbb
pop
fnstsw
dec
add
sub
add
imul
adc
fwait
push
add
sbb
notb
mov
clc
mov
sub
lods
dec
or
mov
sub
sub
and
inc
out
test
shrb
inc
push
filds
and
int3
mov
cmp
or
pop
lret
and
dec
fdiv
aas
mov
push
xor
or
daa
mov
insl
flds
ljmp
pop
pop
mov
ds
mov
xchg
adc
sub
lret
inc
adc
int
xchg
test
push
je
xlat
or
jne
pop
inc
sti
outsb
push
push
inc
stc
dec
outsb
dec
outsl
add
push
in
xlat
cmpsb
sbb
lods
and
ret
int3
inc
ss
push
dec
push
adc
xor
adc
aaa
jb
jbe
lea
mov
xchg
clc
imul
cmc
repz
jmp
xchg
mov
push
push
xor
add
inc
stos
popa
inc
daa
stos
int3
pop
pop
adc
sub
cmp
repnz
orl
sbb
mov
jno
inc
scas
inc
out
stc
inc
mov
mov
xchg
xchg
lock
or
dec
push
mov
sub
sub
xor
push
and
dec
aad
jno
das
pop
imul
iret
out
sbb
sub
mov
pop
dec
jne
dec
inc
sbb
mov
out
mov
adc
fwait
orb
mov
mov
mov
mov
bound
fmuls
push
es
pop
push
fldt
add
fsubl
xlat
cmp
lcall
stc
call
jp
inc
outsl
xor
xlat
adc
bound
push
push
out
xchg
scas
xor
and
fistps
incb
lods
cmc
xor
jne
add
aam
icebp
cmp
dec
sbb
push
lods
cwtl
jbe
hlt
cmp
lret
add
inc
cmpsl
add
push
jne
pop
dec
out
cmp
in
lock
js
jmp
and
jle
cld
sbb
fs
je
inc
or
incl
fnstcw
add
pop
cmp
xor
arpl
mov
out
mov
or
cmp
adc
mov
lret
push
sbb
mov
int3
jb
fs
aad
movsb
or
inc
sahf
shl
insl
mov
test
out
sarl
xor
jbe
dec
clc
cmpl
jno
dec
xchg
sbb
cmp
cmc
mov
or
mov
mov
movl
pop
lds
or
mov
sbb
addr16
or
mov
mov
xchg
shll
cmp
les
fwait
lret
dec
or
jmp
negb
ds
mov
iret
and
imul
pop
or
sub
iretw
mul
xor
push
mov
xor
push
sub
outsl
fdivl
jnp
js
das
pop
into
xorl
jmp
flds
and
stos
mov
ljmp
test
pop
sub
push
push
pop
scas
push
sub
dec
outsb
mov
pop
addr16
mov
pop
pop
mov
push
fistpll
imul
jne
gs
mov
mov
fldt
les
rcr
rclb
xchg
mov
mov
inc
or
adc
cmc
in
jle
cld
or
jle
inc
in
xor
cmc
cld
mov
movsb
sub
cmp
sub
popa
jp
adcl
mov
xchg
mov
fs
adc
inc
cwtl
jno
movsb
or
inc
dec
decl
mov
mov
nop
cmpsl
sbb
and
stc
lret
stos
cld
loop
loopne
fwait
or
sub
sti
pop
jbe
insb
out
jmp
xchg
jne
iret
dec
fldl
orl
or
jae
sbb
adc
jno
popa
mov
mov
cli
dec
mov
mov
add
pop
nop
push
scas
aam
ds
inc
dec
insb
dec
scas
imul
dec
movsb
aad
in
popf
test
call
cmp
jno
aad
cmp
fs
sub
push
pop
cltd
cmp
pop
pop
dec
and
cld
or
sub
mov
movsb
int
sub
dec
adc
sti
mov
aam
pushf
xchg
dec
out
cli
cmp
fs
jmp
mov
cld
xlat
inc
cmpsl
pop
scas
xchg
sub
shll
mov
sub
push
aaa
int
lods
iret
mov
les
jmp
test
xlat
push
fdivrl
test
ja
mov
xchg
mov
mov
pop
xor
pusha
orb
repnz
fsubrl
xor
ljmp
mov
dec
push
nop
les
push
and
sbb
sarl
ljmp
xchg
jo
cmpsl
fimuls
sub
shlb
or
shl
jg
adcl
pop
adc
mov
mov
sub
xor
les
jns
cmpsb
lds
test
xor
dec
aaa
or
lods
xchg
pop
and
and
lret
imul
je
xor
cwtl
xchg
sub
jle
push
frstor
cs
or
add
and
xor
rcl
xor
jbe
or
rcl
pushf
jmp
xor
lahf
int3
sbb
mov
push
adc
fsts
into
je
sbb
xor
xor
or
daa
ljmp
xor
je
and
sub
mov
data16
data16
fs
push
addr16
in
mov
mov
addb
mov
movsb
jns
cltd
adc
jge
int
cmp
jl
adc
adc
inc
fwait
jp
adc
or
xchg
mov
mov
cmp
push
inc
mov
adc
cld
xchg
inc
aas
mov
gs
loope
adcb
jo
push
mov
jge
es
or
daa
xor
pop
test
icebp
fs
xchg
jmp
and
sbb
in
cmpsb
js
push
and
mov
movsb
sti
loope
cmp
mov
pop
lods
mov
and
ljmp
xlat
sti
into
xchg
mov
aas
stos
int3
cmp
addr16
lret
hlt
jl
jns
in
gs
jno
inc
sarb
fildl
lret
lods
mov
bound
xchg
add
cltd
scas
mov
add
insl
and
loope
pop
add
or
rcll
mul
jge
lea
mov
lock
push
and
pop
sbb
pop
out
inc
fistpl
lret
icebp
mov
xchg
pop
shll
leave
lds
out
cmp
dec
out
sub
and
mov
popf
cmp
aaa
aad
fistl
add
sbb
loopne
lret
maxps
rol
sub
fstpt
popa
leave
imul
je
jl
fstl
jl
test
outsl
loope
test
es
rclb
xor
cmp
out
shl
jmp
add
sub
imul
cmc
pop
dec
mov
or
dec
sbb
in
push
aas
jge
and
push
push
jmp
inc
iret
add
mov
push
call
inc
sbbl
add
sub
es
loope
dec
mov
mov
ret
lock
mov
jle
mov
ja
es
xchg
fldl
xor
xor
dec
mov
adc
fdivr
es
dec
mov
and
jle
and
leave
scas
or
test
sub
outsb
rolb
xchg
and
addr16
sub
xchg
bts
inc
push
int3
mov
add
cs
dec
fdivl
call
loop
cmp
icebp
jb
movsb
int3
jle
or
or
lods
in
stc
ret
je
popf
sbb
xchg
lret
ja
faddl
addr16
les
lods
jnp
aas
fld
sbb
inc
in
jmp
mov
adc
mov
cwtl
sti
mov
rcll
or
sbb
or
sub
loopne
inc
xorl
add
mov
and
mov
sahf
sub
loope
test
mov
cmpsb
out
gs
push
das
xchg
fs
mov
out
lret
push
xchg
xlat
pop
test
inc
arpl
lret
pop
dec
gs
shrl
and
or
mov
loopne
inc
stos
dec
cmpsl
pop
jge
inc
or
jmp
adc
cmpsb
xor
xor
xchg
sbb
mov
incb
hlt
jb
leave
push
mov
insl
repnz
mov
popf
jp
mov
movsb
shrl
out
jl
or
cli
cmpsl
jl
imul
int3
or
lods
xchg
in
iret
es
pop
in
cmpsl
ficomps
jecxz
imul
jl
push
lahf
mov
int
das
ds
scas
add
cmp
test
iret
imul
mov
push
and
cmpb
sbb
dec
pop
pop
sbb
push
mov
fdivl
sub
test
outsb
cmp
cmc
and
outsl
push
pop
xchg
jb
mov
insb
ds
xlat
push
in
mov
push
ds
iret
mov
cmpsb
in
adc
andb
popa
jne
lods
pop
pop
into
push
stos
or
mov
sarb
adc
mov
lods
dec
xchg
xor
xchg
iret
push
and
adc
dec
push
insl
dec
push
ret
adc
sub
jp
test
sbb
stc
aas
mov
pop
cmpsb
popf
jb
fs
aad
sbb
je
xor
inc
dec
fidivrl
xchg
sti
fisubrs
mov
lods
aam
sbb
lahf
lock
add
xor
or
jecxz
jae
dec
jae
mov
dec
test
mov
test
rcll
mov
push
or
pop
cmpsb
jecxz
push
dec
xchg
push
pop
pop
ficoml
inc
pop
insb
andb
lret
xchg
ljmp
lcall
push
cmp
lods
xchg
jno
adc
xor
mov
xchg
or
xchg
in
mov
int
mov
xchg
scas
inc
jae
mov
pcmpeqw
xchg
pop
sbb
daa
imulb
sahf
stc
bound
push
ss
and
push
mov
popl
sbb
dec
in
mov
and
xor
fdivrs
cltd
nop
inc
mov
lods
and
inc
cltd
mov
sub
xchg
jnp
pop
inc
enter
ds
repz
xchg
pop
fimull
pop
sub
cmc
sub
nop
andl
mov
cmc
cmpsb
mov
ret
cmpsl
sub
add
or
cmp
and
scas
mov
and
pop
mov
sub
dec
inc
xchg
popa
mov
cmp
pop
inc
lret
lds
adc
imul
mov
mov
jle
mov
loop
movl
or
cmp
inc
scas
clc
xor
loop
imul
jl
outsl
pop
imulb
adc
pushf
adc
lods
xchg
mov
sbb
fwait
pop
pop
dec
das
lret
cmpsl
mov
insl
cld
mov
out
xchg
shlb
add
pop
cmpsb
cmp
insl
mov
mov
dec
lds
mov
fldt
pop
xor
or
xchg
pop
std
mov
loop
outsl
out
test
aad
and
sbb
sbb
ss
pop
ds
lea
stc
mov
in
xorb
shl
pushf
or
push
or
jecxz
cwtl
dec
cs
xchg
adc
sbb
adc
out
mov
and
or
aaa
les
imul
inc
repnz
loop
jle
test
jbe
lock
sarb
push
inc
pop
mov
imul
mov
jmp
test
pop
nop
fstpl
popa
decb
push
xor
push
rcrb
lahf
xor
sahf
movsb
jmp
dec
cmpsl
fiaddl
dec
jmp
in
std
mov
and
repz
fdivrp
rcr
push
xchg
or
add
stos
icebp
stos
mov
cmc
cmpsb
mov
imul
jae
andl
fs
sti
dec
push
ret
icebp
loope
pop
adc
cmpsl
and
inc
dec
push
ds
xlat
and
mov
or
pusha
pop
or
xchg
sub
js
dec
jecxz
adc
or
push
fwait
je
loope
testb
inc
push
pusha
test
inc
jmp
jge
push
xchg
lret
cmpsl
ret
les
lahf
inc
sub
aas
jno
fstl
mov
sbb
cmp
stos
aad
insl
inc
mov
popa
mov
sbb
pop
or
pushf
mov
lret
pop
pop
xchg
pop
bound
cwtl
or
jne
pop
test
ljmp
cmp
hlt
add
mov
imul
mov
xlat
xchg
jge
dec
mov
jno
packsswb
pop
ja
movsl
cmpsb
mov
aaa
mov
push
loopne
mov
cmp
imul
mov
adc
adc
push
jle
enter
mov
test
rep
pop
lods
mov
loopne
pop
arpl
push
xor
sbb
aad
sar
mov
lock
mov
sub
mov
into
mov
jecxz
pop
fldl
inc
cmpsl
cmp
jle
jg
enter
jno
push
fs
pop
jo
xor
orl
stos
pop
daa
sbb
mov
adc
outsb
iret
add
mov
loope
add
sbb
adc
and
adc
int3
lea
sbb
lods
mov
rclb
stos
mov
xor
rcrb
xchg
pop
addr16
jae
dec
int
ss
scas
adc
repz
cwtl
fsubrp
dec
pop
jg
adc
xchg
repz
rcll
ret
adc
hlt
cwtl
sub
mov
arpl
jo
lret
push
ret
or
lret
pop
dec
sub
pop
scas
cmpsl
jae
or
mov
loopne
loopne
mov
sub
push
pop
xor
cld
test
cli
pop
dec
or
out
adc
push
rolb
adc
sar
mov
push
mov
testb
imul
add
clc
rcrl
notl
xchg
sti
mov
push
xchg
dec
and
out
dec
xor
in
lea
inc
xor
nop
lahf
mov
xchg
arpl
js
les
sub
jle
push
xchg
pop
add
imulb
test
movsb
mov
imul
and
xor
leave
mov
jo
adcl
imul
xor
enter
xor
jns
jl
mov
arpl
mov
sarl
and
daa
sub
adc
adc
inc
dec
sahf
pusha
push
stos
jmp
in
sbb
jne
xchg
stc
inc
sub
jge
outsb
bound
jge
outsb
cmpsb
mov
sbb
je
out
cld
int
in
dec
gs
scas
mov
mov
push
mov
inc
mov
fbld
jnp
out
push
int
pop
bound
mov
xor
movl
in
cltd
push
nop
call
lds
fimuls
dec
or
lods
cmp
ret
testl
xchg
out
adc
lcall
xchg
mov
jne
jns
vmwrite
test
sahf
dec
push
test
lcall
aas
adc
das
push
into
dec
jge
sub
leave
xchg
and
add
into
or
push
xchg
fdivl
mov
cmp
dec
mov
call
mov
jmp
add
pushf
pop
in
mov
js
pop
psllw
cltd
add
aas
cmp
or
cli
sbb
rorb
inc
jne
mov
pop
push
or
lds
mov
sbb
cmp
stos
or
ss
dec
inc
imul
mov
pop
mov
adc
cmp
and
mov
pushf
rorl
pop
or
scas
stos
and
jle
movsl
repz
adc
push
std
jp
shl
sbb
call
mov
sti
cltd
cwtl
ljmp
inc
mov
and
pushf
xlat
test
popf
add
addb
inc
lea
aam
in
lods
test
shll
dec
fistpl
push
or
cmp
and
jle
in
cmp
int
cmpsb
hlt
lcall
divb
aad
xor
es
sbb
lea
orb
mov
dec
out
mov
outsl
adc
inc
sti
mov
stc
jge
sbb
jno
inc
sbb
imul
mov
add
test
test
add
out
push
adc
mov
or
push
jae
loope
cmp
lods
push
in
shll
or
push
mov
pushf
xor
or
scas
cmp
sbb
xchg
cmp
mov
push
jmp
in
pop
aaa
sub
dec
mov
mov
stos
or
cltd
sub
jg
fstl
lock
mov
mov
add
and
mov
repz
mov
fsubl
dec
adc
test
fistps
push
xor
jmp
movsl
and
dec
or
rcrb
bound
lock
add
pop
mov
int
xchg
cmp
iret
add
lods
adc
xchg
test
sbbl
int3
lcall
dec
cmp
fisttps
aad
and
xchg
clc
push
fisubl
out
dec
push
test
lret
stos
imul
int3
stos
dec
and
in
sub
mov
shll
iret
enter
xchg
inc
les
xchg
and
mov
mov
sub
add
mov
adc
and
and
int3
aas
bound
push
xchg
std
jnp
jl
repnz
jl
pop
xchg
pusha
sbb
inc
cmpsb
push
jmp
outsb
call
mov
insb
pop
jnp
movsl
dec
push
jno
mov
shll
out
or
das
xor
popf
fisubrl
cmp
jbe
push
xchg
mov
or
or
mov
sahf
cs
sarl
test
inc
add
inc
pop
ljmp
movsb
pop
jmp
mov
xchg
sub
imul
inc
ss
pop
push
xchg
out
or
sub
and
cwtl
aad
push
arpl
inc
jae
adc
iret
inc
cld
pusha
call
mov
rcrb
lret
ljmp
scas
push
push
mov
ds
sub
imul
pop
aad
lahf
xchg
jmp
pop
rcl
movsl
fildl
aad
lahf
push
inc
mov
out
pop
sbb
jb
in
inc
inc
xchg
ficompl
push
sub
es
in
push
fs
pushf
fcoms
clc
sub
loope
divb
sub
mov
cmp
pop
outsl
mov
xor
lods
test
rol
jo
outsl
cmpsl
insl
or
stos
jne
outsl
push
and
pop
testl
mov
movsl
pop
push
jns
outsl
cmpsb
jmp
sub
mov
mov
jmp
mov
mov
hlt
cs
repnz
adc
jne
mov
inc
sub
mov
out
sub
xor
pusha
xchg
lret
mov
stc
es
xchg
jle
sarl
pop
pushf
arpl
mov
cmp
mov
xor
arpl
jecxz
fstp
addl
ret
pop
mov
or
pop
movsl
cmp
sbb
lahf
mov
fldt
loope
in
mov
sbb
push
or
sarl
nop
adc
mov
push
jne
and
push
xlat
lret
pop
mov
in
dec
cli
stos
mov
lret
and
push
rcrl
dec
repz
jne
outsb
jns
xchg
fidivs
mov
cltd
clc
cmp
xor
addl
rolb
dec
sbb
sti
scas
mov
int3
movsl
fs
adc
dec
pop
push
out
lock
jo
and
jb
push
repnz
pop
xor
pop
push
fstpt
inc
xor
adc
jnp
adc
fdivl
daa
adc
out
mov
add
pop
ret
or
xor
sbb
je
lcall
hlt
mov
push
rol
stc
jge
jl
insb
lods
sbb
out
sbb
aaa
xor
testb
dec
push
adc
inc
sub
inc
push
sub
mov
mov
mov
jg
outsb
mov
ret
or
inc
addl
aam
out
add
mov
jno
test
jae
mov
and
adc
jecxz
hlt
fcoms
pop
mov
xor
dec
mov
dec
dec
aaa
nop
jmp
sahf
or
and
loop
ja
aas
ret
cmc
xchg
arpl
mov
movsl
jns
dec
aam
adcl
dec
outsl
hlt
add
adc
jp
insl
mov
fcompl
mov
sbb
dec
mov
ds
pop
jae
ret
icebp
xor
xchg
push
add
bound
mov
cmp
fdivrs
les
ja
xchg
jnp
or
stc
adcl
sbb
stos
xchg
call
jl
cmp
fcmovnb
sarb
fwait
mov
pop
stc
mov
mov
mov
mov
adc
test
xor
jno
inc
jno
jo
pinsrw
flds
mov
sbb
outsl
enter
dec
rcrl
mov
xchg
dec
sub
push
lds
dec
repnz
xchg
out
push
das
popa
lods
sub
dec
in
cltd
push
fdivrs
push
xor
lahf
mov
mov
ret
gs
or
es
dec
pop
mov
insb
iret
push
dec
aaa
jbe
push
imul
rcl
shll
and
outsb
das
popf
cli
inc
pop
lods
std
into
sbb
lock
ds
hlt
push
das
addb
in
js
xchg
push
xchg
sbb
push
inc
ja
cld
dec
mov
shr
rol
push
adc
mov
push
add
leave
inc
stos
cmp
movsl
dec
jp
nop
mov
popf
sbb
mov
xchg
dec
adc
add
push
lds
and
xchg
xor
mov
push
push
nop
insl
out
in
dec
fisubl
xchg
arpl
xchg
test
ret
test
icebp
mov
add
test
mov
andl
pop
or
cs
adc
add
mov
jae
aaa
outsb
lds
std
or
cmp
pop
push
lock
mov
and
sub
xchg
add
out
jo
cmp
jb
push
pop
lahf
int3
fmuls
xor
mov
adc
sub
mov
inc
sti
movl
xlat
pop
sti
fstps
adc
xchg
negl
cmpsl
cmc
stos
inc
pop
loop
fsubp
adc
and
cli
push
out
mov
dec
sub
gs
imul
roll
add
dec
mov
xchg
pop
shll
push
shll
out
push
mov
mov
ss
fisttpl
dec
cmc
in
push
sub
xchg
scas
sbb
pop
into
jmp
and
lcall
mov
cwtl
sbbb
out
sahf
inc
cmp
mov
test
cltd
call
and
shll
fistl
inc
push
sbb
shl
ret
jecxz
push
mov
sub
decb
jbe
jo
movsb
repz
mov
adc
das
arpl
pop
sub
dec
inc
loope
pusha
xchg
mov
movsl
mov
xorb
add
pop
xor
hlt
xchg
iret
push
xor
jae
sbb
ss
repnz
aad
jecxz
cwtl
mov
sbb
cmp
aaa
cmp
mov
lcall
jmp
inc
lds
dec
jp
xor
mov
inc
cs
iret
jg
movsb
adc
mov
jne
sub
daa
cmpsl
je
sbb
ds
movsl
mov
imul
adcl
fstp
or
jo
fs
xchg
fstl
aaa
js
cmc
inc
ja
repnz
lret
jbe
inc
movsb
xchg
fcomp
jnp
cmp
cmp
test
test
cmc
jno
fcoml
xor
and
fidivrl
and
sub
dec
idiv
mov
push
std
mov
arpl
xchg
enter
cmpsb
mov
xlat
inc
pop
popa
or
jne
xchg
mov
out
stos
arpl
test
cmp
add
sbb
addr16
push
mov
pop
pop
negb
lahf
add
xlat
xchg
mov
popa
pop
cmp
hlt
xchg
jno
sbb
jecxz
mov
and
pop
mov
push
xchg
lods
jg
sbb
push
sahf
cmpsl
mov
mov
js
mov
xchg
cmp
stc
xchg
cli
iret
in
imul
js
iret
mov
lret
hlt
stos
sbb
lds
mov
pop
movsl
adc
test
loopne
dec
mov
mov
test
adc
sub
lods
sub
mov
insl
sbb
mov
lds
add
sarb
cltd
out
jbe
mov
imul
adc
test
adc
je
push
lods
dec
dec
adc
cltd
lret
popf
jns
xor
dec
or
mov
ret
sub
jns
stos
inc
pop
mov
push
enter
aas
int3
mov
fwait
bnd
mov
push
fldcw
adc
fs
push
jnp
addb
mov
arpl
shlb
cs
push
xchg
add
cli
stc
rcrl
sbb
data16
stos
inc
cmpsl
push
imull
xchg
mov
jb
popa
idiv
cmpsl
mov
lret
jp
iret
divl
outsl
aad
mov
dec
or
sti
outsl
jl
mov
push
in
out
and
xor
mov
inc
rcl
sub
int
sbb
sbb
sbb
push
mov
aam
fs
loope
das
leave
fwait
jbe
loopne
cmpsl
sub
dec
les
into
imul
pop
push
xor
sar
lea
pop
and
push
sbb
mov
mov
nop
adc
fstps
iret
icebp
xorl
inc
push
and
xlat
pop
repnz
repz
xor
lahf
roll
dec
dec
and
inc
sbb
hlt
xlat
pop
jmp
pusha
notb
push
adc
cmpsl
or
adc
orl
cmp
adc
mov
cld
push
sub
fstp
enter
mov
xor
jle
mov
adc
fdivl
inc
js
mov
dec
pop
and
jmp
lret
jg
je
jno
push
dec
fbstp
iret
cltd
mov
add
sub
ja
mov
cwtl
aas
mov
inc
testl
enter
sbb
pop
mov
pop
sub
jl
out
mov
inc
dec
test
loop
sbb
inc
popf
dec
add
lcall
and
cwtl
loopne
xor
sub
subb
pop
rcrl
insl
cmp
icebp
xor
fwait
cs
fs
nop
out
test
dec
adc
out
outsl
repz
ds
ljmp
or
ljmp
out
iret
sub
stos
mull
andl
dec
lods
out
sahf
orb
jns
icebp
movsl
incb
in
dec
insb
adc
jae
popa
les
mov
js
sbb
cwtl
jbe
into
sub
shl
jmp
mov
jl
pop
push
insb
pop
push
mov
mov
flds
in
cwtl
xor
inc
stc
jg
mov
ljmp
sbb
dec
popf
mov
in
push
and
adc
into
lods
scas
push
or
int
or
cmp
stc
push
testl
lods
mov
pop
add
dec
xor
enter
sahf
stc
jo
lcall
pusha
push
in
or
pop
sbb
pop
imul
imul
in
sbb
popf
dec
or
mov
dec
push
dec
ja
je
jae
adc
add
pop
mov
jg
loope
sub
mov
leave
sub
int
aas
mov
xchg
push
shrl
ss
mov
loopne
push
mov
jecxz
and
addr16
push
sti
repz
push
mov
cltd
inc
out
paddd
push
cmp
jno
xchg
nop
adc
addl
lods
sub
lret
nop
sbb
xchg
jbe
fisttpll
cmpsl
xor
mov
popa
pop
je
pop
into
lea
fsubrl
mov
push
fucom
or
push
add
outsb
xor
dec
ret
insb
push
push
pop
pop
pop
add
aam
lahf
xchg
daa
cltd
int3
jne
cmp
xor
sarl
dec
jge
test
jb
mov
ja
test
mov
fmuls
xor
dec
xor
shlb
pusha
stc
inc
in
repnz
stos
xchg
add
adc
mov
xchg
inc
loope
sbb
popf
nop
adc
sub
or
cmp
lock
sbb
daa
lcall
rol
add
sti
sub
pusha
je
icebp
rclb
cmp
cmc
aas
into
sub
int
sbb
and
mov
fmull
cmp
jmp
push
mov
test
push
xlat
inc
mov
outsl
dec
mov
cld
push
inc
sti
rorb
jl
stos
mov
ret
rcr
lock
jns
nop
jmp
push
add
sub
jg
jns
mov
out
sub
cld
scas
orl
mov
mov
cmp
or
xor
pushf
imul
gs
mov
pop
sarb
aad
incl
push
sbb
jno
sahf
push
jnp
jne
sbb
xchg
aam
aas
and
insl
fnstsw
iret
sbb
dec
pop
shlb
in
mov
fadds
adc
jbe
lods
orb
cld
adc
out
mov
ret
mov
fidivs
push
in
imul
mov
mov
adc
mov
pop
in
imul
rcrb
pop
mov
mov
test
call
xchg
hlt
add
mov
sbb
sub
outsb
mov
fdivrl
aas
sub
xchg
pop
popa
sbb
cmp
lahf
adc
add
aaa
out
mov
sub
call
addr16
das
or
add
dec
inc
cmp
mov
dec
jns
leave
xchg
rol
bound
adc
dec
cltd
mov
sub
rolb
xor
fimuls
xchg
xchg
outsl
pop
addr16
aaa
cmpsl
xor
aaa
xchg
dec
xor
ss
lret
stc
mov
pop
push
pop
push
dec
pop
gs
mov
inc
lret
pop
ds
xchg
out
iret
xchg
dec
mov
sub
cmp
fcomi
and
mov
sti
cmp
sbb
test
aam
ja
dec
mov
sub
bndldx
enter
cwtl
pop
clc
ret
scas
ljmp
mov
jnp
outsb
cltd
push
in
pop
jb
jno
sub
cmp
inc
add
inc
cwtl
movsl
pop
shr
jge
mov
nop
xor
or
or
rorl
ret
mov
push
push
pushl
fwait
fidivrl
and
jo
lock
sbb
out
aam
shrb
aam
xchg
inc
xchg
cmp
xchg
sbbb
in
in
icebp
lahf
notl
sbb
inc
inc
ret
jp
pop
xor
pushf
add
stos
add
outsb
pop
cmp
iret
ljmp
inc
aas
popf
test
jae
lahf
mov
lea
pop
inc
ja
and
lock
cli
push
xchg
out
pop
cld
sbb
add
dec
jmp
outsb
push
xchg
xchg
cmpsl
insl
add
inc
mov
fstl
sbb
mov
pusha
jecxz
sub
jmp
mov
lahf
inc
subb
jns
jmp
fstpl
enter
mov
in
es
xchg
mov
test
push
sbb
mov
cmc
stos
lahf
add
out
pop
fidivrs
cltd
or
jo
mov
inc
lds
add
cwtl
or
xchg
and
hlt
inc
arpl
jge
xor
adc
mov
jo
mov
add
pop
lret
stc
sub
clc
sub
lods
movd
pop
mov
push
cmp
mov
call
pop
test
dec
adcl
push
xchg
imul
stos
mov
leave
outsb
mov
jno
sbb
jbe
mov
cmc
test
scas
adc
pop
fcoml
xor
jno
sti
add
mov
push
xchg
pop
in
xor
dec
adc
movsl
ficomps
mov
fnstsw
xchg
mov
xor
adc
sbb
dec
out
add
loop
in
movsl
mov
gs
insl
xchg
outsl
fisttpl
push
lods
cld
lahf
pop
pusha
push
cmp
inc
fisubs
fcomps
mul
cmp
push
fistpl
adc
test
or
pop
sbb
xchg
xor
out
sahf
mov
sub
push
test
xchg
adc
out
sbbb
cs
xor
imulb
add
shll
sub
int
ljmp
arpl
das
xchg
and
push
test
mov
sub
jmp
fldl
sub
aad
je
ret
pop
pop
add
fistl
dec
xchg
dec
lods
push
mov
mov
mov
inc
fistl
sub
xchg
loope
push
sub
add
test
jne
push
mov
or
fmull
repnz
xor
adc
mov
ret
add
into
movsl
mov
mov
jbe
sbb
push
aam
out
enter
call
fstl
jb
test
push
iret
or
fdiv
mov
dec
xchg
fiadds
leave
loopne
jmp
or
icebp
addr16
jbe
into
mov
inc
push
inc
push
popf
rorb
mov
rcl
dec
adc
int
xor
xlat
stos
mov
mov
cwtl
icebp
push
lret
fs
jno
xor
sub
lds
mov
pop
enter
xor
out
push
jl
xchg
and
in
push
pop
xchg
fwait
mov
loope
pop
outsl
mov
ret
ja
out
push
or
adc
fidivs
xor
out
pop
insb
fnsave
and
out
dec
or
ret
idiv
clc
dec
packssdw
or
fcomps
imulb
jo
cmp
lea
inc
cli
enter
cmp
or
je
jns
xor
push
xchg
negl
xchg
lret
out
sbb
adc
in
rcrb
in
adc
insl
jo
shr
jb
add
into
gs
jmp
sbb
pop
decl
jae
ret
cmp
cmp
jl
fcompl
imul
cmp
inc
lods
movsl
popl
adc
repz
pop
cmc
ds
fsubr
sbb
negb
pop
inc
dec
dec
movsb
sub
mov
mov
xor
push
sub
cmp
mov
xchg
out
xchg
cmp
mov
scas
sub
ficompl
loope
push
shrb
fcomps
and
fadds
ja
adc
pop
hlt
mov
sub
dec
xor
pushf
loopne
inc
xchg
xor
insl
add
mov
movsb
or
int
loopne
clc
add
push
cltd
or
lahf
call
data16
xlat
jae
mov
cmpsb
xchg
pop
cmc
je
popf
pop
jp
jmp
push
push
dec
xchg
scas
and
push
mov
push
ljmp
pop
cmpsb
lock
aaa
sub
xorw
addr16
inc
mov
popa
add
or
leave
sbbb
jecxz
dec
mov
or
aaa
shrl
pop
mov
loopne
xor
filds
icebp
mov
iret
mov
xchg
add
mov
into
jnp
aad
lea
into
add
cmp
iret
cmp
push
repnz
mov
inc
xor
lret
push
or
jne
dec
add
cmp
add
xchg
leave
int3
cs
sub
roll
int3
add
lock
shrb
lds
jb
popf
cmp
xor
sub
aaa
orl
es
mov
sbb
mov
cmp
cmp
ficoml
or
adc
fisttpl
push
loop
jbe
mov
add
fnsave
jno
dec
nop
sbb
aad
cmp
push
fistpl
fistps
or
and
or
jg
or
mov
mov
cmp
mov
cmpsl
or
je
pop
sub
mov
dec
push
fcoms
inc
rcr
std
inc
popa
rcl
add
das
sti
lds
push
in
push
mov
sub
subb
mov
pop
push
mov
out
ret
and
cmpsb
jle
nop
clc
sub
pop
push
pop
loopne
and
mov
cmp
mov
xor
inc
sbb
daa
adc
cmp
in
addr16
in
push
sbb
mov
cmp
test
xlat
je
sbb
and
pop
sub
mov
add
pusha
stc
inc
xor
xchg
dec
jno
dec
in
ja
or
push
mov
lret
push
outsl
pop
mov
mov
dec
jne
outsl
mov
ftst
jb
jecxz
xchg
pop
inc
and
sub
cltd
rcr
sarb
hlt
mov
out
dec
aaa
outsb
add
pop
xor
push
sub
or
push
xchg
xchg
pop
fdivr
adc
inc
pop
sub
in
hlt
cmp
push
mov
call
jo
mull
inc
cmp
imulb
fsubr
xor
jmp
movsb
pusha
push
xchg
add
pop
inc
or
je
test
or
add
repz
xor
test
cltd
mov
gs
imul
push
jno
ja
inc
cwtl
xchg
xchg
xchg
gs
cli
or
idivb
jl
xor
mov
icebp
outsl
or
add
daa
scas
jo
xchg
icebp
stos
repnz
pop
dec
jg
out
push
and
xor
mov
movsl
lret
adc
fimuls
pop
mov
aam
pop
arpl
loopne
add
xchg
push
push
loopne
xchg
pop
test
adc
mov
lea
mov
pop
les
sbb
cmp
adc
repz
repz
or
xor
jmp
subb
in
lahf
shl
mov
into
leave
ret
or
xchg
sbb
rcll
out
cmp
pop
adcl
outsl
es
dec
xchg
jo
mov
push
mov
ljmp
iretw
or
inc
cmpsl
xchg
mov
jecxz
test
jl
mov
fs
pop
sub
lea
mov
pop
inc
inc
inc
sbb
pop
stos
mov
out
shr
dec
cmp
mov
stos
and
stc
jbe
xor
movsb
jne
bound
insl
adc
arpl
into
dec
jo
adc
push
mov
or
or
lods
cmpsl
pushf
or
mov
je
pop
fisubs
xor
loope
das
jp
jb
cmp
into
xor
int3
test
stos
sbb
jb
mov
jp
mov
into
loope
mov
call
shrb
aaa
subl
fdivrl
cvtps2pi
push
xor
mov
adc
movsb
movl
test
push
add
inc
xchg
and
nop
sub
sub
stos
pop
jle
mov
mov
jl
fidivrl
adc
jne
jle
mov
sub
cmp
stos
scas
in
pop
ret
mov
lret
incl
mov
fdivrs
adcb
mov
aad
outsb
pop
mov
addr16
test
in
mov
pop
js
xchg
xchg
test
mov
leave
sbb
and
lds
mov
xchg
push
jge
fldcw
notb
add
js
cmpsl
jnp
add
stc
mov
sbb
notl
popa
fcomp
jecxz
jbe
notb
pushf
inc
bound
enter
fcompl
stc
jno
cmp
jecxz
push
jmp
lret
loopne
push
jp
shr
arpl
add
sbb
repnz
insl
inc
sub
fildl
mov
fs
push
inc
add
pushf
dec
test
mov
movsb
pusha
leave
mov
adc
pop
inc
ljmp
out
cmp
pop
in
xor
or
dec
testl
xlat
adc
jne
icebp
pop
aas
shl
xchg
sub
dec
jno
or
pop
add
mov
xor
imul
sbb
sbb
pushw
sub
or
aam
daa
test
mov
mov
and
loopne
jbe
mov
push
xorl
cmp
sub
emms
sti
push
pusha
pop
rorl
add
pop
adc
cmp
movsb
pop
sbb
mov
bound
adc
sub
fldcw
pushl
jle
pop
fidivrs
and
les
push
in
es
and
outsb
add
mov
cmp
out
xorl
inc
cmp
xor
es
add
dec
ja
fidivrs
aas
dec
lds
fwait
jecxz
fisubrs
or
lods
adc
sub
fcoml
fwait
xorl
push
call
mov
xchg
arpl
icebp
mov
jb
mov
sbb
mov
mov
mov
dec
dec
pop
out
cmp
mov
cmp
xchg
add
testb
iret
pusha
add
lret
jecxz
loope
mov
lods
loopne
jp
mov
lods
lock
pop
and
ret
pop
sub
add
push
das
aas
jne
xchg
repz
push
shlb
pop
aam
inc
adc
adc
sub
xchg
jne
gs
mov
inc
cmp
adc
mov
adc
popa
xchg
popf
sahf
mov
aad
repz
push
cmp
adc
sbb
push
movb
push
xor
inc
jl
push
xor
mov
pop
jle
sub
and
xchg
icebp
pop
dec
icebp
imul
cmp
xchg
add
pop
das
mov
scas
mov
adc
jb
test
rcrb
xchg
fcompl
lcall
nop
add
and
ret
pop
int3
pop
shll
stc
and
dec
sub
outsl
jne
jae
lock
mov
idiv
outsb
inc
and
sub
das
pop
mov
push
fbstp
mov
loopne
sbb
je
addr16
lods
lret
dec
and
cmpsl
jle,pn
mov
add
xor
push
bound
in
mov
out
xchg
cmc
add
xchg
push
sub
jge
js
sub
int3
mov
in
push
pop
adc
push
jge
pop
inc
shlb
hlt
jl
push
and
mov
cwtl
sarb
inc
push
inc
pop
ret
arpl
stos
arpl
rorb
jl
insl
xchg
mov
jnp
and
outsl
notb
and
std
push
call
lret
cld
iret
iret
cli
mov
adc
loopne
bound
pop
scas
push
dec
inc
inc
fistl
rcl
dec
in
mov
into
rol
add
jno
lea
mov
out
mov
subl
or
push
jno
fistps
fs
stos
in
sti
aaa
lret
mov
cmp
jne
add
jp
adc
mov
push
aad
sbb
shr
add
js
insb
ds
testl
xchg
lock
mov
fsqrt
int3
in
les
dec
pop
xchg
int
repnz
xlat
pop
cmp
sbbl
mov
out
adc
push
add
pop
notb
mov
cmp
push
and
gs
lods
lret
hlt
jle
cli
dec
aas
pop
les
mov
cmp
mov
cmp
or
dec
sub
add
mov
lcall
xchg
clc
shrl
mov
jmp
popa
mov
xor
or
xchg
jbe
popa
push
inc
andb
inc
mov
inc
push
icebp
scas
and
add
pusha
xchg
movsb
xchg
lds
jne
or
pop
mov
outsb
mov
cli
xlat
and
sarl
ret
dec
mov
inc
ret
fmuls
ret
inc
xchg
sbb
jnp
js
mov
sub
pop
pop
cld
pop
push
mov
rclb
pmulhuw
add
in
jp
dec
repz
movsl
push
in
dec
xchg
sbb
imull
or
out
pop
push
xchg
pop
test
popa
inc
push
lods
push
dec
push
inc
push
mov
mov
mov
das
aas
je
loope
pop
shll
jl
mov
mov
and
sbb
jne
je
ss
arpl
or
xchg
pop
or
rcl
fiadds
cmp
mov
pop
sbb
xlat
sub
mov
lods
jge
movsl
jb
jb
pop
dec
in
xor
jne
lock
mov
test
add
push
mov
pop
sbb
mov
dec
mov
sub
fwait
or
aaa
push
inc
mov
js
call
int
lret
jae
outsb
xchg
xor
xor
adc
cs
dec
push
xchg
jmp
hlt
xorl
push
xchg
ret
mov
and
jne
inc
mov
aas
fisubrl
cmp
jp
mov
call
into
mov
pop
into
and
adc
popa
adcl
cmovbe
cmp
je,pn
cld
add
mov
xor
fsubrs
jmp
push
jp
mov
sub
pop
scas
mov
fldt
xor
jmp
dec
in
inc
push
cmp
dec
mov
test
aam
adc
dec
inc
inc
test
jne
jns
repnz
xorl
int3
push
inc
orl
shlb
js
mov
xorb
cmp
ror
jnp
xchg
add
push
lea
xor
mov
adc
mov
mov
jle
xor
mov
mov
mov
mov
lret
enter
inc
xchg
fmuls
or
int3
imul
mov
cmp
jl
sti
xchg
xchg
ljmp
data16
push
or
jle
aaa
popa
xchg
clc
ffree
pop
stos
in
fwait
inc
fwait
iret
xor
sub
or
shlb
fildll
addb
jne
mov
std
pop
repnz
imul
pop
inc
popf
dec
mov
jecxz
movsl
test
mov
pop
divps
mov
gs
stc
xchg
xorl
or
mov
fwait
cmpsl
pop
loope
jmp
xor
repz
xor
ret
and
adc
fs
inc
sarb
dec
mov
add
into
mov
mov
in
into
arpl
pop
out
pop
cmp
lods
jb
lahf
dec
ficoms
daa
or
pop
fisubrl
je
push
cmpsb
adc
insb
cmp
dec
sbb
dec
sub
imul
std
mov
mov
jmp
lea
stos
xor
mov
fptan
ficoml
pushf
fbld
sbb
mov
stos
sbb
push
shlb
mov
add
clc
fldenv
sbb
xor
jb
in
sub
cli
xor
test
test
xchg
arpl
sbb
xchg
xchg
sbb
shlb
push
or
out
cmp
mov
into
ds
cmp
fisubs
push
lods
xchg
stos
sbb
mov
out
xor
and
pop
fwait
push
dec
int
imul
sarl
pop
jns
dec
sub
xor
lahf
dec
hlt
push
xlat
movsb
ret
cwtl
cmp
cltd
mov
sbbl
pusha
int
pop
pop
in
cmp
cmp
adc
jne
push
out
jle
cmp
xlat
sbb
push
adcb
aam
mov
inc
cmp
andb
das
mov
cmp
and
xchg
lds
fstl
mov
push
add
mov
repz
add
test
mov
sbb
jge
add
jno
dec
mov
iret
lock
mov
xchg
mov
aaa
xor
sub
sbbb
ljmp
decb
cmp
rol
sbb
mov
pop
cmp
adc
in
pop
sbb
cli
inc
adcl
sub
jne
mov
or
popa
rclb
pop
sti
das
mov
in
sub
xchg
mov
mov
mov
int3
dec
lds
push
xor
push
dec
in
xor
push
cmp
adc
mov
cli
rcrb
out
mov
pop
dec
push
ljmp
decb
sub
xchg
pop
xchg
aaa
push
pusha
sbb
dec
addr16
push
xchg
les
adc
adc
adc
mov
mov
stos
mov
ficoms
lods
or
inc
hlt
insb
add
xchg
fcomi
je
push
add
mov
push
cmp
add
mov
jnp
fisubrl
andb
bound
sub
mov
jmp
add
ss
sarb
xchg
outsl
sub
iret
je
adc
dec
cs
or
add
call
mov
sub
push
add
fstps
and
adc
mov
jg
ret
pusha
ds
test
or
mov
fs
call
push
lret
ds
push
movsl
std
push
adc
mov
dec
hlt
daa
add
call
push
bound
es
test
data16
dec
arpl
nop
fwait
dec
mov
nop
dec
ljmp
add
add
xor
repnz
dec
cmc
mov
mov
sbb
and
vpsravq
push
pop
pop
dec
movsl
xchg
outsl
pop
or
nop
orb
or
ss
push
cmovle
test
fcom
leave
ds
xchg
les
xchg
fdivp
stos
aad
in
je
pop
cwtl
jbe
inc
inc
push
aaa
pop
push
sub
ja
addr16
xlat
cs
mov
in
fs
cmpsl
lods
mov
inc
mov
rclb
cs
mov
sahf
adc
decb
jns
ss
test
out
into
push
or
xchg
repnz
xor
mov
pop
pop
test
test
cmc
out
aam
cmpsb
in
mov
inc
dec
dec
sets
xchg
roll
ds
loopne
aas
adc
fwait
aam
stc
rclb
cli
arpl
rcrl
idiv
inc
addb
mov
push
ficompl
inc
sbb
jae
ljmp
dec
out
xchg
pop
pushf
jno
inc
daa
imul
js
jge
in
int
dec
fsubs
aaa
in
mov
add
loope
or
mov
sbb
pop
lret
fldcw
outsl
enter
jmp
ret
or
or
lods
adc
mov
frstor
xchg
popa
add
mov
ljmp
jbe
dec
mov
inc
push
jo
cmp
pop
cmp
cs
iret
mov
sar
add
js
mov
xchg
mov
xchg
sbb
in
sti
mov
jmp
outsl
and
loop
xor
push
add
xor
pop
add
pop
mull
mov
test
mov
das
cmp
out
push
dec
bound
mov
out
pop
sbbb
dec
loopne
mov
nop
push
dec
xchg
aad
addr16
jmp
mov
scas
push
xorl
mov
mov
test
xor
jns
iret
sti
out
push
cs
xchg
add
ret
xor
rcr
scas
adc
mov
dec
mov
pop
fwait
test
aam
lahf
xchg
leave
arpl
cmpsl
mov
loop
data16
jmp
mov
mov
sti
insl
xchg
fdivl
popf
sub
cwtl
push
aad
out
push
shrb
mov
push
push
dec
clc
mov
je
dec
mov
and
mov
cmp
imul
and
cmp
sbb
int3
stos
dec
ficoml
adc
cmp
aad
mov
push
ds
das
mov
inc
mov
sbb
pop
pop
call
nop
outsb
sbb
or
imul
pushf
adc
movsb
repnz
xchg
stos
mov
mov
jno
mov
jbe
push
mov
call
aaa
sub
ljmp
call
cmp
mov
repz
or
lret
mov
lret
jnp
cmp
lds
pop
dec
pop
mov
mov
dec
in
mov
xchg
cli
mov
call
mov
imul
push
ds
mov
inc
in
stos
int3
jns
flds
in
fstp
mov
bound
frstor
jo
les
rorl
and
fcompl
jle
aad
jae
fldl2t
mov
insb
jg
dec
je
mov
arpl
sub
xchg
movsl
sub
xor
imul
and
fiaddl
aad
adc
jo
lods
ret
sbb
adcl
lret
out
add
dec
jae
insl
int3
push
mov
lahf
mov
mov
adc
jbe
sub
popa
insl
icebp
mov
xchg
fdivs
push
xchg
fadd
and
cmp
mov
fst
xor
and
dec
inc
xchg
mov
add
je
jne
sbb
fdivrl
mov
add
cmp
fcompl
loope
pop
mov
jns
int3
icebp
cmp
inc
fwait
xchg
adc
stc
xor
ljmp
mov
push
aad
out
mov
push
in
and
jno
push
mov
lea
pop
shrb
mov
push
mov
testl
mov
dec
jnp
test
loope
or
or
icebp
or
cwtl
lock
cmp
repz
lahf
jecxz
lcall
dec
fcoms
mov
pop
and
jmp
ret
xor
adc
popl
cmp
ds
hlt
es
inc
dec
xchg
popa
shll
adc
xor
jg
push
pop
jo
frstor
push
or
pop
pop
or
fucomp
jmp
cmp
fs
push
sbb
mull
aaa
data16
pop
pushf
sbb
cwtl
sbb
in
pusha
fisubs
or
stc
or
mov
mov
xchg
cmp
daa
lods
leave
hlt
orl
lret
pop
xchg
pop
out
mov
or
leave
mov
out
pop
dec
pop
lret
sub
inc
out
sbbl
stos
inc
imul
out
outsb
imul
in
mov
lock
mov
je
mov
cmp
jle
test
mov
out
inc
es
test
out
in
dec
jae
sarb
mov
insl
rolb
divl
push
sub
mov
push
aas
pop
pop
and
push
ret
outsb
inc
lods
inc
cwtl
pop
sbb
repnz
in
cmp
xchg
test
inc
rorl
push
xchg
movsb
fs
adc
mov
lods
sbb
je
or
dec
xchg
sub
inc
jmp
sbb
cmp
jbe
cmc
push
mov
and
cmp
sbb
and
js
mov
insl
add
xchg
push
pop
xor
add
lea
xor
loope
jmp
je
ret
cmp
shrb
dec
pushf
fcompl
xor
pushf
cmpsl
pop
rcrl
lea
fnstenv
lds
sbb
add
daa
mov
bound
out
sbbb
out
sub
pop
add
xor
iret
xchg
addl
sub
adc
and
xchg
repz
add
out
pop
xor
ljmp
shrb
dec
jmp
dec
ds
jnp
cmp
or
pop
xor
fmull
mov
and
jo
pop
fsubrl
push
or
mov
popf
nop
mov
out
loope
jbe
movsl
mov
repz
lcall
cwtl
insl
mov
adc
and
mov
popf
sahf
in
test
cmp
repz
bound
inc
fisubl
fwait
out
xor
rclb
test
push
mov
stos
mov
mov
push
gs
test
xchg
sub
das
dec
movsb
int3
xchg
lock
sbb
xor
cmpsl
loopne
ljmp
aaa
orl
mov
push
push
push
nop
mov
xchg
fsubs
mov
jl
in
push
dec
scas
dec
rclb
cltd
inc
jnp
pop
pop
xor
sbb
addr16
fcomps
cmp
jle
inc
push
push
arpl
into
in
sub
sub
insl
cmp
test
int
or
fsubrl
daa
rorl
out
jae
pop
adc
movsl
roll
push
out
pop
xchg
sbb
das
sahf
lret
fcompl
outsb
stc
dec
and
push
xor
add
mov
iret
inc
fwait
stos
es
sbb
push
out
push
push
push
ret
out
sub
inc
int3
xchg
addr16
inc
xor
sub
out
jmp
icebp
fcmovb
jg
les
outsb
sub
adc
dec
decb
lcall
subl
add
and
loopne
sub
adc
pop
cwtl
xchg
mov
cld
jmp
loope
pop
mov
ds
jg
roll
arpl
imul
jo
in
dec
outsl
ja
cmpsl
xchg
pop
loope
xor
pop
push
sbb
cs
imul
jecxz
pop
pushf
and
cmp
in
fsubs
int
jno
cwtl
dec
repnz
sbb
add
push
mov
test
je
mov
pop
and
mov
mov
cmc
cld
dec
nop
pop
sub
xor
iret
dec
mov
adc
repz
jo
jo
loope
ds
jmp
and
cmp
xchg
mov
push
hlt
loopne
dec
std
add
imul
dec
movsb
scas
lret
dec
test
arpl
jns
pop
prefetch
or
scas
cmpsl
mov
jb
adc
sbb
inc
sbb
sarl
sbb
xor
xor
cmp
push
mov
clc
add
shr
xchg
repz
ja
sarl
or
loopne
lcall
movsb
dec
outsl
dec
pop
adc
push
clc
mov
lcall
leave
mov
xchg
xchg
nop
fsubrl
mov
xchg
cltd
movsl
daa
and
push
fs
mov
cmc
int3
sub
movsl
rcrb
idiv
lods
sbb
mov
lahf
mov
daa
jb
bound
iret
sbb
sti
clc
aaa
out
mov
jp
cmp
lcall
jecxz
cmp
addr16
mov
or
leave
mov
outsb
andl
push
and
jne
mov
sbb
ljmp
xchg
pop
jmp
push
push
stos
fwait
inc
imul
inc
sysexit
pop
adc
inc
mov
mov
jecxz
fwait
or
sub
or
or
mov
mov
nop
cld
ds
xorb
pop
pop
add
pusha
popa
sub
xor
cld
leave
stc
jmp
dec
loope
das
sbb
jecxz
inc
xor
loope
idivb
xchg
xor
loop
push
ret
ljmp
stc
test
movsb
jae
and
cmp
test
outsl
jbe
inc
stc
inc
out
rolb
insl
orb
sub
inc
shlb
ror
pop
sub
iret
push
push
or
and
pushf
inc
test
inc
lods
fnstsw
in
jge
and
mov
in
sbb
iret
jne
adc
jmp
xlat
out
jg
sub
std
push
xchg
jmp
add
jecxz
sub
sub
push
pop
repz
jb
cli
stc
insb
out
orb
fs
jle
adc
adc
adc
ljmp
call
jp
shl
aas
xchg
lds
push
xor
pop
out
aam
imul
pop
lahf
xchg
pop
lea
adc
sti
out
sahf
dec
push
jl
lock
adc
aam
and
xchg
xor
in
and
jmp
sbb
mov
ljmp
mov
fs
adc
jnp
imull
push
popa
repnz
insl
ja
pop
jecxz
or
cmp
cmp
imul
pop
cmp
mov
outsb
mov
xlat
mov
outsb
mov
sub
push
xchg
xor
hlt
das
sub
xchg
cmc
jo
mov
sub
mov
cmp
mov
jg
lods
imul
xor
mov
push
xchg
mov
add
xchg
or
push
mov
and
cli
aaa
adc
in
push
test
pop
loope
dec
inc
rcll
xor
enter
leave
pop
comiss
xchg
lea
push
data16
call
fwait
adc
push
pop
cmp
mov
sahf
jle
pushl
adcl
dec
loope
push
aad
aam
cltd
xlat
lcall
cmp
int
lahf
xchg
lock
cmp
ficoml
ss
jae
push
notl
inc
ret
dec
repnz
cltd
test
pcmpeqb
mov
push
sahf
mov
cmp
adc
inc
dec
add
filds
cmp
int3
cmp
jae
dec
sub
pop
pop
aam
test
int3
jecxz
je
inc
nop
dec
lds
out
xlat
cwtl
fs
mov
sub
xchg
aas
stos
ret
sahf
pop
stos
push
and
fisttpl
xchg
xchg
jmp
cld
push
add
call
movsl
add
mov
push
orb
add
or
cmp
inc
push
inc
leave
or
icebp
sarb
int3
lcall
outsb
pop
fwait
jns,pt
add
repz
fsubs
mov
cmpsl
mov
in
and
cwtl
enter
xor
push
push
sub
mov
sub
out
cmp
adc
das
fimuls
gs
lds
add
getsec
xor
loopne
cmp
xchg
inc
inc
sub
or
and
cmc
cmp
int3
shll
and
lcall
leave
lock
xor
rclb
lret
pushf
jmp
stc
fsubrl
dec
cmp
push
push
mov
or
cmp
loop
mov
rclb
insl
and
daa
je
and
rcl
aaa
add
mov
xor
lods
and
movsb
fs
pop
popf
xchg
jae
inc
mov
sbb
jnp
lods
sub
je
adc
rclb
mov
jae
push
lret
dec
mov
xchg
dec
enter
and
enter
sbb
scas
cmp
pop
sti
testl
inc
add
add
pop
pop
inc
push
stc
xor
or
push
les
or
xlat
inc
aam
scas
in
ret
cltd
mov
push
pop
xchg
mov
in
cmpb
xor
and
jne
aaa
push
cmpsl
repz
sbbl
dec
gs
mov
cli
sub
mov
test
xchg
shl
push
shll
jg
outsb
or
js
roll
out
mov
cwtl
and
jmp
xchg
push
xchg
sub
into
test
lret
ret
mov
test
push
push
in
fsubs
mov
or
imul
lcall
xor
adc
bound
sub
mov
xchg
mov
xchg
mov
cwtl
ljmp
int
and
pusha
in
xor
xchg
mov
jnp
push
ret
fnstsw
xchg
sbb
jl
les
mov
pop
enter
and
xrelease
add
imul
loope
addr16
or
inc
sbb
sub
cli
add
sti
rcll
clc
repnz
js
jae
lret
pusha
fmuls
jbe
gs
test
and
mov
popf
call
jae
loopne
jmp
dec
push
mov
pusha
pop
push
mov
adc
xchg
dec
xor
mov
pop
dec
cmp
aaa
push
xchg
divl
or
cmp
out
xchg
push
pop
mov
icebp
jmp
mov
pop
pushf
outsb
fcoml
fcoms
mov
popf
and
xchg
sub
or
cltd
pop
dec
sub
adc
addb
mov
sahf
jl
sahf
jbe
cld
flds
xor
mov
call
cmpsl
sub
gs
cmp
jae
cmp
inc
inc
xorl
out
jno
insb
into
or
mov
adc
test
dec
mov
cmp
fidivrl
mov
pop
ret
out
push
and
push
lahf
arpl
mull
push
out
pushf
or
icebp
mov
inc
sti
insb
adc
std
adcb
test
insl
ret
out
adc
mov
pop
add
push
push
pop
leave
cmc
iret
sub
test
adc
lahf
inc
push
out
loop
cmp
lahf
cld
repnz
ret
lret
dec
push
mov
pop
cmpsb
push
lahf
lds
js
sub
out
jecxz
xor
lods
insl
dec
lahf
loopne
dec
xlat
mov
adc
sub
pop
pop
das
mov
hlt
sub
jle
cmp
push
xor
jg
jne
shl
xchg
adc
aad
test
outsb
test
ficomps
ljmp
adc
test
pop
mov
mov
popf
mov
add
inc
mov
sub
mov
sub
test
inc
push
mov
ds
push
pop
push
aam
jno
dec
mov
mov
xor
add
and
push
int
pop
sbb
in
jnp
or
outsb
push
popf
mov
lcall
add
adcl
jge
in
pcmpgtb
jbe
gs
xchg
mov
mov
cs
in
cld
jg
push
icebp
stc
sub
push
popa
xor
mov
aaa
adc
xor
jo
xor
xchg
or
jb
out
cmp
push
fstpl
xor
inc
jp
sub
shll
pop
test
mov
addb
mov
add
clc
arpl
insb
pushl
mov
adc
add
pop
mov
add
sbb
xchg
jmp
xlat
xchg
shrb
test
repnz
xchg
xchg
lods
imul
cwtl
test
pushf
xchg
repnz
inc
cmp
outsb
sbb
pop
out
sbb
cmpsl
das
test
pop
inc
push
mov
mov
js
push
jmp
jge
stc
stos
shll
push
sarb
jne
dec
mov
sub
pushf
jle
pop
xchg
mov
xchg
push
sarb
aad
mov
xorl
xchg
ret
xor
pop
and
mov
xlat
inc
mov
sarl
sti
imul
lea
pusha
xlat
imul
or
cld
addb
enter
or
or
cli
sbb
mov
cwtl
adc
mov
ret
or
fldcw
jecxz
shlb
gs
xchg
sub
sub
data16
shll
shrb
mov
jne
sub
adc
in
cmpsb
outsb
fcmovnu
leave
pushl
fwait
stos
mov
fadds
repnz
loope
xor
in
pusha
into
or
add
xor
fcompp
jl
mov
add
aas
xor
addr16
or
jb
and
subb
imul
lret
cmpsl
jl
lea
adcl
dec
pop
enter
push
push
pop
and
aaa
mov
pop
cmpl
sub
enter
andl
loop
or
mov
fidivl
dec
fsub
rol
sub
iret
push
pop
and
into
fcmovnb
push
cld
inc
push
mov
sub
clc
and
lcall
cli
jmp
adcb
out
shll
mov
roll
pushf
gs
call
mov
lcall
xor
fwait
adc
sub
push
fidivrl
add
inc
pop
xor
rclb
sub
test
inc
mov
push
loopne
mov
cmpb
xchg
dec
pop
clc
sub
jbe
xor
cmp
imul
sub
arpl
repz
rcrl
sub
sbb
das
xchg
push
outsl
call
dec
push
and
mov
adcb
adc
shrb
test
xchg
lea
mov
jo
or
add
popl
push
push
and
es
imul
cmp
adc
gs
jg
sbb
lret
dec
lea
inc
stos
xlat
stos
adc
aam
dec
mov
imul
xchg
sub
mov
ret
imul
cmc
int
lcall
insb
lds
push
inc
imul
dec
xor
adc
sbb
es
test
or
gs
js
sbb
js
sbb
push
stc
or
mov
inc
ljmp
das
fldenv
test
xchg
mov
fisubs
jmp
or
mov
sbb
jnp
dec
xchg
sbb
stc
inc
popf
cmpsb
jp
mov
loopne
stc
or
gs
into
mov
mov
mov
leave
mov
xchg
push
stos
xchg
sub
movsl
jne
div
testl
popa
fldt
mov
scas
ds
push
cld
iret
mov
lea
shll
mov
adc
inc
add
mov
lcall
sti
sub
push
push
pop
xchg
ret
aam
clc
xchg
jns
inc
cltd
xlat
shlb
or
push
pop
enter
and
push
xor
test
out
inc
sub
cmp
adc
lahf
cmc
cwtl
call
gs
dec
fxam
shll
xchg
add
ret
xor
mov
cli
or
sub
or
xchg
orl
mov
jno
dec
push
and
xchg
dec
dec
xor
iret
call
cltd
or
or
xchg
inc
bound
xchg
push
push
movsb
lock
mov
lock
out
jo
push
pop
sub
iret
shll
push
loope
push
sub
outsb
stos
ss
jns
jmp
mov
aas
dec
dec
xchg
rol
pushf
jbe
mov
lods
push
scas
or
fbstp
xor
dec
xor
pop
push
aam
dec
aam
xor
roll
sub
popa
cli
pop
sub
inc
test
dec
mov
jnp
je
xchg
cmp
mov
lcall
xchg
xchg
xchg
xchg
jmp
pop
cli
push
sub
test
in
dec
jne
jmp
sbb
enter
int3
sbb
jg
jne
push
pop
test
pop
rcr
or
cwtl
jb
dec
inc
lret
cmp
cli
cwtl
scas
sarl
push
in
add
mov
popf
insl
inc
clc
dec
lahf
insl
out
jne
fwait
movsl
fs
sarb
push
adc
and
pop
ret
mov
mov
int3
push
shrl
and
sub
xor
lock
add
inc
data16
adc
ja
in
roll
sbb
pop
cs
jne
mov
pop
pop
mov
and
bound
and
pushf
xchg
cmpsb
dec
shr
dec
xchg
sub
js
out
sub
and
pop
in
fistps
inc
clc
jbe
sub
xchg
outsl
out
movsb
jno
cwtl
fiaddl
scas
push
push
jne
and
pop
int3
sub
adc
dec
sub
sbb
dec
test
clc
dec
hlt
data16
lcall
cmpsb
push
sbb
outsb
add
jnp
outsb
mov
stc
jo
inc
or
cmpsl
sub
rcll
mov
pop
push
testb
sti
pusha
push
mov
out
jl
dec
dec
or
push
scas
adc
sub
cmc
mov
xchg
dec
ja
ja
mov
dec
xor
cld
leave
pop
inc
mov
pop
sbb
popf
jl
call
movsl
not
loopne
sbb
mov
sub
rclb
jecxz
dec
nop
mov
daa
ss
and
mov
mov
cs
insb
in
rcrl
xchg
mov
mov
inc
push
or
fildll
jp
xor
and
jp
or
aam
inc
push
push
add
repz
xor
insl
scas
ds
mov
cmp
lret
xlat
lods
pop
movsl
mov
add
cmp
or
mov
je
pop
xlat
cmp
jp
pop
hlt
jne
sbb
mov
js
push
mov
cmc
xchg
nop
aas
adc
mov
push
add
sub
nop
pop
xor
dec
ss
out
adc
ja
in
inc
insb
pop
ret
cltd
mov
adc
mov
icebp
loop
adc
mov
add
cwtl
fimull
fildl
adc
sbb
jno
adc
mov
out
mov
pusha
fwait
add
test
jle
aas
lahf
jnp
outsb
js
addr16
arpl
shl
and
jo
daa
mov
jb
fistpll
popf
ss
xor
pop
je
in
outsb
iret
in
jno
neg
shll
rcll
jl
sbb
inc
jne
cltd
shr
sbb
cmpsl
and
mov
cmp
arpl
cmpsb
and
push
cmp
jns
sub
jne
les
xchg
ja
inc
cmc
imul
jle
xlat
jo
jno
cltd
mov
push
es
or
pop
into
mov
fists
cltd
cmp
xlat
jbe
xor
mov
jnp
mov
shl
and
stos
jmp
cld
clc
lahf
popf
fcmovb
fnstcw
ja
mov
inc
inc
xchg
ljmp
negl
scas
and
jl
ja
int3
dec
add
adc
stos
mov
inc
aad
pop
rcrb
and
test
js
imul
lcall
cmc
xchg
in
leave
lret
stos
rorl
and
pop
and
test
xchg
add
xchg
cmp
outsl
and
mov
push
push
fmul
dec
xor
lea
je
xchg
scas
fcmovb
sahf
and
adcb
cmpl
push
jne
aam
or
in
pushf
xchg
outsl
or
imul
pop
icebp
pop
rolb
add
lea
inc
jnp
pop
pusha
mov
aaa
dec
cmpsl
cmp
lret
cmp
jge
xor
stc
jg
jbe
pop
daa
adc
jp
jb
mov
jne
ja
stos
fmuls
repz
push
sahf
push
adc
call
jnp
in
outsl
fldcw
xchg
mov
jne
xlat
pop
shll
cmc
sbb
push
cmp
rolb
int3
mov
jbe
andl
mov
jno
loope
mov
aam
icebp
sbb
shlb
mov
fadds
insl
pushf
test
shrb
mov
bt
and
dec
fwait
push
ja
pop
dec
insl
dec
inc
sbb
and
mul
mov
mov
sti
out
pop
cli
testl
lcall
mov
or
xor
xchg
jge
jmp
cmpsl
inc
mov
or
pop
xor
sarl
ror
mov
dec
call
inc
in
cs
mov
insl
and
pop
inc
jg
jp
mov
lahf
sub
jg
jecxz
push
aam
stos
push
mov
mov
mov
jg
sahf
ds
cmpsl
xchg
mov
out
mov
shlb
lahf
mov
hlt
jmp
mov
sub
pcmpgtw
mov
mulb
sub
xchg
ret
pushf
or
addr16
in
xchg
adc
rcrl
ds
sbb
mov
xor
sbb
jno
fldcw
mov
test
mov
cmpl
push
xor
pop
add
jns
cmp
lcall
fnstcw
inc
bound
sub
aaa
jne
and
inc
jmp
aad
xlat
xchg
mov
or
fcomp
in
xchg
mov
jno
scas
dec
mov
jnp
pop
push
lods
cmp
mov
or
sbb
xchg
lcall
in
test
pushf
inc
or
mov
push
mov
popf
push
and
shll
mov
mov
adc
and
adc
jns
and
jmp
add
addr16
and
push
xchg
outsl
sbb
addl
movmskps
mov
add
int3
mov
sub
arpl
fidivrs
jb
or
cmpsb
clc
repnz
daa
rcrb
mov
adc
lock
popf
lods
data16
dec
sub
pop
in
test
ds
pop
jb
add
call
or
mov
mov
mov
inc
cld
arpl
cwtl
leave
adc
adcb
mov
pop
dec
out
mov
out
repnz
xacquire
push
adc
jbe
jae
jns
arpl
sub
outsl
out
jmp
cmp
ds
dec
pushf
sub
and
xor
xchg
icebp
repz
aad
adc
or
sbb
fistpl
ss
test
mov
mov
pop
cmp
aad
jns
pusha
inc
es
mov
lret
loopne
iret
ret
push
clc
mov
cmpl
sub
imul
jecxz
push
mov
inc
mov
repnz
jg
sarb
mov
cmc
adc
jnp
cwtl
sbb
mov
and
pop
push
sahf
loope
cmp
adc
push
outsb
mov
and
loopne
les
js
mov
sahf
aad
pop
jmp
iret
js
into
movsl
jo
xchg
iret
jns
lods
pop
mov
in
or
push
outsb
cs
cmpsl
add
scas
inc
and
repz
pop
pop
and
add
add
faddl
dec
mov
and
out
add
dec
fwait
sub
xor
mov
lods
cmc
shrb
andl
sbb
mov
push
mov
iret
std
mov
jb
iret
mov
pop
jg
fbld
cmc
push
jg
call
addr16
inc
fisubrl
out
int
cwtl
sbb
or
sti
jbe
ljmp
repz
xchg
addb
loopne
lods
and
std
jmp
sbb
imul
in
lahf
pop
xor
mov
cmpsl
adc
adc
mov
into
cmp
jns
out
pop
int3
stc
adc
orl
fisttpl
sbb
push
xor
cmp
jae
movsb
push
insb
cld
or
mov
cmp
ret
movsl
inc
lret
jo
push
push
add
lcall
aaa
xchg
adc
mov
jb
ljmp
pop
incb
pop
add
lret
fwait
mov
cmp
lcall
xchg
pop
sub
incl
out
push
insl
jmp
inc
dec
lea
mov
dec
xlat
mov
mov
pop
leave
js
pop
je
mov
arpl
push
xchg
imul
leave
hlt
or
lds
ss
push
add
arpl
pop
and
lock
ja
ret
shll
fs
in
pop
jne
pop
bound
pop
mov
pushf
subl
push
jl
cs
les
dec
gs
jecxz
lcall
push
push
add
ss
test
in
mov
sbb
bound
lret
mov
inc
cmc
xlat
jns
add
mov
out
add
ret
sub
shl
push
and
lret
push
mov
and
add
mov
add
mov
inc
fldenv
push
in
push
rcr
jnp
add
xchg
loop
xor
dec
inc
lds
jae
mov
scas
jg
clc
fwait
mov
ss
int3
dec
insl
addr16
mov
int3
lret
fisubl
aas
shrl
ja
push
add
jle
dec
sub
inc
mov
cld
mov
andb
jns
pusha
and
sbb
sub
adc
xchg
jnp
push
xor
stos
mov
pop
dec
aas
add
pop
xchg
pop
nop
xor
outsl
vpmacssdd
inc
movsb
sub
popf
mov
repz
sbb
ja
sahf
rcrb
dec
sbb
pop
fidivs
xor
hlt
arpl
mov
out
in
div
push
or
scas
push
pop
or
outsl
push
sahf
data16
add
and
mov
mov
loope
cmc
xor
fisttps
jns
pop
pop
imul
mov
flds
pop
push
pop
in
sbb
sbb
test
iret
outsl
lods
xor
aas
and
pcmpeqb
mov
ret
inc
in
dec
loopne
lcall
xchg
push
and
jnp
pop
sub
mov
test
test
shr
out
jns
lret
ljmp
fdivs
pop
push
mov
aaa
push
adc
mov
std
jne
fcompl
mov
insb
adc
xor
bound
mov
mov
add
mov
fsubrs
mov
inc
jmp
mov
test
cld
xchg
test
adc
fmuls
enter
adc
arpl
xchg
iret
cmp
xchg
call
out
lock
xor
xor
lea
pop
pushf
fdiv
idivl
pop
inc
mov
xchg
push
xor
jmp
jnp
push
push
scas
dec
sub
test
xchg
push
scas
shrb
sub
rcrl
lret
sbb
sub
xlat
pop
and
mov
ffree
mov
scas
lret
push
xor
outsl
dec
faddl
pop
mov
add
fsubp
lock
js
push
arpl
mov
mov
iret
xchg
add
stos
int3
popf
std
xchg
sbb
jmp
repnz
mov
fs
dec
cmc
jge
test
mov
arpl
jb
inc
or
or
add
push
out
cmp
add
clc
dec
cltd
mov
jns
mov
inc
push
dec
jmp
cs
sbb
sbb
dec
cmp
testl
xor
push
jno
push
jge
jl
mov
enter
or
adc
scas
add
or
enter
std
sahf
andl
aam
xor
das
push
adc
jecxz
arpl
les
lods
stos
test
and
cmp
clc
mov
xor
sti
pop
jge
popf
and
sub
dec
cwtl
in
jmp
mov
popa
xchg
push
test
test
lahf
stos
in
pop
push
aam
bound
pop
jbe
int3
into
in
dec
std
adc
mov
arpl
out
xor
add
data16
or
xchg
mov
pushf
arpl
pop
test
pushf
cmp
notl
notl
neg
mov
jbe
test
xchg
sub
nop
pop
xor
pop
repz
sbb
mulpd
pop
mov
lret
push
fmull
xor
gs
pop
add
mov
out
icebp
mov
xchg
and
sub
cmp
push
add
icebp
out
add
inc
mov
xor
outsl
sbb
stc
xchg
sbb
loopne
jg
xor
mov
xchg
adc
in
push
and
jb
aad
repnz
push
jl
xchg
jmp
rcrb
push
adc
and
pop
and
push
aam
cmp
push
fwait
sarl
mov
sbb
inc
cmpsb
call
cmpsb
lcall
or
inc
inc
lea
pushf
sub
dec
lret
ss
insb
jle
sub
xchg
cmp
fildll
jb
push
call
mov
sub
jb
bound
push
push
sub
cmp
in
lret
je
daa
clc
cmp
jbe
mov
faddl
dec
mov
and
pop
add
inc
pop
mov
fidivrl
jge
xor
mov
movsl
push
push
sbb
lret
add
sub
scas
jl
hlt
xchg
mov
ss
cltd
add
jns
js
pop
fists
insb
into
sti
into
out
cmpsb
icebp
xor
outsb
repz
sbb
sub
inc
cmp
lock
and
scas
mov
imul
push
jno
add
mov
xchg
cmp
and
mov
jle
test
cmp
jle
std
pop
jne
es
and
pop
int3
je
xchg
jge
aad
pop
fwait
jle
adc
pushf
dec
or
mov
sbb
out
lcall
sub
push
mov
cwtl
mov
mov
adc
cmc
ds
xchg
punpckldq
into
aas
in
inc
sbbb
repz
call
imul
lahf
sub
scas
sub
out
test
inc
cmpsb
repnz
or
xor
jmp
getsec
out
or
jbe
push
mov
loopne
addr16
sub
sub
bound
push
xchg
ja
push
rolb
sub
mov
pop
lret
xlat
or
ja
loope
dec
lret
sub
xchg
outsl
into
or
subl
sahf
std
add
out
push
inc
mov
jl
pop
cmp
cmp
stos
xor
arpl
movsb
cmp
jecxz
shr
push
fimull
xor
test
pop
xor
lds
xchg
and
pop
insb
jnp
dec
sarb
xor
data16
add
cmc
cltd
in
adc
das
aad
pop
jae
adc
mov
sub
inc
and
ds
jle
aam
mov
lods
mov
hlt
jbe
jl
pop
lahf
fdivr
test
test
addr16
int3
stc
es
pop
lcall
jae
inc
inc
xlat
sbb
inc
ss
mov
bound
jl
daa
inc
push
jge
push
fstps
xor
arpl
je
mov
nop
iret
ljmp
int
enter
cmp
test
mov
xchg
dec
xchg
jb
adc
fildl
or
add
into
sti
inc
mov
es
push
fyl2xp1
and
push
into
stc
pop
rorl
cmpsb
je
sbb
loope
lret
cmpsl
stc
scas
sbb
out
xchg
faddl
jmp
dec
cmp
pop
ficomps
add
push
sub
mov
ret
dec
mov
aam
or
jne
mov
mov
lahf
jbe
dec
sub
mov
push
test
push
in
fucom
imul
sbb
das
das
pop
mov
cmp
loopne
fmulp
shll
insb
jb
hlt
mov
pop
push
cs
nop
movsb
push
add
mov
leave
dec
inc
andb
add
jmp
mov
inc
pop
push
push
arpl
adc
add
or
mov
je
jl
xchg
jnp
in
push
fldl
cmp
loopne
adc
dec
dec
into
mov
into
stc
push
push
fwait
stos
out
sub
dec
movsl
mov
adc
mov
lret
dec
push
lcall
lock
rclb
subl
lds
aas
sbb
mov
sub
rorb
movsl
fadds
in
std
and
rcrb
out
inc
outsl
cmpsb
cmpsb
jge
xchg
pusha
imull
call
xchg
mov
sbb
fisubrl
imul
out
pop
mov
cli
pop
icebp
daa
mov
sbb
ljmp
adc
js
popa
inc
sbb
dec
rorl
jmp
xchg
pusha
dec
mov
insb
inc
sub
mov
les
add
lock
jne
mov
orl
push
add
xchg
jge
stc
xchg
push
mov
xor
repz
xor
orl
cmp
popl
and
jge
mov
ja
aam
or
cld
jl
int3
mov
loope
sahf
es
jae
cs
ficoml
std
jne
iret
mov
add
add
add
scas
sbb
mov
fstpl
ficoml
out
pop
popa
iret
mov
xor
stos
cwtl
int
jo
or
xor
pushw
and
outsl
mov
lahf
sub
fdivrl
inc
sub
mov
scas
stc
lock
jb
jp
pop
les
cmpsl
and
jae
pop
pop
dec
and
and
bnd
ret
test
shr
mov
inc
sbb
fs
test
jmp
xchg
sub
fisttpll
fbstp
stos
and
out
push
fildl
je
mov
loope
repnz
ds
pop
js
mov
sbb
lea
or
pop
jp
pop
xchg
loope
or
cmp
dec
mov
lret
mov
mov
stos
in
mov
ljmp
filds
nop
out
push
and
repnz
mov
cwtl
xor
shrl
xor
test
mov
and
mov
cmp
in
and
mov
cmp
daa
mov
repz
inc
test
test
lods
sbb
add
mov
rorb
shll
out
mov
fs
mov
ret
int
mov
push
jl
les
lahf
loopne
jge
pop
xor
mov
inc
jle
inc
mov
adc
and
xor
push
test
push
insb
and
fsubp
mov
das
out
xchg
xchg
add
fwait
jmp
daa
xchg
mul
mov
gs
or
cmpsb
sbb
and
fimuls
call
ret
sbb
scas
pop
jne
test
mov
jae
pop
lret
add
cli
xchg
cmc
sti
in
jmp
mov
sbb
xor
lock
xchg
add
dec
fdivs
movsl
mov
lock
jns
js
cmp
clc
adc
shl
cli
mov
cmpsl
std
lret
and
jno
ds
sbb
cmp
mov
fisubrl
imul
insl
aad
pop
int3
and
mov
lea
scas
and
add
dec
sbb
mov
jmp
outsl
loope
cmp
inc
inc
push
js
mov
xchg
cmp
hlt
xchg
out
cmp
pop
jne
and
cmpsl
lea
jecxz
and
outsb
out
adc
and
shr
inc
cld
stc
les
lods
or
pop
rorl
xor
enter
cmpsl
addb
mov
jmp
cmc
add
mov
repz
in
pop
cmp
and
lahf
cmpsl
xchg
mov
mov
nop
sub
popaw
cmpsb
js
push
sti
inc
add
repz
out
xchg
daa
dec
into
aam
dec
and
hlt
xorb
mov
xchg
faddl
outsl
inc
fsubl
int
in
mov
movsb
xchg
pop
or
andb
pop
into
lret
sub
or
test
jecxz
push
aad
jmp
lret
ret
popa
xorb
sub
push
sub
jmp
aaa
add
mov
out
mov
push
je
pop
lock
push
pop
mov
bound
fsubr
test
int
mov
outsl
or
add
in
jecxz
and
sbb
testl
pop
push
xchg
shlb
jmp
pop
mov
movsl
or
mov
daa
jg
ror
jne
mov
jbe
rcr
in
pop
imul
fs
and
adc
and
cmp
jp
xchg
mov
sbb
loop
dec
xor
pop
call
pop
xchg
lds
pushf
dec
mov
in
inc
cmp
jne
fcomps
aaa
out
sbb
cmp
bound
jecxz
ret
jne
inc
fs
mov
add
rorw
pop
pop
adc
vmwrite
into
nop
nop
cli
dec
aam
pop
lea
lock
pop
jle
inc
mov
ficomps
idiv
std
shrb
stos
jmp
pop
imul
leave
sbb
push
into
inc
ja
jbe
sub
jnp
ss
push
shll
sahf
mov
mov
inc
js
pushf
add
inc
add
pop
sub
pop
add
adc
xchg
xor
push
in
lods
fwait
and
or
mov
bound
add
lcall
sub
or
fs
fwait
pop
lods
cmp
or
adc
xchg
fdivr
inc
scas
mov
aad
cmc
and
cmc
cld
insb
mov
sti
jo
pop
pop
test
std
fs
jmp
lret
sub
stc
call
and
push
pop
flds
sarb
in
sbb
ret
in
jo
cwtl
mov
xor
sbb
sbb
sbb
mov
je
lret
iret
call
dec
mov
les
loope
adc
sbb
jnp
ret
and
lods
cmp
lock
xor
movsb
not
jg
cmpsl
push
jne
leave
inc
decl
addb
add
mov
sub
pop
pop
imul
int
jg
adc
inc
or
push
add
fldt
xor
into
mov
ljmp
lret
inc
stos
cli
jle
lea
cmp
cmpsb
movsb
iret
ds
cmpl
lcall
ficoml
pop
imul
orb
xchg
adc
cmp
inc
cmp
push
add
lea
dec
pusha
fs
mov
fwait
mov
dec
leave
dec
mov
pusha
push
imul
inc
fmulp
jae
movsl
sbb
js
out
xor
mov
dec
sti
cmp
imul
sbb
push
int
lea
xchg
fcom
hlt
fisubrl
push
clc
xchg
cld
hlt
mov
sub
push
jecxz
cmp
xor
in
and
ljmp
shll
add
sub
bound
inc
or
nop
ds
cmp
xchg
addr16
xlat
and
add
or
mov
insl
das
push
mov
and
or
pop
imul
push
ret
scas
pop
into
rclb
mov
aas
push
pusha
inc
imul
mov
inc
add
jle
cld
popa
repnz
xchg
sub
inc
int
sub
out
cmpsl
sti
fcmovnb
jp
lcall
xchg
mov
outsl
add
sbb
leave
outsb
add
jns
xlat
and
xor
push
cmpsb
icebp
lcall
xchg
xor
clc
into
push
sbb
cmpl
xor
imul
cltd
xchg
mov
add
inc
fwait
addr16
jne
dec
inc
nop
pop
xor
pop
jae
loope
pop
pop
sahf
mov
pop
sti
and
and
fnstenv
shl
sub
rolb
xor
inc
out
pushf
and
std
or
xor
adc
bound
outsb
and
icebp
dec
add
orl
call
lea
outsb
subb
int3
cltd
pop
out
std
scas
iret
aas
jb
movsb
mov
aad
into
fdivr
xor
test
movsl
lahf
in
outsl
jmp
out
rcrb
lock
nop
jns
pop
repnz
jle
jbe
test
lds
push
jmp
test
xchg
and
or
mov
in
jle
loop
call
adc
insl
mov
dec
xchg
cmp
mov
cmp
jno
fdivrl
ja
or
ja
xor
sbb
stc
dec
lods
fbld
lods
push
lock
sbb
lahf
sahf
jmp
jb
mov
lock
outsb
rorl
test
cwtl
or
jbe
punpckhbw
add
fmull
sub
gs
enter
mov
xor
or
and
mov
loope
sub
inc
mov
push
call
sahf
out
dec
andl
aam
in
push
adc
pop
and
mov
sbbl
dec
les
fidivrl
aad
test
mov
aad
lods
mov
sub
sahf
nop
rcrl
insb
and
pop
lret
push
xor
lret
fdivr
out
fistl
mov
inc
aas
enter
repz
inc
push
sbb
addr16
inc
enter
imul
xor
cwtl
sbb
inc
pop
mov
lcall
xchg
aam
or
ja
mov
pop
adc
pop
jb
les
jns
xor
inc
mov
xchg
and
push
aad
bound
push
cmp
xchg
cli
add
std
pop
lret
inc
mov
push
push
sti
sbb
pop
mov
jbe
mov
sbb
mov
cmp
push
es
bound
stos
inc
das
cltd
out
cmpsb
sbb
add
pop
cmp
divb
inc
into
in
test
int
shlb
outsl
mov
push
jge
inc
jae
rol
cli
movsl
push
sbb
push
cmp
lahf
or
xchg
dec
stos
push
hlt
push
mov
adc
adc
repz
ljmp
into
testl
fsubrl
inc
jle
sbb
nop
fsts
pop
jne
push
add
cltd
jle
sbb
rcrw
ljmp
xor
pop
popf
adc
lcall
jnp
daa
adc
xor
lret
mov
inc
icebp
xchg
ss
mov
test
mov
push
add
jne
loope
inc
insb
cmp
sub
and
push
dec
out
lock
packuswb
push
push
push
sbb
pop
shrl
xchg
push
dec
sub
pop
shlb
in
pop
call
aas
subb
mov
scas
inc
xlat
shlb
andb
stos
pop
outsb
ja
iret
mov
xchg
jno
or
arpl
xchg
jb
hlt
sub
jno
lods
inc
iret
fsubs
imul
cmpsb
repz
pop
pushf
inc
mov
test
pop
fs
dec
iret
mov
xchg
and
mov
icebp
test
dec
mov
xchg
pop
fsubl
hlt
mov
cmp
je
ret
into
xor
fdivr
clc
pop
lahf
loop
xor
cmp
adc
repnz
sbb
bound
das
sub
sub
inc
sbb
mov
lahf
cltd
adc
lret
adc
push
dec
in
das
dec
inc
test
in
in
andl
les
pop
jl
mov
mov
loop
lret
int
lret
jp
out
pop
jne
sbb
sub
jg
mov
jecxz
in
sahf
sub
pop
les
sbb
pop
cmp
movsb
xor
gs
les
add
pop
out
xchg
or
push
jnp
mov
sub
xchg
add
mov
xlat
gs
orl
and
and
in
jne
xchg
icebp
pop
call
inc
inc
daa
int3
testb
icebp
int
loope
mov
stc
pusha
movsb
cltd
fdivl
mov
push
mov
nop
adc
pop
ja
add
pop
mov
fdiv
dec
dec
pop
aaa
add
push
jecxz
pop
lods
cmp
xlat
popa
lcall
cmp
outsb
pop
or
lret
cmp
pop
movsb
mov
push
cltd
rol
xor
add
cmpsl
or
stos
xchg
nop
lahf
das
jmp
vorps
pop
cmc
sbb
pop
inc
js
dec
inc
mov
loopne
fdivl
out
and
aad
sbb
roll
addr16
sbb
mov
neg
sub
negb
ljmp
sbb
push
adc
inc
pushf
push
and
test
xchg
pop
mov
jp
ret
jg
jnp
shl
inc
mov
jno
jnp
cs
mov
fdivr
loop
nop
int3
mov
or
fs
push
mov
mov
pop
sbb
mov
out
dec
rol
and
out
pop
es
int3
stc
jmp
cld
or
lret
add
or
lret
cmp
cs
loopne
mov
xor
dec
enter
in
mov
mov
leave
daa
cmp
out
dec
addb
mov
push
loop
inc
xor
xchg
push
in
inc
repz
mov
movsl
orb
loope
insb
xchg
xor
sbb
xor
cmp
cwtl
mov
jecxz
js
fnsave
mov
cmp
loope
mov
vmovapd
add
sub
jmp
loopne
jbe
sub
mov
cmp
adc
push
cmp
mov
adc
inc
pop
sbb
mov
pop
jno
or
jae
imul
addr16
cmp
ljmp
sbb
push
jg
jae
stc
jp
pop
pop
insb
cmpsb
xchg
mov
jb
mov
mov
sarb
sti
rorl
jg
lahf
jno
andl
inc
xor
rcll
fstpt
cmp
test
aad
and
mov
aam
adc
test
mov
dec
xchg
and
xchg
dec
pushl
test
add
mov
add
daa
std
mov
fsubrs
sbb
stos
or
popf
outsl
jbe
adc
je
xchg
mov
and
shlb
sub
pusha
mov
mov
hlt
cli
lcall
ret
lret
je
mov
stc
dec
and
and
mov
and
xchg
mov
xor
xchg
test
add
enter
mov
fs
stc
push
mov
sarb
lea
fwait
jp
xchg
xlat
mov
mov
icebp
pop
mov
fs
cmp
pop
sub
or
mov
ss
mov
lcall
cmp
rcr
xchg
adc
js
push
xor
mov
in
mov
das
xchg
mov
popa
pushf
ret
rorl
stos
pop
cmp
call
clc
jg
movsb
popa
cmp
in
fbld
or
add
fidivl
sbb
add
aaa
fwait
adc
push
and
fbld
pop
xchg
movsl
sbb
push
stos
cmp
mov
lret
xchg
ret
stos
pushf
stos
cld
adc
pop
out
xlat
jmp
fs
sub
fildll
jns
adc
addr16
shr
dec
adc
in
jp
hlt
adc
in
test
out
faddl
pushf
or
xor
or
inc
mov
xchg
cmp
and
push
mov
xchg
dec
int
imul
mov
bound
stos
or
cmpsl
cmp
xor
fldenv
push
aas
inc
sub
test
jecxz
and
push
inc
add
xlat
jnp
pop
pop
cmp
or
js
inc
int3
pop
gs
fsubrl
mov
lahf
mov
mov
idiv
sbb
sub
cwtl
cmp
adc
je,pn
xchg
test
rorl
popl
mov
stos
sub
fsubs
cs
mov
testb
inc
loope
cmp
or
into
mov
sbb
dec
xchg
ja
push
xchg
xor
out
dec
shll
jle
std
insl
inc
roll
aas
push
test
lret
push
pop
push
xor
xor
xor
jl
pop
test
mov
mov
xlat
ljmp
adc
or
lcall
stc
dec
das
mov
sub
popf
xor
fiaddl
mov
lds
insl
sar
jp
rolb
push
jns
or
and
hlt
clc
jno
lret
jnp
sbbb
sbb
insl
xor
das
sbb
dec
imull
hlt
xchg
xlat
out
cld
popa
stc
sbb
pop
insb
dec
xor
cld
push
ret
sbb
jmp
pop
insb
add
or
cmpsb
jle
mov
adc
jle
mov
push
cmp
int3
ds
loopne
add
sbb
mov
leave
sbb
daa
imul
mov
mov
jge
das
iret
cmp
cmp
adc
xchg
in
sub
push
mov
add
int
cmc
dec
loop
cmpsl
mov
pop
jmp
ss
movsl
jge
int
pop
das
pop
pop
sub
es
imul
fstp
mov
fwait
mov
imul
ja
adc
loop
push
mov
inc
cwtl
jmp
lods
and
push
xorb
dec
add
cli
loopne
enter
inc
repz
mov
pop
or
mov
pop
cmp
mov
cmp
lods
mov
inc
daa
outsl
sbb
les
xorb
shll
cmp
pop
out
test
sub
leave
xor
sahf
or
out
ret
rcrw
call
repnz
cmp
xor
iret
pop
or
insl
aas
push
mov
pop
cmp
mul
and
stc
mov
int3
dec
push
mov
ss
arpl
and
lahf
rol
jle
hlt
cmpb
xchg
pop
push
pop
arpl
es
adc
imul
in
mov
or
cmp
aad
es
push
inc
inc
and
icebp
lcall
pop
idivl
mov
xor
add
xchg
jbe
sbb
icebp
mov
imul
cmp
repz
sti
test
push
xchg
adc
and
icebp
lea
nop
inc
out
popf
sub
cld
and
mov
or
mov
xor
sarb
jo
jle
and
lahf
xchg
insl
xor
jl
and
jno
stos
jns
je
and
cmp
stc
cltd
or
mov
les
push
jns
push
hlt
sbb
mov
jb
mov
loop
add
rol
jno
adcb
mov
cwtl
outsb
popa
mov
aaa
in
mov
push
mov
adc
cmp
fsubl
addr16
and
rcrl
jb
mov
ds
in
inc
pop
pop
mov
dec
sbb
xchg
and
std
rorb
cltd
inc
inc
icebp
jle
sti
cwtl
fstps
sbb
xlat
fs
iret
xchg
sub
push
adc
mov
rcrb
jg
jnp
es
nop
popa
fs
push
pop
xchg
adc
push
out
call
xchg
adc
sbb
jns
jge
inc
rolb
mulb
insb
xlat
loop
mov
movsl
iret
cmp
leave
inc
divl
inc
or
jne
push
rorl
pusha
pop
or
xchg
push
int
dec
cs
mov
pop
mov
sub
mov
imul
xor
pop
sahf
js
loopne
mov
mov
test
inc
cmp
dec
and
pop
aam
xchg
cld
cmp
jmp
in
pop
imul
adc
cmp
decl
sahf
mov
inc
lret
lret
enter
aaa
inc
std
lock
dec
push
jle
je
fidivrs
enter
cmp
sbb
ja
mov
sub
int
in
mov
cmc
sbb
popf
in
das
js
mov
and
dec
push
imul
imul
sbb
pop
bound
xchg
and
cmp
and
fmul
pop
cmpsl
repz
adc
sbb
addr16
pop
xlat
or
loope
mov
adc
lret
dec
pushf
cmp
mov
push
dec
sub
arpl
sub
push
gs
stc
sbb
fs
add
mov
add
dec
mov
les
shll
sbbl
inc
xor
les
pop
mov
sub
stos
add
and
fnstenv
test
sbb
mov
fnstenv
add
cwtl
inc
movl
dec
jg
lock
fs
mov
and
push
hlt
outsb
setbe
imul
shll
cmpsb
jecxz
add
mov
std
push
adcb
pop
add
push
or
fs
inc
jle
shl
push
mov
xchg
fwait
aaa
movsl
in
push
pop
cmp
fisttpl
pop
mov
xor
sbb
orl
movsl
mov
test
jae
and
dec
and
cwtl
add
fisubrl
inc
mov
aam
sub
jo
xor
cwtl
stc
cwtl
dec
mov
in
movb
out
and
arpl
cltd
stos
jge
scas
add
int
jp
js
mov
aad
ljmp
idivl
mov
scas
add
adc
dec
icebp
stos
inc
insb
dec
js
sbb
mov
or
jbe
in
adc
fmulp
mov
popa
and
and
pop
xchg
cmc
loop
fmull
push
ja
cs
pop
dec
fcoml
push
xchg
test
jge
inc
jecxz
xchg
scas
sub
jnp
or
xor
dec
jns
add
cmp
enter
clc
lods
ja
sub
daa
rorb
mov
movsb
cmp
fwait
scas
mov
inc
pop
div
inc
add
mov
lock
scas
pop
adc
jle
sti
mov
lods
in
shl
nop
add
fiaddl
mov
mov
fwait
add
les
loopne
js
pop
addb
mov
push
pop
stos
pop
dec
adc
push
cmp
mov
lret
pop
ficoml
mov
into
lret
sub
dec
mov
jo
out
scas
add
xchg
outsb
xlat
xchg
ficomps
fcmovbe
pop
cmp
jl
adc
cmpsb
ja
sub
andl
push
fidivs
outsl
rcrb
sbbl
mov
cmp
inc
mov
rorl
inc
fcmovbe
lods
inc
add
int3
jae
imul
pop
lods
jp
insl
negl
popa
and
dec
sti
xor
or
bound
xor
or
xchg
clc
xor
sbb
xor
mov
mov
mov
test
xchg
mov
xchg
jp
mov
out
mov
push
imul
sub
cmp
dec
ret
cltd
inc
cmovbe
outsb
out
pop
mov
cli
mov
inc
xchg
and
divl
mov
rolb
xor
stos
jb
xchg
repnz
scas
je
mov
movsb
aam
aad
add
dec
inc
or
cmp
lret
jae
notb
pop
inc
add
cmp
insb
fwait
rclb
inc
popa
popf
call
push
xlat
enter
pusha
mov
imul
jp
mov
xchg
xchg
lcall
mov
push
sbbb
shrb
xor
leave
pop
repnz
shr
test
lret
dec
jl
xor
jae
into
lret
pop
rcrl
mov
xor
jae
jae
sub
and
xchg
adc
imul
mov
xchg
inc
icebp
pop
cmp
insl
out
loope
daa
jmp
aaa
jo
pusha
fisubs
jae
and
daa
pop
out
popf
and
outsb
insb
jno
pop
cmpsl
jecxz
mov
stos
xchg
inc
ret
sbb
aaa
mov
mov
loopne
in
adc
rcl
sbb
int3
mov
dec
fwait
ljmp
cmp
pop
mov
in
jne
fwait
ss
inc
gs
scas
cs
repnz
jns
mov
outsl
adcb
inc
dec
lret
jle
dec
pop
mov
fistps
jecxz
mov
mov
cmc
in
jl
shlb
xor
loop
xor
adc
sbb
adc
pop
test
fs
mov
inc
test
mov
imul
aas
cs
std
mov
cmp
aaa
push
mov
clc
cmp
cmpsl
jmp
jl
mov
lods
jge
jnp,pt
addl
mov
scas
cwtl
sub
test
or
xor
mov
mov
dec
cmpl
aaa
test
stos
fcmove
orl
iret
pop
das
imul
cmp
movsl
or
dec
cs
ljmp
jle
or
mov
pop
cmp
je
mov
test
dec
jo
je
mov
add
mov
add
adc
inc
xlat
cs
or
dec
xor
pop
xlat
iret
mov
test
sbbl
and
sbb
and
imul
push
add
mov
lock
xchg
push
and
loop
jns
iret
xchg
outsb
xor
cmp
lcall
xor
pop
enter
jle
mov
loopne
mov
test
inc
jecxz
xchg
inc
cmp
iret
cmp
scas
cli
jnp
dec
fcom
subb
push
dec
xchg
pop
cmp
pop
lret
xor
mov
cmp
sub
jecxz
inc
in
aam
dec
dec
mov
stc
mov
add
xor
sbb
mov
sahf
sbb
les
adc
stc
adc
dec
mov
pop
fidivrl
jns
inc
sub
xor
imul
dec
sub
sub
int3
cmc
add
push
sub
loope
jb
test
push
lret
fs
jnp
cmp
test
adc
std
lret
fcoml
in
mov
mov
movsb
sar
jmp
mov
cmpsl
in
es
fsubrl
pop
inc
and
inc
xchg
mov
inc
mov
movsb
inc
in
sub
out
in
xchg
mov
cmp
sub
lret
sub
xchg
dec
or
movsb
imul
inc
xor
int3
rcll
sub
mulb
xlat
mov
loope
pop
push
mov
xor
mov
shrl
push
fsubr
add
icebp
mov
pop
and
icebp
xor
jo
dec
or
jno
shll
jp
inc
shl
push
loope
in
ljmp
mov
push
cmpb
je
or
push
and
lods
ret
xchg
jns
sub
out
add
iret
pushf
sub
mov
sub
dec
data16
xor
dec
dec
js
mov
pop
out
pushf
daa
mov
ss
imul
test
xchg
js
mov
or
bound
cmp
arpl
lods
jnp
test
jne
cmp
push
inc
mov
inc
and
sbb
mov
push
cmc
fiaddl
scas
insl
inc
pop
dec
push
cmp
roll
lret
in
out
nop
xor
addr16
jecxz
cs
cmpsb
aas
mov
push
add
jmp
cmpsb
sahf
xor
xchg
or
and
dec
xor
lea
push
sub
imul
stos
mov
mov
adcl
push
ret
jno
loope
pop
loop
repnz
xor
aaa
or
sub
push
ret
fs
mov
jmp
push
cmpsl
mov
dec
insl
popa
pop
push
pop
in
push
mov
inc
push
sti
sarb
dec
jae
xor
inc
aad
mov
push
adc
dec
jmp
push
xor
scas
lret
xor
loop
xchg
not
pop
mov
adc
fistl
pop
rol
adc
mov
inc
js
xor
lret
xchg
adc
ffree
cmpsb
repz
lods
adc
mov
sbb
lock
jnp
mov
mov
xor
lods
sub
enter
xor
cmp
test
ljmp
das
jns
sbb
fidivrl
cmp
int3
pop
sub
lahf
ret
stos
adc
sub
pushf
pop
xchg
clc
push
or
mov
insl
mov
and
popa
pop
cmp
push
lds
mov
adc
das
adc
int3
jge
repz
push
cmc
repz
mov
ret
push
mov
repnz
xchg
aam
les
mov
xlat
ret
popf
jle
jge
adc
adc
mov
daa
jmp
mov
int
test
sbb
popa
mov
scas
ja
mov
add
mov
fucomip
bound
inc
hlt
dec
add
aad
or
jae
lret
mov
push
mov
mov
jl
sbb
hlt
mov
call
aad
mov
or
pop
std
add
sbb
test
stos
mov
push
sti
clc
push
aaa
and
out
jecxz
in
add
out
mov
inc
je
ds
repnz
fdivrs
cmp
cld
pop
fcom
or
rcr
int3
or
mov
fxch
mov
mov
into
std
dec
mov
dec
pop
mov
cmp
jb
lea
xchg
push
fwait
adc
sbb
cmp
and
pusha
push
in
cmp
jmp
inc
sub
in
mov
xchg
cli
fdivrl
push
iret
add
mov
adc
mov
inc
outsb
pop
std
idiv
sbb
sbb
clc
pop
ret
inc
clc
test
testl
dec
pop
fstpl
ret
mov
adc
out
lods
cmp
pusha
add
loopne
fnstcw
shrb
pop
imul
pop
cmpsb
or
mov
stos
sub
pop
bnd
xchg
pop
mov
push
xchg
dec
das
clc
pop
lahf
mov
jecxz
jnp
jns
rorl
jnp
ja
int3
pop
pushl
lds
lea
pop
pusha
repz
mov
daa
lods
test
pushf
xchg
cmp
and
filds
or
jno
sbb
fs
and
jl
mov
movsb
mov
rep
aad
xor
es
gs
mov
cs
lock
sub
xchg
dec
insl
mov
xchg
jecxz
test
sbb
push
int
mov
fscale
int
imul
frstor
in
mov
je
cmp
add
loope
fs
rclb
push
test
sbb
xchg
sub
fildl
test
sbbb
sub
adc
sub
sub
mov
jbe
rorl
jp
fisubrl
arpl
lahf
jmp
add
popf
stos
addb
fs
dec
mov
jmp
and
xchg
insl
lcall
mov
repnz
xor
adc
dec
lret
iret
mov
dec
sarl
mov
movsl
shll
aaa
jb
loope
and
cli
xchg
repz
cmp
pop
xchg
aam
push
sahf
pop
scas
imul
fidivrl
xor
shrb
add
out
dec
scas
push
mov
push
add
sub
inc
sub
mov
mov
repnz
daa
dec
cmp
add
sub
lods
daa
sub
jg
je
jne
xchg
jp
lcall
cmp
lret
or
cld
sar
clc
cmp
xor
in
addb
scas
push
dec
sub
test
add
idivl
xlat
adc
inc
js
scas
mov
enter
rclb
mov
cli
add
jg
cs
xor
rcrl
aad
mov
lods
in
shlb
mov
fcmovnb
cmp
shl
sub
mov
cmp
ret
adc
pop
loop
mov
push
ss
out
xchg
in
mov
imul
adc
cmp
xor
fdivr
push
fadds
cld
fcmovnb
das
mov
and
popl
and
add
fisubrs
andb
repz
mov
test
popa
push
adc
xchg
call
pop
adc
pop
or
mov
mov
fidivs
nop
xchg
xchg
pop
lcall
scas
insl
jmp
daa
adc
adc
dec
push
imul
rcll
les
cmpb
mov
mov
mov
in
xor
inc
inc
or
inc
les
fs
sub
xor
push
shl
mov
xchg
mov
jl
mov
push
shr
mov
out
sbb
mov
fmuls
xor
clc
fdivs
pushf
xorb
cltd
sub
cmp
inc
stos
xchg
adcl
test
jl
data16
clc
mov
mov
and
xor
and
lods
sbb
mov
mov
jb
cmpsl
sub
in
push
dec
pop
jnp
je
lock
test
loope
push
cmp
aas
daa
mov
push
adcb
mov
jb
lds
loop
nop
mov
and
movsb
sti
loope
stc
xor
into
add
ret
mov
inc
leave
nop
test
xor
cmp
inc
mov
sub
fnstenv
in
jb
ss
ja
test
jg
scas
iret
cld
jmp
into
fsubrl
hlt
stos
adc
xchg
popa
cmpsb
js
jmp
popf
mov
andl
push
add
pop
cmp
fcomps
xor
xchg
mov
xor
jle
mov
ret
outsl
mov
ljmp
call
gs
mov
mov
pop
push
fildll
dec
fdivrl
push
out
jno
test
jbe
sarb
sbb
shll
lds
cmp
shrb
in
push
sbb
pusha
xchg
xchg
add
push
out
jp
mov
or
mov
inc
movsb
insl
mov
jno
dec
shrb
jb
test
test
mov
pushf
incb
mov
loope
add
mov
aas
cmp
xor
inc
and
bnd
xchg
pushf
insl
xchg
jnp
mov
loopne
inc
push
xchg
sub
xchg
stos
ljmp
lret
xchg
mov
sbb
sahf
pop
xchg
out
mov
adcb
lcall
loop
into
loopne
add
in
js
clc
lods
in
insl
hlt
push
stc
daa
aam
and
mov
xlat
pop
loopne
xor
into
cli
call
lods
mov
lock
loope
or
test
jg
xchg
fildll
in
fxch
out
mov
adc
int3
mov
addr16
and
mov
pushf
push
js
dec
lea
xchg
loope
decl
cltd
cmc
scas
push
sbbb
dec
and
xor
dec
ret
pop
xchg
adc
call
add
sub
test
mov
jmp
inc
fwait
and
loop
dec
push
jae
faddp
jns
hlt
ljmp
add
push
popf
push
cmp
adc
cmp
lods
rcl
push
push
es
lods
adc
mov
shll
idivl
sbb
inc
lea
and
stos
push
jbe
mov
fwait
cmp
or
cli
pop
mov
iret
lds
dec
xor
out
mov
mov
movsb
pusha
int3
cmp
daa
into
fimull
test
jl
xor
push
int3
into
push
dec
push
adcb
pop
lea
jle
and
ds
inc
mov
sub
sub
add
push
add
sub
xchg
pop
aad
cli
pop
rclb
dec
insb
shlb
lcall
sahf
out
pop
in
mov
std
xchg
hlt
loopne
pop
gs
fists
xchg
cmp
aad
ret
sbb
in
add
pop
xchg
push
jecxz
cmpl
inc
mov
adc
adc
or
adc
sub
or
xchg
call
leave
stos
insb
shrb
inc
sbb
in
insb
mov
aad
mov
mov
addl
cmp
cwtl
dec
mov
adc
pop
addr16
add
fwait
lcall
sbb
scas
sub
and
inc
xchg
imul
add
sub
int3
mov
adc
cmc
sub
or
lahf
pop
sbb
imul
or
fldt
or
mov
hlt
adc
fsub
icebp
mov
jne
aad
xorl
sbb
arpl
sbb
cmp
push
pop
jne
mov
mov
stos
imul
push
into
fs
fstps
stc
enter
loop
push
mov
mov
or
mov
adc
jmp
jbe
loope
sbb
mov
dec
loopne
cs
mov
fcmovnbe
icebp
ss
jns
mov
xchg
pop
mov
xchg
jo
lods
gs
jl
xor
movsl
out
shlb
cmp
stos
sbb
mov
notl
enter
cmpsb
outsl
sbb
cmp
cmp
stos
into
sub
fsubs
adc
or
aam
mov
mov
pop
repnz
add
not
sbb
mov
mov
int
push
dec
data16
fs
icebp
pop
push
xchg
gs
xchg
dec
adc
mov
adc
aam
ret
mov
mov
mov
push
inc
rol
mov
outsb
shrb
mov
add
ret
decb
push
dec
mov
rcr
push
push
adc
je
loope
out
enter
xchg
jo
cwtl
cmp
add
int
das
stc
mov
loopne
ret
neg
mov
addb
shrl
and
jnp
push
dec
add
xchg
aas
lods
sti
sbb
cmpb
testl
jns
and
dec
pusha
loopne
jecxz
jmp
mov
mov
push
lods
mov
mov
push
je
xchg
repz
shr
out
sahf
cmpsb
xchg
jnp
int
divb
lcall
pop
add
loope
out
adc
xlat
jmp
test
popl
je
xchg
mov
xor
loope
or
in
push
and
cmpsl
cwtl
lret
out
fisubs
pop
xchg
ret
push
push
xor
jle
jne
cmp
out
pop
lods
add
push
sbb
roll
lahf
dec
addr16
mov
mov
sbb
jo
cmc
jmp
in
cwtl
cmc
push
adc
hlt
loop
xchg
clc
pop
adc
ss
push
es
ret
fstpl
jmp
call
jo
sub
xor
xlat
xor
pop
lds
sbb
sbb
sbbb
or
daa
fwait
out
sbb
xchg
rorl
mov
jl
icebp
insl
jle
add
test
jns
jecxz
stc
roll
jg
fcoml
jge
jg
cld
lods
push
add
scas
sub
fnstenv
imul
ret
push
scas
divl
sbb
lods
add
out
cmp
xchg
push
stos
sbb
imul
arpl
loop
test
mov
sub
cmp
decl
dec
jecxz
mov
pop
std
sub
mov
cmp
sbb
ret
out
sbb
cs
imul
je
add
push
scas
sti
aam
js
imul
xor
repz
dec
xor
push
fidivl
pop
daa
js
cs
and
cmp
inc
dec
and
cmp
in
aas
lret
mov
loope
cmp
nop
jnp
lahf
in
fwait
xorb
sbb
bound
sub
lds
mov
mov
rcl
add
fmul
mov
fbld
outsb
in
sarl
mov
addr16
out
outsb
cmp
and
and
xchg
xchg
cmp
pusha
popf
iret
arpl
es
jecxz
sbb
push
iret
jmp
cli
repnz
push
icebp
aas
mov
ret
sub
inc
lcall
pop
lahf
mov
jmp
rcrl
scas
dec
cwtl
imul
jge
pop
cmc
cwtl
nop
xchg
out
or
mulb
ss
inc
add
jp
sti
ret
add
xchg
inc
les
xchg
push
arpl
cltd
mov
fisttpll
lret
fwait
popfw
mov
or
test
sub
mov
sti
jecxz
pop
xor
pop
mov
mov
shl
stc
push
mov
jns
dec
mov
inc
iret
pop
or
bound
or
cmc
test
add
inc
clc
repz
lods
iret
pop
or
test
aas
mov
sbb
xchg
lahf
sbb
loope
imul
jno
mov
cmpl
jge
push
dec
in
divl
repnz
int
dec
inc
repnz
int
and
adc
and
mov
pop
mov
mov
xor
sti
outsl
decl
jle
jg
cmp
pop
adc
out
arpl
andb
lods
cmp
aam
xchg
inc
dec
inc
rorb
or
sahf
xchg
stos
cltd
dec
add
cmpsl
lret
xor
push
xor
pushl
ret
xor
mov
stc
dec
dec
ret
pop
jmp
inc
cmp
leave
push
out
lcall
das
pop
enter
insb
dec
mov
ja
mov
arpl
dec
xchg
stos
push
gs
hlt
xor
mov
into
iret
xchg
dec
test
xor
insl
sub
scas
adc
movsl
in
xchg
inc
xor
inc
mov
stc
dec
lcall
scas
push
sbb
sub
std
fistpl
mov
mov
inc
cmpsb
mov
inc
and
or
mov
cmp
imul
pushf
loope
aad
jae
fnstenv
inc
andb
xchg
fs
fcmovu
int3
and
cmp
mov
or
add
xchg
cli
call
mov
and
mov
sub
xor
fistps
mov
mov
arpl
popl
mov
xchg
test
mov
push
pop
jl
insb
movsl
add
arpl
add
pop
aad
sub
dec
cmpsb
out
xlat
add
push
es
mov
and
push
or
push
dec
in
or
rorb
sub
or
dec
jge
pop
adc
cmpsl
mov
mov
dec
orl
adc
mov
adcb
cmp
push
sar
pop
pop
ss
push
jo
sbb
dec
stos
cmpsl
setg
jne
mov
bound
cmp
jg
lock
push
cmp
add
stc
subl
xchg
jl
imul
jb
jo
sub
fisubrl
lds
leave
lock
loop
movsl
das
xor
vmulpd
add
and
daa
mov
mov
cmp
out
in
call
sub
in
das
push
lds
and
push
pop
lcall
enter
lock
xchg
xrelease
sub
cwtl
loope
or
ljmp
loopne
jp
aam
fistpl
decl
adc
mov
xlat
lahf
add
lahf
lock
sub
push
and
add
ss
in
ds
inc
stc
lahf
add
xchg
dec
lods
adc
sarb
into
fwait
subb
rcr
les
jg
inc
sub
adc
mov
dec
xchg
outsl
movsl
and
pop
aaa
shlb
mov
int
pushf
nop
or
fadd
or
movsb
ljmp
shlb
test
std
inc
loope
or
mov
sub
add
mov
dec
icebp
jns
jle
jb
xchg
lods
test
cmp
cmp
mov
adc
out
bound
imul
cmp
xchg
aam
aam
hlt
in
add
dec
fldenv
pop
call
movl
pop
mov
imul
into
jecxz
das
aam
popa
sub
imul
lahf
sbb
push
xchg
dec
in
loope
nop
xchg
sbb
outsb
repz
jp
mov
push
loopne
fisubl
pop
mov
mov
sbbb
leave
jne
add
cmp
dec
out
mov
push
push
mov
iret
incb
dec
movsl
fs
push
ljmp
cmpsl
or
cmp
xchg
mov
xor
xor
hlt
stc
ja
xchg
pop
adc
or
lods
mov
sbb
dec
push
imul
stos
test
arpl
adc
aam
aad
inc
xchg
data16
mov
pcmpeqw
and
int
int3
or
andb
and
xchg
and
and
adc
ret
jae
aaa
xchg
test
xor
cltd
mov
adc
dec
mov
lods
dec
pop
lret
push
xor
and
cmpsl
xchg
jns
pop
sti
mov
loope
push
cmp
lods
jecxz
push
ret
int
add
jno
push
inc
pop
and
roll
in
xchg
pop
push
in
and
push
hlt
sub
movsb
inc
inc
repnz
push
inc
push
and
jg
inc
jecxz
dec
addl
ljmp
fiaddl
nop
mov
push
ret
aam
add
push
xchg
in
mov
das
sub
shll
sub
aas
dec
adc
cld
hlt
aas
cld
sbb
stc
sbb
rolb
out
iret
push
sub
push
xlat
cld
dec
or
xor
mov
shlb
bound
sbb
mov
push
shrl
ficomps
xor
aas
ficoml
test
pushf
icebp
or
pop
add
xchg
xor
sub
bound
pop
repnz
mov
inc
popf
test
pop
push
mov
cmp
adc
mov
cltd
cmp
outsb
mov
xlat
jmp
lahf
sub
out
inc
dec
xchg
xchg
and
or
cmp
push
xchg
sbb
stos
jecxz
inc
jo
jno
aas
lcall
popa
and
stos
lcall
pop
xor
sti
ljmp
mov
pop
jp
xor
pusha
inc
mov
ss
add
sbb
or
sub
lahf
inc
fldcw
mov
popa
lahf
cld
mov
mov
hlt
cmpb
mov
ds
fistpll
sbb
test
sarb
adc
imul
aaa
jmp
ja
inc
scas
jo
ljmp
add
dec
or
test
iret
xor
cmpsb
pop
add
minps
adc
or
test
fidivrs
dec
cmpb
add
mov
dec
sbb
xor
sahf
enter
adc
in
xchg
and
sbb
daa
fcmove
mov
sti
xor
push
sbb
and
jp
insb
dec
es
mulb
xor
ret
lods
int
test
ja
pop
xor
filds
and
dec
call
bound
jns
mov
xchg
mov
rcrb
outsb
aad
pop
cwtl
push
rolb
jge
aas
adc
cs
repnz
sbb
add
sbb
ljmp
push
movsb
lcall
push
out
cmp
iret
add
sub
popf
add
ds
subl
push
mov
and
sub
cs
mov
nop/reserved
pushf
inc
mov
popf
inc
jl
call
jae
jl
cwtl
lret
pop
add
jg
jnp
mov
aam
sbb
imull
loop
cmp
mov
scas
movsb
jecxz
and
sahf
in
sbb
push
inc
loope
fildll
xor
sbb
notl
js
push
ja
hlt
arpl
aad
in
inc
cltd
and
xor
push
mov
fwait
cmpsb
movsl
ss
orl
xor
ficoml
nop
les
test
bound
lods
nop
inc
aam
push
push
or
test
add
lahf
xchg
shll
xchg
push
data16
gs
sbb
je
loopne
movsl
push
out
lea
jge
call
mov
sbb
imul
das
int
mov
test
out
jg
sub
leave
popf
mov
inc
lret
loope
jge
cltd
sbb
pop
loopne
push
mov
sbb
mov
fs
pop
inc
fwait
into
sbb
cmc
mov
mov
pop
or
insb
call
ret
aad
push
mov
pop
ljmp
popa
jmp
iret
pop
in
sub
cmpsl
mov
dec
xchg
mov
mov
cmp
jge
jnp
add
fidivrl
sti
push
push
push
popa
idivb
leave
out
jno
dec
add
in
out
pop
sbb
pop
mov
or
inc
gs
inc
jmp
adc
mov
cmpsb
pop
jmp
push
nop
shll
fstl
xchg
adc
jle
xor
rcll
aad
xchg
fldpi
shrl
int
mov
nop
nop
lret
or
inc
or
jns
inc
test
aas
or
inc
jmp
jnp
jmp
xor
xlat
scas
cmp
pop
mov
inc
arpl
pop
adcl
clc
cmp
rolb
testb
mov
out
add
cli
add
adc
dec
xchg
cmpsl
sahf
enter
lods
mov
mov
jle
xchg
mov
fwait
out
cmp
jge
fcmovu
outsl
test
addr16
mov
outsl
sub
test
das
aas
fsubrs
sti
lea
cmp
fwait
sub
loop
sete
dec
mov
pop
insl
sbbb
jmp
in
pop
fcompl
scas
loop
bound
push
jmp
and
cmp
testl
je
jge
lahf
imul
mov
call
mov
int
repnz
repz
testl
push
add
xchg
push
push
or
dec
pop
scas
xchg
xor
in
cmp
mov
call
test
adc
in
fs
add
xchg
data16
jge
in
es
imul
dec
xchg
or
adc
loopne
cld
movsb
jle
pop
jle
and
mov
mov
push
aad
push
mov
jg
mov
jg
xchg
mov
mov
push
hlt
xor
add
flds
mov
daa
loope
popa
inc
enter
lods
mov
jb
pop
push
out
inc
ljmp
dec
push
push
in
xchg
add
jg
mov
lds
xor
fmull
outsl
cmp
and
in
sub
arpl
xchg
or
popf
mov
shr
and
hlt
push
nop
pop
mov
loop
inc
xor
mov
xchg
sub
cs
xchg
ret
sub
fdiv
adc
lds
into
dec
mov
mov
jb
mov
push
jbe
jmp
pop
jns
lock
add
mov
emms
mov
pop
mov
jno
push
les
stos
fsubr
popf
or
pop
out
dec
fldenv
cli
out
xor
andb
push
roll
push
and
mov
aas
aam
cs
iret
addr16
int
stos
aaa
call
adc
inc
sbb
pop
jl
sbb
and
mov
sbb
lret
stc
mov
ret
aas
inc
rclb
pusha
scas
xor
adc
mov
inc
pop
jbe
jle
into
enter
popf
notb
dec
mov
int
jmp
jnp
sub
nop
popa
clc
xor
div
adc
int3
fwait
pop
mov
xor
cmp
pop
mov
dec
inc
and
out
pop
mov
or
das
subl
stos
fcmovbe
sub
loope
and
xchg
fidivs
leave
in
mov
lret
arpl
adc
xor
or
das
daa
stos
jns
daa
mov
or
cmpsl
xlat
push
mov
sahf
ds
and
jo
jle
cmp
cmp
data16
xchg
iret
inc
out
pop
pop
sub
adcb
gs
shl
sbb
and
inc
cmc
loope
cmp
test
hlt
sar
pop
cmp
and
pop
into
ds
xor
dec
int3
dec
cmp
sbb
cmp
cwtl
ljmp
dec
shlb
cmp
inc
popf
cltd
bound
lcall
ret
test
es
andl
inc
rcll
push
pop
or
data16
sahf
jo
add
test
ds
lods
dec
ret
pop
sahf
lret
lret
scas
dec
daa
sbb
inc
mov
mov
rcll
mov
fsubrs
shll
aam
push
xor
test
mov
int3
lods
shll
ficomps
aad
pop
notl
add
test
adc
insb
je
ljmp
xchg
lds
or
push
out
clc
roll
test
aad
and
fs
mov
ja
inc
inc
fnstsw
mov
push
mov
mov
xor
cmpsb
xchg
mov
push
sbb
aas
sti
inc
test
jle
dec
mov
insl
adc
lcall
int
rcr
xchg
mov
or
mov
scas
test
add
stos
outsb
imul
add
cmpsl
jnp
or
fnstsw
std
in
daa
mov
and
mov
xor
push
lcall
mul
inc
jae
das
adc
push
xor
jns
mov
out
jb
mov
jno
xor
add
cmp
shr
xor
mov
lret
call
fildll
jg
and
aaa
xchg
adc
loopne,pt
outsl
pop
or
testl
arpl
xchg
push
pop
repz
lahf
cmp
inc
push
ja
int3
pop
push
andb
xchg
and
inc
stc
push
push
jae
outsb
xchg
push
sbb
mov
cmp
mov
lock
adc
leave
sub
nop
in
dec
adc
xchg
pop
stos
rclb
xchg
in
sub
dec
mov
pop
mov
in
push
ds
mov
dec
arpl
jbe
mov
pop
or
xor
nop
push
xor
dec
add
leave
pop
movsl
sbb
inc
xchg
mov
jecxz
mov
in
adc
xchg
in
xor
ljmp
jmp
mov
popf
cmp
repnz
mov
rorl
outsl
repnz
jne
in
scas
cli
push
int
repz
or
xorb
das
lcall
xor
fstpl
xchg
sbb
pop
movsl
subb
xchg
popf
test
xchg
jg
idiv
ljmp
xchg
jnp
or
addw
mov
xchg
int
mov
ds
push
fs
mov
sti
minps
mov
jne
sub
and
out
stos
xchg
and
aaa
aam
cltd
add
push
shl
fdivrs
std
mov
push
push
or
dec
add
xorl
dec
sbb
push
cmp
mov
sbb
hlt
or
lret
shrb
stc
stos
rcr
ret
cld
call
or
push
xlat
fnstenv
clc
scas
or
arpl
imul
lahf
cmc
mov
mov
pop
pop
mov
ret
add
repz
imulb
orb
jmp
loop
gs
add
push
push
xchg
fidivrs
popf
sbb
out
fldt
or
jmp
mov
mov
xchg
xchg
repz
xor
pushf
test
dec
negb
xchg
filds
pop
aam
push
xor
loope
hlt
imul
mov
iret
and
out
insb
sbb
or
lret
cmpsb
aam
xchg
rcrl
aad
add
inc
loop
or
out
adc
xchg
and
adc
xor
mov
cmp
call
fsubs
or
movsb
sahf
jo,pn
mov
push
push
lcall
jnp
sbb
sbb
ret
push
hlt
sbb
jg
fimuls
mov
pop
rolb
filds
test
mov
xor
in
test
adc
mov
dec
pop
push
adc
cmp
frstor
jae
mov
xchg
mov
das
stos
mov
mov
fisttpll
sub
pop
mov
dec
jge
mov
add
or
dec
int
add
pusha
ret
jnp
mov
sub
pop
out
leave
sbb
js
sbb
shll
inc
pop
and
fcoml
mov
adc
mov
push
push
fst
or
in
dec
int3
add
and
mov
cltd
in
push
add
lods
stos
int
inc
leave
sbb
add
arpl
out
xor
subb
sub
movsl
mov
repz
or
push
dec
adc
cmpsb
pusha
sub
scas
lock
dec
and
data16
cwtl
loop
inc
mov
mov
add
fstp
test
sub
mov
push
lcall
enter
cmp
ja
popf
loopne
insl
popf
pop
lahf
push
push
test
pushf
imul
mov
xorb
fs
inc
loopne
fistps
clc
inc
mov
enter
or
mov
das
pop
xor
inc
and
js
jl
inc
sub
cs
cs
rcrb
xchg
iret
fmul
push
aaa
popf
rcrl
jns
gs
fmull
mov
test
sub
adc
scas
add
push
push
sahf
fdivrl
pop
adc
lods
je
cli
pop
addb
sub
cwtl
dec
push
pop
mov
push
cmpsl
push
sbb
and
neg
push
xchg
dec
and
and
into
imul
data16
inc
nop
popf
ret
std
pop
sti
fildll
js
pop
lods
std
and
dec
mov
shrl
shlb
pop
in
push
aam
and
mov
inc
adc
pop
ljmp
jle
and
jb
sbb
dec
or
into
out
sbb
aam
bound
inc
xchg
cwtl
dec
sub
and
dec
jns
fstps
aam
cwtl
lahf
sbb
adcb
cmp
std
stc
sbb
jge
dec
pusha
leave
icebp
fsubl
in
xchg
cmp
aad
push
adc
std
pop
push
jo
dec
adc
inc
jne
or
jns
fstpt
xchg
mov
dec
jecxz
xchg
dec
cmpsb
mov
pop
rcl
in
push
lcall
adcl
push
cwtl
mov
jg
cmpsl
cmc
xor
shl
xor
adc
fdivl
sbb
ljmp
pop
shrl
adc
int
jecxz
jae
lea
mov
mov
adc
adc
dec
and
jl
clc
stos
les
sub
sbb
addb
push
jb
push
sbb
pop
mov
aas
out
les
xlat
stos
inc
aad
test
mov
xor
jbe
xor
and
popa
push
es
je
pop
xchg
pop
stos
add
pushf
stos
loopne
push
fstpt
sub
shll
fstpt
xor
or
mov
mov
jne
js
ret
pushf
aaa
das
int3
dec
push
push
sahf
cmp
test
pop
and
mov
out
test
into
xchg
jns
fistps
mull
scas
ret
jne
shrb
mov
adc
fistl
mov
xchg
jg
loop
lea
dec
inc
in
fld
lret
inc
jne
jl
iret
fdivl
aas
sahf
and
sti
cmp
push
shlb
cli
arpl
sbb
ja
jo
and
lds
pop
fsubl
xor
sub
cmp
testl
scas
lahf
or
scas
xor
dec
mov
pop
mov
push
fsubrs
fstpl
jg
sbb
jne
rcrb
sahf
movsl
fidivl
idivl
ljmp
ljmp
cmp
int
and
scas
mov
adc
mov
jbe
in
mov
test
lret
divl
push
push
or
jmp
jg
outsl
sub
sbbl
loopne
mov
shrl
adc
shrb
push
rcl
mov
sub
jo
jno
fadds
dec
fiadds
xchg
es
mov
test
mov
push
xchg
movsb
ja
jbe
rcr
pop
pop
icebp
movsb
popa
ja
xor
push
loop
cs
pop
fcomip
push
adc
into
jbe
sub
fadds
xchg
rcll
gs
int
movsl
fs
js
dec
divl
cs
out
push
mov
ficoms
xor
mov
stos
iret
cmc
prefetch
or
pcmpeqb
pushf
mov
cld
outsl
or
psllw
cmp
sbb
ja
lret
jbe
jb
ja
inc
mov
or
mov
adcl
push
lea
push
fdivrp
xor
fisttps
or
cmp
lret
movsl
jmp
in
or
data16
cli
cmp
sub
cltd
mov
ljmp
stos
mov
pop
ret
imul
push
xor
jle
and
jg
pop
xchg
jg
loop
inc
push
add
inc
sarb
jns
or
sbb
inc
jge
sbb
scas
jge
ror
and
fdivrs
inc
mov
fimull
cmp
pusha
and
push
negl
cmp
cmp
int3
cli
pop
push
xchg
or
xor
icebp
aaa
lock
addr16
sub
push
sbb
pop
mov
push
aad
push
enter
cmpsb
lret
sub
push
mov
push
pusha
call
mov
mov
and
inc
lds
aam
lret
divb
sub
mov
dec
jge
pop
dec
cmpsb
mov
and
loope
xor
les
hlt
pop
jnp
xrelease
lret
jnp
sub
loop
pushf
cs
data16
dec
sub
outsb
push
mov
es
roll
mov
iret
or
rclb
out
sbb
outsl
add
lea
adc
mov
fstp
cmp
and
adc
xor
es
lret
jo
insb
cmp
cli
jge
add
cmp
mov
pop
push
and
pushf
push
adc
loope
test
sub
fidivrs
sbb
mull
movsl
mov
dec
jg
cmp
insl
pop
and
out
push
or
pop
xor
cmp
outsl
loop
les
pop
in
or
jno
mov
imul
and
mov
cmpsb
and
sub
adc
xlat
mov
sbb
inc
ljmp
or
xlat
sub
or
adc
mov
jp
inc
outsl
clc
add
insl
aaa
nop
mov
mov
add
inc
sub
adc
sbb
jb
dec
sbb
inc
clc
add
cmpsl
dec
inc
or
mov
dec
test
push
adc
pop
out
mov
clc
or
mov
adc
rolb
adc
inc
mov
mull
push
pushf
push
xor
cmp
jae
ja
xchg
adc
addb
xor
push
or
push
iret
jmp
stos
xor
ljmp
dec
xorb
xor
cwtl
outsl
jmp
dec
mov
sub
mov
cltd
shl
scas
push
push
hlt
inc
mov
outsb
dec
aad
mov
add
inc
fcomip
data16
pop
addr16
sub
xchg
sbb
push
repz
pop
jb
pop
pusha
xchg
adc
push
jg
inc
sahf
out
mov
testb
ljmp
mov
rolb
and
jecxz
jnp
shrl
sbb
lahf
jae
push
out
mov
mov
outsl
mulb
cmp
push
sbb
adc
add
cwtl
in
mov
pop
or
mov
stos
jo
ds
test
inc
adc
ret
push
lret
xor
movsl
push
jb
test
addb
insl
clc
pop
rol
imul
gs
test
gs
cmpsl
mov
and
mov
movsl
lods
aaa
sbb
ja
mov
shrl
std
sub
arpl
fwait
lock
insl
or
stos
sbb
adc
jbe
xchg
jmp
jl
dec
lods
rcl
xor
lea
pop
fldcw
push
ret
js
cwtl
icebp
add
xor
cs
jecxz
mov
inc
loop
repz
xor
adc
push
lret
es
fbld
xchg
shlb
jbe
cmp
pusha
push
push
mov
pusha
sbb
xchg
xchg
mov
pop
xchg
push
cwtl
int
xchg
cmp
stc
mov
jns
scas
pop
mov
fldt
cld
je
fisttpl
gs
test
mov
movsb
gs
test
sub
in
subb
les
xor
push
mov
loop
in
or
push
cs
ljmp
into
xchg
pushl
pop
je
fcom
inc
cwtl
jns
xor
inc
adc
adc
rcrl
mov
fsubrp
int3
loope
int
pushf
in
into
xchg
js
jbe
jmp
dec
out
cmp
fcoml
xor
fildll
rcrb
or
cmp
push
das
lret
mov
and
dec
cmp
inc
lret
lods
inc
adc
mov
sub
and
hlt
lods
jo
pushf
cmp
rorl
sarl
insl
or
lods
xchg
or
jmp
jno
jno
cmp
sub
aad
inc
enter
mov
add
mov
cli
push
sub
sbb
out
loop
fst
push
xchg
cmp
cmc
ja
out
and
mov
xchg
ja
pushf
lock
pop
lods
adc
cmp
xlat
mov
adc
cmp
pop
popa
lods
mov
mov
fs
jge
test
bound
sti
xchg
iret
cmc
push
mov
xor
imul
push
test
jmp
js
sbb
imul
cmp
pusha
dec
jmp
jo
xchg
mov
popa
add
and
adc
loope
xor
lods
imul
push
roll
pop
scas
mov
or
cmp
iret
dec
push
divl
addr16
xchg
mov
or
fs
xor
ret
cmpsb
jb
cmpsb
int
and
jb
mov
mov
lahf
and
jecxz
push
push
cs
add
mov
jl
add
ds
into
cmp
rcrl
xor
sahf
mov
push
mov
dec
or
call
or
stc
lcall
fwait
shll
push
pop
xlat
and
or
lcall
pop
mov
fmul
call
ja
cmp
adc
push
adc
and
push
fwait
sub
add
movsb
cld
jge
fs
hlt
adc
test
pop
dec
leave
pusha
fsubrl
test
or
push
loope
and
add
add
imul
pop
add
mov
loope
sbb
xchg
mov
xor
or
jb
xor
icebp
idivl
push
fidivrs
mov
jecxz
jl
and
xchg
pusha
mov
push
jb
out
imul
into
mov
test
insl
ror
fstl
pop
xchg
pop
mov
inc
ficoml
inc
jp
inc
lods
xchg
jl
cs
inc
je
lea
mov
or
push
lret
cmp
clc
in
inc
test
int3
ljmp
daa
cld
in
xchg
das
mov
mov
sahf
inc
xchg
jle
jno
fs
push
add
xor
jbe
mov
shll
sbb
ljmp
fidivl
sub
push
jecxz
jecxz
mov
sbb
jae
dec
sbb
xlat
mov
arpl
ja
adc
pop
jae
pop
or
and
xor
icebp
paddsb
rclb
insb
pop
mov
mov
les
fidivrl
es
push
adc
sub
fwait
sub
mov
sbb
negl
mov
ret
adc
pop
in
dec
mov
mov
rcrl
sub
cmp
xchg
repnz
roll
repz
push
fwait
cs
stos
adc
jg
out
sbbb
scas
daa
dec
or
fs
cmpsb
enter
and
stos
lods
imul
dec
add
leave
in
std
cmp
inc
mov
add
stos
pop
mov
sub
testl
and
inc
or
bound
add
aam
in
scas
add
or
daa
cmpsb
push
popa
or
cld
pop
jo
addl
jge
iret
out
fcompl
push
mov
aas
xorb
in
cwtl
pop
xlat
pushl
add
dec
fsqrt
test
pop
js
mov
push
out
push
mov
outsb
push
push
jmp
sbb
insb
jle
add
push
or
test
sbb
add
mov
xor
jnp
inc
aam
push
mov
or
inc
sar
out
mov
mov
pop
out
movsb
pop
mov
mov
lea
pop
test
test
aam
stos
in
mov
mov
and
es
ficompl
jbe
outsb
jbe
and
je
push
das
dec
and
inc
cmp
fcoms
adc
outsb
imul
outsb
or
lahf
mov
fimuls
cltd
push
pushl
jae
mov
xchg
sarl
fnstenv
mov
cmp
popf
mov
lahf
xchg
les
arpl
ss
and
test
test
shl
xor
stos
leave
jge
fisubl
xchg
adc
std
fiadds
test
and
icebp
mov
jge
mov
movsl
lock
sbb
mov
push
ja
inc
fldl
lret
mov
mov
fisttpl
int3
sbb
mov
push
and
pop
push
loopne
cmp
cmp
mov
mov
or
hlt
jae
cmp
gs
jno
jle
gs
jecxz
inc
outsb
adcb
xor
enter
cmp
push
les
arpl
mov
pop
std
fmuls
call
jno
pop
fiaddl
xor
stos
out
jno
mov
es
pop
mov
adc
mov
hlt
enter
lock
loop
and
repnz
mov
lock
cli
jmp
and
jb
jo
xor
dec
vcvttsd2si
hlt
mov
push
movsl
sub
cmp
jmp
outsl
aad
lods
insb
ret
mov
mov
xlat
je
mov
pop
lods
mov
mov
add
cmp
push
pop
ss
inc
fimuls
pop
int
adcb
jo
ljmp
sub
mov
imul
add
into
jmp
and
fidivs
sub
and
add
pushf
and
into
in
push
testl
sbb
jo
jne
pop
push
jbe
jp
or
movb
add
mov
pop
sti
cli
hlt
mov
fstpl
ljmp
or
stos
bound
dec
hlt
inc
lock
jae
mov
inc
dec
add
cmp
xor
rolb
pushf
sbb
cmp
mov
mov
adc
addr16
ret
stos
adc
mov
aad
xor
test
sub
shll
push
adc
in
dec
ds
out
jge
cmp
or
or
jb
mov
pop
xlat
les
xchg
mov
mov
mov
jnp
ljmp
je
inc
out
dec
sbb
loope
scas
scas
mov
imul
xchg
jo
dec
push
pusha
out
fcoml
movsb
outsb
jne
lods
and
inc
lahf
add
ret
mov
push
add
daa
xchg
popl
xchg
adc
xchg
outsb
das
sbb
adc
inc
into
es
shrl
xor
inc
jo
fnstcw
inc
mov
mov
imul
inc
addr16
cltd
cmc
pop
dec
les
outsl
jecxz
mov
lods
mov
fucomp
inc
jmp
xor
xor
xchg
movsl
scas
cmp
sub
insl
mov
addb
lret
cmp
lcall
pop
int
inc
dec
mov
fdivl
jecxz
xchg
cmpsb
and
lret
jp
test
mulb
xor
dec
lahf
js
pop
or
sub
mov
or
imul
xchg
fdivrp
aam
in
dec
test
jno
sbb
andl
sbb
ja
fs
ljmp
insl
popa
adc
ljmp
pushl
sbb
mov
cmpsl
add
int3
and
jge
das
arpl
pusha
jmp
push
cmpsb
sub
xchg
stos
mov
testl
out
subl
test
push
stos
or
ret
inc
ds
sahf
scas
insl
aad
cltd
add
push
xor
loope
jle
sub
mov
andl
pusha
icebp
sahf
fsubs
in
mov
mov
std
add
xor
lock
mov
lods
inc
iret
shll
xor
pop
jecxz
into
data16
ret
aam
and
cli
push
mov
dec
pop
addr16
cmp
dec
pop
xor
mov
fnstsw
push
pop
andb
fsubs
ja
loopne
dec
mov
pop
jmp
aad
cs
pop
cmpsb
repnz
in
cmp
dec
mov
lcall
add
cli
test
pusha
fcomp
rol
adc
and
int
aas
adc
rcl
ds
movsb
into
hlt
int
and
dec
cmpsl
stos
lods
cld
adc
jno
pop
or
js
fnstsw
popf
jmp
subb
call
xor
sbb
imul
addl
js
add
and
shr
and
add
mov
inc
xchg
jo
dec
dec
or
sbb
and
pushf
je
enter
cs
lcall
xor
and
aad
shlb
xchg
addr16
in
stos
add
adc
add
std
in
push
cmc
fisttpl
mov
repnz
xlat
in
mov
leave
call
outsl
pop
leave
subb
inc
sbb
addr16
movsb
add
sbbb
jge
lods
icebp
xchg
jg
mov
add
pop
repnz
int
pop
jge
test
mov
mov
inc
jo
shr
mov
push
jecxz
push
cmpsl
out
lret
push
lods
sub
and
pop
adc
sarl
and
ds
pop
adc
or
jne
fistpl
push
pop
imul
mov
shrb
xor
ljmp
sahf
mov
mov
movl
iret
mov
cltd
mov
jne
xchg
mov
mov
pushf
ficoms
imull
js
les
mov
sbb
xchg
mov
sub
mov
pop
dec
and
mov
jns
pusha
mov
ss
sub
dec
shlb
mov
sub
cli
and
add
mov
add
push
xchg
mov
cmp
movsb
hlt
push
mov
pop
cltd
stos
mov
pop
hlt
xor
mov
mov
pop
fsubrs
inc
fisttps
and
daa
loope
mov
aad
ds
not
pop
addw
pop
xor
sahf
mov
jge
adc
and
outsb
jge
and
jle
aaa
add
xchg
leave
xor
repnz
push
insl
outsl
sub
lahf
mov
scas
or
jg
add
insl
prefetchwt1
sbb
pushl
jnp
and
pusha
out
scas
mov
mov
cmpsl
jb
inc
jecxz
hlt
fdiv
dec
cli
into
xchg
hlt
add
jecxz
popf
pop
adc
pop
int3
or
inc
push
mov
gs
mov
sub
shl
int3
cs
dec
pop
xchg
ret
dec
push
in
cs
in
daa
mov
addl
mov
xor
push
xchg
daa
adc
jns
or
insl
shlb
jle
mov
cld
insl
or
mov
sbb
int3
out
shrb
cmpsb
or
xchg
xchg
jg
pop
mov
clc
mov
inc
fucomp
mov
dec
or
mov
in
sbb
inc
out
scas
ficoml
int3
scas
test
xor
mov
xchg
dec
add
add
ret
insb
aas
sbb
andl
mov
aad
jo
sbb
not
cli
mov
xor
xchg
add
repz
mov
dec
in
adc
int
ljmp
ja
push
scas
adc
rorl
xchg
mov
dec
mov
stos
mov
movsb
xchg
mov
jle
and
pop
mov
sub
adc
std
outsb
aad
imul
xor
inc
xchg
nop
rcll
sub
add
pop
pop
jecxz
mov
cmpsl
cltd
lods
push
xchg
stc
push
inc
out
xchg
jmp
cwtl
mov
or
mov
std
aaa
dec
and
inc
mov
push
jae
into
or
xorl
pop
jmp
sub
pop
mov
pop
push
push
xlat
out
jle
push
in
mov
xor
movsb
scas
iretw
lcall
cmp
sbb
mov
loop
mov
incl
add
mov
mov
jmp
xchg
shrl
push
inc
mov
hlt
je
add
jge
mov
or
test
jp
jae
testb
pop
sub
loop
lcall
js
loope
sbb
jne
les
push
test
xor
scas
or
insl
rolb
xor
outsb
cltd
cld
pop
bnd
push
in
push
stc
mov
mov
adcb
mov
xchg
popa
les
xlat
pop
fadd
dec
xchg
or
sbb
fcomps
push
pop
mov
stos
insb
mov
stos
add
aaa
dec
add
or
fmul
fucomp
in
sbb
inc
sub
jp
pop
pop
sbb
cs
add
add
clc
data16
fs
out
push
test
add
lds
jno
xchg
out
and
push
or
testb
or
insb
dec
popf
sbb
out
stc
pop
data16
cwtl
push
pop
call
lahf
fstl
adc
shl
add
repnz
cmp
mov
dec
add
les
das
std
lods
inc
xlat
les
pop
cltd
mov
push
leave
mov
dec
stos
pusha
xchg
add
loopne
fdivl
adc
pop
lods
sub
les
push
sub
dec
mov
mov
add
jnp
in
addr16
out
inc
out
dec
stos
lcall
add
stos
sbb
ds
pop
fwait
sub
mov
fsubrs
int3
shll
cmpl
adc
push
xchg
scas
xlat
adc
and
test
push
mov
cmp
pop
dec
jo
xchg
and
cmp
jns
sbb
insl
add
gs
repz
pop
test
cli
add
pop
adc
pop
lret
vrcpps
jne
fwait
and
enter
pusha
pop
out
andl
push
mov
andl
divb
cmpb
mov
dec
mov
daa
cmp
xor
insb
sbb
hlt
or
xor
mov
jbe
das
divb
data16
test
loope
in
clc
mov
dec
and
push
push
clc
pop
xor
push
shll
push
adc
sahf
sti
lods
xchg
cli
in
into
xchg
outsb
outsl
mov
movb
aad
inc
jl
mov
sub
lds
mov
daa
ret
fcomip
cltd
cmp
jle
mov
pop
in
jg
push
dec
mov
daa
sub
int
or
lahf
leave
sub
ret
jbe
add
lock
js
push
mov
adc
pop
lahf
out
loopne
sub
test
call
sbb
pop
into
sbb
fistpll
and
lret
xor
or
test
inc
pop
push
mov
arpl
aam
scas
call
sub
sbb
lcall
outsl
push
test
movsl
inc
shll
add
or
inc
inc
pop
nop
sbb
adc
je
pop
mov
mov
pushf
push
jae
add
aam
jecxz
mov
addb
ret
out
jne
movsl
push
loopne
out
mov
pop
push
out
adc
lds
jb
in
xchg
adc
outsb
cmc
dec
popa
dec
lods
movsl
add
push
fcmovnu
xor
sahf
sbb
movl
mov
xor
mov
xor
testl
mov
stc
xchg
fdiv
int3
xor
mov
fdivr
push
ss
pop
imul
pop
sahf
jl
cld
mov
ja
testb
mov
mov
xor
xor
dec
pop
pop
mov
push
cmpsb
cltd
mov
rclb
fwait
or
je
arpl
hlt
inc
mov
stc
fisubrs
or
stc
lods
aas
xchg
test
mov
fs
push
adc
lahf
dec
ljmp
mov
out
in
ss
test
jo
repz
fimuls
pop
shll
out
cmp
out
sub
jecxz
out
mov
aam
stos
inc
xchg
cmp
inc
xchg
imul
sub
fwait
jg
daa
jmp
mov
ja
loop
xchg
outsb
imul
push
mov
jl
xchg
les
popf
push
in
sub
xor
and
std
xor
inc
cmp
clc
xchg
fwait
mov
mov
push
adc
or
sti
fstl
xchg
into
add
and
lea
jg
les
lret
push
nop
jle
fwait
xchg
ficoms
rep
inc
lea
mov
fdivr
stos
xchg
sti
or
and
call
push
push
xchg
int
jne
push
test
pop
mov
lahf
xchg
jmp
aad
adc
dec
test
stos
push
and
rolb
dec
dec
loopne
imul
fwait
bnd
inc
into
cmp
xchg
inc
sub
loope
and
ss
fwait
popf
and
loope
jnp
adc
sbb
outsb
dec
int
add
fmuls
pushf
dec
andl
mov
arpl
out
scas
sub
repz
pushf
fildl
test
or
roll
int
or
cltd
adc
aaa
fsubr
mov
xchg
popa
test
pusha
popf
cmp
jecxz
adc
jne
stos
repnz
mov
mov
iret
push
mov
sti
pop
lods
xor
cmc
loop
add
xor
aam
mov
dec
or
or
push
push
iret
adc
fcmovu
imul
cmp
je
enter
and
loop
mov
jmp
mov
andb
into
dec
aaa
dec
xchg
mov
fsubrl
jl
pop
push
sbb
add
dec
pop
call
aad
sub
push
and
cmp
sbb
cld
call
jb
aad
nop
xchg
or
xchg
pop
mov
inc
arpl
jecxz
notb
dec
mov
jb
sub
testl
sbb
les
mov
mov
lock
sbb
imul
pop
out
je
popfw
cmp
movsl
push
cmpl
cli
sub
ret
mov
mov
aas
insb
andl
mov
xlat
mov
cmp
jp
leave
ret
pop
cmp
push
sub
xor
mov
not
lret
dec
push
fstpt
insl
dec
mov
rorb
cmp
sarb
cli
outsl
loop
lcall
adc
push
mov
dec
inc
loop
jne
add
push
cmp
test
inc
xor
insb
fstl
imul
loope
enter
ja
push
sbb
sub
fmulp
fnsave
repnz
inc
jl
dec
arpl
mov
int3
mov
scas
jecxz
lret
hlt
dec
pop
inc
or
mov
fsubl
push
mov
pop
loope
dec
mov
cmp
lret
ja
in
push
ss
add
jnp
scas
xor
out
dec
cltd
mov
inc
pop
jb
or
xchg
lds
rorb
cmp
outsb
and
mov
cmp
inc
sbb
lret
testl
imul
pop
fnsave
in
lret
popa
cmp
inc
push
fimuls
jnp
inc
inc
push
add
aam
fs
mov
mov
dec
pushf
addr16
lea
push
sbb
shrb
xor
adcb
lods
jnp
loopne
push
sub
add
mov
in
inc
popa
cs
es
test
int3
outsl
call
aaa
dec
jge
and
sti
enter
mov
shrb
bnd
xchg
inc
lret
mulb
fcompl
mov
mov
pop
pop
pusha
add
xor
dec
mov
mov
jns
jle
ljmp
dec
stos
popa
pop
outsb
inc
mov
push
leave
push
dec
mov
inc
mov
jl
test
fcompl
xor
jle
xchg
iret
xchg
outsl
push
xor
lods
jo
push
push
xchg
jp
repz
ficompl
jg
add
mov
dec
jno
movsl
pusha
popa
mov
or
jl
jg
fadd
and
mov
test
sarb
pop
out
inc
or
jns
and
movl
fsubrl
aas
shlb
pop
iret
push
popf
or
js
stos
cmp
pop
loope
clc
dec
inc
sbb
loop
ret
aam
fidivrl
shl
push
push
dec
repz
xor
mov
cmp
dec
cs
test
pop
fidivl
dec
call
in
or
movsl
arpl
lret
ja
aam
ret
dec
test
jne
test
dec
add
movsb
jb
jne
aas
mov
pop
sub
xlat
xlat
sbb
popa
sub
inc
mov
xlat
adc
push
push
testb
ret
dec
sbb
push
pop
and
out
subb
je
push
push
mov
jmp
pop
and
scas
adc
inc
in
mov
in
stos
inc
inc
fnsave
pop
pop
jae
xchg
sahf
ds
xchg
test
lods
inc
add
fisubrl
mov
push
pop
orb
dec
nop
sbb
xor
fcmovb
pusha
notb
jmp
idivl
pushf
js
dec
ret
xchg
test
or
xor
cmpsb
movsb
es
sahf
fstpl
cmp
mov
in
mov
rcrl
test
loope
jns
mov
fisttps
es
dec
push
cli
mov
clc
jge
sbb
jb
jo
ds
pop
or
jne
push
aas
mov
sbb
addr16
scas
addl
pop
sub
mov
lea
loope
mov
out
push
pushf
pop
lcall
nop
pop
ds
fsubl
fld
jl
ret
mov
push
imul
andb
js
mov
inc
push
jne
mov
popa
jle
xor
push
jecxz
pushw
jecxz
mov
add
ss
xchg
test
xor
mov
jecxz
gs
rorb
add
add
sub
mov
pop
repz
xor
scas
rorb
or
lods
dec
jle
inc
xchg
loopne
fs
sahf
cli
adc
out
mov
nop
rcrb
nopl
loope
xchg
push
cmpsl
std
in
push
inc
stos
pop
cwtl
sub
dec
imul
xor
inc
sub
mov
pop
inc
sub
enter
and
mov
shrl
cmp
test
xchg
movsl
repnz
cmp
adc
xchg
mov
push
hlt
sbb
pop
scas
xlat
jne
jne
mov
bound
ja
aad
xchg
dec
add
pop
mov
stos
test
fsubrl
pop
test
xor
jmp
sbb
jmp
mov
add
ljmp
adc
test
popl
rol
iret
fdivr
rorl
cs
add
or
andb
testb
adcl
popf
or
xchg
push
test
xor
cmpsb
mov
inc
imul
fcmovbe
mov
int3
dec
cmp
xchg
imul
in
sbb
shrb
es
inc
data16
rcrl
movl
movsl
fmuls
nop
mov
dec
test
loopne
jno
mov
xchg
iret
imulb
sbb
test
std
or
mov
daa
jmp
into
cmpsl
and
sbb
inc
pop
int3
dec
mov
je
jecxz
rcrb
mov
sbbl
jecxz
jge
add
aaa
popa
lods
inc
xor
jbe
push
push
sub
cmpsl
data16
cmp
mov
xor
dec
fiadds
jmp
mov
into
mov
ljmp
xchg
test
mov
lcall
mov
fildll
inc
lock
gs
jb
push
mov
shlb
jl
popf
cmp
cmp
lods
adc
push
cs
js
xchg
xchg
popa
dec
sub
xor
shlb
jo
lret
jmp
push
mov
push
negl
xchg
or
je
adc
and
pop
ret
or
mov
jl
lret
jbe
inc
and
push
push
cmp
shrb
arpl
pusha
inc
aad
movsb
test
jno
add
loope
sbb
pop
loope
push
fistpll
fnstcw
push
int3
sahf
push
je
imul
sub
ljmp
jle
scas
movsb
adc
test
loopne
mov
mov
out
mov
xor
cltd
xor
addr16
pop
sub
insl
mov
mov
mov
or
in
lods
lods
cld
mov
xchg
sbb
pop
jns
pop
pop
add
rolb
jg
addr16
push
and
sbb
mov
fildll
sti
lods
sti
andl
jl
push
pop
fdivrl
sub
inc
stos
imul
mov
sbb
mov
sbb
sbb
cmpsb
dec
lods
mov
pop
pop
pop
fadds
pop
adc
xor
mov
mov
rcll
test
pop
lret
push
jne
subb
push
mov
fs
fcomps
pop
test
mov
test
gs
or
mov
and
xor
pushf
and
sbb
jle
jmp
mov
iret
dec
lds
mov
xchg
sub
sub
fs
xchg
lea
inc
ret
mov
lods
xchg
mov
xchg
pop
pop
popf
xor
movsb
hlt
adc
pusha
fldt
enter
js
mov
push
and
add
xchg
imul
adc
inc
jg
pusha
jp
ljmp
inc
push
fdivrs
and
into
dec
clc
sbbb
sar
or
hlt
push
add
shlb
mov
aad
cmp
sub
loopne
sub
sub
scas
xor
call
or
in
ret
cld
adc
movsb
stc
or
jne
inc
pop
jecxz
imul
jns
loope
fst
movsb
mov
aaa
call
cmp
inc
scas
in
inc
push
adc
jl
cmc
pop
push
mov
ret
aad
andl
pop
rclb
stc
movsb
mov
mov
mov
fstpt
mov
xor
mov
xor
cli
pusha
xchg
lods
and
dec
add
sbb
addl
mov
mov
sub
outsb
daa
mov
xor
popf
mov
add
or
sub
inc
dec
imul
mov
lds
xchg
xchg
in
outsl
int3
testl
jmp
adc
mov
push
sub
mov
pop
ja
sbb
lds
stos
mov
adc
inc
jecxz
js
or
adc
xchg
adc
out
insl
sar
cli
add
js
in
adc
mov
xchg
sub
lods
inc
xorb
pop
js
fdivrp
jne
cmc
int
call
pop
cmp
push
dec
jns
cwtl
scas
mov
pop
mov
mov
push
daa
ret
cmc
cmp
adc
mov
cmp
out
into
scas
jbe
pop
int
movsl
ljmp
xchg
mov
add
in
es
lret
mov
fdivs
add
cli
std
aas
mov
add
sub
or
jnp
push
sub
mov
test
lret
push
lods
fidivrs
push
mov
test
nop
xor
mov
mov
push
bound
mov
and
stc
lahf
out
or
imul
loop
lock
fneni(8087
push
shll
jns
mov
and
lods
mov
std
pop
mov
lahf
test
dec
ret
add
mov
push
pop
sub
fstl
sbb
mov
xor
scas
in
pop
cmp
into
push
outsb
cmp
loop
jp
jg
imul
shlb
stos
aaa
adc
jl
enter
in
mov
ds
call
sub
clc
shrb
shl
push
push
and
sahf
cmpsb
or
stos
mov
das
xchg
aad
or
dec
cmp
in
fs
mov
dec
icebp
dec
jge
jmp
pop
jl
dec
jl
mov
dec
insb
jb
repz
js
mov
pusha
add
jo
mov
xchg
iret
adc
and
ss
imul
int3
push
cltd
push
ror
ljmp
mov
test
or
test
popa
ds
stos
pop
es
in
dec
mov
in
int3
lods
and
lock
lret
sbb
fxch
mov
ret
add
add
inc
or
pop
xchg
fidivrl
dec
jb
test
aas
pusha
aas
add
and
pop
mov
pushf
xor
push
jg
jmp
jb
and
test
fiadds
movsb
add
sbb
movsb
cltd
inc
aas
cmp
movsb
push
push
jbe
push
mov
addr16
mov
ret
repnz
lcall
int3
loopne
inc
pop
ds
inc
sahf
outsb
xor
jo
mov
fbstp
mov
out
lahf
ficomps
lock
pop
movsb
xor
mov
xchg
or
jb
aam
push
cmp
outsb
inc
jnp
in
bound
mov
mov
iret
sbb
ret
push
jb
xlat
cmpsb
inc
leave
repnz
adc
scas
out
fcomps
xchg
adc
popa
les
test
dec
xor
arpl
push
ja
mov
dec
std
fdivrl
push
aam
mov
imul
jecxz
adc
sarb
or
push
adc
das
leave
mov
xchg
mov
out
mov
jno
jno
aam
pop
ljmp
add
adc
xchg
je
cmpsl
scas
out
les
das
popf
fwait
sub
imul
aam
std
cld
xchg
ret
jp
mov
xchg
sub
clc
fldcw
cwtl
outsb
bound
mov
out
test
aad
mov
outsb
push
lea
push
lcall
roll
in
in
jmp
mov
outsl
shll
mov
jae
pop
jb
mov
xor
fneni(8087
aad
loop
or
mov
fwait
aad
mov
cmpl
shll
xor
push
hlt
out
jns
adc
jl
jns
imul
idivl
jb
push
lret
loopne
jle
mov
pop
rolb
mov
push
push
aaa
cli
das
xchg
orl
in
shlb
jnp
imul
nop
testb
icebp
pop
fcompl
mov
xor
mov
xor
rcll
testb
inc
pop
fbld
jbe
arpl
mov
jmp
push
cld
jo
mov
lods
movsl
lcall
ja
pop
push
sub
loope
dec
sub
jp
sti
ja
xchg
sub
adc
cmc
cmp
pop
pusha
sbb
sarb
sbb
jno
mov
ret
pop
lock
pop
loop
mov
push
push
outsb
test
shlb
push
je
mov
adcl
push
imul
sub
xor
push
es
sbb
pop
stos
jecxz
ret
arpl
rorl
mov
int3
pop
jl
fcmove
test
mov
call
push
iret
mov
sbb
cli
jecxz
call
push
out
pop
mov
outsb
les
shll
outsl
inc
fcoml
mov
xchg
xor
imul
inc
dec
mov
inc
lds
lahf
popf
mov
adc
and
adc
dec
cmp
nop
lods
bound
push
fwait
sahf
cmp
movsb
shr
daa
or
dec
mov
out
addr16
jmp
xchg
xor
test
leave
fxch
jmp
cwtl
and
orb
xchg
jle
stos
fs
ja
cmpsl
sbb
xchg
jge
inc
dec
test
sub
fbstp
jmp
sub
lock
ja
mov
movsb
stc
pusha
mov
aaa
aam
mov
sbb
lds
jo
sub
xor
je
or
push
popf
mov
inc
mov
mov
movsl
jge
inc
dec
push
adc
cltd
inc
idiv
cli
xchg
sub
push
adc
test
or
dec
cmpsl
scas
in
aas
insb
sub
mov
dec
ljmp
and
push
ret
aad
movsl
mov
adc
sbb
push
ret
icebp
mov
inc
xorl
into
popa
aaa
daa
div
sbb
ret
dec
cli
dec
insb
xlat
xlat
pop
pushf
dec
dec
rcrl
leave
jmp
fwait
test
dec
sahf
test
inc
std
lods
push
andl
into
push
decl
fcmovu
icebp
dec
add
xor
fwait
pop
cld
jg
xchg
aas
repnz
jb
mov
cmp
xchg
jne
daa
mov
and
inc
and
add
and
adc
aam
outsl
jg
mov
leave
rcrb
jne
cmc
mov
inc
mov
mov
test
mov
fidivl
repnz
sub
movsb
popa
push
in
repnz
jg
sarl
ss
iret
or
imul
push
fwait
shll
gs
mov
jae
adc
push
cmp
cld
inc
add
jmp
lahf
mov
mov
sub
xor
and
fbld
adc
jg
or
ffree
shl
inc
xchg
mov
shr
xor
in
lahf
inc
decl
daa
mov
ret
dec
es
das
test
js
mov
pop
dec
sub
or
pop
pop
mov
add
cwtl
adc
lods
pop
sarb
test
gs
sub
sti
pop
stc
std
cmp
xchg
mov
mov
out
ljmp
pop
ljmp
ret
sub
jl
mov
jmp
sbbl
push
jecxz
mov
or
cmpsb
adc
jg
cmpsb
arpl
test
inc
sbb
cli
ret
inc
xor
add
cmp
mov
pop
iret
mov
div
fucomip
pusha
mov
dec
jle
in
push
test
je
jle
aaa
mov
cmp
mov
imul
push
jo
pop
xchg
add
push
arpl
mov
jne
repnz
pop
mov
lahf
addr16
fstpl
jo
out
scas
ja
sahf
xor
cld
scas
mov
popa
lcall
mov
jl
lret
mov
or
mov
mov
jl
sbbl
cmc
gs
cltd
in
shll
jle
shrb
ljmp
stc
fisubrl
push
fdivrs
popa
push
and
std
daa
cmp
jno
es
outsb
js
and
sub
js
lods
dec
cmpsb
cli
pop
bound
out
xchg
mov
pop
and
test
add
mov
insb
sarb
es
xchg
cmpl
jle
nop
jle
sbb
xchg
out
mov
cmp
mov
jp
jbe
insb
mov
inc
push
or
movsb
cld
rorl
test
xchg
loope
mov
inc
cmpb
push
mov
mov
mov
push
pop
push
imul
mov
cli
leave
outsb
mov
jb
insb
inc
adc
pop
popf
or
lock
pop
test
aad
fcomip
ret
test
xlat
lret
ljmp
dec
pop
fstps
xchg
and
jne
data16
into
movsb
xchg
push
xor
cld
cld
or
enter
out
push
sbb
lahf
movsl
out
insb
dec
lret
call
es
arpl
xchg
push
cli
daa
and
jbe
icebp
inc
aad
and
inc
test
dec
inc
or
into
rolb
imul
arpl
xchg
push
in
dec
push
mov
push
xchg
outsb
cld
in
popa
mov
jbe
cmp
lods
and
pusha
xchg
icebp
dec
sub
mov
sub
and
inc
and
pop
inc
cmpsl
cmp
hlt
cli
adc
adc
mov
aad
add
dec
popf
or
xchg
sub
aas
je
mov
mov
not
loope
pop
sbbb
pop
notl
ja
aad
sbb
loop
mov
cmp
adc
dec
cwtl
out
rcr
dec
jae
xor
stc
mov
jne
add
cmpsb
sub
push
sbb
ds
pop
or
call
mov
mov
dec
mov
int3
mov
jo
lods
mov
js
out
imul
mov
jbe
xor
push
stos
in
call
lea
cmpsb
jle
stos
sbb
test
inc
jb
fwait
in
rcrb
xchg
std
mov
inc
imul
rolb
jbe
push
mov
adc
mov
push
data16
pop
inc
sbb
xchg
lea
je,pn
cmpsl
push
pop
sbb
sub
push
xchg
out
leave
mov
and
insb
nop
mov
lret
stos
mov
out
hlt
fisubrs
in
roll
jmp
sbb
inc
mov
data16
ret
gs
sbb
lods
push
test
pop
test
aaa
push
lock
bound
pop
jge
and
lret
sub
ficoml
test
fisubrs
out
sub
fdivrs
pop
inc
lret
loop
mov
mov
push
jg
nop
add
aad
or
jno
lahf
sub
lods
aaa
popf
rcrl
sbb
xorl
inc
pop
andb
xchg
shlb
mov
xor
mov
pop
fwait
sbb
mov
adc
or
or
cmp
out
daa
pop
inc
hlt
pop
cmpsb
mov
cs
mul
shrl
or
es
data16
cltd
pop
jp
data16
lods
in
sahf
fldl
push
jl
iret
dec
xchg
or
lods
mov
in
or
mov
shr
mov
mov
gs
loope
or
sbbb
xor
add
into
sahf
sbb
push
imul
mov
sbb
sahf
hlt
lahf
add
push
dec
enter
popf
push
and
cmc
cmp
dec
mov
or
push
stc
and
cmp
jae
ds
into
dec
cmp
out
stos
mov
int
rorl
mov
movsbl
and
cmc
add
pop
sub
addb
xor
pop
mov
push
clc
xchg
push
lcall
test
pop
mov
les
icebp
addr16
adc
test
cpuid
lods
adc
jno
daa
or
call
popa
cmpsl
sub
mov
mov
dec
xchg
jg
out
inc
xchg
lret
arpl
lcall
jns
aam
push
insl
mov
aaa
das
lods
shl
mov
add
sub
xor
pushf
jns
movl
adc
mov
adc
mov
add
leave
mov
cmp
fwait
jns
xor
sbbb
leave
inc
pop
or
scas
fs
int
sbb
movnti
test
pop
mov
cmpsl
iret
dec
jae
jne
ss
loope
xchg
mov
xor
into
push
sbb
jp
dec
jne
mov
call
shll
fsubrs
jne
lods
dec
and
in
lret
out
xchg
add
xchg
imul
adc
jg
lock
push
sub
pusha
jnp
xor
fwait
mov
xchg
fildll
pop
add
sahf
add
inc
mov
outsl
mov
sbb
push
lret
add
int
out
mov
pop
mov
dec
or
js
mov
sub
cwtl
jno
aaa
xchg
mov
pop
stc
mov
call
lock
cmp
push
fwait
cmc
inc
xor
divb
pop
aaa
push
es
scas
sub
fucomi
nop
aad
fsubrs
push
ljmp
sub
mov
inc
lcall
mov
push
fcoms
mov
ret
cmpsb
aad
sub
push
xchg
jnp
xchg
mov
out
adc
push
adc
ret
and
add
call
ss
pop
mov
xorl
mov
ret
xorb
addr16
cmp
inc
xor
pop
jb
pop
lahf
js
addr16
scas
xchg
lret
inc
dec
roll
in
and
add
or
nop
mov
sahf
mov
inc
pusha
cmp
jl
ficoml
ret
mov
fwait
dec
xlat
cli
leave
inc
inc
addr16
dec
push
push
sub
clc
cmp
mov
jo
in
nop
cmpsb
xor
push
inc
fisubrs
imulb
dec
std
pop
lock
mov
gs
push
inc
or
add
xor
cld
mov
repz
adcl
sub
add
aaa
lods
bound
rorl
mov
adc
fstpl
mov
pop
mov
pop
mov
cmp
daa
push
push
xchg
jae
or
push
xchg
mov
repz
pop
or
or
leave
inc
outsb
inc
push
shl
popf
mov
cmp
pushf
fstl
es
repnz
arpl
outsl
adc
fists
dec
push
pop
sub
in
lret
ja
xchg
fs
xor
mov
decb
ds
push
das
loop
lcall
inc
ja
repnz
les
jnp
pop
dec
pop
les
inc
mov
push
or
cmp
dec
and
sub
jmp
outsl
iret
out
mov
mov
mov
dec
xor
jge
cs
pusha
cmpsl
xor
xor
xchg
shll
push
mov
mov
lods
and
iret
mov
cmpl
mov
cmp
jo
ss
insb
shlb
push
and
add
loope
inc
pusha
in
pop
add
mov
jb
loope
or
movsl
push
sbb
call
lods
cwtl
sub
jo
push
mov
sub
fldt
out
pop
pop
add
or
jmp
add
rolb
push
lock
jl
mov
push
sub
cltd
in
mov
sbb
sbb
mov
cmc
subb
add
sahf
fwait
cmpsl
add
and
js
rcrl
les
lahf
loope
push
je
dec
and
mov
jo
mov
imul
mov
push
mov
push
adc
xor
mov
mov
adcl
pushf
and
loop
imul
ljmp
dec
inc
xchg
cmc
testl
add
jp
leave
out
cmp
test
mov
and
push
mov
imul
repz
xlat
pushf
dec
push
mov
xchg
pop
pop
outsl
aad
add
cmc
int
push
fstps
out
popa
sti
call
cmp
lret
jb
call
test
xlat
enter
xor
test
jns
mov
in
gs
movsb
jae
movsl
pop
adc
ret
into
inc
ror
test
jno
fucomi
mov
jge
add
mov
push
loopne
pop
cs
jo
push
adc
dec
adc
mov
mov
inc
leave
jae
or
nop
in
lahf
in
sub
fdivrp
loope
mov
pop
pushf
mov
lret
scas
fsubs
sahf
ret
xchg
cmp
rcll
dec
lahf
add
cld
push
pop
ja
push
mov
flds
test
add
ja
push
cltd
lret
sbb
stos
jb
cmp
mov
xchg
xchg
xchg
jg
jge
mov
insl
jge
push
leave
jg
adc
mov
popf
cmpsl
pusha
cs
divl
xchg
jbe
inc
lods
stc
sbb
cwtl
subl
push
push
sbb
adc
call
inc
pop
cmp
ljmp
xchg
jbe
or
lahf
test
lret
outsl
add
lock
dec
cmp
rcll
or
adc
sub
stos
and
jb
lods
icebp
icebp
mov
inc
icebp
shll
in
and
stos
inc
in
jns
cmp
dec
imul
push
sbb
jmp
fnsetpm(287
adc
notb
orb
mov
fcomip
loopne
sar
test
cmc
pop
arpl
pop
loop
cmp
lock
xchg
aaa
enter
je
adc
xor
jp
ljmp
dec
lock
in
pop
scas
sub
aaa
or
push
jno
sub
mov
fidivrl
jecxz,pt
out
or
sub
mov
addr16
mov
mov
into
xor
ja
les
das
push
dec
jnp
cli
js
out
daa
sub
jne
mov
movsl
and
add
scas
leave
jecxz
adc
into
imull
sub
dec
jnp
fnstcw
adc
sti
aas
jl
xor
iret
pop
mov
imul
shl
and
mov
fs
xchg
mov
xchg
mov
fisttps
mov
or
pop
inc
js
adc
cld
cmp
pop
cmp
cs
adcl
int3
pusha
in
inc
les
jge
add
jne
fmull
repz
loope
cmp
add
mov
sbb
lea
jbe
insl
test
mov
sub
mov
movsl
pop
sarb
inc
xchg
hlt
mov
test
testl
push
push
lock
ljmp
movsb
and
pusha
lret
or
ret
push
push
pop
test
and
cltd
mov
and
mov
aam
push
and
aas
add
fcoml
jne
mov
fidivl
sub
sub
add
shrl
push
std
cmpsb
push
mov
jo
icebp
inc
fstpl
dec
pop
xor
mov
sti
pop
mov
push
xchg
and
inc
filds
mov
or
int3
xor
fwait
inc
mov
repz
test
push
lret
adc
loop
mov
subb
pop
int
stos
lods
push
mov
push
adc
lret
or
arpl
mov
addr16
and
pop
dec
sbb
sbb
cmpb
push
adc
gs
mov
push
and
and
fxch
mov
pop
icebp
inc
and
nop
and
xlat
cmp
in
adc
rorl
dec
negb
lea
cltd
movsl
jp
sbb
mov
jae
jecxz
mov
insl
ja
or
or
loop
dec
into
addr16
loopne
cmp
daa
inc
or
psadbw
jecxz
out
mov
dec
pop
xchg
insb
sub
cmp
sbb
jl
mov
popa
and
sar
inc
mov
push
mov
dec
in
cwtl
pop
jne
cmp
iret
imul
inc
sub
lock
pop
gs
add
or
or
sub
sbb
mov
xor
rcrb
sub
dec
lods
fistps
inc
cmp
loop
cmpsl
es
jno
or
lds
loop
lods
es
jle
adc
xor
pop
lcall
add
and
dec
xchg
adc
or
sbb
xchg
stos
shlb
push
xstore-rng
cmpsl
add
dec
popa
int3
movsb
jnp
xchg
sbb
mov
out
xchg
ss
cmp
add
or
es
cmp
dec
fwait
daa
adc
idivb
fidivs
into
inc
and
imul
addr16
dec
mov
xlat
ret
repz
cmp
ss
testl
adc
sub
loop
iret
out
push
les
imul
sbb
insl
rol
push
push
inc
lds
stos
lods
adc
ficoms
sbb
cmpsb
sub
hlt
mov
and
imul
frstor
ss
dec
movb
jbe
xor
pop
rol
or
xor
enter
or
sarb
jne
lds
push
push
adc
fbld
rcr
icebp
mov
cmp
xor
or
mov
xchg
das
mov
or
xchg
das
sub
aaa
xchg
xor
popa
xor
sbb
bound
lcall
push
pusha
add
icebp
dec
es
lret
xor
add
xchg
mov
jge
lcall
insb
ret
mov
lahf
aas
pop
sbbl
insl
pushf
pop
sti
mov
xor
sbb
sahf
adc
or
leave
dec
pop
or
jl
imul
jp
fcoms
js
dec
mov
add
popf
icebp
lods
pop
sbb
inc
push
jg
pop
repz
hlt
push
mov
ds
xchg
push
jne
add
scas
fmul
aaa
mov
mov
loop
or
mov
or
int
adc
lock
jnp
lret
jnp
mov
ja
and
dec
cmp
in
mov
inc
pop
jb
into
inc
push
sarb
inc
mov
test
jns
xchg
int3
mov
and
faddp
jle
pop
out
jle
dec
push
adc
loop
push
and
push
xchg
xchg
xor
add
cltd
add
push
std
cmp
cmpsb
int
adc
scas
out
mov
in
fistpl
jnp
dec
mov
push
lea
lahf
mov
in
and
movsb
pop
out
mov
das
jmp
stc
jno
stc
lea
aas
loopne
je
sub
xchg
add
xchg
cwtl
imul
jae
sub
lret
std
jg
fbstp
xor
and
pop
add
lret
sub
and
push
pop
insb
mov
inc
insb
cmp
shlb
mov
repnz
aas
stos
out
pop
out
mov
lds
or
stos
add
lods
jb
add
out
jae
gs
ljmp
enter
jns
or
mov
roll
cmp
je
mov
js
inc
cmpsb
pop
jns
stos
adc
jb
aas
test
xor
aad
fsubl
mov
mov
sbb
sub
daa
iret
adc
add
enter
dec
test
jne
rcrb
mov
insb
sahf
mov
pop
ret
les
je
pop
mov
iret
cmp
xchg
xor
push
psraw
or
jmp
mov
dec
lcall
xor
outsl
sbb
jge
cmp
sub
int3
cmp
inc
or
sub
and
pop
jmp
jle
xchg
cmovbe
mov
cmc
daa
pop
sub
call
in
and
push
out
aas
adc
out
cmp
pop
shlb
push
fwait
cmp
divb
ljmp
movsb
dec
gs
cmp
sti
rcl
mov
push
jp
xor
mov
dec
inc
xor
or
inc
out
das
add
xchg
stos
inc
arpl
lret
mov
popa
sbb
adc
push
xor
pop
jno
or
adc
and
mov
xchg
push
call
pusha
out
push
fwait
fs
mov
into
lcall
or
jle
movsb
xchg
lcall
xchg
mov
in
in
jp
repnz
sbb
loopne
js
aas
shrl
enter
ret
mov
jmp
or
decb
mov
das
mov
pop
fnsave
test
mov
sub
mov
mov
mov
js
fdecstp
imulb
movsl
jmp
lock
adc
xchg
enter
xorb
sub
sbb
lcall
out
jnp
sbbb
push
jnp
insl
pop
fcomps
test
lds
mov
fwait
mov
dec
jb
dec
push
xor
jmp
mov
cmpsl
sbb
sbbl
mov
bound
cmc
jno
cmp
sub
dec
inc
xor
mov
movsb
cmp
cmpsl
mov
jl
movsb
push
or
adc
mov
lock
mov
xchg
mov
jle
mov
jno
cmp
jmp
int3
rorl
push
jle
aaa
xchg
mov
call
pop
pushf
mov
ret
mov
pop
jb
or
mov
shlb
xor
jno
stos
test
add
jmp
sbb
or
std
xor
jmp
das
add
stos
and
lret
push
jbe
push
stos
xlat
mov
or
xchg
sbbl
and
ljmp
leave
mov
cmpsl
cli
and
mov
pop
cmpb
xlat
lods
and
notl
xorb
xor
or
test
add
jae
fcmovnbe
sbb
push
insb
clc
aad
jg
rcll
out
enter
movsl
pop
adc
lea
inc
stos
xchg
xchg
mov
pop
adc
add
or
cwtl
ret
lds
mull
push
shll
mov
into
jl
fcmovnbe
mov
jg
cmp
and
jge
cmpl
or
shlb
cmp
mov
xlat
mov
mov
dec
jbe
hlt
imul
mov
mov
pop
cmp
push
mov
xlat
gs
in
mov
lcall
leave
dec
add
xchg
lods
aad
inc
push
xor
pusha
stos
insb
xlat
add
cmc
and
jbe
fxch
cmp
pop
lcall
in
shlb
pop
or
pop
aad
sbb
or
cmp
sbb
dec
and
insl
cld
push
cs
imul
xor
test
es
lock
test
mov
pop
cmp
daa
mov
xchg
or
xchg
cmp
aaa
fs
cmpsb
aas
cmp
xchg
xchg
test
adc
inc
lock
dec
and
shl
sbb
cwtl
out
xchg
imulb
jl
cwtl
outsl
pop
adc
mov
push
xor
dec
cs
mov
repz
adc
int3
arpl
add
mov
sarl
loop
sahf
mov
or
dec
popa
xchg
jne
outsb
xor
xchg
stc
gs
inc
clc
jns
in
sbb
and
jns,pn
mov
je
inc
mov
cmp
into
xor
mov
sub
fsubs
mov
mov
pop
cmp
jne
pop
repnz
inc
sbb
push
das
ljmp
ret
nop
insb
cmp
dec
arpl
in
pushf
push
and
push
adc
sbb
stc
decl
jb
jge
rcrl
sbb
or
repnz
push
in
in
xor
adc
mov
lcall
or
icebp
les
push
das
jmp
stos
imul
jne
ja
sbb
and
mov
mov
addr16
push
pop
aaa
jecxz
aad
jmp
out
mov
popa
repnz
shlb
sub
adc
loope
sar
inc
pushf
or
mov
and
mov
pop
jp
mov
or
push
jmp
xor
dec
dec
cmp
jl
fsubrp
loope
mov
imul
loopne
fbld
mov
test
ret
lret
xchg
xchg
loopne
pushf
loop
lods
lret
clc
pushf
daa
jmp
or
and
and
pop
inc
push
pop
outsl
jo
xchg
cmp
cmp
push
inc
js
or
mov
cmpsl
adc
pop
es
cmpl
lods
add
xlat
inc
sti
ret
xor
mov
pop
sub
add
xor
xchg
ljmp
ss
lea
stc
pushf
push
in
adcb
inc
sub
jecxz
stc
cmp
add
ljmp
push
fiaddl
mov
xor
pop
call
enter
leave
mov
mov
jle
xor
push
or
nop
imul
mov
cli
pop
test
mov
pop
loop
lahf
cmp
loopne
imul
arpl
je
fdivl
and
stos
loope
inc
mov
popa
mov
out
ljmp
addl
xchg
outsl
cmc
sbb
iret
shl
lods
lret
sbb
sub
mulb
js,pn
mov
pop
mov
sahf
and
mov
sub
fwait
roll
dec
mov
addr16
scas
jecxz
ret
adc
insb
jne
stos
pop
sbb
cmp
or
cmpsl
xchg
sbb
ret
sub
in
inc
or
or
or
xchg
jp
cmc
pop
adc
mov
stos
lret
xchg
jno
jl
je
movsb
or
out
or
es
bnd
aas
jecxz
or
xchg
mov
js
sbb
push
push
or
fisttpl
loop
out
add
jp
scas
jbe
jp
addr16
loop
lahf
and
aaa
pop
pop
jnp
xor
fbld
arpl
push
scas
jbe
jge
push
ret
loope
movsb
cmpsl
cmp
push
jge
ficoml
pop
adc
sahf
gs
cmp
cmpl
push
daa
push
insb
mov
dec
ss
int3
int
and
shlb
icebp
mov
scas
sbb
and
push
sbb
add
out
inc
or
push
icebp
cwtl
pop
insl
mov
sbb
sub
push
or
xor
xchg
int3
mov
pushf
sbb
ret
mov
sbb
icebp
jno
and
cli
sub
fsubr
scas
pop
cld
mov
inc
mov
ret
xorb
loop
lods
scas
pop
pop
nop
enter
dec
cmp
jne
hlt
mov
mov
cmp
jg
aas
xor
popf
sahf
mov
sub
ljmp
imul
fs
stc
call
jg
xchg
dec
imul
xor
movsb
andl
ds
xor
cmp
sbb
inc
cmc
insl
or
rcll
mov
in
mov
push
sbb
inc
data16
mov
pop
cs
xor
xlat
in
xchg
push
fsubr
or
jbe
jns
sbb
fsts
sbb
or
movsl
out
outsb
jge
adc
dec
push
sbb
cmp
cmp
push
lret
jne
in
leave
dec
orb
jno
test
lods
outsl
jle
repz
js
cwtl
adc
dec
jmp
int3
jae
pop
scas
mov
daa
loopne
inc
aad
stos
sbb
push
push
int
add
jo
push
dec
xor
pop
aas
mov
in
dec
mov
cld
or
cmp
hlt
or
cmc
pop
mov
outsb
orb
dec
xchg
arpl
mov
jl
xchg
sub
into
sub
js
ljmp
add
adc
mov
and
pushf
or
rolb
adcb
pop
pusha
loope
iret
movsl
pop
addl
mov
and
fdivr
dec
pop
or
hlt
mov
mov
out
inc
sar
das
fcoml
and
les
lret
fucomip
adc
subl
lahf
push
loope
mov
cmp
add
fimull
and
or
pop
xor
daa
and
pop
in
mov
cli
dec
pop
jmp
pop
sbb
push
cwtl
into
inc
mov
in
mov
not
mov
je
lods
adc
inc
mov
es
rclb
mov
idivb
and
hlt
cmpsl
xchg
mov
enter
inc
push
out
inc
nop
jecxz
jns
pop
add
lret
cmp
adc
mul
gs
xchg
jp
push
push
or
pusha
shl
out
jae
icebp
in
or
push
cld
xchg
into
mov
sbb
loop
mov
lods
push
xor
cmp
aad
add
add
sbb
addr16
cmp
das
jb
mov
cmp
mov
mov
mov
and
movaps
and
testb
repz
sbb
and
daa
out
dec
shll
sbb
jbe
xchg
and
add
add
dec
dec
cmp
cmp
scas
aad
inc
add
outsb
rorl
cmpsb
imul
mov
sarl
cli
adcb
nop
cmp
sbb
int3
mov
inc
arpl
pop
test
dec
adc
push
inc
push
mov
nop
dec
rcrb
popa
push
lea
nop
stc
jo
outsl
das
fs
fcoml
out
pop
adc
popa
std
pop
push
and
mov
ljmp
jae
sub
cs
push
outsb
mov
imul
lods
ss
sub
push
adcb
in
jp
mull
inc
in
push
and
cli
ret
dec
ficomps
inc
mov
fiadds
lret
int
and
or
xchg
pop
mov
push
fsubr
int3
pop
pop
aam
popa
xor
inc
sub
jo
jno
sti
sbb
mov
xor
mov
pop
push
popf
stc
sbb
lds
repnz
xchg
xchg
negl
or
or
enter
pusha
adc
imul
imul
push
xor
push
pop
mov
xor
hlt
push
orl
data16
nop
movsb
shrb
inc
imul
pop
test
jg
ja
popf
js
mov
cmp
xchg
jne
dec
pushf
pop
dec
push
fs
arpl
xor
lea
rcrl
fnstenv
cmpsl
and
call
fisttps
jno
jle
sbb
inc
lret
les
pusha
insl
pop
rclb
xchg
cmp
pop
push
sub
in
pusha
mov
inc
stc
xchg
aad
aaa
lahf
or
into
adc
mov
xchg
mov
dec
aas
add
test
imul
enter
push
jae
adc
lds
mov
sbb
and
inc
test
testb
les
pop
movsl
xchg
stc
pop
cmp
mov
rolb
push
or
into
stos
adc
xchg
add
mov
push
sub
sbb
mov
in
fwait
push
push
out
push
jecxz
fwait
stos
mov
mov
xchg
leave
add
mov
outsl
gs
xchg
sbb
mov
inc
and
xchg
dec
dec
dec
mov
and
and
les
mov
mov
cmp
push
dec
cmpl
cld
cli
lret
pop
rorl
lcall
imul
data16
pop
adc
shr
and
fwait
jo
sub
inc
sbb
in
pop
inc
sbb
hlt
rorw
xor
js
sbb
xor
mov
sarl
ret
ficoms
lds
mov
add
jl
jae
mov
loop
hlt
inc
rolb
scas
fisttps
push
je
popf
push
out
push
scas
out
sub
cli
add
pop
mov
push
mov
push
pop
int
fistpll
nop
or
sti
mov
pop
aas
inc
adc
adc
mov
ret
loopne,pt
xchg
xlat
aaa
test
sbb
xor
jge
loope
out
repnz
outsl
xchg
daa
jmp
pop
add
ret
jecxz
mov
mov
ror
les
pop
hlt
mov
leave
mov
jmp
mov
mov
or
xchg
jae
adc
lea
addr16
loope
imul
inc
mov
mov
cmpsb
test
lods
jmp
and
mov
test
cwtl
movsb
test
imul
insl
addb
mov
and
rcrb
add
mov
test
fldl
clc
in
lods
sub
adc
movsl
in
not
pop
aam
jnp
rorb
mov
xchg
popa
leave
mov
or
icebp
inc
lods
cmpsl
pop
call
pop
mov
lds
imul
sar
xorl
or
divl
stos
fwait
cmp
jle
xlat
mov
push
adc
inc
decb
xchg
sub
js
insb
cmp
add
in
in
ss
or
cs
je
out
in
jno
add
xlat
and
mov
insl
mov
mov
mov
adc
and
sahf
mov
push
mov
sub
pop
fisubrs
jmp
push
mov
jle
call
mov
or
fnstsw
clc
imul
xchg
loope
xor
data16
test
mov
pushf
js
mov
sbb
out
cmp
xchg
fisubl
cld
in
shlb
or
in
loope
sbb
sub
push
ficoms
mov
or
call
sub
imul
fdivr
int3
in
mov
repnz
add
adc
pushf
dec
test
shlb
jo
scas
outsb
fldenv
std
inc
jb
xor
push
imul
add
inc
sub
and
jne
test
xchg
out
addr16
mov
cwtl
jno
mov
push
mov
adc
xchg
cmp
bound
or
std
mov
mulb
jb
push
aaa
or
and
push
jbe
mov
push
and
outsb
lcall
inc
stos
lock
sti
aas
cmp
mov
dec
xchg
mov
mov
cmp
sub
adc
test
mov
std
das
das
cmp
outsl
sar
xorl
dec
xchg
add
pop
out
addr16
stc
cli
inc
mov
sub
scas
movl
test
xchg
push
cmp
sub
mov
das
fisttps
jl
mov
cmp
fadds
sbb
xchg
push
pop
cmp
mov
jmp
xchg
push
mov
test
cmpsb
jno
test
data16
enter
pop
stc
in
push
inc
nop
mov
xchg
mov
icebp
dec
dec
sub
or
sbb
jmp
push
in
adc
bound
cld
sbb
outsl
mov
sti
dec
and
jbe
mov
sub
xorb
lret
dec
shrl
imulb
xchg
adcb
mov
test
xchg
aas
rorb
xor
sar
notl
and
cmp
mov
dec
xchg
sbb
hlt
lock
std
data16
mov
fidivs
aad
add
mov
shll
out
sarb
add
or
dec
lahf
pop
xchg
xor
and
sbb
testb
out
out
xchg
dec
sahf
dec
jno
stos
clc
aam
xor
out
fcmovu
mov
fs
out
ficoms
aad
cmp
out
lret
jg
mov
xor
nop
jno
sti
lcall
push
jge
sti
lea
repnz
adc
adc
loope
jo
xchg
xchg
or
fidivl
loopne
cmp
aad
sub
sub
mov
jle
push
insb
sbb
push
fstps
cmp
cmp
mov
dec
pushf
inc
loop
bound
cmpsl
add
push
enter
dec
cmp
mov
dec
cs
cs
xchg
mov
mov
mov
jbe
adc
mov
mov
lret
mov
sarl
sub
jno
scas
jne
lods
popf
das
mov
jno
rcrl
test
int
addl
je
mov
inc
insb
div
jno
hlt
xchg
adc
and
xchg
xor
pop
in
push
or
ficoms
push
jecxz
push
ds
cmp
sti
int3
push
add
xchg
or
loope
das
cwtl
sbb
dec
adc
dec
dec
jmp
pop
pop
movsb
push
movl
loopne
jb
dec
mov
out
cmp
repnz
decb
mov
xchg
leave
pop
or
rolb
push
mov
dec
mov
fistpl
in
add
popf
ret
dec
cmpsb
mov
xor
jge
and
loope
out
push
iret
sbb
mov
addr16
cmp
inc
xlat
scas
and
ljmp
push
lock
daa
das
fs
xchg
les
sbb
ja
mov
add
fucomi
push
fcmovne
jnp
push
fidivrs
inc
cmpsb
movzwl
push
cli
pop
mov
inc
push
cli
pop
xchg
adc
mov
pop
mov
jb
cmp
out
mov
lods
inc
push
pop
cmp
sub
adc
jmp
or
push
das
ja
mov
lods
cwtl
cli
popf
bound
pop
fwait
mov
push
push
insl
dec
sub
test
jns
mov
test
mov
movsl
test
add
cmpsl
push
movsb
in
clc
jno
push
dec
add
mov
xchg
daa
pushf
cmp
sub
movsb
movb
xor
and
push
dec
jnp,pn
mov
cmpsw
push
pop
rcll
mov
adc
rclb
repnz
mov
sbbl
in
pop
push
repz
pop
jne
leave
ljmp
cmovbe
cmp
bound
ljmp
push
jmp
push
outsb
leave
xlat
outsl
adc
stos
mov
aad
test
cmpsl
sti
lock
dec
pop
xchg
mov
inc
push
int
aam
xchg
add
mov
xchg
xor
mulb
xor
adc
jne
mov
out
cmp
push
sbb
mov
jmp
adc
pop
lar
js
aas
cmp
sahf
jp
in
push
or
pop
adc
ret
js
ret
dec
xor
inc
push
and
pop
mov
dec
cltd
popa
mov
pop
mov
jo
test
mov
or
dec
and
pushl
xchg
fnsave
je
mov
in
inc
xchg
xchg
and
enter
daa
inc
cmp
test
mov
cmpl
fisubs
call
decl
test
jle
jmp
xchg
pop
cmpl
cmp
fnstsw
cmp
cld
or
js
sbb
inc
arpl
daa
xor
aas
shlb
cld
jl
mov
jp
ret
orl
add
pop
lret
leave
push
hlt
mov
and
and
mov
test
aas
sarb
int3
dec
xor
out
mov
pop
lods
push
dec
idivl
mov
adc
push
xchg
mov
ja
clc
int3
adc
sahf
pop
inc
dec
std
xchg
pop
sub
test
pavgb
push
push
shl
jns
xor
pop
inc
push
lods
lock
and
fisttpl
inc
stos
sbb
jno
sarl
and
je
nop
jecxz
add
outsb
insb
int3
mov
or
leave
and
shll
nop
cmp
fnstsw
cmp
sbb
call
negb
xor
mov
inc
iret
in
jl
add
pusha
cwtl
mov
xchg
mov
daa
xor
push
sbb
fs
int
jno
std
inc
popf
test
or
sbb
stos
inc
jecxz
lret
fisubl
adc
mov
push
icebp
mulb
test
mov
jns
popf
subl
dec
cmpsb
lret
push
outsb
dec
mov
insl
lds
std
jp
into
jns
ficomps
dec
lock
push
arpl
sub
mov
loope
mov
xchg
stos
shrl
xchg
ret
faddl
mov
sahf
ds
and
rclb
jg
cmp
outsl
xchg
shlb
loope
je
sub
push
fcomp
std
cli
cmpsl
icebp
rclb
loopne
ret
fidivrs
sti
pop
rcrb
bound
adc
push
adc
ror
jp
adc
add
je
sub
jno
loopne
das
mov
mov
mov
cmp
push
fsubrp
jmp
adc
push
fstps
lcall
scas
outsb
and
loope
and
jns
sbb
jle
xchg
mov
outsl
and
sub
sahf
sahf
loop
inc
adc
dec
lret
mov
and
imul
ljmp
add
das
add
int
test
cmc
lea
lcall
addr16
je
ret
add
cltd
inc
outsl
imul
lret
mov
jl
test
pusha
cmc
jle
mov
add
push
mov
pop
xchg
repz
adc
jo
or
mov
xor
in
pop
pop
add
into
push
mov
inc
gs
add
nop
repnz
adc
nop
daa
xchg
std
xchg
mov
mov
repz
fs
stos
cwtl
out
clc
push
cmp
jmp
or
nop
dec
dec
cmp
iret
imul
cmpsb
jo
enter
mov
cmp
lea
fistl
out
adc
fdivl
mov
mov
fdivrl
dec
push
add
push
andl
mov
push
add
loop
lcall
mov
rcll
sbb
test
imul
add
mov
mov
cmp
testb
out
jmp
nop
or
push
jmp
mov
shl
pop
or
pop
sti
add
xchg
or
fstpl
inc
out
sbb
sub
fcomi
es
dec
fdivrl
jo
test
cli
inc
loopne
ror
icebp
movsb
inc
mov
cmpsb
int
mov
sbb
mov
imul
xchg
test
mov
push
push
insl
lahf
sti
cmc
pop
inc
pop
or
ret
movsl
aaa
call
push
dec
mov
push
fwait
adc
addps
jecxz
imul
in
mov
imul
sahf
mov
lcall
mov
adc
jae
mov
mov
cmp
ss
fisubrl
mov
and
gs
pusha
fstps
insb
mov
mov
cs
xchg
adc
xchg
push
jo
loop
lods
cld
xor
fwait
add
mov
xor
mov
ret
sbb
add
ret
pop
int
das
cmp
cmp
dec
mov
enter
adc
sbb
repnz
sub
filds
in
add
lds
fwait
jbe
xchg
sahf
xchg
mov
push
and
push
test
xchg
push
push
mov
xorl
aad
sbb
insl
stos
fistpll
mov
lods
mov
dec
ret
stc
adc
out
fiaddl
mov
fildl
xor
dec
cmp
test
push
out
cmp
inc
add
nop
adc
mov
push
cmp
dec
clc
xchg
fidivs
mov
add
subb
out
xchg
daa
aaa
sub
stos
andl
dec
sar
mov
cmp
shlb
xchg
inc
popa
icebp
add
xchg
dec
mov
pop
cld
mov
push
testb
adc
adc
dec
in
mov
std
xchg
sbb
out
xchg
lea
shrl
iret
jno
xchg
xor
or
push
xchg
fcomps
shrl
stos
jns
xabort
pop
sub
dec
and
push
inc
and
and
xor
js
inc
dec
rol
addr16
xlat
xlat
mov
add
out
out
mov
dec
test
cld
mov
adc
popa
sbb
pop
jnp
or
adc
es
popf
xor
cmpsl
jns
jg
cmp
xchg
push
insl
bound
fwait
xchg
add
cmpb
pop
mov
xchg
in
repz
pop
add
push
aam
and
lahf
pop
xor
ret
in
cs
sbb
or
or
jge
mov
sbb
test
mov
mov
sub
int3
aad
in
pop
or
or
das
je
or
cmp
mov
pop
xchg
ja
xor
pop
test
pop
fs
mov
mov
shr
xor
mov
cmp
scas
stos
lods
mov
loope
test
jmp
dec
cli
pop
test
ljmp
stos
or
pop
aad
lods
push
push
rorb
fucomp
push
sbb
sbb
in
mov
jae
lods
add
mov
and
xchg
lea
shll
sbb
pop
jecxz
and
aad
dec
inc
mov
aaa
fldl
and
arpl
scas
sbb
andb
lret
aad
push
push
and
mov
repz
pop
sbb
cmp
sbb
into
insb
sbb
lods
add
pushf
lret
mov
xor
mov
aad
inc
push
sbb
ret
xchg
pusha
cmp
sub
aaa
jbe
or
add
call
sbb
scas
neg
leave
insl
repz
sbb
cmp
les
lods
xchg
xchg
push
sbb
jp
pushf
dec
roll
add
push
mov
imul
jns
adc
das
and
hlt
fisttpl
decb
pop
sar
dec
push
dec
inc
popf
movsb
sti
insl
icebp
cltd
mov
leave
in
or
fcompl
sub
js
fiaddl
adc
frstor
jl
xor
lret
lods
push
cmpsl
add
out
inc
pop
jmp
adc
lea
insl
loop
or
mov
sbb
in
mov
xor
mov
jno
xor
dec
pop
sti
push
inc
cmc
into
push
sar
scas
nop
xlat
mov
inc
shlb
push
pushf
test
clc
lods
cmp
aam
outsb
sub
in
stc
aam
mov
or
sti
in
fs
sub
pop
neg
ja
das
sub
mov
adc
jle
and
push
add
mov
loop
push
jno
xor
incl
inc
outsl
test
shrl
jb
out
cmp
lods
push
adc
cmp
cmp
ds
loopne
xor
push
pushf
arpl
ljmp
push
inc
shlb
jbe
push
adc
or
popa
repnz
lret
cmpsb
mov
ss
push
push
or
repnz
mov
sub
jne
inc
pop
fistpll
rorl
cmp
xchg
pop
jno
bound
sbb
sbb
inc
ja
jbe
dec
lahf
or
lcall
mov
dec
jmp
scas
inc
mov
cmp
scas
mov
push
bnd
mov
jg
stc
lds
push
xchg
push
and
mov
jno
leave
push
aas
mov
aam
mov
sbb
stos
push
xchg
and
jg
dec
jb
mov
xlat
and
rcrb
daa
stos
in
push
dec
dec
sbb
aam
lods
cli
add
nop
dec
negb
incb
lea
pop
jb
dec
push
mov
adc
pop
lcall
scas
rcl
mov
sbb
pop
add
arpl
test
fidivrl
je
sbb
out
jne
sahf
jns
push
cwtl
in
and
inc
imul
adc
xchg
pushf
clc
faddp
aam
push
push
dec
stos
or
sbb
cmp
mov
test
xor
pop
pop
push
mov
inc
add
iret
lock
iret
inc
sahf
push
stos
scas
or
pop
mov
in
movsb
push
out
pop
add
cmc
data16
add
inc
xlat
mov
out
lea
xor
cmp
sahf
andl
popa
scas
jbe
test
xlat
int
push
inc
out
aaa
into
imul
jno
shl
rcll
sub
fdivr
mov
stc
imul
test
test
add
mov
es
rclb
mov
iret
mov
imul
es
aad
mov
fimuls
mov
mov
xorl
cmp
hlt
gs
shll
das
dec
ret
inc
mov
add
inc
jbe
and
mov
js
scas
dec
aaa
xor
lods
add
jae
sahf
or
scas
inc
dec
fwait
in
inc
daa
sub
mov
fildll
pushf
inc
xor
loop
into
fldl2t
jne
sbb
dec
xor
sbbb
xor
imul
ret
shll
jle
jbe
xchg
sbb
repnz
lcall
jl
vfnmsub132ps
adc
sub
pop
fcoml
test
fwait
sbb
outsl
stc
mov
fmuls
jbe
xorl
test
call
adc
ds
mov
into
sub
pusha
bound
or
mov
aas
mov
xchg
add
lret
jp
js
sbb
mov
enter
xchg
mov
in
icebp
call
push
inc
mov
arpl
lea
adc
cmp
icebp
and
push
pop
xchg
fs
jp
dec
jmp
or
jne
fcomps
dec
cmpsb
movsl
addb
sub
out
xor
aad
jae
and
call
sbbb
jo
outsl
scas
mov
int
je
enter
shl
in
fs
lret
sub
cmp
aam
xor
jecxz
dec
jne
xor
jp
hlt
xor
sub
sarl
dec
fcmovbe
ret
sbb
push
in
sub
cmp
push
jb
stos
cmpsb
mov
adc
dec
sub
loopne
inc
jmp
mov
fistl
loope
loopne
rcll
mov
mull
loope
pusha
xor
mov
and
nop
sub
jnp
scas
pushf
pop
add
lods
aam
das
sar
jmp
mov
mov
xchg
inc
mov
popf
cmp
aad
sbb
aad
inc
adc
fdivrs
sub
jg
mov
jmp
jg
mov
lods
push
push
gs
push
dec
dec
ds
or
sub
pop
popf
xchg
adc
sahf
aaa
imul
inc
lock
or
push
push
fcomps
loopne
sub
sbb
in
pusha
shrl
into
cmp
and
adc
xchg
sbb
jecxz
or
fst
in
push
sti
cmp
shrl
sbb
in
xchg
fbld
xchg
cmp
arpl
jns
cmpsl
je
push
mov
rcl
fbstp
xchg
add
mov
mov
pusha
and
xchg
stc
fldenv
and
out
mov
mov
mov
sti
mov
scas
and
fildll
mov
es
daa
int
enter
cmp
mov
jecxz
mov
in
adc
and
pop
jno
push
das
inc
or
out
lcall
fwait
adc
int
xor
ja
test
push
and
clc
bound
pop
push
mov
or
jnp
add
lods
mov
cmp
and
xchg
and
das
xor
hlt
sarb
jmp
and
lret
and
hlt
or
sbb
aad
outsb
mov
call
xchg
dec
or
push
pop
lcall
repz
test
xchg
out
and
ja
and
lahf
mov
loope
mov
out
and
in
into
add
insb
loopne
cltd
scas
push
xchg
jb
cwtl
mov
faddp
lock
add
in
in
dec
mov
negb
lea
jns
icebp
dec
jb
pop
sub
into
mov
pusha
movsl
cld
sub
in
and
call
shlb
in
sbb
push
xchg
lahf
stc
sub
and
pop
sub
rorl
imul
imul
pinsrw
fs
sarb
arpl
rolb
std
cmpsl
into
xchg
pop
xchg
dec
sub
pusha
out
jb
mov
int
and
outsb
inc
int3
push
fstl
inc
push
fadds
inc
adc
repz
push
xchg
imul
mov
jb
adc
sub
adc
out
movsb
rclb
push
pusha
addl
stc
dec
xchg
scas
stc
fnsave
sbb
and
in
mov
pop
or
stos
pop
cmp
mov
loopne
xchg
insl
cmp
mov
mov
lahf
pop
adc
push
push
xchg
sub
mov
add
daa
add
sbb
and
mov
push
fistpl
dec
jae
mov
and
sti
out
sub
mov
jns
adc
sti
jno
lea
in
out
or
sub
mov
shrb
daa
out
mov
jl
imul
aaa
pop
push
outsl
cmc
sti
pop
and
aas
jmp
icebp
push
jbe
lcall
push
mov
xor
sbb
int
in
outsb
lcall
fidivs
test
cmp
test
sub
sub
arpl
js
insb
jle
xor
sub
ret
mov
sar
in
xchg
aad
mov
xor
test
mov
es
jmp
movl
cld
mov
cmpsl
cmovo
mov
incb
jae
jne
pushf
dec
sub
xor
js
pop
scas
gs
adc
cmp
adc
shrl
imul
cmp
xchg
movsl
shlb
xor
mov
aam
vpor
sub
inc
push
pop
call
inc
cmp
test
fsubl
mov
inc
enter
popf
push
cmp
and
xchg
in
fs
sbb
int
push
test
cmp
jg
cmpb
out
arpl
insl
out
push
adc
jae
xchg
dec
out
arpl
in
sarb
stc
das
cli
add
arpl
dec
addl
hlt
cmp
in
mov
lods
rcrb
mov
mov
or
imul
push
imul
sub
shrb
sbb
mov
out
lahf
fld
push
xchg
push
insl
imul
push
enter
mov
ret
push
push
sub
into
shlb
mov
dec
inc
lret
je
iret
xor
jns
sub
aas
pop
scas
adcl
pop
cmc
imul
cmp
dec
hlt
outsb
cmp
mov
xor
inc
ror
dec
push
jnp
fsubl
xor
shll
andb
push
and
repz
fmull
mov
fsubs
mov
popa
lret
insb
sub
hlt
and
out
cmpsb
cmpsb
mov
cmpsl
loope
cltd
push
fdiv
test
cmp
aaa
add
xchg
or
shrl
pop
push
mov
popa
cmovns
jmp
pop
jge
loop
pop
xchg
jb
jb
pop
pushf
pop
iret
push
pop
aam
ret
test
fstpl
pop
sbb
icebp
pop
iret
adc
scas
cmc
leave
xor
lea
out
xor
cli
cs
cmp
gs
repnz
loop
mov
popa
xlat
or
sbb
out
cmp
mov
dec
loopne
xchg
and
push
call
ror
aam
and
or
or
stc
adc
lock
mov
jg
outsb
shrb
lods
lock
jg
movsl
sub
sub
mov
push
out
mov
loopne
leave
rcr
xor
cmpsl
out
ret
xchg
inc
shlb
push
in
xor
xor
sahf
testl
repnz
sub
enter
rcrl
pop
add
cmpsl
repnz
sub
jo
cmp
mov
fidivrs
cltd
adc
sub
inc
fistpll
in
leave
add
cmp
dec
push
pop
je
mov
hlt
mov
lcall
adc
out
fsubr
cwtl
pextrw
mov
es
addr16
lock
std
inc
dec
aam
insl
jl
mov
cmp
push
or
mov
sbb
or
fldt
dec
mov
orl
cmc
push
daa
fcmove
mov
push
xchg
loopne
stos
xchg
sti
mov
rcll
xchg
call
shlb
push
or
pop
lds
push
cmpsl
xchg
aas
fildll
inc
mov
cmp
fcomps
je
adc
xchg
jp
mov
in
sub
into
sub
cmp
mov
lret
test
jg
mov
xchg
cmp
ss
into
cmp
loop
mov
int
outsl
fidivs
scas
pushf
in
mov
push
imul
or
mov
sub
fidivrl
aas
mov
inc
ret
jno
mov
push
add
lods
enter
mov
sbb
and
ljmp
or
ror
rcll
sbbb
lods
lcall
adc
sub
sbb
sub
out
jmp
sub
imul
ror
jae
test
addb
nop
mov
std
jecxz
pop
mov
ja
fwait
mov
scas
mov
xchg
lret
jns
mov
std
imul
pop
sub
out
pop
loopne
jb
and
inc
lret
test
xchg
imul
ss
in
inc
push
dec
sbb
pop
fisubrl
and
cmpsl
bswap
or
inc
sbb
test
cmp
cs
jo
fs
push
mov
pop
jb
xchg
jp
cmp
dec
xchg
fistps
mov
addr16
ret
cmpsl
xor
in
repz
flds
or
jb
push
sti
pusha
sub
xchg
cmp
xchg
cld
jle
mov
or
and
cmpb
iret
cmpsl
cs
fcoms
int3
push
xchg
sbb
ljmp
clc
cmp
cltd
xor
xcrypt-cfb
cmpsl
arpl
sahf
add
jl
dec
dec
outsl
dec
xchg
divl
out
lcall
mov
fwait
test
mov
ficoml
pop
lcall
jno
adc
mov
pop
push
xor
bound
fstpt
stos
dec
fnclex
mov
in
sbb
mov
xchg
sub
dec
adc
addl
jae
and
pop
mov
xchg
adc
jbe
and
push
fildll
negl
cmp
outsl
out
mov
fs
imulb
lods
into
stos
enter
loop
imul
dec
jo
stos
push
or
ficompl
and
addr16
sub
insb
push
test
fstp
xchg
and
lahf
dec
jnp
mov
xchg
sti
xor
test
notb
pop
loop
and
mov
mov
clc
xchg
jnp
cmp
sub
daa
shl
iret
adc
xchg
test
cmc
aad
mov
icebp
pushf
xor
jno
les
aam
push
pop
dec
cmp
repnz
inc
clc
mov
pop
dec
fidivrl
es
mov
lea
sbb
cmp
clc
mov
mov
shll
aad
aas
pop
jp
xchg
stc
xchg
mov
xchg
pushf
lret
inc
shll
xchg
ss
sub
jmp
inc
mov
leave
call
dec
lret
out
xor
dec
xlat
cmp
push
xlat
mov
jns
mov
mov
push
mov
mov
or
jg
adc
hlt
jmp
push
jl
cmp
pop
cltd
mov
test
mov
lds
adc
cld
outsl
std
sub
outsb
pop
mov
out
mov
pusha
testl
sbb
fcomps
repnz
xorb
mov
xchg
test
lret
into
insl
out
adc
aas
inc
and
jae
shl
dec
test
imul
test
movsb
test
test
mov
push
lds
cli
mov
aaa
sub
rcrl
lea
jb
adc
adc
pop
adc
adc
movsl
out
xchg
rcr
inc
popa
std
cli
xor
mov
pop
sti
mov
jne
mov
clc
scas
imul
xchg
cli
ficomps
push
dec
adc
jmp
bnd
or
xlat
xchg
push
sbb
test
aaa
sbb
pop
mov
hlt
add
pop
aam
clc
outsb
insb
or
cmp
sbb
aaa
es
popfw
mov
mov
ret
subb
arpl
inc
les
mov
xchg
out
stos
mov
jae
cmp
movsb
out
dec
lcall
loopne
icebp
lcall
mov
adc
xchg
mov
sub
jl
and
xor
mov
mov
and
sahf
sbb
cmpb
call
sub
out
in
aam
inc
movsb
sti
xor
adc
push
insl
mov
not
and
inc
mov
push
push
adc
lds
sbb
lods
jle
or
xchg
adc
pushf
add
popa
add
lea
mov
mov
outsb
shll
cmc
lcall
sbbb
mov
fdivrs
xchg
fwait
push
inc
dec
stos
xor
or
sub
push
test
pop
mov
fcompl
cmc
sbb
add
dec
sarb
jb
or
dec
mov
pop
jg
push
lods
imul
insl
pop
imul
pop
pop
mov
push
jnp
test
outsl
popf
repnz
ljmp
popf
mov
pop
adc
pop
scas
frstor
add
push
lods
subb
ficoms
xor
sbb
push
pop
shrd
lods
out
aad
xchg
call
notw
mov
mov
in
sarb
lods
fidivl
sbb
scas
dec
fmull
leave
mov
sbb
pusha
xor
dec
xor
roll
push
mov
popf
lods
out
cmpsl
leave
inc
sahf
sub
push
dec
cmpsb
xchg
lret
dec
push
sbb
inc
aas
cltd
jnp
vsqrtpd
adc
loope
std
sub
cmc
pop
gs
test
and
jg
pop
cs
push
mov
xor
lods
sti
cli
addr16
mov
cmp
cmp
or
lods
jl
or
push
pop
shr
add
rol
in
xor
xchg
movsl
push
adc
mov
test
in
lods
cmp
in
sbbl
dec
sti
push
rcr
rolb
mov
push
inc
mov
mov
dec
cmp
js
cs
and
xchg
stc
movsb
mov
flds
cltd
and
in
xchg
cwtl
sbb
xor
sbb
adc
cld
jae
loopne
inc
in
mov
test
mov
pop
out
mov
inc
std
das
leave
push
jno
out
or
aaa
push
xchg
sbb
jge
inc
mov
jmp
mov
xchg
dec
push
mov
jne
jmp
loop
and
arpl
fmuls
inc
scas
mov
xchg
aas
call
inc
or
into
push
xchg
popa
or
fdivrl
test
pop
sbb
inc
dec
mov
roll
fwait
sbb
jl
int
insb
adc
je
cltd
jge
es
cmp
xchg
loop
test
sbb
push
stos
xor
inc
enter
dec
pushf
js
stc
nop
xor
cmpsl
iret
xchg
out
inc
das
faddl
pop
mov
inc
push
in
or
jmp
ja
sub
push
into
inc
xor
jo
xor
shlb
flds
nop
into
into
inc
sub
shr
sbb
pusha
push
mov
cmpsb
mov
into
jo
icebp
cmp
cmp
iret
in
cmpsl
in
mov
test
nop
xchg
cmpsb
ss
out
push
pop
xchg
jne
mov
mov
das
xchg
sub
adc
pop
inc
or
stc
mov
push
sbb
lds
and
cwtl
xchg
xchg
inc
mov
in
scas
add
mov
int3
es
or
div
outsb
cli
bound
icebp
shl
test
pop
inc
loop
leave
imul
push
pop
sbb
hlt
add
ds
fidivrs
cmp
rcrl
or
xor
cmp
sarl
jne
test
xchg
rorb
ret
push
mov
and
inc
jbe
and
jno
outsb
pop
jno
es
jnp
jle
mov
jmp
and
dec
inc
mov
outsb
sub
ss
imul
sub
xor
daa
dec
xchg
popa
adc
jb
adc
divl
add
ljmp
pop
adc
into
push
pop
add
fwait
jmp
xor
inc
push
jno
shrl
mov
lahf
aad
mov
push
sbb
xchg
aaa
clc
fimuls
loopne
fidivl
movsl
jno
mov
nop
push
mov
jae
push
call
mov
mov
pop
lds
or
sub
gs
mov
sub
push
fsub
mov
pop
push
scas
sbb
xchg
push
and
and
fidivrl
stos
adc
shlb
mov
dec
fisttpl
fnstenv
loopne
shrl
inc
mov
loope
pop
cmc
roll
aam
into
jbe
add
adc
mov
js
fcmovnu
jecxz
xchg
aaa
xchg
lods
in
push
lcall
mov
jle
dec
imul
shrb
xor
add
repz
lret
or
mov
pop
jae
in
push
pop
pop
mov
jge
mov
pop
mov
movsl
and
int
jp
ret
pop
test
cmp
sub
mov
jmp
loopne
push
cmpsl
fsubp
pop
lahf
fwait
sbb
mov
repnz
pop
jb
push
jmp
sub
in
rorl
or
sbb
add
ret
ljmp
daa
ja
nop
out
add
pusha
cmpsb
push
mov
lods
jle
mov
mov
add
lock
or
popa
mov
mov
push
push
popa
lds
ret
repz
ret
nop
xchg
shrb
lea
enter
mov
cmp
clc
push
jle
inc
pop
loopne
mov
mov
dec
cs
daa
cwtl
add
cmpsb
or
je
in
fisttpll
gs
xchg
jp
push
push
hlt
push
pop
jbe
pop
aam
cmc
pop
mov
and
mov
mov
scas
iret
not
sub
push
inc
cmp
das
jbe
and
out
test
adc
cmp
and
ljmp
repz
sbb
int
je
mov
sbb
mov
lea
mov
lods
lods
cld
ds
push
pop
mov
cmp
arpl
stc
aaa
aaa
inc
rcrl
and
xchg
rol
mov
dec
adc
jecxz
pop
jnp
sbb
xchg
in
xor
leave
out
scas
lahf
push
adc
sub
mov
ss
mov
mov
sbb
sub
arpl
ds
mov
movlps
repz
adcl
push
mov
mov
sbb
jb
loop
or
sbb
mov
in
pop
out
mov
imul
add
pop
in
bound
movl
jne
lret
mov
add
fs
mov
jbe
sub
jg
ds
lds
int
jne
jmp
int3
sub
imull
popf
sub
aad
fs
mov
adc
ret
push
nop
fildll
test
xchg
cmpsb
mov
test
push
lods
stos
repnz
pop
dec
leave
stos
dec
jno
jnp
add
xchg
rcll
add
pop
cmp
xor
scas
pop
sub
aad
dec
jge
fidivl
movb
sbb
arpl
and
dec
mov
clc
and
scas
xchg
sub
cmp
loopne
push
divl
mov
repnz
push
std
jg
sti
das
out
mov
aad
fcoml
data16
cmp
push
adc
jg
lods
popf
fwait
xor
sub
int3
mov
push
jecxz
jle
enter
sub
out
dec
aad
sti
pop
pushf
pop
xchg
pop
xchg
jg
adc
out
in
sbbl
rorl
sbb
push
jnp
mov
dec
repnz
pop
pop
mov
insb
push
icebp
xchg
loopne
aaa
repz
fst
lds
or
cmp
call
in
mov
sub
ret
mov
cmp
ljmp
jnp
push
lret
movsl
jp
bound
arpl
push
popf
xor
and
pop
cli
add
out
pop
addl
subb
stos
out
pop
dec
dec
push
arpl
add
in
cld
fisubrs
inc
or
or
cltd
inc
push
daa
jge
sbb
jae
pop
push
or
inc
fisubs
mov
data16
lret
pop
push
outsl
add
mov
arpl
test
and
add
lock
cmp
lret
or
cmc
push
call
je
dec
mov
pop
add
cwtl
dec
push
dec
sub
jge
dec
or
fsubr
movsl
cmp
int3
push
push
fdivrs
sbb
andl
pop
xchg
decb
push
filds
adc
mov
xchg
lea
cmp
repz
lret
push
ret
lcall
or
les
xor
iret
sub
push
lahf
pop
mov
imul
inc
mov
pushf
loopne
shlb
pop
adc
inc
lcall
pop
or
aas
mov
incb
xlat
mov
sbb
in
icebp
mov
lret
outsl
sbb
lock
dec
popf
insb
shr
add
test
fimull
fstps
inc
jmp
pop
pop
inc
iret
pop
inc
call
mov
test
jl
rclb
cltd
stos
movsb
lods
xor
out
repz
or
jb
and
cmp
ss
adc
xor
mov
dec
insb
xlat
into
adc
mov
adc
and
xor
rorl
fildll
int
dec
out
mov
jae
jg
pop
lods
out
cmpl
dec
and
xlat
pop
jge
sub
jp
pop
jecxz
pusha
sbb
stos
enter
xor
mov
push
inc
xchg
jle
mov
dec
in
push
movsl
cmp
adc
mov
stos
ja
xor
inc
sub
mov
fmuls
leave
cmpsl
sbbb
mov
sahf
fisttpll
mov
ja
shll
fnstsw
movsl
repnz
ds
icebp
fidivl
jg
or
sar
push
ret
adc
or
add
jo
and
add
ja
inc
inc
sbb
mov
icebp
or
mov
ds
jbe
or
clc
mov
mov
xchg
mov
xchg
imul
nop
sbb
xchg
mov
mov
shlb
lds
movsb
push
hlt
jnp
push
repnz
test
scas
inc
enter
jle
xchg
mov
lods
lahf
cmp
push
ret
icebp
js
shrl
xor
inc
fnstenv
dec
daa
in
mov
push
sarb
add
push
sbb
das
fs
out
cwtl
mov
sbb
adc
mov
mov
and
movsl
xor
lea
js
pusha
fistpll
jns
out
push
divl
les
fistps
or
jnp
jnp
and
ficomps
mov
cmp
or
lods
dec
lret
leave
ret
sbbb
pop
and
mov
inc
mov
sbbb
jge
iret
sarl
stos
xlat
sbb
out
push
gs
lock
xlat
mov
test
js
xor
movsl
adc
into
pop
or
jbe
enter
popa
cmp
xor
outsl
sbb
pop
enter
in
lret
lock
js
lock
insb
mov
sub
add
cld
ljmp
inc
xor
cmpsb
inc
addl
fcompl
sahf
mov
lds
push
loope
lret
jno
jae
scas
xor
mov
dec
ja
push
mov
mov
mov
enter
add
mov
cmpsl
popa
cwtl
fcmovne
cs
lahf
gs
xchg
out
ret
jmp
pop
imul
sbb
lock
or
jo
jae
push
push
lods
dec
leave
mov
and
repnz
sarl
call
int
fs
xchg
dec
push
in
cltd
sub
or
pop
daa
xor
loopne
xchg
int3
pusha
rclb
bound
fsub
mov
outsl
sahf
ss
cmp
int3
sub
xchg
hlt
cmp
sbb
sub
lods
mov
mov
mov
pusha
enter
mov
push
test
mov
and
xchg
sub
cmpsb
pop
cmp
mov
xchg
push
mov
mov
movsl
xchg
mov
inc
iret
jno
mov
or
jbe
loope
test
inc
iret
fimuls
fmul
ds
mov
mov
fdivrl
fdivrs
xor
jle
pop
lahf
jnp
cs
cmpsl
pop
movsb
xor
popf
fldcw
push
repz
pop
dec
mov
pop
and
lretw
xchg
mov
fs
mov
les
sub
loop
arpl
nop
scas
jl
test
cmc
dec
mov
inc
lock
repz
mov
fbld
xchg
iret
js
test
pusha
repz
js
imul
inc
ret
ss
shl
in
movsl
and
dec
sti
xlat
and
and
movsl
idivl
stos
and
sbb
rcr
jo
outsb
hlt
or
test
adc
cmp
pushf
mov
add
insb
lahf
out
notb
adc
or
and
inc
xor
add
sti
cltd
mov
ja
xor
pusha
stos
arpl
xor
std
push
jmp
sbb
jl
xor
mov
in
mov
fmuls
sbb
cmp
pop
mov
or
xchg
repz
sbb
mov
sbbl
mov
pop
fidivrl
ljmp
cmp
rcrl
push
and
jecxz
hlt
les
add
or
mov
bound
add
or
imull
negl
or
mov
js
movsb
mov
inc
add
ret
mov
jbe
std
dec
test
cmp
fimull
mov
xchg
loop
xchg
imul
cmpsl
mov
mull
add
cmpsl
cmp
and
pop
insl
std
aad
inc
xor
aas
mov
ds
ret
stc
adc
sbb
rcr
mov
iret
mov
inc
mov
adc
cmpsl
es
adc
sbb
cld
mov
lds
cmp
in
xlat
add
iret
pushaw
test
test
adc
and
adc
fiaddl
sub
xor
shll
jnp
popa
add
cs
inc
idiv
test
mov
adc
dec
in
lea
out
out
popf
insl
add
push
pop
stos
xchg
pop
clc
add
adc
mov
mov
mov
add
lds
mov
inc
in
les
push
pusha
or
inc
nop
mov
lret
adc
and
pop
fdivrl
or
inc
sbb
xor
movsl
lods
cmp
mov
clc
and
cmpsl
pop
psubw
xlat
shl
and
subl
mov
testl
pop
popf
adc
adc
bound
cwtl
adc
ret
je
sbb
sbb
stos
mulb
imul
jle
int
int
mov
imul
ljmp
mov
into
inc
push
xchg
inc
lods
adc
xchg
or
pop
mov
fdivrs
mov
xor
loop
inc
push
ds
out
stc
sub
mov
pop
xor
js
sub
push
cltd
rorl
or
or
jo
xor
pop
dec
or
imul
xor
lahf
iret
nop
bound
fisttpl
ja
xor
ds
jo
sub
push
jae
loope,pt
popa
xchg
cmp
push
in
mov
xlat
xchg
lock
pop
fdivrl
fbld
mov
jne
jmp
or
adc
cmpsb
sbb
aam
jns
jge
adcl
aam
xlat
jns
test
stos
pop
aaa
test
fcomi
and
stos
sbb
adc
andl
outsl
sbb
outsl
jne
adc
adcl
jmp
cs
mov
and
vsubpd
and
test
inc
add
fcomps
lock
xorb
mov
call
lret
or
testb
add
pop
aas
int
inc
rclb
or
sub
int3
popf
outsb
movsb
ja
lods
pushf
rcrl
fcoms
mov
repnz
loope
or
fwait
arpl
pop
das
mov
or
nop
lods
and
jecxz
pop
out
mov
nop
outsb
add
mov
sbb
sahf
and
inc
hlt
and
lret
movsl
cmp
leave
jle
dec
dec
fmull
dec
jbe
jne
hlt
push
adc
push
arpl
add
push
jnp
dec
jae
addb
mov
fbld
repz
jl
pop
mov
jg
push
mov
imul
divl
lock
xor
and
pop
cmp
repnz
sub
popa
jb
mov
jne
lret
sbb
fimuls
sbb
cwtl
mov
int3
push
cmp
push
sbb
xor
mov
test
cld
xor
cmpsb
daa
call
inc
pop
mov
pop
hlt
aas
jnp
ret
add
xor
sub
lret
sbbb
xor
rolb
test
jle
add
xchg
pop
mov
ljmp
push
fidivrl
mov
cld
lods
es
das
insl
arpl
mov
adc
sbb
icebp
test
mov
test
in
mov
shlb
stos
xor
jo
mov
std
cli
xchg
mov
add
fldcw
fbld
jge
cltd
gs
sub
adc
xchg
out
push
int
xchg
push
push
in
xlat
xor
imul
xchg
out
rcll
sub
cmp
mulb
shll
inc
bound
stos
adc
ljmp
push
adc
adc
pop
and
ret
int
pop
outsl
adc
mov
stc
rcrl
stc
hlt
cmpsb
dec
pop
mov
aas
dec
inc
popf
sbbb
loopne
test
add
jns
fisttps
lea
sbb
mov
xchg
cmp
sub
sbb
in
loope
fnstsw
cwtl
cmp
insb
pusha
xchg
pop
rcrb
das
adc
push
mov
sarl
and
scas
jge
jbe
out
popf
dec
insl
push
sbb
push
out
adc
andb
mov
lea
mov
mov
orb
insl
je
adc
ss
andl
mov
popa
and
iret
popa
loopne
in
mov
fs
mov
pop
xor
xchg
mov
stos
xchg
dec
in
clc
sbbl
cmp
shlb
mov
xor
mov
inc
es
ljmp
dec
xor
and
into
xchg
mov
movsl
inc
subl
adc
data16
jg
jg
or
loope
mov
test
jecxz
xor
rolb
mov
stos
rcrb
push
pop
jge
push
fs
rcrl
sub
mov
push
jecxz
ret
jo
mov
cmp
neg
insb
sub
mov
filds
call
data16
xor
add
in
dec
dec
cmp
mov
pushf
pop
ret
adc
int3
enter
sbb
cs
xor
jge
adc
shll
cmc
je
adc
aaa
cltd
dec
subl
icebp
inc
shll
stc
clc
fwait
js
mov
imul
inc
shrl
js
cmpsl
cmp
cmpsl
sbb
jecxz
mov
adc
test
mov
insb
sbb
loope
pop
mov
ret
inc
movsl
xor
jge
sub
or
inc
into
pop
leave
scas
sbb
jns
xor
push
add
xchg
pop
aam
stc
cmp
xchg
mov
je
or
jns
and
cltd
jno
mov
mov
push
or
mov
test
jmp
pop
pusha
inc
adc
repz
mov
inc
sarb
rolb
mov
pushw
mov
lret
mov
pop
fwait
loopne
out
jns
jge
addr16
shrb
ret
into
hlt
gs
push
cmp
shrl
rolb
dec
test
xor
call
into
shl
lods
data16
sbbl
mov
or
sub
mov
jb
mov
xchg
mov
scas
cmpsb
cmp
jno
pop
stc
aam
pop
jle
into
addr16
jnp
or
fisubrl
hlt
cmp
xchg
scas
push
sbb
sbb
shll
dec
hlt
adc
push
add
dec
push
popf
cs
jb
lret
imul
imul
das
int3
std
push
int
insb
popf
pop
cmc
adc
and
outsl
inc
mov
sbb
in
call
push
sbb
test
add
call
mov
stos
ds
ljmp
xchg
cmp
pushf
inc
repnz
pop
jno
nop
lods
out
push
mov
mov
dec
xchg
push
fsubr
dec
cmp
xchg
test
scas
or
sbb
repz
test
lods
insb
mov
inc
jno
adc
mov
das
cmp
mov
leave
repnz
cmp
pop
jne
bound
test
xor
mov
push
jecxz
xor
call
imul
insb
in
xchg
andb
and
sbb
outsl
aaa
sub
shlb
jbe
mov
jb
imul
xor
movsl
cli
mov
fists
fucomp
fs
into
icebp
push
jb
scas
jno
mov
fisubs
mov
daa
and
xor
imul
push
scas
shll
daa
in
rclb
pop
movsl
js
sub
sbb
push
inc
cltd
inc
ljmp
lods
xchg
push
mov
xor
fwait
pop
loopne
pop
or
cmpsl
xchg
lret
xchg
xlat
icebp
das
cmp
jle
out
insb
inc
jb
int3
adc
in
push
jecxz
rcr
dec
cmp
cmp
ljmp
addr16
push
test
xorl
xchg
mov
adc
ss
loope
ret
jmp
xchg
in
mov
cmp
mov
xchg
pop
add
mov
repnz
mov
push
loope
lock
int
xchg
mov
fcmovne
pop
cmpsl
sbb
xchg
xlat
pop
mov
push
dec
ds
jmp
cmp
ja
and
jmp
in
push
push
add
pop
dec
cmp
mov
xchg
fildll
lret
inc
sarl
int3
pushf
testb
in
push
or
jg
ret
mov
das
mov
dec
ret
std
sti
test
std
test
outsb
sbb
mov
push
lcall
xchg
lea
lcall
imul
mov
inc
pop
and
ja
lahf
aam
or
adc
mul
inc
or
mov
mov
test
jmp
pop
sub
jne
or
mov
xchg
fcmove
xchg
cmc
push
in
lret
sbb
push
fisubs
mov
or
popa
sahf
call
sbb
icebp
add
lcall
mov
popa
mov
std
stos
leave
add
pop
mov
jp
xchg
sahf
sbb
fs
dec
fadds
pop
ss
xchg
clc
adc
scas
pcmpgtd
cwtl
push
sti
and
fdivrs
sbb
pop
insl
nop
mull
sbb
pop
pop
mov
mov
mov
xchg
jl
inc
aaa
fistps
scas
lock
dec
imulb
imul
push
aaa
push
xor
sub
cmp
mov
in
lahf
mov
loop
cwtl
and
into
test
inc
popa
insb
mov
or
pop
inc
aam
jecxz
xor
inc
es
inc
sahf
mov
mov
and
ljmp
pop
sbb
dec
xchg
ss
mov
jecxz
test
test
jno
pushf
push
or
fnstcw
adc
mov
fld
lret
cmpsb
or
stos
mov
popa
dec
xlat
adc
jo
scas
and
adc
sahf
jbe
ficoml
arpl
ret
cmp
fsubl
insl
call
in
inc
cmpsl
jmp
dec
cmp
or
jns
mov
popf
fbstp
sbb
dec
in
out
add
movsl
pop
rcll
iret
test
jns
jmp
cmp
shl
and
stc
dec
and
jge
add
jp
jb
adc
popa
imul
push
dec
add
mov
pop
dec
pop
dec
adc
lret
add
xchg
lahf
sub
xorl
lret
adc
or
inc
xor
mov
into
adc
js
leave
cmpsb
nop
dec
imul
or
imul
sbb
pop
xchg
pop
fisubrs
fcmovne
sub
jno
out
daa
pop
mulb
cmp
push
and
push
push
int3
out
lock
ret
rcrl
inc
cwtl
ror
int3
add
ljmp
lods
cmp
subb
adc
mov
imul
dec
insb
and
mov
xor
out
jp
fsubrs
pop
repz
xlat
shrb
rorl
xchg
xrelease
pop
mov
add
mov
adc
jns
stos
fdiv
add
rcr
mov
mov
mov
rcll
cmpsl
mov
xor
push
loop
mov
add
popf
loope
and
sti
in
ja
xor
inc
imul
les
cld
test
push
adc
lret
pop
sbb
xor
std
stos
test
jecxz
or
es
popa
pop
dec
arpl
call
jmp
roll
inc
bnd
outsl
and
shlb
mov
dec
mov
push
in
dec
xchg
and
fimull
or
out
cmp
adc
mov
xor
dec
mov
mov
fwait
adc
arpl
jo
pop
aas
mov
aad
leave
sahf
fsts
xchg
rclb
and
mov
add
or
mov
arpl
lods
jo
ds
cmpsl
cli
push
ficompl
outsb
test
jns
out
cmpsl
dec
lea
or
push
push
inc
or
cmp
sbb
cmp
loop
or
leave
adc
cmp
push
hlt
int3
push
adc
ds
addr16
mov
jge
mov
mov
pop
push
out
mov
fstp
fnsave
test
daa
mov
fbld
cli
xchg
mov
lcall
pop
outsb
and
pop
xchg
push
dec
insb
mov
stos
lods
jle
add
scas
popf
out
mov
pop
mov
sub
popa
insl
jae
lret
rcrl
test
aad
dec
jo
invd
ds
pop
xchg
loopne
cmp
xor
or
xor
inc
sub
inc
mov
aas
and
sub
jge
sub
shrl
fisubs
das
xchg
rcl
sbb
hlt
loope
cmp
xchg
jge
pop
xchg
pop
sarb
mov
ret
scas
out
lcall
jmp
sub
jae
int3
dec
push
or
xor
iret
and
mov
sub
push
movsb
fidivrs
js
mov
adcb
rorl
dec
loope
push
jg
fsubrs
dec
lds
fcomp
pop
push
push
incl
push
mov
or
push
mov
popf
mov
in
xchg
jle
test
push
out
push
push
mov
subl
xchg
inc
andl
xchg
mov
pop
movsb
movsl
add
pop
xorl
bound
jne
add
hlt
add
test
ficoml
mov
xor
cld
mov
sub
adc
push
roll
aaa
jno
in
jnp
jg
jbe
pop
pop
stos
ret
mov
xchg
out
loop
adc
cwtl
inc
mov
outsb
dec
lcall
xor
aas
lea
jp
sbb
sbb
lods
lcall
inc
mov
xchg
push
and
sarl
cmp
ret
addr16
mov
js
pop
inc
mov
push
das
sub
dec
cmp
stos
bound
hlt
dec
push
lcall
addr16
orl
sbb
sbb
mov
inc
std
mov
pop
mov
enter
cmp
das
inc
je
xchg
mov
rcrb
fldt
je
jecxz
mov
subl
in
ficomps
fs
js
fs
jle
int
rolb
xchg
lret
das
out
lcall
sar
stos
sub
test
pop
pop
or
jp
push
test
or
jp
mov
adc
push
jnp
jl
ret
inc
xor
jge
std
mov
dec
adc
stos
adc
cmp
pop
mov
shl
subb
adc
cmp
out
mov
pop
jbe
les
pop
pop
push
insl
inc
daa
xchg
daa
jo
aad
nop
sti
mov
in
dec
stc
xchg
push
aas
mov
test
add
jge
cwtl
push
mov
fs
sub
jl
and
hlt
push
push
mulb
scas
addb
mov
push
rcl
jne
jne
pop
call
sahf
and
sti
scas
cmpsl
stos
and
push
aas
cmpsb
scas
int3
imul
xor
sub
aad
gs
dec
addr16
add
out
xor
cmp
scas
sub
cmp
cmc
push
es
cmp
mov
cmpsb
sbb
ss
mov
in
cmp
aaa
and
outsb
pop
cwtl
mov
sub
add
inc
shl
test
mov
xor
rcl
xor
mov
push
or
adc
xchg
dec
mov
xchg
ds
mov
loop
js
sahf
dec
jecxz
adc
notb
popf
xor
cmpsl
or
bnd
and
xchg
push
jp
movsl
repnz
mov
add
add
sahf
xchg
arpl
jge
xchg
push
gs
dec
lea
push
and
orl
mov
xchg
xlat
add
sub
cmp
rolb
int
out
sti
sahf
cmp
and
dec
xchg
insb
push
popf
pop
cltd
jo
ja
ss
mov
pop
push
stc
iret
mov
pop
orb
lcall
fcom
pusha
lock
pop
add
jne
mov
sbb
test
movsb
lcall
clc
pop
insl
cmp
push
es
mov
and
sbb
sbb
xchg
fs
add
out
pop
ss
pop
cmpsl
and
pushf
fistpl
cmp
outsl
imul
int3
or
cmpsl
cmp
mov
lahf
sub
out
lds
das
push
rcrl
imul
push
add
in
cwtl
aam
nop
jae
jb
jp
fbld
sbb
xchg
push
xchg
mov
scas
cmpsb
gs
mov
aas
push
push
jge
aam
dec
shlb
fdivs
shll
mov
mov
das
testl
mov
and
les
pop
scas
mov
cmp
xchg
into
fs
add
jmp
int
jnp
push
mov
jp
into
and
sbb
and
sbb
dec
jns
lret
fistpll
jp
jnp
fistpll
and
cmpb
add
xor
jle
xor
push
inc
in
add
ret
in
sub
xor
xchg
lret
pop
pop
jns
shrb
sbb
int
movsl
clc
cli
ljmp
shr
push
sub
aad
xor
or
inc
jo
adc
faddl
cmpsb
jecxz
mov
jnp
jbe
cmpsl
xlat
mov
inc
sub
jmp
aaa
or
push
icebp
and
cli
stos
outsb
mov
bound
rcll
jecxz
call
out
sub
fcoms
adc
pop
aas
or
mov
ret
arpl
cmp
inc
cmp
mov
cli
push
repnz
in
cmpl
dec
inc
stc
jbe
imul
das
xorb
pop
jge
lods
jae
and
push
addl
or
repz
xchg
push
iret
jo
sub
rorb
and
or
pop
pop
repnz
les
notl
pop
and
or
call
in
cs
je
mov
movsl
scas
dec
and
cwtl
je
mov
stos
mov
sbb
cmp
mov
and
out
fstpt
test
jge
pop
mov
pop
sub
and
adc
movsb
in
xlat
lds
push
cmc
pop
dec
rclb
fidivl
std
pop
div
xchg
nop
int3
add
push
inc
stc
push
push
or
cmp
aas
mov
int
cmp
icebp
pop
mov
add
jmp
sbbl
ret
xchg
jmp
enter
inc
xor
pop
dec
sbb
imul
daa
jmp
adc
sub
cltd
lret
pop
lea
loope
sahf
xchg
fistpll
and
adc
inc
or
loope
push
packsswb
dec
mov
sbb
push
push
idivb
jmp
popa
dec
mov
xchg
push
cmp
pop
aaa
pop
jne
je
sub
not
xlat
xor
retw
ret
sbbl
jno
sub
mov
jb
xchg
mov
cmpsb
aad
adc
adcb
out
dec
adcb
jns
ja
orb
in
or
mov
inc
mov
xchg
daa
pop
mov
int3
adc
dec
aas
jp
sti
jb
mov
pop
scas
mov
sar
lret
testl
aam
sub
nop
cmpsb
ljmp
jmp
xor
test
sbb
fbstp
js
arpl
andb
mov
popa
sti
fcomi
imul
icebp
push
sti
mov
imul
test
ja
push
sbb
mov
cmp
dec
push
imul
mov
cmp
pusha
movsb
push
fstpl
push
test
sub
push
jo
inc
arpl
outsb
scas
shlb
push
jge
inc
dec
mov
xchg
cmovp
scas
leave
dec
adc
adc
lahf
subl
pop
dec
fistpl
and
inc
lods
pop
movsb
or
les
sbb
xchg
ds
push
scas
sbb
dec
cmp
sbb
or
xor
jae
mov
aaa
shl
lcall
cmc
mov
sti
loope
sbb
cltd
movsb
xor
repnz
sbb
inc
mov
jecxz
stos
mov
mov
and
rol
inc
mov
cwtl
call
lret
adc
push
or
jmp
pusha
sahf
fstps
lcall
mov
mov
pop
pop
in
mov
pop
rcrb
or
dec
jle
sbb
pop
mov
mov
mov
xor
mov
je
inc
subl
sbb
xchg
ja
cs
dec
sub
ljmp
cld
in
adc
adc
pop
mov
ds
and
aad
push
hlt
stos
mov
jno
push
xchg
sbb
cmp
push
dec
lods
fmul
fildl
sahf
test
sbb
bound
mov
and
mov
lods
test
ror
fcoml
sbb
jbe
or
ror
xor
cld
push
jno
and
inc
js
test
aas
push
cltd
pop
adc
cmp
inc
cs
cmpsl
mov
je
add
mov
shr
daa
inc
aas
add
jb
scas
sub
mov
xor
or
sbb
rcl
xchg
sub
dec
out
and
lret
orl
pop
rcrb
scas
mov
fwait
ds
movsl
nop
ret
add
pop
iret
mov
adc
cltd
mov
add
sbb
outsb
mov
insl
call
jnp
mov
out
fimull
les
xchg
sub
inc
xor
mov
xchg
mov
adc
dec
mov
clc
mov
out
pop
dec
insl
dec
cwtl
outsb
dec
test
xor
data16
jb
rolb
pop
mov
add
movsb
xchg
xchg
imul
popa
push
repnz
dec
xchg
jmp
popf
loopne
mov
imul
lock
mov
fldenv
xchg
stc
add
mov
daa
cmpsb
lds
pop
pop
lcall
ret
lods
stos
test
repnz
push
stc
or
test
ss
sbb
mov
xor
repz
icebp
push
popf
ret
dec
jno
icebp
sub
mov
cmp
sbb
pop
repz
add
repz
mov
data16
xchg
jle
cmp
xor
pop
sbb
js
lods
ret
aaa
mov
xchg
jg
aad
sub
or
adc
dec
adc
pop
pop
inc
cmpsl
lods
fldl
mov
fnstcw
or
add
pushf
js
cmpsb
push
xchg
lret
jmp
or
sub
fstl
xchg
or
sbb
fcoms
mov
inc
pop
inc
filds
push
into
icebp
push
lret
int3
repz
cmp
dec
outsl
mov
mov
ss
or
add
sbb
shlb
ds
push
or
and
inc
push
iret
mov
loopne
mov
movb
mov
mov
ret
imul
test
leave
ror
pop
sarb
add
push
scas
push
lods
cwtl
add
push
cmc
jne
xchg
jle
int
inc
jbe
xlat
lret
sub
push
inc
or
dec
sub
repnz
ja
pushw
ret
jp,pt
push
loope,pn
call
pop
sub
loop
es
std
mov
loopne
xchg
and
pop
cmp
movsb
subb
push
stc
lahf
or
and
in
add
dec
out
hlt
fdiv
push
jge
push
cltd
fisubrl
jo
cmp
adc
xor
jbe
sarb
hlt
movsl
leave
into
sub
out
jl
popf
sub
mov
leave
lds
xchg
inc
inc
cs
mov
in
lcall
dec
pop
push
sti
clc
push
pop
popf
mov
lahf
shll
mov
inc
push
sbb
js
mov
mov
push
jnp
jp
inc
shll
adc
push
and
rclb
jle
inc
stc
mov
nop
cmc
lods
push
xchg
cmp
mov
inc
fcompl
mov
and
test
les
adc
mov
pop
mov
test
aaa
insb
gs
push
push
mov
xor
inc
xchg
in
mov
adc
push
or
pmulhuw
imul
push
fcmovnb
mov
push
loope
jne
or
rorb
xchg
lret
and
mov
inc
xchg
and
lds
add
fisttpll
xchg
mov
lods
test
xor
lcall
lret
cmp
mov
hlt
subl
insb
imul
pinsrw
fnstenv
cld
test
sub
push
in
je
test
adc
ror
pop
and
fld1
iret
ds
xchg
das
aam
out
sbb
and
stos
subb
xchg
mov
mov
sbb
mov
push
enter
cmpsl
dec
fnsave
testb
cmp
arpl
dec
lahf
sti
xor
imul
popa
xchg
fbld
dec
mov
cmp
mov
inc
dec
stos
sbb
cmpsl
int3
fwait
add
imul
cmp
cli
loopne
pushl
loopne
mov
roll
xchg
sub
fnstenv
pop
mov
into
cltd
and
rorl
andl
push
xchg
stos
js
adc
mov
pop
push
sbb
fldcw
aad
dec
je
xchg
pop
sbb
ljmp
lods
xchg
lret
xor
cmp
test
pop
dec
cmp
aaa
notl
jne
dec
xor
aaa
and
jnp
sbb
lock
cmp
or
cmp
fldcw
inc
enter
or
into
sub
adc
add
mov
fs
mov
lods
ljmp
and
data16
dec
sub
cltd
int
or
cmp
mov
lret
fcmovnbe
cwtl
pusha
pop
es
lds
adc
and
out
in
daa
aaa
stos
clc
fwait
aad
add
out
cmp
rclb
xchg
xchg
inc
xchg
add
mov
xor
xchg
jb
fnstsw
add
push
mov
lods
dec
adc
inc
in
jmp
pop
mov
in
add
push
out
sub
popf
stc
dec
cmp
add
dec
addb
lods
dec
inc
xchg
sub
jmp
sub
mov
nop
push
cmp
mov
pop
jb
add
mov
mov
in
dec
aas
movsl
fimull
mov
test
inc
and
leave
mov
jge
sub
jns,pn
fdivl
cs
mov
sub
pushf
cli
outsl
mov
xchg
adc
rclb
pusha
dec
shr
jle
jbe
int3
inc
push
fidivl
pop
insb
mov
lahf
lock
dec
jae
ljmp
jnp
xchg
push
icebp
or
sbb
addr16
inc
add
mov
dec
mov
hlt
mov
mov
dec
int3
xchg
jge
xchg
mov
test
sahf
cmp
stc
adc
std
and
out
or
sub
add
push
jmp
sub
out
mov
nop
test
cmpsb
dec
jl
xor
andnps
iret
aam
bound
adc
push
add
iret
pop
mov
sbb
out
pop
push
xchg
add
cs
jb
mov
inc
push
inc
dec
movsl
jae
std
das
mov
sbb
xor
les
rol
push
inc
push
or
push
je
mov
dec
aas
test
or
and
cs
mov
jns
test
mov
or
mov
outsb
xlat
insl
adc
ss
and
out
imul
pop
ja
mov
subl
pop
or
pop
lahf
jmp
cltd
sub
icebp
sub
int
push
shrb
lcall
adc
cmp
sub
sub
test
mov
and
dec
or
fwait
sub
inc
inc
subb
sub
test
jg
les
into
nop
push
cmp
scas
les
add
outsl
pop
xchg
ds
push
pop
sub
mov
lods
flds
mov
leave
push
and
mov
stc
lret
push
mov
pop
jl
pusha
sub
lahf
subl
add
mov
xlat
jg
dec
jne
pop
adcl
cmc
ret
adc
inc
ret
jmp
stc
sbb
fstp
xchg
int
xor
and
xlat
or
dec
adc
pop
ja
fidivl
or
mov
add
fbld
dec
cmp
fisubs
psllw
or
test
mov
mov
jmp
ss
and
push
jno
push
jle
pop
mov
adc
aam
stos
in
sti
pop
hlt
push
inc
mov
lahf
pop
xchg
fdivr
add
lret
fidivrl
fisttpll
outsb
adc
popa
push
mov
mov
int3
aaa
mov
shl
bound
test
inc
fcoml
push
test
dec
testb
add
inc
jle
cltd
fdivrp
imul
imul
adc
in
jle
mov
jo
mov
jmp
jle
cmpb
add
push
out
xchg
inc
push
incb
mov
pop
add
add
and
push
leave
scas
aas
jo
cmp
xchg
test
fdivrl
pop
js
pop
lods
adc
sbb
aad
cmpb
cltd
sub
mov
adc
nop
push
inc
hlt
mov
lret
mov
sub
adcb
pop
sbbl
mov
push
das
adc
pop
cmp
fldcw
jns
and
addr16
test
and
or
inc
imul
arpl
leave
inc
xchg
mov
dec
bound
push
mov
adc
xchg
push
push
sbb
xchg
mov
jecxz
or
repz
mov
scas
mov
je
in
adc
pop
or
xchg
insl
fstl
inc
sub
cltd
sarl
mov
pop
bound
out
mov
mov
mov
push
add
ljmp
aad
and
mov
add
inc
sbb
mov
mov
sub
mov
push
aad
sub
pop
xor
jl
xchg
sub
pop
fcmovu
addr16
mov
jl
xchg
and
es
lahf
pop
xchg
lret
pop
dec
fnstcw
jmp
jg
les
add
loop
mov
lock
into
leave
mov
test
out
in
add
mov
cmpsl
sbb
sub
inc
in
stc
ja
cld
push
repnz
mov
imul
adc
stos
jne
jmp
xchg
mov
add
out
enter
sbb
add
cmp
xchg
and
xchg
idivb
gs
xlat
and
aas
repz
icebp
sbb
jp
fnstsw
jne
rorl
adc
dec
aaa
xchg
sbb
aad
mov
mov
add
fsubs
xchg
jg
aam
mov
mov
mov
js
jmp
pop
mov
pop
lock
mov
clc
das
lods
in
sbb
mov
repnz
out
bound
push
push
xor
outsl
xor
mov
jnp
mov
fmul
or
imul
sbb
popa
cmp
stos
decl
gs
mov
or
lds
xchg
push
std
out
mov
xor
push
sub
notl
aaa
repnz
jecxz
push
dec
mov
fsubrs
inc
push
add
xchg
xor
cmp
cmpb
popf
xor
and
adcb
shlb
outsl
je
int
sbb
mov
shlb
cmp
movsb
lcall
push
rclb
out
and
xchg
scas
hlt
cs
dec
into
mov
aad
jns
mov
add
test
rcr
xor
test
pusha
test
sarb
pushf
mov
and
jbe
rorb
xlat
sub
out
push
push
sub
lgs
insb
dec
xchg
pop
cmp
std
jle
fists
ljmp
mov
repz
sbb
jnp
ja
test
loope
sub
mov
push
mov
dec
cmc
and
and
and
jnp
mov
jl
test
mov
adc
iret
mov
dec
dec
js
repz
stos
pop
push
mov
test
xorl
jbe
test
pop
push
push
add
jae
pop
sarb
mov
jmp
ds
sbb
sbb
jmp
push
adc
mov
push
push
mov
bound
push
dec
xchg
sub
lea
adc
fisubs
nop
lds
adc
out
mov
repz
loop
aad
ret
xor
sbb
lods
cmc
push
ss
jle
hlt
into
cmp
dec
dec
adc
cld
lods
jne
mov
jne
mov
xchg
dec
repnz
xlat
jge
mov
mov
das
inc
mov
shrb
sbb
pop
data16
inc
sbb
sub
imul
je
inc
rorb
or
add
xor
sbb
inc
insb
stc
repz
test
xor
and
aam
push
jae
inc
adc
push
imul
xorl
cmpsl
rclb
cmp
mov
add
out
mov
xchg
mov
jmp
fiaddl
cmp
pop
cmc
pop
outsb
cwtl
data16
mov
int3
inc
call
xlat
adcb
pusha
cwtl
jle
dec
pop
ret
jnp
loopne
addb
adc
into
and
scas
mov
fs
lret
loope
xor
out
stc
aad
test
imul
dec
jne,pn
lock
cmp
out
mov
push
repnz
mov
enter
fsubs
movsb
jae
xor
hlt
mov
push
jmp
aas
and
jp
and
mov
mov
xchg
and
add
aas
pop
sbbb
and
push
fists
leave
push
popf
xchg
sahf
pusha
dec
imul
ss
mov
mov
jmp
cltd
addl
loope
ja
or
les
or
add
add
ds
fdivs
sar
push
int3
cmp
out
ja
adcl
and
push
out
jg
cmp
add
inc
mov
pop
lods
add
push
mov
pop
or
fldt
ret
xchg
out
call
mov
xchg
or
fstp
pop
pop
loope
aaa
test
imul
xor
jle
inc
fcoms
pop
out
cmp
jge
sub
inc
rcr
sahf
xchg
xor
pop
dec
jns
test
sbb
icebp
pop
stos
adc
shrb
lahf
push
movsb
repnz
and
in
sbb
mov
cmpsl
dec
cmpsb
cmp
mov
mov
dec
out
add
stc
shll
and
les
jno
fnsave
insb
iret
rol
jp
pushf
jg
push
cmp
fs
cwtl
jmp
fidivrs
mov
out
fistpl
push
outsb
shlb
jb
jns
pop
pop
xchg
test
pushf
or
mov
insl
push
into
push
push
mov
outsb
out
sarl
fnstcw
xor
and
pop
mov
dec
push
clc
clc
or
cs
adc
push
filds
rorl
xrelease
mov
gs
ja
jmp
fisttps
pop
daa
stos
pminsw
test
xchg
push
popf
lock
aad
xchg
adc
xchg
xchg
xlat
xorl
jb
dec
dec
mov
mov
icebp
fs
adc
xor
lcall
xchg
cmp
jae
fld
scas
jnp
push
and
jp
xchg
adc
and
in
dec
pop
fstps
aad
cmp
push
mov
rcrl
pusha
pop
or
pop
cmc
lret
movsl
fisttpl
icebp
cs
push
out
repz
jmp
out
std
pop
sub
xor
add
mov
xor
mov
mov
cltd
pop
jnp
pop
push
aam
out
adc
int3
cwtl
adcl
xchg
stc
jp
mov
hlt
sbb
sbb
sahf
push
jne
inc
testl
and
in
add
out
or
adc
push
mov
add
cmp
xchg
mov
lea
or
std
fdivrl
fmull
mov
dec
xor
adc
sub
outsb
xchg
jne
pop
leave
mov
ja
and
subb
mov
dec
cltd
mov
dec
cld
sbb
pop
add
mov
mov
insb
arpl
ret
fisubrs
aam
dec
orb
mov
fbstp
jbe
and
and
sub
scas
pop
mov
add
jg
jo
xchg
mov
cld
inc
xchg
xor
or
divb
inc
test
mov
xor
out
sub
add
mov
add
inc
push
mov
cmp
aam
rorl
lahf
mov
mov
ss
inc
mov
in
in
sbb
mov
lds
pop
push
cmp
fs
inc
mov
xor
fidivl
in
fdiv
outsl
popf
xor
lods
jmp
mov
sbb
fstpl
jno
pop
mov
icebp
bound
gs
adc
cmpsl
int3
and
push
outsb
mov
push
stos
stc
pop
inc
sbb
or
adc
sbb
out
ret
inc
imul
loope
jae
add
popl
and
lods
popf
adc
push
mov
xchg
out
scas
cwtl
pop
sarb
stos
ret
cwtl
jl
lcall
sub
notl
add
hlt
mov
dec
and
leave
fmulp
cmpb
pushf
xchg
mov
and
repz
les
mov
mov
aad
lds
inc
inc
push
lcall
add
jmp
jl
push
cmpsb
cmp
sbb
adc
test
jge
rorl
std
addr16
ror
ja
in
adc
xor
bound
inc
in
dec
repnz
testb
lahf
or
test
insl
cmp
rcl
xor
adc
out
push
dec
inc
mov
dec
or
xchg
sub
dec
scas
flds
sub
dec
inc
inc
push
test
movsb
mov
imul
and
sub
mov
mov
fistpl
enter
cmp
inc
movsl
gs
fwait
lds
dec
mov
sub
xchg
push
dec
add
mov
outsb
jb
pop
cmp
mov
lds
jae
aad
mov
mov
fbld
std
testb
ds
gs
fsub
sbb
rolb
or
xchg
or
xchg
add
movsb
js
js
jecxz
mov
shr
addb
and
jne
sub
inc
cmp
cwtl
inc
sbb
sub
pusha
and
xchg
sahf
hlt
inc
fnstenv
shr
push
ror
mov
mov
enter
add
addr16
gs
inc
cld
xor
or
dec
pop
insl
mov
hlt
jp
mov
mov
cmp
mov
jle
jae
jg
ljmp
cmp
inc
add
leave
stos
pop
jb
xchg
outsl
xchg
pop
andb
shl
fldt
mov
or
lahf
aad
pop
pop
xor
adc
mov
pop
push
and
mov
insb
inc
fsubs
test
aaa
mov
mov
lcall
push
mov
cld
adc
adc
pop
fisubrl
cmpsb
aad
pop
jle
pop
and
pop
push
and
jae
mov
outsl
mov
jo
jne
mov
sbb
jge
jp
mov
inc
cmpsl
jle
iret
lds
setge
andb
scas
test
roll
into
sub
add
sbb
cmp
sbb
shr
cmpsl
lsl
xlat
jecxz
repnz
lds
lret
insl
into
in
mul
dec
pop
xchg
fucomi
jle
adc
add
into
xor
mov
daa
fcomps
jns
mov
mov
lods
cmpl
and
cld
fsts
shl
mov
add
xor
adc
aas
notl
mov
adc
fisubs
out
add
xchg
stos
mov
push
lods
add
loopne
pop
xchg
push
cmp
mov
sbb
push
gs
scas
xchg
sahf
arpl
xchg
adc
mov
xlat
test
cmp
inc
stos
mov
cwtl
sub
rcl
lret
jge
notb
das
inc
cmc
mov
add
mov
out
sub
jbe
scas
dec
cld
or
mov
push
lcall
xchg
jmp
aaa
arpl
cmpsb
inc
dec
lret
jb
xchg
stc
jb
and
fidivl
lock
xor
pop
lahf
mov
push
xlat
pop
movsb
sub
xchg
mov
xchg
push
jnp
insl
jns
inc
push
add
xchg
dec
mov
sbb
mov
int
iret
fwait
outsb
and
sub
ja
addl
inc
data16
mov
ret
lahf
push
jb
pand
adc
xchg
std
shll
fildl
dec
mov
fildll
push
int3
lods
and
and
popf
mov
mov
sbb
ljmp
pmaddwd
or
ss
xchg
dec
gs
or
aas
cmpsl
shrl
jb
shrb
test
mov
pop
insb
std
test
or
sub
fdivrs
adc
sbb
fimuls
pop
jle
inc
jne
cmp
andl
gs
stos
xor
jae
clc
add
or
popf
testb
push
sbb
jl
push
fistpll
int3
push
dec
mov
popa
mov
loope
not
rclb
idivb
lods
fcoms
push
adc
jle
mov
mov
sub
mov
push
pop
xchg
nop
push
add
and
mov
je
icebp
repnz
scas
adc
push
and
push
stc
jg
jns
ds
fcmovb
sbb
nop
stc
jns
jns
inc
cmpsl
in
push
push
mov
push
sub
rolb
arpl
lret
jns
pop
push
aad
sbb
xchg
cli
mov
movsb
ret
aam
jge
and
xchg
cmc
in
dec
jb
cmp
sbb
sub
push
inc
sbb
xor
add
leave
push
sbb
xchg
pop
iret
pop
lret
xchg
sub
jae
sbb
push
cmp
inc
mov
not
inc
popf
pop
aad
xchg
xor
std
push
push
jnp
stos
fsubrs
lret
xor
adc
je
xlat
aaa
std
bound
jbe
sahf
mov
push
push
loope
repnz
scas
sbb
mov
add
xor
xor
sub
sbb
jb
inc
xor
xor
repz
xor
inc
in
push
pop
or
dec
call
add
stc
or
pop
adc
cld
xorl
rcrb
sub
cmp
xlat
inc
shlb
ljmp
pop
pushf
xchg
or
mov
inc
lret
jno
stc
les
stos
push
ret
cmp
cmpsb
testb
xor
jb
xchg
inc
or
fnsave
test
xchg
int
push
sti
xlat
xchg
dec
and
imul
int
jecxz
lcall
dec
push
std
cmp
jge
push
mov
adc
mov
mov
loopne
dec
or
fistpll
inc
push
or
push
stos
cmp
pop
push
ds
outsb
std
xchg
xor
pop
or
sbb
nop
push
out
sbb
pop
movsb
andl
les
mov
xchg
aaa
stos
dec
dec
pop
mov
in
jp
test
push
in
inc
add
nop
in
cltd
mov
xchg
sbb
iret
mov
outsb
push
xchg
hlt
in
pop
int
lods
fwait
sub
xchg
mov
int
fs
sub
aam
lahf
cli
addr16
je
test
out
fsubs
test
leave
ret
cmp
insl
mov
test
and
sub
imul
shr
inc
fs
dec
xchg
addr16
adc
pop
add
push
jo
xchg
es
mov
cmp
mov
sbb
and
jge
inc
imul
rcrl
fldenv
inc
pop
jno
xchg
or
movsb
jae
add
sub
cmpsb
mov
je
repnz
and
sbb
xlat
mov
push
sbb
add
daa
loope
xchg
mov
push
lds
cs
insb
fistpll
dec
fnstcw
mov
int
mov
test
dec
xor
mov
lds
int3
lcall
in
xchg
fcompl
mov
mov
mov
cmp
loope
repnz
das
sbb
jle
xlat
pop
jl
sub
mov
in
and
jnp
insl
mov
add
dec
loop
lcall
fadds
insl
jb
mov
or
xor
outsl
sub
jnp
aad
jle
ret
leave
mov
inc
mov
test
dec
xor
movsb
xchg
cli
add
pop
cmp
dec
fsubs
loope
adc
mov
jecxz
fsubrs
jno
mov
xchg
dec
pusha
lods
sub
push
insl
cmpb
test
arpl
je
jmp
sub
cli
data16
adc
fidivrl
pop
shlb
inc
stc
jp
or
scas
or
and
out
movsb
repnz
shll
adc
lea
sahf
insl
hlt
cmpsl
loop
mov
jg
bound
arpl
lds
aad
popf
or
xlat
mov
inc
daa
dec
add
mov
and
decb
out
mov
add
fwait
add
jl
push
lret
jmp
lahf
adc
cmp
inc
cmp
and
cs
test
inc
or
pop
loopne
sbb
add
cld
sub
out
inc
ds
or
cmpsl
xor
icebp
inc
xchg
cmpsl
js
test
dec
incb
pusha
or
out
test
xchg
and
mov
jge
subl
mov
jecxz
out
lahf
pop
in
xor
push
stos
mov
or
push
inc
push
pusha
lcall
cli
dec
lock
mov
and
ja
ret
xor
mov
js
lret
mov
push
lock
xor
mov
mov
and
xchg
xor
sub
cltd
loope
out
add
cmpsl
sbb
pop
cmpsl
ss
mov
mov
addr16
jnp
scas
in
mov
aam
lahf
int
mov
je
test
xchg
fcompl
je
or
or
xchg
push
addr16
add
cmpsb
lods
ss
jecxz
or
sub
cwtl
aaa
jae
lea
pop
jecxz
mov
outsb
dec
and
xchg
dec
xchg
xchg
dec
test
sub
scas
movl
and
jns
or
inc
xor
cld
add
and
out
xor
lds
test
in
imul
pop
xchg
cmp
fwait
jmp
mov
dec
leave
xchg
xchg
pop
fstpt
ret
add
hlt
xchg
cwtl
adc
andb
jecxz
add
or
bound
jns
maxps
test
fildl
push
xor
test
out
mov
dec
test
sbb
jmp
std
add
push
dec
mov
sub
imul
out
fmuls
push
repnz
jecxz
iret
dec
dec
push
and
xchg
es
mov
fstpl
imul
stos
xor
dec
lds
sub
dec
xchg
push
and
dec
xor
inc
push
dec
enter
cli
mov
xchg
nop
dec
data16
mov
dec
push
mov
jb
sbb
repnz
aas
xor
shl
mov
shl
out
ret
push
cli
add
sub
daa
push
push
pop
pop
repz
inc
js
cmp
sub
fldenv
cmp
lods
inc
js
cmp
mov
sarb
xchg
std
jb
icebp
add
out
xchg
xor
push
cmp
adc
push
lret
fbld
push
test
or
bnd
mov
sub
mov
xchg
lcall
sub
and
enter
shll
subl
and
cmc
pushf
inc
int3
jbe
in
or
push
icebp
sub
push
pop
xchg
mov
cmp
imul
add
insl
rorl
push
jg
in
xchg
mov
pop
jbe
fwait
inc
loopne
int
jge
xchg
inc
adc
push
cmpsl
and
add
aam
add
inc
mov
lahf
repz
xor
popa
gs
add
cmpsb
sbb
cmpsb
inc
stos
jecxz
jnp
lcall
fildll
lods
pop
shrl
cmpsl
rorb
mov
fistps
mov
xchg
push
mov
pop
jns
jl
xor
movb
mov
nop
in
jns
addl
and
rclb
sar
rcll
adc
cs
ret
cmpsl
js
out
cld
push
mov
cwtl
inc
dec
sti
and
repz
jmp
stos
pop
and
and
sub
dec
fmul
or
inc
push
and
xchg
cmp
sbb
fwait
inc
shrb
loop
mov
out
push
and
dec
fdivr
movsl
cmp
and
pop
loop
cld
adc
in
inc
and
popa
ficoms
pop
sbb
fisubs
jmp
mov
mov
mov
aaa
sbb
lcall
cld
mov
or
jge
cmp
adc
jb
les
loop
pop
jmp
sbb
cmc
cmpsl
adc
jno
mov
xor
pop
ds
cmpsb
mov
int
repz
xchg
mov
pop
mov
ret
test
sbb
cwtl
xchg
inc
das
ficomps
inc
bound
push
ret
std
and
dec
adc
rorb
mov
push
push
push
neg
pop
adc
mov
dec
xor
js
icebp
das
mov
das
ret
push
fwait
xchg
xchg
loop
popa
jmp
fidivrs
sub
bound
lea
mov
jg
jmp
jnp
int3
sub
sbb
pop
mov
clc
sti
aaa
hlt
adcb
repnz
lret
adc
jg
bound
mov
dec
les
mov
idiv
das
xor
clc
push
clc
push
inc
add
cmp
addb
pushf
pop
or
mov
xor
mov
xchg
xchg
daa
dec
inc
sub
mov
fildll
sub
dec
packssdw
bound
cwtl
les
dec
call
pop
aas
iret
xor
dec
sbb
insb
fldt
sbb
and
push
push
jne
inc
sahf
aad
push
dec
mov
mov
and
iret
clc
fwait
in
pop
bound
inc
shll
gs
jmp
jae
push
dec
sbb
inc
js
test
adc
lods
add
sbb
push
daa
push
push
test
or
insb
and
push
jmp
inc
xchg
sbb
cmp
out
scas
ljmp
push
cwtl
cmpsl
jbe
adc
add
out
outsl
out
lea
dec
sbb
ja
pop
pop
fistps
jbe
mov
cmp
or
fisttpl
push
jmp
push
cltd
mov
sbb
cmpb
jae
stc
loope
adc
mull
sbb
jbe
fsubrl
mov
test
add
outsb
cmp
decb
and
rcll
mov
ljmp
pop
mov
mov
enter
int3
mov
jbe
cmpsb
mov
sbb
adc
fisttps
loope
imul
lods
sbb
cmp
jecxz
sbb
adc
inc
xlat
mov
cmp
push
lods
lret
jbe
inc
mov
pushf
add
sbb
fistps
or
mov
mov
testl
pushf
push
mov
roll
cmp
repnz
push
hlt
es
loopne
mov
outsl
call
inc
nop
test
or
add
xor
stc
cmp
cmp
and
cli
cli
ficoms
dec
out
jnp
pop
es
sbb
mov
jo
imulb
adc
sub
add
mov
lcall
in
lret
or
repz
cmp
mov
sub
sbb
or
dec
clc
mov
and
mov
push
push
je
jle
stc
mov
das
divb
add
in
jle
andl
mov
dec
test
das
jmp
lret
cmc
imulb
arpl
ljmp
jmp
add
or
rcl
imul
cmpsl
lret
sbb
rol
iret
pusha
aaa
xchg
in
adc
cmp
adcl
dec
mov
jmp
sbb
dec
lock
sub
pusha
or
rcll
push
popa
pushf
jl
cld
jne
rcrl
mov
je
mov
bound
push
in
popf
test
fistps
jecxz
daa
call
rol
or
adc
sub
mov
fs
out
scas
mov
std
xchg
out
xlat
pusha
or
clc
shrb
fs
scas
shl
lcall
mov
and
add
fnstcw
stos
pop
ds
mov
std
daa
pop
imul
jne
outsb
outsl
cmp
rol
rcr
pop
mov
add
inc
stos
test
scas
mov
fistl
jbe
pop
push
lahf
cmp
in
mov
lret
add
xor
scas
inc
pop
ror
dec
into
dec
stos
xchg
fidivrs
sahf
and
mov
ss
mov
movsl
pop
mov
add
cs
ja
and
cmp
mov
repz
loopne
xchg
or
dec
or
xor
andb
repz
cltd
mov
cmp
jp
in
jae
xchg
das
popf
mov
or
sbb
iret
lock
popa
mov
cmp
and
push
and
mov
repz
or
cli
or
dec
xor
aad
fsubrs
dec
sbb
shr
jb
stc
call
cs
arpl
stos
pop
orb
hlt
inc
pop
push
or
xorb
cwtl
add
sub
int3
and
cltd
gs
nop
mov
and
push
data16
push
inc
xchg
jecxz
inc
rcrb
outsl
mov
out
pop
jp
add
ljmp
inc
cwtl
clc
popa
or
lock
jle
popa
xchg
sbb
scas
inc
and
mov
mov
mov
push
dec
or
pushf
xor
jp
pop
clc
and
mov
mov
mov
push
pop
mov
fcoms
das
and
out
stc
mov
loop
sbb
mov
movsl
push
ja
clc
or
jge
sbb
imul
dec
lds
test
pop
adc
mov
mov
sbb
or
das
mov
fcompl
leave
push
hlt
cmpsb
ss
ret
mov
leave
push
and
lret
jno
mov
mov
and
xchg
enter
jo
push
scas
dec
clc
cmp
cmp
mov
mov
aaa
addr16
mov
xchg
inc
jb
add
jle
push
movsb
cmp
adc
outsb
sahf
shr
pop
xchg
inc
sbb
popf
mov
mov
jmp
cmpsl
lcall
rcll
fld
push
lahf
mov
cmp
pop
lcall
arpl
add
loop
sbb
inc
push
sbb
in
icebp
fcom
mov
push
filds
push
sub
push
and
mov
in
imul
aam
sub
pop
jle
ds
pusha
jne
and
pop
sub
push
insl
sahf
cmp
push
pop
cmpl
scas
jmp
dec
rcll
inc
outsl
mov
pop
leave
std
adc
mov
push
or
aaa
addr16
pop
sub
nop
mov
mov
xor
orb
mov
fwait
dec
insl
jb
or
out
pushl
call
adc
fs
jae
shlb
lods
sbb
shll
lds
inc
nop
mov
inc
xor
jno
xor
aaa
ja
jns
pop
mov
mov
jnp
enter
xlat
dec
mov
aaa
mov
bound
jbe
fnsave
mov
jbe
decl
or
mov
mov
sub
fwait
stos
addb
fistpl
xchg
adc
aas
sarb
mov
pop
in
mov
imul
push
pusha
or
sub
adc
sbb
notb
jg
outsb
xor
mov
stos
cli
xchg
in
iret
dec
and
xor
decl
in
inc
dec
rorl
imul
add
popf
jmp
enter
mov
daa
xchg
loope
adc
adc
into
push
cmp
fsubr
jne
mov
or
xchg
int3
popa
scas
popl
rolb
bound
lods
hlt
lods
fs
sar
xor
sub
mov
cli
rcll
fisubl
icebp
pop
xchg
mov
push
mov
decb
adcl
jl
xlat
and
addb
pop
cmpsl
pop
ds
insl
sbbb
jo
movsl
cmp
aas
enter
dec
aas
or
clc
shll
hlt
mov
mov
aaa
lcall
adc
jb
stos
jl
lods
cmpsl
subb
arpl
and
je
iret
daa
mov
cli
sub
sub
xchg
push
fcoms
addr16
out
iret
mov
jo
inc
push
outsl
data16
mov
pop
and
xchg
mov
loop
fwait
repz
cmpsl
and
xchg
or
jg
fwait
pop
dec
mov
fadd
mov
cmpsl
repnz
mov
lods
inc
or
jmp
mov
xchg
add
and
or
dec
pop
push
scas
cli
cmpsb
sub
jne
loop
jnp
filds
lret
ret
mov
daa
or
sbb
js
ret
stos
mov
mov
pop
jbe
pop
imul
push
xchg
test
in
pop
fldenv
lds
mov
sub
orb
sbb
cmpsb
out
jge
pop
int3
xlat
and
movsb
nop
pop
adc
dec
mov
lds
stc
fidivl
fdivl
cmp
daa
push
dec
sbb
cld
call
sbb
jae
lahf
mov
or
pushf
outsl
or
gs
jle
dec
test
push
jle
movsl
inc
aaa
shrl
jp
dec
sbb
mov
mov
pushf
mov
fs
pop
mov
xor
or
add
scas
sbb
outsb
cli
push
and
inc
sub
pushf
pop
xchg
dec
mov
add
arpl
clc
and
xor
or
inc
sbb
arpl
or
xor
sub
sarl
movsl
outsb
pop
scas
fstpl
les
xchg
sub
lret
pop
imul
pop
dec
les
xchg
dec
cmc
in
pop
jno
outsb
fstl
shll
inc
mov
inc
repz
xchg
jmp
scas
mov
adc
es
test
adc
bound
dec
inc
push
dec
inc
adc
jnp
inc
push
dec
inc
pushf
aaa
hlt
outsb
loop
inc
cmp
inc
add
xchg
pop
lret
leave
adc
adc
and
fadds
lock
xor
out
clc
push
pop
or
xchg
inc
push
xchg
aam
bsf
sbb
sbb
or
dec
fst
cltd
xchg
stc
cmpb
xor
pop
subb
nop
add
je
ja
cs
mov
fildl
rcr
mov
leave
xor
jae
xorl
popa
inc
sahf
mov
xor
in
cs
sub
outsl
ret
xchg
scas
jno
xchg
movsb
mov
and
xchg
xlat
push
add
or
mov
xchg
dec
popf
repnz
in
xor
jne
dec
xchg
popf
xchg
mov
sub
inc
mov
xor
shl
dec
dec
das
mov
nop
hlt
call
jle
push
add
xor
leave
adc
cmp
jno
push
xor
push
adc
push
fcmovne
push
mov
dec
dec
and
mov
leave
and
pop
lods
rorl
repz
mov
in
add
fistpl
sub
das
dec
mov
aam
cmp
pusha
mov
movsl
or
push
out
in
and
push
cwtl
test
sub
inc
into
ret
les
inc
into
add
push
jg
jnp
dec
decb
cld
cmp
test
lods
jb
or
push
outsl
fdivl
push
call
ret
push
push
leave
cmpsl
sbb
sbb
pop
aaa
dec
outsb
outsb
cmc
sbb
and
nop
loopne
or
aam
mov
add
int
fldcw
jl
addr16
aaa
cmpl
push
imul
adc
cli
pop
cmpsb
stc
or
pop
cmp
add
jg
mov
push
rolb
or
mov
xchg
xchg
dec
jo
insb
push
data16
movsl
xchg
rorl
jmp
jecxz
inc
add
aam
popa
xchg
cmp
test
fildll
pop
adc
ds
sbb
xchg
imul
xchg
jns
jp
in
paddq
call
insb
or
mov
mov
inc
or
pop
adc
inc
mov
mov
jbe
scas
jg
rcll
jmp
xor
mov
fcoml
cmp
xchg
rcrb
pop
shl
sub
xlat
pop
gs
fincstp
sbb
es
jbe
xor
scas
jno
mov
push
push
xchg
adcb
mov
ret
and
pop
loopne
out
mov
push
movsl
sub
mov
mov
adc
pop
xchg
divb
cs
jp
ret
jg
jmp
xor
in
xor
lods
mov
mov
cltd
cmp
paddd
push
xchg
popa
or
ds
in
aaa
out
dec
insl
mov
icebp
or
xchg
lds
adc
aad
jae
arpl
sub
xchg
test
pop
inc
ficoml
les
fs
push
or
rolb
push
push
jmp
cmp
nop
loopne
and
dec
frstor
xlat
fistpl
and
sbb
dec
push
loope
into
pop
xchg
out
repz
ret
scas
out
lock
sub
pop
rclb
ss
int3
imul
dec
pop
sub
jbe
mov
in
and
jecxz
orl
ret
cmc
mov
dec
adcb
jnp
xchg
xor
int
inc
out
dec
fistps
cmp
mov
ret
jle
jo
cmp
mov
outsl
jg
pop
inc
add
std
fimuls
faddl
idivl
xchg
mov
jnp
shrb
rcll
lods
sbb
sbb
push
fistl
push
fldl
push
cld
mov
adcl
cwtl
imull
inc
daa
and
sbb
cmp
mov
cmp
jmp
jle
mov
push
leave
adc
sbb
push
mov
inc
imul
mov
jns
jl
test
lods
ret
mov
lret
out
push
addr16
icebp
xor
pop
lcall
subl
call
jns
sbbl
xor
pop
sub
cmp
roll
movsl
pop
push
jl
dec
jg
ret
int
mov
xchg
cmp
cld
jns
out
pushf
ja
jg
es
lock
leave
mov
pop
xlat
xor
idivl
repnz
outsb
xchg
adc
adc
cmpsb
test
xor
popa
cmp
jno
lods
xor
pop
roll
dec
scas
dec
rcll
cmpb
ljmp
mov
lahf
jb
dec
ljmp
push
lods
inc
add
bnd
mov
dec
insl
xlat
bound
push
aaa
adc
inc
bound
int
adc
add
dec
pop
lret
arpl
inc
call
mov
cmp
jp
fidivrs
and
int3
mov
daa
cmp
jne
cmp
mov
mov
hlt
cltd
lds
jecxz
mov
cltd
imul
add
loop
adc
filds
outsl
test
sub
shll
nop
dec
outsl
idivl
test
sbb
insb
add
push
pop
sub
inc
push
or
ss
jecxz
inc
jecxz
stc
push
jbe
mov
mov
dec
push
sti
mov
add
adc
js
mov
fimuls
aaa
mov
insb
es
daa
iret
stc
test
mov
scas
and
push
sbb
mov
lret
adc
xchg
mov
mov
bound
lods
mov
scas
mov
pop
jge
jbe
jp
mov
jecxz
cmp
pop
ffreep
popa
or
mov
push
and
inc
dec
shl
xorl
adc
xor
cmc
out
nop
lahf
lret
inc
pop
dec
jbe
jg
fucomip
mov
mov
fadds
addb
pushf
fldl
inc
std
addr16
insl
call
sbb
mov
push
sub
mov
cwtl
mov
sub
insb
ret
dec
cli
pushf
scas
push
adc
adc
cwtl
sbb
adc
adc
test
cmp
push
les
add
jae
mov
in
fs
pop
mov
sbb
pop
insb
mov
adc
dec
xorl
sub
lret
das
add
lcall
in
pop
test
adcb
out
adc
insl
ficomps
loop
out
lcall
or
dec
mov
cwtl
lahf
xor
mov
adc
lds
mov
push
dec
mov
xor
dec
pop
jl
mov
movsl
xchg
jnp
add
sub
add
xchg
cli
inc
insl
mov
addb
xchg
inc
or
push
xchg
ret
pusha
add
fldl
dec
sub
call
xchg
xchg
cmp
lahf
imul
sbb
xchg
int3
mov
jecxz
adc
test
pop
cmp
aaa
sbb
mov
add
jge
stos
and
jbe
sub
in
clc
aas
call
pushf
sub
adc
adc
lock
xchg
sub
iret
sub
fdivp
data16
mov
outsb
push
lret
idivb
data16
ljmp
je
mov
les
arpl
out
pop
dec
or
dec
mov
inc
mov
add
cmp
iret
cs
fisttps
idivl
mov
adc
int3
iret
cmp
outsl
jecxz
jne
bound
sbb
mov
push
xor
inc
pushf
adc
add
inc
lods
xchg
lcall
add
aas
nop
nop
fmuls
insb
mov
fsubs
or
and
je
jg
cmp
mov
mov
notl
pop
and
xor
inc
daa
adc
out
fdiv
sahf
and
inc
enter
jmp
jmp
jecxz
cmp
lahf
je
aaa
cmp
notb
popa
out
mov
xor
cmp
fwait
adc
sub
leave
add
out
xchg
xchg
xchg
sub
and
fidivrs
mov
mov
and
sub
pop
sbb
shll
push
jb
cmp
inc
xchg
jge
sub
daa
push
movsb
test
jne
add
and
test
mov
int
ljmp
jnp
scas
xlat
test
fldcw
jnp
and
ss
mov
cltd
adc
outsl
mov
add
cs
repnz
cmp
fldcw
aas
lahf
test
repnz
sbb
or
mov
mov
in
push
pop
test
sbb
lock
pop
popf
mov
xor
dec
in
adc
cmp
xchg
pop
jo
mov
cmpsb
outsl
mov
nop
push
div
mov
xlat
inc
in
push
mov
hlt
stos
out
push
cmpsb
pop
push
sbb
outsl
fldenv
xchg
mov
pmaxub
insb
test
pop
sub
push
popa
mov
jae
pop
mov
fwait
sub
repz
idivb
cltd
pop
outsl
or
jnp
push
mov
xor
jp
notb
mov
nop
sub
nopl
adc
cmp
mov
push
call
int
bound
repz
idivl
sub
push
or
cmpsl
cld
orl
addr16
sub
add
in
int
sahf
mov
cwtl
adc
sub
nop
test
sub
mov
movsl
rclb
imul
jge
sub
movsl
push
cmp
in
xor
or
sarl
rolb
insl
mov
sahf
xor
cmpsb
dec
xlat
mov
psrad
ljmp
xor
es
jne
add
xchg
jno
icebp
into
test
call
rorb
pushf
js
jo
rol
sbb
repz
adc
pop
push
or
mov
inc
lods
mov
mov
or
mov
inc
loopne
add
mov
std
clc
stc
sbb
mov
jno
mov
out
pop
repz
insb
mov
or
in
and
add
hlt
imul
add
cmp
push
nop
scas
mov
cmp
shl
or
lds
std
or
shl
xchg
fimuls
jne
push
jp
inc
xchg
or
jl
and
ds
xchg
stc
cmp
push
out
push
loop
in
sub
cmp
stos
lahf
fwait
mov
ret
jae
pop
notl
mov
push
cltd
inc
adc
inc
jge
mov
leave
push
cmp
xchg
cs
nop
add
inc
push
mov
nop
jge
pop
mov
pop
lea
arpl
leave
xchg
mov
in
xchg
mov
insl
sub
lock
mov
mov
insl
inc
fsubs
xor
sub
jae
cld
mov
jb
push
jo
mov
xor
iret
and
sbb
dec
idiv
push
sub
aas
es
jnp
mov
add
mov
cltd
dec
add
xor
xchg
push
into
sub
inc
adc
sub
jge
outsb
orl
outsb
call
fdivl
sbb
cmpsb
fdiv
sub
scas
das
data16
mov
in
les
pop
mov
or
inc
sub
cld
js
test
aas
pop
insb
jp
mov
push
cmpsb
stc
insb
or
dec
xchg
pop
adc
inc
mov
insb
or
push
mov
xor
lods
jp
pop
mov
divl
adc
cmp
xor
aad
cmp
pop
sub
repz
cmpb
rorb
pop
sub
mov
xlat
push
ret
aaa
sbb
cmc
jb
pop
xbegin
and
sub
test
push
sub
ds
push
jnp
outsl
icebp
stos
jle
adc
cmp
xor
mov
dec
jne
int3
or
cmpsl
mov
orb
jno
sti
sub
mov
jg
das
mov
jae
sbb
js
xor
sbb
dec
push
or
fsubl
faddp
mov
sub
pushf
pop
arpl
inc
push
data16
sbb
lret
push
out
lods
in
es
outsb
and
imul
leave
cltd
adc
out
jno
mov
jnp
lcall
les
in
movsb
arpl
jne
cld
test
cmpsb
scas
pop
sbb
stos
dec
sbb
mov
sbb
wbinvd
dec
mov
int
scas
filds
nop
rcrb
lds
nop
dec
shlb
cmpsb
ret
or
xchg
ljmp
jnp
aam
and
stos
in
shll
xchg
and
lret
dec
mov
cmp
fisubs
je
jbe
test
icebp
inc
div
das
es
clc
cmpsl
push
in
dec
mov
js
outsb
xchg
push
popf
enter
lods
divb
cmp
pop
std
cmpsb
ret
adc
push
cmp
out
decb
clc
xchg
push
aam
add
repz
dec
pop
int3
mov
push
filds
jo
ret
xor
ds
aas
jl
sub
pop
mov
insb
test
fdivrs
sbb
mov
enter
into
add
pop
into
xchg
dec
xchg
sub
mov
imul
cmp
mov
out
add
addr16
inc
lret
push
pop
jnp
sub
xchg
and
lret
sub
jp
int
push
pop
insb
in
daa
adc
pop
inc
mov
or
mov
cmp
pop
sbb
or
loopne
in
fldenv
int
sbb
mov
insl
inc
clc
ror
clc
out
loop
lods
movsb
adc
leave
jb
cmpsl
aad
pop
imul
fldcw
pop
push
setge
mov
push
dec
cltd
js
cwtl
dec
pop
add
mov
push
jno
fwait
or
adc
movsb
sbb
inc
aad
adc
push
mov
sub
nop
dec
mov
ja
aam
test
sbb
push
mov
data16
popf
mov
ret
xor
mov
mov
pop
cmp
cld
movsl
add
pop
ret
divl
sar
mov
jl
shl
xlat
push
icebp
xlat
sbb
ja
cmp
pop
mov
mov
xlat
inc
jae
stos
mov
dec
pop
sub
fidivrs
es
or
and
jne
jno
mov
push
cmp
mov
iret
add
pop
jns
pushf
or
mov
mov
mov
pshufw
inc
lock
dec
pop
dec
xor
or
jmp
lret
and
movb
push
cmc
mov
lret
ja
in
push
adc
pop
sub
mov
xor
push
mov
mov
icebp
pop
aas
jb
int
xor
jo
pop
push
xchg
cmp
adc
cmpsb
stos
adc
pop
xlat
movsb
push
mov
dec
jns
lds
adc
mov
lods
push
lods
inc
pop
dec
ret
mov
adc
testl
pop
pusha
lods
call
or
test
adc
fistpll
jno
test
insb
int
xor
jmp
and
mov
add
loope
and
and
pusha
mov
jmp
and
ss
cmp
out
stos
jns
jmp
sub
lds
sbb
sub
out
jne,pn
xchg
mov
mov
dec
sbb
lahf
or
lret
push
movsl
outsb
xor
out
pushl
add
fisubs
push
or
inc
mov
push
jb
xchg
xor
sub
in
xlat
adc
cmp
aaa
adc
lahf
push
jl
dec
daa
out
cmp
aad
dec
fstpt
xor
xor
mov
push
inc
insb
cmp
rorb
std
sbb
fucomi
popf
cld
leave
mov
lods
xchg
mov
cli
orb
pushf
call
fwait
mov
xlat
jae
aaa
or
sub
test
fimull
jns
shrb
scas
push
mov
shlb
add
and
aad
jbe
mov
ret
shl
popf
or
movsl
lret
popa
sub
xchg
xor
push
enter
add
mov
sbb
jmp
fcmovne
sub
ror
dec
adc
in
fmull
dec
mov
call
loop
inc
mov
aaa
call
ret
adc
xchg
cmc
outsl
lock
orl
mull
loope
inc
cli
negb
test
add
stos
aam
movsb
xchg
leave
inc
fstpl
in
fistpl
xor
scas
lret
jge
das
xchg
xchg
popf
aad
dec
repnz
and
xlat
xchg
pushf
pop
into
or
daa
daa
aad
pop
xor
and
and
dec
mov
pop
sti
and
sarl
and
xchg
ja
jp
sbb
adc
les
jns
jo
enter
ror
push
popf
aaa
mov
push
inc
pop
cmc
cmp
push
data16
fists
imul
imulb
xchg
sarb
scas
jg
inc
mov
push
push
pop
jae
xor
or
sub
or
je
rorb
push
cs
push
sub
or
std
insb
push
into
mov
cmp
xor
pop
cmp
sbb
and
fisttps
nop
pop
adc
aam
inc
loope
mov
sub
mov
pop
adc
adc
or
mov
sub
push
loopne
fidivrl
mov
repz
stc
or
xchg
fldcw
iret
adc
out
push
in
sub
mov
fs
loop
rorb
xchg
mov
aaa
icebp
mov
ja
dec
clc
fildl
cmp
add
lods
fisubrl
mov
push
leave
outsb
es
sbb
cmp
pop
mov
fistl
in
insb
mov
enter
jbe
adc
notl
inc
mov
shll
clc
call
and
cli
stc
in
sbb
push
push
mov
push
mov
bound
push
das
jnp
es
outsl
mov
push
pop
adc
fwait
aad
int3
js
rcrb
pop
fistl
outsl
aad
xchg
sub
sbb
cmp
repz
aam
pop
dec
cmp
rcrb
xchg
sbb
loop
mov
or
leave
out
mov
enter
scas
pop
rcrb
add
add
pop
mov
add
mov
shl
insb
cwtl
xchg
ficomps
aad
aaa
call
or
jp
push
cltd
xlat
add
das
gs
xlat
fbstp
out
imul
stc
mov
test
cltd
pop
loopne
les
aaa
clc
bound
inc
insl
or
repnz
adc
jb
mov
mov
mov
adc
sbb
pushf
dec
in
inc
mov
fisubrs
rcll
scas
shl
out
push
test
mov
int
mov
mov
or
mov
adc
arpl
fadds
jg
and
adc
je
gs
adc
mov
sbb
fs
fs
mov
stos
cmp
push
inc
sub
pop
leave
lds
test
scas
sarb
adc
btc
scas
lahf
jle
fisubrl
fidivs
repz
jne
sub
jecxz
les
mov
push
in
cld
fs
push
cli
leave
ret
mov
mov
loope
adc
insb
push
push
cmp
lcall
add
loope
int3
daa
daa
mov
inc
push
push
add
dec
sub
push
jno
push
js
outsb
insb
add
jp
mov
push
mov
or
imul
dec
adcl
mov
les
jmp
int3
adc
or
cld
mov
repnz
add
mov
cltd
lods
dec
add
pop
dec
inc
xor
setb
push
or
sub
test
je
mov
dec
dec
arpl
enter
jecxz
sub
inc
xorl
sbb
xchg
ljmp
into
cmp
movsb
stos
cmp
push
and
add
lcall
adc
out
add
in
pop
loop
xchg
movsb
je
stos
cmpsb
mov
push
popa
in
aad
iret
rol
cld
popf
push
mov
lahf
ds
xchg
sbb
in
jbe
mov
sti
out
mov
jbe
xchg
sub
stos
sti
sahf
mov
or
movsl
cmpsb
lcall
lods
add
stos
cli
adc
and
lods
adc
int
lret
mov
loopne
cld
dec
imul
cld
inc
push
sbb
lods
push
xor
or
xor
dec
mov
idivl
pop
in
push
js
dec
jmp
adc
adc
out
bound
xor
mov
sub
mov
inc
imul
lods
arpl
aam
enter
cltd
push
data16
inc
inc
sarb
mov
dec
mov
jb
dec
es
mov
imul
fs
cld
sbb
nop
incl
inc
test
fs
xchg
dec
mov
add
out
jmp
mov
pop
test
cmp
enter
mov
mov
adc
mov
mov
ss
adc
stc
dec
sub
clc
subb
fldl
jbe
jmp
test
test
or
imull
add
cli
mov
mov
imul
ljmp
push
and
icebp
pop
into
pop
xor
leave
outsb
out
repnz
fs
sub
ret
sbb
xchg
fadds
jle
pop
inc
stos
dec
daa
loopne
dec
xor
out
jno
btc
mov
or
jne
mov
push
mov
mov
popa
push
movsl
push
cmp
out
cmp
fistps
rorb
sub
js
pop
xchg
arpl
mov
neg
arpl
shlb
and
jo
hlt
pop
out
shl
sub
adc
popa
movsl
call
imul
inc
outsb
out
fisubs
test
mov
sub
mov
out
inc
fisubrl
or
push
jb
test
push
mov
rdpmc
mov
ret
lret
dec
sub
sub
ss
gs
push
ss
inc
lea
in
into
adc
mov
inc
imul
jbe
mov
xchg
dec
hlt
xlat
lock
sbbl
cmp
jbe
ret
sbb
push
push
inc
int
jmp
adcl
add
test
push
in
lret
pop
adc
xchg
ret
cmp
push
mov
jecxz
in
dec
xchg
popa
dec
call
out
insl
and
pop
hlt
enter
push
pop
outsl
mov
andl
mov
add
and
incl
xor
jp
mov
pusha
cwtl
and
fsubrs
push
jae
subb
jle
adc
xchg
or
pushf
dec
add
jno
loop
stos
outsb
outsb
lods
scas
loopne
imul
cmp
sub
or
jmp
loop
out
xchg
xor
push
mov
sti
adc
aas
push
or
push
ficompl
pop
pop
add
jno
dec
mov
test
mov
lock
iret
loope
daa
cld
test
and
mov
inc
icebp
gs
jmp
gs
adc
repnz
fidivrs
mov
shl
pop
inc
sbb
mov
mov
mov
sbb
outsl
push
and
and
mov
data16
lds
pop
pop
pop
mov
lret
dec
sub
mov
faddl
loop
push
jbe
dec
jns
addr16
inc
cwtl
pop
inc
icebp
ja
push
push
ret
push
xchg
sub
cli
shl
lods
addr16
and
xlat
mov
cmpsl
and
mov
test
or
scas
pusha
add
loop
and
fwait
jae
cmp
out
sbb
add
dec
xor
mov
arpl
mov
mov
jne
and
stc
scas
ljmp
std
jae
rolb
pusha
popf
int3
push
imul
arpl
fdivrs
push
jns,pn
loope
fdiv
xlat
js
mov
inc
shll
inc
dec
jno
outsb
mov
xor
leave
loope
js
pop
push
or
mov
loope
test
adc
addr16
inc
add
les
xchg
inc
add
push
push
adc
lds
push
icebp
insl
insl
fs
shrl
mov
shll
sbb
mov
mov
les
popf
cmp
stc
mov
adcl
arpl
call
add
add
push
cmc
jae
sbb
mov
in
fxch
xor
das
loopne
into
sub
lock
push
imul
xchg
inc
hlt
add
imul
or
adc
std
enter
insl
xchg
or
and
scas
mov
and
shrl
pop
outsl
aas
test
xchg
mov
outsb
push
sbb
sbb
insb
out
cmp
dec
out
inc
pop
mov
dec
aaa
lods
mov
in
hlt
mov
pop
jle
scas
ja
insl
call
push
sahf
jmp
in
scas
cwtl
jl
mov
cmp
shlb
pop
out
mov
pop
pop
jg
pop
mov
sub
push
xchg
mov
cmpsl
loopne
mov
inc
push
and
mov
push
xor
xlat
push
fnstenv
int3
lahf
mov
ret
and
jno
incb
and
clc
sar
sub
dec
fwait
and
leave
push
sub
sbbl
xor
cwtl
sub
pop
jno
leave
and
js
mov
pop
push
aad
lahf
fsubp
test
aam
out
jl
or
xchg
pop
pushf
pushf
xchg
test
push
cs
imul
sbb
dec
pop
xchg
push
mov
in
push
out
aad
xchg
dec
pop
pop
jae
or
out
jns
dec
clc
xchg
mov
repz
cmp
mov
mov
push
adc
add
mov
and
inc
rcrb
inc
cltd
jbe
push
lret
mov
inc
xor
cli
pop
adc
adc
rorb
dec
lret
mov
sbb
dec
and
out
clc
insl
mov
imul
dec
iret
mov
arpl
aam
cmpsl
push
adc
fiaddl
cli
or
in
add
stos
dec
iret
cmpsb
test
arpl
loope
lahf
ret
dec
cwtl
adc
mov
xchg
in
or
adc
jo
popl
push
mov
push
push
add
ljmp
pushf
mov
icebp
sbb
cmp
inc
std
add
pop
ljmp
xchg
scas
pop
add
or
into
add
push
hlt
je
inc
push
shl
mov
or
jecxz
sar
sub
test
cmpb
test
xor
mov
dec
sbb
sub
xchg
and
sbb
adc
xlat
out
shll
scas
xor
aaa
sbb
push
idiv
and
stos
xor
stc
pop
lock
test
and
lret
ret
or
jg
dec
cli
push
ficoms
lret
sub
int
cmp
xchg
aad
jae
or
sarb
loopne
xchg
out
or
mov
rol
and
push
or
push
jns
fmull
push
mov
dec
ja
mov
mov
int
cltd
das
aaa
stos
pop
dec
enter
stos
inc
sahf
jns
cld
xchg
sarl
add
cmp
stos
out
push
test
gs
js
sub
hlt
into
cmp
and
or
inc
adc
lods
fdivrl
xchg
mov
out
shlb
addl
xchg
add
xor
repnz
leave
cmp
jle
dec
inc
mov
das
xchg
ljmp
adc
xor
popf
aas
xchg
inc
sub
or
push
adc
aam
mov
test
sub
mov
adc
adc
jb
jle
sti
outsb
xchg
jmp
push
loope
mov
sub
xchg
subl
jle
push
inc
nop
mov
cld
leave
xor
stos
xchg
mov
out
nop
enter
push
adc
mov
ja
fsubs
jl
shl
fldl
sbb
leave
aaa
daa
pop
aad
push
jbe
shrb
push
and
out
lods
inc
sub
clc
pusha
cld
adc
shrl
lcall
pop
loop
je
leave
shll
adc
cli
ja
adc
mov
dec
fwait
shr
cmp
mov
dec
loope
outsb
dec
push
dec
inc
addb
fdivr
in
and
sti
xchg
adc
popl
dec
test
idivl
or
push
pop
ficoml
into
movb
sbb
ja
subb
fidivl
adc
dec
shlb
movsb
jp
mov
sbb
pop
cmc
adc
mov
rorl
mov
cli
mov
adc
arpl
loope
icebp
ss
ds
push
subl
pushf
jnp
in
mov
les
cmp
loop
imul
fnstsw
xchg
movb
xor
jae
mov
inc
jle
add
xchg
mov
sbb
xchg
call
das
stos
jmp
mov
dec
push
mov
fstpt
mov
xchg
mov
sbb
xchg
cmc
popf
xchg
sbb
sub
fdivs
popa
xlat
ss
nop
push
mov
outsl
lods
testb
mov
jbe
insl
out
pushf
jg
xlat
jno
xor
cmp
dec
clc
sub
mov
mov
sbbl
test
push
loop
pmulhuw
xchg
int
sti
popa
xchg
sbb
cwtl
hlt
mov
cmp
jle
lods
int
and
and
pusha
repnz
push
rorl
stc
fucomi
lahf
pusha
jg
icebp
pop
aaa
and
xchg
bound
push
xchg
push
pop
pop
push
mov
ret
push
lret
mov
pop
mov
mov
imul
lods
sub
push
frstor
movsl
movsb
pop
sub
add
mov
loope
idivw
mov
lea
push
xor
faddl
push
dec
stc
pusha
dec
and
insb
repnz
mov
xchg
clc
pop
mov
imul
divb
xor
mov
jle
push
adc
hlt
sbb
push
inc
xor
loop
lret
mov
add
xchg
dec
mov
loopne
shlb
pop
push
xchg
ljmp
mov
ljmp
stc
data16
mov
out
xor
and
add
aas
lret
imul
sbb
fcmovnb
add
int
pop
test
push
test
imull
xchg
mov
jnp
movsl
mov
jp
adc
adc
xchg
idivl
pop
inc
push
stc
hlt
push
inc
loopne
inc
fsubrl
imul
int
gs
adc
inc
and
mov
test
leave
mov
mov
and
cmp
lock
cli
sbb
pusha
pop
dec
sub
decl
jae
fdivl
push
inc
push
std
and
xchg
adcb
pop
pop
mov
add
nop
call
outsb
lea
pushf
push
sub
out
cs
enter
mov
mov
pushf
xchg
bound
ds
fisubrs
rolb
and
push
pusha
movsl
pop
adc
xor
stos
bound
cltd
aad
ljmp
push
jge
sbb
cld
fnstsw
pop
fdivs
sbb
xchg
and
inc
xchg
mov
push
or
mov
jne
pusha
dec
cmpl
dec
adc
push
addb
inc
gs
mov
ljmp
aaa
and
scas
roll
mov
push
push
cwtl
push
bound
lock
dec
jmp
data16
xchg
and
icebp
add
es
repz
outsl
stos
nop
mov
push
push
pop
xor
mov
push
cltd
inc
add
jle
pop
mov
or
jp
xor
adc
fists
or
push
pushf
xor
and
divb
mov
lods
dec
lods
jp
xchg
stos
inc
nop
jns
mov
cs
test
lock
lds
mov
lret
stos
mov
fisubrl
js
movl
sub
into
xor
sub
inc
xchg
decb
mov
dec
mov
dec
push
pop
pushf
cmpsl
mov
ror
inc
insb
roll
inc
push
stos
jp
sbb
lret
pop
push
push
pop
sti
mov
push
xchg
inc
and
mov
clc
test
or
ffree
pushf
or
hlt
arpl
insb
dec
pop
insl
cltd
xlat
imul
lock
lret
mov
imul
test
sub
aam
sub
add
mov
jae
cmp
lcall
andb
icebp
fnstcw
bound
cmp
getsec
jne
addl
push
mov
push
fcomp
dec
orl
inc
adc
pop
adc
sbb
mov
lds
sar
fcoml
repnz
xlat
jge
int
loopne
out
cmp
push
push
add
push
xchg
int
sub
add
scas
pop
jno
in
es
fstp
arpl
cmp
cmpsl
xchg
push
or
aam
adc
loopne
imul
inc
or
fwait
int3
xor
lods
sbbb
arpl
sbb
ljmp
leave
subb
loop
xchg
inc
add
xor
adc
clc
bound
fstps
leave
test
and
jmp
mov
xchg
sbb
cltd
mov
in
cmp
add
stos
jb
arpl
sub
repz
sub
dec
imul
enter
fisttpll
insb
notl
or
sbb
xor
sbb
push
push
cmp
push
push
push
jb
mov
es
cmc
cmp
push
mov
nop
shll
jmp
imul
in
insb
icebp
sub
mov
inc
adc
adc
sbb
std
push
and
ljmp
jl
insl
ret
adc
sbb
xor
push
fidivs
movsl
repnz
outsb
sbb
shll
sub
pop
sub
push
xchg
inc
addr16
mov
and
ss
jecxz
cmp
push
adc
adc
push
aad
js
mov
int
xchg
mov
pop
out
clc
test
push
sub
sub
mov
outsb
aaa
inc
or
pop
cmp
lahf
mov
mov
xchg
out
test
sub
arpl
sub
adc
outsb
mov
imul
and
dec
xor
int
dec
in
pop
outsb
pop
addr16
and
loop
scas
push
xchg
mov
xchg
inc
rcrl
lods
leave
pop
pop
add
call
inc
movsl
mov
mov
xorl
mov
lds
mov
loopne
xor
mov
jno
stos
dec
adc
jle
shlb
mov
fyl2x
or
and
xlat
stc
xchg
sarl
dec
test
stos
jo
mov
mov
jg
or
pop
sub
lock
add
in
insb
push
adc
testb
js
xlat
inc
cmpsb
pop
imul
jp
sahf
and
rorl
push
inc
jnp
scas
adc
fdiv
into
jo
sbb
cmp
mov
mov
rcrb
fisubrl
jecxz
jb
test
scas
xchg
xor
mov
popa
jo
sahf
enter
xchg
lods
rol
inc
mov
aam
and
jmp
xor
cmp
add
outsl
xor
scas
sar
lahf
mov
jge
sahf
or
das
push
pop
cmp
lods
js
cmp
xchg
mov
and
mov
aas
inc
pop
push
lock
orl
sbb
push
pop
or
and
adc
lods
push
add
jg
dec
enter
hlt
outsl
or
daa
mov
arpl
push
xchg
lret
std
cmp
dec
add
in
ret
shlb
jg
lock
cmpsl
push
scas
sbb
cmp
sbb
cs
daa
addr16
cmp
push
lea
fxch
gs
in
sbb
adc
icebp
scas
lahf
pop
sti
pop
inc
ljmp
aam
xlat
xchg
daa
add
pop
xchg
sbb
or
rorb
test
mov
cmc
push
imulb
xchg
sbb
testb
xchg
repnz
scas
repnz
in
inc
mov
sbb
das
xlat
js
xor
loop
std
les
mov
lods
pop
mov
push
fs
inc
pushf
pop
scas
add
sub
jb
pop
test
sub
insl
cs
mov
xor
into
cmp
test
push
jb
fidivrs
cmp
lahf
mov
add
lock
dec
ret
out
inc
cmpsb
out
add
hlt
cmp
shl
add
lret
xchg
cs
dec
shrl
mov
fistl
push
xor
fisttpl
jmp
rclb
repnz
mov
ds
dec
ret
pop
inc
movsb
cwtl
push
lods
dec
pushf
sub
bnd
xchg
mov
jl
dec
add
ror
mov
add
lock
std
je
aam
das
dec
or
vcvttsd2si
xorl
mov
loope
ss
leave
xchg
push
aas
mov
mov
xor
lcall
xor
xchg
fwait
add
jp
rolb
mov
sub
sbb
int3
mov
sub
push
dec
pushf
fadd
test
neg
scas
in
push
in
ret
or
or
bound
jp
dec
popa
mov
mov
scas
cmpsb
pushl
mov
in
sar
aaa
cmp
lods
sub
push
adc
or
rorb
cmpsb
cmp
pop
inc
fwait
mov
imul
int3
out
lock
loopne
mov
clc
xor
lret
sti
loope
push
in
cld
push
out
xor
ja
test
andl
adc
xlat
lahf
testb
bound
and
out
mov
add
mov
sti
inc
xchg
jo
in
pusha
cli
adc
sbb
ljmp
enter
mov
movzbl
mov
add
cmc
adc
adc
imul
push
dec
dec
mov
dec
sbb
inc
je
xchg
pop
shll
xor
xchg
in
test
das
mov
outsb
pop
push
in
push
or
xor
dec
sbb
jbe
sbb
sub
movsb
pop
icebp
rcll
lret
imul
sti
aas
inc
mov
jge
add
loope
lahf
aad
sub
jo
inc
fdivrs
in
push
pop
mov
ffreep
clc
js
or
jae
or
cmp
popl
movsb
cli
das
sbb
and
aas
fwait
pop
inc
or
loop
jae
imul
rcl
data16
mov
and
and
and
lds
pop
xchg
jg
out
add
xor
cmpsb
addr16
hlt
jg
adc
pusha
and
das
lods
jmpw
pop
out
loope
push
xchg
dec
daa
movsl
fdivrl
sahf
cltd
andl
in
jb
idiv
aam
into
out
stc
jp
and
addr16
sub
adc
testb
inc
cmc
mov
and
adc
js
ds
neg
gs
out
add
addr16
xlat
jnp
xchg
sti
shrl
jne
jge
lea
sbb
pop
lods
incl
ljmp
out
jp
cltd
or
jo
mov
imulb
adc
mov
ljmp
sahf
addl
loopne
mov
add
pusha
sbb
cmp
je
daa
mov
mov
lret
jl
icebp
lds
xchg
sbb
ret
jo
sbb
popf
es
movl
es
or
cmpl
loop
es
cli
xor
sub
or
mov
nop
push
push
push
ds
aaa
mov
mov
bound
xchg
stos
xor
push
jmp
testb
mov
jg
push
leave
lds
inc
xor
jle
inc
mov
loope
cmp
mov
movsl
dec
mov
aad
imul
xchg
mov
push
jg
jbe
int3
and
xchg
lods
sbb
test
or
fdivrl
xchg
daa
and
mov
mov
rolb
xor
sarl
shlb
fstl
push
dec
mov
les
pop
das
lea
add
mov
mov
xor
out
pop
pop
addr16
xchg
std
xchg
int
iret
inc
sub
imul
hlt
lcall
aas
and
shrl
outsl
cmpsb
mov
mov
pop
loopne
add
dec
push
lea
push
shll
addb
mov
in
and
and
cli
out
gs
ret
and
xchg
fcmovnu
mov
and
out
jne
or
mov
rorb
mov
lods
shrb
imul
and
sub
mov
repz
xchg
mov
les
or
out
adc
lea
mov
cmp
mov
adc
aad
bound
dec
jb
lods
lcall
out
adc
sahf
pusha
mov
movsb
sub
xchg
inc
xor
mov
pop
outsb
lcall
insb
sahf
push
cs
jns
add
fsub
stc
xchg
in
pop
cld
pop
outsl
sub
inc
mov
push
je
imul
dec
or
adc
push
test
xchg
pusha
cmp
mov
cltd
loop
push
add
daa
push
adc
ja
jmp
cmpsl
add
lret
and
clc
scas
xchg
inc
sbb
lret
imul
pop
xlat
mov
push
bound
push
fidivrl
clc
lahf
seto
sbb
inc
sub
fldl
cwtl
sub
or
lods
xor
es
push
insl
rcrb
jge
in
movsb
sahf
pop
pop
mov
mov
sbb
cs
xor
cld
inc
inc
sub
rcll
pushf
into
repnz
inc
fildll
sub
add
or
lea
mov
cmp
repnz
mov
in
add
sub
int3
imul
incl
daa
push
jge
cmp
adc
jl
lock
pop
mov
jae
inc
aam
icebp
arpl
cmpb
inc
or
fwait
sbb
mov
inc
ss
nop
aaa
adcl
mov
insb
leave
or
jmp
cmpsb
jnp
int
pop
lahf
mov
adc
and
popa
pop
loopne
aad
and
fldenv
and
push
xchg
std
ja
xchg
or
mov
frstor
ret
iret
jl
loope
bound
push
rcrl
sbb
jns
dec
test
cwtl
add
push
inc
add
dec
aas
orl
sbb
imul
jns
int
arpl
mov
mov
sub
jnp
sub
loope
aaa
pop
push
sarl
xor
or
je
fistpl
or
loopne
add
stc
fcompl
adcb
ljmp
xchg
mov
and
punpcklbw
push
imul
ficompl
or
lds
dec
xchg
aam
sub
xchg
imul
test
mov
movsb
mov
add
dec
sub
pusha
push
cmc
sahf
loop
pop
inc
mov
call
xor
add
stc
jge
push
xor
lret
call
pusha
pop
stos
pop
fisubrs
lods
push
adc
inc
stos
fwait
into
loope
mov
add
and
lahf
sbb
adc
mov
xchg
jmp
inc
loop
ds
dec
std
mov
xlat
jbe
cmp
fdivl
in
push
fildl
in
movsb
sub
jge
fwait
sub
out
hlt
cmc
sbb
adc
out
out
arpl
enter
pop
into
mov
push
cmc
add
push
mov
ljmp
jmp
mov
xchg
cmpsl
xor
clc
popa
xchg
inc
xchg
mov
lock
outsl
xlat
lret
jae
rcr
jae
push
adc
adc
mov
jp
pop
push
insb
sti
mov
pushf
rcr
in
int3
mov
jle
cmc
mov
daa
insb
lea
sbb
dec
inc
daa
outsb
test
push
or
lret
mov
add
fisttpl
mov
push
xchg
leave
fwait
adcb
push
jae
mov
pop
mov
mov
pusha
inc
sub
cmp
fsubrl
xor
push
shl
popf
adc
and
or
jno
inc
outsl
mov
cmp
lahf
xchg
and
rcll
in
xchg
push
ds
imul
mov
jp
dec
cli
and
cli
clc
mov
adc
dec
pop
lret
lahf
xchg
cmp
pop
and
das
and
jp
jns
test
add
push
dec
or
addr16
xchg
push
cmpsb
inc
imul
or
lods
sbb
xor
test
mov
cmp
sub
cmp
push
shll
inc
fwait
add
das
jge
dec
lea
xlat
cwtl
cltd
into
mov
jo
adc
std
pop
mov
or
stos
daa
sbb
push
xchg
stos
iret
and
in
insb
out
mov
pushf
sub
add
leave
addr16
push
dec
dec
out
mov
and
and
cmp
bound
subb
push
stos
int
cwtl
mov
xchg
jns
mov
in
sbb
pusha
mov
cmpb
aaa
fdivl
nop
add
add
or
jmp
fisttps
mov
mov
inc
lahf
pop
addr16
pop
jae
fidivs
test
stos
pop
in
into
in
lret
fdivs
jmp
stos
xor
in
ror
ds
rolb
jle
push
cmc
lea
cmp
mov
out
cmc
idivb
inc
xor
addr16
xorb
and
in
lock
in
adcl
xchg
push
pop
mov
in
or
shl
cmc
lods
push
sub
out
xchg
fwait
add
dec
cmpl
mov
hlt
lahf
popa
xor
mov
into
mov
out
mov
mov
int
leave
push
aaa
int
je
arpl
imul
push
jl
subb
dec
rorl
lock
filds
push
inc
sub
popa
repz
popa
or
repnz
jge
xor
mov
lcall
cmp
loope
out
pop
add
sub
jae
jmp
lds
mov
cmp
xchg
jnp
or
jg
ljmp
dec
test
iret
out
adc
lods
stos
pop
inc
pop
sub
mov
xor
dec
movsl
repnz
xchg
out
xor
shl
ja
push
cmpl
enter
cmp
adc
mov
aad
and
gs
lcall
pop
xchg
fdivrs
cmpb
call
out
lret
sub
nop
mov
or
mov
inc
add
jo
fcmovu
cmp
push
jmp
loope
lods
lds
jp
sbb
push
psubsb
adc
ret
pop
movsl
rclb
pop
cwtl
pop
ja
fwait
cltd
test
push
xorb
rorl
mov
lret
insl
mov
jle
shll
and
pushf
mov
out
ds
push
mov
mov
jb
jne
xchg
in
lea
out
and
in
pop
dec
sbb
in
out
sub
jl
xchg
jae
nop
mov
fisttps
xchg
and
xchg
or
cmp
mov
jns
iret
cmp
lods
nop
mov
loopne
fs
jne
mov
stos
out
lret
jecxz
icebp
inc
mov
sar
push
lret
hlt
and
lods
scas
xor
push
and
dec
jnp
dec
cmp
fiaddl
inc
mov
pop
lods
cld
xor
xorb
subl
int
mov
jnp
sahf
pop
mov
aad
aaa
mov
test
pusha
add
push
lock
out
out
mov
xchg
pop
pop
jno
push
dec
fsubl
fcoms
mov
lret
pop
push
icebp
int3
mov
dec
mov
push
scas
inc
fsubrs
popa
arpl
jns
inc
xchg
sbb
inc
xchg
imul
test
fsubs
testl
imul
or
bound
mov
jns
ljmp
push
adc
jbe
orl
mov
test
pop
add
and
fadds
mov
jg
ret
ret
pop
es
idivb
and
dec
clc
mov
lret
shlb
jo
or
aad
jecxz
cwtl
pop
outsl
movsl
push
pop
jnp
cmpsb
sub
loope
repz
cli
xchg
push
les
mov
insb
les
inc
or
stos
add
dec
jb
xchg
or
adc
in
popl
fsubs
ljmp
xchg
jmp
adcl
dec
ret
xlat
mov
clc
fs
je
ret
mov
jbe
js
or
jno
inc
mov
jae
jmp
incb
pushf
es
js
sbb
pop
sub
test
push
jle
scas
inc
insl
gs
cmpsl
insl
pop
dec
cltd
push
gs
ds
sub
sbb
mov
sub
add
scas
and
je
out
lods
lcall
inc
lea
imul
gs
mov
inc
repnz
rolb
jne
xchg
data16
adc
dec
jg
sub
sbb
adc
mov
lahf
nop
sub
loopne
fsub
pop
pushl
gs
pop
out
adcb
mov
pop
das
cmpl
jecxz
fs
ret
and
sub
mov
push
pop
sub
xchg
add
aad
sarl
in
jno
movsl
das
mov
outsb
scas
push
xrelease
pop
sbb
ds
mov
shll
adc
inc
pop
data16
std
jge
sub
xchg
test
js
loope
pop
imul
jp
pop
push
les
pop
pop
xlat
adc
cmc
sbb
dec
mov
clc
lods
or
xchg
mov
subl
lcall
lea
sbb
jbe
adc
je
mov
daa
filds
inc
lar
in
fistpll
pop
in
mov
inc
sub
cmp
pop
loope
stos
push
jae
push
pop
push
movsb
dec
cwtl
mov
stos
mov
inc
jecxz
push
xor
fists
in
adc
or
xchg
psllq
or
push
bound
loopne
and
sbbl
ja
cmpb
lock
ret
xor
xchg
gs
add
scas
adc
shlb
fdivrp
jns
mov
mov
dec
adc
xchg
ret
adc
adc
sub
roll
jmp
movsb
andb
cmp
iret
sbb
add
sbb
dec
or
cmp
pop
xchg
aam
shll
xlat
mov
dec
shlw
js
das
adc
pop
and
rolb
or
cmc
ds
in
xchg
pop
xchg
mov
or
adc
add
jle
mov
dec
pop
push
es
leave
scas
loop
dec
test
ss
jg
adc
xchg
push
xlat
mov
or
jne,pt
xchg
mov
popf
jecxz
jmp
cli
mov
rol
popa
out
mov
mov
lods
push
lds
leave
or
mov
out
popa
sub
mov
jae
jb
arpl
jne
into
dec
xchg
sbb
xlat
sar
add
sti
mov
test
sub
mov
imul
movsb
andb
push
mov
push
xchg
sbb
push
mov
mov
pushl
mov
loope
xchg
mov
test
outsl
mov
adc
xor
popa
push
imul
cmpsl
lret
insl
dec
jecxz
push
jns
mov
sbb
lea
pop
jnp
inc
out
and
bound
in
sbb
ret
iret
add
pop
mov
outsl
stos
notb
aas
fwait
sub
jb
rclb
lock
push
in
push
mov
fwait
out
cmp
lret
rorb
mov
xchg
xlat
enter
call
adc
xchg
add
mov
adc
insl
mov
add
sbb
std
mul
out
int3
test
cmp
dec
xchg
shr
sbb
jbe
jl
pop
pop
inc
imul
pop
cmp
add
mov
push
jne
mov
push
cli
ljmp
xor
cld
lahf
push
or
fs
pop
sbb
xor
test
cmpsb
jne
or
jns
movsb
push
or
movl
sbbb
movsl
xor
inc
or
xchg
lret
movsb
in
push
jae
jbe
fsubrp
cmp
mov
mov
unpcklps
and
sbb
sbb
inc
rcll
nop
fidivrs
or
and
and
ficoms
or
push
test
pushf
jp
xchg
xor
out
fsubl
mov
mov
or
xchg
xchg
xor
jns
xchg
loop
sub
push
jmp
dec
mov
dec
mov
faddl
dec
pop
pushf
pop
adc
sub
loop
mov
xchg
ret
sbb
adc
mov
sbbl
jb
cmp
and
inc
stos
sbb
into
jge
dec
fdivrs
sbb
xchg
jo
fistps
pusha
xchg
mov
shll
aad
push
cmp
iret
ret
mov
xor
ss
xchg
shll
mov
insb
pop
movsb
dec
mov
inc
xor
jb
fbld
pop
xchg
mul
movsl
push
rcrl
fcomip
shlb
cli
inc
sub
dec
pop
jns
and
cs
aas
push
fs
xchg
xor
jl
mov
dec
pop
or
adc
adc
fdivs
popa
push
inc
push
jge
clc
movsb
movsl
cmpsl
push
movb
jns
addl
rclb
and
cmp
cltd
sbb
sbb
cld
mov
or
sahf
dec
dec
inc
pushf
out
loopne
add
ljmp
dec
mov
lahf
dec
movsb
pop
jl
clc
inc
fidivrl
and
push
rclb
mov
adc
cmp
fbstp
mov
fstp
jl,pn
mov
outsb
mov
int
ret
testb
mov
data16
cli
sbb
sub
xlat
fnsave
dec
not
repnz
popa
jno
test
sub
or
mov
popf
hlt
cmp
orl
arpl
ja
iret
add
xchg
sbbl
mov
icebp
cmp
int
mov
mov
push
cltd
pop
jo
sahf
popa
test
iret
and
xlat
cmp
neg
fwait
dec
fsts
mov
adc
and
popl
mov
sbb
adc
test
cmp
xchg
cltd
dec
es
push
insb
push
lea
inc
and
adc
jnp
incl
xchg
mov
call
loope
lods
iret
and
roll
mov
mov
mov
popa
push
lret
cmpsb
out
jge
inc
imul
aad
mov
aam
insb
bound
add
lcall
pop
mov
xor
mov
push
sti
stos
xchg
inc
inc
or
mov
jmp
cltd
loope
js
mov
mov
scas
and
aas
aas
mov
push
scas
out
imul
dec
xchg
jg
or
sti
fidivs
ret
push
gs
dec
gs
cmc
clc
xchg
and
sbb
sbbl
cmpsb
mov
inc
int3
popl
shr
add
int
les
data16
mov
or
inc
leave
mov
mov
cs
dec
int
lods
adc
xor
xor
pop
repnz
imul
push
push
enter
negl
add
pshufw
dec
xor
mov
loopne
in
push
shlb
xor
sti
or
sbb
and
inc
stos
inc
adc
pop
into
pusha
jecxz
or
mov
or
push
cmp
jg
push
repnz
pop
aaa
ret
xor
int
push
mov
push
inc
xchg
aas
pop
sti
dec
jmp
or
mov
les
push
orl
js
icebp
push
nop
jmp
cmpsb
ret
dec
outsb
cmpsb
fwait
aam
or
retw
test
cmp
and
push
mov
lret
and
inc
cmpsl
lds
adc
pop
int
cld
sbb
cmc
and
sub
hlt
in
pushf
cmpsl
testl
xor
jp
adc
out
inc
cmc
out
jl
or
sbb
sbb
mov
adc
jae
pushf
add
insb
mov
cmp
out
cltd
pop
test
push
fstps
repz
out
dec
push
or
in
push
add
insl
xchg
test
out
inc
cmp
jne
sbb
js
sbb
rclb
sbb
xchg
jnp
insb
or
in
mov
push
test
test
pop
repnz
xor
mulb
mov
ror
lods
mov
inc
inc
mov
test
jns
ret
insl
lock
adc
or
loope
lea
pop
mov
push
jge
lret
rolb
imul
sti
xchg
xor
lea
jnp
xor
pusha
sbb
jge
dec
or
inc
sbb
fcomi
les
repz
dec
sub
cmp
xchg
mov
pop
push
dec
insl
cld
xor
jne
lock
xchg
sub
or
mov
fsubs
mov
test
fdivs
cli
rcl
jl
ficompl
sub
or
movsb
adc
fcoms
scas
sub
outsb
daa
and
xor
sub
adc
cmp
cmp
sub
cmc
leave
das
adc
clc
push
std
xchg
dec
aam
jno
mov
inc
sub
cmpsb
push
ficoms
jno
push
data16
jae
es
das
xor
int
add
xor
stos
mov
repnz
xor
lock
popa
xchg
andb
sahf
cli
mov
pop
imul
imul
test
daa
pop
js
push
mov
xchg
jmp
ret
dec
sti
jmp
add
mov
dec
aam
xchg
dec
loope
jl
dec
xchg
movsl
cmp
in
fdivr
sahf
aaa
inc
push
sub
sarb
cmp
rol
fwait
dec
push
je
stc
vprotd
jbe
roll
pop
sub
jbe
or
test
insb
adc
jg
enter
adc
sub
jno
leave
or
out
pop
mov
stos
sbb
mov
rcll
or
cltd
mov
xchg
es
cmpsb
iret
mov
cmp
lock
add
adc
xchg
mov
adc
leave
xor
xor
mov
pop
test
push
mov
jo
push
xchg
push
pop
or
je
lods
das
mov
pop
outsb
mov
push
add
addb
gs
mov
pop
ljmp
inc
push
arpl
mov
cmc
cmp
push
paddw
stos
cmp
push
xchg
and
movsl
sub
and
xor
inc
xchg
sub
or
out
inc
add
ret
daa
push
jo
mov
popf
pop
orl
push
jae
mov
pushf
mov
int3
cmp
xchg
insb
pop
sar
mov
fldenv
mov
and
or
xchg
push
aas
das
xchg
inc
mov
xchg
inc
jge
sbb
enter
out
jb
gs
repz
les
imul
insb
xchg
rorb
lahf
dec
pop
dec
aaa
pop
xchg
int3
and
mov
pop
inc
inc
dec
hlt
rcll
inc
test
das
divb
push
cmc
outsl
adc
xchg
jbe
lahf
cmp
jge
cld
mov
mov
push
js
push
cmpsb
push
ljmp
bsr
mov
es
xchg
outsb
push
shlb
in
cmp
jno
mov
movsl
ret
jae
jo
cmc
popa
movsb
sbb
in
scas
dec
push
dec
les
push
jns
jecxz
insl
jns
inc
mov
pop
nop
mov
lcall
sub
enter
sbb
bound
scas
addr16
and
push
pop
stc
setno
mov
dec
fisubs
gs
pop
and
push
scas
sbb
add
lahf
out
sbb
push
jg
es
and
pop
jne
scas
cwtl
sbb
imul
mov
in
xchg
fwait
subb
dec
add
cmp
test
push
mov
mov
loope
inc
mov
fsub
cmp
cmp
bound
sbbl
push
clc
stos
scas
std
filds
sti
hlt
mov
inc
test
sbbb
aad
imul
cmp
xlat
xor
mov
insb
mov
adc
roll
sbbl
in
jo
add
sbb
push
das
mov
sub
and
cmp
jl
push
insl
push
sbb
and
add
push
fwait
data16
adc
imul
jmp
or
cmp
mov
in
test
test
sahf
cltd
add
jg
push
dec
sub
roll
mov
je
mov
add
pushaw
inc
scas
pop
insb
addps
es
and
push
mov
rorb
icebp
sbb
or
daa
sbb
xchg
mov
scas
xchg
jns
fnstenv
adc
jge
cld
jl
add
rorb
mov
push
xor
fnsave
sub
insb
jecxz
jp
scas
outsl
jbe
xchg
mov
aam
inc
jns
jp
adc
jmp
push
std
jb
mov
rdtsc
in
lret
or
das
dec
add
pop
or
or
int
xchg
mov
dec
jnp
mov
mov
or
jns
into
popf
inc
adc
std
mov
add
or
mov
sub
out
adc
or
cmp
and
scas
sbb
add
aaa
aas
aas
or
rcll
std
ret
add
sbb
cld
jno
arpl
xor
insl
dec
jns
mov
leave
mulb
mov
mov
fwait
mov
inc
mov
arpl
mov
int
jmp
mov
jge
jno
adcb
mov
inc
dec
push
imul
adc
inc
mov
push
sbb
repz
or
jl
inc
and
int
outsl
fiaddl
mov
out
mov
in
mull
movsl
sbb
sbb
imul
jns
and
pop
jo
sbb
in
jne
lods
mov
mov
fnstsw
pusha
andb
jno
insb
sbb
jp
xchg
out
lods
ja
ss
fwait
jle
loopne
test
or
mov
xchg
jmp
inc
fadd
push
ljmp
mov
jge
pop
out
pop
idivb
or
or
lret
mov
out
mov
loop
dec
cmp
out
scas
or
fmull
test
arpl
inc
fdivrp
add
dec
arpl
adcb
jp
cmp
inc
inc
or
sbb
dec
jae
aam
jae
and
sbb
adc
arpl
xchg
in
imul
jnp
sub
movsl
xor
icebp
push
mov
sub
push
stos
mov
jns
mov
in
subl
sarl
pop
insb
or
out
mov
mov
adcb
lret
outsb
xlat
mov
out
push
gs
in
cmp
in
scas
jae
loopne
jmp
xor
test
xor
mov
notb
xchg
mov
mov
pop
inc
adc
aas
es
les
notl
mov
mulb
jmp
jo
cmp
out
pop
leave
out
xor
gs
sub
repnz
out
pop
jno
je
insl
mov
sub
loop
stc
cmp
xor
hlt
shll
stos
jbe
flds
arpl
push
mov
movsb
pop
je
pop
pop
insl
or
lcall
lods
push
ret
aad
clc
int3
loop
lds
addr16
jns
jns
push
call
cwtl
push
sahf
sub
inc
mov
fiaddl
pushf
clc
push
ds
cmp
addl
fldt
mov
das
out
inc
mov
jle
jo
shrd
dec
pop
cli
aad
int
jns
mov
jnp
lods
add
add
adc
in
imul
mov
fisttpll
and
mov
sub
jle
sbb
or
mov
int3
jo
call
sub
out
mov
and
das
mov
test
roll
xor
dec
std
lock
xchg
add
mov
movsl
cwtl
loop
mov
mov
fnsave
cmp
ret
in
fs
call
inc
inc
cltd
mov
in
setge
loope
out
outsl
mov
dec
icebp
mov
and
les
inc
sub
leave
fbstp
mov
pusha
jle
cmpsb
pop
pop
or
mov
test
mov
mov
jl
scas
movsl
xchg
or
mov
dec
pushf
loopne
push
mov
outsb
test
pusha
mov
outsb
js
enter
pop
rclb
cmc
pop
fldcw
or
repnz
inc
js
fwait
and
mov
adc
ret
pop
cmp
das
and
xor
loopne
iret
aam
fadds
jecxz
inc
jge
es
lds
outsl
loope
es
int3
xchg
into
fistpl
lahf
popa
dec
mov
js
inc
mov
and
daa
push
lock
lea
cmpsb
les
jmp
cwtl
or
cld
xchg
jno
or
mov
push
ret
in
pop
inc
adc
loope
mov
and
in
pop
push
test
ds
inc
inc
aam
xor
fs
pop
mov
lock
das
xor
cltd
lahf
xor
imulb
or
testl
xchg
adc
sub
cwtl
inc
cmp
sub
je
pshufw
inc
fsubr
mov
imul
cmp
stos
ffree
insl
ss
vpcmpgtb
int3
arpl
dec
frstor
or
push
adc
xchg
pop
into
xorb
pop
jp
in
jge
or
and
jecxz
aas
cmovp
sub
js
out
mov
out
fld
negb
adc
jg
and
stos
cmpsb
inc
pop
out
int3
loopne
repnz
jmp
cmpsb
popf
ds
or
ret
call
cs
or
sarl
scas
jle
and
add
mov
xor
xchg
aam
int3
xchg
xor
outsl
repz
nop
pop
rcll
aas
mov
neg
aaa
adc
push
lahf
jbe
loop
jae
mov
lock
cmpl
aam
or
fidivrl
sahf
icebp
rclb
or
lods
sub
mov
sahf
push
adc
xchg
or
xchg
push
fwait
cmpsb
ja
gs
mov
lods
inc
stos
pop
fdivrl
loop
aad
mov
mov
call
xor
sbb
cmp
xor
xor
push
inc
fcoml
pop
push
imul
mov
push
roll
and
push
pop
pop
sub
xchg
ror
rorb
xor
repnz
push
insl
sub
push
mov
and
iret
jo
xor
iret
and
push
out
cmp
push
jge
adc
ds
add
pop
daa
pop
xchg
call
pop
roll
xchg
shl
or
mov
outsb
ja
andb
jae
jno
mov
xor
push
call
mov
test
mov
sti
hlt
shl
jb
ja
mov
cmp
inc
jmp
lock
or
aas
xor
push
cmpl
outsl
arpl
add
add
cmp
pop
push
inc
cmpsb
xchg
insb
fnstenv
push
aaa
xchg
std
fsubr
inc
leave
in
out
push
leave
cwtl
lods
push
cmpsl
push
xor
mov
push
sub
int3
and
out
inc
cli
leave
jns
adc
cs
adc
clc
sarl
and
stos
mov
aam
jne
into
lock
bnd
push
add
cmp
adc
idiv
loopne
fnstenv
push
xor
jns
es
adc
cmc
in
cmp
test
test
push
adc
sbb
int
fcompl
ljmp
test
sbb
mov
mov
cltd
jnp
or
pop
and
in
aas
out
lods
in
rorb
or
mov
dec
cmpsb
test
stos
mov
adc
sub
fs
gs
icebp
stos
movsb
aam
sub
mov
mov
jbe
sbb
mov
adc
fmull
adc
hlt
mov
jg
jmp
sbb
mov
lahf
cld
sbb
sbb
sub
mov
inc
jge
popa
repz
inc
add
jne
dec
and
out
shll
or
movsl
fsts
jns
mov
push
insb
mov
inc
and
or
inc
inc
insb
in
dec
jg
sahf
adc
mov
mov
ja
cmc
pop
call
test
mov
sub
adc
adc
sbb
fstpt
cmp
push
lret
xchg
filds
adc
or
mov
jne
call
loope
cwtl
push
ficompl
clc
dec
dec
add
mov
fildll
test
data16
stos
out
int3
das
in
jge
jae
and
sub
adc
sub
pop
sub
cmp
mov
push
sub
out
mov
adc
mov
sahf
inc
mov
push
jmp
lret
add
adcb
pop
movl
aas
fs
loopne
mov
and
mov
push
push
addl
loop
in
fstpt
in
insb
mov
pop
push
mov
inc
inc
add
fisubrs
inc
stos
push
outsl
jg
mov
xchg
sub
xchg
ret
inc
pop
pop
mov
jle
adc
jo
add
push
push
mov
js
lahf
stos
ja
sub
jge
cwtl
cmp
xor
out
das
ret
int3
test
inc
rol
ljmp
rcrb
add
jnp
stos
jecxz
ja
cmpsb
mov
in
icebp
lods
pushf
mov
scas
dec
imul
jne
jnp
jl
divl
xchg
mov
cmp
psubusb
and
fisttps
push
std
push
test
add
fwait
sub
das
mov
mov
pushf
das
add
lea
lds
mov
lahf
mov
rcrl
cmp
or
inc
int
js
xchg
lret
in
out
sub
gs
jae
int
cmc
std
imull
fldcw
or
sbb
out
pop
cwtl
or
jge
out
out
jae
in
ds
ficoml
pop
xor
insb
dec
je
dec
cmpl
out
xor
jno
cmp
or
les
out
movsl
sahf
stos
xchg
cmp
jge
mov
xchg
ss
inc
mov
push
lock
dec
ss
xor
call
or
lds
fdivrp
add
sbb
sti
mov
es
adc
xor
inc
test
push
inc
fisubrl
stos
fsubs
push
add
inc
push
xor
cmc
gs
jp
inc
adcl
sbb
jge
or
movsb
push
or
fucomp
adc
sub
rdmsr
cli
cwtl
push
notl
sub
or
add
sub
xor
push
movsb
cmp
subb
xchg
or
cmpb
cwtl
repz
jae
testb
mov
repz
sub
imul
loope
fs
push
test
pop
jbe
leave
inc
or
push
or
cmp
pop
push
sti
imul
scas
mov
fiadds
loop
inc
cltd
inc
movl
sbb
iret
or
shl
xchg
es
dec
and
fidivl
jb
push
dec
movsl
imul
add
add
lds
pop
lret
sbb
add
cmpsb
ja
decl
inc
mov
jp
or
cmp
sub
cmp
push
std
mov
call
loope
pop
lret
push
sbb
lods
bound
dec
xchg
xchg
in
jbe
rclb
icebp
rcll
pop
cli
jmp
shrl
and
fcompl
ret
push
xchg
pop
or
cltd
mov
cmpsb
dec
stos
sbb
sarb
cmpl
shl
or
inc
repz
cmc
push
mov
add
inc
jp
or
into
cs
xchg
xchg
xchg
cmp
xchg
mov
lds
orl
ret
aas
loopne
mov
dec
add
sub
mov
lds
adc
test
and
xor
minps
add
jbe
out
pop
mov
dec
dec
fstps
and
test
inc
or
out
adc
pop
cmp
add
js
iret
mov
nop
or
fmulp
in
add
adc
cmp
and
or
clc
mov
xchg
or
test
shl
popf
clc
push
je
add
push
mov
lret
jge
icebp
imul
pushf
xchg
mov
in
sarb
xlat
xor
xchg
pop
ret
mov
lahf
ret
out
int3
mov
xor
push
shlb
cmpsl
and
mov
test
push
inc
mov
inc
int
lret
aaa
push
out
xor
jns
shlb
jno
jbe
inc
addr16
sahf
xchg
into
imul
hlt
fistps
push
lret
dec
popf
jno
pop
scas
test
or
bndstx
mov
add
clc
sub
lcall
cmp
sahf
push
idiv
jno
ja
popa
int
test
sti
lock
jecxz
hlt
aad
dec
mov
divl
push
loope
out
xor
inc
aam
lods
sbb
ljmp
dec
lldt
in
data16
movsb
and
jecxz
mov
das
std
dec
scas
xchg
jge
jne
push
sbb
jbe
out
lds
stos
aad
stc
imul
jae
into
sub
inc
xchg
mov
imul
mov
cltd
xchg
jbe
cmp
in
sbb
cmc
pop
hlt
out
fsub
adc
mov
xor
rcrb
cwtl
or
cmp
ret
sub
insb
mov
in
mov
gs
jg
xor
and
imul
jnp
fsubr
push
mov
adc
push
rcr
popf
insl
sub
pop
jg
std
inc
pop
add
addr16
and
hlt
push
divl
mov
push
xchg
lea
movsl
inc
mov
or
sti
mov
xchg
cmpsl
scas
dec
pop
mov
orl
mov
pop
jecxz
nop
xor
lea
pop
jl
pop
cmp
insl
fwait
cmc
int3
adc
inc
jp
dec
push
mov
icebp
fwait
mov
into
and
cmc
mov
cmp
sbb
ret
insl
fwait
cmc
fdivp
push
lahf
push
pop
roll
mov
jb
mov
lods
push
jo
jae
fnsave
push
jle
pushf
rcll
scas
jnp
push
adc
push
xchg
popa
ret
sbb
sub
push
xchg
pop
push
repnz
test
loope
adc
and
fs
sub
mov
and
dec
sbb
adc
push
inc
adc
adc
leave
xchg
jae
idivl
add
ss
xor
orb
jge
xchg
and
test
and
int
ffree
adc
xor
lahf
aam
add
pop
ret
pop
cmp
push
and
jg
fsubs
mov
cmp
jno
mov
outsl
ret
jbe
rolb
insl
out
sbb
dec
add
adc
lods
push
bound
shll
dec
call
or
adc
aad
rcrb
cmpb
sub
int3
cmc
mov
notb
push
loop
fld
inc
cwtl
sbb
push
in
dec
pop
jbe
mov
lret
mov
adc
ret
cwtl
imul
fwait
mov
dec
daa
adc
mov
fs
add
inc
fadds
jo
mov
sbb
xchg
mov
movsb
fs
lock
mov
filds
in
or
outsb
push
negl
mov
cwtl
push
mov
lods
inc
in
mov
jl
pop
xchg
dec
pusha
andb
or
sub
dec
mov
xor
int
pop
xchg
icebp
push
mov
or
push
and
adc
add
fdecstp
sar
mov
sbb
dec
pop
mov
jne
add
stc
int
test
aas
repnz
insl
dec
push
mov
or
lret
aad
test
sbb
lcall
inc
fildll
and
push
data16
insb
xchg
pusha
addr16
scas
and
add
dec
xchg
je
sti
jp
adc
popf
icebp
ret
test
pushf
cmpsl
pop
sub
enter
bound
loope
lea
sbb
dec
and
insl
jmp
lods
outsl
lea
inc
loopne
lret
jmp
adc
sub
ds
mov
iret
stos
call
xor
xchg
pop
enter
jno
subb
bound
and
aaa
cwtl
sti
mov
mov
jmp
pop
bound
ja
pusha
pusha
jo
sbb
mov
das
stc
mov
daa
mov
cmpsb
and
les
cmp
into
pop
cmp
xchg
repz
and
and
je
std
repz
test
divl
xchg
shl
rcrb
add
movsl
xchg
lret
fs
dec
jmp
rcl
jg
mov
jecxz
daa
pop
pop
dec
loopne
ficomps
jae
mov
mov
int
xchg
pop
lcall
sub
es
aam
cmpsb
mov
das
push
pop
sbb
inc
and
mov
hlt
sahf
or
iret
scas
test
ljmp
inc
xor
loopne
inc
inc
loop
inc
mov
sub
sbb
mov
dec
cmp
popf
jno
adc
sbb
inc
cmpl
xor
mov
sbb
fsubrs
cltd
xchg
lds
jns
sbb
xchg
subl
shlb
fmuls
test
lret
repnz
xchg
je
add
stc
dec
test
in
roll
xchg
or
cmc
lcall
push
aaa
dec
dec
imul
mov
jnp
xchg
xor
aas
mov
inc
xchg
sub
test
xor
mov
js
cs
jnp
in
pop
mov
cmp
or
mov
and
xor
dec
in
fsubrl
pop
mov
cmp
in
xchg
adc
mov
xchg
jge
inc
not
jae
jns
mov
repz
xor
test
shll
ss
sbb
cltd
jle
and
jg
jecxz
pusha
popa
jge
xor
push
add
dec
push
fs
jb
jg
adc
inc
sbb
pop
les
enter
insl
lcall
push
sub
jmp
clc
in
sub
cmc
pop
jb
cwtl
lret
push
cmp
sub
leave
scas
test
shl
push
xchg
xor
dec
add
fsub
sub
mov
lea
cmp
push
jge
int3
inc
imul
jge
int
mov
aas
sub
mov
comiss
icebp
inc
je
sbb
out
sbb
inc
xchg
or
shl
pop
pop
pushf
dec
aam
aas
add
sarb
repz
mov
push
shlb
pop
cmpsb
popf
fs
je
mov
fwait
sbb
pop
leave
push
or
dec
xor
xor
mov
insb
mov
or
cwtl
pop
stc
int3
mov
lret
jge
add
aad
or
xor
adc
mov
shl
lret
loopne
push
lret
outsl
mov
dec
lods
subl
lock
xchg
lea
mov
adc
and
sbb
and
sub
mov
movsl
adc
push
ljmp
fbstp
clc
dec
cs
ss
mov
mov
and
shr
pop
dec
test
hlt
mov
mov
mov
xor
iret
addr16
cmp
in
and
inc
mov
lret
pcmpgtw
cmp
push
sbb
mov
or
fmull
inc
bnd
mov
test
int3
adc
mov
push
je
outsb
fs
sub
adc
push
or
mov
mov
cmpl
add
jne
push
daa
and
adc
inc
lock
mov
cmp
pushl
scas
mov
lcall
dec
cmp
out
iret
stos
adc
adc
stc
cli
lea
push
jns
jmp
in
cli
out
data16
mov
mov
dec
jecxz
mov
out
mov
mov
repnz
fstps
das
jno
loope
sbb
stos
jl
sub
imul
jo
dec
pop
mov
mov
inc
test
mov
sub
std
jge
pop
lods
sub
push
jecxz
cmp
push
add
xorl
mov
cmpsb
xchg
adc
push
aam
add
ret
test
and
xor
adc
and
mov
pushf
es
xchg
push
cmp
aas
icebp
rolb
inc
es
negb
jge
pop
ds
aas
push
sbb
insl
cmp
out
adc
scas
sub
ljmp
ss
pop
push
pop
int
mov
and
loopne
adc
cmp
mov
jp
cwtl
fcoms
loop
jmp
xor
push
mov
add
imul
add
jmp
in
mov
pop
dec
js
loopne
pushf
sub
inc
dec
pop
daa
mov
xchg
dec
aad
adc
fisubs
clc
mov
push
sarb
push
insl
into
out
or
sbb
loop
or
lods
je
dec
dec
adc
cmp
cmp
test
fs
mov
jle
push
push
jmp
xor
inc
add
ficompl
xchg
lret
dec
popa
sub
lods
je
xchg
xchg
cmp
or
adc
test
cmc
retw
fs
cltd
loop
ret
or
sub
xchg
cld
cmpsl
mov
xchg
cmpsb
fisubrs
cmp
adc
jnp
ljmp
cmp
imul
jle
dec
popa
cmp
loopne
popa
cmp
jo
popf
or
mov
sub
xor
dec
cli
add
stc
cmp
movsl
cmp
fs
fwait
and
mov
dec
cmp
adc
shll
in
js
mov
filds
test
int3
outsb
loope
sahf
sbb
sub
nop
nop
sbbb
and
mul
pop
cli
adc
lock
xchg
and
push
add
daa
xchg
push
ja
insl
stos
xchg
jmp
movsb
loope
mov
out
in
stc
mov
push
test
andb
imulb
aaa
das
repnz
stos
je
add
vphaddbq
dec
std
add
inc
negb
test
inc
in
sub
fnstcw
sbb
jb
stos
je
notb
mov
dec
adc
cltd
aam
test
lods
mov
movd
sbb
jae
xchg
incl
jmp
sti
xor
and
xchg
hlt
xor
daa
mov
rcr
add
inc
xor
data16
lret
ficomps
aaa
and
insb
jbe
sar
lea
pop
bound
cltd
rcrl
enter
xchg
mov
divl
add
test
rclb
and
sahf
cmp
and
and
pop
sbb
jecxz
add
cs
pop
and
jmp
inc
and
sahf
jle
scas
mov
not
ja
xchg
and
cmp
push
cmpsb
pop
mov
adc
in
push
pop
iret
sbb
adc
mov
ret
and
rorl
pop
cmp
sti
pop
inc
jo
add
negl
jae
enter
lret
jmp
rorb
add
mov
movsb
addl
pop
jae
mov
inc
cmp
dec
cli
icebp
lret
aas
fsubs
aaa
pop
enter
dec
rcl
sbb
or
sbb
lods
dec
inc
sti
jb
shll
xor
mov
inc
pop
add
fadds
cmpsb
pusha
repz
push
adc
lods
pop
mov
loopne
sbb
sbb
mov
nop
mov
popa
inc
pop
inc
xchg
roll
movsl
inc
push
dec
mov
ja
inc
add
int
lds
cmpsl
notb
cmp
lea
cwtl
jp
cwtl
cli
xor
aam
cmpsb
test
push
mov
pop
pop
shl
jae
lods
aas
loop
ja
lea
xchg
arpl
cmp
jecxz
push
icebp
lret
sub
out
jl
je
scas
dec
popf
pop
aas
loopne
pop
xor
std
fisubrs
divb
pop
ljmp
int
ljmp
mov
cwtl
and
add
stc
mov
mov
pop
repnz
es
test
outsb
pop
sub
push
fidivrs
push
decl
ja
nop
mov
jmp
dec
jp
sbb
in
push
sarl
repnz
and
scas
clc
add
frstor
iret
leave
xor
sbb
out
fnstenv
daa
inc
cmp
mov
fwait
je
daa
adc
and
push
sub
fmulp
mov
and
inc
hlt
cmp
fs
jecxz
rcrb
inc
cmp
pop
pop
mov
fiadds
lea
popf
jp
lea
imul
cmp
test
jg
sub
push
jo
arpl
arpl
jae
fwait
sub
orb
ret
or
lret
and
xor
out
sub
fldl
pushf
or
repnz
or
rorl
cwtl
mov
adc
xor
mov
mov
lods
popf
ja
fucom
adc
inc
fwait
lahf
cmp
inc
mov
xlat
je
or
xchg
jp
sub
cmpb
cltd
cmp
dec
fists
inc
je
jp
and
pop
push
cs
rcr
test
pop
xchg
add
xor
pop
inc
or
jbe
jg
add
jo
scas
mov
inc
fsubr
mov
dec
out
jl
icebp
pusha
xchg
pop
xor
xchg
out
jo
xchg
mov
and
lret
and
jbe,pt
mov
jbe
testb
stc
jnp
loop
repz
lock
pop
pop
cmpb
mov
les
loop
jmp
test
push
xor
or
jg
and
icebp
push
sahf
or
repz
lea
inc
dec
insb
add
ficompl
xchg
ljmp
pop
mov
mov
movsl
lret
inc
jno
into
lds
insb
shrb
popa
test
clc
popf
jb
idiv
push
mov
fisttpll
int3
mov
repnz
test
push
hlt
xlat
xor
jb
mov
jne
es
mov
lods
mull
sub
sub
ds
int3
pop
xrelease
or
jbe
xchg
insb
push
pop
mov
jne
fsubrp
insl
jmp
sbb
push
xchg
xchg
imul
insb
mov
dec
pop
fmuls
outsl
dec
and
movsl
and
movsb
aad
sbb
enter
mov
iret
inc
lahf
sbbl
push
push
cld
pop
in
inc
imulb
mov
push
xchg
cli
fistps
inc
adc
aam
sbbl
jb
inc
lds
mov
and
xchg
jo,pt
out
pcmpeqw
pop
mov
pop
push
mov
iret
xor
pushl
bnd
in
ffreep
push
pop
pop
xchg
sbb
and
divl
iret
push
popf
dec
jmp
mov
sub
stos
sbb
imul
scas
ds
cli
ror
js
jno
dec
cmp
xchg
mov
aas
stos
pop
mov
js
push
push
cli
adcl
cmpsl
aad
pop
mov
inc
gs
and
sub
mov
mov
cmp
adcb
js
and
loopne
lods
push
dec
and
stos
push
inc
icebp
xchg
push
in
pop
push
mov
std
andb
mov
je
lock
cld
out
xor
subb
sbb
sub
mov
jae
iret
or
subb
jge
adc
lds
imul
aam
jg
fucompp
stos
pushf
jo
sbb
push
push
stc
adc
and
dec
fcomip
and
hlt
or
jmp
outsl
in
in
inc
aad
popf
rol
pop
ret
jo
call
push
xor
stos
mov
push
lods
lds
out
jns
lret
fdivrl
pop
dec
cli
jbe
xor
mov
adc
mov
sbb
sbb
mov
leave
repnz
fs
adc
pop
sbb
inc
mov
dec
andl
mov
mov
and
and
mov
push
mov
adc
mov
mov
mov
int
cmp
adc
mov
pop
sub
push
das
pop
cmp
sbb
adc
das
lods
cmc
mov
xor
add
arpl
jp
int
imul
fdivrl
mov
dec
or
clc
faddp
movsb
daa
xchg
nop
fstl
add
add
sub
popf
xchg
dec
ja
push
clc
xlat
cmpsb
mov
push
scas
mov
push
in
add
mov
push
aaa
mov
aad
dec
js
shlb
cmp
add
xchg
xchg
jmp
or
adcl
test
or
ret
test
push
push
and
or
lcall
mov
cmp
adcl
jns
in
sbb
xchg
lret
fisubrl
out
test
jecxz
pop
sar
or
mov
push
pop
daa
and
mov
int
call
fldcw
pop
in
outsl
loop
out
jbe
jnp
out
inc
lret
adc
push
inc
fisubrs
jle
in
sbb
call
pop
aaa
lea
inc
addr16
orps
rcrb
pop
jge
dec
inc
mov
sbbl
pop
cmpsl
orl
aam
mov
aam
stos
ficoms
iret
and
pop
insb
jp
cmc
xor
loopne
mov
mov
inc
out
mov
outsb
add
mov
sbb
xchg
sti
test
add
mov
cmp
fsubrl
aas
hlt
inc
xlat
inc
scas
sbbl
sti
mov
mov
mov
mov
adcl
inc
inc
adc
cld
or
pop
pop
out
and
push
xor
add
outsb
pop
mov
adc
loop
inc
aas
les
ljmp
in
lds
sub
inc
cld
test
mov
mov
or
inc
jns
js
pop
pop
clc
les
jns
mov
pusha
push
icebp
adc
dec
push
xchg
inc
jg
scas
mov
mov
mov
mov
lds
push
pop
jge
sub
sbb
into
sbb
ffreep
arpl
in
into
lret
mov
int3
into
je
imul
pop
stos
fistps
push
adc
jo
cmpsl
pushf
inc
or
pusha
sub
ljmp
shl
mov
insb
ret
or
int
fs
xchg
lock
inc
mov
sub
ja
and
lahf
pop
rorl
sahf
fwait
xchg
and
div
add
mov
pop
mov
sub
xchg
jns
pop
scas
push
pop
movsl
aaa
fldenv
fisubl
push
jge
repnz
fwait
mov
mov
out
test
pop
xchg
xor
cs
outsb
dec
cmp
mov
fs
jbe
flds
mov
mov
jo
or
push
mov
adc
pop
fcoml
xchg
mov
cmp
jo
daa
inc
into
scas
pop
mov
push
hlt
jb
in
ljmp
inc
xor
iret
mov
cmp
jle
pop
sub
pushf
mov
push
inc
and
sbb
int3
jge
jb
je
pop
pop
dec
stos
fpatan
fcomp
pop
push
mov
push
xchg
mov
push
and
add
out
and
mov
lahf
out
mov
data16
xor
cltd
jne
pop
adc
int3
and
fidivrl
das
cmp
insl
test
test
in
adc
push
out
cmp
fstpl
enter
fcomps
adc
lahf
push
vmread
sbb
leave
repz
fdivr
dec
jns
popa
ret
mov
or
pushf
or
lret
adc
nop
icebp
out
dec
test
push
and
xchg
jns
or
jp
shlb
add
pop
clc
scas
jmp
mov
shlb
sub
xchg
push
adc
xchg
mov
cmc
pop
out
adc
jecxz
inc
das
negl
add
testl
pop
in
mov
movsb
mov
loopne
xor
mov
xchg
test
nop
mov
mov
scas
leave
sarb
aaa
loop
sub
js
mov
adc
ss
push
or
ss
es
rep
shll
ds
nop
pushf
push
cmpsb
cmp
loopne
add
arpl
hlt
jecxz
fidivrs
aas
jno
cmp
dec
outsl
cmpl
out
xor
pop
pusha
or
mov
mov
or
movsl
cmpsb
nop
or
sub
jbe
data16
xorl
mov
xchg
mov
fimull
inc
jo
inc
ds
je
lods
pop
inc
add
test
cmp
xchg
xchg
jo
lock
test
pop
mov
xor
fcoml
adc
push
ljmp
add
stos
pop
mov
jl
dec
pop
lds
mov
jl
mov
inc
mov
insb
faddl
popa
test
push
xchg
and
je
xlat
pop
aam
std
scas
or
pop
and
fs
xlat
mov
fnsave
or
movsb
inc
adc
push
jecxz
adc
pop
xchg
rorb
in
push
pop
inc
lods
sbb
outsb
jno
lret
lods
add
xor
jno
test
sbb
jno
cmpsl
jne
push
jecxz
arpl
mov
enter
mov
mov
mov
mov
test
into
inc
fmul
mov
inc
cmpsl
adc
sbb
jbe
push
ja
jne
lahf
sub
sub
out
sub
nop
and
stc
sbb
mov
xchg
xchg
cmp
dec
rorl
sarl
loope
cli
and
stc
mov
sbb
ss
push
jb
xor
pop
sahf
popa
mov
mov
sbb
int3
add
scas
mov
xlat
xor
adc
ss
push
and
ret
cmpl
sub
imul
testb
add
pop
or
fwait
push
pop
inc
and
and
mov
mov
rol
test
cmpsl
lods
cmp
decl
fs
shlb
lret
xchg
scas
or
mov
cli
or
cwtl
adc
mov
sbb
pop
ljmp
sub
lock
jbe
mov
or
les
lahf
mov
and
ret
push
jmp
add
addr16
adc
or
inc
jmp
lret
test
ret
add
fsubrl
add
mov
push
adc
and
jmp
push
adc
jge
stos
push
and
ljmp
repz
loop
jmp
pop
inc
movb
and
xchg
dec
add
xchg
loop
inc
mov
push
orl
jne
inc
and
repz
shll
adc
fcomps
clc
jbe
mov
xchg
sti
mov
mov
roll
into
cli
fldenv
push
push
xchg
and
subb
adc
and
dec
outsb
mov
pop
mov
inc
pusha
das
xor
push
add
or
lds
dec
mov
fdivl
mov
pop
sbb
push
jl
mov
jmp
js
stos
orl
lret
aas
icebp
decb
sbb
fmulp
je
out
imul
xlat
mov
test
lds
cmp
addr16
sub
int
lea
cs
push
aad
cmp
xor
add
jp
int3
add
sbb
mov
lods
jnp
mov
std
pop
and
outsb
js
loope
adc
shll
je
shll
mov
mul
jne
ss
dec
push
sbb
into
fldt
lahf
leave
push
testl
int
in
dec
mov
jnp
test
mov
mov
adc
aad
imul
loope
loope
mov
test
sbb
sub
shl
pop
jecxz
imul
cmpsb
ja
aaa
dec
mov
lcall
aam
lds
inc
jg
cmc
sarb
mov
adc
in
fldl
adc
jno
inc
add
cltd
andb
push
push
xor
dec
mov
fisubs
jge
nop
or
mov
ss
adc
and
rcrl
imul
mov
adc
push
cmp
jp
jg
lahf
ret
sbb
dec
xor
loopne
or
fmuls
mov
ljmp
negb
push
mov
pop
add
mov
mov
mov
cltd
enter
cmp
movsb
les
push
jae
adc
sti
rcrl
outsl
fidivl
rolb
sbb
dec
repnz
cli
rorl
sub
test
rol
mov
jno
incb
fisubs
xchg
push
sti
adc
out
xor
in
cmpsb
scas
cmpb
cmp
inc
data16
push
jbe
ljmp
pusha
inc
pop
stc
call
mov
mov
push
cmp
out
xchg
jno
aas
xchg
into
sbb
dec
lods
pop
pusha
fisubs
xchg
add
ror
cs
test
mov
jo
scas
in
mov
testl
stos
xor
pop
sub
mov
frstor
iret
adc
ljmp
jecxz
mulb
jne
test
push
add
test
loop
jl
inc
pop
xor
pop
mov
add
push
push
or
js
roll
fsubp
into
fisttpl
rorl
stos
stos
dec
aam
sbb
pop
dec
pusha
cmpsb
fcomi
shrl
ljmp
hlt
and
test
jno
xchg
add
pop
sbb
pusha
and
repz
popl
test
sti
xlat
std
cmp
xchg
aaa
mov
dec
push
inc
inc
sahf
mov
xor
out
xchg
test
mov
mov
lea
out
push
mov
cli
pop
inc
rclb
clc
popf
jecxz
jb
jecxz
xchg
pop
adc
jae
stos
sub
shlb
pop
fwait
adc
fidivs
popf
pushf
lods
jp
sub
stc
data16
es
pushf
xor
sbb
and
in
xchg
iret
aam
repnz
jae
xor
lock
cli
mov
adc
cs
mov
fldt
push
pop
lock
ljmp
leave
sbb
fcomps
cmp
jae
and
jle
adc
mov
sbbl
push
shlb
mov
sbbb
xor
or
mov
fdivl
xchg
mov
pop
aaa
mov
lcall
add
xchg
dec
scas
testl
adc
ja
xchg
push
jmp
outsb
cmpsl
sub
flds
popa
and
out
stos
fimuls
ss
fwait
inc
mov
outsl
and
arpl
out
lahf
xor
adc
mov
push
sbb
imul
arpl
mov
sbb
sahf
lret
and
jne
xchg
int
arpl
out
push
jns
outsb
mov
enter
mov
push
or
stos
cltd
adc
push
add
mov
inc
cmp
lods
pop
jg
aad
inc
push
cmp
shr
fwait
mov
push
orl
out
sbb
or
aam
jb
lods
incl
jae
mov
test
nop
mov
mov
xchg
mov
inc
sbb
ja
leave
cmc
mov
dec
lcall
cmp
jbe
jmp
scas
bnd
movsl
jp
filds
in
stos
enter
inc
stc
xchg
out
and
int3
jns
subb
dec
mov
repnz
cmp
mov
lcall
mov
int
pop
jae
sbb
stc
loope
jecxz
cwtl
imul
in
jg
mov
movsb
jbe
rorb
pop
jb
adc
xchg
cmp
mov
pop
adc
bound
jmp
xchg
mov
outsl
and
and
in
das
in
loope
push
test
mov
aad
push
cmc
imul
ja
push
test
les
lahf
or
xor
test
xchg
scas
int3
mov
pop
out
xor
imul
push
dec
push
xor
inc
lcall
mov
aad
adcb
dec
aas
mov
adc
aad
sbb
or
inc
arpl
lret
sub
mov
rol
js
pop
mov
call
mov
jp
pop
add
cmp
and
ror
adc
jb
lods
mov
imul
xor
subl
add
sub
je
ret
push
movsb
inc
negl
rcll
mov
add
or
pop
insl
jp
movsb
xchg
arpl
mov
test
mov
out
cmp
es
outsb
sub
fdivl
cmp
insl
lret
repnz
push
jg
dec
push
push
xchg
pop
xchg
inc
push
rcrb
insl
repnz
out
pop
add
mov
mov
jecxz
cltd
mov
pop
testl
jl
pop
pop
mov
mov
call
cmc
stos
out
add
outsl
int3
inc
adc
std
sub
mov
fidivrl
cmpb
dec
or
insl
adc
and
pop
les
or
lret
sbb
pop
jnp
inc
mov
ljmp
or
mov
mov
mov
ret
and
lea
stos
int
out
push
in
sbb
out
dec
jnp
leave
ljmp
imul
mov
jge
sti
addr16
nop
aas
fistps
sar
mov
mov
mov
popa
lods
add
xor
mov
pop
mov
in
add
or
dec
and
testb
push
jp
xor
repz
in
jp
cld
sub
stos
xchg
mov
mov
push
and
int3
cli
mov
mov
pop
stc
jnp
xchg
cwtl
mov
es
les
jb
mov
mov
movsl
pop
insl
xor
test
xor
pop
dec
insl
mov
pop
and
xchg
and
add
scas
adc
std
rclb
pop
ljmp
inc
inc
fbstp
sub
jno
in
jecxz
adc
rcrl
bound
inc
rcr
call
aad
in
mov
sub
adc
into
lea
push
pusha
out
jmp
jo
add
xchg
dec
or
adc
ja
stos
push
aad
shll
pop
inc
jns
bound
xchg
fistl
fildl
dec
pop
repz
popa
lods
sbb
repz
lcall
dec
and
popa
dec
ja
push
add
in
mov
jno
jl
or
xor
enter
imul
sbb
jno
ret
repz
jmp
mov
mov
jb
fmuls
xchg
dec
jmp
adc
daa
push
sub
mov
cmpl
cmp
in
ljmp
pusha
mov
push
mov
xchg
bound
mov
lret
rep
mov
imul
outsb
into
sbb
mov
mov
dec
pusha
fwait
insl
adc
sub
js
clc
cmp
pop
xchg
push
daa
lds
sbb
bnd
xor
imul
scas
cli
xor
jns
mov
mov
pop
aaa
jp
cmpsb
out
mov
ja
mov
lret
fwait
add
xor
icebp
pop
jne
pop
mov
add
into
in
int3
sbbl
or
movsl
nop
add
test
jns
roll
arpl
mov
lahf
aaa
pop
das
jae
rorl
shl
jl
test
and
pop
cmpb
xchg
jbe
mov
lods
enter
mov
shrb
sbb
lds
roll
subb
mov
mov
cmp
sbb
stos
gs
popa
andl
insb
adc
mov
outsb
jo
xchg
repnz
add
test
repnz
icebp
movzbl
push
xlat
dec
cmpsl
mov
jb
xchg
lret
imul
xchg
adc
rcll
nop
dec
jbe
imulb
add
push
push
xor
aaa
sub
es
scas
jl
mov
push
adc
fsubrs
outsl
lcall
mov
repnz
cmp
movsb
mov
aad
adc
mov
pop
or
push
cli
data16
pop
lods
push
or
in
xor
push
cli
cs
or
xor
or
fs
xchg
add
rcll
push
inc
add
jp
bound
xchg
cmc
mov
sub
imul
and
jne
pop
xlat
xlat
push
cmp
aas
pushf
pop
and
in
push
lock
outsl
psrlq
push
aaa
or
fwait
cmc
test
mov
mov
rol
add
mov
insl
mov
or
and
imul
jne
push
jbe
xor
repnz
repnz
sub
mov
negl
sahf
fsts
mov
sub
pop
fs
insl
or
imul
cmp
mov
sub
mov
jbe
sub
add
scas
cld
fldl
je
xor
xchg
mov
cmc
rcrb
push
mov
pop
xor
andl
jecxz
pop
push
and
shll
adc
dec
out
enter
mov
mov
mov
popa
mov
movsl
pop
sbb
dec
fs
and
or
cwtl
rcrb
enter
arpl
xchg
inc
lock
xchg
fdivs
mov
lret
xchg
call
add
xor
stc
pusha
jmp
lret
cmp
in
in
cld
cmp
push
push
daa
out
pop
push
and
cltd
ret
idivb
xchg
sbb
stc
sarb
jp
mov
aad
and
and
dec
inc
ret
aas
aas
inc
scas
push
mov
xor
aam
push
inc
or
mov
add
cld
pop
stc
xchg
shll
sbb
cltd
in
outsb
sahf
dec
jae
rorb
arpl
loop
xorl
sbb
mov
cmpsl
data16
mov
cmp
pop
les
xor
lods
mov
fwait
es
adc
aas
aas
mov
mov
testb
iret
imulb
aam
inc
scas
push
jmp
outsb
test
mov
shr
out
sbbb
mov
cmp
jg
sbb
sti
and
sbb
lods
pusha
cmpl
insl
and
pop
ja
es
mov
push
rorl
out
push
cmpsb
das
fimull
fnstcw
mov
test
imul
popa
dec
cli
lods
pop
xchg
mov
orb
push
mov
add
xorb
shll
sbb
into
xlat
loop
push
fildl
jo
or
movsl
imul
xchg
lea
adcl
pop
jl
jb
sbb
lcall
xchg
test
es
mov
xor
gs
out
mov
call
pop
mov
pop
jmp
add
dec
or
sbb
loopne
xor
xchg
int
dec
scas
aam
ret
mov
mov
and
inc
push
mov
cmovo
insl
out
mov
mov
stos
fisubl
xor
dec
xor
sarb
ret
push
pop
sbb
movsl
loopne
out
mov
cmpsb
jnp
jae
lahf
xchg
push
pop
hlt
adc
mov
add
popf
xchg
lods
inc
lcall
aam
cmp
inc
dec
neg
sbb
mov
xchg
les
mov
fs
push
pop
mov
push
iret
push
loopne
pop
jle
fwait
test
mov
ret
jb
add
pusha
push
out
add
mov
adc
lds
mov
sub
sub
mov
mov
mov
or
jmp
jge
pop
or
ja
aad
push
adc
mov
jle
lea
push
and
cs
mov
test
inc
dec
call
in
xor
sarb
sbb
int3
xlat
mov
std
aas
jle
ja
out
cltd
hlt
dec
cmp
xor
or
xchg
sub
sub
cmovno
arpl
loop
stc
push
fdivrp
jp
jmp
mov
xchg
pop
adc
sahf
lock
mov
test
shrl
sbbb
xchg
mov
mov
dec
push
roll
add
sbb
and
push
lds
imul
adc
in
xor
test
push
movsb
sbb
out
xchg
jns
cmp
imul
mov
inc
cmp
push
jo
into
push
in
shll
cmpsb
adc
adc
xor
dec
sahf
xchg
cmp
notb
ror
stc
test
mov
dec
ret
cs
xlat
mov
into
or
fdivl
push
sbb
jb
xchg
scas
rol
mov
popf
aaa
pop
mov
xor
pusha
mov
sbb
sub
jmp
mov
into
sbb
mov
inc
dec
jne
xor
dec
jns
jnp
dec
test
mov
sbb
and
and
adc
fsubl
jns
mov
jnp
adc
or
push
mov
push
push
jecxz
add
data16
addr16
pop
jl
cmc
fwait
mov
iret
xchg
andb
cmpsb
xchg
icebp
sub
mov
mov
test
adcb
shr
lods
fbstp
add
into
popf
fdivl
cltd
add
jo
and
mov
cwtl
lret
push
push
push
fwait
mov
inc
and
inc
adc
rcll
inc
push
mov
fsubl
mov
call
xchg
icebp
scas
fs
repz
testb
sti
fsubrs
insl
ret
cmpsb
xchg
jmp
xchg
xorb
sub
add
dec
test
fprem
lret
sbb
shll
xchg
sub
mov
pop
loop
sti
daa
or
int
in
pop
pop
das
mov
imul
stos
jb
pop
push
pop
ljmp
std
js
test
es
mov
rorl
stc
xchg
clc
xchg
or
adc
inc
aad
ja
je
aad
je
push
mov
inc
inc
adc
and
das
lds
lds
mov
jno
sbb
repnz
daa
and
dec
lret
jg
jp
sbb
dec
jnp
sbb
loope
ret
fwait
out
je
inc
jle
inc
pop
sarb
stos
popf
mov
jmp
adc
adc
jne
add
push
fimuls
and
sbb
arpl
xor
out
jno
adc
incl
aad
pop
std
hlt
pop
fidivrl
pop
cmp
aad
mov
gs
jnp
cmp
jmp
cmp
jns
mov
ret
movsb
in
insl
dec
ljmp
pop
test
sub
push
sbb
mov
in
and
push
icebp
mov
push
stos
pop
and
shr
mov
aaa
jmp
sbb
out
mov
inc
clc
mov
cmc
fcoml
mov
daa
xchg
pop
js
repz
pop
or
mov
push
lret
shl
clc
xchg
cmp
jnp
test
fldenv
jns
pop
or
iret
cmp
fwait
sbb
pop
pop
mov
mov
daa
or
mov
cwtl
push
sub
xchg
mov
push
clc
jae,pt
and
mov
pop
repnz
test
push
cli
nop
push
scas
lret
ret
or
inc
mov
data16
mov
mov
fwait
adc
dec
mov
cmpb
jns
push
ficompl
icebp
adc
xchg
sti
xor
xlat
dec
sbb
lahf
inc
sbb
mov
adcb
jl
cmp
inc
jp
push
lea
call
jno
popa
stos
mov
cmc
mov
frstor
mov
or
scas
jae
dec
xor
stos
adc
sub
cld
pop
cwtl
inc
popa
dec
dec
push
inc
in
xchg
inc
add
add
outsb
mov
inc
mov
mov
scas
bound
int3
add
shll
lret
jnp
push
cmp
xchg
insl
pop
xchg
cmpsb
dec
inc
and
pusha
jnp
jle
addr16
and
or
xor
lods
popa
icebp
adcb
sbb
mov
clc
dec
lcall
jns
data16
mov
mov
mov
jmp
add
mov
std
add
push
bound
gs
pushf
stc
pop
lret
or
push
push
or
test
test
mov
inc
std
out
out
pop
subb
xchg
int3
add
aad
and
mov
xchg
test
movsl
inc
jle
adc
xchg
dec
mov
sar
lock
int3
mov
adc
push
sub
aad
or
sti
mov
push
inc
scas
xchg
outsb
jae
jae
mov
jb
adc
aas
or
ret
int3
scas
in
sbb
sbb
jae
mov
dec
loope
xlat
in
ss
imul
sarb
shlb
in
les
and
and
xchg
js
inc
loope
mov
cmc
ret
push
cli
xchg
xchg
sub
aad
inc
lock
mov
mov
icebp
xchg
hlt
jecxz
ja
iret
xor
xchg
jae
pop
addr16
mov
negl
or
cmp
sbb
mov
xchg
xor
push
or
xchg
fdiv
sub
mov
ret
or
icebp
in
xchg
repz
and
ret
and
jle
cmp
aas
aas
adcb
enter
xchg
test
lods
mov
jp
aam
dec
mov
mov
push
jne
fsts
jb
outsl
mov
sbbb
test
lds
sbbb
jecxz
mov
xchg
xchg
mov
loope
in
pop
out
dec
subw
mov
adc
cmc
xor
push
jge
xor
inc
sub
mov
ret
xor
mov
cli
fistps
stc
sub
aam
bound
jle
out
fists
arpl
mov
cmp
cwtl
sub
jmp
dec
mov
jle
dec
pop
xor
sbb
out
push
out
std
pop
mov
jge
inc
add
and
dec
jecxz
xchg
shl
xchg
testl
mov
loopw
out
inc
push
fwait
jl
test
call
push
lcall
mov
add
out
fs
sahf
jp
out
iret
dec
aaa
cmp
nop
xchg
clc
sarl
addr16
xor
sub
xor
xchg
cs
aaa
nop
sahf
dec
mov
out
fs
or
xlat
mov
aad
lret
or
push
out
push
xor
scas
and
loopne
imul
les
xchg
inc
push
pop
into
fs
outsb
xchg
sbb
and
std
outsl
fnstsw
mov
dec
jae
xchg
mov
mov
out
pop
mov
pushf
es
int3
fdivrl
pushf
popf
test
loop
lahf
inc
jbe
sbb
es
rolb
cmp
jo
mov
mov
std
addb
out
out
inc
mov
out
hlt
and
jmp
sbb
out
cmpsl
in
mov
sub
jo
push
in
pushf
in
pop
lret
mov
push
mov
sbb
xchg
push
add
lea
es
mov
repz
repz
cld
ret
jae
jg
int
cmp
mov
fistl
xor
push
pop
test
fsts
arpl
stc
aaa
inc
mov
test
imul
add
push
push
cmp
or
xor
insl
mov
lds
pop
xlat
xchg
mov
aad
inc
inc
dec
xlat
adc
pcmpeqw
movl
pop
xor
dec
movsb
sbb
xchg
mov
mov
xchg
rcrb
lods
mov
jge
push
jmp
mov
xor
bound
jmp
fstp
pop
push
in
and
mov
or
dec
lds
iret
dec
shrl
adc
jne
orb
cwtl
jb
out
cld
cmpsl
aam
or
add
das
cmc
je
jmp
jno
cmp
inc
push
or
fstl
jmp
pop
js
xor
adc
out
jmp
add
and
xchg
jnp
fldt
shrl
push
and
jmp
xor
push
sub
or
adc
xchg
adcl
inc
push
decl
data16
pop
cli
out
loop
xor
fimuls
mov
push
fdivs
ss
push
in
daa
sti
sahf
sbb
jne
mov
popa
cmp
sub
rclb
addr16
or
pop
sub
or
xchg
xor
push
mov
sahf
cmc
les
dec
mov
cmc
es
sbb
insb
jbe
inc
mov
aam
outsl
test
repnz
shlb
jne
pop
or
addr16
loope
and
dec
dec
ret
mov
sub
mov
outsl
repz
xor
test
or
por
lret
lea
pusha
popa
jb
jne
in
in
sti
mov
push
mov
mov
test
dec
andl
repz
push
jle
sar
hlt
cmp
adc
xchg
or
push
or
movsl
push
or
inc
push
je
cld
push
mov
push
lds
fcompl
lds
push
mov
aam
jnp
loopne
in
ficoms
add
subb
inc
adc
fisubl
pop
jmp
jne
loope
xchg
cwtl
cmp
repnz
push
test
insb
daa
lahf
dec
dec
sahf
mov
xor
or
repz
mov
ret
pop
dec
mov
push
mov
into
jno
fs
in
ret
or
xchg
cmpsb
gs
push
or
jle
loop
push
je
mov
cmc
imul
fimull
or
lea
xchg
lret
or
test
std
stc
jae
adc
jp
out
cmp
popa
movsl
push
fidivrl
mov
fbstp
xchg
lea
jbe
jns
lods
jmp
ret
add
or
sub
loopne
sbb
xchg
add
mov
loop
in
adc
sub
or
loop
sbb
lods
in
push
mov
adc
inc
mov
inc
jecxz
xchg
pop
in
stos
int
or
stos
sbb
cmp
pushw
dec
pop
xchg
jp
push
xchg
aas
mov
or
pop
lcall
add
sub
and
push
outsl
leave
jle
roll
je
rol
ret
je
repnz
or
arpl
pop
sbb
lret
rcr
jl
sbbl
sub
or
loope
stos
mov
popa
adc
push
lret
mov
mov
pop
jecxz
mov
xchg
cld
cld
ror
cli
test
std
repnz
inc
scas
jp
xchg
call
adc
mov
ret
in
adc
mov
add
shlb
test
int
addb
mov
sbb
addr16
pusha
sahf
scas
loopne
xor
lcall
dec
test
js
fnstsw
sub
cmpsb
leave
inc
lea
popa
jg
int
sbb
loope
jecxz
lods
sub
aaa
popf
xchg
sbb
aaa
mov
enter
imul
pop
loopne
fcmovnbe
out
and
jbe
insb
mov
add
and
nop
or
ficoml
inc
daa
mov
test
and
push
lods
push
xchg
cli
and
mov
adc
xor
in
fldl
lret
xor
jno
xor
xor
clc
xchg
dec
insl
ret
aam
and
xchg
insb
les
lea
data16
mov
mov
sub
pop
je
cmp
aaa
scas
das
fiadds
dec
ret
mov
adcl
adc
pop
rol
dec
mov
pop
inc
mov
sub
fsubr
arpl
int3
fdiv
cli
popf
xor
test
push
js
pusha
push
arpl
ret
gs
js
pop
adc
lock
mov
cltd
cmp
jae
add
iret
dec
add
or
xchg
incl
xchg
lret
and
push
iret
dec
jge
xor
mov
insb
scas
fs
adc
dec
mov
cmp
ja
in
fbstp
cmpsl
mov
test
ja
inc
out
adcl
orb
add
into
xchg
fstl
mov
add
mov
lcall
stc
cmp
sub
adc
sahf
sub
sub
inc
outsl
push
popa
cmp
sahf
add
cltd
or
mov
inc
lahf
inc
jno
pop
icebp
push
daa
or
in
sbb
xchg
dec
mov
pop
add
aam
xor
rcll
test
fsubrl
mov
add
hlt
loope
arpl
cmp
shll
xchg
xchg
fstps
incb
mov
sub
inc
sub
cmc
in
sbb
and
in
movsb
and
mov
fldl
jne
adc
stos
imul
jae
scas
lea
lods
in
arpl
dec
sub
lods
jb
fnsave
mov
and
push
aas
sub
gs
fldl
and
fstpt
sbb
js
rcl
insb
pop
cwtl
jbe
jg
xchg
dec
push
movsb
and
cmp
scas
inc
loop
adc
mov
loopne
and
out
pop
je
or
or
jb
jno
add
into
imul
in
into
cmp
cs
or
xchg
aad
push
inc
dec
lret
xor
inc
or
add
pusha
push
fcmovnbe
add
movsb
roll
mov
mov
addl
xchg
call
fcom
popf
negl
xor
mov
rorb
std
cmpsb
clc
xor
dec
int
test
shrb
jle
cmp
inc
psubsw
jg
je
mov
outsb
pop
popl
cwtl
or
shlb
push
movsl
or
jg
aam
or
daa
adc
das
pushf
pop
xorb
push
aam
cmp
sub
pop
imul
int3
dec
or
ret
out
fidivl
loop
dec
cltd
addl
or
jb
and
and
mov
jnp
cld
insl
cmp
add
xor
mov
pop
push
cmp
ret
aaa
out
icebp
jmp
mov
mov
add
sbb
jmp
mov
push
hlt
into
and
adc
adc
dec
xchg
iret
sbb
mov
iret
xor
mov
cmpsl
mulb
in
xchg
adc
setp
xchg
stos
ja
inc
xchg
pop
icebp
clc
pop
inc
pop
mov
push
mov
stos
mov
ret
xchg
lret
mov
call
inc
inc
adc
insl
les
add
push
daa
sub
int3
adc
lcall
loop
and
sub
int3
inc
mov
and
iret
lock
lock
mov
shl
outsb
add
sbbb
sub
inc
icebp
and
shll
aaa
mov
cmpsb
js
cmpsb
xchg
mov
ja
jl
in
sub
inc
clc
pop
or
xor
ds
mov
mov
lahf
testl
and
mov
xchg
xchg
lods
push
neg
faddl
dec
cli
into
fnstsw
dec
iret
and
flds
movsl
jge
std
or
pop
xor
testb
pop
mov
es
adc
in
push
lea
mov
aaa
xor
fwait
and
xor
pop
mov
adc
into
loopne
sub
nop
out
pop
jne
mov
pop
push
sbb
sub
add
or
pop
mov
sbb
mov
ds
gs
xor
push
iret
imul
sub
les
adc
aaa
in
pop
ret
dec
stos
inc
data16
loope
loop
push
xchg
out
sub
xchg
out
movsl
xor
andl
xor
adc
sub
push
daa
xor
xchg
das
fbld
in
jb
cmp
sub
fimuls
ss
push
or
mov
shrl
inc
lea
jp
xchg
outsl
add
fmul
mov
dec
inc
xchg
lods
in
stos
mov
push
push
mov
push
adc
pop
mov
mov
hlt
cmc
mov
fldcw
xchg
addb
leave
rolb
es
inc
jp
icebp
aad
xor
in
les
out
inc
cmp
xchg
pop
int
cmp
sbb
xor
mov
mov
xor
in
adc
push
push
test
add
nop
outsb
shlb
push
data16
bound
jo
mov
lock
xor
inc
add
sbb
popa
dec
and
dec
xchg
fwait
jne
adc
jmp
mov
inc
andl
add
or
adc
jl
fistl
inc
icebp
je
daa
mov
adc
gs
rclb
or
or
mov
xor
mov
add
jne
cmpl
inc
push
ljmp
push
pop
cltd
stos
repz
xor
xchg
cmp
loopne
pop
dec
movsl
and
push
pop
shlb
loopne
scas
push
pop
bound
fwait
dec
xchg
and
insb
stos
dec
sub
cmp
popf
incb
mul
lods
cmp
fldt
jle
add
js
pushf
jno
inc
jns
jo
fwait
sbb
pop
in
testb
movsl
xchg
inc
mov
nop
mov
imul
nop
sbb
mov
mov
loop
dec
daa
daa
subl
adc
shll
test
xchg
cmpsb
mov
pop
lahf
shr
add
fisubl
ljmp
or
mov
aad
or
dec
mov
mov
xor
adc
cmp
mov
dec
xorb
nop
test
movsb
xor
test
and
sbb
mov
nop
mov
cli
inc
testl
sbb
mov
push
scas
dec
call
push
pop
add
jbe
jg
pushfw
sbb
mov
dec
jbe
xchg
divl
inc
xor
pushf
rolb
pop
sub
mov
repnz
sbb
adc
lea
mov
cltd
cmp
addl
inc
push
sub
insb
mov
rcrl
sub
aad
js
pop
lock
mov
lods
jne
inc
lods
jo
movsl
xchg
sysenter
jne
xlat
arpl
push
mov
push
notl
dec
dec
lcall
enter
cmp
mov
or
xchg
popa
or
push
inc
les
lcall
and
mov
push
imul
push
call
test
repnz
dec
cmpsb
gs
jb
jo
leave
and
cmp
pop
out
mov
pop
adc
cmc
test
ficoms
movsb
xchg
dec
les
add
pop
add
dec
inc
sahf
movsl
data16
mov
mov
mov
out
jecxz
sahf
or
subl
iret
push
mov
insb
data16
mov
push
es
sbb
arpl
mov
fmul
jmp
roll
push
subb
inc
daa
cld
pusha
loop
je
stos
dec
jnp
imul
sub
daa
repz
sahf
push
add
arpl
inc
out
xchg
and
dec
je
mov
or
mov
push
mov
ljmp
mov
sub
mov
fs
pop
cmp
imul
aad
in
out
pop
rcrl
popa
icebp
aad
test
insl
ds
jg
sub
andb
push
aad
lock
sub
jns
jl
pusha
pop
cli
xor
and
fs
jecxz
fidivrs
clc
mov
and
cmp
data16
sti
adc
jecxz
lret
and
mov
xor
int
gs
les
rorb
fldcw
adc
test
cmp
in
cmp
mov
das
dec
jb
sbb
out
cmpsb
sbbl
ret
scas
aas
rorl
and
gs
cltd
pop
adc
out
add
inc
lcall
mov
clc
movl
outsl
mov
xchg
aam
xchg
fdivr
mov
push
std
lahf
in
sub
or
addr16
sti
test
daa
adc
adc
jg
xor
mov
movsl
dec
sti
sub
movsb
pop
mov
into
dec
jns
xchg
int
nop
and
adc
jne
xchg
ljmp
test
push
es
xor
lock
sub
mov
int
adc
and
cmpsl
subb
push
sbb
popf
xor
or
add
sub
cmpsl
xchg
aad
mov
adc
sbb
enter
inc
and
pop
push
mov
xchg
nop
inc
rcr
or
and
fs
mov
cmp
jmp
ret
or
xlat
mov
or
xor
nop
test
and
jmp
movsl
aad
inc
add
fstl
xchg
and
sbb
addr16
inc
stos
das
add
and
pop
in
jmp
jp
push
pop
das
pop
in
ror
aad
xchg
data16
and
lret
jle
and
cmpsb
roll
lods
nop
mov
cmpsl
fs
xchg
pop
xchg
dec
mov
add
outsl
sub
mov
xchg
xchg
movsl
pushf
cmc
xorb
std
adc
movsl
pop
inc
clc
pop
cmp
cmp
and
cmp
je
push
out
cs
sub
mov
pop
add
subl
out
sub
xor
xchg
jmp
sub
loopne
xchg
gs
cmp
mov
pusha
outsb
jbe
xlat
pop
fsub
or
fimuls
jge
aas
pop
add
vmaskmovdqu
loope
and
mov
jnp
mov
sub
es
or
das
lea
mov
jns
inc
cmpsb
fimull
jae
dec
iret
adc
je
mov
mov
inc
stos
lea
push
mov
je
lcall
push
mov
aad
jl,pt
jae
cmp
dec
jg
and
dec
iret
jnp
push
andb
sub
mov
inc
and
test
rorb
mov
in
scas
or
sbb
fsubl
test
lret
jmp
lods
mov
addps
adc
mov
inc
int
negl
inc
mov
js
data16
mov
lret
jnp
cmp
jae
xor
clc
pop
mov
xchg
inc
and
hlt
jae
daa
inc
mov
pushf
pop
adc
dec
mov
ret
aad
adcl
sahf
fildll
ja
pushf
add
jne
xor
and
cmpsl
fcoms
dec
adc
lods
inc
or
dec
mov
xchg
jns
xchg
sbb
mov
or
out
outsb
mov
mov
or
mov
cmpsb
test
xlat
into
leave
js
mov
fsubp
jae
sub
subb
stos
mov
pusha
dec
adc
fistpl
movsb
xor
inc
cmp
loopne
fldl
fidivs
fiadds
movsb
xchg
cmp
in
mov
jo
push
pop
dec
add
int3
daa
jge
jl
pop
sub
call
std
insb
jmp
sbb
sub
pop
je
mov
add
xor
mov
xchg
rorb
call
je
cmp
add
scas
xor
out
dec
pop
xor
pop
pop
pop
aaa
push
cmc
xor
inc
fdivr
sub
add
cltd
adc
cmpb
rclb
sbb
data16
pop
jo
mov
in
push
mov
mov
insb
xlat
mov
ljmp
js
icebp
call
jne
subl
adc
call
fistpll
mov
aad
xor
jb
xchg
dec
jo
push
data16
in
push
loope
in
cs
loope
push
rolb
int3
stos
cs
dec
subl
cmp
add
call
rclb
cmpsb
mov
orl
lock
cltd
ret
xor
push
jae
adc
adc
mov
adc
shlb
repnz
pop
dec
sti
aaa
sub
in
pop
negb
iret
out
dec
mov
mov
int3
insb
std
loopne
push
jge
mov
adcl
std
push
scas
dec
repnz
shll
push
pop
lret
jmp
jns,pn
xchg
push
pop
ret
imul
aaa
into
dec
insl
jmp
shrl
decb
dec
sbb
add
push
stc
xor
cmpsl
aas
push
inc
xor
inc
imul
iret
jno
outsb
push
jo
scas
xchg
andb
repz
jo
sub
std
scas
add
push
mov
sbb
lock
adc
out
and
jmp
sub
mov
xchg
mov
push
pop
inc
add
in
adc
inc
inc
push
loop
add
int3
cwtl
xor
mov
push
iret
ret
dec
and
adc
cwtl
test
mov
sub
cmp
cmpsl
dec
sbb
testl
and
cmpsb
pop
adc
inc
adc
aad
mov
xor
push
jnp
sub
stc
and
pop
sqrtps
inc
hlt
out
adc
test
cwtl
push
add
stc
and
add
inc
jb
cltd
out
mov
push
popa
daa
pop
push
outsl
enter
lods
das
sub
xor
pop
cmp
neg
es
fcomp
mov
cmp
inc
fimull
add
xchg
cmp
into
loope
sub
mov
cmp
mov
jnp
mov
jg
daa
pop
cli
dec
inc
adc
aad
ror
stc
jb
mov
lcall
les
dec
pop
dec
pop
pop
push
xlat
inc
paddusb
jle
out
test
subl
in
adc
cmc
outsl
orl
mov
dec
sub
fstpl
inc
push
mov
mov
dec
test
js
mov
pop
mov
sbb
pop
das
daa
fimull
test
xor
inc
cwtl
push
push
iret
unpckhps
cmp
xchg
imul
or
daa
das
ljmp
testl
shrb
mov
mov
pop
dec
leave
sbb
adcb
test
outsl
js
cld
data16
pop
cmp
test
pop
mov
dec
rolb
sub
sbb
mov
sub
push
scas
jb
out
sub
xlat
cmp
je
mov
dec
test
dec
shlb
mov
sar
inc
inc
pop
scas
xchg
xor
xor
inc
or
leave
and
ret
dec
in
arpl
push
icebp
ja
sbb
mov
xor
cwtl
sub
push
imul
sbb
sub
aad
mov
adc
mov
insl
jp
stos
addl
inc
mov
xlat
js
or
fnsave
lret
inc
movsb
inc
call
fmull
lds
jp
push
cs
ret
add
arpl
pop
add
mov
add
mov
dec
les
push
repz
xchg
pop
imul
sbb
outsl
push
or
jp
das
orb
xor
and
mov
inc
mov
add
dec
pop
or
ret
aas
lods
xchg
jp
clc
mov
jno
and
jnp
xchg
push
push
push
cmp
cwtl
fidivl
mov
in
shlb
cld
fcomps
rcrl
dec
cwtl
adc
cmc
add
mov
push
dec
adc
push
cmp
shl
movsl
pop
stc
xchg
les
sbb
or
aad
aad
or
jp
negb
pop
dec
inc
in
popf
mov
jecxz
lret
cs
jb
loope
loopne
jecxz
movsl
jmp
sub
push
push
out
out
fs
bound
adc
xchg
xor
jno
push
leave
xlat
fs
cmc
push
test
subl
nop
sub
add
adc
mov
push
bnd
xchg
fwait
sbb
ret
stos
mov
jo
scas
jecxz
in
repz
into
in
iret
and
or
aas
inc
imul
in
mov
mov
push
cmpsl
jnp
xlat
outsl
call
sbb
push
movsb
mov
and
nop
outsb
mov
xor
jbe
add
mov
jne
repz
ror
mov
jae
and
test
mov
int
arpl
sarb
and
jne
xchg
nop
add
sub
out
pop
insl
push
gs
test
cmp
test
xor
mov
mov
push
xor
fsubs
loop
jp
jl
sbb
inc
scas
insl
nop
clc
lret
scas
repz
adc
fildll
or
or
jbe
jo
inc
cmp
sbb
mov
fstpt
movsb
sub
into
jmp
stos
imul
nop
mov
ret
pop
out
pop
pop
sbb
mov
sbb
hlt
inc
es
xor
pushf
mov
push
imul
sbb
xchg
pop
add
inc
sub
fst
test
pushf
pop
testb
scas
inc
mov
insl
cmpsb
out
mov
out
cmpsb
cmp
fstps
rolb
mov
imul
das
or
adc
lahf
inc
push
dec
push
push
nop
adc
or
and
cs
movsl
adc
xor
jmp
dec
mov
mov
fucompp
xchg
test
xor
je
popf
jnp
adc
out
in
imul
cmc
jge
mov
lds
push
inc
push
cmpsb
cmp
divb
das
jb
out
enter
pop
sbb
jno
pop
or
paddb
pop
gs
add
mov
add
mov
jae
adc
or
popf
adcl
cmp
jmp
sbb
inc
xor
adc
mov
and
rcll
clc
lock
popf
psllw
mov
adc
push
sbb
repnz
sbbb
aaa
mov
add
aad
lret
roll
sbb
and
fsubrl
movsb
loope
pop
movsb
cltd
pop
inc
in
cmc
jg
lods
inc
data16
xchg
aam
test
pushl
mov
xchg
sbb
addb
movsb
and
clc
mov
or
cmp
push
out
adc
jl
movsl
or
mov
repz
sub
xchg
fistl
dec
adc
cmp
outsl
int
cmpsl
cmp
mov
mov
pop
xor
loopne
pop
mov
push
cli
xchg
ljmp
sarl
fmull
sub
dec
sti
pop
mov
and
jl
cmp
outsl
in
ss
xlat
shlb
dec
xlat
mov
loop
jnp
jg
fisubrl
jne
std
add
sbb
fidivrs
xor
adc
push
mov
inc
pop
inc
mov
sbb
adc
jle
outsl
fdivl
push
push
sbb
jb
popa
call
fs
rorl
xchg
ss
push
je
mov
cs
fsub
ss
push
int
dec
sbb
outsb
inc
loop
inc
xchg
and
mov
lds
fstps
jp
xor
or
pop
sub
jno
lahf
inc
es
push
pop
cwtl
jp
out
push
xor
dec
mov
divl
test
xchg
or
std
adc
mov
in
inc
sub
xchg
je
push
in
fnstcw
vandps
bound
and
sbb
xchg
scas
test
push
movb
sbb
jecxz
xchg
add
rcrl
mov
cmpsb
into
fimuls
dec
xlat
adc
or
mov
mov
dec
pop
repnz
mov
pop
lret
loopne
pop
add
dec
mov
xlat
mov
cld
out
dec
mov
mov
popf
mov
js
inc
xchg
or
xorb
popa
enter
inc
xchg
ds
sbb
push
dec
in
xor
rcrb
rcrl
pop
stos
inc
mov
aad
addl
sbb
gs
mov
and
mov
mov
xchg
inc
adc
dec
out
add
adc
fs
ljmp
jmp
andb
sub
ss
mov
fiaddl
sbb
jno
mov
pop
or
nop
sbb
push
pop
mov
out
ret
sub
les
push
fwait
cmpsl
mov
mov
shrl
call
jae
ja
pop
inc
mov
add
daa
mov
es
mov
xchg
push
or
notb
outsb
cmpsl
sbb
mov
daa
lock
stos
and
add
leave
dec
iret
popa
push
dec
loopne
cltd
sbb
sub
sub
inc
adc
das
js
add
icebp
cmc
push
jge
bound
lods
sub
out
mull
mov
mov
mov
jmp
and
jns
divb
ljmp
arpl
fisttpll
gs
dec
movsl
and
out
idiv
movsl
call
mov
cmp
cltd
outsl
aas
lret
lock
loop
lods
std
cs
sbb
jno
lret
lcall
mov
jno
arpl
mov
sbb
mov
jmp
push
pop
push
sub
pop
out
and
adc
pop
movsl
fwait
aas
popa
loope
and
fistl
movb
repnz
bnd
icebp
ret
sub
fucomp
mov
mov
push
fcompl
stos
inc
pop
fcomi
icebp
mov
lock
repnz
call
ljmp
push
mov
and
push
out
aas
jo
mov
jnp
push
mov
adcb
sbb
sub
mov
stos
icebp
push
push
adc
insl
mov
xor
mov
xor
sub
aaa
sbb
lahf
das
loope
repz
popa
mov
inc
js
mov
jge
aam
cmp
lods
inc
push
push
xchg
inc
jo
or
mov
fsubrs
pushf
push
add
notl
push
or
xchg
pushf
push
pop
rcrl
push
mov
jno
sbb
dec
xchg
dec
jns
xchg
out
subl
xchg
fs
and
xor
adc
dec
bound
sub
pop
hlt
push
pop
mov
lods
test
lret
pop
adc
cmp
stos
mov
xchg
int
add
fwait
adc
pop
dec
mov
movsb
stc
or
xor
xchg
pop
popf
addr16
cmp
ja
clc
cld
pop
sbb
ljmp
push
xlat
mov
test
test
daa
ljmp
push
std
mov
or
test
loop
jl
push
in
sti
sbb
cmpsl
mov
scas
mov
test
cli
xor
inc
data16
inc
add
fdiv
cwtl
cltd
adc
in
xorb
outsb
mov
in
dec
jmp
ds
loope
scas
xchg
shll
jl
fisubrs
std
lea
jno
sahf
out
or
rolb
mov
adc
adc
pop
push
fdivrs
mov
xor
sbb
popf
pusha
dec
repz
cmp
nop
sbb
ja
xchg
ret
data16
std
xor
aad
or
sahf
mov
jo
add
dec
sub
std
fistpl
gs
cmp
cmp
jae
hlt
and
repz
or
loope
mov
icebp
rcrl
ja
pop
dec
mov
fstps
add
enter
xlat
lods
dec
dec
mov
mov
es
imul
pop
mov
loope
out
sbb
pop
das
or
out
outsb
lea
jg
pop
mov
inc
out
sub
out
and
push
bound
icebp
ljmp
jge
xor
pop
in
ds
movsb
aad
sub
mov
dec
addb
aaa
test
jmp
out
pop
jb
and
cmp
cmc
inc
in
and
jle
add
inc
sbb
sbb
nop
fdivs
jmp
loop
stos
fnstcw
por
std
lahf
aaa
or
ret
jl
movsb
ja
xchg
daa
getsec
dec
mov
inc
lret
sbb
fisubl
lock
out
jno
aaa
add
xor
cmp
mov
das
sub
adc
add
cmp
fadd
mov
loope
jg
in
or
daa
xchg
test
mov
jo
add
hlt
mov
repnz
xchg
fstpt
push
call
xlat
dec
cmpsb
lods
data16
orl
stos
jno
pop
hlt
stos
loope
jmp
cmp
dec
mov
push
in
cmpsl
fdivrs
loopne
outsb
daa
or
jle
ret
lods
dec
outsl
jo
pop
clc
mov
sub
inc
mov
jmp
mov
out
push
jmp
aam
jnp
jo
xchg
js
shll
push
mov
sbb
add
push
test
sub
sahf
xor
aad
scas
mov
push
jns
rorl
mov
jo
std
lahf
in
inc
aaa
repnz
lods
fs
test
stos
lock
cltd
fmull
or
std
sbb
dec
mov
addr16
imul
js
sbb
fldt
inc
cmp
mov
mov
or
cwtl
outsl
mov
ret
shll
mov
shll
xor
inc
add
jo
xor
leave
and
xchg
push
pusha
repz
adc
ds
dec
sub
jae
imul
sub
sbb
lret
dec
sti
ds
clc
xor
push
arpl
add
popf
in
mov
sbb
int3
aad
fmull
dec
push
xchg
sub
pop
xchg
mov
xchg
mov
mov
nop
loop
mov
ret
idiv
push
setbe
repz
clc
jbe
and
sub
scas
pusha
outsl
push
mov
movsl
lods
push
int3
xchg
cmpsl
adc
mov
pop
mov
dec
mov
push
jge
in
fistpll
mov
pop
cwtl
loop
jbe
popf
rorl
adc
leave
sbb
jnp
sbb
mov
sbbl
xor
sbb
sbb
xor
push
ja
jne
or
mov
jmp
xchg
adc
sbb
insl
outsb
inc
rcll
dec
popa
jae
mov
in
data16
fwait
jae
sub
testl
push
add
add
test
sub
dec
loop
adc
cmp
jns
mov
outsb
iret
fwait
test
or
jecxz
jge
xchg
sahf
fadds
xor
lar
dec
pusha
stos
cld
rcrb
andl
xchg
outsb
jno
cmp
add
loope
add
data16
xchg
mov
sbb
xor
push
pop
hlt
int
push
push
jnp
push
clc
mov
nop
pop
jmp
and
aas
sub
in
lret
enter
cld
add
pop
pop
jmp
loop
fnstenv
insb
mov
mov
mov
and
xor
pop
lea
and
shll
dec
lahf
call
cmpsb
sahf
jp
test
and
sahf
xor
add
stc
push
int3
mul
push
fldl
ficomps
push
call
inc
fsubl
push
aaa
sub
or
xchg
ret
loop
clc
dec
push
add
shrl
inc
xchg
test
out
dec
pushl
in
in
xchg
scas
mov
ds
jmp
pop
xchg
cmc
xchg
mov
xchg
gs
fucomi
int3
setno
cli
mov
in
sub
sub
mov
mov
mov
or
cwtd
xchg
lret
xchg
out
leave
mov
push
mov
fstl
out
int3
or
sarb
mov
outsl
stc
pop
stos
mov
sub
mov
stos
pop
xor
or
xor
or
addr16
mov
inc
pop
adc
mov
aad
cmpsl
das
jmp
test
pop
into
test
dec
int
mov
cli
lret
je
inc
ret
or
mov
pusha
jb
add
mov
mov
clc
sti
inc
movsl
cmp
stos
push
xorl
imul
imul
data16
ret
add
cwtl
popf
cmpsb
mov
pop
xchg
mov
cmc
stos
fbld
enter
sub
mulb
xchg
inc
add
sbb
imul
mov
xor
mov
out
test
popf
fnsave
sbb
das
shr
add
mov
dec
mov
aaa
jge
mov
js
mov
in
enter
lods
packssdw
dec
movsb
jo
jne
jmp
outsb
push
mov
inc
adc
cltd
cli
push
mov
and
scas
jbe
push
dec
repz
lods
xchg
and
xor
jp
stos
sub
mov
js
or
fcoms
mov
insl
loope
das
inc
sub
inc
mov
jmp
sbb
inc
jmp
push
addr16
xchg
xchg
out
mov
mov
inc
test
or
in
js
test
stc
jl
or
std
or
xor
int3
mov
push
imul
cmp
sbb
or
dec
xchg
lcall
mov
mov
sbb
or
ror
jg
fcoml
push
and
mov
and
pop
xchg
fldenv
push
test
inc
adc
mov
vpshuflw
js
sub
aas
pop
scas
mov
cltd
cltd
fstpl
inc
call
cmp
push
aas
movsb
mov
mov
lret
fcoml
imul
std
mov
test
sbbl
sbbb
pop
mov
imul
addr16
jo
out
or
pushf
sbb
daa
push
dec
sub
mov
push
sub
repnz
call
ret
mov
sub
bound
jno
call
or
cmp
fxch
jmp
scas
in
loopne
jno
sub
rcrl
and
sbb
int
cwtl
push
xor
rolb
lahf
lods
inc
pop
fiadds
mov
jp
xchg
call
dec
push
cmpsb
push
jo
sub
xorb
pop
sti
pop
ds
push
jb
sub
or
inc
test
xchg
jne
jnp
add
add
cs
inc
push
test
sbb
pop
test
aas
leave
mov
mov
adc
add
aam
ja
ja,pt
sub
mov
xchg
outsl
je
jmp
add
adc
jecxz
leave
pop
dec
fld
lods
sbb
inc
inc
jnp
aas
sbb
data16
repz
repz
inc
aad
jo
out
lods
ret
lcall
inc
sbb
fildl
out
mov
and
fistpl
pop
lods
xor
xchg
fadds
out
test
add
lret
jae
and
icebp
xchg
pop
adc
mov
and
nop
push
dec
loopne
sbb
popf
enter
xchg
rcrb
add
jecxz
call
mov
or
cwtl
jne
cmpsl
rcr
mov
xchg
xchg
fwait
mov
rcll
ds
cwtl
aam
mov
xchg
push
xor
es
shr
cmp
bound
repz
fstpl
je
leave
sbb
rcrb
std
push
insl
test
mov
sub
movsl
int
dec
cmp
icebp
mov
mov
add
das
or
scas
shll
add
nop
fmul
addb
inc
jg
test
sbb
add
cmp
adc
aam
jns
sub
nop
inc
and
mov
adc
push
cli
sbb
fnstenv
mov
test
or
shll
xchg
cwtl
lret
out
push
mov
fstpl
call
sarb
fnstenv
test
and
jge
xchg
mov
mov
dec
mov
leave
sti
push
cwtl
in
lea
or
mov
pop
push
cmpsb
sub
dec
in
push
dec
js
mov
lds
xchg
ret
jnp
jmp
push
aam
sahf
pop
sbbb
testb
cwtl
and
add
cld
inc
lahf
xchg
int
xor
jle
popf
insb
or
in
dec
lcall
jnp
add
and
mov
fstps
push
push
or
mov
mov
scas
insb
bound
nop
xor
gs
mov
js
fcomps
adc
inc
das
pop
lock
movsl
cltd
mov
adc
cmpsb
sub
aaa
call
adc
pop
inc
dec
rclb
test
pusha
and
inc
and
out
jecxz
filds
mov
testl
lret
lret
and
cmpb
testb
mov
stc
mov
imul
adc
mov
jecxz
or
in
mov
into
push
lret
movsb
sbbl
sbb
or
fnstcw
loop
mov
sbb
cmp
lods
stos
mov
fdivrs
icebp
ret
pop
lahf
and
movsl
cltd
mov
test
outsb
add
jne
jle
mov
inc
pop
jo
aad
aad
sbb
lret
xchg
sahf
inc
sub
scas
scas
lcall
cmp
gs
pop
add
fnsave
lds
push
les
jge
insb
xchg
std
dec
fcmovb
ret
testl
mov
pop
daa
scas
fldcw
testb
mov
fnclex
xorl
dec
or
ds
leave
and
mov
movsl
orl
cltd
cmc
int3
fimull
pop
sub
in
in
pop
and
insl
mov
shr
and
jbe
push
jnp
adc
mull
and
call
ds
or
icebp
push
push
add
or
adc
xor
stc
mov
or
jbe
pop
les
scas
pop
adc
mov
push
xchg
cld
xchg
cltd
xchg
jns
pop
xchg
push
mov
sbb
push
pop
hlt
ficoms
inc
mov
inc
adc
adc
xlat
adc
pusha
push
push
pop
mov
testl
sti
into
pop
cmp
xchg
mov
arpl
outsl
jle
les
leave
xor
int3
and
jne
ret
jns
mov
das
mov
aad
gs
mov
repz
into
stc
adc
dec
adc
iret
out
dec
and
clc
or
shll
out
sub
in
inc
add
ljmp
es
adc
lds
adcb
or
movsl
xor
lods
std
xchg
imul
fdivl
mov
pushf
mov
nop
sub
ror
rol
out
popf
or
jo
jbe
mov
pop
addr16
in
inc
dec
insb
xchg
in
js
jecxz
mov
out
add
jl
into
cmp
out
jns
shl
mov
mov
and
jbe
pop
je
lods
loopne
mov
loopne
lods
push
pop
fiadds
pop
loop
test
pop
daa
xchg
stos
les
aad
mov
pushf
push
test
and
loopne
in
push
test
adc
and
lods
xor
add
sbb
ljmp
jo
or
xchg
orb
xchg
sub
in
push
xchg
frstor
rol
jecxz
div
mov
xchg
es
shlb
rorb
call
and
outsb
xchg
test
enter
mov
and
jp
cmpsl
mov
or
cmpl
cs
push
mov
add
mov
mov
das
or
mov
dec
fimull
or
inc
psrlw
add
pop
data16
sbb
paddq
jmp
mov
out
jb
leave
cmp
cmp
push
or
xor
gs
mov
adc
sbb
cmp
add
cld
jp
or
in
lret
cltd
lds
ja
push
imul
lock
add
fs
or
pop
push
enter
mov
sti
ret
and
adc
xor
outsb
test
pop
xor
push
enter
cmp
push
and
in
xchg
mov
cmc
dec
xlat
aaa
aaa
mov
rorl
cmpsl
pop
pop
mov
push
rcr
mov
fildl
popa
rcrl
mov
shll
dec
ljmp
jle
movsb
jnp
mov
jl
fstpt
add
mov
les
rcrl
ljmp
lds
into
fcoml
xlat
sahf
adcb
and
add
mov
rclb
mov
sub
js
mov
cmp
cmp
loope
cmc
adc
cmp
sub
add
jbe
push
xchg
nop
jg
inc
pop
pop
fcomps
and
push
pop
pop
in
fs
dec
int3
and
jno
movsl
cwtl
push
jb
insb
mov
outsb
pushf
cmp
hlt
jne
push
daa
test
and
imul
inc
in
in
sub
shrb
call
test
mov
movsb
cmp
push
imulb
sub
mov
imul
mov
aad
addb
push
leave
dec
loop
cltd
cmp
push
jecxz
mov
rolb
int
stos
rcll
jns
movsb
mov
fmull
mov
imul
inc
cld
pop
enter
and
xor
mov
popa
in
inc
mov
outsl
in
sbb
jb
lret
sub
das
xor
addr16
jne
push
push
js
pop
cld
in
pop
rcl
push
pop
dec
inc
xchg
fsubrl
pop
xor
inc
in
sub
rorb
repz
sub
add
mov
or
push
lea
fdivrs
jae
jmp
cs
mov
inc
adc
scas
mov
jb
sarb
es
mov
push
and
sbb
int3
mov
mov
mov
add
out
sbb
push
add
out
push
loop
test
jle
push
int3
mov
stc
clc
sbb
ja
mov
mov
dec
or
jg
lea
pushf
loopne
mov
outsb
sbb
jb
xor
in
inc
in
ss
mov
adc
jge
mov
add
push
mov
mov
mov
pop
test
loope
or
mov
les
inc
fnsave
fcomip
test
out
pushf
add
jns
in
xchg
mov
mov
push
icebp
insb
in
cmp
xchg
stos
push
mov
xor
jnp
aaa
jns
mov
mov
pop
lahf
arpl
mov
xor
cmpsb
mov
gs
cs
inc
ficompl
les
sub
jb
xchg
push
sarl
xor
pop
xchg
scas
movsb
mov
mov
jns
stos
fstpl
jno
and
sbbb
jo
xor
jno
js
adc
int
xor
fbld
or
or
sahf
subb
insl
fisttps
call
mov
test
push
bound
enter
push
lcall
xchg
shlb
fidivs
test
daa
test
popa
xor
int
sbb
fxch
ja
sar
mov
lods
jmp
adc
dec
andb
int3
cmp
fwait
push
mov
mov
in
unpcklps
lock
ret
fs
data16
mov
leave
mov
mov
adc
cmp
dec
mov
push
loopne
cmp
push
sbb
dec
or
fwait
sub
pop
cmp
mov
pop
loopne
and
jne
adc
dec
jmp
sbb
and
mov
cmp
mov
ljmp
bnd
mov
mov
cmp
lods
out
cmp
cmp
scas
push
and
dec
push
insl
cmp
jbe
jo
and
stos
push
xor
jae
mov
rorb
jns
std
dec
lcall
test
rolb
or
andl
popf
in
pop
cld
lahf
iret
pusha
inc
adcl
call
mov
fisubs
adc
or
push
or
sub
adc
add
add
stc
mov
mov
adc
fs
add
test
lods
mov
into
movsb
dec
push
arpl
fsts
lret
mov
dec
cmp
jno
outsl
lea
dec
std
cmp
paddsb
sbb
push
xchg
out
xor
insl
lock
xchg
sub
cltd
push
ret
in
xlat
and
xchg
mov
shlb
dec
sub
jge
fucom
jae
fnstenv
cmpsl
pushf
xor
je
imul
faddp
jae
cmpsl
push
jmp
stos
adc
pop
cmpsb
dec
and
and
adc
outsb
and
js
ja
dec
pop
imul
gs
sub
add
xchg
lods
pop
lcall
pop
ret
test
daa
push
or
jnp
nop
ss
cmp
lods
sub
stos
inc
push
sbb
cmp
aaa
dec
mov
cmp
test
sub
or
push
mov
jg
adc
js
call
or
fnstsw
mov
lret
cmp
mov
sbb
cwtl
in
mov
sbb
mov
pop
xor
jge
mov
jnp
push
lret
jne
mov
jmp
mov
shr
sahf
ja
and
inc
xor
cmpsl
jmp
cmc
movsb
mov
fdivrl
add
mov
sub
and
je
sub
or
xchg
leave
mov
pusha
xchg
sar
xchg
push
int
xchg
xor
fadd
push
jge
dec
scas
adc
cltd
sbbb
mov
mov
push
xchg
pop
aas
jbe
mov
scas
lods
fisttpll
aad
adc
mov
lahf
cs
addb
scas
xchg
jne
push
imul
test
negl
in
daa
cmp
popa
xor
cmp
or
jo
sti
sbb
and
pop
ss
adc
xor
adc
mov
sub
shl
and
rclb
scas
sahf
lods
rorb
xchg
pushf
leave
and
fmuls
ret
fcoms
mov
negl
lds
cmpsl
cmc
hlt
or
aad
cltd
cmp
call
movsl
fadd
or
inc
add
addr16
lret
inc
outsl
cwtl
loop
scas
out
xor
enter
aaa
jb
xor
fisubrs
adc
jle
fcompl
in
cmpsb
imul
mov
push
insb
xchg
and
int3
mov
imul
movb
aaa
mov
in
pop
mov
dec
enter
rorl
ret
pop
lret
xchg
or
mov
lahf
imul
mov
loop
mov
pusha
cltd
mov
mov
dec
outsl
push
pop
std
xor
daa
jecxz
dec
add
roll
mov
add
mov
adc
add
gs
fsub
cmp
clc
mov
adc
add
add
push
aad
jb
out
mov
mov
fists
adc
data16
lahf
cmp
data16
hlt
dec
add
cmc
imul
shlb
cmp
jb
add
xchg
mov
xor
lret
push
mov
call
lret
lea
or
inc
mov
inc
ja
mov
or
lock
leave
lds
out
flds
aam
mov
loop
jne
jp
cmpb
and
xor
jge
loope
dec
xlat
mov
cwtl
cwtl
lods
mov
adc
push
out
lretw
mov
cmp
xchg
mov
xchg
rclb
test
in
addb
xor
adc
push
pop
inc
movsl
dec
mov
xchg
jmp
lcall
sar
adc
sbb
xor
inc
icebp
push
bound
adc
aaa
push
sbb
nop
sbb
pusha
inc
xchg
mov
int3
daa
std
jae
stos
add
sarl
sbb
mov
data16
fstl
imul
stc
pop
or
mov
stos
or
fxch
notb
cld
or
aaa
testb
pop
cli
test
jle
xor
fistl
lds
ljmp
leavew
testb
mov
ss
ret
add
cmc
pop
pop
add
pop
stos
mov
dec
cwtl
sbb
push
push
mov
lret
push
shl
cmc
mov
filds
loopne
or
iret
xor
inc
or
outsb
adc
arpl
aas
sub
inc
push
mov
movsl
cmp
cwtl
jne
adc
pop
sub
pop
sub
pop
fnstenv
xorl
xor
std
shrb
scas
and
mov
mov
sub
pushf
lods
fs
mov
das
pop
stos
jns
in
mov
fs
fildl
xchg
mov
addr16
push
ds
inc
xor
cmpsb
jne
iret
in
sub
ss
aas
cmc
loopne
sub
cmc
adc
rcll
sub
mov
fsubrs
pop
loopne
mov
roll
popf
imul
out
inc
out
cwtl
mov
dec
mov
lret
lock
xchg
and
sbb
cmp
xchg
fs
ror
aad
pop
mov
sub
pop
xor
sub
int
or
lods
dec
fwait
and
in
mov
inc
xlat
adc
sbb
out
adc
mov
xor
push
lahf
aas
jl
xchg
xor
ss
outsb
loop
in
inc
repz
mov
int3
sub
out
push
outsl
mov
dec
sub
adc
cld
mov
push
xchg
mov
mov
in
in
inc
sbb
dec
in
fisubs
jns
js
inc
and
jo
sbb
lock
mov
cld
mov
add
push
mul
push
dec
in
adc
iret
sbb
hlt
or
mov
dec
dec
daa
mov
jle
pop
sub
and
adc
out
clc
loopne
insl
test
jp
call
iret
cmp
loop
push
mov
scas
mov
jno
pop
in
sbb
aam
idivl
fistl
test
pop
xchg
add
jae
push
jb
mov
jbe
mov
aam
pmullw
xor
jne,pt
into
add
inc
mov
jo
pop
xor
jno
dec
or
add
sub
xor
mov
test
xchg
mov
scas
aad
mov
mov
fstpt
insb
inc
cmpsl
cmpb
je
repnz
arpl
xor
push
mov
jg
insl
imul
dec
outsl
cmp
in
inc
xor
and
lahf
ja
inc
mov
pop
mov
subb
clc
call
xor
pusha
ss
adc
scas
inc
push
mov
lds
push
popa
xor
mov
aad
adcb
adc
xchg
xchg
push
cmp
cs
fs
xor
repnz
xchg
or
xchg
sub
gs
push
xchg
cltd
mov
repnz
mov
xchg
push
scas
sub
decl
mov
adc
cmp
and
sbb
or
mov
stos
std
adc
jge
adc
mov
inc
cltd
push
and
imul
sbb
push
pop
dec
insb
jae
test
adc
mov
jo
or
mov
popa
mov
cmp
jmp
cmp
mov
and
or
test
jb
push
icebp
mov
mov
lock
mov
push
pop
popf
negb
call
mov
jge
mov
jge
pop
shr
ja
rorb
dec
in
es
dec
and
adc
adc
jno
test
nop
rolb
pop
and
fwait
ja
test
movsl
sbbl
or
jl
jp
lcall
cmp
ror
insl
ss
insb
sbbb
stos
lahf
sub
sbb
shl
notb
xchg
and
fisttps
xchg
ds
je
cmpsl
hlt
dec
xchg
ljmp
testb
xchg
insb
cltd
and
dec
sbb
jno
shl
dec
rolb
decb
pop
push
test
and
push
cmp
int
sub
pop
loopne
mov
stos
test
fwait
or
orb
dec
movsb
lcall
pushf
mov
les
xor
leave
mov
add
hlt
lret
sbb
rol
rcrb
push
lahf
jp
mov
xor
out
call
dec
pop
mov
sbb
imul
sbb
inc
xchg
pop
insb
lea
cmp
or
aam
xor
sub
ljmp
xor
popa
sub
mov
clc
test
lock
pop
xchg
aad
push
dec
insb
push
call
jl
dec
dec
push
ja
aam
mov
call
jp
push
jge
aad
dec
data16
jne
sbbl
out
ret
in
jno
add
loop
push
add
and
and
or
push
daa
rorl
mov
cmp
push
xor
int
sahf
adc
mov
aaa
pop
call
sub
test
inc
cs
cmpsb
test
mov
adc
or
xchg
mov
sbb
test
mov
mov
mov
aam
inc
push
push
xlat
add
cmc
push
mov
and
pop
push
hlt
pop
pop
imul
in
or
jle
mov
adc
and
adc
or
inc
mov
out
push
xlat
sarl
popa
outsb
mov
mov
push
ret
sbb
popf
mov
int3
fwait
std
jmp
push
cmc
test
sub
cs
dec
lret
negl
or
xchg
mov
or
jae
in
iret
sub
loope
ja
mulb
jmp
mov
cmp
icebp
sub
inc
hlt
xchg
mov
mov
and
shl
int
push
xor
cmpsl
subb
inc
pushf
int3
xchg
ljmp
add
mov
fmuls
add
xchg
shufps
es
jle
enter
lods
imul
push
mov
push
js
lock
out
mov
inc
outsb
jl
stc
and
cmpb
dec
fdivrs
jno
cmp
jl
scas
lcall
sub
mov
fcomps
inc
add
xlat
pop
jp
and
and
sbb
movsl
leave
cmp
xchg
cld
mov
movsb
mov
in
cmp
test
mov
jecxz
mov
inc
fistps
jo
aas
dec
ret
jg
jg
pop
sbb
scas
out
mov
daa
js
lahf
mov
pop
adc
pop
movsw
out
xor
leave
xchg
std
leave
incl
push
or
inc
scas
mov
das
or
dec
pop
ds
test
xor
push
in
stc
pop
sbb
mov
xchg
leave
jb
cmp
pop
cs
pop
jo
clc
nop
sbb
inc
sbb
inc
sarl
subl
jmp
mov
xchg
scas
ja
mov
sbb
cltd
out
repnz
sarl
sub
dec
xor
int
add
cmp
adc
daa
push
add
dec
xor
and
pusha
scas
fiadds
sbb
leave
and
nop
push
sbb
adc
jmp
dec
pop
and
or
jle
sbb
xor
stc
adc
fcompl
sbbb
sub
out
bound
mov
loopne
jmp
call
sbb
jp
lret
sub
les
mov
add
inc
cmc
stc
call
mov
test
mov
insl
jnp
xchg
dec
outsb
out
dec
push
xchg
pop
fcmovnu
daa
xchg
xchg
ret
pop
inc
sahf
inc
sbb
add
jmp
jge
movsl
mov
outsl
das
aaa
ficomps
insl
out
push
arpl
dec
push
rcrl
or
sub
dec
std
sbb
dec
push
push
jmp
test
adc
dec
ret
xlat
push
pusha
aaa
mov
pop
mov
inc
dec
mov
cmp
int3
xor
scas
int
out
xchg
pop
shrb
pushf
mov
add
adc
nop
push
iret
mov
mov
jo
jne
mov
imulb
clc
int
clc
sbb
movb
test
sub
mov
out
das
dec
xor
adc
in
jbe
lods
lcall
js
aad
mov
in
xor
xor
cmp
push
pop
push
insl
fcmove
and
jg
sbb
jae
lcall
cmp
lcall
jo
cmp
or
jb
outsb
in
adc
add
pop
ja
sbb
jae
cli
pop
cmp
shlb
or
fimull
pop
fs
inc
repnz
pop
mov
cmp
sub
vmread
lret
mov
xor
mov
jnp
adc
cli
test
lds
pop
mov
lret
add
leave
fistpl
stos
in
and
dec
in
jae
dec
mov
and
or
movsl
lock
mov
and
push
icebp
mov
sbb
inc
pop
push
into
inc
aas
cmpsl
push
xor
xchg
xchg
xor
xchg
inc
outsl
imul
cmp
xchg
sub
and
xchg
test
cmp
nop
pop
ja
rorb
lret
or
dec
adc
pop
sbb
and
inc
int
inc
sti
push
mov
ficoms
xor
cmp
pop
xor
lret
lret
or
add
xlat
movsb
cmpsb
sbbl
xor
mov
mov
add
fcmovbe
movsb
or
rclb
pop
lahf
pusha
movsb
clc
xchg
cmp
ret
mov
add
push
cli
test
push
in
ljmp
cmpsl
jnp
mov
pop
xchg
pushf
add
push
lods
iret
pop
orl
xchg
outsl
mov
xor
pop
jns
pop
cwtl
scas
and
jg
lods
dec
out
mov
lds
std
mov
push
jmp
bound
mov
je
daa
sbb
fs
fsubs
hlt
bnd
in
push
test
push
cwtl
mov
sub
adc
cld
and
mov
hlt
lret
mov
ja
xchg
test
mov
pop
xchg
in
mov
xchg
dec
call
jns
cld
dec
repz
daa
ret
xor
xor
stos
loop
inc
sub
adc
sub
mov
sti
out
setl
inc
nop
lods
sbb
pop
lahf
in
mov
clc
push
mov
pop
mov
lcall
cmp
data16
mov
and
sarb
pop
ss
ja
orb
pop
in
xor
sbb
repz
adc
push
xor
in
test
cmp
add
xchg
fmuls
sti
and
ljmp
pop
js
je
imul
sbb
aam
and
jo
in
ficoms
fcomps
cmp
add
pushf
and
mov
sbb
inc
cmp
aas
popa
fwait
mov
jno
pop
mov
mov
push
shll
push
push
hlt
outsb
das
adc
ret
scas
add
or
jge
pop
das
fwait
xor
std
cltd
xor
ja
insl
jae
stos
push
pushaw
scas
sbb
aaa
outsb
fcom
pop
test
inc
sub
pop
ffreep
ljmp
mov
andl
adc
push
lods
pop
orb
test
cmp
jns
mov
jae
pop
dec
insl
push
sbb
jge
inc
jns
rcl
das
popa
jae
xor
and
popf
mov
jmp
push
jl
jbe
out
mov
jbe
xchg
jl
shlb
inc
out
push
xchg
leave
cli
cmpsl
add
jb
scas
sub
adc
xchg
cmp
int
outsb
mov
mov
movl
add
mov
iret
jo
call
into
xor
push
imul
clc
add
sub
pop
pusha
mov
ljmp
push
in
cmp
cmp
and
stc
add
lret
sbb
adc
sqrtps
xlat
sti
xlat
mov
ljmp
jmp
loop
cmp
jecxz
in
aaa
test
cmpsb
sbb
jb
mov
ja
incb
xor
dec
add
adc
or
or
lret
jle
sub
adc
add
xor
jmp
and
aam
sbb
jmp
leave
mov
fistpll
mov
xchg
int
lods
mov
xchg
cmc
dec
loope
mov
hlt
inc
dec
rorl
cmpsl
out
dec
jno
pop
mov
mov
movsl
idivb
jnp
mov
adc
xchg
rcrl
and
dec
ret
int
xchg
lret
jle
es
add
mov
movsb
inc
mov
sbb
aaa
pop
pop
adc
sub
arpl
jmp
xor
adc
or
icebp
data16
roll
pop
jo
hlt
aad
mov
xchg
cmp
scas
int3
notb
popa
loope
cld
mov
jle
push
dec
jo
outsb
shrb
mov
call
and
dec
arpl
movsl
lea
lods
adc
jle
xchg
push
mov
cs
notb
fwait
jmp
movsl
cmpsl
das
shll
pop
jb
addb
mov
sub
popf
daa
into
pop
aaa
aas
psubd
aaa
out
lcall
test
loope
faddl
xor
xchg
je
cmp
inc
aaa
pop
cmpsb
loop
es
or
or
push
inc
arpl
rcll
xlat
sub
wbinvd
outsl
loope
cmpb
xor
sub
rcll
mov
mov
xchg
xchg
movsl
push
add
xor
repz
sarl
pop
pop
bound
push
nop
aas
inc
jns
jns
into
lods
cmp
dec
push
fisubs
or
mov
xor
lret
sbb
xchg
fwait
mov
sbb
xchg
test
add
push
pop
xor
rorl
xchg
jge
adc
inc
dec
or
aam
mov
xor
jo
clc
mov
fwait
xor
fidivl
subb
mov
cmp
jg
sub
dec
test
pop
pop
push
dec
inc
aam
cmp
xchg
xorl
insb
dec
fs
sbb
xchg
xchg
outsb
enter
sbb
jbe
jns
sub
fsubs
push
dec
stos
jo
fs
mov
jne
mov
cmpsb
pop
notl
and
inc
mov
push
ret
iret
call
or
inc
cmpsl
jns
fcmovnb
mov
xor
mov
out
add
aad
push
jp
fadds
inc
leave
mov
dec
and
test
fdivl
dec
sbb
lret
pop
out
aaa
cmp
movsl
ds
rcrl
call
leave
inc
aas
mov
add
push
mov
dec
push
or
xchg
jmp
jne
or
cld
jbe
push
add
int
sub
xor
arpl
push
imull
es
loope
jg
jnp
push
mov
adc
int
jle,pt
dec
icebp
mov
cmp
inc
jae
int3
movsl
mov
stos
test
lret
jne
mov
cmpsl
outsl
test
test
xchg
jbe
in
pusha
clc
xlat
mov
lods
jecxz
out
adc
cmp
cmpsl
xchg
dec
jb
aam
jnp
int
mov
push
test
inc
add
jge
mul
pop
test
pop
adc
test
dec
clc
out
sub
addr16
mov
or
xor
fsubrl
data16
inc
sub
push
mov
imulb
nop
frstor
cmp
lds
jp
pop
push
loop
sub
das
rol
lret
rclb
dec
imul
icebp
sahf
in
aam
sub
addr16
sub
jbe
sti
dec
lods
pop
push
push
add
ljmp
sub
inc
or
dec
xchg
imulb
push
pop
outsl
cmc
mov
and
pop
sbb
adc
xlat
mov
xchg
mov
mov
or
cltd
mov
sbb
pop
loop
fdivl
dec
mov
xor
jnp
jmp
addb
shlb
push
xorl
xchg
xchg
push
data16
push
call
stos
fs
shlb
cmpsb
scas
test
stos
dec
jo
dec
es
mov
ret
mov
jmp
ror
add
push
add
lcall
ret
or
sbb
push
stos
xorl
lods
mov
and
sbb
icebp
ss
arpl
jbe
xchg
icebp
push
xchg
push
mov
scas
pop
inc
inc
jmp
pop
mov
xor
push
fsubs
call
xlat
sub
je
dec
iret
arpl
negb
push
gs
mulb
add
mov
mov
xor
cli
sub
ficoml
lahf
mov
fisttpl
jge
ja
mov
das
sub
andl
add
push
push
add
dec
insb
sbb
sbb
and
popa
aad
rorl
imulb
in
sbb
pop
xchg
cmpsb
addr16
cmp
cmp
in
pop
in
in
scas
mov
jmp
or
pop
leave
mov
outsb
sbb
sub
cld
pop
jge
mov
stc
dec
lea
fistl
sbb
cmp
icebp
loopne
sbb
rol
jns
notb
imul
gs
pop
das
out
iret
jl
push
add
and
mov
add
mull
incb
int
xchg
and
js
cmp
lret
inc
repz
cmpb
jecxz
stos
mov
push
and
rep
fsubl
lods
cmpb
xor
iret
jecxz
xchg
test
lock
je
cld
stc
movsb
jns
call
cmp
adc
sbb
jge
and
xor
lret
imul
pop
loope
mov
sbb
jbe
mov
xor
cmc
xchg
xchg
jae
mov
jne
jae
outsb
fildl
and
and
outsb
mov
sbb
sahf
dec
fucom
bound
mov
test
lods
pop
lods
add
jbe
cltd
icebp
aaa
xor
mov
push
daa
repz
mov
lods
xor
xchg
shl
nop
bound
loope
pop
sub
popa
out
test
leave
imul
ljmp
adc
das
movl
inc
mov
in
dec
xchg
test
lret
adc
int
clc
pop
sub
add
sahf
cmpsl
add
or
mov
push
std
loop
add
call
out
and
inc
das
sbb
pop
pusha
out
and
mov
inc
dec
fwait
pop
mov
jae
dec
fstl
add
adc
adc
ljmp
imul
sub
hlt
adcb
pop
mov
stos
mov
shr
xchg
test
xchg
adc
mov
mov
das
sar
fdivrp
mov
cmp
push
fists
jp
dec
aaa
fsubp
fs
lea
sbb
mov
fisubl
fwait
pop
add
lea
addb
xchg
imul
cmp
xchg
mov
mov
mov
je
scas
push
xor
fcmovu
sahf
jmpw
pop
fmull
adc
insb
xor
jnp
stos
pop
push
incb
mov
addr16
or
xchg
mov
sahf
call
ret
das
xchg
push
outsl
mull
mov
test
and
fwait
arpl
mov
xchg
pop
hlt
inc
inc
fs
xchg
or
cmp
pop
push
stos
adc
mov
cmp
mov
cmp
orb
aaa
je
mov
cli
mov
and
or
jl
mov
and
xchg
add
int
filds
mov
mov
sarl
out
jae
movb
ds
loope
stos
xchg
out
or
lcall
pop
mov
std
out
outsl
fmull
out
call
push
push
jmp
dec
xchg
inc
insl
mov
xchg
loopne
outsl
push
leave
sub
mov
cltd
enter
dec
cwtl
xchg
mov
cld
movsl
xor
push
lods
or
addl
les
jne
mul
sti
cmp
gs
loop
lret
fsts
loop
sahf
es
mov
dec
mov
cwtl
or
xchg
add
sbb
sub
int3
xchg
adc
xor
stos
ret
jb
es
dec
xor
sbb
mov
add
aam
hlt
in
outsb
insb
ret
shr
js
mulb
jnp
push
fs
lds
add
push
fiadds
adc
push
addr16
mov
hlt
mov
and
sbb
loopne
cmp
cmp
xchg
or
inc
js
aas
out
push
int
jb
dec
sbb
adc
sub
sub
stos
sbb
jo
roll
fnstenv
or
lods
loop
out
mov
jo
jl
dec
ficomps
pop
mov
xor
cwtl
dec
sbb
fbstp
call
inc
dec
mov
xchg
adc
lcall
push
mov
les
add
jg
popf
fdivr
enter
clc
imul
sbb
xchg
sub
xchg
sub
mov
pop
fprem1
xor
xchg
pop
dec
jno
mov
mov
sub
or
bound
dec
push
dec
scas
cld
mov
lods
jnp
or
ficomps
fs
add
lock
lcall
jns
loopne
lods
in
push
sub
cmc
xor
dec
sbb
xchg
push
in
cmp
push
test
jno
jbe
or
out
js
cmpsl
arpl
fimuls
sub
fld
inc
cltd
stc
xchg
out
jg
jmp
mov
or
jmp
inc
rorl
adc
testb
enter
aaa
push
mov
or
xchg
in
adc
cmp
loope
lea
rcl
aaa
mul
lds
xlat
insb
dec
fistpl
rcr
and
or
pop
lods
sbb
jae
mov
adcl
jne
int3
lcall
cmpsl
pusha
add
movsl
jp
das
adc
jns
cmpsl
dec
mov
repz
push
xchg
push
jle
out
repz
sbb
xchg
mov
xor
mov
aam
inc
dec
das
stos
ds
sub
dec
push
nop
cmp
cmpsl
xchg
sahf
cli
js
lods
fisttps
pop
xchg
mov
mov
push
pop
faddl
dec
dec
pop
shlb
jmp
mov
mov
add
cmp
push
sub
push
iret
lcall
adc
imul
xchg
cmp
incl
or
bndstx
sub
in
jb
pop
movsb
xor
push
push
or
xchg
dec
repnz
aaa
mov
sbb
pushf
outsb
pushl
lcall
ja
fistps
mov
xchg
inc
inc
ret
int3
pusha
lods
rorl
insb
outsb
jle
outsl
shlb
inc
loop
inc
insb
out
mov
imul
js
dec
xor
repz
dec
stos
xor
xor
idivl
data16
jp
int3
push
cmpsb
fmull
movsb
lods
mov
fucom
negl
lods
insl
cmp
subl
xchg
out
fidivrs
ret
movsb
shll
add
stc
cmc
push
inc
mov
jnp
insb
or
mov
cmp
xor
jle
add
adc
mov
out
adc
imull
sbb
out
mov
cwtl
mov
sub
ret
fnstsw
repnz
andb
jns
mov
sbb
mov
pop
call
cmp
push
popa
stc
xor
xor
xorb
mov
cld
arpl
push
xchg
or
addl
pushf
scas
iret
or
xlat
jno
ss
sbb
dec
adcb
and
fildll
repnz
cmpsb
sub
sti
loop
mov
cmp
push
xor
adc
in
scas
xchg
mov
or
cmc
in
add
cmc
add
xor
push
test
lock
mov
ja
pop
jp
std
inc
fs
mov
pop
xchg
mov
pop
or
sbb
mov
pop
iret
idiv
sub
xor
xchg
dec
mov
cltd
test
sbb
popf
int3
hlt
js
dec
aam
mov
mov
lods
xchg
out
inc
lcall
mov
ret
test
jno
lds
repz
push
out
jbe
pop
pop
adc
inc
sub
hlt
aaa
jg
jb
sbb
inc
mov
and
pop
stos
rcll
mov
lods
mov
fdiv
loope
dec
shrb
add
ja
outsl
jmp
div
inc
jo
mov
xor
cmp
fidivs
inc
popa
stos
adc
push
rcrb
mov
add
lret
push
xchg
repz
imul
mov
pop
aas
sub
xchg
inc
lds
test
ds
shrl
lods
icebp
xchg
push
jmp
loop
jecxz
out
xlat
adc
mov
fldt
sub
out
nop
jge
repz
push
add
arpl
add
fiadds
cmp
dec
int
dec
icebp
adc
nop
xchg
and
xchg
popf
push
lret
inc
lret
inc
stc
lcall
ffree
mov
mov
xchg
mov
cvtps2pd
mov
jmp
aam
xor
jp
shll
adc
cld
sub
pushf
inc
mov
add
push
repz
outsl
loopne
mov
xchg
inc
sub
dec
notb
xchg
xchg
call
stc
adc
adc
jmp
push
std
sbb
mov
loopne
ret
inc
out
xor
repz
jmp
leave
adc
movsl
test
outsl
jnp
test
clc
movsb
std
xchg
sub
dec
xor
mov
int3
push
mov
mov
iret
js
les
lods
push
js
insl
inc
ret
fs
mov
cltd
mov
inc
cmp
clc
or
rcll
adc
sbb
mov
mov
mov
push
cmp
in
pusha
sbb
adc
jns
js
js
adc
sbb
cs
pop
sub
popf
jno
sbb
in
repnz
sbb
xchg
xor
fimuls
in
lahf
adcl
imul
mov
mov
adc
xchg
nop
mov
mov
adc
mov
repnz
push
in
jg
xor
or
mov
int3
pop
push
sbb
push
cmpsl
in
sbb
lods
cmp
mov
inc
and
cmp
je
pop
lahf
sahf
cmp
cmpl
cmpsl
xor
add
into
stc
mov
sub
pop
ret
pop
sarl
add
mov
cmpsl
or
cmp
ljmp
lcall
inc
jecxz
mov
mov
push
aas
pop
lahf
in
inc
out
jb
insl
cmc
aad
outsl
repnz
pop
add
cmp
aam
iret
es
xor
dec
adc
cmp
ficoml
sbb
mov
mov
sub
sbb
pop
lcall
popf
int
sub
mov
sbb
repnz
movb
add
mov
pop
test
cmp
ss
lret
daa
lea
push
into
sub
fldenv
or
out
inc
xor
imul
mov
inc
das
adc
sub
test
ss
cltd
out
xchg
sbb
mov
adc
nop
mov
jb
jbe
mov
cmpsl
jnp
xchg
test
push
push
arpl
mov
push
mov
shrl
stos
mov
jne
mov
and
sbb
push
xchg
xor
mov
xchg
es
cwtl
leave
or
mov
push
mov
dec
cmpsl
sbb
icebp
or
pop
gs
push
out
repnz
mov
ds
adc
push
push
sub
pop
lret
dec
jo
push
sbb
jo
pop
shlb
push
push
leave
arpl
inc
fs
leave
inc
push
cmpb
inc
imul
push
scas
iret
test
push
add
mov
cmpsl
inc
sbb
mov
aaa
test
in
xlat
cli
aad
stos
clc
dec
push
dec
add
xchg
fidivl
in
cmpsl
sbb
add
icebp
out
stos
or
roll
aad
and
adcb
outsl
inc
or
mov
dec
cmp
jle
imul
repz
sbb
jbe
fsubp
movsb
jecxz
mov
ror
push
movsb
cmp
cmp
mov
imul
inc
insb
mov
and
sbb
cs
lods
dec
pop
jae
jbe
mov
cmp
ret
mov
jne
lods
fsubrs
add
xchg
pop
ljmp
sbb
out
mov
sub
push
mov
lods
daa
addr16
mov
vpandn
mov
shlb
jnp
sbb
mov
push
cmp
jbe
lret
xchg
sbb
lcall
loope
out
in
fwait
and
into
and
inc
jecxz
lods
pop
xor
mov
jo
push
dec
gs
pop
sub
xor
pushf
ret
int
fstpl
lcall
out
jmp
add
in
jge
jg
movsl
lods
je
or
xchg
mov
dec
xor
cmp
iretw
aas
incb
xchg
mov
adc
sub
test
mov
iret
lahf
in
dec
push
jl
mov
inc
inc
cld
add
lret
les
adc
movb
mov
adc
push
xchg
out
mov
je
pop
or
xor
cld
ja
inc
sbbb
pop
cmp
push
lock
sbb
adc
and
push
xchg
jmp
imull
aam
or
or
aam
sbb
lods
push
xor
cld
xor
loope
fimull
popa
movsb
outsb
pshufw
cmp
fwait
sbb
cmp
inc
cli
mov
lret
test
xchg
or
sub
pop
adc
mov
xor
mov
popa
jb
dec
add
lods
cwtl
add
call
jmp
std
mov
xorl
mov
mov
popa
les
xchg
adc
jp
dec
in
or
aad
aas
cmpsb
add
push
xchg
push
sbb
jg
into
rcrb
cmp
jg
lea
and
cmp
xchg
cli
insl
call
sub
mov
mov
jp
jp
std
data16
daa
lock
jae
jbe
addr16
sar
fcoms
dec
jb
dec
bnd
or
and
mov
test
scas
push
xor
pop
sbb
push
mov
clc
sub
out
rcrl
push
push
mov
test
xchg
cmp
mov
mov
stc
mov
inc
inc
cmpsl
aad
sti
mov
xor
sbb
in
fisubl
fnstcw
mov
pop
call
mov
jp
arpl
add
loop
arpl
nop
sub
pop
jecxz
loop
pushf
out
xorl
sub
mov
dec
and
ja
mov
adc
mov
dec
daa
lea
push
inc
mov
sti
push
stos
cmp
dec
rcrb
test
filds
push
jo
aad
cwtl
pop
xchg
in
dec
and
stos
jmp
inc
data16
call
xor
pusha
dec
ficompl
push
inc
aad
adc
out
rcl
lea
loope
jb
lret
add
adc
mov
jne
jmp
ret
pop
push
jae
inc
cmp
mov
fs
enter
sti
insl
pop
cwtl
mov
dec
or
jg
jmp
xlat
cs
push
test
rcll
sbb
xchg
xchg
sbb
push
mov
rclb
adc
or
cmp
aas
mov
push
fidivl
sbb
mov
popf
je
enter
testl
xor
movsl
mov
mov
fcoml
stos
inc
mov
sar
cs
and
adc
dec
fadd
dec
fisttps
mov
test
int3
xchg
ss
add
fldt
repnz
and
lods
sub
loop
xchg
call
cmp
cmp
fldl
pop
pop
int3
fisubrs
mov
fldln2
mov
pop
jecxz
xchg
sbb
lea
fcmovnu
add
pop
cmc
mov
and
mov
mov
dec
jmp
push
xchg
in
pop
dec
cmp
sti
add
adc
mov
sbb
lcall
andl
rcrb
pop
sbb
inc
scas
lret
outsb
add
lahf
aam
aas
xor
inc
testb
sub
jne
cmp
xchg
or
fcoml
test
add
pop
inc
data16
xchg
pop
das
mov
mov
push
rorb
lret
inc
push
jne
popa
test
mov
sbb
xchg
mov
xchg
xchg
push
in
pop
inc
mov
xor
sub
adc
andb
add
in
pop
cmp
repnz
mov
mov
xlat
out
xor
rcl
test
jae
cli
ret
mov
dec
adc
out
sbb
mov
scas
jno
cmpsl
jb
sub
daa
pop
sbb
xor
mov
fucomi
push
and
test
add
pop
cmp
shlb
les
jnp
hlt
dec
dec
fstpl
notl
add
stos
xchg
inc
jb
adc
fadd
or
dec
mov
jmp
dec
jle
push
loop
mov
mov
cld
inc
jl
mov
pushf
xor
pop
loope
enter
inc
stos
hlt
jp
xchg
jle
fwait
test
leave
cmpsl
jmp
cmp
pop
insb
leave
pop
data16
jnp
cld
test
mov
mov
cmpsb
mov
aad
adc
enter
cmp
loop
jmp
dec
ja
mov
out
js
std
lahf
xlat
sbb
push
jae
push
xchg
lea
repnz
xchg
fs
repz
sbb
mov
pusha
loopne
adc
scas
xchg
or
cmpl
mov
popa
mov
cmp
jbe
adc
xor
loope
dec
ds
call
jmp
les
xchg
lret
inc
enter
dec
or
cltd
dec
fs
push
mov
xchg
jecxz
lret
daa
out
add
scas
lea
hlt
rol
mov
scas
inc
add
iret
add
pop
aam
out
mov
pop
inc
or
pop
lcall
repz
inc
jmp
or
test
shlb
negl
push
adcb
jno
ss
scas
loope
mov
fiadds
cmpl
shlb
push
les
dec
dec
std
jg
mov
shlb
adc
xlat
lods
inc
inc
pop
sti
xor
addr16
sub
outsl
out
push
ret
jo
stc
outsl
mov
pop
mov
xchg
jns
lret
xchg
jbe
stos
inc
bound
xor
xor
fisttps
cmc
cmp
sub
and
out
aaa
push
icebp
mov
insb
addb
cmp
addr16
xchg
jo
adc
xchg
push
sub
rorb
mov
xchg
fs
xchg
add
rclb
pop
cmp
imul
and
repz
mov
and
mov
jo
mov
pushf
fstps
negl
movsb
pusha
adc
pop
ret
jmp
std
cltd
xor
lret
inc
mov
cmpsb
sbb
faddl
cmp
jg
push
mul
and
out
out
inc
push
xchg
fstpl
enter
insl
idivl
or
aas
mov
jbe
addr16
in
cmp
jecxz
std
inc
int
cltd
jbe
jbe
pop
pop
ss
nop
lret
fwait
inc
jae
add
add
mov
lahf
or
fwait
popl
or
pop
aaa
push
mov
roll
pop
lret
mov
cld
mov
in
mov
rcrl
mov
jns
mov
fcoms
mov
sbb
cmpsb
movsb
mov
push
mov
push
fstps
or
xor
movsb
icebp
and
pop
mov
and
incl
int3
lds
fldcw
add
dec
jp
ljmp
sub
icebp
int
cltd
sub
ljmp
mov
or
dec
rolb
mov
out
leave
pop
jecxz
and
mov
push
push
mov
mov
ja
xchg
outsl
dec
inc
je
push
lock
dec
daa
xchg
pop
cmpsb
push
jg
imul
icebp
and
daa
push
sbb
dec
mov
insb
in
jae
sti
mov
dec
jmp
fcom
inc
sub
mov
xchg
into
mov
push
or
add
or
int3
jns
pusha
mov
pop
push
das
in
and
clc
je
pop
jge
xor
lahf
repnz
add
popf
jb
xchg
adcl
fisubrl
sub
insb
data16
jbe
test
ret
jle
pop
or
cmp
stos
loope
cwtl
xlat
mov
push
adc
add
hlt
xchg
and
mov
cmp
push
xchg
subl
outsb
mov
sub
and
in
enter
jle
mov
das
shrb
fiaddl
pop
pop
sti
xchg
xchg
ret
jo
fsubr
jns
or
sub
lock
orl
adcb
cmpsl
jmp
aad
push
add
cwtl
mov
cld
push
inc
test
pop
xor
or
call
sbb
fsubl
std
sbb
mov
cmc
lret
cmc
stc
das
or
jo
clc
bound
lea
inc
adc
iret
and
or
notl
rclb
add
push
lcall
jae
adc
push
imul
out
xor
xchg
lret
adc
pusha
aad
dec
lret
add
or
dec
inc
mov
ss
insb
or
notl
imul
lock
push
jns
pop
pop
jmp
fxtract
jnp
test
pop
cmp
aad
ljmp
sti
mov
push
fisubs
les
outsb
mov
xchg
test
jno
movsb
fwait
jl
pop
mov
out
jg
push
xchg
cmpsl
lahf
movsb
ja
rorb
negb
lock
add
or
jo
ret
test
push
cmp
push
lahf
ficoms
ljmp
ret
mov
xchg
movsb
nop
sbb
push
popf
mov
int
sbb
sub
subl
cmp
cltd
jecxz
fbld
test
movsl
sbb
mov
xlat
lock
or
sub
in
sub
lea
int
lea
or
mov
aas
ljmp
ret
jg
xchg
cmpsb
in
pushf
mov
fstpl
or
ret
xchg
dec
push
js
mov
pushf
arpl
add
mov
sub
push
repnz
dec
or
cwtl
scas
cmp
dec
or
mov
mov
and
jne
mov
in
lods
pop
imul
das
lcall
fadds
cld
fbstp
jecxz
adc
popf
jno
xor
jb
incb
inc
add
imul
ret
xor
into
xor
leave
or
sbb
jae
sbb
xchg
or
imul
maxps
jg
popa
in
jecxz
fistps
jae
sbb
es
and
xor
sub
pop
scas
push
lahf
fidivl
fldcw
popf
cmpsb
cmp
lret
mov
mov
inc
and
mov
pusha
xchg
jp
sub
push
xchg
xchg
orb
inc
movsb
imul
mov
sbb
sahf
fcmovb
push
cmp
int3
fwait
and
xor
xchg
or
lock
fsts
sarl
xchg
enter
lahf
sbb
sbb
mov
mov
lds
xchg
sub
mov
lret
lods
aas
dec
mov
lret
push
mov
lret
sbb
and
add
pop
push
test
ret
dec
adc
enter
mov
inc
fidivs
cmp
cmpsl
mov
icebp
fucomi
fwait
xor
scas
sbb
scas
bound
fisttpll
int
xchg
jecxz
mov
xlat
dec
xchg
xor
jp
iret
sub
ljmp
adc
jnp
pop
mov
lret
jnp
addr16
clc
pop
lods
xor
insl
rcrl
lret
js
and
xchg
arpl
shll
and
push
jne
push
shlb
sub
movsl
adc
sub
sti
lods
rcl
add
sbb
sub
dec
punpcklbw
daa
imul
mov
pop
cltd
adc
xchg
push
xchg
movsb
or
or
scas
sub
cmp
jo
and
xchg
or
lcall
in
xchg
addr16
lods
xor
lods
cld
inc
mov
jl
mov
add
rcrl
jl
sub
jp
fwait
or
jecxz
mov
rorb
and
xchg
add
inc
enter
and
add
dec
jns
or
or
mov
xchg
repz
ds
xor
movsb
js
mov
or
lcall
stos
fldcw
pop
daa
jae
and
mov
xchg
pop
adcb
arpl
pop
movsb
add
push
sti
push
push
cmpl
pop
dec
lods
outsl
into
jns
inc
aad
sbb
add
std
sbb
fildll
pop
mov
sarb
push
in
lods
mov
sbb
push
pop
inc
mov
scas
cs
push
mov
insl
lods
or
aas
insb
int
loop
divl
dec
and
cmp
push
push
fstpt
scas
shll
sarl
add
lea
mov
mov
rcll
adc
enter
jnp
mov
mov
imul
xor
xor
or
pop
pusha
pushf
rcl
xchg
xchg
je
in
or
mov
popa
jo
xchg
mov
movsb
lahf
jo
adc
push
jbe
imul
pop
movsl
scas
push
gs
stos
insl
mov
roll
in
xchg
push
adc
ret
sub
cltd
sub
inc
sbb
jge
dec
outsl
add
insb
jmp
repz
fdivrs
mov
leave
enter
out
lock
ss
xchg
sbb
and
lods
clc
scas
andl
movsl
pop
pop
sub
or
fsubrs
stos
fisttpl
out
cmpsl
push
test
push
cmc
orl
sbb
enter
or
int
jge
cmp
xor
test
xchg
and
je
jmp
pushf
push
xor
add
mov
adc
push
push
and
cs
jecxz
mov
cmpsb
mov
mov
cwtl
inc
cmp
int3
daa
jne
mov
clc
jmp
mov
jns
sub
jnp
test
pushf
sbb
sti
mov
cmpb
aaa
arpl
jge
or
clc
push
mov
push
mov
cmp
adc
push
mov
movl
dec
inc
mov
out
push
xchg
js
mov
adc
lea
clc
nop
push
in
or
addl
push
mov
cmp
out
test
cmp
pusha
fcmovu
adc
iret
cmpl
sahf
outsl
loop
fimull
paddusb
div
sub
inc
xchg
mov
test
add
pop
dec
xchg
cmpsl
inc
inc
pop
xchg
or
and
dec
lcall
inc
inc
xchg
test
dec
gs
sbb
mov
outsl
imul
dec
mul
loope
call
movsb
xor
cmp
popf
adc
push
add
cmpsl
addr16
aas
movsl
xor
sbb
out
pop
or
mov
movsb
lahf
nop
lret
push
pushf
adc
fidivs
sbb
adc
add
sub
pop
shl
mov
fdivl
mov
das
mov
dec
aaa
mov
push
jae
mov
xchg
cmp
mov
and
cmp
push
add
addr16
daa
xchg
popf
dec
mov
inc
mov
scas
mov
inc
rorl
inc
sbb
imul
sbb
xor
pop
inc
xchg
push
pop
add
movsb
test
lret
inc
sub
rcr
vmwrite
test
adc
loopne
cmp
cmpsl
icebp
in
pop
pop
out
or
iret
pop
scas
addr16
cmpl
cmpsb
test
and
sbb
inc
mov
test
imul
push
mov
fstpl
outsl
js
sub
out
mov
cmp
xor
mov
inc
test
fstps
sbb
push
add
rolb
pop
iret
outsb
cli
xchg
mov
je
les
loopne
sub
rorb
push
ss
shrb
mov
push
xor
bound
int3
pop
shlb
test
adc
pop
pop
cs
stos
cmp
nop
pusha
fmuls
xor
sub
popa
ficompl
add
inc
dec
sbb
enter
mov
dec
lret
daa
mov
adcl
pop
cmp
negb
cmp
xor
cmp
push
cmp
inc
das
pop
xchg
cwtl
sbb
adc
daa
fs
dec
gs
jecxz
arpl
inc
inc
addr16
insb
add
cmpsl
push
mov
call
mov
shll
or
lods
mov
add
lahf
in
lret
arpl
adc
jl
out
mov
xor
jmp
sahf
cmc
stos
push
or
outsb
rcl
pop
xor
jp
or
jl
xchg
aas
and
fcoms
add
jo
sbb
push
movsl
inc
xchg
sub
inc
ror
rcrl
insl
and
scas
xorl
test
inc
fs
mov
jne
mov
dec
int3
scas
addb
les
ss
js
subb
adc
jno
sub
xchg
and
or
jne
and
scas
push
scas
or
mov
popa
sub
shlb
imul
outsb
popf
xchg
out
xchg
jo
jp
sub
lahf
fbstp
cmc
sahf
aam
mov
insl
lret
or
int
push
imul
lods
sub
lcall
sub
pushf
test
jnp
mov
fwait
out
mov
and
repz
in
cmc
mull
jge
ja
or
mov
cld
pop
sahf
bnd
fs
clc
sub
idivb
int3
xor
das
test
pop
xor
jne
popf
js
mov
notb
xchg
pop
inc
ret
icebp
loope
xorl
stos
mov
addb
add
push
jnp
mov
insb
imul
add
sbb
cmp
jb
scas
fisubrs
xor
cmpsb
mov
jns
nop
std
aam
xor
fwait
add
pusha
push
push
and
mov
inc
mov
imul
cld
arpl
cmpsb
xlat
xchg
jns
inc
mov
adc
aam
dec
into
mov
adc
inc
pusha
xchg
jecxz
ljmp
lods
jns
leave
xchg
sub
stos
mov
push
fistpl
jle
push
add
or
mov
pop
xchg
lock
push
mov
cwtl
push
out
loopne
lcall
xor
cs
cmpsb
stc
hlt
xor
lea
cmpsl
and
push
push
add
add
icebp
jbe
imul
push
xchg
addr16
inc
fldt
scas
cmc
add
sub
fldt
lods
mov
je
loope
cmp
fwait
inc
jne
xorl
cmp
sar
stos
jnp
mov
xor
leave
xchg
in
aas
push
cmp
je
test
fstl
and
mov
das
xor
jl
push
scas
lahf
aad
clc
je
hlt
mov
lcall
sbb
jl
repnz
dec
das
testb
mov
dec
inc
sub
xchg
mov
pop
pop
lahf
hlt
mov
adc
ss
arpl
mov
testl
xchg
shll
jmp
ss
ja
ja
xchg
mov
mov
fstpl
pop
lods
inc
rorb
cmpsl
push
inc
test
push
dec
stc
inc
mov
xor
pusha
loope
jbe
enter
or
mov
bswap
inc
mov
ds
pop
mov
push
jl
mov
hlt
addr16
les
in
test
xor
cmp
mov
inc
xchg
mov
out
loop
arpl
icebp
lods
pop
mov
dec
pop
aad
pop
dec
sbb
xlat
mov
dec
inc
insb
aaa
les
push
ret
xor
stc
pushf
les
popl
xor
dec
loope
addr16
test
stos
and
out
adc
mov
mov
add
pusha
cld
xchg
pop
cli
xchg
jge
out
loope
xchg
rorb
cmc
dec
pop
jle
stos
mov
clc
adc
dec
enter
pop
xchg
in
push
inc
adc
sbb
sub
ss
and
mov
inc
mov
dec
cmp
pop
pop
jb
sbb
vmaxpd
cmp
sbb
pop
sti
fmul
mov
ljmp
dec
repz
out
ljmp
fiadds
and
fiaddl
mov
mov
dec
std
sbb
jp
aam
aas
add
inc
cmpl
std
out
test
int
xor
fnstsw
xchg
das
mov
jno
push
xchg
inc
ja
jae
cs
jle
mov
test
and
fcomps
pop
cmpsl
in
push
jae
jbe
push
cmp
dec
mov
pop
cmp
outsl
aam
fs
imul
cmp
mov
stos
xchg
dec
subps
dec
push
cmp
add
xlat
rcrb
mov
adc
adc
int3
jbe
incl
and
lods
fcompl
hlt
pop
pop
adc
aas
dec
hlt
mov
mov
pop
js
mov
cld
test
xor
arpl
mov
mov
fadds
call
mov
cmp
scas
aam
imull
aas
push
lods
xor
add
inc
cmp
int3
jecxz
xchg
or
sahf
test
mov
or
pushf
or
test
mov
cli
test
popf
insl
insb
add
adc
les
stos
sbb
sbb
pop
cmp
sbb
into
inc
sbb
stc
xchg
jne
add
rcr
xor
std
pop
push
xor
mov
in
cli
les
inc
push
fwait
mov
or
add
ret
adc
int3
fsts
sbb
repz
mov
dec
adc
sub
add
sahf
into
lcall
lock
push
or
shlb
popf
dec
mov
jns
or
cli
push
dec
test
add
loopne
out
jl
dec
dec
in
mov
push
mov
hlt
cmp
outsb
je
xlat
sbb
xchg
cltd
push
stos
scas
ja
std
sub
stos
enter
out
aam
pop
push
icebp
push
push
push
sbbb
push
inc
push
popa
jmp
leave
sub
lds
test
mov
xor
adc
xorb
push
jns
es
sub
fisubrl
fsubl
sbb
js
jle
test
pop
iret
sbb
outsl
jecxz
ret
pop
xchg
mull
lea
sti
sbb
dec
test
mov
inc
mov
xchg
push
je
add
out
ss
push
mov
push
repnz
inc
popf
sub
mull
in
imul
xchg
cld
fldl
fnstsw
pusha
fdivl
pop
push
mov
ja
sahf
push
popa
int3
aam
out
into
adc
clc
mov
or
pop
scas
int
mov
in
mov
and
pop
sub
fiaddl
jg
pop
mov
inc
out
mov
std
dec
stc
fisubs
mov
sbb
mov
stos
insl
fidivrs
out
mov
addr16
or
ficompl
rcrb
pop
jle
dec
imull
mov
or
jmp
push
repz
cmpl
std
lds
frstor
jb
dec
nop
faddl
pop
sub
push
cmc
pop
inc
or
mov
cmp
jp
aad
xchg
jmp
xor
dec
mov
iret
fildll
xchg
mov
out
mov
or
adc
mov
loope
mov
inc
int3
les
jnp
mov
in
add
aas
jae
imul
fisubs
std
add
ror
fwait
mov
and
sub
mov
enter
testb
pop
loop
clc
mov
xor
mov
jnp
sub
jbe
addb
sub
adc
repz
sub
lea
sbb
mov
popf
cmp
mov
ficompl
dec
add
pop
lods
sbb
add
shll
and
or
push
mov
icebp
scas
xchg
stc
test
fldcw
jae
sbb
rclb
test
sbb
or
fsubrs
out
int3
or
cmpsb
cs
jecxz
aad
mov
dec
jmp
test
outsl
pop
mov
cltd
mov
lcall
idivl
iret
in
xchg
xchg
test
jae
std
data16
push
and
mov
imul
mov
adc
cmp
repnz
pop
mov
ds
lods
xor
mov
mov
daa
mov
mov
insb
jg
in
and
xchg
imul
cwtl
pop
push
incl
ss
adc
mov
pushf
xor
test
imul
jmp
aaa
and
xor
outsb
cmp
out
gs
pop
or
add
or
jge
dec
add
out
rorb
adc
cmp
pusha
sub
push
add
jl
sbb
in
es
fmulp
lods
loop
jg
repnz
xchg
insb
ljmp
iret
or
ret
mov
gs
cmp
push
pop
push
insb
pusha
sub
mov
xchg
fs
insb
cmc
pop
mov
dec
inc
jns
sub
jns
dec
mov
in
dec
pop
fcomp
gs
and
cmpsb
push
jl
push
push
icebp
sub
cs
mov
mov
cltd
aas
shll
out
dec
ror
aaa
adc
sbb
push
or
repz
push
pop
xor
cld
into
popa
ljmp
push
dec
adc
aaa
push
cmp
add
push
push
xor
loopne
mov
inc
pop
fisubl
dec
jbe
or
and
xchg
fisubrs
leave
in
sbb
movsb
lahf
mov
pop
inc
push
add
jb
stos
pop
fnstcw
jbe
movsb
lods
test
mov
mov
repnz
bound
lcall
cmpsb
push
jl
or
adc
push
mov
jmp
sbb
popf
mov
insl
add
das
fs
mov
cmp
loop
dec
sbb
mov
mov
sub
inc
cvtpi2ps
add
out
cwtl
pop
je
dec
and
pop
fwait
pop
dec
movsb
mov
out
dec
adc
mov
imul
mov
cld
sbb
fmuls
jle
pop
pop
addr16
out
cmp
outsl
fwait
lea
ror
mov
fsubrp
ljmp
aad
jle
clc
ret
mov
call
pop
popa
popf
mov
inc
mov
inc
cmp
mov
xor
xor
or
pop
or
or
fdivl
jbe
popf
push
mov
pop
fwait
inc
inc
cmp
arpl
dec
sbb
adc
push
cmpsb
jno
cmpsb
sbb
ret
mov
pop
pop
or
mov
std
and
mov
inc
sahf
ss
fists
shll
push
std
fcoms
add
rcl
adc
jg
or
fadds
cmc
adc
lock
pop
mov
cs
daa
and
mov
mov
hlt
push
dec
stc
cli
and
das
jl
in
dec
in
ljmp
mov
loopne
and
iret
mov
fists
scas
repz
mov
push
xchg
insl
pushf
push
jne
or
mov
in
inc
gs
loopne
das
sub
push
mov
jae
stos
in
xor
ret
mov
add
pop
sub
gs
mov
mov
or
lcall
jae
xlat
xor
arpl
adc
insl
aad
repnz
push
sub
mov
mov
cld
dec
insl
subl
out
mov
add
cli
daa
movsl
fildll
pusha
cmp
outsl
xor
out
fbld
xchg
push
jl
cltd
jo
push
dec
out
in
das
lahf
ja
lea
mov
sbb
cmp
xor
pop
xchg
test
jae
jo
xor
mov
sbb
ss
cmp
jbe
subl
aad
dec
fisubs
push
sub
cmc
xchg
data16
cmp
movsb
mov
cmpsl
sbbb
fldl
push
lret
lods
or
mov
xor
shll
jbe
xor
inc
iret
mov
js
inc
sub
mov
inc
pop
fdivs
cmp
gs
lods
hlt
movsl
loop
dec
dec
addr16
imul
inc
cmp
pinsrw
shll
leave
cli
test
rcrb
inc
adc
repnz
lock
in
scas
shrb
mov
test
mov
fs
call
out
jo
in
pop
mov
xchg
popf
test
cmp
cmp
ljmp
push
outsb
push
mov
orl
mov
push
repz
jo
inc
in
adc
or
ja
fcoms
push
fistl
jae
fidivrl
mov
cmpsl
inc
sub
mov
mov
jno
push
or
dec
hlt
shlb
sub
xchg
xchg
and
and
mov
sbb
scas
sbb
mov
jge
sub
scas
mov
lock
jnp
ds
mov
add
mov
mov
sbb
cmpsb
or
insl
imul
cli
adc
decb
ss
xor
fsubs
icebp
push
mov
lahf
lahf
cmpsl
movsl
push
aas
cld
imul
and
scas
adc
push
lcall
mov
ss
xor
shlb
sahf
push
jnp
icebp
call
adc
cli
data16
inc
mov
pop
pop
cmp
push
jg
or
xchg
lods
das
mov
mov
and
std
pushf
add
stc
test
mov
and
push
outsl
addr16
sbb
imul
inc
mov
push
or
in
mov
jge
leave
mov
dec
and
imul
mov
and
fcmovnbe
push
sbb
xor
inc
sbb
daa
inc
or
or
call
add
dec
and
js
popa
jns
ret
subl
mov
mov
jg
loop
push
icebp
rcr
jnp
ljmp
inc
popa
mov
icebp
cwtl
cmp
mov
push
ret
ror
je
sub
push
jns
pushf
inc
pop
les
cmp
shll
cmp
jmp
or
sbb
ljmp
fs
ret
in
fbld
push
add
int3
nop
mov
mov
lret
fnstenv
sbb
mov
in
mov
je
icebp
or
mov
mov
aas
scas
mov
pop
mov
cmc
mov
roll
lods
xchg
rcll
inc
xchg
cmc
aas
sub
int
fisttps
inc
sub
jge
add
jne
insl
mov
stc
sti
cmp
jmp
sub
cltd
lcall
add
ror
adc
and
mov
in
ja
lea
and
sbb
pop
lea
mov
daa
push
xchg
and
les
mov
out
push
mov
add
xor
and
or
or
mov
mov
pushf
inc
sbb
xchg
inc
ficompl
inc
loope
xchg
aaa
mov
mov
push
jno
pop
xchg
ljmp
xchg
cld
cmpsl
adc
imul
jge
arpl
cmpl
insb
in
xor
xchg
xor
pmaxsw
sbb
mov
loope
ja
fsubrs
frstor
jnp
xor
imul
jnp
jp
push
or
out
jno
loop
xchg
test
or
aad
stos
or
and
xor
jmp
cmp
and
inc
inc
push
cmpl
cmpsb
clc
sbbb
rcrb
in
add
in
push
cmp
flds
rorb
mov
jne
mov
dec
bound
int3
and
insb
push
cmpsb
dec
fmull
scas
mov
sbb
inc
dec
inc
lret
adc
hlt
rcr
sub
or
and
mov
decl
into
inc
shll
loop
mov
mov
or
repnz
fwait
int3
hlt
rcrb
enter
mov
fwait
mov
enter
int3
stos
mov
mov
fisubrl
in
sub
xchg
push
daa
ja
call
mov
popf
in
imull
lcall
dec
sbb
repz
jbe
xor
mov
xor
mov
add
mov
xchg
insb
inc
mov
out
dec
leave
lock
adc
jne
cmp
std
movb
sub
sahf
out
out
cmp
into
jne
fs
cmp
cmpsb
push
mov
xchg
je
js
aad
sahf
add
adc
int3
sub
xchg
fsts
outsb
cmp
mov
adcb
shr
loope
movsb
sbb
movsb
dec
jo
rorb
scas
arpl
lret
xchg
jecxz
dec
pop
nop
lods
daa
sbb
pop
add
xor
inc
mov
xchg
jb
mov
pop
out
cmp
mov
fwait
pop
rorb
aam
sub
js
into
pop
mull
negb
pop
lret
fadd
adc
stos
aas
aad
adc
jle
cmp
lock
cmpsl
insl
dec
cmpsl
xlat
shrl
mov
fisubs
push
xchg
pop
roll
or
xorb
cmp
mov
fcmovnb
or
lret
adc
add
daa
mov
pusha
into
data16
je
pushf
call
sti
fisubrs
rorl
sub
add
fwait
inc
cmp
movsl
out
cmp
jne
loopne
mov
or
rorb
mov
jno
mov
or
insl
mov
jmp
js
add
es
test
xchg
xor
scas
pop
cmp
das
shl
sub
dec
or
call
rolb
jp
shr
sub
mov
inc
dec
push
lahf
push
jb
aad
push
mov
enter
call
das
inc
mov
sub
xchg
ret
jo
xchg
pop
fdiv
jo
mov
mov
fidivs
mov
xor
stos
rol
lea
and
add
xor
sbb
lahf
mov
inc
mov
clc
xchg
and
roll
cmpl
sub
mov
repnz
jb
mov
test
inc
pop
xchg
xchg
mov
mov
out
iret
push
in
cltd
inc
mov
cwtl
movsl
pushf
jle
fsts
xchg
lcall
daa
pop
std
xor
movsl
and
push
insl
sbb
mov
adc
mov
jae
cmp
out
rol
dec
test
pop
mov
pop
pop
mov
xor
jmp
mov
push
mov
adc
sub
stos
mov
xchg
rorl
iret
in
sbb
mov
add
in
icebp
mov
test
jl
inc
add
sbb
mov
das
sub
mov
mov
mov
stos
pusha
stc
push
fs
xlat
out
sbb
push
xor
pop
push
les
stos
int3
adc
out
aam
scas
mov
add
mov
loop
xor
imul
pushf
dec
xor
arpl
inc
jne
dec
xchg
ret
in
inc
xor
pop
aaa
fwait
dec
fiaddl
jl
mov
push
pop
dec
sbb
popf
out
mov
sub
or
or
mov
lods
xor
repz
lcall
in
pop
loope
mov
loop
iret
sub
rorl
sahf
faddl
adc
flds
lret
test
jbe
rorb
pop
inc
adc
xor
out
dec
push
xor
out
add
inc
mov
and
fsubrs
fwait
loope
sbb
stc
ds
xlat
int3
loopne
fs
adcl
xlat
roll
arpl
xchg
lods
mov
rorl
cmpb
mov
or
pushw
out
mov
and
les
adc
pop
or
xor
fsub
shll
popa
mov
add
xor
cmpsl
loop
in
or
jl
xor
ljmp
dec
jno
add
in
jnp
mov
and
imul
arpl
push
xor
xchg
stos
inc
xchg
popf
lods
sbb
int3
out
and
lahf
out
sti
sub
movb
and
aam
je
lahf
mov
and
push
clc
jg
jmp
adc
mov
jg
jge
imulb
aam
push
les
loope
andb
mov
sahf
dec
daa
hlt
mov
jno
mov
dec
dec
fwait
shrb
mov
mov
arpl
jne,pn
push
cmp
push
aas
xor
mov
or
xchg
aas
jne
mov
les
or
mov
scas
ror
orb
mov
sub
arpl
and
push
ss
jle
push
push
out
subb
gs
inc
rclb
mov
cmpsl
push
pushf
mov
pop
adc
jge
in
hlt
push
sbb
scas
pand
jle,pt
push
clc
inc
call
daa
hlt
mov
ss
cmp
pop
test
lea
cmp
and
addr16
sub
mov
pop
cld
cwtl
icebp
push
imul
bnd
lock
out
dec
lods
inc
add
dec
cmp
mov
mov
mov
bound
not
shlb
into
ficomps
and
insl
inc
outsl
xchg
and
xor
push
mov
or
repnz
aad
mov
fcomp
or
push
arpl
mov
sub
pop
es
jl
mov
dec
mov
xchg
das
xchg
repnz
mov
hlt
cmp
je
pop
add
scas
ds
hlt
pop
sti
and
fisttpl
inc
xchg
imul
xor
jne
loop
pushf
xor
xor
push
cmp
mov
mov
inc
inc
ja
jmp
push
push
in
or
insl
bndldx
lcall
or
in
jl
mov
sbb
loopne
test
mov
cli
mov
cmp
pop
inc
xorl
fidivl
dec
lods
jge
aam
and
xor
jmp
push
adc
in
div
mov
lock
add
push
fwait
jno
mov
int
jmp
mov
jb
data16
in
cmp
add
mov
xor
mov
push
cmp
sbb
and
bound
xchg
bound
dec
arpl
fidivrs
popf
dec
nop
mov
mov
les
jne
add
and
sbb
popl
mov
push
jecxz
iret
cmp
push
and
inc
outsl
mov
sahf
lcall
cld
inc
xchg
adc
in
popf
ds
loop
test
jb
mov
or
nop
sub
dec
jnp
fsubrp
and
mov
gs
lea
shl
sbb
jb
call
mov
cmp
sub
ljmp
jmp
arpl
jne
mov
fistps
enter
dec
mov
sbb
loopne
mov
adc
bound
cmp
lock
fidivl
stos
pop
jne
lods
xchg
inc
outsl
lds
mov
std
mov
jmp
cmp
mov
pop
cmp
fcompl
int3
add
jae
bswap
shrb
stos
mov
test
pop
lds
add
pop
rorl
push
out
or
pop
add
das
ret
fisttps
int
cwtl
rcr
mov
es
jecxz
scas
mov
inc
sbb
or
outsl
aad
sbb
add
fcoml
add
or
xchg
sti
push
mov
push
mov
cmp
insb
shlb
cli
insl
ret
inc
shll
dec
cmc
lods
test
sarl
or
mov
xchg
push
es
mov
or
xchg
dec
dec
roll
dec
outsb
pop
outsb
sub
dec
sbb
mov
fisttps
es
out
adc
aad
bswap
add
int
xor
scas
dec
mov
fisubl
pop
adc
in
orb
and
in
cmp
inc
cmp
xor
adc
aas
in
pop
dec
nopl
aaa
arpl
inc
shrl
mov
mov
and
mov
dec
lea
jg
push
outsb
cli
mov
mov
jno
adc
xchg
jg
and
push
mov
movsb
dec
les
mov
push
jne
sbb
pop
mov
mov
in
and
mov
ds
jg
push
cli
fstpl
or
add
shr
jmp
shlb
jecxz
shl
xchg
lods
xchg
adc
mov
outsb
ret
pop
test
jns
jle
mov
fimuls
mov
mov
cmp
inc
das
push
sbb
icebp
cmc
stos
or
mov
sbb
push
jne
fstpt
adc
dec
dec
mov
loop
stos
fstps
or
xchg
xchg
jmp
xchg
or
mov
or
in
xchg
lods
push
adc
push
popa
and
arpl
out
mov
ljmp
xchg
mov
push
daa
test
aad
nop
mov
push
call
push
sub
jb
ret
lock
mov
xchg
pop
sbb
xchg
lods
jl
dec
dec
test
and
adc
or
bound
mov
lcall
inc
add
push
sbb
mov
dec
push
sar
xchg
push
icebp
xchg
jae
xor
cmp
adc
push
rcr
cmp
cmp
pop
pop
icebp
jo
add
int3
jp
cmp
das
push
fistpll
loope
xchg
add
xchg
jp
das
dec
xchg
nop
jge
adc
fadd
jb
mov
xchg
in
mov
add
and
lret
mov
push
aas
je
jmp
xchg
insb
or
out
in
lods
fildll
sti
sbbb
movsl
jno
icebp
movsl
lods
loope
les
or
sub
mov
out
inc
fnsave
push
stos
push
dec
lahf
loope
les
repz
sbb
push
dec
mov
dec
test
cmpsl
in
and
aaa
lds
insb
pusha
fwait
pop
pushf
cmp
mov
mov
xchg
dec
dec
ret
or
pop
xor
lret
sbb
sub
stos
push
push
inc
sbb
int
jmp
movsl
jg
insb
and
loope
outsb
stos
mov
gs
bnd
ds
add
outsb
ret
mov
insb
int
rol
jbe
das
xor
out
test
dec
and
daa
adc
or
sub
xor
aam
fs
sahf
sbbl
or
jmp
cmpsb
out
movl
scas
cmp
fisubrs
pop
mov
jg
xor
aad
ret
in
pop
stc
test
movl
in
cltd
rorb
incl
or
lock
leave
lods
jp
iret
sbb
push
mov
addb
dec
std
mov
dec
xchg
jb
and
divb
jbe
in
mov
insl
mov
ja
mov
add
fnstenv
bound
inc
push
jno
mov
push
mov
rorl
es
pop
ljmp
loope
sti
mov
jecxz
pusha
push
mov
mov
push
inc
mov
sub
jmp
pop
mov
add
loopne
es
lods
fcmovne
pop
dec
mov
repz
inc
cli
xchg
sbb
pop
or
push
xlat
popa
out
jecxz
dec
mov
xor
pop
test
inc
pop
int3
repnz
mov
loopne
insb
test
cmp
ret
fdivl
sbb
fisttps
sub
cltd
mov
or
mov
mov
mov
jno
lahf
dec
xchg
add
ljmp
es
rcl
dec
adc
sub
inc
sarb
jecxz
jecxz
push
mov
jge
sub
adc
testb
add
jbe
adc
adcb
push
mov
mov
jne
stos
clc
mov
sub
rcpps
sbb
push
and
pop
es
ljmp
int
xchg
push
out
mov
adc
repnz
jmp
mov
popa
outsl
xor
jb
shrb
sbb
ljmp
dec
std
push
ss
mov
and
ficoms
xor
mov
lock
aad
mov
inc
fdivrp
jp
push
arpl
xor
js
addb
xchg
and
inc
sub
jne
imul
jle
inc
inc
cmp
mov
push
dec
adc
push
dec
add
loop
dec
inc
or
push
dec
push
push
in
or
lods
xchg
bts
jg
inc
mov
cli
dec
inc
sbb
jnp
pop
dec
and
test
mov
sub
call
or
arpl
mov
xor
mov
jp
lods
cmp
dec
int
dec
add
sbb
into
pop
mov
xlat
inc
jge
xchg
mov
sub
dec
repnz
lods
jecxz
mov
mov
lret
dec
jo
jle
and
loop
stos
popa
imul
and
fcoml
pop
popf
fldenv
aam
push
lods
in
std
adc
mov
imul
fcoml
adc
cmp
mov
dec
mov
xor
jb
xor
pop
push
mov
mov
lods
mov
pushf
sub
lods
xor
incb
and
cmp
jge
sbb
jne
sbb
sub
xor
mov
cwtl
test
inc
je
scas
inc
push
gs
and
mov
stc
mov
and
push
jecxz
dec
mov
or
adc
iret
fsub
inc
iret
mov
mov
aas
lahf
js
sub
push
mov
add
pop
inc
cmp
testl
cmpb
frstpm(287
sbb
cmp
fwait
and
fmuls
add
dec
aad
iret
lcall
das
fcomp
push
pushf
xchg
mov
lea
iret
fstpt
iret
xchg
stos
or
addb
pop
imul
push
test
inc
inc
push
scas
pushf
aaa
inc
xor
sbb
xor
sti
nop
les
pop
push
cmpl
test
test
inc
xchg
out
cmp
fldl
cwtl
les
dec
cmp
nop
dec
movsl
clc
cmp
aam
sti
ss
mov
jns
cwtl
loopne
xchg
je
mov
or
jb
jae
pop
jecxz
and
mov
faddl
enter
cltd
jmp
dec
imul
xchg
cmp
daa
idivl
and
lahf
or
mov
sub
mov
pop
popf
pop
nop
sub
sub
out
mov
subl
mov
sbb
movsb
xchg
and
sbb
and
fnstenv
cli
out
mov
jae
test
xor
jns
mov
arpl
stos
add
loopne
mov
push
jbe
scas
dec
and
icebp
shl
hlt
sbb
jl
addl
push
sarl
jnp
fwait
negb
mov
les
jge
push
adc
push
pop
fmuls
stos
mov
xor
push
mov
and
movsb
jo
pop
adc
jnp
mov
sti
mov
lds
imul
inc
ja
adc
stos
push
lods
dec
sbb
cmc
std
shlb
sbb
inc
sbbl
push
int3
xchg
sub
sbb
xorl
addb
push
cmpsb
push
adc
pop
in
dec
inc
mov
or
imul
add
scas
pop
pop
jns
adc
cmp
sti
sbb
fiaddl
jo
dec
pop
addl
into
xchg
stos
out
adc
lock
fdivl
testb
js
loopne
lret
jg
sbb
mov
push
aad
sub
fisubrl
in
adc
push
adc
mov
loopne
jp
mov
push
dec
mov
repz
fisubs
adc
mov
dec
sub
scas
into
sbb
ret
xchg
jo
xchg
cmp
xlat
or
pop
inc
fnstcw
out
jg
repz
push
jbe
and
pop
xchg
into
insl
shrl
push
aaa
push
xor
sbb
mov
push
sub
or
dec
adc
xchg
in
dec
xchg
mov
cmc
insl
xchg
loopne
scas
ljmp
fbstp
int3
dec
insb
inc
mov
inc
or
pop
mov
xchg
iret
mov
push
adc
pusha
rcrb
cmp
and
ficoms
shll
jno
adc
sub
xor
xlat
addb
and
stos
pop
hlt
adc
mov
fisttps
scas
movsb
cmp
or
mov
mov
inc
sbb
mov
mov
adc
lds
pop
orb
inc
ds
push
bound
addr16
es
sbb
aaa
and
scas
mov
into
shrl
mov
jge
pop
aaa
or
dec
cmp
cmp
push
pop
dec
adc
sbb
xor
out
idivl
ss
dec
xchg
push
lcall
push
stos
dec
ss
sub
test
test
pop
nop
jge
pop
cli
or
push
dec
shlb
out
insl
jns
in
inc
push
or
out
or
repz
cmp
cmp
test
adc
insl
imul
ficoms
outsl
sub
pop
leave
int
outsb
inc
rcrb
nop
push
mov
ret
jnp
pmaxsw
lcall
jl
xorb
loopne
movl
sub
rorb
mov
int
mov
push
stos
les
mov
sub
lahf
adc
out
mov
jo
sub
outsb
pop
adc
mov
sub
add
dec
insl
sub
repz
sbbb
push
sti
adcb
fstpt
roll
xor
ret
into
push
mov
mov
cltd
daa
mov
lea
mov
leave
lock
lods
in
or
out
shlb
dec
enter
iret
scas
outsb
cmp
dec
dec
cwtl
fisttps
push
clc
xor
inc
scas
out
push
xor
inc
ds
mov
add
pop
lods
fdiv
stos
or
mov
popf
outsb
pop
repnz
sub
mov
adc
and
xor
dec
int3
shrd
fsts
pop
jmp
xor
jb
iret
mov
outsl
sahf
inc
sbbb
push
inc
ja
jge
je
dec
xchg
jle
lds
mov
mov
mov
stos
mov
pop
xchg
adc
mov
inc
inc
push
std
fnstsw
inc
or
xor
andl
sub
movsl
mov
sbb
inc
daa
inc
push
cmpsl
inc
dec
outsb
mov
cmp
pavgb
decl
je
push
stos
lock
mov
enterw
lahf
mov
xchg
pop
aaa
xchg
testl
add
test
ljmp
pop
push
inc
add
fsub
inc
aaa
loope
adc
mov
aaa
pusha
jl
cmp
pusha
jb
add
outsb
mov
adc
xor
mov
shr
fidivrs
pop
mov
mov
xchg
add
sbb
xorb
lods
xor
pusha
inc
jl
mov
loopne
arpl
jne
push
push
repnz
repz
mov
lret
jmp
push
jb
imul
inc
adc
xchg
pop
jmp
xchg
into
mov
hlt
cmp
cs
jns
xlat
push
mov
xchg
adc
jg
imul
scas
insb
cli
jae
out
mov
inc
cmc
push
lock
loop
in
adcl
popf
je
and
adc
cwtl
cmp
dec
inc
mov
out
movsl
scas
push
dec
fcmove
xchg
mov
cltd
dec
add
out
sbb
pop
imul
or
push
mov
divb
cld
mov
mov
mov
addb
inc
dec
dec
cmp
push
shll
xchg
lahf
pop
push
dec
daa
hlt
push
sbb
pop
dec
or
stc
or
mov
sti
mov
inc
psrld
lods
out
icebp
js
sub
lods
icebp
lcall
or
pop
ret
cmp
repnz
mov
mov
xchg
shrd
jno
outsb
push
test
mov
in
fildl
fnsave
cltd
call
jmp
lret
and
and
pop
mov
pop
mov
mov
aad
loope
mov
and
push
call
aas
iret
push
in
sub
mov
jge
push
int3
inc
shll
andb
mov
mov
int
std
sbb
in
mov
push
cltd
pop
pop
shrl
or
in
or
ss
cmpsb
data16
outsl
jge
rol
adc
fs
mov
addr16
push
lret
inc
cmp
xchg
push
xchg
call
or
movsl
mov
sub
xor
dec
aas
adc
nop
cmp
jecxz
js
jmp
push
outsl
notl
outsb
scas
test
sub
dec
pop
popa
add
add
push
jbe
mov
out
pop
add
sti
and
add
sub
push
jns
out
sti
cltd
cmovo
xchg
adc
hlt
pop
shll
xor
sub
dec
jge
or
jp
sbb
jbe
lea
xchg
daa
jae
stos
enter
adc
lods
test
aam
fs
adc
xchg
jl
les
or
insb
and
pop
sub
xchg
fistps
fldcw
dec
je
notl
pop
std
aaa
outsl
jbe
mov
les
scas
cld
sub
repz
dec
xchg
dec
out
loopne
xchg
cmp
mov
sub
rcrl
mov
sti
add
sub
push
sub
or
and
push
repz
adc
movsb
add
cmp
bnd
inc
arpl
mov
rcrl
push
mov
fucom
add
mov
adc
les
je
jl
ja
aam
dec
xor
lahf
repnz
sbb
aas
pop
xchg
push
and
je
fs
std
mov
jbe
cmp
cmpsl
mov
mov
and
adcb
dec
pop
aad
test
dec
ja
or
xchg
insl
xor
mov
mov
jle
int3
add
xor
cmpsl
movsl
xor
dec
xchg
je
dec
in
outsb
pop
sub
js
pusha
in
mov
adc
fwait
adc
mov
mov
xor
mov
push
sbb
pop
mov
push
pop
pusha
mov
dec
cwtl
cltd
pop
sub
add
add
jp
push
lods
sbbb
icebp
pop
sbbb
sbb
push
jmp
in
scas
lea
outsl
call
or
enter
inc
pop
mov
cmpsb
pop
cmpsb
sbbb
test
xchg
test
sub
shrl
popa
shrb
xor
fnsave
popf
cmp
push
das
insl
inc
mov
mov
jnp
fchs
das
dec
mov
lds
in
orl
jl
jle
cmp
mov
mov
mov
and
xchg
cmpsl
cmp
xchg
cmc
mov
jl
add
mov
sbb
in
jle
int
lea
popa
push
test
xlat
pop
jns
xor
xor
test
push
repz
call
pop
movsb
mov
test
pop
and
push
ljmp
adc
out
js
pop
xor
push
sahf
sbb
pushf
cli
inc
lods
popa
jle
adc
iret
mov
movd
hlt
push
ljmp
cmp
fdivs
jp
and
inc
adc
jbe
mov
movsl
clc
xchg
inc
fsts
sahf
inc
push
mov
add
jo
lods
cwtl
les
fistpl
mov
jae
inc
popf
jg
xor
xchg
mov
mov
mov
and
test
popa
stos
das
jno
scas
shll
sub
call
addr16
je
xchg
mov
adc
rolb
arpl
arpl
movsb
test
cmp
jg
and
hlt
mov
or
add
testb
mov
cmp
fidivrs
mov
pop
outsl
testb
mov
imul
adc
lods
mov
sub
daa
imul
xchg
sbbl
xchg
mov
stos
xchg
aad
push
add
and
inc
ud1
dec
mov
ds
pop
hlt
incl
xchg
int
imul
jnp
sbb
dec
js
push
shlb
adc
pop
adc
filds
or
cmp
mov
xchg
xor
push
and
pop
add
aad
dec
pop
sub
xchg
insl
push
mov
pop
mov
sbb
dec
mov
mov
data16
or
rolb
add
lahf
enter
cmp
inc
mov
mov
call
cmc
in
pop
stc
or
lock
mov
call
pop
inc
cs
repz
inc
or
jmp
or
mov
fisttpll
test
fstpl
inc
cld
idivl
fiadds
push
mov
cmpsb
sub
push
aad
dec
pop
jge
jge
ljmp
int
mov
js
mov
jb
in
mov
movsb
out
cmpsl
fcmovb
mov
and
pop
mov
sub
roll
jl
out
cmp
push
xchg
aam
jmp
loopne
add
hlt
in
mov
mov
out
push
pop
rcll
xchg
vmread
xchg
fsts
jg
sbb
xor
cmp
call
fcoms
and
addr16
mov
es
dec
xlat
int
lret
nop
push
lret
inc
sub
mov
je
add
dec
mov
gs
mov
jbe
mov
dec
in
inc
pop
sub
xlat
push
add
sub
mov
jb
or
shll
in
sbb
adc
and
mov
ret
jb
cmpsl
dec
jnp
dec
lods
or
flds
or
in
mov
in
in
push
insb
addr16
in
jae
fisubrl
pop
adc
daa
mov
gs
js
ja
cmp
xchg
popf
das
ja
push
mov
cli
mov
jmp
add
cmp
repz
mov
jns
push
or
in
and
cs
mov
int
cmpsl
sub
push
out
data16
mov
sub
sbb
dec
adc
and
adc
outsl
dec
fxtract
sahf
pop
jle
dec
mov
addb
pushf
int3
xor
adc
fmuls
shlb
das
xor
and
dec
subl
sbb
aad
mov
xchg
cmp
nop
pop
outsl
inc
jo
fsub
aad
pop
imul
sbb
sahf
lret
push
scas
add
and
sub
dec
or
jle
lea
out
call
imul
cmp
movsl
sub
lods
lds
in
popf
xor
push
lods
mov
xchg
xchg
adc
push
inc
ljmp
mov
inc
push
pop
aaa
fidivl
js
cmpsb
xorps
or
xchg
gs
add
ja
or
fidivl
adc
cmovp
sub
ficoml
sahf
mov
pop
jb
mov
mov
lret
sbb
xchg
jno
out
stc
adc
mov
es
cmp
jbe
cmp
jne
cld
mov
jne
mov
stos
jo
out
push
repz
dec
mov
push
lock
jmp
mov
add
sub
leave
cmc
push
adc
int
jnp
push
test
xchg
xchg
sbb
gs
fs
jmp
ret
lods
add
fwait
popf
nop
sub
add
aam
push
je
sbb
xor
shlb
sbb
cltd
and
push
xchg
push
mov
inc
movsb
mov
jmp
ficompl
push
arpl
in
ficoml
pop
sub
add
jge
arpl
in
pop
xchg
jnp
outsl
pop
pop
dec
jno
shlb
mov
lahf
aas
or
mov
leave
mov
or
dec
and
and
pop
int3
pop
in
fldl2t
ret
aaa
mov
push
into
mov
xchg
xchg
out
mov
xlat
xor
jle
xchg
imul
jle
js
mov
or
sbb
ja,pt
cmp
addb
add
dec
ljmp
sub
mov
int
mov
or
push
jp
inc
xor
pop
and
loopne
mov
out
dec
test
or
dec
in
sbb
jp
rorl
add
inc
daa
popf
aas
fstpt
lds
ss
pop
movsl
inc
and
fisttpll
add
lcall
adc
mov
rcl
les
dec
insb
stos
testl
ret
stos
outsb
push
adc
gs
adc
sbb
mov
xchg
or
dec
mov
int3
pop
fiaddl
sbb
add
pop
and
out
xchg
out
sub
pop
lret
mov
stos
orl
mov
push
dec
and
pop
adc
sub
xor
sbb
cmp
or
divl
sbb
into
scas
gs
xchg
mov
in
fs
mov
push
mov
pop
mov
dec
dec
int
xchg
lret
inc
gs
cwtl
sub
test
dec
movzbl
repnz
ljmp
dec
pop
aas
add
cmp
daa
jmp
push
xor
and
ss
dec
cmc
adc
test
orb
in
rcl
clc
mov
mov
sbb
movsl
nop
shlb
ds
mov
pop
fstps
mov
fdivp
xchg
add
add
repnz
adc
sub
int
cmp
repz
dec
inc
adc
rolb
loopne
out
rep
and
ljmp
mov
in
stc
decb
sbb
sysret
adc
mov
shl
jmp
cmp
ja
mov
xchg
mov
divb
lret
jg
icebp
or
fsubrl
adc
xchg
jle
cli
jmp
shrl
jl
jmp
cmp
repnz
jne
repz
jl
pop
fs
mov
or
sbb
stos
psrld
dec
xchg
cli
es
mov
ja
xlat
loope
mov
and
es
sbb
push
nop
inc
jp
push
push
add
ret
jg
int
enter
jl
repz
iret
pushf
push
roll
loopne
sub
cmp
adc
scas
call
cmc
xor
jp
xor
xchg
rol
pop
inc
sub
xor
inc
adc
pushf
call
adc
mov
and
cmc
out
sbb
mov
cltd
xchg
lods
adc
and
insb
pushf
aam
xchg
and
xor
cmp
jp
mov
mov
add
ja
push
xchg
jae
push
ds
cmp
dec
insb
in
sub
xchg
jno
mov
mov
mov
and
mov
cmp
cmp
push
ret
push
iret
or
push
mov
cmp
mov
and
rol
les
cmpsb
movsl
popa
xor
sbb
pop
and
jecxz
sub
cmc
dec
fsubl
add
jae
mov
sbb
jp
mov
stos
or
mov
jmp
lahf
ret
xchg
add
xchg
pop
push
xor
outsb
jns
pop
mov
icebp
xor
out
mov
sbb
aam
jecxz
fld
xor
ds
mov
push
sbb
icebp
fs
cmp
fs
hlt
xchg
mov
outsb
sub
arpl
xor
adc
in
jno
or
jno
pop
pop
mov
mov
cmpsb
seta
scas
pop
xchg
mov
mov
les
sub
pop
adc
add
pop
inc
js
cmpl
or
shll
lahf
cli
mov
int
mov
bound
mov
sbb
xchg
and
and
pop
sub
cmp
test
push
scas
ss
mov
adc
movsb
fildl
cmp
shlb
cli
or
dec
imul
mov
fcomps
cmp
cmp
sbbb
add
jg
outsl
jl
adc
xor
xchg
enter
dec
nop
lcall
movsb
lds
push
jmp
and
test
mov
xchg
add
subb
leave
arpl
addr16
hlt
cwtl
push
sbb
lret
push
mov
xchg
or
lea
icebp
orl
sub
sti
xchg
jp
mov
sub
loopne
shl
repnz
hlt
in
xchg
cwtl
push
adc
mov
hlt
pop
icebp
mov
mov
dec
in
mov
lret
iret
loope
lcall
push
inc
cmpsb
or
adc
stos
stos
push
sub
repnz
sbb
shlb
lea
dec
lea
movsb
lds
sahf
test
adc
js
dec
lods
mov
popa
scas
outsl
iret
ljmp
filds
lret
int
inc
mov
loop
inc
dec
mov
les
sbb
pop
sub
lods
inc
int
pop
scas
icebp
dec
inc
add
insb
lods
jle
mov
cmp
hlt
int3
notb
mov
dec
jmp
pusha
xor
inc
inc
je
movsb
nop
push
aam
popa
mov
xchg
clc
jae
xchg
in
insb
out
xchg
xchg
ss
cmp
or
xlat
test
leave
pop
mov
je
push
je
leave
data16
fimuls
adc
pushf
inc
mov
ret
cmpsl
mov
pand
shr
add
push
aam
mov
and
lret
loope
mov
sbb
in
call
mov
jns
sub
sbb
stos
inc
and
pop
outsb
push
mov
aaa
pusha
fdiv
je
gs
push
pop
or
sub
mov
mov
test
push
jns
and
xor
jno
mov
cmpsl
xchg
mov
dec
fcoms
std
mov
testl
inc
lret
push
xchg
sbbb
lret
pop
and
js
inc
outsb
daa
bound
hlt
scas
dec
addl
push
mov
xchg
adc
jbe
hlt
cmpsl
add
lds
cmpsb
fucomp
out
pop
mov
mov
xor
imul
shll
mov
xchg
xor
gs
leave
push
nop
aad
cmc
leave
xor
jmp
es
xchg
out
and
ds
mov
push
adc
in
add
int3
scas
daa
lcall
inc
sub
leave
stos
mov
nop
arpl
ret
std
mov
pop
imul
imul
xor
pusha
into
pop
arpl
and
dec
insl
mov
mov
jb
dec
enter
std
cmp
fisubs
mov
cli
shl
and
adc
inc
sbb
jl
test
mov
mov
add
scas
add
fwait
adc
pusha
add
sub
dec
pusha
add
inc
incb
or
inc
push
inc
xor
in
es
pop
repz
jmp
inc
jnp
xchg
iret
mov
imul
clc
mov
into
cltd
push
xchg
or
push
outsl
hlt
lods
in
repnz
daa
lods
loop
jb
or
mov
out
fwait
pop
pop
mov
xor
adc
jl
imul
shrb
repnz
mov
lods
sti
cmp
mov
imul
arpl
add
addl
pop
imul
aas
xor
sbb
mov
lret
inc
in
add
stos
adc
add
dec
sahf
lock
jbe
pop
daa
das
mov
add
cltd
mov
stos
repnz
andb
pop
stos
ret
lea
bound
mov
dec
movsl
xchg
push
cs
xchg
push
inc
aam
lods
dec
and
or
pop
cmpb
jb
dec
pop
mov
notl
cs
jge
inc
pop
mov
jg
cs
pop
addr16
mov
lcall
imul
jae
adc
jno,pn
mov
push
cmp
mov
mov
cmpl
ss
mov
lret
push
mov
adc
pop
or
lret
and
and
add
mov
xchg
mov
pop
push
test
sti
mov
add
gs
push
test
sub
or
mov
xchg
mov
jbe
mov
ret
bound
push
cli
in
xchg
and
sbb
dec
out
negl
faddl
mov
out
andb
or
pop
in
mov
daa
jns
pop
nop
push
clc
or
addr16
mov
mov
insb
in
add
adc
insl
dec
mov
xchg
stos
or
push
lods
add
shll
bswap
test
enter
fisubrl
mov
sarl
pop
mov
imul
sub
jmp
enter
jg
dec
shll
clc
outsl
pop
ljmp
cs
adc
mov
push
push
loopne
hlt
bound
lahf
add
in
fs
subb
push
mov
leave
or
and
stos
movsb
xor
movsb
pop
stc
movsbl
imul
and
mov
sbb
jp
ss
imul
pop
scas
fnstcw
dec
pop
inc
mov
shl
test
push
push
push
mov
jmp
pop
push
js
jo
movl
js
pusha
sahf
and
adc
in
test
xchg
or
xchg
xor
and
push
xchg
xorl
loopne
jnp
add
fs
imul
mov
ss
sbb
imul
and
test
mov
jmp
aam
jl
ret
jae
dec
push
sahf
testl
adc
scas
and
mov
pushf
push
or
jne
push
hlt
inc
cs
cmp
sti
jbe
xchg
pop
sbb
or
rol
jno
add
adc
inc
push
lret
add
pop
loopne
insl
sub
repz
out
xchg
sub
push
fidivl
fwait
mov
sub
mov
mov
or
rolb
lods
lods
jbe
sub
or
out
jle
cwtl
pop
lcall
in
cli
out
movsl
adc
jp
jp
popa
test
dec
jbe
insb
pop
push
xchg
popa
loop
shrb
jl
pop
xor
sarb
sbb
push
inc
or
shrb
cmova
sbb
sbb
xor
xor
xlat
sarl
sbb
mov
scas
cmpsb
jmp
stos
fistpl
test
aaa
jmp
sti
das
lds
push
bound
mov
inc
ljmp
stos
mov
out
shlb
sub
loope
inc
jecxz
pop
pop
insl
addr16
xchg
sbb
in
jno
int
jo
jecxz
lock
mov
out
inc
cmp
ret
cmpsl
fldl
push
mov
xor
cltd
lahf
cmc
test
pop
ja
out
fmul
jl
cwtl
push
cmp
nop
xchg
movsb
aaa
push
test
scas
test
fsubl
push
test
push
rol
fidivs
jge
popf
lods
mov
enter
comiss
in
dec
sub
rorl
lea
jl
out
lods
testb
jp
pop
sub
pop
cs
cs
dec
outsb
and
pop
push
gs
sub
xchg
sti
pop
pop
fsubrs
pusha
nop
xchg
popf
loop
fnsave
mov
inc
xor
inc
sub
movsl
mov
adc
xor
dec
lret
stos
leave
aam
pop
sti
lock
adc
ljmp
insl
jnp
sbb
ja
pop
add
fcomi
pushf
mov
push
dec
pop
int
jno
dec
xchg
stos
push
add
push
push
rclb
mov
jb
inc
jge
push
outsl
aaa
or
dec
imul
or
xlat
int
enter
push
xadd
lret
adc
mov
out
xor
in
fistps
stos
inc
stos
roll
add
into
lahf
cltd
add
add
pusha
jbe
fiaddl
push
jge
outsl
or
mov
inc
jge
shlb
inc
xchg
sub
adc
loopne
and
push
push
popf
add
adc
adc
xchg
add
fldcw
xchg
jp
dec
arpl
scas
test
push
stc
xchg
adc
cmp
push
imul
dec
pop
mov
mov
pop
iret
mov
sub
dec
cltd
xor
insb
lcall
test
xchg
xchg
cs
in
pusha
mov
adc
cmp
jmp
mov
xchg
shll
push
imul
mov
mov
dec
loop
or
push
adc
xchg
xlat
decb
push
push
add
inc
mov
loopne
shl
in
mov
cmpsb
repnz
xor
andb
enter
pop
mov
inc
xchg
rolb
clc
jmp
add
sub
outsb
xlat
outsl
out
js
cmc
out
in
sbb
sub
lret
int
ficompl
bswap
add
popa
xchg
pop
xor
adc
or
imul
data16
mov
mov
fwait
int
loope
jb
inc
inc
lods
add
mov
adc
imul
adc
sbb
jbe
shrl
movsb
clc
dec
push
mov
mov
mov
cmp
mov
jns
cmc
add
add
sbb
xlat
sbb
outsl
xchg
in
jl
mov
aas
test
stc
out
mov
loope
xchg
add
lret
jl
aad
lods
ret
and
imul
cmc
pop
dec
or
dec
pop
movsb
sahf
jb
add
pop
cmpsb
das
lds
scas
xchg
hlt
popa
mov
mov
jecxz
push
xchg
outsb
add
jno
mov
xchg
push
sarb
test
xchg
jmp
push
push
ficoml
enter
xchg
mov
cmpsl
cmp
jne
clc
jbe
je
xchg
out
ss
mov
in
sbb
mov
fiaddl
inc
sbb
and
cmpsl
or
sbbl
xchg
inc
aad
in
lcall
mov
xchg
mov
repnz
push
test
bound
pop
sub
cmpsb
cmp
cwtl
sbb
inc
pop
mov
pop
dec
dec
arpl
cmc
jge
fidivl
lret
std
cltd
outsb
das
clc
jne
jle
xlat
or
aam
bound
aas
clc
fdivrl
and
mov
gs
in
fsubs
add
jmp
mov
sbb
mov
enter
mov
int3
add
in
loope
test
out
sbb
popa
aam
in
pushf
in
jecxz
leave
xchg
mov
or
ret
cmp
js
mov
mov
xchg
stos
ret
pop
ss
in
stos
or
jmp
and
jo
pxor
dec
jmp
rclb
push
ret
daa
mov
push
loopne
jle
inc
dec
jl
outsl
push
gs
and
dec
push
push
nop
pop
jmp
jnp
jmp
pop
mov
cs
inc
add
mov
inc
push
or
bound
mov
push
stos
add
and
mov
push
ss
fs
aad
fiadds
cmp
rorb
sahf
sbb
lahf
sbb
hlt
dec
mov
iret
pop
test
jp
add
stos
movsb
inc
das
dec
outsl
fwait
movsl
leave
cmpl
mov
adc
xchg
sub
xor
mov
sti
hlt
sbb
sti
in
pushf
push
mov
pushf
inc
add
ret
push
sti
cmc
cld
jmp
pop
or
lret
dec
sbb
sub
int3
out
aam
sub
cmp
loop
jb
pop
scas
hlt
jmp
mov
lahf
arpl
shrb
stos
aad
and
dec
or
sub
sbb
aas
lock
cmpsl
dec
pusha
mov
xor
xchg
jno
dec
loope
into
mov
add
stos
or
xor
adc
std
lock
mov
push
push
pop
pop
jo
adc
clc
in
add
daa
mov
int
ret
js
ljmp
xchg
push
shrb
xor
cmpsb
test
sub
jbe
lea
cmp
pop
xor
sub
mov
dec
adc
mov
shlb
imul
xor
jecxz
xchg
push
dec
loope
div
cmp
push
gs
enter
xor
sub
out
outsl
icebp
pop
insb
aam
push
daa
dec
gs
jno
lret
add
mov
adc
test
jbe
sbbl
xchg
xchg
aam
into
repnz
xchg
lcall
icebp
aas
or
push
push
int3
push
xchg
xchg
mov
xchg
mov
cltd
dec
iret
mov
push
std
dec
xchg
xor
bswap
test
jmp
jbe
popa
es
and
aad
add
pop
cltd
dec
adc
in
or
xlat
jno
cli
mov
loope
dec
mov
shrl
lds
pushf
adc
inc
and
mov
aad
inc
jnp
mov
mov
xchg
mov
jne
lods
bound
ds
insb
inc
dec
jne
pop
adc
call
inc
sub
mov
call
lahf
sbb
imul
fstpt
lock
jb
xor
addb
cmp
jle
sarb
jae
add
icebp
xchg
sahf
push
cmp
sbb
movsb
sbb
add
add
dec
movsl
cmp
inc
mov
mov
cmpl
notl
ja
sub
dec
mov
push
cmp
pop
mov
mov
les
mov
mov
or
dec
fnstcw
std
jo
sahf
insl
and
adc
stc
mov
mov
icebp
xor
andb
dec
mov
mov
mov
xchg
popf
push
xor
arpl
and
imul
push
and
xor
jb
es
or
xor
and
enter
adc
mov
or
sub
pop
cmp
adc
insl
push
std
out
scas
xchg
rorb
jb
mov
lods
jge
daa
bound
fnsave
out
adcb
in
pusha
popf
jmp
lock
jecxz
push
jle
cltd
dec
scas
je
sbb
stos
es
scas
push
mov
jno
sbb
mov
sub
mov
in
sbb
cltd
pop
and
pop
mov
add
push
sub
jg
loope
sbb
loopne
aas
xchg
adc
fisubs
sbb
inc
sbb
cs
ficoms
stos
insb
aam
or
arpl
add
fidivs
adc
push
mov
push
mov
cltd
lahf
cmp
cld
shll
cmp
stos
pop
fldenv
and
xor
push
mov
scas
jmp
sahf
cmpsb
sub
rorb
pop
cmp
rclb
cltd
push
sbb
rcr
adc
lds
cmpsl
dec
adc
pop
cmp
xor
adc
aad
sahf
xchg
out
setl
push
push
jb
cmp
std
and
xchg
sbb
ret
shll
popf
sahf
iret
mov
sub
push
stos
or
inc
pusha
dec
fistpll
in
fildll
ja
decb
inc
pop
mov
dec
dec
cmp
scas
cmp
jne
mov
sbb
push
mov
and
fsubp
jns
incb
xor
mov
lea
js
fdivrs
outsl
push
sub
push
dec
push
cmpsl
cwtl
jge
push
xchg
stos
movsl
pop
cmp
sbb
xor
dec
outsl
sbb
pushf
cmp
mov
mov
stos
rcrl
pop
xchg
lods
push
lret
and
adc
lods
mov
xchg
dec
stos
loope
mov
test
arpl
popa
mov
mov
test
imul
fs
sub
pop
cmp
jno
je
fs
sbb
jg
addr16
sub
clc
sub
xor
stc
rcrb
in
outsl
andl
sbb
into
mov
adc
imul
fisubrl
push
or
cs
add
and
inc
std
leave
aad
das
daa
xchg
dec
adc
mov
in
mov
orb
std
add
jecxz
sbb
ds
jb
cltd
jo
jg
jbe
mov
test
push
adc
rcr
in
sti
pop
adc
sbb
into
lret
mov
xchg
stc
push
test
lea
sub
outsl
lcall
jmp
cs
cs
add
add
sub
call
out
movsb
divl
sub
xchg
xchg
gs
mov
push
xchg
jne
mov
lret
mov
xor
sbb
pop
push
jne
arpl
jae
fsubl
xchg
add
insb
cmpsb
inc
hlt
les
sbb
and
push
xorl
xchg
ds
fwait
add
fnstenv
ret
enter
fwait
cmp
sub
cltd
dec
push
fwait
jb
rorl
xor
imul
pusha
mov
ss
jnp
js
pop
xor
fsubl
stos
sub
and
test
hlt
idiv
outsb
mov
daa
push
mov
and
leave
dec
push
xchg
divl
outsb
mov
aam
jns
pop
in
add
and
call
scas
pop
mov
pop
out
cmp
mov
jno
jmp
adc
cmpsb
sahf
dec
repnz
sub
out
xchg
pop
outsb
mov
in
and
jb
test
sbb
insl
dec
out
mov
mov
add
test
ficomps
mov
jns
dec
ss
add
mov
data16
mov
out
cltd
enter
je
jmp
imul
inc
faddp
pushf
in
int
lret
sarb
in
or
dec
mov
imul
in
dec
loopne,pt
pop
lods
test
xchg
and
in
sub
mov
jnp
fstl
mov
jne
mov
ljmp
or
sahf
and
pop
jecxz
xor
aam
mov
aad
lcall
mov
mov
mov
sbb
movsl
or
push
fincstp
loope
data16
mov
adc
stos
and
mov
lahf
jl
lss
outsb
dec
movsb
dec
sbb
dec
cltd
xor
sarb
into
xor
outsb
sub
xor
sub
and
cmpsl
test
cld
or
xchg
add
mov
repnz
dec
outsb
fstpl
mov
or
arpl
int3
popf
out
xchg
sub
pop
cli
sbbl
test
dec
and
mov
cmp
mov
mov
add
dec
push
push
pop
mov
fsubl
sub
clc
push
ja
jns
inc
sub
sub
jmp
or
push
out
mov
rolb
push
mov
push
xlat
xchg
or
js
test
xchg
scas
lahf
add
push
mov
cmp
cmp
repnz
not
mov
xlat
dec
sbb
xchg
lahf
pop
dec
dec
loop
stc
mov
and
orl
ret
inc
sub
cmc
adc
jnp
mov
xchg
sahf
hlt
lahf
pop
xchg
arpl
sub
xor
push
jge
and
sub
sbb
cmp
mov
jbe
push
decb
jns
dec
sbbl
jb
adc
iret
cld
sub
leave
dec
xor
fistl
inc
adc
aas
ret
rcrb
pop
jae
mov
jp
stos
mov
and
mov
pop
loope
mov
mov
cmp
pavgw
and
rolb
aaa
dec
adc
sbb
addr16
lcall
xor
mov
and
and
push
and
lahf
mov
loopne
mov
icebp
mov
xchg
push
dec
ret
push
pusha
fnsave
jp
fimull
fisttpl
sbb
nop
xor
mov
pop
lcall
sbb
sbb
fbld
or
sbb
lds
arpl
pop
lcall
mov
mov
fdivrl
seto
fwait
jbe
test
call
in
es
sub
je
scas
push
inc
xchg
pop
adc
push
xchg
jb
lret
inc
sbb
cmp
xchg
mov
inc
call
out
add
mov
movsb
test
mov
sbb
stos
lods
cmp
adc
movsb
ljmp
xorb
mov
cmovge
jecxz
mov
mov
mov
mov
pop
movsl
fs
jp
mov
insl
gs
into
inc
ja
pop
pop
scas
daa
lea
pop
jg
js
outsl
jbe
mov
xchg
iret
push
int3
push
dec
sub
cmp
aaa
scas
pushf
leave
mov
nop
ljmp
mov
test
icebp
ret
outsb
mov
fistpll
ds
adc
data16
cltd
or
lahf
lahf
ljmp
mov
pusha
movsb
adc
dec
ret
dec
jp,pt
scas
lret
rorb
mov
roll
testb
ja
in
mov
mov
ja
cmp
push
push
cmp
aad
out
lea
dec
mov
jno
out
loopne
cld
in
arpl
xchg
inc
test
mov
setns
std
xchg
fldl
insb
call
sbb
gs
sbb
cwtl
cmpsl
stos
add
pop
push
jmp
lds
inc
dec
movsl
and
dec
push
sbb
div
scas
lods
push
lahf
insb
xor
movsb
pop
arpl
sub
mov
jno
jno
sbb
in
inc
mov
pop
inc
sarl
mov
clc
sarb
mov
popf
fistpll
xor
jle
adc
test
mov
movsl
add
push
mov
movsb
outsl
mov
jp
and
ss
cmpb
push
aad
push
arpl
stos
out
ret
in
fldt
scas
call
fmull
dec
lods
aad
clc
subl
sbb
ss
and
xchg
icebp
sub
shlb
and
int3
dec
repz
pop
and
fcmovb
jg
push
and
orl
jns
jo
xchg
mov
stos
icebp
jl
xor
andl
or
int3
movl
popf
sbb
mov
mov
pop
mov
outsb
ja
cld
enter
push
ljmp
jnp
repnz
nop
fdivs
mov
repz
add
aad
mov
xchg
mov
clc
scas
mov
dec
pop
nop
lods
stc
xor
cmp
mov
xor
xchg
mov
fisubl
add
cli
pop
jle
fisttpll
lret
sbbb
xor
icebp
xchg
push
test
sahf
out
imul
dec
ja
icebp
int3
xor
push
push
into
xor
sub
pop
into
mov
jle
dec
cmp
dec
adc
inc
pop
and
dec
cmp
aas
adc
out
loop
repnz
insb
xor
mov
add
int
jb
out
xor
jmp
jp
mov
outsl
iret
dec
inc
adc
mov
nop
sub
xchg
sbb
sbb
dec
das
adc
insb
ja
xor
xor
ja
xchg
mov
dec
xchg
pusha
mov
aas
gs
mov
fstps
mov
cltd
cld
push
rorl
jo
sbb
xor
or
and
ret
jo
inc
mov
fwait
lods
xchg
mov
imul
out
icebp
and
ret
aad
sti
push
lock
cmp
mov
mov
es
sub
or
aam
push
ja
xchg
repz
push
xchg
mov
mov
inc
add
sub
dec
mov
add
movsb
pop
mov
mov
push
add
push
or
xchg
sbb
sbb
xor
sbb
aaa
nopl
mov
dec
mov
addr16
cmp
mov
adc
dec
test
dec
and
push
or
push
sbb
mov
cmpsb
or
or
fcmovbe
sbb
mov
cwtl
inc
jb
mov
div
xor
mov
mov
icebp
add
push
adc
out
xchg
sahf
mov
push
in
cltd
xchg
loope
mov
dec
xor
movsb
xlat
mov
repz
pusha
adc
add
sti
imul
enter
jmp
xor
push
movsl
mov
cmpsb
cltd
adc
int
aaa
bound
xchg
pop
rcll
call
inc
clc
and
push
pop
sub
out
movsb
popf
dec
pop
jge
imul
iret
mov
scas
pop
sbb
push
and
mov
imul
out
sbbl
pop
enter
sti
pop
inc
dec
arpl
hlt
cwtl
mov
mov
loopne
add
popf
mov
enter
pop
sti
xor
or
xlat
lret
dec
stos
scas
mov
fdivl
xchg
call
pop
lahf
testb
xchg
shll
jae
xchg
or
add
ds
lods
add
lahf
add
ds
fadd
dec
sbb
es
dec
outsb
push
sbb
ja
adc
ljmp
and
fists
jbe
cli
imul
mov
sahf
dec
inc
push
inc
pop
cmp
cmp
outsl
lret
repz
mov
pushf
xor
jg
stc
xor
out
jns
cmp
movsl
mov
movsl
cmp
cmp
das
leave
fcoml
mov
repz
jecxz
add
jl
dec
outsb
mov
not
add
bound
lret
loopne
sbb
fidivl
xchg
add
mov
xor
fnstsw
adc
shlb
mov
fistpl
xor
insl
loope
hlt
add
in
dec
int3
xor
cmp
jecxz
or
outsl
sbb
int
push
es
pop
jns
dec
in
jle
loop
push
out
jge
rolb
mov
inc
adc
lcall
pop
hlt
push
xor
add
cli
push
psraw
push
repz
cmp
xlat
in
cmp
rcll
jg
roll
inc
leave
in
loopne
mov
mov
xchg
idiv
insb
jecxz
out
cmp
mov
inc
les
mov
xor
rol
push
mov
jecxz
xor
pop
jle
cmp
arpl
fisttpl
xchg
enter
aad
and
movsl
inc
outsl
xor
push
out
lret
sub
mov
adc
cmp
cltd
jo
and
data16
fwait
jb
sbb
pop
test
mov
jbe
cmp
dec
arpl
pop
repz
xor
frstor
jo
inc
daa
imull
and
sahf
push
xlat
shll
sbb
aas
mov
jl
lcall
xlat
mov
mov
mov
or
insb
dec
stos
mov
pop
xchg
mov
cwtl
mov
xor
pushf
fisubrl
cmp
sbb
pop
cmp
repz
loope
fdivs
loope
push
pop
xor
push
adcl
cmpsb
pop
rcrl
cmc
xlat
lret
dec
icebp
mov
sbb
lods
outsb
call
test
mov
jno
push
mov
mov
xorb
jb
aam
cli
or
xchg
pop
ret
sti
cli
fstl
mov
test
std
pop
cmp
incl
jge
jl
pop
inc
sub
cmpsb
mov
sub
xor
aas
addr16
cmpsb
jge
sub
sbb
xor
add
das
lock
add
pop
sbb
dec
and
shll
ja
sbb
lods
pop
dec
lcall
dec
popf
mov
fdivrp
cmp
ret
push
adc
das
jb
daa
add
repnz
mov
inc
adc
cmp
in
mov
xchg
jns
mov
ja
add
in
mov
dec
imul
notl
jb
xor
and
ret
stos
inc
add
repnz
mov
test
mov
cmp
push
and
cmovg
mov
jo
xor
pop
icebp
fiaddl
addr16
pop
cmp
lret
das
scas
adc
imul
popa
sbb
sub
imul
cmp
scas
fpatan
jnp
adc
jp
test
xor
jge
dec
lahf
aas
sbb
negb
and
dec
fistl
in
repz
daa
add
es
jnp
xchg
and
daa
out
das
push
in
or
fldl
inc
pushf
sbb
out
xchg
test
push
jp
test
adc
in
adc
push
mov
cmp
cld
cmp
ss
les
jns
push
add
xchg
imul
ret
jne
or
fwait
mov
mov
mov
mov
nop
or
aad
es
xchg
test
je
idiv
adc
scas
sti
rorb
or
rolb
popf
scas
and
cltd
mov
xchg
cli
mov
xor
rolb
or
inc
and
jo
pop
jecxz
les
insl
jns
ja
es
inc
xor
popa
iret
das
ljmp
addr16
pop
mov
into
ss
ds
xchg
push
mov
arpl
ja
xchg
mov
xor
mov
pop
cmp
jb
dec
cmp
mov
movsb
push
or
scas
and
jge
loope,pn
mov
in
add
iret
ljmp
mov
jp
in
jns
fdiv
imul
cs
packsswb
sbb
lret
dec
out
scas
mov
cmp
lods
push
push
je
pop
push
outsb
add
clc
dec
ret
sahf
fidivrs
out
jle
jbe
testb
stc
out
jmp
ja
inc
push
jno
out
adc
push
cmp
push
pop
sub
popa
mov
out
fstpt
pop
fidivs
xor
or
push
jns
mov
inc
fsubr
adc
inc
test
add
repz
jmp
into
hlt
mov
daa
fldl
sbb
inc
sub
fs
sbb
pusha
or
xchg
xlat
das
adc
scas
enter
shrb
add
sbb
xor
pop
out
daa
dec
sbb
andb
addb
daa
mov
pop
and
jmp
add
ja
dec
xor
lcall
xor
sub
sub
hlt
or
adc
push
sub
cld
fadd
pop
cli
inc
frstor
mov
xor
push
push
lcall
jg
inc
das
jl
popf
and
push
jl
push
xor
inc
xchg
sub
xor
push
orl
pop
sbb
icebp
sbb
jg
out
test
shrb
cmp
scas
mov
jbe
mov
fldl
ret
push
or
mov
sub
and
adc
lcall
or
cld
lods
or
mov
orb
dec
sbb
push
xor
mov
cmp
mov
mov
jne
push
pop
aas
call
cs
sbb
sub
mov
jg
sub
pusha
pop
mov
aas
xor
shll
inc
add
add
add
and
je
es
ficomps
std
jnp
sarl
filds
or
fildl
add
push
push
call
sub
ror
cs
sub
js
xchg
jno
adc
push
mov
outsl
push
pop
jg
pop
fstps
pop
mov
scas
das
mov
sbb
ret
or
adc
nop
pop
data16
sbb
mov
push
sbb
fbstp
mov
test
fidivrs
xchg
test
rcr
and
xor
in
loope
xchg
aam
cpuid
adc
andl
call
ss
int
pop
insb
fsts
pusha
mov
jge
testl
lahf
outsl
popa
cld
js
and
sbb
int3
mov
lahf
iret
and
mov
push
movsb
scas
out
aad
add
mov
je
stos
mov
inc
mov
cmp
lahf
and
bound
and
adc
sub
or
icebp
sbb
mov
idivl
sub
test
stos
add
adc
sbb
sub
dec
add
lods
add
jno
cmp
loop
std
mov
inc
repz
or
stos
pusha
testl
jbe
cmp
lods
dec
adc
push
call
cld
lret
add
mov
push
or
repnz
sti
pusha
push
insb
pop
les
stos
cld
mov
scas
mov
xchg
pusha
pop
aam
push
in
notl
adc
js
cld
mov
mov
mov
cli
mov
in
cmp
insl
ret
hlt
shrb
cltd
in
movsl
and
pop
push
xor
inc
mov
in
mov
cmp
ficomps
jnp
ds
jp
outsb
lea
stc
iret
aaa
xchg
mov
sbb
mov
test
test
and
sub
mov
arpl
or
rcrb
test
cmc
int
int3
mov
or
and
sbb
daa
call
mov
bswap
lcall
cmpsb
ret
xor
mov
filds
mov
jne
ret
movsb
ss
sub
mov
int3
mov
aam
sbb
push
xchg
out
daa
push
out
int
jns
mov
cs
sub
movsl
enter
pop
xchg
cmpsl
popf
sbb
pop
and
add
push
fstps
push
scas
dec
imul
int
pop
fcmove
out
pop
scas
mov
cmp
jns
jbe
stos
xchg
lea
push
mov
in
mov
cmp
call
jmp
mov
push
inc
insb
scas
jl
pop
jmp
sub
inc
popa
xlat
or
adc
push
test
push
movsl
push
dec
mov
xchg
lret
push
rcl
jb
test
xchg
arpl
and
ds
or
rorb
lcall
inc
inc
xor
mov
leave
xchg
xchg
add
or
scas
xor
xor
in
mov
aad
mov
ret
fwait
jecxz
or
mov
push
mov
out
or
clc
inc
jge
push
aas
mov
enter
mov
jbe
mulb
fnstsw
lods
mov
out
adc
loopne
test
sbb
jnp
data16
cmp
ret
xchg
out
jne
cmpsb
inc
faddp
lock
cwtl
addr16
repnz
je
xchg
jge
fisubs
cmp
jnp
ja
jle
and
pop
call
fwait
test
sub
and
aas
push
aaa
in
insb
jecxz
push
popf
push
fldcw
aam
enter
mov
mov
pop
shll
pop
fucom
inc
pop
loope
aas
lret
and
jle
mov
test
rclb
jno
jno
ret
repz
mov
jmp
mov
je
sub
sub
aaa
daa
ja
into
adc
jno
sbb
add
push
inc
popa
cltd
mov
sub
rcrb
inc
iret
mov
retw
or
pop
sbb
ret
xchg
addr16
inc
cmp
fdivrl
push
rcrl
lock
xor
push
lret
dec
call
shrl
adcl
fwait
insb
clc
fs
jnp
ljmp
into
pushf
cmp
aam
pop
mov
inc
and
push
ret
movsl
and
sbb
xorps
pop
jl
jno
pop
mov
push
outsl
ret
fs
inc
jb
push
shr
or
andl
pop
xchg
push
mov
daa
push
stos
aaa
loopne
xchg
add
movsl
stc
lods
jae
sbb
std
mov
stc
or
pusha
pop
xchg
ror
mov
jmp
and
pop
mov
jno
jl
lods
sub
imul
je
call
sti
inc
pop
ret
imul
pusha
cmp
cmpsb
sbb
dec
inc
fs
cmp
inc
xchg
jo
inc
mov
mov
push
or
adc
adc
adc
mov
das
xor
popa
mov
xchg
out
xchg
test
sub
jae
sub
or
xchg
lods
pop
inc
inc
xchg
test
out
insb
sbb
push
sahf
sub
mov
fbstp
lock
jmp
push
outsb
repnz
xor
cltd
sbb
les
iret
lds
sub
xor
dec
jle
fwait
imull
and
mov
jb
mov
mov
jmp
adc
add
imul
jne
sub
fidivrl
stos
fnstsw
mov
dec
mov
jle
sbb
mov
std
mov
jl
xchg
inc
cmpsb
mov
lcall
or
sub
mov
dec
aaa
iret
cmpsl
aas
fdivrs
cmpsl
and
pop
push
cltd
data16
mov
movsl
ja
repnz
ret
mov
xchg
pushf
and
adc
lods
adc
out
xchg
lahf
sbb
and
push
inc
xchg
addr16
push
push
repnz
push
xchg
adc
push
sarl
inc
add
notl
inc
cmp
stos
lret
mov
adc
xchg
mov
add
pop
icebp
push
fdivr
call
jmp
mov
sub
scas
roll
sbb
insb
aaa
pop
incb
int
popf
iret
rorb
cmc
aas
cmp
mov
push
and
pop
xchg
fsub
add
cmpsl
std
jmp
cmpsl
push
andl
pop
pop
pop
lahf
call
mov
mov
insb
cld
stc
loope
fs
xor
call
les
mov
ret
inc
stc
popa
push
jg
les
xchg
pushf
gs
xor
and
mov
cmp
lcall
aam
mov
add
daa
dec
inc
add
jae
mov
int3
or
mov
les
insb
outsb
inc
jmp
mov
cmp
mov
cmpsb
hlt
dec
push
lret
push
adc
sub
mov
cmp
inc
push
lds
xchg
jecxz
mov
popl
jecxz
rorb
pop
pop
mov
std
insl
out
mov
mov
add
lret
adcb
cltd
mov
and
inc
cmp
and
pop
xor
scas
sub
jns
jns
mov
pop
leave
xor
jno
into
jno
mov
sbb
jmp
in
cld
in
movsl
test
fisttpll
popa
xor
cld
mov
mov
inc
adc
jno
sbb
cmp
insb
add
mov
mov
cmp
cli
mov
push
cld
out
clc
sub
and
daa
jae
xor
add
xchg
xor
push
mov
mov
jb
icebp
jmp
pop
mov
sub
and
jo
loope
icebp
sbb
fcmovnb
enter
sbb
fcmovbe
repnz
inc
pushf
pop
call
dec
sbbb
xor
xchg
xor
sbb
sbbb
pusha
addr16
cltd
repz
pusha
fisubrl
ds
das
push
mov
out
dec
clc
cmpsl
jg
xor
pop
fs
outsl
push
das
fnstenv
fidivrl
push
call
inc
imul
pop
adc
fwait
sbb
cmpb
mov
out
ds
xchg
xor
in
mov
mov
popa
xchg
sbb
jbe
push
xlat
iret
fiaddl
fcomip
dec
xor
loope
lea
mov
sub
out
mov
icebp
adc
andl
arpl
into
imul
int3
mov
leave
lock
push
loope
int
or
mov
jl
xor
aam
idiv
sti
add
cmpsl
cltd
adc
insl
mov
dec
in
outsl
xchg
movsb
inc
int3
push
jae
dec
jecxz
cli
enter
mov
or
ja
cmp
jp
gs
push
add
xchg
xor
ds
adc
inc
ret
lret
cltd
inc
out
xchg
jge
movsb
and
movsb
in
cmp
and
jno
pusha
mov
or
ja
dec
rol
pop
fnstcw
push
adc
xor
dec
cltd
in
stos
add
jecxz
ljmp
fstpl
gs
mov
addb
in
out
adc
push
jecxz
add
mov
mov
dec
mov
inc
jecxz
xchg
mov
add
pop
ret
scas
jo
inc
or
inc
fsubl
sub
movsb
rorl
leave
cmc
and
and
sahf
cmpsl
in
addr16
popa
push
xlat
sub
les
movsl
aad
dec
sub
aam
and
dec
lret
jecxz
enter
adc
cwtl
adc
jae,pn
push
jmp
jmp
mov
pop
xor
pop
push
vpsubsb
dec
push
test
fs
push
fstpt
ljmp
xor
sarl
mov
dec
dec
add
daa
pop
lahf
je
divl
cltd
gs
bound
sbb
std
sbb
add
ret
int
scas
sahf
xor
in
aas
pop
je
mov
hlt
call
xchg
cmp
and
clc
dec
std
adc
push
lahf
test
xchg
rorb
roll
mov
inc
sub
icebp
sub
int
iret
rclb
push
dec
icebp
fs
jg
adc
das
movsb
pop
jae
shlb
ret
sub
ret
out
xchg
loope
cmp
sub
mov
clc
shr
adc
rclb
rsqrtps
add
movsb
pop
shll
leave
rol
or
fsubs
ja
shlb
push
jae
jae
out
xchg
mov
mov
test
pop
jp
scas
scas
fldcw
xchg
jp
sbb
ret
les
dec
in
mov
iret
lret
xor
xchg
add
ja
sub
sbb
push
mov
pop
push
jmp
loop
mov
pop
add
mov
and
jo
and
jmp
xchg
cmp
das
shll
mov
in
push
daa
rcll
loop
lret
mov
dec
push
cmp
pop
and
test
mov
adc
bound
gs
sub
aad
pop
sub
lcall
mov
ret
fsubrl
sti
or
jmp
movhps
sub
loope
cmpsb
rcr
push
xchg
dec
int3
push
loope
lods
das
cmp
cli
icebp
in
xor
mov
leave
sbb
loopne
ja
mov
aas
push
mov
and
push
push
arpl
popa
xchg
out
adc
mov
push
pusha
and
stos
xchg
pop
push
out
mov
das
arpl
push
leave
sbb
mov
inc
add
push
lock
pop
fbld
lahf
jmp
pop
and
adc
pop
daa
sub
cmc
jg
xor
idivl
xor
arpl
add
adc
cmp
add
fistpl
pop
pusha
lahf
add
fisubl
xchg
out
dec
rorb
mov
testl
push
lods
push
cli
lret
add
adc
cmp
push
fcoml
scas
outsb
outsl
hlt
pop
fnstsw
mov
mov
lods
push
gs
cwtl
or
and
repnz
xchg
fstl
in
or
sbb
cmp
xchg
scas
cltd
sub
adcb
call
mov
xchg
movsb
sarb
mov
dec
shrl
rolb
mov
ja
jo
sub
add
stc
aaa
inc
cmpsb
sbb
lret
bound
dec
das
cmp
adc
lods
jb
rolb
mov
or
adc
mov
push
mov
xchg
pop
jne
cmpsl
adc
push
xor
push
xor
loop
jno
imul
jns
in
lret
pop
out
push
mov
sub
pop
xlat
add
xchg
roll
sub
push
addr16
jmp
dec
int
lock
mov
cmc
push
dec
test
xchg
push
ficompl
lods
lret
sti
mov
movsl
adc
inc
mov
sub
int3
sbb
clc
imull
adc
adc
cmp
hlt
pop
fwait
stos
jle
xchg
lahf
and
fildl
movsb
lcall
shrb
pop
mov
push
pop
mov
loopne
subb
aam
dec
iret
jb
mov
sbb
jmp
fdivl
imul
jnp
js
cmp
scas
or
pop
sub
inc
or
outsl
shlb
push
das
hlt
aad
jl
push
fwait
cmp
dec
push
imul
sub
das
aam
fwait
out
jg
push
pop
inc
dec
sub
outsl
sub
mov
mov
and
fldt
rcrl
imul
push
mov
xor
in
add
jmp
mov
cld
mov
sub
into
imul
int
stos
ljmp
push
pusha
js
cmp
mov
adc
xor
call
call
cmc
mov
mov
nop
push
popf
jno
cvtpi2ps
in
push
lcall
pusha
xlat
fdivrl
lds
inc
sbb
shll
sti
repz
mov
inc
push
mov
mov
fs
jmp
jecxz
xchg
lcall
fdivr
mov
sbb
xlat
pop
in
pop
sbb
cwtl
or
adc
cli
in
or
add
lods
dec
inc
mov
out
jno
das
jp
xor
sub
mov
mov
in
clc
add
cmp
xchg
dec
mov
xchg
lret
pop
pop
mov
add
dec
daa
mov
jae
push
push
adc
test
test
icebp
xchg
repnz
sbb
js
add
adcl
popl
int
lods
dec
push
shlb
repnz
inc
pop
add
sbb
rclb
cwtl
push
pop
push
sub
dec
cmp
dec
in
out
and
out
insl
jae
in
mov
mov
push
loop
jge
push
sub
mov
dec
rclb
push
adc
push
imul
mov
fldt
aam
in
xchg
out
cmp
sahf
popf
scas
lds
dec
test
mov
push
sub
adc
cmpsb
ds
out
mov
jp
pop
fstl
cmc
out
mov
xchg
sub
push
pop
mov
pop
ljmp
pushf
add
add
fs
fsubr
or
push
dec
mov
mov
adc
sbb
scas
icebp
sti
jle
scas
dec
nop
dec
jmp
addr16
data16
rcll
dec
mov
movsl
jge
jge
int
movsl
mov
les
jne
mov
leave
fst
sub
lea
rclb
lea
in
sahf
out
imull
in
mov
inc
or
call
sub
mov
addr16
inc
pop
into
lret
repnz
jae
push
cmp
xor
or
xchg
dec
adc
sub
mov
add
xchg
push
shrb
mov
frstor
hlt
inc
or
inc
push
insl
lret
int
iret
adc
inc
xchg
xchg
dec
lock
sahf
pushw
and
xlat
push
dec
mov
adc
push
popf
cmc
add
movsb
xchg
jp
cwtl
xchg
cmc
add
js
pop
addr16
dec
test
add
pop
adc
add
daa
test
loope
adcb
and
or
pop
or
bound
jg
xchg
and
outsl
fistpll
sub
leave
pop
pushl
sbb
jmp
mov
mov
leave
add
outsl
test
or
add
lret
test
lret
jae
pop
sbb
outsb
scas
push
int3
mov
aad
pop
mov
mov
adc
stc
mov
int3
fiadds
repnz
push
imul
xchg
test
push
cmc
cltd
inc
cmpl
mov
push
ss
mov
and
sarb
mov
adc
clc
fstpt
sar
push
sbb
lds
sbb
xor
iret
dec
shl
or
mov
inc
inc
or
pop
arpl
adc
adc
mov
cmpsb
sub
jo
pop
dec
ret
pop
cmp
test
sbb
repz
out
andb
cmc
dec
cmpb
sub
xchg
pushf
nop
dec
jne
xchg
arpl
xchg
pop
fcoml
int
mov
fists
push
outsb
sub
pop
mov
adc
repnz
mov
ret
jle
dec
inc
gs
enter
pop
mov
cld
and
nop
rorl
leave
cmp
xor
push
sbb
sub
xor
adc
xchg
movb
xor
or
cmp
inc
dec
add
mov
in
jle
iret
dec
cmp
mov
jne
jge
out
sub
push
ja
les
push
sbb
mov
test
inc
mov
pop
jae
fcompl
fiadds
gs
in
in
jae
mov
adc
pop
sbb
divl
inc
and
or
jge
and
sub
mov
nop
xor
in
xchg
ja
in
jmp
in
mov
mov
das
xchg
out
and
xorl
daa
sbb
mov
sahf
jl
mov
cmpb
mov
daa
stc
test
lods
jne
shl
add
dec
add
cmp
out
push
repz
shrl
popf
dec
jp
mov
push
dec
daa
xor
stos
scas
fdivrs
push
je
mov
mov
add
je
and
jo
or
cmpl
jmp
test
pop
cld
lds
std
ret
daa
dec
jo
xor
add
mov
push
inc
mov
clc
push
jo
mov
jl
rolb
outsl
jecxz
mov
dec
xchg
call
popf
stos
ret
imul
cmp
in
testb
and
les
outsb
xchg
push
xchg
bound
sub
and
push
addr16
scas
mov
cli
fwait
inc
in
aaa
sbb
sbb
inc
negl
stos
xor
cmp
and
fsubl
mov
mov
mov
pop
shlb
std
popf
lret
pop
add
rcrb
mov
sahf
das
fs
pop
mov
adc
or
out
mov
arpl
cmp
enter
pop
into
xor
jbe
cmpsb
movsl
jecxz
aas
xchg
add
das
stc
sarl
pop
jo
inc
adc
enter
fwait
adc
scas
add
jns
xlat
nop
dec
jnp
inc
clc
xor
mov
add
nop
jg
xchg
jne
sbb
xor
insl
cmp
es
lahf
std
testb
addr16
mov
cmp
jae
sub
and
lods
fstpl
cmp
aas
sub
loopne
jns
pusha
movsl
insl
scas
xor
inc
ret
xor
ja
mov
jbe
pop
scas
ret
adc
int3
cwtl
mov
pop
data16
cmova
imul
fwait
call
out
fsubrs
das
sbb
lahf
push
adc
mov
test
ret
fsubrl
mov
shll
xor
stos
pusha
push
sub
dec
in
xorl
mov
or
fwait
inc
ss
push
popa
imul
sbb
mov
mov
loop
fs
jo
aas
out
mov
das
leave
lods
loopne
jecxz
sbb
jbe
fsubrs
mov
pop
fwait
mov
and
cs
inc
sub
fdivrp
mov
stos
popa
cwtl
bound
in
test
xchg
mov
iret
inc
es
push
jl
or
into
pop
sbb
mov
sbb
addr16
cmc
jg
rclb
add
pop
and
push
and
push
mov
xor
notb
ss
dec
out
data16
cmp
push
pop
bound
arpl
mov
add
jnp
and
add
xchg
js
ljmp
mov
inc
push
inc
mov
lahf
dec
shlb
cmp
push
pop
shlb
ja
and
and
int3
dec
out
ret
dec
lock
movsl
mov
and
xchg
mov
add
mov
in
outsl
imul
or
jp
adc
mov
mov
sbb
cmpsb
subl
cmp
or
push
insl
push
sbb
repz
stc
pop
and
shl
pop
loop
int3
arpl
xchg
andb
jle
inc
push
outsb
notb
pushaw
push
or
outsl
std
mov
cmp
scas
and
jae
aas
sti
insb
and
movsb
push
es
out
jne
dec
xchg
das
xchg
cmp
push
cltd
jge
xchg
aad
mov
mov
outsl
cltd
inc
cmpsb
dec
lods
mov
mov
xor
scas
push
xor
inc
pusha
stos
cmp
iret
sbb
mov
pop
push
jecxz
dec
mov
into
mov
gs
mov
pushf
jnp
adc
add
outsb
enter
jbe
xlat
xlat
push
mov
lret
aas
je
cmpl
out
ret
outsl
cmp
mov
jno
sti
retw
push
sti
pop
cli
sub
leave
push
outsb
lret
jg
loop
dec
cmp
adc
mov
pop
and
sbb
push
mov
cmp
stc
pop
negb
jo
xchg
mov
push
xlat
push
shll
and
inc
xchg
ljmp
mov
jl
push
lret
mov
in
das
movsl
shl
loope
and
out
aam
cmp
cmp
sbb
push
in
stc
hlt
xchg
ss
mov
add
mov
sub
in
xchg
outsl
mov
scas
sub
mov
xor
mov
xor
push
fs
xor
popf
shl
lahf
sub
xchg
sub
adc
ja
cmpxchg
pushf
jae
addl
into
dec
pop
jbe
xchg
aas
aad
das
in
fmul
pop
push
lea
shlb
iret
mov
xchg
sub
js
in
inc
jecxz
add
mov
es
sbbl
pop
idivb
mov
or
cmpsl
aam
movsl
stos
cmp
stos
ja
dec
sbb
xor
adc
in
das
icebp
inc
push
lea
add
push
fidivs
mulb
test
jle
push
xchg
aad
inc
push
or
sub
fisubs
dec
or
pushf
lret
cld
push
dec
lea
lret
rcll
fsts
push
mov
ss
jp
popf
arpl
ret
dec
push
aam
and
inc
ja
mov
lcall
movsb
stc
scas
lds
xchg
sbb
shlb
fisttpll
sub
xor
out
pop
adc
ret
std
lock
pop
sar
jae
fsubs
cld
clc
push
jb
push
sti
pushf
pop
cmp
xchg
push
push
lea
xorl
dec
pop
push
lahf
pop
shll
pop
and
xor
jb
xor
cmp
mov
mov
xchg
iret
imul
jl
leave
in
stc
jle
sbb
leave
aam
ja
test
call
jae
call
cmp
xor
xor
and
sbb
inc
fs
lods
mov
stos
movsb
shlb
test
lods
mov
leave
xor
das
sub
xchg
push
pop
loope
int3
jge
push
hlt
pop
mov
in
fstpt
push
mov
test
imulb
repz
lods
into
out
ss
add
adc
xor
dec
jge
adc
adc
pop
repz
xor
cmp
cmpl
pop
sarl
cmpsl
adc
and
filds
xchg
xchg
rcrb
enter
hlt
jg
mov
orl
pop
mov
outsb
xchg
adc
and
out
mov
sti
es
xor
dec
jecxz
pushf
jbe
mov
in
movsb
add
jnp
jnp
jae
scas
into
or
lret
push
jb
xchg
mov
mov
mov
and
aad
jne
mov
ds
xlat
fnsave
add
push
arpl
mov
inc
dec
push
repz
sbb
adc
cmp
jb
add
testl
das
das
pushf
nop
xchg
js
mov
call
js
jb
pop
sbb
mov
lods
insb
aad
jmp
scas
or
xor
jbe
jb
and
out
cwtl
int
push
inc
pusha
aaa
nop
dec
mov
add
loop
out
push
imul
jp
pop
adc
inc
js
sub
mov
pop
push
leave
test
loopne
xor
and
notb
push
sbb
aaa
add
and
out
cmp
fnstsw
and
sub
mov
and
in
imul
fcompl
mov
aaa
and
lahf
mov
fsubrs
mov
push
aaa
dec
or
jl
or
jmp
cs
push
decb
jae
rclb
pushf
mov
imul
ret
ret
mov
int
lahf
fidivl
rcll
aas
iret
jbe
or
dec
pop
outsb
add
out
scas
pop
xchg
inc
hlt
movsb
lock
popf
mov
mov
ret
sbb
cs
ja,pn
stos
cmp
push
loope
cltd
bnd
ret
sub
jnp
iret
mov
adc
jb
add
jb
cmp
dec
and
pop
loope
xor
lahf
and
lods
repnz
in
insb
mov
inc
insl
stc
pop
pop
lock
test
push
inc
pop
mov
int3
mov
xchg
lea
push
je
sbb
icebp
cli
das
push
push
cmc
fs
test
rcrl
dec
jp
js
loop
test
sub
pop
hlt
fsubl
dec
mov
push
push
outsb
push
pushf
rol
call
dec
shrl
xor
mov
pop
loop
add
adc
xor
push
or
pushf
adcb
and
imul
mov
lret
ja
lea
movsb
pop
sub
daa
pop
push
or
pop
sub
mull
icebp
ret
add
and
mov
jns
test
call
push
icebp
cltd
and
loopne
inc
xor
call
pop
pop
and
xor
cmp
cmp
xor
shrb
call
mov
enter
fs
arpl
pop
mov
addr16
adc
mov
int3
mov
enter
mov
mov
enter
dec
lret
lods
or
js
dec
mov
insb
lret
addb
push
in
xlat
ret
cmpsl
push
sbb
inc
sbb
mov
cmp
mov
aad
mov
and
push
jle
addr16
ret
cltd
inc
push
pushl
cli
cmp
cmc
or
push
fcmovnbe
fnstenv
outsl
ds
rcr
call
sub
stc
push
ja
test
sbb
sar
imul
sub
xor
aam
mov
pop
pop
aad
dec
mov
cmp
outsl
pop
ret
dec
add
fnstcw
aam
push
adc
sub
add
or
arpl
and
pop
jl
push
push
arpl
test
arpl
aas
xchg
out
jo
out
loopne
pop
sbb
sti
jge
jmp
mov
inc
mov
push
lret
push
repnz
sbb
rcrb
fisttps
fsubl
xchg
push
inc
add
push
xchg
xlat
mov
xor
xor
xchg
inc
mov
dec
inc
fdiv
mov
mov
out
inc
mov
sbb
in
pushf
scas
je
popf
aas
lret
mov
dec
cs
add
mov
inc
sarb
mov
jmp
jo
adc
ja
jecxz
js
sub
popa
xor
add
xchg
inc
xor
xchg
xchg
mov
sub
ja
out
inc
dec
gs
sbb
mov
cltd
cli
jns
jmp
cmpsb
or
dec
pop
dec
adc
pop
imul
shl
push
stos
rcrl
mov
sub
cmc
pop
hlt
jmp
test
ret
mov
xorl
jnp
push
rorl
xchg
pop
mov
jge
pushf
stos
xor
mov
dec
lods
xor
loopne
mov
in
pop
xchg
ss
hlt
xchg
movsb
sbb
pop
inc
fwait
sarl
leave
mov
sub
mov
jne
sahf
lea
cmpsl
int3
sbb
stc
adc
es
ds
mov
mov
sub
in
push
cmp
pop
xor
mov
jl
push
popa
sbb
sbb
jbe
int3
rsqrtps
cld
into
popf
sub
ljmp
and
cli
jmp
pop
xor
cli
mov
lahf
in
mov
ret
movsb
sbb
xor
rclb
adc
sub
movlps
push
ds
hlt
int
and
push
mov
aad
inc
data16
lock
paddq
sub
ds
xchg
ret
int
inc
sbbl
popf
mov
and
mov
jae
sbb
sbb
pusha
sub
movsl
inc
push
or
clc
mov
test
into
jbe
cli
test
test
jle
mov
adc
or
aad
int3
clc
push
addr16
lret
subb
jne
mov
xchg
mov
mov
xor
sarb
or
jecxz
pcmpeqw
aam
stos
adc
jo
out
dec
pop
cmpsl
fwait
jecxz
push
lods
pop
mov
addb
xchg
lret
push
and
imul
js
jg
xchg
decl
push
sbb
imul
push
cmp
push
and
outsl
inc
xchg
mov
test
cmp
xchg
jnp
fdivrs
imul
pop
bound
and
loope
and
mov
sbb
jp
stos
mov
pop
sbb
push
dec
ss
fwait
jl
das
inc
call
subl
leave
sbbl
fwait
jae
addr16
and
dec
and
sub
cmp
icebp
add
nop
hlt
push
mov
push
fwait
in
pop
dec
insb
dec
outsb
stos
out
adc
dec
jge
push
adc
lahf
sub
fnstsw
fstl
add
xchg
int3
sub
testb
pop
and
cmp
xchg
jno
pop
int
xchg
test
sar
cmp
fnstsw
cmp
negb
mov
push
popf
das
bound
mov
sti
jp
pusha
nopl
test
push
and
jmp
xor
xchg
das
notb
out
loop
adc
or
adc
inc
mov
dec
cld
push
fs
lods
xor
mov
and
addr16
inc
mov
push
mov
enter
or
test
dec
add
mov
xor
dec
lods
dec
sub
rcrl
jb
jmp
mov
jmp
dec
insl
daa
add
mov
lea
or
adc
int3
xchg
insl
ja
stos
push
fcmovu
into
sbb
enter
xor
lret
in
ds
jp
push
push
xor
or
aas
das
in
insb
ret
pop
adc
adc
cmpsl
shll
ljmp
push
faddl
incb
scas
daa
daa
dec
out
xchg
and
ret
cli
push
cmp
push
xchg
nop
sbb
dec
sbb
and
mov
mov
push
dec
jp
addr16
int
mov
jmp
jnp
in
pop
sub
mov
clc
call
add
nop
dec
push
jmp
pop
insl
js
je
test
cmp
dec
iret
daa
and
xor
sub
mov
add
lds
push
or
mov
inc
bound
push
hlt
hlt
xor
test
jmp
jnp
sub
pop
cvtps2pd
fimull
ljmp
cmp
sahf
add
lcall
sbb
cmpsb
cmp
jb
mov
stc
or
aad
xor
loope
add
pop
dec
xchg
inc
and
lret
jecxz
mov
loope
jno
sub
xlat
lods
dec
add
mov
orl
push
sbb
js
xor
sbb
push
fldcw
clc
jne
test
xchg
inc
orb
shll
inc
shlb
adc
push
xlat
push
pop
xor
adc
xor
into
in
sub
jmp
outsl
xor
sti
xchg
pop
lods
push
outsb
xchg
and
xor
repz
int
sbb
sbb
imul
push
inc
xchg
ljmp
inc
pop
ret
jns,pt
and
mov
cmpsl
jl
mov
stos
jmp
lret
jge
adc
testb
mov
cmp
cwtl
xor
decb
push
cmp
jge
adcl
aaa
sub
mov
pop
mov
divl
cmpsb
loop,pn
inc
mov
addr16
mov
fisttps
and
mov
scas
jecxz
aam
jnp
mov
mov
into
test
enter
icebp
and
mov
cmp
jl
fildl
pop
push
mov
lock
sbb
pop
gs
pop
dec
addr16
ret
xchg
mov
push
out
adc
inc
aam
or
mov
daa
and
daa
mov
int
xchg
mov
mov
int
out
sbb
movsl
out
movsl
stos
pop
jbe
inc
ja
pusha
sub
es
fstl
imul
les
mov
xchg
cmpsl
jle
sub
jge
cmc
cwtl
xor
test
lcall
push
push
pop
cwtl
sbb
adc
jg
aam
ret
sbb
jle
scas
icebp
adc
jne
movsl
popa
mov
fsts
mov
xchg
lret
xchg
mov
xor
add
aas
pop
outsb
mov
call
mov
mov
movsb
dec
cvtpi2ps
mov
scas
das
jge
pop
push
sub
inc
stos
or
or
fstps
pop
jmp
out
pop
mov
sbb
xchg
ret
sub
popf
out
call
or
jae
pop
pop
xor
mov
push
cld
mov
mov
dec
repnz
and
imul
add
or
mov
gs
test
xlat
mov
push
xor
adc
enter
scas
in
jb
mov
push
or
jnp
cmp
xor
xlat
lcall
jae
test
push
inc
movsl
xchg
insb
repnz
popa
pop
jo
and
jge
ljmp
nop
xchg
inc
cmpsb
fsubl
out
adc
repz
mov
mov
divb
pop
popf
std
mov
dec
std
pop
mov
nop
add
jmp
arpl
sbb
loopne
inc
xchg
addr16
mov
enter
pushf
push
rclb
aaa
xchg
push
pop
hlt
sub
fnstcw
ret
fs
xchg
into
lock
and
gs
inc
sbb
mov
cmp
fs
popa
cmp
scas
jno
lret
repz
or
xchg
jns
stos
aaa
push
fsubrs
js
repnz
les
lret
aad
and
adc
xchg
enter
iret
scas
mov
jnp
add
test
addr16
lret
cmp
in
mov
pop
data16
lock
test
cmp
mov
cld
loopne
mov
sahf
inc
jnp
mov
arpl
es
mov
dec
mov
ds
sub
in
mov
ret
scas
daa
or
repnz
xlat
repz
cmp
iret
dec
push
dec
xor
out
rorb
mov
adcb
jge
mov
pop
inc
mov
ret
decl
inc
push
test
ss
sub
push
push
mov
adc
decl
add
adc
and
jns
pop
pop
mov
push
cli
shlb
dec
rcll
mov
sti
push
sbb
push
out
adc
outsl
pop
jmp
das
pop
call
and
std
jge
adc
test
push
mov
pushf
popa
lds
or
and
jbe
dec
fwait
insb
inc
sti
jbe,pt
ja
inc
lods
and
inc
mov
mov
mov
fnsave
inc
pop
push
mov
add
or
mov
aad
lods
pop
scas
test
fsub
push
push
sti
jb
mov
call
pop
loopne
cld
mov
int3
pop
lahf
pop
inc
aaa
xchg
mov
pop
jae
push
cs
stos
fstps
loopne
cs
push
xor
dec
aaa
mov
mov
cltd
sub
addr16
aaa
xchg
pop
push
or
shlb
lods
ficompl
cwtl
cmp
cltd
cwtl
enter
fcmovb
inc
insl
xchg
xchg
daa
push
int
cltd
sub
add
push
iret
jmp
sbb
jne
xchg
sub
xor
test
adc
mov
fwait
stos
cld
sbb
dec
repnz
incl
jg
dec
jl
lret
std
lcall
dec
dec
or
jb
pop
add
or
jle
or
add
daa
mov
sbb
push
movsl
shlb
leave
xor
xchg
int3
lahf
sbb
and
sbb
adc
push
fildl
inc
and
jnp
outsl
popf
gs
or
push
xor
jmp
or
and
in
test
test
pop
mul
push
imul
out
dec
ja
inc
or
xor
xchg
xor
adc
fdivl
jmp
jmp
outsl
cmp
add
inc
mov
into
inc
lock
push
imul
aaa
push
test
push
inc
cmpsl
and
das
sahf
addr16
fildll
cmpsb
test
jae
and
sarb
add
aad
cmp
pop
shlb
pop
test
fnsave
fadds
xor
inc
enter
sbb
int
adc
scas
sahf
and
mov
push
mov
imul
lahf
sbb
xchg
pop
and
cs
cmp
adc
fisttpll
jmp
push
cmpsb
leave
or
daa
sar
cs
xchg
sub
scas
cmpsl
sub
stos
xor
dec
clc
xchg
insl
dec
jmp
fidivs
inc
movsb
and
cmp
jl
cs
or
insb
jnp
in
icebp
ds
add
pushf
or
cltd
in
adc
push
test
icebp
negb
pop
ljmp
cwtl
sbb
xor
push
sahf
xchg
adc
cmpsl
lock
mov
lock
adc
mov
imul
nop
pop
xchg
sti
cmp
in
or
lods
push
cmc
xchg
out
sbb
mull
xchg
add
push
ret
cmp
xor
sub
dec
lret
andl
lock
in
adc
adc
out
xchg
mov
mov
mov
xchg
adc
pop
pushl
lods
lret
cld
rcrb
dec
jl
aad
and
ret
mov
movsl
push
mov
repz
ss
or
ljmp
pop
fwait
inc
sub
icebp
sbb
mov
mov
or
or
or
iret
out
and
into
jg
cmp
push
int
insl
les
inc
mov
cmp
push
or
dec
std
movsl
and
les
inc
inc
dec
js
bound
or
mov
aam
test
xor
jne
mov
iret
das
das
inc
push
sarb
dec
and
scas
nop
popf
push
mov
mov
mov
or
outsl
aam
icebp
ljmp
xchg
pop
aas
int3
add
imul
push
insb
or
inc
std
jg
jbe
push
push
lds
and
pop
cmpsl
rolb
pop
xchg
mov
cwtl
or
inc
add
movb
and
pop
pop
out
mov
jns
lock
mov
daa
jmp
shrb
xchg
popa
icebp
inc
outsb
xchg
or
add
aad
mov
cmp
stos
xlat
and
lahf
and
push
inc
mov
icebp
stos
dec
add
popf
push
ds
lods
bound
cmp
stc
lock
mov
xchg
sbbb
mov
std
jmp
lahf
sbbl
mov
scas
inc
xorb
movsl
jb
ljmp
out
adc
addr16
push
push
popa
popf
adc
push
xor
sub
xor
cmp
pop
or
ret
mov
cwtl
jo
insb
cwtl
in
inc
xchg
outsl
cmp
scas
pop
bound
dec
daa
pop
xchg
xor
bound
mov
test
aad
cltd
pop
arpl
test
pop
mov
mov
pop
xor
int
pop
repz
in
and
jne
fldlg2
mov
in
adc
pop
das
or
ret
adc
jnp
and
rcrl
scas
mov
mov
je
lcall
cmp
or
mov
jmp
out
das
outsb
pop
hlt
gs
rorl
lods
or
test
aam
test
mov
mov
das
jl
divb
dec
dec
push
pop
mov
gs
insl
adc
addr16
mov
pop
and
stc
lods
dec
scas
call
dec
inc
xor
cmc
add
hlt
xor
push
jl
pop
jle
jo
lods
push
testb
in
mov
fsts
cmpsl
mov
dec
ds
pop
cmp
std
mov
shl
out
ljmp
fadd
sbb
push
arpl
cli
lock
jecxz
leave
lods
jns
adc
dec
inc
loope
inc
out
cli
push
dec
pop
cmp
outsb
dec
mov
lret
mov
test
mov
inc
sub
out
rclb
aas
dec
jecxz
ss
bound
ficoms
repnz
nop
push
sub
lcall
add
sbb
andl
cmp
mov
or
jp
push
mov
popa
xor
or
push
imul
aad
imull
sbb
js
mov
xchg
push
adc
jb
sub
leave
sub
hlt
int3
lahf
jno
pop
pushf
fisubs
pop
lahf
movsl
scas
or
fistpll
push
fnstcw
push
or
pushf
pop
ss
pop
dec
dec
in
push
inc
mov
xchg
movsb
testl
divb
call
add
jge
fchs
jo
test
out
ljmp
stos
cmp
inc
insl
sbb
mov
dec
push
sub
push
mov
ja
ljmp
mov
sub
rorb
adc
sbb
std
stc
sbbb
mov
pop
mov
and
cmpsl
xor
nop
and
xor
loopne
mov
cmp
sbb
ds
mov
push
out
mov
xchg
enter
push
dec
scas
fisttpll
jne
sti
cmp
orb
xchg
or
push
or
test
out
xor
daa
mov
fcmovne
cltd
dec
jae
inc
pop
repnz
sub
mov
sub
sub
adc
mov
movsb
sbb
stos
jp
dec
out
pop
push
xchg
add
movl
mov
mov
cld
sbb
mov
xrelease
xchg
int3
add
mov
and
aam
inc
cmp
lcall
mov
jb
mov
xchg
pop
push
addr16
pusha
fildl
dec
push
scas
or
jecxz
cltd
test
sub
rcrb
jae
xor
sbb
xor
xor
loop
dec
pushf
in
xlat
push
insb
fsubr
js
addr16
xlat
fdivrl
cli
xchg
inc
push
jl
rclb
push
rcll
push
add
xor
xor
jae
sub
mov
pop
std
pop
mov
or
adc
dec
in
jnp
nop
lods
rorb
pop
outsb
repz
pop
jno
test
push
cmp
sbbl
fbstp
push
lret
inc
jno
push
into
xchg
arpl
mov
jae
push
popfw
pop
xor
sbb
fcoms
sub
sub
jae
push
adc
outsb
inc
mov
or
repz
imul
in
jp
mov
scas
adc
movsb
jne
mov
cmp
mov
repz
xor
cmpps
test
pop
dec
sub
sub
sti
inc
lock
out
jnp
xchg
lahf
or
out
mov
pop
push
shll
dec
mov
pop
sbb
ret
icebp
out
xor
test
fisttpll
bound
pop
pop
je
stos
xor
out
pop
pop
push
notl
cmpl
push
and
call
iret
mov
sub
mov
add
in
ds
repnz
cmp
fiaddl
lret
mov
dec
sbb
notl
std
scas
aaa
push
xor
data16
jg
and
jge
outsb
cmp
push
cmp
mov
mov
sub
adc
push
and
inc
cmp
out
out
jge
popa
sar
jno
test
ds
jecxz
mov
push
mov
dec
mov
inc
rolb
inc
xchg
jp
dec
push
inc
test
int
inc
mov
xor
sbb
mov
sub
adc
outsb
pop
adc
ds
fsubrs
cmc
lds
add
mov
int
pop
xchg
scas
pop
loopne
xor
mov
test
test
inc
sahf
or
push
femms
fwait
pop
adc
sub
std
js
or
xchg
push
rorl
negb
pushf
out
std
push
mov
jae
mov
std
subl
pop
add
or
ret
mov
jne
mov
or
jne
addl
cltd
addr16
sbb
ret
out
popf
sbb
popw
sbb
fists
and
es
fmuls
arpl
cltd
xchg
outsb
xorl
or
int3
jbe
pop
and
je
fsubrl
xchg
adc
or
movsl
pop
stos
imul
call
adc
push
faddl
jae
mov
cmp
add
inc
pop
mull
roll
push
adc
scas
xor
and
pushf
push
pop
jne
fcomi
adc
aad
frstor
andw
aas
dec
ja
jecxz
shl
ds
adc
mov
sti
xchg
xor
mov
push
pop
mov
aad
roll
pop
push
xor
ficoml
xchg
sub
cmpsl
inc
stos
je
jnp
nop
pusha
and
cmp
test
movsl
or
enter
dec
mov
fstl
fisubl
sbb
pop
mov
bound
nop
push
add
loop
movsl
pop
inc
mov
fsubs
jbe
and
cmpsb
and
sub
insb
out
mov
jmp
inc
mov
xchg
inc
mulb
in
loopne
ljmp
sbb
out
roll
add
pop
popa
push
inc
repz
into
inc
push
mov
sbb
cmpsb
mov
cmpsb
mov
xchg
das
pop
int3
aaa
lods
sub
lods
dec
popa
lahf
jne
inc
mov
gs
les
xchg
in
cli
sbb
sbb
call
fsubr
dec
out
pop
dec
out
roll
inc
imul
cmp
add
add
test
aaa
sub
inc
jmp
cmpsl
xchg
in
ret
and
in
mov
xor
out
jno
pushf
orb
pusha
jno
dec
insb
cltd
sub
adc
jae
mov
arpl
jmp
mov
adc
mov
in
mov
jae
add
sarl
sub
xchg
and
add
or
xchg
mov
mov
adcl
cwtl
popa
jecxz
push
les
xchg
add
lea
push
aad
mov
or
lods
jp
lods
dec
push
inc
lcall
in
sub
lock
xchg
out
cli
fisubrs
mov
popl
cmp
ficoml
inc
das
mov
int
jno
lahf
adc
or
ss
in
sub
dec
cli
lret
mov
pop
ja
or
les
cwtl
lods
jbe
daa
rcll
adc
xor
inc
scas
push
xor
jp
push
pop
lock
mov
mov
jmp
sbb
stc
mov
clc
mov
cmp
mov
mov
cmc
idiv
ja
call
xor
push
adc
ret
jne
inc
repnz
fdiv
cmovno
or
gs
cli
mov
loop
pop
mov
in
arpl
inc
jge
aaa
sub
insb
mov
aas
sbb
cwtl
scas
and
push
leave
dec
icebp
call
push
dec
ss
or
jecxz
sub
xor
ljmp
pop
pop
cmc
jp
pop
gs
in
pushf
shll
outsb
sbb
inc
mov
je
pop
es
xchg
adc
mov
sub
jae
mov
rol
pushf
mov
das
getsec
mov
lock
pop
sbb
pop
jno
xlat
out
loop
arpl
add
in
jmp
imul
fsub
cld
hlt
sub
cmp
push
mov
test
stc
movl
jl
push
lea
fs
das
movsl
insl
test
or
negl
idivl
jb
push
mov
std
mov
andb
lods
inc
lea
mov
out
mov
pop
xchg
xor
pop
sbb
in
xor
test
cmp
push
push
sbb
fisttpl
out
adc
push
jge
inc
ficoms
cwtl
xor
sar
push
mov
xchg
adc
adc
jns
cmp
nop
icebp
mov
xor
sub
push
push
test
sbb
sub
jmp
popl
repnz
insb
pop
adc
sub
dec
adc
imul
stc
arpl
add
lcall
mov
stos
das
movsl
push
dec
sahf
jo
ds
push
sub
test
xchg
sbb
dec
push
lahf
push
cmpsl
idivl
lahf
in
lods
jle
scas
stc
xor
jns
leave
imul
xor
ljmp
sub
mov
lahf
mov
mov
inc
mov
outsb
imul
xor
xchg
pop
icebp
jo
and
push
testl
lahf
or
mov
xchg
or
decl
cmpb
pusha
lds
in
xor
xlat
in
add
sbb
rcr
shrl
add
dec
adc
mov
bound
call
lcall
pop
test
rolb
ret
xchg
add
imul
test
cmp
dec
mov
cs
mov
push
fwait
xlat
je
cmc
popa
adc
or
movlps
imul
mov
bnd
inc
xchg
dec
icebp
mov
mov
and
aaa
xorl
js
pop
mov
and
cmp
jmp
push
inc
adc
push
test
in
rol
or
loope
faddl
sbb
mov
call
dec
es
aad
push
sub
pop
xchg
lret
jb
jmp
cmpl
mov
insb
mov
pop
mov
fdivr
std
in
mov
lret
push
ljmp
in
jo
lret
out
adc
or
mov
ja
in
xchg
sub
in
mov
and
jne
xchg
decl
xor
icebp
push
xchg
xlat
out
lea
jae
sbb
int3
daa
in
mov
rorl
test
or
mov
outsb
jnp
cmp
hlt
or
push
mov
pop
aas
sub
add
mov
in
mov
adc
and
imul
repnz
lods
mov
cwtl
cmpl
cmp
inc
lret
and
inc
insb
sbb
insb
ds
dec
cmp
mov
lret
aaa
dec
test
out
shll
repnz
jp
and
lock
mov
pop
dec
and
xor
rcrl
and
stos
movsl
arpl
sbb
jo,pt
pop
lret
xlat
gs
sbb
adc
inc
scas
push
icebp
mov
jl
add
inc
orl
imul
jmp
pop
cwtl
out
sub
mov
test
mov
jp
inc
std
test
hlt
jmp
ljmp
aad
jbe
ret
xchg
loop
jmp
mov
adc
and
ja
adc
lea
and
mov
test
ret
fistps
out
xchg
xchg
pop
repnz
xor
inc
xchg
jmp
mov
xor
bound
cwtl
sti
xchg
fwait
out
adc
mov
mov
ficoml
sbb
cmp
adc
push
mov
je
adc
outsl
je
stos
ret
pop
mov
and
dec
or
jmp
xor
jns
dec
das
cmp
push
xor
inc
adc
sbb
stos
inc
mov
cmpsb
mov
add
jb
sub
push
pop
fnsave
fwait
ljmp
cmp
stos
mov
test
mov
in
fnstenv
xchg
lret
jge
repz
sbb
stos
jae
sub
cmp
xlat
call
inc
incb
or
cmp
mov
sti
or
mov
ljmp
bound
les
shrl
jg
mov
ja
mov
leave
cvtps2pd
clc
push
cmpb
mov
in
add
inc
xchg
adcb
pop
xchg
mov
aad
enter
xor
push
icebp
dec
adc
mov
int
out
mov
inc
sbb
xchg
out
gs
push
xor
pop
leave
xor
sub
aam
pop
scas
mov
jl
pushf
mov
cwtl
and
and
mov
adc
inc
bound
test
test
sbb
ret
cmp
neg
cld
inc
jo
pop
mov
dec
cmp
cmp
call
hlt
add
adc
mov
mov
clc
push
push
aaa
stos
mov
subb
push
inc
add
dec
jno
hlt
or
inc
popa
push
sti
push
popl
cmp
jle
idivb
jp
add
or
dec
xor
out
jne
pushf
mov
fisubrl
add
xchg
xchg
push
mov
xchg
xchg
sub
mov
adc
enter
jp
xchg
mov
and
or
pop
push
loop
enter
lea
outsl
and
punpckhdq
data16
lcall
or
fstps
scas
mov
negb
enter
push
repz
rcrl
out
and
fwait
popf
mov
xchg
pop
ljmp
mov
sbb
popa
push
outsb
mov
idivb
fbstp
shl
adc
cltd
fstpl
push
dec
inc
mov
imulb
out
bnd
fwait
xor
pop
fistpll
xchg
mov
xchg
lahf
test
in
sub
cmp
roll
pop
fdivl
addr16
call
stos
icebp
lods
push
fnstenv
mov
or
fisttps
mov
jnp
cmc
scas
mov
inc
sbbl
adc
pop
lods
jp
shrb
push
in
cmc
adcb
add
push
rclb
jmp
aaa
push
inc
add
ficomps
sbb
in
test
testl
in
push
push
jge
mov
comiss
mov
fistps
cmpsb
je
das
jmp
or
fcmovnbe
inc
hlt
cwtl
out
out
out
push
xlat
cmp
sub
pop
addr16
adc
pop
fdivs
mov
aam
pop
sub
cltd
pop
mov
ret
or
mov
jnp
xor
test
inc
rcll
mov
sbb
iret
jmp
jg
add
cs
xchg
repz
lock
jb
loopne
stos
jns,pt
aaa
add
in
dec
sbb
mov
sti
lret
xor
push
out
mov
push
dec
ljmp
sub
imul
aas
pop
les
push
cwtl
out
cmp
scas
fnsave
out
xor
or
cmp
inc
mov
and
cli
pop
ret
fbstp
mov
ret
jb
inc
dec
push
xchg
and
loopne
cmpsl
inc
inc
mov
addr16
adc
stc
aaa
test
mov
jle
subl
or
repnz
jns
inc
add
sbb
lahf
addr16
dec
mov
hlt
sti
lods
mov
in
rorb
out
inc
in
xchg
sub
lds
in
ret
xor
ret
pop
mov
sub
imulb
sub
dec
or
mov
mov
mov
push
leave
cmpb
lods
pusha
jle
dec
fldcw
adc
inc
in
xchg
decl
or
cmp
int3
or
rorl
std
mov
cmp
pop
mov
insb
mov
mov
mov
in
inc
cltd
or
add
add
xor
rol
ret
popa
lret
jbe
inc
cmp
ss
test
adc
or
scas
pcmpeqw
lods
div
xor
push
imul
add
test
in
call
stos
lock
test
mov
sbb
sub
sbb
test
pop
stos
setnp
jmp
mov
cmp
push
dec
mov
std
repnz
rcll
fidivrl
aas
pop
mov
adc
test
xor
push
push
scas
adc
sub
or
cli
pusha
jecxz
inc
cmc
adc
repz
scas
js
sub
and
inc
mov
mov
std
push
inc
aam
outsl
cld
movsl
enter
inc
loopne
push
test
mov
sbb
ljmp
adc
and
cmpsl
stc
pop
mov
cli
lcall
xor
mov
xor
cmc
pop
cmp
xchg
rcrb
lret
xchg
inc
and
popl
addr16
test
iret
jle
aad
imul
test
push
test
imul
jle
sub
mov
dec
cmp
cwtl
mov
pop
mov
popa
mov
rorb
jbe
in
ficomps
xor
xor
movsb
add
and
mov
popa
std
fistl
jns
jecxz
add
daa
sub
ja
sbb
in
icebp
iret
iret
jnp
cltd
lds
js
mov
push
shl
sarl
scas
mov
mov
pushf
fwait
xchg
lea
mov
xor
and
icebp
and
aad
aas
add
in
pop
adc
jmp
jecxz
xchg
icebp
negl
lods
mov
sar
out
pop
test
addr16
jno
pop
je
and
ret
and
mov
xor
ret
jge
stc
xlat
outsb
pop
xchg
sub
adc
mov
popa
mov
push
xor
repnz
testb
and
sub
aaa
js
mov
xchg
jle
xor
aam
lea
rcll
pop
or
fstl
mov
push
insl
es
xchg
inc
insb
movsl
jp
inc
push
cmp
sbb
outsb
xor
cmp
adc
pop
cmp
sub
aas
mov
fwait
aam
shlb
xlat
stos
adc
cmp
add
shrl
add
inc
xor
pop
adc
pop
lds
aad
mov
jl
pop
xchg
sbb
jmp
push
negb
int
cli
pop
mov
sbb
and
ficompl
aad
or
push
xor
push
test
scas
mov
enter
cmp
mov
aaa
aad
stc
scas
frstor
std
and
leave
rcrb
cld
sbb
insl
mov
or
js
adc
imul
dec
mov
iret
shlb
stos
sbb
jmp
mov
cmp
out
mov
fwait
movsl
or
xor
xchg
mov
int3
dec
sbb
sub
xlat
mov
shlb
jnp
stos
mov
inc
jb
hlt
add
arpl
lock
mov
cmc
cwtl
jle
cmp
xlat
into
repz
xor
lret
out
mov
xchg
lods
xorb
add
out
hlt
out
sbb
int3
or
imul
pop
jl
inc
jnp
popf
lea
lret
std
enter
xchg
dec
jno
mov
fwait
dec
imul
fisttpl
push
cltd
add
ror
clc
addr16
fsqrt
xchg
dec
pop
bnd
xor
mov
cmp
sub
int
xchg
dec
fisttps
int3
or
mov
mov
andl
popa
cmc
ret
add
mov
sti
loopne
pop
std
jmp
in
pop
mov
les
aad
cmp
scas
jne
fmuls
cmpsl
inc
mov
scas
pop
mov
pop
adc
xchg
sbb
nop
leave
mov
rcrl
jecxz
fsubs
inc
testb
in
jae
dec
push
fists
sbb
sti
cltd
shll
fcmovu
bound
flds
lret
xor
sbb
int3
cmp
inc
out
bound
inc
loope
std
mov
fidivrl
dec
iret
shrl
sarl
dec
add
jb
push
stos
pop
lahf
movsb
pop
rolb
cmp
cmp
pop
enter
gs
push
push
mov
imul
movsl
test
jb
mov
adc
xchg
mov
jo
std
or
faddp
dec
xchg
push
sub
mov
xchg
pop
repz
popf
push
daa
push
aas
xor
dec
out
dec
cltd
xchg
jno
in
mov
push
xor
fdivs
jno
scas
repz
jno
mov
aaa
test
cmpb
mov
mov
aad
add
push
std
sub
sti
sub
fiaddl
sub
jno
xchg
int
popf
std
in
dec
call
pop
cmp
clc
rdpmc
lret
call
dec
inc
scas
push
in
lods
stos
outsb
fnstenv
xchg
and
stos
mov
cmp
sub
leave
movsl
jmp
scas
dec
mov
cwtl
je
leave
push
sti
lods
mov
and
lods
lds
hlt
mov
cmpsb
fistpl
daa
xor
push
push
cmpsb
leave
mov
in
inc
pop
dec
movsl
push
jp
les
sub
mov
ss
lret
mov
movsb
cs
mov
push
inc
mov
cmpsl
fidivrs
mov
test
add
inc
jge
inc
xor
jmp
sbb
dec
lahf
ret
je
xchg
sbb
insl
arpl
test
shl
cmp
adc
rcll
mov
mov
inc
stc
pop
sahf
lcall
lock
adc
lret
adc
mov
test
fdivs
xchg
mov
idivl
out
cmpsl
push
ja
jne
xchg
pop
dec
and
mov
in
xchg
stc
scas
ja
pop
jbe
fcmovnb
mov
test
pop
xor
sub
cmc
and
mov
lret
bound
lret
mov
pop
mov
mov
test
push
adc
xchg
and
iret
stos
xor
cmpsb
pop
mov
scas
jbe
idivb
fs
fs
inc
add
sub
test
add
testl
enter
pushl
add
jmp
or
fists
inc
or
dec
int
stos
lret
negb
cmp
nop
cmpsb
sarl
movsl
test
mov
fdivs
pop
push
pop
mov
pop
cld
rolb
adc
orb
and
push
enter
jne
dec
mov
xor
call
and
inc
sti
mov
loope
fisttps
xor
jp
imul
jg
mov
add
imul
test
push
call
std
inc
mov
pop
mov
mov
push
sahf
je
popa
and
ljmp
pop
outsb
call
mov
ljmp
arpl
cmp
stos
and
pop
and
sub
mov
mov
xchg
cmc
mov
sbb
iret
das
and
add
adc
shl
or
mov
lea
ret
xchg
cs
cmp
pop
add
sub
fnstsw
leave
adc
sub
cwtl
adc
mov
fisubs
jb
push
ss
repz
addb
insl
out
xorl
popf
in
loope
call
jno
sbb
push
jnp
jecxz
dec
test
inc
outsl
out
mov
and
mov
xor
inc
xchg
lcall
negl
sub
xchg
popa
lods
jmp
mov
pop
ds
pop
lds
sub
pop
push
cmp
xor
movsb
scas
lahf
into
cmp
stc
mov
sub
jo
or
lret
mov
pop
xchg
adc
jo
mov
jp
push
pop
sarb
push
xchg
mov
cld
jae
mov
mov
aam
mov
ficoms
pop
mov
push
test
push
fldenv
jne
add
pop
dec
inc
scas
mov
xor
mov
stc
adc
mov
sbb
insl
or
ret
insl
jge
cltd
out
mov
cmpsl
pop
mov
sar
or
inc
outsl
stos
mov
add
aas
mov
enter
icebp
lods
cwtl
jle
ss
stos
dec
fwait
sbb
push
pop
cmp
push
mov
sbb
jmp
mov
andb
jno
inc
aam
jne
cltd
xor
cli
fcomip
lret
mov
lods
adc
jmp
imulb
xor
sahf
fbstp
dec
xor
js
mov
int
call
ds
aad
mov
ret
in
mov
xchg
sbb
inc
sbbl
insb
out
mov
and
je
jecxz
sbb
jns
jne
inc
orb
das
jns
xor
enter
xor
push
stc
xor
or
xchg
int3
ljmp
fimuls
aaa
bound
lods
fnstsw
arpl
cmp
jbe
les
dec
xorb
js
clc
push
fs
push
adc
inc
insb
xor
subl
or
out
adc
pop
outsb
shrb
filds
push
lahf
ljmp
sbb
repz
xchg
sbb
mov
xchg
stos
scas
inc
jo
pop
ficoml
mov
jns
popf
jmp
cmpsl
sub
arpl
sub
xchg
es
out
lods
jmp
out
movsb
cmpsl
xor
pop
cwtl
les
add
out
mov
mov
in
mov
pusha
mov
mov
repnz
fwait
push
push
mov
mov
push
pushf
and
in
inc
cmpsb
cmp
rcrl
and
cmpsl
dec
adc
inc
jae
ss
sub
fdivp
les
push
fs
shll
fiadds
mov
sbb
es
rol
xchg
icebp
add
push
dec
jbe
test
scas
fmuls
xor
mov
ficomps
cmc
inc
sarb
nop
push
sbb
jle
out
fildll
testb
add
pop
fcoml
mov
xlat
out
jle
sub
lods
mov
push
sbb
ss
cs
pop
ds
sbb
clc
aam
rcl
mov
add
jne
pop
adc
jge
repnz
rcll
xchg
cltd
in
test
rcl
imul
pop
cmp
js
or
out
pop
pop
xor
push
sbb
mov
push
add
gs
push
push
mov
icebp
adc
cli
and
jne
sbb
sbb
pop
imul
daa
mov
pop
jg
push
sbb
sub
sbb
xchg
mov
pop
add
dec
inc
fnstenv
dec
out
xchg
pop
inc
mov
adcb
inc
es
insb
mov
scas
orb
rorb
out
fstps
adc
mov
sub
add
sbb
mov
cld
sbb
xor
adc
inc
or
mov
adc
out
inc
cmp
add
iret
jg
pop
pop
sbb
sti
movsl
cmp
js
outsl
ljmp
cmp
movsl
in
test
adc
adc
pop
inc
shll
dec
mov
mov
adc
adc
push
sbbb
out
ret
lods
sub
std
call
add
adc
pop
sub
xchg
dec
js
xor
nop
pop
movsl
adc
aaa
loope
enter
inc
mov
jns
xchg
lcall
ss
into
test
lods
mulb
xchg
movsl
jl
aam
or
and
fisubl
inc
in
add
mov
cld
mov
pop
sub
fs
jp
mov
addb
or
mov
xchg
out
or
sbb
adcb
lods
out
inc
cmp
aad
xor
movsl
bound
mov
jne
sbb
or
popa
ja
push
daa
mov
ret
insb
jns
mov
mov
das
push
or
add
in
xchg
mov
adc
mov
cmp
sub
loop
inc
lea
call
lods
setle
addr16
outsb
pop
cmpl
sub
scas
xchg
or
cmpb
push
fmull
adc
repnz
incb
xchg
cmp
sub
and
or
int
mov
fsubl
adc
loope
scas
scas
xor
and
push
icebp
pop
xchg
cmp
mov
dec
das
inc
clc
pop
or
or
sarl
sub
rclb
dec
mov
scas
cmp
and
js
inc
inc
push
cmp
repz
cmc
test
add
add
sub
lds
in
cmp
lret
nop
cs
cmp
sbb
cli
sub
jbe
xor
mov
mov
push
imull
xchg
sub
and
das
xchg
xchg
jb
and
mov
adc
pop
pop
mov
sarb
push
lcall
xorb
cwtl
cmp
xchg
sub
notl
jnp
test
ds
popf
aad
xchg
outsb
in
int
and
ja
dec
inc
push
push
int3
cmp
lods
xchg
dec
mov
movsb
movl
adc
or
mov
jp
add
pop
dec
es
aaa
push
xchg
aas
test
sbb
movsb
enter
es
fcoml
loopne
add
sbb
shrl
pop
mov
hlt
sub
push
stos
movsl
pop
mov
sbb
jae
add
daa
dec
xor
arpl
push
mov
add
xor
push
inc
push
push
lock
ret
add
jecxz
popa
pop
add
bound
sbb
xor
movd
adc
or
dec
cmp
mov
jns
fwait
inc
jo
mov
mov
adc
xor
je
mov
adcl
push
hlt
push
stos
sub
or
stos
mov
push
dec
and
xchg
and
mov
push
mov
mov
sub
cmpsl
std
rorb
ret
push
xchg
jno
add
outsb
mov
fnstsw
leave
mov
ljmp
xchg
icebp
stos
call
sub
movsb
nop
shr
outsb
mov
xchg
mov
jecxz
sbb
mov
pop
xor
lcall
imulb
mov
push
cmpsb
mov
mov
stos
sub
out
test
out
leave
mov
int3
xor
sub
movsl
fyl2xp1
aam
or
mov
sub
fimuls
fcmovnb
fiaddl
dec
lds
add
jge
iret
cmp
xchg
cwtl
cmp
out
jnp
out
lahf
or
mov
std
jbe
dec
mov
mov
ss
push
imul
xor
dec
aad
pop
jnp
sbbb
clc
jg
xorb
js
cld
adc
outsb
ljmp
notb
mov
mov
ficoms
mov
mov
add
mov
stc
mov
adc
movsb
sbb
push
pop
nop
imul
fidivrl
mov
call
int3
add
stos
imul
jo
mov
fnstenv
mov
push
sbb
fimuls
lds
add
rcr
mov
inc
pop
sub
stc
xchg
mov
inc
mov
add
inc
sub
sub
and
hlt
push
jp
add
cmp
jns
mov
fdivr
cmc
mov
out
and
inc
mov
lcall
outsb
mov
mov
or
adc
loopne
imul
lods
es
jb
leave
cli
pop
sbbl
subl
sub
xor
mov
inc
out
in
push
push
inc
add
pop
xor
imul
jbe
push
stos
test
roll
les
pop
mov
in
push
call
in
popa
jg
mov
jg
pop
arpl
dec
fst
xorb
lea
mov
xor
jle
mov
sbb
pushf
and
inc
dec
test
push
and
rcrb
xchg
sub
fwait
and
imul
lret
gs
cli
in
dec
fsubrl
lock
xor
fldt
pushf
clc
jbe
loop
xchg
sbb
aas
fiadds
xor
and
js
movsl
loop
aam
pop
xor
orl
cmp
mov
rcll
xlat
sbb
push
xchg
jo
out
stos
ljmp
xchg
in
in
mov
adc
neg
hlt
mov
gs
js
push
pop
push
stos
daa
pushf
or
jne
cmp
jp
or
add
sbb
mov
or
add
mov
and
gs
sarl
std
mov
test
dec
mov
adc
inc
sub
push
xor
repnz
call
pop
xchg
mov
out
in
mov
mov
jo
mov
iret
sub
and
sub
jmp
push
stc
push
sbb
pusha
mov
push
cld
or
mov
call
cmp
mov
test
mov
adc
mov
mov
push
dec
mov
pop
ret
dec
lods
test
ljmp
and
mov
lcall
mov
sbb
nop
loopne
inc
adc
or
lahf
arpl
out
push
cmp
cli
jb
push
sbb
lea
dec
jae
ljmp
ds
or
pop
xchg
sbb
les
pop
lods
xor
ljmp
ret
rcrl
push
mov
pop
into
outsl
ljmp
jge
sbb
mov
mov
ds
mov
pop
es
adcb
push
push
push
test
lea
arpl
in
addr16
fs
sbb
aas
es
je
cmpsl
xchg
push
lock
outsb
xchg
pop
and
dec
push
iret
loope
inc
jg
sub
add
ret
pusha
inc
sti
push
outsb
mov
in
jb
fs
call
cld
dec
mov
call
clc
jmp
ret
fistps
lret
pop
adc
sub
dec
mov
sub
jmp
pcmpgtb
mov
and
popa
rcl
jbe
pop
xorb
loopne
sub
clc
xlat
xor
movsb
jecxz
pushf
cmp
and
add
fstpt
push
bound
test
out
jbe
pop
in
jp
sbb
ss
xchg
mov
jecxz
pop
adc
filds
repz
or
push
and
inc
les
adc
jmp
xchg
cmp
sub
and
ret
adc
push
add
pop
mov
fst
xchg
pop
jl
jge
in
ficomps
std
int3
dec
mov
xchg
lock
add
push
into
fidivrl
aaa
ret
adc
cmp
enter
cmp
add
jno
cmp
mov
das
iret
dec
andl
scas
inc
push
sub
pop
rcrl
sub
jbe
mull
nop
pop
or
mov
dec
push
pop
pop
cmp
xchg
cmpsb
movsl
sbb
sbb
jmp
push
outsl
xor
popa
fs
fcomi
imul
jbe
out
jp
ja
or
pop
loope
outsb
or
jo
pop
mov
movntq
out
push
aas
repz
jl
sub
ja
adc
aad
adc
data16
xor
aad
stos
push
mov
mov
aad
pop
inc
sahf
xor
jmp
adc
push
int
cmp
sbb
jno
aam
mov
cmpsb
add
into
dec
aad
dec
fdivs
mov
sti
inc
dec
sbb
data16
stos
shrb
and
push
cmp
jbe
inc
adc
and
hlt
in
adc
imul
jl
call
jo
lods
std
or
test
cmpsl
xchg
mov
sbb
sbb
cmp
pop
ret
inc
sbb
mov
fs
dec
or
cmp
jno
mov
adc
jbe
cmpsl
fs
jb
dec
mov
test
jo
lods
bound
jb
cli
or
or
je
sbb
rolb
xchg
jae
orb
scas
outsb
sub
lods
aad
nop
push
sti
pop
cmc
out
inc
loope
pushf
inc
inc
loopne
js
or
enter
adc
clc
sbb
inc
ret
scas
push
add
int
arpl
xchg
push
adc
sub
data16
mov
fwait
ljmp
cmpsb
fisubs
or
jle
xor
scas
mov
cmpl
addr16
mov
gs
mov
sub
testb
loope
insb
inc
sbb
pop
hlt
mov
lock
mov
repnz
fisubrs
pop
in
pop
jmp
sbb
je
push
sbbb
sub
enter
bound
pop
rol
movsl
mov
ds
xor
das
adc
ja
mov
movsl
xor
jge
adc
dec
loopne
clc
mov
push
cltd
adc
stos
stc
and
dec
mov
mov
sti
inc
cmpl
mov
enter
and
xchg
pop
out
jbe
mov
inc
xchg
lret
pop
rcll
lea
cmp
sub
jne
aad
lcall
pusha
cli
ret
mov
mov
ret
mov
insl
stc
cwtl
jecxz
jno
cli
imul
int3
dec
mov
out
push
cli
mov
lds
sahf
add
aad
mov
shr
sbb
dec
sub
push
sbb
pop
repz
mov
nop
cmp
jne
bound
movsl
jno
daa
sub
sar
mov
pop
stos
cld
xchg
add
nop
xor
jne
xchg
pop
rcll
add
test
sub
std
adc
xlat
dec
and
xchg
dec
ljmp
xchg
ljmp
and
xor
dec
mov
cmp
fadds
mov
movsl
loopne
leave
or
xor
daa
push
out
mov
adc
mov
push
cmp
mov
mull
cmp
cmpsl
loopne
dec
rcl
and
sbb
ja
jl
jecxz
cmp
imul
pop
icebp
mov
push
sub
sbb
mov
cli
xor
imull
insb
xchg
xchg
fs
mov
leave
dec
mov
mov
sbb
push
push
clc
stos
inc
pop
jb
out
xchg
sub
push
repz
popf
cmpb
mov
loop
dec
sbb
cmp
mov
les
or
inc
cmp
jne
scas
cmp
mov
xorb
push
pushf
shlb
fwait
data16
jnp
int
dec
cwtl
hlt
stos
push
jnp
mov
mov
and
dec
mov
sub
push
aad
mov
cli
enter
jo
imul
or
push
xor
mov
jecxz,pt
jbe
pcmpgtd
fwait
mov
adc
fdivs
outsb
je
test
sub
das
adc
shlb
or
ss
call
xor
mov
xor
sbb
cmpsl
lods
movsl
or
cmpsb
pushf
mov
bnd
inc
fistpll
sub
or
xchg
aaa
jmp
push
and
movsb
pop
dec
bound
sub
xchg
rcl
dec
or
xor
pop
jne
mov
shlb
xchg
mov
sub
popf
sub
mov
call
outsl
jecxz
test
fs
test
adc
aad
xlat
rcrb
push
push
mov
mov
mov
xchg
fwait
xchg
dec
adc
sahf
xchg
sbb
xchg
sbb
call
jb
jge
sti
jp
mov
sti
call
lahf
test
iret
adc
jo
jg
mov
xchg
ret
xchg
addl
inc
or
pop
mov
das
cmpsl
push
loope
xchg
mov
rorl
fs
mov
mov
add
cltd
mov
mov
add
ja
xchg
js
jecxz
add
mov
leave
into
push
lret
pushf
mov
ficomps
push
out
push
inc
xchg
test
lret
insb
imul
dec
btr
add
stc
out
mov
xchg
outsb
dec
cmp
ss
pushf
push
xlat
push
mov
pop
dec
xlat
fistps
pop
xchg
dec
mov
xor
rcrl
rcll
jae
je
repz
add
and
imul
nop
mov
lret
sbb
lahf
pop
mov
fisttps
es
dec
fwait
jp
adc
aam
add
and
or
mov
movsl
sbb
inc
add
xor
xor
insb
mov
pcmpeqw
sbb
dec
outsl
xor
call
lret
and
adc
test
jnp
das
gs
hlt
pop
xchg
test
mov
or
and
out
cmp
pushf
push
lock
jne
addr16
jns
mov
in
adcb
add
pop
mov
jmp
std
xor
mov
xor
int3
fwait
call
adc
add
xor
scas
or
fsubrl
orl
add
jge
outsb
in
mov
jae
jmp
pop
xor
jne
pop
popf
adc
push
out
std
cld
sbb
sub
push
es
jbe
or
or
jb
hlt
fwait
xchg
shlb
jns
sub
inc
push
lea
mov
repz
daa
imul
loopne,pt
mov
jmp
stos
in
sti
cmp
cmp
pop
adc
jmp
fs
sbb
add
inc
das
xor
or
mov
lcall
sub
xor
jo
rcrl
lahf
mov
arpl
jno
in
xchg
or
jb
rcll
add
rclb
or
add
add
push
mov
dec
in
popa
mov
push
rcr
pop
cmpsb
adc
mov
adc
in
fnstcw
ret
test
jmp
cld
ss
mov
mov
dec
fs
sub
jmp
and
ret
adc
in
enter
sti
cmp
mov
scas
data16
push
pop
enter
sarl
sub
inc
xchg
and
std
clc
leave
std
ror
scas
cmp
or
test
jge
ja
pop
mov
push
daa
jecxz
mov
xchg
jno
loope
sbb
cmpsb
xchg
enter
push
sbb
dec
xchg
cld
push
nop
xor
mov
sahf
addb
ret
and
jnp
mov
repnz
push
xchg
iret
int
pop
or
repz
orb
inc
mov
test
mov
aam
add
cmp
mov
jb
jnp
pop
jnp
xlat
and
cmp
sbb
xchg
dec
shlb
cmc
push
out
dec
lret
sub
sahf
outsl
jae
cwtl
mov
xchg
sbb
inc
dec
int
cmp
cli
pop
and
and
push
add
movsl
icebp
xor
or
mov
push
push
xchg
mov
cld
mov
outsl
shl
jmp
and
jo
std
jo
xchg
mov
jmp
daa
inc
clc
or
fimuls
sub
sbb
sbb
and
xlat
pop
or
add
je
jnp
ds
adc
and
jnp
ds
nop
sub
ror
pop
sbb
or
call
hlt
ja
icebp
dec
adc
push
inc
arpl
jl
mov
fbld
xor
jne
cmp
dec
icebp
pop
repz
in
fistl
pop
mov
inc
loopne
inc
cmp
cltd
insb
in
test
pop
and
or
test
fmul
shr
push
mov
mov
subb
mov
pusha
std
ljmp
mulb
leave
mov
in
les
pop
lock
jmp
mov
hlt
inc
rcl
ror
out
rcrb
push
mov
xchg
insl
mov
outsl
andb
xchg
test
fstpl
or
inc
sbb
add
lcall
dec
addb
mov
xchg
adc
sbb
enter
mov
rol
xchg
lds
or
pop
iret
rcrb
lahf
cmp
cmpsb
push
out
xlat
jle
mov
sbb
mov
mov
comiss
jle
pop
add
fistl
adc
arpl
mov
fdivl
rcrl
sarb
jmp
lea
movsl
test
mov
cwtl
xchg
or
or
cmpsb
and
les
arpl
outsb
popf
pop
aas
ljmp
mov
test
inc
insl
cmp
cmp
ss
imul
fdivrl
dec
loopne
hlt
mov
xor
test
sahf
test
lock
dec
outsl
and
sahf
xchg
orb
mov
incl
xchg
xchg
jmp
leave
mov
mov
cli
mov
repz
dec
push
inc
sbb
sbb
pop
mov
dec
dec
mov
out
insl
lret
sub
shl
divb
mov
jae
or
xchg
mov
push
mov
lcall
sbb
add
xchg
fistpll
jno
imul
cmc
jmp
in
shrl
mov
add
push
dec
pop
loope
mov
insl
into
jmp
pop
icebp
bound
dec
pop
out
iret
sbb
sahf
mov
adc
mov
jmp
add
jle
and
addr16
xor
push
xchg
inc
cli
icebp
outsb
or
repz
jp
dec
ds
dec
xor
dec
or
leave
outsl
scas
pop
lret
orb
popa
popa
icebp
sar
repz
push
fisubl
rorl
push
jne
jmp
and
test
call
cltd
shl
jns
shll
popa
fwait
daa
mov
push
aaa
std
scas
cltd
lret
mov
rorb
incl
mov
insl
sbb
or
sub
mov
xchg
cmp
sub
fidivl
popf
jb
sub
ds
xchg
mov
dec
addr16
ljmp
sub
jecxz
push
add
cmp
lods
hlt
sahf
out
std
testb
mov
mov
sarl
mov
cmp
and
sbb
punpcklwd
mov
add
aaa
adc
es
leave
push
sti
mov
jae
ror
dec
sti
pop
add
addr16
iret
sub
sub
cmp
pop
test
push
push
mov
mov
insl
or
mov
push
jecxz
cltd
mov
sub
inc
jge
test
jecxz
loopne
mov
test
push
lods
fwait
push
mov
push
cmp
je
mov
fadds
cmp
stc
push
cltd
pop
mov
aad
aad
dec
sbb
jo
push
add
mov
iret
push
jno
imul
mov
ljmp
adc
xchg
ret
loop
xor
stos
aaa
inc
mov
lea
mov
ljmp
loopne
or
dec
out
aad
pop
jae
aam
cmp
leave
cmp
pusha
enter
add
lret
in
xchg
ljmp
and
cmp
lret
xorb
sub
in
inc
loope
loope
or
dec
test
into
mov
out
cmc
inc
or
jbe
pop
stos
lret
js
jo
dec
mov
add
xchg
scas
and
dec
std
popf
jg
push
jmp
sub
ss
cmp
adc
mov
push
xchg
stos
jge
pusha
add
stos
jg
mov
or
test
loope
jmp
pop
inc
loope
repz
push
mov
or
pop
and
mov
lea
negb
aaa
test
fs
scas
mov
bound
push
sbb
push
jo
fadd
je
xchg
cmp
pusha
arpl
and
test
or
jae
cmpsb
dec
loope
push
sbbl
sbb
lea
jge
mov
or
xchg
mov
movb
mov
subl
orl
mov
jne
sbb
sub
lock
push
xor
orb
xor
pop
mov
lods
and
xchg
pop
dec
ret
lret
insl
cld
aam
xor
data16
inc
and
cwtl
in
out
fistpll
cmp
sbb
imul
int
or
in
jp
out
jp
cmp
inc
test
pop
mov
fistpl
push
and
les
mov
jne
dec
sub
cmpsb
xor
push
in
add
in
shll
sahf
testl
xlat
dec
push
sahf
pop
cmp
int3
outsl
in
iret
rcrl
movsl
lret
xchg
test
popf
shr
cmp
or
mov
and
xor
movsb
lea
mov
ljmp
pop
orb
xor
and
lret
push
sub
cwtl
cmpsl
outsb
insb
negw
push
test
icebp
pop
jge
mov
jns
dec
shll
jmp
hlt
cmp
pop
or
cmp
hlt
jmp
dec
popa
out
loop
es
jge
xchg
out
add
inc
push
sbb
bts
flds
jp
mov
jne
sub
push
inc
add
stos
enter
xor
js
jne
sub
test
aam
gs
cld
mov
lret
xchg
mov
out
std
xchg
inc
adc
loope
movsb
jg
js
popa
fldt
mov
int
xor
sub
das
ret
inc
leave
add
dec
mov
dec
sbb
xchg
aas
aas
cmp
sbb
xchg
push
and
sub
xchg
and
addr16
pushf
out
lret
mov
mov
jb
mov
xchg
es
movsb
movsl
jbe
add
ja
in
lea
cltd
mov
mov
popf
fs
fldl
lds
popa
shr
push
out
jbe
and
xsha1
cmpsb
cpuid
gs
add
mov
push
or
outsb
xor
push
in
imul
xchg
pusha
mov
xchg
aaa
popf
insl
add
mov
decl
sbb
sbb
rorl
repnz
rcrl
daa
lods
sub
push
and
jnp
rol
ljmp
jae
xchg
pop
xchg
mov
xchg
bound
fs
test
jmp
mov
cmp
mov
nop
cmp
sbb
ljmp
ss
loope
ja
adc
inc
mov
adc
sub
shrl
gs
popa
in
fnsave
jge
sahf
xor
mov
xchg
insb
dec
adc
insb
jge
jmp
clc
sti
push
inc
inc
jp
xchg
data16
hlt
push
sbb
in
jmp
lret
je
cld
pop
shlb
or
inc
test
sub
mov
sahf
mov
sbb
cmpsb
mov
mov
call
rol
fidivrs
dec
pop
jmp
movsl
arpl
pop
mov
xchg
adc
jg
mov
aad
push
je
cld
cmp
pop
fdivs
add
mov
jmp
pop
mov
in
data16
pusha
xor
test
lret
pop
cltd
mov
dec
cmpsb
icebp
out
addr16
xchg
push
insl
lds
pop
push
andps
add
or
and
mov
ret
sub
or
cmc
stc
lea
cli
repz
cmp
int3
cwtl
jb
ficompl
adc
insb
imul
and
push
mov
jns
call
jo
dec
fimull
arpl
sub
scas
sub
cmp
dec
imul
in
cli
arpl
pop
stc
dec
movsb
pop
mov
cmpl
push
std
xchg
pop
cmp
jno
ja
outsl
sub
repz
push
ficomps
mov
cmp
iret
lret
sbb
call
imul
jno
dec
dec
fildll
add
aas
clc
fstpt
push
add
nop/reserved
and
enter
and
loop
push
enter
popf
or
mov
jne
pop
jns
ljmp
add
dec
mov
fsubs
and
out
mov
std
mov
pushf
cmp
push
push
fwait
xor
cmp
nop
mov
and
jo
std
in
in
cltd
inc
imul
xchg
inc
push
jno
fildl
mov
mov
std
xor
testl
xchg
out
xchg
cmp
sub
push
push
sub
cwtl
fisttpl
push
or
or
cmpsb
scas
xchg
xor
ret
push
jmp
mov
call
cwtl
sahf
mov
mov
pop
mov
cmpsl
movsl
mov
cwtl
xchg
mov
ret
mov
sub
jl
cmpsl
adc
int
push
cs
ret
cmp
xlat
ret
std
push
push
bound
inc
loop
fwait
dec
dec
fimull
loope
call
pop
iret
inc
jno
xchg
or
sarb
into
mov
lds
mov
test
jnp
mov
iret
mov
push
xchg
mov
loop
inc
xchg
jbe
xor
insl
inc
push
pop
push
sbb
add
sbb
xor
jle
mov
add
std
inc
add
test
fwait
aas
ret
ja
jnp
xor
outsb
lret
xchg
outsl
in
ljmp
sub
xchg
and
test
pop
pop
sbb
dec
scas
fisubl
cmpsb
xchg
les
push
jbe
and
es
xorb
and
cmpsl
ds
in
mov
dec
cltd
popw
add
test
sbbb
dec
insb
scas
out
fstpt
xor
jge
push
shll
mov
sub
ds
sbb
adc
pop
sarl
fs
or
sti
cmpsb
or
cmp
jg
adc
mov
std
imul
fistps
cld
cmp
push
jge
cmpb
in
mov
dec
mov
fistl
cmp
add
inc
cmp
inc
add
pop
xor
jmp
aas
inc
cmp
xchg
sbb
xor
ja
cmp
insb
inc
xorl
and
jbe
ljmp
cld
sahf
push
push
mov
in
adc
lds
rcrb
inc
loope
xor
pop
mov
sbb
push
gs
arpl
imul
xchg
repz
addr16
mov
loope
jl
in
adc
test
rorb
xchg
sub
sub
ret
scas
jbe
fldenv
jb
iret
fstpt
out
out
xchg
jle
dec
cltd
les
sbb
stc
xor
divl
add
sbb
cmp
push
add
iret
and
mov
pop
gs
ret
lods
loop
and
and
int3
xchg
clc
mov
movsl
lahf
insb
dec
jbe
adc
inc
scas
pop
ss
aaa
mov
ret
arpl
sub
cmp
sahf
mov
lods
repnz
test
adc
mov
inc
sub
mov
mov
sub
sahf
mov
adc
jge
test
mov
popa
fisttpll
jp
jl
mov
enter
inc
inc
cwtl
push
pop
gs
xchg
aam
jl
stos
es
mov
gs
mov
sub
add
mov
mov
pop
mov
jno
or
aam
mov
mov
adc
hlt
mov
pop
pusha
and
sbb
test
into
sub
or
lock
mov
cmp
sar
push
adc
xor
sti
daa
jbe
int3
jae
sub
add
mov
decl
cwtl
push
jae
jne
mov
aad
pushf
repnz
push
xchg
dec
mov
mov
mov
adcb
and
out
in
int
mov
call
test
sbb
inc
xor
lret
lret
ret
jmp
popa
mov
xchg
dec
addr16
mov
mov
dec
cli
mov
cmp
jae
jbe
and
out
mov
imul
dec
jnp
insl
dec
mov
mov
or
loop
imul
push
pop
adc
in
lret
punpckhdq
lock
pop
mov
mov
push
xchg
lea
stc
in
mov
imul
inc
gs
cld
mov
sub
push
cmpl
adc
in
or
and
shl
dec
push
rcl
test
outsb
call
push
adc
out
clc
icebp
stos
in
pop
inc
push
iret
or
cmp
sub
xor
cmc
rcrl
mov
add
pop
pop
int
push
adc
xor
cmp
jb
or
push
imull
filds
jo
mov
push
sub
stos
mov
decl
push
adc
or
mov
xchg
push
fmuls
in
aas
repnz
sub
cmp
adc
imul
pop
ss
daa
loopne
and
ja
inc
add
and
sub
popf
mov
inc
outsl
xor
outsl
lea
xor
imul
out
lret
sub
decb
pop
aam
rol
mov
mov
popa
jo
idiv
dec
mov
mov
andl
jmp
ja
int
jp
push
sub
orb
aad
cmp
cmp
inc
mov
adc
xlat
mov
clc
fimull
repnz
adc
push
jbe
sbb
mov
push
lea
je
sub
push
icebp
cmpsl
in
xchg
mov
jnp,pt
cs
jns
and
test
pop
push
loop
gs
adc
add
cmp
pusha
loope
push
into
or
xchg
push
dec
repz
pop
iret
iret
fs
dec
jns
addr16
scas
xor
aas
sbb
fistps
adc
sub
sbb
stos
imul
jecxz
and
xchg
outsb
cli
cld
mov
jo
imul
push
xorb
xchg
push
and
xor
xor
ffreep
xchg
jecxz
es
rcl
mov
icebp
ss
mov
clc
mov
movsb
loope
std
xchg
cmp
dec
cmpl
and
pop
pop
dec
stc
jno
mov
pop
sbbl
and
mov
sub
je
xlat
dec
hlt
out
inc
shrb
leave
iret
xor
inc
xor
cmp
adc
icebp
imul
xchg
lcall
mov
cmpl
push
cs
dec
mov
popf
lcall
call
and
jnp
mov
mov
scas
or
push
leave
pop
push
fidivs
sub
hlt
shrl
out
daa
mov
movsl
push
mov
pushf
fwait
dec
in
ret
enter
pusha
cld
outsl
mov
fildll
stos
xchg
sub
leave
adc
pop
and
add
mov
call
sti
dec
in
inc
stos
jp
into
xor
inc
ljmp
fimuls
iret
repz
xlat
out
cmp
arpl
sub
dec
pop
inc
lock
push
addr16
aaa
repz
lds
xor
cmp
je
push
fmuls
bound
stos
sub
popf
sbb
pop
adc
xor
and
stos
nop
cmp
into
and
into
xlat
xor
in
loopne
pop
xor
mov
iret
mov
loop
xor
inc
test
jle
in
sub
jle
imul
xchg
inc
or
cmpsl
insl
push
insb
pop
mov
pop
fwait
and
lods
xor
fcmovnu
push
cmc
daa
leave
rorb
adc
add
jmp
jmp
test
or
les
adc
stos
mov
jne
and
mov
sahf
lret
add
xchg
jne
and
mov
in
arpl
pop
mov
jle
push
fdivrl
fwait
xchg
or
cmpsb
int
xor
pop
cs
cmc
push
stos
sub
dec
pop
out
aad
cmp
mov
jecxz
push
out
orb
add
insl
pop
cwtl
jae
ret
out
add
das
std
push
or
outsl
sbb
lods
stc
mov
outsb
adc
adc
stc
or
push
sbb
xchg
lret
repnz
loope
push
cmp
pop
cmp
test
inc
mov
aas
mov
dec
shl
xlat
jg
pop
insb
lods
test
dec
pop
test
xchg
mov
mov
adc
stos
and
cmp
addr16
jg
xor
pop
sahf
add
xchg
add
mulb
ret
scas
roll
mov
les
mov
mov
jl
jae
cmp
out
fstl
ficomps
clc
xor
mov
dec
sahf
push
inc
jne
or
or
ja
sbb
mov
dec
or
in
fcmovu
icebp
pop
inc
test
test
addr16
adc
sti
lods
sbb
in
sub
adc
jg
sbb
nop
pop
mov
mov
mov
pop
inc
add
cmp
dec
add
jns
pop
repz
in
imul
idivb
jnp
cmpsl
sti
mov
js
imul
sub
add
dec
push
jecxz
mov
jo
adcl
sbb
adc
test
cmp
xor
lret
jge
mov
enter
mov
lcall
stos
pusha
cmp
pop
jmp
and
xchg
inc
xchg
dec
or
loopne
xchg
stos
or
xor
in
mov
rcrb
mov
pop
imul
pop
aam
fwait
icebp
insl
cmpb
mov
mov
mov
adc
and
lods
adc
xor
xor
xor
hlt
stos
xchg
xchg
mov
xchg
rcrb
fadd
sub
xlat
ds
mov
cmp
outsl
push
rorb
mov
jecxz
cli
test
iret
pushf
lahf
adc
xchg
loopne
push
outsl
test
mov
dec
cli
and
enter
adc
shrb
sbb
scas
nop
imul
xor
bound
call
xchg
sbb
hlt
ret
dec
sti
push
jge
inc
or
mov
in
xchg
inc
cli
add
add
push
lret
mov
test
lahf
xchg
push
mov
mov
test
xchg
cld
mov
push
push
imul
mov
inc
xor
mov
and
mov
sbb
jecxz
int
sarb
xor
cs
dec
int
nop
fdivp
pop
cmp
icebp
add
fisttps
icebp
pop
mov
or
imul
push
enter
ljmp
jmp
aas
icebp
mov
add
push
scas
xlat
cmpsl
je
stc
mov
aad
adc
jecxz,pt
rorb
icebp
mov
in
adc
mov
icebp
pop
xor
cwtl
test
inc
ljmp
dec
and
mov
sarl
into
jb
jne
pop
stos
sbbb
and
push
sbb
xchg
or
mov
xor
shrl
bound
mov
cld
pop
mov
push
jecxz
mov
dec
iret
je
fisubrs
outsb
xorb
test
pusha
aam
nop
roll
in
jp
inc
mov
rcrl
fcom
pop
pop
jle
jl
jnp
out
shrl
mov
inc
pushf
mov
stos
leave
mov
les
icebp
js
movzbl
aaa
add
xchg
mov
xor
xor
inc
cmp
pop
repnz
cwtl
ficompl
mov
cwtl
into
cmp
push
std
push
ret
enter
xor
push
and
jne
pop
push
shrb
in
add
rcrb
push
lret
es
dec
fdivrs
test
dec
das
pushl
xor
push
and
pop
mov
and
iretw
push
mov
leave
xchg
test
cmp
mov
stos
jge
jae
loopne
inc
ja
insl
fisttpll
test
aam
iret
inc
arpl
push
mov
lock
cmp
add
push
jl
nop
loop
push
jae
nop
inc
xchg
xor
pusha
out
mov
and
xchg
shrl
mov
loope
mov
loop
jl
shlb
push
insb
push
lea
or
push
repz
push
or
mov
add
in
adcl
bound
mov
test
add
neg
rcrl
jno
dec
lret
sub
aaa
rorl
cmpl
leave
mov
mov
incb
lock
xchg
push
mov
add
dec
jnp
jle
test
js
aas
roll
aam
sub
test
das
sbb
push
lret
sbb
mov
enter
xchg
xor
repz
mov
xchg
jns
je
outsl
dec
jge
jmp
cmp
popa
leave
xchg
sahf
push
mov
adc
push
pop
xor
xchg
sbb
mov
pop
lcall
or
out
outsb
jbe
push
fisttps
rcl
pop
mov
pop
cmp
lcall
mov
sbb
sub
lret
and
dec
mov
outsl
mov
dec
fcoms
inc
aad
lods
jne
pusha
mov
cmp
mov
mov
outsl
sub
out
sbb
outsb
dec
punpcklwd
pop
sahf
std
and
stc
jl
pop
xor
in
add
repnz
cltd
xchg
popf
sub
adc
out
cs
and
lret
and
or
lahf
sub
out
js
shlb
dec
out
sbb
jno
ljmp
scas
in
fiaddl
repnz
out
cmp
lcall
jge
arpl
lods
fldenv
into
or
pop
cmp
xor
dec
adc
jmp
in
loopne
jmp
lea
fidivrl
cmp
xor
sahf
sub
bnd
std
mov
push
lods
jl
or
fistpll
sarb
adc
test
inc
aam
or
int
roll
imul
test
pusha
jnp
test
cmp
pop
ret
sub
push
mov
xchg
add
dec
out
xor
cmc
mov
push
cs
aaa
jmp
das
and
int3
inc
pop
mov
aad
cmp
xor
out
cwtl
sub
cmp
sahf
ss
cmp
dec
xor
insb
int3
sub
push
in
sbb
insl
inc
push
mov
dec
roll
nop
cmp
inc
movsb
cmp
xchg
adcl
daa
and
cmp
cmp
and
fadds
notl
call
mov
repz
out
dec
push
cmp
insb
jae
inc
ss
add
jnp
pop
xor
imull
jo
cs
fstps
mov
push
jge
push
fnstenv
push
popaw
and
push
enter
jno
cs
jg
or
and
sbb
xchg
gs
fiadds
popa
pop
dec
nop
call
xor
sbb
ljmp
int3
outsl
and
arpl
shll
dec
sbb
cmp
and
pop
popf
pop
mov
pop
testb
dec
push
xlat
mov
aam
lock
pop
setle
push
aas
mov
movsl
xchg
xor
fs
data16
pusha
insl
adc
enter
pop
aam
mov
sbb
sub
xchg
or
adc
inc
ljmp
and
fidivrl
ss
inc
dec
mov
mov
push
dec
sbb
shufps
pop
nop
jno
arpl
mov
iret
outsb
sbb
mov
push
fstpl
sarl
jno
mov
movsb
mov
xor
or
test
xor
jbe
mov
add
mov
outsb
mov
push
mov
and
pop
lahf
dec
xchg
dec
push
dec
imul
mov
sti
mov
mov
les
fwait
test
mov
inc
repz
outsb
movsl
sbb
out
and
je
jne
pushf
xor
cltd
scas
imul
int3
xchg
fidivrl
outsb
jo
mov
xchg
pop
mov
orb
jmp
nop
push
outsl
js
call
mov
push
hlt
jg
cmp
repnz
in
nop
aad
inc
dec
pop
or
rorb
sub
xchg
push
cmpsl
test
je
scas
pop
cmpsl
or
aaa
mov
dec
sbb
mov
dec
stos
inc
loop
dec
adc
and
mov
xchg
mov
push
stos
or
xorl
lahf
inc
adc
sar
push
and
jno
xchg
es
fistpl
push
jmp
mov
pop
cmp
sbb
push
popa
icebp
fcoml
lods
xor
bound
cmpb
lds
and
mov
lret
lea
push
addl
pushl
push
cmp
cmc
pop
fbstp
test
enter
test
jle
shrb
mov
in
in
jbe
movsl
pop
lret
sbb
cmp
pop
add
lods
call
jbe
mov
lcall
loopne
and
cltd
lock
cmp
int3
cmpsl
pop
loop
pop
outsb
jns
rolb
clc
sahf
repnz
mov
pop
sbb
push
lock
ds
fldl
shlb
dec
or
ja
cmpsl
sub
jge
mov
add
sub
div
test
pushl
fdiv
mov
divl
stc
stc
mov
flds
lret
loop
fdivs
shll
or
mov
stos
nop
and
lret
inc
inc
pusha
and
add
or
pop
lea
xchg
jno
dec
inc
aaa
out
int
jnp
cmpsb
fbld
pushl
lds
mov
xor
stos
ds
mov
inc
shrb
xchg
jg
sub
cld
repz
dec
pop
mov
and
rcl
and
jg
jnp
daa
cmp
adc
cs
lds
xchg
pop
shll
pop
mov
cltd
push
cwtl
mov
mov
xchg
lret
ret
sub
lahf
addr16
or
jp
inc
jecxz
dec
pushf
xchg
adc
dec
and
or
pop
jmp
popa
out
test
or
scas
lds
inc
dec
ljmp
out
shlb
push
pop
icebp
fsts
sbb
and
movsl
rolb
sbb
cmp
je
jne
daa
ds
pop
cmp
icebp
pop
imul
jl
shrb
pop
sub
mov
ss
imul
mov
mov
stos
push
loop
call
pop
loope
or
push
addb
cmp
jl
rcrb
xor
neg
lods
push
mov
push
xor
mull
test
aad
test
dec
out
pop
push
clc
mov
jp
bound
add
cmp
add
jmp
mov
leave
rcrb
pop
bound
pop
ficoml
inc
mov
scas
pusha
pusha
jae
add
xor
outsb
icebp
mov
jno
sub
shll
jb
cmc
pop
pop
out
push
add
lds
lret
fisttpl
lahf
dec
loopne
sbb
add
orl
xor
imul
add
mov
push
stos
les
sub
mov
out
mov
sbb
mov
daa
jnp
cli
es
dec
inc
adc
xchg
popf
cmp
lea
sbb
ljmp
lret
inc
jnp
jae
lret
cmp
pop
lds
xchg
xchg
jl
shrb
in
push
test
movsl
cli
pop
inc
ljmp
jg
enter
jecxz
push
lock
call
sbb
jb,pt
and
shll
js
sbb
mov
inc
nop
mov
cmp
jmp
dec
mov
imulb
mov
in
int
mov
jmp
sbb
lods
out
mov
push
sub
mov
xchg
sbb
cmp
push
andb
sub
add
out
out
scas
and
ret
mov
push
add
hlt
dec
push
mov
stos
ret
fsts
mov
lds
mov
xchg
inc
inc
pusha
xor
sarl
dec
mov
xchg
lret
subb
cmp
int
mov
mov
cmp
enter
and
mov
lods
dec
cmp
ret
mov
pop
ret
xchg
pop
mov
out
lret
mov
sti
popa
xchg
movsl
data16
add
inc
inc
sub
outsl
cmc
ss
addr16
das
out
xor
in
fidivrl
mov
rcll
js
in
in
mov
xlat
outsl
in
outsl
rcrl
subl
mov
sub
cltd
iret
jne
sbb
mov
jp
inc
mov
cwtl
out
iret
jmp
jl
cmc
mov
mov
int
cwtl
inc
mov
jmp
loopne
cli
jo
shll
or
fildll
xor
icebp
dec
fists
repnz
mov
je
sub
fcmovnu
xchg
aam
cmpsb
insl
mov
insl
push
lods
or
pop
dec
je
sbb
mov
fldcw
loop
out
mov
je
pop
call
mov
mov
cld
movsl
add
sbb
in
dec
out
dec
loop
pop
lock
shlb
pop
neg
add
inc
sub
scas
incl
dec
sbb
mov
push
xchg
sub
push
pop
inc
mov
daa
and
jle
daa
lret
rcrl
cmp
cmp
cmp
and
orl
sbbl
cmp
xor
dec
addr16
mov
ss
lcall
rclb
loope
call
scas
out
pusha
xor
cmc
ja
test
dec
or
sub
outsb
sub
test
out
pop
inc
popa
lds
lds
xor
lret
pop
daa
cmp
std
ss
arpl
mov
sti
addb
cwtl
rcll
sti
cli
xchg
inc
sahf
dec
or
mov
leave
out
jge,pt
xor
xchg
fdivs
xor
mov
adc
push
insl
sub
cmp
push
push
push
enter
xchg
sub
add
xchg
out
mov
cmp
and
pop
in
rcr
add
in
xlat
movsl
jo
std
fldt
shrb
scas
push
call
movsl
imul
jne
loopne
mov
xchg
mov
dec
pop
jg
xor
test
imul
push
cld
adc
pop
nop
xor
icebp
dec
inc
inc
out
jge
aas
and
lret
call
repnz
and
push
cs
into
fcompl
mov
pop
and
mov
jno
out
gs
mov
outsb
push
rdmsr
push
jmp
inc
jl
aad
xchg
test
adc
and
xchg
push
frstor
ljmp
add
mov
in
xchg
dec
lods
mov
and
dec
out
sbb
or
push
incl
arpl
adc
popa
imul
pop
pusha
jg
mov
outsl
sti
out
add
add
adc
cwtl
xchg
test
pop
je
data16
aad
sbb
push
jg
imul
adc
mov
cmp
push
fstpl
pop
jecxz
cmp
mov
rcl
xor
loopne
mov
pop
jb
cs
and
add
das
adc
hlt
and
cmpb
shlb
and
mov
push
jns
int3
mov
pop
pop
add
add
ja
dec
fidivs
push
xchg
push
mov
stc
idivl
inc
jl
mov
fwait
bound
cmp
js
and
outsl
stos
or
lahf
jg
cmp
testl
xor
outsl
pushf
and
sub
inc
inc
pop
rcl
xor
inc
mov
dec
aam
mov
orps
cmp
cmpb
pusha
cmc
inc
div
or
pusha
sahf
enter
or
movsl
and
pop
sbb
arpl
push
ret
divb
and
mov
sub
jmp
dec
push
xorb
lahf
add
test
aam
vpcmpgtw
scas
jo
xchg
mov
mov
cmp
or
sahf
lods
lds
mov
jg
or
add
sbb
fistpl
rol
mov
lods
scas
mov
fwait
adcl
dec
xchg
xchg
loope
je
je
mov
movsb
xor
xchg
repnz
adc
push
lcall
imul
iret
adc
jecxz
mov
out
mov
rorb
add
pop
xchg
insl
and
push
push
cmp
xchg
int
ret
or
es
movsl
and
pop
jb
jge
into
pop
jo
ret
pop
dec
mov
sahf
mov
pop
cmp
jle
mov
loop
pop
adc
mov
lds
pop
fxch
push
xor
pushf
in
cmp
mov
add
test
and
mov
add
pusha
cli
fnstsw
test
and
scas
out
movsb
ret
cmc
adc
into
nop
ljmp
jg
fsubrs
xchg
inc
popa
or
mov
push
movsl
xchg
pop
ljmp
notb
pop
inc
dec
enter
push
xchg
sbbb
dec
mov
fwait
fwait
mov
sub
inc
in
cmp
lods
pop
icebp
xor
fcom
dec
sub
movsb
jge
icebp
push
lds
jl
fisubrs
aas
aad
sbbl
jae
ret
mov
cld
ficoml
stos
bound
loope
lds
and
aaa
inc
ret
and
test
jb
mov
or
pop
insb
gs
push
xchg
xchg
dec
dec
int3
mov
lahf
jmp
or
push
ret
std
ds
adc
stc
push
lret
add
in
and
outsl
cld
arpl
aaa
jge
fistpll
jp
movsb
dec
xchg
lock
aam
orb
fidivrs
sbb
mov
xor
jmp
sbb
mov
and
pop
sti
les
sarl
mov
dec
cld
stos
pop
xor
or
outsb
xchg
cmp
xchg
jmp
cmpsb
ljmp
inc
xchg
or
push
mov
add
add
mov
push
clc
pop
repnz
inc
pop
and
add
pop
test
js
and
xchg
xchg
jge
xchg
sbb
js
jne
insb
push
imul
xchg
jnp
mov
inc
jp
leave
or
dec
mov
add
push
xchg
or
inc
push
mov
out
sub
aas
mov
sbb
repz
fmuls
imul
lock
loop
out
sahf
pop
mov
pop
adc
cmp
ja
scas
inc
movsb
dec
push
ja
push
lea
mov
lods
andl
cvttps2pi
icebp
in
jnp
sub
jmp
xor
es
xor
pop
stos
xor
mov
xchg
cmp
inc
dec
jl
ds
stos
popf
call
call
scas
push
pop
lds
mov
xchg
addr16
fimull
cltd
sub
out
pop
jecxz
mov
pusha
xor
mov
push
mov
outsb
ret
mov
mov
pushf
pop
sbb
outsl
dec
sbb
test
or
imul
mov
in
sbb
roll
dec
fwait
pop
int3
push
push
ss
fnstenv
mov
lods
sbb
push
int
sub
sbb
push
fwait
out
pop
mov
push
xchg
shll
mov
mov
lretw
jmp
sbb
xor
fcmovbe
int3
push
inc
call
outsb
insl
lea
cmp
dec
pop
add
or
xchg
loop
jle
xlat
jp
add
jne
in
ljmp
and
mov
mov
repnz
outsb
les
sbb
mov
lcall
mov
rclb
fwait
into
or
int3
add
movsl
push
mov
mov
dec
gs
loop
fldenv
mov
test
add
sub
int
mov
mov
jae
sbb
pop
jl
jns
xor
loope
sub
pop
adc
pop
xor
jp
andb
clc
lret
pop
push
dec
mov
add
jl
cwtl
in
dec
lahf
shlb
mov
and
fiaddl
dec
mov
mov
mov
push
movsb
sub
int3
xlat
jp
xchg
scas
xchg
jmp
les
xchg
int
inc
sbb
roll
cmpsl
jmp
int3
pop
insb
adc
aam
or
mov
mov
es
xchg
repz
outsl
or
or
and
adc
sbb
jl
mov
push
jb
push
lret
xor
add
arpl
ds
jmp
xchg
scas
ret
or
frstor
loop
out
mov
inc
mov
fcmovu
and
mull
test
jle
mov
cld
inc
inc
mov
sbb
lea
mov
ds
mov
push
or
mov
mov
test
cmp
cmp
mov
and
enter
jmp
stos
dec
scas
mov
sub
arpl
repnz
sarl
mov
aaa
sub
pop
in
cmpsb
into
jne
in
dec
push
jge
or
stc
es
inc
outsl
and
xchg
mov
jnp
xor
sub
cld
xchg
jb
jg
xor
xor
jmp
push
repnz
aad
mov
dec
or
movsl
into
sub
xchg
cmc
repnz
arpl
add
adc
jge
cld
ret
sbb
popf
outsl
mov
repz
hlt
mov
dec
mov
stc
cmpsb
inc
jae
add
out
mov
xchg
or
fxch
cmp
pushf
and
xchg
test
and
das
cmp
pushf
dec
lret
inc
mov
mov
popf
mov
cli
es
mov
fmull
pushl
loope
dec
sbb
xchg
sub
xor
imul
cld
lahf
fadds
sti
mov
mov
imul
push
push
insl
xorb
daa
mov
jecxz
mov
fnstenv
lock
xor
push
mov
mov
nop
mov
push
gs
push
mov
sub
mov
rorl
out
lahf
mov
mov
push
mov
and
mov
cld
enter
jo
fxch
mov
mov
mov
fidivrs
cmc
xor
adc
cmp
fistpll
aas
push
adc
sti
outsb
insl
test
loop
pusha
inc
cld
popa
jecxz
jns
smsw
and
clc
mov
xchg
inc
ds
mov
pop
out
data16
jmp
out
popf
shll
enter
mov
nopl
dec
int
clc
jno
data16
adc
dec
jno
popa
sbb
pop
xchg
mov
std
dec
outsb
leave
movsl
and
and
or
stc
inc
outsb
pop
xchg
cmp
outsb
xor
enter
mov
ja
add
mov
push
shlb
dec
in
fcmovb
rol
aas
ret
dec
bound
or
rcrb
and
jns
loopne
inc
inc
fdivp
jle
push
cmpsb
xor
fcoml
mov
call
gs
fldl
imul
test
pop
sub
add
mov
jl
testb
in
cmp
pop
pop
lea
sub
incb
mov
test
mov
adc
inc
jnp
adc
xchg
ljmp
and
sahf
mov
cmp
fdivs
xchg
xor
pop
pop
xor
jmp
cwtl
mull
mov
xchg
cmpsl
in
scas
aas
adc
sbb
push
add
or
fisttps
xor
scas
ficoml
adc
or
loopne
adc
xor
or
and
push
lret
frstor
dec
rolb
enter
push
testl
in
cwtl
hlt
pop
inc
mov
inc
sub
mov
or
das
xor
xor
ljmp
dec
mov
inc
addl
test
xchg
inc
cs
sbb
stc
xor
xchg
sbb
je
ret
push
sbb
xor
jmp
jmp
repz
mov
roll
dec
mov
pop
je
mov
int3
andl
mov
inc
js
lods
jg
ss
adc
jnp
sub
cmp
bound
je
dec
movsl
out
insl
xchg
mov
fsqrt
xchg
outsb
dec
pop
or
xchg
popa
daa
pop
std
sub
push
mov
jns
xchg
loopne
dec
pop
dec
shll
pop
inc
cmc
or
push
ret
adc
xor
iret
xchg
cli
and
dec
into
inc
fadd
sub
out
loope
pop
add
inc
and
ficoms
xchg
pop
sbb
std
insl
inc
test
jl
cmpsl
sbb
or
adc
mov
sbbb
cltd
dec
xchg
mov
data16
adc
pop
sbb
ljmp
js
mov
sbb
xor
fldt
push
in
adc
pop
outsb
mov
cli
or
in
jge
cmp
pop
das
or
inc
pop
pusha
iret
push
xlat
mov
jecxz
and
fcoms
clc
in
add
xchg
add
inc
inc
sbb
test
xchg
jbe
xchg
test
incl
imul
cmpsl
xchg
or
push
adc
pop
push
xor
jl
dec
addr16
movsl
and
gs
fistpll
sbb
and
loopne
adc
fdivr
out
mov
cltd
into
adc
and
cmp
cmpsl
cmc
movsl
loop
and
push
shlb
fdivl
lahf
fadd
xor
fwait
in
or
inc
jp
xorl
xor
enter
and
mov
nop
dec
rcrb
loopne
sets
vxorps
in
stc
pusha
dec
add
mov
hlt
ss
fists
adc
adc
scas
out
loopne
mov
lcall
aas
outsb
adc
mov
pop
xorb
fsubrs
fwait
xlat
cmp
popa
adc
or
fs
fstpl
popf
rol
scas
xor
popf
jmp
sbb
decl
adc
push
pop
dec
adc
mov
jmp
loopne
shll
cmp
mov
sub
in
stc
aam
adc
ret
loopne
push
push
movsl
ss
xchg
iret
jp
push
xchg
jle
lea
sbb
sarb
fbld
test
inc
dec
inc
sub
mov
pop
fwait
data16
inc
sbb
cwtl
dec
pop
enter
or
lds
out
cltd
pushf
scas
pop
enter
movsb
je
sbb
dec
xor
in
lret
and
aad
add
or
cmpsb
or
sbb
sbb
inc
mov
jmp
adc
push
pop
cltd
std
xor
mov
iret
les
sbb
cmp
loopne
jle
mov
outsb
insl
repnz
sbbl
clc
repnz
inc
lods
pop
inc
in
mov
scas
inc
jmp
movsl
push
arpl
push
and
dec
mov
adcb
or
or
push
roll
sbb
add
or
mov
xchg
push
mov
or
out
push
sub
incb
mov
add
jmp
divl
stc
out
cmp
sub
sahf
mov
mov
je
ss
aaa
arpl
or
dec
sub
pop
stc
lds
dec
dec
dec
hlt
push
adc
cwtl
push
sbb
fptan
sub
push
pop
cs
mov
int3
stc
jl
nop
mov
cmpl
imul
mov
jae
cmp
push
pop
addr16
or
outsl
jmp
sub
mov
jb
mov
pop
fcoml
jecxz
or
jmp
in
mov
ffreep
dec
adc
dec
xchg
push
out
arpl
dec
ror
icebp
idivb
popf
inc
dec
int
jno
xor
test
inc
push
call
aad
in
in
or
and
scas
jecxz
mov
aas
out
int3
mov
cmc
or
pop
icebp
rol
xchg
mov
push
cmc
mov
mov
jo
push
cld
int3
aaa
mov
jge
lock
cmp
outsb
or
pop
inc
inc
dec
lock
pop
in
push
push
dec
xchg
int3
sbb
pop
xchg
cli
or
lock
int
test
mov
dec
jg
jns
xorb
xor
stos
cld
enter
jne
addb
inc
jno
sahf
mov
in
add
fisttpl
lds
inc
xchg
mov
mov
adc
scas
nopl
push
push
push
dec
xchg
sbb
popa
shl
negl
popf
imul
lods
inc
fidivrs
scas
mov
rclb
stc
xor
mov
cmp
mov
das
mov
repz
les
movsl
adc
inc
pop
and
sub
imull
adc
popa
pop
push
sub
sbb
idivb
and
insl
xchg
push
cmpsl
jg
loope
dec
mov
cli
lahf
insb
xchg
test
mov
js
cmp
push
mov
inc
sahf
push
mov
fidivs
decl
sti
adc
lcall
lret
and
lret
test
negl
adc
xchg
mov
sub
imul
mov
int
aam
mov
and
jno
sub
xor
jns
inc
jmp
int3
insl
push
inc
xor
push
fcoms
inc
subl
dec
jnp
push
test
add
nop
xor
sub
inc
push
not
lahf
fisttpl
sahf
repnz
pop
rcll
xor
arpl
push
xor
sub
jne
lahf
dec
aaa
stos
bound
and
add
jle
addr16
push
inc
pop
loope
jp
push
out
cmp
pop
pop
dec
in
add
jge
and
cmpsb
push
inc
pusha
mov
in
cmpsb
lock
mov
aas
rol
cmp
xor
dec
int3
loope
out
lahf
dec
fimull
in
pop
inc
adc
pop
pop
pop
jp
jns
adc
sti
xor
dec
lcall
mov
fistpl
add
enter
xchg
pop
pop
repz
in
aaa
fistpl
rcrb
xchg
into
cmp
mov
dec
lods
stos
into
rol
in
roll
lahf
into
jecxz
xor
xchg
test
xchg
push
ret
sbb
push
test
push
jmp
in
andb
push
cmpsb
call
mov
adc
in
daa
je
leave
mov
pop
xchg
mov
dec
adc
cmp
outsb
hlt
jecxz
dec
loope
sub
bound
imul
pop
mov
in
aas
cmp
sub
dec
or
sbb
pmovmskb
mov
loop
add
imul
jecxz
int3
mov
xor
push
cmpl
xchg
mov
mov
sub
or
mov
shlb
inc
pop
mov
pushf
mov
das
sbb
lds
dec
jb
pop
frstor
mov
mov
js
add
fcoml
xor
jge
je
mov
lds
ret
leave
lcall
test
ds
add
jns
movsl
cs
inc
cmp
push
or
sbb
sbb
imul
imul
lock
sub
xchg
inc
pop
jl
cmc
sahf
shr
xor
repz
lods
hlt
mov
cmp
mov
aas
shlb
dec
aam
dec
and
jecxz
fdivl
and
push
and
mov
cmpsl
cmc
xor
inc
mov
mov
or
push
stc
xchg
lret
and
pop
ror
and
das
out
or
or
and
or
jecxz
and
adc
xor
fidivrs
test
pop
and
pop
add
dec
mov
jae
lret
mov
call
push
call
ja
imul
popa
test
test
jge
inc
sub
ds
jb
adc
rcrb
and
adc
push
dec
dec
jns
sarb
int3
leave
jle
out
xlat
jno
bound
mov
xchg
add
sub
shll
scas
cli
fidivs
jns
test
enter
aam
add
push
add
test
imul
je
out
pop
xchg
dec
dec
pop
mov
mov
lea
cltd
imul
sar
enter
jnp
jbe
and
dec
jg
mov
xchg
bound
lret
je
sarb
sbb
add
push
push
ss
sbb
in
mov
xor
scas
xchg
divl
dec
test
pusha
outsl
mov
and
mov
mov
push
addr16
push
lods
add
dec
cmpsb
inc
insl
xchg
cld
dec
cmovns
test
popa
pop
mov
xor
loop
xor
xor
xorl
imulb
inc
push
sub
mov
test
push
cmp
sub
jo
mov
push
stc
fs
sbbl
lahf
jbe
dec
outsl
inc
out
outsb
xor
into
jecxz
xor
or
scas
pop
pop
dec
sbb
cmp
jg
jg
xchg
lcall
pop
xor
mov
add
cmpsl
and
testl
jo
mov
dec
dec
mov
lds
daa
and
das
mov
cmp
hlt
xor
or
xor
andb
adc
ret
cmpl
inc
cmp
dec
xchg
jg
cmp
push
adc
lock
jns
fldl
add
fadds
jbe
push
sbb
fisubs
mov
xor
arpl
lret
imul
push
cltd
mov
dec
push
stos
xor
push
jae
sarl
sub
mov
lea
shlb
test
xor
pop
pop
into
push
mov
xlat
jmp
rcrb
sti
ds
scas
xchg
and
ja
ret
push
out
test
push
loopne
jno
outsb
pop
adc
dec
adc
adc
cmpb
das
sbb
inc
mov
fdivrl
dec
add
push
ret
dec
les
hlt
movsl
ljmp
aaa
xor
shr
push
dec
test
jg,pt
dec
jmp
jge
jne
xchg
add
std
out
jl
xchg
movsb
or
movsb
mov
xchg
std
out
adc
sbb
gs
test
or
jecxz
dec
imul
cmp
inc
or
stos
dec
fldenv
mov
pop
jnp
cmc
mov
popf
mov
dec
sub
xor
cmpsl
inc
ss
add
sbb
outsl
or
int3
cmp
pop
add
pushf
jle
pop
out
ss
push
mov
xor
dec
adc
lods
and
dec
cs
cmc
jl
addr16
and
mov
xchg
nop
popf
xchg
bnd
iret
mov
sbb
popf
enter
mov
or
jg
fisubs
data16
mov
or
dec
mov
sbbb
cmp
lds
mov
jnp
sub
dec
sub
push
xor
pushl
cld
into
repnz
rcl
xchg
test
out
mov
pushaw
pop
mov
dec
add
xchg
inc
or
mov
nop
xor
stc
int
adc
sub
cmp
movsb
jl
mov
fs
xchg
pop
mov
push
stos
sub
jmp
out
cmp
fcoms
in
inc
sbb
in
push
shr
dec
and
jl
xor
push
xor
and
repnz
stos
jae
dec
adc
fisubrs
arpl
repnz
outsl
fidivrs
or
decl
loop
cmpb
dec
sar
psubusb
lds
mov
adc
pop
test
bnd
and
pop
mov
pushf
dec
mov
mov
jg
xor
dec
mov
pop
sbb
cmp
mov
cs
movl
adc
push
fiaddl
out
ret
in
ja
es
inc
push
or
movl
pop
in
push
dec
sbb
filds
aam
out
loope
or
into
fs
aad
sbb
insl
shl
cmp
xchg
lahf
sahf
xor
js
in
and
jecxz
xchg
add
adcl
adc
xchg
pop
in
test
dec
mov
adc
sub
mov
or
enter
rcrb
mov
push
cmc
push
mov
mov
push
push
fimuls
push
sbb
gs
xor
jle
ss
mov
into
enter
add
aas
xchg
sbb
xor
test
sbb
adc
shrl
les
outsl
je
pop
adc
arpl
hlt
mov
pusha
mov
shl
sti
sub
and
decb
mov
pop
pop
imul
adc
retw
fsub
les
cmp
lock
rolb
mov
fildl
dec
adc
nop
sub
push
or
and
fstpt
cs
cmp
sub
pop
mov
aaa
push
jo
mov
loope
rcr
mov
jecxz
pop
stos
mov
in
sub
xchg
jp
add
pop
insb
pop
andl
or
clc
pop
push
lret
sbb
fsubrs
inc
std
pop
xor
jg
inc
ret
inc
outsl
call
cmpsl
mov
push
in
cmc
aad
leave
pusha
sahf
popa
mov
dec
inc
notb
cmp
popf
xchg
xchg
mov
cmp
ss
mov
jne
scas
out
or
and
scas
pop
into
xchg
inc
repz
mov
push
cmp
add
les
pusha
xchg
push
pop
dec
out
lds
xor
cltd
sub
and
dec
daa
mov
je
jmp
xchg
mov
fisttpl
mov
xchg
jb
push
dec
xor
sub
mov
addr16
pop
mov
jne
dec
hlt
sbb
data16
cltd
jae
mov
and
dec
xchg
inc
in
mov
push
adc
stc
movsl
and
cmp
lret
lahf
xor
icebp
pop
dec
sbb
pop
mov
enter
frstor
sbb
neg
divb
adc
sbb
xchg
lock
pop
pop
bound
pop
sahf
fmuls
sbb
jmp
inc
mov
mov
sahf
cltd
sbb
inc
sti
popf
push
in
nop
pop
xchg
lods
jnp
pop
ret
cmpsb
hlt
or
idivb
push
aaa
jl
pop
xor
dec
push
cmp
in
mov
in
pop
xchg
dec
dec
out
lcall
push
inc
call
jecxz
inc
mov
mov
or
push
les
repnz
cmc
cld
je
inc
sub
arpl
and
dec
mov
hlt
scas
mov
jecxz
push
lcall
or
add
aad
push
movsl
cmc
pop
dec
mov
push
cltd
xor
test
sahf
aam
cmc
mov
push
aas
dec
in
add
inc
sub
mov
dec
add
adc
lds
repnz
rol
cltd
fimull
scas
dec
xor
pop
inc
insl
sub
sti
call
imul
xor
dec
cmp
stos
push
xor
jl
loopne
add
lret
push
int
jmp
cmp
aas
mov
push
ret
in
fsubrp
push
cltd
jno
push
or
faddl
push
dec
es
adc
push
push
gs
mov
stos
inc
lds
movl
jle
jmp
push
shll
adc
pop
pop
cld
js
lods
xlat
or
xchg
xor
out
into
xchg
loope
stos
fisubs
test
cmp
xchg
pop
sbb
sbb
test
sub
adc
addr16
jge
dec
aam
jmp
movsl
mov
or
out
repz
dec
aas
lahf
push
mov
cmpsb
out
lret
mov
stos
cmpsb
jmp
loop
ljmp
test
loopne
addl
lret
push
adc
sbb
outsb
adc
push
cmpsb
cmp
jae
lcall
add
enter
inc
popf
jecxz
std
fisttps
push
jg
or
mov
and
xchg
mov
loop
jg
or
ror
cmp
lcall
nop
push
idivb
sti
push
fmuls
pop
and
fmuls
jnp
xchg
cwtl
pop
in
mov
xchg
cmp
mul
adc
out
add
js
into
mov
inc
or
loopne
cmp
imul
push
or
jge
pusha
jle
cltd
pop
push
add
mov
xchg
add
ds
movsl
hlt
in
sbb
dec
rcll
daa
repz
sti
push
jmp
and
lds
xchg
mov
dec
mov
rcrl
idiv
sbb
mov
cmp
or
sub
sub
push
aas
outsb
cmc
out
in
adc
dec
mov
push
out
dec
xor
pop
stos
xor
jp
movsl
adc
xchg
aaa
dec
dec
jnp
sbb
xchg
and
test
test
add
or
sub
movsb
scas
sub
adc
hlt
sahf
jb
cld
mov
loop
dec
lret
int3
or
inc
mov
mov
lcall
dec
ljmp
mov
xchg
int3
fbstp
iret
mov
stos
push
imul
loope
loopne
pop
cld
jp
pop
push
mov
or
xchg
cmp
outsb
pop
pop
sub
jns
addr16
mov
ror
inc
sti
sarb
jl
dec
sbb
xor
adc
dec
push
sti
aas
aas
mov
cmpsl
nop
push
xchg
inc
pop
shl
sti
setb
icebp
mov
adc
enter
loopne
das
add
lret
adc
scas
cmpl
mov
in
ljmp
out
lea
push
dec
loopne
xor
addr16
leave
jo
nop
jno
outsl
mov
lahf
ds
loope
rorb
sub
imul
mov
cmpsl
jmp
dec
push
jbe
jb
mov
loope
push
dec
pop
ss
ds
fdivrs
sbb
out
aas
jecxz
dec
cs
rcrl
jo
lods
add
pushf
jnp
lea
lods
xor
mov
rclb
jg,pn
andl
xor
pop
inc
mov
push
and
or
xor
xchg
jge
insl
mov
xchg
push
dec
ret
imul
test
cmp
movsb
int
test
mov
leave
popf
cmp
pop
inc
jne
sbb
je
in
into
pushf
sbb
adc
mov
sub
and
cmp
push
testl
mov
push
repz
pop
aam
cmp
into
cmpsl
xchg
sub
push
cmp
push
jmp
enter
xchg
and
pop
mov
inc
rcrl
jmp
mov
aaa
push
xorl
cmp
testl
pcmpeqd
clc
inc
iret
repnz
pop
xchg
imul
loop
and
loop
lods
orb
fildll
sub
sub
mov
push
xchg
ret
xchg
pusha
enter
out
popa
mov
inc
adc
inc
adc
mov
ret
pop
out
jp
mov
mov
imul
in
stc
dec
cmp
loop
sub
mov
dec
pushf
fldl
jo
rorl
das
iret
sub
mov
enter
mov
cli
push
mov
andb
pop
pop
call
jg
cmp
mov
and
aaa
je
jno
es
jge
mov
je
repz
andl
je
cli
adc
sarl
popa
ja
mov
cmc
mov
pop
pop
push
subl
fsubs
sub
ret
repz
or
in
push
jne
call
xor
int3
mov
dec
sub
int
clc
mov
hlt
lock
test
xor
aam
adc
jecxz
xchg
jp
mov
setae
movsb
jl
dec
nop
mov
adc
inc
fldenv
call
and
cmc
xchg
lock
pop
fwait
jns
clc
lods
sti
xor
pop
dec
sti
or
or
jnp
outsl
jbe
fmuls
xlat
fwait
cmpsb
lcall
pop
clc
sub
and
sbb
fcom
enter
addb
xlat
loopne
push
dec
adc
out
ret
pop
dec
punpckldq
xor
inc
fwait
mov
adc
xor
mov
inc
stos
add
seta
aaa
xor
cmp
stos
movsb
loop,pt
cld
push
xlat
and
es
ret
mov
xchg
scas
jb
dec
addr16
stos
aam
inc
inc
loopne
stos
xchg
jmp
adc
inc
cmpsl
clc
mov
in
sbb
push
mov
xor
jb
loopne
inc
in
hlt
cmp
dec
pop
sub
into
lcall
jb
push
cwtl
lea
test
jne
lcall
adc
data16
in
sbb
fmul
test
jb
lods
sub
cmp
imul
pop
mov
pop
rcrb
and
push
cmpsb
lea
fsubl
push
aam
jl
xchg
pop
and
lahf
cmpsl
xchg
xor
leave
movsl
pop
pop
in
xchg
int
std
xchg
fistl
push
adc
mov
mov
movl
repnz
cmc
jl
cmc
cli
jae
ljmp
outsb
or
or
stos
ret
mov
aaa
dec
mov
rdmsr
subb
rcrb
adcb
cwtl
test
pushf
mov
inc
fs
fwait
fwait
daa
sbb
or
in
lods
out
in
mov
por
scas
pusha
sbb
hlt
mov
jne
and
xor
cli
imul
jmp
mov
enter
mov
xchg
jo
cli
stos
cmp
fnstsw
sub
mov
sbb
das
xor
mov
lret
jmp
shl
mov
jmp
mov
xchg
imul
and
jno
cmpsb
inc
mov
je
dec
dec
fdivrl
dec
dec
les
cmp
jge
pusha
adc
jae
dec
mov
dec
mov
loop
jg
pop
icebp
loope
mov
cmp
ja
rorb
push
dec
clc
loopne
pop
test
lahf
data16
movsl
fst
test
je
lock
xor
stc
add
shl
jne
call
jmp
rcll
jbe
ljmp
movsl
sub
dec
ret
fistpl
xor
sbb
xor
sbb
stc
inc
jecxz
dec
lahf
subb
ss
lret
test
shlb
mov
clc
outsl
andl
insb
mov
pop
cmp
or
iret
ja
jg
jge
lods
popa
daa
jg
fisttpll
mov
add
pop
inc
sbb
outsl
xor
ret
imul
out
movsl
xor
test
inc
pop
xor
sub
and
std
jbe
add
mov
fsts
js
daa
repz
loopne
nop
out
int
pushf
xlat
pop
mov
flds
push
scas
sahf
out
push
mov
push
test
test
movsb
js
in
ret
dec
pop
sbb
inc
jmp
movl
dec
xor
xor
pop
add
jnp
mov
sbb
dec
push
fwait
ja
mov
and
pop
sti
jge
in
pop
mov
push
mov
lock
mov
cmp
pop
sub
push
hlt
sbb
out
sarb
pop
push
mov
xchg
mov
test
cmp
xchg
fsub
pop
mov
adc
dec
stos
pop
dec
mov
cmc
pop
mov
fldenv
sbb
mov
jge
push
sahf
std
mov
scas
addb
xor
jnp
ret
jmp
leave
or
pop
mov
mov
push
aad
pusha
shll
gs
xchg
cwtl
or
cmp
mov
mov
pop
filds
inc
repz
add
ja
adc
popf
jnp
iret
pop
and
xchg
and
adc
jge
xchg
jle
xchg
fstp
sub
add
frstor
icebp
stos
jp
or
scas
rcrl
sahf
jno
jnp
jno
push
mov
xchg
add
movsb
outsl
lahf
scas
jg
dec
adcb
sbb
lods
sbb
mov
repz
mov
fiaddl
dec
iret
jge
movsb
das
in
adc
mov
fsubl
xor
push
in
int
mov
out
andb
lods
xchg
xchg
xchg
sbb
mov
add
lahf
bound
in
rcll
dec
addr16
sahf
and
lahf
push
out
jmp
mov
inc
rolb
xchg
mov
push
and
jae
fsts
mov
test
rorl
jmp
adc
mov
std
jbe
push
xchg
fcmovnb
aad
and
dec
cld
dec
popa
add
es
lock
cmp
stos
ret
xchg
push
mov
stos
jmp
mov
mov
xlat
pusha
dec
lods
adc
and
out
mov
int
fmull
fsubs
sarl
xchg
iret
pusha
daa
pushl
hlt
pop
insb
mov
ja
mov
mov
pop
sub
adc
dec
dec
sub
pop
or
xchg
adc
fidivrl
push
mov
mov
ret
pop
sbb
mov
mov
popa
mov
and
pop
lea
xor
out
cmp
dec
fldcw
fiadds
test
push
mov
xchg
pop
shufps
inc
fildll
jnp
push
repz
push
xor
dec
adc
inc
sub
cmp
es
cmp
mov
xor
push
adc
popf
dec
shl
test
scas
movsb
add
cs
inc
or
sub
mov
mov
push
ds
xlat
test
and
sbb
pop
inc
mov
sub
stos
daa
dec
ret
ret
rcr
adc
rclb
pop
adc
in
lods
add
push
lock
imul
popa
xchg
and
leave
mov
jle
push
adc
inc
cltd
push
movsb
mov
adc
xor
and
icebp
sub
mov
jecxz
mov
fdivrl
outsb
or
inc
sbb
pop
popf
cmpsl
inc
popa
and
or
icebp
push
testb
xor
pop
fs
adc
repz
cwtl
dec
aad
adc
or
in
dec
sbb
adc
arpl
xor
loop
sub
jbe
imul
mov
stos
jno
ffreep
cltd
adc
adc
dec
leave
out
adc
cwtl
jno
out
enter
movsb
dec
gs
xor
cmp
xlat
inc
lds
mov
push
inc
inc
lods
out
arpl
sub
inc
fcoms
push
mov
fiadds
scas
ds
in
jbe
adcl
fsubrs
ds
sbb
pop
inc
repz
jl
pop
les
push
fs
mov
test
orb
fildl
dec
in
cmpsl
fdivrl
enter
sbb
sub
cmp
and
push
inc
mov
mov
dec
repz
sbb
dec
inc
add
and
rcrb
push
lret
test
cmp
dec
out
push
inc
cs
aas
mov
xchg
call
mov
out
lret
pop
inc
jmp
imul
popa
mov
mov
iret
inc
movsl
adc
and
popa
mov
jmp
inc
popf
push
out
daa
xor
lock
push
dec
test
into
and
mov
in
inc
mov
enter
daa
sub
cmp
jns
ss
or
sub
adc
inc
std
int3
xlat
into
lret
pop
mov
push
xor
pop
adc
xchg
mov
push
divl
cmc
lock
pop
add
lods
jb
scas
jmp
loopne
lahf
sub
push
negl
xor
push
shrb
cmpsb
cmp
inc
jge
xchg
out
stos
pushf
sbb
push
stc
outsb
jge
mov
aad
and
adc
xchg
and
dec
scas
sahf
loopne
mov
xchg
cmpsb
xchg
jp
fistpll
mov
cmpsl
mov
cmpsl
ja
rcrb
and
xor
dec
or
mov
aam
jbe
mov
add
out
loop
sbb
loopne
stc
push
and
pop
popf
mov
adc
hlt
jge
iret
sub
cs
add
mov
xchg
out
or
xor
sbb
inc
cs
movsb
sbb
xchg
xor
xlat
enter
outsb
pop
test
sub
test
sbb
dec
rol
inc
mov
adc
push
data16
popa
inc
and
dec
cmp
push
mov
rcrb
mov
xor
faddl
pushf
lahf
ss
sub
adc
in
inc
dec
dec
loop
stos
daa
scas
outsl
pop
push
inc
or
inc
repnz
in
push
clc
push
mov
fs
pushf
pusha
arpl
inc
rclb
or
lock
xchg
xor
stc
xchg
in
pop
jmp
mov
stos
insb
pop
mov
jbe
jecxz
inc
jmp
mov
xchg
xchg
in
jg
xor
and
in
mov
fdivl
fstpt
xchg
mov
mov
push
push
flds
outsb
sahf
scas
mov
jbe
popf
sub
add
leave
insl
push
sbb
outsl
cmp
cmp
call
sub
std
push
push
lcall
movsb
loopne
nop
aas
int3
stc
cmp
and
mov
add
push
sbb
xchg
imul
mov
mov
aam
into
arpl
fisubrl
stos
sti
jnp
outsl
or
xor
pop
rorl
js
aam
inc
aad
cmp
sub
repnz
jns
dec
pop
xor
xor
inc
mov
pop
inc
test
adc
inc
ja
adc
xlat
iret
xchg
xlat
pop
adc
je
fwait
cli
out
imul
xchg
mov
imul
mov
jo
pop
xchg
in
xor
addb
lds
jg
sbb
sbb
repz
or
or
cmc
jno
cmp
sub
pop
leave
inc
cwtl
sbb
das
and
dec
xchg
fdivrs
push
pushf
cmp
sub
pop
pop
xor
popa
es
mov
pop
push
adcb
and
cwtl
popa
or
cmp
and
out
push
ljmp
xor
aam
xor
nop
sub
or
test
dec
xor
jmpw
ret
cmp
sub
and
lret
adc
mov
adc
mov
out
imul
add
in
pop
pop
out
int3
inc
jge
push
jmp
and
push
fwait
inc
mov
sbb
dec
mov
test
push
cmpsb
insl
lds
ret
aaa
sub
mov
test
and
sbb
out
loopne
jg
mov
mov
les
pushf
push
ret
xchg
and
sbb
pop
int
leave
push
rcr
sub
jo
fcompl
ja
mov
repnz
mov
inc
sahf
cmp
xorl
scas
mov
rcll
inc
cmc
out
cs
rcll
push
arpl
xchg
lods
push
arpl
pop
stos
cmc
insl
imul
enter
jnp
aam
movsl
xchg
std
addr16
jae
mov
insb
test
mov
push
add
addr16
mov
out
xor
push
cwtl
mov
lret
sahf
lcall
push
bound
fimull
bound
pop
mov
add
out
jp
dec
mov
xor
push
in
or
fcmove
inc
leave
fs
mov
jmp
jne
mov
les
sub
test
aas
outsl
sbb
jns
push
mov
and
jne
sbbl
lcall
adc
test
sbb
mov
and
mov
push
notl
cwtl
add
pop
jmp
cs
xor
imul
ds
ljmp
iret
pushf
cli
js
or
movsl
add
data16
lea
mov
in
push
repnz
lahf
push
or
in
insb
sbbl
movsb
adc
notb
fisubrs
js
cmc
mov
jnp
shl
xchg
cli
test
pop
xor
jl
cmpsb
push
add
fwait
add
int3
subl
xor
dec
fldenv
inc
sbb
out
sub
aaa
jl
cli
sub
xor
loopne
lock
jo
insb
pop
stc
sbb
ss
mov
out
nop
sbb
mov
jecxz
enter
xlat
push
mov
lods
mov
test
sub
enter
shrb
cmp
addr16
out
mov
sbb
shlb
push
rorl
fisubrs
test
cmp
lock
mov
cwtl
rorb
fists
jle
std
cli
mov
clc
scas
nop
push
add
js
adc
sub
jge
arpl
in
add
stos
loop
cmp
ljmp
pop
shrb
mov
dec
push
xchg
sbb
sub
mov
dec
imul
add
repz
lds
cmpsb
stc
cld
lods
push
fsubl
dec
cmpsl
nop
mov
es
int
leave
cmpsl
and
dec
addl
stos
mov
cmpsb
sbb
fnsave
push
mov
popf
xchg
mov
leave
add
scas
or
mov
lods
fildll
jne
shlb
popf
mov
push
mov
push
scas
jne
jno
cltd
in
out
push
add
mov
push
jle
and
mov
mov
fnsave
pop
jns
scas
aaa
fcomip
aam
jns
out
pop
les
jnp
cmp
and
cmp
sub
sti
test
int
pop
in
ret
inc
ret
inc
xchg
iret
xchg
ds
and
mov
fisttpll
push
pushf
jne
stos
sub
mov
xor
inc
add
and
je
push
mov
mov
fcoml
mov
mov
test
jmp
cmpsl
jl
sub
decl
mov
mov
repnz
mov
dec
dec
pop
mov
jne
sbbl
mov
lock
xchg
mov
je
mov
shrb
sbb
add
sbbb
push
aam
mov
sbb
jg
dec
push
call
test
repnz
add
xchg
roll
jno
or
stc
add
das
cmpsb
popf
sub
cli
xor
loope
pop
sahf
xor
jne
push
mov
test
lods
dec
sub
cmpsb
sahf
sbb
dec
xor
sbb
mov
cmpsb
mov
fistl
pop
mov
cmpl
pop
mov
inc
insl
lods
dec
add
jae
dec
mov
inc
roll
push
movsb
int3
je
pop
jl
in
xchg
mov
push
xchg
inc
loopne
jg
stos
imul
std
das
rclb
push
mov
outsl
ss
in
pop
mov
mov
xor
popf
inc
push
add
jno
xor
adc
or
aas
xchg
xchg
xor
cmp
and
mov
xor
cmp
jbe
xor
mov
int
fisttpl
loopne
add
mov
sub
hlt
out
andb
sbb
inc
sub
and
ret
in
xchg
or
adc
or
clc
add
addr16
in
es
jmp
inc
fcoms
mov
add
scas
and
sahf
cmc
mov
mov
xor
ljmp
push
jb
addr16
push
cmp
fisttps
repz
je
mov
shlb
pop
and
pop
xchg
ret
push
xchg
xor
jb
jb
divb
lds
call
cmp
dec
cmp
sub
sarl
sub
das
gs
xor
arpl
daa
movsl
mov
cltd
lahf
push
imul
cmpsl
cmp
xlat
roll
rcrl
sub
inc
lret
jg
mov
leave
nop
orb
adc
pusha
daa
int3
inc
cmpsb
in
sbb
insl
or
dec
xchg
addl
add
std
notl
test
push
bound
sbbl
mov
mov
fbld
dec
outsb
adc
stc
jp
aas
les
cmc
push
pop
pop
test
out
mov
inc
addl
shlb
mov
ret
mov
std
int
outsl
outsb
dec
in
add
loopne
clc
mov
mov
popa
sub
xlat
andb
mov
and
call
scas
mov
rorb
arpl
add
jl
inc
xor
es
pop
addr16
adc
lahf
aaa
loope
jns
lret
imul
inc
movsl
mov
pusha
test
inc
dec
adc
inc
rorl
jmp
push
sub
inc
repz
cmp
lret
adc
push
mov
add
and
ss
ficomps
nop
inc
mov
jmp
or
pusha
sub
out
mov
int
cmpsb
jmp
xor
xor
add
pop
rclb
sete
mov
iret
jl
dec
cmp
push
pop
xchg
sub
enter
xor
sbb
rcr
ret
jge
xor
sub
rolb
jp
mov
pop
inc
sub
push
mov
xchg
cltd
loop
jno,pn
cmp
jecxz
mov
push
xor
mov
popa
mov
mov
test
neg
fldcw
mov
inc
sbb
int
dec
ds
and
cld
jle
fimull
cmp
lret
lret
mov
jmp
add
insb
shll
push
ret
shlb
dec
ds
lea
divb
push
pop
cmp
or
pop
ja
mov
mov
mov
mov
dec
repz
das
mov
mov
jae
fs
sbb
in
inc
pop
mov
and
outsb
mov
test
xchg
out
add
icebp
sbb
cmc
ret
fdivl
sbb
cmp
js
out
divl
movsb
mov
xor
pop
fwait
xor
movsl
mov
loop
mov
dec
popa
outsb
dec
dec
xchg
std
pusha
inc
fcompl
subb
int3
es
dec
fisttpl
adc
or
inc
in
loop
mov
scas
jle
dec
pop
lret
shlb
je
xchg
mov
fidivl
add
ss
shr
add
in
int3
lea
xorb
lret
ja
or
inc
xchg
fs
push
sub
jmp
push
icebp
nop
inc
ds
sbbl
inc
les
and
xlat
push
mov
fucom
push
sbb
sbb
pushf
or
push
imul
arpl
inc
leave
dec
imul
sub
lret
scas
add
cmc
popf
movsl
xor
and
or
inc
sub
pop
add
and
repnz
imul
push
xlat
xchg
jle
mov
cmp
jbe
pop
jecxz
test
popf
xchg
mov
xchg
cmpsl
stos
mov
iret
loope
dec
rclb
flds
sub
les
clc
inc
xchg
or
call
mull
cmp
nop
dec
add
into
inc
xor
jns
roll
int3
cmc
mov
lahf
aas
mov
mov
sub
xchg
inc
iret
jno
mov
bound
test
in
xor
push
mov
jg
in
pop
imul
inc
ja
inc
add
xor
sbb
xor
and
je
fst
adc
mov
cli
jbe
mov
loopne
scas
mov
mov
cmp
xchg
sub
xchg
dec
cmc
or
cli
cltd
adc
cld
bswap
jbe
mov
pop
aas
xchg
push
xchg
push
shll
mov
and
ja
dec
mov
push
popa
mov
inc
lods
popa
fldcw
dec
js
mov
pushf
cs
or
pop
mov
test
xor
test
jb
jle
xchg
sbb
mov
jp
movsl
imul
push
sbb
loope
sub
jno
pop
gs
push
inc
mov
daa
outsl
fildl
fsubr
push
sub
dec
mov
js
dec
scas
orl
xchg
dec
mov
scas
push
and
fstpl
xor
ret
inc
xchg
inc
adc
aaa
jg
cli
into
cmp
scas
push
aas
push
mov
mov
popf
fldz
pop
pop
pop
mov
push
fstpt
inc
inc
xchg
inc
icebp
or
arpl
sub
add
mov
dec
xchg
and
and
mov
test
sbb
ljmp
adc
fsubr
jecxz
xor
xchg
lret
xchg
jge
dec
sub
bound
pop
sub
fistl
insl
flds
sub
xor
mov
pop
lea
sub
in
cld
aam
scas
inc
outsl
push
or
mov
into
fsubs
outsw
jno
push
fwait
imul
aam
out
inc
pushf
and
xor
movsl
cmp
inc
jne
iret
fcmovu
in
mov
xor
xchg
mov
addb
mov
or
add
lcall
add
xor
jae
inc
jg
in
fwait
movsl
mov
or
or
in
push
ds
push
push
push
mov
scas
scas
rolb
mov
shll
xchg
push
fwait
mov
cltd
jp
sub
fcoml
pop
fiaddl
int
push
loopne
xor
cmc
mov
push
xchg
mov
idiv
push
push
mov
aad
xchg
push
ljmp
fisubrs
cmp
mov
test
int
cli
pop
and
nop
push
repnz
neg
adc
aas
lcall
xchg
stos
andb
mov
sub
inc
jae
mov
lcall
mov
or
adc
cli
stc
shlb
push
or
clc
ss
mov
shrl
jp
or
push
jnp
dec
ret
or
out
mov
jnp
out
and
add
cli
testl
dec
fs
fildl
test
pop
and
ret
fcoml
sbb
das
fucom
sbb
aas
sbb
dec
jne
and
pushf
sub
cwtl
bswap
loop
xchg
mov
movsb
adc
enter
mov
fbstp
or
enter
loope
xor
js
sti
js
push
addr16
scas
lods
jmp
cs
std
pop
stc
dec
cwtl
mov
lcall
les
fisttpl
adc
dec
testl
xchg
mov
dec
adc
fwait
xor
scas
ljmp
dec
jne
push
mov
cwtl
adc
push
lea
test
je
out
pop
clc
dec
push
jecxz
dec
out
mov
jns
add
xchg
in
sbbb
dec
cltd
bound
jb
xchg
inc
stos
push
fsubl
sub
xor
fwait
dec
fsubrs
xchg
rcll
lods
mov
aad
addl
jge
cli
and
xchg
arpl
and
jl
repz
stc
pop
xor
jp
mov
jb
orb
xchg
lods
xor
xchg
push
cli
xorb
test
fs
rcrb
sub
in
mov
pop
adc
and
stc
and
xor
lea
test
sbb
jae
add
dec
setnp
out
out
jl
pop
or
outsl
push
mov
dec
mov
test
adc
mov
xor
xchg
sti
adc
mov
mov
shrl
fisubl
loope
sbb
lahf
cmp
push
jb
int3
cmp
lahf
inc
enter
or
fwait
sub
jle
daa
je
rclb
mov
pop
cmp
or
clc
mov
jp
in
sbb
jle
ret
sub
push
inc
dec
call
ljmp
movsb
iret
pop
mov
jno
scas
sbb
pushl
pop
cmp
aad
stos
fs
mov
cmp
mov
mov
lods
ljmp
push
shr
aaa
xlat
push
xchg
leave
fsubrs
subl
mov
adc
into
inc
adc
sub
inc
scas
loope
xor
pop
sbb
cmp
je
cmpsb
pop
and
fbld
mov
popa
push
adc
out
sbb
pop
sbbb
sub
repz
pushf
fidivrl
inc
outsb
aaa
dec
push
pop
add
pusha
add
out
mov
fwait
push
insl
into
and
mov
lret
iret
ja
js
nop
popa
cmp
cmp
das
jnp
pop
fs
cs
add
push
cmp
pop
fisubl
adc
add
ds
sub
and
fwait
mov
mov
dec
cwtl
jmp
leave
xor
jmp
scas
mov
test
mov
pop
xor
xchg
push
cmpsl
adc
shll
lods
xchg
stos
sahf
add
sbb
test
loop
pop
sub
sub
jl
test
mov
jge
mov
jnp
jge
pop
cmc
sub
arpl
pop
ret
je
mov
outsl
or
test
adc
leave
adc
pusha
or
clc
dec
loop
stos
imul
and
daa
cltd
jp
pop
mov
jns
imul
sbb
xchg
sub
jmp
aas
dec
lods
or
xchg
sub
jg
cmp
pop
mov
out
sbb
cmpl
jo
je
and
sub
mov
shlb
mov
fists
pusha
add
push
shr
das
adc
fsubs
nop
outsl
inc
dec
in
fwait
jecxz
pop
xchg
xor
xor
je
add
popf
rorb
lea
fidivs
outsb
sbb
aas
and
test
cmc
jb
in
adc
roll
ret
mov
ja
pop
cmpsl
sub
cmp
enter
xor
add
cmp
popf
xlat
or
into
pop
fs
mov
popf
daa
push
stos
and
out
pushf
sub
jns
and
fnstsw
out
jo
xor
pop
mov
es
and
in
xchg
loopne
dec
pop
cld
mov
pop
shrl
popf
xor
dec
jl
add
fmul
loopne
inc
add
mov
or
xchg
iret
cmp
frstor
mov
jbe
cmp
fdivrl
mov
enter
pop
sub
mov
xchg
mov
add
cmpsb
pop
lret
daa
or
jo
lahf
push
cmpsl
pop
push
lods
movsl
movsl
inc
and
pop
xor
jmp
lret
xorl
lods
pop
mov
in
test
sbb
xchg
xchg
insl
push
or
clc
loope
popa
xchg
pusha
pop
or
sub
or
popf
adc
mov
inc
lods
xchg
pop
mov
ret
mov
and
add
xor
inc
fmulp
fisubrl
mov
jno
mov
lahf
test
cwtl
fldl
fwait
pusha
daa
iret
mov
mov
add
lds
jl
cmp
mov
sub
xchg
cltd
or
and
and
lret
adc
testl
jne
or
mov
arpl
iret
or
xchg
fstpt
jb
fldenv
daa
or
mov
idivb
mov
push
cmpsb
xchg
mov
xor
lods
iret
lock
dec
scas
xor
or
repnz
mov
and
or
inc
mov
iret
in
dec
lods
fdivs
mov
clc
pop
inc
pop
lret
mov
mov
leave
xor
mov
push
add
mov
sbb
fisubl
xchg
and
push
in
je
ljmp
dec
cmp
push
sub
push
inc
icebp
xor
ficoml
mov
clc
ja
pop
xlat
sub
fcompl
testl
mov
lret
push
fcoml
and
mov
mov
cli
mov
dec
cli
dec
xor
pop
fldenv
ret
mov
push
imul
subl
les
shr
lods
cmp
cmp
lea
stos
xor
ss
xor
jecxz
jecxz
xor
mov
fistpl
adc
loopne
dec
call
test
clc
in
call
mov
cs
ljmp
and
pusha
jecxz
loopne
pop
mov
xor
fimull
cli
pop
shll
outsb
cs
mov
or
lock
push
push
ret
fistl
jae
mov
shrb
insl
lret
mov
inc
inc
fcoms
xor
out
mov
jno
sbb
jle
lcall
add
loop
idivb
mov
xchg
insb
add
inc
mov
and
loopne
ja
sub
cmp
aam
push
clc
fdivrp
sbb
jmp
rcrl
sbb
fcmovbe
stos
or
xchg
dec
ja
int3
cmp
pop
nop
push
or
pop
jae
and
cmp
mov
inc
loop
in
insb
adc
sbb
xchg
mov
incb
cmp
rcll
or
scas
xchg
iret
fs
jne
push
es
ss
mov
push
in
cltd
iret
scas
mov
test
aaa
cmp
dec
test
push
mov
mov
or
and
push
inc
mov
and
pop
mov
mov
xchg
sti
imul
lret
xor
aam
pop
sbb
and
in
rorl
sbb
push
call
or
arpl
push
and
jmp
cwtl
scas
push
xchg
jmp
out
int3
loopne
das
dec
stos
dec
xchg
inc
das
jne
or
ds
lea
xchg
rorl
insb
jb
lcall
jo
fimuls
inc
rcr
jg
jne
jo
push
out
cmc
inc
and
rorl
stos
stc
and
cs
rcrl
imul
ret
sbb
push
out
into
aas
jmp
jle
cwtl
or
pop
jge
mov
mov
push
into
outsb
push
mov
pushf
xchg
push
call
imul
sub
mov
mov
lret
pop
std
clc
fisttpll
cmp
ret
cmp
xchg
repnz
fwait
add
mov
dec
inc
add
dec
inc
lahf
es
aam
xchg
sub
scas
out
aaa
push
scas
aad
and
pop
cmpsb
cld
inc
icebp
xchg
xchg
lds
cmc
aad
mov
mov
sti
out
fisubrs
fadds
sbb
shlb
movb
sbb
adc
push
imul
cmp
or
dec
fildll
mov
enter
das
lret
xchg
push
cmpsb
insl
and
lcall
xchg
mov
hlt
sub
pop
inc
jg
sub
jno
cmp
xor
rol
scas
lock
mov
mov
add
and
mov
out
xor
push
ja
cmc
scas
cmp
icebp
out
xlat
test
repnz
mov
fsubrl
into
and
lods
dec
scas
pop
pop
cmp
mov
loope
fnstsw
in
mov
xorl
push
inc
mov
shl
jbe
push
or
mov
mov
in
xor
cmp
cmp
lahf
xchg
or
pop
outsl
fsubs
inc
repz
mov
pop
aas
lcall
or
sbb
cmpl
addr16
icebp
lods
add
movsb
jecxz
in
push
mov
lds
movsl
fnstsw
adc
dec
sub
push
ficoml
stos
or
insl
lds
outsl
jbe
sbb
lret
hlt
cmp
sti
inc
pop
sub
les
out
inc
je
jge
sbb
movsb
push
push
dec
jo
push
repnz
mov
mov
loopne
fistps
cwtl
xor
aad
ds
push
mov
in
add
and
stc
adc
dec
aam
push
inc
cld
daa
xchg
push
dec
shll
mov
push
jp
lcall
loopne
push
sarb
pop
out
mov
sbb
xchg
lods
xchg
mov
mov
push
testb
xor
mov
out
loopne
fadds
adc
pushf
loope
or
hlt
int
push
dec
pop
out
loop
pop
sbb
mov
loope
ficomps
lds
cli
mov
jle
pop
adc
pop
outsl
lods
cli
push
xlat
mov
jnp
out
movsb
adc
xor
mov
adc
mov
push
sbb
and
jle
fisttpll
nop
push
xchg
jmp
movsb
fistps
mov
cwtl
out
cmp
fidivrl
dec
pop
mov
add
sbb
push
ja
stc
les
testl
in
cltd
or
imul
add
dec
pop
xor
cmpsl
jp
sub
add
outsb
jge
pop
xchg
popf
popf
leave
inc
jbe
insl
adc
out
addr16
adc
xor
push
arpl
sbb
pop
dec
repnz
jbe
andb
push
dec
sbb
adc
cwtl
adc
sbb
xlat
sub
loope
lahf
loop
jbe
gs
lods
pop
mov
adc
pop
cmp
jmp
push
inc
rep
xchg
xchg
inc
stos
jae
and
xchg
dec
lds
lods
scas
cmp
scas
or
push
daa
mov
pusha
dec
test
xchg
shlb
mov
pop
int3
iret
jge
add
xlat
jns
xlat
movb
cmp
sbb
add
shlb
orl
cltd
popf
and
fisubs
into
sub
cmp
or
adc
sbb
repnz
mov
jbe
pop
push
lret
or
frstor
mov
aaa
test
and
sub
mov
clc
add
aaa
into
out
icebp
rolb
pop
add
filds
fistl
dec
mov
fcmovnbe
jae
mov
daa
dec
daa
shrb
mov
in
movsl
mov
jns
jp
mov
das
imul
mov
or
or
int
cld
lods
jne
mov
in
sub
test
mov
cwtl
std
insb
and
icebp
outsb
outsl
ja
in
inc
jle
jmp
cld
je
fs
dec
dec
jb
pop
dec
ret
out
data16
in
mov
dec
mov
hlt
sub
mov
mov
push
fmuls
sub
sub
sub
popf
mov
pop
lock
repnz
cmp
xor
push
jl
jb
jne
mov
lea
pop
lds
jl
imul
xchg
stos
lret
and
cld
ljmp
xor
sub
mov
mov
daa
ret
pop
fistps
push
cmc
jge
jae
pop
sahf
pop
scas
push
fisubrl
adc
out
test
mov
sbb
pop
mov
pusha
rorb
ror
add
xor
movsb
cmpsb
sahf
pop
lods
xlat
sbb
jne
es
data16
cmp
inc
int
mov
jge
pop
in
into
ljmp
cwtl
mov
xchg
jne
into
data16
push
add
mov
gs
negl
movsl
out
bnd
xlat
sub
mov
cmp
jb
inc
loope
cmp
iret
jle
pop
hlt
fmul
and
notl
adc
push
pusha
dec
mov
or
test
cli
imul
std
jo
mov
pop
mov
imul
push
div
sub
inc
mov
xchg
xor
imul
xor
fneni(8087
push
sub
out
xor
data16
mov
pusha
xlat
push
mov
fs
sarl
bound
shll
iret
mov
dec
popf
add
add
cli
fisubs
jge
adc
push
in
fs
int
loope
cmpsl
mov
sarl
add
sub
lods
cwtl
cmp
pop
or
inc
or
jo
hlt
std
imul
sti
dec
push
adc
mov
dec
push
dec
pop
pop
lea
inc
addb
cwtl
push
mov
cld
or
and
pop
jmp
jnp
or
xor
repnz
aaa
mov
fwait
loopne
lahf
adc
cmp
pop
add
mov
jge
out
mov
aad
into
incb
inc
fnstsw
xor
xchg
add
jle
push
int
jp
lahf
push
pushf
mov
xchg
out
insb
adc
popf
add
pop
adc
ljmp
stc
jge
in
adc
loope
divb
mov
jb
mov
clc
and
pop
rcrb
add
adc
jo
mov
xorb
inc
lods
dec
lret
insl
out
nop
daa
jne
jmp
xor
push
adc
adc
aad
mov
mov
loop
adc
mov
dec
dec
pop
sub
js
adc
xor
inc
mov
or
stc
lea
mov
lahf
int
cld
jo
sub
cmc
dec
test
pusha
cmp
fists
mov
lods
mov
push
cmc
mov
jae
mov
push
mov
jne
inc
xchg
push
sbbl
sbb
shll
fstps
xchg
rep
call
dec
mov
jo
stos
rcl
lea
arpl
jne
pushf
push
fnsave
imul
inc
xor
adc
jb
mov
das
sbb
xchg
stc
or
les
pop
fsubrp
push
jb
xchg
imul
mov
push
fisubrs
addl
mov
xor
xchg
insb
jg
in
push
test
xchg
cmp
inc
cmp
leave
adc
lret
insl
jnp
aam
sub
push
mov
movsb
lahf
adc
sbb
pop
test
xor
testl
jp
call
pop
push
nop
test
mov
xchg
xor
repz
jne
dec
loope
push
lods
lds
fisubrl
dec
xlat
lea
cs
sub
sbb
push
xchg
clc
add
loop
daa
test
xlat
mov
in
addb
cmpsw
xchg
xor
shlb
je
in
cmp
in
xchg
sub
imul
sub
mov
fldl
cs
and
cld
frstor
add
fisttpll
jle
sub
hlt
pop
adc
pop
cmpsl
stos
nop
jns
stc
inc
lock
cld
dec
aaa
aam
movsb
and
inc
add
sub
roll
inc
rcrl
add
jecxz
add
mov
lods
enter
adc
sar
mov
cmc
inc
mov
cltd
fcoms
sbb
xchg
pop
fwait
test
movsb
cmp
or
cmp
pop
lods
xlat
xlat
xor
jno
sub
push
pop
inc
sbb
push
out
jne
stos
fistps
lods
add
xchg
cmc
push
fldenv
je
cmp
es
add
fcomp
and
sbb
out
inc
je
mov
add
xor
lods
inc
sub
test
mov
in
mov
and
sub
orb
cwtl
sbb
pop
and
bound
outsb
mov
lea
jae
push
and
icebp
cmc
mov
mov
jb
mov
or
sarl
shl
in
and
push
mov
and
out
adc
sahf
jecxz
adc
iret
je
fmuls
cld
xor
call
call
sub
cmp
pushf
xor
movsl
repz
mov
bound
pop
push
jmp
arpl
fwait
aaa
add
rcrl
and
shl
push
ljmp
adc
fstps
dec
cmpsl
mov
out
lea
rorb
mov
dec
jge
jg
sub
xchg
shl
lea
adc
cmp
gs
nop
adc
lret
adc
lds
rcll
std
xchg
push
fisubrs
dec
lea
sbb
dec
sub
xlat
out
lret
push
push
pop
cmpsl
scas
jne
and
pushf
decb
clc
inc
rcll
cld
subl
js
fstpl
ljmp
inc
jecxz
bound
imul
sub
dec
adc
scas
dec
inc
push
push
xchg
push
dec
sbb
xchg
lret
mov
mov
shll
stc
jno
jp
push
adc
push
iret
xlat
adc
ret
dec
and
scas
dec
outsl
adc
jnp
enter
jbe
pusha
pushf
mov
sub
fldenv
dec
cmpsb
call
mov
push
movsb
test
pop
outsl
dec
cmp
sbb
lock
push
out
sbb
decl
in
clc
pushf
idivl
addr16
jbe
mov
adcl
lret
cltd
dec
mov
andl
andl
jnp
mov
cwtl
icebp
jmp
mov
sahf
sahf
mulb
repz
pop
icebp
movsb
jmp
and
sbb
pushf
frstor
sub
or
fwait
loopne
fadds
fstp
cltd
adc
pop
repnz
mulb
dec
jnp
lods
inc
push
mov
lods
aaa
lods
push
outsl
xchg
mov
adc
sbb
xchg
dec
add
mov
jp
jno
dec
sbb
shll
icebp
or
push
pop
jecxz
jge,pt
pop
and
sahf
mov
ret
pop
sub
sub
mov
loopne
inc
ds
pop
adc
mov
jecxz
sbb
add
xchg
roll
cmp
leave
or
sub
jge
aaa
cmp
jb
in
mov
sti
sbb
jg
dec
call
sbb
clc
pop
loop
xchg
hlt
es
imul
bound
push
cmpsb
movb
add
push
pop
cli
popa
mov
in
repnz
or
in
mov
aas
fimull
jg
imul
leave
mov
mov
pusha
test
fdivrl
sbb
pushf
push
loopne
lcall
mov
sar
stos
lods
pop
ds
lods
push
scas
xor
cwtd
pop
test
mov
jmp
pop
jnp
test
test
push
dec
fldl
lret
cmpsb
mov
add
push
bound
stc
sahf
sbb
shrb
ss
mov
jl
xor
jp
adc
flds
adc
mov
pop
sahf
adc
pop
pop
jb
repnz
rcrb
fstpt
scas
mov
xlat
andl
xor
jo
hlt
imul
je
inc
add
clc
pop
dec
mov
inc
pop
testl
mov
mov
mov
sub
sub
jbe
out
sub
mov
dec
mov
cli
lea
dec
fdivr
aad
bound
out
lods
icebp
into
aam
inc
sbb
aad
leave
jmp
xchg
ss
and
adc
call
jnp
idivb
outsb
in
out
lret
jmp
xor
inc
out
push
xchg
imul
jle
fbstp
sbbb
push
and
lea
repz
push
cmp
mov
jb
jp
fdiv
add
sarl
pop
fsts
jns
dec
dec
jl
pop
aam
inc
js
jg
lcall
push
jg
mov
push
cli
pop
and
pushf
nop
push
pop
addr16
inc
mov
aaa
xchg
adc
jecxz
jl
mov
xor
mov
xchg
sbb
cmpsb
out
movsb
pop
cmp
es
ljmp
cli
pop
adc
mov
subb
cs
mov
xchg
pop
jecxz
scas
sbb
dec
sub
leave
cmpsb
ret
lret
vpmaxub
imul
cli
inc
mov
mov
mov
loopne
dec
and
arpl
outsl
pop
mov
rcrl
aam
mov
mov
mov
aam
add
leave
ret
inc
inc
lret
cld
mov
fwait
int
pop
sti
or
xchg
fsubrl
popa
jp
and
adc
ret
out
mov
repz
sbb
loope
sbb
adc
inc
jbe
mov
inc
dec
and
leave
jmp
mov
adc
cmpsb
in
adc
pop
clc
ds
insl
mov
daa
or
inc
lret
in
add
das
pushf
les
icebp
pop
xchg
sahf
repz
out
xorb
jns
icebp
cwtl
movsl
pop
pop
xor
dec
fsubrp
out
mov
push
out
lock
xchg
mov
or
fmull
sub
popa
inc
sub
mov
fstpl
fildll
jo
insb
xchg
adc
push
fsubp
pop
or
mov
cmp
insb
xor
sbb
or
jo
leave
cmpsb
add
xchg
jne
xor
lods
mov
into
shll
dec
dec
insb
in
popa
jne
dec
xchg
push
xchg
jge
fstpl
mov
cmovnp
mov
push
rorb
pop
ficoms
xchg
push
lcall
adc
adc
pop
fnsave
leave
test
xor
decb
adc
xchg
cmp
push
mov
shrb
lcall
adc
out
test
and
addb
cmp
pusha
xor
adc
out
pop
mov
pop
cmpsl
pop
sarb
cmp
mov
pop
cmpsb
add
loopne
int
mov
in
test
xchg
popa
adcb
dec
test
sbb
mov
fdiv
cwtl
sbb
jge
cmc
aaa
jnp
inc
repz
in
inc
add
int
inc
dec
mov
mov
aam
sbb
mov
push
nop
xchg
pop
pop
in
lahf
and
enter
sti
sti
jp
decl
out
pop
dec
cmp
stos
cli
stos
inc
mov
sub
movsl
std
jbe
mov
pushf
notl
loop
movsb
adc
in
loop
or
out
inc
or
sbb
pop
in
ficomps
mov
jo
add
mov
jb
pusha
push
mov
add
adc
jl
loope
and
iret
ror
xlat
and
testl
cpuid
inc
xchg
in
sti
sbb
test
push
push
lret
dec
out
dec
mov
push
testl
dec
push
aas
xlat
cltd
adc
ror
push
inc
js
mov
xlat
decb
adc
gs
push
gs
mov
fistpll
ret
jg
test
add
in
mov
push
stos
iret
mov
iret
mov
in
pushf
or
mov
daa
jo
mov
jge
outsl
jo
std
jno
inc
fwait
push
mov
lret
hlt
inc
dec
dec
adc
out
inc
mov
test
divl
mov
inc
mov
and
mov
rcrb
lcall
mov
pop
cmp
negl
ljmp
imul
mov
sub
js
lods
clc
rolb
sub
jle
popa
jns
dec
lods
add
jno
divb
popa
js
iret
jp
jmp
mov
xchg
mov
pop
sub
adc
or
mov
push
std
inc
inc
xchg
jl
stos
leave
lods
xchg
xor
sub
ds
push
pop
jle
push
sbb
lea
pop
xchg
pop
pop
testb
dec
mov
add
sub
clc
loop
and
push
out
mov
out
sub
es
aas
xor
xchg
ds
mov
subb
fiadds
sub
test
std
push
jb
push
imul
or
dec
test
insw
sbb
rcrb
push
fistps
mov
andb
outsl
in
mov
push
dec
dec
or
dec
sub
inc
pop
divl
adc
popf
mov
push
or
sub
into
and
loope
dec
loopne
insb
add
movsl
or
int
les
mov
and
adc
xchg
ljmp
sub
mov
ret
dec
mov
je
jp
cli
xor
jnp
fcmovnbe
fwait
test
rcrl
push
push
lahf
into
dec
pop
jecxz
jb
cmp
clc
sti
dec
pop
dec
add
into
add
xchg
in
mov
mov
cmp
mov
fisttpl
and
push
and
out
js
mov
sbb
fdiv
rcrl
loopne
push
inc
loope
jae
fstl
neg
out
jmp
pop
mov
inc
hlt
lcall
dec
dec
push
mov
cwtl
inc
sbb
mov
sbb
cltd
lock
dec
js
iret
xchg
xchg
std
test
adc
outsl
push
pushf
adc
ret
add
shl
cmp
add
xor
sbb
ficoms
inc
mov
dec
mov
inc
dec
iret
loopne
enter
loope
fs
mov
push
je
cmp
mov
sub
xchg
inc
push
xchg
cmpsb
mov
lcall
ss
pop
sbb
inc
and
mov
stc
fnstcw
scas
push
lock
mov
mov
dec
sti
jo
adc
pop
mov
lret
fisubrs
mov
mov
push
out
popf
mov
jge
inc
sbbl
outsb
inc
loope
fisttps
dec
fs
fwait
lret
mov
sub
je
xor
cmpsl
cmpl
ds
sbb
cmc
push
scas
lret
sti
hlt
into
pop
mov
out
cs
aam
cmp
popa
mov
in
mov
aad
add
xchg
or
mov
lds
shlw
or
pop
faddp
das
push
ds
dec
pop
orl
adc
neg
cli
push
fs
dec
push
fdivs
xlat
mov
xor
ret
insl
bnd
add
add
sbb
loope
cs
sub
mov
in
sub
pop
push
js
sbb
pop
sub
in
xlat
insb
mov
cmpsl
mov
cmp
mov
pop
xchg
jbe
jnp
xlat
adc
jnp
fstp
cli
sarb
test
push
orl
into
popl
mov
lea
std
sub
xchg
scas
mov
inc
out
popa
loope
notl
or
mov
stc
push
sbb
mov
cltd
mov
sub
add
mov
dec
cli
inc
jle
jmp
scas
loope
lds
xor
jp
outsb
enter
jmp
out
dec
push
imul
sbb
mov
or
movsl
cmp
fildll
push
and
in
les
int
pop
cmp
add
jae
ljmp
sbb
sbb
ret
lock
insb
xor
jo
mov
fbld
enter
mov
pusha
insb
jne
fiadds
bound
pop
pop
push
xchg
into
iret
jmp
popa
sbb
cmp
adc
cmpsl
xor
ds
or
lcall
iret
lahf
subl
jp
jmp
test
lods
gs
enter
sub
fsubr
mov
mov
popf
adc
pop
loope
or
jnp
sbb
push
xor
lods
or
pop
sub
inc
out
jbe
repnz
and
push
mov
push
sahf
imul
cwtl
adc
xchg
outsl
lcall
pushf
aad
pusha
popf
jge
xor
or
dec
out
mov
xchg
sbb
mov
dec
or
imul
dec
out
fnstcw
mov
sbb
pop
rorb
mov
fisubl
shlw
outsb
sub
lods
inc
and
pusha
mov
or
scas
push
lret
jne
add
stos
stc
cmpsl
inc
into
push
fcmovne
lods
sbb
imul
sub
push
movsb
push
pop
movsb
rcrb
arpl
sbb
subb
jle
adc
lds
cli
clc
cmp
cwtl
int3
mov
sbb
fwait
lock
or
in
jmp
dec
sti
lea
sbb
mov
mov
jae
pop
pop
outsl
inc
mov
sahf
int
cmpsl
aad
sub
js
pushf
adc
inc
rol
repz
and
fisttps
in
rclb
xchg
shlb
ja
jbe
inc
jecxz
inc
cltd
mov
mov
fstpt
dec
inc
into
out
movsl
and
loop
or
pop
rcl
sub
dec
test
mov
mov
cmp
imul
loop
jmp
inc
dec
in
cli
imul
in
pop
xor
xchg
loope
rcrl
xchg
lret
std
inc
mov
or
jp
idivl
gs
add
cli
lret
test
jge
and
mov
dec
fistps
xlat
fwait
dec
scas
ljmp
push
popf
ljmp
xor
test
rolb
lods
add
sbb
sub
bound
rcll
xlat
movsb
fistl
add
call
sub
out
sahf
xchg
pushf
inc
mov
jb
mov
push
add
lret
filds
jecxz
jecxz
cmp
rcll
mov
testb
sub
aad
sbb
cmpsl
popa
xorl
cmp
stos
inc
lret
cmp
iret
ss
and
scas
jno
icebp
call
pushf
in
movsl
push
aad
aaa
dec
iret
push
ficompl
or
inc
and
into
fsubrs
outsl
cmp
xor
fs
call
ja
cmc
jne
dec
out
test
js
xlat
jmp
daa
outsb
xor
add
inc
pmullw
test
sbb
rcrl
ret
add
cmp
ds
and
pop
inc
out
sahf
cmp
jb
inc
insb
lea
iret
jge
jnp
arpl
xchg
out
lret
shr
scas
jg
or
xchg
jmp
push
adc
inc
push
faddl
das
rcrb
pop
pop
xor
enter
rcrb
lock
jle
or
jne
xchg
push
and
pop
gs
or
adc
fmul
mov
xor
mov
shrb
stos
or
mov
popa
fldl
mov
in
mov
xchg
jb
ds
mov
pop
mov
out
cmpb
xor
inc
std
hlt
or
mov
out
xchg
cmp
fs
xor
push
je
push
movsl
xchg
xchg
and
xchg
test
jg
in
jge
fstpt
fldcw
dec
cvtps2pi
leave
pop
lret
test
push
pop
jg
jp
leave
daa
out
inc
jmp
pop
negl
xor
sti
inc
mov
inc
mulb
loopne
xchg
mov
inc
aaa
mov
xor
sahf
repz
jo
std
and
daa
pop
add
add
xor
mov
jo
lods
lea
push
scas
inc
popa
test
jp
outsl
adc
dec
cmc
shl
mov
pop
sahf
mov
lahf
adc
fstpt
mov
adc
push
push
ret
add
mov
add
inc
jg
adc
or
push
add
add
gs
idivl
enter
push
push
jbe
out
sbb
push
mov
pop
cltd
cmp
adc
pop
inc
or
dec
std
push
xchg
push
pop
cmpsb
testb
and
xchg
dec
sahf
mov
fisubrs
and
roll
fwait
das
add
ds
xchg
fmuls
stos
push
xor
push
xor
mov
cmpsb
dec
dec
sub
bound
sbb
in
ja
pushf
test
jns
lahf
sub
xor
ror
xchg
sbb
cmp
cmpb
and
mov
inc
icebp
mov
xor
repnz
inc
and
adc
mov
push
jnp
lods
mov
xor
or
in
add
jecxz
sahf
aam
xchg
pop
dec
pop
push
movsl
idivb
movsb
cmc
dec
fwait
sahf
adcl
sub
push
inc
aam
leave
mov
ret
sub
pop
loope
popf
pop
inc
push
xchg
jbe
aaa
ret
and
sub
mov
and
xchg
dec
sbb
and
xchg
pusha
jne
insl
int3
pop
push
rorb
call
sbb
repnz
cwtl
xchg
bound
xchg
adc
jns
das
leave
lods
mov
loop
inc
cmp
in
push
inc
sub
jae
cmp
rorb
mov
lods
dec
or
lahf
std
or
scas
sbb
jnp
mov
mov
sub
xor
xchg
fdivl
pop
iret
leave
dec
add
ficoms
pop
jne
ds
mov
xor
movsb
mov
cmp
jo
inc
pop
out
sub
js
js
pop
icebp
insb
out
sub
in
cmp
stos
mov
add
fs
dec
and
leave
xorb
xchg
jb
pop
std
idivl
mov
jno
mov
lret
or
cltd
aas
arpl
stos
jecxz
and
repz
xchg
mul
sub
mov
xchg
icebp
cwtl
push
push
cltd
bnd
cmpsl
lret
push
push
push
adc
rorb
insl
push
push
xchg
adc
stos
scas
cmpb
test
or
repz
sbb
push
adc
outsb
pop
jne
sub
ss
das
sub
call
mov
fnstsw
xlat
test
int
pop
cld
mov
negl
sbb
mov
dec
jge
pop
sub
stc
mov
fisttpl
cltd
adcb
call
nop
ds
shr
fcoml
lds
pop
dec
cltd
mov
xchg
mov
adc
pop
mov
stos
lret
stos
add
push
popa
aam
scas
das
into
bnd
sub
lret
xchg
or
imul
push
lods
pop
adc
xlat
outsb
dec
and
out
in
rcll
repnz
jnp
pop
sbb
jne
jb
bound
add
arpl
std
ljmp
or
ficompl
aad
ret
inc
push
pop
push
mov
xchg
vmovups
xor
mov
daa
fs
insb
xlat
mov
cmpsb
fldenv
fidivs
or
push
data16
lock
fildl
push
inc
xor
fwait
adc
cwtl
ror
mov
and
xchg
popf
adc
jecxz
nop
sbb
jb
mov
xor
aam
mov
lret
cmp
popf
jmp
stc
js
push
in
pop
add
stos
mov
notl
sub
cmpsl
outsb
cmpsb
mov
rcrl
es
add
sub
xchg
cmpsl
cltd
andb
push
nop
idivl
cmpsb
and
push
ds
nop
mov
lds
leave
nop
sub
cmp
mov
add
popa
pusha
xlat
out
push
inc
pop
mov
std
sbb
xor
outsl
jno
xor
or
test
lds
das
pop
xor
sbb
loope
mov
fmuls
loope
stos
out
add
add
out
out
pop
jp
adc
fdiv
das
mov
popf
jns
sub
test
lods
pop
push
pop
push
in
inc
push
loopne
out
mov
lock
mov
test
jo
mov
pusha
jmp
adc
cmp
out
lods
fcomps
dec
and
cmp
jb
cmp
add
shll
adc
mov
cld
les
js
push
into
mov
pop
cltd
lods
pop
rol
ficoms
and
rcrl
loop
push
pop
stos
mov
leave
xchg
xor
push
dec
clc
xchg
pop
mov
cmpsb
add
lahf
adcl
mov
clc
mov
inc
push
outsl
aam
repnz
shll
arpl
mov
sbb
iret
mov
adc
fsubl
stos
add
mov
out
adc
jno
push
lods
icebp
cwtl
mov
or
cmp
into
add
mov
mov
jae
push
out
pop
push
or
into
sahf
jmp
aas
loopw
sub
dec
inc
into
add
cmpsl
repz
adc
fiadds
pop
xor
mov
mov
dec
add
sahf
test
imul
ljmp
lret
test
add
inc
jmp
jle
xchg
push
in
sti
mov
ja
cli
mov
mov
pop
jge
jbe
jbe
inc
or
stos
sarb
js
pop
cli
lds
mov
ds
fisubrs
xchg
pop
clc
insl
push
sub
jo
pop
fwait
mov
daa
lock
movsl
mov
imul
xchg
add
int
and
iret
pop
je
ja
mov
sti
pop
xor
cmc
jp
push
mov
jmp
adc
mov
popl
pop
bnd
nop
test
js
int
lea
pop
mov
iret
rcrl
cltd
cmc
xor
add
push
insl
mov
dec
in
testb
mov
in
push
pop
add
jbe
mov
iret
mov
popa
lds
sub
sub
xchg
sub
hlt
test
add
ljmp
notb
shl
cltd
and
xor
xchg
inc
mov
outsb
jecxz
inc
stos
cmc
call
add
jp
add
pusha
or
pop
and
mov
pop
lods
lods
insl
cwtl
addr16
fs
sub
xchg
sub
jg
xchg
mov
cmpsl
sbb
pop
in
sbb
mov
fsubl
jmp
cmp
mov
insb
inc
outsb
xchg
sub
jg
mov
mov
mov
mov
adc
push
fidivl
roll
int3
gs
fimull
dec
data16
test
clc
mov
push
dec
mov
add
hlt
add
and
jno
ds
push
xchg
ss
insb
call
xchg
push
popa
movsb
int3
or
xor
sbb
ja
mov
add
inc
mov
push
enter
push
imul
lret
std
pop
or
lock
xchg
xor
mov
imul
in
mov
cmp
icebp
or
sbb
in
out
dec
filds
sub
jle
add
xor
out
mov
or
fstl
cmpsb
popa
stos
or
ror
mov
sub
xchg
mov
cmp
mov
adc
and
in
imul
lret
test
out
adc
and
push
fucom
mov
mov
hlt
add
jno
push
jle
icebp
sub
pop
ret
decl
test
fisttpl
mov
and
pop
fiadds
popl
inc
repz
inc
pop
mov
adc
inc
fdivrl
cli
ja
das
clc
sub
ffreep
or
sbb
jle
or
repz
add
xchg
lcall
lcall
xchg
push
pop
adc
clc
loop
cld
mov
loop
leave
sub
pop
lds
mov
cmpsl
cld
sbb
or
roll
cmp
mov
pop
or
mov
dec
xchg
aad
shrb
push
loop
adc
mov
inc
addl
outsl
xchg
jecxz
mov
inc
es
mov
clc
pop
loopne
iret
xorb
ljmp
jnp
push
pop
ret
je
fists
sbb
mov
sbb
dec
test
out
idivl
cld
mov
pop
mov
mov
rclb
and
sti
xor
in
adc
jmp
and
sahf
mov
or
push
xor
out
leave
adc
mov
fadds
sahf
sti
aas
xchg
in
add
xor
bndldx
gs
jmp
mov
das
popf
ss
roll
addb
js
pop
dec
rclb
hlt
pushf
adc
fucomi
mov
adc
mov
add
aam
imul
or
jp
jl
jle
test
xchg
sahf
mov
popa
pushf
push
push
aad
mov
rolb
pop
aad
popa
jb
leave
popa
adc
sbb
ss
inc
ret
and
or
mov
dec
out
mov
stc
mov
mov
xchg
into
xchg
in
in
ret
sbb
push
addl
xchg
mov
sarb
xor
lods
dec
outsb
and
adc
cmpsl
jne
xor
notl
jg
cmpsl
adc
cmp
mov
adc
in
sub
push
mov
out
mov
bswap
mov
or
js
inc
js
push
add
mov
push
icebp
pop
add
movsl
lock
mov
push
inc
cmpsl
cmovg
lods
out
xchg
lcall
mov
es
clc
ljmp
ss
hlt
test
dec
ljmp
cmpsb
push
sub
fisttps
pop
add
dec
idivb
rorb
aam
ret
lods
and
lret
and
scas
inc
aaa
jo
dec
or
sub
insb
push
enter
jge
pop
pushf
adc
or
mov
lea
imul
xor
xorb
jo
int
sbb
rcrb
add
add
int
lret
inc
repz
mov
loope
in
or
test
scas
lods
cmovbe
je
popa
adc
cmp
clc
sahf
adcb
sbb
mov
mov
jle
mov
pop
cmpsl
xchg
sbb
aad
inc
ret
mov
lcall
mov
xor
and
push
jno
aam
cmp
aaa
sarl
xchg
xor
popf
push
inc
xor
mov
and
mov
test
aaa
popf
sub
xchg
pop
outsb
push
jne
ljmp
mov
jns
jecxz,pt
int3
pop
loop
gs
rolb
test
imul
dec
add
movsb
sbb
inc
repnz
paddb
cmpsl
add
mov
sub
and
ds
cmp
mov
std
je
mov
testl
neg
stos
xor
js
xor
fbld
push
std
lock
push
or
ljmp
icebp
xchg
je
push
bound
pusha
lock
leave
add
mov
jl
mov
jno
jp
xor
or
mov
mov
ret
dec
and
xchg
out
outsb
push
dec
mov
sbb
xor
pop
es
test
aad
lcall
xlat
loopne
inc
daa
pop
mov
ret
lahf
lods
mov
les
cld
inc
mov
sbb
dec
in
push
pop
lea
sbb
push
dec
test
cld
es
sbb
das
nop
aam
push
fs
inc
and
dec
or
aam
jmp
cli
mov
dec
aam
and
dec
push
nop
ja
call
loop
add
xchg
sarb
mov
insl
push
push
test
rcr
dec
mov
xchg
nop
jmp
xchg
sub
push
dec
pushf
mov
mov
mov
dec
cmp
mov
verr
popa
pop
xchg
xchg
fs
sub
stos
cmp
int3
xlat
sub
jno
sub
and
pop
jo
loop
cwtl
pop
sarb
cld
xchg
mov
imul
outsl
sbb
sub
xor
add
and
enter
scas
or
out
mov
rolb
and
and
leave
stos
dec
add
iret
and
sub
adc
dec
nop
dec
mov
or
cltd
inc
std
jo
push
sbb
mov
or
jle
cmp
cs
push
js
sub
sub
pop
jns
orl
add
push
fists
xchg
mov
dec
adc
inc
mov
fs
imul
xor
xor
mov
add
cld
les
out
pop
cwtl
das
aaa
push
lds
sbb
inc
iret
out
jle
mov
cltd
xchg
bound
scas
xlat
jl
rolb
out
sub
jb
inc
lock
xsaves
mov
and
jg
pop
out
sbb
jl
bound
mov
mov
notb
and
in
xor
add
or
scas
cmp
xor
push
sbb
mov
mov
in
testb
test
cmpsl
gs
mov
sbb
adc
ficomps
repz
loopne
rolb
call
loop
xor
je
pop
push
pop
inc
bound
mov
sbb
testl
fnstenv
dec
fsubrs
sub
pop
and
ds
insb
xorb
push
inc
sbb
xchg
clc
push
push
or
negb
mov
jle
mov
and
jge
enter
test
add
clc
test
sub
xlat
pop
inc
adc
sub
or
or
call
push
repz
push
mov
lds
push
outsb
mov
push
in
ljmp
insb
mov
mov
cwtl
cmp
sahf
mov
jmp
aad
lods
pop
leave
and
icebp
call
sti
lds
into
in
pop
pushf
mov
push
jne
adc
push
out
sbb
xchg
out
cmpsb
sub
dec
insl
outsl
and
cmp
popf
sbb
cltd
scas
pop
fstl
je
mov
ja
and
push
cmp
aam
inc
aam
das
int3
xchg
mov
orb
push
sub
and
cmp
int
je
push
xlat
pusha
movsb
sub
mov
jg
fnstsw
sub
cli
push
or
loop
cmpsb
aas
mov
mov
in
mov
sub
stos
popa
sbb
inc
push
jno
test
popa
out
mov
push
rorl
jae
or
jne
mov
lods
mov
ret
jb
xor
fimull
mov
test
ror
je
mov
pop
aas
mov
stos
or
test
scas
test
pop
mov
xor
ja
jbe
fwait
nop
mov
pop
lds
jp
aas
push
mov
lods
shll
sub
mov
mov
or
jmp
pop
push
int3
aas
punpckhbw
mov
stos
insb
lret
icebp
push
pop
stc
clc
inc
ret
daa
inc
or
lret
aaa
inc
ja
pop
ret
pop
data16
xor
sbb
jnp
add
loopne
pop
xor
jbe
pop
and
lcall
and
insl
push
iret
out
dec
lea
sbb
xor
sub
nop
xor
push
sbb
shlb
xchg
or
xchg
mov
mov
adc
lret
lret
push
dec
mov
jle
push
test
inc
call
mov
add
mov
sbb
in
fstpt
pop
mov
setno
andl
xchg
cltd
push
scas
daa
cmp
clc
sbb
jbe
imul
jne
mov
xchg
mov
add
add
sub
pop
xchg
xor
pop
pop
sbb
ljmp
or
popf
mov
cmp
push
mov
dec
xchg
fucomi
into
and
stos
mov
mov
shr
imul
jmp
push
fistps
jne
outsl
xchg
arpl
xchg
xor
inc
aas
out
stc
icebp
aas
lret
xchg
pop
out
test
pushf
jecxz
fsubr
or
or
fildl
mov
adc
mov
jg
cmp
iret
jbe
rolb
aas
in
cmp
mov
cmpsb
lock
sbb
mov
lahf
jecxz
fcompl
add
sti
pop
mov
dec
mov
adc
sbb
inc
jbe
mov
mov
clc
lds
arpl
dec
mov
repz
loopne
jae
xor
adc
push
out
insb
iret
xchg
jns
mov
or
clc
arpl
adcb
dec
sub
mov
stos
xor
jbe
out
sbb
push
jns
je
adc
mov
int
aas
rcrb
mov
dec
in
sqrtps
js
fldenv
pop
aas
mov
loope
cltd
adc
inc
mov
sub
mov
mov
test
lods
push
mov
test
or
pop
aad
jae
fs
shlb
lods
loopne
xor
int
push
int
jle
adc
inc
out
push
xchg
jno
and
xor
mov
mov
xchg
ret
cmpsl
mov
dec
out
push
sahf
loope
jb
lods
mov
push
repz
imul
pop
mov
inc
cmp
data16
in
leave
rcl
sbb
test
push
mov
test
cs
pop
jno,pn
pushf
cmp
gs
dec
mov
call
jp
mov
shrl
insb
push
sbb
or
or
cmp
clc
mov
pop
shlb
inc
dec
pop
sbb
mov
idivl
push
es
rclb
jae
mov
mov
mov
inc
sub
rcll
nop
stc
movsl
stc
outsl
loopne
inc
and
imul
pop
fldl
mov
out
nop
orb
mov
mov
insl
mov
sarb
in
jecxz
push
push
fidivrs
icebp
call
ja
add
cmp
lds
mov
xor
repz
sub
test
shr
dec
mov
int
mov
pop
add
xor
mov
je
sub
sub
push
add
or
orl
ret
in
in
loope
dec
ja
xor
xlat
call
jge
xor
mov
and
pop
mov
and
jne
dec
into
ret
in
nop
mov
sti
sub
je
fists
jp
mov
dec
jns
dec
mov
out
pop
int3
imul
adc
popa
xor
dec
push
sub
lahf
out
cltd
out
shrl
in
push
push
or
xchg
sbb
sbb
push
in
jne
pushf
xchg
xchg
mov
inc
jb
pushf
xor
cmp
xor
bound
pop
cltd
divb
hlt
mov
and
jmp
inc
and
ror
nop
lods
sbb
push
popf
lds
and
cmp
imul
xlat
and
and
and
lret
shrb
mov
mov
sbb
add
add
add
cmp
and
ss
fmulp
fistpl
dec
dec
gs
push
lds
adc
xlat
pop
mov
dec
test
cwtl
jno
test
das
in
imul
pop
cmc
jmp
xchg
push
incb
insb
sbb
test
aad
jg
fldenv
mov
fcmovnbe
aad
jle
data16
fwait
jno
push
dec
fcmovbe
arpl
arpl
push
inc
std
jmp
andb
adc
pusha
call
pop
popf
pushf
call
adc
sub
mov
inc
cmp
push
jb
jae
mov
mov
and
test
lds
je
xor
js
icebp
xor
mov
pop
xchg
aaa
push
jp
inc
rcrl
or
or
cmp
dec
in
loop
jb
out
jmp
lds
xchg
cmp
xchg
sarl
arpl
pushf
or
mov
mov
aad
scas
data16
jo
addl
jb
cmc
cmp
cmp
out
adc
jge
and
in
rcll
inc
arpl
xor
xchg
mov
sarb
sub
mov
ja
pop
out
push
sub
imul
jo
inc
mov
pop
ret
cmp
stc
out
pop
push
insl
xchg
lcall
inc
bound
xchg
jno
test
mov
iret
lods
fwait
jecxz
fsubrl
inc
pop
push
xchg
faddl
inc
push
loop
mov
xchg
mov
shr
mov
loope
push
cld
xchg
dec
divb
inc
sub
rcl
mov
scas
fistps
cmp
scas
push
es
pop
mov
sti
aas
mov
out
add
cmpsl
hlt
xchg
mov
xor
notb
je
pand
lock
and
xor
lea
add
dec
pop
adc
icebp
jle
and
sti
mov
sub
repnz
mov
mov
fisttpll
jbe
addb
inc
mov
mov
mov
mov
jle
inc
gs
pslld
pop
fsubrp
je
add
aaa
and
xchg
push
jnp
jge
sub
pop
scas
int
xchg
fwait
pop
dec
aas
in
jge
insl
mov
loope
jnp
xchg
int3
sub
jge
xchg
mov
test
mov
out
add
push
leave
jnp
pop
pop
add
mov
mov
rorb
aam
pop
aaa
cmp
ja
insb
push
dec
sbb
pop
mov
fcomi
repnz
in
std
xchg
mov
adc
pop
lods
cmp
cmp
inc
cs
pop
stos
sbb
inc
sub
cmc
inc
push
mov
aad
aam
jecxz
hlt
lret
jno
stos
stc
xor
orb
mov
jno
aam
rorb
sub
out
mov
sahf
inc
mov
les
lock
jp
push
jbe
cli
cmp
cld
les
sub
movsl
jp
xlat
xchg
sbb
dec
into
outsl
adc
push
nop
imul
and
testl
xchg
mov
jo
ss
sbbb
fwait
shl
in
dec
sahf
push
iret
ljmp
pop
and
ja
jo
cwtl
shl
mov
inc
in
sub
iret
daa
pop
jno
jbe
cld
in
push
lea
dec
jge
sti
mov
pop
pop
xor
rol
jns
mov
jae
mov
mov
sbb
cmp
xchg
idivb
scas
es
cmp
fmuls
inc
push
out
or
das
or
mov
mov
push
test
imul
out
inc
sub
dec
stc
fsub
fisubrs
dec
lcall
add
jge
cld
xacquire
daa
hlt
rorb
pop
mov
mov
std
pop
cmp
incl
hlt
loop
xchg
shrl
xchg
xchg
std
sahf
and
push
jno
inc
push
mov
pop
fsubs
out
mov
mov
adcb
bnd
or
in
in
dec
cmp
inc
mov
xchg
pop
pop
mov
ss
inc
out
test
sar
dec
fistl
mov
jg
sub
pop
rolb
les
pusha
sub
push
jecxz
daa
lea
daa
add
je
mov
aam
popa
out
sbb
cltd
outsl
lods
test
inc
mov
xor
mov
call
cmp
xchg
xor
mov
dec
push
or
dec
cwtl
scas
pop
sbb
mov
cltd
stos
pop
fistpll
enter
and
push
jp
je
mov
lock
mov
jb
popa
xor
or
in
mov
mov
xchg
pop
mov
rclb
push
adcb
gs
pop
push
push
lcall
idivl
mov
xor
out
xor
pop
loopne
and
jp
inc
cmp
sti
in
dec
leave
xchg
mov
arpl
jp
adc
lret
das
add
pop
jo
repz
lret
test
idivb
fnstenv
repz
ret
out
shlb
or
fadd
cmp
std
loope
frstor
ds
dec
fmuls
outsl
pop
and
and
ljmp
cltd
jno,pt
or
push
pop
div
inc
in
arpl
mov
mov
cmpsb
or
or
test
shlb
mov
sbb
repz
leave
push
cmp
scas
clc
mov
and
mov
cld
dec
lock
or
lahf
fwait
inc
cmp
jbe
movsb
cmp
cmc
scas
fucomip
in
fildll
test
cmp
push
pop
cmpsl
lods
jb
mov
into
mov
or
and
cmp
imul
pop
and
push
mov
in
jg
loop
sbbl
xchg
ss
xor
decl
call
push
cmpsb
mov
add
inc
imul
xchg
rcrb
fs
int
push
pusha
fldt
fstp
inc
xorl
pop
sahf
out
xchg
push
xchg
jge
paddsb
xchg
xor
push
cmp
jmp
cmpsb
add
imul
orb
gs
icebp
pop
cmp
cs
clc
push
ja
ljmp
pop
mov
iret
lods
cld
jg
ret
imul
fcompl
jbe
jmp
pushf
scas
adc
roll
mov
iret
push
and
adc
push
dec
xor
dec
into
mov
ss
mov
rcll
js
orl
jmp
scas
in
roll
int3
adc
aaa
negl
cmp
movsl
mov
adc
and
inc
div
adcl
insl
mov
aad
enter
jl
jg
jne
cmp
and
pop
fsubrs
lods
mov
repnz
push
test
add
roll
popf
xor
lds
jge
or
inc
lea
int
or
push
in
and
iret
leave
cmp
rol
inc
lahf
movsl
mov
pop
xchg
imul
mov
push
xchg
lret
lret
fsubrl
scas
mov
mov
ret
xchg
inc
mov
push
push
pop
shrb
pushf
pop
or
mov
in
gs
in
mov
mov
xor
fwait
repnz
je
loope
mov
ret
adc
arpl
adc
dec
movsl
mov
xchg
repnz
xor
mov
push
sbbb
stos
mull
jg
gs
lsl
rolb
std
jae
loope
inc
jns
cmp
sbb
hlt
pop
mov
and
sub
push
sub
out
faddl
cmp
and
icebp
popa
mov
xor
inc
das
jne
in
lock
or
adc
arpl
mov
xchg
xchg
mov
or
aam
test
bnd
jle
movsb
jle
call
and
data16
xchg
dec
xchg
ja
xor
jmp
lods
outsl
xor
scas
mov
ds
lods
inc
int
sub
mov
aaa
mov
lods
ss
addr16
mov
jmp
mov
cmp
add
fmuls
insl
or
sbb
mov
cld
int3
xchg
jbe
lret
lods
xchg
clc
test
fucomip
or
stos
stos
aam
sbb
insl
int
and
les
out
pop
int
dec
mov
mov
xchg
push
out
mov
iret
rorl
fsubs
or
fwait
in
out
sub
fdivl
pushf
mov
test
jmp
or
mov
cmp
xchg
mov
test
loop
in
stc
jmp
sub
mov
mov
mov
cmp
xchg
orb
sub
stos
stos
je
push
mov
add
xchg
jmp
jo
add
xchg
xor
jb
xor
loope
inc
or
in
inc
lods
test
dec
sbb
push
int
lods
adc
das
inc
leave
add
adc
into
outsb
cs
mov
lock
repnz
xchg
dec
sub
mov
cmp
notl
sub
sub
shl
sub
lock
std
inc
adc
arpl
mov
and
and
les
stos
jp
cmpsb
lea
sbb
imul
jl
pop
push
movsb
xchg
jae
out
lds
lahf
add
dec
cmp
lock
xchg
jge
inc
enter
repnz
xchg
sub
in
popf
jnp
jle
into
ret
push
movsl
sti
fsts
xor
sbb
xlat
xlat
cltd
daa
jbe
jmp
lods
mov
fimuls
mov
test
mov
sbb
and
pop
sbb
rorl
pop
fisttpl
sbb
ja
xlat
fcoml
sbb
push
ret
xchg
push
cli
xchg
adc
es
sahf
or
fisttpll
test
sub
jmp
mov
std
pop
sbb
mov
movl
jno
and
je
mov
inc
cs
fstpt
or
xor
jnp
jmp
outsb
inc
sar
push
aas
fiadds
jp
jge
inc
jl
cmp
rorb
jnp
cmpsl
cmp
dec
cmp
dec
sti
cmp
loop
das
leave
sub
scas
std
hlt
rorl
xlat
jle
cmp
addr16
movsl
mov
sub
mov
jns
mov
mov
pop
and
mov
and
sub
add
outsb
adc
or
jmp
sarl
jbe
inc
and
in
inc
out
mov
and
fnstenv
mov
xchg
pop
out
push
es
pop
lea
lret
gs
mov
mov
dec
js
repnz
bound
scas
fwait
not
push
cltd
out
shlb
mov
data16
cmpsl
sbb
xor
scas
add
mov
arpl
inc
cmp
jge
stc
xor
bound
push
cmpsl
mov
test
aad
sarl
inc
pushf
sti
les
aas
cmc
jle
addr16
xor
xchg
pop
dec
adc
jae
jbe
and
bound
push
pop
aam
mov
or
mov
loop
jecxz
inc
ss
or
outsl
push
add
xacquire
andb
xchg
dec
pop
xchg
les
arpl
mov
add
or
pop
int
lods
and
fstl
cmp
ds
sarl
push
push
lods
pop
adc
add
icebp
roll
cs
sbb
std
imulb
loopne
mov
iret
jns
and
and
dec
jecxz
adc
sbbl
bound
push
mov
fld
dec
mov
mov
enter
in
arpl
je
or
xchg
inc
repz
popf
mov
ret
cmp
xor
cld
xor
int
nop
repnz
cmp
pop
insb
test
mulb
pop
xchg
mov
ror
or
jo
popf
push
and
mov
cmpsb
mov
inc
js
pushf
add
cmc
sbb
xchg
test
cmpsl
outsb
jb
mov
jg
mov
scas
sub
sar
mov
fs
testb
jl
cmpsb
lahf
fwait
cmpsl
fsubl
addb
xchg
inc
jecxz
mov
push
push
lock
dec
cwtl
mov
movsb
addb
add
inc
popf
enter
jno
stos
pop
cmp
cli
push
popa
mov
push
std
push
xchg
push
dec
adc
and
or
fdivp
repz
aam
pushf
push
cmp
aaa
notl
dec
andl
mov
repnz
push
mov
xor
add
cmp
add
sub
cmpsl
out
and
bound
test
paddd
test
pop
test
and
leave
cmpsl
shll
add
cmp
movsb
pop
pop
xchg
pop
inc
rcrl
mov
pop
sti
imul
mov
mov
iret
fcomip
fisttpl
pushf
in
call
in
dec
mov
adc
idivb
inc
adc
mov
jmp
mov
movsb
jbe
lcall
jnp
imul
insl
xlat
jg
or
xorb
push
dec
js
push
ret
cwtl
and
mov
shlb
lahf
call
sub
pop
sub
addr16
test
jno
adc
add
add
cmp
js
lea
mov
rorb
pop
xchg
xchg
je
lret
pusha
mov
and
divl
inc
pop
cmp
ret
sti
push
dec
xor
cmp
mov
mov
sub
rolb
xor
xchg
lret
push
lahf
cmpsl
mov
push
daa
lods
xchg
adc
addl
jmp
repnz
imul
and
cli
sbb
ss
adc
les
daa
push
or
insb
in
jge
outsb
jl
je
xor
arpl
dec
push
fucomi
dec
iret
mov
pop
pop
fdivs
pusha
mov
push
xor
xor
jne
int3
sbb
xor
in
cli
pop
sbb
lds
inc
outsl
dec
mov
mov
add
xchg
ret
jg
je
jl
movsl
fisttps
dec
mov
das
dec
adc
jbe
fidivs
or
leave
clc
jl
mov
movsb
xlat
adc
cwtl
movsb
fisubs
jle
push
call
add
stc
data16
ljmp
loop
rorb
push
lds
push
jo
lret
outsl
add
or
pop
cltd
cmp
dec
jge
jp
inc
adc
xchg
push
in
scas
push
sbb
pushf
jmp
jmp
mov
xchg
cld
inc
insl
jno
testb
and
mov
push
xchg
lret
and
ja
pusha
into
scas
push
pop
or
pop
es
mov
push
dec
fdiv
pop
cmp
and
pop
push
sbb
leave
xor
mov
pop
pushf
ret
jnp
or
jb
fimuls
mov
in
rorb
cwtl
and
push
add
pop
stos
repnz
es
inc
fisttpll
call
out
fstps
out
inc
sbb
dec
je
cld
clc
int
stos
in
adc
dec
cmpsb
sbb
mov
mov
mov
movsb
sbb
repnz
pop
jecxz
jo
sarl
dec
iret
pusha
clc
mov
jle
test
fwait
sahf
mov
adc
or
ret
test
pop
jbe
push
adc
mov
pop
or
cs
jmp
es
hlt
shl
jnp
shlb
fiaddl
loope
mov
addl
inc
aas
out
repz
loop
push
lret
sub
fs
iret
xchg
enter
lds
loope
movsl
imul
not
les
xchg
lds
daa
rolb
lods
in
inc
js
fprem1
fwait
pop
jp
xchg
and
bound
dec
in
xor
and
inc
ljmp
enter
inc
ljmp
sti
and
loope
cmp
inc
jl
mov
mov
out
xchg
push
push
xchg
insl
ss
push
sbb
mov
ljmp
mov
mov
imul
xchg
dec
stos
outsl
test
inc
or
pop
or
roll
scas
cli
enter
fistpl
jecxz
popa
sub
and
in
rol
cmp
and
sbb
and
arpl
shr
adc
or
jbe
scas
sub
mov
mov
loope
inc
inc
adc
mov
pushf
jge
adc
adc
sbb
addr16
or
and
inc
xor
fists
dec
and
cmpsl
sbb
and
inc
sbb
inc
sub
mov
lock
inc
xchg
mov
pop
out
mov
jno
mov
in
push
adc
mov
into
xor
ja
ret
adc
mov
stc
cmp
jge
rcll
pop
sub
repnz
mov
jl
shll
jbe
into
push
jb
pop
lods
sti
cmp
imul
xchg
dec
lods
shrl
inc
inc
cmc
stc
je
mov
test
arpl
jns
ret
icebp
push
pop
in
cmp
jmp
push
loope
fbld
or
inc
mov
mov
pop
xor
popa
mov
into
xchg
pushw
test
sbb
testb
cmp
and
pop
adc
pushf
mov
jno
test
or
gs
or
shll
sbb
inc
lods
ss
sti
mov
mov
test
mov
adc
out
xchg
dec
loope
sbb
mov
dec
jbe
xor
scas
mov
imulb
pop
fistl
cmpl
cld
iret
out
jnp
pushf
stc
sub
ja
lods
sbb
test
or
lahf
xchg
enter
lock
adc
push
addb
xlat
and
mov
clc
cmpsb
lcall
push
test
aaa
jo
push
cs
mov
sbbb
mov
push
add
inc
int3
xor
in
dec
sbbb
push
inc
loopne
jns
pushf
push
add
repnz
pop
inc
es
pop
aas
aad
movsb
das
les
sbb
int3
mov
hlt
adc
mov
shr
ds
int3
dec
push
aas
rclb
cmc
icebp
fs
add
mov
add
clc
stos
shrl
rorl
sti
sub
push
js
xchg
psrad
push
mov
stos
inc
in
fdivs
leave
in
or
cmp
push
adc
jl
jp
add
push
adc
xor
ja
aas
faddl
idivb
sub
faddp
jge
mov
lret
cmp
mov
add
ss
jnp
sub
inc
push
mov
mov
repz
push
lods
push
daa
or
fildl
lods
test
adc
test
das
hlt
or
arpl
stc
mov
in
or
shlb
sub
cwtl
ret
or
das
push
inc
push
rcrl
mov
pop
stc
push
jmp
push
dec
xchg
test
xor
add
pop
pop
fimuls
xor
mov
pop
out
sbb
pop
lret
push
xor
push
repz
call
or
das
test
lret
jmp
dec
test
cltd
cmp
jg
xlat
enter
mov
mov
push
mov
out
mov
mov
dec
mov
jecxz
xor
incl
xchg
pushf
clc
faddp
sbb
sahf
imulb
data16
frstor
inc
jecxz
and
fdivrl
push
push
jp
loop
pop
adc
imul
shll
xchg
mov
lret
mov
das
xchg
ja
mov
cmc
pushf
lcall
outsb
nop
ret
dec
lret
pop
les
mov
mov
mov
sub
dec
aaa
mov
jmp
rorl
int3
adc
dec
and
jmp
stc
mov
lcall
sub
lods
mov
xorb
addr16
mov
lods
clc
insl
repz
test
xor
cli
inc
push
mov
gs
and
pop
inc
int3
aas
mov
jbe
daa
idiv
ds
jo
lret
fmull
xchg
out
ljmp
xor
xor
push
cmpsl
mov
lret
movsl
lods
xchg
xchg
lods
imul
lret
hlt
inc
sub
cltd
jo
ss
push
mov
outsl
daa
or
in
xchg
cmp
xchg
insb
sar
cmp
testb
add
movsb
aaa
pop
xchg
sub
push
jbe
mov
or
aaa
cmp
pop
outsl
inc
jns
xchg
mov
jmp
dec
inc
cli
sub
sbb
mov
jecxz
inc
jecxz
mov
pusha
aaa
pop
fistpll
inc
pop
scas
pop
gs
cmpsb
push
dec
cmp
jecxz
adc
dec
or
fisttps
push
push
mov
mov
xor
sarl
movsl
ds
inc
cwtl
adc
ljmp
adc
pushf
lcall
dec
ja
sub
in
jmp
stos
and
pop
fistpl
add
sbb
in
pop
ljmp
insl
test
mov
add
lea
aas
rorb
jmp
fwait
aas
push
pop
jge
ds
in
sub
arpl
sub
pop
imul
mov
mov
sahf
lret
mov
sub
mov
cmpl
pop
test
mov
adc
mov
aas
mov
movl
add
data16
ds
cli
lahf
sti
lahf
loopne
mov
xchg
adc
cli
jae
repnz
xor
mov
pop
adc
cmc
xchg
jge
das
fwait
movsb
ficoml
test
loope
es
xchg
xchg
decl
pop
fnstsw
out
sub
xchg
sub
ljmp
aad
mov
add
mov
jno
inc
add
stos
sti
mov
fcomp
and
fsubp
rcrb
sub
mov
lock
gs
loopne
mov
jg
call
push
jns
int3
lds
cmp
pop
fisubl
ret
rcl
xchg
inc
or
int
leave
test
mov
lods
xchg
imul
cmpsl
lds
mov
in
xor
jp
sbb
xor
cmpsl
call
loopne
xor
into
mov
add
mov
mov
mov
aam
xchg
sarb
pop
movsb
jnp
push
bound
mov
inc
push
jge
mov
jp
xchg
into
sub
in
push
daa
mov
int3
mov
jl
mov
jl
and
imul
sub
cwtl
dec
insl
or
mov
loopne
pop
and
pop
sti
mov
adc
clc
scas
fbstp
pop
jg
mov
pop
inc
cmpsb
jae
shl
loopne
pop
mov
ret
popa
mov
dec
les
xchg
lret
sbb
ficompl
inc
aaa
cmp
mov
pushf
push
add
hlt
aam
xor
outsl
shrl
shl
fiaddl
ret
and
neg
lock
pop
daa
cmc
lret
adc
push
daa
call
into
es
repz
and
jo
stos
out
pop
mov
push
pop
pushf
sub
push
mov
mov
xchg
xlat
mov
and
pop
dec
jmp
dec
movsl
outsb
mov
lahf
pop
push
fwait
xchg
cmp
sbb
add
mov
mov
mov
pop
pop
pop
sub
stos
mov
sbb
es
pop
fs
mov
ss
cmc
lcall
lds
bound
fadd
daa
or
sbb
xorb
subb
loope
or
sahf
cmpl
in
xor
and
test
loope
dec
cmpsb
jge
mov
mov
dec
jmp
je
xchg
dec
sbb
add
mov
cmp
fcmove
sarl
shrl
dec
or
sub
cmpsb
mov
fcmovnb
lahf
jmp
cmp
push
ret
lds
popf
push
add
sub
and
ds
rcrl
xorb
mov
jp
mov
jecxz
out
pusha
xchg
popa
xlat
dec
fadds
cwtl
cmp
jne
adc
mov
mov
clc
adc
loop
push
mov
mov
sub
fcoms
in
push
fdiv
call
and
jae
popa
add
mov
fsts
pop
pop
out
sbb
nop
in
jp
cmp
or
outsl
add
cmc
rclb
scas
push
mov
jae
sbb
mov
rorl
stc
push
adc
push
rolb
inc
loope
call
pop
and
pop
mov
push
in
lcall
fdivl
clc
xchg
popa
std
xor
test
jmp
pop
fiaddl
in
mov
cwtl
ds
adc
insl
sbb
cmc
gs
jae
je
jnp
repz
or
inc
nop
dec
jns
or
das
test
mov
ret
fisubs
jno
addb
jecxz
out
adc
sub
xchg
int3
xor
push
cmpsb
test
xor
scas
int
jecxz
insb
cwtl
cmp
icebp
int3
mov
xchg
mov
jnp
ds
xchg
pusha
xor
xchg
imul
stos
inc
enter
xchg
mov
sub
ja
dec
pusha
sub
loop
push
fisttpll
das
push
jecxz
xchg
iret
js
jae
cwtl
add
sbb
sub
or
lahf
jbe
daa
stc
loop
ljmp
pop
adc
push
adc
cmp
mov
daa
leave
aaa
fdivrl
xor
cltd
movsb
xchg
sbb
lea
outsl
in
daa
pop
sahf
inc
push
insb
xchg
and
or
cmp
bound
aam
mov
stos
xor
or
mov
fmul
mov
inc
jo
imul
mov
mov
mov
movsb
in
fsubl
cmp
dec
mov
shrl
jmp
mov
cmc
jmp
push
dec
sbb
jnp
mov
pusha
or
add
test
aam
dec
pop
inc
add
pop
mov
ret
gs
mov
int3
xor
xorb
jne
fs
scas
sbb
in
lods
jmp
and
add
add
cmpsl
daa
and
mov
outsl
stos
cld
push
or
push
fisttpl
cs
push
test
cmp
iret
push
arpl
mov
mov
ret
xchg
sub
pop
repz
or
les
adc
imul
lret
sub
test
pop
push
mov
leave
lret
mov
iret
pop
in
mov
fwait
sbbb
mov
idiv
dec
stc
xchg
jo
cmp
daa
popf
jecxz
fcmovnb
push
adc
test
cld
test
movsl
scas
push
sahf
pop
ja
sub
mov
or
xchg
test
scas
shll
cmp
cld
out
repz
incl
fwait
and
mov
loopne
dec
dec
out
jno
call
and
mov
rorb
lret
popa
sub
scas
xor
pop
lcall
and
int3
mov
cld
loop,pt
ds
popa
mov
sub
jecxz
lds
mov
mov
xor
mov
cwtl
frstor
ljmp
and
jle
sbb
jp
es
stc
sbb
in
push
lret
cltd
and
das
push
mov
pop
dec
insb
dec
iret
stos
mov
fldt
mov
loope
stos
jecxz
daa
ja
add
cmp
add
movsl
pop
ret
pop
stos
popa
dec
mov
les
shr
cmp
jns
ja
int
fldl
and
xchg
icebp
xor
push
mov
mov
leave
adc
sbb
sbb
in
and
rolb
leave
inc
cmp
clc
ror
fists
adc
mov
add
mov
sbb
pop
jmp
mov
mov
add
cmpsb
rcrb
push
jae
sub
lret
or
or
not
sbb
mov
adc
js
pop
mov
mov
add
mov
sub
cmpsb
xchg
mov
sub
xchg
xor
cld
rcrl
cmp
sub
push
xor
roll
and
xor
movsb
test
pop
negl
sub
scas
xchg
popa
mov
mull
mov
fildl
adc
dec
pop
and
push
sti
adc
imul
mov
aaa
pop
or
cmp
jle
movsl
push
fs
or
mov
jg
mov
ret
jbe
addr16
fcomps
adc
push
in
mov
inc
pop
inc
dec
inc
and
push
mov
jg
nop
mov
xor
xchg
andb
push
adc
lods
xchg
sub
or
xchg
loope
sbb
add
sbb
jnp
cmpsb
cmp
imul
xlat
jne
mov
mov
test
mov
orb
popf
insl
das
aas
mov
sub
jp
push
sub
shlb
mov
jmp
push
insb
cli
xchg
and
cmpsl
and
and
mov
pusha
pop
int3
xor
mov
les
pop
jp
subl
jge
add
cmp
int
cltd
xchg
mov
mov
nop
ljmp
sti
movsl
xlat
nop
ja
cmpsb
mov
xchg
sahf
sbbb
xchg
jl
stos
sbb
in
clc
mov
mov
int3
jmp
mov
andb
xorb
jo
lret
mov
ret
lods
nop
and
jle
pop
sahf
mov
js
test
jmp
pushf
dec
fidivrl
imulb
jecxz
xor
add
pushf
jo
nop
shlb
mov
dec
decl
cltd
add
add
pushf
or
scas
push
push
fcmovnb
addr16
pop
adc
stos
or
mov
add
pop
push
incb
fidivl
int3
jb
cwtd
xchg
inc
jb
and
inc
dec
ljmp
jb
nopl
and
es
das
out
and
push
add
in
stos
jmp
in
mov
or
and
dec
stos
or
cmp
int
dec
stos
filds
mov
sbb
jb
stc
dec
addr16
in
cmp
jmp
dec
sahf
adc
dec
lea
jecxz
in
adc
sti
loop
add
aas
and
mov
xchg
or
push
stc
lods
push
cmp
sub
or
jne
adc
out
aaa
mov
int3
push
out
data16
inc
cmp
adc
cmp
sbb
pop
ja
ljmp
test
push
inc
out
xchg
fildl
pushf
clc
ret
jl
push
ja
psrlw
pop
ss
pop
bnd
mov
push
or
mov
sub
lcall
or
xchg
leave
scas
movb
cmp
jg
addb
js
add
mov
cli
sub
inc
mov
push
aad
sub
xor
aaa
xor
xchg
mov
sub
aas
mov
jp
cmc
roll
jb
or
or
sbb
mov
or
jl
stc
sub
dec
push
dec
fldl
fisttpl
fdivl
outsl
xchg
and
jbe
push
or
fcoml
out
cmp
mov
es
fwait
inc
xchg
push
adc
mov
lcall
daa
or
xor
ficompl
vpmadcswd
dec
add
mull
jb
add
jge
mov
inc
lea
aas
dec
push
dec
xlat
addr16
mov
lcall
scas
mov
cmp
or
fsubrs
popa
mov
movsb
ficompl
mov
cmp
add
in
out
mov
pop
pandn
rolb
cmp
cmp
sub
pop
in
pop
filds
lods
outsl
xchg
add
out
xor
xchg
mov
sahf
scas
jbe
movsl
xchg
into
mov
adc
scas
loope
fs
push
pop
in
dec
enter
mov
inc
sahf
sbb
cld
pop
pop
test
push
xor
gs
xor
mov
mov
scas
cmpsl
add
pop
popf
lods
adc
cli
pop
inc
je
clc
adc
xlat
sarb
dec
testl
inc
lods
insb
aas
dec
shlb
in
sbbb
mov
cs
gs
sbb
push
lahf
in
rol
les
push
fidivrs
imul
and
push
repz
clc
mov
inc
loope
xchg
pop
xchg
pop
outsl
lods
jb
lea
pop
cli
fcomps
or
push
je
push
sub
mov
jecxz
inc
sbb
rolb
mov
jns
stc
int3
or
lds
mov
mov
lret
jp
inc
or
test
pushf
or
mov
scas
mov
pop
lcall
mov
scas
lods
push
add
sub
pop
imul
dec
inc
pop
imulb
outsb
pop
dec
adc
inc
pop
jl
lret
rcl
xchg
out
push
mov
dec
xchg
aas
shrb
mov
into
push
xchg
test
ss
out
push
lret
or
fmul
sbbb
add
adc
push
fstl
lret
and
test
mov
repz
ljmp
add
out
mov
pop
sub
cltd
add
std
cmp
out
mov
gs
jg
aad
sbb
test
fwait
sarl
lea
scas
push
mov
movsl
dec
xchg
pop
dec
pusha
dec
jmp
movsl
push
mov
fdivrl
jb
pop
mov
mov
call
repz
lods
insb
cld
aam
or
gs
inc
fsubl
lea
push
pop
iret
les
push
inc
xchg
hlt
push
jno
ja
sub
rcrl
addl
dec
or
inc
test
pop
cmp
adc
fcoms
push
fsubr
loopne
pop
es
imul
pop
loop
popa
in
inc
mov
das
loopne
adc
dec
lock
add
push
sub
cltd
loopne
inc
xor
xor
inc
push
nop
jmp
adc
cltd
or
push
push
adc
test
fsub
sbb
inc
mov
bnd
xchg
push
test
lahf
es
xchg
pop
ss
sub
push
mov
jae
lret
sbb
sbb
cmp
jmp
dec
cmp
lret
sbb
scas
rorl
jo
add
jnp
fsubrs
push
sub
dec
leave
cmpl
push
sub
sbbl
dec
out
into
sbb
add
fs
sti
sbb
pop
aas
inc
out
push
pop
std
or
movhps
add
fstps
test
lea
jnp
xchg
push
daa
sbb
ret
cmc
pop
push
shll
sub
cld
adc
sahf
aam
sbb
aad
lock
fildll
cmp
insl
outsl
pop
push
stc
enter
mov
xchg
mov
add
xor
cmp
dec
ja
or
lahf
aad
xchg
pop
xor
sub
sarb
sub
push
out
pop
xchg
aad
stc
xchg
xor
std
ficomps
cmp
push
lock
clc
cltd
ljmp
lret
xor
mov
out
les
xchg
sahf
enter
aaa
push
or
cmp
popa
push
and
jnp
push
pop
movsl
stc
xorl
je
lret
dec
rcrl
rcrb
int
adc
push
mov
add
fs
and
orb
fwait
aaa
and
pop
mov
dec
test
psubsw
mov
dec
xor
mov
ja
lcall
sbb
dec
adc
movsl
aam
int3
mov
mov
inc
insb
rcr
mov
int
loop
jne
jns
ja
cmp
inc
xchg
jae
xchg
dec
ret
xchg
jb
mov
xchg
stos
cmp
dec
jb
xor
mov
mov
cs
ss
and
lods
sbb
cld
icebp
js
das
loope
xchg
lea
dec
mov
sbb
mov
ljmp
xor
cli
cmp
repnz
mov
shrb
das
data16
mov
pop
out
pushf
dec
xor
das
cltd
xchg
das
shll
out
cmp
insl
xchg
sub
xor
ljmp
ja
in
fdivs
pop
jg
adc
xchg
cmpsb
jg
sti
fmull
pop
mov
mov
in
push
sahf
xchg
inc
lcall
mov
ja
xor
mov
sbb
cmp
fistl
out
lea
notl
jb
shrb
scas
adc
or
in
pop
pushf
roll
mov
pop
fisttpll
aas
xchg
add
fnstcw
mov
cld
movsb
insl
xlat
lods
daa
cmp
jo
sahf
mov
das
dec
jle
addr16
popf
jnp
mov
ja
xor
fisttpll
inc
pop
sbb
mov
leave
push
mov
cmc
leave
fnstcw
loope
fldl
sub
jnp
sub
jecxz
outsb
cmc
sbb
or
scas
mov
addr16
pop
mov
cmp
in
roll
cmp
iret
out
add
xchg
subl
xchg
lret
xchg
cmp
into
and
mov
or
or
js
xchg
leave
mov
mov
add
mov
xchg
test
xor
outsb
mov
mov
lock
call
add
cwtl
ja
jb
pop
idivl
aaa
jmp
jno
in
pop
das
dec
xchg
int3
clc
or
push
inc
and
and
jae
hlt
or
lds
gs
or
cmp
icebp
lds
xchg
and
dec
jl
dec
jns
push
and
ret
test
dec
daa
ds
imull
pop
sub
bnd
das
sub
and
lea
ljmp
nop
mov
aas
pop
gs
xchg
mov
shll
cmp
sbb
imul
sbb
stos
xor
xchg
sbb
repnz
cmp
sub
push
xor
rcll
xchg
repz
adc
cs
mov
mov
adc
mov
sub
mov
mov
mov
and
inc
inc
add
jl,pt
mov
test
jns
mov
loop
add
mov
sub
xchg
mov
ljmp
sbbl
cmp
mov
ds
sub
fs
inc
pop
inc
inc
sub
xchg
dec
bnd
int
out
adc
les
arpl
test
es
stos
stos
ljmp
js
fdivr
jnp
scas
add
xchg
mov
in
add
fnsave
stc
jmp
add
push
dec
mov
mov
jb
pop
dec
stos
test
int
into
xchg
les
lods
arpl
mov
movsb
ret
lahf
mov
xorl
xor
test
xchg
mov
push
dec
inc
movsl
and
ret
jbe
push
insl
jne
lcall
mov
xor
sbb
imul
mov
jae
mov
test
inc
scas
inc
push
les
adc
cmp
adc
cmp
pop
cmp
imul
sbb
sub
iret
lahf
or
enter
xchg
pop
gs
pop
pop
repnz
aam
cvtps2pi
jecxz
mov
arpl
inc
add
stc
inc
cmp
test
imul
dec
sbb
inc
jge
add
cs
jb
dec
xchg
or
cmp
mov
aaa
mov
sti
insb
ljmp
push
shufps
xchg
xchg
sub
sarl
sbb
call
mov
jl
adc
lret
push
add
add
fidivrs
repnz
movsb
andl
jbe
fiadds
das
imul
xor
mov
jo
pop
xlat
test
in
movsl
and
mov
daa
mov
sti
lds
inc
xchg
cltd
mov
int3
ret
ds
pop
mov
mov
xor
scas
mov
mov
cmpsb
insl
dec
es
repz
xor
add
popf
lahf
mov
rclb
sbb
push
jge
push
repnz
jg
mov
jb
xor
mov
sbb
shrb
push
pop
subl
addb
pop
js
inc
shlb
xchg
pop
dec
push
stos
mov
sbb
xlat
repz
xchg
inc
insb
lock
fistpll
jl
clc
mov
je
xor
sahf
fimuls
in
mov
incb
lret
pop
inc
rolb
sti
sub
cmp
fidivrs
push
pop
push
cmpsb
pop
arpl
pusha
popa
inc
iret
into
cwtl
loopne
pop
cli
sub
adc
js
cmpsb
lods
pop
icebp
shr
and
and
jmp
cmpsb
lahf
jecxz
inc
sub
or
enter
out
scas
ja
fprem
fiaddl
fstl
loop
imul
adc
push
minps
pop
fldcw
jne
imul
xor
lret
xchg
insl
fidivrl
lret
dec
out
ljmp
add
and
sbb
jl
stos
jmp
outsl
repnz
jp
pop
mov
jnp
movsb
out
mov
fnstcw
push
ja
lret
iret
cwtl
inc
out
mov
jg
sbb
mov
mov
ficompl
cmp
js
xor
mov
loop
sbb
cmp
test
clc
inc
pop
sub
pop
cltd
mov
xor
sbb
shll
push
mov
repz
popf
cmp
xchg
xor
fiaddl
roll
in
jb
lock
outsl
dec
cmc
sub
adc
shr
xlat
mov
sbb
mov
adc
leave
mov
sarl
mov
icebp
inc
inc
lea
xchg
cltd
mov
dec
sub
gs
cld
cmpsb
pop
sub
mov
pusha
push
mov
or
cmpsb
addr16
hlt
inc
mov
addr16
add
jnp
inc
dec
sbb
int3
fnsave
lret
sahf
pop
sarb
test
js
sbb
or
cmp
inc
jne
mov
in
adc
sub
stos
aad
in
jmp
xorl
in
jb
test
loope
pop
popf
ret
xchg
testb
aaa
jecxz
stos
mov
push
leave
sbb
sub
xchg
fcomip
push
cmp
outsb
int
sub
or
das
ss
popa
xor
mov
add
les
adc
mov
push
xchg
and
mov
arpl
adc
mov
inc
push
sub
ret
add
ss
push
xor
mov
dec
ret
pushf
xchg
jecxz
adc
divb
jmp
aad
mov
xor
dec
mov
rorb
cmp
inc
adcb
add
push
push
incb
sub
sbb
fiadds
imul
loop
mov
icebp
xor
pop
js
lock
push
dec
stos
enter
mov
or
push
cmp
ficompl
jl
mov
or
or
fistpl
xchg
dec
add
fst
xchg
mov
mov
pop
std
jbe
adc
inc
jmp
cmp
rcll
mov
push
sbbb
add
xor
jle
repnz
hlt
mov
adc
out
iret
scas
adc
xor
aaa
mov
in
dec
jbe
pop
in
bound
or
inc
pop
bound
dec
cmp
imul
call
pop
shll
dec
out
cltd
xchg
pushf
fiaddl
pop
lret
out
xor
add
or
add
icebp
std
jge
and
in
push
xchg
push
loop
mov
mov
adc
xchg
pop
push
adcl
sbb
mov
shll
xchg
or
pop
outsl
int
add
data16
cld
mul
movsl
lret
repnz
or
jg
xchg
or
lock
orb
adc
mov
stos
fnstsw
notb
or
jne
jno
nop
pop
mull
rclb
add
push
cmp
sbb
mov
cmp
lods
icebp
mov
cmp
nop
js
sbb
jmp
inc
mov
xchg
cld
sbb
out
lds
dec
pop
daa
xchg
and
add
popa
pop
into
fs
jbe
cmp
sub
fldl
popf
test
test
adc
arpl
dec
ljmp
fiaddl
jg
imul
psrad
cmc
dec
sarl
test
sbb
adc
adc
dec
jmp
psllw
jecxz
push
pop
adc
cli
pop
call
cmpl
jbe
lea
cmp
push
lods
inc
add
push
jne
outsl
mov
jmp
lea
lds
in
scas
adc
dec
aam
mov
push
fistl
repz
es
fsubrp
lock
addr16
push
pop
jge
mov
dec
movsl
dec
add
add
mov
xor
or
fstps
ja
enter
jae
or
jno
sbb
xor
outsl
or
pushf
cmp
popf
movsl
xchg
sbb
bound
cmp
cltd
outsb
bound
push
loope
mov
mov
test
jne
repz
mov
cmpsb
mov
pushf
lods
jb
sbbl
or
fs
movsb
xchg
and
imul
fmuls
xchg
std
faddl
add
cli
test
sub
sbb
enter
mov
sti
insb
jne
mov
mov
dec
outsl
add
xor
fisubl
arpl
adc
sbb
sbb
mov
push
imulb
test
xchg
push
repz
aas
arpl
out
and
stc
clc
test
movsb
mov
cmp
pop
adc
sub
adc
mov
xor
filds
insb
xchg
add
lea
stc
sbb
push
sub
mov
mov
pop
mov
xchg
push
in
pop
in
pop
inc
xchg
xchg
cmp
mov
mov
mov
mov
fdivp
cs
push
out
xchg
jns
out
rorb
mov
sarl
popf
cmp
push
pop
mov
pop
pop
jge
fstps
std
and
repnz
pop
xchg
xchg
add
cld
inc
inc
jne
lahf
sbb
mov
pop
push
inc
fisubs
loopne
push
sahf
js
in
dec
ljmp
mov
aam
xlat
dec
leave
jle
notl
inc
fimuls
sbb
bound
rcl
mov
lret
lcall
jle
push
pop
mov
dec
sbb
leave
cmp
in
or
shr
sub
andb
mov
push
cwtl
scas
adc
cmc
xor
mov
inc
cmpsb
fsts
and
sbb
and
aas
mov
sarb
lods
addr16
sahf
fldl
inc
shrl
push
push
fildll
rcrb
cmc
cmc
sub
mov
jno
jae
mov
xchg
add
xorb
mov
pop
cmpsb
stos
ljmp
insb
shlb
movsb
mov
shlb
jbe
add
lea
mov
cmc
xchg
out
cmp
mov
std
leave
ret
fcomps
pop
cmpsb
and
mov
mov
push
insb
shrl
cmpsb
add
in
sahf
sbb
dec
add
inc
shr
jle
xchg
jbe
popa
cwtl
out
lods
arpl
clc
jle
xchg
sub
push
out
insl
or
in
mov
loopne
enter
and
sub
xchg
fmull
mov
push
lret
mov
sbb
pop
ljmp
sub
lea
repnz
jbe
cmp
jb
fnsave
pop
or
jecxz
sbb
dec
pop
sbb
stos
je
push
adc
add
cmp
sbb
sub
pop
push
test
xor
lea
scas
insb
iret
ret
sub
sarl
bound
jnp
inc
mov
mov
loope
mov
lahf
jno
daa
sub
pop
xchg
add
dec
aad
jns
mov
ficoml
xor
xchg
push
jns
mov
xchg
and
inc
xor
arpl
and
lret
add
daa
sub
jmp
or
add
lret
dec
incl
lds
push
push
aad
jle
scas
in
stos
jmp
add
out
loope
pop
pop
and
pop
push
pop
js
add
std
out
inc
mov
lock
pop
mov
repnz
mov
addr16
in
mov
leave
sbb
enter
adc
pop
lahf
pop
dec
sub
dec
mov
push
cmpsb
and
mov
cmp
nop
xor
mov
sub
jo
dec
push
popa
cmpsb
andl
repnz
cmp
iret
rorb
xor
sub
mov
pop
ljmp
and
cs
hlt
mov
xchg
aad
imul
mov
xchg
test
cwtl
cmp
xor
jae
shr
push
roll
jecxz
shll
jmp
jmp
mov
mov
dec
testl
mov
pop
lods
scas
sub
ret
test
adc
or
cmp
pusha
lret
ret
cmp
xchg
or
repz
mov
roll
xchg
loopne
push
push
xor
adc
loopne
add
mov
lahf
idivb
lock
arpl
in
adc
lret
fcoml
not
sub
dec
les
sarb
shlb
loope
xor
or
mov
xchg
fldt
xchg
lret
dec
xor
enter
fcmovnb
mov
adc
scas
xor
cs
rorl
xor
test
mov
dec
mov
dec
bound
pop
pop
fsubrs
aam
pop
arpl
repnz
popf
cld
sbb
or
inc
add
sbb
sbb
cmpb
jno
mov
popl
jge
cmpsb
movb
movl
adc
pop
xchg
mov
mov
hlt
cwtl
sub
insb
push
aad
hlt
flds
int
inc
pop
nop
xor
hlt
jmp
adc
or
mov
mov
mov
incb
fldt
xlat
ja
insb
or
inc
xorb
sbb
inc
mov
or
push
cmpl
lcall
mov
xchg
test
or
jns
cmp
cli
push
xchg
add
das
add
mov
sub
sub
repnz
lds
aad
into
or
adc
loop
push
dec
imul
sub
or
pop
cwtl
imul
pushf
outsl
mov
insl
fsubrs
clc
dec
call
ficomps
push
and
ficomps
adc
jbe
ds
sbb
call
hlt
jg
pop
lds
jne
fnstenv
not
xchg
lock
mov
idivl
ja
and
loope
sbb
sbbl
mov
les
jae
outsb
repz
in
xchg
add
push
fisttps
jb
push
mov
les
push
jae
aaa
lea
pop
fsubrl
xchg
pop
je
movsb
and
addr16
jno
mov
stc
lahf
cmp
out
in
mov
ret
cs
sbb
jne
or
sti
and
mov
push
ljmp
jne
or
xor
push
jnp
xlat
addb
xchg
cmp
cs
in
xchg
cmp
ds
adc
dec
and
gs
je
inc
movsb
mov
fptan
mov
mov
cmc
mov
lea
cmpl
scas
xchg
xchg
xchg
shrl
lret
lds
mov
or
cmpps
add
es
fs
mov
mov
jno
xor
xchg
xchg
sub
cmp
repz
xor
test
fmull
popf
fisttpll
loope
push
pusha
rcrb
mov
dec
push
into
mov
pop
sub
out
aas
dec
mov
jo
mov
fisubs
adc
movsb
xchg
in
push
jns
inc
or
cmp
inc
mov
repnz
xor
push
in
pop
out
push
add
mov
xchg
test
aaa
in
mov
lods
fiaddl
xlat
popf
push
and
sub
mov
dec
push
cmpsb
mov
out
and
pop
jle
sub
divl
cmpsl
mov
inc
sahf
cmp
cmpsb
dec
mov
int3
adc
mov
or
test
out
mov
insb
fcompl
mov
imul
repz
sbb
stos
xor
fcomps
inc
in
mov
in
lock
add
pusha
test
fnstcw
test
mov
mov
cli
scas
push
cmp
add
cltd
jnp
popf
sbb
xchg
add
add
notl
fidivs
les
push
ljmp
orl
int3
and
fwait
scas
pop
pop
adc
out
in
clc
sub
shlb
push
inc
adc
enter
cmpsl
bound
dec
aas
xor
jg
adc
lock
aam
imul
mov
sahf
std
or
push
pop
test
jne
pop
int3
nop
cmp
shll
ss
cld
sub
inc
mov
fstpt
push
fwait
xor
push
ja
ror
add
inc
dec
js
and
sarl
das
xor
imul
xchg
or
repnz
adc
adc
outsb
lret
xchg
jb
ret
and
ret
sbb
ljmp
jno
cltd
pop
and
je
adc
mov
sbb
pop
mov
ret
in
loope
das
cmp
rcrl
icebp
out
dec
xchg
hlt
stos
cmpsl
sar
dec
sbb
adc
dec
das
jg
insb
fstpl
int3
xchg
sbb
sbb
cmp
xchg
in
mov
out
subb
cmp
xor
dec
cmp
mov
icebp
arpl
add
mov
and
and
dec
mov
ret
adc
adc
dec
rorl
adc
push
pop
roll
js
jb
lods
leave
or
xorl
stos
sub
mov
fimull
and
lahf
xor
lds
test
ret
add
int
xor
fyl2x
adc
cmp
jb
ret
imulb
loopne
jp
dec
mov
jmp
xor
jl
rclb
push
or
xchg
les
jno
or
xor
cmp
mov
xchg
add
xchg
mov
inc
leave
jecxz
rclb
insb
adc
sbb
out
mov
lock
fists
test
lods
or
or
outsb
dec
push
cmp
dec
sbb
mov
push
and
jae
mov
mov
movsl
cmp
xor
cmp
int3
shr
inc
jns
int
lcall
pop
xor
out
fs
inc
lcall
ret
mov
mov
adc
sub
insl
dec
hlt
and
pushf
cmp
popf
cmp
push
lods
inc
add
inc
pop
ret
mov
xchg
test
fnstcw
and
mov
test
mov
or
sbb
pop
fwait
xchg
mov
test
inc
push
movsb
mov
int
ss
xchg
into
jmp
das
mov
push
push
dec
test
xchg
imul
push
es
mov
add
dec
dec
xchg
lcall
stos
imul
mov
out
push
xor
push
int
fwait
sti
push
dec
test
jbe
enter
je
or
pop
xor
adc
daa
push
fimull
jnp
pop
push
xlat
or
sbb
out
pop
xchg
int
jg
mov
pop
stos
sbb
negl
rcll
fs
push
mov
dec
dec
nop
in
repz
pop
orb
daa
add
scas
rclb
dec
xlat
push
je
leave
insl
xchg
std
pushf
mov
sub
and
nop
inc
fisttpll
sub
add
add
repz
mov
mov
jg
xchg
adc
inc
inc
rorl
add
cmp
scas
push
pop
jnp
xchg
or
std
daa
or
sub
sar
je
inc
add
pusha
fstpt
mov
lock
testb
loop
into
xchg
iret
fdivrl
inc
imul
ja
in
and
push
jb
pop
loope
push
sub
lret
jge
sbb
pop
fnstenvs
adc
xchg
push
mov
fisubrs
scas
mov
mov
push
fdivrl
jecxz
mov
dec
testl
push
pop
xchg
clc
mov
sub
pop
test
pop
test
mov
mov
jns
stos
je
in
popf
or
sti
or
fsubs
ud0
std
stc
rol
aad
or
and
test
clc
xchg
hlt
mov
out
stos
in
or
and
nop
mov
xor
cmp
mov
mov
int
cld
jl
mov
out
or
and
sbb
testb
or
fucomi
jmp
dec
arpl
inc
push
mov
mov
mov
mov
push
or
dec
test
ret
xchg
aas
sub
sahf
bound
jp
or
or
repnz
int3
sub
lret
sub
and
fwait
pop
jbe
push
loop
xlat
cmp
adc
out
push
mov
lods
or
enter
nop
hlt
mov
sbb
pop
in
mov
cmp
mov
outsb
inc
jmp
dec
dec
adc
outsb
xchg
cmpsl
xchg
mov
insb
lahf
adc
cs
jbe
mov
bound
fldl
xchg
popa
xor
or
pop
xchg
add
mov
pop
xchg
push
fldz
nop
scas
pusha
jns
lods
push
into
cmpsl
stc
ret
jae
outsb
mov
mov
clc
add
xchg
into
xchg
rorb
or
scas
cmp
mov
divl
lock
test
pop
pushf
add
push
dec
mov
arpl
pop
sub
adc
and
sbb
inc
scas
dec
lret
sbb
pop
push
rorb
test
frstpm(287
push
push
cs
and
sub
adc
ret
mov
lods
shll
rcll
lds
nop
inc
test
dec
fcompl
imul
or
out
push
dec
xor
test
aad
xchg
or
cmp
aaa
adc
fisubl
inc
jb
outsl
add
pop
dec
push
cli
mov
xchg
xor
or
and
loopne
push
fs
sub
clc
data16
dec
cmp
loopne
or
call
fsubrl
lods
out
dec
les
lea
movsl
jnp
call
nop
cli
mov
inc
je
sbb
sbb
push
mov
xor
rorb
push
je
mov
ss
in
cmp
sub
subb
xchg
add
cmp
pop
push
or
sarl
std
push
aas
sub
xchg
repz
cli
mov
addr16
into
mov
pop
cmp
loope
mov
lcall
lods
je
inc
nop
sub
mov
enter
and
cmp
fidivl
xor
mov
mov
inc
mov
insl
mulb
test
push
adcb
in
enter
aad
mov
cld
jb
cmp
add
fwait
test
inc
ds
loop
bnd
cmp
push
lahf
loopne
orl
dec
mov
cmpl
cmp
cmp
jae
inc
and
scas
cmpsl
mov
dec
aaa
rol
cld
adc
inc
inc
pop
jmp
nop
jns
or
ljmp
sub
lcall
xor
inc
mov
add
push
addr16
roll
or
adc
xor
mov
inc
jecxz
push
into
xchg
daa
jp
sub
ret
xchg
jmp
mov
push
jbe
jg
cmp
jno
out
xchg
add
fadd
cmp
push
xchg
xlat
stos
cld
out
cmp
aas
stc
mov
dec
push
sub
push
lret
add
sub
in
mov
popl
rcrb
mov
pop
pop
and
in
test
ljmp
push
mov
mov
inc
pop
fistpl
add
push
jmp
fcomps
add
or
or
js
mov
push
mov
repnz
roll
sti
mov
insl
push
adc
inc
cmpsl
clc
sub
jg
xor
adc
jb
cmp
inc
and
mov
pop
pop
loope
xchg
jb
mov
dec
imul
xchg
or
jecxz
cwtl
fs
sbb
cwtl
lea
dec
movsb
int
fsts
mov
cmp
jmp
xor
andl
hlt
push
pushf
jbe
pop
sbb
aaa
inc
iret
push
pusha
add
adc
or
cwtl
jae
add
out
in
mov
xchg
lcall
shr
lret
in
adc
movsl
sub
stos
cld
stc
inc
adc
fadds
cmp
out
mov
arpl
sbb
insb
int
shll
sbb
sub
fucom
pusha
adc
sbb
jbe
adc
popa
mov
outsb
mov
adc
push
sub
sbb
and
imul
outsb
mov
inc
push
mov
sub
or
stos
cwtl
xor
repz
pop
testb
pop
push
cltd
loope
outsb
dec
movsl
fwait
jae
sub
jno
fs
loope
ja
leave
dec
sbb
inc
mov
dec
mov
add
xor
adc
mov
aaa
mov
mov
ret
add
subl
imul
mov
xchg
int3
sub
testl
inc
imul
mov
pop
sub
out
daa
imul
mov
mov
lret
pop
push
inc
ret
pop
sbb
push
sub
jecxz
icebp
movsl
addr16
push
push
scas
mov
mov
leave
les
dec
adc
pop
addr16
pop
and
xchg
jl
sbb
inc
rorl
mov
negb
bound
push
addr16
mov
fstpl
jbe
mov
jnp
or
push
and
inc
pop
adc
pop
pusha
add
push
test
cmp
scas
add
movsl
xchg
rclb
outsb
pop
push
lea
mov
movsb
and
push
push
insb
cld
fists
xor
jge
pop
and
lds
scas
xchg
inc
into
add
push
test
push
outsb
mov
jp
xor
or
pop
ftst
xor
push
mov
mov
adc
or
xchg
out
push
test
in
fwait
rorl
loopne
fbstp
in
mov
pop
mov
pop
push
popf
ljmp
push
jl
cltd
stc
std
in
fistps
arpl
add
or
mov
push
ficoms
fs
pop
inc
iret
addr16
loopne
pop
test
imul
jbe
les
lcall
push
mov
iret
daa
popa
scas
ficomps
sahf
pop
cltd
outsb
xor
jl
outsl
xchg
or
xchg
fcompl
or
or
push
inc
aam
out
or
fiaddl
jnp
push
xchg
sbb
mov
jmp
xor
fs
xchg
es
lods
dec
mov
mov
mov
dec
xor
clc
jmp
mov
adc
data16
ja
dec
out
push
or
pop
es
mov
popa
add
scas
movsl
mov
push
jae
cmpsl
or
dec
jl
xor
mov
rorb
mov
shlb
mov
sbb
inc
aas
enter
and
repz
push
cmp
dec
push
inc
lret
cmp
mov
jns
outsb
mov
aaa
call
fnstcw
popf
repnz
adc
testl
pop
mov
shlb
rcrl
repz
adc
cld
outsb
aad
setae
mov
aad
test
and
iret
inc
mov
movsl
mov
leave
dec
out
or
xchg
rclb
lock
adc
lods
mov
aam
mov
pusha
jne
inc
sahf
stc
call
mov
or
lock
mov
out
in
pusha
cmp
ret
pop
arpl
or
xchg
decl
clc
adc
testb
mov
mov
xchg
ljmp
out
mov
cvtps2pd
out
sbb
or
clc
jge
or
je
mov
add
or
jo
mov
rcrl
outsl
and
hlt
xlat
inc
out
adc
xlat
inc
cltd
push
mov
sub
pop
mov
sub
fidivl
cli
sub
int3
xchg
xor
loope
pusha
and
je
fisubrs
lahf
inc
sbb
cli
xchg
out
fs
aad
pop
mov
dec
clc
mov
or
popf
mov
mov
jne
mov
push
jb
mov
pop
bound
xor
sahf
push
or
adc
outsb
cli
xlat
or
pop
lcall
mov
xorl
aam
inc
pop
sbb
data16
mov
push
add
popl
movsb
and
pop
cmc
jecxz
pop
dec
dec
sbb
add
mov
aaa
addl
dec
pop
xchg
test
lods
or
fstpt
cmp
fmuls
icebp
scas
leave
mov
ret
cli
lret
into
into
loopne
xchg
int3
adc
cmpl
or
and
mov
lcall
aam
mov
add
sbb
in
ljmp
mov
adc
fdivs
push
mov
sbb
dec
outsl
xchg
lcall
push
fcomps
lahf
outsb
mov
cmp
lods
cmp
jbe
adc
sub
stos
mov
test
cmpsl
fs
jb
mov
sub
aas
jg
test
push
andb
sub
jns
adc
push
add
sbb
sbb
dec
out
aad
fcompl
mov
sub
inc
stos
rorb
jmp
aad
jne
insb
inc
inc
fs
ret
cltd
outsb
push
jl
negl
pop
push
pop
mov
jmp
push
dec
hlt
xor
or
mov
mov
popf
inc
out
pusha
stos
rorb
push
subl
pop
nop
popf
ja
inc
ret
sub
or
ljmp
jmp
xchg
or
or
push
bsr
out
push
mov
dec
mov
sbb
imul
pop
push
xlat
imulb
sbb
loope
and
movsb
addl
add
mov
push
jbe
test
inc
sub
push
cmp
dec
iret
mov
mov
xchg
cmp
mov
or
outsl
mov
pop
cvtpi2ps
std
jnp
xor
roll
inc
jo
add
mov
ss
jecxz
lods
or
push
dec
loope
push
cmp
mov
inc
adc
jge
addr16
imul
push
aam
sbb
mov
daa
sub
nop
fninit
pop
sbb
jg
leave
pop
gs
cmpsb
lahf
push
xor
and
or
sbb
xlat
jns
xchg
notl
cmp
out
jb
fcmovu
movsl
add
xchg
cltd
shlb
cmp
rcl
xchg
outsb
add
int3
gs
jbe
jb
jae
mov
fldcw
mov
pop
push
popf
mov
sbb
or
mov
jae
sbb
push
xor
mov
mov
imul
and
mov
loope
and
in
mov
loop
test
push
adc
xor
std
sub
jo
inc
push
xor
cmp
dec
test
sbb
mov
ret
sahf
xchg
sbb
mov
mov
push
aas
mov
out
int
popa
and
or
push
cmpsl
mov
mov
test
adc
js
popaw
cmp
sub
push
mov
mov
inc
daa
int3
sbb
ljmp
pop
or
sub
fwait
sbb
adc
sbb
mov
pop
jmp
incl
hlt
mov
and
ret
outsl
arpl
adc
dec
ss
sahf
xor
pusha
dec
sub
sbb
jge
lods
lret
sbb
loop
scas
mov
xchg
repz
into
cmp
and
shr
mov
out
or
cmc
xor
push
or
fimuls
push
std
insb
arpl
mov
mov
push
clc
xor
je
cld
pop
push
scas
mov
test
add
sarl
add
mov
sub
inc
push
cli
out
cmp
pop
cmpsl
cmpsb
adc
push
sbb
jns
dec
scas
fs
sbb
repz
aad
cltd
shll
xor
sub
test
pop
imul
mov
rorl
fsubrs
mov
jno
inc
adc
jg
dec
mov
dec
test
add
mov
in
push
jmp
sub
pop
in
cmovae
aaa
or
sbb
int3
sarl
in
iret
mov
sub
idivb
ss
insl
jge
cmpsb
xor
pop
push
addr16
cmp
cltd
dec
jns
sbb
call
popf
ja
mov
fisubl
jns
shrl
pop
inc
into
jnp
mov
jmp
iret
fcmove
xlat
flds
stos
or
fmul
mov
cmpsb
jb
pop
jb
movsb
xchg
lea
lahf
scas
inc
xor
out
fs
dec
mov
inc
push
js
call
ja
push
inc
pop
mov
aas
and
mov
xchg
jb
enter
jbe
mulb
loopne
ja
out
xor
xchg
sbb
and
xchg
lock
xchg
xor
ljmp
jle
repz
cltd
jp
dec
cmp
sbb
lret
mov
mov
adcl
lods
cmp
mov
pop
sub
maskmovq
divl
sub
out
mov
mov
aaa
inc
push
xchg
scas
adc
dec
loope
adc
mov
cmp
sarl
mov
xor
jne
movsb
mov
ss
imul
test
movsl
jg
push
ret
push
or
or
or
popa
jae
xchg
in
jb
xchg
scas
xchg
imul
divl
dec
dec
in
xchg
testl
lret
sub
xchg
andl
imul
subl
imul
scas
xor
mov
inc
cld
sbb
das
push
lret
or
mov
or
and
xor
mov
jg
jo
or
repz
sbbb
mov
test
lods
fdivl
inc
sahf
mov
fisttps
call
mov
das
mov
fidivrl
dec
adc
rorl
int
xchg
je
sarl
mov
aaa
dec
insl
pop
xchg
xchg
xchg
insl
mul
inc
dec
call
xchg
cltd
repnz
fcomps
lock
adc
xlat
aaa
sbb
rcl
lods
xor
rcll
mov
sub
jno
rorb
decl
adc
pushf
jbe
punpcklbw
jno
sub
push
cmpsl
fdiv
adc
jle
or
arpl
add
push
std
dec
mov
andl
jns
push
jmp
push
arpl
pop
std
dec
cwtl
stc
lret
inc
testb
adc
nop
and
nop
adc
lcall
pop
rep
push
cmp
movsb
test
das
add
xchg
inc
sbb
insl
repnz
fstp
movl
sbb
movsb
rorl
jns
sub
in
sbb
pop
scas
mov
mov
icebp
sti
cs
mov
mov
imul
mov
mov
jns
imul
ljmp
lea
mov
sub
mov
mov
daa
sub
jnp
jp
shl
test
mov
pop
xorl
jl
mov
sbbb
dec
or
sbb
xor
mov
loopne
fbld
inc
in
mov
pop
out
dec
push
pushf
jbe
gs
jo
adc
inc
cmp
jle
loope
fbld
lods
xor
mov
xor
pop
bound
les
adc
aad
mov
xchg
ss
push
inc
das
push
jg
shr
jmp
je
pop
pop
inc
popa
movsl
nop
imul
nop
push
fstl
enter
cld
repz
les
xchg
pusha
ja
loopne
inc
imul
and
movsb
adc
ds
xchg
leave
push
push
mov
jb
fldcw
mov
lahf
xor
sbb
pop
cltd
cmp
aam
out
jmp
jp
and
lretw
cmpsl
jo
pop
sub
fsubrl
cltd
icebp
xchg
xchg
test
enter
mov
sub
and
push
sbb
jbe
in
push
jne
sarb
int
cmp
adc
call
xchg
negl
sub
push
sbb
pop
mov
xchg
into
xor
das
imul
jg
cmp
into
stos
sbb
ss
pushf
or
adc
out
and
push
pushf
rcll
nop
fdivrp
cmp
arpl
imul
andl
cwtl
sub
pop
jmp
pop
dec
insb
sbb
pop
fildl
jp
inc
popa
mov
addr16
add
icebp
push
outsl
aas
clc
lahf
sub
mov
outsb
cmc
rorb
mov
push
jmp
insl
shll
jl
xchg
mov
xchg
sahf
int
xchg
dec
jnp
lds
mov
inc
sub
adc
lcall
fcomps
in
dec
jmp
or
mov
xor
movsl
cs
std
mov
mov
inc
popf
dec
arpl
ljmp
sub
mov
outsl
jbe
jge
out
loopne
js
jae,pt
aas
pop
pop
sub
lock
loope
add
push
subb
pop
loopne
sbb
or
or
push
ss
js
lahf
inc
idiv
lods
jecxz
sbb
jp
test
fdiv
popa
jo
es
ffreep
ja
pushf
mov
and
add
stos
push
push
outsl
sbb
jecxz
sbb
aad
data16
cli
outsl
sbb
loopne
mov
imul
push
cli
movsb
mov
testl
fwait
dec
mov
arpl
mov
and
mov
jne
addb
lahf
loop
dec
add
loopne
mov
fs
repz
dec
xchg
scas
hlt
adc
xor
cmp
data16
nop
hlt
xchg
xchg
shr
jae
xchg
xor
je
sub
lock
sbb
and
stos
jns
xor
mov
adc
jp
mov
frstor
sub
cmpsb
mov
mov
add
call
push
nop
mov
scas
or
add
pusha
sbb
dec
jp
loopne
imul
adc
sahf
cld
adc
pop
add
jae
sbb
cmpsl
sub
jp
repz
sub
cmp
sub
cwtl
cmp
pop
arpl
jb
pop
sbb
loopne
push
fistl
decb
mov
mov
mov
lcall
push
or
pop
jne
ret
sub
sub
out
jle
aas
aad
fsubrp
sub
mov
aad
and
fwait
mov
fisttpl
leave
lods
mov
cmc
imul
dec
xlat
jle
in
push
data16
repnz
inc
jns
jmp
out
imul
dec
push
sbb
ds
mov
cmp
sahf
jb
sbb
fwait
lods
mov
jae
xchg
jmp
mov
adc
mov
mov
in
dec
repnz
jns,pt
pop
mov
inc
xchg
sub
mov
dec
dec
xchg
mov
mov
cmp
jbe
pop
jns
jne
pop
jb
push
ret
icebp
stc
clc
mov
movsl
inc
xor
xchg
out
pop
or
mov
stos
dec
daa
shrb
lahf
xchg
inc
adc
insb
dec
xchg
out
sarl
movsl
dec
inc
sub
popf
sbb
adc
fstpl
jmp
mov
inc
mov
imul
dec
pop
imul
stos
sbb
cmpl
dec
dec
ja
xlat
rcr
subb
pop
push
stos
sbb
and
pop
sbb
jnp
or
push
adc
adc
lds
mov
ja
add
inc
ret
jge
insl
xor
cli
dec
aaa
aad
xchg
fwait
mov
cwtl
adc
and
jno
stos
pop
inc
and
jle
divl
xlat
push
lea
sti
mov
add
add
cmp
inc
mov
sub
jecxz
ja
push
test
sub
jg
jge
lret
xchg
rol
dec
in
scas
cmp
imul
pop
pop
pop
pushf
jo
dec
aaa
xchg
lods
and
xor
pushf
fmuls
dec
mov
cmc
test
xchg
iret
push
pop
jno
mov
push
push
push
mov
pop
pop
ja
test
call
fs
sti
jbe
push
icebp
scas
in
dec
mov
push
movsl
dec
test
pop
xchg
sbb
decb
les
in
movsl
lds
into
pop
call
cmp
mov
insl
sbb
les
insl
dec
ja
cmpsl
adc
mov
test
in
callw
mov
lods
jmp
lahf
mov
imul
lea
jge
sub
rolb
es
in
lcall
adc
fwait
in
xchg
divb
out
stos
test
out
cmp
cmpsb
scas
hlt
cli
sub
mov
cmp
addl
mov
xor
es
adc
push
imul
out
mov
das
scas
pop
or
pop
out
hlt
mov
mov
sub
aaa
and
les
fwait
inc
repz
pushf
call
insb
mov
andb
int
or
cmp
adc
jae
imul
adc
add
mov
sub
test
sbbl
popf
call
xor
add
mov
jmp
mov
cmp
push
fsubl
jecxz
push
movsb
fadds
cmp
iret
fildl
mov
in
cmpsb
outsb
movb
pop
fnsave
pop
popf
out
mov
inc
fsubl
cmpsl
sub
dec
outsl
enter
loop
pop
ror
loop
jb
mov
xchg
inc
ret
mov
mov
hlt
inc
ror
rorb
push
mov
mov
push
js
lock
push
sti
aam
stos
jb
pop
xchg
enter
clc
sahf
flds
dec
inc
out
and
mov
insb
mov
mov
add
xchg
xchg
scas
mov
in
mov
retw
mov
mov
popf
ds
pop
test
push
pop
out
dec
xor
call
jg
rcl
fdivs
sbb
and
jl
sbb
bound
push
cmp
stos
inc
in
js
hlt
iret
and
lock
shll
bound
scas
mov
xor
mov
cltd
mov
scas
movl
inc
sbb
mov
cltd
mov
or
icebp
fwait
mov
add
xor
or
lods
data16
lods
mov
sahf
fsubrs
sbb
enter
mov
sub
test
shrl
lods
aas
add
call
add
mov
movsb
push
stos
push
adc
push
adc
jle
pushf
sbb
sbb
add
hlt
push
sbb
movsl
dec
lret
inc
push
adc
in
mov
mov
in
movsb
lods
xchg
inc
push
xor
clc
pop
push
les
imull
out
dec
jns
clc
mov
test
lahf
fs
sarb
xor
ss
and
int3
idiv
fisubrs
adc
adc
xchg
mov
xor
clc
add
and
push
stos
cmp
test
xor
popf
fldcw
mov
pop
sbb
dec
jns
dec
repz
mov
stc
imul
mov
je
mov
cmp
outsl
mov
jp
adc
add
addr16
inc
push
movntq
mov
and
bts
xchg
dec
test
in
je
jp
ljmp
nop
jp
add
mov
call
fsubl
and
adc
icebp
pop
mov
addb
mov
jp
filds
mov
inc
sub
pushf
mov
sbb
xchg
in
out
adc
mov
out
in
xor
push
in
fimuls
adcb
cmpsl
jns
test
fbstp
push
popa
cmp
jne
daa
jae
xor
mov
adc
cmpsb
and
cmc
dec
es
aad
subb
sbb
mov
push
sub
cmp
push
cli
sbb
in
fistl
or
in
lahf
lock
mov
xor
jg
bound
cmp
clc
arpl
daa
dec
lds
gs
or
sub
fstpl
pop
pushf
pop
push
scas
es
mov
std
in
xor
dec
inc
in
adc
mov
rcrb
sbb
dec
or
mov
and
inc
jbe
cld
movsl
add
mov
es
divb
mov
fnstenv
mov
push
int3
shlb
add
push
scas
loop
mov
fcmovne
lret
call
pop
inc
scas
es
and
cs
mov
and
mov
sbb
push
sub
xchg
inc
loope
push
xor
jmp
stc
inc
push
jbe
pop
in
dec
je
movsb
loop
xchg
dec
test
xchg
ja
mov
lea
adc
inc
jne
pop
ficomps
sbb
in
cmp
push
mov
fsts
and
add
mov
cs
inc
mov
sub
mov
rcrb
add
into
add
aam
push
xchg
dec
sarl
sub
and
sbb
sahf
mov
jge
add
leave
sbb
xorl
sbb
scas
fcmovnbe
adc
xchg
jge
inc
mov
fidivrs
pop
sub
cmp
les
mov
dec
mov
fsubs
sub
adc
adc
xor
add
out
lret
push
into
mov
sub
ret
sbb
sub
test
cmp
fld
repz
outsb
jnp
lods
popl
mov
stos
xor
fwait
sbb
and
call
sbb
mov
loopne
push
sbb
cmc
dec
arpl
mov
push
xor
aaa
jae
dec
pop
mov
or
add
cmpsl
push
std
std
pop
cmc
mov
mov
ss
inc
test
stos
xchg
mov
pop
lds
jne
bound
aam
xchg
inc
ret
stos
loopne
xor
jp
adc
xchg
es
sbb
pop
mov
out
cld
mov
popf
jl
jge
repz
fists
movzbw
pusha
das
mov
pop
stc
mov
dec
mov
push
repz
and
adc
lods
sarl
scas
push
sbb
jne
xchg
out
sub
fisttpll
push
in
add
movsb
inc
sbb
jne
mov
daa
and
cmp
push
mov
adc
jmp
sbb
stos
inc
fists
enter
add
adc
jno
lock
dec
dec
jb
mov
jb
xor
xor
sbb
cli
dec
inc
aas
inc
push
inc
mov
dec
fildll
int
push
les
xchg
loopne
lock
in
ss
xchg
pop
mov
and
xchg
int3
pop
aas
shrb
mov
fdivl
shll
repnz
pop
popa
fs
fs
mov
xchg
loop
push
ss
mov
xor
mov
mov
cli
mov
data16
outsl
and
dec
in
inc
mov
xorl
sbb
xchg
dec
sti
mov
mov
jns
mov
cmp
mov
subl
push
pusha
jae
cli
jno
mov
arpl
lea
ljmp
jae
sub
fwait
les
add
pop
repnz
cld
sub
jp
pushf
aad
pop
adc
mov
lods
mov
lock
inc
jo
jl
lods
out
cmp
push
sub
sbb
or
cmp
pop
ja
ret
pop
xchg
out
ss
mov
cmp
sub
out
mov
loopne
mov
push
loop
cwtl
jbe
out
sub
push
mov
gs
push
mov
mov
nop
jp
sub
stos
add
in
pop
dec
or
pop
sub
fs
and
lock
ret
movsb
or
sahf
dec
mov
aas
mov
cmp
sub
fnsave
push
push
lahf
sbb
movsb
leave
faddl
sub
sub
les
pop
movsb
inc
jno
jns
fbstp
neg
push
cltd
enter
mov
add
push
jo
cmp
xchg
js
cld
add
jno
in
add
push
jg
xor
xor
ret
xchg
jge
faddl
mov
sbb
adc
or
pop
add
in
mov
add
rcll
mov
into
lcall
jo
jnp
adc
jno
mov
and
ds
sub
fisttps
jae
addr16
in
dec
div
mov
add
xor
jo
dec
cwtl
add
or
mov
adc
add
hlt
std
xchg
mov
inc
sarl
pop
shll
ss
test
cs
pop
inc
test
mov
dec
scas
mov
mov
sbb
inc
test
mov
dec
je
in
fidivrl
xchg
ss
push
fs
insl
dec
xor
in
lahf
mov
xchg
into
ficoml
sub
pop
iret
sbb
pop
mov
lret
outsb
fstpt
xchg
loope
or
dec
mov
ja
and
loope
nop
adc
cli
mov
mov
cwtl
popa
xchg
or
sub
mov
jbe
sbb
jle
add
and
lret
add
pushf
mov
clc
mov
std
sbb
ss
aas
jge
fsub
stos
mov
mov
sbb
daa
sbb
xor
sub
or
jno
es
hlt
shlb
fs
pop
or
add
call
fisttpll
out
adcl
sub
pop
aam
xor
jl
stc
mov
dec
data16
cld
cwtl
push
xchg
or
pop
jne
adc
xchg
dec
xor
add
xorb
cmc
imull
jo
inc
addr16
xlat
bound
pusha
and
shrb
in
jno
mov
lea
xor
xor
adc
test
and
popa
rol
sbb
mov
push
or
jl
sbb
sbb
sbb
jae
mov
xor
je
outsl
cltd
std
jmp
fcmovnu
jmp
rcrl
cmp
dec
fisttps
aam
inc
sbb
rorl
rol
aam
outsb
lret
and
cs
adc
leave
lock
cltd
mov
gs
fsubrs
xor
lods
sbb
fdivs
lods
in
inc
lods
push
pop
jmp
jp
sahf
cs
sahf
inc
sub
mov
inc
stos
in
jnp
push
arpl
sub
adc
loop
sbb
addr16
or
sub
out
pop
jmp
movsb
repnz
mov
aas
aas
cmc
inc
ficoms
push
ret
insl
test
and
pop
aam
pop
push
pop
test
rcrb
push
lahf
sahf
pusha
int
ror
repnz
js
sub
xchg
mov
lock
sbb
lret
or
mov
mov
repz
js
jb
mov
push
out
pop
mov
mov
lds
lds
pop
lret
lret
sbbl
xchg
insb
add
mov
mov
lock
mov
add
fadds
cs
mov
jb
imul
sub
aam
das
mov
loopne
sbb
rcll
cmp
jo
mov
xor
sbb
test
xchg
cwtl
cli
ror
push
insb
out
adc
sbb
test
shll
fdivl
mull
mov
lar
das
popf
popa
xlat
pop
adc
mov
sti
add
scas
adc
lahf
stos
clc
stos
cmp
aad
sub
mov
inc
test
lcall
xchg
xchg
jae
or
xor
int3
and
sub
rcl
jo
out
jo
lds
jnp
les
pop
xchg
aad
mov
aam
hlt
and
lahf
and
cmp
adc
lret
mov
mov
rcll
lret
jl
mov
push
sbb
fsubr
mov
lock
shll
dec
dec
sbb
lods
aas
pop
stos
jo
mov
xchg
mov
mov
cmp
add
iret
test
mov
mov
jecxz
jb
and
push
cltd
mov
cld
movsb
fmuls
and
jb
or
loope
push
sub
mov
add
stos
std
and
dec
lods
lods
lret
cmp
lods
ret
scas
pop
inc
add
dec
andl
pushf
pop
into
icebp
xlat
xchg
pop
push
out
and
mov
dec
mov
pop
ror
push
mov
xchg
je
pop
mov
jge
xor
movsl
jae
test
jecxz
test
lcall
outsb
ja
mov
rep
leave
bsr
and
daa
arpl
clc
push
shrl
jno
cmp
add
cmp
cmp
jns
addb
xchg
push
fs
xor
jg
lea
mov
add
sti
sub
mov
adc
int3
push
out
sub
bound
shlb
cmc
lods
sbb
leave
xchg
into
mov
xchg
mov
stc
cld
pusha
or
lds
scas
pop
push
movsb
or
pop
rcr
insl
cmp
popa
add
mov
loopne
mov
testb
aaa
inc
and
leave
jno
xchg
fwait
cmp
adc
lea
data16
sbb
ret
push
imul
enter
and
xchg
sub
inc
mov
cmc
inc
pop
daa
or
cltd
subl
xchg
gs
push
pop
pop
lea
lods
das
inc
mov
mov
xor
xlat
mov
push
mov
test
aad
in
sub
xor
gs
cli
push
xchg
scas
fidivs
jmp
lret
imull
out
push
jbe
hlt
popa
jp
std
lds
pop
stc
lds
popf
push
imul
jne
movsl
xor
aam
loope
or
push
mov
push
mov
inc
sti
inc
movsl
sahf
adc
jmp
pop
jmp
pop
and
fwait
push
mov
lahf
lea
rolb
rorb
add
pop
mov
test
stos
adc
pop
mov
mov
aam
dec
in
inc
jbe
fiadds
add
mov
out
nop
insb
xlat
xchg
and
dec
xorl
sub
andb
mov
leave
pause
xchg
int3
xchg
pop
jns
dec
xchg
movsl
sbb
addr16
ja
outsl
push
or
adc
loope
dec
hlt
inc
push
xlat
mov
push
fadd
lods
out
fstpt
int
cmpsl
xchg
aad
xchg
pop
mov
ljmp
stc
xor
mov
mov
lds
arpl
mov
loopne
loopne
fwait
iret
icebp
mov
pop
ljmp
pop
inc
push
pop
orl
sbb
push
and
in
adcl
push
std
adc
mov
adc
sub
scas
jne
jno
cld
cltd
lret
or
and
sarb
xchg
and
imul
loop
adc
mov
jae
mov
mov
int3
pusha
mov
sbb
sub
inc
inc
push
xchg
sub
fistpll
jns
ja
push
mov
les
inc
rcrb
or
or
mov
jg
mov
sbb
sub
test
mov
cmpsb
int3
push
pop
xchg
pop
jo
pop
mov
xor
lds
xchg
add
lcall
mov
pop
fiadds
xorl
aam
mov
mov
push
xchg
sub
mov
rorl
arpl
or
sqrtps
add
xchg
dec
aad
ret
iret
push
loope
sbb
sbb
cltd
gs
std
lret
sbb
mov
jb
or
dec
int
xchg
dec
mov
xor
lea
mov
mov
das
aam
jns
nop
adc
hlt
dec
ret
gs
and
jbe
mov
xor
jp
mov
test
imul
adc
stc
jp
out
mov
pop
jp
add
cmpsl
mov
jo
divb
lds
jno
xor
sub
push
aaa
loopne
xor
or
rcr
rcl
lea
mov
push
xchg
gs
sbb
cmp
out
inc
jne
adc
pop
test
inc
cmpsl
sbb
stos
add
ja
mov
sub
out
xchg
or
addb
inc
xor
xchg
pusha
cmp
std
pop
cmp
sbb
out
sub
mov
xchg
cmpsb
adc
movsl
inc
ficompl
adc
int3
lahf
scas
cmpb
call
inc
lock
jno
or
sub
xchg
sub
nop
in
or
push
jnp
xor
in
movsb
imul
arpl
imul
push
fadd
push
fsubl
sti
js
xchg
loopne
mov
mov
sti
xchg
mov
jmp
sti
push
sbb
dec
jae
ret
push
mov
fwait
in
jg
fxtract
mov
jl
imul
xchg
push
test
iret
sub
call
mov
repnz
jb
xor
mov
and
dec
adc
call
jns
int
xchg
sbb
lea
mov
nop
ud2
enter
cwtl
cmc
adc
push
and
fisubl
test
jge
cld
fs
push
inc
dec
cmp
mov
xor
mov
xchg
sub
adc
mov
movsl
push
sbb
add
sbb
push
jb
roll
subb
js
mov
mov
std
mov
leave
lock
pop
out
jno
dec
jns
pop
pop
pop
gs
and
fnstenv
stos
xor
jb
inc
push
fisttpll
pop
cli
xor
cmpsb
and
sbb
icebp
push
cltd
dec
jb
or
jecxz
add
sbb
adc
sub
cmp
sti
loopne
and
scas
jbe
shrl
mov
mov
xchg
jbe
or
lods
xchg
imul
dec
xor
lahf
cmp
test
cmp
out
xor
pop
ja
mov
and
loop
push
inc
aas
bound
cli
es
stos
inc
ja
outsb
out
pop
or
jl
add
mov
pop
add
mov
fwait
mov
inc
mov
lret
int3
fwait
xor
adc
fwait
hlt
inc
push
lahf
sbbl
insl
cmpsl
std
leave
shll
clc
jle
pusha
popa
dec
arpl
mov
insb
cmp
fstps
fs
fmuls
aaa
test
xchg
push
push
xor
test
adc
and
bound
adc
jne
lea
xchg
lea
push
pushf
adc
pop
cmc
test
ds
dec
pusha
sbbb
inc
mov
dec
adc
popf
fsubrp
stos
daa
lods
call
les
clc
rol
fdivs
mov
dec
mov
push
adc
stc
sbb
mov
lea
lahf
pop
and
push
mov
enter
jo
loopne
shll
mov
mov
call
loop
mov
inc
jge
mov
movsb
das
pop
popa
ffree
lea
mov
mov
daa
or
jge
stc
jb
insb
jbe
and
jb
js
push
outsl
sbb
ret
mov
mov
inc
sbb
repz
ja
xchg
cmp
or
shll
and
jg
add
aaa
cmp
dec
mov
scas
inc
aaa
sub
fisttpl
insb
lods
adc
fbld
push
addr16
jnp
xlat
clc
lods
mov
mov
call
jle
inc
out
cmp
fisttpl
dec
lds
dec
pushf
inc
ret
iret
mov
sub
fnstenv
or
hlt
jae
cwtl
mov
xchg
cmp
cmp
xchg
fadds
filds
pop
add
sub
xchg
pop
pop
repz
lahf
mov
popf
and
add
lds
add
dec
out
xchg
or
mov
cwtl
fisttpll
sbb
sub
arpl
and
call
repnz
lret
cs
popf
iret
outsl
push
push
mov
mov
cmp
popa
insl
loope
test
mov
pusha
xchg
movsl
nop
imul
add
roll
cltd
xchg
mov
lret
ja
insl
cmc
or
xchg
fsubrp
jnp
imul
popa
imul
add
cmp
pushf
push
cmp
adc
popf
push
sbb
inc
cmpsl
adcl
push
lret
cmp
das
mov
mov
jb
add
outsb
call
push
pop
ret
cmpsb
mov
call
fstps
mov
rcr
add
or
mov
call
push
mov
jbe
ljmp
or
dec
popa
cmp
and
gs
pop
push
insb
out
test
jb
mov
cmp
leave
adc
lods
test
mov
inc
scas
cmc
sub
jmp
or
pop
aas
jle
fwait
ljmp
push
int3
pusha
subb
bound
or
lret
mov
mov
cld
push
adc
add
test
imul
repz
fwait
cli
mov
pop
inc
xchg
pop
repnz
pop
inc
xchg
icebp
repz
ss
dec
in
shrb
dec
push
rcr
dec
jg
add
sti
in
or
xor
jp
je
imul
aaa
fcomi
inc
pop
jl
cli
fstps
ret
loope
jle
dec
xchg
test
sbb
pop
sub
mov
dec
shll
hlt
adc
es
mov
into
ja
cmp
sbb
stos
negb
adc
push
iret
cli
adc
xchg
mov
rolb
jmp
insb
inc
adcb
add
inc
test
pop
add
dec
dec
es
push
out
lock
aad
dec
lods
add
jge
scas
pusha
sub
xchg
in
fldl
out
xchg
jg
push
imul
xor
push
xor
dec
add
popf
mov
imul
jno
cmp
mov
push
mov
inc
sbb
pop
repnz
insb
cmp
adc
jle
ds
shll
and
aam
sub
mov
pop
das
or
inc
mov
insl
fs
mov
bnd
inc
mov
mov
lahf
cmpsb
stc
rol
cmpsb
jns
xchg
mov
outsb
or
fstpl
out
test
push
mov
push
lods
cmp
das
pop
mov
orl
mov
xchg
sub
dec
mov
xchg
aas
mov
pushf
int
lcall
xchg
ret
outsl
lcall
pop
jbe
cmp
fsubrl
xor
xchg
sbb
adc
add
in
xchg
subb
cmp
sbb
xchg
xchg
out
adc
lock
pop
in
add
enter
jnp
cli
xchg
call
out
push
popa
mov
lods
push
pop
lds
sub
push
aaa
mov
push
loop
imul
add
push
xchg
inc
lods
bnd
pop
enter
iret
sbb
jns
hlt
push
mull
imul
push
mov
lds
dec
mov
and
or
dec
loop
jecxz
fmuls
std
jl
ds
cmp
aaa
sahf
jne
cmp
bound
jnp
add
dec
jb
xor
sub
push
push
dec
sub
dec
ja
push
dec
push
and
andb
je
and
jnp
jnp
and
sub
pop
cs
sub
push
ss
imul
aaa
andb
es
jg
jl
and
addl
inc
popa
jae
dec
cmp
push
push
or
and
cmp
gs
and
dec
insb
dec
jl
xor
sub
xor
and
pop
bound
subb
and
jns
and
imul
push
daa
pop
and
and
jnp
dec
xor
inc
inc
push
jne
and
and
sub
inc
inc
sbbb
jne
ds
cmp
push
push
dec
push
or
and
imul
sub
jae
cmp
pop
pop
dec
xor
push
jo
outsl
dec
sub
push
add
add
pop
cmp
jl
inc
jle
jp
pop
imul
arpl
cmp
push
inc
and
xor
dec
sub
sub
jns
inc
pop
inc
cmp
push
dec
push
push
inc
cmpl
pop
gs
jg
pop
and
and
and
push
jo
outsb
xor
add
popw
cmc
inc
sub
jle
dec
aaa
dec
daa
data16
imul
jnp
fs
push
push
pop
pop
sub
dec
cmp
inc
push
aaa
xor
cmp
cmp
xor
xor
xor
xor
xor
xor
xor
aaa
ss
xor
inc
xor
aaa
cmp
inc
inc
xor
inc
inc
inc
cmp
xor
inc
inc
inc
inc
inc
inc
