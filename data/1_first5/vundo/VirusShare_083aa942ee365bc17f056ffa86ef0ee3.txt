call
ljmp
es
bound
cmp
jge
mov
je
inc
popa
mov
out
jne
cmpsb
shrb
jp
lahf
inc
mov
inc
add
xchg
xchg
cs
in
pop
cs
shr
push
jbe
mov
xchg
adc
mov
dec
mov
pop
pop
cs
pop
pop
add
stos
dec
pop
sub
stos
mov
inc
mov
loope
mov
jns
sub
mov
call
rcll
loop
mov
push
cmpsl
and
xchg
repnz
mov
add
lea
mov
and
add
jecxz
jbe
test
jb
pop
lret
adc
cmp
and
fsubrs
mov
imul
cltd
mov
xchg
dec
in
cmp
inc
shrl
dec
add
inc
cli
inc
add
pop
bound
bound
dec
pop
cmp
sub
outsb
dec
pop
sub
push
mov
adc
fbld
adc
dec
jge
ret
mov
pusha
rclb
mov
xchg
testb
mov
inc
push
rolb
pusha
adc
mov
shl
xchg
scas
shlb
push
enter
jmp
lods
pop
les
in
dec
cld
pop
cmpsl
jmp
adc
out
stc
test
pop
dec
jbe
xchg
test
testl
lds
pop
rcrl
add
add
sub
leave
xlat
les
pop
push
jbe
push
stc
sub
add
xlat
lods
stc
pop
dec
mov
mov
mov
inc
bound
fisttps
mov
fbstp
push
cmp
cmp
test
pop
popf
pop
mov
push
les
movsl
xchg
call
or
cmpsb
sbb
and
pop
mov
cmp
dec
dec
mov
xchg
popa
mov
cld
xorb
int3
out
sbb
nop
mov
mov
xor
dec
mov
in
adc
add
mov
adc
xor
xchg
popa
jge
cmp
aam
andb
dec
test
and
and
and
imulb
pop
inc
test
mov
ds
mov
push
mov
or
hlt
pop
mov
adc
xchg
xor
xchg
jmp
out
sub
xcrypt-cfb
cmpsl
bound
xor
dec
xchg
aam
icebp
enter
lock
cmp
sbb
add
add
adc
rcll
inc
push
out
sbb
sub
adc
dec
fwait
or
into
gs
out
or
mov
mov
jo
test
sub
and
cmp
sahf
into
movsb
inc
stos
and
sbb
stos
or
push
mov
xchg
mov
and
sbb
xchg
adc
sbb
mov
push
aas
jecxz
int3
adc
jno
sub
scas
xchg
pop
mov
jne
inc
das
push
and
pop
rclb
movsb
das
mov
dec
lret
jbe
and
adc
popa
xchg
and
sub
mov
das
push
clc
jl
popl
jne
lret
test
fisubrl
lcall
inc
popa
cmpsb
adc
aam
imul
mov
in
sub
xchg
lods
inc
hlt
ljmp
push
push
rclb
mov
inc
dec
mov
pop
or
cmpsb
and
sub
xlat
or
cwtl
lods
stos
lods
imul
fs
repz
add
test
or
pop
mov
jbe
mov
test
dec
iret
xchg
xchg
repz
pop
cmp
lret
loop
jb
push
imul
mov
cmp
lcall
fmul
movsb
and
mov
mov
cli
mov
ljmp
adcl
lods
mov
push
fstps
iret
mov
adc
fstl
fcmovbe
dec
cmp
xchg
pop
sti
add
imul
inc
sarb
movsb
xor
aad
adc
cwtl
sub
xor
popa
jnp
rolb
xchg
test
bound
dec
orb
or
notb
lcall
leave
pushf
adc
aad
mov
dec
mov
mov
mov
jne
mov
in
mov
push
lods
movsb
loope
mov
out
sahf
or
mov
jae
add
mov
mov
or
sub
pop
jnp
dec
jp
aam
pop
shll
into
incl
xchg
xor
jp
imul
push
pop
pop
mov
fdivrp
dec
push
push
sbb
sarb
lock
push
cwtl
jg
xor
xor
and
pop
andb
fwait
push
jg
pop
mov
adc
sub
dec
add
cltd
mov
scas
inc
cmp
mov
popa
mov
fldenv
push
cmpl
mov
xor
adc
push
and
sub
fistl
mov
call
popa
je
fdivs
sub
adc
cmovno
repz
push
xor
adc
or
mov
mov
add
push
ljmp
sub
push
push
enter
cs
mov
rorl
xchg
xlat
xor
xor
outsl
fucomi
repz
push
xchg
adc
out
negl
fisubrl
and
out
sub
mov
cmp
push
sub
inc
adc
mov
jno
pop
jno
movsb
stc
cmp
inc
ret
loopne
sti
inc
sbb
repz
push
and
xor
fnstcw
loope
jne
jge
pop
fsub
aam
mov
pop
repnz
icebp
and
dec
add
xchg
cmpsl
xor
fdivrs
andb
inc
sbb
cli
pop
in
cmp
loop
mov
and
pushf
cmp
mov
push
test
push
aas
jmp
addb
push
push
aad
repz
pop
fstpl
add
jns
sti
jae
jecxz
test
aad
and
gs
dec
pop
mov
sbb
or
aas
ljmp
rorb
push
dec
scas
jne
inc
imul
fmul
sub
xchg
fdivrp
repz
mov
xchg
movsb
jae
xchg
enter
sub
in
pop
and
incl
push
mov
add
add
add
mov
imul
test
pop
stos
icebp
push
dec
aam
sbb
mov
sub
xchg
clc
xchg
dec
not
push
gs
xchg
pop
pop
aam
enter
movb
popf
cltd
fstpt
xchg
bound
push
cli
dec
in
mov
hlt
sbb
inc
int
and
cmpsb
dec
cmp
fwait
dec
inc
inc
fistpll
cmp
aaa
imul
sbb
jns
sbb
xor
clc
rcr
aaa
pusha
scas
mov
rorl
dec
mov
jg
test
add
sbb
popa
lcall
inc
loopne
daa
into
cmp
sub
pushf
push
pop
popf
push
loop
jg
daa
enter
sbb
and
jae
bound
pop
mov
mov
insb
ret
xchg
dec
pushf
dec
out
add
sub
jge
inc
movsb
add
sar
inc
movsb
std
test
inc
dec
ds
adc
xchg
imul
loope
enter
mov
inc
loop
jbe
push
push
pop
jl
cltd
jae
xor
test
mov
lret
stos
mov
bound
loop
std
test
sbb
fidivs
in
push
xchg
lea
inc
mov
adc
jecxz
je
in
dec
jnp
js
add
jle
jbe
inc
stos
dec
punpckldq
rorl
push
mov
test
dec
insb
mov
xor
lret
mov
push
add
out
add
xchg
mov
rolb
pop
repz
icebp
sbb
pop
pop
jmp
mov
sub
mov
gs
jno
lret
push
and
jnp
mov
jns
or
mov
lock
inc
pop
mov
xchg
mov
adcl
jp
push
mov
cmpsb
notb
inc
xchg
pusha
push
sbb
pop
rcrl
and
inc
pusha
mov
dec
data16
xlat
push
cmp
mov
pop
ret
out
mov
in
scas
aas
pop
adc
cmpl
and
and
sub
movsb
jno
fs
sbb
imul
xchg
push
ret
pop
inc
jne
pop
jecxz
je
push
fisubrs
rolb
es
push
mov
scas
xlat
in
mov
sbb
daa
dec
xchg
pop
jae
lock
push
sbb
gs
stos
mov
fiaddl
mov
jg
leave
das
push
pop
and
cwtl
hlt
dec
sbb
dec
data16
jnp
pop
jnp
test
stos
fsubr
inc
and
push
je
pushf
push
daa
sbb
pop
mov
lret
mov
jno
cmp
adc
xchg
add
cmp
cmp
lods
mov
mov
or
inc
adcb
jne
aaa
out
push
scas
jp
mov
and
lods
imul
sub
jbe
adc
jno
lods
enter
dec
mov
push
jno
scas
pop
jae
xchg
xor
jl
aas
mov
xchg
pop
add
ja
pop
xchg
hlt
sbb
test
add
xlat
outsl
test
push
or
scas
testb
pop
jne
movsb
mov
repnz
lea
mov
push
xorb
and
mov
dec
push
int3
stos
js
mov
arpl
and
cmp
int3
mov
push
cmp
sahf
std
inc
push
mov
ffree
stos
push
xchg
mov
cs
pop
sbb
loope
mov
adc
cwtl
pusha
dec
adc
sbb
xchg
pop
jns
cmp
xchg
pop
mov
jns
lcall
repnz
sub
sbbb
fiaddl
fstpt
into
repnz
push
push
icebp
mov
movsl
aam
pop
push
cs
sub
mov
or
sbb
add
push
push
push
cmp
and
jno
xchg
xor
jb
push
dec
dec
fwait
mov
mov
aas
or
pop
ljmp
shll
pop
xchg
jo
arpl
inc
lahf
mov
and
push
dec
pushf
push
xor
lret
lret
add
adc
fnsave
sti
jp
insl
push
fsubrs
sarb
imul
cmpsb
push
xor
sub
decb
sub
xlat
call
hlt
test
push
in
push
cltd
stc
fcomp
notl
inc
add
aaa
sub
loopne
push
test
adc
jg
rolb
sub
ds
orb
imul
and
cld
push
mov
loop
cmp
push
fsubl
aaa
push
add
pop
fcompl
lea
shrb
sbb
lahf
xor
adc
jns
mov
adc
push
mov
popa
jp
shll
mov
cmp
xchg
insb
sbb
outsl
ficoml
push
jg
jns
adc
js
icebp
clc
repz
cmpsw
popa
and
adc
imul
aam
int3
dec
add
lea
push
mov
divb
xchg
mov
mov
sahf
and
ds
push
lds
stos
lahf
mov
repnz
sub
adc
push
popf
fldenv
inc
negb
aad
push
mov
cltd
aam
mov
out
pop
in
lret
mov
dec
sub
sub
mov
cld
sub
fwait
nop
sarb
mov
inc
shrb
mov
into
push
das
push
popf
or
addl
sub
or
add
mov
cmovno
push
shr
push
or
cltd
cld
aas
jnp
or
push
in
dec
pop
or
ja
test
scas
test
mov
sub
push
cltd
cld
f2xm1
push
pop
and
ljmp
fimuls
jmp
mov
or
loopw
mov
icebp
add
mov
mov
aas
imul
pop
pop
mov
outsb
mov
test
add
ja
xor
push
add
popf
addb
and
aas
dec
mov
rorb
pop
xor
mov
adc
push
adc
scas
roll
fimull
ds
add
mov
mov
push
and
jg
test
or
lcall
push
cmp
loopne
or
mov
int3
repnz
movsb
add
mov
cmp
lods
inc
shll
dec
std
mov
push
cmp
in
addr16
sarl
dec
enter
mov
stos
fstps
pop
sub
mov
sbb
dec
jbe
adc
pop
cmpsl
add
aaa
mov
jae
xchg
xchg
nop
sbb
repnz
out
cld
pop
and
into
shrl
mov
inc
aaa
das
test
daa
lret
flds
stos
push
stos
fdiv
cmp
test
leave
and
loope
mov
inc
movsl
push
add
sub
pop
cmc
sbb
outsl
pusha
icebp
out
ret
fwait
pop
sub
push
jl
cltd
xor
in
aad
fcompl
ret
cmp
xchg
loope
int
cmp
int
push
inc
lods
lret
xor
out
dec
push
lret
in
movsl
out
or
outsl
mov
test
mov
mov
or
mov
xor
cmp
lahf
add
in
outsb
es
cwtl
rcrb
test
adc
in
xchg
mov
scas
jo
rclb
xchg
scas
dec
mov
mov
scas
lahf
lods
gs
in
imul
push
test
fsubrs
clc
enter
push
sbb
ret
pop
aam
push
enter
push
je
xchg
jg
and
cmp
js
pop
fisttpll
add
push
pop
jno
jbe
or
mov
inc
das
or
cmpsb
sub
push
push
or
flds
sahf
ss
cmp
mov
daa
sub
hlt
pop
popa
aam
pop
adc
xor
repz
pop
adc
inc
cmp
mov
xchg
jns
popf
adc
lret
rcl
pop
dec
out
rolb
lahf
arpl
ret
push
mov
lock
cmpsl
call
dec
mov
jl
mov
or
push
fwait
pop
in
add
aas
push
cli
fsubrl
adc
jge
pop
push
jge
out
dec
in
cmp
jecxz
pop
std
stos
mov
push
push
jb
rcr
push
xor
pop
stc
fwait
repz
mov
jle
jo
test
xchg
jno
or
dec
sub
mov
pop
xor
add
pusha
mov
out
mov
adc
stc
sbb
call
iret
dec
fisubl
jns
cmpsl
dec
adc
jno
mov
xlat
sbb
pop
cmp
into
mov
bound
insl
pop
sub
leave
pushf
rcll
mov
fsubrs
pop
and
cmp
icebp
out
pop
mov
add
push
sbb
inc
cmpsl
sarb
call
xlat
pop
mov
jo
adc
or
push
sti
adc
xchg
pop
lods
pop
xchg
sbbl
js
jne
mov
imul
js
popf
adc
xchg
xchg
and
add
test
ror
cwtl
enter
mov
xlat
sbb
mov
pop
jno
fcoms
xchg
push
pusha
fcompl
cmp
inc
mov
lahf
inc
cltd
adc
shl
pusha
notl
and
pop
lea
loope
cltd
push
leave
xchg
test
xor
stos
jle
cmp
addl
jecxz
aam
stc
lcall
mov
pushf
xor
pop
dec
repz
inc
xor
jnp
mov
sti
popa
repz
xchg
adc
popa
lds
adc
and
popa
mov
roll
pusha
adc
pusha
nop
fstp
cld
inc
test
mov
dec
push
pushf
std
xchg
sub
sbb
pop
pop
mov
daa
int
gs
sub
repnz
push
and
and
imul
ljmp
stos
je
cmp
xchg
xchg
mov
addr16
aas
in
cld
popa
fistps
int
xchg
xorb
ds
sbb
push
loopne
ja,pt
es
and
cmp
pop
mov
jno
cwtl
inc
push
push
nop
jo
adc
inc
jle
and
cli
mov
mov
in
pop
shlb
cld
mov
shrb
xchg
dec
cmpb
push
push
cmpsb
rcrl
push
sub
pushf
mov
aad
pushf
nop
adc
movsl
inc
inc
and
push
xor
sbb
in
mov
push
dec
int
out
mov
divl
rcrl
mov
sbb
xlat
loope
cmp
pop
movsl
xor
je
xor
add
pop
or
add
dec
cmp
mov
xchg
mov
add
into
fsubl
add
inc
in
outsb
in
mov
push
push
repnz
or
and
adc
out
daa
xchg
jle
jecxz
insl
or
cmp
pop
out
lret
mov
aas
shrl
sub
shrl
cmp
push
mov
xor
insl
sub
inc
jle
sub
dec
orb
mov
shll
popa
push
dec
mov
mov
popf
xor
ret
inc
pushf
sbb
adc
dec
stos
inc
aas
je
sub
inc
inc
bound
xchg
jp
cmp
enter
mov
cmc
jne
aas
aad
daa
daa
ljmp
jge
scas
fimull
dec
subl
cmp
movsb
dec
sar
push
inc
scas
aam
push
addr16
leave
jecxz
rclb
sbb
cmc
pop
push
sahf
test
cmp
dec
sahf
jbe
imul
jmp
loop
movsb
pop
jp
mov
mov
pop
mov
lret
jg
outsl
jb
in
lods
sbb
or
add
je
mov
mov
and
jne
add
imul
cmpsl
popa
jle
jae
mov
in
mov
lahf
inc
js
out
sbb
xor
fisubs
push
lea
adc
in
mov
xchg
xchg
xor
pop
stos
insl
dec
int3
scas
dec
jns
fs
adc
jge
ja
inc
mov
ret
inc
add
adc
sbb
xchg
adc
movsl
sub
popa
ror
jo
gs
xchg
xchg
inc
jb
aam
mov
fnsave
sub
sti
std
ss
andb
std
insb
lcall
imul
jg
cmp
bound
cmpl
testl
xchg
fs
lock
stos
jp
push
mov
mov
pop
cmp
sub
jmp
movsb
jl
subl
lods
xchg
loop
sti
fsubrl
xor
cmp
dec
mov
push
or
push
xchg
fwait
add
cmpsb
dec
sbb
movsb
mov
addb
xor
inc
pop
test
adc
adc
pop
in
shrl
fsubp
imul
inc
cmp
or
sbb
insb
addb
adc
insl
xchg
adc
adc
push
scas
rorb
stos
pop
adc
adcb
outsl
mov
mov
pushf
cmc
add
cmc
jecxz
pop
adc
push
dec
dec
inc
pop
add
and
adc
jbe
xor
cmc
xchg
push
mov
or
pushf
lods
or
scas
pop
loope
cld
add
jl
xor
mov
je
cs
push
and
xchg
cli
stos
lea
add
xor
add
xchg
sbb
add
loopne
in
lods
dec
add
mov
out
subl
and
pop
mov
mov
pop
mov
dec
xor
rcl
cmp
inc
int
xchg
out
lret
or
mov
rolb
jl
mov
sbb
stos
or
mov
xchg
sbb
push
xor
pop
jecxz
sub
mov
jo
shll
mov
stos
push
in
mov
pop
stos
sbb
push
add
call
xor
jns
mov
lret
sbb
add
dec
and
push
incl
pusha
xchg
push
cmpl
hlt
mov
xchg
jns
clc
outsb
into
rcrl
int3
dec
mov
sub
pop
fimull
dec
div
fwait
stos
mov
sub
outsb
jbe
cmp
add
pop
jne
cs
push
cs
jbe
xchg
ficoms
aas
movb
mov
xchg
andl
es
push
push
cwtl
add
mov
mov
sahf
xlat
jp
fnop
fists
jp
test
sub
cmp
cmp
ljmp
and
inc
in
bound
xor
or
gs
into
inc
sbb
mov
pop
lahf
insl
sbb
addb
sti
sub
test
xor
pushf
test
mov
cmp
pop
mov
bound
mov
icebp
je
mov
xor
pop
adc
repnz
mov
or
jg
pusha
dec
aam
aad
loop
xchg
push
pop
jbe
loopne
popa
push
and
sbb
sub
sbb
lds
xchg
repz
repz
cltd
push
pop
insl
stos
jbe
mov
mov
xor
jo
pop
inc
shrb
pop
stc
push
add
stos
xor
aad
jl
leave
punpcklwd
push
adc
mov
xorb
mov
jp
mov
dec
es
fisubrl
rolb
std
push
mov
xchg
popf
mov
mov
repnz
jp
push
mov
aas
sti
cmp
dec
cmpsl
fildll
int
jae
add
mov
pop
imul
sub
movsb
or
repz
leave
outsl
jbe
mov
inc
icebp
push
out
inc
and
sub
test
jge
jge
dec
xor
fistl
icebp
in
mov
inc
cmp
cmpsl
fisttpll
arpl
xlat
dec
fwait
add
in
add
movsl
imul
cmp
dec
insl
je
dec
in
mov
sbb
and
push
test
mov
mov
lods
jmp
mov
jecxz
rol
add
les
mov
push
sub
push
nop
adcl
inc
pop
aad
mov
movsb
fs
push
lock
das
mov
movsb
xchg
sbb
clc
shlb
pop
iret
insb
pop
push
push
xchg
push
das
inc
shl
push
stos
arpl
fildll
mov
out
outsb
jno
sbb
fldt
jl
cli
xor
mov
movsl
nop
ds
sub
and
sbb
fnstcw
xchg
nop
outsl
xchg
insl
and
mov
lea
repnz
or
je
test
hlt
insw
mov
ret
mov
jo
mov
lea
int
pushf
cld
add
or
iret
sub
mov
adc
adc
ficomps
mov
test
sbb
in
mov
push
and
in
subb
jmp
xor
xchg
push
lods
push
pop
popf
mov
rclb
add
bound
xlat
inc
in
insl
sbb
inc
test
jne
cmpsl
mov
cmp
push
cmpsl
cmp
mov
fnstenv
fcmovnbe
repnz
ror
jle
and
aas
mov
int3
mov
mov
lds
xchg
fs
mov
inc
call
mov
test
mov
test
dec
xor
repnz
int
pminub
inc
sub
inc
dec
push
movb
sbb
dec
in
ljmpw
sti
dec
add
fimull
xchg
clc
push
push
cmp
mov
sbb
sbb
pop
orb
jne
call
cltd
sub
jbe
fstpt
dec
mov
aaa
sarl
cmp
xor
decl
and
std
xor
add
test
pop
mov
adc
mov
aam
out
popf
mov
scas
gs
adc
sub
and
xor
in
or
aad
dec
inc
sub
dec
orl
inc
jae
and
dec
jp
ja
adc
pop
jle
and
popf
loop
push
jle
push
pop
and
addb
hlt
in
push
mov
mov
adc
sbb
push
faddl
fdivs
cmp
and
jo
xchg
push
fldenv
into
sub
xor
lea
bound
xchg
mov
xchg
test
inc
sub
daa
and
nop
insb
dec
mov
test
mov
push
mov
imul
jne
enter
inc
fmuls
ror
push
inc
inc
inc
pop
fiaddl
and
add
cmpsb
cmpsb
mov
pop
pop
loope,pn
mov
or
les
cltd
leave
sbb
add
cmc
stc
fcmovne
xor
stos
and
adc
add
and
or
mov
sti
pop
jle
or
je
and
das
dec
jge
xchg
test
or
clc
test
dec
shrl
xchg
mov
pop
outsl
pop
fwait
lds
cs
insb
sub
or
mov
shl
inc
lret
jo
pop
outsl
cmpsl
popf
mov
int
add
dec
pop
les
jns
push
pop
mov
inc
mov
dec
insl
int3
cld
push
ss
sbb
push
mov
or
sbb
pop
sbb
pop
xor
push
aam
push
imul
add
xor
mov
mov
jne
cmp
lds
mov
pop
mov
push
jo
cmpsl
mov
fstpt
xchg
pop
cmp
add
and
pop
iret
out
fcomps
mov
in
and
mov
adc
push
jl
jnp
int3
xor
and
sub
cs
fstpl
scas
inc
movsb
loop
add
adcb
clc
mov
or
inc
xchg
dec
mov
sahf
sbb
xrelease
push
jge
pop
pop
push
adc
xor
mov
out
xchg
mov
xor
xchg
sub
scas
fs
test
lds
insb
je
mov
lods
dec
movsb
xchg
jg
push
aas
xchg
cmpsb
stos
push
sbb
pop
mov
bound
pop
lret
fiaddl
xlat
inc
test
in
mov
add
inc
mov
cli
xlat
es
adc
sbb
pop
add
outsl
jge
pop
or
mov
push
and
cmp
jb
mov
dec
mov
enter
pushf
adc
or
movsl
into
aaa
cmp
or
shrl
inc
jp
lea
and
ret
out
lock
cmc
aam
lret
movsb
inc
sub
cmc
stc
cld
pop
cmp
xacquire
add
sbb
and
pop
das
sub
mov
push
les
mov
repnz
push
sub
and
mov
sahf
fstl
add
pop
aam
mov
mov
xchg
and
dec
xor
cmp
test
divb
mov
lcall
inc
xchg
les
mov
cmp
aam
inc
mov
mov
inc
fldenv
adc
lret
pop
and
enter
ret
lahf
add
cs
xchg
out
mov
je
cltd
xchg
or
or
xor
and
inc
mov
pop
cmpsl
pop
jae
je
scas
push
adcb
inc
lret
jo
or
cltd
xchg
pop
mov
int3
add
mov
push
cli
rcrl
push
mov
test
and
movsb
mov
insb
cltd
inc
mov
and
fsts
and
mov
push
movsl
add
inc
stc
loopne
repnz
scas
mov
mov
insl
add
dec
shlb
xlat
dec
addb
stos
mov
in
cltd
mov
mov
or
popf
xlat
hlt
adc
adc
shl
scas
fxch
jp
in
mov
or
inc
test
pop
fs
loop
pop
stos
into
pop
jno
push
aad
out
subl
fnstsw
out
cmp
pushf
test
aaa
add
inc
js
sub
ljmp
adc
mov
inc
pushf
imul
cld
test
mov
aas
movsl
ss
imul
adc
gs
pop
mov
cmpsb
jmp
xchg
inc
inc
cmp
std
xor
test
mov
cltd
adc
das
imul
pop
je
mov
push
out
movsb
jnp
lahf
add
and
shrl
mov
add
mov
jmp
cmp
dec
jo
mov
sbb
test
push
and
popf
insl
leave
inc
cmc
add
cmp
mov
cmp
and
mov
jne
mov
rorb
cmp
jns
fidivrs
std
inc
arpl
sub
jg
fisubrl
imul
add
fldt
inc
mov
mov
xor
jg
pop
scas
mov
mov
js
nop
mov
repnz
mov
mov
mov
cmp
xchg
incl
sbb
aam
inc
jp
mov
adc
adc
push
push
cmp
adc
jge
pushf
pcmpeqw
sbb
and
pop
and
xlat
mov
test
insl
mov
aas
iret
mov
sbb
popa
push
ja
add
out
xchg
dec
in
imul
push
ss
and
jl
cmpsl
dec
mov
push
jp
stos
mov
jae
mov
sub
pop
push
mov
addl
shrl
lods
pusha
adc
sbb
addr16
pop
add
dec
and
lds
pop
das
adc
jne
xor
mov
icebp
mov
fimuls
loop
imul
push
std
out
mov
add
inc
sti
mov
mov
lret
jae
clc
dec
test
pushf
mov
lds
mov
cmp
insl
jg
sub
dec
lods
jecxz
jecxz,pn
aam
clc
sbb
xor
arpl
adc
cmpsb
adc
pop
rcll
adcb
into
daa
xor
add
sub
dec
ljmp
aaa
mov
mov
loope
push
lret
in
add
adc
loopne
mov
les
or
dec
xchg
add
adc
dec
stos
pop
jne
addr16
jbe
imul
scas
subl
jle
mov
xchg
je
orb
xchg
and
inc
pop
mov
pop
add
jae
push
jae
sub
lods
mov
mov
les
xor
repz
pop
pushf
lret
lcall
mov
loopne
or
icebp
jno
sbbl
les
xor
add
mov
pop
fidivl
fcmovbe
inc
daa
push
inc
mov
sti
stos
and
pop
test
inc
mov
mov
pushf
mov
loope
adc
push
stos
cli
stos
shr
xchg
adc
sbb
mov
xchg
sti
inc
mov
mov
mov
lods
mov
ret
mov
les
adcb
scas
shrb
xchg
mov
and
cmp
cs
jae
pushf
add
leave
mov
or
sbb
dec
outsl
pop
es
jb
and
cmp
adc
stos
jl
shrl
sbb
and
fcoml
jmp
pop
fdivl
or
xor
inc
stos
test
sub
pop
mov
pop
sbb
push
and
outsb
pop
jns
enter
mov
loopne
cmpsb
jle
shll
das
push
xchg
mov
pop
andb
ds
jne
shlb
pop
sub
and
lret
push
pop
push
adcb
push
data16
int3
mov
adc
ret
pop
ficoml
sub
notl
add
pop
push
or
xchg
repz
dec
pusha
pop
out
dec
mov
cmp
mov
adc
fldcw
add
addr16
adc
push
nop
xlat
aad
jns
or
inc
mov
push
fmuls
push
pop
inc
lret
in
aad
shrl
ret
jns
repz
inc
les
push
dec
inc
scas
jmp
mov
xor
loopne
movsl
aad
popa
push
or
xchg
lods
jle
outsl
cld
mov
fbstp
mov
adc
pop
out
xor
test
mov
stc
leave
inc
jl
xor
daa
clc
scas
adc
sbbl
mov
cmp
pop
mov
aaa
and
adc
hlt
stos
lods
xchg
mov
xchg
mov
roll
and
das
or
dec
sbb
divl
adc
or
adc
pop
daa
or
inc
or
mov
push
nop
imul
xor
sub
push
jbe
add
int3
or
cmpb
add
je
cli
pop
shll
pop
jbe
mov
lods
fcmovbe
bound
aas
pop
xor
fwait
push
dec
scas
js
adc
xchg
jns
push
mov
xchg
shlb
sub
jecxz
jns
je
test
testl
sub
mov
cmp
out
jbe,pt
add
aad
jns
xchg
jo
fsubs
loop
daa
mov
cli
push
mov
lret
addr16
mov
pop
cmp
sub
push
arpl
jno
mulb
adc
aad
or
sub
xchg
bound
mov
pop
push
push
add
or
inc
in
ljmp
and
scas
and
hlt
mov
stos
cmpsl
into
loopne
dec
jl
dec
lods
ficomps
adc
jnp
lods
roll
mov
push
push
lods
inc
adc
sar
pop
sub
fstl
and
push
mov
outsb
repz
pop
sbb
jp
add
aad
push
and
fucomi
cmp
sbb
mov
das
movsl
dec
inc
xchg
mov
add
push
cwtl
pop
es
xchg
push
pop
pop
or
xor
mov
ret
xor
xor
and
inc
push
inc
js
sub
xchg
pop
into
arpl
add
push
mov
scas
and
aaa
adc
adc
pop
mov
mov
add
fwait
icebp
cmp
xor
gs
xchg
and
pop
inc
mov
add
aas
pop
inc
inc
jae
outsl
sti
fnsave
dec
gs
pop
in
fistps
movb
fcmovu
aam
call
mov
frstor
and
popa
dec
push
pop
outsb
imul
push
mov
push
loop
in
std
push
add
popa
mov
hlt
enter
sbb
das
aam
imull
ja
bound
cli
leave
in
test
stos
jo
and
sahf
scas
stos
sbb
test
dec
clc
adcl
out
roll
out
xlat
sub
xchg
aaa
xor
icebp
fcoms
add
xchg
andb
mov
int3
lea
dec
dec
jmp
xchg
not
bound
aas
or
ss
mov
sub
mov
loope
rcl
inc
mov
xor
xor
dec
pop
mov
xor
fldenv
dec
lods
or
cmp
stos
jne
ficoml
ret
jne
imulb
or
pop
push
clc
ja
pop
xor
xchg
push
cmp
adc
xchg
xchg
mov
add
rolb
inc
call
hlt
mov
dec
or
mov
add
std
push
loope
call
pop
lret
xchg
xor
push
dec
xchg
jge
push
pop
sbb
int3
lea
or
ret
jp
mov
cmp
dec
movb
xchg
mov
daa
std
lret
fsts
sub
or
push
jg
pop
xor
cmp
popf
mov
clc
cmp
push
incb
out
jp
sbb
sti
test
mov
jg
lea
xor
jge
and
aam
enter
rorb
inc
and
inc
and
nop
pop
outsb
jno
mov
jne
add
icebp
or
flds
ret
imul
and
add
imul
pop
mov
rclb
test
adcb
push
loop
ficoml
xchg
sbb
jge
aam
add
jno
loop
xchg
fcoml
add
sub
or
nop
jl
shll
xor
xchg
notl
cmp
scas
daa
jmp
cmpsb
data16
jb
adc
pop
xchg
enter
dec
ljmp
push
mov
xchg
jl
bound
xchg
mov
adc
cwtl
and
ss
pop
dec
dec
adc
mov
subl
pop
push
mov
inc
add
jge
xchg
fmulp
mov
stc
push
es
sti
dec
cld
outsb
mov
test
inc
cld
fidivrl
cmp
jecxz
out
cmc
lea
gs
pop
and
adc
jp
mov
movsb
ljmp
dec
add
test
or
adc
xchg
sbb
out
je
xor
inc
sub
int3
jo
test
xchg
out
lods
bound
cld
ljmp
sti
dec
inc
test
cwtl
cmp
ss
out
das
pop
lret
inc
jb
jp
inc
xor
xor
rcll
testb
sub
aaa
dec
push
inc
mov
mov
jae
jae
xor
and
pop
stc
mov
pop
or
repnz
jge
adc
inc
aam
adc
popf
xor
mov
add
fsubs
and
sub
movsl
fnstsw
add
ds
xor
push
in
or
push
lcall
lods
in
mov
popa
ljmp
dec
add
jle
xchg
or
nop
mov
repnz
fisubs
out
mov
xchg
pop
sbb
or
iret
xor
dec
xchg
inc
pop
dec
mov
pop
nop
aad
in
cmp
test
fwait
stc
add
es
pusha
cmp
jecxz
dec
cmc
stos
jg
and
mov
daa
jecxz
and
xor
mov
arpl
and
je
mov
or
cmp
mov
push
pop
xor
je
decb
add
es
xchg
mov
mov
xchg
sbb
push
pop
push
outsl
xchg
mov
pusha
enter
iret
mov
cmp
scas
icebp
leave
gs
push
in
insl
test
cmp
sbb
stc
sbb
jge
xchg
xchg
aaa
dec
cltd
mov
mov
cmpl
je
push
repz
movsb
repnz
or
push
mov
rorl
pop
dec
add
sub
xor
jbe
icebp
jne
inc
and
xor
jp
mov
cmp
sarl
lret
push
and
in
push
lret
push
xchg
push
push
mov
push
and
xor
mov
jae
mov
sub
cmp
addr16
cmp
adc
fldenv
mov
dec
addr16
xchg
iret
add
sbb
inc
repnz
sti
fidivrl
and
orps
je
pop
lock
repz
or
std
sub
stos
inc
mov
movsb
je
dec
sbb
int
movsl
xchg
inc
out
sbb
out
leave
stos
fisubrs
bound
and
dec
icebp
cmp
sarb
and
pop
push
or
movsl
sbb
cmpsb
loope
testb
xchg
jmp
ss
mov
sarl
cmp
bound
outsb
push
test
mov
adc
mov
add
in
push
sahf
cmp
mov
pop
hlt
push
add
call
pop
sub
sahf
adc
push
out
test
adc
jmp
out
in
lods
loopne
insl
loopne
fidivl
pop
repz
xor
das
adc
mov
cld
das
xchg
pop
jl
shrb
mov
xchg
into
sub
mov
cmp
enter
xor
loopne
iret
inc
scas
xor
add
enter
adc
insl
or
out
mov
sti
sub
xchg
mov
adc
inc
imul
jbe
rcrl
ficompl
xchg
jae
sub
loopne
xchg
xor
pop
out
push
lahf
xchg
push
adc
adc
and
sub
pop
loop
mov
scas
xchg
push
sbb
outsl
adc
popa
inc
mov
out
stc
fidivs
bound
push
out
push
dec
or
inc
or
mov
fldt
add
mov
cmpsb
cmpsb
or
inc
mov
out
push
mov
mov
out
inc
push
lcall
add
or
movsb
push
lods
mov
adc
fcomip
mov
inc
flds
mov
add
inc
in
xchg
mov
ljmp
inc
cmc
in
xorb
mov
push
pop
jne
lds
pop
mov
inc
jge
push
arpl
sub
and
and
aad
movsb
outsl
test
xchg
cmpsl
lods
xor
cmpsl
mov
std
xor
jmp
insl
pop
mov
add
ljmp
add
sub
insb
shlb
nop
aam
les
into
into
cmp
sbb
fwait
ss
push
repnz
gs
lahf
imul
addr16
rorb
int
mov
in
xor
sbb
and
dec
in
aaa
xchg
loop
mov
mov
inc
xchg
andl
sub
mov
push
in
mov
pop
jg
enter
daa
dec
add
dec
arpl
mov
sub
cmp
mov
mov
pushf
arpl
lock
sbb
pop
mov
repnz
cs
fstl
push
dec
loope
cmp
ljmp
ja
pandn
inc
sub
or
dec
popf
xor
push
xor
mov
or
inc
icebp
inc
mov
pop
sub
adc
sbb
mov
add
jg
out
fwait
xchg
xlat
push
push
cltd
and
cmp
inc
cmc
cmp
mov
mov
push
mov
inc
inc
inc
push
mov
lock
adc
sub
hlt
jmp
add
cld
push
cwtl
adc
xchg
sahf
lcall
and
sbb
ficompl
imul
cmpsb
adc
movsb
dec
mov
xor
mov
clc
mov
loope
clc
add
mov
insl
xchg
fs
push
xor
ds
iret
adc
sbb
lahf
dec
repz
and
inc
jns
dec
dec
push
ja
lret
jle
or
fisttpll
pop
dec
lret
pop
jo
pop
jns
xor
and
jns
les
push
inc
jnp
arpl
push
iret
add
cmp
push
inc
push
ret
das
ds
mov
pop
fmull
mov
jno
loopne
dec
lea
ret
xchg
in
cmp
and
add
stos
jb
pop
jecxz
lret
and
out
push
sub
pop
aas
pop
lret
inc
add
push
iret
sbb
add
fistl
addr16
out
inc
cmc
cmp
dec
dec
mov
adc
jp
mov
enter
cli
and
or
sub
mov
cmp
or
push
ret
sbb
insb
and
in
stc
mov
insl
and
or
mov
jae
jns
or
jns
lahf
jmp
or
ja
push
and
js
fiaddl
pop
push
xor
or
fldcw
mov
rorb
imul
in
lock
push
push
inc
scas
arpl
mov
push
xor
es
push
xchg
fldenv
imul
mov
in
je
sub
popa
mov
mov
lea
pop
xor
lret
imul
out
dec
ja
mov
push
mov
popa
shll
test
sub
mov
mov
scas
in
push
js
ss
cmpsl
pushl
inc
pop
add
add
cs
out
inc
scas
push
in
into
lea
aas
js
sbb
sbb
mov
dec
xchg
call
loopne
xchg
xchg
adc
popa
je
dec
sbb
bound
mov
ret
notl
sbb
mov
adc
jbe
call
fisubl
or
icebp
in
sbb
test
lods
insb
xchg
addr16
std
enter
cld
mov
xor
pop
mov
fs
sahf
mov
or
in
jge
out
add
leave
dec
cmp
dec
jp
pop
jnp
imul
mov
push
and
mov
jo
jg
test
lahf
pop
les
mov
or
jmp
popf
dec
jae
jne
cltd
std
data16
adc
sub
mov
lret
shrb
out
lahf
pop
inc
nop
gs
sub
cmpsb
push
icebp
and
pop
pop
pop
jns
ss
test
iret
push
data16
rcrl
push
xor
lea
mov
push
rcrb
aad
call
sub
push
jnp
mov
stos
jns
push
mov
mov
fisttpl
mov
scas
jg
push
inc
stos
push
jo
pop
push
icebp
lcall
data16
mov
xchg
aas
mov
push
insl
and
push
mov
rclb
push
jle
sub
adc
data16
pusha
enter
test
mov
jno
scas
add
cli
jmp
outsl
jb
xchg
pop
add
loop
int3
inc
inc
xor
pop
mov
stos
cmp
xlat
aas
sbb
mov
push
mov
popf
mov
push
rcl
les
cmp
add
cmp
loope
push
xchg
test
xchg
movsl
test
adc
mov
sub
lods
test
mov
in
add
and
add
pop
adc
lahf
cs
mov
mov
outsl
decb
push
and
cmp
in
mov
adc
inc
adc
push
ficoml
aad
inc
ds
mov
mov
jb
inc
loope
jp
movsl
sti
ret
push
dec
jns
stos
les
icebp
and
jg
push
test
cwtl
dec
push
dec
xor
inc
sbb
lret
push
rclb
or
out
dec
rcll
insl
dec
mov
jns
xchg
sbb
rclb
scas
fcmovu
push
cmp
dec
test
jns
lods
or
add
fnstcw
cmpsb
pop
in
push
out
push
mov
xchg
mov
addr16
dec
mov
psubsw
jne
es
mov
imul
cmp
enter
call
xchg
mov
push
test
test
in
cmp
icebp
loope
and
dec
popa
and
inc
pop
xchg
cmp
mov
sbb
pop
xchg
fdivs
mov
jp
sti
dec
lahf
ret
pushf
mov
pop
mov
jnp
loop
dec
ret
fisubrs
into
jecxz
int
mov
xor
bound
imull
push
cmpsb
inc
fsubrl
fnsave
les
gs
scas
lds
pop
dec
jecxz
adc
jae
out
adc
hlt
orb
cmp
pop
mov
popa
loop
mov
movsb
jecxz
arpl
jbe
push
xchg
gs
mul
mov
lea
sub
xor
sbb
mov
ss
xchg
cmp
mov
aam
cmp
xchg
cmp
xor
push
push
nop
sbb
inc
in
sub
sarl
add
xchg
adc
mov
outsl
add
out
and
filds
in
cs
mov
lock
aaa
in
dec
push
and
push
mov
outsb
jno
stos
xchg
adc
inc
adc
pop
mov
stc
mov
scas
jo
dec
push
scas
mov
mov
dec
mov
and
rcr
lods
xchg
mov
cld
push
add
cmp
sbb
addr16
jmp
or
sahf
xlat
mov
stos
fwait
or
stos
arpl
mov
and
pop
rcrb
cmc
xchg
shrb
stos
lret
out
push
mov
sub
push
shrl
pop
test
shl
mov
inc
in
mov
int3
enter
adc
in
in
inc
and
sub
pop
and
lcall
in
sbb
push
adc
sbb
stos
lock
dec
sbb
sbb
mov
push
loop
lea
imul
mov
orl
or
jnp
test
movsl
xor
push
mov
mov
xor
movsb
add
jle
mov
dec
adc
dec
mov
add
test
dec
or
push
mov
dec
fsubs
pop
daa
out
jp
decb
lds
dec
andl
mov
inc
xor
popa
add
test
mov
mov
arpl
jmp
jbe
loope
sbb
and
mov
pop
xor
push
lods
sbb
dec
nop
dec
push
and
mov
addr16
jo
push
pusha
jns,pn
inc
out
mov
icebp
pushf
dec
stc
sub
jle
cli
add
sar
or
cmp
jmp
mov
dec
clc
pop
clc
flds
lea
aad
mov
or
cwtl
jp
xor
sbb
jns
sbb
rclb
sub
fwait
lods
sub
mov
ljmp
push
xchg
inc
and
jne
xlat
jmp
xchg
pusha
lock
mov
insl
ljmp
push
pushf
packssdw
cmp
outsl
xchg
int
fldl
enter
jp
pop
sub
sti
xor
sub
dec
int3
push
add
inc
das
leave
aad
push
dec
bound
subl
or
push
loop
jne
jne
add
adc
sub
je
fwait
ret
ret
sub
ret
mov
sbbb
dec
stos
shlb
dec
jno
fadds
jo
aad
mov
jbe
cmp
dec
aaa
inc
and
rorb
lds
lahf
mov
mov
faddl
lock
fld
mov
xor
push
in
out
out
movsl
jl
dec
sbb
pop
es
hlt
sbbl
or
andl
push
test
enter
imul
dec
fisubs
stos
test
push
adc
cmp
bound
insl
push
xor
push
dec
xor
sti
sub
xor
or
ss
out
jp
mov
sbb
lea
and
xchg
out
jnp
mov
mov
lds
pop
fldenv
mov
outsb
inc
cmpsb
dec
xor
fidivrs
imul
xlat
aam
in
sahf
jecxz
xchg
pop
popw
stos
pushf
sbb
lods
or
mov
adc
in
and
and
mov
lods
inc
and
fisubrs
pop
enter
enter
sarb
sahf
out
dec
adc
sub
pop
mov
mov
pop
mov
js
sbbl
push
xchg
sub
xchg
mov
ss
push
stos
cmp
scas
or
gs
or
das
jo
mov
fstl
jo
add
ret
ljmp
xchg
pop
xor
int
jmp
mov
inc
lret
pop
dec
xorl
adc
loop
pop
mov
mov
xchg
ljmp
inc
jge
jl
cmpsl
mov
in
arpl
ffreep
push
lcall
pop
subl
cli
mov
mov
mov
movsl
push
inc
repnz
outsl
fcomps
mov
shrb
loope
and
xchg
ss
out
mov
mov
jp
int
lods
xchg
loop
outsb
jbe
dec
clc
xchg
lods
sbb
test
xchg
add
pop
int
push
icebp
inc
movsl
stos
cwtl
mov
jo
nop
cmpsl
add
cmpsl
or
pop
lcall
shll
std
sbb
jae
xor
jge
jno
sbb
cmpsb
mov
stos
int3
jmp
push
sbb
sbb
sub
imul
call
bnd
xlat
push
in
stos
scas
sahf
popl
cltd
daa
mov
sbb
clc
orb
int3
lds
filds
ja
push
adc
ret
in
mov
lret
gs
fcmovb
arpl
add
out
sub
nop
pop
jae
popf
pushf
test
fstpl
inc
sahf
pop
push
mov
jge
mov
push
mov
pushf
out
mov
rcrl
leave
push
repnz
sbb
sbb
xor
mov
sub
sub
dec
loope
inc
pop
mov
xchg
inc
inc
cmpsb
xchg
cmp
sub
pop
fistps
inc
jbe
mov
sbb
loop
and
pop
fsubr
pop
cld
adc
adc
lods
mov
outsb
in
mov
push
dec
mov
and
push
xchg
ret
cmc
adc
add
fadd
mov
cs
insl
push
push
jl
and
ror
xchg
sbb
dec
mov
mov
xchg
xor
mov
mov
idivl
je
mov
push
sub
imul
test
sarl
arpl
mov
loopne
dec
testb
sbb
push
sahf
into
enter
pop
ucomiss
repnz
adcb
ds
mov
or
cltd
aaa
xor
scas
aad
shrl
jns
lods
cmp
or
inc
dec
loope
mov
call
ret
jmp
adc
sti
add
or
pop
xor
sub
cmp
jbe
fs
aad
sub
pop
sub
js
out
out
sub
int3
rorl
ficompl
or
cmpsb
sbb
hlt
or
mov
int
add
xchg
inc
sub
addr16
shl
divb
mov
aam
nop
push
pop
mov
cwtl
ja
mov
sbb
mov
les
orl
dec
jo
dec
in
mov
or
pushf
sub
and
addr16
or
cmp
xchg
test
pop
popa
sbb
andl
clc
mov
pop
sbb
loop
adc
xor
imul
push
in
les
and
scas
mov
std
dec
jle
clc
clc
add
jp
dec
rcl
push
int3
ljmp
jns
xchg
pop
push
lret
mov
sahf
or
sub
dec
scas
xor
push
pop
inc
cld
cmpsb
mov
adc
jge
or
xorb
popf
jle
mov
clc
stc
out
sbb
inc
mov
fdivp
xchg
jns
std
daa
inc
test
jmp
xchg
mov
adc
jge
sti
stos
sbb
fwait
inc
push
insl
jle
sbb
pop
jl
sbb
xchg
cltd
ror
and
mulb
es
jecxz
shll
inc
scas
mov
lret
mov
lret
push
jge
dec
jp
mov
test
cmp
adc
dec
das
lret
cmp
fisttpll
xchg
push
outsl
mov
jge
outsb
sarb
insl
push
push
jae
lret
cmp
cmpsb
inc
fcompl
mov
adc
popf
mov
pusha
sub
xor
insb
call
adc
stc
push
lds
sbb
xchg
cmp
lret
xchg
ds
dec
lcall
int3
jns
jbe,pt
cmp
push
mov
imul
xor
sub
rcrb
rclb
inc
pop
push
dec
loop
stc
out
das
cmpsl
sbb
loop
scas
push
fistps
inc
dec
push
movsb
cmp
sbb
sub
cmp
sub
sarl
repnz
or
mov
push
in
scas
cli
xchg
sbb
test
sbb
inc
aas
popa
xchg
std
test
mov
int3
ljmp
jns
lock
stc
test
orb
addr16
pop
dec
dec
fwait
lods
xor
into
push
or
ret
push
push
dec
mov
jecxz
pop
push
jae
mov
jb
mov
cmpsb
fdivrs
jne
jne
loopne
push
mov
inc
sub
inc
and
shrl
loope
jne
mov
sbb
fnstsw
loopne
push
mov
pop
xchg
sub
imul
scas
and
mov
inc
iret
jne
scas
sbb
push
sbb
inc
xchg
cmpsb
orb
jns
mov
loop
rorl
xor
sahf
enter
jp
in
inc
es
and
stc
ja
pop
roll
jno
sbb
mov
repnz
inc
mov
call
rcl
xor
inc
cltd
sbb
pushf
psubw
icebp
jg
dec
xchg
jle
jp
add
punpckhwd
xchg
test
push
mov
push
and
push
add
or
lods
add
shlb
dec
insb
mov
movsl
cmp
in
dec
inc
hlt
push
xchg
fmuls
rclb
add
inc
out
sbb
pop
aas
jne
or
bound
or
jge
pop
xchg
fiaddl
imul
mov
imul
ficompl
lcall
aam
fidivs
and
cli
js
jle
scas
inc
push
rol
orb
xor
adc
repz
js
addb
js
xchg
push
negl
add
cmpsb
mov
inc
rcrl
push
cmpsb
xchg
jnp
and
sahf
ficoms
sub
sub
cmp
lea
mov
or
push
fcom
leave
add
sbb
mov
or
ja
adc
mov
aad
adc
inc
mov
ds
lret
push
jg
fdivr
clc
and
test
push
sub
or
xchg
icebp
adcl
xchg
enter
mov
lock
clc
outsb
and
jg
dec
fwait
push
sub
mov
repz
stc
sub
push
addr16
xchg
stc
ljmp
adc
repnz
jo
cmp
into
sub
add
test
fmul
stos
lahf
nop
stc
mov
fadd
ficoml
fsubrs
daa
hlt
test
cmpsb
loopne
pop
xor
mov
int3
out
push
push
push
scas
fnstenv
push
cltd
shll
dec
xchg
pusha
and
or
and
leave
mov
add
notb
jbe
andb
iret
fmuls
jp
fdivl
adc
xor
jge
movl
xchg
test
cmpsl
cmp
test
sub
popf
pop
jecxz
insb
movsb
jnp
xor
popa
mov
in
push
cwtl
ds
movl
fbld
mov
test
xor
adc
jne
imul
mov
mov
or
add
xchg
jge
clc
aas
push
in
add
jno
pop
popa
inc
leave
cmp
movsl
aas
lcall
cli
fstl
inc
adc
jg
shr
cmpsl
sub
sar
leave
sbb
inc
sar
stos
pop
and
cmp
pop
dec
mulb
pop
mov
call
adc
mov
movsb
shrb
movsl
and
stos
in
imul
arpl
mov
fwait
in
adc
mov
aad
or
push
std
lcall
jl
enter
mov
les
lcall
loopne
flds
mov
mov
lret
mov
scas
add
ds
inc
jmp
jae
pop
movsb
outsl
cld
push
xor
mov
jge
loope
dec
ret
adc
loopne
lcall
lock
or
cmpsl
mov
xlat
pop
jg
jne
adc
jae
mov
mov
mov
scas
jg
fs
incb
push
rorl
and
push
sbb
or
test
insb
or
dec
mov
je
mov
rolb
and
sub
aaa
push
ja
jne
sub
sahf
insl
data16
adc
and
test
or
and
mov
sahf
mov
mov
mov
cli
mov
pop
mov
dec
mov
pop
inc
cmpsb
adc
and
lcall
mov
mov
inc
sti
pop
out
inc
test
movsb
fldcw
xchg
sub
clc
pop
jns
arpl
cmp
rcrl
mov
rorb
inc
mov
outsl
and
cltd
into
dec
out
inc
scas
outsl
sub
outsb
inc
jge
sbb
fucom
dec
out
mov
jg
scas
test
xor
pop
jge
sub
pop
cmp
clc
push
dec
mov
inc
outsl
jns
outsb
push
call
adc
pop
ret
in
push
and
pop
ret
popf
xor
cltd
out
inc
jg
push
test
adc
aas
mov
inc
pop
lods
or
lods
popa
pop
outsl
xor
dec
jp
or
mov
xchg
and
adc
push
and
dec
scas
sub
mov
push
loop
push
xchg
aas
xchg
aad
mov
jne
jge
faddp
xor
cmp
repnz
cld
add
popa
dec
daa
push
or
sbb
dec
lret
sub
out
movsl
mov
jmp
cltd
and
das
mov
mov
sbb
dec
dec
mov
pop
lods
cmpsl
jmp
xor
sbb
test
inc
lahf
adc
cmc
ja
mov
sub
xchg
loopne
push
inc
das
and
dec
add
inc
xorb
xor
cmp
pusha
pop
rolb
mov
mov
add
adc
push
imul
fs
popl
mov
xor
adc
sub
or
xchg
add
pusha
mov
xchg
and
out
cmp
add
repnz
xchg
test
stos
and
mov
rclb
cmp
cltd
call
loopne
aas
test
push
lahf
inc
call
pop
scas
add
dec
mov
arpl
sbb
int3
lret
push
xchg
aaa
mov
repz
and
mov
inc
into
movsb
flds
pop
movsb
adc
mov
div
xchg
or
mov
sbb
sub
xor
pop
cmp
lcall
cmpsb
fcos
pop
cltd
push
add
jl
mov
inc
mov
xchg
das
sbb
mov
pop
adc
cmp
mov
or
cs
js
dec
dec
and
mov
add
cmp
mov
in
lret
repnz
cmp
mov
mov
dec
orb
push
out
nop
xchg
add
push
pop
pop
mov
js
lods
inc
test
lods
enter
loope
out
or
xor
fidivrl
pop
sbb
stos
xor
push
repnz
inc
lods
rcrl
adc
pop
xlat
popa
jno
imul
mov
add
pop
das
lea
dec
out
add
xchg
cwtl
pushf
and
xchg
ds
stos
adc
in
dec
jecxz
cmc
adc
adc
mov
mov
aam
push
sub
shrb
cmc
jnp
loope
out
fwait
int3
mov
dec
rcr
ja
cmp
push
or
sub
jo
dec
inc
bound
rclb
sarb
lods
aaa
inc
jae
sbbl
dec
ficoms
and
or
test
push
xchg
movsl
mov
test
popa
mov
nop
cmc
mov
inc
rolb
and
push
adc
mov
cmpsl
push
jp
iret
shl
in
mov
sarl
dec
xlat
fidivl
xor
jo
sub
xor
dec
in
xor
adcl
dec
mov
pop
in
push
xchg
mov
std
std
pop
push
mov
hlt
loopne
mov
and
call
mov
lods
xor
jns
inc
loop
jg
les
rol
test
out
js
imul
adc
jge
lret
lret
sub
mov
xchg
push
push
ret
xchg
jne
inc
decb
xor
jg
popf
ret
arpl
cmpsl
insb
xchg
stc
mov
sbb
into
pop
fcmovnu
and
push
sub
mov
dec
js
sub
inc
mov
push
pop
pop
and
push
sub
mov
mov
sbb
decl
sub
adc
jmp
jge
and
faddl
sub
dec
pop
lods
cltd
mov
add
jnp
add
stos
jg
out
or
jge
adc
fdivs
push
loopne
mov
test
and
sti
pop
xchg
adcl
add
dec
add
iret
lcall
cmpsb
push
fdivrl
scas
jne
out
call
in
enter
jp
cld
xor
dec
xchg
pop
push
and
sub
fsubrs
xchg
loope
lock
mov
mov
push
fidivrl
xor
mov
imul
and
cld
out
jns
clc
push
xor
testb
or
push
cmpsb
mov
jmp
fsubr
dec
scas
mov
and
pop
mov
mov
pop
sub
dec
mov
pop
les
xchg
xor
inc
pop
negb
mov
mov
ss
fwait
adc
shrl
jno
sahf
mov
push
sub
insl
cmp
cld
fs
adc
fdiv
or
cltd
add
in
icebp
jmp
out
shr
daa
adc
cmp
jns
or
mov
jno
xchg
ljmp
mov
in
inc
outsl
xchg
arpl
iret
or
cmp
jecxz
fs
in
sbb
daa
int
jne
arpl
popf
inc
sti
out
adc
push
roll
pop
pusha
jle
or
fisubrl
repz
jne
mov
scas
cmp
rcr
aas
data16
inc
sbb
out
fdivrp
std
or
xchg
inc
shl
sbb
sahf
movsl
inc
lea
int
cmp
mov
mov
xchg
xor
out
or
fstpt
xor
sbb
mov
sbb
lret
add
loope
sbb
xchg
push
mov
inc
xchg
into
outsb
out
movsb
mov
mov
pop
mov
jg
dec
push
call
test
mov
into
test
lds
jg
mov
jle
pop
outsb
jle
and
jecxz
dec
sar
xor
popa
dec
dec
mov
or
push
lods
dec
out
ret
adc
int3
testl
mov
scas
jle
sarb
xor
push
and
daa
popa
into
add
in
mov
fstpl
inc
inc
pop
push
stos
push
xor
fwait
inc
sub
sub
inc
mov
ja
push
lea
cltd
sub
add
inc
xor
sbb
cltd
inc
lret
push
push
in
lret
push
aam
jno
pushf
sub
add
jnp
mov
push
add
fs
scas
dec
sub
movsl
stc
and
mov
jns
push
es
aad
xor
lock
cmc
mov
cmp
orb
adc
rorl
ja
addl
xlat
jl
dec
mov
cmp
xor
sbb
bnd
loopne
leave
imul
inc
xor
fwait
mov
mov
loop
les
jp
jb
or
scas
pusha
push
add
push
inc
fisubrl
adcl
add
add
shl
lret
and
xor
clc
xchg
sarl
into
popl
xchg
loop
pop
sub
inc
fisttpll
adc
clc
lahf
adc
les
lds
adc
lret
mov
pop
adc
push
xlat
adc
cli
pop
xchg
and
mov
and
pop
fcmovne
jno
dec
jecxz
or
jae
lret
jo
sbb
sbb
cmpsl
std
xchg
orb
xchg
orb
push
js
ljmp
xchg
sbb
sbb
jns
pop
out
es
and
int3
bound
test
mov
mov
adc
stos
or
fnstenv
pop
add
dec
xchg
cltd
iret
shrl
pop
movsl
adc
scas
pop
pop
or
jne
mov
mov
sub
inc
das
repz
js
cmc
jmp
sbbb
out
xchg
outsl
fisubrs
mov
movsb
pop
not
add
pushf
adc
dec
repnz
or
out
pop
ret
lds
xorb
fnstcw
fcompl
mov
cmp
mulb
sub
jecxz
xchg
and
and
in
adc
xchg
sbb
or
sti
xor
in
pop
mov
test
push
popf
mov
scas
in
int3
pop
sub
mov
xor
bound
pop
push
aam
cs
xor
pop
leave
mov
mov
mov
jae
adc
add
gs
enter
ds
push
cmp
das
add
cli
mov
stos
pop
lea
push
movsl
in
sbb
sbb
pop
call
mov
jl
out
cmpsl
or
cmp
inc
cltd
aam
sbb
inc
test
fs
mov
inc
adc
adc
std
dec
push
popa
or
add
loop
inc
inc
movsl
fwait
jle
and
stc
push
add
pop
addr16
xor
fnstsw
int
jnp
cwtl
jl
test
mov
aam
data16
inc
inc
pop
popa
sub
jne
out
orl
mov
adc
pop
sub
push
cmpsb
movsl
mov
mov
fdivl
cmp
inc
jle
adc
or
js
int3
sub
test
add
or
sahf
or
or
jl
in
xor
mov
and
lock
ss
adc
int3
jg
dec
mov
test
push
out
adc
cmp
pop
cmpsb
push
pushf
push
stos
xor
into
adc
movsb
pushf
push
and
int3
enter
repnz
push
pop
sbb
adc
sub
cmpsl
lahf
roll
test
cmp
aad
je
loopne
movsl
adc
xchg
idivl
fs
stos
les
add
sbb
data16
xchg
in
in
mov
shrl
sbb
pop
in
dec
inc
das
mov
loope
lcall
or
and
rorb
stc
jle
in
sbb
insb
arpl
lods
pop
dec
es
jecxz
mov
insb
push
and
mov
les
or
xor
test
xchg
add
xor
inc
stos
adc
inc
ret
fwait
rcll
test
mov
jno
inc
lcall
rcll
sub
lock
mov
icebp
arpl
das
icebp
push
cmp
xchg
repnz
ret
inc
mov
in
ja
nop
push
pusha
fimuls
js
or
aas
or
dec
xchg
rcll
mov
incb
jns
inc
aad
cmp
out
and
daa
fldcw
insl
jb
pop
lcall
out
scas
mov
stc
xor
decb
xchg
das
inc
inc
jnp
mov
mov
rol
adc
mov
jge
cwtl
filds
and
jnp
mov
pop
inc
mov
jbe
jo
and
or
fwait
cmp
or
mov
mov
sbb
pushf
xchg
cmp
xlat
xchg
pop
insl
test
aad
mov
loop
jne
mov
add
jmp
push
xlat
push
push
xchg
pop
popa
xorb
stos
cmpl
or
bound
mov
xchg
push
stc
subb
inc
in
mov
lahf
mov
xor
mov
movsl
test
dec
xchg
push
pop
jb
in
sahf
lea
jne,pt
cmp
hlt
test
fisubl
adc
fwait
leave
pop
xchg
xchg
cmp
and
gs
mov
adc
pop
sub
mov
movsl
push
adc
cltd
mov
mov
jne
fistpll
adc
scas
pusha
jmp
mov
test
and
stos
xor
nop
out
fadds
lcall
push
ret
jl
pop
cmp
lahf
and
icebp
lods
mov
jecxz
xor
pop
sub
and
iret
push
fsubs
adc
cmp
fucom
loope
push
sub
cmpsb
pop
push
stos
loope
mov
inc
jge
mov
adc
cmp
lret
jne
cli
outsb
add
shlb
mov
adc
xorl
xchg
loope
adc
rcll
jo
imul
out
pop
add
dec
xor
lcall
or
jp
and
decb
sub
push
or
add
xor
cltd
adc
rcll
lret
inc
in
int
dec
cmp
and
push
popa
mov
jb
cmp
or
js
pop
add
mov
sbb
jge
cs
mov
sub
add
pop
push
inc
stos
push
add
xor
dec
in
jp
andl
mov
mov
cmp
cmpsb
mov
xor
xor
push
mov
jb
xor
inc
ret
sub
into
jl
int
inc
or
pushf
mov
adc
or
add
pushf
faddl
or
jo
mov
cmp
mov
ret
push
jne
xchg
cmp
or
and
inc
or
push
cmpsb
das
icebp
test
bound
ss
push
push
inc
inc
jno
in
and
aas
inc
rcr
or
mov
aam
stc
repnz
lock
cmp
shrb
insl
es
or
sahf
arpl
test
test
sub
inc
stos
aam
or
fstps
notl
andb
add
mov
and
pop
cltd
inc
fidivl
neg
jbe
ror
enter
and
dec
lcall
mov
xchg
sub
fcomi
mov
inc
pushf
je
lds
test
mov
test
lcall
mov
fwait
ja
inc
mov
test
mov
out
push
cwtl
fcompl
inc
filds
pop
scas
lahf
out
cmp
dec
push
mov
sahf
cltd
jl
notb
adc
push
jnp
jno
jno
fidivs
mov
mov
jge
jae
pop
pop
mov
mov
scas
mov
movsb
inc
fsubs
jg
adc
xchg
cmp
lahf
lea
mov
pop
insb
mov
xchg
adc
enter
popf
or
inc
dec
popf
cmpb
cmp
inc
xchg
stos
pop
cmp
lea
jp
adc
add
xor
and
stos
shll
jmp
pop
mov
inc
pcmpgtd
inc
sub
rorb
loopne
push
call
dec
push
fwait
lret
xlat
rclb
add
rcrl
ja
loope
and
push
dec
dec
cwtl
shlb
aam
inc
es
test
fsubrl
sbb
add
or
mov
pop
cmp
xor
add
push
mov
adc
les
adc
dec
or
push
pop
mov
loop
push
les
mov
mov
sbb
xchg
inc
stos
push
arpl
push
sbb
rol
xchg
aad
pop
cmp
insl
adc
adc
sub
loope
sbb
pop
inc
xor
pop
movsb
ud0
divl
rorb
hlt
cmc
call
xor
sbb
pop
and
outsl
mov
dec
adc
pop
jns
dec
pop
negb
adc
inc
xlat
addr16
dec
aaa
cmpsb
inc
stc
mov
or
mov
inc
mov
pop
and
popf
jbe
push
lea
cs
stc
popa
cmpsb
aam
ret
cmpb
jb
push
push
mov
cmp
cmp
loop
rcrb
adc
ljmp
mov
cld
pushf
fstps
jns
aaa
iret
loope
fwait
bound
cmc
mov
fs
repz
or
out
add
fwait
fwait
pop
test
jb
xchg
mov
jl
sti
ret
stos
int3
pop
outsl
push
sub
mov
in
sahf
or
mov
out
mov
xor
xchg
xor
lods
into
into
out
or
int3
bound
push
xchg
and
aaa
jl
pop
inc
sbb
cmp
push
stos
sbb
lds
sub
notb
daa
cmpsl
dec
int3
add
push
jnp
adc
out
adc
outsl
loopne
xchg
dec
imul
cmc
test
jmp
and
mov
ljmp
fwait
sahf
cli
add
and
mov
push
add
xchg
cmp
enter
jno
sub
xchg
add
mov
push
into
cwtl
and
cmc
std
jg
pop
lods
fmuls
jl,pn
adc
adc
jg
pop
inc
aas
mov
xchg
fistl
ljmp
fstpl
pop
repz
adc
add
and
call
inc
faddl
add
inc
fnstcw
loope
jle
jl
jb
xor
jge
shlb
add
jmp
xchg
mov
cmp
adc
dec
incb
adc
or
fisubl
and
stos
pop
jge
movsb
cmp
aam
out
inc
adc
inc
mov
pop
mov
mov
dec
mov
mov
pop
test
push
mov
adc
sahf
fidivl
dec
fisubs
mov
daa
sub
jno
push
daa
and
ss
mov
adc
xchg
loop
cltd
out
enter
jmp
mov
push
arpl
dec
push
xor
adcl
testl
xchg
jmp
call
fidivrs
out
jb
mov
pop
test
dec
je
adc
push
inc
inc
sbb
sub
in
imul
sub
mov
push
xor
sbb
jmp
sub
push
push
or
dec
or
mov
je
push
dec
lods
jmp
addb
imul
sbb
and
inc
xor
jne
ficoml
pop
adc
in
pop
repnz
movsb
mov
decl
and
negl
dec
jb
ror
roll
inc
lea
and
test
inc
sbbl
clc
sbbb
sub
add
fists
xor
cmp
roll
pushf
into
cmpsb
jns
aas
bound
mov
or
mov
mov
cs
sbbb
sub
pop
stos
in
inc
lock
mov
mov
addr16
repnz
fld1
mov
mov
mov
mov
sbb
inc
mov
jnp
push
xchg
lods
pop
pop
sbb
stc
push
dec
mov
jge
inc
gs
pop
test
test
push
aad
push
mov
mov
popa
cli
mov
je
jle
add
in
cli
pushf
fnstenv
jecxz
push
jmp
ficompl
jg
cltd
stos
mov
inc
inc
push
dec
inc
lret
je
dec
ret
repnz
loopne
nop
push
and
jmp
ror
andl
enter
stos
xor
mov
adc
cmp
mov
inc
stos
cmc
or
scas
mov
mov
jbe
das
or
repnz
popf
mov
in
imul
mov
pop
xor
sbb
pop
popa
lds
daa
fimuls
mov
loopne
insl
inc
cwtl
jle
and
rcr
mov
fcompl
mov
add
dec
std
fucomip
or
addr16
sbbb
aaa
andl
fisubrl
daa
fisubl
pop
jmp
ss
mov
xor
in
sbb
or
push
faddl
loopne
push
and
lret
fcmove
movsb
mov
in
test
dec
adc
ds
dec
fistpll
cmp
lret
sahf
sub
mov
in
loop
cmp
leave
push
sub
mov
dec
mov
sub
dec
add
xor
in
sub
push
cmp
and
mov
or
mov
sub
dec
into
or
inc
push
leave
and
mov
sarb
sbb
add
adc
jmp
cmp
sti
adcl
mov
and
jne
xchg
mov
loop
cmpsl
add
and
out
push
aad
test
jmp
sbb
das
stos
mov
cmpsl
mov
daa
dec
jo
mov
test
inc
jne
xchg
lret
inc
and
push
pushf
imul
and
mov
sbb
push
xchg
fwait
dec
shlb
and
mov
shlb
gs
and
jmp
sbb
xchg
frstor
push
loopne
addb
push
mov
pop
mov
push
enter
fcoms
imul
imulb
cmp
mov
pushf
icebp
jp
scas
adc
xchg
les
mov
mov
pop
jb
sub
push
mov
jo
outsb
fsubrl
mov
rcrb
mull
repnz
inc
adc
xchg
daa
sbb
jge
xor
mov
lods
clc
mov
xchg
dec
inc
rorl
cmp
cmp
loop
and
sbb
pop
data16
loope
sub
and
scas
ret
pop
movsl
push
test
pop
cmp
or
cwtl
inc
in
int
filds
lcall
stos
xor
add
push
cmp
push
shlb
movsl
pop
movsb
cwtl
and
repz
add
dec
out
int3
push
push
mov
jmp
jns
sbb
je
mov
sahf
mov
iret
inc
xchg
aaa
cltd
jmp
add
test
push
and
fimull
lods
lea
stos
jle
inc
fwait
sub
gs
push
jmp
in
lods
and
cltd
popa
adcb
or
push
xchg
dec
aam
mov
add
xor
fs
js
xchg
fstpt
dec
cli
adc
xchg
test
xchg
push
xchg
xor
sbb
jl
popa
clc
pop
cli
popf
xchg
inc
cmpsl
adc
arpl
xchg
or
pusha
xchg
jb
pop
leave
dec
popf
stos
jne
mov
mov
ljmp
fidivrl
sub
fldt
je
pop
daa
cmp
dec
in
int
fucomip
inc
xchg
into
pop
fwait
mov
call
lahf
ret
sub
jbe
jne
jl
sbb
in
mov
push
xor
outsb
rcr
cmpsb
sbb
das
mov
mov
dec
push
sbb
or
jbe
and
ret
dec
xor
in
push
push
daa
push
or
jmp
idivb
stos
sbb
je
push
pusha
adc
inc
rcrl
lods
push
sub
push
out
lea
cmp
mull
mov
sahf
mov
pop
push
rolb
push
push
push
cmp
pushf
jg
mov
xor
daa
pop
cmp
and
pusha
fbld
test
nop
in
cmp
mov
pop
daa
stos
mov
add
inc
sbb
xor
popa
and
mov
and
mov
popa
mov
inc
in
movsl
js
call
addr16
push
js
daa
test
mov
fs
mov
pop
inc
rcrb
fidivrs
inc
inc
mov
sbb
les
pop
cmp
pop
mov
ljmp
loopne
addr16
mov
mov
addb
imul
mov
out
cmp
fcmovnb
mov
js
mov
sbb
sahf
push
or
push
pop
ja
rcll
mov
mov
stos
xor
pop
aas
shll
es
cmc
sub
dec
ret
stc
mov
adc
mov
out
mov
cmp
fldenv
pop
jl
push
in
push
mov
xor
in
pop
add
add
adc
ss
mov
sbb
cld
mov
xor
dec
xor
ds
mov
rcr
xor
pop
mov
daa
loopne
inc
mov
add
xor
ret
imul
dec
mov
or
push
test
dec
aaa
mov
ss
test
popa
mov
mov
adcb
fcoms
jno
xor
adcb
lret
inc
xor
jns
fstpt
aam
sub
jl
aad
pop
push
pop
pusha
or
pop
dec
stos
in
mov
or
cld
pop
out
popa
jae
xor
sbb
fsubs
retw
jl
data16
lcall
cli
in
inc
pop
xchg
or
movsl
pop
scas
addb
sbb
inc
dec
push
push
jp
inc
and
add
mov
push
pushw
push
lcall
out
and
dec
mov
scas
push
lock
jo
or
or
fcomp
ret
inc
in
movsl
mov
cld
dec
dec
mov
cltd
sti
mov
and
scas
mov
push
sub
scas
push
popa
rolb
dec
into
and
sub
jne
ucomiss
outsb
pusha
pusha
out
pop
sub
pop
xlat
les
pop
fbstp
cli
pop
jno
mov
aam
inc
inc
int3
push
pop
addl
in
repnz
cltd
dec
cmp
jno
pop
lret
pop
cli
mov
mov
and
dec
fimull
addr16
mov
xchg
loopne
xchg
clc
cs
cmpb
and
popa
mov
xchg
outsl
push
out
mov
jl
ss
mov
push
imull
or
sbb
repnz
xlat
sbb
dec
sbb
add
stc
or
inc
mov
dec
out
ja
adc
cmp
or
xor
mov
cmp
push
add
inc
mov
push
outsb
dec
cwtl
mov
inc
and
cmp
jp
inc
stos
mov
ja
lds
out
mov
jecxz
rorl
xor
mov
popa
shll
dec
xor
xor
pop
or
xchg
mov
ljmp
dec
sbb
inc
dec
repnz
and
nop
mov
in
inc
push
and
add
movl
les
dec
mov
mov
mov
leave
dec
mov
push
push
mov
xchg
adc
lods
imul
shrb
or
push
mov
xor
mov
lcall
insb
mov
mov
aam
jmp
andl
cmc
cmpsl
dec
mov
hlt
push
jp
add
jbe
pop
addr16
mov
push
mov
test
call
push
jge
push
pop
lock
and
adc
inc
adc
out
and
int
insl
push
jp
mov
out
test
push
js
call
xchg
mov
pop
and
pop
xor
mov
mov
nop
inc
fs
ss
iret
dec
pop
add
push
mov
sub
jl
or
icebp
jnp
inc
sub
jne
xchg
dec
mov
add
loope
cmc
mov
repnz
sub
inc
adcb
pop
dec
pop
stos
or
xchg
push
dec
call
into
jg
push
lods
push
ret
mov
std
enter
mov
inc
je
aaa
cld
js
cmp
add
pop
and
in
shll
in
idivl
mov
rcrb
fwait
add
fs
loopne
jns
pop
mov
mov
sbb
lahf
int
push
jp
stc
mov
jmp
dec
cld
and
add
dec
add
xchg
pop
sbb
sub
fidivrs
faddl
adc
es
xchg
sub
popf
dec
adc
dec
adc
mov
movsl
mov
ds
inc
mov
sub
mov
push
xchg
xor
pop
sahf
dec
scas
aad
jns
inc
js
cltd
sub
mov
stos
mov
movsl
icebp
jne
es
and
mov
dec
jle
push
mov
stos
push
mov
dec
add
mov
dec
subl
lcall
push
pop
adc
int
stos
sbb
dec
pusha
xor
rol
pusha
pusha
mov
or
leave
adc
xor
adc
insb
out
lds
fcmovu
sbb
fwait
testb
fsubs
sahf
fmuls
fstl
inc
cmp
push
push
mov
int
test
shrl
jl
lahf
jl
xchg
cld
cmpsb
sar
inc
and
or
mov
push
cltd
cmpsl
cs
outsl
xchg
lods
pop
add
and
into
into
aam
jo
pop
stos
lea
sbb
std
push
cmc
cmpsl
cwtl
data16
dec
lock
hlt
xchg
je
xor
and
sti
inc
enter
loope
fsubl
sub
rcrb
cs
dec
imul
xchg
aaa
lods
sbb
sbb
popa
dec
pop
ficompl
dec
xchg
xlat
jae
push
fnstcw
bound
pop
adc
mov
aas
sbb
decb
jb
fisttpll
stc
push
pop
out
mov
and
mov
jp
test
rcrl
sbb
mov
sub
sub
jb
inc
pusha
cli
xchg
fildll
push
popa
jp
push
pop
sub
divl
dec
pop
pusha
push
sbb
orb
jno
pop
mov
dec
cmp
enter
int
inc
lea
sbbl
stos
jecxz
mov
push
fstps
and
jmp
push
xor
mov
ficompl
and
pop
test
mov
dec
iret
arpl
cmc
push
test
insl
pop
and
dec
gs
dec
pop
or
and
xchg
add
dec
dec
nop
pop
mov
stos
in
es
mov
outsb
popa
push
je
fldt
xchg
int
fwait
jne
fwait
mov
fnstsw
pop
dec
dec
xor
mov
mov
adc
cwtl
jno
inc
pcmpgtb
xchg
cli
cmp
das
popf
ret
xchg
add
push
jae
mov
mov
push
mov
push
rep
lahf
daa
stos
lahf
or
or
mov
stc
addr16
jecxz
in
lcall
aas
daa
xchg
imul
or
or
push
cmp
sarl
push
cmpsb
mov
xor
lods
leave
nop
jbe
cmp
jns
dec
cmp
cmp
imulb
pop
mov
xchg
sahf
orl
sar
loopne
fadds
xchg
mov
and
rol
mov
lock
stos
mov
jmp
cmp
sub
jns
orb
mov
insl
ljmp
mov
outsl
push
jbe
imul
mov
mov
cmpsb
fsubrs
or
std
insl
fcmovnu
movsb
movsb
stos
cmp
mov
lea
roll
mov
incb
mov
xor
xor
or
str
imul
shll
int3
popl
addb
cmc
faddp
sub
cwtl
ja
sar
imul
rclb
add
push
scas
loop
add
xor
mov
bound
roll
scas
push
paddsb
dec
movsl
mov
sub
and
mov
lret
add
jle
aam
pop
sbb
flds
enter
add
popf
push
pop
add
adc
xchg
out
adc
call
inc
adc
movsl
pop
inc
push
sahf
out
add
pop
jmp
fildl
inc
jns
xchg
dec
test
cmp
jge
push
repnz
hlt
daa
dec
arpl
pop
mov
cmp
dec
inc
xlat
jno
insb
cmp
leave
in
adc
aad
add
dec
jb
mov
roll
mov
adc
call
popf
push
xchg
dec
mov
ljmp
pop
push
mov
or
clc
sbb
adc
cmp
push
mov
enter
inc
add
pop
mov
int3
adc
xor
mov
mov
xor
pop
pusha
or
imul
in
scas
mov
xor
push
push
aaa
adc
mov
pop
outsl
fadd
or
insl
mov
adc
mov
out
mov
mov
imul
mulb
sub
cld
jl
stos
call
test
lea
adc
roll
jo
sub
fcmovu
push
rcrb
cld
movb
mov
into
ss
addr16
pushf
inc
xchg
lds
cmp
and
fdiv
mov
bound
push
mov
or
sub
sbb
pop
mov
or
cmp
mov
adc
inc
les
mov
stos
sub
test
xor
lods
test
push
fsubrp
bound
sbb
sub
mov
aad
fucomp
xchg
fsubl
out
sub
mov
adc
out
pop
into
mov
psubb
inc
push
cmp
xchg
sbb
movsl
sbb
dec
sbb
cltd
jbe
jns
cmc
insb
push
add
and
or
mov
sbb
add
ljmp
mov
stos
loopne
adc
xchg
mov
push
cwtl
xbegin
push
cwtl
or
cmpsl
sub
adc
andb
xor
mov
sub
push
add
inc
jb
adc
inc
inc
dec
insl
sub
sub
pusha
test
lods
or
ja
xor
mov
shrl
enter
sub
popa
ljmp
lds
push
loopne
in
test
or
xchg
lret
cmp
mov
faddl
push
imul
xor
out
push
dec
shlb
dec
ret
lcall
stos
ljmp
call
xchg
pop
out
sbb
pop
mov
sbb
shrb
loop
push
outsb
and
pop
or
shl
mov
and
adc
xor
sub
push
xchg
mov
mov
push
mov
dec
hlt
sub
lret
xchg
in
inc
cmp
daa
dec
std
pop
xor
cmp
stc
inc
clc
repnz
sbb
movb
mov
dec
sub
pushl
sub
out
jl
and
mov
ret
jmp
push
data16
xor
or
in
mov
fcoms
push
shll
pop
adc
mov
rol
push
cmp
mov
push
or
cmp
xor
mov
fistpl
loope
imul
js
and
mov
repz
pop
jle
xchg
ljmp
arpl
repz
pop
push
add
movsb
inc
sbb
inc
add
stos
sahf
mov
insl
aam
mov
push
jnp
out
fs
and
popf
sub
jge
int3
dec
jl
pop
cmp
mov
sbbb
jnp
jp
outsl
pop
pop
cli
mov
pop
xchg
gs
and
inc
popf
and
push
mov
inc
mov
push
mov
pop
cmp
cmp
mov
mov
inc
pop
xlat
mov
add
fsubrl
jmp
pop
cmp
pop
lret
xchg
mov
aad
adc
test
mov
sahf
xor
push
arpl
jo
cmp
adc
test
pop
and
push
or
jmp
cwtd
and
pushf
or
sub
push
sbb
stos
aad
lods
push
push
rclb
bound
adc
stos
mov
sbb
push
popa
xchg
push
pushf
jne
mov
dec
sub
std
push
push
das
ret
cmpsl
les
xchg
dec
stc
in
sar
add
int3
sbb
jl
sub
int3
push
push
ja
mov
or
adc
pop
and
sbb
imul
cmp
pop
aam
add
repz
loop
jge
pop
pop
frstor
add
dec
pop
sbb
adc
and
jg,pt
and
stos
mov
ficoml
inc
xlat
xlat
and
pop
shrb
pop
push
jns
into
test
sub
add
jo
in
and
mov
in
mov
pop
pop
adc
dec
push
sub
mov
pop
in
mov
dec
fcompl
xor
pop
fnstsw
and
insb
push
mov
ds
pop
fnop
rcrl
jbe
jle
jns
pop
stos
sub
pop
push
repz
push
jl
cmpsl
stos
jle
mov
jle
enter
mov
and
mov
test
xchg
es
leave
fisttpll
jno
andb
mov
mov
sahf
repnz
movsb
fiaddl
imul
rcrl
ljmp
push
dec
add
and
mov
push
fdivrp
ja
sub
stos
mov
cli
sbb
xor
mov
push
adc
scas
jne
xor
mov
adc
pushf
mov
push
cld
fs
test
insb
push
out
pop
lods
mov
fstl
in
iret
cmp
xchg
push
inc
mov
mov
cmpsb
inc
and
into
decl
mov
adcb
or
scas
imul
xchg
loope
sbb
jns
rcrb
add
push
mov
data16
mov
test
sbb
pop
lods
jns
sarb
jb
mov
push
sahf
shr
adc
cwtl
int3
lods
ret
adc
sbb
cmp
jmp
cmp
enter
repz
jne
jo
in
lahf
and
mov
or
data16
add
scas
mov
push
sti
cld
icebp
loope
fidivrs
push
jp
clc
cltd
popa
or
out
sar
cmp
clc
pop
jge
mov
outsb
mov
rcll
and
fistl
push
popa
push
mov
ret
push
lret
mov
add
or
mov
push
xor
lods
daa
ret
call
sbb
in
std
mov
sub
nop
cmp
shlb
lds
lcall
adc
outsb
icebp
scas
test
jmp
mov
or
cmp
inc
jns
mov
pop
push
xchg
das
stc
add
inc
push
xor
inc
cmp
subb
scas
push
xor
adc
jmp
mov
cmc
sub
adc
movsl
dec
in
in
add
pushf
scas
addr16
outsl
mov
pop
jbe
test
mov
adcb
push
stos
add
xor
in
sbb
push
inc
and
test
mov
and
push
fstpt
inc
int3
sbb
inc
and
pop
hlt
je
imul
jb
rcr
mov
push
movsb
add
mov
xchg
jg
test
xor
adc
cmp
shlb
xchg
shlb
jecxz
inc
rorl
pop
mov
lea
mov
movsl
clc
repnz
mov
arpl
cmc
push
pop
dec
dec
dec
lcall
data16
dec
jg
sbb
fnstsw
outsl
xor
sar
inc
test
jle
insl
gs
loop
push
add
push
ljmp
cltd
mov
popf
inc
aaa
test
nop
sahf
jl
nop
dec
mov
aam
lret
rolb
xlat
repz
dec
mov
fcoml
int
or
adc
xchg
xchg
into
cld
inc
bound
insl
sub
and
out
into
icebp
fldenv
push
adc
mov
loop
inc
fmuls
pop
xchg
mov
jno
mov
fwait
sbb
or
pop
push
xchg
xor
sbb
lahf
flds
and
out
xor
dec
jl
xor
cwtl
loop
clc
out
cmp
pop
add
push
inc
je
nop
in
into
mov
movsl
cmp
adc
cmp
and
mov
push
sub
push
xor
sbb
or
sbb
test
adc
cld
std
add
in
sbbl
cld
dec
add
ja
loope
jno
inc
mov
aad
sbb
push
adc
neg
jg
sub
add
mov
testl
subb
cmp
cwtl
xor
mov
aam
mov
mov
mov
lods
pop
ret
into
int3
mov
add
sarb
xchg
jge
les
cs
xorb
cld
sar
and
xor
sarb
jg
subl
mov
sub
xchg
jo
sbb
adc
jge
mov
mov
mov
xor
iret
dec
lock
movsl
inc
push
repz
enter
xchg
stos
iret
mov
xor
int3
out
dec
sub
ds
and
jo
fldt
cmpsb
xchg
bound
int
mov
push
sbb
fisubs
movsb
lea
sbb
inc
xchg
jg
shlb
push
stc
pop
scas
stc
add
adc
rcr
test
test
jle
out
sbb
mov
loop
inc
jle
and
cltd
inc
ds
int3
pop
aas
dec
cwtl
inc
cmp
adc
cmpsl
movb
inc
jmp
scas
inc
xchg
aaa
scas
jl
cmp
lcall
push
pop
stos
sbb
out
das
push
add
jo
mov
bound
sbb
fstpl
and
prefetchwt1
test
lods
or
fstps
mov
mov
scas
sbb
mov
pop
mov
adc
test
gs
pop
mov
mov
or
xor
imul
jge
lcall
jno
inc
mov
aam
add
pop
call
sbb
pop
adc
je
int3
fisttps
pop
ret
mov
mov
cmpsb
mov
dec
add
jns
cmc
mov
jne
shll
cltd
or
movsb
test
push
inc
xor
mov
dec
movsl
into
jns
push
stos
push
pop
pop
pop
adc
sbb
jl
cmp
cli
inc
dec
mov
imul
dec
loopne
and
and
jge
push
xchg
xor
pushf
sbb
aaa
xchg
subl
mov
mov
xchg
rclb
jno
mov
sbb
pop
shlb
stos
dec
add
out
lods
or
roll
push
roll
subl
psrlw
movsb
xchg
adc
pusha
jns
push
clc
stos
fcomps
pop
inc
mov
lock
sbb
stos
mov
lea
push
lret
aad
dec
pop
inc
mov
fldenv
scas
inc
rcll
addl
into
mov
cs
sub
pop
out
call
xchg
jp
psrld
loop
add
pop
xlat
dec
or
xchg
jp
lock
push
das
arpl
dec
bound
xchg
mov
test
inc
movb
cmp
inc
adc
mov
pop
sbb
mov
shl
mov
xor
mov
xor
dec
std
cltd
lock
shlb
outsb
push
in
push
xor
sub
sub
lods
and
cmp
cmp
popf
stc
add
jmp
rcll
mov
lods
ja
lret
xor
outsb
push
adc
sub
adcb
repnz
stc
mov
cmp
xchg
jecxz
aam
xor
scas
aad
jbe
scas
jp
push
push
das
fcmovu
je
data16
xor
mov
pop
and
les
mov
dec
push
fdivrl
int3
push
ja
je
xor
dec
nop
dec
mov
into
push
daa
test
mov
add
inc
xchg
jl
xchg
daa
lret
jl
push
inc
cli
roll
jp
pop
aas
lods
bound
mov
pop
sahf
jecxz
clc
enter
test
test
int3
inc
lahf
push
in
test
push
jmp
mov
sub
cmp
cli
pop
push
inc
or
in
imul
and
scas
pop
adc
je
add
or
daa
lcall
ss
push
repnz
jle
sbb
enter
cmc
adc
imul
imul
add
stos
jb
ds
stos
fwait
pop
push
jp
fwait
dec
enter
dec
sbb
lea
pop
js
test
add
add
or
mov
sbb
cmp
mov
inc
test
pop
jmp
inc
hlt
lock
jo
add
aaa
mov
jmp
int3
popa
sub
xor
mov
add
sbb
sbb
dec
or
stc
or
daa
test
sub
mov
orb
mov
sbb
or
es
mov
jle
fcmovnu
mov
push
dec
std
xchg
stos
sub
sbbb
xchg
adc
push
jae
dec
subb
loop
xchg
cmp
and
xchg
negl
inc
mov
in
in
sub
dec
stc
imulb
stos
das
and
ret
das
negb
xor
std
mov
or
mov
inc
in
dec
scas
xchg
adc
jns
xor
pop
pop
fwait
mov
inc
adc
fists
add
stos
fnstcw
push
cmp
lea
imul
neg
andps
mov
xor
mov
push
out
mov
push
std
pop
or
dec
push
dec
repnz
sbb
dec
imulb
add
push
loopne
inc
inc
outsl
cmp
pop
mov
add
dec
movl
mov
mov
js
movb
add
pop
sbb
notb
cmp
jno
insb
push
push
or
jne
push
xor
sti
aas
xor
fs
mov
dec
jp
mov
adc
and
das
xchg
push
inc
inc
push
cli
loop
call
or
jno
xchg
mov
stos
rcr
xchg
sub
mov
pop
sbb
fs
mov
fcomps
mov
mov
nop
cmpsl
movsb
repnz
mov
push
scas
jns
stos
jg
dec
icebp
pop
pop
and
xor
scas
int
lods
imul
push
adc
fcomp
bound
pop
cmp
stos
movb
adc
adc
pop
pop
pop
adc
aam
icebp
mov
sbb
sub
pushf
mov
or
xchg
xor
gs
add
or
insb
movl
xchg
repnz
add
in
in
push
test
mov
mov
and
enter
push
aas
xchg
in
jmp
hlt
sbb
in
std
std
inc
fisttps
add
pop
mov
dec
or
and
mov
or
and
pushf
add
or
inc
rcl
dec
mov
or
push
ljmp
dec
pop
daa
mov
pop
xchg
cmpl
mov
push
push
ret
insb
adc
lods
xchg
into
push
pop
xchg
and
mov
fst
push
shlb
cli
push
hlt
or
xor
xor
icebp
jno
cmp
sbb
adc
lock
iret
push
add
stos
adc
lods
idivb
mov
cmpsl
cmpsl
and
cltd
mov
icebp
es
sti
jge
dec
xchg
cwtl
cltd
jbe
movsb
loopne
push
push
addr16
lret
test
adc
iret
pop
and
fisubs
testl
movsb
or
movlps
femms
je
in
mov
xchg
fistpl
out
in
mov
or
push
lock
mov
adc
or
jne
jle
clc
dec
inc
sub
add
mov
push
call
sbb
add
or
and
add
imul
xor
add
mov
into
xchg
and
aaa
dec
sbbb
in
call
test
in
cmp
lcall
cmp
mov
xchg
sarb
jno
das
sbb
ds
or
ljmp
das
jae
notl
push
shrl
shll
xor
fistl
and
and
jg
mov
ror
insb
or
push
push
mov
rclb
jb
divps
js
jmp
inc
int3
lds
or
sbb
mov
lret
mov
inc
add
cmp
jae
aas
je
ss
hlt
or
inc
outsb
int3
adc
in
mov
aad
mov
xchg
mov
out
popf
aad
mov
popa
fbld
cmpb
xor
sbb
lods
adc
daa
lds
and
mov
adc
xor
arpl
jg
and
inc
mov
test
scas
pop
jo
fwait
pop
mov
xchg
js
mov
and
cmpsl
leave
mov
cmp
or
stos
push
inc
ficomps
pop
sbbb
das
stos
fstps
cmp
test
mov
stos
xchg
insl
cwtl
sbbl
cmp
mov
shrl
sti
out
orb
dec
xor
mov
xor
mov
push
dec
or
arpl
sub
hlt
or
dec
jg
jle
jne
sub
lods
mov
sub
sub
stos
adc
sub
ljmp
inc
jmp
stos
push
in
movsl
add
sub
mov
jne
mov
in
cmp
sub
addb
push
push
into
xchg
cmp
dec
loope
outsb
in
push
xchg
inc
cmp
jno
lret
mov
imul
mov
andb
cmp
mov
out
iret
jmp
in
mov
push
jcxz
adc
inc
rcl
lcall
outsb
pop
xchg
fisubrs
pop
push
out
adc
xor
inc
test
mov
adc
addr16
push
xor
push
popf
or
mov
sub
repnz
aas
fsubr
add
test
sub
das
sub
pop
xor
inc
movsb
mov
push
div
inc
inc
arpl
xor
and
xchg
mov
and
inc
ror
sbb
orb
xlat
icebp
sub
into
ret
lods
adc
lods
stc
movsl
push
rorl
and
mov
lahf
push
jo
filds
out
nop
lds
cmpb
mov
and
sub
sub
jo
cld
popf
cmp
pop
jge
loop
fwait
or
jmp
inc
or
loop
xor
jmp
fisttpl
jo
and
ret
sahf
sahf
and
iret
je
mov
xlat
add
jp
jl
lds
xchg
dec
and
adc
fucom
cmpsl
xor
mov
mov
test
inc
sub
cmp
idivl
or
cltd
adc
add
inc
sub
mov
into
sub
rolb
ds
mov
nop
pusha
addr16
push
push
dec
cld
dec
sbb
js
jp
pop
cmp
mov
js
xor
push
int
add
int
ds
bound
mov
jp
imulb
sahf
call
cs
pop
adc
pop
xchg
cmp
inc
movsl
nop
pop
jle
orl
mov
lds
xlat
mov
lahf
out
scas
negl
or
mov
inc
xchg
mov
mov
lea
aas
mov
sub
inc
stos
outsl
repz
push
adc
or
cmp
mov
push
jecxz
push
sub
jmp
int3
mov
mov
xchg
repz
sbb
mov
insl
mov
dec
cmp
push
or
xchg
xchg
sbb
pop
push
add
test
xchg
icebp
sbb
popa
mov
inc
into
cmp
xor
and
in
fiaddl
scas
adc
ljmp
xchg
xchg
ds
pop
inc
lock
adc
aam
incl
lahf
xchg
into
int
mov
inc
mov
xchg
push
test
and
xchg
mov
lds
int3
data16
cwtl
add
int3
ljmp
gs
jne
mov
cmp
mov
and
in
mov
mov
dec
pop
xchg
pop
out
mov
fbld
mov
ds
mov
jns
adc
adc
addr16
jecxz
repnz
hlt
roll
inc
cmpsl
xchg
and
mov
sarl
popa
mov
mov
sub
popa
xchg
sub
cmp
add
jle
cmpsl
lret
cmpsl
mov
xchg
pop
mov
dec
adc
jno
xor
inc
inc
xchg
inc
jne
mov
jge
fcoms
sub
mov
daa
add
jne
or
shrl
xor
cmpsb
jns
jno
add
pop
iret
and
mov
push
sub
sub
sbb
pop
push
adc
lock
pop
loopne
sbb
das
pop
fidivrl
jo
out
cwtl
push
aam
mov
sbb
jne
cmp
xchg
lods
out
add
jne
aaa
rolb
jge
and
push
out
mov
jnp
aas
mov
mov
ljmp
add
jle
mov
adc
pop
add
mov
pop
enter
jg
ret
pop
or
ds
and
and
cmp
repnz
xchg
adc
adc
cmp
cmpsb
push
outsl
adc
int
or
lods
and
cltd
xor
jne
and
jb
dec
leave
mov
das
sub
jb
movsb
cmp
xchg
ret
push
sti
mov
gs
or
in
mov
loopne
mulps
ds
pop
pop
into
fcom
pop
pop
fstpl
mov
inc
mov
popa
xor
sbb
nop
fiaddl
jne
int3
mov
clc
mov
je
stc
sub
data16
andb
movsb
in
mov
int
lea
gs
mov
or
nop
mov
add
push
or
stc
sub
cmp
rcrb
stc
ds
mov
mov
bound
pushf
inc
sub
mov
xor
insb
mov
int3
pop
loope
cld
adc
push
pop
or
mov
int
xchg
jo
imul
clc
push
jae
xchg
pop
dec
adc
push
and
xchg
leave
loope
add
int3
jge
dec
push
push
and
adc
outsb
adc
sbb
rcll
push
mov
test
adc
movl
sbb
int
cwtl
fldenv
rclb
and
push
sbb
lds
int
cmpsl
jmp
ss
scas
mov
mov
pop
adc
cwtl
add
daa
push
jg
dec
loop
js
jg
add
cmp
cs
adc
add
xchg
jge
outsb
push
push
incb
push
cmp
adc
xor
scas
scas
into
rcl
jne
mov
xchg
and
bound
sbb
ljmp
pop
adc
idivl
cltd
or
pop
imul
inc
mov
aaa
mov
adc
and
push
movsb
or
mov
cmpsb
dec
ficompl
fsts
mov
test
inc
add
sbb
stos
inc
mov
enter
andl
sarb
addr16
adc
test
gs
cli
fiaddl
push
outsl
mov
lds
jno
inc
in
add
and
adcl
jge
pop
stc
mov
xchg
cmp
cmpsl
or
cmp
fwait
mov
mov
pushf
and
mov
out
and
jge
lods
sub
addb
gs
push
in
lcall
dec
mov
pop
pmullw
push
jmp
lcall
inc
es
loopne
test
out
sub
adc
das
and
dec
into
popl
sbb
lea
in
loopne
and
xchg
cs
rorb
out
mov
pop
cmp
inc
mov
jl
xchg
aad
loopne
addr16
xchg
pop
mov
pusha
popf
sbb
jecxz
sub
push
dec
jmp
push
cmp
ret
xor
inc
or
cmp
shrb
adc
xor
adc
mov
push
lods
mov
lcall
ret
mov
push
lret
mov
xor
enter
or
jne
lahf
movsl
push
or
sbb
mov
inc
adcb
sub
adc
dec
mov
ljmp
add
out
and
push
cmpsl
lcall
xlat
push
mov
mov
scas
adc
jl
adc
sti
push
scas
xor
test
pop
and
lret
jl
xchg
sti
add
jmp
test
scas
shll
testb
sub
out
push
shll
call
dec
jne
xchg
xchg
lret
pop
push
xchg
xor
push
nop
loopne
mov
test
or
add
loop
sbb
in
orb
mov
les
pop
pusha
call
andb
pop
addr16
push
inc
fbstp
push
add
xor
cmpb
dec
xchg
lods
pop
rcl
mov
shr
sarb
cmp
cmp
inc
test
call
subl
lock
cli
stc
push
sub
jg
dec
cwtl
and
popa
mov
mov
in
jno
sub
orl
xor
ret
inc
sbb
add
sbb
jno
dec
cmp
imul
lahf
add
xor
inc
add
or
and
sbb
test
rorl
repz
sgdtl
adc
addb
mov
stos
imul
and
out
or
bnd
mov
rcrl
imul
inc
sub
and
cmp
adc
js
sub
imul
jnp
enter
adc
dec
repz
add
jl
xchg
push
and
into
addr16
mov
lcall
fidivrl
xor
test
jg
mov
fcomp
jge
add
push
cltd
dec
sub
cmp
dec
or
gs
sbb
push
mov
mov
mov
call
cli
sub
push
stos
push
int
pop
addl
adc
cmp
rcll
aas
push
push
cmpl
push
mov
jno
loop
nop
push
fmuls
cmpsb
ss
stc
mov
out
inc
inc
push
jbe
jle
cmpsb
or
xor
xor
adc
mov
insb
scas
aam
fs
push
outsb
dec
mov
mov
pop
sahf
fnstenv
arpl
repz
sub
inc
in
cltd
pusha
pop
dec
pop
sub
insl
or
push
arpl
dec
shll
ds
dec
sti
in
push
mov
sub
push
negb
mov
sub
negl
or
jle
sarb
call
and
mov
xor
test
inc
das
fsubrl
mov
rolb
or
or
mov
es
inc
cmc
push
jno
out
ljmp
cmp
ljmp
cmc
push
jecxz
sahf
mov
into
pop
pop
mov
inc
and
out
push
pop
addr16
cs
pop
enter
clc
js
jle
pop
mov
inc
mov
and
jno
inc
test
sti
stos
push
sbb
or
fst
jmp
jl
push
xchg
mov
aas
sarl
lret
jnp
xchg
pusha
test
or
cwtl
add
cmpsb
cmpsl
clc
mov
stos
popf
mov
js
into
mov
or
lods
xchg
icebp
nop
loopne
stos
lods
jg
pushf
ret
dec
sub
dec
dec
lahf
flds
sbb
add
push
jno
xchg
test
movsl
mov
fucomi
fcomps
or
cmp
loop
inc
enter
and
mov
add
push
ficompl
lods
ds
and
movsb
adc
pop
jbe
mov
cmp
jb
push
sahf
jl
test
add
cmc
cmp
jmp
subb
push
shll
mov
jg
je
dec
scas
cmc
sub
clc
mov
add
stos
fisubrl
test
jp
fisubrs
add
scas
jl
or
insl
sub
or
loope
jecxz
push
cmpsb
add
fiadds
xor
les
mov
inc
push
cmp
xchg
dec
mov
pop
fistpll
or
add
filds
inc
pop
pop
inc
movsl
rclb
dec
mov
add
jne
and
test
or
adc
dec
push
cwtl
or
test
pop
add
lea
outsb
xor
push
xor
hlt
js
push
add
add
ret
mov
insl
aam
cld
pop
ror
ljmp
ds
pop
in
movsb
xor
fnstenv
nop
inc
pop
loopne
xchg
cmpsb
into
test
ljmp
pushf
into
movsl
fadds
jmp
or
and
into
pop
aam
push
cmpsb
cld
ficompl
mov
or
mov
fists
cld
and
cs
xor
sub
dec
cwtl
jmp
cmpl
loopne
dec
push
adc
popf
adc
xchg
xchg
cld
sbb
mov
add
or
cmp
push
push
cmp
ret
pop
fldcw
add
fwait
fwait
shlb
dec
sub
sub
jb
push
sbb
jae
rorl
sub
fwait
sub
cwtl
and
and
fs
fsubr
lcall
mov
and
aas
or
int3
ret
xchg
cmp
fadd
xchg
adc
jge
add
sub
fwait
inc
je
sbb
mov
imul
outsb
pop
inc
add
or
and
outsl
lahf
xadd
dec
adc
fstl
dec
das
rolb
sub
aaa
cli
shll
jbe
jle
cld
ror
decb
cmp
dec
and
rcrb
push
stos
stos
push
call
add
push
andb
xor
xchg
cld
pop
in
xor
ljmp
push
incb
in
aas
dec
xchg
adc
adc
ficompl
aad
dec
aam
cmp
push
outsb
pop
inc
cli
inc
jecxz
iret
scas
fmull
sub
nop
jg
jle
mov
mov
iret
cmp
jmp
push
shl
hlt
sub
clc
push
mov
test
and
push
sub
dec
inc
mov
and
outsb
dec
pop
lds
xor
std
andl
stos
sahf
mov
insb
mov
push
pop
outsb
sti
psllw
adc
arpl
mov
outsl
cld
out
mov
jb
rcll
mov
mov
push
cld
inc
dec
or
test
in
rcl
mov
xchg
imul
and
push
jle
push
clc
or
pop
imul
and
insl
mov
or
fldenv
enter
arpl
push
mov
mov
pop
test
mov
lahf
fdivrl
mov
insb
push
lds
mov
xor
mov
insl
xlat
ja
mov
stc
sar
es
adc
clc
imul
push
popa
push
ss
xor
add
lea
ds
fiadds
cmpsb
jno
xchg
jae
sbb
sbb
icebp
stos
push
mov
and
and
mov
cs
mov
mov
scas
test
test
rclb
push
test
movsb
push
lea
mov
iret
jb
jo
sarl
dec
sub
aam
xchg
and
and
enter
in
sub
sub
xchg
push
lret
dec
cmpsl
scas
sub
mov
inc
jecxz
test
dec
adc
test
inc
inc
std
cmp
push
xchg
add
adcl
in
push
fsubr
movntq
pop
jmp
mov
pop
push
dec
sub
mov
dec
push
or
mov
test
xor
xor
xchg
daa
scas
dec
and
mov
push
aaa
cmp
std
divl
mov
and
jmp
add
add
sub
test
fxch
add
jno
comiss
movsb
mov
mov
scas
pop
sti
and
xchg
sbb
mov
mov
call
mov
and
pop
jbe
sbb
push
xor
sub
icebp
xchg
lock
mov
dec
push
xor
fnstsw
and
sahf
rorl
mov
sbb
mov
jnp
in
ja
sbb
cwtl
sbb
push
sub
jl
pop
push
loopne
pop
jne
jae
movsb
or
or
fwait
icebp
nop
cmp
clc
add
push
sbb
dec
add
pop
and
lret
ror
and
jbe
faddl
dec
xchg
cltd
mov
das
pop
inc
sbb
mov
neg
push
adc
out
loopne
das
adc
inc
rolb
and
fwait
push
mov
or
xor
or
and
lahf
repz
clc
fdiv
fiaddl
inc
add
dec
mov
dec
xorb
pop
xchg
inc
xor
stos
xor
inc
xor
loopne
lret
xlat
jecxz
mulb
mov
ja
adcb
xor
movsl
mov
cmp
mov
movsl
jg
test
mov
add
outsl
xchg
xchg
mov
sub
mov
adc
jmp
adc
cmpsl
scas
ficoml
js
fninit
cmp
mov
mov
js
jne
sub
push
or
push
enter
lcall
mov
insb
pop
enter
mov
pop
loopne
ljmp
insl
mov
mov
jne
les
xchg
push
scas
mov
pop
aaa
push
and
iret
stos
dec
pop
ret
jmp
cmp
cmp
lret
push
sub
cwtl
mov
push
xchg
adc
cmp
test
stos
mov
adc
jle
test
daa
mov
das
movsl
add
lods
pop
in
loope
push
pop
mov
dec
pusha
push
fcmovu
addr16
fdivrl
cmp
ljmp
adc
daa
loop
jmp
jg
jno
loope
lea
jno
pop
sbb
xchg
push
sub
popf
es
dec
outsb
pusha
nop
or
lods
dec
jge
outsb
dec
ljmp
inc
pop
pop
cmpsb
or
ljmp
mov
jecxz
push
mov
mov
pop
loope
ror
mov
fdivp
mov
pop
test
mov
mov
iret
pop
inc
pop
inc
ds
imul
outsl
loope
inc
mov
sbb
jmp
fmuls
stos
lcall
and
xor
cmc
inc
pop
jecxz
pop
pop
stos
push
sub
and
xchg
sahf
daa
pushf
or
aaa
mov
push
push
iret
push
lcall
add
lds
cmc
or
inc
lret
add
and
inc
pusha
push
push
dec
add
stos
sti
sbb
add
adc
jns
movsl
pushf
push
imul
test
lahf
jo
adc
pop
xor
mov
push
idiv
xor
pop
sbb
or
sbb
dec
lods
add
sub
mov
popf
int
dec
repz
pop
xchg
dec
jns
outsl
loop
scas
repz
int3
sbb
dec
adc
gs
std
std
sub
lods
insl
push
ret
add
leave
sub
inc
repnz
imul
data16
sbb
nop
fdivp
dec
mov
movsl
fsubrs
or
fwait
sub
jle
push
in
stos
inc
push
and
xor
add
push
aam
dec
or
jns
pop
add
adc
ret
push
int3
test
cli
add
add
lds
decl
dec
sti
daa
pop
jne
mov
popa
js
jecxz
in
mov
or
xchg
add
in
and
jle
movsl
jecxz
punpckhwd
sti
dec
mov
lret
jns
xchg
fwait
loopne
add
scas
sub
popa
and
cmpl
dec
pop
test
jnp
orl
lock
insb
int
push
outsb
adc
push
cmp
pop
xor
mov
int
ret
mov
jb
je
inc
mov
xor
arpl
sahf
adc
push
jecxz
cmpsl
adc
adc
mov
or
iret
ja
adc
push
sarl
dec
inc
mov
mov
adc
icebp
sbb
outsb
jecxz
xor
ret
mov
jo
stos
das
shll
cli
mov
insl
and
xlat
ds
sub
outsb
inc
stos
jmp
sar
push
lret
mov
mov
sub
jno
cwtl
test
cmp
scas
test
test
pop
mov
fwait
adc
xchg
or
gs
cli
mov
dec
xchg
rolb
jl
cld
cs
jno
rcrb
arpl
adc
pusha
cmp
pop
dec
mov
sbb
dec
cmpsb
addr16
jp
pop
mov
daa
sbb
test
notb
inc
and
mov
cld
jo
jb
adc
xor
pop
push
mov
push
xor
test
jne
inc
movsb
test
inc
mov
stos
xor
push
test
lahf
sub
jle
std
xor
jecxz
sbb
cs
ret
hlt
or
dec
arpl
lcall
and
lcall
push
adc
push
inc
pop
rol
in
mov
dec
inc
inc
clc
popa
ljmp
pop
les
push
aad
cmpb
imul
mov
pop
clc
xchg
mov
or
push
lret
in
mov
jae
xchg
and
jge
aad
cmp
shlb
lret
pop
fsubs
mov
push
cmc
rcll
outsl
push
cli
cmp
mov
push
push
cmc
add
decb
fisttps
stos
mov
mov
xor
std
mov
cmp
inc
add
pop
call
xchg
fisttps
push
fcomp
insl
sbb
sbb
les
cli
xchg
sbb
cmp
jbe
imul
and
pushf
stos
push
mov
jns
repz
add
sub
and
inc
stos
sarb
or
pop
lea
idiv
loopne
aam
roll
hlt
js
inc
orl
mov
or
xchg
cmp
cmp
adc
sub
pop
stc
xchg
lods
loope
sub
dec
pusha
or
fimull
xor
push
jo
les
adc
fldenv
xchg
call
arpl
aam
cmp
or
call
push
cmp
enter
sarl
xor
shll
int3
lcall
pop
pop
push
cmpsb
out
jae
icebp
scas
data16
sub
loope
push
imul
adc
jnp
cmp
cmpsl
repnz
mov
cmpsl
aad
in
addr16
mov
popf
mov
push
pop
inc
out
ret
add
leave
and
inc
testl
or
lods
cmpsl
lods
pushf
mov
out
scas
mov
push
mov
sub
aas
mov
push
inc
mov
pop
mov
sub
dec
stos
adc
mov
mov
xchg
push
outsb
jb
add
mov
and
lahf
push
call
inc
pop
loope
addr16
data16
jle
mov
sahf
imul
out
mov
add
push
jg
fiadds
cmc
daa
xchg
js
and
icebp
push
loope
adc
push
cwtd
xor
test
aaa
pop
lods
or
inc
ficomps
data16
sbb
filds
lcall
dec
and
mov
loop
jecxz
in
mov
test
mov
xchg
lret
sbb
sbb
adc
stos
mov
fcmovbe
add
or
push
inc
popl
mov
push
and
and
sbb
sbb
push
movsl
xor
mov
dec
fdivrl
xchg
popl
or
push
cmpl
loopne
sbb
mov
ror
push
in
andl
or
add
push
out
movsb
push
stc
and
outsb
scas
iret
push
mov
or
enter
push
rorl
adc
cmp
push
mov
jp
push
add
push
mov
sbb
sub
call
mov
pop
pop
push
xor
sub
jbe
sbb
adc
dec
cltd
or
daa
sbb
add
or
dec
repnz
mov
and
pop
hlt
inc
scas
mov
mov
xor
jb
jns
movsl
inc
lret
lods
scas
nop
add
pop
outsb
jnp
and
mov
test
mov
fldenv
xchg
in
push
cli
rcll
scas
jno
rorl
aaa
in
test
cmc
das
enter
adc
dec
jae
dec
or
push
mov
faddl
mov
push
sub
inc
inc
sub
mov
mov
inc
lods
push
es
mov
ret
adc
mov
push
mov
shrb
stos
sub
ljmp
jl
inc
ja
fwait
das
mov
pop
mov
sub
addb
lea
stos
sar
loopne
xor
and
sub
jmp
popa
or
shlb
ss
mov
xor
pop
jmp
lret
stos
loop
lret
xchg
lahf
test
aam
pushw
adc
dec
sbb
iret
scas
imul
inc
sub
xlat
add
or
mov
cmpsl
popf
jge
mov
jg
jns
xor
dec
not
popf
mov
idivb
mov
ss
out
mov
insl
bound
adc
loope
cmp
incl
jle
and
loope
icebp
push
mov
and
add
add
mov
into
in
pop
clc
sbb
add
out
add
xor
jne
push
lock
push
push
sbb
not
pop
ds
mov
scas
std
push
bound
push
mov
pop
push
insl
dec
in
jge
cmc
lahf
dec
pminub
popf
add
mov
xor
inc
int3
pusha
adc
and
xchg
add
xchg
pop
jb
xchg
mov
loopne
dec
jge
loop
cltd
movsl
ja
stos
xchg
test
xchg
dec
sub
add
inc
notl
fldt
mov
fildll
pop
jb
push
push
lock
cld
pop
push
jmp
xchg
mov
sub
sub
jo
and
mov
xlat
sbb
xchg
mov
icebp
in
push
push
mov
dec
mov
inc
inc
sub
inc
fimull
xchg
stc
stos
and
jno
sub
adc
cmc
aam
subb
inc
out
xchg
stos
dec
xchg
add
loopne
jle
aam
mov
dec
pop
dec
in
pop
mov
push
dec
jl
inc
xchg
fcom
push
lods
pop
aam
out
test
cmp
popa
lea
incb
in
or
jg
mov
je
test
lods
insl
mov
pop
imul
sub
push
hlt
pusha
mov
int
leave
cli
mov
aas
fidivs
std
add
ror
stos
jge
jnp
leave
pop
or
sahf
or
cmp
cmpsl
js
pshufw
and
loop
andl
andb
push
mov
pop
fimull
jno
or
push
push
ljmp
cld
movsb
shrb
mov
and
daa
cli
aaa
xor
lods
sbb
in
std
push
jmp
sbb
sub
arpl
or
cmp
sbb
out
outsl
dec
mov
xor
fcompl
sub
mov
inc
inc
xor
mov
mov
inc
and
pop
push
icebp
inc
dec
pop
adc
ja
xor
jb
das
repz
pop
adc
sub
jecxz
mov
out
push
adc
fwait
push
iret
lahf
das
pop
aas
iret
cld
sahf
lretw
paddusb
jnp
pusha
jg
inc
xor
inc
sarl
mov
dec
xchg
push
sbb
pop
pop
test
xchg
mov
call
and
sub
jo
and
or
test
popa
jns
xor
dec
inc
lret
and
pop
mov
mov
imul
and
cmpsl
imull
push
mov
lock
and
sbb
cli
sahf
cmp
xchg
jnp
jp
sarl
gs
test
cmp
mov
inc
ss
push
push
in
sbb
jno
xchg
pusha
lret
pop
push
add
in
popa
ja
pop
call
faddp
and
cmp
pop
orl
or
pop
mov
xchg
jb
cld
daa
xchg
add
out
gs
pop
sbb
dec
out
popf
imul
inc
cs
scas
xor
test
leave
int3
push
mov
subl
and
mov
fwait
sub
mov
pop
jne
outsb
ror
xchg
enter
vprotq
lods
push
fcompl
shll
rorb
cmpsl
adc
jne
inc
scas
push
or
nop
push
popf
mull
arpl
jmp
jecxz
inc
or
mov
sub
in
pop
lahf
dec
add
les
ret
xchg
jb
cmp
mull
cld
mov
fildl
das
cs
pop
hlt
cmc
cli
fiaddl
xlat
dec
push
loop
mov
imul
shlb
xor
mov
pop
rorl
cli
fxch
inc
fcomi
and
push
scas
cmp
pushl
cld
xlat
loop
mov
mulb
dec
and
push
mov
cmp
mov
fsubrl
xchg
out
push
loopne
jmp
jbe
cwtl
jo
fsubrs
mov
fists
and
jo
pop
nop
addr16
push
cltd
test
mov
dec
in
mov
fsubr
movb
fcomp
or
outsb
shr
scas
fldcw
inc
inc
stc
jno
andl
sahf
daa
sbb
sbb
lods
int
inc
mov
jle
das
pop
mov
es
push
lock
mov
rolb
sub
or
push
add
xchg
mov
push
dec
lea
push
push
enter
ja
mov
aas
incb
or
sub
xor
xor
cmp
jle
fsubl
push
aas
jl
rol
dec
sbbb
fs
ds
sbb
mov
pop
mov
pop
repz
addl
popf
sub
inc
call
mov
jne
or
mov
jnp
push
and
mov
inc
daa
mov
rcl
mov
andl
cmp
inc
ss
mov
into
mov
mov
pop
or
iret
mov
sbb
mov
in
sbb
mov
sbb
jmp
pushf
push
push
xchg
push
and
mov
mov
fwait
cli
lret
adcb
xchg
and
push
add
push
test
mov
bound
int3
mov
data16
jl
shrl
push
add
int3
jp
and
js
xlat
test
fistl
and
mov
shrb
pop
cs
push
gs
pop
mov
test
inc
push
pop
push
mov
lret
subb
jecxz
cmp
ljmp
push
push
hlt
popa
jle
adc
adc
sub
aad
and
or
xchg
sbb
push
fiaddl
dec
add
add
es
fbstp
ljmp
add
cs
xor
inc
xchg
mov
mov
aad
jp
push
in
mov
pop
cld
inc
xchg
sbb
and
and
jb
mov
jp
push
push
vmread
jns
sbb
or
leave
nop
mov
xor
addr16
push
sub
insb
mov
mov
mov
addr16
cld
adc
in
or
dec
dec
daa
mov
call
mov
fisubrl
mov
add
nop
popf
jno
aad
in
ret
xchg
lods
int3
push
lea
fsubrl
aaa
loop
or
cwtl
aas
stos
aaa
xchg
inc
cmp
lea
fmulp
sub
movsl
in
inc
jb
cmp
and
push
inc
imul
es
pop
jae
jmp
inc
push
xchg
gs
and
test
iret
rcrb
jl
arpl
or
out
rcrl
subb
push
xor
std
repz
lahf
mov
pop
jns
mov
dec
jmp
subb
nop
aaa
adc
nop
dec
fstl
push
sbb
call
mov
jl
inc
scas
pop
push
push
mov
add
mov
lea
adcb
adc
cmp
jae
sbb
add
dec
mov
cmp
jg
call
decb
test
or
movl
enter
sub
aad
pop
mov
pop
xor
je
push
int3
cmp
jb
sbb
inc
push
lahf
fs
ds
gs
pop
mov
mov
inc
mov
js
adc
adc
sti
add
adc
or
jno
dec
into
dec
iret
arpl
imul
jne
scas
mov
in
push
fdivrs
ret
int3
jo
sahf
sahf
adc
sub
mov
call
adc
insb
in
inc
mov
pop
outsl
mov
or
cmc
cmpsl
or
cmpsl
sub
push
lds
mov
push
fistl
pop
rol
or
cltd
xor
adc
pop
cmpsl
loopne
lahf
cmovo
test
scas
pop
lds
mov
enter
fcompl
aam
testb
imul
lods
and
xor
negl
inc
pop
jb
and
pop
aas
adc
mov
sbb
fcoms
test
loop
outsb
xor
mov
mov
rorl
and
pop
jg
insl
xchg
add
lret
xchg
arpl
fmull
loope
pop
fmuls
push
aam
fldt
js
lahf
jo
movsb
sub
inc
adc
push
adc
sub
push
add
mov
aaa
jns
and
adc
cmpl
rcll
add
outsl
or
pop
mov
sbb
repnz
and
jle
jmp
movsb
xchg
faddl
sbb
aam
or
cmpsb
out
add
insl
rcr
xor
adcl
lcall
and
int
subb
push
shrb
lahf
dec
xchg
and
push
push
and
cmp
pop
cmpsl
fistl
sub
adc
in
sbb
xchg
pushf
lret
loop
lea
sbb
dec
fwait
and
or
and
and
ja
xchg
push
mov
adc
js
or
leave
hlt
pop
mov
les
mov
and
stos
inc
cmpsl
sahf
dec
add
jle
add
or
or
pop
sarb
std
adc
xchg
mov
rcl
cmpsl
mov
push
jge
sbb
push
in
rcrl
ja
add
xor
shlb
dec
out
pusha
jo
stos
stos
or
pop
in
lock
push
sub
inc
je
mov
ret
adc
inc
shlb
in
int
sbb
lea
ja
stos
and
jns
add
stos
cmp
mov
es
sbb
ficoml
adc
push
sub
sti
enter
sti
in
sub
push
and
loop
pop
mov
faddl
repnz
js
les
shlb
loop
xlat
jne
sbb
sbb
jae
sub
daa
ret
stos
sahf
cltd
into
and
cs
aas
jmp
int
jl
fidivrs
add
xor
and
sbb
movsl
shrb
jp
pop
adc
inc
and
and
lcall
sbbl
pop
mov
and
pop
adc
and
jg
rolb
inc
push
mov
cltd
fsubl
sbb
pop
adc
pushf
adc
negl
adc
in
nop
jno
lods
scas
mov
pop
fldenv
push
inc
sbb
pop
call
dec
mov
push
adc
lods
mov
pop
mov
icebp
adc
or
and
xchg
sub
mov
arpl
ss
cli
mov
dec
out
xor
pop
push
jecxz
bswap
and
mov
popf
divl
dec
lock
push
out
jne
das
or
cltd
mov
dec
pop
or
mov
loope
imul
mov
inc
cltd
lret
pop
push
fwait
jbe
jge
dec
or
push
repz
jp
adc
cs
or
push
xchg
lods
adc
cmpsb
mov
lods
mov
dec
xchg
negb
cmpsb
and
stc
arpl
lods
mov
inc
jle
add
repnz
out
push
sub
repz
shl
repz
and
sub
in
pop
mov
and
push
dec
fcompl
aaa
arpl
data16
inc
popa
ja
add
std
push
nop
fwait
mov
or
sbb
jle
mov
sbb
scas
aad
and
scas
jp
and
enter
gs
cmp
jbe
xchg
in
push
jnp
lods
pop
push
cwtl
loopne
inc
lods
int3
ss
xor
inc
mov
mov
adc
filds
fbstp
mov
dec
inc
jb
pop
loope
xchg
pop
cmp
dec
hlt
mov
gs
pop
jp
cmpsb
sub
aaa
into
rorb
lods
or
sti
mov
inc
inc
jecxz
sbb
cmp
dec
test
jbe
mov
adc
xor
scas
mov
xchg
rorl
stos
popf
pop
loopne
or
lock
xlat
jg
sahf
stos
xor
pushf
cwtl
jl
cmp
loop
push
pop
sbb
leave
aas
lds
sti
pop
dec
push
jae
xchg
inc
andb
jp
inc
pop
and
cmp
rorl
loop
mov
movsl
jb
pop
mov
mov
add
aaa
loop
movsl
and
scas
sbbl
sub
cli
sbb
sbb
test
dec
inc
aam
mov
pop
push
add
adc
lcall
aaa
das
lds
mov
les
mov
pop
inc
mov
push
pop
rcrl
test
mov
inc
stos
in
negb
es
mov
loopne
repz
adc
adc
or
fisttpll
xlat
aam
dec
out
shlb
in
inc
push
jno
cli
test
push
or
xor
add
pop
push
lds
stos
pop
movsb
pop
testl
aad
test
push
push
fstpl
jp
enter
sbb
cmp
hlt
dec
rcrb
adc
mov
lcall
mov
loopne
pop
lahf
jge
orl
inc
arpl
sub
sbb
mov
mov
int
inc
push
adc
and
mov
out
mov
adc
add
inc
lret
adc
xor
adc
pop
adc
ja
pop
inc
and
int3
sub
sbb
out
and
dec
jne
sub
nop
es
add
xlat
popf
inc
adc
cmp
popf
lods
cmp
mov
imul
push
je
inc
jmp
mov
push
mov
leave
arpl
into
rorl
pop
call
mov
jnp
mov
lods
mov
jecxz
in
es
pusha
lods
movsl
mov
push
mov
push
cmpsl
loop
stc
repz
repnz
and
loop
mov
mov
nop
in
ja
inc
lcall
add
mov
xchg
fildll
stos
xor
call
fwait
adc
jb
test
add
jns
lds
pop
mov
xchg
testl
and
mov
cmp
lock
dec
inc
pop
fnstcw
in
shrb
orb
lods
push
xor
popa
xchg
sets
in
mov
out
test
popf
ja
or
push
mov
out
mov
clc
add
dec
inc
sub
lock
es
jmp
mov
pop
repnz
jp
hlt
pop
push
cwtl
stc
mov
pop
loope
enter
push
jo
xchg
bound
or
pop
pop
lret
pushf
sbbb
pop
icebp
mov
inc
dec
push
stos
fcoml
cmp
dec
push
sti
ja
fisubrs
sub
add
pusha
popa
push
xchg
cs
adc
aaa
xchg
add
loope
mov
push
push
scas
and
sub
adcl
lret
sbb
inc
jecxz
inc
insb
aas
dec
negb
xchg
jno
das
add
and
or
repz
push
mov
scas
clc
dec
stos
jnp
cmpsl
adc
out
inc
enter
nop
adc
fdivrl
mov
pop
inc
mov
cltd
jbe
imul
rcrb
ret
lret
mov
xor
mov
fbld
and
xor
xor
and
push
add
and
mov
fldcw
sbb
adc
mov
iret
cwtl
mov
or
push
adc
or
cmp
mov
and
fstpt
sub
sahf
lods
jo
push
mov
imul
xchg
or
ss
pop
sbb
test
pop
fisttpll
add
movl
shlb
insb
fsts
insl
stos
adc
adcb
les
mov
pop
rclb
pop
fdivr
cmp
test
ret
inc
in
incb
outsl
sbb
inc
rcrb
idivb
movsb
mov
outsl
loop
dec
cld
test
jmp
sbb
pop
cmp
shl
adc
sub
in
lahf
add
sub
popa
cmp
cmp
xorl
aas
inc
les
mov
inc
xor
hlt
mov
fistpll
push
or
scas
inc
inc
add
scas
gs
rcr
mov
dec
jno
xor
or
hlt
sbb
sub
icebp
ret
inc
sub
or
xchg
mov
mov
sub
ds
mov
std
jo
adc
popa
in
and
xchg
xor
jecxz
or
fadd
out
fdivp
shl
xchg
push
add
inc
aam
dec
adc
xlat
inc
or
adc
fcmovnb
pop
insl
pop
cmp
stos
push
sub
cmpsb
lods
test
cmpsl
pusha
push
pop
jecxz
jle
shrb
popf
mov
xchg
inc
fisubrl
pop
ss
sub
dec
divb
aam
pop
fiaddl
inc
add
adc
mov
mov
mov
lret
in
lea
test
jns
jb
mov
xchg
push
lods
std
mov
sahf
sub
mov
push
cltd
and
push
add
enter
mov
jg
push
xchg
mov
xchg
add
lods
or
and
add
stos
cmp
test
lcall
scas
and
jae
lcall
out
fisubrl
scas
jmp
nop
jb
mov
sahf
inc
jge
in
jno
rorb
stos
movsb
stos
fisttps
cmp
pop
adc
mov
inc
mov
mov
xchg
mov
les
test
sub
adc
or
scas
sub
test
mov
ret
mov
test
jo
out
pop
push
pop
movsb
push
sti
int3
in
rorl
fnstcw
xlat
pop
and
leave
sub
mov
test
pop
in
je
push
or
add
fsubp
das
push
aaa
cmpsl
add
movsb
jecxz
scas
mov
sbb
cmp
inc
dec
aad
fstpt
pushf
loopne,pn
inc
cwtl
inc
and
cmp
js,pn
ret
sub
test
repnz
adc
push
iret
xchg
rorl
pushf
mov
out
cmp
mov
mov
arpl
stc
cwtl
sbb
xor
jmp
mov
add
into
aad
mov
int3
movsl
add
sub
rorl
rorb
pop
popf
or
xchg
add
push
jecxz
dec
jl
test
lcall
gs
in
and
mov
es
neg
jo
mov
push
xchg
inc
popf
or
pushf
iret
xchg
sub
or
mov
mov
jmp
out
icebp
inc
pop
sbb
and
xor
out
pushf
and
pop
icebp
faddl
adc
push
adc
stc
movsl
pop
and
dec
hlt
test
pop
dec
imul
push
and
inc
clc
inc
and
ret
sbb
push
pop
xor
lods
pop
pop
movsl
lods
xlat
movb
cli
std
or
lods
dec
dec
clc
push
loopne
sahf
out
repnz
push
xchg
jo
inc
out
mov
xor
jl
inc
mov
rolb
sbb
mull
iret
ds
xchg
js
mov
inc
lea
and
mov
sarl
jne
mov
or
mull
sub
test
adc
mov
adc
sub
inc
sub
out
and
mov
and
push
ds
jge
add
jge
inc
push
dec
lods
pop
mov
cmp
in
or
fwait
add
and
loope
test
sbb
pushl
scas
cli
mov
lods
sbb
push
push
std
push
test
or
or
jo
fbstp
stos
sbbl
push
fistl
repnz
pop
jmp
nop
jo
mov
dec
jne
pop
je
je
cltd
push
enter
push
sub
sub
imul
cmpsb
cmp
inc
mov
lcall
mov
mov
add
jp
sub
push
jno
or
jge
je
lds
pop
dec
scas
es
xchg
mov
jne
bound
and
js
sbb
lret
jnp
shl
sbb
jae
push
fs
loopne
inc
jns
in
repz
xchg
sbb
lods
mov
rolb
jns
add
stos
inc
lds
pop
jns
in
movsl
mov
out
test
pop
pop
cmp
fsubrl
mov
mov
cld
nop
push
lods
das
dec
add
je
iret
movsl
dec
mov
cmp
add
in
mov
loope
inc
mov
pop
or
sub
dec
adc
and
push
mov
push
jbe
ret
cwtl
jp
sub
mov
hlt
jbe
cmc
dec
cmpsl
add
add
js
push
or
jbe
add
int
out
loopne
fcompl
lret
push
adc
adc
iret
adc
jmp
ds
xchg
and
gs
xor
xchg
repz
push
xor
jg
aaa
loope
jns
push
cmp
or
add
push
rcll
shll
push
xor
cmpsb
int3
scas
mov
add
or
ss
push
sub
cli
adc
jmp
add
int3
outsb
fidivrs
sbb
outsb
adc
mov
andb
in
push
mov
inc
xchg
add
and
push
or
sub
or
pop
repnz
int3
mov
xchg
andps
mov
nop
outsb
mov
mov
sbb
jnp
addr16
add
add
ficompl
or
fistps
fcomip
data16
popa
push
pop
enter
gs
cmp
popf
pop
xchg
adc
mov
fs
pop
fmuls
fs
ss
and
jnp
inc
popl
test
jl
or
pop
in
loopne
xchg
push
push
mov
ja
jne
sub
push
push
jae
into
adc
pop
loop
inc
push
and
mov
mov
fucomip
les
pusha
movsl
rcr
push
adc
jle
xchg
inc
xchg
cmp
mov
cmp
int3
or
test
cmc
dec
mov
or
push
andl
gs
push
jnp
into
lds
mov
ficompl
cmpsl
jo
ret
cltd
pop
mov
pop
xor
or
stos
cmp
test
mov
push
lahf
xlat
out
jno
scas
das
dec
dec
add
xorb
inc
aaa
cli
ret
test
bound
xor
sbb
fwait
jmp
push
into
push
fwait
jle
mov
cmp
xor
push
sbb
add
mov
dec
popa
adc
loope
bound
jae
bound
insb
mov
jmp
ficomps
in
sbb
and
xchg
xor
cmp
and
mov
xor
mov
mov
xchg
pop
js
cmp
fs
addr16
adc
movsb
and
hlt
add
test
jmp
fidivrs
rcrb
or
mov
rorl
mov
xchg
sub
xchg
ficompl
call
in
mov
mov
repz
iret
lcall
push
push
vmread
aam
fwait
cwtl
in
outsb
and
pop
sub
add
xchg
loopne
cmpsl
andb
sub
sub
add
push
int3
inc
hlt
insb
jp
cmp
fldt
popa
dec
cmp
test
lcall
fiadds
popf
call
push
push
or
mov
xchg
or
imul
cmp
fmull
stos
call
cmp
iret
dec
push
adc
lret
push
or
dec
cmp
or
cmp
dec
or
outsb
int
addb
pop
ja
jae
mov
adc
std
push
into
inc
mov
scas
pop
xchg
lods
sti
xlat
loop
sub
pop
push
mov
jl
cmpsb
and
stos
out
dec
cmpb
ss
jae
in
jecxz
sbb
push
pop
pop
inc
fstps
fdivrp
push
xchg
insb
cmpl
fs
fdivr
rolb
push
enter
mov
sub
out
and
sbb
sub
or
rdtsc
push
pop
mov
mov
mov
ja
imul
jp
push
das
je
or
cmpsl
adc
lahf
jne
cli
js
fldenv
popf
sbb
xor
jmp
ret
xchg
dec
in
pusha
ret
lea
jp
mov
adc
imul
pop
push
or
and
icebp
enter
ja
mov
and
cmp
mov
lahf
aaa
rcrl
cmc
mov
cli
dec
clc
pop
daa
hlt
aas
clc
and
push
sbbl
xchg
adc
add
ja
int3
dec
lret
inc
or
jecxz
sbb
sbb
jb
fildll
pop
push
into
movsl
and
and
pop
int
or
push
ds
outsb
cmp
cmp
cmp
sbb
or
fcmovb
push
jnp
mov
test
lock
call
sti
and
xchg
scas
pop
aas
push
stos
out
jle
test
mov
dec
xor
mov
adc
fwait
ljmp
adc
out
movsb
pop
scas
dec
shll
icebp
mov
sbb
pop
out
sub
scas
cmp
jnp
add
push
fcompl
sub
sbb
and
xor
dec
add
ret
das
and
jne
add
mov
icebp
adc
lods
mov
sbb
int
pop
sbb
push
lea
mov
jg
cltd
or
pop
xchg
lock
or
or
xchg
jle
jmp
mov
mov
jno
daa
add
push
dec
test
je
mov
push
mov
sbb
outsl
test
cwtl
fsubr
push
loopne
test
push
dec
mov
shr
and
mov
addl
push
test
and
aad
pop
ljmp
fcoml
enter
cmc
ret
mov
xorb
dec
add
lock
add
mov
xor
pusha
xchg
cli
test
jae
sub
test
std
dec
leave
xchg
jle
and
insb
inc
mov
inc
cmpsb
rorl
idiv
xor
ss
mov
repz
cmp
lret
pop
mov
into
or
pop
cmp
push
rclb
push
adc
aaa
les
jmp
fbld
aaa
add
jp
mov
imul
jns
stos
mov
fs
mov
cld
sbb
mov
movsl
mov
pop
add
sbb
xor
lret
insb
test
repz
mov
xor
ss
add
fsubs
ja
push
mov
stos
ficompl
push
add
xor
jae
and
add
and
mov
or
out
outsb
in
test
loop
sub
mov
push
or
inc
push
notb
add
inc
mov
xchg
fadds
pop
push
sub
or
mov
lods
or
das
flds
aad
clc
lret
movsl
pop
push
test
pop
sbbb
in
push
mov
daa
inc
or
push
mov
loope
ret
jno
mov
cli
rorb
dec
enter
push
dec
daa
iret
jp
out
mov
stc
and
out
daa
mov
push
xor
movsl
xchg
jne
cltd
mov
ss
int3
dec
into
pop
sub
inc
addr16
scas
xchg
movsb
lret
jp
stos
idivl
imull
cmp
mov
ror
ret
mov
into
rorl
xor
pop
roll
adc
jae
dec
mov
or
mov
and
mov
leave
cs
sub
push
out
pop
outsb
das
movsl
jns
xchg
adc
xchg
sbb
or
outsb
clc
dec
cmp
and
inc
mov
inc
xchg
xor
je
mov
cmp
lock
cmp
sahf
test
loopne
xchg
les
pusha
xor
lock
xchg
dec
scas
sarb
test
addr16
xchg
fcoml
cmpsb
mov
pop
xchg
xchg
icebp
inc
lods
adcl
inc
sbbb
jns
test
mov
pop
jl
sub
fimull
adc
sbb
xor
dec
ja
xor
xchg
ljmp
sarl
inc
mov
lea
into
cmpsb
scas
lods
push
cmc
or
pop
add
xchg
movsl
cmc
sbb
addps
js
test
popa
mov
and
or
cwtl
pop
iret
mov
ljmp
add
lcall
lahf
daa
outsb
out
out
cmp
pop
call
or
mov
test
lods
dec
movb
pop
je
insb
fbld
cmpsl
cwtl
jmp
add
and
jp
pushf
sub
call
mov
xor
mov
les
dec
mov
inc
jns
mov
lods
outsl
adc
fwait
mov
mov
push
insl
or
inc
mov
inc
push
dec
pop
adc
jb
in
imul
loop
shrl
inc
mov
jbe
mov
jge
add
ds
and
sub
jbe
cli
and
shll
sub
sub
data16
ja
nop
mov
into
ret
lret
stos
pusha
test
mov
xor
in
popa
shlb
pop
mov
jae
pop
xor
adc
dec
les
mov
loop
and
loop
add
shl
pop
mov
inc
sbb
sahf
jle
bound
icebp
mov
and
inc
add
repnz
xor
insl
pop
cmp
jge
test
pop
jp
sbb
lret
mov
pop
in
sbb
stos
mov
fnstenv
in
jecxz
dec
adc
jle
cli
adc
je
dec
in
lods
stos
cmc
mov
dec
push
cmpsb
mov
or
pop
outsb
xor
in
push
cltd
cmpsl
or
mov
push
js
sub
fwait
jp
sbb
pusha
jecxz
jle
sub
pusha
rcrb
in
add
mov
sub
inc
sub
inc
inc
iret
je
aam
xchg
testl
xchg
addr16
jne
nop
popa
lock
sbb
and
in
adc
mov
rol
jge
cli
add
scas
cmp
xor
mov
outsl
lret
dec
mov
xchg
test
and
or
add
int
and
clc
jl
daa
xor
cmp
pop
repz
and
jmp
imul
sub
dec
lods
push
xchg
xor
lcall
jle
test
fldenv
jno
dec
inc
fistpll
aad
xlat
push
push
add
ss
or
orl
dec
clc
jo
xlat
or
daa
and
aam
ja
stos
nop
mov
into
std
xchg
stc
fnstenv
rcl
aam
cmp
pop
shlb
mov
das
iret
fildl
add
int
insb
loopne
loopne
xor
inc
in
nop
orl
adc
shlb
jmp
xchg
inc
jle
loope
test
dec
test
ds
xor
je
jl
push
xchg
gs
mov
cmp
mov
les
pop
popf
and
sahf
scas
movsl
fldenv
int
je
add
ds
notb
push
xchg
gs
sub
adc
je
mov
mov
sbb
sbb
shrd
and
inc
bound
or
mov
lods
scas
in
pop
mov
sub
add
sub
nop
lret
popa
jmp
jno
stc
lock
mov
jecxz
popa
popf
xor
test
bnd
push
or
leave
inc
movsb
out
int
adc
adc
pop
push
or
xor
inc
pop
int3
cltd
inc
mov
pop
push
pushf
add
add
inc
pop
inc
dec
pop
inc
mov
nop
into
pushl
icebp
push
and
repnz
jp
daa
pop
jnp
xchg
mov
and
test
fadds
stos
push
jae
pop
pusha
jns
testl
inc
js
daa
hlt
test
mov
mov
lret
sbb
arpl
ss
enter
cmp
aaa
adc
sub
pusha
pop
xor
popf
out
jmp
add
mov
loopne
cmpl
scas
mov
xchg
mov
sub
pop
mov
jne
sub
jmp
icebp
push
das
add
xor
sub
mov
push
hlt
dec
sub
bound
adc
fwait
cmpsb
pop
stc
cmp
sub
mov
aas
test
aad
pop
jmp
xchg
movsl
cmp
sub
rcrb
rep
pop
int3
xor
dec
mov
and
ljmp
pop
std
pop
std
mov
pop
fisubrs
mov
and
sbb
stos
subl
adc
pop
lds
mov
sbb
fsubrp
push
out
push
sbb
push
add
xor
xchg
out
or
paddsb
push
inc
mov
cmpsb
rcll
cmc
lret
jle
mov
pushf
xor
push
push
mov
sbbl
pusha
add
rol
sti
inc
fsubl
or
inc
push
adc
arpl
mov
and
and
xor
cmpsl
arpl
repnz
ds
fstpl
sti
into
mov
or
fidivrl
outsl
stos
add
sti
arpl
insb
adc
andb
jnp
xchg
lea
cmp
lret
xchg
ret
cmp
pop
adc
shl
mov
jnp
push
adc
loope
mov
outsl
inc
adc
addr16
mov
or
movsl
mov
movsl
outsl
sub
jne
or
popa
push
gs
pop
cltd
nop
or
in
jmp
sbb
ja
cmp
out
stos
jle
popa
xchg
fisubrs
jmp
mov
add
bound
scas
push
fisubrs
add
jbe
movsl
mov
mov
mov
add
pop
push
adc
rcrl
out
cmp
jecxz
jne
in
hlt
add
push
xchg
cmp
in
cld
pop
ss
cmp
mov
sub
out
push
daa
lods
push
iret
mov
mov
cmc
fisttpl
pop
enter
pop
inc
jns
repz
inc
cwtl
and
inc
mov
lods
xchg
rcll
mov
outsb
adc
repnz
add
shlb
jo
enter
lock
cltd
xchg
and
xchg
jl
push
push
test
pop
mov
pminsw
hlt
ja
sbb
scas
shll
jo
lret
aam
mov
xchg
loop
sahf
mov
lahf
jns
pop
enter
lcall
xchg
loope
push
and
rcl
push
sub
jbe,pn
and
aas
adc
push
adc
jbe
lcall
push
mov
inc
dec
pushf
fistps
scas
pop
push
pusha
mov
mov
cmp
adc
dec
int3
cmp
jne
sbb
sbb
call
lds
cmpb
adc
rcll
dec
rorl
fnstenv
cmpl
push
pop
jle,pn
or
sub
mov
gs
cwtl
aaa
pop
test
in
lcall
dec
fs
dec
sub
mov
inc
jae
jne
ljmp
test
stc
push
push
pop
test
jb
sarl
dec
fidivrl
push
cmp
shrl
lods
shlb
dec
enter
cmp
dec
and
mov
push
clc
les
cmc
orb
pop
add
and
and
sub
and
jno
fmull
xchg
outsl
or
jo
pushf
xor
loope
add
mov
sub
lahf
les
leave
inc
sub
xchg
dec
cmp
leave
cmp
stos
push
aaa
xchg
xchg
sub
pop
movsb
icebp
add
inc
gs
pop
adc
dec
mov
pop
mov
movsl
push
lods
adc
ds
stos
mov
ljmp
enter
mov
test
dec
pop
inc
mov
test
sub
push
lods
ds
xor
xchg
scas
outsl
gs
pop
xlat
divb
fimuls
mov
or
add
pop
jecxz
stc
inc
mov
rorl
or
pop
ret
stos
je
inc
push
std
iret
push
xchg
cmp
icebp
jae
repz
cmp
xor
mov
int
fcomps
jmp
push
cmpsb
cmpsl
inc
adc
sub
inc
scas
cmp
bnd
push
sahf
pop
xchg
cmp
in
lret
xor
mov
jecxz
lret
movsb
pop
and
imul
loop
shr
rorb
repz
cltd
xor
dec
and
push
xor
neg
mov
jle
popa
les
cmc
push
push
pusha
ret
bound
stc
jle
dec
les
sub
mov
xchg
jmp
arpl
sbb
imul
jb
push
stos
rol
sub
mov
sub
out
ficoml
scas
das
jne
lahf
aam
aas
dec
movsl
int
jl
lret
xchg
pop
fs
xor
test
fucom
inc
inc
push
repz
cld
mov
fcmovnbe
aad
push
sahf
aad
call
adc
push
pop
inc
pop
pop
mov
fdivr
clc
mov
call
push
mov
fldcw
sub
jge
sbb
cmp
push
testl
add
pop
cmc
mov
test
cmpsb
aad
or
or
mov
and
das
adc
xlat
pop
adc
lret
jmp
push
add
adc
sub
xor
push
mov
rcl
inc
inc
dec
push
mov
icebp
xchg
test
out
fsub
add
hlt
movsl
and
pop
mov
and
adc
mov
and
leave
push
pop
pop
ja
cwtl
movsb
int
pop
push
daa
mov
push
xchg
leave
aas
sub
push
scas
inc
rorl
sub
and
xor
repnz
mov
pop
fwait
lahf
xchg
jbe
push
sahf
push
fnstsw
addr16
mov
push
lea
jge
mov
popa
xchg
sub
jl
js
rclb
imul
dec
push
push
xlat
jmp
test
mov
push
orb
in
arpl
pop
fistps
and
mov
push
arpl
jmp
test
fcoms
cmc
xorb
add
inc
std
js
ss
inc
push
add
sahf
sbb
icebp
jge
nop
test
inc
je
stc
data16
jg
add
sbbl
bnd
shlb
arpl
sub
popf
or
out
or
xchg
mov
stc
push
insl
out
jle
dec
fs
fiaddl
movsl
or
sbb
cmp
test
push
sbb
roll
pop
xchg
cs
push
fwait
mov
shrb
push
popa
popf
scas
pop
out
cmp
pop
out
popl
rclb
outsb
mov
in
and
adc
dec
popa
inc
je
ljmp
cs
addr16
mov
scas
pop
stos
mov
jp
xchg
repnz
mov
mov
aam
pop
aaa
insl
or
test
xchg
mov
imul
push
cmp
cwtl
cmpsl
and
sti
loope
out
jb
sbb
inc
sbb
add
jae
cmp
sbb
xchg
jno
lods
xlat
es
push
xor
add
adc
in
push
sub
sub
lock
iret
sti
into
hlt
sbb
inc
push
push
inc
mov
das
cs
fprem1
pop
in
push
or
xor
pop
and
mov
aas
sbb
imul
into
cwtl
push
es
xchg
mov
dec
inc
pop
mov
stos
repz
jo
leave
fcoml
scas
cmp
or
adc
jge
or
adc
adc
jle
push
dec
hlt
mov
jle
enter
pop
push
pop
or
call
mov
icebp
xor
cmpsl
out
mov
pop
aad
push
or
cmp
push
dec
cli
xchg
inc
pop
pop
lret
stc
mov
cmp
mov
jmp
push
movsb
cmpsb
lcall
pop
ret
stos
scas
daa
std
adc
sbb
cmp
xor
mov
scas
push
fs
mov
incb
sbb
jns
inc
pop
mov
mov
inc
sti
adc
les
pop
and
loop
daa
add
ret
push
push
dec
add
mov
push
aaa
mov
test
push
loope
lods
mov
sub
dec
and
mov
xor
imul
xchg
fistps
jne
enter
or
mov
sub
movsb
fdivl
adc
jae
adc
xchg
dec
mov
insl
cmp
clc
daa
cli
mov
sub
and
popf
addr16
mov
dec
xlat
or
sbb
lds
sti
test
mov
cmpsb
in
jo
rcr
pop
push
sarl
outsl
sub
pushf
test
mov
and
xlat
jge
es
push
sub
mov
movsb
xor
stos
js
mov
dec
imulb
aas
rcrl
arpl
test
rclb
lret
roll
jae
jns
and
mov
lods
aad
xchg
cltd
xor
sbb
lret
mov
xor
rcrb
sbb
test
ja
loope
bound
out
ret
fstl
pop
xchg
jb
and
push
mov
in
fisubrs
pop
lcall
lock
int3
lods
and
jns
xchg
or
sbb
jmp
lods
mov
mov
jo
inc
xlat
cltd
mov
xchg
inc
push
add
add
and
das
popa
xchg
sub
aas
cmpsb
mov
sbb
stos
fisubrs
pop
xor
aad
adc
or
sbb
cli
or
pop
push
cmpsl
or
pop
jnp
lret
sub
cmp
xor
inc
test
mov
orl
push
outsl
and
xchg
and
nop
addl
inc
inc
jecxz
and
repnz
andl
mov
mov
pusha
lcall
inc
sbb
out
imul
jbe
cmp
lahf
inc
mov
scas
push
idivl
mov
mov
cmc
jl
pusha
pop
leave
add
mov
xchg
cwtl
jb
scas
xchg
sub
mov
in
cmp
cwtl
fs
push
frstor
lret
sbb
negl
pop
popf
push
jmp
jp
sub
setns
fmull
clc
xorl
cmpsb
popf
ljmp
dec
jmp
dec
shlb
sub
xor
dec
stos
cmpxchg
fidivrs
int
cli
cltd
cmpsb
fildl
add
lahf
pop
cmp
jo
mov
lret
adc
xchg
mov
out
nop
push
sbb
add
pop
cmc
inc
fstps
pop
xchg
jno
push
mov
or
cmc
mov
or
js
sub
push
and
arpl
stos
test
xlat
leave
push
sbb
or
and
scas
fdivrs
inc
push
xchg
bound
mov
inc
jbe
in
mov
xchg
inc
data16
cli
fcmovne
iret
icebp
lret
add
push
mov
and
orb
inc
imul
jl,pt
push
testl
clc
mov
adcl
movb
arpl
rcl
mov
sub
jbe
sub
and
scas
repz
jnp
mov
xor
mov
shrl
xchg
mov
adc
mov
xor
sbb
add
mov
jb
fcompl
jno
jns
out
jl
xor
jnp
or
ret
fcomip
or
sbb
add
ret
inc
out
out
ss
sub
movsb
push
insb
sbb
jo
inc
cmp
fsts
dec
push
or
lret
stc
repnz
cli
and
aam
iret
push
loopne
dec
aam
xchg
scas
fisubl
inc
out
nop
push
iret
shlb
pop
insl
test
lcall
mov
or
jbe
push
cmp
jp
scas
cmpsb
or
or
dec
out
sub
outsl
das
jle
push
jns
dec
sbb
jp
loop
and
loop
or
je
inc
repz
push
out
inc
sbb
jg
adc
leave
push
and
xchg
push
mulps
or
inc
fdivrl
paddusw
jecxz
fnsave
push
rorb
pop
stc
loope
clc
xchg
jo
icebp
loope
clc
cwtl
out
mov
dec
sub
out
addl
mov
pop
das
sub
into
adc
xchg
inc
jl
repz
add
add
cli
cmpsb
not
pop
lds
rolb
lods
push
add
push
mov
cs
ds
pusha
xchg
pop
stos
inc
push
or
fadds
dec
sub
jne
fs
fistpl
ds
mov
test
jge
fisubrl
pop
stos
insl
jle
int
pop
sbb
pop
dec
lods
js
push
push
outsb
test
mov
lahf
imul
insb
outsl
aas
pop
cmp
pop
lods
cs
or
mov
jmp
mov
shll
test
in
inc
push
lret
adc
xchg
lods
push
or
add
icebp
push
fistpl
xchg
jne
jbe
into
pop
outsl
xor
push
push
pusha
lods
mov
mov
add
addr16
out
pushf
pop
stos
in
stos
sahf
mov
out
push
frstor
insl
cmpsb
jl
daa
leave
adc
mov
mov
mov
xchg
mov
lret
xchg
mov
push
mov
lret
add
push
mov
cld
inc
pop
les
mov
xor
test
ret
push
cmp
push
push
xchg
minps
test
push
popa
adc
test
jo
adc
or
arpl
and
das
scas
scas
movl
jl
out
in
inc
jnp
fxam
pop
lea
loop
inc
hlt
mov
and
fwait
mov
scas
cs
xor
add
and
fadds
leave
fstl
ret
insb
insl
adc
mov
or
addr16
adc
jo
fsubrl
or
mov
arpl
mov
jnp
sub
mov
cmp
stos
fisubl
rclb
push
ficompl
pop
lcall
sbbl
dec
xchg
xchg
push
mov
xchg
insb
cmpsl
and
cmpsb
push
xchg
mov
jo
pop
adc
xchg
jo
nop
jmp
cmp
sub
testl
or
or
outsl
data16
test
pop
insl
jae
test
add
xor
repz
pop
cmp
inc
mov
int
fsts
movsb
loope
xor
jle
ds
sarl
repz
bound
pop
pushl
fisubl
pop
xchg
push
ljmp
sub
jmp
test
cmp
mov
dec
push
or
movsl
pop
mov
out
push
sub
pop
mov
dec
push
scas
sbb
jbe
into
xchg
add
pop
mov
lods
pop
sub
mov
mov
mov
fwait
inc
and
pop
je
push
jae
jl
push
sahf
out
pop
pusha
insb
push
xchg
jbe
push
lret
and
push
add
xchg
enter
add
cmp
add
mov
push
les
shlb
cmp
out
mov
test
cli
movsb
fsts
cmc
add
pop
daa
pop
adc
pop
xor
fstl
push
pop
adc
pop
jmp
lret
dec
insl
sub
add
push
pushf
jns
cwtl
addb
out
pop
xor
mov
cs
jle
outsl
push
xor
jo
sahf
int3
xchg
cmp
cmc
mov
or
das
lret
mov
and
xor
xchg
int
mov
mov
lcall
and
cmp
jp
sti
enter
sub
mov
and
jge
push
sti
mov
pop
jecxz
mov
mov
popf
or
mov
add
sub
pop
stos
jl
test
stos
fbld
push
lret
out
popf
dec
xchg
inc
ret
inc
je
stos
jecxz
popf
out
adc
mov
sbb
dec
push
xchg
dec
aad
cmpsl
in
sub
jg
push
mov
aam
jmp
in
hlt
adc
or
fs
sbb
adc
push
scas
pop
jge
inc
out
mov
inc
jae,pn
inc
in
sarb
jno
and
adc
pop
sub
sbb
jno
push
out
aas
das
lahf
mov
movsl
mov
movsb
xchg
and
sbb
sbb
jbe
lods
lret
cmp
rcl
ror
inc
ss
ds
loopne
adc
sbb
add
mov
mov
outsl
lea
add
inc
out
faddl
repz
mulb
sub
xchg
xchg
mov
cmc
mov
psllw
xchg
and
mov
mov
xchg
int3
dec
adc
jp
loopnew
jae
jns
in
push
shlb
cmp
popaw
aad
mov
mov
shll
js
adc
inc
sub
movsl
fistps
jnp
and
pop
movsl
inc
ret
into
ret
adc
pop
stos
pushf
stos
hlt
mov
pop
sub
and
outsb
add
daa
mov
andl
aad
xor
cmc
cltd
imul
xor
ja
out
mov
cs
repnz
mov
push
mov
rcll
fs
scas
adc
pop
fs
nop
mov
add
push
arpl
add
sbb
jecxz
and
sub
sbb
cmp
or
pop
les
insb
jecxz
inc
jge
adc
fmull
fcoml
adc
inc
cmp
inc
xor
push
or
mov
jae
pop
mov
fcmove
dec
or
dec
jle
xor
dec
mov
aas
call
xor
mov
add
repnz
gs
push
popf
cmp
or
into
sbb
popl
and
nop
test
dec
xor
bound
add
dec
xor
adc
lock
pop
sub
pushf
lea
cmp
push
fidivrs
fadds
cmp
jecxz
sbb
icebp
pop
push
mov
hlt
sub
mov
icebp
or
fucomp
icebp
sub
out
sub
cmp
push
cmp
stos
mov
rclb
shlb
rolb
xchg
sub
or
imul
sbb
daa
fwait
test
hlt
cmp
or
les
mov
jb
and
mov
mov
and
mov
jg
adc
arpl
scas
and
ds
inc
scas
stos
repnz
push
ds
les
int3
ret
mov
jle
stc
mov
jns
mov
adc
push
out
dec
push
jne
ss
push
into
pop
imul
ret
xchg
push
dec
mov
mov
xor
test
inc
xor
pop
add
cmc
mov
and
xor
add
jae
in
inc
sbb
push
push
sahf
dec
sarb
sbb
out
cmp
mov
cld
jecxz
sub
mov
repnz
mov
push
and
les
xchg
dec
cmpsb
pop
adc
cmp
pusha
bound
push
xor
jnp
sub
cmp
test
jge
jl
jmp
dec
dec
ret
test
cs
cmp
push
lcall
arpl
sub
mov
in
cmp
testl
inc
pop
scas
cmp
cmp
jns
inc
dec
cmp
lods
sub
mov
mov
cld
lahf
or
cmp
dec
pop
xlat
mov
cs
pop
mov
mov
into
lret
adc
fs
xchg
xor
and
sbb
mov
loopne
aas
or
in
enter
popf
push
mov
jl
xchg
sub
cmp
nop
sbb
xchg
iret
push
frstor
pop
sub
lods
push
dec
pushf
in
aam
fidivrs
inc
ss
xchg
cli
inc
jmp
dec
mov
rcll
sbb
push
ror
xor
push
sub
and
inc
add
lret
jl
xchg
in
cmc
mov
in
jecxz
cld
icebp
mov
aas
bound
inc
ret
mov
aam
adc
push
and
pop
push
fisubs
cmp
push
jg
mov
xchg
adc
inc
sub
mov
mov
pop
addb
push
stc
out
cmpsb
sbb
mov
mov
lods
jg
pop
lea
or
pop
fisttpl
push
and
jo
push
cmp
pop
xchg
add
xor
jns
jno
mov
adc
mov
inc
mov
mov
cmpsl
push
mov
push
mov
movsb
mov
mov
inc
mov
push
lods
mov
nop
add
lcall
test
lret
aad
pop
out
push
pop
xor
mov
leave
sarb
repnz
fdivrs
das
adc
sub
ljmp
fildl
lret
shlb
mov
stos
xorl
out
jp
inc
dec
pop
mov
add
cli
imul
clc
aad
mov
mov
cmp
mov
dec
jge
jecxz
aas
aaa
inc
mov
mov
dec
push
enter
adc
xchg
pop
xor
mov
movsb
cmp
fxch
pop
jle
fadd
and
pop
outsb
push
lcall
out
lret
fsts
mov
push
mov
sub
pop
jg
out
hlt
fisubl
inc
sub
mov
fs
cmp
add
hlt
into
cs
add
push
dec
inc
dec
inc
subl
iret
sbb
dec
jp,pn
pop
fistps
or
mov
popf
mov
sub
pop
fiadds
lods
pop
into
pop
or
in
cltd
pop
jo
mov
dec
mov
add
xchg
mov
inc
mov
movsb
xor
aaa
inc
inc
popa
mov
shll
cs
lock
adcl
pop
jo
fists
or
fdivr
cmpsb
sbb
fstps
icebp
pop
sub
bound
push
sub
cmp
fidivs
les
adc
push
jns
mov
add
imul
mov
bound
ljmp
insb
inc
dec
pop
jbe
imul
fyl2x
or
in
pop
sti
jle
jns
call
fndisi(8087
enter
out
adc
jno
iret
mov
mov
and
push
push
sbb
sbb
ficoml
inc
mov
push
jnp
lock
push
mov
ss
mov
inc
or
and
hlt
xchg
and
cmp
ds
adc
jbe
jne
fsubl
jne
mov
adc
xchg
repz
or
sbb
aam
cld
or
and
pushf
mov
leave
scas
cld
test
cmp
or
sbbl
aas
sbb
inc
inc
jne
cwtl
lret
xchg
ret
sbb
andb
mov
mov
xchg
imul
dec
mov
lods
mov
sti
popa
ret
inc
sahf
movl
adc
inc
sub
inc
loope
jg
daa
out
setp
jbe
pop
pop
mov
inc
mov
or
mov
mov
jmp
sub
add
mov
jno
negb
mov
xorl
jo
sbb
imull
test
mov
pop
cmpsb
scas
js
pop
add
test
mov
dec
mov
int
ficomps
leave
push
outsb
add
mov
popf
mov
cli
push
enter
mov
and
and
idivb
mov
outsl
nop
or
aas
pop
out
clc
icebp
rorb
pop
movsl
mov
lret
das
lcall
imul
jp
cmp
adc
fcomp
xor
mov
xor
orb
hlt
int3
inc
clc
cmp
mov
inc
add
or
mov
lods
hlt
pop
cmc
xchg
push
dec
lods
push
push
sub
adc
popa
add
push
test
cmp
sbb
cmpsb
icebp
dec
adcl
sbb
test
outsl
int
out
out
mov
clc
in
sub
xchg
inc
dec
push
je
test
in
incb
das
and
sub
sub
mov
ret
test
xchg
fs
nop
sub
int3
xor
xchg
movsl
gs
imul
xchg
mov
add
sub
rorb
xchg
rcl
pop
cmp
inc
rclb
jne
push
addl
pop
pop
out
lods
inc
lcall
aas
lds
jmp
out
jg
pop
fwait
lahf
lods
out
pop
ss
lahf
addr16
or
push
pop
mov
push
ja
sub
mov
inc
nop
push
cmpsl
aad
enter
in
inc
mov
cs
push
bound
push
aad
outsl
jae
cwtl
adc
idivb
outsl
dec
push
outsl
sub
pusha
mov
sbb
je
mov
mov
mov
push
push
incb
mov
jnp
push
mov
iret
lods
out
stos
sub
test
xor
into
cli
fwait
imul
jge
push
adc
aam
cmp
push
or
mov
sub
xor
jmp
movsb
in
mov
push
dec
jo
mov
xlat
dec
cmpsl
add
aam
pop
fisubrs
fisttps
push
push
clc
ja
pop
fnclex
or
xlat
sub
fwait
add
inc
mov
test
das
sbb
mov
in
jne
lea
test
cmc
push
add
add
push
sbb
inc
jmp
push
cmc
adc
xor
or
dec
ljmp
add
sub
inc
into
mov
pop
lcall
adc
out
push
cmp
dec
or
movsl
inc
jne
adc
mov
push
arpl
mov
loopne
sbb
dec
and
mov
or
js
je
cmpsl
xchg
mov
cmp
mov
push
mov
mov
push
pop
jo
rcl
dec
pop
loopnew
cmp
add
pusha
xchg
subb
out
add
js
add
adc
jecxz
iret
adc
enter
outsb
lds
mov
mov
aaa
lods
cli
lahf
leave
lahf
pop
out
and
not
sahf
mov
and
pop
mov
push
fwait
ds
cs
stos
xchg
sbb
mov
pop
cmp
inc
add
mov
es
test
out
cwtl
jns
xlat
or
pop
mov
pop
add
add
sub
dec
ret
lods
sub
aam
xor
pop
cmp
cwtl
push
push
cmpsb
push
dec
xchg
dec
repz
xchg
mov
mov
pop
fstp
insl
lcall
mov
mov
inc
je
pop
xor
insb
mov
rcll
push
rcrl
mov
xchg
fidivrl
xchg
xchg
mov
stos
ret
jmp
and
in
in
sub
mov
lods
push
xchg
add
pusha
push
out
mov
popa
cwtl
adc
stos
mov
test
push
mov
xlat
pop
or
lcall
jbe
lds
xor
orb
das
mov
je
mov
lret
pop
jge
or
dec
push
jmp
mov
adc
jmp
into
pop
mov
pusha
mov
stc
test
leave
and
rorb
aad
outsb
shll
xor
pop
xchg
out
es
cmp
ja
pop
fistpl
dec
aas
pop
pushl
scas
add
in
adc
add
sbb
inc
std
or
fs
push
or
icebp
jne
stc
jns
mov
push
pusha
mov
adc
inc
lods
or
or
aad
inc
in
ds
pop
mov
inc
outsl
rcrl
adc
lods
adc
loopne
xor
sbb
clc
cmc
mov
inc
lods
aam
jmp
cmpsb
inc
xor
loopne
mov
or
cmp
mov
cmp
sub
imul
insl
mov
mov
rolb
inc
xchg
icebp
mov
xor
decb
and
scas
decl
pop
dec
and
jp
data16
es
pop
ret
daa
add
inc
push
in
mov
in
loopne
jbe
repz
adc
xchg
or
or
push
leave
int3
xor
xchg
fmull
lea
or
jnp
and
mov
add
pusha
mov
push
incb
add
enter
jp
push
adc
push
mov
int
add
mov
std
lds
pop
rsm
or
and
adc
scas
inc
mov
xor
adcb
pop
mov
and
std
mov
pop
mov
pop
repnz
cmp
push
mov
mov
rcll
push
mov
jge
aaa
jne
mov
and
arpl
fldenv
xchg
lods
ljmp
pop
inc
sbb
ret
dec
mov
dec
cwtl
sub
cmpsb
imul
or
push
or
xchg
add
mov
and
push
shlb
aam
fstpt
adc
hlt
je
pop
xlat
dec
ficoms
orl
sti
les
shl
dec
adc
add
movsl
adc
movsb
jns
mov
insb
loop
movsl
testl
sti
ficoml
mov
ds
push
int3
test
les
push
out
add
pop
fwait
movsb
outsl
int3
idivb
push
jb
insb
bound
or
push
mov
lds
mov
jae
divl
xlat
testb
mov
sub
outsl
aas
jle
out
aad
fidivrl
mov
push
out
xor
jnp
pop
stc
jecxz
ja
and
push
add
xchg
pop
xor
testb
movsb
add
inc
jmp
mov
sahf
pop
stos
stos
shl
jbe
in
xlat
xchg
cmp
imul
test
insl
sub
mov
sti
and
mov
pop
mov
push
cmc
aaa
push
sbb
mov
mov
pop
mov
mov
lock
xor
pop
xor
nop
fldcw
int
test
pop
mov
mov
leave
pop
out
es
sbb
dec
lret
or
clc
mov
mov
lock
in
leave
shlb
and
lret
sub
sub
cli
or
xor
repz
push
nop
ret
test
cmp
or
and
int3
je
mov
loope
cmp
xor
pop
add
sbb
mov
in
clc
adc
lock
adc
stos
mov
adc
es
out
xor
loopne
loop
daa
cmp
inc
xchg
and
int3
movsl
rorl
outsb
imul
add
jg
scas
push
lahf
dec
lcall
imul
nop
mov
cmp
popa
sti
sub
imul
sti
pop
cmp
stc
mov
adc
lods
mov
dec
add
cmp
call
loope
push
push
xor
test
jo
xchg
sub
jg
fcomip
stc
cmp
jns
adc
int
dec
jns
mov
dec
das
insl
push
inc
loope
xchg
push
loop
fmull
xchg
push
out
mov
push
pop
sbb
clc
dec
iret
repz
pop
and
mov
dec
push
and
lods
xchg
cmp
test
pop
xchg
sub
xchg
inc
sbb
mov
lcall
repz
clc
out
jg
iret
cmp
in
or
mov
cmpsl
cli
lock
mov
nop
xor
add
lea
add
test
lock
lods
ficoml
jecxz
xorl
cs
cmp
xchg
pop
xor
cmpsb
push
mov
pop
sub
fadds
test
dec
lahf
cwtl
inc
push
movsl
lds
xor
imul
adc
loopne
loopne
mov
sahf
in
jp
xchg
xor
mov
cmp
add
mov
pop
add
cli
fistpl
cltd
ret
roll
add
add
or
push
popf
inc
addl
push
mov
in
pop
aaa
push
and
fldenv
push
cmp
push
test
push
mov
fwait
pop
pop
idivb
xchg
adc
lds
push
stos
hlt
scas
jbe
xchg
lcall
jg
jmp
jo
cmc
pushf
jne
mov
inc
fstl
sub
cs
inc
fimuls
inc
cmp
stc
push
add
add
sub
inc
and
push
dec
xor
adc
jne
addl
and
and
mov
adcb
mulb
mov
xor
sbb
movsb
pushl
sub
dec
stos
inc
adc
jbe
stc
and
mov
bound
push
push
mov
inc
inc
jne
adc
mov
jle
fdiv
cli
inc
nop
xor
or
lret
sti
scas
add
sub
arpl
dec
jle
inc
dec
mov
shl
jl
jnp
loop
aad
add
push
inc
pop
mov
push
push
push
inc
add
push
cld
pop
pop
and
pushf
data16
aam
mov
shrl
into
pop
cmpsl
xchg
sub
aam
cmp
push
sahf
pop
fnstenv
ret
cmp
mov
lret
mov
cwtl
jo
imul
push
leave
sbb
and
insl
sahf
cmpsl
ret
and
fnstenv
or
xchg
add
push
mov
incb
imul
cltd
mov
add
test
inc
out
cwtl
xlat
adc
mov
push
xchg
push
fimuls
xor
cmpsb
sbb
pop
cs
jae
xchg
mov
adc
add
pop
imul
add
and
lahf
sub
mov
and
test
mov
cmp
push
imul
add
mov
push
outsl
fwait
lcall
dec
and
or
fcoml
das
mov
xor
mov
inc
pop
mov
mov
and
and
out
jl
mov
cmpsb
sub
ficoml
bound
std
dec
and
shll
jne
dec
test
bound
pop
pushf
xchg
sbb
pop
jne
push
sbb
shld
jl
and
push
and
push
outsb
add
pop
daa
jg
sarb
cmp
lahf
pop
pop
and
stc
stos
and
fdivrl
imul
lea
popa
pop
nop
sbb
xor
mov
mov
sub
lock
push
xchg
loope
dec
add
je
pushf
push
push
arpl
xor
cltd
jns
and
call
mov
test
or
xor
pop
adc
ljmp
sahf
cmp
lret
imul
and
test
mov
or
push
cmc
aad
add
out
inc
sbb
mov
pop
xchg
pextrw
sub
mov
sbb
jo
push
xchg
shrb
cs
scas
and
inc
push
or
or
push
and
add
mov
movsl
je
mov
pop
mov
or
mov
ja
imul
clc
mov
pop
sbb
int3
imul
out
xor
les
stc
add
addr16
sub
mov
push
negl
int
or
and
sbb
dec
movsl
clc
arpl
add
pop
nop
mov
jmp
fs
faddl
lock
mov
xlat
js
and
mov
sub
sub
mov
decl
ffree
mov
xlat
push
mov
mov
add
rcl
mulb
outsl
mov
jae
sbb
cmp
ret
fcompl
fdivrl
push
mov
sbb
mov
mov
or
xor
sti
inc
fimull
and
ljmp
pop
rorb
das
movl
fisubl
push
xchg
cmp
outsl
inc
sub
mov
enter
ss
rorb
inc
lods
mov
mov
sub
xor
popa
insl
sbb
shrb
jbe
mov
js
lock
in
jno
in
ljmp
ljmp
adc
push
mov
adc
push
dec
mov
push
icebp
cmc
outsl
sbb
pop
inc
insb
xchg
mov
mov
pop
jp
inc
cmc
je
dec
std
and
sub
adc
addb
or
lret
sub
dec
fdivrs
or
scas
add
sub
push
sbb
aas
outsl
push
inc
add
xlat
outsb
push
int3
jae
xchg
and
std
xor
jnp
mov
pop
test
mov
adc
sarb
pop
sub
pop
inc
sub
mov
push
mov
ret
dec
jmp
mov
data16
sbb
sub
jnp
lds
fiaddl
js
dec
push
and
das
and
mov
add
xchg
cmp
gs
jp
inc
add
jl
push
mov
in
push
jp
gs
stc
mov
cmp
mov
mov
add
das
test
outsl
mov
sbb
ja
mov
mov
jle
aas
into
add
decl
sub
stos
testb
mov
sbb
mov
mov
push
sub
bound
inc
dec
pop
out
daa
lods
xor
jno
ficoms
sbb
add
mov
out
pop
dec
and
fadd
pop
loop
inc
out
jg
nop
jo
rcrb
xchg
pop
jg
mov
sub
push
aad
in
add
lods
mov
repz
scas
mov
dec
sub
cmc
icebp
test
lea
jmp
or
outsl
fidivrs
jne
push
fsubrl
loop
push
mov
add
mov
call
negl
and
pop
or
lcall
mov
enter
sbb
cltd
stc
pop
aad
pop
jne
cwtl
movb
jnp
jbe
into
mov
or
loop
push
pop
dec
cmpsl
pop
push
ds
mov
loope
icebp
push
arpl
adc
ror
or
mov
push
rsm
sub
mov
test
and
jg
mov
push
arpl
ja
mov
imulb
arpl
scas
shrb
jle
adc
sbb
in
out
xor
rclb
xchg
add
mov
pop
orb
and
sbb
adc
popa
cmc
popf
daa
dec
sub
mov
lcall
test
daa
cmpsb
dec
and
xor
push
and
insl
stos
push
gs
pop
or
push
shrd
adc
jnp
mov
push
sub
stos
jmp
sbb
pop
pop
xor
mov
push
inc
push
xchg
and
data16
stos
or
repz
ja
push
adc
pop
adc
das
aad
pop
loop
mov
out
push
adc
pop
xor
sahf
test
inc
je
dec
shr
jns
jl
test
adc
outsl
push
int
jge
mov
je
ja
pop
sub
adc
jns
jns
loope
inc
aam
leave
dec
ljmp
imul
scas
sub
cmp
pop
cmp
dec
fistpll
testl
cmp
and
add
enter
test
pop
rorl
mov
or
pop
inc
add
dec
jmp
sub
xchg
repnz
mov
or
pushl
fdivr
or
mov
les
or
and
xchg
cmp
mov
loop
jecxz
mov
rcll
rclb
cmpsl
test
inc
mov
dec
dec
imul
andb
out
sahf
cmp
scas
lods
xor
lcall
rolb
adc
aas
add
leave
jg
jmp
inc
inc
aad
rcll
aam
test
push
outsb
movsl
sub
sarl
mov
lds
xor
nop
mov
fiaddl
push
fnstcw
out
or
fs
push
into
jp
ficoml
aad
in
jmp
int
mov
pop
aad
popa
mov
stos
pop
lahf
call
inc
roll
es
insl
call
fimuls
cmpsl
test
sbb
in
sub
lret
push
sbb
push
cli
lods
popf
mov
mov
in
and
add
leave
inc
fwait
push
mov
mov
orl
pop
cwtl
scas
or
adc
inc
jg
jnp
popf
xor
rcr
or
fwait
mov
push
fdivrs
dec
repnz
call
stos
fdivrp
fs
cmpsl
imul
int3
dec
stos
shlb
fistl
sbb
test
loope
rcll
cwtl
pusha
cld
call
inc
sub
dec
mov
loope
push
dec
inc
in
insl
push
xor
int3
push
mov
xor
sbb
lcall
push
adc
mov
and
dec
mov
xchg
cmpb
es
pop
push
enter
scas
lods
sbb
lods
pop
cmpb
out
inc
jle
repz
xchg
pop
das
sub
or
or
xor
rcrl
adc
xorb
repz
mov
scas
orb
scas
mov
mov
jae
dec
sahf
pushaw
push
jg
cmp
test
add
pop
jecxz
and
cmp
lods
pop
aad
dec
fsubrs
cmp
or
rorb
xchg
lods
add
pop
outsb
clc
ficoms
into
push
jo
int3
js
arpl
orl
add
push
ljmp
insb
jge
pop
xlat
inc
and
pop
scas
cmp
sbb
fbld
pop
sbb
stos
and
aas
lret
xchg
mov
mov
sub
enter
icebp
or
jl
mov
aam
inc
jbe
dec
cmpsl
lcall
addr16
popa
jo
pop
cmpsb
mov
or
mov
adc
rorb
insl
inc
or
add
adc
mov
xorl
mov
fsubp
ljmp
rcrl
lcall
loop
add
sub
ss
pop
pop
and
pop
mov
stc
add
shlb
fwait
fs
jmp
lods
movsb
lahf
add
inc
stc
add
adc
pop
lret
iret
jmp
add
imul
pop
pushf
push
xchg
test
pop
cltd
ja
push
enter
les
jb
sarl
and
fwait
arpl
ret
xor
cmc
int
sbbl
or
orl
add
push
mov
clc
sbb
test
jb
or
mov
push
sahf
xchg
pop
fisttpl
mov
pop
cmp
or
inc
imul
sub
emms
xchg
mov
push
add
jne
sub
notl
pop
iret
mov
lret
sbb
cmp
pusha
mov
test
push
or
outsb
jbe
in
pop
in
jge
leave
mov
mov
pop
stos
stos
and
enter
xor
scas
mov
mov
jo
ret
ljmp
lahf
int3
and
out
lods
dec
cmp
cmp
out
jecxz
outsl
cmc
enter
dec
inc
cs
int3
repz
mov
or
loope
sub
cltd
adc
mov
jle
mov
cmpl
add
mov
add
mov
js
jb
mov
sbb
stos
mov
rolb
frstor
mov
pop
xchg
dec
out
jl
push
rorb
fldcw
jno
lea
xchg
dec
int3
cmc
mov
adcb
call
mov
fnstsw
add
aas
push
add
jb
lcall
js
sbb
scas
pop
sub
fbld
lret
nop
hlt
cmpb
arpl
mov
mov
arpl
inc
rol
leave
dec
mov
push
and
ret
in
mov
movsl
rorb
jle
jle
sub
lret
inc
add
sti
in
inc
mov
push
sti
inc
or
scas
repz
fsin
adc
pop
stos
mov
jae
push
repnz
daa
inc
add
test
push
loopne
stos
orl
and
jmp
and
cltd
stc
repnz
pop
cmp
sub
lds
stos
fistl
add
cmp
aaa
call
lret
or
push
push
mov
call
mov
call
xchg
fdivs
and
mov
pop
push
fiadds
loope
shll
push
adc
ljmp
push
jmp
add
mov
cmc
xor
xchg
test
pop
mov
jnp
mov
js
jp
inc
mov
jg
aas
jp
mov
jecxz
fs
mov
adc
xor
jbe
and
add
add
ja
push
mov
pop
sarb
jg
call
pop
fstpt
dec
adc
pusha
les
pop
xchg
sbb
mov
inc
and
lret
ja
outsl
pop
xor
mov
xchg
mov
mov
outsl
aam
je
fs
pop
pop
push
fcmovu
ja
ljmp
inc
negb
cmp
sub
pop
pop
pop
lcall
dec
mov
lret
jns
test
cmp
out
jl
mov
inc
adc
fnsave
or
iret
push
out
cmc
xchg
cltd
repz
mov
push
cltd
lods
pop
or
out
push
add
ret
jle
andl
inc
pop
xchg
lds
in
imul
mov
lret
shl
cmc
xor
jbe
hlt
mov
mov
fwait
inc
aad
or
ss
arpl
pop
sti
push
jge
ljmp
lods
ljmp
or
jns
sbb
leave
cmpsl
mov
jb
or
loop
adc
inc
mov
sbb
mov
mov
push
repnz
into
add
cltd
adc
pop
rcrb
push
pop
jns
inc
adc
xchg
cmp
mov
jo
add
fstl
add
mov
push
mov
xlat
daa
add
jecxz
dec
call
adc
push
add
xlat
inc
fists
pushf
int3
mov
sbb
cli
dec
outsl
adc
lahf
outsb
pop
adc
les
xor
es
jmp
adc
cmc
push
scas
push
es
mov
into
xchg
add
daa
cmp
out
cltd
pushf
push
out
sbb
imul
push
ljmp
ljmp
or
fisttpll
jmp
jmp
jp
lret
cmp
push
mov
jmp
mov
repz
adc
push
outsb
test
clc
push
sbb
and
xchg
out
mov
sbb
push
ret
mov
and
dec
xor
mov
mov
repz
add
add
add
push
fildl
gs
adc
mov
fdivrl
and
call
lds
lds
cmp
xor
pop
add
pop
mov
in
mov
pop
dec
adc
or
pop
dec
mov
cmp
inc
aam
lds
testl
push
pop
fidivl
cwtl
loopne
ss
xor
movsl
mov
xchg
push
xchg
add
lods
push
cmp
les
inc
pushf
pushf
lahf
dec
jge
push
dec
hlt
cmp
daa
insl
or
hlt
cmp
jp
in
or
dec
add
scas
scas
std
cld
pop
xor
and
jno
mov
mov
inc
or
call
arpl
or
add
int
jno
inc
pop
outsb
xor
test
test
clc
movsl
lcall
rorb
inc
lea
adc
loopne
es
sbb
push
popf
mull
roll
cld
test
lcall
add
faddl
sub
pop
stc
mov
mov
jle
stos
mov
dec
jl,pt
fwait
mov
push
into
std
es
pop
mov
int
inc
mov
movb
fsts
adc
dec
adc
adc
test
jnp
dec
xchg
inc
imul
or
mov
xchg
xor
jae
scas
mov
mov
test
es
cwtl
xchg
sahf
add
lret
mov
mov
insl
add
dec
xchg
jmp
ror
xor
jmp
add
pandn
inc
adc
jne
mov
jecxz
sbb
jno
cmp
mov
movsb
adc
pop
xchg
scas
subb
jns
adc
sub
add
mov
mov
rcrb
inc
and
dec
adc
mov
dec
lahf
xchg
addb
rorl
es
faddl
movsb
adc
add
xchg
push
dec
jge
push
mov
in
inc
add
mov
mov
hlt
insl
in
cmp
pop
sbb
xor
js
jne
pop
adc
jmp
loop
sbb
push
pop
adc
sbb
movsl
pop
sub
jle
cmp
cmp
cld
add
pushf
mov
sub
fisubrl
cmpsl
cwtl
jmp
push
sub
aaa
cmp
and
push
imul
xchg
cmpsb
jbe
mov
cmp
mov
mov
push
out
mov
pushf
aam
adc
into
pop
inc
xor
xchg
loope
imull
mov
out
adc
ret
adc
or
pop
or
leave
mov
pop
add
or
push
jle
nop
push
out
loopne
sub
daa
and
fsubl
and
mov
and
inc
push
lahf
mov
ret
or
mov
or
jb
push
test
dec
push
inc
lret
cmp
xchg
jno
mov
xchg
movl
xchg
and
ret
push
pusha
fwait
popf
adc
adc
or
mov
adc
nop
xor
sub
dec
mov
aas
push
push
jl
cld
int
fnstsw
out
in
lock
stos
or
cli
jae
dec
push
mov
mov
js
repnz
inc
push
sub
lcall
or
daa
or
push
sahf
pop
ja
mov
jle
or
std
leave
push
jne
cmpl
pop
or
int3
inc
inc
inc
cmpsb
cmpsb
push
fs
xchg
leave
inc
test
lods
xchg
sarb
sbb
mov
sub
adc
aas
stos
movb
aaa
and
sbb
jle
and
call
loopne
mov
ret
jge
adc
loop
popa
inc
cli
rolb
sahf
int
lock
out
mov
jecxz
loope
out
push
in
dec
sbb
rcrl
test
lahf
lcall
adcl
rorl
lret
shrb
push
ja
adc
cli
inc
push
xchg
push
fcmovne
fmull
fldcw
lret
xor
enter
daa
rolb
mov
test
sub
cmp
jne
sub
jne
sbbb
fbstp
xlat
pop
shll
pop
mov
cwtl
aas
out
sbb
push
add
pop
lods
pusha
ljmp
popl
mov
mov
adc
out
xlat
mov
ljmp
mov
incb
das
add
rcl
dec
pop
sahf
testl
cs
or
out
nop
cmp
fisubrs
push
outsl
test
adc
pop
vcmpss
pop
lods
jo
and
sbb
inc
ljmp
pop
cld
xor
mov
aam
lods
xor
xor
in
sub
sub
popa
xor
bound
and
fsubrl
adc
cmpsl
pop
push
shr
sbb
mov
pop
in
stc
mov
xlat
mov
xchg
xor
dec
mov
adc
fs
movsb
cmc
enter
clc
sub
mov
stos
cmpsl
xchg
adc
cmp
roll
stc
dec
call
adc
jnp
jbe
out
in
jp
pop
lret
int3
adc
adc
push
decl
roll
sbb
xchg
push
sbb
xchg
cli
out
inc
pop
pop
mov
push
or
shrb
jnp
mov
into
pop
and
inc
es
fistps
loopne
xlat
xor
and
push
popf
call
mov
cmc
aam
sahf
fdivrs
movsb
dec
outsb
sbb
ret
inc
dec
sbb
cli
add
xorl
adc
stos
xchg
sbb
sbb
or
push
cmpsb
sbb
push
mov
pop
jecxz
popa
fs
vandps
xchg
fs
cmp
cmp
mov
push
cli
pcmpgtw
ret
popa
push
pop
cmpsb
fsub
add
jns
sbb
jg
sbb
xor
jne
cmp
stc
andl
pop
xor
adc
aas
fsubrl
ret
jg
and
mov
loope
out
insb
into
add
stos
dec
push
cmp
mov
xor
or
xchg
pop
push
hlt
add
adc
outsb
movsb
out
cs
and
sub
rorl
imul
push
cmp
adc
sub
add
mov
dec
jns
adc
push
push
pop
mov
in
jg
cmp
jge
movsb
pop
ror
add
sub
pop
pop
xchg
test
in
addb
pusha
repz
inc
clc
sti
repz
addb
push
cmp
xchg
jl
mov
enter
mov
lock
xchg
loopne
mov
sbb
fcoml
lock
and
iret
es
mov
fimuls
jmp
jp
push
add
cmpsb
xor
movsl
inc
xchg
stos
loopne
jnp
pop
pop
cs
dec
std
fidivl
shll
stos
xchg
mov
cmp
aam
add
mov
cltd
adc
push
adc
mov
enter
push
sahf
pop
mov
cwtd
dec
mov
aaa
mov
adc
mov
adc
idiv
mov
cmpsl
mov
imul
aaa
leave
adc
push
iret
push
jnp
testb
adc
je
cmp
lea
imul
mov
jo
fbld
movsl
inc
roll
movsl
popa
xor
imul
stos
mov
dec
arpl
loopne
call
xchg
ds
stos
jmp
add
in
test
xchg
or
jge
adc
mov
sbb
sar
adc
xor
leave
inc
adc
and
sbb
jmp
push
add
mov
and
dec
and
cmp
pop
das
add
push
mov
aaa
cmpsb
pusha
push
push
lods
pushf
out
inc
js
add
push
ds
push
push
sbb
iret
or
push
jecxz
inc
ss
xchg
mov
test
in
xchg
pop
cmp
gs
cmpsl
sahf
adc
lahf
enter
adc
add
repnz
and
xchg
jle
xchg
push
call
wbinvd
jg
fldt
dec
mov
pop
repz
jmp
in
push
gs
sahf
dec
xlat
dec
bound
jne
mov
outsb
lret
mov
push
out
inc
and
scas
pop
mull
aad
int3
leave
xor
arpl
dec
xor
test
mov
popf
push
jnp
imul
dec
scas
les
jns
inc
test
js
aas
and
mov
lahf
cmpsb
jne
pop
xor
mov
push
jns
and
lods
xor
adc
test
and
sbb
mov
orb
xor
cmc
jmp
sub
test
ljmp
mov
mov
cltd
aas
mov
std
pop
test
push
add
test
adc
mov
push
je
xchg
pop
sti
test
pop
repz
inc
inc
iret
sar
adc
stc
jge
cmpb
mov
push
mov
pop
lds
out
scas
lods
sub
fsubrl
xor
cmp
inc
fsubp
test
ss
push
jmp
pop
lahf
jle
add
or
dec
shl
xchg
jl
test
jl
out
fiadds
adc
icebp
insb
mov
mov
xor
adc
rcrb
dec
xorb
push
add
mov
sbb
fistps
jl
scas
mov
in
test
push
mov
mov
adc
mov
push
sub
xorl
sub
jle
loopne
jbe
inc
push
xchg
mov
pmaxsw
sub
inc
sub
adc
sub
sbb
xchg
data16
adc
outsl
ds
jecxz
sahf
addl
bound
jae
aas
pop
mov
mov
lea
movsb
mov
aam
cli
inc
mov
in
loopne
xchg
test
and
bound
sub
mov
and
out
aas
add
jmp
cmc
add
and
aad
and
pushf
rcl
pop
lods
lahf
daa
jo
adc
xchg
jae
push
xor
push
pop
ds
push
imul
jmp
loop
mov
push
pop
xchg
lahf
or
and
repnz
mov
stos
jl
sbb
test
push
jmp
mov
icebp
jecxz
leave
xor
stc
fisttpll
jp
aad
fdiv
cld
and
mov
sub
jge
mov
push
jne
and
test
inc
ss
pop
mov
cli
stos
push
and
into
fcoml
jg
sbb
mov
add
popa
leave
cmp
dec
lods
add
and
mov
fbld
adc
push
add
imulb
mov
mov
leave
lahf
dec
cmpsb
and
pop
or
dec
inc
orps
imul
mov
or
xchg
pop
mov
jmp
jecxz
push
xchg
arpl
ss
call
add
in
and
sbbb
push
ret
aaa
clc
pop
addl
dec
testl
mov
push
movsl
in
mov
lods
mov
and
or
repnz
inc
mov
xchg
into
lahf
inc
jnp
mov
push
adc
cli
mov
dec
je
in
cltd
adc
and
and
mov
dec
cltd
icebp
cs
cmpsl
jl
and
or
ret
fimull
cmp
arpl
movsl
mov
adc
push
ret
rorb
faddp
rorb
jmp
xchg
popf
push
sub
fcmovu
ss
mov
call
lods
and
mov
std
mov
inc
enter
sub
insl
or
cmp
leave
mov
xchg
ficompl
lds
sub
pop
sub
stos
ret
pop
push
movzbl
lret
insl
test
sbbl
adc
test
push
jp
sub
mov
js
lock
cmp
adc
and
ss
push
mov
adc
mov
into
aam
adc
jno
pop
mov
js
lea
pushl
mov
push
aas
std
into
int3
rol
call
adc
jge
dec
jmp
mov
sub
iret
cmp
xor
mov
jns
mov
xor
push
adcl
loopne
mov
scas
and
add
mov
test
shlb
out
inc
aas
mov
and
jae
lods
lahf
sbbl
out
or
adcb
or
push
push
aam
dec
pop
and
mov
aad
inc
add
test
push
rcrb
dec
cmp
dec
pop
addr16
xorl
insb
pop
dec
addr16
cltd
sub
cmp
xlat
test
sahf
pop
jmp
xor
inc
add
inc
xchg
xor
or
pop
and
test
push
mov
fwait
call
jnp
dec
enter
jg
fbld
push
daa
cmp
inc
lods
ds
adc
mov
add
sub
jmp
cld
addr16
and
jnp
inc
insl
shlb
adc
xor
jae
popf
nop
cmp
movsl
push
movsb
push
xor
cmp
xchg
gs
add
and
inc
mov
mov
imul
inc
mov
sub
push
xor
add
pushl
cltd
scas
std
iret
jle
fisubs
sub
lret
inc
jg
and
out
sub
adcl
push
push
leave
xlat
call
jnp
dec
sbb
lods
adc
cli
pop
and
fstl
lahf
addb
lds
xchg
jne
testb
movb
push
pop
sbbb
inc
xorps
mov
je
mov
lea
nop
dec
out
sub
rcrl
xchg
aaa
test
adc
xchg
lds
cwtl
add
popf
push
pop
cmp
and
and
nop
test
mov
mov
das
mov
jo
inc
and
xorb
mov
adc
fstps
sbb
nop
repz
movsb
je
mov
mov
xchg
inc
jp
pop
repz
arpl
mov
sub
jge
push
rolb
sbb
pop
sub
cmp
cwtl
hlt
inc
cmp
hlt
jp
sbb
mov
xor
pop
mov
rorl
in
movsl
jle
hlt
stc
push
ret
clc
adc
add
mov
lret
cmpsl
mov
xchg
out
inc
xor
repnz
push
shrb
call
mov
testl
aaa
dec
push
lea
and
sub
pop
mov
xchg
adc
pop
add
iret
inc
fsubrl
or
por
nop
push
adc
lcall
mov
mov
lods
flds
outsb
mov
xchg
sub
and
push
adc
xchg
movsl
push
or
cmpsl
add
popl
dec
adc
in
stos
mov
ret
xor
pushf
pop
cmp
aaa
jge
xchg
stos
mov
or
jo
or
jno
inc
out
cmp
jno
jge
pop
mov
xchg
cli
inc
xchg
jbe
xorb
lret
in
add
pop
sbb
push
xchg
or
pop
incb
test
cmp
std
cmp
lods
cs
insb
add
jge
je
push
insl
loop
cmp
loope
cltd
xor
xchg
lcall
mov
in
cmp
xor
jg
xchg
cwtl
cmpsl
cwtl
adc
or
movsb
notl
cltd
xlat
test
jp
clc
out
pop
ret
stc
or
mov
mov
ja
adc
pop
push
jnp
sub
cmpb
clc
dec
or
mov
fiaddl
sub
mov
test
stos
xchg
add
sub
out
dec
xor
adc
jbe
lods
mov
sub
loopne
std
cmp
xchg
mov
xchg
push
xor
sahf
psubsw
push
imull
cltd
push
dec
and
and
add
mov
jle
ja
jae
popf
cmp
fidivrs
push
fidivs
mov
jb
loop
pop
sub
lcall
les
repnz
add
imul
enter
mov
pop
push
mov
push
mov
neg
pop
dec
lret
outsl
scas
addr16
scas
loop
into
add
push
dec
mov
loopne
in
jns
xor
jo
xchg
rcl
push
in
daa
xor
xchg
jle
add
cmpsl
mov
mov
add
popa
outsl
add
sbb
in
and
shrb
push
mov
movsb
inc
lock
inc
cwtl
pop
sbb
dec
movaps
and
dec
test
xor
nop
inc
jecxz
addr16
repnz
repnz
pop
push
pop
repz
pop
into
mov
bound
push
lock
gs
out
cmpsb
push
insb
mov
es
push
int3
sub
nop
nop
inc
mov
in
inc
ss
out
popa
cmpl
or
mov
das
lret
lcall
cmpsl
xchg
mov
mov
in
loop
push
dec
inc
call
into
ret
dec
in
inc
sub
lret
xor
fdivl
ror
adc
add
cmp
fcoml
popf
cwtl
sub
stos
xor
in
or
pop
movsb
jmp
into
xchg
jp
add
rcrb
push
rorl
dec
out
stos
mov
xlat
inc
mov
pop
adc
mov
mov
dec
xor
sbb
lock
jne
pop
fidivrs
sarl
push
dec
out
cld
in
xchg
sahf
notb
dec
adc
jbe
test
jae
pusha
jno
ljmp
mov
rolb
repnz
andl
cmp
dec
pushf
push
or
inc
xchg
movsl
sahf
mov
jns
gs
enter
jns
pop
pop
gs
fdivl
aaa
jle
js
inc
pop
xchg
pop
cmpsb
lahf
sbb
out
push
test
cmp
loop
fs
out
out
insl
mov
dec
inc
in
stc
or
das
jns
pop
in
addl
in
ret
push
pushf
adc
nop
pop
scas
mov
sub
shll
pushf
mov
lods
jle
jmp
fs
aam
mov
pop
adc
popf
aam
mov
sub
adc
fsts
push
je
inc
inc
jle
roll
push
mov
enter
outsb
push
xchg
fwait
hlt
xchg
add
ja
jb
nop
aaa
inc
xchg
cmc
icebp
xchg
les
adc
mov
in
and
adc
or
out
scas
aaa
fwait
push
and
mov
testl
fsubl
pop
insl
jmp
ss
pop
orb
ljmp
mov
test
jbe
sub
cmpsb
or
inc
outsb
frstor
push
xor
sub
pop
icebp
sbb
dec
adc
adc
pop
test
cltd
clc
stos
movsl
cmp
dec
fbstp
add
mov
dec
insb
cmp
jns
add
pop
push
or
adc
xchg
bound
sub
lds
inc
iret
jge
cmpsb
test
idivb
pop
loop
mov
sub
loopne
cwtl
push
insl
sbb
popa
cmp
cltd
fs
popa
mov
mov
sub
popa
mov
movsb
popf
add
out
inc
mov
movsb
pop
lock
mov
stos
inc
test
in
push
push
jmp
pop
js
imul
fidivrs
lods
mov
and
fsin
mov
cmp
jle
sbb
add
mov
les
stos
shl
cmp
add
jb
test
cmpsb
and
mov
cmp
sub
clc
mov
shll
enter
sbb
loopne
daa
push
xor
in
pop
loope
mov
ljmp
stos
orl
pop
in
outsb
aaa
push
push
loope
mov
jo
in
loop
mov
mov
test
shrb
mov
mov
adc
xchg
inc
xchg
fstl
cmp
pop
stos
jl
ljmp
pop
mov
dec
jp
test
ret
inc
pusha
test
loopne
lods
adc
sbb
les
fs
add
aaa
dec
xchg
mov
push
adc
jns
andb
pop
ficomps
jae
push
movsl
rcr
mov
adc
lea
dec
jbe
repz
mov
sahf
xchg
mov
sbb
dec
dec
xchg
mov
add
aas
ret
pusha
pop
mov
mov
push
mov
fs
sbb
dec
mov
fwait
test
sbb
jo
push
xor
or
jmp
bnd
jns
sti
push
mov
repnz
mov
lahf
test
js
js
push
stos
les
adc
mov
xor
push
sub
push
dec
fsubs
and
ret
jge
pushf
xor
lock
xchg
push
push
out
stos
repnz
mov
adc
into
je
xlat
out
mov
inc
gs
adc
mov
xchg
inc
add
pop
mov
or
or
cmpsl
sahf
repnz
cwtl
adc
js
add
mov
push
or
cmpsl
jge
pop
orb
jnp
lods
gs
jbe
dec
lods
push
jg
js
jp
out
push
cmp
lahf
fsubrs
and
rol
push
loope
insb
xchg
out
jmp
cmp
inc
js
bound
cs
adc
sbb
in
push
inc
insb
pop
enter
sahf
add
dec
cld
icebp
inc
ret
sub
daa
je
sub
and
lahf
mov
in
inc
insb
add
cmp
xchg
lock
or
adc
add
add
xor
jno
pop
push
jmp
xchg
xchg
popa
stos
lods
dec
les
pop
pop
enter
lret
sbb
aad
add
mov
jp
fistps
mov
pusha
out
into
stc
sbb
ds
orb
fwait
aam
mov
sub
lods
xchg
je
and
xor
push
or
sbb
inc
inc
mov
sti
push
mov
enter
mov
pop
add
jae
cmpl
scas
sahf
movsl
inc
dec
pushf
mov
xchg
pop
dec
jl
enter
sarl
adc
adc
addr16
divps
push
lret
mov
popf
inc
dec
test
jl
sub
adc
pop
or
dec
pushf
pause
xchg
mov
inc
add
int
insb
sbbl
xchg
cmc
and
xor
and
cmc
xchg
lock
fdiv
jns
ljmp
or
maskmovq
mull
mov
xor
lahf
jp
aam
imul
test
push
cmpsb
xor
out
jb
not
or
cmp
add
ret
iret
sbb
ss
test
test
es
int3
xlat
xchg
mov
pop
inc
aam
mulps
pop
push
popa
ficoml
in
or
pop
jle
cs
rcll
data16
in
inc
call
bound
add
add
push
mov
push
iret
movsl
jb
loope
popa
dec
cmpsb
movsb
inc
push
fcompl
test
push
filds
cmp
sub
lahf
jno
test
and
add
test
xchg
cmp
cmp
imul
cld
adc
testl
dec
icebp
mov
imul
mov
xor
push
sbb
aaa
cmp
dec
sahf
inc
add
pop
push
cmp
adc
dec
mov
pusha
ja
inc
sub
sbb
sub
incb
mov
pop
and
pop
fbld
push
out
mov
mov
mov
shlb
sub
repnz
pop
imull
testb
pop
sub
pop
cmpsl
lret
lret
inc
adc
push
mov
into
mov
push
test
cld
stos
dec
call
adc
sub
and
jbe
mov
xorl
popa
xchg
dec
mov
pop
adc
sub
push
pop
xlat
shlb
das
xchg
sub
cmpsl
push
imul
sbb
xor
hlt
mov
imul
pushf
mov
sub
aad
adc
jmp
add
aam
jmp
test
jge
inc
inc
rcrb
scas
jo
jmp
fstps
out
dec
adc
loope
and
xchg
insb
jmp
push
fbstp
pop
popa
mov
repnz
add
addr16
shrb
inc
inc
ret
cld
bound
and
jns
mov
mov
aam
sub
adc
xchg
dec
jg
jmp
mov
inc
aaa
sbb
sub
mov
xlat
adcl
or
sahf
add
mov
cmpl
nop
or
xchg
sti
push
pop
mov
outsb
ret
add
es
mov
jecxz
mov
mov
inc
stos
inc
xchg
imul
aad
cmpsl
xchg
xlat
pop
insl
xchg
add
stos
or
aad
lods
fisubs
popf
test
cmpsb
inc
and
push
sar
in
jecxz
mov
popf
shlb
sbb
lods
pop
pop
cmpsl
ds
cmpsl
es
in
push
jno
xchg
or
movsb
insb
and
ss
sub
adc
nop
stc
lret
daa
cs
inc
mov
bound
push
or
mov
shll
xchg
add
fcmovnb
fwait
inc
nop
or
mov
xor
aaa
scas
xlat
dec
daa
addb
sbb
inc
mov
mov
xlat
mov
pushf
mov
cli
cmpsb
cmp
jb
ret
pop
mov
test
cld
scas
mov
xor
xor
pop
aad
add
data16
rolb
inc
loop
jl
adc
pop
adc
cmp
dec
daa
pop
xor
mov
cli
ficompl
pop
lods
add
pop
push
cltd
es
test
and
pop
testl
inc
cs
mov
shlb
idivl
and
sub
loope
jo
lret
push
inc
scas
push
and
mov
idivl
arpl
xchg
fwait
nop
test
pop
jb
add
sub
push
adc
shll
sbb
sub
or
add
out
popf
scas
cmpsl
adc
clc
adc
add
adc
inc
jg
rcll
and
dec
mov
pop
cld
cmc
push
or
icebp
push
adcl
repnz
jbe
pusha
mov
inc
mov
cmp
xchg
adc
push
scas
jbe
scas
aaa
mov
dec
inc
fdivrl
push
pop
inc
dec
iret
push
popf
xchg
outsl
scas
ret
xor
les
xchg
outsb
pop
lea
add
push
jle
jecxz
push
into
add
push
push
add
xchg
add
push
mov
pop
add
and
in
fildl
js
pusha
fidivrl
jmp
loop
dec
ficomps
and
test
push
xor
jmp
fists
dec
pop
pop
add
dec
or
stos
fwait
or
and
lods
and
fidivl
rcll
iret
or
push
jbe
js
add
lods
xchg
inc
stos
std
push
pop
inc
aas
bound
dec
push
push
cli
push
les
js
cmc
fimull
into
xor
sbb
mov
sub
mov
xchg
sahf
dec
and
pop
test
cmp
ror
inc
mov
iret
sub
mov
push
pop
fndisi(8087
dec
or
dec
or
das
or
cmc
jbe
pop
loop
jno
cli
mov
adc
mov
cmpsb
arpl
xor
xor
movsl
shrb
mov
pusha
xchg
outsl
mov
xchg
add
mov
scas
add
cmp
pop
loope
adc
jge
mov
lods
push
and
inc
push
xor
mov
mov
mov
call
jb,pt
fmul
inc
aas
inc
in
jbe
test
pop
fmull
dec
push
mov
inc
das
adc
mov
scas
jb
insl
icebp
and
imulb
xlat
clc
icebp
add
repz
lods
imul
stos
pushf
insl
popf
scas
inc
add
mov
mov
sub
aaa
insb
aam
inc
push
test
sbbb
or
inc
cmpsb
scas
mov
stos
inc
and
mov
sbb
mov
pop
enter
dec
xchg
les
inc
cmp
jl
fnstenv
jle
jge
stc
stos
pop
pop
inc
aas
mov
cmp
in
data16
sub
adc
vunpckhps
pop
xlat
flds
jmp
out
push
pop
mov
push
xchg
lcall
mov
into
and
xchg
test
dec
loopne
add
cwtl
dec
arpl
orb
in
insb
or
shll
in
mov
push
mov
and
cli
xor
leave
ficomps
inc
daa
adc
jae
jne
adc
ja
fdivl
nop
movsl
popa
mov
popa
inc
dec
mov
jo
loop
lret
jl
and
lahf
cltd
lock
mov
lea
pop
adc
std
mov
bound
mov
jge
cwtl
inc
push
fidivrs
push
sub
sub
mov
imul
rorb
cld
rorl
inc
into
imul
repz
cmp
fs
mov
adc
loope
test
insb
jne
mov
pop
movl
inc
jge
rol
loopne
mov
sbb
or
or
call
enter
stos
cmp
movsb
adc
leave
scas
lods
dec
enter
sub
frstor
jp
movsb
insb
int
cmc
seta
sbb
out
clc
cs
adc
sbb
or
outsb
or
int
or
xchg
pop
leave
xchg
adc
adc
push
pushf
xlat
push
sbb
adc
mov
pop
xchg
fdivr
and
ret
pop
enter
imul
adc
lahf
xchg
pop
mov
and
repz
jne
stos
fsubrl
inc
popa
jge
adc
jne
push
pop
xchg
lods
cmp
and
leave
or
mov
mov
sbb
mov
mov
hlt
mov
cmp
pop
in
cmp
adc
xor
loopne
mov
jo
or
ds
mov
xchg
lea
scas
pop
mov
xchg
push
xchg
ficompl
and
sub
bound
in
jae
imul
fisubrs
leave
mov
sbb
movl
add
mov
sbb
test
je
fnstsw
cmp
out
adc
movsb
ja
lcall
out
cltd
cwtl
insb
outsb
sub
adc
cmpsl
lea
ficomps
imul
add
cltd
imul
or
inc
and
cmp
xchg
or
sbb
fnsaves
hlt
mov
mov
cltd
rcrl
lret
rorb
xor
int
push
adc
enter
cmp
push
xor
or
in
cs
adc
xor
or
insb
in
dec
xchg
cmc
imul
rorb
inc
inc
fnsave
clc
xor
inc
push
scas
roll
nop
pop
mov
mov
xor
js
lds
insb
loop
mov
adc
mov
jae
push
loopne
test
add
mov
cmp
xchg
push
xchg
xchg
mov
aad
ret
jbe
inc
leave
xor
xor
pop
fsubrl
cmc
or
test
jae
push
adc
in
pop
xchg
sbb
sub
jle
mov
inc
pop
jg
xlat
jae
and
dec
or
xor
stc
mov
jns
mov
sub
push
mov
adc
fs
and
mov
and
xor
push
xor
or
test
mov
push
fdivrs
enter
and
and
xor
pusha
repnz
rolb
or
push
sti
out
jp
lret
cmpxchg
push
pop
pop
push
cltd
sub
out
shrl
sbb
jns
mov
ljmp
cmpsl
push
repz
xor
loopne
cmp
cmp
jmp
adc
lcall
jne
cmpsb
adc
fstpl
cmp
sub
lods
add
fmuls
mov
dec
xchg
jne
mov
inc
aas
mov
mov
cmpsb
cmpsl
inc
pusha
and
jp
shll
inc
lcall
cmpsl
fadd
sub
cmpsl
adc
clc
out
and
aam
xchg
arpl
pop
or
dec
mov
fidivrs
push
out
test
lods
ficompl
push
cmp
fcoms
in
push
push
push
movsb
aas
sub
xor
cli
mov
mov
int3
repnz
aaa
add
and
rcr
or
inc
scas
mov
sbb
push
adc
push
mov
jno
push
mov
scas
insl
dec
push
xchg
pop
mov
or
les
xor
cmp
xor
lock
je
aaa
mov
aaa
pusha
and
pop
push
cwtl
enter
push
insl
jl
inc
xchg
pop
test
xor
jno
sbb
add
and
push
and
jmp
sub
jbe
mov
jne
pop
aas
sub
pushf
js
cmpsl
inc
ds
jmp
inc
xor
pop
dec
test
adc
or
lea
scas
adc
adc
mov
jp
mov
cwtl
fidivs
fildll
pop
test
sbb
icebp
pmaxub
push
pop
cmpsb
adc
push
popa
push
pop
imul
mov
push
jbe
scas
xchg
mov
clc
popa
cmp
xchg
jle
pusha
bound
out
bound
add
movsb
loop
rclb
sbb
xlat
fsubrl
dec
xor
xchg
ds
pop
loopne
cmp
jge
push
fimuls
das
jns
sub
mov
sti
lret
jae
and
cmp
sarb
or
sub
hlt
jmp
test
inc
dec
or
sub
add
imul
lea
and
dec
clc
cmp
sti
inc
loopne
out
add
lds
add
add
xor
cmp
or
add
andb
pop
inc
es
mov
imul
mov
and
sbb
mov
or
xchg
in
jle
add
push
clc
push
sarb
cmp
pop
aad
xchg
push
in
clc
add
addb
push
js
pushf
mov
fldenv
or
xchg
sub
in
mov
xchg
push
cmp
jo
mov
stc
dec
jmp
repz
mov
pop
cmp
add
ret
cwtl
pop
lods
and
jecxz
scas
cmc
imul
jne
gs
js
or
jl
pop
stos
scas
stos
push
loope
aas
add
pop
ffree
cld
mov
test
ficompl
add
mov
aad
pop
pop
push
sahf
inc
int3
add
or
jns
into
rcrl
add
pop
out
sub
in
fbstp
fcoml
and
stos
mov
and
pop
stos
adc
xchg
push
xor
add
push
inc
loopne
icebp
and
pop
push
xor
mov
hlt
push
jae
rolb
adc
loopne
je
das
pop
and
pop
and
jne
hlt
out
cmpsl
dec
out
adc
xlat
fidivrs
mov
mov
sbb
dec
pop
dec
or
jmp
loop
push
mov
outsb
sbb
push
mov
cmp
xchg
cmp
and
loope
scas
cmp
enter
inc
cli
adc
fimull
cmp
jl
loope
incb
insb
push
sub
insb
push
sbb
mov
pop
lods
pop
mov
shrb
scas
mov
rorl
ds
adc
rolb
daa
mov
popaw
push
outsl
sbb
push
hlt
mov
sub
call
sbb
pop
jg
sbb
sbb
mov
shll
lret
js
jne
xor
in
inc
ljmp
mov
add
fidivl
outsl
loop
pop
dec
xchg
adc
lock
inc
int
sub
in
mov
add
push
lea
dec
fldenv
jl
mov
add
stos
adc
cmpsb
cmp
lea
popf
aas
jle
push
shll
mov
adc
xor
jecxz
sub
inc
lods
test
inc
mov
movsb
test
push
imul
aad
jne
fdivrl
cmpsb
or
jo
jae
sbb
add
inc
pop
out
or
jns
mov
jle
mov
adc
inc
cltd
sub
loop
in
xor
or
bound
sbb
stc
and
mov
mov
into
sub
stos
add
pop
daa
mov
xchg
pushf
decb
fcoml
adc
sub
dec
cltd
push
mov
aas
ficompl
or
mov
inc
pop
sub
inc
pop
dec
add
sbb
jae
jne
dec
dec
leave
js
mov
int
rcrb
in
test
fs
pop
push
into
xor
dec
mov
ljmp
in
mov
jno
jns
lods
rcll
pop
jno
fisttps
lret
sbb
adc
fdivrs
das
add
mov
jp
mov
test
push
in
cmp
pop
daa
sub
inc
decb
shlb
test
es
cmp
out
or
daa
insl
sub
and
faddl
cmp
rol
loopne
sub
push
scas
out
push
push
adc
add
mov
pop
mov
lret
cmp
sub
xchg
mov
xchg
inc
inc
pop
or
test
adc
in
xchg
outsb
mov
jae
movsl
xchg
pop
ljmp
test
jno
test
lcall
repnz
sbb
shlb
inc
sahf
mov
mov
inc
adc
sub
cmp
ret
sub
loopne
mov
dec
and
rorl
inc
sub
mov
push
and
add
cmpb
fdivl
xor
inc
lods
dec
mov
mov
mov
push
push
adc
jge
scas
lcall
out
mov
fs
and
mov
add
add
lahf
imul
lahf
ds
mov
jne
cltd
test
scas
arpl
fwait
into
incb
repz
push
ljmp
lods
pop
pop
adc
xor
dec
aaa
int3
jmp
int3
sbb
or
adc
clc
xchg
inc
or
outsb
jge
jmp
add
imulb
inc
sub
shrl
mov
dec
rorl
and
adc
mov
pop
sbb
lret
std
dec
sub
cs
stc
fistps
jo
xchg
push
dec
es
adc
fisubl
outsl
pop
mov
fwait
sub
jno
out
sub
daa
clc
sbb
pop
inc
mov
xchg
jl
jge
jge
jge
or
imul
lahf
ficomps
pop
stos
in
enter
sbb
fnstenv
and
sub
cmp
test
pop
xor
jb
mov
sahf
and
mov
imul
fisttpll
xchg
mov
or
cmc
cmp
cwtl
push
jecxz
pop
cs
xchg
in
sub
aaa
jecxz
sub
pop
cmp
adc
bound
lods
adc
push
arpl
adc
imul
and
lret
pop
mov
adc
dec
cmpsb
cmpsl
mov
sub
lcall
scas
es
mov
rorb
fst
js
fistps
js
out
mov
cmpsb
jle
out
inc
pop
repz
add
ret
fistpll
adc
movsl
dec
cmpl
lods
fcoms
sarb
std
stos
cmp
in
pop
pop
add
lods
adc
ja
jmp
roll
pop
xchg
testb
sbbb
ja
int
and
sahf
insl
mov
lea
push
xorb
jno
lea
stos
test
push
sbbl
popl
stos
jg
cmp
cltd
jp
cli
outsb
mov
mov
cmp
add
shll
pop
es
js
lods
mov
jno
jno
je
loopne
sub
bound
xor
fsub
xlat
or
aaa
adc
mov
mov
sub
stos
sbb
xchg
push
gs
and
into
cltd
les
movl
xor
adc
add
jbe
bound
pop
mov
cmp
jno
shl
dec
add
mov
out
xchg
scas
xchg
call
data16
shrl
mov
cmp
xchg
mov
mov
andl
jno
arpl
addr16
cwtl
sub
repnz
dec
push
jb
enter
fstpl
cmc
or
push
or
or
sub
xchg
cli
rorb
mov
pop
call
stos
xchg
xor
adc
or
sub
addl
outsl
lock
adc
popa
jb
loopne
inc
mov
jne
ss
sti
inc
jle
out
sub
inc
jl
push
outsb
jae
xchg
mov
mov
sbb
mov
dec
lock
mov
pop
xlat
mov
add
stos
daa
jmp
lret
neg
jg
outsl
in
sub
stos
sbb
push
add
push
std
jmp
icebp
cmpsb
mov
and
cld
nop
loope
mov
shlb
stos
inc
fwait
inc
mov
or
cmp
outsb
mov
xchg
mov
sarl
das
cmp
mov
mov
out
addb
test
pop
jle
push
mov
fnstenv
xor
inc
jno
add
push
imul
dec
mov
scas
mov
pop
add
icebp
mov
and
xchg
lret
add
xchg
inc
cmc
out
and
fldcw
sub
mov
pushf
mov
or
sti
sub
sub
jae
outsb
push
pop
cmp
mov
mov
arpl
stc
and
xor
and
pop
outsb
test
outsl
lret
jecxz
or
push
or
iret
and
sti
cmpl
push
pop
pop
push
lods
pop
clc
test
jl
lods
lret
xchg
insl
dec
pop
and
jmpw
push
lock
ds
xchg
out
push
inc
insb
add
adc
cltd
dec
ljmp
push
sbb
movsb
mov
movsl
shll
push
cmp
push
adc
inc
push
out
fildll
pop
lods
adc
jle
dec
mov
imulb
adc
aaa
lcall
scas
jg
idivb
xor
outsl
imull
cmp
jo
xor
les
fwait
xchg
push
sbb
jl
or
rcrb
mov
inc
pop
pushf
fmull
mov
test
cmpsb
rcrl
test
mov
jle
pop
mov
pop
jae
daa
mov
lds
int3
inc
push
sub
cs
cmp
imul
rcl
sbb
mov
arpl
and
mov
loope
sub
test
xor
push
lods
push
sarl
jno
inc
inc
xchg
mov
dec
dec
pop
sub
stos
int
adc
inc
ret
sbb
push
dec
and
inc
and
test
sbb
arpl
outsb
or
ja
pop
push
daa
cs
int3
jmp
scas
hlt
mov
jns
lahf
lcall
jo
ret
dec
mov
bound
imul
push
pop
add
sbb
imul
push
push
push
xor
push
xchg
pop
cwtl
xor
inc
aam
das
sub
pop
ret
loope
mov
nop
out
fldcw
fildl
mov
scas
rclb
sbb
mull
push
repz
mov
cwtl
add
mov
call
insb
mov
mov
in
xlat
push
or
inc
pop
inc
cmp
mov
fdivr
clc
pop
xchg
adc
imul
test
mov
nop
int
aaa
ret
add
mov
xchg
adc
mov
stos
scas
sbb
sub
jl
xchg
fwait
add
ret
mov
daa
mov
sbbb
adc
jmp
and
or
add
cli
jmp
pop
pop
out
insl
push
push
mov
push
out
outsb
or
pop
mov
outsb
cmpsb
aam
inc
or
push
mov
cmpsb
ror
jno
xor
add
in
in
jne
aam
sahf
mov
adcb
mov
or
mov
aad
shrb
sbb
aas
jns
jmp
fsubs
pop
mov
jne
add
movsl
int3
push
jp
add
xorb
insb
adc
jns
mov
ds
out
data16
loopne
cmpsb
in
mov
jns
je
mov
mov
push
xor
repnz
jnp
sarb
jle
jns
lods
push
fcom
orl
push
jb
cmc
push
dec
lds
movsl
inc
pop
xor
cwtl
pop
jle
stos
jp
dec
dec
mov
movsb
inc
lods
ss
mov
movsl
sub
mov
push
sar
xor
movsb
ret
pop
adc
inc
inc
dec
adc
inc
xchg
push
jecxz
jp
xchg
outsl
js
fsub
loope
mov
int
push
popa
std
aaa
jmp
dec
out
stc
jb
push
mov
jns
cmp
inc
and
mov
sarb
mov
sbb
adc
mov
xchg
mov
mov
inc
xchg
pop
cmc
enter
or
inc
cmpsl
je
pusha
call
sub
jmp
ret
inc
ret
xchg
and
mov
adc
pop
addb
pop
adc
and
sahf
jne
jp
adc
or
xchg
cmp
daa
xchg
push
push
out
test
or
mov
inc
pop
fisttpl
mov
in
subl
lods
jecxz,pn
inc
mov
sbb
mov
dec
mov
lock
push
jno
imul
nop
jnp
push
in
cmp
pop
int
cmp
in
xchg
leave
loop
mov
movsl
cmp
insl
ljmp
inc
mov
mov
fistps
mov
sbb
in
aad
addb
sti
cmp
mov
lods
dec
adc
push
cmp
imul
and
out
mov
cs
cmpsb
xchg
or
test
add
test
loope
repz
aad
sarb
stc
les
out
xchg
lods
fcos
push
mov
cmpsl
push
das
scas
bound
out
fldcw
adc
dec
ret
decl
frstor
cmp
stos
xor
call
frstor
pusha
das
adc
dec
push
pop
mul
inc
stos
xchg
push
xor
rcr
enter
lods
jg
insl
popa
and
pop
dec
test
fisttps
add
jmp
and
mov
push
ds
out
sahf
sbb
test
nop
jp
cmc
cmp
inc
xlat
push
xchg
push
mov
push
aam
sbb
fwait
aas
xor
fsubrl
mov
xchg
push
jle
xchg
push
mov
cld
add
and
adc
sub
mov
push
std
addl
out
inc
fwait
in
insb
fbstp
cmpsl
fs
inc
fimull
stos
iret
addl
movsb
mov
sbb
outsl
or
fildll
cmpl
jp
addr16
iret
push
into
inc
pop
cmp
lret
sub
inc
and
arpl
mov
stos
aaa
cmc
mov
and
xchg
pop
imul
mov
jb
cmp
push
scas
add
cmp
iret
sahf
add
mov
stc
pop
ret
enter
stos
insw
push
mov
pop
pop
dec
inc
leave
mov
dec
add
cmp
jp
insl
out
add
fdivrs
ds
call
cmc
push
mov
add
rcll
loope
ffree
inc
les
stos
dec
sub
sub
scas
addr16
adc
cmp
dec
mov
leave
mov
xor
adc
movsl
mov
sbb
jne
loop
das
stos
and
dec
xchg
pop
out
xchg
dec
lods
push
out
outsl
xchg
inc
sub
std
mov
push
nop
repz
in
cmc
mov
mov
je
enter
pop
lcall
ss
testb
mov
xchg
mov
aam
jp
jge
loopne
imul
test
mov
xor
inc
xchg
call
or
imul
mov
sub
push
or
nop
jl
pop
test
sbb
cmp
and
pushf
xchg
dec
clc
ss
jb
xchg
mov
mov
jb
add
mov
push
ds
sbb
push
push
and
pop
inc
arpl
mov
and
xchg
int3
jmp
xchg
xchg
jne
sarl
inc
das
sub
rorl
push
lahf
xchg
sahf
in
sub
xor
dec
sbb
jmp
fistps
xor
jae
hlt
loop
sub
push
jp
jo
push
sbb
cmp
push
pushf
cltd
pop
mov
dec
cld
dec
inc
inc
jge
fnsave
push
imul
inc
cld
test
push
imul
cmp
aam
pusha
and
push
add
inc
lea
adc
movl
pushf
pushw
call
pop
fcmovnb
xor
xor
jecxz
iret
adcl
or
dec
push
push
fldl
inc
jmp
add
stos
and
jnp
nop
mov
xchg
lock
cli
out
cmp
jns
stos
and
dec
inc
or
jo
jo
dec
inc
and
and
addr16
popf
inc
dec
add
enter
push
add
push
add
fwait
and
loopne
imul
pop
pop
jl
or
mov
mov
outsb
mov
xchg
or
jg
ss
insl
rolb
push
sub
lcall
insb
sbb
stos
push
mov
lret
sub
push
daa
dec
loop
bound
xchg
dec
and
inc
inc
pop
mov
sahf
mov
pop
cmpsb
add
dec
imul
adc
subl
movsl
inc
sbb
or
adc
fistl
sarl
push
mov
xchg
repz
xchg
incl
mov
bound
pop
pop
xor
jb
inc
inc
push
scas
test
push
mov
or
hlt
inc
mov
push
test
outsb
sub
and
fcompl
fcompl
enter
cmp
cmp
push
arpl
add
test
mov
sbb
popf
mov
enter
mov
and
lock
inc
out
repnz
shlb
mov
sub
and
mov
pop
out
mov
sub
ja
pop
add
popf
sbb
inc
dec
pop
mov
mov
jo
pop
dec
xchg
in
std
dec
sub
mov
into
dec
add
arpl
adc
iret
addl
push
mov
push
jecxz
jg
xchg
sub
dec
jl
mov
inc
out
mov
rclb
push
adc
pop
in
lcall
pop
test
movsb
lods
xchg
sub
mov
enter
test
xor
adc
jp
dec
dec
cmp
cmpsb
ds
setle
jmp
mov
insl
push
hlt
aaa
clc
mov
das
sti
jno
fs
stc
fs
xchg
fsts
out
sub
movsl
fmull
add
nop
cmpsl
and
cmp
adc
pop
mov
add
stc
out
and
int
xor
sub
sahf
xlat
jnp
mov
add
pop
outsl
hlt
add
xchg
mov
mov
int
roll
dec
shr
sti
mov
sbb
daa
push
lahf
or
sbb
loop
fstl
mul
andb
push
mov
loop
sti
jp
ror
adc
mov
mov
icebp
mov
mov
nop
mov
lret
stos
hlt
stos
inc
arpl
ror
sbb
dec
aad
mov
xorb
push
and
scas
xor
push
xchg
mov
mov
push
dec
xchg
adc
pop
adc
test
ret
test
icebp
in
xorl
shrl
sub
mov
mov
cmp
mov
dec
xorb
push
sbb
xor
dec
enter
and
push
dec
test
jp
inc
push
mov
test
jg
fidivrs
ja
cmpsl
dec
sbb
mov
inc
cmpsl
pop
sub
mov
nop
and
jb,pt
test
jae
fnstenv
push
stos
cmc
scas
adc
sub
imul
aam
sub
xchg
shrl
inc
sti
xchg
cmp
nop
dec
aad
pop
jno
pop
lcall
push
push
aad
push
ret
push
inc
and
fstpt
jecxz
arpl
dec
push
testb
adc
cmp
push
fnstcw
inc
outsb
in
stos
dec
cmp
and
or
mov
mov
jmp
lret
pop
jle
pop
sbb
not
lret
pop
addr16
hlt
xchg
cmp
aad
fisttpll
repz
sbb
mov
jecxz
adc
aad
inc
sbb
push
dec
decl
mov
pop
mov
xor
sub
dec
std
sub
mov
mov
int
aad
mov
aam
add
lods
inc
adc
lods
into
push
pop
push
inc
ss
pop
inc
inc
jns
sbbb
add
mov
lahf
stos
sbb
xlat
jl
xchg
jne
jo
and
push
add
mov
mov
jae
imul
push
and
and
fcmove
cmpsb
fcos
cmpsl
and
jmp
jmp
jns
and
aad
jbe
adc
and
xchg
xchg
iret
xor
pop
lods
int3
mov
sub
inc
mov
jns
pop
xor
imul
sti
mov
scas
jns
je
fs
jno
sub
lock
and
iret
pop
dec
sub
dec
mov
jno
cltd
flds
ret
add
jns
sbb
mov
jmp
int3
mov
fwait
loop
sub
or
mov
and
cmp
sub
add
cmp
rcll
insb
andb
ljmp
sahf
rcl
stos
loop
ds
mov
sti
aam
jmp
dec
cmp
pop
dec
lret
psllq
out
mov
imul
shll
out
cmp
insb
add
push
adc
lret
push
adc
jns
js
or
scas
inc
jae
test
lods
fistl
add
mov
shll
dec
cmpsb
ret
push
sti
inc
outsl
repnz
lahf
pusha
test
cmc
mov
pop
push
test
or
lcall
cmpsl
mov
xor
cmp
into
pop
push
in
lods
jns
and
sub
addb
xchg
push
hlt
push
scas
pop
sub
mov
fdivrp
sbb
push
ret
cmpsb
addl
enter
sub
or
cmp
inc
rol
xor
cmp
out
arpl
pop
pushf
xor
subl
mov
pop
mov
and
sub
int
xchg
xchg
push
adc
sbb
aaa
addr16
je
and
pushaw
mov
es
lea
sbb
sbb
les
mov
mov
pop
jg
out
repnz
into
pop
bound
add
pushl
fsub
arpl
inc
cmp
xor
push
jb
stos
inc
clc
push
push
test
out
shlb
xchg
pop
mov
push
scas
mov
js
sarb
mov
cmp
ljmp
and
cvttps2pi
mov
test
lock
adc
lds
sub
cmp
or
mov
mov
pushf
inc
rcll
pop
adc
fimuls
leave
loopne
lods
test
sbb
and
or
adc
aam
jmp
repz
jae
jge
movsb
call
add
cmp
jno
lahf
lea
mov
pop
push
lea
inc
push
pop
cmp
mov
clc
test
sahf
inc
js
add
icebp
pop
jbe
lock
xchg
in
addr16
xchg
js
jg
in
cmpsl
idivb
mov
add
mov
stos
lds
movsl
inc
into
nop
adc
xchg
adc
and
mov
inc
sbb
sub
into
fmull
lret
jo
xchg
fsincos
inc
sub
aas
adc
mov
scas
inc
xchg
mov
ret
mov
scas
icebp
mov
push
outsl
cli
test
cmpsb
sub
cmp
inc
aaa
dec
push
fnsave
jae
dec
or
ss
adc
push
pop
sbb
inc
inc
inc
mov
into
mov
dec
mov
call
mov
jb
add
inc
mov
pop
or
pop
or
roll
mov
out
jle
stos
mov
pusha
repnz
cltd
test
inc
add
fst
push
add
daa
and
imul
lret
jmp
arpl
iret
sbb
sbb
sbb
leave
popa
rclb
xor
adc
aad
jnp
into
inc
xor
scas
mov
jmp
inc
outsl
ret
in
push
nop
movsb
xchg
lret
pop
push
imul
fcompl
dec
pop
dec
push
cmpsb
jmp
lcall
jne
inc
arpl
std
push
jecxz
mov
dec
xchg
idivl
imul
inc
into
dec
test
mov
sub
cmpl
popa
cmp
test
enter
xchg
mov
sti
je
daa
stos
test
aas
sbb
or
sarb
aad
add
pushf
push
pop
ss
les
inc
jne
mov
shll
mov
mov
in
jecxz
cwtl
xor
adc
sbb
das
mov
add
fsubrl
rcrl
pop
xchg
jno
iret
stos
sbb
push
sbb
adc
pop
out
inc
loop
push
cs
nop
xor
js
popf
fcoms
inc
push
and
jnp
test
arpl
lods
xchg
or
mov
mov
ds
sub
ret
pop
das
flds
sbb
jle
mov
rcrb
pushl
push
sti
test
icebp
into
xchg
mov
mov
xor
xor
xchg
push
or
jg
add
sarl
xchg
or
idivb
and
mov
add
and
mov
movsb
or
cmpsl
or
cmp
ljmp
filds
push
sahf
add
aas
imul
inc
push
xchg
sub
push
addr16
imul
sbb
xchg
and
dec
scas
in
mov
in
pop
ljmp
lods
adc
or
xor
sbb
push
sub
cltd
les
adcb
call
xor
mov
push
call
jo
mov
cmpsb
ljmp
scas
mov
in
mov
pop
mov
dec
in
mov
or
lods
fdivp
loopne
mov
cmp
mov
inc
and
push
test
sbb
cmp
out
push
dec
enter
xchg
and
cmpsb
push
outsb
and
inc
adc
mov
movhps
xor
sbb
sub
mov
cmpsb
pop
lods
repz
xchg
inc
jb
pop
aas
or
adc
push
aaa
adc
push
lea
pop
sahf
loope
fdivrl
mov
fwait
js
imul
pusha
into
shrl
mov
jl
rol
mov
iret
push
adc
cmp
mov
inc
bound
add
stos
sub
decl
stos
jae
push
rcll
repnz
ljmp
mov
jl
test
pop
pusha
mov
inc
push
mov
data16
pop
push
test
ljmp
subl
cmp
mov
int
sbb
pop
and
repz
sarb
scas
mov
sub
daa
test
dec
into
scas
fdivs
inc
push
fsub
push
ror
enter
movsl
inc
repz
nop
inc
xor
sub
movsb
xchg
sub
sti
int
das
adc
test
leave
dec
mov
pop
add
xorl
jae
scas
das
jns
incb
push
orl
push
dec
adc
ja
popl
rclb
jge
cli
mov
aad
sbb
sbb
ret
inc
xor
xor
das
pop
stos
daa
sarl
out
adc
fwait
cmp
adcl
dec
test
addr16
or
jne
inc
pop
jl
aas
je
xlat
arpl
in
and
lea
mov
and
and
ficoml
xor
loope
bound
lods
and
inc
stc
push
outsl
or
xchg
gs
add
arpl
insl
adc
inc
nop
bound
test
hlt
pop
or
push
add
ljmp
inc
jno
sub
mov
xorl
and
fdiv
aas
dec
inc
cli
inc
xor
imul
out
push
xchg
xchg
fiaddl
repnz
sub
cli
popf
inc
mov
stos
loopne
xchg
pop
pop
adc
xchg
mov
popa
imulb
or
jnp
rcll
pushf
sarb
pop
sbb
pop
mov
or
inc
pop
lcall
and
sbb
std
mov
ljmp
fldenv
add
lea
sahf
or
ret
loopne
mov
sub
sbb
dec
mov
push
shll
sti
add
inc
je
and
fsub
test
or
adc
jp
xchg
fldt
mov
in
or
aas
fildll
jp
xchg
mov
push
and
pop
adc
push
jb
mov
xchg
xchg
popf
mov
aad
popa
xorl
fs
test
mov
nop
out
sbb
mov
addr16
xor
inc
adc
pop
or
ljmp
pop
add
xchg
push
xor
xor
inc
mov
pop
mov
inc
sbb
sub
test
dec
scas
jae
xorb
stc
jno
mov
cmp
lcall
and
loope
inc
mov
ret
popa
addr16
adc
lret
jg
test
addl
orb
pop
inc
sbb
jp
fwait
inc
fisubs
inc
xchg
punpckhwd
push
or
lods
dec
iret
dec
es
jns
adc
add
fxch
dec
ja
push
sub
in
fsubr
sbb
fisubl
add
cmp
lcall
mov
push
jae
popa
fs
or
adc
pand
icebp
ret
rorb
mov
pop
inc
loopne
hlt
adc
mov
sahf
xor
movsl
fcoml
inc
into
sub
sub
or
push
mov
jg
xor
dec
cwtl
xchg
or
dec
xchg
dec
cld
add
int
push
adc
cmp
adc
insl
xor
lahf
stos
xor
lret
add
and
dec
inc
mov
imul
adc
ds
cmp
lahf
je
push
sub
or
aam
sbb
sbb
addb
aas
shrl
pop
dec
and
xchg
lods
add
pop
addb
mov
ret
sbb
inc
and
sbb
or
mov
xor
movsl
jmp
cmp
or
mov
dec
cmpsl
inc
sahf
pop
xchg
mov
faddl
jmp
push
fistpl
lcall
scas
cmp
stos
cli
nop
xchg
and
cmc
fnstenv
sub
aad
add
sarl
movsb
aad
pop
sub
cltd
cmp
in
adc
sbb
or
jge
loopne
jge
adcl
mov
push
mov
jmp
shl
or
movsl
add
or
mov
pushf
jp
push
add
mov
inc
fmuls
jb
out
adc
lods
mov
mov
testb
test
test
lock
xchg
xchg
je
xor
testb
aad
popa
jb
stos
push
sahf
lahf
out
loopne
pop
in
das
jl
mov
in
cmpsb
lahf
or
xchg
adc
push
pop
hlt
int3
adc
pop
iret
xchg
out
pop
push
dec
pop
outsb
cli
stos
xorb
sti
lea
xor
call
mov
adc
push
lds
jb
outsb
mov
cmp
ja
dec
pop
sub
sub
loopne
loopne
fwait
add
inc
push
enter
insl
icebp
mov
std
test
xchg
mov
xchg
cld
cwtl
lock
cmp
dec
push
or
xchg
inc
dec
pop
dec
dec
jp
jmp
push
cmpsl
inc
add
ficompl
add
mov
jno
sbb
xchg
int
cmp
testb
ds
push
mov
mov
jp
aam
pop
aaa
sub
insb
mov
in
test
lret
cmpsl
add
xor
dec
sbb
js
or
into
in
stos
xchg
sub
sbb
mov
adc
pop
dec
fisttps
mov
fidivl
adc
sub
jle
lret
icebp
lahf
pushf
jae
mov
dec
test
cmp
push
mov
out
int
gs
xchg
push
mov
fidivs
xor
add
lret
arpl
mov
jmp
and
inc
je
cltd
fsubrs
push
adc
push
mov
add
in
jp
negl
push
jp
xor
inc
pop
bound
jg
xor
fdivs
fstps
mov
loope
faddp
jge
jl
mov
inc
bound
test
inc
sub
xor
mov
filds
mov
movsl
xchg
stos
push
scas
in
mov
cmp
into
push
sbb
mov
jmp
aaa
dec
push
stos
hlt
inc
xor
test
and
dec
inc
popf
pushw
cmpsl
dec
xchg
push
ret
mov
mov
sbb
mov
outsb
lcall
add
push
imul
push
pop
cmp
fwait
adc
inc
lret
push
dec
push
lea
adc
lret
adc
push
bound
popa
mov
inc
js
xchg
dec
repnz
push
ret
pop
jbe
je
int
ret
mov
in
ds
cmp
stc
testb
or
inc
ss
shlb
pop
test
fisubs
ja
shlb
scas
sub
dec
movlps
sbb
inc
lret
adc
mov
add
mov
sbb
test
mov
or
fwait
clc
or
push
sbb
shlb
dec
xor
sub
test
mov
xchg
xor
inc
leave
inc
in
push
stos
dec
dec
shlb
in
mov
add
imul
loopne
dec
outsl
gs
push
dec
jecxz
cmp
frstor
movb
mov
sub
mov
ret
rclb
cmc
pop
loopne
jbe
daa
lcall
dec
pop
mov
pop
cmp
jl
pushf
xchg
nop
scas
imul
shll
rorb
test
inc
cltd
je
movsb
jbe
and
ja
sbb
dec
daa
sub
mov
aam
ja
jg
inc
xchg
pop
es
jnp
aad
adc
pusha
repnz
dec
inc
jmp
les
xor
mov
outsb
mov
mov
and
popa
inc
lret
rorb
or
cmc
rorb
mov
test
xchg
dec
mov
inc
add
jmp
mov
add
xchg
jecxz
test
inc
call
divb
scas
out
rclb
adc
daa
imul
movsb
mov
ja
xor
or
mov
adc
lret
mov
push
adc
loop
xchg
je
in
movsl
pusha
push
pushf
or
repnz
cmpb
shr
add
jnp
mov
inc
sbb
bound
pushf
out
fimull
push
mov
in
loop
xchg
cmp
xor
dec
pushf
mov
or
mov
cmp
in
pusha
fldl
jae
pop
mov
imul
push
clc
inc
inc
push
ljmp
lock
outsb
lahf
add
mov
inc
push
test
and
jmp
mov
or
mov
fs
pop
pop
cmpsl
push
sbb
jne
mov
addr16
fnstcw
movsl
cltd
mov
adc
or
scas
pop
sbb
lahf
xor
popf
jmp
jns
jmp
cmpsb
test
cmp
and
outsl
dec
arpl
push
insl
fdivs
pop
imulb
xor
adc
add
adc
mov
sbb
imul
or
dec
pop
jno
sub
mov
outsb
sub
xor
movsb
xor
push
stc
mov
adc
push
pop
shlb
push
sbb
int
xchg
orl
repnz
or
cmp
cmp
dec
aas
pop
lea
int3
sahf
data16
loopne
mov
test
dec
sbb
in
or
movsl
dec
xor
cmp
int
push
pop
cmpsb
push
sub
jae
sahf
xchg
mov
dec
dec
pop
sbb
xor
lahf
das
sbb
jle
jle
out
test
repnz
idivb
bound
lret
aam
icebp
push
dec
jle
filds
dec
cmp
pusha
cmp
int
iret
pushf
daa
jecxz
mov
je
inc
xchg
pop
inc
je
sti
insl
cmpsl
xlat
cld
cli
sti
out
mov
and
loope
xor
sub
stc
mov
xor
xor
sub
mov
push
shll
cmp
mov
jae
loop
cmpsl
ljmp
add
add
add
cmpb
inc
inc
lock
mov
xor
stos
dec
das
mov
daa
imul
pop
inc
jns
inc
mov
pop
jmp
pusha
rorb
mov
outsb
jo
and
xor
test
int
int
inc
arpl
add
and
xor
clc
push
jmp
cltd
add
cld
inc
sbb
sub
sbb
sbb
inc
push
pop
xchg
and
incb
add
cmp
mov
mov
fstl
mov
mov
lods
mov
lcall
dec
add
inc
mov
mov
sub
adc
stos
add
adc
ja
aad
daa
cmpsl
mov
cli
xchg
aas
fmull
cltd
push
cwtl
fs
pop
lret
or
stos
inc
jmp
jmp
vorps
push
fwait
pusha
add
inc
das
adc
adc
mov
loope
jb
fsub
push
into
inc
push
dec
mov
icebp
inc
mov
mov
dec
cmp
sahf
jns
mov
pop
ja
cmpsl
mov
push
adc
cmc
dec
sbb
shl
adc
lods
xor
xor
jbe
ss
stos
addb
into
adcl
pushl
pushf
pop
lea
cmpb
inc
out
mov
sub
add
mov
test
repz
push
dec
jno
shll
sbb
xor
jae
inc
lret
adc
push
loope
jns
icebp
mov
dec
push
stos
adc
and
xor
stc
jmp
add
cmpsb
xlat
jle
inc
pop
data16
ret
ljmp
pop
xor
pusha
xor
and
or
jle
jg
aaa
jb
sti
push
mov
idivb
mov
es
aas
fnstenv
js
or
out
je
je
adc
cmp
sbb
jne
pop
sub
or
sub
imul
iret
or
sbb
jno
xor
inc
mov
push
scas
push
and
dec
scas
pop
cmpsb
pop
cmp
push
mov
mov
pop
mov
ljmp
adc
addr16
or
xor
movsl
push
clc
cmp
cmpsl
xor
jns
or
inc
mov
adc
jo
sbb
inc
cmp
pop
iret
es
ret
jbe
daa
inc
ljmp
jo
lret
jbe
sbb
mov
das
outsb
and
sbb
insl
aad
push
dec
mov
stos
aad
call
aam
xchg
or
daa
xlat
das
fsubl
scas
xchg
test
xlat
xor
cmp
fistpll
int
lret
sub
add
or
mov
cmpl
aas
repz
test
imul
aad
jne
imul
jge
std
int
lahf
jns
jne
cmc
cmc
imul
std
arpl
push
scas
push
mov
dec
mov
jg
push
test
ja
pop
scas
push
sub
lods
cmp
or
add
bound
jp
popa
in
and
xor
jne
out
adc
popf
push
aam
inc
dec
les
sbb
jmp
jecxz
push
ret
sbb
pmaddwd
mov
idivl
shll
ljmp
jae
mov
cmp
inc
shlb
sub
adc
sub
cwtl
je
inc
out
mov
jle
or
add
sbb
mov
xchg
daa
mov
into
jno
dec
aad
jg
mov
or
sbb
aam
dec
xchg
dec
dec
sbb
out
cld
fidivs
out
push
out
jae
mov
add
mov
pusha
jne
popf
sbb
pop
lods
sub
popl
outsl
es
push
mov
stos
xchg
test
pushf
jge
jae
push
jo
add
dec
mov
cmp
or
ss
mov
inc
cwtl
push
sbbl
xchg
mov
scas
or
fidivrs
mov
aad
je
and
jns
sub
xor
push
pop
sbb
xor
lahf
push
movsl
pop
xchg
pop
fistpll
ljmp
lret
jp
inc
in
ror
mov
cmp
add
mov
add
ljmp
inc
cs
pop
inc
mov
lret
aaa
frstor
ror
leave
push
cltd
adc
aaa
and
lock
popa
shlb
dec
fisubrs
clc
popa
movsl
lds
pop
jge
push
sbb
push
pop
lock
jmp
dec
push
test
push
fadds
sbb
jne
in
out
stos
icebp
dec
fstpl
fbld
jbe
pushl
push
and
sbb
hlt
adc
mov
dec
stos
jle
adc
int3
push
xchg
xchg
test
add
gs
es
jno
cmp
and
scas
sub
mov
xchg
insl
pop
pop
loop
push
mov
movsl
add
xchg
in
push
xor
test
stos
sti
sbb
stos
out
sbb
mov
loopne
cmp
dec
xchg
ficompl
dec
out
stos
push
cli
pop
stos
adc
xchg
jae
and
jb
push
ja
lea
or
popf
mov
and
lock
or
inc
sarl
pcmpeqb
xlat
outsl
cmpb
or
jl
sub
mov
pop
add
loop
xchg
cmp
int3
adc
xor
out
in
pop
lret
dec
push
jnp
pusha
xor
test
and
bound
jecxz
in
out
cwtl
adc
adcb
or
jl
shlb
addr16
mov
mov
mov
aam
aaa
xor
es
loope
ss
jno
cmp
mov
loope
inc
sbb
repz
sub
fimuls
cmpsl
out
lock
cmp
pop
movsl
sub
xor
fwait
xchg
mov
and
gs
xchg
xchg
das
daa
mov
mov
dec
mov
sub
addr16
mov
jmp
lds
cs
enter
lods
sahf
cmpsb
lret
ss
daa
adc
shrl
and
inc
inc
sub
cmpsb
push
cmp
into
xor
es
ljmp
dec
inc
mov
push
sub
adc
aaa
dec
out
stos
inc
ret
aam
lret
int
test
leave
xchg
test
jmp
ss
clc
imul
int3
ds
pop
xchg
mov
arpl
out
lods
lret
inc
dec
xor
sahf
ret
sub
xor
jbe
cmp
xor
clc
pop
popa
mov
cmp
xor
enter
cmpl
addb
pop
cld
push
fimuls
sub
mov
or
push
push
test
mov
adc
sub
and
push
clc
ljmp
push
in
int3
mov
and
xor
pop
jnp
in
aaa
xlat
popf
cmc
je
mov
pop
and
jnp
ret
shlb
mov
jb
xchg
jp
imul
pop
scas
push
add
iret
push
daa
mov
sarl
int
pop
or
imulb
ja
and
jo
sbbl
sbb
cmp
das
scas
jns
repnz
ror
popf
or
adc
loopne
xchg
out
into
pop
scas
push
adc
js
inc
mov
js
lock
outsl
sar
xchg
into
inc
push
mov
xlat
stc
inc
and
push
hlt
push
ds
out
mov
cmpsl
scas
fistps
or
pop
push
jmp
xor
in
imul
shll
or
pop
scas
out
subb
ja
scas
add
and
int3
cwtl
push
pop
mov
mov
lods
xchg
mov
dec
stos
push
sahf
movsl
xor
mov
dec
popa
jno
aad
jne
xor
ret
ret
adcl
data16
int
scas
inc
dec
pop
push
and
sbb
pop
mov
pop
add
xchg
idivb
add
cli
mov
jmp
cmpsl
repz
je
sub
push
inc
push
jno
int3
add
jne
pop
inc
jge
mov
data16
icebp
into
stos
adc
mul
adc
jno
scas
push
push
mov
dec
xor
xor
scas
xchg
fnstsw
and
in
sub
fadd
sub
mov
cmp
ss
ljmp
dec
nop
les
push
mov
das
inc
mov
inc
dec
dec
push
scas
push
stos
aad
push
cmc
movl
xor
sub
xchg
cwtl
rcrb
mov
out
xchg
cs
adc
aad
pop
or
out
mov
scas
pop
add
mov
cmpl
leave
nop
sti
mov
mov
add
inc
push
jbe
int3
gs
fmull
pop
std
ret
jns
ljmp
sub
aad
test
popa
sub
enter
add
adc
test
fsubrl
or
inc
cmp
xor
jl
xchg
mov
insb
pop
push
mov
pushf
mov
test
in
sub
mov
sti
shlb
clc
adc
xor
sbb
mov
push
stos
aad
pop
hlt
push
std
xchg
aas
inc
mov
roll
aaa
leave
xchg
mov
outsl
ret
ljmp
push
push
inc
dec
inc
int3
push
pop
mov
iret
scas
sub
test
aad
add
mov
mov
push
lret
inc
or
cmp
jne
pop
sub
jmp
outsb
jno
repnz
mov
fucomip
ljmp
jge
hlt
mov
xchg
fadd
jns
out
xlat
push
mov
js
push
or
adc
jg
sbb
or
pushw
sub
sbb
jae
sub
testl
rcll
cmpsb
jmp
mov
in
stc
lods
push
jno
mul
pop
aaa
movsb
cwtl
sub
sbb
jne
fldl
outsl
nop
shlb
push
sahf
mov
adc
mov
stos
lahf
sahf
adc
mov
jno
dec
and
ja
aaa
mov
das
xlat
pop
cmp
sub
stos
aad
jne
dec
aam
push
pop
push
fldl
shl
jmp
add
std
inc
incl
repz
lret
mov
mov
gs
fidivs
and
int3
ret
loopne
jl
shlb
jb
xchg
loopne
pop
outsl
inc
push
aad
xor
mov
sbb
mov
fdiv
xchg
add
xor
ds
mov
add
xchg
jle
or
mov
xchg
scas
xchg
xlat
cs
jne
push
pop
push
sub
lods
and
pop
int
jmp
push
stc
or
cmc
jnp
cmp
testb
les
adc
ljmp
xchg
mov
xlat
fwait
cwtl
push
arpl
xchg
test
xchg
fwait
cwtl
cltd
inc
sub
push
scas
push
stos
aad
jae
jmp
push
std
fsubs
xor
movsb
aas
dec
rorl
jg
ljmp
and
mov
das
dec
pop
stos
mov
push
xchg
mov
jbe
xchg
jl
xchg
repnz
lea
xorb
pop
mov
xchg
jns
ret
mov
dec
pop
gs
test
addr16
mov
fistl
sbb
xor
aad
sbb
cmp
loope
or
and
xor
jae
pop
ljmp
sbb
xlat
sbb
mov
enter
add
iret
cmpsb
push
out
scas
shll
push
add
negb
out
out
and
add
inc
movsl
int
jns
xchg
jbe
dec
cmp
jecxz
mov
pop
in
jl
jle
sub
and
cli
pushl
inc
push
add
lds
jns
in
sbb
sar
adc
mov
add
jle
adc
lret
mov
aam
fcomps
movsl
rcll
add
enter
mov
insl
push
sub
dec
cmp
dec
out
push
mov
je
push
jle
dec
in
sub
or
dec
jle
add
adc
pop
cmpsl
inc
jne
pop
rolb
mov
push
jge
pop
insl
hlt
adc
incb
fistpl
mov
dec
or
ljmp
mov
add
ja
xor
icebp
insl
jecxz
ljmp
mov
mov
mov
enter
dec
scas
stos
xchg
repz
cld
adc
xchg
push
sbb
xor
jne
addl
jecxz
xchg
repz
call
lea
inc
out
jge
lods
push
sub
pop
sub
hlt
mov
fidivs
xor
loop
xor
add
js
sahf
add
lea
mov
ret
or
popf
rolb
xchg
mov
scas
inc
add
dec
mov
ljmp
jo
inc
lods
cmpsb
xchg
inc
shl
sbb
and
jo
je
scas
push
stos
aad
ljmp
call
jge
mov
inc
mov
sub
in
sbb
ljmp
mov
mov
or
mov
imul
aad
into
movsl
out
cltd
adc
scas
ja
aad
incb
mov
pop
push
or
jle
sub
xchg
scas
mov
push
jbe
pop
fildll
sub
mov
imul
cmp
mov
clc
mov
stos
aad
lds
push
bound
mov
push
adc
mov
sbb
cltd
xlat
mov
lahf
aam
mov
jne
fdivrp
dec
roll
int3
jl
pop
pop
push
mov
das
dec
pop
je
mov
jle
mov
push
and
jp
sbb
adcb
hlt
mov
sub
bound
xorb
iret
ljmp
mov
and
shrb
mov
insb
sbb
insl
mov
mov
popf
pop
adcb
mov
scas
push
stos
aad
and
pop
or
int
sbb
neg
imul
push
inc
scas
popa
sbb
pop
shll
cltd
push
sahf
ljmp
ffreep
loope
xchg
shr
cs
cmpsl
xlat
es
xchg
int3
hlt
pop
mov
popf
push
not
ljmp
mov
out
and
mov
add
aad
stos
aad
cmc
mov
shll
pop
add
or
push
add
push
aad
cmp
shlb
ljmpw
insl
insb
stos
dec
jle
cmp
cvtps2pd
dec
test
iret
dec
mov
ss
int
cmp
scas
push
stos
aad
lds
andb
dec
push
add
popl
adc
push
test
mov
mov
pop
sub
and
aas
cmp
cmp
push
xlat
mov
lea
push
dec
push
xchg
leave
outsb
outsb
mov
or
mov
cmpsl
push
jle
test
stc
imul
inc
mov
test
stc
mov
js
popf
ljmp
push
cmpsl
sbb
jne
and
add
cltd
pop
dec
push
lret
mov
fmulp
jle
fcoml
jge
cmpsb
sbb
and
fwait
mov
popf
fcmovnu
test
enter
xchg
mov
pop
stos
mov
or
loope
cmp
das
push
sub
adc
pop
daa
stos
icebp
ljmp
lret
cli
fisttps
test
sbb
iret
mov
mov
or
int
inc
dec
mov
mov
mov
pop
add
dec
push
aad
jne
or
loope
or
mov
inc
push
int3
fldl
sub
adc
sbb
sahf
pop
sahf
inc
mov
jle
test
pop
outsb
aas
mov
out
sbb
ret
sub
popa
sub
test
into
jp
aad
push
das
dec
jns
push
xchg
or
dec
mov
cmp
mov
push
orl
out
cmpb
fs
inc
xor
jae
dec
cmpsl
arpl
sbb
mov
fnstenv
jbe
mov
jne
jl
insl
mov
stos
cmp
and
xor
xchg
fsubp
push
popl
mov
sub
xchg
and
sbb
mov
push
aaa
mov
pop
fstpt
pop
in
xor
lret
push
leave
add
in
out
sub
sub
cmp
dec
ljmp
icebp
lods
xlat
fisttps
jg
cmp
imul
sbb
inc
rcrb
data16
push
cli
gs
and
sti
dec
dec
pusha
mov
dec
mov
inc
xor
ret
inc
in
or
sub
in
pop
pop
push
inc
flds
add
aas
pop
les
sub
aad
divps
jbe
loope
xchg
or
out
sbb
lret
insb
adc
pop
call
add
sub
outsb
daa
inc
add
or
pop
mov
jge
adc
push
fwait
add
mov
and
cmp
pop
xchg
mov
aam
ljmp
adc
push
stos
push
and
into
stos
xchg
add
cmc
lock
dec
mov
inc
dec
out
ldmxcsr
aad
or
mov
and
adc
negb
repnz
pop
push
ljmp
or
test
mov
jmp
ret
mov
std
pop
int
mov
aaa
sbb
out
insb
mov
jp
mov
inc
test
mov
rcrb
stos
push
add
push
scas
xor
mov
pop
mov
test
push
xchg
dec
mov
insb
sub
cmp
mov
adc
mov
jp
mov
outsl
scas
out
dec
dec
repnz
cmc
data16
mov
xchg
loopne
mov
mov
jo
mov
pop
mov
add
and
stos
cmpsl
cmpsl
nop
cmpsb
cmc
lret
and
xchg
lahf
or
mov
dec
dec
bound
int
sub
iret
dec
lcall
dec
mov
push
push
push
orb
subb
add
ljmp
dec
subb
ss
out
xchg
and
mov
ljmp
mov
xor
jg
or
sub
push
mov
xor
cld
xor
xchg
sub
cld
stos
cmc
cmc
jne
xor
nop
enter
fadds
bound
nopl
sub
out
iret
pop
scas
push
fs
pushf
pop
inc
std
sbb
lret
sbb
sub
add
aad
cmc
out
mov
popf
out
fbld
out
cmpsb
or
repz
xorb
inc
inc
mov
scas
jbe
adc
imul
and
js
addl
xor
sub
jne
or
mov
sub
je
stc
xchg
inc
mov
xor
adc
mov
mov
leave
jg
sti
push
sub
sbb
inc
push
out
unpcklps
jae
aad
jne
adc
pop
cltd
ja
or
add
fistps
push
loopne
nop
adc
ficoms
xchg
je
cld
push
test
pslld
and
sti
mov
jb
std
sub
aas
push
cmc
lret
in
cmp
aad
cmpsl
sbb
int3
inc
adc
mov
adc
mov
xchg
stos
pop
cmpb
addr16
lret
mov
lock
jge
fidivrl
aad
jne
cmp
mov
ja
shr
push
stos
and
jb
fildl
cmp
mov
popf
mov
das
jae
bswap
lret
add
in
movsl
inc
add
pop
xchg
stos
push
xchg
jne
nop
icebp
repz
movsb
or
test
cwtl
jl
adc
mov
push
or
inc
xor
push
daa
fwait
adc
pop
push
sarb
icebp
pusha
cmpsb
aad
cli
inc
push
loop
repz
dec
fidivl
pushf
push
jne
jae
lret
ret
cmp
pop
pop
xchg
push
sbb
les
int
xchg
cmp
rclb
jmp
inc
jne
test
test
xor
and
ds
jp
jb
dec
sbb
jge
sub
and
clc
arpl
lret
adc
mov
xchg
scas
xchg
ljmp
int3
dec
xor
push
insl
ja
xchg
insl
mov
lret
sub
jle
das
inc
pop
std
and
movsb
stc
insb
gs
leave
pop
aam
jne
add
jno
mov
into
aad
adcb
fs
xchg
mov
sbb
scas
push
adc
mov
or
or
orl
cmp
inc
xchg
mov
pushf
pop
aad
fldcw
dec
sbb
in
loopne
stos
pop
lcall
xchg
test
inc
mov
pop
iret
inc
mov
jne
pop
add
xor
jecxz
or
mov
jp
test
jno
ljmp
jmp
test
fistpl
fisubl
xor
mov
pop
popf
add
mov
lahf
inc
rclb
inc
aas
jbe
jo
cld
stos
add
add
sti
sub
dec
dec
fisubl
jbe
mov
sti
mov
cmp
daa
scas
push
or
or
mov
and
lahf
inc
mov
add
push
scas
ljmp
add
or
jg
or
sub
ljmp
adc
mov
or
sbb
mov
nop
mov
xchg
pop
sub
jg
or
sbbb
inc
add
ret
push
push
xchg
cs
pop
aad
sbb
fldt
sbb
jb
dec
inc
pop
ljmp
loopne
xchg
shlb
lret
stos
xchg
lahf
mov
mov
lds
jge
daa
add
jne
pop
popa
leave
lods
cld
aaa
mov
enter
xchg
adc
mov
mov
xor
pop
jmp
sbb
scas
sbbl
and
stc
push
clc
adc
cmpl
xlat
aaa
outsb
mov
adc
inc
or
fcmove
jecxz
inc
addr16
scas
push
stos
aad
fldl
xor
inc
std
adc
in
push
les
sub
push
lods
jecxz
int3
add
pop
jle
pusha
xor
lret
lahf
adc
mov
pop
loop
cmc
outsl
push
call
stos
aad
push
out
lock
iret
push
into
mov
mov
enter
jmp
push
mov
cs
cmpsb
or
and
sub
je
jg
aam
mov
mov
dec
sbb
push
in
inc
and
jne
pushf
test
lcall
nop
adc
popa
aas
sbb
pop
imul
dec
cmpb
hlt
outsb
pop
mov
sub
mov
cmpsb
and
push
push
mov
mov
push
jnp
add
mov
push
stos
aad
or
rorl
cmpsb
or
cmpb
adc
sbb
pop
repnz
fwait
push
ret
adc
mov
mov
xchg
in
adc
push
and
scas
push
push
shlb
inc
cmpsl
ja
sbb
xor
scas
lea
dec
push
stos
aad
and
icebp
pop
mov
rolb
pop
jae
sbb
push
mov
mov
xor
sbb
or
repnz
out
mov
aaa
mov
mov
push
call
lret
fwait
mov
enter
test
push
into
mov
stos
aad
fsubl
leave
stc
push
iret
cwtl
inc
inc
sub
movsb
cmp
jmp
or
mov
sbbb
and
pop
addr16
inc
and
push
pop
dec
daa
scas
push
or
call
sbb
mov
popf
cld
mov
jo
leave
ljmp
pop
leave
pop
dec
insl
cli
jns
jae
push
jne
add
loop
fcmovnb
sbb
ljmp
jl
dec
insw
jmp
int
test
dec
mov
lret
add
pop
jno
fwait
push
arpl
mov
test
cmp
inc
jmp
xchg
out
adc
test
leave
lret
aad
mov
push
mov
stos
stc
pop
cld
push
mov
aam
push
pushf
mov
jl
es
imul
push
xor
add
lret
sbb
pop
fnstsw
movsl
out
and
push
rcrb
jp
rorl
mov
dec
nop
out
jne
mov
mov
dec
dec
test
mov
movsb
cmpsl
nop
jge
cmp
out
jne
repnz
in
shr
int
xor
outsl
iret
cmpsl
or
adc
rol
and
sbb
cmpsl
jmp
mov
jne
pop
ljmp
lahf
mov
sub
pop
scas
imul
xchg
add
push
stos
aad
xor
sbb
xchg
mov
negl
testb
lret
out
sbb
mov
movsb
pop
pop
mov
jge
aas
pusha
cmpb
out
roll
hlt
in
test
xor
stos
pop
cmc
jb
outsl
addl
xchg
daa
xchg
cmp
stos
adc
xor
bsf
xlat
or
push
mov
movsb
pop
fisttps
out
insl
mov
arpl
cs
lods
push
rorl
adcl
jg
aas
enter
aad
jne
lods
sahf
mov
dec
mov
mov
mov
ret
and
sarb
push
mov
repnz
movsb
mov
xorb
add
aad
ja
fmuls
iret
mov
xor
roll
cmp
ret
pop
sub
push
test
mov
gs
jae
iret
mov
pop
scas
push
imul
jecxz
daa
ds
ljmp
jl
cmpsb
xchg
ja
lds
add
cmc
inc
mov
cmp
push
aaa
sub
ljmp
js
push
rcll
adc
das
xor
xchg
aad
xor
pop
pop
cmpb
sbb
aad
aas
xchg
insl
pusha
test
pop
mov
inc
aaa
mov
loopne
ds
mov
stos
aad
test
and
adc
divl
aas
mov
sbb
sbb
lcall
cmp
jge
push
leave
gs
pop
xchg
push
test
inc
enter
mov
movsl
cmpsl
ljmp
fsubrl
mov
mov
dec
stos
and
cld
into
push
adc
fwait
inc
test
ljmp
push
push
fidivl
outsl
mov
cmpsl
fiaddl
fdivp
pop
scas
push
insl
sub
leave
test
jge
lret
push
in
inc
bound
dec
sbb
aad
jne
clc
call
popf
cltd
mov
push
cmp
out
out
push
lock
mov
inc
xchg
push
out
call
popa
mov
mov
subl
fwait
cmc
js
lea
jne
pop
scas
into
cs
jmp
sbb
dec
sub
in
ss
ljmp
lods
mov
cmp
stos
gs
dec
xchg
mov
xchg
cs
test
aad
shl
and
jmp
xchg
pusha
ljmp
dec
mov
inc
jmp
test
jl
shll
inc
stc
pop
repz
gs
and
adc
mov
inc
inc
mov
lahf
ret
es
sub
cmp
xor
cmpsl
mov
mov
std
sbb
scas
push
setbe
pop
jbe
ja
jo
adc
es
fdivs
pop
mov
or
leave
movsl
ret
lods
push
orl
jcxz
jns
mov
stos
aad
jne
outsb
jns
and
jl
je
decl
inc
stos
jge
dec
adc
add
sbb
push
and
fs
es
test
pop
jne
pop
push
or
mov
mov
bsf
jecxz
insb
pop
out
mov
aad
and
add
jp
inc
mov
lds
add
ficomps
lds
loop
mov
icebp
insl
stos
aad
je
sub
sbb
sub
das
data16
adc
loopne
shlb
mov
jns
xor
div
or
aas
popf
pop
jp
sarb
mov
out
jns
jp
and
push
xchg
ficomps
aaa
rolb
push
sbb
aad
inc
and
aaa
push
orl
imul
mov
mov
jge
scas
mov
adc
aam
repnz
mov
mov
call
inc
sbb
cli
ljmp
pop
xchg
xor
cwtl
loopne
add
adc
imul
xor
jle
stos
push
mov
popf
or
jle
pop
fyl2xp1
out
and
xor
jge
mov
stos
xlat
xlat
xor
cwtl
loope
mov
pop
scas
push
or
ljmp
push
test
or
loope
fcompl
stos
aad
aad
lcall
out
mov
popf
pushf
fcoml
mov
inc
adc
rclb
jne
pop
sarl
std
push
add
inc
push
or
pop
es
adc
sbb
jmp
ret
pop
das
scas
mov
or
xlat
minps
pop
stos
sub
push
cld
cmp
hlt
test
sarl
jns
push
mov
inc
insb
lods
aad
jnp
push
push
inc
mov
ja
scas
call
or
cltd
mov
jne
daa
jl
sahf
push
clc
pop
xor
xor
add
mov
add
mov
xchg
loop
jmp
or
jne
push
mov
std
call
js
jb
shlb
pop
ds
in
xlat
lret
adc
fwait
ret
lds
cmp
cmp
in
jne
es
jo
inc
pop
dec
cmp
lea
loopne
lret
mov
push
aas
cli
loopne
add
addr16
or
pop
jp
int3
sbb
inc
scas
push
stos
cmpsl
ret
xor
loop
cmpsl
ss
xchg
push
add
or
dec
adc
mov
mov
dec
lods
aam
sbb
push
std
pop
ljmp
lahf
stos
xchg
mov
mov
cmpsb
test
aas
sti
mov
inc
mov
ret
cmp
ja
jp
dec
sbb
xchg
push
jmp
cltd
or
add
in
xor
and
les
lret
pop
aas
fldl
mov
mov
xchg
mov
andb
mov
cmp
ficoms
aad
jne
pop
cmc
cmp
test
cli
push
lcall
bound
jne
inc
mov
aaa
dec
add
xchg
mov
xor
and
xor
ja
test
enter
fsubl
push
leave
out
or
repnz
loopne
lahf
mov
stos
push
inc
mov
add
sbb
shlb
sbb
and
call
test
push
insb
stos
rcll
or
mov
das
pop
pushf
shrb
mov
daa
orb
scas
add
mov
and
mov
stos
aad
ja
test
fmuls
fcoml
xor
cmp
push
std
mov
dec
mov
push
xlat
xchg
sub
movsb
mov
mov
scas
mov
or
inc
xchg
stos
aad
jne
mov
push
or
xor
fadds
mov
sub
daa
js
cs
xlat
sub
mov
mov
push
sub
test
sub
inc
jb
push
cmp
fs
sbb
xchg
in
mov
cmc
jne
es
cmp
cs
clc
mov
jle
aad
scas
push
xchg
insb
xchg
pavgw
call
jae
xor
push
int
xor
mov
jnp
loopne
scas
push
pop
mov
xorb
mov
aad
jne
mov
ficoms
lea
stc
pop
popl
test
or
pop
or
jmp
lea
mov
pop
inc
lds
inc
pop
xchg
decl
shrb
popa
mov
mov
cmp
mov
loopne
rclb
fcomip
subl
call
sbb
mov
inc
xchg
out
aad
mov
aad
shrl
fldcw
mov
outsb
or
enter
out
rcrb
repnz
shr
pop
mov
jbe
scas
in
movsl
lret
fsub
and
ret
push
add
dec
fs
hlt
jbe
or
mov
or
mov
sub
and
adc
arpl
adc
dec
stc
pop
jmp
adcb
cltd
xchg
adc
push
stos
aad
ficoml
xchg
push
iret
add
mov
adc
aad
pop
cwtl
sti
adc
add
sbb
jge
enter
pop
push
push
sbb
mov
cmp
dec
rcrb
adc
or
je
lods
aad
or
fisubl
hlt
cli
push
pop
scas
sub
ja
sub
jge
mov
pop
mov
adc
pop
xor
or
mov
xchg
fildl
jbe
ja
sbb
shrl
xchg
push
ret
inc
int
jle
dec
mov
pop
pop
scas
push
stos
aad
dec
pop
pop
or
arpl
ficoml
incl
sbb
rcll
xor
mov
push
pop
fdivrl
jmp
or
mov
fadd
stos
aad
cmc
jnp
push
push
idivb
push
jb
mov
aas
es
in
les
pop
mov
cwtl
xchg
pop
daa
push
push
jns
in
pop
mov
ja
aam
mov
push
stos
aad
push
roll
rclb
add
pop
jns
nop
jnp
mov
fwait
lods
aaa
lcall
pop
fwait
daa
xchg
mov
inc
call
out
lea
outsl
xlat
lds
in
pop
pop
insb
push
adc
push
adc
cmp
bound
outsb
loopne
cmp
pushf
scas
push
mov
idiv
cmp
movsl
and
xchg
rorb
nop
inc
mov
scas
xlat
mov
ret
in
xchg
sbb
aad
mov
scas
push
fsubs
lret
scas
mov
frstpm(287
sahf
jecxz
and
inc
fildll
push
int3
cmpsb
sbb
fsubr
ss
cmp
jne
cli
pop
pop
aam
movsl
insb
les
jns
mov
test
ret
ja
movsl
std
enter
pop
scas
push
cld
or
decw
sub
sti
add
shr
std
mov
loop
shlb
jecxz
mov
inc
repnz
adc
lods
add
sub
mov
sub
mov
sbbl
add
pushf
cmp
fwait
cmp
ljmp
or
push
ljmp
aam
in
jbe
sahf
test
mov
icebp
dec
aam
sbb
pushf
mov
sti
mov
mov
les
jbe
sbb
loope
jle
jg
xchg
shlb
aad
jbe
int
dec
xor
adc
pop
ds
lock
push
outsl
dec
dec
ret
mov
push
in
mov
inc
and
add
mov
roll
push
pop
orb
cli
mov
fldt
dec
gs
scas
push
stos
aad
lock
lcall
pop
xchg
xor
jle
insb
inc
andb
aam
movsb
enter
pop
insb
dec
ret
lods
jo
ret
dec
loopne
lcall
into
ljmp
jb
imul
pop
lock
mov
shlb
jle
test
aas
push
sbb
stos
ret
push
ret
dec
pop
xchg
test
lret
or
lret
mov
cs
xlat
push
xchg
pusha
pop
or
cmpsl
xor
loopne
fisttpll
push
mov
cmp
loop
push
aam
ret
outsl
or
lret
adc
imul
pop
add
lods
rorl
mov
xchg
pop
int
jecxz
nop
add
scas
push
outsb
inc
push
xchg
fistps
fiadds
xchg
dec
adc
pop
push
push
stos
xchg
mov
add
leave
pop
test
ljmp
sbb
sbb
stos
aad
jne
loop
or
dec
sub
sub
jne
addl
movsl
xchg
jb
push
jb
sub
les
int
ret
sahf
push
ljmp
and
pop
out
stc
ja
fcmovnbe
je
jge
out
jp
pushf
mov
push
stos
aad
data16
push
fldenv
jae
stos
and
ret
imul
imul
inc
rcr
and
lcall
pop
adc
btc
int
out
pop
pmullw
mov
adc
xor
fadds
insl
lret
into
sbb
mov
inc
or
jae
out
cli
lcall
arpl
ja
fs
mov
adc
daa
arpl
add
adc
xor
push
in
icebp
fdivrl
adc
mov
stos
shlb
ret
arpl
outsb
mov
pop
lcall
mov
add
jae
cmpsl
mov
repnz
ret
xor
add
dec
cmp
incl
das
jecxz
or
mov
lfs
add
sbb
dec
ja
out
cs
jne
daa
jae
mov
fwait
adc
push
movsb
inc
lock
pop
out
stos
cmc
xchg
cwtl
pop
mov
and
jle
dec
in
pop
lret
ret
adc
cmp
subb
addr16
filds
lahf
subl
mov
std
push
cld
adc
add
hlt
push
stos
aad
cld
data16
into
and
mov
sahf
push
stos
loopne
inc
fdivp
cmc
pop
jbe
or
xchg
std
outsl
add
mov
pop
pop
fs
insb
mov
lods
enter
mov
jecxz
mov
jns
cmp
aad
data16
inc
pop
outsl
mov
pop
push
pop
lret
jl
jns
add
stos
aad
push
bound
movsb
imul
xchg
mov
pop
pop
mov
stos
aad
imul
push
mov
out
sub
or
push
aam
hlt
mov
pop
scas
push
stos
xlat
in
jnp
cmp
mov
out
and
insl
xchg
adc
ljmp
pushf
mov
cld
dec
xchg
xchg
push
lock
add
cmp
jecxz
jmp
bound
sub
jl
clc
push
aam
add
mov
aad
add
repz
xor
mov
rcll
push
xchg
sbb
mov
std
inc
les
pop
arpl
mov
add
leave
xchg
pushf
sbb
jae
arpl
mov
dec
fcompl
outsl
in
cld
ret
lds
push
mov
mov
call
andl
sbb
test
add
repnz
lret
lods
inc
or
xchg
push
mov
inc
xchg
sub
or
jno
pop
and
mov
pop
sub
cwtl
add
test
xor
push
mov
adc
pop
sub
mov
stos
xchg
pushf
push
and
ljmp
adc
and
and
inc
lods
or
jle
sub
xchg
mov
mov
cmp
pushf
pop
mov
adc
jle
mov
mov
and
and
xchg
xchg
cltd
movsl
xor
mov
lods
shrb
lds
adc
and
push
sti
sub
mov
decl
addr16
push
jns
std
cmp
ror
cltd
mov
mov
andl
sub
test
mov
fbld
dec
jecxz
add
mov
imul
cmpb
mov
into
and
push
cmp
loop
test
pop
and
jecxz
lret
fs
dec
xor
inc
lret
lret
push
cmp
cld
test
fsubrl
bnd
push
pop
lods
aas
xchg
sub
mov
jne
pop
divl
mov
dec
test
xor
into
imul
dec
mov
xor
xchg
xchg
sub
lret
js
pop
mov
sbb
aas
push
pop
jno
jge
push
aad
mov
pop
dec
xor
inc
daa
sbb
sbb
push
pusha
sbb
xor
pushf
sbb
and
sbb
sbb
icebp
inc
imul
xchg
lret
ja
pop
pop
jno
push
sub
int3
sbb
and
mov
push
pop
mov
aas
add
mov
jbe
pushf
incl
and
pushf
mov
or
gs
insl
sti
aad
ljmp
fwait
dec
and
arpl
movsl
sti
movsl
push
daa
pop
bound
push
xchg
dec
pop
or
add
or
adc
inc
in
mov
mov
mov
jno
ret
xchg
or
ret
aaa
test
mov
dec
cmp
mov
cmp
test
or
mov
cmp
adc
inc
out
imul
popf
rorl
out
rcl
scas
push
nop
jne
mov
xor
ja
xchg
les
xor
mov
cwtl
cmp
mov
cmp
stos
jne
daa
out
imul
popf
inc
aad
paddq
cmp
push
das
adc
jmp
mov
xor
mov
jo
dec
or
dec
mov
mov
inc
and
adc
fidivrs
jns
shlb
jns
loop
xor
push
mov
out
sbb
add
shl
add
movsl
mov
inc
add
dec
xlat
pop
jae
cmpsb
lcall
test
cmp
xor
daa
outsl
ljmp
dec
jnp
xor
rclb
sub
aas
roll
clc
pop
imul
int3
cmp
xchg
das
popa
xlat
insb
out
int
fistl
xor
in
and
les
es
dec
lret
rorl
add
cmp
push
sub
fcomp
popf
lock
addr16
dec
xchg
xchg
xor
jmp
adc
enter
mov
jmp
rcr
xchg
pop
out
lret
mov
inc
jbe
dec
mov
add
inc
mull
outsb
xor
aaa
inc
mov
outsl
pusha
pop
lds
sub
inc
cmp
jmp
pop
xor
sub
push
ret
mov
sub
xor
mov
mov
add
sbb
std
sbb
ficoml
shrb
ja
pop
sub
popa
divl
aas
fucomip
xor
mov
pop
pop
inc
xor
jmp
inc
inc
stos
lds
adc
sti
mov
mov
push
sub
mov
imul
adc
cmpsl
cmp
addr16
popf
dec
pop
sbb
push
bound
aam
jo
test
or
adc
add
add
sbb
sbb
or
add
cs
inc
jb
inc
mov
push
cmp
mov
mov
add
push
push
mov
js
push
and
les
jge
mov
dec
int3
les
xor
xchg
add
push
mov
xor
repnz
addb
daa
aad
xchg
push
cmpsb
push
and
sbb
jecxz
push
cmp
adc
ds
sub
cmp
dec
sub
test
push
add
xor
mov
lret
push
cmp
sub
bound
or
inc
dec
mov
cmp
jb
nop
sub
cmp
push
push
lods
push
dec
sub
test
push
add
xor
mov
lret
push
cmp
sub
cmp
jecxz
or
inc
dec
mov
cmp
jbe
xchg
sub
cmp
push
push
stos
push
dec
sub
test
push
add
xor
mov
lret
push
cmp
sub
popa
cmp
or
inc
dec
mov
cmp
jno
xchg
sub
cmp
push
push
scas
push
dec
sub
test
push
add
xor
mov
lret
push
cmp
das
sbb
cmp
inc
dec
mov
aas
or
imul
sbb
movsl
lret
push
cmp
jno
fwait
cmp
adc
mov
push
mov
sub
cmp
jecxz
loope
mov
jg
mov
xor
sar
pop
cmp
push
cmp
jns
xchg
cmp
sbb
shrl
mov
pop
stos
scas
push
lods
sub
cmp
out
adc
shrb
jae
mov
and
xor
int
popf
push
xor
sbb
jne
lahf
cmp
adc
jl
jecxz
cmpsb
cmpsl
pop
movsl
sub
cmp
out
in
movsl
sub
test
sub
xor
pop
cmp
mov
sbb
xchg
cmp
sbb
push
mov
sub
enter
cli
dec
xchg
sbb
pusha
bound
pushf
sbb
sub
in
push
pop
out
push
mulb
push
push
pop
pop
xor
shrb
js
gs
and
fstl
and
jnp
or
dec
scas
pusha
addr16
mov
inc
stc
and
xchg
stos
dec
lods
inc
daa
pop
pop
jno
dec
stos
inc
and
lea
in
adc
sbb
adc
cmp
jecxz
orl
sbb
pop
cmp
cltd
push
and
and
add
push
or
adc
ds
adc
and
scas
dec
movb
rorb
lret
push
mov
loopne
dec
pop
pushf
push
es
or
xor
shl
je
push
xchg
ja
mov
out
into
mov
pop
cmp
lret
inc
mov
or
cwtl
insb
push
ljmp
mov
movsl
pop
cmpsb
mov
cs
sarl
cmc
add
sub
aaa
push
sahf
shr
push
test
stos
shrb
cmp
insb
pop
and
mov
aad
dec
pop
jno
xchg
xor
xor
inc
jle
cld
sbbl
es
jnp
into
add
sub
test
shll
cmp
lea
dec
inc
mov
xor
xchg
jmp
dec
push
fstl
icebp
adc
sbb
dec
or
aad
js
lods
push
stos
imull
pop
jbe
mov
xor
daa
js
mov
jge
cld
dec
cmp
sub
aad
pop
xchg
or
push
sub
jne
ret
cmp
shrl
jns
test
and
xor
push
push
out
push
or
hlt
push
shrl
addr16
push
adc
inc
lea
sub
cmp
addr16
or
xchg
scas
mov
insl
cltd
push
movsl
and
and
push
push
arpl
push
jecxz
data16
ret
and
outsb
adc
and
std
pop
out
ds
and
jg
jnp
dec
cmp
shlb
push
push
je
cmp
and
clc
data16
lds
xor
les
push
push
dec
or
sbbl
mov
cmp
cmp
dec
sbb
std
push
loope
popf
imulb
or
adc
lds
sbb
lods
mov
outsb
xchg
xlat
push
adc
xor
ja
js
push
sub
push
mov
daa
cs
adc
movsl
bound
xor
xor
and
adc
mov
dec
and
inc
imul
and
in
dec
shll
jl
int3
fstp
outsb
ljmp
ds
cmpsb
mov
loopne
into
mov
add
fstp
outsl
iret
mulb
out
dec
aaa
movsb
mov
lahf
mov
les
pop
or
adc
sbbl
xor
mov
sbb
or
cmp
or
push
lcall
push
lcall
pusha
stos
push
cmp
test
inc
mov
adc
inc
cltd
pop
int
inc
lret
ror
push
push
ds
sahf
inc
jp
mov
pop
jnp
mov
mov
stos
push
out
add
add
mov
xorl
rdpmc
lods
insl
mov
js
cmp
pusha
pop
and
ljmp
imul
out
out
sbb
pop
rorl
pop
out
jnp
fsts
pop
scas
xlat
fnsave
or
jmp
shll
das
leave
cmp
cwtl
aam
and
and
std
cmp
push
outsb
idivb
fsubrl
pop
jne
ret
or
push
out
shl
jne
lock
push
and
or
add
ficomps
adc
adc
bound
dec
in
sbb
lret
dec
lahf
je
cmp
jg
lock
popf
orl
pop
jo
aam
in
clc
lahf
loopne
push
decl
cld
or
mov
ret
repnz
add
cmp
scas
addb
popa
das
xor
movsl
fmull
in
gs
ljmp
cmpb
mov
mov
inc
mov
or
xor
lock
pusha
imulb
inc
add
or
xchg
push
aaa
outsl
cmp
xchg
lock
xlat
and
pop
inc
out
jae
pop
jecxz
sahf
aas
cmp
js
repnz
jg
je
or
daa
popf
fwait
loope
cmp
lcall
fldcw
scas
jle
ret
dec
gs
jg
ret
shlb
push
xor
cmp
sbb
cmp
pop
aas
jmp
stos
sub
jns
jns
in
jno
lods
add
stos
sbb
mov
gs
lods
cltd
inc
adc
push
pop
dec
enter
dec
jne
inc
push
out
outsl
out
mov
mov
cmp
lea
lahf
pop
sbb
sub
out
test
enter
push
addr16
sub
test
ffree
pushf
inc
push
or
inc
movsl
push
stos
inc
cs
mov
pop
and
stos
movsl
adc
loope
popa
cwtl
add
test
ljmp
lret
and
adc
mov
xchg
data16
sub
jp
and
cmp
insl
in
adcl
jl
cmpsl
mov
fnstsw
mov
mov
jo
jne
push
ljmp
test
test
rcll
pop
stc
pop
mov
pop
pop
add
xchg
mov
sbb
inc
dec
add
dec
push
repnz
jnp
lods
movsl
sub
mov
sbb
sub
test
pop
push
lods
push
mov
mov
pop
xor
out
cmp
mov
inc
pushf
push
lret
fildll
push
pop
loop
xlat
mov
pop
out
in
xor
inc
imul
pop
arpl
sbb
push
int
or
hlt
mov
daa
or
inc
add
push
inc
adc
sbb
cmp
gs
pop
dec
imul
xor
in
dec
jp
test
mov
adc
pop
pop
cli
jno
cmp
test
or
rcrl
sub
insb
stc
fldcw
xor
ds
sarl
mov
ret
ss
aam
pop
sti
lock
xor
and
pop
jecxz
push
or
or
aaa
inc
test
int3
mov
xor
sub
sbb
hlt
int3
fildl
lcall
imul
into
lods
popa
sub
mov
into
cli
add
jle
jmp
pop
test
push
xor
lret
js
pop
faddl
inc
push
xchg
and
mov
jg
pop
jl
cmp
push
sub
xchg
xchg
aaa
pop
call
sbb
test
xchg
or
lahf
mov
sbb
arpl
mov
push
or
sub
andb
push
orl
mov
push
cli
add
dec
dec
loop
xchg
inc
out
and
and
lcall
and
sbb
lret
cmpsl
iret
adc
lcall
divb
ret
fdivs
inc
mov
jb
pop
lcall
inc
or
add
mov
insl
faddp
or
inc
enter
fwait
adc
popl
mov
test
arpl
out
fdivs
dec
cld
orl
jge
rcrl
movsb
add
pusha
imul
jb
jp
dec
icebp
xchg
push
scas
lahf
dec
sub
sti
mov
gs
pop
mov
and
mov
out
scas
test
mov
shlb
out
imul
push
xchg
in
cmp
aad
dec
out
aad
sbb
cmp
xor
fsubrs
shrd
cwtl
inc
inc
sbb
enter
testl
mov
or
add
divl
dec
or
sub
push
clc
imul
add
movsl
shr
or
xchg
repz
imul
jbe
lret
lret
clc
in
and
into
sub
aaa
outsl
dec
mov
pop
jmp
mov
jle
mov
fisubrl
xor
xor
cs
pop
jp
cwtl
insl
jmp
pushf
sbb
jge
pop
sub
data16
pusha
inc
ss
and
addr16
xchg
insl
pop
cmpsl
das
fwait
adc
imul
and
iret
out
cltd
imul
or
test
and
push
imul
and
push
in
xchg
push
js
mov
pop
sti
jl
loopne
inc
inc
sbb
jge
ret
xchg
adc
sbbb
sub
movsl
push
cmp
js
movl
add
and
loopne
xchg
push
sub
push
rcrl
adc
mov
ficompl
adc
movsb
iret
mov
mov
out
mov
sarb
outsb
gs
push
pop
iret
or
roll
popl
imul
fwait
mov
ds
xor
out
pop
icebp
inc
pop
push
fnsave
push
sbb
xor
mov
scas
pop
adc
sar
push
popl
lret
and
and
adc
xchg
mov
icebp
add
je
shll
jp
subl
inc
mov
imul
pop
adc
lea
add
in
aaa
mov
mov
movb
mov
in
mov
popf
sti
add
fsts
out
jmp
mov
mov
push
movsl
pop
nop
loop
push
mov
sbb
clc
addr16
shrb
scas
scas
cmp
push
and
pop
pop
loop
dec
mov
cwtl
arpl
adc
enter
adc
fiadds
in
sar
sti
add
aaa
jp
rcrb
sbb
bound
cmp
inc
ljmp
inc
lcall
jae,pt
in
in
jge
fnsave
bound
jno
mov
aad
sub
pop
jmp
aaa
push
mov
fisttpll
xchg
sbb
pop
sbb
inc
addl
enter
mov
imul
xchg
xorw
push
fwait
xlat
int3
push
in
cmpb
jl
adc
fwait
push
add
scas
jno
xchg
mov
stc
xor
mov
aad
sub
cli
lret
sub
roll
adc
lock
pop
sbb
cld
xor
addl
lea
and
inc
push
ljmp
jge
xchg
std
push
jae
mov
inc
insl
lret
push
sahf
inc
mov
pop
dec
fs
cmpsl
lahf
inc
add
leave
popf
sub
das
je
jbe
and
mov
stos
add
fstpt
jecxz
hlt
dec
int
fisttpll
out
testb
pop
xchg
cwtl
ret
insl
shrl
and
xchg
pop
xchg
adc
in
aaa
dec
pop
cwtl
daa
cmp
and
pop
je
mov
lock
dec
pop
xchg
jo
push
lret
sbb
push
or
cld
insb
mov
dec
cmp
shl
add
cs
cmp
enter
pop
or
shrb
out
call
int
xchg
adc
iret
xorl
jg
mov
push
push
pop
xor
lahf
sub
dec
and
movsl
inc
loope
lods
adc
mov
pop
push
int
movsl
jnp
inc
dec
xchg
push
mov
add
arpl
and
add
xor
scas
inc
sbb
gs
push
mov
jns
lahf
jecxz
out
filds
push
ljmp
pop
roll
push
rolb
data16
push
xor
in
hlt
bound
dec
xchg
cltd
pop
shlb
outsb
ror
push
push
or
push
loope
dec
inc
fmull
notb
mov
push
cli
insb
push
mov
cld
add
in
cmp
mov
sub
lods
scas
and
cmp
xor
movsb
in
pop
scas
push
filds
xchg
cmc
shrl
rolb
fidivrl
inc
je
aad
xor
stos
add
push
mov
pop
arpl
outsb
xchg
dec
sub
aaa
cmp
lock
ret
cmpsl
ret
cmp
jo
mov
stos
sub
push
fistpll
adc
ds
fldl
sub
jb
outsl
test
adc
cmp
addr16
cld
cmp
loope
pop
xor
iret
sub
mov
shr
notl
mov
jp
fs
adc
push
icebp
clc
sbb
in
add
bound
lds
aam
sbb
xchg
js
test
jns
push
dec
xchg
rclb
enter
test
clc
jmp
js
test
sarb
add
push
sarb
mov
mov
movsl
push
jle
push
loope
push
mov
dec
add
sbb
pop
popf
loope
ljmp
xor
ljmp
push
hlt
push
pop
or
fcmovnb
nop
sbb
push
subb
sbb
in
lea
inc
adc
out
fidivrs
add
sbb
loope
mov
ds
and
adc
push
jle
lret
lcall
hlt
pop
packsswb
sbb
adc
fstpt
js
push
std
lods
dec
je
and
mov
stc
pop
leave
loope
popa
pop
sub
int3
inc
sbb
push
int
out
push
aad
jae
jb
or
mov
cmpsl
dec
jb
lcall
addl
cmp
out
lods
push
or
jle
dec
xorl
sub
add
pusha
arpl
adc
xchg
scas
fsubrl
aam
jbe
mov
inc
shl
inc
and
and
fidivs
je
jne
xchg
xor
arpl
xchg
clc
jecxz
xchg
push
sub
fcomps
jnp
and
into
cwtl
repz
mov
push
pushf
ret
sub
mov
lods
ss
roll
outsb
lds
cmp
rcll
and
mov
add
leave
ret
mov
and
push
mov
pop
adc
sahf
xchg
test
and
fists
test
inc
in
push
in
ret
pop
pop
int
pop
loop
sbb
and
sarl
sub
lcall
push
and
add
xor
xor
xchg
sbbb
pop
inc
pop
mov
dec
in
fcoml
push
push
test
mov
jno
and
jo
movsl
mov
add
push
inc
sbb
insb
or
sub
pushf
xchg
je
sub
push
into
leave
outsb
jecxz
out
mov
into
in
cmp
mov
vmovups
and
pop
push
div
fimull
cmp
add
out
jge
inc
in
rolb
inc
mov
push
add
jne
push
ds
loopne
sub
adc
out
and
lds
mov
pop
xchg
mov
jl
pop
loop
push
les
jbe
sar
imul
or
test
xor
cmpsl
pop
push
sub
mov
fistpl
enter
repz
xor
cmp
pop
out
push
les
aam
add
fsubl
aaa
sbb
and
gs
aas
adc
test
or
les
fwait
or
in
dec
xor
sub
xchg
push
or
ret
dec
loop
std
leave
push
ficoms
adc
sbb
frstor
sbb
push
dec
mov
push
lea
inc
bound
loope
in
xchg
xor
sub
xchg
jbe
out
lcall
into
dec
pop
pop
mov
push
mov
pop
jne
jmp
stos
leave
xor
ss
push
sarl
sub
pop
adc
xchg
lret
mov
push
jbe
test
inc
dec
sbb
into
fisttpll
inc
leave
push
inc
dec
push
push
jecxz
adc
jmp
jo
push
dec
repnz
xlat
cmp
int
in
or
testb
leave
mov
stc
mov
sub
xchg
test
mov
dec
mov
insl
out
add
or
jb
inc
enter
and
in
sub
push
sub
in
das
jne
fs
lret
push
cmp
and
or
mov
jecxz
jp
stos
xor
jno
in
and
sub
xchg
sbb
subb
jecxz
outsl
jecxz
into
cld
std
jo
shll
addr16
mov
loope
and
xchg
addb
or
cmp
subl
cmp
loope
loope
and
and
xchg
dec
pop
into
outsl
stc
and
xchg
mov
fsubrl
xor
inc
inc
dec
xor
into
mov
mov
jae
lret
insl
stc
and
xchg
jmp
mov
shr
xchg
mov
xor
sbbl
stc
and
sarl
mov
sbb
sub
mov
cmp
sub
cld
jno
into
sti
into
dec
push
and
sbb
mov
jns
insl
addr16
test
cltd
push
or
aam
xchg
and
or
test
dec
dec
xchg
mov
cld
push
outsb
ds
loope
loopne
movsl
out
cmpsl
pop
fisubs
movsb
test
in
sub
xchg
inc
mov
push
out
movsl
leave
loop
scas
mov
inc
mov
inc
push
xchg
mov
sub
imul
mov
lea
enter
lea
cmpsb
mov
idiv
dec
divl
add
scas
xlat
xchg
aad
outsb
add
mov
pop
mov
stos
mov
or
cmpsb
bound
push
rclb
push
cltd
fwait
cmpsb
lret
mov
xor
jne
aad
add
push
int3
pop
xor
leave
or
push
aad
or
fimuls
int
call
push
push
adc
shrl
adc
xchg
setp
xchg
lret
jb
xchg
les
enter
das
les
jo
repz
mov
loop
push
xchg
call
push
cmpsb
mov
fdivrl
lret
push
fs
sub
jns
jp
aas
sub
mov
in
cmp
jecxz
scas
lcall
push
inc
sbb
and
out
xlat
inc
out
mov
push
xchg
xchg
mov
sub
fs
aaa
out
or
into
xor
cwtl
into
insl
out
dec
jnp
aad
aad
imul
xor
push
inc
push
cs
cmpsl
pop
jno
or
xchg
insb
inc
add
cmpsb
sbb
add
cwtl
push
cmpl
imul
sti
ljmp
jg
cli
pop
sub
pop
fisubl
mov
xor
mov
notl
jno
mov
xchg
clc
das
mov
cmp
leave
adc
movsb
jne
jno
dec
xchg
mov
cmpsb
add
pop
xor
imul
scas
dec
mov
ja
adc
push
adc
push
add
in
scas
sbb
rclb
dec
adc
mov
push
addb
loop
in
push
mov
insb
or
call
mov
push
lret
dec
sbb
push
icebp
icebp
dec
fcompl
shrl
xchg
outsb
xor
daa
sub
int3
push
lret
inc
mov
mulb
mov
push
jg
pop
shrb
mov
fiadds
sbb
repz
mov
add
dec
mov
aam
fnsave
ds
insl
push
and
sbb
cmp
or
repnz
mov
into
jnp
sub
adc
arpl
add
std
mov
iret
xor
fisttpll
pop
arpl
push
push
adc
shll
pop
cmp
shl
insl
adc
lcall
sbb
jg
out
jae
push
mov
dec
fs
dec
iret
mov
mov
sbb
pop
pop
jo
into
cld
fists
aad
push
sbb
sub
fldcw
push
jg
jmp
popf
mov
push
ss
fmuls
push
je
inc
fisubl
scas
mov
cld
mov
lea
mov
fcompl
adc
xor
fs
push
call
leave
mov
fidivl
sub
in
sbb
sub
mov
dec
add
xchg
bound
mov
jnp
and
out
mov
sbb
cmp
xchg
insb
fistl
mov
mov
in
movsl
mov
sbb
mov
negb
data16
cmpsb
cld
pop
fsubrl
mov
inc
jb
push
sahf
fnstsw
add
add
lods
out
frstor
mov
xchg
push
dec
sub
leave
fwait
je
push
ret
or
xor
shll
lock
xchg
aaa
add
insl
cmpsl
icebp
push
push
ljmp
pop
fiaddl
dec
mov
pop
outsl
or
cltd
jecxz
mov
adc
push
add
mov
or
cmp
xor
movsb
out
adc
test
adcl
outsl
jp
mov
mov
or
jb
test
lds
mov
icebp
cli
pop
adc
pop
xchg
push
ljmp
es
push
inc
push
popa
xchg
sbb
loopne
sbb
call
xchg
out
je
and
stos
push
jns
je
cltd
mov
rclb
pop
test
stos
mov
jne
jmp
cld
push
push
nop
sbb
pop
sub
push
or
sub
inc
mov
sub
shl
or
adc
lods
mov
in
inc
sti
push
jg
rorl
mov
leave
mov
es
cmpb
popf
adc
xchg
xor
outsb
mov
insl
push
mov
pop
cmp
mov
sub
into
adc
sbb
mulb
push
popf
pop
call
mov
push
movsb
push
aam
lea
mov
dec
pop
adc
jmp
pusha
int3
pop
lret
sarl
jns
xor
jae
stos
test
mov
or
iret
arpl
popa
jecxz
jle
jne
jns
stc
gs
leave
mov
xor
fistl
dec
lcall
dec
mov
mov
loop
sbb
mov
fiaddl
xor
fcmovne
pop
pusha
cmp
xchg
xchg
mov
loop
sub
pop
jne
ret
shrl
fnstenv
jne
jnp
inc
mov
sti
cmpsb
xor
sub
sbb
insb
jl
push
popf
pop
inc
mov
mov
cli
sub
mov
aam
lea
adc
dec
mov
jne
stc
pop
push
cs
jl
test
adc
lods
jbe
sub
nopl
push
fstpl
adc
stc
push
iret
sbb
jno
mulb
jne
pusha
insl
lcall
stos
sbb
jns
inc
pop
mov
push
mov
dec
frstor
js
mov
lock
sbb
stos
xchg
fsubrs
sub
xorb
scas
inc
cmpsl
imul
mov
sbb
std
dec
into
mov
out
cmc
mov
jl
lea
icebp
dec
jg
or
push
ljmp
fisubrl
mov
mov
into
add
cmpsl
or
and
ja
adc
xchg
pop
rcll
add
mov
or
inc
push
and
aas
or
or
pop
or
cwtl
and
cwtl
je
fstpl
pop
xor
push
jl
lret
je
insl
inc
jno
fnstcw
xchg
rcll
jg
sahf
mov
clc
inc
stos
shrb
adc
mov
bound
lods
test
mov
lds
xor
mov
cmc
adc
loope
push
pop
adc
adc
add
movsl
push
call
out
and
test
sbb
xor
inc
bnd
and
jnp
ja
mov
pop
mov
xchg
xchg
sbb
adc
push
shrb
mov
movsb
movsl
es
in
adc
test
and
push
scas
sti
fstpt
adcb
mov
imul
adcb
add
xor
and
inc
pop
sbb
jo
rorl
xor
mov
dec
push
inc
inc
jno
sub
clc
jne
xchg
fs
arpl
and
add
adc
inc
loopne
in
pop
pop
and
jo
mov
enter
fwait
pop
sbb
shrl
jo
mov
ffree
cmp
movsb
cwtl
adc
loope
push
icebp
ror
cmc
pop
stc
push
icebp
mov
or
cmpsl
inc
lods
dec
aas
push
sub
cmp
xor
imul
sbb
ficompl
leave
repnz
jae
jno
push
pop
mov
test
jecxz
mov
push
cmpsl
fimull
sbb
cmp
out
mov
and
scas
mov
dec
ret
sub
xor
sbb
push
sbb
cmpl
mov
push
cmp
xor
leave
rolb
inc
mov
into
cltd
sbb
aad
int
fdivs
xchg
fadds
jecxz
xchg
mov
fsubrs
fsubrl
sub
push
idivl
or
jl
jb
call
dec
popf
in
adc
or
jle
cmp
push
icebp
dec
inc
push
out
add
xchg
inc
flds
pop
lret
inc
faddl
out
repnz
rolb
or
aad
jp
shr
dec
xor
dec
pushf
push
mov
mov
adc
fsubrp
mov
ret
mov
cltd
jo
inc
and
mov
add
lret
sub
push
shr
sbb
in
push
adcl
push
adc
push
cmp
mov
aam
pop
adc
add
adc
pop
sub
aas
sbb
or
ljmp
xchg
xor
test
shrb
fbld
sub
mov
adc
aad
push
mov
mov
xchg
xchg
sarb
inc
repz
rclb
and
fucomp
inc
jb
fs
adc
mov
jbe
aas
pop
loopne
sbb
jb
sub
daa
into
dec
add
jae
pop
mov
push
push
adc
inc
lods
sub
pop
mov
adc
pop
mov
pop
test
sbb
and
cs
push
cmc
shl
out
pop
lcall
test
inc
cmp
pop
inc
xchg
inc
mov
or
daa
inc
inc
push
push
lods
mov
imul
push
cmp
lret
pop
shlb
mov
push
hlt
out
adc
aam
aam
lahf
add
or
and
push
out
rcl
lret
add
sub
aam
hlt
pop
add
sbb
mov
mov
jbe
out
pop
xorb
in
pop
jl
ja
inc
cmp
cmp
bound
jecxz
sub
mov
jmp
fnstsw
in
gs
mov
mov
pusha
addr16
mov
mov
pop
fwait
pop
ficoml
movsl
push
jp
clc
sub
xor
jbe
fiaddl
inc
add
inc
cwtl
xchg
cs
nop
insl
and
insl
aad
dec
loop
rcll
sbb
mov
fldenv
fwait
add
les
ret
cmp
xchg
mov
cmp
adc
dec
popf
inc
add
push
cmp
mov
xor
jns
mov
pop
dec
mov
xchg
fldt
stc
jbe
xor
inc
mov
mov
roll
xchg
sub
cmp
pop
cs
rcll
test
fnstcw
lds
repnz
sbb
sub
sub
test
into
xor
sub
cmp
xchg
jb
test
mov
pop
lods
add
dec
mov
and
mov
in
add
add
stos
mov
push
xor
push
ljmp
ds
mov
push
outsl
and
mov
je
push
jno
shlb
shr
sbb
lahf
sarl
popa
jnp
pushf
jl
sub
pop
pop
jno
es
out
test
cmp
push
add
je
scas
mov
lret
push
push
pop
mov
ret
fnclex
int
add
sbb
adc
pop
lods
cmp
test
popa
dec
movsb
and
test
lahf
mov
aad
jne
jno
call
xor
mov
lret
lods
lea
dec
shr
and
pop
cld
push
pop
and
pop
insb
or
push
les
xchg
push
xor
stos
arpl
jne
jns
shrb
jp
movsl
cs
sbb
jecxz
sub
enter
sub
jne
pop
in
jne
hlt
in
pop
mov
imul
arpl
jns
inc
sub
push
inc
scas
push
stos
xor
jl
imul
les
dec
lods
testl
mov
daa
jo
dec
xlat
shrb
and
or
adc
sub
jo
jecxz
pop
addr16
sbb
ljmp
aad
sub
add
add
lods
and
mov
test
xor
scas
push
cmpsl
or
mov
cmp
adc
sbb
push
dec
shrl
xor
imul
test
jne
pop
push
sbb
movsb
xchg
xchg
stc
cmp
pop
inc
or
xchg
lods
jb
adc
push
addb
mov
add
sarl
adc
jb
mov
enter
cmp
cld
repnz
pop
lods
xor
movsl
mov
inc
fistps
out
or
out
es
mov
jns
incl
outsl
scas
push
stos
aad
xor
or
xorl
data16
out
adc
into
fsubrs
add
jl
pop
nop
in
imul
sti
xor
mov
loopne
push
jne
pop
add
push
int3
sub
adc
fidivs
and
jo
mov
outsl
jmp
clc
push
xor
xchg
lcall
jle
fsts
aad
push
pop
adc
mov
es
push
pushf
mov
jb
jg
addr16
or
jns
inc
stos
aad
jne
xor
xchg
repnz
stos
dec
adc
sub
mov
mov
sbb
inc
test
icebp
cmpsl
mov
push
pop
fldpi
insb
cmp
test
scas
ret
fildl
repnz
jae
mov
jmp
lcall
hlt
mov
push
jne
repnz
ficoml
adc
or
and
push
sbb
arpl
add
inc
adc
outsl
cmp
dec
or
or
xor
jl,pn
lods
xor
or
inc
into
push
ja
cmpsl
pop
xor
fidivrl
insb
subl
int3
dec
fistpll
pop
jge
lods
xor
jg
enter
and
insb
dec
fstp
dec
inc
sub
jg
jle
and
cmp
arpl
es
and
jae
push
daa
test
cmp
popa
jg
inc
xor
pop
inc
jno
dec
and
sahf
jne
mov
jnp
pusha
lea
fwait
and
sbb
mov
push
mov
pop
pop
add
jae
and
mov
mov
lods
popa
sub
or
pop
and
hlt
aad
pop
pop
and
inc
loopne
mov
xor
testl
mov
xchg
ret
cmp
aas
mov
xor
out
cmp
popf
and
lahf
bound
stc
lock
outsl
call
sub
jnp
out
mov
sub
iret
ja
jnp
outsl
pop
sbb
sbb
lahf
push
pushf
inc
popa
ret
jp
dec
popa
fldcw
sub
add
cmp
std
and
sarb
xchg
sbb
mov
jp
cwtl
xchg
addr16
or
dec
mov
push
fcmovb
adc
rcll
clc
rcll
ret
and
scas
push
ficoml
aad
addl
cmpsl
cwtl
pop
inc
mov
adc
sbb
sbb
lcall
in
cs
dec
fmul
mov
out
add
inc
sbb
and
andb
scas
fisttps
xchg
daa
mov
xchg
cmp
das
cmp
lods
sub
stc
push
inc
cmp
aaa
imul
in
xor
mov
pop
xor
xor
ja
or
aaa
ret
mov
int3
mov
imul
scas
dec
mov
and
and
div
inc
inc
fimull
push
xor
pop
pusha
lock
push
mov
pusha
mov
test
arpl
and
stos
hlt
lea
pop
in
lcall
lods
push
pusha
sub
cmp
cmp
mov
push
mov
and
cld
dec
xchg
push
repnz
jns
xor
mov
push
int
adc
dec
add
xor
imul
mov
add
rcl
in
cltd
arpl
or
rcrl
and
push
leave
and
je
cmp
es
cmp
icebp
mov
sub
jae
gs
int
mov
dec
incl
sub
scas
les
mov
imul
adc
and
xchg
pop
lods
ret
icebp
gs
stos
out
mov
xchg
fildl
pop
jne
adc
mov
popa
pop
and
ficompl
loop
sub
cltd
js
push
push
shrb
push
sub
daa
xchg
aaa
dec
arpl
dec
ret
and
lcall
lods
adc
sbb
enter
push
jl
les
sub
fldcw
xor
or
jb
cs
cmp
cltd
shlb
out
dec
std
out
push
fadd
je
out
pop
ret
repz
jne
mov
sub
loopne
ret
push
stc
dec
sbb
xchg
inc
mov
xchg
xor
and
popf
cmp
mov
sub
jae
andl
popf
loope
shrl
pop
mov
jne
test
mov
or
enter
out
icebp
xor
push
cmp
lds
fcmovbe
or
jno
loopne
adc
xor
dec
or
and
pop
ljmp
int
pop
pop
mov
xor
int3
scas
cmp
lret
mov
fbstp
incl
pop
hlt
mov
cmp
andb
repz
iret
xor
scas
in
jbe
pop
stos
jge
push
inc
cmp
lock
test
ss
out
scas
shl
lahf
outsl
filds
push
xor
add
in
and
fists
cmpsb
call
repz
sub
inc
clc
ja
bound
int3
mov
in
xchg
insl
sarb
jo
xor
fsubrs
push
outsl
out
and
mov
bound
mov
imul
leave
jl
pop
xchg
ret
and
sbb
loope,pn
idivl
dec
cli
mov
pop
inc
rcrl
mov
cs
ret
xor
add
xor
shlb
sub
xlat
pop
shl
pop
lea
adc
and
cwtl
mov
adc
daa
push
test
add
imul
dec
sbb
scas
jns
nop
rcll
rorb
movsl
push
dec
xor
es
mov
int3
lahf
dec
and
and
inc
das
jae
pop
jb
jbe
jno
aas
fsubr
aas
cmp
insb
cmp
pusha
stc
inc
and
dec
pop
jne
inc
mov
loop
pusha
inc
cltd
ja
imul
or
loopne
add
adc
cmp
add
inc
loop
add
or
inc
xchg
mov
in
jae
js
outsb
xchg
pop
push
push
mov
sbbl
bound
mov
cmp
sahf
lods
adc
and
inc
enter
pop
push
mov
sub
jmp
cmpsb
das
and
inc
jns
arpl
fs
fmuls
pop
bound
mov
mov
pop
sub
xor
fbstp
dec
enter
sti
inc
js
sti
ja
loop
fimull
ss
aaa
mov
mov
scas
jmp
ss
jecxz
mov
ret
lds
rcrb
mov
pop
xchg
leave
pop
mov
sub
sub
aaa
jne
and
outsl
cwtl
stos
in
mov
nop
or
sbb
ret
fwait
push
out
cli
sbb
cwtl
imul
fdivrs
roll
sysexit
arpl
es
mov
lahf
push
mov
or
xor
cwtl
das
fadd
xor
gs
mov
hlt
aad
pop
popf
fs
push
sub
xor
out
data16
loopne
push
cmpsb
dec
or
or
arpl
fcomps
orl
mov
xor
inc
jp
sub
adc
push
ss
nop
jmp
xorl
dec
ss
leave
arpl
jecxz
and
rcll
repz
leave
ficomps
or
push
out
ds
xchg
movsl
mov
je
flds
dec
push
jo
and
movsl
js
xor
jne
push
sbb
dec
lock
cmp
shlb
xchg
mov
fs
loope
popa
jmp
cmc
and
adc
arpl
insb
shl
rorb
leave
icebp
sub
adc
aaa
push
mov
les
loope
and
xor
inc
push
xchg
fadd
iret
std
sub
fsubs
inc
jmp
jno
sbb
stc
bound
cmp
cs
arpl
cmpsl
clc
pop
xor
push
mov
lods
ja
xor
aaa
adc
sbb
fnsetpm(287
and
xchg
jmp
rorl
inc
inc
push
mull
nop
push
daa
mov
push
adc
test
rcll
aas
out
fldt
mov
mov
cmc
mov
sub
add
test
and
push
push
hlt
ds
dec
int3
jge
lds
xchg
mov
fists
push
ljmp
sbb
xor
add
int
lret
insb
lods
adc
mov
dec
dec
stos
jbe
lods
jo
mull
mov
mov
sbb
push
mov
js
inc
enterw
xchg
dec
lahf
push
test
xlat
lock
loope,pt
jbe
fcomps
lret
sbb
js
add
aad
cmpsl
pop
les
dec
and
push
fwait
dec
jae
inc
pop
rorl
and
jge
cwtl
and
insb
inc
adc
es
lods
test
stc
or
lea
test
dec
cwtl
dec
hlt
cmpsl
insl
adc
or
ljmp
and
movsb
fs
test
stos
fisubrl
xchg
pop
push
cmp
sub
std
out
sub
jnp
dec
pop
push
inc
pushf
cli
jecxz
xchg
ret
testl
sub
mov
adc
fistps
sti
je
inc
dec
clc
jmp
xor
out
pop
addr16
test
or
or
xchg
dec
xchg
mov
test
dec
loope
test
daa
int3
fistps
aaa
leave
aaa
sti
mov
push
idivl
mov
add
jmp
and
pop
pop
sub
cmc
push
fistl
or
push
fnsave
test
xchg
mov
ret
movsl
xor
test
inc
add
xor
pop
andb
lea
or
out
loope
cmp
dec
test
pop
xorl
adc
xor
daa
gs
cmc
test
or
push
cmp
jecxz
push
fwait
lret
push
test
mov
fucomi
shlb
add
ret
sbb
icebp
jno
mov
hlt
xor
or
push
fnstcw
and
sbb
hlt
jnp
push
push
xlat
dec
pmulhuw
aaa
div
xlat
dec
adc
shll
jle
inc
test
mov
dec
sti
mov
dec
int3
lods
shll
arpl
or
push
outsl
push
out
adc
xchg
out
adcl
mov
pop
lahf
outsb
lahf
decl
incb
pop
mov
fcom
and
popl
in
imul
mov
cltd
jns
dec
outsb
aaa
cmc
push
ret
sbb
dec
leave
sub
or
idivb
sarb
sub
inc
leave
add
fs
gs
mov
cmpsl
mov
int3
imul
call
lea
lods
adc
cmp
popa
lods
xlat
inc
mov
lret
or
jno
xor
mov
call
out
push
dec
imul
les
mov
icebp
inc
stos
out
sbb
clc
xchg
gs
or
xor
stos
jno
and
mov
hlt
mov
sub
or
lret
inc
notl
lcall
jbe
jg
stc
xor
aas
push
sub
popf
push
fiaddl
mov
test
and
lret
inc
adc
mov
jno
cmp
xchg
dec
addr16
stos
cmp
jnp
in
lock
aaa
mov
mov
push
sub
roll
ljmp
add
adc
ljmp
xchg
xchg
cli
xchg
leave
dec
test
out
cltd
mov
mov
jge
lods
and
adc
es
es
cs
cs
push
mov
andl
and
into
pop
mov
add
es
adc
cmp
inc
inc
push
and
or
dec
outsl
adc
dec
popf
pop
cmp
lret
push
cmpsb
out
stos
push
dec
jp
pop
cli
shlb
mov
jbe
dec
ret
xor
ret
sub
leave
jmp
or
nop
sti
leave
leave
adc
mov
push
xor
push
mov
mov
pop
stc
adc
or
and
jmp
push
fidivrs
inc
jecxz
mov
orl
and
and
fnsave
sub
jnp
xchg
std
push
out
pop
aas
mov
movsb
sbb
xor
cwtl
mov
dec
stos
push
int
add
jecxz
xchg
jbe
ss
adc
push
mov
add
or
cmp
lock
mov
scas
cmp
les
mov
or
out
sbb
adc
jae
outsl
pop
mov
into
pop
adc
stos
and
popa
lret
push
adc
mov
cmp
movsl
idivb
adc
test
fwait
sbb
fisubrs
mov
shrb
jge
cmpsl
pop
or
inc
pop
inc
arpl
mov
push
outsl
dec
in
dec
out
sbb
jns
and
mov
std
pop
test
sbb
pop
addb
cmp
shl
or
stos
push
int3
or
outsl
daa
jecxz
sub
and
cmp
dec
xchg
movb
icebp
repz
push
cltd
inc
adc
add
xchg
lahf
jb
push
mov
pop
xchg
in
dec
dec
cmp
dec
movb
mov
and
nopl
pop
subl
or
fwait
sub
fisubl
xlat
or
pop
xchg
cmc
in
mov
add
add
ljmp
xor
insb
clc
loopne
jne
fucomp
inc
push
add
mov
sub
enter
repnz
pop
pop
sub
push
test
mov
sbb
stos
jl
aaa
repnz
out
out
and
sbb
push
rorb
pop
xor
xchg
xor
dec
sbb
mov
cmpsb
jmp
fstps
xor
inc
enter
movsb
sub
push
les
filds
jp
add
or
movsl
cmova
sub
es
dec
movsb
mov
pop
les
cmp
sarl
cmp
push
cwtl
pop
pop
popf
mov
mov
lds
fldt
mov
push
ret
push
jmp
pop
mov
scas
push
push
inc
cmp
dec
sub
xchg
adc
adc
bound
adc
hlt
mov
rclb
inc
push
ds
xor
in
divl
lods
jo
mov
pop
rol
insl
mov
mov
mov
mov
dec
inc
adc
enter
xchg
cmpsb
mov
shr
in
insl
je
sbb
pop
mov
ja
sbb
and
xor
stc
pop
insb
sub
imul
popf
rcl
xor
loope
jl
dec
repnz
xchg
sbb
push
jp
cwtl
adc
test
add
and
shll
push
pop
sub
fisttpl
dec
cmp
add
sbb
xor
fildl
add
shlb
push
scas
sub
xchg
shlb
in
stos
mov
gs
mov
jle
adc
aas
enter
mov
adc
adc
cmp
inc
mov
adc
aad
mov
add
das
or
adc
imul
push
ret
mov
jae
pop
jne
ss
and
int
loop
hlt
jns
test
adc
sbb
push
cmc
call
lock
arpl
outsb
fwait
ret
sub
iret
insb
jnp
xor
fwait
nop
xor
ljmp
cmp
mov
in
mov
inc
movsb
dec
lea
ljmp
dec
cmp
or
repnz
cmpsl
inc
cmp
xchg
jns
jp
inc
and
dec
or
pop
hlt
inc
mov
inc
add
stos
daa
add
pop
hlt
pop
loope
add
mov
mov
mov
mov
add
adc
xchg
dec
cmpsb
movsb
mov
and
ljmp
sub
lahf
mov
push
movsb
pop
and
mov
aad
mov
fiaddl
jne
pop
jle
pop
fisubl
mov
cli
pop
and
movsb
fbstp
or
mov
into
xorl
fwait
dec
ficompl
out
movsb
and
push
mov
repnz
scas
test
pop
movsl
dec
lea
push
andl
push
lods
mov
push
pop
cmp
aaa
xchg
mov
leave
scas
mov
push
mov
and
adcb
add
ja
mov
add
sahf
movsb
jnp
dec
sub
stos
jb
cmp
dec
das
sbb
push
xchg
dec
sahf
mov
fs
and
orl
mov
push
in
movsl
cwtl
hlt
inc
mov
push
mov
cltd
pop
cmp
push
mov
xor
insl
and
jns
jns
gs
dec
mov
and
scas
push
mov
mov
and
dec
lods
pop
out
dec
cmp
push
xor
mov
test
and
mov
inc
sub
adc
dec
nop
pop
mov
push
mov
lock
ret
clc
divb
jp
test
inc
lds
dec
mov
inc
push
and
aad
mov
and
fimuls
arpl
mov
stos
dec
pop
sub
pushf
inc
and
fcmovu
mov
xlat
scas
cmp
xorl
jo
bound
xor
jae
jbe
pop
cmpsl
push
notb
mov
jno
cli
jmp
pop
mov
pop
mov
xchg
mov
mov
daa
fldl
pop
cmp
adcb
scas
aas
aad
mov
outsb
movsl
inc
and
dec
nop
pop
lods
push
and
mov
xor
inc
and
lret
pop
xchg
aad
cltd
jne
inc
clc
ja
adc
pop
xor
mov
xor
and
inc
jmp
rorb
xor
pop
cmp
popf
push
lcall
adc
mov
mov
inc
or
cwtl
jl
mov
push
out
dec
movsb
inc
outsb
mov
scas
jp
ja
je
bound
pop
cmpsl
fcmovne
push
mov
jae
push
mov
push
dec
pop
jle
movsb
repz
jno
jbe
inc
push
loope
jnp
ljmp
push
fsubs
inc
daa
setl
cmpsb
dec
or
push
and
sbb
dec
hlt
inc
cmpsl
js
insb
lds
cmp
mov
pop
aaa
adc
jmp
mov
and
push
scas
inc
scas
aas
cmpsl
js
outsl
cmpsl
pop
scas
lods
add
inc
lea
jg
mov
adc
xchg
in
movl
jnp
lahf
stos
push
in
inc
stos
mov
inc
inc
cmpsl
push
test
lret
mov
pop
mov
std
movsb
mov
xor
hlt
cmp
mov
push
cmp
aam
jno
jo
pop
fwait
sub
pop
insb
cs
push
push
xlat
mov
mov
dec
cltd
xor
jle
mov
dec
dec
mov
jp
inc
cmp
jb
jp
mov
adc
icebp
push
adc
push
fwait
les
movsb
push
sbb
xchg
rol
mov
hlt
add
adc
mov
mov
dec
cmc
dec
stos
and
dec
mov
fidivl
imul
lahf
movsb
cmp
xchg
je
movsb
mov
movsl
pop
inc
or
mov
outsl
pop
shll
cmpsl
sbb
xchg
mov
test
and
cwtl
insl
mov
mov
pop
pop
sub
and
lock
pusha
mov
jbe
scas
pop
xor
popa
add
dec
sub
jle
in
pop
jb
inc
cmp
sbb
push
rorl
mov
mov
pop
mov
push
pop
enter
pop
loop
mov
sub
nop
pop
lret
mov
dec
adcl
sarb
cltd
push
xchg
negl
cmp
push
mov
xor
mov
pop
mov
movsb
aas
push
cli
or
pop
mov
mov
mov
das
out
repnz
sbb
mov
jge
ljmp
ds
sub
lea
mov
lea
adc
addr16
mov
push
push
xchg
outsl
cmp
and
mov
hlt
mov
ljmp
pop
rolb
mov
cmp
pop
sbb
pop
mov
push
mov
sub
movsb
cmp
inc
add
mov
in
lds
mov
es
cmpsl
sub
pusha
push
jne
mov
dec
push
setp
inc
daa
dec
push
sbb
mov
mov
lahf
pop
xor
ja
and
inc
test
fsubs
jp
jb
push
dec
inc
mov
add
dec
cwtl
inc
std
mov
leave
mov
sbb
scas
inc
test
outsb
mov
cmp
pop
lret
jo
inc
push
xor
out
mov
out
stc
sub
mov
movsl
bound
adc
push
xchg
and
cwtl
or
addr16
push
adc
mov
xchg
scas
aaa
dec
xor
cmp
jg
xchg
aad
loop
jmp
dec
outsb
push
jecxz
loope
xchg
inc
mov
cld
pop
sbb
aam
mov
add
sbb
and
aas
mov
test
sbb
xchg
adc
add
cmc
xchg
jmp
loope
adc
test
push
mov
dec
mov
divb
imul
dec
sub
adc
aad
int
adcl
jmp
pop
pop
sarl
push
je
push
js
xchg
cmp
dec
dec
pop
in
mov
pop
test
lods
push
lretw
mov
sbb
xor
mov
adc
popf
ss
jmp
adc
push
stc
jp
lock
mov
cmp
out
dec
dec
adc
jb
add
add
ja
xor
inc
mov
loopne
repz
lret
jle,pt
repnz
or
les
or
in
push
movsb
jge
push
cld
loop
xchg
inc
imul
dec
mov
sbb
jle
xor
das
stos
cmp
jg
pop
xchg
jo
std
int3
ds
js
leave
ds
mov
fiadds
xor
add
inc
xor
fists
stc
fildll
mov
in
insb
es
sarl
adc
mov
insl
mov
adc
cmpsb
in
dec
jg
mov
or
push
jl
xchg
pop
mov
inc
push
sahf
pop
jae
push
addl
test
cli
and
pop
mov
lret
movsb
mov
mov
mov
test
cmp
popf
xlat
pop
hlt
sub
rcrb
cwtl
sub
sbb
and
add
jp
dec
push
fldt
mov
movsb
cmp
jno
add
pushf
cmp
movsb
adc
sbb
shl
jbe
mov
mov
stos
add
xchg
xor
push
in
inc
pop
xchg
jp
or
test
rcll
cmp
cmpsl
mov
push
xlat
ljmp
sbbb
and
lods
pop
orb
cmp
mov
pop
xchg
mov
pop
ds
rclb
stc
ss
insb
call
jo
outsl
mov
scas
test
xor
push
stc
jne,pt
pop
push
fmuls
inc
add
or
mov
pop
dec
popl
cmp
mov
arpl
dec
bound
daa
xchg
adc
mov
and
nop
pop
mov
xchg
jb
mov
imul
fmuls
jmp
xchg
xchg
push
mov
adc
or
test
pusha
ja
jmp
fisubs
jl
or
flds
inc
push
jle
psubq
pop
sbb
dec
ja
cmp
call
or
imul
stos
jp
rcll
xor
pop
fwait
pop
dec
jbe
dec
loop
mov
lods
inc
or
pop
dec
or
clc
push
das
cwtl
fnstsw
adc
mov
cwtl
inc
push
push
movsb
mov
add
cmp
push
jno
in
sub
adc
lea
test
out
andl
dec
jns
pop
mov
jno
jge
sbbb
sarl
in
pop
inc
lds
jle
inc
sbb
pop
xchg
add
inc
sub
gs
ds
dec
mov
filds
xchg
xchg
xchg
inc
popf
pop
punpcklwd
fsubrl
jg
jae
sarb
stos
test
mov
movsb
bound
and
dec
sbb
dec
mov
jg
sbb
mov
jbe
pop
add
pop
mov
dec
xchg
cmp
sbb
mov
shll
out
test
cld
stc
pusha
and
inc
mov
pop
jle
mov
adcb
aam
or
stos
inc
sub
scas
pop
sahf
inc
lcall
pop
lcall
inc
loop
pop
mov
ja
pop
hlt
aas
cmpsl
ret
cmp
and
sub
pop
lret
adc
pop
lods
inc
push
sahf
push
pop
cmp
arpl
push
scas
pop
pop
sub
adc
mov
das
xchg
or
lock
rcr
push
dec
sub
mov
jae
div
mov
sub
pop
mov
and
dec
cwtl
and
dec
roll
pop
cmp
in
mov
mov
popa
popa
or
insb
lcall
inc
pushf
inc
push
lods
dec
call
ljmp
xor
daa
fldenv
push
fsts
ds
adc
jecxz
sub
push
mov
daa
push
xor
lods
dec
xchg
push
mov
imul
mov
pop
orl
dec
xchg
jns
cmp
dec
mov
dec
push
dec
mov
mov
mov
or
arpl
xchg
inc
mov
inc
pushf
sbb
mov
icebp
xchg
lds
pop
add
repz
into
andl
insb
inc
repz
subw
dec
adc
push
mov
xchg
and
mov
nop
or
sbb
adc
popa
dec
pop
ljmp
test
add
cwtl
add
je
pop
fwait
pop
push
in
les
or
stos
sbb
je
jb
push
pop
xor
bound
add
gs
and
xchg
sub
sahf
cmp
js
sub
mov
adc
mov
int
and
mov
dec
lea
pushf
jl
sub
jp
cmc
mov
mov
dec
mov
mov
jp
mov
mov
ljmp
jb
ret
push
push
push
cmpsl
scas
push
pushf
movsl
or
jle
scas
push
lods
in
jecxz
in
sub
lea
mov
rcll
adc
add
lcall
test
enter
jne
setp
mov
cmp
and
enter
pop
js
add
cmpsl
fimull
dec
sti
mov
sbb
mov
add
ret
out
mov
mov
cltd
pop
lds
sub
cmove
push
repnz
lea
xor
pop
iret
js
jecxz
and
jb
les
cltd
mov
mov
dec
add
aad
sahf
mov
jno
out
mov
add
sbb
add
imul
inc
or
pop
sahf
pop
pop
mov
xchg
hlt
pop
mov
dec
daa
push
clc
repnz
sub
push
xchg
inc
aad
jb
lds
push
pop
nop
bound
sub
sub
xor
sbb
xor
lea
inc
mov
pop
je
sbb
clc
mov
movsl
mov
cmp
pop
fcoml
lcall
test
push
imul
ficoml
mov
cmp
cmp
or
push
pop
dec
jmp
dec
aad
push
and
xchg
jbe
push
push
test
push
xchg
outsl
inc
mov
scas
sub
imul
stc
sti
xchg
insl
sbb
dec
push
push
xorl
sub
cmp
xchg
ret
movsb
arpl
cli
mov
sahf
push
xchg
add
rcll
jnp
addr16
outsl
push
mov
dec
jmp
xchg
aad
fidivl
and
sbb
enter
inc
lret
sbb
int
or
and
xchg
mov
dec
popa
inc
mov
add
add
add
add
add
add
add
jne
pusha
mov
lea
push
or
jmp
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
popa
xor
ret
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
jmp
repnz
sar
lahf
cmpb
push
jmp
mov
mov
lcall
call
jo
and
add
arpl
ljmp
add
adc
or
add
fstps
add
decb
add
jbe
or
add
call
push
dec
dec
in
dec
jbe
add
xor
pop
addr16
and
cltd
lods
adc
call
fidivs
orb
push
or
pop
jne
jnp
icebp
push
lcall
repz
fsub
mov
popa
xchg
jne
call
and
call
mov
aaa
movsb
or
jmp
push
das
cmp
sbb
jmp
call
pop
shr
add
add
js
mov
cmp
lcall
pop
addl
push
ret
pop
add
subl
push
ret
add
add
movb
xorl
add
pop
subl
push
ret
add
add
movb
cs
ret
test
push
ret
add
pop
subl
push
ret
add
ss
ret
pop
addl
push
ret
add
pop
add
subw
push
ret
add
add
movb
xorl
pop
addl
push
ret
pop
movb
push
ret
