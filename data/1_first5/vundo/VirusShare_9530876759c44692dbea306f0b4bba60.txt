add
in
inc
inc
test
in
push
call
add
dec
vmread
addl
imul
or
shl
out
sbb
mov
and
push
dec
cs
test
lods
xchg
adc
mov
aam
out
mov
jmp
dec
mov
into
mov
inc
mov
es
jp
outsl
in
and
stos
or
cwtl
fstpt
and
or
gs
shll
xchg
and
inc
cmp
loopne
add
mov
and
mov
aam
jbe
adc
arpl
stos
pop
neg
push
or
mov
cmp
aas
add
cld
inc
les
mov
shlb
jle
mov
lock
stc
sub
outsb
pop
fldl
xor
inc
orb
xchg
gs
out
fdivr
sbb
ss
or
jbe
lock
xchg
into
ja
fs
sub
cltd
xor
loop
push
test
inc
add
call
popa
jge
loope
jnp
cld
je
inc
add
jmp
pop
mov
imul
js
mov
pop
mov
xor
or
je
push
push
and
inc
lea
call
pop
push
outsl
mov
addr16
jmp
pop
jmp
aaa
push
int
sub
push
adc
or
or
xchg
sbb
jmp
pop
ret
push
push
test
add
call
dec
jp
inc
add
jmp
fs
pop
xor
call
push
push
test
add
call
add
add
roll
or
and
mov
pop
test
jne
push
clc
sbb
sub
mov
nop
mov
jae
shl
adc
add
pop
pop
ret
push
push
test
add
call
sbbl
lret
or
sub
inc
add
jmp
testb
jle
mov
pop
push
push
clc
mov
add
call
sub
xor
inc
incl
add
jmp
in
and
clc
xchg
jmp
nop
xchg
icebp
out
mov
outsb
jecxz
jmp
push
mov
call
push
push
xor
jne
jmp
fwait
dec
test
movsl
loopne
lea
xor
jne
jp
js
lea
jmp
rcrl
jb
jns
xlat
neg
in
sub
ljmp
push
rol
mov
jp
or
mov
shll
and
add
add
add
ret
mov
pop
xor
push
push
and
add
lea
call
adc
pop
jmp
imul
jecxz
sub
add
jmp
xchg
out
push
push
call
push
clc
sub
mov
nop
mov
jae
rcr
cmp
add
pop
pop
push
push
push
push
sub
add
call
mov
sbb
or
add
jmp
push
mov
loope
mov
shl
push
push
clc
or
sbb
sub
mov
mov
jae
shl
and
add
pop
pop
xor
push
call
push
push
and
add
call
jns
sbb
push
lods
push
add
jmp
adc
leave
add
out
push
mov
push
push
clc
xor
sub
mov
nop
mov
jae
shl
or
add
pop
pop
jmp
pop
jmp
push
push
sub
jne
jmp
nop
jg
sbb
xor
jne
jp
rcrb
sahf
jge
stos
mov
jg
lret
jns
mov
jns
je
jecxz
cmc
jmp
fstpt
jp
and
xor
and
add
add
adc
sub
push
push
clc
add
call
gs
pop
lea
aas
insl
cmp
clc
add
jmp
in
pop
in
sar
add
add
add
and
cld
cmp
jmp
push
push
clc
sbb
xor
ror
add
call
adc
jl
add
cmp
adc
add
jmp
call
clc
xchg
jmp
clc
push
ret
shr
xchg
and
push
cmp
jmp
push
push
push
test
add
lea
call
loope
sub
orb
daa
jp
inc
add
jmp
jno
mov
pop
call
push
push
and
inc
add
call
add
daa
cld
jmp
pop
jmp
out
cli
mov
mov
shlb
dec
mov
and
inc
jmp
pop
jmp
push
push
and
jne
jmp
dec
xlat
cmp
divb
jp
stos
std
lahf
bnd
jmp
push
jb
jns
cmp
xchg
mov
je
scas
and
movl
and
out
jmp
out
add
pop
call
push
push
clc
mov
mov
add
call
sbb
out
pop
pop
das
xchg
clc
add
jmp
push
test
in
idiv
mov
xchg
jmp
aad
iret
arpl
rorl
add
dec
jmp
call
pop
push
clc
sar
add
call
jnp
pop
mov
sub
icebp
inc
out
mov
add
add
jmp
sarb
jae
mov
xchg
jmp
inc
jb
addl
jmp
sub
add
push
push
test
add
call
stos
jp
inc
add
jmp
xchg
xchg
xchg
pop
dec
fbld
cmpl
mov
push
push
and
jne
jmp
test
frstor
jp
popa
dec
ret
test
or
push
mov
in
jns
mov
fistpl
sbb
cmp
ljmp
or
add
pop
add
push
push
xor
jne
jmp
sbb
sbb
mov
adc
mov
jp
mov
jo
jmp
jl
add
subb
cmp
jns
mov
loopne
mov
shll
mov
in
jp
lods
xor
mov
sbb
add
add
sar
add
push
clc
xor
sub
mov
mov
jae
rcr
xor
add
pop
pop
add
mov
push
clc
shr
mov
add
call
jmp
mov
enter
add
rol
add
jmp
mov
outsb
out
dec
sub
clc
adc
ror
xor
xchg
jmp
xor
jg
sub
add
pop
addl
jmp
add
push
push
xor
add
lea
call
jae
add
pop
jmp
or
in
inc
add
jmp
out
mov
mov
out
mov
push
push
push
push
xor
add
call
insl
sahf
jmp
pop
jmp
pop
pop
mov
add
outsb
or
jmp
pop
push
push
push
push
clc
rcl
mov
add
sub
mov
mov
jae
sar
or
add
pop
pop
call
pop
push
push
sub
lea
add
call
push
xchg
jmp
pop
jmp
jg
mov
in
ret
pop
dec
stc
ret
leave
cmp
loop
pop
push
push
push
push
and
add
add
call
and
inc
cmp
int
outsb
jmp
pop
jmp
jmp
mov
or
pop
push
stos
shll
les
ret
push
clc
mov
sub
mov
nop
mov
jae
rcl
test
add
pop
pop
push
mov
add
push
push
and
jne
jmp
cmp
push
xor
sbb
out
xchg
xor
jne
jp
mov
jmp
jecxz
sub
hlt
clc
jns
lahf
jb
jns
shlb
jbe
pop
jns
je
imul
cmpl
jmp
inc
add
lea
pop
add
add
push
push
xor
jne
jmp
mov
insb
inc
xor
jne
jp
loopne
inc
gs
pop
int
xchg
jmp
fcomps
lock
into
sub
gs
or
mov
xchg
or
sbb
xchg
sahf
xor
jge
fdivrs
mov
jp
in
add
into
adc
lods
add
lea
pop
add
mov
push
push
test
add
call
jo
add
ret
add
jmp
iret
cmp
cmp
mov
add
mov
pop
pop
push
push
and
jne
jmp
aam
lods
sbb
and
clc
xor
jne
jp
in
mov
jo
jmp
xchg
mov
enter
jb
push
jb
jns
nop
dec
jns
je
ret
sub
in
jb
fcoml
in
out
insl
dec
inc
lea
pop
push
call
mov
push
push
and
jne
jmp
or
xor
jne
jp
jg
test
jmp
mov
jns
imul
call
jns
je
jmp
cld
das
xchg
mov
jp
lea
add
add
add
pop
xor
push
push
test
add
call
dec
fdivs
movd
inc
add
jmp
jp
mov
jbe
pop
push
push
push
clc
sub
mov
mov
jae
shl
sbb
add
pop
pop
call
add
call
push
clc
rcl
rcl
sub
mov
nop
mov
jae
rol
and
add
pop
pop
pushl
movzbl
pop
push
clc
rol
mov
add
call
loopne
or
pop
and
clc
rcl
or
add
jmp
jl
and
sbb
sub
xchg
jmp
aas
mov
clc
adc
andb
add
jb
repz
int3
sub
push
push
test
add
lea
call
outsl
sbb
shrb
clc
add
inc
add
jmp
pop
adc
idivb
pop
push
push
clc
sub
mov
mov
jae
sar
sub
add
pop
pop
mov
mov
shr
push
push
and
add
call
test
cmpsb
sbb
cs
add
pop
push
stos
mov
pusha
jmp
pop
add
push
mov
push
clc
cmp
add
call
ja
ror
pop
and
add
cmp
sub
ror
add
jmp
cwtl
ljmp
es
jge
ror
xchg
jmp
jno
sahf
cmpsb
mov
xor
addl
jmp
add
inc
add
push
push
test
add
call
jp
jns
mov
dec
iret
jmp
or
jle
inc
add
jmp
lcall
xor
je
pop
and
push
push
sub
jne
jmp
shll
jp
mov
mov
jmp
and
int3
inc
xor
sub
loopne
inc
popa
adc
sbb
jns
je
jl
rorb
idivb
pop
imul
add
push
push
sub
inc
add
call
imul
jmp
roll
mov
add
add
out
call
push
push
and
add
lea
call
outsb
cs
lods
iret
xor
or
enterw
pop
jmp
jno
in
sahf
sub
push
clc
sub
mov
mov
jae
shr
test
add
pop
pop
mov
push
clc
shr
sub
mov
nop
mov
jae
shl
adc
add
pop
pop
push
add
push
push
sub
jne
jmp
lea
shlb
jp
out
ljmp
in
mulb
add
jns
je
dec
add
fstpt
jg
mov
lea
pop
push
push
clc
sub
mov
nop
mov
jae
sar
sbb
add
pop
pop
push
push
push
xor
jne
jmp
sti
sahf
xchg
xor
jne
jp
sbb
jo
jmp
imull
jns
mov
adc
sarb
je
jnp
push
mov
lods
es
jp
arpl
ja
pop
sbb
jno
repnz
add
add
push
call
pop
push
push
and
jne
jmp
fwait
aam
shll
leave
jne
jp
out
xlat
fsubrp
fldcw
jo
jmp
lret
jb
jns
xchg
or
lock
jmp
loopne
adc
pop
je
dec
frstor
fcoms
int3
sub
add
add
pop
pop
push
clc
adc
add
call
lcall
xchg
clc
add
jmp
leave
mov
cmp
mov
add
xchg
jmp
fs
cmc
mov
addl
jmp
mov
push
clc
xor
sub
mov
mov
jae
shl
test
add
pop
pop
add
push
push
clc
sub
mov
mov
jae
rcr
cmp
add
pop
pop
push
push
clc
rol
add
call
or
add
clc
add
jmp
cli
mov
clc
shl
xchg
jmp
sbb
mov
dec
cmp
bound
fldt
jbe
mov
pop
push
clc
sub
mov
nop
mov
jae
shr
add
add
pop
pop
push
push
call
push
push
sub
add
call
and
push
mov
pop
jmp
jecxz
cwtl
sub
add
jmp
pop
dec
mov
push
jecxz
pop
push
push
and
jne
jmp
and
pop
xor
jne
jp
fwait
pop
outsb
ret
fists
xchg
jmp
mov
xchg
iret
js
fiaddl
jb
jns
mov
add
or
dec
jns
je
repz
mov
jp
es
inc
add
add
pop
mov
push
clc
or
sub
mov
mov
jae
shl
test
add
pop
pop
push
push
push
push
test
add
call
sbbb
jle
inc
add
jmp
inc
stc
fcom
loopne
xor
jle
pop
call
add
push
push
test
lea
add
call
mov
push
inc
insb
mov
add
rolb
das
inc
add
pop
addr16
sbb
xor
jp
pop
add
push
push
and
inc
add
call
add
clc
scas
mov
jmp
pop
jmp
push
aad
or
add
jmp
jle
je
jmp
pop
push
push
clc
add
call
mov
ljmp
flds
clc
adc
or
xor
add
jmp
hlt
data16
outsl
pop
clc
add
ror
ror
xchg
jmp
icebp
imul
sahf
xor
mov
and
cltd
lret
cmp
lret
call
push
clc
cmp
sub
mov
nop
mov
jae
shl
adc
add
pop
pop
pop
call
push
push
xor
jne
jmp
movsb
mov
xor
jne
jp
and
jmp
xchg
ljmp
mov
sub
pusha
aad
jns
je
xor
mov
mov
jp
loop
repnz
add
pop
mov
push
push
sub
lea
lea
call
sarb
cmp
pop
jmp
int3
pop
push
jbe
insb
cmc
sbb
int3
add
jmp
in
xor
add
mov
push
push
and
jne
jmp
cmpsl
in
xor
in
add
xor
fdivl
divb
jp
dec
jecxz
in
pop
mov
divb
das
inc
daa
into
jmp
loopne
jmpw
jns
je
insl
pop
push
daa
dec
or
idivb
jp
add
jb
movsb
mov
add
pop
push
push
push
push
push
test
add
call
pop
lea
xor
add
inc
add
jmp
xor
adc
mov
mov
pop
call
mov
add
push
push
test
inc
lea
call
sahf
sub
jbe
ret
lret
stos
fimuls
icebp
xchg
or
inc
add
jmp
push
cmp
jl
sarl
mov
push
clc
sub
rcl
add
call
mov
insb
and
clc
add
add
jmp
pop
inc
repnz
jno
jbe
mov
repnz
add
add
xchg
jmp
add
addl
jmp
add
push
clc
add
rol
add
call
cmp
and
sub
sbb
add
jmp
add
mov
adc
rcr
mov
xchg
jmp
loopne
fnsave
cmc
testl
cmp
push
push
push
test
add
call
push
dec
sub
jae
jle
inc
add
jmp
lret
outsb
popa
jle
daa
fdivr
int
filds
in
push
push
call
push
push
sub
jne
jmp
lods
add
ljmp
dec
jp
ficomps
notl
xchg
mov
cwtl
jmp
pop
repnz
xor
lods
jmp
ds
push
and
adc
loop
bound
jp
mov
mov
and
lea
pop
pop
push
push
and
add
add
call
jno
test
rcl
mov
sbb
jmp
sahf
sahf
pop
lods
fdivr
push
jno
int
rorl
or
dec
addr16
daa
cli
jmp
pop
mov
push
push
clc
add
call
aaa
es
cmp
or
push
xchg
clc
mov
adc
add
jmp
lahf
rol
adc
sub
xchg
jmp
xchg
or
add
test
adc
shr
mov
ret
dec
xor
push
push
sub
jne
jmp
cmp
push
push
fisubs
or
jp
push
mov
ss
adc
and
repz
test
xor
in
jns
nop
pushl
je
jo
adc
push
or
and
mov
xchg
rol
inc
lea
pop
push
push
push
clc
add
call
outsb
test
adcl
das
aad
inc
and
clc
add
jmp
xor
mov
sbb
cmp
add
xchg
jmp
and
fstl
push
mov
inc
cmp
jmp
call
pop
mov
push
push
and
lea
lea
call
mov
bound
jmp
jmp
pop
jmp
or
mov
scas
or
sbb
and
scas
nop
adc
out
pop
pop
push
push
and
jne
jmp
jmp
je
gs
leave
jne
jp
xchg
and
pushf
into
jo
jmp
pop
in
xchg
jns
xchg
loopne
aaa
sbb
xor
hlt
jns
je
iretw
outsb
mov
jp
movsb
scas
popa
ds
add
pop
pop
pop
push
push
sub
lea
add
call
ds
add
lea
rolb
sti
das
dec
jmpw
pop
push
push
clc
ror
shl
mov
sub
mov
nop
mov
jae
rcl
or
add
pop
pop
push
push
clc
add
cmp
add
call
add
push
and
clc
mov
sub
adc
add
jmp
ljmp
push
xchg
jmp
hlt
push
or
insl
jecxz
push
fwait
loop
addl
jmp
push
push
push
push
push
and
jne
jmp
call
pusha
cmp
sbb
xor
jne
jp
mov
nop
shll
jmp
jns
xchg
or
jns
cld
jmp
jns
je
lret
sub
dec
mov
jp
inc
jns
inc
mov
xchg
add
add
pop
ret
push
push
push
and
jne
jmp
jnp
sbb
lcall
mov
adc
jo
jmp
sbb
ljmp
adc
jmp
int
xor
jp
fscale
imul
lea
lea
pop
mov
push
push
and
add
call
dec
xchg
icebp
aam
jmp
pop
jmp
lods
lret
push
popa
stc
stos
orps
add
jmp
dec
rcrl
cmp
jmp
pop
add
push
push
push
push
xor
jne
jmp
movsl
stos
sbb
orb
push
jp
and
outsb
xorl
leave
push
mulb
jb
jns
push
jmp
jbe
cli
jns
je
stc
shrb
xchg
in
cmc
ret
mov
jp
cmpsb
adc
and
jns
inc
roll
les
add
add
shrb
xchg
xabort
lret
add
add
add
call
enter
dec
and
clc
rol
add
jmp
push
nop
insl
pop
xchg
pop
or
clc
cmp
xchg
jmp
lret
in
add
jns
lods
dec
jmp
mov
mov
mov
push
push
test
add
call
dec
je
inc
add
jmp
lret
mov
imul
pop
mov
push
push
test
add
call
fsubp
call
add
jmp
jle
adc
adc
stos
sarb
pop
mov
push
push
test
add
call
jp
cmp
inc
add
jmp
jbe
ljmp
fdivrl
out
mov
push
push
and
add
add
call
xchg
cvtps2pd
add
movsl
aaa
cmp
in
loop
mov
push
push
test
add
call
es
cwtl
jbe
inc
add
jmp
fdivp
std
mov
fnstsw
dec
and
sub
mov
pop
mov
jmp
push
push
and
lea
lea
call
inc
in
add
shr
adc
inc
add
jmp
adc
les
or
sbb
aad
loope
pushl
push
push
test
add
call
js
push
jae
add
out
add
roll
mov
sbb
arpl
pop
popl
push
push
test
add
call
dec
xor
pushl
ret
add
jmp
lcall
das
mov
ds
pop
add
pushl
popl
push
clc
sub
mov
nop
mov
jae
shl
cmp
add
pop
pop
add
push
push
and
jne
jmp
push
es
shll
pusha
xor
jne
jp
int
lds
jo
jmp
jle
pop
dec
jecxz
lahf
push
jb
and
sbb
jmp
movsl
jns
je
in
xchg
cmp
bound
and
add
add
popl
push
push
xor
jne
jmp
sub
aad
shlb
jp
cmp
lcall
jns
mov
mov
cwtl
dec
ja
out
popf
jns
je
and
insl
repz
jae
mov
les
add
pop
add
pushl
push
push
test
add
call
test
sub
in
clc
fdivl
inc
add
jmp
insl
add
cmp
pop
popl
push
clc
sub
mov
mov
jae
rol
adc
add
pop
pop
add
pushl
push
push
xor
add
lea
call
sbb
lods
jmp
pop
jmp
mov
jmp
adc
test
aas
lods
jmp
pop
popl
add
mov
push
push
xor
jne
jmp
sahf
or
adc
add
xchg
divb
jp
mov
popf
mov
fucomp
and
add
or
xchg
xor
iret
xorl
addr16
pop
lret
bound
push
je
cs
test
mov
jp
shll
push
or
fdivs
add
add
add
pop
add
push
push
clc
mov
mov
add
call
les
stos
xor
mov
pop
and
clc
add
jmp
jo
ljmp
outsl
clc
xchg
jmp
xor
pop
sbb
and
jmp
pushl
push
clc
add
sub
mov
nop
mov
jae
rcr
add
add
pop
pop
call
push
push
push
test
add
call
jo
lcall
add
movb
mov
mov
pop
push
call
cmpl
je
push
push
and
add
call
jo
push
jmp
pop
jmp
mov
mov
xchg
jle
jne
test
inc
push
test
out
push
push
call
push
clc
sar
ror
sub
mov
mov
jae
sar
add
add
pop
pop
add
push
push
xor
lea
add
call
xchg
xor
or
cmc
cmp
jmp
pop
jmp
or
mov
mov
xlat
cmp
xor
out
cmpl
je
push
push
test
add
lea
call
fstps
data16
sbb
jbe
cmp
inc
add
jmp
xchg
leave
push
mov
and
jp
pop
pusha
mov
shl
push
push
test
add
add
call
xchg
fidivl
add
roll
add
leave
jbe
pop
push
push
push
push
push
sub
jne
jmp
mov
in
jne
jp
mov
lds
jmp
stos
mov
aad
or
loope
xor
add
mov
push
sbb
fstpl
cmp
roll
cltd
mov
jp
inc
jle
pop
lods
cmp
mov
add
pop
push
call
mov
push
push
xor
add
call
je
jmp
pop
jmp
test
push
mov
mov
sbb
jecxz
push
push
push
and
add
call
xor
jmp
pop
jmp
mov
loope
lea
lds
jmp
mov
test
add
in
push
push
push
and
add
call
push
dec
jmp
pop
jmp
int3
fldcw
add
jmp
shll
push
jmp
pop
call
pushl
call
push
push
xor
jne
jmp
add
xchg
and
xor
jne
jp
push
sarl
int3
mov
jmp
push
or
push
fisttps
loop
cmp
xchg
test
mov
in
scas
lahf
lock
fbld
sarb
add
enter
add
add
pop
mov
sub
push
clc
mov
adc
add
call
pop
aaa
xor
xchg
clc
xor
add
jmp
push
jnp
mov
add
or
add
dec
mov
and
xor
add
and
mov
add
push
push
and
jne
jmp
pusha
xor
pop
adc
mov
mov
andl
loopne
pop
adc
fstpl
out
and
enter
in
xchg
ds
mov
jp
jnp
lea
cwtl
jns
decl
add
pop
push
push
push
push
sub
jne
jmp
je
jmp
adcb
xor
jne
jp
sbb
ja
ja
cld
or
aad
cltd
jmp
fs
jns
jns
dec
test
jmp
push
adc
mov
jp
ss
xor
in
sti
and
cmc
add
add
pop
pushl
push
push
test
lea
add
call
mov
je
inc
add
jmp
movsl
mov
pop
call
push
push
clc
sar
or
sub
mov
mov
jae
rol
and
add
pop
pop
push
push
call
push
push
test
add
add
call
jae
and
push
lock
popf
jl
add
ret
add
jmp
lret
sbb
mov
xor
jp
pop
popa
mov
push
push
and
jne
jmp
in
xor
jne
jp
daa
ljmp
ja
sbb
pop
gs
movsb
jb
jns
pop
push
bound
jb
ret
mov
jp
aaa
pop
pop
clc
scas
jge
xchg
xor
inc
add
pop
add
pushl
push
clc
mov
cmp
sar
sub
mov
nop
mov
jae
ror
cmp
add
pop
pop
pushl
push
push
clc
sub
shl
add
call
jge
ror
in
mov
clc
shl
mov
cmp
add
jmp
mov
sub
ja
clc
or
sub
xchg
jmp
jbe
mov
adc
cmp
jmp
call
add
decl
push
push
and
jne
jmp
xchg
push
mov
xor
jne
jp
testb
into
fucom
rol
jo
jmp
dec
in
pop
and
jb
jns
js
mov
scas
dec
in
push
jns
je
mov
iret
lret
xchg
js
mov
jp
dec
stos
xchg
cwtl
push
dec
add
pop
mov
or
jne
push
clc
or
sbb
add
call
push
cmpsl
lods
xchg
clc
sar
mov
add
jmp
pop
scas
or
mov
ret
add
jecxz
xchg
jmp
shl
in
lcall
out
addl
jmp
pop
push
push
and
jne
jmp
test
rorl
in
jne
jp
xor
mov
xor
or
xor
mov
and
je
sub
push
lods
dec
stc
test
mov
jp
pop
mov
repz
in
cltd
add
add
pop
pop
push
push
xor
add
lea
call
pop
rcrl
jmp
pop
jmp
inc
jge
adc
pop
jmp
add
ret
jmp
pop
leave
ret
push
clc
adc
shl
sub
mov
nop
mov
jae
sar
test
add
pop
pop
push
mov
push
clc
add
sub
add
call
test
inc
xor
loope
je
add
sub
shl
add
jmp
push
or
addr16
rcr
xchg
jmp
mov
orl
jnp
pop
ljmp
mov
push
clc
add
call
mov
xlat
popl
and
clc
ror
sbb
add
jmp
inc
or
ror
mov
xchg
jmp
adc
shlb
push
adc
ss
or
in
test
aam
push
clc
add
call
sahf
test
lret
testl
mov
nop
out
lds
add
or
add
jne
lock
stos
icebp
xor
jge
inc
cmp
xlat
add
not
and
push
clc
mov
mov
sar
sub
mov
nop
mov
jae
shr
test
add
pop
pop
pop
leave
push
push
and
add
call
and
xlat
addb
push
bound
add
jmp
xchg
cwtl
jns
imul
mov
jmp
pop
ret
push
push
xor
jne
jmp
mov
shlb
xor
jne
jp
mov
jmp
add
jb
out
dec
adc
ja
cmp
push
xchg
pop
adc
sbb
xchg
and
pusha
decb
mov
jp
sbb
iret
push
call
xchg
lods
add
pop
push
push
push
and
inc
add
call
repz
xchg
mov
jmp
pop
jmp
lea
lods
or
add
jmp
movsl
sbb
notrack
pop
mov
add
push
push
clc
sub
mov
sub
mov
nop
mov
jae
rcr
sbb
add
pop
pop
push
push
push
clc
sub
sub
mov
mov
jae
rol
adc
add
pop
pop
mov
push
push
and
add
call
pop
rcll
mulps
add
add
jmp
jno
inc
dec
jmp
pop
mov
add
push
push
test
add
lea
call
scas
jecxz
xchg
aas
or
in
add
ret
add
jmp
fldt
push
mov
mov
pop
mov
push
clc
add
call
push
or
pushw
pop
and
clc
or
cmp
add
jmp
pop
mov
lods
stos
cmpsl
clc
xchg
jmp
add
movl
test
je
add
push
push
test
add
lea
call
cmp
stos
pop
or
inc
add
jmp
fdivrs
pop
mov
push
push
test
add
call
inc
lea
inc
add
jmp
testb
popa
arpl
pop
push
push
push
clc
rol
sub
mov
mov
jae
shl
test
add
pop
pop
mov
xor
push
push
xor
jne
jmp
adc
shlb
shlb
jp
dec
cmp
stos
cmp
jle
push
leave
std
movsl
pop
sbb
jns
jp
in
push
rcll
jns
je
je
enter
mov
fstpt
out
adc
or
pop
add
lea
pop
pushl
call
call
push
clc
sub
mov
mov
jae
rol
cmp
add
pop
pop
test
jne
push
push
push
and
add
add
call
imul
or
add
popf
inc
aad
mov
add
ret
and
dec
jno
jecxz
lea
add
call
jecxz
adc
add
or
movb
lds
jecxz
mov
push
push
sub
add
call
mov
pop
jmp
cmp
xchg
lret
leave
sub
sub
xlat
pop
or
out
xor
pushl
call
push
clc
shl
mov
sub
mov
nop
mov
jae
rcr
xor
add
pop
pop
call
mov
push
push
and
lea
lea
call
mov
jmp
dec
pop
add
jmp
mov
jecxz
movl
push
push
test
add
call
cli
scas
cmp
pusha
and
push
push
and
add
rolb
outsb
inc
dec
mov
pop
mov
push
clc
cmp
add
call
mov
sbb
and
clc
mov
cmp
cmp
add
jmp
push
xlat
or
inc
sahf
dec
clc
sar
xchg
jmp
ffree
fadds
dec
jge
addl
jmp
mov
test
jne
mov
push
push
xor
lea
add
call
adc
sbb
push
sbb
sarl
add
or
xchg
push
mov
ret
loope
add
add
mov
push
push
test
add
call
iret
cmp
add
ret
add
jmp
inc
jecxz
xchg
aad
and
xor
mov
sub
je
pop
mov
push
clc
add
sub
mov
nop
mov
jae
shl
adc
add
pop
pop
add
push
clc
add
call
jne
dec
aas
xor
dec
and
clc
add
jmp
popf
in
pop
dec
or
aaa
loope
sub
sar
or
or
xchg
jmp
pop
pushf
movsb
push
loope
mov
and
mov
add
test
je
push
push
test
add
add
call
cmp
rclb
adc
jp
inc
add
jmp
mov
sub
push
mov
pop
test
jne
push
push
test
add
lea
call
dec
lret
shll
add
ret
add
jmp
pop
cmpsb
sub
xor
jle
pop
add
push
clc
cmp
sub
mov
mov
jae
sar
cmp
add
pop
pop
inc
push
clc
add
call
sbb
test
xchg
clc
add
jmp
mov
cmp
xchg
jmp
mov
adc
jmp
and
cmp
stos
jmp
inc
push
and
push
push
test
inc
lea
call
xlat
insb
sub
movb
mov
lahf
stos
xor
xor
sbb
pop
push
pushl
push
push
push
test
add
lea
call
mov
mov
add
jmp
xchg
push
cmp
andb
inc
jne
mov
pop
mov
push
push
and
add
call
push
jmp
pop
jmp
jecxz
data16
scas
add
jmp
loope
lea
loopne
xor
pushl
push
clc
sub
mov
nop
mov
jae
shl
and
add
pop
pop
call
push
push
and
jne
jmp
mov
in
out
or
jp
je
insb
iret
fwait
mov
jbe
add
jp
ffreep
cmp
jns
scas
mov
jns
je
cmp
xchg
mov
jp
lds
dec
call
add
add
lea
pop
call
push
clc
sbb
sub
mov
nop
mov
jae
rcl
sbb
add
pop
pop
pop
push
push
test
add
lea
call
mov
jbe
inc
add
jmp
sarb
push
dec
sarl
dec
je
push
scas
mov
pop
test
jne
push
push
sub
jne
jmp
dec
push
pop
mov
xor
jne
jp
fs
cmp
jo
jmp
mov
in
jb
jns
xchg
mov
mov
je
and
call
les
test
jne
push
clc
mov
mov
add
call
scas
inc
imul
add
add
jmp
jge
cmpsb
mov
clc
sub
xchg
jmp
rcll
in
or
add
cmp
movsl
jmp
xor
push
push
and
inc
add
call
sbb
lcall
mov
movb
pop
cmp
jmp
jmp
pop
and
push
clc
sub
mov
mov
jae
sar
and
add
pop
pop
mov
cmp
jne
push
push
push
and
add
call
xor
inc
cmp
mov
sbb
or
in
pop
jmp
rorb
pop
cmp
sub
mov
mov
dec
push
push
test
add
lea
call
add
insl
adc
sub
jle
adc
jbe
inc
add
jmp
add
cmp
cmp
inc
das
and
xor
jle
pop
shl
push
push
and
add
call
shl
icebp
test
sti
pusha
mov
sbb
or
mov
adc
rorl
push
add
adc
in
jmp
pop
mov
push
clc
add
call
mov
push
fbstp
iret
popa
sbb
xchg
clc
sbb
adc
add
jmp
call
fs
sbb
or
xchg
jmp
es
mov
mov
gs
adc
int
jnp
push
push
and
jne
jmp
or
jmp
sarl
jne
jp
stos
testb
mov
push
and
sbb
sub
or
jl
lret
adc
sbb
int
jmp
dec
mov
jp
stc
mov
lods
imul
les
add
add
mov
add
mov
push
push
test
add
call
imul
les
or
leave
pop
cmpsl
mov
sub
jbe
pop
add
pop
jmp
push
clc
add
call
xchg
fs
push
test
add
add
jmp
add
mov
lods
clc
ror
xchg
jmp
fisubrl
add
jecxz
cwtl
das
addl
jmp
xor
push
push
xor
add
call
cmpsl
insl
fucomi
sbb
push
int3
add
xchg
aas
xor
movb
or
pushf
rclb
idiv
out
pop
push
clc
sub
mov
mov
jae
shl
sub
add
pop
pop
pop
pop
push
push
test
add
call
jb
jge
ret
mov
les
inc
add
jmp
movsl
imul
shll
jmp
mov
jp
pop
leave
ret
push
push
and
jne
jmp
push
icebp
xchg
mov
jp
add
sbb
enter
jecxz
jb
jns
vphadddq
out
outsl
and
or
push
push
push
les
add
pop
push
push
push
and
jne
jmp
jbe
frstor
lock
xor
jne
jp
insl
push
push
jo
jmp
repnz
xorl
mov
in
rol
jge
jbe
jns
je
fcompl
inc
mov
jp
addr16
in
out
mov
add
add
inc
hlt
push
push
push
test
add
call
rol
adc
in
enter
jbe
inc
add
jmp
xchg
push
in
aaa
mov
lahf
repnz
or
scas
mov
xor
jle
pop
push
push
push
push
xor
add
call
arpl
or
stos
sbbb
rolb
add
inc
jmp
pop
push
call
pop
push
clc
sbb
ror
add
call
int
cmp
xchg
clc
or
sar
add
jmp
mov
clc
xchg
jmp
xchg
mov
jae
jle
add
xchg
and
mov
push
clc
mov
add
call
jo
and
and
clc
shl
mov
adc
add
jmp
jbe
addr16
ret
clc
xchg
jmp
mov
sahf
addl
jmp
sub
push
clc
cmp
sub
add
call
dec
in
sub
xchg
clc
mov
mov
add
jmp
lret
insl
test
and
jmp
dec
ds
mov
add
insl
fldcw
sub
lea
push
push
test
add
call
cmp
idivb
into
jbe
inc
add
jmp
jp
clc
lret
adc
nop
mov
dec
mov
pop
push
push
push
xor
jne
jmp
jo
sahf
jnp
mov
jp
popw
decb
push
aaa
jo
jmp
xchg
pop
mul
or
loopne
aas
pop
adc
xorl
adc
jns
in
scas
adc
popf
fdivrs
pop
jb
pop
lea
lea
pop
pushl
push
push
and
lea
add
call
daa
ljmp
sub
pop
jmp
fistl
pop
mov
mov
jmp
pop
push
push
push
test
add
call
jl
stos
mov
stos
pop
dec
lea
dec
jle
inc
add
jmp
dec
mov
mov
mov
in
push
push
push
sub
lea
add
call
inc
test
faddl
dec
cmpsl
jmp
pop
jmp
outsl
adc
push
movsb
jno
sub
add
jmp
in
outsl
sub
cmp
jecxz
call
add
push
push
test
add
call
push
cmpb
mov
loope
jle
inc
add
jmp
iret
adc
sarl
pop
addl
jmp
add
push
push
and
jne
jmp
test
das
push
adc
jne
jp
cmpsl
movsb
xchg
jmp
bound
aam
pop
xchg
mov
call
adc
sahf
lds
jne
jge
mov
jp
sbb
add
pop
mov
push
push
and
jne
jmp
xchg
xor
jne
jp
adc
int3
test
pop
rcrl
push
mov
jb
jns
sub
and
jns
je
repnz
pop
fisubrs
sarb
and
cmp
xchg
lea
pop
jmp
pop
pop
push
clc
rcr
shl
sub
mov
nop
mov
jae
shr
and
add
pop
pop
pop
push
push
and
add
lea
call
imul
jbe
jne
mov
jmp
add
dec
xor
loop
leave
ret
push
push
sub
jne
jmp
cltd
mov
xor
jne
jp
mov
jmp
add
cmc
and
jb
jns
xchg
cmp
cmp
and
mov
out
imul
adc
cmp
mov
out
outsb
add
pop
push
mov
call
push
push
test
lea
add
call
push
mov
pop
pusha
loope
push
ret
inc
inc
mov
add
movl
jle
pop
mov
push
push
sub
inc
lea
call
lods
mov
jmp
pop
jmp
push
popf
test
jbe
ds
jmp
imul
movsb
call
loopne
xor
push
push
xor
add
call
add
cld
cwtl
xorl
loope
ret
or
aam
lret
sti
ja
loop
push
push
push
xor
jne
jmp
ffreep
inc
xor
jne
jp
ret
ja
movsb
insl
and
fmuls
and
or
jb
jns
sub
xchg
leave
leave
into
jns
je
sbb
mov
add
sbb
in
arpl
sub
add
xchg
arpl
les
add
pop
push
call
pushl
push
clc
sub
mov
mov
jae
rcr
add
add
pop
pop
pushl
push
clc
add
call
xchg
in
inc
xchg
clc
add
jmp
clc
xor
test
ret
add
xchg
jmp
xchg
insb
sbb
insl
and
inc
bound
jl
jmp
pushl
pushl
push
push
xor
jne
jmp
mov
mov
jns
xor
jne
jp
sub
loop
mov
jo
jmp
inc
ret
add
outsb
das
inc
call
jns
push
push
mov
push
je
rcrl
jmp
lea
lea
pop
call
push
push
xor
jne
jmp
shld
addb
jp
mov
adc
dec
ja
add
imul
cltd
idivl
jb
jns
dec
js
out
mov
repz
pop
insb
jge
adc
mov
out
and
mov
inc
es
imul
add
pop
leave
ret
push
clc
mov
rcr
or
add
call
xchg
cmp
add
xchg
clc
adc
shl
add
jmp
pop
pusha
inc
xorb
dec
cmc
xchg
mov
rcr
xchg
jmp
fucomp
jbe
pop
xor
mov
movsl
cmp
mov
iret
push
mov
push
clc
cmp
sub
mov
mov
jae
shl
sbb
add
pop
pop
call
push
push
and
add
call
push
daa
es
pop
jmp
xchg
mov
ds
add
jmp
cld
mov
inc
and
pop
push
push
push
test
lea
add
call
in
sub
bound
jle
inc
add
jmp
ljmp
mov
pop
mov
xor
push
clc
rcr
add
call
xchg
mov
sub
adc
add
jmp
inc
push
cmp
adc
xor
xchg
jmp
push
out
adc
dec
jp
push
ret
addl
jmp
push
push
push
test
add
call
repz
push
or
int
pusha
xchg
js
add
lds
xor
sar
into
rcrl
and
aam
lds
mov
pop
push
call
push
push
test
add
call
xchg
cs
add
in
xchg
mov
add
movb
adc
xorl
ljmp
pop
pushl
push
clc
sub
xor
mov
sub
mov
nop
mov
jae
sar
adc
add
pop
pop
pushl
push
push
test
lea
add
call
push
int
out
pop
inc
xor
pop
movsl
jp
inc
add
jmp
cmp
push
xchg
rol
mov
pop
pushl
push
clc
xor
adc
sub
mov
mov
jae
rcl
sbb
add
pop
pop
pushl
call
leave
push
clc
sub
mov
nop
mov
jae
ror
sbb
add
pop
pop
ret
push
push
push
and
add
call
inc
adc
xchg
ljmp
pop
jle
lds
or
add
clc
jmp
pop
mov
push
push
and
jne
jmp
test
cli
aaa
xor
jne
jp
push
nop
in
mov
add
jo
jmp
add
pop
dec
sub
jb
jns
loopne
push
sub
ret
jns
je
or
stos
cli
cmp
in
jp
dec
add
add
add
pop
call
push
clc
mov
shl
add
call
mov
jle
int
fldl
or
sbb
add
jmp
roll
test
inc
and
hlt
add
add
cmp
xchg
jmp
jge
or
and
cmp
mov
xor
push
push
clc
shr
add
call
cli
addr16
leave
cmpsb
xchg
pop
xchg
clc
mov
add
jmp
cmp
into
xor
clc
xchg
jmp
inc
cmp
add
xchg
mov
test
popa
inc
add
pushl
push
clc
sbb
add
call
stc
mulb
xchg
clc
add
shl
cmp
add
jmp
add
xchg
divb
and
add
xchg
jmp
adc
push
xchg
ret
addl
jmp
pushl
pushl
call
push
clc
add
call
push
data16
ret
and
clc
ror
add
jmp
ljmp
pop
and
jmp
xor
addl
jmp
leave
ret
push
push
push
sub
add
call
fmuls
negb
adc
add
loopne
rorl
push
xchg
jmp
pop
mov
push
clc
add
sbb
add
add
call
popa
rcr
adc
inc
jle
pop
loope
outsl
xchg
clc
add
jmp
loope
xchg
arpl
out
mov
or
fprem
xchg
jmp
mov
pushf
xor
enter
rclb
fistpll
xlat
add
push
push
clc
rcl
sub
mov
mov
jae
ror
and
add
pop
pop
mov
push
clc
add
call
inc
ret
cltd
sub
or
insl
sbb
clc
add
jmp
inc
mov
xchg
jmp
pop
lock
je
sbb
out
xor
cmpl
add
push
push
xor
jne
jmp
fimuls
pop
mov
jne
jp
pop
movb
scas
stc
sahf
xorb
and
insb
pop
addr16
mov
xchg
jb
jns
dec
sti
jne
and
inc
jns
je
sub
and
xor
stc
arpl
add
add
pop
push
push
clc
mov
sub
mov
nop
mov
jae
shl
sub
add
pop
pop
push
lea
push
push
test
lea
lea
call
push
cmc
mov
add
jmp
jle
xor
jp
pop
push
push
push
clc
add
call
mov
arpl
das
pusha
push
xor
xchg
xacquire
clc
add
jmp
push
leave
sub
xchg
jmp
aas
loop
sub
stc
cmp
jecxz
add
add
sub
mov
mov
jae
rol
sub
add
pop
pop
pushl
push
push
test
add
call
iret
adc
lock
gs
fmulp
cmp
add
roll
and
or
mov
pop
call
push
push
and
jne
jmp
out
pop
ja
scas
cmpsb
cmc
movsl
xor
jne
jp
ljmp
jo
jmp
mov
in
xchg
cmp
jb
jns
pop
or
adc
in
ja
pop
loope
idivb
xor
les
nop
add
pop
pop
push
push
test
lea
add
call
cmpsb
cwtl
aad
fcmovnbe
bound
add
jmp
add
jle
mov
jo
lea
fstpt
pop
pop
push
push
test
inc
lea
call
mov
test
or
std
imul
add
jmp
movsb
push
fs
ret
enter
pop
mov
pop
push
push
push
and
jne
jmp
dec
popa
mov
pushl
jp
lds
rcrb
popf
jo
jmp
mov
push
xchg
jns
pop
lods
push
test
clc
mov
jns
je
das
aam
nop
or
mov
mov
jp
fs
add
and
lea
pop
push
push
call
push
clc
shr
ror
adc
add
call
data16
xchg
clc
rcl
add
mov
add
jmp
or
stc
mov
clc
sub
cmp
xchg
jmp
xchg
int
shrl
out
add
lcall
movl
adc
dec
and
call
sarl
fsubrs
inc
add
jmp
ret
cmp
dec
xchg
mov
xchg
mov
pop
pop
leave
ret
push
push
test
add
add
call
daa
fwait
je
inc
add
jmp
and
jb
scas
mov
sub
jbe
pop
push
mov
push
push
test
inc
add
call
jne
rolb
jle
inc
add
jmp
jae
mov
sbb
inc
mov
pop
push
push
clc
sub
mov
nop
mov
jae
rcr
or
add
pop
pop
push
push
clc
cmp
adc
sub
mov
nop
mov
jae
sar
cmp
add
pop
pop
push
push
push
test
inc
lea
call
lods
movsl
xchg
stc
dec
inc
xor
sbb
add
jmp
mov
add
je
pop
mov
mov
xor
push
push
xor
jne
jmp
or
aaa
jne
xrelease
in
jne
jp
adc
scas
inc
dec
divb
xor
jmp
dec
add
jl
and
xchg
jns
mov
out
sbb
cwtl
dec
dec
mov
jp
jl
ret
cwtl
fucomi
sbb
add
pop
test
jbe
push
clc
add
call
loope
xchg
sub
incl
sbb
xor
sub
add
jmp
and
sarb
dec
mov
cld
add
out
add
add
add
mov
add
mov
mov
pop
or
xchg
push
sub
add
call
push
cwtl
jecxz
dec
shll
into
sub
adc
add
ds
jmp
int
xor
loop
add
push
clc
add
call
mov
push
sub
mov
clc
mov
mov
add
jmp
xchg
mov
sbb
cmp
xchg
jmp
mov
push
or
xchg
add
in
mov
add
add
push
clc
add
call
pop
xor
scas
xchg
clc
sar
xor
add
jmp
movsl
sbb
clc
rcl
xchg
jmp
into
movsb
pop
jns
pop
jo
addl
jmp
cmp
jb
pop
push
push
test
add
call
xor
loope
jp
inc
add
jmp
loopne
xchg
cmp
cmp
add
nop
gs
mov
xor
je
pop
pop
push
push
xor
add
call
mov
sbb
add
or
add
jmp
loope
mov
jns
dec
jmp
pop
pop
leave
push
push
and
add
add
call
andps
pop
jmp
adc
xchg
shrl
shl
add
jmp
rcl
sbb
les
out
enter
ret
push
push
test
add
call
mov
xchg
mov
mov
add
jmp
sarl
imul
call
fidivrl
jbe
incl
add
add
add
add
cmp
adc
add
out
movl
iret
xor
mov
push
push
test
add
add
call
or
movsl
scas
jbe
jle
inc
add
jmp
insl
sti
push
lret
sbb
xor
mov
pop
push
mov
push
clc
adc
or
sub
mov
nop
mov
jae
rcr
adc
add
pop
pop
add
push
push
and
jne
jmp
jge
sbb
mov
in
jne
jp
pop
imul
pop
add
cmp
sahf
inc
daa
jb
jns
mov
xchg
je
inc
outsl
fdivp
inc
xchg
mov
jp
inc
sahf
pushf
ja
gs
adc
mov
pop
push
push
test
lea
lea
call
push
cmpsl
lods
xor
pop
jle
inc
add
jmp
rcrl
clc
xchg
repnz
jle
pop
leave
ret
push
clc
rol
add
call
data16
mov
add
add
jmp
ret
scas
clc
xchg
jmp
clc
sbb
scas
inc
addl
jmp
push
mov
push
push
push
and
jne
jmp
ret
xchg
mov
insl
xor
jne
jp
ljmp
jo
jmp
jno
cmc
pop
xchg
dec
test
ja
jb
jns
inc
mov
out
jnp
sahf
push
or
mov
jp
sbb
mov
push
push
test
add
lea
call
mull
add
jle
shlb
adc
stc
punpckhbw
add
ret
add
jmp
stos
popa
mov
mov
pop
mov
mov
push
push
and
jne
jmp
push
xchg
jnp
add
leave
jne
jp
mov
out
add
push
aad
jb
jns
lods
sub
adc
out
add
mov
cmp
loope
mov
les
mov
push
clc
sub
mov
add
call
dec
pop
adc
or
insl
mov
clc
add
jmp
inc
xchg
test
xchg
jmp
push
daa
sbb
push
cmp
jmp
mov
push
push
and
add
call
sahf
test
pop
jmp
push
add
jmp
enter
sti
xor
jmp
pop
jmp
mov
push
push
and
add
call
dec
xor
in
xchg
out
std
jmp
pop
jmp
sub
mov
jbe
ret
or
add
push
jmp
pop
cmp
jne
push
clc
rcl
add
call
std
dec
ja
and
movsl
in
xchg
clc
shr
xor
add
jmp
lret
xor
sub
xchg
jmp
clc
popf
test
addl
jmp
mov
push
push
and
add
call
repz
sub
mov
adc
shrl
pop
or
scas
aaa
add
jmp
hlt
jmp
pop
mov
pop
pop
push
push
test
add
call
sahf
scas
sbbb
les
or
nop
or
xor
mov
pop
leave
push
push
and
jne
jmp
iret
push
push
lds
push
xor
jne
jp
pop
pop
and
push
cli
jo
jmp
xchg
jb
cmp
add
and
cmp
jb
jns
mov
adc
jg
es
je
xchg
mov
jmp
les
ret
push
push
test
add
call
lds
add
rolb
outsb
notl
mov
pop
push
mov
push
push
test
add
call
and
cmc
xor
cmp
outsb
shlb
movl
popf
stos
cwtl
cmpsl
mov
pop
add
push
push
xor
add
call
ljmp
mov
jmp
mov
jmp
jbe
ja
jecxz
push
push
push
and
add
call
dec
jl
addr16
outsb
xor
jmp
jnp
fcmovb
movsb
loopne
or
jne
mov
jmp
pop
push
push
call
push
push
test
lea
add
call
mov
lods
frstor
mov
or
rolb
shl
xor
aam
jg
add
xchg
sarb
mov
push
push
sub
jne
jmp
out
sub
cmp
add
pop
and
jp
mov
inc
imul
jo
jmp
mov
push
pop
jmp
jb
jns
fisubrl
sbb
lock
inc
mov
jp
sbb
les
xor
push
push
and
add
add
call
mov
adc
add
ret
add
pop
filds
jbe
jecxz
push
push
call
push
push
and
add
add
call
dec
cltd
fldpi
adc
add
add
push
push
mov
pop
mov
push
clc
cmp
add
call
scas
add
adc
pop
and
clc
or
add
jmp
addr16
jnp
lret
cmc
decb
pop
and
jmp
adc
xlat
movsl
orl
mov
xor
push
clc
sub
mov
nop
mov
jae
rol
xor
add
pop
pop
mov
test
je
push
clc
add
call
scas
mov
add
add
xor
add
jmp
mov
arpl
in
adc
clc
xchg
jmp
sarb
addl
jmp
or
test
je
push
clc
rol
sub
mov
mov
jae
shr
xor
add
pop
pop
or
push
push
test
lea
add
call
cld
aaa
mov
je
inc
add
jmp
inc
push
mov
pop
test
je
push
push
xor
lea
add
call
adc
pop
jmp
mov
gs
jmp
push
mov
loop
or
cmp
jne
mov
push
push
test
inc
lea
call
or
jge
cltd
mov
add
rolb
lret
sub
je
pop
jmp
cmp
jne
mov
push
push
and
jne
jmp
and
jge
sbb
jle
xor
xor
jne
jp
push
cmpb
jge
loop
sbb
lds
pop
jns
loopne
and
jmp
pop
mov
jp
sub
add
jmp
push
push
and
add
call
ljmp
jmp
pop
jmp
imul
adc
add
jmp
or
add
or
mov
jmp
pop
cmp
jne
push
push
and
jne
jmp
push
pushf
mov
in
jne
jp
popa
lods
das
pushf
mov
mov
mov
push
pop
shl
aam
into
js
sub
movsl
lods
mov
stos
es
je
test
popf
mov
jp
daa
out
push
in
dec
jmp
pop
mov
push
push
xor
lea
add
call
cmp
sarl
jmp
pop
jmp
or
add
jmp
jecxz
scas
ret
gs
lea
pop
jmp
push
push
sub
add
call
adc
jmp
pop
jmp
and
imul
ret
add
loop
cmp
jne
push
push
and
jne
jmp
pop
ficoms
js
mov
jne
jp
ljmp
sub
jo
jmp
pop
push
ljmp
jmp
sbb
int
dec
out
int
leave
jp
sub
pop
push
cmp
adc
add
pop
mov
jmp
push
clc
or
add
call
nop
outsb
mov
push
and
clc
mov
add
jmp
xor
popa
inc
or
add
leave
rcr
xchg
jmp
cmpsb
inc
in
add
pop
and
cmp
xlat
cmp
jne
mov
sub
push
push
test
add
call
jle
mov
inc
adcb
les
cmovnp
mov
clc
dec
cmp
pushl
pop
lea
push
push
sub
jne
jmp
inc
mov
jp
dec
cmp
pop
jmp
loope
jmp
icebp
jl
add
jns
jne
lods
movb
sbb
jmp
xchg
lods
adc
in
in
test
sbb
add
push
clc
or
sub
mov
nop
mov
jae
rcl
adc
add
pop
pop
push
pushl
pushl
push
clc
mov
add
call
pop
ret
xchg
clc
add
jmp
mov
adc
and
jmp
out
cltd
push
ds
lods
push
and
mov
imul
call
push
clc
mov
sub
mov
mov
jae
sar
cmp
add
pop
pop
add
push
clc
add
add
call
into
mov
dec
and
clc
shr
cmp
sbb
add
jmp
xor
fiaddl
clc
xchg
jmp
ss
and
subl
movsb
xchg
cmp
fistpl
clc
or
add
sub
mov
nop
mov
jae
ror
add
add
pop
pop
pop
push
push
test
add
call
mov
inc
add
jmp
adc
pop
pop
push
push
test
add
call
or
out
jbe
inc
add
jmp
jge
nop
inc
ja
cmpb
leave
ret
push
push
xor
lea
add
call
into
or
jmp
pop
jmp
repnz
jmp
mov
jmp
pop
push
push
clc
add
call
mov
aaa
add
cmp
add
or
add
jmp
or
mov
add
xchg
jmp
inc
mov
cmp
mov
lret
insl
jmp
mov
push
clc
add
call
push
stos
sbb
mov
dec
xchg
clc
rcr
ror
add
jmp
mov
pop
popa
clc
mov
xchg
jmp
inc
les
and
mov
sbb
fstl
push
sub
add
add
call
insl
divb
aam
jmp
pop
jmp
ljmp
add
jmp
pop
push
push
push
sub
add
call
insb
aaa
inc
xchg
adc
out
fidivs
cltd
in
add
jmp
sbb
xchg
jmp
pop
push
xor
mov
push
push
sub
add
lea
call
or
pop
pop
jmp
cld
pop
xchg
enter
jmp
add
jmp
xor
pop
mov
rep
pop
push
clc
sub
mov
nop
mov
jae
sar
sub
add
pop
pop
pop
pop
leave
push
push
test
add
call
pop
inc
xchg
xorl
ret
add
jmp
add
rorb
jo
or
mov
mov
pop
ret
push
mov
push
clc
add
call
jbe
cmp
add
add
jmp
sbb
dec
sbb
shr
shl
xchg
jmp
shrb
add
sub
inc
ds
jmp
push
push
push
and
add
call
sbb
mov
nop
scas
sahf
lahf
mov
add
or
add
or
out
push
push
clc
ror
sub
mov
nop
mov
jae
rcl
adc
add
pop
pop
push
call
push
push
and
jne
jmp
inc
testb
mov
shlb
and
jo
add
test
scas
lret
jmp
add
cwtl
jns
pop
push
data16
sbb
je
mov
dec
sub
mov
jp
pop
mov
mov
js
in
mov
mov
xor
push
push
clc
mov
add
call
xor
int
shll
add
mov
mov
add
jmp
fs
je
xlat
fildl
xchg
jmp
cwtl
mov
and
loope
cmp
fsts
mov
add
mov
push
clc
sub
mov
nop
mov
jae
rcl
adc
add
pop
pop
xor
push
clc
sbb
mov
add
call
pop
cmpl
add
add
out
add
add
dec
bound
adc
sbb
clc
shr
rol
xchg
jmp
sbb
xchg
adc
push
les
sar
int
jne
add
add
push
clc
adc
add
call
adc
mov
inc
and
clc
add
jmp
pop
outsb
dec
rolb
inc
pusha
jb
or
mov
xchg
jmp
and
pop
cmp
movsb
cmp
rolb
repnz
push
push
sub
add
call
push
sbbl
adc
add
jmp
sub
mov
ljmp
loopne
mov
add
push
push
sub
jne
jmp
dec
push
sbb
or
xor
xor
jne
jp
mov
insb
mov
shr
and
sbb
into
shlb
sub
jb
jns
dec
push
adc
push
mov
jns
je
dec
loop
dec
mov
jp
inc
adc
cvtpi2ps
add
push
clc
add
adc
add
call
out
mov
and
clc
or
mov
add
jmp
dec
push
mov
movsl
rorb
mov
xchg
jmp
into
inc
cmp
out
arpl
scas
cmp
mov
aam
in
add
add
push
push
push
xor
lea
lea
call
ljmp
add
add
jmp
ret
dec
jp
inc
icebp
pop
push
jmp
pop
push
push
push
test
add
call
cmpsl
das
movsl
jbe
inc
add
jmp
out
shlb
out
pop
push
push
push
clc
xor
cmp
sub
mov
nop
mov
jae
rcr
add
add
pop
pop
call
push
push
test
inc
add
call
pop
aam
xchg
cld
into
and
cmpsl
jle
inc
add
jmp
rolb
mov
mov
pop
add
mov
add
push
clc
xor
sub
mov
nop
mov
jae
shr
and
add
pop
pop
movswl
dec
push
clc
mov
shl
sub
mov
mov
jae
rcl
cmp
add
pop
pop
xor
push
clc
ror
add
add
call
data16
and
clc
mov
sbb
add
jmp
xor
sub
in
clc
rol
mov
mov
xchg
jmp
shrb
sbb
and
leave
cmp
jmp
mov
mul
push
clc
sub
sub
mov
nop
mov
jae
sar
sub
add
pop
pop
pop
push
clc
sub
mov
nop
mov
jae
shr
and
add
pop
pop
cmp
je
add
jmp
push
push
sub
add
call
cmp
jmp
pop
jmp
dec
out
cmp
xchg
aam
add
jmp
push
mov
sub
pop
pop
pop
push
clc
add
mov
sub
mov
nop
mov
jae
shl
cmp
add
pop
pop
leave
ret
push
push
push
test
add
call
jmp
sbb
inc
add
jmp
call
mov
pop
mov
push
push
push
push
xor
add
call
mov
push
mov
sbb
pop
xchg
push
push
insl
mov
cwtl
add
jmp
fcomip
sub
push
pop
xlat
sbb
out
push
push
mov
push
push
and
add
call
and
lds
jmp
pop
jmp
xor
jmp
popf
arpl
in
jmp
pop
mov
push
push
xor
jne
jmp
sub
cmc
xor
jne
jp
and
jo
jmp
scas
jle
jb
jns
test
xchg
bound
sbb
mov
cs
jp
int
sub
xor
mov
push
add
pop
mov
push
push
test
inc
add
call
lret
sti
dec
push
mov
jbe
inc
add
jmp
sahf
or
pop
dec
pop
jbe
enter
in
jle
pop
mov
push
clc
sub
mov
mov
jae
shl
cmp
add
pop
pop
push
push
push
test
add
lea
call
pushf
sarl
inc
add
jmp
mov
mov
test
loope
lods
mov
pop
mov
shr
mov
push
push
test
add
call
adc
ret
ja
jae
pop
xor
inc
add
jmp
mov
pop
add
mov
push
push
test
add
add
call
movsb
push
mov
pushf
and
dec
lcall
add
jmp
test
or
stos
mov
pop
shl
mov
push
clc
or
rcl
mov
sub
mov
mov
jae
rol
sbb
add
pop
pop
add
xor
lea
push
clc
add
call
fstpl
push
and
clc
add
jmp
maskmovq
mull
in
mov
loopne
clc
adc
add
xor
xchg
jmp
test
int
inc
inc
sarl
and
dec
cmp
jmp
xor
push
push
test
lea
lea
call
push
int3
mov
or
add
movb
out
and
testb
pop
sub
mov
shr
push
clc
or
mov
add
call
dec
xor
and
clc
rcl
sbb
add
jmp
mov
push
sub
push
clc
rcl
mov
xchg
jmp
repz
xchg
xor
jl
push
mov
adc
rorl
repz
add
mov
adc
add
call
pop
nop
lds
ficomps
xchg
clc
add
jmp
xor
rol
mov
rcr
xchg
jmp
mov
cli
adc
pop
or
cmp
jmp
add
push
clc
sar
sub
mov
mov
jae
rcr
and
add
pop
pop
mov
shl
mov
push
clc
add
call
js
stc
xchg
gs
clc
sbb
add
jmp
mov
and
jmp
push
sti
dec
call
and
cmp
push
jmp
add
push
clc
or
add
call
and
add
sub
sbb
add
jmp
sub
lock
inc
add
mov
xchg
jmp
sub
jl,pt
inc
sbb
and
cmp
jmp
xor
push
push
test
add
lea
call
pop
jne
sarl
movl
and
push
mov
pop
lea
push
push
test
add
lea
call
mov
mov
mov
add
jmp
sgdtl
xchg
mov
pop
xor
pop
xor
push
clc
shr
sar
sub
mov
mov
jae
ror
test
add
pop
pop
sub
add
pop
push
clc
mov
mov
rcr
add
call
and
jae
jnp
push
pop
mov
add
add
jmp
shrl
fcomps
clc
shr
mov
xchg
jmp
out
out
inc
roll
add
lret
cmp
iret
dec
jne
push
clc
rcl
mov
sub
mov
nop
mov
jae
rol
or
add
pop
pop
mov
push
push
and
jne
jmp
mov
fldl
jne
jp
std
pop
sahf
dec
out
jo
jmp
imul
add
jb
jns
mov
out
iret
rcrb
ja
mov
jp
jbe
mov
and
add
pop
pop
push
push
test
add
call
and
rolb
outsb
stos
leave
cmc
jae
and
and
pop
pop
pop
pop
push
push
sub
add
call
mov
adc
inc
push
std
and
inc
mov
rolb
add
jmp
pop
leave
ret
push
push
test
add
call
test
xchg
xor
sahf
call
movl
loope
out
imul
jns
mov
pop
push
push
push
xor
jne
jmp
cmp
xchg
jne
xor
jne
jp
jge
mov
pop
add
sbb
jb
jns
stos
lock
sahf
lods
dec
cltd
test
and
je
stos
popa
mov
in
bound
fnstsw
cmp
or
add
add
in
push
push
sub
add
call
jle
pop
test
mov
or
push
xchg
pop
sub
add
add
jmp
or
mov
push
push
clc
add
call
xorb
pop
xchg
clc
cmp
or
add
jmp
push
aas
lret
in
clc
rol
adc
ror
xchg
jmp
cwtl
cmpsb
test
cs
add
insb
addl
push
push
push
sub
jne
jmp
into
int3
adc
push
xor
jne
jp
sub
inc
dec
jo
jmp
xchg
mov
add
in
imul
jecxz
in
adc
jns
je
pop
insb
int
jo
loop
sarb
rcll
movb
bound
inc
lea
lea
pop
mov
push
clc
sub
mov
nop
mov
jae
ror
or
add
pop
pop
mov
push
clc
add
add
call
xchg
lods
push
push
xchg
ljmpw
and
clc
rcl
add
jmp
ds
jp
popf
notb
dec
outsb
loop
clc
sub
xchg
jmp
jo
push
shlb
imul
and
ja
jne
into
shr
mov
push
push
sub
inc
lea
call
cli
fistpll
sbb
pop
fsubr
push
fdivs
push
jmp
dec
sbb
smsw
jecxz
clc
xor
adc
sub
mov
mov
jae
sar
sbb
add
pop
pop
cmp
je
add
mov
push
push
and
jne
jmp
add
jle
shll
shlb
push
pusha
gs
aas
push
mov
jo
jmp
xchg
sahf
sbb
lds
lret
leave
jns
je
mov
sbb
mov
jp
in
pop
xlat
addb
add
pop
mov
push
push
sub
inc
lea
call
xor
jmp
mov
rclb
ret
add
or
mov
adc
jmp
pop
mov
push
clc
shl
add
call
out
out
mov
cmp
jp
insb
and
clc
add
jmp
jecxz
stos
shrl
hlt
in
clc
sub
xchg
jmp
fcoml
sbbl
cmp
stc
ja
into
pushl
pushl
push
clc
sar
add
call
je
cmpsb
shrl
xchg
clc
add
jmp
aam
cmp
daa
fidivs
add
xchg
jmp
repz
ret
and
cmp
pushl
pushl
pushl
push
push
test
add
call
push
push
mov
inc
add
jmp
push
mov
adc
movsl
xchg
mov
divb
pushl
push
clc
rcr
sub
mov
mov
jae
shl
or
add
pop
pop
call
push
push
and
jne
jmp
aam
cmc
inc
mov
jp
cmpsl
jae
call
mov
push
jmp
dec
xor
orb
cmc
movsl
jb
jns
push
sbb
jns
je
fcoml
xchg
dec
mov
jp
xlat
push
lods
jo
sti
test
les
add
pop
mov
push
clc
add
call
sbbl
xor
mov
xchg
clc
ror
shr
add
jmp
inc
insb
ljmp
pop
add
add
arpl
addl
jmp
mov
sub
jne
pop
push
push
test
add
call
mov
jbe
inc
add
jmp
dec
or
ja
imul
icebp
gs
pop
pop
pop
leave
push
clc
sar
mov
add
call
pop
jmp
xor
insb
jo
xchg
clc
cmp
adc
rcl
add
jmp
sbb
into
or
dec
jmp
clc
xor
cmp
xchg
jmp
and
movsl
xor
movsl
mov
int
sbb
push
clc
or
xor
sub
mov
nop
mov
jae
shr
sub
add
pop
pop
push
mov
push
push
test
lea
add
call
sbb
or
push
loop
add
movl
mov
fsubs
push
jg
shlb
pop
mov
pop
pusha
push
push
and
add
call
push
add
add
jmp
xchg
fst
jo
jecxz
mov
push
clc
cmp
sub
mov
nop
mov
jae
shr
add
add
pop
pop
nop
push
clc
sub
mov
mov
jae
rol
xor
add
pop
pop
nop
mov
push
push
xor
jne
jmp
or
clc
inc
mov
out
or
xor
jne
jp
or
out
jo
jmp
inc
test
jne
ljmp
jg
jns
je
loope
inc
loope
sbb
ds
jp
out
ret
sahf
cmc
cld
jmp
lea
add
pop
xor
push
push
and
jne
jmp
int3
mov
pop
imul
sbb
jb
shr
scas
out
stc
xchg
mov
nop
cltd
sbb
jns
sub
jmp
mov
jns
je
adc
stos
mov
jp
insb
int3
mov
add
mov
push
push
test
inc
lea
call
push
dec
sub
data16
adc
jbe
inc
add
jmp
cwtl
mov
jp
pop
xor
push
clc
sbb
sub
mov
mov
jae
ror
sub
add
pop
pop
rep
popa
leave
push
push
test
add
call
sub
call
jge
push
test
movl
mov
pop
ret
mov
push
push
and
add
call
mov
xor
sbb
pop
pop
loopne
int
lcall
adc
nop
ss
pop
lea
mov
test
jne
push
clc
sub
mov
mov
jae
ror
sbb
add
pop
pop
mov
movzbl
inc
push
push
and
add
call
adc
push
push
cmpsl
jmp
pop
jmp
sbb
fcoms
jmp
pop
mov
mov
push
clc
add
call
gs
pop
cmpsb
loopne
mov
inc
jg
je
add
mov
add
jmp
gs
sbb
xchg
jmp
push
sbb
lods
xor
repz
test
or
add
add
xchg
repnz
sbb
add
add
add
call
testb
cmp
jmp
pop
jmp
xor
rcr
addl
mov
mov
push
clc
add
call
je
in
cmp
mov
add
and
clc
add
jmp
mov
sub
sahf
clc
rol
mov
mov
xchg
jmp
push
or
jecxz
mov
add
add
cmp
jmp
shr
add
push
clc
ror
add
call
inc
jecxz
decb
mov
add
add
jmp
lahf
adc
aas
jl
in
ds
in
mov
xchg
jmp
out
in
popa
gs
bound
addl
jmp
and
push
push
and
add
call
push
mov
push
aad
jl
iret
mov
push
testl
push
or
out
imul
les
add
add
or
add
adc
xchg
and
xor
sbb
push
scas
push
mov
or
or
or
ret
push
push
push
xor
add
call
fwait
in
fidivrl
dec
testl
cltd
add
jmp
insl
mov
aaa
pusha
jmp
pop
xor
inc
push
clc
sar
ror
sub
sub
mov
nop
mov
jae
sar
sbb
add
pop
pop
call
lea
push
push
sub
add
call
test
add
add
jmp
or
imul
xchg
xchg
loope
call
push
push
test
add
call
stos
pop
push
scas
je
inc
add
jmp
sub
sahf
mov
pop
test
jne
mov
push
push
sub
jne
jmp
lods
mov
push
cmp
shlb
jp
std
adc
lods
xchg
int3
lret
jnp
jo
jmp
fcmovu
shl
jb
jns
fldenv
adc
cmpsb
mov
jns,pt
je
paddb
or
dec
or
loopne
and
sub
jb
xchg
and
aas
inc
lea
pop
pop
push
clc
mov
ror
add
call
cmc
jg
cmpl
jnp
inc
and
clc
adc
mov
add
jmp
aas
aad
testb
xabort
jmp
add
add
adc
add
sub
xlat
ret
push
mov
push
push
sub
add
call
cli
repnz
jmp
pop
jmp
mov
add
outsb
sbb
loop
sub
push
push
test
inc
lea
call
test
lods
mov
and
mov
add
movb
mov
pop
mov
push
push
and
jne
jmp
lahf
mov
fsubrl
xor
jne
jp
xorb
jmp
jl
pop
outsl
rdtsc
or
jns
insl
out
mov
dec
shl
push
je
mov
sub
fisttpll
sub
add
pop
mov
andl
push
clc
mov
or
or
add
call
jecxz
push
xchg
lcall
jl
add
or
add
jmp
je
mov
out
outsb
clc
mov
xchg
jmp
xchg
mov
and
xchg
mov
jmp
push
mov
push
push
xor
jne
jmp
sub
cmp
shlb
jp
movsl
out
fdivl
sbb
pusha
lret
or
jmp
jg
dec
mov
je
outsl
xor
mov
jp
or
ds
mov
mov
fs
pop
push
push
push
and
add
call
jl
adc
add
add
jmp
andb
loope
xchg
jg
loopne
xor
and
push
push
test
add
call
jbe
jle
inc
add
jmp
fcom
mov
mov
pop
mov
lea
inc
push
push
and
jne
jmp
sbb
pop
nop
xor
jne
jp
bound
into
xchg
stos
adc
jmp
es
sbb
jne
push
insl
jno
jb
jns
add
mov
xchg
push
jns
je
xchg
dec
mov
cmp
imul
dec
les
add
push
clc
mov
adc
rcr
add
call
mov
shrl
push
and
clc
add
jmp
mov
mov
flds
clc
cmp
xor
xchg
jmp
dec
bound
and
cmp
das
jmp
mov
mov
push
clc
sar
cmp
or
add
call
push
les
add
add
jmp
xchg
mov
std
test
pop
push
sub
add
pop
add
add
push
push
add
je
js
jmp
lea
push
push
sub
add
call
clc
push
iret
lret
pusha
sbb
pop
jmp
or
jmp
lods
jmp
pop
call
push
clc
shl
sbb
sub
mov
nop
mov
jae
ror
sub
add
pop
pop
test
je
call
test
je
push
push
and
lea
add
call
les
or
fsubr
mov
movsl
mov
movb
add
out
imul
pop
call
test
je
push
push
test
add
call
jle
and
inc
add
jmp
lods
stc
pop
gs
iret
mov
sbb
mov
pop
push
push
push
test
add
call
dec
lcall
hlt
cmpl
roll
scas
xchg
dec
mov
add
call
push
push
test
inc
add
call
outsb
pushf
daa
mov
jbe
inc
add
jmp
outsb
fcoms
xor
pop
lea
call
lea
push
clc
cmp
rcl
sub
mov
mov
jae
rcr
xor
add
pop
pop
dec
jne
push
push
and
jne
jmp
push
dec
sub
jp
jmp
ja
cmp
sub
mov
decl
jb
jns
leave
sti
nop
stc
dec
xchg
xor
jns
je
xor
inc
and
roll
sarb
mov
les
mov
push
clc
cmp
cmp
sub
mov
mov
jae
shl
add
add
pop
pop
test
je
push
push
test
add
call
sub
clc
int
jmp
ret
je
inc
add
jmp
adc
sub
and
sub
jle
pop
mov
sub
mov
push
clc
mov
rcl
sub
mov
nop
mov
jae
shl
xor
add
pop
pop
mov
jmp
movb
push
push
test
add
lea
call
mov
inc
add
jmp
or
jnp
mov
pop
incl
jmp
push
clc
mov
sbb
sub
mov
nop
mov
jae
shl
or
add
pop
pop
mov
movzbl
incl
push
clc
add
call
cltd
sub
mov
daa
and
pop
and
clc
add
jmp
clc
cmc
dec
clc
sub
xchg
jmp
jno
jb
imul
sbb
xor
push
push
test
add
call
lea
and
inc
lods
pop
jecxz
mov
movb
movsb
inc
leave
imul
mov
jle
pop
inc
mov
push
push
test
add
call
adc
dec
dec
jbe
inc
add
jmp
je
pushf
jmp
popa
sub
jbe
pop
and
push
push
test
add
call
aaa
jbe
inc
add
jmp
mov
jp
pop
inc
inc
shr
je
push
clc
mov
sub
mov
nop
mov
jae
rcl
test
add
pop
pop
test
je
mov
sub
push
clc
cmp
add
call
into
dec
xor
mov
xor
insb
and
clc
mov
add
jmp
out
push
inc
jo
mov
xchg
jmp
push
jnp
mov
pop
cmpsl
mov
add
adc
mov
push
clc
ror
sub
mov
mov
jae
rol
xor
add
pop
pop
mov
incl
inc
push
clc
sbb
mov
sub
mov
mov
jae
rcl
sbb
add
pop
pop
mov
dec
jne
push
push
test
inc
lea
call
lret
int3
sub
movsl
cltd
cmp
lret
add
ret
add
jmp
dec
adc
mov
pop
jmp
mov
jmp
push
push
sub
add
add
call
gs
pop
and
lods
cs
pop
jmp
jl
mov
or
or
xchg
inc
push
sub
jmp
pop
call
test
jne
cmp
jne
push
clc
add
call
in
sbb
pop
pop
inc
jb
xrelease
clc
cmp
mov
add
add
jmp
xchg
inc
stc
hlt
xchg
jmp
sahf
dec
xlat
and
add
test
aad
add
iret
icebp
and
jne
jmp
ret
rorb
in
jne
jp
pop
pop
push
aas
xlat
adc
add
xor
les
fs
in
push
mov
je
cmp
jp
andb
xchg
add
pop
call
push
push
test
add
add
call
pop
push
adc
xor
ja
xchg
jle
inc
add
jmp
xchg
add
insl
int3
pop
mov
pop
test
je
mov
sub
push
push
test
add
call
aas
pop
jbe
inc
add
jmp
in
mov
sub
jle
pop
mov
push
push
sub
add
lea
call
fwait
addr16
pop
jmp
push
add
jmp
out
push
cmp
bound
push
jmp
pop
mov
push
push
and
add
call
orl
jmp
fiaddl
sub
movl
cmpsb
jmp
pop
incl
push
push
test
add
call
push
xchg
lods
aam
pop
shl
popf
repnz
sbb
add
jmp
push
jle
mov
pop
inc
push
push
xor
jne
jmp
mov
jne
jp
popf
flds
adc
cltd
fstl
jmp
xchg
jb
jns
ljmp
push
mov
jns
je
mov
fdivs
jp
insb
push
pop
mov
add
add
pop
mov
push
push
xor
jne
jmp
add
mov
mov
push
add
jp
ljmp
pop
or
or
jb
jns
xor
je
fsubrs
sbb
cmpsl
in
daa
fmuls
jmp
mov
add
dec
jne
jmp
push
clc
sub
mov
mov
jae
shr
cmp
add
pop
pop
sub
jmp
dec
push
push
test
lea
add
call
dec
sbb
repz
add
mov
add
jmp
jmp
arpl
icebp
mov
mov
pop
dec
push
clc
shr
add
call
push
popf
test
iret
xchg
clc
add
jmp
dec
test
xchg
fdivrl
clc
mov
rcr
xchg
jmp
xor
je
xchg
sub
aad
dec
in
movzbl
shl
push
clc
shl
sbb
add
call
enter
loope
xchg
clc
mov
mov
rcl
add
jmp
jle
and
and
clc
shr
xchg
jmp
mov
mov
adc
lea
add
out
call
add
push
push
sub
jne
jmp
xchg
into
xor
mov
xorl
in
jne
jp
sub
ja
rolb
push
test
fsubr
push
leave
das
mov
jb
jns
mov
adc
test
mov
jp
mov
add
pop
incl
lea
push
clc
or
add
or
sub
mov
nop
mov
jae
rcl
and
add
pop
pop
mov
push
push
and
add
call
lret
inc
lahf
pop
jmp
pop
jmp
cs
and
add
jmp
xorb
inc
xchg
loopne
call
cmp
jb
push
push
and
add
call
add
xchg
int3
mov
pop
jmp
add
ret
add
mov
pop
inc
push
clc
mov
sbb
sub
mov
mov
jae
ror
test
add
pop
pop
cmp
jb
inc
cmp
jae
push
push
and
jne
jmp
mov
ss
js
adc
jp
lret
loope
or
cltd
mov
enter
adc
push
mov
add
jns
or
pop
push
xchg
and
or
push
and
mov
jp
test
call
add
inc
push
push
and
add
call
inc
cmp
pop
jmp
test
ret
push
ss
sar
pop
inc
push
push
test
lea
lea
call
dec
je
cltd
push
clc
lcall
movb
cmp
and
adc
shr
xor
sub
jp
pop
test
je
mov
push
clc
adc
mov
sub
mov
nop
mov
jae
ror
add
add
pop
pop
sub
push
clc
adc
or
add
add
call
jbe
fsubrl
mov
add
rol
add
jmp
inc
orl
add
sub
jnp
clc
sbb
xchg
jmp
mul
xor
adc
add
sbb
jae
jmp
mov
mov
incl
push
clc
mov
add
call
add
into
xchg
clc
or
add
jmp
hlt
mov
clc
or
sub
xchg
jmp
stos
push
in
je
push
testl
loop
jmp
inc
mov
dec
jne
push
push
sub
lea
lea
call
sbb
jmp
pop
jmp
xchg
adc
xor
roll
sti
and
mov
out
aad
sub
mov
xor
push
clc
sub
mov
mov
jae
rol
cmp
add
pop
pop
inc
push
clc
sub
xor
add
call
xlat
sub
mov
clc
add
jmp
adcb
sahf
clc
xchg
jmp
xchg
cmp
ret
mov
cmp
jmp
jmp
push
push
and
add
lea
call
lret
cmp
adc
add
jmp
and
nop
out
loopne
mov
mov
push
clc
mov
sub
mov
nop
mov
jae
rcl
sbb
add
pop
pop
mov
incl
incl
push
clc
sub
mov
nop
mov
jae
ror
sub
add
pop
pop
mov
push
push
and
jne
jmp
decl
lret
jno
xor
jne
jp
insl
sub
sub
sub
push
jp
ja
jne
js
out
inc
pusha
add
adc
sbb
subl
dec
pusha
pusha
add
lea
pop
xor
push
push
test
add
call
sub
mov
push
cmpl
add
ret
add
or
stos
adc
sarb
pop
cmpl
je
mov
pop
push
clc
rcl
rcl
rol
sub
mov
nop
mov
jae
shl
sbb
add
pop
pop
pop
sub
push
push
sub
lea
lea
call
xor
jmp
pop
jmp
cmc
rolb
mov
in
pop
push
push
and
jne
jmp
inc
pop
adc
jp
pop
out
dec
jo
jmp
lock
push
inc
inc
jb
jns
movsb
popf
xchg
aam
dec
sysenter
bound
adc
in
dec
in
mov
jp
mov
mov
sub
add
pop
leave
push
push
xor
add
call
push
cmpsb
je
pop
pop
jmp
pop
jmp
popa
mov
movl
mov
out
ret
push
push
sub
jne
jmp
loop
xchg
dec
sbb
bound
sar
xor
jne
jp
movsl
jb
jo
jmp
mov
cmpsl
jb
jns
lds
out
popf
mov
cmpl
mov
mov
jp
xchg
adc
mov
movsb
and
add
add
add
mov
and
push
push
xor
jne
jmp
addl
xor
jne
jp
or
out
inc
jo
jmp
mov
sbb
xchg
lea
jns
je
fbld
jmp
mov
jp
stos
ljmp
les
mov
push
clc
mov
xor
sub
mov
nop
mov
jae
ror
add
add
pop
pop
jmp
push
clc
sub
mov
mov
jae
sar
sbb
add
pop
pop
sub
mov
cmp
jne
push
push
and
add
call
aam
and
sub
jmp
pop
and
lret
or
cs
jmp
inc
jmp
pop
lea
push
push
sub
jne
jmp
xor
outsl
ds
cmpsb
xchg
xor
jne
jp
xor
in
gs
xchg
jo
jmp
mov
jns
push
lret
jno
addr16
jp
lods
mov
repz
int
fidivs
cmp
fidivrs
and
pop
out
xor
fimull
les
mov
mov
push
clc
sar
rcr
sub
mov
mov
jae
rcl
cmp
add
pop
pop
and
push
clc
sub
mov
sub
mov
mov
jae
ror
sub
add
pop
pop
cmp
je
push
clc
add
call
shlb
aas
rcll
je
add
shl
ror
xor
add
jmp
pop
push
jecxz
outsl
in
sbbb
xchg
jmp
push
mov
and
cmp
xor
push
push
test
add
add
call
das
rcr
pop
and
aam
jnp
sarb
inc
add
jmp
push
out
mov
mov
pop
ret
push
clc
rol
rcr
sub
mov
mov
jae
shr
add
add
pop
pop
push
xor
push
clc
mov
add
call
daa
ja
in
out
mov
les
add
jmp
xor
push
insl
mov
and
jmp
inc
adc
addl
jmp
mov
mov
mov
push
push
test
inc
add
call
test
push
popa
call
inc
add
jmp
andb
fucomp
fisubrs
mov
pop
lods
mov
push
push
and
add
call
inc
lea
jmp
mov
push
push
dec
mul
cmpsb
ds
loop
pop
push
push
and
jne
jmp
insb
push
or
jne
jp
ds
inc
addr16
in
add
pop
in
jo
jmp
in
inc
add
jb
jns
xchg
cmp
cmpsb
lahf
pusha
sub
jb
adc
jns
or
sarb
outsb
and
arpl
add
pop
ret
push
mov
push
push
test
add
lea
call
add
mov
outsl
mov
or
pop
jnp
repnz
inc
add
jmp
jnp
mov
sub
stc
pop
mov
jle
pop
add
push
push
push
push
and
jne
jmp
and
jb
call
shlb
sbb
decb
mov
and
mov
mov
ljmp
rcrb
mov
sbb
out
dec
xchg
lret
stos
fidivrs
mov
jp
jnp
xchg
cs
cld
jge
inc
add
pop
push
mov
push
clc
add
call
cltd
lret
rolb
add
jmp
mov
mov
clc
rcl
shl
xchg
jmp
sbb
div
lock
add
and
adc
mov
add
pushl
push
push
and
add
call
popa
int3
sbb
jmp
pop
jmp
adc
shr
scas
add
jmp
lret
pop
add
jno
mov
pop
js
clc
mov
xor
mov
sub
mov
nop
mov
jae
shl
and
add
pop
pop
add
push
push
xor
inc
add
call
mov
loop
pop
popa
jmp
pop
jmp
dec
inc
imull
push
jmp
jle
fs
jmp
pop
add
mov
push
clc
sub
ror
sub
mov
nop
mov
jae
shl
or
add
pop
pop
add
xor
lea
push
clc
cmp
add
call
out
rolb
fldl
add
jmp
pusha
mov
and
jmp
pop
and
mov
push
mov
mov
fmull
daa
cmp
and
lea
add
call
xchg
out
jnp
adc
add
mov
jmp
cmp
jmp
pop
add
push
push
xor
jne
jmp
shlb
or
lock
jne
jp
lea
pop
jo
jmp
xchg
pop
push
jbe
inc
shlb
jns
ficomps
sbb
repnz
cmp
fildl
cmp
pop
push
mov
jp
inc
mov
lea
add
pop
mov
push
push
test
inc
lea
call
xchg
inc
add
jmp
xor
xor
pop
xor
rol
xor
push
push
test
inc
add
call
xor
cmp
mov
xchg
loop
jle
inc
add
jmp
push
add
xchg
pop
jns
mov
pop
inc
cmpb
jne
push
push
and
jne
jmp
out
jle
xor
jne
jp
sbb
jmp
adc
add
jns
jecxz
js
adc
sbb
dec
jns
je
dec
mov
into
ljmp
jae
jge
push
das
loope
jnp
add
lea
pop
cmp
je
push
clc
add
call
aad
mov
scas
sbb
xchg
clc
sub
add
mov
add
jmp
fdiv
dec
mov
cld
fistl
leave
xchg
jmp
xor
out
jmp
cmp
and
cmp
inc
cmp
jb
mov
push
push
sub
jne
jmp
jae
xor
jne
jp
in
mov
jmp
insb
jo
jmp
inc
arpl
jns
pop
mov
jb
vmwrite
je
or
jmp
add
hlt
dec
fmuls
movsb
and
add
add
rcll
fnstsw
jne
jmp
or
sbb
leave
jne
jp
pop
arpl
pop
lret
and
mov
jns
pushf
insb
dec
jns
je
cli
mov
loop
fimull
inc
jmp
cmp
dec
call
movzwl
push
push
test
add
call
sbb
push
je
inc
add
jmp
lea
inc
mov
xor
jp
pop
mov
add
push
push
sub
lea
lea
call
out
adc
insb
loope
push
pop
jmp
push
es
add
jmp
fstpt
mov
jmp
pop
mov
push
clc
add
call
add
xchg
add
test
inc
and
clc
add
add
jmp
cmc
mov
and
jmp
sbb
add
lods
xchg
mov
loop
rcll
cltd
roll
xor
add
call
loope
popa
cmc
push
movsl
mov
es
inc
add
jmp
add
ljmp
jbe
pop
pop
push
clc
add
call
xchg
push
out
jbe
lods
inc
xchg
clc
cmp
add
jmp
lock
push
ja
dec
andl
xchg
jmp
in
insb
xchg
mov
sub
pop
addl
jmp
cmp
jbe
push
clc
cmp
sub
mov
mov
jae
shl
adc
add
pop
pop
cmp
jae
pushl
push
clc
rol
mov
sub
mov
nop
mov
jae
shr
add
add
pop
pop
pushl
push
xorl
push
push
and
jne
jmp
sub
jne
jp
stos
lret
xor
jmp
out
cmp
icebp
js
jecxz
arpl
sub
jns
loopne
cld
mov
jecxz
mov
sti
sbb
leave
jp
inc
adc
stos
add
xchg
fs
pop
pushl
push
push
and
jne
jmp
lcall
xor
shlb
jp
lret
or
jo
jmp
xlat
push
fildl
mov
jge
cmp
dec
in
call
inc
jns
je
in
or
xchg
dec
orb
jo
les
call
call
pop
push
clc
mov
sub
mov
nop
mov
jae
shr
or
add
pop
pop
pop
pop
leave
push
clc
sbb
sub
mov
nop
mov
jae
rcr
test
add
pop
pop
ret
call
enter
js
mov
aam
cld
.byte
popf
cmpsl
.byte
