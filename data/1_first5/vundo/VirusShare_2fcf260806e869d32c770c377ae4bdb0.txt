add
add
jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
shrl
dec
ss
lock
sub
or
add
push
add
add
push
add
fwait
add
add
dec
add
inc
add
inc
add
addb
add
ja
int3
add
add
add
addb
add
rolb
add
add
add
add
add
add
mov
add
add
add
add
rolb
add
add
add
fwait
add
add
add
add
add
add
addb
add
dec
add
xchg
addb
add
add
add
mov
add
add
add
xchg
add
fwait
add
add
addb
add
stos
add
fwait
add
add
add
add
add
jmp
add
add
addb
add
arpl
dec
add
addb
add
add
addb
add
in
xchg
add
add
add
add
add
sbb
add
sbb
add
lret
add
add
je
push
add
add
add
add
add
add
add
add
add
add
add
add
in
insl
add
add
add
add
add
inc
add
add
outsl
add
add
add
add
and
mov
add
add
push
add
add
add
push
add
add
xor
inc
add
addb
add
int3
add
add
add
add
add
add
je
nop
add
add
das
add
add
add
add
add
je
test
addb
add
call
add
add
lods
add
add
and
jo
fwait
pop
inc
add
add
inc
add
dec
add
add
add
xchg
add
add
add
add
adc
pop
add
add
add
add
add
add
roll
test
addb
add
add
xchg
add
add
add
push
add
int3
add
add
add
add
add
add
add
add
add
add
roll
xor
adc
mov
js
cmpsb
add
add
test
ljmp
add
add
add
sbb
xor
xchg
add
add
ja
push
add
test
mov
dec
add
add
add
add
add
add
add
add
add
nop
add
add
add
add
add
add
dec
add
add
add
add
dec
add
add
add
add
add
add
add
add
jno
addb
add
adc
addb
add
add
add
add
sbb
add
pop
add
add
add
pop
add
jno
addb
add
add
add
add
add
add
add
cmp
xchg
cmp
mov
testb
add
add
dec
add
add
add
pop
je
outsb
add
add
add
add
insl
mov
out
jg
pop
pop
daa
shrl
ret
and
push
daa
push
pushf
push
stos
add
subb
in
fs
icebp
adc
inc
adc
adc
pop
or
mov
movsl
push
jns
arpl
sub
sub
cmp
jmp
push
pop
add
dec
nop
es
sub
jecxz
xlat
mov
rcl
shrb
lret
push
add
jb
xchg
aam
lds
pop
cmp
rolb
xchg
shlb
lret
out
inc
cs
push
and
cmp
dec
pop
cli
gs
in
pop
popf
dec
pop
push
std
push
mov
mov
adc
push
in
cltd
or
push
mov
movsl
addb
or
aaa
xchg
inc
mov
pop
jge
and
xor
cwtl
fiaddl
sahf
or
sahf
sbb
and
jl
dec
sub
es
daa
mov
andb
mov
sbb
inc
test
jp
xor
movsl
dec
push
jp
xor
xor
loop
dec
clc
jl
mov
or
shll
xchg
sub
inc
jp
test
ja
push
cmpl
jecxz
pop
test
sub
mov
mov
sbb
rol
leave
push
cmp
int
add
das
dec
loope
mov
jb
pop
out
lahf
dec
negl
hlt
les
shrl
and
or
ljmp
adc
and
adc
ljmp
jae
test
test
cwtl
mov
scas
testb
mov
stos
stos
in
insl
clc
and
push
mov
mov
sbb
add
repnz
dec
jbe
ljmp
add
jmp
cmp
pop
inc
pop
shlb
sbb
or
int
pop
mov
bound
sbb
inc
xor
loopne
jo
xlat
mov
jg
add
cmp
test
mov
insb
out
inc
outsb
jg
xorb
sub
mov
pop
dec
fs
mov
or
dec
cs
jmp
dec
bnd
push
adcb
pop
xchg
fisubrl
aas
jl
scas
xchg
sub
stos
cmpsb
imul
imul
in
ret
dec
add
push
xchg
lcall
pop
ret
mov
clc
mov
and
int3
dec
ds
xor
fsubr
fmull
mov
adc
divb
inc
mov
xchg
inc
ret
stos
incl
sbb
xchg
jne
test
movsb
jb
inc
push
sub
xchg
inc
jmp
rclb
add
cwtl
mov
ret
outsb
pop
adc
lahf
movsb
roll
add
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
xor
and
adc
add
jb
adc
jb
insb
test
cmp
xchg
push
addb
and
adc
add
hlt
and
jle
add
jb
bound
je
fs
addb
and
adc
add
hlt
shl
adc
les
movsb
dec
xchg
inc
test
je
inc
cli
es
cltd
pusha
nop
jae
jp
ja
xchg
adc
mov
cmc
xchg
xchg
adc
popf
mov
loop
lahf
pop
fisubs
xchg
mov
and
pushf
iret
mov
fwait
pop
inc
jle
or
adc
push
int3
hlt
addr16
mov
addr16
in
mov
adc
and
mov
idiv
out
xchg
lea
bound
mov
mov
movsb
or
push
ret
subb
xor
sub
xchg
mov
sub
loopw
sub
cli
int
mov
test
pushf
ja
andl
push
jg
mov
rclb
adc
je
adc
add
xchg
mov
movsb
push
xchg
in
je
cmp
mov
mov
adc
insl
pop
lock
movsl
data16
les
rolb
mov
icebp
divl
out
xorb
mov
xchg
inc
andl
pop
call
aad
lock
mov
and
pop
mov
lods
jae
push
mov
push
xchg
inc
test
push
addb
and
adc
add
hlt
and
adc
add
jb
bound
je
fs
push
addb
and
adc
add
hlt
test
rcrb
out
xchg
lahf
jg
aaa
cmp
cwtl
cmpsl
js
add
cmpsb
ss
cli
mov
adc
jecxz
xchg
hlt
push
sbb
cmpsl
fnsave
fwait
loope
in
inc
ret
xlat
mov
jmp
pop
aas
psubd
test
mov
jp
cmpsl
hlt
jb
mov
lds
popa
sub
push
ret
mov
into
leave
sbb
decb
cmp
push
sub
add
ficomps
stos
das
flds
outsb
xchg
int
push
repz
pop
lods
ficoms
mov
jne
movsl
sbb
ds
test
movsb
add
add
andl
cmp
shl
or
js
jbe
std
add
lds
gs
push
add
mov
add
jg
jbe
scas
mov
addr16
pop
xchg
fldz
cmp
and
mov
jl
add
sbb
cmpsb
scas
sbb
xor
icebp
shrl
xor
jne
aam
imul
jae
jmp
mov
bound
sub
xchg
fwait
and
push
push
mov
inc
or
outsb
jnp
hlt
sbb
test
and
or
les
cmp
mov
xchg
push
iret
fisubs
test
cmp
repnz
ficompl
dec
inc
dec
outsb
adc
fimuls
or
fcoml
inc
pop
pop
aam
fadd
dec
xor
adc
push
jg
or
xchg
push
int
clc
lea
mov
or
mov
mov
jge
insl
stos
xchg
mov
add
dec
jbe
scas
mov
aaa
jmp
add
push
les
xor
negb
sbb
or
scas
sub
cli
inc
mov
pop
mov
jns
int3
cmp
in
xor
cmp
cmc
jae
rcrl
pop
adc
mov
mov
xchg
int
neg
xor
loop
jb
push
rcpps
push
test
sti
push
scas
fs
cmp
in
xor
pushf
cltd
jns
stos
push
and
dec
pop
cwtl
mov
punpckhbw
jno
es
out
push
or
enter
call
stc
sbb
lahf
inc
addr16
xor
ret
sbb
pop
icebp
jne
lahf
and
jno
pop
into
mov
ljmp
fimull
mov
and
leave
lea
out
hlt
out
lcall
inc
push
sbb
fadd
ss
inc
sbb
mov
aas
add
shrl
loop
jl,pn
or
aaa
ret
mov
cmp
dec
adc
or
pop
into
test
std
cltd
loope
push
movsl
cmc
or
mov
adc
mov
mov
adc
xlat
ret
and
test
lock
fisttpll
xchg
shll
repz
or
inc
inc
inc
pop
shrb
and
js
ds
sbbl
mov
sbb
fidivl
add
dec
add
xchg
mov
lea
mov
dec
cmp
lock
mov
push
cli
xor
arpl
pop
xor
pop
out
cmp
push
lea
pusha
add
mov
stc
out
and
push
xor
jge
mov
mov
pop
test
nop
imul
cmpsb
ds
adc
mov
mov
int
xchg
sub
pop
adc
stc
sub
mov
xor
in
mov
pop
and
push
xor
daa
mov
out
imul
enter
and
adc
icebp
lahf
adc
sub
repnz
leave
packsswb
add
in
sub
lcall
sbb
mov
jg
xchg
lcall
sbb
dec
lea
cmp
cmp
xchg
fdivl
inc
sbb
xor
out
jge
scas
mov
pop
es
andb
mov
adc
testb
jge,pt
jp
iret
jg
inc
ret
js
test
mov
inc
enter
arpl
push
xchg
stc
insb
test
xchg
jl
call
subb
stos
mov
push
xchg
js
push
ja
fwait
jbe
or
ja
push
sub
inc
adcb
jae
adc
out
fcmovnbe
lcall
pop
stc
je
orb
nop
jne
outsl
cmpsb
or
mov
fwait
dec
icebp
xor
or
pop
out
or
dec
and
aaa
int3
stos
bound
or
push
mov
aam
inc
mov
mov
xor
ret
test
mov
cli
jle
jb
sub
inc
pop
call
and
fbstp
lds
out
mov
aam
dec
sbb
dec
das
pop
xor
rorb
lods
xlat
add
dec
and
xchg
adc
dec
cmp
in
sub
xchg
cmpsb
imul
push
out
push
filds
mov
das
jne
in
xchg
cmpsb
add
jge
insb
aas
adc
aad
pop
push
stos
shl
lret
stos
movsb
fidivl
call
mov
je
add
ret
xor
push
xchg
sub
fsts
in
mov
cmp
cmc
push
ljmp
fwait
jp
sub
push
push
jmp
push
ret
sub
mov
je
lock
loopne
mov
fiadds
cwtl
loope
or
jb
repz
sbb
pop
shll
cmp
and
sub
js
jecxz
clc
inc
orl
pop
pop
ljmp
fwait
jnp
ds
flds
test
or
inc
mov
arpl
mov
xor
sbb
dec
inc
adc
insb
mov
sub
xchg
sbb
push
dec
out
out
repnz
add
pop
xchg
dec
xor
pop
or
in
mov
cmp
ja
mov
mov
faddp
inc
push
sub
adc
add
lcall
daa
sbb
cmp
in
cli
js
or
cmpsl
movl
movsb
jle
ficomps
test
adc
repnz
out
xor
inc
push
je
xor
or
fmul
fmuls
enter
pop
lds
add
clc
ret
and
and
mov
sbb
insb
je
arpl
and
cmc
sbb
mov
or
enter
xchg
adc
add
xchg
pushf
ljmp
push
mov
pop
jb
push
stos
cmp
mov
and
pmaxub
hlt
add
je
repnz
les
sub
leave
push
and
popa
lret
mov
mov
fistpl
push
push
out
adc
mov
int
dec
out
lret
pop
dec
ds
in
mov
ljmp
jle
and
je
mov
dec
mov
add
outsb
cmp
fsub
fnstsw
add
xor
mov
push
mov
lahf
mov
test
and
mov
int
mov
loopne
aaa
sbb
movsb
in
xchg
ja
jcxz
mov
mov
test
in
xorb
test
mov
push
cld
fcomip
cmpsl
jb
dec
popf
cmc
mov
xchg
cli
sbb
insb
arpl
adc
jp
je
xchg
sarw
popl
int
push
data16
cli
mov
sbb
loope
jp
mov
lea
iret
mov
pop
push
fs
scas
in
notl
mov
lahf
jb
push
cltd
pop
cmpsl
jnp
xlat
cmc
clc
mov
rorb
mov
mov
es
pop
arpl
lret
insl
jl
pop
dec
inc
cmp
les
xchg
nop
mov
jne
stc
or
incb
cs
dec
jno
inc
xchg
pusha
insl
xchg
imul
in
sbb
nop
mov
movsl
rcll
in
and
in
push
pop
push
mov
enter
nop
movsb
adc
or
pusha
jle
pop
dec
outsb
mov
rcll
sbb
sbb
jnp
mov
cli
out
push
push
push
push
jge
pop
rcrl
arpl
int
xchg
das
roll
movl
push
sahf
pop
and
mov
loop
pop
in
or
add
mov
arpl
sbb
aam
jb
loope
sbb
inc
das
jmp
jae
cmpsb
inc
popf
popa
ret
xor
add
push
push
arpl
and
out
adc
mov
dec
es
adc
push
add
xchg
adc
xchg
inc
call
jbe
or
pop
test
mov
lret
fisubrl
lcall
cmpsb
adc
cli
insb
in
test
dec
or
cld
mov
bound
or
leave
cmpsb
out
jge
pop
nop
clc
int3
sbb
lods
sbb
je
xchg
inc
gs
inc
mov
xchg
ret
or
pop
les
push
xor
push
add
sahf
xchg
nop
mov
and
and
inc
ljmp
cmc
push
shlb
add
jg
nop
lret
cmp
in
or
pushf
test
hlt
push
pop
arpl
addl
imul
mov
sub
in
fwait
repnz
test
dec
sub
pop
add
out
int3
or
adc
cwtl
sub
loope
jae
pop
cwtl
cs
lahf
push
ror
aaa
les
or
andl
out
imul
sub
mov
xorb
ds
dec
inc
add
adc
out
mov
jo
fwait
jmp
lock
stc
lods
sbb
movsl
out
sbb
ret
enter
xchg
sbb
mov
xor
call
jmp
sbb
and
insb
xor
jp
sar
outsl
daa
ret
cmc
push
out
out
jp
mov
mov
jne
mov
inc
fs
sub
xor
mov
sbb
lret
stos
add
stos
mov
and
or
sbbb
sbb
aam
std
cmp
cli
jnp
popf
loopne
in
fwait
pop
ret
aaa
push
mov
cmpsb
mov
mov
jle
sub
pop
dec
jl
and
ret
jne
cwtl
bound
rcrl
in
stos
jecxz
lret
pop
xchg
inc
inc
xor
cmp
jp
outsl
cmp
lods
cli
fcomi
mov
inc
stc
divb
rcrb
jb
mov
mov
les
mov
or
push
into
dec
dec
stos
das
inc
mov
mov
lods
fistps
in
jmp
loopnew
sub
jle
mov
stos
mov
std
sbb
push
sbb
dec
in
sbb
pushf
xchg
mov
das
push
cmpsl
push
arpl
ss
aad
ss
push
das
les
movl
cmp
leave
lret
mov
std
sbb
xor
dec
mov
pop
and
mov
fnsave
push
sub
mov
or
mov
sbb
roll
int3
and
icebp
imul
in
mov
inc
mov
outsl
adc
xlat
sahf
lds
lea
xchg
jbe
and
into
adc
aad
fdivs
xchg
cltd
fistps
mov
stos
jno
idiv
loopne
jns
and
pop
mov
lea
cwtl
pop
fidivrs
add
push
xchg
mov
outsl
mov
mov
pop
adc
aas
pop
cmp
icebp
pop
in
scas
adc
fbstp
jb
sbb
scas
pop
add
add
loop
outsb
out
icebp
stos
add
mov
lcall
xor
mov
lret
mov
or
mov
cmp
dec
pop
es
popl
xchg
aad
xchg
and
cs
out
or
shl
adc
je
dec
movsl
imul
jg
fsubrs
inc
loop
jae
scas
add
xchg
or
cmp
idivl
jb
jb
mov
xchg
cmp
repnz
add
xchg
adc
mov
mov
ljmp
mov
add
std
sbb
in
scas
jne
sub
mov
and
subl
xchg
scas
mov
insl
mov
icebp
inc
xchg
ds
jp
pushf
hlt
daa
pop
mov
stos
inc
daa
sub
sahf
jecxz
push
jnp
mov
lcall
pop
enter
mov
sub
int
xor
add
mov
mov
cmpb
push
repz
cmc
lret
add
or
insl
fdivp
and
sbb
lods
add
sub
jns
loop
les
loope
gs
jp
xchg
or
jnp
out
dec
xchg
lods
add
dec
sbb
dec
out
fiadds
int
and
or
push
jne
mov
sbb
mov
sub
or
add
push
leave
lahf
adcb
notb
jmp
stos
push
xchg
jno
dec
scas
push
and
lods
cld
push
icebp
cmp
adc
std
pop
push
lods
cmpsb
or
stos
xlat
out
push
adcl
pop
xor
mov
std
lea
sub
je
repnz
bnd
dec
jnp
pop
fiaddl
xor
lea
out
stos
push
int3
or
xor
xorb
aad
push
pop
inc
sbb
bound
inc
cmp
mov
lea
int3
mov
jb
popa
pusha
mov
test
mov
rolb
sub
add
sbbb
lcall
frstpm(287
repz
pusha
adc
mov
sbb
into
mov
inc
push
mov
stos
cmp
cmp
or
add
and
mov
xchg
aam
cs
pop
or
sbb
dec
cmpsb
sub
xor
mov
insb
sbb
and
fimull
cwtl
rcrl
fcompl
cmp
xor
push
and
push
push
push
mov
mov
stos
loope
fidivrs
fisubrl
mov
sbb
rorb
scas
jmp
fmuls
clc
int
gs
sbb
mov
xchg
adc
inc
or
iret
int3
inc
dec
sbb
xchg
push
pop
and
jecxz
push
dec
testl
dec
sbb
mov
pop
pop
int
xchg
sub
gs
cs
mov
cmp
cmp
inc
jecxz
sub
gs
push
andb
cli
add
popa
adcb
es
mov
add
fstps
out
dec
rcrb
icebp
sbb
dec
push
cs
and
xlat
push
cmc
or
xchg
sbb
loope
insb
push
adcl
clc
adc
sub
push
xorb
stos
fmul
inc
in
sarb
push
movsl
inc
sbb
or
cld
xor
in
imull
sti
mov
sub
loope
xchg
mov
outsb
add
mov
sub
cmp
jg
pop
lret
icebp
cmpsl
enter
jmp
mov
and
insb
mov
fs
jmp
jle
xchg
divl
scas
or
ljmp
xchg
andl
ret
enter
imul
lock
int3
xchg
xchg
adc
pop
jl
dec
and
fiadds
cmpsb
xor
std
pop
movsb
add
adc
in
loop
loop
mov
push
jmp
sbb
ret
loope
cmp
nop
mov
push
arpl
push
and
jae
call
cmp
aam
adc
std
ret
mov
push
mov
imul
jnp
adcb
inc
fisttpl
cli
stos
clc
add
pop
push
out
mov
add
out
les
in
sub
cld
lahf
pop
loope
inc
or
push
and
mov
cmp
mulps
pop
lds
push
xchg
dec
stos
jg
test
push
inc
fsubs
cmpsb
shll
scas
out
mov
hlt
dec
mov
sbb
xchg
and
aas
jl
dec
xchg
pop
into
popf
out
rolb
pop
and
mov
and
pusha
outsb
divl
std
popf
test
adc
clc
add
lcall
enter
rcll
dec
gs
repnz
repnz
arpl
outsl
je
lea
xor
lahf
cmp
sar
or
and
inc
sub
xor
inc
loop
test
push
sub
add
leave
cmc
bnd
jge
add
sub
sti
fisttpll
inc
loope
fldenv
fbstp
adc
and
push
cli
adc
mov
rclb
pusha
xor
mov
mov
xor
jbe
aam
cs
jae
sti
sub
push
popa
and
adc
push
mov
push
dec
pop
pop
sub
push
inc
fisttps
add
imul
and
mov
push
jno
mov
jo
sbb
push
xchg
sub
bound
dec
mov
repnz
fidivs
add
movsb
in
push
xor
sub
aad
imul
out
inc
xorl
fsubr
cwtl
push
packuswb
xchg
ds
popf
sub
leave
mov
mov
fwait
and
inc
ljmp
inc
lret
and
jmp
cltd
sub
jmp
call
mov
sti
es
sbb
ret
cmp
cmp
mov
enter
mov
scas
decb
jbe
and
push
hlt
push
sub
inc
push
dec
jmp
push
add
pop
aad
push
mov
dec
cmp
repnz
cmpsb
xor
xor
inc
in
cmp
popa
xor
fstps
lds
cmpsl
mov
inc
add
xor
out
push
sub
cltd
xor
ljmp
mov
push
dec
adc
pop
inc
and
push
adc
fwait
mov
or
stc
cmp
les
cmp
or
cmpsl
int
addb
sti
pop
movsl
add
enter
push
xchg
test
movsl
push
inc
jae
mov
mov
sahf
and
pop
mov
pop
sub
inc
in
popa
test
addr16
mov
mov
mov
push
xchg
mov
ja
lret
xor
cmp
adc
sbb
xor
xchg
in
pop
cltd
mov
mov
sar
andl
xlat
mov
pushf
cmpsb
jb
es
adc
out
pop
mov
pop
jbe
jle
mov
push
add
push
loop
lcall
mov
out
mov
fs
inc
xor
je
add
filds
icebp
aad
repz
movsb
pop
xor
in
rorb
bound
jno
fcmovnu
pop
push
mov
out
shll
mov
mov
sub
sahf
push
sub
adc
xor
sahf
push
pop
or
sub
in
jnp
xor
test
or
jno
repz
mov
push
or
xchg
cmpsl
and
insl
jo
mov
andl
dec
jmp
jb
daa
repnz
nop
mov
pop
sub
pop
movsl
dec
mov
ja
mov
or
pusha
jg
add
push
pop
cs
inc
mov
pusha
push
and
in
mov
insl
dec
shr
in
ret
adc
sbb
scas
and
hlt
test
lahf
xchg
cmp
jecxz
adc
nop
xor
xchg
subl
std
ret
stc
hlt
int
rclb
in
inc
nop
fimull
dec
popa
dec
lret
and
in
sti
rolb
arpl
jl
and
push
jne
cmp
cmp
lds
xchg
shll
ret
push
pop
push
loope
inc
and
rorb
fcoml
dec
mov
rcrb
cs
rorl
xchg
mov
sub
xlat
orl
pop
int3
mov
shrb
movsl
leave
imul
push
sub
push
dec
movsb
into
and
jne
and
cmp
pushf
mov
mov
lea
ffreep
push
movsl
notb
xlat
mov
fisubs
jp
aaa
rorb
fcomps
scas
mov
adc
pop
lods
pop
fmulp
jg
inc
sbb
xchg
icebp
stc
outsl
into
dec
lea
test
mov
movsb
pop
or
es
repz
scas
or
jecxz
pop
in
or
mov
sar
dec
fstp
test
mov
sbb
lea
adc
lods
out
sti
mov
jmp
loope
mov
imul
adc
pop
gs
sub
dec
popf
lcall
test
adc
iret
nop
popa
xchg
leave
pop
int
stos
insl
jnp
inc
shr
cwtl
cmpl
subb
lea
packssdw
loope
mov
xor
setge
jle
push
andl
insl
std
pop
and
mov
stc
push
hlt
sub
ljmp
inc
gs
sbb
adc
mov
aas
mov
inc
xlat
inc
call
dec
xchg
cmp
push
data16
push
movsb
out
jl
daa
into
pop
and
adc
stos
or
cmp
mov
stos
movsl
inc
jmp
xchg
pop
inc
inc
icebp
mov
popa
sbb
ja
je
flds
jge
jb
insb
testb
push
mov
cmp
into
lods
push
loope
je
mov
ds
shlb
ljmp
in
aam
les
bound
je
fs
push
addb
and
adc
add
hlt
and
adc
add
jb
bound
je
fs
push
addb
and
adc
add
hlt
adc
jb
add
loop
bound
je
bound
repnz
and
adc
add
hlt
jle
dec
aam
les
jb
push
xchg
ret
je
into
cmp
test
sti
pushf
insl
jns
icebp
mov
and
mov
loop
adc
jno
popa
and
add
jb
fsts
loope
xchg
rolb
xchg
add
inc
and
popa
and
cmp
and
add
ja
daa
mov
popf
sbb
cli
push
int
popa
pop
insl
add
add
push
bound
xchg
negl
in
dec
mov
mov
mov
lret
iret
je
adc
call
jle
lcall
push
mov
xor
lods
out
adcl
lock
lds
adc
lahf
scas
out
jb
inc
ret
jb
push
mov
sbb
or
push
popa
pop
sahf
ficomps
fidivs
push
xchg
push
loope
daa
outsb
testb
cmc
cli
jmp
adc
add
inc
popa
arpl
push
sarl
mov
jns
xor
pop
push
test
int
cmp
xor
loop
shll
lea
mov
sbb
xchg
rol
test
jle
mov
mov
icebp
mov
cmpsb
hlt
lods
mov
push
add
inc
add
cmp
add
xlat
dec
ret
mov
sub
fstpl
push
adc
or
push
inc
adc
mov
loop
rcl
add
push
adc
jno
popa
and
push
add
jb
xchg
roll
rolb
loop
adc
jno
popa
and
push
add
jb
xchg
add
mov
dec
mov
ds
stos
push
inc
inc
insl
inc
inc
dec
cli
mov
jge
aad
cmp
out
jp
je
fimuls
mov
lods
sub
call
addr16
out
dec
pusha
mov
add
push
cmpsb
scas
mov
cmp
xor
lods
int3
mov
mov
add
lock
sti
cmpb
pop
lahf
mov
pop
enter
bts
inc
sbb
int3
daa
popa
push
imul
xchg
cli
sarl
scas
xchg
cld
push
ss
push
test
es
mov
sbb
cmp
jnp
loopne
shlb
cmp
adc
out
xlat
pushf
push
insl
push
and
or
rorb
push
stos
shll
cmpsl
jmp
fstl
jmp
add
and
dec
dec
ds
mov
and
xorb
xchg
mov
sub
jecxz
imul
add
cmp
inc
inc
mov
xchg
jp
pop
inc
ret
adc
inc
push
fyl2x
enter
mov
iret
inc
xor
dec
dec
daa
cmp
es
xor
outsb
pop
cmp
mov
pop
sbb
daa
fadd
push
aaa
sub
jecxz
and
push
sbb
inc
movsb
mov
mov
jmp
in
sbb
popf
test
inc
xor
mov
adc
out
mov
xor
jb
stc
xchg
sbb
es
dec
pop
idivb
ret
fcoml
loop
pop
xchg
pushf
pushf
adc
lods
pop
xchg
mov
cmpsl
jg
adc
pusha
cli
mov
push
jnp
or
jo
sub
mov
jmp
fs
sub
pop
call
insb
cld
xor
add
jge
cmp
adc
and
push
clc
or
jo
loop
movsl
das
cmovle
sub
push
mov
test
dec
sahf
jg
xor
sbb
sbb
insl
loopne
lea
push
sbb
mov
lods
xchg
movsb
pop
jnp
cmp
mov
xor
data16
bound
shr
jb
jge
push
pop
mov
lods
jl
dec
jnp
outsl
push
dec
inc
daa
lret
xchg
cmpsl
push
lret
mov
mov
aam
jb
rcl
fs
mov
jnp
pop
and
lods
cmp
sbb
outsb
mov
scas
xchg
adc
mov
push
stos
dec
es
scas
pop
xor
insb
or
sbb
pop
cmp
xor
rcrb
sub
add
push
jl
dec
mov
lret
stos
sbb
in
mov
and
xchg
mov
test
fxch
es
andb
out
jae
pop
in
cmp
ss
mov
push
adc
scas
xchg
cld
add
xor
ds
sti
xchg
in
fs
out
push
pop
xchg
imul
xor
jnp
push
xor
aas
sub
daa
arpl
ljmp
loopne
mov
and
dec
sub
mov
cmp
movsl
repnz
sbb
loopne
cmp
xor
pop
add
neg
psubb
fst
in
mov
dec
addr16
mov
xchg
lret
mov
cmpsb
push
jle
dec
sub
dec
mov
notb
repz
dec
shlb
lcall
lods
hlt
pop
ret
cld
movsl
mov
mov
mov
add
xchg
xchg
push
mov
out
loop
rclb
lods
fcomps
lret
or
movsl
mov
into
std
mov
add
add
sub
push
push
xchg
int
xchg
roll
mov
daa
mov
add
out
sahf
jbe
cwtl
cmc
sarb
xchg
cmp
lret
lcall
test
xchg
pop
insb
shll
adc
sahf
scas
mov
mov
call
into
xchg
mov
cltd
imul
imull
idivb
jbe
push
aaa
xchg
push
dec
sbb
jp
rcl
mov
or
push
imul
sbb
cmc
jmp
call
jns
adc
shlb
daa
jns
adc
jecxz,pt
mov
inc
pusha
mov
jae
call
movsl
jecxz
fs
xchg
lcall
adc
lods
aam
into
xor
loope
cmp
jecxz
fimuls
adc
push
xchg
and
pusha
fldt
xchg
jp
mov
je
push
test
jl
push
incl
out
imul
sub
dec
xor
fdivl
iret
push
je
push
push
pop
ret
enter
mov
push
cmp
ret
mov
fildll
adc
je
cltd
sub
xchg
mov
rcr
fidivl
push
enter
add
lds
aad
int
sub
outsb
fnstsw
adc
into
popa
stc
sub
in
xor
adc
push
push
and
adc
pop
adc
lcall
pop
in
push
mov
pop
rol
loop
int3
test
push
aam
sbb
adcb
js
fstps
js
mov
bound
sub
jbe
outsl
jbe
cli
in
daa
notb
dec
or
mov
pop
xchg
lods
ret
push
push
gs
mov
xchg
jle
inc
int3
notb
cmc
pop
push
xor
mov
mov
imul
adc
adc
pop
xor
jp
out
fmul
dec
mov
loope
or
push
cmpsb
out
pop
addr16
into
pop
stos
test
cmp
aas
outsb
in
jmp
outsl
cltd
xchg
out
iret
pop
test
inc
rcll
adc
das
cmpsl
dec
daa
xchg
jl
sub
stos
pop
xchg
insb
adcl
xorb
pop
movsb
enter
mov
xor
mov
mov
outsb
cltd
inc
mov
hlt
cmp
adc
xchg
cli
mov
ljmp
outsb
mov
aas
cmpl
orb
push
mov
scas
xor
into
mov
mov
cltd
adc
leave
sub
add
and
jle
push
lods
popl
outsb
mov
pusha
xor
mov
pop
addr16
sar
add
inc
dec
cmpsb
in
adc
aam
inc
or
xor
outsb
dec
mov
fistps
fnstenv
or
xor
push
hlt
sub
jb
adc
sahf
pushf
dec
test
pop
mov
fs
add
movsb
jl
mov
jl
inc
in
les
add
jmp
inc
pop
mov
and
lds
jnp
sub
jl
aaa
mov
sub
sti
aad
mov
adc
inc
imul
jb
dec
xchg
cmp
rolb
mov
lea
sub
subb
out
lahf
jne
mov
xor
push
test
mov
iret
out
or
negl
outsl
xlat
xor
xor
addb
inc
ret
repz
xor
stc
inc
xor
fidivl
dec
push
mov
daa
lods
insl
cmpsb
hlt
testl
out
loopne
xor
loopne
add
lods
sub
cmp
mov
lret
mov
bound
xchg
inc
push
inc
in
out
sbb
lret
movsb
pop
mov
jno
fwait
ss
pop
and
adc
mov
mov
lret
loop
adc
jae
pop
pop
push
mov
incb
dec
aam
arpl
pusha
int3
stc
xchg
xor
jg
add
jbe
into
or
push
cld
int
mov
add
cli
and
sahf
fisubs
mov
or
push
inc
dec
push
add
ds
jle
test
jo
mov
cli
mov
sub
loop
mov
xchg
xchg
cld
leave
xor
adc
add
js
add
pop
mulb
push
adc
into
test
sub
push
push
dec
inc
rol
fmuls
cmp
mov
in
aam
test
or
push
push
jns
xchg
xlat
outsl
mov
mov
push
jp
mov
in
mov
movb
xchg
or
mov
xor
pushf
ss
mov
dec
adc
xchg
xchg
mov
hlt
shlb
aam
out
shl
and
mov
iret
insl
inc
sbb
in
das
pop
int
mov
adcl
enter
add
dec
or
jnp
mov
cmc
sbb
test
arpl
xchg
je
jns
shl
movb
jnp
or
out
push
iret
dec
sbb
mov
adc
inc
aaa
push
jmp
jo
cmp
mov
dec
mov
push
loope
mov
and
push
pop
dec
push
jne
mov
mov
mov
iret
push
and
mov
dec
insl
inc
xor
sahf
shl
jmp
retw
adc
mov
dec
push
and
ja
sbb
cmp
jne
je
mov
adc
popa
mov
in
outsl
xchg
mov
or
push
add
dec
pop
imul
or
dec
mov
test
mov
sub
or
xchg
adcl
pop
push
mov
mov
jge
jbe
hlt
shll
addl
push
cmc
cwtl
or
and
dec
rclb
sub
lods
push
push
push
push
int3
mov
fwait
add
mov
enter
aaa
aam
das
pop
aaa
inc
enter
aad
xchg
sbb
or
mov
add
or
roll
xchg
pop
pop
cs
xchg
add
repz
rcl
xor
xchg
int
inc
push
jno
pop
pop
hlt
cwtl
or
cmp
std
sub
push
dec
lahf
dec
stc
inc
dec
jmp
pushf
pop
leave
lods
mov
xchg
mov
adc
mulb
xchg
and
sahf
cmc
mov
mov
jne
iret
test
je
pop
std
xor
or
dec
ljmp
and
adc
inc
aas
stos
inc
jg
outsb
out
jl
mov
sahf
add
icebp
and
mov
push
stos
es
je
mov
mov
mov
dec
push
incb
mov
adc
pop
enter
lahf
jp
jp
andl
xchg
popa
loopne
mov
push
test
adc
das
jns
add
int3
push
sub
mov
jl
cltd
xchg
xor
and
ret
sarb
mov
outsl
xchg
mov
nop
mov
fdivr
push
xor
jl
ret
sub
ficoms
ret
jle
mov
js
mov
ljmp
pop
and
inc
add
sub
stos
sti
ficoml
imul
ss
loope
aas
cmp
leave
ljmp
into
jmp
xor
int3
mov
jns
js
das
fisttps
pop
out
pop
sbb
sbb
fdivrs
or
and
xchg
push
jg
and
adc
cmp
ja
leave
in
fildll
daa
imul
mov
push
icebp
std
push
roll
jl
lea
jecxz
repnz
jmp
aad
rcl
int
mov
cmp
out
sti
movsl
out
pop
mov
cmp
stos
add
or
mov
fists
movsb
addr16
jmp
cli
or
push
mov
scas
inc
inc
jno
mov
in
push
push
sbb
mov
std
pop
outsb
inc
cmc
push
pusha
out
inc
insb
icebp
add
fucomip
push
movsl
push
and
mov
jo
xlat
stos
pushf
sbb
mov
adc
dec
in
cwtl
jbe
clc
jb
outsb
push
outsb
ficomps
sbb
daa
add
xchg
xchg
dec
pop
imul
dec
jle
mov
call
in
mov
xchg
push
xchg
xchg
lea
add
or
cmp
sahf
xor
sub
mov
cmp
imul
mov
adc
lods
imul
xor
mov
jecxz
cltd
icebp
push
cltd
cmc
jle
xor
or
arpl
xchg
imul
mov
fmuls
movsl
ds
inc
clc
insb
popa
rorb
in
aad
jno
addr16
push
push
lret
adc
fcompl
and
mov
fst
movsb
daa
dec
ret
test
mov
leave
ljmp
adc
mov
aad
ljmp
xor
inc
jp
lea
and
push
sbb
xchg
int
mov
sub
in
das
jle
sub
jmp
mov
movb
jg
push
out
enter
mov
cwtl
loope
pop
icebp
test
sahf
test
mov
sbb
jnp
aaa
das
pusha
sti
jp
mov
xchg
jno
inc
jae
sub
adc
sub
testb
and
add
movsb
cmp
sbb
popf
dec
mov
arpl
sti
adc
sub
test
dec
lret
mov
inc
je
xchg
das
or
jmp
loopne
push
inc
dec
or
clc
bound
out
addb
pop
sbb
pop
sti
mov
xor
mov
stos
xchg
sub
mov
lahf
mov
inc
push
dec
dec
jno
push
in
js
orb
fstpl
dec
add
das
push
das
push
rcrb
mov
and
nop
mov
xchg
aad
mov
insb
imul
xchg
cmp
add
jl
das
faddl
lahf
insl
dec
out
ss
sbbb
inc
js
mov
lods
or
dec
sahf
leave
adc
pop
lret
xor
test
add
mov
psraw
cld
dec
jae
pop
add
insb
inc
cltd
out
cmpsl
and
xchg
pop
pop
add
xchg
inc
cmp
push
jmp
dec
pop
jae
cmpsl
iret
into
ret
and
test
sbb
inc
repz
add
into
mov
push
shl
cld
push
jg
inc
pop
hlt
xor
jmp
movsl
pop
xlat
sbb
loopne
xchg
psubb
add
cmp
jmp
or
push
stos
icebp
mov
jle
mov
cltd
mov
jbe
fildll
mov
icebp
and
dec
dec
xor
mov
and
orb
imul
mov
or
enter
popf
in
mov
xchg
adc
and
jle
mov
outsl
mov
fwait
into
js
or
jae
imul
adc
shll
addr16
mov
jp
loope
xor
xchg
loop
mov
jmp
xchg
adc
cmp
mov
scas
les
xor
cwtl
test
pusha
sbb
mov
sbb
jecxz
js
leave
repnz
add
lods
in
loope
lods
inc
sub
leave
out
sbbl
pop
mov
mov
mov
stos
adc
inc
dec
xor
or
out
lock
push
dec
jns
inc
lahf
and
jecxz
mov
aas
inc
data16
cmc
sub
fildll
push
mov
cmp
in
roll
pop
mov
adc
pop
dec
pushf
in
or
push
push
cwtl
test
fwait
icebp
xchg
adc
push
out
in
jb
xchg
and
mov
adc
fildl
pusha
mov
ds
call
and
flds
mov
cwtl
xchg
addr16
mov
inc
dec
adc
in
cmpb
mov
out
call
into
lock
movsb
fiadds
sbb
loopne
shr
popf
mov
sub
lods
lcall
ficoml
es
ret
lret
iret
test
add
orb
dec
scas
rorb
push
jecxz
cwtl
mov
js
shr
cmp
push
jp
jecxz
subb
ljmp
addl
cmp
dec
icebp
enter
sbb
mov
lds
das
nop
push
aas
pop
js
pop
mov
jne
ss
mov
fwait
pop
sbb
adc
sbb
sub
jmp
mov
push
enter
xchg
ljmp
ret
adc
mov
push
in
fwait
pop
mov
sti
push
fildl
mov
jne
sbb
or
mov
xlat
lods
mov
sbb
ljmp
xchg
xor
jb
iret
lret
or
lahf
ds
jbe
pop
jb
mov
push
xor
adc
hlt
jmp
scas
mov
lods
ja
mov
xorl
ljmp
jb
inc
dec
mov
inc
xchg
movsl
andl
mov
aam
lret
dec
in
push
push
cs
dec
lock
push
fld
test
and
les
rcrl
out
rcrl
test
push
cmp
loop
mov
rolb
add
sbb
and
dec
pushf
cmp
addb
js
leave
or
and
fwait
scas
and
jo
dec
sti
mov
sbb
mov
cld
mov
mov
frstor
jno
addr16
cwtl
dec
mov
outsb
add
fiaddl
pop
shrl
add
xor
pop
and
and
xchg
pop
sti
sub
sbb
adc
orb
xlat
in
inc
imul
or
cmp
add
pop
mov
rclb
scas
gs
pop
adc
cmp
and
mov
mov
insb
call
cmp
jns
paddd
in
pop
aas
push
inc
add
mov
loope
xchg
or
sub
push
push
movsb
fcoml
clc
push
pop
pop
ret
jae
cmp
mov
fidivs
andl
xlat
jo
sub
mov
rclb
test
lods
imulb
inc
movsb
inc
fstl
movsb
movswl
test
icebp
repnz
hlt
or
bound
mov
mov
lea
inc
and
dec
lret
cmp
ljmp
cmpsb
loopne
lods
xchg
sbb
mov
stc
pop
add
or
jne
inc
mov
test
sub
test
pop
test
jecxz
shll
xchg
incb
ljmp
shll
lock
movb
mov
dec
jg
dec
pop
add
imul
jmp
cli
sbb
add
popf
xchg
pop
fs
mov
insb
pop
das
cmpsl
mov
pop
not
mov
sbb
mov
push
aas
mov
movsb
xor
fmull
lods
stos
inc
into
insl
adc
jmp
sub
jmp
aam
pop
ds
add
loope
and
cmc
icebp
pop
mov
sti
push
in
in
cwtl
stos
out
popf
clc
lock
repnz
xor
xchg
pshufw
inc
enter
test
les
ja
jmp
mov
jo
rcrl
out
out
ficompl
xchg
xor
pop
inc
stos
push
cltd
mov
xchg
or
enter
adcl
fldcw
gs
repz
lcall
mov
dec
sbb
xor
mov
popa
mov
push
adc
popf
ljmp
adc
and
scas
nop
mov
pop
scas
in
mov
in
adc
loopne
cmc
aaa
pop
sbb
push
gs
and
int3
out
pop
lret
aam
lock
mov
or
xor
push
call
bound
lcall
and
xor
sub
xor
shll
mov
ret
cmc
cmc
jmp
outsb
addr16
jb
or
mov
push
mov
jns,pn
arpl
ja
rorb
jle
nop
adc
mov
out
cs
dec
adc
sbb
or
pop
xor
push
xchg
icebp
lods
lahf
push
loopne
sub
mov
mov
hlt
mov
or
fdivl
sub
cmp
mov
xor
sbb
xor
mov
pop
cli
pusha
les
fs
subb
push
pop
dec
int3
in
repnz
or
push
loopne
loope
sbb
sar
or
iret
cli
mov
xor
iret
sub
imul
insb
gs
mov
and
ret
std
outsb
sarl
xor
mov
xor
ficomps
xchg
aas
arpl
pop
dec
dec
in
int3
stos
xlat
sub
pop
mov
into
xchg
push
dec
sbb
pop
sbb
xchg
xlat
jno
stos
or
test
add
sbb
or
pop
ss
aaa
dec
jge
cmp
adcb
inc
pop
xchg
add
inc
add
mov
roll
cli
enter
mov
in
cmp
mov
adc
lea
rcll
or
in
add
rorl
hlt
in
fdivrl
call
aas
rcll
stos
jge
jne
daa
fcoms
mov
mov
int
mov
lahf
je
sbb
sub
lcall
dec
aas
pushf
mov
repz
fldt
in
push
out
sbbl
pushf
dec
xor
jno
xchg
test
test
adc
enter
notb
outsl
or
fmull
js
dec
aam
jb
ja
aad
std
xchg
cld
dec
inc
pop
pop
bound
aas
test
mov
loope
movsb
push
cmp
add
inc
cwtl
push
ja
cmpb
add
push
adc
jno
popa
and
push
add
jb
xchg
roll
rolb
loop
adc
jno
popa
and
push
add
jb
xchg
ret
lret
nop
rolb
loop
lret
js
and
push
sbb
push
adc
xchg
in
cmpb
mov
mov
and
push
in
mov
push
data16
popf
push
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
shlb
loopne
and
out
mov
mov
inc
and
add
adc
ljmp
shlb
cmc
xor
aad
mov
cmp
jo
outsb
add
xor
inc
leave
lods
fnstcw
in
cwtl
std
test
mov
push
das
insb
sbb
cmp
insb
daa
ja
mov
lock
loop
cmp
addr16
out
mov
push
sbb
adc
mov
das
mov
push
xor
lret
mov
cli
inc
adc
fistpll
add
add
cmp
pusha
cwtl
pop
xor
in
cli
adc
cld
fdivl
push
and
shr
rcrb
push
outsl
cmc
xor
fcmovnbe
inc
fildl
lahf
mov
dec
add
mov
xor
jge
add
outsl
xor
push
lods
push
leave
xchg
jno
nop
mov
iret
push
xor
cmp
shll
jg
inc
inc
aam
xchg
scas
pop
int
or
pop
push
test
push
and
mov
loopne
xchg
nop
in
aad
fmull
pop
cmp
or
jge
dec
and
movsl
xlat
xchg
lock
loopne
mul
test
mov
sub
add
add
adc
gs
cmp
mov
out
ljmp
repz
inc
and
pop
adc
inc
xor
icebp
mov
fadd
and
aad
lds
inc
and
adc
xor
inc
shlb
loopne
nop
cmc
and
aad
lds
inc
and
adc
xor
inc
shlb
xchg
xchg
jle
shlb
cltd
popa
cwtl
mov
jae
cmp
shlb
stos
pusha
inc
aam
pop
leave
mov
out
and
or
fwait
lea
xchg
insb
jg
dec
pushf
daa
mulb
mov
sti
lock
adc
pusha
cli
movsl
je
subb
fs
lret
pop
xchg
pop
mov
test
nop
dec
or
add
mov
push
xor
xor
mov
sahf
jl
lea
inc
ds
loope
pusha
repnz
or
movb
shll
mov
lcall
in
mov
jno
leave
rorb
subb
cmp
stos
mov
lods
push
jnp
add
es
cld
xchg
mov
loop
cmp
sub
imul
pop
movsb
sub
dec
jae
jb
xor
out
fimull
aam
mov
leave
stc
into
jg
gs
rcrl
pcmpeqw
test
mov
mov
movsb
mov
jns
inc
mov
test
xorl
enter
push
loop
sbb
cmp
addr16
in
mov
xor
popa
js
ret
lahf
pop
cs
outsb
push
fnstenv
fwait
out
out
repz
pop
rolb
cld
outsl
sub
lahf
dec
mov
fwait
das
lahf
out
add
aam
cmp
mov
loopne
aas
test
xchg
dec
shlb
gs
rcrb
xchg
test
dec
pop
dec
cmpsl
mov
mov
push
jb
sbb
out
cmp
roll
stos
lahf
sub
mov
scas
daa
mov
stc
js
ds
movsl
push
outsb
push
lods
pushf
lods
jno
sub
push
ds
call
fmull
mov
lret
pop
roll
jae
loope
stos
push
mov
mov
data16
and
mov
in
jle
stos
cmp
mov
push
xor
leave
inc
sub
divb
ret
push
imul
out
hlt
or
adc
mov
aas
loope
outsb
xor
xor
mov
push
pop
mov
iret
mov
popa
leave
and
movsl
cld
std
mov
or
xor
mov
test
jne
sub
addr16
lock
adc
cltd
cli
mov
sbb
int
xlat
repz
insl
xorb
fucomi
inc
pop
pop
adc
data16
inc
dec
shrb
jl
cmp
push
js
out
pop
lret
dec
mov
add
outsl
add
jl
pushf
aam
cmp
mov
nop
inc
cmp
mov
aas
daa
jo
mov
mov
adc
xor
gs
dec
out
jle
sbb
out
pop
inc
mov
pop
mov
aaa
mov
mov
lretw
xchg
fs
imul
mov
mov
and
dec
das
pop
cmp
shr
repnz
int
aaa
lds
mov
jnp
stc
mov
push
jle
adc
sub
pop
in
leave
fdivrs
int
test
push
cmp
jae
sub
xchg
or
popf
dec
dec
xor
inc
aaa
cld
jp
mov
and
cmp
lret
adc
cmp
mov
popf
xor
mov
cmp
xchg
clc
stos
sub
xor
adc
jno
je
mov
adc
mov
andl
push
je
rclb
mov
cli
andb
or
shll
cmp
xchg
stc
movsl
dec
push
and
jle
sub
pop
imul
cmpsl
cmp
testl
mov
push
xor
add
les
xor
inc
sbbb
decl
rcrl
iret
and
add
mov
imul
mov
xchg
or
push
outsl
cmc
sti
rclb
inc
xlat
addr16
cltd
mov
loop
lcall
arpl
stos
jp
and
sbb
jne
dec
fsubr
mov
inc
lds
out
xlat
add
shl
sbb
dec
pop
jl
jle
dec
dec
das
sbb
mov
pop
loope
xchg
fnsave
mov
cmp
std
out
arpl
xor
shrl
sbb
push
loope
push
daa
je
jl
mov
xchg
cs
sbb
cmpsb
lcall
cmc
lods
push
push
pop
push
pop
in
mov
cmp
inc
dec
scas
bound
out
mov
push
and
in
pusha
cmpsb
mov
xchg
and
and
adc
arpl
stos
and
or
jns
insl
pop
dec
cmpsb
enter
pop
aaa
jo
xlat
bound
loop
rol
add
mov
enter
mov
xor
xchg
mov
cltd
cmp
mov
or
mov
jb
mov
dec
fucomp
je
popf
sub
int3
loopne
popa
iret
lock
add
mov
lods
push
ds
dec
cltd
insl
cmpl
roll
out
in
cmc
fcoms
mov
sti
rorb
out
push
out
mov
fwait
xor
push
loope
pop
fsubp
inc
enter
into
add
dec
mov
mov
push
cld
repz
mov
pop
xor
sbb
mov
pop
xchg
in
fmulp
add
scas
sbb
sub
hlt
sbb
ret
bound
mov
fidivs
jae
xor
cmp
jno
fcompl
addr16
dec
xlat
cltd
pop
fnstcw
ds
in
ja
jge
xor
or
push
sub
push
jb
xchg
imul
inc
inc
inc
lods
shr
jo
hlt
push
aad
sub
in
lds
adc
test
push
hlt
jmp
pop
cmp
or
adc
shlb
push
and
lock
pop
cs
inc
xchg
cld
mov
fs
out
xchg
scas
cmp
jg
scas
sbb
xchg
cmp
cmp
lods
shlb
lods
sarb
add
xor
mov
xor
test
sub
xchg
xchg
iret
mov
pushf
pop
or
mov
and
mov
sbb
or
add
pop
mov
mov
add
lea
xchg
mov
inc
ret
popa
popa
outsb
fmul
and
rclb
dec
rclb
wbinvd
loop
mov
jg
cltd
pop
mov
ficomps
outsb
sub
iret
movd
adc
std
ss
sti
cmp
xchg
sub
rcl
pushl
sbb
pop
mov
imul
or
push
sbb
push
icebp
fidivrl
adc
not
mov
sub
hlt
outsb
pushf
sub
scas
ret
mov
cmp
lret
and
in
sub
mov
pop
cs
and
mov
lret
imul
scas
mov
push
push
int
loop
inc
repnz
inc
add
out
cltd
inc
push
inc
arpl
loopne
cmp
jb
fildl
imul
inc
js
insl
ss
cmpsb
sub
loopne
sub
pop
jp
push
lret
add
ret
arpl
addr16
imulb
dec
and
sahf
mov
fidivs
out
jno
shlb
daa
sbb
jp
ja
dec
xchg
add
dec
xchg
fcomi
cs
cmp
clc
andb
jbe
les
movsb
push
cli
imul
sub
cmp
sub
and
cmp
adc
loop
je
not
push
xchg
repnz
mov
je
ja
ja
push
sub
jns
mov
xchg
push
aad
loopne
ljmp
pop
cli
iret
cmp
insl
out
xchg
call
ja
call
repz
jle
in
mov
and
xor
ja
dec
sbb
ffreep
scas
jb
or
xchg
xchg
mov
adc
int
test
divb
fs
fs
sahf
das
xchg
out
push
dec
cmp
aas
jnp
pop
pop
cwtl
push
sbb
notb
pop
enter
sahf
jo
lcall
stc
mov
sbb
mov
das
leave
into
mov
add
xchg
mov
push
add
or
bound
jle
and
rolb
popf
xchg
out
shlb
pop
cmp
sub
push
jne
inc
cmp
unpckhps
mov
scas
cli
push
inc
ja
aad
mov
inc
jg
lock
sub
mov
andb
mov
sub
iret
out
out
clc
add
fwait
add
sbb
cwtl
inc
loop
sarl
ja
sub
mov
repz
jo
int
ja
jo
cmpl
rcll
lea
mov
or
dec
cmpsb
shll
clc
adc
cltd
push
jb
insb
pushf
mov
mov
ss
push
inc
test
lods
testl
bound
xor
mov
movl
nop
addr16
cltd
js
cltd
push
out
jns
test
add
fsubl
rorb
sbb
fdiv
add
das
clc
cmp
add
add
test
mov
cmc
adc
hlt
into
ja
mov
push
xchg
lods
pop
jp
nop
inc
leave
in
mov
dec
pushf
jmp
pop
incl
aam
shll
cmp
in
push
in
repnz
rorl
ss
mov
jbe
sub
lds
lahf
push
out
add
addl
inc
adc
fnstenv
or
test
adc
aam
and
in
scas
inc
push
adc
insb
sbb
icebp
jle
sbb
sub
inc
add
sarl
mov
mov
xor
jb
out
mov
pop
adc
leave
jns
js
pusha
mov
push
xlat
cmp
je
les
cmp
ja
and
or
jb
lods
xchg
clc
mov
push
jle
mov
inc
daa
in
out
repz
pop
test
adc
dec
jno
cmpl
pop
cs
int3
inc
sub
push
call
xchg
jg
mov
xlat
and
push
or
mov
pop
mov
outsl
and
out
das
jge
test
nop
mov
push
push
push
mov
lret
test
and
loope
mov
mov
mov
lahf
cmp
or
add
adc
jne
lcall
cli
mov
push
mov
hlt
lock
xor
out
add
pop
mov
nop
mov
cs
mov
push
icebp
xchg
adc
ljmp
dec
xchg
inc
mov
pop
fisttpll
adc
ret
inc
fwait
mov
mov
std
pop
lret
mov
fisubl
aas
ss
push
add
cmpsb
inc
aaa
aaa
dec
adc
pop
jno
and
sub
or
pop
push
popf
pop
dec
add
push
adc
add
shll
adc
sti
adc
dec
or
shll
jae
sbb
clc
mov
in
mov
lds
stc
lock
clc
or
mov
cltd
cmpb
sub
int
popf
push
inc
push
clc
xor
jg
pushf
cmp
mov
mov
pop
push
push
popa
clc
xor
pop
loope
dec
push
stos
jne
jbe
xor
je
jecxz
mov
popa
imul
sub
mov
maskmovq
imull
iret
in
insl
lahf
jp
mov
mov
lret
icebp
js
ret
sbb
in
das
cmp
or
mov
or
fnstcw
or
add
cmpsl
jbe
sbb
jg
test
mov
pop
mov
les
mov
adc
dec
cli
add
cmp
xor
sub
sbb
adc
stos
mov
mov
xor
xchg
push
dec
or
sbb
add
andb
lret
inc
pop
and
push
mov
pop
xor
jb
pusha
call
das
aas
cmpsb
test
int
mov
jbe
and
loope
mov
fiaddl
mov
out
cs
xchg
mov
imul
jne
mov
jmp
mov
jo
sahf
iret
xchg
mov
ss
push
sub
adc
cli
xchg
cld
addl
push
popa
adc
inc
mov
lret
pushf
sbb
add
xor
jbe
out
insl
lods
js
mov
dec
hlt
mov
cmp
mov
mov
mov
rcll
sbbl
jb
dec
push
jno
sbb
dec
push
rcr
lcall
or
sub
and
stos
mov
mov
scas
or
xchg
flds
xor
pop
pusha
loop
idivl
add
sub
and
inc
cmp
push
popf
je
mov
cmp
push
lret
inc
mov
leave
mov
jl
adc
push
movsb
in
xorl
pop
scas
or
xchg
icebp
jno
add
sbb
lret
sub
cmpb
jecxz
in
out
xchg
repz
dec
lock
roll
add
push
push
sbb
cmpl
jae
notl
enter
lds
xchg
int
sub
out
inc
outsl
out
adc
xchg
sub
mov
out
cs
out
ret
inc
pop
and
scas
add
add
xchg
xchg
jbe
inc
ljmp
sub
inc
and
adc
outsb
add
cmpl
sbb
cld
pop
adc
insl
sub
push
mov
popa
mov
test
xor
and
and
int
fnstsw
in
xchg
inc
pop
jae
cmp
lahf
add
jbe
xchg
stc
cwtl
xchg
xchg
jo
scas
mov
loope
mov
out
inc
mov
jl
sbb
data16
sub
in
dec
cmp
dec
pop
pop
or
dec
sbb
mov
bound
loope
int
push
mov
mov
outsb
mov
adc
nop
xchg
push
mov
or
mov
shr
ret
adc
adc
je
push
ret
mov
mov
sbb
mov
mov
repz
pop
add
lahf
and
or
jp
xor
and
cli
shll
lahf
pop
shlb
jno
xchg
fstl
repz
jns
sbbl
mov
clc
bnd
ja
push
mov
in
rcrl
cmp
and
pop
in
mov
arpl
xor
jb,pt
pop
int3
mov
cmc
lcall
pushf
fisttps
jo
dec
mov
fisubs
mov
stos
fs
insl
mov
mov
dec
xorl
int3
stos
add
and
mov
lods
mov
push
jecxz
xor
cmp
inc
leave
mov
out
outsl
mov
loopne
cmp
dec
add
daa
xor
xor
lret
dec
call
push
ret
pop
shll
jmp
or
jns
testl
fwait
loope
out
cs
loopne
test
lea
sub
inc
sub
push
das
lds
mov
aaa
pop
dec
xchg
mov
test
xor
xchg
or
mov
negl
cmc
push
adcl
jmp
scas
pop
and
outsl
inc
shll
fdivrl
cltd
ret
jge
cmp
push
shlb
pop
xchg
int
stos
mov
jo
jmp
hlt
js
sbb
add
jns
fwait
jecxz
jl
push
push
dec
in
cltd
ds
jno
cmp
mov
and
aam
leave
xchg
mov
mov
mov
push
outsl
add
dec
jg
dec
adc
test
jns
decb
mov
stos
stos
imul
lret
or
dec
push
xchg
sub
xchg
and
sti
sar
mov
dec
cli
jo
pop
popl
mov
loopne
int
or
mov
test
inc
pop
jecxz
mov
leave
mov
sar
sbb
rcrb
lcall
or
jno
jmp
jo
aaa
push
loopne
je
sub
call
fs
push
les
sbb
sbb
clc
fwait
pop
push
xor
sahf
cmp
xor
or
xchg
xchg
mov
xchg
pusha
pop
pop
pop
dec
outsb
jg
enter
mov
pop
jge
fcmovu
imul
mov
mov
add
or
stos
xchg
cmp
jge
mov
cmc
rol
or
pop
push
xchg
stos
sub
imul
and
sbbl
jl
mov
sti
repnz
in
mov
movl
sub
xchg
stc
jnp
insl
dec
loope
cmp
sub
jmp
push
scas
jo
lret
shl
pop
inc
leave
mov
shrb
pop
out
popa
movl
ljmp
mov
inc
and
mov
jg
pop
scas
das
xor
mov
std
ds
mov
adc
fdiv
cmp
push
mov
popa
sbb
fs
subb
adc
shlb
rorl
mov
test
adc
push
jo
clc
xor
insb
jmp
mov
mov
adc
stc
sbb
adc
jmp
push
pop
ror
enter
out
cmp
push
dec
cmpsl
jb
fdivl
cmp
xor
or
call
out
lret
sti
pop
mov
fistpll
dec
mov
daa
dec
out
fwait
jle
cli
adc
test
addb
dec
jbe
sub
xchg
int
lahf
pop
add
mov
insb
and
inc
sbb
into
pop
mov
in
mov
mov
cmc
jmp
rcrb
loop
adc
pop
das
sbb
in
lods
and
pop
pop
xor
xchg
leave
icebp
xor
mov
pop
sbb
mov
outsb
sahf
stos
xor
adcl
movsl
sub
lea
inc
in
insb
mov
mov
cmc
sub
cmc
pop
pop
cmp
popa
or
adc
dec
lret
sti
movsb
and
sti
cs
or
inc
jbe
stc
cmpsb
push
popf
xor
shrl
iret
inc
je
mov
lods
sub
lods
outsl
inc
test
jb
hlt
dec
test
cli
test
xchg
fisttps
mov
inc
clc
and
sub
add
mov
adc
imul
or
adc
cmp
inc
fs
sbb
lret
int3
cmp
add
loopne
mov
jmp
cmc
imul
push
stos
mov
inc
test
test
jmp
addl
out
in
and
stc
inc
sti
cmp
mov
xchg
mull
shrb
mov
or
test
mov
in
sub
lcall
add
or
out
into
cwtl
imul
mov
arpl
lcall
pop
ljmp
mov
sbb
xchg
lcall
and
in
popa
push
lods
js
or
aam
mov
mov
out
imul
jge
sub
mov
jb
repnz
aas
jae
lds
sub
pushf
ljmp
in
or
mov
push
in
out
hlt
ret
lods
push
and
mov
dec
push
popf
data16
mov
sbb
ja
sahf
fwait
out
cmp
jmp
add
push
stos
rclb
sub
xor
sbb
mov
mov
sub
aas
shrl
cmpsb
inc
cmp
inc
repz
stc
lock
nop
outsl
out
pusha
ss
mov
jne
xor
jns
xchg
cmp
xchg
sti
cbtw
inc
xor
push
add
addr16
push
mov
sbb
jmp
sti
out
cmp
rorl
in
jge
outsl
cwtl
repnz
jb
pop
arpl
icebp
xlat
test
lods
mov
add
pop
aaa
sbb
push
jmp
movsb
mov
ja
fisubs
mov
add
add
dec
pushf
inc
mov
cmc
inc
not
lret
out
cmp
or
ja
pop
std
ljmp
and
aas
int
call
mov
out
mov
outsb
sahf
xchg
push
xchg
or
pushf
in
clc
jno
js
or
mov
mov
mov
shll
xor
out
in
ret
jg
mov
pop
cltd
ror
jecxz
out
test
mov
push
addr16
cmp
push
mov
jp
ror
sub
mov
pop
imul
insb
into
push
std
les
stos
les
lock
xorl
cli
inc
xchg
aam
mov
lods
shrl
cmc
inc
icebp
dec
mov
jg
xor
xchg
lahf
cmp
pop
or
or
nop
mov
add
add
dec
push
js
cwtl
jns
or
lret
mov
xchg
add
mov
push
jl
cmp
xchg
insl
pop
cmp
mov
sarl
test
dec
lds
cmp
fstps
insb
mov
fwait
rcrb
daa
fsubrs
mov
bswap
push
lock
pusha
push
cld
inc
mov
mov
push
das
mov
mov
jae
pop
sbbb
rorl
je
shrb
xor
imul
pop
into
mov
and
enter
or
aaa
cmc
or
test
and
in
out
fdiv
movsb
adc
add
orl
loop
sahf
rcl
lds
xor
jmp
mov
jne
scas
dec
in
cli
xchg
loopne
nop
cmc
and
aad
lds
inc
and
adc
xor
inc
shlb
loopne
nop
cmc
and
aad
lds
inc
and
adc
xor
inc
shlb
loopne
nop
cmc
and
aad
lds
inc
and
adc
xor
inc
shlb
loopne
xchg
cmc
and
aad
add
ficoml
mov
iret
sub
cmp
or
sbb
push
or
mov
mov
clc
jmp
sub
cmp
or
sbb
dec
jns
dec
imul
mov
stc
stc
leave
jmp
cmp
or
sbb
dec
jns
dec
imul
in
int3
idivl
lods
xchg
jne
jns
rcl
imul
mov
clc
rcl
pusha
pop
mov
sub
pop
jns
hlt
repz
mov
and
and
mov
pushf
cmp
stc
fisttpl
pop
and
mov
xchg
sbb
cltd
test
push
addr16
or
jp
lods
adc
sbb
jns
inc
imul
cmp
lcall
jmp
cmp
mov
inc
xchg
jns
imul
jbe
cltd
mov
push
cmp
jo
das
mov
lods
adc
ret
scas
shlb
pop
mov
lods
clc
leave
test
inc
sub
cmp
or
sbb
dec
jns
dec
imul
mov
stc
stc
leave
jmp
inc
push
dec
addr16
sbb
sub
ds
sub
fcmove
jmp
xchg
mov
dec
push
dec
inc
popa
jp
sub
ja
int3
in
shr
lret
xchg
mov
lea
daa
push
insb
or
pop
dec
jns
dec
imul
mov
stc
stc
leave
jmp
cmp
or
sbb
dec
jns
dec
imul
mov
stc
stc
leave
jmp
adc
cmp
loop
pop
fsubp
or
cli
jl
fsub
mov
cmc
and
sti
push
cmp
in
xchg
sub
scas
int
sbb
ljmp
pusha
out
dec
inc
pop
js
fsts
popa
add
fisttps
jl
mov
movsl
cmpsl
cmp
sbb
push
stos
push
cmp
movl
insl
adc
pop
test
add
mov
cmpsl
push
cli
icebp
cltd
cmp
lods
in
outsb
mov
lods
nop
repz
lods
push
sbb
movsb
mov
pop
mov
ss
lea
cli
xor
jl
lret
mov
xor
sub
pop
dec
cli
fnstcw
xchg
inc
mov
insl
aad
les
lock
mov
fnsetpm(287
imul
jle
jmp
in
rorb
std
dec
jmp
lea
cmovs
in
mov
and
jno
fldl
inc
inc
adc
mov
adc
xchg
cmpsb
jmp
psrlw
pushf
xchg
or
mov
je
stos
mov
push
push
les
adc
pop
or
dec
sbb
insl
mov
dec
mov
dec
jne
dec
shll
xlat
sbb
std
push
ja
mov
dec
and
pop
mov
jg
sbb
push
mov
xchg
cmpl
call
dec
jnp
insl
mov
jl
inc
adc
mov
lods
or
fcomps
xor
mov
fcmovnbe
sti
mov
jmp
adc
mov
jmp
cmpsb
mov
mov
pop
fcomip
sub
xchg
mov
dec
in
jo
cmp
push
mov
fistpll
insl
ja,pt
and
into
mov
jbe
pop
les
int3
push
mov
insb
jge
jmp
dec
push
push
repnz
adc
call
rorb
lock
or
mov
mov
push
inc
cmp
xchg
fstpt
add
jns
popfw
jl
inc
mov
add
xor
mov
das
or
mov
sti
int
dec
clc
xor
inc
popf
out
bound
fcmovbe
jae
aam
cmp
std
mov
jo
andl
sbb
inc
hlt
mov
push
popl
jbe
cwtl
sub
mov
mov
outsb
stos
push
shll
lea
insb
inc
notl
mov
xchg
jbe
fbstp
push
adc
push
xchg
js
ja
jge
cmpsl
xlat
adc
jge
pop
mov
call
cltd
jo
mov
insl
jp
sbb
call
dec
push
fwait
jbe
sbb
cltd
jg
es
jns
dec
inc
push
movsb
scas
xchg
inc
daa
adc
mov
mov
clc
inc
aam
and
cmp
ss
or
push
jp
push
mov
cmp
in
dec
inc
jge
or
xor
xchg
mov
jo
pop
ret
dec
mov
dec
jle
jg
push
cld
xchg
dec
inc
loope
push
pop
daa
xchg
cld
fildll
inc
inc
add
ror
popa
hlt
pop
dec
sub
push
and
dec
mov
into
cmpsl
or
call
cwtl
xor
pop
pop
aad
mov
xchg
mov
cmp
jbe
insl
jmp
icebp
inc
lahf
mov
lock
jl
mov
jne
ljmp
out
push
rcll
loopne
or
or
repnz
insb
xor
cmp
data16
sahf
clc
leave
ret
pop
sub
mov
pop
or
roll
xor
mov
xchg
gs
xor
int
dec
adc
stos
xor
fiaddl
hlt
sub
ds
pop
add
push
gs
sub
or
mov
fdivl
xchg
testl
rcrl
pop
xchg
xor
or
and
xor
shl
inc
cld
es
insb
fwait
jp
jnp
pop
imul
movsb
mov
inc
inc
aaa
pop
out
jg
shll
sub
daa
arpl
jg
aaa
xor
shr
cwtl
mov
dec
add
cmpsl
sub
sbb
dec
push
pop
pop
xor
or
mov
pop
fidivrl
filds
sbb
ror
push
xchg
arpl
dec
in
jl
mov
lock
or
jno
in
lcall
sbb
sub
jnp
xor
in
icebp
mov
adc
push
movsl
loope
mov
icebp
hlt
aas
clc
sbb
mov
xchg
adc
cwtl
shl
pop
rcr
stos
add
inc
mov
pop
xchg
xlat
pusha
sub
lods
sub
sub
jl
inc
jnp
xchg
movsl
loop
daa
enter
and
sub
ror
push
outsl
adc
lods
push
and
sub
inc
jp
sbb
cmp
sar
xlat
sub
pop
and
jecxz
push
push
mov
imul
fs
dec
ror
push
lret
jmp
xor
pushf
sub
je
push
or
cmc
pop
xor
hlt
push
push
jae
mov
cmp
fs
lds
cs
jns
imul
xor
in
int3
mov
cmc
cmp
mov
sbb
out
sbb
and
fisubrs
mov
and
jge,pn
inc
dec
fcomps
mov
ficompl
sbb
adc
xchg
mov
sub
jmp
mov
adc
mov
clc
cmc
fidivs
cs
sub
mov
ja
filds
mov
stos
out
movsb
adcb
decl
cmpl
cmp
mov
xchg
and
lds
xor
mov
mov
add
pop
ror
daa
adc
add
sbb
mov
adc
jg
xor
clc
adc
cli
ffreep
mov
push
adc
movsb
pushf
je
test
mov
or
rclb
bound
fistl
push
sbb
cwtl
pop
mov
sub
jns
in
icebp
cmp
mov
rcr
icebp
testb
inc
mov
inc
imul
mov
pop
jno
xchg
movsl
cmp
into
mov
mov
inc
pop
cmp
mov
and
ss
or
outsb
sub
das
push
lods
pop
insl
sti
subl
addr16
and
ljmp
add
dec
mov
add
aam
xchg
aaa
pop
push
inc
aad
dec
sub
pop
or
lcall
ss
sbb
mov
mov
inc
xchg
and
insb
mov
add
jl
xchg
out
repz
insl
outsb
mov
or
dec
outsb
push
inc
jnp
icebp
inc
test
imul
sub
popf
push
push
sub
je
mov
sarl
lret
fsubr
or
pop
mov
loope
andb
js
mov
add
mov
data16
pop
iret
sub
mov
nop
test
jg
ds
or
outsl
sub
adc
xchg
dec
sub
or
lods
rcr
xorb
scas
inc
jns
int3
sub
pmaxub
adc
mov
xchg
scas
rcll
add
enter
fcoms
aad
mov
cmpsl
mov
xor
push
enter
pop
fwait
test
push
xor
in
sti
push
inc
add
and
notb
sub
and
push
lods
repnz
test
test
mov
movsb
cmp
push
or
inc
int
ficoms
out
arpl
pop
push
leave
mov
div
mov
xchg
dec
add
out
nop
mov
sub
and
and
dec
int
mov
and
inc
loopne
dec
inc
inc
and
stos
sahf
or
push
xchg
add
nop
inc
xor
inc
shr
ret
sahf
rcll
mov
test
inc
stc
mov
jno
adc
lea
and
out
push
cmp
mov
mov
sbb
dec
hlt
cmp
jp
xor
or
rcll
jp
sub
jbe
or
mov
lds
fistpll
and
inc
sbb
inc
adc
packssdw
jno
out
fisttps
mov
sbb
sarb
shll
stos
sub
daa
js
xor
data16
cld
daa
add
xchg
xchg
mov
stos
cmpsl
dec
push
jno
sbb
mov
cwtl
jle
sub
push
int3
cmpsb
sub
mov
mov
into
rclb
pop
or
mov
pop
jne
add
sti
imul
stc
lcall
sahf
rcrb
xchg
sti
push
cld
into
stos
and
xchg
cmp
div
sti
mov
aas
daa
outsb
lds
test
pop
and
pushf
push
dec
lret
arpl
pop
in
aad
adc
jp
out
xor
dec
pslld
pop
ret
add
sbb
lock
icebp
dec
jae
pop
xchg
daa
mov
out
mov
mov
inc
mov
fwait
mov
jae
push
xchg
lret
out
fcomps
push
cmpsb
loope
stos
je
call
leave
scas
mov
fcomi
sbb
jbe
mov
ret
insl
mov
aas
jns
push
imul
sbb
fadds
movsl
idivb
mov
stos
filds
push
push
mov
in
aam
mov
iret
mov
int
cmp
bound
pop
sub
jo
or
mov
mov
pop
insb
scas
jge
xor
jmp
out
jbe
xor
sub
adc
adc
pop
and
pop
push
gs
ret
xchg
lcall
cmp
dec
jae
pop
insl
adc
insl
adc
cmp
popf
xchg
xlat
push
inc
mov
pop
jno
js
xor
lds
xor
adc
jge
cmp
hlt
xchg
into
pusha
insb
sub
adc
and
cmp
adc
mov
and
imul
pop
push
sbb
jl
mov
jmp
sbb
pop
push
pop
pushf
xchg
add
pop
cmc
lock
mov
outsl
inc
jmp
divl
iret
xlat
aad
push
jbe
jb
addl
push
out
repz
shll
mov
mov
inc
iretw
in
sbb
mov
mov
ret
or
sub
push
iret
imul
lcall
stc
xor
rolb
push
ljmp
mov
or
negb
gs
lahf
nop
test
mov
aaa
popa
fadds
inc
sbb
ja
sbb
sti
sbb
inc
scas
inc
adc
arpl
push
negl
xchg
cmpb
mov
lock
stos
push
jge
cmc
fwait
xor
cmp
mov
xor
cltd
test
pop
in
addr16
cmp
or
lods
cmp
xchg
stc
fbstp
jge
clc
outsl
scas
push
mov
pop
test
dec
sub
je
mov
je
ljmp
xor
repz
hlt
sbb
jb
mov
repz
mov
jecxz
int3
insb
leave
aaa
inc
and
sbb
dec
adc
cmp
in
fmuls
repnz
ficoms
push
or
pop
sub
cmp
icebp
inc
shr
mov
push
push
cmp
aam
sub
adc
pop
jnp
xor
clc
push
aam
bound
stos
hlt
xor
shlb
mov
cmpsb
rorb
sub
mov
pop
mov
sub
inc
rcrb
rclb
inc
jle
inc
cmp
pop
inc
sbb
pop
push
leave
and
pop
rorl
outsl
stc
cmpsb
add
inc
repz
and
icebp
hlt
fucomi
dec
xchg
cmp
lods
mov
int
sub
xchg
cmp
inc
push
mov
sbb
lahf
js
lret
std
mov
add
lods
xor
inc
fdivrs
cmp
inc
sbb
test
mov
xchg
sbb
dec
pop
pop
jmp
adc
ror
mov
xchg
pop
sbb
xchg
cmpsb
dec
repz
mov
cmpsb
xchg
in
icebp
push
int
mov
or
mov
popa
ja
mov
pop
mov
lds
orb
mul
inc
and
leave
lods
pop
lea
inc
inc
pop
jne
xchg
movsl
pop
decl
xor
dec
mov
mov
xor
inc
repz
dec
cmc
cmp
xchg
testb
jmp
mov
adc
sub
sbb
mov
push
push
ljmp
jp
add
mov
and
outsb
stc
pop
inc
hlt
mov
xor
push
pop
imul
insl
dec
pop
outsl
pop
inc
fnsave
aad
loopne
fcompl
inc
and
int
outsb
mov
pop
mov
int
fcmovne
sbb
into
popf
repnz
sub
out
and
jl
cmp
sbb
xor
adc
ror
pop
dec
addb
stc
dec
cmp
int
int3
cmp
pop
or
enter
outsl
or
xchg
cmpl
dec
sub
int3
jbe
fdivr
cmc
pop
xlat
xchg
inc
push
stos
mov
fwait
inc
jecxz
pop
enter
push
or
stos
movsl
stos
movsb
lods
das
mov
or
iret
adc
xlat
int
add
rorl
push
jns
fldt
sbb
cmp
or
cmp
mov
mov
adc
lods
cmp
dec
in
fs
rcl
sbb
or
das
ret
add
jl
mov
jbe
aas
cmp
mov
adc
pop
in
pop
and
lret
mov
xor
sbb
xchg
fildll
lods
sbb
cmpsb
or
sub
sub
jbe
clc
mov
jne
imul
call
cmp
popa
and
jne
dec
bound
jmp
les
ror
or
ja
call
outsb
lea
push
mov
je
mov
push
fldenv
arpl
pop
arpl
in
sub
mov
mov
loop
pop
dec
sbb
ret
rcrb
in
mov
sbb
out
xchg
dec
add
cmp
and
inc
sub
adc
jg
int3
cmp
push
ret
cmp
jo
mov
sarl
lea
sarl
in
adc
call
popa
push
mov
inc
xchg
ficoms
push
inc
jo
jmp
dec
pushf
hlt
jg
sbb
js
shrb
call
cmc
cmpsl
inc
push
sub
sbb
test
mov
in
sbb
mov
jmp
stc
outsl
sub
adc
push
pop
or
bound
cmp
xchg
arpl
loop
ds
fimull
inc
jle
adc
loope
stc
jno
pop
mov
xlat
sbbl
daa
testb
rcrb
dec
xchg
adcl
xchg
push
repz
in
jp
xchg
push
ror
in
sbb
cmp
pop
cmp
and
clc
call
mov
mov
xchg
sub
sti
adc
xchg
add
add
pop
stc
test
mov
cmp
fadds
imul
fcmovne
cli
add
enter
lds
jmp
cmp
inc
jmp
inc
sbb
dec
addb
mov
jp
or
sti
iret
xchg
mov
call
rep
xchg
or
pop
incb
aas
sub
jne
movsl
movsb
or
inc
pop
jb
adc
mov
cmp
or
shll
test
notl
repz
mov
je
jg
aaa
hlt
or
adc
out
inc
dec
adc
ljmp
pop
and
push
bound
pop
xchg
lock
mov
and
mov
mov
fwait
rorl
out
scas
sub
das
jnp
stos
jmp
sbb
pop
loope
pop
sarl
data16
xor
and
mov
outsl
add
das
loope
or
dec
or
mov
sbb
loopne
and
cmp
mov
xchg
inc
aam
inc
dec
ret
icebp
adc
imul
sub
arpl
push
mov
pop
lahf
popa
push
int
cmp
faddl
in
test
xchg
das
int3
mov
sbb
mov
push
push
pop
dec
cli
xchg
stos
cmp
outsb
subl
push
add
shrb
loop
jns
push
std
outsl
sbb
stos
pushf
sub
mov
fdivrl
xchg
out
into
insb
cmp
in
cmc
fistl
jl
ljmp
sub
cltd
in
loopne
pusha
mov
mov
and
mov
dec
outsl
out
lahf
or
dec
add
adc
mov
pop
xor
jle
cwtl
mov
sub
sbb
or
and
imul
ss
xchg
jge
mov
and
mov
inc
sbb
sbb
sbb
push
pop
jo
iret
popf
jnp
popa
ljmp
fisubl
inc
mov
fbld
sub
movsl
addl
movsb
inc
popa
insb
fildl
lock
cmp
fcmovnbe
loope
cmp
xchg
mov
lcall
test
sub
jns
add
lods
push
push
pop
pop
mov
push
insl
cwtl
mov
ret
mov
xchg
xlat
xor
xor
mov
in
aaa
imul
lahf
rcrb
dec
inc
ret
adc
jl
pop
shl
cli
aam
cmp
inc
cmp
loopne
inc
jg
mov
sbb
pop
push
jb
sti
jecxz
pop
bound
push
insl
push
mov
jo
pop
xchg
sbbb
pop
and
movsb
lret
orb
jbe
fucompp
sub
mov
or
push
xchg
lcall
inc
loopne
shll
ja
xor
mov
xor
or
dec
adc
sbb
lods
pop
sub
xchg
cmp
stc
jbe
jns
adc
jb
push
inc
ljmp
cld
sbb
inc
pushf
xor
movl
sbb
push
sbb
xchg
hlt
pop
or
xor
xor
add
hlt
test
mov
inc
xor
addr16
inc
or
pop
mov
std
cmp
adc
sub
popfw
dec
pop
test
pop
rolb
std
jp
push
xor
pop
imul
fcomps
cmpsb
dec
add
pop
xchg
adc
dec
and
je
push
roll
mov
mov
xchg
or
mov
adc
incl
es
pop
add
nop
or
int3
and
movsl
loope
ja
fisttps
mov
ja
cmp
and
lcall
pop
ror
mov
es
push
iret
int3
lahf
inc
add
js
call
fcomps
ficomps
out
or
fstps
jbe
cmp
and
rcr
xchg
push
inc
fildl
adc
sti
pop
cltd
sbb
inc
and
sbb
icebp
push
xchg
jnp
js
mov
in
add
je
mov
loopne
cmp
add
xchg
jp
jne
movsl
cld
psrlq
cmp
add
les
jle
sbb
add
sub
in
xchg
test
jno
stos
fsubs
sbb
aas
sbb
cmp
pushf
das
pop
adc
jae
ljmp
lahf
lret
lcall
cmp
jbe
enter
hlt
pusha
dec
into
testb
arpl
cld
push
repz
xor
fildll
jb
ftst
clc
xor
stc
jbe
hlt
into
cmp
pop
xor
popa
jecxz
push
enter
mov
pop
sbb
lret
popf
fldenv
fildl
pop
or
mov
mov
or
inc
outsb
pop
or
mov
fstpl
mov
pop
mov
sub
mov
xchg
inc
and
lret
jg
fnstsw
mov
test
xor
jecxz
ja
inc
aas
andl
insb
pop
or
push
and
jns
xchg
jno
int3
xor
adc
jl
in
test
mov
mov
fmull
sbbl
sbb
jo
sbb
xchg
pop
mov
or
data16
in
call
int
cmp
mov
std
jo
mov
insl
push
test
mov
mov
sti
imul
cwtl
movsb
in
cli
nop
mov
pop
cs
cmp
pop
xchg
pushf
pushl
mov
negl
shl
lret
sbb
loop
mov
push
mov
pop
xadd
inc
pop
or
imul
pusha
xchg
mov
and
pop
rcrb
add
enter
out
pusha
nop
aaa
ficompl
jae
push
mov
icebp
les
xor
lret
lcall
fwait
hlt
aad
fucomip
mov
mov
shlb
sbb
sub
adc
mov
jle
adc
cmp
adc
in
fisttpll
mov
jecxz
adc
outsl
jp
inc
sbbb
xlat
inc
pop
sub
or
xchg
mov
lock
mov
loopne
aaa
sahf
push
dec
test
inc
out
test
loopne
dec
inc
jo
pusha
xor
pop
cmc
loopne
xor
gs
xchg
cmp
mov
test
ret
cmp
pop
leave
sahf
sti
add
movsb
test
inc
inc
cmp
cmp
or
sbb
dec
jns
dec
imul
mov
stc
stc
leave
jmp
cmp
or
sbb
dec
jns
dec
imul
mov
stc
stc
leave
jmp
cmp
or
sbb
dec
jns
dec
imul
mov
stc
stc
leave
call
cmp
or
sbb
dec
jns
dec
imul
scas
popa
inc
push
push
ss
es
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
mull
outsl
jp
aad
stc
jo
das
ja
retw
push
out
inc
in
aaa
lahf
daa
pop
scas
pop
scas
negl
dec
xlat
jg
outsl
mov
cmpsl
seta
xchg
ja
addr16
push
filds
idiv
daa
pop
pop
mov
out
xlat
addr16
jbe
push
cmpsl
pop
xchg
daa
xchg
cmp
dec
loope
jmp
andl
or
pushf
mov
test
fdivrp
xchg
inc
inc
add
mov
idivl
xchg
dec
xchg
cmpsl
icebp
imul
mov
fiaddl
mov
cmpsl
mov
mov
cmp
rorb
sbb
fld
ja
xor
push
inc
xchg
pop
jb
pop
scas
testl
pop
nop
aas
mov
adc
sar
loop
test
int3
addr16
xor
pop
scas
aaa
cmpb
out
aas
cmpsl
repz
ret
push
xor
sarb
fadds
inc
mov
sbb
jne
push
out
sbb
xchg
fldt
int3
stos
cli
push
inc
xchg
xlat
outsl
jne
pop
cmpsl
seta
xchg
ja
xlat
push
out
divb
xchg
cwtl
pop
mov
xchg
dec
mov
dec
aad
repz
test
mov
mov
stos
aas
xorb
daa
fdivl
ret
orb
stos
push
insb
loop
out
pop
aad
adc
inc
lods
ss
dec
loopne
shll
xchg
push
out
mov
jae
seta
xchg
ja
addr16
push
incl
aaa
lahf
daa
pop
mov
out
xlat
jg
outsl
mov
cmpsl
seta
xchg
ja
addr16
push
incl
aaa
lahf
daa
pop
mov
ret
pop
call
cmp
fisttpl
jns
les
xchg
cmp
push
data16
inc
popf
jg
dec
pusha
cwtl
mov
test
in
test
lahf
test
inc
lock
insb
mov
xchg
out
cmp
mov
cmp
push
adc
add
nop
cmpsb
pop
mov
sub
inc
mov
xchg
and
flds
jmp
push
out
add
push
sbb
mov
and
fwait
rolb
lahf
outsl
sub
mov
cs
aas
cwtl
and
inc
mov
pushf
pushf
push
out
hlt
fsts
jl
nop
ret
or
ffree
loope
in
je
jp
btc
cmp
out
scas
fs
sub
and
cmpsb
mov
push
insl
push
mov
das
mov
fs
adc
or
push
incb
clc
hlt
nop
and
cmpsl
popf
mov
jb
xchg
shr
xchg
sbb
roll
mov
add
xchg
pop
test
mov
mov
stos
rorl
outsl
popf
and
mov
into
dec
adc
and
cmp
aam
sub
aaa
aaa
in
dec
adc
and
mov
cmp
mov
push
hlt
lcall
or
mov
mov
dec
sub
stos
es
mov
in
inc
mov
and
push
ds
inc
nop
or
insl
xchg
leave
js
fistps
sub
mov
hlt
outsb
mov
pop
aaa
xchg
or
jl
jmp
adc
cmpsl
mov
xchg
push
or
das
xchg
adc
fiaddl
push
in
or
cmc
mov
cli
test
and
add
in
push
sbb
nop
cmp
mov
cmp
repnz
out
lea
jnp
mov
addr16
mov
cli
frstor
xlat
sub
jb
andb
push
adc
xlat
jl
adc
pop
push
push
pop
sub
or
dec
out
jbe
popa
sbb
mov
xchg
xlat
mov
or
outsl
repnz
test
mov
or
test
out
add
rcrb
push
stos
sub
push
fld
dec
out
push
inc
inc
add
stc
jnp
ss
cld
test
xlat
shll
push
orb
sub
mov
inc
cld
scas
add
sbb
fisubs
fimuls
test
fildll
jae
insb
mov
out
push
push
sahf
xor
popf
jae
pop
hlt
mov
xor
add
xchg
jbe
dec
jg
pop
sub
xchg
ljmp
cmp
lods
cmc
mov
aad
shrl
jmp
jno
iret
clc
addb
repnz
inc
jmp
nop
mov
push
dec
pop
or
shrl
mov
hlt
push
xor
pusha
sub
and
in
add
and
stc
je
int
jg
lret
jmp
jbe
inc
xchg
test
fnsave
enter
int
mov
es
sub
xchg
sbb
orl
arpl
pop
xor
mov
xchg
loop
addr16
rorl
cmp
out
dec
push
jmp
mov
rorb
fs
cld
imul
cmp
mov
out
outsb
mov
xor
xchg
dec
out
jle
pop
fildl
clts
mov
lret
jno
mov
jb
sub
xor
pushf
insb
in
jae
in
movsl
sub
pop
push
inc
les
mov
iret
sahf
faddl
jbe
lea
jns
mov
pop
ret
ljmp
in
ja
inc
push
inc
inc
jg
or
and
arpl
and
imul
lea
add
adcb
int3
inc
or
push
into
popa
fistpl
scas
push
cs
stos
cmp
xor
jmp
jp
hlt
fldenv
pop
dec
testb
cltd
jo
xor
in
mov
aam
pop
dec
jns
aaa
add
fwait
xor
imul
sub
mov
je
lea
xor
gs
stos
cmc
push
dec
xchg
pop
adc
jl
ljmp
fidivs
outsl
push
jne
dec
pop
sub
mov
sub
ljmp
mov
add
arpl
into
or
mov
push
dec
inc
js
mov
je
enter
and
fidivl
mov
push
mov
jnp
sbb
xor
dec
mov
jmp
xchg
adc
cmc
dec
cmp
xchg
pop
andl
out
sbb
lds
sbbl
mov
outsb
movsl
xlat
xchg
push
dec
adc
mov
mov
xorb
and
pop
dec
mov
ss
test
mov
push
addr16
out
dec
and
ja
mov
dec
hlt
inc
loope
adcl
in
test
imul
sbb
push
pop
and
in
pop
popa
pop
adcl
imul
cmc
cli
outsb
mov
cltd
and
hlt
and
jae
pop
in
jecxz
iret
scas
adc
or
xchg
fs
stos
fs
push
or
adc
jb
mov
mov
hlt
sub
icebp
dec
pop
mov
adc
push
mov
fidivrl
mov
cmp
enter
jle
xor
mov
push
add
jae
inc
out
iret
pop
or
and
dec
stos
sahf
inc
lret
fnstcw
rcl
test
or
fcomps
mov
mov
loopne
cmp
jae
xlat
test
push
inc
int3
cmp
fnstenv
aam
push
or
mov
or
mov
xchg
cmc
xchg
jb
int
sub
mov
int3
or
pusha
addl
stc
imul
in
test
shlb
clc
ret
sub
lea
dec
xchg
out
insl
cld
ds
mov
stos
sbb
xchg
popf
pop
int3
dec
mov
jnp
addr16
pop
mov
arpl
adcl
push
mov
xor
or
rclb
mov
mov
cmp
ljmp
popa
in
fcomp
mov
daa
in
mov
loopne
pusha
in
lret
outsl
dec
jp
xchg
pop
inc
add
adc
push
loop
xor
xchg
mov
cmp
lods
cmp
cmp
nop
cmp
gs
andl
adc
lcall
outsb
cmp
sbb
ret
and
hlt
std
xchg
clc
daa
sbb
scas
inc
adc
xchg
mov
jge
out
or
out
jmp
pop
jl
pop
push
sbb
mov
cmp
cmp
xchg
and
frstor
dec
lock
ds
stos
loop
or
insl
out
sbb
fidivrs
aas
jne
into
pop
ja
imul
mov
jge
gs
mov
pop
aam
mov
jnp
xchg
pop
icebp
movsb
rolb
inc
dec
add
pop
cmp
mov
ror
imul
jl
adc
fld
and
adc
cltd
fbstp
inc
out
push
rcr
mov
xchg
cmp
mov
addl
push
inc
xchg
int
inc
xor
pop
lret
fsubr
lret
and
jo
jnp
adc
pushf
int3
cwtl
mov
lods
loop
divb
in
push
sbb
stc
jle
dec
lret
jo
loop
mov
aaa
inc
ret
jb
std
jb
sahf
adc
sbb
mov
sti
cmc
ds
icebp
jne
dec
and
repnz
push
popa
js
mov
insl
dec
dec
jae
or
xchg
lock
cmpsl
xchg
ficoml
lret
sub
cs
mov
mov
xor
cmpsb
pop
push
fwait
push
mov
mov
callw
mov
in
pop
mov
dec
sub
jl
cwtl
adc
mov
js
imul
add
ret
test
loopne
fmuls
add
xchg
test
adc
cmpsl
mov
mov
inc
inc
andl
sbb
mov
fnsave
outsb
cmp
push
and
jbe
neg
cld
ret
fdivs
jmp
dec
pop
mov
cmp
nop
push
int
push
push
or
jno
adc
mov
pop
stos
dec
sub
loopne
hlt
rcr
in
nop
xlat
jne
gs
cmp
or
xor
or
mov
cmp
push
inc
mov
scas
pop
sbb
or
das
push
adc
out
stc
sub
adcb
sbb
inc
ret
inc
lret
mov
push
enter
xchg
fmulp
into
jns
hlt
fucomip
dec
sahf
add
test
mov
daa
push
mov
sub
inc
mov
repnz
ret
inc
xor
pop
mov
mov
stos
mov
sbb
dec
into
adc
test
into
cltd
cmpsl
or
and
push
call
jnp
test
push
test
pop
jl
cli
movsb
cmpsb
test
cmpsb
arpl
jge
and
clc
mov
xchg
cld
xchg
faddl
ljmp
dec
jb
mov
addl
je
fnsave
jge
cmp
loopne
out
subl
pop
lcall
in
loope
jmp
jg
push
push
mov
int3
jecxz
adc
sbb
cmpsb
out
mov
loope
mov
aad
add
lea
outsl
sbb
nop
out
sbb
xchg
pop
pusha
mov
dec
dec
push
mov
cmc
xor
inc
sti
clc
add
out
mov
dec
rclb
fstl
push
or
sub
and
jmp
imul
sub
cmp
imul
pop
fbstp
push
inc
cmp
insb
cmp
sbb
xor
xchg
inc
test
pop
mov
cmp
jle
imulb
inc
mov
in
loope
repz
pop
imul
jne
xlat
mov
pop
pop
push
shll
add
push
inc
repnz
sub
xor
and
subl
roll
adc
xchg
inc
cs
int
or
xor
call
jl
popf
cmc
in
mov
sbbb
jge
out
dec
mov
xchg
test
mov
cmp
js
jno
jnp
cmpsb
and
jbe
inc
shll
fwait
rcrl
outsb
pop
aas
jmp
dec
push
out
outsl
push
nop
lods
sub
loopne
jmp
dec
sbb
pop
loope
aaa
call
mov
int
in
ficompl
mov
fistps
ret
lock
movb
inc
jecxz
jns
fidivs
mov
jo
les
movsb
and
jne
xchg
je
movsb
clc
test
cmp
lods
fisubrs
adc
jp
mov
pop
push
and
lods
stos
decl
mov
pop
push
jge
fisubrs
inc
pop
inc
test
dec
xorl
sbb
jnp
jne
out
andb
divb
cmc
sub
out
loopne
mov
lea
xor
xchg
lods
bound
popa
into
add
sub
jns
hlt
test
or
inc
adc
addr16
push
dec
rclb
jecxz,pn
shrl
mov
pop
push
cmp
prefetcht0
gs
popf
push
jne
arpl
add
cmp
enter
dec
cmp
loop
xchg
sub
test
inc
js
inc
add
mov
clc
hlt
cmp
sbb
jb
xor
sub
lahf
jbe
rcrl
cmc
ds
sub
in
cmp
mov
leave
nop
mov
ror
inc
dec
or
arpl
dec
mov
inc
pop
sbb
out
mov
call
jbe
imul
movsl
jmp
repnz
lret
in
sbb
and
or
push
insl
ljmp
lret
push
or
xchg
mov
mov
sub
shll
js
pop
out
pop
lods
xchg
js
cmp
sti
pop
test
ret
cli
sbb
cli
cmp
lret
insl
lds
lds
mov
adc
adc
mov
mov
add
test
shrb
dec
jecxz
push
aas
mov
and
mov
push
jo
adc
es
in
test
movsl
mov
jb
fstpt
mov
mov
in
addr16
aad
aaa
dec
mov
mov
inc
push
mov
xchg
sub
call
mov
gs
fcomp
xchg
lods
jb
ret
iret
lock
mov
jl
outsb
mov
xlat
or
fimull
jo
out
pop
push
xchg
jo
sub
repz
pop
cmp
inc
sbb
clc
out
fistl
sbb
jl
inc
in
dec
push
lcall
out
out
sbb
inc
out
add
mov
adc
sarb
pop
mov
xchg
clc
fstpt
aad
add
pop
std
xchg
push
dec
xchg
rcll
fbstp
or
shll
xchg
stos
mov
popa
stos
out
in
xchg
jno
sbb
cmpsb
sub
dec
data16
sub
out
js
dec
out
ror
inc
push
jg
icebp
ljmp
ret
arpl
sti
xchg
and
and
mov
fsubr
paddq
imull
sub
xor
data16
gs
in
xchg
clc
jae
mov
movntq
nop
shl
inc
fiaddl
bound
sub
fwait
insb
mov
pop
jns
imul
inc
dec
leave
stos
push
inc
cwtl
enter
out
push
leave
dec
push
mov
divb
sbb
add
in
mov
pop
repnz
push
outsl
mov
lret
loopne
sti
push
js
mov
sub
das
pop
adc
sbb
xchg
hlt
mov
jmp
push
xor
xchg
and
push
icebp
and
ds
adc
push
and
add
xchg
fcmovnu
sahf
repnz
sub
test
jg
mov
adc
or
pop
repz
jne
jge
lret
imul
or
mov
or
push
or
add
popf
xchg
emms
jae
push
cmc
jns
dec
lret
test
and
aaa
inc
push
xchg
mov
push
adc
daa
cwtl
enter
mov
xor
ds
mov
push
and
xor
xor
movsl
and
inc
mov
popl
je
decl
pop
clc
cmp
jns
scas
inc
mov
jbe
mov
ljmp
inc
push
ds
pop
cmc
adc
imul
dec
test
or
dec
in
jb
sbb
hlt
mov
inc
enter
xor
and
nop
ret
or
mov
enter
movsl
into
test
je
into
cmpsb
fbld
pop
inc
ret
aas
fwait
iret
dec
push
mov
popf
lock
dec
ffreep
mov
add
cmp
inc
jp
mov
mov
jle,pn
mov
pop
into
cmpsb
adc
xchg
xlat
mov
hlt
inc
rorb
das
and
push
inc
mov
pop
sub
sbb
pop
lahf
or
jp
inc
jno
jmp
push
lock
idivb
jae
push
cmpsl
and
pop
popa
cltd
mov
cmp
mov
mov
add
outsb
cmp
mov
stc
xor
mov
mov
rorl
sub
popf
sbb
and
xchg
ret
jbe
push
mov
lds
inc
sub
jno
push
and
loopne
rsm
dec
jg
mov
jbe
sub
lahf
inc
fs
lods
xchg
inc
add
testl
ljmp
adc
jl
sbb
xor
inc
out
mov
aas
adcl
xor
out
xchg
jo
test
xchg
mov
mov
jmp
int3
pop
imul
sbb
mov
mov
fisttpll
sbb
int3
adc
movsl
cld
loope
fildll
xchg
rorl
fdivp
sub
lcall
leave
les
xchg
ds
mov
and
test
bound
mov
cmp
mov
sub
xor
sbb
inc
in
mov
push
mov
cmp
fnstcw
cmp
push
cmpsb
int
mov
push
aaa
mov
iret
ss
or
xchg
dec
or
xor
add
push
jge
dec
cmp
cmpl
adc
pop
scas
int
cmp
dec
in
push
imul
mov
and
xchg
xchg
out
sbb
pop
sbb
mov
sbb
das
cld
loopne
rcrb
out
mov
adc
adc
loop
ror
dec
fistpll
sbb
scas
clc
fildll
sub
add
push
subb
mull
mov
xor
jne
popa
lods
cmpsl
and
inc
lods
sbb
push
cmp
adc
mov
pushf
push
jbe
lcall
clc
fs
std
lcall
stos
mov
loop
divl
int3
jo
jl
and
int
mov
cmp
push
les
push
mov
pop
notb
lods
test
imul
bound
or
ret
or
sub
sub
push
lahf
mov
ds
lea
xchg
fadd
aaa
jno
pusha
inc
push
mov
add
test
pusha
insl
popf
ja
cwtl
loope
test
aam
add
insl
inc
add
jle
mov
mov
xor
jno
xchg
sbb
sbb
out
and
out
or
mov
mov
adc
xor
aam
scas
fsubl
fldln2
or
outsb
fcmove
and
jns
in
inc
mov
mov
shl
out
pop
je
inc
addb
incb
xor
movsl
push
cs
jo
jp
push
or
push
mov
lods
nop
mov
xor
fistpl
xorl
mov
jmp
inc
pop
lret
pushf
mov
xchg
and
insb
roll
fisubrs
out
adc
shr
in
js
jmp
or
or
mov
cmpsl
repnz
clc
lods
sub
ror
add
fildl
mov
out
or
mov
test
jmp
push
jo
repz
lret
rcl
clc
jno
inc
test
mov
mov
inc
test
sbb
or
mov
xlat
pop
jbe
sarl
pop
daa
or
outsb
test
into
mov
mov
xorb
mov
and
cmpsl
push
mov
inc
gs
mov
js
mov
adc
roll
pusha
orb
cld
mov
push
jge
jmp
andl
shl
xor
ss
cmp
daa
xchg
mov
mov
out
pop
clc
imul
test
mov
ret
pusha
fimull
and
outsl
add
cmpl
cwtl
adc
inc
lds
ficomps
je
inc
mov
push
cld
cmpsb
out
icebp
fs
mov
or
insb
pop
outsb
icebp
adc
in
imul
sbb
xchg
or
xor
lock
cmp
sarb
inc
movsb
add
push
and
dec
jg
into
inc
pop
shll
jg
jns
sbbl
inc
das
jg
push
mov
scas
lods
inc
test
arpl
add
dec
pop
fadds
mov
jnp
dec
shrb
jnp
pop
scas
fidivrs
fiaddl
into
fsubrl
lds
arpl
mov
sbb
rorb
jnp
jae
jae
out
dec
push
add
pop
iret
push
aaa
addr16
pop
je
arpl
push
sbb
out
cmp
std
inc
ret
leave
icebp
cs
stc
out
inc
xor
push
push
in
jnp
mov
outsb
sub
inc
movsb
dec
notb
sub
nop
push
loopne
pushf
xchg
jno
inc
cmp
fidivrs
inc
aad
es
and
jge
lods
inc
cmp
sbb
into
inc
sbb
lret
adc
cmp
jl
sub
jge
out
jle
stos
addr16
nop
mov
mov
inc
xor
pop
mov
mov
mov
dec
push
imul
xchg
and
mov
das
addr16
and
inc
xor
push
adcl
int
addb
inc
xor
es
call
push
rorb
pop
sbb
icebp
iret
add
pop
test
jge
lock
out
sarb
test
fimull
mov
jno
adc
enter
int
cmc
sub
aad
mov
cwtl
mov
filds
sti
push
lea
lods
inc
and
jns
fisubs
cmp
lock
loope
movsl
xsave
in
sbb
mov
and
and
adc
aas
or
test
cmc
daa
mov
enter
mov
cltd
inc
aad
scas
add
xor
or
push
nop
outsl
mov
cmpsl
seta
xchg
ja
addr16
push
incl
aaa
lahf
daa
pop
mov
out
xlat
jg
outsl
mov
cmpsl
seta
xchg
ja
addr16
push
incl
aaa
lahf
daa
pop
mov
addr16
push
jg
outsl
aaa
pop
cmpsl
seta
pop
das
ja
addr16
push
incl
aaa
lahf
daa
pop
mov
out
xlat
jg
outsl
mov
cmpsl
seta
xchg
ja
addr16
incl
inc
pop
push
jo
inc
ja
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
out
divb
movb
pop
scas
psrlw
repz
push
cmpsl
je
inc
xchg
es
jb
push
xlat
out
divb
movb
pop
cmpsb
addr16
xchg
push
cmpsw
jbe
inc
xchg
es
testl
daa
divb
movb
pop
cmpsb
addr16
xchg
push
andnpd
mov
jg
xchg
daa
xchg
push
test
popf
sbb
mov
stos
and
adc
cmp
call
jp
jle
fimull
dec
mov
xchg
sbb
inc
xchg
jg
and
repz
fcomps
dec
push
inc
shrl
out
aaa
test
push
pop
out
shll
dec
ja
enter
jl
lea
or
cmp
enter
call
jp
sbb
loopne
js
push
jbe
mov
stc
cmp
pop
fidivl
sub
lea
cmp
mov
shlb
mov
xchg
cmp
ret
xor
rcll
and
pop
pop
cmpsb
addr16
xchg
push
cmpsw
jbe
inc
xchg
es
testl
dec
xchg
aaa
subb
ret
or
ja
or
pop
push
ret
xor
xchg
arpl
xchg
nop
daa
xorb
das
std
adc
xor
push
adc
adc
cmp
push
clc
roll
xchg
outsl
mov
jecxz
mov
xchg
push
cmpsw
jbe
inc
xchg
es
testl
daa
divb
movb
pop
cmpsb
addr16
xchg
push
cmpsw
jbe
inc
xchg
es
testl
daa
xchg
jle
mov
push
jbe
mov
jp
mov
inc
fs
leave
xor
movsb
cmp
scas
mov
mov
stc
adc
mov
push
repz
dec
scas
inc
jo
dec
pop
sbb
popa
pop
mov
outsb
ret
arpl
pop
jbe
or
mov
push
add
push
icebp
xchg
lret
pop
lds
push
and
pop
sbb
out
lock
dec
mov
into
rol
xchg
jl
arpl
mov
xchg
in
xchg
shrb
sub
inc
sar
push
push
ds
mov
daa
pop
mov
cli
xor
mov
cltd
xchg
repz
inc
pop
and
adc
cli
out
inc
repnz
push
mov
dec
mov
or
int
int
or
cmp
sbb
mov
xor
scas
sbb
xor
cmp
sbb
mov
adc
into
inc
fs
pop
loop
cmpsl
ljmp
fdivrs
mov
dec
pusha
or
cwtl
addb
adc
nop
loopne
test
push
int
and
loopne
push
rcrl
fdivrl
jns
xlat
dec
fwait
lret
fs
aaa
dec
imul
jecxz
add
lret
mov
pop
push
sbb
sub
jl
fmull
push
and
cmp
std
cli
dec
sub
add
rcll
jo
mov
xor
std
sbbb
xor
int3
hlt
and
loop
hlt
inc
cmpsl
add
clc
ss
sbb
pop
mov
stos
fwait
dec
pop
shll
popf
into
ss
mov
cmp
gs
insl
rclb
xchg
out
xchg
xchg
xor
aad
je
dec
sbbl
and
inc
aad
xor
sub
pop
lea
or
pop
add
adc
xlat
popa
xchg
rcrb
add
pop
into
dec
cmp
pop
repnz
adc
dec
and
sbb
mov
out
adc
call
stc
sbb
out
cmpsl
mov
stos
xor
sarl
adc
incb
mov
cmpsl
andl
pushf
xor
cmpsb
dec
xchg
test
adc
mov
push
inc
mov
pop
jb
aam
sub
jl
push
dec
cmp
jnp
jb
ss
movsb
xorb
cmp
mov
lahf
rolb
jmp
mov
mov
xchg
jecxz
data16
hlt
lods
push
popa
mov
push
jge
out
mov
aam
adc
in
sahf
push
enter
push
aaa
push
sbb
xchg
mov
push
aas
mov
mov
pop
ja
pop
imul
inc
inc
adc
fwait
mov
dec
xchg
clc
fld
push
push
inc
push
fld
cmp
movsl
dec
xor
jl
pop
or
clc
jecxz
add
inc
xchg
scas
mov
or
int
sub
das
dec
fidivl
cmc
add
out
fsubrs
inc
nop
pop
ja
xchg
sbb
adc
mov
dec
jge
fcmovb
and
data16
pop
lea
add
sahf
jmp
cld
cmp
fdivrp
inc
jb
mov
push
sbb
mov
aas
push
stc
loopne
lock
pop
pop
add
adc
push
and
rclb
xchg
ljmp
mov
and
jl
aad
push
cmp
pop
out
int
xchg
testb
xor
fildll
sub
xchg
xor
sub
insl
faddl
mov
ret
inc
add
pusha
pop
xchg
ror
and
shll
pusha
cmpsb
push
mov
testb
sbb
pop
xlat
sbb
popa
sub
fisttpl
aas
aaa
push
sub
enter
test
repnz
or
adc
testl
xor
popf
in
orb
das
jbe
lods
or
jmp
xchg
adc
sbb
aaa
mov
imul
fdivrs
mov
mov
and
in
xor
divb
scas
aam
jecxz
sbb
xor
ja
sub
das
push
jg
loopne
hlt
cmp
jge
pop
rorl
daa
mov
cltd
inc
cmp
cmp
push
mov
mov
lods
push
mov
xchg
inc
cmpsb
sbb
outsb
das
enter
rolb
jl
loop
sbbl
sub
repz
int3
sbb
mov
pop
loopne
fisubrl
lods
cld
pushf
mov
mov
xor
jl
jl
roll
jp
lret
adc
dec
xlat
repz
jo
mov
out
in
xchg
ss
hlt
add
call
stos
cmc
add
adc
call
iret
adc
cld
cld
add
iret
movsl
fwait
ja
mov
outsb
xchg
fmuls
outsl
cmpsb
mov
out
pop
add
jae
je
jecxz
out
jae
int3
fldl
dec
mov
loope
inc
sbb
ljmp
sbb
mov
pop
xor
cmpl
rcr
mov
dec
lahf
sub
lret
pop
imul
mov
mov
xchg
xchg
stos
out
jne
adc
pcmpeqb
aad
dec
xchg
jnp
jg
add
aas
ss
mov
xlat
or
fxch
push
push
lea
or
jno
lock
mov
fisubrl
xor
xchg
roll
shrb
sbb
sub
xor
shr
xchg
push
mov
icebp
gs
adc
loop
imull
inc
fisubrs
add
fcomp
outsb
adc
pop
test
sarb
enter
out
cmc
jae
mov
mov
push
push
lea
je
dec
jbe
rorb
mov
jae
ljmp
mov
mov
das
push
cs
xchg
push
insl
repz
jl
addl
adc
xor
or
int3
into
cmp
jo
sub
aas
mov
dec
mov
sbb
scas
mov
test
fmul
jns
mov
rcrb
push
out
inc
in
mov
repnz
mov
aad
test
jo
popa
out
xor
jbe
rol
rep
loopne
sbb
mov
mov
xor
inc
adc
adc
adc
cld
in
pusha
not
adcl
pop
sbb
cli
mov
rcrl
xchg
adc
xchg
into
xchg
push
test
out
fsubs
mov
cmp
sti
lock
pop
or
test
enter
shlb
sbb
iret
in
mov
jbe
lcall
ret
cmp
dec
mov
or
hlt
xchg
mov
fidivrs
divb
aam
ror
data16
leave
arpl
call
jbe
jl
insl
mov
inc
cli
aam
test
mov
push
imul
mov
lods
mov
adc
jg
fdivl
mov
jo
add
dec
aad
daa
insl
subb
xchg
lahf
nop
andl
shr
or
inc
push
jg
test
dec
add
scas
dec
stos
cmp
or
cmp
out
push
dec
enter
cmpsb
ficompl
shll
xor
xor
inc
cmp
addr16
xorb
xchg
jge
and
jl
xchg
push
data16
fmull
stc
incb
sub
inc
std
out
inc
xor
sbb
or
daa
jns
cmp
xchg
xor
xchg
fistpll
mov
jg
cmc
out
aad
push
pop
ljmp
cmc
call
xchg
outsb
dec
loopne
mov
imul
pop
jbe
sub
pushf
enter
shrl
add
ja
js
mov
ja
adc
push
sub
ss
std
push
mov
fldt
push
xor
sbb
push
xchg
inc
jl
data16
mov
enter
push
test
xchg
xorb
fldcw
push
adc
dec
hlt
mov
in
add
pop
mov
jnp
inc
pop
cmp
mov
mov
inc
sbb
sbb
cmp
xlat
or
lcall
aad
fildl
ret
adc
xor
mov
ss
sarb
sub
loope
jae
sbb
mov
pop
test
loope
test
push
xor
dec
cli
clc
mov
aad
cmpsl
lahf
hlt
imul
and
bound
call
or
das
xchg
dec
pop
pop
inc
mov
push
dec
xlat
mov
notl
push
or
add
inc
sbb
jp
movsb
movsl
out
xchg
imul
xchg
adc
pop
mov
loopne
xchg
and
and
mov
mov
mov
pop
test
adc
inc
and
data16
cmpsb
fs
jae
or
shlb
xchg
test
jb
jecxz
and
mov
mov
es
or
sbb
shlb
stos
adcl
push
push
and
into
adc
push
daa
cmp
push
jmp
jb
push
es
cld
aam
add
mov
pop
jle
jmp
push
mov
jecxz
and
and
inc
push
and
xchg
out
test
movsl
xchg
push
xchg
jmp
mov
std
or
mov
mov
rorl
aas
inc
mov
loop
clc
cmc
mov
and
mov
rcr
testb
push
adc
in
xchg
idivl
mov
push
mov
shlb
xor
int3
ss
xor
xchg
push
push
jo
mov
jns
out
out
cltd
xor
mov
jmp
ret
and
mov
imul
sub
pusha
das
xor
shlb
mov
lcall
inc
sub
dec
add
lahf
mov
sub
cmpb
cli
mov
ret
pop
daa
fwait
cmp
or
clc
xchg
jecxz
or
nop
sub
lahf
nop
fistps
inc
mov
roll
sar
push
add
jnp
hlt
imul
pop
test
xlat
scas
stc
cmp
outsl
imul
xor
and
jp
fldl
inc
jno
or
arpl
flds
adc
cltd
sbb
fdiv
lods
pop
lds
jecxz
cmpl
dec
ss
push
adc
cmp
jl
push
popf
rol
lret
push
xor
mov
adc
adc
int3
outsl
stc
js
adc
aaa
jno
fidivrs
and
push
push
cmpsb
or
movsl
pop
xchg
pop
pop
test
or
dec
dec
out
sahf
shll
push
ljmp
in
cmp
mov
sub
les
fidivrl
cs
fwait
xchg
or
jb
pop
add
inc
nop
inc
lods
sbb
stos
movsb
out
sub
add
call
mov
dec
cmp
mov
repnz
sbb
sub
add
xchg
mov
clc
and
xor
adc
xlat
dec
ret
pop
mov
js
call
dec
adc
pop
mov
xchg
push
cmp
and
sub
daa
fistpll
inc
pop
jge
push
cmp
daa
sub
lods
adc
mov
mov
adc
add
xor
ja
or
stos
sbb
cmp
xchg
insb
mov
and
cmp
mov
mov
and
or
aaa
sbb
test
fs
sbb
leave
bound
xchg
testb
fdiv
push
int
push
cmp
shrl
push
and
aaa
xor
or
mov
sbb
dec
mov
jmp
mov
aad
cs
mov
jo
sbbb
or
rol
cmp
push
sti
cmp
je
and
xchg
xchg
ds
sub
lds
or
mov
push
push
scas
and
iret
cmpsl
or
test
loop
and
cmpsb
mov
sbb
movsl
rorb
sub
jne
pop
incb
mov
aas
jmp
inc
jb
xor
xor
pop
mov
mov
shll
push
dec
and
add
das
in
pushf
mov
sbb
xor
lret
cltd
fwait
gs
pop
nop
movsb
jae
dec
int3
sbb
in
pop
jg
jmp
rcrb
push
repz
daa
insl
and
cli
cmp
cs
das
inc
or
jmp
out
xor
pop
jns
and
push
repz
loop
jl
add
cmp
cwtl
jp
push
loope
jecxz
cmc
xchg
cmc
leave
idivb
enter
cmc
es
jmp
inc
pushf
mov
call
inc
or
jecxz
inc
cld
out
pop
fldcw
ret
jle
mov
lcall
pop
xlat
popf
popa
push
dec
mov
cmp
jg
les
out
add
xor
jbe
stos
ret
ret
loop
in
fwait
jge
sahf
adc
inc
add
push
stos
and
mov
aad
aam
adc
movsb
mov
mov
lock
cwtl
push
mov
xchg
leave
xchg
int
inc
push
xchg
push
scas
jle
and
inc
gs
pop
inc
mov
xchg
lods
rcr
test
fmull
xchg
xchg
pop
sbb
jg
cmp
int
inc
ds
shr
sbb
sbb
inc
xchg
mov
dec
xchg
movsb
int
sbb
adc
call
adc
cltd
add
hlt
mov
insl
dec
ljmp
sbb
insb
in
test
mov
xlat
aaa
lret
jnp
pusha
inc
xchg
int3
jl
push
enter
adc
cmp
sarb
pop
dec
sbb
test
push
flds
dec
and
xchg
inc
sub
inc
sub
pop
and
sub
jo
adc
add
incl
mov
pmullw
push
cld
scas
stc
ja
inc
or
test
jp
pop
sub
scas
pushf
dec
add
scas
test
popa
xchg
mov
sti
and
mov
sub
jmp
not
mov
adc
inc
gs
int
addr16
sbb
outsb
xor
inc
jl
repz
aam
adcb
data16
test
sbb
arpl
mov
out
or
inc
ja
pushf
jg
out
fs
xor
and
mov
repz
dec
pusha
loop
das
orb
and
push
mov
adc
leave
hlt
ss
jbe
xor
push
popa
dec
jmp
sbb
mov
and
cmp
lods
nop
insl
aad
ljmp
mov
inc
and
pop
mov
dec
in
scas
loope
mov
cld
xor
fmuls
inc
cs
int
ja
inc
shlb
or
mov
sti
pop
dec
cmc
xchg
mov
mov
cltd
mov
xchg
mov
or
mov
inc
repnz
lods
jno
push
lahf
jp
inc
shlb
divw
mov
dec
aaa
je
inc
or
mov
jmp
loop
xchg
mov
aaa
int3
pavgw
roll
and
add
inc
imul
int
cmc
mov
cmc
jmp
pop
push
ja
and
push
fnstenv
enter
int3
xchg
mov
clc
jo
dec
pop
aas
adc
xchg
or
mov
and
ljmp
arpl
cmp
movsl
inc
mov
dec
lock
xchg
loopne
les
fmul
nop
aad
cs
mov
pop
test
mov
fsubrl
idivl
xchg
add
xor
int3
xchg
jmp
cmpb
stos
decb
and
push
xchg
xchg
xor
inc
adc
jecxz
in
pop
xor
imul
mov
fimull
lods
or
fwait
jns
in
fwait
lret
xor
cmpsl
jae
fimuls
in
dec
mov
jmp
inc
add
dec
inc
xchg
xchg
jp
mulb
push
cltd
stc
add
xchg
xchg
mov
mov
popf
add
xor
jno
pop
enter
sti
cli
sarb
sbb
je
add
das
repnz
sub
je
aam
or
stc
mov
iret
mov
push
outsb
dec
inc
xchg
das
into
push
std
push
in
mov
test
adc
add
cmp
aad
cmp
push
push
mov
jl
cld
iret
inc
dec
outsl
or
push
add
mov
and
lret
adc
fsubrp
sub
lret
jae
mov
mov
loopne
pop
fcomps
aam
fnstsw
sbb
stc
or
mov
aas
push
movsl
jg
ss
subb
insl
stos
push
mov
cmp
imul
dec
mov
insl
nop
pop
sub
std
add
inc
adc
into
push
imul
lret
xchg
adc
aam
jnp
fwait
nop
lods
push
das
push
out
pop
jns
or
adc
mov
jp
mov
mov
fsts
add
push
js
das
and
xchg
add
add
hlt
aad
and
es
push
fbstp
dec
xchg
fmulp
popa
jns
add
jle
sbb
call
jecxz
xchg
enter
dec
imul
mov
mov
mov
aad
xchg
dec
xchg
and
push
in
inc
mov
mov
push
xchg
dec
enter
lods
xorb
in
pop
push
pop
fwait
add
cld
loop
loope
xlat
mov
xchg
int
mov
push
sbb
orb
lods
and
add
dec
data16
or
jle
xlat
push
arpl
dec
shl
sbb
push
sub
add
jno
lods
jno
ret
cmp
ljmp
aad
adc
xor
pusha
lahf
mov
lret
aad
cli
inc
xchg
cmp
cltd
shll
loopne
jmp
push
and
std
int3
mov
xchg
xorl
mov
jmp
cld
fmull
lahf
and
jbe
mov
or
mov
cld
cmp
xor
sub
out
scas
jne
mov
sub
pop
mov
test
ret
push
nop
mov
lret
ds
lret
and
in
mov
shl
cs
dec
insb
fldt
fimull
cmc
xor
fucomi
jl,pn
cmp
rorb
leave
inc
and
fimull
xchg
aad
jmp
cmp
clc
mov
xor
xchg
sahf
sub
popf
subl
movsb
adc
in
xchg
mov
mov
cmpsl
jmp
nop
fisttpl
pop
movsb
orl
inc
ds
gs
cwtl
imul
lahf
shlb
jl
push
fcoms
mov
and
loopne
cmp
lods
mov
mov
clc
jle
mov
inc
insl
fmul
icebp
nop
pop
das
add
cltd
movsl
xlat
push
fldl
cmpl
cwtl
and
jmp
arpl
dec
xor
aaa
aad
punpckhbw
sbb
push
xor
out
lods
ret
movsb
pop
jne
aaa
xor
lahf
or
out
and
hlt
lret
mov
das
lcall
jns
movsl
push
pop
imul
dec
add
loope
sub
lock
in
sbb
mov
or
xlat
enter
cmp
popa
adc
adc
pushf
sbb
aas
out
pop
loop
out
fldl2t
hlt
lahf
imul
push
int3
push
push
outsb
ja
push
mov
pop
ja
mov
sbb
shrl
inc
lds
jecxz
or
das
sbb
sub
xor
push
xor
dec
loopne
cmp
push
cwtl
dec
or
loop
orl
cwtl
in
jbe
hlt
test
jae
clc
jecxz
fimull
rcrl
cmc
xchg
fistps
dec
stc
or
in
fwait
mov
adc
mov
mov
out
xor
cmpsb
inc
sub
lods
cmpsb
sub
mov
sub
dec
sti
loop
lcall
jbe
push
fs
mov
bound
cwtl
adc
cmp
xchg
inc
loopne
cmc
pusha
out
loop
pop
jns
or
xchg
jle
sbb
or
inc
clc
pop
stos
adc
in
icebp
in
pop
or
repz
push
adc
outsb
push
jo
fs
sub
iret
ret
mov
cmc
xor
lds
fisubs
mov
add
cwtl
hlt
pusha
sahf
out
in
test
jg
int3
jge
lahf
mov
adc
bound
hlt
jbe,pt
ja
mov
sub
inc
fstpt
ss
dec
lret
mov
divb
sti
lcall
push
adc
jecxz
lds
jbe
adc
imul
hlt
inc
mov
mov
cld
leave
sahf
dec
add
int3
and
push
mov
cmp
xchg
and
pushf
daa
enter
pop
loopne
int
xchg
xorl
mov
mov
insb
cwtl
adc
ret
and
sub
add
and
mov
inc
cmpsb
pop
addr16
or
sbb
jmp
stos
inc
data16
shlb
cmpsb
sbb
cmpsl
mov
imul
push
xor
pop
pop
adc
jg
jo
pop
popf
cmc
test
or
lock
out
test
mov
cmpsl
daa
pop
jns
jae
loop
dec
jae
mov
jne
add
repz
xchg
xorl
cmpsb
addr16
xchg
push
cmpsw
jbe
inc
xchg
es
testl
daa
divb
movb
pop
cmpsb
addr16
xchg
push
cmpsw
jbe
inc
xchg
es
testl
daa
divb
cmpsb
addr16
xchg
push
addr16
jbe
inc
xchg
es
testl
daa
divb
movb
pop
cmpsb
addr16
push
inc
push
push
cltd
cmpsl
mov
push
outsl
mov
sub
in
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
dec
sbb
or
cmp
sub
or
dec
das
pop
insb
lret
pushf
fisttpl
fcompl
in
dec
sbb
or
cmp
sub
pop
sbb
cmp
fisttpl
fcompl
in
dec
sbb
or
cmp
sub
pop
sbb
cmp
fcmovnbe
cwtl
int3
aad
jecxz
clc
test
cltd
aad
add
js
pop
or
dec
lcall
or
test
add
mov
ja
and
sahf
sub
lahf
mov
jo
fs
mov
mov
cld
inc
adc
lret
repz
push
or
push
jnp
in
lret
pop
mov
adc
xchg
insb
sub
adc
into
add
push
jecxz
or
or
pop
aad
push
cmp
scas
lret
cltd
inc
fstl
repz
stos
add
lock
inc
shll
cmpl
fcmovnu
daa
sti
inc
jb
push
adc
mov
scas
mov
sub
fwait
pop
repz
fimull
mov
jmp
adc
lcall
sbb
or
cmp
sub
pop
sbb
cmp
fisttpl
fcompl
stos
or
jp
push
xor
dec
sbb
mov
mov
xchg
ret
repnz
jle
mov
sub
cmp
jnp
cmp
sub
cmp
fchs
stos
ljmp
aas
js
dec
jp
or
sbb
cmp
fisttpl
fcompl
in
dec
sbb
or
cmp
sub
pop
sbb
cmp
fisttpl
fcompl
in
dec
sbb
sbb
into
pop
std
rcrl
sbb
inc
lds
movsb
lret
cmp
cmc
ljmp
xor
out
daa
sbb
sahf
scas
inc
jg
movsl
fistpl
out
xor
lds
sbb
cmp
xor
dec
xlat
adc
mov
bound
add
add
mov
push
fs
into
pop
movsb
repz
adc
mov
stos
into
aas
enter
fdivrl
lret
inc
popf
add
cmp
cmp
stos
or
dec
je
aam
scas
cmpsb
jecxz
imul
test
jo
mov
xchg
cli
icebp
pushf
dec
stc
sub
lret
add
out
cltd
pop
pop
mov
orl
enter
ljmp
xchg
gs
xchg
je
mov
pop
jns
fcoml
push
daa
lret
xchg
loop
sbb
mov
arpl
lcall
movsl
pop
out
xchg
dec
jbe
push
cmp
aaa
loop
pop
int
mov
bound
lods
adc
adc
mov
mov
cltd
iret
lahf
add
imul
dec
cld
aad
xchg
cmp
adc
push
xlat
adc
mov
push
cmpsb
adc
mov
pop
jns,pn
sbb
imul
sub
pop
shrl
adc
jp
imul
aas
push
sub
sbb
in
xlat
fbstp
imul
mov
cmp
cmp
mov
repz
sbb
mov
lahf
push
scas
stc
cmpsl
insb
lds
addr16
jo
push
sub
loop
xchg
les
test
psubw
aas
jmp
daa
out
lea
nop
xchg
icebp
insl
ret
push
push
cmc
mov
push
xchg
mov
into
in
cmp
xor
fstpt
mov
mov
leave
mov
lods
repz
fwait
sub
mov
aaa
cltd
data16
sarb
int
scas
outsl
nop
push
xor
and
add
cmp
sarl
loopne
dec
sbb
bound
cmp
das
imul
imul
clc
fiadds
push
jl
mov
arpl
add
adc
shll
mov
repz
adc
jl
ret
xor
cmpsb
or
xorb
cmc
das
in
cmp
mov
mov
je
push
mov
push
jo
add
insl
cmp
fstps
cmp
orb
jo
mov
fidivl
int
mov
lods
stc
mov
and
ret
xchg
ss
inc
mov
sti
push
or
ret
daa
mov
test
fwait
repnz
xor
dec
es
in
in
jnp
mov
out
mov
mov
or
sub
push
add
dec
pop
fisubs
shlb
pop
jmp
stos
pop
push
fwait
lods
dec
push
push
je
js
shlb
inc
adc
pusha
popa
sbb
pop
sub
mov
mov
xchg
mov
sbb
mov
xchg
leave
popa
cltd
dec
andb
xchg
fs
in
subb
decb
cmp
and
mov
data16
inc
mov
lock
dec
lods
push
iret
jmp
mov
arpl
sub
fimuls
push
insb
push
jbe
sbb
sbb
repz
into
aas
repnz
jae
aaa
push
neg
add
lods
addr16
clc
jo
cmp
mov
mov
mov
xchg
jp
mov
jno
jo
or
jnp
sub
inc
aad
pop
mov
jo
shlb
cmpsl
adc
sub
and
inc
cmp
jge
inc
icebp
stos
sbb
movsb
lods
dec
cmp
inc
push
mov
fiaddl
jnp
loopne
jae
pop
sbb
rolb
or
sub
push
cmpl
sahf
stc
std
mov
or
cmp
mov
and
repz
and
jmp
pop
jb
addr16
add
ret
decl
push
cmpsl
ret
shlb
mov
into
push
fstps
mov
pop
push
cmp
lea
shlb
or
sbb
cmc
push
sub
popf
lock
js
push
jmp
out
dec
xchg
scas
mov
mov
adc
incb
loop
jo
jp
fisubl
addr16
or
pop
mov
cmp
push
fcomip
dec
cwtl
cmp
push
xor
mov
cmp
pop
pusha
and
xchg
add
xchg
mov
cmpsb
push
fisubrl
mov
dec
js
ret
mov
enter
push
mov
fistpl
xor
adc
mov
pushf
jae
lret
add
in
js
adc
rcr
or
adc
in
dec
negb
mov
nop
mov
fisubrl
lret
mov
xchg
mov
iret
bswap
cmp
in
mov
loopne
lahf
mov
lcall
sub
cld
cmp
jae
out
scas
pushl
jno
add
push
mov
sub
sbb
sub
icebp
push
push
push
ljmp
shlb
rcrb
ja
mov
cld
mov
pop
xchg
cmp
cli
adcb
stc
call
sbb
push
mov
pop
cltd
fwait
adc
fldl
push
movsb
jo
testl
push
sbb
inc
pushf
jns
mov
add
ret
mov
std
test
sbb
sbb
inc
jbe
sub
and
rep
pandn
in
inc
dec
mov
xchg
mov
xor
fidivrl
rcrl
fsubs
mov
jp
or
and
lods
shlb
sahf
imul
pop
out
jne
fs
dec
pop
adc
xor
adc
rol
push
xchg
xchg
pop
rcl
inc
insb
pop
adc
les
fimull
sahf
pop
jge
ret
dec
and
cltd
mov
into
mov
jp
out
scas
jmp
addb
mov
and
jne
pop
lahf
jge
fwait
pop
sub
jle
pop
xchg
test
xor
sbb
push
fsubr
stc
leave
jp
rcr
mov
lahf
jbe
lock
cmp
lcall
xchg
les
push
mov
push
dec
dec
pop
es
dec
adc
inc
mov
in
ljmp
push
jae
push
jmp
mov
loop
cmpsl
sbb
hlt
mov
mov
lcall
mov
mov
mov
or
pop
and
aam
xor
imul
jo
pop
pop
mov
in
push
sbb
cli
into
sbb
cmp
xchg
add
lock
xchg
add
fcomps
icebp
sub
das
sbb
and
loopne
sub
add
adc
xorl
cmpl
int
xor
in
mov
adc
add
jb
stc
sbb
lret
cwtl
js
cmp
lret
rcl
dec
int
sbb
gs
jno
popa
je
cmp
push
and
inc
xchg
dec
sbb
jno
test
push
mov
jae
test
pop
popa
test
clc
sub
sbb
xchg
adc
push
pop
mov
and
aam
dec
jae
ret
xchg
iret
add
mov
scas
enter
mov
sahf
lods
push
stos
and
cmp
add
pmulhuw
mov
insb
or
cli
sti
mov
mov
lods
dec
jecxz
inc
fidivs
push
out
xlat
and
sbb
pop
loop
inc
pop
xor
adc
cli
push
sbb
add
cltd
push
mov
pop
ret
lea
sbb
lret
fimull
lahf
lret
cmp
insl
mov
lock
rcl
or
cmp
std
jle
or
clc
fistpl
inc
inc
test
jne
sub
ret
js
push
mov
inc
xor
xchg
lock
int
in
push
push
push
stos
rcrb
scas
lds
ss
xchg
mov
inc
clc
das
inc
hlt
xor
pusha
fs
sbb
out
dec
fstl
xor
sbb
shlb
inc
adc
test
int
ljmp
xor
adc
loopne
aad
orb
repnz
pop
and
pop
mov
or
je
fldt
jge
adc
xchg
push
mov
jns
adc
cltd
cli
xchg
popf
mov
mov
adc
jmp
add
and
adc
mov
outsb
sub
jge
sbb
pop
inc
xor
and
frstor
inc
sti
mov
cmp
out
cld
pushf
jae
xchg
jmp
jb
dec
shll
scas
dec
xchg
outsl
pop
lahf
pop
adc
mov
dec
arpl
ss
jns
adc
pop
sahf
jnp
jge
in
repnz
clc
jle
int
xchg
adc
xor
cmp
fdivrs
cmp
loopne,pn
outsl
mov
shl
jg
pop
es
in
pop
mov
popf
push
adc
daa
fdiv
push
insl
pop
inc
push
insl
adc
xchg
lea
jns
sbb
shll
rcrb
mov
shlb
cmp
and
xchg
xor
shr
gs
pop
fiaddl
inc
sbb
sbb
aad
pop
mov
ret
jnp
es
jg
dec
cmp
repnz
adc
fwait
adc
adc
movsl
pusha
xchg
add
pop
inc
clc
jl
js
mov
scas
adc
ja
fsts
fisttps
cltd
enter
jmp
cs
js
or
pop
or
cltd
adc
int
mov
std
sbb
scas
or
push
xor
cmp
xor
dec
out
mov
push
in
push
ror
lret
lods
ret
or
andb
jns
or
jg
sbb
mov
adc
mov
jo
sbb
cli
int3
xlat
into
dec
mov
js
sti
adc
leave
sbb
testl
pop
jl
in
sub
inc
jge
lea
dec
sub
leave
or
jb
pop
sbb
arpl
lcall
push
dec
repnz
sbb
add
cmp
dec
mov
cld
mov
jp
mov
jo
rolb
lods
hlt
jb
jb
loope
pushf
mov
stc
jle
cs
lods
jno
mov
iret
cmpsl
test
inc
pushf
icebp
mov
dec
aaa
fdivrs
pop
filds
ret
mov
shrb
mov
fwait
push
mov
call
xchg
push
scas
ficoml
cmp
push
adc
outsb
and
push
cmpsl
je
std
ja
pop
hlt
sarb
lds
sbb
lock
cmp
sbb
adc
arpl
and
and
add
push
mov
jecxz
sbb
jno
icebp
sbb
jmp
stos
or
daa
sbb
inc
xor
imul
cmpsb
mov
push
dec
stos
xchg
daa
test
adcb
or
cmp
jo
push
std
jg
jmp
rolb
pusha
imul
xor
clc
add
jns
mov
push
mov
mov
pop
jbe
fwait
sub
stos
nop
mov
gs
xchg
test
int3
dec
pop
mov
add
in
xchg
stos
or
stos
adc
pop
adc
mov
push
mov
mov
pushl
add
pop
std
adc
xor
shl
sarb
stc
xchg
xchg
iret
cld
stc
stos
es
mov
lea
jg
xor
xor
ret
mov
movsl
push
outsb
fildll
jno
mov
push
clc
jnp
cmp
inc
push
lock
popf
jbe
jnp
clc
repnz
pop
loopne
mov
push
lock
lahf
cmpsl
xor
mov
loopne
or
fidivrl
pop
add
pop
xchg
add
pop
fnstcw
push
jmp
inc
push
out
xchg
cltd
jg
inc
loopne
push
enter
jns
jb
add
inc
xchg
sahf
in
fsubs
enter
push
stc
sbb
fdivrl
xchg
mov
mov
pop
cwtl
xchg
repnz
gs
int
inc
jg
rcrl
nop
xchg
pop
inc
in
sub
test
pop
inc
repnz
stos
test
mov
dec
loop
in
mov
iret
dec
adc
mov
lret
pop
sahf
adc
repnz
in
movsl
das
push
push
or
and
xor
fwait
ret
and
or
jno
test
ret
push
mov
pop
je
xchg
adcb
and
ss
dec
loop
mov
jno
std
add
add
dec
pop
push
cmp
cld
xchg
out
mov
int
jns
popa
andb
aas
mov
push
mov
addl
mov
sti
mov
mov
in
lret
mov
fldt
fisttps
or
dec
js
push
xchg
jb
scas
ror
mov
push
mull
test
xor
mov
loope
int3
or
arpl
mov
shrl
lahf
xchg
repnz
push
adc
and
loop
cmp
cli
in
sub
cwtl
pop
mov
in
sub
add
out
xor
or
push
push
jb
popf
fnstcw
sarl
jno
inc
jge
push
fdiv
push
sbb
je
xor
imul
mov
and
repnz
loope
pop
dec
sbb
adc
nop
adc
push
addr16
js
fxch
xlat
push
inc
imul
xorl
adc
lret
pushf
ja
int
push
flds
test
mov
enter
xor
push
mov
ds
jl
mov
xor
push
arpl
and
addr16
leave
xor
in
sub
les
lock
nop
xorl
ljmp
push
aam
adc
dec
adcl
jno
push
ljmp
outsb
dec
or
and
aad
xor
sub
xor
push
int
hlt
aad
hlt
iret
jnp
fistps
ds
sub
mov
mov
jl
pop
inc
mov
push
xor
cmp
out
sbb
cmp
lret
hlt
mov
jp
pusha
pop
mov
ret
aas
sbb
mov
cld
test
lods
xor
mov
xor
outsl
stc
cwtl
cmc
fwait
sub
or
sbb
les
pop
insb
scas
xor
aam
mov
xor
out
mov
in
mov
out
jp
adc
cs
dec
aam
push
lahf
mov
sub
sub
enter
inc
sub
cmp
shll
adc
jno
js
mov
outsl
enter
inc
or
addr16
xchg
cmp
popa
insl
lret
xorb
jne
movsl
addb
flds
pop
jbe
jns
cli
aaa
div
test
addr16
in
or
leave
insb
inc
data16
fs
push
rorl
sub
fwait
push
cwtl
cmc
dec
jg
lods
cmpsl
push
in
pop
and
dec
dec
shl
xor
jecxz
scas
cmpsl
adc
stos
hlt
lcall
hlt
add
sub
push
pop
sub
stos
pusha
fnstcw
sbb
dec
aad
lea
sti
cltd
jo
adc
rorl
call
lahf
cld
iret
fiaddl
ljmp
test
bound
nop
or
aad
xor
test
enter
cmp
mov
insl
mov
outsb
jbe
test
push
cli
pop
mov
cmc
mov
cmp
inc
xchg
xchg
pop
pop
decl
enter
inc
sahf
and
je
fstpl
dec
sub
push
stos
cmp
fadds
in
mov
mov
pop
xchg
and
adc
shrl
or
test
mov
xchg
gs
cltd
adc
push
and
frstor
sahf
and
leave
adc
cwtl
pop
insb
pop
stos
arpl
jb
cmp
or
mov
mov
mov
ss
es
pop
cltd
ret
repz
dec
sahf
std
testl
js
jne
sbb
mov
xchg
iret
imul
push
mov
push
fsubs
punpckhdq
test
dec
clc
mov
push
cmp
inc
pushf
shll
jne
mov
sub
sbb
psubusb
sub
fcomps
adcl
lods
test
dec
sub
xchg
mov
mov
hlt
je
mov
inc
ficoml
mov
mov
xor
lret
or
and
xor
es
xor
and
inc
lods
jl
jb
mov
int
or
out
movsb
sbb
pop
add
xor
dec
push
dec
and
jno
outsw
cmpsl
xor
ja
cmpsl
add
adc
icebp
mov
in
lods
cltd
outsl
xchg
je
jno
sub
fstpl
cli
andb
dec
sti
and
push
jl
push
mov
insl
fisttpll
mov
scas
mov
adc
jb
enter
add
lcall
popl
fbstp
mov
cld
mov
mov
leave
in
out
ret
ja
cmp
mov
sti
sub
xchg
cmp
sbb
scas
and
nop
nop
lea
pop
loop
adc
jmp
sbb
add
out
js
jb
xlat
jmp
adc
cmpsb
ret
test
sub
add
and
fwait
xchg
xchg
pop
pop
stos
fimuls
add
int3
jl
push
xor
mov
dec
cmpsb
xchg
and
btr
push
repnz
add
and
lahf
leave
add
gs
adc
mov
dec
mov
ljmp
clc
sub
sub
test
xor
movsl
cs
inc
ljmp
repnz
std
repnz
jb
aam
and
inc
xchg
in
mov
dec
and
imul
insl
jne
mov
add
cmp
stos
scas
aad
scas
ficoml
cli
ret
les
adc
push
stos
mov
sub
fs
pop
loopne
scas
rcrb
jp
jl
cmp
sub
and
mov
fdiv
mov
incb
and
cmpsb
push
dec
je
ret
enter
mov
inc
cmp
aaa
jge
mov
in
pop
mov
xor
lret
test
mov
fnstenv
cmp
sub
in
cmpsl
test
stos
test
adc
sbb
das
jmp
stc
movsb
ficomps
minps
xor
xchg
inc
clc
ja
xor
pushf
cmp
pop
lea
mov
cmp
push
jmp
push
push
popa
or
and
jp
jl
neg
cmp
or
rcrb
das
aas
cmpsb
aam
mov
stos
insl
cmp
lock
cwtl
lods
mov
cmpsb
inc
cld
adc
in
xchg
jb
pop
ret
and
test
out
mov
mov
adc
imul
stc
jge
mov
clc
les
jo
push
pop
rcll
nop
enter
mov
movsl
jl
push
jns
add
ret
push
pop
push
js
test
popa
fistpll
sbb
ss
sti
dec
pop
jae
jmp
jge
imul
adc
push
out
xlat
pop
fdiv
orb
cmpsl
mov
shld
jl
jbe
and
push
fists
jl
js
arpl
lcall
jmp
push
imul
cmpb
ljmp
push
pop
xchg
ss
imul
xchg
ret
imul
sahf
push
cld
es
sarl
inc
sub
mov
jno
and
loope
sahf
xchg
add
cmp
push
fcos
lret
pop
sbb
bswap
aad
jg
mov
jbe
sub
scas
popa
inc
jo
andb
ss
pop
inc
clc
fucomp
add
xor
add
mov
in
cmc
hlt
push
push
mov
cmp
xor
mov
js
add
jae
call
push
cmp
mov
jae
xchg
fisubl
in
pushf
mov
cmpl
ficoms
mov
jnp
jb
push
lcall
adc
or
pop
xlat
lods
pop
jmp
sub
pop
cltd
imul
aam
test
mov
and
pop
into
cltd
push
in
add
pop
xor
into
add
mov
push
xchg
cmp
les
loop
mov
add
jns
xchg
lret
not
adc
into
popf
sub
and
pop
scas
xor
mov
enter
jae
jle
push
push
fwait
add
mov
mov
xlat
aad
arpl
test
cmp
sub
jecxz
and
pop
aas
xchg
mov
out
pop
jp
xchg
xchg
xor
lods
and
cmpsl
fisttpl
les
aaa
lret
pop
xchg
loope
das
imul
cmp
aas
lods
out
aaa
sahf
nop
repnz
aaa
dec
sub
push
loop
cmp
add
sarb
jecxz
xor
jbe
mov
mov
adc
pop
lods
or
sub
dec
push
popa
movb
loope
sbbb
int3
fwait
mov
insb
xchg
and
rcll
mov
jns
fsubs
and
rcrb
sub
dec
xchg
aam
mov
add
sub
movsb
hlt
add
ljmp
or
cmp
mov
enter
inc
mov
pop
push
mov
addr16
or
cmp
sbb
cmp
fisttpl
fcompl
in
dec
sbb
or
cmp
sub
pop
sbb
cmp
fisttpl
fcompl
in
dec
sbb
imul
or
sub
insb
lret
pushf
fisttpl
mov
fwait
int3
stos
cld
mov
or
cmp
sub
pop
sbb
sub
cmp
inc
mov
adc
push
add
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
xor
pop
mov
loop
mov
ret
jne
scas
cli
sbb
adc
xor
arpl
xchg
jp
pop
mov
ret
cmp
or
sbb
loopne
cli
adc
insl
mov
jae
and
inc
lds
repz
ljmp
inc
test
divl
sbb
jp
push
lock
and
sub
pusha
jecxz
adc
ss
fwait
inc
pop
sbbb
dec
xlat
dec
dec
in
lds
sbb
or
cld
add
arpl
push
in
or
call
jp
add
cwtl
inc
fs
cmp
sbb
add
lcall
scas
and
push
stos
cmpsl
shll
loop
sbb
xchg
xor
push
jmp
jp
pop
cs
jp
cli
rcrb
and
psrad
add
ret
add
mov
decb
xlat
arpl
xchg
xor
adc
cmc
fistpl
sub
sbb
xlat
dec
mov
ret
and
or
add
add
mov
mov
mov
inc
sbb
fisttps
push
mov
sahf
inc
cli
arpl
add
cmp
pop
lcall
push
jp
das
rcrb
pop
xchg
push
andl
cli
data16
jno
add
or
push
cli
push
lcall
iret
pop
fists
cmp
or
sbb
ljmp
xor
arpl
xchg
dec
mov
cmp
or
sbb
ljmp
xor
arpl
lds
fidivs
pop
add
and
call
stos
in
cs
mov
insb
ret
or
shlb
pop
mov
testl
or
sbb
popa
cmc
mov
push
mov
dec
xor
xor
lahf
jg
les
pop
addb
xor
cli
out
push
jmp
scas
jmp
push
jl
xchg
testl
gs
lods
pop
pop
addr16
lret
inc
nop
push
jae
pop
mov
test
es
push
pop
lret
sbbb
js
xor
js
into
push
daa
sub
sub
cmp
jae
dec
pop
sub
loopne
push
shrb
mov
jp
int3
out
enter
jne
push
mov
stos
aas
mov
test
cmp
test
sbb
lcall
jne
mov
stc
mov
xchg
lea
pusha
adc
sbb
mov
das
jmp
add
add
call
int3
ja
aad
add
popf
aaa
cltd
cmpsl
insl
loopne
and
imul
lods
icebp
fbld
ja
cmp
daa
es
inc
push
xor
add
mov
popa
fildll
jp
hlt
loope
pop
push
push
mov
ds
jno
fdivp
rorb
cmp
mov
fidivrl
add
jns
dec
rorl
mov
adcl
push
stos
scas
push
xor
outsl
push
stos
cmpb
jb
mov
adcl
sbb
dec
cwtl
and
jle
xchg
ret
test
xlat
jge
insb
int3
test
jb
sub
jae
in
add
or
xchg
pop
sub
lea
mov
mov
dec
push
inc
lret
adc
pop
cmpsl
ret
pop
adc
sbb
out
inc
or
lahf
rolb
repnz
push
sub
add
in
pusha
in
cmpb
dec
cs
xor
pop
lock
or
and
add
test
mov
mov
cmpsb
sbb
addr16
mov
jbe
jge
seto
sbb
arpl
dec
cmp
mov
sbb
inc
movsb
fcom
inc
add
xor
mov
sub
std
fs
es
sbb
push
in
dec
sbb
sbb
adc
inc
and
cli
sbb
pop
shll
xchg
sub
enter
stos
inc
jecxz
dec
sub
icebp
sub
sub
jle
sub
fs
pop
push
xchg
ret
add
lods
je
xchg
dec
test
movsl
mov
aad
int
data16
jmp
les
pop
xchg
sub
or
outsb
lret
and
lds
inc
out
outsl
into
mov
fdivr
sbb
js
leave
cli
fbld
dec
push
gs
mov
mov
sub
nop
add
xchg
jg
mov
inc
push
imul
mov
adc
pop
fimull
in
jb
mov
popf
arpl
mov
mov
xchg
stc
bound
mov
inc
in
pop
pop
insb
bound
jle
jg
mov
xor
out
xor
sub
mov
mov
mov
fcompl
movsl
cli
mov
jle
jo
add
mov
arpl
xor
nop
jle
test
sbb
sahf
insl
mov
in
sbbl
or
movsb
xchg
or
sbb
cmp
or
jg
clc
int3
pushf
cmp
sbb
ds
jmp
mov
mov
mov
mov
loop
ret
addr16
pushf
jl
sbb
test
aad
mov
das
cltd
das
sbb
sbb
jae
jbe
daa
push
outsl
jo
xor
aad
and
stos
xlat
sbb
jne
sbb
imul
outsb
or
int
sbb
loopne
mov
sbbl
bnd
mov
pop
xchg
jecxz
cltd
sbb
gs
push
sub
sti
jnp
stos
lock
lds
loop
aaa
pop
rcrb
outsb
imul
inc
dec
dec
in
mov
xchg
mov
cs
push
mov
movsl
ret
mov
ja
push
xchg
inc
outsb
in
enter
in
fsubr
mov
sbb
add
lea
xchg
cmc
int
int
jne
pusha
sub
movsb
lods
cmp
ja
lods
xchg
pusha
sbb
pop
aam
mov
call
fdivs
sbb
lahf
scas
int
cmpsl
pop
stc
xchg
sbb
push
push
xchg
mov
clc
mov
insb
sub
push
out
cmc
jno
jle
xchg
xchg
leave
cmpb
jnp
cwtl
stos
in
inc
jns
sbb
js
mov
outsl
mov
mov
movsb
or
pop
and
fucom
pop
lahf
imul
push
stos
mov
push
outsl
jns
sarb
xor
or
add
ja
pusha
mov
adc
cli
das
mov
aad
add
pushf
sbb
adc
std
sbb
lods
xlat
push
push
andb
scas
or
jo
dec
xchg
test
push
repnz
push
enter
loope
jmp
out
mov
call
xchg
jmp
in
jp
daa
pop
repnz
sbb
gs
dec
mov
stos
push
adcl
sub
je
sbb
cld
ret
inc
insb
xor
hlt
mov
dec
or
jb
sub
add
repz
jle
in
pop
das
aad
mov
or
jnp
lret
int3
jmp
sbb
fstl
push
sti
xor
mov
push
bound
sbb
pop
insl
jns
aas
in
inc
push
scas
fwait
js
or
dec
gs
inc
adcl
addl
inc
cmp
movsb
fdivs
xchg
mov
bound
ja
dec
push
cmp
gs
sahf
pop
mov
inc
cs
testl
push
pusha
aam
test
fsubp
cmpsb
in
cmp
mov
ja
sub
inc
and
xchg
dec
cld
and
iret
xchg
pop
loop
add
lret
js
testl
jmp
cs
ror
jp,pn
lods
bound
nop
lock
and
sbbb
into
scas
dec
in
push
or
mov
loope
push
loopne
cs
adc
xor
popf
sbb
imul
cwtl
push
aas
mov
mov
addr16
lcall
and
pop
cmpl
jge
daa
cltd
xchg
iret
push
cmp
xchg
cli
xor
aas
insl
hlt
push
adc
push
jmp
stos
inc
insl
ja
adc
pop
fdivrs
fstpt
mov
pop
mov
jg
ret
int
add
enter
xor
dec
push
push
outsb
sub
fnstsw
popa
mov
popa
cld
add
jb
mov
mov
jne
adc
mov
les
lock
xor
call
cltd
pushf
mov
out
jno
sbb
les
negl
push
mov
dec
xor
testl
inc
mov
lods
sub
lds
lock
pop
cmpb
cli
push
sti
neg
mov
adc
pop
ss
dec
ljmp
lret
jne
lahf
in
pop
stos
push
push
arpl
sbb
dec
inc
jecxz
push
sahf
lcall
push
test
xchg
in
inc
xor
pop
push
inc
shl
inc
leave
push
leave
pop
mov
fnstsw
inc
mov
xor
jne
and
xchg
lods
inc
dec
xchg
sbb
pop
jmp
pop
cmp
fsubl
push
enter
jnp
loopne
addb
imul
jnp
and
mov
adc
or
mov
xchg
sbb
or
jge
pop
push
cltd
mov
pop
les
fwait
pop
ret
push
adc
aam
jno
stos
lcall
jecxz
jne
push
test
fiaddl
icebp
mov
hlt
test
imul
add
out
sub
pop
xchg
fwait
sbb
imul
icebp
rcrb
push
push
mov
ss
adc
or
xor
lcall
lods
pushf
movsl
test
fdivs
mov
xchg
jmp
leave
bound
mov
sbb
pop
jle
imul
xchg
divl
or
cmc
dec
adc
mov
outsl
outsl
cwtl
fwait
mov
sar
inc
sub
loopne
sbb
push
call
mov
adcb
jge
xor
lret
ds
or
bound
push
fwait
mov
lods
mov
stos
pop
mov
xchg
sub
add
mov
inc
ljmp
dec
mov
cltd
xor
loopne
adc
or
or
dec
xchg
fst
push
inc
mov
xlat
adc
cwtl
jbe
movsl
push
mov
lret
adc
adc
pop
sub
ret
dec
es
inc
mov
mov
adc
inc
and
sbb
xchg
mov
icebp
stc
jl
jb
imull
sbbl
inc
xlat
dec
and
testl
pop
mov
mov
jo
xchg
adcl
leave
and
loopne
mov
sarl
mul
ja
leave
jb
mov
mov
std
xlat
adc
inc
cmp
xor
dec
sbb
xor
push
pop
cld
add
iret
inc
xchg
sahf
imul
inc
js
mov
inc
js
sub
cmp
or
or
movsl
sub
or
pop
data16
cmc
push
push
ret
fbld
pop
xchg
ds
shl
inc
pop
lods
loope
inc
cmpb
leave
scas
jmp
pop
xchg
cmp
dec
mov
xchg
add
addr16
sub
xor
stos
push
scas
lds
xchg
int3
add
xlat
outsl
push
xor
loope
xchg
cmp
or
mov
sbb
neg
icebp
loop,pt
jg
sub
mov
jae
ss
out
sbb
lret
jl
mov
and
es
push
xchg
push
cltd
jg
ret
fimuls
jb
aas
jge
jae
icebp
shr
sub
jo
stos
repnz
push
clc
movsl
xor
xchg
xor
xlat
pop
mov
sub
add
cwtl
leave
mov
addr16
call
xchg
xchg
sub
test
sahf
dec
pop
dec
sbb
jns
push
into
int3
fistps
lods
or
subb
adc
scas
push
mulb
mov
insb
imul
adc
popa
loop
dec
mov
loope
clc
loopne
jl
push
ret
mov
or
mov
mov
into
adc
mov
lock
sbb
fwait
jne
mov
cli
repnz
cmpsl
daa
push
and
rclb
fmulp
jge
or
pop
mov
outsb
cltd
sub
test
or
sbb
mov
or
in
sbb
jecxz
stc
xchg
lret
xchg
inc
loope
mov
pop
fs
les
lock
cwtl
out
dec
cmp
cltd
ljmp
jbe
insl
inc
cmp
adc
adc
inc
mov
mov
aam
dec
jo
int
pop
adcl
hlt
mov
lods
hlt
dec
leave
cmp
test
xorl
cmc
jae
ret
xor
ss
je
movsl
into
arpl
cmpb
mov
daa
pop
ja
sbb
loope
cmp
fdivr
fstpt
fcoml
xchg
adc
jle
dec
sbb
call
insl
add
sahf
cmp
dec
dec
scas
adc
shlb
fdivrl
outsl
out
js
out
leave
add
test
test
out
mov
dec
or
or
rcr
jl
or
cmp
aam
mov
and
cltd
dec
sar
pop
stc
loop
daa
fwait
dec
mov
cmpsb
sti
mov
in
jae
cld
gs
sbb
mov
mov
es
push
push
add
mov
pushf
aaa
push
xchg
bound
jmp
enter
mov
xchg
inc
add
cmpl
dec
rorl
std
fs
push
call
dec
js
xor
insl
cmp
enter
divl
in
push
stos
lcall
mov
push
adc
mov
inc
call
jl
mov
inc
cmp
push
add
push
add
stc
lea
jbe
pop
push
out
repz
xorb
repnz
ret
mov
rol
fidivrs
movsl
dec
mov
js
sbb
jl
dec
mov
andb
adc
push
in
rcrl
int
push
inc
leave
sbb
xor
cld
cmp
mov
ret
add
sbb
sub
cmp
add
out
and
jno
aad
daa
dec
sahf
pop
cld
xor
xchg
aad
inc
xchg
aas
add
mov
loope
inc
pop
insl
unpckhps
ds
arpl
mov
shll
fwait
pop
and
incl
dec
sbb
pop
or
push
push
mov
test
sbb
pop
mov
adc
sub
flds
sub
jmp
rorb
in
ljmp
js
fcoml
inc
gs
dec
fdivrs
or
lods
push
sub
or
and
jle
ret
mov
mov
in
inc
aas
inc
jl
call
or
add
jnp
sub
jp
mov
add
out
outsl
mov
int3
pop
sbb
adc
dec
sbb
into
insl
movsl
mov
stos
sub
popf
push
add
mov
out
jp
sbb
mov
mov
lahf
or
pop
jle
pop
testb
cmc
xchg
adc
adc
lret
mov
out
mov
mov
mov
leave
push
xor
and
pop
mov
loopne
inc
xor
inc
mov
mov
mov
jns
mov
pop
cltd
mov
iret
push
testl
in
popa
nop
stos
push
pop
sub
fdivrp
icebp
add
sbb
mov
dec
lahf
cmpsl
scas
lods
mov
loopne
inc
das
cli
ror
leave
jl
lds
inc
push
cmpb
mov
outsb
scas
popf
or
ss
out
dec
jecxz
fisubrs
cmp
dec
imul
jl
xchg
lret
sbb
js
or
arpl
sub
jle
aaa
scas
jp
push
cmp
out
jle
sub
and
and
jl
push
int3
pop
int
mov
adc
add
fstpt
jle
mov
iret
rorl
adc
xor
add
push
clc
test
arpl
cmpsb
sub
ror
lret
adc
jne
or
in
lahf
sbb
aas
ja
mov
push
xor
mov
push
fldl
subl
or
insb
shrl
lret
or
xorb
ret
push
cli
aam
je
pop
std
dec
loope
adc
test
subl
xor
mov
xchg
cmp
sbb
out
cwtl
pop
jns
cmp
icebp
rolb
js
xchg
std
and
mov
addb
pop
iret
mov
out
ss
mov
inc
in
dec
or
jbe
mov
cmpsl
xlat
js
mov
call
hlt
dec
push
sub
jp
push
adc
mov
ss
push
outsb
adc
out
shlb
adc
mull
mov
insb
outsl
mov
xor
hlt
fldcw
mov
and
or
adc
test
cwtl
dec
mov
and
jg
std
sub
mov
sbb
xor
outsl
jbe
add
xchg
sub
push
adc
int
mov
xchg
push
dec
test
jp
pop
aas
fidivl
lcall
inc
push
cmp
dec
fstps
sub
pop
pop
cli
in
or
fsubrl
lret
xchg
and
test
pop
mov
fldcw
outsl
outsb
adc
adcl
fadds
inc
xchg
js
icebp
dec
xchg
xor
jo
sub
inc
mov
push
test
shrl
lret
icebp
cmp
fsin
jno
negl
out
lcall
gs
insb
in
scas
xchg
adc
fcom
push
jae
out
and
test
mov
and
std
in
ja
mov
and
aas
mov
mov
movsb
lret
mov
cmp
fldenv
cmp
xchg
xor
cmp
or
pushf
mov
fadds
mov
test
adc
push
xlat
jge
decb
testb
push
jne
dec
in
dec
dec
cli
and
push
mov
xchg
fsub
mov
jmp
or
inc
sbb
and
imul
mov
fadds
dec
subl
inc
push
push
mov
mov
add
pop
nop
mov
or
lret
inc
mov
mov
cmp
decl
dec
pop
addr16
sbb
sarl
fsubrs
sti
test
inc
lds
lods
pusha
sub
xchg
xchg
icebp
icebp
test
insl
ffreep
lds
into
jbe
cmp
cmp
adcb
lret
pop
ret
add
imulb
or
mov
jg
push
xchg
int3
mov
dec
insl
dec
xchg
mov
cmp
ds
mov
jecxz,pt
or
jns
push
out
popa
insl
imul
jb
sub
cmp
mov
mov
test
cmp
testl
daa
mov
out
sysenter
jecxz
add
jp
or
sub
mov
loopne
cwtl
inc
shlb
pop
iret
lret
lcall
jmp
orl
fcmovbe
cmpb
repnz
lea
push
inc
xchg
fidivrs
aad
aas
out
repnz
or
lret
xor
sub
rcl
nop
rclb
lret
push
out
fdivrl
and
call
je,pt
shlb
call
addr16
or
add
cmp
mov
xor
jno
cmpsl
jge
test
ss
daa
hlt
inc
lahf
xchg
out
popa
nop
sbbb
aaa
js
addb
pop
scas
pop
sub
test
or
pusha
xor
faddl
hlt
insl
inc
jg
and
push
dec
les
add
mov
lods
jp
aad
cltd
sub
add
cmpsl
push
or
jge
je
sarb
sahf
lret
or
xchg
out
clc
mov
mov
push
xor
and
icebp
add
mov
xchg
xchg
shlb
xlat
push
ljmp
mov
mov
jmp
jb
mov
sbb
popf
int3
dec
jo,pt
xor
nop
and
lock
sbb
xor
and
and
sub
in
or
push
dec
je
jp
rcr
daa
lret
xor
lret
orl
sbb
xchg
out
mov
arpl
imul
lods
adc
mov
out
mov
push
jecxz
pop
mov
cli
fucomip
out
fs
adc
sbb
dec
test
mov
popf
in
loopne
repnz
out
adc
daa
test
jge
pop
and
xor
gs
sub
mov
les
lcall
test
test
inc
inc
push
xchg
test
fsubl
mov
and
loop
call
mov
dec
cmpsl
pushf
or
xlat
rcll
pop
lods
push
lea
fwait
add
mov
aaa
pop
hlt
sahf
add
imul
dec
outsb
outsb
push
dec
or
mov
jmpw
shll
arpl
sub
lahf
bound
pop
xchg
test
out
cmp
shlb
dec
sbb
dec
int3
dec
dec
adc
lea
es
xchg
cmpsb
xor
out
inc
retw
clc
or
add
push
in
adc
pop
add
push
fsts
jns
pop
insl
mov
scas
and
or
add
stc
xor
jmp
mov
inc
sub
pop
fdivl
test
std
push
es
repz
xchg
shlb
jae
gs
fdivrs
push
adc
ds
mov
int3
xchg
mov
fisubs
jmp
testl
fmuls
cs
dec
rclb
fsts
ret
jno
loopne
pop
sub
push
cmpsb
dec
ret
cli
sub
insl
or
dec
jns
pushl
xchg
mov
test
lahf
xor
sahf
mov
imul
test
rol
or
mov
sbb
mov
ja
jne
jne
jbe
data16
xor
ficoml
mov
xlat
pop
or
inc
adc
outsb
daa
inc
pop
sbb
sbb
push
fwait
pop
push
scas
xchg
mov
adc
xor
sbb
xor
insl
cwtl
aam
xor
mov
in
fwait
push
shl
mov
xor
dec
daa
add
mov
out
inc
sub
cwtl
fistpl
addr16
lcall
sahf
push
mov
shlb
mov
call
repz
int
push
xchg
insb
jmp
es
lds
out
test
xchg
jge
sti
jge
cmp
cmpsb
pop
mov
ret
cmp
or
sbb
ljmp
xor
arpl
xchg
dec
mov
cmp
or
sbb
ljmp
xor
arpl
popf
dec
mov
cmp
ljmp
cmp
push
xchg
pop
addr16
ja
inc
pop
repz
cmp
mov
xor
and
inc
fnstsw
xor
jne
gs
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
