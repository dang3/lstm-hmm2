sub
mov
shr
dec
mov
shr
or
add
rol
mov
mov
push
jmp
push
push
mov
mov
mov
add
add
mov
shr
dec
shr
mov
jmp
jne
jmp
movzwl
push
jmp
add
push
jmp
push
jmp
jmp
inc
subl
push
push
jmp
call
jmp
push
inc
nop
inc
ret
xorl
call
mov
jmp
mov
jmp
add
add
mov
call
call
cmpl
jne
jmp
test
lea
jle
xor
mov
jmp
lea
jmp
movl
mov
push
mov
mov
push
mov
mov
movl
jmp
call
push
jmp
push
push
xorl
push
jmp
call
call
jmp
int3
call
dec
xorl
jmp
call
jmp
test
add
add
xor
call
add
pusha
jmp
xor
jmp
iret
cmpsb
popf
mov
mov
jle
jmp
inc
shr
add
sub
mov
mov
jmp
call
push
jmp
call
call
call
subl
call
lea
jmp
call
test
je
lea
cmp
je
jmp
mov
add
add
push
jmp
jne
and
add
jmp
add
inc
and
mov
jmp
or
mov
sub
cmpw
jne
or
mov
mov
mov
xor
and
cmp
jmp
jecxz
popa
sete
mov
ret
add
add
add
leave
jmp
lea
add
sub
sub
mov
add
test
je
jns
jmp
jne
push
jmp
push
jmp
push
addl
pushl
call
pushl
ret
jmp
mov
jmp
test
jmp
add
add
jmp
or
imul
dec
add
inc
add
mov
rol
mov
sub
mov
push
mov
jmp
dec
xor
mov
movzbl
add
mov
jmp
movzwl
or
dec
or
shr
mov
add
add
sub
add
jmp
rol
xor
mov
mov
test
jne
add
ret
xor
mov
rol
mov
xor
mov
mov
rol
sub
mov
jmp
add
push
xor
mov
mov
or
inc
mov
sub
mov
push
push
push
push
jmp
call
int3
subl
jmp
lea
je
push
push
and
add
xor
mov
xor
mov
sub
shr
jmp
push
jmp
dec
addl
call
test
jmp
cmpb
jne
nop
nop
shl
and
sub
xor
mov
jmp
sub
inc
add
dec
mov
mov
sub
test
jne
add
shl
mov
movzbl
add
jmp
push
lret
inc
cld
add
add
mov
jmp
nop
push
nop
jmp
mov
lea
rol
xor
mov
shr
and
lea
jmp
or
mov
and
add
and
mov
and
cmp
jmp
shr
jmp
add
add
add
add
pop
add
push
push
mov
and
or
mov
sub
cmpl
jmp
mov
sub
sub
mov
jmp
js
push
and
sub
mov
rol
mov
mov
mov
mov
push
push
dec
and
and
shl
mov
jmp
mov
movb
jmp
test
jmp
add
add
pop
and
mov
or
mov
test
je
mov
jmp
push
push
jmp
je
add
jmp
inc
dec
roll
or
mov
movzwl
movzwl
add
shl
add
and
ror
mov
lea
sub
jmp
ret
mov
jmp
nop
movzwl
jmp
add
dec
and
mov
rep
jmp
add
in
push
adc
or
mov
sub
push
push
sub
mov
test
jmp
mov
mov
mov
mov
jmp
lea
jmp
je
push
jmp
or
mov
movb
xor
cmp
jmp
mov
mov
add
sub
test
jne
jmp
jmp
mov
inc
sub
dec
dec
mov
mov
xor
inc
mov
add
mov
sub
mov
mov
sub
mov
jmp
add
push
jmp
call
ret
add
add
add
jmp
or
ror
mov
add
push
call
sub
or
inc
mov
cmp
je
ror
xor
dec
mov
jmp
bound
call
lea
addl
call
mov
jmp
test
jne
add
mov
mov
xor
sub
mov
jmp
xor
ret
or
shl
and
mov
pop
ret
add
add
add
call
popa
jmp
mov
ret
add
add
add
and
and
and
xor
mov
shr
and
add
test
jne
jmp
mov
mov
mov
mov
jmp
add
jmp
add
add
arpl
or
inc
and
cmp
inc
and
pop
jmp
lea
push
movb
mov
jmp
movl
jmp
add
jne
add
ret
mov
jmp
push
lea
push
jmp
loop
mov
mov
movb
movb
movb
call
test
jmp
popa
mov
test
add
add
fildl
add
mov
mov
pop
ret
add
add
add
hlt
add
add
adc
in
add
add
push
dec
xor
and
mov
mov
sub
mov
jmp
jne
push
jmp
inc
call
jmp
nop
subl
call
shl
shl
shl
rol
mov
jmp
add
cmpl
jmp
xor
pop
jmp
add
jmp
xorl
push
jmp
push
call
jmp
ret
inc
leave
call
ret
nop
leave
addl
jmp
movb
mov
movb
mov
movb
call
cmp
push
jae
jmp
push
push
jmp
add
les
pop
jmp
test
mov
mov
mov
movl
jle
add
jmp
and
cmpw
je
jmp
lea
jmp
xor
ret
jmp
mov
mov
jmp
add
fsubr
repz
incl
add
add
add
add
add
add
not
out
ror
xor
mov
push
jmp
inc
push
xorl
call
jmp
dec
rol
ror
ror
add
mov
sub
test
jne
movzbl
add
jmp
test
je
movsbl
rol
add
xor
mov
test
jmp
cmp
mov
mov
jl
add
add
sub
mov
mov
mov
mov
push
mov
jmp
jae
sub
xor
add
test
dec
add
cmp
jne
jmp
inc
ror
ror
mov
sub
and
shl
shr
ror
mov
jmp
mov
lea
sub
mov
or
mov
shr
and
jmp
jne
cmp
je
add
cmp
jl
pop
jmp
push
add
and
ror
mov
sub
dec
mov
call
add
and
mov
call
push
jmp
leave
call
push
push
push
addl
push
jmp
jmp
call
leave
pop
addl
jmp
pop
pop
pop
mov
pop
ret
pop
mov
jmp
cmp
jne
addl
pop
add
ret
subl
pop
jmp
dec
mov
push
push
jmp
lea
lea
cltd
and
add
sar
test
jle
shl
shr
or
mov
and
mov
jmp
sub
or
mov
mov
add
shr
xor
mov
lea
push
push
jmp
push
xorl
jmp
add
ret
add
add
add
rolb
push
add
mov
and
sub
mov
sub
test
jmp
jb
push
call
sub
mov
call
shr
xor
dec
mov
call
movl
lea
jmp
mov
mov
ret
add
add
add
test
mov
jmp
imul
jb
pop
shr
or
ror
mov
mov
jmp
call
mov
dec
or
and
or
mov
inc
sub
mov
mov
jmp
call
add
mov
xor
sub
inc
and
mov
jmp
inc
shr
mov
test
jle
and
mov
jmp
add
pop
add
or
mov
mov
mov
sub
and
rol
sub
add
mov
shr
and
add
jmp
pop
ret
or
add
xor
add
mov
movzwl
mov
sub
mov
mov
jmp
mov
mov
cmp
jmp
add
test
jne
add
cmpl
jmp
sub
sub
sub
mov
jne
sub
sub
jne
test
jmp
call
push
jmp
push
xorl
jmp
in
xchg
mov
call
push
jmp
push
subl
mov
call
push
jmp
jmp
call
push
call
push
nop
leave
inc
addl
mov
call
jmp
test
mov
je
inc
inc
mov
sub
jmp
pop
add
pop
shr
sub
and
sub
or
mov
pop
ret
add
add
add
test
decl
add
add
test
clc
lcall
pop
mov
pop
ret
add
add
add
mov
and
ljmp
sti
sub
dec
shl
mov
add
add
sub
jmp
pop
push
dec
push
jmp
call
push
leave
addl
mov
call
add
mov
call
push
jmp
call
xorl
push
jmp
dec
call
addl
push
jmp
call
jmp
call
ret
xorl
jmp
lahf
enter
pop
mov
mov
jmp
lret
icebp
bnd
test
mov
jle
jmp
repnz
mov
add
test
je
add
ret
pop
pop
mov
jmp
jge
inc
jne
jmp
in
jnp
mov
pop
or
sub
sub
mov
or
mov
pop
ret
add
add
add
mov
add
mov
lea
xor
mov
shr
and
jmp
adc
stos
inc
mov
and
mov
lea
jmp
cmc
mov
adc
mov
add
mov
pop
ret
add
add
add
enter
xor
and
mov
jmp
sub
shr
lret
push
add
add
inc
inc
and
add
add
and
shl
add
add
mov
sub
test
jne
jmp
jg
rcl
mov
pop
inc
add
mov
or
or
mov
xor
jmp
sbb
push
add
lea
sub
xor
mov
shr
jmp
int3
orl
ljmp
lcall
pop
inc
sub
and
mov
pop
ret
add
add
add
subl
lea
jne
test
jmp
jecxz
mov
sbb
test
add
add
add
mov
mov
sub
mov
mov
add
jmp
jmp
inc
repz
movb
add
jmp
movzbl
sub
ror
mov
and
add
add
shr
jmp
es
mov
mov
je
test
je
add
or
xor
mov
sub
add
jmp
cmp
sub
mov
mov
jne
dec
shr
sub
inc
add
mov
mov
mov
movl
jmp
jmp
jg
test
inc
and
add
add
mov
movl
jmp
movsb
stc
dec
jmp
lea
call
jmp
or
or
jne
cmp
jne
call
test
mov
je
mov
sub
shl
xor
mov
mov
jmp
mov
adc
add
add
mov
jmp
push
hlt
jne
test
decl
roll
add
sub
jmp
sub
shl
sub
or
add
mov
jmp
push
pop
adc
loopne
add
add
jmp
sub
adc
jmp
jecxz
pop
and
xor
add
mov
mov
call
jmp
jmp
add
add
addb
add
add
cmp
jb
add
cmp
jae
jmp
aad
jg
rolb
rorb
cmp
add
lea
jmp
aad
pop
xor
or
and
mov
sub
mov
mov
add
sub
jmp
mov
test
jmp
cmp
and
mov
or
mov
or
mov
xor
rol
mov
movl
jmp
mov
mov
jmp
daa
adcb
add
inc
and
add
add
mov
cmpl
je
pop
jmp
push
enter
add
pop
pop
xor
or
add
mov
pop
ret
add
add
add
inc
xor
add
xor
add
add
add
add
xor
add
xor
add
xor
add
add
add
xor
add
add
inc
xor
add
xor
add
add
add
add
xor
add
xor
add
xor
add
add
add
xor
add
add
add
add
outsl
jae
inc
jb
jbe
jb
or
dec
jo
outsb
inc
jb
jbe
jb
add
add
push
popa
je
push
outsb
popa
insl
gs
js
outsb
jae
outsl
outsb
inc
add
imul
push
gs
outsl
jbe
inc
jb
jae
add
add
je
inc
imul
inc
outsl
insl
jo
outsb
outsb
je
add
push
add
gs
je
inc
imul
js
je
jb
arpl
jae
mov
je
push
add
filds
inc
gs
imul
je
adc
add
add
add
add
add
add
add
add
gs
clc
cmp
add
add
add
add
add
aaa
test
out
repnz
xor
aas
cmp
cmp
add
adc
cltd
aaa
in
jmp
cmp
cmp
push
xor
jno
adc
aas
ja
fwait
aas
adc
xorb
xor
xor
cmp
cmp
xor
xor
xor
xor
xor
outsb
cmp
movsb
aaa
add
mov
add
add
lcall
xor
xor
add
cmp
aaa
cmp
insb
popa
push
mov
shlb
out
mov
or
xchg
dec
out
or
int3
cli
cmp
stc
or
leave
leave
enter
cmp
pop
loopne
out
imul
lret
mov
sub
add
adc
rorb
inc
jl
xor
mov
lret
and
movsl
inc
fldcw
in
inc
dec
xchg
pop
mov
and
mov
enter
pop
test
rolb
in
sbb
