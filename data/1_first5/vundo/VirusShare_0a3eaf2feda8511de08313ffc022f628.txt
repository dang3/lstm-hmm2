and
cmp
sahf
push
push
mov
testl
pop
das
xor
jne
inc
xchg
test
jb
mov
cli
pusha
cmp
movsl
dec
imul
dec
pop
adc
adc
subl
ret
dec
inc
repz
pop
insl
jns
adc
push
pop
test
es
insl
insb
call
stos
xor
mov
dec
outsl
cmp
mov
push
adcl
pop
xchg
mov
add
lret
sub
stos
imul
sarb
adc
push
push
int
xchg
xchg
add
fstps
xor
adc
xor
mov
push
push
xor
test
lods
rorl
sahf
out
sub
cmp
iret
adc
test
sarb
pushf
test
shlb
cmc
jb
xor
popa
sub
sub
adc
test
adc
arpl
xchg
loopne
mov
pop
adc
inc
jg
lret
mov
pushf
pop
into
aaa
cmp
add
mov
mov
ret
pop
push
cmp
xchg
pushf
xor
push
ret
cmc
setnp
xor
enter
loop
adc
xchg
mov
and
or
sti
xor
icebp
xchg
sub
mov
cmp
inc
and
jl
cmp
les
lret
mov
mov
xchg
test
inc
adc
popf
mov
mov
sbb
dec
stc
lahf
arpl
jo
aas
pop
jle
cld
and
push
fucomp
int
loope
xchg
push
sub
mov
xchg
loopne
ljmp
and
sbb
out
inc
data16
xchg
mov
mov
mull
addr16
or
xchg
or
push
mov
or
mov
orb
das
into
out
or
sbb
les
mov
lds
pushf
aad
nop
shr
in
mov
adc
dec
sub
pushf
sbb
pop
stos
aaa
scas
pop
push
pop
jne
in
imul
xorl
test
cltd
adc
shrl
sub
jge,pn
xchg
xorb
or
gs
les
sub
inc
cwtl
out
popf
repz
inc
inc
gs
arpl
inc
sbb
nop
cmp
jmp
and
add
dec
imul
mov
shll
cmc
pop
lret
clc
loop
insb
out
pop
add
dec
aam
inc
xor
xchg
cmp
adc
mov
and
rcll
out
ja
movsl
and
movsl
adc
subb
out
fidivrl
xchg
mov
test
push
jb
adc
icebp
mov
inc
mov
pushf
push
stos
movsb
pushf
mov
inc
mov
data16
mov
pop
add
pop
ret
aas
sub
mov
mov
out
loopne
cs
mov
push
push
repnz
fwait
dec
ljmp
test
cmp
sub
int3
in
push
jb
xchg
ret
mov
mov
mov
test
mov
sbb
mov
xor
fsub
mov
das
cmp
mov
gs
decl
lock
cmc
and
xchg
cltd
cmp
in
xor
inc
cmp
jle
xor
xor
cmp
mov
cmp
lret
push
push
jbe
iret
pop
mov
push
dec
stos
scas
mov
or
mov
mov
xlat
or
pop
repz
ljmp
dec
loop,pn
insl
mov
jmp
sbbb
mov
popf
mov
pop
out
inc
mov
loop
mov
hlt
pop
scas
addr16
pop
cmp
sub
scas
sti
cs
inc
adc
jle
nop
cmpsl
cltd
lret
cltd
mov
shll
leave
jno
xchg
addl
mov
pop
jecxz
cwtl
sbb
xchg
push
test
mov
repz
in
inc
mov
dec
mov
iret
xor
cmp
lret
xorb
mov
iret
cmpsb
arpl
xchg
lock
test
sub
ss
nop
sbb
insl
lahf
xchg
ss
subb
inc
out
add
loopne
xor
jnp
sbb
or
inc
scas
sub
mov
in
adc
in
test
les
lahf
out
fxtract
ja
addr16
or
test
sub
es
mov
cmp
shrl
sbb
stos
test
nop
pushf
dec
push
dec
rcrl
push
jo
inc
xchg
cld
scas
pop
sbb
adc
xlat
pop
add
in
add
loope
js
xor
jnp
jle
mov
mov
adcl
mov
movsb
int
sti
add
cmp
idivb
movsb
fiadds
decl
test
lock
mov
sbb
insb
dec
push
mov
sub
cmpsl
lock
out
stos
sti
mov
mov
fwait
dec
pop
sub
add
scas
pop
cmp
shll
jbe
jbe
jl
inc
mov
mov
cli
push
jnp
adc
jo
and
addr16
aam
scas
fcomp
stos
pop
xchg
lea
stc
mov
xor
gs
outsb
sub
mov
lret
push
sbb
mov
sbb
repnz
in
fs
out
xchg
adc
mov
mov
std
xchg
mov
mov
in
jl
mov
dec
das
jne
icebp
pop
and
imul
lods
out
jmp
std
arpl
pop
clc
or
ret
xchg
cmp
add
dec
xchg
fistpll
pop
out
pushl
andl
jbe
adc
cltd
mov
xor
ficoms
aas
jno
xor
cmc
xchg
cmp
cs
add
mov
sub
mov
test
add
insb
ljmp
mov
pop
jae
test
int
sub
cld
jmp
icebp
adc
push
cmp
mov
cmp
xor
inc
test
xchg
mov
cmp
ljmp
pop
adc
andb
das
int3
in
lret
js
mov
test
lcall
dec
fsub
rorb
movsb
mov
inc
dec
sub
mov
jae
xor
lods
mov
clc
loopne
loop
or
or
scas
xor
call
cld
repnz
or
cmc
xchg
std
addr16
iret
sub
dec
xchg
push
call
js
loope
xchg
and
test
jp
sbbl
dec
sbb
aas
mov
mov
sub
int
push
cltd
add
xchg
adc
and
fyl2x
adc
lods
stos
pop
mov
lods
jne
lcall
insb
sbb
dec
adc
jmp
insl
push
in
cmp
push
fisubl
loope
fs
fisubl
gs
jecxz
dec
enter
lahf
loope
mov
xor
test
in
mov
mov
cmp
dec
enter
jge
xchg
test
fs
cmpsl
dec
push
sbb
push
movsb
imul
clc
mov
leave
pop
imul
fcoms
adc
int3
lods
daa
add
stos
cli
inc
addr16
in
leave
jbe
xor
pop
stos
xchg
loopne
imul
jecxz
loope
pop
xlat
cmp
in
jo
xchg
dec
fsubl
and
ss
sub
xor
fwait
lds
inc
cld
sti
stos
xor
arpl
bound
push
ljmp
dec
xchg
xchg
cmp
mov
sub
mov
mov
xchg
jg
xchg
in
out
mov
out
lods
test
test
inc
divl
imul
push
popa
dec
mov
cs
xchg
aad
lret
mov
push
mov
or
outsl
mov
adc
incb
push
test
xorl
int
xchg
inc
cmp
rolb
cmp
shlb
pop
je
xlat
cmc
jns
pop
data16
in
pop
fcmovb
adc
jb
or
mov
cmc
push
insl
pop
and
stc
or
iret
pop
bnd
and
loop
mov
lds
jne
std
pop
cmp
es
xor
push
imul
fmull
adc
jmp
ss
icebp
jnp
movsb
andb
adc
lret
in
js
mov
jne
fwait
inc
mov
es
cmp
repnz
and
lret
cmp
movsb
cmc
jb
cld
bnd
cli
cmp
dec
outsb
add
ds
pop
sub
mov
adc
fbstp
mov
add
insl
pop
sub
enter
sahf
add
mov
cs
dec
in
movsb
imul
mov
adcl
in
mov
jg
dec
jecxz
push
cmpsl
sub
mov
in
mov
scas
mov
sbb
lahf
lret
cmc
aad
outsb
sub
jecxz
xchg
xor
jno
xchg
and
fimull
out
adc
jne
sub
xor
mov
lock
leave
test
rorb
adc
push
pop
inc
dec
dec
jp
adc
arpl
ljmp
setns
dec
test
xchg
mov
in
dec
fpatan
xor
mov
xor
dec
aad
jns
lret
push
addr16
data16
pop
loopne
jle
rcl
inc
sbb
hlt
iret
iret
test
fdiv
inc
mov
add
mov
div
jns
cmp
jmp
movsl
sub
inc
jb
mov
push
mov
popf
add
in
dec
xor
addr16
jno
call
cli
or
jnp
push
mov
mov
mov
push
and
pop
mov
loopne
pop
cmc
sub
jae
fwait
inc
and
adc
jmp
mov
mov
test
cmp
stos
dec
or
scas
mov
mov
out
xor
pop
imull
frstor
xor
jle
sti
inc
or
lret
xchg
es
mov
and
or
fwait
pop
mov
dec
punpckhbw
add
push
jp
cmc
inc
cmpsb
mov
cld
divl
jns
fst
addr16
int
adc
pop
shrl
lock
addb
testb
or
xchg
jle
push
push
or
enter
cmp
icebp
mov
das
pushf
das
adc
rcll
inc
es
and
sbbb
cmpsl
sbb
mov
xchg
jge
mov
icebp
push
cwtl
hlt
push
mov
xchg
out
add
mov
in
push
add
or
fwait
pop
repz
mov
addr16
cmp
xor
xchg
in
adc
lods
cmp
loop
dec
add
pushf
cmp
mov
aad
pop
lock
mov
jp
jg
dec
push
add
jl
pop
int
xor
ret
divb
xchg
jmp
dec
lock
lahf
clc
daa
and
xlat
les
jae
insb
or
imul
sub
shlb
fisubs
test
movsl
push
int3
sub
shl
rol
out
clc
push
push
mov
test
add
bound
out
mov
xchg
mov
xor
mov
lods
cld
mov
xor
dec
fldl
call
inc
or
add
sbb
aas
jge
imul
push
rcrb
aaa
repnz
jl
cmp
movsb
insl
xchg
test
xlat
mov
jb
in
aad
push
add
and
jb
push
fs
xchg
cmp
ja
or
sbb
dec
in
idivb
cmp
cli
cmp
sbb
sub
xchg
cmp
jb
mov
jne
loop
jb
xchg
stos
incl
sbb
inc
in
inc
shr
fwait
adc
cli
xchg
jbe
sub
fstpl
in
jmp
pop
lcall
jge
mov
enter
pop
cmp
fs
aad
notb
loop
mov
out
stos
and
mov
movsl
lods
cli
mov
push
xchg
or
ds
test
xchg
pop
orl
mov
dec
pushf
sub
testl
dec
inc
ds
pop
repnz
adc
mulb
sarb
xor
int
mov
sbb
js
into
xlat
ljmp
and
cmp
hlt
or
and
mov
pop
shl
mov
cmp
repz
icebp
dec
inc
punpcklbw
dec
adc
stos
dec
popa
pop
repz
popf
rclb
fsubr
lahf
jae
loope
dec
and
mov
jl
movsb
xor
cwtl
test
adc
xchg
jp
pop
lcall
jno
aad
or
adc
ret
lret
int3
pop
sub
loopne
fcomip
add
pop
mov
mov
sub
xor
pop
imul
js
fs
das
jmp
fwait
test
aas
dec
add
ljmp
or
push
jns
scas
stc
push
sbb
mov
xchg
mov
ja
sti
mov
push
or
mov
fidivl
mov
cwtl
or
aas
hlt
aaa
movsb
dec
popl
inc
mov
mov
mov
mov
lods
jb
out
ficoml
imulb
jmp
inc
enter
rcrl
pop
xchg
loope
cli
gs
jmp
add
push
push
xor
mov
mov
out
pop
lret
inc
mov
int
ret
xor
xchg
add
imul
les
imull
sbb
lods
fs
lahf
mov
test
out
lods
cmpsb
iret
pop
pop
xor
push
rcr
ja
mov
jge
lock
xchg
insb
addl
mov
pushf
int3
xchg
pop
jmp
scas
shlb
std
jns
fs
adcb
jo
icebp
shll
mov
cs
xor
or
xchg
jo
mov
xor
adc
or
pop
mov
mov
adc
sbb
mov
sub
stos
jnp
push
in
mov
push
add
ret
mov
test
out
adc
scas
addr16
pop
mov
fs
sub
xchg
jge
or
xlat
ret
ret
cs
ret
sbb
ja
sbb
les
fdivp
xor
add
xchg
lss
in
test
stos
enter
fbld
sbb
cmp
into
ret
push
mov
test
sub
inc
ss
ret
cmp
pop
aaa
xchg
mov
setnp
mov
inc
jo
pop
xchg
pop
push
add
int
dec
inc
fisttpl
bound
or
adc
sub
out
push
and
rclb
js
aas
xchg
mov
test
push
xchg
push
lods
outsl
mov
push
sub
jns
js
mov
push
xchg
or
insb
cmp
dec
mov
shll
push
cmp
push
mov
out
pop
lret
xchg
shl
jecxz
xchg
cwtl
in
les
ret
add
std
and
call
movsb
inc
icebp
push
mov
aas
and
xor
mov
xchg
out
cmp
adc
cmpsb
inc
andl
loopne
and
push
popa
mov
lods
mov
lret
push
sbb
mov
lret
pop
das
fst
mov
mov
ret
add
fidivl
sbbl
stos
cmp
jmp
ljmp
xchg
cld
in
fwait
mov
mov
inc
shll
sub
jnp
hlt
jp
xor
sahf
mov
fnstenv
imul
lds
xor
loop
xor
pop
sub
xor
loop
adc
mov
push
xor
je
dec
into
jb
outsl
lock
fsubrl
daa
push
lds
int
pop
mov
and
lds
push
insl
lret
fimull
leave
pop
mov
and
mov
adc
mov
jge
mov
imul
dec
mov
push
sub
loope
and
cltd
rorl
arpl
push
fstl
je
ss
out
adc
loope
das
mov
adc
xchg
sbb
xor
lods
enter
push
shl
xchg
push
mov
pop
xor
sahf
cmp
sbb
roll
rorb
adc
mov
test
dec
mov
sub
sbb
fwait
xchg
scas
sbb
scas
pop
pop
out
popa
mov
xchg
xchg
add
pop
sub
add
sbb
pop
cli
test
adcl
fs
shlb
inc
mov
sbb
sbb
add
jl
adc
jmp
fs
sbbl
push
ljmp
push
rcrb
push
movsb
std
xchg
jp
push
jge
jb
sbb
ret
jle
test
in
xchg
popa
cli
and
push
movsb
sti
xor
test
xor
test
pop
sbb
cmpsb
mov
push
push
and
fwait
stc
jns
push
sub
ffreep
lcall
mov
ja
lock
mov
mov
sub
inc
mov
jns
adc
mov
fwait
xor
jnp
push
pop
mov
pop
pop
test
cmp
addr16
and
push
rcl
push
pop
lods
js
in
ljmp
cmp
mov
or
je
and
sub
and
jecxz
mov
out
sahf
or
lcall
push
ss
lock
rorl
je
mov
pushf
mov
cmpsl
xor
sbbl
pop
into
pop
dec
jne
lods
stc
scas
mov
lret
fwait
or
out
mov
imul
mov
aad
ret
cld
sub
out
pop
das
icebp
add
jl,pt
outsb
call
in
sbb
and
sub
rol
pop
mov
or
dec
aad
adcb
nop
fldcw
lahf
inc
lea
repz
rcrb
xchg
push
adc
clc
mov
push
cld
sbb
jle
push
mov
sub
insb
orl
fistps
ljmp
inc
push
xor
fdivl
scas
cmpb
call
gs
inc
mov
pop
jb
test
test
inc
pop
add
lea
mov
cmp
mov
hlt
out
adc
inc
jl
shlb
jnp
cmp
mov
pusha
sub
test
out
sub
das
cmc
mov
inc
lea
mov
stos
and
inc
cwtl
mov
jl
loope
js
pop
loop
xchg
pushw
jg
iret
pushf
xor
sarb
lods
ljmp
nop
pop
sbb
push
fs
dec
rclb
in
inc
pusha
movsb
xorb
sahf
imul
and
js
pop
hlt
cmp
mov
dec
jmp
xchg
pushf
xchg
jbe
rcr
mov
call
in
push
lock
mov
mov
inc
daa
inc
hlt
inc
fistps
and
mov
testb
cwtl
jg
mov
loope
sbbb
xchg
and
andb
xorb
in
adc
scas
clc
add
fdivl
pop
sbb
jns
xchg
jns
scas
push
xor
jmp
add
or
mov
pop
xor
or
adc
xchg
int3
stc
and
jo
es
aam
inc
dec
es
mov
ja
mov
fwait
push
ja
and
ljmp
rclb
pop
jnp
test
outsl
rcrb
sub
nop
jg
out
adc
das
add
jae
andl
sbb
dec
das
mov
add
cmp
push
xorl
xchg
pop
movl
stos
jo
dec
mov
pushf
lods
scas
popa
je
aad
or
pop
mov
movsl
or
fnstsw
xchg
pop
stos
xchg
aam
pop
std
mov
inc
mov
movsb
int3
or
add
in
xor
sbb
push
jae
and
jno
and
dec
bound
push
js
pop
sub
jae
pop
das
fst
pushf
xor
clc
or
aas
mov
dec
outsb
mov
xor
jmp
popa
imulb
mov
pop
les
ror
pop
inc
std
test
mov
cli
push
jnp,pn
addr16
xor
inc
dec
jp
cwtl
movsb
mov
ljmp
test
cmp
rclb
inc
cmp
lcall
mov
fiadds
fnstsw
inc
fisubs
jecxz
ret
lcall
inc
cmc
ja
xchg
xchg
xor
inc
dec
es
mov
sbb
call
dec
repnz
cwtl
sbb
popa
rcl
add
xchg
iret
xor
mov
adc
pop
sub
ds
pop
jns
ds
mov
add
mov
pop
sbbb
nop
mov
out
push
push
bound
sub
nop
in
int3
ffreep
pop
ficomps
cltd
pop
pop
pop
jno
mov
adc
lahf
adc
cltd
sbb
ss
sub
hlt
cld
in
lahf
hlt
pusha
imul
dec
dec
aas
movsl
stos
pop
jnp
dec
mov
dec
push
fimuls
cltd
cwtl
cmp
iret
fmuls
shl
insb
orb
or
das
pop
xor
in
bound
mov
pop
or
je
and
mov
popf
mov
mov
fwait
scas
cmp
ret
add
inc
pop
dec
cmp
aad
loope
repz
mov
jp
push
cmp
mov
lret
pop
hlt
mov
mov
int
inc
cmp
mov
add
and
icebp
hlt
dec
push
jb
rcr
jae
sub
cwtl
add
sbb
jge
sbb
sbb
pop
insl
shl
xor
pop
push
fisubrs
dec
sbb
jmp
pushf
dec
outsl
ss
mov
lret
test
idiv
lea
sub
ds
dec
mov
sub
pop
and
in
gs
inc
sub
pop
xchg
repz
ficompl
xchg
sarb
mov
jb
pop
jg
mov
lret
orb
movsl
add
cmpsl
adc
mov
jne
xor
arpl
decb
aas
sbb
adc
arpl
insb
dec
dec
or
pop
xchg
cmp
test
mov
js
push
inc
stos
cmp
test
lret
add
dec
xor
mov
mov
xchg
and
and
and
inc
ficoms
divb
xorb
das
int3
ret
popa
push
xor
sub
pop
movsl
fcompl
loop
xchg
xor
stc
and
cli
jle
mov
jmp
icebp
push
pop
sub
sbb
inc
fwait
call
xor
mov
lds
and
outsl
and
out
add
jp
int3
and
out
sbb
push
xchg
addr16
add
sbb
cltd
call
pusha
into
adc
mov
mov
mov
icebp
pop
out
adc
push
cmp
pop
addl
enter
push
int3
cwtl
cmp
mov
push
push
mov
inc
jnp
rcr
into
addr16
movsl
jo
aam
imul
in
mov
lods
call
cwtl
jp
scas
dec
xchg
dec
lea
sbb
leave
sar
adcb
and
shll
and
mov
jecxz
add
shr
sub
inc
mov
outsb
gs
cmp
xor
push
or
cmp
mov
add
loope
test
frstor
fcomps
and
sbb
pop
sub
adc
bound
cmp
xor
jnp
dec
test
mov
and
pop
adcl
fstps
icebp
mov
lret
aad
adc
push
imul
inc
lods
outsl
jnp
ret
adc
sbb
sahf
push
fisttps
repz
jo
loop
push
faddp
mov
cmc
xor
cmpsl
and
mov
test
sub
clc
scas
leave
pop
adc
add
mov
cs
jnp
jbe
add
sarb
div
js
popf
pop
daa
out
pop
jge
or
bound
aam
jmp
inc
pop
inc
jge
ret
inc
lret
lock
xor
dec
out
sub
into
lahf
push
sbb
aam
push
xchg
cld
scas
mov
mov
std
enter
push
call
xchg
pop
jnp
popa
mov
in
inc
test
dec
ja
pop
fwait
inc
sbb
xor
or
sub
sub
mov
scas
test
adc
shrb
pop
mov
imul
mov
jnp
sbb
aaa
aam
push
rcrb
sub
pusha
add
jmp
sahf
out
fisubrs
lahf
pop
subb
push
sbb
call
scas
mov
mov
imul
mov
sub
shlb
sub
xchg
jge
insb
dec
pop
repz
inc
fisttpll
loopne
and
push
push
jns
lret
adc
js
cld
xor
mov
ficompl
jns
gs
lret
mov
adc
lods
push
xlat
or
and
shlb
or
rol
pusha
sahf
xchg
sub
cld
cli
sub
mov
add
leave
mov
fcmove
aam
out
jno
or
adc
mov
ja
xchg
addl
mov
pop
int3
mov
cmp
dec
fcmovne
xchg
out
scas
test
stos
cmc
inc
aam
int
mov
bound
dec
xchg
dec
rorb
shl
pop
sub
push
je
inc
movsl
mov
mov
pop
push
decl
pop
dec
pop
loopne
jb
sbb
cmp
movsl
sahf
cmc
fidivrl
cmp
sbb
mov
mov
xor
arpl
inc
addr16
outsb
arpl
jge
jae
xchg
scas
pushl
pop
mov
aaa
and
jp
xor
mov
push
call
fimuls
adc
filds
pop
cmp
call
xor
fidivs
loop
movsb
sub
sbb
daa
cmp
les
xor
and
test
jecxz
ss
into
jl
and
xchg
sbb
adc
pop
adc
dec
inc
mov
lcall
aad
mov
enter
push
pop
shll
popa
push
add
sti
push
sti
jnp
inc
das
cltd
inc
sbb
cmp
adc
jnp
int3
mov
popa
jbe
data16
in
and
dec
arpl
fs
icebp
roll
mov
testb
test
mov
mov
mov
in
pop
jae
insl
ror
dec
mov
daa
cmp
cmp
xchg
clc
adc
shl
fcompl
mov
pop
mov
mov
push
pop
push
mov
inc
lods
insl
mov
push
aam
lea
and
filds
lods
push
clc
int
push
inc
mov
mov
repz
scas
test
repz
sahf
in
enter
mov
xor
daa
outsb
jmp
mov
pop
and
fdivrp
sbb
arpl
or
es
adc
lods
aas
push
gs
inc
jbe
push
lea
push
lods
pop
fcomps
lds
data16
test
adc
mov
ja
push
hlt
inc
subb
xchg
in
fists
dec
mov
jne
dec
push
jns
add
xchg
sub
xor
dec
repnz
lret
sbb
mov
add
in
xchg
inc
push
jl
repz
xlat
mov
lret
jae
cmp
js
andl
leave
imul
push
xor
push
pusha
pop
rclb
cmpl
cmp
jb
mov
popf
enter
push
mov
jbe
clc
jge
mov
popa
xor
inc
fwait
pushf
jnp
inc
push
add
ret
loop
jge
insb
rorl
sub
cmpsl
inc
lret
cmc
dec
pop
xor
lahf
adc
je
xor
imul
mov
pop
or
sub
add
movsb
push
push
or
mov
xchg
pusha
daa
add
ja
loopne
sub
mov
fidivrs
fsubrl
stc
xor
dec
push
call
sbb
dec
hlt
jbe
aad
or
inc
insl
jmp
lea
inc
or
mov
mov
std
dec
inc
sub
add
pop
mull
add
and
dec
aam
jge
push
nop
push
cwtl
notb
xchg
dec
xchg
inc
sbb
int3
sbb
cld
sub
add
cmp
jl
xchg
pop
mov
sbb
mov
fs
sbb
dec
popf
aam
inc
imul
xchg
ret
push
movsb
js
sbb
leave
push
mov
pushf
xchg
jbe
mov
in
out
into
jg
inc
fsts
xchg
mov
xchg
pop
push
imul
mov
enter
out
mov
sub
mov
cli
fwait
movsl
dec
lods
cld
push
jp
pop
aas
or
insl
mov
loopne
les
testb
jne,pt
subl
stc
pop
push
fmull
lds
xor
inc
dec
fnstsw
cmp
cmp
sbbb
mov
mov
or
lret
sbb
daa
cltd
popa
or
fcmovu
ja
xchg
and
jp
stos
xchg
mov
mov
int3
mov
js
data16
push
or
pop
mov
mov
jecxz
and
mov
lret
mov
jle
lea
leave
ret
cli
dec
mov
mov
movsb
loop
repnz
sbb
dec
push
ret
aam
out
jmp
loope
arpl
or
sub
daa
jbe
push
call
mov
scas
test
jp
imul
imul
jecxz
push
dec
ds
sbb
outsb
mov
mov
outsb
aaa
add
pusha
dec
mov
insb
dec
inc
mov
mov
push
int3
testb
inc
enter
insl
cmp
movsb
mov
cmp
clc
mov
jne
fdivs
jno
int
inc
pop
dec
push
sub
inc
xor
pushf
jle
mov
pop
arpl
mov
mov
jp
aaa
cmp
push
test
je
icebp
nop
cmpsb
pop
sti
mov
stos
shll
test
loopne
lret
dec
and
sarl
insb
cltd
repz
mov
mov
aas
adc
jo
add
mov
push
popa
pop
sti
mov
lret
rclb
sbb
dec
xchg
or
movsl
rclb
pop
or
sbb
jns
adc
mov
stos
lret
in
mov
mov
cmp
jmp
inc
push
cmpsl
push
sti
mov
pop
sub
jl
call
or
repnz
inc
cmp
jle
xor
add
lods
sub
push
jo
sub
jmp
push
pop
movsl
jbe
mov
mov
sub
daa
loopne
rcll
xchg
and
or
pop
in
push
and
mov
jle
je
cmp
xlat
jg
lock
push
movsl
lret
arpl
divl
mov
outsb
outsl
cmpsl
cmpsl
rcrl
fucom
sbb
inc
dec
xchg
shrl
mov
jg
fists
adc
cmp
mov
fbstp
out
out
mov
pop
cmp
imul
and
fsubr
mov
sbb
and
cs
insl
imul
and
inc
xor
loop
xor
mov
push
in
or
cld
sub
xchg
imul
je
jae
shrb
mov
sub
xchg
and
addr16
stc
ud2
adc
ror
add
adc
pop
xor
push
shlb
mov
dec
repz
shrl
les
aas
leave
mov
mov
out
imul
jae
in
stos
fidivl
pop
xor
dec
push
stos
pop
fnstenv
and
jp
dec
or
cwtl
imul
mov
cmpsb
dec
or
in
bound
dec
clc
sbb
mov
in
mov
std
mov
es
mov
scas
pushf
and
xchg
sbb
or
imul
sarb
loop
imull
add
bound
cmp
cmp
ror
or
scas
leave
and
ret
fcmovnu
fldl
pop
jbe
mov
or
lea
mov
add
mov
shlb
ja
outsb
pop
pop
incl
xor
in
dec
pop
lcall
sar
pop
or
sbb
push
test
sbb
js
sub
cmc
sbb
mov
std
stos
incl
jl
sbb
mov
sub
flds
in
xchg
daa
mov
test
arpl
inc
push
in
ror
roll
fninit
sbb
repnz
mov
sbb
jnp
mov
and
mov
sti
pop
add
mov
xchg
cwtl
dec
mov
add
or
mov
sbb
sahf
sbb
icebp
adc
mov
imul
filds
jae
cmc
or
prefetcht1
jno
mov
shl
loop
mov
jno
lea
mov
cmp
cmp
in
dec
imul
out
das
and
adc
mov
out
and
out
stc
add
rclb
scas
lret
push
push
xchg
push
leave
iret
scas
push
pusha
xchg
mov
dec
in
daa
push
pop
mov
lds
push
xchg
clc
movsl
test
xor
pop
dec
inc
inc
stos
add
sbb
sahf
lods
pop
pop
cmp
jo
imul
lods
xor
sarb
ret
dec
jbe
pop
add
push
adc
cmp
lret
mov
sar
inc
add
out
mov
loope
mov
movsb
add
mov
cltd
inc
lock
push
icebp
push
push
push
daa
jle
push
add
dec
cld
in
pop
shlb
aam
sub
ja
lahf
loop
roll
pop
imul
dec
jae
adc
ret
repnz
mov
push
xor
fnstcw
xchg
dec
pop
shl
fcmovnbe
mov
and
add
mov
mov
jbe
lcall
and
inc
dec
mov
push
int
xchg
shr
and
imul
adc
adc
jo
lods
sbb
test
xchg
xchg
test
aam
jno
dec
cmpsl
lahf
es
lcall
mov
call
test
pusha
and
jnp
addl
mov
jbe
sbb
mov
push
xchg
imul
xchg
or
push
lret
pop
ret
nop
fiadds
push
push
mov
into
push
jecxz
cmp
jo
out
inc
xchg
jnp
sahf
lret
in
adc
mov
stc
cli
rolb
mov
dec
mov
ds
test
daa
mov
int
repz
and
dec
or
into
jns
sahf
js
sub
xchg
push
inc
clc
sbb
loopne
sbb
sbb
hlt
std
xchg
jbe
filds
adc
std
subb
xchg
cli
clc
js
into
nop
xlat
das
pushl
push
es
mov
repnz
icebp
inc
add
ret
inc
popa
in
mov
mov
insb
iret
mov
ljmp
push
xchg
pop
lods
mov
add
pop
ror
xor
pop
jb
les
pop
lods
inc
test
popf
push
mov
insl
xlat
pop
div
pop
mov
push
push
lcall
test
call
test
and
rcrl
or
jnp
jmp
xchg
add
or
cmpsb
outsb
mov
xlat
cmp
insb
dec
cmpsl
cmp
pop
push
insl
inc
cld
jno
mov
jmp
mov
and
sub
xchg
lahf
mov
inc
inc
mov
pusha
repz
adc
popa
loopne
pushl
and
adc
into
fs
ret
xor
inc
aaa
aad
mov
fstpt
push
mov
fcoms
js
cli
test
lcall
test
dec
icebp
notl
mov
popa
pushf
repnz
stc
pushf
test
icebp
out
xor
icebp
inc
je
aas
xor
dec
xchg
jecxz
ljmp
inc
out
fbstp
nop
mov
sbb
push
das
xchg
lods
mov
inc
sbb
adc
rcll
push
fsub
ja
push
mov
add
or
sbb
mov
mov
mov
pop
fchs
rcr
xor
jo
or
mov
lret
lret
stc
orl
xor
or
pop
push
int3
sbb
mov
lock
gs
and
xor
jmp
dec
xchg
push
fimull
mov
ss
lret
jmp
sarl
subl
movsb
mov
cmpsl
pop
imul
in
cmpl
or
mov
push
inc
sbb
mov
adc
add
subb
cmp
mov
std
jecxz
push
in
jns
mov
and
mov
stos
fsubrs
or
xchg
es
icebp
mov
js
adc
int3
cmp
adc
loope
mov
adc
mov
inc
mov
out
es
sbb
pop
into
sub
rol
movsb
outsl
jne
fmull
xlat
mov
subl
mov
addl
test
fildl
add
xchg
sub
adc
sub
mov
pop
subl
cmpsl
outsb
sbb
push
jo
notb
sub
mov
and
mov
push
or
and
xchg
cli
sbb
sbb
arpl
jecxz
int3
in
test
cmp
adc
or
dec
xchg
movsb
sbbb
fistps
sbb
dec
clc
mov
pop
adc
pusha
push
fs
lods
das
mov
jmp
in
mov
add
into
loope
ror
push
and
scas
or
jp
and
jl
and
icebp
pop
in
or
nop
repz
mov
loopne
pop
jp
gs
jecxz
inc
outsb
push
rclb
shlb
pop
jg
push
sub
or
mov
aaa
xchg
xchg
lds
arpl
xlat
mov
push
lock
xchg
mov
rcrl
lods
xor
xor
mov
cld
aam
int
pop
dec
cmpsb
mov
inc
ss
cli
stos
mov
push
test
cs
in
mov
dec
adc
fcomp
mov
roll
arpl
push
adc
sub
cli
cmp
cmp
popf
mov
sub
pop
xor
dec
nop
dec
gs
cmpsb
test
adc
lret
or
cmpsl
mov
out
cltd
fdivr
add
in
xchg
lahf
jae
mov
fwait
push
aaa
sbb
popl
ret
or
call
rcrl
xchg
dec
add
and
jmp
dec
add
cmp
dec
xchg
mov
push
stos
sti
out
arpl
mov
leave
fs
and
rorl
fnstenv
inc
jp
scas
in
icebp
lcall
repnz
pop
jle
or
imul
cmpsb
cld
mov
sub
and
movsl
popa
add
icebp
jmp
iret
cmp
sub
cltd
stos
js
xor
cwtl
out
data16
sbb
mov
fstpl
pop
mov
lea
jae
roll
stc
push
and
inc
jp
push
adc
mov
gs
add
xor
jae
mov
mov
push
hlt
xchg
mov
mov
andb
mov
pop
and
push
call
out
cmp
das
scas
addl
pop
xchg
pop
mov
and
or
sbb
sbb
std
icebp
mov
rclb
ds
xchg
jle
adc
xor
scas
iret
push
sub
es
lcall
mov
adc
push
lods
mov
sub
xor
jmp
cld
jnp
and
or
push
xchg
xor
sbb
mov
leave
filds
movsb
or
out
xor
pusha
repnz
cmp
mov
scas
sbb
dec
mov
mov
insb
or
ret
insl
mull
pop
mov
dec
test
dec
dec
sub
out
push
xchg
iret
lret
push
lods
adc
nop
push
nop
jno
mov
xchg
shll
dec
cs
fdivs
jbe
add
mov
pop
dec
xchg
sbb
pop
add
fildl
cmp
xchg
je
out
les
cs
push
test
push
insb
dec
dec
jge
and
mov
dec
adc
dec
lock
leave
xor
xor
in
mov
or
jmp
in
jno
sub
push
or
push
xlat
lret
xchg
rol
push
adcb
fcmovnbe
popa
push
xor
adc
ljmp
mov
cmp
sahf
cmp
rclb
jg
cs
inc
jle
xor
test
inc
xor
mov
movsb
sbb
test
ficompl
sub
scas
mov
popa
xor
mov
cs
xor
jnp
ss
lret
jge
and
jecxz
add
test
inc
movsb
and
fnstenv
mov
pusha
pop
pop
dec
inc
adc
rcr
push
outsl
mov
cli
jmp
lret
les
enter
ss
mov
dec
repz
jecxz
jae
adc
icebp
xchg
push
js
loop
fcompl
push
dec
or
pop
jb
rcl
into
xchg
jge
pop
scas
movsl
fdivl
xlat
push
mov
shll
xchg
add
mov
add
xlat
mov
nop
test
pop
mov
sbb
int3
outsl
addl
adc
movsb
ret
ljmp
lods
aam
jecxz
sbb
ss
pop
mov
outsl
repz
adc
cmp
mov
pushf
arpl
cmpsl
icebp
iret
in
xchg
dec
adc
xor
adc
push
and
jmp
jnp
inc
lret
arpl
or
enter
addr16
rorl
or
pop
imul
mov
pop
bnd
rol
lret
inc
hlt
cs
push
sub
pop
mov
xchg
xor
mov
xchg
jno
loope
loopne
fsubrs
xchg
push
pop
sbb
loopne
outsb
test
in
into
sub
cmpsl
mov
jp
imul
cmp
push
mov
clc
mov
jecxz
push
inc
push
rcll
je
dec
arpl
push
cmp
stc
pop
xchg
das
add
fldenv
dec
adc
dec
pusha
stos
in
aam
int
cmpsl
mov
loope
adc
es
xchg
data16
lahf
add
push
pusha
mov
ss
aaa
pop
dec
loop
gs
adc
sbb
add
or
movsl
shlb
in
je
shr
ss
addl
xchg
xchg
lret
cmp
mov
in
xchg
lods
sbbb
cmc
call
and
jmp
cmp
cltd
sub
xchg
inc
inc
mov
inc
loopne
repnz
ds
mov
test
shl
daa
fcoml
sbb
fldt
mov
xchg
sahf
fmuls
addr16
stos
insb
std
fld1
inc
jne
inc
fildl
adc
adc
pop
lcall
outsb
jne
pop
dec
sbb
jg
jb
or
in
pop
test
mov
mov
mov
mov
js
cmpsb
add
loopne
out
push
mov
flds
or
xchg
into
mov
loope
mov
mov
or
in
dec
and
movsl
into
xchg
shl
mov
int
sarb
sahf
test
mov
inc
jg
jno
xorl
sub
inc
leave
or
adc
cld
shl
mov
xchg
call
movsl
cwtl
add
fldcw
xor
iret
pop
mov
out
mov
xchg
insb
fsubl
push
sti
icebp
repnz
pop
fisubrl
jb
aad
jo
sbb
stos
adc
push
ret
dec
outsl
dec
subl
push
scas
xchg
inc
cmp
sbbl
adc
shl
in
sbb
adc
aaa
add
mov
dec
data16
mov
out
int
fldcw
ja
pop
xchg
mov
leave
pop
inc
stos
movb
xor
outsb
int
xor
cmpsl
xor
adc
mov
lock
mov
cwtl
int3
push
pop
jge
into
xor
stos
xor
xor
cltd
sub
mov
insb
es
xchg
sub
push
push
std
outsl
lods
in
lds
mov
scas
repz
cli
out
mov
xchg
xchg
les
xor
out
into
dec
or
mov
roll
xlat
pop
pop
xor
dec
outsl
xlat
mov
pop
hlt
jmp
sahf
adc
in
fs
lahf
xor
mov
iret
arpl
ds
rcrl
jo
mov
fisttpll
test
loope
xchg
jp
ficoms
push
out
jmp
push
push
xor
xor
jb
outsl
add
aad
mov
jp
enter
ret
jbe,pt
je
adc
push
dec
xchg
mov
gs
add
lea
ficoms
sarb
xchg
loop
mov
sbb
inc
lods
dec
shr
push
fldln2
adc
push
fwait
cmpsb
call
ficompl
xor
sar
push
xchg
jae
adcb
ret
mov
imul
dec
int
shll
mov
mov
adc
loop
and
out
dec
mov
dec
test
sbb
sbb
mov
cmp
in
jns
rclb
fs
cwtl
testb
das
in
enter
cs
fnstsw
push
sub
jnp
lods
lods
mov
clc
sub
nop
movsb
imul
mov
iret
enter
enter
xchg
xchg
int
faddl
dec
lods
cmpsl
mov
cli
lret
cmc
iret
mov
sub
fstpl
sub
dec
sub
fnsave
lock
mov
repz
in
mov
mov
int3
fsubs
ficoml
lcall
cmp
jne
mov
cmc
mov
stos
push
dec
je
fdivp
and
mov
outsb
aas
add
inc
lcall
fidivrl
or
or
mov
and
or
push
fldenv
dec
pop
cmpsb
or
or
push
fcompl
lahf
xchg
cmp
mov
daa
bound
sub
sub
popa
fnsave
push
aam
adc
popf
mov
sahf
inc
and
adc
sub
daa
jo
mov
cmp
mov
mov
fimull
xchg
mov
push
testb
dec
push
sbb
in
pop
sbb
es
ret
adc
push
sbb
pop
xchg
xchg
aad
inc
movsb
das
adc
mov
jno
in
int3
xor
mov
and
aaa
sbb
pop
std
js
push
ljmp
push
fs
outsb
xchg
pusha
xor
clc
jae
and
fistpll
sub
mov
cmp
repz
jae
data16
in
xor
pop
jns
inc
or
fists
cld
test
pop
jo
pop
push
mov
fsubrp
iret
loope
stos
jo
mov
test
mov
fdivrl
add
mov
rcl
cmpl
lods
pop
xchg
push
jge
and
rclb
cs
out
pop
mov
mov
lret
xchg
jno
xor
inc
xor
ss
popf
cmp
xchg
inc
jp
cmp
int
pop
pop
sub
push
xchg
not
loopne
lahf
je
inc
repnz
mov
arpl
xchg
jno
cltd
mov
mov
pop
adc
repnz
icebp
ss
pop
and
lcall
sbb
ret
add
mov
das
push
movsl
rorb
scas
cmp
push
fcompl
in
dec
inc
dec
mov
mov
lcall
mov
lods
test
rclb
roll
pop
push
inc
call
cmpsl
leave
loop
cmp
fdivs
clc
fsubl
lods
sub
jb
cmpb
addr16
or
stc
shrb
mov
es
stc
jno
jo
call
xor
repz
add
mov
movl
jp
shlb
and
call
imul
and
sub
inc
sbb
pop
sbb
adc
adc
xor
lods
xchg
jns
jno
lods
and
lcall
orb
insl
bound
pushl
es
test
sub
dec
xor
adc
lods
enter
jb
stos
enter
jne
enter
popa
insb
sbb
pusha
cmc
mov
add
cmpsl
gs
mov
ret
fistpl
repnz
dec
ss
mov
mov
out
addr16
and
fldl2e
push
fdivrs
mov
sub
movsb
xlat
outsl
cmpsb
jle
lret
adc
mov
movsl
outsb
pop
loope
mov
lea
imul
inc
inc
std
pop
sub
test
mov
rcrl
mov
sarl
scas
pop
xchg
fnstcw
in
rcrb
jnp
cmp
jne
push
ljmp
mov
dec
mov
push
or
lds
inc
aam
cmpsb
cmp
scas
jnp
mov
mov
mov
sub
push
sub
add
xchg
icebp
test
fwait
push
jmp
stos
cwtl
mov
aam
inc
sahf
lret
xchg
js
popa
nop
mov
mov
pop
mov
in
jg
insl
inc
fwait
imul
cs
mov
addr16
jp
adc
aam
stos
inc
outsl
xorb
mov
or
ret
cmp
inc
outsb
divl
icebp
dec
xor
adc
or
popf
dec
inc
popa
movsl
pusha
xchg
cmp
mov
inc
pop
push
inc
movsb
mov
insb
fcmove
rcrb
or
xlat
cmp
in
xlat
test
bound
sbb
mov
pop
jnp
cmp
xor
xor
xchg
inc
cltd
in
js
jnp
xchg
sub
inc
xchg
fsubrp
or
scas
pop
adc
cmp
out
sbb
mov
jmp
pop
es
xchg
dec
cmp
xchg
mov
push
aaa
pop
fadd
mov
inc
cltd
sti
call
sub
mov
outsb
cltd
sbb
call
mov
aam
mov
mov
xor
stc
lods
fidivs
jp
mov
mov
inc
mov
out
ljmp
les
fdivl
popa
cmpsl
push
data16
pop
jg
mov
test
in
sub
pop
push
into
ret
add
pop
inc
cmc
xor
xor
filds
push
jo
in
pop
push
mov
push
jae
push
jno
movsb
pop
test
stos
js
jb
fs
and
fists
mov
xlat
js
jbe
pop
dec
sbb
and
lods
loope
movsb
and
rorb
xor
out
sahf
pop
andb
sar
shlb
and
or
aad
aad
add
xchg
mov
push
mov
adc
in
push
push
adc
cmp
jno
ss
pop
cld
dec
icebp
add
leave
mov
xor
ss
lcall
orb
jns
push
sbbl
int
in
or
jl
cmp
inc
ja
stc
pop
pop
push
pop
in
stos
cmc
fwait
je
lea
mov
pop
movsl
scas
add
cli
sub
mov
cmp
out
pop
pop
cmp
sub
push
sub
and
or
dec
xchg
inc
xchg
nop
movsl
ror
rol
push
lcall
jecxz
aam
jle
lret
rcrl
mov
cs
jecxz
sbb
cmp
push
xlat
push
cmpl
sbb
pop
scas
push
pop
nop
jae
cmp
fnstcw
pop
sbb
sbb
dec
test
mov
jecxz
jp
jg
mov
dec
mov
popf
pop
pop
jnp
mov
and
ja
pop
xor
out
mov
mov
pop
adc
fdivrl
mov
insl
jle
es
loope
psraw
pop
mov
addl
je
jg
xchg
leave
xorl
nop
pop
fisubs
xchg
inc
pop
movsb
or
pmaxsw
out
or
scas
mov
push
dec
pop
xor
jbe
sbb
jle
stos
fcompl
scas
das
dec
inc
cli
lods
and
pusha
mov
popf
sub
jmp
xchg
inc
sub
sub
in
lods
adc
out
in
cmp
xchg
sbb
adc
cmp
stos
out
lods
push
push
addr16
or
ljmp
mov
cmp
cld
xchg
out
repz
rclb
mov
cmpsl
lahf
rcl
cs
xchg
mov
in
je
stc
pop
dec
sbb
lock
pop
push
rcr
push
in
cmp
push
sbbl
cmpsl
mov
sbb
add
bound
inc
fisttpl
ss
nop
inc
sbb
xchg
imul
push
pop
mov
sbb
cmpsl
sub
stos
sub
pop
test
mov
movsb
leave
movsb
bound
imul
jle
xchg
xor
fnstenv
or
rol
mov
lret
mov
out
lock
fdivrp
dec
test
dec
test
repz
mov
fs
mov
in
cmpsb
jle
mov
in
test
popa
jmp
insl
enter
lcall
aaa
sbb
push
jl
or
lcall
jp
outsb
lds
adc
icebp
sub
fdivl
jb
push
dec
mov
adc
mov
aad
dec
fcompl
mov
fcoml
jmp
push
jg
push
shl
daa
jnp
push
mov
and
fstp
pop
or
pop
rcl
add
push
dec
fimull
popa
clc
push
mov
imul
or
xchg
jns
cmp
movsl
fimuls
adc
inc
xchg
xor
xchg
movsb
jb
ret
pop
int3
dec
sbb
xchg
cmp
fldt
push
jno
ret
xor
sub
cwtl
mov
out
jne
aas
dec
in
or
jle
mov
mov
out
jmp
add
mov
inc
xor
test
in
cli
sbb
ret
xchg
jae
lret
mov
into
inc
cmp
sahf
pop
int
call
mov
subb
and
setge
fdivs
imul
add
bound
pusha
js
ss
dec
and
test
das
mov
xor
pop
mov
int
mov
bnd
shlb
cmpsb
loopne
and
loop
sarl
jnp
mov
sub
imull
rcrb
fcompl
lahf
dec
call
push
push
inc
xchg
bound
dec
int3
out
fs
mov
mov
cmc
sbb
out
sbb
jbe
or
int3
pop
ds
js
mov
fistpll
sbb
mov
sub
xor
pop
sub
imul
test
pop
xor
add
pop
or
mov
or
mov
xor
rol
jge
enter
xor
std
imul
aaa
adcb
or
cs
movsl
jae
jl
and
int
fwait
and
adc
sbb
testl
inc
push
loopne
xchg
dec
sbb
in
cltd
xchg
in
cmp
pusha
cmp
sbb
add
inc
ljmp
rclb
aas
in
inc
lock
sub
push
insl
push
cltd
jp
jnp
xor
mov
out
push
les
pop
das
jb
dec
cld
pop
xchg
mov
adc
lret
aas
in
mov
push
mov
xchg
mov
cmpsb
pushf
inc
or
or
xor
adc
loope
fsubrs
out
push
inc
arpl
sub
dec
pop
xchg
mov
lret
in
int
loope,pn
jl
loopne
mov
jns
xorb
jmp
jns
inc
cmp
in
decl
testl
sub
add
jb
or
mov
test
inc
add
sbb
out
cs
adc
sti
stos
clc
push
out
push
js
xchg
roll
push
xor
inc
lcall
stc
cwtl
fwait
jecxz
test
popa
mov
fnstenv
inc
push
ret
lahf
mov
cmp
xchg
in
xor
sub
jg
aad
into
push
mov
mov
inc
stc
mov
fwait
hlt
adc
cmp
fimuls
subb
xor
push
sbb
mov
fstpl
std
push
mov
pop
les
inc
push
or
adcl
int3
movsl
fimuls
dec
bound
mov
sbb
sub
fwait
in
out
mov
notb
push
xchg
inc
mov
jl
adcb
ljmp
xor
test
ror
mov
xchg
push
mov
gs
dec
lcall
dec
xor
out
rdmsr
push
jecxz
sub
and
lahf
jl
mov
mov
adc
fcmovne
xor
shl
pushf
subl
lods
fisttpl
inc
mov
stos
loop
sahf
insb
aam
mov
stos
sub
mov
dec
mov
dec
dec
xor
xchg
int
imul
mov
or
cmpsb
shll
mov
loope
dec
adc
xchg
out
mov
mov
jl
je
jo
inc
sti
cld
xor
mov
or
out
mov
ja
or
xor
leave
jne
mov
sub
mov
or
sbb
dec
movsl
scas
aas
daa
pop
xchg
cmp
adc
mov
sub
cmpsl
mov
lods
inc
dec
sub
mov
mov
sub
mov
mov
pop
pop
cmpsb
jae
and
lods
jle
sub
jp
and
inc
push
mull
add
sarl
pushf
xchg
xor
aas
lahf
stos
adc
aas
movsl
jp
and
adc
popf
mov
sarl
sub
mov
popf
push
data16
daa
andl
std
in
aad
pop
dec
adc
xchg
daa
stos
mov
inc
push
add
jo
mov
xchg
push
mov
pop
out
dec
pop
jbe
push
cld
pop
sbb
inc
push
fildll
rcll
stos
xor
add
sub
xlat
mov
add
or
stos
cli
cmp
pop
dec
lock
fs
repnz
cmpsl
fdivs
xor
pop
push
jp
aas
cltd
sub
dec
aaa
dec
push
fnop
push
cwtl
adc
xchg
jo
dec
repnz
ret
sub
stos
push
and
subl
jle
daa
adc
sub
loop
ds
mov
xor
movsl
inc
mov
in
bound
dec
popa
cmp
sbb
adc
cmp
or
pop
out
cld
mov
mov
xchg
fsubl
push
repz
sub
inc
nop
dec
loope
cmc
lret
adc
xor
jbe
jae
push
lahf
dec
mov
sbb
ret
in
dec
movsb
dec
add
inc
lcall
cmp
push
movsb
dec
sbb
dec
loopne
imul
call
and
pop
gs
mov
jb
dec
jnp
imul
add
sbb
xchg
dec
loop
add
sbb
repnz
xchg
fildll
or
dec
repnz
test
adc
push
out
ds
jne
mov
jmp
and
je
cmp
mov
mov
mov
int
adc
ret
mov
cmpsb
and
mov
dec
sub
popf
loope
inc
or
fs
das
insl
addr16
jge
xlat
xchg
mov
cmovs
jo
inc
test
fwait
jne
xor
cmpsl
dec
pop
testl
pop
aam
mov
sub
jmp
fwait
mov
loope
aam
xor
jno
ljmp
stos
xchg
jae
stos
xchg
or
subl
jmp
repnz
cmp
scas
sarl
idivl
fmull
sub
sbb
call
sub
pop
mov
into
subb
and
dec
loop
or
sahf
lea
jecxz
test
sahf
pop
stc
in
push
std
rorb
enter
scas
pop
mov
jb
xor
push
sub
popf
push
xor
mov
daa
push
mov
mov
lods
mov
xor
push
sbb
loopne
inc
xor
out
popf
and
es
js
andb
push
xchg
mov
lock
dec
mov
clc
push
aaa
mov
lgs
pushf
xchg
mov
testb
mov
scas
cmp
lea
or
lret
testl
push
adc
push
jmp
stos
dec
and
minps
lea
outsb
mov
popa
adc
ror
jmp
sub
imul
out
notb
ljmp
in
cltd
jl
dec
push
nop
in
xchg
mov
in
ja
out
lcall
mov
push
sti
bnd
popw
xchg
fsubl
lods
dec
fldl
add
dec
pushf
cmp
and
or
jl
scas
les
xchg
adc
xchg
test
js
mov
cld
jbe
pop
adc
push
mov
cmp
jp
clc
ss
inc
push
aas
mov
insl
in
sub
push
movsl
lea
fimuls
nop
jmp
dec
adc
pop
sub
test
in
shlb
xor
loop
push
clc
aas
loopne
push
lret
xchg
jp
pop
cmp
nop
popa
push
stos
inc
subb
in
stos
cmp
cmp
dec
in
or
mov
test
pusha
gs
mov
ret
push
sbb
cmp
xchg
push
lahf
jb
jb
aaa
scas
mov
pop
mov
dec
pushf
inc
and
outsb
mov
mov
push
movsl
movsb
fcomp
fsubr
aam
mov
push
call
and
testl
lock
movsl
sbb
mov
cmp
pop
cltd
pop
les
iret
aas
sub
sti
cs
pop
pop
not
stos
sbb
outsl
cltd
push
movsb
sub
jnp
xor
push
xchg
std
jl
lret
push
sub
xchg
mov
lar
dec
jle
jmp
dec
addb
sbb
and
mov
pop
jp
lahf
mov
jmp
fs
movsl
insb
pop
jg
repnz
adc
dec
mov
jmp
push
rep
mov
in
ficoms
ds
lahf
or
mov
dec
imul
sub
xchg
sbb
loop
stos
dec
xorb
xchg
sub
inc
les
add
add
add
mov
mov
andb
mov
shrb
cmp
movsb
fsubs
lret
gs
shrb
pop
push
and
mov
xchg
stos
dec
rcll
mov
mov
jmp
int
imul
shl
mov
add
subb
pop
sbb
cmp
aaa
dec
lods
jno
aaa
into
js
sbb
aam
std
out
or
in
shr
mov
xlat
pop
fucomp
cmpsl
add
adc
les
pushf
test
enter
or
decb
mov
fldcw
cmp
hlt
mov
dec
dec
sub
imul
dec
or
nop
loope
ffree
mov
jle
adc
mov
fcoml
les
cmpsl
loope
lods
dec
hlt
fsts
repz
push
jb
mov
data16
cmpsl
xchg
leave
adc
mov
rcrl
mov
iret
shlb
or
cld
cmp
fs
jae
sub
pop
adc
xchg
pop
and
loopne
fwait
sbb
push
icebp
insb
icebp
addr16
mov
mov
shlb
and
aam
fbld
inc
adcb
imul
and
mov
movsl
test
nop
xor
xchg
mov
mov
fcompl
and
addr16
add
hlt
mov
addr16
lcall
and
clc
sti
xchg
out
adc
adc
repz
push
jne
mov
scas
into
arpl
cwtl
test
aad
inc
or
movsl
aad
or
lea
clc
pop
notb
adc
cmp
shl
xchg
add
shl
lods
dec
cmp
dec
popf
arpl
or
or
cmp
stos
and
gs
jno
outsb
jp
mov
add
mov
cmp
cmp
fimull
lret
jns
shlb
aam
xchg
sarb
es
add
call
push
dec
ljmp
inc
jmp
mov
mov
int
fcomps
xor
cmp
cld
arpl
lahf
jo
jmp
push
mov
into
inc
imulb
insb
mov
inc
loop
lea
push
aaa
and
imul
xor
rolb
in
xor
loop
jp
mov
and
mov
add
cwtl
mov
mov
pop
test
sub
xor
es
sar
iret
fs
fildl
inc
fstl
test
and
mov
inc
mov
jno
cmp
jb
push
das
or
clc
mov
and
mov
leave
sbb
mov
jns
add
jbe
mov
fsts
ds
in
and
shlb
es
mov
fwait
cld
pop
inc
scas
ds
or
insb
sbb
das
cmp
mov
shrl
into
daa
andb
scas
int
mov
xchg
lcall
inc
xchg
push
fwait
mov
fisubrl
rcll
movsb
mov
aad
jns
stos
pop
sub
aam
cmp
mov
int3
insl
xchg
leave
pop
jle
jb
clc
dec
iret
fdivl
push
inc
xor
mov
sahf
xchg
into
xlat
mov
push
mulb
call
mov
sub
loopne
push
je
dec
sub
jnp
or
dec
inc
adc
or
mov
xchg
fmuls
or
stc
jp
and
mov
pop
leave
test
movsl
pop
jl
mov
fwait
je
dec
stos
xchg
dec
inc
jg
xchg
cmc
int
incl
pop
jbe
push
inc
lods
in
fxam
stos
or
outsb
pop
popa
fsts
out
lods
jo
xchg
adc
and
in
test
in
movsb
sub
inc
jmp
je
push
push
add
dec
in
adc
shlw
sahf
push
cs
ja
xor
loopne
or
mov
mov
xor
mov
inc
ds
aas
xchg
lret
push
pop
hlt
shlb
or
shl
jl
stc
pop
xchg
das
cmpl
dec
xchg
add
xchg
jnp
sbb
xchg
stos
int
cmp
mov
loope
sub
cmpl
subb
mov
hlt
jl
push
inc
mov
loop
or
loopne
xor
inc
mov
pusha
shl
push
xchg
out
dec
leavew
cli
fimuls
mov
leave
xchg
lcall
or
xor
fwait
leave
pop
pop
in
jo
iret
sub
mov
out
add
jecxz
fwait
push
xor
add
push
aaa
cmc
lcall
and
xchg
or
data16
xchg
xchg
pop
cmp
pop
decl
iret
std
pop
imul
pop
or
dec
jbe
push
cmp
push
iret
push
pop
mov
aaa
les
add
mov
mov
aam
scas
popa
xchg
loopne
aad
rorb
movsb
stos
fcoms
fisubrl
lcall
cmpl
add
jmp
xchg
inc
mov
loopne
xchg
or
xchg
jecxz
and
mul
clc
dec
dec
or
sub
insl
mov
cs
fsubl
andb
arpl
sbb
cli
aad
fs
and
xor
push
xchg
arpl
in
mov
clc
test
mov
test
xlat
aaa
adc
sti
cmp
sub
jmp
cmpsl
or
inc
xchg
or
rcrl
je
xlat
sub
push
test
out
jle
mov
lock
push
rorb
sbb
stc
popa
sbb
sbb
mov
adc
out
fcomip
push
test
inc
int3
pop
int
pop
sbb
push
inc
sbb
out
jbe
aas
cmc
js
les
loope
adc
fisttpl
mov
add
mov
sbb
add
mov
call
pop
sbb
mov
shl
cmp
push
pop
lods
adc
pop
push
mov
fstl
xchg
hlt
enter
or
sbb
cmp
insl
popa
pop
fisubrl
push
mov
adc
xor
mov
cmp
clc
test
stc
pop
push
mov
in
lcall
cmp
sbb
icebp
cs
pop
mov
sbb
xchg
outsb
xor
inc
dec
scas
lret
out
mov
lahf
inc
xor
cmp
pushf
mov
pop
pop
stc
gs
inc
xorl
xchg
je
mov
sbb
test
mov
das
mov
shl
outsb
stc
mov
mov
pusha
ret
push
cmp
sbb
xchg
xor
adc
mov
test
pop
aam
mov
mov
push
test
adc
jnp
mov
insb
popa
popf
fcom
sbb
or
lea
sub
test
out
mov
push
testl
jmp
and
aaa
add
and
popf
sbb
push
mov
sub
inc
mov
insb
push
jne
pop
popf
xor
mov
mov
or
push
mov
mov
pusha
xchg
es
icebp
aas
cwtl
faddl
adc
in
loope
enter
hlt
or
cs
repz
es
xchg
fmul
jo
add
jbe
jmp
push
adc
mov
or
movsb
dec
xchg
div
cmp
pop
jae
lock
out
stc
mov
sub
cmc
jo
fstpt
mov
or
inc
pop
daa
icebp
movsl
lcall
pop
or
sub
shll
movsb
push
mov
sbb
cmp
movsl
and
test
cmp
push
or
sbb
jge
stos
cltd
add
jns
loop
andb
mov
xchg
pop
jns
je
int3
les
rclb
cmp
fldln2
or
sub
pop
mov
mov
stos
pop
jae
lock
and
fdivrp
jp
addr16
jns
or
cli
jecxz
cmpsl
push
adc
into
fs
ss
imul
pop
leave
mov
sub
mov
pusha
jmp
lea
inc
cmp
fisttpll
xchg
outsb
jbe
dec
lock
rol
cmp
pop
xchg
mov
cmp
mov
push
jecxz
push
sarl
fdiv
xor
adc
roll
push
inc
jae
pushf
and
imul
xchg
cli
jne
pop
sbb
sub
xor
in
xchg
out
test
add
and
push
int
add
push
sahf
sbb
jg
clc
lock
push
jnp
inc
outsb
clc
iret
jo
pop
sub
dec
push
inc
cld
sbb
call
pusha
xchg
fcmovu
xor
sbb
dec
pop
pop
mov
daa
mov
imul
out
jmp
shr
xchg
stos
pop
xor
arpl
lret
sbb
testb
or
add
jbe
or
jmp
clc
repz
icebp
push
jmp
idivb
push
inc
add
dec
dec
int3
stos
ficoml
dec
fnstsw
dec
scas
xchg
and
add
and
jae
test
jl
or
mov
dec
and
pop
adc
sub
daa
add
insl
push
push
icebp
cwtl
in
pop
xlat
push
loop
and
and
xlat
sti
outsb
or
or
gs
lods
js
inc
int3
gs
dec
bound
xchg
fwait
cmc
mov
push
pushf
adc
stos
xchg
scas
xor
xchg
not
js
xchg
mov
jo
inc
loopne
mov
fnstsw
mov
mov
xor
lret
cs
xor
ljmp
cmp
scas
stc
mov
xchg
lahf
and
das
add
addr16
out
pop
movsl
cmpb
int3
pushf
xchg
dec
mov
and
mov
out
push
and
sbb
pushf
nop
stc
shll
test
inc
push
xlat
inc
xor
xor
xchg
outsl
dec
popa
mov
mov
das
inc
inc
adcl
pop
clc
xchg
ss
or
xchg
push
test
scas
outsb
push
xchg
jp
into
ljmp
jg
cmp
xchg
xor
imul
xchg
es
xchg
jnp
not
mov
mov
adc
mov
lahf
jecxz
sub
xchg
cmp
add
out
pushf
xor
jmp
mov
cmpsl
loopne
fwait
loop
in
jne
sahf
lods
or
mov
mov
hlt
push
inc
dec
ljmp
mov
cltd
popf
test
sti
cmpsb
mov
or
jecxz
inc
pop
sbb
rolb
or
mov
and
shll
pop
std
mov
sbb
xor
data16
fst
test
mov
stos
or
leave
dec
dec
mov
imul
inc
mov
pop
cmpsl
cmpsl
stc
cmpsl
loop
cmpsb
cs
adc
daa
mov
mov
mov
enter
mov
movsb
xchg
mov
mov
cmp
cmpsl
fsubs
mov
pop
sti
jnp
xchg
inc
fldl
mov
or
mov
stos
pop
pop
dec
and
jl
cmp
stc
insl
nop
xor
cmp
out
daa
pop
mov
roll
arpl
sbb
data16
jae
ret
sbb
mov
pop
mov
pop
movsl
xor
sbb
call
pop
jle
and
cmp
cmpsb
rorl
test
leave
bound
imul
mov
or
iret
jns
sbb
adc
mov
adc
stos
push
push
pop
and
idivb
cwtl
movsl
movsb
in
xchg
jns
push
dec
fidivl
sub
inc
sub
or
or
jno
ret
out
cmpsb
rclb
xchg
add
and
jb
cmp
add
shlb
div
mov
shlb
pop
xor
cmpsl
push
mov
pop
cltd
daa
xchg
ret
loope
jnp
pushf
jge
pop
jge
rcrb
rcr
ror
unpckhps
push
idiv
sbb
push
jbe
push
inc
dec
movsb
mov
sbb
mov
cltd
cli
push
pop
addr16
or
jge
add
or
xchg
and
rcrl
movsb
xchg
mov
xchg
in
jnp
enter
sub
scas
push
movsb
jge
xor
cltd
pop
add
or
and
pop
dec
call
mov
mov
inc
inc
mov
jns
adc
imulb
jb
mov
cmc
xchg
xchg
mov
add
pop
sub
or
xchg
xchg
pop
sub
mov
dec
cmp
mov
sbb
fmuls
add
out
test
insb
cmp
icebp
xchg
mov
test
add
cmpsl
jae
jne
xchg
xlat
stos
sub
mov
pop
fidivrs
loopne
jns
cli
mov
aaa
add
sub
fidivl
cmp
lret
pop
cwtl
cmc
jno
in
mov
aam
fidivrs
scas
cmp
sahf
test
or
add
test
sub
daa
pop
pop
fstpt
rcrl
sub
repz
sub
fildll
dec
jp
push
mov
xor
mov
push
mov
js
test
int3
mov
inc
lret
fidivs
jb
movsl
and
push
sbb
jns
xchg
and
jge
add
daa
mov
xchg
pushf
in
or
sarl
mov
mov
jnp
js
jno
add
cwtl
pop
adc
push
jle
pop
cli
repnz
iret
xchg
int
inc
push
or
dec
movsl
ficoms
xchg
dec
cmp
xchg
pop
mov
mov
sbb
mov
js
xor
and
push
sbb
leave
push
or
iret
mov
test
out
push
cli
std
lods
mov
sub
dec
cld
mov
push
imul
lret
inc
sbb
mov
add
sbb
mov
mov
js,pt
jae
call
inc
inc
cmpsl
divb
mov
mov
fdivrl
je
inc
jge
mov
jbe
sub
outsl
or
push
fs
dec
xor
addb
popa
fldenv
cmc
add
dec
sbb
fwait
repz
incb
call
mov
adc
mov
sub
fildl
sub
loopne
push
inc
inc
lds
insl
or
cmp
cli
imul
inc
cmc
in
sub
imul
xor
imul
inc
les
xor
and
mov
jns
rdmsr
popl
ja
adc
sbbb
push
dec
push
cli
or
push
popa
fildll
pop
frstor
jle
or
aam
adc
cltd
stos
mov
lcall
ss
dec
jae
shrl
sar
ljmp
pop
mov
mov
pop
fistpl
sub
lahf
sti
push
pop
mov
addl
insb
push
imul
test
xchg
jns
jbe
pusha
sbb
mov
or
int3
mov
cmpsb
insb
jns
int
dec
in
popl
mov
mov
test
clc
mov
push
and
lds
mov
int3
mov
add
add
mov
mov
sbb
repnz
push
jecxz
cmp
int
imul
mov
push
mov
xchg
xor
inc
pop
push
push
or
mov
and
push
fs
ret
mov
adc
testl
dec
outsl
push
test
mov
push
lret
jmp
cmp
les
mov
adc
jo
stos
adc
push
or
push
and
mov
xor
repnz
filds
stos
fstpt
hlt
mov
popa
setb
pop
bound
cmpsb
fcmovbe
and
cmc
cli
xchg
stos
lea
std
hlt
mov
mov
stos
mov
jnp
lret
mov
and
pop
test
mov
mov
and
mov
sub
popf
mov
ss
cmp
lret
movsl
mov
roll
cmc
mov
cli
mov
cmp
es
lock
jp
mov
dec
mov
inc
adc
mov
gs
out
es
inc
pop
aad
dec
sbbb
add
aaa
adc
dec
pop
test
pushf
in
aaa
and
adc
dec
mov
fwait
mov
into
outsl
inc
pop
daa
or
sbb
pop
add
mov
out
icebp
lret
push
bound
int3
jle
pop
sub
jg
ret
add
dec
loop
dec
mov
mov
mov
divl
pop
in
stc
cmp
lea
int3
xchg
xor
ja,pn
sub
and
ss
pushf
xchg
inc
mov
cld
loope
ds
cmp
pop
divb
data16
jmp
ds
or
imulb
adc
clc
movsl
adc
roll
repz
xchg
push
cld
dec
pop
mov
jno
lea
or
mov
sbb
insb
std
lret
es
mov
cld
mov
sbb
and
lock
adc
cmp
xor
test
fsubr
jb
jae
adc
filds
gs
sahf
xchg
out
and
fwait
adc
pop
incb
into
and
mov
aad
not
xlat
idivb
imul
rcrl
mov
lret
jmp
mov
mov
cmp
call
int
dec
cmp
mov
add
and
jl
into
shrb
inc
xor
cmp
push
cmpsb
iret
das
sub
fcomip
push
fcmovu
or
iret
je
jae
loopne
outsl
jo
dec
xlat
sbb
fldl
sub
mov
rcl
sbb
mov
mov
into
push
loop
inc
fs
fs
sub
dec
or
mov
adc
jo
mov
mov
and
dec
xorb
adc
xor
push
push
lods
mov
mov
pop
dec
jecxz
or
jg
add
mov
sub
addr16
push
ret
sahf
aam
dec
nop
or
dec
clc
dec
out
cmp
movsb
call
lret
sbb
stos
das
jo
outsb
pop
mov
rcl
jle
insl
jb
aad
jae
cmpl
cmp
xor
push
and
sar
mov
das
mov
shlb
jecxz
jl
fistpll
gs
mov
lcallw
mov
pusha
jae
or
xchg
int
test
xchg
cld
push
push
pop
hlt
dec
pusha
xor
xor
cmc
in
les
jg
mov
lods
dec
mov
dec
lcall
adc
rcrl
mov
jl
jmp
mov
popa
int
sub
adc
xor
jge
inc
fucom
cltd
shl
dec
push
in
aam
sub
cmp
cmp
jb
test
and
push
pop
imul
fists
lcall
push
mov
clc
mov
mov
push
push
mov
mov
push
leave
sub
test
fwait
inc
sarb
dec
mov
mov
sub
dec
adc
mov
shlb
dec
aam
or
mov
cltd
mov
mov
es
loope
sub
mov
rolb
test
mov
cli
jbe
mov
sbb
enter
cs
sbb
pop
adc
in
xchg
mov
loopne
popa
dec
sbb
mov
insl
or
cld
mov
sti
addr16
addr16
push
xlat
ss
ds
jecxz
rcrb
ljmp
xchg
adc
xchg
jb
or
add
mov
inc
push
ja
mov
and
dec
rcll
adc
and
stos
icebp
sar
cmc
pop
pop
pop
and
int
and
pop
fnstenv
imull
sub
cmp
or
test
inc
mov
jecxz
xlat
imul
mov
scas
lea
mov
inc
xchg
movups
nop
outsl
dec
fisttps
adc
sbb
int3
and
jge
push
cltd
test
inc
jne
test
ror
sub
mov
pop
arpl
mov
xorl
les
shll
test
dec
negl
jge
test
sti
inc
rcrl
lcall
loop
push
push
cmp
inc
dec
sbb
jg
adc
adc
dec
stos
into
pop
sub
movsl
sbb
repz
pop
push
mov
fistps
ljmp
and
in
adc
mov
out
lahf
xor
mov
shlb
lea
mov
inc
repz
cli
scas
and
ret
push
or
mov
mov
cmp
jge
loope
test
push
sub
xor
inc
int
call
aas
subl
outsl
sub
mov
sub
jb
aad
mov
push
cmp
fwait
test
mov
pop
arpl
popf
sbb
add
hlt
xacquire
push
popf
mov
sbb
adc
lcall
xor
int
rclb
mov
jo
sub
test
dec
dec
subl
xlat
lahf
sub
loopne
shll
or
xchg
and
pushf
add
pop
or
sub
push
shlb
in
test
push
jbe
cmp
mov
sub
xor
inc
push
add
es
out
jge
and
lods
mov
or
push
add
es
xor
mov
pushf
notb
cmp
adc
mov
sub
push
mov
mov
cltd
daa
test
mov
mov
mov
icebp
aaa
arpl
push
fldcw
sub
sbb
xor
data16
adc
cmp
adc
pop
into
xor
pop
adc
push
mov
hlt
xor
cmp
and
inc
ds
arpl
xchg
int3
xor
lods
lods
mov
mov
cmp
lret
cmp
mov
sub
push
dec
add
push
push
movsl
addr16
jmp
aam
hlt
fwait
cmpsl
inc
outsb
cmpsl
test
jmp
mov
push
xchg
jl
mov
dec
fdivrl
mov
fwait
adc
lahf
mov
mov
adc
arpl
and
shrd
jns
xchg
pop
lcall
test
sub
jmp
and
cmp
cmpsb
mov
sub
outsb
lock
mov
mul
daa
bound
pop
xchg
mov
out
push
pop
scas
cmp
ds
test
scas
mov
outsb
int
imul
cmp
outsb
lret
or
sti
fbld
add
xor
fdivrs
test
add
loopne
sbb
mov
cmpsb
in
lcall
call
and
push
or
inc
gs
sub
scas
cmp
sti
pop
dec
jp
add
adc
sub
jl
jne
dec
cmpsl
ss
mov
jecxz
cltd
pop
sbb
jmp
pop
cmc
push
pop
xchg
add
jp
mov
xor
daa
mov
lea
pop
and
shll
out
out
aas
popa
pop
push
mov
adc
or
dec
xchg
dec
dec
enter
inc
mov
pusha
sub
add
mov
xchg
divl
cmp
mov
adc
loope
add
dec
push
push
icebp
and
test
cmp
adc
cld
push
std
data16
pop
out
loope
push
addb
lcall
movsb
push
inc
ss
ret
inc
insb
fimull
xchg
je
dec
dec
xchg
xor
fdivrp
bnd
dec
or
mov
jecxz
fidivrl
inc
xchg
adc
sub
lock
cs
jp
js
jnp
and
mov
fxch
ss
aam
dec
sbb
cwtl
dec
les
xchg
pop
mov
mov
outsb
inc
test
in
jle
pushf
ds
dec
inc
iret
pop
inc
subl
imul
das
stos
cmpb
mov
xor
lock
adc
repnz
aam
adc
movsb
xor
dec
push
pop
mov
sub
jnp
iret
and
mov
push
push
xchg
adc
imul
or
cmp
repz
mov
inc
adc
rep
mov
xchg
lods
and
rclb
sti
dec
test
inc
sahf
mov
test
into
lret
pop
xchg
or
popa
mov
sbbl
repz
sub
xor
add
sub
andl
out
pop
dec
xchg
sub
idiv
bound
dec
sub
jbe
ss
and
push
pop
faddl
sbb
and
push
sbb
sti
nop
js
or
push
ss
jo
xor
cmp
pop
cmc
mov
jl
addb
jge
jmp
mov
cmpb
and
mov
loope
pop
pusha
out
lcall
fistpl
add
in
mov
or
lret
add
lcall
pop
loop
lods
int
mov
aad
jo
push
jecxz
or
jecxz
inc
adc
push
mov
lcall
inc
jns
into
dec
xor
cmp
stc
mov
ljmp
ss
sub
jmp
test
pop
lahf
pop
loope
cld
bound
xchg
roll
push
xlat
inc
out
jmp
addr16
mov
sbb
stc
test
aad
in
and
sbb
cltd
dec
xchg
push
aam
repz
inc
dec
enter
mov
push
in
xor
cmp
fldcw
mov
pop
sbb
xchg
shl
cmpsl
hlt
roll
inc
xor
movsl
xor
inc
pop
push
fisubl
mov
or
inc
xlat
jnp
sub
mov
mov
cmp
testl
add
lret
aad
jl
out
fimuls
cmpsb
fdivl
movsb
lahf
mov
orb
cwtl
pop
sbb
gs
cmc
or
push
sub
mov
notb
adc
mov
inc
adc
sub
sub
mov
or
fsts
xchg
iret
or
cmpsl
in
mov
inc
lcall
mov
aaa
sub
mov
in
sub
roll
mov
mov
push
pop
stc
scas
push
negl
or
push
jbe
inc
pop
mov
lahf
enter
cmp
add
add
xor
mov
imul
in
cmp
push
inc
mov
js
pop
in
sub
cli
shrb
enter
pop
dec
test
mov
or
adc
mov
nop
xchg
iret
cltd
andb
adc
cmp
insb
adc
test
jb
push
daa
jae
gs
iret
inc
lahf
mov
push
fcoml
adc
std
adc
add
xorl
mov
cmp
subb
sub
pop
sbb
popa
int
jecxz
jge
fnstenv
scas
sahf
dec
and
and
clc
jmp
and
jle
add
pop
and
sbb
movsb
or
push
lret
sahf
xchg
nop
out
xchg
pop
or
push
jmp
push
mull
mov
adc
orl
in
rcrb
push
inc
xor
dec
xor
push
lret
ja
pop
sbbl
dec
test
rclb
sbb
sbb
inc
cmc
and
xchg
dec
cmp
mov
test
mov
es
inc
sbb
pop
outsl
pushf
mulb
popf
pop
jl
xchg
dec
inc
and
repz
add
sti
rcl
push
sub
imul
jp
cmp
and
pop
dec
outsl
mov
loopne
sti
add
mov
daa
ss
xor
jmp
mov
adcb
sbb
mov
xchg
jnp
mov
sahf
mov
cmp
and
sub
stos
add
or
pushf
fldt
pop
movsl
mov
lods
stc
cltd
mov
pusha
fists
xor
mov
jb
xchg
movsl
fistpl
notb
arpl
xchg
imull
or
in
rcrl
xor
mov
mov
sbb
mov
jle
pop
xor
xor
adc
popa
or
ljmp
inc
mov
cwtl
pop
xchg
push
dec
pop
dec
push
xchg
std
push
insl
adc
pop
mov
lret
scas
mov
ret
jp
push
in
xor
and
xor
mov
aas
cs
inc
xor
out
rcrl
lds
inc
mov
rcll
xor
inc
sbb
in
dec
jmp
cmp
cmp
pop
mov
idivl
popf
jne
adc
mov
insl
lods
push
xchg
cmp
mov
add
pushl
jae
add
mov
rorl
pop
test
mov
mov
popa
rcr
sahf
xchg
dec
hlt
sub
add
xor
ja
adc
jge
stos
fstpl
fidivs
mov
xchg
adc
out
cmpsb
sbb
push
shrb
out
out
inc
inc
fisubl
out
or
dec
imul
jmp
in
ficoml
sbb
pop
push
aaa
aaa
jg
add
dec
sti
push
insb
loop
stc
lods
lahf
mov
xchg
mov
pop
dec
mov
insl
adc
jp
je
push
popf
aam
sbb
imul
mov
repnz
sub
or
cmc
in
hlt
arpl
cmp
in
mov
lret
or
lret
push
popw
adc
repz
ja
add
std
fimuls
push
aas
rorb
xchg
arpl
jle
or
lock
lcall
sbb
ret
lea
push
daa
enter
and
mov
pop
inc
rcl
outsl
xor
xchg
jecxz
stos
lods
outsb
fisubrs
mov
inc
inc
add
int
or
insb
push
fs
arpl
shll
mov
dec
js
ss
aam
adc
adc
mov
pop
ss
pop
adc
mov
pop
pusha
shll
mov
and
dec
xchg
mov
jns
mov
js
mov
andl
cld
in
out
push
fiaddl
or
in
sti
std
push
dec
mov
andb
es
jmp
add
divb
fwait
shll
jbe
lds
adc
rcl
les
hlt
inc
andb
fiaddl
mov
mov
cld
adc
scas
mov
daa
mov
push
push
daa
insl
and
sub
iret
int
mov
jns
push
jae
cmp
or
pushf
pop
or
aad
sahf
sbb
outsb
xchg
enter
mov
push
adc
adc
imul
js
cltd
push
hlt
ja
dec
icebp
push
adc
rcl
mov
push
enter
pop
repz
dec
jno
out
cld
mov
lea
fld
xchg
inc
ret
pop
filds
test
sbb
xchg
and
leave
fstl
push
ret
pop
fisubrs
outsb
loopne
inc
push
outsb
xchg
inc
xchg
outsl
movsl
int3
adc
fcmovb
hlt
and
cmc
jmp
push
cwtl
and
stc
inc
ja
cmp
repnz
add
outsl
ds
arpl
and
inc
mov
dec
mov
mov
pop
bound
lcall
movsl
iret
jb
in
enter
push
or
xor
je
popa
mov
jns
xchg
jl,pn
pop
and
ret
xor
add
xchg
loope
lret
repz
jle
sti
adc
xchg
lea
mov
pop
xlat
mov
popa
mov
mov
push
pop
movsb
sub
dec
out
mov
pop
and
stc
enter
inc
or
add
pop
add
jle
add
mov
jbe
add
test
orb
pop
jecxz
shll
arpl
xchg
inc
mov
and
arpl
and
xor
aam
push
cmc
movsb
je
arpl
cwtl
mov
mov
shlb
out
jb
push
out
leave
and
mov
dec
stos
pop
lcall
repnz
xor
and
xchg
or
lods
or
popa
lea
inc
cmp
fnstenv
dec
and
fcmovne
add
mov
sub
sarb
inc
cmpsl
push
xchg
pop
andb
pop
jo
push
lods
and
subb
addr16
es
hlt
and
xorb
popf
sti
test
bnd
aas
or
shrl
iret
fldl
mov
scas
mov
fwait
xchg
loop
cmc
addr16
mov
xor
repnz
mov
xor
jns
fnstsw
jl
sarb
nopl
xor
pop
and
xlat
cmp
xlat
pop
stos
pop
push
and
push
jp
inc
xchg
sub
mov
or
out
push
shll
shll
ds
lea
repnz
dec
out
sti
cmp
clc
mov
sbb
paddq
pop
mov
jge
xchg
adc
mov
ficoms
pop
test
add
pop
pop
push
adc
pushf
adc
push
jo
repnz
in
cmp
mov
fistpl
xor
test
call
sbb
inc
cmp
pop
dec
dec
add
outsb
mov
push
data16
mov
out
push
js
ret
xchg
dec
gs
sar
mov
mov
mov
in
cmpsb
cli
call
popf
jg
adc
cmc
es
lret
rcrl
decb
pop
push
push
xor
fnsave
mov
orb
adc
inc
fisubs
into
cltd
push
aad
insl
dec
in
fmul
sub
lcall
dec
xchg
xor
loope
jge
pop
xchg
fst
jo
jp
add
lods
in
inc
adc
mov
ror
xorl
mov
scas
stos
xchg
fldenv
mov
cmp
push
mov
das
cltd
adc
dec
call
cmp
fucomp
sub
insb
push
mov
iret
aaa
and
cmp
mov
outsl
jecxz
jae
data16
insb
cmp
dec
in
in
clc
mov
add
ja
inc
and
gs
loop
incb
arpl
lret
dec
fists
mov
jae
cmp
ret
push
fsubrp
clc
pop
xor
addl
and
jne
stos
and
mov
ljmp
jecxz
movsb
dec
loopne
inc
push
jae
mov
pop
mov
addr16
lock
jns
or
or
insl
int
out
mov
adc
or
sbb
xchg
fwait
and
shlb
jp
outsl
ret
scas
pop
fdivrp
adc
adc
leave
repz
sbbl
push
dec
pop
pushl
into
leave
arpl
push
add
pop
jae
iret
sbb
iret
clc
jg
add
sbb
iret
xchg
loopne
xchg
add
sahf
scas
lahf
sar
sub
mov
ja
iret
xor
mov
rolb
shll
add
jae
jp
jmp
orl
xchg
sbb
ss
jge
sub
aad
cmp
pop
push
pop
daa
in
inc
push
jo
or
movb
jnp
ret
add
xor
rolb
pop
iret
clc
adc
jg
cmpsl
addl
lods
inc
into
faddp
adc
inc
lret
and
dec
sbb
mov
arpl
xchg
pop
pop
addl
fisubrs
fsubl
jge
out
pop
daa
jle
stc
in
bnd
cmp
out
inc
jmp
xchg
ja
add
test
mov
lahf
idivl
stos
fistl
or
jbe
popa
inc
cmp
push
and
and
je
call
mov
stos
fiadds
and
aas
mov
mov
pop
into
enter
jle
mov
xchg
push
mov
or
scas
and
mov
daa
test
pusha
negl
in
mov
loope
test
lahf
fnsave
mov
dec
pop
hlt
mov
js
xor
xor
int3
rcrb
adc
cmp
clc
ja
rol
dec
into
add
lret
movsl
cmpsl
repz
dec
adc
mov
iret
in
inc
call
sbb
fwait
xor
sub
outsb
sbb
inc
shll
clc
cmp
pop
push
mov
jl
sub
xor
stos
stc
into
or
xlat
jp
dec
gs
dec
negl
ljmp
mov
mov
jae
add
xchg
scas
es
jae
xchg
rolb
jns
xchg
mov
pop
push
inc
inc
push
fsub
cmc
cmp
push
mulb
stos
pushf
cmc
mov
mov
fsubl
sub
inc
mov
call
aaa
xor
in
pop
sub
std
mov
test
test
add
es
outsl
pop
push
rcll
mov
test
repz
add
xor
inc
mov
repz
adc
mov
movsb
rorl
jbe
inc
repz
push
clc
or
int
xor
stos
pusha
pop
xchg
hlt
mov
or
in
in
xor
mov
shlb
pop
addr16
shrb
cld
push
jle
stos
cmp
sub
daa
push
sbb
fdivp
lods
sub
pop
adc
jne
cmp
and
mov
clc
jno
adc
popf
jne
inc
mov
xor
testl
xor
adc
mov
jo
or
popf
pop
hlt
aaa
and
xchg
pop
jge
pop
or
test
push
xchg
cmp
cmp
cmpsl
imull
sbb
je
cltd
std
sub
adc
push
jbe
rcrb
push
test
stc
sbbb
cwtl
pop
and
or
xor
and
pop
mov
frstor
cmp
test
pop
sub
push
push
sbb
xchg
lret
or
clc
cmp
loopne
mov
push
std
sub
inc
xor
outsl
push
fmull
aam
icebp
add
and
xlat
ffreep
movsl
pop
lods
divl
ret
daa
push
cli
jo
mov
stc
mov
push
imul
loope
cmc
jmp
pop
loope
enter
sub
js
mov
movsl
mov
dec
mov
add
mov
sub
movsl
pushf
jmp
or
cmp
jno,pn
lea
addr16
mov
daa
jp
aaa
das
fnstcw
dec
cli
add
or
ja
outsb
push
dec
and
ljmp
ret
das
orl
lret
or
mov
xchg
mov
and
adc
adc
negl
jns
xlat
pop
inc
jno
mov
dec
jb
sar
fcom
and
rep
jmp
mov
jnp
add
push
pop
fcoml
mov
xchg
out
mov
inc
adc
xchg
dec
push
jno
pop
lods
cmp
gs
movsl
mov
es
jns
addr16
das
sti
ljmp
std
out
mov
pop
sub
jge
pop
arpl
jge
sbb
mov
cli
lock
stos
or
aad
mov
xchg
sahf
push
daa
ret
ja
adc
repz
mov
movups
mov
xchg
jecxz
sahf
fnstsw
in
fwait
sub
mov
xchg
xchg
xor
inc
ja
cli
cmp
push
movb
push
pop
adc
and
cmp
les
xchg
mov
fidivrl
mov
mov
mov
adc
adc
push
in
push
inc
cmpl
mov
ss
test
stc
mov
jns
xor
xor
add
mov
or
out
push
xor
scas
in
pushf
adc
movsb
add
movsl
jge
push
imul
and
cs
xchg
andb
pop
xlat
out
insb
mov
jno
mov
fldt
out
adc
movsl
dec
mov
cmpsl
mov
mov
es
sbb
icebp
push
sbb
mov
pushf
dec
addb
xchg
orb
pop
add
dec
sahf
push
push
mov
dec
iret
loopne
cmp
imul
inc
mov
push
lds
lcall
mov
incl
push
insl
jg
bound
sub
adc
sbb
clc
mov
jae
mov
cmp
mov
ret
jmp
ret
pusha
iret
ja
jecxz
scas
fstl
ret
sub
and
adc
inc
loope
inc
cltd
pop
add
xchg
nop
pop
leave
daa
lock
inc
xchg
sub
or
sub
fbld
adc
add
mov
mov
and
pop
mov
fildll
mov
pop
cmp
roll
in
jg
or
out
jmp
xor
add
fidivl
clts
nop
or
mov
mov
and
mov
push
inc
icebp
dec
pop
lahf
cltd
pop
gs
sti
fisubrl
es
xor
imul
or
ror
push
dec
and
push
fsubrp
cmp
clc
fstl
fistps
hlt
push
mov
repz
sahf
adc
sbb
push
xchg
ret
mov
push
jecxz
dec
cmp
push
cs
sbb
popa
inc
scas
xorl
rep
mov
push
arpl
bound
pop
push
or
movsb
sahf
popf
sbb
cmpsl
cli
rcr
sub
popa
outsl
lea
rolb
ror
mov
dec
or
jae
mov
inc
push
iret
pop
xchg
dec
repnz
lock
sub
inc
pusha
pop
inc
subb
push
hlt
mov
pusha
add
mov
sbb
je
xchg
scas
push
out
xor
pop
je
mov
push
negl
in
cli
popl
int3
adc
xor
adc
adc
xchg
notl
xor
jnp
outsb
dec
enter
outsl
sti
dec
sub
sbb
mov
andl
jnp
xor
mov
jmp
fdivr
aaa
es
jl
lea
out
xchg
jmp
insl
pop
sti
repnz
sbb
inc
out
jno
or
gs
adc
mov
outsl
pop
lret
pop
cmp
and
mov
or
cmpsl
xchg
inc
xchg
jle
push
mov
sbb
jl
inc
push
outsb
orb
shld
or
cmc
ss
scas
cltd
lods
bound
dec
cmp
sbbl
or
push
mov
mov
das
sbb
push
test
sahf
pop
std
mov
iret
push
testl
loopne
xchg
mov
scas
mov
inc
out
inc
add
js
je
cmc
daa
push
xor
std
xor
sbb
cmp
xchg
lcall
inc
arpl
mov
cmp
adc
jae
sbb
gs
and
in
std
mull
mov
cmp
sarb
icebp
jb
pop
pop
push
cmpsb
mov
add
dec
jl
lret
pushf
or
inc
scas
dec
xchg
ret
cld
cld
sbb
int3
jb
jae
test
popa
xor
xor
xor
popf
mov
adc
not
push
push
jle
aam
cmp
mov
mov
inc
pop
mov
mov
clc
pop
mov
xchg
or
mov
xchg
inc
mov
sub
dec
cwtl
pusha
xchg
mov
shlb
int
mov
add
fiaddl
jle
push
out
ss
js
mov
push
arpl
jmp
out
in
ljmp
sahf
mov
dec
pop
cmc
pop
mov
mov
mov
inc
pop
and
cmpsl
sbb
pusha
mov
xor
add
push
stos
inc
andl
mov
cmpb
cli
pop
xchg
mov
mov
out
es
arpl
lcall
push
sbb
repnz
cmpsl
mov
bnd
cmp
cwtl
out
dec
movsb
adc
sahf
mov
int
jmp
sbb
mov
push
icebp
icebp
add
bound
sbb
dec
jbe
fistps
mov
xor
cmp
xchg
pop
aaa
cmpsl
sbb
ljmp
insl
dec
pop
jge
or
xor
xor
pop
js
push
xchg
lds
add
out
and
jl
push
mov
test
in
mov
adc
pop
pop
js
pop
pusha
jne
shll
fcomps
test
cmp
pop
stos
mov
das
xchg
xor
jnp
push
lea
leave
addr16
jle
push
enter
sbb
in
scas
mov
sti
and
popf
fisubs
fdivl
sub
scas
adc
mov
ss
scas
jmp
xchg
jnp
and
lea
inc
xchg
sbb
scas
mov
lock
and
mov
iret
sbb
popf
dec
sub
mov
add
mov
sub
or
es
inc
inc
dec
add
rol
imul
fnstenv
rolb
popa
pop
dec
pop
cmpl
cs
adc
and
and
fildl
aaa
bnd
mov
pop
inc
mov
push
loop
stos
stos
call
cmpsb
nop
mov
aas
and
pop
fcomi
sbb
sbb
js
pop
sbb
aas
mov
stos
add
push
lahf
or
xor
and
dec
mov
pop
push
aad
push
xchg
cmp
int
test
into
add
lret
and
insb
jne
xor
inc
xchg
adc
jg
out
adc
inc
inc
out
pop
call
sbbb
push
adcb
sti
sub
adc
adc
test
mov
cmc
lret
lods
dec
sahf
jl
push
mov
sbb
jmp
pop
scas
xor
call
rolb
int3
and
and
push
cmc
mov
clc
test
jle
subl
fistpl
lds
xchg
cmp
out
pop
push
xchg
lcall
jne
and
mov
repnz
push
inc
jns
repnz
movsl
xor
jae
mov
ror
mov
push
add
dec
test
and
mov
xchg
lods
int3
sbb
cmp
cli
cmp
out
xchg
jmp
cmp
out
mov
push
adc
xchg
jmp
add
or
call
stos
leave
fistl
test
pop
mov
mov
add
pop
int
ds
sub
arpl
nop
adc
or
sub
loopne
jl
lods
push
gs
sbb
hlt
mov
pusha
pop
or
and
pop
scas
andb
or
sti
lret
pop
into
shl
pop
sub
mov
les
dec
fstps
mov
xlat
sahf
inc
sub
hlt
mov
loope
lret
dec
sarb
mov
repnz
pop
cmp
jl
xchg
stos
push
xchg
outsb
and
lods
ljmp
sub
rolb
xchg
and
mov
add
xchg
cmp
loop
imulb
push
or
pop
push
popa
aaa
pop
pop
mov
xchg
mov
or
cmp
andl
and
shll
cmp
push
xor
ret
cmpsb
jp
jb
adc
push
and
outsl
int
push
sbb
sbb
add
sub
imul
int3
jle
xor
sahf
inc
subb
mov
aam
xor
pop
cmp
jae
mov
faddl
andb
add
or
jmp
es
enter
cmp
sbb
xchg
jno
mov
mov
jbe
mov
push
stos
imul
push
dec
cltd
jo
mov
push
inc
lahf
fdivrs
sub
push
and
fdivrs
mov
aas
stc
scas
cltd
outsb
fdivr
inc
mov
flds
push
sub
scas
adc
in
sub
jne
dec
clc
out
andb
mov
jae
cmp
jmp
mov
jmp
xchg
fmull
jae
jmp
mov
addr16
pop
mov
or
stc
lahf
cmpsb
push
mov
aam
xchg
mov
gs
aam
ss
mov
or
mov
test
push
int3
test
es
push
sbb
jne
push
mov
cmp
dec
das
inc
jae
mov
cmp
dec
lret
lock
int
icebp
push
and
xor
inc
incb
jecxz
xchg
das
fsubrl
scas
inc
mov
enter
aam
inc
mov
push
and
gs
pop
iret
xchg
push
or
xchg
incl
dec
popa
pop
xor
ret
jle
jecxz
int3
ret
cmp
jecxz
imul
mov
mov
pop
mov
testl
fiadds
add
lret
xor
lahf
in
dec
inc
xor
int
jns
fisubl
mov
adc
mov
mov
mov
and
pop
aaa
mov
sub
and
and
repnz
fwait
pop
mov
mov
sbb
add
lods
adc
xorb
insl
push
cld
cmc
jnp
jg
sub
xchg
inc
or
and
push
pop
push
push
dec
xchg
rolb
cltd
cmpsl
loop
mov
ficompl
ficomps
inc
jo
mov
sbb
mov
push
gs
sbb
out
dec
push
call
out
in
pop
repz
jno
mov
fsubrl
movsl
jle
push
es
outsb
loopne
jae
xchg
jmp
push
push
inc
dec
xlat
int3
or
inc
push
lcall
outsl
out
or
push
or
inc
mov
ret
sbb
or
push
push
loope
xor
sbb
cld
outsb
cld
inc
filds
call
sub
dec
fdivr
or
mov
nop
enter
sarl
lods
mov
xchg
ljmp
outsb
das
cmp
adc
adc
jae
jo
lods
add
sarb
dec
inc
lock
je
movsl
jge
fstpt
and
push
adc
stos
lcall
loope
les
sub
mov
sub
in
rcr
cld
cmpsb
adc
int
jg
sbb
sti
sarl
pop
push
mov
add
mov
pop
jp
jae
ror
adc
cmpsl
push
mov
xlat
sub
mov
xlat
sub
adc
repnz
je
mov
xlat
pop
jg
and
jae
jecxz
orl
push
clc
arpl
adc
out
arpl
xchg
and
fistps
fimull
adc
icebp
ljmp
movsb
cld
fs
mov
dec
fbstp
movsb
and
or
mov
sbb
into
negl
lds
ljmp
shlb
pop
imul
push
jbe
loopne
inc
mov
cmpsb
mov
into
loopne
pop
addr16
mov
dec
jne
add
lods
sub
push
push
mov
shll
push
and
and
xor
out
fwait
cmp
scas
nop
shrl
pushf
cmc
scas
leave
pop
mov
in
mulb
ret
adc
lea
call
int3
int3
cmc
sti
fldcw
jne
xchg
mov
lock
clc
xchg
iret
mov
mov
push
imul
dec
test
shl
sbb
mov
and
lcall
fisttpll
jns
lret
dec
mov
iret
lret
or
or
inc
je
hlt
fucomp
orl
sub
sahf
inc
je
cmp
testb
test
shlb
cmp
ljmp
cli
mov
mov
in
cmpsb
lods
je
push
nop
xchg
cli
or
xchg
lahf
scas
insb
icebp
icebp
pop
or
movsl
ja
bound
push
lods
notl
addr16
cmpsl
jmp
pop
das
or
jnp
test
cli
iret
mov
mov
vbroadcastss
call
sbb
pop
jns
dec
imul
sti
dec
test
mov
push
test
notl
je
xor
movsl
add
rcrl
xor
test
jo
cmp
or
dec
cmp
je
test
stos
gs
add
and
sbb
scas
gs
xchg
scas
test
inc
rcll
mov
and
shlb
sub
add
cmp
in
pop
adc
sahf
cs
inc
pop
insl
ds
lods
cmp
stc
nop
ret
mov
adc
mov
aam
aad
adc
fs
mov
in
mov
sbb
fwait
outsb
clc
ljmp
push
mov
mov
stc
jns
push
mov
sbb
and
sbb
rcrl
loop
fisttps
int
stos
out
addr16
lods
mov
or
add
mov
cmp
rorl
sbb
push
jecxz
cli
cs
cmp
jns
cmp
shl
inc
aas
popf
repnz
sub
cmc
or
call
mov
andl
sbb
dec
cmpsl
lods
insb
cmp
icebp
push
and
add
push
aaa
outsb
xchg
shlb
push
jne
sub
jle,pt
jnp
push
movsb
dec
cmp
mov
enter
rolb
push
sbb
jge
imul
loop
adc
pop
mov
data16
insl
mov
cmpsb
test
cmp
sub
stos
js
or
popl
or
inc
neg
xchg
xchg
pop
sbb
push
shrl
stos
jl
cmp
dec
and
jg
cld
adc
xchg
mov
push
pop
mov
fimull
aaa
gs
lahf
repz
aas
into
push
rcrb
loope
mov
mov
dec
lock
scas
test
push
inc
arpl
mov
cltd
xchg
scas
pop
cmp
scas
mov
mov
test
xor
rorl
xlat
add
aad
mov
fs
fists
addr16
lock
cli
imul
call
rcrl
mov
dec
ss
dec
adc
movsb
fsubl
pop
sahf
scas
xchg
mov
xor
fs
cltd
cld
stc
out
insl
xchg
and
out
inc
sbb
roll
cli
cmp
shr
mov
sub
in
inc
pop
in
lahf
push
iret
in
and
lret
mov
xchg
fildl
pop
jecxz
out
cmc
icebp
ficompl
cwtl
mov
pop
ds
pop
pushf
mov
mov
call
test
jge
lahf
ret
xchg
sub
dec
in
leave
insl
in
int3
xor
mov
inc
push
push
mov
std
ds
scas
call
out
jmp
sti
fistl
push
out
xchg
dec
xchg
clc
jge
push
jmp
bound
aas
outsl
jmp
insl
pop
in
movl
cmc
mov
xchg
jbe
add
jp
sbb
inc
dec
andl
push
push
push
hlt
mov
cmp
pop
jle
push
mov
pop
jb
sub
shll
out
mov
leave
std
pop
flds
mov
pop
aas
sub
cmpsl
and
mov
xchg
cmp
andl
xor
lret
add
sub
jnp
xchg
out
inc
push
ds
jge
push
dec
sbb
mov
adc
jb
add
jno
pop
pop
and
add
lea
push
lret
mov
push
push
aam
jae
xchg
jl
das
jecxz
sub
or
test
and
orb
or
mov
loop
ljmp
dec
sbb
pop
shl
out
lea
out
in
lret
sbbb
xchg
sbb
adc
pop
cmc
xor
xchg
leave
and
fisttpll
mov
movb
jno
jge
pop
push
daa
insb
lcall
xlat
inc
loope
nop
xor
or
rorl
mov
mov
or
dec
push
imul
mov
dec
std
push
push
cmpsb
inc
lret
mov
test
cmp
jge
adc
mov
jns
loope
pop
stos
jno
xchg
xchg
pop
ret
pop
sub
push
cmpsb
cltd
and
xchg
add
dec
pushf
movsb
out
push
pop
mov
mov
faddl
lcall
sub
in
mov
lahf
mov
movsl
rolb
mov
lock
bound
leave
jl
push
fld
pop
sbb
jae
jb
mov
jne
daa
stc
out
aad
or
nop
adc
cmc
jne
andl
push
mov
sub
int3
repnz
mov
cmp
lock
push
sub
rclb
bound
lods
and
mov
je
test
loopne
mov
hlt
mov
inc
shrl
sub
insl
enter
mov
cmp
and
mov
push
add
mov
sbb
xor
test
xor
or
ss
cmp
sbb
frstor
js
cs
addl
scas
push
sahf
shlb
pop
xchg
or
xchg
outsb
jmp
lods
xchg
dec
fldcw
adc
mov
daa
and
lret
inc
loopne
lods
test
scas
mov
stos
add
mov
mov
mov
lea
sub
and
insl
push
int3
jecxz
into
jo,pn
xor
lcall
push
popf
rcll
in
insl
push
insb
arpl
mov
adc
imul
lret
lret
cmp
push
jecxz
pop
incl
jp
mov
aad
xchg
pushf
lea
adcb
bound
pop
mov
cs
sub
xor
shrb
icebp
xchg
pushf
fimull
outsl
mov
loop
adc
jg
pop
jo
jnp
xchg
in
and
lahf
sub
cmp
push
push
fsubp
fsubrs
pushf
mov
mov
scas
arpl
and
pop
pop
and
ja
pop
sub
sub
fisubl
in
push
inc
in
or
mov
or
cmp
mov
shlb
das
orb
xchg
jb
xchg
adc
fimuls
test
mov
push
cmp
fstpl
movsl
pop
and
adc
pop
mov
add
adc
pusha
insl
inc
aas
pop
cltd
jmp
pop
xchg
enter
test
ficoml
jo
mov
mov
insl
jae
sub
mov
test
mov
rclb
into
fcmovb
sub
mov
pop
push
lods
dec
mov
or
or
mov
clc
enter
sub
divl
ljmp
dec
jmp
gs
inc
aam
pop
mov
faddl
xchg
push
adc
xorl
inc
jbe
rorb
fisttpl
pop
cltd
inc
dec
mov
pop
xchg
shrb
out
jmp
push
mov
pop
pushf
popa
pop
stc
mov
inc
aam
mov
into
subl
push
mov
es
aas
adc
ds
data16
sti
pop
popa
test
cli
popa
insl
and
jecxz
loop
jle
dec
dec
mov
ss
sub
push
lahf
jle
sbb
pop
repnz
sub
cmp
bound
sub
xchg
xlat
int3
sbbb
add
aaa
pop
add
lahf
ret
cld
hlt
test
jns
pop
mov
movsl
pop
popf
sbb
pop
repz
sub
push
xchg
inc
movb
dec
ds
pop
call
into
dec
mov
std
in
xchg
fiadds
add
imul
pushf
mov
enter
imul
pop
out
xor
popl
dec
outsb
out
xchg
arpl
jno
pushl
lcall
sub
or
dec
add
mov
jle
insb
out
xlat
out
jo
pop
pop
xor
bnd
dec
movsb
test
ficompl
stc
aad
xchg
mov
sub
pusha
cwtl
push
jno
mov
fwait
jne
xor
xchg
add
mov
scas
dec
jg
test
inc
out
out
mov
rcl
mov
fcoms
adc
loopne
adc
add
xchg
mov
sub
js
add
popf
loop
inc
adc
mov
mov
aam
mov
pop
jl
jae
cmp
inc
lea
ficoml
inc
gs
outsl
push
shlb
rcr
add
mov
test
leave
adc
int
pushf
jecxz
mov
notb
sub
xor
pop
nop
dec
push
pusha
aam
jnp
fwait
mov
int
das
imul
shrl
adc
outsl
push
add
pusha
mov
jl
xchg
pop
mov
and
into
or
pop
or
addr16
dec
cmpsl
jbe
cld
neg
dec
mov
mov
mov
vmulps
aaa
or
sub
xchg
repz
fidivs
dec
data16
nop
xchg
dec
sub
out
xchg
arpl
int3
rcr
mov
pop
push
and
mov
cltd
stos
xchg
fsts
sub
or
mov
inc
inc
aaa
lret
out
push
add
ret
or
scas
mov
mov
repz
mov
mov
ficoms
cmp
sub
addr16
mov
dec
sub
push
ss
dec
ds
lcall
pop
or
dec
dec
not
js
and
and
dec
cmp
mov
or
adc
inc
inc
jne
out
dec
add
pop
arpl
jno
push
add
cwtl
hlt
sbb
adc
es
xlat
mov
xchg
and
push
or
fidivrs
fadd
fldcw
aad
push
inc
fnstcw
cltd
fdiv
lock
loop
mov
cld
js
add
imul
fnstcw
std
sbb
sbb
mov
mov
pop
cmpb
mov
shl
sbb
inc
push
jae
out
cli
or
fidivl
jno
movsb
xor
shlb
pop
sub
xchg
shrb
pop
mov
jae
inc
mov
subl
popf
bound
add
test
xor
xchg
inc
mov
flds
repnz
cmpsb
lods
cmp
inc
test
xchg
fwait
ret
cmp
cmpsb
lret
test
xor
lods
mov
jle
inc
xor
xor
add
push
mov
outsb
fdivrs
sbb
clc
xor
pop
mov
andb
call
test
xorl
outsb
pop
mov
aad
subb
jecxz
jle
jbe
mov
jo
pusha
ljmp
push
add
lods
les
xchg
or
or
pop
mov
dec
inc
pop
mov
mov
add
push
xchg
jbe
push
jle
mov
cmpsl
or
and
fdivs
ss
push
test
cmpsl
addr16
outsl
test
xor
sbb
mov
jp
ret
fldenv
daa
mov
repz
loop
jne
mov
add
and
lcall
cmpsl
sub
outsb
dec
mov
cmp
loopne
xchg
std
lods
fnsave
mov
insb
in
cltd
ds
sahf
jb
clc
fnsave
cs
push
popf
cmpl
pop
pop
aad
mov
mov
in
ljmp
add
xor
in
adc
loopne
out
xchg
popa
push
inc
mov
or
cmp
inc
cltd
test
xchg
or
aam
shr
jnp
xchg
and
std
lods
or
lds
push
addr16
xchg
imul
arpl
mov
stos
dec
xchg
aad
cmp
pop
nop
inc
xorb
movsl
iret
imul
das
or
jp
or
mov
icebp
mov
xchg
xor
mov
ret
inc
mov
mov
aam
in
mov
mov
ret
or
add
aaa
into
pop
xchg
stc
and
shrb
out
loopne
xor
ljmp
xor
adc
sbb
call
xor
jne
mov
add
out
mov
xchg
out
pusha
adc
test
or
inc
je
pop
test
mov
cmp
sub
inc
push
inc
mov
daa
jge
jne
lret
pcmpeqb
or
pop
rcrb
and
and
mov
faddl
popa
scas
popa
int3
sub
xor
and
imul
addr16
mov
insl
adc
cli
mov
mov
rcrb
inc
xchg
outsb
xor
bound
dec
lcall
mov
ret
and
inc
sub
add
fdivrs
xor
nop
pop
add
jge
mov
clc
js
fimuls
push
repnz
adc
and
mov
sarl
push
jo
std
jmp
push
jbe
mov
sub
or
cld
fcoml
mov
push
jl
out
sti
pop
pop
mov
xchg
mov
into
add
dec
lock
dec
adc
clc
sub
mov
jbe
ja
das
sub
cli
jl
sbb
xor
mov
or
mov
adc
xchg
cmpsb
pop
pop
aam
ret
or
xlat
rclb
sbb
enter
fisubs
test
mov
pop
jmp
int3
lahf
or
fnstsw
test
int
add
cmp
nop
shlb
shll
lret
inc
push
mov
jnp
ss
cmp
sbb
xlat
pop
adc
out
repz
cmp
jno
inc
bswap
stos
imull
add
jmp
notl
int
loopne
sub
scas
leave
in
imul
xchg
jp
pop
jnp
test
dec
fimull
cwtl
and
mov
push
mov
push
gs
gs
lds
es
jne
out
adc
popf
movsb
adc
out
out
loop
and
adc
mov
test
xor
jo
pop
imul
xor
pushf
add
pop
mov
testb
add
mov
push
dec
xchg
xchg
xchg
jae
pusha
rcrl
mov
test
push
cwtl
aas
cmc
shlb
mov
adc
cmp
lock
xchg
testb
jno
inc
cli
rorb
cmpsb
aas
movsl
mov
ss
add
int
loopne
jmp
cld
lret
lods
mov
mov
cmp
sub
fsubrl
je,pt
enter
das
je
fsts
cs
stos
push
ret
addr16
arpl
push
ret
leave
sbb
jo
fdivs
imul
jbe
andb
ja
inc
pop
adc
push
sar
sub
dec
out
mov
aaa
lods
jmp
test
dec
imul
push
std
or
lock
int3
fs
dec
pop
inc
adc
mov
fistl
xchg
cmp
add
aas
rcrb
imul
fnstcw
adcl
pop
fsubrl
andb
outsl
xor
out
sti
repnz
pop
int
push
out
adc
nopl
xchg
jns
lods
fidivrs
sub
popa
or
mov
jno
or
dec
jg
dec
adc
jge
testl
lock
push
nop
lea
jmp
lahf
sbb
outsl
pop
and
jo
sbb
jbe
in
fs
sub
mov
clc
sub
adc
or
xchg
jge
adc
std
push
js
dec
popa
mov
jns
xchg
notl
or
pushf
jle
push
and
mov
and
cmp
cld
mov
subl
sub
pop
test
sbb
adc
sub
data16
push
mov
push
loop
outsl
mov
pop
dec
inc
mov
jmp
stos
dec
mov
and
fisubrs
xlat
cmpsl
mul
test
mov
adc
inc
nop
insl
ss
pusha
pop
push
add
jge
ficomps
repnz
pop
cmpl
test
movsl
mov
xchg
cs
arpl
lock
or
jae
outsb
insl
cmpsl
xchg
xchg
mov
pop
sub
sub
fsubr
sbb
inc
xor
out
jo
in
sbb
cmc
xor
mov
jg
arpl
dec
mov
test
fs
adc
mov
fisttpl
movl
out
les
insl
inc
lods
jnp
dec
jg
inc
push
scas
test
jl
mov
insl
scas
push
jmp
and
out
mov
je
inc
aaa
and
lahf
subb
push
adcl
dec
push
lds
mov
pop
add
aad
sbb
fwait
bnd
stos
mov
cmp
enter
ret
insb
lods
sub
xchg
jb
stos
push
addr16
add
mov
and
jo
into
or
sub
mov
lock
or
and
js
les
dec
push
stos
pop
dec
ss
faddl
stos
push
scas
dec
sahf
ds
lahf
es
sub
fldenv
in
in
adc
adc
mov
popf
push
pop
or
pop
dec
push
movsb
outsl
movsb
les
ss
add
aam
xchg
sbb
pop
xchg
jl
leave
sahf
xchg
and
iret
pop
shlb
int3
lret
add
inc
sbb
leave
inc
imul
daa
sbb
psubw
cmpsb
xchg
gs
sub
xchg
jnp
test
ds
scas
das
mov
mov
fnstenv
js
call
dec
adc
mov
std
fs
pop
push
test
cmp
xor
daa
or
int
mov
jnp
mov
or
std
ret
lock
add
mov
mov
xchg
int3
dec
cmc
mov
add
cmp
cltd
shr
dec
es
push
cld
xor
je
sbb
ret
mov
lods
pop
ljmp
stc
adc
mov
hlt
cmp
inc
xchg
lahf
shlb
in
in
dec
adc
and
negl
xchg
add
xchg
dec
cmpsb
stos
insb
push
das
pop
andl
sbb
scas
inc
adc
pop
pop
insl
xchg
mov
stc
bound
fwait
mov
orb
fdivrs
and
cmp
xchg
fwait
mov
test
pushl
pop
js
sbb
add
pop
rolb
mov
test
xchg
adc
xchg
jo
cmc
pusha
outsb
rcll
je
and
mov
sbb
gs
pop
mov
movsl
ds
push
xor
and
jge
rcrb
test
out
scas
in
add
movsb
roll
imul
sub
lods
mov
or
adcb
cld
jnp
pusha
loopne
leave
sbb
xchg
lock
adc
outsl
mov
sub
js
adc
cwtl
orb
xchg
lods
mov
imul
outsl
gs
scas
cld
xchg
cmp
cmpsl
loop
mov
iret
div
and
pushf
loopne
loope
addr16
adc
mov
and
mov
stc
mov
rcll
inc
xorl
fisttpl
dec
dec
into
clc
xorb
mov
aaa
js
jb
sbb
jo
lahf
dec
lds
cmp
cs
iret
cld
inc
sbb
pop
sbb
cmpsl
pop
push
addr16
mov
sub
shrl
push
arpl
jmp
mov
add
imull
xchg
in
add
lock
mov
mov
xchg
inc
push
sbb
lret
xchg
add
repz
xor
mov
in
insl
sub
popf
cmpsl
push
mov
push
shlb
mov
xor
das
mov
pop
mov
pop
xchg
cmp
push
aas
adc
jecxz
add
xor
divl
cmc
or
sbb
jae
in
gs
enter
mov
js
add
adc
aad
insb
mov
push
cmc
mov
jnp
mov
imul
lret
data16
sbb
mov
mov
je
test
mov
bound
mov
jmp
mov
sub
dec
add
push
or
and
ds
aad
mov
lret
pushf
scas
mov
ret
aaa
pop
mov
sub
mov
mov
mov
push
xor
xchg
rcll
sbb
in
mov
imul
adc
cmp
jecxz
ret
bound
subl
jl
outsl
adc
inc
test
into
mov
je
sbb
pop
push
sub
in
pop
xchg
lahf
out
arpl
mov
xorb
hlt
insl
hlt
mov
pop
or
fcmovnb
fcomps
xor
cld
lock
jle
or
cmpsb
popa
out
dec
mov
and
mov
mov
call
inc
ficomps
mov
jl
loopne
lods
and
mov
scas
dec
xorl
subps
lea
test
repz
loope
movsl
sbb
ss
and
jge
sbb
movsl
fs
shlb
pslld
mov
test
insb
and
xor
push
or
sub
sub
stc
lcall
add
ljmp
mov
sbb
lcall
xchg
mov
inc
hlt
push
jnp
mov
mov
jno
xchg
sub
push
sarl
xchg
movsl
inc
in
popa
out
pushf
fs
adc
repnz
jae
jp
fcmovbe
leave
daa
push
xchg
hlt
ficomps
xchg
pop
in
subb
pusha
lret
enter
sub
mov
out
sub
iret
mov
inc
or
divb
add
clc
in
movsl
test
ret
stos
dec
xchg
in
push
adc
adc
pop
mov
push
cmp
out
mov
or
hlt
add
mov
add
int3
or
loopne
lods
cmc
fldl
movsb
xor
add
mov
sbb
mov
inc
mov
leave
lods
js
add
jo
pop
mov
inc
cmp
data16
jb
mov
inc
lods
xorb
push
stc
and
lock
dec
jl
and
mov
fcmovb
pop
test
in
in
hlt
std
sbb
push
outsl
adc
cmpsl
inc
daa
fbstp
out
out
jg
mov
test
outsb
mov
dec
insb
mov
or
cltd
test
lock
insb
fsubrl
sbb
mov
and
enter
dec
in
add
enter
ja
out
mov
push
jle,pt
cltd
test
cmp
call
or
push
lcall
sub
jb
mov
fs
movsl
repz
cmpsl
pop
push
sub
mov
xchg
movsb
int3
xor
aam
sbb
push
adc
std
daa
cmpsl
cs
popa
pop
sub
ror
or
bound
mov
repnz
test
test
xlat
inc
ja
pop
mov
incb
ja
cli
sbb
sbb
insl
jbe
xchg
pop
inc
jb
in
adc
mov
loopne
in
jl
pop
push
adcl
sar
ds
cli
xlat
push
jne
fcoml
sbb
jmp
push
repz
pop
les
sahf
or
shll
ds
pushf
sbb
sbb
ljmp
iret
dec
out
movsl
mov
ret
mov
cmp
fists
cli
lret
arpl
jo
gs
mov
stos
aam
xor
aas
pop
jns
push
aad
mov
push
jle
ja
inc
pop
rorb
push
adc
jo
loop
push
arpl
push
sti
test
push
scas
jb
test
popa
sbb
sti
fcoms
bound
mov
dec
ljmp
add
repnz
loopne
subb
subl
xor
lahf
xor
lds
loopne
pop
icebp
mov
ja
push
lods
icebp
push
jge
enter
cmp
sahf
jae
ds
mov
or
xchg
pop
jb
jmp
stos
inc
iret
adc
cmp
int
inc
xor
push
inc
push
adc
stos
outsb
fsubrs
mov
ja
int3
adc
movsl
jecxz
movsb
out
mov
scas
mov
jns
test
inc
dec
ljmp
xchg
mov
pop
loopne
jge
sub
lods
fildll
dec
popa
xlat
push
fnstenv
add
ja
scas
fisttps
cwtl
enter
and
add
add
fdivs
pop
inc
cwtl
mov
cli
xchg
xor
cmpb
jle
fbld
xchg
xchg
mov
in
je
pop
and
fdivl
or
mov
mov
adc
pusha
popf
and
sbb
pop
js
inc
cmp
pusha
inc
dec
inc
nop
pop
insb
lock
xchg
push
ja
data16
cwtl
cltd
cmp
jnp
and
xchg
cs
fimuls
jno
and
push
lds
mov
dec
and
push
ja
stos
inc
movsb
or
xchg
cmc
push
or
adc
inc
inc
mov
jl
mov
lods
jo
das
test
mov
test
jns
xor
inc
sbb
pushf
hlt
aam
sbb
int3
mov
push
in
pop
add
cmpsl
jno
jae
call
rcrb
push
mov
pop
adc
and
hlt
adc
pop
cmpsl
cmpsb
sub
pop
ljmp
and
adc
ss
mov
push
sub
sub
jae
sahf
cmp
add
adc
mov
xor
lds
icebp
and
call
jle
mov
int3
sbb
call
rol
push
ret
aaa
inc
xchg
dec
lret
call
inc
inc
push
cmp
cltd
jle
dec
cmp
cmc
leave
mov
mov
mov
jns
in
cwtl
xchg
stos
aaa
sub
or
loopne
xchg
leave
jmp
or
scas
lock
sub
incl
ljmp
outsb
mov
out
and
shll
add
fs
mov
push
out
mov
out
cs
pop
ljmp
dec
lret
mov
test
add
lcall
ret
jae
sti
loope
popf
imul
stos
jmp
push
jmp
xchg
pushf
mov
lret
jns
pop
lea
xchg
lahf
lret
fidivrl
xchg
sarl
ret
mov
jmp
or
icebp
inc
mov
orb
mov
dec
mov
int3
inc
bound
push
mov
xchg
jg
lock
xor
scas
jle
xchg
in
aam
mov
sub
in
push
out
pop
or
cmp
and
jg
call
adc
add
mov
add
bound
rcrl
inc
sahf
jle
insb
and
icebp
and
xor
movsb
sbb
into
enter
adc
or
pop
ret
mov
mov
shlb
roll
int3
mov
mull
orb
das
pop
push
push
loop
in
xlat
jno
cmp
jl
hlt
subl
cmp
cmp
fisttps
cmp
sub
push
popf
mov
or
sub
push
clc
add
push
lods
imull
jp
sbb
mov
jae
int
push
mov
lret
mov
or
call
mov
xor
xor
out
push
fcoml
sbb
mov
out
cmp
mov
das
ret
cs
fs
and
mov
repnz
test
movsb
ljmp
mov
sahf
add
adc
neg
movsl
shrb
aam
add
jae
fsubr
sbbl
cmpsb
jne
add
lods
jmp
xor
cmp
aam
push
dec
sbb
mov
cmpsb
inc
dec
mov
dec
add
std
xor
sbb
xor
ja
shll
xchg
xchg
dec
je
dec
imul
mov
jnp
xchg
movsb
fldt
inc
and
mov
es
mov
aam
sub
and
cs
pop
mov
cmc
xor
push
or
call
jp
in
mov
outsb
or
aam
addl
sub
and
and
cld
push
push
push
les
or
xlat
cld
lds
jnp
out
add
repnz
popf
int
push
sbb
aam
add
mov
pop
ja
je,pt
gs
push
push
sar
inc
pop
or
daa
data16
arpl
xor
or
out
loope
mov
aam
push
sub
mov
push
loopne
pop
mov
pop
mov
adc
sbb
mov
bndstx
stos
xchg
add
push
insb
outsl
add
and
mov
rorl
mov
dec
arpl
mov
out
rolb
xchg
and
cmpsl
push
out
xchg
mov
popa
xor
fsubs
inc
add
in
arpl
pop
jmp
insb
cltd
into
xchg
push
popa
shr
jecxz
cld
dec
lods
adc
xchg
jno
xchg
repnz
out
mov
add
lods
pop
aaa
popa
in
add
adc
pusha
sub
stos
mov
jg
movsl
jne
clc
dec
xchg
mov
mov
mov
leave
cs
sbb
or
mov
insb
imul
fnsave
add
pop
shl
fwait
sbb
adc
xor
int3
inc
lahf
and
xorb
sub
mov
pushf
in
lea
mov
js
push
test
push
sbb
in
mov
out
dec
in
mov
mov
movsl
repz
cs
or
xor
movsb
pop
inc
je
cwtl
xchg
pop
or
push
in
add
cmpsb
add
sbb
les
sahf
stos
sbb
ret
inc
cmpl
mov
adc
cmpxchg
pop
jbe
dec
xchg
mov
mov
jae
lret
xor
inc
aad
call
xlat
mov
int
mov
cltd
push
aad
jae
xchg
pop
shlb
lret
mov
sub
daa
mov
ds
xor
inc
fstpt
add
jne
mov
xchg
into
push
stc
test
daa
push
lods
lock
cmpsb
ja
ljmp
inc
mov
xchg
push
stos
xor
sbb
fdivs
insl
fidivrs
mov
mov
mov
mov
mov
jp
andb
out
mov
xchg
imul
out
cltd
add
jl
cwtl
adc
fldl
cmp
fbstp
xchg
les
lret
push
mov
cwtl
mov
or
dec
xchg
add
es
icebp
inc
test
pop
leave
inc
pop
lret
jge
cmc
lds
orb
test
andl
mov
lahf
in
xor
push
jb
notb
mov
xorb
cld
pop
and
push
insb
mov
cwtl
inc
sub
sbb
mov
or
aam
adc
mov
mov
dec
or
push
movsb
iret
loop
pop
push
push
stos
mov
lret
sbb
je
cmp
into
pusha
lret
sbb
jmp
or
inc
jge
inc
addb
dec
mov
scas
or
lods
xlat
loopne
popa
cld
daa
sahf
arpl
push
xchg
loope
xchg
jp
or
mov
outsb
pushf
in
mov
dec
aas
and
push
and
fcom
insl
loope
xor
inc
push
out
scas
push
or
mov
mov
and
lahf
push
adc
sub
and
arpl
xchg
in
jle
jecxz
or
stos
mov
jle
mov
and
pop
mov
gs
popa
fldl
rol
les
xchg
rolb
sahf
push
mov
and
push
daa
idivb
cwtl
push
cmc
rorb
rcll
add
leave
lret
inc
popa
sbb
and
jge
shlb
sub
xlat
pop
popf
rclb
adc
push
pop
pop
xor
xchg
mov
pop
cs
call
inc
lods
push
negl
mov
loopne
adcl
or
and
jg
sub
mov
push
push
pop
into
jbe
leave
mov
jno
fmull
cmpsl
inc
mov
lods
mov
mov
sbb
xchg
and
jecxz
cmp
mov
adc
pop
xchg
call
or
rclb
lods
dec
les
and
in
pop
xchg
lret
mov
xor
push
cmp
stos
imul
sbb
outsl
ljmp
or
cmp
fildll
adc
in
and
pop
testl
push
xor
iret
xor
dec
push
sahf
addb
lock
push
adc
in
or
enter
push
lret
sub
mov
add
call
dec
loopne,pn
sbb
mov
in
es
mov
in
fs
adc
loopne
lahf
neg
call
test
lea
mov
lcall
adc
loop
es
push
fwait
push
mov
sahf
loop
mov
sub
jl
ja
mov
and
sbb
xor
fdivrs
inc
test
cmp
push
sbb
lods
out
jno
movsb
movsb
clc
push
popa
lret
lahf
loope
fs
cmpl
lcall
dec
and
adc
aad
cmc
lds
or
lahf
out
fldcw
test
xor
loope
mov
add
pop
mull
in
add
pop
xchg
cmp
cli
das
repnz
adc
push
xchg
mov
pop
and
inc
test
mov
lcall
jl
jb
sbb
jmp
imul
or
xor
fildll
pop
cmp
cmpsb
pop
sub
fldenv
mov
dec
pusha
iret
mov
fcoms
stos
enter
sub
add
cltd
lock
sbb
mov
ss
sbb
pop
xchg
xchg
xchg
and
and
enter
sbb
pop
jo
mov
sub
adc
in
cli
sub
clc
mov
andb
or
sbbb
mov
adc
mov
add
aam
shl
mov
mov
cmp
ficompl
inc
das
dec
fs
pushf
sbb
leave
int3
and
add
enter
aas
outsl
and
dec
imul
and
mov
mov
daa
xchg
lcall
adc
cld
mov
in
mov
and
fldenv
test
pop
xlat
mov
test
jns
mov
xchg
mov
sbb
lcall
divl
lcall
cmp
jl
jg
lret
shl
popa
cwtl
mov
insb
jns
int3
xor
xor
arpl
sbb
cli
fisubrs
sbb
repz
sbb
adc
pushf
pop
inc
mov
inc
and
lock
outsb
mov
rclb
dec
mov
xor
cmpsb
inc
jmp
adc
pop
sub
fiadds
lods
imul
mov
nop
incb
jg
imul
lods
cmp
cmp
test
imul
sbb
xlat
arpl
jp
jne
xor
inc
adc
outsb
test
leave
jle
sbb
adc
sub
shrb
repz
cmp
xchg
std
cmp
pop
fisubrs
pop
repz
cmpb
repnz
cmp
push
adc
mov
adc
add
mov
inc
inc
lds
cltd
adc
mov
cmpsb
sub
shrl
pop
add
jb
dec
mov
outsl
int3
mov
cld
and
pop
xchg
sub
adc
shll
push
jo
inc
lea
push
in
pop
sbb
mov
mov
test
pop
and
stos
sti
stc
int
inc
lahf
out
inc
and
adc
mov
jno
xor
lret
into
lret
lods
sub
pop
mov
pop
rorb
sub
inc
stc
and
outsl
aaa
test
leave
xor
add
fsubs
xlat
push
scas
and
pop
int
mov
inc
and
add
dec
mov
mov
xchg
ss
ret
pop
cmpsl
pushf
loop
or
mov
clc
jmp
data16
and
push
jo
das
mov
cmovns
mov
inc
pop
mov
test
dec
and
sub
pop
jp
lods
lcall
mov
jo
pusha
test
mov
rol
ss
fiadds
cmp
mov
push
std
adc
mov
dec
cmp
repz
lcall
mov
push
repz
bound
push
xchg
cld
xchg
popa
jno
cwtl
shlb
gs
or
adc
fcoml
or
xor
aad
cmp
xchg
lds
jns
fwait
dec
xchg
les
xchg
cmpsl
mov
xor
xchg
mov
push
xchg
xor
insb
imul
stos
mov
xor
and
fimuls
pusha
fildll
addr16
aad
add
insb
pop
out
addr16
add
daa
cltd
lea
aad
and
xor
mov
mov
cld
stc
sbb
push
in
cmp
xor
jae
and
mov
pop
dec
fldl
jbe
pop
xchg
pusha
dec
push
mov
imull
mov
mov
adc
test
inc
mov
data16
cltd
orl
add
loope
push
sbb
xor
or
add
inc
cmp
pop
sub
xlat
lock
lock
xorb
cmp
mov
seta
notb
cltd
lds
pop
in
lea
sbb
notb
ja
and
test
push
int
jns
pop
sbb
push
pop
mov
mov
sahf
fwait
fs
mov
mov
into
pop
mov
xchg
out
imul
fiadds
mov
sahf
and
out
test
ret
jb
mov
pop
adc
fs
pushf
push
shlb
and
xchg
push
cmp
aam
lret
inc
lock
cli
lock
fmull
inc
xchg
push
mov
add
lea
fadds
jp
add
insl
push
fcmovne
xchg
or
adc
adc
div
dec
push
test
or
shrb
ja
movsb
mov
or
cmp
or
dec
in
lret
adc
mov
aaa
and
sub
add
adc
test
dec
scas
xor
rcl
jnp
add
loop
sbb
test
inc
cmc
icebp
inc
shll
scas
xlat
addr16
dec
outsb
cltd
mov
shlb
outsl
inc
les
cld
and
ret
dec
xor
imul
shll
std
outsl
shl
cmpsb
popf
into
or
lcall
xchg
ret
fucomip
xchg
lret
inc
push
add
mov
inc
cmp
or
packuswb
mov
inc
mov
mov
out
sbb
hlt
frstor
pusha
mov
add
shlb
and
frstor
in
mov
ret
and
outsb
xor
das
jne
jecxz
call
cmp
std
dec
imul
call
mov
pop
movsl
ljmp
and
pop
pop
movsl
jnp
aaa
pop
daa
inc
xor
or
mov
lods
lods
test
arpl
out
iret
xchg
jnp
dec
pop
dec
daa
dec
mov
dec
aaa
ds
loopne
in
xchg
jle
aam
cmp
jns
pop
mov
or
out
or
sbb
imul
shrb
insl
in
andl
icebp
aad
jl
mov
cmpsl
push
dec
xchg
cmpl
jbe
movsb
cltd
lahf
cmp
scas
fdivrp
xor
stos
outsl
int3
jl
xchg
lods
sahf
cltd
adc
or
or
repz
aad
jb
addr16
shrl
mov
stc
lods
mov
add
ljmp
dec
xchg
inc
ljmp
shrl
xchg
sub
in
ret
dec
push
in
dec
fdivs
xor
scas
cmc
push
pop
mov
out
in
jb
mov
mov
mov
lret
sub
je
pop
mov
push
fstps
mov
xchg
jnp
xor
pop
sub
loop
xchg
pop
mov
or
inc
into
test
movsb
adc
test
loope
push
inc
into
lcall
add
lods
xchg
movsl
les
stos
mov
cwtl
or
jge
jno
stc
inc
jbe
adc
or
sub
or
sti
mov
mov
pop
push
push
xchg
arpl
pop
jo
pushw
push
in
mov
jmp
stos
loopne
mov
cmc
lahf
xchg
repnz
imul
hlt
or
xchg
cmp
loop
mov
and
adc
or
fdivrs
loop
push
cmp
cmc
adc
ja
fstpl
test
add
insl
lret
ljmp
pushf
and
mov
push
xor
mov
jo
xchg
sti
xchg
xchg
clc
icebp
sub
clc
dec
push
mov
xchg
loopne
orb
mov
mov
xor
fcoms
fdivrl
mov
imul
test
daa
push
cmpsb
sub
inc
lods
nop
loop
addr16
inc
mov
cmc
adc
push
lcall
jae
repz
cmp
lea
push
xchg
push
mov
hlt
mov
sub
jmp
faddl
cs
adc
in
cmp
jp
pop
aaa
arpl
js
mov
xor
aaa
or
or
loop
dec
pop
imul
push
outsb
cmp
jbe
lock
mov
mov
inc
inc
inc
popa
mov
jne
dec
lock
ss
dec
jge
popa
pop
sbb
stc
cmpsb
mov
jne
gs
shl
mov
hlt
push
push
jns
xor
inc
or
jbe
cmp
xchg
sub
std
rcrl
mov
insb
xor
adc
xor
jo
adc
scas
ret
add
scas
adc
cmpsb
inc
cmp
mov
shr
xor
mov
dec
aad
sti
rcr
shrb
sahf
cld
mov
pop
ret
imul
xchg
aas
mov
add
repz
push
push
jp
mov
addr16
mov
sbb
mov
rclb
pop
bound
js
sbb
xchg
fcmove
shll
adc
sbb
mov
add
xor
int
mov
scas
rcrl
insl
out
xorl
xor
test
sbb
in
lret
xor
xor
pop
cltd
and
inc
push
mov
popf
mov
pop
xor
lret
and
xchg
inc
call
sbb
inc
inc
mov
cmp
adc
popa
or
sbb
shlb
xchg
ret
mov
setl
insl
ja
les
inc
outsl
sub
jne
inc
test
dec
jg
mov
mov
jle
pop
mov
lds
add
or
cmp
call
sub
dec
ficomps
push
pop
out
cltd
mov
sub
gs
psubw
stc
add
lods
iret
cmpsb
flds
outsb
lods
mov
xor
xchg
fwait
and
sbb
imul
push
lret
out
test
xchg
adc
sbb
mov
test
or
and
test
dec
aaa
add
bound
enter
lods
popf
sbbb
lahf
daa
pushf
arpl
fmul
jmp
mov
cs
mov
pushf
pushf
cmp
jmp
pop
dec
cmp
push
fbstp
lret
iret
insl
mov
sti
push
inc
inc
addr16
push
add
xchg
push
leave
rol
xchg
pop
sub
jo
push
xor
outsb
or
adc
sahf
les
push
js
xor
xor
js
cmp
icebp
xchg
cmp
js
int3
jmp
jne
cmc
mov
es
push
insl
fcomi
mov
xchg
cmpsl
jbe
mov
out
fcomps
sarl
sub
int
je
outsl
mov
mov
negb
push
dec
jae
jmp
xchg
or
imul
negb
sub
cmc
lahf
pop
icebp
cmp
stos
inc
mov
mov
out
jle
lea
test
test
je
je
and
and
call
inc
jg
push
imul
cmpsl
cwtl
xchg
aad
cmpsl
fnstsw
pop
pop
pusha
push
stos
movsb
dec
or
push
inc
xchg
js
xor
andb
stos
imul
in
imul
call
xchg
add
adc
mov
push
mov
nop
out
and
pop
push
and
roll
in
jne
test
xor
rep
mov
push
push
xchg
mov
dec
cmpsl
cmp
sub
xchg
jae
in
xor
sub
and
fwait
mov
mov
xor
enter
add
scas
popa
das
pop
lret
addl
push
mov
sahf
mov
data16
mov
fcoms
cmp
hlt
pop
js
out
outsl
imul
fcomip
sbb
inc
jb
jle
test
stc
pop
pop
fcmovnu
ss
xor
imul
pushf
js
lret
rcrb
rcrb
and
mov
cwtl
std
push
les
cmp
xor
sbb
rolb
and
sub
mov
jg
push
mov
cwtl
call
aam
mov
push
jae
inc
and
std
aaa
pop
stc
cmp
loopne
stos
jmp
fmull
pop
mov
ljmp
pop
lret
lea
rcrl
xchg
push
sbb
and
ret
daa
add
cld
pop
jne
adc
out
les
pop
or
jne
hlt
ss
ret
fwait
push
xchg
stc
push
push
lcall
jmp
adc
xchg
dec
dec
lods
xchg
sub
das
or
push
cld
enter
mov
das
mov
sbb
sub
stc
nop
movb
movsl
dec
insl
mov
scas
push
mov
leave
mov
pop
add
push
bnd
int
dec
push
inc
and
push
sub
sbb
inc
mov
adc
jno
sahf
jecxz
add
pop
ljmp
push
insl
dec
in
std
aas
or
sub
mov
sub
push
cmp
or
add
push
dec
sub
jle
xor
outsl
faddl
and
sbb
arpl
ja
cld
stos
and
jmp
jl
stos
push
data16
cld
mov
dec
push
div
imul
pop
adc
push
mov
dec
loop
and
push
test
and
mov
movsb
out
xchg
dec
mov
push
movsl
cmpl
push
cmp
mov
pop
cld
shlb
loope
mov
xor
inc
add
jle
fcoml
icebp
sub
ljmp
add
and
inc
cmp
pop
out
xchg
mov
inc
rclb
push
cwtl
in
repnz
push
add
andl
insl
movsb
mov
lret
add
outsl
cwtl
mov
into
cwtl
out
leave
lahf
xchg
sub
push
cmp
cmp
pop
ja
arpl
int3
test
mov
xor
cmp
imull
aas
add
lret
arpl
mov
ret
xor
lds
cmp
sqrtps
rclb
orl
or
fsubs
mov
jle
lcall
out
popf
es
jl
fmul
fiadds
stos
les
sub
jb
test
xchg
push
mov
shl
in
lahf
cmp
xlat
fcmovnb
xorl
jge
jne
ljmp
xlat
add
sbb
and
dec
aas
ret
lock
xchg
push
hlt
insl
test
je
js
adc
jecxz
jo
out
jge
gs
jnp
xchg
pop
dec
adc
lock
dec
xor
inc
mov
aam
roll
jns
jecxz
in
mov
or
outsl
icebp
xchg
into
mov
jecxz
es
jge
pop
adc
jecxz
aam
daa
inc
lahf
jecxz
dec
push
xchg
int
or
mov
mov
clc
and
insl
adc
mov
jmp
adc
sub
popa
sub
dec
mov
insl
jns
mov
cmp
push
test
es
int
adc
pop
dec
cld
xchg
mov
and
add
nop
gs
movsb
adc
fsubr
data16
cmp
and
ficompl
add
call
push
jne
into
incb
sub
mov
lock
dec
sahf
sub
and
negb
jo
dec
sti
in
sbb
jne
in
or
flds
jne
jne
pushf
lret
dec
jae
pop
movsl
frstor
popa
pop
jle
ficoml
test
stc
jne
jbe
inc
jg
pop
cmp
xchg
jbe
enter
and
sub
jg
cmp
xorl
push
lods
xchg
or
or
test
sbb
mov
sub
mov
mov
faddl
xor
jmp
pop
cmpsb
sub
sub
push
mov
push
pop
push
jp
rdtsc
xor
xor
outsb
add
sub
data16
jle
mov
adc
jl
fs
int
rol
fistl
adc
test
sub
xor
mov
cmp
jno
jbe
sbb
and
mov
mov
adc
out
adc
inc
enter
addr16
or
enter
stos
sub
adc
inc
test
inc
pop
call
popa
sbb
xor
push
andl
js
int
inc
je
xlat
push
lock
xor
jmp
inc
out
fstpt
addr16
rol
mov
testl
push
aas
adc
or
xchg
lret
cmp
cld
mov
dec
adc
call
test
push
in
sbb
and
adc
test
bound
xlat
jnp
push
xor
shl
jns
cltd
jb
addr16
shrb
std
jle
sbb
addl
gs
gs
hlt
nop
sbb
out
loope
cld
enter
mov
aaa
fstpt
adc
dec
addr16
int
jno
pop
dec
aad
sbb
fsubrs
in
pop
sbb
pop
fwait
out
hlt
mov
pop
xchg
mov
inc
scas
add
jbe
add
fnstcw
cs
test
popa
ds
call
sub
mov
mov
sbb
xchg
cltd
outsb
inc
xor
mov
dec
mov
aam
popa
push
or
or
adc
xor
mov
test
cmp
cmp
adc
sbb
mov
xor
mov
add
rcll
adc
bound
std
jecxz
xor
loop
xor
les
add
movb
cmpsb
xor
lods
shlb
push
inc
fcmovnbe
das
imul
jp
cmc
scas
or
or
aam
cmp
or
dec
popa
ret
cmp
mov
cld
push
mov
push
push
jg
fsts
jecxz
sbb
fsub
xchg
je
negl
add
out
jp
mov
jb,pn
hlt
mov
repnz
leave
ret
out
mov
lods
inc
inc
pop
mov
mov
or
push
sub
push
inc
gs
and
push
lock
pusha
dec
xorl
ljmp
test
xlat
push
lret
xchg
ret
adc
aam
hlt
sbb
imul
push
mov
mov
adc
fstps
sbb
stos
or
sbb
mov
xchg
jae
lret
cli
or
pop
jl
and
jno
inc
enter
pop
mov
ret
and
aas
and
hlt
fnstcw
push
daa
stc
fcoms
push
xor
fs
or
jmp
mov
xchg
push
aad
lea
xlat
sub
loopne
daa
xchg
sbb
jnp
or
fstps
inc
sbb
xor
mov
fsubs
aaa
fisubs
aam
cli
jmp
xor
xchg
sbb
mov
xor
stos
mov
xchg
fdivrp
fdiv
shlb
add
dec
lock
pushf
lock
rorl
cld
push
inc
aam
jmp
and
mov
nop
push
push
adc
sub
push
pop
faddl
jo
loopne
pop
pop
sub
lods
or
xchg
sahf
jmp
arpl
jne
cmpsb
xchg
sbb
sub
inc
cmp
loopne
pop
mov
stos
cwtl
add
scas
ret
fcompl
pop
int3
xchg
jl
arpl
xchg
mov
in
vpunpcklqdq
nop
lods
cmp
or
inc
fstpt
xor
pop
or
jns
mov
stos
lods
cmpb
aas
out
inc
sub
xchg
mov
xchg
insl
or
aam
adc
and
inc
cmp
mov
push
stc
scas
mov
inc
pop
imul
push
adc
dec
cmp
push
js
into
sbb
push
out
add
dec
xchg
or
lods
mov
scas
repz
adc
lods
xlat
push
dec
mov
inc
sbb
adc
push
mov
pop
rcll
jno
inc
addr16
xchg
xchg
mov
sar
shrb
mov
fistpl
dec
push
xchg
add
cld
sbb
dec
sub
shr
out
cwtl
inc
filds
arpl
into
cmp
inc
jo
outsb
loopne
or
pop
mov
jb
hlt
sub
jbe
mov
or
sbb
popf
dec
fnstenv
mov
testl
jae,pn
add
sbb
popa
mov
pop
pop
push
flds
scas
xor
mov
jns
inc
ret
push
nop
adc
gs
push
mov
xchg
ret
jmp
adc
xor
mov
dec
shrl
pop
and
jge
mov
push
sbb
jle
mov
xor
pop
push
push
push
shl
push
ffree
fildll
fadds
dec
jno
mov
out
fnstenv
add
and
pop
mov
add
cld
lds
jbe
loopne
mov
out
clc
xor
pop
inc
cmpsl
inc
aad
cmp
cmp
mov
inc
add
arpl
sub
push
pop
mov
cli
lcall
push
jge
int
mov
std
aam
or
aad
int
push
fmul
push
scas
ljmp
scas
lea
and
xor
cltd
jb
ror
lcall
pushw
push
jecxz
adc
jne
mov
popf
es
sbb
push
pushf
sar
mov
pusha
mov
wrmsr
jo
inc
insb
lds
std
das
adc
lock
inc
and
inc
sub
mov
pop
fcompl
scas
in
lods
dec
mov
enter
sbbb
cmp
stc
stos
pusha
lock
mov
mov
push
test
inc
outsl
ss
popf
adc
xor
sub
push
int
xor
scas
push
sarl
in
repz
addl
xor
mov
sub
imul
mov
arpl
push
xchg
cmp
aas
sub
stos
testb
insl
lods
xchg
pop
inc
or
rcll
stc
adc
bound
ja
pop
xchg
sbbb
sbbb
pop
test
push
mov
movsb
mov
ljmp
cmp
mov
ljmp
pusha
cmpsb
adc
or
clc
jge
jns
icebp
mov
fcmovb
outsl
push
add
addr16
add
icebp
xchg
mov
xchg
mov
dec
push
sbb
dec
xor
cltd
ljmp
icebp
test
xchg
in
mov
pop
sbb
das
inc
div
jl
aaa
in
cmp
pop
ret
pop
js
ret
repz
ss
jb
insl
jno
setg
cwtl
mov
fsubr
int3
stc
pop
rcrl
stc
cmpsb
nop
jb
das
inc
cmpsl
and
daa
out
repz
repz
fs
rol
cld
cmp
or
mov
adc
lret
mov
icebp
pop
adc
lcall
dec
aam
test
int
les
jge
sub
sahf
clc
add
adc
das
rcll
cmp
xor
push
shrb
dec
pop
shrb
data16
je
test
xchg
stos
loope
xchg
rolb
dec
ja
cmp
xchg
stos
arpl
jnp
add
std
push
mov
mov
xor
xchg
mov
mov
notl
or
sub
fwait
and
stos
mov
loopne
mov
mov
stos
repnz
mov
lcall
pusha
enter
es
mov
mov
pusha
dec
sub
dec
ret
cld
push
mov
mov
repz
shll
hlt
push
dec
and
pop
push
enter
lret
lahf
push
int
cmp
lea
inc
sub
adc
aad
sub
cmpsb
mov
adc
ret
je
je
aam
xchg
add
fmuls
dec
cmp
sub
scas
lds
mov
or
pushf
xchg
ret
push
js
adc
les
fwait
add
inc
inc
jae
inc
pop
mov
ja
movsb
push
movsl
mov
loopne
aas
pop
fistl
dec
jecxz
add
sbb
cld
pop
mov
iret
out
out
ds
jo
pop
mov
mov
lods
and
daa
repz
mov
push
push
hlt
mov
les
insb
repnz
xchg
fisttpl
movsb
negl
or
int3
push
std
shl
ret
jp
xchg
xor
and
test
test
mov
jbe
inc
aam
inc
inc
nop
out
aas
insl
sbb
gs
push
inc
add
aad
insb
cli
cmp
roll
mov
aad
mov
cmp
sub
cmc
adc
test
or
mov
and
scas
add
xchg
push
xchg
cwtl
imul
cmc
mov
clc
cs
sar
and
std
cld
mov
popa
insl
inc
and
addr16
xor
cmc
lea
xchg
dec
out
jns
mov
fs
and
inc
ret
out
popa
pushaw
sub
imull
sbb
lock
cmp
or
add
xchg
lods
test
inc
xchg
adc
call
push
dec
fwait
mov
or
add
cmpsb
mov
divl
scas
idiv
imul
lods
mov
pop
pop
inc
fs
pop
mov
xor
add
jae
inc
xor
test
xchg
add
and
adc
mov
in
mov
fbstp
mov
cmp
jae
or
mov
xchg
jle
jecxz
inc
shlb
test
xchg
icebp
pop
stos
hlt
ret
cmpsl
push
imul
roll
insb
push
das
dec
popa
and
and
sbb
cwtl
cs
std
adc
loopne
pop
adc
arpl
sti
cmp
mov
push
mov
ss
inc
sbb
in
cmp
clc
dec
inc
popf
ficompl
cwtl
ljmp
loope
mov
dec
daa
js
mov
push
fistpll
out
arpl
lretw
popf
xchg
mov
cmpsb
xor
push
pusha
lea
shll
xchg
push
out
jns
xchg
dec
xchg
pop
sub
jns
cmpsb
scas
xchg
scas
js
lret
sub
cltd
negl
jmp
clc
clc
negb
jmp
cmpsl
into
fsubs
ret
ficoms
jno
mov
sub
pushf
xor
sub
xchg
push
aas
mov
jle
bound
lds
jg
daa
pop
dec
mov
leave
jae
push
and
jns
xlat
in
fildll
in
lods
stc
shr
in
aam
popf
dec
lds
imul
mov
or
xchg
inc
ret
push
inc
lods
jae
adc
cmp
mov
cmp
or
and
icebp
popf
jo
cmp
in
roll
test
clc
add
mov
pop
mov
mov
test
xor
mov
cmp
insl
sbb
inc
dec
outsl
test
inc
ret
mov
cmpl
lods
sbb
jnp
dec
mov
movsl
fwait
repz
push
and
cmp
xchg
jle
push
adc
shlb
int3
ds
adcb
gs
cmp
pop
add
mov
aad
loope
push
ss
test
sbb
mov
cmp
lods
aad
fs
adc
dec
or
cmpl
jb
push
mov
cld
lcall
cmpsl
adc
mov
les
movsl
icebp
fstp
sub
imul
dec
push
adc
mov
jnp
outsl
pop
cmpsl
test
std
jp
mov
push
nop
ffreep
aas
add
adc
fisubl
mov
and
out
fidivrl
mov
push
lcall
dec
scas
dec
xchg
cmp
cmp
fwait
jl,pn
scas
xchg
push
pop
in
adc
adc
das
add
pop
data16
insl
aas
insb
cs
lgs
inc
daa
cs
mov
ss
sub
xor
mov
gs
ret
fcmove
mov
xchg
popa
mov
ljmp
pop
cwtl
cltd
ss
add
subl
or
xchg
lret
pop
mul
or
sti
mov
gs
xorb
dec
lock
xchg
sbb
and
stc
pop
pusha
or
xchg
xlat
nop
adcl
sbb
cwtl
es
fisttpll
aam
adc
adc
out
push
loop
push
je
dec
sub
inc
movsl
xchg
mov
and
adc
insb
inc
mov
cmp
ss
orl
mov
and
adc
pop
into
test
dec
mov
dec
bound
scas
mov
js
adc
push
jmp
std
mov
push
mov
dec
cltd
jb
call
push
push
ret
fsubs
insl
popf
lret
aaa
rclb
sub
mov
pop
lock
and
lret
div
or
icebp
pop
mov
mov
cmc
adc
movsl
cmp
stos
in
dec
scas
mov
ljmp
add
test
aad
lcall
sbb
loop
mov
inc
jae
jb
jne
jp
aam
fs
int3
test
insl
mov
out
jnp,pt
xchg
je
push
cmpsl
cmp
mov
iret
orl
cmp
pop
sub
or
lret
lds
test
add
lods
aad
daa
mov
out
jmp
xchg
mov
sub
rolb
aad
xchg
jp
cmp
cmp
stos
add
inc
xor
shll
aas
lahf
cmp
push
adc
outsl
sub
xchg
sub
insb
push
hlt
mov
repnz
test
repnz
jge
xor
ds
lods
sub
push
dec
fsubs
fs
inc
inc
enter
repnz
fldt
xchg
cmc
xchg
jbe
ret
sbbl
mov
dec
xor
je
jl
repnz
into
pop
pop
sbb
jmp
aaa
lahf
inc
cmp
dec
and
insb
xchg
negb
movsb
leave
inc
mov
stc
pop
xchg
dec
jnp
insl
pop
jnp
inc
cld
mov
aas
or
mov
mov
mov
in
mov
lret
outsb
sbb
push
xchg
xor
sbb
stos
shlb
mov
mov
repnz
int
insb
rol
pop
push
in
jns
imul
loopne
cmp
inc
cmpsb
add
inc
cmp
xchg
xchg
dec
jo
hlt
nop
push
inc
and
arpl
add
xor
insb
inc
in
aam
push
push
pusha
popf
mov
mov
in
xor
in
fildll
aad
add
and
bndldx
test
jmp
inc
cltd
fsubrp
icebp
mov
dec
ficompl
jp
mov
stos
push
aaa
jl
orb
or
mov
dec
cmp
imul
adc
call
daa
inc
mov
pop
push
inc
js
aas
dec
inc
cmpb
cltd
outsb
sbb
hlt
out
mov
mov
sub
cmc
xchg
xorl
inc
inc
jnp
aam
mov
mov
clc
or
lock
ror
and
fdivl
sub
jne
pop
lods
ja
pop
cmp
push
xchg
rolb
or
ljmp
xchg
test
lds
push
ds
pop
movsl
fs
mov
or
and
add
fucomp
jp
fnstcw
test
add
test
jne
or
std
lea
outsl
fwait
or
pop
out
or
and
divl
xor
bound
cmpsl
test
jb
mov
push
clc
lds
fadds
sbb
push
cmp
in
push
mov
adc
fdiv
cld
xchg
mov
and
inc
inc
push
mov
push
sub
adc
fldl
add
ljmp
inc
call
cmc
mov
push
ja
or
xchg
icebp
sub
js
in
push
jbe
lea
pushf
rcr
push
sahf
rorl
imul
iret
fst
dec
bound
enter
repz
jmp
mov
scas
adc
mov
cmp
cmpsb
pop
out
mov
push
nop
ljmp
dec
xchg
mov
loop
xchg
aad
lret
fwait
int3
push
stos
cmpsl
cmc
roll
push
and
sbb
push
loopne
andl
test
ret
insl
fwait
jmp
jne
imul
or
jae
xchg
rclb
out
sub
out
fbld
es
out
aaa
jo
mov
pop
jl
adc
rcrl
shrl
call
dec
mov
ds
in
inc
icebp
les
les
or
jecxz
adc
negl
xchg
cltd
and
push
mov
dec
push
test
ljmp
sbb
or
scas
scas
fadds
hlt
jno
lods
mov
test
jo
and
aaa
and
fistps
flds
hlt
dec
xor
mov
mov
pop
or
lds
pop
mov
pop
sub
and
cltd
cltd
or
mov
or
xor
pusha
mov
aam
push
pop
xor
sub
lods
xchg
scas
popf
cmpsb
idivb
sub
data16
xchg
js
fiadds
aad
jno
mov
mov
pop
cmpsb
push
pushf
xlat
sbb
lret
pushf
stos
shlb
mov
sahf
ja
mov
xor
cmp
fs
mov
lcall
and
inc
lods
nop
popf
sbbl
sub
mov
fiadds
das
cmpsl
xchg
sti
lret
sti
pop
aas
inc
jnp
insb
outsb
out
ja
pop
fimull
into
dec
mov
out
fs
push
in
into
and
xchg
xor
fsubs
mov
fistpl
cmpsl
lds
lcall
dec
std
push
sti
into
mov
lods
mov
and
fisttpll
push
mov
imul
mov
movsl
mov
aam
daa
test
push
inc
sahf
cmp
xlat
xchg
pop
adc
adc
pop
aas
stos
push
push
addr16
cmpsb
mov
jg
cmp
sti
dec
jb
fs
sahf
es
xchg
adc
adc
xchg
push
outsb
cltd
sub
inc
out
in
xor
insb
fldl
lods
hlt
ret
test
xor
or
lods
push
add
cmp
inc
lahf
and
cmp
daa
mov
mov
mov
jae
dec
inc
lods
xchg
sbb
loopne
mov
test
mov
scas
inc
and
push
cmp
cld
popa
push
test
orl
mov
mov
pop
pushl
mov
xchg
repz
mov
jne
or
lret
out
jmp
enter
insl
xchg
cs
cltd
mov
xor
cmp
or
repz
jbe
lea
std
outsb
adc
push
push
mov
and
outsl
xor
or
jne
mov
rcr
mov
or
je
pop
sahf
scas
pop
dec
pop
shrl
nop
in
or
sbb
inc
call
jnp
push
xchg
add
jbe
mov
sbb
test
pop
cmp
jbe
test
mov
cmp
in
fsubr
and
mov
and
rorl
pop
dec
pop
sbb
jae
sub
push
testb
lret
in
or
popa
push
adc
sbb
cmpsl
rcrb
bound
add
sub
scas
out
mov
pop
xor
fistpll
xor
rcrl
into
stc
push
xchg
loope
pop
sar
lea
repz
lock
int
xlat
pop
sahf
sub
xchg
mov
jp
sarl
jnp
push
lahf
mov
std
aas
scas
test
scas
arpl
push
adc
movb
mov
js
dec
dec
xchg
test
xchg
std
sbb
daa
mov
jae
test
aad
sbb
scas
insb
aaa
pop
cmpsb
dec
dec
xorb
fwait
pop
xorl
mov
push
je
push
adc
test
sub
jl
jmp
cmpsl
mov
jg
pusha
aad
arpl
xchg
adc
jl
push
mov
sub
scas
push
repz
inc
aad
aam
pop
shlb
inc
adc
ss
xchg
mov
cwtl
push
lods
rcrl
scas
enter
enter
add
insl
mov
push
mov
lock
and
lret
in
cmp
xchg
call
mov
jg
popa
aaa
xchg
or
xchg
jecxz
fidivrs
in
test
xchg
pushl
mov
push
or
cmp
popa
jnp
adc
sbbl
push
push
repz
imul
stos
inc
mov
loop
mov
push
pop
pushf
mov
ret
int3
jae
sub
mul
mov
and
scas
mov
sti
dec
push
arpl
out
cld
loop
pop
cmp
push
test
pop
jge
lahf
outsb
sti
ffreep
xor
testb
scas
pop
fcomps
add
leave
sub
jnp
jge
dec
cmpsb
mov
xor
out
mov
movsb
xchg
inc
mov
jns
mov
adc
stos
pop
rorl
xchg
xchg
loopne
aad
jne
cmp
aam
and
or
fistps
shrb
mov
lods
and
test
notb
dec
arpl
leave
cmc
sub
push
add
fildl
in
out
stc
xlat
inc
inc
sarl
imul
jno
pop
jle
test
ljmp
int3
sbb
cmc
mov
push
push
mov
mov
pop
or
popf
jle
xchg
jbe
jl
xchg
adc
das
cmpsl
push
add
leave
cmp
movl
mov
stos
jne
pusha
mov
cmpsl
xchg
cmpsl
and
pop
dec
ljmp
or
das
jo
popf
push
add
test
enter
insb
xchg
adc
pop
sbb
xchg
in
sub
movsb
add
mov
pop
sbb
lret
std
mov
insl
dec
xor
rcll
xlat
jmp
mov
imul
faddl
cli
mov
dec
jae
jp
mov
outsl
rolb
adc
bnd
mov
mov
mov
xor
lods
jg
cmc
xchg
push
dec
lds
add
out
and
dec
repz
arpl
shll
cld
cmp
enter
and
les
jnp
cmp
adc
sbb
int
test
test
dec
arpl
shll
pop
or
mov
fbstp
addr16
shl
xchg
sub
inc
xchg
inc
push
movsl
dec
add
push
sar
jmp
sub
cmc
mov
movsl
hlt
je
into
push
sbb
adc
dec
push
push
je
lcall
jbe
imulb
xor
xor
fldcw
inc
push
aam
idivb
ljmp
shll
aad
enter
divb
pop
mov
out
cmp
lret
in
fadds
in
sub
jl
adc
push
gs
mov
or
cmp
or
jne
lahf
add
popa
lahf
pop
sub
push
lods
lock
lds
into
mov
mov
ret
shl
test
popf
adc
cs
subb
outsl
std
sub
sub
pop
clc
mov
movsl
js
ljmp
dec
inc
incb
push
lods
ds
dec
xchg
lahf
adc
pop
lahf
sub
and
and
inc
and
xchg
mov
aas
jns
fstp
cld
xchg
std
pop
into
sahf
pop
push
stc
push
cmpl
mov
adc
sar
jge
pop
dec
stos
mov
adc
add
outsb
js
lds
insb
mov
and
mov
xor
lods
sub
repz
mov
jmp
xor
xchg
lods
and
rorl
fisubs
pop
sbb
decl
mov
pop
fimull
test
push
mov
orl
lea
addr16
xor
test
std
ss
fdivrl
jge
imul
push
mov
mov
call
adc
data16
dec
adcb
sarb
xchg
lock
inc
std
stos
pop
dec
xchg
or
outsl
repz
mov
test
arpl
aad
mov
jle
and
and
sbb
iret
add
cwtl
in
mov
int3
adc
sub
lret
xor
loopne,pn
xor
adc
je
sbb
fsubr
jns
mov
sbb
pop
pop
push
daa
dec
cmp
adc
fldl
jo
xchg
std
push
pushf
loop
jne
jbe
adc
xchg
out
nop
pop
psrld
lods
inc
push
or
push
fsubp
adc
in
sub
add
sbb
fldl
xchg
loopne
addr16
leave
aaa
outsl
out
xchg
mov
sti
or
dec
cs
hlt
fs
out
pop
cmpsl
das
popf
cmc
push
xchg
or
cwtl
push
ss
mov
jne
dec
fistpl
push
xlat
ss
mov
sbb
xor
bound
add
cmc
idivl
sbb
fisubrs
inc
pop
jle
mov
js
xor
loopne
dec
sub
fsts
pop
mov
ret
xchg
stc
push
pop
xchg
scas
inc
xchg
sub
movsl
sub
mov
leave
xchg
std
sub
cmp
in
push
movsl
and
popf
jmp
ss
sahf
scas
mov
call
rclb
insb
sbb
sahf
inc
sub
aad
mov
cld
maskmovq
add
inc
sub
jnp
and
inc
dec
cmp
xchg
mov
aad
lret
aaa
pmulhw
into
in
ja
leave
addl
dec
lret
outsb
push
xchg
cld
inc
push
hlt
fs
pusha
xchg
das
xor
cld
mov
int
stos
cmc
out
movsb
xorl
sub
xchg
push
sbb
fs
cmc
add
and
mov
mov
pop
movsl
sub
lock
fistl
dec
sub
xchg
xor
push
je
or
test
gs
sbb
or
sahf
push
and
sbb
xchg
lods
inc
xchg
shlb
test
mov
xor
xor
ror
or
bnd
stc
push
mov
adc
jno
in
mov
add
or
inc
fstl
mov
loopne
aas
sarl
pusha
inc
or
add
xor
adc
and
xchg
jmp
xor
fsub
imul
scas
imul
lods
dec
push
inc
lret
push
cmp
imul
dec
andl
enter
in
pop
daa
cmc
push
and
xchg
call
push
mov
lahf
lea
xor
arpl
pop
popf
into
loopne
jg
jae
mov
ljmp
sti
adc
lcall
pusha
movsl
mov
idivb
fs
push
mov
mov
mov
lea
cli
lods
lock
mov
and
pop
inc
mov
pop
shlb
adc
inc
pushf
ret
or
push
sbb
sub
xchg
loopne
mov
adc
xor
adc
jno
cmpsl
mov
mov
insl
mov
sbb
push
mov
sub
xlat
aad
enter
test
add
and
rcrl
out
dec
jnp
or
jae
enter
cli
in
dec
pop
add
jp
insb
daa
push
and
inc
cmc
xchg
repnz
xor
jle
icebp
push
lahf
int3
jae
dec
int
aam
insl
dec
ds
jno
scas
push
cmc
inc
movsl
rorb
leave
and
jmp
sbb
and
sbb
out
enter
jle
sbb
inc
xchg
lcall
inc
sub
mov
mov
dec
addb
ud2
lds
shrl
sbb
cmpsl
sbbl
daa
mov
xor
lret
add
int3
iret
outsl
and
cwtl
lcall
add
mov
in
pop
sbb
lahf
push
dec
hlt
nop
das
test
icebp
nop
loop
xchg
cmpsb
int
adc
add
add
xor
pop
stos
loope
and
adc
xchg
push
pop
pop
in
ret
mov
mov
adc
mov
sarl
fisubrl
dec
pop
inc
aam
xor
push
xchg
jmp
mov
jne
aam
hlt
push
out
adc
xor
ja
iret
bound
jnp
mov
xchg
or
movsl
sbb
jl
data16
jecxz
inc
popf
punpcklwd
lock
es
rolb
repz
push
push
cwtl
inc
sahf
inc
cmp
hlt
sub
inc
lods
pop
xchg
lods
sub
pop
mov
js
lcall
push
rorl
mov
sahf
lret
loop
adc
xchg
fstpt
shll
push
pop
fsubrl
test
cwtl
mov
aaa
mov
cs
jb
rcll
mov
push
push
xlat
inc
cs
ficoms
dec
shr
je
add
lahf
rcll
pushf
mov
dec
mov
mov
lret
repnz
fistpll
pop
les
pop
subb
pop
repz
cmpsb
mov
loopne
cmp
int3
ds
adc
push
xchg
mov
xchg
push
cli
push
cmp
leave
subb
hlt
sub
stc
mov
mov
mov
popf
lret
jl
jae
es
xor
movsb
xor
jbe
jns
sub
dec
mov
je
mov
jl
xchg
enter
fs
fimull
jle
cli
data16
cmp
lods
filds
push
cwtl
imul
pop
fincstp
mov
aas
mov
cltd
loopne
xchg
push
dec
lea
in
lret
xchg
cmp
imul
sbb
imul
and
mov
or
icebp
push
jo
loope
adc
mov
mov
pop
jmp
shll
ret
imul
adc
out
aam
and
sub
roll
mov
inc
adc
cmp
cmp
popa
or
pusha
jns
jne
lods
lret
jno
mulb
pop
mov
pop
inc
das
jo
push
daa
inc
and
outsl
das
mov
cs
dec
mov
xor
jne
sub
repz
mov
push
outsl
jmp
pop
xchg
sub
cmpsb
dec
mov
mov
rcrb
jno
inc
cmp
jb
into
int3
mov
iret
imul
fcos
inc
mov
dec
and
push
sbb
rorb
fldenv
hlt
adc
pop
lahf
mov
xlat
sub
sbb
and
in
and
sub
push
cmpsb
pusha
daa
adc
sbb
xor
scas
xor
lret
sahf
bound
push
push
mov
das
test
mov
or
sahf
inc
into
dec
leave
pop
ss
add
or
stc
adc
insb
jge
cmp
mov
pusha
stos
mov
subb
shrl
mov
iret
jg
in
fwait
push
dec
js
roll
mov
cmp
jnp
mov
pop
lods
xor
mov
insl
inc
jmp
and
jmp
push
hlt
push
sub
arpl
jl
adc
sbb
xchg
mov
divb
add
mov
push
jp
jno
inc
imul
inc
sub
out
shrb
inc
int
negl
pop
ja
cmp
sub
sub
mov
rcll
mov
aad
push
stos
jo
ret
rcrb
clc
clc
adc
xor
lea
insb
sub
inc
inc
loopne
jmp
fnstcw
xchg
or
stc
pop
ffreep
dec
fwait
insb
push
inc
jbe
or
or
jo
xchg
adc
aam
jne
sub
jns
xor
cmp
mov
xlat
mov
cmc
mov
adc
jle
xchg
and
push
sub
sbb
roll
jne
cmp
popf
rorl
pusha
pop
adc
mov
scas
mov
shl
pop
and
mov
mov
call
cld
cmp
mov
testb
mov
cld
pushf
sbb
cwtl
pop
stos
inc
mov
leave
out
addr16
loopne
xchg
pop
ret
imul
lock
sarl
ret
dec
scas
sbb
pop
pop
pusha
jb
gs
cmp
mov
dec
adc
mull
pop
out
fists
jns
cld
nop
push
in
idiv
mov
mov
push
je
aas
insl
fsub
xchg
jbe
aas
add
arpl
jo
mov
xchg
push
lods
loope
dec
adc
push
inc
mov
pop
fstpl
push
pop
cmp
repz
ret
stos
rclb
enter
cmpsl
in
add
test
hlt
or
xchg
fldcw
inc
outsl
aad
mov
pushf
or
push
aas
push
cmp
sub
sub
aas
pop
lock
xchg
rcrb
fdivs
repnz
mov
pop
or
fwait
push
daa
loope
repz
lahf
pop
lods
test
lret
or
add
add
and
sub
mov
shrb
or
mov
mov
xchg
sahf
sub
les
push
dec
fstps
lock
out
out
sub
fbstp
sub
sahf
fcmovb
movsb
dec
pop
out
xchg
enter
ret
inc
adc
pushf
fstps
movsb
jmp
mov
pushf
xor
rolb
aas
pop
push
lods
ret
push
cmp
mov
mov
rorl
cmp
sbb
fildll
ss
pusha
mov
jmp
ja
cmp
out
cmpsl
dec
and
ljmp
dec
outsl
jae
jmp
jnp
jno
jne
mov
bound
outsl
mov
jne
cmp
or
mov
inc
jmp
cld
inc
push
inc
lods
int
sub
subb
sbb
pop
jo
and
test
mov
jge
xor
jl
lea
and
out
push
sub
pop
jp
lea
pop
mov
pop
dec
adc
out
and
push
inc
and
add
mov
mov
jp
inc
mov
sub
sti
dec
push
in
inc
out
pusha
pop
xor
ss
sti
js
push
cmc
adc
sub
and
test
jge
lahf
mov
push
add
push
pop
inc
int
add
or
mov
push
ljmp
inc
sbb
js
lcall
jb
rcr
ja
mov
or
fadds
mov
jmp
test
fistpl
xor
test
push
lock
les
inc
sub
pop
es
cmpsb
lea
add
test
push
push
mov
sub
ss
ffreep
jmp
andl
inc
mov
mov
adc
out
setle
ja
dec
adc
lcall
int3
adc
test
add
cmp
pop
arpl
mov
jmp
pop
xchg
in
pop
pop
xor
aas
jns
push
pop
fisttpl
pop
mov
and
lahf
pop
fadd
repz
mov
outsl
add
dec
lahf
movsl
enter
inc
push
mov
movsl
jb
mov
pop
lahf
rolb
jno
loope
bound
dec
mov
or
fwait
divl
jmp
push
xor
fsubs
dec
lcall
fwait
wrmsr
jecxz
ljmp
repz
and
shr
xlat
outsb
inc
mov
lret
xor
pop
leave
fisubl
jp
lahf
dec
inc
jo
adc
dec
cmp
scas
push
call
cmpsb
or
xor
test
push
outsb
mov
les
insl
shlb
scas
js
add
in
sbb
lret
fdivl
jbe
popa
jg
icebp
or
xchg
ret
pushf
ret
xchg
mov
shr
punpckhdq
jne
leave
mov
stos
jp
mov
push
aam
rorb
push
or
test
ret
insl
arpl
push
xchg
jnp
sbb
xor
push
fsubl
cmpsb
daa
subb
mov
loope
jb
xor
into
sbb
ficompl
imul
ljmp
sarl
stos
or
mov
inc
sahf
and
cmp
or
sbb
cs
aam
dec
pop
pop
lds
xor
sub
imul
push
imul
mov
mov
jle
add
lret
mov
fsubr
loope
push
fbstp
lds
fnstcw
push
cmpsb
lods
sbb
in
push
xchg
adc
xor
push
sub
jbe
out
adcb
loop
mov
mov
xchg
loop
fwait
xor
into
aam
stos
or
shlb
jae
imul
adc
fildl
pop
and
daa
pop
lea
or
sbb
mov
mov
cld
adc
sub
xor
dec
in
pop
ret
pop
out
jne
enter
jp
ss
je
jmp
out
inc
adc
ljmp
mov
clc
and
push
outsl
enter
sti
cwtl
enter
xor
dec
pop
insl
mov
das
cs
adc
dec
mov
int3
add
data16
mov
out
stos
inc
lea
add
cmc
pushf
inc
mov
out
xlat
orb
jecxz
cmp
lahf
mov
pop
and
loopne
sub
mov
cltd
arpl
out
inc
iret
push
clc
mov
jbe
pop
dec
jp
outsb
sahf
in
add
xor
dec
notb
dec
push
mov
xchg
mov
dec
cmpsb
and
push
push
test
and
pop
cmp
cmp
outsl
popf
enter
inc
lret
mov
fdivrs
jg
loope
and
and
xor
jge
shl
cmpl
adc
test
in
loopne
xchg
mov
in
xorb
push
test
jecxz
jp
ss
jg
out
vpcmpgtw
push
ja
stc
addr16
xchg
and
test
inc
or
push
mov
pop
pop
pop
outsb
gs
xor
xchg
subl
cmp
insb
sti
add
lock
fdivl
roll
pop
fadds
jle
addb
cmp
sahf
loop
pop
mov
fucomip
dec
aas
sub
aas
cwtl
les
aas
rolb
insl
mov
and
into
push
insb
inc
fldcw
mov
clc
hlt
xchg
rcll
es
ds
push
inc
jg
mov
hlt
push
mov
and
sub
xor
sahf
ret
mov
call
pop
jmp
repnz
and
xchg
jmp
inc
jb
or
push
pop
and
add
add
jle
jmp
clc
or
sahf
mov
dec
icebp
push
adc
stos
xlat
je
mov
ja
and
popl
cmpsl
loopne
les
mov
std
or
push
mov
stc
jle
mov
loope
and
add
or
xor
add
dec
ds
test
add
xor
movsl
sbb
xchg
fbstp
lods
pop
add
incb
bound
cli
jge
mov
icebp
in
pushf
nop
getsec
cmpsb
pop
pop
notl
dec
mov
dec
sti
push
enter
lahf
push
push
loopne
aas
mov
sarl
pop
mov
push
cwtl
test
into
adc
testl
or
dec
ja
rolb
xlat
xor
inc
jle
jbe
mov
jg
in
dec
sbb
push
sub
lods
ffreep
mov
adc
mov
fwait
scas
mov
rclb
js
and
add
repz
lcall
push
repz
out
insl
std
add
imul
out
push
push
mov
jecxz
stc
mov
jb
jmp
imul
es
mov
pop
jg
orl
nop
adc
stos
pop
inc
das
xor
lret
nop
mov
add
dec
jge
popa
inc
mov
dec
add
dec
mov
cltd
fstpl
or
fs
push
scas
fmuls
push
mov
popf
xor
mov
jb
pop
inc
cmp
insb
sbb
jne
fmull
hlt
test
xchg
jbe
or
push
mov
push
pop
xorl
iret
sti
shll
jo
mov
push
sbb
xchg
xor
stos
jmp
xorb
dec
push
mov
stos
pop
push
lods
jle
jle
fisttpll
mov
push
out
dec
cmpsl
sahf
lods
ss
xor
imul
rcrb
aad
shll
fcoml
xor
dec
add
and
push
or
mov
cmp
push
es
sbb
cmp
jmp
filds
cld
xchg
outsl
jge
dec
bound
stos
cwtl
add
cmpsl
lret
jbe
pop
hlt
pop
jbe
sub
mov
mov
call
test
ja
sahf
scas
sahf
sbb
fcomi
and
mov
fbld
mov
int
rclb
fists
aaa
aas
inc
sarl
or
push
xchg
lea
stos
pop
jmp
pop
xor
push
test
push
orl
adc
popa
xchg
inc
or
cli
cmp
pop
inc
cmp
jne
inc
inc
test
std
push
lret
lahf
push
cmc
pop
cwtl
or
fldt
pop
mov
iret
mov
fistpll
cmp
xlat
adc
aad
fcoms
and
cltd
fnsave
mov
fimull
fs
call
jbe
or
enter
fsubl
arpl
rorb
movsb
cmp
call
add
lock
dec
out
or
pop
mov
ja
lock
jle
or
mov
push
jae
fisubrs
xor
aad
sarb
mov
fisttps
lret
sbb
or
jb
xchg
inc
cmpsl
sti
add
dec
jno
stos
or
rclb
ret
push
add
mov
arpl
xchg
aam
mov
dec
cmp
fiaddl
js
scas
push
mov
imul
aam
pop
gs
cmpsb
dec
pop
fwait
das
inc
aad
pop
ficoms
inc
inc
cs
sub
adc
lock
add
add
push
push
jne
sbb
lahf
push
mov
lods
test
or
mov
ss
sub
pop
lods
fbld
insl
jb
hlt
int
imul
cld
push
or
sbb
mov
insl
jnp
addr16
scas
faddl
mov
iret
push
add
cli
cmp
in
lret
sbb
sbb
add
lods
cwtl
sub
or
push
push
das
hlt
xchg
sub
mov
insl
in
outsl
mov
imul
js
push
dec
or
mov
xchg
ss
sbb
nop
cltd
aad
and
push
cmp
lret
adcb
outsb
pop
mov
add
mov
ljmp
ja
sbb
mov
in
sub
push
cmp
mov
lds
xchg
sti
sub
inc
mov
arpl
pusha
xor
sub
mov
stos
xor
or
repz
scas
das
addl
lret
cltd
xor
and
jns
inc
bound
loopne
cmp
jmp
dec
in
shlb
dec
cltd
or
bound
or
xchg
jne
add
clc
aad
push
and
xor
cmp
xor
xchg
or
jge
lds
xor
and
xchg
imulb
stos
xchg
jp
jmp
cmpsb
add
add
jle
adc
add
clc
and
gs
cmp
in
or
scas
dec
sbb
sahf
jbe
rolb
mov
scas
jnp
add
xchg
aaa
loope
fists
out
lods
or
test
sbb
mov
jae
pcmpgtd
xor
push
and
loopne
push
pop
push
mov
xor
xchg
and
js
add
call
sbb
sub
dec
cmp
xor
cmp
cmpsl
vmovupd
test
mov
jp
movsb
or
or
xor
mov
add
add
push
incl
mov
mov
push
hlt
shrb
enter
jns
repz
cmp
cmp
scas
mov
subl
jp
adc
pop
mov
test
adc
test
movsb
addr16
jmp
add
lods
mov
mov
jno
jmp
stos
push
ljmp
sub
push
inc
sub
sti
outsb
inc
scas
lock
insb
nop
or
cmp
and
sbb
sahf
fs
fcoml
pop
add
sub
movsb
rclb
rcr
js
inc
ss
outsb
mov
iret
imul
movsb
lahf
jbe
stos
jmp
int3
xchg
pop
mov
sbb
lret
push
inc
inc
jle
jmp
lret
cmp
rcrb
push
xchg
jl
shlb
pop
sbb
imul
cmp
int3
popf
inc
insl
jo
mov
testb
dec
adc
out
xor
xor
iret
or
inc
xor
cmc
sbb
and
dec
adc
add
cmp
mov
idivb
das
mov
scas
add
lcall
and
mov
sbb
mov
mov
mov
xchg
out
pop
sbb
or
mov
in
sub
aaa
call
cmc
xchg
mov
outsl
and
loopne
mov
aad
cmp
jae
adc
mov
js
pop
adc
cmc
popf
push
or
xchg
sbb
mov
push
ret
das
push
push
shll
pop
push
testb
mov
out
cmpsl
negl
lea
out
jmp
cmp
test
adc
scas
jmp
mov
movlps
sub
mov
or
daa
cld
outsl
push
mov
mov
jmp
jnp
fidivl
xor
icebp
sbb
sidtl
and
imul
push
add
adcb
jg
xchg
mov
int3
push
ss
lods
hlt
aad
sub
adc
cmpsb
pop
shl
imul
fdivl
les
xorl
lods
loop
xor
sbb
jmp
jno,pn
adc
add
sub
test
xchg
pop
and
pop
ss
add
sti
pop
out
sbb
xchg
push
stos
mov
dec
mov
add
pop
sti
jnp
out
sarl
jb
mov
add
outsl
bound
xchg
cmpsl
mov
jmp
xchg
jmp
push
dec
jmp
mov
xabort
xor
dec
pop
cmp
lret
ljmp
xor
mov
mov
dec
jge
xor
dec
cltd
adc
rorl
cmc
and
pop
in
and
xor
and
gs
mov
and
jecxz
mov
jg
lods
and
lret
je
mov
jb
je
shrb
mov
loopne
movswl
cmp
mov
adc
add
out
in
mov
or
jmp
test
xor
mov
push
jle
pop
out
mov
mov
pop
xchg
mov
sbb
orb
lahf
stc
mov
mov
rcr
int3
xchg
cmp
loopne
pop
sar
jmpw
aam
push
or
mov
cltd
jb
sbb
push
rcr
bound
jp
movsb
imul
inc
pop
xor
jecxz
cmp
pop
jbe
insl
inc
push
lds
icebp
shlb
sarl
mov
sahf
adcl
push
mov
mov
shlb
xlat
xor
mov
push
lods
addr16
pop
sbb
adc
pushf
pushf
mov
or
jg
push
sub
jbe
pop
jle
xchg
cmpsb
scas
cmp
pop
imul
sbb
inc
lret
ljmp
mov
daa
cmp
stos
scas
dec
jg
or
push
mov
mov
imul
or
jnp
aaa
xchg
dec
sbb
xor
mov
scas
adc
xchg
add
out
sub
popf
pop
mov
shlb
push
adc
das
sahf
mov
cmp
ret
xor
int
pop
xchg
pop
jg
jbe
rorb
cmp
outsb
sub
push
dec
dec
je
dec
in
sbb
cmp
mov
adcb
dec
mov
mov
dec
push
push
xor
pop
mov
mov
push
cmp
dec
daa
mov
ljmp
cmpsb
jecxz
inc
int3
xchg
jmp
adc
xor
mov
xchg
or
cmc
lcall
or
leave
cwtl
and
gs
cmpl
loop
lods
or
stos
lahf
sbb
mov
lock
int3
das
jecxz
pop
sub
int3
cld
clc
lea
int
icebp
aam
push
lcall
sub
push
popa
sbb
loope
xlat
cmc
icebp
and
xor
mov
mov
jns
cmpsl
cltd
jae
ljmp
inc
call
adcb
sbb
scas
das
mov
mov
xlat
push
movsl
dec
pop
mov
movsb
jle
inc
inc
xchg
testl
adc
jle
jnp
mov
and
lret
xchg
out
or
das
ja
or
into
xchg
or
nop
mov
inc
push
sub
sub
jae
jg
fwait
or
adc
lcall
jp
clc
out
mov
xlat
pop
cltd
into
mov
data16
push
stos
xchg
cmp
cmc
leave
loopne
pcmpgtb
push
cmp
sbb
fstpt
cwtl
test
push
std
jb
adc
mov
adc
jmp
insb
jge
adc
mov
mov
cmp
ror
and
push
sub
cwtl
pop
aaa
xchg
mov
push
neg
fldenv
sub
push
jno
cmpsb
rorl
les
push
scas
dec
and
xchg
imulb
lcall
jae,pn
jae
rorb
sbb
testb
inc
fwait
adc
adc
pop
mov
test
jg
pop
fnstenv
inc
lret
sti
jb
pop
push
popa
mov
ret
pusha
cmp
add
add
push
stos
dec
jl
ds
adc
fld
je
lea
scas
shlb
cld
in
inc
int
js
stc
xor
adc
imul
lods
lods
rolb
push
push
mov
les
sbb
inc
or
repz
pop
outsb
pop
cmp
xchg
dec
xor
inc
mov
imul
cs
repnz
cwtl
testb
std
jae
sbb
and
test
pop
pop
lock
ror
jno
sub
pop
scas
lret
cli
xor
xlat
and
popa
xchg
adc
mov
jle
sti
clc
pop
lods
xor
imul
push
or
push
mov
inc
mov
or
pusha
lock
pop
fisubrl
aam
cltd
mov
cmc
xor
mov
cltd
xchg
shrl
lea
clc
jp
pop
push
mov
daa
leave
sbb
mov
cmpsb
es
jl
and
mov
sbb
lret
push
fldl2e
out
sbb
aam
or
cmpsl
xchg
clc
add
test
out
dec
lock
repz
ljmp
or
dec
hlt
out
add
add
andb
inc
das
xchg
xor
fdivrs
pop
lret
mov
jmp
int3
cli
mov
mov
testl
pop
jbe
xorb
stos
sub
sub
xor
push
or
and
xchg
stc
dec
subl
mov
test
pop
clc
dec
push
adc
mov
sbb
leave
rcll
out
xchg
cwtl
adc
ret
push
xor
std
insb
in
xorl
push
iret
xchg
pusha
scas
mov
xor
imulb
push
push
jg
stos
add
mov
sbb
mov
cmpl
or
cltd
stos
mov
and
lds
pop
jg
mov
xor
and
mov
inc
test
jae
or
and
bound
adcb
mov
adc
xlat
push
lods
pop
pop
fbstp
inc
ret
and
push
data16
add
js
mov
inc
xchg
loope
mov
adc
xor
push
and
jge
test
dec
test
out
jns
aad
jno
and
movsb
mov
and
mov
sbb
mov
cmp
jmp
stos
rol
xor
sarb
xchg
pop
mov
inc
cmp
jp
rcll
jg
movsl
xchg
addr16
das
enter
cmp
insb
inc
sbb
aas
and
test
xor
in
mov
jb
jne
shl
into
cltd
xchg
sub
adc
xor
pop
dec
and
xchg
fs
push
sbb
popf
lods
int3
xorl
and
mov
or
push
cmc
jmp
and
sbb
lcall
fldcw
repnz
daa
jp
in
dec
xchg
and
pop
mov
je
xlat
fcom
iret
or
fisubrl
iret
adcl
sub
popa
sbb
iret
jnp
jo
add
and
jns
iret
fs
inc
popf
xchg
pop
jo
xor
pop
aad
mov
pop
sub
gs
popa
sbb
or
dec
insl
pusha
mov
loope
loope
lods
mov
aad
stos
push
mov
xchg
cmp
lret
clc
jns
and
inc
dec
inc
in
mov
imul
scas
sub
int
pusha
cmp
push
scas
frstor
out
jb
clc
enter
push
jle
fwait
insl
xchg
push
fldl
lahf
leave
lcall
shrb
cmpsb
incb
pop
daa
arpl
test
clc
dec
lret
outsb
bound
sbb
xchg
popa
cmp
ret
mov
mov
cmc
pop
push
sub
or
sbbb
mov
mov
cli
popa
adc
iret
in
push
lock
pop
jno
dec
sub
mov
push
lahf
mov
icebp
movsl
loope
mov
inc
xchg
sub
daa
into
vhsubpd
loop
sbb
mov
int3
mov
xchg
shlb
xchg
test
lcall
imulb
in
roll
dec
clc
xchg
pop
lea
sub
pop
mov
outsl
outsl
push
data16
mov
jl
add
mov
lock
pop
mov
cmc
ret
jno
or
imul
xor
ret
mov
outsl
dec
int
inc
adc
mov
lcall
adc
cmp
loop
add
iret
mov
lahf
sub
add
out
xor
inc
lcall
mov
test
jb
sbb
xchg
dec
mov
ficomps
mov
fsubs
orl
cmp
xchg
hlt
std
mov
into
jg
scas
dec
and
aam
lret
inc
fidivs
enter
data16
leave
mov
push
je
leave
jle
enter
loopne,pt
lea
mov
sub
je
sub
and
ljmp
cmp
and
dec
lret
push
add
mov
in
inc
jmp
dec
xor
sbb
pusha
and
imul
sub
pop
mov
xor
adc
fwait
lcall
out
in
out
ret
adc
sbb
sub
xchg
test
sti
jbe
mov
repz
push
push
pop
divb
scas
pop
clc
pop
dec
enter
mov
inc
in
inc
insb
xchg
sub
inc
push
lahf
in
fiaddl
inc
outsb
inc
push
addl
pop
das
cmpsb
setae
and
mov
loop
out
insb
rorl
jns
cmp
shlb
sbb
adc
lcall
jge
mov
negl
dec
pop
shr
pop
push
ss
iret
or
scas
cmpsl
sbbl
jne
mov
jbe
cmpsl
adc
loopne
push
add
sahf
or
adc
dec
mov
lcall
jge
out
mov
cli
adc
idivl
lea
lods
add
repz
jns
mov
jnp
lret
xor
lcall
lock
fsubrp
add
js
shlb
sti
cmp
aad
idivb
add
mov
mov
xchg
cmc
sub
jno
adc
in
loop
div
div
jnp
xlat
adc
stc
repnz
xor
and
mov
cmp
and
push
ja
ret
xchg
mov
mov
gs
imul
insb
ljmp
jb
jns
add
lods
mov
pop
repnz
jle
adc
ret
mov
mov
sahf
mov
push
pusha
leave
gs
and
mov
lahf
mov
inc
inc
out
cmpsb
popa
cmp
out
add
popa
add
mov
std
stos
lea
fidivl
cmp
arpl
sbb
enter
out
outsl
push
inc
cltd
dec
or
clc
pop
test
test
push
pop
shll
pop
shlb
jnp
xor
ja
filds
leave
mov
and
adc
fcom
adc
test
push
jp
ficoml
imul
adc
or
pop
fdivr
or
sub
dec
inc
jbe
jnp
jne
add
fsubl
stos
mov
loopne
cld
stc
xchg
lret
inc
clc
xchg
jle
pop
add
push
sbb
and
jb
lahf
iret
push
dec
dec
aas
xchg
mov
js
mov
mov
push
push
rcll
jmp
and
mov
or
cs
and
ret
stos
and
jne
xchg
jo
jnp
mov
xlat
pop
call
mov
in
test
js
sbb
rorb
loop
scas
xor
cwtl
mov
lock
in
cmpsb
push
pop
inc
dec
lret
aas
jle
in
insb
out
stos
out
push
daa
push
pop
pop
cmp
fs
sar
movsl
std
add
sahf
mov
mov
cmpxchg
push
mov
or
idivb
fcomip
out
pop
sti
xchg
loopne
call
mov
test
sub
shll
mov
sbb
pop
mov
cmp
test
mov
sub
mov
push
or
add
jne
xchg
or
cld
sysenter
orl
sarb
lahf
outsb
divb
cmp
outsb
sub
add
dec
xor
fisubrs
or
xchg
xchg
cmc
hlt
adcl
mov
cmpsb
enter
fidivrl
push
push
out
dec
imulb
into
xor
inc
or
jl
push
xor
jno
xchg
in
sahf
fisttpll
jae
jns
rorb
add
push
cmc
arpl
rcrl
and
inc
mov
xor
fwait
mov
push
in
jle
sub
mov
xor
insb
stos
mov
mov
fistl
pop
imul
rcrb
mov
inc
mov
or
xor
sbb
xchg
xchg
inc
roll
pop
adc
jne
out
pop
sub
fcomps
icebp
out
sub
or
test
mov
in
in
sbb
sahf
mov
push
adc
xchg
adc
push
xlat
jnp
repnz
dec
iret
xchg
push
jbe
xor
iret
jp
arpl
jnp
mov
mov
push
ret
and
xor
dec
sbb
add
mov
mov
movsb
push
or
mov
jle
dec
mov
inc
hlt
cltd
rclb
xchg
jne
and
dec
inc
adc
outsl
push
jmp
push
sub
fsts
addr16
jp
adc
hlt
sub
inc
or
stos
jle
cld
or
inc
inc
add
cli
sub
push
dec
mov
jb
sbb
xchg
cwtl
loop
jle
cli
xlat
pusha
adc
data16
cmp
test
xchg
stos
sbb
push
lcall
sbb
imul
jl
sub
iret
mov
pop
push
xchg
shr
pop
lcall
insb
mov
mov
sahf
dec
cwtl
adc
test
inc
std
int3
fadds
push
ss
jmp
imul
mov
rorl
jp
adc
add
movsb
inc
cmp
negb
in
add
cs
testb
sbb
mov
adc
arpl
xchg
fwait
es
cmp
mov
ret
sarl
inc
cs
scas
xor
clc
sbb
dec
andb
mov
popf
sbb
push
lock
hlt
dec
icebp
sbb
mov
or
insl
out
or
dec
fyl2xp1
outsl
enter
pop
dec
add
pusha
out
jle
out
xchg
mov
sbb
xchg
cmc
cmp
stos
ljmp
mov
lds
lret
push
movsl
jecxz
frstor
sbb
popf
push
sbb
push
push
mov
xchg
out
push
das
fcoms
and
cmp
xor
and
leave
stc
lret
sarl
and
xrelease
jns
sub
dec
mov
sub
sub
fistpll
mov
scas
jns
leave
movsl
dec
dec
add
shlb
cmc
fisubs
push
xor
xor
sub
jge
test
pusha
imul
lahf
xor
xchg
xor
mov
xchg
mov
subl
scas
push
rolb
lahf
scas
push
ss
pop
mov
cwtl
mov
shrb
test
leave
inc
enter
dec
ret
dec
ficomps
jle
pusha
leave
popf
cmp
gs
jg
or
pop
addl
pushf
mov
cmp
test
inc
push
sbb
ja
mov
test
vpminub
inc
dec
stc
in
push
xor
xor
in
cs
mov
rcl
imulb
lods
and
in
rclb
pop
std
dec
cltd
jo
fstps
lock
cli
mov
das
dec
adc
sbb
dec
sbb
mov
mov
addr16
test
mov
cmp
push
daa
sub
in
scas
sub
cmp
jo
pop
cmpl
add
xchg
shrb
cli
mov
fnop
push
pop
cmp
inc
fwait
push
sbb
jns
xor
rclb
pop
and
cmp
inc
rol
mov
in
lds
insb
mov
or
fcomps
pusha
lea
add
mov
sarl
xchg
data16
shrl
lahf
adc
cmp
mov
xchg
mov
push
les
daa
in
jb
sbb
cmp
push
push
mov
std
xor
notb
mov
add
and
movsl
iret
xor
mov
add
or
inc
pop
sbb
sub
jle
aas
jecxz
popa
and
leave
mov
pop
sbb
outsl
cmp
ret
dec
icebp
add
aad
test
xor
or
pop
arpl
or
test
adc
cmp
out
insb
fmuls
mov
insl
mov
orl
sub
xchg
jg
cltd
leave
loopne
outsb
arpl
pushf
or
mov
and
sub
pop
cmpsb
xor
int3
test
pop
addl
std
ja
pop
cmp
icebp
mov
adc
dec
or
mov
gs
mov
jae
or
adc
and
neg
push
pop
mov
inc
cs
dec
out
stos
sbb
in
push
test
ret
mov
std
dec
xlat
fs
in
iret
lea
out
mov
xor
loop
movsl
adc
hlt
jecxz
pop
sbb
sub
xchg
lret
enter
push
jmp
and
push
test
adcb
mov
add
adc
lret
xchg
push
pop
mov
clc
or
sti
cli
movl
sbb
aaa
test
xchg
mov
jbe
lahf
cld
push
jb
and
mov
std
incl
sub
call
xor
scas
mov
sub
pusha
jge
fiaddl
sbb
enter
cmp
cmp
fists
jns
rcll
cmp
roll
pop
mov
pop
inc
adc
scas
es
mov
xchg
jmp
add
jge
or
xlat
jno
jp
dec
sub
cmpsl
scas
test
movb
mov
std
dec
xchg
jne
push
xor
jge
gs
and
hlt
aad
ss
shll
pusha
insb
mov
pop
mov
adc
repz
mov
pop
insl
xlat
cmpsl
inc
imul
je
movsl
dec
orl
out
ret
or
shlb
ret
adcb
imul
test
jae
arpl
push
pop
inc
push
jno
pop
add
scas
cltd
sub
repz
sub
sti
mov
mov
or
jmp
sti
aad
push
push
mov
mov
aam
pushl
fmull
push
adc
dec
sbb
add
std
ret
adc
repz
lds
stc
xchg
fs
fsubr
out
xchg
roll
sbb
dec
sub
xorb
lea
sub
inc
mov
mov
xor
fcmovne
pop
icebp
inc
inc
sub
test
dec
mov
xchg
or
push
push
sub
pop
in
pop
arpl
pop
xchg
push
fbstp
lods
lret
sub
andl
inc
arpl
es
inc
mov
inc
mov
mov
fstps
cmp
into
inc
mov
xacquire
pop
push
mov
popa
rcll
sub
loop
sbb
xor
push
dec
fst
inc
lds
test
das
jno
shlb
dec
or
lock
in
fwait
jo
cwtl
xor
dec
xlat
mov
inc
push
jmp
iret
cmpl
aas
nop
loopne
sub
jbe
or
xor
or
lods
pop
dec
push
sti
push
scas
mov
inc
sub
mov
adc
and
mov
mov
jl
jge
aas
inc
insb
mov
or
les
mov
dec
and
bndldx
cmp
mov
xor
add
cmp
adc
jne
outsb
or
dec
jns
stc
jo
mov
sub
popf
adc
inc
ja
mov
mov
inc
and
xchg
je
cmp
push
daa
mov
dec
inc
or
sti
or
pop
icebp
mov
sbb
sub
add
cmp
in
insb
clc
and
subl
fimull
mov
les
test
dec
push
or
out
or
inc
pop
jecxz
xchg
call
adc
cmp
pop
push
fldenv
mov
jp
leave
xchg
hlt
popf
icebp
fimull
shrl
cmpsb
add
jg
xchg
push
test
popf
xor
xchg
jg
or
add
mov
mov
rcrl
xchg
daa
pop
mov
shrb
movsb
xchg
inc
pusha
adc
lods
dec
movsl
push
mov
arpl
mov
xchg
sbb
or
lahf
xchg
xchg
dec
jp
pusha
int3
pusha
std
dec
cli
jp
mov
mov
add
in
jae
jbe
mov
push
and
fisttpll
xchg
adc
int3
cld
or
test
sbb
mov
inc
out
mov
adc
int3
cltd
rcrb
inc
sub
ds
stos
mov
adc
push
push
xchg
repnz
shll
jl
xchg
cli
inc
cld
loopne
mov
imul
xchg
loope
adc
cwtl
sarl
clc
mov
js
xchg
mov
xor
pop
pop
loope
cld
sbb
sbb
incb
xchg
jle
movsb
jg
and
push
test
in
lea
sbb
inc
cmc
cmp
addr16
add
jmp
adcb
mov
pop
into
loope
rcrb
scas
pop
or
push
mov
sub
arpl
and
mov
mov
adc
jmp
loopne
and
jbe
xchg
repnz
xor
mov
test
or
jb
sbbb
and
addr16
or
sub
std
inc
addb
add
mov
mov
clc
dec
jb
movsl
inc
lret
std
jne
adc
or
xor
add
sbb
push
push
mov
iret
push
mov
in
jge
fwait
sub
inc
add
inc
xchg
mov
fwait
arpl
jns
lcall
pop
or
call
test
rol
scas
jmp
mov
xchg
mov
push
push
pop
outsb
shlb
addr16
pavgw
jbe
or
mov
and
mov
dec
mov
aam
push
xorl
cmp
inc
jae
mov
call
mov
loop
lret
add
je
dec
jno
xchg
add
adc
cmp
cmp
cmp
clc
xor
ss
sbb
and
fistl
dec
pop
add
cmp
scas
es
inc
shll
jecxz
ficompl
rcr
addr16
je
mov
orl
push
lock
fisubl
or
js
or
push
or
hlt
push
jo
int
addl
lcall
add
imul
push
or
dec
loope
in
lea
lahf
out
xor
dec
loope
and
jb
fiadds
pop
adc
mov
adc
mov
sbb
pop
fdivs
sbb
jno
fcmovne
mov
sub
pop
jne
or
mov
push
sbb
shrl
outsl
int3
or
jne
mov
cmp
or
test
xchg
push
dec
or
jns
repz
ss
jmp
mov
pop
and
or
mov
sahf
push
cli
xor
fcoms
mov
mov
mov
loopne
sub
dec
or
sbb
mov
stos
aad
inc
mov
in
test
loop
ja
jecxz
jno
inc
arpl
xorl
or
in
xchg
add
pop
adc
inc
out
dec
xchg
sbb
loope
xchg
sbb
fs
push
cmpsl
daa
inc
mov
mov
jns
pop
mov
loop
lods
jg
out
push
inc
dec
aad
adc
cmpsl
aaa
jl
scas
and
shrb
adc
mov
in
mov
jo
nop
xchg
adc
movsl
jo
or
adc
xchg
add
push
add
mulb
inc
aam
out
and
inc
pop
cs
fs
mov
pop
mov
loop
pop
jmp
pop
fdivrl
daa
mov
mov
add
nop
test
fnstenv
xchg
inc
xchg
jae
cmc
mov
ss
adc
mov
pusha
loopne
xchg
fcomip
repz
lods
mov
adc
jecxz
cmp
out
mov
mov
xchg
lea
inc
mov
sar
ficompl
addr16
testb
xor
lcall
jnp
call
ljmp
in
sub
repnz
arpl
sbbb
orl
mov
cli
push
inc
lahf
add
std
cmpsl
inc
lea
sub
adc
dec
inc
sbb
mov
and
fwait
sbb
test
pop
sbb
stos
jb
nop
cmpsl
dec
or
outsl
shll
scas
gs
aas
aas
rolb
jmp
imull
mov
or
xchg
sub
inc
push
cmpsb
or
push
test
add
cwtl
lods
sbb
sbb
icebp
cmpsl
sbb
icebp
jmp
cmpsl
mov
push
les
orl
test
sarb
adc
jecxz,pt
push
push
fildll
test
xchg
xchg
jge,pt
adc
jnp
scas
pop
mov
jae
decl
daa
xlat
lds
icebp
movsl
cmp
mov
jmp
mov
add
push
sub
adc
mov
and
mov
pop
test
int
mov
cmpsl
pop
pop
pushf
jg
gs
fistl
arpl
adcb
push
shrb
mov
aas
test
pop
or
lods
mov
add
xor
or
insl
dec
and
mov
mov
cmp
or
sub
sub
out
pop
loop
cmp
push
jne
mov
out
xchg
jle
add
mov
orl
inc
stc
sub
dec
bswap
mov
pop
mov
pushf
push
mov
sbb
sub
pop
xor
cmp
rclb
test
mov
or
push
mov
fcom
push
cmpsl
pop
or
sub
loope
dec
mov
push
test
es
jb
call
sub
mov
or
popa
cwtl
imul
pusha
mov
fldcw
push
and
push
imul
sbb
adc
das
and
inc
fidivrl
pop
scas
pop
mov
xchg
test
imul
stc
add
inc
and
lret
hlt
fisubrl
pop
movsb
test
or
aaa
and
shrl
cld
fs
and
ret
mov
int3
flds
and
dec
movsb
push
scas
inc
movsb
sahf
jo
fnsave
fcom
aaa
xchg
push
mov
cltd
cmpsl
and
pop
and
push
mov
mov
inc
ret
mov
std
xor
xchg
in
daa
scas
lret
aaa
jg
clc
xor
xchg
xlat
je
mov
adc
lcall
lcall
out
test
cmp
orb
ret
sub
dec
ds
sub
cmp
push
mov
repz
inc
jg
pushf
jo
imul
lret
in
push
mov
cmp
aam
xor
push
push
ret
fs
jle
dec
fistps
outsb
popa
mov
aas
in
adc
jo
negl
in
repnz
jle
ja
jo
inc
xor
and
pop
insb
cmp
pop
sub
insl
das
fldl
dec
scas
xchg
cwtl
leave
sub
into
int3
jns
cmp
shr
jmp
in
cli
adc
pop
and
dec
les
jno
in
mov
popf
aad
int
es
jno
push
add
shll
mov
mov
pop
add
cwtl
add
sbb
pop
xchg
push
xor
cmp
xor
sbb
insb
rcll
cli
inc
movsb
flds
leave
cmp
or
push
cmpsb
mov
gs
pop
cmp
nop
mov
outsl
into
popa
paddsw
shrb
ss
mov
xchg
or
cmc
insb
cltd
cmp
push
ljmp
pop
setbe
stc
mov
int3
lcall
sbb
cmp
scas
stos
shlb
mov
jnp
mov
push
inc
je
mov
fnstenv
sub
adc
ja
xchg
cmp
jle
je
inc
cmpl
pop
dec
mov
xchg
repnz
ja
lret
ret
inc
fsts
hlt
into
sub
sbb
lock
lock
repz
jmp
xorb
stos
mov
inc
lcall
jnp
sub
jno
jne
insl
lret
es
jbe
mov
sub
or
push
faddl
pop
fnstenv
shl
xor
in
aad
cmp
cwtl
mov
push
aad
fsubrl
fidivl
jge
sbb
xchg
add
mov
pop
push
flds
xor
shlb
fcmovnu
shll
push
outsb
add
ss
setp
pop
and
cmpsl
xchg
xchg
les
and
insb
add
scas
mov
lea
clc
mov
sub
and
jg,pn
call
mov
es
in
rcrb
pop
lea
aad
mov
leave
cli
push
mov
cmp
scas
and
cli
inc
fcomp
insb
xor
hlt
pop
out
shll
jmp
or
mov
push
jge
pop
pop
scas
add
or
es
stos
jmp
fstps
mov
movd
insl
sbb
in
das
into
nop
out
add
mov
fisubrl
sti
lret
enter
insl
add
dec
dec
and
xchg
outsl
jnp
call
mov
jno
insb
inc
int3
stos
push
jbe
icebp
shlb
cmpsl
imul
jmp
data16
lret
ljmp
xlat
push
adcb
aad
xchg
mov
insb
jmp
fists
xchg
push
cmp
sahf
jg
cmpsl
mov
push
jns
stos
cwtl
lret
cmp
je
mov
jl
xchg
inc
stc
mov
test
push
add
es
pop
shll
sub
lret
aaa
push
popf
int
mov
hlt
outsb
mov
out
pusha
into
fisttpl
xor
stos
rcll
icebp
or
imul
push
adc
dec
xchg
jae
sahf
outsl
or
dec
cltd
xchg
sub
test
rcl
fimull
xor
pop
pushf
cld
and
mov
popf
xor
mov
fs
jns
fildl
push
pop
lock
sub
iret
mov
sbb
lahf
pop
sbb
push
cld
mov
ja
fisttps
imul
mov
sbb
push
mov
push
dec
scas
xor
xorb
pop
push
and
mov
fiaddl
js
sbb
cmc
mov
inc
or
push
mov
adc
fs
sbb
subl
xchg
jp
aaa
inc
mov
mov
imul
add
jecxz
mov
ds
or
mov
mov
cmp
lods
test
out
loopne
xor
or
sub
inc
testb
mov
mov
adcb
negb
cmpsl
xchg
fdivrl
mov
lea
jno
jo
mov
js
arpl
lcall
scas
jne
fbstp
out
fstpl
mov
sti
push
les
ret
cwtl
mov
pop
xchg
adc
push
enter
out
dec
push
sub
xchg
push
jp
test
pop
popa
adc
mov
jg
repnz
push
mov
jne
sbb
clc
mov
jle
fldcw
push
jo
jg
adc
inc
push
mov
es
push
inc
scas
sub
cld
outsb
daa
push
loopne
imul
fisubs
jbe
inc
mov
pop
inc
sbb
flds
adc
or
mov
cmp
int3
xor
ret
outsb
xchg
pop
lods
cmp
inc
or
adc
jecxz
ja
aaa
out
jmp
int
sbb
outsl
dec
stos
vcmpngesd
sub
inc
bound
mov
add
dec
movsb
pop
add
cmp
lods
mov
inc
pop
rcll
mov
add
adc
xchg
sti
push
jmp
loopne
push
stc
inc
dec
xchg
pop
addr16
jl
xchg
mov
jae
leave
mov
test
xor
pop
push
cmpsl
lods
aam
or
insb
cmc
jns
mov
into
outsl
scas
arpl
sub
pop
aas
pop
lods
xor
mov
and
and
lcall
lods
adc
shrb
sarb
sti
push
int3
ret
pop
outsb
xchg
mov
xchg
out
mov
cmp
xor
fsqrt
mov
shrb
movsl
stc
sbb
lock
jmp
adc
lock
xor
lock
scas
stc
cmpsl
loope
sub
or
dec
inc
addr16
cmp
adc
or
subb
inc
xor
les
mov
mov
jle
je
dec
push
notl
pop
mov
js
loopne
xor
sahf
fnstenv
push
scas
dec
lock
xor
xor
aam
shlb
rorl
jl
imul
repz
push
mov
push
loope
adc
cld
int3
sub
pop
rorl
inc
repz
stos
call
mov
icebp
cmp
aaa
lcall
fdivl
ret
orl
nop
mov
xchg
xor
test
cmp
aas
xor
pop
fisttpll
ja
xorl
clc
xchg
mov
add
add
imul
cmp
lret
xchg
mov
test
add
ret
js
lock
mov
imulb
movsl
xchg
movsb
add
ss
push
in
lods
xlat
movsb
out
gs
xchg
popa
mov
test
roll
icebp
outsl
incb
push
mov
jae
cld
fdivs
add
in
jge
repz
mov
fcomip
lahf
je
ucomiss
pusha
notb
cltd
mov
test
xor
movsl
push
fdivrl
lea
dec
call
aaa
fstps
popf
adc
movsb
dec
lea
cmp
and
dec
mov
xchg
sbb
mov
xchg
jg
xchg
icebp
arpl
inc
push
inc
push
fs
insl
aaa
jnp
adc
sub
sub
repz
outsb
ss
or
in
ret
sub
ret
jp
decb
jo
xchg
fdecstp
xchg
jp
stos
pusha
aam
lods
xor
sub
shl
xor
dec
xor
vlddqu
aam
cltd
jecxz
cmp
sub
fstl
or
push
and
jle
xchg
inc
add
scas
mov
inc
push
aas
push
loope
outsl
int
pop
fwait
sub
sbb
push
or
mov
pop
mov
pop
cmp
out
js
mov
out
cmp
sbb
inc
adc
std
aad
add
or
or
movsl
push
dec
fwait
sub
dec
addr16
or
xor
cmc
sti
cmp
adc
adc
into
mov
sbb
cwtl
or
mov
sbb
icebp
lea
sbb
jge
mov
fwait
mov
int3
push
sbb
add
repnz
inc
mov
adcb
cmp
cmp
mov
jecxz
cltd
std
shl
testl
in
test
cmp
jnp
sbb
xor
mov
mov
mov
cmc
sbb
mov
dec
popf
outsb
push
scas
enter
cmp
mov
lret
scas
pop
sarb
lds
int
push
and
aas
scas
mov
and
gs
inc
or
decb
push
loope
adc
mov
call
and
jecxz
sub
pop
mov
jne
in
in
xor
xchg
push
mov
mov
hlt
push
pop
xchg
dec
jbe
pop
paddb
mov
mov
pop
jmp
push
into
lods
sbb
xor
or
adc
mov
add
sbb
imul
outsb
fucomi
pop
pop
pop
add
leave
cmp
in
ja
inc
lret
iret
clc
int3
into
ret
fldl
outsb
repz
dec
mov
inc
sbb
pushf
fistl
ljmp
nop
xor
pop
lret
aas
pop
outsl
adc
mov
cwtl
pop
sub
xchg
mov
popa
xor
adc
mov
jae
add
add
popa
inc
pop
xor
imul
and
js
mov
push
dec
loope
and
cmp
pusha
div
orl
adc
xchg
mov
movsb
xor
and
rcrb
dec
loope
jnp
lret
rorl
outsl
pop
lods
add
out
xchg
sub
arpl
lods
push
xchg
add
mov
rcll
loopne
fwait
arpl
pop
idivl
or
addr16
or
dec
call
cmc
call
sbb
je
xor
call
push
jno
inc
call
shlw
sbb
mov
mov
in
lock
mov
rcrb
xchg
mov
inc
jns
jl,pn
stc
sub
mov
mov
call
aas
imul
mov
test
ljmp
ljmp
aam
adc
test
xchg
xlat
bound
insl
inc
flds
and
cli
nop
scas
pop
imul
sbb
add
stc
jo
pop
sarb
movsb
add
xchg
xor
xor
pop
lea
xor
xlat
rorb
mov
cmc
outsl
roll
popa
lds
xor
fisttpl
lea
outsl
jbe
xchg
daa
cmpsl
sbb
mov
xchg
push
jo
arpl
sbb
mov
push
xchg
pop
and
xor
sub
lds
jbe
je
add
cli
jno
xlat
hlt
add
xor
sbb
call
sti
or
xchg
lods
push
in
push
cmp
add
push
mov
jo
cld
cmpsb
xchg
pop
scas
mov
inc
stos
mov
xchg
loope
or
xor
divb
les
testl
push
mov
insb
xlat
xor
popa
cltd
sbb
cltd
pop
fcoml
arpl
mov
inc
sarl
mov
pop
xchg
or
push
mov
je
pop
int
cli
adc
fldt
loop
sbb
mov
popf
mov
mov
jns
pop
push
aam
je
data16
cmc
ljmp
mov
cmp
aas
andb
imul
mov
lods
jb
mov
call
jnp
xchg
xchg
xlat
lcall
pop
fcmovb
pushf
mov
push
pop
xchg
inc
cmp
cmp
in
pop
std
out
sbb
xorl
cld
test
enter
fmuls
nop
mov
mov
stc
or
pushf
push
repz
cmpl
test
clc
adc
mov
data16
push
divb
insb
xchg
and
pop
adc
pushf
xor
push
fdivl
adc
shlb
sub
adc
cltd
fwait
mov
cmp
mov
sbb
mov
ror
adc
jmp
and
mov
int3
dec
or
incl
call
push
shrb
ss
cmp
mov
dec
mov
movsl
mov
fldenv
jno
out
mov
sbb
in
mov
cs
call
dec
leave
popa
dec
lods
inc
mov
inc
dec
std
int
clc
std
sub
lds
push
ss
xor
clc
inc
data16
push
ret
popf
in
outsl
push
jl
ljmp
mov
pop
mov
and
icebp
fcomi
mov
andl
jo
in
repnz
pop
inc
push
mov
scas
jg,pt
cmp
xor
mov
popf
out
rcll
bnd
stc
push
mov
ljmp
inc
dec
stos
jo
mov
mov
mov
cmpw
pop
lea
dec
fcmovnu
adc
fwait
xchg
or
sbb
popa
out
pushf
xchg
aad
mov
outsl
outsl
fnstsw
push
xchg
jp
push
int
xchg
mov
ficoms
or
or
loop
outsb
dec
fisubs
fcoms
lea
stc
adc
dec
xchg
fstl
aaa
test
lock
jge
jmp
ret
pop
inc
outsb
xchg
imull
jp
push
mov
bound
mov
mov
pushf
lods
fstl
cmp
mov
stos
xor
enter
lahf
adc
mov
push
out
pop
stc
or
mov
fistps
xor
cwtl
sbb
jmp
out
mov
jbe
mov
repz
std
lea
cmp
or
jecxz
lret
add
popa
pop
cmpb
movsl
mov
sub
sub
push
xor
sti
js
pop
lods
add
cmp
fmuls
or
daa
fwait
dec
sub
jnp
or
repz
jl
cmp
or
adc
ds
in
lds
sub
xor
jno
lods
lds
mov
popa
sbb
xor
mov
outsl
push
xchg
sub
sub
xor
xchg
out
xchg
mov
mov
pop
mov
jge
add
arpl
icebp
fs
mov
lret
ret
fnstcw
loopne
mov
mov
idiv
mov
mov
fs
push
int
xchg
mov
stc
mov
jl
sub
jmp
stos
cmp
daa
test
cmp
lock
sub
jp
mov
mov
popf
int3
les
adc
int
pusha
or
adcb
clc
into
dec
jb
out
repz
out
xor
sub
push
popa
pop
out
lods
cmp
scas
mov
pop
lock
nop
enter
outsb
pop
add
xor
sub
or
orb
mov
mov
mov
test
inc
out
mov
jmp
fldt
dec
loopne
fdiv
fmulp
aas
sub
jno
jmp
addl
and
mov
lret
jb
lock
sbb
cmp
adc
or
sbb
adc
outsb
jbe
xor
cmpsb
inc
stc
cmc
cwtl
cmp
dec
cmp
pop
inc
jae
insb
bnd
outsl
inc
popf
std
pusha
faddl
push
out
outsb
jl
pop
jecxz
sbb
xchg
lods
xor
ret
adc
gs
jns
inc
inc
mov
inc
xchg
je
inc
adc
gs
sub
jae
lds
inc
mov
cmovne
scas
cltd
cmp
into
scas
jbe
aaa
and
or
sarb
mov
push
xchg
pop
lahf
mov
cmp
cmp
xorl
push
int
push
dec
aam
cmp
les
xor
and
and
mov
mov
ret
movsl
mov
inc
dec
dec
imul
imul
mov
mov
cmpsb
xor
pop
lcall
push
add
sbb
push
or
fs
xor
ja
mov
cmp
sti
insl
stos
rcrl
repz
insb
ja
dec
xchg
adc
push
outsl
sbb
into
subb
jb,pt
jo
rcl
mov
mov
ds
mov
mov
dec
test
rcrl
add
lock
imul
lret
cwtl
fisttpl
mov
cmp
lahf
sbb
out
fidivrl
cmp
push
insl
and
xorl
and
testl
jbe
inc
fwait
out
mov
outsl
adc
fsubrs
das
sbb
aaa
mov
pop
adc
xor
fcmovnb
cmpsl
and
lret
inc
scas
mov
sbb
jae
sti
push
ss
cmp
add
sarb
xlat
pop
int3
and
push
or
es
push
je
lret
fidivrl
jno
inc
dec
or
lahf
xor
adc
xchg
mov
add
push
popw
rorl
aad
mov
mov
cmp
dec
inc
out
mov
xchg
andb
inc
loop
pop
sub
in
scas
xor
add
je
fs
ret
rol
in
and
sbb
test
test
out
jge
mov
pop
push
into
inc
inc
sbb
movsl
rolb
hlt
pop
clc
popl
adc
push
or
jmp
bnd
jle
jmp
or
dec
mov
dec
call
in
push
fucom
out
loopne
ja
push
insl
pusha
jecxz
cmc
adc
cmp
ret
xchg
pushf
dec
cmp
pop
pop
xor
movsl
in
inc
sbb
jns
inc
movl
lret
dec
jmp
mov
decb
insl
rcrl
aaa
cmp
stos
leave
xchg
and
jno
mov
sbb
idivb
mov
xor
xor
add
ss
pushl
jle
xchg
mov
scas
dec
add
imul
enter
xchg
xchg
jnp
iret
mov
ret
pop
sub
test
mov
jb
mov
out
les
addr16
mov
xor
xchg
sar
mov
movzbl
inc
pop
scas
lahf
test
rol
jecxz
mov
imul
adc
adc
or
mov
adc
in
cld
pop
fistpll
mov
andb
and
and
adc
jns
dec
mov
xor
std
sbb
xchg
int3
sub
mov
cmp
lahf
outsl
popf
or
lods
inc
sarb
push
ljmp
out
mov
jnp
dec
or
dec
jno
push
jl
lock
mov
xlat
jge
push
mov
loopw
iret
and
cs
mov
ds
fistl
jg
jle
gs
xor
out
mov
adc
pop
inc
xchg
arpl
sub
stc
in
loop
inc
subb
stos
fdivs
imul
scas
add
ret
inc
lahf
pop
sub
mov
wrmsr
cltd
shlb
mov
pop
add
mov
inc
out
dec
ss
fwait
call
cmp
dec
and
push
scas
push
inc
fldt
aam
add
in
mov
lahf
jp
push
xor
mov
ljmp
push
test
push
mov
cmpl
shlb
imul
cmp
jae
out
in
push
mov
push
clc
add
mov
sbb
rep
cmp
xor
lods
adc
ret
push
mov
repnz
mov
dec
popf
jge
sub
inc
pop
imul
pop
or
rol
jge
negl
insl
fstsw
call
inc
lea
cwtl
movsl
add
inc
sub
lds
jnp
lret
add
xor
in
xor
insb
mov
add
mov
aad
dec
pop
dec
mov
mov
add
or
lods
jns
add
push
in
cltd
decb
mov
rol
lds
lret
add
or
out
mov
ja
xor
cmp
sti
fcmovu
mov
insl
pop
mov
add
sub
loop
adc
scas
popf
stos
mov
cli
enter
insl
sub
lahf
call
cmpl
lea
fnstcw
imul
cmp
lds
and
sub
test
push
xchg
es
shrb
mov
adc
xlat
jmp
sub
fmull
shlb
test
ret
pop
inc
cmp
leave
lock
out
dec
adc
lds
mov
xlat
cmp
add
add
into
and
fcomp
xchg
push
jbe
test
jge
jne
dec
xchg
add
cli
pop
xchg
out
dec
push
xor
mov
test
ja
jne
jmp
cmpsb
and
pop
xchg
lods
arpl
pop
jnp
jmp
fisttps
inc
stos
xlat
push
inc
jns
ja
bound
mov
or
xlat
sbb
lods
data16
mov
mov
mul
cmp
mov
adcb
stos
pop
ret
jo
mov
imul
sahf
cltd
xchg
out
push
mov
loope
sarl
sub
xchg
rolb
cmp
add
shlb
push
out
testl
cmp
inc
xor
andl
loopne
test
fldl
out
pop
negb
jns
jno
fs
xchg
mov
jbe
pop
arpl
out
dec
imul
push
js
mov
fdiv
in
push
mov
mov
sbb
fstl
or
push
test
xor
sub
jnp
lods
sub
push
cmp
ljmp
aam
xlat
sbb
push
dec
push
mov
sbb
addb
push
jbe
fdivrs
pop
mov
lcall
addr16
mov
and
jae
rcrb
int3
cmpsl
pop
pop
roll
mov
push
mov
sbb
cmpl
sub
and
xchg
lock
mov
jecxz
or
xor
lahf
pop
and
js
jmp
xchg
pop
add
subb
xchg
jae
add
sub
push
add
pop
mov
rcll
jb
cmpb
aad
pop
sbb
xchg
movsb
pop
in
fcomps
pop
sbb
jno
jbe
scas
mov
gs
lods
cmp
fs
popa
fs
rcrb
mov
stos
push
xor
ja
stc
push
and
loope
push
sahf
out
fdivs
adc
push
sub
add
pop
aaa
add
cmp
sahf
test
cmc
int3
mov
outsl
test
sbb
push
pop
imul
or
add
and
push
fildl
mov
add
pop
jnp
mov
lret
pop
xor
mov
and
mov
sbb
sbb
popf
and
popa
add
fmull
cmp
test
addr16
add
mov
cli
pop
outsl
add
lods
nop
mov
jmp
adc
pop
xchg
pop
hlt
or
xchg
mov
jno
lret
jno
jbe
or
jno
jnp
xorl
push
jg
sub
jae
loop
stos
mov
xchg
andb
stos
enter
aam
cmp
movsl
mov
sarb
push
and
mov
es
pop
int
js
adc
popa
es
sub
pop
aad
xlat
aas
jmp
push
inc
lret
fs
mov
sbb
pop
mov
out
lods
popa
jns
out
lea
cld
dec
mov
aam
inc
xor
dec
enter
inc
fcompl
mov
and
mov
cli
mov
mov
push
mov
or
xor
sti
in
sub
cs
pop
xor
imul
push
iret
fnstcw
aaa
add
insb
pop
pop
enter
dec
sub
adc
shll
popf
or
cmpsb
jae
aas
stos
or
cmp
stos
lock
jo
or
adc
outsl
test
mov
in
sbb
sbb
pushf
loope
adc
lods
xor
loope
pop
test
in
inc
insb
cmp
adc
cmp
ljmp
and
bound
cmova
rorb
int
in
sbb
in
repz
jns
mov
popa
adc
xor
subb
mov
cltd
dec
and
xor
popf
xor
cmp
mov
cmp
lret
inc
jle
mov
mov
pop
fstps
push
in
test
jbe
mov
jl
mov
push
push
mov
or
or
push
call
test
jle
xchg
pusha
iret
adc
loopne
and
andb
lods
pop
dec
leave
jmp
sbb
inc
test
ds
xor
xor
inc
push
or
js
pop
nop
mull
iret
and
mov
fstpl
pop
push
call
adc
jns
repnz
mov
movsb
icebp
push
push
mov
test
mov
mov
sbb
sbb
and
icebp
xor
mov
hlt
movsl
sti
xchg
add
repnz
xchg
outsb
idivl
add
repz
inc
mov
out
lcall
inc
inc
pop
push
cmp
mov
cmp
push
pusha
mov
push
push
inc
adc
cmp
cmp
push
sub
sbb
mov
lret
dec
mov
pop
push
aam
je
aad
dec
mov
mov
push
sbb
loop
add
movb
int3
in
inc
loopne
sahf
lock
push
icebp
js
mov
inc
int3
into
es
fcomps
adc
mov
xor
xchg
pop
fwait
imul
mov
ljmp
sbb
ljmp
lea
int
loop
inc
shrb
xor
and
cmp
push
xchg
jp
repnz
jg
movsl
data16
adc
jmp
aas
movsb
and
lea
pop
jnp
ljmp
jnp
filds
xor
rcrl
jge
sbbl
js
stos
jp
and
aad
jne
xor
inc
fmull
insl
mov
ret
sbbl
add
ficompl
xchg
jne
aad
pop
or
fs
mov
movsb
jnp
fadds
out
loope
je
popf
push
imul
or
push
push
push
std
jbe
leave
push
stos
cs
jmp
or
stos
sahf
aaa
or
pop
pop
pop
roll
dec
loopne
xchg
push
ljmp
bswap
and
push
das
jo
adc
int3
cmp
out
sbb
cwtl
mov
push
loope
xor
mov
push
jle
sahf
pop
cmp
mov
fsubl
in
mov
push
lret
inc
ret
pop
pop
push
xor
bound
xchg
inc
push
inc
cwtl
pop
and
leave
fidivl
pop
mov
mov
in
pushf
push
nop
or
inc
das
xor
hlt
and
lcall
pop
pop
shl
cli
xchg
jo
test
jno
jns
popf
or
out
or
inc
movsl
add
xchg
jns
inc
jg
leave
clc
or
std
or
rclb
mov
leave
rclb
or
and
loope
or
inc
or
outsl
or
mov
outsb
arpl
arpl
sbb
cs
lods
adc
mov
dec
hlt
cmpb
push
mov
cs
jnp
insl
xchg
mov
xchg
stos
inc
fucomp
cltd
fldl
fmulp
or
adc
push
xchg
add
jns
push
fadds
xor
inc
and
pushf
push
jg
adc
andl
stc
push
outsb
mov
mov
insb
jo
cmc
mov
dec
and
mov
sub
popf
cmpsl
sbb
test
arpl
lret
and
push
and
or
int3
jge
decb
dec
jge
xor
jne
cltd
push
outsb
mov
sbb
dec
mov
sbb
sarl
repz
jmp
es
fnstenv
insb
stc
mov
into
jno
pop
cmovnp
push
xchg
mov
xchg
inc
out
adc
mov
mov
imul
imul
imul
lcall
inc
jle
xor
fs
fucompp
insl
loopne
jmp
rcl
mov
shrl
pop
lcall
cmp
sub
mov
jmp
mulb
mov
rclb
push
adc
lock
out
sbb
cmp
or
sbb
dec
popf
pop
rcrl
inc
mov
xor
mov
insl
mov
ror
dec
fcoml
push
enter
popf
cli
mov
std
pop
sbb
aas
inc
in
loope
lods
testl
pop
xor
pusha
jmp
in
mov
int
mov
inc
pop
movsb
out
outsl
loope
jmp
jmp
xor
xchg
mov
xchg
pop
inc
pushf
outsb
test
xchg
fiadds
mov
mul
ja
sbb
adc
aam
sbb
pop
xchg
sbb
cmpsl
jno
pop
adc
mov
adc
push
imul
nop
cmpsl
loope
pop
mov
mov
sub
adc
ljmp
lea
aam
in
mov
sub
loop
in
lds
lods
loope
lods
test
mov
es
adc
lods
adc
lcall
cli
andb
push
lahf
lods
pushl
jb
fnsave
xchg
push
mov
arpl
je
movsb
rep
arpl
xchg
push
les
pushl
movsl
clc
rcrl
sbb
sahf
mov
call
xor
adc
push
stos
addr16
mov
mov
adc
rorb
cmpsl
xchg
mov
jecxz
inc
nop
sub
jbe
mov
cmp
notb
mov
xchg
jle
aad
je
sbb
xchg
addr16
repnz
fildll
cmp
and
pop
dec
int
jbe
and
cmpsb
popf
outsb
loopne
jbe
xor
xchg
neg
stos
out
cs
roll
pop
xor
mov
xor
or
pop
cmp
das
sub
jle
jmp
jno
ljmp
mov
cmp
imul
gs
jmp
and
push
jne
xor
jle
pop
add
jb
push
notl
inc
pushf
pop
inc
inc
xchg
stos
lea
icebp
jbe
mov
outsb
outsb
pop
cmc
shrb
push
and
cmpsl
lods
repnz
movsb
je
push
stos
sarb
inc
pop
mov
stos
out
mov
inc
jl
inc
xor
sub
mov
test
scas
ret
xchg
fnstsw
xor
push
pop
jl
testl
lods
je
icebp
ret
and
or
mov
add
js
scas
xchg
pop
rorl
aam
and
fisubs
jno
andb
imul
dec
fidivl
jp
push
repz
aad
out
shrb
stos
sbb
inc
test
push
gs
adc
mov
xchg
addr16
mov
add
cmp
push
ficomps
push
jne
js
inc
and
push
dec
test
cltd
cmpsl
ja
loopw
sbb
xchg
sub
or
xchg
rcl
cmp
ds
stos
and
mov
fsubrl
and
fimull
rcrb
aas
sbb
pop
movaps
fcoms
popl
lret
cmp
push
cmp
sub
fmulp
dec
add
ftst
mov
ljmp
int
adc
scas
fisubrl
scas
add
popa
mov
addb
dec
mov
std
xor
pop
jmp
xchg
popf
ret
add
sbb
inc
enter
into
jecxz
mov
imul
xor
daa
add
dec
int
sub
les
add
imul
ja
mov
imul
arpl
xchg
cs
imul
in
dec
inc
add
stos
mov
psrad
inc
mov
cmp
pop
cmp
dec
and
sbb
sbb
insl
aas
jo
cltd
cmc
call
jp
push
add
aad
cmpb
fwait
les
jl
fcoml
inc
jle
push
push
push
mov
push
repnz
inc
push
and
out
pop
jne
ds
dec
push
sbb
ds
loop
mov
jmp
test
test
out
int3
mov
mov
dec
jmp
je
out
or
bound
addr16
and
pop
or
jne
mov
shll
dec
pop
jne
stos
dec
lret
xchg
scas
fcmovbe
cs
das
xlat
sti
mov
jl
push
mov
cld
outsb
faddp
rcrb
inc
decb
stos
push
jo
add
lahf
cwtl
push
push
jb
stos
nop
aad
movsl
fwait
inc
add
cltd
add
xor
cmp
cld
mov
test
aas
mov
rclb
int3
sahf
push
pop
xor
lods
mov
add
mov
cwtl
imulb
rcll
cmc
pop
adcb
ret
outsl
lahf
or
mov
ret
jnp
in
fidivrl
inc
lahf
sti
popa
popa
sub
enter
xor
cmp
sub
call
push
imul
pusha
mov
shl
mov
in
filds
pop
inc
push
or
jl
jecxz
pushf
test
jne
aas
jecxz
outsb
add
inc
push
mov
lahf
arpl
or
lods
int
cli
jmp
int
mov
mov
iret
cmp
inc
pop
loop
or
scas
jmp
scas
fadds
insl
sbb
jmp
cwtl
or
xchg
test
scas
xchg
jmp
jbe
adc
sbb
adc
aad
aad
aam
jecxz
push
bound
lock
lret
pop
aaa
outsl
push
shll
leave
mov
dec
addb
push
pop
sub
jbe
ret
cmpsl
jae
stos
fimuls
and
fcoms
inc
mov
dec
popa
stc
hlt
mov
mov
jp
sub
lret
pop
dec
test
or
sub
mov
adc
pop
lods
sbb
hlt
nop
std
and
mov
insb
push
xor
popf
nop
imul
dec
sbb
shlb
xor
fwait
adc
mov
sbb
insb
adc
sti
int
xchg
pop
orb
lret
popa
lods
movsb
popf
pop
call
addr16
inc
lea
out
pop
sahf
in
int
mov
lock
xchg
inc
or
mov
mov
pop
xchg
xor
mov
lret
ds
cmp
and
iret
mov
imul
add
mov
mov
addb
ja
ljmp
fwait
gs
lock
xchg
inc
dec
ss
push
out
les
cmpsb
add
xor
sahf
rorl
fildl
mov
cmp
push
mov
jo
test
lock
pop
mov
pop
fadd
aas
rcrb
mov
idiv
fdivl
adc
fs
mov
jmp
xor
xchg
js
xorl
movsl
out
xchg
dec
and
sbb
jno
lret
hlt
xchg
fisubrs
and
insl
outsb
mov
fidivs
in
fnstcw
push
sub
jnp
push
add
stos
cli
addr16
cmp
adcb
adc
jmp
adc
pop
or
add
inc
leave
push
sub
jns
out
outsl
std
imul
push
lahf
mov
cltd
mov
cli
inc
push
dec
lret
mov
rclb
dec
mov
ljmp
or
jo
outsl
pop
xchg
mov
jp
loopw
dec
ja
adc
add
sbb
cltd
or
jmp
loopne
shl
pop
mov
ficompl
insl
mov
pop
cmp
in
jae
jp
mov
dec
icebp
pusha
aas
test
icebp
ret
adc
in
adc
cmp
je
aaa
lock
sbb
mov
sub
or
insl
out
add
test
dec
adc
xchg
jge
in
pushf
xor
add
rcrl
push
adc
ret
mov
icebp
mov
push
dec
add
in
std
xor
lret
xchg
fwait
xchg
sbb
je
sti
out
mov
jns
sbb
cmc
cmpl
cmp
gs
mov
mov
jge
loopne
pop
xor
mov
pop
mov
sub
out
in
dec
ret
popa
ljmp
dec
test
xchg
mov
data16
push
aas
adc
pop
loope
dec
jecxz
mov
adc
js
ds
push
andl
mov
push
mov
pop
ja
dec
dec
xchg
iret
dec
push
adc
sbb
or
not
xchg
pop
dec
cld
out
pop
mov
outsl
gs
imul
pop
inc
xor
push
jmp
jge
cmpsb
pop
adc
imul
push
imulb
lret
jne
add
daa
mov
and
mov
add
inc
nop
push
xor
pop
sub
mov
add
and
orb
add
insl
cmpsl
mov
jle
aaa
and
sbb
into
mov
xor
mov
add
mov
icebp
cmc
lea
mov
insl
jl
mov
cmp
adc
xor
stc
jnp
ret
dec
movsl
test
pop
ret
pop
lods
push
jge
andl
outsl
lock
jp
outsb
or
xchg
push
loope
xor
mov
repnz
stos
mov
jo
or
mov
aam
icebp
cmpsb
in
push
sti
pop
cmovp
jecxz
jecxz
sub
mov
jecxz
out
sub
jmp
mov
mov
movups
aas
add
mov
aas
xlat
cmpl
add
decl
insl
pop
cmp
cmpsl
pop
fimuls
out
sub
cmpps
data16
shll
aad
sbb
adc
pop
jno
and
fisttpl
add
and
imul
pop
mov
dec
xor
sub
mov
inc
mov
mov
jb
sub
ss
sarb
cltd
mov
cwtl
cmpsl
jo
aaa
mov
mov
mov
and
mov
mov
fidivl
jge
mov
sbbl
cmpsl
daa
shll
rorb
mov
pushf
fwait
add
push
add
adc
ljmp
mov
loopne
decl
popf
xchg
mov
dec
ror
data16
cwtl
push
pusha
sbb
mov
in
fistl
ret
pop
sbb
stos
aas
push
jmp
sub
mov
inc
sub
cmp
dec
outsl
test
sub
aas
or
aam
fwait
pop
push
sbb
cmpsb
jge
loopne
outsl
neg
mov
jmp
iret
jae
sub
cld
add
andl
jne
and
and
jmp
mov
stos
push
push
divl
test
cmp
inc
test
scas
in
mov
inc
cltd
xchg
push
pop
dec
or
insl
iret
xchg
dec
and
test
xchg
jb
jno
sub
and
jns
and
cmp
push
in
rsm
push
mov
dec
xor
dec
rep
daa
sub
addr16
rorb
cmc
ja
jbe
push
inc
sbb
test
jb
xchg
cwtl
stos
mov
adc
pop
test
jg
fdivrp
jmp
jb
add
loopne
jmp
fsubl
fstp
jmp
jle
movsb
mov
and
test
xchg
push
loope
jle
cli
movsb
pop
out
leave
js
push
pushf
push
imul
cli
jae
push
mov
pop
xor
xlat
cwtl
jle
add
xchg
cmp
sub
push
mov
insl
shlb
test
fstpt
pop
lock
push
cmp
inc
xor
mull
mov
mov
test
inc
or
pop
loop
xchg
ljmp
mov
hlt
adc
adc
imul
add
adcb
loope
pop
push
aam
jb
mov
mov
movsl
in
push
pop
dec
cmp
pop
lcall
adc
xor
stos
sub
aad
adc
jae
or
mov
aas
lret
pop
imull
or
lcall
nop
pop
decl
aaa
pop
jg
loop
into
fsubrl
adc
jmp
sub
les
pop
lcall
xchg
iret
xor
or
pop
icebp
sub
test
jmp
repz
std
leave
jae,pt
fwait
xlat
mov
icebp
faddp
lahf
mov
xor
add
and
loopne
pop
cld
scas
push
popf
mov
jnp
xorb
popf
pop
pop
mov
das
enter
pop
subl
shlb
dec
sub
subb
ljmp
pop
orb
sub
inc
orl
les
jns
leave
inc
loop
xchg
mov
psrlw
hlt
sub
out
mov
cmp
and
xchg
push
jp
xor
lahf
jl
pop
scas
fwait
lret
int
add
xor
sbb
sbb
push
jb
push
xorb
das
fisttpll
jle
arpl
mov
arpl
dec
sub
arpl
scas
mov
jae
shl
aam
subl
sbbl
int3
mov
fstps
je
in
cmp
cltd
les
stos
mov
mov
inc
inc
test
daa
into
push
pop
negb
scas
js
out
fdivrs
xchg
adc
movsl
adc
jno
sbb
and
inc
rorl
into
daa
shrl
std
dec
xlat
ret
push
scas
pop
out
inc
pusha
movsl
mov
mov
xor
adc
xchg
xchg
lds
add
in
xorl
jle,pn
rorl
add
xor
mov
mov
sbb
pop
fdivrs
outsb
fimull
js
add
jp
push
adc
add
jmp
scas
sahf
das
mov
jnp
pop
or
jne
add
insl
ljmp
shll
inc
popf
das
pop
mov
xchg
fisubl
cmpsb
subb
dec
das
daa
push
dec
in
mov
mov
xchg
push
jno
pop
jae
mov
mov
mov
dec
or
adc
fimull
mov
xchg
dec
fildl
mov
ljmp
and
ret
mov
mov
mov
lods
jns
sub
and
ss
std
push
fld
notl
outsl
adc
push
pop
xor
shlb
add
iret
and
lret
ss
mov
aad
mov
nop
inc
js
push
mov
test
shrl
inc
out
xchg
movsl
int
jne
lea
imul
les
imul
pushf
addr16
out
imul
ss
mov
push
test
mov
add
insb
pop
fdivl
out
iret
arpl
fisubl
or
or
mov
add
jecxz
jmp
push
push
popf
scas
ror
inc
inc
and
test
pop
test
jle
in
int3
call
mov
out
pop
aas
jno
les
push
ret
xor
xor
and
and
clc
popa
dec
dec
push
and
adc
xorb
inc
dec
sub
inc
int
and
sub
sbb
sub
cmp
mov
and
cmp
or
push
push
push
dec
fmul
jl
cld
xor
rol
push
mov
sub
fists
xor
ss
jge
push
xchg
inc
pop
fstl
mov
ret
cmp
fnsave
mov
ljmp
push
sbb
scas
fwait
andl
lds
dec
xchg
lea
xor
xor
insb
clc
test
dec
dec
lret
push
out
sub
movsb
jns
fidivrl
imulb
jge
push
cmp
cs
push
inc
inc
push
negb
sub
sbb
daa
pop
sar
stc
push
fs
jp
mov
xlat
xchg
dec
mov
jb
xchg
xlat
sub
sub
stc
enter
cmp
aaa
pop
sarb
xchg
aam
xor
inc
arpl
mov
push
fwait
out
pop
adc
jb
dec
ja,pt
adc
dec
clc
push
mov
jmp
dec
shrb
inc
mov
hlt
jbe
add
mov
lahf
and
seto
mov
cli
lds
inc
dec
sub
data16
sbb
fdivp
lahf
mov
mov
mov
fdivrs
push
fdivs
cmpl
lods
into
mov
fidivl
or
mov
or
ret
sub
mov
lcall
aas
stc
push
loopne
out
insl
jae
mov
push
adc
loope
jmp
push
dec
fcoml
xor
jns
xchg
pop
rclb
pop
cld
aad
adcl
inc
rorb
add
ljmp
and
and
into
vmptrst
xor
jno
fmuls
or
cli
sub
adc
in
lcall
mov
stc
and
inc
dec
sbb
stc
pop
or
hlt
leave
lret
mov
les
add
push
mov
iret
cwtl
mov
jo
cmp
in
mov
add
pop
pop
xchg
notl
inc
mov
dec
inc
jbe
clc
int
insl
xchg
xor
xchg
punpckhbw
nop
repnz
dec
mov
xchg
and
xchg
mov
push
imul
mov
jns
cmc
roll
xor
cltd
pop
push
sbb
jae
int
stos
data16
dec
shlb
inc
ljmp
repz
and
or
nop
lret
lods
test
int3
pop
pop
lock
pusha
mov
pop
sub
cwtl
push
std
jns
ud0
xor
in
mov
imul
jecxz
jb
repnz
mov
fbld
mov
fnstcw
repnz
rclb
and
sbb
idiv
inc
mov
fbld
pushf
insb
cmp
cmp
sbbl
outsb
or
je
test
lods
aam
insb
bound
mov
mov
push
int
push
sti
adc
adc
xorl
es
xchg
mov
cmpsb
jp
pop
popf
adc
xor
pop
rorb
filds
lock
test
mov
adc
push
popf
xor
fildl
aad
cmpsb
adc
and
xchg
es
jmp
jns
pop
mov
fcompl
shlb
push
das
push
es
or
mov
not
mov
mov
or
dec
testl
pop
js
in
popf
aas
es
cld
lcall
pop
inc
mov
inc
pop
int
mov
mov
cmc
adc
sub
add
jbe
test
imul
inc
jo
movsb
cmpsl
out
and
rclb
andb
mov
or
out
sahf
mov
shll
push
cld
cmpsb
dec
ds
mov
into
std
fdivr
cmp
mov
faddp
imul
xor
adc
aad
inc
loopne
mov
ja
sub
cs
mov
add
rclb
cltd
jo
cmp
dec
or
cmp
imul
cmp
popf
mov
jle
popa
jo
repnz
std
sub
jb
fxch
or
sti
ficompl
xor
movsb
add
pop
cmp
or
inc
cmp
push
les
add
addb
dec
push
dec
or
scas
mov
hlt
add
bound
lods
lods
inc
ret
lock
mov
aad
pop
das
mov
add
sub
add
sbb
xor
jl
scas
push
arpl
daa
ud2
pop
lret
jo
aaa
rcrb
aas
xlat
scas
fadds
es
enter
mov
das
push
mov
pop
add
inc
mov
push
dec
mov
test
cmp
adc
add
out
fsubrl
fsts
popa
mov
or
sbb
sbb
cmpsb
bound
imul
adc
or
and
cwtl
jno
test
or
mov
cmpsl
cld
or
xchg
lds
test
bnd
int
jo
mov
dec
pop
push
mov
inc
into
rcll
addb
or
les
mov
xchg
dec
jo
mov
mov
inc
out
ss
es
iret
aam
lods
jl
loopne
test
add
cs
jno
hlt
rolb
icebp
xor
sbb
jge
mov
or
mov
pop
jnp
aaa
adc
add
ja
cmp
push
pop
or
mov
pushf
cli
movsl
sbb
enter
gs
int3
cmp
out
cmp
cmp
outsb
xchg
addl
xchg
popa
inc
push
pusha
int
lcall
int
adc
jnp
hlt
outsb
mov
inc
cmp
loop
jp
into
jae
adc
inc
mov
push
inc
mov
jb
xlat
add
outsl
adc
mov
jl
ja
inc
movsb
je
xchg
jne
jle
out
sbb
fistl
mov
inc
xlat
test
xor
test
fwait
icebp
lods
out
add
pop
sub
sahf
cli
or
das
out
xchg
daa
adc
push
pop
cltd
cmp
movsl
out
mov
pop
std
loope
mov
movb
pusha
testb
rolb
aam
jmp
xchg
out
loopne
or
pop
mov
cmpxchg
gs
mov
push
add
or
daa
loope
das
jns
xor
jl
rdtsc
scas
pop
or
add
mov
insl
push
arpl
lock
jge
sti
mov
movsb
push
push
mov
aaa
push
push
sub
or
std
pop
jge
push
lahf
aam
shrl
dec
in
and
pop
pop
cmp
and
jb
sub
pop
in
lret
mov
dec
sub
jecxz
test
or
aas
es
fcompl
inc
and
jno
lds
out
out
mov
mov
add
xor
shrb
jne
loopne
cmp
and
sahf
ljmp
xor
lret
loope
and
sub
push
fs
adcl
fmuls
jmp
pop
inc
cmp
dec
jno
fisubrl
or
jbe
mov
scas
mov
pop
cmp
push
sbb
adc
pop
mov
dec
movsl
sbb
mov
push
outsl
out
add
cld
repz
out
ds
int
push
sbb
and
adc
mov
rol
insb
sbb
lds
lret
and
jle
leave
cmp
sub
lock
or
lahf
mov
inc
pop
jne
nop
mov
jo
call
jae
jbe
into
push
or
or
adc
imul
in
insl
xor
add
xor
imul
pop
sar
mov
mov
outsb
adc
cmpsl
push
xchg
popf
cs
inc
cmp
pop
idivb
push
aas
and
inc
pop
daa
adc
aam
js
aad
pop
and
mov
xlat
adc
aas
bound
jle
cmp
adc
insb
pop
or
cmpl
iret
push
adc
and
leave
cmpsl
and
add
cmp
add
loopne
out
mov
mov
movl
mov
dec
jo
int3
mov
xlat
pop
popa
mov
adc
pushf
popa
out
pop
mov
mov
lret
or
cmp
and
xor
daa
inc
std
daa
pop
pop
jne
dec
push
push
sbb
fcoml
pop
mov
in
push
loopne
and
mov
fsubp
in
push
in
cmpsb
pop
sub
mov
mov
add
leave
mov
jmp
ljmp
int
push
dec
repnz
mov
inc
push
add
xchg
lahf
jge
mov
jge
sub
push
add
mov
or
or
cmp
dec
push
xchg
icebp
or
aas
mov
jmp
push
fwait
push
jg
stc
xchg
nop
bound
mov
jmp
jo
pop
lcall
aaa
jge
xor
mov
add
sbb
addl
xor
in
mov
inc
and
dec
lock
adc
clc
inc
mov
ret
jbe
inc
je
hlt
cmpsl
int
jne
repnz
push
int3
mov
sub
sbb
xchg
add
mov
notl
inc
es
aad
lock
rcr
decb
sub
lcall
pusha
test
addr16
fimull
ret
xor
fld
dec
cmp
mov
and
cwtl
shrb
push
xchg
imul
movsl
push
andb
push
pop
add
pop
cmp
in
jb
jle
jmp
cmc
or
jno
push
inc
cmp
add
ds
js
sub
adc
mov
fcoml
xchg
js
mov
pop
adcl
xchg
pop
lgs
add
sbb
jbe
lods
sarb
jb
jmp
push
das
sti
rcll
or
cmp
pop
aas
mov
mov
sahf
dec
outsl
and
dec
scas
jge
lods
add
sbb
inc
sub
aad
imull
xor
inc
pop
or
push
jle
xor
cmp
lret
loop
dec
mov
fildll
loopne
push
fs
les
aam
ss
adc
jp
mov
ror
fs
add
adc
outsl
mov
xlat
es
out
sbb
out
mov
movsb
js
sbb
push
sbb
push
loop
jae
xchg
push
inc
neg
punpckldq
sub
mov
js
divl
shrl
sbb
sub
sbb
adc
xchg
std
ja
clc
xor
sub
lds
cmpsb
int
mov
mov
dec
sub
jl
stos
adc
jae
mov
jae
jg
int
mov
out
xchg
jae
push
outsb
rcr
mov
cmp
xor
lds
xor
dec
xchg
popa
repz
or
ja
adc
add
push
mov
ja
add
inc
mov
dec
pop
sbb
lcall
cltd
pop
test
dec
pop
in
add
adc
lods
mov
push
or
adc
sbb
lods
repz
iret
imul
testl
enter
push
inc
xor
std
div
dec
jbe
mov
out
cltd
popf
inc
add
or
lods
xchg
jne
push
cmp
fsubl
mov
sbb
push
sbbl
sbb
mov
cld
jp
inc
lret
pop
ds
and
jmp
shlb
pop
mov
xorb
cld
push
push
cs
dec
std
popl
xlat
mov
sbb
incl
in
pop
rcrl
rolb
shr
je
xchg
dec
lods
xor
leave
inc
out
pop
and
lods
xchg
call
xchg
push
je
cwtl
movb
sub
int
movsl
es
gs
mov
ja
out
mov
push
loope
cltd
mov
xchg
inc
out
test
mov
fstpl
xor
xor
push
fwait
movsb
ret
mov
jns
push
xchg
insl
dec
popa
jecxz
mov
ds
movsb
dec
bound
int3
or
mov
out
movsl
mov
push
push
jne
dec
xchg
mov
or
cmp
pop
pusha
push
pushf
ja
jo
xor
xchg
int3
in
out
mov
sub
ret
mov
movsl
cmp
and
inc
cmp
push
mov
int
comiss
and
xor
sbb
push
es
push
push
or
ljmp
pop
cwtl
loope
mov
sub
jg
cli
inc
pop
roll
nop
sub
rorb
int
sbb
inc
push
pop
loopne
mov
into
xchg
in
add
jg
sub
out
xchg
and
in
out
js
stos
sbb
sub
ret
jae
xchg
or
leave
fs
sarl
movsb
stos
das
call
pop
sub
out
es
ret
cmc
cmpsb
test
and
scas
inc
jae
push
mov
inc
subb
push
push
jmp
andl
add
leave
mov
lcall
xchg
push
bound
cmp
insl
mov
xor
xchg
sbb
stos
mov
mov
or
add
addr16
enter
pushf
jecxz
or
jns
cmp
aam
and
adc
enter
pop
divl
cmpsb
call
cld
push
sbb
lret
shl
ret
push
mov
in
add
sti
pop
xchg
push
xchg
pop
pop
mov
mov
adc
jg
cld
xchg
repnz
or
mov
out
mov
popf
lds
jae
ja
in
enter
loopne
and
aas
push
fcmovnu
les
ljmp
xor
jmp
repz
jbe
sbb
mov
hlt
ss
hlt
add
add
xor
loop
daa
jp
jbe
hlt
movsl
mov
repnz
fs
sarb
jbe
ds
sarl
pop
push
sub
or
dec
jnp
pusha
fsubrs
enter
int
mov
inc
jmp
xchg
cltd
insb
jecxz
sub
cld
sbb
xor
cmp
pop
adc
bound
fsubrl
cwtl
lret
xchg
jl
xchg
xchg
in
imul
dec
inc
je
scas
cmp
dec
push
imul
inc
jmp
xor
scas
leave
pop
mov
popa
dec
cmpsb
and
mov
cmp
ret
xor
mov
inc
mov
cs
movsl
inc
xor
cmp
push
jge
jge
sub
lods
lret
test
fwait
cmp
pop
enter
mov
hlt
fimull
ljmp
push
sbb
fs
out
scas
sbb
xor
cltd
add
sub
sub
mov
in
loopne
xlat
jbe
test
sbb
add
pop
addb
aad
lea
lods
mov
imul
fmuls
movsb
adc
iret
cld
mov
loopne
and
jge
or
or
mov
jbe
cwtl
mov
or
dec
push
lahf
or
popa
addr16
cmp
add
jb
insb
imul
ss
outsl
push
inc
js
xor
dec
cmc
shlb
outsl
fwait
jge
outsb
and
sub
push
pop
inc
out
lcall
dec
push
pop
mov
push
cld
jp
lret
fidivrl
fnsave
ja
jmp
loope
xor
push
sub
and
push
icebp
lret
or
xchg
stos
es
lahf
es
push
scas
scas
pop
mov
outsb
jae
pop
jne
int3
sti
jge
mov
pushf
mov
fmull
xchg
cld
insb
in
jne
nop
mov
aad
and
jmp
fcmovnbe
out
orl
pop
mov
idiv
sbb
pop
inc
sub
xor
xlat
push
lea
or
leave
xor
int3
sub
roll
push
push
cmp
jg
jo
stos
sar
fmuls
pop
mov
outsl
mov
mov
int
mov
push
popf
dec
cmp
fs
stos
sub
inc
int3
stc
fcmovbe
push
jmp
rcll
in
mov
clc
icebp
aas
es
mov
fidivrs
orb
repz
add
outsb
xlat
call
loope
movb
inc
and
loopne
aas
mov
push
mov
dec
xchg
inc
sub
lea
ljmp
xchg
push
flds
in
faddl
popa
aas
mov
cmp
loopne
nop
mov
push
int3
jns
mov
jmp
dec
mov
add
fstpt
sub
mov
out
push
lret
adc
jae
dec
sub
jb
push
sub
lcall
cmp
inc
cmp
xchg
fs
fnstcw
mov
xchg
and
popf
in
ljmp
ret
jg
pushf
or
lret
outsl
cltd
mov
cmp
jge
ljmp
or
mov
pop
jbe
clc
adc
int
jno
cld
xor
pop
adc
popf
or
push
pop
js
loop
outsl
fldenv
jbe
dec
cltd
dec
scas
inc
or
pusha
icebp
fsubr
jl
je
xchg
dec
xor
lret
jno
pushf
adc
mov
mov
or
jo
push
daa
ret
aaa
pop
bound
mov
add
jbe
mov
addr16
pop
pusha
inc
mov
mov
jp
sbb
xchg
test
sbb
push
pop
rolb
adc
ret
sbb
scas
gs
adc
mov
imul
out
and
fcomps
lret
add
sub
loop
imul
cmp
cs
shll
inc
in
arpl
aad
sub
iret
xor
sarb
rclb
and
or
lcall
ret
inc
lcall
adc
xchg
mov
or
push
out
xor
fisttpll
cmpsl
dec
jne
stos
lea
cmp
fcompl
gs
and
shrb
xchg
dec
pop
cmp
loop
int3
orb
stos
pop
cmp
xor
jnp
inc
inc
mov
jno
nop
lahf
aaa
js
dec
and
loopne
pop
stc
sub
sahf
mov
cs
and
add
push
mov
mov
xor
and
int3
icebp
or
add
or
movsl
in
scas
addb
popa
xor
loopne
inc
jl
movsl
into
aas
ds
repnz
xchg
ror
adc
cmpsl
xchg
cmpsl
adc
out
lds
aas
inc
hlt
lcall
and
cmpsb
dec
loop
mov
cmp
mov
push
pop
dec
push
cmp
inc
pushf
xchg
pop
enter
xchg
mov
and
pusha
mov
or
hlt
aas
es
imul
xchg
pop
out
dec
pop
fistps
sbb
mov
cld
mov
cs
ficomps
insb
cmpsb
ret
test
setg
shlb
push
xor
push
mov
jb
daa
mov
fnstcw
std
fisubrl
lcall
jnp
add
inc
addr16
ja
xchg
or
jecxz
mov
fcom
add
popf
dec
pushf
add
pop
cltd
iret
mov
mov
fnstcw
in
push
rcl
and
mov
iret
gs
sub
fsubr
data16
pop
push
popf
aad
mov
lds
test
jmp
out
xchg
and
lods
stc
cltd
sub
pop
xor
stos
imul
lahf
jle
push
es
mov
mov
sbb
insl
mov
sub
dec
jg
insb
int3
pop
repz
inc
push
dec
lret
call
or
decl
inc
stc
mov
pop
fcomps
add
fdivs
fistl
bound
xchg
mov
push
push
jo
mov
cmp
push
shl
je
jbe
inc
popf
jnp
jg
popa
add
sbb
push
lret
push
lds
aaa
mov
dec
es
mov
popf
xchg
or
xor
mov
mov
pushl
sbb
dec
add
pop
in
and
mov
sub
arpl
movsb
push
inc
mov
or
idivl
dec
rorb
cmp
xchg
mov
and
pop
cli
jae
testl
outsl
pop
inc
aad
or
lahf
int
inc
mov
push
pushf
cmp
mov
jo
loop
movsb
std
sbb
inc
fdivp
cs
bound
inc
shlb
and
stos
cld
jbe
inc
out
clc
vandpd
inc
das
int
jge
shl
jb
ss
xchg
pop
es
test
adc
jle
xor
rol
xor
aas
sub
lods
lret
push
out
scas
mov
jmp
in
inc
scas
pusha
fsubs
jge
adc
fwait
xor
inc
mov
cwtl
cli
not
lods
mov
pop
ss
test
cmpsl
hlt
scas
xchg
jns
in
mov
cmc
adc
sub
jbe
es
mov
dec
out
xor
enter
mov
out
dec
jne
into
push
xor
dec
add
jecxz
or
sbbl
sub
mov
xor
or
or
pop
push
movsl
inc
in
in
sub
mov
or
nop
inc
aad
sbb
mov
test
std
loopne
xor
cwtl
xchg
mov
popf
stc
dec
pop
repz
add
pop
push
sbb
sarl
sahf
ds
out
mov
mov
out
loope
pop
push
outsl
filds
mov
push
mov
push
repz
int
xchg
loope
jmp
hlt
into
push
xor
pusha
out
sbb
cmp
dec
mov
in
dec
jge
fcomps
stos
addb
dec
sub
mov
gs
lea
cltd
lcall
xchg
mov
std
or
clc
mov
adcl
cmp
xor
xor
rorb
jbe
addl
sbb
out
jmp
test
mov
mov
test
fisttpll
pop
mov
outsl
push
fnsave
fs
and
add
mov
xchg
rorb
leave
jbe
xchg
lea
lds
cmp
aas
notl
fsts
add
in
out
dec
jp
out
fstps
or
or
pushf
jns
test
xchg
loopne
sub
add
jg
jecxz
into
fildl
iret
mov
jne
xor
pop
lret
lods
ret
mov
ljmp
sub
mov
push
mov
jo
add
js
dec
fsubs
mov
adc
scas
ja
cmp
shl
stos
into
xorl
mov
rclb
cmp
add
ja
inc
in
cmc
cmpsl
xor
and
xlat
insl
shlb
inc
xchg
mov
push
shr
and
outsb
pop
in
iret
lahf
int3
fwait
jmp
int
push
push
sbb
lock
dec
int
test
repz
and
jb
mov
leave
sar
popa
test
pop
sub
push
scas
and
int3
sahf
fs
xchg
pop
les
pop
sti
cmp
fisttpll
jmp
inc
mov
dec
jmp
pop
pusha
xchg
push
and
cmp
push
mov
pop
jge
dec
lcall
in
mov
cld
add
sbb
jp
fldenv
sahf
sbb
push
jge
add
xorb
js
in
xor
ret
jb
sbb
fisubl
aas
shlb
xchg
and
insb
mov
dec
xchg
pop
add
rclb
bound
loopne
mov
mov
mov
in
dec
xchg
flds
mov
lds
enter
sarb
mov
jge
jge
dec
into
wbinvd
mov
sub
push
add
mov
mov
push
dec
cmpsl
je
and
insl
mov
or
imul
cmp
mov
and
mov
ljmp
push
arpl
lods
repz
pop
scas
stos
push
pop
jbe
jmp
daa
ss
insl
mov
mov
and
popa
and
jae
add
inc
and
lods
and
adc
test
and
pop
nop
insl
push
loop
xchg
cli
cmp
add
jns
test
adc
fbstp
faddl
adc
fcmovne
dec
pop
xchg
jmp
lcall
rcr
cmp
dec
push
pop
inc
fisubrl
fcomps
in
cli
push
ds
mov
pop
add
mov
fs
dec
jmp
aaa
push
lods
cmpsb
xor
das
ljmp
xor
mov
xchg
jl
je
fists
xchg
jmp
mov
rcrb
mov
cmp
stc
jmp
adc
stos
insb
and
xchg
mov
andb
jns
out
aad
fisubrs
inc
pop
push
sbb
je
imul
dec
bound
pop
loopne
push
pop
es
mov
adc
cs
ficompl
mov
jmp
jbe
lret
cmp
mov
adc
sub
pop
outsl
test
and
push
pusha
fwait
adc
xchg
test
mov
push
movsl
cmc
and
clc
aaa
arpl
jle
cmp
cli
push
pop
das
and
lret
add
xchg
daa
jae
mov
pop
sahf
div
fmull
popf
lcall
push
stc
push
xor
bound
loopne
aad
jmp
mov
mov
test
pop
fwait
loop
dec
ret
xor
mov
sbb
jle
jl
cmpsb
sahf
xor
xor
push
imull
das
adc
cwtl
and
adc
xchg
xchg
ficoms
movsb
int3
test
jecxz
sub
pop
aaa
push
cmpsl
inc
leave
adc
jbe
add
mov
adc
test
sub
mov
xor
mov
push
jb
ja
mov
bnd
dec
xchg
pusha
adc
pushf
test
sbb
je
jne
jnp
push
test
fiadds
mov
mulb
cmp
add
loopne
pop
addr16
ss
add
jb
repnz
rcll
dec
cmp
xchg
cltd
std
dec
scas
fildll
xor
int
add
mov
pop
xchg
mov
cmpsl
mov
cwtl
cmpsb
add
inc
sub
pop
in
push
jno
xchg
push
mov
lods
mov
or
enter
xor
xchg
and
pop
mov
mov
adc
into
mull
cmpsb
stos
icebp
in
push
xchg
mov
pop
call
in
fadds
dec
ja
and
jp
mov
and
sub
xor
imul
sub
or
hlt
inc
leave
mov
add
stos
loop
std
and
sub
adc
sbb
or
fisubs
xor
sub
in
sahf
mov
mov
push
lcall
cmc
and
cltd
push
sahf
sbb
push
rorb
sub
cmp
je
add
mov
adc
dec
pop
test
cmc
push
pop
das
dec
sbb
xor
push
iret
sbb
rcrl
sub
dec
popa
js,pt
dec
aad
pop
xor
movsl
fwait
outsb
test
pushf
mov
or
ja
jns
dec
mov
xchg
jle
sub
ret
dec
xor
andb
aam
mov
scas
call
sub
daa
lods
jecxz
call
shll
rol
in
cs
je
ljmp
pop
cmp
dec
lds
or
cli
sbb
in
addr16
xchg
dec
pop
imul
mov
mov
jb
xchg
dec
xchg
jmp
inc
mov
pushf
jle
lea
add
cmpps
rcl
mov
mov
cmc
aam
testb
xchg
aaa
cmp
out
ja
pop
and
or
sahf
cmc
leave
sbb
outsb
pop
repz
movsb
cmpsl
js
mov
ljmp
cmc
xchg
repz
test
pop
imul
fimuls
lahf
lret
aas
xlat
add
push
out
test
and
push
test
jae
idivl
mov
in
sahf
cmp
jo
imul
pop
imul
sub
ds
jp
stos
and
dec
push
clc
dec
in
filds
mov
dec
jnp
or
mov
lret
mov
outsl
movsl
mov
pop
fs
mov
insb
xor
ljmp
inc
jle
pop
mov
xlat
lea
arpl
mov
enter
cmovle
cmp
cld
shll
pop
ljmp
in
pop
mov
movsl
lret
bnd
pop
jp
pop
sbb
aad
xchg
mov
sbb
add
mov
aas
in
inc
cmpsl
imul
push
add
mov
das
adc
mov
or
out
fdivrp
dec
adc
fbstp
inc
lret
xor
adc
js
pop
aas
pop
fwait
xlat
lea
pusha
ret
repnz
cli
cmc
or
jge
and
adc
stos
test
xor
lock
fsub
fs
inc
aam
fcomp
pushf
and
cmp
adc
jne
mov
notb
icebp
bound
sarb
rcr
sbb
enter
sarl
push
test
mov
lcall
cmc
mov
and
mov
ret
leave
fsubl
adc
lods
dec
fs
nop
out
nop
shlb
clc
lock
hlt
fs
je
sub
test
call
mov
add
mov
mov
fsubs
xchg
sub
xchg
push
mov
ss
inc
inc
inc
pop
rcrl
scas
imul
or
xchg
int3
into
ljmp
mov
in
and
jecxz
rcrb
jae
jge
ficomps
and
popf
mov
in
rclb
imul
jnp
add
adc
loope
lods
mov
cmp
cmp
or
cli
scas
jnp
or
pop
mov
aad
aaa
into
cmpsl
cmp
fstpt
lret
gs
int
inc
sbb
cmp
mov
pusha
sub
aaa
push
out
nop
xor
pop
lods
cltd
cmc
mov
test
adc
dec
outsb
sbb
add
fwait
ja
out
fstl
int3
pop
dec
add
add
in
das
pushfw
imul
adc
or
cmp
js
add
push
sti
dec
das
sysenter
cmp
pop
jbe
sbb
sbb
int
outsb
cmpsb
xchg
push
or
cmp
fwait
jecxz
pushf
adc
test
shll
mov
xchg
pusha
cwtl
shlb
jmp
popa
mov
int3
inc
or
cmpsl
cmp
movsb
call
hlt
xor
ficoml
pop
inc
lods
daa
sbb
mov
mov
fbstp
sbb
xchg
aad
mov
mov
pop
mov
xor
adc
cmp
mov
ss
ret
mov
lea
icebp
rcrb
scas
cld
ds
out
mov
sbb
inc
pop
into
stc
fdivrl
push
adcb
pop
sti
add
jb
adc
movsb
sub
inc
jge
popf
sarb
cld
imul
lods
sub
inc
movsl
in
sbb
in
and
loop
pusha
dec
jbe
xchg
inc
dec
push
inc
adc
dec
subb
xchg
shll
mov
std
dec
push
fiadds
cli
pop
sbb
mov
in
flds
int3
sub
call
fsubs
jmp
sbb
lret
ljmp
int3
lea
icebp
call
sbb
andl
pushf
mov
dec
push
addl
pop
cld
jo
adc
pop
int3
jp
rorb
inc
or
fistps
jns
scas
xchg
adc
in
test
nop
fldenv
dec
jmp
loop
dec
cs
int
xor
daa
sbb
idivb
mov
and
cmp
mov
lods
mov
pop
adc
cmp
ret
push
adc
push
lret
xlat
or
sub
xchg
xchg
movsl
daa
inc
test
sbb
mov
push
test
inc
pop
loope
push
add
call
sahf
loop
sub
sbb
push
sub
jl
jno
pop
cli
inc
lods
into
xor
lock
orb
push
dec
fs
pop
popf
aad
xor
mov
lahf
mov
outsb
daa
sahf
scas
scas
into
sbbl
loope
cmp
inc
stc
sbb
out
xor
push
xchg
fists
loop
push
add
lock
lea
dec
push
xlat
or
sub
int3
loopne
and
imul
rolb
fucomp
jmp
shr
daa
push
mov
mov
xchg
call
inc
or
cmpsb
inc
clc
into
enter
mov
pop
pop
push
outsl
push
loop
sub
mov
adc
jmp
test
movsb
pop
xchg
je
sahf
dec
cld
push
cwtl
mov
push
lods
mov
sti
mov
pop
or
filds
pop
xor
fnstsw
scas
icebp
or
sub
cltd
push
mov
fcoms
hlt
cmpsb
sbb
add
daa
out
pop
mov
ret
repz
sbb
mov
pop
dec
fistps
js
out
arpl
or
dec
push
mov
fmulp
jbe
arpl
leave
pop
sbb
inc
jl
mov
xlat
xlat
fcoms
add
mov
incb
test
lock
mov
xchg
int
inc
sub
cld
enter
jg
mov
cmp
push
pop
mov
mov
or
inc
jns
push
lock
mov
call
xchg
jbe
fstps
xlat
lcall
mov
hlt
pop
pop
lods
outsb
jo
pop
sbb
sbb
ficomps
mov
insb
shrd
dec
add
stos
rcrb
xchg
add
mov
repz
aam
pop
pop
cltd
push
mov
pop
enter
dec
lods
mov
sbb
jae
out
mov
aaa
test
jmp
in
andb
push
call
cwtl
cmovbe
cmpsl
xchg
xorl
fndisi(8087
imul
pop
push
fs
stos
cmp
ja
xchg
inc
jmp
mov
add
fimull
jmp
mov
or
or
sbb
cmp
push
push
rorb
bnd
into
xchg
lcall
add
rclb
sbb
adc
pop
call
mov
xor
adc
xor
sbb
js
andb
xchg
sub
inc
or
pop
xor
mov
test
xchg
stos
je
pop
popf
inc
jo
pop
jbe
mov
insl
clc
push
jae
ret
fnsave
shlb
inc
loop
ret
pop
sub
inc
fs
arpl
orl
arpl
xchg
jb
imull
into
out
lds
into
xchg
or
pop
and
sti
pop
aas
dec
loopne
xchg
addr16
inc
pop
es
cmpsl
mov
xchg
xor
nop
cmp
fiaddl
xchg
mov
loop
push
sbb
call
aad
lcall
mov
scas
add
xchg
lahf
jg
mov
cltd
push
fdivs
les
push
cmp
fisubs
cmpsb
mov
and
rep
pop
push
or
orb
popa
sbb
pop
add
adc
out
sbb
call
ret
repz
dec
mov
ja
add
push
push
dec
push
dec
sti
lock
push
shlb
dec
ror
inc
out
add
leave
xor
js
sbb
and
sbb
lret
in
aas
daa
test
aas
sahf
add
xchg
mov
bound
mov
test
sub
add
xchg
aam
inc
outsl
scas
sbb
inc
add
add
cmp
and
les
push
dec
xor
pushf
mov
adc
imul
dec
daa
push
and
mov
mov
ja
leave
push
subb
push
cmp
daa
push
rcrb
stos
pusha
cmp
enter
int3
push
mov
mov
mov
cmpsb
inc
dec
cld
sahf
scas
insl
pop
dec
clc
xor
mov
inc
push
inc
arpl
jns
inc
pushf
ficomps
adc
call
adc
aad
arpl
cmovb
rclb
mov
xchg
int3
fld
filds
popf
cs
clc
jbe
sub
sub
sbb
test
jb
xchg
pop
push
sbb
je,pt
aad
sahf
sbb
insl
inc
pusha
ffreep
pop
push
cmp
insl
and
sub
add
ja
cli
imul
cmp
out
xor
das
push
std
adc
addr16
mov
in
cmp
stos
lods
fildl
aad
int
inc
loop
mov
je
stos
lods
lcall
sub
fwait
das
push
push
cmp
mov
out
push
out
scas
scas
mov
imul
cmp
dec
bound
pop
mov
pop
adc
aaa
xchg
test
cld
or
pop
ss
cmp
mov
es
inc
les
pop
js
cli
sahf
daa
inc
mov
xchg
push
and
mov
adc
out
dec
mov
cmc
aam
lret
sti
addr16
push
fidivrl
pop
fdivs
cmpsb
ja
movsb
popa
rcll
adc
add
sbb
mov
xchg
push
pop
pop
sub
leave
or
loope
lea
cmpsl
cmp
jl
lds
inc
jne
inc
fistps
mov
add
jge
and
lret
sub
shrl
fsub
mov
mov
xchg
cltd
stos
ss
repnz
out
push
in
dec
mov
sub
xlat
xor
out
jo
push
nop
mov
js
cwtl
mov
adc
mov
pop
sub
mov
mov
mov
test
rcrb
les
inc
jnp
in
out
out
movzbl
xor
shll
and
movsb
mov
mov
mov
fstpt
addps
push
adcb
idivl
xchg
roll
ljmp
mov
jne
filds
ret
or
cmpsb
cs
adc
in
icebp
add
fadds
dec
or
sub
jo
dec
int3
int
out
mov
cmpsb
jbe
mov
insl
or
orb
add
stos
jno
mov
cmpsb
ljmp
jb
mov
iret
jb
sub
leave
shll
test
out
dec
push
fimuls
push
xchg
lret
lea
push
push
inc
bound
out
push
mov
insb
push
adc
loopne
add
jg
inc
xchg
inc
jns
mov
aam
fsubrs
cmovle
cs
aam
xchg
addr16
cwtl
stos
fistps
mov
aam
mulb
sbb
mov
mov
sub
jp
and
push
icebp
push
out
nop
pop
fldcw
sbb
push
scas
inc
mov
sub
xor
sti
cmp
mov
outsl
js
xchg
cmp
push
mov
shrb
inc
dec
lahf
sub
notl
bound
sub
jne
insl
inc
mov
cmp
into
jne
gs
hlt
mov
mov
push
sbb
movsl
cmp
inc
mov
cmp
jae
sbb
dec
mov
xchg
xchg
movsb
icebp
imul
pop
jl
cs
xchg
jo
and
sbb
mov
jno
lods
jo
rcrb
pop
add
sbb
lea
cmpsl
stos
cmp
in
and
push
xlat
roll
mov
cmp
cmc
cmpsl
aam
pop
mov
pop
dec
outsb
mov
dec
ret
mov
xor
sub
and
inc
sbb
mov
loop
cltd
cmc
clc
mov
and
lods
jle
inc
push
push
mov
scas
jo
mov
loope
add
mov
xor
jmp
je
fs
or
mov
sub
mov
ficoms
ss
mov
mov
and
add
mov
or
nop
js
orl
xchg
jge
cmp
xchg
andb
ljmp
ret
jle
bswap
pop
stos
outsl
dec
push
lock
sbb
jge
sbb
jns
daa
mov
fsubrs
xchg
sub
lret
fldenv
push
xor
jge
mov
mov
cmp
push
xor
and
cwtl
dec
adc
mov
daa
or
iret
cmpsl
movsb
movsb
cmp
xchg
xchg
lock
mov
inc
add
mov
adc
enter
mov
ljmp
or
out
loope
push
dec
or
jp
sbb
in
fdivl
inc
xchg
and
sti
fcmovbe
aas
cmc
jmp
mov
in
repnz
shrl
sbbb
arpl
pop
sbb
adc
jle
pusha
in
out
shlb
jbe
pop
sbb
cmpb
pop
out
dec
fdiv
jo
xchg
insb
add
xor
movsb
add
pop
inc
mov
lret
xchg
mov
out
jbe
dec
push
mov
daa
out
js
mov
scas
xchg
pop
popl
mov
ljmp
filds
clc
mov
cld
fsubrs
cmp
movsl
jno
dec
inc
in
pushf
outsb
lahf
bound
xchg
xchg
lds
out
or
aad
int3
jg
or
stos
ffreep
sti
dec
mov
sub
js
div
scas
ret
add
mov
cwtl
add
in
xchg
mov
jo
xchg
fdivp
adc
insb
mov
pop
imul
insb
push
pop
xor
cmpsb
imul
ss
test
pop
inc
jmp
enter
mov
mov
mov
mov
add
lahf
in
aam
xchg
nop
dec
sahf
out
cmp
mov
std
icebp
jo
jb
repnz
fimuls
loopne
jg
cmp
add
out
add
mov
leave
das
mov
add
and
je
std
pop
andl
daa
dec
add
sbb
ss
sbb
test
addr16
addb
jg
mov
sub
jmp
and
iret
cmp
jbe
push
lahf
cmp
dec
dec
data16
cmp
pop
imulb
sub
iret
and
xlat
pop
inc
sbb
mov
xchg
jmp
out
pop
or
cmp
dec
loop
orb
ss
test
sbb
push
dec
int
xor
dec
sbb
sub
push
inc
and
adc
mov
jg
xchg
inc
ret
out
das
jmp
out
loope
mov
test
ret
aas
xor
jecxz
insb
lods
ljmp
orl
pop
cmp
stos
pop
cltd
xchg
push
pop
cwtl
xchg
popa
les
mov
data16
cmp
xchg
adc
js
pop
inc
inc
sbb
sahf
popf
arpl
sbb
mov
iret
sbb
and
gs
repnz
adc
dec
repnz
or
push
xchg
sub
mov
and
cmp
lret
mov
push
adc
xchg
lcall
and
xchg
int
scas
mov
jno
xchg
push
inc
push
in
stos
call
hlt
mov
mov
pcmpeqd
adc
pop
lret
clc
mov
xor
push
hlt
sub
enter
notb
jb
xchg
pushf
lods
sub
mov
cli
xor
repnz
ljmp
imul
ja
jmp
das
seto
fidivrs
inc
push
imul
test
sub
andb
jae
pushf
pop
pop
inc
pusha
xlat
and
xchg
push
out
iret
popf
insb
cvtps2pi
or
jbe
int3
sub
rcr
dec
sahf
mov
jecxz
repz
or
inc
adc
cmpl
sbb
push
or
ret
xchg
les
sti
and
les
sub
out
repnz
std
rcr
xlat
xchg
sub
sub
jno
aad
lods
pop
scas
fs
stos
jo
or
dec
add
mulb
rcll
xchg
loop
pop
push
sahf
fstps
mov
andb
shl
test
sbb
leave
xchg
dec
icebp
shrb
sarl
or
jle
adc
mov
cli
cld
push
mov
and
pop
lret
cli
push
negl
sti
inc
xchg
outsb
adc
push
mov
in
adc
push
pop
stc
stos
je
out
lret
stos
sarl
les
adc
sbb
mov
or
push
pop
hlt
pop
mov
lods
test
xchg
ds
jno
in
add
push
in
cmp
shll
data16
jl
fisubl
push
scas
adc
mov
inc
ljmp
xchg
lods
xchg
out
inc
test
or
or
add
jge
addl
sub
mov
loop
outsl
cwtl
jle
mov
inc
test
stc
or
nop
or
pop
xchg
push
mov
pop
lcall
push
or
outsb
add
fsts
iret
cli
enter
cmp
and
push
xchg
push
push
push
aad
mov
dec
sub
dec
add
push
push
pop
loope
scas
sbb
enter
xlat
mov
cmpsl
pop
inc
xchg
int3
xchg
cmp
mov
ss
xor
je
mov
mov
jl
imul
xor
jb
mov
mov
stc
and
mov
lods
out
push
xor
fwait
adc
int
rcrl
movsl
fistl
sub
sbb
push
mov
push
xchg
cmpsl
jne
cmp
push
repz
sbb
pop
jg
dec
aaa
das
xor
jecxz
pop
add
xchg
fsubrl
adc
jne
cmp
int
mov
std
daa
imul
mov
int
push
xor
pusha
popf
leave
pop
sub
jne
xor
jp
push
std
add
lret
in
lcall
cld
mov
iret
int3
test
inc
test
sub
rcr
mov
push
pop
bound
iret
jbe
popf
mov
lret
aam
inc
inc
pop
hlt
mov
mov
lods
or
leave
dec
push
loopne
mov
jo
fwait
mov
cwtl
jp
mov
fucomip
hlt
cld
push
into
stc
testl
rcrb
gs
push
mov
gs
cmpsl
mov
or
gs
data16
cmpsb
ljmp
sbb
jnp
or
and
icebp
mov
es
pusha
mov
fisttpl
shlb
das
xor
inc
xor
imul
popf
lock
push
pop
adc
xor
adc
mov
mov
push
cmpsb
addr16
adcl
dec
push
cltd
out
bnd
xor
cwtl
push
fimuls
out
inc
cmp
sub
mov
into
jns
cmp
xchg
xchg
movsl
in
push
jl
adc
xchg
inc
cmp
mov
mov
rorb
inc
cmp
sbb
nop
rcrb
dec
cwtl
out
fwait
idiv
insl
das
and
call
insl
ds
push
dec
mov
pop
pop
mov
clc
sbb
lret
mov
sbb
adc
pop
lea
inc
or
dec
dec
and
cmp
inc
mov
arpl
insl
leave
mov
jg
push
mov
jecxz
cmp
pop
dec
es
inc
pop
xor
dec
stc
jb
sahf
inc
rcll
test
sti
stos
jne
fs
push
pop
je
fmul
bnd
pop
jecxz
test
cltd
add
shrb
stc
sub
popf
mov
hlt
push
mov
mov
push
adc
testl
and
ret
je
push
lret
sbbb
mov
mov
fists
daa
xor
sub
xchg
sbb
dec
aam
pop
add
inc
sub
jg
xchg
cmpsb
stos
cmp
or
hlt
in
xchg
mov
ror
sub
testl
or
in
mov
testl
or
imul
pop
push
or
lret
dec
mov
mov
fisubrl
jnp
lret
pop
xchg
mov
mov
fists
and
lcall
cmp
xchg
fadds
fadds
out
das
arpl
adcl
xchg
mov
rolb
mov
jnp
add
xchg
jbe
cltd
addr16
sbb
in
xchg
jns
dec
xor
sbb
pop
xor
inc
lock
fisttps
xchg
lods
cmc
mov
ja
sbb
scas
add
xchg
loop
fstpt
je
pop
push
lods
xchg
hlt
sahf
out
cmp
dec
hlt
sub
dec
dec
test
dec
ds
das
pop
out
xor
pop
sbb
sbb
fstps
lock
stc
add
inc
cmc
xor
clc
insl
neg
xchg
mov
dec
inc
int
cmp
stos
xorb
mov
ja
add
mov
in
add
jp
or
mov
cwtl
push
stc
push
and
cmc
adc
sub
xchg
mov
mov
aaa
mov
outsl
xchg
lcall
or
add
jae
fs
imul
repnz
or
or
inc
popf
aaa
jbe
cmp
ljmp
out
or
pop
pop
popa
rolb
lret
lret
add
jle
push
iret
or
jmp
imul
test
sub
mov
dec
les
push
xor
je
push
dec
pop
ret
lret
sbb
xchg
push
fwait
test
jg
dec
out
jmp
scas
movsl
addr16
test
mov
mov
repz
inc
dec
mov
adc
ret
add
daa
and
push
leave
add
pop
lds
or
cs
pop
pop
push
out
adc
sub
or
or
lods
inc
lea
mov
jl
enter
dec
lods
outsl
jg
dec
mov
imul
shlb
hlt
mov
or
out
movsl
aad
mov
inc
xchg
pushl
jno
mov
jns
push
cli
mov
popa
push
lods
or
repnz
push
dec
or
xlat
push
fcoms
push
jmp
test
xchg
mov
push
mov
sub
fcmovb
mov
jmp
dec
xor
test
jbe
sub
sub
pop
jl
enter
cmp
pop
je
fstps
mov
daa
xchg
fs
jne
arpl
and
mov
or
call
mulb
and
lea
xchg
mov
fnstenv
decl
xchg
sarb
in
sarl
adcb
push
mov
dec
sub
es
fstps
fcmovne
adc
pop
dec
sbb
mov
sub
and
clc
loop
lea
jmp
std
push
mov
mov
sub
pop
imulb
lcall
cltd
and
rol
fidivrs
sub
mov
sub
mov
rcrl
scas
outsl
add
and
pop
loop
sub
adcb
jne
loopne
mov
mov
outsb
jae
dec
stos
or
adc
push
mov
outsb
adc
addl
inc
in
aam
pop
or
and
pop
fs
xor
push
dec
push
inc
das
sarb
rclb
push
xor
jo
mov
nop
xchg
icebp
mov
add
xchg
imul
xchg
mov
cmp
mulps
aad
sub
and
shll
lret
dec
push
lds
loopne
push
cmpsl
mov
out
inc
aad
pusha
mov
rcll
inc
inc
jnp
xor
sub
stos
fisubl
cmp
das
icebp
pop
fwait
cmp
xchg
adc
mov
fsub
fs
mov
ja
push
test
arpl
sbb
mov
fwait
out
adc
xor
nop
insl
jge
stos
popf
add
movsl
lods
enter
insb
push
sub
outsl
or
repz
enter
int3
sbb
das
pop
mov
cmp
xor
outsl
jge
popf
lods
cmp
das
dec
cli
bound
pushf
fbstp
add
aad
into
test
call
push
leave
adc
sahf
fst
sub
lahf
xchg
jecxz
dec
cltd
je
dec
inc
dec
dec
push
ja
adc
or
mov
mov
cltd
scas
pop
push
jmp
lods
add
and
fs
in
inc
xchg
inc
mov
mov
popa
xlat
mov
pop
xchg
icebp
movsb
cmp
imul
adc
mov
add
jnp
and
jns
insb
fstps
dec
xor
lods
mov
push
out
movsl
imul
daa
inc
cwtl
mov
sub
rcll
or
out
jbe
icebp
idivl
xchg
out
sub
imul
cltd
cli
stos
xchg
adc
fldcw
data16
adc
fcmovnu
pop
fcoms
data16
push
or
sbb
and
data16
shll
and
adc
lcall
mov
add
cmc
insl
insb
vpmacswd
xchg
dec
or
dec
push
dec
stos
test
fwait
and
push
mov
or
pop
popf
adc
fnstenv
and
xchg
sbb
outsb
lds
xor
nop
xor
mov
cmp
fcomps
pop
pop
sbb
inc
leave
sti
sub
xchg
lcall
jg
icebp
cld
gs
sti
push
jno
pop
clc
sbb
sub
scas
mov
leave
xchg
fidivrs
fldcw
icebp
sbb
mov
aas
and
jne
int3
stos
vmovlps
and
jbe
mov
mov
aas
mov
inc
cltd
ds
sbb
shll
adc
xchg
mov
fcmovnu
bound
lahf
add
push
pop
cmp
xor
js
inc
mov
xchg
mov
pop
dec
leave
test
out
mov
adc
aad
mov
inc
mov
sbbb
fbld
add
lock
int
mov
jge
sbb
and
or
push
in
nop
jbe
loop
mov
push
mov
push
stc
xchg
fwait
pop
sbb
int
rcrl
subl
mov
test
mov
mov
cmp
mov
xchg
mov
cmp
push
xchg
fidivrs
mov
pop
nop
xor
outsl
or
xchg
mov
insl
sti
adc
lock
mov
mov
cmp
jp
pop
aas
pusha
add
and
jns
ljmp
mov
and
std
fwait
sbb
mov
sbb
and
xchg
or
lds
popf
jo
dec
adc
dec
fs
scas
ja
inc
adc
or
hlt
dec
dec
push
outsb
in
push
das
xchg
lea
inc
mov
push
scas
mov
push
lahf
lods
adc
std
pop
xor
dec
xchg
test
push
mov
cli
out
jg
adc
xchg
stos
mov
push
or
fs
jecxz
mov
xchg
mov
push
mov
nop
mov
push
es
leave
xchg
outsb
inc
bound
mov
rcrl
adc
inc
jmp
xor
pop
test
sarl
jge
push
jno
xor
sub
dec
sbb
mov
arpl
loop
adc
pop
sahf
cli
jo
add
into
jle
lock
xchg
mov
mov
outsb
dec
push
sarb
jg
sbb
daa
outsl
jns
pop
aas
fcmovnu
rcll
imul
repz
scas
xlat
inc
add
aam
ja
cmp
push
fbstp
pusha
sub
mov
pop
mov
fcom
inc
or
adc
xor
gs
out
mov
hlt
cmpsb
ret
mov
ss
frstor
jle
push
inc
xchg
sbb
sbb
cmp
jae
fisttps
ret
lock
pop
sbb
mov
sbb
cmp
out
negb
add
or
cmpsb
out
rcrb
out
mov
mov
leave
aas
ffreep
cltd
adc
aas
jmp
fcmovbe
daa
pop
add
push
mov
scas
fs
dec
jae
pop
scas
push
dec
hlt
jb
decl
pop
jbe
inc
nop
bound
pusha
imul
push
sahf
xchg
lret
sub
add
jnp
orb
popf
mov
rcrb
popa
call
fmull
cld
or
jle
dec
xchg
test
stos
jmp
int3
or
out
jmp
cmp
insl
mov
push
or
adc
xchg
adc
sahf
lret
pop
xor
adc
je
shll
pop
aas
sbb
jmp
icebp
pop
lret
add
sub
dec
sbb
and
divl
les
rolb
or
cmp
fwait
xchg
pop
incl
xchg
inc
roll
daa
add
sbb
adc
rcrb
pop
cmp
pop
sub
push
jo
sub
clc
nop
inc
and
rcrb
xchg
out
fstpt
mov
and
test
lods
sbb
mov
out
mov
lock
das
bound
mov
jecxz
pop
nop
movsb
push
cmp
hlt
fildl
inc
dec
xor
into
sbb
adc
stos
jno
lea
stos
popa
xor
xorl
dec
push
mov
imul
lret
push
cmp
mul
mov
stc
aas
and
mov
pop
adc
sub
mov
stc
fdivl
cmpsl
lock
mov
inc
dec
cltd
mov
mov
addr16
push
and
add
cmp
jo
test
dec
jb
cwtl
loop
repz
mov
inc
inc
mov
mov
sub
inc
nop
and
mov
xchg
fnstsw
ja
in
pop
push
sub
cmpsl
xor
adc
and
pop
jg
call
pop
mov
popf
and
xchg
xchg
xor
setg
enter
mov
dec
out
mov
in
mov
mov
bound
add
mov
add
push
adc
out
or
in
adc
ds
loope
stc
mov
cs
or
dec
sub
mov
scas
mov
and
jno
cmpsb
or
repnz
pmovmskb
test
cmpb
xchg
push
pop
loop
mov
lods
adc
and
pushf
pop
pop
push
push
xchg
std
xchg
adc
sbb
cld
fwait
jl
pop
es
imul
or
xor
stc
hlt
and
cmp
test
shl
mov
stos
fcoml
jbe
add
aas
push
out
mov
push
jno
lds
arpl
adc
lds
push
cmp
inc
mov
shll
jne
push
mov
push
pop
or
repz
cmc
mov
outsl
jl
xor
adc
mov
xor
fstl
in
and
out
mov
jno
xchg
pop
cmp
mov
jp
mov
jne
add
inc
lret
stc
and
xor
push
fcoms
add
mov
mov
dec
adc
pop
sub
pusha
pop
jg
xchg
adc
jecxz
lods
xchg
pop
clc
lea
int3
mov
popa
cmpsb
frstor
inc
and
jp
hlt
enter
adc
mov
ret
mov
popa
mov
mov
xorl
stos
dec
inc
adc
popa
inc
mov
sbb
in
mov
pop
pop
icebp
push
dec
into
aad
sbb
dec
dec
cld
fmuls
cld
mov
and
out
and
sbb
fwait
jno
push
stc
jo
in
mov
jl
dec
loope
mov
mov
mov
fmull
cs
mov
enter
scas
ja
sbb
adc
insl
mov
pop
lret
xchg
mov
mov
not
sub
xor
xor
or
xchg
lret
je
cli
inc
bound
mov
insb
pop
inc
loope
pop
test
lcall
ja
int3
dec
xchg
inc
sub
and
jg
mov
xchg
sub
pop
imul
jmp
lahf
fldl
fmulp
fs
push
jl
mov
mov
xor
sub
scas
dec
insl
sub
ret
xchg
push
bound
negl
movsb
cld
test
cmp
add
inc
in
xor
dec
aaa
xchg
fwait
pop
mov
and
subb
arpl
push
sbb
cmp
pop
pop
sub
addr16
pushf
pop
sbb
insl
or
fcomps
mov
lods
and
or
jb
jae
jl
stc
test
mov
das
sbb
das
pop
inc
xchg
fs
ret
insl
lcall
popa
and
cmp
adc
mov
xchg
mov
mov
push
add
fildl
lds
push
mov
mov
jb
stos
mov
sbb
push
fadds
adc
scas
daa
jecxz
arpl
pop
pop
repnz
cmp
test
daa
cmc
lock
lods
inc
xchg
adc
adc
xchg
cmp
xlat
xor
nop
jnp
pop
push
mov
jo
sub
loop
mov
cs
sti
mov
pop
push
mov
stos
xchg
pushf
mov
outsb
popa
jnp
ret
xor
xor
test
stc
fbld
int3
adcl
cmp
nop
push
cmpsl
int
mov
sbb
xor
std
mov
scas
sub
daa
jecxz
push
nop
test
dec
ljmp
in
xor
dec
cvtps2pd
fcomps
jp
xor
xchg
je
inc
pop
lods
add
inc
sbb
xlat
sub
stos
ljmp
aad
or
or
add
in
mov
push
sub
inc
add
mov
in
add
jne
sbb
mov
das
je
inc
push
and
xchg
mov
sub
insb
lea
pop
fstl
js
dec
or
cmp
cmp
scas
int
inc
xchg
xor
push
sub
hlt
out
repz
sbb
pop
jl
es
pusha
pop
adc
arpl
divb
loop
outsl
in
adc
inc
popl
lods
xor
mov
test
mov
outsb
push
mov
arpl
jp
cmp
stc
pop
sarl
iret
in
mov
pop
aad
fisubl
xchg
clc
lret
xor
add
icebp
pop
sub
fisttps
mov
popf
icebp
loop
sub
xor
lret
inc
pusha
jae
pop
fwait
jne
int3
cltd
cmp
xchg
rol
pop
dec
fyl2x
out
popa
cs
xchg
sbb
jne
lods
pop
add
sbb
adc
out
xor
test
popa
mov
pop
movsb
inc
dec
xor
ret
mov
dec
imul
out
jnp
ret
lcall
aas
push
loop
test
bound
das
mov
ss
push
jmp
dec
aaa
rcrb
out
xchg
or
sbbl
mov
ljmp
negl
adc
aaa
rcrl
pop
leave
or
jns
loop
add
or
add
repnz
int
nop
mov
popa
or
mov
push
loop
cmp
add
iret
mov
dec
inc
lea
xchg
rcl
js
jge
mov
dec
mov
xlat
je
pop
incb
incb
dec
add
stos
mov
shrl
repz
out
jmp
or
ret
xor
mov
cmp
aas
cmp
aaa
sbb
loope
test
fwait
in
inc
jo
xor
pop
pop
ret
fnstsw
adc
add
sbb
movl
popf
inc
push
adc
xor
jp,pt
hlt
clc
mov
xchg
xchg
add
in
dec
mov
inc
adc
loopne
rorl
mov
pop
rolb
cltd
jge
adc
cmp
mov
mov
sub
pop
cmp
fldenv
fmuls
lods
insb
ss
in
int
xchg
lret
cmc
hlt
mov
in
push
pop
in
jmp
adc
sbbb
mov
and
inc
js
xchg
jmp
inc
pop
lods
ss
dec
lods
out
lahf
out
jbe
inc
aaa
push
daa
mov
sbb
push
insl
mov
popf
fwait
push
cwtl
leave
push
outsl
mov
lock
pop
into
fisttpll
movsb
out
test
inc
mov
loope
mov
rcr
shrb
leave
cmp
mov
dec
fwait
mov
ret
add
fsub
pop
rorl
cmpsl
push
pop
movsb
mov
insl
cmpsb
hlt
lcall
jge
pusha
popa
lret
mov
lock
cli
daa
jns
cmp
jmp
cmpsb
aaa
push
je
divl
out
xor
xorb
sub
pop
sbb
xchg
mov
xchg
popa
cmpsl
mov
xor
shld
bound
xor
paddw
mov
pop
test
jg
jo
push
ja
fwait
psubb
js
fistl
sbb
mov
sbb
ljmp
fdivs
xor
mov
dec
fsts
cmp
push
jmp
out
mov
std
fidivs
or
movsb
sub
xor
cltd
bnd
leave
lds
lea
gs
sbb
insl
das
in
stos
addr16
lret
je
arpl
cmp
mov
cmp
and
inc
mov
les
or
jno
xor
mov
sbb
out
jge
in
stos
push
sbb
push
fisubs
outsb
into
out
lret
notl
pop
dec
sbb
arpl
xchg
lock
test
push
fdivl
shll
lret
imul
or
in
rol
ljmp
mov
pop
aaa
mov
push
les
daa
in
dec
repz
ret
fsubrl
inc
mov
pop
mov
xchg
popf
sarl
mov
aas
movsl
sub
test
inc
shll
pop
cs
jle
rorb
pushf
add
sub
rclb
mov
icebp
mov
enter
mov
mov
jnp
lock
or
lret
scas
dec
pop
jge
das
ljmp
mov
fistps
andb
lret
out
scas
loope
cmpsb
repnz
adc
mov
dec
jmp
pop
dec
leave
mov
inc
frstor
inc
enter
addr16
sar
fwait
stos
adcb
fnstenv
inc
in
dec
sub
repnz
dec
aam
jecxz
mov
dec
mov
xor
or
push
lods
xchg
mov
xor
sub
push
mov
scas
add
jbe
xlat
inc
add
pop
xor
mov
jmp
in
call
jle
pop
int
popa
es
sub
out
inc
stos
pop
lret
pop
clc
dec
stos
scas
imul
pushf
dec
mov
xor
and
inc
inc
roll
xor
dec
sub
jg
repnz
insl
xlat
push
data16
xchg
add
in
add
cmp
das
mov
int3
xor
mov
and
cld
fcomps
loop
mov
add
dec
push
and
xor
mov
pop
mov
cmp
lea
cli
outsb
fwait
push
pop
rcrl
divb
xchg
mov
push
cmc
sub
jae
mov
stos
in
mov
ljmp
xchg
sub
pop
mov
xchg
jmp
pop
jne
mul
cmp
movl
notl
cmp
fwait
out
js
inc
in
push
xlat
fcmovnb
push
andl
mov
or
add
out
test
int
add
sub
jle
pop
cmpsb
jg
test
mov
sti
ss
scas
test
ret
and
mov
cmp
imul
sbb
add
ljmp
jae
mov
jo
stos
sahf
dec
inc
in
mov
ss
cmp
arpl
iret
sbb
fldl
loope
aam
jns
mov
sub
ret
or
jmp
dec
out
adc
fldcw
mov
fwait
xor
push
push
call
arpl
outsl
lahf
pop
jl
sub
cmpl
shlb
insb
popa
mov
scas
scas
mov
pop
pop
sub
iret
mov
push
repnz
fwait
pusha
lds
scas
stos
pop
je
dec
leave
fcomps
jl
jp
push
jb
pop
jbe
outsl
enter
sti
and
or
rorb
adc
cli
and
mov
xchg
aam
jmp
sbb
push
shlb
cmp
test
aas
scas
mull
mov
ret
xor
mov
rclb
fcoml
into
in
mov
orl
adc
ljmp
sub
nop
xchg
cmpsb
ret
clc
jno
xchg
fwait
or
mov
imul
xchg
mov
pop
mov
add
jo
loopne
lea
jg
cwtl
push
xchg
push
icebp
shll
js
nop
inc
js
sub
lds
cmp
xor
mov
les
stos
out
sarb
add
fs
fnsave
movl
ja
insb
lahf
leave
push
mov
setae
loopne
ss
loopne
xor
rcrl
test
sbb
sti
out
aad
xchg
sbb
fimuls
add
shlb
mov
mov
pop
mov
xchg
pop
imul
int
andb
daa
sub
dec
push
dec
pop
sbb
xchg
leave
movsb
loop
popl
sbb
sub
dec
inc
call
out
or
push
jb
daa
and
inc
pop
fisttpl
xchg
call
loop
sarl
add
add
pop
loop
dec
pop
jl
aad
jne
arpl
aad
pop
push
ds
into
repz
lcall
cmp
push
mov
push
adc
or
daa
loope
mov
repz
jecxz
popf
je
sbb
pushf
cld
sub
fmulp
ss
ret
movsl
xor
lods
xchg
cmp
mov
sub
inc
aam
stc
movsb
lahf
pop
and
jno
jno
out
mov
or
lret
popf
or
sub
clc
or
push
pop
lock
pop
jo
push
sbb
adc
mov
xor
adc
sub
xlat
int3
jecxz
hlt
jno
push
or
mov
and
pop
lods
daa
aad
fisubl
dec
inc
push
and
rcl
add
xchg
divl
pop
inc
mov
adc
gs
shrl
test
cwtl
sahf
shll
push
in
fbld
adc
xor
xor
lods
mov
addr16
out
call
insb
pop
or
pop
xor
into
pusha
xor
sbb
bound
insb
jp
in
arpl
or
fdecstp
in
cmp
bound
fistl
adcb
data16
xchg
dec
faddp
cmp
mov
sbb
dec
adc
out
xor
or
dec
pop
mov
fcomp
loope
jp
fdivl
arpl
addb
je
add
pop
xor
out
hlt
xchg
lods
popl
jno
in
or
adc
repz
sbb
ss
pop
nop
pop
dec
lea
loop
mov
pushf
pop
xchg
cmp
aam
mov
dec
lahf
icebp
fiadds
dec
mov
jp
mov
or
decb
pop
insb
cmp
inc
push
and
aas
test
xlat
icebp
push
push
cmp
push
mov
ljmp
xchg
je
scas
xor
rol
pop
xor
cwtl
pop
push
mov
adc
sub
addr16
pop
fidivs
in
adc
in
clc
jo
test
xor
fucomip
fstl
scas
jecxz
imul
push
jecxz
jnp
imul
movsb
insl
shrl
popa
int3
pop
pop
and
repnz
nop
mov
int3
stc
aad
jb
test
repz
lock
iret
orb
in
mov
push
ljmp
xlat
inc
push
insl
mov
jnp
out
into
lock
cld
repz
in
mov
inc
mov
scas
jb
mov
inc
push
jmp
add
adc
mov
pop
push
jns
clc
rcrl
xor
mov
jle
js
push
mov
outsl
jbe
ret
jmp
adc
imul
cmpsb
pop
xor
test
rorb
mov
fwait
xchg
dec
lea
mov
faddl
pop
jmp
cmpsl
mov
arpl
das
insb
and
stos
pop
cmpsb
push
mov
mov
mov
jae
sbb
addr16
aad
jne
dec
popf
ds
js
je
adc
push
adc
mov
outsl
ds
sub
dec
sub
inc
adc
cmp
or
adc
fidivrs
xrelease
mov
loope
jne
xorb
and
pop
cmp
ret
adc
xlat
movsl
inc
push
std
xchg
mov
pop
mov
imul
add
sbb
pop
push
pop
in
inc
cmp
inc
fildl
dec
stc
lret
in
inc
jb
test
mov
hlt
pusha
dec
aas
int
jle
rorb
pop
mov
sub
fstpt
add
sbb
mov
xor
leave
xlat
lods
and
xor
inc
cltd
dec
fisttpl
mov
gs
jb
notb
ret
push
mov
cmp
sub
popa
stc
add
mov
lahf
ret
xlat
repnz
and
jp
imul
add
es
lods
fidivl
xor
push
pop
mov
call
shlb
insb
sbb
fisttpl
or
mov
add
sub
adc
sti
sbb
rclb
lcall
idiv
sub
xlat
sbb
xor
stos
xchg
push
pop
mov
cld
imul
jl
or
xchg
std
in
inc
push
in
in
call
xchg
js
mov
daa
adc
mov
dec
fs
out
add
divl
pop
push
stos
popf
loopne
adc
mov
jbe
test
flds
out
mov
xlat
shll
cs
mov
push
lahf
jmp
popa
iret
or
sub
dec
mov
das
jle
cli
cmpsb
cmc
mov
bound
mov
in
jp
aam
dec
inc
xchg
pop
outsb
adcl
jb
in
imul
push
jo
xchg
addr16
aaa
loop
std
vshufps
mov
out
lods
stos
push
jge
subb
sahf
xchg
das
jno
jle
or
push
push
push
mov
hlt
and
mov
xor
ror
movsb
addr16
add
pop
xorb
inc
cli
and
push
push
stos
jmp
jns
fwait
sub
jns
jecxz
hlt
pop
add
stos
push
mov
xchg
sbb
mov
cmp
or
enter
scas
lahf
mov
lahf
xchg
mov
leave
inc
gs
or
out
sbb
push
pop
std
cmc
std
inc
jmp
add
lock
test
jno
in
inc
or
int3
nop
and
mov
pusha
sarb
cmp
mov
mov
mov
out
dec
aad
pop
push
popf
outsb
xchg
pop
mov
jge
lret
mov
inc
int3
push
inc
push
dec
xlat
arpl
inc
popf
xlat
int
sbb
out
iret
lock
adc
xor
pop
test
mov
xor
dec
jmp
les
stos
out
mov
mov
dec
in
sbb
sbb
xchg
mov
mov
inc
cmpsl
out
mov
push
or
icebp
mov
mov
xor
popf
and
xor
mov
out
std
add
mov
dec
xchg
mov
in
out
jmp
ret
idivl
pop
call
cmp
aad
xor
in
lcall
outsl
in
jg
test
shrl
sub
sub
dec
popl
cmp
repz
addr16
push
add
cmp
mov
stos
mov
data16
jno
test
bound
xchg
mov
lret
push
outsl
cld
sbb
sub
jb
rclb
in
inc
jle
inc
cmp
dec
xlat
in
pop
imul
cmp
mov
xchg
test
jbe
pop
cli
dec
dec
xor
int3
push
sub
das
les
add
jecxz
movsl
ja
xlat
aam
ret
stc
lret
sub
adc
sbb
das
shll
fistps
outsb
loope
sti
cld
ret
das
dec
arpl
cmc
mov
in
mov
adc
jl
lret
xor
mov
fsubrs
jo
and
xor
aam
pop
jecxz
arpl
jb
les
mov
fsubrl
mov
fwait
add
movsb
push
or
movsb
sbb
inc
test
mov
and
xlat
inc
lods
mov
repz
sbb
push
icebp
jbe
mov
stos
jns
xor
cmc
test
sub
pushf
mov
jge
loop
loopne
andb
int
push
push
out
push
pop
add
outsl
mov
inc
cmp
data16
mov
mov
push
inc
aaa
xor
xchg
insb
dec
xor
fucomi
mov
mov
scas
fiadds
dec
xorl
mov
mov
stos
sub
xor
jns
in
jo
push
stc
sbb
push
jnp
add
in
dec
divl
aas
outsb
stos
mov
andb
inc
xorb
cmp
cwtl
in
inc
push
mov
ds
scas
xchg
adc
lods
fcomps
fidivrs
mov
in
mov
xchg
jecxz
bswap
push
add
or
pushf
sub
mov
or
mov
les
in
or
je
popf
loop
fldenv
dec
faddp
and
int3
test
mov
xlat
ljmp
das
movsl
and
in
xlat
pop
xchg
cld
cmp
add
xchg
or
stos
or
mov
call
std
xbegin
or
test
inc
pop
dec
jno
adc
lret
add
xlat
lea
out
adc
mov
popf
add
sbbb
out
mov
push
cmpsl
das
lock
and
cmpsb
gs
int3
sbb
xchg
out
push
lock
jbe
push
loope
in
xchg
das
imul
mov
sbb
cmp
pushf
dec
xlat
add
pop
cmp
xchg
pop
jle
adc
test
imul
pop
mov
mov
fxch
jmp
sbb
push
and
push
dec
inc
aaa
add
xchg
cmp
and
call
xlat
xchg
test
add
negb
imul
adc
das
pop
sti
fwait
sti
and
outsl
xchg
ret
sbb
mov
fsub
xchg
cs
inc
rcrb
push
jno
imul
jecxz
jb
jb
aas
in
inc
arpl
jmp
rol
add
mulb
fwait
sub
jb
mov
gs
push
dec
ds
arpl
jno
dec
pop
push
out
gs
sub
roll
mulb
sbb
cmp
test
ret
nop
sub
icebp
in
add
outsb
xchg
js
sub
inc
sbb
push
ss
inc
xor
or
cmpsl
pop
xor
rol
test
addr16
lcall
dec
fwait
pop
pop
xor
lret
adc
push
cmp
pusha
dec
popf
push
xchg
jge
add
xor
in
pop
cwtl
std
inc
cmp
push
pushf
adc
test
mov
pop
pop
fimuls
adc
int
lret
sbb
mov
outsl
hlt
repnz
out
sbb
mov
fcom
test
orb
sub
and
cmp
jae
loopne
outsl
jmp
imul
or
push
adc
pop
push
aaa
xor
inc
ljmp
bound
xchg
inc
rclb
icebp
dec
bound
cltd
push
imull
push
ja
fs
dec
pop
sub
fistpl
imul
and
mov
sub
je
xchg
push
pop
popa
cs
adc
stc
iret
sti
or
jmp
pop
push
add
fisubs
mov
repnz
dec
sbbb
ret
lock
jge
inc
lret
push
adc
shll
std
ljmp
jmp
dec
cmp
ret
mov
loopne
cmpsl
mov
movsb
xor
es
mov
mov
test
mov
and
scas
in
sub
test
xchg
pop
das
adc
jne
xchg
imul
jo
lcall
inc
push
sub
ffreep
xchg
mov
xlat
cltd
jecxz
sbb
repnz
rorl
outsl
lock
inc
jno
inc
cmpl
push
pop
in
sbb
outsl
jne
jne
subl
in
sub
jp
sbb
data16
mov
push
xor
cwtl
xor
jbe
ja
dec
in
das
jl
pusha
dec
fimull
mov
popa
pop
loope
ds
xchg
mov
in
add
sbbb
nop
push
jb
cmc
adc
jae
out
or
in
adc
jns
call
cld
sub
aas
sarb
mov
in
sub
loope
cmp
mov
xor
mov
lds
cmc
aad
loop
jp
jne
and
mov
inc
xor
andb
and
pop
adc
xchg
mov
cltd
sub
inc
in
inc
cmp
outsl
push
cli
sbb
out
movsb
xchg
adc
sarb
cmpb
popf
cmp
stos
jno
jae
xchg
xor
hlt
enter
push
or
lcall
sub
xchg
jno
cs
lea
sbb
lret
ljmp
les
mov
pop
movsl
enter
shll
lea
jno
orb
fistl
ljmp
mov
std
add
insb
sub
js
movsl
or
cmp
mov
lret
mov
imul
mov
icebp
adc
bnd
into
adc
add
adc
inc
subl
jno
dec
fsubl
loop
xor
test
out
add
pop
or
je
lcall
cmp
roll
sub
jmp
inc
xchg
pop
arpl
call
aad
das
call
fs
jnp
xchg
push
loope
out
add
and
add
std
push
popa
jno
aas
cmp
sbb
imul
xchg
outsl
testb
push
xchg
cmp
lret
mov
into
inc
jo
hlt
out
sub
sub
xchg
jae
xchg
ja
test
lock
jp
mov
xchg
repnz
stos
and
enter
sub
je
xor
cmp
lock
xorl
dec
shll
fbstp
scas
aaa
int3
push
je
jo
xor
mov
leave
pushf
push
int
aas
jnp
popa
xor
cli
inc
mov
stos
dec
div
jns
hlt
mov
jle
imul
mov
call
in
inc
xchg
loopne
mov
and
jns
cmpsb
push
jl
adc
clc
xchg
arpl
sub
and
roll
hlt
insb
mov
fiadds
sar
aam
popf
mov
xor
or
push
fdivrs
fs
cltd
lcall
pusha
cmc
jne
add
pop
sbbl
rclb
in
jecxz
cmpsb
outsb
sub
aas
ret
fs
jbe
sbb
cmpb
jmp
cmc
pop
push
aad
add
mov
push
cmp
push
aad
je
loopne
xchg
add
add
pop
jns
adc
jnp
xor
in
rorb
mov
sbb
mov
push
int
in
add
out
push
int
roll
push
je
aad
add
mov
xchg
dec
mov
jp
insb
rcll
push
push
xchg
mov
pop
jg
js
pusha
xlat
sub
push
dec
scas
mov
loopne
mov
mov
cmpsl
or
stos
out
ficomps
fimuls
push
iret
scas
lods
mov
out
jns
ret
in
aas
in
loop
std
out
xor
adc
push
cwtl
into
adc
cmp
and
decb
mov
jp
cltd
pop
push
lock
xchg
ss
sbb
dec
cmpsl
pop
cmp
sbb
mov
dec
xchg
cmp
mov
xor
xorb
arpl
sbb
dec
push
mov
sti
loope
pop
enter
call
sbb
ret
aas
test
leave
movsl
cmpsl
adc
dec
mov
cmpsb
stos
hlt
or
je
pop
sbb
aam
mov
pusha
jmp
jae
push
icebp
or
aaa
test
ljmp
jp
cmc
pop
adc
test
inc
loop
fs
lods
or
scas
pop
sarb
push
cmp
jns
and
sub
jb
jbe
xor
scas
jns
jg
mov
je
inc
jle
adc
mov
fwait
xchg
int
add
mov
test
arpl
sti
adcl
mov
or
adc
mov
add
mov
mov
xor
lea
mov
lods
mov
cmpsl
jecxz
popf
cmp
fcmovnbe
mov
fdivrl
push
sub
xchg
and
xchg
jae
add
pop
insb
mov
ret
in
xor
mov
mov
mov
dec
sub
outsb
out
mov
sbb
mov
imul
imul
or
sub
stos
cmpsb
hlt
test
fisttpll
xchg
mov
inc
push
les
mov
sbb
add
in
dec
push
or
add
loopne
shrb
dec
fwait
mov
int
or
rclb
pop
xchg
ds
jmp
int3
ds
mov
jnp
dec
adc
xor
jnp
rorb
add
or
es
je
sbb
xchg
pop
ret
out
dec
lret
push
jae
xor
xchg
cmp
add
push
addr16
cmp
das
notl
mov
pop
addl
and
and
mov
std
mov
mov
in
fisubrl
iret
fwait
cmp
and
call
add
cmp
pop
add
mov
sub
in
cmpsl
jl
shl
scas
and
movsl
jne
add
iret
movsl
dec
jmp
pusha
outsl
mov
sbb
loope
outsb
cld
and
mov
adc
jno
lds
hlt
add
jmp
adc
dec
lods
les
jno
fldenv
cli
fistl
popf
or
push
sti
hlt
inc
cmp
ljmp
test
gs
or
fnsave
xchg
xchg
loope
sbb
xchg
movsb
mov
add
jbe
dec
cmc
pusha
shll
mov
and
sbb
mov
pop
xorb
call
sti
mov
adc
mov
mov
add
idivl
sub
adc
adc
cmp
add
jnp
xor
aas
inc
fnstenv
jne
dec
xor
push
lea
call
je
xchg
inc
inc
in
inc
jecxz
test
pop
and
xor
in
xor
jns
or
push
setae
das
pop
adc
in
add
mov
mov
lahf
out
cmpsb
xor
loopne
dec
jg
lret
jge
mov
push
mov
sbb
adc
popa
xor
out
dec
test
mov
xchg
pop
popf
sub
adc
mov
and
in
data16
adc
mov
sub
je
jae
in
add
push
ret
pop
adc
xchg
int
out
inc
cmp
movsb
rolb
iret
sub
and
xchg
add
mov
fsub
inc
test
jge
in
push
xchg
rcrl
imulb
push
mov
adc
sahf
adc
stc
mov
mov
dec
cmp
and
and
pushf
sbb
cld
jnp
js
jo
icebp
ljmp
popf
call
and
mov
jmp
lock
leave
mov
cwtl
sub
push
mov
dec
mov
inc
dec
add
inc
inc
cld
inc
loope
out
or
jne
fisubl
sub
popa
pusha
add
and
jns
dec
movl
mov
in
pop
ss
lea
lds
sarl
push
add
in
int3
inc
mov
aas
divl
inc
out
cmp
xchg
hlt
loop
aad
mov
cwtl
aam
mov
arpl
outsb
mov
sub
popa
pop
out
mov
aaa
mov
sbb
cmpl
pop
xchg
cmpsb
in
cli
pop
jne
in
arpl
xor
cltd
jle
jne
insl
dec
adc
in
das
cmpsb
out
cmp
movsl
pusha
aaa
std
mov
ja,pt
je
mov
sbb
test
das
movsl
jecxz
mov
sahf
lret
shlb
and
data16
mov
insb
push
jno
mov
pop
and
xor
hlt
fcomi
xchg
lds
test
out
jbe
inc
popa
cmp
and
mov
inc
pusha
aad
and
sbb
icebp
lcall
or
mov
or
inc
scas
cmp
add
mov
cmpsb
push
bound
fcomi
sub
push
mov
gs
data16
add
aaa
ss
mov
xchg
popf
fadds
mov
adc
sbb
xchg
es
movlps
and
lock
sti
dec
mov
outsl
imul
stos
xchg
scas
int
pop
dec
xchg
pusha
popf
pop
ret
push
jmp
lea
push
fistpll
rcrb
out
test
sub
cltd
jnp
in
popa
mov
and
sbbb
sbb
mov
fnsave
aad
mov
xor
jle
sbb
adc
orps
addr16
daa
jmp
sub
inc
pushf
cmp
and
mov
test
js
ds
repz
mov
dec
pop
mov
jge
inc
sbbl
push
push
cmovnp
and
scas
pop
pushf
outsb
and
lods
cs
cmp
sbb
push
loop
pop
lcall
lcall
pop
jb
push
sub
cmp
movsb
lahf
cltd
cmp
cmp
pop
cmc
and
cmp
add
lods
add
fs
imul
or
dec
imul
mov
pop
mov
pop
inc
stos
mov
shll
loop
das
addb
movsl
xlat
loopne
aas
ljmp
xor
lahf
lret
push
sbb
and
push
movsb
inc
sbb
push
or
jge
lds
hlt
rclb
out
ret
test
xor
xor
loopne
fs
aaa
mov
add
xor
pop
cmp
cs
sub
push
aas
jo
movsb
jns
xchg
cmp
out
roll
pushf
and
or
outsb
lods
xor
inc
pushf
lods
mov
pop
inc
mov
mov
mov
mov
pop
je
sub
aam
bound
pop
mov
adc
dec
subl
into
or
stos
inc
push
mov
loope
dec
and
jmp
sub
push
enter
cmpsb
pop
inc
mov
lods
xlat
decb
fcmovne
shrb
xor
push
cmp
sbb
jbe
xlat
and
push
mov
push
xchg
pushf
mov
lds
les
pop
and
mov
mov
xlat
cld
xchg
out
sub
aad
mov
dec
push
aad
sub
sub
xor
outsb
rorl
ficoms
fwait
jo
push
add
inc
xor
aam
pushf
fimuls
insb
push
clc
ret
lahf
dec
add
push
in
dec
cwtl
mov
aaa
jno
jno
sub
arpl
cli
pop
movsl
pop
dec
mov
or
cld
sub
or
and
mov
jg
jl
lret
fwait
jecxz
mov
add
aam
div
sbb
sti
fstl
popa
push
xor
roll
push
out
lods
xchg
sbb
sarb
mov
sub
inc
in
cwtl
and
jbe
imul
mov
sbb
or
shll
dec
sahf
inc
and
adc
daa
mov
in
cmovl
in
push
out
outsb
gs
pop
jns
shll
dec
idivb
jg
fistps
mov
mov
mov
sbb
xorl
js
sti
adc
xchg
mov
aas
jg
pop
gs
cmpsl
loop
mov
cmpsl
bound
add
dec
adc
iret
cmc
cmc
int3
enter
leave
popa
or
stc
pop
jecxz
inc
push
movsl
push
or
jb
imull
adc
sti
aam
mov
hlt
ss
int
xchg
adc
dec
data16
popf
lcall
aaa
and
outsl
int
fadds
inc
sub
cmp
mov
ja
test
xor
fistpll
add
outsb
scas
bound
aas
loope
cs
lods
add
mov
je
clc
cmpsb
jl
mov
fdivl
inc
inc
das
rcl
outsb
mov
push
jmp
ret
xchg
ret
rcr
cmpsl
push
add
add
test
aaa
fildl
mov
adc
and
mov
out
jo
pop
cmp
xchg
sub
push
repz
fsts
arpl
jne
andl
sbb
sub
sti
cli
push
cmp
adc
test
cmp
adc
pop
int3
in
push
and
mov
push
lock
rcrl
or
fstpl
das
pop
testl
push
xor
out
jns
stc
xchg
sub
add
xchg
xor
mov
dec
sub
mov
sbbb
add
dec
push
lods
loopne
fistpll
fidivrs
ds
movsb
pop
mov
fimull
jns
add
sahf
daa
jo
mov
xor
cmpsl
xor
ret
cs
sbb
or
test
push
mov
jl
orl
or
and
or
cmp
add
pop
mov
cld
iret
mov
cmp
bound
test
cmc
clc
xlat
dec
int
arpl
gs
push
add
into
pop
jge
orb
fcmove
inc
out
mov
fs
push
jo
and
mov
lahf
and
adcl
dec
and
enter
inc
pop
insb
test
subl
add
lock
sarb
aaa
sub
jnp
sub
jecxz
push
ja
push
jmp
inc
push
out
pushf
mov
cmc
xchg
xchg
loope
clc
fwait
jmp
mov
xor
out
sti
shlb
jg
idivb
fsts
sub
mov
push
mov
loope
bound
lea
iret
enterw
pushf
call
push
fdiv
mov
pop
sub
or
movsb
or
or
hlt
cmp
sub
pushf
inc
xchg
mulb
ljmp
push
adc
mov
notb
sbb
pusha
and
cmp
rcll
xchg
mov
movsl
sti
xor
nop
jmp
enter
mov
adc
xchg
jge
and
push
xlat
stc
popf
popa
mov
and
or
les
aas
fdivrl
insb
xor
outsl
test
mov
repnz
ret
adc
decb
test
fidivs
push
add
lea
push
mov
pop
mov
cld
xchg
mov
cmp
sub
inc
jle
push
imul
pop
pop
pushf
mov
popf
push
fsubs
inc
out
call
xor
xor
jle
xchg
adc
cmovl
and
js
add
out
filds
adc
inc
in
add
or
jg
loope
test
dec
and
mov
pop
pop
test
rolb
push
mov
xchg
xchg
xchg
icebp
mov
imul
or
or
xchg
mov
mov
movsl
icebp
cmp
mov
hlt
xchg
or
and
aad
iret
aaa
inc
or
fiadds
mov
add
push
xchg
dec
fildll
lret
mov
dec
xchg
aam
cwtl
aas
into
jmp
inc
je
mov
xchg
jns
dec
rorl
movsb
xor
sti
adc
or
xor
shl
and
int3
push
mov
aaa
and
cwtl
andb
cltd
pop
xchg
arpl
and
pusha
gs
push
jle
cwtl
and
mov
dec
das
es
mov
xor
or
arpl
inc
inc
gs
sub
cmpsb
bound
cltd
cvtdq2ps
fwait
repnz
movsb
aaa
xor
xor
shll
fsubl
xchg
mov
int
jmp
aas
mov
pop
ret
and
pusha
rorb
adc
pop
outsb
icebp
xor
mov
mov
sbb
inc
xchg
lea
test
cmp
cmpsb
fidivrl
imul
les
sub
lret
pop
push
jmp
sti
scas
push
push
jl
xor
and
fidivl
bound
std
test
lods
cmp
inc
jecxz
sub
dec
in
xchg
mov
loopne
jnp
fmull
fistps
notl
mov
mov
fbstp
ret
mov
adcl
das
icebp
out
nop
xchg
and
jbe
insb
icebp
call
fnstcw
andl
jno
lea
test
inc
shll
jge
cmp
adc
addr16
je
loop
test
adc
xchg
mov
mov
inc
loopne
cltd
rcrl
das
and
ss
mov
das
les
push
cmpsb
icebp
pushf
or
cmp
jnp
test
adc
xchg
insl
pop
scas
push
add
xlat
repz
xor
fstpl
adc
test
nop
enter
adc
mov
imul
jae
test
ret
mov
out
pop
cmc
cmp
mov
add
fwait
inc
sahf
sbb
stc
adc
rol
adc
sahf
clc
testb
mov
mov
rcrb
mov
xor
bound
scas
sbb
mov
jns
loop
mov
sub
mov
insl
dec
daa
popa
or
sahf
sub
push
shrl
or
in
sub
jns
sbb
push
into
sti
rcrb
loope
mov
leave
dec
pop
sbbb
jge
cwtl
adc
xor
in
mov
xchg
xchg
push
outsb
les
jnp
ret
int3
cmp
push
cmp
sti
sub
push
xchg
loope
leave
test
dec
les
and
mov
addr16
data16
inc
das
out
lret
test
inc
rcrl
cltd
movsl
and
pop
xor
outsb
and
lcall
mov
out
jo
and
dec
jmp
pop
fisubl
inc
lea
sahf
enter
in
mov
pop
adc
cwtl
pop
cmc
cmp
lcall
xor
jmp
xchg
mov
push
push
mov
fistpl
flds
sbb
push
test
mov
daa
and
ret
aas
sarb
mov
xchg
push
fildl
adc
and
push
pop
add
mov
outsl
std
outsl
fdivl
cwtl
lret
test
push
int3
sbb
orl
inc
mov
sub
clc
gs
sbb
cltd
jb
fwait
lea
or
push
repz
mov
aaa
adc
loopne
mov
shrl
add
test
jle
dec
sbb
ret
ss
xor
movsl
push
xchg
pop
and
nop
xor
xchg
sub
lock
jbe
or
xor
add
push
outsb
mov
insb
push
js
jne
movsb
ds
enter
test
sub
sub
xchg
pop
adc
cmpsl
stos
ss
cmp
inc
sar
jo
in
lret
iret
cmp
jae
dec
xor
pushf
sbb
cmc
cltd
push
rcrb
jp
mov
sub
pusha
repz
es
mov
mov
jg
das
lahf
lods
cmc
fmuls
xor
mov
sbb
daa
sbb
repnz
lahf
ljmp
and
push
lret
mov
pop
sbb
sbb
inc
cmc
jp
sbb
popa
not
testl
xor
dec
and
inc
in
aam
lret
jg
mov
mov
adc
das
mov
icebp
movsb
pop
inc
adc
pop
push
mov
dec
out
dec
sbb
jbe
inc
gs
repz
xlat
out
int
mov
outsl
orb
pop
mov
rcrb
enter
dec
imul
sarb
mov
loopne
sbb
cmp
fstpl
inc
adc
fmul
loope
xor
sbb
popf
pop
cmpsl
in
rcll
inc
dec
xchg
int
mov
xchg
loope
inc
mov
in
data16
aad
adc
push
mov
nop
sbb
add
xchg
jp
and
in
gs
mov
bound
mov
push
sub
cmp
inc
sub
mov
sbb
cmp
mov
push
sbbb
loop
jns
cs
pop
jp
jbe
cmp
test
jno
lret
lea
add
inc
or
pop
cmpsl
jp
push
mov
fisubrl
adc
inc
jge
inc
add
fcmovnu
scas
lret
adc
insb
sub
lds
outsl
push
sbb
mov
int
int
cld
jnp
sbb
insb
cli
ss
sub
mov
pusha
les
xchg
aad
ret
adc
mov
mov
adc
notb
pop
dec
sub
inc
lret
cmp
cmp
insb
outsb
mov
cmc
cmp
bound
test
out
xor
insl
dec
pop
mov
movsb
push
xchg
aas
out
les
pop
fcomp
and
xchg
test
pop
mov
lods
imulb
adc
pop
faddp
shlb
mov
mov
mov
jnp
cmp
mov
sbb
test
mov
adc
inc
xor
lods
pop
mov
and
add
xorb
out
aaa
stos
js
xorb
pop
add
mov
mov
jecxz
filds
add
xchg
shrb
jnp
and
jmp
jbe
outsb
cmp
stos
xchg
mov
jo
in
cmpsl
shr
adc
and
mov
xchg
dec
outsl
mov
orl
pop
xchg
cmp
pushf
add
inc
retw
lds
aaa
shrb
ror
dec
rolb
popa
arpl
xlat
out
or
iret
inc
adc
adc
dec
inc
inc
test
xor
add
daa
mov
dec
mov
sahf
cmpsb
mov
xchg
sbb
mov
mov
leave
in
fists
sub
aam
xchg
xor
movsl
inc
daa
push
mov
dec
push
dec
cmp
jmp
or
mov
inc
dec
outsl
shrb
nop
mov
push
iret
lret
push
jae
pop
or
jmp
inc
jno
andl
pop
lods
jnp
clc
sahf
pop
mov
cwtl
or
hlt
enter
in
xchg
les
mov
andb
ss
sbb
xchg
mov
inc
adc
or
xor
cmpl
mov
rcrb
repnz
cmp
ss
cld
movsb
mov
pop
adc
sub
add
daa
inc
incb
enter
xchg
xor
fimull
xchg
aam
jno
inc
imul
shll
je
and
sbb
jle
xchg
push
leave
fs
cmpsb
icebp
mov
inc
cmc
pop
ss
sub
dec
mov
xchg
fimuls
dec
aad
cmpsl
and
cwtl
xor
cmpsl
pop
mov
idiv
outsl
push
or
xor
out
in
fistpll
or
push
push
inc
stos
ret
push
fwait
mov
lret
xorb
js
loope
mov
and
xchg
fildl
or
pop
mov
or
outsl
divb
inc
fbld
push
and
xor
popa
mov
fisubrl
sbb
pop
push
jae,pn
adc
adc
aaa
popf
cmp
jecxz
movsl
cmp
mov
test
movsl
repnz
add
jmp
and
lret
call
jle
fs
dec
sarb
adc
inc
fadds
ja
xchg
mov
je
les
add
rcl
jp
lahf
lahf
dec
mov
sarl
iret
or
mov
lahf
push
mov
pop
mov
jle
pop
iret
test
scas
jg
mov
push
cmpsl
ja
lret
push
xchg
push
lds
or
fsubrs
out
mulb
fcom
stos
lret
push
jne
xchg
mov
push
mov
mov
rorl
mov
fisubs
scas
jnp
jns
mov
arpl
sbb
add
popa
leave
dec
imul
fists
push
rcr
movsb
insl
loopne
cltd
xorb
loopne
rcr
decl
jecxz
mov
and
adc
adc
mov
fstpt
jo
push
xchg
jecxz
jle
jge
add
jmp
add
ds
and
addr16
sar
adcb
sbb
xchg
inc
mov
mov
out
push
mov
bound
and
test
mov
es
xor
jecxz
sbb
cmpsl
sub
sahf
dec
pusha
stc
sbbl
das
sbb
lds
aam
popa
xor
mov
iret
lret
out
dec
dec
les
inc
movsb
fstps
mov
sbb
lods
imul
loop
push
repnz
mov
aaa
or
dec
dec
lock
xorb
ficomps
out
repnz
mov
jo
loop
mov
mov
lcall
rolb
cwtl
xor
out
ret
inc
and
jmp
dec
addb
and
fdivrp
mov
bound
inc
into
aas
and
or
jae
dec
pop
mov
jg
test
mov
or
sarl
jb
popf
push
push
testl
mov
xor
es
push
cmp
xor
enter
xorl
xlat
cmp
aam
inc
xor
je
sub
arpl
or
rclb
popf
movsb
iret
and
ss
ljmp
enter
test
and
int3
inc
jl
ja
enter
mov
notb
movsb
pop
or
rcl
dec
pop
ja
pop
or
dec
mov
cmp
popf
les
xor
sub
in
adc
scas
xorb
les
pop
and
lea
popf
nop
add
jp
pushf
pop
sbb
pop
and
sbb
out
lods
and
add
push
gs
or
cmpsl
jo
dec
dec
daa
jecxz
lea
jg
ljmp
jo
push
add
call
xor
testl
lods
out
cmp
mov
lods
push
shlb
inc
fidivs
lret
add
adc
dec
add
out
adc
clc
rcll
xchg
inc
movb
clc
jmp
mov
inc
mov
add
mov
sub
xchg
inc
cmc
push
pop
leave
hlt
push
mov
sbb
cwtl
dec
dec
xlat
arpl
push
inc
rcl
repz
mov
mov
popa
rcll
das
mov
insl
push
gs
add
stc
sbb
dec
push
xlat
adc
popa
xchg
daa
outsb
out
xor
dec
insb
or
shrl
movsb
rolb
rcll
and
pop
imul
lret
xor
imul
pop
sti
push
sbb
lret
cwtl
dec
add
mov
roll
js
xor
mov
inc
pop
test
loope
lock
and
pop
inc
decb
sahf
add
pop
aad
test
clc
vshufps
fidivrl
shrb
leave
and
add
adc
es
leave
sbb
inc
sbb
movsl
sub
fisubrl
test
adc
outsb
adc
imul
sub
push
gs
push
or
dec
pop
push
dec
or
xchg
mov
int
cmp
cwtl
mov
pop
cmp
vcvttpd2dqx
or
adc
fldcw
scas
push
mov
clc
subl
mov
repnz
faddp
loope
mov
test
pushf
inc
or
loopne
push
xchg
sbbb
mov
mov
popf
mov
mov
dec
push
mov
std
jl
xchg
push
jns
in
rorl
cmc
xchg
imul
out
out
jo
out
sbb
fildl
bound
fisttpl
out
out
je
push
shlb
jle
iret
cli
inc
push
roll
pop
and
mov
xlat
les
arpl
xchg
cld
pop
fisubl
loope
cmpsb
popa
adc
sar
add
lret
mov
mov
sbbb
xchg
jo
lods
xchg
popa
sarl
inc
pop
sbb
fcoms
adc
repz
idivb
in
jne
les
cmpsb
cmp
fcomp
stc
or
sub
cmp
inc
dec
add
jo
push
fs
dec
in
test
jbe
sbbl
aad
jecxz
sbb
xchg
xchg
jg
sub
xchg
inc
xchg
outsb
add
out
push
xlat
in
xchg
out
push
or
shrl
dec
inc
mov
out
test
es
stc
test
sbb
jle
imul
aad
pop
sarl
bound
aam
mov
rcll
pop
push
cmp
mov
jp
push
in
mov
repz
mov
fwait
int
push
push
std
and
ja
mov
push
jno
xchg
cmp
int
push
test
push
mov
imul
cmpsl
fiadds
mov
sub
dec
gs
mov
jmp
or
push
dec
sahf
iret
mov
mov
daa
std
add
pop
mov
out
orb
xchg
arpl
aam
loopne
mov
lods
add
sarl
lret
pop
xchg
movl
adc
or
push
jl
arpl
addr16
xchg
xchg
test
jae
cltd
sbb
ret
pop
mov
fadds
ret
roll
addr16
xchg
fnstcw
gs
add
mov
js
xchg
inc
or
dec
xor
mov
daa
rorl
and
adc
mov
out
or
mov
jecxz
dec
mov
movsl
lcall
or
les
add
dec
sub
xchg
movsl
fidivs
sub
mov
lcall
sbb
daa
cld
lods
mov
lds
add
add
xchg
ja
xor
test
popf
jns
pop
or
nop
pop
xchg
outsl
and
lods
lea
cmp
enter
xor
loope
sub
popf
cli
cld
inc
xor
and
fstps
xor
xchg
insl
xchg
in
mov
test
jp
cmp
shrb
mov
aas
inc
data16
ja
int3
or
cmp
insb
jge
sbbl
in
cli
mov
mov
xchg
mov
xchg
imul
xor
fldenv
in
andl
adc
out
inc
out
and
call
inc
fisubrs
add
les
dec
js
pop
in
mov
loop
fs
mov
push
xor
cmp
pop
cs
mov
push
int3
xchg
adc
mov
mov
std
mov
sbb
mov
sarw
dec
cs
pushf
add
cli
mov
cwtl
lock
or
mov
and
rcl
xchg
es
icebp
cmp
pusha
mov
out
and
xor
xchg
loop
outsl
pop
data16
movsl
sbb
enter
jle
test
fwait
and
incl
xchg
repnz
mov
fistps
xor
cli
jl
popa
push
sti
es
popa
dec
mov
mov
mov
push
loop
lret
inc
mov
jb
mov
in
es
in
mov
stc
aaa
iret
fldln2
jg
loopne
mov
pop
adc
pop
xchg
or
pusha
mov
and
ficomps
inc
xchg
dec
push
testl
inc
sbb
jnp
das
out
adc
leave
mov
popf
cmp
bsf
in
xchg
add
ss
pop
adc
imul
adc
int3
and
int
mov
jae
outsb
xchg
dec
out
dec
rol
xor
push
cltd
out
and
nop
daa
popa
andl
mov
dec
aaa
inc
subb
stos
lock
stc
cmp
outsl
das
pop
push
jns
dec
xchg
add
js
add
ja
mov
movb
sub
test
cmp
xchg
push
andl
insb
lds
jns
xor
rcl
lea
adc
fwait
mov
mov
xchg
sbb
test
ja
pop
outsl
daa
addr16
and
cltd
cmp
add
dec
shll
cmpsb
ss
jl
jno
fdivrs
cmpsl
aam
pop
jge
push
aas
call
dec
xchg
insl
sbb
sti
xchg
mov
lock
mov
sub
fidivrs
mov
pop
add
test
jg
xchg
add
or
js
jno
add
loope
es
mov
adc
cwtl
imul
decb
sbb
sub
fadds
or
sub
pop
repz
jecxz
jp
test
test
es
mov
and
xchg
cmp
enter
aas
cmp
mov
dec
mov
add
inc
dec
aam
push
push
xor
jmp
pop
cs
testb
movsl
sbb
add
insb
fistpll
scas
movnti
inc
or
lods
pushf
cltd
xor
pop
jp
push
dec
inc
cltd
pusha
inc
ficompl
push
or
pushf
std
inc
out
add
sahf
test
inc
push
inc
mov
dec
outsl
cltd
adc
inc
ja
daa
mov
mov
outsb
rolb
inc
scas
push
fsubrp
and
sarb
adc
jo
ja
out
sub
or
rcrl
negl
inc
leave
sbb
sub
lret
mov
sti
sbb
and
cwtl
inc
sub
hlt
insl
addb
mov
mov
sbb
leave
and
lahf
push
pop
xchg
xchg
mov
add
adc
push
fnstsw
adc
fwait
pop
push
dec
enter
aam
in
sbb
stos
loop
mov
jb
xchg
rol
insl
push
int
push
xchg
lods
xchg
leave
push
in
mov
and
lret
mov
sub
or
jnp
cmp
jno
sbb
mov
cmp
imul
inc
mov
or
jmp
or
mov
shrb
int3
es
fnstcw
shll
adc
lock
je
inc
or
mov
pusha
bound
call
push
jl
insb
cmp
in
cltd
jge
jge
jmp
inc
mov
fwait
jecxz
add
les
push
out
push
cmpsb
addr16
push
jb
jle
enter
xor
jp
test
out
push
pop
mov
sbb
sar
int
pop
push
movsb
jnp
mov
push
xor
sbb
add
lea
xchg
lahf
pop
cld
pop
sub
out
jl
aas
lds
adc
push
jne
andb
fwait
mov
iret
add
ljmp
mov
lret
xor
inc
je
cmp
adc
push
ljmp
notb
in
mov
lahf
ror
js
pop
pop
add
sbb
into
jg
test
stos
adc
sti
jl
ds
icebp
xchg
jp
sbb
pop
sbb
outsb
push
in
ja
fs
mov
and
cltd
xor
cwtl
dec
lds
repnz
cmc
sysexit
ljmp
iret
fistpl
xchg
add
push
dec
cmp
negb
cmp
xchg
das
fbld
lcall
das
add
repz
sti
lcall
add
sbb
orb
inc
sbb
bound
cmp
xchg
cli
jnp
call
in
loopne
loopne
sbb
mov
sbb
or
arpl
pushf
pop
call
mov
push
inc
sete
xchg
jb
cli
insb
das
out
or
cmp
jne
sub
add
aam
push
adc
cmpsl
cltd
pop
adc
cmc
mov
lret
xchg
faddl
outsl
mull
psllq
fcmovu
pop
mov
movsl
and
stc
lcall
decl
sub
cmpsl
mov
scas
repz
jl
push
lahf
jb
xor
insl
cmpsb
xchg
pushf
sub
and
jle
ds
pusha
and
xchg
test
sub
push
fs
xchg
popa
hlt
pop
ds
cmp
rolb
mov
add
imul
sbb
or
dec
xorb
aas
outsb
pop
popf
imul
sbb
out
rolb
dec
xchg
loopne
xsavec
scas
imul
out
scas
inc
jb
pop
add
sbb
jl
call
dec
inc
adc
sub
sbb
popa
in
adc
testl
sub
lods
hlt
lds
fwait
movsb
jmp
cmp
xchg
xchg
lods
nop
cld
out
icebp
out
loope
dec
flds
xchg
test
pop
pusha
cmpsl
lods
xchg
pop
insl
es
inc
mov
int3
cs
fmull
dec
mov
in
pop
loopne
iret
cwtl
andb
daa
fs
arpl
in
es
int3
sub
shr
push
cmp
ret
negl
push
outsl
jo
sub
mov
mov
pushl
adc
xchg
sti
jbe
fwait
imul
bound
pop
adc
nop
pop
cmp
iret
cmp
xchg
dec
mov
xlat
mov
addr16
mov
in
inc
in
inc
mov
xor
pop
push
fidivrs
push
clc
outsb
cmp
dec
sub
sbb
mov
xchg
repz
xchg
pushf
push
jno
inc
or
mov
jmp
lret
pop
xchg
sbb
push
jae
push
dec
cmpsl
mov
sbb
das
hlt
leave
mov
jne
rclb
cli
js
hlt
out
out
mov
out
dec
and
add
stos
jmp
sbb
sbb
outsl
push
outsl
ret
das
shl
lods
adc
adc
xor
pop
sbb
sub
mov
test
cld
xor
adc
or
push
movsl
adcb
add
movsl
sub
cmp
fs
inc
movsl
stos
imul
std
xor
in
add
cli
pop
add
popf
lods
add
dec
xchg
adc
mov
pop
mov
adc
es
inc
sub
mov
das
repnz
xchg
pop
pushf
xchg
nop
dec
addl
xlat
lret
lods
cmp
fsubs
ljmp
movsb
scas
pusha
sarl
add
pop
mov
jne
imull
add
pushf
sbb
orl
repz
in
mov
hlt
pusha
daa
enter
add
cld
cwtl
test
push
mov
sub
fistl
cmp
pop
push
mov
and
fs
adc
push
out
repz
cli
or
hlt
jne
sbb
xchg
mov
mov
lods
pushf
sbb
lcall
xor
sub
sbb
in
nop
mov
mov
dec
add
adc
or
and
mov
test
ret
add
jb
push
insl
pushf
fcompl
pop
xchg
mov
pop
jbe
sub
xor
movsb
stc
pop
insb
mov
movsl
push
ja
dec
fisubl
xor
and
movsb
dec
stos
lock
or
or
xchg
dec
cmp
movsb
mov
pop
je,pn
rorl
mov
aaa
push
cwtl
andl
push
add
sub
sbb
mov
jl
sbb
loope
xor
sbb
add
imul
popf
in
in
testl
xor
test
mov
pop
and
cmp
and
insl
mov
fs
std
inc
add
arpl
or
fldl
xorl
mov
es
roll
leave
adc
popa
xor
adc
loope
outsb
out
shl
ss
ja
lods
ret
lods
mov
call
pop
dec
aaa
lock
mov
or
or
pop
cs
rcll
ror
mov
pushf
or
call
or
sbb
out
sub
jp
dec
div
movsl
sbb
adc
flds
ljmp
push
mov
pop
xchg
es
mov
lods
dec
cmp
test
nop
setge
push
scas
jl
sub
jnp
pop
outsb
insb
mov
push
loopne
jecxz
hlt
xchg
mov
ss
fists
inc
push
lcall
push
and
dec
add
sahf
jno
mov
gs
cltd
or
mov
and
cmp
add
lret
push
adc
int3
inc
shll
xchg
in
inc
pop
out
sbb
notl
inc
mov
in
iret
shrl
push
mov
es
jnp
imul
popfw
adc
hlt
adc
and
dec
call
addb
daa
cmp
scas
stos
mov
test
enter
mov
mov
in
mov
rolb
stc
mov
in
daa
fsubrl
add
pop
test
stos
inc
mov
insl
and
adc
ret
push
in
jg
mov
sarl
das
cmpsl
push
repz
jbe
cmpsl
sub
sbb
mov
sub
sub
adc
imul
fisubrl
repnz
incl
mov
add
in
repnz
sub
insl
fcomps
sbb
inc
mov
pop
es
ja
push
mov
sbb
cmp
cmovnp
pop
vandnps
adc
push
das
rolb
lahf
xor
push
loopne
rcrl
fsubl
outsl
mov
cmpsb
xchg
mov
cmp
pushf
cld
gs
lods
insb
mov
mov
mov
fdivrs
ja
xchg
and
ret
ljmp
jns
dec
sbbb
pop
jnp
mov
dec
paddq
mov
xchg
jle
outsb
sbbb
sub
xchg
aaa
sarl
push
sbb
mov
push
movsl
mov
mov
sub
inc
mov
cmp
jnp
sub
scas
loop
xor
data16
jb
adc
or
stc
mov
out
dec
adc
ss
push
sahf
fiaddl
lds
cli
xchg
test
push
dec
test
orl
xchg
mov
cmp
or
stc
jbe
cli
lods
jae
mov
mov
xchg
add
fsubrl
leave
inc
pop
pusha
add
cmp
push
clc
add
and
cld
rorb
jb
pop
dec
mov
movsl
jne
dec
repnz
cs
jb
add
jo
lods
mov
inc
fsubl
test
dec
mov
sbb
pop
ret
or
addl
aas
out
pop
pop
imull
inc
or
nopl
out
int3
jb
mov
ss
push
jmp
push
jl
lock
out
ret
inc
stos
cmpsb
add
pop
je
in
fwait
jg
xchg
mov
cwtl
dec
dec
push
roll
loope
ret
or
sbb
jbe
mov
pop
jg
scas
xchg
jae
mov
xchg
pop
insl
call
mov
sub
jle
add
insb
cld
shll
adc
das
jne
das
inc
sti
fisubl
outsb
fstps
imul
icebp
xor
sbb
push
repz
enter
ss
dec
lret
dec
imul
popf
repz
sbb
enter
cmpsb
xchg
lahf
addr16
cmpb
je
cmpsl
clc
dec
stos
insb
mov
test
test
pushl
test
mov
js
push
and
lods
xlat
cmpb
lcall
pop
and
adc
inc
test
sbb
mov
test
jl
nop
aaa
jb
gs
or
iret
jo
jb
jne
sub
in
lods
cmc
mov
pop
sbb
jmp
addb
dec
cmp
dec
fwait
lock
inc
test
arpl
jle
push
loop
mull
push
pop
inc
or
add
inc
add
iret
notb
xchg
sub
into
hlt
icebp
pop
add
out
fucomp
mov
dec
popa
data16
push
lods
cmp
cmp
and
xlat
test
jge
add
inc
mov
mov
jb
roll
cwtl
jle
lahf
xchg
and
orb
mov
pop
lock
dec
outsb
push
arpl
xchg
or
xchg
mov
jl
lods
movsl
fldenv
push
inc
loope
loop
out
test
icebp
or
xlat
inc
lods
mov
gs
pop
xchg
inc
jae
inc
mov
ja
and
out
js
or
add
mov
add
xorl
fadd
pop
xorl
add
stc
xor
mov
sbb
sbb
xor
pop
ret
mov
das
jge
js
cmp
movsl
fwait
idivb
and
dec
int3
jb
aad
test
in
lret
in
test
xor
je
popl
xor
sub
mov
ds
loopne
xchg
int
or
jno
push
xor
nop
mov
mov
test
or
scas
popf
cmp
ret
sbb
out
push
jns
pop
pop
ror
fsubs
add
push
xor
mov
mov
and
shl
pop
sbb
pop
xchg
jae
loopne
jecxz
dec
dec
jge
fldl
pop
enter
mov
movsb
cld
cmpsl
aaa
push
clc
mov
cmp
andb
mov
jne
xchg
arpl
outsl
mov
pop
mov
mov
jp
push
stc
add
cmpsl
shlb
push
mov
mov
lea
xor
inc
dec
lret
inc
and
mov
mov
dec
xchg
aas
fisttpl
mov
stc
and
aaa
jnp
movsb
jge
xchg
pop
push
or
js
cmp
movsb
jge
adc
icebp
dec
out
insb
and
xchg
shlb
fwait
xchg
mov
stc
cmp
rorb
add
jmp
jae
pushf
bound
sub
out
sbb
push
push
testb
es
pop
cmc
shl
jmp
pop
pusha
clc
xchg
mov
fdivrp
xor
push
test
xchg
aas
xor
fistl
cmp
mov
pop
notb
addr16
push
push
xor
push
xor
xchg
push
mov
xchg
fsubrp
out
jecxz
dec
mov
shrl
adc
inc
pop
add
sbb
lods
loope
inc
dec
sti
add
add
sbb
lock
adc
jae
call
cmp
mov
jg
roll
mov
into
mov
add
or
insb
push
jmp
repz
inc
cli
in
int3
mov
add
push
loope
loope
cmp
lods
outsl
mov
sub
sub
cmp
mov
loopnew
xchg
and
pop
pop
js
fidivl
mov
and
fmul
pop
dec
pop
mov
pop
pop
stc
sub
data16
and
cmp
cmp
mov
rolb
daa
xchg
orl
sub
test
pop
cld
jle
pop
mov
xor
filds
pop
mov
shll
cmp
mov
xchg
or
push
scas
aad
out
mov
pop
addl
xchg
bound
scas
push
ljmp
pop
icebp
frstor
imul
jecxz
cld
jne
shll
sub
sub
orl
dec
inc
cmp
jge
cltd
mov
icebp
imul
inc
scas
ja
jb
xor
jp
fdiv
fbld
nop
shrl
pop
sub
mov
sub
fistl
dec
xchg
mov
test
aad
dec
adc
test
and
dec
in
mov
sub
out
dec
jo
add
popf
stos
mov
sub
push
jno
cld
mov
loope
xchg
in
ret
das
sub
mov
push
arpl
int
adc
pop
dec
push
dec
push
pop
cmc
fstp
mov
mov
pop
push
or
mov
std
mov
add
shl
add
pop
mov
or
movsl
jne
cmpsb
xchg
push
test
adc
mov
hlt
mov
xchg
push
push
repz
dec
push
ss
cmp
decb
xlat
and
fiaddl
leave
rorl
loope
movsl
shll
mov
push
fdivl
add
pop
cmpl
and
and
cmp
int3
call
nop
imul
cmc
pop
bound
loopne
jns
outsl
push
mov
frstor
inc
in
pusha
and
inc
sub
divb
add
xor
int3
xchg
jo
mov
mov
shrl
mov
repz
nop
mov
scas
push
mov
jl
movsb
adc
cmc
aad
xchg
mov
andb
mov
jmp
pushf
lods
jnp
aam
shlb
imul
cli
and
addb
or
jl
shlb
xchg
xor
pop
xor
daa
lds
and
xor
imulb
out
push
repz
call
movsl
pop
add
mov
sub
cmp
lcall
cltd
cmp
test
inc
pop
daa
adc
scas
jnp
test
fs
movsl
lcall
subb
jmp
or
push
cmpsb
xchg
add
jle
ljmp
fwait
adc
inc
insl
push
push
adc
enter
inc
fstl
ljmp
mulb
imul
decl
incl
movsb
loope
adc
add
cld
push
aas
mov
inc
ficompl
cs
lahf
sbb
mov
sti
ja
mov
jnp
gs
push
stc
out
xchg
xchg
dec
jno
push
lds
aam
inc
xchg
stos
insb
pop
pop
mov
dec
lods
fimull
sub
mov
sbb
dec
inc
mov
cli
mov
test
scas
jbe
pop
sbb
iret
sbb
std
push
or
daa
xchg
int3
sub
xchg
dec
int
inc
push
out
inc
xchg
fcmovnb
lock
inc
add
pop
push
xor
cltd
int3
nop
ss
lds
dec
push
sbb
mov
cmp
ds
pusha
lock
adc
mov
pop
mov
scas
movsl
iret
xchg
js
xor
shrl
lods
js
dec
sbb
shrl
mov
fnstcw
fstl
imul
adc
pop
and
or
push
lret
ss
clc
xchg
popa
arpl
push
push
mov
dec
push
mov
dec
push
data16
pop
dec
add
sbb
jnp
push
cmc
mov
out
fimull
xchg
pop
push
mov
jns
dec
je
in
add
sbb
jno
mov
arpl
lret
xchg
stos
test
mov
inc
dec
mov
mov
stc
push
stos
repz
mov
test
or
nop
cmpsb
push
push
jbe
cmp
sub
xor
test
xchg
xor
jmp
repz
cli
fwait
divb
pop
into
jae
xchg
mov
xlat
mov
inc
imul
mov
outsl
ds
xor
xchg
xor
aas
fldt
or
sahf
mov
loopne
arpl
sub
mov
pusha
xchg
adc
or
push
mov
aam
inc
js
cmp
imul
shll
cwtl
andb
lahf
addr16
test
mov
scas
and
push
xlat
and
fsubrp
dec
jno
mov
ljmp
and
inc
mov
test
jl
mov
inc
sub
mov
mov
lock
jmp
and
xchg
int
xor
jle
jp
pop
add
xchg
cmp
sub
sahf
rclb
pop
jge
icebp
mov
sub
idivb
dec
std
scas
or
mov
mov
aaa
call
mov
mov
fsts
icebp
and
idivl
mov
mov
mov
and
lock
nop
stos
roll
or
repz
push
push
lahf
fs
bound
adc
xor
dec
cltd
mov
rcl
imul
sbb
repz
test
mov
mov
lods
in
jns
push
jmp
push
jb
xchg
pushf
pop
pop
jp
xchg
cmpl
rcrb
js
mov
pop
arpl
addr16
dec
push
push
aad
cmp
sub
and
mov
push
out
pop
mov
sahf
mov
dec
fstpt
mov
adc
cmp
add
xchg
insb
mov
sbb
lods
adc
lods
pop
mov
sbb
pop
ljmp
cwtl
xchg
fsubl
cmpsl
or
faddl
mov
rolb
or
insb
adc
movsl
or
mov
or
andb
cwtl
xlat
test
mov
lret
loop
inc
dec
push
sbb
sbb
jge
jnp
fists
sbbb
jb
jecxz
rorb
popl
xchg
popa
mov
push
adc
jge
lock
dec
fwait
pop
mov
test
pushf
mov
adc
mov
inc
and
jo
loop
test
jne
imul
sub
inc
icebp
pop
sub
leave
or
mov
push
sub
clc
dec
insb
sbb
xchg
or
mov
std
rcrl
sbbl
std
jne
or
and
lret
shlb
sti
iret
xor
push
in
ljmp
push
add
loop
lods
push
incb
pop
hlt
cmp
cmpsl
pop
out
data16
jne
mov
pusha
subb
dec
jl
push
not
rcrl
mov
xchg
ret
mov
push
out
pop
mov
clc
adc
fistpll
mov
cwtl
mov
mov
add
icebp
in
pop
stos
mov
jne
cmpsb
sub
xor
push
nop
pop
fidivs
outsl
ffreep
push
mov
jp
xchg
mov
scas
sub
and
pop
aaa
push
inc
adc
xor
dec
mov
lods
dec
shl
cld
or
xor
shlb
pushl
sub
outsl
inc
sub
popa
adc
push
pop
sub
jmp
pop
mov
sbb
sub
adc
insl
in
fdivrl
mov
repnz
ret
scas
test
fcmovbe
pop
jmp
sub
les
test
xchg
mov
pop
inc
push
mov
xchg
dec
push
lods
rclb
bound
je
pop
add
cld
popa
lret
lcall
in
nop
jno
push
xchg
mov
or
jne
repnz
and
je
das
fidivs
call
mov
pop
sbb
jae
andl
addr16
sub
pop
mov
shll
xor
xor
sub
lret
jnp
fs
push
cmp
inc
arpl
inc
push
stc
hlt
cmc
xor
leave
inc
mov
dec
nop
rclb
test
cmp
xor
data16
idivb
scas
xchg
add
mov
dec
xlat
adc
xchg
xorb
das
mov
sahf
and
loope
push
lret
lcall
fsub
test
xor
push
movsb
lods
jne
sub
sub
xor
mov
cmpb
jne
jmp
les
and
stc
aad
int
and
sbb
or
fistpl
mov
ja
sbb
enter
ljmp
xchg
xor
mov
sub
add
inc
cmp
aam
es
adc
push
test
pop
inc
js
jg
cmpb
push
pop
mov
imul
sub
lea
fs
adcl
test
jp
sbb
popa
repz
fwait
xor
ds
in
icebp
bound
or
xchg
adc
inc
sarb
mov
test
sub
push
enter
frstor
and
in
das
jne
scas
int
sbb
cmp
mov
cld
mov
pop
popa
lds
mov
out
inc
add
lcall
rolb
cld
leave
inc
dec
jmp
aad
jns
jp
cmpsb
lret
jp
push
adc
and
push
xor
jg
lds
cmc
pop
loope
mov
imul
xchg
adc
test
divb
dec
sbb
xchg
push
jp
arpl
mov
mov
push
add
add
stos
hlt
shll
scas
bound
pop
ja
lret
sbb
xchg
andl
cmp
inc
popa
mov
mov
sbb
lea
sbb
and
mov
xchg
or
and
outsl
inc
xchg
testl
jl
cli
push
daa
xor
int
push
pop
gs
insl
scas
jns
out
outsb
mov
in
sbb
adc
insb
jns
test
je
into
xor
repnz
pop
stos
mov
sbb
push
jno
into
stos
lock
data16
jg
push
fdivrp
xchg
ds
aad
cs
stc
sbb
dec
mov
dec
aas
icebp
cli
fsub
pusha
add
fwait
xorl
xchg
aam
sub
sub
out
jg
push
push
push
sbb
aad
mov
push
bound
sub
add
xchg
daa
pusha
stos
test
pcmpgtw
and
lds
pop
add
test
ja
stos
sub
sub
push
or
dec
pop
test
es
push
pusha
and
sbb
imul
inc
jmp
cmp
and
mov
push
insb
pop
test
mov
fistl
dec
lea
or
sahf
out
mov
jl
cwtl
push
or
mov
xchg
dec
cli
xor
cmc
mov
cwtl
aam
int3
sti
fwait
mov
aam
pop
fwait
cld
adc
stc
mov
dec
inc
imulb
adc
jl
or
jo
pop
mov
sbb
mov
mov
cs
fwait
aas
icebp
in
testl
and
cli
inc
adc
cltd
or
out
mov
fdivrs
aas
dec
xor
sub
je
xchg
push
out
mov
sbb
xchg
int
ljmp
xor
mulb
jns
insb
test
notl
and
cltd
lds
in
fisubl
fistpl
out
sahf
lock
cmp
outsl
and
stc
dec
out
cmpsl
jb
dec
sbb
jno
ja
loopne
xchg
mov
dec
xor
outsl
in
fdivp
inc
lock
ffreep
shrl
lods
repz
jne
and
mov
leave
xor
mov
jecxz
jo
hlt
inc
push
sahf
push
faddl
and
add
jo
add
js
mov
repz
cmp
jb
or
xchg
xchg
and
push
mov
dec
cli
or
mov
xor
add
dec
les
stos
mov
cmc
pop
mov
pusha
xor
inc
cmp
ret
mov
shll
outsb
je
ret
mov
mov
movsb
push
jbe
xchg
repz
dec
dec
push
std
sub
mov
or
fldt
aas
filds
mov
pushf
sti
aad
jne
push
clc
sahf
and
fucomi
sbb
mov
pop
push
or
sbb
mov
inc
cltd
xor
mov
jg
repz
daa
cmp
das
pop
inc
and
sub
push
mov
push
xchg
aad
fistpl
scas
adc
jbe
pop
mov
xor
dec
dec
inc
cli
sub
lret
xchg
pop
mov
inc
repnz
lret
mov
js
popf
iret
xchg
push
stos
xor
cmp
xchg
aad
cmpsb
add
loope
scas
xor
inc
addr16
fistpll
in
mov
mov
push
divl
mov
ss
sarb
mov
sub
push
xor
dec
pushf
sbb
fistps
ret
insb
out
xor
movq
mov
add
cmp
or
mov
fwait
and
movsl
xchg
xor
ljmp
or
fs
inc
xor
dec
dec
adc
repnz
cli
pop
inc
scas
sub
fldenv
stos
cld
or
jl
push
jo
fstpt
aam
clc
fildl
out
popf
ret
ret
ja
sub
mov
cmp
out
sbb
pop
sub
bnd
jae
test
xchg
stos
std
cmp
sbb
out
mov
pop
mov
stc
mov
ret
push
lret
enter
jae
test
add
xchg
inc
sbb
repnz
add
lret
loop
sar
lret
push
pop
jmp
sahf
mov
jecxz
fcompl
shll
fimuls
in
out
mov
cmp
notl
jne
add
mov
add
outsl
movsb
bound
hlt
rclb
inc
inc
dec
iret
notl
inc
xchg
shrb
ja
fsubrl
sub
rolb
mov
jb
mov
ja
fucomp
pop
and
lret
ds
add
jmp
aam
mov
cli
cmpsb
les
add
xchg
xchg
cmp
push
cmp
dec
mov
push
and
sbb
aad
lods
scas
sbb
sub
ja
xchg
mov
xor
push
pushf
push
mov
xor
lcall
inc
aaa
addr16
repnz
dec
cs
sbb
cltd
dec
hlt
add
add
pop
xchg
mov
xor
push
bound
or
data16
mov
inc
jg
mov
mov
sub
sub
aas
adcl
pusha
pop
ret
nop
mov
or
jg
sub
sti
cmp
mov
xor
sub
mov
or
std
loope
int3
xor
jbe
and
jns
outsb
call
push
lods
jle
data16
outsb
sub
and
cli
adc
mov
je
fildl
les
cmp
push
dec
outsb
adc
push
andb
rcll
mov
pop
dec
mov
int3
imul
test
shlb
ret
add
inc
lahf
sub
rcr
cmp
test
xor
insl
dec
or
add
xor
lret
or
sti
lea
fsts
in
mov
shll
push
add
repz
mov
sbb
xchg
add
dec
xor
sbb
jno
add
sub
xlat
lods
sub
cwtl
test
jnp
jg
pop
mov
jae
dec
mov
mov
or
pop
lret
or
push
mov
mov
andb
fcoms
out
push
testb
dec
pop
mov
out
push
cmp
cli
in
mov
inc
or
sub
mov
dec
mov
adcl
aaa
pop
mov
ret
test
pushf
insl
xlat
or
sub
stos
imul
movsl
jnp
pop
out
into
pop
add
dec
lcall
mov
and
mov
inc
xchg
sub
pop
jle
mov
call
jne
dec
pop
push
shlb
data16
fmuls
adc
outsb
scas
in
mov
insb
scas
xor
cmp
xchg
dec
push
addr16
je
add
push
push
sbbb
shlb
add
pop
rcll
sti
mov
scas
add
pop
xor
sbb
shrb
xchg
imul
jbe
mov
or
cmpb
jecxz
mov
movsb
js
and
inc
cmc
popa
pop
cmp
js
jbe
adc
rorb
clc
pop
imul
mov
es
ljmp
pop
lock
cmc
jb
cwtl
jne
mov
inc
lods
mov
data16
mov
rolb
lods
mov
lock
aam
call
adc
pop
pushf
mov
addr16
fstps
cli
dec
or
stc
sti
ljmp
ljmp
push
jge
cmpsl
sarb
add
jne
popf
loope
xlat
adc
sub
cwtl
scas
cmp
mov
loopne
adc
pinsrw
jmp
cmp
paddb
lcall
inc
fisubrl
sub
or
arpl
sub
sub
jg
xor
mov
dec
or
lret
mov
outsb
out
push
shll
push
add
push
xor
push
cld
mov
daa
push
sub
insl
arpl
adc
and
pop
push
ljmp
xchg
xchg
push
loop
or
jmp
sahf
inc
mov
and
in
mov
jmp
nop
hlt
lahf
clc
or
je
jmp
push
in
in
test
and
mov
inc
push
jns
divl
scas
push
pop
fcomps
mov
std
and
inc
mov
lea
add
inc
faddl
pop
pop
lahf
inc
sti
mov
push
nop
sub
xchg
lock
clc
icebp
lds
jae
rolb
push
arpl
stc
jnp
add
inc
adc
cmc
push
scas
out
push
bound
jmp
cld
aam
or
jl
jmp
dec
adc
ds
popa
jbe
cwtl
les
stos
sbb
adc
push
insl
ss
xchg
or
and
xlat
jb
icebp
xchg
insb
or
push
dec
jl
fs
xchg
loop
jl
mov
dec
and
and
dec
sub
or
jns
cs
or
cmp
or
fisttpll
sarb
mov
loopne
imul
sbb
inc
mov
dec
data16
pop
out
push
addr16
sub
test
dec
addr16
push
lock
inc
movsb
pusha
or
cld
hlt
cmp
test
and
hlt
lret
fisubl
xor
mov
mov
mov
pusha
pop
leave
dec
repnz
sub
or
test
mov
push
cld
andb
cmc
pop
lods
cmp
test
mov
faddl
adc
test
lahf
les
push
cmp
pop
mov
sarb
ds
push
or
push
sbb
iret
mov
mov
enter
sub
in
mov
or
push
mov
xor
movaps
adc
push
or
int3
int3
xchg
cld
push
push
pop
pop
mov
inc
pop
sub
push
pop
adc
icebp
lret
mov
mov
out
ljmp
push
pop
or
push
sbb
lock
movsb
and
mov
fcmovnb
hlt
mov
ss
aaa
pop
inc
push
call
ss
xchg
push
lods
into
inc
adc
xor
push
enter
inc
pusha
bound
pop
in
dec
inc
adc
fadds
add
outsb
test
pop
jl
jp
rolb
adc
push
fcmove
fists
push
mov
adc
mov
xor
stos
jg
mov
cmpsb
xchg
daa
roll
int3
xorl
and
sub
and
ret
les
xchg
nop
cmp
mov
lea
aaa
fwait
mov
and
pop
movsl
test
loopne
jl
mov
or
cmp
test
cld
mov
dec
pop
mov
pop
jno
in
faddl
push
mov
aas
orl
mov
test
data16
in
inc
mov
mov
cmp
repnz
lods
movsl
pop
cld
stc
aad
xor
add
cmp
jmp
cmp
inc
mov
and
je
xchg
sub
addl
cmp
adc
stc
flds
cld
lds
add
and
or
out
stc
xchg
xchg
jg
cmp
sub
dec
mov
cmp
inc
dec
jl
xchg
shll
loop
dec
mov
pop
scas
aam
iret
mov
add
sbbl
add
mov
add
cmp
push
cmpsb
push
and
inc
push
jns
jo
or
es
mov
lret
pop
sub
sub
sbb
fsubrl
mov
pop
ret
push
mov
mov
lret
lcall
pop
xchg
pop
out
jmp
push
or
push
inc
jmp
mov
pop
pop
sbb
cmpsl
repz
push
ljmp
sbb
in
xchg
mov
jns
fbstp
inc
and
loope
mov
sub
jecxz
jp
jp
repz
ja
xchg
popf
jnp
sbb
xchg
int3
fisttps
in
push
jno
cli
adc
xchg
pop
aam
stc
lret
jbe
sub
push
jmp
sbb
and
inc
jle
repz
in
nop
arpl
dec
ret
mov
hlt
stos
nop
mov
test
jp
bound
jecxz
mov
out
push
dec
flds
inc
push
add
popf
ret
mov
lahf
cmc
dec
pop
jl
cs
pop
jmp
sahf
aas
mov
lcall
xchg
repnz
adc
add
cli
sbb
push
sub
ja
and
jg
inc
sti
ja
mov
jp
mov
stc
cs
adc
push
inc
mov
mov
js
add
adc
xor
les
aas
icebp
mov
in
sti
lds
lcall
jbe
aaa
sbb
pop
xchg
int
pop
cli
mov
inc
xor
push
push
dec
pop
jne
pop
push
mov
pop
pop
xchg
xchg
inc
inc
mov
out
pop
adc
push
push
je
shlb
jbe
mov
mov
push
xchg
mov
das
aaa
loop
in
add
into
cmpb
jne
sbb
push
sub
cltd
int3
lret
add
iret
dec
arpl
cmc
stc
sub
dec
imul
int3
add
jg
popa
movsl
popf
adc
jp
sub
ljmp
repz
insb
inc
rorl
jo
or
jl
rorl
mov
stc
mov
sbbb
push
in
dec
pop
adc
and
xor
insl
mov
pushf
or
pop
push
out
or
mov
test
mov
mov
dec
jne
adc
in
je
outsb
ficomps
pop
repz
mov
lahf
push
ja
mov
inc
jbe
mov
dec
in
std
cmc
push
ficompl
mov
rcll
insl
adc
lret
mov
lcall
lods
ja
popf
fistl
stc
loope
push
jl
outsl
rclb
outsl
push
fldt
inc
and
das
or
gs
jp
cmp
aaa
adc
rolb
jns
into
and
pop
adc
push
cmp
repnz
nop
mov
nop
hlt
insl
iret
imul
jns
int3
rol
mov
mov
shrb
rol
inc
int
mov
das
mov
mov
pushl
jnp
push
mov
call
ljmp
mov
push
push
dec
lods
daa
dec
ret
mov
sub
pop
sbb
push
dec
scas
sbb
or
xchg
mov
shll
jmp
lods
dec
xor
ret
iret
imul
inc
add
xor
jl
xor
outsl
scas
mov
sub
pop
xchg
sub
jg
sub
mov
and
pusha
pop
lock
ret
adc
jno
rolb
jle
sti
rcll
pop
lret
inc
inc
sarl
cmp
in
int
in
mov
xor
add
pop
mov
mov
mov
out
shl
xorb
call
add
cmc
in
xchg
xor
rorl
stos
jle
shlb
les
rorl
or
pusha
jne
cltd
mov
aam
adc
jecxz
jae
imull
mov
pop
stc
cmp
add
mov
xlat
sbb
mov
fwait
mov
and
mov
sbb
imul
es
xchg
mov
mov
push
sub
dec
fisubrl
jae
cld
jecxz
shlb
cmp
adc
pop
iret
mov
test
sahf
cld
push
in
and
add
and
adc
out
int3
pop
push
xchg
jnp,pn
and
push
cmp
mov
mov
mov
aaa
cmp
mov
mov
inc
add
in
test
jl
cmp
les
jno
xor
shlb
xor
dec
pop
inc
jae
aaa
mov
xlat
lds
inc
psubusb
lea
stc
movsb
loop
in
jmp
sar
and
test
fstl
mov
stc
insl
push
fwait
push
jns
rcrl
clc
mov
push
mov
mov
call
dec
loopne
mov
mov
inc
sub
pop
and
stos
ja
std
shlb
jge
mov
in
mov
fwait
push
jge
sbb
inc
lea
cmp
adc
jp
mov
dec
jecxz
sub
mov
cmp
adc
fsub
lret
inc
pop
out
mov
xchg
mov
imull
out
movsl
sbbl
jb
sbb
jae
adc
adc
and
mov
add
mov
sbb
xchg
push
movsb
ret
rol
add
or
fwait
cwtl
xlat
jmp
inc
push
es
mov
mov
or
test
push
mov
xchg
ss
out
test
sbb
and
adc
jno
add
sbb
enter
adc
insb
cmp
icebp
push
push
pop
test
and
in
push
stc
not
clc
mov
push
jp
pop
iret
pop
mov
ljmp
movsb
push
aaa
movsb
fistps
mov
imul
mov
inc
repz
pop
xchg
sbb
jb
adc
jmp
mov
into
sub
inc
rcr
in
sub
fdivs
jmp
push
scas
sbb
and
inc
xchg
ds
je
pop
lcall
push
inc
push
jge
test
mov
xor
dec
push
std
push
adc
daa
push
dec
cmpsl
imul
mov
add
add
sbb
mov
xchg
pop
icebp
rcrb
and
push
insb
nop
or
and
mov
cwtl
lahf
shrb
rol
mov
xchg
dec
mov
sub
andb
decl
sub
lock
push
sub
or
outsl
mov
fisttps
in
sbb
test
push
inc
sbb
into
xchg
mov
pop
lcall
stos
mov
neg
xor
mov
sbb
cld
outsl
test
loop
ljmp
pop
jmp
lret
ret
addl
fbld
push
dec
test
mov
mov
pop
sub
adc
test
mov
ds
loope
add
sbb
outsb
push
dec
fsubl
adc
add
jge
in
lret
mov
pop
pop
pusha
inc
dec
pop
adc
dec
mov
jbe
or
mov
mov
jb
dec
shrb
ljmp
jmp
push
sbb
cmp
pop
push
das
xchg
loopne
pushf
pushf
cmpsl
and
test
push
push
jp
sahf
in
or
xchg
ss
pop
cmp
and
pop
shll
in
gs
orb
or
jnp
cld
jo
add
jmp
rol
outsl
mov
in
mov
and
aaa
push
add
lret
cmp
sahf
jne
leave
into
dec
scas
xorb
fwait
lret
sbb
lock
adc
lret
xchg
loope
out
sub
mov
xchg
inc
inc
mov
shlb
jge
sbb
xchg
inc
and
push
xchg
jb
orl
aad
xlat
dec
jl
ret
pop
movsb
push
pop
push
test
imull
imull
sbb
cmp
adc
cli
orl
dec
iret
shrb
xor
mov
dec
sbb
cmp
std
aad
jmp
mov
ljmp
ss
add
lea
pop
adc
gs
cmp
imul
int
pop
dec
mov
inc
adc
lret
das
sub
aaa
xor
sbb
js
inc
pop
pop
jecxz
sub
add
call
fisttps
sub
mov
push
xchg
sbb
mov
jl
inc
fwait
mov
pop
and
push
mov
push
lds
lock
lsl
jns
aaa
inc
inc
xor
into
inc
aas
addr16
and
adc
adc
bnd
add
gs
aaa
mov
xor
inc
xor
lock
xor
data16
dec
sbb
inc
xor
jge
push
xchg
adc
aad
lock
sbb
add
pop
mov
std
jg
fisubrl
fs
cmc
dec
xlat
pop
push
stc
and
leave
or
shr
out
inc
jns
cld
popa
inc
and
flds
in
mov
sti
in
or
xchg
adc
dec
clc
mov
push
xchg
jg
movsl
ficoml
adc
jmp
pop
push
in
xchg
imul
mov
mov
ret
int3
dec
xor
mov
fwait
mov
mov
adc
push
cmp
fidivrl
test
mov
xor
scas
sbbb
fucomi
mov
xor
int
iret
and
xchg
fsubs
setae
mov
movsl
and
out
add
dec
loope
xchg
mov
jo
mov
mov
pusha
cld
dec
push
scas
ret
sbbb
xchg
adc
or
cmpsb
jmp
sbb
pop
std
mov
push
outsl
cld
scas
je
pop
jmp
enter
rclb
ljmp
mov
hlt
push
outsl
mov
rcrl
addl
lret
sub
js
jnp
inc
ret
je
and
xorl
fcomip
outsl
jge
sarb
stc
xchg
cmp
loopne
out
mov
dec
cs
sbb
mov
outsl
lcall
repnz
add
add
dec
mov
out
sbb
call
dec
negl
jo
int3
data16
push
mov
loop
inc
xchg
xlat
sbb
cwtl
push
lock
inc
add
cmpsb
pop
loop
lods
lea
fldt
call
sub
dec
mov
arpl
add
push
pop
shl
mov
clc
dec
push
or
pop
bound
sbb
xchg
sbb
pop
pusha
push
out
repnz
sub
xchg
lds
xchg
scas
lock
aam
cmp
pop
jecxz
leave
sbb
and
xor
das
ds
icebp
out
inc
sahf
jns
mov
or
sbb
xchg
ja
add
das
cmp
xor
dec
dec
sub
outsl
cmpb
rorb
cwtl
and
and
adc
decl
adc
notl
fisubs
mov
sarb
rcr
std
out
jns
sub
out
push
sub
pop
jge
push
imul
bound
ds
popa
dec
fcoml
xchg
out
ret
jb
mov
inc
idivb
fbstp
outsl
mov
imul
loope
mov
enter
fisttps
inc
adc
xor
hlt
cmp
sahf
popf
data16
adc
movsl
mov
mov
je
popf
mov
dec
add
test
in
adc
mov
jnp
add
mov
mov
or
cmp
sub
cmp
inc
sub
push
adc
sbb
xchg
fistl
cmpsl
pop
daa
xchg
call
aam
xor
or
aas
shlb
mov
jns
xorb
rclb
add
ss
dec
cmp
iret
jb
lods
xchg
cs
test
adc
push
enter
pop
stos
mov
aad
sub
les
mov
xrelease
test
je
arpl
jp
out
addr16
cmp
in
aam
outsl
stc
call
push
in
cld
mov
daa
ret
scas
lret
int3
push
or
popa
sbb
sub
jo
fisubs
jno
sub
sub
lahf
rcl
shll
fstpt
rorl
jl
inc
jb
fs
imul
lcall
mov
or
int
pop
fmul
mov
adc
lods
iret
pop
mov
mov
insl
jo
outsb
popf
cli
pusha
jne
xlat
pop
mov
rcrb
sub
dec
inc
mov
add
arpl
mov
or
mov
shll
add
add
out
jae
or
into
jg
ret
sub
sbb
jbe
push
fstpt
sti
pop
pop
and
imul
pop
test
call
mov
mov
jge
mov
sahf
mov
push
xchg
ljmp
xor
and
cli
xor
lods
sti
adc
pop
loope
xchg
dec
das
adc
mov
cmp
popa
repnz
ljmp
mov
in
lods
outsl
push
aas
mov
leave
fidivrl
pusha
shlb
mov
stos
stos
test
sbb
mov
and
lret
push
or
test
popa
jmp
adc
inc
pop
mov
cmpsl
pushf
mov
add
in
inc
xchg
and
mov
in
push
lock
cmp
add
or
xchg
xchg
ret
mov
addl
jo
push
ja
pusha
arpl
mov
inc
aad
push
jae
jns
test
lods
or
in
sbb
test
add
shlb
xor
pop
cmp
push
pop
in
pop
or
and
test
std
sbb
adc
mov
and
jno
sbb
int
adc
xor
ljmp
fisttpl
cmp
push
add
jle
outsb
mov
mov
mov
mov
sbb
and
or
and
popl
xchg
roll
out
out
cwtl
jecxz
popf
loope
outsb
imul
mov
mov
fcom
fcmovnu
test
adc
leave
cmp
data16
cmp
mov
xchg
mov
pop
call
stos
adc
push
fidivrs
pop
push
mov
push
dec
pop
sub
ljmp
out
bound
lret
jb
out
mov
xchg
push
xchg
cmp
bound
mov
add
xlat
inc
cmp
xor
mov
mov
pop
sbb
orl
jg
out
pushf
out
stc
or
sahf
xchg
fld
mov
pop
xchg
mov
addr16
lods
je
lds
sbb
inc
pop
enter
sbb
jle
fwait
pop
icebp
jmp
mov
jno
aad
out
xchg
jge
out
xchg
xchg
popf
cmp
gs
sbb
rcrb
or
adc
adc
adc
repz
ja
imul
push
mov
jg
pop
int
fs
push
pushf
stos
inc
outsb
inc
xchg
dec
mov
int3
jno
lret
fsts
aad
adc
xor
lret
pop
stos
fildll
lahf
sub
dec
mov
pop
shl
push
xor
sub
or
hlt
push
rcr
or
push
ret
pop
jg
dec
out
andl
xchg
movsl
cmp
pop
xchg
mov
mov
cmpsb
test
cmpsb
push
xor
shrl
incb
lock
push
adc
push
jo
ljmp
sbb
cmc
adc
loopne
xor
cmpsb
ret
xor
ja
sbb
xor
pop
jmp
ja
dec
mov
jo
jns
dec
inc
loope
mov
inc
cmpsb
stos
data16
arpl
jbe
inc
mov
loope
inc
inc
mov
add
add
push
in
fimull
and
mov
ror
mov
dec
roll
lock
int3
pop
es
or
xchg
popf
push
inc
shlb
lret
gs
lret
in
mov
mov
and
lret
pop
sbb
lret
mov
adc
inc
leave
xchg
dec
pop
cmp
mov
lret
rcll
ljmp
ret
cs
loopne
es
scas
mov
outsl
aam
inc
adc
lret
sbb
stc
add
dec
mov
adc
out
xchg
dec
ds
jecxz
out
and
jbe
std
pop
das
jmp
pop
in
arpl
addr16
cmp
xchg
cmp
adc
dec
pop
aaa
js
sbb
lret
pop
xchg
repnz
dec
xchg
and
mov
icebp
scas
mov
jnp
push
cmpsl
addb
mov
std
bound
cmc
push
shlb
or
dec
inc
push
or
call
cmp
cmp
cmp
idivl
outsl
pop
rcrb
push
cmp
xor
cmp
mov
daa
pop
lret
sub
es
mov
pop
rorb
push
xchg
in
gs
jb
cmp
dec
push
outsb
cmp
sahf
mov
pushf
loope
dec
xchg
and
jne
jecxz
sub
pop
nop
popa
mov
test
push
out
pop
loopne
mov
jnp
xor
rcrl
mov
pop
sbb
jae
sub
or
push
enter
in
and
lock
mov
dec
add
mov
dec
addl
setb
test
mov
pop
mov
stc
aas
frstor
fdivrs
or
lcall
jno
inc
push
sbb
jmp
sahf
insl
aas
aam
rep
inc
mov
mov
or
mov
push
inc
jae
adc
push
or
cmp
pop
mov
loop
xchg
iret
cmc
xor
push
rcll
std
sbb
push
call
mov
pop
mov
mov
jo
jg
xchg
lods
je
adc
into
push
jmp
xor
scas
add
jecxz
lahf
dec
xor
jmp
jnp
pop
add
mov
enter
rcr
movsl
and
rcll
ss
sbb
xchg
inc
inc
shll
and
fstpt
loop
mov
iret
cmp
fwait
jnp
lcall
jl,pt
jo
xor
push
inc
testb
adc
pop
xor
adc
cmc
rclb
jp
test
mov
fs
aas
jnp
mov
xchg
lahf
xchg
add
lret
mov
pop
dec
pop
or
and
cmp
addl
xor
bound
inc
push
or
mov
push
xor
and
jbe
mov
jmp
mov
gs
and
into
int3
fs
sahf
pop
dec
mov
popf
and
or
test
negb
mov
loopne
mov
loopne
repz
push
pop
test
roll
cmp
pop
iret
pop
push
aas
or
xor
insb
or
sub
push
in
mov
movsb
out
xlat
sbb
in
dec
out
xor
xor
xor
add
mov
nop
es
xchg
mov
negl
lret
cmp
lods
inc
jo
call
shrb
xchg
push
scas
xor
out
out
mov
aad
sarb
popf
addr16
xchg
pop
dec
ret
or
xchg
pusha
pop
mov
pop
jb
movsl
lea
test
sub
cltd
ret
paddsb
jbe
xor
aas
lahf
call
add
mov
sbb
shll
dec
cltd
sub
repz
out
cmp
pop
ds
popf
out
mov
cmc
and
mov
add
call
stos
sub
jp
cs
ljmp
out
pushf
push
mov
or
test
mov
cmp
js
fidivl
dec
lock
cmc
sti
mov
or
jbe
inc
lret
jb
mov
pop
ja
out
add
es
jecxz
outsb
rcl
mov
mov
xchg
jmp
scas
fmull
fldenv
insl
testl
push
mov
pop
jns
xchg
je
sub
lcall
dec
fs
insl
cmpl
ss
scas
mov
push
add
andb
mov
push
lock
xor
jmp
popf
cmp
cmp
aam
cli
sub
and
sbb
cmp
sbb
ret
outsl
mov
pop
insb
pop
and
cli
mov
xor
xor
aam
dec
push
aad
lret
push
xchg
lret
in
add
mov
scas
inc
and
pop
fcoms
testl
dec
sahf
and
int3
sti
nop
jo
push
pushf
imul
mov
inc
add
jno
pop
shrb
xchg
out
and
sub
mov
in
sbb
jns
and
push
popa
out
push
cld
mov
loopne
cli
pop
outsb
js
add
inc
aam
pop
lods
and
in
xor
cwtl
push
les
mov
test
sbb
or
push
pop
cld
out
mov
notl
jae
std
jl
or
fwait
inc
jmp
cmpl
dec
and
xchg
test
jne
push
cwtl
xchg
jl
std
data16
loopne
idivb
xorb
pop
mov
mov
aas
shlb
xchg
xor
in
adc
pop
xchg
das
ret
out
push
out
jns
lock
pop
bound
cmpsl
pop
repnz
inc
popf
mov
pop
gs
mov
js
bound
addr16
inc
dec
or
ljmp
mov
mov
or
cmp
into
sub
mov
sbb
adc
insl
scas
rcll
lock
add
jmp
push
insb
ja
cmc
mov
push
movsb
pop
in
sbb
jle
push
mov
mov
mov
outsb
push
iret
pop
imul
jno
pop
lea
xor
xchg
inc
jne
ret
push
stos
jge
xchg
dec
xor
repnz
out
dec
xchg
sub
in
sub
fistpll
cwtl
inc
les
in
xchg
ds
pop
pop
jo
fdivs
sub
xchg
nop
fnsave
push
xor
push
mov
jne
cmc
dec
cli
sub
and
dec
push
ret
jnp
mov
and
test
into
lea
push
add
push
push
ljmp
ret
sbb
hlt
aas
pop
mov
dec
leave
xchg
cwtl
push
inc
xlat
inc
xchg
into
fldl
xor
rcrb
fildll
js
subl
inc
mov
and
pushf
xor
test
nop
bound
outsl
imul
inc
stos
mov
outsl
inc
adc
test
repz
mov
dec
xchg
ror
lret
add
mov
dec
mov
adc
inc
and
push
cmp
scas
out
mov
push
mov
rorb
test
pop
daa
je
pop
add
push
or
int
mov
dec
dec
sub
pop
in
outsb
movsb
sbbl
scas
mov
push
insl
scas
ret
mov
scas
pop
lcall
xor
xchg
mov
call
and
xor
sti
jge
jne
iret
cltd
loop
inc
xlat
aam
or
ljmp
loop
std
pop
imul
add
adc
push
adc
jge
jno
es
aad
jp
aad
shrl
push
mov
mov
jnp
pop
sub
pop
fldenv
jg
movsb
sbb
test
and
sarb
dec
or
call
bnd
xchg
movsl
add
insb
sub
repz
ret
enter
inc
cs
nop
into
cmp
mov
stc
aaa
adc
mov
sub
in
aad
jecxz
lea
push
push
push
dec
repnz
ficoml
cmp
xchg
mov
pop
jo
lret
jl
push
scas
mov
ss
dec
pop
mov
mov
inc
add
mov
pop
sbb
ljmp
push
lahf
and
pop
shll
cli
pusha
pusha
dec
sbb
out
and
clc
sbb
push
roll
or
and
dec
out
adc
and
push
add
negb
sbb
xor
cmp
aaa
and
adc
push
push
imul
test
and
add
xor
sbb
sub
adc
jo
aam
sar
das
ss
scas
fst
cmpsb
out
adcb
test
push
ss
loope
popf
mov
lds
scas
mov
or
xor
jecxz
xor
sbb
sbb
aas
lret
dec
mov
pop
stos
cmp
rol
ret
xor
mov
dec
loop
or
cmpb
ljmp
lea
int3
test
divb
and
sarb
outsl
dec
jecxz
aam
cmp
push
mov
push
lret
idivb
and
cmc
mov
adc
in
subl
incl
sub
ljmp
add
and
lds
divb
jle
xchg
xchg
idivb
adcb
jo
cmpsb
lods
xchg
jp
pop
push
sbb
movsb
fwait
and
popf
leave
and
orb
pop
mov
imul
test
lret
push
dec
push
das
mov
test
cli
sub
sub
dec
jp
test
push
imul
pop
notl
clc
ret
cmp
shufps
shll
movsb
dec
sarl
fidivl
imul
aaa
addr16
lret
test
inc
cmp
mov
and
ljmp
jns
sbb
dec
mov
pop
aaa
pop
movsb
add
push
push
data16
shl
lods
push
lret
jo
cmp
push
cmp
mov
lret
adc
mov
scas
jg
mov
movsl
xor
andl
mov
sub
inc
mov
mov
std
dec
xlat
lahf
xor
imul
clc
jns
lahf
arpl
shrb
sub
dec
mov
ja
cmp
mov
lret
or
cli
out
jg
xchg
scas
gs
xchg
dec
xchg
inc
int3
out
jge
mov
lcall
mov
xor
push
sahf
and
xchg
mov
xor
fstp
int3
fucomi
xor
pop
mov
sbb
rorb
gs
or
ror
inc
stos
or
dec
ljmp
push
pusha
xchg
mov
cs
call
mov
out
jp
mov
addr16
push
sahf
rolb
pushf
les
adc
fisubs
mov
cwtl
loop
cwtl
clc
call
loopew
inc
ret
fbld
jbe
loope
mov
out
or
lahf
push
sub
dec
pop
ret
and
fidivrl
push
add
sub
dec
mov
mov
pop
testl
cmp
es
imul
mov
ja
int3
mov
aad
pusha
fldl
push
mov
inc
fsubs
and
and
mov
dec
pop
push
stc
imul
sbb
insb
out
push
fmul
xchg
jae
xchg
or
or
popf
in
jle
xchg
pushl
sahf
mov
stos
les
out
and
outsl
xor
out
sti
xchg
aam
in
insb
out
repz
pop
dec
mov
mov
fbstp
mov
in
insb
push
cmp
mov
test
cmp
adc
sub
int3
cmc
jo
stos
sub
pushf
sub
jle
dec
sti
fisubl
idivl
movsl
cmp
repz
mov
fbld
and
xor
es
xchg
jl
incb
mov
pushf
dec
push
mov
test
jge
ret
inc
pop
ficoml
push
scas
pop
lret
adc
sub
sti
outsl
mov
fwait
jge
in
mov
mov
mov
fsubrs
dec
jecxz
cmpsb
or
mov
xchg
mov
popf
test
int
inc
xchg
add
shll
cli
test
int3
nop
in
xor
sub
out
rorl
xor
xchg
dec
repz
pop
lock
and
dec
add
xor
ds
push
inc
lods
cmp
dec
test
sbb
mov
fcmovbe
aam
pop
test
adc
arpl
sub
sub
cmp
mov
or
fwait
insl
cmpsb
mov
fcoms
fldt
pop
popa
popf
rorb
pop
sbb
push
sub
jecxz
push
cwtl
cmpsb
cs
lret
dec
cmpsb
sbb
and
loop
jno
adc
aad
out
lahf
cmp
ficomps
jno
pop
mov
pushf
dec
mulb
out
aad
mov
jns
xor
imul
push
push
cmp
dec
mov
pop
pop
in
jecxz
lods
dec
ss
es
cltd
aad
hlt
fadds
inc
out
mov
js
lcall
movsb
bound
fwait
sbbl
or
lds
repnz
imul
clc
insl
in
call
stc
dec
popa
mov
pop
sahf
xor
fs
scas
imul
jge
mov
out
xchg
add
imul
push
sahf
cmpsb
pop
dec
mov
sar
lret
loope
mov
scas
jl
push
xchg
pop
loop
cltd
or
mov
jb
or
push
sub
stos
jns
scas
jbe
inc
pop
fdiv
mov
cmp
fwait
xor
cmc
loopne
and
dec
adc
sbb
adcb
push
pop
mov
cmp
inc
popa
cmpsb
out
aad
leave
inc
inc
sarl
pop
repnz
sahf
enter
out
jle
add
inc
add
pop
pop
xor
rolb
jns
rolb
cmpsb
mov
mov
aaa
xchg
stos
jne
pop
xor
add
or
call
mov
jg
je
lret
mov
add
repnz
gs
test
adcl
jp
add
aad
aam
dec
add
xchg
xor
cmp
sarl
pop
dec
push
subb
out
mov
push
push
mov
scas
cmpsl
push
or
mov
setno
mov
cmp
ss
xchg
mov
lds
inc
adc
jle
movups
push
sti
ljmp
jae
add
sahf
nop
push
dec
movsl
lret
add
cs
insb
xchg
enter
stos
pusha
mov
movsl
inc
mov
sarl
pusha
ret
mov
add
outsb
adc
aaa
jge
jecxz
leave
adc
in
int3
mov
insb
ror
jae
and
xchg
adc
jg
ret
imul
fcmovne
movsb
cmpsb
mov
clc
outsl
jge
fdivr
and
scas
cmpsb
imull
mov
rcrb
je
xor
push
scas
sub
lds
stos
jp
loopne
xor
fsubrs
jnp
popa
fimull
push
adc
leavew
and
enter
shl
je
push
jecxz
push
push
cmp
mov
sub
and
bound
jo
bound
push
call
dec
shrb
es
test
xlat
fdiv
std
cli
std
ret
mov
aad
mov
mov
into
mov
mov
lcall
jae
add
xchg
adc
add
imul
sahf
mov
out
inc
and
daa
dec
cmpsl
push
out
mov
adc
stos
clc
aam
or
and
cmp
mov
push
mov
xor
ja
cmc
xchg
subl
bound
xor
fdiv
lods
push
into
xor
imul
and
push
aad
sub
xor
jp
mov
loope
or
jmp
stc
test
lock
sahf
nop
out
and
push
cmp
inc
scas
rolb
outsb
insl
dec
cmp
dec
insl
inc
repnz
inc
cmp
dec
repnz
xlat
xchg
mov
mov
fs
add
cmp
std
addb
sub
add
jno
cmp
inc
adc
int
cmp
lods
jne
xchg
arpl
add
mov
ja
repnz
pop
mov
mov
add
ss
in
stc
xor
adc
decl
lock
lods
xor
jle
mov
adc
in
mov
enter
gs
loop
adc
jb
int
xchg
dec
lahf
or
lods
orl
test
inc
mov
cmpsb
jmp
cmc
lock
xor
mov
es
icebp
push
or
mov
lret
push
cli
addr16
test
xlat
lahf
mov
adc
int3
loop
getsec
shlb
cs
pop
xor
jbe
ljmp
shlb
rorl
jmp
mov
adc
fistps
adc
mov
fmull
je
lea
rcll
jg
sbb
push
lcall
test
lock
in
xchg
jbe
jno
shl
jmp
add
add
fcompl
rep
icebp
lret
adc
loope
push
or
cmpb
das
xchg
cld
mov
mov
mov
xor
in
and
mov
repz
xchg
or
into
cmp
inc
ljmp
adc
inc
jno
mov
add
fs
or
sbb
dec
shrb
mov
push
pop
adc
push
ja
push
stc
inc
and
lea
sti
out
test
aam
mov
mov
testl
stos
jne
shll
ret
sub
rcl
js
add
xchg
fstpt
xor
adc
aaa
out
xchg
imul
mov
data16
repz
pop
adc
jb
xchg
repnz
inc
lcall
jo
nop
scas
add
test
lcall
cmp
jg
cmpsl
jl
fstpt
les
das
pop
ret
or
stc
push
cmpsl
out
add
sbb
pop
cltd
jns
mov
inc
or
mov
push
mov
rcrb
mov
cmpsl
pop
mov
fidivrs
add
add
mov
pop
add
lcall
xchg
lods
cmp
icebp
pop
mov
jg
bswap
nop
mov
stc
xchg
test
jge
in
jecxz
mov
sti
mov
cmp
mov
aad
cs
push
mov
mov
adc
fadds
test
mov
arpl
shlb
xchg
es
gs
test
push
out
mov
fcompl
inc
adc
dec
lods
test
jo
jge
xor
xchg
jecxz
jmp
xchg
enter
add
lret
into
mov
sub
es
pop
inc
and
xchg
test
inc
xchg
fnstsw
std
push
aas
mov
aas
xchg
in
test
cld
inc
push
in
repz
les
call
or
add
ret
pop
lret
jmp
add
lret
mov
jbe
xor
subb
mov
mov
pop
aad
mov
sbb
fsts
and
adc
stos
les
pop
cmp
imul
rorl
enter
pusha
mov
scas
ljmp
pop
push
das
test
and
sbbb
fstp
jo
xor
rcrl
inc
shl
sub
cmp
lds
pop
cmp
lret
xlat
lcall
adc
lcall
fstps
or
in
sub
xchg
inc
mov
xchg
xchg
lcall
lods
shlb
iret
xchg
out
out
pop
xchg
and
sbb
aad
sti
aaa
loope
push
xchg
imul
rcrb
xlat
mov
adc
pushf
cmp
insb
sbb
add
nop
add
xlat
popa
out
xor
xorb
fnstenv
icebp
mov
repnz
into
fstp
mov
add
lcall
pop
dec
sahf
pushf
and
out
mov
imul
outsl
xchg
inc
std
ljmp
jp
loop
push
lret
push
and
push
int3
das
ds
fucomip
xchg
push
nop
insl
push
add
jne
clc
xor
mov
jbe
sbb
xchg
lcall
leave
cli
cmp
pop
jg
add
adc
xchg
pop
or
mov
inc
xor
imul
mov
lcall
iret
lret
pop
es
or
xchg
xchg
sub
lea
or
jge
add
mov
imul
jae
mov
sbb
lahf
or
shlb
out
cld
mov
or
mov
stos
cmp
lret
jg
add
rep
fimuls
dec
dec
fidivrs
lret
xchg
or
dec
or
jecxz
mov
int3
les
lcall
jge
mov
in
dec
pop
in
jmp
jmp
sbb
adc
push
jle
test
sub
arpl
push
data16
ret
inc
jmp
add
imul
pusha
out
adc
in
in
gs
xorb
mov
mov
dec
mov
add
cmp
aaa
pusha
or
jno
test
sub
lret
xchg
imul
adc
movsb
ja
hlt
lret
outsl
nop
imul
pusha
add
xchg
mov
pop
out
ds
adc
sub
adcb
xchg
dec
jmp
adc
jmp
idivl
loopne
and
pop
in
mov
adc
mov
sbb
adc
xchg
in
mov
aas
mov
call
inc
dec
pop
imul
outsl
cltd
push
sub
aas
xchg
xchg
cltd
add
test
rolb
das
xor
pop
jno
jns
mov
or
and
adc
fisubs
inc
ret
mov
cmc
mov
pop
xor
jl
cmp
mov
call
lret
icebp
ret
mov
push
sbb
pop
lret
push
inc
in
sub
in
mov
sti
mov
push
negb
add
jge
lods
lds
testl
je
rcr
and
mov
lods
jle
xchg
daa
mov
xor
push
scas
sbb
int3
clc
and
pop
lea
pop
cld
push
adc
push
out
std
inc
loope
cmp
adc
das
lods
stc
hlt
leave
out
pusha
insl
mov
push
mov
push
pop
sbb
sub
xchg
jo
stos
dec
inc
add
mov
lea
sbb
in
mov
mov
addr16
and
les
sbb
jno
fldt
movsl
pop
xor
dec
ret
lret
xchg
popl
push
and
std
mov
and
insl
push
lea
fwait
inc
leave
in
inc
mov
jle
mov
inc
push
loopne
aam
mov
imul
cmpsl
or
data16
clc
adc
jecxz
or
add
pop
shll
xchg
iret
pop
repz
dec
movsb
popf
pop
popf
sub
scas
xchg
xor
imul
decb
or
rolb
mov
push
call
loop
dec
popa
test
mov
mov
mov
xchg
push
shl
shlb
xchg
or
mov
sub
les
pop
sbb
stos
push
push
xchg
jl
movsb
xor
aam
popa
push
lods
bound
js
fidivrl
adc
dec
in
std
fbstp
jbe
push
jno
imulb
lea
push
jge
iret
or
xchg
aas
fcmovbe
stc
popa
mov
add
sbb
adc
inc
jnp
jbe
xchg
sub
mov
xchg
inc
mov
jns
mov
mov
push
ret
les
ss
jbe
sar
inc
jae
mov
xchg
faddl
mov
xlat
pop
mov
and
pop
mov
pop
fnsave
dec
and
pop
jno
jbe
insl
int
std
leave
imul
push
dec
insb
out
xor
aad
jge
cmp
vpmaxub
add
test
add
xchg
les
pop
push
or
push
mov
lahf
aas
pushf
sbb
insb
mov
stc
adc
mov
xchg
lds
add
cwtl
popf
scas
adc
xchg
cli
sub
xchg
adc
and
lret
data16
gs
mov
mov
xorl
stc
mov
xchg
or
je
ret
xlat
lods
or
stos
mulb
jbe
cld
xchg
and
sbb
jp
jge
or
je
cltd
xchg
mov
cmp
lods
jns
pop
roll
js
mov
mov
jnp
les
push
mov
aam
sub
int
ja
and
dec
add
cmp
xor
or
rorl
or
stos
pop
je
gs
pop
adc
int
fisttps
shlb
dec
xor
inc
hlt
sub
pop
shrl
sbb
pusha
enter
cmp
mov
xchg
aad
fsub
or
xor
cmp
add
inc
pop
nop
add
out
into
cmp
or
mov
jb
add
rorl
xchg
push
jp
xor
sub
js
xchg
sub
fists
push
loope
pop
inc
adc
in
fstps
movl
sahf
pop
mov
sar
popa
mov
in
push
jnp
or
lcall
and
cmp
cltd
fiaddl
aam
mov
addr16
das
stos
and
xchg
mov
mov
jae
cmpsb
je
push
jmp
adc
out
in
push
inc
push
pop
aad
in
gs
lahf
push
jmp
cmpsb
mov
adc
aad
in
inc
cmp
mov
shll
pop
or
pop
jg
imull
punpcklbw
in
mov
dec
jae
push
fwait
pop
sub
dec
pop
icebp
jmp
fs
dec
std
and
insl
lahf
sbb
jae
cwtl
xor
lcall
es
sub
push
es
mov
icebp
sbb
loopne
cltd
fs
scas
mov
inc
push
imul
std
inc
cmp
cwtl
insl
xchg
je
adc
sbb
mov
xor
insb
int
push
jnp
ljmp
jbe
inc
mov
popf
lock
es
fidivrs
push
out
repz
scas
dec
stc
sub
dec
inc
cmpsl
push
clc
rorb
cmp
and
aad
sbb
mov
andl
or
scas
adc
rcr
mov
pusha
imul
mov
loopne
sub
lahf
inc
mov
add
mov
sub
imul
dec
fs
jnp
je
xchg
fsubl
in
andb
push
dec
jb
sub
loop
scas
mov
cmpsb
add
roll
cmpsl
ret
in
dec
pop
and
mov
icebp
mov
pop
mov
fs
add
andl
lcall
subb
mov
outsb
test
mov
xchg
inc
nop
adc
cltd
sbbb
aad
xor
mov
por
mov
lret
mov
lea
dec
fdiv
push
les
jbe
cmp
out
inc
cmp
xor
nop
and
ja
js
or
xor
mov
fistpll
adc
and
mov
rcrb
fwait
mov
sbb
loopne
mov
or
add
lcall
dec
xchg
xor
mov
aad
loopne
xor
jnp
inc
ljmp
sbb
mov
test
imul
xchg
dec
roll
js
sbb
adc
push
test
mov
and
lods
mov
push
out
or
divl
bound
and
xor
loopne
scas
mov
add
cmp
mov
xchg
xchg
stc
sub
ss
push
mov
enter
inc
jb
inc
xor
popf
jl
cltd
cli
push
sub
int3
jle
mov
aaa
jns
sbb
outsl
test
xor
test
stos
mov
pusha
test
push
repz
jo
cmpsl
leave
add
fmull
mov
inc
sub
outsb
in
mov
dec
pop
out
pusha
jb
add
pop
sub
and
sbb
xchg
loopne
ret
ss
or
jge
divl
fsub
fbstp
cs
inc
adc
cmpsl
into
jne
idiv
adc
adcl
pop
je
mov
clc
dec
xor
push
sub
and
xchg
imul
xor
je
dec
push
mov
aas
or
clc
xchg
add
cli
push
movsl
dec
pop
adc
sbb
sbb
dec
shl
in
push
push
int3
jbe
pop
fistpl
pop
jne
inc
and
pop
xchg
loope
or
mov
jg
subb
pop
jbe
fidivrl
out
mov
sahf
in
cmp
xchg
and
adc
cmp
int3
xor
es
rcrl
in
lret
test
lret
repz
mov
push
inc
outsb
orl
inc
jecxz
inc
adc
pop
aam
cmp
cs
and
dec
cmpsb
jns
dec
push
loope
pop
cmpsb
mov
pop
jbe
outsl
in
adc
repnz
leave
jecxz
inc
aaa
mov
loop
daa
adc
sub
mov
jne
cmp
stos
notb
cltd
jg
jle
es
ret
jnp
ljmp
mov
xor
push
cli
ljmp
jno
jg
jp
lods
inc
adc
rclb
dec
mov
mov
adc
pop
rorl
jbe
out
pop
mov
loop
push
push
adc
sbbl
sbb
rcll
cmp
push
mov
hlt
and
and
add
jns
push
xlat
out
add
insl
aam
or
pusha
testl
outsb
xchg
mov
test
aam
fidivl
lea
cli
jg
mov
inc
pop
jmp
dec
push
jnp
cmp
ja
ffreep
jle
mov
push
mov
push
das
jmp
adc
xchg
push
call
std
mov
sbb
rcr
mov
adc
arpl
jb
adc
lret
bound
aaa
adc
idivb
lahf
or
mov
and
shlb
lcall
or
and
adc
mov
mov
ljmp
xchg
dec
inc
jp
jns
push
dec
add
test
push
mov
or
call
pop
cmp
repz
in
add
pop
xchg
insb
mov
sbb
in
inc
rcll
push
mov
mov
in
loop
pushf
cld
pop
sub
imul
sub
in
mov
stc
jno
fbld
arpl
insl
and
push
push
xor
add
cmp
add
popl
fs
imul
mov
sub
loopne
adc
data16
inc
adcl
or
pop
cltd
stc
ret
sub
inc
cwtl
loopne
inc
sti
orl
or
fmulp
mov
mov
adc
add
jecxz
xor
scas
scas
jl,pn
scas
jns
sbb
call
loope
dec
pop
outsb
mov
mov
dec
dec
jle
dec
nop
sub
jmp
lods
andb
idiv
jo
mov
jl
cmp
jle
scas
test
insl
mov
push
lods
push
sbb
mov
pushf
imul
aas
jbe
sbb
mov
push
fiadds
std
xor
leave
sub
dec
jmp
inc
aas
imul
pop
xorl
xchg
xor
mov
scas
adcb
cmpl
xchg
mov
movsl
je,pt
mov
dec
cwtl
call
xor
mov
and
and
out
push
jnp
cmp
lods
dec
fsts
jb
mov
ja
stos
lods
inc
out
xor
mov
insl
sbb
or
mov
mov
in
pop
mov
outsb
mov
sub
imul
mov
dec
flds
xlat
inc
fldenv
scas
push
fadd
add
subl
xor
add
xchg
mov
pop
xor
push
lahf
pop
add
popf
xchg
xor
lock
lds
les
mov
mov
mov
adc
add
xchg
xor
cmp
scas
add
imulb
fs
imul
int
mov
arpl
xchg
fisttpll
jle
bound
cmpsl
sarl
push
push
inc
add
push
test
adc
pop
test
xchg
ret
mov
xchg
jbe
pop
out
cltd
jl
and
mov
cmp
andl
in
and
loope
in
mull
inc
fwait
mov
mov
mov
outsl
arpl
mov
mov
or
ficoml
or
and
mov
jge
sub
call
sub
andl
insb
fwait
push
scas
arpl
cmp
out
jmp
jmp
or
imul
out
les
xchg
bound
jb
adc
xor
jae
and
jle
hlt
scas
enter
loop
push
lcall
cs
repnz
xchg
pop
cmp
into
add
dec
in
imull
pop
push
aaa
xor
xor
outsl
mov
dec
pop
adc
xor
add
push
lret
and
rcll
stos
sub
xchg
sbb
push
in
mov
push
or
mov
dec
xchg
push
pop
fldcw
mov
loopne
lret
adc
pushf
dec
xorl
and
pop
adcl
or
outsb
mov
cmp
loopne
out
xchg
jle
sahf
sub
aas
fwait
popf
out
stos
mov
push
pop
sbb
rolb
adc
mov
cmp
pop
lea
inc
add
pop
adc
in
mov
rol
pop
arpl
sbb
jl
iret
cli
fistpll
pushf
jle
push
std
mov
mov
mov
or
sub
sub
leave
out
std
ret
inc
sub
emms
adc
mov
inc
adc
jle
daa
test
aaa
hlt
mov
inc
push
inc
stc
es
adc
jnp
lods
loope
jmp
fdivrs
decl
mov
mov
inc
rolb
js
pop
cmp
sbb
xor
fldl
adc
icebp
jbe
loop
push
push
and
adc
dec
shlb
dec
lret
popa
pop
push
test
mov
in
shlb
scas
popf
mov
insb
in
mov
xor
stos
add
lods
std
jle
aas
add
sub
ds
inc
xchg
push
leave
xchg
jecxz
and
dec
loope
ss
scas
xor
and
xlat
movsl
mov
jmp
mov
dec
ret
sarb
sub
jns
sub
inc
inc
push
in
sbb
mov
push
xchg
loopne
out
ret
adc
sbb
adc
cs
mov
test
cmc
movsl
jno
and
orb
sarb
clc
divps
sub
inc
lcall
loopne
loopne
cwtl
inc
mov
dec
and
pusha
movsb
lret
test
imul
gs
sarl
mov
push
dec
dec
adcb
mov
movsb
fstpt
andb
cwtl
cmpsb
sbb
jne
fildll
add
or
out
cs
dec
nop
mov
add
ds
enter
cmp
outsl
fidivrs
sbb
fadds
mov
fiadds
hlt
dec
rorl
mov
arpl
or
cmp
sbb
mov
repnz
sbb
inc
pop
subl
mov
pop
std
mov
push
mov
imul
push
into
xor
aaa
nop
ja
ja
jnp
or
jns
hlt
es
sub
add
adc
push
dec
lds
aaa
mov
mov
dec
xchg
leave
rcrb
inc
idivb
xchg
cwtl
notl
jecxz
cmp
sub
es
stos
sub
imull
add
sbb
pop
in
adc
cwtl
call
dec
inc
subb
sti
or
sub
sahf
pusha
xlat
push
xor
mov
and
mov
xor
dec
or
cmpsl
outsl
iret
sub
push
add
out
je
sbb
lods
repnz
cli
test
jmp
lock
push
mov
lods
fsubrs
or
std
loopne
or
cli
inc
fstp
sbb
mov
outsl
bound
imul
jmp
jmp
test
mull
push
nop
nopl
iret
mov
mov
push
imul
fs
daa
pop
addr16
xchg
push
inc
cmc
mov
jl
pop
sub
into
mov
nop
or
out
add
inc
popf
xchg
or
jmp
cmp
mov
arpl
mov
xor
repnz
mov
mov
loope
cmp
and
pop
pop
out
xchg
cmp
jae
jo
fmull
addr16
repnz
cld
mov
outsb
pop
sbb
pop
push
pop
aam
in
std
popa
aam
jg
mov
test
fbstp
dec
fisttpll
out
sub
lea
xor
mov
ja
xchg
sar
data16
gs
fld
mov
movsl
pusha
imul
xchg
mov
add
sbb
cli
lds
shlb
xor
in
test
add
mov
leave
sbb
sahf
push
jmp
aad
sarl
pop
outsb
cwtl
xor
cmp
iret
mul
adc
jno
cmp
loop
dec
adc
xchg
xchg
ret
cwtl
hlt
adc
cld
out
insb
xor
jl
dec
popf
mov
aad
push
inc
fimull
adc
add
cmp
sti
inc
xchg
adc
mov
inc
in
sub
dec
mov
mov
ss
movsl
popf
xchg
ret
xchg
jmp
enter
push
insl
imull
clc
cltd
lea
xor
pop
add
ljmp
and
bound
jl
xchg
push
arpl
shrd
or
push
fchs
pop
in
xchg
ffreep
add
clc
xor
dec
mov
js
mov
lods
test
push
sbb
and
sbb
push
je
xor
shll
dec
movsb
dec
mov
sti
addl
push
xchg
test
fldcw
add
mov
pop
sub
pop
clc
inc
imul
mov
pop
push
ds
sub
cmc
jno
xor
gs
out
mov
mov
lock
mov
xchg
mov
into
gs
jge
cmpsb
add
lret
test
data16
aam
xchg
lds
sbb
lods
jae
inc
fld
mov
cmp
into
cmp
jb
in
jb
fbld
call
jnp
push
ret
or
gs
mov
sbb
jmp
idivl
xchg
in
xchg
jecxz
jne
pop
pop
into
xchg
fst
adc
in
jp
or
cmp
and
cmpsb
mov
xchg
mov
in
das
add
out
push
inc
push
test
insl
out
xchg
sbb
mov
outsb
push
mov
mov
pop
rorl
inc
sbb
dec
jecxz
mov
dec
nop
jecxz
pusha
pop
xor
or
cmp
shl
lret
in
mov
adc
loopne
sbb
fistpll
mov
fmuls
test
cmpl
pop
lret
cmpsb
jno
fcmovbe
sub
inc
in
insl
data16
fidivrs
lea
xor
mov
in
and
xchg
out
stos
sub
xor
mov
cmp
pop
pop
dec
pop
fwait
jo
cmp
sbb
nop
ljmp
cwtl
cmp
xor
insb
test
cmpb
mov
scas
leave
popf
add
sbb
fcompl
scas
call
push
test
ret
mov
or
sbb
add
call
test
aam
mov
into
lock
push
push
aas
jns
lcall
test
cmp
mov
popa
in
dec
outsl
popa
insl
mov
shll
enter
xchg
enter
push
push
test
mov
lods
rcr
pusha
or
pushf
or
mov
mov
cltd
shll
aas
icebp
rorl
fistpl
test
xlat
ljmp
pop
jbe
push
add
lock
push
jb
data16
add
jle
adc
insb
lcall
jnp
rcrl
jo
fisubs
int3
and
pop
ljmp
dec
sbb
mov
and
dec
cmp
ret
scas
or
sub
mov
add
ss
ficompl
aas
jb
add
movsb
repnz
repnz
fmuls
xchg
ja
notb
data16
xor
xor
cmp
je
inc
fdivr
add
lock
push
arpl
jl
loopne
and
imul
jp
sub
inc
imul
jbe
outsl
pop
int3
das
jns,pn
ret
jge
mov
or
lods
add
lret
xor
xlat
data16
mov
jns,pn
mov
loope
stos
pusha
cwtl
mov
xchg
maxps
cmpl
or
xor
pop
enter
sbb
insl
pop
adc
insl
mov
push
pop
fwait
test
sarb
stos
mov
into
je
stos
jp
dec
sbb
inc
lahf
mov
insl
xor
pusha
int
insb
pop
adc
into
push
xor
mov
in
insb
dec
xor
xchg
les
lods
dec
mov
mov
adc
mov
mov
repnz
in
sbbb
out
sub
scas
push
int
pop
jae
sbb
imul
xlat
popa
popf
loope
loop
xchg
dec
jg
out
jecxz
sti
scas
add
imul
out
inc
mov
inc
dec
cwtl
addr16
imul
ss
push
mov
xchg
fisttps
inc
xor
pop
loop
dec
sarl
repz
mov
stc
sbb
cltd
xchg
aad
popf
and
pop
aam
and
or
sbb
cmp
nop
addl
xor
and
dec
push
mov
fwait
push
rcr
jle
mov
mov
popa
addr16
xchg
idiv
push
dec
pop
xor
pop
add
adc
bound
jmp
xor
mov
aas
je
xor
out
sbb
jnp
pop
lods
aas
sub
xor
out
int3
lahf
jp
movsb
and
inc
subb
and
adc
jmp
sub
lret
mov
and
lock
and
test
out
jb
pop
in
imul
or
jne
jp
inc
jp
push
es
inc
scas
cmpsl
push
stos
daa
adc
push
pop
mov
mov
cltd
iret
fs
cmpsl
pushf
call
xchg
dec
std
pop
aam
ss
xchg
jl
jg
mov
lea
or
fs
outsl
xchg
fadds
or
jge
gs
pop
int
rol
dec
cli
sbb
mov
scas
sbb
imul
push
cmp
clc
das
jae
jmp
movsb
lods
inc
std
sbb
inc
out
lock
scas
sbb
or
outsl
int3
push
push
rorl
mov
out
test
das
repz
jl
dec
xor
sbb
pusha
xor
mov
pop
cmc
mov
xor
pop
popf
stc
mov
jb
pop
cmp
pop
into
cmc
ss
jle
mov
rcll
jae
mov
add
call
mov
jle
pop
jmp
hlt
add
mov
into
into
lahf
mov
inc
dec
push
cmp
ss
je
push
lods
dec
std
push
lret
sarl
xor
lret
outsl
rorl
test
popf
dec
cmp
xchg
inc
es
insb
push
popf
add
xor
scas
xchg
orb
out
inc
outsl
pop
out
mov
mov
adc
or
repnz
insl
adc
iret
xchg
nop
les
fstpl
sbb
and
insb
pop
push
call
ret
lret
das
push
sub
jno
jl
into
outsl
push
inc
cmp
pop
pop
movsl
mov
pusha
xchg
adc
insl
xor
je
mov
repz
jno
sub
std
jmp
pop
test
push
dec
movsl
sbb
xchg
scas
bound
sbb
adc
mov
js
into
sbbb
xchg
dec
ret
mov
outsb
dec
icebp
rcr
sub
int3
add
scas
ljmp
ss
in
lcall
mov
repnz
adc
jg
and
xchg
jno
pusha
gs
and
push
bound
test
inc
or
mov
enter
pop
or
call
and
mov
inc
lock
aaa
or
xchg
out
jp
sbb
cmp
imul
js
lods
push
cmp
ret
insl
shrl
pusha
cmp
mov
push
test
cltd
mov
scas
out
mov
add
jmp
pop
pop
int
call
xor
clc
popf
cs
mov
xchg
roll
std
sbb
bound
lahf
loope
mov
push
xor
sbb
mov
dec
adc
jo
add
and
in
int
dec
or
mov
mov
cs
das
push
lret
jg
push
fincstp
sub
fimull
fdivrl
outsl
xchg
pop
and
mov
outsl
xor
sbb
pop
push
jbe
xor
outsb
inc
outsb
cltd
fisttpll
jge
push
mov
test
xchg
adc
repnz
ds
mov
push
cwtl
lds
jecxz
or
je
pop
add
sbb
mov
mov
std
mov
add
pop
mov
outsb
std
out
lods
dec
jnp
pusha
sbb
pop
cli
mov
sbb
fsubr
adc
pop
push
mov
jns
gs
inc
jae
push
arpl
sahf
daa
roll
xlat
lods
into
lret
dec
test
pop
add
jl
bound
push
scas
jp
push
push
add
mov
mov
fwait
andb
hlt
popaw
mov
jae
jne
dec
push
xor
and
ljmp
push
mov
cmc
pop
mov
pushf
cs
and
xchg
in
or
sbb
es
mov
ficompl
out
nop
fucomip
clc
dec
push
fldenv
leave
cmp
dec
frstor
mov
stos
es
jg
cld
in
xchg
and
sar
push
loopne
dec
jmp
rolb
adc
cmc
out
lret
xor
fs
addb
mov
xchg
pop
stos
in
dec
xor
pop
fisubl
mov
test
in
rcll
pop
xchg
int
push
sbb
and
scas
push
cmpsb
loop
negw
xor
mov
scas
xor
popf
xchg
cmp
popf
ss
ret
adc
push
jbe
mov
hlt
dec
rcrl
movsl
mov
clc
adc
faddl
fcomi
adc
cwtl
pop
lods
jge
push
cs
pop
out
sub
cmp
in
nop
cmp
pop
daa
cmpsl
adc
ret
pop
pop
xlat
sbb
bound
jb
adc
stc
cltd
mov
cmp
add
jle
jecxz
pop
cmp
test
mov
shrl
movsl
in
cmp
fnsave
cmc
clc
fcomi
into
lcall
cmp
out
fwait
sub
pop
ss
sbb
scas
mov
sbb
ja
mov
mov
enter
xor
or
cmp
adc
leave
xchg
xchg
ljmp
pop
add
jmp
add
stos
or
pop
sub
mov
inc
bound
jle
rclb
lock
and
test
dec
hlt
sub
outsl
xchg
lcall
dec
outsb
daa
pop
insb
negl
arpl
cli
fsqrt
fdivrl
dec
in
or
jg
dec
xor
adc
loop
jnp
xchg
movsb
mov
adc
lds
sbb
ljmp
popa
cmp
or
test
and
mov
ud2
push
aam
sbb
push
lods
scas
adc
loopne
or
outsb
xchg
sbb
dec
xchg
test
pop
fistpl
lahf
out
xor
lods
add
loope
sub
pop
cmp
pop
mov
mov
and
push
jecxz
xor
push
and
shll
sub
jo
mov
stos
call
jno
inc
shrb
lahf
addr16
fucomi
sahf
mov
jmp
push
jbe
xor
cmp
arpl
mov
xchg
std
stos
inc
addr16
mov
cmpsl
dec
call
cltd
push
aad
jbe
mov
outsl
stos
inc
stos
push
les
and
shll
outsl
xor
jns
int
adc
das
jg
mov
push
loopne
xlat
mov
inc
or
in
jp
push
and
xor
cli
aas
sbb
cwtl
xor
cmp
or
jmp
push
sub
in
sub
pop
push
inc
orl
inc
jle
mov
repz
imul
jge
mov
xor
jno
aam
adc
pop
aas
test
aad
out
push
lahf
test
jg
scas
test
jno
mov
xchg
jl
in
sti
pushf
pop
xchg
sarl
xor
jae
inc
stos
xchg
sbb
das
jbe
ror
test
es
inc
pop
sbb
and
sbb
lods
testl
mov
pusha
adc
push
aam
push
mov
aam
pop
pusha
xchg
roll
insb
sti
push
std
jne
and
adc
jmp
sub
mov
icebp
frstor
imul
cld
mov
jl
pop
adc
xchg
scas
or
pop
hlt
stos
xchg
inc
movsb
xor
adc
dec
cs
jg
sbb
cld
out
sub
mov
mov
mov
mov
repz
mov
loope
clc
push
pop
aaa
pushf
jae
dec
mov
das
fsubrs
cmp
scas
xchg
mov
mov
mov
dec
lret
cld
push
pop
out
mov
mov
dec
inc
popa
sub
ss
or
repz
cwtl
jbe
iret
jecxz
jnp
sbb
mov
sub
test
pop
scas
add
cmp
insl
xchg
and
cmpsb
iret
ljmp
repnz
negb
outsb
dec
push
and
pop
loop
jbe
sbb
imul
sbb
pushf
cmc
cmp
xchg
addr16
mov
movsl
xor
test
push
je
mov
lods
mov
or
stc
pop
mov
cmp
jns
je
mov
jmp
xor
inc
or
sahf
push
cmp
je
cmp
add
std
js
enter
pop
jo
arpl
inc
in
icebp
xor
leave
add
cmp
mov
popf
inc
mov
shrb
ffree
insl
push
fsubrp
in
imull
pop
pop
pop
out
jge
xchg
and
loop
cld
cmc
xor
out
loope
fisubl
iret
dec
dec
inc
fcomip
push
or
mov
test
in
repnz
das
mov
nop
xchg
xchg
xchg
push
xor
dec
imul
and
jno
or
jno
fsubrl
es
imul
in
cld
dec
pop
mov
add
jg
pop
jp
das
sti
decl
push
icebp
dec
movsb
test
pop
or
js
stos
lcall
testl
mov
stos
sbb
cmpsb
or
in
mov
ljmp
jecxz
imul
out
mov
inc
je
in
rolb
in
test
or
pop
fs
add
gs
ret
mov
enter
cmpsl
lock
out
call
hlt
inc
inc
shlb
sbb
ffreep
push
mov
lock
iret
out
inc
shrb
adc
jae
sub
and
dec
pop
mov
cmp
jae
pop
xchg
push
ret
and
out
hlt
fcoms
cmp
inc
addl
adc
enter
movsl
cmpl
mov
in
mov
inc
aam
sbb
and
xor
aam
xor
leave
cmpl
push
push
addl
push
js
add
inc
and
out
mov
and
mov
mov
cmp
cli
mov
in
adc
mov
test
xor
fmull
mov
or
jmp
xchg
adc
push
xchg
adc
fs
movsl
sub
xor
pop
sub
xor
lock
fistl
into
pusha
sbb
xchg
in
sahf
xor
sbb
sub
loope
lods
subb
sub
inc
hlt
cmc
jle
dec
push
loope
icebp
out
and
mov
pop
cltd
adc
jmp
iret
je
or
jle
lds
xchg
dec
stos
mov
sbb
sti
add
add
push
xor
fs
push
mov
clc
lods
inc
mov
inc
sbb
mov
cmc
jg
mov
stos
stc
inc
loop
xor
cmp
cltd
xchg
or
add
jmp
mov
inc
jge
je
inc
and
insb
or
sbb
push
lcall
pop
or
stos
sti
icebp
lods
mov
fcmovbe
gs
push
jge
cmpl
in
cli
xchg
jnp
and
lcall
jmp
fistpl
bound
ret
mov
and
loop
call
loop
out
iret
into
jns
jb
jmp
sub
rcll
jo
mov
sub
nop
sub
xchg
cmp
jmp
push
dec
xor
repz
scas
test
push
jmp
insb
and
pop
cltd
inc
rorb
es
mov
das
movsl
mov
repz
into
movsb
fst
sbb
ljmp
add
xchg
mov
xchg
pop
adc
je
pusha
jae
ja
daa
sub
insb
in
enter
jle
sarl
daa
enter
filds
inc
sub
jns
out
dec
jmp
idivl
loope
mov
pop
leave
push
stos
hlt
add
in
in
xor
and
jp
mov
jp
and
stos
and
cmp
mov
popa
lea
xchg
or
fsubrl
mov
and
xor
fists
cmpsl
dec
insl
dec
and
lea
leave
mov
pop
dec
shrl
insl
sti
stos
adc
orb
enter
dec
lret
sub
mov
iret
ficoms
push
in
xchg
or
ss
jb
out
cmpb
adcb
and
loope
sbb
std
fcoml
xchg
in
jns
lcall
push
adcb
nop
scas
push
xchg
into
fsubl
dec
ret
insl
adc
ret
mov
sub
jmp
mov
insl
inc
mov
adc
cwtl
outsb
cmp
test
mov
es
mov
cli
and
or
lret
stc
stos
mov
clc
cmp
addr16
shl
inc
jmp
sbbl
insl
xchg
pop
inc
xchg
mov
jecxz
aas
pop
dec
jne
in
adc
add
push
pop
cs
jae
shlb
js
dec
push
mov
push
mov
mov
je
fmulp
mov
or
fcom
xor
mov
hlt
dec
rcrl
ss
fmuls
dec
dec
lcall
adcl
add
fistpl
sbb
scas
push
pop
jb
stc
pop
sbbl
push
stc
push
jl
inc
dec
pop
sub
lret
leave
dec
pushf
xchg
push
or
js
fcomps
popf
mov
scas
movsl
stos
push
or
xor
in
hlt
jp
insb
pop
push
inc
adc
pop
mov
inc
pop
mov
cli
in
inc
mov
ss
sub
jmp
rclb
pusha
inc
inc
aam
adcb
jb
fldenv
and
lods
imul
imul
arpl
cmc
cld
bound
pop
imul
push
shrb
cli
pop
mov
adc
imul
nop
and
adc
pop
lods
jnp
push
fwait
dec
in
insl
sbb
imul
mov
and
mov
and
test
sbb
jp
addl
addr16
and
cmp
lret
test
das
push
dec
or
inc
fidivrl
arpl
lods
bnd
add
dec
pop
xchg
jae
jecxz
and
lds
aad
ficoms
dec
and
icebp
cmp
cmp
fiaddl
aad
xchg
pop
dec
lret
adc
rorb
mov
fadds
mov
sbb
or
xor
ret
jle
xor
push
ja
pop
pop
aas
mov
mov
lcall
add
push
rorl
stos
or
mov
inc
dec
in
test
cmp
rorb
mov
or
adc
adc
or
rcll
sahf
stc
add
sbb
fidivl
push
dec
je
mov
test
nop
into
xor
sub
adc
or
fcomps
xchg
xchg
lods
mov
fmull
jge
leave
mov
mov
push
xchg
mov
mov
rcrl
pop
inc
cmp
in
shr
fsts
inc
sub
push
jns
jae
in
pop
xchg
mov
cld
dec
pop
addr16
adc
mov
iret
lock
ljmp
or
nop
mov
sbb
mov
bnd
inc
sbb
mov
ss
and
xchg
and
ja
outsb
mov
ljmp
inc
mov
out
push
pop
test
mov
push
mov
hlt
jnp
loope
push
fs
out
jbe
cwtl
popf
sbb
es
js
push
cwtl
mov
inc
popf
jp
jbe
and
js
sub
ret
xchg
mov
out
je
xor
or
mov
mov
ja
push
in
add
sarb
push
xor
pop
inc
out
cmp
fucomi
pop
ds
sub
ss
pusha
xchg
sbb
lock
add
mov
movsl
daa
jp
ficomps
cmpl
cmc
xchg
in
ret
jbe
scas
xchg
imul
jecxz
xchg
sbb
lahf
insl
jl
lcall
out
jle
mov
clc
int
dec
pusha
aaa
gs
gs
cmp
frstor
sbb
pop
cs
dec
or
cmp
fidivs
sub
cmc
movsl
xchg
out
aad
mov
cld
jecxz
int
inc
lock
icebp
out
cmpsl
lahf
xor
mov
mov
cmp
repz
call
adc
mov
jmp
stc
pop
ret
and
popf
sub
adc
mov
in
pusha
fdivr
stos
lahf
ljmp
les
pop
push
adc
mov
insb
cmpsl
push
add
xchg
push
mov
iret
or
out
popa
push
jb
mov
stos
addb
pop
push
mov
adc
mov
imul
pop
fsubl
or
add
xorl
lds
out
xor
mov
insl
bound
pop
stos
shlb
xor
cmpsb
mov
data16
pusha
add
xchg
ret
ret
insb
pop
jbe
mov
or
insl
cli
cmpsb
pop
outsb
pop
fs
in
cltd
mov
fcompl
cmp
jg
les
xor
out
mov
jp
xor
test
mov
sbb
xchg
xor
call
leave
aaa
dec
pusha
cwtl
aas
jae
xor
test
xor
mov
in
call
scas
hlt
dec
iret
outsl
outsb
rcll
in
pop
cltd
sarl
cmp
cmp
cmc
push
rolb
or
inc
mov
mov
ds
repz
xor
inc
mov
nop
mov
mov
mov
rol
xor
sub
and
xchg
dec
inc
add
pop
or
jmp
xchg
push
mov
in
mov
mov
shll
pop
test
lods
repnz
cmp
jae
lret
enter
adc
in
leave
icebp
inc
in
adc
or
cmp
in
dec
pusha
enter
jae
jmp
dec
mov
mov
loop
pop
loop
sbb
ss
insl
xchg
imul
add
push
cmc
jge
fistpll
or
pop
mov
clc
xor
inc
shlb
cltd
test
pop
fbstp
mov
push
mov
jb
pop
ss
jns
nop
dec
outsl
fstl
repnz
iret
mov
loope
cmpsb
dec
push
and
in
inc
into
rcrl
fs
xchg
stc
cmp
add
mov
mov
xor
mov
jg
pop
and
jae
push
es
pop
inc
iret
cld
xchg
push
fwait
push
inc
mov
sub
mov
jp
sub
xchg
jo
mov
mov
inc
mov
add
fldenv
mov
int
cltd
mov
ss
xor
rcll
push
adc
dec
fnstsw
divl
mov
decb
push
and
xchg
les
outsl
mov
test
nop
sbb
fnsave
fisttpl
shr
enter
cmp
pop
mov
scas
xor
out
xchg
adc
mov
sub
mov
dec
gs
adc
cmp
jp
push
inc
push
mov
mov
push
mov
inc
mov
xchg
sarl
push
xor
mov
shl
movsb
stos
or
or
dec
add
mov
xchg
or
pop
mov
xor
sbbb
add
pop
adc
and
xor
out
hlt
ret
inc
cmc
addl
push
cli
in
push
test
xchg
scas
imul
iret
push
jle
and
jp
jo
int3
jle
inc
mulb
in
jecxz
mov
mov
push
xchg
xor
pop
test
lret
cwtl
inc
addr16
mov
mov
cmc
mov
pop
mov
fwait
cwtl
jp
roll
or
or
ds
lea
jbe
cmpsb
orl
lock
or
mov
std
pop
and
mov
add
nop
jnp
pop
lods
sub
pop
cmp
pop
addr16
sub
cmp
or
jmp
scas
push
loope
jmp
pop
je
push
mov
and
pop
lds
lret
xchg
stos
cmpsl
fxch
mov
adc
fistps
inc
pop
dec
dec
movsl
ds
scas
das
inc
xor
xchg
int
int
subl
mov
push
pop
lret
idivl
in
jb
xchg
xchg
jp
push
sub
mov
jns
mov
lds
cmc
xor
mov
stc
jmp
mov
fdivrl
dec
pop
xor
push
roll
sarb
loopne
mov
dec
xlat
cmp
add
bound
mov
push
test
and
bsf
ja
loop
ds
mov
aad
cli
xor
and
jecxz
je
sub
out
cli
ljmp
cmp
aam
icebp
inc
sub
cmpsb
test
call
add
jecxz
push
scas
inc
test
test
outsl
sub
mov
cltd
pop
cwtl
mov
mov
jge
pop
aaa
cmp
xchg
movsb
lahf
mov
cld
mov
ror
out
sbbl
scas
in
fsubrp
fwait
and
lods
aad
dec
jmp
js
jbe
test
dec
mov
pop
sbb
movsb
xor
add
lcall
dec
adc
setno
stos
fdivs
loope
jmp
dec
into
cmc
mov
out
aad
and
in
xor
rep
lds
sahf
or
xchg
insl
sbb
sbb
xor
mov
xor
scas
into
mov
leave
shrb
add
out
mov
xlat
test
or
adc
js
jecxz
outsb
xchg
and
add
pop
pusha
pop
mov
mov
xor
jmp
imul
pop
cmpsb
push
cltd
mov
jne
xor
ljmp
mov
add
icebp
dec
jecxz
inc
cs
jo
sub
sahf
les
jle
or
mov
dec
mov
and
jg,pt
pusha
adc
popf
jl
xchg
mov
filds
adc
xchg
sbb
arpl
mov
fwait
mov
arpl
push
insb
out
xor
lret
test
mov
inc
cwtl
into
mov
lret
sbb
push
xor
ja
add
push
jle
int3
clc
rolb
push
and
jns
inc
jp
notl
lret
jno
and
and
mov
pop
add
mov
xchg
fdivrs
sbb
pusha
mov
or
nop
imul
and
jecxz
jnp
mov
xor
add
xchg
mov
xchg
pop
mov
insl
cli
lahf
iret
fwait
fwait
mov
sub
test
les
jle
pusha
jb
scas
ljmp
jb
mov
outsl
cmp
ret
imul
jnp
add
dec
pop
sbb
xlat
mov
testl
sbb
adc
movb
mov
repnz
sub
cmp
imul
dec
adc
inc
fildll
psubb
mov
fnstenv
shll
shl
cs
ja
mov
stos
jge
pop
mov
adc
and
mov
dec
shll
minps
inc
jnp
and
test
mov
imul
xlat
les
inc
test
cld
test
gs
fistpll
inc
adc
jns
sahf
negb
arpl
imul
ret
fbstp
js
jg
sarl
sbb
add
and
add
pop
aad
test
mov
es
lea
jne
daa
xor
cmpsl
mov
imul
xchg
cmp
and
xchg
loopne
hlt
pop
ds
mov
xchg
iret
jecxz
fiaddl
sbb
adc
adc
lret
fsubrl
add
fs
fs
xchg
push
mov
mov
pop
addr16
aaa
sbb
js
test
mov
nop
pop
jecxz
and
cmp
cmp
xlat
xor
xor
adc
addr16
int
bound
jle
test
sbbl
shll
dec
mov
cmc
and
add
mov
bound
mov
enter
adc
loop
bound
data16
hlt
xlat
mov
inc
push
hlt
xor
xor
hlt
rcl
mov
loop
aas
in
jnp
jge
adc
dec
mov
cmpsb
jmp
add
xchg
scas
test
ret
push
or
pop
push
loope
jo
add
push
test
shrb
add
cmp
fimull
adc
out
lods
out
popl
mov
les
dec
scas
dec
mov
adc
ficoms
pusha
or
cld
int
cmp
loopne
mov
int3
sbb
scas
sbb
dec
xchg
scas
fdivs
sub
pop
xlat
xchg
ss
jae
mov
rcll
pop
push
bound
adc
mov
pop
movsb
push
fstps
lods
xchg
jmp
add
mov
fnstsw
dec
sbb
or
adc
leave
mov
mull
clc
lret
out
fisubl
gs
mov
ficoms
inc
push
inc
orl
xor
adc
mov
das
repnz
cmp
xlat
jb
xlat
cs
jmp
mov
mov
popa
pop
push
cmp
in
jbe
repz
or
and
mov
xchg
xchg
mov
pop
xor
nop
leave
cwtl
sbb
pavgb
pop
mov
xor
rcll
push
cmp
fimuls
cltd
iret
pushf
pushf
cli
sarb
push
jecxz
dec
inc
repz
fucom
pop
jbe
out
popa
sub
cld
ret
sub
xchg
inc
cltd
insb
arpl
mov
inc
lea
sbb
jge
inc
sbb
push
inc
dec
dec
dec
add
sbb
push
es
mov
fcmovnb
jnp
lds
iret
insb
xchg
and
call
mov
call
loope
xchg
sub
cmc
push
popa
jl
loop
dec
push
loopne
xor
push
dec
lahf
lret
and
push
xlat
push
lock
stc
fstps
pop
loope
xor
roll
mov
into
gs
dec
iret
orb
mov
pop
cmp
loopne
sub
jo
ret
mov
popa
hlt
jle
lods
jbe
mov
mov
out
jmp
pop
sbb
or
dec
test
xchg
and
mov
jle
cs
aas
inc
flds
or
inc
lods
push
iret
rcll
jmp
jns
ss
movl
pop
shlb
shlb
jbe
mov
cs
sbb
add
mov
js
or
lock
mov
stc
dec
scas
cs
add
xor
pop
lret
out
push
out
aad
cmp
bound
ljmp
idiv
rorl
repz
jecxz
aas
lds
xchg
jle
adc
pop
lahf
int
fisttpl
andl
outsl
bound
mov
or
jbe
stc
mov
mov
js
inc
mov
fucomip
adc
ret
enter
daa
imul
mov
jno
aas
xor
adc
sub
xor
imulb
push
cmp
fiaddl
mov
outsb
jle
push
repz
ja
ja
sbb
stc
dec
in
sub
mov
out
inc
insl
movsl
push
push
mov
pop
fdivs
int
push
mov
cmp
dec
dec
lret
dec
int3
repz
lcall
lods
jle
adc
push
test
mov
enter
cld
cmp
sbb
xchg
fs
ljmp
push
mov
push
rep
mov
aas
xchg
jecxz
sbb
sub
push
subl
int3
push
dec
mov
scas
adc
mov
or
mov
lcall
push
mov
call
sbb
scas
jo
adc
xorb
push
and
push
pop
les
out
mov
mov
ret
jge
lock
es
dec
aas
mov
stos
add
sub
cmpsb
xor
xor
adc
mov
bound
in
push
iret
adc
notl
xchg
divl
xchg
or
inc
dec
xchg
cli
push
fnstsw
mov
aas
or
fcompl
mov
ja
cmc
test
sub
cmpsl
push
popf
mov
mov
xor
add
cwtl
mov
add
mov
ret
sub
popf
mov
push
mov
jb
fdivl
sti
push
add
push
leave
mov
addl
jle
xor
sub
xchg
mov
inc
sti
mov
insb
fs
mulb
mov
or
adc
lods
xorl
push
sub
mov
stc
add
sbb
cli
adc
adc
mov
mov
xor
enter
mov
pusha
dec
stc
push
stos
ret
adc
mov
test
jmp
inc
sub
in
sti
loop
xchg
pop
arpl
aas
dec
fcmovnb
fcomps
mov
stos
or
pop
test
sub
sbb
subb
nop
and
mov
rcrb
repz
sahf
xor
movsb
je
insb
insb
mov
sub
pop
jmp
mov
push
xchg
inc
fsubs
or
mov
xor
ss
and
lcall
mov
loopne
xchg
or
lcall
jle
mov
test
cmpsl
dec
dec
fiaddl
mov
pop
and
sbb
and
in
jb
sub
js
xchg
loope
test
cmp
test
mov
fiaddl
push
subb
pop
jae
add
repnz
out
movq
jae
jnp
ljmp
pop
jns
bound
out
sbb
imul
push
lea
xchg
cli
pop
jne
les
sbb
mov
mov
fs
fldz
pusha
jge
addr16
lcall
or
pop
push
xor
repnz
jle
nop
es
add
insb
popf
jb
dec
jnp
movsb
add
lret
push
test
pop
inc
mov
push
icebp
push
repnz
mov
out
fmull
daa
nop
shrl
std
leave
cmc
xlat
shlb
inc
push
lcall
dec
ds
rcr
jg
push
inc
push
mov
fistps
dec
inc
mov
push
sti
jno
sub
mov
dec
cs
mov
pop
mov
cmp
movsl
push
pop
outsl
bound
outsb
xor
sbb
and
fnsave
jnp
xor
out
iret
bound
test
cmc
int3
or
push
int3
cwtl
imulb
fisttpll
push
push
pop
test
cltd
push
cmp
push
push
outsl
testl
lahf
pop
insl
mov
mov
jmp
cmp
cmpsl
pusha
push
adc
mov
or
add
cwtl
nop
popa
sarb
pop
sub
or
test
sbb
mov
xor
mov
ds
adc
out
js
leave
fucomp
test
roll
shl
cltd
inc
push
sub
mov
jmp
dec
cmp
inc
orl
cltd
leave
xlat
icebp
lods
insb
mov
int
int3
ret
cmp
pop
push
in
xor
loope
xor
inc
dec
fstpt
scas
xor
insb
repnz
mov
fst
and
xor
dec
repz
sub
dec
push
mov
adcb
and
mov
mov
or
outsl
mov
ficompl
push
adc
lods
pop
sbb
out
ss
hlt
mov
pushf
jns
scas
cmpsl
adcb
lock
mov
stos
into
outsb
push
push
adc
cltd
mov
inc
cmpb
mov
cmc
icebp
out
xor
jnp
jge
pop
sahf
cmp
les
in
inc
outsl
xchg
int
fwait
pop
aaa
movsl
and
jecxz
lea
jbe
push
inc
aas
insl
rolb
loop
adc
test
idivl
sub
or
xor
cwtl
ss
pop
aam
popa
mov
xchg
aad
in
int
rcrl
fbld
cmpsb
pop
stos
ss
pop
mov
cmp
test
push
lcall
jp
dec
bound
rorb
cli
mov
push
scas
or
cmpb
sub
loopne
arpl
outsl
iret
inc
ret
inc
mov
ficomps
mov
xchg
in
push
test
pop
inc
push
mov
push
mov
inc
mov
and
and
mov
insl
nop
xchg
lcall
inc
mov
int3
add
loopne
loope
jae
mov
push
pop
aaa
add
add
and
pushf
dec
es
push
out
xchg
cmpsb
xchg
cs
pop
clc
sub
lods
insl
dec
and
fs
mov
stos
mov
dec
popf
lea
das
xor
push
lret
jecxz
sbb
xchg
jns
outsl
outsl
std
dec
sarb
cmp
insb
lock
cmc
mov
dec
pop
mov
xchg
test
cmp
cmc
stos
adc
aad
mov
mov
in
mov
andl
vcvtsi2ss
add
jae
in
negb
inc
fcomp
cli
dec
lcall
sub
push
insl
mov
dec
scas
sbb
mov
push
das
imull
mov
loopne
xchg
ss
aas
rcrl
bound
loopne
icebp
lods
mov
inc
xchg
mov
xchg
adc
cld
data16
dec
mov
lret
mov
ss
icebp
mov
js
andb
ljmp
push
imul
adc
cmpsl
loopne
pop
sbb
fisubs
std
pusha
cwtl
addr16
or
je
pop
loope
jns
mov
lcall
xlat
and
and
cmp
dec
popl
sbb
pcmpgtd
pop
idivb
and
and
mov
adc
lds
repz
movsl
push
testb
inc
add
in
xor
add
ret
std
ja
or
les
into
sbb
pop
sbbl
test
dec
les
mov
pop
and
lahf
aad
lcall
insl
xlat
ja
mov
jo
mov
sub
ljmp
rorl
sub
int
test
out
inc
out
mov
adc
inc
sub
out
mov
negl
int3
pusha
cmp
add
mov
cs
push
sahf
cmp
xchg
dec
fcoml
inc
stos
sub
fidivrs
pop
lds
xchg
jo
pop
hlt
inc
sbb
mov
iret
aad
rep
rol
xchg
test
fisubl
ret
inc
mov
sbb
jae
push
push
lock
push
je
aaa
jmp
pop
fucomp
ss
mov
pop
pushf
out
mov
mov
mov
stos
mov
add
push
dec
pop
xchg
imul
xchg
in
mov
jmp
adc
pop
cmp
and
loope
push
dec
mov
add
call
in
jp
loop
adc
outsl
icebp
sbb
test
cmpsl
adc
popa
or
pusha
mov
enter
cmp
mov
js
je
div
mov
dec
mov
hlt
rep
jae
sti
sub
enter
cmp
pop
stos
adc
dec
and
sarb
sub
cmp
xor
sbb
mov
pop
xor
pop
addl
and
dec
jo
test
lret
or
sub
and
pop
lret
lret
inc
fwait
repnz
dec
mov
mov
fistps
jl
fidivl
enter
xor
insl
lods
mov
fldcw
or
mov
popf
jmp
enter
sub
out
push
adc
cwtl
push
add
xchg
aad
cmp
mov
aad
fstpl
push
adc
adc
dec
xchg
sub
xor
iret
lret
shl
xor
or
lds
movsl
stos
jns
into
rorb
sbb
imulb
nop
orb
stos
test
xor
pusha
ja
sahf
push
and
mov
popf
dec
cltd
add
push
push
inc
mov
dec
lcall
xor
sbb
popf
inc
inc
jge
lahf
cmp
xchg
sbb
aam
add
push
dec
xchg
shlb
popa
call
test
test
scas
in
mov
cmp
jecxz
dec
jnp
popa
jnp
xor
inc
xor
sbb
jp
push
pop
pop
pop
and
loope
inc
test
movsb
mov
inc
clc
mov
fwait
sbb
mov
push
or
cmp
adc
shrl
stos
rorb
vmovddup
aad
cmp
mov
roll
jg
frstor
jmp
cwtl
jne
mov
scas
insb
mov
xor
je
fldenv
sarb
sub
lock
rolb
cmp
mov
scas
xchg
fdivl
ficoml
fsts
test
mov
push
pop
ret
xor
sbbl
mov
fcomps
adc
rorb
jne
mov
fwait
push
cli
xlat
arpl
aas
sbb
jecxz
dec
inc
adc
imul
sti
xor
pop
mov
cmpsl
outsb
movsb
movsl
jns
sti
mull
fistl
clc
add
mov
and
sub
add
fs
test
mov
mov
movsl
cld
xchg
sbb
inc
adc
aaa
inc
stos
sbb
sub
cs
mov
jno
insl
cmp
ror
xchg
imul
jb
or
jnp
cmp
add
das
jne
insb
fwait
mov
adc
dec
aad
pop
outsb
roll
es
mov
push
push
mov
int3
lods
aas
mov
aam
call
xchg
cmp
pop
popf
cmpsb
std
dec
pop
xlat
in
mulb
addr16
pop
inc
pop
lods
fisubrl
mov
sbb
out
adc
xor
out
jl
jnp
movsl
pushf
sub
pop
popa
popf
cmp
mov
inc
cmpsb
and
gs
dec
pop
jmp
les
dec
stos
dec
xchg
mov
dec
add
out
mov
cwtl
rorl
call
dec
rcrb
pop
cwtl
int3
pop
cmc
pop
jl
mov
cs
ss
push
pop
push
mov
xchg
fstpt
xchg
test
outsb
pop
subb
mov
inc
pop
test
out
in
sbb
mov
insb
dec
pop
inc
inc
das
fstps
jns
push
movsl
test
testl
in
cmp
adc
xlat
sbb
cmpsb
inc
sarb
inc
and
sub
pop
cltd
mov
lods
fisttps
inc
addr16
aad
jp
or
xchg
dec
jnp
shlb
push
sbb
scas
nop
mov
push
adc
mov
xchg
clc
xor
cs
pop
int3
dec
hlt
ss
mov
inc
jle
ret
mov
push
cs
shll
lahf
rcr
call
dec
stos
int
jl
jae
rcr
mov
sub
ror
pop
sub
iret
jns
xor
bound
shl
outsl
pop
push
repz
in
out
out
dec
sub
inc
bound
sbb
push
mov
add
in
js
jl
insl
insb
and
adc
mov
cld
xchg
fcom
inc
fwait
clc
sub
addr16
mov
sbb
pop
and
fadds
cmp
and
es
fwait
jno
fwait
xchg
hlt
mov
lock
xchg
pop
dec
push
inc
jbe
push
lods
pop
pop
adc
dec
shlb
sbb
orl
pop
jns
mov
or
push
movaps
ds
sub
adc
cwtl
ja
test
ds
push
mov
and
mov
mov
cmp
mov
fwait
nop
lea
cmp
adc
int
cltd
ds
insl
xlat
dec
ss
xchg
movsl
adc
out
out
mov
xchg
mov
fs
mov
arpl
mov
push
fyl2x
gs
in
jp
pop
jp
lods
popf
mul
or
xchg
jno
loop
adc
imul
inc
addr16
iret
or
hlt
decl
dec
mov
aas
mov
loope
push
call
cmpsb
in
in
pop
cmp
in
inc
push
hlt
loopne,pn
xlat
or
lods
mov
mov
mov
outsb
aaa
lods
xchg
jnp
pop
dec
push
notl
dec
adc
out
mul
loop
dec
push
pop
xor
push
push
icebp
xchg
rcrb
sub
push
adc
dec
jp
dec
jl
adc
mov
pusha
mov
ficoml
out
mov
pop
mov
ret
sub
out
mov
popa
xchg
or
jno
mov
ja
push
adc
cld
sbb
or
adc
lahf
dec
negb
test
lea
mov
js
xor
and
stos
into
mov
xlat
inc
mov
out
inc
sbb
jmp
add
mov
mov
xchg
xlat
mov
xorl
fneni(8087
sar
daa
hlt
jle
mov
push
bound
sub
or
xchg
sar
cmp
pop
pushf
bound
dec
add
cli
fwait
sbb
mov
sbb
push
inc
movsl
push
scas
insl
mov
add
out
jo
sbb
loopne
adc
stc
and
cltd
mov
jle
xor
flds
sub
lods
push
pop
mov
sub
mov
cmc
mov
outsb
jp
lret
punpckhbw
mov
int
dec
pop
stc
leave
pusha
cwtl
add
hlt
push
jmp
mov
jne
popf
int
rcll
sub
inc
das
cmp
and
rcrb
add
push
mov
jle
aad
push
mov
cmc
fbld
iret
jmp
add
sbb
mov
jge
push
divb
xchg
mov
insl
inc
mov
cmp
lods
pop
or
push
cli
hlt
add
mov
sahf
imul
add
aaa
ret
outsl
frstor
pop
mov
or
inc
push
mov
xor
das
mov
jmp
popa
mov
dec
cmpsl
add
pop
inc
sti
lcall
jle
insl
jbe
or
dec
daa
cltd
xchg
hlt
inc
sbb
mov
ss
sahf
jge
add
add
test
dec
pushf
push
push
mov
adc
jmp
push
inc
xor
or
xor
and
and
mov
sbb
jmp
xchg
inc
xor
rorl
js
add
pop
faddl
pop
jno
icebp
xchg
mov
mov
fcoms
add
loope
rcr
daa
pop
lcall
data16
mulb
jle
or
sbbb
fucomip
push
cwtl
in
loop
mov
in
daa
cmp
in
dec
ret
lahf
inc
jb
imul
aas
or
arpl
scas
mov
insl
add
lret
es
je
loope
xchg
push
jae
dec
sub
les
mov
xor
lret
sub
mov
arpl
outsl
and
inc
iret
and
subb
adc
jbe
idivb
aas
fwait
ljmp
ret
es
out
add
cld
call
cltd
xchg
popf
jecxz
test
fcomps
les
sub
stos
fisubs
xchg
hlt
cmpsl
adcl
push
jae
mov
sub
xchg
mov
cmp
xor
xor
cmc
test
inc
rcrb
std
lea
push
data16
jmp
xchg
stos
loopne
sbbb
mov
xorb
dec
insb
sahf
xchg
xchg
mov
cmp
cwtl
call
shrl
mov
pop
xor
push
das
icebp
sbb
sbb
lods
push
jbe
shl
cmc
jns
jne
mov
push
sub
repnz
cmp
cmp
mov
pop
sbb
jb
mov
gs
cwtl
pusha
push
mov
test
or
sub
test
sbb
enter
les
xor
adc
and
lods
cmp
push
or
inc
inc
cmp
in
adc
inc
lock
cmpsl
pop
loop
pop
fsubp
stc
sub
cmp
push
jl
dec
fidivrl
push
mov
xor
sub
std
push
faddl
or
xchg
aam
popf
cld
daa
mov
cmp
mov
cld
adcl
outsb
mov
pop
jb
xor
jecxz
push
push
mov
push
mov
jle
xchg
xchg
sub
imul
sbb
xor
push
dec
pop
cmpsl
std
scas
mov
lret
cld
fistpl
adc
sub
in
sub
roll
push
std
push
dec
inc
stos
pop
pop
lret
dec
fisubl
and
pushf
mov
pushf
cmpsl
data16
mov
dec
inc
cmpsl
or
jo
rcr
sahf
addr16
xchg
xchg
cmp
insl
dec
adc
sbb
dec
fidivs
xlat
pop
mov
mov
out
fistpll
test
push
mov
out
or
inc
loopne
dec
sbb
out
mov
push
iret
adc
ror
cmpsb
loop
mov
dec
adc
mov
ret
adc
mov
and
jle
sbb
iret
dec
add
out
jmp
out
iret
orl
xchg
jle
loope
lea
pop
ret
pop
repnz
and
mov
pop
fmul
clts
dec
sbb
sub
andb
lret
xchg
mov
jle
inc
out
mov
outsl
rcr
repnz
mov
test
sbb
sub
xchg
daa
out
pop
or
inc
and
enter
cmp
decl
cmpb
ss
pusha
daa
outsb
xor
adcl
or
lods
aad
xor
xchg
hlt
int
mov
lods
cmp
push
jl
push
push
dec
mov
outsb
leave
cmp
lahf
add
pop
cltd
xor
mov
mov
imul
jae
lock
addl
jge
int3
push
pop
pop
out
test
sbb
shl
aam
push
xchg
inc
sub
pop
mov
iret
jo
push
notb
and
add
aad
outsl
int
enter
std
mov
movsb
out
sarl
hlt
sub
ljmp
sub
aas
mov
adc
aaa
sbb
pop
xor
jl
iret
orb
jns
cwtl
mov
cmp
jns
xlat
ds
cmp
sbb
fidivrl
pop
data16
push
push
jmp
add
loope
push
sub
and
shll
mov
ret
nop
fs
aam
push
push
scas
mov
aad
dec
push
pushf
mov
in
add
insb
adc
les
sbb
jne
mov
pusha
dec
rclb
mov
push
mov
lock
push
push
leave
and
and
mov
lret
cmp
cmc
push
imul
inc
clc
cmpsl
cmp
ret
icebp
or
mov
and
jmp
jo,pn
call
lret
cmc
clc
je
jae
lret
jns
inc
or
mov
fisttps
lods
fisttpll
mov
jecxz
push
outsb
ds
lret
mov
outsl
push
mov
xchg
sbb
jne
dec
mov
les
into
icebp
dec
add
lret
mov
xchg
pop
sbb
dec
pop
faddl
ret
inc
insb
jmp
in
das
add
xlat
shr
pop
rclb
mov
popf
in
arpl
loope
dec
mov
mov
arpl
in
inc
xor
mov
int
jae
jge
jecxz
jae
cwtl
insb
insb
inc
cmp
gs
int
mov
movsl
bound
push
xchg
movsl
inc
xchg
mov
lcall
stos
movsl
arpl
test
mov
es
into
lret
inc
jl
xchg
push
sub
add
addr16
ds
std
inc
adc
mov
orb
daa
jp
imull
sbb
cmp
fs
xor
mov
xorb
stos
loope
int3
inc
dec
jns
push
shlb
push
sub
push
dec
xlat
sbb
mov
insl
xchg
dec
loopne
adc
cmpsl
lods
xchg
push
mov
in
inc
loopne
insl
fdivrl
hlt
addr16
push
xchg
cld
dec
add
ret
insl
inc
fsubrs
call
test
sbb
insb
xchg
and
cmp
insb
ficompl
sub
xchg
push
dec
js
inc
mov
xchg
push
jno
loopne
jl
adc
test
scas
outsb
fnsave
stc
adc
and
lret
pushf
jne
adc
rcll
sbb
inc
jnp
popl
es
mov
mov
cmp
sub
out
mov
sub
aam
and
or
pop
jns
inc
cmp
rorb
ja
jg
or
dec
scas
ljmp
xchg
mov
scas
push
cs
inc
sub
and
and
jecxz
decb
addr16
mov
mov
mov
mov
cmp
pop
mov
xchg
xchg
lods
pop
xor
cwtl
fs
or
sbb
mov
gs
iret
sti
xchg
dec
arpl
scas
ret
dec
lcall
sub
cs
push
je
mov
fisttpl
ret
adc
lds
sub
btr
mov
sub
sti
and
movsl
dec
push
xchg
xor
mov
push
push
cmp
les
jmp
mov
sub
xchg
repnz
inc
xchg
aam
dec
repz
insl
push
push
clc
pop
jmp
repz
lds
push
out
cmp
cmp
jle
mov
push
aaa
sub
pop
cmp
icebp
fsubrs
insl
test
shr
sbb
es
pop
jae,pt
pop
mov
jg
addr16
cmpsl
inc
pop
mov
sbb
jne
sbb
and
dec
cmpsb
loop
sbb
jb
mov
outsb
sbbl
insl
int
add
xlat
test
sub
pop
repnz
cwtl
jbe
pop
mov
and
lret
pop
xchg
stc
dec
test
test
adc
loope
clc
sub
sub
aam
cmp
xchg
mov
addl
test
outsb
sub
xchg
mov
in
movsl
imul
xchg
je
adc
cmp
in
popf
f2xm1
scas
insl
das
fcomps
es
in
inc
mov
xor
out
je
or
in
inc
pop
mov
inc
and
inc
repnz
jb
pop
das
dec
add
push
cmp
jp
insl
test
fists
insl
inc
lahf
xchg
mov
xchg
sbb
pop
cmp
mov
xor
lods
es
dec
lcall
rolb
shll
cltd
and
dec
fsub
push
dec
add
ja
mov
pop
push
fistpll
cmp
cmp
and
jo
xchg
push
fadds
js
lea
pop
or
push
stc
dec
xor
or
push
push
leave
cmp
lret
mov
cmp
movsl
jne
push
ds
loope
mov
into
mov
cmpsb
xor
and
add
rcrb
cmp
and
movsb
negl
sub
cld
jp
jg
sbb
sbb
mov
sub
adc
mov
lods
stos
mov
pop
cmp
lret
mov
imul
in
xor
jns
add
xchg
xor
ret
arpl
cmp
pop
xchg
add
push
push
cmpb
lods
or
movsl
ljmp
mov
sub
std
mov
ret
push
loope
push
sbb
adc
sbb
in
cwtl
sarb
sarb
stc
and
or
mov
mov
cld
pop
xor
lret
pop
add
and
into
sub
jl
int3
in
pop
ljmp
mov
bound
push
out
add
sub
push
push
outsb
sub
dec
xchg
scas
xor
or
leave
je
pop
jmp
sti
lcall
rcrl
pop
sbb
mov
cli
or
testb
xor
aas
insl
out
clc
outsl
gs
mov
mov
enter
xor
orl
test
push
add
jl
outsb
ljmp
add
inc
loop
movsb
stc
or
scas
mov
sbb
sar
sbb
pop
sahf
out
dec
adc
push
xor
addb
ret
dec
mov
cs
mov
sub
mov
and
lret
out
cld
pop
add
int3
or
mov
jge
fwait
mov
pop
popa
test
push
int
xor
int3
add
pushf
outsb
cmp
add
pop
sti
fwait
adc
mov
and
mov
sbb
test
and
mov
dec
jle
movsb
daa
call
idivl
mov
leave
test
test
fcoml
dec
pushf
mov
adc
out
push
pop
xor
mov
cmp
xchg
loope
xchg
push
aas
add
cli
icebp
and
xchg
xchg
repnz
cmc
jg
test
gs
or
or
add
sbb
xor
xchg
inc
xchg
or
repz
add
xlat
lods
sub
imulb
pop
aaa
cld
pop
mov
mov
std
rcrl
out
push
in
loope
ds
repz
scas
inc
bound
lds
xchg
popl
movsb
pop
ds
add
gs
notl
cmp
cmp
loop
xor
ja
cmpsl
aad
in
and
mov
shl
push
or
gs
scas
cwtl
sub
sarb
stos
clc
jp
add
js
mov
cltd
sbb
adc
push
shlb
xchg
ss
into
lods
mov
hlt
xchg
add
sbb
data16
into
adc
adc
loopne
cmp
or
leave
adc
push
sub
mov
imul
mov
fsubrs
xor
lods
mov
mov
push
and
jb
xchg
push
pop
jne
mov
xlat
sbb
xchg
or
xchg
adc
jecxz
nop
inc
dec
les
nop
sub
int3
cli
outsl
mov
inc
fs
das
xchg
push
loopne
cmpsl
sbb
mov
push
fs
aaa
ja
xchg
popf
pop
or
fwait
pop
notl
pushf
pusha
inc
dec
arpl
sub
push
sarb
call
out
cmp
pop
add
sub
mov
xor
add
push
negb
aas
movsl
in
aad
ljmp
jbe
adc
imul
sub
inc
adc
xor
cli
inc
xchg
dec
jae
aad
mov
fisubrs
inc
inc
cmp
jle
push
dec
or
mov
cmp
cmp
xchg
iret
fsts
and
fidivrl
shl
outsb
cmp
mov
push
int3
sbb
xor
mov
incl
sbb
xchg
subb
adc
cmp
jmp
cmp
xor
push
push
aaa
ficomps
push
jnp
lock
into
loop
jmp
lahf
push
jno
sbb
out
pop
lock
int
cmp
icebp
cmpsl
or
inc
mov
mov
adc
dec
dec
or
sbb
sbb
inc
or
mov
mov
pop
pop
push
jg
sub
xchg
mov
subl
mov
inc
lods
adc
sbb
imul
and
inc
push
popa
add
lods
jecxz
rorl
stos
gs
pop
mov
mov
adc
jbe
and
sub
cmp
dec
stos
imul
push
popa
or
shl
aad
adc
scas
cmp
into
jle
inc
mov
divb
pop
jmp
rcrb
or
inc
sbbl
lcall
in
or
jp
rcll
pop
mov
jmp
sahf
movsb
jb
mov
pop
jo
mov
push
mov
jl
adcb
and
call
push
inc
or
jno
dec
sub
push
int
jae
push
sbb
cmpsl
cmp
sbb
jg
pop
mov
xor
sub
lods
mov
dec
or
and
dec
push
push
lds
sub
enter
cmpb
filds
sub
jl
sbb
xlat
jno
loopne
mov
jno
cmc
mov
adc
inc
das
mov
testb
or
push
jb
mov
mov
inc
dec
js
fcom
xchg
testb
mov
fdivr
push
nop
jbe
in
push
cmpsl
or
leave
push
mov
insb
cmp
and
and
mov
cmp
and
add
test
inc
clc
sbb
or
ds
fnstcw
cmc
in
pop
je
cmpl
es
and
jl
je
xor
insb
mov
gs
or
mov
adc
sub
outsl
cmp
shlb
mov
push
cmpsb
xchg
sbb
push
dec
int
ljmp
pop
arpl
je
pop
repnz
mov
sbb
lret
lahf
dec
call
int
fcoml
paddq
push
out
es
pop
xor
int3
fsub
shl
ss
mull
mov
test
shll
mov
pop
xchg
lahf
repnz
shrl
push
test
mov
pop
and
xor
jb
gs
mov
pop
cwtl
push
daa
movsl
or
adc
leave
test
lcall
enter
add
loopne
out
int3
sub
into
push
sbb
mov
pop
and
data16
pop
mov
sub
iret
pop
into
mov
ljmp
push
inc
xor
incb
or
mov
cmpsl
fnstenv
push
roll
movsb
cmpb
mov
xor
sbb
push
dec
loopne
add
in
lods
fbstp
popa
sahf
jbe
daa
pusha
cmpb
push
in
xchg
out
loope
fs
fldl2e
aad
push
add
jnp
in
arpl
in
js
shrl
or
addl
aaa
add
mov
mov
adc
insl
or
push
ficoms
add
jg
js
mov
loop
or
sbb
push
int3
icebp
xchg
scas
dec
mov
jns
aaa
xchg
pop
inc
pushf
out
sbb
insl
fbstp
lret
cmp
arpl
push
int
or
dec
shll
push
call
in
fsubs
pop
lcall
inc
cmp
rcr
mov
icebp
inc
test
arpl
int3
xor
bound
sub
xor
fmul
cmp
sbb
jge
shlb
sbb
jmp
cmpsb
sbb
sbb
sbb
and
push
jne
add
bound
stc
call
ficompl
xchg
inc
int3
sahf
mov
js
mov
push
out
fsubrs
arpl
shl
ds
fimuls
push
inc
and
add
mov
repnz
iret
pop
movsb
pop
jae
shl
add
fcompl
ja
sbb
in
stos
cmp
mov
xchg
mov
in
or
int
les
inc
or
es
and
popl
push
mov
mov
or
jae
scas
or
xor
aas
mov
cmpsl
in
inc
cmpsl
loop
mov
imul
and
clc
and
jo
mov
jns
shrl
pop
inc
xchg
or
sbb
mov
jmp
cs
das
in
dec
dec
test
and
fcos
dec
or
ror
lock
cwtl
lret
add
xchg
jl
movsl
std
loopne
int
xchg
or
lea
jl
cld
gs
std
sub
cwtl
dec
leave
cmp
dec
sti
loope
sbb
push
inc
pop
test
jno
inc
sbb
sub
enter
push
push
cmp
or
dec
xor
lret
adc
test
mov
sarb
xor
push
mov
mov
je
je
mov
fmull
subb
test
int
cmp
mov
push
or
adc
adcb
xchg
and
clc
out
clc
adc
sbb
inc
mov
pop
and
cltd
js
mov
enter
mov
inc
scas
ss
mov
adc
jno
shlb
inc
call
mov
push
xchg
movl
xchg
inc
and
cwtl
imul
mov
daa
and
aaa
repz
test
mov
icebp
repz
aas
cmp
dec
inc
mov
cltd
dec
and
sub
cmp
xchg
sti
adc
xchg
enter
push
cltd
loopne
scas
push
stc
outsl
addr16
push
add
lods
mov
addl
jns
or
xlat
push
test
xor
scas
adc
lcall
test
push
pop
jl
xor
stos
popl
and
icebp
dec
sub
loope
inc
sbb
or
add
xchg
sbb
mov
pop
in
mov
jmp
imul
fwait
mov
dec
nop
test
jne
fld1
xchg
xor
stos
test
sbb
xchg
mov
enter
fiaddl
mov
mov
push
sbb
add
outsl
cltd
out
pushf
jno
psubb
jae
and
cli
shll
adc
pop
pop
mov
lea
test
push
repnz
mov
mov
cmp
repz
in
inc
push
shl
mov
imul
push
ja
or
lret
iret
jno
and
jl
or
out
pop
mov
and
cmp
cmc
rcrl
jno
bnd
push
inc
fcomps
sbbb
adc
in
cld
jns
mov
xchg
mov
sbb
jle
add
lcall
sub
subl
adc
mov
xor
mov
lock
mov
push
xchg
lock
push
aaa
rcll
fcmovb
adc
mov
mov
out
in
jne
pop
pop
mov
mov
in
insb
mov
and
cwtl
jae
js
mov
enter
fldcw
pop
cmp
insb
sub
xorl
dec
test
ja
mov
cld
lods
mov
jne
arpl
sub
adc
xor
jae
jecxz
aas
mov
sbb
lret
mov
mov
and
mov
cmp
jmp
ret
ss
ja
inc
push
lods
mov
mov
cld
push
sub
jns
insb
mov
stc
jmp
mov
sub
ret
cmpsb
int
stos
mov
pop
int
jb
fwait
xlat
loop
jnp
fwait
add
inc
jg
pop
adc
cltd
adc
stc
jo
sbb
xor
in
push
xor
pop
inc
loop
adc
movsb
mov
dec
adc
cmpsb
iret
stos
and
data16
cmp
je
call
dec
es
pop
push
fsubrs
dec
inc
xor
and
lcall
mov
xor
rcr
mov
sub
mov
sub
cmp
mov
and
lahf
mov
adc
in
mov
test
push
jle
daa
cs
insl
loop
aad
pop
sub
dec
cmpsb
insb
ja
pop
aad
in
jp
xchg
jnp
les
int
pop
adc
mov
leave
sub
enter
leave
jns
mov
and
movsl
dec
xchg
push
ds
mov
add
fcmovnu
test
sti
test
dec
jmp
mov
subl
pop
std
push
jne
or
fs
in
xchg
icebp
jge
sub
loope
mov
add
stos
mov
jb
loop
ret
jno
adc
fisubrl
mov
and
sahf
xor
mov
mov
add
add
sbb
jae
mov
shlb
fstp
pop
in
pop
loope
or
cmp
and
mov
lds
lods
mov
or
ret
mov
jle
int3
dec
pop
in
movl
jge
mov
jbe
xorl
sbb
mov
int
out
fsubrs
xchg
testb
cmp
cmp
stos
ret
mov
loopne
call
push
inc
call
mov
aaa
lods
sub
lods
add
les
mov
cmp
dec
leave
sbb
sub
and
sub
and
xchg
lds
pusha
inc
xor
clc
or
ror
loopne
cmc
scas
in
rcrl
ret
dec
jg
mov
lods
dec
pop
cmp
mulb
pop
adc
lahf
jmp
popa
xchg
jl
sbb
inc
sub
fwait
cmp
loop
rcrb
out
jno
pushl
cmc
int
nop
jecxz
stos
sub
out
lcall
jns
call
lods
js
outsb
popa
add
sbb
pop
pop
xchg
aaa
adc
dec
push
push
xchg
inc
sbb
mov
jmp
es
mov
mov
fistpl
popf
mov
dec
jbe
jnp
cwtl
outsl
xchg
cwtl
mov
xor
push
jbe
lods
xchg
add
test
mov
xchg
dec
ret
mov
fbld
jg
adc
cmp
iret
ljmp
sub
jns
lret
loope
push
or
cmp
inc
bswap
ret
xchg
roll
outsl
popa
jecxz
add
jae
stc
es
adc
dec
gs
jb
rorb
out
sub
push
rcrl
mov
aaa
and
repnz
popf
mov
cmp
xor
addl
call
and
shl
cmpsl
nop
cmpsl
jg
iret
adcl
jae
in
popl
int
fbstp
or
cmp
mov
addb
push
arpl
test
test
lods
fld
scas
and
and
and
es
insb
push
daa
js
xor
sub
cwtl
cmp
aam
dec
lcall
mov
leave
insb
sub
xor
jo
mov
fdivs
ljmp
movsb
mov
shlb
sbb
or
roll
sar
or
add
movsb
and
cmp
lcall
adc
or
lods
sub
mov
ja
cli
cvtps2pi
dec
rorl
ficomps
pop
test
stc
aad
into
pop
out
andb
add
js
cmp
lods
and
mov
fcomip
mov
mov
push
leave
jnp
mov
rcl
enter
xchg
in
dec
test
push
js
xor
sahf
orl
xor
lcall
adc
mov
sahf
dec
faddl
xchg
clc
push
rcr
scas
push
or
imul
fists
popa
xchg
inc
aam
push
mov
xor
pop
jbe
jns
lahf
jecxz
out
xchg
dec
sub
shrl
aam
cmp
mov
cmp
xchg
cli
adc
cmpsb
or
mov
mov
call
push
sbb
sbb
adc
sub
jns
xor
mov
add
mov
dec
shlb
icebp
std
mov
faddl
jmp
xchg
adc
gs
cli
xchg
push
in
shll
cmp
fbld
inc
shll
mov
xor
mov
mov
adc
in
pop
and
mov
xor
testl
ret
sbb
mov
xchg
insl
clc
pop
into
jmp
and
insl
das
inc
or
sahf
cmp
aaa
filds
imul
mov
pop
add
adc
sbb
jecxz
fidivrl
rcrl
cmp
stc
sbb
push
fidivl
jbe
push
mov
movsl
rclb
loop
jl
cmp
idiv
fldl
lcall
add
in
cwtl
push
std
pop
aaa
mov
dec
push
loop
mov
insb
imul
push
inc
mov
leave
mov
in
cli
xchg
sbb
push
fcoml
std
push
fbld
cwtl
fs
popf
pop
imul
popa
inc
in
pop
rcll
lds
add
idiv
movsl
fsubrl
pop
add
dec
or
jecxz
imul
push
push
xor
lock
cmp
jnp
in
fstps
test
add
mov
test
cltd
inc
and
xor
mov
xchg
das
jns
sbb
stos
mov
test
nop
inc
pop
push
sahf
out
aad
mov
dec
mov
mov
cmp
lea
fsubrs
pop
pushf
push
jbe
mov
lods
in
fcoml
adc
sub
into
lods
jmp
fs
dec
stos
pusha
addr16
push
fwait
test
jp
aam
int3
sub
jo
addr16
mov
inc
mov
inc
daa
pop
lahf
ret
mov
and
lea
cmc
loopne
adc
fcmovbe
mov
inc
pop
mov
popa
dec
mov
push
cmp
add
xlat
push
mov
in
lea
pop
lahf
push
mov
inc
jb
cmp
mov
dec
je
test
std
js
pop
xchg
jmp
aas
gs
xchg
test
rorl
popf
adc
mov
call
push
mov
out
or
ja
mov
lock
add
pop
add
shlb
js
loope
decl
rorb
mov
pop
adc
mov
mov
push
push
std
popf
mov
push
push
mov
das
test
rcr
repnz
movsl
cmp
daa
loopne
mov
cmp
ret
aam
cld
shll
pop
lock
es
rorl
xchg
cmp
out
hlt
mov
lods
xchg
shrl
mov
or
or
push
xorl
pop
cmpsb
add
xor
lret
fucomp
push
inc
popa
push
inc
add
jmp
jmp
mov
ret
fwait
mov
sub
or
ds
xor
shrb
sbb
jl
imulb
pop
mov
jle
out
insb
cltd
ret
cmc
xor
decl
xor
pop
popa
add
stos
inc
xlat
lods
mov
mov
mov
dec
loop
lods
add
shrb
xor
add
push
pushf
loope
xor
aas
mov
push
insb
inc
dec
mov
sarb
divl
ss
inc
lods
sub
jle
add
xchg
xor
movsb
testb
dec
scas
jg
mov
mov
insl
popa
cwtl
jp
xchg
xchg
pop
jbe
mov
mov
add
mov
je
xor
mov
faddl
shll
popa
cmp
enter
dec
in
jle
and
fwait
push
xor
xor
add
xchg
adc
aas
gs
jle
popa
sub
out
scas
rcrb
fsubr
sahf
insb
add
lcall
ds
adc
add
cmpsl
inc
rcl
sub
repnz
xchg
pop
xchg
adc
mov
rcl
repz
fwait
push
ds
loope
pop
jno
dec
sahf
daa
out
cmpsl
or
xchg
xchg
js
faddl
scas
adc
out
pop
ja
mov
imul
lock
xor
jbe
daa
das
or
or
dec
cmp
test
mov
in
jmp
addr16
push
nop
and
xor
movsb
xor
and
sbb
repz
out
sbb
sbb
out
mov
movsb
fdivs
les
sub
and
pop
jbe
movl
shll
fsubr
cltd
cmc
fisubrl
jbe
mov
mov
ja
fbstp
sahf
imul
lea
inc
xor
xor
jle
add
dec
mov
pop
xor
xchg
lcall
insl
sub
or
ja
pop
in
cwtl
stos
das
rcrb
dec
dec
icebp
jnp
cmp
flds
add
cmp
dec
pop
popa
adc
rorb
rcrb
rclb
pushf
mov
xchg
dec
dec
push
xchg
mov
cltd
mov
in
pop
mov
and
sub
sbb
lahf
in
add
fcmovb
pop
aaa
cmp
jl
xor
push
inc
lods
dec
pop
call
mov
test
adc
in
lock
fmull
xor
and
jmp
aam
lock
loop
sbb
or
fwait
fs
pop
lret
addr16
adc
or
inc
mov
or
jmp
mov
add
xchg
jns
sub
add
xor
push
xor
dec
mov
mov
add
push
mov
jo
push
imul
pusha
lods
pop
aam
mov
in
pusha
inc
fstpt
loop
out
jb
jno
sub
aas
jb
sti
or
push
or
iret
pop
pop
fs
fnsave
es
sbb
insb
pop
subb
out
popf
pop
xor
repnz
add
or
xchg
pop
and
leave
or
sub
mov
sub
push
movsb
adc
and
push
jl
repnz
xorl
into
adc
mov
xchg
mov
icebp
fadd
inc
sub
leave
sbb
popa
ficoms
add
imul
test
inc
fdivs
das
sahf
push
out
xchg
fisubrl
js
jp
shrb
sub
xchg
push
enter
mov
mov
repz
dec
and
jbe
stc
push
xor
subl
out
fidivrs
dec
test
stos
int
or
pop
push
ljmp
in
push
outsl
or
add
mov
addr16
das
mov
test
fisubl
cs
xchg
fsubs
push
dec
pop
push
xchg
sahf
xchg
stc
inc
push
jecxz
inc
xor
fsubrl
add
and
sbb
test
nop
popf
scas
dec
pushf
jo
sti
pop
cmc
sahf
out
mull
lret
mov
lods
mov
or
rol
fnsave
lahf
lahf
sub
ds
cmp
xor
add
fdivrl
daa
lret
mov
and
clc
xchg
loope
mov
mov
movsb
cmp
xor
imul
shll
and
fmull
stos
lods
dec
das
pop
imul
and
loope
add
mov
sub
jns
test
insb
mov
aaa
das
push
roll
mov
rorl
fdivrl
pushf
jb
pop
jno
scas
nop
sub
aas
sbb
mov
dec
andl
pop
mov
xlat
xor
jmp
ret
mov
into
cld
push
shrb
mov
imul
mov
or
decl
data16
sbb
lock
or
cmpsb
adc
xchg
jp
add
cld
jns
mov
xor
or
jae
dec
dec
add
outsb
leave
dec
inc
adc
lret
push
ljmp
mov
sbb
xchg
mov
xor
stos
fdivrl
insb
dec
xchg
cmp
clc
push
mov
pop
pop
lock
in
les
xchg
xchg
mov
dec
mov
rclb
dec
push
sub
cmpsb
push
push
int3
xor
xchg
popf
push
jge
cwtl
lahf
shll
xchg
gs
and
dec
add
nop
add
push
jecxz
xor
mov
mov
je
fistpl
mov
push
sub
sub
or
and
jnp
push
or
imul
cmc
scas
mov
inc
sbb
cmp
scas
jle
loop
and
pushf
cmc
or
mov
jecxz
hlt
jne
lret
mov
test
mov
ficompl
in
sub
or
daa
ret
pop
fisttps
adc
pop
mov
aaa
push
and
roll
imul
ds
and
mov
xchg
cld
xchg
mov
jo
adc
and
inc
push
bound
and
faddl
jne
xchg
and
xchg
mov
or
enter
hlt
scas
test
or
pusha
mov
in
out
repnz
or
movsl
shrb
push
pop
mov
daa
dec
loopne
and
sub
xor
pop
or
gs
loope
cmp
mov
mov
adc
ss
loope
jg
pushf
loope
movsl
popa
idivl
push
jbe
lds
mov
or
popa
and
loope
mov
pushw
jecxz
ret
add
xadd
mov
inc
aam
xchg
mov
mov
aas
lock
cmp
stos
add
cmp
test
jae
sbb
mov
cwtl
mov
cmp
push
sbbl
inc
push
inc
pop
jnp
cmp
push
push
cld
xor
jo
mov
cs
out
cli
cmp
pop
add
aam
dec
mov
and
xor
aad
dec
inc
subb
inc
ljmp
fisttps
dec
dec
push
xor
pushf
or
repz
loope
das
loopne
loopne
jb
popa
cmc
inc
or
into
dec
push
shl
sbb
fsubrs
jp
or
enter
adc
daa
push
repnz
cmpl
inc
ficoml
lods
out
mov
fwait
add
mov
inc
dec
shlb
and
popf
xchg
jp
je
cld
jno
imulb
dec
dec
icebp
fcompl
lds
xchg
add
cwtl
cmp
cmp
aad
into
jo
inc
mov
in
jno
insl
sti
dec
lds
jle
stos
push
imul
xchg
pop
popf
add
insl
test
or
cwtl
ret
sbb
test
inc
movsl
imul
jno
and
sub
xor
inc
fdivs
lock
pop
push
int
negl
inc
xchg
rcrl
pop
jl
mov
and
aaa
mov
pop
icebp
xchg
and
sub
mov
popa
mov
mov
xchg
cmpsl
inc
ror
or
int3
rcr
scas
mov
addr16
pop
mov
mov
sbb
xlat
sbb
ret
push
imull
std
lahf
push
repnz
dec
pop
mov
mov
sbb
inc
dec
ret
push
out
ss
mov
jb
loop
outsb
cli
cltd
xor
lret
pop
cld
gs
xorl
loop
jnp
add
push
xor
dec
sbb
adc
mov
mov
push
scas
cmpsl
xlat
sub
mov
daa
mov
add
ror
mov
cmp
lret
pop
sbb
or
xchg
fstpl
das
mov
dec
inc
sub
xlat
fwait
xor
xchg
mov
xor
xchg
shr
mov
insb
sti
mov
movsb
dec
fistl
ret
lret
xor
ljmp
div
xor
movsb
sarb
int3
daa
call
push
cmp
mov
xlat
fs
pop
mov
imul
int3
test
lds
call
xor
inc
jg
mov
mov
dec
cmp
movsb
or
inc
es
xchg
mov
out
shll
aam
cmpsb
push
in
mov
negl
ljmp
mov
push
in
or
test
cli
js
aaa
sub
test
jp
sahf
xchg
jle
sti
push
fsubs
push
mov
push
test
in
nop
adc
out
js
das
scas
and
cwtl
leave
leave
test
mov
mov
cmp
insb
movsb
pop
lock
or
inc
push
loop
lods
inc
shlb
rcl
imul
sub
daa
mov
loopne
mov
mov
cltd
es
in
fstl
fdivs
dec
test
int
and
jle
pusha
inc
in
cli
xor
sti
and
repz
test
add
call
pop
imul
xor
aad
inc
cmpsb
jle
pop
gs
adc
mov
js
in
movsb
pop
loope
iret
ds
cmp
and
pop
xor
popf
subb
jmp
cmp
xchg
and
arpl
push
movsl
dec
jecxz
outsb
sub
sub
inc
jle
mov
fs
add
outsb
push
cmc
insl
aam
fwait
jnp
and
out
sbb
outsb
cs
out
aam
mov
fwait
setae
adc
into
pushf
adc
dec
xor
les
stos
xchg
clc
ljmp
sub
jns
dec
sub
fiaddl
fwait
icebp
or
rcr
je
push
push
bound
aam
rolb
mov
dec
mov
cmpsb
decl
aad
jmp
mov
cmp
jo
add
xor
sbb
cmp
nop
lds
pop
mov
je
mov
xchg
adc
shl
lds
mov
popa
jnp
jp
fcomi
xchg
lds
inc
repnz
dec
decl
push
test
xlat
incl
popf
mov
mov
fwait
push
xor
push
mov
push
xchg
xchg
fsubrl
in
mov
in
push
mov
jbe
jne
popa
fwait
sub
loopne
out
inc
out
and
dec
dec
subl
test
shl
aaa
fwait
or
lds
mov
es
jg
sahf
xchg
in
ja
aad
gs
ds
pop
add
jmp
push
scas
imul
shll
fst
mov
mov
int
jo
mov
xchg
aam
cmp
int3
or
out
loope
mov
and
push
xor
inc
mov
pop
fisubrs
push
inc
pop
call
or
dec
mov
mov
jbe
push
mov
out
das
mov
sbb
mov
mov
or
mov
cltd
xor
fwait
loop
subl
dec
pop
aas
sar
xor
mov
lret
sub
mov
pop
mov
addb
jnp
adc
fsubrs
and
cmp
addr16
cmp
cltd
mov
jne
std
mov
sbb
repnz
jmp
pop
enter
sbb
clc
xchg
lds
pop
jmp
sbb
pop
sbb
mov
mov
mov
cmp
jns
add
les
adc
mov
sbb
jp
xchg
outsb
pop
jle
lock
sbb
inc
cmpsl
xchg
cmp
cmp
fidivrs
and
aam
insb
leave
popf
adc
mov
shrl
fiaddl
add
lret
add
hlt
in
adc
roll
movsl
mov
or
dec
lcall
xor
lret
flds
add
xchg
outsb
fdivs
out
jo
lock
jmp
push
dec
jns
jne
sub
xor
push
inc
mov
fsubl
out
push
push
lock
mov
dec
cmc
add
mov
out
mov
jp
lret
js
xchg
iret
dec
xchg
std
dec
jne
ds
sub
mov
cmp
mov
push
fldln2
dec
out
mov
sub
sbb
sbb
dec
push
jmp
gs
stos
or
lock
sbb
or
sub
vcmpss
and
dec
shr
negl
cmp
adc
mov
push
orl
xchg
pop
daa
test
or
sub
pop
adc
sbbb
cmp
sub
push
mov
mov
push
add
adc
push
loope
insl
clc
inc
inc
dec
or
fidivrs
pop
ss
fisubl
pop
cmpsl
xor
ds
mov
mov
mov
mov
addb
cmpsb
das
xchg
loope
fadds
adc
adc
mov
in
fsub
xchg
pop
dec
mov
cwtl
icebp
push
jecxz
clc
pop
pop
out
iret
xchg
aam
mov
into
inc
mov
scas
xchg
mov
mov
stc
push
pop
or
adc
aad
pop
in
ret
xorb
aad
ss
xorb
mov
loop
in
test
push
pop
and
jne
mov
and
mov
xchg
cmp
ret
je
jle
pop
faddl
mov
dec
test
xor
lea
jb
and
outsb
fnsave
test
dec
test
mov
and
aam
stos
fstpl
mov
ds
and
xchg
and
mov
xor
cmc
incb
shl
push
push
call
push
and
js
jmp
imul
jno
testl
cmp
mov
test
pop
dec
mov
add
scas
inc
fldcw
jns
adc
lock
ja
mov
mov
outsb
or
mov
or
push
fs
jge
fcmovb
mov
loop
mov
jne
mov
cmp
adc
mov
and
fldcw
insb
mov
sahf
dec
dec
stos
mov
adc
repz
and
ret
es
lret
repnz
sbb
sti
inc
xor
mov
dec
jmp
out
pop
sahf
push
and
pop
lret
inc
push
in
test
push
jno
scas
or
jae
mov
add
xlat
dec
stos
pop
ja
mov
push
jl
sbb
dec
cmc
push
out
mov
loopne
cltd
fmuls
stos
cli
outsl
popa
dec
out
popa
int
loope
fidivl
sbb
inc
xchg
push
or
push
mov
iret
jae
mov
cmc
sbb
js
or
push
mov
arpl
icebp
adc
cwtl
sub
cli
xchg
pop
movl
xor
and
sahf
mov
ret
mov
mov
jle
test
mov
jecxz
mov
sub
repnz
scas
je
xchg
sub
lcall
mov
sahf
dec
mov
imul
roll
aad
clc
popl
pop
xchg
ja
les
mov
call
add
dec
in
or
gs
dec
mov
dec
sub
mov
stos
sbb
and
sub
push
sahf
adc
mov
cmp
sbb
js
shlb
and
xchg
xchg
scas
pop
arpl
cli
mov
iret
mov
fiadds
inc
call
movsl
cs
pop
xor
popf
push
mov
adc
dec
in
popa
pushf
fsub
cltd
les
icebp
lea
mov
adc
inc
or
lods
mov
xor
iret
sbb
fnstsw
mov
adc
insl
cmc
in
push
jl
sbb
sub
mov
inc
cmpsb
fnstcw
xorb
pop
shll
push
and
int
pop
xchg
xor
xchg
hlt
push
push
mov
cmp
or
jge
dec
lea
cmp
out
xchg
mov
pop
sub
imul
cmp
sub
inc
fldl
js
mov
jae
pop
incb
repz
mov
xchg
or
inc
push
shlb
jae
enter
test
lds
popf
sbb
push
xlat
mov
rcrl
sub
bound
sahf
or
loopne
pop
clc
jecxz
push
push
xor
jnp
in
push
enter
add
sbb
jg
bound
and
mov
orl
ss
mov
sub
cmp
es
inc
pushf
lret
fimuls
jnp
add
mov
cmp
push
stos
jecxz
push
add
arpl
call
rcrb
jo
jl
bound
pop
mov
rcrb
frstor
add
inc
aaa
push
test
mov
xor
mov
jo
bnd
arpl
push
and
fisubs
rcrb
push
test
xor
fldenv
inc
stc
imull
cld
adc
dec
movsl
imul
popa
push
pusha
pop
add
jl
cmp
psrad
sar
les
pop
jae
xor
pop
loop
xchg
stc
aad
mov
and
rcrb
rcl
push
ffree
xchg
mov
sub
scas
mov
in
loop
pop
test
inc
add
test
pop
mov
popf
cmp
dec
xchg
stos
lods
dec
inc
xchg
loope
inc
cs
pusha
out
inc
xchg
adc
lret
pop
int3
cwtl
fwait
fs
das
fimuls
sub
sub
repz
xchg
popf
stos
xlat
out
dec
mov
into
ret
xor
add
mov
mov
hlt
or
mov
fwait
pop
test
sub
cwtl
xchg
arpl
pop
and
mov
popl
xchg
cmp
lods
es
gs
imul
je
roll
mov
clc
inc
fstps
nop
imul
adc
mov
push
test
in
add
push
jne
sub
cmp
stc
outsb
xchg
push
cmpsb
repz
and
pop
xchg
hlt
inc
sbb
push
inc
jae
lods
jg
test
dec
xchg
ja
stos
jp
popf
addr16
shlb
fdivrs
jno
sbb
adc
leave
shll
inc
fisubl
mov
push
ss
xor
arpl
cmp
adc
adc
lods
int
mov
mov
push
movsb
add
rcll
fwait
push
push
xor
idivl
and
xor
cmpsl
pop
nop
xchg
push
xor
lods
call
xor
push
push
imul
sub
cmp
add
mov
and
mov
xchg
jl
call
fisubs
mov
jl
pusha
push
jle
jnp
ret
call
push
mov
rolb
jo
icebp
adc
stos
shrb
mov
pop
sahf
arpl
roll
lahf
add
shl
outsl
js
addr16
repz
divl
mov
cwtl
orl
jnp
cmp
lahf
xchg
push
or
insb
adc
nopl
adc
shrl
in
jmp
push
jno
cld
loope
and
cmp
cmp
loope
cmp
pop
out
pop
pop
mov
jnp
pop
and
xor
pop
lea
popf
fsubr
add
add
into
jecxz
ret
jno
negb
mov
or
outsb
clc
pusha
xchg
lret
movb
int3
mov
mov
inc
imul
repz
pop
dec
sub
pop
in
ds
inc
dec
xor
push
adc
cmp
ret
addl
dec
mov
dec
xorl
mov
sub
mov
pop
test
imul
xchg
and
daa
mov
mov
rcrb
push
or
mov
and
scas
dec
mov
lcall
lret
mov
mov
ja
mov
test
add
and
int3
mov
test
into
shlb
sbb
inc
cmp
xchg
dec
pop
gs
mov
and
orb
mov
xor
mov
pop
sub
es
das
mov
stc
inc
sbb
add
mov
out
add
jae
std
test
lret
movsb
aas
rcrl
xchg
mov
inc
aas
cmp
jns
imul
push
xchg
mov
mov
stos
xchg
mov
inc
adc
out
leave
xchg
movsb
push
movsb
ss
fwait
jmp
fs
dec
push
ret
movsb
aam
nop
sbb
jmp
lds
or
cs
rorb
stos
jge
pop
push
cmp
pop
cmp
pop
sbb
adc
mov
ds
sbb
xor
iret
sbbb
in
daa
xor
in
lock
in
aas
movb
pop
inc
fs
insl
xchg
sub
loope
dec
andl
jns
pop
popf
adc
dec
add
xlat
pop
stos
scas
xchg
mov
cmc
andl
and
pop
ljmp
jb
test
in
lods
imul
mov
rclb
xchg
add
xorb
adc
outsl
mov
int3
lods
arpl
mov
xchg
inc
imul
add
cmpl
add
dec
lcall
push
cmp
cmc
mov
leave
mov
inc
mov
push
lea
push
in
pop
pop
imul
inc
push
aad
loopne
hlt
mov
lea
iret
xchg
inc
sbb
and
pusha
in
insl
les
inc
jl
xacquire
inc
cld
leave
mov
inc
addr16
xor
adcl
fs
in
stc
sahf
xchg
daa
dec
and
movsb
pop
adcb
sbb
jns
or
fstl
jmp
xchg
inc
mov
setne
ja
mov
mov
imul
scas
movsl
or
imul
loopne
inc
insb
stc
cmp
dec
ds
out
jae
lahf
data16
aas
lds
shll
call
adc
xlat
test
lds
test
xchg
jle
mov
or
adc
and
push
jmp
test
imul
mov
cmp
pop
mov
mov
xchg
scas
xchg
jp
inc
jnp
data16
push
mov
add
or
nop
bound
fwait
movd
dec
aas
cmpsl
call
mov
test
inc
lret
add
cmpsb
aam
mov
cli
cmp
aaa
js
adc
sbb
push
mov
mov
jnp
ja
xchg
gs
dec
mov
jnp
mov
sbb
iret
adc
add
dec
shll
pushf
mov
js
stos
test
mov
out
sub
sti
test
or
fldcw
pop
out
pop
and
popf
adc
push
jle
lret
sub
aad
ret
sub
rorb
lret
inc
aad
sbb
mov
pop
mov
test
dec
pushf
rorl
das
sbb
repz
fbld
ljmp
sub
imul
nop
cmpsb
jecxz
int3
or
jae
dec
pop
xchg
jecxz
mov
in
inc
mov
mov
sbb
addb
lock
test
dec
testl
push
push
pop
dec
pop
icebp
leave
sub
cmc
fcoml
leave
in
or
add
sub
stos
sbb
xchg
fstpt
insl
xchg
add
sub
xchg
ss
push
adc
jae
xor
lcall
push
test
and
outsl
xor
sbb
cmp
or
mov
jle
push
sub
aas
add
adc
stos
scas
or
cwtl
pushf
aad
mov
scas
repz
xor
scas
mov
stos
and
shll
mov
movsl
push
jnp
push
cmp
xchg
jnp
push
fldl
add
in
mov
test
subb
xor
inc
jno
jg
add
jle
jo
into
add
pop
in
jmp
sbb
loope
rorb
and
lcall
push
leave
aad
adc
pushf
sbb
pop
fucom
pushf
xor
loop
imul
mov
ds
mov
repz
daa
mov
cmovs
popf
mov
push
add
mov
push
adc
daa
dec
mov
push
mov
sbb
clc
loopne
fs
mov
jecxz
mov
leave
inc
ficoms
scas
mov
out
in
xchg
sbb
aaa
ret
lds
sub
push
lods
inc
or
lret
add
and
mov
sti
cwtl
xchg
xchg
jno
lahf
push
cmp
jge,pn
in
fiadds
cmpsb
cmc
push
push
into
fbstp
ljmp
scas
xchg
jb
inc
adc
cmpsb
ss
mov
or
and
mov
mov
dec
and
pop
stc
jmp
xor
xchg
lret
mov
gs
xor
jl
mov
mov
daa
dec
pushf
inc
mov
adc
push
cltd
adc
cwtl
or
aad
popa
fildl
xor
fcmovb
sti
add
dec
andb
test
cld
lcall
push
jge
arpl
adc
dec
sbb
sub
mov
sbb
xchg
pop
add
cwtl
mov
xchg
sbb
cwtl
test
loop
inc
aad
mov
pop
lea
lcall
push
mov
and
popf
push
mov
or
adc
cmp
add
xlat
mov
and
loope
cmpsb
xchg
sahf
inc
imul
inc
ja
jmp
wbinvd
imul
mov
ficoms
adc
mov
mov
cmpb
sbbb
mov
mov
scas
incl
or
into
pop
xor
jb
mov
inc
push
insl
fwait
gs
and
mov
mov
jge
stos
clc
sahf
aad
iret
dec
or
xchg
gs
into
push
shl
cli
and
jle
test
adc
and
jp
sub
ljmp
mulb
push
sbb
dec
pop
icebp
cmpsb
mov
ficoml
lret
shl
ljmp
mov
fld
movsbl
jg
push
mov
fisubrl
sbb
data16
inc
mov
sbb
push
dec
adc
sbb
jp
dec
rorb
xchg
es
sbb
sbb
gs
add
jp
mov
xor
jo
icebp
mov
addr16
push
psubsw
add
cmp
lcall
cmpsb
aaa
jp
fwait
imul
pop
xor
rorl
sbb
bound
pop
push
jmp
push
and
jp
dec
pop
ret
ret
fsubrl
jecxz
fwait
jge
shlb
push
mov
push
and
mov
cld
icebp
push
enter
and
aad
mov
roll
test
xchg
clc
cmp
jg
xchg
test
jns
xor
lcall
fisttps
mov
pusha
xchg
lea
inc
scas
out
mov
push
out
pop
dec
lock
xchg
sbb
pop
or
das
mov
xchg
push
mov
inc
inc
dec
xchg
mov
ss
or
mov
or
sbb
cmpsb
mov
les
movb
fcmovne
ss
fsts
xor
mov
out
insl
shll
mov
fstl
movsb
push
test
adc
cmovnp
inc
sbb
pop
out
fcomps
sub
pop
rcl
mov
dec
pop
xchg
dec
fisubl
pop
xchg
mov
sub
pop
stos
out
out
sub
popf
mov
insb
sub
mov
lods
cli
dec
push
popa
inc
fcmovb
loopne
nop
push
out
mov
jbe
ret
popf
aaa
lahf
and
sarb
sub
mov
dec
sbb
outsb
xor
ja
mov
icebp
mov
shrb
test
lods
mov
push
mov
jp
sub
lret
sub
fcomi
or
test
aam
pop
inc
rcll
fcmovne
push
fbstp
mov
hlt
jns
bound
scas
mov
das
pop
mov
stos
fisubrs
ss
dec
push
add
and
sub
mov
fstpt
movsb
and
test
dec
xchg
orl
push
inc
jo
mov
lods
roll
dec
pop
das
xor
outsl
cmp
int3
into
popa
loop
arpl
aam
jno
fistpll
divb
mov
mov
mov
scas
sub
mov
jae
push
ja
sub
push
fcmovbe
jne
mov
jno
das
enter
jg
cli
sub
xor
mov
cmp
icebp
push
je
insl
jge
sbb
cmpsb
mull
mov
popf
es
jle
aam
xor
loopne
lds
aam
pop
cmpsl
dec
mov
and
repz
test
mov
mov
fucomip
pop
push
inc
dec
sahf
push
leave
mov
or
cmpsl
dec
xchg
iret
out
add
stos
daa
xor
out
insb
nop
inc
stos
push
push
xor
mov
aaa
pop
cmpsb
loope
mov
push
mov
add
stos
sbb
lock
fildll
push
sahf
add
rcrl
xchg
mov
and
pushf
lret
inc
pop
arpl
arpl
aaa
sub
inc
mov
xchg
bnd
pop
lret
mov
popf
lret
in
inc
testl
or
xchg
sub
lds
scas
mov
repnz
push
pop
leave
nop
iret
adc
or
loop
imull
pop
daa
sub
and
xchg
sub
jno
loope
adc
push
push
imul
push
pushf
and
rcrl
int3
mov
pop
in
xor
or
pop
out
pop
jo
test
call
into
stc
dec
jle
iret
movl
cmp
push
or
dec
movsl
mov
lods
cmpsl
scas
scas
aam
pop
pop
mov
insb
mov
dec
push
jne
orl
jb
and
lock
xor
jecxz
dec
and
dec
lret
and
sub
data16
call
or
mov
insb
insl
sub
inc
push
out
mov
push
push
jmp
cmp
xor
xor
inc
xor
cld
sub
mov
push
outsb
mov
xchg
push
nop
mov
repz
mov
mov
lahf
xchg
push
and
lods
xor
ss
push
dec
sbb
and
arpl
addr16
mov
dec
xor
push
xchg
aas
cmp
mov
scas
test
cmp
xchg
daa
ja
sub
mov
ss
jmp
mov
xor
xchg
adc
scas
stos
sub
pop
mov
dec
inc
addr16
icebp
ja
cmpsb
lret
lret
sub
out
dec
mov
mov
jl
jne
sti
sub
pop
mov
and
sbb
fbld
xchg
test
ja
cmpsb
xchg
xor
or
xlat
jno
pop
cmpsb
cmp
clc
add
cwtl
int
push
or
inc
jnp
sbb
aaa
jp
adc
sbb
mov
lods
fcmovnbe
into
and
mov
cmp
jge
dec
adc
mov
inc
or
in
xor
adc
or
pop
adc
popa
leave
rorb
adc
xor
jl
in
push
sti
les
adc
mov
idivl
fdivl
sarl
aad
out
test
test
push
ffree
push
popf
orb
push
loope
andl
xor
jge
or
mov
fs
pop
out
in
mov
lock
mov
cld
mov
adc
mov
mov
pop
push
push
mov
jo
test
and
adc
movsb
jae
mov
xchg
cmc
je
scas
addb
and
mov
stc
mov
push
pop
in
pop
rcr
lods
hlt
pushf
inc
dec
idiv
push
pop
and
fistpl
mov
jnp
cltd
test
imul
mov
adc
cmp
xchg
or
xor
xor
and
sbb
adc
pop
lock
mov
jno
in
xchg
frstor
xchg
mov
out
and
popa
icebp
lret
inc
xchg
mov
mov
xchg
add
sub
mov
stc
mov
inc
adc
pop
test
jne
js
movsb
cmc
adc
xor
pop
pop
sbb
out
aam
sbb
loop
push
cmp
dec
lods
sbb
cld
lock
je
inc
mov
shl
fisubs
out
push
outsl
dec
mov
test
cmc
jns
inc
push
outsb
mov
loop
js
xchg
insb
cmp
cmc
fcmove
and
push
das
into
xchg
repz
mov
mov
test
arpl
das
mov
imul
or
pop
mov
nop
jo
and
cmp
out
out
dec
or
pop
cmp
push
mov
adc
jl
std
inc
xchg
jo
pop
repnz
mov
add
les
jo
icebp
mov
popf
adc
and
ror
mov
clc
xchg
mov
push
rcrl
mov
push
jnp
cmp
sub
out
and
push
pushf
jb
test
adcl
push
cmpb
fldenv
ss
gs
nop
mov
jle
push
cmpl
scas
repnz
inc
arpl
add
pop
adc
mov
jno
ss
das
insl
daa
ret
jmp
std
cmp
xor
movsb
push
xor
fstl
adc
cmp
scas
inc
std
in
loop
adc
jg
push
lds
divl
mov
sub
dec
xchg
jns
sbb
sub
js
rcl
lds
in
and
outsb
cli
inc
cli
or
in
sbb
lea
jle
cmp
movsl
dec
mov
in
xor
mov
dec
frstor
loopne
pop
jecxz
fmuls
cli
popf
jns
sti
sub
imul
mov
mov
lahf
inc
fidivrs
cmpsl
xchg
std
out
jo
jmp
lret
mov
lret
cs
imul
loop
lret
stos
xchg
filds
jp
call
inc
dec
addr16
mov
mov
repnz
jb
fstpl
cmpsl
aad
test
int3
push
scas
push
lcall
push
mov
fs
lcall
out
fidivrs
in
ficomps
cmp
fs
mov
jle
insl
adc
xor
dec
neg
cmp
push
lret
adc
xor
cld
add
pop
cmp
into
jne
dec
insl
push
xor
adc
mov
push
adc
pop
adc
out
testb
insl
push
cwtl
mov
inc
pop
jl
dec
push
adc
inc
mov
ljmp
outsl
mov
pop
add
mov
insl
iret
mov
lods
add
inc
push
cmp
jl
insl
fnstsw
int3
fld
clc
mov
fidivrl
fstl
pop
test
jne
xchg
divps
mov
insb
dec
mov
push
jno
xor
sub
mov
pop
out
pop
and
dec
inc
test
pop
out
ret
dec
add
aam
addl
mov
lock
sbb
ret
sbb
fisubrl
loop
mov
push
lcall
xchg
sbb
mov
and
js
scas
negl
xchg
fcoms
lcall
mov
xchg
xor
cs
jg
data16
jae
inc
js
pop
cwtl
mov
int3
bound
inc
dec
or
in
cmp
in
mov
lods
sub
jmp
insb
ficomps
jmp
cmp
or
iret
adc
pop
in
in
cmp
pop
xchg
inc
iret
sahf
shlb
mov
lods
dec
xchg
inc
out
hlt
inc
int3
ljmp
dec
jb
push
xor
call
sarl
daa
popa
jbe
js
lret
cld
sbb
subl
iret
mov
into
push
xor
movsb
scas
cmp
and
call
cmpsl
cmp
repnz
out
mov
lea
addl
imul
mov
mov
cmp
std
rorb
ja
clc
pop
fsubrs
repnz
mov
jmp
and
jle
mov
dec
mov
pusha
fcmovnbe
insl
ja
icebp
cmpl
and
cli
adc
pusha
test
mov
add
jl
jp
add
mov
xlat
mov
push
test
pop
mov
mov
cmc
cmp
lock
add
leave
lret
inc
rolb
xchg
aas
mov
xor
mov
dec
test
int
stos
ss
insl
or
ss
imul
enter
punpcklwd
call
jnp
pushf
jle
shlb
out
add
xor
xchg
pop
mul
lock
inc
cmp
pop
lahf
cmova
rcr
and
cltd
add
sarb
pop
test
dec
rcrl
jge
dec
nop
dec
pushf
cmp
sbb
lahf
fnsetpm(287
mov
in
mov
leave
pop
notl
add
leave
je
fcmovnu
mov
repz
data16
loopne
mov
dec
popf
dec
sbb
scas
rcll
movsb
pop
inc
add
push
iret
and
test
mov
sbb
and
repz
repz
sahf
test
clc
dec
aas
sub
sub
cmpb
add
sbb
push
pop
loop
mov
mov
xchg
inc
cmpsl
test
mov
push
fs
rcll
sbb
pop
xchg
test
es
push
dec
stos
adc
pop
in
roll
out
in
leave
mov
mov
mov
out
cmp
xchg
mov
bound
leave
xchg
sbb
lea
mov
pop
out
xorb
lods
dec
jae
shlb
test
and
and
xchg
pop
repz
xchg
mov
jmp
lods
mov
push
lock
test
cs
xchg
and
mov
cmp
push
push
sub
movsl
push
cs
stos
pushf
sub
mov
lahf
arpl
xor
mov
test
or
stos
aas
inc
pop
lahf
push
jg
cmp
pop
fisubs
push
xchg
dec
fdivrs
aaa
dec
dec
out
pop
in
adc
lock
stc
inc
inc
xor
dec
xor
inc
or
test
inc
dec
mov
scas
rcll
stos
test
les
fnsave
lods
dec
mov
in
xchg
call
push
cmp
mov
rcll
jae
adc
sbb
mov
movsb
push
jae
aaa
jl
in
mov
and
push
insl
jb
test
sbb
ja
xchg
jnp
xor
inc
sar
or
xchg
jmp
or
std
sbb
xchg
popf
test
fcmovnu
sti
je
and
movsl
ret
mov
cmp
cs
out
leave
pop
std
cmp
ss
push
jecxz
lock
add
cmp
out
sbb
push
mov
pusha
mov
imul
and
enter
out
push
cmpsb
jg
and
sahf
pop
jge
sbb
adc
mov
adc
or
inc
out
push
add
and
cmpsl
mov
js
sbb
gs
xor
or
mov
out
lret
sub
jb
pop
xchg
mov
dec
out
adc
inc
mov
repz
mov
test
xor
sub
or
push
mull
negl
lret
out
ret
sub
xchg
clc
mov
std
imul
add
push
call
aam
popf
cmp
je
ja
out
aad
repnz
and
xor
pop
xchg
lcall
cwtl
mov
push
out
sbb
inc
mov
lret
out
push
leave
push
insb
sub
ret
rolb
in
pop
mov
ss
xor
lods
push
push
test
fcomip
stos
push
push
mov
dec
and
xchg
cmp
pop
fwait
adc
rcll
clc
add
jle
test
daa
adc
cmp
push
gs
cmp
mov
xchg
rcr
fwait
movsl
adc
sub
fcompl
negl
sbb
mov
rcrb
loopne
sub
sbb
or
out
pop
pusha
pop
mov
lds
or
xor
lcall
mov
push
adc
cmp
test
js
mov
xlat
int
bound
loope
push
lahf
fsubl
mov
mov
mov
adcl
movsb
sub
jmp
aad
push
popf
outsb
xchg
add
mov
cmove
nop
loopne
popf
cmp
imul
xor
or
pop
pop
lret
into
xor
mov
outsb
pop
adc
dec
pop
sbb
loopne
jo
inc
xor
stos
cmc
cmpsl
pop
pop
test
pop
popf
adc
cmp
mov
int3
cmpsl
sub
das
push
push
outsb
mov
inc
cmp
xchg
in
fst
xchg
mov
and
sub
adc
sbb
inc
add
adc
xorb
mov
stc
dec
ja
inc
test
xlat
jns
add
sahf
xchg
push
mov
jl
mov
xchg
sahf
xchg
imul
push
pushf
mov
pop
ss
xor
ret
cli
push
add
jmp
mov
rcrb
jo
sbb
scas
ficoml
xor
dec
inc
and
pop
imul
sbb
test
pusha
or
push
pushf
pop
adc
lret
mov
or
inc
popf
xchg
xchg
sbb
out
xchg
xchg
ficoms
or
jge
popf
popa
sbb
imul
outsb
hlt
mov
fildll
lods
fbstp
mov
xchg
xchg
sti
or
es
jle
pop
xchg
les
ror
push
popf
fsubrl
mov
rclb
inc
clc
clc
xchg
sbb
cld
lds
cmp
mov
into
pop
inc
stc
pushf
incl
xchg
push
mov
into
inc
in
lret
test
inc
sub
out
mov
add
ret
cmp
insb
shll
dec
je
lcall
add
fdivrs
jle
xchg
out
ljmp
out
idivb
lea
and
nop
je
push
dec
sub
sti
lahf
adc
int
xor
push
sub
fiaddl
es
je
mov
adc
mov
addr16
popa
ds
lcall
cli
cmp
js
insl
fs
push
cmp
sbb
testb
movb
mov
xor
test
mov
ret
fsubp
pop
xchg
pop
cmp
or
xor
jne
dec
rorl
pop
out
push
divl
inc
mov
in
bound
ds
pop
inc
dec
adc
fwait
sub
sbb
pop
dec
out
outsl
movsb
push
dec
ljmp
xchg
and
adc
pop
inc
xorl
adc
pop
mov
shlb
and
idiv
push
repz
loopne
loop
inc
adc
ret
xchg
dec
in
fbstp
inc
inc
shrb
lret
pop
pop
dec
sbbl
and
test
adc
mov
adc
faddp
lods
adc
dec
cmc
push
dec
call
adc
add
aas
sahf
mov
push
pop
xor
xlat
jp
and
cmp
jmp
xor
jns
sbb
mov
mov
add
mov
sbb
cmp
fmull
push
lock
sarb
outsb
jl
enter
and
lods
aas
outsb
shlb
or
lret
fs
ljmp
jecxz
add
jmp
cmpsl
pop
sarb
cmp
inc
mov
push
sbb
inc
inc
fldl
dec
rcr
xchg
xor
dec
jmp
pop
push
mov
inc
stos
scas
fsubrp
outsl
popa
int
movsb
aaa
out
loopne
xchg
inc
loop
push
jne
lods
sti
jnp
xor
in
dec
mov
jae
xor
adc
daa
stos
cwtl
sbb
sahf
nop
sbb
sti
and
es
pop
xchg
mov
inc
mov
jg
mov
loope
fldcw
cmp
xlat
movsl
push
mov
push
jae
xchg
and
dec
mov
sti
aam
jle
pop
mov
or
mov
sub
cmp
push
pop
sbbb
mov
mov
cltd
das
sbb
shll
cwtl
cs
push
mov
push
movb
jb
scas
fstl
cmc
jmp
and
adc
pop
pushf
jo
add
call
repz
lcall
or
jg
cmpsl
jne
pushf
daa
pushf
sbb
sub
pop
out
inc
pop
mov
mov
add
push
test
gs
xchg
add
in
and
pop
fimull
and
or
and
hlt
out
add
xchg
outsb
hlt
lret
insl
mov
pushf
sub
and
mov
mov
mov
mov
jmp
pop
cwtl
push
mov
mov
dec
fwait
cmpsl
xchg
adc
push
arpl
push
testl
push
xor
sub
jp
fldt
inc
mov
mov
lea
sbb
sub
repz
adc
xor
pop
cld
inc
jp
jecxz
cmpsl
lcall
inc
stos
fwait
es
or
push
ret
sub
inc
test
and
jno
ss
lds
cmc
jp
gs
push
int3
cmp
inc
push
sbb
arpl
cmp
mov
xlat
int
test
cmp
std
mov
xor
push
fsubl
cmp
je
cli
add
sti
fwait
push
or
xchg
popa
and
inc
mov
inc
inc
mov
add
add
xchg
ljmp
xchg
adc
and
xchg
cmp
dec
mov
xchg
int
and
rcrl
test
ret
std
pop
sbb
leave
scas
lods
dec
sbb
sbb
add
andb
jb
xor
ljmp
and
inc
arpl
popa
mov
loope
xor
push
int
rolb
dec
call
fs
xor
int
addl
int3
cmc
dec
insl
xor
xchg
test
xor
pop
arpl
push
jae
fdivrs
jmp
out
cmp
in
xlat
leave
inc
or
fists
lcall
mov
jns
and
ret
mov
pop
push
xor
xchg
mov
insb
imul
jns
lret
nop
jecxz
icebp
lcall
adc
xchg
sbb
sub
xchg
xchg
and
sbb
leave
das
add
sbb
imul
jp
or
imul
push
addr16
js
arpl
inc
movsb
repz
xchg
dec
clc
clc
sbb
and
shll
incb
das
insl
pop
fsubrp
imul
repz
ret
dec
inc
inc
fs
je
inc
inc
dec
push
dec
cli
fnstsw
sub
cs
add
adc
mov
push
and
rclb
add
aam
sbb
cltd
in
mov
and
xchg
mov
daa
inc
dec
jbe
pushf
xchg
cmp
insb
out
jl
inc
repz
fs
cs
lds
js
mov
jo
dec
push
inc
xor
aad
xchg
mov
mov
mov
idivl
in
jns
fcom
inc
insl
cmpsl
fstpl
insl
jmp
nop
and
loop
jne
outsb
popa
push
inc
inc
xlat
mov
pop
je
push
dec
leave
xor
sub
movsl
sbb
cwtl
in
cmp
outsb
in
xor
daa
cmp
sbb
ffree
frstor
sarl
into
fdivrl
lahf
addr16
xor
xlat
das
dec
sub
mov
push
dec
loop
push
add
or
xor
test
loopne
sti
ss
test
inc
fdivs
jp
push
repz
stos
cmpsb
sbb
xor
sbb
mov
add
out
jne
loopne
je
jg
rep
popf
cmp
pop
mov
xchg
es
aaa
sub
iret
mov
test
ljmp
cmp
lock
dec
cmp
xorb
in
pusha
inc
in
jle
jae
cwtl
outsl
pusha
push
pop
enter
movsl
es
pop
daa
popa
int3
mov
popf
and
jecxz
aas
dec
adc
mov
sbbb
jle
dec
sbb
enter
aaa
mov
xlat
pop
addr16
gs
add
ss
and
add
repnz
xchg
jb
add
add
sub
divb
adc
and
pop
outsl
ret
jmp
sbb
mov
loope
cmc
inc
mov
scas
clc
pop
shlb
into
and
adc
mov
arpl
ljmp
and
xor
addr16
insb
mov
mov
aas
xchg
adc
xlat
lds
pop
push
imul
or
and
sub
aas
xchg
lcall
stos
test
mov
xchg
jg
aam
outsb
dec
gs
bound
test
dec
xor
imul
mov
jmp
sahf
lods
sub
nop
iret
stos
mov
jnp
gs
sub
mov
shlb
stos
xlat
popf
mov
in
lahf
jo
sub
les
xor
not
pop
scas
insb
mov
xor
ret
jne
dec
push
movsb
negb
sub
pop
hlt
cmpsl
mov
dec
adc
push
push
push
cmc
outsb
inc
cmc
rsm
sub
pop
push
fnsave
add
in
test
shlb
xchg
fdivl
ds
jne
cmc
in
inc
sti
sahf
xchg
call
dec
mov
mov
pop
popf
mov
aad
stc
jo
into
dec
stos
lods
je
inc
aas
add
push
jp
scas
inc
inc
or
out
push
mov
enter
int3
lret
cmp
inc
into
sub
mov
xchg
xchg
gs
jle
dec
mov
das
push
mov
into
js
mov
cmp
je
push
dec
mov
mov
pop
add
loop
test
cmp
pop
xor
dec
or
xchg
xchg
icebp
stos
repz
out
scas
hlt
mov
and
arpl
lret
add
lret
and
fs
sbb
lret
fcmovnbe
push
jae
in
sbb
mov
imul
adcl
cmpsl
arpl
and
bound
pop
stos
add
lea
mov
sub
aas
repnz
cmpb
pop
repnz
lods
push
xor
movsl
dec
icebp
xchg
xlat
lahf
scas
pop
pop
jb
and
xchg
push
in
or
sbb
pushf
jl
das
sub
push
pop
mov
sub
mov
mov
js
hlt
xor
popa
cmp
mov
sti
insb
jp
dec
rcr
call
adc
das
aad
aas
fnstcw
pop
adc
jns
stos
aaa
arpl
inc
and
push
cs
xchg
sub
fistps
nop
pop
push
loope
dec
jp
jp
adc
jg
in
jge
hlt
mov
mov
insb
mov
xchg
and
jecxz
cmp
mov
fstpl
push
fstps
adc
fnsave
adc
pop
cld
call
cltd
cmp
mov
jp
aad
lahf
mov
stos
jb
pop
inc
iret
mov
ljmp
sub
mov
int
adc
pop
jnp
shr
fs
jp
insl
xchg
idivb
sub
mov
fisubs
pushf
and
mov
ljmp
insl
seta
stos
int
add
add
sub
mov
sti
sbb
mov
jge
fnsave
jno
cmp
pop
add
test
pusha
and
in
or
xlat
jne
das
ja
cltd
out
insb
mov
adc
test
imul
imull
sbb
mov
addr16
aaa
xor
jae
incb
movsb
aaa
mov
leave
loop
jmp
jne
jnp
mov
aad
mov
aas
cwtl
insl
xchg
xlat
or
popf
data16
xor
rolb
pop
sbb
add
out
test
daa
cmpb
xchg
dec
gs
mov
sub
lods
arpl
jo
push
pop
gs
jecxz
mov
into
inc
push
xchg
lods
lret
hlt
or
imul
das
lret
push
adc
add
es
adc
pop
pusha
int
pop
stos
js
inc
sahf
cld
cld
cmpl
dec
sbb
int3
fsts
movsb
arpl
push
cmp
sar
push
dec
cmpsl
movsb
dec
rorb
push
int3
mov
jne
test
nop
aaa
rcll
cmpsl
js
cld
push
fwait
adc
testl
gs
es
in
push
xor
stc
cmp
adcl
cmp
push
inc
xlat
cmc
sub
das
dec
out
cmpsl
cli
dec
push
xchg
je
cmp
sbb
fisttpll
push
mov
repnz
jl
sarl
push
push
in
enter
push
adc
cmp
mov
outsl
push
push
iret
outsl
inc
fisubrl
lods
mov
pop
lods
popa
pop
fistpl
xor
cmp
sbb
or
loope
cmc
jae
sbb
fs
push
cwtl
loop
dec
sbb
rcr
cmpsb
scas
lcall
add
jl
jnp
mov
sbb
mulb
lods
ja
push
jo
fimull
in
xchg
arpl
sbb
fstpt
add
sub
dec
push
push
mov
es
iret
cmp
mov
out
push
mov
mov
cltd
and
in
sub
aad
mov
mov
loope
stos
mov
cmp
or
bound
sub
mov
fcomip
ja
scas
popf
push
fs
xor
adc
dec
inc
mov
cli
in
sbb
xor
and
mov
inc
pop
lods
in
loopne
jge
mulb
sbb
lcall
cmovle
sti
pusha
xchg
add
and
mov
loope
fs
mov
jbe
mov
add
movsl
xor
lock
fldl
jne
and
xchg
mov
sub
iret
cmpsb
push
fs
mov
sbb
sahf
xchg
add
bnd
andl
lods
cwtl
jne
jge
cltd
out
decb
mov
adc
incb
pop
dec
in
pop
aad
adc
push
mov
mov
sbb
inc
push
mov
jnp
push
inc
out
add
or
add
sar
imulb
push
mov
fnstenv
sti
test
cmpsb
push
rclb
adc
jb
jl
ret
pop
std
je
stos
sbb
jmp
scas
sub
jle
push
xchg
je
sub
add
insl
inc
mov
sbb
rol
or
cltd
ja
inc
pop
xchg
bound
sub
jle
xor
mov
lea
rclb
fwait
pop
arpl
ds
xor
pop
mov
adc
dec
sbbl
ljmp
sbbl
xor
sarl
loopne
lds
in
es
aaa
inc
push
pop
fwait
push
mov
in
gs
gs
sub
jle
jmp
dec
cmp
aas
push
xor
mov
outsl
mov
or
jbe
out
fs
jmp
in
or
int
movsl
lcall
pop
sub
sbb
sysret
out
fisttpll
in
int3
test
mov
fdiv
push
jg
dec
pop
fstpt
and
adc
mov
add
fsts
insl
jae
out
xor
jge
test
push
test
cmp
faddp
mov
sub
std
xchg
lods
jg
sahf
pop
push
mov
cwtl
imulb
enter
stos
enter
das
fmuls
dec
pop
add
rol
ret
test
js
pop
faddl
aas
inc
push
push
xchg
enter
test
cltd
mov
mov
xchg
dec
xchg
stos
xor
dec
je
push
jp
repnz
adc
adc
pop
fisubs
gs
dec
loop
lock
mov
mov
dec
cmp
scas
scas
loope
pushl
dec
arpl
and
popf
dec
and
mov
imul
dec
scas
add
cmp
imul
sub
comiss
fs
data16
lret
xchg
push
jle
in
lock
adc
outsl
pushf
xchg
inc
mov
mov
fbstp
arpl
sti
push
pop
aam
jae
inc
movsl
les
sarb
mov
enter
adc
mov
or
add
xchg
aas
cld
sub
icebp
stos
daa
ja
movsl
lahf
nop
or
mov
pop
xor
cmp
xor
xor
cs
sti
push
dec
sub
cld
dec
addr16
das
movsb
daa
jmp
xchg
mov
xor
cwtl
int3
pushf
jbe
cmp
int3
test
mov
loopne
test
stos
idivl
fcompp
and
adc
pop
outsl
dec
xchg
or
stos
imull
push
test
outsb
cmp
insl
mov
pop
or
sbb
sbb
or
insb
adc
std
inc
outsl
or
sub
xchg
inc
inc
dec
cmp
jmp
add
xor
shl
mov
jnp
dec
loope
dec
push
test
cltd
out
add
jge
mov
mov
adc
cmpsb
jp
jg
pushf
test
pop
insb
pop
ret
ss
je
dec
cmp
adc
shl
lods
sbb
sbb
xchg
into
sub
inc
xchg
ss
sub
jle
fldl
pop
adc
cmp
sahf
jae
into
push
cmp
adc
cs
dec
mov
je
jmp
jecxz
add
mov
out
daa
jl
fidivrl
jg
inc
inc
mov
jno
jl
lret
insl
dec
iret
or
rcll
sub
outsb
popf
es
imul
stos
xlat
sub
movsl
or
bound
pop
mov
add
shrb
loope
cs
gs
test
xor
pushf
aaa
iret
and
xor
in
xchg
test
aad
push
pop
lahf
jmp
sahf
shlb
adcl
jbe
mov
mov
push
cltd
movsb
pop
gs
jnp
int
xor
test
add
cld
rol
xor
pop
add
test
dec
xchg
pusha
mov
int
jecxz
jecxz
jae
sbb
inc
sub
dec
and
in
mov
and
into
pushf
add
jo
push
popa
ja
jg
dec
rclb
xchg
pop
mov
pushf
adc
pop
imul
je
jno
insl
add
mov
dec
xor
xchg
not
je
mov
jne
jnp
fwait
push
jno
mov
popf
jnp
mov
inc
pop
aaa
popf
sbb
fcoml
jmp
es
jmp
cld
shll
fildl
fstpl
mov
mov
fistpll
outsb
fsubs
arpl
jnp
adc
dec
and
stos
sbb
adc
mov
notl
std
pop
hlt
call
sub
inc
aas
jle
jo
inc
and
jae
out
enter
ds
pop
jbe
adc
lcall
fld
jns
xor
pop
sub
mov
stos
xchg
mov
mov
ret
fwait
pop
in
adc
and
mov
mov
leave
dec
enter
out
and
repnz
mov
xchg
imul
repz
ljmp
xchg
daa
sbb
lods
mov
lock
out
push
clc
mov
test
shll
loope
xchg
out
push
lcall
jg
loopne
mov
xlat
lahf
leave
jns
cmpsl
xchg
js
call
sbb
or
xor
or
shlb
shll
xchg
imulb
sbb
out
dec
jb
cli
pusha
xor
out
mov
mov
jbe
sbbb
adc
cmpb
imul
cmpsb
and
push
or
sti
scas
addr16
cmp
gs
addb
pop
aaa
imul
or
mov
cmp
mov
lret
ret
pusha
je
aaa
mov
jb
pushf
adc
into
mov
sbb
dec
add
jb
mov
loope
inc
test
pop
ffree
or
lock
push
cmp
cvttps2pi
aas
pop
enter
and
insl
pop
popa
xlat
sub
cmp
xor
dec
dec
mull
push
push
dec
rcr
adc
mov
jno
add
xor
mov
jmp
and
mov
in
and
aam
fisttpl
imul
cmp
inc
sahf
push
sub
popf
std
bnd
mov
vpsubsb
cmp
rep
sub
mov
stos
aaa
out
jnp
push
mov
sysenter
scas
add
arpl
push
push
inc
cmp
fsubs
out
pusha
out
inc
inc
rcll
cmpsl
sbb
or
jp
jmp
jmp
cltd
xor
push
addr16
leave
sbb
push
bound
adc
mov
sti
inc
xor
and
jno
add
outsl
shr
call
pop
add
dec
iret
push
aaa
cmp
jae
loopne
inc
add
add
add
mov
jne
push
lahf
mov
xchg
push
xor
push
inc
xor
jo
psubusb
or
jp
jnp
pop
lea
mov
cmp
aas
xchg
ret
mov
fidivs
sbb
push
mov
dec
popf
stos
push
xchg
test
stos
mov
adc
push
jp
mov
stos
and
imul
pop
and
jg
scas
jg
xchg
mov
imul
pop
out
push
iret
sub
rclb
sti
stos
test
sarl
shll
ret
fs
repnz
arpl
push
insb
in
pop
incl
sahf
sahf
cli
push
stos
std
add
xchg
popf
dec
jl
cld
cmp
imul
xchg
int3
in
mov
mov
rorb
mov
aad
mov
cs
mov
mov
stos
and
bound
cmp
jae
push
shlb
ret
inc
inc
arpl
inc
xchg
cmpsb
js
xor
or
call
repz
push
sbb
lods
inc
xor
adcb
leave
pop
repnz
fisttpll
nop
lcall
loopne
cmp
and
mov
pop
fidivl
jle
push
cld
nop
ror
and
outsl
imulb
addr16
jns
outsl
cmp
push
andb
ficoms
push
roll
adc
jne
mov
shrl
stos
xor
mov
shll
fldt
icebp
je
lcall
jbe
dec
push
mov
mov
arpl
mov
sbb
xlat
outsl
mov
lahf
push
ror
jae
pop
lods
loop
ret
push
dec
mov
push
ret
cli
mov
call
rcrl
inc
mov
in
and
push
dec
mov
jnp
icebp
std
aaa
jne
cmpsl
dec
loopne
imul
jecxz
test
addr16
mov
inc
mov
sbb
fstp
fwait
mov
dec
aaa
push
push
pop
daa
test
call
cmpsb
push
pop
cmp
cwtl
adc
cmpsl
mov
jecxz
jmp
shl
pop
popa
rol
mov
jne
test
cmp
test
pop
fsubs
popf
xor
in
js
daa
or
and
iret
sbb
pop
movsb
aas
mov
mov
mov
mov
sub
sub
addb
add
or
stos
std
mov
push
or
pop
insb
cmpsb
fldenv
into
shll
lahf
and
mov
jge
xorl
daa
xor
xchg
sbb
mov
lods
in
or
movsl
pop
sub
sti
dec
jns
jp
dec
xor
xor
arpl
mov
sub
into
pop
movsl
sbb
imul
daa
jo
sub
or
gs
std
jge
and
stos
xchg
adc
inc
sub
out
jle
cmpsb
popf
mov
push
lods
out
lcall
mov
stos
xchg
pop
mov
pop
bound
push
push
push
mov
xlat
cltd
ds
mov
out
mov
push
insl
jg
ljmp
leave
adc
push
mov
call
or
mov
mov
jnp
lret
sbb
mov
xor
xlat
es
mov
jno
sbb
inc
test
xor
push
mov
incl
les
iret
xchg
shr
dec
adc
aad
dec
or
pushf
sub
pop
add
ljmp
pop
add
xor
xchg
sub
pop
and
cli
or
push
shll
loope
cmp
fs
cld
inc
outsl
popf
lock
jge
div
and
sbb
mov
xlat
jl
mov
xchg
enter
sub
out
js
sarb
pop
cmp
xchg
lret
inc
mov
push
mov
mov
sub
mov
or
lock
xchg
jns
lret
lock
sahf
aam
jmp
out
sbb
jp
sub
pop
int
add
cld
jae
test
scas
or
and
int
sub
out
lods
mov
mov
push
adc
lcall
push
loopne
inc
insl
cwtl
jge
cmpsb
mov
imul
filds
and
ss
xor
adc
lods
mov
cmpsb
xor
pop
xchg
sahf
subb
mov
lcall
sbb
push
mov
pushl
mov
add
shl
movsb
xor
loopne
push
cmp
cmp
ffreep
fisttps
push
iret
lret
mov
das
jae
ss
mov
imull
andb
rcrl
cmp
repz
cmpl
and
jge
aad
pop
es
lahf
insb
cmc
and
test
out
fsubl
dec
lock
push
and
mov
sbb
jbe
popf
jecxz
das
xchg
ja
sbb
dec
push
add
nop
popf
pop
or
jns
rol
xor
in
mov
mov
pop
daa
icebp
fidivrs
incl
fldl
jno
mov
in
sti
out
mov
mov
rol
popa
pop
outsb
ss
ret
inc
push
push
fnstsw
repz
sub
mov
pop
subl
mov
xchg
imul
xchg
jp
mov
mov
jle
cmpsb
cmp
js
push
lods
lcall
pop
popa
fld1
rorl
rclb
sbb
adc
pop
dec
pop
outsb
adcb
mov
lahf
ret
fcmovu
mov
and
popf
and
adcb
adc
loope
adc
fidivrs
mov
movsb
push
pop
sub
xor
mov
xchg
push
pop
jo
sti
cmp
jmp
jnp
dec
xchg
cs
jecxz
scas
rorl
das
bound
enter
and
cmp
fstl
adc
das
dec
and
xchg
rcrl
mov
lcall
or
xor
jns,pn
adc
sub
add
sbb
mov
aaa
mov
pop
popa
loop
push
or
gs
add
test
push
mov
mov
add
cmp
lods
pop
push
inc
jbe
or
dec
stos
mov
sbb
xchg
mov
pushf
mov
cmp
jle
cwtl
adc
aam
push
sub
push
ss
out
sbbb
mov
rcll
inc
push
mov
fstpl
in
mov
ja
cwtl
jl
fwait
adc
clc
fdivrl
cmc
add
subb
jmp
xor
ror
in
ret
jbe
rclb
add
fs
ret
adc
out
add
jb
test
push
push
jne
pop
roll
iret
rcrb
testb
out
pop
xchg
dec
shlb
xor
data16
cmp
out
and
out
and
mov
jne
inc
lea
les
ret
pop
lcall
pop
jl
sub
out
and
dec
sub
adc
inc
ljmp
xor
push
pop
mov
outsb
cltd
lret
mov
xor
jno
cmp
cld
int
into
je
aam
dec
dec
mov
in
add
ficomps
xor
jnp
pop
or
pop
mov
mov
jno
fsubs
push
cmp
mov
imul
repz
scas
inc
jbe
js
or
mov
cmp
aas
sub
in
mov
iret
add
pop
adc
push
push
xlat
enter
imul
les
mov
inc
and
loop
mov
lock
dec
shll
mov
fwait
add
xchg
adc
in
out
lret
cli
sub
cmc
decl
out
dec
cmp
adc
jmp
pop
imul
inc
push
sbb
xchg
jae
cmp
sub
out
jmp
pusha
andb
insb
pop
sub
inc
lods
sti
cwtl
xor
daa
mov
cmp
lock
push
mov
test
push
lret
dec
mov
dec
jae
push
es
lods
jo
fdivs
stos
sub
mov
cmp
mov
pop
mov
lret
dec
arpl
out
dec
cmp
pop
nop
jmp
lahf
into
enter
and
mov
mov
and
mov
or
shlb
inc
adc
dec
push
push
mov
repz
ja
pop
mov
mov
inc
xchg
pushf
aas
sbb
cmc
xchg
inc
add
call
fwait
ds
out
jbe
xchg
pusha
cmp
or
pop
js
andl
inc
stos
std
outsb
aam
lret
cmp
mov
mov
add
mov
imul
cwtl
test
out
inc
jae
sub
jne
negl
cmp
cs
scas
stc
xor
dec
arpl
addl
sbb
xlat
stos
rcrl
xor
lds
mov
adc
rorl
jb
lds
push
inc
push
cs
xor
mov
ds
sub
jp
fidivrl
insl
jecxz
ja
adc
or
cmc
in
xchg
jns
cmp
mov
sub
mov
cmp
das
and
add
int3
cmp
out
int
cmp
fildl
cmc
js
fiadds
notb
xchg
mov
dec
enter
mov
mov
pushf
pop
dec
pop
or
xchg
jp
inc
sbb
fmuls
scas
mov
lret
andb
adc
ret
cmp
jb
adcl
into
ret
loop
popa
sub
lock
fiadds
jae
add
add
cmpl
cwtl
inc
sahf
adc
xorb
cld
lods
jmp
or
add
fld
and
clc
add
addr16
dec
sbb
cmpsb
dec
xchg
mov
data16
cltd
icebp
jge
stos
dec
nop
xor
adc
int3
or
lret
sahf
dec
repz
cmpsl
popa
test
xchg
mov
and
mov
push
push
dec
aad
fbld
add
lods
xlat
pop
inc
les
sti
sub
call
imul
fwait
jl
and
insb
rolb
movsl
xor
pop
orb
jo
or
mov
pop
sbb
repnz
cmp
sbb
aam
push
add
add
call
pushf
mov
dec
scas
mov
addr16
aam
mov
inc
out
stos
mov
sbb
jns
imul
shlb
xchg
xor
jg
cmpsl
int3
xchg
cs
jl
mov
das
stc
add
sub
xchg
push
pop
xchg
sbb
gs
fildl
dec
jne
flds
or
std
mov
inc
orb
mov
push
xor
fwait
arpl
mov
push
push
mov
jle
jo
pop
int3
pop
in
dec
jecxz
sub
cmp
mov
out
aam
imul
shll
mov
mov
mov
ds
xchg
test
push
mov
mov
push
mov
enter
adc
jo
sbb
loope
test
pcmpeqw
mov
movsb
sub
dec
dec
test
sahf
mov
jae
cwtl
jmp
adc
mov
lcall
push
cmp
lea
out
dec
xor
leave
out
push
cld
pop
es
fisttpl
or
loope
add
mov
inc
cmp
mov
bound
insl
jb
aaa
push
push
outsl
sub
shr
jb
shlb
sbb
mov
push
sub
xchg
mov
out
dec
mov
pop
int3
jno
js
mov
jb
test
clc
or
cmp
out
sub
fnstenv
aaa
mov
insb
jl
push
pop
jbe
insb
mov
mov
jl
adc
sub
pop
xchg
rorl
lods
test
cmp
aad
jae
mov
insl
lret
std
mov
jge
bound
sbbl
sub
jl
sub
mov
cmpsl
je
je
xchg
loop
stos
test
das
jb
insb
jae
mov
pop
cmp
cltd
fwait
jbe
jns
int3
sub
jecxz
outsl
mov
mov
mov
xchg
sahf
mov
inc
add
cld
xchg
inc
xchg
nop
movsl
sbb
xchg
daa
push
adc
pop
mov
mov
sub
mov
cltd
dec
sbb
pop
call
cmpsb
repnz
push
out
subb
out
mov
mov
movsb
jne
dec
xor
out
pop
push
call
xchg
cs
sbb
mov
scas
loopne
jl
pop
mov
xchg
lret
xchg
mov
add
stc
js
mov
adc
xchg
insb
imul
mov
mov
jmp
cmp
sbb
mov
clc
enter
and
clc
leave
aaa
movsl
jbe
popl
loope
jae
pop
add
orl
test
mov
sbb
sbb
push
xchg
sub
ja
xorb
lahf
nop
insl
insb
xchg
aas
sti
in
add
cmp
lret
fildll
push
adc
in
jno
sahf
pop
mov
lds
ret
adc
push
fldt
pop
jecxz
inc
js
es
into
rcrl
stc
out
dec
adc
xchg
push
sbb
dec
add
loopne
sub
repnz
das
scas
pslld
faddl
push
inc
in
xor
mov
adc
aaa
cmp
and
rcrl
xchg
adc
lods
ja
mov
sub
push
leave
test
cmp
mov
xchg
jge
push
or
iret
jecxz
mov
imul
lock
lods
pop
ret
xor
mov
out
in
loope
pop
jnp
cmp
insl
mov
xchg
jg
das
push
cs
cmpsw
and
cltd
sbb
mov
xor
xchg
test
mov
sbb
inc
mov
lds
in
sub
mov
and
ficompl
stos
lods
and
xchg
pushf
and
clc
mov
mov
jl
push
sbb
push
and
fwait
test
dec
jno
imul
in
ficompl
imul
push
cmp
lea
and
outsl
test
cld
daa
scas
jbe
cmp
or
jle
imul
clc
and
data16
out
xorb
movsl
mov
lahf
movsb
inc
push
pushf
mov
out
adc
dec
scas
xor
jo
or
leave
insb
push
push
pop
icebp
in
popf
imul
pop
sub
int
fdivr
and
fsts
insl
cmp
mov
stos
scas
imul
lahf
gs
inc
es
subl
pop
sub
pop
jp
aad
adc
mov
aam
cmp
fstpt
lds
ss
push
add
in
mov
rolb
loop
data16
clc
pop
add
pushf
jb
outsb
sbb
lret
push
xchg
dec
mov
push
inc
and
cwtl
lea
sub
mov
jmp
push
out
daa
in
sahf
sub
pop
out
loope
popf
cmp
test
lea
inc
js
stos
rcl
lahf
rcrb
fisubl
daa
cmpsl
adc
in
xchg
into
lcall
pop
push
pop
pop
dec
pop
xchg
in
xchg
rorl
cmpsl
adc
jg
in
data16
addb
mov
mov
and
lcall
outsl
fsubl
lods
xor
fisttps
sub
loope
sub
cmpsb
mov
jge
xlat
jge
add
sub
into
dec
rcl
and
xchg
lret
or
sub
dec
inc
fdivs
test
mov
mov
push
or
jg
int
das
out
rclb
pop
testl
cmc
movsb
gs
insl
jg
add
xchg
push
push
add
pop
fidivrs
mov
loop
in
add
shrw
pushf
xor
iret
out
pop
aad
or
mov
mov
sbb
movsl
push
mov
insl
mov
mov
call
fidivs
push
pop
cmpsb
sbb
leave
fisttps
xchg
repnz
sub
push
inc
cmp
jbe
xor
and
lahf
addl
nop
xor
mov
test
adcb
jle
dec
mov
jae
xor
mov
mov
sub
pop
cwtl
adcb
gs
hlt
shll
push
fbld
mov
jmp
jmp
imul
loopne
push
mov
in
mov
fldcw
mov
pusha
ljmp
adc
fisubl
icebp
in
jno
repz
cmpsb
jmp
loopne
inc
sarb
xchg
mov
in
das
movsl
aas
mov
bound
imul
adc
ficoms
fsts
pop
mov
mov
or
stos
sub
pop
lock
sub
add
lret
aad
sub
outsl
ret
cmc
scas
bound
lret
in
les
icebp
cltd
loop
popf
xchg
and
test
jb
lock
scas
mov
lcall
or
sbbb
cmp
sbb
ror
repnz
imul
lock
enter
pop
mov
out
mov
int
dec
andb
ljmp
in
inc
cmpsb
inc
mov
mov
and
loop
bound
xchg
rcll
fsubl
imulb
pop
and
imul
inc
mov
dec
lea
rolb
and
inc
sub
or
xor
movsb
out
nop
aas
stos
sti
cmp
push
jge
int
leave
adc
mov
leave
loope
mov
mov
sub
mov
out
daa
adc
push
add
inc
sti
ret
push
sahf
cmpsl
cmp
sub
or
test
xor
pop
pop
or
or
lret
cmc
ja
mov
sahf
push
mov
imul
mov
sbb
sub
push
mov
loopne
mov
mov
rclb
sub
test
cmp
aas
arpl
jge,pn
sub
cmpb
mov
sbbl
inc
sahf
lret
stos
jp
mov
sub
mov
int
rolb
adc
xor
lret
sub
imull
out
cmp
out
add
or
in
lcall
sub
aad
pop
or
xchg
shl
mov
addb
enter
cmp
bnd
cmp
mov
sbb
cs
arpl
pop
leave
mov
lods
ror
dec
aas
rcrb
addl
push
scas
lahf
ss
mov
mov
sbb
cmpsl
push
inc
push
out
loope
test
xor
ljmp
dec
fldcw
test
fwait
dec
or
outsl
mov
in
ret
sbb
mov
dec
mov
mov
js
scas
popl
push
adc
xor
sti
xchg
cltd
xchg
cld
rcrb
out
iret
sbb
xchg
out
mov
pop
iret
cmp
in
ja
jae
sbbl
xchg
cli
mov
sbb
scas
cld
cmpsl
sub
xor
stc
or
out
mov
jp
cmp
in
nop
mov
mov
loopne
je
and
lods
sbb
inc
or
leave
cvttps2pi
nop
push
out
and
pop
add
cmp
cmp
push
and
inc
sarl
or
adc
mov
push
nop
ret
adc
out
cs
sub
jnp
cmp
pop
mov
mov
mov
call
repnz
cs
adc
push
add
test
mov
pop
jno
mov
inc
jae
and
lahf
sbb
pop
jge
mov
push
cvtsi2sdl
int3
loope
pop
rcll
mov
mov
imul
xlat
pop
and
fs
das
mov
mov
enter
pop
inc
mov
or
cmp
cld
adc
sbb
mov
jmp
aas
lods
adc
add
shl
addr16
mov
ret
lahf
mov
xchg
jge
stos
mov
jge
mov
push
sbb
mov
rcrb
or
pop
nopl
loopne
cmp
js
mov
push
adc
pop
sbb
jo
decb
fmuls
lret
inc
rcll
stos
fisubrs
dec
sbb
jp
mov
cld
mov
aas
in
paddq
call
add
call
sbb
in
idivl
mov
cmp
fisttpll
cwtl
add
jo
mov
or
xor
in
inc
cli
xor
add
lret
fucomi
fwait
dec
mov
pop
xor
jle
mov
daa
and
test
leave
rcl
mov
xor
js
stos
lds
adc
and
mov
es
je
cmp
xchg
mov
sbb
std
push
fs
adcb
test
mov
fs
push
outsb
cmp
adc
add
jne
popa
xchg
push
pusha
outsl
adc
jg
cmp
insl
aam
cmp
mov
pop
aas
repz
xchg
xchg
push
aas
mov
mov
imul
aas
inc
add
nop
leave
dec
xlat
pop
inc
repz
sub
arpl
imul
addl
cmp
pusha
inc
mov
mov
pushf
mov
cmpl
and
or
incb
ret
out
jecxz
loopne
movsl
cmc
mov
add
je
pop
jbe
sbb
out
pushf
adc
and
icebp
imull
jg
and
outsl
fsubs
jb
and
std
enter
cwtl
ret
stos
dec
loop
dec
fstp
jle
fisubrs
inc
jg
in
es
sbbb
inc
shl
icebp
mov
sbb
imul
lret
cmp
scas
pop
jl,pn
xchg
clc
es
mov
outsl
mov
es
out
pop
into
add
movsl
mov
jb
sub
imul
int3
shrb
and
cmp
xchg
and
adc
not
and
daa
sahf
cs
repnz
addb
in
or
jg
popf
xlat
inc
pushf
cld
fmul
sub
stos
bound
dec
xor
adc
loop
adc
inc
or
sti
mull
sbb
inc
add
jl
jae
and
add
jmp
test
popa
jmp
jmp
fistpl
push
sti
push
xor
mov
mov
ss
mov
cmp
ljmp
ds
cmp
pop
enter
mov
inc
lret
cmpps
and
fsincos
push
and
push
not
movsb
dec
cltd
push
mov
and
adc
repz
mov
cs
xchg
jmp
xlat
rorb
in
mov
push
mov
add
loopne
enter
sbb
sub
es
das
cmp
in
inc
cmp
sahf
add
addb
cmp
mov
dec
bound
insb
test
stos
dec
push
adc
pop
cmc
mov
imul
xchg
mov
cmc
loop
pop
inc
adc
jno
jge
cmc
mov
ds
xchg
rorl
push
xor
rep
push
mov
and
pop
pop
test
addb
bound
cmpsl
mov
out
dec
dec
movsb
mov
add
and
lahf
fnsave
lds
sbb
faddl
cmp
cltd
mov
add
xor
adc
cwtl
sti
roll
into
mov
cli
sub
js
adc
xchg
in
pop
push
xor
jp
in
mov
xor
hlt
sub
xchg
jo
insb
scas
subb
or
sub
push
roll
and
sbb
pop
mov
xor
pop
test
jle
cld
mov
mov
xor
mov
sbb
out
pop
ret
jae
pop
mov
pusha
ret
pop
in
or
mov
push
outsl
or
mov
adc
stos
iret
xlat
repz
cmp
mov
aam
fadds
test
mov
in
lahf
addr16
stos
mov
dec
jle
clc
fs
pushf
mov
cmp
gs
lahf
add
imul
cmpl
inc
pop
jle
sub
xor
cmp
adc
out
repnz
push
add
mov
sub
arpl
mov
mov
cwtl
es
lahf
pop
push
add
mov
sbb
jno
rcrl
add
mov
add
sahf
and
in
js
adcb
dec
jmp
into
or
adc
popf
xor
lods
mov
pop
ret
mov
mov
lea
and
xchg
cli
imul
out
test
loope
ljmp
ret
mov
add
sahf
xchg
inc
scas
mov
mov
mov
in
and
sar
push
mov
adc
fisubrl
mov
shrl
xchg
xchg
cmpsl
cmp
subl
fmull
push
out
mov
pop
inc
pop
sbb
fldcw
jne
in
daa
xchg
scas
aaa
or
ficompl
inc
inc
sub
cs
dec
imull
mov
xchg
cmp
icebp
xor
andb
inc
xchg
loope
jmp
adc
into
or
lahf
or
add
repz
xor
pusha
xchg
and
jl
push
xor
push
and
cmp
xchg
aad
bnd
fsub
aam
push
xor
test
stc
lods
cs
aas
mov
cmp
push
enter
pop
cmpsl
mov
sub
and
mov
stos
aad
shl
mov
loop
call
sub
outsl
pop
cmp
cmc
lret
movsb
loop
into
xchg
mov
mov
dec
call
fstpl
setp
pop
sub
imul
aam
testl
mov
and
test
je
pop
rcr
fistps
sbb
or
jl
aaa
sahf
movsl
shlb
xchg
cltd
mov
push
leave
adc
dec
jl
add
xor
jl
loope,pt
sti
add
cmp
jg
add
sbb
std
jnp
dec
fsubs
outsl
pop
outsb
insb
notl
test
add
mov
ret
sbbl
adc
and
ljmp
arpl
xorl
jae
clts
cmp
insb
jns
jg
pop
jle
test
sub
mulb
fdivr
arpl
or
pop
inc
imul
lds
hlt
dec
sbb
popf
jnp
rcrb
bndstx
push
addr16
jl
add
test
aas
lret
in
repnz
insb
in
dec
sbb
or
push
lret
mov
mov
mov
push
jbe
stos
into
sub
sub
xchg
xchg
sbb
jg
cmpl
sbb
and
out
repz
or
sub
add
fnstcw
movsl
iret
frstor
inc
or
pop
arpl
stos
dec
aaa
fxch
adcl
sbb
arpl
jp
outsl
bound
or
les
sbb
jno
mov
jnp
sti
repnz
movsb
cmp
das
xchg
call
or
pushf
dec
mov
add
sbbl
imul
les
push
xchg
imull
filds
ljmp
mov
sub
mov
fneni(8087
xchg
insl
popa
push
jl
xchg
pop
pop
xchg
in
add
lods
xchg
pop
mov
leave
xchg
aad
int
add
jle
dec
adc
push
std
int3
and
cmpsl
aaa
xor
inc
sbb
pop
insl
pop
xchg
fmul
jg
sbb
cs
in
pop
inc
out
inc
dec
cmpb
dec
sub
inc
loope
mov
mov
loope
cmp
xor
pushl
movsb
push
aaa
aas
and
testb
je
push
shrl
test
aaa
cmc
xchg
inc
notl
mov
cltd
gs
mov
cmpsb
xchg
and
and
or
insb
mov
popf
arpl
cmp
jbe
insl
ja
adc
xor
in
add
insb
inc
push
jg
mov
pop
mull
scas
decb
rcr
out
sahf
bound
dec
and
notb
add
sbbb
mov
cwtl
in
enter
jbe
xchg
shr
loope
bound
or
loopne
lea
or
pop
push
cld
mov
cmp
xor
lahf
stc
rorl
or
xchg
cld
or
pusha
jb
sub
dec
mov
clc
mov
inc
inc
xchg
ja
and
es
shlb
add
jbe
xchg
movsl
mov
mov
mov
and
addr16
fstl
push
es
pusha
mov
push
inc
hlt
xor
push
mov
pop
out
lret
pop
pop
aaa
rclb
fldcw
cwtl
outsl
mov
shrl
lret
shl
dec
insb
xchg
add
test
inc
imul
clc
gs
mov
jbe
xor
inc
je
jns
and
notb
xor
pop
mov
add
fisttpll
lods
mov
das
stos
dec
sub
push
fisubrs
add
xchg
fcomps
sbb
dec
ret
cmp
xchg
xchg
sbb
ja
add
daa
sbb
stc
and
xchg
ret
and
push
sub
cltd
mov
ljmp
jp
int3
sbb
iret
sub
inc
cmp
lret
cmp
sbb
aam
aam
mov
into
fwait
or
jns
std
je
in
xor
mov
lods
xchg
inc
or
std
jge
mov
into
rcr
ret
cmp
xchg
aas
inc
movsb
mov
mov
loopne
sbb
arpl
mov
push
rcrl
into
je
mov
loop
and
pop
stos
and
aad
and
enter
mov
loopne
inc
addr16
cmp
cmpl
lahf
and
dec
pop
outsb
jecxz
mov
push
pop
sahf
sub
movl
int3
jae
aam
lock
and
mov
ret
repz
cmpsb
and
sub
cwtl
in
dec
lods
adc
or
in
cmp
push
outsb
cmp
adc
and
mov
cs
cmpsb
push
sbb
push
jmp
xchg
int3
jge
pop
lods
inc
popf
mov
inc
mov
mov
gs
out
inc
cmp
mov
mov
xor
adc
inc
mov
xchg
pop
xor
cmp
test
xchg
push
mov
nop
imul
addl
lret
enter
outsb
in
mov
clc
mov
fwait
sub
mov
lret
xor
push
mov
jb
pusha
xor
test
xchg
xor
leave
xor
and
ficoms
pop
push
iret
adc
imul
int
stos
lcall
xor
cmp
in
es
mov
dec
sbb
mov
push
gs
bound
xchg
aam
or
inc
jnp
mov
cmpsl
cmpsb
dec
out
sbb
fisubrl
cs
push
pushf
scas
test
inc
clc
mov
rol
scas
lret
stc
dec
in
sarl
mov
lahf
sarb
movsl
cmp
push
and
add
in
clc
inc
popa
push
adc
or
aaa
add
icebp
sti
outsb
xchg
mov
or
or
sub
pop
mov
lea
xchg
in
insl
loop
xchg
jns
jg
dec
cs
cltd
repnz
outsl
into
loopne
divb
or
dec
stc
enter
bound
inc
outsb
and
in
jo
mov
fcomps
sbb
jge
mov
js
mov
pop
sahf
mov
or
ret
jle
ja
clc
int3
dec
loope
xor
jo
cwtl
call
push
mov
outsl
lret
subl
enter
xor
cmp
adc
or
pop
pop
jo
repz
out
mov
push
sti
aas
imul
ja
aam
add
shl
out
cmc
rcll
xchg
xor
lea
in
xchg
in
in
mov
jb
jl
sbb
aam
mov
rcr
dec
pop
xchg
mov
mov
in
inc
push
stos
cmpb
lret
and
rcrb
iret
mov
jl
push
and
adc
ror
push
cmpsl
adc
daa
push
pop
daa
fs
jb
cli
or
fisubl
mov
sbb
fstps
mov
test
cs
daa
push
jo
test
inc
addr16
leave
out
negl
push
pop
fisubs
testl
arpl
pop
nop
push
fimull
mov
push
lcall
xchg
inc
inc
scas
out
jnp
sub
jo
int
push
fcoms
ljmp
jle
mov
adc
cmp
out
push
dec
inc
sub
push
mov
or
add
fisttpll
and
cmp
jns
add
test
push
lock
mov
addr16
or
mov
xchg
aad
repz
loopne
pop
jmp
js
cmp
jb
fldt
fst
das
cmpsb
adc
and
and
fistpl
mov
lcall
movsb
xchg
addr16
pop
add
mov
cwtl
test
push
clc
mov
mov
shrb
movsl
lret
mov
xor
xchg
fisubrl
mov
sarb
xchg
xchg
cmp
ret
sbb
fprem
mov
enter
orl
aam
mov
sub
push
fsubp
xlat
pop
mov
repz
ljmp
and
jno
cmp
insb
loop
mov
in
outsb
mov
inc
fidivrl
sbb
lods
xor
xchg
or
cmpsb
jmp
add
push
leave
jle
scas
enter
sahf
push
mulb
add
rorb
sbb
jns
int3
xlat
adc
push
xchg
cs
pushf
lea
sub
inc
xchg
not
ja
out
pushl
daa
jo
test
iret
pop
adc
clc
cmp
aas
popf
shlb
ror
jp
mov
or
je
push
lods
inc
add
std
jne
mov
out
inc
insl
enter
push
js
cmp
stos
pop
xchg
addr16
mov
or
rcr
dec
dec
in
in
mov
sub
mov
fnstenv
sahf
cli
mov
xchg
push
out
xchg
aam
rolb
mov
cmc
pmulhw
movsl
lea
out
mov
aaa
jmp
jbe
repnz
pop
mov
xchg
aad
outsb
push
jbe
inc
sbb
xor
add
mov
sub
repnz
mov
dec
dec
inc
mov
inc
pop
lea
out
mov
sbb
push
mov
and
cmp
adc
jae
push
xchg
loopne
ret
out
pop
loop
out
in
xchg
test
fisttps
add
push
fwait
test
or
and
jg
jb
icebp
and
shl
mov
sbb
mov
xchg
push
push
lret
mov
dec
in
inc
sbb
jmp
popa
xchg
lret
js
and
and
mov
sbb
call
out
aaa
sbb
aad
mov
sub
mov
sub
mov
in
pop
jecxz
add
test
ss
add
jg
sahf
imul
jae
int
push
xor
jne
sbb
jns
ss
xor
adc
cmp
or
movsl
packssdw
adc
xor
cli
mov
aas
jo
imul
cs
into
aas
out
mov
shrl
or
jno
lahf
popa
sub
add
mov
or
dec
aam
mov
adc
and
popa
outsl
cmp
ljmp
xchg
pop
enter
adc
inc
sbb
ficoml
popa
fsubrl
fdivrl
insl
das
rcrl
test
mov
sbb
add
popf
mov
mov
int
iret
popaw
clc
push
sbb
lcall
dec
add
repnz
jnp
sub
data16
xchg
or
jo
sbb
dec
push
mov
cmp
popf
idiv
jle
idivl
test
cmpsb
and
cmpsl
cmp
and
jo
ffree
popa
and
xlat
filds
sbb
adc
sbb
daa
mov
shll
pop
fwait
scas
mov
data16
inc
ret
or
lds
aas
cmp
sti
mov
bnd
sbb
subb
cmp
or
xchg
je
add
cmpsb
push
subl
sub
jle
xor
cmp
cmpsb
xchg
cltd
popf
aad
xchg
and
arpl
pop
inc
push
outsl
or
mov
icebp
lahf
loop
mov
int3
jb
cmc
sub
push
or
sbb
and
ljmp
pop
jecxz
ss
push
in
data16
sbb
add
xor
bound
stos
jle
paddusb
inc
dec
stc
ret
add
cmpsl
xor
push
pop
jae
fwait
arpl
sti
inc
aam
lcall
push
or
xchg
pusha
push
and
inc
push
out
addr16
idiv
cmp
mov
push
inc
cmp
xor
push
pushf
loopne
divl
es
add
push
xchg
xchg
sbb
pop
mov
into
insb
jmp
sbb
fld
stc
test
push
inc
mov
lahf
lods
inc
cs
xor
mov
sbb
test
movsl
pop
lret
jne
inc
cmc
mov
movsb
lods
je
mov
push
fnstenv
sbb
mov
adc
cmpsb
xor
dec
inc
add
push
sar
adc
scas
pop
cwtl
lret
sbb
stos
mov
leave
push
notl
lret
jno
lret
int
sbb
rcl
mov
popf
orl
scas
push
jp
pushf
loop
repnz
cmp
inc
dec
push
push
icebp
rorl
xorl
test
lret
xchg
and
dec
dec
movl
repnz
aam
mov
mov
jo
xor
fcomip
cmp
add
sbb
hlt
mov
cmp
sbbl
into
mov
icebp
mov
hlt
xlat
cmp
cld
out
xchg
push
adc
sbbb
std
xor
aad
andl
pop
dec
mov
lret
insl
adc
inc
bound
jnp
mov
dec
das
and
lods
cmpsl
cmc
shr
fcomi
bound
push
or
jns
and
push
test
in
ljmp
stc
ret
adc
fs
or
xor
ret
aam
cld
les
xchg
addr16
popf
sub
pop
lods
pop
mov
lods
push
mov
out
push
jmp
sbb
data16
mov
push
cwtl
xchg
movsb
jne
sbb
lret
test
test
ret
sbb
ja
dec
jl
sub
repz
std
push
iret
or
sub
add
mov
cmpsl
mov
imul
sbb
aad
cwtl
lcall
addl
xor
jle
test
rol
pop
cmp
fdivs
cmpsb
jmp
aam
out
add
rorl
sub
pushf
cmpsb
sbb
dec
aam
fisubrs
and
repnz
roll
clc
pop
movsb
pusha
sbb
jo
or
mov
into
jmp
ljmp
test
test
jno
or
push
adc
xchg
xchg
or
mov
inc
sti
jp
jnp
je
fsubrl
sub
loop
loope
add
cmp
inc
ljmp
pop
and
dec
xchg
fdivs
aas
add
daa
leave
ficompl
adc
pop
sarl
sbb
ljmp
cs
insl
cmp
lds
outsl
orb
rclb
fisubrs
aam
jae
add
clc
jp
add
mov
movsb
into
mov
incl
outsb
and
jbe
ljmp
es
and
add
imul
inc
popa
inc
mov
clc
int3
leave
push
push
test
repnz
mov
add
test
loopne
mov
adc
add
outsl
sub
lret
leave
es
push
inc
and
hlt
mov
ret
fldt
xlat
stc
mov
mov
sub
sbbl
xchg
scas
icebp
cli
jns
jp
popf
mov
lret
movsl
ljmp
incl
pop
jl
add
jmp
dec
fcomps
int3
lea
cmp
test
das
stos
push
xchg
push
outsb
add
inc
ret
jno
dec
mov
dec
imul
loop
fstpt
push
scas
sbb
fmuls
cmp
loop
rcll
cmp
jmp
dec
push
jae
xchg
adc
cmp
add
mov
push
pop
roll
call
xor
cmc
inc
stc
cmpsb
in
adc
js
scas
out
add
lret
xchg
rorl
inc
pop
rclb
xchg
push
cmp
les
aas
je
adcl
and
lret
jbe
jmp
mov
xlat
inc
aaa
enter
sub
push
out
enter
in
out
dec
pop
add
dec
out
mov
or
fistpl
cli
pushl
pop
and
ljmp
xor
jmp
bound
in
xchg
fldcw
dec
sbb
fldpi
inc
loope
xchg
sub
inc
data16
jnp
insl
sub
sub
flds
cmp
pop
sti
mov
jb
mov
lahf
repz
jle
mov
mov
mov
frstor
cld
mov
dec
hlt
cmp
bound
adc
ljmp
or
hlt
pop
iret
adc
jns
icebp
jb
adc
ljmp
sub
add
pop
test
sbb
pop
jnp
mov
fimuls
push
stc
fmull
movsl
push
sub
andl
testb
popa
jne
testb
sahf
and
dec
int3
out
fcmovnu
sub
push
cmp
std
sbb
fcoml
std
ja
shl
inc
pusha
shl
push
pop
rcrl
push
outsl
mov
popa
fs
test
sbb
add
mov
cmp
ret
adc
or
mov
movsb
arpl
and
fdivl
lods
jg
inc
shll
mov
xchg
add
xchg
mov
inc
iret
mov
jle
js
outsl
and
test
sti
lods
or
stos
call
push
addr16
jp
mov
arpl
cmc
cli
jne
sub
fisubrl
jle
popa
push
in
xchg
xchg
dec
std
cmp
icebp
lret
xchg
xchg
icebp
xchg
sbb
pop
movsb
into
xor
mov
push
fnstcw
fisubl
leave
mov
outsb
push
ret
int3
pop
xchg
cmc
mov
cmp
repnz
scas
or
or
and
or
stos
in
or
pop
stos
mov
or
outsl
add
jmp
and
cmp
push
mov
mov
scas
pop
rcll
cs
cmp
rolb
lock
nop
ja
iret
mov
loopne
sbb
ja
inc
test
enter
in
push
popl
ljmp
repnz
das
mov
dec
mov
mov
ret
imul
mov
pushf
icebp
push
outsb
rcrl
fisttps
sub
js
test
xor
std
adc
enter
sbb
call
popa
lods
popf
sbb
stos
pop
adc
mov
out
push
in
dec
mov
insb
mov
out
outsl
xchg
jg
bound
and
inc
push
xor
xchg
lret
and
jae
xchg
test
cmp
pop
lds
or
pop
imul
dec
or
xorl
movsl
lahf
add
xorb
sbb
shlb
mov
cmp
cmp
and
cwtl
in
push
outsb
ja
jno
test
out
ret
jecxz
xchg
add
sbb
mov
mov
mov
inc
cmp
add
cmp
sub
xor
in
mov
cmpsl
mov
in
xor
mov
sti
into
push
or
adc
roll
js
pop
fcompl
fildl
rolb
dec
jmp
leave
int3
pop
pop
or
jb
or
arpl
sub
xchg
js
xor
aam
jl
jp
mov
sbb
mov
xchg
fwait
lds
push
inc
jns
fisttpll
lret
pop
adc
aaa
into
sbb
jle
lret
leave
insb
push
inc
mov
dec
mov
inc
inc
push
pop
loope
xchg
dec
xchg
lahf
ds
test
test
lcall
ja
cld
or
aad
out
sbb
adc
sbb
sti
pop
inc
rol
mov
shrb
sub
cwtl
mov
adc
mov
fcmovbe
shrl
shrl
sbb
push
insb
leave
in
dec
push
push
push
pop
cmp
mov
out
xchg
jb
je
inc
and
pop
popf
outsl
add
aaa
aam
pop
scas
gs
xchg
cmp
es
sahf
enter
adc
or
stos
or
in
adc
mov
aam
push
jg
inc
pop
mov
push
mov
je
jae
xchg
push
int
mov
push
aaa
ret
sti
idivl
pop
cmp
movsl
lret
jns
cmp
stos
mov
dec
mov
mov
cmpsl
jp
push
pop
andb
sbb
ljmp
and
jp
stos
mov
push
test
shll
mov
mov
das
lret
icebp
push
mov
int3
mov
pushf
stc
jg
inc
push
aam
cmp
cld
lea
popf
xchg
test
xchg
pop
sub
adc
adc
in
mov
dec
lahf
or
inc
out
and
mov
push
jecxz
jge
or
inc
inc
sbb
inc
jae
jp,pt
or
bound
aas
fimuls
mov
sub
das
call
xor
out
and
insb
xor
push
call
dec
mov
dec
jo
aam
cli
adc
jb
aas
push
mov
les
dec
dec
pop
popf
stc
mov
sbb
xchg
push
adc
icebp
xchg
dec
stos
xchg
dec
arpl
decl
pop
sbb
add
inc
in
lods
dec
jb
jmpw
shlb
andl
push
inc
or
lahf
mov
push
arpl
out
pushf
mov
mov
cwtl
mov
or
pusha
scas
addb
cmp
inc
ret
or
push
mov
rcll
dec
jb
and
aas
sub
or
dec
xchg
data16
jns
mov
pop
movsl
clc
test
pop
xor
cli
mov
movsb
cltd
add
repz
pop
sub
sub
mov
cmpb
ds
dec
test
or
jle
xchg
pop
mov
jle
mov
cmp
dec
cmp
call
cmp
sbb
xor
stos
daa
xchg
sub
cmpsb
or
xor
ljmp
sbb
mov
lods
lcall
adc
loope
mov
pushf
scas
sub
gs
jo
pop
fnstenv
xchg
sbb
lret
push
dec
decl
mov
pop
out
xchg
mov
and
std
loope
mov
lret
sbb
test
or
lea
es
in
test
out
in
lds
inc
enter
sbb
mov
incl
lods
out
cmpsl
inc
push
cld
fs
sbb
jle
sbb
lock
pop
push
in
daa
fwait
aaa
aas
movsl
pop
int3
dec
pushf
xchg
jae
xor
sbb
and
cwtl
jbe
pop
lea
dec
xchg
enter
loopne
aaa
add
sub
mov
jmp
in
shl
xchg
int
imul
idiv
enter
ljmp
les
lcall
cmpsl
sub
gs
mov
aas
push
ss
mov
and
sub
pop
sub
loop
repz
stc
adc
aam
repz
or
push
in
mov
sbb
xchg
sub
add
fmull
mov
push
add
push
pop
adcb
sub
pop
inc
mov
sub
mov
or
pushf
pop
cmp
notb
mov
xchg
jbe
inc
popf
sub
out
sbb
dec
sbb
das
mov
sbb
xchg
adc
mov
lods
loopne
scas
xor
test
sbb
ja
fxch
pop
lcall
cmp
fstps
jecxz
sbb
aaa
cmp
jg
int
fwait
mov
cmp
bound
mov
jp
outsl
and
stos
jmp
xchg
or
push
mov
rorb
dec
ljmp
add
rclb
xchg
mov
push
mov
fs
out
add
pop
repnz
arpl
pop
push
push
aas
in
pop
imul
mov
lock
cmc
mov
negb
inc
pop
inc
je
jl
lret
loopne
fwait
ret
mov
sbb
cmp
out
int3
jl
and
sarb
ret
inc
inc
or
fisubs
lock
sub
pop
mov
or
push
push
jb
push
enter
sub
sub
lret
pop
neg
into
nop
sti
push
rcrb
mov
mov
adc
pop
lret
aaa
push
loopne
sbb
push
mov
mov
in
mov
pop
testl
stos
pop
pop
adc
lret
fs
sub
adc
jb
ljmp
pop
xchg
lcall
insb
dec
pop
adc
sub
scas
xor
in
or
or
sbb
in
sbb
mov
cmp
stos
mov
movsb
lcall
sub
xor
add
xor
int
push
mov
movhps
add
mov
pop
dec
cmp
mov
jge
or
dec
jp
sbb
mov
mov
add
sbb
and
cmpsb
lret
imull
push
jne
enter
mov
jmpw
icebp
aas
repnz
xor
and
jp
js
add
pop
xchg
hlt
imul
and
cwtl
pop
cmp
inc
loop
inc
sub
xor
shll
pop
mov
inc
jecxz
lods
push
div
mov
and
ds
mov
mov
xor
or
xchg
in
fs
fsubs
mov
add
jae
adc
popa
xor
adc
adc
mov
pop
in
add
std
cmp
add
add
popf
jmp
sahf
stos
pop
mov
add
jne
pop
push
mov
lcall
imul
test
scas
dec
xor
lods
push
pop
aaa
xor
jle
push
inc
int
lret
std
cmpsb
jg
shrl
adc
dec
testb
inc
aas
in
stc
icebp
mov
fidivrs
inc
xchg
mov
mov
repz
mov
fisubrl
outsb
jl
fisubl
insb
lds
dec
push
cmp
adcl
jecxz
negl
cmpsb
rclb
nop
adcb
xor
pop
mov
xor
test
inc
jb
aaa
and
cmpsl
xchg
das
mov
jle
jb
cmpsl
shll
test
stos
in
push
jne
test
jnp
stc
cmp
repnz
push
loopne
xchg
ret
add
sbb
mov
fs
ret
dec
imul
sbb
pushf
movsl
sbb
mov
mov
fdivs
neg
or
rclb
xchg
jecxz
cmp
pop
sub
stos
outsl
gs
jne
fwait
xchg
sbb
and
jle
aas
inc
jmp
dec
fsubrs
adc
rolb
adc
leave
xchg
pop
xlat
push
lret
out
leave
push
loopne
in
imul
sbb
xor
sub
popf
or
inc
mov
mov
fcom
xchg
loop
js
cmpsl
lret
jae
arpl
mov
subb
add
cs
popf
mov
lods
imul
lea
or
scas
outsl
lods
leave
jle
xchg
jecxz
dec
mov
jmp
cli
aad
xchg
fwait
xor
stos
xor
enter
in
in
arpl
push
call
xchg
sub
mov
push
mov
push
stos
loope
sbb
fmuls
andb
daa
mov
fwait
clc
sbb
jbe
or
data16
dec
sti
cwtl
cli
shl
insb
jno
divb
mov
daa
cmp
adc
movl
jmp
dec
sub
jbe
push
push
push
pop
sub
xor
lods
outsl
push
cmp
sti
sub
cwtl
cmp
xchg
fidivrl
or
or
or
int
pusha
movsl
xorb
shlb
add
pop
pop
fwait
imul
test
push
arpl
mov
inc
js
loope
add
add
fmull
fsubp
mov
int
jo
xlat
fidivl
popl
mov
xor
mov
loope
addr16
js
xor
dec
dec
mov
lods
stc
mov
inc
push
xchg
or
xchg
sbb
xchg
popa
aad
jl
in
sub
in
out
movsl
aad
push
mov
in
sbb
mov
jno
cmp
test
inc
mov
jns
cmpsl
or
mov
iret
push
clc
ret
rcrl
sbb
into
mov
pop
sbb
nop
mov
outsl
and
cmpsl
call
and
lods
sub
ljmp
jg
rcrb
adc
jp
cmp
adc
mov
divl
mov
pusha
jnp
pop
lret
mov
sub
or
jmp
popa
scas
xor
pop
dec
test
repz
and
cltd
sbbb
mov
mov
push
mov
pop
in
inc
popa
push
and
adc
or
loopne
imul
push
call
push
rorl
or
xrelease
out
jp
add
aam
xlat
cmp
in
out
cmp
unpcklps
cltd
scas
fisttps
sbb
jg
pop
push
pop
jl
add
fisttpl
and
arpl
data16
or
jbe
dec
hlt
pop
pop
ret
xchg
mov
into
insl
push
adc
add
cmp
fsubrp
pop
aaa
in
mov
dec
xchg
mov
push
scas
inc
dec
cmc
mov
mov
sbb
push
js
inc
mov
int3
loop
mov
pop
or
push
cmp
test
mov
xor
adc
imul
repz
cmpsb
push
sti
xchg
loopne
mov
jecxz
popf
xchg
or
and
mov
cmp
nop
push
cld
rcll
inc
cmp
dec
inc
push
adc
dec
out
mov
roll
sbb
retw
ret
sti
mov
add
mov
test
imul
fisttpll
jmp
adc
dec
out
arpl
iret
xchg
jp
xchg
scas
pusha
movsb
mov
xchg
or
scas
faddl
add
repz
ljmp
pavgb
mov
pop
test
fcomps
dec
hlt
out
adc
ljmp
outsl
xor
xchg
and
mov
icebp
enter
fs
or
fsubrl
in
call
lods
jl
and
lea
pop
fidivs
xchg
in
inc
fists
and
mov
cmp
clc
push
loop
or
mov
add
pusha
orl
divl
add
adc
push
dec
dec
movl
mov
neg
lcall
xor
xchg
or
lock
popa
jl
shlb
in
cmp
test
jns
subl
mov
xchg
mov
sbb
fdivrp
push
pop
fstl
cmpsb
in
pop
inc
mov
scas
in
loope
pop
adc
lcall
mov
out
mov
jge
pushf
or
in
fistpll
addl
mov
xor
dec
pop
pop
xchg
jp
fcompl
stc
popa
mov
mov
testb
xchg
jnp
imul
hlt
sub
fwait
imull
pop
push
lcall
cld
ds
xchg
hlt
shll
inc
fcomps
add
shlb
or
jl
cmp
push
xor
out
jp
add
mov
cld
adc
rcr
mov
roll
popa
dec
adc
jo
adc
inc
or
sahf
cmp
shlb
jp
test
movsb
inc
shl
jl
add
das
mov
in
mov
aaa
pop
inc
out
mov
insl
xchg
xlat
jae
out
cmpsl
sbb
dec
cmp
push
in
pop
pop
loope
das
fistpll
rclb
pop
ds
jno
mov
pop
sbb
push
mov
xchg
scas
xchg
add
scas
cmpsl
mov
out
lea
sbb
mov
fcoml
shll
jb
into
stos
sub
mov
out
arpl
sbb
lret
fsubp
push
xchg
add
mov
jo
xchg
inc
pop
or
jge
idivb
adc
jmp
lods
pusha
test
jne
stos
sbb
jo
not
add
pop
mov
lahf
jae
inc
daa
add
sbb
add
iret
xor
add
dec
jae
jmp
iret
sub
push
mov
inc
outsl
rolb
scas
testl
scas
subl
aam
bound
loope
ret
fs
jle
lcall
push
mov
inc
mov
in
mov
scas
jno
out
mov
mov
xchg
push
or
sti
jno
jg,pn
sbb
test
push
js
sub
mov
ficomps
bnd
cli
ficoml
iret
repnz
bound
add
mov
jb
lcall
sbb
and
fwait
lock
mov
xor
xchg
sub
fstpl
mov
pop
add
in
ja
inc
push
mov
sub
and
xlat
lods
out
clc
in
and
leave
in
xchg
enter
adc
out
adc
sub
mov
fs
jae
stos
fnsave
stc
sbb
addl
not
jbe
mov
push
ljmp
repnz
loopne
and
test
repz
sub
add
mov
xor
ret
dec
push
push
shrl
mov
xchg
mov
mov
sbb
lret
fnstcw
dec
std
xchg
hlt
sbb
mov
jbe
ret
jnp
mov
inc
and
jge
push
es
ljmp
fsubl
mov
pop
arpl
arpl
sahf
add
clc
leave
push
leave
das
mov
mov
push
fidivrs
call
jmp
mov
mov
xor
pop
mov
insl
cmpsb
sbb
mov
jge
frstor
sub
scas
gs
xchg
fidivrs
xrelease
xchg
push
dec
es
push
lods
loope,pn
pop
inc
jb
pop
jne
add
sbb
sbb
fwait
call
roll
mov
mov
sbb
add
jge
push
ret
xchg
dec
cmp
test
inc
cmp
mov
into
sub
cld
inc
out
pop
jnp
mov
mov
jb
push
in
dec
nop
jl
push
add
sti
cs
mov
cwtl
mov
outsl
sbb
or
adcb
jl
xor
jae
cld
int3
out
icebp
pop
xchg
fimuls
sbb
in
sbb
add
adc
inc
rorl
notl
in
ret
stos
cmc
inc
addb
push
outsb
pushf
push
push
mov
rcr
cmp
or
inc
dec
subl
dec
fadds
push
mov
xchg
fimull
fdivrl
cmp
adc
lcall
mov
xchg
orl
mov
fisttpll
aas
in
sub
in
repz
call
sbb
jle
and
jne,pt
popa
pop
add
or
test
mov
lods
movsl
getsec
sub
push
jo
outsb
xchg
cmp
mov
cli
or
and
in
lods
inc
imul
js
stos
in
cmp
sub
jbe
ficoml
shrl
jo
mov
push
inc
aas
arpl
jo
xchg
ljmp
mov
jo
test
xchg
repnz
test
scas
cwtl
xor
mov
add
xchg
lret
and
and
scas
loopne
cmp
pushf
enter
and
or
aam
inc
push
mov
aad
lds
rcrb
pusha
inc
out
jle
cmp
ljmp
movsl
sub
cwtl
and
mov
dec
inc
and
out
push
add
jmp
in
mov
jp
mov
fcmovb
inc
aad
xchg
fwait
ret
sbb
cmpb
into
add
sbb
pop
pop
cmp
cmpsl
xor
mov
repz
pop
or
pop
pop
jns
mov
enter
or
lret
sbb
push
mov
ljmp
inc
and
push
push
push
fistps
mov
dec
jne
ficoms
scas
cmp
in
and
jns
dec
sbb
repz
pop
mov
sar
adc
aaa
pop
int3
push
fdivl
jmp
aaa
pop
or
test
adc
jbe
in
lahf
adc
push
adc
into
pop
aam
cli
push
inc
add
push
sbb
push
pop
icebp
pop
and
add
xor
hlt
testb
lahf
mov
adc
adc
aas
jmp
mov
leave
mov
inc
mov
in
fnstcw
adc
lcall
jp
stc
andl
lret
in
icebp
fidivl
cli
outsl
out
or
sbb
push
leave
push
adc
and
and
mov
jne
xchg
cmp
cmpsl
fcompl
in
cmp
push
sbb
mov
repnz
loop
xchg
loopne
shrb
mov
or
dec
mov
mov
pop
fiaddl
xchg
inc
mov
das
cmpsl
sub
push
or
out
jle
leave
mov
xchg
dec
test
sbb
lcall
int
aam
je
pop
jle
ja
and
add
jae
add
std
int3
stc
loopne
ljmp
inc
push
push
dec
xor
nop
sub
inc
mov
cltd
lea
fcmovnb
inc
bound
aaa
mov
push
cmp
dec
mov
cmp
outsl
sarb
xchg
cli
xor
push
mov
in
or
push
xchg
cli
xchg
sbb
pop
jb
negb
adc
sbb
push
fs
lods
test
inc
push
lret
pop
cmp
inc
dec
push
xchg
jl
mov
shrb
mov
nop
pop
jge
iret
xor
aaa
test
jge
or
sar
sbb
pop
jb
sbb
cmpsl
cmp
xchg
out
lret
les
adc
add
movsb
imul
pop
mov
mov
and
push
in
add
jnp
jo
jno
fs
and
movsl
jmp
aas
cmp
pop
ret
loopne
cmp
scas
aaa
cmpsb
sub
testb
aaa
mov
or
mov
pop
adc
mov
sbb
sub
ret
insb
mov
out
fcmovne
fnsave
icebp
iret
dec
stos
cmc
fwait
movsl
fwait
sbb
les
jl
or
sbb
cmp
adc
xchg
jbe
or
push
mov
push
pop
loopne
sahf
and
cmp
pusha
push
jo
fnstcw
es
cmp
or
push
xchg
lahf
pop
jmp
push
xor
push
out
sti
sti
dec
sti
fadds
and
mov
loope
fistps
out
or
xchg
jns
pop
jmp
pop
add
cmpsl
clc
cmp
mov
jo
dec
push
pop
dec
frstor
jbe
das
mov
inc
mov
xchg
jecxz
adc
mov
xchg
rcrl
popa
in
xchg
mov
mov
adc
lret
sbb
adc
cltd
mov
aas
fsts
call
sub
scas
sbb
pop
rcrb
repnz
sbb
jne
adcb
js
mov
lahf
bsf
dec
cwtl
imul
cwtl
in
mov
adc
jg
xchg
jmp
lcall
mov
ja
add
das
cmpsl
lret
stos
push
mov
sbb
hlt
std
add
in
lds
lods
cmpsl
pop
in
pop
add
les
xor
fs
arpl
sahf
int3
push
mov
push
fimull
aad
mov
jg
xchg
cmp
dec
ret
adc
dec
cmp
ret
jl
push
pushf
fimuls
fists
pop
and
jecxz
ljmp
out
add
push
es
mov
mov
dec
mov
movsb
sub
add
shl
mov
push
mov
sbb
fistpl
push
jp
mov
popa
pop
jnp
mov
scas
rol
sbb
imul
sbb
xchg
mov
es
out
std
clc
fs
dec
mov
call
cltd
aad
mov
mov
dec
inc
cmc
shll
in
fs
xchg
sbb
inc
xchg
js
pushl
fstl
mov
dec
enter
rcr
mov
jle
pop
mov
push
repnz
lcall
imul
addl
nop
cmpsb
sub
call
sbb
pop
and
pusha
gs
jmp
aam
int3
dec
pop
cmp
inc
lods
dec
xor
imul
push
push
and
test
cs
jg
jle
cwtl
and
xchg
incl
xor
push
mov
and
mov
mov
xor
aaa
into
dec
fisubl
and
sub
out
xor
bound
outsl
push
push
stos
mov
push
lea
aad
push
pop
data16
cwtl
addr16
das
daa
mov
mov
sub
push
or
in
push
outsb
rcr
mov
mov
xchg
push
divb
inc
mov
insl
mov
in
aad
push
xchg
xchg
jns
pop
adc
pop
push
xstore-rng
cmpsl
add
bound
dec
pop
mov
sbb
into
call
jmp
fsubp
pop
outsl
cmp
and
int
push
inc
pop
xchg
nop
mov
pop
mov
dec
insb
fnstsw
inc
imul
mov
mov
in
int3
mov
fcomi
sub
push
fisubrs
cltd
test
mul
loope
mov
pop
xchg
cmpsl
mov
mov
cli
repz
js
js
mov
mov
mov
mov
jnp
pop
add
test
mov
mov
xor
jb
test
lea
push
dec
jnp
out
jno
jns
call
scas
test
pop
or
or
lret
fs
sub
sbb
xor
xchg
pushf
in
sahf
mov
dec
popfw
ljmp
or
jmp
out
imul
cwtl
loopne
add
out
cltd
lret
and
inc
push
inc
cmpl
adc
in
insb
mov
cmc
xchg
test
add
and
mov
or
je
sti
push
inc
push
fdivs
int
je
push
sbb
aam
cld
stc
pop
pop
pop
adc
in
jnp
pop
mov
push
ljmp
fstps
cmp
add
rolb
ret
mov
adc
pop
paddusb
xor
mov
rcr
fwait
mov
in
popa
mov
mov
and
dec
out
pop
push
adc
insb
sub
adc
xor
pop
cld
sub
cmpl
add
subl
pop
and
pop
push
xchg
into
out
xor
or
push
xchg
mov
dec
shlb
adc
loope
clc
xchg
ss
test
jle
iret
cmp
divb
jo
inc
inc
pop
cs
in
dec
jle
sbb
addl
cmp
sbb
ret
push
xchg
sub
jp
jge
xchg
mov
add
xchg
aam
adc
cmp
push
xor
add
lock
and
push
dec
jns
std
jg
pop
rolb
loop
push
mov
into
push
mov
test
icebp
inc
pop
ljmp
xor
outsb
cli
das
and
mov
dec
pop
and
add
and
lea
inc
lcall
negl
push
movsl
push
adc
jbe
popa
imulb
xchg
loop
jns
mov
inc
scas
pop
ljmp
das
lock
popa
push
sub
mov
sbb
rorl
mov
jp
mov
push
mov
sbb
mov
cmpsl
and
mov
mov
out
fiaddl
dec
jns
or
leave
fisttpl
xchg
mov
fdivl
mov
or
cmp
cwtl
push
push
movsl
jbe
loop
xor
fwait
jle
pop
add
mov
or
mov
lcall
je,pn
or
out
flds
and
sub
imul
shll
pop
jp
dec
aam
mov
sub
or
ret
mov
pop
dec
outsb
push
mov
xchg
adc
push
pop
adc
sbb
mov
mov
xor
bound
lods
enter
lods
subl
or
shll
test
sbb
test
mov
hlt
dec
sarb
cli
ret
jl
add
mov
aam
fnsave
adc
or
jl
jecxz
pop
push
repnz
mov
pop
pop
sub
jp
and
aas
cmp
stos
into
outsl
dec
sub
jo
sbb
xchg
dec
test
ds
or
sub
push
push
and
push
cmp
fsts
fxam
mov
leave
xchg
in
push
xchg
inc
push
dec
test
imul
pop
pushf
enter
movsb
inc
mov
add
jns
fisubrs
imul
test
lret
jmp
fmuls
fldt
call
dec
cld
cmpsb
mov
fincstp
mov
cld
pop
inc
iret
and
divb
je
jbe
stos
cmpsl
repz
insb
push
arpl
stc
or
data16
aaa
jle
arpl
xchg
push
pop
jge
cmpsb
xchg
sarl
pop
in
int3
cmp
fcmove
ja
divl
ja
add
gs
xchg
popf
dec
adc
xchg
sbb
cmpsl
aad
out
inc
and
data16
cwtl
pop
xor
in
adc
mov
inc
adc
push
dec
mov
lret
add
test
mov
xor
into
fadds
call
pusha
sbb
pop
loop
cmp
sub
sbb
std
sub
repz
adc
dec
adc
in
push
subl
and
or
dec
xchg
and
mov
lret
imul
mov
dec
in
mov
repnz
and
add
divb
adc
pop
mov
inc
jno
inc
jge
sub
push
jae
mov
dec
daa
push
je
dec
dec
pop
iret
js
out
cmp
xchg
or
cmp
loopne
and
orb
rolb
nop
icebp
movsb
push
mov
imul
or
jle
adcl
aam
pop
fadd
scas
dec
cmp
decl
mov
nop
sub
pop
int3
pushf
pop
push
xchg
xchg
add
cli
outsb
and
xlat
fisttpll
test
push
std
loopne
imul
fsubl
cmp
divl
adc
ret
or
xchg
fstps
shll
xor
inc
pop
fmul
movsl
dec
inc
dec
inc
stc
movsb
cmpsl
sbb
mov
fucomp
out
add
into
das
xchg
xor
ss
push
adc
leave
sbbl
aas
hlt
loope
int3
inc
sahf
inc
xlat
in
adc
ljmp
das
xor
cmp
iret
jns
rolb
mov
shll
dec
jg
jbe
rorb
jmp
push
xor
jno
loopne
sbb
sti
pop
bound
and
jmp
add
lods
jno
sub
sub
repz
dec
adc
ds
adc
sbb
ja
jne
sbb
push
xchg
and
outsb
mov
jno
lret
and
xchg
lcall
insb
cld
cmp
pop
add
or
adc
sbb
push
lods
sub
or
in
sub
xchg
int
adc
imul
aas
loop
dec
pop
jecxz
adc
xor
mov
dec
test
fwait
jge
pushl
popa
in
je
mov
adc
mov
in
bound
xchg
xor
xchg
xor
out
cs
popf
jbe
pop
ds
enter
mov
push
sbb
fcoms
lea
outsl
mov
and
mov
insb
xor
mov
lods
xchg
pop
imul
adc
repz
dec
fisubl
int3
push
jmp
push
call
incb
xor
xor
jno
sub
dec
jnp
push
inc
jno
pop
adc
sahf
std
insb
cmp
fwait
pop
sbb
lahf
movsb
xchg
sahf
test
popf
mov
inc
call
cmpsl
push
mov
mov
cld
mov
jge
xchg
rol
scas
cmp
loope
icebp
mov
xlat
cmp
mov
or
gs
ds
sti
dec
xchg
icebp
add
mov
clc
dec
mov
cmc
mov
mov
sti
xor
cmp
stos
cmp
and
adc
mov
sbb
add
shrb
inc
fdivr
pusha
outsl
adc
inc
pushf
mov
sbb
adc
push
jecxz
jno
mov
add
aas
mov
hlt
pop
inc
lret
inc
cmp
jp
sbb
pop
xchg
cmp
stc
mov
mov
xchg
shlb
sub
dec
in
stos
lahf
inc
popa
fdivrs
and
loopne
sub
adc
pop
nop
adc
popf
pop
cltd
es
dec
and
xor
dec
add
cmp
sbb
cmpsb
add
mov
xchg
adc
sti
cmp
imul
jns
xor
fcompl
fwait
jae
mov
sti
inc
outsl
pop
adc
into
push
push
test
cmp
addr16
stc
outsb
mov
mov
and
repnz
jno
jle
pop
inc
pushf
ljmp
loop
dec
jg
aam
and
add
fwait
stc
sbb
je
cli
mov
call
add
in
inc
fisubrl
iret
ret
jns
iret
popf
lahf
xor
sub
adc
add
xor
dec
das
call
mov
adc
imul
je
inc
and
jae
dec
iret
sub
xor
in
imul
loop
call
or
jge
jl
mov
dec
dec
sbb
ficomps
test
or
add
sbb
adc
out
test
into
int
imul
xlat
adc
mov
ss
xor
in
out
repnz
pop
or
pop
int3
xor
mov
adc
enter
push
dec
clc
into
inc
dec
mull
mov
sbb
arpl
int3
aas
push
mov
les
push
sbb
xor
adc
or
inc
rclb
jmp
push
jne
dec
adc
inc
in
jno
lods
fwait
imul
cmp
jecxz
xorl
imul
dec
dec
mov
jge
jne
leave
popfw
lock
fisttpl
cmpsl
jge
mov
mov
push
dec
hlt
loopne
push
push
mov
mov
xchg
and
shr
xchg
addl
mov
dec
fdivp
stos
movsb
mov
push
shl
xor
adc
mov
mov
or
xor
pusha
cmp
push
and
mov
lods
and
int3
popf
sbb
ret
jmp
popa
sbbb
cli
inc
in
push
inc
mov
ret
rol
xlat
roll
xlat
mov
je
push
popa
pusha
sub
jne
push
sub
hlt
es
test
imulb
xchg
movsl
aad
jmp
jl
decb
test
xchg
cmp
lock
imul
fldt
mov
shrl
and
xchg
add
xor
sbb
inc
lret
ficompl
adc
lods
mov
push
mov
fcmovnbe
xchg
rolb
or
notl
push
lods
jle
adc
mov
xor
insb
pop
cmp
xor
insb
sub
rcr
lds
lock
or
mov
scas
jnp
push
cmp
mov
pop
mov
pop
repnz
leave
test
mov
repz
xorl
jne
add
shll
jo
mov
fcoml
in
rcrb
lods
pop
adc
lods
cld
fnstenv
mov
or
inc
shlb
mov
jmp
pop
and
mov
popf
xor
das
mov
js
repnz
bound
repnz
inc
inc
icebp
add
xrelease
stc
ljmp
sbb
add
cmp
inc
jbe
add
out
lock
arpl
mov
div
sbb
gs
push
xor
mov
call
add
inc
pop
popa
je
fcompl
insb
enter
lock
mov
out
pop
lods
push
into
push
pminub
jp
int3
stc
inc
in
push
repz
sbb
mov
xchg
xor
xchg
rcrl
dec
mov
cmp
push
insb
add
sbb
ds
or
sub
pop
movsl
insl
subl
and
xor
mov
pop
lock
push
jo
push
mov
std
lods
mov
push
jg
or
shll
xchg
bnd
jge
movsb
pop
scas
paddusw
add
add
icebp
outsl
cmc
mov
inc
hlt
int3
stos
cmp
mov
and
je
mov
lret
and
mov
clc
sub
xchg
push
dec
push
xlat
mul
pop
fists
push
jb
lahf
fadds
push
mov
adc
pop
rcll
jp
shr
mov
or
xchg
je
mov
cmp
dec
cwtl
orb
sahf
gs
das
mov
or
xchg
lock
jno
rol
jbe
cltd
cmp
pop
push
test
mov
cmp
adc
movsl
pop
imul
mov
and
inc
dec
dec
rcr
xchg
mov
jnp
mov
cmp
mov
stc
test
add
lock
and
mov
or
pop
sub
cmp
mov
popa
insl
mov
ret
jns
push
fld
andb
pusha
push
jp
pushf
ret
mov
add
xchg
shrb
sbb
sub
push
xor
jne
and
xor
sti
sbb
sti
adc
aas
or
mov
sbb
shr
add
add
sub
scas
lock
inc
cmp
outsb
orl
or
xchg
pop
pop
scas
pusha
push
call
mov
cmp
sbb
jge
xchg
sub
js
xor
imul
lret
in
and
cmp
xor
jmp
push
or
mov
add
push
xor
sti
mov
or
stc
rolb
xchg
negb
inc
into
mov
int3
pop
fsub
enter
xchg
pop
sub
nop
shlb
pop
and
test
pop
out
mov
dec
fstps
cmp
xchg
rorb
mov
insb
pop
das
sbb
mov
fdivl
pop
ds
fst
mov
push
pop
sbb
test
dec
push
and
jg
push
gs
fidivs
push
add
sbb
in
pop
xor
scas
mov
jecxz
nop
rorb
xchg
pop
mov
insl
push
sbb
mov
mov
cli
and
jge
mov
mov
fnstcw
adc
pop
je
rcrb
jmp
inc
cld
mov
icebp
mov
xor
inc
in
mov
mov
mov
data16
sub
mov
leave
and
out
fimull
imul
aas
jbe
inc
cmp
std
xchg
mov
pop
add
adc
push
and
xchg
inc
mov
in
mov
pop
sahf
sar
xor
es
cmp
push
xchg
mov
out
enter
sbb
cltd
pushf
jecxz
leave
repz
or
xlat
repz
mov
jo
and
or
sub
or
cld
cltd
jnp
imul
nop
or
inc
sbb
xor
movsl
jae
je
in
sarl
repz
xlat
xchg
icebp
fstpt
sbb
stc
into
das
inc
xchg
shlb
fbstp
lds
xor
insb
push
inc
mov
pop
je
sbbb
data16
mov
hlt
xchg
subb
mov
inc
rcrl
lods
lods
adcl
or
sub
push
movsl
or
int3
test
mov
test
mov
jle
shrb
repnz
xor
or
stos
mov
push
inc
inc
adc
adcl
arpl
int3
lret
testb
mov
scas
rorb
loopne
jecxz
and
jb
dec
pop
pop
arpl
sbb
arpl
mov
and
sbb
cmp
lods
jge
or
mov
aas
js
and
mov
ja
out
cmpb
arpl
je
and
fsubrl
add
xor
jae
shl
xchg
icebp
mov
stos
fidivrl
mov
and
mov
mov
inc
mov
rcrb
roll
imul
xor
stc
xchg
sbb
xlat
in
or
rcr
hlt
and
outsl
mov
enter
or
adc
in
dec
dec
add
dec
cwtl
add
xor
in
test
cld
in
repnz
aaa
adc
xchg
repz
adc
movsb
pop
mov
pop
push
lea
mov
mov
inc
cwtl
inc
cmp
cmpsl
fisubrs
cmp
pop
sbb
xor
aaa
fs
lret
lock
test
out
sub
xchg
jb
cmp
sub
loope
sbb
les
lea
test
jecxz
xor
xchg
add
aam
push
and
imul
ljmp
divl
adc
aam
test
inc
daa
sub
sbb
pop
push
push
addr16
pop
or
mov
pop
pop
stc
pop
or
out
jns
or
jp
outsb
xchg
xchg
movzwl
fwait
sub
popa
pop
pop
fsubrs
rcrl
or
xor
add
mov
mov
mov
sub
das
mov
or
xchg
sbb
fnstenv
scas
call
lcall
cli
xchg
mov
movsl
dec
scas
movl
cmp
scas
sub
clc
jnp
shll
add
dec
pop
icebp
shrb
pop
rcl
outsb
aam
ret
push
mov
xchg
push
dec
xor
add
add
and
pop
shll
inc
push
ss
jbe
mov
push
lcall
fs
pop
jae
mov
push
call
pusha
int
sti
cmp
rolb
sbbl
dec
gs
pop
xchg
add
mov
int3
inc
mov
cmpsb
and
xor
cld
addr16
xchg
dec
dec
das
cmp
out
outsb
mov
and
insl
popf
push
jae
int
test
push
jo
jb
pop
xor
cmpl
test
xor
cld
in
outsl
rcrb
mov
mov
xchg
sub
jb
ret
dec
loop
cmpsb
stc
popf
cmp
pop
jns
adc
sub
adc
call
fdivl
pop
in
rcrb
out
jl
and
add
std
xchg
sbb
mov
and
jae
mov
out
xchg
enter
into
dec
push
insb
jl
insl
xchg
adc
xor
pop
sub
jbe
jl
imul
mov
cmpsb
push
xchg
xchg
xchg
lret
fdiv
cwtl
and
pop
dec
or
pop
incl
mov
shll
fwait
xor
dec
jecxz
rcrl
fisubrs
addr16
add
sub
movsl
je
mov
mov
adc
sahf
enter
jnp,pn
movsb
out
aaa
pop
jecxz
lret
loopne
jmp
addr16
ja
outsl
outsl
in
scas
arpl
pop
cli
sub
arpl
add
jp
pop
inc
enter
add
stos
leave
je
push
xor
int3
cld
dec
test
out
repz
ss
icebp
pop
and
iret
popl
and
push
rol
icebp
push
in
push
cmp
jle,pn
and
or
pop
jp
shlw
cmp
mov
mov
and
movsb
mov
jmp
out
shll
cs
mov
push
nop
sbb
test
test
sbb
xchg
push
push
out
lds
dec
clc
fidivl
das
push
ror
sbb
jl
jae
das
adc
pop
sub
dec
xchg
xlat
loopne
cmp
clc
inc
ret
mov
push
jno
push
or
push
cmp
iret
jg
mov
in
lock
leave
repnz
mov
push
xor
jle
jb
push
icebp
imul
xchg
xlat
sub
popf
pop
add
jae
andl
popa
and
fwait
lods
icebp
stos
pop
pop
pushf
sub
dec
push
mov
inc
out
inc
mov
scas
jmp
sbb
add
insl
push
mov
addl
xchg
xor
sti
sbb
mov
fucomip
mov
jecxz
inc
das
fnsave
es
fnstsw
rorl
cmpsl
stos
popa
or
rcr
loope
pop
xchg
mov
jnp
repnz
xlat
mov
xchg
out
cltd
stc
insl
push
or
push
sbb
outsl
scas
dec
cmpsl
pushf
je
rclb
sub
pop
nop
and
add
mov
dec
sub
pop
pop
add
dec
push
cld
jbe
add
cltd
mov
fwait
cs
mov
jns
pop
sahf
jle
lds
inc
add
xor
pop
testl
xchg
push
daa
xor
mov
movsb
lcall
cld
push
adc
mov
mov
xchg
stos
mov
mov
sti
into
dec
pop
and
rclb
lock
sub
lcall
negb
dec
mov
out
pop
gs
or
popa
call
mov
jo
subb
hlt
push
pop
push
dec
adc
mov
cmp
jbe
imul
dec
ljmp
aam
sbb
xchg
inc
stc
sub
test
daa
cmp
lods
mov
int3
mov
xor
mov
int
adc
jl
or
cwtl
test
ret
xor
lock
inc
sahf
fildll
outsb
inc
out
andb
mov
lea
aas
mov
pop
sub
imul
cli
out
xchg
dec
xor
popf
cltd
add
loop
lret
loope
ss
fsqrt
movsl
shrl
pop
cmp
aad
fsts
pop
scas
idivb
pop
sbb
mov
out
cli
mov
nop
repz
js
sbb
mov
out
in
cmp
dec
and
and
fisttpl
cmovl
jmp
imul
mov
or
sub
icebp
jl
sahf
mov
shll
rcll
leave
sbb
out
sahf
pusha
aas
test
sub
cltd
or
sub
mov
xchg
mov
push
push
stc
add
and
push
in
push
adc
dec
shrl
call
ss
pop
jnp
jno
pop
pop
jge
pop
push
sti
jo
fcomi
out
orl
nop
xor
jae
xor
jge
inc
ror
scas
scas
pop
pushl
lods
inc
daa
sahf
cltd
lahf
sub
cs
jno
push
es
sbb
mov
and
jle
pop
mov
rorb
push
repz
sub
sub
sub
or
arpl
pop
mov
pop
push
fwait
loope
cmpsl
push
jl
pop
scas
mov
ds
stos
loope
or
mov
mov
test
mov
das
push
push
pop
and
cmpb
push
sahf
xchg
stos
mov
sub
mov
mov
clc
dec
je
sub
lods
add
out
aad
sbb
repnz
cmpsl
add
shrl
inc
or
gs
push
mov
cmp
xor
add
mov
mov
pop
and
lret
dec
add
cmpsb
add
dec
mov
push
cld
push
pop
lods
dec
das
jb
cmove
mov
sub
xor
pop
arpl
dec
and
popa
push
push
lea
xor
pop
cwtl
insl
out
rorb
push
xchg
mov
in
dec
lods
pop
jmp
lods
cmp
xchg
in
mov
xchg
pop
lret
or
sbb
mov
xor
movsb
lret
testl
daa
test
pop
cmpl
leave
aaa
inc
xor
mov
xchg
push
xchg
fildl
sarb
cltd
pop
lods
in
push
pop
dec
mov
or
jp
mov
xchg
subl
mov
int
lods
dec
pushw
outsl
mov
sub
mov
mov
inc
inc
inc
pop
push
int
aad
in
movsb
pop
lods
mov
clc
push
and
inc
jle
cs
dec
inc
adc
imul
inc
out
in
gs
mov
movb
push
fildll
sub
dec
test
ljmp
dec
or
mov
lods
jns
xor
xor
clc
pop
insl
mov
push
loopne
xchg
add
lods
push
sahf
loope
popf
je
aaa
pop
jecxz
mov
xchg
cmc
loope
call
push
sarl
inc
cli
cmp
sbb
mov
arpl
cmpsl
pop
lcall
push
popa
lods
lds
ret
xchg
lea
pop
cmp
ja
sub
push
imul
imul
lcall
inc
dec
jbe
sbb
push
mov
lcall
bound
lds
movsl
enter
aad
into
shll
popf
aas
mov
ljmp
cld
int
es
mov
mov
es
enter
popf
mov
nop
pop
inc
sbb
dec
xor
add
inc
dec
loopne
test
ret
jae
loopne
adc
or
or
addl
loopne
mov
adc
pop
mov
push
dec
popa
lret
xchg
pop
mov
jge
ss
jecxz
mov
adc
cmp
dec
jmp
adc
mov
ds
pushf
loopne
cmp
jle
sbb
adc
mov
adc
cmp
outsb
lret
out
ud2
imulb
je
xchg
mov
rolb
pop
loopne
pop
or
xor
mov
mov
xchg
add
sub
sub
jp
fs
or
test
dec
cmpsl
xor
adc
es
fdivl
jmp
push
sarb
outsl
jnp
sub
cli
daa
xchg
jnp
icebp
mov
rcr
test
shrl
push
rcrl
mov
lods
dec
cmp
and
shl
cmp
pop
xchg
sub
mov
outsl
imul
ret
push
sbb
je
add
or
jge
inc
test
dec
dec
or
dec
and
add
mov
test
fwait
mov
ret
mov
mov
mov
sub
out
jns
xchg
dec
xor
xor
sbb
test
std
pop
repz
rcrl
cmp
adc
mov
sub
cmp
fnsave
in
aas
sub
push
jecxz
pop
mov
push
jno
sub
push
mov
aam
loop
ret
pop
sti
or
jo
or
add
jge
or
int
fcom
adc
movsb
jge
lds
and
stos
fcoml
add
mov
jl
loope
dec
pop
mov
cmp
jmp
or
pop
test
lods
inc
mov
add
add
cld
fistps
pop
lcall
pop
sub
dec
test
jno
jmp
cmpsl
xchg
cs
inc
jbe
lret
mov
arpl
push
mov
inc
fsts
add
dec
inc
rorl
clc
sbb
movsl
push
pop
and
and
loopne
dec
in
mov
cmpsb
stos
flds
and
add
mov
or
jo
xchg
xchg
xchg
sub
insl
xchg
fdiv
repz
insb
icebp
adc
jmp
sub
pushf
push
les
sbb
dec
xorl
xchg
dec
shrb
dec
xchg
push
add
cmp
pusha
xlat
jp
push
std
mov
std
ficompl
das
orb
frstor
ficomps
andb
push
ret
out
sub
push
cmp
int
sti
cltd
cltd
cmpl
push
jne
and
or
jbe
mov
dec
mov
and
xchg
jne
xchg
cmp
mov
mov
test
outsb
mov
mov
mov
cmp
or
jbe
or
sbb
fidivrs
mov
mov
pop
test
pop
dec
fimull
add
add
lock
in
or
jl
mov
or
or
test
mov
int3
test
jae
dec
pop
sarl
cmp
jae
and
aad
ss
fbld
dec
lahf
clc
jle
pop
xchg
sbb
cmp
dec
jle
js
daa
hlt
lcall
xchg
pusha
and
mov
or
sub
xor
dec
adcl
mov
sbb
push
hlt
inc
pushf
and
int
sub
fs
inc
pop
pop
lret
jo
fisttps
jo
and
ja
scas
push
cmp
xor
scas
mov
subb
dec
sbb
adcb
dec
push
jno
dec
outsl
test
cltd
aad
pop
cmp
mov
out
test
fiadds
sbb
scas
or
sub
jbe
inc
mov
lahf
cmpsb
lods
stos
and
jo
test
cmpl
pushf
aaa
sbb
in
xor
cmp
lods
nop
inc
inc
lods
inc
inc
outsb
mov
cwtl
hlt
inc
stc
sbbl
adc
shll
lea
dec
outsb
aad
pop
jl
in
imull
mov
test
out
sub
and
pushf
pop
sbb
mov
cmpsl
push
ja
lret
push
push
xchg
xchg
dec
pushl
sub
loope
or
mov
mov
mov
mov
out
sarb
bound
jae
mov
adc
mov
or
xchg
stc
add
mov
inc
daa
mov
mov
sbb
ljmp
mov
pop
mov
inc
sti
leave
sbb
mov
hlt
repnz
ss
inc
outsl
daa
push
loopne
cs
andl
std
aaa
stos
cld
outsl
sbb
mov
insl
sbb
les
fdiv
sbb
cmpsb
test
add
daa
loopne
xchg
out
adc
mov
dec
inc
icebp
dec
inc
pop
push
imul
mov
fldt
and
mov
sub
cmpsl
imul
jecxz
jb
xor
sbb
pushl
mov
ja
out
std
popa
rcll
shrb
imul
sub
movsl
cwtl
adc
pop
mov
hlt
mov
frstor
or
fistps
add
push
call
push
pop
xchg
xrelease
js
sbb
mov
mov
loopne
jecxz
aas
into
jmp
mov
scas
pop
and
ror
cwtl
inc
xlat
cwtl
daa
ret
or
jg
jecxz
pushw
int3
jmp
xchg
mov
aas
mov
jp
cli
mov
enter
xchg
aad
lret
or
mov
out
ds
push
push
stc
push
call
inc
or
cmp
mov
xor
mov
push
sbb
and
out
aad
mov
jno
pop
sub
lret
lea
sub
mov
adc
jnp
jl
jecxz
adc
and
outsb
test
iret
insl
clc
loope
cmpsb
and
lret
enter
stos
xor
xchg
cmpsl
xchg
adc
push
scas
push
aaa
inc
mov
nop
mov
xchg
xchg
mov
out
dec
ficompl
insl
out
fstpl
or
test
mov
add
stos
xchg
adc
fwait
sub
cmp
ljmp
mov
pop
mov
cmp
sub
mov
xchg
movl
pop
xchg
lods
cmpsb
ljmp
jne
mov
mov
sbb
jl
pop
cmc
sub
mov
ret
out
mov
shlb
je
mov
rclb
dec
fs
movsb
ret
mov
push
in
repnz
mov
lds
aas
cmp
icebp
jns
out
data16
imul
push
shll
jle
btr
dec
inc
push
scas
xchg
repnz
cmc
rcrl
push
insl
call
enter
xor
aad
sub
out
adc
mov
xchg
jno
jl
jae
fs
cmpsl
es
testb
inc
xchg
ds
decl
les
insb
jg
lret
pop
cwtl
mov
fcmovu
mov
insb
fcoms
cmp
ds
fsubr
sbb
roll
add
push
pop
xor
mov
adc
push
call
adc
or
mov
fbld
cld
sub
orl
pop
arpl
div
movsl
into
aas
fisubrs
inc
xor
out
push
pop
add
jg
cmpsl
adc
cmp
imul
sub
sub
dec
hlt
jge
dec
mov
jmp
fwait
add
inc
push
popf
cwtl
mov
mov
incb
cmc
mov
inc
shlb
cld
mov
mov
push
jg
pop
xor
rorb
repz
mov
xchg
out
xor
add
pop
pop
or
int3
imul
add
fdiv
mov
or
dec
sub
shll
cmp
test
cmpsb
or
mov
jle
test
jl
adc
or
ljmp
sub
push
push
add
fbld
xor
add
or
adc
xchg
xchg
ja
jle
jle
in
imul
mov
pop
inc
jno
cmp
pop
mov
pop
and
dec
std
fcmovb
dec
mov
arpl
mov
push
imul
push
inc
xor
xor
xchg
xlat
enter
ret
aam
cmpsl
xor
jb
sub
cmpsl
pop
int3
push
loop
pop
in
xor
int3
add
test
das
adc
jle
and
iret
pop
push
arpl
push
jae
iret
cmp
lahf
repnz
ss
repz
fnsave
roll
inc
adc
cmp
mov
sti
mov
cmpl
adc
popa
test
adc
ja
jg
cmpsb
call
loopne
push
push
into
fisttpll
pop
jns
jne
stos
jp
push
movsb
mov
inc
jg
mov
push
in
imul
xchg
push
in
int
pop
sbb
ljmp
enter
scas
dec
mov
cmp
add
mov
xchg
xor
movsb
xlat
in
pop
in
xor
sti
mov
or
dec
xor
mov
cmc
lcall
in
add
out
jle
repz
xchg
mov
jno
insb
mov
out
es
out
lret
and
testl
jb
bnd
push
mov
or
dec
jge
test
test
push
mov
or
inc
movsl
pop
std
sbb
xchg
jge
xchg
cli
pop
mull
pop
mov
stc
fs
aas
sbbb
adc
mov
shll
cmp
sub
adc
mov
or
outsb
xor
je
cwtl
mov
ja
imulb
jb
in
jbe
xor
dec
repnz
sahf
lds
mov
cmp
arpl
or
sub
dec
out
ficoml
repz
sub
arpl
imul
into
push
pop
jle
out
mov
dec
arpl
lock
xchg
mov
or
mov
xlat
jp
jmp
push
insl
xor
cmc
clc
pop
enter
inc
mov
pushf
loope
jnp
and
mov
cmp
mov
mov
ljmp
mov
xchg
push
cwtl
insb
aad
jle
je
out
aaa
mov
and
mov
lea
loope
popa
outsl
add
inc
add
out
sbb
sub
jo
shrl
adc
and
push
test
stc
movsb
mov
incb
dec
push
and
leave
fstps
or
and
sbb
and
cmp
stc
fsubrs
ds
cmc
int3
and
sbb
cmpsl
push
jo
xor
test
fs
push
loopne
rorl
xchg
insl
xor
lahf
rcrb
cmpsl
inc
push
out
and
or
movsl
insb
out
out
pop
movsl
xchg
or
mov
pop
nop
push
stos
dec
sub
fldl
jns
dec
repnz
pop
incl
xchg
sub
hlt
fucom
ds
lock
xchg
aam
sbb
cmp
mov
xchg
shrl
xchg
sbb
xor
inc
push
movl
movsb
sub
mov
push
and
daa
push
jnp
xchg
test
add
fdivp
test
lods
lret
das
mov
adc
jecxz
and
ljmp
jno
mov
jns
mulb
outsl
movsl
jo
cmp
icebp
out
and
xchg
adc
ret
nop
xchg
sbb
mov
xor
out
mov
repnz
scas
jns
dec
test
mov
xchg
pushf
je
je
dec
sub
into
lcall
sub
jne
pop
mov
adc
aas
jmp
iret
or
loopne
pushf
scas
dec
push
das
daa
cmpsl
fldenv
pop
shl
dec
pop
outsl
test
sti
push
inc
aad
mov
jo
adc
je
popf
les
mov
outsl
ret
mov
jp
imul
add
dec
es
aad
and
cmp
xchg
cmp
sub
push
ret
mov
dec
lahf
arpl
jns
jno
mov
fcoml
loop
inc
adc
lea
addr16
xchg
dec
dec
or
je
test
mov
sub
mov
movb
icebp
cmp
imul
jae
push
inc
addr16
int3
push
je
lret
mov
and
fwait
or
xchg
rcrl
xchg
xchg
xor
xor
hlt
jecxz
dec
xor
jmp
jl
pusha
inc
xor
cwtl
jb
mov
mov
sub
jp
adc
xor
cwtl
sub
jae
mov
inc
mov
mov
arpl
ret
insl
andb
repnz
roll
gs
aaa
mov
xlat
push
pop
gs
hlt
cmovge
cmc
stc
mov
sub
cmp
xor
push
outsl
pop
ret
jp
ret
mov
or
dec
jg
mov
mov
xchg
sub
jb
mov
shlb
out
cmp
push
xchg
es
xchg
lds
nop
sbbb
out
movsl
imul
mov
inc
add
dec
imul
ficomps
ja
fdivrs
jmp
aaa
daa
xor
mov
rcl
sub
fs
push
and
mov
and
or
xlat
adc
mov
mov
jnp
cmp
les
lahf
xor
mov
and
mov
leave
push
dec
shll
push
and
dec
lcall
lock
daa
sub
mov
dec
cmp
mov
movsb
sti
int3
out
pop
push
imul
cmpsl
and
add
gs
ja
xchg
out
xchg
inc
add
mov
scas
inc
mov
addr16
cmpsb
or
dec
xchg
xchg
popa
outsb
cmp
outsl
add
jo
dec
add
lret
das
cmp
sub
sub
popa
push
cli
pop
mov
pushw
mov
jmp
jne
daa
ret
xchg
int3
rcrb
stc
mov
js
cmp
sbb
adc
push
lret
or
sarl
dec
fdivp
dec
repz
add
out
mov
inc
or
insl
ds
sbb
out
pop
xor
mov
pop
outsb
sti
sub
pop
pop
test
ja
sub
sarb
bnd
xchg
fs
ficomps
fld
inc
or
insb
jo
lret
test
jbe
rorl
arpl
pop
sarl
xor
add
fidivs
mov
jae
pushf
jo
jl
stos
mov
into
mov
sub
leave
fistl
dec
push
sub
cld
add
adc
mov
sti
test
xchg
js
out
adc
aaa
rcl
and
cmp
shll
mov
insb
pop
mov
into
fwait
arpl
jmp
rclb
inc
loop
xlat
push
jle
dec
xor
mov
mov
dec
fstps
call
sub
or
pop
adc
stos
xorb
and
das
fildll
adc
add
mov
orb
sub
clc
lods
sbb
inc
mul
or
inc
cmc
add
and
movsl
xchg
or
ret
cld
xorb
popa
mov
mov
pusha
sbb
or
ds
pop
fdivl
jge
sahf
stos
inc
fs
test
push
mov
xchg
sub
inc
rcll
add
lods
daa
orb
xchg
dec
shll
push
add
xor
lahf
movsb
sahf
xor
dec
scas
add
xchg
stos
scas
outsb
clc
pop
cmp
push
xchg
or
jns
outsb
push
xor
inc
sbb
aam
xchg
mov
lds
into
adc
mov
jno
ljmp
sbb
sbb
ss
sbb
cmp
push
and
popa
inc
daa
scas
push
push
bound
movb
lods
or
adcb
andl
leave
cmp
pushf
sub
mov
pop
jg
xor
cmc
sbb
lock
add
xchg
xor
xor
mov
mov
cmp
or
insb
xlat
xor
xchg
jae
lret
cmp
gs
js
xor
jae
push
push
int3
add
mov
and
bound
sbb
or
jge
pop
into
jae
aas
mov
or
imul
dec
pop
mov
cld
xchg
mov
lods
cmpsl
add
hlt
pop
sub
adc
out
sbbb
shlb
sbb
pop
pop
push
add
int
xchg
movsb
dec
mov
xchg
inc
dec
cmp
jg
lock
and
pop
adc
push
pop
scas
sub
jl
in
orl
loopne
xor
iret
cli
les
xor
stc
xor
mov
add
cmp
cmc
mov
jns
rcr
or
iret
sbb
xor
mov
cmpb
xchg
movsl
dec
dec
popa
sbb
mov
out
mov
mov
cs
inc
mov
mov
xlat
sbb
sub
mov
xor
mov
lahf
rolb
cwtl
and
jecxz
fdivr
or
data16
test
popf
jae
jo
mov
cwtl
mull
mov
fcomps
clc
xor
jecxz
notb
push
js
jecxz
mov
call
fwait
sbbl
clc
xor
fisttps
test
push
mov
push
les
ja
into
imul
jge
cwtd
mov
std
push
inc
movsb
int
scas
out
in
xchg
sub
lret
cmp
mov
cmp
dec
out
inc
fldcw
fs
mov
pop
xor
jecxz
sarl
fistps
lret
data16
add
out
jbe
mov
jnp
loopne
xchg
neg
adc
repz
data16
aas
add
icebp
push
mov
ret
sub
sub
sub
push
ret
mov
loope
cld
sbb
mov
ja
dec
into
ja
pop
shl
cmp
into
ret
push
call
xor
test
mov
cmp
mov
xchg
das
xchg
mov
pushf
dec
push
jge
les
cmp
xchg
mov
test
cmp
pop
jne
mov
outsb
xchg
sbbb
xchg
jne
int3
ss
cmc
or
lds
mov
loopne
popa
lret
cmp
mov
popa
leave
insb
jbe
stc
imul
cmp
mov
daa
call
insl
lods
enter
movsb
mov
adc
jmp
ret
das
aaa
or
fimull
xor
xor
cwtl
pop
mov
cs
in
testb
inc
inc
in
lock
cmpsl
aad
xchg
sbb
call
pop
fisttpl
in
xchg
mul
cmpsl
mov
xchg
stos
add
mov
mov
xchg
lods
inc
orl
out
adcl
popf
iret
pop
stc
lods
jmp
scas
movsl
pop
xchg
or
sub
les
aas
dec
dec
push
jae
insl
mov
sbb
outsb
fmul
cs
mov
inc
cmp
mov
mov
xor
sbb
lods
aad
mov
js
into
shrb
nop
mov
es
and
in
shlb
adc
das
loop
add
clc
jle
mov
inc
stc
cltd
dec
into
pop
pushf
mov
pop
inc
leave
cmp
psraw
aaa
stc
sahf
insb
cmc
ja
in
imul
pusha
jge
ja
dec
pop
stc
push
mov
pop
lret
adc
sbb
sub
rclb
jne
fwait
jno
stc
push
pop
xchg
repnz
cwtl
pop
jns
xor
aas
dec
lds
dec
lahf
sub
adc
mov
mov
mov
aam
fistps
sbbb
ret
incb
add
aam
mov
cmp
push
outsl
push
cmp
xchg
push
lods
xor
push
in
fsubr
jmp
movsl
jmp
ljmp
scas
or
shlb
faddl
in
subl
mov
inc
xchg
mov
call
repnz
sbb
lds
sbb
cld
std
stos
rcr
cmpsb
xchg
insb
sbb
pop
xor
dec
dec
dec
sti
adc
sub
add
test
icebp
push
jnp
sbb
js
push
mov
cmpsb
and
mov
cmp
fidivrl
or
lret
add
cmp
idivb
or
adc
or
cmp
cmp
inc
cmp
pop
cmp
insb
cmp
jle
or
mov
or
add
or
add
add
adc
or
cld
aas
or
loop
or
sarb
or
mov
aas
or
lcall
add
add
or
jbe
or
xchg
or
sahf
xor
scas
xor
les
or
into
xor
loopne
or
repnz
push
xor
xor
xor
push
xor
outsb
xor
xchg
or
pushf
xor
mov
or
mov
xor
loopne
or
repnz
xor
or
or
push
xor
sub
or
inc
xor
push
xor
pop
xor
jo
or
jle
or
mov
or
pushf
xor
mov
or
mov
xor
loop
or
lock
add
add
or
sbb
add
xor
add
xor
add
or
pop
xor
add
or
jp
or
mov
add
xor
add
or
aam
or
call
xor
or
push
xor
or
cs
or
push
xor
or
js
or
mov
or
mov
xor
or
xor
or
add
or
adc
or
dec
inc
or
inc
ss
pop
ss
push
ss
nop
ss
scas
ss
ret
add
ss
out
or
divb
or
or
or
sbb
or
sub
or
cmp
or
push
aaa
or
data16
or
jbe
or
xchg
or
pushf
aaa
or
mov
or
les
or
aam
or
in
or
add
or
adc
or
and
or
xor
or
inc
cmp
push
cmp
mov
or
jp
or
push
or
pop
aas
or
dec
aas
or
cmp
or
cs
or
push
aas
or
add
or
fs
or
idivb
or
call
ds
sarb
or
ret
add
ds
xchg
ds
cmpb
add
or
pop
ds
inc
ds
sub
or
sbb
or
or
or
idivb
or
fdivrs
or
mov
cmp
or
cwtl
cmp
or
mov
add
inc
or
ret
add
inc
or
inc
xor
or
add
add
mov
add
adcb
add
mov
add
addb
add
mov
add
orb
add
or
add
xchg
add
addb
add
add
add
cld
cmp
push
cmp
add
add
add
das
or
add
add
push
or
pop
cmp
or
dec
cmp
or
jbe
or
add
add
lret
add
cmp
call
cmp
aam
or
ret
add
cmp
nop
cmp
scas
cmp
mov
cmp
mov
or
js
or
pop
cmp
cmpb
add
add
or
inc
cmp
sub
or
sbb
or
or
or
cli
cmp
fidivrs
or
lret
add
cmp
nop
cmp
cmpb
add
add
cmp
dec
cmp
cmp
adc
or
or
or
add
add
sbb
or
add
or
sbb
or
xor
or
inc
xor
pop
xor
insb
xor
xorb
add
xor
ret
add
xor
out
xor
add
or
out
das
or
add
add
je
add
jae
add
or
or
cli
cmp
add
cmp
add
cmp
add
cmp
add
or
push
cmp
add
add
cmp
add
cmp
add
add
add
add
and
or
dec
add
add
in
adc
add
in
adc
add
cmp
or
push
popa
insb
add
or
inc
outsl
jb
gs
gs
outsl
jbe
add
or
dec
outsl
push
gs
outsl
jbe
add
add
pop
in
adc
gs
add
push
jo
dec
inc
add
add
push
dec
inc
add
add
insl
jo
outsb
outsb
je
inc
popa
je
outsl
jb
gs
add
add
insb
gs
jns
add
add
dec
outsb
je
jb
popa
arpl
add
dec
popa
jb
ja
jb
add
add
dec
imul
push
inc
dec
add
inc
push
push
dec
push
pop
add
add
push
pop
push
push
inc
dec
add
push
outsl
data16
popa
jb
add
add
push
jns
gs
imul
push
outsl
data16
popa
jb
pop
dec
imul
je
push
imul
dec
push
pop
inc
jne
jb
outsb
je
gs
imul
insb
outsl
outsl
outsb
pop
dec
outsl
je
data16
add
add
roll
add
xor
add
jo
outsl
jb
jb
gs
add
add
ja
outsb
insb
outsl
outsl
outsb
cs
add
add
jb
outsb
fs
insb
xor
cs
push
dec
inc
push
push
inc
push
inc
pop
dec
imul
je
push
imul
inc
jne
jb
outsb
je
gs
imul
insb
outsl
jb
jb
inc
jb
ja
gs
dec
gs
jo
jb
dec
bound
arpl
jnp
xor
xor
inc
inc
xor
inc
sub
sub
sub
inc
xor
inc
xor
jge
add
add
push
dec
inc
pop
jnp
xor
xor
inc
inc
xor
inc
sub
sub
sub
inc
xor
inc
xor
jge
dec
outsb
jo
outsl
arpl
jb
gs
xor
push
outsl
jb
gs
add
jb
gs
add
mov
mov
and
add
add
add
rolb
add
add
inc
inc
jb
outsb
fs
jns
popa
insl
add
add
and
dec
inc
inc
push
dec
inc
and
push
jns
gs
imul
dec
inc
and
dec
inc
add
add
popa
jb
insl
outsb
je
add
push
push
imul
insb
add
and
dec
inc
and
and
dec
inc
push
pop
push
inc
and
push
jb
addr16
insl
insl
popa
bound
add
add
jb
imul
jo
outsb
fs
je
jb
addr16
inc
add
add
push
jb
addr16
inc
add
inc
jne
push
gs
add
inc
jbe
outsb
je
cs
push
inc
jbe
outsb
je
add
add
xor
xor
inc
inc
xor
inc
sub
sub
sub
inc
xor
inc
xor
jge
add
push
dec
inc
add
add
outsb
fs
jns
popa
insl
gs
inc
jbe
outsb
je
cs
push
inc
jbe
outsb
je
xor
add
add
dec
push
inc
jbe
outsb
je
and
push
arpl
sub
adc
sub
adc
sub
adc
sub
adc
xor
adc
push
add
inc
outsl
insl
bound
outsl
js
add
add
inc
popa
jb
imul
add
add
jb
gs
add
jb
gs
add
add
add
pop
add
add
push
sbb
adc
sbb
adc
push
add
mov
push
add
add
add
cli
sbb
adc
sbb
adc
jns
adc
jns
adc
jns
adc
push
add
mov
pop
add
add
add
pushl
add
mov
add
jo
add
adcb
nop
push
add
xor
add
push
and
add
and
adc
and
adc
sub
adc
mov
add
mov
sub
adc
cmp
or
add
add
add
add
pop
call
add
add
add
inc
daa
add
shlb
add
lock
mov
mov
loop
mov
inc
addl
arpl
push
gs
gs
xor
add
dec
dec
inc
push
dec
inc
push
pop
push
inc
add
dec
outsb
jo
outsl
arpl
jb
gs
xor
add
inc
push
dec
inc
inc
push
dec
inc
add
dec
outsl
fs
gs
push
popa
ja
add
fs
add
loopne
add
lock
add
pusha
push
add
xor
add
push
push
add
jo
add
and
adc
and
adc
add
add
add
add
add
add
add
inc
xor
or
add
add
add
add
adc
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
inc
push
add
add
adc
add
test
or
inc
add
add
add
xchg
jmp
insb
add
jb
gs
gs
outsl
jbe
add
push
gs
outsl
jbe
add
add
mov
or
inc
gs
gs
add
jmp
jo
inc
add
add
push
dec
inc
add
add
insl
jo
outsb
outsb
je
inc
popa
je
outsl
jb
gs
add
add
insb
gs
jns
add
add
dec
outsb
je
jb
popa
arpl
add
dec
popa
jb
ja
jb
add
add
dec
imul
push
inc
dec
add
inc
push
push
dec
push
pop
add
add
push
pop
push
push
inc
dec
add
push
outsl
data16
popa
jb
add
add
push
jns
gs
imul
push
outsl
data16
popa
jb
pop
dec
imul
je
push
imul
dec
push
pop
inc
jne
jb
outsb
je
gs
imul
insb
outsl
outsl
outsb
pop
dec
outsl
je
data16
add
add
roll
add
xor
add
jo
outsl
jb
jb
gs
add
add
ja
outsb
insb
outsl
outsl
outsb
cs
add
add
jb
outsb
fs
insb
xor
cs
add
add
addr16
push
gs
imul
add
add
push
gs
inc
add
inc
data16
dec
inc
add
add
push
gs
jne
arpl
inc
add
add
addr16
inc
inc
outsl
outsb
outsb
arpl
addr16
push
push
dec
add
add
inc
insb
imul
add
inc
jb
jae
dec
imul
add
inc
insb
imul
inc
add
add
addr16
inc
pop
imul
jb
gs
push
dec
inc
add
add
push
jo
jb
fs
add
push
gs
gs
push
jae
addr16
push
outsl
jo
jo
gs
popa
jns
add
addr16
inc
outsl
outsb
outsb
arpl
outsb
push
gs
popa
jns
add
push
je
je
jae
imul
popa
fs
gs
popa
jns
addr16
dec
outsb
jae
popa
insb
insb
gs
dec
inc
add
dec
push
jae
add
add
sub
add
and
cs
add
pop
add
sub
add
pop
add
add
add
add
outsb
cmp
cs
sub
add
add
cmp
push
pop
cmp
dec
outsl
arpl
and
bound
add
add
add
and
add
cmp
add
push
jne
arpl
outsb
outsb
cmp
add
imul
and
add
add
outsb
gs
jb
add
cmp
outsb
outsb
cmp
add
jbe
insb
imul
add
add
jbe
jb
add
cmp
outsb
outsb
dec
jne
cmp
add
and
add
add
insb
cmp
add
cmp
imul
cmp
add
add
add
je
imul
add
add
outsb
outsl
outsb
add
add
outsb
outsl
outsb
add
add
cmp
add
and
jae
add
push
push
das
xor
xor
add
add
push
push
add
add
push
inc
dec
inc
cmp
add
cmp
add
or
add
add
add
add
jb
add
add
cmp
add
je
jne
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
jb
add
add
popaw
insb
jae
add
add
add
add
add
add
popaw
insb
jae
add
add
add
add
outsl
outsb
outsb
arpl
and
and
and
jnp
and
inc
outsl
outsb
outsb
arpl
and
add
and
add
and
add
and
add
and
and
and
and
and
and
and
and
and
and
and
pop
and
add
and
add
and
add
and
add
add
add
add
add
and
and
sub
add
and
add
and
add
sub
add
add
or
inc
inc
dec
push
inc
cmp
add
add
add
add
add
add
add
outsl
arpl
imul
cmp
add
or
add
add
add
add
add
add
push
push
push
das
xor
xor
add
add
push
push
add
add
je
jne
add
add
inc
popa
outsb
outsb
outsl
je
imul
add
ja
add
and
add
add
outsb
je
cmp
xor
sub
xor
add
add
incl
add
add
add
aas
dec
push
push
push
cmp
das
add
je
add
add
das
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
and
add
nop
out
adc
faddl
adc
push
add
jo
add
loopne
add
inc
fiaddl
adc
add
pusha
loope
adc
add
sbb
adc
push
add
shl
add
mov
add
mov
add
nop
push
add
rcr
add
loopne
add
inc
fiaddl
adc
add
inc
faddl
adc
add
sbb
adc
push
add
imul
and
jo
jae
je
push
and
gs
je
jb
add
add
or
add
add
add
add
add
add
add
or
add
jbe
arpl
cmp
and
and
add
bound
and
jae
add
add
inc
add
add
pop
add
rcrb
mov
add
mov
push
add
mov
push
add
mov
push
add
insb
add
insb
jne
add
add
add
add
add
jp
mov
xchg
stos
cmp
add
and
add
dec
jb
inc
xor
add
add
add
add
add
add
add
lock
add
lock
add
adc
adc
outsb
add
jo
add
mov
add
popaw
insb
jae
add
add
add
add
loopne
add
mov
add
addb
adc
test
adc
add
pusha
xchg
adc
xchg
adc
add
push
add
add
adc
add
jl
or
inc
add
add
add
mov
or
push
popa
insb
add
jb
gs
gs
outsl
jbe
add
push
gs
outsl
jbe
add
add
lods
lock
inc
gs
gs
add
mov
jo
dec
inc
add
add
push
dec
inc
add
add
insl
jo
outsb
outsb
je
inc
popa
je
outsl
jb
gs
add
add
insb
gs
jns
add
add
dec
outsb
je
jb
popa
arpl
add
dec
popa
jb
ja
jb
add
add
dec
imul
push
inc
dec
add
inc
push
push
dec
push
pop
add
add
push
pop
push
push
inc
dec
add
push
outsl
data16
popa
jb
add
add
push
jns
gs
imul
push
outsl
data16
popa
jb
pop
dec
imul
je
push
imul
dec
push
pop
inc
jne
jb
outsb
je
gs
imul
insb
outsl
outsl
outsb
pop
dec
outsl
je
data16
add
add
roll
add
xor
add
jo
outsl
jb
jb
gs
add
add
ja
outsb
insb
outsl
outsl
outsb
cs
add
add
jb
outsb
fs
insb
xor
cs
add
add
dec
outsl
and
dec
and
arpl
outsb
add
add
add
insb
imul
add
add
add
cmp
jb
mov
adc
cmp
add
add
add
add
add
inc
add
test
or
add
out
test
mov
adc
mov
adc
mov
adc
mov
adc
rclb
xchg
dec
add
scas
lods
dec
and
fs
xor
add
and
jb
jb
and
add
xor
add
push
outsb
imul
outsb
and
jb
jb
xor
xor
add
add
imul
and
jb
jb
and
add
add
add
rolb
add
add
inc
adc
push
xor
addb
add
add
and
add
dec
and
and
outsb
je
and
add
shrl
ljmp
add
rcrb
popa
push
or
scas
int
adc
leave
loop
insl
popa
jo
jae
je
push
and
and
add
mov
mov
add
push
add
add
repz
dec
add
add
repz
inc
add
add
repz
inc
add
add
or
push
popa
insb
add
or
inc
outsl
jb
gs
gs
outsl
jbe
add
or
dec
outsl
push
gs
outsl
jbe
add
add
pusha
repz
inc
gs
gs
add
jo
or
inc
jo
dec
inc
add
add
push
dec
inc
add
add
insl
jo
outsb
outsb
je
inc
popa
je
outsl
jb
gs
add
add
insb
gs
jns
add
add
dec
outsb
je
jb
popa
arpl
add
dec
popa
jb
ja
jb
add
add
dec
imul
push
inc
dec
add
inc
push
push
dec
push
pop
add
add
push
pop
push
push
inc
dec
add
push
outsl
data16
popa
jb
add
add
push
jns
gs
imul
add
inc
jnp
inc
es
imul
and
cmp
aaa
cmp
pop
arpl
jno
sub
jl
sub
pop
jb
sub
jne
jbe
insb
das
xor
jp
dec
sub
push
push
outsb
dec
popa
js
inc
push
inc
inc
dec
push
jge
push
aas
push
pop
inc
insl
pop
jle
xor
xor
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
arpl
cmp
imul
insl
sub
dec
jg
push
outsl
xor
jne
sub
imul
inc
pop
cmp
dec
aas
push
dec
jl
inc
addr16
jle
dec
pusha
daa
push
jae
push
and
xor
push
aaa
push
cmp
ss
xor
jge
and
sub
push
inc
jbe
push
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
daa
jns
pop
push
push
cmp
ds
je
pusha
js
imul
inc
jb
es
aas
pop
jl
insl
pop
dec
inc
push
push
cmp
bound
dec
xor
arpl
push
cmp
sub
jbe
imul
pop
cmp
sub
sub
push
aaa
jge
inc
xor
insb
dec
jae
xor
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
call
add
xor
adc
add
mov
or
inc
add
add
add
add
popa
insb
add
outsl
jb
gs
gs
outsl
jbe
add
outsl
push
gs
outsl
jbe
add
add
mov
gs
gs
add
enter
inc
jo
dec
inc
add
add
push
dec
inc
add
add
insl
jo
outsb
outsb
je
inc
popa
je
outsl
jb
gs
add
add
insb
gs
jns
add
add
dec
outsb
je
jb
popa
arpl
add
dec
popa
jb
ja
jb
add
add
dec
imul
push
inc
dec
add
inc
push
push
dec
push
pop
add
add
push
pop
push
push
inc
dec
add
push
outsl
data16
popa
jb
add
add
push
jns
gs
imul
push
outsl
data16
popa
jb
pop
dec
imul
je
push
imul
dec
push
pop
inc
jne
jb
outsb
je
gs
imul
insb
outsl
outsl
outsb
pop
dec
outsl
je
data16
add
add
roll
add
xor
add
jo
outsl
jb
jb
gs
add
add
ja
outsb
insb
outsl
outsl
outsb
cs
add
add
jb
outsb
fs
insb
xor
cs
add
add
jae
outsl
arpl
fs
insb
add
add
add
popa
jne
je
jae
outsl
arpl
fs
insb
add
add
add
outsl
ja
gs
outsb
fs
insl
cmp
add
add
dec
inc
and
popa
addr16
bound
imul
cmp
add
add
and
outsb
outsb
gs
imul
and
rclb
mov
add
dec
flds
sbb
add
pop
clc
or
dec
add
add
adc
add
adc
add
je
or
push
popa
insb
add
adc
jb
gs
gs
outsl
jbe
add
push
gs
outsl
jbe
add
add
xchg
clc
or
inc
gs
gs
add
movsb
clc
or
inc
jo
dec
inc
add
add
push
dec
inc
add
add
insl
jo
outsb
outsb
je
inc
popa
je
outsl
jb
gs
add
add
insb
gs
jns
add
add
dec
outsb
je
jb
popa
arpl
add
dec
popa
jb
ja
jb
add
add
dec
imul
push
inc
dec
add
inc
push
push
dec
push
pop
add
add
push
pop
push
push
inc
dec
add
push
outsl
data16
popa
jb
add
add
push
jns
gs
imul
push
outsl
data16
popa
jb
pop
dec
imul
je
push
imul
dec
push
pop
inc
jne
jb
outsb
je
gs
imul
insb
outsl
outsl
outsb
pop
dec
outsl
je
data16
add
add
roll
add
xor
add
jo
outsl
jb
jb
gs
add
add
ja
outsb
insb
outsl
outsl
outsb
cs
add
add
jb
outsb
fs
insb
xor
cs
add
add
sub
add
xchg
dec
add
cs
add
pop
es
imul
popa
jns
add
inc
outsl
outsb
outsb
arpl
push
gs
gs
add
jae
dec
imul
outsl
outsb
outsb
arpl
add
jae
dec
popa
push
jb
arpl
outsb
arpl
add
jae
inc
fs
imul
inc
add
add
xor
xor
add
add
add
add
pop
cmp
cmp
popa
jae
push
outsl
jo
jo
push
and
jo
jo
push
push
and
js
outsl
jo
jo
gs
popa
jns
and
xor
add
push
gs
jb
push
add
jb
add
dec
push
push
push
add
add
dec
push
push
push
push
add
add
push
push
add
add
cmp
das
add
add
add
add
add
add
add
pop
add
add
add
add
add
outsb
je
je
gs
add
add
add
pop
add
jb
add
sarb
jo
add
pusha
js
adc
add
inc
jbe
adc
jne
adc
je
adc
jb
adc
jno
adc
outsl
add
shrb
xor
xor
popa
bound
gs
inc
inc
inc
inc
inc
add
push
add
add
or
dec
add
add
or
inc
add
add
adc
add
dec
sti
or
push
popa
insb
add
adc
jb
gs
gs
outsl
jbe
add
adc
push
gs
outsl
jbe
add
add
insb
sti
or
inc
gs
gs
add
jl
or
inc
jo
dec
inc
add
add
push
dec
inc
add
add
insl
jo
outsb
outsb
je
inc
popa
je
outsl
jb
gs
add
add
insb
gs
jns
add
add
dec
outsb
je
jb
popa
arpl
add
dec
popa
jb
ja
jb
add
add
dec
imul
push
inc
dec
add
inc
push
push
dec
push
pop
add
add
push
pop
push
push
inc
dec
add
push
outsl
data16
popa
jb
add
add
push
jns
gs
imul
push
outsl
data16
popa
jb
pop
dec
imul
je
push
imul
dec
push
pop
inc
jne
jb
outsb
je
gs
imul
insb
outsl
outsl
outsb
pop
dec
outsl
je
data16
add
add
roll
add
xor
add
jo
outsl
jb
jb
gs
add
add
ja
outsb
insb
outsl
outsl
outsb
cs
add
add
jb
outsb
fs
insb
xor
cs
add
add
mov
or
sub
add
xchg
dec
add
cs
add
pop
es
and
and
and
add
or
add
and
add
and
add
and
and
and
add
or
add
and
add
sub
jb
popa
je
push
jb
je
arpl
outsl
arpl
add
outsb
add
add
insl
arpl
je,pn
jo
add
add
add
ja
imul
popa
imul
arpl
jae
jbe
outsl
insb
popa
je
outsl
outsb
and
arpl
imul
jo
add
add
add
and
jb
jb
and
add
and
fs
xor
add
and
jb
jb
and
add
insl
arpl
je,pn
jo
add
add
add
ja
add
sub
add
sub
add
or
add
dec
outsl
jp
insb
insb
popa
das
xor
xor
sub
insl
jo
je
bound
and
dec
inc
and
xor
and
outsb
outsl
ja
and
and
add
add
add
je
outsl
outsb
add
imul
gs
xor
cs
insb
add
add
push
imul
jb
imul
gs
add
and
jb
jb
and
add
and
fs
xor
add
and
jb
jb
and
add
and
pop
pop
xor
xor
add
pop
pop
xor
xor
add
imul
pop
add
add
bound
add
add
bound
xor
add
bound
xor
add
imul
je,pn
jo
add
add
je
jo
add
add
add
and
pop
pop
add
add
jo
or
dec
add
add
or
inc
add
add
add
add
popa
insb
add
outsl
jb
gs
gs
outsl
jbe
add
outsl
push
gs
outsl
jbe
add
add
test
or
inc
gs
gs
add
mov
jo
dec
inc
add
add
push
dec
inc
add
add
insl
jo
outsb
outsb
je
inc
popa
je
outsl
jb
gs
add
add
insb
gs
jns
add
add
dec
outsb
je
jb
popa
arpl
add
dec
popa
jb
ja
jb
add
add
dec
imul
push
inc
dec
add
inc
push
push
dec
push
pop
add
add
push
pop
push
push
inc
dec
add
push
outsl
data16
popa
jb
add
add
push
jns
gs
imul
push
outsl
data16
popa
jb
pop
dec
imul
je
push
imul
dec
push
pop
inc
jne
jb
outsb
je
gs
imul
insb
outsl
outsl
outsb
pop
dec
outsl
je
data16
add
add
roll
add
xor
add
jo
outsl
jb
jb
gs
add
add
ja
outsb
insb
outsl
outsl
outsb
cs
add
add
jb
outsb
fs
insb
xor
cs
add
add
decl
adc
push
push
inc
dec
add
inc
push
push
push
inc
dec
push
pop
push
push
inc
push
add
add
inc
jbe
jb
outsl
outsb
add
add
pop
add
add
add
push
push
inc
dec
pop
inc
jne
jb
outsb
je
outsl
outsb
je
outsl
insb
push
gs
inc
outsl
outsb
je
outsl
insb
pop
push
gs
imul
popa
addr16
add
add
outsb
imul
push
outsb
popa
insl
gs
jo
jb
je
outsl
outsb
jae
push
outsb
imul
push
outsb
popa
insl
gs
jo
jb
je
outsl
outsb
jae
push
outsb
imul
push
outsb
popa
insl
gs
jo
jb
je
outsl
outsb
jae
add
add
push
outsb
imul
push
outsb
popa
insl
gs
jo
jb
je
outsl
outsb
jae
add
add
pop
ja
outsb
imul
imul
jne
je
outsb
add
incl
add
add
add
add
pushl
testl
js
pop
pop
xor
add
add
add
lock
adc
add
clc
add
adc
add
add
adc
add
or
or
push
popa
insb
add
add
adc
jb
gs
gs
outsl
jbe
add
add
adc
push
gs
outsl
jbe
add
add
sub
or
inc
gs
gs
add
cmp
or
inc
jo
dec
inc
add
add
push
dec
inc
add
add
insl
jo
outsb
outsb
je
inc
popa
je
outsl
jb
gs
add
add
insb
gs
jns
add
add
dec
outsb
je
jb
popa
arpl
add
dec
popa
jb
ja
jb
add
add
dec
imul
push
inc
dec
add
inc
push
push
dec
push
pop
add
add
push
pop
push
push
inc
dec
add
push
outsl
data16
popa
jb
add
add
push
jns
gs
imul
push
add
add
add
adc
add
rolb
or
inc
add
add
add
adc
add
loopne
or
push
popa
insb
add
add
adc
jb
gs
gs
outsl
jbe
add
add
adc
push
gs
outsl
jbe
add
add
add
or
inc
gs
gs
add
adc
or
inc
jo
dec
inc
add
add
push
dec
inc
add
add
insl
jo
outsb
outsb
je
inc
popa
je
outsl
jb
gs
add
add
insb
gs
jns
add
add
dec
outsb
je
jb
popa
arpl
add
dec
popa
jb
ja
jb
add
add
dec
imul
push
inc
dec
add
inc
push
push
dec
push
pop
add
add
push
pop
push
push
inc
dec
add
push
outsl
data16
popa
jb
add
add
push
jns
gs
imul
push
outsl
data16
popa
jb
pop
dec
imul
je
push
imul
dec
push
pop
inc
jne
jb
outsb
je
gs
imul
insb
outsl
outsl
outsb
pop
dec
outsl
je
data16
add
add
roll
add
xor
add
jo
outsl
jb
jb
gs
add
add
cld
add
adc
outsb
insb
outsl
outsl
outsb
cs
add
add
adc
or
jb
outsb
fs
insb
xor
cs
add
add
and
or
push
dec
inc
push
push
inc
push
inc
pop
dec
imul
je
push
imul
inc
jne
jb
outsb
je
gs
imul
dec
outsb
arpl
add
inc
jae
outsb
arpl
outsl
outsb
outsl
jne
add
add
inc
insb
insb
dec
popa
insl
add
jo
jb
outsl
outsb
popa
je
add
outsl
data16
push
je
jb
jne
add
jae
outsl
outsl
outsb
add
add
push
jns
dec
outsl
outsl
data16
add
inc
push
push
inc
push
inc
pop
dec
imul
je
push
imul
inc
jne
jb
outsb
je
gs
imul
dec
outsb
arpl
add
push
dec
inc
push
push
inc
push
inc
pop
dec
imul
je
push
imul
inc
jne
jb
outsb
je
gs
imul
add
add
add
add
add
add
imul
add
add
imul
add
add
add
add
imul
fs
je
je,pn
jo
add
add
popa
je,pn
jo
add
add
imul
add
add
imul
add
add
add
add
imul
dec
outsb
jae
popa
insb
insb
popa
je
outsl
outsb
and
js
imul
push
popa
je
and
xor
dec
jne
sub
and
xor
xor
cmp
xor
inc
dec
push
add
add
push
das
das
xor
xor
xor
cmp
xor
xor
xor
add
sub
outsb
dec
outsl
outsl
outsb
add
add
push
imul
add
add
outsb
dec
outsl
outsl
outsb
add
add
push
imul
add
add
pop
add
add
fs
je
add
add
insb
outsl
add
add
and
add
sub
jb
popa
je
push
jb
je
arpl
outsl
arpl
add
push
push
inc
dec
add
inc
push
push
push
inc
dec
push
pop
push
push
inc
push
add
add
inc
jbe
jb
outsl
outsb
add
add
and
add
sub
jb
popa
je
push
jb
je
arpl
outsl
arpl
jb
jb
outsb
add
add
sub
add
and
add
sub
jb
popa
je
dec
popa
imul
jb
jb
outsb
add
add
add
add
jb
popa
je
push
jb
je
arpl
outsl
arpl
add
jb
gs
xor
cs
insb
add
add
push
imul
jb
imul
gs
add
imul
gs
xor
cs
insb
add
add
push
jb
arpl
jae
fs
outsl
push
gs
imul
add
dec
outsl
popa
fs
imul
add
add
dec
gs
gs
xor
add
add
inc
jb
gs
imul
dec
gs
gs
xor
add
add
incl
add
add
sbb
add
add
cmp
add
aas
sub
add
add
incl
add
add
add
add
add
incl
add
add
outsl
fs
xor
dec
gs
add
add
dec
outsl
fs
xor
inc
imul
push
jb
arpl
jae
xor
js
add
add
outsl
arpl
jae
xor
jb
je
add
gs
je
push
outsl
outsl
insb
push
xor
popa
jo
push
add
imul
gs
xor
cs
insb
add
add
inc
gs
outsl
fs
gs
popa
jae
dec
popa
insl
gs
add
inc
outsb
jne
push
jb
arpl
jae
outsl
fs
gs
add
jne
push
jb
arpl
jae
jae
add
jo
popa
jo
cs
insb
add
add
add
imul
bound
xor
add
add
addr16
jb
xor
gs
and
jae
das
jne
add
inc
push
push
inc
push
inc
pop
dec
imul
je
push
imul
inc
jne
jb
outsb
je
gs
imul
dec
outsb
arpl
add
sub
add
pop
ja
outsb
imul
imul
push
jae
or
add
dec
push
dec
add
jb
outsb
popa
insl
gs
or
outsl
jbe
inc
imul
gs
jb
arpl
add
add
je
jb
arpl
jae
popa
insl
add
inc
gs
jb
arpl
jae
imul
add
pop
pop
xor
xor
add
pop
pop
xor
xor
popa
add
add
je,pn
bound
add
add
jo
gs
outsb
je
and
je
outsl
jb
gs
pop
push
gs
imul
je
outsl
jb
gs
add
add
push
dec
inc
pop
add
adc
add
add
add
rolb
add
add
inc
shlb
adc
js
adc
add
push
dec
pop
adc
add
jo
add
inc
add
add
add
add
add
add
add
inc
inc
add
push
add
inc
add
add
aad
xchg
push
enter
ja
xchg
xor
ja
popa
push
out
mov
les
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
rclb
mov
sub
mov
sbb
dec
jno
repz
test
ficompl
jmp
mov
hlt
movl
imul
std
in
leave
mov
add
insb
push
arpl
psubd
or
outsb
cmp
imul
addr16
add
aam
dec
std
test
movsl
cli
test
xor
leave
mov
lods
jecxz
fdivs
jne
filds
or
shrl
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
or
or
and
or
adc
stos
sbb
data16
inc
fdivl
jno
add
aad
mov
mov
movsl
in
lahf
xor
mov
js
stc
add
mov
push
loope
or
insl
or
pop
arpl
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
mov
bound
ficoml
gs
aam
pop
popa
mov
into
push
mov
je
mov
aam
movsl
fisttps
xchg
fdivrs
sti
hlt
shrl
imul
mov
sarb
add
in
add
pop
dec
or
cmp
add
daa
adc
or
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
inc
aad
scas
ja
popf
adc
push
fdivl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
xorb
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
andl
shrb
ss
push
xchg
ja
int3
add
mov
das
es
lds
or
sub
mov
cmpsl
call
ret
shlb
sbb
ret
es
pushf
mov
insl
add
ss
jmp
addr16
jb
push
add
adc
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
or
lret
pop
or
adc
sahf
gs
clc
sar
imul
insb
push
js
or
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
repnz
lret
mov
cmpsb
mov
sarb
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
sub
inc
xor
sbb
push
sub
fs
hlt
ja
xchg
inc
dec
or
ret
call
hlt
jecxz
dec
mov
dec
jle
mov
sub
cwtl
xchg
ret
and
push
shll
js
inc
out
popa
push
xlat
scas
cs
mov
xlat
mov
sbb
test
sbbb
add
lcall
out
insb
insb
fistpll
inc
aam
push
pop
int
and
xchg
jecxz
lahf
mov
inc
mov
popa
ja
mov
out
repz
gs
fisubrl
lahf
inc
inc
sub
imul
jo
scas
imul
out
pop
sub
sub
pop
or
sbb
repz
fbstp
push
jo
xor
hlt
div
sub
jne
sbb
xor
pop
nop
sti
mov
test
jns
test
cmp
jns
jae
dec
call
inc
cmp
ficomps
dec
jns
inc
jle
jmp
sbb
fildl
mov
lea
fnstcw
mov
dec
hlt
mov
or
xchg
lea
or
int3
pop
dec
xor
inc
mov
outsb
lret
ja
pop
mov
mov
xchg
push
xchg
xchg
push
cwtl
xlat
ficoms
test
loope
xchg
lret
cli
cmc
pop
xlat
bound
out
imul
push
inc
lahf
test
pop
adc
push
sbb
adc
and
inc
and
out
out
and
cmp
dec
mov
lahf
mov
and
cmpsl
xor
mov
lods
out
sarb
mov
adcl
insb
mov
xchg
adc
jle
push
jns
das
mov
and
je
or
repnz
dec
push
jo
gs
out
jle
repz
mov
xchg
rcl
cmp
mov
js
mov
test
cwtl
cmpl
test
mov
mov
scas
adc
out
pop
push
insb
hlt
inc
int
fldcw
push
ret
adc
add
inc
ljmp
ja
inc
xlat
ss
push
out
mov
mov
movsl
test
jno
mov
ja
insb
pop
push
dec
sub
or
sub
add
adc
cwtl
mov
nop
bound
xchg
push
push
hlt
out
les
fdecstp
jmp
lea
imul
pushf
sub
sub
lods
dec
jo
outsl
sbb
sub
loope
fisubs
pop
lds
push
call
dec
in
mov
movsb
ret
addr16
test
mov
lahf
fdivrp
cmp
repz
jnp
call
cmp
mov
or
stos
mov
sbb
icebp
adc
sub
jae
xor
mov
jo
cmc
shrb
addl
mov
arpl
cli
lret
loope
int3
mov
stc
lea
scas
or
lea
mov
test
and
pop
insb
cmp
les
adc
sub
dec
add
sar
push
or
cmp
popf
cmpsl
push
mov
xchg
adc
in
xor
cltd
bound
fcoms
into
pop
dec
loope
push
jle
push
xchg
sub
int3
bound
mov
xor
call
mov
pop
lods
ret
outsb
xchg
dec
insb
das
mov
adc
test
push
and
sub
adc
jns
xchg
movsl
dec
mov
movsb
daa
sub
repnz
fdivrp
shlb
out
mov
shlb
es
xchg
aas
mov
adc
out
jp
std
pop
mov
gs
pop
jle
aaa
or
jbe
dec
divl
lahf
adc
jb
and
add
add
aaa
push
add
test
pop
mov
or
jmp
lret
push
mov
lea
push
adc
cmp
test
or
stc
sbb
push
xchg
fmuls
or
pop
or
es
leave
in
push
ja
pop
sub
das
sbb
fildll
sbb
repnz
adc
dec
jae
adc
cmp
and
adc
mov
pop
loopne
dec
cmp
sub
cmp
clc
or
cmp
inc
aas
or
cmp
push
add
outsl
jge
aaa
ss
fidivl
test
xchg
xor
imul
fldl
adc
nop
in
and
xor
daa
leave
pop
sub
and
mov
and
mov
sub
fidivrs
sub
ds
sbb
sub
lcall
das
rorb
jno
pop
push
jae
xor
jb
and
push
jbe
icebp
pop
je
fwait
aad
js
mov
mov
jg
or
jl
je
jns
push
inc
js
mov
jnp
cs
insl
fdivrp
cmp
nop
cli
outsb
insb
xchg
push
push
xor
cmp
imul
adc
sub
shr
aam
cmpsb
gs
fs
imul
dec
pop
mov
push
dec
jns
xchg
dec
cld
arpl
dec
lret
or
xchg
mov
dec
movsl
fstpl
inc
scas
lock
inc
testb
shll
inc
xor
inc
jae
cmovo
out
inc
sbb
push
xor
mov
mov
mov
clc
push
mov
adc
push
aad
mov
pop
fists
pop
xchg
pop
mov
movsb
pop
xor
jmp
add
sub
outsl
pop
insl
das
lods
pop
sbbb
loope
jno
loopne
iret
mov
fldenv
cmp
imul
out
addr16
in
dec
es
mov
out
push
sahf
mov
in
in
das
call
mov
stos
jmp
pop
imul
rcl
cld
sahf
insb
xchg
test
adc
cli
sbb
sti
inc
les
clc
dec
jmp
ret
cmp
inc
icebp
xchg
inc
or
mov
xchg
test
pop
js
push
aaa
mov
fidivrl
jecxz
fstpt
mov
shlb
cmc
fucom
dec
aaa
or
xlat
out
test
fsubr
aam
mov
aad
movsb
shlb
into
mov
rcrl
and
adc
pop
lds
xchg
pushf
les
fcmovb
dec
inc
sbb
int3
push
push
ret
xchg
ret
mov
call
dec
lret
lahf
lds
enter
leave
je
inc
int3
inc
insl
xchg
sbb
ror
mov
scas
xchg
ja
insl
nop
cs
sub
pushf
cmpsb
xchg
stos
push
fs
repnz
clc
mov
sahf
xchg
adc
pushf
mov
outsl
mov
adc
xor
xor
dec
mov
or
in
popf
orb
dec
add
mov
mov
push
pop
and
push
adc
faddl
arpl
pop
xchg
shl
test
into
add
stos
stc
outsb
movsb
stos
jl
jmp
dec
adc
scas
adc
lods
sbb
xor
inc
aas
mov
les
clc
mov
stos
std
jl
popf
xchg
mov
mov
sbb
mov
cmpsl
inc
mov
int
mov
fcmovne
mov
mov
mov
cmovns
push
dec
adc
mov
mov
fidivrs
pop
pop
mov
add
add
gs
stos
out
scas
mov
push
xchg
bound
fcompl
and
out
sub
fs
outsl
add
dec
fstp
push
xor
loopne
adc
lahf
push
sbb
xor
cli
jno
lods
inc
enter
lods
cmpsl
addr16
or
outsl
into
int
jg
xchg
adc
mov
aas
sahf
rcrb
xchg
call
jae
lods
and
mov
inc
jp
ds
xor
mov
cmp
rolb
xchg
or
in
xchg
loop
pop
test
xchg
fstpl
iret
aas
sub
ja
adc
ljmp
in
inc
push
clc
sub
les
and
push
sahf
loop
outsl
dec
jg
or
jge
inc
aad
sar
dec
rcrb
lds
xchg
lahf
mov
inc
std
mov
xchg
hlt
adc
call
adc
pop
aas
test
mov
sbb
mov
jbe
push
lret
pop
jg
test
push
shlb
pop
mov
sbb
pop
mov
adc
shl
cmpb
das
lret
jnp
dec
ja
mov
push
add
dec
mov
outsl
inc
nop
call
cld
jle
data16
sbb
ficoml
daa
mov
mov
out
mov
mov
mov
cmpl
shrb
hlt
pop
outsb
xchg
add
cmp
lcall
pop
xchg
sub
mov
pop
clc
or
test
push
mov
fists
inc
addr16
fwait
push
add
in
mov
das
dec
leave
xor
inc
arpl
adc
push
mov
aaa
pop
in
push
loope
inc
call
cwtl
call
scas
push
out
aaa
push
clc
inc
addb
jmp
cltd
scas
xlat
loopne
lret
xor
mov
in
pop
shl
push
mov
push
inc
aad
in
ljmp
bound
inc
xchg
out
xor
orb
sub
push
in
cmp
pop
cmp
outsb
xor
or
xchg
movsb
loope
mov
das
sub
dec
dec
cmc
scas
repz
xor
mov
xchg
and
hlt
js
scas
dec
rol
std
shlb
pop
xchg
idivl
sub
xchg
lahf
pop
repnz
and
add
jle
cmc
mov
out
mov
pop
push
mov
ret
mov
flds
push
ljmp
xor
and
push
mov
roll
outsb
mov
push
or
adc
ljmp
into
movsl
adc
bswap
fsts
xchg
test
lods
sub
sbb
and
xorb
fcoms
add
scas
iret
jb
leave
jae
and
movsb
push
inc
xchg
sbb
test
pop
adc
out
dec
jbe
mov
into
lea
inc
fsubr
inc
clc
fs
jns
stc
xor
xchg
inc
fidivl
lcall
mov
lock
imul
ss
test
cs
mov
call
mov
loope
into
cs
inc
out
add
addl
pop
std
pop
jmp
icebp
and
subb
aam
into
mov
iret
test
jg
pop
es
outsb
mov
jbe
out
lret
sbb
loope
push
adc
cmpl
adc
mov
jle
cmp
pushf
in
adc
outsb
push
sbb
cmpsl
push
data16
jno
ds
outsl
sub
mov
add
xchg
out
mov
dec
or
sbb
rolb
pop
outsb
sti
ret
neg
jmp
pop
test
or
xchg
popa
mov
fiadds
add
add
xor
cltd
or
pop
insl
les
jo
hlt
xor
push
fisttpl
movsb
loopne
jmp
mov
mov
sub
jl
out
sub
xchg
sbb
mov
repnz
inc
ficomps
fcmovbe
jge
fucom
jmp
aam
push
adc
adc
imul
mov
in
adc
pop
dec
arpl
insb
fsqrt
arpl
outsb
and
dec
imul
in
addr16
cmp
in
dec
add
inc
rorb
mov
xor
mov
insb
fstpt
stc
inc
xor
insb
jecxz
fistps
or
pop
fnstenv
lods
push
fiadds
cmp
xlat
push
cmpb
hlt
mov
mov
and
mov
movsl
movaps
mov
or
or
mov
or
and
outsl
jl
pop
push
sbb
cmp
add
jno
cwtl
shlb
mov
jno
test
lahf
mov
aam
js
leave
mov
xchg
or
sbb
or
sub
out
pop
add
push
hlt
sbb
popa
bound
bound
dec
insb
push
xchg
in
sbb
movsl
jnp
or
shl
les
mov
adc
mov
jl
fstpl
dec
mov
jl
sti
aam
gs
mov
pop
cmp
add
xor
dec
fbld
xlat
movsb
rol
insl
rcl
hlt
sti
inc
imul
cld
lods
mov
pusha
mov
jae
add
pop
fisttpll
jno
daa
add
mov
or
xchg
mov
and
mov
data16
into
popa
in
pop
fdivrp
push
sub
leave
cwtl
mov
cwtl
and
xlat
test
pop
mov
pop
cs
xorl
mov
mov
add
rcrb
popf
shlb
add
es
jecxz
or
xchg
cmp
push
test
push
iret
or
add
mov
setae
mov
push
mull
pop
andb
sbb
outsb
imul
aam
jbe
shrl
loopne
fidivrl
fisttpll
stc
mov
out
stc
pop
mov
inc
pusha
mov
aad
mov
jle
fadd
les
repnz
sarl
push
addr16
mov
fisttpll
ss
fmuls
sbb
dec
testb
pusha
fbld
ret
test
fists
outsb
mov
inc
imul
sbb
push
ja
mov
add
mov
lds
or
sub
add
xlat
jmp
sub
sahf
mov
scas
sbb
in
arpl
es
mov
or
ss
jb
test
add
xchg
mov
jp
jnp
sub
xchg
rorb
or
or
fbld
xchg
rcl
icebp
aam
inc
push
fiaddl
int
mov
ja
sbb
pop
out
punpckhdq
push
cmp
adc
or
sahf
clc
bound
rcll
insb
iret
inc
mov
or
adcl
ret
es
shlb
testl
ja
scas
shrl
pop
faddl
or
fdivrs
lock
mov
iret
jg
mov
jmp
lret
mov
xchg
xor
mov
add
push
ficoms
and
addr16
les
mov
sub
xchg
mov
mov
mov
sub
add
add
sbb
inc
xor
bound
fs
lds
pop
cmpsl
xchg
xchg
enter
rol
mov
mov
hlt
fxch
lods
mov
or
scas
jle
sahf
subl
dec
ret
push
fldenv
adc
jo
popa
out
inc
xchg
cs
xlat
push
aaa
mov
adc
cwtl
mov
add
sbb
sbb
ss
lcall
insb
sbb
inc
aas
pop
push
sahf
xchg
test
mov
inc
and
call
shl
ret
fiadds
gs
pop
scas
stos
inc
inc
lahf
jmp
imul
jbe
std
imul
sub
or
or
sbb
insl
filds
repz
pop
pop
mov
jo
jno
imul
sub
mull
sbb
jne
pop
mov
sti
push
test
jns
mov
cmp
jns
push
dec
mov
pop
fisubrs
cmp
jns
add
ret
xchg
push
sbb
xchg
adc
mov
cmpl
lds
or
xchg
into
pop
int3
add
inc
xlat
xor
cli
bound
mov
mov
aas
xchg
xchg
push
xchg
cwtl
push
int3
test
shl
cli
lret
xchg
jb
xlat
pop
imul
inc
push
mov
pop
dec
test
unpckhps
sbb
jo
cmp
std
imul
lret
or
add
lahf
loop
cmpsl
int3
and
mov
loope
mov
shr
lahf
adc
insb
leave
dec
and
rclb
ljmp
ja
das
aas
jns
ss
mov
or
je
adc
xor
push
dec
lea
pusha
jle
xor
out
std
ret
rclb
cmp
lcall
js
cmpsl
cmp
sbbl
or
lret
mov
pop
dec
inc
hlt
insb
push
insl
fnstcw
int
ret
repz
adc
inc
and
shrl
ja
adcb
out
movsl
add
test
mov
push
ja
cwtl
pop
insb
adc
ss
daa
sbb
fnstsw
xorl
mov
push
rcr
hlt
lds
out
hlt
push
out
ret
neg
xchg
aad
pop
mov
test
xor
imul
jns
shll
lods
clc
pop
sbb
inc
sub
data16
loope
lds
mov
dec
repz
mov
in
test
xchg
sub
in
scas
mov
repz
cmp
call
imul
or
stos
test
jg
sbb
mov
pop
adc
xor
xor
dec
jo
mov
imul
jp
xorl
pop
mov
lret
cli
xlat
dec
shl
out
stc
int3
mov
loopne
test
mov
and
popf
mov
inc
mov
and
sbb
insb
pop
xor
push
test
cwtl
inc
jle
test
rorb
cmpl
hlt
pop
mov
cmpsl
popf
stos
adc
add
cld
dec
xor
bound
into
jns
fmuls
dec
pop
push
cli
jle
jnp
sub
aam
lea
push
pop
mov
fnop
pop
jle
in
inc
gs
dec
xchg
outsb
jne
mov
call
or
push
aas
sub
mov
sbb
mov
daa
repnz
mov
mov
out
and
loope
or
mov
jle
shlb
imul
inc
cmp
ja
fsubl
mov
jle
hlt
out
push
or
testl
mov
adc
xor
add
add
ret
add
pop
pop
or
jmp
lea
dec
push
test
adc
psrlw
or
push
out
loope
sbb
fs
xchg
push
or
inc
cmp
sbb
mov
sbb
lods
sbb
popa
fwait
sbb
mov
adc
cwtl
call
mov
cmpsb
adc
xchg
adc
xor
push
mov
in
cmp
loopne
sub
cmp
xchg
mov
or
mov
xchg
cmp
pop
pop
pop
aaa
pushf
jge
xor
sbb
test
xchg
aad
xor
imul
adc
frstor
in
and
out
xor
es
dec
dec
and
cltd
and
and
adc
sub
pusha
inc
sub
or
jno
hlt
sub
jbe
cs
enter
mov
shlb
divl
pop
scas
jb
xor
jbe
dec
sub
jb
aad
inc
jle
fdivrl
dec
mov
jge
or
jl
bound
jns
je
js
push
xchg
jp
mov
std
insb
mov
inc
xchg
cli
fisubrs
nop
jmp
push
in
pop
push
repz
arpl
aas
popa
sub
push
cmpsb
xlat
aam
fs
mov
dec
xlat
lret
and
mov
dec
dec
xchg
jne
dec
fisubs
dec
sbb
lret
dec
pop
mov
dec
cwtl
frstor
inc
push
lock
inc
inc
dec
testb
inc
int
inc
inc
addps
dec
out
inc
mov
push
xor
addr16
jne
ds
mov
or
rorb
adc
push
mov
cmp
pop
and
pop
in
xchg
xchg
pop
sub
add
inc
pop
pop
lods
das
insl
loope
sbb
loop
iret
out
jecxz
movsl
cmp
pop
out
fldcw
mov
or
cmp
in
paddsb
hlt
popa
call
in
mov
jmp
ss
imul
rcl
xchg
insb
sahf
call
test
sti
fdivrs
stc
sahf
les
pop
scas
jne
add
dec
bnd
lock
adc
or
cmc
lret
sub
testb
fnstcw
pusha
fdivrs
mov
fstpt
jecxz
fidivs
mov
and
fdivl
dec
in
imul
test
fdivs
shlb
add
mov
jo
shlb
pop
lds
adc
pushf
xchg
daa
fisubrl
jle
sbb
ret
int3
ret
xchg
cmp
rcl
mov
lret
dec
scas
test
pop
lahf
enter
leave
or
icebp
int3
inc
pop
je
xchg
iret
rcl
into
add
inc
nop
insl
cld
ja
sub
xchg
jmp
ds
xchg
fs
stos
xchg
and
repnz
loopne
lds
jle
iret
pushf
cmp
xchg
popf
cli
jns
cwtl
mov
and
ja
adc
repz
mov
pop
mov
mov
sbbb
mov
orb
mov
push
mov
sbb
int3
push
test
arpl
aad
or
test
mov
into
stos
movsb
outsb
stc
scas
jmp
jl
sub
dec
lods
outsl
lods
adc
sbbl
movsb
jne
jbe
mov
inc
mov
cmp
mov
mov
jae
mov
sbb
mov
cmpsl
mov
mov
fisttpl
cmpxchg
mov
punpckldq
xlat
and
adc
testb
xchg
pushf
xor
loopne
mov
cwtl
xor
add
add
mov
or
mov
mov
out
bound
xor
xlat
cmp
jge
dec
mov
loopne
xlat
add
mov
loopne
ja
pop
arpl
push
push
sbb
call
adc
jno
jnp
enter
lods
jne
or
into
outsl
es
lods
jg
sub
movsb
mov
xchg
rcrb
mov
and
xor
pop
or
addr16
xchg
shrb
push
cmp
in
pop
or
pop
lock
in
xchg
xchg
fnstsw
loopne
iret
dec
pop
ja
sub
ljmp
jecxz
in
fmuls
lock
mov
pop
and
sub
sahf
push
dec
jg
outsl
test
or
insl
cld
rcrb
lahf
rorb
and
lds
sub
mov
inc
and
xchg
test
call
cmp
xor
not
adc
iret
push
lret
mov
ret
pusha
test
jo
out
pop
mov
test
fistpll
ret
imul
push
ret
ja
imul
cpuid
jae
push
sub
mov
cwtl
cmc
cld
sar
nop
out
push
jle
fidivl
sbb
mov
inc
sub
mov
cmp
jg
sarb
xchg
outsb
pop
hlt
cmp
testl
xchg
das
aas
mov
xchg
pop
in
mov
pusha
push
or
pop
xor
dec
test
cmpsb
icebp
iret
mov
inc
cs
addr16
daa
jo
jno
dec
mov
xorb
inc
out
imul
pushf
roll
push
jb
pop
aaa
lret
pop
loope
scas
dec
push
incl
call
mov
aaa
out
push
add
inc
clc
mov
jmp
js
mov
xlat
scas
xor
in
pop
mov
push
in
pop
inc
push
jle
in
sbb
bound
and
inc
or
xor
out
mov
aam
push
stc
mov
in
pop
cmp
cmp
xor
or
cmp
movsb
add
dec
sub
scas
cmc
dec
dec
xor
jbe
mov
mov
sbb
rorb
sar
add
push
movsw
notl
cmp
lahf
xchg
xchg
in
icebp
repnz
imul
cmc
xlat
jle
out
rorl
ret
push
jp
jmp
fnop
mov
xor
xor
and
stc
popa
lcall
mov
lods
mov
ss
jb
lcall
xchg
loope
xchg
adc
int
lods
mov
inc
andb
jne
jp
adc
scas
dec
jae
fwait
push
movsb
icebp
and
sbb
test
jbe
out
push
into
icebp
mov
inc
lea
call
inc
xchg
push
xor
es
jmp
mov
or
mov
lock
bound
fwait
push
mov
xchg
xchg
cltd
xor
es
mov
cld
mov
adc
push
ja
ss
adc
out
mov
loopne
jbe
pop
notb
dec
jmp
ds
insb
addb
aam
popa
inc
mov
stos
jle
test
cmp
es
jl
mov
pop
sbb
mov
repz
in
test
adcl
ja
mov
ret
add
cmp
cltd
in
mov
push
outsb
xchg
cmpsl
fidivl
sub
fisubrs
sarl
lock
out
mov
mov
push
inc
sarb
dec
sti
outsb
pop
sub
push
addr16
cmpsb
int3
mov
pop
je
into
jp
mov
push
icebp
subb
add
add
shlb
adc
or
shlb
and
and
shlb
adc
adc
push
mov
adc
and
and
push
mov
adc
addb
add
add
or
and
addb
add
add
and
addb
add
add
mov
add
add
add
push
mov
xor
xor
add
pop
add
add
pop
add
add
push
add
or
add
jae
adc
pop
add
or
add
xor
add
rolb
pop
or
add
pusha
add
or
add
or
add
or
add
or
add
pop
push
add
or
add
sbb
add
nop
add
pop
cmp
add
js
add
cmp
add
rolb
adc
adc
add
push
add
or
add
or
add
or
add
pop
add
add
push
add
or
adc
pop
sub
add
je
add
xor
add
enter
or
add
or
add
test
add
add
add
test
add
inc
add
or
add
pop
or
add
pop
add
or
add
cwtl
add
push
add
or
or
add
fadds
adc
pop
add
or
or
add
mov
add
or
add
clc
add
pop
add
add
push
add
or
add
pop
and
add
jb
add
xor
add
les
adc
or
add
bound
add
and
add
movsb
add
or
add
or
add
or
add
pop
pop
add
or
add
sbb
add
xchg
add
inc
add
or
add
cmp
add
aam
adc
adc
add
push
add
sub
add
mov
add
or
add
mov
add
dec
add
or
add
pop
add
add
or
add
add
adc
xor
add
jbe
add
add
or
add
pop
sldt
or
add
add
or
add
xchg
add
inc
add
or
add
pop
or
add
pop
add
or
add
or
add
jle
add
add
or
add
pop
sbb
add
outsb
add
or
add
or
add
mov
add
dec
add
or
add
add
add
push
add
or
add
pop
pop
add
or
add
xor
add
ret
pop
or
add
popa
add
or
add
or
add
or
add
or
add
pop
push
add
or
add
sbb
add
xchg
add
pop
cmp
add
jns
add
cmp
add
rolb
adc
adc
add
imul
add
mov
add
or
add
mov
add
dec
add
or
add
pop
add
add
push
add
or
add
pop
sub
add
jne
add
xor
add
pop
or
add
or
add
or
add
or
add
ljmp
or
add
sbb
add
push
add
or
add
cmp
add
pop
pop
add
or
add
sub
add
or
add
or
add
cli
add
pop
add
add
push
add
or
add
pop
and
add
jae
add
xor
add
movb
pop
or
add
arpl
add
and
add
cmpsb
add
or
add
or
add
or
add
pop
pop
add
or
add
sbb
add
xchg
add
inc
add
or
add
cmp
add
add
pop
adc
add
imul
or
add
or
add
or
add
or
add
pop
add
add
or
add
add
adc
xor
add
ja
add
aaa
add
or
add
pop
sldt
or
add
daa
add
or
add
or
add
or
add
pop
or
add
pop
add
or
add
or
add
or
add
aas
add
or
add
pop
sbb
add
outsl
add
or
add
or
add
or
add
or
add
add
add
push
add
or
add
jae
adc
pop
add
or
add
xor
add
roll
pop
or
add
pusha
add
or
add
or
add
or
add
or
add
pop
push
add
or
add
sbb
add
xchg
add
pop
cmp
add
js
add
cmp
add
roll
adc
adc
add
push
add
or
add
or
add
or
add
pop
add
add
push
add
or
adc
pop
sub
add
je
add
xor
add
leave
add
pop
or
add
or
add
test
add
or
add
jmp
add
or
or
add
cltd
add
push
add
or
or
add
flds
adc
pop
add
or
or
add
mov
add
or
add
stc
add
pop
add
add
push
add
or
add
pop
and
add
jb
add
xor
add
lds
adc
or
add
bound
add
and
add
movsl
add
or
add
or
add
or
add
pop
pop
add
or
add
sbb
add
xchg
add
inc
add
or
add
cmp
add
aad
adc
adc
add
push
add
sub
add
mov
add
or
add
mov
add
dec
add
or
add
pop
add
add
or
add
add
adc
xor
add
jbe
add
add
or
add
pop
sldt
or
add
add
or
add
or
add
or
add
pop
or
add
pop
add
or
add
or
add
or
add
add
or
add
pop
sbb
add
outsb
add
or
add
or
add
or
add
or
add
add
add
push
add
or
add
pop
pop
add
or
add
xor
add
ret
add
pop
or
add
popa
add
or
add
or
add
or
add
or
add
pop
push
add
or
add
sbb
add
xchg
add
pop
cmp
add
jns
add
cmp
add
roll
adc
adc
add
imul
add
mov
add
or
add
mov
add
dec
add
or
add
pop
add
add
push
add
or
add
pop
sub
add
jne
add
xor
add
pop
or
add
or
add
or
add
or
add
jmp
adc
or
add
pop
add
or
add
push
add
or
add
cmp
add
pop
pop
add
or
add
sub
add
or
add
or
add
sti
add
pop
add
add
push
add
or
add
pop
and
add
jae
add
xor
add
movl
add
arpl
add
and
add
cmpsl
add
or
add
or
add
or
add
pop
pop
add
or
add
sbb
add
xchg
add
inc
add
or
add
cmp
add
xlat
add
pop
adc
add
imul
or
add
or
add
or
add
or
add
pop
add
add
or
add
add
adc
xor
add
ja
add
aaa
add
or
add
pop
sldt
or
add
daa
add
or
add
or
add
or
add
pop
or
add
pop
add
or
add
or
add
or
add
aas
add
or
add
pop
sbb
add
outsl
add
or
add
or
add
or
add
or
add
add
add
adc
add
adc
add
add
add
sbb
and
sbb
add
adc
add
push
add
add
adc
addl
sbb
pop
add
add
popa
add
add
add
adc
xor
sbb
add
adc
add
add
add
adc
adc
adc
add
or
pop
add
add
add
add
add
add
or
add
add
add
add
add
add
push
add
or
add
jae
adc
pop
add
or
add
xor
add
rolb
pop
or
add
pusha
add
or
add
or
add
or
add
or
add
pop
push
add
or
add
sbb
add
nop
add
pop
cmp
add
js
add
cmp
add
rolb
adc
adc
add
push
add
or
add
or
add
or
add
pop
add
add
push
add
or
adc
pop
sub
add
je
add
xor
add
enter
or
add
or
add
test
add
add
add
test
add
inc
add
or
add
pop
or
add
pop
add
or
add
cwtl
add
push
add
or
or
add
fadds
adc
pop
add
or
or
add
mov
add
or
add
clc
add
pop
add
add
push
add
or
add
pop
and
add
jb
add
xor
add
les
adc
or
add
bound
add
and
add
movsb
add
or
add
or
add
or
add
pop
pop
add
or
add
sbb
add
xchg
add
inc
add
or
add
cmp
add
aam
adc
adc
add
push
add
sub
add
mov
add
or
add
mov
add
dec
add
or
add
pop
add
add
or
add
add
adc
xor
add
jbe
add
add
or
add
pop
sldt
or
add
add
or
add
xchg
add
inc
add
or
add
pop
or
add
pop
add
or
add
or
add
jle
add
add
or
add
pop
sbb
add
outsb
add
or
add
or
add
mov
add
dec
add
or
add
add
add
push
add
or
add
pop
pop
add
or
add
xor
add
ret
pop
or
add
popa
add
or
add
or
add
or
add
or
add
pop
push
add
or
add
sbb
add
xchg
add
pop
cmp
add
jns
add
cmp
add
rolb
adc
adc
add
imul
add
mov
add
or
add
mov
add
dec
add
or
add
pop
add
add
push
add
or
add
pop
sub
add
jne
add
xor
add
pop
or
add
or
add
or
add
or
add
ljmp
or
add
sbb
add
push
add
or
add
cmp
add
pop
pop
add
or
add
sub
add
or
add
or
add
cli
add
pop
add
add
push
add
or
add
pop
and
add
jae
add
xor
add
movb
pop
or
add
arpl
add
and
add
cmpsb
add
or
add
or
add
or
add
pop
pop
add
or
add
sbb
add
xchg
add
inc
add
or
add
cmp
add
add
pop
adc
add
imul
or
add
or
add
or
add
or
add
pop
add
add
or
add
add
adc
xor
add
ja
add
aaa
add
or
add
pop
sldt
or
add
daa
add
or
add
or
add
or
add
pop
or
add
pop
add
or
add
or
add
or
add
aas
add
or
add
pop
sbb
add
outsl
add
or
add
or
add
or
add
or
add
add
add
push
add
or
add
jae
adc
pop
add
or
add
xor
add
roll
pop
or
add
pusha
add
or
add
or
add
or
add
or
add
pop
push
add
or
add
sbb
add
xchg
add
pop
cmp
add
js
add
cmp
add
roll
adc
adc
add
push
add
or
add
or
add
or
add
pop
add
add
push
add
or
adc
pop
sub
add
je
add
xor
add
leave
add
pop
or
add
or
add
test
add
or
add
jmp
add
or
or
add
cltd
add
push
add
or
or
add
flds
adc
pop
add
or
or
add
mov
add
or
add
stc
add
pop
add
add
push
add
or
add
pop
and
add
jb
add
xor
add
lds
adc
or
add
bound
add
and
add
movsl
add
or
add
or
add
or
add
pop
pop
add
or
add
sbb
add
xchg
add
inc
add
or
add
cmp
add
aad
adc
adc
add
push
add
sub
add
mov
add
or
add
mov
add
dec
add
or
add
pop
add
add
or
add
add
adc
xor
add
jbe
add
add
or
add
pop
sldt
or
add
add
or
add
or
add
or
add
pop
or
add
pop
add
or
add
or
add
or
add
add
or
add
pop
sbb
add
outsb
add
or
add
or
add
or
add
or
add
add
add
push
add
or
add
pop
pop
add
or
add
xor
add
ret
add
pop
or
add
popa
add
or
add
or
add
or
add
or
add
pop
push
add
or
add
sbb
add
xchg
add
pop
cmp
add
jns
add
cmp
add
roll
adc
adc
add
imul
add
mov
add
or
add
mov
add
dec
add
or
add
pop
add
add
push
add
or
add
pop
sub
add
jne
add
xor
add
pop
or
add
or
add
or
add
or
add
jmp
adc
or
add
pop
add
or
add
push
add
or
add
cmp
add
pop
pop
add
or
add
sub
add
or
add
or
add
sti
add
pop
add
add
push
add
or
add
pop
and
add
jae
add
xor
add
movl
add
arpl
add
and
add
cmpsl
add
or
add
or
add
or
add
pop
pop
add
or
add
sbb
add
xchg
add
inc
add
or
add
cmp
add
xlat
add
pop
adc
add
imul
or
add
or
add
or
add
or
add
pop
add
add
or
add
add
adc
xor
add
ja
add
aaa
add
or
add
pop
sldt
or
add
daa
add
or
add
or
add
or
add
pop
or
add
pop
add
or
add
or
add
or
add
aas
add
or
add
pop
sbb
add
outsl
add
or
add
or
add
or
add
or
add
add
add
adc
add
adc
add
add
add
sbb
and
sbb
add
adc
add
push
add
add
adc
addl
sbb
pop
add
add
popa
add
add
add
adc
xor
sbb
add
adc
add
add
add
adc
adc
adc
add
or
pop
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
jae
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
push
add
add
adc
sbb
and
xor
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
sbb
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
adc
add
pop
or
or
or
add
or
mov
or
dec
add
add
add
add
or
lods
add
add
add
add
add
or
pushf
add
add
add
add
add
or
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
lds
or
and
add
add
or
in
or
adc
add
add
or
aad
or
xor
add
add
or
cmc
add
add
add
add
or
int
or
sub
add
add
or
in
add
add
add
add
or
fldl
or
cmp
add
add
or
std
add
add
add
add
add
add
add
add
or
push
add
add
add
add
add
add
add
add
add
add
add
add
or
jae
or
repz
add
add
add
add
add
add
add
add
add
or
dec
add
add
add
add
add
add
add
add
add
add
add
add
or
imul
add
add
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
add
add
add
add
add
add
add
add
or
jnp
or
sti
add
add
add
add
add
add
add
add
add
add
or
inc
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
or
push
add
add
add
add
add
add
add
add
add
add
add
add
or
ja
or
testl
or
str
add
add
add
add
add
or
dec
add
add
add
add
add
add
add
add
add
add
add
add
or
outsl
add
add
add
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
add
add
add
add
add
add
add
add
or
jg
or
incl
or
incl
or
add
pop
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
pop
pop
pop
pop
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
sldt
adc
adc
adc
adc
adc
adc
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
or
or
or
or
or
or
push
push
push
movups
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
push
push
push
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
sbb
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
add
add
add
pusha
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
pop
or
clc
pop
or
shlb
or
adc
adc
pop
or
sub
or
inc
pop
or
push
pop
or
shll
add
mov
adc
add
nop
inc
or
inc
add
add
add
add
popa
insb
add
outsl
jb
gs
gs
outsl
jbe
add
outsl
push
gs
outsl
jbe
add
add
rolb
inc
gs
gs
add
rolb
adc
jo
inc
add
add
push
dec
inc
add
add
insl
jo
outsb
outsb
je
inc
popa
je
outsl
jb
gs
add
add
insb
gs
jns
add
add
dec
outsb
je
jb
popa
arpl
add
dec
popa
jb
ja
jb
add
add
dec
imul
push
inc
dec
add
inc
push
push
dec
push
pop
add
add
push
pop
push
push
inc
dec
add
push
outsl
data16
popa
jb
add
add
push
jns
gs
imul
push
outsl
data16
popa
jb
pop
dec
imul
je
push
imul
dec
push
pop
inc
jne
jb
outsb
je
gs
imul
insb
outsl
outsl
outsb
pop
dec
outsl
je
data16
add
add
roll
add
xor
add
jo
outsl
jb
jb
gs
add
add
ja
outsb
insb
outsl
outsl
outsb
cs
add
add
jb
outsb
fs
insb
xor
cs
add
add
dec
push
add
inc
dec
inc
add
and
add
and
add
and
add
and
add
dec
dec
add
add
dec
dec
inc
push
add
add
dec
dec
dec
dec
add
add
dec
dec
inc
push
add
add
popaw
insb
jae
add
add
insb
jae
add
add
data16
popa
jb
pop
dec
imul
je
dec
outsb
je
jb
gs
inc
js
insb
outsl
jb
jb
dec
popa
imul
popa
jb
and
add
je
jo
bound
je
insl
add
insb
gs
add
add
addr16
sub
add
add
add
inc
dec
inc
add
add
sub
add
sub
add
sub
add
sub
push
sub
add
popaw
insb
jae
add
add
insb
jae
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
xor
add
jb
je
add
insb
popa
jae
add
add
jb
outsb
outsl
insl
add
je
jne
add
add
outsb
outsl
outsb
add
add
sub
add
jge
add
push
push
dec
push
jnp
add
and
add
and
add
and
add
add
jnp
add
and
add
and
add
and
add
and
add
jge
add
inc
dec
dec
dec
inc
dec
inc
push
jnp
add
sub
dec
dec
dec
inc
inc
add
add
add
add
add
add
add
add
add
add
jge
add
add
jnp
add
and
add
and
add
and
add
and
add
jge
add
jge
add
and
add
jge
add
jnp
add
jnp
add
sub
add
sub
add
ja
ja
add
add
ja
ja
add
add
ja
ja
add
add
ja
ja
add
add
xor
aaa
xor
xor
xor
add
xor
aaa
xor
xor
xor
add
sub
add
je
jne
add
add
imul
add
insb
popa
jae
add
add
jb
outsb
outsl
insl
add
sub
add
sub
add
jnp
add
jnp
add
imul
add
add
and
jne
add
gs
gs
add
gs
add
gs
add
gs
add
gs
add
jbe
addr16
je
outsl
outsb
gs
outsl
jb
add
add
sar
inc
in
cmp
add
hlt
lcall
cmp
add
add
add
addb
add
dec
add
add
add
add
insb
imul
je
outsl
and
add
add
push
add
add
dec
or
dec
add
add
dec
or
inc
add
add
dec
or
inc
add
add
dec
or
push
popa
insb
add
dec
or
inc
outsl
jb
gs
gs
outsl
jbe
add
dec
or
dec
outsl
push
gs
outsl
jbe
add
add
cld
dec
or
inc
gs
gs
add
or
or
inc
jo
dec
inc
add
add
push
dec
inc
add
add
insl
jo
outsb
outsb
je
inc
popa
je
outsl
jb
gs
add
add
insb
gs
jns
add
add
dec
outsb
je
jb
popa
arpl
add
dec
popa
jb
ja
jb
add
add
dec
imul
push
inc
dec
add
inc
push
push
dec
push
pop
add
add
push
pop
push
push
inc
dec
add
push
outsl
data16
popa
jb
add
add
push
jns
gs
imul
push
outsl
data16
popa
jb
pop
dec
imul
je
push
imul
dec
push
pop
inc
jne
jb
outsb
je
gs
imul
insb
outsl
outsl
outsb
pop
dec
outsl
je
data16
add
add
roll
add
xor
add
jo
outsl
jb
jb
gs
add
add
ja
outsb
insb
outsl
outsl
outsb
cs
add
add
jb
outsb
fs
insb
xor
cs
add
add
gs
outsb
je
popa
outsb
fs
gs
add
add
outsb
je
popa
outsb
fs
gs
add
add
add
jnp
add
jnp
add
jnp
add
jnp
add
and
add
add
add
add
add
add
add
add
add
and
add
sub
add
add
add
lods
add
add
add
add
add
gs
outsb
je
add
push
add
add
add
movsb
dec
or
inc
add
add
add
mov
or
push
popa
insb
add
jb
gs
gs
outsl
jbe
add
dec
or
dec
outsl
push
gs
outsl
jbe
add
add
aam
or
inc
gs
gs
add
in
or
inc
jo
dec
inc
add
add
push
dec
inc
add
add
insl
jo
outsb
outsb
je
inc
popa
je
outsl
jb
gs
add
add
insb
gs
jns
add
add
dec
outsb
je
jb
popa
arpl
add
dec
popa
jb
ja
jb
add
add
dec
imul
push
inc
dec
add
inc
push
push
dec
push
pop
add
add
push
pop
push
push
inc
dec
add
push
outsl
data16
popa
jb
add
add
push
jns
gs
imul
push
outsl
data16
popa
jb
pop
dec
imul
je
push
imul
dec
push
pop
inc
jne
jb
outsb
je
gs
imul
insb
outsl
outsl
outsb
pop
dec
outsl
je
data16
add
add
dec
push
and
pop
push
jns
je
insl
xor
pop
fs
jbe
jb
pop
gs
pop
push
add
jae
jae
add
add
ja
add
jb
add
ja
add
mov
or
add
add
pusha
add
add
add
add
add
lock
or
and
or
adc
or
nop
push
add
nop
cmp
adc
cmp
add
inc
fildl
adc
inc
or
inc
inc
or
mov
or
and
adc
pop
or
and
adc
pop
or
xor
adc
pop
or
rcrb
adc
pop
or
inc
pop
or
and
adc
pop
or
xor
adc
add
jl
or
dec
add
add
add
mov
adc
add
xchg
dec
or
push
popa
insb
add
jb
gs
gs
outsl
jbe
add
push
gs
outsl
jbe
add
add
mov
or
inc
gs
gs
add
les
adc
jo
inc
add
add
push
dec
inc
add
add
insl
jo
outsb
outsb
je
inc
popa
je
outsl
jb
gs
add
add
insb
gs
jns
add
add
dec
outsb
je
jb
popa
arpl
add
dec
popa
jb
ja
jb
add
add
dec
imul
push
inc
dec
add
inc
push
push
dec
push
pop
add
add
push
pop
push
push
inc
dec
add
push
outsl
data16
popa
jb
add
add
push
jns
gs
imul
push
outsl
data16
popa
jb
pop
dec
imul
je
push
imul
dec
push
pop
inc
jne
jb
outsb
je
gs
imul
insb
outsl
outsl
outsb
pop
dec
outsl
je
data16
add
add
jb
gs
xor
cs
insb
add
add
inc
jb
popa
je
push
outsl
outsl
insb
push
xor
popa
jo
push
add
push
jb
arpl
jae
xor
jb
je
add
outsl
arpl
jae
xor
js
add
add
fs
xor
inc
imul
dec
outsl
fs
xor
dec
gs
add
add
push
add
add
push
or
dec
add
add
push
or
inc
add
add
push
or
inc
add
add
push
or
push
popa
insb
add
push
or
inc
outsl
jb
gs
gs
outsl
jbe
add
push
or
dec
outsl
push
gs
outsl
jbe
add
add
dec
push
or
inc
gs
gs
add
pop
push
or
inc
jo
dec
inc
add
add
push
dec
inc
add
add
insl
jo
outsb
outsb
je
inc
popa
je
outsl
jb
gs
add
add
insb
gs
jns
add
add
dec
outsb
je
jb
popa
arpl
add
dec
popa
jb
ja
jb
add
add
dec
imul
push
inc
dec
add
inc
push
push
dec
push
pop
add
add
push
pop
push
push
inc
dec
add
push
outsl
data16
popa
jb
add
add
push
jns
gs
imul
and
add
jp
pop
xor
add
add
pop
popa
sub
pop
sub
add
add
jno
and
and
and
jl
daa
pop
pop
daa
pop
sub
sub
add
add
or
or
sub
add
pop
xor
inc
sub
add
xor
add
add
pop
popa
sub
pop
sub
bound
pop
and
sub
add
add
pop
popa
sub
xor
add
add
jo
or
dec
add
add
or
inc
add
add
add
add
popa
insb
add
outsl
jb
gs
gs
outsl
jbe
add
outsl
push
gs
outsl
jbe
add
add
test
or
inc
gs
gs
add
mov
jo
dec
inc
add
add
push
dec
inc
add
add
insl
jo
outsb
outsb
je
inc
popa
je
outsl
jb
gs
add
add
insb
gs
jns
add
add
dec
outsb
je
jb
popa
arpl
add
dec
popa
jb
ja
jb
add
add
dec
imul
push
inc
dec
add
inc
push
push
dec
push
pop
add
add
push
pop
push
push
inc
dec
add
push
outsl
data16
popa
jb
add
add
push
jns
gs
imul
and
inc
push
push
inc
pop
inc
inc
dec
dec
push
inc
push
push
inc
dec
add
add
add
pop
push
or
dec
add
add
adc
add
adc
add
je
or
push
popa
insb
add
adc
jb
gs
gs
outsl
jbe
add
push
gs
outsl
jbe
add
add
xchg
push
or
inc
gs
gs
add
movsb
push
or
inc
jo
dec
inc
add
add
push
dec
inc
add
add
insl
jo
outsb
outsb
je
inc
popa
je
outsl
jb
gs
add
add
insb
gs
jns
add
add
dec
outsb
je
jb
popa
arpl
add
dec
popa
jb
ja
jb
add
add
dec
imul
push
inc
dec
add
inc
push
push
dec
push
pop
add
add
push
pop
push
push
inc
dec
add
push
outsl
data16
popa
jb
add
add
push
jns
gs
imul
push
outsl
data16
popa
jb
pop
dec
imul
je
push
imul
dec
push
pop
inc
jne
jb
outsb
je
gs
imul
insb
outsl
outsl
outsb
pop
dec
outsl
je
data16
add
add
roll
add
xor
add
jo
outsl
jb
jb
gs
add
add
ja
outsb
insb
outsl
outsl
outsb
cs
add
add
jb
outsb
fs
insb
xor
cs
add
add
and
add
and
add
and
add
and
add
and
add
and
add
jge
add
add
add
add
or
xor
or
subb
adc
lods
or
pusha
mov
adc
mov
adc
mov
adc
mov
or
push
mov
or
sarb
or
loopne
or
hlt
decl
add
add
add
add
add
add
add
add
add
adc
add
stc
jns
adc
jns
adc
jns
adc
jns
adc
jns
adc
jns
adc
jns
adc
jns
adc
jns
adc
jns
adc
jns
adc
jns
adc
jns
adc
jns
adc
jns
adc
jns
adc
jns
adc
jns
adc
add
nop
push
or
dec
add
add
add
add
add
add
popa
insb
add
outsl
jb
gs
gs
outsl
jbe
add
outsl
push
gs
outsl
jbe
add
add
enter
inc
gs
gs
add
fcoms
adc
jo
inc
add
add
push
dec
inc
add
add
insl
jo
outsb
outsb
je
inc
popa
je
outsl
jb
gs
add
add
insb
gs
jns
add
add
dec
outsb
je
jb
popa
arpl
add
dec
popa
jb
ja
jb
add
add
dec
imul
push
inc
dec
add
inc
push
push
dec
push
pop
add
add
push
pop
push
push
inc
dec
add
push
outsl
data16
popa
jb
add
add
push
jns
gs
imul
push
outsl
data16
popa
jb
pop
dec
imul
je
push
imul
dec
push
pop
inc
jne
jb
outsb
je
gs
imul
insb
outsl
outsl
outsb
pop
dec
outsl
je
data16
add
add
roll
add
xor
add
jo
outsl
jb
jb
gs
add
add
ja
outsb
insb
outsl
outsl
outsb
cs
add
add
jb
outsb
fs
insb
xor
cs
add
add
das
add
add
add
add
add
add
je
insl
jo
add
add
outsb
imul
add
jae
imul
add
outsl
imul
add
jbe
add
pop
add
add
add
outsb
add
add
cmp
xor
icebp
push
xor
addb
add
push
xor
addb
add
add
push
add
add
or
dec
add
add
or
inc
add
add
add
add
popa
insb
add
outsl
jb
gs
gs
outsl
jbe
add
outsl
push
gs
outsl
jbe
add
add
test
or
inc
gs
gs
add
mov
jo
dec
inc
add
add
push
dec
inc
add
add
insl
jo
outsb
outsb
je
inc
popa
je
outsl
jb
gs
add
add
insb
gs
jns
add
add
dec
outsb
je
jb
popa
arpl
add
dec
popa
jb
ja
jb
add
add
dec
imul
push
inc
dec
add
inc
push
push
dec
push
pop
add
add
push
pop
push
push
inc
dec
add
push
outsl
data16
popa
jb
add
add
push
jns
gs
imul
inc
add
add
push
add
add
dec
add
dec
add
add
dec
add
dec
add
dec
add
add
add
push
add
push
add
inc
add
inc
add
add
push
add
dec
add
inc
add
add
add
add
inc
add
add
push
add
dec
add
push
add
inc
add
inc
add
push
add
push
add
dec
add
add
add
dec
add
inc
add
dec
add
add
add
add
push
add
add
or
dec
add
add
or
inc
add
add
or
inc
add
add
or
push
popa
insb
add
or
inc
outsl
jb
gs
gs
outsl
jbe
add
or
dec
outsl
push
gs
outsl
jbe
add
add
mov
adc
gs
add
cwtl
pop
or
inc
jo
dec
inc
add
add
push
dec
inc
add
add
insl
jo
outsb
outsb
je
inc
popa
je
outsl
jb
gs
add
add
insb
gs
jns
add
add
dec
outsb
je
jb
popa
arpl
add
dec
popa
jb
ja
jb
add
add
dec
imul
push
inc
dec
add
inc
push
push
dec
push
pop
add
add
push
pop
push
push
inc
dec
add
push
outsl
data16
popa
jb
add
add
push
jns
gs
imul
and
add
push
add
dec
add
add
dec
add
inc
add
add
push
add
push
add
add
add
add
das
add
add
add
add
inc
add
inc
add
inc
add
inc
add
add
add
add
outsl
add
jae
cmp
add
add
add
add
sub
and
and
data16
popa
add
add
outsl
add
add
jb
and
cmp
add
add
add
inc
add
inc
add
inc
add
add
jb
arpl
cmp
add
add
add
inc
add
inc
add
inc
add
add
jb
arpl
cmp
add
add
outsl
add
add
add
add
add
and
and
data16
popa
add
add
outsl
add
add
jb
and
cmp
add
add
add
inc
add
inc
add
inc
add
add
jb
arpl
cmp
add
add
add
inc
add
inc
add
inc
add
add
jb
arpl
cmp
add
add
outsl
add
jae
cmp
add
and
and
data16
popa
add
add
outsl
add
add
jb
and
cmp
add
add
add
inc
add
inc
add
inc
add
add
jb
arpl
cmp
add
add
add
inc
add
inc
add
inc
add
add
jb
arpl
cmp
add
add
outsl
add
add
add
add
sub
and
and
data16
popa
add
add
outsl
add
add
jb
and
cmp
add
add
add
add
inc
add
inc
add
inc
add
add
jb
arpl
cmp
add
add
add
add
inc
add
inc
add
inc
add
add
jb
arpl
cmp
add
add
add
add
das
add
push
add
dec
add
push
add
push
add
add
das
add
push
add
dec
add
add
add
add
add
push
add
push
add
push
add
add
add
das
add
inc
add
dec
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
popa
add
add
jb
add
cmp
add
add
add
add
add
das
add
add
add
add
inc
add
dec
add
push
add
add
add
das
add
inc
add
dec
add
push
add
add
add
repnz
xor
addb
add
sub
lret
rclb
mov
add
dec
flds
sbb
add
add
push
imul
pop
add
push
push
push
inc
push
dec
xor
cs
insb
add
add
add
add
add
add
add
add
add
inc
rolb
add
add
inc
add
add
add
add
add
add
inc
pusha
cmp
sbb
mov
add
sub
sbb
call
or
pop
pop
or
cwtl
xchg
adc
pop
das
mov
rcll
xchg
adc
add
push
or
cmp
rclb
cmpl
mov
bound
adc
bound
adc
arpl
adc
arpl
adc
adc
arpl
adc
or
lahf
arpl
adc
arpl
adc
xchg
adc
jle
adc
adc
jg
adc
add
nop
mov
adc
add
pusha
jle
adc
jbe
insb
imul
and
jae
je
outsl
outsb
add
jb
outsb
and
outsl
and
addr16
push
mov
adc
mov
adc
or
lock
test
or
lock
imul
cmp
outsl
bound
and
je
add
add
jae
bound
cmp
popaw
imul
je
add
imul
cmp
bound
bound
and
je
add
add
add
add
mov
adc
add
adc
or
add
add
incl
add
add
insb
or
add
add
incl
add
add
add
add
incl
add
add
outsl
or
add
add
incl
add
add
jo
adc
add
add
cltd
mov
add
add
popa
sub
ja
bound
jb
bound
popa
sub
add
add
jb
add
popa
bound
add
add
ja
add
add
add
add
add
adc
add
or
add
and
add
and
add
xor
add
sub
add
add
add
adc
add
or
add
and
add
xor
add
sub
add
add
add
pop
mov
adc
jno
adc
pushf
or
bound
and
insb
outsl
arpl
imul
add
inc
ja
adc
ja
adc
or
add
add
incl
add
add
js
adc
insl
loopne
add
add
add
add
add
add
incl
add
add
or
add
add
incl
add
add
jp
adc
add
add
incl
add
add
jle
adc
add
add
inc
jg
adc
jg
adc
add
add
incl
add
add
orb
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
test
adc
add
add
incl
add
add
or
dec
dec
cmp
cmp
add
add
fs
dec
dec
dec
dec
and
and
jns
add
das
fs
jns
add
add
push
dec
add
inc
dec
add
inc
arpl
bound
add
add
dec
outsl
jbe
insl
bound
add
add
dec
arpl
gs
push
gs
gs
bound
add
add
addr16
je
add
insb
jns
add
add
outsb
add
add
inc
jo
imul
arpl
add
inc
bound
popa
jb
add
add
dec
popa
outsb
jne
jb
add
add
jbe
dec
arpl
gs
inc
jne
add
insb
add
outsb
add
jns
inc
jo
add
jb
inc
bound
dec
popa
outsb
add
je
jb
popa
jns
add
add
imul
jne
jae
popa
jns
add
add
outsb
gs
popa
jns
add
push
jne
jae
popa
jns
dec
outsl
outsb
fs
jns
add
outsb
fs
jns
add
je
inc
jb
add
add
add
add
outsb
add
outsb
add
jo
popa
insl
das
jo
add
add
add
add
push
xchg
or
cli
xchg
or
enter
xor
or
push
outsb
imul
outsb
and
arpl
je
outsl
outsb
add
add
mov
adc
adc
pushf
or
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
mov
adc
add
add
incl
add
add
mov
adc
add
add
incl
add
add
add
add
add
add
incl
add
add
mov
adc
add
add
incl
add
add
or
add
add
incl
add
add
mov
adc
jb
js
je
jb
arpl
jae
add
arpl
gs
insb
add
incl
add
add
or
cmp
add
incl
add
add
add
add
ljmp
or
add
add
incl
add
add
add
add
incl
add
add
add
incl
add
add
add
add
incl
or
add
add
ljmp
or
xor
or
add
add
jmp
enter
enter
add
add
incl
add
add
lret
add
add
mov
lret
pushl
lret
or
cmp
or
add
add
incl
add
add
int3
or
add
add
add
or
dec
int3
or
ljmp
into
or
add
add
and
and
and
and
and
and
and
and
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
test
test
test
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
pop
or
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
add
push
dec
dec
inc
add
dec
push
dec
inc
push
dec
inc
add
dec
inc
pop
dec
dec
dec
inc
push
inc
push
pop
add
inc
push
pop
push
inc
add
add
dec
inc
pop
inc
dec
dec
dec
inc
push
inc
add
dec
inc
pop
inc
dec
dec
add
pop
cs
add
add
add
add
add
incl
add
add
add
add
cmp
add
incl
add
add
or
add
add
incl
add
add
loopne
adc
add
add
lcall
or
and
or
lcall
loop
adc
jmp
loop
adc
loop
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
test
test
test
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
or
incl
add
add
or
inc
insb
jae
jb
add
jae
gs
popa
insb
jne
add
jae
gs
popa
insb
jne
add
jae
insb
insb
outsl
arpl
add
add
add
add
mov
call
add
in
call
or
dec
imul
je
push
imul
sub
and
outsb
je
insl
and
jb
jb
add
add
push
jb
addr16
insl
cmp
add
add
or
add
cs
jb
addr16
insl
and
insl
and
imul
outsb
add
inc
and
data16
outsl
jbe
jb
jne
and
jae
bound
outsb
and
arpl
and
imul
and
jb
jne
je
and
and
outsl
addr16
insl
daa
jae
imul
insb
and
popa
je
and
push
push
outsl
addr16
insl
and
outsb
outsb
outsl
je
jae
data16
jns
arpl
je
outsb
jne
and
arpl
imul
and
jae
or
ja
bound
je
jb
imul
or
inc
jne
data16
outsl
jbe
jb
jne
and
arpl
and
add
add
add
add
jae
arpl
imul
jb
outsl
data16
imul
outsb
and
jne
and
jae
bound
outsb
and
arpl
and
imul
or
jb
jne
je
and
and
outsl
addr16
insl
daa
jae
imul
insb
and
popa
je
and
push
push
outsl
addr16
insl
and
outsb
outsb
outsl
je
jae
data16
jns
arpl
je
outsb
jne
and
arpl
imul
and
jae
and
ja
bound
je
jb
imul
or
add
add
imul
outsb
and
arpl
imul
jne
and
arpl
and
add
ljmp
adc
add
add
incl
add
add
sti
or
add
add
incl
add
add
decb
adc
add
add
incl
add
add
or
push
jne
dec
outsl
outsb
push
jne
push
gs
push
push
popa
je
add
dec
popa
outsb
inc
bound
jb
jo
dec
popa
jns
jne
dec
jne
inc
jne
push
gs
arpl
jbe
arpl
add
add
add
incl
add
add
or
add
add
incl
add
add
add
add
incl
add
add
add
add
push
add
push
add
add
adc
add
add
add
add
inc
inc
add
xor
add
add
sub
push
pop
pop
or
aaa
xor
push
push
pop
add
and
or
add
add
pusha
push
add
jo
js
js
or
or
add
add
or
add
or
or
pop
or
add
sub
outsb
add
insb
add
add
add
add
outsb
jne
insb
sub
add
add
add
incl
add
add
or
add
add
incl
add
add
adc
add
incl
add
add
sub
xor
add
sarb
inc
add
add
dec
jae
jb
arpl
jae
jb
gs
je
jb
push
jb
jae
outsb
je
add
dec
inc
push
dec
inc
dec
xor
add
add
incl
add
add
and
adc
add
add
incl
add
add
or
add
add
incl
add
add
sub
adc
add
add
call
or
push
sub
adc
add
add
call
sub
adc
add
add
incl
add
add
or
add
add
incl
add
add
sub
adc
add
add
incl
add
add
sub
adc
add
add
incl
add
add
or
aad
or
dec
insb
insb
gs
insb
and
je
and
jno
outsb
arpl
add
inc
imul
jns
outsb
outsl
je
gs
jo
jns
inc
jne
arpl
outsb
and
je
imul
outsb
je
add
add
dec
outsl
and
imul
jbe
imul
inc
imul
je
outsl
and
add
add
jae
jne
arpl
fs
fs
outsl
arpl
popa
jbe
imul
gs
insb
je
je
outsl
and
add
add
inc
outsl
insl
popa
imul
jb
add
add
outsl
imul
jo
jo
add
and
outsb
jns
insb
imul
gs
fs
and
insb
and
jae
gs
add
add
jbe
insb
imul
add
add
and
popa
arpl
insb
gs
outsl
outsb
and
imul
and
and
add
dec
outsb
popa
jo
jb
jo
imul
dec
and
outsb
je
outsl
insb
and
gs
je
outsl
outsb
add
and
outsb
jns
outsl
jo
outsb
and
insb
gs
push
outsl
outsl
and
outsb
jns
outsl
jo
outsb
and
insb
gs
imul
gs
add
add
jbe
insb
imul
outsb
je
add
add
and
imul
jns
add
je
popa
and
arpl
jns
dec
outsl
and
arpl
fs
arpl
add
jo
outsl
jo
jb
insb
imul
imul
je
add
jae
jne
arpl
fs
arpl
push
outsb
imul
outsb
and
jb
jb
add
inc
popa
and
fs
jae
add
jb
imul
fs
imul
outsl
je
outsb
outsl
jne
push
arpl
add
add
jae
jne
arpl
je
insl
jo
jb
jb
insb
jns
jne
popa
jbe
imul
add
dec
outsl
and
imul
gs
gs
add
and
insb
and
arpl
jo
outsl
jb
inc
js
arpl
outsw
jb
popa
je
gs
outsl
jb
add
inc
jb
and
je
je
outsl
and
add
add
and
arpl
fs
arpl
outsl
jb
popa
fs
jae
add
add
jo
je
outsl
jne
jo
je
gs
outsl
jb
add
je
jb
jne
je
and
outsb
arpl
outsb
and
insb
insb
add
add
and
arpl
jo
outsl
arpl
jae
dec
outsl
and
arpl
imul
and
arpl
jns
add
dec
jo
jb
je
outsl
outsb
and
je
jo
jb
imul
and
jb
jb
add
add
call
or
jmp
xor
adc
incl
add
add
add
add
incl
add
add
or
add
add
lcall
or
pop
xor
outsb
je
insl
and
jb
jb
add
or
dec
dec
push
push
and
jb
jb
or
add
push
dec
dec
inc
and
jb
jb
or
add
add
inc
dec
dec
and
jb
jb
or
add
xor
cmp
push
jo
insb
imul
and
outsb
outsb
outsl
je
jb
outsb
and
imul
and
je
jbe
and
jb
imul
je
and
arpl
jae
data16
cs
inc
push
and
outsb
je
insl
or
gs
jae
and
outsb
je
arpl
push
jo
imul
daa
jae
jae
jo
outsl
jb
and
insl
and
jb
insl
outsl
jb
and
outsw
jb
popa
je
outsl
outsb
cs
push
xor
cmp
outsb
popa
bound
je
and
imul
and
popa
jo
or
add
add
xor
aaa
or
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
insb
outsl
ja
outsl
and
imul
je
outsl
outsb
or
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
jae
imul
imul
imul
add
push
xor
xor
jo
jb
and
jb
jne
insb
and
outsb
arpl
outsb
and
insb
insb
or
push
xor
xor
or
and
outsl
jne
push
arpl
outsw
jb
pop
outsl
outsb
gs
je
popa
je
js
je
je
bound
or
add
add
xor
cmp
outsb
popa
bound
je
and
outsb
and
outsb
jae
insb
and
imul
add
push
xor
cmp
outsb
gs
arpl
and
popa
jo
gs
outsl
jb
or
add
add
xor
aaa
or
outsb
gs
arpl
and
insb
je
je
jb
popa
and
imul
jb
outsl
jb
or
add
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
je
jb
popa
and
popa
or
push
push
jo
insb
imul
and
jae
jb
jno
gs
gs
and
outsb
je
insl
and
je
jb
imul
je
imul
outsb
jne
jne
insb
and
jns
or
gs
jae
and
outsb
je
arpl
push
jo
imul
daa
jae
jae
jo
outsl
jb
and
insl
and
jb
insl
outsl
jb
and
outsw
jb
popa
je
outsl
outsb
cs
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
outsb
jbe
jb
outsb
insl
outsb
je
or
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
popa
jb
jne
outsb
je
or
push
xor
xor
insb
outsl
popa
je
outsb
and
imul
and
fs
add
outsb
je
insl
and
jb
jb
or
push
jb
addr16
insl
cmp
add
add
add
add
add
add
xor
popa
add
add
mov
push
push
add
push
push
add
xor
add
xor
xor
add
add
add
xor
bound
add
add
dec
dec
add
dec
dec
add
xor
add
xor
xor
add
add
xor
arpl
add
add
push
inc
add
or
inc
push
inc
add
xor
add
xor
xor
add
add
add
xor
data16
add
insb
jge
adc
dec
add
adc
dec
add
xor
add
xor
xor
add
xor
add
add
pop
jge
adc
inc
add
adc
inc
add
xor
add
xor
xor
add
xor
add
add
dec
jge
adc
push
add
push
push
add
xor
add
xor
xor
add
or
add
cmp
popa
add
add
inc
jge
adc
dec
add
pop
add
xor
add
xor
xor
add
add
xor
xor
add
add
push
inc
add
dec
add
xor
add
xor
xor
add
or
add
arpl
aaa
add
add
sub
or
inc
inc
inc
add
push
add
xor
add
xor
xor
add
or
add
arpl
cmp
add
add
inc
add
jge
adc
push
add
xor
add
xor
xor
add
or
add
arpl
popa
add
add
clc
jl
adc
dec
add
push
push
add
xor
add
xor
xor
add
add
xor
arpl
add
add
push
inc
add
jl
adc
dec
add
xor
add
xor
xor
add
adc
add
xor
popa
add
add
inc
jge
adc
inc
add
jl
adc
dec
add
xor
add
xor
xor
add
add
xor
xor
add
add
push
push
add
jl
adc
inc
add
xor
add
xor
xor
add
adc
add
xor
popa
add
add
inc
jge
adc
inc
add
jl
adc
dec
add
xor
add
xor
xor
add
add
xor
arpl
add
add
push
dec
add
jl
adc
add
xor
add
xor
xor
add
sbb
add
cmp
popa
add
add
inc
jge
adc
inc
add
inc
dec
add
xor
add
xor
xor
add
sbb
add
arpl
cmp
add
add
push
add
inc
inc
add
aaa
add
add
add
xor
add
sbb
add
arpl
popa
add
add
inc
jge
adc
inc
add
dec
add
xor
add
xor
xor
add
and
add
xor
popa
add
add
inc
jge
adc
push
add
inc
dec
add
xor
add
xor
xor
add
and
add
xor
popa
add
add
inc
jge
adc
dec
add
adc
dec
add
xor
add
xor
xor
add
sub
add
cmp
popa
add
add
inc
jge
adc
push
add
adc
push
add
xor
add
xor
xor
add
sub
add
arpl
popa
add
add
inc
jge
adc
push
add
or
inc
push
inc
add
xor
add
xor
xor
add
xor
add
xor
popa
add
add
inc
jge
adc
inc
add
or
inc
inc
push
add
xor
add
xor
xor
add
xor
add
xor
popa
add
add
inc
jge
adc
dec
add
or
inc
dec
dec
add
xor
add
xor
xor
add
cmp
add
cmp
popa
add
add
inc
jge
adc
pop
add
or
push
push
pop
add
xor
add
xor
xor
add
cmp
add
arpl
popa
add
add
inc
jge
adc
pop
add
adc
pop
add
xor
add
xor
xor
add
jb
addr16
jns
add
add
jne
jne
jns
inc
push
add
inc
arpl
outsl
jb
inc
jb
outsb
je
outsb
popa
add
add
jb
add
add
inc
outsl
insb
outsl
insl
bound
add
add
push
outsb
gs
gs
popa
add
add
imul
push
gs
bound
add
push
outsl
jne
push
imul
push
popa
outsb
popa
insl
popa
add
dec
jne
gs
bound
jb
add
inc
outsl
jae
popa
and
arpl
add
imul
add
popa
je
insl
popa
insb
popa
add
add
outsb
popa
fs
add
push
jo
outsb
imul
outsl
fs
and
jb
add
add
jae
jb
insb
imul
insb
imul
je
imul
popa
outsb
add
inc
gs
imul
imul
popa
outsb
imul
jno
add
push
ja
fs
add
push
ja
imul
insb
popa
outsb
add
gs
popa
outsb
imul
popa
outsb
arpl
add
outsb
arpl
add
outsb
insb
popa
outsb
add
outsb
outsb
imul
imul
popa
outsb
imul
jb
imul
push
outsl
jb
add
or
sbb
adc
add
or
adc
or
adc
inc
add
adc
push
add
adc
dec
add
adc
inc
add
adc
push
add
adc
push
add
or
dec
dec
inc
add
jg
adc
inc
add
or
dec
pop
dec
add
jg
adc
dec
add
or
inc
dec
dec
add
jg
adc
dec
add
jle
adc
dec
add
jle
adc
dec
add
jle
adc
inc
add
jle
adc
push
add
jle
adc
inc
add
push
add
push
dec
add
inc
push
add
inc
push
add
push
inc
add
inc
add
imul
je
jae
add
jne
imul
outsl
insl
add
je
imul
and
popa
outsl
add
add
jne
push
gs
add
jne
push
imul
jae
jne
push
gs
add
jne
push
imul
jae
outsl
jbe
imul
jo
gs
outsl
sub
add
sub
popa
add
add
jo
and
imul
outsb
jp
add
ja
jp
popa
insb
popa
outsb
add
outsb
addr16
add
add
insb
insb
popa
outsb
add
gs
je
bound
je
imul
insb
popa
outsb
add
arpl
add
arpl
outsb
popa
add
add
imul
gs
arpl
add
add
nop
test
adc
push
add
adc
push
add
or
inc
dec
push
add
adc
inc
add
adc
inc
add
or
inc
dec
inc
add
adc
dec
add
or
pop
dec
dec
add
test
adc
push
add
dec
add
test
adc
push
add
test
adc
dec
add
test
adc
push
add
test
adc
inc
add
test
adc
push
add
dec
inc
add
dec
dec
add
inc
add
dec
inc
add
adc
dec
add
adc
dec
add
or
inc
dec
pop
add
or
inc
dec
push
add
or
inc
dec
push
add
test
adc
inc
add
or
inc
dec
push
add
test
adc
push
add
orl
inc
push
inc
add
orl
inc
push
inc
add
orl
inc
push
dec
add
orl
inc
push
push
add
inc
add
inc
inc
add
dec
add
adc
add
adc
dec
add
adc
push
add
or
dec
dec
push
add
or
dec
dec
push
add
orl
dec
dec
dec
add
orl
push
push
inc
add
orb
inc
push
push
add
orb
inc
push
inc
add
orb
inc
push
dec
add
orb
inc
push
dec
add
inc
add
push
inc
add
push
inc
add
adc
inc
add
or
inc
push
inc
add
adc
dec
add
or
inc
push
dec
add
or
inc
push
dec
add
orb
inc
push
dec
add
orb
inc
push
inc
add
orl
add
orl
add
orl
add
orl
add
push
add
inc
add
push
add
dec
inc
add
push
add
dec
push
add
popa
add
add
jne
add
jae
imul
ja
imul
insb
popa
outsb
add
popa
outsb
imul
gs
gs
popa
add
add
popa
outsb
imul
addr16
jns
jae
popa
outsb
imul
jb
outsl
and
arpl
jae
popa
outsb
imul
jne
add
add
popa
outsb
imul
popa
addr16
jns
add
add
popa
outsb
imul
popa
insl
popa
add
jae
popa
outsb
imul
popa
jb
addr16
add
add
popa
outsb
imul
gs
add
jae
popa
outsb
imul
imul
popa
outsb
imul
fs
popa
jae
add
add
popa
outsb
imul
je
insl
popa
insb
popa
add
add
popa
outsb
imul
jae
insb
jbe
outsl
jb
jae
popa
outsb
imul
popa
outsl
jb
jae
popa
outsb
imul
imul
jb
jo
bound
add
jae
popa
outsb
imul
je
and
arpl
add
popa
outsb
imul
outsl
insl
bound
add
add
jae
popa
outsb
imul
insb
add
add
popa
outsb
imul
imul
popa
outsb
imul
outsb
je
outsb
popa
add
add
jb
jne
jne
jae
sub
imul
add
jb
imul
outsl
jb
imul
add
jb
imul
insl
popa
insb
add
add
outsb
outsl
jb
imul
je
insb
imul
jae
add
add
imul
insb
imul
gs
popa
outsb
sub
jae
add
add
jb
popa
outsb
sub
insl
bound
jb
add
add
jb
popa
outsb
sub
je
outsb
jae
imul
popa
outsb
sub
jb
popa
outsb
add
outsb
arpl
jae
imul
data16
outsb
arpl
insb
jne
gs
bound
jb
add
add
outsb
arpl
arpl
popa
imul
outsb
arpl
bound
imul
insb
imul
add
insb
imul
add
insb
imul
add
insb
imul
outsb
imul
outsl
bound
outsl
add
add
insb
imul
je
and
jb
arpl
add
add
insb
imul
add
insb
imul
popa
imul
insb
imul
add
insb
imul
imul
add
outsb
insb
imul
add
insb
imul
imul
insb
imul
add
insb
imul
jb
arpl
add
add
fs
arpl
bound
imul
push
gs
imul
arpl
outsb
gs
sub
popa
jo
jb
add
add
imul
imul
gs
arpl
outsb
gs
sub
imul
add
add
arpl
outsb
gs
add
imul
arpl
popa
imul
bound
imul
je
popa
insb
imul
gs
arpl
sub
imul
popa
insl
gs
arpl
and
insb
imul
popa
insl
gs
arpl
add
add
dec
inc
push
add
push
add
jb
imul
outsl
jb
imul
add
imul
inc
jb
je
arpl
push
arpl
outsb
inc
outsb
fs
jo
outsb
inc
outsl
jne
je
add
call
or
and
add
add
call
or
pop
push
or
add
add
incl
add
add
or
inc
gs
jb
arpl
jae
imul
popa
je
outsl
outsb
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
inc
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outsl
js
add
gs
xor
fs
insb
add
add
add
incl
add
add
pop
or
add
add
incl
add
add
pop
or
add
add
call
data16
adc
decl
or
dec
or
mov
push
add
jmp
imul
adc
and
inc
dec
add
xor
dec
dec
inc
add
add
and
inc
add
add
and
inc
dec
add
add
add
decl
jns
adc
jmp
or
sub
adc
incl
add
add
jle
adc
add
add
add
dec
pop
or
xor
add
mov
incl
add
add
add
add
or
add
add
addb
add
or
cld
push
or
incl
add
add
add
add
or
add
add
add
add
incl
add
add
add
add
xchg
adc
add
add
add
faddl
add
adc
or
call
push
or
add
add
add
add
incl
add
add
add
add
or
les
or
add
add
and
or
push
push
or
xor
or
xor
or
add
add
add
add
incl
add
add
add
add
or
les
or
add
add
jo
or
xor
or
orb
adc
add
add
add
incl
add
add
add
add
pop
or
add
add
add
add
incl
add
add
add
add
or
add
add
aam
or
fcomps
adc
mov
adc
pop
or
add
add
add
add
incl
add
add
add
add
or
lods
xchg
adc
add
add
add
add
or
hlt
pop
or
sub
or
add
add
add
add
incl
add
add
add
add
adc
or
lods
xchg
adc
add
add
add
add
adc
add
add
or
je
or
cmp
adc
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
pop
or
mov
pop
or
add
add
add
add
incl
add
add
add
add
mov
adc
add
add
add
add
mov
adc
add
add
or
add
or
add
add
add
add
incl
add
add
add
add
or
lods
xchg
adc
add
add
add
add
or
mov
mov
adc
or
incl
add
add
add
add
adc
add
add
add
add
add
push
pop
or
mov
or
add
add
mov
or
cld
push
or
mov
push
or
add
add
add
add
incl
add
add
add
add
mov
adc
add
add
add
hlt
mov
adc
add
add
adc
mov
adc
add
add
je
add
jbe
add
js
add
orl
add
orb
sbb
or
pop
orb
jnp
or
cmpsb
orb
mov
or
repz
mov
orl
add
or
adc
add
or
mov
test
add
test
add
test
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
or
imul
add
xchg
add
mov
add
or
push
mov
add
mov
add
mov
add
mov
add
mov
add
or
push
mov
add
or
jo
or
mov
or
rorb
add
mov
add
mov
add
or
push
mov
add
mov
add
mov
add
mov
add
or
orb
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
or
push
mov
add
mov
add
add
lea
add
mov
add
mov
add
or
js
or
mov
mov
add
nop
or
inc
nop
or
pop
nop
or
jo
or
mov
or
pop
xchg
or
lahf
xchg
or
aad
or
pushf
xchg
or
fstl
or
sbb
add
or
js
or
cwtl
xchg
or
mov
xchg
or
add
or
xor
or
push
xchg
or
mov
xchg
or
fcoms
or
and
or
popa
xchg
or
js
or
nop
xchg
or
mov
xchg
or
rclb
add
xchg
or
lock
or
add
or
xor
or
pop
xchg
or
jmp
xchg
or
sbb
or
jle
or
cmpsb
cwtl
or
mov
or
aad
or
out
or
sbb
or
cs
or
dec
cltd
or
js
or
fwait
cltd
or
rcrb
add
cltd
or
sbb
or
pop
lcall
cwtl
lcall
jecxz
or
push
fwait
or
cmp
or
js
or
cwtl
fwait
or
mov
fwait
or
add
add
or
bound
add
pushf
or
enter
pushf
or
sbb
or
dec
popf
or
sbbl
or
dec
sahf
or
push
sahf
or
rcrl
add
sahf
or
add
or
and
or
jb
or
xchg
or
scas
lahf
or
push
mov
or
dec
mov
or
jo
or
andb
add
mov
or
clc
mov
or
mov
mov
or
add
or
daa
mov
or
jns
or
sahf
mov
or
adc
or
aas
mov
or
mov
or
sbb
add
movsb
or
xlat
movsb
or
jmp
movsl
or
sbb
movsl
or
bound
or
cmpsl
movsl
or
mov
movsl
or
cmpsb
or
mov
cmpsb
or
add
or
cmpsl
or
pop
cmpsl
or
jae
or
mov
cmpsl
or
sti
cmpsl
or
adc
test
add
or
xchg
test
add
test
add
test
add
test
or
outsl
test
or
pop
stos
or
imul
add
stos
or
sbb
or
inc
stos
or
lea
or
jno
or
sbb
or
fxrstor
add
scas
or
je
or
mov
scas
or
push
scas
or
mov
mov
add
or
jbe
or
mov
or
enter
pop
mov
add
mov
add
mov
add
mov
add
mov
add
or
pop
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
or
push
mov
add
mov
add
mov
add
mov
add
mov
add
or
jno
or
xchg
mov
add
mov
add
mov
add
mov
add
mov
add
or
pop
mov
add
or
cwtl
mov
add
mov
add
mov
add
mov
add
mov
add
or
popa
mov
add
mov
add
or
pushf
mov
add
mov
add
mov
add
mov
add
mov
or
and
or
inc
mov
or
cmpl
or
or
or
dec
mov
or
mov
or
mov
or
sarb
add
mov
or
add
or
and
or
inc
mov
or
pusha
mov
or
cmpb
add
mov
or
sarb
or
lock
or
adc
or
xor
or
push
mov
or
cmpl
or
lock
or
inc
mov
or
nop
mov
or
loopne
or
adc
or
cmpl
or
sub
or
cltd
mov
or
or
or
popa
mov
or
mov
rorb
mov
rorb
add
or
sub
or
jns
or
jecxz
or
push
ret
cmp
or
inc
ret
jle
or
xchg
ret
mov
add
ret
xor
or
push
ret
or
push
ret
or
call
les
add
les
add
or
pop
les
add
or
nop
les
add
les
add
les
add
les
add
lds
add
lds
add
add
or
mov
or
test
or
enter
lock
add
or
dec
or
push
or
mov
or
fadd
or
clc
or
sbb
or
xor
or
push
or
push
or
mov
or
rol
add
or
std
or
sbb
or
cmp
or
push
enter
enter
enter
enter
enter
enter
leave
or
sub
or
dec
leave
or
pusha
leave
or
jo
or
or
add
leave
or
cld
leave
or
sbb
or
jo
or
or
add
lret
lret
push
lret
or
lods
lret
or
out
or
or
or
sub
or
pop
int3
or
xchg
int3
or
push
int
add
int
add
int
add
int
add
or
push
int
add
or
js
or
cwtl
int
add
int
add
int
add
int
add
int
add
into
or
and
or
mov
or
mov
or
aad
or
or
or
or
adc
or
pop
iret
or
jbe
or
mov
or
int3
iret
or
or
rorb
add
rorb
add
or
rorb
add
or
mov
rorb
add
rorb
add
rorb
add
rorl
add
rorl
add
or
push
rorl
add
or
mov
or
mov
or
or
lock
add
rorb
add
rorb
add
rorb
add
rorb
add
or
push
rorb
add
or
sahf
rorb
add
rorb
add
rorl
add
or
jmp
add
add
enter
incl
add
add
add
add
orl
incl
add
add
add
add
add
add
add
add
add
add
or
and
add
in
xchg
or
add
add
adc
or
jmp
orl
sbb
add
add
adc
add
add
push
or
add
add
incl
add
add
add
add
add
add
add
push
add
add
incl
add
add
incl
add
add
sbb
adc
add
add
add
add
add
add
add
add
xchg
sbb
add
add
add
mov
add
add
add
add
incl
add
add
add
add
orb
incl
add
add
add
add
add
add
add
add
add
add
add
add
or
and
add
in
xchg
or
add
add
adc
or
pushl
orb
add
add
cmp
xchg
sbb
add
add
adc
add
add
call
or
and
add
jo
or
pushl
or
and
add
xchg
xchg
or
incl
add
add
add
add
add
add
incl
add
add
sub
adc
add
add
add
add
add
add
add
add
xchg
or
and
add
mov
add
add
xchg
or
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
xchg
or
and
add
sbb
add
cmp
add
add
add
inc
orb
flds
xchg
sbb
add
add
or
incl
orl
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
orl
pop
add
add
add
add
add
add
add
add
add
add
or
add
add
push
orl
or
add
pop
orl
or
add
push
or
add
add
jne
or
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
adc
add
add
add
add
add
add
add
add
add
add
or
adc
add
adc
add
adc
add
add
add
inc
xchg
or
and
add
xchg
xchg
or
add
add
push
xchg
or
pushl
add
add
cwtl
xchg
or
call
orl
add
add
fadds
add
jecxz
or
add
add
out
orl
add
add
stc
orl
and
add
mov
add
add
incl
add
add
incl
add
add
add
add
add
add
add
adc
xchg
sbb
add
add
cwtl
or
add
add
and
add
add
add
incl
add
add
add
add
test
adc
incl
add
add
ljmp
test
adc
add
add
add
add
add
add
add
add
add
add
add
jo
or
and
add
push
cwtl
or
add
add
sbbb
add
add
add
call
or
add
add
inc
test
adc
add
add
or
and
add
mov
or
jmp
add
add
or
add
add
mov
add
add
add
in
or
dec
test
adc
add
add
test
adc
add
add
add
add
add
add
test
adc
add
add
test
adc
add
add
add
add
add
add
add
add
add
add
test
adc
add
add
jb
adc
add
add
jae
adc
add
add
add
add
add
add
or
push
add
add
add
add
add
add
add
add
or
and
add
and
add
mov
add
add
add
incl
test
adc
add
add
test
adc
add
add
test
adc
add
add
test
adc
add
add
test
adc
add
xor
add
add
or
push
add
add
or
pop
add
add
or
pop
add
add
or
or
add
insb
test
adc
add
add
or
or
add
addb
add
add
add
add
add
add
add
add
add
add
add
test
adc
add
add
test
adc
add
add
test
adc
add
add
int3
cltd
or
out
test
adc
add
add
nop
lcall
incl
add
add
incl
add
add
add
add
add
add
add
les
xchg
sbb
add
add
add
aam
or
incl
add
add
incl
add
add
mov
add
add
add
add
add
add
add
adc
or
and
add
add
or
add
add
and
or
pushl
xchg
adc
add
add
xchg
adc
add
add
or
add
add
dec
xchg
adc
add
add
or
add
add
pop
xchg
adc
add
add
or
add
add
je
or
add
add
jg
or
add
add
mov
add
xchg
xchg
adc
add
add
add
add
push
fwait
or
pushl
add
add
rcrb
add
inc
xchg
adc
add
add
xchg
adc
add
add
hlt
fwait
or
jmp
xchg
adc
add
add
xchg
adc
add
add
int3
add
add
add
add
add
add
add
add
add
inc
pushf
or
and
add
and
add
or
incl
xchg
adc
add
add
xchg
adc
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
sbbb
mov
or
jmp
xchg
adc
add
add
or
and
add
loopne
or
jmp
or
and
add
or
or
incl
add
add
xor
add
incl
mov
adc
add
add
push
popf
or
jmp
add
add
js
or
cld
push
or
add
add
incl
add
add
add
xchg
add
or
add
add
incl
add
add
add
add
add
add
or
add
add
incl
add
add
add
add
add
add
add
aam
or
mov
popf
or
add
add
and
add
lock
or
jmp
add
add
adc
add
inc
xchg
adc
add
add
xchg
adc
add
add
xor
or
ljmp
mov
adc
add
add
mov
adc
add
add
or
add
add
dec
mov
adc
add
add
pusha
sahf
or
jmp
or
and
add
pushf
sahf
or
jmp
or
and
add
rcrb
add
incl
add
add
in
or
pushl
add
add
or
add
jmp
mov
adc
add
add
sub
or
incl
mov
adc
add
add
add
push
adc
adc
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
mov
xchg
sbb
lahf
or
add
add
cwtl
lahf
or
jmp
mov
adc
add
add
add
js
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
adc
or
and
add
fcompl
add
and
or
push
push
or
add
add
incl
add
add
add
add
sub
adc
add
add
or
mov
popf
or
add
add
mov
add
add
incl
add
add
movsb
mov
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
clc
mov
xchg
sbb
add
enter
add
add
or
add
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
and
adc
add
add
and
adc
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
adc
add
add
dec
mov
add
mov
add
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
xchg
sbb
add
shlb
add
adc
add
add
add
incl
add
add
incl
add
add
add
add
add
add
add
add
add
inc
sub
adc
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
xchg
sbb
add
push
mov
add
xchg
mov
add
add
add
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
mov
xchg
sbb
add
add
mov
add
clc
mov
add
add
add
call
mov
adc
add
add
sub
add
je
or
add
add
incl
add
add
add
or
add
add
adc
add
and
add
add
or
call
add
add
test
add
clc
mov
adc
add
add
mov
adc
add
add
test
or
jmp
mov
adc
add
add
inc
add
add
add
add
add
add
add
add
add
in
mov
xchg
sbb
add
add
mov
add
cld
mov
add
add
add
incl
or
jb
add
add
add
add
add
add
add
add
add
inc
movsb
or
and
add
sub
or
add
add
push
movsb
or
jmp
or
and
add
test
add
incl
add
add
add
add
add
add
test
or
call
mov
adc
add
add
fsubl
add
call
mov
adc
lcall
mov
adc
add
add
mov
adc
add
add
mov
adc
add
add
add
add
incl
or
decl
or
add
add
push
mov
adc
add
add
cmp
or
pushl
or
js
or
and
add
jo
or
push
mov
adc
add
add
mov
adc
add
add
pushf
movsl
or
pushl
add
add
enter
incl
add
add
incl
add
add
jo
adc
add
add
add
add
add
add
add
add
movsl
or
and
add
in
movsl
or
add
add
or
or
incl
add
add
incl
add
add
jb
adc
add
add
add
add
add
add
add
add
adc
add
add
cmp
or
add
add
pop
cmpsb
or
incl
add
add
incl
add
add
add
add
add
add
add
pushf
cmpsb
or
and
add
mov
add
lods
cmpsb
or
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
cmpsb
or
and
add
fsubl
add
cld
cmpsb
or
incl
add
add
incl
add
add
js
adc
add
add
add
add
add
add
add
add
or
and
add
sub
or
add
add
dec
cmpsl
or
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
xchg
sbb
add
add
adc
add
add
add
add
add
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
cmpsl
or
and
add
int3
cmpsl
or
add
add
in
cmpsl
or
incl
or
and
add
sbb
or
incl
add
add
add
add
inc
test
adc
add
add
jmp
add
add
insb
test
adc
add
add
incl
add
add
incl
add
add
inc
mov
adc
add
add
add
add
add
add
mov
adc
add
add
add
add
add
add
mov
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
adc
add
add
add
add
add
add
add
add
add
xor
add
mov
adc
add
add
add
fisttpll
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
test
add
pop
add
add
add
add
add
add
test
add
or
add
or
add
add
add
inc
test
add
or
add
or
add
add
add
push
test
add
push
add
add
add
add
add
add
or
and
add
nop
test
adc
add
add
or
stc
mov
adc
add
add
lea
adc
add
add
add
add
add
or
or
add
add
add
add
add
add
add
add
pop
add
add
lea
adc
add
add
add
add
add
add
add
add
add
add
lea
adc
add
add
add
add
lea
adc
lea
adc
add
add
add
add
or
adc
add
pop
lea
adc
add
add
nop
add
xchg
add
lock
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
les
add
push
add
add
add
add
add
add
stos
or
adc
add
adc
add
adc
add
add
add
in
or
and
add
add
or
add
stos
or
incl
add
add
add
add
or
incl
add
add
pushl
or
add
add
jle
or
add
add
mov
add
xchg
lea
adc
add
lahf
lea
adc
add
stos
lea
adc
add
add
add
add
add
add
lea
adc
add
add
add
add
add
add
add
add
add
add
lea
adc
add
add
add
add
add
add
add
add
add
add
add
add
stos
or
or
add
or
add
or
add
add
stos
or
and
add
je
or
add
add
or
or
push
lea
adc
add
add
lea
adc
add
add
push
lods
or
call
mov
adc
add
add
jl
or
incl
add
add
add
add
mov
adc
incl
add
add
add
add
mov
adc
add
add
or
add
add
dec
mov
adc
mov
adc
add
add
inc
mov
adc
add
add
push
or
pop
jmp
add
icebp
mov
adc
add
add
add
add
add
add
add
add
lods
or
and
add
mov
add
add
lods
or
pushl
or
and
add
cmp
add
call
add
add
add
add
pop
lods
or
pushl
add
add
add
add
mov
add
call
mov
adc
add
add
mov
adc
add
add
mov
adc
add
add
mov
adc
add
add
mov
adc
add
pop
add
add
mov
or
jmp
add
add
add
add
add
add
test
or
add
add
incl
add
add
add
add
add
add
add
and
or
inc
scas
or
pushl
or
add
add
jnp
or
and
add
pop
scas
or
call
add
add
test
add
pushl
add
add
add
add
test
or
incl
add
add
aam
or
incl
or
add
add
dec
add
add
or
and
add
clc
scas
or
push
add
add
sub
or
call
add
add
push
scas
or
incl
add
add
add
add
nop
or
incl
add
add
add
add
add
add
add
add
add
add
add
mov
xchg
sbb
add
add
adc
add
add
add
add
add
incl
add
add
add
add
nop
or
incl
add
add
testl
add
add
add
add
add
add
add
scas
or
and
add
int3
scas
or
add
add
hlt
scas
or
call
or
and
add
and
or
incl
add
add
incl
add
add
add
adc
add
add
add
add
add
add
add
add
or
and
add
dec
mov
adc
add
add
or
jmp
add
add
add
add
cwtl
mov
adc
add
add
incl
add
add
incl
add
add
inc
nop
or
add
add
enter
add
add
rclb
add
fistl
add
out
or
push
add
add
nop
or
pop
add
add
nop
or
or
add
pop
xchg
or
push
add
add
xchg
or
or
add
sbb
add
add
xchg
or
or
add
xor
add
ds
or
or
xchg
or
or
xchg
or
adc
add
pop
xchg
or
adc
add
push
or
or
xchg
or
or
xchg
or
adc
add
mov
add
xchg
xchg
or
or
xchg
or
or
xchg
or
sbb
add
mov
or
sbb
add
ret
adc
add
add
xchg
or
sbb
add
fcoms
add
jecxz
or
sbb
xchg
or
sbb
xchg
or
sbb
xchg
or
and
add
setb
adc
add
add
xchg
or
or
xchg
or
and
add
xor
add
cmp
add
inc
xchg
or
and
xchg
or
icebp
sbb
adc
add
add
add
add
add
add
add
add
or
and
add
les
add
adc
or
incl
add
add
incl
add
add
jmp
or
add
add
outsb
xchg
or
add
add
jbe
or
add
add
adcl
or
push
add
add
add
insl
inc
add
add
add
add
add
test
xchg
sbb
add
add
adc
add
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
ljmp
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
xchg
or
xchg
dec
add
icebp
dec
add
push
dec
add
push
push
add
add
add
add
add
and
or
add
add
add
add
add
add
add
add
xor
or
pop
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
adc
add
add
les
add
fs
adc
add
add
add
add
incl
add
add
incl
add
add
fists
add
out
or
add
add
out
xchg
or
add
add
cli
xchg
or
add
add
add
add
add
xchg
or
pop
add
add
add
add
xchg
or
or
add
and
add
cs
or
add
add
add
xchg
or
or
xchg
or
push
add
add
or
add
xchg
or
adc
add
gs
or
adc
add
jo
or
add
xchg
or
adc
add
xchg
add
xchg
xchg
or
lcall
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
mov
adc
add
add
shlb
add
mov
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
jmp
add
add
add
add
add
add
add
add
add
add
add
push
add
add
xchg
or
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
call
xchg
or
insb
push
add
test
adc
add
add
add
int
add
cmp
mov
add
out
insl
add
add
add
add
add
jl
or
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
or
add
or
add
add
add
lods
mov
adc
add
or
add
or
add
add
add
push
add
add
add
add
add
add
mov
adc
add
add
add
add
add
add
add
add
mov
adc
add
add
in
or
pop
add
add
mov
adc
add
add
add
add
push
xchg
or
and
add
xchg
mov
adc
add
add
call
xchg
or
and
add
mov
add
add
pushl
xchg
or
and
add
fdivl
add
call
or
and
add
add
add
pushl
or
and
add
and
or
call
add
add
dec
mov
adc
add
add
pushl
add
add
insb
mov
adc
add
add
call
xchg
or
add
add
fcoms
sbb
add
add
add
add
push
xchg
or
add
add
clc
xchg
or
and
add
mov
add
add
call
xchg
or
and
add
call
add
add
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
or
and
add
or
or
add
add
sub
or
incl
or
add
out
mov
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
mov
xchg
sbb
mov
add
movsb
mov
add
add
add
jmp
or
and
add
call
add
add
incl
add
add
or
or
incl
add
add
incl
add
add
incl
add
add
incl
add
add
ret
and
add
add
add
add
add
push
mov
add
add
add
add
add
add
add
pusha
mov
xchg
sbb
add
xor
add
jo
or
pushl
add
add
add
pop
movb
add
add
add
add
add
add
add
add
fdivrl
add
add
add
add
add
add
add
in
mov
xchg
sbb
mov
add
cld
mov
add
add
add
call
xchg
or
xchg
enter
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
js
or
and
add
inc
mov
add
mov
add
add
add
incl
add
add
add
add
xchg
or
incl
add
add
add
add
add
add
add
add
add
add
add
in
or
and
add
int3
mov
add
hlt
mov
add
add
add
incl
add
add
add
add
xchg
or
incl
add
add
add
add
add
add
add
add
add
add
add
cmp
or
and
add
and
or
add
add
dec
mov
add
add
add
incl
add
add
add
add
xchg
or
incl
add
add
add
add
add
add
add
add
add
add
add
xchg
mov
xchg
sbb
add
add
adc
add
add
add
add
add
incl
add
add
add
add
or
incl
add
add
add
add
add
add
add
add
add
add
add
in
mov
xchg
sbb
add
add
mov
add
cld
mov
add
add
add
pushl
or
and
add
sub
or
incl
add
add
incl
add
add
add
add
add
add
add
pusha
mov
xchg
sbb
add
add
or
add
add
jo
or
incl
add
add
incl
add
add
sti
add
add
add
add
add
mov
or
and
add
mov
add
add
mov
add
add
add
incl
add
add
incl
add
add
sti
add
add
add
add
add
add
xchg
sbb
add
add
mov
add
adc
add
add
add
incl
add
add
incl
add
add
add
add
add
add
add
push
mov
xchg
sbb
add
add
or
add
add
pusha
mov
add
add
add
incl
add
add
incl
add
add
add
add
add
add
add
mov
add
add
nop
mov
add
mov
or
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
mov
xchg
sbb
add
add
mov
add
add
add
add
add
incl
add
add
incl
add
add
add
adc
add
add
add
add
add
add
add
add
or
and
add
xor
add
push
mov
add
add
add
incl
add
add
incl
add
add
add
add
add
add
add
nop
mov
xchg
sbb
add
add
add
add
add
add
add
add
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
mov
xchg
sbb
add
add
mov
add
lock
add
add
add
jmp
xchg
or
and
add
and
add
incl
add
add
incl
add
add
push
add
add
add
add
add
push
mov
xchg
sbb
add
add
adc
add
add
adc
add
add
add
add
call
or
and
add
xchg
mov
add
jmp
or
add
add
insl
xchg
or
add
add
js
or
add
add
adcl
add
add
add
add
cmpsl
xchg
or
push
add
add
add
add
add
add
xchg
or
add
xchg
or
or
add
ficoms
xchg
sbb
add
mov
add
add
push
xchg
or
and
add
xor
or
incl
add
add
cwtl
or
and
add
pop
rorb
jmp
cwtl
or
add
add
sub
add
add
test
or
incl
add
add
add
add
cwtl
or
add
add
inc
cwtl
or
add
add
push
cwtl
or
add
add
pop
cwtl
or
add
add
push
add
add
or
incl
add
add
add
add
add
add
add
add
add
add
rorb
and
add
mov
or
add
add
add
or
incl
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
pop
rorl
and
add
xor
or
add
add
push
add
add
add
add
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
cwtl
rorl
add
add
mov
add
add
add
add
incl
add
add
add
add
add
add
cwtl
or
add
add
int
or
incl
add
add
cmp
adc
add
add
add
add
add
add
add
adc
or
and
add
call
add
add
ret
incl
add
add
add
add
cwtl
or
incl
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
ret
add
add
js
or
push
cwtl
or
add
add
stc
cwtl
or
add
add
add
or
add
add
setns
adc
add
add
test
or
incl
add
add
incl
add
add
inc
add
add
add
add
add
hlt
ret
and
add
in
or
add
add
add
or
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
adc
add
add
xor
or
add
add
push
ret
or
cmp
incl
or
and
add
test
or
jmp
or
ljmp
or
add
add
jo
or
and
add
mov
or
call
add
add
in
or
pushl
add
add
add
add
add
add
add
add
add
add
add
add
les
adc
add
add
or
or
add
add
cmp
or
call
cltd
or
mov
adc
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
push
cltd
or
and
add
rol
adc
add
add
call
lcall
add
add
incl
add
add
add
add
add
add
add
add
add
add
les
adc
add
add
in
or
add
add
or
or
pushl
lcall
add
add
cmp
or
call
or
cmc
push
add
add
add
add
add
add
add
js
or
and
add
pusha
lds
adc
add
add
add
add
add
add
pushl
or
ss
adc
add
add
add
add
add
add
add
add
lds
adc
add
add
mov
add
add
lds
adc
add
add
add
add
call
add
add
adc
or
pushl
add
add
xor
or
call
lcall
fistpl
xchg
sbb
add
add
or
push
lcall
clc
lcall
add
add
or
call
fwait
or
and
add
test
or
pushl
fwait
or
and
add
enter
call
or
and
add
in
or
pushl
or
and
add
adc
or
call
add
add
xor
or
pushl
add
add
pop
or
call
fwait
or
add
add
fcomps
xchg
sbb
add
add
adc
add
add
push
fwait
or
add
add
clc
fwait
or
and
add
test
or
call
pushf
or
and
add
aam
or
pushl
pushf
or
add
add
cmp
sbb
add
add
or
decl
or
add
add
push
pushf
or
add
add
pop
pushf
or
and
add
and
or
ljmp
adc
add
add
pop
enter
add
add
incl
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
xchg
sbb
add
add
adc
add
add
add
add
add
incl
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
enter
add
add
aam
or
add
add
add
or
ljmp
add
add
add
add
add
add
xor
or
incl
add
add
incl
add
add
add
add
pushf
or
add
add
fstpl
add
pushf
or
add
add
repz
or
add
add
mov
sbb
pushl
mov
add
cld
push
or
lock
jmp
mov
add
push
movsb
add
add
add
add
add
add
push
add
add
leave
or
decl
popf
or
add
add
adc
xchg
sbb
add
add
leave
or
jmp
pushl
popf
or
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
inc
lret
and
add
and
or
add
add
push
lret
incl
add
add
incl
add
add
mov
adc
add
add
add
add
add
add
add
add
xchg
sbb
add
add
add
movsb
lret
incl
add
add
incl
add
add
add
add
or
add
add
pusha
popf
or
add
add
imul
add
or
add
add
mov
push
mov
add
cld
push
or
inc
std
mov
add
add
mov
add
add
add
add
add
add
or
and
add
aam
or
add
add
xor
or
call
add
add
add
add
add
add
add
add
popf
or
add
add
rcrl
add
in
or
push
add
add
popf
or
pop
add
add
sahf
or
or
add
adc
xchg
sbb
add
add
adc
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
rolb
adc
add
add
roll
adc
add
add
add
add
add
add
add
add
lret
or
add
add
add
add
add
add
add
add
add
or
and
add
ror
or
add
add
adc
or
incl
or
and
add
push
int3
or
jmp
or
and
add
js
or
incl
add
add
add
add
incl
add
add
fiadds
adc
add
add
add
add
add
add
add
add
xchg
sbb
add
add
add
int3
or
ljmp
add
add
add
add
hlt
int3
or
incl
add
add
incl
add
add
in
adc
add
add
add
add
add
add
add
add
int
adc
add
add
and
or
add
add
inc
int
adc
add
add
add
add
jmp
sahf
or
and
add
jo
or
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
xchg
sbb
add
add
add
mov
or
decl
lahf
or
add
add
adc
xchg
sbb
add
add
int
adc
add
add
incl
add
add
incl
add
add
add
add
add
add
add
add
add
and
or
and
add
adc
or
add
add
xor
or
pushl
lahf
or
add
add
cmp
add
inc
lahf
or
add
add
push
lahf
or
add
add
pop
lahf
or
add
add
addr16
or
and
add
pusha
into
or
jl
or
and
add
lods
into
or
call
add
add
ror
or
jmp
add
add
hlt
into
or
inc
lahf
or
add
add
enter
add
add
rcrl
add
ficomps
add
jmp
add
add
lahf
or
add
mov
add
adc
xchg
sbb
add
add
iret
or
incl
add
add
incl
add
add
incl
add
add
incl
add
add
fs
xchg
gs
add
add
add
add
xchg
iret
or
add
add
add
add
add
add
add
add
movsb
iret
or
and
add
je
or
add
add
mov
or
incl
or
and
add
clc
iret
or
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
or
and
add
sbb
or
add
add
cmp
or
incl
add
add
incl
add
add
add
add
add
add
add
jl
or
and
add
insb
rorb
adc
add
add
add
add
add
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
rorb
adc
add
add
mov
add
add
rorb
adc
add
add
add
add
incl
add
add
incl
add
add
jo
adc
add
add
add
add
add
add
add
add
or
and
add
or
or
add
add
sub
or
incl
add
add
incl
add
add
jae
adc
add
add
add
add
add
add
add
add
adc
add
add
pop
rorl
adc
add
add
adc
add
add
add
add
incl
add
add
incl
add
add
add
add
add
add
add
mov
add
add
lods
rorl
adc
add
add
rorl
adc
add
add
add
add
inc
mov
xchg
sbb
add
add
rorl
adc
add
add
jmp
mov
add
call
add
add
mov
xchg
sbb
add
add
rorb
adc
add
add
incl
mov
xchg
sbb
add
add
adc
add
add
call
or
add
add
sbb
or
add
add
and
or
add
add
das
mov
add
aaa
mov
add
inc
mov
add
dec
mov
add
push
mov
add
pusha
mov
add
imul
add
or
add
add
andl
or
or
add
xchg
mov
xchg
sbb
add
add
or
ljmp
add
mov
or
and
add
add
or
inc
mov
add
into
mov
add
mov
add
loope
or
add
add
jmp
add
add
xor
or
sti
mov
xchg
sbb
add
add
adc
add
add
decl
add
add
cwtl
rorl
adc
add
add
lcall
mov
xchg
sbb
add
add
add
pushl
mov
add
cmp
add
inc
mov
add
dec
mov
add
push
mov
xchg
sbb
rorl
adc
add
add
jmp
or
add
add
jno
or
pushl
or
and
add
and
or
incl
add
add
decl
add
add
add
add
pop
aam
adc
add
add
ljmp
add
add
mov
add
int3
mov
xchg
sbb
add
add
add
jmp
mov
add
std
mov
add
add
add
add
enter
lcall
mov
add
and
xchg
sbb
add
add
aam
adc
add
add
pushl
mov
xchg
sbb
add
add
aad
adc
add
add
decl
or
add
add
push
mov
lcall
or
add
add
mov
ljmp
adc
add
ja
or
add
add
andb
decl
add
add
add
add
dec
aad
adc
add
add
ljmp
add
add
mov
or
mov
add
add
mov
add
iret
mov
add
fisubl
jmp
mov
push
mov
sti
mov
add
add
add
movsb
or
and
add
aam
or
lcall
or
add
add
and
add
movsb
or
add
add
xor
add
movsb
or
add
add
dec
movsb
or
add
add
push
movsb
or
and
add
cmp
or
decl
add
add
lcall
add
add
add
add
add
add
mov
or
mov
add
add
rcl
or
dec
movsb
or
and
add
hlt
or
jmp
movsb
or
and
add
sbb
or
incl
add
add
add
add
movsb
or
add
add
sti
movsb
or
incl
add
add
mov
add
add
add
add
add
add
add
pop
xlat
or
and
add
cmp
or
add
add
insb
xlat
or
decl
call
add
add
pushf
xlat
or
pushl
movsl
or
add
add
daa
movsl
or
add
add
das
movsl
or
and
add
enter
lcall
or
and
add
cld
xlat
or
ljmp
adc
add
add
and
or
decl
add
add
or
add
add
xchg
xchg
sbb
add
add
adc
add
add
pushl
add
add
js
or
dec
movsl
or
add
add
ret
movsl
or
and
add
pushf
fmuls
adc
add
add
out
movsl
or
add
add
or
add
add
add
add
cmpsb
or
add
add
sub
xchg
sbb
fmuls
adc
add
add
incl
or
add
add
dec
cmpsb
or
add
add
outsl
cmpsb
or
add
add
xchg
cmpsb
or
and
add
or
or
ljmp
pushl
add
add
dec
adc
add
add
jmp
cmpsb
or
add
add
lds
add
int
or
add
add
aad
or
add
add
frstor
xchg
sbb
adc
add
add
decl
cmpsl
or
add
add
push
cmpsl
or
add
add
push
cmpsl
or
and
add
mov
add
add
incl
or
add
add
xor
add
cmp
xchg
sbb
add
add
adc
add
add
jmp
or
ljmp
or
and
add
and
or
lcall
add
add
or
add
add
test
add
lea
add
xchg
cmpsl
or
and
add
dec
fimull
adc
add
add
inc
cmpsl
or
dec
cmpsl
or
call
cmpsl
or
and
add
nop
fimull
adc
add
add
jmp
or
add
add
repz
or
and
add
fimull
adc
add
add
incl
decl
add
add
lock
adc
add
add
lcall
test
adc
add
add
test
adc
add
add
test
adc
add
add
sbb
or
decl
or
add
add
inc
test
adc
add
add
push
fisttpl
adc
add
add
ljmp
adc
pushl
adc
add
add
adc
add
add
add
add
jl
or
lcall
ljmp
add
add
mov
add
add
inc
test
adc
add
add
xchg
sbb
add
add
fisttpl
adc
add
add
jmp
test
adc
out
test
adc
add
add
adc
or
incl
test
xchg
sbb
add
add
or
lcall
test
add
adc
xchg
sbb
add
add
or
call
or
add
add
ds
add
inc
test
add
dec
test
xchg
sbb
add
mov
or
jns
or
add
add
test
add
add
add
lcall
add
add
add
add
add
add
add
test
add
shrl
add
fsubrl
add
out
or
add
add
repnz
add
std
test
add
or
add
adc
add
push
stos
or
or
add
sub
add
xor
or
and
add
enter
decl
or
add
add
push
stos
or
and
add
je
or
jmp
or
and
add
mov
add
add
pushl
or
and
add
fisttpll
adc
add
add
incl
add
add
call
add
add
jmp
add
add
add
add
or
or
inc
stos
or
dec
stos
or
add
add
xlat
stos
or
jmp
stos
or
push
stos
or
sti
stos
or
add
stos
or
call
stos
or
and
add
cmp
or
ljmp
stos
or
add
add
es
or
and
add
xchg
fimuls
adc
add
add
call
or
add
add
pop
stos
or
add
add
popa
stos
or
add
add
insb
stos
or
add
add
ja
or
add
add
subb
sbb
add
add
fimuls
adc
add
add
call
add
add
or
or
ljmp
add
add
add
mov
add
add
stos
or
add
add
fsubrs
add
cli
stos
or
add
add
fsubrs
add
cli
stos
or
add
add
sbb
or
add
add
daa
lods
or
add
add
xor
add
lods
or
or
add
inc
lods
or
or
add
push
lods
or
or
add
pop
lods
or
or
add
data16
or
and
add
xor
or
jnp
or
add
add
subl
mov
add
add
add
add
scas
lods
or
add
add
mov
add
add
lods
or
add
add
shrb
add
lods
or
or
add
jecxz
or
or
add
out
lods
or
or
add
stc
lods
or
or
add
add
or
or
add
shrd
adc
add
add
int3
fisttps
adc
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
add
and
push
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pusha
loopne
adc
add
add
loopne
adc
add
add
add
add
ljmp
lods
or
pushl
lods
or
add
add
inc
lods
or
decl
or
call
adc
add
pop
lods
or
ljmp
or
pushl
or
pop
add
add
decl
call
add
add
ljmp
pushl
add
add
lods
or
dec
lods
or
fsubrs
add
jecxz
or
out
lods
or
stc
lods
or
adc
add
add
or
and
add
sbb
or
lcall
scas
or
add
add
and
xchg
sbb
add
add
loope
adc
add
add
pushl
scas
or
add
add
cmp
add
inc
scas
or
add
add
dec
scas
or
add
add
push
scas
or
add
add
pop
scas
or
add
add
imul
add
or
or
jle
or
add
add
xchg
add
mov
add
xchg
scas
or
add
add
sahf
scas
or
add
add
test
add
add
xchg
sbb
add
add
adc
add
add
dec
scas
or
add
add
shrl
add
fldcw
add
loope
or
add
add
jmp
add
add
scas
or
add
add
ljmp
xchg
sbb
add
add
add
add
call
or
add
add
sbb
or
add
add
and
or
add
add
sub
or
add
add
xor
or
add
add
aas
scas
or
add
add
dec
scas
or
and
add
add
or
lcall
or
add
add
scas
or
add
add
outsl
scas
or
add
add
ja
or
add
add
jg
or
add
add
mov
add
xchg
scas
or
and
add
pop
jecxz
adc
add
add
ljmp
add
add
add
add
add
add
scas
or
add
add
int
or
add
add
fsubrs
add
jecxz
or
add
add
out
scas
or
add
add
stc
scas
or
add
add
add
or
and
add
lods
jecxz
adc
add
add
lcall
mov
adc
add
add
mov
adc
add
add
or
add
add
xor
or
add
add
aas
mov
adc
add
add
sbb
or
jmp
or
add
add
imul
sbb
add
add
adc
add
add
incl
add
add
mov
or
incl
or
add
add
pop
mov
adc
add
add
adc
add
add
lods
in
adc
add
add
jmp
add
add
add
add
loopne
or
call
mov
adc
add
add
mov
adc
add
add
mov
adc
add
add
mov
adc
add
add
add
add
mov
adc
mov
adc
add
add
or
or
call
mov
adc
add
add
mov
adc
add
add
pusha
in
adc
add
add
jmp
mov
adc
add
add
mov
adc
add
add
mov
adc
add
add
mov
adc
add
add
or
add
add
dec
mov
adc
add
add
mov
or
pushl
or
add
add
js
or
and
add
fsub
or
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
or
and
add
add
or
add
add
and
or
inc
mov
adc
add
add
mov
adc
add
add
push
out
adc
add
add
jmp
mov
adc
add
add
and
adc
add
add
incl
mov
adc
add
add
movsb
out
adc
add
add
jmp
mov
adc
add
add
mov
adc
add
add
mov
adc
add
add
mov
adc
add
add
enter
call
add
add
add
add
add
or
pushl
or
add
add
js
or
and
add
xor
or
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
adc
add
add
pop
out
adc
add
add
adc
add
add
add
add
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
xchg
sbb
add
add
add
int3
out
adc
add
add
add
add
incl
add
add
incl
add
add
push
adc
add
add
add
add
add
add
add
add
or
and
add
cld
out
adc
add
add
or
inc
mov
adc
add
add
dec
call
add
incl
add
add
incl
add
add
scas
push
adc
add
add
add
add
add
add
add
add
add
add
jo
or
add
add
nop
call
add
add
add
push
mov
adc
add
add
shr
adc
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
push
adc
add
add
push
adc
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
adc
or
and
add
in
or
add
add
and
or
incl
add
add
add
add
or
incl
add
add
roll
add
add
add
add
add
add
add
add
sub
adc
add
add
push
add
add
add
add
add
add
jmp
or
rol
push
adc
add
add
ret
push
adc
add
add
add
add
add
add
add
add
jmp
add
add
add
add
add
add
add
clc
jmp
xchg
sbb
jmp
add
or
or
jmp
add
add
dec
ljmp
incl
add
add
add
add
mov
adc
incl
add
add
fadds
adc
add
add
add
add
add
add
add
add
add
add
jo
or
add
add
cwtl
ljmp
add
add
incl
add
add
add
add
mov
adc
incl
add
add
adc
add
add
add
add
add
add
add
add
ljmp
add
add
enter
add
add
lock
add
add
incl
mov
adc
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
pop
jmp
adc
add
add
and
or
add
add
push
add
add
add
add
jmp
mov
adc
add
add
push
adc
add
add
push
adc
add
add
add
add
add
add
add
add
jmp
adc
add
add
add
add
add
add
add
in
or
and
add
lods
jmp
adc
add
add
jmp
adc
add
add
add
add
incl
add
add
add
add
or
incl
add
add
loop
adc
add
add
add
add
add
add
add
add
or
and
add
cmp
or
add
add
pusha
in
or
incl
add
add
add
add
or
incl
add
add
adc
add
add
add
add
add
add
add
add
add
add
nop
in
or
add
add
mov
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
in
or
and
add
call
add
add
in
or
incl
add
add
add
add
incl
add
add
out
adc
add
add
add
add
add
add
add
add
or
and
add
inc
in
or
add
add
push
add
add
add
add
incl
add
add
add
add
mov
adc
incl
add
add
adc
add
add
add
add
add
add
add
add
add
add
cwtl
in
or
add
add
shr
adc
add
add
add
add
incl
add
add
add
add
mov
adc
incl
add
add
push
adc
add
add
add
add
add
add
add
add
out
or
and
add
lock
or
add
add
sbb
or
incl
mov
adc
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
sub
adc
add
add
dec
out
or
add
add
nop
out
or
incl
add
add
incl
add
add
incl
add
add
incl
add
add
push
adc
add
add
push
adc
add
add
add
add
add
add
add
add
out
or
add
add
add
add
add
add
add
add
add
or
and
add
aam
or
add
add
adc
or
incl
add
add
add
add
mov
adc
incl
add
add
adc
add
add
add
add
add
add
add
add
or
and
add
pop
out
or
add
add
sub
adc
add
add
add
add
call
or
jl
push
adc
add
add
cmc
push
adc
add
add
add
add
add
add
add
add
out
or
add
add
add
add
add
add
add
add
call
add
add
mov
or
add
add
clc
out
or
pushl
or
dec
cli
push
adc
add
add
push
adc
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
je
or
and
add
cmp
or
add
add
test
or
call
add
add
push
adc
add
add
push
adc
add
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
add
or
and
add
enter
add
add
adc
or
pushl
add
add
pop
adc
add
add
pop
adc
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
mov
or
and
add
push
icebp
or
add
add
pushf
icebp
or
incl
add
add
loopne
or
call
mov
adc
add
add
pop
adc
add
add
pop
adc
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
cmp
or
and
add
add
or
add
add
dec
repnz
push
mov
adc
add
add
pop
adc
add
add
pop
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
enter
and
add
nop
repnz
add
add
fdiv
or
call
or
and
add
sbb
or
call
mov
adc
add
add
inc
repz
inc
mov
adc
add
add
repz
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
mov
or
add
add
test
or
incl
add
add
incl
add
add
pop
adc
add
add
add
add
add
add
add
add
repz
and
add
fdiv
or
add
add
clc
repz
incl
add
add
add
add
or
incl
add
add
ss
adc
add
add
add
add
add
add
add
add
or
and
add
sub
or
add
add
push
hlt
or
pushl
or
add
add
mov
adc
add
add
add
add
add
add
add
add
xor
adc
add
add
incl
add
add
hlt
or
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
hlt
or
and
add
call
add
add
cmc
or
incl
add
add
add
add
mov
adc
incl
add
add
add
add
add
add
add
add
add
add
or
and
add
cmp
or
add
add
pusha
cmc
or
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
nop
cmc
or
add
add
mov
or
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
cmc
or
and
add
loopne
or
add
add
add
or
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
or
and
add
xor
or
add
add
push
testb
incl
add
add
incl
add
add
pop
adc
add
add
add
add
add
add
add
add
add
add
xor
adc
add
add
add
add
add
add
incl
add
add
incl
add
add
inc
pop
adc
add
add
add
add
add
add
add
add
testb
and
add
shl
or
add
add
lock
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
pop
adc
add
add
add
add
add
add
add
add
or
add
add
add
add
push
testl
sbb
add
and
or
add
add
pusha
testl
add
add
add
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
xchg
sbb
add
add
add
testl
add
add
add
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
or
and
add
hlt
testl
add
or
ljmp
or
add
add
pusha
mov
xchg
sbb
add
add
adc
add
add
jmp
add
add
add
add
add
add
jo
or
fdivrs
add
sarb
xchg
sbb
add
add
add
incl
mov
xchg
sbb
add
add
clc
or
jmp
mov
xchg
sbb
add
add
clc
or
incl
or
and
add
sbb
or
jmp
or
and
add
cmp
or
incl
add
add
pusha
stc
or
incl
add
add
incl
add
add
outsb
pop
adc
add
add
add
add
add
add
add
add
xchg
sbb
add
add
add
movsb
stc
or
incl
add
add
incl
add
add
outsl
pop
adc
add
add
add
add
add
add
add
add
stc
or
and
add
aam
or
add
add
hlt
stc
or
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
or
and
add
and
or
add
add
inc
cli
or
incl
add
add
incl
add
add
pop
adc
add
add
add
add
add
add
add
add
xchg
sbb
add
add
adc
add
add
add
add
add
incl
add
add
incl
add
add
jo
adc
add
add
add
add
add
add
add
add
cli
or
and
add
cli
or
add
add
in
or
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
or
and
add
adc
or
add
add
xor
or
incl
add
add
incl
add
add
js
adc
add
add
add
add
add
add
add
add
adc
add
add
fs
or
add
add
test
or
incl
add
add
incl
add
add
js
adc
add
add
add
add
add
add
add
add
sti
or
and
add
mov
or
add
add
aam
or
incl
add
add
incl
add
add
pop
adc
add
add
add
add
add
add
add
add
or
and
add
add
or
add
add
and
or
incl
add
add
incl
add
add
jp
adc
add
add
add
add
add
add
add
add
adc
add
add
push
cld
or
add
add
je
or
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
xchg
sbb
add
add
add
cld
or
incl
add
add
incl
add
add
pop
adc
add
add
add
add
add
add
add
add
xchg
sbb
add
add
cld
or
add
add
adc
or
incl
add
add
incl
add
add
pop
adc
add
add
add
add
add
add
add
add
adc
add
add
inc
std
or
add
add
fs
or
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
xchg
sbb
add
add
add
mov
or
incl
add
add
incl
add
add
xchg
adc
add
add
add
add
add
add
add
add
std
or
and
add
in
or
add
add
add
or
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
adc
add
add
xor
or
add
add
push
decb
adc
add
add
add
add
incl
add
add
incl
add
add
pop
adc
add
add
add
add
add
add
add
add
xchg
sbb
add
add
add
movsb
decb
adc
add
add
add
add
incl
add
add
incl
add
add
mov
adc
add
add
add
add
add
add
add
add
decb
adc
add
add
aam
or
add
add
hlt
decb
adc
add
add
add
add
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
or
and
add
and
or
add
add
inc
decl
adc
add
add
add
add
incl
add
add
incl
add
add
pop
adc
add
add
add
add
add
add
add
add
xchg
sbb
add
add
adc
add
add
add
add
add
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
decl
adc
add
add
decl
adc
add
add
decl
adc
add
add
add
add
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
or
and
add
adc
or
add
add
xor
or
incl
add
add
incl
add
add
pop
adc
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
test
or
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
and
add
mov
or
add
add
aam
or
incl
add
add
incl
add
add
mov
adc
add
add
add
add
add
add
add
add
or
and
add
add
or
add
add
and
or
incl
add
add
incl
add
add
pop
adc
add
add
add
add
add
add
add
add
adc
add
add
push
add
add
add
je
or
incl
add
add
incl
add
add
pop
adc
add
add
add
add
add
add
add
add
xchg
sbb
add
add
add
les
or
incl
add
add
incl
add
add
xchg
pop
adc
add
add
add
add
add
add
add
add
or
and
add
hlt
add
add
add
adc
or
incl
add
add
incl
add
add
xchg
pop
adc
add
add
add
add
add
add
add
add
adc
add
add
inc
add
add
add
add
pushl
or
and
add
xchg
add
call
add
add
add
add
mov
add
add
mov
add
add
add
add
in
or
jmp
mov
add
call
add
add
adc
or
decl
mov
add
add
sbb
add
add
or
pushl
mov
add
cmp
sbb
add
add
or
lcall
or
add
add
push
mov
xchg
sbb
add
add
add
incl
add
add
add
add
rolb
adc
add
add
ljmp
add
add
add
add
in
add
call
mov
add
fdivrs
sbb
add
add
add
adc
add
add
clc
mov
add
lock
xchg
sbb
add
add
adc
add
add
pushl
mov
add
and
add
sub
xchg
sbb
add
add
or
ljmp
or
add
add
pusha
mov
xchg
sbb
add
add
add
jmp
add
add
add
add
add
add
rolb
adc
add
add
fdivrs
add
sarb
xchg
sbb
add
add
add
call
mov
add
add
add
or
xchg
sbb
add
add
add
add
decl
or
add
add
inc
mov
xchg
sbb
add
add
adc
add
add
incl
add
add
or
add
add
js
or
and
add
nop
add
add
mov
add
add
add
add
les
add
push
mov
add
loopne
or
add
add
call
add
add
lock
add
jmp
mov
xchg
sbb
add
add
or
decl
or
add
add
inc
mov
xchg
sbb
add
add
or
pushl
or
and
add
je
or
call
lcall
add
add
cwtl
push
or
ljmp
add
add
mov
add
sarl
add
fdivrl
add
out
or
add
add
cmc
mov
add
add
or
add
add
or
or
add
add
push
rorb
and
add
les
or
ljmp
rorb
add
add
dec
rorb
add
add
push
rorb
add
add
pop
rorb
add
add
push
add
add
or
add
add
add
add
mov
or
add
add
xchg
rorb
and
add
sub
or
ljmp
add
mov
or
add
add
mov
add
add
rorb
and
add
mov
or
ljmp
add
rorb
and
add
enter
decl
call
lcall
add
add
hlt
pop
or
pushl
rorl
add
add
cmp
or
add
add
inc
rorl
add
add
dec
rorl
add
add
pop
rorl
add
add
arpl
or
add
add
outsb
rorl
and
add
sub
or
inc
rorl
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jl
or
push
rorl
add
add
in
rorl
and
add
fmuls
or
lcall
ret
add
add
and
or
add
add
cs
and
add
add
or
incl
add
add
incl
add
add
call
add
add
add
add
add
add
add
dec
or
and
add
cmp
or
add
add
pop
or
decl
or
add
add
push
ret
add
add
pop
ret
add
add
push
add
add
or
and
add
mov
or
decl
add
add
int3
or
ljmp
add
add
add
add
add
add
lock
call
ret
add
add
in
ret
add
add
hlt
ret
and
add
and
or
call
ret
or
add
add
sub
or
and
add
pop
or
incl
or
add
add
dec
ret
or
and
add
test
or
jmp
or
and
add
mov
or
incl
add
add
add
add
add
add
add
add
add
mov
add
add
aam
or
jmp
ret
or
and
add
and
or
incl
les
adc
incl
add
add
or
add
add
add
add
add
add
add
add
pop
or
and
add
inc
or
add
add
insb
or
incl
add
add
add
add
les
adc
incl
add
add
push
or
add
add
add
add
add
add
add
add
mov
or
and
add
pushf
or
add
add
les
or
incl
add
add
incl
add
add
incl
add
add
incl
add
add
or
pop
or
adc
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
and
or
and
add
hlt
or
add
add
xor
or
call
or
and
add
js
or
pushl
or
and
add
pushf
or
adc
add
add
incl
add
add
incl
add
add
or
add
add
add
add
rorb
adc
add
add
rorb
add
add
loopne
or
incl
add
add
incl
add
add
sbb
adc
add
add
add
add
add
add
add
add
or
xchg
sbb
add
add
or
add
xor
add
add
add
incl
add
add
incl
add
add
or
add
add
add
add
jo
or
and
add
pusha
or
add
orb
add
add
add
inc
les
adc
add
add
les
adc
add
add
mov
or
ffree
or
and
add
fmull
add
out
les
adc
add
add
les
adc
add
add
add
add
add
or
lcall
lds
adc
add
add
xor
or
ljmp
lds
adc
add
add
lds
adc
add
add
lds
adc
add
add
pop
push
or
call
or
and
add
mov
or
jmp
or
and
add
mov
or
js
or
add
add
add
adc
add
add
aam
or
jmp
add
add
or
add
add
add
add
add
add
add
add
sbb
or
and
add
add
or
add
add
sub
or
inc
lds
adc
add
add
xor
adc
add
add
add
add
add
add
add
add
or
and
add
pop
adc
add
add
add
add
add
add
jmp
lds
adc
add
add
lds
adc
add
add
mov
or
incl
or
add
add
sbb
or
and
add
fmull
or
incl
or
and
add
or
or
jmp
or
and
add
sub
or
incl
add
add
push
adc
incl
add
add
incl
add
add
inc
or
add
add
add
add
test
or
and
add
je
or
add
add
xchg
adc
pushl
add
add
les
or
call
or
and
add
call
add
add
push
or
and
add
or
or
call
or
and
add
xor
or
incl
add
add
incl
add
add
or
add
add
add
add
adc
and
add
push
adc
add
add
je
or
incl
or
add
add
dec
or
pop
push
or
add
add
add
add
add
add
add
add
les
or
and
add
movsb
adc
add
add
aam
or
jmp
or
and
add
add
or
incl
add
add
sub
or
jmp
add
add
add
add
dec
adc
incl
add
add
incl
add
add
pop
or
add
add
add
add
mov
or
and
add
js
or
add
add
cwtl
adc
call
or
add
add
fadd
or
add
add
loopne
or
and
add
enter
push
or
and
add
cld
adc
call
enter
add
add
or
lock
add
add
add
add
add
add
add
add
dec
adc
add
add
add
add
add
add
add
add
pop
adc
and
add
and
or
add
add
push
add
add
add
add
pushl
enter
add
add
lods
adc
incl
add
add
incl
add
add
imul
add
add
add
add
add
add
add
adc
and
add
rclb
or
add
add
lock
incl
add
add
incl
add
add
or
add
add
add
add
xor
adc
add
add
and
adc
add
add
or
pushl
or
and
add
jo
or
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
or
add
add
or
adc
add
add
jo
adc
add
add
add
add
add
add
adc
adc
add
add
xchg
adc
adc
add
add
adc
adc
add
add
add
add
inc
enter
add
add
enter
add
add
enter
add
add
adc
or
incl
add
add
incl
add
add
test
adc
add
add
add
add
add
add
add
add
or
and
add
dec
adc
add
push
add
add
add
add
incl
add
add
incl
add
add
or
add
add
add
add
test
or
and
add
cwtl
adc
add
mov
add
add
add
add
call
leave
or
and
add
call
add
add
incl
or
and
add
or
or
incl
add
add
incl
add
add
mov
add
add
add
add
add
add
add
inc
push
or
and
add
xor
or
add
add
push
push
or
incl
add
add
incl
add
add
adc
add
add
add
add
add
add
add
add
add
add
adcb
adc
add
add
add
add
add
add
incl
add
add
incl
add
add
cmpsl
or
add
add
add
add
loopne
or
and
add
rclb
or
add
add
lock
or
lcall
add
add
add
add
and
or
inc
leave
or
add
add
lret
leave
or
and
add
dec
pop
or
jmp
leave
or
add
add
out
leave
or
and
add
js
or
incl
lret
add
add
adc
or
and
add
movsb
pop
or
jmp
lret
add
add
xor
or
add
add
cmp
or
add
add
inc
lret
add
add
dec
lret
add
add
pop
lret
add
add
gs
and
add
rclb
or
jp
or
and
add
and
or
decl
add
xchg
lret
and
add
dec
sbb
ljmp
xchg
sbb
add
add
adc
add
add
mov
add
add
lret
add
add
into
lret
and
add
cwtl
sbb
pushl
add
add
add
add
int3
sbb
jmp
lret
add
add
dec
or
add
add
pop
lret
or
add
add
adc
or
add
add
sbb
add
add
lret
or
add
lret
or
push
add
add
lret
or
pop
add
add
or
and
add
clc
sbb
pushl
or
add
add
mov
or
add
add
xchg
lret
or
add
add
mov
add
add
pop
sbb
inc
lret
or
add
add
fmul
or
and
add
cwtl
sbb
incl
int3
or
and
add
les
or
incl
or
and
add
call
add
add
pushl
or
add
add
jnp
or
add
add
xchg
or
and
add
or
or
jmp
int3
or
and
add
inc
sbb
jmp
add
add
add
add
add
add
add
add
int3
or
add
add
aam
or
add
int3
or
push
add
add
int3
or
pop
add
add
int3
or
and
add
sbb
incl
add
add
incl
add
add
or
add
add
add
add
fcomps
or
and
add
enter
add
add
call
add
add
add
add
incl
add
add
incl
add
add
leave
or
add
add
add
add
sub
or
and
add
sbb
or
add
add
cmp
or
incl
add
add
incl
add
add
or
add
add
add
add
js
or
and
add
push
add
add
add
add
add
add
incl
add
add
incl
add
add
int3
or
add
add
add
add
enter
and
add
mov
add
add
sbb
incl
add
add
incl
add
add
int
adc
add
add
add
add
add
add
add
add
sbb
adc
add
add
or
adc
add
add
sbb
adc
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
or
or
or
add
add
add
add
js
or
add
add
add
add
add
add
add
add
mov
adc
add
add
pop
sbb
adc
add
add
add
add
add
add
pushl
or
and
add
fcompl
adc
add
add
call
add
add
adc
add
add
fisttpl
adc
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
cmp
xchg
sbb
sbb
add
dec
sbb
add
add
add
incl
add
add
incl
add
add
fisttps
adc
add
add
add
add
add
add
add
add
xchg
sbb
add
add
add
lods
sbb
add
add
add
incl
add
add
incl
add
add
or
add
add
add
add
in
sbb
xchg
sbb
add
add
sbb
add
cld
sbb
add
add
add
incl
add
add
incl
add
add
loope
adc
add
add
add
add
add
add
add
add
or
and
add
sub
or
add
add
dec
push
or
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
xchg
sbb
add
add
adc
add
add
add
add
add
call
into
or
and
add
int3
push
or
ljmp
adc
add
add
into
or
add
add
cmp
or
add
add
inc
into
or
add
add
dec
into
or
add
add
push
into
or
add
into
or
and
add
lock
or
call
add
add
add
add
add
add
inc
pop
or
incl
add
add
add
add
add
add
into
or
add
add
lret
adc
incl
add
add
hlt
or
add
add
add
add
add
add
add
add
mov
add
add
js
or
add
add
mov
or
incl
add
add
incl
add
add
or
add
add
add
add
lock
or
and
add
loopne
or
add
add
add
or
jmp
add
add
into
or
add
add
add
add
add
add
stc
into
or
add
add
add
or
add
add
push
cli
or
add
add
add
add
add
add
add
or
and
add
xor
or
add
add
jo
or
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
and
lcall
add
add
add
add
add
add
add
add
iret
or
add
add
cmp
or
add
iret
or
push
add
add
or
das
decl
adc
add
add
add
add
add
add
add
add
and
and
add
lock
add
add
inc
and
jmp
or
add
add
outsb
iret
or
and
add
jo
or
incl
add
add
pushf
and
jmp
add
add
add
add
add
add
iret
or
and
add
shlb
adc
add
add
call
iret
or
add
add
loope
or
add
add
in
iret
or
add
add
test
add
add
or
and
add
cld
and
call
rorb
adc
incl
add
add
incl
add
add
sbb
add
add
add
add
add
add
add
pop
and
and
add
inc
and
add
add
push
add
add
add
add
ljmp
rorb
adc
add
add
rorb
adc
add
add
cwtl
and
incl
or
and
add
les
or
call
or
add
add
pop
rorb
adc
add
add
call
add
add
ljmp
or
add
add
ja
or
and
add
adc
or
call
add
add
add
add
inc
and
pushl
add
add
or
add
add
add
add
add
add
add
add
test
or
and
add
insb
and
add
add
xchg
and
call
rorb
adc
add
add
les
or
call
rorl
adc
add
add
call
add
add
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
or
and
add
or
or
add
add
sub
or
push
rorb
adc
add
add
pop
and
adc
add
add
incl
add
add
incl
add
add
or
add
add
add
add
nop
and
adc
add
add
andb
add
add
mov
add
add
add
add
incl
add
add
incl
add
add
or
add
add
add
add
loopne
or
and
add
shlb
adc
add
add
and
adc
add
add
add
add
incl
add
add
add
add
or
incl
add
add
adc
add
add
add
add
add
add
add
add
and
xchg
sbb
add
add
and
add
dec
and
add
add
add
incl
add
add
add
add
incl
add
add
dec
or
add
add
add
add
add
add
add
add
nop
and
xchg
sbb
add
add
or
add
add
mov
add
add
add
add
incl
add
add
shlb
add
inc
rorl
adc
add
add
hlt
and
add
incl
add
add
incl
add
add
or
add
add
add
add
sub
or
and
add
sbb
or
add
add
cmp
or
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
or
and
add
push
add
add
add
add
add
add
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
es
and
add
mov
add
add
es
incl
add
add
incl
add
add
adc
add
add
add
add
add
add
add
add
daa
or
and
add
or
or
add
add
sub
or
incl
add
add
incl
add
add
pop
or
add
add
add
add
push
add
add
pop
daa
or
add
add
js
or
mov
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
les
or
cmp
or
and
add
fsubl
or
decl
adc
add
add
add
or
hlt
pop
or
add
add
incl
add
add
add
add
or
add
add
adc
or
add
add
incl
add
add
add
add
add
add
or
and
or
pushf
popf
or
add
add
jb
or
add
add
pop
sub
lcall
or
jmp
or
ljmp
or
and
add
jl
or
incl
add
add
add
add
add
add
mov
or
ljmp
add
add
in
or
mov
add
add
rorb
adc
add
add
rorb
adc
add
add
rorb
adc
add
add
rorb
adc
add
add
or
or
clc
rorb
adc
add
add
rorl
adc
add
add
dec
sub
mov
add
add
incl
add
add
add
cli
jno
adc
add
add
or
pushf
popf
or
add
add
shll
adc
add
add
incl
add
add
incl
add
add
or
add
add
add
add
shrb
adc
add
add
mov
or
add
add
shrb
or
pusha
push
or
add
add
add
add
push
pop
or
pusha
mov
add
insb
or
js
or
mov
add
add
add
add
add
add
or
fs
add
or
insb
sub
les
or
xchg
sub
mov
add
add
add
add
add
je
jo
fs
popa
bound
sub
add
push
inc
jb
gs
gs
outsl
jb
add
add
push
inc
outsb
jne
gs
je
push
jb
arpl
jae
jae
add
xchg
out
ret
subb
rol
push
pop
lret
je
stos
out
add
mov
clc
xlat
lret
fbld
or
dec
int3
or
pop
js
xor
out
inc
xchg
std
mov
mov
cmpsl
fistps
repnz
out
je
lods
mov
enter
inc
cs
lods
ds
aas
std
or
gs
and
inc
cmc
cwtl
mov
cs
mov
stos
cmp
fwait
scas
repz
loop
mov
movsb
jo
xchg
inc
sbb
mov
cmp
xor
movsl
stc
dec
mov
test
mov
sbb
mov
in
int3
repz
scas
je
push
cwtl
jp
sbbb
push
rcr
xchg
insl
out
jg
jb
jecxz
and
adc
and
les
outsb
loopne
mov
ss
xlat
sbb
cmp
lods
jmp
add
inc
cmp
arpl
inc
test
xchg
dec
dec
jae
fisubrs
repnz
mov
cmp
mov
xor
lock
test
pop
pusha
xor
repz
nop
inc
sbb
sti
lock
pop
loop
jae
nop
ret
je
imul
mov
mov
dec
jp
mov
rcll
sub
or
push
mov
sarl
and
js
pop
jmp
xor
aad
int
iret
and
pop
mov
popa
and
in
clc
icebp
into
jno
insl
std
insl
fisubs
cmpsb
dec
mov
pop
into
in
jle
push
fstpt
adc
inc
and
mov
add
cmp
test
ljmp
pop
in
or
int
out
push
clc
movsb
jp
lahf
out
jg
jbe
cmp
out
mov
dec
shrl
div
loope
bts
int
mov
idivl
cmp
push
rorb
fbld
push
testb
push
or
out
ss
xchg
stc
cmp
or
pop
je
int
sbb
xlat
push
and
test
xor
sar
and
and
jle
rol
pusha
pop
add
test
out
test
dec
js
lret
and
mov
inc
cmc
jnp
fbld
test
hlt
lock
insl
xor
mov
dec
jae
adc
mov
testl
or
pop
xchg
and
out
insb
push
in
push
lea
int
stc
jo
in
inc
mov
test
dec
enter
pop
enter
or
jp
push
mov
or
lahf
lcall
repz
nop
int3
cld
push
pop
ljmp
insb
add
jge
or
andl
xlat
sub
pop
adc
aaa
rcrl
push
mov
jnp
lahf
arpl
insl
test
mov
int3
jbe
add
outsl
test
loopne
fwait
int3
inc
adc
pop
in
jmp
adc
imul
loope
add
loope
aam
pop
pop
stc
mov
jp
xchg
or
xor
mov
mov
stos
mov
mov
mov
lcall
addr16
adc
jne
xor
std
movsl
lret
jae
mov
mov
cmc
push
push
pop
add
adc
and
push
fistpll
out
stos
cli
enter
inc
js
add
sub
push
clc
jns
aaa
or
mov
mov
sub
adc
mov
push
jp
add
je
fsubr
push
les
adc
lcall
jns
and
pop
cmpsb
imul
pop
mov
jl
insl
enter
pusha
or
xchg
ss
mov
ja
sbb
cltd
add
inc
push
sub
in
sbb
cltd
cmp
cmc
mov
mov
mov
push
arpl
cmp
pop
pushf
in
lahf
hlt
mov
cwtl
out
xchg
aad
adc
cmpsl
inc
arpl
ret
leave
fisubrl
mov
repz
fstpt
jmp
xchg
movsl
call
cmp
mov
movsb
cmp
daa
xor
jl
fcomps
jle
ret
popa
pop
test
sbb
dec
cld
xchg
insl
int3
mov
jp
xlat
dec
pusha
dec
xlat
mov
push
push
jne
add
pop
dec
and
pop
jo
ljmp
ljmp
movsb
or
cmc
or
mov
test
pop
cmp
sub
jnp
jge
mov
lahf
pop
and
jp
sbb
and
clc
ret
sbb
push
and
pop
lock
sub
cmp
jns
fwait
bnd
mov
adc
mov
iret
xlat
repnz
movsl
icebp
pavgw
insb
shl
jle
test
jns
lea
xlat
ljmp
jg
js
sub
pop
mov
jmp
mov
into
fistl
cmp
mov
or
xor
mov
popl
mov
inc
mov
add
xchg
test
rclb
test
add
sarl
cmp
cwtl
push
sarl
subb
fs
adc
rolb
inc
mov
push
lds
inc
push
rorb
adc
pushf
mov
sub
loop
adc
rorb
mov
sti
stc
xor
push
sarl
and
pop
stc
loope
dec
pop
push
ds
mov
add
sbb
pop
dec
testb
ljmp
ret
jae
mov
leave
lods
jp
add
sbb
pop
dec
jo
pop
inc
sbbb
xor
add
rol
scas
jno
cmc
cmp
mov
xchg
push
pop
cs
pop
inc
dec
pushf
data16
sbb
arpl
mov
mov
xchg
or
loope
je
mov
stos
shr
outsb
out
dec
push
daa
sub
idivl
lds
fidivs
aas
jae
mov
repz
ret
loope
js
push
in
pushf
rcrb
push
dec
fs
mov
jnp
push
hlt
mov
mov
rcrb
cli
test
adc
xor
call
inc
mov
cmp
daa
fstpl
xchg
cmpsb
jno
cwtl
fwait
pop
loopne
pop
sbb
inc
int3
mov
cmp
je
xchg
xchg
loop
fdivp
push
dec
mov
imul
aas
gs
xchg
fldt
cli
popa
js
add
sbb
ljmp
jnp
out
cmp
int3
in
addr16
sbb
pop
mov
fwait
xor
mov
push
dec
sbb
je
jne,pt
ja
add
testl
pushf
lock
loope
pop
insl
lret
int3
xchg
in
and
mov
mov
fisubrl
dec
xor
cmp
pop
les
jnp
sbb
push
into
movaps
in
cmpsb
pop
hlt
xlat
sbb
rol
or
jno
pushf
xlat
test
aas
in
repnz
rcll
pop
les
in
or
cmp
pop
rorl
mov
aam
pop
mov
aaa
mov
inc
ljmp
lods
mov
add
adc
in
ret
orl
xor
addb
pop
push
and
sarl
cmp
xor
push
in
push
sub
xor
imul
sub
sbb
jle
test
pop
push
rcl
nop
fwait
outsl
cmpl
xor
cmc
mov
mov
addr16
jb
mov
stos
lods
mov
movsb
jle
gs
jg
mov
xor
cli
iret
movsb
or
nop
push
jp
repnz
jb
fsubrs
push
mov
addr16
xor
outsb
mov
popa
pushf
rol
in
std
pop
mov
lret
cmp
or
ret
test
in
xlat
dec
movsl
and
imul
imul
push
fists
cmc
jb
mov
and
loopne
inc
mov
sub
mov
aad
in
mov
fwait
sub
jmp
cmp
mov
pop
xor
mov
and
fbld
mov
addr16
out
ret
adc
sahf
cs
mov
pop
cwtl
or
push
add
pop
push
mov
into
mov
sub
sbb
cmp
shll
push
dec
push
jns,pn
aad
jb
mov
pop
inc
pop
ss
popf
jge
jmp
xchg
loop
xor
jp
pop
jl
pop
mov
mov
es
repnz
mov
push
ljmp
outsb
jg
sbb
jle
and
push
inc
decb
mov
xchg
jp
mov
loopne
add
arpl
dec
fcomi
je
fidivs
loope
cli
xor
and
inc
nop
inc
dec
movsl
bound
in
popf
loope
cmp
out
or
pop
in
and
mov
mov
sbbb
loopne
nop
xchg
mov
hlt
rorl
fisubl
lcall
daa
push
cmp
pop
add
jne
std
leave
sub
jnp
push
dec
test
sbb
sbb
outsl
pop
rorl
add
add
add
xchg
xchg
mov
movsl
fidivs
or
movsb
push
mov
or
cld
push
sub
adc
leave
scas
addr16
out
pop
xor
call
inc
sbb
pop
sbb
into
data16
push
xchg
xor
cmp
out
push
pop
leave
add
cltd
aam
popa
js
imul
lcall
mov
lds
repnz
pushf
cld
inc
inc
pop
mov
jl
outsl
xor
sbb
test
in
and
dec
sbb
addr16
cmpsl
mov
clc
and
cs
fdivrl
call
or
cltd
pop
push
cmp
mov
scas
inc
lds
in
das
dec
out
ds
test
mov
mov
fs
data16
mov
sbb
cmp
pop
adc
je
jnp
fstps
rcrb
mov
xor
pop
into
mov
xchg
cld
sti
or
jge
sarb
mov
stc
movsb
clc
int3
es
dec
pusha
sahf
lahf
sub
xlat
mov
lahf
in
xlat
das
loopne
mov
loopne
les
jp
cvtdq2ps
xchg
icebp
cld
out
imul
icebp
push
loop
mov
add
sbb
cmp
xchg
jmp
loop
clc
loop
add
pop
or
jp
xchg
repz
in
mov
pusha
xor
and
ror
scas
imul
xchg
scas
outsb
ljmp
scas
cld
mov
cmpsl
cs
or
mov
in
jae
js
loope
mov
add
mov
aam
aas
jp
xchg
cmpl
mov
push
ret
repz
cmp
pushf
inc
xchg
int3
std
jmp
arpl
int3
mov
rcrl
cmpsl
scas
mov
loop
xor
xchg
cmp
cwtl
pop
pushf
loop
push
movsl
xchg
sub
inc
xchg
pop
shlb
cmp
movsl
adc
out
mov
pop
dec
movsl
lock
xchg
pusha
mov
fnsave
sbb
mov
test
mov
loope
xchg
pusha
xadd
jmp
movl
push
push
cmp
sbb
sbb
in
push
sub
pusha
xor
inc
or
push
mov
adc
jb
roll
cmp
aad
ja
mov
xor
pop
std
push
and
mov
xchg
icebp
mov
dec
nop
push
popa
hlt
lods
jbe
mov
movsb
mov
jecxz
inc
xchg
scas
push
sbb
addb
mov
or
xor
aam
movsl
aam
lock
pop
dec
popa
and
push
out
mov
mov
not
movsb
push
xorl
rclb
loope
cs
and
sbb
mov
add
cmp
cltd
mov
std
pop
dec
inc
xchg
insl
dec
stc
pop
in
add
fucomi
ss
pop
insl
and
pop
div
jge
jo
mov
iret
mov
insb
add
lcall
imul
cmpsb
pushf
dec
aas
mov
leave
xor
out
aaa
sbb
negl
or
icebp
fidivs
iret
std
dec
fiaddl
stos
cwtl
nop
movsl
or
mov
fsubrl
jne
mov
add
imul
xchg
cvttps2pi
cld
mov
insl
cmp
cld
mov
lock
jmp
into
push
xchg
sbb
les
ret
jecxz
shl
mov
jecxz
sbb
rol
ja
and
xchg
add
in
call
jbe
lcall
inc
mov
aaa
push
jg
movsb
sar
xchg
das
or
push
pop
repz
outsb
outsl
xchg
imul
adc
inc
repnz
mov
lahf
cmp
lahf
in
lea
xchg
dec
cmc
mov
outsb
cld
xchg
test
aas
mov
cmp
shlb
dec
mov
xchg
in
mov
push
ret
or
das
mov
icebp
jmp
mov
lods
add
jecxz
rcr
mov
xchg
jo
cmp
ljmp
inc
mov
nop
in
call
idivb
lds
jns
xor
or
xchg
inc
push
scas
hlt
std
xchg
bound
movsb
adc
dec
lock
push
nop
xchg
mov
setle
mov
lret
sahf
pop
pop
mov
add
and
clc
daa
out
or
test
jne
mov
jmp
test
push
iret
out
into
cmp
inc
popa
test
mov
mov
pop
std
test
mov
sub
repz
loopne
je
add
cmp
sub
nop
or
dec
jg
subl
pop
dec
cmp
add
jns
xor
mov
adc
xor
test
inc
aaa
outsb
mov
mov
inc
mov
shrb
pop
dec
jno
ja
bsf
in
mov
sbb
mov
icebp
negb
jmp
add
sbb
ret
fldt
and
int3
in
adc
push
hlt
sub
mov
jp
pop
inc
cli
dec
lock
mov
test
movsb
xchg
movsb
xor
or
jle
mov
inc
jns
mov
mov
push
push
jno,pn
shlb
jmp
popa
or
cltd
ds
jp
cmp
sub
int
cmc
mov
out
cli
ljmp
dec
and
cmp
mov
jg
pop
dec
add
add
mov
sub
jmp
or
jp
mov
outsb
jl
or
dec
pop
dec
jns
aad
mov
jb
inc
or
ret
mov
pop
dec
mov
jb
add
or
shll
add
push
push
ret
enter
out
or
inc
in
mov
pop
jb
rcrb
cmp
xlat
test
cmp
adc
jle
mov
leave
lods
mov
jne
mov
jl
aam
lods
pop
testb
aad
cld
lahf
iret
aaa
and
js
sti
sbb
xchg
les
bound
mov
fmuls
sbb
mov
push
fnop
pop
push
sti
or
inc
in
add
or
jmp
xchg
add
imul
movsl
inc
mov
divb
adc
or
push
into
mov
sbb
jb
dec
mov
dec
add
xor
inc
hlt
dec
jge
inc
out
mov
xchg
dec
and
rcrl
or
dec
ret
les
adc
mov
outsb
or
and
push
clc
popa
out
data16
and
sbb
adc
dec
xchg
pop
cmp
repnz
outsl
outsb
push
push
mov
push
aad
add
sahf
xor
adc
rep
jo
dec
add
xor
mov
mov
repz
mov
testl
and
dec
lahf
jbe
push
frstor
or
movsl
adcb
sarl
sbb
mov
sbb
fs
pop
and
jmp
in
addr16
mov
dec
xchg
movsb
inc
or
add
pop
clc
popf
cld
push
cmc
cld
xor
xchg
negl
aam
add
lock
gs
fs
mov
push
sbb
xchg
cmp
ja
and
xor
mov
cmp
mov
fsubrs
out
sub
add
into
mov
dec
ret
push
dec
add
pop
adc
aas
jle
mov
das
xchg
mov
xor
inc
test
dec
in
pop
negb
inc
cmpsl
sub
adc
outsl
push
mov
shr
lcall
inc
xchg
and
call
pop
int
lods
add
fisubs
push
jb
stos
and
in
push
shlb
mov
js
inc
icebp
add
sbb
sub
push
add
inc
out
mov
jge
loope
or
mov
das
repz
aam
in
adc
mov
pop
arpl
mov
ret
shll
jne
xor
cmp
leave
xchg
push
add
jb
pop
loopne
or
xchg
sub
aad
les
or
and
pop
cmpsb
cmpsl
and
ret
sahf
ja
mov
test
scas
jbe
sub
arpl
fdivp
faddp
dec
inc
adc
dec
imul
ret
push
pop
in
adc
xchg
in
cmovo
mov
rorl
sbb
sbb
pop
add
xor
push
push
es
cmp
ljmp
js
stos
mov
cmp
mov
cmp
jns
sbb
cmp
scas
popf
push
loopne
jmp
add
stos
mov
pop
test
ss
mov
test
pop
or
cmc
shl
mov
pop
stos
dec
clc
xor
lods
imul
xchg
rclb
sub
js
daa
cli
out
in
mov
fs
nop
arpl
lret
test
clc
push
lea
repz
lock
leave
or
push
mov
lea
mov
sbb
mov
sbb
subb
inc
stos
xchg
ret
fidivrl
fmull
adc
sbb
pop
adc
pop
je
mov
xchg
cltd
data16
xor
mov
in
in
xchg
movsl
adc
popf
jle
aas
xor
hlt
cmpsl
cli
mov
adc
stc
out
sbb
inc
xor
pop
insl
loopne
inc
push
jmp
fadd
mov
add
je
scas
xor
stos
out
cmp
cs
and
pop
mov
lahf
fnstsw
push
lret
mov
fisubrl
addr16
mov
arpl
jne
cmpsb
pop
mov
inc
stc
cmp
pop
mov
jmp
cmp
xor
or
movsb
mov
mov
sub
xchg
mov
stc
das
cmp
xor
pop
out
addps
jecxz
lds
fiaddl
jae
xor
out
cmpsl
and
shlb
jae
mov
andl
sbb
sbb
roll
cld
lcall
sbb
fldenv
es
pushf
iret
outsl
loope
mov
repz
mov
mov
scas
pop
dec
aaa
shlb
fwait
or
cwtl
sub
test
xlat
subl
jae
add
mov
cmp
xchg
daa
mov
imul
fcomps
cmp
mov
in
dec
sub
loopne
stc
dec
adc
jl
mov
hlt
mov
out
inc
xchg
adc
push
add
cmc
mov
out
mov
mov
adc
dec
xor
imul
jae
jns
ret
sub
mov
push
gs
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
add
add
add
xchg
add
add
jl
or
add
add
or
add
or
add
sbb
add
or
push
push
add
adcb
add
push
add
mov
push
add
shrb
add
add
rclb
add
add
adc
add
inc
or
in
or
xchg
add
inc
or
mov
or
ret
add
inc
or
std
inc
or
pop
inc
or
add
add
add
add
add
pop
add
add
add
inc
insb
insb
cs
insb
add
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
insb
insb
dec
popa
imul
imul
jb
gs
inc
insb
insb
push
outsb
jb
imul
jb
gs
inc
jb
popa
je
dec
popa
imul
inc
jb
popa
je
push
jb
je
arpl
outsl
arpl
push
gs
dec
add
jae
outsl
outsl
data16
jae
outsl
outsl
outsb
and
mov
sbb
addb
jle
add
and
lret
shrl
bound
ds
jbe
inc
mov
inc
or
adc
adc
cmc
call
pop
sbb
pop
mov
enter
subb
or
sahf
ficompl
lret
in
mov
sarl
inc
sbb
xchg
out
pop
pop
cwtl
movsb
cmp
mov
inc
aas
jae
clc
ret
adc
rcrb
mov
jp
dec
iret
mov
out
or
mov
sbb
add
cmp
adc
ja
push
pop
stos
push
mulb
leave
adc
xlat
jle
jecxz
into
jmp
stc
ret
mov
sti
xor
and
pop
sbb
aam
shlb
out
cmp
mov
std
pop
jne
cli
pop
pop
inc
sbb
inc
fistl
adc
jb
dec
xchg
dec
cmp
fisubrs
psubusb
and
movsl
mov
dec
rclb
adc
jnp
sbb
jmp
std
stos
xor
arpl
add
xchg
dec
mov
or
aad
movsb
xchg
push
sub
movsb
or
pop
shll
mov
repz
bound
decb
out
ss
fstp
jno
test
mov
daa
leave
inc
out
daa
imul
or
inc
add
jge
outsb
add
cltd
push
mov
push
xchg
xlat
mov
js
in
scas
mov
inc
roll
mov
cwtl
xchg
cmp
cltd
sbb
xchg
push
push
cmp
out
sbb
dec
inc
lahf
add
stc
jp
xchg
fcoms
test
inc
jno
imulb
inc
test
push
ret
or
sub
aam
in
dec
lret
pop
mov
mov
xor
or
push
stos
call
cmp
in
mov
rcl
int
ds
mov
ds
xchg
aam
cmp
cmp
icebp
test
mov
mov
mov
leave
loope
fsubl
xor
pop
jmp
imul
mov
dec
js
fsubp
jg
jns
mov
loopne
mov
mov
je
les
pop
jl
mov
jge
mov
cmp
test
out
imul
push
lock
jl
test
bound
mov
test
dec
mov
gs
pop
or
fstl
and
and
or
imul
in
sub
dec
sbb
xchg
ret
mov
das
and
xchg
inc
mov
inc
bswap
aam
addr16
test
pop
dec
pop
js
js
fwait
xchg
mov
ret
lods
cmp
popa
mov
arpl
cmp
je
popl
in
cmp
dec
movsb
push
and
lcall
mov
lods
js
push
int
xor
adc
sbb
test
mov
clc
insl
xor
addr16
pusha
push
sti
xorl
push
dec
cmp
stos
repz
and
outsb
cmp
lods
jg
movsb
push
adc
aam
jl
negl
fidivs
push
fldcw
pop
out
test
lods
je
adc
scas
nop
jecxz
jns
pop
inc
push
ljmp
jb
sarl
or
insl
jb
sbb
mov
scas
dec
aaa
fldt
push
dec
add
sub
pop
iret
addl
subl
inc
rcll
sub
movsl
mov
mov
mov
test
mov
in
stc
or
mov
adc
sub
cmp
cmc
aad
ljmp
sarl
pop
pop
pop
xor
xchg
and
data16
sub
sub
lcall
js
jle
aad
push
mov
mov
ljmp
inc
ret
xchg
push
cmc
jnp
and
std
jmp
jp
out
dec
xchg
and
fidivl
gs
cwtl
xchg
ds
jmp
in
lahf
cmp
xor
outsb
mov
lahf
jno
jl
dec
cmc
cmp
xchg
jg
rolb
mov
cmp
dec
mov
in
pop
jge
jmp
clc
cmp
add
lods
jne
mov
jmp
adc
and
and
mov
insl
dec
add
add
aad
sti
xchg
dec
rol
pop
xor
jp
divl
insb
insb
pop
fistl
inc
xchg
jnp,pn
popf
lods
out
cld
jns
xor
and
dec
popa
sub
push
pop
inc
push
loope
or
testl
fwait
pusha
lahf
test
jmp
daa
imul
movsb
push
pushf
insl
cmpsl
jns
push
test
je
ja
fimull
in
and
mov
dec
and
and
mov
insl
das
repz
dec
mov
xor
mov
imul
aaa
nop
es
stc
ficoml
push
aaa
stos
and
pop
mov
jno
push
xchg
rcrb
xorps
sbbb
outsb
pop
aas
int
or
lds
sbb
push
xchg
mov
sub
push
in
jno
cmp
lods
pop
pushf
sub
idivb
jge
adcl
popf
jns
lcall
adc
sti
mov
add
sbb
xor
pop
push
orl
imul
out
cmc
scas
outsb
xor
stos
jo
out
ret
sub
jae
pop
mov
mov
ret
add
xor
imul
sti
push
addr16
lcall
int
inc
arpl
jbe
shrb
xchg
cli
mov
mov
lods
sbb
bound
je
and
add
sub
or
shl
out
rorl
scas
cltd
insb
popa
push
push
pop
data16
xchg
xchg
adc
mov
test
xchg
sbb
pop
pop
jmp
hlt
inc
jmp
push
jmp
mov
loope
cli
outsl
pop
cmp
mov
inc
cmpsb
rcl
aaa
xchg
gs
inc
push
mov
faddl
xor
add
sbb
lods
ss
enter
cld
lret
movsl
adc
dec
jle
in
loope
jecxz
pop
jae
push
xor
out
mov
addr16
popaw
jae
sbb
jnp
shrb
inc
push
cmp
jnp
shll
cwtl
cltd
or
or
jae
add
inc
fiadds
add
popf
sbb
xor
sbb
ljmp
mov
lods
jnp
lcall
loop
fsubrs
addl
push
enter
add
cmp
negl
sbbb
lea
cmp
clc
shll
daa
daa
lahf
lds
dec
push
and
mov
xor
mov
in
dec
data16
xor
out
test
and
xchg
aam
lods
iret
into
and
rolb
das
test
mov
inc
adc
mov
pop
jne
jle
cs
das
addr16
vmovss
sbb
push
lods
test
sbb
out
imul
xor
js
pop
lods
pop
and
xor
jo
std
out
data16
inc
mov
jmp
cmp
imul
mov
cmpsb
ret
mov
aas
test
jge
xor
lods
add
inc
jne
sbb
pop
xchg
test
shl
scas
mov
pop
enter
xchg
xchg
cmp
add
mov
push
push
add
aad
xchg
dec
mov
pop
int3
inc
cltd
icebp
arpl
dec
fdivrs
add
cmpsb
lret
mov
ret
testl
or
xchg
pop
lret
lret
cli
pop
mov
mov
in
xor
sbb
inc
add
sub
push
push
inc
aad
popf
xchg
outsb
dec
jae
in
lea
pop
xor
ja
dec
movsl
rcrb
sub
and
cwtl
dec
sub
fnstsw
into
lahf
ds
bound
nop
inc
icebp
mov
fnstenv
and
dec
sub
pushf
in
nop
jno
dec
arpl
int
mov
jae
push
test
mov
push
pop
push
lcall
xchg
pop
inc
test
and
clc
mov
sahf
mov
add
out
jl
or
push
mov
and
aam
xchg
xor
xchg
sti
rcr
test
pusha
jl
imul
dec
out
sub
cmp
pop
out
fsubs
movsb
sbb
cmp
sub
cmc
xchg
jno
sub
cmp
dec
or
stos
lcall
fisubrs
and
mov
fwait
out
dec
addb
mov
cmp
dec
lea
xor
movsb
sub
jle
nop
push
lock
add
imul
mov
mov
adc
cli
hlt
lods
push
dec
mov
xor
test
popa
xor
mov
adc
jns
mov
xor
loopne
subl
mov
arpl
jmp
test
std
sbb
mov
mov
lcall
push
dec
add
cmp
push
jg
add
add
add
add
push
add
add
add
addb
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
orb
add
add
orb
add
adc
add
sub
add
inc
add
adcb
add
jo
add
mov
add
mov
add
add
add
add
add
addb
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
loop
add
add
add
add
add
or
andb
add
add
add
add
add
push
or
add
add
add
add
add
or
add
add
add
add
add
push
or
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
adc
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
push
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
cmp
add
lret
or
cwtl
xchg
clc
call
sbb
lds
push
push
test
scas
add
cld
cmp
mov
mov
cmc
dec
pop
pop
jecxz
lods
xchg
pop
adc
jle
pop
xlat
jg
rclb
dec
add
loop
fildll
mov
or
addb
sub
fwait
mov
sub
mov
adc
fcmove
fsubl
or
xchg
push
mov
push
mov
and
mov
sbb
sahf
cmp
xor
mov
mov
jno
outsb
cmp
cld
push
add
call
mov
lcall
lods
and
sti
jb
int
nop
ss
sahf
sbb
push
dec
pop
arpl
gs
cltd
mov
or
std
mov
xchg
loop
fwait
jl
cmp
fsubrl
mov
pop
xor
mov
adc
inc
mov
in
gs
clc
mov
add
xor
mov
movsl
dec
cmp
xchg
sbb
movsl
lret
add
es
jmp
jl,pt
mov
sbb
push
in
arpl
xor
mov
pop
addl
arpl
insb
frndint
scas
sbb
mov
add
add
add
pop
pop
cmp
mov
imul
pop
cwtl
xchg
scas
cmp
mov
addb
jno
xor
jg
xchg
mov
dec
popa
dec
push
or
adc
ret
sub
push
dec
test
pop
inc
mov
imul
mov
movsb
mov
xchg
mov
xor
in
push
js
ret
sbb
test
sbb
push
mov
sbb
nop
rcrb
lcall
mov
cmpsl
pushaw
xchg
sbb
jno
mov
sbb
mov
enter
test
cs
inc
or
pop
mov
ljmp
fnstenv
mov
call
mov
out
jp
dec
stos
or
ja
fcmovbe
and
adc
cmpb
jnp
mov
add
sbbb
test
lds
arpl
sbb
loop
out
enter
inc
mov
mov
dec
jmp
push
sbb
jg
push
addb
cmpb
les
fidivrs
push
or
dec
adc
stc
data16
ljmp
pop
cmp
push
ret
and
mov
or
mov
push
shll
clc
pop
xor
and
repnz
loop
jo
xchg
js
mov
mov
orb
inc
cmpsb
mov
lret
mov
cmp
xchg
sbb
shll
icebp
mull
test
mov
lea
and
sub
imul
jg
push
cmp
imulb
dec
stc
in
into
int3
mov
je
xor
enter
xor
out
insb
adc
orb
or
mov
lcall
push
xor
sub
xchg
mov
cmovg
pop
inc
addb
mov
sub
push
jp
cmp
push
sub
int3
imulb
adc
jg
push
lret
cmp
xchg
lahf
inc
enter
inc
cmp
popf
cmp
push
mov
les
lret
sti
stos
pop
arpl
popl
xchg
dec
pop
enter
mov
nop
cltd
stos
clc
fwait
inc
xchg
cmp
scas
iret
dec
jle
mov
mov
mov
inc
jmp
add
mull
sub
popa
scas
gs
sbb
jle
or
jg
adc
dec
pop
dec
sbb
pop
into
cmp
mov
mov
mov
jg
jl
mov
clc
shll
push
fildll
xchg
add
mov
pop
jmp
jae
imul
mov
sbb
insl
xor
mov
dec
ds
aad
js
inc
push
rcl
pop
popf
enter
sbb
mov
jbe
jae
sub
lret
mov
out
jl
fs
sbb
and
inc
xor
dec
adc
pop
xchg
mov
in
cmp
das
lods
mov
lods
push
je
or
rolb
fwait
jmp
and
repnz
xor
pop
stc
xchg
ja
push
and
and
xchg
push
mov
mov
or
ljmp
mov
mov
cmp
rclw
xchg
insb
jae
sub
in
sub
loopne
cmp
clc
idivb
pxor
cli
hlt
testl
imulb
xchg
movsb
inc
and
jb
inc
push
call
pop
popa
inc
inc
insl
jo
xchg
ret
mov
std
lds
mov
mov
jb
fcmovb
mov
leave
in
addr16
test
imul
xor
push
inc
aas
sbb
jbe
adc
scas
pop
or
xchg
inc
or
xchg
mov
mov
loop
je
fldcw
and
sub
pop
xor
or
mov
mov
outsl
push
push
bound
sbb
and
popf
shl
sub
inc
adcb
loopne
jbe
shrl
cmp
mov
ret
enter
add
jns
insl
cwtl
dec
cs
jl
sub
loopne
pop
cli
lret
mov
mov
add
repz
inc
leave
fstl
das
pushf
aad
shrb
cmp
jb
stc
and
xchg
jno
stos
xor
or
jg
ret
jmp
pop
dec
jne
jge
mov
or
es
add
sbbl
dec
cmp
cld
std
adc
leave
pop
es
in
mov
sbb
mov
mov
dec
push
xchg
adc
dec
mov
aam
lds
cmpsl
sbb
push
mov
cltd
cmc
leave
add
sbb
lock
lret
sti
mov
jae
mov
cs
mov
lret
pushf
dec
cltd
lods
push
xchg
insl
sub
movsl
mov
daa
or
sbbb
jne
cmp
dec
add
popa
sub
dec
jns
mov
sbb
out
hlt
mov
shld
jl
lods
icebp
mov
adc
pop
loope
int
mov
cs
in
inc
or
sub
jbe
dec
jg
and
mov
dec
mov
lcall
pop
adc
popa
stos
pop
jecxz
mov
mov
imul
and
flds
mov
mov
in
cli
xor
cltd
mov
inc
pop
in
inc
mov
sub
nop
iret
fmul
stos
das
push
sub
cmpsl
inc
jbe
jge
and
loopne
lahf
mov
andl
fsubl
rorl
stos
dec
push
clc
fiaddl
pop
add
popa
xor
pop
cmpsl
out
fs
out
sahf
jo
addb
out
jle
cli
lods
js
mov
add
std
aas
movsb
movsb
sub
out
push
and
jae
jl
push
jno
adc
cmp
mov
test
movd
in
aad
repz
js
ljmp
and
pushf
rol
mov
or
pop
and
dec
inc
add
mov
jae
pop
rolb
repnz
stc
jb
push
sbb
mov
into
sub
push
sub
stos
ja
push
enter
notb
stos
sub
mov
frstor
adc
movsl
lret
sub
mov
pop
mov
push
dec
mov
fsubr
push
lret
repz
insb
ds
and
int
cs
gs
addr16
mov
fildll
incb
das
daa
std
dec
xchg
ds
mov
es
sub
add
mov
arpl
dec
inc
cmp
push
ret
pop
cmc
jb
sub
outsl
enter
fidivl
add
rcrb
or
xor
aam
sub
shll
push
data16
jg
xor
sub
mov
jmp
fildl
es
les
pmuludq
subl
jno
test
push
sbbl
inc
jae
pop
adc
or
push
pop
aad
mov
adc
repnz
jbe
fxch
lock
push
jb
xor
and
es
jecxz
jmp
test
cmc
cmpsl
xchg
jecxz
jae
lcall
shll
jmp
jg
push
add
movsb
mov
out
push
ficompl
fmuls
gs
cld
jge
movsl
arpl
xchg
out
pop
frstor
sbb
mov
dec
call
mov
scas
enter
sub
mov
and
cmp
xor
ds
pop
jo
sub
push
test
mov
jle
dec
nop
fstl
iret
jnp,pn
lods
mov
mov
js
adc
sbb
cs
and
or
adc
cmp
dec
sahf
out
cld
ljmp
mov
mov
xor
cmc
mov
sbb
aas
fwait
cmp
jns
lock
out
mulb
lock
mov
cmpl
pop
inc
sub
xchg
test
xor
push
popf
sub
xchg
inc
cmp
lds
mov
jmp
dec
add
mov
adc
jno
jmp
mov
push
add
popa
incl
fidivrl
shlb
sbb
test
inc
dec
rorl
incl
hlt
ja
loope
dec
mov
mov
loop
mov
jns
scas
fsubrl
or
xor
inc
fcomi
inc
pop
jnp
repnz
or
xor
cmpsb
lock
xor
and
cmp
push
pusha
add
sub
arpl
cli
addb
mov
ret
sbb
pushf
fs
or
scas
sti
in
push
mov
jno
mov
cmpsl
push
insl
lds
lods
jg
adc
pop
or
dec
and
mov
enter
jge
jg
xchg
addr16
fisubl
fnstsw
aad
sub
cld
push
test
test
sub
mov
sub
pop
int3
test
mov
testl
cwtl
mov
sbb
cli
sub
push
pushf
icebp
pop
or
movsl
jecxz
fs
aad
fdiv
xor
dec
lock
pop
aad
outsw
out
ret
xor
ds
sbb
jecxz
xchg
insl
inc
pop
mov
stc
imul
push
cs
fwait
xchg
xchg
inc
dec
lods
pop
push
ret
mov
neg
push
jle
adc
adc
mov
pop
add
clc
xor
imul
imul
sub
insl
clc
mov
aaa
or
leave
rorb
dec
pop
xor
jg
repz
xchg
adc
cli
mov
xchg
mov
mov
cltd
and
add
inc
sbb
dec
xchg
jge
push
inc
push
in
stos
mov
mov
cmpsl
mov
mov
sub
or
cmp
push
lret
inc
adc
pop
xchg
dec
stos
fsincos
cmpsl
aam
xlat
mov
mov
inc
sbb
insl
es
addr16
fadd
inc
rol
and
push
adcb
aas
rcrb
aas
movl
pop
ret
push
xorl
fistpl
scas
add
cltd
addr16
pop
mov
leave
mov
cs
xchg
ficoml
xchg
fidivrl
jp
or
pop
cmp
xchg
jb
jg
dec
add
mov
push
jecxz
sbb
sti
rolb
ljmp
or
push
mov
or
mov
loop
mov
gs
pusha
fwait
subb
push
pop
add
cmp
mov
and
fcoms
mov
dec
insl
xlat
push
jge
and
adc
lcall
cmp
add
ljmp
movsb
lret
mov
popa
ja
in
call
mov
pushf
test
fiaddl
fnstenv
dec
clc
sub
dec
cmp
in
arpl
pop
push
mov
xchg
mov
insb
addb
cs
roll
aas
js
xor
xchg
pop
pop
in
mov
push
jecxz
stos
mov
jbe
pop
mov
inc
adc
out
notb
aad
sub
push
jne
mov
nop
or
mov
pushf
nop
jo
loope
push
adc
add
adc
sub
xchg
std
push
add
mov
xchg
xor
stos
mov
mov
mov
leave
and
sub
dec
xor
insb
imul
fstp
jo
pop
jl
adc
push
push
mov
insb
stc
inc
mov
mov
xlat
movsb
insb
add
movsb
in
ret
cmc
ret
shll
inc
ja
add
fs
jns
sbb
xlat
sbb
sub
jb
push
in
imul
push
test
imul
es
pop
out
hlt
xchg
out
rep
xor
mov
add
push
arpl
xchg
ret
xor
loopne
fcmovnu
out
dec
and
rorb
and
popl
dec
mulb
cmpsb
sbb
and
jle
xchg
in
mov
dec
mov
and
cwtl
xchg
in
and
aaa
dec
inc
popa
movsl
cld
dec
je
std
movsl
push
or
int
xchg
stc
pop
arpl
push
enter
add
push
nop
out
inc
cmp
sub
das
sti
xchg
cltd
clc
dec
xchg
scas
mov
mov
popf
jle
in
pop
call
jmp
sub
in
shl
int
daa
imul
pop
repz
lahf
adc
insl
insl
add
roll
daa
mov
call
addr16
cmp
aas
aaa
test
outsb
dec
cmpsb
mov
and
call
enter
lea
lret
shrb
stc
add
loopne
mov
adc
out
dec
andb
or
imul
ds
inc
cli
mov
out
mov
pop
ret
jle
push
sbb
mov
xchg
imul
mov
jb
xor
pop
xchg
fiaddl
ljmp
inc
adc
pop
sbb
loop
movsb
push
push
sub
mov
movsl
mov
sub
cld
xchg
jle
sub
rcl
nop
out
lahf
pop
or
outsb
loope
fdivl
adc
pushf
xchg
sub
cmp
xlat
inc
icebp
xchg
sbb
or
mov
jb
cmpsl
mov
mov
xchg
mov
andl
mov
pop
push
lods
and
icebp
fldl
inc
mov
sub
in
stos
add
jge
fwait
jg
or
divl
ret
cmc
sbb
add
adc
push
nop
or
cmp
and
mov
cmpsb
inc
xor
mov
jmp
mov
pushf
mov
lcall
push
pop
ret
xorb
pop
inc
adc
jl
sub
push
test
mov
ss
push
sahf
cmp
sbb
rorb
jbe
mov
mov
cmpsb
push
mov
neg
arpl
or
adc
cmc
out
push
mov
leave
notl
jl
mov
xchg
fwait
cmp
gs
xor
xchg
rcrb
cmc
and
sbb
repz
data16
mov
lret
fchs
in
sbb
push
push
add
stos
test
push
adc
and
sub
dec
adc
push
mov
cmp
je
in
fdivr
mov
cmpsl
stos
lods
mov
rcll
movsb
fnstenv
out
pusha
adc
test
lahf
mov
xchg
ljmp
leave
jmp
xchg
clc
enter
stos
cmp
adc
sbb
dec
inc
sahf
nop
push
pop
fistps
adc
int
pop
aam
in
adc
mov
or
idivl
aad
sarb
dec
xchg
jecxz
mov
push
js
push
and
mov
push
mov
adc
jnp
or
sbb
addr16
pop
dec
push
push
shlb
out
cli
pop
fs
mov
sti
sub
in
pop
sbb
ss
push
pop
in
es
lock
jecxz
jo
ffree
out
out
insb
sub
loopne
cwtl
loopne
test
enter
cld
test
mov
rorl
je
movsl
repnz
mov
aad
fstpt
cmp
dec
aaa
pop
push
pop
sti
je
lods
or
adc
xchg
xchg
xchg
out
bound
enter
ret
pushf
scas
int
adc
imul
pop
mov
ljmp
dec
andb
or
subl
adc
dec
lahf
mov
and
test
sbb
cld
push
adc
xchg
jno
or
ljmp
adc
scas
mov
dec
ja
fdiv
sti
push
adc
mov
jb
sub
sbb
add
test
mov
cmp
sub
shlb
test
mov
movsb
mov
imul
rclb
push
adc
int
outsl
push
mov
lods
pop
inc
leave
clc
or
shll
jle
fsts
push
mov
cld
xchg
or
sub
push
dec
inc
outsl
addl
inc
wrmsr
inc
adc
pushf
ljmp
test
sbb
xchg
jae
xor
jle
add
shr
mov
dec
xor
mov
add
arpl
idiv
cwtl
or
ja
cmp
push
test
movsl
jae
in
aaa
fs
pop
hlt
push
and
cmp
aaa
sub
lahf
cli
jg
jne
and
movb
out
jno
jp
mov
jb
add
inc
shr
ret
jecxz
xor
rclb
push
les
and
cld
or
shl
mov
repnz
xchg
popa
lahf
call
outsl
jg
loopne
add
add
les
mov
movb
stos
leave
push
out
out
cltd
pop
insl
shrb
loop
push
jg
mov
out
loop
or
movsb
test
notl
lret
ret
xor
sub
bound
dec
jbe
es
cmp
in
in
js
shr
cmp
fsubrp
movsl
sbb
addl
mov
int3
add
cmp
ds
sahf
sbb
sbb
sar
pop
sbb
sbb
or
xchg
mov
in
jmp
std
xor
loopne
stos
push
add
dec
push
or
out
add
mov
call
add
test
inc
test
or
sub
xchg
or
jmp
jge
mov
cs
bound
mov
je
mov
lds
jno
aaa
mov
cwtl
insl
mov
cmp
pop
push
cmp
push
jb
inc
imul
scas
clc
and
adc
jl
mull
jne
inc
dec
call
mov
int
mov
sub
add
and
sub
cli
bswap
ss
pop
in
stc
adc
imul
iret
imul
inc
fsubr
or
mov
fsubs
insl
and
cmpsl
repz
andl
xchg
lods
int
add
js
fnstenv
push
iret
sub
into
inc
or
mov
jae
insb
dec
sahf
or
xchg
test
sub
push
bound
clc
adcl
cli
repnz
negl
mov
outsb
imul
jmp
xor
sbb
sub
dec
adc
mov
jne
test
xor
pop
cmp
rcrb
dec
popf
aam
jb
sbb
pop
and
mov
jbe
notl
dec
mov
pop
dec
dec
push
repnz
jno
outsl
lret
cmpsb
pop
dec
nop
aaa
repnz
xor
jns
sub
fs
out
aad
or
in
xchg
scas
je
in
clc
add
iret
std
jnp
pop
or
add
sbb
iret
jle
je
cmpb
fisubs
jg
imul
repnz
into
xchg
insb
cmp
movsl
subl
dec
lock
push
mov
add
dec
test
mov
jge
jg
popf
pushf
add
call
enter
dec
cmp
sub
ljmp
pushf
ja
jno
xlat
adc
cmp
lods
cwtl
dec
mov
xor
push
lahf
iret
pop
test
je
test
jnp
cltd
and
pushf
pusha
insb
xchg
sti
push
jge
and
inc
out
scas
mov
and
sub
cli
jl
jnp
add
push
sbbb
jae
xchg
out
pop
mov
jne
sbb
das
pop
mov
mov
hlt
icebp
inc
add
pop
inc
mov
clc
adc
sbb
jp
das
mov
cwtl
fcoms
push
pop
dec
mov
inc
push
test
push
pop
into
mov
mov
xor
xchg
ret
adc
adc
out
sbb
or
jnp
push
lret
test
sbb
pop
jl
scas
nop
jnp
add
shl
mov
push
sub
in
lods
js
mov
mov
mov
and
ds
in
lods
sbb
dec
bound
das
sbb
jbe
mov
test
push
stos
daa
sub
fmulp
push
dec
subb
scas
inc
data16
jns
push
sahf
pop
test
insl
das
movl
push
loop
pop
add
or
cmp
mov
lret
popf
icebp
sahf
push
sarb
sahf
and
lods
cmp
fldenv
ljmp
mov
data16
pusha
int
push
pop
subl
scas
loope
xchg
das
push
cmc
movsb
addl
ja
addr16
xor
or
mov
jg
rcrl
lahf
cltd
pop
jle
andb
jle
cltd
adc
insl
inc
les
pop
data16
pop
int3
push
jnp
repz
out
repz
movsl
ss
popf
sub
jge
jbe
inc
movsb
mov
jp
bound
adc
ljmp
xor
mov
inc
out
inc
in
mov
pop
mov
xlat
push
pop
dec
daa
inc
mov
xchg
mov
std
arpl
scas
sbb
mov
int
insb
cmc
add
into
inc
inc
jge
cmp
xor
push
icebp
lods
into
lds
test
lods
adc
add
xor
or
lcall
aaa
mov
rolb
in
push
rclb
jo
mov
lock
or
out
imul
and
or
mov
cltd
cs
sub
cmc
jg
sarl
das
add
rorl
inc
inc
mov
addr16
inc
arpl
leave
push
mov
enter
dec
das
pop
stos
fidivrl
mov
push
fs
scas
mov
push
aaa
incl
adc
imul
les
pop
jae
dec
sbb
xchg
inc
sbbb
mov
stc
xor
icebp
or
fldt
mov
jo
dec
xor
test
or
ror
and
xchg
jne
rolb
dec
lods
fmuls
push
push
xor
mov
loopne
mov
loope
cltd
jne
sbb
movsb
jp
imul
adc
bound
fcompl
push
add
xor
scas
or
aam
pop
mov
pop
adcl
clc
mov
test
sub
flds
sub
fcomps
xor
lods
xor
ret
cmp
ljmp
cmpsl
jecxz
inc
mov
arpl
pop
cmp
cmp
int
mov
xchg
mov
adc
js
inc
jns
and
mov
jle
in
xchg
xchg
push
and
fs
xorl
pop
push
jb
cmp
sarl
test
mov
mov
dec
ss
mov
clc
test
mov
inc
lret
jg
jle
sbb
je
mov
aaa
cmp
cmc
cmpb
jg,pt
lds
popf
jae
cmpb
les
xchg
testb
in
cmpsl
je,pn
scas
jo
sub
sahf
ds
fwait
clc
push
je
add
jbe
loop
addr16
cmc
insl
dec
data16
inc
push
push
test
cmp
cmp
jns
int
mov
and
sbb
adc
test
xchg
jg
iret
inc
jnp
push
cltd
sub
mov
jl
xlat
xor
cmpsb
inc
fisubl
loop
aad
push
add
xchg
fwait
xchg
scas
xor
scas
xor
ja
les
addr16
jo
sub
sbb
arpl
insb
add
xor
or
or
popf
popf
pop
sbb
incb
into
mov
jle
mov
push
push
inc
pusha
outsl
fs
mov
mov
xor
je
and
outsb
inc
mov
cmp
mov
out
jp
es
mov
and
cmpsl
scas
dec
aaa
jno
arpl
loop
out
and
in
stos
push
hlt
in
int3
aas
push
cs
dec
add
sub
adc
fimull
pop
cs
and
jbe
push
jle
lods
adc
out
adc
ret
xchg
add
cmp
imul
pop
pop
sbb
in
pop
dec
pop
test
cmc
cmp
mov
out
inc
jnp
or
push
mov
push
jecxz
fstpl
mov
and
push
sbb
and
imul
fxch
or
xor
push
fs
sbb
out
pop
stos
mov
lahf
outsb
dec
jp
xor
mov
int3
sub
loope
xor
mov
adc
dec
sub
dec
fcmovnb
data16
aaa
and
loopne
je
jb
decl
movsb
loope
mov
push
stos
sbbb
iret
mov
pop
ret
fisubs
push
daa
mov
pusha
bound
or
mov
pop
out
xchg
or
aaa
adc
int
test
movsb
outsb
or
imull
movsl
gs
and
add
outsl
mov
mov
push
icebp
ds
pop
sbb
mov
jecxz
add
lods
or
ret
jp
inc
and
add
lock
cmpsl
mov
mov
push
xchg
or
and
mov
push
jle
and
xor
test
fldcw
mov
mov
ficoml
in
jb
lds
dec
xchg
mov
inc
std
lea
adc
xlat
xchg
sbb
subl
icebp
jne
push
mov
xchg
inc
xchg
imul
call
sbbl
movb
mov
jmp
pop
subb
mov
or
enter
les
cmp
mov
out
xchg
sti
leave
and
loopne
loope
xchg
cli
xchg
xchg
mov
adc
add
incb
mov
pop
out
idivb
xor
test
test
add
mov
jmp
sahf
lods
imul
inc
xchg
in
lods
out
shlb
cmp
add
push
xchg
rcrl
mov
ret
lods
insl
add
cmpsb
jne
test
xchg
fstps
das
into
insl
fnstenv
mov
les
adc
sub
in
add
pop
mov
cmp
add
sbb
test
pushf
jg
fstpl
dec
xorb
mov
mov
xor
mov
cmp
shrb
mov
ret
push
stc
nop
mov
sub
stos
sbb
popf
out
lods
scas
mov
xchg
xchg
mov
push
cwtl
push
popf
lahf
scas
adc
pop
sbb
adc
mov
xor
divb
add
inc
and
movsb
in
pop
dec
add
and
pop
mov
dec
push
jl
cmpsl
loopne
mov
push
mov
xchg
ret
mov
aas
pop
inc
inc
andb
lahf
adc
xchg
sbb
nop
aas
idivl
je
mov
xlat
pop
stc
mov
xchg
push
std
ret
lret
mov
ret
sub
shrb
push
xchg
mov
mov
sbb
ja
out
and
popf
in
lods
pop
cli
xchg
push
push
pusha
cltd
and
outsb
xor
xchg
addr16
or
es
shr
sub
jg
jne
or
xchg
lds
cli
pop
push
sub
dec
out
or
xorl
or
bound
iret
call
cli
mov
icebp
notl
sub
scas
pop
ret
cmp
leave
jb
int3
jecxz
mov
stc
out
mov
leave
inc
xchg
dec
jle
sti
lret
lock
jmp
aam
jmp
inc
dec
pop
pop
inc
lods
mov
add
insb
mov
cmc
pop
loopne
mov
adc
add
outsl
inc
mov
test
icebp
fwait
rcrl
jle
mov
es
movsl
xor
in
or
push
addl
push
push
divl
jp
inc
mov
popf
dec
mov
xchg
adc
cmp
push
inc
lret
dec
nop
repz
inc
mov
repnz
cmpsl
fistl
je
imul
ljmp
test
pop
mov
and
push
je
adc
sbbl
loop
push
mov
and
lock
movsb
mov
ret
rorl
jns
mov
or
es
outsb
jne
add
push
xor
popa
roll
in
xor
xchg
sbb
inc
cltd
cmpsl
shrb
pushf
mov
xor
inc
lods
dec
scas
mov
xor
gs
ljmp
test
push
int
jnp
sub
divb
sti
push
mov
jge
dec
fs
movsb
cmpsb
inc
mov
mov
pusha
and
sbb
subb
lahf
add
xor
push
adcl
push
pop
outsl
jp
xor
lods
inc
mov
jnp
mov
jae
and
xchg
xor
sub
into
jmp
xchg
cmp
loope
into
dec
andl
inc
mov
outsb
inc
or
mov
outsb
sbb
mov
sbb
mov
sbb
pop
jecxz
enter
push
push
fstps
push
xor
rolb
pop
pop
loope
sub
push
sub
cmp
mov
add
rolb
and
jge
in
loope
jg
sub
lar
sub
aaa
fidivrs
ja
dec
sti
mov
dec
nopl
stc
test
rcll
dec
bnd
pop
sbb
lret
add
push
ja
fdivrs
push
jbe
lcall
sbb
ret
or
iret
lret
push
pop
dec
jl
add
inc
push
or
call
inc
out
nop
in
mov
cmp
sub
addr16
inc
add
mov
int3
adc
add
sub
mov
cmp
sbb
push
jb
aad
aas
shlb
pop
int
into
cmp
add
mov
add
mov
call
jbe
bound
xor
stos
cmpsl
pop
mov
inc
pop
sahf
mov
nop
iret
mov
or
negb
sbb
in
push
lcall
add
lret
xor
movsl
adc
ljmp
sub
mov
rcrl
xor
inc
and
popa
ljmp
mov
pop
aaa
jecxz
orl
loopne
jnp
mov
das
data16
mov
and
in
mov
mov
loop
mov
dec
daa
sbb
dec
push
fwait
mov
or
lret
jns
pop
inc
aaa
in
cmc
sbb
jo
les
in
push
adc
push
loop
fidivs
mov
push
testb
mov
in
jge
push
xor
lods
push
inc
adc
inc
xchg
cmp
leave
fnstsw
insl
jb
scas
inc
sbb
test
sub
push
push
stos
stc
into
or
push
test
movsb
out
sub
imul
inc
and
sub
sbb
push
cmpsb
cltd
fbld
ret
jbe
sub
lock
sub
arpl
insb
dec
lods
popaw
cmp
dec
imulb
scas
dec
add
repnz
and
ljmp
sbb
addr16
stos
jb
jl
or
push
push
iret
mov
movsb
ficoms
inc
cmp
cmpb
xor
dec
out
dec
mov
daa
insb
inc
push
ja
int
dec
hlt
jge
dec
in
push
fcmovnbe
push
and
cmpsl
xchg
add
fstps
repz
mov
outsl
push
push
iret
imul
icebp
stc
je
dec
cmp
jae
pushf
and
lret
addr16
push
adc
xchg
dec
dec
jbe
ret
bt
mov
add
add
fimuls
push
scas
shl
into
sbb
jns
iret
test
push
mov
xchg
jg
and
lret
inc
aaa
int3
sbb
xchg
push
ror
and
mov
mov
jmp
inc
in
inc
fsub
scas
xchg
sbb
and
dec
mov
std
pop
leave
fcomps
sub
pusha
sub
jg
xchg
test
pop
mov
xchg
movl
lea
cmp
mov
mov
jb
jle
lret
callw
cli
or
jge
pop
xchg
push
push
push
adc
les
mov
sub
sahf
inc
sub
mov
nop
mov
xchg
xchg
mov
mov
pop
dec
iret
in
lea
inc
push
and
pop
jb
and
cmpsl
cmp
mov
cltd
ja
popf
sbb
push
sbb
sub
jge
cld
call
test
fwait
mov
and
fcomps
add
fimuls
push
imul
and
push
push
sbb
pop
mov
jg
test
jnp
adc
cli
jmp
std
or
cwtl
push
sbb
test
fcomp
push
mov
adc
jmp
cmp
mov
jmp
test
mov
add
push
cmp
cmpb
inc
jg
push
xchg
mov
data16
mov
mov
cmp
dec
loope
xlat
sub
fmul
in
mov
in
mov
sub
das
arpl
xor
xchg
hlt
or
dec
fnstsw
loop
leave
call
nop
aad
or
pop
lahf
sub
icebp
xor
cld
fwait
xor
icebp
xchg
mov
xor
lods
movsl
dec
pushf
cmpsl
fdivl
aam
idivl
pop
in
pop
xor
call
aam
fists
jns
adc
push
fisubrl
xchg
and
sub
add
push
insb
inc
xor
repnz
cmp
pop
and
push
or
ret
dec
mov
test
mov
dec
and
out
movsb
scas
xchg
cwtl
mov
mov
pop
inc
bound
pop
mov
push
pop
cmp
dec
cmc
cmpsb
mov
pop
add
inc
jb
ret
jl
cmp
pop
dec
jbe
aam
sub
xchg
cmp
in
sbb
std
popf
ss
fs
shrb
ror
sti
xchg
inc
sub
outsb
scas
and
adc
pushf
lods
sub
outsb
mov
loope
cmp
sbb
and
cwtl
xor
jecxz
insb
fnstcw
jge
test
int
je
fistps
mov
sbb
adc
popa
mov
lock
test
mov
push
iret
sub
repz
jg
cmp
add
scas
ja
add
pushl
or
lcall
xor
bnd
std
jmp
jns
jnp
mov
cltd
dec
into
ds
fadd
cwtl
add
adc
dec
sub
and
inc
int3
mov
ss
xchg
mov
stos
pop
std
mov
arpl
int3
bound
mov
ss
scas
enter
mov
adcl
fdivl
cmp
sti
fdivrp
pop
fwait
xor
xchg
enter
jge
cli
push
outsl
out
cld
movsl
jnp
mov
cmp
stos
shrl
push
push
ja
xorb
popf
aad
enter
ret
pop
push
cmpsb
idivb
mov
in
xchg
mov
fcoms
cmc
cmp
gs
lds
or
add
popa
jle
rcr
dec
sbb
jp
xlat
jnp
xor
out
sbb
stc
aad
outsl
out
xor
pop
into
fnstcw
push
push
ret
negb
cmp
mov
nop
lea
in
cmp
bound
xchg
mov
mov
jg
stc
scas
sub
clc
sbb
fisubl
xor
mov
pop
jmp
mov
stos
mov
sbb
cli
jmp
xor
push
add
imul
out
popa
insb
lock
cmpsl
mov
add
cmp
dec
into
sbb
lret
xchg
adc
or
mov
aam
aam
addr16
mov
sbb
jle
push
push
nop
and
fwait
aas
mov
mov
jmp
scas
jmp
lahf
jno
xor
inc
jb
cld
dec
in
stc
pop
rcrl
jbe
xchg
and
out
shl
ret
and
xchg
add
in
cli
or
xor
clc
popf
xchg
cs
or
and
and
xchg
negb
cmp
mov
inc
mov
jge
fwait
insb
add
out
mov
pop
xor
and
dec
cld
jmp
dec
mov
shlb
loope
mov
lods
push
popa
mov
mov
dec
push
rol
sahf
addr16
cwtl
or
mov
std
mov
les
jecxz
fisttpl
dec
mov
int3
pop
outsl
dec
jo
ja
mov
adc
dec
rcll
jbe
pop
mov
test
inc
ds
mov
cmp
and
jbe
icebp
lods
xchg
mov
jno
inc
std
lcall
cmc
mov
jae
in
popf
cmpsl
dec
dec
es
push
stos
and
pushf
les
frstor
pop
cmp
jl
out
push
sbb
rcrl
outsb
sub
mov
push
mov
lret
mov
iret
jbe
jo
lock
jl
inc
push
xor
adcb
mov
test
iret
popf
jo
dec
or
jmp
std
dec
sub
pop
pop
into
pushf
decb
cmp
mov
or
xor
enter
ds
push
dec
dec
sarl
orb
outsb
shll
push
shlb
dec
notl
dec
fs
loopne
xchg
stc
js
jmp
inc
push
inc
aas
mov
fwait
xchg
jo
mov
mov
jbe
or
mov
cmp
lret
cmp
inc
pop
or
jmp
in
pop
pop
pusha
imul
inc
pop
sti
mov
cmp
pop
repz
push
or
das
xchg
xchg
mov
xchg
outsl
and
jmp
inc
dec
test
arpl
pop
inc
mov
in
adc
xlat
shll
cmp
loope
inc
sbb
out
add
pop
sbb
mov
add
dec
inc
push
js
sub
mov
in
mov
mov
pop
dec
xchg
and
dec
lds
add
pop
roll
mov
pusha
sub
add
iret
lods
pop
xor
lcall
sbb
adc
nop
mov
shll
mov
repz
lcall
mov
hlt
aad
xlat
jne
sbb
les
scas
jmp
mov
pop
push
aam
movsb
cs
sbb
mov
lds
movsl
sbb
mov
push
xor
and
push
xor
mov
lods
jmp
leave
lahf
jge
mov
xchg
pusha
ds
inc
and
and
cmp
and
popf
sub
aaa
xchg
jp
push
xor
jb
stos
and
cmp
ficoml
add
int3
dec
jecxz
ret
xor
cmpb
mov
push
lds
insb
les
nop
cmp
sbb
dec
faddp
add
push
or
dec
pop
fsubrl
push
outsb
leave
jl
adc
mov
inc
cmpsl
xor
in
mov
push
add
mov
adc
dec
push
test
insb
sahf
jl
xor
movups
outsb
das
jg
add
cld
add
xor
addl
sbb
pop
inc
das
and
fists
fimuls
jecxz
cmp
sub
rorl
xor
sbb
jne
fbstp
pop
call
icebp
fs
data16
jne
xor
dec
adc
cmp
scas
outsl
mov
push
popf
neg
inc
add
jae
ficoml
dec
fcomip
and
iret
into
js
jmp
add
stos
push
cmc
imul
hlt
cli
add
cwtl
lret
or
adc
or
xorl
fwait
dec
jmp
adc
insl
mov
dec
incb
cmp
mov
subb
push
mov
loop
mov
xor
fcoms
pop
inc
xchg
mov
pop
fisubrs
mov
insb
add
lods
and
hlt
lds
xor
repz
sti
push
loop
mov
inc
test
aad
add
adc
and
mov
sti
loope
adc
scas
je
push
fst
cwtl
ss
push
mov
push
mov
sub
dec
cmp
ret
inc
and
popf
push
jle
adc
sbb
int3
mov
movsb
cld
jecxz
iret
mov
aad
adc
xor
lds
add
pop
std
xor
cwtl
xchg
inc
sbb
stos
int3
lock
push
and
and
push
xchg
mov
cld
xor
mov
add
dec
or
xchg
push
fisubrs
es
mov
mov
cmp
and
xor
inc
into
mov
into
cmc
sub
mov
fisubl
mov
call
test
ret
ljmp
mov
inc
or
add
sti
jl
push
lods
push
mov
xchg
ljmp
push
mov
sti
cmpsb
lods
nop
clc
outsb
lds
fbstp
loopne
lock
xor
popf
fmuls
dec
dec
lock
aam
pop
sbb
pop
lock
aad
pop
pop
insl
int
arpl
insl
pop
bound
add
xor
in
xor
sahf
pop
xchg
inc
sub
mov
and
cld
lret
roll
cltd
lret
lret
divb
mov
and
bound
lcall
out
sbb
insb
lahf
cmpsl
cmc
adc
cmpsl
sahf
sbb
pop
mov
mov
sub
xorl
push
aad
mov
push
lock
fwait
and
mov
jge
lret
mov
jecxz
sahf
pusha
js
gs
test
je
popa
mov
repnz
cwtl
pop
inc
insl
int
cmpsb
mov
mov
inc
xchg
mov
xchg
xchg
test
pop
cmp
sub
inc
sbb
mov
push
out
mov
fmuls
int3
in
lock
jmp
cmovp
and
and
lds
adc
mov
or
jns
pop
sbb
inc
into
cltd
or
das
pushf
xor
das
mov
adcb
pop
in
in
push
cmp
add
lds
pop
cmp
inc
fisubrl
test
adc
outsb
and
fdivs
addl
cmpsb
push
das
push
dec
mov
push
lds
dec
jae
ret
xchg
mov
ds
imul
or
sti
dec
xor
loope
ror
jle
lds
cmp
and
pop
ljmp
jno
mov
lcall
add
cmp
inc
lret
jle
es
roll
or
shl
iret
xor
and
xchg
adc
cld
adc
pop
scas
cmpsb
dec
inc
push
in
fcoml
inc
mov
lret
sti
inc
test
movsl
call
push
inc
sub
movsl
or
out
outsb
sti
test
mul
xchg
insl
pop
or
ret
fisubrs
jl
fistps
push
or
xlat
push
adc
push
in
iret
xor
mov
inc
lahf
mov
lret
stc
cmp
addr16
inc
lods
ret
inc
sub
xor
cld
mov
cwtl
or
push
lcall
pop
and
imul
xor
ret
jge
out
jmp
fsubrl
cmp
dec
sbb
fs
sbb
xlat
js
faddl
or
ficoms
test
mov
add
loope
je
hlt
es
adc
sub
nop
mov
andb
lods
add
jl
sub
loope
push
add
imul
inc
int
cmp
mov
jmp
pop
xor
xor
push
cmp
cwtl
dec
pop
mov
out
cs
adc
xchg
in
xchg
pop
pusha
insl
cld
in
mov
mov
movb
inc
pop
fwait
imul
dec
adc
clc
movsl
xchg
mov
iret
jns
mov
mov
leave
and
ljmp
pop
mov
push
sub
push
dec
daa
bound
inc
fcmovne
and
rcll
shll
dec
shll
cmc
mov
dec
xor
cmpsl
dec
xchg
bound
pop
cmp
sti
imul
iret
push
fmul
das
sbb
in
sti
out
out
repnz
cmc
popa
jmp
outsb
into
cmp
mov
pop
mov
xchg
ja
pushf
mov
iret
pop
sub
idiv
mov
loopne,pt
pusha
fsubs
js
xchg
sti
insl
mov
xor
mov
hlt
inc
mov
pop
pop
in
pushf
fsubs
pop
cmp
jnp
les
sbb
in
stos
fisubrs
and
int
fstpl
stos
mov
or
fstpt
add
inc
adc
mov
xor
xchg
mov
mov
mov
xlat
movsb
pop
pop
mulb
lcall
and
mov
insb
faddl
sbb
mov
clc
outsl
test
mov
push
test
cwtl
in
xlat
xchg
insb
add
fstl
ss
filds
xchg
lods
sbb
inc
les
ja
aad
mov
shlb
sub
jl
std
aas
sub
cmc
rcll
push
sbb
jne
cmp
test
negb
insb
and
adc
dec
mov
sub
ljmp
ljmp
shrb
sbb
dec
pop
lret
mov
pop
mov
stos
fs
pop
fldl2e
out
fcoml
out
jae
mov
dec
sub
jecxz
xor
enter
scas
jne
mov
push
divl
cld
xlat
cmp
ror
mov
sub
outsb
jmp
lea
dec
int
lret
sbb
sbb
repz
mov
sbb
test
sbb
sub
cmpsl
cmpsl
push
cmpsb
aam
sti
out
sbb
mov
mov
xchg
dec
mov
and
mov
mov
outsb
mov
iret
add
call
aam
out
movsb
dec
aam
or
xchg
test
inc
xor
out
subb
cwtl
insb
jo
sbbl
scas
add
cmp
mov
dec
mov
pop
int
xor
test
fistpll
mov
mov
hlt
fstl
test
sbb
std
pusha
adc
dec
adc
ret
int
push
and
fisttpll
xor
fsubl
dec
movsb
lret
adc
add
xor
xchg
pop
shll
lahf
pusha
enter
test
and
jmp
dec
in
aad
jg
mov
std
inc
and
jg
mov
xchg
cmp
push
xchg
cli
adc
lock
sbb
push
and
dec
sbb
inc
jbe
sub
and
int
sbb
jnp
shll
cmp
movswl
mov
add
mov
pop
mov
aad
mov
repz
mov
and
or
or
dec
fwait
sub
xchg
mov
mov
iret
mov
mov
cmp
loope
dec
dec
mov
adc
out
pop
into
add
pushf
and
push
je
mov
pushf
pop
lahf
nop
imull
add
in
or
fidivrl
stos
dec
mov
push
jecxz
xlat
dec
jmp
push
add
sbbb
xor
pusha
push
xor
addr16
adc
pop
xor
cmp
rcrb
dec
adc
scas
jbe
hlt
daa
xchg
mov
adc
in
call
int3
lret
pop
cmpl
sarb
lock
fwait
jmp
lods
mov
in
sub
nop
in
dec
les
iret
popa
andl
lcall
adc
subb
xchg
ds
mov
xor
xchg
lea
addb
dec
nop
mov
ret
out
addr16
and
xchg
jmp
xchg
xchg
push
sbb
adc
add
sbb
int3
sbb
dec
jp
and
or
in
test
add
add
add
int3
icebp
and
sub
cmp
and
loop
outsb
adc
idivl
sub
cmpsl
ljmp
lea
ret
jae
clc
xlat
sbb
into
test
neg
mov
cld
loopne
sahf
pop
loop
or
popa
dec
repnz
movsl
stos
cwtl
jecxz
and
movsl
inc
push
aas
nop
out
mov
imul
imul
mov
push
out
inc
push
mov
inc
push
mov
test
inc
adc
aad
popa
daa
dec
out
jno
fisubrl
iret
mov
xor
mov
inc
adc
pop
adc
inc
and
lret
movsb
cmpsl
mov
fistl
loopne
jbe
rep
stc
aam
lcall
push
lds
cld
loope
and
repnz
sbb
les
lcall
int
and
push
mov
and
imul
out
or
jno
ja
push
in
fisubrl
inc
nop
imul
mov
cwtl
es
and
pop
mov
cmp
rorb
fldcw
and
add
test
pop
ds
inc
insb
adc
adc
jle
add
icebp
pushf
addb
orl
push
jno
xchg
nop
inc
mov
and
pop
xchg
xchg
int
xor
jns
sti
jne
mov
jle
xor
les
das
rcl
sub
mulb
int3
mov
sbb
mov
jne
push
lock
je
insb
push
addr16
data16
insb
dec
out
shlb
mov
jge
xor
loopne
xchg
clc
mov
or
adc
adc
pop
push
inc
add
fisubs
push
xchg
adc
aas
shlb
or
push
paddw
jno
pop
xor
pop
add
sub
and
in
and
enter
fwait
repz
xor
stos
cmp
scas
jbe
pushf
bound
or
mov
xchg
repnz
jns
jne
xchg
iret
jg
aad
pop
push
adc
loope
mov
js
call
cmpl
jle
je
cmc
lret
aad
mov
sbb
push
add
push
xchg
cmc
inc
int3
nop
push
aam
incl
and
roll
pop
movb
frstor
imul
mov
xchg
cltd
inc
aad
sub
shl
pop
and
xor
jp
push
or
dec
mov
fnstsw
pushf
inc
xchg
mov
imul
popa
mov
cmp
push
mov
fildl
push
fs
fadds
add
loop
inc
sahf
adc
cmp
sub
xchg
pusha
mov
fstpl
sbb
push
pop
popf
leave
subl
in
mov
std
xchg
adc
insl
push
pop
inc
adc
cwtl
xchg
les
xchg
sbb
ds
xor
xchg
int3
sub
mov
dec
inc
jae
dec
decl
push
inc
adc
call
mov
je
push
scas
pop
iret
mov
cmpsl
insl
mov
xchg
jecxz
sub
movsb
mov
xchg
jb
inc
inc
and
rclb
data16
into
sbb
add
pop
push
sub
rcrl
xchg
adc
shlb
shl
cmp
add
pop
jp
inc
push
jo
mov
adc
cwtl
fwait
aas
pop
mov
aaa
pop
fs
dec
jge
xchg
addb
scas
std
fiadds
push
jae
mov
ret
cmc
adc
call
push
rolb
lcall
pop
and
jge
call
xorl
das
pop
xchg
mov
notl
mov
pop
mov
sbb
or
lret
xlat
and
enter
cs
push
enter
mov
rcll
jp
push
xlat
ljmp
std
ret
xor
add
icebp
in
cmp
imul
int
inc
aas
cmpsl
insl
sub
fwait
mov
dec
push
jl
repz
xlat
test
mov
xor
mov
xchg
and
fisubl
and
or
fmull
inc
cwtl
cmp
fsts
loopne
stos
xrelease
scas
ss
in
add
notl
xchg
jno
imul
loop
sub
fidivs
cli
push
push
cmp
mov
mov
inc
mov
loopne
xorl
xchg
testb
test
xchg
sub
imul
orb
inc
in
scas
sbb
call
push
xlat
lahf
sbb
inc
es
fbld
jg
loope
cmc
in
in
sub
jmp
pop
sti
imul
cltd
cmpb
js
test
pop
sbb
fcom
push
push
inc
iret
and
push
out
add
add
add
mov
cmc
rolb
jl
jmp
or
pop
xor
js
outsb
push
or
ljmp
ljmp
cmpb
gs
xlat
fists
scas
or
push
mov
jg
daa
and
add
stos
sbb
stos
imul
je
and
xchg
jae
lcall
cmc
int3
fldcw
scas
mov
mov
push
pop
push
jl
or
sti
scas
lcall
loope
test
jp
scas
or
sbb
xor
or
cmp
pop
in
or
mov
or
and
shll
lods
rcll
loop
push
mov
jne
aaa
cmp
or
push
out
push
cmp
dec
roll
shll
add
adc
dec
push
testl
outsl
inc
dec
lds
xchg
into
data16
pop
inc
cltd
or
mov
cmc
cltd
dec
out
lret
lret
xchg
addl
jo
jne
insb
push
int
jle
or
es
push
insb
fisubrl
loope
je
push
nop
adc
mov
mov
pop
rcr
pop
sub
in
xchg
mov
out
fistps
and
les
mov
ss
jge
rcll
adc
mov
lock
jecxz
nop
je
loope
mov
jno
jp
pusha
xor
mov
sbb
test
ds
xchg
pop
sub
add
popa
xchg
out
pop
jmp
out
or
rclb
sti
inc
shl
dec
mov
jbe
movsb
mov
les
pop
cmp
xor
imul
and
push
sbb
cmp
insb
push
and
xlat
dec
insb
es
les
fildll
mov
pushf
push
incl
cmp
xor
imul
sbb
rcrl
cmp
mov
and
mov
pop
lahf
xchg
fwait
inc
add
pushf
jae
sbb
mov
test
adc
sub
stos
popf
or
mov
sbb
push
xchg
mov
or
adc
push
xchg
cmp
pop
in
or
push
push
aad
iret
push
sub
pop
rol
sti
jo
mov
jae
movsl
sarl
jae
ja
jmp
pop
imul
sub
cmp
dec
xor
mov
fdivl
mov
and
bnd
push
cmp
push
add
lret
cli
ret
push
insb
stos
testl
sbb
xor
popf
js
lret
ja
or
lret
aad
in
lret
lcall
xor
fbld
test
pop
lods
shll
or
in
das
inc
jl
sbb
jae
and
cmp
mov
insl
enter
add
push
and
mov
das
jbe
out
cwtl
stc
jl
daa
flds
aas
fiadds
out
pop
rolb
cmp
or
mov
mov
xchg
pop
arpl
xchg
xchg
fsubs
fnsave
test
je
icebp
xchg
xor
dec
ret
push
dec
arpl
jecxz
lcall
idiv
inc
sbb
fldl
mov
sbb
sub
in
cmp
mov
fimuls
inc
dec
aad
pop
int
mov
iret
and
pusha
fiaddl
stos
sbb
add
jo
test
cmp
mov
xchg
mov
addl
add
push
ret
pop
cmp
into
adc
es
fisttps
mov
loop
icebp
xor
popl
ja
bound
xorb
scas
insl
icebp
mov
icebp
mov
aas
lcall
xchg
in
add
cltd
inc
stos
js
scas
jle
sbb
add
and
mov
lea
mov
lods
iret
xchg
jg
hlt
aad
imul
lret
xchg
fmulp
xchg
push
sbb
movsl
xor
inc
aad
mov
fwait
js
push
ja
jg
out
movsb
xor
jp
cmpsl
mov
pop
sub
lds
push
lods
sar
adc
sbbl
cmp
adc
sub
pop
mov
fimuls
dec
jle
ja
push
adc
rcr
jp
nop
ljmp
ds
out
enter
xor
out
jne
jae
push
popa
pop
insb
push
ret
inc
pop
cmp
mov
in
lods
repz
iret
arpl
mov
ja
xor
pop
sub
inc
push
mov
dec
pushf
mov
adc
testl
mov
jae
sub
mov
lret
mov
mov
and
cs
jnp
rcl
das
dec
pop
imul
clc
sub
cmp
push
adc
daa
xor
rclb
inc
iret
cmpsl
jnp
inc
jns
and
sbb
idiv
xor
hlt
jmp
fmuls
jbe
js
mov
stc
jns
sub
loope
jo
add
pop
rcrl
xchg
stos
divps
int
stos
idivl
je
in
lods
iret
adc
xor
cmpb
fs
xor
xor
jl
push
and
jns
inc
outsl
into
pop
cwtl
fwait
lcall
inc
dec
push
sti
std
dec
add
cmc
push
sub
jl
adc
and
mov
movl
movsl
sub
add
mov
sub
loopne
cmpsb
out
xor
mov
lahf
xor
add
fwait
sarl
in
xchg
push
mov
fs
push
imul
sbb
shlb
mov
sub
jno
cmp
xchg
test
xor
sbb
jae
cmp
shlb
push
xchg
lret
cmp
fcmovb
insb
sub
adc
dec
jne,pt
out
push
pop
jbe
aad
fprem1
mov
jns
movb
add
cwtl
insb
idiv
lahf
je
cs
add
repnz
in
outsl
xchg
cmp
fsubrl
jno
push
sub
adc
mov
sbb
push
mov
pop
std
pop
stc
adc
pushf
pop
dec
sub
inc
hlt
jb
mov
das
ds
pop
xor
inc
mov
push
dec
dec
add
jecxz
inc
mov
sub
xchg
repnz
lea
mov
push
scas
mov
or
stos
enter
stc
icebp
iret
movsl
fdiv
adc
aas
imul
mov
stc
push
gs
lock
inc
shrl
dec
pop
sub
lcall
sub
sub
mov
ds
push
push
dec
push
mov
and
hlt
jne
aam
cwtl
loopne
push
and
jo
gs
inc
sbb
fidivrs
cwtl
shlb
mov
loope
icebp
das
aad
jp
mov
push
adc
popf
cli
cli
pop
jb
cmp
adc
pushf
mov
inc
mov
rolb
js
sub
sti
and
aaa
xor
inc
sub
xchg
out
push
or
or
pop
dec
sub
mov
dec
dec
into
dec
fst
adc
ds
xor
loopne
xchg
push
adc
mov
add
mov
dec
lret
js
mov
and
ja,pn
enter
cmovae
jno
lods
add
jp
mov
adc
or
add
negl
test
lea
mov
xor
movsl
outsl
aaa
jbe
leave
sbb
divl
in
mov
jbe
mov
fistps
mov
pop
mov
sbb
out
sub
loop
ja
loopne
or
jo
sub
cld
imulb
leave
ljmp
inc
ret
arpl
sbb
pop
mov
xor
repnz
xor
sub
sbb
repz
cmp
fisttps
xchg
add
sub
xorb
iret
test
sub
mov
xchg
pop
jnp
cs
sub
sbb
add
xor
jl
cs
mov
fstpl
sbb
cmp
cmp
sbb
push
mov
mov
scas
mov
js
sbbb
mov
sarl
mov
fwait
hlt
mov
daa
imul
and
cmp
xor
imul
push
js
add
lcall
aas
stc
pushf
push
mov
sbb
xchg
mov
jmp
fstl
mov
shl
xchg
test
arpl
mov
dec
fmuls
rcrl
jno
popf
or
xchg
loop
mov
cmp
stos
cli
xor
hlt
aas
insb
and
add
fiaddl
dec
int
enter
mov
loopne
cld
imul
cltd
and
dec
es
dec
or
xchg
push
outsb
sbb
adc
add
cmp
fucomip
pop
cmc
rcr
repz
jne
mov
and
add
ja
in
popa
and
addr16
lcall
mov
pop
jo
push
cmpsl
cmp
lahf
daa
sbb
push
and
insb
mov
adc
sbb
cs
inc
inc
fwait
xor
insl
fwait
mov
xor
push
inc
arpl
xchg
push
pop
jo
fdivl
jno
repz
jp
fisttps
repnz
dec
xchg
or
idivl
outsb
sbb
roll
xchg
rcrl
sub
mov
xor
pop
xor
xchg
fisttps
xor
cmp
xor
or
xchg
xchg
add
mov
and
cmp
sbb
add
bound
mov
sub
mov
lea
out
pop
sub
sarb
js
sbb
stos
sti
aas
imul
adc
jns
mov
mov
sub
clc
lods
and
js
push
call
lret
cmc
leave
insl
sbb
xlat
xor
mov
inc
loop
pop
out
mov
pop
xchg
sahf
jb
shlb
mov
xor
lock
das
mov
jecxz
xor
arpl
leave
and
lock
cmp
fisubl
imul
fwait
imul
test
or
cmp
outsb
imul
test
mov
inc
push
and
movsb
insb
push
cli
cmp
xchg
out
cwtl
arpl
clc
sub
imul
je
popf
ss
sbb
push
xor
daa
mov
pop
clc
push
xchg
mov
xor
stos
and
nop
and
in
mov
push
mov
in
fsin
and
xchg
and
push
loopne
out
out
mov
rolb
mov
repz
je
stos
push
js
fwait
movsl
cld
dec
xchg
popf
mov
mov
sarb
loope
aad
push
daa
sahf
pop
mov
imul
lods
scas
jge
inc
pusha
or
inc
in
lods
ret
add
jno
sbb
sub
mov
scas
jl
movsb
mov
mov
sub
cmp
lcall
pop
push
push
pushf
addr16
mov
jns
comiss
xchg
sbb
push
push
mov
xchg
cmp
fmulp
lods
das
sub
jp
sbb
mov
mov
mov
nop
sbb
dec
adc
add
inc
sub
into
sarl
lret
not
mov
adc
lea
jge
sub
movsb
push
cmp
aaa
in
in
xlat
clc
fcoml
push
mov
testb
mov
inc
fildl
mov
fdivs
je
mov
icebp
int3
in
iret
mov
pop
push
jbe
test
push
dec
movsl
add
outsl
jge
ljmp
lret
mov
stos
jbe
pop
data16
inc
jl
sti
jp
out
imul
mov
push
sub
mov
lret
ret
push
add
lret
fcoms
sbb
stos
insl
out
dec
out
push
dec
js
lret
and
mov
pop
lods
fbld
dec
xchg
test
push
cmp
mov
call
push
bound
sub
mov
mov
aam
sbb
push
das
lock
xchg
out
lds
pop
push
cmp
rcrb
add
in
stc
xor
mov
leave
xor
inc
stos
dec
jmp
xchg
push
push
push
sbb
cs
adc
in
jecxz
xchg
push
dec
fs
xchg
cmpsb
movl
lret
and
psrad
jg
insb
aam
push
cmpsb
cmovs
mov
push
sbb
sbb
loop
cmpsb
pop
add
rcrl
lret
fwait
jle
imul
fildl
and
mov
dec
in
adc
jp
push
cs
ds
adc
fadds
and
out
shlb
aad
mov
je
and
or
frstor
jnp
dec
lcall
fadd
data16
mov
xor
lea
leave
sti
jecxz
sub
push
pop
sbb
cmp
and
push
jo
cmp
push
mov
pushf
adc
xor
mov
div
push
sub
test
int3
cmc
pop
xor
pop
ud2
clc
xchg
or
dec
aam
push
aad
or
cmpsl
jne
jle
jbe
sub
lret
jecxz
inc
dec
add
mov
cmp
sub
dec
mov
insb
incl
mov
xor
push
adc
fildll
pop
test
hlt
pop
jne
leave
adc
add
xor
and
mov
mov
lret
je
divb
adc
gs
movl
mov
push
scas
fdivrs
mov
push
enter
xchg
repnz
mov
insb
xchg
sbb
mov
jnp
cmp
jno
cmpsb
das
xor
xchg
fs
std
aaa
ja
xor
iret
je
fwait
jo
jns
lea
ljmp
sbb
iret
js
push
cmp
sub
orl
xor
mov
mov
enter
mov
clc
xchg
sahf
mov
mov
scas
std
mov
and
inc
pop
sar
and
dec
hlt
sub
dec
mov
lock
add
int
jecxz
lods
cmpsb
cmp
cmpsb
pop
mov
in
mov
into
testl
mov
or
sub
jno
aam
imul
dec
sub
sbb
mov
sub
cmpb
mov
mov
inc
scas
ljmp
jo
aam
rorl
cld
shrl
fwait
cs
mov
mov
xor
inc
jp
mov
loope
aaa
add
add
movsl
stos
inc
cltd
in
xchg
ret
xchg
adc
mov
call
std
push
push
ficoms
mov
jne
aam
mull
or
pop
push
mov
icebp
lods
stc
add
sti
sub
mov
dec
push
sbb
sbbl
push
cmp
mov
repz
fcomps
jo
dec
sub
mov
test
adc
call
subl
sbb
lods
pop
cmp
adc
ja
ja
js,pt
mov
outsl
or
sub
pusha
aaa
inc
or
xchg
insl
jg
scas
add
push
test
mov
jns
push
insl
iret
or
aas
leave
insl
add
mov
data16
dec
mov
xor
cmc
test
fwait
mov
xchg
fiaddl
push
icebp
rorl
adc
insl
stos
pop
jge
les
fucomp
jecxz
orb
mov
dec
or
sti
cli
leave
sub
popf
mov
aas
or
jecxz
fdivs
out
push
addr16
cld
pop
mov
inc
in
xchg
cli
andl
dec
add
jns
and
dec
pop
scas
cltd
lcall
ss
and
fistpll
jns
add
lcall
pop
addl
lcall
jp
aas
xchg
fidivrl
xchg
imul
dec
inc
sbb
and
pushf
adc
imul
pop
dec
add
mov
dec
cmp
bnd
mov
call
sbb
pop
dec
loopne
mov
push
adc
push
mul
repz
pop
jbe
lret
mov
pop
push
push
mov
daa
dec
sbb
and
mov
push
sarl
xor
mov
add
xor
in
sahf
loop
cmp
and
xchg
ja
nop
and
and
cmp
push
stos
cmp
dec
enter
dec
out
or
cmp
repz
mov
sub
mov
xchg
or
clc
ret
ds
pop
outsb
push
dec
pop
divb
mov
stos
jbe
jo
sub
mov
out
neg
aam
add
mov
dec
enter
fucomip
fldenv
pop
jns
and
xchg
cmp
pop
mov
outsb
adc
add
pop
mov
dec
cmp
hlt
stc
mov
shll
mul
push
stos
xlat
push
loopne
fdivp
shrb
out
jo
xor
out
adc
sub
fcoml
sbb
outsb
jecxz
and
pop
cmpsw
mov
mov
push
stos
lds
or
das
xor
push
jnp
in
mov
fnstsw
lock
outsl
lods
sti
sub
cmpsb
push
pushf
cmpsb
jg
push
loope
aaa
xor
sub
ret
mov
xchg
cmpsb
jb
sarb
xor
call
daa
or
cmp
mov
repnz
xor
sti
lock
or
adc
mov
aam
pop
fwait
mov
mov
and
sti
out
shrl
xchg
cmpsl
sbbl
shrl
loopne
ret
sub
inc
cltd
dec
shrb
or
aam
push
push
cmovbe
lea
pop
pop
in
fwait
fs
push
mov
mov
xlat
ljmp
lock
stos
xchg
cmpsb
mov
jmp
inc
cmp
shl
mov
mov
cmpsb
or
and
xchg
mov
jae
or
push
cmp
push
iret
rcll
cmpsb
push
ljmp
popa
mov
cld
cmp
mov
andl
xlat
mov
fmuls
sub
outsb
lret
out
and
push
leave
adc
stos
cwtl
cmc
cmp
sar
in
push
loope
test
jl
dec
lock
pop
in
jle
aam
jno
push
and
add
add
cs
std
mov
jo
push
clc
scas
es
xchg
push
hlt
aaa
enter
mov
bnd
mov
inc
mov
lret
je
xor
call
pusha
mov
or
in
pop
cmpsl
fwait
pusha
inc
out
ds
mov
data16
bound
movl
test
jne
push
pop
dec
mov
sub
push
cmp
int
imul
add
pop
icebp
fmuls
mov
inc
in
mov
dec
or
negb
negb
pop
add
or
mov
and
movl
stos
fdiv
sbb
mov
pushf
dec
push
adc
mov
movsb
data16
les
shlb
fiaddl
mov
jnp
sbb
repz
rclb
push
and
push
icebp
cmpsb
pop
adc
ds
and
and
lret
fidivrs
pusha
push
icebp
xchg
insl
cmp
xchg
mov
mov
sarl
aaa
test
cmp
or
push
movsl
push
cwtl
lahf
push
push
aaa
into
in
ret
or
repnz
scas
jmp
inc
iret
sub
arpl
and
mov
mov
leave
fs
push
mov
fldcw
jl
jnp
mov
xor
or
inc
pop
xchg
stos
mov
enter
jb
lds
in
xchg
arpl
ret
cwtl
sub
movsl
jne
and
mov
mov
call
popf
imul
aad
loopne
call
data16
test
pop
push
decl
mov
xor
in
adc
mov
push
cmp
push
div
cmp
lods
fidivs
shrl
mov
push
add
jle
mov
jbe
roll
push
dec
jbe
in
and
scas
ds
mov
jno
add
fwait
jle
ret
mov
out
mov
insb
pop
cmpsb
jg
sbb
daa
das
jle
sub
daa
lods
dec
cmp
push
xchg
xor
inc
fmul
xchg
jle
add
loope
fistl
sub
ss
rorb
push
mov
outsb
insb
adc
inc
add
cmp
sbb
popa
and
rclb
xlat
dec
fisubs
mov
xchg
mov
pop
cld
lock
out
mov
cwtl
enter
das
pop
mov
xlat
sbb
jbe
cmpsl
mov
pushf
xchg
stos
and
jo
es
inc
sub
push
sub
out
push
mov
add
jae
dec
sub
sbb
imul
pop
cmpsb
push
pop
in
cmp
mov
bound
fnsave
and
inc
fildll
push
dec
sub
cwtl
std
lret
adc
rorl
out
mov
push
movsb
adc
andb
movsl
pop
xchg
inc
xor
push
in
pop
hlt
dec
test
lods
jmp
insl
outsl
cmc
jae
scas
out
ss
and
cltd
adc
mov
cmpsl
xchg
nop
jg
xor
xchg
adc
dec
pop
dec
fildl
out
mov
arpl
jmp
cld
and
push
stos
mov
sbb
shr
push
cmp
pushf
jnp
or
jge
gs
jg
enter
mov
movsb
popf
enter
mov
jnp
mov
mov
mov
xchg
stc
sbb
pop
pop
mov
stos
adc
inc
pop
sarb
fisttpl
loope
xlat
rorl
inc
jg
sub
xlat
or
adc
push
dec
add
out
ja
jecxz
fmull
int
mov
pop
in
shrb
sahf
movsb
loop
test
std
lods
in
xor
roll
xor
or
xlat
adc
add
mov
into
cmc
inc
or
dec
adc
mov
ss
xlat
cltd
push
pop
add
jmp
mov
int
or
inc
pop
mov
mov
fisubl
mov
das
pop
stos
in
insb
std
bound
dec
cmp
mov
mov
rcr
mov
sub
adc
lods
stc
in
push
lcall
cs
xchg
push
xchg
arpl
addr16
mov
pop
lret
push
sti
ret
inc
out
cmpsl
xlat
ljmp
inc
lea
loop
inc
scas
mov
hlt
jge
inc
adc
mov
lret
test
loopne
repnz
in
cmp
lahf
lahf
adc
mov
fmul
notb
shl
shrb
bound
mov
push
test
mov
into
out
fldcw
pop
repz
add
sub
cmp
and
push
push
cwtl
fnstenv
fistpll
fldcw
jp
and
cmp
ret
and
jg
inc
sti
out
hlt
jne
push
popa
lret
mov
rclb
and
pop
pushl
push
add
ss
out
cmp
lret
sub
lea
mov
sbb
lods
pushf
data16
fsubrl
aas
stc
insl
rolb
cmpsb
sahf
sub
adc
mov
pop
and
jl
xchg
and
xchg
adc
mov
jmp
cmc
pop
cmp
into
sbb
stos
les
dec
mov
lret
lret
xor
pop
test
lds
xchg
pop
push
adc
fistps
xor
pop
cmp
jae
push
frstor
sbb
push
adc
mov
out
cs
jbe
nop
ficoms
adc
adcb
and
sub
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
add
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
call
pop
lods
jne
jnp
icebp
push
inc
sub
scas
dec
fsub
push
mov
pop
pop
mov
add
mov
push
push
mov
pop
pop
jp
mov
pushl
mov
pop
jmp
mov
cmp
xchg
pop
add
and
cltd
arpl
adc
add
setl
inc
pop
xor
shlb
int3
adc
xor
jns
sub
sub
push
sbb
pop
push
push
add
pop
popl
movswl
sub
push
pop
sub
jne
push
push
call
arpl
fidivrs
pop
jmp
mov
and
inc
push
mov
jmp
lcall
std
repnz
jae
sub
aam
bnd
test
mov
push
push
fmull
or
xor
sub
aam
out
in
sub
jl
mov
pop
cmp
dec
jmp
shll
adc
and
out
movsb
inc
js
jns
ret
lret
enter
xor
or
cmp
dec
cmp
and
mov
pop
inc
pop
shl
lret
aaa
ret
dec
inc
pop
leave
gs
mov
test
aam
aam
mov
bound
mov
add
arpl
aaa
sbb
bound
inc
stc
sbb
sub
outsb
jo
jl
mov
ret
or
sbb
dec
test
sarl
xor
outsl
arpl
add
sbb
out
dec
stc
popf
jns
out
pop
enter
dec
stc
je
loop
jnp
imul
sbb
push
pop
xchg
gs
xor
inc
sub
insl
into
rcrb
out
dec
stc
mov
mov
ret
movsl
negb
dec
andl
push
lret
and
and
cmp
dec
dec
jg
imul
out
dec
stc
or
ja
out
xor
xchg
lret
cmp
or
xorl
sbb
popf
aam
or
jecxz
mov
out
adc
adc
jp
mov
pop
or
xchg
adc
sbb
and
stc
nop
popa
in
popa
in
push
push
int
cmp
jmp
add
cld
arpl
cs
jge
ds
test
push
mov
push
fnsave
pop
sub
sbb
inc
mov
out
cmp
cmp
xor
ficoms
add
pop
inc
iret
sbbb
lods
adc
ds
test
sahf
pop
mov
inc
inc
stos
fsubrp
adc
cld
add
ja
rcrb
shrl
adc
ret
lea
lds
sbb
test
cmpsl
call
jmp
xor
dec
cs
jnp
jp
push
mov
hlt
cmp
mov
imul
cmp
mov
out
cmp
or
inc
stos
fsubrp
pop
mov
cmpsl
test
test
dec
cmp
in
pop
jmp
dec
mov
cmpsl
loopw
frstor
xchg
mov
fldcw
mov
int3
repnz
insl
cmp
dec
lods
mov
dec
iret
inc
sbb
push
sub
dec
ds
cmp
jp
mov
cmpsb
jmp
inc
and
dec
lock
push
sub
dec
ds
mov
cmpsb
dec
dec
push
imul
dec
outsb
pop
enter
filds
mov
push
lcall
scas
pop
sahf
pop
push
xor
dec
outsb
xchg
push
cld
andb
outsb
xchg
dec
dec
outsb
xchg
dec
dec
outsb
xchg
dec
dec
outsb
xchg
jae
dec
out
dec
dec
or
rorl
mov
nop
jle
dec
outsb
pop
dec
dec
mov
dec
dec
outsb
add
push
xchg
dec
pop
enter
outsb
xchg
xchg
dec
sbb
outsb
xchg
int3
mov
mov
dec
outsb
jae
cltd
push
dec
mov
push
dec
call
outsb
add
push
xchg
dec
pop
lock
mov
subl
jecxz
in
inc
loopne
dec
dec
outsb
aas
mov
mov
dec
outsb
add
fldcw
jae
ss
inc
push
xchg
dec
push
push
mov
mov
jae
and
inc
jg
popa
xor
insl
lret
inc
inc
xchg
jle
xchg
add
jbe
or
pop
xchg
xchg
dec
dec
cmp
popf
push
xchg
dec
mov
loop
and
outsb
xchg
jae
mov
xchg
jae
data16
insl
loope
xchg
dec
call
mov
push
insl
repnz
xchg
dec
pop
lock
scas
xchg
dec
dec
jecxz
cmc
inc
enter
outsb
xlat
rorl
mov
cmp
adc
mov
push
dec
dec
or
cmp
scas
dec
dec
outsb
cs
dec
outsb
xchg
add
dec
outsb
xchg
dec
lods
mov
pop
repz
call
cmp
scas
loop
mov
movsb
pop
call
and
mov
jae
and
or
movsb
pop
call
and
add
dec
outsb
xchg
inc
and
ljmp
scas
test
cmp
or
in
xchg
mov
xchg
or
movsb
pop
call
and
dec
jg
std
sbb
pop
xchg
jb
sub
xchg
dec
dec
push
push
js
in
xchg
mov
xchg
or
movsb
pop
call
and
fxch
ss
pop
xchg
pop
push
xchg
dec
dec
push
push
js
in
xchg
mov
xchg
mov
movsb
pop
call
and
pop
push
pop
decb
xchg
push
js
jae
test
mov
pop
insl
enter
xchg
dec
dec
outsb
test
cmp
sub
js
in
xchg
mov
mov
outsb
cmc
dec
dec
rorl
dec
addr16
dec
ret
aas
aas
pop
push
pop
pop
dec
xchg
push
cmp
dec
pop
push
repz
push
inc
jg
cmp
dec
push
dec
dec
mov
push
push
rcr
xchg
lds
mov
lret
xchg
dec
or
ret
inc
mov
inc
repz
outsb
xchg
dec
dec
mov
mov
outsb
in
dec
dec
imul
iret
ljmp
jmp
outsb
aas
mov
jno
sahf
inc
jmp
outsb
add
dec
inc
test
dec
dec
outsb
aas
fwait
call
outsb
scas
repz
outsb
xchg
or
outsb
pop
dec
mov
aaa
outsb
aad
xchg
mov
cmp
push
test
add
hlt
pop
sti
mov
jmp
cmp
imul
dec
inc
fwait
ds
icebp
inc
je
inc
push
dec
test
decb
pusha
mov
sub
loope
push
jg
inc
pop
sbb
push
push
inc
sub
xor
mov
add
ds
call
aas
inc
fnstsw
inc
sub
outsb
xchg
dec
dec
outsb
xchg
dec
dec
outsb
xchg
dec
dec
outsb
xchg
dec
dec
outsb
xchg
dec
dec
outsb
xchg
dec
dec
outsb
xchg
dec
or
icebp
xchg
dec
dec
scas
test
outsb
xchg
dec
dec
outsb
xchg
dec
dec
dec
outsb
xchg
dec
dec
outsb
div
dec
jle
cmc
dec
imul
dec
outsb
xchg
dec
dec
outsb
dec
dec
outsb
es
dec
fildll
inc
dec
outsb
cmpsb
cmc
dec
outsb
testb
mov
hlt
dec
push
mov
dec
arpl
testb
dec
dec
iret
dec
dec
outsb
xchg
dec
dec
outsb
xchg
dec
dec
outsb
xchg
dec
dec
outsb
xchg
dec
dec
outsb
xchg
dec
dec
outsb
xchg
dec
dec
outsb
xchg
dec
dec
outsb
xchg
dec
dec
outsb
xchg
dec
dec
outsb
xchg
dec
dec
outsb
xchg
dec
dec
outsb
xchg
dec
dec
outsb
xchg
dec
dec
outsb
xchg
dec
dec
outsb
xchg
dec
dec
outsb
xchg
dec
dec
outsb
xchg
dec
dec
outsb
xchg
dec
dec
outsb
xchg
dec
dec
outsb
xchg
dec
dec
outsb
xchg
dec
dec
outsb
xchg
dec
dec
outsb
xchg
dec
dec
outsb
xchg
dec
dec
outsb
xchg
dec
dec
outsb
xchg
dec
dec
outsb
xchg
dec
dec
outsb
xchg
dec
dec
outsb
xchg
dec
dec
outsb
xchg
dec
dec
outsb
xchg
dec
dec
outsb
xchg
dec
dec
outsb
xchg
dec
dec
outsb
xchg
dec
dec
outsb
xchg
dec
dec
outsb
xchg
dec
dec
outsb
xchg
dec
dec
outsb
xchg
dec
dec
outsb
xchg
dec
dec
outsb
xchg
dec
dec
outsb
xchg
dec
dec
outsb
xchg
dec
dec
outsb
xchg
dec
dec
outsb
xchg
dec
dec
outsb
xchg
dec
dec
outsb
xchg
dec
dec
outsb
xchg
dec
dec
outsb
lods
fdivrp
add
xchg
nop
add
add
or
add
or
stos
or
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
stos
or
add
add
stos
or
add
or
add
or
add
or
add
or
add
stos
or
add
or
add
lods
or
add
lods
or
add
lods
or
add
or
add
outsw
insb
fs
fs
insb
add
outsb
imul
insb
add
xor
xor
fs
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
insb
xor
cs
insb
add
xor
cs
insb
add
gs
jne
xor
cs
insb
add
insb
ja
jo
cs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
lods
or
add
or
add
addb
add
inc
lods
or
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
inc
gs
outsl
insb
fs
popa
je
inc
add
add
je
jb
gs
jo
outsb
push
jb
inc
add
add
je
insb
addr16
je
insl
add
add
addr16
jne
jb
dec
outsb
outsw
dec
gs
add
add
inc
gs
imul
add
add
jb
outsb
addr16
jb
insl
inc
push
dec
inc
xor
add
push
je
push
je
dec
inc
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
mov
add
add
pop
jo
add
push
scas
and
mov
clc
mov
jecxz
and
xor
test
push
and
dec
inc
add
sbb
jp
and
push
sub
js
inc
sbbb
in
and
in
jb
inc
insl
jmp
adc
or
push
add
outsb
xor
add
push
and
xor
sbb
insb
and
jo
je
mov
dec
sub
pop
add
add
arpl
and
mov
enter
in
jb
cmp
mov
mov
in
jb
cmp
mov
add
fs
or
pop
sbb
add
xchg
dec
enter
inc
jb
cmp
pop
and
xor
adc
les
call
cmp
sub
add
fcoms
push
add
or
jo
call
or
inc
mov
mov
pop
sbb
mov
cmp
sti
pop
lods
pop
sub
xor
add
or
sbb
sbb
cmp
adc
add
mov
adc
push
jo
xor
add
jne
xor
rcrb
mov
add
or
pop
mov
add
rorb
mov
ds
add
cli
fs
out
iret
adc
push
pop
nop
in
add
pop
je
add
or
call
add
dec
dec
mov
push
mov
or
add
int3
bound
inc
ret
mov
xchg
add
gs
push
unpckhps
xchg
mov
nop
aas
push
push
add
and
call
cmp
shrb
out
nop
add
rcrb
inc
stos
or
push
add
adcl
sbb
inc
add
add
add
jb
pop
sbb
cmpsl
jmp
xor
clc
gs
test
mov
pop
pop
pop
test
loopne
cmp
cmp
mov
add
insb
inc
into
cmp
dec
add
call
ja
arpl
jne
in
or
cwtl
or
stos
cmpl
and
cmpsb
gs
jmp
xchg
or
jb
add
into
add
clc
aaa
xor
iret
pop
cmp
jae
jmp
sub
add
stc
aad
xlat
cmp
add
ds
mov
push
loop
or
or
sbb
sti
cltd
call
xchg
nop
jb
mov
in
xor
cmpb
add
jg
cmp
incl
out
adc
out
adcb
add
push
push
sbb
shr
clc
mov
sldt
sarl
mov
adc
mov
xorb
stos
pop
fs
inc
fsts
push
call
push
add
adc
push
mov
add
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
jecxz
incl
roll
pop
pop
push
fs
or
vcvtsi2ssl
adc
dec
jmp
push
repz
add
xchg
movb
inc
lock
je
push
mov
or
jbe
imul
jae
xchg
movl
adc
add
cli
int3
pusha
ds
xorb
sbb
inc
or
and
xchg
dec
sbb
cmp
adc
rcrl
in
lock
add
fisttpll
and
loop
incb
sub
sub
lds
inc
xor
mov
cmpl
and
sbb
pop
mov
add
push
adc
adc
sub
push
push
and
mov
xor
adc
bound
add
or
xchg
add
je
sub
mov
repz
xchg
xor
add
jmp
push
aas
adc
add
sub
inc
movsl
test
pop
cmp
fsubr
cli
js
verw
mov
mov
rolb
enter
add
dec
inc
je
mov
add
push
aas
xchg
loopne
int3
add
pop
aam
pop
cmpb
sub
pop
dec
adc
push
call
enter
push
pop
inc
dec
frstor
xor
pop
leave
stos
add
add
das
and
add
mov
cmp
and
movsl
pop
and
push
add
lahf
mov
pop
fwait
or
push
adc
cltd
pop
sub
ds
aas
sub
bound
jg
pusha
push
jne
cmc
mov
jle
sbb
sub
cmpsl
mov
add
popf
aaa
or
and
test
jne
mov
out
push
mov
insl
dec
lods
ds
or
inc
cmp
int3
sbb
lcallw
jmp
dec
lret
sbb
jne
cmp
xchg
adc
jp
nop
lret
add
fwait
test
adc
inc
inc
add
or
adc
dec
push
lds
mov
clc
add
jecxz
ss
add
aam
or
cmp
jae
pop
hlt
iret
xorl
add
dec
add
jl
pop
and
movsl
mov
ret
mov
add
mov
inc
lret
loopne
adc
cmp
adc
repnz
cmp
xor
or
push
mov
in
add
dec
fs
jae
cmp
push
sub
add
inc
push
jle
add
adc
outsl
push
mov
shlb
inc
push
int3
mov
addl
push
xor
popf
push
adc
rolb
add
inc
cmp
inc
mov
mov
or
les
add
inc
mov
push
xchg
xchg
syscall
ret
jmp
enter
cs
add
inc
push
dec
stc
repnz
add
dec
sbb
push
xchg
enter
sub
call
mov
add
leave
adc
nop
aad
add
mov
daa
pop
add
loop
pop
adcb
pop
addl
adc
movl
fidivrl
sbb
in
sub
pop
loopne
push
cmp
pop
xchg
adcl
or
add
cmp
add
pop
test
jns
add
iret
xchg
stc
add
sub
add
hlt
jmp
pop
movsl
fcomp
sbb
outsl
sub
rcrl
je
andb
dec
or
mov
xor
push
shll
es
or
add
adc
cmp
call
add
adc
mov
add
jmp
pusha
cli
add
jl
adc
add
inc
xor
or
mov
jl
inc
or
mov
popa
or
incl
add
sbb
loop
cwtl
in
jg
pop
add
adc
and
jl
test
sub
shr
or
sub
pusha
mov
add
andl
adc
dec
pop
fnstenv
loope
and
inc
push
je
pop
sub
add
orb
lcall
sub
adc
ret
loop
and
mov
add
mov
sub
cmp
mov
mov
mov
dec
pusha
add
add
mov
xchg
fs
pop
xor
mov
or
mov
sti
fadds
and
add
jne
xor
pop
xor
inc
add
push
pop
andl
movsb
movl
dec
add
xor
aas
fdivr
je
lea
sub
xor
scas
lds
adc
mov
loopne
jmp
add
out
mov
jg
sub
daa
in
add
sub
jecxz
es
mov
xor
ret
or
call
loop
xabort
add
dec
xchg
xor
or
mov
add
movb
add
cmp
aam
rcrb
movsb
xor
dec
loopne
nop
add
lcall
add
xor
cmp
cltd
inc
adc
insb
xchg
add
pop
fs
cmp
bound
pop
or
adcl
mov
add
mov
sbbb
test
in
andl
adc
sub
adc
enter
test
add
movsl
xchg
scas
sbb
mov
nop
imul
sti
movsl
jg
test
ret
add
inc
cmp
push
rol
fsubs
cmp
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
iret
xor
adc
pop
lea
outsl
pusha
ljmp
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
add
sti
xor
movsb
add
adcb
clc
add
cmp
push
inc
add
add
shlb
pop
dec
pop
pop
ljmp
mov
cmpb
ja
orb
les
pop
jmp
xor
dec
or
xor
pop
add
out
rolb
jmp
fwait
push
xchg
or
dec
fadds
es
dec
sbb
lcall
repnz
lods
dec
movsb
add
or
cmp
and
xor
vucomisd
jno
cmp
add
dec
inc
cmc
cltd
xor
add
sarb
add
pop
xchg
dec
lret
loopne
adc
sbb
imul
dec
stc
pop
sub
push
xor
and
pop
movsl
or
push
stos
or
cld
jmp
ror
push
push
xor
or
pop
cmp
inc
in
sti
mov
jge
push
adc
xchg
xchg
int
inc
test
add
add
cmpsl
mov
jle
add
dec
sub
or
add
clc
sahf
dec
lret
cmp
lahf
cmp
or
dec
and
lods
push
subb
js
jge
add
out
sub
sbb
or
cmp
loope
jg
sub
add
mov
sub
jb
xchg
inc
sbb
fucomi
xor
adc
or
mov
mov
and
pop
add
mov
cmp
cli
sub
add
xor
add
add
add
ret
jae
or
test
fmull
jg
add
xor
jo
les
adc
movsb
shlb
pusha
push
add
je
mov
pushf
push
or
pusha
mul
loopne
add
cmpsb
aas
inc
or
push
inc
sbb
add
adc
xor
mov
dec
loop
add
clc
cmp
sub
dec
push
loopne
xchg
add
jle
add
jo
movsl
cwtl
fmull
ret
sbb
shrb
cli
add
push
or
aaa
sbb
sub
mov
jne
mov
cwtl
push
push
add
or
and
adc
mov
adc
mov
and
cmpsb
les
pop
lds
in
aas
adc
add
roll
push
cld
std
mov
test
add
addb
cmp
movaps
sub
sarb
cmp
loopne
sub
add
xor
jge
add
cltd
pop
sub
xor
xor
testb
test
pop
sub
add
and
sbb
or
pop
sub
cmp
or
ds
cmc
pop
cmpsb
cmpsb
nop
nop
test
ljmp
add
ret
add
negl
push
push
sbb
add
add
sbb
or
push
add
and
add
xlat
orb
fnsave
fbstp
js
sarb
in
push
add
lock
loop
xchg
loopne
in
sub
gs
xchg
rorl
push
inc
pop
imul
add
icebp
xor
xchg
loop
sub
clc
cs
push
in
addl
fcoms
sub
mov
and
or
add
dec
test
sbb
dec
add
mov
mov
add
das
adc
lea
jmp
stos
adc
add
cld
jmp
mov
add
clc
mov
cmp
lahf
pop
add
hlt
dec
lock
sar
aam
adc
pop
sbb
xchg
call
jmp
add
add
cmp
and
nop
inc
or
adc
xlat
mov
add
add
mov
clc
inc
sbb
xor
add
or
add
fs
dec
pop
jne
sti
pusha
pop
cmp
jge
push
cmp
data16
inc
adc
aam
xor
out
cmpsl
movsb
cwtl
loopne
lock
scas
add
pop
call
dec
mov
sub
mov
add
inc
ds
inc
or
cmp
enter
testl
add
fstp
add
loopne
jecxz
in
mov
pop
adc
adc
pop
rorb
popl
sahf
rorb
nop
push
lcall
sti
xlat
add
cmp
or
je
sbb
js
repz
movsl
incl
and
mov
push
je
add
xchg
sbb
adc
std
sbb
lret
push
rorb
inc
push
push
mov
call
sbb
jae
add
mov
lock
cmp
ja
insl
repnz
in
jne
add
add
imul
inc
testb
push
in
mov
sub
ffreep
add
mov
mov
fstps
inc
sub
lods
pop
add
sub
pop
cmp
movsb
push
movl
outsb
mov
shlb
add
pop
enter
roll
pop
mov
inc
add
cmpsb
stos
jg
std
inc
mov
lret
in
arpl
add
bound
xor
dec
sub
mov
sub
adc
add
sbb
sbbb
psubusw
dec
jecxz
mov
nop
adc
or
sbb
xchg
and
loop
push
push
jne
mov
add
mov
push
cmp
jne
xor
dec
add
dec
or
in
and
add
in
sbb
add
jp
jae
cld
add
fidivs
add
xchg
xor
int
or
inc
pop
mov
pop
call
andb
pop
inc
imul
mov
or
add
add
cltd
push
rcll
sub
mov
add
inc
add
je
add
fldcw
add
icebp
data16
js
dec
popa
cld
sub
fildl
xor
dec
or
dec
cmp
fisttpl
xor
fnsave
andl
clc
shrb
lea
add
add
fcoms
or
out
int
test
jl
adc
pop
xor
arpl
lock
inc
testl
js
mov
js
jge
add
fstl
mov
fdivl
je
filds
mov
sbb
inc
adc
add
ret
or
pop
rcrb
jmp
inc
pop
push
mov
dec
sub
inc
mov
mov
shlb
sub
xchg
lcall
mov
addr16
push
ss
arpl
add
sbb
or
add
daa
add
or
pop
pop
adc
cld
cmp
dec
or
add
xorl
sbb
nop
jmp
add
fstpt
and
sbb
add
jne
loop
stos
or
or
bnd
xchg
jns
sub
mov
add
add
in
mov
xchg
add
clc
pop
lea
cmp
push
push
ja
pop
add
test
lods
or
call
cs
jg
add
aad
inc
xor
add
movl
pusha
in
push
or
fsubrl
sbb
sub
orl
lds
sub
push
mov
ds
decl
cs
add
mulb
cmp
push
dec
inc
push
push
inc
push
loopne
add
jb
popa
outsb
js
cmp
jo
imul
addb
add
dec
popa
jae
push
inc
insb
add
jb
push
ret
jecxz
add
pop
inc
mov
shlb
xor
mov
inc
push
lret
cmpsl
and
jb
push
add
pop
jmp
in
add
xor
ss
mov
sarl
sahf
add
shl
jmp
cwtl
add
dec
or
orb
or
bswap
out
or
popl
pop
add
push
negl
cmp
enter
bound
shrb
pop
add
push
cld
xor
add
add
inc
fcmovnbe
pop
arpl
rcrl
cltd
add
sub
sub
add
sbb
bound
xchg
sbb
in
cmp
pop
sbb
add
jae
cmpsb
jge
cmp
jnp
mov
and
add
jne
mov
insb
leave
adc
sarb
in
lcall
repz
push
push
xchg
lahf
lods
shrb
inc
adc
or
add
scas
lock
fs
jg
mov
or
enter
cld
add
roll
test
cmp
add
dec
push
cmp
mov
add
inc
out
sub
ficompl
mov
loope
lahf
sbb
call
adc
negb
addl
adc
fs
outsb
mov
and
loopne
add
add
or
sti
pop
or
rcl
add
and
shrb
or
loope
xchg
in
adcl
xor
add
clc
dec
cmp
addl
pop
mov
not
add
call
addb
add
loope
jbe
push
xor
imul
cli
in
sub
mov
fildl
push
push
ret
bound
and
cmp
or
lret
push
add
bound
or
inc
sbb
test
loopne
dec
adc
pop
inc
sub
add
add
or
jo
mov
jl
sbb
add
arpl
outsb
sbb
mov
push
pop
sub
adc
inc
mov
inc
pusha
lock
push
mov
movswl
jecxz
movsb
enter
mov
add
pushf
jmp
adc
and
cmp
xchg
xor
je
or
call
adc
inc
or
je
pop
push
adc
out
mov
mov
add
cli
or
pop
add
loopne
or
jbe
add
push
adc
mov
gs
pop
sbb
js
roll
or
jno
pop
or
inc
stos
cmp
mov
adc
or
ja
cmp
outsl
lock
andb
push
xor
fndisi(8087
adc
sbb
inc
rcrl
popl
or
rcll
push
call
xchg
mov
or
mov
add
add
movl
push
push
stc
or
scas
mov
jmp
lcall
daa
add
mov
jmp
mov
lods
outsb
test
es
or
or
jmp
and
enter
or
pop
add
add
add
inc
loope
fs
aas
pop
mov
dec
clc
inc
xor
fdivrs
add
jne
fs
pop
add
dec
and
or
jle
sbb
je
dec
jg
testl
or
dec
mov
fimull
popa
mov
les
jg
add
and
sub
and
daa
add
insb
rolb
sets
mov
das
push
pop
lcall
add
and
mov
xchg
loope
subb
inc
add
in
das
mov
cmp
push
lahf
push
rcll
sub
add
push
push
hlt
push
mov
enter
adc
das
jnp
sub
mov
cmp
mov
movsb
clc
sub
mov
cmp
add
xchg
lock
dec
lods
pop
leave
xor
rolb
add
mov
outsl
mov
cmp
pop
fs
imul
add
stos
daa
loop
or
jns
fldcw
mov
mov
sub
push
movsb
pop
incb
add
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
popa
adc
jno
or
sub
pop
ss
xor
push
sub
adc
sub
inc
add
push
and
cmp
les
jb
cwtl
or
sub
enter
leave
scas
dec
cmp
push
and
clc
xlat
in
call
fdiv
push
clc
or
frndint
push
cld
lret
sub
and
push
or
outsb
lcall
and
dec
repz
rorb
gs
sub
jmp
ss
xor
cmp
add
sbb
pop
and
add
sbb
sbb
imul
adc
fld
das
push
fsubrs
cmp
add
dec
stos
and
mov
in
fwait
pop
jecxz
push
mov
inc
push
mov
add
enter
loope
push
or
cmp
pushl
add
jne
and
xchg
test
pushf
stc
add
add
ret
and
mov
xchg
and
pop
test
jle
add
xor
add
add
shlb
dec
out
jno
mov
sub
add
pop
test
aad
loope,pt
dec
pusha
mov
dec
add
xor
sub
js
inc
loop
cmp
jle
inc
sbb
mov
test
shrl
jg
pusha
pop
add
mov
jge
les
movsl
mov
mov
sbb
xchg
adc
decb
xchg
cmpl
add
xchg
call
push
inc
mov
sbb
sbb
pop
add
xchg
dec
xchg
and
filds
mov
push
pop
jne
movb
clc
mov
sub
mov
pop
xchg
sbb
inc
sub
lea
and
pop
cli
cmp
shll
aaa
add
sahf
cmpsb
sub
dec
xchg
test
add
and
sbb
arpl
mov
add
div
aas
add
dec
inc
xchg
pslld
dec
xor
nop
dec
add
inc
pop
in
addl
jp
push
add
call
mov
adc
movsb
sbb
sbb
push
and
aaa
add
push
ret
mov
sbb
mov
mov
cmp
adc
mov
push
push
aas
inc
loopne
pop
das
mov
rolb
mov
call
add
add
cmp
je
cli
sub
xlat
add
mov
or
mov
mov
push
add
mov
sbb
mov
or
mov
adc
add
mov
call
jno
cmp
orl
mov
es
or
in
add
pop
xor
call
cs
out
and
int3
add
nop
sub
jg
jmp
sub
adc
sub
add
add
push
add
or
lret
mov
xor
sti
xchg
add
pop
jmp
push
add
cmp
outsb
jae
and
jo
fbld
mov
xor
cmp
cld
mov
sti
mov
jmp
add
pop
jnp
add
mov
xor
sbb
movl
clc
dec
jl
cld
lock
push
or
psubsb
push
pusha
push
pop
mov
push
adc
add
or
insb
ljmp
int3
push
add
inc
sub
cmc
inc
cld
das
cmp
adc
popf
daa
push
pop
mov
jmp
gs
xchg
jl
adc
pop
test
scas
sub
leave
rcrl
add
sbb
subl
adc
pop
mov
mov
inc
pop
movb
inc
mov
add
iret
sarl
stc
incb
mov
jp
add
xchg
pop
in
xor
push
push
mov
add
lahf
fstps
dec
cmp
shr
add
js
jge
xchg
push
mov
insb
or
push
push
add
icebp
sbb
mov
add
and
fucomip
xor
es
and
push
nop
loope
pop
inc
xchg
addb
mov
sub
add
push
adc
stos
add
pop
fldenv
loop
rolb
or
add
les
mov
mov
imul
enter
es
subl
bound
add
cmp
xor
xor
in
push
jbe
fwait
dec
and
loopne
movsb
dec
add
mov
inc
mov
pop
add
rcrl
shll
pusha
add
shr
add
xor
add
xchg
xor
sbb
test
std
xor
mov
cmp
cld
add
add
cmp
call
sub
nop
pusha
add
pop
les
testl
popa
inc
mov
pop
call
rol
das
out
and
jmp
pop
jb
es
dec
add
add
jne
xchg
fists
fmuls
in
inc
arpl
push
and
addps
xchg
add
std
mov
mov
cs
add
push
pop
push
sbb
push
cmpsb
sub
dec
xchg
adc
popf
scas
repz
dec
loop
iret
lods
pop
xor
push
mov
adc
cmpsl
lret
fadds
add
stos
push
mov
push
sub
pop
add
pop
lea
cli
loopne
xor
add
mov
rol
adc
jg
and
mov
cmpb
add
ret
add
ljmp
shl
dec
add
and
dec
add
int
or
fistps
shlb
sub
cmp
inc
add
call
add
and
xchg
add
push
pusha
jae
add
jmp
push
and
lret
pop
clc
adc
mov
nop
push
sub
js
inc
dec
mov
in
add
mov
sub
in
add
sti
sbb
add
pop
popf
insl
packssdw
out
add
pop
shlb
sub
sbb
cmp
cmpb
jge
sub
add
repz
add
fs
mov
mov
pop
in
insb
sbbl
pusha
mov
add
or
dec
add
cmp
cmp
subb
cmp
aaa
add
cmp
repnz
rolb
movsb
add
xchg
push
lock
cli
dec
inc
add
xchg
xchg
inc
jns
add
push
mov
addl
dec
js
mov
inc
cwtl
jnp
add
aad
adc
repz
add
stos
or
add
aam
test
mov
nop
xor
fcomps
cld
pop
scas
and
jne
shll
jo
xor
sbb
lock
sbb
jo
or
adc
jne
pop
xor
cli
and
cmp
icebp
jl
mov
jae
movsl
daa
push
pusha
xor
cltd
test
es
lret
out
or
loopne
adc
leave
adc
inc
pushf
add
mov
adc
add
sub
decl
cmp
sbb
daa
addb
jne
jnp
push
sub
mov
sbb
add
loopne
xchg
pop
xor
je
iret
adc
push
push
cmpsl
dec
add
push
data16
xor
dec
add
mov
roll
movsb
xlat
dec
or
and
push
cmp
or
cmc
xchg
test
xchg
cmp
int3
popa
dec
bound
pop
jl
cmp
mov
cvtps2pi
add
sahf
lahf
popf
stc
shlb
add
jge
add
cmp
mov
add
or
pop
prefetch
or
push
sarb
enter
add
adc
pop
add
out
mov
add
fildl
add
js
sbb
mov
sub
xlat
or
rorl
hlt
xchg
jg
repz
mov
mov
add
sub
pop
add
inc
mov
sbb
inc
xor
xor
or
add
pop
jmp
add
push
xchg
aaa
sbb
xchg
ja
repnz
adc
add
popf
sub
and
inc
dec
sbb
fimull
push
jne
mov
mov
enter
sub
jge
add
sbb
int
andb
lea
sub
mov
shrb
pop
mov
sbb
mov
mov
ja
push
into
mov
scas
add
stos
mov
fdivs
and
iret
xchg
or
mov
push
push
pop
adc
jno
pop
stos
aas
out
add
xchg
std
add
jne
push
scas
sbbl
mov
cmpsl
sbb
fildl
js
push
fstpl
xchg
mov
test
jne
cmp
lock
xorl
jne
sbb
ret
add
add
test
mov
mov
popf
xchg
nop
or
cmpl
add
cwtl
out
xor
inc
incb
or
adc
adc
xor
addr16
pusha
add
loop
adc
cmp
dec
ljmp
mov
jo
ss
femms
jle
jne
pusha
loope
push
pop
xchg
jno
add
or
jnp
add
dec
orl
stos
adc
rorb
test
xor
in
movb
sahf
jge
push
mov
es
xor
inc
jnp
insl
popl
aas
test
stos
in
nop
pushf
add
mov
test
add
cmpsl
push
push
cmp
mov
add
iret
mov
pop
movsl
mov
add
sbb
bound
add
and
jno
or
repz
push
dec
adc
xor
sbb
or
lret
adc
lcall
and
sub
adc
sub
xlat
xor
rcl
add
aam
or
or
add
xor
daa
push
add
pop
dec
loopne
pop
add
xchg
icebp
add
inc
std
popa
call
popw
mov
or
popa
add
push
call
push
add
dec
imul
cmp
cmpl
fldl2e
cmp
addb
or
sbb
cmpsb
pop
xor
mov
or
jo
add
stos
adc
pop
add
jae
dec
lret
xchg
loope
stos
add
pop
inc
cs
movsl
mov
int3
push
imul
popf
sub
test
add
lcall
pop
mov
inc
inc
mov
movsl
add
sub
subps
cmovnp
mov
mov
xor
stos
add
outsb
les
pop
cld
inc
push
push
pop
add
inc
pusha
sbb
jo
fiadds
push
and
xor
adc
mov
cmp
sub
movsb
inc
push
add
push
dec
clc
add
mov
mov
dec
nop
add
aam
loope
addb
pop
cwtl
je
mov
push
push
sbb
mov
cli
push
les
jo
addl
mov
in
jmp
xor
pop
push
cld
adc
int
sbb
pop
add
jb
or
xor
add
test
add
jmp
pusha
mov
adc
sbb
pop
jne
mov
jo
cmpxchg
xchg
xor
mov
inc
shrl
pop
das
mov
je
shrb
and
addb
sbb
add
pop
mov
add
fcoml
lcall
call
sub
xor
sbbb
fcompl
add
adc
add
shlb
or
ljmp
xlat
test
cli
pop
leave
push
add
adcl
add
xchg
add
cmp
adc
inc
addl
inc
push
push
xor
add
xchg
xor
pop
ret
dec
out
push
je
fidivrs
jne
arpl
fisttpl
clc
jle
mov
ret
add
movb
dec
inc
lods
jae
sbb
dec
add
ffreep
add
test
add
or
int3
push
imul
outsb
pusha
insb
xor
cs
jge
mov
outsb
add
jae
dec
mov
mov
test
pusha
insl
xchg
add
imul
aaa
or
fcmovu
xor
in
fmull
add
mov
je
inc
jno
pop
push
jne
add
push
sub
pop
loopne
call
push
xor
ret
aam
outsl
sbb
shll
xchg
dec
xor
add
dec
inc
dec
xchg
mov
xlat
cmp
inc
xor
hlt
cltd
movsb
stos
cwtl
xchg
inc
sbb
push
xchg
repz
mov
pop
add
sbb
mov
imulb
add
inc
scas
hlt
pop
jge
cwtl
stc
xchg
or
lock
xchg
add
imul
push
add
push
jmp
dec
add
cs
movsb
adc
inc
adc
or
or
inc
cmp
es
push
roll
jb
scas
inc
dec
xor
repz
inc
imul
outsb
es
mov
cmp
add
cwtl
loopne
add
add
jb
jg
sbb
and
arpl
out
jae
cmp
in
cmp
mov
inc
cli
mov
add
add
lock
push
cwtl
add
dec
add
mov
or
add
fwait
outsl
popf
popa
cmp
cmp
push
mov
insb
fsts
iret
hlt
add
sub
lcall
addr16
shll
roll
add
and
inc
pop
jmp
add
cmp
push
cmp
inc
add
jp
push
adc
sub
ret
test
out
inc
mov
pop
dec
repnz
imul
dec
ds
jge
mov
pop
sbb
js
ja
xchg
jnp
cmp
or
or
adc
inc
repz
roll
jecxz
fidivrs
enter
setne
or
add
and
js
push
dec
push
adc
push
add
call
shl
daa
rorb
insl
cmc
repz
sbb
push
mov
pop
add
fstpt
ljmp
and
pop
xor
jmp
mov
mov
call
dec
jne
sbb
or
mov
push
adc
mov
je
or
jle
ucomiss
test
sbb
mov
adc
inc
sbb
inc
gs
push
pop
sbb
adc
adc
rcpps
rclb
and
inc
dec
sbb
fadds
sbb
es
mov
lret
xchg
out
pcmpgtw
push
jno
test
enter
orb
stos
add
pop
decl
mov
pop
mov
sbb
or
push
loope
fs
cmp
or
popa
lea
ret
inc
inc
pop
mov
outsb
aas
rclb
add
inc
stc
int3
sub
sub
add
pop
jmp
cmp
movsb
xchg
mov
add
push
add
pop
cmc
call
je
cltd
mov
pop
mov
outsl
dec
add
mov
add
jne
pop
cli
inc
fisttpl
and
jl
and
mov
shlb
or
xor
fcoms
dec
aam
daa
mov
push
ds
lret
in
adc
and
out
add
aas
dec
push
or
mov
sbb
xchg
mov
inc
pop
jl
adc
add
dec
jne
call
in
addl
cwtl
push
negb
lcall
scas
pop
mull
les
push
and
test
je
or
ljmp
add
movsb
push
sub
sysret
xor
adc
jbe
fisubrl
in
push
cmp
push
lock
movsl
loopne
pop
rolb
add
sarb
fdivr
ret
add
mov
add
xor
xchg
loop
mov
or
pushf
testb
shlb
ficoms
jbe
push
add
or
add
adc
sbb
add
stos
sbbw
adc
adc
pop
mov
repz
mov
and
icebp
mov
out
xchg
les
cmp
add
cwtl
dec
adc
cmp
lret
add
jl
mov
inc
push
lock
adc
call
stos
dec
jg
jmp
dec
adc
int3
xor
and
into
popf
xchg
mov
add
xchg
or
pop
jmp
int
ret
inc
or
mov
xor
xchg
loope
in
cld
les
sbb
out
movlps
fdivrl
xor
add
lock
in
and
mov
inc
add
add
movb
pop
add
call
faddl
xchg
mov
mov
mov
mov
enter
cmc
vorpd
in
pusha
stc
cld
add
mov
inc
push
sarl
add
pop
mov
inc
rep
dec
pop
adc
xor
add
add
pop
xchg
push
add
stos
push
inc
add
std
push
rcrb
pop
cmpsb
add
je
int
ja
aaa
pop
mov
pusha
loopne
push
cmp
jle
and
jmp
mov
aas
hlt
sahf
mov
or
add
pusha
jns
add
sbb
aas
and
mov
ds
jle
sbb
das
roll
adc
icebp
aam
pop
sbb
mov
adc
xor
push
fisttpl
sbb
ret
xorb
cwtl
adc
shl
daa
add
loop
lds
sub
and
ficompl
pusha
lea
jp
call
insb
sub
mov
dec
lock
in
hlt
push
repnz
not
add
cmp
dec
xchg
dec
add
sub
adc
cmpsl
enter
sbb
add
pop
adc
aad
jg
push
call
mov
sub
and
sbbb
fmulp
rorl
fnstenv
add
popa
hlt
mov
pop
add
or
mov
add
inc
pop
inc
and
adc
hlt
mov
mov
aas
enter
jp
aaa
sub
add
xlat
or
inc
cmp
ja
add
mov
mov
add
ja
pushf
add
push
ret
pshufw
adc
shlb
mov
imul
in
stc
jno
clc
xchg
pop
mov
inc
mov
aam
roll
jle
sub
test
pmuludq
out
loopne
add
jecxz
or
mov
xor
lds
mov
aaa
jge
jbe
imul
add
call
mov
inc
bound
lods
cmp
pop
mov
xlat
cmp
inc
add
xchg
cmp
xchg
add
push
in
add
into
sbb
ror
or
popa
cmp
cmp
movsl
sbb
push
cmp
and
hlt
daa
lret
into
jnp
push
test
xchg
sar
cmp
sbbl
xlat
pop
mov
add
add
leave
repnz
bound
inc
xchg
and
je
jo
add
lods
lds
add
iret
decl
pop
js
mov
mov
jo
add
mov
or
pop
or
xchg
test
stos
sbb
out
add
mov
add
add
cmp
push
call
jecxz
xchg
push
mov
out
mov
sahf
popf
cmp
jle
stos
push
inc
mov
add
add
cld
sarb
pop
int3
repnz
mov
andb
lahf
in
add
pop
stos
add
scas
adc
push
rcrb
mov
out
loopne
add
fs
aam
add
jmp
loope
jp
iret
call
pop
add
fdivrs
mov
xchg
filds
cmpsb
scas
mov
outsb
or
jne
xchg
add
dec
dec
in
adcb
mov
push
push
in
add
sahf
xchg
pop
cmp
adcb
popa
std
pop
repnz
and
clc
repz
mov
jb
pop
outsb
fwait
xchg
and
les
and
aad
bound
xor
ret
daa
fsub
add
in
hlt
add
ficoms
aam
rcll
jno
cmp
int
and
clc
int
pop
mov
sbb
or
jne
ja
fisttpl
or
fiaddl
sbbl
aas
sbb
hlt
loope
mov
xchg
cmp
not
add
xchg
shlb
add
push
jb
ja
into
repz
add
inc
loop
out
sub
ret
mov
je
pop
lcall
mov
jmp
push
mov
pop
xor
or
cmp
incl
jne
add
or
or
pop
add
ret
pushl
mov
lcall
test
das
mov
push
addb
ficompl
add
pop
push
inc
pop
mov
jle
pop
jb
hlt
lods
xchg
sbb
cmc
repnz
inc
faddl
das
adcb
test
cmp
stos
dec
sahf
add
and
sub
add
add
stos
xor
loop
inc
movsl
pusha
sub
sti
pop
cmp
add
pop
mov
cmp
add
lods
jg
cmp
pop
aas
xor
fs
cmp
scas
pop
and
adc
dec
add
xchg
aaa
leave
xor
lods
adcb
xor
add
or
adc
cmpl
adc
movsl
repnz
test
push
pop
fcomps
clc
push
pop
push
mov
js
add
mov
and
xchg
insb
cmp
pop
add
xchg
push
inc
mov
cmc
add
insb
daa
imul
sub
adc
es
sbb
pop
pop
into
fs
in
dec
push
popa
call
subb
sbb
sbb
lret
pop
dec
adc
imul
jg
sbb
cmp
rorl
lods
repz
or
inc
out
add
lahf
aaa
and
repnz
push
rolb
push
repz
test
loope
cld
inc
popa
and
xchg
add
enter
xor
add
mov
cmp
cmpb
fs
call
push
add
or
clc
jl
jmp
push
mov
pop
popa
cmp
sbb
mov
dec
add
gs
das
mov
pushf
push
ljmp
push
cwtl
cmpb
inc
cmpsl
cli
popa
cmp
subb
sub
sti
out
push
add
sub
dec
or
mov
add
cmp
pop
sub
loopne
andb
outsb
push
xor
pop
movb
and
fidivrs
mov
clc
add
ds
mov
inc
mov
adc
int
mov
mov
dec
add
or
push
or
mov
ss
inc
or
jnp
add
adc
and
mov
fmull
mov
adc
cmp
and
pop
or
call
pushl
mov
and
andps
arpl
fmull
cmpsb
or
ds
pusha
or
repz
and
add
and
xchg
sbb
inc
insl
adc
or
inc
test
movsb
jmp
jmp
jmp
call
pop
jge
jge
jge
jge
jge
adc
je
xchg
add
enter
add
cmp
push
add
dec
xchg
add
inc
in
jb
cmp
cmp
dec
movb
xchg
mov
add
cmp
sbb
add
in
or
cmp
gs
fstpt
jp
and
and
daa
xchg
int3
icebp
mov
fs
stos
and
roll
and
pop
add
dec
ret
das
sbb
inc
or
inc
inc
jg
push
push
inc
push
icebp
cmp
es
mov
adc
mov
test
icebp
jb
cmp
xor
cmpsb
cmc
and
add
stc
jb
and
sti
icebp
xor
std
and
cmp
loope
loop
jecxz
jb
cmp
sbb
sub
mov
jmp
sbb
jge
mov
xchg
out
enter
jb
add
rcrb
mov
mov
and
xchg
fmul
flds
cmp
scas
fldl
fisubs
fists
in
jb
cmp
sbb
lds
and
lcall
push
lret
cmp
sbb
and
into
and
xchg
mov
mov
add
sbb
add
add
cmp
and
mov
pop
pop
sbb
call
inc
adc
cmp
push
mov
repz
sub
into
sub
adc
adc
sub
mov
mov
stc
add
arpl
or
jle
popl
and
jge
add
push
inc
pop
loope
popa
pop
pop
inc
nop
push
adcb
cmp
or
sbb
jne
shlb
insl
outsl
add
xchg
test
fdivrl
je
add
or
add
mov
xor
pop
xor
or
xchg
adc
or
rolb
and
insb
fcomps
cmp
test
xchg
add
lea
insb
jle
cmp
xchg
and
js
nop
adc
inc
lret
lock
mov
pop
inc
lods
or
add
imul
outsl
nop
push
pushf
scas
pop
xchg
rolb
rclb
sub
cmpsl
pop
hlt
fdivl
mov
dec
add
scas
data16
add
shl
inc
mov
mov
lret
pop
dec
lock
pop
sbb
add
loop
ljmp
imul
add
shll
test
mov
mov
sti
dec
lahf
lock
les
popa
dec
jge
mov
jo
orb
outsb
movsb
pop
cmp
nop
xor
scas
inc
mov
ja
movaps
je
add
gs
mov
cs
pop
xchg
dec
and
sbb
jo
es
shr
push
aas
or
mov
call
or
push
add
inc
arpl
mov
add
mov
pusha
in
pusha
test
mov
dec
add
adc
inc
jns
or
das
enter
xchg
test
je
popa
arpl
sbbl
aam
fmuls
or
imul
or
mov
inc
mov
push
dec
popa
or
pop
in
pop
jp
ja
cmp
lds
lods
xchg
test
xchg
push
outsl
fs
add
aas
xor
mov
adc
fnstenv
or
ret
scas
cmpsl
cmp
or
fs
sbb
rcr
adc
or
add
daa
sbb
imul
add
and
int
ds
add
ret
movups
add
cmpsl
pop
or
add
or
popf
test
lret
mov
mov
adcb
cmp
in
pushf
imul
push
xor
mov
ret
mov
dec
stos
les
mov
and
jmp
add
pop
call
xor
incb
shll
dec
aaa
add
add
add
mov
and
mov
sbb
dec
sub
lahf
add
leave
jbe
cld
pusha
xchg
add
test
fstp
rorb
push
add
mov
push
cmp
jbe
jae
loopne
add
cmpsb
je
mov
xchg
pop
push
mov
mov
xchg
mov
pop
fsubl
mov
pusha
cmp
je
add
xor
rolb
imul
cs
shll
jbe
test
scas
pop
inc
pop
cmp
jl
xorb
incl
and
hlt
push
jge
mov
lds
dec
sub
aaa
adc
add
inc
sbb
mov
in
movsl
add
jo
xchg
repnz
loop
sbb
mov
xlat
pop
das
add
in
sarb
and
push
or
mov
xor
dec
lret
xor
sub
clc
shrd
bound
add
push
fisttpl
lock
sub
je
cmp
cmp
cs
clc
aas
add
dec
cmpsb
jp
out
mov
push
add
inc
push
pop
dec
shl
and
in
fs
push
add
mov
mov
adc
test
add
cltd
or
xor
add
daa
bound
xchg
loopne
aam
aaa
cmpsb
xor
pop
cmpsl
adc
outsb
xchg
push
sub
repz
bound
add
mov
push
shll
imul
xlat
dec
pop
add
jns
fcmovu
jae
cmp
dec
les
dec
dec
call
and
or
mov
mov
mov
int
add
inc
mov
pop
push
cmp
dec
jecxz
adc
push
out
or
pop
xchg
add
hlt
dec
clc
xchg
add
lock
ret
dec
inc
mov
lcall
adcb
in
add
fistl
cmp
outsb
ljmp
mov
pop
or
dec
add
sbb
xor
adc
mov
cmp
fsubrs
mov
iret
jecxz
cwtl
inc
ret
data16
add
hlt
lret
shl
cld
sbb
shr
sbb
pushf
xchg
add
aaa
and
and
outsl
add
out
cmp
dec
push
dec
add
push
daa
jmp
jecxz
roll
cmp
lret
pusha
cmc
xor
add
pop
pop
push
arpl
stos
imul
sbb
ds
sub
sub
and
out
or
jmp
cmpsl
bound
adc
clc
add
adc
cmovl
in
or
sahf
inc
or
add
and
shlb
inc
add
clc
cmp
dec
les
jecxz
push
and
or
adc
fdivs
cmpsb
insb
and
push
sbb
add
and
jne
out
xor
mov
roll
daa
dec
jl
add
sub
sbb
push
int3
hlt
sbb
rcrb
lods
push
fxch
xor
and
sti
pop
jbe
mov
insb
dec
push
add
inc
stc
dec
sti
repnz
loopne
test
rcrl
in
sbb
fistpll
rclb
pop
jns
add
mov
aam
leave
pushf
sub
pop
outsl
sub
jno
orb
pop
sub
add
xchg
iret
add
add
jge
cld
sbb
pop
jne
push
hlt
or
movsl
add
push
mov
addl
rorb
pusha
jmp
xor
rol
call
mov
add
or
sub
fimull
add
jns
push
xchg
lahf
cmp
fisttpl
xor
and
fbstp
mov
sub
mov
addr16
loopne
jne
push
mov
push
pop
mov
and
jae
xor
sub
jge
add
xbegin
movsb
sbb
lods
or
mov
sub
fidivrs
or
adc
mov
or
add
sbb
popa
sti
and
xor
jb
push
cmp
imul
icebp
add
ret
push
rolb
cmpb
add
push
in
jmp
inc
or
pusha
push
ja
adc
call
add
mov
stos
je
dec
faddl
lods
lock
mov
mov
cmp
pushf
or
jne
lea
ficoms
push
add
mov
pop
add
popf
out
ds
loop
xchg
or
adc
insl
add
outsb
xor
jmp
leave
mov
add
mov
lods
cs
or
add
sbb
xchg
adc
call
mov
mov
shrl
lea
ret
adc
add
stc
inc
pop
add
push
stos
sub
sarb
or
testl
repnz
outsb
orl
pop
call
add
mov
ret
jnp
lahf
lea
icebp
mov
sbb
cmp
inc
pop
pop
xchg
call
cmp
add
pop
xchg
dec
push
push
mov
mov
fldl
or
jne
lea
dec
scas
sub
xchg
loopne
clc
fcompl
jbe
sarb
or
mov
ficompl
mov
and
loopne
pop
xchg
rolb
or
jns
neg
ja
call
lahf
std
xor
sub
ljmp
mov
add
insl
stos
dec
roll
pop
add
xchg
lock
inc
add
leave
and
out
mov
mov
mov
add
sbb
lock
sbb
push
inc
jb
or
xor
divb
addb
cmp
pop
ja
push
add
push
inc
pusha
pop
sub
repnz
int3
xchg
dec
cld
add
mov
push
and
inc
adc
inc
loopne
cltd
lea
add
repnz
cld
mov
jmp
add
loope
outsb
mov
inc
shlb
add
nop
add
inc
in
adc
add
jle
enter
hlt
push
mov
add
sbb
cmp
jbe
mov
add
ret
or
mov
mov
jnp
sbb
sub
rorb
push
push
cli
xchg
or
call
dec
roll
js
outsl
jae
add
adc
add
clc
cli
icebp
xchg
test
add
pop
jge
mov
or
into
xor
xlat
call
addr16
add
incb
and
push
xchg
xchg
cmp
pop
mov
scas
sbb
add
cmpsl
out
push
add
dec
add
mov
add
shrl
cmp
jge
and
sbb
jecxz
jne
dec
outsb
add
imul
cwtl
sub
jnp
add
jb
pusha
cmp
cmp
jns
or
add
jbe
int
push
imul
dec
cmp
test
push
clc
inc
arpl
or
xchg
fisubs
loopne
adc
movsb
fcoml
fdivrs
jb
add
out
sar
jge
cltd
pop
dec
fdivs
push
jmp
movsb
add
adc
mov
test
cs
pop
adc
push
inc
mov
jae
add
cli
cmp
inc
inc
stc
sbb
clc
addl
cmp
add
sub
add
adc
iret
and
incl
add
add
push
inc
shr
jge
daa
xchg
or
addb
push
jo
and
or
sbb
lock
add
push
lret
movsb
push
dec
add
jno
xchg
mov
ds
jns
mov
js
dec
iret
clc
inc
test
pop
and
jg
add
mov
sbb
add
xor
push
mov
jo
hlt
sbb
adc
pop
sub
jae
add
cmpsb
or
and
loope
andb
adc
mov
fs
into
add
testb
dec
nop
outsl
add
or
jo
adc
pop
fstl
insb
cli
test
incb
push
fdivr
adc
add
pusha
inc
int
jg
and
vucomiss
mov
jb
cmp
push
mov
es
or
sti
sbb
insb
cld
lock
xor
adc
jle
out
add
pop
dec
jle
add
imull
rorl
in
imul
add
lea
nop
repnz
or
mov
add
data16
add
and
out
fldenv
add
mov
dec
sub
jl
xor
jb
cmp
add
mov
pushf
and
xchg
roll
cld
hlt
add
xchg
pop
or
jne
adc
push
or
call
std
nop
mov
push
jg
xchg
imul
gs
add
js
sarb
adc
leave
push
imul
stc
mov
loope
add
jmp
xor
jno
adc
inc
or
cs
mov
xor
mov
lcall
mov
add
cmpsb
imul
fs
sub
cmp
add
inc
adc
mov
or
js
add
leave
add
mov
fldcw
pop
add
dec
push
mov
ja
mov
pushf
dec
push
dec
mov
cmp
cmp
jb
or
inc
jmp
fcomip
add
cmp
or
add
jp
add
push
hlt
mov
repnz
jbe
add
lret
and
mov
or
adcb
bound
sbbl
loopne
xchg
cli
js
and
add
inc
dec
mov
shlb
inc
cld
mov
dec
lret
jmp
lds
add
pop
inc
and
add
cwtl
fcoml
sbb
cs
je
add
xchg
push
and
mov
dec
xor
push
roll
adc
xchg
shl
int
jns
add
dec
sbb
adc
daa
add
stc
mov
out
pop
and
sub
push
mov
push
inc
sbb
add
push
pop
and
and
loopne
nop
or
adc
mov
leave
mov
pop
or
adc
shll
lea
dec
leave
mulb
add
int3
cltd
sbb
xchg
xchg
cmc
xchg
add
outsl
inc
faddl
or
rcl
push
mov
xchg
add
call
pop
and
add
push
and
add
sub
pop
test
inc
mov
and
sti
or
popa
inc
je
nop
les
jg
clc
stc
nop
mov
enter
in
and
shlb
in
jno
add
les
inc
leave
enter
pusha
jns
jmp
insb
scas
jae
or
sub
xchg
stc
shr
imul
mov
mov
add
add
pop
andb
sbb
add
cmp
push
mov
pop
and
cwtl
mov
or
into
or
adc
mov
xor
cmp
test
sub
dec
and
shlb
out
add
lods
dec
xchg
scas
mov
push
orb
mov
icebp
je
das
sub
jne
add
push
mov
lock
jae
or
arpl
mov
pop
mov
push
outsb
fisttpll
out
dec
jo
add
xor
test
int3
xchg
es
add
jl
inc
cltd
sub
leave
movsb
adcb
jne
hlt
push
lods
sub
or
test
pop
sub
pop
movsl
loop
add
xor
add
xchg
push
mov
movsb
lea
sub
push
cli
test
or
or
ret
xchg
cmpb
inc
pop
rcrb
xchg
or
sahf
fxtract
add
and
mov
sub
inc
je
jle
and
mov
and
add
addl
jmp
inc
jnp
add
fdivrs
repz
movl
mov
nop
in
addps
mov
sbb
cmp
ja
imull
dec
inc
add
pop
lock
add
ja
sub
call
jne
sbb
sbb
nop
js
jle
sbb
nop
cmovae
adc
add
jmp
aam
dec
clc
inc
xchg
pop
je
add
mov
dec
inc
orb
jnp
add
or
mov
sub
js
add
aaa
shrb
fsubl
es
sub
or
int
jns
ret
jno
mov
sub
clc
mov
into
and
push
sbb
adcb
pop
cmp
xor
fdiv
fcmovb
testl
and
push
push
inc
adc
adcl
cwtl
and
out
inc
std
mov
jmp
xchg
inc
inc
jne
pushf
sbb
pop
in
sbb
ret
subl
sti
xor
popf
inc
xor
mov
call
aaa
add
repz
adc
and
mov
cmpsb
pop
adc
sbb
jne
sub
mov
mov
push
pop
into
add
insl
add
mov
shlb
es
mov
inc
pop
mov
fldl
mov
repz
aad
xchg
dec
add
insb
jecxz
das
sbb
icebp
lods
jns
pop
add
cltd
es
mov
pusha
jbe
arpl
add
mov
rolb
xchg
les
push
nop
mov
inc
lea
push
push
cmc
sbb
xchg
jns
pop
sbbl
add
movsl
dec
add
or
test
rorb
adc
call
mov
mov
dec
sbb
les
orb
mov
add
xchg
add
aam
mov
xor
add
and
data16
pop
dec
add
inc
shl
out
dec
add
lea
inc
add
jmp
jne
mov
or
mov
jle
push
mov
sub
add
or
add
and
imul
sahf
jle
pop
add
xor
subb
test
jl
clc
loop
insb
ds
pop
pop
les
add
mov
push
mov
cmpsl
cwtl
add
js
sbb
in
push
data16
lea
push
push
or
add
pop
arpl
mov
test
pop
xor
call
nop
aas
add
cmp
adc
icebp
push
cvtps2pi
xor
nop
pop
cmp
movb
mov
push
std
add
or
jno
adc
jo
and
jle
push
bound
repnz
addl
dec
xor
push
cmpxchg
add
jmp
mov
pop
and
ja
xor
test
fsubl
lret
push
jmp
fistps
int3
sahf
xor
cld
icebp
iret
idivb
adc
add
or
inc
shrl
mov
mov
pop
add
jg
sbb
movb
paddsb
lock
jge
add
dec
pop
and
mov
add
mov
lds
leave
in
add
mov
xchg
int
into
and
loopne
aad
cmpsb
inc
roll
dec
bound
mov
fucomp
jecxz
ret
mov
jmp
add
sub
test
lcall
or
cmp
add
dec
test
inc
push
bound
cmp
pop
daa
jmp
pusha
iret
loopne
stc
aaa
in
or
and
pop
das
xor
sbb
add
add
add
or
adc
pusha
add
push
out
test
call
inc
ficoms
fcoms
test
ljmp
xchg
inc
mov
sub
test
subb
adc
ljmp
popa
jg
or
movsl
adc
mov
and
or
inc
sbb
add
xchg
and
xchg
fmuls
fildl
xchg
cmpsb
in
fsubl
sub
mov
mov
xchg
inc
cs
daa
push
es
enter
cmovno
lock
mov
les
or
enter
jbe
cmp
dec
push
inc
fs
add
testl
lea
xchg
lret
add
pop
jmp
cmpsb
xchg
inc
pop
xchg
and
and
test
shlb
add
and
mov
movsb
adc
addb
mov
cmpsl
mov
arpl
fbstp
add
pop
xor
fimuls
mov
mov
xor
rcl
ret
lret
cmp
jb
sub
sbb
add
mov
aad
adc
push
add
push
xor
pop
sub
add
lock
rorl
inc
pop
jo
add
push
jge
add
push
call
add
fwait
sbb
jns
pop
jecxz
fisttps
in
push
fiadds
xchg
jnp
dec
les
or
test
jae
add
xchg
pop
mov
add
les
mov
sbbb
add
loopne
or
orl
adcl
and
jg
in
or
orl
sahf
add
fisttpll
sbb
cld
testb
movb
or
or
xor
sbb
leave
push
cmp
fimull
pushf
push
aam
or
in
jle
add
hlt
rcr
inc
inc
push
or
push
mov
faddl
rorl
push
aaa
in
stos
pop
mov
or
aam
inc
fcoms
fsubl
mov
add
mov
mov
pushf
mov
adc
xor
add
xchg
data16
pusha
add
lock
mov
add
shl
dec
add
int3
test
add
add
and
add
jb
cmp
into
call
add
dec
or
inc
mov
add
add
adc
dec
inc
orb
je
dec
and
cmpb
jnp
add
dec
loopne
jae
adc
jns
xor
push
sub
mov
jp
in
sub
mov
addb
lock
add
mov
lcall
mov
add
xlat
pop
dec
clc
fiadds
daa
push
outsb
sub
add
adc
jno
enter
jne
fdivl
dec
mov
pop
insb
and
xor
or
roll
pop
in
testl
ret
add
dec
add
incl
add
fisttpll
ljmp
fcomp
pop
dec
push
xlat
jecxz
mov
mov
or
sub
add
cld
pop
or
int
mov
inc
add
imul
and
jae
jo
add
sub
jb
inc
mov
dec
shrl
lret
jne
out
add
imul
dec
mov
sbb
push
test
mov
adcb
stc
push
push
mov
inc
addb
push
mov
mov
or
leave
jne
add
push
and
outsl
adc
add
pop
add
add
inc
dec
out
mov
dec
cwtl
adc
fwait
mov
orb
push
fisttps
adc
and
sbb
push
out
or
iret
jmp
mov
adc
mov
in
call
add
cmp
test
pop
sbb
add
mov
stos
enter
sub
pop
rol
cmp
jnp
sub
addr16
sub
aam
mov
ror
fsubr
mov
cld
sub
insl
add
inc
and
sti
push
cmpsl
jmp
push
xchg
int3
lahf
pusha
lahf
sub
or
push
clc
cmp
gs
jne
add
cld
mov
dec
arpl
sbb
mov
cwtl
addb
lock
mov
clc
sarb
push
cld
ss
mov
mov
iret
add
mov
adc
mov
stc
or
sub
imul
mov
jmp
push
aam
xor
das
jb
sarb
add
in
sub
or
add
test
and
push
in
bound
push
in
sete
mov
mov
test
sbb
jae
mov
int3
xor
jns
xchg
mov
nop
aas
or
jmp
add
dec
cs
adc
jnp
add
or
and
clc
xor
sti
add
mov
cmp
or
aas
adc
fdivs
imul
jb
inc
push
mulb
arpl
mov
fadd
add
mov
adc
test
adc
mov
scas
lret
es
inc
les
xor
lock
jp
add
fs
adc
fidivs
jo
jle
repnz
and
adc
cmp
inc
dec
fs
sub
cmp
adc
jge
jns
pop
sub
xchg
and
add
mov
cltd
test
lock
push
mov
test
xchg
sbb
pop
mov
pop
cltd
loopne
rolb
fcompl
add
fcoms
cwtl
cltd
sbb
push
push
cmp
pop
xchg
dec
or
iret
mov
enter
les
je
dec
mov
mov
inc
mov
scas
ds
pop
dec
in
outsb
jl
test
in
cmp
dec
movsb
xchg
cmp
mov
sub
sbb
mov
dec
sub
in
cmp
mov
fdivrl
jg
inc
adc
mov
je
in
xor
jo
push
stos
or
cwtl
mov
cmp
pop
iret
adc
out
fsub
and
idivl
testl
flds
push
std
hlt
cld
xor
dec
jp
add
inc
scas
mov
jnp
jp
add
or
or
pop
jl
mov
push
cmp
adc
dec
inc
popf
inc
push
das
cs
inc
cld
mov
stc
pusha
dec
pop
xchg
inc
cmp
je
shll
inc
jle
add
or
push
pusha
setno
cmpb
subb
sti
or
in
aam
and
add
or
add
jae
enter
ljmp
and
sub
movsb
jmp
orb
pop
adc
je
add
jle
mov
cmp
cmp
add
xlat
add
call
lds
add
and
pop
roll
cmp
jne
add
iret
out
orb
adc
stos
and
cwtl
dec
popa
pop
in
aam
jg
pop
cmp
add
leave
repnz
dec
add
inc
mov
neg
jns
in
jmp
sbb
mov
xchg
je
jno
add
orl
and
stos
inc
push
pop
xchg
lock
xor
jno
stc
sub
aad
mov
das
inc
sub
rclb
adc
mov
ret
ljmp
mov
mov
add
mov
pop
or
mov
icebp
nop
jge
push
inc
cmpsl
neg
xchg
mov
in
mov
add
stos
xchg
push
xor
jp
push
fistpll
leave
les
stos
rclb
pop
or
cmp
ret
pop
xchg
jae
jb
cmp
ljmp
loop
dec
test
jmp
sub
fisttpl
rcll
add
faddl
mov
je
or
hlt
mov
xor
mov
incl
sbb
or
clc
or
pop
sub
add
jns,pt
test
cmp
dec
movsb
xchg
xor
push
or
add
cmp
fnstenv
decl
fisttpll
xchg
jnp
mov
add
je
push
add
dec
and
jp
sub
mov
jle
idivl
pop
pop
adc
inc
loop
jmp
jo
dec
loope
inc
test
add
add
add
inc
mov
add
cltd
sub
std
pop
sub
add
dec
cmc
mov
sti
popa
jg
cs
sbb
push
and
add
enter
sub
xor
sbb
cmp
flds
and
pop
testb
nop
or
dec
ljmp
adc
pop
out
jae
push
dec
fisubrs
sbb
lea
push
icebp
dec
call
mov
sub
rcll
mov
dec
add
jge
outsb
lcall
arpl
out
cmp
jbe
adc
jne
bound
push
add
movsl
cmp
dec
jmp
dec
movsb
int3
jmp
add
xor
or
jno
mov
jg
in
cmpb
lock
add
cmpsb
or
jmp
or
sbb
je
and
and
xchg
adc
pusha
push
out
loop
mov
sbb
or
or
les
mov
adc
jmp
out
gs
mov
mov
mov
push
clc
push
popa
inc
xchg
je
shll
xchg
repz
push
xor
inc
pop
jmp
inc
gs
fists
xlat
jmp
inc
inc
fmuls
rorb
add
fidivrl
lret
add
rorl
mov
add
adc
scas
add
mov
sti
xchg
pusha
jmp
pop
outsb
in
add
testb
sub
xchg
add
rol
jne
xor
add
xlat
inc
or
in
pop
ret
inc
sub
repz
in
adc
cmpl
dec
addb
sub
faddl
call
enter
or
add
clc
push
into
and
add
adc
and
dec
push
xchg
jnp
out
inc
add
push
and
pusha
mov
outsb
adcl
js
hlt
andl
cld
lock
pop
sahf
es
add
loop
pop
inc
add
xor
add
mov
xchg
add
and
pop
add
mov
movsb
ret
mov
mov
jl
std
adc
decl
add
jmp
out
inc
out
js
xor
in
jle
lods
cwtl
lea
or
fnstsw
mov
ret
pusha
jp
loope
and
insb
pop
mov
mov
imul
inc
ja
stos
jle
mov
pusha
xchg
sbb
push
add
imul
sbb
shlb
add
insl
sti
addl
lea
shlb
cmp
and
es
add
lahf
xchg
adc
cmpl
cwtl
pop
adc
movb
jmp
fldt
dec
sub
add
adc
sar
aam
mov
addl
call
rolb
fcmovnb
jns
cmpsl
fsub
pop
fstl
cli
loopne
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
nop
add
jno
mov
add
and
stos
mov
or
add
adc
cmp
add
daa
cmpb
clc
and
push
add
or
adc
add
jmp
cwtl
das
pop
test
pop
mov
sbb
and
push
outsb
add
out
ljmp
push
add
push
out
mov
add
add
enter
sldt
xchg
sarl
and
jmp
add
dec
testb
pop
mov
sub
add
loopne
jae
repnz
add
adc
fildll
xlat
mov
push
inc
jns
xor
test
cmc
lods
repnz
call
testl
xchg
les
jne
pop
dec
pop
cmc
jbe
popa
roll
dec
and
and
xchg
add
xor
sbb
add
push
push
pop
mov
aas
shl
stos
mov
jmp
mov
rolb
push
mov
pop
aad
jmp
sbb
rcrl
add
loop
sub
pop
out
call
ds
push
lds
add
xchg
test
sbb
add
sub
adc
add
into
xor
and
add
jo
inc
sbb
add
rolb
add
mov
cwtl
jg
ds
bound
stc
push
add
fchs
cmp
jmp
movb
push
test
mov
add
mov
fadds
test
pop
lods
cwtl
lret
push
dec
add
les
lahf
sub
orl
or
dec
nop
inc
push
ret
ret
sbb
push
add
mov
or
dec
jnp
add
imul
nop
add
cli
add
loopne
jb
ljmp
mov
add
xchg
jno
sub
mov
test
add
push
mov
jns
pop
push
mov
sbb
mov
xor
scas
test
adc
fisttps
fimull
sub
test
add
leave
aas
jmp
inc
mov
adc
nop
adc
inc
pop
mov
bound
and
inc
sub
pop
or
or
loopne
ss
adc
xchg
out
add
xchg
jbe
pop
and
and
mov
fwait
and
add
lret
cmp
add
mov
add
xlat
jno
or
stos
mov
sarl
or
push
and
cmpb
repnz
inc
inc
inc
test
xchg
int
loopne
dec
ds
xorb
call
pusha
sbb
movsl
dec
hlt
add
fninit
push
push
not
mov
inc
pop
sbb
inc
fdivs
add
add
repz
out
mov
push
popa
mov
add
dec
lods
jge
ds
or
fwait
or
cwtl
xor
lea
xor
ret
enter
testl
inc
add
arpl
add
lret
jmp
stc
add
jg
shlb
es
scas
ja
add
xlat
adc
jge
add
cli
jae
andb
add
mov
xor
sbb
mov
cmovg
sbb
adc
add
jne
or
stc
jp
xlat
clc
jmp
add
imul
xchg
jns
jns
mov
cld
nop
test
xchg
xor
dec
jle
pop
sbb
ror
mov
dec
adc
lret
lahf
push
add
xchg
add
mov
mov
add
fldl
add
lea
mov
add
ret
popf
push
add
or
inc
inc
inc
imull
aaa
jo
or
scas
jle
fmuls
mov
push
ror
add
fs
or
mov
and
arpl
mov
or
js
pop
inc
inc
js
xor
mov
and
mov
dec
or
add
imull
inc
push
mov
mov
xor
push
push
jge
add
xchg
leave
mov
add
jl
pop
inc
mov
ds
test
loope
movzbl
add
and
shl
scas
add
sbb
mov
shl
fisttps
sbb
lods
add
xlat
push
adc
shrl
and
out
xor
stos
xor
xor
movzbl
cmc
xorb
add
int3
dec
in
add
xchg
dec
pop
xor
pushf
mov
movsl
inc
cltd
pop
pop
shrb
decb
lock
loopne
push
sbbb
pop
push
xorb
push
popf
in
fiadds
jg
xlat
mov
mov
adc
shlb
dec
pop
mov
cmp
add
fdivrs
xchg
fs
xchg
add
add
inc
mov
jmp
xor
out
fiadds
and
adc
sahf
ja
add
pop
inc
dec
add
ret
pop
in
call
imul
add
je
sub
fstps
add
mov
cmp
and
xor
xchg
cmp
add
or
roll
add
add
aam
out
dec
push
add
dec
sbb
or
dec
andl
out
ss
lock
lods
out
xor
push
cmp
inc
xchg
mov
sbb
gs
scas
inc
mov
sbb
test
dec
pop
mov
mov
add
sbb
fisttpll
icebp
jne
aas
add
cs
push
add
sub
jno
outsl
addl
add
stc
sub
insb
insl
inc
xor
dec
push
data16
and
add
hlt
outsb
daa
das
shlb
mov
pop
loopne
jbe
push
test
dec
cmp
scas
movsb
jne
bnd
add
or
call
andb
sbb
add
dec
mov
dec
mov
add
add
sub
mov
fwait
sub
mov
arpl
add
jmp
sahf
jmp
push
mov
lret
jns
add
movsb
pop
cmp
push
add
sub
enter
adc
jle
add
fsubrs
cli
pushf
mov
jecxz
sub
clc
mov
jne
mov
add
test
cwtl
fs
les
hlt
sarb
in
cmp
xchg
call
jns
outsl
out
outsb
add
jecxz
push
sub
xchg
incl
push
inc
test
pop
repnz
mov
and
sahf
jae
mov
cmp
and
out
jbe
xor
pusha
hlt
testb
push
xor
dec
or
push
add
mov
pusha
inc
jmp
repnz
shr
add
push
fdivs
shlb
repz
jne
xor
cmp
fimull
aad
not
ljmp
cmc
xchg
mov
xor
pop
pushf
fs
call
into
mov
add
cmp
push
popf
lock
add
mov
push
dec
add
les
add
xchg
fbstp
add
add
xchg
rolb
mov
mov
popa
imul
call
popf
lds
jb
adc
xor
aam
mov
add
fists
adc
add
pmulhw
sub
enter
bound
inc
lahf
aad
or
pop
pushf
add
sub
adc
mov
add
inc
pop
inc
pop
aaa
cmp
adc
icebp
and
pushf
pusha
movsb
fbstp
push
out
dec
lret
loopne
shll
adc
jo
pop
jl
jg
add
rclb
test
add
adc
add
shl
ss
add
inc
mov
add
xchg
inc
scas
add
pushf
mov
cmp
pop
pop
repz
clc
pop
mov
xchg
hlt
pop
add
adc
stos
movsb
aad
inc
loopne
pop
mov
test
ljmp
mov
popa
push
rcrb
add
divb
and
mov
subb
lea
into
adc
and
sbb
int3
out
add
xchg
sub
lahf
fsubrs
movsb
add
mov
ret
add
out
or
or
fldcw
jae
cmp
mov
add
movsl
jo
pop
jbe
ljmp
repnz
mov
in
subb
lcall
add
sub
mov
pop
sub
add
sub
add
mov
sub
cmp
mov
lea
pop
rep
sub
pop
daa
hlt
mov
int3
lret
mov
add
cld
ja
cmc
les
sub
xchg
lret
add
clc
and
xorl
push
ret
pop
aam
pop
data16
notb
clc
jmp
mov
cmpb
pop
pop
xlat
sub
add
sbb
mov
jmp
in
fiadds
loopne
inc
aam
mov
mov
fcomps
adc
mov
lret
stos
sub
dec
aam
sbb
inc
das
in
pusha
dec
push
rcrb
or
int
and
pusha
mov
mov
add
int3
test
fdivl
add
les
pop
xchg
push
test
sbb
nop
ds
das
add
fcomps
sbb
mov
xorb
xchg
add
adc
movsb
sti
and
adc
jp
jbe
add
out
ret
arpl
scas
sub
add
jnp
in
adc
cmp
mov
lods
and
lds
sbb
xchg
and
pusha
pop
test
push
cli
addb
mov
adc
inc
sub
and
inc
add
push
add
mov
mov
inc
sub
mov
sbb
fmull
test
and
test
and
rorb
sbb
add
mov
ret
add
push
test
rclb
jnp
adc
or
out
push
lock
addb
push
clc
lahf
and
mov
adc
xchg
push
pusha
negb
mov
and
mov
cli
mov
mov
or
bound
push
dec
divl
inc
gs
or
xchg
int3
nop
lahf
dec
mov
rcrb
mov
sbb
out
mov
adc
push
jecxz
xor
pop
loopne
addr16
popl
sbb
das
aad
sbb
and
add
in
sub
test
jecxz
jb
add
ret
or
xchg
add
rcr
idiv
pushf
add
or
scas
std
rorb
or
lods
add
jecxz
xchg
mov
out
pop
loop
push
ficoms
fsubrs
mov
xchg
mov
popf
inc
sub
and
push
cmp
cmp
sbb
dec
add
jl
daa
dec
cmpsl
das
add
mov
jo
pop
hlt
push
jns
addl
sbbb
mov
lods
loopne
mov
xlat
add
xchg
outsl
sbb
icebp
xor
sbb
cwtl
lcall
mov
add
cmp
mov
jecxz
lahf
jmp
shrb
add
inc
pop
or
sahf
adc
test
sub
test
mov
push
add
jne
and
pop
adc
jle
movsb
outsb
inc
int3
add
jl
in
test
xor
js
jnp
pop
fsubl
roll
pop
mov
jmp
cmpb
inc
test
push
test
inc
push
mov
cli
lret
inc
add
xchg
push
hlt
sub
dec
es
gs
inc
add
or
sbb
popa
ficompl
test
inc
add
push
pushf
push
ja
mov
clc
add
ljmp
adc
mov
out
pop
xchg
add
lret
pop
out
lock
jecxz
subb
test
mov
add
xchg
add
mov
nop
add
inc
mov
add
push
clc
add
or
mov
lret
xchg
scas
add
popa
icebp
data16
dec
mulb
sbb
pop
dec
add
sbb
dec
inc
mov
push
xchg
fiaddl
sbb
adc
jge
faddl
sbb
and
es
inc
adc
or
mov
or
fs
sbb
sbb
sub
mov
push
addr16
mov
mov
shl
sub
outsl
push
xor
lret
imul
add
scas
pop
dec
mov
inc
dec
out
test
add
pop
fisubrl
push
push
lahf
pop
inc
add
adc
ss
add
inc
clc
and
dec
xor
adc
jecxz
mov
fs
mov
sbb
add
lds
in
and
mov
icebp
add
jg
fiadds
addb
add
je
add
sub
pop
sub
add
icebp
std
mov
daa
repz
add
mov
cmp
shld
dec
filds
stc
pop
das
nop
mov
add
out
repz
mov
xchg
daa
cmp
pop
lods
push
aaa
repnz
add
push
outsl
movb
adc
jo
les
test
roll
mov
iret
mov
add
imul
add
and
sbb
sbb
jne
add
jmp
pop
aas
sub
mov
stos
add
mov
insb
popa
clc
add
xchg
movsb
in
cwtl
sti
add
dec
scas
fsubrp
adc
add
add
incb
jge
xor
or
mov
and
scas
sbb
dec
jne
ja
imul
mov
add
or
test
sahf
push
in
push
add
movsb
mov
lds
or
add
xchg
sarb
cld
xchg
add
enter
bound
pushf
jno
add
add
in
lahf
and
jg
add
sbbl
lock
cmp
test
add
jle
xor
and
in
add
mov
jo
scas
add
cmp
in
cmp
fimull
clc
mov
lea
jo
cs
dec
add
adc
movsl
add
pop
xchg
movsb
add
nop
sbb
push
mov
push
pop
jg
add
inc
mov
fdiv
add
clc
xor
fiaddl
or
adc
jg
cmp
in
add
cwtl
pop
call
cld
jo
repz
lods
lahf
roll
icebp
sbb
test
xor
mov
inc
fcoms
imul
cwtl
mov
jne
sahf
das
add
mov
jb
jl
and
lds
jns
add
ja
fsubl
ud2
scas
push
leave
add
js
es
popl
mov
mov
push
jae
push
fdivrs
scas
ret
adc
add
pop
fiaddl
ja
add
fadds
stos
jne
add
or
orl
adc
mov
xor
push
cmpsb
pop
jo
pop
mov
mov
es
and
push
jp
mov
xchg
clc
movsb
repz
adc
subb
inc
sarb
push
sbb
out
mov
pop
jno
rcrl
stos
fstps
add
cld
mov
mov
xorb
lret
jo
fldl
inc
test
or
push
aas
add
cmp
lds
lahf
test
mov
in
adc
sbb
and
mov
shl
mov
rcll
push
sub
add
adc
ds
repnz
push
loopne
add
lret
shlb
das
repz
xchg
pop
add
xor
jp
hlt
in
addb
fdivs
repz
arpl
fsubr
add
add
lea
add
or
push
ret
adc
shr
ljmp
test
testb
mov
jmp
push
push
fadd
sub
inc
aad
dec
add
stos
dec
adc
push
add
and
pusha
or
adc
adc
inc
sbb
popfw
adc
ja
adc
jmp
test
inc
push
or
add
sub
adc
sbb
add
jp
cmpsb
xchg
jno
sbb
inc
mov
pop
sti
pushf
or
add
imul
pop
pop
mov
jb
mov
jnp
mov
sbb
fisttpll
inc
add
call
push
cmc
sbb
cmp
iret
jne
adcb
push
jmp
or
dec
pusha
cmp
xor
mov
imul
mov
push
mov
mov
mov
mov
lret
add
mov
sub
add
sub
push
pusha
lea
cli
loope
test
adc
xchg
mov
xchg
sub
push
add
adc
callw
clc
add
sbb
adc
or
push
cli
hlt
sub
push
rorb
or
aad
or
lret
jns
repnz
push
js
movsb
mov
lods
inc
or
mov
xchg
clc
push
and
mov
sub
and
or
cld
test
add
jbe
add
or
push
lea
push
repnz
adc
jb
dec
loopne
clc
popa
add
jmp
clc
sub
inc
push
jbe
add
or
pop
mov
fldl
xor
add
sbb
pop
mov
and
cmp
jbe
jmp
lahf
or
push
adc
movb
jge
cmpb
jne
or
xchg
stc
sub
sub
fcoms
adc
popa
in
cmc
add
sahf
je
into
or
adc
add
adc
test
or
sub
cmp
rolb
sub
jae
mov
in
dec
add
imulb
pop
pop
push
push
and
imul
cltd
add
or
call
inc
jne
add
adc
cmp
pop
xor
sub
or
add
lock
xchg
repz
mov
inc
aaa
mov
inc
jns
mov
repnz
or
mov
lods
sub
fistpl
xor
cs
add
adc
mov
sbb
mov
std
ret
pop
add
fs
cmp
test
sbb
or
loope
add
divl
and
xchg
ret
add
dec
ret
jecxz
inc
test
adc
inc
push
jne
adc
rorb
mov
inc
jnp
xchg
add
ljmp
idivb
mov
xor
mov
cld
jo
call
mov
adc
push
push
push
cld
mov
dec
pushf
inc
iret
dec
or
add
ret
mov
jo
lcall
incl
jnp
or
mov
pop
pop
mov
adc
add
adc
pop
shlb
cmp
add
and
addr16
hlt
stos
and
int
add
loopne
mov
jbe
xor
ret
sbb
pop
rol
push
lods
cmp
jp
jae
jmp
jo
sub
call
clc
or
sti
inc
add
adc
dec
add
fsubr
repz
inc
add
adc
xchg
jb
sahf
enter
lea
mov
jle
pop
push
xchg
push
lcall
movb
cld
das
inc
add
inc
cmp
mov
or
mov
add
jecxz
push
cwtl
addr16
mov
iret
adc
lods
int3
jp
mov
test
add
into
clc
call
mov
dec
in
nop
dec
xchg
add
pop
jle
dec
mov
add
cwtl
dec
add
xlat
xor
not
and
mov
mov
movb
rolb
ret
jmp
add
add
sbb
inc
xlat
dec
add
cmp
shll
sbb
add
ret
lock
add
fiadds
cmp
into
add
mov
mov
sbb
mov
cmp
in
stc
jg
add
mov
in
adc
add
cmc
in
adc
sub
lock
pusha
push
imull
sbb
adc
inc
xor
push
xchg
inc
std
push
shlb
fadds
cwtl
addb
and
scas
add
inc
mov
add
xor
sub
mov
mov
inc
add
add
inc
xor
adc
add
in
cmp
sbb
fnstcw
push
or
mov
getsec
cmpsb
cli
das
outsl
adcb
add
pop
lret
in
lcall
stc
pop
vfrczps
adc
pop
pop
cmpsl
sti
push
push
std
loope
stos
movl
popf
clc
ret
dec
cs
ja
subb
xchg
testl
cmp
out
mov
add
sti
rorl
push
add
mov
int
and
icebp
pop
jns
inc
mov
add
or
enter
add
add
push
mov
and
and
mov
stc
add
addr16
xor
sub
push
cmp
cli
incl
imul
idiv
jno
xchg
adcb
add
popa
popf
insl
xorl
repnz
scas
cmp
jne
add
xor
mov
pop
adc
rolb
lods
rclb
iret
fimuls
push
mov
push
notb
sub
jo
add
or
jle
fwait
add
test
cli
daa
mov
add
test
out
aam
and
add
add
cmp
adc
insb
push
mov
in
and
out
cmp
add
jl
pop
sbb
cli
loopne
aam
and
sti
repnz
push
or
add
add
and
xor
vpermq
jg
adc
xchg
stos
out
sub
mov
pop
inc
mov
or
cmp
or
repnz
loopne
pop
cmp
gs
enter
int3
test
push
inc
add
jge
hlt
out
ljmp
test
dec
jle
add
pop
nop
cmp
loopne
or
sub
add
inc
add
adc
in
dec
lods
mov
jle
divl
sub
xor
out
mov
sub
and
push
sub
mov
loopne
or
decb
jmp
sbb
cmp
repz
int3
add
and
mov
lahf
xor
cmp
je
sbb
repnz
dec
addr16
sbb
or
popl
daa
sbb
lock
sar
add
addb
jo
add
dec
dec
dec
dec
dec
dec
loopne
add
push
push
push
push
push
rclb
pop
pop
popa
bound
andb
pop
push
add
outsl
jo
jno
jae
add
ja
jns
jp
xor
xor
xor
ss
cmp
cmp
sub
cmp
dec
rcrb
jge
cmp
sub
sub
daa
or
xchg
insb
add
icebp
test
call
xor
ret
or
mov
sub
add
add
test
add
pushf
cld
cmp
add
jmp
or
jbe
leave
jle
add
jb
add
sub
jle
push
nop
int
inc
jge
je
ret
dec
add
daa
adc
mov
add
xchg
jmp
xchg
outsl
in
push
add
pusha
std
inc
add
fisttpll
stc
or
lds
dec
addl
enter
fmulp
xchg
add
orb
jne
inc
add
hlt
xor
add
jle
xor
mov
sub
arpl
sahf
adc
add
jl
shl
loope
add
cltd
jmp
pop
xchg
push
xchg
or
dec
cmp
xchg
jbe
push
add
mov
push
sbb
dec
out
movsb
ret
add
lock
add
cli
into
add
shll
add
insl
and
mov
out
mov
push
adc
pop
cmp
pop
add
push
repz
dec
cmp
sub
jno
cmp
xchg
and
inc
add
pushl
pop
xor
out
add
mov
cmpsb
std
push
mov
cltd
xchg
loop
mov
add
xchg
push
enter
lods
jb
add
mov
les
sbb
outsb
aam
lock
add
hlt
cs
jecxz
enter
or
pop
mov
sbb
mov
add
test
pop
sti
mov
clc
fldcw
cwtl
adc
add
scas
xchg
push
dec
jmp
add
adc
add
js
scas
dec
xor
add
sbb
loop
xchg
sbb
add
roll
dec
jne
aam
orl
mov
or
inc
incb
or
aas
aad
mov
mov
pusha
add
fcom
stos
adc
lock
push
mov
add
pop
mov
test
cmc
les
and
decl
fildl
stos
xor
clc
cld
call
push
lret
xor
lds
mov
jbe
pop
pop
in
shr
mov
add
fadds
adc
neg
pop
jne
add
cmp
shr
add
imul
and
decb
sahf
add
jne
ja
movsb
add
sub
add
inc
xchg
adc
inc
sub
roll
xor
loopne
fadd
or
test
add
imul
dec
or
icebp
add
pop
inc
push
add
dec
or
imul
ja
cmp
sub
jmp
push
aad
pop
filds
push
push
mov
add
adc
add
shlb
or
jmp
xchg
dec
sub
mov
jmp
pop
lds
adc
or
sub
adc
add
jmp
clc
cwtl
dec
in
add
mov
mov
inc
aaa
add
rcl
inc
out
inc
dec
mov
add
cmp
inc
sbb
add
je
shl
cmp
add
loope
adc
stc
enter
mov
repnz
xor
or
loope
lea
repz
adcl
add
stos
jmp
push
mov
ljmp
je
cmp
jne
shlb
add
sbb
filds
inc
jae
push
adc
neg
sbb
mov
jns
out
scas
sbb
sbb
test
add
push
and
imul
adc
sub
push
mov
sub
jo
pop
jmp
add
mov
sub
xchg
movl
add
ljmp
bound
out
ja
jne
rcll
mov
movups
add
jne
sub
jmp
jnp
push
mov
mov
mov
ret
pop
jmp
add
and
scas
mov
add
jge
add
negb
sbb
incl
push
loope
mov
inc
mul
add
mov
dec
rol
test
xor
mov
xor
jecxz
push
add
adc
cmp
mov
fs
or
adc
enter
add
pop
out
movsl
cmp
add
mov
inc
faddl
sbb
sbb
mov
dec
jmp
sbb
mov
add
ds
test
cmp
fnstenv
nop
insb
lea
cmp
mov
popa
movsb
add
cmpsl
cld
ja
clc
dec
loope
pop
mov
sbb
xchg
ljmp
sub
fwait
aas
add
push
mov
mov
clc
inc
cli
xchg
out
add
leave
mov
xchg
mov
std
add
mov
push
push
mov
mov
or
push
push
lcall
add
fwait
scas
sbb
jmp
dec
add
push
pushf
jb
mov
nop
and
pop
push
push
test
jp
shlb
mov
sub
xor
add
ja
add
inc
push
mov
pop
add
fisubs
adc
call
aam
pusha
xchg
jmp
add
jg
add
adc
add
lock
add
clc
test
add
add
cmp
add
adc
out
sbb
insb
cld
inc
mov
movsl
push
or
push
adc
pusha
add
cmp
incb
jne
into
ja
lahf
stc
or
insb
push
test
in
out
leave
pop
mov
xchg
sub
js
lock
mov
cmp
cmp
adc
mov
nop
or
je
push
mov
test
in
int3
add
lea
sbb
push
mov
mov
gs
test
loop
add
insl
mov
push
or
mov
or
adc
mov
mov
mov
sti
addr16
fimuls
sbb
and
xor
outsl
xchg
sbb
push
lock
pop
jle
mov
andb
and
sbb
jmp
jle
or
cmp
jne
push
movb
loop
sub
mov
xchg
mov
pusha
leave
das
pop
xlat
and
push
xchg
pop
cmp
cmp
bndstx
pop
imul
stos
cli
push
add
sbb
add
dec
dec
mov
add
inc
push
mov
stos
add
push
mov
mov
inc
add
mov
scas
xor
mov
adc
add
sbb
cmpsl
push
mov
call
stos
dec
cmp
add
adc
out
add
pop
jnp
push
sub
mov
test
add
xchg
fcoms
sbb
mov
mov
call
push
clc
les
stc
inc
and
nop
mov
inc
sahf
loope
cld
xor
cmc
cli
adc
je
mov
mov
inc
sub
pop
dec
xor
pop
dec
adc
and
les
push
pop
mov
test
shlb
push
imul
mov
das
insb
aam
rclb
lods
rclb
add
or
add
lret
stc
dec
add
rcrl
xchg
inc
jb
add
stos
and
call
xor
ret
add
xchg
fwait
lahf
add
inc
pop
cmp
fsubrs
fdivl
dec
mov
cmp
xlat
adcl
adc
call
sbb
popf
loopne
pop
add
fsub
push
mov
shlb
test
fidivrs
jb
adc
cld
bound
push
dec
add
sbb
repz
xor
scas
jo
mov
out
dec
dec
int3
mov
in
fwait
push
mov
idivb
addl
test
sub
add
lock
in
push
dec
and
cld
ror
inc
loop
pop
ror
add
inc
sub
push
addb
out
and
push
adc
fwait
inc
lcall
sub
jnp
jnp
add
xor
jl
pop
mov
add
shl
and
test
pop
dec
add
stos
je
shrb
dec
adc
push
dec
faddl
lock
jecxz
or
and
shrl
imull
andb
add
push
insb
add
and
fsts
or
pcmpgtb
dec
mov
nop
mov
enter
jo
scas
rorb
fiaddl
xor
or
add
cld
add
pop
int3
xor
shl
inc
clc
icebp
or
jge
pop
rcrl
loope
fistl
clc
je
cmpsl
pop
push
inc
push
inc
repnz
fsubl
dec
adc
or
push
inc
pop
hlt
add
sub
ret
ret
bswap
rclb
add
add
mov
sbb
xchg
rol
xor
mov
jne
pop
add
cmp
inc
inc
adc
and
mov
jp
mov
sbb
push
pop
cld
xchg
mov
repz
shlb
lcall
roll
and
repnz
mov
lcall
daa
ja
hlt
cwtl
lods
aam
add
pop
stos
push
cmp
addr16
or
push
or
jo
mov
cmpb
sti
mov
not
sbb
call
mov
roll
fadd
jmp
add
sti
and
or
test
add
or
sbb
jp
push
rol
roll
pop
int3
call
cmc
lods
sbb
mov
add
cmp
cmp
mov
int3
out
adc
sbb
clc
and
mov
jp
loopne
filds
xchg
cmp
adc
xchg
jae
xor
rclb
mov
push
and
nop
adc
push
iret
push
or
cmp
sbb
outsb
scas
add
je
mov
or
add
pop
test
and
loop
sub
inc
call
rclb
fwait
push
xor
cmp
sahf
and
ret
push
push
ret
jp
pop
icebp
mov
std
xor
sub
cmp
and
sbb
xor
sub
test
and
add
or
jmp
sub
xchg
pop
or
pop
pop
roll
outsb
mov
movb
scas
or
nop
shlb
ret
mov
add
push
dec
movsb
pop
les
cmp
inc
ret
mov
cmp
inc
adc
and
clc
movsl
add
inc
into
in
in
lods
add
lea
loope
sbb
js
les
push
add
and
or
popl
inc
jb
adc
in
cmc
xor
mov
mov
mov
sub
jle
and
nop
cmp
cld
cmp
add
mov
sub
in
pop
cmp
inc
and
add
ret
pop
add
mov
jb
or
cmp
and
sbb
pop
imull
mov
imul
cmpsb
jg
lock
mov
jo
xlat
add
jl
in
sub
add
mov
cmp
mov
add
fdiv
ret
aam
and
adc
icebp
xor
or
adc
or
je
inc
mov
jbe
addl
cli
mov
sbb
rcl
push
mov
clc
xor
stc
add
xlat
sub
pop
rol
jl
dec
loopne
add
add
mov
test
jb
or
add
inc
jl
mov
addl
dec
lahf
sub
shlb
pop
sbb
fdivrs
adcb
ja
dec
jle
push
out
pusha
push
pop
mov
pop
rolb
pop
negl
outsl
and
sar
or
add
stos
mov
push
shrb
daa
sub
add
jno
in
sbb
loopne
repnz
add
or
addb
inc
jno
add
cltd
loope
push
adc
test
andl
insb
mov
ds
xchg
push
fcoms
inc
mov
icebp
rorl
push
aad
incb
test
scas
repz
fsts
add
mov
ja
outsb
mov
mov
movsl
xor
std
cmp
jge
push
add
and
mov
inc
scas
lcall
sbb
fists
sub
cmp
add
inc
ffree
add
or
add
inc
jl
or
sbb
pop
pop
ljmp
outsl
add
jp
int3
ror
popf
loopne
ds
and
mov
enter
add
xor
out
add
pop
mov
pop
in
xor
jo
cmc
cmp
pop
cmp
pop
adc
dec
add
into
mov
psubw
repz
addb
mov
jo
mov
and
dec
pop
add
add
int3
inc
push
or
cli
out
xchg
inc
pop
adc
call
inc
leave
sub
arpl
and
icebp
mov
cmp
shrl
add
add
jmp
or
imul
clc
fsubs
dec
out
int3
add
mov
pop
mov
sbb
sbbb
mov
xor
sub
lea
jmp
pop
aaa
lret
xor
sbb
std
pusha
xchg
jnp
fcoms
outsb
add
pop
imul
cmp
cli
stos
sub
in
mov
ret
jmp
add
mov
imul
mov
add
sbb
nop
add
shll
and
sub
aam
stos
dec
cmc
sbb
shr
push
mov
fildl
stc
lret
add
mov
adcl
cs
into
lcall
pop
add
enter
cmp
ja
setno
sub
jle
loop,pt
sbb
loope,pt
push
inc
mov
leave
jo
mov
mov
add
and
push
adcb
movsl
fdivrl
adc
test
les
pop
mov
cmp
lret
cli
insb
xor
adc
insl
dec
mov
cmovae
cs
loop
movaps
nop
test
inc
xor
or
jmp
and
lods
sbb
rolb
pcmpgtw
enter
sbb
push
sub
jmp
xor
add
and
repz
repnz
nop
mov
in
add
fistpl
push
rorb
mov
bound
add
sub
add
mov
into
inc
sarb
enter
daa
mov
pop
or
cltd
mov
jbe
dec
test
cmp
push
lret
mov
lods
jbe
pop
inc
jmp
mov
add
mov
clc
xor
push
xchg
cmp
cwtl
pop
sbb
add
aas
fmul
test
dec
addl
js
hlt
cltd
sbb
cmc
xchg
and
hlt
lahf
xorl
sbb
xchg
cld
and
pop
stos
cltd
add
iret
sbb
mov
xchg
in
sub
rorl
sub
in
or
int3
call
push
out
add
int3
out
add
fstpl
sbb
loop
testb
or
je
xchg
add
jae
lret
add
jmp
and
jno
pop
mov
jno
fs
jp
add
shl
or
mov
mov
lcall
jl
add
adc
mov
pop
in
or
mov
xchg
adc
sbb
insb
adc
les
fwait
sbb
cwtl
ficomps
xchg
scas
add
adc
nop
mov
enter
pop
xchg
stc
pop
pop
in
shll
es
push
mov
xchg
add
xchg
nop
pop
adc
sub
push
inc
imul
in
movsl
icebp
je
add
push
sarl
cmp
sbb
mov
push
js
cld
mov
mov
mov
in
mov
add
cs
pop
push
add
rsqrtps
jl
cmc
add
xor
call
dec
adc
cli
mov
and
clc
xchg
sub
dec
jb
daa
xlat
aad
enter
add
stos
jmp
out
sub
xchg
mov
call
dec
aas
stc
mov
sub
push
or
ljmp
push
dec
mov
push
cli
sub
mov
xlat
bound
lret
scas
icebp
mov
dec
pop
push
sti
sub
addl
xlat
lahf
dec
shrb
xchg
loopne
sbb
pop
push
and
bound
xchg
inc
sbb
ret
nop
or
pop
fdivrl
and
mov
pop
xor
je
adc
sub
push
add
mov
lahf
mov
adc
decb
pop
loop
add
insb
ja
jmp
shll
add
add
xor
out
adc
pop
add
scas
adc
add
aaa
lods
adc
rep
and
movsb
add
or
and
xchg
ljmp
add
adc
xchg
out
add
in
mov
aaa
leave
xor
or
sbb
push
pop
pusha
fstps
out
insb
insl
or
xchg
pop
jno
cmp
pop
adc
sub
flds
inc
dec
jecxz
clc
icebp
dec
dec
scas
jp
sbb
cmpl
popf
jl
pop
adc
add
sbb
clc
lret
aaa
fs
adc
add
enter
add
in
pinsrw
cmp
cmp
pop
or
inc
or
pop
add
jp
sub
pop
push
and
add
fsubrs
sub
xor
sbb
or
decl
aas
clc
dec
subb
pop
mov
mov
sub
mov
and
clc
jo
xchg
aad
movb
mov
mov
dec
imul
ret
jno
nop
or
in
shrb
movsb
dec
xchg
incb
cmc
xchg
add
xor
jns
cmc
dec
out
shl
jg
add
call
and
adc
call
xor
out
sub
inc
scas
cld
adc
or
mov
xchg
cli
pop
bsf
and
rcrl
enter
popa
stc
or
ds
dec
cmp
je
jmp
lret
push
jnp
ror
and
add
aas
dec
fldt
setae
fists
sar
enter
add
xor
add
xor
add
xchg
sub
mov
or
testl
and
mov
push
sbb
inc
add
sbb
and
ljmp
add
fdivrl
and
add
jmp
mov
aaa
movsl
out
add
pop
mov
sbb
orb
xor
lret
add
out
and
pop
and
push
add
jmp
push
mov
and
insl
jb
aaa
inc
adc
inc
push
adc
sub
mov
add
dec
xor
xor
outsl
or
pop
sbb
les
sub
add
cmpsb
fmull
movsb
adc
mov
lds
pop
adc
push
and
scas
mov
in
or
mov
or
add
repnz
daa
mov
xchg
adc
pop
fdivrs
mov
jno
push
pop
cmp
mov
cmp
das
mov
add
push
test
and
icebp
sub
subl
outsb
mov
or
mov
jo
cmp
xor
inc
call
daa
push
and
repnz
lret
cmp
add
call
and
add
aaa
mov
in
sbbb
sbb
movsb
cmpsb
cmp
repnz
jg
fiaddl
cmp
jmp
stos
lods
clc
xchg
in
push
lret
jge
sub
pop
and
shlb
bound
and
xchg
shl
adc
mov
mov
inc
or
test
js
xchg
cmp
cmp
mov
jo
push
lahf
aas
xchg
sbb
call
and
out
fs
add
xchg
aas
str
cmp
jmp
push
and
jg
pop
mov
inc
mov
adc
jecxz
loop
pop
and
sbb
repnz
mov
xchg
add
inc
loope
add
and
out
stc
cmp
mov
and
and
mov
lock
jno
push
popa
lock
mov
mov
push
lock
add
xchg
xor
lcall
lock
lret
pusha
in
pop
sub
das
sbb
and
test
adc
icebp
ljmp
jnp
testl
jmp
jl
add
nop
jns
dec
rorb
icebp
jle
incb
mov
fcomip
cld
add
lea
lods
shrb
and
push
repnz
je
sbb
cvtpi2ps
push
mov
adc
movsl
mov
sub
andb
mov
daa
loopne
aaa
xor
add
ja
rorl
fimull
test
repz
inc
mov
pop
insl
bound
jno
mov
or
pop
ds
js
in
jmp
mov
jnp
pop
xlat
pushf
jns
dec
mov
mov
sub
add
cmp
mov
adc
mov
pop
pop
jge
jge
bound
sbb
sub
inc
rcrb
hlt
adc
pop
addb
xor
mov
mov
rolb
xor
je
push
and
std
hlt
pop
push
pusha
repnz
in
pop
in
xchg
hlt
lcall
cmc
pop
out
push
and
add
jns
lret
push
dec
add
cs
and
addb
jo,pt
add
adc
push
pop
adc
xor
add
lret
fsubl
movsl
add
mov
sti
or
enter
call
loope
testl
xor
and
inc
jle
psrlw
decl
adcb
loop
jle
rcll
test
inc
xchg
sub
push
jmp
cmp
jns
daa
dec
fmuls
fidivrl
cwtl
ja
test
ret
push
or
dec
cld
adc
mov
pop
xchg
jecxz
out
cmpl
mov
cmp
inc
or
add
fldl
add
lahf
rclb
stc
add
dec
cmpb
jmp
xrelease
add
jns
out
pop
pop
jnp
add
cmp
cmp
stos
ret
andl
inc
adc
cli
add
stos
loope
lds
jae
add
imul
dec
mov
cltd
inc
jmp
push
adc
push
add
daa
pop
jnp
mov
xlat
cmp
test
sti
clc
pop
not
add
call
in
leave
sub
adc
mov
push
and
out
push
add
inc
nop
jne
sub
sti
inc
iret
call
mov
test
dec
jnp
jnp
cs
inc
cmp
inc
cld
icebp
push
push
jp
jle
pop
test
mov
or
jmp
aas
jle
fcoml
pop
bound
jmp
jnp
cmpsb
inc
ret
add
cmp
cmc
stc
pop
xchg
out
add
rclb
mulb
lcall
add
out
sahf
xor
das
cmp
pop
lahf
add
lock
mov
movsl
stc
jo
ret
out
push
adc
loop
sub
push
pop
add
pop
fmulp
mov
test
dec
cmp
lods
ds
push
mov
lahf
loope
jl
mov
jl
mov
jge
add
mov
xchg
js
push
adc
cmp
incl
in
add
daa
pushl
ficomps
cli
push
ja
clc
add
test
stos
sub
enter
add
movsb
jg
xor
addl
adc
add
inc
mov
sbb
jmp
ret
dec
push
movsb
pop
adc
or
jns
pusha
in
push
jecxz
mov
jo
push
cmp
popa
pushf
push
mov
push
adcb
xor
add
add
mov
ss
mov
mov
gs
das
sub
enter
lock
scas
pop
daa
cmp
push
addb
push
inc
enter
shrl
push
sbb
into
movsb
and
adc
mov
out
test
add
mov
into
add
or
dec
inc
ficompl
add
or
shrb
lock
fiadds
imull
sti
xor
xchg
mov
jle
dec
add
and
repnz
addb
add
push
or
cmpsl
int
push
inc
xor
xor
cmp
aad
add
or
xor
add
sub
xor
add
ja
jnp
add
mov
push
stos
fs
pusha
mov
and
sub
cmp
test
mov
test
jecxz
cmp
xor
cli
jo
push
add
sbb
mov
xchg
into
cld
lods
sbb
jns
lret
testl
stos
and
add
mov
sbb
repnz
fs
ds
nop
dec
add
dec
jle
push
lods
add
stos
clc
in
add
cmc
or
cli
mov
testb
lret
hlt
int3
adc
pusha
cs
add
mov
fs
ss
add
stc
pushf
mov
lock
insb
sbb
add
push
mov
add
xchg
cmp
repz
test
pop
in
nop
bound
mov
ds
cltd
jb
push
cli
cld
outsl
jmp
add
xchg
fstl
cwtl
stos
add
pushf
aam
mov
sar
lahf
pop
jmp
xchg
xor
ljmp
lret
rol
icebp
add
push
or
and
outsl
add
sub
lret
xorb
pop
cmp
xchg
cmp
sbb
in
push
add
add
mov
mov
or
stos
adc
adc
sub
sarb
dec
jmp
bound
add
enter
imul
xchg
lret
rolb
lods
xor
and
ljmp
ds
std
pop
shl
fs
les
ljmp
cmp
roll
add
pop
inc
mov
cmp
push
dec
mov
add
xchg
outsb
pusha
jne
add
xchg
add
lret
cld
xor
out
add
mov
das
scas
pop
scas
or
or
imul
call
cmc
adc
stos
and
mov
and
sub
add
and
inc
cmp
inc
sbb
cmp
mov
je
mov
add
ret
push
pop
fcomps
mov
pop
fadds
adcb
sbb
mov
mov
mov
add
shll
rcrl
and
out
inc
pusha
call
mov
aad
mov
lock
cld
jno
js
xor
add
popf
mov
insb
fstl
in
or
push
push
sahf
adc
adc
mov
ficomps
jbe
pop
fcompl
pop
ja
pusha
add
pop
inc
push
sub
xchg
movb
and
add
call
mov
xor
add
insb
jbe
call
adc
pop
inc
or
inc
sub
or
dec
shr
add
lret
sarl
push
daa
stos
testl
xchg
sbb
jg
cmp
add
pop
sbb
fsubl
push
ficoms
popf
adc
jmp
cmp
push
add
pop
push
or
rcrb
jl
adc
xor
adc
add
xchg
nop
jo
pusha
sbb
sbb
idivl
shrl
add
cli
aad
add
adc
iret
cmp
sti
adc
jp
test
adc
out
pop
xchg
stc
and
sbb
dec
xchg
inc
insl
rcrb
adc
cld
std
add
call
mov
push
pop
mov
mov
jne
aam
mov
jg
or
sbb
mov
inc
adc
push
lcall
push
data16
add
nop
dec
cmp
icebp
add
mov
push
fs
ljmp
sbb
mov
cmp
rclb
repnz
jne
add
sub
adc
cld
add
cmpsb
aas
pop
pop
mov
clc
jmp
jbe
inc
pushf
insb
dec
add
mov
mov
lods
scas
loopne
sbb
mov
mov
sbb
scas
gs
xchg
add
movzbl
decl
add
sar
testl
sti
fcoms
hlt
inc
lea
pop
cld
fbld
aad
mov
mov
dec
lods
add
mov
mov
push
incb
xor
add
subb
add
push
sub
outsb
das
push
or
popa
adc
xchg
in
xlat
xor
sarb
roll
xchg
jecxz
int
add
push
call
push
clc
cvtps2pi
push
sbbb
je
cmp
lcall
and
mov
or
ljmp
dec
jnp
adc
testl
loopne
cmp
add
fcoml
pop
sub
or
cmpb
fists
outsl
jmp
jno
inc
lods
call
push
pop
mov
push
test
pop
cs
dec
cmc
add
inc
dec
add
stos
jecxz
outsl
rcl
jb
sbb
aaa
mov
add
pop
add
push
pop
push
lahf
mov
mov
dec
add
add
icebp
mov
push
ret
ficoms
xchg
lret
nop
add
sarb
push
add
xchg
add
push
pop
add
cmp
dec
xor
nop
out
xor
sbb
cmp
xor
data16
inc
mov
sub
add
mov
aam
sub
push
pop
push
pop
rorb
lret
push
pop
mov
sub
push
je
insb
sbb
and
test
dec
add
out
jae
mov
stos
sbb
loopne
jmp
aam
lock
jne
jge
add
cmp
dec
mov
mov
sbb
pushl
stos
add
add
and
lret
loopne
mov
dec
jmp
lock
xor
rcrb
inc
adc
xchg
pop
or
mov
jo
inc
add
loop
adc
mov
and
or
dec
in
mov
xchg
or
testl
loope
js
loop
sub
add
cs
daa
add
xchg
rorb
jnp
lret
sub
adc
adcl
push
jno
sbb
or
or
shll
adc
inc
pop
add
dec
int3
dec
push
testb
js
cmpsb
push
jbe
jg
cmp
cltd
addb
aaa
rclb
sub
cli
sub
push
xor
xor
mov
rcrb
or
mov
stos
adc
fmuls
xor
scas
dec
ffreep
sub
clc
mov
lea
push
add
call
ljmp
add
add
je
xchg
add
mov
and
adc
inc
push
stos
push
repnz
pusha
jo
cmpsb
adc
add
mov
stos
cmp
fadds
add
mov
xor
stos
incb
aam
data16
mov
or
pop
lahf
mov
add
out
push
and
imul
add
mov
add
and
push
mov
aas
call
or
popa
inc
lret
add
pop
adc
int
js
cmp
add
add
jle
xchg
pushf
adc
nop
add
inc
adc
cs
shlb
sbb
je
mov
xor
jo
jge
xchg
xchg
add
add
in
or
mov
ret
xchg
enter
add
mov
stos
call
adc
subl
ds
daa
int
xor
insl
adc
cs
pop
lcall
xchg
stc
outsb
and
int
loopne
push
mov
add
or
inc
pop
mov
add
cld
sub
add
xor
lret
add
push
or
jb
add
enter
loop
ret
fadds
ror
adc
push
cmp
xchg
add
push
sub
mov
sbb
and
mov
loopne
add
or
fmuls
mov
imul
je
add
bswap
rcr
loopne
loope
jo
pop
mov
xor
pop
dec
in
add
into
pop
add
pop
movsb
aam
rorb
daa
and
lcall
sbb
ja,pn
shlb
inc
hlt
mov
clc
pop
sbb
pop
roll
adc
sbb
add
sub
pop
stos
dec
mov
add
push
mov
add
cmc
cmpsl
fbld
mov
add
mov
add
mov
add
aas
jae
loopne
es
add
js
pop
add
loope
adc
stc
or
dec
lret
outsb
push
lock
sub
sbb
cltd
cmp
push
std
adcl
in
push
add
ret
sbb
push
sahf
inc
sub
xchg
sbb
lret
imul
adc
insb
dec
pop
pop
lahf
or
mov
or
mov
std
loope
cmp
sbb
adc
xchg
adc
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
add
nop
or
or
and
push
dec
mov
mov
jns
cs
adc
xor
push
add
add
pop
dec
popa
arpl
in
flds
xor
sub
xor
cmp
adc
je
push
nop
xchg
push
xor
or
mov
adc
jp
pusha
pop
adc
and
incl
xor
int3
cld
inc
add
adc
add
mov
andb
or
stos
mov
orb
jnp
popa
add
dec
pop
test
adc
add
das
jb
pop
stos
xchg
outsl
stc
sub
mov
mov
add
bound
std
pop
in
mov
sub
jns
push
jae
jnp
or
jl
jge
insb
push
lahf
imul
mov
loopne
pop
ret
push
stos
lcall
jb
add
xchg
add
lods
into
xchg
rcll
mov
and
add
jmp
nop
add
dec
mov
or
pop
out
pop
daa
sbb
mov
mov
dec
out
fadds
xchg
inc
inc
adc
add
arpl
cmp
jp
and
sbb
push
add
stos
push
pusha
comiss
pop
jb
mov
addr16
es
inc
mov
ficoml
cmpl
repz
pop
rolb
loop
xchg
sub
test
inc
repz
dec
cld
out
enter
add
push
rcrl
je
xchg
test
jo
out
cmp
subl
pop
fwait
test
adc
clc
inc
cld
dec
addb
mov
mov
cltd
sub
sbb
cmp
je
pop
xchg
xor
outsb
pop
and
or
xor
mov
adc
js
pop
sbb
add
add
pop
movsb
sub
sub
sbb
mov
sub
daa
fimull
bound
dec
lea
add
popa
cmpb
jle
pop
inc
cmpsb
xor
mov
sub
mov
jo
ret
rolb
jg
mov
or
sarl
dec
cmp
and
loopne
xor
jecxz
sub
add
jge
insl
je
add
ds
sub
lcall
inc
addl
sub
mov
jns
add
cld
jae
cli
and
es
je
sbb
pop
xchg
and
xchg
gs
clc
lcall
sbb
dec
sti
or
sub
and
adc
ret
mov
push
and
lret
push
add
cmp
sub
dec
jmp
and
mov
adc
add
pop
push
mov
fwait
cli
xorb
popf
cld
stos
int
push
add
xchg
dec
inc
jle
add
mov
mov
lcall
sbb
add
std
or
xchg
enter
mov
mov
sbb
fsubs
pop
cmpsb
addr16
xlat
pop
add
imul
pop
and
sbb
int3
test
dec
ja
or
and
sbb
ljmp
mov
nop
xor
movsl
xor
push
sbb
adc
add
xlat
push
xchg
sub
sbb
andb
js
add
jb
inc
xchg
jae
dec
rclb
or
mov
add
inc
sti
mov
imul
add
pop
pop
jbe
dec
sub
shrb
scas
mov
popa
cmpsl
xor
test
nop
push
add
push
mov
call
sbb
mov
stos
jmp
jp
adc
and
mov
rcrb
pop
popa
xchg
pusha
xchg
add
add
xor
add
outsl
sub
mulb
add
dec
repz
clc
xor
ljmp
jno
stos
sbb
add
mov
sbb
push
mov
and
icebp
int3
adc
fs
mov
das
xchg
lock
add
sub
std
add
iret
jge
add
aam
mov
and
sar
add
js
sahf
dec
les
and
or
sbb
adc
jns
arpl
mov
imul
andb
push
push
bnd
mov
xchg
pusha
push
out
jmp
add
adc
es
pop
pop
xchg
cmp
and
add
add
daa
adc
insl
cmpsb
inc
and
pop
js
mov
fimull
xchg
mov
pusha
and
js
pop
inc
mov
mov
aas
cmpl
mov
add
out
movsl
and
mov
add
lahf
adc
add
lret
mov
add
or
add
gs
sbbb
xchg
add
int
push
daa
iret
sbb
cmp
rcll
pop
pushf
test
and
add
inc
xor
jns
xor
pop
add
xchg
add
lahf
popa
pop
ret
and
test
cli
es
pop
inc
mov
sbb
popl
jge
psrld
or
dec
adc
fcmove
push
pop
mov
adc
xchg
push
adc
mov
xor
sub
sbb
popa
and
add
ficompl
xchg
mov
cmp
mov
adc
daa
add
dec
aaa
pop
mov
lods
add
adc
push
pop
movsl
push
push
lahf
cltd
jb
arpl
inc
sub
mov
add
push
shlb
pusha
pop
je
and
inc
shlb
pop
cmpsl
pop
insl
movsb
jo
cmp
cmp
add
push
shlb
cmp
jae
xorb
adc
cmp
jnp
mov
jmp
xor
popa
or
sbb
pop
rclb
and
lret
add
enter
xchg
call
add
sub
fs
data16
add
ss
push
add
xchg
lock
into
clc
cmp
mov
pusha
cs
and
nop
push
psubsw
orb
arpl
add
sub
jb
add
add
aas
and
ds
mov
push
lea
add
push
ljmp
lahf
adc
push
or
sbb
aaa
mov
adc
pop
std
das
add
repnz
mov
and
inc
add
adc
add
lock
jnp
in
push
jl
mov
sbb
int
xchg
xor
popf
add
mov
jg
loopne
sub
jo
subb
out
fcomp
dec
rcl
aaa
sub
add
add
jp
movsl
js
cmp
mov
bnd
xchg
adc
add
clc
xchg
movsl
or
ljmp
add
stc
add
lds
and
dec
daa
cmp
lods
hlt
push
push
ss
jo
or
mov
inc
pop
jmp
jne
mov
adc
add
jmp
jns
call
flds
inc
push
jmp
add
add
filds
data16
or
ss
push
testb
les
pop
jle
pop
add
mov
popf
lds
mov
adc
and
test
sub
jb
add
xor
sbb
inc
enter
add
cli
cmp
mov
jg
movsb
imul
add
cwtl
cmp
loopne
in
je
jge
sbb
insb
mov
mov
pop
test
incb
psubsb
addl
repnz
jne
fsubs
arpl
test
sbb
jg
iret
aas
inc
mov
adc
aad
jp
aad
movsl
cmp
push
add
mov
cmp
push
cmc
incl
xor
fiadds
popl
adc
sbb
pop
add
clc
xorl
iret
pusha
mov
adc
jb
testb
add
and
mov
push
xlat
mov
add
stc
push
lods
sbb
add
lret
loope
add
fmull
push
clc
std
dec
test
ljmp
pop
cltd
push
cld
adc
lahf
xchg
addl
outsb
xor
add
call
cmpsl
stos
loop
popa
ret
jle
or
jne
pop
pop
pop
push
push
mov
and
roll
sub
nop
incb
add
sbb
dec
movsb
cmp
adc
and
movsl
add
adc
add
pop
mov
jmp
add
sbb
fs
push
dec
add
test
mov
sbb
sar
dec
data16
push
adc
jns
sub
sbb
sub
rolb
movl
insb
adc
add
jne
add
je
shl
nop
xor
int
jecxz
cmp
rolb
test
jne
and
aad
sahf
call
adc
ss
mov
sub
jp
loop
xor
aas
lock
sbb
pusha
fmul
inc
negb
mov
mov
or
cmp
push
shr
cli
add
mov
shrb
xor
and
push
and
mov
iret
mov
push
and
fldenv
and
xchg
setl
adcl
push
movsl
cld
bound
test
add
cltd
add
sbb
cmp
inc
pop
ret
xor
pop
sbb
or
addb
cmp
femms
test
dec
or
jmp
adc
pop
push
sub
in
enter
pushl
sub
push
jo
push
mov
adc
push
xor
push
or
mov
adc
add
inc
lret
inc
rolb
out
nop
outsl
or
inc
daa
pop
cmp
push
push
das
push
add
mov
movsl
aad
rolb
jne
mov
xchg
test
sub
and
imul
lret
test
popf
loopne
push
pop
call
add
ret
jmp
add
mov
sbb
in
push
fsubrl
push
add
cltd
dec
and
js
push
push
pop
ret
fst
sbb
into
xchg
sarb
loop
xor
ja
jbe
cwtl
jo
cmp
xchg
ret
or
lea
fcoms
mov
cmp
sbb
sahf
pop
add
mov
push
lock
add
jbe
jno
addr16
popa
lds
je
pop
into
jg
inc
inc
add
clc
dec
push
jbe
or
inc
push
or
jb
push
jae,pn
arpl
outsl
add
sbb
inc
push
clc
cmp
imul
cmp
dec
jb
add
arpl
push
popa
add
mov
movq
insl
popa
jb
pusha
inc
add
icebp
or
mov
add
jno
dec
add
imul
addr16
jmp
shlb
lahf
push
or
popa
mov
xor
movsl
jb
inc
popf
rclb
add
arpl
pushf
ja
push
add
insl
data16
test
lock
add
jo
popa
push
bound
js
pop
cmp
mov
add
ret
movb
dec
sbb
ja
arpl
add
inc
push
cmp
mov
lock
jbe
mov
rcrl
xor
or
ret
add
adc
inc
dec
adc
ja
stos
push
add
inc
inc
pop
rclb
add
dec
push
cli
or
adc
pop
and
pusha
and
daa
jge
adc
inc
insl
push
add
mov
shrl
mov
xchg
jecxz
nop
out
idivb
sar
and
add
or
add
push
xlat
jb
adc
add
cmc
leave
sub
add
mov
out
and
pop
push
mov
pop
lret
pop
sbb
fsubrl
push
sbb
sub
sub
add
mov
or
sub
mov
aaa
add
xor
jne
add
pop
sub
lea
dec
add
or
add
sub
push
aas
test
pop
pop
aas
add
inc
std
loopne
mov
dec
jns
arpl
ret
das
roll
es
pop
dec
mov
loopne
ja
sbb
lret
jno
cmpb
or
or
sbb
mov
inc
sub
lods
xchg
add
dec
jne
xchg
push
test
fs
out
mov
clc
in
and
inc
imull
or
xchg
jge
cmp
lret
mov
add
dec
leave
roll
push
push
add
xor
add
shrb
inc
cs
jo
add
clc
push
add
jmp
inc
adc
and
add
add
jmp
inc
mov
sbb
add
or
pop
add
fsubrl
push
sbb
cwtl
cmpsb
xchg
add
sbb
xor
add
in
dec
or
pop
jae
add
cmp
xor
sbb
loope
mov
popf
fiadds
nop
push
jg
ss
push
ret
jmp
sbb
out
jo
jle
add
push
inc
test
scas
mov
xchg
xchg
ret
mov
cli
jne
add
hlt
mov
aad
clc
jg
add
dec
push
ret
sub
add
pop
dec
cli
mov
add
cld
or
jp
outsb
mov
push
pusha
insl
add
incb
lcall
inc
mov
pop
xor
andb
pop
shlb
or
sbb
adc
sbb
std
add
cltd
aas
test
or
icebp
loopne
cwtl
pop
adc
stc
mov
push
jge
scas
mov
stc
into
xor
and
sahf
fwait
xor
subl
inc
sub
jp
mov
xor
push
iret
sub
jecxz
dec
mov
movsb
loope
je
cmp
add
or
jmp
loopne
sti
add
inc
movsb
dec
out
adc
cmp
lahf
add
mov
cs
call
xor
or
sbb
xchg
adc
imul
aad
fs
int3
jae
inc
sbb
and
push
out
mov
push
loopne
dec
xchg
add
add
cmp
cmp
test
cmpb
mov
aas
dec
aad
jmp
cmpsb
cwtl
dec
mov
add
test
add
enter
lods
pop
pop
adc
or
and
mov
test
add
push
mov
and
ficompl
or
add
mov
adc
fsubrl
inc
clc
pop
inc
add
push
mov
adc
push
hlt
and
add
incw
jecxz
add
and
pop
lahf
add
cmpsl
aad
cmp
jp
sets
push
pop
add
inc
stos
add
add
xlat
mov
pop
in
add
add
xor
shrb
add
or
add
ljmp
add
cmp
rcrb
inc
push
jp
pop
incb
and
push
pop
fdivrs
divl
mov
subb
mov
and
shll
lret
sub
lahf
nop
adc
add
xchg
pop
mov
cmp
lock
pop
jnp
add
and
shl
sub
cmp
ret
push
call
or
push
loop
in
dec
add
sub
jns
push
pop
repnz
fwait
cmpsl
movsl
cmp
dec
push
and
adc
shrb
subb
push
dec
mov
rorl
and
dec
and
xor
jo
inc
loopne
dec
sub
pop
dec
jg
je
xchg
insb
add
adc
sub
mov
ljmp
mov
xor
ds
or
cmp
fwait
mov
inc
sub
add
add
push
push
xchg
add
mov
bound
jne
addr16
jb
popa
js
sbb
stc
lahf
fs
cmp
ljmp
out
adc
jl
push
faddl
shlb
push
cltd
push
inc
bound
lahf
jb
mov
adc
add
mov
xor
jo
add
sbb
add
inc
aam
add
shr
pop
and
je
push
xor
add
clc
rorb
sahf
push
inc
add
inc
xorb
sub
setge
cmpsl
arpl
sbb
or
cmpb
jp
sub
test
push
pop
push
adcb
and
mov
mov
imul
sub
cmp
add
rolb
stos
cmp
inc
pop
cmp
add
js
add
xchg
test
jle
jbe
lea
add
xor
mov
popf
and
mov
mov
sbb
cmp
push
orb
mov
jmp
xchg
lcall
pop
add
inc
push
jmp
cli
or
or
into
dec
and
jge
pop
clc
enter
nop
cmp
add
and
sbb
add
xor
adc
fsubs
pop
call
jmp
add
nop
loop
mov
pop
add
sub
pop
insl
pop
fwait
add
jnp
sbb
pop
cmpsl
hlt
icebp
dec
bound
or
inc
push
xchg
hlt
or
xor
jmp
jp
fmuls
inc
ds
lahf
andb
aaa
add
add
cmp
repz
mov
hlt
mov
sub
lret
pop
xor
inc
test
loopne
aaa
dec
add
add
push
jg
xor
sbb
pop
rolb
out
or
push
jne
add
xor
dec
lea
paddb
repnz
jmp
and
mov
push
lret
or
gs
sbb
lds
adc
xor
dec
addl
pusha
and
pop
cmp
xchg
loopne
loopne
adc
rcrb
or
call
push
pushf
add
push
or
xchg
jl
add
push
mov
cld
outsb
fdivs
add
inc
mov
pop
dec
mov
imul
jg
arpl
push
add
cmpsl
pop
add
push
popa
imul
dec
mov
or
mov
add
inc
in
or
and
add
sbb
int
daa
fstl
and
add
add
je
xlat
adc
scas
add
push
mov
add
pop
pusha
dec
pop
mov
add
call
xchg
addr16
cli
push
cmpsb
mov
lock
dec
nop
mov
xor
scas
sub
frstor
dec
and
stos
add
adc
cs
repnz
je
and
jae
push
insb
ds
cmp
cmp
jb
cmpb
syscall
add
xlat
pop
dec
add
and
dec
inc
out
xchg
add
faddl
sub
sbb
leave
addl
sub
sub
mov
xchg
insl
add
lahf
xchg
cmc
or
inc
jge
add
xchg
popa
inc
incb
outsb
add
and
inc
lods
mov
vmread
clc
rolb
mov
cmc
push
jno
in
inc
lret
mov
inc
sti
add
mov
and
cmp
mov
jo
lcall
inc
add
ret
or
mov
dec
and
pop
jno
cld
dec
add
pop
adc
packuswb
jp
add
push
test
xlat
add
inc
pop
sub
stos
imul
pmaxub
inc
arpl
sub
js
jns
add
push
xor
xor
lods
pop
pop
push
rorl
shr
pop
mov
movsb
xor
add
mov
jo
xchg
call
inc
sub
push
or
inc
repz
lea
add
pop
xor
mov
movsb
and
and
jmp
adc
lds
les
out
movsl
repz
sbb
mov
and
add
adc
push
add
cmp
sub
mull
add
mov
lret
aas
aam
orb
adc
fcmovne
jne
jmp
push
es
cld
sub
testl
fidivrs
ljmp
add
mov
aam
sub
add
push
jmp
add
add
clc
adc
and
push
ret
push
and
mov
call
mov
cmp
jmp
inc
les
ret
nop
adc
dec
in
or
fs
pop
dec
js
sub
dec
ds
sbb
add
cmpb
or
sub
pop
popa
lods
dec
cld
add
mov
xchg
cmp
test
jne
aad
aas
add
inc
mov
add
xchg
fstps
je
add
add
add
popf
adc
aaa
add
add
xchg
add
jne
xchg
cs
pop
sbb
jo
lahf
push
push
add
push
and
add
mov
sbb
and
xorb
cmp
in
add
or
push
adc
xor
push
hlt
inc
xor
jb
stc
add
dec
lock
add
add
ret
adc
push
or
adc
adc
jp
incl
jmp
push
or
push
scas
add
inc
inc
lret
cmc
inc
xchg
movsb
add
pop
out
push
outsb
push
inc
rclb
mov
enter
cmpsb
movsb
pop
jg
lods
add
cmp
addb
test
pop
sti
mov
jo
test
js
cmp
xlat
lcall
xor
sub
or
cld
add
sahf
scas
jae
jbe
push
xchg
add
daa
pop
sbb
mov
add
les
ror
cli
inc
cvttps2pi
cwtl
pusha
rolb
inc
pop
loope
out
daa
push
repnz
idiv
fsubrl
insb
xor
add
push
mov
sub
bnd
ljmp
sbb
jle
in
nop
insl
add
push
mov
js
add
out
inc
daa
enter
xsavec
push
sub
sbb
add
lret
lods
add
or
in
mov
xor
aaa
push
adc
add
and
push
cmp
pop
add
inc
fbld
dec
mov
adc
lcall
andb
rcr
and
jp
das
mov
add
pop
repnz
ljmp
divb
and
ret
cmc
roll
pushf
insb
add
mov
push
pop
add
sbb
push
outsb
test
loope
adc
sbb
dec
or
std
divl
cli
sti
cmc
mov
adc
stos
test
add
push
add
adc
jo
fld
xchg
dec
add
js
pop
sbb
les
movsl
mov
push
pop
dec
and
rcrl
pop
xor
inc
mov
cmp
lods
push
enter
daa
add
nop
roll
jmp
xor
je
inc
lock
mov
popf
xor
and
outsl
push
pop
pop
and
add
or
push
adc
xchg
sub
mov
add
mov
les
dec
inc
jnp
cmp
dec
jb
jne
pop
or
push
add
and
jb
imul
sbb
xor
arpl
sti
jne
fs
outsb
add
je
bound
imull
sahf
daa
movd
mov
cmp
add
imul
pusha
add
dec
inc
inc
fmulp
ja
push
cmp
sbb
inc
fdivrs
cmpb
je
jg
fidivrl
and
pop
leave
jge
mov
add
dec
mov
lea
repz
add
mov
add
sbb
sbb
dec
je
je
andl
jmp
mov
das
ret
add
adc
lret
add
mov
lock
sbb
add
adc
data16
xor
inc
aad
pop
loop
mov
inc
inc
sti
and
pusha
aam
sub
sbb
call
add
add
add
xchg
dec
cli
mov
mov
shr
mov
sbb
and
cwtl
jo
and
invlpg
jg
in
mov
xchg
lret
stos
lret
xor
pop
add
aaa
jl
mov
sub
or
sub
jno
mov
das
lret
add
and
shrb
sub
pop
and
repz
xchg
push
mov
add
cli
and
mov
inc
push
add
inc
fs
jp
in
movsl
add
push
add
mov
inc
jmp
push
mov
xchg
inc
xchg
fdivrs
adc
lret
loop
mov
mov
xchg
push
mov
in
add
inc
int3
inc
mov
cltd
or
jg
cld
add
adc
sbb
cwtl
ljmp
adc
cmp
inc
add
mov
push
inc
add
adc
dec
sub
lcall
out
lea
xchg
iret
add
lret
ds
push
mov
dec
add
enter
dec
cmp
or
mov
jmp
xchg
int3
adc
mov
lcall
or
xchg
int
cs
jmp
nop
or
fs
and
jae
xor
push
add
adc
xchg
add
and
les
add
outsl
dec
or
adc
cs
mov
jmp
ljmp
jns
addb
push
and
pop
sub
fcoml
add
cmp
jnp
pop
mov
adc
stos
lea
add
push
mov
or
or
jp
and
outsb
dec
xor
pop
xchg
daa
aad
adcb
out
add
or
xor
add
jl
xorl
lods
outsb
adc
stc
loop
lds
aaa
aam
test
or
jmp
dec
inc
loope
push
sub
and
sub
das
int
push
mov
adc
adc
cmp
lock
in
and
adc
mov
shrb
jmp
mov
cmp
sbbb
ss
ljmp
dec
test
push
test
add
jecxz
into
daa
cltd
push
push
mov
cmp
add
es
jp
push
int
sbb
enter
xor
cmp
xor
add
movsb
xchg
les
inc
xor
call
and
push
pop
add
xchg
mov
adc
lods
add
clc
notl
inc
pop
fisubrl
cmp
subl
fstps
add
jne
push
or
lea
incl
lret
sub
popa
add
aam
mov
les
or
xor
aaa
or
movsb
lahf
cmp
andb
ja
xor
sub
pop
pop
icebp
test
jnp
xor
pop
and
in
add
out
cmpsb
notb
cld
jo
add
movsl
xor
iret
or
enter
addb
cltd
aad
sbb
insl
push
adc
xlat
add
dec
mov
adc
push
call
add
into
repnz
mov
mov
push
add
pusha
ds
pop
subb
movsl
dec
adc
inc
cmp
mov
shll
mov
add
fs
lock
xor
aam
cwtl
sbb
lock
jle
dec
notb
cmp
xchg
lcall
and
mov
iret
pushf
add
rorb
scas
adc
sbb
xor
decl
test
ja
aam
inc
add
int3
add
inc
lods
mov
push
push
jo
mov
adc
sbb
mov
cmp
and
cmpl
add
xchg
and
in
sbb
add
xor
pop
sub
fistps
push
mov
shll
xchg
and
scas
incb
cltd
enter
add
sbb
jb
stc
xchg
add
jg
adc
in
sbb
sbb
dec
add
cmp
hlt
out
imul
jle
add
push
adc
xor
cmpsb
or
jbe
pushf
add
sbb
cmp
mov
mov
aad
cld
pop
cmp
pop
xchg
add
push
setp
ret
add
cmp
mov
mov
repnz
push
lea
popf
loope
xor
pop
pop
leave
add
adc
shl
pushf
add
data16
sbb
test
jb
insb
jmp
jbe
add
xchg
addb
xor
pop
clc
pop
jbe
jne
fdivs
add
lock
ja
decb
das
ret
jb
or
jmp
addb
jne
and
add
data16
adc
fisttpll
rcll
sub
add
mov
add
jmp
push
pop
jae
mov
loopne
add
mov
xchg
shll
lods
lock
add
mov
ret
push
add
out
jecxz
pop
dec
mov
push
clc
xlat
adc
inc
jmp
mov
and
lods
push
cli
sbb
pop
xchg
arpl
jne
adc
inc
pop
mov
gs
add
in
inc
push
pop
cmp
testb
adc
stos
cmp
lock
das
dec
and
and
imul
cmp
or
leave
or
sub
adc
cld
add
popa
mov
rclb
jp
push
adc
orb
sub
or
cmp
adc
rolb
mov
popa
call
pop
push
or
inc
add
fs
bound
inc
xor
jns
sub
js
add
rcrb
and
mov
movsb
mov
jbe
add
fs
or
sub
add
popf
dec
add
jo
xchg
fistl
add
aam
sbb
and
leave
cs
movsb
addb
xor
add
mov
xor
cmp
jne
mov
jp
jge
push
paddsw
ja
xor
add
jnp
sbb
pop
decl
jne
subb
push
add
insl
mov
cmp
jmp
dec
cld
shlb
dec
iret
cltd
or
push
nop
xorb
mov
push
mov
mov
incb
test
pop
stos
pusha
adc
ja
add
mov
add
mov
sti
je
add
push
jbe
stos
mov
adc
imul
inc
mov
fsub
or
mov
sbb
mov
and
push
pop
add
stos
push
subb
es
cs
xchg
hlt
outsl
push
sub
les
sbb
pop
test
je
testl
dec
std
mov
sbb
nop
aad
add
pop
or
push
aas
mov
push
add
sbb
xor
loopne
add
jecxz
scas
push
xorb
movb
dec
xchg
mov
adc
add
ror
pop
jg
test
inc
xlat
xchg
dec
gs
out
mov
xor
leave
adc
mov
fmull
mov
or
ja
xor
and
popf
push
add
dec
cmp
lea
jne
test
xor
cmp
movsb
add
and
add
cmc
inc
push
jmp
mov
mov
add
push
jbe
rolb
add
mov
cli
push
nop
and
sbb
fidivrl
push
sub
or
mov
dec
in
sub
cmp
pop
mov
pop
add
cmp
fnstenv
and
jp
add
push
sub
in
add
stos
jp
es
pop
xchg
cmp
dec
lahf
aaa
rol
loope
cmp
jno
loopne
or
push
jne
xchg
add
loopne
add
lret
and
rorl
xorl
pushf
ds
jbe
add
loop
mov
rorl
add
fiaddl
ret
fsubs
mov
add
cli
aas
jne
nop
fstpt
cld
inc
push
les
out
sub
jo
or
cmp
pop
sbb
fcoml
add
fs
outsl
ja
jl
mov
cmp
add
dec
daa
push
pop
push
dec
mov
and
pusha
push
sbb
iret
dec
add
xor
add
adc
lret
loopne
test
cmp
subb
or
arpl
out
movsl
sbb
pop
adcb
hlt
scas
jne
test
je
cs
clc
ljmp
fldl
out
hlt
push
push
pushf
add
mov
sub
das
in
shrb
aad
daa
add
stos
sbb
or
pop
cmp
and
add
sahf
idivw
pop
add
cmp
mov
add
or
lds
bound
push
xchg
push
rcrb
and
sbb
aaa
pop
pop
mov
cmpb
addr16
ljmp
jo
jne
popf
adc
mov
in
in
push
add
fldt
in
add
icebp
mov
lret
xchg
in
mov
adc
insb
add
pop
test
popa
popf
fidivs
add
icebp
push
sbb
and
dec
sbb
xor
mov
dec
cs
xor
cld
dec
add
lock
insl
addr16
add
dec
je
add
xor
adcl
outsl
pop
add
sub
mov
or
iret
xor
add
mov
add
call
xchg
mov
mov
add
jle
jns
cmpl
out
mov
add
push
add
mov
lock
call
rcll
or
xor
rol
or
daa
push
sub
add
cmp
stos
test
cs
or
jl
jo
jnp
jge
xacquire
sbb
sbb
mov
orl
mov
xor
add
and
add
ret
cmc
stos
add
nop
mov
pop
inc
jle
jae
pusha
cld
pop
pushf
push
mov
mov
outsl
mov
in
push
pop
sbb
cmp
adc
aaa
je
lahf
pusha
sub
adc
xor
sub
jecxz
dec
add
loop
add
jge
call
mov
enter
gs
push
mov
add
jne
pop
leavew
das
add
and
cli
add
test
jnp
sbb
clc
rol
sbb
xchg
inc
cmp
pop
and
pop
cltd
xor
mov
xchg
sbb
sub
add
jp
aam
dec
call
fildl
pop
nop
fdivrp
push
sub
icebp
ja
mov
dec
ret
lods
add
js
mov
cwtl
cmc
add
push
cltd
mov
mov
adc
ret
les
inc
fsubrs
or
add
pushf
imul
leave
test
xchg
loopne
mov
jne
arpl
mov
pop
pushf
das
adc
jg
clc
insl
pop
sbb
cmp
add
cmp
sub
push
aas
mov
adc
leave
dec
pop
add
inc
jae
push
cmp
push
movsl
push
sbb
or
push
hlt
es
inc
dec
dec
mov
mov
and
jge
pop
add
jno
je
or
ja
addl
mov
push
out
shlb
movb
jo
inc
aaa
dec
mov
adc
xchg
cmp
sar
in
vpshufd
mov
jmp
movsb
sbb
pushf
ja
or
or
jle
mov
push
xchg
adc
pop
scas
es
femms
cwtl
in
loopne
mov
fs
lock
and
sbb
adc
dec
mov
lds
idivb
lods
in
out
loopne
mov
test
push
ja
subb
fisttps
mov
xchg
add
sarl
lock
pop
cwtl
sbb
adc
sub
inc
xor
cmp
fwait
or
mov
push
outsl
jb
imul
fstpl
je
lahf
sbb
out
cmp
pop
inc
fs
popa
pop
outsb
sub
add
aas
outsl
insl
jp
add
imul
dec
shll
mov
sub
sbb
mov
add
outsb
pop
xchg
ja
mov
repz
mov
add
jb
mov
pop
shrb
and
mov
cmp
add
inc
movzwl
loop
loopne
and
pop
pop
add
push
sub
leave
dec
and
clc
xchg
imull
imul
fs
cmp
add
mov
adc
xlat
int
pop
in
cmp
cmp
push
sub
fisttpll
repnz
sub
and
jbe
cmc
xor
push
lock
pop
add
mov
lahf
ds
sbb
pop
push
test
xor
orb
jle
add
in
xlat
push
jge
jnp
adcb
cmc
in
faddl
ret
call
aas
idiv
mov
movb
addb
cmpb
dec
cltd
rcll
jae
jne
loopne
pop
call
lock
dec
adcb
push
or
xchg
rolb
xchg
pushf
je
add
mov
or
push
mov
loopne
mov
xor
movsl
ret
mov
lea
sub
idiv
sbb
loope
mov
cmp
push
mov
mov
sbb
jmp
add
inc
inc
or
cli
out
jne
cmpb
outsb
rdtsc
jg
and
sets
pop
add
shlb
push
les
movsl
flds
xchg
inc
faddl
add
rorb
aam
into
daa
add
xchg
adc
test
or
jle
add
rclb
jbe
add
jb
mov
js
xchg
out
in
nop
mov
inc
fwait
addr16
add
stos
cmc
or
cltd
sbb
test
sbb
mov
in
arpl
test
mov
hlt
inc
jne
jmp
mov
aam
dec
pushl
add
mov
pop
add
stos
icebp
cmpb
add
pop
sub
mov
hlt
sub
bound
mov
notb
int
add
fisttps
mov
push
add
jg
or
ja
add
xor
and
fcompl
sbb
xchg
enter
pop
call
icebp
imul
jns
loope
and
movsb
fistpll
push
cltd
push
loopne
cwtl
inc
push
addb
fdivs
mov
movhps
or
pop
mov
rol
add
adc
fwait
dec
in
inc
pop
sub
pop
jne
cmp
repz
lock
mov
adc
aas
add
mov
jne
in
inc
cmc
xor
xchg
xchg
add
sub
roll
imul
dec
addb
jp
mov
mov
aad
rcrb
popa
fs
add
fcompl
in
add
lock
cli
aas
push
jl
jmp
inc
notl
das
out
lock
stc
pop
push
add
or
add
cli
add
mov
jno
bound
incl
sbb
push
test
push
or
mov
call
push
lret
jp
push
fildl
popf
out
ds
add
testb
add
inc
adcb
or
fs
insb
pop
repnz
xor
lock
ljmp
outsb
mov
scas
add
stos
adc
lea
stc
mov
push
jl
add
adc
pop
sub
or
inc
cmp
inc
mov
push
mov
pusha
push
dec
push
jp
cmpb
add
roll
sbb
add
adc
add
pop
loope
aam
sahf
add
lahf
call
int3
add
orb
add
enter
orl
or
adc
or
cs
add
and
inc
nop
add
clc
lea
xchg
xor
or
leave
adc
xchg
or
xor
push
sbb
movsl
and
sub
jnp
add
mov
xor
jmp
mov
jnp
jge
add
pusha
test
jle
addr16
shl
lods
and
add
sbb
or
add
in
inc
push
jp
or
or
mov
add
pop
lock
insl
mov
add
mov
xchg
fadds
sub
add
push
cmp
out
jg
adc
cmp
add
push
fcompl
ficoms
jmp
cwtl
pop
mov
pop
pop
sub
push
rolb
push
hlt
loop
loopne
nop
insl
pop
jl
jp
push
push
nopl
sub
add
pop
gs
cmp
add
int3
adc
rep
lods
add
dec
stos
out
dec
push
inc
ss
imul
bound
pusha
int
sub
call
popa
and
xor
loop
pop
addb
sub
inc
dec
and
in
js
sub
xchg
pop
mov
and
lock
lret
pop
jl
push
or
mov
dec
mov
adc
push
or
and
xor
and
shl
lods
mov
mov
lret
push
add
cmc
sub
bnd
add
push
jb
andb
popa
arpl
imul
inc
outsb
push
movsb
xchg
sbb
xor
pop
sbb
imul
in
xor
xor
cmp
add
sub
outsb
add
jnp
aam
jo
jmp
xor
dec
fldt
cmpsl
les
push
add
sub
add
and
int3
xor
add
int
add
lods
add
push
ficoms
rorb
ret
push
nop
js
add
or
xchg
or
test
jo
testb
inc
pushf
jno
lea
dec
add
mov
jecxz
add
jmp
lea
repz
addb
sub
add
je
or
ljmp
dec
mov
and
sub
mov
ret
xor
fs
jns
add
cltd
in
add
push
inc
jns
xor
jg
nop
or
dec
mov
in
popa
es
pop
or
xor
sbb
sbb
dec
pop
jo
les
add
xchg
arpl
mov
lods
adcb
mov
ljmp
cmc
or
loopne
add
adc
add
pop
push
pop
push
ljmp
mov
jb
loop
inc
push
jp
addb
and
cli
or
cs
roll
push
dec
and
addb
inc
addr16
add
add
sbb
push
in
jne
adc
nop
mov
fcoms
inc
test
enter
inc
call
push
xchg
lods
xchg
dec
sbbb
push
mov
add
push
sub
or
xor
inc
sub
rcl
xor
xor
in
aas
add
xor
icebp
es
test
cmp
fld
and
xor
mov
xor
inc
push
outsb
imul
xor
and
rolb
hlt
push
xor
jo
cli
les
mov
jns
pop
push
or
or
cld
cwtl
add
push
jb
popa
outsb
jae
add
mov
jl
jnp
in
push
xchg
xor
popf
or
or
stos
add
pop
sbb
cmc
cld
movsl
add
test
xchg
inc
adcb
les
add
bnd
add
pop
sub
addb
test
mov
inc
lds
push
add
push
enter
add
stos
js
test
add
jp
add
xchg
shlb
movsb
cmp
dec
xchg
cmpl
jne
sbb
jp
dec
inc
xchg
sahf
lea
or
adc
jmp
iret
rolb
push
pop
and
xchg
mov
jmp
dec
inc
addps
dec
outsb
js
pop
mov
xchg
sub
add
and
push
add
adc
or
push
loope
std
rclb
xchg
mov
mov
sbb
dec
js
mov
cmp
add
mov
pop
adc
hlt
adc
incb
and
add
inc
jae
lock
cld
filds
je
mov
push
in
lret
mov
flds
sbb
pop
push
jg
jns
adc
add
mov
mov
das
mov
callw
test
adc
sbb
fiaddl
add
xor
andb
insl
cmp
jmp
cltd
jle
fildl
adcb
lahf
fisubl
stc
aam
sub
aad
movl
mov
in
sub
xchg
cmpsl
push
add
dec
mov
inc
adc
pop
pop
cmpsb
test
stos
jo
mov
sub
ret
add
out
push
push
inc
pusha
xlat
ret
lret
addl
mov
cmpsb
dec
fs
fwait
lar
stos
and
push
mov
ss
cmpsb
and
fnstenv
sub
addb
cvtpi2ps
ficomps
adc
stos
in
pop
fs
pop
sbb
sbb
cwtl
test
ret
daa
mov
dec
mov
add
pop
lea
cmpsl
add
push
jmp
pop
and
inc
inc
and
test
mov
enter
addr16
lea
sbb
push
add
rolb
pusha
rolb
mov
aam
or
in
mov
adc
xchg
mov
lds
mov
add
iret
lahf
hlt
int3
add
cli
xchg
shrb
sbb
sub
sub
ret
aad
enter
cmp
jae
outsb
adc
dec
mov
push
dec
loop
pop
cmp
adc
sar
andl
inc
jne
adc
add
and
mov
add
xchg
add
push
hlt
adc
fsubl
mov
cmpl
push
xchg
add
push
xchg
scas
add
pusha
or
jne
sbb
movsb
std
test
add
pop
mov
mov
mov
xchg
sahf
mov
and
pop
movsl
jmp
add
pop
rorl
add
or
inc
ss
add
jmp
movb
addr16
out
xchg
insl
hlt
inc
push
cld
fs
lahf
sub
pop
pop
cmovns
gs
push
adc
add
jo
sbb
push
add
pop
cmpl
mov
clc
mov
cmovnp
jl
in
loop
push
jne
mov
mov
sub
movsb
push
inc
mov
cwtl
or
xchg
fs
sub
add
lea
add
xchg
stc
loopne
push
movd
shrl
verr
xchg
clc
jnp
out
xor
inc
hlt
incb
push
sub
adc
outsl
add
cld
pop
loope
ja
mov
xchg
or
add
pop
push
pusha
jne
cld
mov
xor
add
and
out
mov
call
inc
dec
in
sbb
adc
jl
pop
ljmp
dec
mov
cwtl
lahf
or
adc
stos
add
movswl
iret
xchg
jg
loopne
lcall
cmp
pop
sarb
add
xor
jbe
and
pop
xchg
mov
and
inc
dec
add
xorl
or
mov
sub
add
andb
ret
aaa
jle
inc
cwtl
mov
inc
pop
xlat
dec
scas
push
inc
jo
push
jb
add
and
daa
xchg
or
je
jne
pop
and
sbb
xor
add
mov
inc
fwait
xlat
sub
jge
add
or
mov
fldt
sahf
add
fdivs
leave
scas
add
mulb
adc
adc
sub
out
add
mov
sti
jnp
das
add
push
xor
clc
and
rorb
or
roll
mov
inc
or
jp
add
pushl
sbb
neg
cmp
pop
ret
nop
ja
in
or
rolb
pop
in
or
ret
rclb
jbe
push
mov
jge
add
mov
cli
addl
or
mov
xor
sub
cli
ret
pop
pop
in
je
icebp
les
mov
add
jne
movb
roll
in
test
sbb
or
xor
cmp
scas
sub
push
ljmp
inc
add
jg
mov
jne
mov
loopne
inc
dec
cmp
hlt
xor
push
cs
lcall
jo
jmp
xor
mov
add
adc
je
das
cmp
jle
subw
dec
arpl
adc
sbb
jo
xchg
rorb
cmp
add
inc
xor
out
dec
test
sbb
pop
incb
invd
xor
loop
push
out
in
out
daa
jae
add
add
je
fcmovne
mov
inc
pop
add
daa
arpl
iret
inc
ja
clc
mov
or
xchg
jge
push
je
add
loop
ret
jg
and
cmp
mov
mov
std
dec
adc
jl
add
inc
jmp
add
mov
enter
les
cmp
push
dec
add
mov
adc
add
sub
mov
add
add
test
xchg
jp
pop
scas
pusha
and
adc
ja
add
push
and
lret
cmc
push
jo
pop
sbb
adc
rclb
push
sub
jb
add
pop
sbb
jle
add
mov
jmp
inc
add
cmpb
jbe
push
push
or
lahf
mov
mov
aas
dec
jb
fcmovb
ss
and
das
push
mov
adc
mov
addb
sub
arpl
pop
adc
stc
cs
jno
mov
push
popa
pop
lahf
fdivrl
and
loopne
push
mov
push
adc
and
dec
mov
sbb
xor
add
cmp
and
push
xchg
adcb
das
hlt
jne
aad
shlb
dec
and
inc
add
idivl
pop
rcl
rolb
jbe
cwtl
mov
stos
add
je,pn
pop
outsl
lods
std
dec
sub
pop
dec
jmp
cmpsb
sbb
pop
mov
shr
pusha
cltd
sub
cmp
sbb
mov
jne
cld
and
add
inc
popf
inc
lret
adcl
loope
add
add
mov
add
dec
jne
js
add
clc
cld
pusha
mov
xchg
cld
adc
lds
cld
add
sub
subl
jbe
add
repnz
push
ss
pop
mov
imul
push
xchg
pop
mov
push
repnz
mov
or
jae
sub
cld
scas
cwtl
push
sbb
add
pop
movl
push
add
jle
sub
loopne
xchg
scas
add
mov
enter
or
inc
add
sbb
push
repnz
xchg
sbb
ficoml
push
xchg
aad
sarb
mov
jno
add
and
out
sbb
jle
call
jnp
jbe
adcl
pop
cld
inc
dec
xchg
loopne
in
call
xor
push
mov
test
push
push
inc
sub
push
jg
adc
rolb
adc
aaa
jb
hlt
add
out
add
pusha
push
cmpsb
movsl
jle,pn
add
insb
movb
adc
sbb
and
jmp
ret
mov
movsb
mov
sbb
and
adcb
fadds
pop
mov
xchg
inc
add
adcl
lahf
enter
mov
popa
in
add
add
out
xchg
pusha
add
push
push
cmp
outsl
ret
cwtl
movb
mov
xchg
push
in
ljmp
pop
xchg
movsb
roll
or
mov
add
sub
dec
ret
cmc
cmp
cmp
addl
add
jne
in
movsl
jg
popa
cmp
std
orb
imul
decb
xor
addr16
js
cwtl
push
add
nop
sub
mov
call
addr16
repz
aas
xchg
loope
fiadds
adc
add
jae
test
xchg
out
lret
lahf
and
xchg
xor
mov
stc
add
push
scas
push
push
xchg
mov
cwtl
mov
jl
or
sbb
xlat
sbb
mov
cwtl
out
hlt
push
add
loop
xchg
adc
add
icebp
or
fildll
pop
push
adc
mov
sub
adc
cmpsl
repz
add
daa
adc
xchg
add
lret
mov
jmp
add
mov
add
rcrb
rcll
mov
cmp
cmp
push
push
repnz
push
adc
mov
mov
daa
cld
rcrb
push
data16
sbb
fmuls
push
mov
js
push
daa
add
xor
add
sti
push
adc
je
jno
mov
jmp
or
and
adc
mov
pop
clc
js
adc
shll
push
pop
jo
adc
dec
inc
dec
or
and
push
jae
cs
push
imul
es
add
jne
gs
les
add
fadd
or
jg
jbe
inc
jle
mov
enter
mov
loope
push
and
adc
jns
enter
daa
cmp
pop
inc
cld
xchg
fldl
and
cltd
jb
fistpl
add
xor
mov
xchg
repz
stos
loop
lcall
push
cmp
jle
add
dec
jnp
or
push
adcb
sub
dec
add
dec
and
push
dec
add
cmp
loop
aaa
xchg
add
clc
fldl
add
cmp
dec
cmp
loop
sub
mov
add
dec
in
mov
hlt
mov
std
xchg
push
inc
in
leave
add
sti
xor
idivb
dec
add
mov
out
movb
enter
ret
loopne
cmp
roll
cmc
mov
es
iret
lea
and
add
jg
into
adc
inc
ja
add
xchg
call
inc
push
in
fmuls
or
insl
sub
pop
fbld
jne
mov
test
sub
cmc
mov
pusha
outsl
sub
xor
jle
jns
das
pop
insb
popa
imul
mov
cmp
add
stos
xor
and
jmp
add
mov
in
lds
adcl
test
push
add
stos
iret
movlps
add
cmp
add
repz
push
mov
dec
loopne
or
inc
leave
outsb
push
mov
jb
add
mov
sub
outsl
dec
daa
add
xchg
mov
int3
sarb
pop
mov
mov
filds
and
xsave
inc
add
adc
cld
push
cld
dec
push
ss
rcr
les
popa
or
jo
fs
pop
lock
out
into
andb
or
add
andb
insb
push
add
mov
push
sbb
mov
cmp
mov
push
loopne
je
pmaddwd
dec
xchg
mov
scas
and
lcall
inc
daa
outsl
inc
jo
jns
add
scas
loope
pop
xor
and
jmp
idivl
xchg
add
add
mov
lea
mov
cmpsl
jge
add
std
fcomps
xor
pop
dec
stos
add
jp
add
mov
test
cmpl
add
inc
xchg
imul
adc
pushf
lea
cmp
popl
add
fildl
add
push
cmp
xchg
sbb
push
outsb
sub
and
add
negb
jbe
das
add
jns
loop
lahf
adc
pop
pop
in
sub
pop
fiaddl
imul
pop
add
sahf
pop
scas
and
cmp
mov
push
divb
xorl
roll
add
lea
mov
xchg
repnz
rcrb
pusha
sub
sbb
xor
sbb
and
sub
ss
repnz
add
jl
sbb
mov
push
cwtl
sub
sbbb
add
sbb
push
std
xor
in
cli
mov
mov
lock
add
pusha
jne
mov
and
fdivl
addl
adc
dec
in
adc
sti
addb
push
pusha
icebp
push
lds
mov
or
add
add
aas
mov
add
add
add
fdivp
js
sub
pop
sbb
in
ljmp
je
jmp
fistl
pop
imull
sub
jno
push
pop
add
and
adc
clc
idivb
dec
dec
inc
add
rorl
mov
divb
push
iret
mov
jnp
add
inc
movl
imul
pusha
push
push
add
mov
inc
orb
dec
sbb
popa
movlhps
and
sub
lahf
mov
movsb
repnz
dec
or
xchg
rcr
test
repz
push
xor
popf
dec
cmp
mov
xchg
adc
pop
stos
add
add
push
and
and
data16
insl
andb
add
pop
dec
push
xchg
rcrb
dec
mov
inc
mov
mov
enter
dec
xchg
verr
cmpl
sahf
or
and
lds
and
jns
add
jbe
sbb
and
mov
inc
enter
or
adc
aam
fsubs
xor
add
dec
pushf
fs
call
mov
in
lock
imul
call
xchg
add
inc
movsb
and
mov
jne
and
jo
sub
mov
popa
mov
shll
push
or
bound
imul
adc
or
fiaddl
nop
pop
mov
pusha
add
test
negb
sub
mov
fldl
fwait
mov
push
cwtl
imul
fildl
pop
bound
sarb
add
add
testb
jne
push
jns
cmp
adc
mov
mov
stos
into
cwtl
cltd
dec
iret
call
jge
gs
inc
pop
jns
or
insl
jno
imul
aas
addr16
and
xor
mov
mov
js
push
mov
loopne
sub
hlt
push
sbb
inc
in
wbinvd
call
cmpsb
ret
test
testb
push
dec
mov
ficomps
jmp
loop
add
add
and
pop
add
addr16
mov
adc
cmc
pop
and
inc
add
mov
jns
add
cmp
mov
add
jo
jo
movsl
data16
imul
push
xchg
call
adc
xchg
pop
adc
add
dec
stos
sub
sub
test
push
add
cmp
add
ds
sbb
lret
orb
jg
push
mov
lahf
call
mov
add
add
rolb
enter
adc
inc
aam
hlt
mov
push
movsb
mov
mov
insb
icebp
or
cmc
add
lea
mov
add
mov
mov
sbb
clc
jmp
shrb
cmpsl
pop
mov
out
loopne
cli
or
add
push
fs
push
lret
sti
es
cld
out
adc
arpl
gs
shll
mov
add
and
out
add
xor
gs
andb
jae
je
add
and
add
sahf
fwait
mov
jge
sar
nop
add
mov
jbe
shlb
adc
clc
mov
xchg
add
sbb
add
mov
mov
pop
sub
fs
xor
add
imul
pop
mov
pop
xor
mov
push
test
test
sub
enter
sbb
adc
add
inc
jo
insb
imul
fs
loopne
popf
icebp
add
pop
sti
loop
stos
incl
sbb
mov
and
push
dec
mov
or
and
add
add
test
and
ljmp
pop
fsubrs
and
push
out
or
pop
add
push
data16
ja
adc
and
frstor
rclb
and
je
push
add
dec
imul
nop
ss
mov
dec
mov
inc
push
bound
pop
sub
add
cs
xchg
inc
mov
xchg
rorb
loope
mov
je
jno
add
cmp
loope
lret
je
add
bound
fs
fisubs
in
arpl
addb
outsb
add
dec
gs
jne
push
jp
jnp
jl
push
add
xchg
push
mov
cltd
jae
ss
xchg
dec
pop
rcrb
js
mov
pushf
loop
inc
add
jmp
push
adc
mov
mov
lea
stos
stos
testl
outsb
popaw
push
insl
jle
cwtl
outsl
add
push
push
andl
out
add
sarb
adc
imul
jne
mov
adc
sub
push
mov
lahf
pop
test
and
in
add
mov
mov
mov
mov
stos
cltd
dec
jnp
cld
add
xor
pushf
push
or
add
enter
jne
fadds
xchg
into
dec
sub
dec
daa
sbb
notl
es
cmp
cld
or
inc
test
pop
dec
inc
sub
loopne
inc
push
sbb
lahf
pop
icebp
hlt
aam
loope
shlb
mov
jae
negb
push
add
hlt
add
add
callw
add
xor
push
ror
jmp
inc
andl
pop
das
adc
inc
pusha
mov
fwait
icebp
sbb
pop
and
add
call
push
sbb
xor
je
je
add
jnp
pop
cli
mov
adc
inc
adc
sub
mov
pop
push
mov
mov
subl
fnstsw
xchg
popa
add
repz
adc
add
gs
or
add
xor
arpl
int3
les
dec
add
sbb
xor
loopne
or
push
add
icebp
repnz
xchg
clc
lods
and
mov
fs
xor
add
cld
aam
adc
cpuid
lock
add
push
add
add
arpl
jne
or
dec
std
inc
sbb
add
jae
loopne
pop
popf
jno
pop
enter
add
add
not
pop
dec
inc
or
fwait
outsb
add
or
cmp
add
ficomps
inc
test
sar
stos
add
loop
cmovg
test
push
adc
add
push
add
jp
and
dec
or
inc
les
dec
add
jmp
inc
dec
jne
flds
inc
push
test
cmpsl
xchg
add
pop
aaa
adc
insb
and
add
scas
dec
add
mov
pusha
cwtl
sbb
add
jge
add
fdivs
pop
stos
cmpb
inc
sbb
call
and
lds
sub
jne
add
and
gs
add
rolb
add
xchg
rorl
jo
sub
add
adc
add
mov
outsl
cld
jl
mov
jle
inc
cmp
cmpb
test
lock
add
fldl
aaa
add
ret
add
clc
sub
fiaddl
dec
sbb
adc
addb
loope
scas
xchg
in
add
out
mov
sbb
add
cwtl
loop
xor
push
push
and
leave
rolb
or
push
sbb
jge
push
mov
dec
or
nop
fs
adc
mov
loop
mov
cmp
push
sarb
jbe
push
xor
adcb
ljmp
adc
and
sbb
clc
add
addb
rolb
jnp
add
xor
mov
jmp
jg
xchg
add
xor
adc
add
xor
adc
push
ret
cli
das
lds
xchg
or
add
lcall
dec
pop
cmpxchg
and
add
inc
sub
add
jae
fwait
rorb
mov
add
in
jne
adc
add
fiaddl
cli
mov
add
std
jge
insb
das
loop
push
movb
jmp
push
adc
testl
rclb
jbe
scas
add
mov
mov
sbb
rclb
xchg
cmp
cmp
lea
lcall
pop
call
sbb
push
stos
adc
punpckhdq
leave
add
or
pop
clc
stos
sbb
std
sub
pop
lock
lea
jo
or
fstpt
inc
pop
sbb
xchg
jmp
mov
sub
push
mov
push
pop
add
movsb
mov
xchg
push
sbb
cmp
jne
lods
jmp
lret
xchg
mov
or
sub
add
out
jmp
cmp
add
add
movsb
pop
cmp
mov
add
xchg
sub
sub
mov
pop
xor
jae
add
and
mov
jne
clc
sti
add
mov
es
add
inc
leave
test
sub
rorl
test
push
ss
decl
sbb
loop
inc
out
into
inc
clc
mov
add
imul
xor
add
in
inc
mov
mov
add
cli
sbb
cmp
and
fildll
xchg
adc
aad
sti
jno
push
and
enter
test
fiaddl
aad
fsub
dec
push
hlt
pop
popf
add
add
xlat
fmul
icebp
pop
data16
dec
sahf
add
lock
cmp
sub
test
pop
lahf
push
dec
add
movsl
std
adc
js
xchg
mov
icebp
xor
or
in
int
add
cmp
xchg
or
incl
cmp
sub
xlat
mov
add
adcl
jne
jns
cmp
adc
mov
andb
mov
lods
mov
jmp
aaa
add
sub
enter
adc
ja
sub
add
je
xchg
inc
add
xor
add
aam
or
insb
xchg
add
push
xchg
aas
mov
or
mov
insl
adc
es
sub
frstor
add
test
or
cmp
mov
xor
pop
cld
mov
dec
dec
test
imul
pop
bsf
jno
xchg
dec
scas
xor
nop
or
inc
fdivp
add
adc
add
dec
push
xchg
jl
movsl
popa
loopne
aaa
or
scas
lcall
sub
add
jmp
and
repz
xor
mov
cld
andb
pusha
mov
cmp
mov
sub
cmpsb
adc
cmp
push
mov
add
push
and
pop
ljmp
adc
flds
adc
aaa
push
sub
push
inc
sahf
int3
in
mov
mov
push
inc
lcall
hlt
movntps
call
imul
sbb
es
xor
call
sbb
inc
push
xor
mov
divl
add
or
addl
in
ret
popa
pop
cwtl
add
pop
mov
inc
push
mov
stc
jmp
jae
add
in
cmp
lcall
lock
jmp
add
add
adc
ljmp
hlt
jnp
cli
enter
add
std
into
add
push
or
and
rcll
sbb
nop
add
add
fiadds
imul
daa
inc
adc
add
inc
or
stos
and
add
dec
lcall
cmp
push
sbbb
and
add
or
std
cltd
push
adc
xlat
mov
test
push
sbb
mov
add
inc
mov
pcmpgtw
push
dec
test
jbe
add
lock
add
fs
xlat
pop
lea
fildll
sbb
rolb
add
add
addb
call
fimuls
pop
adc
inc
inc
adc
push
cltd
rolb
js
xor
das
fstl
add
pusha
sub
jb
and
cwtl
inc
out
push
nop
in
cmpsb
fildl
fmul
lds
add
aam
lcall
in
inc
push
add
jmp
sahf
sub
sub
add
or
pop
pop
add
push
pop
dec
pop
in
push
call
in
mov
push
aaa
add
insb
push
lret
push
xor
push
cltd
mov
jmp
test
cs
jmp
or
stos
dec
and
rolb
popa
sbb
icebp
stc
jns
or
jmp
std
add
add
inc
out
xor
hlt
popa
add
mov
cmp
pop
cld
addl
aaa
push
lock
in
lret
dec
mov
mov
outsl
mov
xchg
pop
push
mov
xor
xchg
and
add
leave
rcrb
pop
mov
adc
sub
pop
pop
or
add
mov
dec
sbb
dec
adc
cmp
outsl
mov
xchg
adc
add
sub
sahf
stos
in
push
add
das
sarb
add
imul
pop
add
add
pop
lods
xlat
call
sbb
mov
sbb
jae
inc
ja
push
add
add
jb
ljmp
xchg
addl
das
cmpsb
lea
push
add
push
mov
add
add
mov
je
arpl
add
pop
pop
cmpl
push
leave
push
mov
sbb
dec
or
adc
and
cmp
in
cmpsb
imul
add
jbe
incl
push
push
imulb
shll
or
lock
cmpsl
add
mov
sub
clc
pop
add
dec
push
popa
mov
mov
pop
aas
frstor
inc
aam
mov
icebp
fcoms
add
mov
lret
nop
pop
out
jmp
std
popa
add
repnz
add
mov
rclb
adc
xchg
push
cmp
jmp
sbb
pop
or
xor
inc
mov
loopne
pop
testb
std
xchg
cwtl
push
in
enter
in
or
bound
inc
mov
and
jno
out
mov
add
and
sarb
xchg
add
mov
adc
or
sbb
or
ja
sub
push
add
jl
test
mov
out
lods
add
fdivl
pop
sbbb
jno
test
cld
mov
add
sahf
add
dec
adc
lea
xlat
mov
cmp
add
mov
jns
add
sub
cmp
sbb
adc
jle
and
lahf
jae
and
test
mov
clc
cmc
maskmovq
notl
iret
or
mov
shr
add
xchg
ljmp
xorb
fiadds
push
inc
mov
mov
add
dec
cli
cmp
add
movsb
daa
mov
inc
inc
jne
out
add
leave
mov
add
test
cmp
jne
dec
mov
sbb
lock
lcall
lds
insb
push
lds
adc
sbb
mov
jne
sbb
jmp
fdivs
xorb
inc
aad
push
push
add
jmp
sub
inc
dec
jne
sbb
add
or
dec
sbbl
dec
lret
sub
xor
inc
pusha
cmp
cmp
fwait
add
jge
andl
mov
mov
cmpsl
push
xor
xchg
sbb
hlt
stc
popf
mov
mov
add
das
out
stos
fistpll
xchg
xchg
xor
add
jb
push
iret
dec
dec
fdivl
add
xchg
sub
jl
in
pop
notl
jmp
movsl
sbb
push
gs
nop
fwait
add
cmp
call
hlt
sbb
repz
adc
outsl
or
xor
cs
je
cmp
jne
fcoml
xor
pop
test
loop
xor
cld
out
call
sub
ficoms
add
push
rcll
or
cmp
mov
add
mov
sbb
ret
xchg
imul
xchg
cmc
cmpsl
sbb
add
insl
stos
or
pop
or
and
xchg
out
xor
sub
mov
mov
pop
js
sti
inc
lret
leave
shl
in
fldcw
loopne
dec
xor
push
fdivrl
add
push
in
sub
lock
sbb
pop
add
mov
mov
repz
les
loop
add
call
mov
ret
inc
mov
cmp
mov
jo
jge
outsb
sub
jg
into
add
fstl
push
add
je
nop
push
push
sbb
sub
aaa
mov
inc
mov
js
call
lods
xchg
and
and
adc
dec
xor
xchg
sbb
movb
fdivl
or
adc
add
adc
mov
add
mov
adc
add
in
jp
scas
repnz
mov
cltd
xorb
je
and
rcrb
mov
or
subb
adc
leave
pop
dec
sub
and
mov
pop
or
dec
cmp
xchg
cmp
xor
adc
pop
mov
push
cmp
nop
jbe
test
inc
or
push
xchg
and
pop
add
mov
cwtl
mov
sbb
mov
add
std
add
push
add
push
sbb
mov
sub
push
mov
add
dec
inc
call
ret
pop
pop
cmpb
int3
nop
fucomip
lods
shrb
jbe
add
int
popf
adcl
inc
jnp
loope
mov
aam
addps
ss
add
jg
arpl
xchg
addb
inc
call
dec
popf
fst
in
add
and
add
ret
add
cmp
lret
ss
imul
cli
pop
repz
das
out
int
push
mov
xchg
imul
push
jmp
xor
rclb
inc
mov
inc
lods
push
cmp
dec
mov
add
pop
adcb
inc
shrb
pop
inc
add
repnz
nop
scas
loopne
ret
or
dec
xor
mov
and
lcall
mov
inc
sti
cmp
repz
dec
push
or
inc
adc
add
sub
in
add
insl
inc
add
lods
cmp
rolb
xchg
or
push
enter
jmp
add
sub
pcmpeqb
ds
add
mov
jl
js
inc
hlt
xchg
adc
add
fdivrl
mov
pop
inc
pop
push
jp
add
notl
fiaddl
push
test
pop
loopne
jnp
into
cs
dec
cmpl
dec
add
cmp
or
bound
mov
add
push
inc
pop
add
dec
xchg
je
inc
pop
faddl
mov
adc
add
lahf
inc
js
cmpl
jge
aam
mov
rolb
mov
outsl
jns
mov
pushf
or
add
adc
sbb
sbb
lahf
xchg
push
push
cltd
aam
and
scas
add
fadd
and
mov
arpl
xchg
jns
scas
mov
ret
add
clc
xchg
push
lds
or
leave
push
cmpb
jbe
psllw
jo
pusha
cmp
add
add
jne,pt
mov
cld
test
sbbb
jmp
scas
sbb
mov
mov
sub
inc
push
ds
dec
scas
add
icebp
dec
lret
mov
xchg
lcall
cmpsb
mov
dec
add
xor
aam
in
sti
shll
mov
sub
bound
sbb
dec
js
ja
cmp
mov
jge
add
xchg
fisttpl
mov
push
inc
inc
mov
rcll
imul
lea
add
sbb
mov
xchg
lcall
inc
pushl
xor
test
iret
std
pop
call
add
push
push
push
mov
rcl
test
mov
or
inc
fsubl
scas
add
iret
cmpsl
pop
sub
push
adcl
repz
sbb
dec
add
ds
pop
jne
add
xchg
xor
movsb
imull
fisubl
jl
push
cmp
cmp
add
or
pop
mov
add
leave
vaddss
adc
mov
mov
inc
leave
aaa
dec
stos
add
add
pop
mov
jecxz
cmp
repz
add
pop
xor
shl
add
lods
cs
mov
sub
jl
adc
jle
ljmp
addb
mov
xchg
adc
adc
mov
das
fnstenv
ret
cmp
xchg
mov
jb
adc
mov
movsb
stos
jl
add
xchg
push
or
loope
add
in
rolb
push
push
adc
add
lret
add
push
gs
jo
dec
add
cmp
add
repnz
inc
adcb
or
and
es
or
jbe
aas
xor
roll
push
mov
lock
or
rcrl
int
jecxz
mov
nop
leave
add
mov
xchg
test
aas
out
cld
andb
nop
mov
mov
lock
push
or
sub
lock
in
nop
cmpsl
ret
out
jne
je
jns
add
aam
sub
pop
xchg
iret
add
icebp
mov
sub
mov
and
dec
add
push
int3
add
cmp
push
dec
cltd
jl
xor
out
imul
add
cs
in
repnz
add
pop
mov
sub
mov
pop
mov
xor
inc
mov
add
lret
testb
mov
dec
hlt
or
or
push
push
subb
add
lret
xchg
add
lds
jae
aam
mov
iret
add
push
ja
xchg
push
rorb
pop
pusha
push
xor
jl
filds
fmuls
sub
sbb
ficoms
add
or
aam
pop
and
pusha
lods
push
es
add
rcr
add
sub
and
cmp
push
jne
rcl
call
and
sarb
add
xor
add
fldl
add
sbb
aaa
xchg
jns
push
xor
push
or
or
xchg
mov
push
pushl
inc
shrl
leave
sbb
push
add
push
push
add
dec
pop
dec
aas
out
inc
repz
loop
xchg
sahf
or
mov
sub
xchg
ljmp
dec
pop
adc
shr
test
push
ss
int3
pop
mov
sbb
jmp
inc
pusha
arpl
push
add
dec
adc
add
imul
sbb
inc
repnz
xorl
rolb
lret
pop
sbb
pop
xor
push
ficoml
add
mov
addl
add
push
addb
xchg
popf
lods
bound
mov
dec
dec
repnz
cmp
xchg
nop
mov
sbb
enter
arpl
sub
leave
lcall
cmpsl
jle
fcompl
mov
jg
cmp
and
cs
push
add
rol
aam
loop
hlt
mov
sbb
shlb
add
push
jo
add
push
sub
add
xlat
push
mov
pop
xchg
jnp
or
cmp
sub
xchg
ror
nop
jle
out
sbb
lcall
outsl
inc
push
add
test
rolb
xor
xlat
testl
add
xor
adc
and
jne
sbb
or
cmp
aad
add
mov
xor
gs
shl
jno
andb
es
clc
rcrl
add
add
bound
dec
rcrl
xchg
push
inc
les
xchg
and
sub
sbb
mov
mov
add
cs
sbb
xchg
cmp
sub
loopne
add
clc
mov
jl
add
jb
dec
jbe
addb
cmp
inc
push
and
icebp
fildl
out
jno
loopne
cmc
add
adc
add
mov
sbb
sub
add
jbe
add
jmp
mov
sbbb
add
neg
adc
pop
dec
inc
add
rolb
mov
jo
out
add
xor
add
icebp
addr16
push
fists
testb
sub
dec
cmp
adcb
jle
rolb
xlat
add
int3
pop
enter
dec
add
xsha256
cmpsb
xchg
add
cmc
nop
mov
push
mov
mov
loope
jbe
into
movl
mov
icebp
add
add
mov
cs
add
xchg
add
hlt
cmp
pop
rorl
inc
jmp
std
in
js
loopne
push
in
mov
or
aaa
sub
jp
repz
inc
int
adc
nop
leave
add
sub
sbb
jae
leave
jnp
icebp
cmp
mov
fildl
out
loop
rclb
mov
cwtl
nop
fs
mov
push
or
ret
in
pop
mov
inc
mov
add
xchg
add
js
add
ljmp
xor
pop
adc
mov
xchg
push
rorl
add
add
pop
sub
enter
ljmp
aam
out
sar
and
in
mov
push
mov
add
enter
push
lods
loope
push
add
push
jmp
xchg
fiadds
ret
mov
fcomp
test
pop
repz
aam
mov
scas
or
fldcw
adc
push
int3
aas
mov
or
add
out
sub
rclb
mov
stos
push
add
roll
arpl
fcomp
adc
pop
or
sbb
push
inc
add
cmp
jl
add
xor
incl
jne
js
add
mov
lea
pop
addb
stos
xor
mov
add
xor
inc
sub
add
stos
loope
leave
aam
movb
or
mov
sbb
jle
add
dec
sbb
push
sub
jne
subb
push
jmp
test
call
jnp
lcall
sbb
scas
add
or
mov
cwtl
xchg
mov
xor
add
test
pusha
add
jle
xor
sbb
aad
pop
psubsb
xchg
add
test
out
add
pusha
push
add
nop
popf
xlat
stos
mov
add
and
mov
adc
push
add
dec
std
in
adc
sbb
stc
pop
or
xor
sbb
clc
adc
add
push
add
add
mov
outsl
les
add
outsb
inc
push
ss
es
push
int3
filds
lds
xchg
repnz
mov
and
mov
clc
nop
sbb
xor
pop
rolb
pusha
cld
icebp
jl
cwtl
das
es
xchg
push
in
hlt
iret
popf
add
add
roll
fstl
repz
mov
pop
orl
add
inc
cmp
scas
add
inc
xorb
in
or
ss
fisttpll
dec
adc
lret
loopne
push
xchg
loop
add
das
jae
sbb
sub
imul
call
add
inc
mov
insb
dec
rorl
add
add
int3
notl
push
arpl
push
clc
add
adc
add
stos
or
pop
push
mov
push
or
rorb
inc
icebp
xchg
punpckhwd
imul
adc
addl
or
outsb
pop
sub
mov
adc
imul
scas
repz
push
movb
movsb
xchg
lsl
inc
or
push
push
jle
test
addr16
pop
fsubs
les
push
xchg
add
or
add
testl
incb
jle
or
add
inc
push
adc
add
adc
add
movb
pop
push
jle
sbb
add
jae
add
cmc
adc
or
inc
scas
ljmp
lock
or
push
jle
shlb
add
lds
je
push
fildl
mov
orb
and
roll
pop
xchg
rol
loope
in
loop
rsqrtps
add
out
sbb
sub
cmp
cmpb
and
clc
jle
add
fistpll
fcomp
add
loope
addl
in
dec
add
add
loopne
ret
xchg
add
lea
push
mov
mov
mov
lock
sub
lret
mov
add
mov
mov
add
clc
hlt
shlw
pop
inc
adc
dec
loopne
and
add
repnz
pop
add
or
inc
cmpb
mov
sahf
or
mov
or
sbb
jp
add
cmp
mov
nop
fiadds
call
cmp
test
xchg
ja
sbb
add
sub
add
mov
popl
aad
mov
push
add
inc
ror
mov
push
xor
andb
mul
add
pop
sbb
add
xor
not
jle
sbb
lock
add
cli
xor
mov
mov
xchg
call
pop
jmp
cwtl
xchg
jg
cmp
cli
in
nop
jecxz
xor
inc
adc
les
mov
repnz
push
inc
sar
jp
cmp
adc
repz
into
jns
pop
scas
xor
rorl
push
add
daa
decb
enter
mov
push
add
int3
sbb
testb
hlt
js
fbld
pop
in
aaa
and
add
push
inc
sbb
push
clc
xor
or
leave
je
js
add
cmpl
jmp
inc
xchg
out
push
jne
add
or
pop
pop
cmc
mov
loopne
shlb
fmuls
mov
jp
add
xchg
mov
pop
pop
or
into
sub
les
mov
mov
add
lods
mov
hlt
js
sub
add
add
shlb
ret
inc
sub
and
add
or
or
int3
xor
jno
leave
lret
jg
jae
dec
pop
jecxz
add
in
pop
dec
push
add
scas
xor
or
cmp
cmp
pop
push
or
pop
xor
pusha
aaa
add
les
sti
pop
or
dec
out
push
pop
push
and
arpl
mov
shl
pop
add
xchg
nop
enter
lcall
pusha
je
stos
add
adc
xor
mov
lea
add
out
inc
add
mov
scas
push
sbb
or
pop
incb
or
jnp
adc
add
pop
push
mov
loopne
iret
decl
jmp
sarb
or
or
cmpb
cs
cmp
out
iret
sbb
xchg
add
sbb
test
mov
xlat
xchg
jge
add
icebp
in
jno
add
pop
std
cmpb
mov
mov
add
mov
mov
add
fwait
rcl
push
jle
mov
mov
inc
lods
lods
ds
add
jb
or
std
into
mov
pop
add
cld
in
ret
setbe
mov
loopne
pusha
xchg
add
sub
cwtl
add
not
leave
lock
std
add
mov
into
aad
add
mov
gs
xorb
rorb
add
addl
aas
and
pop
cmp
add
sarb
pop
fidivrl
test
mov
sbb
cld
mov
ss
test
and
aad
inc
sti
decl
test
mov
dec
repz
mov
lds
mov
pop
mov
add
cltd
lret
call
out
and
dec
mov
fildl
adc
mov
faddp
jmp
pop
xchg
movsb
lea
gs
xor
and
push
fildl
push
mov
mov
add
adc
dec
faddl
enter
add
or
add
mov
call
lret
cmp
mov
add
dec
adc
inc
inc
lock
push
add
xor
add
int3
sbb
js
lods
push
inc
sbb
cmpl
subb
adc
sub
inc
cli
adc
add
cmp
popa
pop
pop
test
sub
pop
mov
cld
addb
jo
cmpsl
add
adc
adc
and
lret
lods
loopne
add
fistpll
xor
sbb
or
cmp
orb
xorb
push
icebp
les
adc
or
sub
fcomip
shl
cmp
sub
add
test
jl
es
xor
add
lea
and
rclb
nop
dec
jge
pop
pusha
test
add
in
movsl
add
lcall
cmpl
dec
add
mov
ljmp
or
aam
xchg
inc
or
es
add
shrb
into
movsl
repnz
pop
jp
lock
pop
push
jmp
or
xor
pop
jb
add
divl
fsubr
stos
add
pop
add
xlat
jg
nop
sysret
push
or
cli
dec
add
scas
or
or
int
adcl
mov
add
and
lahf
pop
and
add
pop
jae
pop
xor
add
xor
mov
xor
insl
leave
das
subl
add
push
lods
out
mov
push
or
add
xchg
ljmp
xchg
std
lods
xor
scas
add
mov
mov
lock
mov
or
add
out
adc
ljmp
scas
mov
jne
add
in
fcompl
sahf
mov
popf
sub
and
pop
push
add
sbb
or
ds
leave
hlt
cmp
pop
inc
sub
add
and
nop
cld
daa
pop
cld
gs
jmp
mov
pop
mov
cwtl
loop
call
call
and
xchg
and
pop
lds
mov
mov
jo
add
or
mov
popa
add
add
add
nop
es
sub
mov
add
stos
imul
xor
rclb
jne
push
repnz
fiaddl
mov
or
and
or
subb
movsl
xor
push
fwait
add
pop
daa
imul
loope
cmp
push
pop
data16
adc
push
add
adc
or
fdivr
ss
movaps
add
scas
aaa
clc
in
xchg
add
sub
or
lock
jg
push
adc
jns
add
inc
sbb
add
dec
and
mov
pop
sub
adc
push
mov
inc
or
add
jo
dec
inc
push
sub
and
inc
sub
sahf
clc
jo
ds
nop
mov
push
pop
into
push
add
daa
lcall
mov
add
inc
clc
and
gs
xor
addl
push
push
repz
ja
dec
xor
imul
out
nop
pop
loop
add
pop
and
call
cmpsb
idivb
ja
add
xchg
lods
sub
out
or
ja
adc
pop
fs
lods
xor
pop
push
mov
cmp
sub
lds
lret
pop
fwait
push
jns
iret
add
popf
icebp
add
sbb
dec
add
xorl
vpmaddwd
jb
or
cmpsb
mov
fldt
mov
cmp
pop
sub
push
cld
push
xor
inc
sbb
sub
lock
imull
adc
xor
and
add
out
pop
jbe
pop
or
push
xor
ds
dec
sbb
add
xor
add
es
icebp
push
pusha
adc
pop
pusha
lock
sbb
mov
rcl
pop
addr16
jo
add
jns
dec
push
push
mov
xor
loopne
mov
push
mov
or
addb
das
inc
sbb
test
push
push
dec
mov
sbb
push
sahf
dec
add
pop
dec
xchg
cld
add
pop
or
popl
in
add
push
add
insb
dec
test
inc
push
loop
jbe
add
jns
mov
sub
add
xor
cmc
inc
push
add
test
xchg
add
cmpsl
loop
in
adc
insb
add
or
rolb
dec
inc
dec
add
movl
addr16
cmpsb
loop
mov
into
outsl
mov
cli
rol
mov
imul
adc
mov
push
mov
mov
sub
and
add
lcall
in
add
inc
add
nop
sub
add
push
addl
js
mov
lahf
push
movsb
sbb
add
rcl
xchg
ret
jmp
mov
and
cwtl
and
inc
mov
lea
mov
jecxz
sbb
mov
xor
not
push
inc
fdiv
call
adc
and
fldt
pop
push
gs
filds
jnp
jp
sbb
add
inc
popf
sbb
leave
pop
pop
add
mov
lret
mov
mov
fadds
add
loopne
dec
insb
mov
adc
mov
inc
pop
in
scas
mov
loop
adc
aam
stos
add
test
xorb
push
pavgw
es
or
je
lods
xor
cli
clc
mov
add
repnz
popf
cmp
add
mov
pop
rolb
dec
mov
adc
and
inc
add
mov
push
jg
imul
in
add
and
fcoml
add
loop
push
add
mov
sub
pop
aaa
mov
outsl
andl
jle
push
and
inc
cmpsb
jnp
mov
mov
mov
orb
pop
xor
pop
icebp
add
cmp
mov
dec
dec
xchg
cs
and
add
test
dec
mov
fwait
dec
add
leave
stos
mov
adc
je
dec
sub
cli
mov
jmp
lock
in
pop
bound
sub
inc
pop
pop
pop
fs
inc
or
pop
js
add
rclb
jp
add
cmp
add
arpl
add
es
add
xchg
loop
add
mov
jl
aas
insb
jl
bound
dec
sbb
sub
lds
movb
clc
add
jnp
mov
push
loopne
push
add
enter
mov
dec
mov
mov
repnz
out
cli
push
jne
ret
imul
test
imul
push
add
push
pop
out
and
push
ja
dec
dec
shlb
mov
xchg
sbb
pop
aam
push
mov
add
je
test
int
cltd
add
adc
imul
loope
lock
outsl
addl
out
xchg
cmp
and
push
inc
mov
lret
adc
jl
add
mov
mov
bound
out
lods
add
add
test
aad
add
mov
femms
arpl
inc
push
aas
adc
push
add
sub
and
adc
pop
sbb
leave
add
fldl
add
cmp
stos
push
fidivl
push
lea
sbb
pop
incl
lock
add
adc
stos
loopne
insb
xchg
dec
xchg
ljmp
sbb
push
add
add
dec
rorb
add
or
sub
stos
aas
add
cwtl
jnp
pop
iret
imul
xchg
daa
stc
xchg
add
enter
sub
dec
jp
add
fiaddl
pop
fcomps
mov
xchg
in
inc
ljmp
add
and
xchg
add
call
sarb
lea
shrb
jg
ljmp
push
xchg
pop
ret
shr
in
pop
dec
jae
xchg
or
push
aaa
add
lods
mov
mov
dec
pop
cs
out
repnz
add
outsb
icebp
pop
adc
adc
add
in
inc
mov
xor
pusha
mov
lea
aas
xbegin
fsubrs
and
mov
pop
cmc
xor
repz
dec
stos
mov
inc
pop
loopne
add
shr
and
mov
ret
pop
mov
jge
je
xor
xor
add
xchg
test
cmp
sub
movl
and
add
add
lahf
cmp
aas
addb
sarb
out
add
dec
mov
dec
or
add
pop
mov
add
xor
xor
push
xorl
fsubs
hlt
add
inc
push
cld
fmuls
les
inc
fisttpl
adc
inc
add
int3
sub
add
mov
clc
xchg
pop
xor
enter
fiadds
cmovle
add
int3
fadds
dec
pop
lock
push
add
es
loope
inc
jl
or
adc
add
mov
into
je
sarb
jg
mov
int3
cli
mov
pop
lahf
inc
add
loop
flds
or
push
test
fadds
push
add
xlat
xorl
inc
mov
leave
out
add
xor
xorps
rcr
mov
add
out
push
loope
add
aaa
add
leave
add
xlat
xor
adc
ret
mov
aam
int3
push
cwtl
xchg
push
andb
andl
mov
sbb
shl
and
stos
rolb
sti
pop
pop
add
jge
mov
push
adc
xchg
lret
mov
lods
jle
add
push
sbb
push
out
lock
mov
mov
mov
xchg
jno
mov
xor
sar
es
mov
add
psllw
fildll
xor
test
out
add
jg
xorb
or
cmc
mov
dec
nop
add
rcl
push
lea
xchg
pusha
jo
xor
rcrb
inc
dec
push
aaa
add
add
sub
xchg
pop
idivb
add
enter
push
popa
add
sub
ret
jge
ficoml
mov
push
hlt
push
add
push
mov
bswap
fs
mov
cmp
repz
not
jb
in
int
jnp
xchg
xchg
or
leave
shlb
shlb
pop
mov
repz
push
into
push
sbb
mov
mov
je
dec
adc
add
pop
jo
push
mov
add
and
jmp
jle
add
loop
cmpsl
pop
mov
sbb
cli
flds
and
or
mov
add
dec
add
inc
into
repnz
jbe
push
pop
push
sub
sub
shll
scas
jne
add
lea
add
xor
mov
jmp
adc
xchg
fs
mov
or
addb
or
push
cs
jns
lea
push
and
inc
inc
cmp
mov
daa
insb
sarl
add
or
add
es
data16
lahf
or
xor
push
add
js
rcrl
out
pop
jb
pop
jl
cmp
jmp
and
push
and
in
push
pusha
xor
adc
lds
pop
addb
push
push
mov
out
or
invd
cmp
inc
add
or
fldl
rcll
pusha
add
mov
shlb
mov
repz
dec
mov
roll
imul
sbb
dec
sbb
ds
inc
pop
inc
add
lea
nop
adc
add
lret
pop
test
cmpb
sub
fstl
clc
xor
cmpsl
pop
sahf
and
loopne
inc
jl
cld
sbb
in
les
and
jmp
add
addl
loop
add
xchg
insb
inc
or
addb
jae
mov
subb
sub
std
adc
inc
lea
jl
jae
les
xchg
stc
adc
das
call
leave
sbb
sub
sub
add
in
jl
jmp
push
cmp
inc
imul
or
pop
sub
dec
and
loopne
jp
mov
add
inc
pop
cmc
and
inc
cmp
fcoml
shl
test
pop
andb
cld
cltd
dec
add
pop
incb
mov
add
and
daa
das
dec
pusha
push
add
ja
les
mov
enter
push
pop
xchg
or
pop
cltd
pop
out
pop
nop
mov
xchg
test
cmpb
xchg
icebp
jp
mov
addb
rorb
adc
ds
nop
and
push
inc
ss
jbe
ljmp
fldenv
imul
roll
pop
or
daa
mov
sbb
push
pop
loopne
add
xchg
scas
or
jmp
mov
jge
add
jae
shr
ret
inc
imul
das
dec
xchg
adc
mov
and
out
imul
sub
dec
inc
xchg
cmpsb
add
shl
add
xchg
add
aad
mov
add
fdivl
add
inc
in
jo
sub
aam
loope
inc
push
xchg
pop
and
rorl
jge
cmpsl
test
sub
sbb
and
cwtl
orb
fldt
leave
add
dec
fxch
mov
in
dec
xor
mov
or
cltd
movsb
add
data16
jae
int3
xor
popf
and
filds
lea
mov
inc
shlb
mov
pusha
loopne
xchg
adc
sub
das
stc
cmp
cmp
bound
add
aas
fmuls
add
scas
or
adc
bound
int
pop
pushl
inc
add
xchg
dec
add
push
push
add
jp
xor
cmc
scas
movd
pushf
repnz
aas
bound
testb
clc
lds
movsb
mov
inc
hlt
inc
lahf
cmpsl
pop
cmp
call
add
jmp
cld
and
dec
nop
or
push
mov
loopne
xchg
mov
pop
jp
add
insb
movsl
jp
adc
dec
xchg
in
push
push
xchg
add
daa
daa
test
jae
enter
fcmove
nop
sbb
push
mov
iret
add
int
leave
cmc
mov
add
mov
sbb
push
xchg
dec
jne
rclb
sub
mov
out
mov
sub
xchg
lea
cmp
fidivs
add
add
data16
mov
adcl
rcl
das
add
cmp
jmp
and
add
imul
sub
mov
or
pop
add
cwtl
xchg
loopne
in
in
dec
fiadds
mov
addr16
lock
repnz
lret
loopne
dec
dec
adc
fidivl
and
add
mov
imul
xlat
sbb
test
scas
add
adc
orb
incb
loopne
pop
inc
adc
sub
jno
lock
outsb
in
popa
mov
xorb
aaa
add
mov
add
enter
pop
or
popa
or
push
jmp
cmp
jo
dec
xor
add
rcll
das
fldenv
add
jne
mov
mov
dec
or
loopne
call
jge
dec
push
rolb
pop
add
pop
jl
pop
in
xchg
add
pop
ja
mov
inc
aam
pop
push
loopne
add
imul
pushf
decb
cmc
cmp
adc
sub
add
dec
cwtl
dec
lds
mov
xlat
rcrl
iret
pusha
mov
adc
mov
loope
sbb
jb
outsl
add
add
add
xor
cmp
mov
or
push
cmpsl
add
mov
aam
add
mov
stos
push
pop
push
fcmovnb
shrb
dec
xchg
or
push
adc
andl
jae
add
lea
test
orb
adc
aam
add
inc
fisubl
and
jnp
stos
and
lret
jle
add
cmpsb
nop
mov
mov
mov
stos
push
inc
rolb
push
add
lret
cmp
add
rolb
sub
add
pop
icebp
movsb
aaa
sub
cmp
xchg
push
filds
mov
add
pop
fisubl
add
pop
mov
cmp
pop
xor
std
cmp
add
scas
add
xchg
pop
ret
sbb
sub
or
add
push
and
aas
mov
std
xchg
mov
sbb
and
or
rcrl
dec
js
subb
jnp
jno
xchg
cmp
xchg
xlat
add
sub
int3
push
lds
jo
mov
test
add
add
les
inc
sarb
in
sub
scas
js
mov
pusha
inc
xchg
mov
sub
mov
aas
add
adc
xchg
cmp
fadds
push
movsb
mov
test
ljmp
pop
add
xorb
inc
fadds
and
jecxz
lods
xchg
push
aad
jo
mov
std
lock
xchg
data16
push
repnz
add
push
cmp
jb
sbb
sbb
adc
jo
mov
xor
sub
aaa
adc
jae
mov
or
pop
fistl
lock
rorb
call
repz
fwait
mov
leave
popf
adc
xchg
out
ja
add
test
test
hlt
iretw
add
add
sub
cmp
sub
push
dec
sti
repnz
xcrypt-ofb
cmpsl
sub
pop
cmp
inc
pop
dec
subb
add
cmpb
adc
add
push
mov
insl
mov
pusha
mov
out
adc
adc
cmp
inc
testb
jmp
dec
push
sub
pop
lahf
xor
mov
xor
not
loopne
repz
add
cmp
push
mov
pop
jno
add
js
cmc
add
pop
shlb
jmp
cmpsl
add
pop
mov
lods
addl
imull
or
loop
jge
cmp
pop
subl
inc
ret
mov
xchg
add
push
mov
or
add
inc
sub
add
ret
sbb
or
adc
xor
clc
ja
orb
push
fistl
pusha
jp
push
shl
popf
add
add
push
push
cmp
xchg
mov
addl
in
mov
add
aam
and
and
cli
push
pop
jno
pop
outsb
or
inc
mov
test
add
jne
mov
add
cmp
mov
or
arpl
pop
mov
mov
cmp
insb
addb
fsubrs
clc
add
xchg
adc
shlb
adc
push
cmp
je
mov
pop
or
movsb
nop
add
add
mov
jl
jbe
add
cmp
add
aas
adc
pop
add
and
dec
cmpsb
pop
pusha
js
add
mov
decl
ret
mov
test
imul
jmp
outsb
hlt
call
clc
stos
js
cwtl
dec
pop
xor
divb
ljmp
mov
loop
add
mov
pushl
lock
adc
add
sbb
cld
fdivl
jo
call
and
es
aam
lods
int3
mov
push
insb
out
xor
mov
enter
mov
lea
push
or
pop
xchg
rorb
push
mov
cmp
clc
xchg
adc
add
or
hlt
adc
lret
dec
or
je
pop
decb
ljmp
add
or
mov
add
flds
gs
adc
adcl
int
rcr
cs
sbb
mov
jmp
mov
xor
dec
push
mov
aas
cmp
pop
mov
in
push
lret
or
aad
call
ljmp
cmpsl
add
hlt
mov
add
mov
icebp
mov
push
pop
dec
xor
scas
and
and
dec
stc
iret
dec
pop
pusha
test
add
pop
in
dec
leave
mov
jge
pop
pushf
hlt
jnp
roll
add
popf
fcoms
addb
mov
push
cltd
loopne
push
sahf
add
xchg
jp
pop
push
pop
cwtl
pop
test
or
adc
push
aam
fstpt
in
cmpl
insb
sbb
aas
adc
add
xor
add
and
test
sbb
inc
add
lea
dec
jne
lds
cmp
add
daa
aas
rcrb
cmp
inc
pop
push
neg
jne
jl
add
adc
rorb
jae
lcall
aas
add
adc
push
and
xlat
mov
movsb
mov
cmp
sbb
pop
imul
and
xchg
add
pop
loopne
add
inc
cmp
pop
mov
sbbl
xor
repnz
add
stos
inc
sub
stc
jp
nop
xchg
sub
pop
inc
xchg
pop
je
nop
pop
dec
movsb
aad
sbbb
mov
mov
mov
lret
cmp
sarl
clc
cltd
iret
pmulhuw
fsubrp
add
pop
or
popa
fnstenv
xlat
pop
shlb
stos
out
xchg
pop
nop
and
mov
sub
sub
fidivrs
fstpt
pusha
int3
call
adc
ljmp
adc
or
cmpsl
sbb
and
mov
addb
gs
add
dec
jns
mov
mov
fnstsw
inc
pop
jae
jge
mov
push
sar
cmp
sti
mov
imul
repnz
mov
add
pop
lea
sbb
inc
ja
add
pop
fsts
push
add
jnp
scas
das
sub
nop
pop
lahf
add
fnstsw
insb
add
faddp
and
aam
jp
xchg
jge
push
movl
in
or
xchg
sub
jle
pop
dec
pop
subb
xchg
inc
add
repz
lds
add
aad
js
add
mov
dec
loopne
dec
jnp
pop
icebp
ror
pop
push
fidivs
inc
xor
add
dec
pop
push
ret
add
movsb
add
jae
jo
cmp
dec
fwait
and
flds
push
push
bnd
add
mov
mov
test
jg
add
outsl
and
add
xchg
adc
shlb
add
add
mov
jno
in
imul
mov
orb
push
inc
sbb
loopne
add
insl
arpl
sarl
add
jo
inc
repnz
add
fdivrs
leave
dec
stos
out
repz
jle
cmpb
sub
add
sub
call
rclb
cmp
fisttps
subl
cli
inc
add
add
ret
add
call
sbb
add
cltd
fcoms
stc
ja
add
rolb
pop
pop
add
test
or
cmc
or
xchg
bound
out
push
inc
loope
cmp
mov
cmp
fisttps
aam
popf
mov
add
jmp
and
push
sub
adc
push
add
xchg
jecxz
mov
add
xor
or
cmp
psubb
xor
fs
imul
sub
mov
aas
mov
ret
or
aas
push
pop
xorb
call
cmpsl
adc
les
dec
shlb
or
add
ds
xchg
bound
enter
cmp
or
ret
xchg
xor
add
jne
andb
add
hlt
sub
idivb
mov
pop
jmp
cmpb
and
pusha
xchg
pop
sub
iret
dec
cwtl
fs
add
aad
adc
enter
lcall
sbb
add
ffreep
jb
mov
loopne
fstps
loopne
es
insb
add
add
add
add
and
scas
add
addb
inc
jo
cmp
inc
add
and
or
add
in
sbb
add
lock
das
push
sub
sub
je
sbb
push
or
ja
clc
mov
mov
add
lea
js
jo
faddl
inc
data16
mov
dec
js
add
dec
fucom
add
xor
out
push
mov
shl
test
repnz
jmp
pusha
add
sub
addl
mov
test
add
scas
pop
into
mov
jns
xchg
adc
dec
dec
add
push
mov
sub
xchg
add
mov
test
mov
add
push
add
sub
int3
push
pop
cs
push
inc
or
cmpsl
sbbb
sub
inc
ja
xor
pop
pushf
add
std
cmp
mov
adc
lahf
mov
pop
mov
out
sbb
cltd
cli
add
fldl
jns
and
mov
inc
add
add
push
inc
sahf
or
xlat
add
mov
and
or
mov
and
push
jnp
js
adc
shr
pop
rorl
fdivrl
add
popl
add
add
pop
ja
repz
add
jne
ljmp
ret
cmc
add
fwait
dec
mov
push
add
popa
xor
pushf
mov
in
ljmp
pop
jle
add
xchg
mov
pop
sub
jl
push
push
add
add
in
lahf
icebp
lcall
or
in
xchg
mov
and
sbb
stos
sbb
push
daa
iret
pusha
pop
or
mov
sub
cmp
in
vmovss
pop
push
pop
jns
pop
inc
lret
jo
sahf
add
pop
inc
push
add
mov
das
push
jmp
jl
jle
fisubrs
push
add
scas
push
or
xlat
add
jbe
daa
out
sarl
aas
jae
sbbb
test
cmp
push
jle
adc
leave
shlb
testl
push
fidivs
in
push
add
sbb
shl
xchg
pop
add
pop
imul
sub
aad
loop
add
adc
sbb
inc
rolb
addl
adc
sti
pop
xchg
jb
pop
adcb
popa
repz
sub
idiv
add
lea
nop
pop
test
adc
add
outsl
aad
mov
jge
xor
dec
pop
inc
adc
xchg
hlt
imul
mov
popf
loop
xlat
adc
mov
sub
cmpl
lea
pop
test
mov
pop
xor
outsl
add
adc
or
andb
push
push
bound
repnz
rolb
adc
lds
jo
pop
mov
ret
pop
push
add
cmc
ficomps
or
dec
or
push
imul
rdpmc
add
inc
and
mov
inc
mov
mov
mov
add
imul
ds
cmp
push
push
pop
in
mov
dec
orb
aad
mov
lret
add
dec
push
add
mov
cmp
rolb
stos
int3
add
mov
and
push
mov
dec
mov
sub
and
pop
xor
adc
mov
xor
aad
dec
cli
shl
push
add
loop
ret
fnstcw
add
fnstsw
imul
add
pop
add
and
mov
paddd
push
or
sbb
rcl
pop
clc
movsb
mov
push
cmpsl
inc
call
mov
lret
sub
mov
lds
pusha
shlb
pop
adc
mov
icebp
dec
add
loopne
enter
pop
and
pushl
icebp
add
test
imul
jecxz
mov
loopne
adc
je
mov
inc
mov
pop
dec
daa
add
jg
stos
in
enter
xchg
or
shr
xor
mov
add
mov
filds
or
mov
iret
mov
or
push
inc
mov
inc
clc
cmp
mov
mov
jl
mov
mov
xchg
sbb
sub
outsl
mov
scas
xchg
xchg
loopne
add
mov
mov
das
cmp
pop
cli
add
into
cs
jae
mov
or
bsf
mov
jp
not
add
bound
inc
dec
add
loop
mov
loopne
lea
push
cmovl
pusha
push
pop
in
dec
fdivs
repnz
dec
add
sub
push
or
xor
push
mov
xchg
sub
mov
mov
sti
pop
ret
add
sbb
lds
nop
xor
lret
add
das
daa
add
cmp
sbb
sbb
call
andb
dec
push
add
adc
xor
in
add
fstps
or
ffreep
lret
mov
cmp
loopne
mov
add
shll
xor
add
sub
push
ja
push
add
sahf
cwtl
mov
pushl
add
xchg
mov
dec
pop
cmp
cwtl
clc
fdivrp
sarb
and
cmp
cli
loopne
mov
pop
cmp
daa
mov
add
arpl
jno
mov
jne
cwtl
daa
out
add
mov
sub
jb
lahf
add
int3
inc
xorb
pop
cltd
rolb
jo
add
push
push
mov
pop
mov
add
in
mov
inc
fildl
outsb
fcomip
pop
xchg
cmp
jg
jno
cltd
pop
push
shr
mov
add
dec
pop
aas
adc
sti
lock
dec
push
rolb
call
loopne
jo
es
push
gs
adc
add
pop
test
push
add
mov
lds
xor
adc
call
mov
xor
jecxz
add
in
push
inc
xor
jg
std
add
imul
push
pop
icebp
inc
sbb
ret
adc
fisttps
out
mov
adc
cmpsl
fiaddl
mov
xchg
and
mov
sbb
mov
mov
movl
les
shrl
shr
ret
cld
and
xor
loopne
xchg
add
addl
mov
cmpsb
int
add
add
sbb
dec
push
adc
add
cmp
jno
es
mov
jae
push
sub
add
jne
and
add
cli
les
inc
aam
cld
cmp
pop
fadds
dec
cmp
pop
add
std
and
aas
popa
add
mov
add
rcr
mov
add
xchg
add
sbb
rorb
cmp
push
cmpl
pusha
loopne
popf
push
add
mov
inc
xor
inc
sbb
repz
das
cmp
fwait
loopne
add
mov
xchg
add
popa
rcr
dec
sbbb
xchg
int3
dec
test
add
je
out
mov
test
mov
cs
jg
push
cmpsl
pop
add
dec
mov
scas
hlt
xor
add
xchg
sbb
xchg
or
add
xlat
roll
add
jge
xchg
adc
adc
cli
sub
lds
dec
sbb
sarl
test
fwait
push
stc
jne
mov
fstpl
stos
adc
push
into
dec
lds
loop
and
inc
mov
sub
insb
add
out
rolb
sub
jmp
push
add
push
ja
aam
cmp
add
roll
add
mov
adc
insb
movsl
cmpsb
pop
mov
pushf
xor
or
fadds
xor
sbb
sbb
shr
jnp
icebp
jle
mov
add
dec
xchg
stos
and
fsubrs
movsl
pop
inc
das
clc
adc
into
jmp
cld
add
xchg
add
or
call
roll
or
stos
adc
les
add
xor
into
ret
add
inc
test
fadds
adc
dec
xchg
addl
sti
popa
inc
add
notl
pop
or
cmpl
sub
pop
movsl
pushf
add
or
negb
pop
lock
jecxz
dec
fiaddl
mov
push
subb
call
pushf
hlt
adc
out
or
adc
addr16
fs
lods
test
inc
adc
sub
idivb
add
inc
sbb
es
add
dec
sbb
loopne
add
cwtl
subl
das
push
inc
adc
jbe
inc
stc
adc
shlb
aas
and
add
sbb
dec
add
int3
lods
pop
sahf
and
push
rorb
inc
dec
and
jecxz
xlat
mov
out
mov
mov
add
push
add
push
icebp
aad
add
jle
xchg
cmpsb
push
fsubp
adc
outsl
rorb
pop
sarl
add
or
insl
mov
subl
pop
sbb
iret
aaa
push
loope
in
rolb
jge
xchg
dec
xor
daa
add
push
dec
jb
xor
pop
and
in
in
sbb
xchg
sub
icebp
stos
add
inc
push
or
out
cmp
sub
pop
push
cwtl
dec
sbb
push
inc
shll
in
add
aas
mov
or
sub
sbbb
push
add
icebp
xor
inc
inc
loopne
ds
push
xor
jg
mov
and
in
pusha
cmpsl
add
or
sti
call
dec
out
add
cmpsb
ljmp
les
fistpll
xchg
ja
cld
out
int3
mov
add
pushf
pop
mov
stos
add
imul
add
les
push
adc
mov
mov
das
inc
add
outsb
sub
in
mov
push
cld
jb
push
mov
cmp
add
lahf
push
mov
sbb
arpl
scas
add
nop
inc
mov
xor
je
adc
or
push
xchg
lock
out
clc
adc
outsb
add
popf
fisttpl
out
push
or
push
shrl
lea
mov
pop
pop
dec
pop
in
xchg
hlt
dec
push
sarl
add
mov
ret
jmp
fiaddl
loopne
jne
movntq
stos
mov
incl
cmpsb
js
sub
sbb
adc
xor
pushf
add
push
and
sub
enter
in
inc
add
inc
adc
out
jnp
dec
and
aam
cltd
pusha
xor
mov
cmp
lret
in
sub
fs
loope
test
jne
add
mov
sbb
mov
or
add
aaa
add
or
and
fstpl
inc
roll
lea
xlat
push
push
xor
add
jmp
and
or
orb
xchg
add
jb
ret
jle
add
in
dec
cmpb
ret
inc
sub
add
mov
mov
adc
mulb
movsb
stos
add
nop
flds
adc
cmp
enter
dec
fsubr
and
mov
inc
add
jecxz
hlt
imul
fimull
add
inc
mov
pop
add
inc
call
loopne
inc
adc
adc
push
add
jmp
lods
and
movups
roll
repnz
sub
or
and
adc
outsb
mov
cmc
jne
and
or
fnstsw
out
or
adc
push
mov
pop
int3
lods
add
shl
push
pop
sub
xor
inc
add
xor
add
movzwl
dec
sbb
jmp
or
enter
inc
adc
push
add
push
cmc
add
std
inc
add
cld
xchg
add
add
psubsb
pop
pop
cltd
inc
add
fs
mov
pop
sbb
inc
es
fwait
mov
cmp
pop
and
test
sbb
adc
sbb
sbb
sub
sub
adc
stos
repz
mov
xor
leave
add
cltd
mov
xchg
xor
andnps
add
dec
out
add
iret
movsl
push
jg
call
cmp
shll
add
pop
pop
pop
adc
xor
and
rolb
add
outsb
fwait
ljmp
mov
inc
add
mov
mov
leave
jae
push
outsb
xchg
inc
repz
add
or
sub
fldl
enter
cmpsl
mov
gs
add
adc
aam
dec
sbb
or
add
dec
jno
ret
mov
out
adc
pusha
mov
adc
push
mov
and
data16
and
stos
cld
dec
push
add
sub
add
inc
adc
push
sbb
fnstsw
and
pushl
sbb
push
rcl
adc
pushf
int3
fs
add
cld
and
sub
jmp
push
call
roll
repnz
inc
incl
loop
dec
add
cld
add
add
es
stos
arpl
xlat
sbb
clc
jo
sar
add
nop
jge
dec
mov
add
jno
cmp
mov
repz
fistps
push
xor
xchg
add
push
pusha
jbe
mov
add
push
lea
add
mov
lods
sub
addps
addb
lret
ljmp
maskmovq
jae
pusha
xchg
inc
cmc
mov
adc
add
mov
sahf
xchg
cmp
add
sbb
pop
sub
add
and
mov
mov
and
je
push
xlat
add
aaa
cmc
add
add
mov
inc
or
les
out
subb
pop
push
js
sbb
mov
pop
fprem
sbbl
push
add
mov
sbb
enter
fisubs
cmp
repnz
test
out
jb
add
adc
enter
aaa
sbb
xor
call
cmpsl
outsb
mov
lods
mov
xor
add
hlt
fsubrl
xor
lret
or
pop
add
clc
repnz
fiaddl
inc
out
sbb
add
add
adc
lcall
mov
stos
add
push
jo
fldenv
icebp
jge
mov
xor
dec
mov
ret
jo
sbb
out
ljmp
das
shll
dec
add
lret
pop
push
mov
insb
add
orb
adc
add
cwtl
stos
or
cwtl
jmp
pop
pop
mov
add
jle
sarl
in
call
sub
ljmp
jle
lcall
dec
or
sub
and
imul
les
sbb
inc
pop
int3
roll
jp
xchg
rolb
add
les
dec
jb
add
insb
ja
js
add
cmp
mov
in
add
lret
dec
jle
push
lahf
out
jne
push
in
xor
jecxz
mov
and
clc
aaa
xchg
idivb
ljmp
popf
add
subl
mov
jp
add
jp
outsb
pop
and
jp
add
push
pusha
push
xor
adc
mov
mov
ret
les
ret
and
bound
lea
xor
add
or
popl
mov
add
add
adc
sbb
cmp
pusha
jo
ja
pop
shl
add
and
mov
add
add
sub
adc
addb
fisubl
or
stc
adc
adc
add
adc
sbb
in
add
dec
add
xor
clc
pushf
es
add
mov
pop
scas
mov
fcomps
loopne
hlt
addl
xbegin
decb
adc
shll
lahf
add
add
add
add
add
bound
pop
ret
iret
add
push
sbb
xchg
mov
or
mov
rol
push
add
mov
cbtw
rcrl
add
mov
push
cs
daa
out
add
sub
div
stos
add
mov
out
add
call
add
mov
mov
addb
inc
inc
cmp
mov
or
jb
mov
aam
testw
sbb
adc
add
xchg
enter
cmp
mov
sub
adc
lock
aas
shl
pop
clc
orl
and
xchg
mov
jge
add
add
adc
and
insb
jl
mov
jle
jle
sbb
push
inc
inc
shr
sbb
pusha
and
sti
pop
mov
inc
add
aam
js
ret
add
mov
adc
add
pop
inc
add
pop
push
pop
loope
rep
mov
add
push
inc
dec
scas
dec
lds
add
lea
pop
inc
mov
fildl
add
pop
cwtl
imul
unpckhps
icebp
mov
shll
mov
int3
push
or
je
xchg
rorb
pop
push
cmp
loop
prefetcht0
cmp
inc
dec
add
adc
add
jmp
dec
js
clc
or
mov
adc
push
xlat
add
cmp
loope
loop
inc
cmp
push
add
xor
add
pop
stc
push
jae
daa
mov
or
inc
hlt
rcrl
lds
pop
aam
add
in
enter
add
adc
jg
jmp
loop
sbb
or
sub
outsl
stos
add
addr16
icebp
add
mov
and
sysenter
and
and
add
dec
or
cmp
pop
jnp
roll
add
out
rolb
xor
adc
sbb
shll
add
outsl
jmp
stc
xor
inc
inc
adc
mov
and
sbb
xchg
push
dec
jp
pop
jecxz
add
out
sbb
push
xor
mov
jmp
add
popf
add
test
add
add
add
inc
adc
testb
mov
xor
insb
jmp
sbb
loop
jnp
push
inc
sbb
cmp
lods
mov
adcb
mov
std
in
sub
mov
add
pop
nop
int
pusha
or
mov
dec
lret
call
xor
loope
adc
jno
add
popa
pop
int
rorb
icebp
push
mov
push
stos
xor
inc
add
leave
mov
cmp
adc
aas
lea
add
iret
add
imul
or
fsubrs
mov
push
jae
adc
adc
in
rclb
sbb
loop
cmp
sub
inc
jmp
pop
jne
push
jmp
add
add
jle
cmp
dec
dec
xor
and
add
sub
jg
jmp
repnz
mov
sub
pop
xorb
add
mov
dec
jno
in
cli
verw
jae
movsl
push
das
jecxz
rorb
push
push
stos
mov
mov
xchg
pop
mov
and
imul
movl
out
mov
jae
jne
push
cmp
and
inc
xor
add
push
mov
mov
inc
inc
add
divl
add
sub
or
and
sbb
in
ljmp
sub
push
rorb
add
jbe
add
inc
push
jae
ret
add
mov
inc
cmpsl
js
mov
adc
sbb
cmp
add
add
adc
or
in
add
lea
sub
push
or
test
shr
mov
das
mov
wrmsr
lahf
cwtl
add
jb
popa
mov
pop
adc
sbb
adc
push
loope
dec
mov
into
js
jle
pop
add
int
jo
rcrl
pop
ljmp
movsl
insl
and
mulb
insb
sub
add
ja
mov
mov
mov
pop
jmp
adc
mov
cmp
add
in
pusha
inc
outsl
dec
add
pop
mov
push
add
les
imul
add
jns
xor
and
add
jno
xlat
push
push
xchg
fadds
iret
jns
xchg
jo
enter
and
out
add
or
and
popa
je
rclb
clc
jmp
adcl
test
and
lods
inc
aam
xlat
ds
or
sub
sub
jo
add
test
add
mov
xor
loop
in
mov
jg
pop
cmp
enter
pop
mov
pop
add
in
frstor
push
adc
jb
pop
push
adc
add
cmp
loop
add
rorb
add
inc
pop
mov
mov
sti
xorb
mov
imul
bswap
and
lret
sbb
cld
push
jecxz
loopne
outsb
sub
std
pushl
sub
cmp
add
sbb
pop
dec
push
clc
adc
and
shr
xchg
mov
pop
adc
push
stos
adc
fstpl
inc
nop
jns
add
in
sub
push
sbb
xorb
cmp
pushf
lea
insb
lods
or
mov
add
fsubrs
mov
or
add
push
shlb
or
cmp
xchg
sbb
adc
pushf
mov
rclb
add
fs
popa
aas
mov
mov
or
popf
clc
bswap
fsub
adc
cmp
lock
insb
cmp
inc
iret
pop
mov
rolb
andl
adc
pushf
sbb
lahf
fdivrs
js
sbb
hlt
add
inc
add
movsb
adc
add
in
lock
or
push
data16
add
nop
lea
pop
push
incb
mov
mov
add
pop
and
inc
adc
loopne
and
push
or
or
pop
mov
xchg
and
fsts
test
or
cmpb
lods
cmp
cmp
jp
cmp
mov
sbbl
rolb
ret
or
and
mov
sbb
fs
adc
or
icebp
lds
leave
inc
lret
ret
in
cmpsb
xchg
mov
add
jo
inc
adc
adc
test
xchg
call
jl
add
lcall
lahf
add
add
sbb
mov
push
dec
lea
movb
or
dec
loopne
add
je
insl
gs
add
outsl
out
addl
cld
ljmp
inc
sbb
ljmp
push
mov
in
pop
or
jae
sbb
push
pushf
int3
dec
push
popf
pop
jl
mov
and
push
add
sbb
loope
gs
add
andb
shrb
lret
cmp
movsb
dec
add
or
xor
adc
andb
sub
std
adc
mov
jo
mov
std
cwtl
std
mov
mov
sar
fdivr
loopne
call
mov
adc
sbb
and
sub
mov
add
cmpsb
or
and
gs
jno
or
pop
call
adc
lret
and
scas
mov
sbb
push
sbb
mov
arpl
add
enter
pop
adc
add
mov
mov
mov
adc
test
cmp
dec
scas
adc
push
push
add
push
inc
call
dec
add
adc
arpl
addr16
insl
outsb
jo
cli
loopne
ja
js
jbe
and
and
imul
pusha
pusha
mov
lods
sub
add
add
mov
adc
push
and
push
push
add
inc
subb
jae
add
psubsw
repnz
add
mov
xor
xchg
adc
xchg
hlt
aas
faddp
outsb
stos
aas
aas
push
aas
insb
aas
test
cwtl
add
pop
jl
lea
das
add
ds
ja
add
mov
cmp
cmp
xchg
sbb
push
xchg
divl
test
add
loopne
add
into
or
cmc
push
int
in
repnz
mov
mov
add
inc
add
push
add
data16
subb
add
pop
push
add
inc
fadd
jle
add
add
cmp
insl
cld
pop
or
or
or
mov
movsl
add
xchg
add
or
imul
and
lods
mov
in
or
xchg
xorb
cmp
add
push
xchg
pop
jno
sub
lea
shlb
enter
add
and
bound
out
mov
clc
jno
enter
sub
cmp
mov
cltd
addr16
adc
pop
or
hlt
mov
or
pop
data16
cmp
lods
and
and
clc
jns
rclb
aam
adc
lock
data16
cmp
js
nop
xchg
add
loopne
inc
xchg
mov
pop
sub
sbb
xor
nop
jmp
sub
sub
jno
aam
fwait
sub
out
or
test
in
inc
out
cltd
inc
xchg
push
icebp
pusha
loop
cmp
xor
sbb
mov
add
and
xor
or
mov
orb
mov
and
gs
nop
cmp
mov
cltd
lock
into
xchg
sti
xor
sbb
inc
js
mov
pushf
sub
pop
or
push
add
int
clc
push
jae
xor
mov
fcomps
shrb
fldcw
inc
cmp
add
enter
pop
int3
or
sub
mov
mov
sub
xor
push
and
add
xor
shrl
and
add
cwtl
sub
or
adc
cltd
in
xor
push
add
mov
shlb
lret
add
or
lods
movsl
add
xchg
add
dec
push
cmpsl
add
lods
adc
enter
in
sub
pop
jl
inc
addr16
loopne
adc
sub
and
push
push
mov
sahf
add
mov
aas
mov
jl
mov
pop
xor
or
push
cwtl
mov
int3
adc
fisubl
dec
testb
and
inc
inc
dec
mov
adc
xchg
jbe
cmp
lcall
cmp
or
in
ss
adc
dec
mov
push
cmpsb
cld
mov
out
hlt
push
pop
xchg
retw
mov
cs
or
push
dec
nop
fs
xor
add
shrb
xchg
cld
sbb
nopl
sub
cmp
and
dec
push
add
pop
adc
mov
adc
add
push
xor
pop
mov
mov
test
mov
fsub
out
mov
imul
aas
ds
push
add
mov
idivl
lock
inc
push
mov
dec
xor
sub
pop
adc
or
adc
pslld
push
mov
adc
je
sbb
xchg
inc
lods
inc
add
enter
sbb
jns
pop
and
dec
adc
inc
bound
xchg
lret
mov
mul
scas
aas
addl
mov
popl
outsb
jae
push
fs
push
ss
inc
fbstp
ja
inc
arpl
push
add
mov
sub
jbe
js
add
sbb
add
outsl
daa
and
jp
push
jb
ljmp
in
jecxz
push
sbb
inc
xchg
shrl
push
call
dec
sbb
mov
shl
add
add
fs
mov
push
outsl
dec
jne
mov
xor
or
and
int3
sub
rcr
xorb
arpl
jns
ret
sahf
jmp
cmp
bound
add
inc
js
je
arpl
xchg
add
fisttpll
jo
loop
outsw
inc
and
fadds
fs
jae
arpl
outsl
std
pop
xchg
dec
popa
outsb
add
cmpsl
adc
inc
imul
insl
push
test
mov
outsb
jb
xchg
sub
push
xchg
lcall
mov
fisttps
jbe
mov
push
add
inc
and
jae
adc
popf
stos
cltd
rclb
mov
outsb
push
push
add
and
je
or
adc
adc
inc
pop
dec
add
cmp
addb
ja
or
pop
stos
sbb
mov
inc
inc
xor
or
push
adc
sub
xchg
dec
inc
push
jns
pop
insl
fwait
add
je
cmpsl
loop
jo
inc
add
dec
aam
dec
dec
add
cltd
vmwrite
mov
dec
hlt
lcall
test
add
inc
outsl
js
dec
call
nop
jbe
loop
cld
xchg
add
es
fs
xchg
mov
dec
xor
add
test
push
add
mov
popa
jne
inc
push
pop
push
in
sbb
shlb
pop
cmp
orb
cmpsl
sub
setns
add
lods
popa
rcrb
movsb
adc
shlb
adc
test
and
inc
ss
add
into
stos
xchg
add
sub
sub
mov
add
lahf
les
insl
mov
imulb
fistps
jg
pop
call
xor
push
or
mov
scas
add
adc
add
sub
data16
cld
sti
repnz
test
sub
arpl
push
in
rorb
rcll
insl
in
sub
ja
ret
cltd
push
idivb
xor
scas
mov
sahf
int3
mov
movups
pop
and
mov
jbe
and
cmp
imul
jo
arpl
inc
add
mov
mov
cltd
xor
mov
mov
dec
adc
add
fisttpll
aas
xor
xchg
pop
test
push
mov
mov
push
or
ja
push
gs
add
push
mov
add
xchg
jge
and
and
jo
ret
inc
mov
pop
es
clc
mov
loop
dec
jae
sub
or
inc
adc
and
push
jmp
fcompl
into
add
test
and
or
lods
leave
sbb
adc
or
xorb
xor
aad
add
xor
add
sub
xor
mov
es
add
jne
push
repz
movsb
add
int3
cmp
fsts
push
and
sub
out
adc
iret
mov
inc
inc
les
jp
insb
inc
pop
dec
sub
add
std
xchg
sbb
fwait
and
shlb
cltd
jnp
cmc
xchg
test
push
es
add
jge
lods
push
cld
xchg
pop
es
adc
push
outsb
jnp
cmp
leave
adc
and
adc
popf
add
jo
cmpsl
add
jo
add
dec
outsb
add
pop
xor
daa
sub
cmp
xchg
cmpsl
inc
dec
out
xchg
push
mov
push
jb
jp
xor
repz
repz
repz
repz
loop
ljmp
add
or
adc
sbb
and
sub
jmp
inc
xchg
dec
mov
push
jb
jp
xor
repz
repz
repz
repz
clc
push
add
jb
je
jbe
js
daa
jp
jl
jle
enter
pop
xor
popf
int
adc
add
popa
and
push
leave
test
jl
add
aaa
sbb
cmp
ret
push
aad
fistpll
pop
jmp
cmp
daa
sbb
cmp
pop
xchg
outsb
lods
cmp
cmp
test
scas
aas
mov
movsb
jle
or
out
pop
cmp
add
inc
sub
xchg
push
dec
fiaddl
movb
sbb
xor
jg
rcrl
cmp
add
sbb
cmp
add
sahf
inc
push
dec
lahf
push
pop
je
jbe
js
jp
jl
add
xchg
inc
xchg
mov
add
and
sub
add
xchg
icebp
scas
stc
mov
sti
andl
add
fmull
cmp
jae
sahf
jge
test
jbe
js
push
cmpsb
xchg
mov
out
out
ret
sbb
push
xchg
decb
subps
clc
and
andl
jle
cld
sbb
xor
sahf
xchg
mov
add
xchg
xor
daa
sbb
and
lock
mov
xchg
out
dec
mov
cmp
gs
leave
stos
add
mov
mov
add
je
jbe
js
dec
push
xorl
mov
leave
adc
ret
enter
add
fstl
les
add
xchg
cmp
cmp
aas
repz
sub
subb
pop
call
lock
hlt
mov
pop
add
cmp
ds
cmp
push
add
add
and
sub
mov
test
xor
add
pop
imul
daa
aas
mov
andb
or
inc
push
scas
mov
testl
push
pusha
sbb
and
sub
shrl
jecxz
repz
xchg
push
mov
addb
fcomip
in
std
sbb
mov
dec
push
xchg
sbb
aas
push
outsl
sbb
cmpsl
lahf
lods
add
fildl
and
cmp
or
jp
add
inc
push
popa
pusha
add
or
sub
outsl
rorl
fstp
sub
sbb
xor
jbe
add
loope
jmp
aaa
jb
je
add
cmp
sbbb
andl
mov
leave
inc
jae
dec
add
jle
push
pop
cmp
mov
iret
call
hlt
sbb
pushf
adc
mov
xor
daa
decb
outsb
pop
add
iret
cmp
jb
je
jbe
js
jp
jl
dec
xchg
mov
test
aas
mov
aas
iret
aas
sarl
jmp
lock
cli
add
xchg
xor
daa
and
inc
das
addr16
inc
dec
cmpsl
push
pop
es
ja
jbe
mov
mov
decl
ret
pop
xor
leave
dec
daa
add
stos
dec
mov
and
lock
or
pop
mov
fnstcw
jmp
mov
jno
clc
lret
rolb
fisubl
ljmp
mov
pop
inc
cli
sub
pop
lahf
hlt
adc
xchg
repnz
ja
cmp
shll
js
jp
jl
jle
jle
jle
jle
jle
jle
add
sti
cmpl
add
fldenv
loope
gs
pop
sub
pop
push
push
pop
dec
pusha
mov
jl
js
addb
in
xchg
lock
jb
je
jbe
js
jp
jl
jle
add
jle
cmp
pusha
sbb
mov
pop
jl
push
cld
cmp
cld
nop
cld
cwtl
cld
mov
sbb
popf
rcrb
lahf
loopne
call
jo
cmp
cmp
sbb
sub
lods
arpl
xchg
cmpb
js
jmp
cwtl
stc
pushf
and
movsb
cld
test
lahf
xor
lahf
mov
mov
popf
clc
rcrb
popf
or
push
adc
sbb
testl
cmpsl
pop
pusha
out
push
rclb
mov
imul
ror
aam
cwtl
add
js
adc
adc
sbb
sbb
lock
and
xchg
sub
xor
test
jl
mov
pop
mov
cmpsb
lods
push
int3
scas
aam
mov
inc
mov
sarb
clc
sbb
and
sub
sub
pop
xor
xor
cmp
cmp
inc
inc
push
addr16
js
jl
and
std
xor
jle
jle
jle
jle
jle
pop
enter
aam
fadds
lea
in
addb
add
popf
sub
xor
lahf
cmp
inc
roll
loope
push
mov
orb
push
mov
repz
in
call
shll
clc
cld
lods
add
inc
test
cmp
insb
mov
xchg
nop
dec
movsb
cwtl
lret
pushf
cmpsl
sti
fucompp
std
lods
sarl
call
repz
lock
out
push
jae
or
fcoms
inc
dec
mov
movsl
mov
pusha
repz
xchg
sbb
movsb
lahf
test
lods
movsb
fsts
mov
fstpt
into
add
rorl
ja
add
sub
xchg
loopne
lds
and
mov
mov
sbb
les
int3
sarb
je
or
dec
push
adc
cld
xchg
lds
push
sub
cmp
pop
shll
loopne
repnz
cwtl
js
jl
pop
dec
test
and
and
aas
aam
fdivrs
fdivrl
loopne
clc
je
and
and
inc
adcl
push
adc
add
leave
push
push
test
test
leave
pushf
mov
xchg
mov
mov
in
shr
ret
hlt
cwtl
lds
lods
pop
add
movsl
ss
and
aaa
dec
leave
xchg
rclb
cmp
cmp
daa
repnz
addr16
xchg
mov
leave
or
push
fsts
push
loope
jmp
and
sub
cs
mov
ds
sub
sarb
and
xchg
ret
das
xor
add
jo
mov
cmp
cmp
push
push
push
xor
push
cmp
cmp
in
cld
adc
ss
cmp
dec
sub
xchg
sahf
loopne
fmulp
je
pop
push
call
lea
add
mov
ret
pop
mov
cmpsb
enter
pop
repz
add
sub
mov
push
pop
out
and
sub
in
cmp
popa
add
iret
fyl2x
loope
inc
test
cmp
jb
push
add
inc
call
leave
and
xchg
add
pusha
or
inc
addb
add
push
push
xchg
mov
rclb
aas
add
cmpsb
scas
dec
add
cmc
leave
add
mov
jg
jg
ds
cmp
dec
daa
fcoms
add
bound
mov
dec
test
ret
and
and
out
out
nop
jbe
add
cmp
or
xor
mov
inc
cmp
aas
mov
scas
xchg
out
add
call
lcall
mov
jo
idivb
sbb
setge
sub
gs
aas
jae
push
stos
repz
mov
shr
pop
aaa
sub
in
call
mov
lcall
iret
xchg
rolb
mov
ljmp
fdivl
je
push
mov
test
fs
xchg
insb
dec
jg
add
test
mov
mov
mov
mov
ja,pn
seta
inc
rol
jmp
inc
aam
pop
fmul
add
in
xchg
in
dec
std
xorb
add
rorb
aam
add
cs
fsubrl
xor
faddl
fidivrs
and
je
adc
add
xchg
jae
aas
movsb
add
lods
out
mov
call
ljmp
add
add
out
jp
pop
and
cmp
xor
cmp
inc
cmp
pop
sbb
push
cmpsl
clc
xor
in
shlb
test
mov
add
sbb
movsl
or
cltd
pop
rcrb
xchg
int3
add
add
hlt
mov
add
xchg
add
jecxz
xor
test
inc
add
adc
in
out
mov
xchg
aam
rolb
push
cwtl
mulps
cmp
orl
out
in
cli
lock
cmp
add
push
push
dec
or
insb
cmpsl
mov
add
xchg
mov
repz
mov
sar
or
into
jbe
js
jp
push
jl
jle
dec
jg
mov
inc
into
sbb
aaa
jecxz
xchg
lock
js
nop
add
cmp
mov
sti
and
adc
es
popf
fld
loope
call
push
out
sbb
inc
mov
dec
mov
fcmovnbe
and
jb
data16
dec
mov
push
shlb
insb
sahf
inc
mov
add
or
and
cmp
nop
push
add
xchg
leave
les
rcr
fsts
cmp
daa
insl
add
or
and
sahf
push
pop
add
inc
daa
inc
loop
add
xchg
movsb
ffree
sub
cmp
nop
and
call
xchg
mov
xchg
out
mov
pop
cs
rorb
add
xchg
dec
xchg
mov
orl
or
ds
add
roll
jnp
add
sarb
xor
pop
ss
add
pushf
mov
loope
inc
jmp
insb
mov
imul
mov
push
or
lods
add
add
add
movsl
enter
xor
jne
ret
pop
lret
dec
sub
add
leave
inc
roll
jnp
lcall
jb
dec
inc
wrmsr
data16
jnp
add
sub
shrl
clc
add
aaa
jb
je
pop
sub
ds
outsb
dec
scas
push
cmp
popa
mov
jns
subl
push
push
scas
movsb
mov
lret
xchg
aam
ret
js
jle
inc
jne
add
cs
xor
mov
icebp
sbb
stc
pop
popf
push
pop
xchg
dec
cwtl
movsl
iret
lods
iret
mov
jecxz
mov
aas
icebp
and
dec
xchg
pop
add
cmp
inc
clc
cmpsl
cld
push
daa
push
inc
pop
arpl
xchg
pop
adc
sahf
mov
shrb
add
adc
add
cmp
add
orb
mov
or
daa
aas
arpl
outsl
mov
mov
rolb
and
or
les
loopne
add
or
or
adc
mov
and
add
sub
dec
dec
xor
pushf
dec
pusha
xor
scas
pop
daa
orb
adc
sets
mov
dec
jb
in
xchg
in
ret
add
les
mov
cmp
cmp
add
inc
mov
add
push
outsl
mov
fcompl
cwtl
add
mov
pop
add
push
mov
add
lds
add
xchg
mov
int
sub
aaa
add
fldenv
add
jl
sub
in
mov
xchg
jle
dec
mov
add
or
cmp
loopne
jmp
pop
add
les
ja
lods
nop
add
mov
add
je
jbe
dec
inc
add
insb
mov
jle
cmp
dec
and
sbb
aas
mov
mov
and
mov
push
add
pop
xchg
aam
mov
sarb
push
inc
xor
dec
dec
mov
iret
push
orps
push
mov
mov
orb
jb
mov
xor
add
mov
arpl
cmp
cmp
outsl
cmp
mov
andl
xlat
inc
ret
outsl
adc
dec
out
rcrl
jae
dec
mov
add
mov
add
mov
jns
add
aas
pop
lock
mov
inc
xchg
or
add
and
add
fldln2
loopne
xor
add
movsl
push
pop
lods
mov
mov
rclb
je
add
in
jae
cld
adc
add
or
adcb
ret
or
je
jbe
and
pop
xchg
addw
cld
xchg
add
or
inc
call
ret
pop
jle
xchg
movsl
mov
fisttpl
cmp
dec
in
mov
sub
sahf
jecxz
repz
push
in
out
out
repnz
pop
stc
pop
sub
leave
xor
push
xor
sub
daa
or
inc
or
loop
out
sar
fldenv
push
nop
xor
jnp
lock
add
and
repnz
les
jle
adc
xor
lock
jmp
or
divb
inc
sub
and
cmp
add
cmp
cmpb
mov
sahf
mov
mov
sub
fdivrl
add
ss
js
add
dec
pop
bound
xchg
les
add
mov
mov
into
call
andb
call
xor
rorb
xchg
push
ret
pop
push
nop
add
jbe
dec
ds
ljmp
push
into
xor
arpl
pop
push
nop
pop
lahf
addr16
xchg
jbe
addb
add
cmp
adc
cmp
cmp
cmp
pop
loopne
add
dec
scas
in
in
add
xchg
inc
add
xchg
nop
aad
out
repnz
xor
push
pop
ret
jne
add
xchg
cmpl
fwait
xor
xor
ljmp
ss
xchg
fsubr
js
rcl
testl
xor
xor
add
cmp
xchg
ret
out
insl
add
jb
ja
add
andb
adc
ret
mov
lahf
mov
rclb
and
or
mov
add
add
rcrl
sub
jbe
stc
xor
mov
negb
das
xor
popf
dec
sbb
adc
add
jmp
jb
add
sahf
das
push
cmp
insb
mov
mov
mov
icebp
lods
clc
mov
add
scas
icebp
ds
add
hlt
cld
clc
push
orb
inc
jp
dec
pop
ret
or
mov
cmp
cmp
xchg
test
xchg
add
lahf
in
pop
xchg
or
mov
lret
push
shl
loop
jg
je
pop
rcll
add
sbb
sbbl
int
add
imul
push
icebp
ljmp
mov
je
add
xor
popf
or
sbb
pop
dec
push
and
jb
je
add
push
daa
jl
out
xchg
test
mov
mov
rcl
adc
rclb
pop
add
mov
imul
fidivl
movsb
jnp
add
insb
pop
xchg
pop
mov
das
stos
add
xchg
pop
or
sbb
xchg
add
xchg
and
shlb
xor
jnp
mov
je
pop
sub
test
das
sarb
adc
pop
dec
sbb
mov
xor
sub
test
nop
mov
mov
in
call
add
or
inc
in
pop
xchg
xchg
movl
cld
sahf
xchg
mov
popf
pop
or
mov
mov
mov
nop
push
cmp
popf
or
xchg
bound
add
pop
loopne
loopne
add
pop
pop
inc
addr16
push
imul
lock
and
add
inc
das
test
loop
cwtl
jno
hlt
mov
inc
add
add
pop
push
addr16
jo
xor
fisubrl
cmp
xlat
sub
inc
fists
jmp
out
cmp
cmp
add
leave
adc
add
js
jp
jl
jle
in
add
xor
xchg
ffreep
je
push
mov
mov
or
outsb
push
inc
daa
add
sbb
dec
mov
lret
push
inc
push
gs
xchg
cmp
fwait
cmp
es
xor
repz
xlat
lock
jmp
add
std
or
push
cmp
pop
or
js
sub
jl
jle
jl
add
pop
xchg
iret
jb
je
add
shlb
cmp
out
lock
lret
cmp
cmp
outsb
test
movsb
pop
lods
rol
xchg
iret
ds
or
fcoml
add
mov
je
jbe
js
dec
fiadds
adc
lret
push
or
add
pop
lods
ds
cmovb
or
int3
rcll
les
pop
loop
ljmp
fmuls
in
call
ror
add
xor
add
sub
fcomps
jb
mov
mov
push
adc
dec
leave
imul
cmp
testl
ret
int3
adc
in
or
outsl
xchg
sahf
add
stos
js
add
cmp
add
sbb
lret
add
ds
and
es
pushf
push
mov
cmp
rclb
scas
pop
adc
lret
sarl
pusha
fiadds
push
js
mov
insb
mov
sub
sub
cmp
imul
rol
icebp
out
loopne
js
sets
test
push
cmp
add
mov
ret
pop
add
add
dec
clc
xchg
add
pop
cld
push
enter
cmp
and
sbb
mov
mov
loope
lds
dec
aam
iret
out
in
inc
ret
sub
sbb
cmp
in
sahf
std
pop
adc
mov
dec
add
jno
loopne
add
fs
add
dec
cs
or
call
xor
pop
inc
les
adc
or
test
shl
loopne
xchg
add
loopne
cld
add
in
add
out
stos
and
cmp
ds
dec
cmp
hlt
cmp
jl
add
or
je
add
les
pop
cmp
cmp
cs
xchg
dec
orl
mov
pop
or
push
gs
stc
jno
loopne
pop
sub
test
bound
or
xor
iret
addr16
inc
add
cmp
in
pop
jbe
incb
mov
and
dec
cmp
movl
ret
and
sub
add
or
xchg
add
ret
push
push
dec
into
push
inc
mulb
sub
cmp
mov
out
lcall
xchg
push
pusha
pop
out
repz
push
popa
hlt
ja
add
aas
mov
adc
push
dec
popa
dec
loope
jmp
js
enter
fwait
sub
daa
ja
push
mov
stc
lret
and
xchg
nop
push
ss
and
fnstenv
js
jp
jl
add
or
inc
push
push
xor
sti
sahf
add
popf
incl
sbb
add
pop
rorb
add
add
and
out
inc
imul
and
pop
pop
ds
add
ror
add
mov
mov
in
in
cs
or
loopne
add
das
shll
aas
or
fdivs
fdiv
jp
popa
les
shlb
jno
xor
xchg
in
call
ljmp
add
test
leave
cmp
mov
movsb
xor
inc
dec
rcrb
inc
scas
sub
sub
push
and
jle
mov
cmp
push
jecxz
adcb
scas
cmp
pop
aas
add
loopne
fwait
add
xor
add
sbb
add
dec
sub
xchg
jne
mov
add
add
test
jle
in
dec
add
loope
xor
ret
pop
pop
jp
and
mov
sbb
cmp
popf
push
add
andl
dec
loop
addr16
jb
jp
mov
pop
in
in
jmp
lods
pop
xor
out
adcl
xchg
adc
sub
hlt
pop
addr16
jg
xchg
xchg
out
and
loope
aas
repnz
add
xor
add
popa
and
xchg
push
mov
shlb
dec
or
jno
push
push
sbb
cli
add
popf
cld
xchg
add
mov
add
pop
cmp
mov
outsb
adcl
fwait
bound
in
mov
push
filds
call
sbb
inc
cld
jp
sahf
add
mov
popa
je
imul
xchg
cmc
mov
sub
es
in
mov
push
adc
and
inc
cmp
pop
lcall
add
pop
out
in
fadds
stc
movsb
lcall
popa
scas
mov
cmp
stc
xor
pop
aad
add
push
arpl
mov
mov
jmp
das
add
pop
gs
cmpsb
or
cmpb
and
aam
loopne
getsec
dec
add
or
inc
push
jl
sti
ds
lods
xorb
push
add
pop
mov
xorb
shlb
pop
incl
nop
outsb
jbe
pop
and
xor
inc
rorl
rolb
sar
out
and
xchg
subps
or
imul
call
roll
inc
fcomps
add
addl
mov
jecxz
xor
mov
pop
add
or
mov
movsb
push
sahf
ret
enter
repnz
sarb
dec
or
fcoms
shlb
pop
call
hlt
rolb
rorb
stos
push
loop
add
movsb
sbb
or
cmp
iret
cmp
inc
loope
sbb
stc
dec
popf
push
add
aas
pop
daa
push
pusha
inc
lock
into
das
jo
je
js
add
faddp
adc
xchg
fsub
pop
loopne
and
popf
mov
jmp
add
or
sbb
sub
loop
add
inc
loope
dec
add
js
repz
cli
pop
leave
add
pusha
sub
aas
push
pop
mov
mov
add
js
xchg
and
cmp
xor
inc
in
adc
cmpsl
test
in
add
xchg
hlt
int3
mov
xor
sub
jl
add
orb
pop
and
sub
call
dec
add
add
push
push
cld
popf
xchg
jge
test
pushf
push
mov
sbb
inc
sub
add
pop
or
jle
faddl
cmpsb
adc
push
daa
xor
das
pop
add
andl
hlt
mov
adc
inc
hlt
mov
adc
add
ss
pop
faddl
add
pop
pop
dec
adc
pop
iret
fs
push
pusha
dec
test
mov
mov
nop
adcl
or
lgdtl
mov
dec
inc
enter
mov
push
loopne
roll
call
jle
dec
cmp
pop
cmpb
add
icebp
sbb
stc
and
and
insb
lock
fnstenv
push
or
je
leave
push
dec
and
add
loopne
jo
cld
je
cmpsb
sub
pop
stc
adc
lock
mov
mov
ret
idivl
test
add
add
inc
adc
xchg
nop
mov
mov
add
sub
mov
mov
push
nopl
fchs
andl
xor
mov
faddl
sbb
xor
push
sub
jns
cli
adc
and
mov
push
add
aaa
adc
ret
push
push
sbb
push
call
enter
mov
psllq
sbb
jecxz
push
lea
test
sub
pop
add
or
pushf
inc
and
add
and
pusha
cmp
sub
adc
adc
sbb
and
jmp
test
push
xor
test
add
add
popf
push
sub
add
mov
xchg
lock
mov
add
cmpl
je
cmovo
mov
rcrl
cmp
dec
lcall
mov
or
push
popf
mov
repnz
addb
jne
add
test
mov
add
push
add
push
aaa
movb
cmpsl
xlat
jl
cli
push
cmp
orl
push
push
mov
aas
xor
or
add
add
sbb
subb
mov
inc
dec
add
in
add
push
add
int
repz
dec
cli
loopne
incl
dec
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
mov
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
jns
add
aam
xchg
mov
jecxz
sub
add
mov
popa
dec
mov
add
test
inc
jno
push
sub
ljmp
or
jne
pop
add
lock
dec
dec
add
mov
inc
test
push
inc
data16
in
push
sbb
mov
jle
push
cli
mov
inc
or
mov
in
add
fiaddl
push
push
mov
add
mov
push
mov
pop
jne
cmpsb
and
rcrb
sub
inc
mov
cltd
sub
add
fdivl
push
mov
and
imul
shl
adc
add
jl
jnp
subl
flds
fisubs
pop
push
sbb
dec
mov
orl
aaa
jmp
sub
adc
sbb
fld
cld
jmp
add
test
movsb
cmp
rolb
das
add
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
pop
cmp
les
pop
push
popa
mov
sbb
testb
xchg
cmp
pop
cwtl
je
sub
ret
push
ficoml
sbb
add
xor
add
push
insl
inc
js
add
add
ja
dec
add
sub
inc
inc
rol
inc
incb
mov
sbb
add
or
cld
scas
mov
jg
add
push
or
ficoml
imul
jbe
loopne
xor
jns
add
push
mov
iret
sub
add
jmp
fildl
cmpsl
or
cmp
mov
sbb
sub
xor
add
mov
sbb
fmul
pop
add
sahf
popf
flds
push
lods
dec
mov
add
jne
ficompl
rcrb
je
adc
bound
ret
lds
lods
cwtl
adcl
inc
cmp
add
mov
push
add
fcmovnb
mov
and
out
xchg
int
mov
add
sbb
cltd
pop
and
mov
insb
sub
aad
xor
add
mov
cli
out
add
test
add
or
movsb
add
stc
sub
insb
sbb
test
add
push
mov
mov
add
lret
push
and
in
aam
or
bound
loopne
xchg
cmpsl
add
xchg
lock
js
add
das
jl
icebp
xchg
pushf
pop
xor
flds
insb
push
pop
lret
inc
push
dec
gs
bswap
xchg
xor
push
icebp
add
cmp
cmc
jbe
add
addb
imul
add
mov
scas
jb
pop
out
ljmp
lods
clc
xor
ja
ret
movsb
mov
add
xor
mov
add
cmpsb
imull
out
add
inc
mov
sahf
bound
pushf
add
hlt
out
and
js
imul
pop
sarl
call
or
jl
lods
inc
mov
sbb
insl
adc
push
lds
add
sbb
stos
jle
in
invd
mov
pop
fists
mov
sub
add
ljmp
cmp
push
jg
sahf
xchg
add
lahf
cmp
pop
or
xor
inc
in
push
fs
add
int3
gs
lret
push
leave
arpl
dec
out
enter
sbb
pop
add
xor
sahf
add
rorl
pushf
add
int3
out
xor
int
add
xchg
sub
jl
add
pop
or
jae
popf
inc
add
dec
dec
and
xor
cmpsl
inc
inc
leave
pusha
sbb
add
mov
call
cltd
xchg
jo
push
cmc
pop
add
ss
bound
fwait
mov
nop
push
and
push
loope
add
xchg
sbb
stos
lds
xor
cmp
add
dec
push
dec
cmp
pusha
or
xor
loopne
cld
add
mov
inc
lar
jne
dec
push
dec
adc
jae
sub
dec
sub
rorb
aas
pop
movlps
or
je
push
ds
sbb
pop
mov
cmpsl
ds
jb
sub
lock
lock
mov
add
cmc
rep
pop
jmp
dec
shl
push
mov
call
or
ss
sbb
add
inc
adc
mov
addl
adc
js
add
add
roll
stos
mov
mov
push
pop
in
sbb
iret
cld
popa
add
or
jns
das
adc
out
pop
cmp
insb
popf
jnp
ds
imul
arpl
or
push
cmp
jp
loopne
mov
mov
sbb
jne
test
sub
cmp
repz
xorl
jb
sbb
data16
fmuls
inc
push
and
cmpsl
sahf
faddl
push
push
ds
cmc
repz
outsl
jns
sti
push
loope
jae
arpl
in
sahf
jg
mov
dec
xchg
mov
cmp
sti
imul
imull
arpl
int3
and
bound
fidivl
test
mov
js
sarl
add
rorb
in
adc
std
xor
inc
idiv
aad
cwtl
and
mov
lea
daa
dec
outsl
jle
push
push
jg
mov
mov
test
add
add
imul
jns
or
xlat
pop
and
sbb
push
xor
jmp
cmp
or
push
jns
or
mov
cmpb
fldenv
push
loope
dec
outsb
outsl
scas
mov
int3
inc
sbb
and
mov
lock
sti
mov
dec
pop
cmp
xlat
dec
inc
inc
mov
mov
leave
ss
lret
mov
xchg
outsl
dec
pop
cmp
and
mov
cwtl
mov
mov
xor
repnz
outsl
mov
sbb
pop
ret
ficomps
ffreep
ds
repz
icebp
subl
and
cmp
sub
push
fisttpll
into
sub
ljmp
sub
negb
jo
data16
dec
xchg
pusha
out
pop
sbb
lods
or
cmovb
sub
adc
inc
adc
rcrb
es
push
pop
iret
pop
sbb
mov
cmp
jns
mov
repnz
repnz
and
loop
fwait
test
imul
mov
or
dec
xchg
pop
xor
xor
inc
xchg
xchg
add
jo
push
imul
mov
loope
jg
push
mov
icebp
xchg
out
clc
push
lret
aam
imul
mov
xchg
aam
cltd
mov
adc
mov
fimuls
push
test
leave
loopne
stos
push
dec
test
mov
push
mov
popf
iret
or
inc
pop
mov
sub
jne
jl
mov
sub
mov
dec
sbb
test
lods
add
mov
jbe
lcall
stos
and
cld
test
push
inc
lcall
popf
lahf
pop
pop
mov
mov
lds
lock
jecxz
pusha
push
mov
inc
dec
push
or
adc
xor
cmp
xchg
scas
mov
adc
adc
inc
aad
push
sbb
mov
dec
cmp
jg
loope
xchg
mov
jmp
xchg
loope
jecxz
int3
lods
movsb
mov
push
test
fstps
insb
inc
push
cmp
mov
push
fidivl
ljmp
or
push
sti
clc
cmp
dec
xchg
aaa
cs
xchg
push
xor
movsl
inc
xorl
jmp
push
xchg
push
xchg
jb
dec
enter
sbb
cmp
push
add
mov
mov
add
imul
push
pop
jle
sub
mov
mov
test
inc
sub
sarb
in
xchg
cmp
mov
jns
loop
pop
roll
ds
sarl
push
dec
ret
sub
insl
loope
dec
ss
mov
rclb
stos
fwait
int3
and
pop
xchg
and
clc
repz
mov
lret
mov
movsb
sbb
js
mov
aad
jmp
push
popa
aas
sub
stos
cltd
and
cmp
xlat
lea
adc
mov
icebp
sarb
mov
mov
cmp
test
daa
adcl
pop
mov
sub
inc
cmc
out
sub
int
iret
pop
mov
jg
aaa
pop
pop
nop
loop
fs
je
stos
pop
lahf
add
push
add
or
std
cltd
jns
cmp
aaa
aaa
jnp
mov
dec
arpl
stos
jnp,pn
fistps
fs
push
add
stos
cmpsb
or
add
push
enter
out
and
sub
cmp
hlt
jecxz
leave
xor
int3
pop
mov
jmp
ds
call
movsl
adc
xor
mov
iret
lods
in
dec
mov
mov
es
or
adc
sarb
mov
addr16
xor
in
addr16
pusha
ret
divps
and
imul
imul
or
leave
lods
ds
mov
in
dec
icebp
xor
pop
xor
mov
push
jns
xor
cmp
pop
and
xchg
bound
hlt
sub
aas
sbbl
push
in
into
mov
inc
je
std
sbb
inc
icebp
mov
dec
jno
cmpsb
xchg
dec
and
jge
cmp
cmp
mov
lods
mov
stos
fisttps
shrb
fwait
aas
pop
lods
mov
loope
add
or
sbb
clc
iret
and
adc
pop
push
push
lret
jno
sti
add
rorb
dec
fsubrl
mov
adc
testl
cmpsb
jmp
cmpsl
adc
mov
cltd
jmp
add
subb
icebp
stos
sbb
push
cli
popa
test
sbb
fidivl
xor
jmp
in
leave
imul
jge
adc
mov
arpl
jecxz
push
mov
mov
inc
in
inc
mov
repnz
inc
dec
rclb
mov
iret
pop
xchg
push
inc
pop
les
xchg
pop
sti
xor
jbe
pop
pop
pop
pop
push
mov
adc
add
lcall
sbb
xor
jne
outsb
lea
pop
pop
fdivrs
insl
aam
fsts
lea
push
jne
jae
adc
sub
sbb
icebp
inc
neg
push
inc
adc
push
jmp
outsb
in
loop
lea
jmp
dec
push
dec
sub
jmp
mov
push
or
xor
xchg
mov
xor
cmpl
dec
mov
inc
or
gs
or
or
mov
andb
cmpsb
jb
push
repz
and
aam
inc
stc
xor
lods
jae
jae
insl
mov
xchg
wrmsr
pop
add
js
sub
and
inc
dec
xor
fcomps
push
push
inc
adc
daa
push
pop
jp
fbld
ret
mov
xchg
aam
jecxz
adc
xchg
lret
fldt
push
xor
or
adc
rorl
sti
xor
adc
sub
xchg
xor
adc
hlt
add
sahf
lcall
daa
jecxz
imul
jnp
dec
out
xchg
movsb
sbb
or
sbb
jne
dec
aas
cmp
add
mov
std
int
jae
inc
pop
sar
out
rorl
sub
xchg
and
outsl
cmpsl
dec
inc
adc
and
into
mov
addr16
and
lea
sbb
in
aam
movsl
sbbl
in
jno
fcmovb
adc
pop
cld
inc
add
sbb
xchg
test
xor
pop
mov
cmpb
hlt
call
mov
repz
stc
adc
pushf
stos
lock
shrl
jmp
lods
pop
pop
mov
out
pop
loope
mov
test
fnstsw
nop
out
jae
pop
push
xor
pop
sbb
cld
mov
xor
and
adc
pop
lods
xchg
or
add
push
mov
add
xchg
rcrb
sub
lcall
mov
mov
repnz
testb
inc
addr16
dec
addr16
mov
xchg
mov
cmpsl
mov
sbb
mov
insb
shrb
fnsave
loop
stc
repnz
sub
dec
leave
mov
sub
add
add
in
loope
jne
cmp
push
test
std
test
lock
jno
or
lret
hlt
adc
mov
or
shll
cmp
pop
dec
sbb
pop
les
arpl
cmc
sub
ja
cmc
adc
inc
push
scas
push
push
mov
stos
mov
clc
xorl
lods
adc
mov
out
jae
adc
lcall
cli
adc
push
cs
addl
jl
xor
pop
jge
std
xor
loopne
jae
jge
fmuls
sarb
lahf
movsl
lret
dec
pop
mov
dec
or
ss
lcall
pop
pusha
filds
jo
lret
and
dec
dec
add
mov
pop
cmp
in
popf
pop
xchg
jle
add
xchg
push
aas
sub
cltd
adc
pop
sub
add
jl
inc
clc
or
xchg
inc
jo
loopne
push
xlat
mov
push
jp,pn
outsl
lret
ret
mov
or
mov
fiadds
cmpsb
push
fs
add
fisubl
add
dec
push
and
and
and
test
ds
push
and
in
sbb
push
movsb
push
aam
shll
lcall
cld
sub
mov
inc
icebp
popa
jb
enter
repnz
inc
pop
and
jbe
xchg
fistpl
and
in
loop
pop
mov
adc
sub
sbbb
and
adc
imulb
iret
xchg
mov
push
adc
lock
lods
sbb
jecxz
iret
adc
data16
or
pop
ret
pop
test
aad
jns
or
stc
nop
and
mov
outsb
and
jle
pop
dec
ds
push
xchg
popf
shlb
adc
dec
cmp
mov
xchg
inc
ja
mov
xchg
push
es
dec
lods
mov
or
repnz
add
ja
mov
pop
les
push
lret
or
fidivrl
in
mov
or
loop
add
mov
jecxz
xor
pop
mov
sahf
adc
inc
pop
test
jbe
std
fsubrs
scas
inc
in
adc
into
fldl
add
mov
jmp
or
dec
jg
push
mov
xchg
or
lds
fbstp
jecxz
jmp
push
push
fs
cmp
xchg
movsb
hlt
jecxz
or
dec
cli
pushf
dec
gs
mov
add
jo
push
mov
mov
fst
test
das
cmp
jmp
dec
mov
xor
mov
cld
mov
pop
mov
jecxz
jno
mov
imul
mov
xchg
daa
andb
lret
je
cld
adc
mov
mov
jecxz
cltd
std
xor
pop
adc
lahf
mov
add
loope
inc
inc
lea
sub
icebp
sbb
jecxz
mov
out
mov
repz
aaa
sbb
test
cmp
push
scas
std
adc
call
lds
fcomip
test
sahf
stos
lea
inc
cwtl
and
cmp
sbb
faddp
scas
add
ficoms
cmpsl
cwtl
fucomi
xor
lahf
mov
shrb
enter
inc
loope
mov
fs
iret
out
mov
mov
ja
ret
jnp
hlt
jg
adc
mov
dec
inc
pop
pop
push
xor
jle
and
fs
aaa
fs
or
adc
adc
rolb
mov
mov
sub
cmpsl
dec
js
popa
xor
ret
scas
aas
dec
push
shll
ret
out
mulb
je
mov
push
mulb
and
test
outsl
xor
insl
cmp
rorl
fucomp
nop
mov
stos
cld
leave
ja
repz
add
aad
lods
xchg
sbbl
inc
pop
sbbb
lret
cld
cmpsl
or
jns
aad
mov
ljmp
outsb
rcll
adc
jno
xchg
or
xor
pop
das
into
sub
aad
clc
push
js,pn
pop
je,pn
leave
jno
dec
push
dec
cmp
jge
xchg
xlat
rcrb
adc
mov
scas
cltd
push
pop
push
xchg
fcmove
cmp
imul
into
dec
pushf
imul
pop
enter
inc
add
test
pop
push
das
push
gs
sub
xchg
repnz
outsb
rcr
pop
icebp
sbb
maxps
stos
jge
fs
scas
addr16
addr16
or
pusha
pop
mov
xchg
xor
out
out
leave
xchg
pop
gs
jg
push
repnz
adc
adc
cmp
cmp
push
stos
filds
nop
lods
lret
jle
sub
adc
fs
bound
mov
jl
rolb
in
jmp
cmpsb
ret
ljmp
scas
je
or
lock
inc
loope
mov
hlt
mov
pop
xlat
iret
es
jmp
dec
imul
aam
mov
push
fldt
loopne
mov
hlt
cmpsl
cmpsl
fmull
ja
dec
ds
jmp
pop
int3
pop
jae
dec
fisttpll
dec
dec
jecxz
xchg
push
pusha
push
sub
jp
rcll
cmp
mov
outsl
je
test
xor
mov
add
sti
add
scas
sub
mov
cmp
int3
mul
aad
je
inc
mov
sti
addr16
cmp
xchg
and
pop
push
out
pusha
inc
inc
pop
pop
and
lods
mov
mov
ds
in
add
mov
pushf
xchg
and
cld
test
loop
fsubrl
movsl
rcrb
add
lret
cli
scas
xchg
mov
outsl
bound
nop
pop
aas
xchg
repz
fidivrl
sbb
shrb
insb
push
test
push
addr16
loop
pop
shlb
push
jnp
fldcw
mov
jecxz
gs
fwait
inc
mov
jmp
or
dec
out
add
pop
sub
jecxz
inc
fs
stos
aas
rol
dec
jb
rcrl
adc
data16
mov
sbb
gs
sti
mov
push
xor
movsl
xor
fcmovne
or
in
pop
std
jp
pop
push
mov
cld
daa
cwtl
fisubrs
cmc
sarb
and
mov
rorb
fdivs
rcll
jmp
jp
push
and
or
fdivs
mov
rolb
sub
mov
lock
jbe
mov
subl
in
jo
test
mov
adc
repnz
jno
icebp
je
fs
fidivrs
jmp
jo
xchg
aam
and
mov
cmp
push
cmp
ja
in
or
xor
inc
and
fdiv
in
enter
inc
jmp
adc
xor
push
sbb
lea
xchg
pop
aad
cld
cmpsl
test
sbb
mov
test
sub
push
push
mov
bound
roll
js
mov
test
push
movl
push
repz
and
sbb
ljmp
popa
inc
sbb
mov
lret
sbbl
or
aam
xor
jp
push
iret
shr
sub
cli
fldl
repz
test
dec
shl
pusha
jmp
scas
movsb
push
adc
mov
test
mov
and
add
jno
test
aaa
inc
pop
cmp
dec
inc
dec
test
mov
and
mov
adcl
jg
dec
stos
int
xor
xchg
pop
lcall
push
sbb
cs
xchg
mov
stos
movsbl
inc
push
aad
scas
insl
jg
cmc
rcr
push
mov
push
add
ja
ljmp
dec
flds
pmaddwd
inc
rolb
dec
or
scas
dec
or
popa
mov
pop
pushf
sub
cmp
push
and
clc
insb
pop
in
data16
push
push
testb
insl
lock
push
dec
pusha
fcompl
xchg
jmp
adcl
not
and
mov
shl
arpl
in
mov
or
mov
mov
aad
xchg
and
lods
jle
enter
out
imul
mov
dec
iret
jecxz
jmp
enter
movsl
cmpsb
lods
imul
mov
inc
jns
dec
rolb
loope
shll
pop
decl
and
imul
cmp
dec
dec
push
in
lea
adc
add
sahf
sahf
mov
push
testb
push
xchg
arpl
inc
pop
jae
cmpsl
jno
inc
cmc
jne
and
xchg
push
sbb
inc
mov
outsb
adc
das
insl
jnp
bound
dec
fsubs
lcall
mov
dec
addl
movsl
push
sarl
stos
adc
pushf
adc
mov
pop
mov
pop
push
outsb
xor
scas
sub
sbb
pop
insb
and
push
mov
mov
js
test
pop
mov
adc
loope
push
enter
fadd
mov
clc
call
das
sub
aas
stc
push
cli
lea
shl
mov
imul
fcoms
and
test
js
and
adc
xchg
daa
adc
shl
mov
sbb
jmp
mov
or
jno
push
xchg
inc
push
sarl
mov
jge
jbe
lea
popa
movsb
lods
xlat
pushf
out
cwtl
decl
out
insl
je
xlat
sub
daa
test
mov
cs
sbb
jle
adc
es
imul
xchg
ret
xor
push
popf
pop
sbb
cmp
out
mov
cmpsb
lcall
frstor
les
dec
sarb
mov
test
and
popa
mov
in
sub
push
cmc
std
je
add
jmp
sub
test
adc
mov
sub
addl
notb
and
out
add
mov
test
adc
daa
mov
hlt
sub
imul
imull
and
in
sub
and
ja
push
icebp
pushf
es
sub
push
pop
mov
sub
and
out
ja
cmp
outsb
push
out
sub
sbb
and
ljmp
lcall
sub
in
cld
mov
aad
lds
xchg
lahf
mov
insb
data16
push
mov
mov
punpckhbw
cmp
or
ret
mov
outsb
mov
add
jns
pop
xchg
lea
lcall
daa
lahf
lds
dec
clc
inc
fsubs
cmp
rcll
arpl
mov
and
roll
filds
cmp
mov
inc
icebp
adc
in
loop
negb
pop
jp
mov
mov
push
lret
int
out
int3
imul
fwait
out
and
lcall
sub
insl
jae
test
shrl
jmp
mov
inc
push
xchg
sbb
xor
xor
loop
or
mov
and
mov
sbb
ss
cli
dec
fbld
push
inc
pop
cmp
pushl
int3
xlat
test
push
or
jno
in
andb
jg
test
pop
rcll
stos
mov
pop
pop
push
fdivrp
pushf
push
scas
jnp
repz
cmp
int
roll
lret
lcall
clc
int
mov
inc
xor
sub
or
bound
xchg
in
loopne
imul
add
pop
cmp
add
xor
xor
loopne
mov
push
push
mov
icebp
dec
add
cltd
sub
mov
out
ret
inc
leave
mov
push
les
leave
or
leave
push
ljmp
adc
mov
dec
rclb
inc
fwait
xor
jo
je
pop
or
bound
lods
pop
pop
in
inc
pop
mov
lret
sub
sbb
adc
js
jo
sub
cwtl
lods
jp
hlt
mov
js
outsl
sti
push
mov
data16
pop
xor
pusha
add
xor
xchg
or
jmp
push
lahf
adc
mov
dec
fldt
outsl
in
outsl
inc
xor
jmp
popf
push
popf
xchg
aam
das
sub
sbb
xor
xchg
push
into
dec
in
in
imul
and
pushf
fwait
mov
cmp
jb
pop
lret
repnz
clc
jle
mov
lock
fwait
push
push
fwait
ret
mov
push
rcrl
aaa
pushf
adc
outsl
pop
mov
outsl
scas
outsb
adc
out
jmp
pop
hlt
push
aam
shr
mov
lds
inc
bound
or
call
pushf
push
cmp
pop
popf
fwait
dec
out
cmp
fdivl
sub
inc
xchg
pop
lahf
mov
pusha
mov
in
loopne
mov
push
and
sub
sub
outsb
and
pop
aam
imul
mov
sahf
push
test
adc
mov
popf
addr16
jbe
scas
xchg
shlb
int3
out
jae
call
call
jg
mov
xchg
add
jge
int3
fidivrs
pop
adc
out
sbb
pop
xor
xor
fimull
imul
shll
sti
or
add
jo
mov
ljmp
xchg
adcb
inc
aaa
repz
mov
cmp
popf
lcall
in
push
test
js
scas
jecxz
mov
xor
sub
fdivs
insl
cmp
push
jle
shrb
or
sub
pushf
les
mov
dec
popa
adc
cli
repz
stos
xchg
lahf
outsl
sahf
fwait
in
scas
shrl
sub
ljmp
jecxz
aaa
mov
or
leave
or
ret
push
jmp
lock
js
js
sahf
xchg
push
mov
pusha
clc
je
sbb
fsubrs
jno
push
push
sub
sbb
cmp
jl
cmp
sbb
sbb
ja
nop
hlt
jecxz
or
xchg
mov
lds
mov
mov
stos
insb
sbbb
arpl
sbb
lret
movsl
addr16
add
mov
dec
inc
movsl
pop
xor
xorl
cs
sbb
mov
enter
data16
jmp
adc
out
subl
in
lahf
xchg
add
jp
cld
mov
xchg
push
gs
mov
mov
mov
shll
sub
mov
sbb
lock
pushf
mov
out
stos
std
cli
fldcw
add
bound
cmp
addr16
sub
loop
std
out
and
fdivl
stos
sub
test
xor
repnz
and
jl
jb
pop
inc
mov
mov
pop
mov
jge
jg
in
dec
mov
je
bound
cwtl
jl
add
jb
insl
pop
leave
dec
cmp
idivl
inc
mov
dec
and
in
pop
and
adc
je
jmp
in
push
sub
adc
pop
sti
pop
les
mov
pop
xchg
sti
flds
es
in
cld
syscall
xorb
push
sub
and
mov
pop
jae
sbb
sub
ds
sub
xor
fnsave
lret
test
into
or
push
test
mov
aad
or
leave
dec
mov
or
shrb
imulb
pushf
icebp
adc
dec
loope
cmp
std
fstpt
sbb
dec
push
rorl
pop
ja
adc
pop
int3
arpl
inc
add
pop
into
out
or
mov
xchg
repnz
mov
xor
test
xlat
imull
jnp
jecxz
or
shl
xchg
dec
mov
pop
jl
outsb
lret
in
xchg
xchg
xor
xorl
mov
call
add
cmp
shlb
sahf
int3
call
mov
pop
cmpsl
mov
not
xlat
mov
pop
out
mov
jmp
scas
out
outsb
jno
lods
inc
xchg
fidivl
sbb
cwtl
push
xchg
shrl
mov
inc
imul
js
add
mov
cmp
testb
subb
mov
fwait
mov
and
cmp
mov
push
imul
xorl
fwait
and
mov
jb
aad
adc
ljmp
std
add
std
adc
ljmp
mov
adcb
dec
mov
inc
ss
pushl
mov
mov
imul
fbld
insl
xor
nop
add
mov
icebp
or
mov
loop
add
call
jo
mov
add
or
push
pop
popf
int
push
fisubs
inc
daa
jnp
pushf
loop
fstps
repz
outsl
push
and
xchg
and
add
and
iret
outsl
xchg
dec
xchg
int3
pop
xchg
repz
test
test
test
leave
or
xor
sbb
out
decl
mov
movsb
xor
out
cltd
pop
xchg
mov
inc
into
jno
std
mov
fwait
shlb
mull
xchg
dec
test
pop
test
or
xor
test
pop
data16
cmpsb
xchg
mov
xchg
fildl
or
inc
test
ret
dec
jne
xor
cmp
ds
ret
sahf
jbe
pusha
sub
out
pop
addb
aam
out
testb
inc
icebp
jge
sbb
pushf
fwait
cmp
lret
push
into
test
sbb
adc
cmpsl
ljmp
cld
pop
pop
out
pop
mov
fdivrs
std
fcoml
mov
push
jns
pcmpgtb
sbb
andb
loope
xchg
test
cmc
popf
adc
mov
mov
adc
add
test
add
lcall
mov
add
push
in
js
mov
jbe
ds
ficoml
push
and
psubusb
addl
in
imulb
mov
mov
fwait
sahf
insb
mov
inc
jmp
dec
xchg
jp
and
pop
in
jle
lds
aam
ljmp
or
rcll
sbb
cmc
cmpsb
cld
jns
jae
ror
sbb
push
daa
dec
push
xor
push
ss
rclb
bound
pop
adc
push
xlat
push
in
cmp
push
cmp
cmp
data16
mov
notl
maxps
cwtl
mov
adc
or
xlat
je
push
adc
in
jnp
daa
imul
push
fisubs
sub
fcmovb
hlt
mov
xchg
adc
inc
mov
push
addr16
adc
in
repz
inc
daa
or
shr
or
sahf
add
push
jo
lcall
mov
inc
and
stos
out
pop
add
xor
test
jmp
pop
out
sbb
dec
test
stos
es
mov
cmp
fiadds
dec
insl
dec
jge
in
mov
pusha
sub
ljmp
xchg
jp
cld
xchg
xchg
dec
bound
test
or
aaa
jmp
stc
cmp
andb
stc
or
sysret
or
dec
stos
insl
lock
test
je
add
ret
mov
nop
cmc
pop
mov
jp
fistpl
cmc
int
into
test
pop
js
xchg
iret
sub
mov
and
shrb
and
fdivrs
je,pt
adc
aad
mov
inc
dec
cmpsl
jecxz
and
jns
stos
cmp
cltd
es
cmpsl
outsl
add
xchg
fidivl
cmp
outsb
nop
xchg
adc
adc
scas
loop
loop
jo
mov
mov
sbb
jle
mov
mov
mov
jno
aas
mov
lock
mov
xchg
inc
and
or
xor
add
or
jo
pop
addl
leave
ret
in
sub
pop
push
rcl
xor
cmpl
sbb
cmc
rcrb
mov
out
popf
push
jle
dec
popa
xchg
iret
lcall
lods
testb
add
std
mov
ljmp
ret
outsl
iret
and
mov
mov
xlat
popf
lock
cmpsb
movsb
or
icebp
jae
mov
push
mov
inc
filds
fstp
jl
pop
ds
cli
mov
dec
testl
adc
ror
adc
push
stos
push
mov
iret
push
ja
mov
xor
jbe
pop
aam
inc
stos
out
sbb
xchg
add
xchg
push
arpl
add
sub
or
jo
mov
inc
clc
mov
xor
sbb
xchg
lock
inc
sbb
push
inc
dec
mov
addl
add
pop
sbb
ret
or
test
jae
fs
or
aas
pop
insl
dec
adc
sti
xchg
insl
orl
add
xor
arpl
xor
dec
movsb
mov
add
movsb
rcll
xchg
mov
and
and
push
pushl
or
push
push
adc
adc
mov
sbb
js
jo
push
jmp
out
mov
jns
cmp
fstpt
fsubs
and
ja
shr
sub
cwtl
inc
daa
sub
or
mov
into
push
fwait
xchg
or
jecxz
cld
sbb
clc
push
rcll
out
inc
jmp
fimull
out
xchg
pop
mov
add
addl
lds
ret
in
mov
cmp
cmc
mov
xlat
clc
or
mov
popa
mov
jge
sub
push
hlt
dec
jns
mov
mov
push
lock
cmp
dec
shrl
iret
fs
cltd
addr16
pop
test
sti
pop
mov
negb
mov
fsub
inc
or
cmp
int
sahf
addr16
in
ss
ret
movsl
jmp
cmpsb
push
mov
and
sub
jae
jb
mov
push
inc
cmc
mov
je
pop
jae
jb
xor
int
dec
inc
xor
test
jg
and
mov
mov
lahf
js
mov
sub
testb
push
jne
js
icebp
mov
mov
sbb
pop
sub
cs
ja
mov
and
xor
adc
std
rorl
sbb
aam
nop
xor
out
dec
inc
mov
inc
daa
xchg
aad
jecxz
adc
test
jnp
es
cld
iret
mov
lret
and
add
int3
repz
sbb
daa
in
or
subl
pop
or
xchg
mov
or
mov
mov
jo
cmpsl
shll
xor
mov
jo
dec
sub
sti
in
ficomps
out
scas
pushf
push
out
ret
out
jle
dec
sbb
mov
rcrl
and
adc
fxch
sub
loope
in
ljmp
int
mov
ljmp
outsb
inc
jp
mov
push
xchg
loope
push
movsl
sarb
imul
enter
test
mov
and
xchg
add
pop
insb
or
sar
data16
jmp
repz
lcall
fiaddl
dec
cmp
pop
xchg
sub
outsl
daa
mov
fmull
xchg
stos
push
out
cmpsl
mov
addl
fsubrl
cld
test
jg
sbb
int
std
icebp
in
mov
je
push
xchg
dec
mov
lcall
and
ficompl
js
xlat
add
xor
sarb
scas
rcrb
add
jg
xor
xchg
icebp
mov
and
jg
push
add
jmp
dec
shlb
cwtl
andb
andl
cmp
mov
adc
pop
and
into
dec
inc
not
insb
aaa
cmpl
cli
popl
loope
mov
arpl
shlb
sar
xchg
repnz
mov
daa
out
leave
jle
cmp
out
xchg
or
pop
outsl
dec
outsl
cmp
push
les
in
incl
aam
sbb
inc
fisttpll
sarb
bound
push
lret
mov
daa
push
add
jl
je
roll
xor
jb
das
lret
mov
cmc
mov
sbb
mov
jno
push
mov
xchg
mov
adc
pop
jecxz
xchg
dec
xor
lock
pop
pushf
arpl
ret
xlat
out
xchg
or
lods
movsb
imulb
outsl
rcrb
test
fdivr
shrb
mov
cmc
pop
mov
or
cld
or
xchg
aad
xchg
data16
push
inc
cltd
sbb
mov
clc
push
ja
xorl
stc
andb
int
cld
xchg
pop
adc
mov
arpl
loope,pn
aad
insl
push
push
into
mov
aas
sahf
lea
pushf
lcall
mov
dec
cmp
sbb
and
jl
subl
movsl
lea
push
test
mov
cmp
cmpsb
in
sbb
popa
mov
icebp
pusha
in
sub
arpl
fsubl
push
mov
addl
push
inc
movlps
fistpll
inc
lret
push
aaa
and
mov
push
scas
jb
mov
dec
outsb
lods
push
jge
or
jbe
stos
sbb
call
mov
sbb
psubsb
es
adc
jae
js
aaa
add
loop
pusha
rorl
enter
clc
fcomi
fbld
lret
inc
lods
cs
inc
adc
outsl
mov
fldcw
mov
or
pop
mov
xchg
xlat
sbb
pop
jbe
jne
push
lea
adc
mov
dec
ret
pop
insl
lods
add
pop
push
jo
movsb
jp
sub
mov
pop
test
cmp
addb
shrl
pop
inc
repz
adcl
dec
inc
roll
cmp
inc
enter
cli
sahf
or
and
lcall
andl
cmp
adc
and
mov
sub
mov
cmp
push
jmp
jb
jmp
sti
loope
loop
xchg
mov
jae
sub
mov
xor
push
aaa
bnd
lahf
add
jo
cmpsl
mov
pop
rcrl
cmp
sbb
add
ja
bound
in
mov
jbe
movsb
scas
imul
sub
push
test
jmp
pop
xor
jbe
mov
scas
push
inc
cmp
outsb
mov
cltd
add
sarb
addr16
ljmp
mov
insl
cmp
lcall
insl
xchg
xchg
inc
lock
add
outsb
and
mov
inc
fcmove
and
xchg
ret
inc
mov
enter
add
faddl
mov
push
mov
adc
adc
test
dec
mov
lcall
shrb
and
jae
jae
mov
and
in
data16
and
cmp
daa
fstpl
or
mov
pop
into
sub
xchg
ljmp
repz
mov
int3
dec
stos
dec
mov
cmc
sbb
jns
cmp
pop
sbb
adc
sub
mov
xchg
xchg
xchg
add
sbbb
jmp
jnp
popa
xchg
mov
mov
cltd
arpl
dec
push
jge
lret
jge
movsl
fxch
lret
jbe
into
int
mov
xchg
shl
int
insb
pop
insl
pop
dec
mov
push
xor
pop
inc
dec
jle
cld
pop
testb
mov
push
pop
xchg
mov
gs
inc
imul
and
add
or
xor
gs
enter
stos
out
push
xchg
push
cmp
rcrb
adc
cld
cmp
mov
lea
cmp
test
mov
les
or
inc
mov
push
js
lahf
int
or
test
stos
imul
dec
jbe
bound
dec
lock
ficoml
stos
mov
jmp
std
sub
dec
cmpsl
mov
cmpsl
subb
gs
test
mov
and
stos
testb
pop
loop
int
test
lret
push
aad
ds
mov
fidivrl
pop
ljmp
lret
dec
scas
test
sbb
imul
mov
subl
stc
out
cmp
ret
add
xchg
cmp
pop
xor
mov
stos
pop
mov
xor
mov
sahf
push
pop
fsubl
shrb
inc
fisubs
pop
or
pop
cmc
push
test
pop
jge
jle
pop
andb
fcoms
scas
out
loop
mov
shll
daa
cli
in
dec
sbb
inc
mov
enter
lods
outsb
pop
mov
and
sbb
lcall
fwait
jecxz
call
icebp
jmp
addr16
shlb
adc
mov
push
adc
or
mov
mov
inc
shlb
xchg
js
mov
cltd
arpl
test
aas
test
aad
pop
cmp
jl
call
adc
jns
and
vpmacssdql
dec
imul
fmuls
sbb
mov
dec
repz
cli
sahf
ja
dec
nop
insl
les
gs
xchg
xor
pextrw
daa
cmpsb
icebp
jecxz
xchg
imul
movb
dec
xor
jge
mov
push
lea
cwtl
into
cmp
or
mov
test
sub
mov
inc
and
jg
pop
add
shlb
pushf
cwtl
lock
mov
sbb
fdivl
std
xchg
ret
jmp
cmpsb
loope
adc
add
addb
fxtract
or
jecxz,pt
sub
inc
out
mov
push
cmc
imul
sub
xorb
loopne
stc
nop
and
js
dec
mov
jp
call
mov
cmp
xchg
pop
cmp
mov
sub
mov
ret
mov
mov
jp
mov
pop
inc
xchg
je
in
fwait
iret
stos
fninit
jb
jb
test
mov
mov
inc
repnz
inc
jno
and
dec
and
andb
shll
icebp
push
cmp
sub
lods
inc
lret
inc
loope
in
mov
orb
fistpll
dec
jle
push
sbb
sub
les
popa
jle
insb
xor
or
push
shl
aad
sbb
loop
and
insb
out
fs
mov
xor
repnz
scas
dec
cmp
push
lea
sbb
adc
push
stos
je
lcall
pop
lods
inc
jge
jns
adc
shlb
sbb
jge
into
shrl
loopne
ret
loopne
and
aaa
pusha
ds
mov
sub
dec
test
pop
inc
rorl
repnz
pop
pusha
mov
pop
and
repnz
mov
xor
xor
inc
stc
int
and
mov
mov
xlat
inc
or
bswap
xchg
into
out
insl
cmc
in
xor
rclb
mov
jp
mov
call
inc
mov
sub
sub
mov
ds
xchg
adc
sub
int3
push
mov
shll
dec
negl
jnp
in
dec
test
sbb
and
je
pushf
popa
cmp
and
inc
xchg
push
fisttps
fadds
add
pusha
inc
pop
xchg
repz
shlb
dec
sub
adc
jo
xchg
in
xchg
push
jbe
ret
xchg
xchg
scas
jno
xchg
jnp
fisubs
sub
icebp
test
ss
pop
testb
imull
mov
pop
xorb
xrelease
leave
clc
xor
sti
add
add
cmp
arpl
sbbl
push
mov
dec
mov
xlat
jne
or
mov
cmp
xchg
push
fidivs
cli
shlb
es
fwait
repnz
sub
loop
loop
push
iret
inc
jne
sub
cld
in
out
mov
dec
or
mov
fistpll
scas
lahf
repnz
testl
lods
adc
gs
xor
jns
out
jge
je
adc
out
out
adc
mov
out
repnz
loopne
stc
xchg
rcrl
cwtl
mov
sti
xor
push
ds
mov
push
pop
xchg
lock
fstl
add
rcrb
jae
push
repz
or
pop
test
ss
lcall
and
push
sub
enter
push
scas
mov
and
xlat
dec
not
sub
push
xchg
sub
cmp
imul
add
aas
push
fisubs
aas
push
call
mov
cltd
jmp
xchg
fldcw
leave
mov
cmp
inc
sub
add
cmp
sub
mov
out
push
cmc
enter
jbe
ret
jmp
pop
xor
ljmp
xchg
add
jno
push
lods
sbb
ljmp
pop
pmaxsw
jno
das
inc
pop
bound
mov
xor
add
in
xchg
nop
cmp
mov
loope
inc
sub
mov
nop
into
outsb
cmp
cmp
or
mov
fs
sbb
lcall
mov
int
scas
inc
mov
int
xchg
popf
jl
sbb
clc
out
mov
and
sub
mov
loopne
and
jmp
lea
popl
dec
xor
es
fs
xor
rolb
out
in
cmp
or
push
fld
add
loope
or
or
cmp
jg
ja
test
inc
pop
insb
xchg
inc
sbb
pop
fmull
lods
mov
syscall
pop
outsl
jge
jg
inc
xchg
xchg
and
mov
data16
popa
or
jno
sahf
pop
inc
or
je
pop
lret
xchg
adc
inc
cli
mov
sbb
sub
and
push
in
dec
xchg
pop
dec
dec
arpl
enter
ret
jmp
inc
push
mov
dec
jo
ret
lcall
mov
aas
scas
or
xchg
pop
jecxz
test
lods
call
jg
sti
lods
jp
xor
icebp
xchg
add
enter
cmc
mov
popa
add
fimull
add
cs
cmp
out
xor
mov
hlt
divb
jmp
js
xchg
ja
es
sub
xchg
loop
popa
enter
jae
jae
outsl
and
mov
xchg
adc
adc
push
xchg
cmp
sahf
mov
fnsave
xor
mov
push
popa
lock
jo
jns
pop
mov
arpl
test
shr
dec
sbb
xchg
sub
pop
test
sub
rclb
jnp
sub
and
jl
ret
aas
jns
jp
loope
mov
shlb
sbb
and
out
sub
inc
push
push
adc
fwait
mov
sub
gs
sahf
leave
xchg
movsl
cltd
and
or
outsb
adc
sub
scas
jle
jge
cli
cmp
and
xchg
shrb
add
sbb
sub
dec
and
xor
gs
int3
mov
cmpsl
bound
in
arpl
mov
sahf
fldl2t
mov
jmp
cltd
fldenv
add
push
insb
loop
lea
pop
pop
fldenv
js
repz
addr16
xor
stos
loop
out
cmp
jnp
adc
insb
mov
cmc
outsl
push
mov
daa
jle
sti
dec
cmp
cltd
add
mov
shrl
pop
jmp
mov
aas
dec
movsb
mov
push
in
push
sti
or
add
loop
push
cmp
test
dec
xor
mov
pop
xor
rclb
cmc
mov
add
mov
pop
or
loope
push
ds
jp
fimull
mov
ret
fs
jg
lret
mov
mov
jmp
in
into
and
and
xchg
test
mov
in
push
iret
shr
scas
insb
cmp
adc
push
pop
loop
or
dec
lret
cmpb
cli
dec
or
mov
aad
dec
inc
mov
push
mov
in
mov
in
or
sub
inc
ret
inc
or
insl
add
jg
inc
pusha
xor
loope
mov
xor
mov
cli
jl
notb
lcall
cmp
dec
data16
les
inc
in
dec
cmp
leave
add
out
and
jle
add
cmpsl
and
xorl
mov
pop
xor
push
fcomi
lock
push
xchg
sti
adc
sub
sbb
test
mov
lcall
arpl
mov
and
arpl
adcl
test
sbb
dec
hlt
add
in
fildl
push
mov
in
mov
outsl
fldl
sub
cld
add
xchg
xchg
enter
nop
and
movsl
adc
mov
jne
inc
xlat
pop
dec
stos
mov
movsb
xchg
xchg
mov
shlb
pop
mov
inc
xlat
idiv
mov
push
fstps
cmp
repz
movsb
adc
pop
push
add
mov
xchg
mov
sbb
lods
xor
add
loop
push
icebp
loop
or
test
adc
fsubp
push
adc
or
cwtl
outsl
sub
xchg
pushf
pop
aaa
mov
test
ljmp
push
inc
mov
jnp
push
jb
sub
out
in
and
xor
jnp
add
jp
xor
and
cwtl
sbb
test
repz
push
jbe
out
dec
or
push
scas
cli
leave
in
cmc
out
lock
lock
push
js
xor
or
xchg
sahf
pushf
mov
pop
and
leave
jg
push
in
sbb
stc
divb
fdivl
aam
dec
idiv
out
clc
out
pop
dec
insb
ljmp
jge
bound
jbe
and
dec
and
inc
jmp
mov
ficoms
dec
mov
test
dec
add
inc
jl
dec
pop
pop
sub
loope
fmul
loop
pusha
loop
enter
in
lret
cmp
shl
pop
hlt
mov
mov
and
mov
arpl
mov
jae
jmp
call
pop
imul
iretw
lds
or
popa
mov
add
or
adc
sbbl
mov
mov
dec
fsubrl
aaa
test
xlat
jae
scas
out
jo
in
addl
repnz
mov
dec
sarb
mov
insl
lock
enter
dec
call
fistpll
adc
xchg
push
ficompl
decb
mov
in
addr16
sbb
or
add
test
mov
xorl
xchg
add
pop
push
rcr
mov
jo
cmp
jg
fistpll
ss
dec
push
mov
xor
dec
xchg
leave
lea
lock
sbb
add
cwtl
mov
sbb
sbb
jmp
dec
and
jge
add
add
mov
sarb
cs
cmc
scas
push
arpl
mov
popa
xor
mov
push
or
xlat
rcr
outsb
scas
fwait
ja
cmp
je
test
dec
jbe
mov
mov
fwait
mov
xor
xchg
das
aaa
std
dec
mov
push
nop
xor
adc
jne
add
add
outsb
mov
push
sub
pop
and
in
scas
cmc
cwtl
arpl
imul
test
xor
dec
jne
mov
aad
fs
mov
insb
cmp
incb
jg
sub
stos
or
adc
lock
mov
sbb
sbb
test
sub
scas
mov
adc
xor
cmp
fcomi
cwtl
stc
or
adc
jmp
pop
sub
cli
in
pop
mov
jno
stos
mov
mov
and
jecxz
xorl
stc
mov
les
sub
jae
jno
leave
out
sahf
lret
popa
xchg
into
or
xchg
enter
outsb
dec
xor
xchg
or
sub
mov
ret
jb
xor
hlt
jno
das
mov
mov
in
arpl
sbbl
dec
dec
cmc
movsb
das
in
outsb
inc
pop
adc
inc
push
mov
push
xchg
adc
ss
out
outsl
lcall
shrl
push
std
inc
sar
dec
in
ret
call
bound
inc
shr
dec
inc
cmp
ret
aad
mov
mov
ret
push
stos
cwtl
mov
in
mov
sub
jle
pop
xchg
fistl
xchg
push
in
and
mov
pop
hlt
xchg
lcall
push
outsb
outsl
inc
inc
imul
fldcw
fstpl
ljmp
in
pop
out
pop
imul
mov
mov
lds
test
lret
test
xchg
xor
jle
xor
sub
pop
sbb
stos
dec
pop
dec
inc
jb
adc
and
cld
pop
sub
mov
sub
or
mov
lods
cmp
repz
nop
cs
rcll
in
addl
out
mov
fstpt
fsubp
mov
int
dec
xchg
subl
mov
ds
sbb
sbb
jbe
sub
xchg
and
out
repnz
xchg
rol
lock
test
loop
test
nop
jno
orl
out
rol
sbb
or
xchg
aaa
sbb
inc
ret
outsb
ja
or
add
int
lods
sbb
pushf
movsl
push
mov
sbb
pop
xor
pop
and
jne
cmpsb
imul
pop
mov
add
jo
pop
sub
jge
mov
sbb
push
cmp
xor
les
pop
jb
jno
adc
pop
sub
int3
jecxz
in
cld
sti
insb
add
cli
adc
push
cmc
push
iret
xchg
dec
outsl
cli
lret
movsb
pop
sbb
fwait
imul
mov
hlt
dec
leave
and
loope
pop
push
mov
fldt
cmpb
ja
mov
or
mov
outsb
adc
loop
lods
xor
loope
or
push
push
aaa
mov
leave
ljmp
aam
add
clc
fiaddl
test
mov
imul
mov
cmp
add
mov
in
add
xchg
inc
rorb
mov
movsl
fcomps
testb
cltd
jp
out
xor
nop
sysret
push
bound
mov
adc
adc
mov
jb
loope
roll
cli
jb
popf
decl
and
add
mov
pop
sub
test
sub
lcall
mov
mov
cld
jb
pop
inc
ficoml
mov
aaa
adc
mov
or
nop
mov
movsl
dec
push
pop
sub
xor
and
pop
mov
jnp
fstpt
test
lret
jno
aaa
orb
ja,pn
ja
mov
fnsave
imulb
cwtl
pop
shrl
and
push
cmp
pusha
dec
mov
mov
neg
adc
stos
push
jno
inc
xchg
fnstcw
les
cmp
repnz
test
jge
sub
mov
iret
pop
jp
dec
push
push
cmc
and
adc
pop
mov
dec
adc
jmp
inc
adc
sbb
push
movsb
jno
lods
ljmp
sbb
in
lahf
adc
ror
adc
jecxz
pop
stc
fadds
or
imul
add
jns
sbb
sbb
dec
movsl
inc
js
mov
js
mov
aam
jl
lret
push
fistps
jmp
shll
out
add
pop
mov
sub
fucom
jbe
xchg
inc
jne
pop
frstor
jmp
mov
push
push
xor
or
leave
ficompl
mov
out
rolb
inc
push
lock
out
std
mov
dec
mov
sti
or
scas
out
cmpsb
nop
and
pop
loope
and
subb
dec
mov
or
sub
imul
push
repnz
push
lds
cmp
mov
iret
xchg
divl
inc
and
jecxz
mov
sbb
push
shr
push
out
xor
xchg
icebp
xchg
negb
xor
adcb
pop
sti
pop
cmc
mov
rolb
aad
popf
or
dec
and
xchg
fdivp
mov
jne
jg
clc
pop
sub
jno
sti
jmp
es
jmp
test
sbb
adc
out
subl
int
fisttpll
inc
dec
sahf
shlb
mov
jmp
mov
pop
jp
addr16
lods
jg
add
or
insl
ljmp
mov
mov
data16
sbb
bound
push
sar
push
or
adc
scas
inc
lock
lcall
inc
out
sub
pop
sub
dec
xchg
ja
popa
jne
cs
adc
jns
push
pop
insl
push
sbb
mov
subb
cmp
aam
xchg
in
scas
or
mov
xor
jne
sbb
xchg
cs
add
adc
rcrb
sbb
fisubrl
mov
add
sub
out
add
mov
pop
sbb
push
inc
jecxz
jbe
int
out
mov
mov
andb
sbb
mov
mov
ljmp
inc
imul
aad
cmpsl
dec
stos
push
sub
addr16
fnstsw
jge
popa
cmp
in
jl
loopne
mov
sbb
and
cmp
mov
xchg
ljmp
lods
jno
dec
lret
and
test
test
scas
mov
hlt
inc
push
scas
push
outsl
and
bound
mov
jno
inc
lahf
xchg
loopne
xchg
icebp
sub
cmp
sar
mov
out
sbb
and
fcompl
xchg
movsb
fs
add
jbe
jp
or
inc
outsb
mov
and
inc
stos
push
mov
xchg
dec
shlb
test
aad
adc
pop
in
ljmp
jns
sbb
outsl
xchg
xlat
and
sub
pop
pushf
xchg
mov
mov
mov
fsubrs
sub
sbb
add
adc
push
pop
lds
mov
inc
dec
rol
loope
bound
lock
stc
loopne
pop
mov
inc
xchg
cmp
icebp
imul
dec
jbe
ja
sub
mov
jno
lds
sahf
push
int3
or
cmpsl
movb
dec
out
sbb
sbb
push
popa
cmp
push
ljmp
idivl
fmull
iret
repz
shl
sub
and
out
notb
adc
xchg
int
ss
push
stos
in
mov
std
aaa
mov
mov
jge
push
mov
popa
or
add
fwait
pop
sbb
fimuls
jecxz
psubq
int3
mov
subb
ja
testl
push
daa
scas
idivl
test
ss
test
pop
sub
ljmp
xlat
dec
fildl
fsubrs
add
mov
aas
sub
in
jmp
ret
pop
lcall
sub
push
mov
jmp
sbb
sbb
shlb
xchg
push
and
fiaddl
mov
inc
int3
mov
xor
sbb
lea
enter
add
out
xor
scas
popa
xchg
jb
push
and
cmp
push
mov
rolb
loop
cs
out
pop
fst
shll
push
xchg
stos
stos
rclb
mov
cwtl
push
pop
push
sti
aad
xor
dec
jnp
and
xchg
and
aas
es
sbb
inc
int
pusha
pop
pop
sbb
cmp
nop
push
jle
dec
sbb
scas
cmpsl
pop
mov
fwait
out
addr16
push
jmp
mov
inc
test
xchg
jns
pop
mov
call
xchg
repnz
adc
dec
mov
scas
sub
mov
dec
scas
sub
and
mov
cmp
idivb
leave
lods
dec
mov
loopne
hlt
movsl
and
stc
jl
jle
out
int3
lods
imul
adc
loope
dec
mov
jg
and
fdivrs
scas
jecxz
scas
idivb
sbb
push
das
rcll
pop
sub
lea
jns
pop
dec
sub
ja
mov
lock
int
dec
mov
stos
push
push
push
dec
stos
xchg
xor
lahf
jl
sbbl
ss
and
clc
mov
dec
sub
mov
cli
add
aad
loope
jae
inc
aad
push
lahf
shll
popf
mov
cld
out
cmp
subps
stos
mov
clc
in
and
jnp
dec
cmpsb
add
cmpsb
xor
cmpsl
adcb
shl
std
dec
xchg
mov
ret
push
stos
push
fistl
cltd
and
jmp
ljmp
pop
mov
dec
cmp
fmuls
xchg
cli
bnd
mov
loop
xor
mov
ja
add
aam
add
inc
fsubrl
out
jae
adc
subl
out
rclb
sbb
pop
jno
sub
out
sbb
mov
cmp
out
pop
jbe
test
das
push
xor
rcpps
and
sub
daa
decb
sub
mov
aas
adc
push
loop
cmp
dec
adc
cli
mov
imul
lods
cmp
loope
inc
or
inc
dec
cwtl
jmp
xlat
push
insl
mov
xchg
roll
inc
ret
bound
cli
cli
call
es
mov
fs
adcb
xor
sbb
cmp
mov
or
pop
pop
jne
imull
inc
mov
cmp
jne
mov
mov
sbb
fdivp
out
test
scas
sbb
incb
jae
stc
pop
insb
ljmp
pop
das
push
sbbb
mov
inc
cmp
cmp
mov
das
jg
sub
pop
hlt
ret
push
mov
mov
xlat
in
cld
xchg
lea
xor
out
insl
pop
das
or
and
cmp
xor
and
int
adc
and
sub
push
stc
stos
rclb
lds
rcl
dec
mov
loope
fbld
xchg
mov
push
fldcw
pop
lahf
xchg
into
or
icebp
or
jbe
call
xor
adc
jmp
das
add
fldl
fimuls
push
cmpb
or
xchg
addl
cmc
xor
or
lret
jecxz
inc
pop
cmp
frstor
sub
cmpsl
mov
cmp
sbb
stos
fsubr
push
mov
jg
into
scas
aad
bound
popf
jns
ror
sbb
xchg
fisubrs
popa
jle
sbbl
push
fistl
cwtl
stos
fisttpll
fstp
mov
xchg
test
dec
enter
push
ja
xchg
jne
mov
lock
rcrl
xchg
rorl
das
jno
mov
loopne
jecxz
mov
in
andb
push
into
adcl
adc
fs
rorb
and
orb
cmpsl
mov
sti
jbe
ficompl
mov
xchg
xor
sbb
pop
and
xor
mov
fxch
ja
push
push
and
and
push
cmp
mov
dec
cmp
xchg
add
jle
lsl
test
sahf
mov
mov
test
sti
cmovns
out
sbb
aas
outsb
and
andl
out
sub
jp
lcall
xor
test
cmp
jl
fistpl
pop
call
add
and
sti
xor
std
adc
push
ja
sub
shrb
pop
fmull
cmp
jp
xchg
mov
dec
aas
aad
cmp
xor
in
lcall
or
xchg
adc
pop
inc
pop
sub
stos
sub
aad
pushf
adc
dec
lods
xor
addl
adc
stc
mov
shrl
push
xchg
jb
das
lcall
push
test
mov
mov
bound
into
popa
cwtl
add
or
or
xchg
lret
push
pop
sbb
jge
jnp
and
fstps
mov
paddusw
iret
adc
lds
cmp
mov
adc
mov
movsb
call
cli
cld
jbe
sti
and
jecxz
cmpsl
add
std
popa
iret
fnstsw
mov
ja
and
scas
sbb
sbb
mov
sbb
push
imul
loop
mov
loop
in
ja
xlat
ret
mov
test
push
aas
shrl
cwtl
popl
cmc
mov
insb
dec
push
andb
lret
js
in
add
sbb
test
fstps
mov
jg
pop
es
sbb
insb
shrl
xchg
sbb
mov
push
jns
pop
pop
pop
mov
pop
mov
insl
leave
xor
fstpl
daa
icebp
push
pop
lret
push
js
popaw
mov
adc
xor
fidivs
xchg
sbbl
jne
mov
sbb
mov
imul
scas
rcrb
fcoml
inc
push
add
sub
stos
add
mov
into
shll
cld
roll
lret
add
sbb
lds
sub
jecxz
imul
dec
adc
adc
je
add
movsb
push
mov
dec
ss
xchg
dec
sbb
mov
add
shrl
mov
mov
dec
les
mov
lods
push
xchg
and
call
jno
aad
into
pop
inc
sub
mov
add
cwtl
imul
adc
jmp
pop
and
out
movsb
mov
xchg
add
imul
popf
xchg
fistl
push
int3
sub
loopne
hlt
dec
ss
shrl
bound
ja
add
lds
inc
mov
jne
mov
pop
dec
sbbb
pusha
movsl
fiaddl
xor
repnz
incl
mov
popf
or
call
dec
lahf
push
xor
lahf
lcall
adc
mov
xlat
pop
jnp
fldt
jnp
cltd
lds
leave
popf
add
imul
outsl
ds
sahf
es
jmp
lock
dec
out
inc
pusha
pop
jmp
inc
inc
push
icebp
mov
test
mov
ss
push
call
inc
jecxz
jp
inc
cmp
loopne
enter
mov
repnz
sbb
int3
addl
mov
hlt
xchg
pusha
call
fs
push
pop
mov
repnz
out
push
sarl
push
imul
add
jge
push
cld
lods
and
and
adc
dec
mov
test
push
iret
xchg
outsl
dec
lret
fwait
std
cmp
rolb
adc
add
inc
in
xchg
dec
push
xlat
jp
int
mov
out
aas
dec
push
lods
cwtl
enter
addr16
mov
stc
push
js
adc
mov
mov
jge
fnstsw
mov
je
out
xchg
sub
das
push
jns
jae
xchg
shll
mov
movsb
mov
sub
addr16
subb
out
or
ficomps
add
loope
arpl
fdivs
out
pop
sub
lds
jbe
dec
mov
pop
sub
lcall
nop
jb
add
sahf
xchg
jno
jae
dec
xchg
data16
cmpsb
and
jge
stos
xchg
mov
mov
movsl
sub
add
imul
mov
xor
push
ficompl
xor
frstpm(287
add
movsb
fsubp
sub
scas
hlt
fwait
mov
jecxz
xchg
fwait
test
sahf
jno
sbb
outsl
pop
icebp
das
sub
arpl
cs
int3
inc
test
push
mov
test
stc
roll
loope
fsubl
mov
mov
xor
lret
xchg
insb
in
dec
cwtl
add
push
xor
push
sub
out
mov
cmovne
arpl
fstp
lods
pop
xor
movsl
mov
jnp
outsl
xorb
mov
push
jp
jmp
sbb
out
fnstsw
cltd
in
jmp
push
pop
push
mov
test
fs
popa
insl
rcll
repnz
jns
mov
mov
mov
adc
mov
shrb
and
das
sbb
and
mov
mov
out
adc
xchg
push
xorl
push
out
test
lock
mov
xchg
push
hlt
cmpsl
mov
or
mov
cld
icebp
lahf
xchg
mov
jg
ss
and
fnstenv
xchg
push
stos
sbb
push
ja
push
inc
inc
and
ret
std
mov
inc
test
scas
inc
cli
sbb
incb
mov
mov
add
push
push
stc
mov
push
lock
sbb
add
fwait
mov
lret
nop
imul
sbb
arpl
lock
arpl
in
mov
add
into
xchg
arpl
nop
inc
int
and
dec
mov
mov
idiv
add
stos
cmc
aad
xchg
lock
jle
jno
sti
and
jbe
dec
clc
mov
adc
inc
adc
pop
jb
push
sub
lahf
mov
rcl
imul
icebp
xchg
pushf
ret
test
popa
dec
mov
stos
push
sahf
fcoms
inc
mov
mov
push
outsb
dec
sub
mov
xor
test
push
cmp
je
out
xchg
mov
mov
rcll
push
arpl
inc
scas
out
push
jmp
mov
incb
fyl2xp1
pop
lea
jl
jns
lcall
rorl
fiadds
gs
xchg
int
xchg
out
fstl
lds
pop
loop
test
arpl
push
pop
mov
into
lods
and
divl
roll
mov
lds
jae
sub
dec
decb
cmpsb
add
sarb
ds
mov
insb
xchg
ds
out
test
in
popa
mov
popf
or
mov
sub
push
loopne
mov
insb
gs
or
xchg
sub
mov
cwtl
int3
inc
add
sub
dec
mov
xchg
jmp
imul
shl
lret
inc
sbb
add
sahf
mov
arpl
jnp
inc
mov
fcomp
dec
testl
jp
add
repz
imul
test
sarb
insl
mov
push
pusha
aaa
or
in
xor
adc
and
pop
fwait
outsb
nop
pop
sbb
sahf
mov
inc
push
lds
fnstsw
push
mov
and
jbe
repnz
or
negl
mov
xchg
cmpsl
xor
inc
add
add
fucomip
push
addl
mov
in
dec
push
and
into
in
in
dec
in
orb
xor
mov
and
pusha
or
jge
pop
dec
mov
or
sahf
imul
sub
das
jmp
lret
mov
aas
sub
lods
aad
repnz
cmp
mov
sub
dec
pushf
pop
scas
negb
mov
add
ret
pusha
ret
and
add
rorb
stc
mov
lcall
scas
jle
je
dec
pushf
add
cmpsb
add
daa
lds
sbb
inc
subl
js
arpl
or
je
hlt
psrad
pop
add
jp
into
sar
pop
mov
sbb
ret
mov
ds
lret
xchg
lods
lock
test
pop
add
in
adc
pop
shll
dec
ss
inc
sbb
jmp
out
jmp
repz
xchg
mov
jno
cs
add
mov
sub
sbb
pop
int
jmp
mov
shll
in
jecxz
pop
stc
test
push
lods
or
imul
jae
bound
repz
pushf
je
or
inc
outsl
lods
mov
inc
insb
push
rclb
jae
daa
sbb
bound
cmc
xor
pop
cmpsb
mull
ljmp
xchg
lods
aas
and
movsl
bound
adc
das
mov
aad
sbb
and
dec
jle
push
inc
mov
ds
shl
inc
pop
cmp
ja
jb
ljmp
out
aaa
push
xchg
pop
rcl
sub
and
daa
sub
bound
cs
cli
cld
xlat
mov
or
addl
in
shrb
repnz
repz
cmp
lods
push
mov
pusha
mov
rcll
lcall
xchg
cs
sahf
add
imul
addr16
pop
sbb
loope
xchg
sub
xchg
pop
scas
mov
or
sub
insb
popf
jge
mov
fbld
xor
mov
mov
mov
xchg
scas
insl
lahf
in
cltd
das
xchg
xchg
adc
pop
sub
insl
xchg
push
mov
mov
aad
cmpsl
orl
adc
jle
pop
mov
outsl
shl
xor
std
lock
shr
jnp
xchg
pop
lods
mov
jle
fcmovb
or
mov
push
pop
loop
mov
push
in
fdivr
mov
mov
pushf
xchg
cmp
sub
shrb
into
mov
aam
shr
push
add
jb
test
ja
sti
enter
int
xchg
xchg
lcall
ds
cmp
aam
push
subb
adc
jge
lahf
addr16
sbb
shrl
sub
push
jmp
cli
addr16
adc
xor
lock
jg
dec
and
cmpsl
sahf
push
insl
sub
aaa
adc
insb
addr16
dec
or
xchg
lahf
push
xor
mov
xor
mov
cmp
pop
pop
xor
cmp
ja
mov
insb
mov
shrl
cmpsl
mov
sbb
shlb
mov
adc
cltd
das
add
es
shll
xchg
push
lret
bound
mov
iret
enter
movsl
and
cmp
cld
pop
add
jle
jge
fwait
mov
ror
scas
dec
mov
mov
mov
nop
xor
inc
sub
fcmove
aad
mov
add
ss
mov
clc
or
mov
add
call
jb
jmp
ret
daa
pop
cli
movsb
jns
xchg
push
sbb
pop
lcall
outsb
test
cmpsl
mov
jge
mov
scas
add
xor
fsubs
fwait
or
fwait
push
lds
cmp
sar
test
shlb
in
lods
xchg
adc
add
sbb
xor
jmp
mov
cmp
stos
inc
adc
pop
xchg
jae
jmp
xlat
mov
ja
or
adc
ljmp
mov
dec
je
dec
pushf
pop
outsl
inc
popa
leave
inc
jmp
mov
mov
jecxz
mov
dec
mov
lret
add
and
lea
hlt
adc
dec
cltd
push
iret
scas
adc
aas
les
add
int3
mov
mov
int3
inc
cmp
pushf
ret
mov
subb
fnstenv
cmp
fstp
out
ret
add
mov
sbb
mov
outsl
adc
push
xchg
leave
push
daa
xchg
ljmp
cmpb
jno
pop
ret
cltd
jns
test
and
and
stos
pop
movsl
lods
mov
pushf
jo
call
leave
push
push
nop
and
push
leave
inc
loop
testb
xchg
pop
stc
cmp
daa
sub
ds
jbe
add
mov
xchg
test
call
mov
gs
mov
xor
loop
mov
stos
test
jmp
and
push
in
push
rcl
stc
mov
adc
push
mov
and
jmp
leave
add
stc
lcall
and
dec
add
push
lea
mov
lock
add
ljmp
shll
call
int3
nop
inc
imul
lret
inc
push
cmp
xor
cltd
dec
fwait
xchg
inc
daa
jg
dec
popa
xchg
push
aaa
stos
nop
mov
push
xchg
pusha
mov
adc
lods
mov
loop
movsl
xchg
mov
jb
aam
outsl
xchg
sub
sbb
data16
mov
xor
in
sbb
or
sbb
lea
jbe
xlat
rol
fnstenv
mov
inc
add
dec
sti
daa
mov
mov
dec
pop
shll
or
jecxz
cmp
fsubrs
aas
sub
mov
fisubrs
shrl
sub
and
cmp
or
fcoms
fsubp
in
addr16
xchg
out
pop
mov
psubb
mov
jecxz
insb
repz
rorl
loop
js
push
out
lods
mov
cmp
mov
mov
mov
cmp
movsl
scas
pslld
gs
or
xor
dec
lea
hlt
mov
mov
ljmp
imul
xchg
cmp
fnsave
addr16
pop
push
cmc
fcmovnu
icebp
sub
cmp
lock
add
cwtl
dec
les
daa
mov
xorl
xchg
rorl
xchg
clc
push
or
xchg
cmpsb
fistpl
test
aas
adc
aas
pop
mov
nop
and
sub
sarb
xlat
mov
mov
push
pop
sbb
sti
repz
jne
addl
mov
push
cmpb
adc
add
mov
clc
inc
xor
int
pop
xlat
or
out
mov
lahf
jno
mov
cmp
jne
cmc
ljmp
dec
sarb
out
jl
xor
out
pop
pop
inc
aas
std
sbb
out
adc
sbb
shrb
mov
adc
xchg
push
push
xchg
add
xor
ret
mov
mov
mov
xlat
std
or
mov
js
cmp
xchg
jbe
jecxz
jle
mov
or
lock
fs
pop
and
mov
sub
pop
mov
xchg
and
das
xor
scas
fnsave
xor
mov
shr
sub
std
or
cmp
sub
or
pop
fwait
xor
pop
testb
outsl
stos
fdivrl
pop
rcrb
xchg
loop
lock
mov
push
test
and
push
ret
stos
mov
aam
repz
add
out
mov
add
mov
cmp
addr16
xor
adc
in
sub
or
cmp
lds
repnz
movsl
pusha
or
adc
sbb
sbb
inc
shl
fsubl
jle
jbe
mov
dec
cltd
stos
outsl
fldl2e
lock
in
enter
sbb
xchg
aaa
movb
mov
xchg
ret
add
rclb
jl
mov
or
movl
dec
subb
adc
mov
cld
into
dec
mov
jecxz
or
lds
xlat
mov
nop
mov
sub
jmp
clc
dec
adc
push
jl
or
int3
ss
xor
pop
and
int3
cmp
repnz
mov
imul
mov
sbb
ret
repnz
ret
jb
lcall
or
loop
int
cmp
fidivrs
int
push
das
iret
xchg
add
pop
jl
xor
mov
ret
add
cmpsl
sti
mov
outsl
incb
fldl
xchg
inc
in
pop
ds
xor
cmp
push
dec
cmp
outsl
negl
neg
test
xchg
dec
adc
into
dec
mov
dec
jno
sbb
out
enter
push
or
push
push
push
popa
loope
add
xchg
inc
rcrb
repnz
jne
insb
scas
leave
inc
call
in
sbb
pop
dec
push
loop
mov
cmpsl
ss
les
imulb
pop
icebp
sbb
enter
push
jo
pop
sbb
jbe
mov
push
or
inc
adc
std
dec
or
push
or
daa
pop
push
sahf
das
ja
ret
idivb
or
outsb
mov
xor
daa
sti
mov
pop
sub
jo
dec
dec
and
stc
pushl
pop
js
jecxz
xor
sub
pushf
sbb
push
inc
and
cmp
test
in
or
stos
push
cmp
sbb
adc
pop
xchg
adc
pop
inc
sbb
jmp
frstor
dec
pop
inc
push
cmc
inc
fs
bound
adcb
xchg
mov
call
sub
movb
push
fildl
mov
and
rol
push
int3
cmpsb
cmp
negb
dec
pop
addr16
mov
test
mov
out
mov
inc
and
inc
xor
or
jge
pop
pop
push
jo
sbb
inc
and
jns
lcall
lods
lods
adc
xchg
push
adc
test
mov
xlat
add
rolb
mov
imul
ja
xchg
dec
jg
jl
jb
push
aam
sbb
dec
xchg
push
js
insb
push
pop
jl
call
nop
popa
push
loope
sbb
add
jmp
add
dec
xlat
xchg
jl
xchg
adcb
into
popa
in
je
xor
cld
fwait
pop
sbb
gs
push
loope
pop
into
inc
sbb
pop
push
xchg
ds
ds
outsl
sub
push
in
out
cmp
jecxz
cmpsl
jb
das
mov
sbb
cmp
out
jg,pn
sbb
sbb
repz
mov
rcr
repnz
mov
das
outsb
or
arpl
cmpsb
dec
mov
xor
sbb
mov
pop
xchg
jecxz
out
popa
mov
sbb
insb
add
jne
xor
pop
mov
mov
dec
mov
adc
or
insl
xor
std
sahf
cmp
popa
mov
rclb
sti
sub
ljmp
daa
dec
or
ja
and
mov
mov
or
mov
idivb
fldt
sbb
repz
test
out
mov
subb
pop
pop
push
pop
xchg
insl
jns
packsswb
fwait
cltd
dec
js
in
cmpl
and
mull
mov
enter
push
pushf
xchg
cmpsl
pop
mov
sahf
sub
sbb
in
mov
push
mov
sbb
lock
pop
cmp
loope
je
dec
lods
push
adc
push
orb
js
push
cmp
ja
sub
dec
mov
jb
and
lret
lds
test
mov
or
push
cltd
mov
sub
mov
insl
insl
push
cld
fidivrl
pusha
shlb
fsubl
add
movsl
or
adc
push
cld
in
dec
int3
lret
or
out
or
pop
sbb
sti
push
shrb
xor
mov
ror
mov
or
pop
adc
mov
stc
test
cmpsb
xchg
mov
loope
out
add
push
fiadds
lea
cmp
lahf
decl
subl
dec
std
adc
xchg
and
je
lcall
repz
shll
cld
outsb
aas
lds
push
and
lret
ss
jmp
fdivr
hlt
test
xor
movsb
fstps
sub
pop
xchg
rcrl
lods
lret
mov
scas
es
pop
lock
shll
icebp
pop
sub
into
add
pop
je
shlb
and
push
add
rcr
xchg
cmp
adc
out
xor
out
mov
sahf
cmp
sahf
xchg
call
adcl
dec
jnp
fidivrl
movsb
adc
mov
cmc
xor
jmp
push
mov
inc
lock
adc
add
scas
sub
mov
call
outsl
out
sub
outsl
stos
jns
mov
lcall
movsl
jno
jle
scas
fnstenv
sbb
and
jg
xchg
sti
rolb
call
mov
sub
mov
add
leave
insb
sbb
jns
pop
jbe
lea
das
loope
or
imul
movsb
das
pop
aas
out
xchg
cmp
and
fstpt
idivl
sub
data16
sbb
mov
cli
add
clc
ret
xchg
jno
jae
or
dec
pop
sbb
nop
cwtl
mov
pop
or
and
fisttpl
xchg
out
or
rclb
jle
lahf
jb
inc
std
popa
stos
out
aad
sti
adc
sbbl
sub
je
adc
jbe
dec
adc
cmp
out
cli
cmc
jl
mov
in
es
cs
mov
scas
jo
sbb
iret
sub
add
mov
lods
lods
or
xlat
adc
inc
jmp
pop
iret
call
push
arpl
sub
popf
hlt
scas
inc
dec
inc
loope
sbb
repz
mov
lcall
pop
scas
fcompl
popf
repz
imul
sbbl
shlb
pop
adc
fldcw
lea
or
xchg
pop
inc
aam
mov
ss
stos
dec
mov
ljmp
test
mov
jnp
and
lret
loope
jmp
or
aas
mov
mov
mov
stc
mov
adc
test
pop
inc
dec
loope
fildl
or
out
aam
arpl
mov
push
daa
adc
xor
jnp
cmp
enter
out
xor
aam
aad
and
addb
mov
xor
or
lock
jne
movsl
or
or
cmpsb
mov
xor
mov
insb
adc
lods
rolb
decl
pop
sbb
jbe
dec
mov
cwtl
ja
sbb
jl
pushf
cmp
lahf
popf
mov
out
lret
std
sarl
addr16
mov
xlat
xchg
test
and
or
xor
mov
in
sbb
sbb
paddb
push
dec
shll
ret
or
sbb
movsl
insl
pop
xor
shll
xchg
jge
cmp
nop
inc
inc
xor
dec
jnp
mov
cli
inc
pop
lahf
popf
movups
push
pop
out
aaa
pop
test
sahf
test
mov
call
pop
in
test
jne
add
outsb
stos
mov
aaa
inc
push
xor
loope
outsb
pop
xchg
int3
add
popa
pop
mov
cltd
shll
cmp
cmp
daa
xor
aas
push
ja
push
sbb
lahf
cmp
ret
pop
push
mov
scas
fisttps
xlat
sbb
push
ror
movsl
sbb
insl
aam
jmp
mov
pop
lock
arpl
pop
inc
orb
sub
ja
sub
or
testb
andb
mov
in
insl
sbb
mov
jae
sti
mov
out
jo
push
outsb
orb
push
pop
push
dec
mov
dec
push
dec
push
fmulp
jge
xchg
mov
stos
mov
cmc
xor
jmp
sbb
mov
mov
jnp
adc
inc
dec
cmpsl
and
jmp
inc
rcll
sub
imul
orl
movsl
ret
into
aas
nop
sub
lea
sti
jno
push
xor
cltd
mov
mulb
andl
out
scas
pop
aas
jecxz
ljmp
pop
sbb
mov
je
xlat
mov
scas
cli
sub
daa
je
sub
dec
cmpsl
mov
mov
stos
cmp
sbb
mov
and
push
mov
inc
ret
stos
test
jb
ret
add
cmp
movb
shl
push
call
lds
pop
cmp
add
cmp
cmp
jge
jmp
adc
data16
mov
pop
push
sbb
pop
sub
not
loope
insl
jno
imul
rcr
cs
sahf
adc
and
dec
lcall
adc
push
mov
inc
ret
into
xor
dec
xchg
inc
scas
mov
pop
ljmp
mov
xor
cmp
sbb
into
dec
sub
scas
pushf
pop
jl
inc
mov
clc
xlat
movsb
lods
outsl
cmp
dec
sbb
test
xlat
mov
or
mov
and
mov
inc
xchg
adc
and
arpl
popa
mov
movsb
and
dec
sbb
mov
push
movsb
push
shr
add
in
push
lea
pop
sbb
ficoml
das
icebp
push
pop
inc
mov
xor
xchg
push
xlat
shll
outsl
push
enter
xchg
movsb
pop
dec
push
jge
push
pop
aas
jge
push
lods
cmp
into
arpl
incb
xchg
add
les
cltd
movsl
shlb
mov
xchg
cmp
cmp
jecxz
jmp
push
pop
cmpsl
js
fmul
idiv
cmp
sbb
xor
xor
xchg
mov
stos
jecxz
out
add
popa
jnp
aam
inc
inc
lret
or
loopne
xor
cld
insl
iret
arpl
hlt
out
iret
jns
fisubrs
pop
shl
xor
test
jmp
stos
repz
clc
push
or
call
push
je
imul
push
push
adc
repz
jae
inc
mov
push
xchg
mov
sarb
pop
cwtl
xor
mov
je
jl
mov
mov
loopne
xor
into
stos
in
jl
fxch
cld
cmpsl
push
sub
lret
and
inc
mov
mov
out
test
fwait
mov
or
pop
mov
dec
insb
pop
jge
push
pop
push
and
out
xor
dec
pusha
add
push
mov
mov
aad
push
inc
jmp
popa
pop
mov
ljmp
jbe
inc
push
ljmp
xlat
into
sbb
or
dec
xchg
loopne
dec
xchg
rcrl
sub
jns,pt
loopne
sbb
cld
add
insb
mov
sub
add
aaa
arpl
es
cmp
fldl
ficoms
les
loopne
ret
pop
pop
mov
sbb
push
popa
pop
mov
imul
and
add
fdiv
xor
jo
dec
ret
jns
idivl
mov
sbb
mov
mov
dec
and
sbbl
outsb
mov
pushf
pop
je
std
adc
pop
inc
iret
int
cwtl
mov
mov
add
dec
cwtl
arpl
mov
dec
adc
scas
xchg
sub
inc
repz
jo
inc
test
or
mov
xor
mov
jp
mov
xchg
push
inc
faddl
pop
push
mov
call
mov
repnz
and
mov
sbb
lret
xlat
dec
lods
fyl2x
test
sbb
sub
pop
sbb
sti
notb
jb
fstps
dec
in
fwait
loop
mov
ds
mov
xor
out
outsl
ljmp
das
cmp
lcall
push
cmp
mov
mov
or
rorb
daa
into
push
mov
cmp
jo
dec
inc
and
shlb
push
aam
lret
repz
cmp
adc
mov
repnz
lret
push
loop
jecxz
aas
les
sub
jns
lock
mov
sbb
mov
mov
pop
cld
mov
iret
inc
inc
pop
fcmove
jbe
aam
mov
pop
or
jae
inc
add
xor
mov
xor
jns
mov
movsl
data16
adc
mov
test
cs
mov
cli
or
fcoml
pop
xor
test
out
nop
pop
mov
sahf
clc
lcall
xor
add
hlt
mov
jecxz
pop
fidivrs
inc
mov
into
push
push
cltd
xor
pop
in
pop
in
xor
in
outsl
add
pop
sbb
sbb
lock
push
mov
test
add
cld
xchg
sub
mov
or
adc
les
frstor
ficomps
out
xchg
bound
shlb
jmp
into
mov
lock
lcall
cmc
xchg
arpl
enter
mov
xor
faddl
mov
jp
push
cmp
push
andb
inc
sub
sarb
push
into
lods
inc
test
and
or
jne
adc
into
adc
js
lret
fisttps
push
in
cltd
and
jne
mov
sub
mov
or
mov
dec
addr16
mov
or
xlat
mov
sub
mov
xchg
add
cld
lahf
pop
or
inc
jbe
cli
sub
aas
mov
or
out
jns
cmpsl
fisubrs
movl
mov
sub
insb
push
lret
and
inc
dec
xor
or
pop
es
repz
push
xchg
mov
je
cmc
iret
mov
and
aas
pop
jp
fsubr
daa
inc
jns
adc
popa
lret
pushf
push
dec
jne
cmp
xchg
inc
xchg
push
add
mov
mov
or
jmp
jg
sarl
pusha
mov
stos
xchg
cli
mov
int
mov
mov
fwait
imul
sub
dec
inc
jecxz
mov
movsl
adc
xor
loopne
les
test
sbb
cmpsb
mov
inc
sub
jmp
and
scas
mov
dec
mov
out
and
aad
imul
gs
jmp
insb
repnz
cmc
jp
pop
out
inc
fisttps
add
rcrb
repz
xor
push
jns
int3
xor
add
out
pop
lahf
imul
dec
or
or
inc
add
mov
cmpsl
sti
scas
sbb
ljmp
or
dec
in
push
adc
std
lahf
jmp
xorl
sbb
dec
xor
fimull
add
shld
jl
mov
aam
dec
adc
xor
add
stos
push
std
in
str
push
out
sbb
movsl
cmp
loopne
fstpl
mov
push
in
mov
out
into
out
cmp
mov
or
pop
shrl
rcrb
sub
scas
xor
scas
cld
mov
cmp
xor
xor
jbe
jno
dec
cmp
roll
scas
lret
xchg
stos
imul
out
jmp
push
pop
push
por
inc
inc
xchg
mov
jecxz
mov
mov
mov
inc
adc
add
test
mov
popa
sub
pop
adc
and
mov
mov
rcrl
xchg
icebp
sub
mov
adc
inc
cmp
xor
aas
push
test
xor
push
cmp
push
psrad
xor
cltd
daa
jno
or
repnz
pop
mov
mov
jne
rcll
pusha
pop
nop
mov
mov
or
dec
mov
sub
pop
xchg
lock
sbb
fmulp
inc
mov
push
std
xlat
es
mov
jb
xlat
xchg
or
push
xchg
mov
jne
add
and
arpl
xchg
sub
push
mov
push
ret
test
mov
arpl
pop
lea
sub
les
outsl
popf
dec
dec
cwtl
dec
fsub
out
in
xchg
insb
jl
stos
test
mov
xor
mov
sub
xor
in
pop
push
and
sub
pop
stos
fs
fwait
jmp
inc
sarb
scas
xchg
sub
sub
xchg
test
lods
dec
cs
imul
aaa
cmp
mov
push
int
dec
rcr
dec
lock
pop
stos
mov
dec
pop
ljmp
out
nop
mov
rolb
push
dec
rolw
test
push
jno
ret
mov
sub
rep
data16
dec
data16
aam
cld
and
arpl
and
cli
mov
xor
cs
pop
jmp
mov
inc
xchg
fidivs
pop
mov
aad
dec
loope
jb
jno
jecxz
notl
sbb
xchg
test
cmp
cld
dec
gs
dec
leave
adc
inc
test
aaa
adcl
roll
hlt
push
out
mov
mov
push
cmpsb
xor
js
cmp
stc
jmp
hlt
jge
pop
pop
aaa
subb
push
mov
adc
into
cmp
cmp
in
and
dec
or
fbstp
aaa
xor
insb
sbb
push
jae
inc
in
push
mov
add
into
pop
pusha
xchg
imul
outsb
fstpt
sahf
loop
push
jb
ficoml
cwtl
mov
mov
inc
roll
in
fsubl
pop
xor
xchg
ror
ja
pop
dec
stc
outsl
das
pop
ret
mov
and
pop
and
icebp
sbb
mov
cmpsb
cmpsl
in
rolb
mov
cwtl
push
call
xor
mov
xor
cwtl
leave
sar
bnd
xchg
cmovbe
cld
inc
ficomps
ds
adc
dec
dec
mul
insl
jg
ds
adc
mov
xor
push
xor
clc
pop
test
push
push
shll
add
jo
push
mov
stos
je
sbb
xor
loop
fisttpll
mov
int3
sbb
les
jnp
int
outsl
lret
dec
inc
mov
mov
divb
iret
clc
scas
cmp
or
and
adc
outsb
add
pop
sbb
pop
ds
lds
push
mov
sub
sbb
mov
bound
stos
les
xchg
or
sub
pop
test
mov
pop
cmc
push
jo
sbb
sbb
xchg
inc
in
nop
adc
sub
pop
fcoml
cltd
lods
mov
mov
subl
loopne
mov
sub
push
xchg
test
pop
shlb
pop
cmp
cltd
push
loop
jbe
sub
xchg
and
sbb
cltd
jge
mov
mov
sub
sbb
mov
cld
cmc
mov
dec
loope
mov
cmp
icebp
mov
dec
imul
and
je
xchg
fwait
out
in
xchg
inc
cmpb
repz
insl
mov
jmp
jl
mov
inc
movsl
xor
and
lahf
sbb
xor
jne
cmp
adc
out
adc
sbb
mov
in
sub
jmp
in
push
pop
ret
xchg
sarl
fists
ret
iret
or
mov
es
adc
fdivr
fnstenv
in
repnz
add
mov
jl
mov
jmp
repnz
jns
shll
ljmp
cwtl
and
sbb
mov
xor
ret
cwtl
add
cmp
out
hlt
mov
outsb
push
xchg
push
imull
dec
cmpsb
jns
dec
mov
adc
and
popf
enter
cmc
mov
jno
clc
dec
push
jb
push
aad
mov
sub
sub
ror
mov
jg
nop
test
into
int
test
test
push
dec
push
rcrl
pop
mov
xchg
or
movsl
loopne
adc
add
inc
dec
sub
cmp
lods
add
aas
pusha
les
sbb
pop
mov
mov
ds
cltd
loop
dec
mov
flds
lods
sbb
jbe
shrb
scas
aad
gs
loope
pop
push
inc
es
cmp
sub
lds
dec
add
lahf
sub
jmp
ficomps
das
mov
imul
dec
dec
pop
mov
shlb
shrl
sbb
imul
dec
scas
pushw
push
lahf
cwtl
xchg
adc
mov
movsb
dec
popf
dec
pop
push
scas
fsts
pmaddwd
pop
adc
data16
jmp
popa
jnp
daa
mov
fs
lcall
push
sbb
push
jnp
outsl
xor
mov
ficomps
mov
inc
jo
ret
scas
ja
mov
out
xchg
jne
xchg
mov
data16
in
cmp
js
lock
movsl
decl
hlt
test
cmp
stos
stos
ret
lret
sbb
and
popa
cmpsl
fisttpll
or
inc
fiadds
xor
scas
sbb
arpl
cwtl
cs
or
cmpb
fldt
sub
xchg
xor
hlt
dec
sub
scas
ss
mov
inc
adc
loopne
or
addr16
call
add
imul
cmc
mov
mov
ja
insl
xchg
das
and
mov
fsts
sbb
js
je
nop
cld
cltd
dec
loopne
push
and
pop
mov
pop
and
pop
push
imul
or
int
pop
std
cli
loop
sbb
mov
int3
sbbb
mov
movsb
jmp
daa
or
push
popf
mov
ljmp
mov
dec
int
pop
nop
sarl
and
xor
lret
sbb
in
inc
pop
lcall
lock
loope
movsb
xchg
adc
xor
pop
icebp
adc
mov
pusha
call
rolb
jmp
out
xlat
mov
idiv
mov
and
jle
cwtl
pop
mov
sbb
inc
movsl
mov
add
ja
movsl
mov
or
jg
in
pop
xchg
push
cs
adc
mov
outsb
push
xchg
pop
cmp
call
mov
jne
inc
add
push
mov
push
lgs
in
fdivs
outsl
int3
ljmp
repnz
das
push
xlat
jnp
mov
sarl
jecxz
cli
mov
mov
test
jmp
mov
pop
sahf
adc
inc
test
incl
jbe
adc
jnp
sbb
loope
adc
aam
xlat
push
mov
stos
inc
cld
test
push
int3
pushf
xchg
ljmp
fcomp
pop
out
mov
and
mov
jg
and
rolb
nop
mov
add
gs
pop
fxtract
jae
insb
testb
or
and
aam
insb
negl
dec
xor
mov
and
sub
lock
mov
xor
lock
test
int3
and
inc
and
xchg
push
cmp
movsb
dec
mov
stc
dec
mov
das
int3
into
rorl
imul
xchg
xchg
and
mov
adc
jbe
fcmovbe
jecxz
out
jle
int3
or
mov
das
push
jo
mov
jle
scas
ljmp
out
pop
scas
push
dec
std
leave
ret
stos
xchg
les
adc
mov
inc
pop
push
mov
xchg
push
pop
push
pop
out
data16
and
cmp
out
xor
nop
stc
cwtl
sarl
std
enter
popa
and
mov
sbb
rclb
mov
and
imul
jg
scas
mov
jecxz
push
repz
pop
fadds
in
xor
stc
int
lea
dec
dec
lret
es
shll
scas
stc
in
dec
ss
jnp
test
roll
pop
pop
lea
jmp
ret
xor
sar
js
xor
inc
jne
das
pusha
push
out
addr16
mov
test
cmp
jns
jae
jmp
push
fwait
jp
pop
es
fisubrl
arpl
sub
pop
xor
in
push
rcrb
insb
xor
sbb
and
inc
lods
aam
push
idivb
fisubrs
movsl
add
repnz
inc
mov
add
cmp
pop
mov
push
add
fildll
dec
stos
or
gs
sbb
test
and
loop
ret
pop
repnz
loopne
or
pop
push
dec
aas
out
std
insb
and
mov
sub
cmp
dec
adcl
mov
jbe
data16
jmp
and
lret
mov
jmp
ds
xchg
fcmove
mov
data16
mov
xchg
repz
movsb
int
ljmp
mov
test
xchg
pop
jl
push
ret
shll
mov
iret
fbstp
sbb
jl
and
push
movsb
xlat
psrlw
pop
xor
ret
jp
repz
mov
inc
cmpsb
es
xchg
jnp
or
ret
mov
push
out
xchg
push
cld
add
add
loope
mov
adc
cli
sbb
inc
dec
adc
sbb
mov
add
dec
mov
dec
mov
ss
jne
in
jbe
fsubrl
es
sbb
imul
mov
xchg
jp
mov
inc
sub
in
mov
or
jecxz
sti
enter
xchg
xor
sahf
std
std
inc
lcall
repnz
jns
int
sub
lods
and
cmpsl
addr16
push
fbstp
dec
mov
hlt
std
lret
in
bound
js
push
fs
add
test
sbb
add
dec
mov
sub
sahf
mov
jbe
fs
add
lea
lds
adc
fisubl
mov
iret
aam
sub
aad
mov
inc
lock
dec
scas
repnz
shlb
jbe
popf
mov
mov
xor
jno
add
adc
mov
pop
lea
test
inc
fwait
bound
xchg
daa
cmp
mulb
inc
add
cmp
sbb
xor
pop
jno
imul
js
mov
scas
pop
lea
dec
and
call
dec
pop
push
sub
add
mov
add
pop
push
out
das
jne
push
out
cmc
or
xlat
xlat
or
stos
adc
in
loopne
mov
shlb
inc
jle
popl
test
mov
jle
add
je
rclb
push
shrl
xchg
scas
lss
lahf
cmpsb
loopne
filds
xchg
and
mov
add
and
aam
jne
cmp
mov
pop
push
loope
jmp
cmp
pop
mov
xchg
leave
jp
dec
xchg
dec
leave
push
sub
mov
or
sbb
jae
or
push
or
test
push
pop
loope
movsb
xor
mov
push
dec
mov
lods
cwtl
add
cs
adcl
icebp
cmp
aaa
or
rcll
add
xchg
stc
ss
shlb
daa
enter
pop
hlt
int3
sarl
adc
hlt
mov
lret
xchg
cwtl
sbb
jno
out
xor
cmp
jno
loop
jecxz
fwait
or
adc
mov
xlat
add
cmp
adc
insb
loope
insl
xorb
adc
push
movsl
decl
push
sar
inc
cmp
ret
in
daa
mov
fmuls
mov
fdivrl
mov
cmp
jmp
mov
imul
mov
push
or
lods
enter
xchg
ds
movsb
imull
std
imul
xlat
test
lods
mov
lret
jg
test
mov
out
inc
xchg
subl
pminub
push
lcall
ss
int
out
cwtl
dec
imul
pop
adc
push
test
mov
bound
add
cmp
xor
dec
jmp
push
mov
and
xor
jae
xlat
les
xor
popf
adc
push
dec
stc
xchg
lret
aaa
fdivrs
push
cmpsl
fisubl
stos
fstpt
scas
fldcw
or
add
lds
or
cmp
rolb
xchg
jnp
inc
push
scas
cmc
pop
cld
cmp
cmpsb
ffreep
arpl
xor
rclb
cld
out
sbb
stos
adc
imul
jge
jmp
mov
in
mov
xor
inc
pop
push
inc
adc
inc
mov
xor
cmp
jbe
test
outsl
push
jno
xchg
nop
popf
outsb
mov
mov
xchg
add
fcomps
sti
dec
or
jae
mov
mov
fidivl
dec
outsb
and
pop
insb
and
outsl
pop
lea
inc
repz
out
fdivs
cltd
movsb
rorl
mov
push
aaa
jno
mov
int3
inc
sar
lcall
push
in
mov
sbb
pushf
iret
loope
aas
jne
xchg
imul
xchg
or
cmp
jle
pushf
jns
jmp
into
push
pop
loope
push
roll
inc
adc
inc
cmc
sub
push
in
mov
es
lds
lahf
pusha
mov
adc
xchg
scas
sbb
adc
mov
mov
mov
mov
sarl
mov
mov
loop
add
lcall
das
aam
lea
shlb
rcrl
les
inc
mov
mov
xlat
lcall
popf
lcall
and
std
inc
lahf
pop
push
int
movsl
adc
cmp
outsl
dec
in
daa
push
adc
or
pop
mov
addr16
je
lret
loope
inc
imulb
out
sub
outsb
push
ljmp
jo
sbb
mov
pop
cmp
sbb
scas
cmp
xor
pop
aaa
or
sub
push
cmp
ljmp
mov
iret
movsb
insb
iret
push
pusha
clc
jle
mov
das
test
sahf
stos
shr
imul
add
pop
mov
loopne
add
mov
call
into
push
cs
notl
xor
sarl
adc
cmpsb
mov
or
add
cmc
sbb
lahf
rclb
pop
hlt
xor
lahf
imul
jno
cmp
lods
adc
mov
sub
fadds
insl
jae
stos
aam
insb
mov
hlt
enter
and
ret
adc
jmp
aam
sbbl
std
in
jg
out
dec
mov
fsubs
aas
fs
cltd
cmpsb
dec
lret
xor
xchg
daa
stc
pop
lahf
out
mov
xor
data16
iret
stos
idivl
aad
sbb
movb
cmc
mov
jne
call
fwait
mov
fsubl
and
filds
adc
ds
add
pop
testb
xor
frstor
mov
repnz
loopne
mov
and
dec
sub
enter
or
sub
mov
addr16
pop
mov
repnz
cmc
xor
dec
jns
outsb
dec
aad
movsb
mov
push
stos
fsubr
jae
xor
scas
and
push
xchg
and
adc
cmp
lret
pop
ret
dec
inc
jge
sub
push
xor
stc
dec
sub
push
or
xor
dec
jno
jne
push
mov
fsubl
sbb
mov
inc
jno
int3
jno
adc
jae
stc
movsb
mov
jo
jmp
cmpsl
mov
xchg
push
dec
fs
loopne
jp
and
leave
adc
cltd
movsb
sub
jns
jne
xchg
mov
push
dec
xor
push
ds
insb
clc
inc
push
iret
lret
xchg
mov
lcall
mov
popa
inc
nop
mov
inc
je
out
mov
loope
push
ljmp
xor
out
push
xchg
xchg
sub
and
mov
push
les
mov
imul
imul
mov
inc
push
out
pop
or
adc
inc
xchg
mov
icebp
jno
mov
dec
cmp
inc
std
ret
ss
mov
jae
test
and
xor
mov
fistpll
sub
orl
cmpl
ja
sbb
mov
lret
mov
fidivs
les
pusha
cs
lret
jne
push
lods
imul
push
mov
int3
psubd
lcall
xchg
cmc
lock
in
inc
jae
inc
shll
shll
insb
call
fmull
adc
or
mov
add
loop
test
out
vmovdqa
mov
xchg
xchg
stos
cmp
movsb
push
lods
lock
pop
xchg
addr16
shll
sbb
cmp
sbb
outsl
roll
add
scas
or
scas
loope
xchg
enter
aad
pop
mov
mov
or
aas
mov
inc
daa
fwait
leave
or
jmp
test
cltd
and
rcrb
push
cwtl
andb
jl
cld
sbb
mov
enter
scas
imul
mov
or
and
std
mov
lahf
into
pop
sub
mov
mov
xor
clc
sbb
lcall
cmpsl
sub
inc
imul
test
or
mov
adc
aaa
sahf
pop
repz
cmpb
ljmp
aaa
jne
lret
mov
add
inc
dec
cmp
or
popa
mov
aas
cs
mov
in
and
sti
repz
push
out
jb
out
xchg
mov
xor
mov
fsts
lds
cmp
stos
xorl
scas
fisubrl
inc
leave
cmpsb
repnz
pop
pop
std
sub
and
test
mov
mov
cmp
outsb
inc
jns
jle
mov
jmp
mov
rclb
add
push
pop
clc
ja
push
pop
sub
addb
jp
adc
add
mov
add
mov
xchg
adc
mov
cmpl
rcr
and
outsl
stc
adc
std
repnz
mov
add
imull
je
or
enter
push
lds
fldcw
sti
in
lret
and
cmp
push
xor
pop
xlat
mov
repnz
in
sbb
std
pop
fwait
lretw
cmp
inc
pushf
scas
shll
adc
push
cmc
cmc
add
outsb
shll
dec
mull
ret
dec
jmp
push
test
sahf
cld
push
rcll
fcomps
sub
sub
bound
inc
jne
and
movsb
and
js
js
out
pop
add
jl
jo
popa
insl
and
xchg
mov
jge
jp
cmp
or
xor
arpl
or
cwtl
imul
ss
cmp
mov
int
mov
cmp
aam
fstpt
fsubrl
daa
cmpsl
fcompl
lret
imulb
xchg
pop
ret
jg
jmp
add
xchg
sbb
xchg
je
xchg
lahf
jmp
mov
xor
iret
bound
add
int
push
lock
mov
jbe
aas
data16
xorl
push
pushf
fstl
subb
pop
push
mov
idivl
imul
and
test
push
sahf
into
mov
and
movsb
jp
jbe
sar
scas
xor
sbb
lock
xchg
push
movsb
mull
int
or
rorl
xor
xchg
pop
sbb
loope
cli
lret
xchg
mov
add
push
sahf
and
xlat
repnz
mov
xlat
movsb
xor
xchg
movsl
or
int3
mov
cmp
loopne
mov
lahf
sub
cmpsl
or
jl
mov
xchg
xor
lds
jle
jne
mov
xchg
push
mov
push
aad
dec
or
nop
lock
fcoml
rcrl
inc
fld
incb
add
stc
jb
xchg
imul
jmp
imul
into
cli
jne
test
pcmpgtb
jp
lods
sub
dec
stos
add
inc
pop
cmp
scas
sbb
and
enter
inc
adc
aam
lock
out
push
mov
insl
sub
push
imul
lret
shll
test
push
arpl
imul
mov
jle
call
dec
cmp
xorl
adcb
sahf
cmpps
stos
int3
adc
out
cmp
hlt
call
nop
call
xor
ret
adc
cld
xor
lahf
adc
lods
mov
pusha
out
sti
fs
adc
pop
xor
loop
lret
stos
fstpt
pop
mov
cmp
mov
mov
popa
mov
jecxz
xchg
pop
leave
js
insl
xchg
push
mov
nop
in
add
sbb
xor
xchg
lret
jnp
jne
pop
xor
in
lods
insb
cmp
add
jp
xor
push
sub
imul
int
xor
dec
sub
aaa
xchg
jbe
ds
outsb
add
fidivl
clc
bsr
xchg
mov
out
arpl
jnp
mov
lods
mov
stc
xchg
xchg
cwtl
add
leave
sahf
xchg
les
repnz
repz
cmpsb
aas
loopne
jo
xchg
lds
mov
je
jns
cwtl
add
sahf
outsl
loop
xor
xchg
adc
fldt
and
inc
mov
enter
ja
cli
mov
mov
mov
fcmovu
pop
dec
adc
lods
pop
bound
repnz
inc
movsb
lret
cmp
xchg
cmp
repnz
outsl
scas
inc
lret
add
movsl
jl
inc
lahf
jmp
sub
outsl
jecxz
mov
outsb
gs
std
das
jne
out
shlb
push
mov
lcall
test
push
jo
xchg
pop
xor
sarb
pop
mov
xchg
mov
xor
jp
xchg
sub
cli
mov
jl
dec
ret
sbbb
cmp
xor
cmp
jmp
mov
jbe
aas
fcmovnbe
movsl
xchg
ret
jno
xchg
movsl
aaa
jl
mov
adc
or
pop
cmpsl
push
mov
pop
hlt
mov
sti
je
sti
iret
cmp
add
je
jae
lret
stos
xchg
sub
mov
mov
sbb
pop
stc
jns
and
dec
ret
int3
xchg
mov
cs
mov
aad
stc
ss
and
cmp
pushf
mov
mov
add
jnp
push
les
in
div
add
ja
mov
sub
ds
add
imul
add
mov
xor
dec
inc
lods
sti
push
adc
xor
sbb
cmp
shrl
add
xchg
mov
mov
mov
or
xchg
sbb
mov
dec
lods
push
inc
and
test
inc
call
lods
movsl
scas
out
lea
dec
std
jmp
movsb
dec
or
pop
out
bnd
mov
loope
out
jge
sub
push
mov
push
decl
or
popa
xchg
mov
mov
push
sbb
fisubrl
pusha
sbb
stos
cmp
cs
ljmp
out
add
cmp
dec
sbb
adc
pop
adc
ret
sbb
xchg
xor
push
xor
adc
out
mov
out
arpl
imul
pushf
xor
mov
sbb
repnz
in
imul
xor
push
push
ss
adc
add
hlt
enter
dec
pushf
lea
and
movsl
inc
xor
repnz
mov
jae
cmp
dec
sti
mov
enter
movsl
pop
sub
push
xchg
ja
mov
int3
cmp
xchg
dec
test
jbe
mov
shufps
outsb
jle
test
std
mov
mov
cmp
in
inc
ss
sub
inc
cmp
in
nop
dec
movsb
jecxz
mov
icebp
xor
pop
clc
add
and
xor
sti
pop
push
int3
or
lods
add
xchg
stos
jmp
lea
call
or
sub
dec
sbb
ljmp
in
xor
xchg
addr16
test
outsl
hlt
xor
ds
das
aad
scas
xor
dec
jno
frstor
std
test
out
jns
les
mov
cli
pushf
lds
popf
fsubs
popl
mov
jmp
dec
cwtl
add
fdecstp
fs
mov
xchg
shl
xor
ficompl
jo
xchg
popf
incl
push
lret
mov
js
add
scas
xchg
mov
adc
dec
xor
mov
outsl
mov
mov
sbb
shll
xchg
xchg
loope
movsb
mov
pushf
test
push
movsl
movzbl
jns
adc
pop
sub
sub
js
jge
inc
cmp
push
push
mov
jg
or
inc
inc
repz
mov
mov
or
add
sbb
sub
sbb
xor
movsb
push
dec
in
mov
cs
adcb
lods
mov
sub
inc
mov
cmpsl
adc
data16
fstps
mov
dec
or
testl
add
out
adc
inc
sbb
dec
out
dec
stos
lods
jns
mov
icebp
push
lds
xorb
inc
test
add
ficoms
daa
cmc
ret
sub
cltd
in
roll
xchg
pop
xchg
xor
mov
cmp
icebp
jge
enter
imul
mov
insl
push
scas
fdivs
push
aas
mov
sbb
test
or
jb
xchg
in
cmp
jnp
sub
mov
outsb
and
test
pop
cwtl
aaa
xchg
stos
ret
lret
test
shll
test
add
sbb
ds
push
lahf
dec
pop
and
scas
incb
mov
dec
sbb
iret
rolb
add
pop
faddl
mov
sbb
add
sub
outsb
and
jge
jbe
lret
repnz
jo
push
into
stos
insb
sbb
or
lods
stc
push
sahf
mov
or
lods
jl
dec
insl
movsl
push
push
inc
stc
cmp
cmp
jns
xchg
out
es
pop
inc
jmp
out
sub
mov
pop
push
sub
cmpsb
int
sub
cmc
cltd
loopne
and
sbb
je
jns
xchg
jecxz
fdivs
addr16
mov
bound
outsb
sbb
or
pop
jns
jecxz
gs
push
xor
cmp
xor
imul
jge
lahf
aas
cmp
rorl
out
std
jae
mov
jle
loop
arpl
lods
loopne
xchg
cltd
mov
or
push
icebp
daa
add
or
or
push
mov
mov
lock
inc
xorb
pop
xchg
lods
pop
inc
jno
sub
ss
imul
popa
nop
push
push
and
mov
pop
js,pn
push
js
jecxz
clc
mov
sub
ds
fldenv
aam
into
test
cli
cwtl
popf
xorl
ffreep
xchg
lods
push
cmpsl
inc
call
jno
fmuls
imul
add
and
pop
orb
loop
and
enter
sub
push
push
mov
pop
and
mov
xchg
in
lret
out
pop
clc
out
incb
xchg
rcll
push
mov
xchg
in
push
mov
jl
fsubrs
push
rcr
adc
or
push
xchg
loop
xchg
test
scas
mov
pop
and
loopne
iret
pusha
jbe
stos
lcall
inc
mov
sti
add
cmc
mov
mov
aas
mul
adc
xchg
cli
out
xor
popa
inc
mov
sbb
mov
mov
negb
jge
xor
or
loope
pop
ret
mulb
clc
decl
sbb
aaa
scas
fbld
mov
cwtl
mov
into
ds
push
in
adc
icebp
imulb
inc
dec
cmpsl
jg
ret
xchg
push
mov
faddl
lea
fcmove
cmp
push
lret
data16
mov
sbb
inc
mov
stos
fwait
adc
nop
mov
or
cmc
adc
cmp
int3
xchg
jnp
negb
fcmovne
dec
push
jg
aam
xor
loopne
mov
iret
jno
shrl
adc
mov
add
mov
movsb
jl
cmpsl
jbe
add
sarl
sbb
in
xor
mov
mov
fisubs
mov
sbb
leave
dec
popf
cmc
push
iret
dec
jge
push
jp
test
ja
popf
cld
jmp
jns
cmp
das
cmpsb
sbb
or
cmpsl
mov
push
andb
xor
ljmp
dec
xchg
add
scas
jecxz
jb
loop
jo
testl
imul
pop
xlat
aam
lcall
mov
out
pop
add
mov
mov
xor
cmpsb
js
inc
mov
cmp
fsubs
sbb
mov
mov
mov
lock
mov
push
xor
into
sub
aad
pop
pop
stos
sahf
mov
stos
mov
aam
jmp
push
cmc
mov
call
inc
jo
adc
fcmovu
jo
fisubl
out
xchg
add
cmp
pushf
jle
and
sub
lds
adc
addr16
or
pop
pusha
leave
pop
and
out
push
sbb
out
test
sahf
lods
test
dec
out
aad
push
int
pop
rclb
pop
fiaddl
or
adc
fs
test
aaa
push
sarl
fnstenv
sbb
repnz
jp
roll
xchg
jne
popa
rcl
ljmp
sarl
cmc
push
or
cmp
sbb
pop
jge
incb
mov
jo
and
xor
orl
jl
lcall
aad
sarb
lret
les
and
pop
js
orl
cmc
outsb
shrb
jb
test
pop
xor
cmpsl
jns
sbb
call
mov
or
in
enter
movsb
mov
aaa
adcb
jl
rorb
pop
push
pop
sub
xchg
adc
enter
call
mov
push
mov
in
jae
imul
xor
or
adc
mov
inc
pusha
loope
inc
sahf
outsb
mov
fwait
or
stos
dec
test
aaa
push
pop
outsl
push
mov
outsl
cmp
scas
pop
inc
imul
cmp
adc
pop
sub
icebp
ja
mov
inc
jae
xchg
adc
enter
and
shrb
xlat
xchg
fwait
pop
push
pop
adc
inc
xor
rcrl
cld
sbb
fnstsw
cli
repnz
dec
test
stos
and
loop
sub
loope
out
push
in
mov
push
push
pusha
or
sub
cld
jb
mov
scas
adc
cs
dec
jg
andl
imul
sub
pop
daa
bound
mov
gs
xor
insl
push
pusha
aam
in
mov
stos
inc
cltd
jne
fisubrl
dec
or
das
sbb
mov
pusha
sbb
dec
lahf
cs
add
jecxz
xor
cmpsl
lret
outsl
add
jb
icebp
aaa
movsb
or
mov
jp
dec
and
into
inc
sahf
incb
or
add
mov
in
mov
push
jbe
jmp
sbb
inc
xchg
cmp
and
pop
mov
test
adc
sbb
rolb
pop
je
mov
jle
lret
call
loopne
sarb
sbb
fldcw
adc
xchg
adc
clc
or
cs
cmpsb
call
negb
pushf
popf
fsqrt
mov
inc
jmp
fwait
jbe
pop
pushw
xlat
sbb
jge
mov
out
in
aam
mov
mov
sar
or
pop
dec
les
stos
popf
cli
lds
mov
dec
mov
icebp
xchg
inc
push
in
jnp
pushf
imul
pop
jne
aas
lds
jle
adc
sbb
inc
mov
in
inc
xor
cmpsb
ljmp
aad
lahf
fisubrl
jge
xor
aad
and
mov
adc
add
cmpsl
jb
lods
xchg
pop
sub
leave
jne
mov
incb
and
dec
out
gs
test
pop
and
fimuls
loopne
xchg
sbb
xchg
sub
enter
add
js
inc
sub
mov
xor
imul
lods
adc
loope
jbe
jmp
cmp
rcr
push
loopne
push
lock
imul
cmovo
out
lds
into
xchg
pop
cltd
mov
adc
lret
lret
imul
dec
xchg
test
cld
aad
mov
cmc
jg
pop
into
add
xchg
inc
ret
into
jp
add
out
pop
sbb
jns
and
sub
mov
loop
int3
hlt
push
pop
js
sub
inc
push
inc
inc
in
sbb
clc
fwait
add
call
xchg
xlat
xor
xor
xchg
mov
pop
mov
push
mov
loope
stos
imul
je
imul
popa
aam
jo
inc
dec
dec
jbe
xorl
mov
adc
pop
ds
sub
lahf
mov
lods
adc
shrl
mov
xchg
xor
mov
ficoml
or
stos
clc
xor
and
popf
mov
and
rolb
enter
aam
jecxz
loope
cwtl
or
in
xlat
push
popa
jp
sub
cmp
inc
scas
pop
test
ljmp
xchg
inc
xor
ss
or
nop
push
sbb
pop
iret
add
hlt
sub
jge
inc
pop
jmp
ss
xor
sub
push
or
inc
leave
dec
clc
mov
mov
jl
mov
insl
jne
cmp
lock
cld
fcompl
je
insb
push
lret
pop
push
jecxz
mov
dec
cwtl
inc
xor
es
mov
mov
inc
sub
sbb
stc
call
mov
imul
popa
test
inc
das
nop
sbb
adc
ficompl
jnp
movsl
inc
repnz
cmp
in
insl
rorb
push
ljmp
popf
mov
mov
pop
arpl
or
stos
arpl
std
shl
insb
lods
leave
test
sub
loop
sarb
mov
xchg
pusha
xchg
fs
hlt
jmp
push
inc
in
push
push
or
sarb
pushf
cltd
scas
scas
int
movsb
aad
push
scas
adc
movsb
sbb
mov
inc
sbb
jl
test
sub
aas
shlb
cltd
rorb
stos
aaa
mov
js
mov
aam
xor
push
fdivrl
out
pxor
addr16
or
xchg
xchg
adc
or
out
scas
out
aaa
xchg
jge
mov
lds
mov
mov
mov
inc
jmp
mov
xchg
lods
mov
arpl
adc
xor
jae
movsl
xchg
jnp
sub
jl
push
mov
lods
mov
fsubrl
ljmp
sarl
int3
push
adc
jo
fs
cld
jnp
imul
add
es
js
les
pusha
lret
or
pop
sub
leave
mov
cmp
xor
loopne
jle
xchg
jl
mov
add
test
mov
xchg
adc
ret
mov
fdiv
xchg
mov
ljmp
xchg
push
dec
stos
jbe
rcrl
and
add
or
