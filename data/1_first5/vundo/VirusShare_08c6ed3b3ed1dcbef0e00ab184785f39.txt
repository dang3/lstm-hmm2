sbb
push
add
add
cld
push
add
add
sbb
add
add
cs
add
or
sbb
or
in
add
loopne
or
add
loop
add
test
add
out
add
repz
add
pop
add
add
add
add
jbe
add
popa
xor
add
push
add
data16
add
mov
dec
add
jge
push
add
stos
add
adc
push
or
fisubs
or
cmp
add
add
add
adc
add
mov
add
out
add
xchg
hlt
push
add
std
add
xchg
lods
pop
add
jg
add
icebp
ltr
mov
add
stos
add
add
dec
pop
add
add
jno
push
add
jno
add
pop
add
repnz
add
stc
or
mov
or
mov
pop
str
add
jnp
add
mov
or
cs
add
popf
or
lea
add
out
add
movsl
add
jb
add
dec
aam
add
mov
or
mov
mov
add
mov
add
mov
add
sub
add
or
adc
add
adc
push
add
or
xchg
mov
or
iret
sub
add
add
or
pop
push
push
add
dec
pop
add
or
jo
or
dec
xor
add
or
sub
add
xchg
out
add
inc
mov
add
push
add
lds
add
verw
push
add
push
add
add
add
stc
or
xchg
cmp
add
js
add
jbe
add
add
test
add
into
or
pushf
cld
push
add
pop
add
add
sbb
add
mov
add
call
or
xchg
in
add
mov
push
add
push
loope
add
pop
add
fnstcw
or
movsb
filds
add
pop
add
push
or
add
and
add
sldt
and
or
add
dec
or
sbb
or
xlat
mov
add
es
add
xchg
or
ja
pop
add
das
add
ret
add
lahf
add
mov
flds
add
pop
add
jle
add
fiadds
add
testl
add
cmp
mov
push
add
imul
add
outsb
add
movsb
mov
add
mov
add
test
add
cltd
add
push
mov
add
sahf
rolb
cmpsl
fisttps
add
inc
push
add
orb
ret
add
cmp
add
lock
add
clc
or
add
ds
add
add
xor
or
xor
add
dec
add
or
fisttpll
add
clc
push
add
xor
add
les
add
mov
or
xor
add
movsb
scas
or
in
test
add
rolb
add
push
add
xor
or
test
push
add
add
xchg
imul
mov
add
scas
mov
add
xchg
add
scas
ljmp
std
orl
xchg
lea
add
fiadds
add
dec
add
xor
add
fsubrs
add
or
leave
jo
add
add
jmp
add
inc
or
pop
mov
add
outsl
add
adcl
pop
add
arpl
adc
orb
add
pop
cmp
sti
sbbw
pop
jmp
pop
addb
pop
sbb
mov
lahf
mov
cmp
iret
fninit
incl
cwtl
push
adc
mov
sub
mov
sub
mulb
repnz
jmp
mov
mov
and
mov
jmp
shlb
adcl
pop
fwait
imul
test
out
push
jmp
mov
stos
test
adc
dec
sbb
add
sub
enter
sbb
and
jmp
sub
mov
sbbw
and
cmp
jne
lea
mov
mov
and
cmp
je
xor
jmp
jae
inc
fwait
xor
lods
test
mov
faddl
fdivrs
cmp
jmp
ss
fsub
xor
ljmp
mov
insl
fcompl
xor
mov
mov
mov
or
lods
mov
pop
ret
push
mov
add
push
push
mov
movl
pop
push
push
push
mov
mov
add
push
mov
sbbb
pop
pushl
mov
add
add
mov
add
xor
lea
push
and
sub
popl
mov
mov
add
push
mov
addw
subb
pop
mov
xor
rol
xor
inc
push
mov
orl
addw
pop
cmpb
jne
cmp
je
inc
cmp
jb
movl
jne
call
push
jge
test
and
xor
lcall
sbb
xchg
stc
adc
ds
setg
cmp
in
and
push
mov
mov
dec
popa
adc
mov
sub
add
xchg
xchg
js
test
mov
insl
inc
fsubr
mov
hlt
es
mov
fldcw
add
mov
mov
and
mov
test
mov
inc
or
jb
mov
loop
aas
xchg
adc
movzwl
mov
add
mov
jmp
mov
fwait
push
fucom
stos
mov
gs
inc
and
in
flds
cmc
gs
test
pop
jg
bound
xchg
xchg
repz
stos
dec
push
aas
fwait
mov
dec
cmpsb
adc
jmp
jbe
loopne
ja
rorb
add
add
inc
dec
adc
mov
add
pop
cmp
jbe
cmp
jae
pushl
pushl
pushl
popl
sub
movl
addl
pushl
call
call
pop
push
mov
movl
xorw
pop
pop
pop
push
popl
jle
push
mov
andw
pop
pop
leave
ret
push
mov
subb
sbbl
pop
call
test
jne
ret
push
mov
sbbl
pop
push
push
push
mov
orb
addb
pop
mov
call
sub
movl
addl
push
pushl
popl
call
push
push
shr
inc
add
mov
xor
xchg
mov
pusha
call
mov
push
mov
subl
pop
sub
movl
addl
push
call
push
popl
mov
mov
xor
xor
rol
inc
jmp
or
ljmp
push
stc
jne
loopne
std
clc
jo
dec
rcr
adc
ss
ja
aaa
daa
dec
mov
stos
aam
inc
sbb
shr
adc
addr16
mov
repnz
lea
cld
cmp
push
dec
cmp
jne
cmp
je
cmp
jne
popa
shl
push
xor
subw
ja
push
mov
sbbb
pop
push
call
push
mov
push
mov
jmp
jmp
popa
shl
push
xor
push
popl
push
call
push
mov
push
push
mov
addw
orb
pop
jmp
pop
mov
push
push
push
push
mov
xorl
addw
pop
mov
mov
rep
andw
pop
pop
push
push
mov
xor
pop
push
push
mov
subb
addb
pop
xor
jmp
sub
mov
push
mov
andb
pop
add
sub
mov
push
mov
xorb
subw
pop
add
or
jne
add
jmp
call
mov
push
cli
dec
jb
ret
cmp
cltd
jno
jmp
data16
out
add
in
lock
xchg
adc
add
inc
movsb
sbb
sbb
hlt
pop
das
fimull
in
mov
push
fmull
push
nop
mov
xchg
fidivrl
addl
in
add
push
adc
and
and
mov
or
inc
es
mov
pop
and
push
dec
mov
fsubl
pushf
lcall
fidivs
mov
enter
pop
jbe
daa
mov
inc
mov
js
push
jae
sbb
int
pop
icebp
add
push
adc
sbb
filds
test
xchg
cmp
xor
adc
dec
test
movsb
sarb
into
imul
xchg
jge
cmovo
add
mov
js
push
call
cmpsl
add
and
out
mov
pusha
es
jge
sbb
mov
es
mov
sub
roll
les
mov
inc
js
adc
add
addl
jmp
jo
pushf
lahf
jns
ljmp
adc
shrb
and
out
jne
and
pop
or
dec
xchg
or
and
inc
fcmovbe
test
xor
lahf
push
xor
call
push
xchg
cmp
mov
sti
js
add
xchg
movsb
stos
xor
dec
pop
insb
std
fnstcw
lods
sub
jo
aad
mov
jmp
ret
jge
scas
jns
imul
out
test
sbb
xchg
dec
dec
sbb
mov
es
outsb
mov
inc
ss
insb
dec
xchg
mov
mov
iret
mov
loop
sbb
stc
jne
add
lods
pop
jns
and
das
and
cwtl
cmp
lret
frstor
aas
es
mov
sti
dec
mov
aaa
adc
ret
push
pop
or
add
es
mov
push
adc
rep
data16
andb
cwtl
xchg
cmpsl
outsl
sub
shll
mov
leave
push
add
push
minps
cwtl
pop
mov
push
xchg
push
inc
in
inc
jecxz
pusha
adc
lods
outsb
adc
out
adc
or
mov
adc
add
jecxz
add
cmp
insl
jg
or
xor
inc
jg
fstpt
and
inc
sbb
mov
mov
pusha
xchg
jbe
jle
lds
xor
fdivs
add
or
addl
rol
pushf
jle
cmp
sub
into
pop
lret
clc
pop
pop
mov
dec
and
int
cmp
lods
out
sub
stos
mov
ret
fcoms
sub
movsb
xor
aas
jmp
imul
cmpsb
popa
loopne
lret
xchg
dec
inc
mov
sbb
mov
and
cld
into
js
lea
inc
repz
dec
aaa
lds
ljmp
mov
jno
or
dec
pop
dec
ljmp
jge
and
cmp
mov
test
inc
in
pop
mov
shlb
dec
cmpsb
xor
test
xchg
mov
lret
scas
and
out
or
sbb
mov
scas
sbb
sbb
mov
mov
cmp
sti
and
mov
shlb
xchg
int3
mov
add
inc
jp
nop
pushf
jle
lcall
dec
dec
sarb
fsubs
cmp
lahf
mov
mov
sbb
mov
sti
lret
mov
sub
nop
mov
xlat
mov
sbb
bound
es
mov
pushf
and
or
aam
icebp
icebp
sub
arpl
jbe
sub
cmp
dec
es
jmp
jae
xchg
pcmpgtw
dec
movsl
sahf
rcll
sub
push
test
or
and
lods
js
mov
pop
xor
and
rcl
sahf
addl
aaa
imul
mov
add
in
and
sub
dec
gs
inc
mov
xchg
aaa
daa
js
xchg
jecxz
fnstsw
and
imul
jbe
mov
pop
pop
jle
mov
xor
fstpt
xchg
cmpsl
cwtl
lret
decl
mov
xor
mov
lahf
dec
in
add
popf
add
mov
mov
jne
cmpsl
sbb
xor
and
out
cld
jbe
in
aad
xlat
idivl
push
int
pop
mov
xchg
cmpsl
sub
sub
add
add
orl
lds
push
jo
pop
cmovle
xor
push
outsb
fbstp
and
addr16
es
bound
cld
jae
mov
scas
mov
ja
and
jle
push
dec
cmp
ds
jno
and
mov
push
xor
fsubs
xchg
loope
ret
or
ds
enter
pop
jmp
std
mov
push
sbb
mov
dec
xor
es
xchg
cmp
nop
jg
stc
sbb
lock
mov
lahf
testl
inc
add
jae
movb
mov
pop
sub
dec
adc
push
dec
out
inc
das
js
pusha
add
insb
xor
out
mov
popa
sub
mov
ss
sub
add
aas
push
dec
pop
lock
add
movsl
aad
in
outsb
es
cltd
dec
or
test
cmp
cld
es
and
inc
and
mov
movsb
mov
fwait
sarl
inc
fcoml
test
add
mov
bound
add
cmpsl
pop
inc
mov
mov
or
call
mov
insb
xchg
and
dec
mov
mov
push
sbb
or
ja
xor
mov
outsl
jle
test
cmp
fs
push
sub
jle
scas
cmc
mov
lods
out
faddl
sbb
sub
inc
push
clc
mov
hlt
jle
add
mulb
or
fs
cli
add
dec
cmp
mov
xchg
aas
xor
imull
mov
js
cmp
arpl
cmp
stos
mov
shll
push
jle
and
dec
leave
out
cmp
aaa
xchg
inc
hlt
call
lahf
xor
stc
loopne
addr16
es
sub
cmp
mov
and
in
in
mulb
pushf
cmp
sti
leave
jle
xlat
subb
inc
popl
and
dec
iret
out
sahf
sbb
inc
and
jecxz
sub
nop
mov
add
xchg
addr16
pop
test
data16
mov
loope
call
aad
gs
pop
dec
adc
cmp
pop
inc
push
fldt
mov
jo
push
sub
cli
inc
setae
and
jl
ret
adc
insb
jl
mov
xor
sbb
mov
jbe
not
mov
sbb
ret
es
add
jb
jg
mov
inc
dec
mov
sub
in
in
inc
pop
in
lods
bound
int3
sub
add
inc
pop
add
in
push
and
enter
xor
aam
mov
cmp
push
push
imul
mov
pop
sbb
rol
add
mov
pushf
push
push
outsl
out
mov
jp
sbbl
test
adc
aaa
cmp
jo
push
jp
jo
dec
decb
mov
sub
and
repz
enter
mov
pop
push
jmp
or
sbb
adc
lods
mov
jle
insl
imul
dec
xor
dec
js
es
packuswb
lock
inc
iret
pop
aas
jne
fisttpl
lcall
xor
ret
pop
je
xchg
addr16
push
push
mov
mov
cmc
mov
lret
cmp
roll
inc
mov
xor
out
or
jns
xchg
dec
mov
and
out
movsl
sub
daa
sbb
and
cmp
in
mov
sbb
mov
bound
jmp
sahf
sbb
mov
nop
cwtl
jns
push
sbb
add
sbbl
sbb
dec
fisttpll
jmp
jmp
fs
mov
cmp
lahf
je
add
dec
adc
bound
jb
lods
into
movsb
iret
adc
ret
lret
je
cmpsl
sub
xchg
mov
stos
inc
cli
mov
mov
sub
jbe
cmp
gs
outsb
jae
jbe
data16
inc
xchg
jle
mov
pop
int3
test
ljmp
clc
inc
clc
in
repnz
sub
fs
xchg
mov
add
mov
into
insb
jns
xor
cmp
sub
clc
sarb
add
cld
sub
ss
xor
in
dec
pop
jg
push
dec
sbb
mov
in
and
pop
loopne
test
mov
sbb
cmc
push
jns
xchg
mov
adc
jno
jno
aas
xor
jbe
push
cmpsl
cmc
jp
mov
mov
inc
dec
jge
sub
and
adc
jp
jnp
jbe
in
fildl
pop
dec
jbe
popa
jns
xchg
or
dec
jecxz
push
loopne
push
push
jne
sub
and
dec
inc
pop
mov
test
cwtl
xchg
xchg
inc
fsubs
sbb
mov
bound
jmp
test
adc
out
repnz
push
add
jecxz
enter
clc
jl
int
or
mov
jno
pop
stos
push
inc
bound
out
pop
addb
arpl
fsubs
scas
mov
xchg
mov
and
scas
test
mov
xchg
sbb
pop
movsb
dec
scas
fcmovnb
aad
mov
pusha
cmp
jmp
cmp
jb
lea
js
push
aad
iret
mov
mov
cltd
daa
popf
mov
mov
dec
push
fbld
test
mov
xchg
jno
push
cmpsb
loop
mov
fmull
fisubl
loop
xor
test
fwait
add
pusha
sbb
push
loopne
dec
test
jmp
jnp
push
test
aam
cmpsl
add
dec
and
add
xchg
lea
push
sub
loop
outsb
repz
movsb
rcrl
das
sti
mov
ret
jmp
popf
mov
mov
jl
and
mov
push
test
lods
jnp
stos
movsl
imul
add
adc
xor
mov
dec
pop
test
test
loopne
lea
lahf
xchg
in
shl
js
adc
mov
sbb
sbb
aam
shrl
jnp
mov
inc
cwtl
lods
icebp
adcb
daa
cmpsl
je
lahf
in
outsb
shll
es
adc
sbb
mov
cmc
adc
jp
xchg
push
push
mov
mov
shr
xor
dec
xchg
fs
fimull
or
sbb
outsl
pop
jle
es
cmp
dec
cmp
enter
sahf
mov
insb
inc
into
xor
sbb
mov
or
sbb
dec
pop
adc
dec
mov
jno
ficompl
inc
and
jge
mov
or
dec
inc
cmp
sbb
imul
mov
and
test
shlb
in
rolb
adc
jecxz
movsl
in
dec
lret
ss
mov
stc
mov
shll
test
xor
jmp
dec
push
mov
cs
out
mov
jnp
fwait
shrl
xchg
jo
pushf
jns
in
je
ficomps
push
jecxz
or
faddl
fwait
cltd
je
test
aas
add
loope
idivl
cli
pop
or
andl
add
push
jg
es
xchg
xchg
pop
mov
andb
repz
sub
push
push
ja
out
sbbl
mov
sbb
mov
inc
lods
sub
dec
xor
jge
jbe
out
pop
or
cmp
cld
pop
loop
pop
dec
les
push
push
sbb
xchg
cwtl
fwait
xchg
cmp
adc
add
out
frstor
fwait
pop
mov
mov
xchg
rcr
dec
lds
jae
xchg
shll
xchg
mov
xor
cmp
xor
sbb
push
and
movsb
test
imul
mov
insb
mov
mov
shr
pop
xchg
je
jl
idivb
or
outsb
enter
pop
mov
mov
addr16
insb
mov
int3
cmp
fwait
nop
pop
and
inc
hlt
sub
pop
out
ret
or
cld
sbb
mov
stos
xor
adc
into
int3
movl
pop
inc
repnz
sbb
mov
adc
cmpb
mov
cmp
xchg
adc
mov
dec
js
rcrl
jmp
mov
inc
sbb
leave
ljmp
lods
sbb
inc
add
ljmp
and
jl
aas
or
shlb
mov
into
fidivrl
cmp
mov
subl
icebp
cmp
sahf
sbb
sbb
sbb
cmpsl
push
mov
push
test
sti
loope
xor
or
fdivl
pop
xchg
rcr
loope
sub
pop
xor
mov
sub
repnz
mov
sbb
pop
pop
mov
add
xchg
mov
lods
int3
fwait
jl
es
pop
inc
mov
adc
xchg
and
es
mov
inc
rorl
pop
cltd
test
inc
pushf
jno
je
leave
cltd
sub
jg
frstor
mov
loopne
cmp
xor
pop
xchg
pop
mov
aam
jo
sbb
test
sbb
xor
and
outsl
data16
es
xchg
ret
cmp
into
ret
data16
sar
aam
xor
inc
and
push
mov
nop
test
inc
jns
lods
lods
repz
cmp
sbb
cmp
jb
dec
sub
lret
jae
pop
adc
rorl
inc
inc
mov
cmp
sub
and
mov
repz
push
sub
and
push
es
aam
dec
cmpb
cltd
jb
sti
ret
movsl
pop
inc
fcmovne
shll
sti
mov
mov
mov
adc
push
adc
fstpl
imul
in
mov
fidivrs
pop
dec
xchg
xchg
sub
test
xor
or
imul
in
xor
cmc
test
and
mov
push
fsubrs
es
mov
cmp
mov
xchg
sub
jp
jbe
ljmp
sbb
lcall
mov
push
or
ret
jnp
stos
pop
mov
jne
into
ret
out
jecxz
clc
xor
data16
push
into
pop
mov
xchg
xor
lahf
insl
rsqrtps
imul
insl
jbe
dec
popf
mov
aad
dec
imul
jmp
int3
test
adc
pop
mov
test
cltd
std
lock
loope
mov
sbb
sbb
jns
mov
cmpsl
jecxz
in
loope
mov
push
xchg
inc
out
repz
mov
cmp
adc
sub
inc
xor
pop
pop
push
enter
sub
xchg
push
mov
sub
sub
sub
inc
mov
aaa
test
fildl
nop
test
pop
movb
stos
clc
jae
jmp
fnstsw
xlat
test
xchg
imul
pop
xchg
rol
or
repz
into
iret
test
or
cs
jp
push
test
pushf
sbb
aad
jns
sub
jns
add
ja
movsb
fwait
push
in
dec
in
sbb
inc
rol
repz
jno
mov
stos
fsubl
xor
sbb
inc
adc
xchg
mov
imull
sarb
js
jbe
mov
mov
xchg
xlat
mov
cmp
xlat
xchg
out
add
sub
lds
pop
cmp
movsb
mov
cltd
mov
dec
hlt
xchg
lea
inc
or
xchg
ss
movb
rcrb
shll
fwait
or
mov
xacquire
les
pop
shlb
out
mov
pushf
sbb
out
lcall
inc
xchg
fs
lret
movsl
stos
mov
or
mov
mov
clc
es
fwait
add
lahf
adc
add
sarl
repnz
sub
jbe
sahf
mov
je
jae
testb
pop
mov
mov
push
sbbb
push
mov
sbb
mov
clc
mov
and
cwtl
popf
outsb
mov
pushf
sub
icebp
lods
cmp
pop
pop
popf
leave
xor
or
daa
push
add
outsl
fldcw
mov
pop
es
pop
lcall
aad
cmp
pop
fnstcw
dec
in
call
xchg
mov
jae
and
es
sbb
sbb
xor
mov
dec
push
pop
jne
push
jae
dec
insb
addr16
xor
sbb
sbb
fxch
adc
xor
rol
lcall
cmp
xor
leave
mov
bound
out
into
je
inc
icebp
mov
push
mov
xchg
shrl
mov
mov
cmp
arpl
fdivrp
mov
cmpsl
andl
fdivl
cmp
bound
pop
xlat
mov
mov
js
pop
movsb
xlat
int3
xchg
mov
mov
lock
fisttpll
test
jle
je
clc
fmull
mov
cmpsl
xchg
mov
ss
pop
pop
pop
sub
cmc
fimull
adc
stc
les
mov
xor
cmp
fbld
sbb
and
sbb
rcll
pop
mov
xchg
mov
mov
sbb
ret
gs
cmp
jnp
sub
data16
insb
fsubs
aam
mov
pop
repz
and
es
dec
xchg
cltd
outsl
mov
lret
repnz
loopne
jle
xchg
es
xor
cmp
or
cmp
push
mov
push
or
jecxz
les
pop
test
cmp
inc
sbb
mov
xlat
popa
repz
sbb
inc
pop
cmp
cmpsb
inc
mov
test
aam
or
sbb
sbb
sbb
sti
or
lea
jno
out
ds
cwtl
in
mov
jns
popa
inc
push
sbb
movsl
cmpsl
mov
adc
sbb
mov
es
mov
movsb
in
gs
jnp
shll
xor
lcall
insl
loopne
fnstsw
sbb
aas
xchg
lods
mov
cmp
aas
call
mov
cmpsl
call
xchg
or
inc
jae
pop
lods
ljmp
mov
cmp
push
rcll
jo
sbb
fs
push
fst
div
jmp
jne
das
xchg
fsubl
mov
or
sbbb
pop
pushf
xchg
roll
sbb
rorl
mov
dec
ficoml
into
and
fdiv
cmp
mov
pop
add
les
or
or
and
repnz
cmpsb
mov
out
pop
popa
imul
negb
mov
sub
outsb
hlt
sub
add
int
adc
sbbl
and
cmp
jle
pop
ljmp
rorl
outsb
and
pusha
add
pushf
adc
lea
inc
lds
imul
fldpi
test
lds
loopne
cmpsl
pop
mov
sbb
in
std
pop
aas
and
je
les
mov
ds
sbb
pop
jle
sub
push
out
out
les
jns
andb
push
in
adc
adc
fneni(8087
jo
add
jg
mov
xchg
xchg
repnz
stos
xchg
fnstsw
fisubs
mov
es
scas
sti
call
int3
adc
movsl
rcrl
insl
lret
mov
and
mov
outsl
sub
clc
jecxz
add
test
adc
imul
fbstp
mov
jle
jp
sub
subl
aam
dec
cmp
nop
out
xor
sbbb
sub
fsts
daa
fisubs
sti
repz
jo
push
sub
sub
jle
xlat
inc
or
adc
cmpsb
mov
push
outsb
dec
dec
mov
mov
jae
std
sbb
and
mov
pop
sbb
add
mov
push
sbb
jne
or
mov
jns
mov
lahf
add
jae
pop
or
mov
mov
ds
cmp
xor
popf
leave
repnz
adcl
test
jbe
sahf
jge
cltd
out
ljmp
adc
fwait
push
fadds
rorb
mov
mov
movsb
sub
scas
cmpsb
cs
dec
int
and
adc
fisttpll
ds
sbb
jle
mov
jbe
fdivr
dec
gs
out
jg
jecxz
inc
popf
sbbl
andb
adc
cmpsl
adc
push
or
sub
aad
inc
cmp
fwait
push
add
push
fnstenv
mov
lcall
mov
jecxz,pt
cmp
orl
mov
or
cltd
mov
sbb
les
sbb
xor
stc
lods
ret
into
push
in
outsl
jb
push
jmp
scas
aad
jg
push
fwait
xchg
loop
pop
inc
in
xor
dec
xchg
push
mov
popf
inc
lods
btrl
mov
inc
pop
dec
mov
pop
inc
jl
test
pop
xchg
loope
xchg
lret
sbb
jmp
daa
xchg
in
aad
add
mov
out
mov
scas
cmp
jnp
add
adc
daa
jl
jbe
jnp
xor
int
int3
pop
adc
mov
mov
call
cmp
andb
inc
imul
adc
fsubs
lret
xchg
adc
leave
pop
lock
sbb
dec
stos
fwait
int
and
daa
xchg
or
shrl
cmp
xchg
loopne
cmp
call
and
cwtl
popf
outsb
mov
adc
insb
dec
jge
mov
mov
xchg
test
lret
adc
adc
das
sti
movq
push
xchg
add
inc
add
cmp
mov
push
pop
xor
pushf
mov
mov
fiaddl
out
pop
lahf
push
mov
rcll
jno
dec
mov
imul
je
ret
sub
pop
int
mov
jg
push
jge
ss
orb
add
pop
pushf
mov
mov
pop
out
xor
adc
dec
and
cmc
mov
mov
sbb
dec
in
sub
mov
cmp
cmp
xchg
or
dec
and
sub
sbb
inc
movsl
cmp
lahf
adc
fsubl
pop
cmp
xchg
lret
mov
adc
pop
inc
scas
adc
stc
in
in
fdivrl
or
jl
push
ja
mov
xor
and
sub
mov
xchg
pusha
mov
arpl
jno
push
adc
adc
into
pop
andb
push
sahf
shlb
xor
lods
jo
xor
add
addr16
add
cmp
sbb
ljmp
in
sbb
pop
xlat
shll
negb
adc
cli
mov
cmp
mov
pushf
and
jo
dec
and
fnstcw
and
push
in
sub
mov
mov
push
rclb
jbe
sub
lcall
in
lret
xor
cmp
bnd
cmp
scas
dec
xor
pop
inc
scas
mov
sub
loopne
nop
mov
repnz
sbbb
lds
cmp
ss
xchg
jae
jmp
icebp
cld
inc
sbb
xorl
aas
aam
sbb
push
mov
scas
pop
fstpl
testb
aad
popf
js
aam
fisubs
cmp
cs
adc
clc
cmp
jle
pop
or
and
clc
jecxz
push
inc
out
sarb
sbb
mov
sbb
add
dec
iret
leave
int
lret
dec
pusha
and
add
cmp
in
xchg
or
mov
push
dec
aad
rcll
rep
test
bound
rol
mov
addl
sbb
cmp
pop
jle
es
or
scas
popa
ss
add
fiadds
pop
in
sub
mov
std
cmp
adc
xchg
cmp
and
cmp
mov
out
dec
xchg
xchg
cs
lods
pop
mov
sahf
cld
xor
jnp
lock
mov
push
adc
ljmp
insb
push
sub
cwtl
je
mov
push
in
jo
jle
es
dec
add
xlat
push
sub
scas
fidivs
ss
lock
sbb
xlat
lods
xchg
adc
stos
sbb
mov
sub
mov
aam
mov
adcl
test
push
inc
mov
in
pushf
jmp
pop
ret
repnz
or
and
cmp
adc
mov
xor
cli
scas
mov
push
add
adc
stc
mov
inc
xchg
push
dec
out
mov
pushf
xor
insl
jl
pop
pushf
jb
bound
jae
addl
mov
mov
rsqrtps
mov
mov
mov
int
adc
and
loop
xchg
mov
adc
inc
add
movsb
insb
and
adc
inc
and
fscale
push
cmpb
jg
inc
mov
push
aas
sbb
or
iret
sub
jl
cmp
sub
stc
sub
and
int3
mov
xchg
nop
das
outsl
push
fucomp
jnp
cli
rcll
sbb
lretw
xor
xchg
sub
pusha
je
stos
imul
stos
das
icebp
test
inc
fwait
je
call
sub
leave
mov
imul
cltd
xchg
jnp
lea
or
imul
cwtl
popa
add
loop
fldt
pop
cmp
mov
inc
scas
cld
push
in
cmp
jno
mov
xchg
imul
loop
xor
inc
mov
mov
loope
pusha
or
or
pop
jne
outsl
mov
and
popf
outsl
ds
pusha
push
and
dec
je
repnz
in
mov
pextrw
push
adc
in
lds
data16
pop
subl
stos
cmc
imul
imul
or
push
test
ss
testl
cmp
sbb
std
mov
sti
sub
push
mov
push
jl
movsl
pop
fistl
ljmp
xor
cmpsb
loope
inc
or
testl
add
cmpl
jno
dec
or
xor
gs
adc
lea
sub
sub
or
inc
add
iret
xor
or
sub
push
xchg
out
and
dec
incb
jne
and
push
aaa
pop
loopne
mov
jle
lret
xor
fcoml
cmp
mov
faddl
mov
lahf
sub
sahf
insl
xor
mov
leave
loop
and
mov
lahf
xchg
jnp
pop
dec
inc
hlt
jbe
jne
and
mov
push
adc
insb
dec
movsl
dec
xor
daa
mov
mov
cwtl
jmp
xlat
adcb
sbb
push
mov
inc
xchg
mov
cmp
add
or
mov
mov
push
mov
enter
sbb
mov
and
lahf
dec
or
test
add
loop
mov
jbe
mov
int3
shlb
sbb
jmp
push
les
dec
xchg
lahf
js
js
ret
push
loop
jmp
sti
mov
mov
or
jg
jle
pop
mov
jne
adc
cwtl
filds
out
negb
adc
cltd
cs
xchg
fcoml
test
mov
jnp
ret
push
pusha
stos
idivl
mov
es
mov
and
inc
inc
dec
mov
inc
push
add
dec
dec
adc
test
jecxz
or
mov
cmp
mov
sbb
mov
cmp
cmc
stos
daa
inc
cld
mov
jecxz
add
xor
mov
mov
pop
inc
scas
mov
inc
mov
iret
push
mov
loop
sti
pop
jl
sti
jmp
jp
mov
sbb
sbb
ffreep
adcl
xchg
ret
sub
cmp
lahf
jbe
push
movb
data16
repnz
jmp
xchg
mov
decb
movsb
sbb
sbb
hlt
dec
mov
push
xchg
jae
sahf
dec
mov
cmpb
in
stos
cmp
pop
icebp
pop
sub
sbbb
cs
sub
inc
sbb
push
loopne
xchg
hlt
es
xor
in
xchg
jno
mov
cmpb
mov
jno
mov
add
add
fimuls
imul
jno
push
xor
in
das
mov
icebp
jno
enter
ror
and
push
sub
inc
pop
mov
xchg
mov
std
stc
add
testb
enter
sub
outsb
sbb
movsb
popa
insb
pop
sti
and
data16
lcall
push
jle
adc
cmp
std
and
fdivrl
push
xchg
mov
mov
sub
push
adc
leave
ret
mov
pop
addr16
mov
addr16
mov
mov
adc
inc
mov
jb
std
ret
les
pop
pop
adc
cmp
mov
ret
dec
cli
jg
pop
push
xchg
mov
imulb
mov
lret
repnz
test
push
xchg
popf
sub
mov
jo
aas
es
lock
sbb
out
aad
adc
adc
sar
cwtl
push
sbb
xchg
xchg
cmp
dec
ror
add
xor
pop
cmp
js
mov
push
or
jo
jle
es
cmpsl
nop
cmp
call
xor
adc
icebp
sbbl
fnsave
xchg
imul
dec
cmp
cltd
mov
cmp
sub
repnz
pop
sbb
shr
mov
adc
mov
or
adc
xor
dec
inc
addr16
fdivs
int3
inc
fstpt
lret
arpl
or
adc
clc
fwait
mov
test
ret
jmp
fisttpl
xchg
or
cmp
mov
out
fsincos
nop
lret
mov
cmp
pop
push
mov
shl
cmp
cmp
mov
lock
sti
lock
dec
mov
shlb
dec
cmpsl
popl
jecxz
je
cmp
lahf
push
das
and
mov
jle
loopne
adc
sbb
sbb
mov
imull
pop
mov
test
pusha
jbe
xor
inc
dec
mov
mov
jg
lea
jno
mov
movsl
or
enter
push
outsl
dec
inc
mov
inc
fcmovu
fwait
cwtl
cwtl
data16
mov
es
or
sbb
sbb
mov
xchg
sbb
addr16
add
cmp
pop
in
and
add
adc
pop
mov
scas
mov
scas
or
sbb
sbb
jmp
mov
inc
jne
aas
insb
popl
ss
mov
sub
leave
subl
xchg
push
js
mov
and
addr16
cld
dec
addr16
es
xor
xor
inc
imul
aad
iret
iret
sub
add
add
push
cmp
sub
cmp
cmp
es
sbb
add
ret
sub
sbb
dec
inc
push
lcall
in
test
mov
mov
xor
leave
subl
mov
hlt
repz
jecxz
push
cmp
imul
dec
loope
push
fs
aam
cltd
inc
into
xor
and
ret
xor
xchg
adc
or
add
test
leave
das
sbb
ja
testl
adc
sub
or
lret
sub
fbld
jle
cmp
mov
test
jecxz
mov
rorl
mov
dec
shr
pop
sbb
hlt
pop
jbe
loope
fwait
mov
inc
sbb
push
push
nop
mov
xor
cwtl
cmpl
xor
scas
or
in
stos
sbb
sbb
jle
nop
push
sub
mov
mov
xchg
dec
imull
lock
fldl
ds
cmp
daa
mov
xlat
out
sbb
xchg
push
mov
fadds
scas
daa
push
lcall
mov
and
cmp
adc
xchg
mov
mov
dec
mov
cltd
adcl
mov
pop
xor
xor
fistl
and
leave
jge
js
mov
pushf
shl
mov
xor
outsb
mov
sbb
or
mov
je
xchg
xchg
movsb
stos
xor
dec
pop
pop
cmp
cmc
scas
shr
sub
les
xchg
sti
test
daa
into
sub
dec
cld
xor
pop
movsl
leave
mov
into
pop
cmp
test
imul
inc
popa
add
scas
xchg
jb
out
inc
int
data16
sbb
sub
repz
xchg
push
mov
ret
ds
pop
int
js
fisubrl
cmpsb
ja
dec
cmp
jecxz
lods
out
inc
sub
mov
push
cs
or
and
mov
data16
mov
jmp
enter
fcoml
or
imul
cmp
sbb
mov
daa
fidivrl
xor
pusha
mov
test
push
adc
sbb
sbb
icebp
jno
out
sub
add
and
adc
xor
orl
adc
icebp
pop
add
push
adc
movl
xor
mov
fiaddl
sahf
xchg
fwait
outsl
out
popl
pop
xchg
mov
cmp
adc
popa
mov
add
dec
roll
mov
lahf
fcmovne
jno
hlt
scas
ss
mov
jns
arpl
fisubl
outsb
fwait
cmpb
dec
mov
iret
xchg
nop
pop
and
int3
xchg
fnstcw
loop
xchg
jp
test
adc
xchg
mov
sbb
int3
out
fwait
addl
sti
or
or
jle
fwait
and
mov
dec
jge
shrb
sub
add
hlt
inc
sub
fidivrs
insl
push
dec
sbbl
jg
adc
adc
dec
aam
repz
jge
add
pop
cli
test
lds
aaa
movsbl
and
jecxz
test
or
mov
mov
sub
or
aam
inc
cltd
and
imul
cmpsl
or
data16
icebp
loopne
push
or
push
es
mov
scas
dec
jp
jp
dec
mov
fmull
bound
adc
int
fnstenv
mov
cmp
adc
push
fs
or
sbb
call
add
insb
dec
out
cmpsb
dec
mov
jle
dec
imul
insl
mov
jno
and
call
popa
mov
jns
sub
inc
or
mov
sub
insb
mov
inc
and
mov
xor
cmp
or
enter
pop
int3
adc
xchg
inc
xchg
je
js
cltd
mov
rclb
fldenv
fmuls
add
jl
mov
aas
inc
xor
xchg
add
addr16
dec
inc
cwtl
arpl
jg
insl
and
xchg
push
xor
shlb
xor
mov
loope
mov
sti
dec
iret
popf
pop
cmp
jmp
mov
sub
mov
mov
sbb
sub
push
mov
xchg
out
scas
aaa
cli
mov
dec
mov
mov
mov
jecxz
push
mov
sub
inc
out
push
add
inc
call
nop
xchg
add
push
movb
and
mov
xchg
inc
inc
xorl
add
iret
out
push
xchg
inc
jmp
lcall
inc
mov
push
adc
lret
or
popa
mov
mov
sub
push
int3
stc
adc
cmp
mov
pusha
pop
inc
int3
xor
xor
cmp
movsl
adc
adc
xchg
loop
inc
das
add
fcmovbe
rorb
cmp
outsl
imul
cmp
aas
sbb
mov
loope
imul
movl
pop
mov
sarl
or
or
repz
mov
leave
scas
rolb
pop
and
rclb
in
lds
sti
ror
xchg
jmp
jmp
cmp
cld
mov
dec
andl
shrl
testb
rorb
movsl
adc
sbb
iret
int3
jecxz
pop
stos
stc
fmuls
add
sbb
mov
out
jmp
cmp
in
jne
sahf
add
and
inc
enter
xchg
adc
adcl
sbbb
inc
addr16
lds
mov
mov
jbe
cs
fsubl
rclb
jo
mov
adc
adc
jp
ficoml
sub
out
ror
pop
mov
loop
fildll
int3
xchg
clc
xor
popf
xchg
bnd
jae
mov
outsl
fldcw
out
cmp
in
stos
pop
frstor
xchg
dec
ret
lea
xchg
out
outsb
cmpsl
sbb
cmp
pop
or
sub
adc
inc
xor
add
mov
jne
push
imul
jmp
shl
adc
jb
add
push
push
xchg
out
inc
cmp
lods
jns
adc
repz
and
push
testb
jmp
add
or
insb
mov
cmpsl
jb
adc
push
mov
adc
mov
ja
fiadds
push
mov
dec
repz
sub
jb
jnp
data16
adc
out
fdivs
aaa
scas
cmpsb
imul
mov
es
fildl
add
es
mov
hlt
cltd
out
add
pop
mov
fwait
sar
jbe
inc
inc
or
mov
sbb
mov
das
dec
push
push
adcb
xor
jge
cmpsl
mov
das
push
mov
sub
push
enter
arpl
shr
jb
cmp
insb
cmp
outsl
lahf
cld
pop
imul
out
mov
cmpb
sub
rolb
cmp
std
sub
and
mov
xlat
cmpsb
xchg
inc
inc
lods
mov
in
mov
push
cld
sbbb
xor
lods
jae
leave
dec
lods
mov
out
cmp
ljmp
jge
out
lret
in
rclb
jle
jmp
sub
sahf
aaa
inc
leave
rorb
xchg
xor
aam
lahf
cld
dec
jge
push
adc
adc
cmp
and
pop
cmp
shlb
and
mov
test
xor
adc
push
scas
or
roll
insb
xor
arpl
ss
jno
incl
ja
addb
fxch
ss
jns
out
pop
sub
dec
call
mov
lods
ja
cmc
mov
mov
stos
push
jae
cld
or
loope
mov
sub
sbb
cwtl
dec
sbb
adc
mov
xor
jle
mov
lea
je
icebp
dec
inc
cwtl
jae
xor
push
cmpsl
leave
mov
mov
mov
repnz
lods
ss
in
xchg
sti
and
dec
jmp
enter
push
sub
inc
and
sbb
clc
scas
loop
sarl
sub
call
adc
bound
cmpsl
mov
lods
fcomp
insb
adc
loop
sub
scas
clc
adcb
mov
or
mov
add
lea
adc
xor
je
mov
repnz
in
cmp
push
lcall
pop
flds
in
lods
xchg
mov
mov
stc
cmp
mov
imul
jns
push
fisttpl
push
xchg
inc
mov
add
fidivl
adc
push
cmp
dec
fwait
call
sub
inc
sbb
push
bound
aam
xchg
popa
notl
xor
iret
test
sub
jg
fsubrl
sbb
inc
pop
popf
or
mov
jl
adc
cmp
repz
push
div
xchg
adc
mov
lahf
lretw
pusha
repnz
xor
test
outsl
or
inc
subb
jnp
fadds
adc
test
mov
fwait
and
lret
jbe
adc
sbb
sbb
lret
mov
popl
jp
std
bound
pop
mov
fdivs
enter
pusha
mov
sub
push
pop
sub
bound
xchg
clc
lahf
cmc
mov
xor
pusha
fwait
movsl
add
pop
xchg
pop
scas
lcall
lods
aam
mov
fisubrl
cmpb
stos
mov
idivb
pop
jg
popf
test
jle
cli
mov
inc
sbb
jg
jmp
dec
adc
jb
in
leave
xor
icebp
sbb
lcall
adc
pop
add
sbb
sbb
fldt
xor
leave
inc
or
daa
sarl
cmp
push
or
shll
mov
adc
push
shlb
test
sbb
xor
xor
mov
arpl
push
pop
sbb
mov
aad
in
inc
out
outsl
imul
mov
icebp
push
cld
mov
out
add
in
push
mov
int
inc
pop
xor
js
push
mov
sbb
adc
pop
xor
popf
mov
inc
cltd
jne
jo
hlt
fwait
scas
aas
imul
and
icebp
data16
cmp
pop
in
hlt
out
jmp
outsb
xor
mov
mov
mov
inc
mov
ffree
or
jb
xchg
test
jp
xor
outsb
divb
fidivrs
or
pop
sbbb
shrl
lcall
inc
js
push
push
rcrb
pusha
xchg
jno
pop
testl
xor
dec
dec
adc
push
push
cmp
xor
jns
movsl
bound
pop
sbb
mov
cmpsb
cmp
cmp
sbb
aad
cmp
imul
jns
mov
or
sbbb
xorl
xchg
aaa
mov
bound
mov
test
pop
dec
lock
and
out
push
loop
mov
orl
and
imul
dec
in
mov
shll
in
mov
cmp
mov
ds
push
outsl
add
mov
sbbl
jg
pushf
adc
hlt
pop
inc
jnp
sbb
imul
enter
lahf
xchg
sub
cmpsb
orb
dec
adc
mov
sbbb
rorb
xor
xor
xchg
je
int
sub
jle
lret
push
xchg
jne
int3
sbb
out
lret
dec
out
or
les
mov
sbb
xor
add
icebp
popf
mov
xchg
jae
push
jmp
cmp
test
rorl
adc
or
xchg
imul
popa
add
xchg
and
lcall
bound
stos
mov
fnsave
cmpsb
loopne
jne
js
inc
xor
test
nop
cs
lcall
sbb
in
jbe
mov
lods
xor
fdivrp
fdivrl
sub
shl
test
mov
mov
pop
push
loop
mov
es
mov
ss
push
mov
jle
push
push
repz
xor
mov
in
sbb
lahf
int3
sub
fisubrs
sbb
sub
sub
adc
mov
dec
insl
inc
loopne
imul
clc
push
pop
dec
dec
ljmp
leave
push
cmp
subb
or
lret
cwtl
imul
sbb
test
push
sahf
cld
shrb
je
data16
clc
out
cmp
hlt
add
xchg
mov
xor
jecxz
pop
sub
lods
into
mov
adc
fsubp
adc
mov
rorl
mov
arpl
push
xchg
jp
or
inc
leave
pop
push
stc
clc
or
pop
sub
jne
shlb
scas
leave
sub
ret
xor
xchg
pushf
ds
xor
pop
insl
xor
or
sbb
fsubl
scas
inc
jle
mov
add
push
nop
in
pop
dec
mov
ljmp
sub
pop
xchg
push
ret
mov
add
sbb
lods
out
xchg
test
inc
push
shlb
out
ror
cld
insl
outsb
cmpsl
sub
mov
and
pop
jge
test
es
sub
movsb
sub
mov
mov
lret
add
movntq
loopne
sub
fwait
lret
sbb
and
and
sbb
es
inc
mov
movsl
jae
add
sahf
adc
xchg
xor
fdivr
outsb
cmp
mull
dec
mov
lret
iret
add
lods
mov
rcrb
jle
ucomiss
sub
jmp
data16
out
jbe
andl
and
sbb
inc
jp
into
jb
dec
pop
pop
ret
out
mov
jnp
nop
pop
inc
loop
and
es
and
lea
adc
adc
mov
jno
adc
js
xor
fbld
cmp
cwtl
aam
dec
or
mov
cmp
cmpsl
bound
fwait
or
mov
cmp
testl
in
insl
inc
or
push
daa
pop
pop
shll
push
clc
les
out
sub
jno
or
push
shrl
jp
movsl
out
in
movsb
or
pushf
sub
ret
inc
cltd
repnz
inc
clc
xor
mov
mov
fcmovne
dec
jnp
cmp
and
call
es
sbb
jo
cwtl
xchg
cmp
push
dec
xorb
ss
push
pop
into
sub
fdivl
les
cltd
mov
sbb
mov
les
cli
shlb
loop
inc
imul
cwtl
aad
push
aaa
push
adc
rol
cltd
or
cmp
mov
push
mulb
or
mov
and
scas
cmp
sbb
or
pop
push
aas
in
pop
inc
cmc
mov
mov
pop
dec
shlb
jne
pop
cs
pop
sub
dec
in
call
cwtl
pop
out
pop
mov
push
push
or
mov
loop
jge
mov
adc
sbb
mov
ds
ja
in
inc
pop
add
popf
jle
mov
mov
jle
inc
sbb
mov
aaa
and
std
das
sub
push
mov
jae
cwtl
sbb
sbb
add
sbb
mov
cmp
sbb
out
mov
outsl
subb
aam
out
add
push
cmp
sub
sahf
xchg
loope
jecxz
mov
addr16
out
dec
icebp
mov
lods
bound
lea
adc
jecxz
xchg
sahf
xchg
sbb
sahf
push
mov
and
adc
outsb
es
loopne
pusha
jle
es
xchg
xchg
insb
inc
fsubr
or
icebp
cmpsl
mov
jmp
fstps
leave
ljmp
es
push
and
nop
sub
jnp
andb
push
addb
insb
repz
jo
cmp
loopne
lea
sub
lret
or
ljmp
ss
jmp
jns
cmp
mov
mov
int
bound
sbb
clc
push
mov
xlat
inc
sti
cmpsl
xchg
add
sahf
lock
ja,pt
nop
lds
jmp
das
push
bound
cwtl
cmpsb
out
je
stos
aad
aad
jp
mov
pusha
jle
es
xchg
dec
sbb
into
cmpsb
sti
fistpll
xor
shlb
push
pop
iret
into
dec
add
mov
jle
lret
test
daa
test
mov
adcb
into
jmp
fs
bound
lea
rclb
fwait
and
xchg
int
sub
es
in
sub
loope
inc
inc
add
imul
sahf
shll
sbb
push
shll
into
sbb
enter
jae
aam
push
add
jne
ret
out
imul
in
fsubp
lret
subb
sbb
icebp
push
ds
scas
lods
mov
adc
mov
iret
cmp
test
push
jg
stos
rcll
jg
xchg
fsubrs
and
loope
add
xchg
cmp
pushf
mov
pop
fdivl
bound
es
or
rcrb
add
mov
lahf
mov
aad
sbb
test
nop
jb
push
push
in
push
or
shrb
mov
outsl
outsb
jle
es
ja
test
or
xchg
sahf
aam
and
jne
out
jne
xor
mov
andb
or
jb
divl
in
jae
cmpsb
cmp
sbb
jge
test
dec
mov
push
cmp
ja
and
insl
fnstcw
popa
test
aaa
xor
inc
jmp
cmp
andb
cs
jns
pop
call
cld
mov
mov
mov
and
jle
iret
fisttpl
mov
std
gs
jl
and
test
adc
mov
testl
push
dec
cmpsl
data16
pusha
adc
inc
mov
inc
mov
ds
pusha
xchg
adc
dec
scas
andb
mov
sub
inc
in
mov
scas
jbe
jnp
jecxz
mov
xchg
fsubl
std
mov
jecxz
das
inc
xchg
js
imul
or
es
add
pop
pop
jl
sub
mov
test
iret
pop
mov
sub
jne
int
fistpll
add
dec
cmp
es
mov
xor
sbb
add
pop
dec
xchg
push
repnz
imul
inc
test
test
fsubl
push
sub
xchg
pop
movsl
pop
or
adc
jo
jno
sub
push
out
ret
cmpsl
mov
dec
sarl
out
aas
mov
movsl
jnp
out
and
sbb
pop
push
cli
shll
mov
cwtl
negb
lcall
sahf
add
inc
and
pop
pop
jns
xor
loopne
test
mov
jae
mov
fucomi
icebp
je
add
mov
pop
sub
dec
popf
cmp
les
sub
or
cli
lcall
out
fwait
or
sub
push
das
pop
iret
and
lds
cmpsb
fisttpl
mov
and
mov
pop
loop
adc
pop
testl
leave
push
inc
subps
sub
dec
xor
xor
out
movsl
push
jb
sbb
cmp
xchg
fcoml
ret
movsl
inc
stos
in
mov
sub
in
rorl
inc
mov
es
into
enter
xor
xchg
rorl
jecxz
mov
in
add
push
popa
insl
push
push
cmpsl
cmp
test
adc
imul
leave
mov
lahf
xchg
popa
xor
cltd
roll
sub
sbb
or
bswap
je
cwtl
fidivs
movsl
or
xor
sub
insb
inc
test
cmc
add
repz
inc
xlat
mov
daa
xor
dec
xor
pop
sbb
into
je
add
pushf
jp
dec
pop
mov
xor
in
ljmp
enter
adc
repz
loop
adc
mov
pop
xor
sub
outsb
mov
xchg
mov
enter
cld
lret
cs
mov
add
es
fildl
add
cld
cmp
cs
add
or
cs
int3
test
aam
sbb
lds
pop
inc
mov
mov
test
cmc
andb
inc
into
rclb
ja
mov
out
mov
xchg
movsb
stos
xor
dec
pop
sbb
repz
pop
sets
repnz
fs
push
fdivr
pop
bnd
cs
scas
sbb
fnsave
sbb
shrb
push
call
add
adc
sub
dec
je
push
neg
pop
xlat
imul
xchg
stos
fdivp
dec
out
daa
imul
test
test
outsl
pop
addr16
mov
lds
jmp
pop
stc
inc
pop
xor
cmp
add
sbb
arpl
add
mov
jge
sub
jecxz
popa
pop
xchg
rcl
mov
jmp
fisubrl
jbe
inc
adcl
mov
fbstp
stos
jo
outsb
fcomps
push
xor
xor
xchg
mov
or
imul
sbb
sub
repnz
insb
mov
pop
cmp
add
xchg
sbb
sbb
