add
or
add
add
add
jne
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
call
pushl
mov
call
push
push
pushl
call
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
xor
test
jle
push
lea
push
mov
cmp
je
inc
add
cmp
jl
pop
pop
cmp
jl
xor
jmp
test
jle
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
inc
xor
test
mov
jle
lea
mov
inc
add
cmp
jl
pop
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
pushl
pushl
jne
push
pushl
call
jmp
dec
push
call
pop
ret
int3
int3
int3
int3
int3
call
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
pushl
mov
pushl
mov
push
call
mov
mov
movzwl
movl
mov
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
push
push
mov
mov
push
call
mov
push
push
push
pushl
call
mov
push
call
mov
push
mov
call
neg
sbb
inc
push
push
push
sub
lea
push
mov
push
call
cmpl
je
cmpl
je
push
call
mov
xor
xor
call
mov
xor
call
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
test
jne
mov
not
mov
or
mov
lea
push
call
mov
pop
leave
ret
push
imul
jb
je
arpl
lock
add
xor
call
push
mov
pushl
call
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
push
pushl
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
mov
push
push
call
mov
call
push
push
pushl
mov
call
push
mov
pushl
call
mov
jmp
push
push
lea
push
push
pushl
call
xor
mov
push
push
push
push
pushl
call
pushl
mov
pushl
pushl
push
push
call
mov
push
pushl
call
push
pushl
pushl
push
call
lea
push
call
pop
push
lea
push
push
push
push
call
push
lea
push
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
pop
pop
jmp
call
push
mov
call
xor
leave
ret
push
mov
mov
mov
push
push
mov
mov
push
mov
mov
mov
mov
mov
add
xor
mov
movl
mov
add
mov
mov
cmp
je
movzbl
sub
push
call
add
cmpl
jg
mov
mov
mov
movzbl
sub
incl
test
jne
jmp
mov
mov
mov
call
decl
movzbl
sub
je
incl
call
jmp
call
mov
push
push
mov
push
push
mov
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
andl
andl
push
mov
push
push
movl
movl
movl
movl
mov
call
push
push
mov
movl
movl
movl
movl
call
andl
push
mov
call
pop
ret
push
mov
sub
push
pushl
call
pushl
mov
xor
movl
pushl
mov
movl
movl
movl
movl
movl
movl
movl
call
add
test
jne
push
pop
jmp
push
push
push
pushl
call
mov
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
push
lea
push
push
call
add
leave
ret
push
mov
sub
push
push
push
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
pushl
call
mov
mov
add
push
pushl
call
mov
mov
movzbl
mov
movzbl
sub
test
je
mov
add
mov
push
push
push
pushl
call
mov
sub
mov
add
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
call
call
jmp
push
call
mov
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
push
call
mov
add
mov
jmp
jmp
push
pushl
call
mov
pushl
pushl
pushl
push
push
call
add
pushl
call
cmpl
jb
mov
pop
pop
pop
leave
ret
pop
add
add
add
add
dec
jae
and
add
lods
add
add
add
add
add
xor
add
add
add
add
js
in
add
add
insb
add
add
add
sbb
sbb
add
add
add
sbb
pop
add
add
and
popa
das
push
dec
push
popf
outsb
imul
push
cld
add
sti
jecxz
jne
leave
in
js
loopne
adc
mov
pop
push
push
lea
movl
leave
or
je
call
push
leave
in
test
or
dec
or
adcb
sbb
push
decl
call
mov
loopne
mov
mov
add
xor
push
loopne
add
add
je
push
pop
adc
rorb
decl
add
stos
push
add
lea
push
loopne
add
mov
or
inc
jno
call
clc
add
loopne
add
add
pop
add
add
add
add
sbb
mov
sbb
sbb
sbb
add
sbb
jae
gs
add
fs
imul
pushf
add
jb
outsb
je
inc
fs
dec
add
adc
add
je
xor
inc
add
jns
xchg
jne
outsb
jae
sahf
push
add
inc
xor
jb
xor
add
add
jle
add
add
push
add
xor
add
sahf
add
test
add
add
push
das
je
adc
shll
pop
in
lcall
xchg
sbb
repz
dec
addr16
inc
pop
mov
stc
xchg
in
push
bound
das
test
incb
jge
lds
pop
in
mov
xchg
xchg
add
push
and
lret
xchg
add
mov
dec
xor
and
in
jae
adc
pop
jae
mov
pop
pop
and
ljmp
les
test
push
jge
pop
jmp
mov
cmp
xor
dec
mov
loope
cmc
mov
outsl
movups
rcrl
jge
adc
shlb
je
xbegin
mov
pop
insl
push
mov
icebp
daa
sbb
or
or
pushf
rcll
test
pop
jne
int3
sub
sub
jp
out
std
addl
mov
jns
adc
inc
push
or
and
lods
or
popa
mov
iret
repz
sti
xor
jmp
mov
push
out
xchg
adc
sbb
pop
aaa
xchg
cld
xlat
stc
hlt
test
repz
xor
xchg
cmpsb
ljmp
es
pop
xchg
jmp
or
pop
hlt
popf
and
xchg
outsl
imul
and
cli
flds
inc
xor
or
idivb
test
pop
dec
jbe
mov
cltd
push
xchg
lods
dec
call
cmp
ljmp
inc
cmpb
and
out
sub
push
jae
or
pop
or
jne
fistps
dec
pop
pop
fnstenv
and
inc
cli
mov
and
lods
xor
add
mov
and
cmp
add
cmc
rol
xor
sbbl
mov
aad
out
push
aas
adc
mov
and
or
and
loop
mov
xchg
test
aad
jne
cli
cmp
out
outsb
inc
out
aas
xor
std
pusha
sub
cmc
push
sub
sub
pop
shl
xor
cs
pop
xor
out
jns
mov
fs
and
push
cmp
inc
iret
mov
arpl
rcrl
pop
or
cmpsb
repnz
adc
mov
jno
push
mov
lcall
sub
xchg
test
dec
sub
xor
inc
std
add
scas
into
mov
es
or
jne
lods
mov
and
rorl
std
std
xor
jmp
fsubl
pop
pslld
rcrb
mov
icebp
fcmove
les
inc
lods
out
cs
das
sub
js
push
in
lods
outsb
cmp
lods
push
mov
jae
sub
xchg
lods
add
mov
jnp
lock
mov
outsb
cmp
lret
std
cwtl
jae
pop
test
imul
cmp
fldenv
sbb
sbb
cmpsb
repnz
cmp
sbb
sbbb
or
sar
mov
out
popa
pop
cmc
mov
rorl
jl
inc
xor
jns
outsb
mov
xchg
rorl
push
cmp
movsb
jo
lds
lods
int3
sbb
sahf
cs
fnstcw
mov
and
outsb
push
xchg
test
lds
ja
jno
jno
mov
arpl
pop
add
or
fisttpll
push
sbb
cwtl
in
fcmovnbe
or
or
push
lahf
negb
call
cmp
adc
sub
or
xor
sarb
sbb
push
lret
fstl
sub
mov
push
pop
fisttpl
push
dec
mov
in
insb
or
dec
test
add
in
adc
sub
pusha
dec
cmp
iret
and
in
mov
rorl
jp
sbbl
sahf
pop
sub
jp
mov
sbb
cmp
out
mov
mov
jno
fisubs
testb
xchg
jle
and
push
push
mov
xor
xchg
test
ret
adc
and
lahf
test
mov
and
je
imul
out
test
fcoms
add
mov
jo
int3
cmpsl
repz
inc
sbb
inc
xor
and
cmp
shll
loope
adc
sahf
shl
mov
adc
sub
xchg
aad
flds
dec
imul
outsl
outsl
sti
movsb
mov
sbb
out
test
cwtl
mov
pop
mov
imul
add
lock
push
js
out
jns
out
in
pop
jmp
sub
adc
inc
mov
arpl
xchg
mov
jno
fwait
cmpsb
in
push
das
fstpt
faddl
popf
mov
mov
movsl
cmc
fs
mov
pop
divl
mov
mov
or
jne
mov
call
dec
pushw
inc
pop
dec
push
inc
int
mov
loope
sub
in
adc
cld
sub
js
repnz
sub
or
out
xor
mul
movsl
mov
mov
not
adc
cmp
shrb
push
loop
mov
mov
xor
fbld
in
mov
addr16
pushf
or
inc
cltd
mov
mov
jno
inc
pop
imul
xchg
mov
shl
or
call
cmp
gs
aad
ret
repz
out
cmp
test
xchg
test
roll
push
and
adc
pop
jbe
xchg
pushf
mov
and
hlt
insb
jp
mov
fisubrs
fwait
sub
pop
push
rolb
les
mov
popf
pop
nop
std
icebp
xchg
repz
aad
mov
or
lods
sbb
push
rcrl
scas
jns
dec
sub
or
push
fnstsw
iret
scas
xor
test
xor
mov
popa
mov
dec
and
or
xor
add
jecxz
pop
jae
sti
xchg
push
cli
add
out
adc
and
mov
in
xchg
idivl
mov
lahf
push
sub
xchg
mov
sbb
dec
mov
or
cmp
pusha
lock
or
fbstp
xor
js
int3
jmp
pop
sub
fmuls
lahf
daa
pop
cmpsl
xor
popa
das
mov
sahf
mov
inc
mov
xchg
mov
pop
into
ja
xor
sti
push
inc
call
mov
mov
fsubr
in
insl
sub
pop
mov
aam
push
push
cmp
mov
jb
push
mov
int
cmpsl
or
add
cmp
inc
cmp
fsubrp
popa
pop
test
pop
sbb
aaa
stos
or
push
into
lock
pop
sbb
or
mov
dec
pop
adc
pop
inc
xchg
lock
leave
enter
pop
push
and
jno
stc
pop
divl
pop
dec
lock
xchg
sbb
push
jbe
movsl
or
cltd
aad
and
and
pop
js
dec
adc
rclb
jne
negb
xor
or
mov
pop
bound
cli
insl
sti
push
xor
cld
mov
sub
rolb
jmp
pop
xchg
stos
add
popa
mov
xor
push
fnsave
movsl
jmp
mov
jne
sub
mov
loope
sub
andl
jnp
and
xchg
ds
popa
sbb
xchg
repnz
mov
mov
jle
mov
lret
repnz
xchg
xchg
lock
jecxz
dec
mov
sub
cltd
sub
rcl
rcrl
sub
inc
push
in
jl
into
movsb
or
dec
hlt
out
or
cwtl
orl
sbb
pop
fs
sti
outsl
and
data16
hlt
lret
sahf
mov
out
sub
lahf
or
pop
pop
movsl
repz
jno
xor
pop
js
and
adc
pop
js
inc
push
cmpb
push
push
ret
test
adc
push
cwtl
subl
xchg
or
jne
test
sbb
mov
jb
dec
jne
fimull
or
out
jp
lret
mov
adc
ret
cld
decl
jne
jl
push
repz
mov
fldt
shll
or
jbe
ljmp
es
jno
inc
je
mov
adc
pop
cli
in
sub
testb
inc
pop
loopne
xor
out
sub
or
jb
gs
xchg
jne
mov
imul
out
sbb
mov
mov
test
dec
mov
or
cs
jl
mov
xor
mov
outsl
mov
inc
lret
fldenv
in
inc
repz
mulb
ffreep
sbb
xorb
filds
sbb
xchg
fisttpll
jg
xchg
insb
clc
pop
imul
mov
lods
sub
pusha
xor
xlat
pop
push
shl
mov
pop
cmp
sbb
or
inc
sub
pop
repz
roll
jmp
jmp
mov
jno
cmc
lds
add
jecxz
lods
rcll
mov
ss
inc
jmp
icebp
addr16
or
push
movsb
mov
rorb
mov
fists
sub
push
jb
fiadds
mov
mov
pop
lea
out
enter
mov
pushf
adc
xchg
loopne
mov
ror
cmp
mov
fidivl
in
inc
mov
add
xchg
out
dec
cli
and
xor
push
mov
pop
or
or
std
mov
insl
imul
fiaddl
mov
inc
push
mov
out
xor
fisubl
fimull
cld
iret
movsb
and
scas
fisttpll
xor
fimull
xchg
dec
inc
mov
sti
aam
xor
pop
stos
dec
ss
mov
fiadds
jne
ss
xchg
mov
push
data16
push
mov
cld
shll
ret
lret
dec
std
xor
or
xchg
gs
je
sarb
sub
or
pop
or
ljmp
mov
xchg
ret
test
lds
insl
sub
inc
iret
xor
inc
outsb
push
jnp
stc
mov
xchg
jo
xor
pop
sub
iret
lods
in
sbb
inc
xor
xor
movsb
and
mov
hlt
push
les
xor
jb
inc
repnz
mov
scas
or
fstps
sub
cmpsb
mov
mov
xchg
or
daa
inc
adc
cltd
ds
sbb
inc
cmp
cli
repz
cmp
in
and
fnstcw
insl
in
aas
mov
bound
jno
in
jg
inc
mov
ret
loopne
xchg
test
insl
cmp
test
sub
pop
gs
movsl
jp
pop
clc
adc
bound
dec
pop
xchg
or
jecxz
xor
cmp
mov
sub
ljmp
stc
adc
insb
cmp
cmp
shl
mov
mov
jo
cmp
pusha
sub
in
pushf
test
outsl
pop
sbb
inc
out
sbb
sub
idivl
sub
xchg
jno,pn
add
mov
xchg
and
or
lret
jb
hlt
sub
mov
les
add
ficoml
mov
inc
stos
push
dec
push
sub
jns
pushf
and
adc
outsb
int
int3
pop
cwtl
sbb
loope
imul
adc
xor
into
inc
jno
jp
popf
mov
jp
int3
pushaw
aaa
dec
cli
mov
stos
and
lods
push
jne
lock
and
addr16
add
jle
cmp
shll
adc
out
out
xor
inc
clc
or
rolb
pop
or
inc
out
subb
adc
dec
adc
test
movsb
or
adc
sbb
jne
sbb
lret
and
cmp
aad
jle
adc
repz
xchg
pop
icebp
aaa
push
adc
add
lods
popa
dec
sbb
and
pop
je
pop
sbb
shrl
inc
cltd
into
out
cmp
out
jp
mov
mov
lods
cmp
mov
jmp
sahf
loop
add
inc
sbb
leave
into
gs
jecxz
sti
mov
pop
push
pop
or
push
stc
adc
js
sub
enter
adc
mov
decb
push
hlt
ja
push
xchg
popf
insl
inc
popf
mov
dec
cmp
jno
sbb
in
test
outsb
push
stos
and
nop
and
scas
push
push
in
sub
rolb
jle
sbb
bound
sbb
out
jmp
movsl
and
sbb
jb
sub
loope
aam
cmp
cs
dec
loop
hlt
push
idiv
pop
mov
mov
xchg
lcall
cmp
xchg
jecxz
lea
lret
dec
fldt
xchg
sbb
mov
dec
xchg
fcmovb
test
loope
fisubl
pop
sbb
cmp
cli
adc
imul
sub
xor
call
push
jg
xchg
scas
pop
push
daa
idivb
fcomps
jg
adc
std
aaa
or
sub
push
incl
int
mov
lods
mov
out
popf
mov
fs
push
xlat
lret
mov
cld
xchg
bound
lods
mov
mov
mov
cmp
aam
xor
je
fildll
and
clc
std
aaa
fistl
inc
ret
lock
mov
mov
and
dec
in
push
dec
mov
mov
sub
cs
imul
jbe
jo
fld1
ret
xor
ret
inc
fcoms
push
sbb
push
test
sbb
sbb
stos
xchg
imulb
jmp
push
pop
xor
imul
aad
pop
adc
out
fwait
push
inc
adc
daa
test
mov
pop
out
jmp
mov
cmp
adc
outsb
push
inc
stos
outsl
xchg
xchg
mov
pop
out
stos
lahf
bound
sbb
adc
mov
insb
insl
test
adc
dec
lods
inc
push
pop
scas
mov
test
out
mov
xor
imul
shrb
mov
jmp
xlat
dec
scas
mov
xchg
ret
mov
mov
push
out
mov
test
xchg
mov
pusha
test
test
icebp
pop
fistpl
mov
mov
test
and
rolb
push
rolb
push
pusha
pop
mov
inc
loop
push
iret
roll
mov
xchg
sub
repz
mov
int3
lods
test
xchg
insl
jg
repz
push
aam
adc
iret
inc
adc
and
dec
int
jns
mov
into
xor
mov
aas
pop
jae
lods
inc
insl
icebp
movb
or
push
divb
aas
lret
icebp
sub
jo
lods
sbb
adc
dec
mov
add
out
or
xor
xor
loope
and
dec
mov
aas
cmp
push
pop
aaa
adc
lahf
pushf
rclb
leave
cmpsb
pop
lods
or
shrl
movsb
mov
add
cltd
add
sbb
adc
pop
leave
loope
xlat
adc
bound
adc
aad
jge
insb
push
inc
xchg
sub
rclb
and
mov
ljmp
fidivrs
add
fstps
push
mov
das
mov
scas
sbb
loopne
fisttpl
pushf
mov
insl
jle
pop
lret
scas
aad
inc
lcall
xor
push
sub
jns
sbb
adc
cwtl
xchg
adc
hlt
pop
adc
outsl
mov
push
push
push
pop
fmull
lret
js
fisttpll
test
mulb
sahf
cld
mov
pop
aad
or
mov
cmpsb
add
adc
in
sti
push
sub
cmp
pop
test
inc
test
call
cmpsb
push
dec
and
or
pusha
xchg
ds
sub
out
mov
je
jae
jle
lcall
icebp
call
insb
nop
push
out
cmpsl
sbb
mov
lahf
es
push
popa
add
imul
lret
repnz
pop
or
pushf
fisubl
fcoms
bound
in
popa
jnp
lds
scas
cmpsl
or
setbe
ja
lret
out
sub
adc
popa
mov
loop
jbe
mov
cmp
inc
jae
iret
imul
mov
pop
dec
ja
jns
and
daa
fwait
nop
mov
cmp
mov
movsl
sub
pop
mov
movsl
ror
repz
push
mov
cli
in
sub
sub
jnp
aam
jge
popa
jae
out
lcall
sbb
bnd
add
jnp
fcmovne
or
scas
cs
mov
push
xchg
les
inc
sbb
lcall
mov
and
dec
cmpsl
jle
lahf
int
push
fiadds
push
cmc
jp
sbb
pop
inc
shl
outsb
adc
lods
pop
lret
pop
testl
lea
cmp
ds
fstpl
imul
sbb
gs
shlb
mov
jmp
adc
jg
cld
test
mov
pop
xchg
jnp
sbb
arpl
and
movsb
repnz
addr16
jp
test
sbb
inc
dec
mov
pop
insl
les
jns
jae
into
and
push
sbb
xor
sub
inc
cmp
int3
imul
mov
pop
mov
cmp
out
xor
pop
add
push
aas
icebp
stos
or
aaa
xor
dec
or
mov
test
mov
jge
imul
jecxz
sub
and
cmpsl
call
lods
fdiv
out
cld
dec
sub
and
shrb
iret
fldt
ja
inc
xor
jns
rcll
mov
mov
xor
pop
scas
sub
subb
subl
icebp
push
mov
adc
or
outsl
scas
xchg
dec
out
push
pop
lahf
push
adc
movsl
aam
xor
add
push
jae
mov
jno
mov
dec
divl
adc
inc
iret
adc
rcr
loop
lret
mov
or
dec
and
or
sub
adc
int3
pusha
mov
push
fdivs
insb
sbb
and
loop
popf
fwait
cld
les
mov
inc
inc
jl
jne
outsb
mov
or
add
add
pop
add
lds
add
add
add
add
push
add
add
add
jle
add
add
push
add
xor
add
sahf
add
add
add
add
add
xor
sbb
add
add
add
addb
adc
stos
add
dec
int3
int3
int3
int3
int3
int3
int3
int3
add
add
add
add
and
and
js
dec
loopne
add
add
add
adc
inc
add
add
add
mov
popa
or
sahf
inc
add
add
add
mov
lcall
push
or
xor
and
repz
push
jb
push
jb
outsb
inc
dec
inc
add
bound
add
fcmove
sub
inc
mov
lcall
jmp
fdiv
or
incl
xorb
adc
push
push
je
test
cld
push
call
sub
push
push
lock
in
inc
stc
or
xor
add
adc
repz
cld
enter
faddl
pop
add
add
push
call
xor
rolb
add
incb
sti
add
call
or
cld
xor
cld
and
adcl
inc
lock
popf
or
lcall
sar
dec
lahf
repz
pop
xor
push
mov
hlt
push
push
add
mov
add
in
js
add
lock
movb
push
jbe
xor
cmp
out
xor
add
dec
add
je
js
outsl
movsl
outsb
insl
je
add
inc
in
movsl
gs
jb
outsb
outsl
imul
je
popa
insb
imul
jne
push
out
xor
outsl
imul
loopne
insb
push
insb
xor
dec
testb
add
fiadds
add
add
add
add
add
add
out
iret
adc
imul
int3
mov
adc
mov
jmp
jbe
fstps
imul
or
movb
sbb
andl
push
ret
in
mov
add
fwait
ret
add
push
sar
iret
mov
add
cmp
sub
add
cmp
jno
dec
jnp
sbb
mov
inc
mov
adc
or
mov
repnz
push
adc
push
xor
inc
test
inc
mov
push
mov
pop
mov
mov
test
sbb
sub
mov
jge
insl
out
jg
std
pop
or
pusha
mov
lcall
fdivl
sahf
add
cmp
sbb
insl
and
pushl
jecxz
int
mov
mov
and
dec
int3
in
xor
les
mov
mov
loop
mov
push
lds
data16
cmp
mov
inc
mov
shlb
jmp
loope
popf
or
stos
cwtl
pop
mov
lods
lcall
sub
fmuls
aaa
push
mov
lcall
je
popa
mov
adc
inc
mov
jno
inc
mov
xor
jmp
push
ss
cs
andl
xor
out
ret
or
mov
sub
inc
mov
inc
push
xchg
in
push
mov
enter
pop
cld
add
add
adc
mov
repz
dec
inc
xchg
pop
filds
or
stos
jge
insl
xchg
cmp
adc
mov
xor
and
rcrl
xor
ss
aaa
sub
lret
icebp
sahf
or
loop
sbb
arpl
dec
lahf
dec
add
sbb
pop
xorl
mov
add
mov
fadd
lret
movsb
movsl
dec
mov
sbb
pop
enterw
push
inc
fucomi
stos
pop
mov
inc
jns
cs
or
adc
xor
les
test
lods
push
jecxz
sub
mov
pop
mov
cmp
inc
out
xchg
test
jo
inc
or
or
xchg
or
cmp
lea
mov
cmp
in
cmp
lods
and
push
adc
xor
pop
mov
shl
xor
fstl
dec
push
rcll
sub
popa
pop
sbb
cltd
adc
das
nop
stc
xchg
mov
lret
pop
stos
rcr
loope
rclb
scas
xor
lahf
jg
aam
jl
arpl
rcrb
inc
test
test
cmp
sbb
xorb
fs
ja
es
push
adc
add
leave
cmp
push
out
test
jecxz
es
movb
je
push
mov
outsb
inc
or
sbb
insb
sub
jno
mov
movsb
lods
pop
nop
in
imul
lods
test
in
mov
daa
adc
mov
scas
add
sahf
fwait
xchg
mov
cmp
mov
andl
xor
jmp
sub
cmp
lods
sub
hlt
mov
pop
ljmp
xor
mov
ja
imul
cltd
pop
testl
loop
add
cmpsb
mov
pop
cmp
jns
mov
cwtl
sbb
jbe
and
lret
add
out
repz
incl
mov
jge
shlb
ret
xchg
stos
inc
jns
mov
pop
adc
sub
das
daa
push
sub
mov
cmpsl
sub
test
in
ds
adc
xor
bound
and
out
sbb
add
push
ror
push
mov
dec
or
inc
mov
dec
pop
pushf
or
je
add
ja
jns
repnz
mov
pusha
out
mov
mov
cmp
ja
cmp
ret
sub
xor
loopne
enter
in
scas
div
dec
cmp
fwait
pop
popl
jg
cmpl
push
push
jl
mov
push
cld
cmp
aas
ss
outsl
xor
repnz
pop
pop
inc
rolb
add
sbb
and
in
mov
pop
int3
ret
inc
pop
ljmp
hlt
ds
mov
int3
or
cmp
xorb
adc
sarb
xchg
xor
sub
orl
add
out
fiadds
xchg
es
fs
lcall
jl
stc
les
mov
cmpsb
xchg
clc
xor
mov
sbb
div
les
ret
mov
pop
cwtl
test
fidivs
out
inc
push
pop
dec
mov
cltd
push
mov
xchg
pop
cli
xor
mov
out
mov
test
cmp
clc
ja
shrb
test
sub
rolb
int3
mov
push
xchg
js
inc
fucomp
pop
aaa
negl
movsb
pusha
and
sub
enter
xchg
mov
nop
dec
daa
ljmp
subb
ret
adc
mov
xchg
push
xchg
popa
pop
int3
imul
fnstenv
movsl
icebp
lods
gs
sbb
mov
jo
dec
std
out
jg
cmp
into
into
test
fistpl
jle
ljmp
jmp
jae
mov
pop
cmp
add
xor
jg
mov
adc
dec
loop
test
lahf
adc
lcall
mov
xlat
or
ret
imul
sub
mov
test
lods
clc
sbbl
push
enter
adc
xor
sbb
cmp
or
hlt
mov
fs
pop
pop
xchg
and
pop
fistpll
xchg
fildll
add
jecxz
pusha
fimuls
stos
mov
fimuls
int3
shr
icebp
pushf
or
xchg
adc
adc
stos
mov
cld
ficompl
rorb
push
inc
sbb
sub
ret
mov
in
dec
sbb
jecxz
xchg
add
ds
xchg
xor
aam
add
jg
scas
shlb
dec
mov
push
jbe
sbbb
arpl
repz
in
adc
dec
dec
adc
pop
fldl
xor
and
lock
out
pushf
out
jmp
and
sbb
mov
xchg
lret
fs
inc
xchg
or
mov
fiaddl
inc
in
xchg
pushf
add
pusha
testl
ja
or
shll
jle
and
ss
or
out
addr16
mov
or
mov
sub
pop
push
sub
pop
xchg
cli
fcomps
push
mov
mov
test
lods
popa
push
dec
jb
scas
xor
repz
lds
adc
out
test
sub
push
jg
loope
sbb
cltd
and
cmp
outsb
mov
leave
or
sbb
mov
lret
pop
jnp
adc
jecxz
sbb
inc
sbb
jl
dec
mov
sub
adc
fstps
sub
pop
dec
cmp
lret
add
cmp
test
clc
sub
jbe
xchg
mov
loopne
mull
push
xor
insl
ljmp
dec
jl
mov
call
fmul
xlat
shll
adc
push
sahf
jns
push
mov
mov
cs
clc
fsubr
and
sub
jg
dec
testb
pop
into
cmp
or
popf
pop
movsl
loope
mov
and
loopne
jg
cwtl
push
into
repz
jne
xchg
mov
or
sbb
cmp
cmp
adc
jecxz
mov
inc
fidivrs
sbb
mov
mov
mov
push
test
dec
jg
dec
clc
aad
adc
inc
mov
testl
out
adc
cli
and
mov
jp
mov
inc
popa
lock
test
loope
sbb
stos
pop
xchg
or
ret
mov
bound
mov
sbb
mov
mov
stc
mov
cmc
dec
jecxz
sub
mov
pusha
jle
mov
sahf
stos
cmp
pop
fdivs
out
sbb
cmp
test
lds
test
sub
out
jae
lock
xchg
fstps
xor
mov
jmp
cld
pop
xchg
movsb
hlt
add
mov
test
stos
mov
outsl
pop
pop
mov
or
xchg
aas
jmp
adc
out
popf
icebp
out
fwait
sub
roll
lret
jnp
add
mov
jo
cltd
push
mov
pop
lret
jecxz
cmp
mov
dec
push
mov
jae
xor
or
arpl
and
cmp
fnstenv
xchg
adcb
and
jbe
jp
mov
xchg
ja
aas
cli
movsl
jns
add
mov
xchg
mov
push
adc
sub
lahf
dec
fstpt
aad
call
push
push
enter
lods
shl
xchg
mov
imul
mov
inc
pushl
push
pop
xor
mov
mov
fsubr
push
das
rcl
xchg
and
jl
fldcw
adc
mov
push
int
push
mov
sbb
rcr
lea
or
iret
mov
pop
loope
sub
aas
out
fs
bnd
jo
inc
movsl
mov
clc
movsb
xchg
sbb
jo
sarl
incb
pop
dec
adc
fstpl
sbb
sbb
mov
sbb
sbb
shll
jne
jnp
inc
ss
sbb
add
push
cmc
dec
push
sbb
push
outsb
call
add
mov
cmp
jnp
movsl
pop
cmpsl
inc
xchg
pop
xchg
ret
jns
sbb
stc
sbb
sub
dec
daa
mov
inc
pop
testl
pop
jp
ja
xor
adc
push
fmull
jno
rclb
add
inc
jo
cmp
mov
int3
add
sub
les
jo
out
lea
les
cmpsl
fcmovbe
mov
lods
sbb
in
mov
lahf
xlat
jno
xor
fildll
adcb
dec
jns
roll
adc
mov
push
mov
jae
int3
push
mov
lcall
jns
aaa
ds
mov
mov
dec
sub
and
je
mov
mov
out
loope
imul
push
mov
enter
out
add
in
mov
repnz
mov
inc
sub
and
push
adc
lret
cmpsl
lock
add
push
repz
ret
sbb
or
add
adc
dec
jp
push
aaa
insl
jge
pop
add
and
sbb
push
cld
loop
adc
sub
ja
jle
inc
cmc
loopne
or
lds
add
fs
jnp
cmp
or
push
mov
push
xchg
push
insb
dec
add
mov
lret
or
in
pop
adc
out
into
push
xor
push
mov
pop
inc
movsl
mov
mov
mov
out
pop
sahf
lahf
imul
adc
push
sbb
and
popf
xlat
xchg
inc
ffree
cmp
jno
cmc
dec
xchg
cmpsb
fwait
int3
xchg
popf
fcompl
mov
fwait
jae
cmp
ret
dec
shrl
mov
jo
jmp
adc
aam
lcall
mov
pop
push
fwait
jb
mov
movsw
jbe
loope
cmp
movsb
dec
jle
leave
das
cli
push
in
pop
or
test
enter
cmc
inc
adc
mov
nop
ret
ret
pop
out
xorl
add
pop
movsb
jnp
rol
xchg
jg
xlat
xor
sbbl
cmpsb
popa
add
and
scas
push
outsl
jp
ja
jno
in
mov
das
aas
fnstsw
lea
not
sbb
push
shll
cmp
enter
sbb
popf
xchg
ljmp
adc
daa
push
enter
jne
push
dec
imul
jmp
mov
and
mov
int3
mov
xchg
jbe
js
rcll
dec
or
popa
push
les
pop
xchg
inc
shlb
arpl
scas
rol
mov
sti
xchg
scas
negl
out
sar
push
adc
jl
lcall
out
fiaddl
add
xchg
cmp
cmp
lcall
or
movsl
clc
std
inc
adc
leave
sbb
das
push
cltd
fcomps
fs
mov
stos
cmc
push
gs
mov
imul
cmp
and
mov
xchg
push
pop
cli
cmp
xchg
adcl
xor
mulb
popf
xor
jmp
dec
sbb
loope
js
sarb
xchg
add
fdivr
sub
int
paddd
xor
mov
jne
sbb
andl
mov
and
outsb
into
sbb
or
lock
push
rolb
jnp
dec
and
test
mov
adc
and
in
popf
xchg
test
and
sahf
mov
and
push
inc
cmc
stc
clc
and
repnz
inc
jl
mov
xor
jae
jne
out
dec
test
test
or
inc
mov
in
fdivrl
cltd
pusha
hlt
pop
loopne
push
clc
leave
sub
dec
mov
or
js
jo
ror
loopne
mov
and
in
stc
sbb
add
int3
lods
xor
mov
shr
adc
xchg
sub
jmp
mov
enter
int
sbb
or
jmp
hlt
mov
fstpt
mov
jae
xor
mov
test
lock
cli
add
imul
std
mov
mov
mov
hlt
inc
inc
inc
scas
addr16
cmpsb
push
sbb
add
cmp
mov
jmp
adc
outsl
pop
mov
ffree
mov
adc
push
push
add
lock
outsb
int
aas
pop
lods
pop
loopne
jbe
inc
or
repz
jecxz
dec
adcb
les
inc
mov
and
aaa
loop
lahf
push
xchg
cmc
cltd
sub
lcall
xor
jp
cmp
in
out
cwtl
iret
mov
outsb
xchg
xlat
test
dec
aam
mov
cli
xchg
xor
cmp
mov
jp
lock
stos
test
bound
int3
cwtl
mov
incb
aas
push
fists
stc
pop
clc
aaa
stos
or
adc
sbb
movsl
adc
push
repz
test
mov
xchg
push
je
int3
pusha
out
or
push
adcb
rorb
xor
insl
add
add
pop
xchg
jns
cmpsb
je
dec
sbb
cmp
in
dec
out
jg
pop
pop
aaa
mov
mov
mov
es
lea
xchg
add
scas
lcall
dec
push
push
mov
pop
fwait
lods
add
xchg
dec
ljmp
faddp
mov
xor
stc
and
stos
cld
pop
mov
jecxz
lods
test
jmp
adc
ret
out
mov
lds
or
mov
aad
pop
jg
out
iret
and
test
lcall
jb
xor
cltd
push
or
pop
jp
loopne
ja
hlt
aaa
and
push
out
out
enter
lahf
imul
xor
out
jnp
jp
dec
fbld
mov
fldl
jnp
mov
or
dec
jo
fisttps
adc
mov
je
out
adc
push
loop
mov
mov
sti
cmp
or
mov
mov
adc
js
dec
pop
mov
mov
mov
shlb
insb
je
or
lods
mov
adc
pop
inc
fimull
adc
sbb
jae
push
std
cld
ror
fmull
adc
idivl
inc
mov
mov
sub
imul
ja
sub
ss
test
xchg
or
lds
push
sub
xor
idivl
jl
jle
mov
mov
rcrl
mov
pop
xlat
mov
scas
dec
mov
and
sub
in
sub
mov
cmp
dec
dec
mov
cmp
or
add
inc
mov
cli
inc
outsb
xchg
pop
sbb
mov
out
pop
iret
sarl
dec
adc
shl
aad
mov
leave
divl
cli
loope
jp,pt
hlt
adc
xchg
aam
lods
enter
dec
push
sbb
out
sub
cld
mov
negb
dec
cmpsl
pop
repz
iret
or
mov
sub
int
inc
scas
jmp
mov
mov
dec
adc
repz
hlt
pop
mov
jmp
or
sub
js
dec
stos
inc
push
scas
inc
es
xor
xchg
xor
test
and
dec
adc
cmp
xor
mov
sbb
int
call
push
xlat
lret
mov
cmp
loop
adc
aad
jb
or
stc
xor
or
sbb
cmpsl
push
mov
insl
jno
push
adc
jle
mov
fdivr
sub
cwtl
imul
xchg
movsl
mov
sbb
loop
xchg
jg
jl
xchg
cmc
push
pop
sbb
hlt
xor
add
pop
dec
popa
test
shlb
jno
jb
fldlg2
mov
ret
mov
scas
add
cs
lcall
push
cmp
aas
xchg
and
xor
mov
jnp
adc
and
push
mov
and
test
xor
or
jo
and
lea
push
ss
bound
mov
pop
sub
stc
dec
or
psubw
pop
cmpsb
inc
rorb
inc
pusha
jnp
or
xor
cmp
insb
mov
push
mov
push
adc
add
ret
int3
fadds
mov
push
out
mov
stos
leave
jecxz
mov
cwtl
xlat
sbb
xor
cltd
cwtl
xchg
into
sub
dec
xor
xchg
fwait
dec
pop
cli
xor
in
and
scas
jmp
cwtl
aas
dec
in
lods
cmpsl
jns
push
test
cmp
add
sbb
mov
or
mov
addr16
ja
and
in
and
pushf
cmp
in
jl
hlt
dec
leave
push
xchg
inc
push
leave
push
rol
mov
and
adc
cmpl
pop
test
xor
adc
int3
xchg
roll
jg
roll
xor
popa
and
dec
ret
inc
sub
bound
mov
lahf
repz
or
xor
and
mov
jp
push
mul
jnp
pop
popf
push
add
inc
jle
mov
int3
ret
add
add
add
add
add
incb
add
add
add
add
add
add
add
add
fiadds
add
push
pusha
sbb
add
add
imul
add
scas
add
add
or
add
add
or
in
in
ficompl
and
add
add
addb
stos
mov
ja
js
js
js
js
int3
int3
int3
int3
int3
int3
int3
int3
add
add
aad
add
push
mov
add
xor
inc
adc
add
popl
std
add
mov
add
add
add
add
add
add
jb
add
add
add
add
sbb
sbb
sbb
sbb
sbb
add
scas
jae
jne,pn
dec
arpl
imul
add
pop
jb
inc
enter
jecxz
out
mov
fimull
add
scas
mov
adc
mov
pop
mov
or
repz
idiv
idiv
cs
fcoms
jmp
xchg
add
clc
clc
pushf
mov
xor
pop
mov
sub
out
pop
add
push
ljmp
call
add
test
pop
add
jbe
adcl
je
test
jge
decb
cmp
test
test
cmp
or
or
adc
mov
loopne
adc
je
clc
loopne
clc
mov
movsl
incl
mov
push
inc
cmp
add
add
push
adc
sbb
add
add
dec
add
add
add
add
add
inc
sbb
sbb
sbb
out
add
imul
add
gs
inc
or
add
arpl
gs
add
insb
add
push
jae
outsl
inc
add
je
xor
add
inc
gs
add
push
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
add
add
add
movsl
adc
mov
movsb
push
mov
jge
push
inc
push
sbb
lret
stos
lea
push
mov
stos
jge
daa
add
insl
mov
out
jnp
sbbl
pop
psubw
mov
imul
aas
test
popa
mov
jne
lods
jle
push
rcrl
lods
jge
bnd
movsl
les
mov
fimull
adc
xchg
cmpsl
sub
in
in
dec
lock
or
sar
pushf
xchg
mov
mov
mulb
lods
lods
add
and
xor
cmp
jno
lea
mov
inc
lea
stc
mov
fdivs
inc
mov
stc
adc
push
mov
daa
imul
bound
mov
sarl
outsb
xchg
fisttpl
daa
inc
cmp
dec
jae
mov
aas
subl
in
dec
rclb
add
subl
push
or
mov
imul
mov
ja
or
cs
adc
or
adc
mov
or
int
sar
loop
mov
xlat
sub
xlat
adc
scas
xchg
mov
idiv
sub
into
fdivrs
lods
mov
mov
je
adcl
imul
sarl
cwtl
out
push
mov
jp
gs
or
sbb
xrelease
jp
dec
xor
xchg
mov
mov
jecxz
out
pusha
mov
mov
push
pop
jno
xchg
ret
inc
mov
lds
mov
push
cmp
sub
xor
xor
cmpsb
ljmp
cmp
mov
fwait
sahf
cmpsb
adc
adc
jo
xor
xchg
xchg
repnz
mov
outsb
out
in
call
ja
cmp
or
dec
xor
lret
stc
sbb
daa
shlb
lods
sbb
cmp
lock
test
lahf
cmp
jmp
sbb
sub
scas
add
sbb
gs
inc
inc
cmc
fwait
mov
shll
jae
inc
sbb
cmp
call
cmp
pop
cwtl
les
fiaddl
hlt
das
in
int3
xor
adc
jne
pop
rcll
mov
scas
push
jg
mov
fcoml
lods
lret
cmc
aas
mov
sbb
add
jns
push
cmp
dec
push
aaa
xchg
pop
sbb
dec
std
sub
mov
jge
mov
adc
ljmp
cmp
gs
sbb
shlb
adc
adc
xlat
adc
shll
in
insb
mov
clc
xchg
push
repnz
clc
mov
push
aad
inc
popf
pop
xchg
ja
stos
dec
cmpsb
emms
sub
mov
mov
arpl
adc
or
aaa
loopne
pop
mov
inc
jns
jp
jb
mov
sahf
nop
arpl
fcoms
fiaddl
sbb
out
outsb
pop
dec
jo
mov
out
loope
mov
jae
jmp
add
jecxz
push
sub
sbb
jns
addr16
sbb
sbb
loop
xchg
xchg
ja
adc
pop
xor
adc
subb
or
mov
or
jne
push
push
insb
lods
loopne
inc
jnp
jae
and
je
cltd
lcall
pop
aam
adcl
aad
mov
pop
cmc
sub
lret
gs
movsl
sbb
mov
lods
imul
or
mov
xorl
dec
das
jg
cmp
jl
sub
dec
daa
jns
fsubl
mov
aad
jecxz
mov
rclb
das
les
mov
xor
fistl
jge
fcompl
outsl
sahf
sub
out
test
push
sub
nop
les
mov
loop
je
xchg
iret
sbb
jae
sub
inc
mov
js
cmp
xchg
cmp
adc
push
pop
cmp
xchg
fstpl
mov
clc
add
xor
and
stc
mov
stos
add
cli
repnz
rcr
dec
mov
stos
mov
fstps
cs
push
fildl
or
push
or
outsb
xchg
inc
pop
pop
inc
mov
jecxz
mov
mov
push
mov
add
mov
aas
xchg
dec
test
es
add
and
enter
xor
ss
insb
mov
pushf
ss
cmp
xchg
les
or
popf
xlat
or
cmp
cmp
sbb
jns
mov
push
sti
loopw
cmp
fisubl
popa
sbb
sub
mov
ret
push
xor
sbb
mov
mov
fcmovnb
push
nop
pop
pop
into
sub
lret
or
mov
rcrl
leave
cmp
dec
or
sbb
popa
jbe
mov
or
lock
and
stos
into
dec
enter
repnz
pop
mov
sbbl
add
fistl
mov
push
ret
ss
push
xlat
and
std
xchg
inc
push
inc
sbb
pop
pop
cmpsb
add
adc
test
jg
int
jg
in
adc
jle
ss
or
repnz
cwtl
test
daa
mov
xchg
xchg
inc
sbb
mov
insl
mov
lds
sbbl
stos
dec
jo
cmp
pop
push
or
repnz
xor
jne
clc
loop
inc
andl
cmp
inc
adc
mov
adc
cmp
sbb
movsb
xlat
mov
mov
inc
jle
decl
push
adc
xor
fadd
jmp
sub
mov
add
or
cmp
sbb
sub
loopne
inc
stc
mov
push
aam
xor
and
and
orl
push
mov
stos
jbe
idivl
in
mov
pop
test
repz
cmpsb
int3
in
fdivrl
pop
mov
arpl
sbb
fdivs
scas
lret
mov
pop
xor
fsubs
ljmp
mov
daa
pushf
ss
movsl
push
add
xor
scas
sbb
push
scas
testb
xor
cltd
in
mov
ja
jge
cs
cmc
push
imull
popa
sbb
pop
es
mov
enter
cmp
loopne
pushf
xor
push
xchg
jbe
in
loope
insb
hlt
or
shl
mov
adc
jecxz
sub
sarl
dec
inc
das
push
call
and
aaa
int3
mov
pop
cmp
xor
mov
in
fldenv
std
inc
ds
inc
dec
pusha
xchg
jnp
lock
xor
in
xchg
mov
stos
in
test
test
or
push
add
mov
fisubl
xor
movsb
jbe
arpl
push
dec
add
pop
mov
or
insb
mov
pushf
call
jl
dec
in
fldt
adc
dec
and
pop
xchg
or
xchg
ror
in
push
addr16
ss
jge
push
lahf
pop
out
out
push
std
repnz
jne
subb
cltd
ja
jo
fs
sub
dec
iret
jb
test
lcall
cmc
cmp
adc
popa
repnz
cmc
mov
nop
loop
and
or
loope
sub
shrl
in
cmpsl
in
sub
sub
iret
xchg
push
and
cltd
dec
pop
inc
outsb
stos
cltd
sbb
test
or
xchg
mov
daa
mov
mov
push
xchg
fistpll
sub
shll
pop
sahf
jmp
insb
mov
pushw
jp
aam
add
mov
popf
add
lock
adc
or
and
jnp
xor
call
mov
xor
add
xor
mov
sti
daa
mull
adc
jmp
sub
aad
addb
repz
jno
mov
fcoms
jmp
adc
pusha
test
test
pop
ret
xchg
arpl
dec
int
rclb
pop
sub
inc
pop
sarb
ss
and
lret
pushf
xchg
push
sti
jae
insl
fisubrl
xchg
popa
jb
addr16
mov
movsl
pushl
mov
fidivrl
mov
mov
jl
cmp
jno
aas
loopne
sub
mov
cmpsl
xor
mov
pop
outsb
ja
mov
das
fwait
cwtl
pop
int
xor
cmp
inc
add
jne
push
rclb
lcall
pavgb
shlb
repz
outsb
jb
leave
arpl
jae
xchg
clc
mov
aad
or
stos
mov
jge
xor
hlt
add
mov
sub
cmp
call
lock
or
jp
ljmp
add
push
cs
xor
fdivl
mov
xchg
cmpsb
push
ret
in
sub
mov
sub
pop
xchg
jo
xorl
pop
into
inc
xchg
gs
push
in
mov
mov
jl
inc
mov
scas
push
out
sbb
cmc
sbb
stos
je
push
mov
cmp
mov
pop
shrl
aad
mov
insl
cmpb
xor
mov
cmp
shlb
mov
fs
cld
pusha
pop
adc
repz
mov
fistps
or
mov
rclb
orl
arpl
pop
mov
jae
or
cld
adc
xchg
es
xor
outsl
or
push
jne
lret
xorb
inc
gs
jne
aad
add
movsl
sbb
in
adc
rcll
leave
pop
jp
fdivrl
dec
subl
sub
push
jecxz
leave
in
icebp
sar
es
test
hlt
push
nop
movsl
sti
adc
inc
inc
jmp
leave
lret
fildll
xor
les
sti
imul
push
jl
push
aam
mov
ret
push
jns
fs
enter
std
test
gs
xchg
mov
mov
negb
inc
std
std
pop
out
sub
clc
sbb
sbbb
das
sub
mov
and
gs
jmp
iret
daa
rcrb
sbb
movsb
inc
ja
test
imul
dec
imulb
mov
mov
pop
push
out
mov
sub
jg
bound
push
mov
push
nop
cmp
xchg
clc
pop
cmp
scas
xor
ret
push
cs
aaa
mov
orl
lahf
jb
and
enter
jecxz
jg
dec
push
bound
test
or
sbb
xchg
xchg
cmp
les
bound
cmc
inc
add
pop
inc
mov
cmp
les
xorl
dec
shlb
fistpl
in
rolb
es
aam
neg
ret
dec
int3
test
mov
lret
push
adc
xchg
cmp
outsb
jecxz
sbb
xor
iret
pop
out
inc
shll
pusha
sub
inc
aas
sub
and
push
jbe
xchg
jbe
cmpl
jmp
lcall
inc
jb
pcmpgtb
xor
stos
rcl
sub
in
lock
loopne
lea
mov
push
xchg
lods
pop
ret
sbb
sbb
movsb
pop
stos
and
hlt
sbb
loopne
outsb
sub
jb
fwait
xor
in
cmp
repz
mov
jno
inc
inc
sub
xchg
mov
roll
ljmp
add
sbb
loope
imulb
jno
sub
mov
push
into
fsubs
jecxz
adc
jnp
popa
aaa
add
or
xchg
test
mov
add
mov
or
fldl
xor
cmpsl
ds
fwait
and
scas
add
std
das
xor
pop
pop
lock
ds
pop
nop
sahf
pusha
out
pop
ror
pop
push
ss
cmp
mov
jl
fmulp
push
mov
mov
mov
push
push
cmp
mov
xchg
lcall
jle
sbb
imul
xor
sub
inc
adc
inc
push
mov
cmp
jo
cmp
xor
sti
not
and
andb
mov
jg
xor
fistpl
pop
dec
andb
mov
sbb
imul
xor
sub
xor
xchg
adc
dec
mov
int3
fbstp
insl
js
push
push
push
inc
sbb
inc
notb
xor
or
ljmp
icebp
xor
mov
pop
les
push
enter
mov
mov
daa
and
inc
xchg
inc
test
xor
or
sbb
dec
inc
outsb
pop
sub
and
mov
int3
outsl
insl
int3
bound
ss
xchg
insl
icebp
sar
shll
mov
mov
push
hlt
fsubrl
pop
or
push
fs
neg
add
mov
into
pop
jns
jns
inc
or
push
pop
rcll
pop
jle
cmp
cmpsl
add
sbb
mull
repnz
add
std
insl
cmpsb
repz
sahf
jno
push
xor
int3
std
mov
jmp
outsl
mov
xchg
fldcw
fucom
adcl
ffree
imul
mov
add
int3
xchg
inc
sub
pop
aad
pop
pop
mov
jbe
or
xchg
sub
xlat
add
add
sub
cmc
and
shlb
xor
and
inc
sbb
repnz
rol
mov
xlat
mov
cmpsl
lahf
mov
add
ljmp
jne
xor
pop
jmp
xor
out
dec
and
adc
and
mov
sbb
stos
imul
and
inc
lods
push
jge
add
push
insl
sbb
fwait
cmp
mov
mov
aaa
xlat
fdivp
dec
mov
adc
adc
push
enter
xor
sub
out
out
jl
pop
fnsave
or
mov
sub
mov
mov
aam
xorl
push
or
fiaddl
shr
dec
shrb
add
popf
mov
je
mov
bound
inc
fdivr
lea
ds
pop
mov
movsl
stos
inc
inc
sub
fs
jp
cltd
lret
xor
sbbl
shll
loope
loopne
cwtl
sbb
in
lahf
scas
add
leave
int
ljmp
je
or
es
xchg
call
mov
adc
rclb
cltd
xor
pop
imul
pop
or
adc
pop
push
mov
sub
jp
mov
testb
test
or
add
addr16
mov
out
lret
sub
test
bnd
jmp
ret
dec
inc
pushf
ret
cltd
xlat
insl
push
or
movsb
scas
sub
popf
mov
sub
dec
adc
push
sar
sbbb
mov
das
mov
xchg
idivb
popf
test
jge
pop
xor
pop
fst
fwait
or
loopne
int3
xor
int3
fwait
jne
sbb
sbbb
fldenv
lret
addr16
int
xor
xor
jmp
jge
je
fmuls
popa
data16
sbb
out
adc
sub
xor
ret
cs
xchg
cmp
push
push
pop
jno
dec
xchg
inc
or
adc
cmc
rorl
xchg
addr16
xchg
and
js
call
in
or
inc
fadd
fildll
ds
sub
lret
adc
not
fcoms
mov
int
mov
aad
push
sbb
or
mov
sarb
cmc
xor
dec
mov
ss
test
pop
sahf
push
push
push
cmp
pop
daa
fbld
mov
adc
dec
push
lods
ja
lock
aas
ror
cmc
xor
xor
cmp
or
lods
pop
fildll
das
fstpt
ret
adc
xchg
cld
stos
jno
sarb
mov
xchg
add
pop
jae
cs
jnp
fsts
hlt
and
sbb
xor
stc
fcmove
dec
loope
cli
test
ret
cltd
or
mov
cmpsb
mov
push
lock
and
outsl
sbb
pop
pop
pop
inc
rcrl
xchg
mov
mov
xor
mov
jno
movsl
shrb
jo
sahf
scas
mov
mov
loopne
xchg
roll
mov
inc
and
push
aam
adc
in
push
mov
jl
push
adc
aam
dec
sub
pop
xor
popa
fsubl
xor
cmp
fstpl
lds
mov
jno
mov
ret
push
and
aad
test
jbe
orl
jns
sub
sbb
xor
dec
cltd
dec
dec
xor
in
push
xchg
cwtl
in
sbb
cmp
push
frstor
and
mov
jge
fucomp
shr
push
out
dec
xchg
push
dec
sub
std
jecxz
aaa
pop
cli
push
mov
push
adc
aas
add
nop
fiaddl
and
in
mov
neg
mov
jecxz
js
cld
aaa
in
aaa
or
lods
lea
mov
push
cmp
adc
adc
insb
cmpsb
fisubs
subl
dec
sub
aas
cmp
adc
call
push
fs
cmp
cmpb
push
repz
push
jnp
jne
cmp
jo
mov
cmp
fdivrs
in
xchg
cli
inc
sbb
test
cmp
pop
dec
push
ffree
out
out
cmpsl
xlat
pop
push
jge
sub
faddl
fdivrs
dec
je
xchg
sbb
mov
clc
mov
push
sarl
pop
push
test
push
lods
jmp
inc
movsl
lahf
int3
add
fidivs
or
and
test
stc
xorb
popa
cmp
mov
mov
push
rcrb
loope
push
mov
sub
inc
nop
mov
push
nop
dec
leave
lret
es
shlb
fadd
push
jne
inc
mov
rcll
icebp
sub
add
popa
sbb
push
hlt
mov
mov
dec
cs
pop
mov
imul
jp,pn
mov
lods
sbb
imul
lret
inc
aam
mov
in
mov
mov
adc
lock
pop
hlt
push
jmp
movsl
scas
pop
sub
icebp
int3
and
and
fistpl
pop
int
xchg
fcoml
inc
nop
mov
mov
test
add
or
in
xor
movsb
sub
sub
stos
gs
lahf
fcmovbe
jmp
addb
add
add
add
add
add
lea
add
add
cmp
add
add
add
jne
add
add
add
add
add
add
in
add
add
add
add
add
add
int
add
add
add
add
add
add
add
add
jge
rolb
add
inc
mov
xchg
int3
int3
int3
int3
int3
int3
int3
int3
int3
jae
jb
jo
add
incl
add
add
add
dec
or
add
add
adc
add
add
add
adc
add
jle
add
add
add
add
add
add
shlb
add
iret
add
sbb
add
inc
add
add
add
add
add
mov
jne
into
add
outsb
jne
outsb
add
dec
imul
rorl
shll
mov
add
push
inc
jmp
xchg
push
cld
add
dec
pop
mov
mov
cld
decl
std
mov
addb
add
ret
push
decl
xchg
pop
jne
mov
add
jnp
rolb
rolb
incb
add
push
add
add
xor
and
decl
ds
call
incl
cmp
loope
ljmp
adcl
call
inc
jge
push
decl
std
ud0
faddl
mov
ret
iret
lea
add
call
lea
popa
adcb
add
pop
add
add
jg
add
add
add
add
add
add
add
add
out
pop
add
add
je
imul
jb
cmp
add
xchg
add
outsl
add
push
arpl
mov
js
add
insb
add
js
push
insb
fidivrl
popa
add
add
outsl
insb
insb
jne
gs
das
outsl
popa
insb
jne
push
add
lahf
add
add
add
scas
add
sldt
add
add
push
add
incl
add
add
add
popf
and
adc
cmp
int
sub
fcmove
mov
cwtl
pushf
fdivrs
or
imul
das
pusha
pusha
push
repnz
mov
and
add
movsb
pop
cld
jne
out
fdivl
js
lahf
cmp
dec
enter
pop
stos
push
or
pop
cmp
adc
scas
aad
sahf
jne
mov
shlb
das
add
xlat
pop
popf
xor
jbe
jnp
cwtl
push
jo
imul
dec
out
pop
ret
pop
fcmove
dec
cmpsl
into
xchg
mov
std
mov
addr16
imul
mov
xor
repz
out
out
mov
sbb
hlt
imul
popa
cmp
cmpsb
add
push
push
add
adc
adc
cmpb
mov
mov
in
add
push
xor
jecxz
dec
push
add
or
cs
sub
dec
and
out
cs
aaa
fwait
addr16
mov
mov
inc
push
nop
pusha
lahf
dec
outsl
xor
xor
adc
pop
sub
fyl2x
and
xchg
ja
lods
aam
nop
jo
in
ds
adc
jae
mov
int
bound
jno
mov
mov
push
and
ret
mov
loopne
iret
cltd
fs
push
xchg
mov
cld
test
xchg
nop
mov
je
push
mov
pop
in
addr16
adc
imul
ficoml
push
xor
xor
roll
scas
rorl
pop
xchg
fs
out
cwtl
mov
imul
and
mov
lods
pop
adc
inc
add
pop
test
insl
mov
xchg
loope
dec
pop
shlb
xchg
stc
adc
in
mov
lods
test
vpslld
ja
cmp
xor
jp
push
cmc
fsubrl
sahf
add
je
in
imul
stc
iret
pop
cltd
fadd
mov
xchg
lahf
sbb
cmpsb
mov
and
data16
jg
or
insl
jecxz
xchg
dec
lods
lcall
or
call
clc
out
insl
mov
and
mov
xor
ja
adc
call
xchg
mov
jecxz
lods
in
enter
gs
mov
xchg
daa
inc
pusha
add
push
fildll
fimull
sub
leave
inc
stc
pop
mov
data16
lea
call
rcll
ss
add
dec
dec
fcompl
out
xor
ja
fidivl
jae
das
jnp
fiadds
push
scas
int
in
pop
sbb
add
xchg
lds
mov
enter
outsl
inc
push
dec
sub
inc
imul
jbe
mov
iret
test
sbb
jg
pop
not
jnp
inc
mov
and
push
adc
push
jnp
inc
push
adc
stos
mov
adc
notb
sbb
sti
jbe
mov
or
insb
notb
dec
cmc
mov
out
jg
in
push
or
cmp
in
fs
push
sbb
lea
xor
mov
add
mov
dec
pop
bound
in
inc
shll
mov
sbb
inc
lret
inc
dec
push
out
movb
pusha
fsubp
or
stos
ds
xor
and
and
pushf
and
rcrb
cmpsl
jmp
dec
xchg
ljmp
add
jbe
mov
mov
cld
push
popl
push
loopne
psubusw
add
mov
sub
xlat
popa
cmp
addl
in
gs
adc
add
andl
mov
xor
pop
bound
insb
pushf
sbb
adc
cmp
ficomps
int3
add
lds
cwtl
dec
lcall
test
shrb
pop
imul
sbb
dec
and
push
lea
in
mov
stos
pop
cmp
lret
hlt
jmp
mov
mov
cmp
pushf
add
jb
sbb
xor
pop
mov
leave
pushf
mov
xor
call
inc
pop
push
lret
out
sub
sbb
xchg
idivl
push
popa
jmp
sbb
test
stos
mov
add
fwait
test
adc
mov
popf
lods
sbb
cmc
pop
xor
pusha
data16
aaa
rcll
adc
xlat
lock
jns
ficoml
xor
rolb
pushf
dec
movsb
sahf
mov
jae
dec
pop
pop
aaa
es
xchg
icebp
adc
mov
push
mov
xor
into
cs
jno
sub
int
lcall
xchg
inc
add
lret
or
push
add
xor
sbb
dec
jg
ret
fwait
cmp
je
or
ret
mov
jp
sbb
imul
lret
aad
cmp
pop
or
decl
xor
dec
mov
fcoml
xchg
repz
lret
or
sub
dec
ret
mov
mov
push
inc
lcall
push
fisttps
add
push
test
cmp
jl
sub
mov
jb
cli
ret
jns
in
sbb
pop
pop
mov
sbb
push
and
in
dec
popl
les
jge
rcrb
push
add
mov
pop
sbb
xor
dec
imul
sub
dec
subb
and
lods
inc
push
add
xchg
cs
pop
cmp
arpl
jge
imul
stos
scas
shl
lret
pop
sbb
dec
cmp
cmp
xor
hlt
dec
shrb
pop
xor
mov
data16
pop
outsl
mov
inc
and
std
add
orl
popf
lret
and
xchg
cmp
mov
out
iret
cmp
mov
dec
mov
mul
idivb
and
sbb
inc
lock
xchg
outsb
inc
add
clc
mov
dec
ret
cmp
mov
xchg
pop
add
aam
adcl
arpl
cmp
cli
inc
xor
imul
add
mov
cmp
std
cld
dec
js
xor
and
push
sti
sti
out
push
xor
sub
pop
out
fimull
push
rclb
jo
sbb
or
fisttpll
push
mov
mov
inc
or
cmp
repz
sbb
and
or
add
mov
bound
push
or
sub
in
mov
fistpll
jge
in
add
pop
mov
scas
fdivrp
adc
jo
or
push
or
insl
xor
mov
mov
adc
fbld
mov
addr16
xchg
insb
hlt
iret
pop
xchg
mov
xor
mov
xor
lods
data16
cmp
mov
clc
ret
sub
ret
rorb
sbb
cs
sub
adc
in
add
jno
push
lods
pop
mov
je
push
mov
sbb
dec
js
lret
pop
adc
adc
add
mov
adc
cltd
fstp
orl
inc
adc
jmp
dec
aas
sbbb
insl
repnz
add
push
sbb
jp
fcmovb
stos
cmp
mov
mov
xchg
sub
push
into
cmp
dec
mov
das
in
or
test
lods
aaa
test
fistpll
imul
mov
ss
clc
inc
or
push
repz
cs
mov
enter
lahf
xchg
or
out
std
dec
lds
cmp
pushf
cmpsb
out
xlat
push
adc
ljmp
adc
pop
add
and
sbb
push
add
loope
dec
std
bound
add
cmp
add
mov
arpl
xchg
cltd
cmp
xor
pop
fcmovb
sar
dec
cmpsl
shrb
gs
imul
cltd
js
fdivs
xor
das
and
and
mov
inc
jno
ljmp
mov
adc
cmp
int
in
mov
dec
and
test
dec
iret
fbstp
aad
jnp
test
xchg
pusha
shl
fldt
insl
push
mov
out
jnp
pop
mov
inc
std
jmp
cs
icebp
add
sarl
mov
xchg
pusha
ds
jg
add
adc
sub
sub
in
xchg
xor
dec
je
xor
icebp
pop
test
push
xchg
test
add
cli
enter
insl
pop
stos
pop
dec
js
xchg
out
adc
or
jns
pop
adc
sbb
sub
adc
sbb
hlt
sbb
and
jns
shlb
es
test
in
and
sub
mov
test
pop
and
mov
adc
dec
or
daa
add
pop
sub
cmpl
nop
int3
xor
fwait
mov
pop
inc
je
sarl
adc
shll
mov
stos
adc
hlt
aam
adc
ss
adc
pop
out
push
js
orl
fldt
ret
fisttpl
lahf
push
das
ds
test
and
insl
out
fsubl
jb
roll
pop
pop
cli
addr16
std
pop
comiss
movsl
ja
jo
inc
aam
movsl
std
jmp
and
mov
popa
popa
pop
stc
xor
ret
mov
pop
mov
xor
nop
pop
notb
push
aaa
out
aad
dec
mov
cmp
insl
pop
outsl
das
push
pop
push
xor
lret
xchg
xchg
jecxz
xchg
xchg
fisubrs
xlat
out
aaa
xchg
add
aad
lods
or
mov
rcll
mov
sbb
adc
popf
repz
out
pop
pop
sbb
or
xor
jno
inc
daa
pop
movsl
pop
mov
js
addr16
mov
sub
out
adc
xor
pop
sub
dec
loopne
es
clc
lcall
sbb
insl
adc
mov
pop
repnz
out
add
arpl
dec
das
fldt
into
call
sub
cmp
inc
test
mov
xor
bound
fs
out
xor
pop
stc
add
pop
scas
ja
pop
mov
pushf
sbb
jne
mov
shrl
sub
cmp
mov
sub
jno
push
inc
nop
pop
mov
mov
out
sti
add
pop
lock
push
ljmp
push
ds
jmp
dec
mov
popf
mov
sbb
pop
inc
pop
lahf
pop
cmp
mov
and
or
sbb
mov
sbb
dec
pop
aas
pop
cwtl
lret
cld
or
lahf
jo
lret
out
adc
dec
out
inc
mov
movsl
xor
xlat
data16
mov
adcl
jle
push
clc
enter
xchg
das
and
xchg
cmp
pop
dec
inc
sbb
int
addr16
dec
andb
test
mov
jo
hlt
gs
add
leave
cwtl
xlat
sahf
dec
fnstsw
fcomp
addl
fisubs
or
pop
loop
outsb
addl
pop
ret
pop
mov
xor
scas
pop
iret
mov
mov
test
push
and
cmp
xor
push
dec
stc
repz
sar
lret
ret
dec
add
mov
jne
mov
push
ds
fmull
rclb
xchg
fbld
repnz
outsb
bound
pop
aad
cmp
iret
xchg
inc
mov
jg
in
loope
sub
xlat
inc
pop
dec
push
add
push
js
sub
jae
je
add
inc
cmp
and
fs
push
gs
mov
fnstcw
lock
out
jecxz
mov
outsb
cmp
xchg
and
cld
dec
andl
sbb
shr
imul
bound
dec
pop
fisttpll
cmp
pop
in
xchg
sbb
xchg
leave
faddp
and
push
push
out
loope
jb
cmc
imul
inc
and
lret
cmp
mov
push
popa
test
movsl
aam
andl
test
mov
cmp
arpl
in
mov
xor
mov
mov
jb
adc
mov
movsb
in
xchg
xlat
sbb
cmc
mov
stos
sbb
or
cmpsl
dec
js
mov
addl
dec
mov
pop
lods
outsb
in
ret
mov
or
aaa
pop
ja
jne
sbb
and
jmp
in
adc
mov
and
stos
ss
std
push
xor
adc
push
mov
mov
inc
and
jp
jg
ret
inc
inc
push
push
xchg
push
jl
in
dec
inc
out
or
sub
push
pavgb
xchg
pop
loopne
cli
xor
jp
lods
xor
jo
in
mov
sbb
xlat
xor
pop
jae
test
inc
mov
out
pop
pop
mov
cmpsb
lret
loope
or
out
ja
or
push
jmp
mov
lods
mov
imul
bound
or
pusha
jns
add
call
lods
mov
push
das
mov
ret
dec
inc
or
jecxz
cmp
sahf
andb
gs
adc
push
das
mov
and
or
movsb
cld
jecxz
add
int3
lea
lea
rclb
mov
dec
push
js
repz
enter
jne
xor
and
enter
clc
xor
mov
jo,pn
mov
or
mov
loop
clc
sar
sbb
mov
xchg
adc
lods
xchg
mov
cmp
lret
in
das
jns
push
aam
mov
mov
push
cli
push
fldenv
pop
mov
addr16
fsubrl
dec
xchg
xor
dec
cmp
mov
rcl
fwait
stc
push
mov
cmp
mov
cmp
cmp
cld
into
popf
mov
add
xchg
gs
outsb
adc
jo
lret
clc
lret
rolb
jge
scas
mov
adcl
into
and
rorl
and
ljmp
pop
or
push
pop
inc
imul
push
xchg
test
dec
lret
jo
push
into
ss
sub
dec
daa
xchg
push
popf
sub
imul
mov
lods
xor
sub
pop
dec
push
js
dec
or
push
imul
cmp
in
test
fwait
fs
push
adc
or
push
outsb
xlat
gs
or
jns
xchg
mov
inc
xlat
push
das
add
push
nop
jp
fwait
and
jo
jge
xchg
and
stos
aaa
outsb
sub
movsb
mov
mov
loope
jl
mov
fs
rclb
pushf
ja
cmp
inc
adc
push
sti
outsl
ss
lods
pop
mov
call
mov
mov
cltd
sahf
mov
sub
pushf
repz
mov
les
mov
pop
xchg
nop
jmp
mov
cmp
in
inc
clc
loopne
enter
mov
push
sbb
push
mov
ja
popa
xchg
movl
add
push
push
outsb
popf
aad
sub
stos
jb
sar
push
xchg
jl
mov
mov
adc
rcr
gs
or
movb
dec
mov
fcmovne
movsb
adc
pop
xor
int3
xchg
dec
jbe
outsl
call
jecxz
movsl
popf
loop
repnz
mov
cltd
jecxz
int3
lcall
out
push
es
dec
mov
and
and
mov
xchg
jg
subb
pop
mov
push
imul
mov
pop
aam
lret
mov
dec
ret
fwait
mov
mov
hlt
cmpsl
shll
inc
fsubs
pop
fwait
in
jb
cmp
sbb
mov
push
and
mov
inc
mull
aaa
dec
das
push
push
pop
fstl
ss
mov
dec
xchg
and
int
pop
sbb
int3
and
adc
push
in
mov
pop
ret
adc
jl
add
rcrl
pop
add
jp
fs
pop
outsl
dec
loope
into
sti
cltd
daa
sarb
sbb
cmc
or
and
adc
leave
xlat
aad
jnp
mov
xchg
ljmp
adc
mov
push
dec
sub
xor
dec
rcll
push
fnstsw
xchg
arpl
mov
cmp
mov
cltd
testl
and
mov
mov
mov
repnz
push
adc
push
jp
imul
sub
into
imul
fs
mov
add
movsl
add
xchg
scas
xor
fstps
fmuls
inc
cmp
aam
pusha
add
push
cmp
jge
sbb
pop
cmp
inc
pushf
mov
pop
ds
out
shl
inc
jo
xchg
mov
mov
repz
or
fistpl
in
loop
fisubs
rcrl
call
or
push
test
and
mov
jbe
aad
leave
test
xor
push
and
xchg
ss
lret
js
push
daa
cmp
sub
out
pop
sub
jle
out
mov
cmp
int3
dec
test
adc
scas
lods
in
shlb
ficomps
cli
lret
insb
into
cld
lcall
sbb
mov
xchg
fcomps
out
cli
dec
insl
lea
push
test
rolb
push
pop
or
cld
cmp
pop
js
loopne
cltd
push
jns
mov
lock
pop
pop
stos
daa
stos
arpl
std
push
and
xchg
lahf
adc
fstpl
lahf
and
jbe
mov
fildll
adc
or
lret
repz
es
push
jb
shlb
and
mov
dec
mov
jge
mov
and
cltd
test
stos
lea
imul
or
movsl
mov
gs
lcall
lahf
push
mov
cmpsl
adc
into
into
sub
pop
mov
xchg
mov
sti
fimull
fnsave
icebp
daa
leave
out
adc
pop
outsl
icebp
pop
inc
loopne
icebp
cli
dec
cld
mov
pop
xchg
jnp
sub
lds
fwait
cmp
out
or
push
mulb
sbb
push
push
pop
add
cli
xor
fistpll
dec
pop
in
fwait
clc
gs
add
push
dec
repnz
xor
jb
xor
int3
xchg
jnp
dec
sbb
mov
stos
push
xlat
js
push
int
sbb
add
out
std
in
mov
cld
aas
lea
lcall
in
ljmp
jne
jo
out
jl
ss
movsb
fcompl
and
inc
rcrb
xor
cmpsb
push
adc
cmp
inc
stos
jge
fmuls
sub
push
jo
cltd
movb
inc
clc
lea
insl
cmpsb
es
mov
adc
lahf
js
lret
or
loopne
pop
lock
cli
leave
cmc
cld
pop
push
loopne
clc
cmp
dec
sbb
xor
or
mov
add
add
into
add
das
add
add
add
add
lahf
add
add
add
scas
add
add
add
addb
add
add
push
addb
add
add
add
add
add
add
add
mov
add
add
add
add
add
jo
jo
scas
pushl
int3
int3
int3
int3
int3
int3
int3
int3
int3
add
add
add
addr16
jne
or
add
add
add
add
add
add
add
add
add
add
add
repnz
add
and
outsl
add
inc
add
add
add
add
cmp
cmp
sbb
fbld
arpl
gs
push
jae
inc
je
inc
je
popa
outsb
add
push
getsec
xor
jmp
mov
enter
or
pop
inc
cld
mov
in
mov
mov
pop
std
mov
cld
inc
stos
inc
mov
jp
adc
add
push
add
int3
add
push
dec
lods
push
push
sarb
lret
mov
lea
add
shlb
rclb
pop
mov
pop
sti
add
lock
cld
push
add
clc
mov
test
test
test
mov
add
adc
push
arpl
call
add
cmp
clc
mov
sub
xor
adc
inc
add
lock
in
push
inc
add
test
add
lock
add
add
add
add
add
add
add
sub
clc
add
add
push
inc
add
inc
cs
outsl
imul
xchg
push
gs
jo
jbe
je
arpl
and
inc
mov
addr16
jge
add
push
gs
imul
inc
inc
push
arpl
arpl
add
add
add
add
roll
add
add
add
add
add
add
inc
add
add
add
adc
add
add
popf
mov
xor
push
imul
cmp
sbb
leavew
push
scas
lods
sbb
jmp
sbb
jae
xchg
mov
iret
push
jge
xor
inc
lahf
jp
or
in
in
push
arpl
mov
xor
inc
sub
lcall
cmp
rolb
je
rorl
or
pop
outsb
ljmp
sti
add
push
mov
cmp
es
in
push
sub
cli
push
push
in
sbbb
push
mov
xchg
add
mov
les
adc
stos
test
movsl
dec
das
sub
cmc
dec
mov
add
sar
inc
addl
fs
jge
cmc
push
loop
std
test
scas
out
mov
stos
pop
cmc
and
stc
pop
push
cmp
decl
idivl
mov
push
das
data16
pop
mov
addr16
enter
sahf
ret
pop
push
cmp
dec
rolb
mov
fsubrs
lods
inc
dec
dec
lcall
xor
hlt
xchg
adc
cmp
cli
imul
shrl
gs
jnp
xlat
adc
pop
lods
or
xchg
jmp
sub
push
fmull
in
stos
in
push
ja
fmul
flds
ficoml
popf
cmp
scas
adc
cltd
adc
rcrb
pushf
inc
insl
adc
add
ret
inc
in
pop
dec
shll
stos
pop
pop
dec
mov
cltd
fldt
jne
adc
or
mov
push
gs
shll
inc
movsb
pop
or
hlt
mov
scas
xchg
lods
cmc
shll
aam
sbbl
imul
pop
enter
push
roll
mov
lods
jg
sub
iret
mov
pop
in
pop
fnstenv
enter
movsb
jl
or
ficoml
push
add
int3
cltd
jle
stos
scas
popf
sub
pop
inc
push
push
xor
sbb
test
aad
dec
dec
lock
cmpsb
or
add
push
add
mov
rorl
movsb
sub
xor
hlt
and
cmpsb
or
cmpsl
pop
sbb
mov
out
cmpsb
mov
or
fidivrl
xlat
push
in
add
jnp
aas
mov
sahf
pcmpgtw
popf
xchg
pop
pushf
jecxz
repz
ja
and
cs
arpl
sub
test
mov
mov
mov
mov
mov
outsb
xchg
mov
jg
sbb
xchg
lock
cltd
dec
inc
mov
pop
cli
int3
hlt
dec
lea
inc
fldl
repz
xor
adc
adc
aaa
push
push
push
mov
xchg
fists
jmp
cmp
push
push
out
ss
js
std
mov
scas
orb
popa
stos
out
xchg
adc
cs
fmul
mov
add
stos
pop
mov
loopew
fwait
mov
xchg
xor
es
int
aam
pop
cmp
loop
adcb
je
push
jns
and
or
xor
cli
cmp
fnstenv
cld
pop
lea
aaa
sbb
fdiv
js,pt
div
sbb
sub
jecxz
dec
dec
add
mov
xor
outsb
cld
sub
jg
inc
sbb
inc
or
shll
cmpl
mov
js
imul
in
into
xchg
xlat
jne
stos
sbb
mov
jns
mov
adc
or
rcl
sub
mov
pop
shrl
cmpl
repz
lret
mov
xchg
adc
xchg
lret
fadds
cs
mov
ss
imul
lods
rcll
lea
bound
movsl
cmpsl
mov
pushf
xchg
sbb
inc
adc
rep
sahf
ss
jbe
andb
mov
xchg
repz
sbb
js
dec
repz
ljmp
loop
adc
inc
mov
fsts
outsl
xor
cmp
into
ja
jl
notl
pop
out
cmp
addb
pop
inc
fsts
insb
lcall
clc
dec
cmpsl
xor
jg
mov
sti
xor
cmp
cs
pop
cmp
xor
fstpt
push
or
push
pop
xchg
dec
pop
or
and
leave
mov
mov
cld
int
rcrl
roll
xlat
sbb
lock
test
xchg
adcb
adcb
popa
fstpl
aad
sbb
sbb
in
gs
stos
es
xor
add
mov
mulb
jnp
fadd
ja
xor
lret
fadd
in
mov
inc
cmp
push
aas
arpl
aam
lret
lahf
and
jmp
xor
dec
mov
mov
mov
xor
test
jae
popl
inc
lods
mov
pop
xchg
pushf
jno
lock
add
xor
xchg
xchg
and
daa
or
mov
mov
add
inc
dec
push
aam
jno
cmp
mov
cwtl
pop
fdivrl
mov
adc
adc
inc
cmp
add
jne
inc
fsub
mov
es
dec
lea
mov
in
addr16
cmp
std
mov
out
adc
or
or
cmpsb
rorl
insl
mov
stc
imul
push
mov
ja
jp
pop
out
es
lea
in
xor
lea
pop
cmp
jg
xchg
fimuls
jae
push
cmp
xor
loopne
mov
mov
scas
shrl
push
into
mov
ret
mov
cmpb
test
stos
dec
jge
inc
ret
scas
sbb
xlat
jle
jb
pop
push
movsb
test
add
mov
std
xor
ds
xor
fnstcw
fisttpl
dec
xchg
ja
mov
add
scas
leave
mov
insl
hlt
or
insl
and
ss
mov
mov
leave
and
inc
fbstp
cmpsb
lock
repnz
popf
out
jecxz
xor
mov
add
adc
push
sub
jae
in
adc
jg
push
into
mov
scas
push
js
dec
fldenv
mov
push
movsb
inc
xchg
popa
lret
or
out
push
sti
cmp
jo
jns
lret
test
popf
adc
lea
mov
cmp
je
repz
jne
mov
div
jle
adc
mov
mov
sbb
and
mov
fs
out
aam
pop
inc
jns
int3
cmc
sbb
fadds
vandps
jge
dec
add
mov
xchg
cs
cmp
in
addr16
out
addr16
inc
aam
push
out
xchg
or
ja
ficompl
pop
dec
cs
pop
jge
mov
iret
hlt
das
bnd
aad
sbb
pop
and
stos
xchg
push
and
out
negb
push
xchg
xchg
popa
add
repnz
in
es
pop
out
adc
lds
push
push
or
clc
or
sbb
dec
cmpsb
pop
pop
notb
pop
popf
daa
into
and
lcall
int
popa
pop
mov
cmp
xor
scas
xor
adc
out
pop
outsl
testl
je
bound
cmp
mov
sub
push
call
out
push
cmp
test
aas
sbb
inc
call
call
cmpsl
icebp
adc
add
jno
xchg
sub
scas
xor
adc
mov
jge
sahf
shl
jecxz
stos
push
dec
mov
xchg
add
fs
sbb
push
pop
aam
xchg
cmp
inc
cmp
dec
adc
adc
adc
sbb
mov
out
push
sar
lock
das
in
test
fs
ret
stos
jnp
push
xor
sbb
mov
pop
scas
sub
pop
repz
add
sub
outsb
sbb
hlt
sahf
addr16
das
or
mov
jl
sbb
cmpsl
sbb
lcall
add
sub
and
cmpsl
xor
add
xor
pop
js
lds
out
mov
cli
push
mov
fistpll
bnd
dec
dec
sbb
inc
daa
out
xchg
nop
mov
add
and
mov
inc
sbb
pop
xchg
mov
sub
cmp
rcrb
mov
movsb
jno
int
into
test
outsl
dec
pop
mov
add
fsub
add
fdivrs
mov
mov
xchg
mov
xchg
out
sti
out
repz
leave
mov
xchg
cmp
mov
lret
and
push
scas
xchg
ret
icebp
js
pusha
lock
mov
les
pusha
scas
sarb
insw
and
dec
test
jo
add
fiaddl
adc
or
insb
aas
xchg
les
jg
lcall
aaa
sbb
add
es
and
xlat
je
out
scas
jo
roll
pop
mov
dec
std
inc
adc
push
jne
arpl
es
ljmp
and
sbb
pusha
cltd
push
push
in
outsb
ret
lock
or
sub
stos
into
ds
mov
pushf
hlt
xchg
outsl
je
push
aaa
dec
daa
fnstcw
clc
and
rol
jl
inc
mov
mov
mov
int3
or
dec
or
cmp
push
out
ss
fcompl
dec
fdivl
jns
push
mulb
mov
mov
push
and
popf
mov
inc
pushf
sub
xchg
out
jne
mov
cmp
shrl
mov
mov
pop
ret
and
out
xchg
dec
cmp
mov
mov
or
loopne
cmpsb
or
negl
mov
shlb
xorb
stos
rcl
sub
out
repnz
add
gs
test
les
pop
mov
decl
jge
adc
mov
cmp
cmp
scas
mov
and
and
mov
test
fists
jp
insl
aam
popf
fs
adc
out
js
std
mov
push
daa
gs
jp
sub
mov
out
daa
js
add
lods
adc
xchg
xor
lret
or
fadds
lds
inc
mov
pop
js
aas
sbb
leave
movsb
inc
xchg
push
jle
dec
cmpsl
cmp
xor
and
lock
outsb
fwait
call
or
cmp
lcall
inc
negl
fbld
mov
loop
push
mov
enter
or
jp
adc
int
xor
outsl
mov
push
sbb
pop
aaa
sub
dec
loopne
stc
pop
lcall
js
jmp
cmp
pushf
inc
jecxz
lcall
shll
dec
pop
lret
mov
mov
inc
inc
test
jmp
add
jnp
xor
je
out
jae
lret
fnstsw
jp
push
adc
push
loope
jnp
iret
in
mov
scas
mov
mov
mov
test
pop
push
pop
test
mov
pop
xchg
add
out
mov
or
and
inc
fisubrs
pop
es
or
dec
addb
jne
or
add
sub
fs
push
pop
dec
pop
jecxz
rclb
mov
in
lock
mov
shll
outsl
and
jg
stos
fcmovnu
imul
and
push
stos
adcl
sbb
in
pushf
xor
sarb
std
test
divb
popa
lods
and
mov
sbb
incl
jecxz
push
dec
mov
mov
mov
nop
stos
sub
outsb
mov
sti
mov
and
nop
ficoml
lods
movsl
es
push
pop
paddsw
mov
pop
sub
repnz
movl
pop
loope
aaa
aam
or
pop
jne
pop
sbb
cmp
push
mov
xchg
mov
cld
ss
pop
insb
jp
ljmp
mov
and
dec
xchg
test
dec
std
inc
sbb
cmpsb
pop
cs
fidivrs
inc
or
out
inc
mov
jo
das
ffreep
lcall
xchg
stos
fsubrs
sbb
and
add
outsl
and
add
loope
scas
leave
movsb
jns
adc
jo
insl
and
ljmp
dec
lcall
test
test
or
lods
notl
mov
cli
fidivl
xchg
mov
cmc
xchg
ret
mov
lcall
shll
rcl
or
jge
fsts
ret
ucomiss
adc
or
pop
xlat
icebp
cltd
push
jl
pop
adc
lret
push
and
sbbb
inc
outsl
and
push
fnstsw
xchg
loop
mov
stos
sub
xor
inc
cmpsb
subl
aaa
rcrl
xchg
push
push
mov
imul
jecxz
movsb
mov
push
ljmp
outsb
and
into
push
pop
mov
or
push
jae,pt
xchg
das
cmp
sub
aad
adcb
lods
or
mov
push
int3
sbb
cltd
and
aaa
sbb
sub
lods
mov
in
ret
seto
rcl
ret
ss
pop
cmpsb
xlat
inc
repz
cmp
jns
pushf
ljmp
adc
or
mov
push
sbb
out
mov
int3
test
dec
jle
xchg
pop
std
sub
shlb
insb
sbb
lret
mov
ds
rcrl
mov
ror
dec
jns
pushf
sub
mov
addl
push
ljmp
xor
leave
fcoml
xchg
adcb
and
addb
adc
adc
adc
mov
out
mov
fidivrs
cmc
adc
mov
pop
mov
sub
outsb
add
in
jno
das
sarl
and
shrl
adc
cmp
lahf
cmovo
das
push
cli
xchg
xor
lock
xchg
pop
daa
jp
sub
ss
lea
xchg
mov
dec
shlb
arpl
adc
les
insl
or
or
sub
mov
lock
sbb
fcmovbe
and
out
sbb
xor
lods
aas
mov
iret
js
push
jp
ljmp
xchg
call
cs
out
fldenv
dec
mov
mov
xchg
and
mov
int3
aam
jge
insl
mov
push
movsl
fwait
add
pop
lcall
ret
repnz
jbe
add
aam
out
cmp
mov
movsl
test
mov
xor
mov
cmp
jge
in
push
sahf
repnz
rcrb
pop
cmc
jg
mov
or
or
jl
rol
push
out
push
pop
fiaddl
out
test
mov
adc
scas
loope
cli
adc
add
pmulhw
push
aad
dec
sub
mov
add
inc
mov
pop
in
aas
mov
es
pop
fisubrl
lds
and
dec
imulb
loopne
aad
imul
xor
movsb
aad
mov
mov
push
mov
sti
xchg
and
rorb
mov
pop
lods
pop
aaa
push
xchg
in
out
jle
andb
xchg
aaa
sti
mov
and
in
sbb
pop
cmp
lods
cmp
shlb
and
adc
loope
mov
dec
dec
fcoms
xchg
ja
fnsave
push
and
call
in
mov
mov
mov
pop
aam
insb
mov
cmp
and
jno
fdivs
jmp
and
or
in
repz
push
sbb
sbb
mov
xlat
dec
ret
push
mov
cmc
dec
clc
ret
jno
popa
xchg
ds
out
mov
aam
mov
and
ficoml
fs
out
subb
scas
loope
out
loopne
add
cmp
pop
shrl
sti
cltd
adc
push
jmp
fmuls
jl
popa
add
pusha
test
ja
ficoml
jge
xchg
movsb
and
cmp
das
pop
push
rcll
cmp
decb
push
mov
cmc
sbb
jmp
fiaddl
cld
adc
sub
jo
fstl
imul
mov
stos
mov
sub
loopne
outsl
cmpl
inc
ljmp
ds
mov
stc
mov
xchg
xchg
add
ja
cmp
fucomip
jb
xchg
lods
cld
in
pusha
movsb
xlat
stos
movsb
dec
cmp
mov
pushf
iret
in
inc
mov
and
mov
xor
aad
pop
inc
sarb
ds
lods
ret
cmp
jmp
dec
pop
mov
mov
repz
jg
outsl
fsubrl
in
ds
inc
push
push
icebp
fdivp
test
add
or
das
inc
cmp
pop
insl
movsl
xchg
in
add
test
arpl
popa
sbb
pop
jecxz
or
js
cmp
or
cmpsl
sub
pushf
push
jnp
in
pusha
arpl
adc
dec
cmpsl
mov
fs
mov
pop
stos
or
mov
dec
or
dec
dec
mov
scas
cs
inc
inc
push
in
xchg
xchg
cwtl
shlb
iret
int3
mov
into
add
xchg
std
sti
add
orl
mov
adc
sub
lods
push
cmpsb
movsb
push
loope
aas
mov
xchg
shll
mov
adc
rcll
dec
mov
faddp
cmp
and
iret
and
daa
shll
fisttpll
loope
sbb
inc
cli
add
mov
mov
push
sbb
movnti
pop
and
or
pushf
loopne
and
fsubrl
xchg
lahf
test
shll
in
push
repz
cmc
rorb
dec
mov
dec
push
out
sbb
mov
cltd
fcompl
lret
adc
stos
adc
getsec
dec
cmp
call
adc
into
dec
jg
inc
cmp
clc
push
das
sbbl
call
movl
inc
fistpll
xor
push
das
clc
dec
and
xor
pushf
je
xchg
ucomiss
mov
push
icebp
inc
mov
in
in
inc
pop
or
aas
scas
adc
jl
xor
stos
push
pop
and
xchg
arpl
in
pop
lea
lock
sub
mov
pop
jns
out
sbb
dec
mov
pop
inc
jecxz
cwtl
cltd
repz
and
dec
dec
jbe
sub
xchg
outsb
xchg
sbb
add
insb
add
add
add
add
add
repz
add
add
inc
add
arpl
add
add
add
add
roll
add
add
add
add
add
add
test
add
add
add
add
add
add
add
add
add
xor
add
add
add
addb
stos
stos
add
ja
cli
mov
clc
clc
dec
int3
int3
int3
int3
int3
int3
int3
int3
add
add
add
push
mov
jb
or
add
add
add
add
rolb
add
adc
add
add
push
add
add
add
add
add
add
add
add
add
add
loopne
and
js
add
fs
gs
add
nop
outsl
je
fs
push
movb
roll
jecxz
sbb
push
mov
pop
push
or
add
fmuls
incl
mov
add
test
pusha
cld
add
and
adc
call
inc
insb
loop
test
push
sar
cmp
dec
jae
incl
add
call
add
add
incl
add
sbb
push
mov
add
call
push
mov
xchg
inc
push
popf
cld
loopne
incl
sbb
dec
push
push
loope
movb
cld
lock
enter
add
push
call
add
jne
lret
add
repz
or
mov
call
add
sbb
add
push
mov
add
sbb
sbb
sbb
sbb
sbb
mov
add
inc
insb
insl
shll
je
jae
push
orl
insb
imul
gs
repnz
outsl
inc
popa
dec
outsl
add
insb
add
add
loopne
inc
gs
add
insb
add
outsl
jbe
outsb
add
insb
je
je
je
insb
icebp
add
shll
add
das
adc
dec
adc
xor
ja
in
pop
shlb
cmc
icebp
mov
movsb
push
or
cwtl
mov
popf
mov
mov
fistpll
jb
int
pop
mov
sbb
mov
movsb
lcall
in
sub
lret
add
and
sbb
pushf
cmpsb
sbb
inc
and
clc
xchg
mov
jp
fwait
fs
pop
outsl
retw
cld
popf
mov
rorb
add
cwtl
push
adc
add
sarl
mov
inc
sbb
sbb
inc
push
ficomps
repz
test
pop
sahf
jle
and
es
inc
hlt
sarl
xchg
and
pop
lock
mov
sbb
dec
xlat
js
cltd
sbbb
test
inc
in
movsb
lret
jb
or
js
adc
shll
mov
cltd
mov
mov
dec
mov
out
pop
outsb
mov
pop
sub
inc
cmpsb
mov
mov
cltd
outsl
and
aas
or
lds
sbb
sahf
sub
int3
in
jmp
sbb
mov
lsl
loopne
mov
outsl
roll
and
ljmp
int3
je
xor
push
mov
jnp
sbb
mov
popf
stos
mov
nop
addr16
and
pop
out
push
pop
ficoms
in
add
jp
or
mov
push
testb
dec
xchg
mov
sti
mov
or
mov
mov
sub
shlb
lret
call
cli
movsb
pop
scas
mov
mov
sti
test
arpl
sbb
testl
in
ljmp
jge
pop
xchg
jne
cltd
ss
jmp
dec
and
out
and
mov
jae
cltd
lods
cmp
mov
dec
gs
lret
roll
icebp
inc
aad
pop
je
xor
sbb
push
cmp
xchg
das
arpl
mov
ffree
inc
sub
mov
sbb
sarl
sub
mov
mul
mov
fdivs
ss
mov
xor
mov
adc
push
mov
xchg
add
cmp
sub
and
mov
clc
pop
jp
or
fiadds
bound
daa
out
rolb
movsl
mov
ret
xchg
xor
in
jecxz
push
fs
mov
adcb
cmpsb
int3
jne
xchg
jns
outsl
sub
dec
pop
inc
popf
dec
or
xor
stos
dec
ret
iret
add
mov
cld
pop
jecxz
pop
lods
cmp
add
mov
adc
add
stc
push
test
inc
arpl
aad
cmc
add
mov
push
fistl
and
mov
pop
ror
into
add
ja
or
push
dec
repnz
cmp
idivl
sub
fnstenv
ret
addr16
loope
sbb
lcall
ja
xor
loope
rolb
push
xchg
imul
fwait
cmp
xchg
xchg
pop
xor
mov
filds
mov
loope
adc
mov
push
std
lret
mov
in
insb
cmp
adc
in
cmc
cmp
out
test
divl
sub
xorl
test
cwtl
lret
add
data16
and
add
daa
and
cmpl
sbb
test
movsb
adc
jmp
iret
add
cmp
out
mov
xchg
add
clc
sti
xorl
sti
ret
inc
adc
rolb
loopne
mov
pop
mov
gs
in
cmp
jmp
adc
std
dec
adc
or
pop
in
jns
mov
adc
mov
sbb
xchg
or
xchg
repz
and
fs
fisubl
dec
mov
inc
xchg
mov
pop
adc
leave
xchg
push
rcll
adc
outsb
sahf
xlat
insl
dec
incl
pop
lods
pop
repz
shr
add
jg
xchg
push
sub
je
push
loope
aam
jge
mov
pop
xchg
xchg
adc
adc
mov
and
aad
cmpsl
jno
dec
jo
addr16
push
shlb
cmpsl
jg
nop
dec
sub
adcl
jne
xchg
pop
push
jecxz
lret
mov
push
mov
jecxz
data16
inc
out
out
mov
lahf
outsw
inc
dec
dec
sub
rol
inc
jl
scas
out
cmp
sub
xor
add
xlat
and
fsubl
inc
mov
lret
xchg
fsubrl
ds
popa
adc
mov
sub
xchg
inc
fidivrl
jbe
mov
fs
iret
pop
mov
lods
fs
aas
sbb
jmp
xchg
stos
sahf
and
and
dec
jl
jp
or
inc
pop
sbb
adc
xor
pop
xchg
fmul
jnp
xchg
mov
xchg
repz
push
inc
lds
leave
cwtl
inc
pop
adc
decb
sbb
mov
cmp
pusha
cmp
sub
andb
adc
sbb
movsb
in
push
fnsave
fldt
movsl
push
loop
idivl
roll
test
leave
pop
lahf
mov
out
stos
dec
and
jnp
cmp
inc
dec
mov
rcrb
bound
movsl
or
cmp
xchg
xchg
push
movsl
and
lret
out
sbb
std
mov
sub
ljmp
inc
lods
sbbl
sarb
data16
movsb
es
nop
sarl
push
pop
mov
clc
or
pop
cwtl
xchg
pop
nop
outsb
js
add
sub
jmp
in
ss
mov
add
adc
inc
dec
push
adc
roll
insl
gs
pop
cli
mov
adc
jb
mov
loopne
das
inc
mov
ss
jb
loop
inc
sbb
insl
mov
loopne
mov
rep
js
or
sbbb
jns
idivl
and
sbb
ret
sbb
jp
sbb
in
stc
sub
ss
insl
mov
cmc
lods
jg
push
pop
cmpb
and
xor
mov
insl
jbe
les
subl
aad
mov
adc
iret
push
xor
test
movsb
pop
in
adc
sbb
sbb
cmp
cmp
dec
add
data16
inc
cs
into
stos
test
pop
fcompl
add
jecxz
xor
push
clc
inc
repz
iret
mov
sbb
in
or
add
xchg
xchg
je
ret
xor
pop
pushf
mov
sbb
das
outsb
jns
add
sbb
rorl
stos
test
adc
fisttpll
rcrl
movb
stos
mov
xlat
xchg
test
aaa
sbb
fldenv
cmp
cmp
pop
ljmp
push
mov
sbb
pop
pushf
mov
roll
sti
jg
popf
adcb
sub
jno
testl
test
movb
mov
mov
fcoml
mov
xchg
mov
ds
cmp
push
jle
lret
rorl
fnstenv
lret
faddl
mov
adc
mov
push
sbb
mov
fwait
xchg
fsubrl
aad
mov
loop
sub
test
out
js
rcr
cwtl
imul
mov
aam
or
push
xchg
add
sub
sub
xor
or
mov
rolb
and
and
mov
push
repnz
pop
and
adc
mov
fistl
loop
repz
bound
aam
mov
jle
loope
jmp
sbb
push
outsb
in
daa
mov
push
inc
clc
xchg
mov
xchg
cmpsl
pop
clc
insl
xor
or
push
movsb
jb
inc
xchg
mov
sub
test
imul
orl
xor
or
pop
pmaddwd
add
cmp
scas
mov
jmp
mov
xchg
imul
jnp
ja
push
inc
xorb
adc
loop
add
call
mov
jae
inc
faddl
push
xchg
fbstp
addr16
lahf
mov
lahf
or
inc
mull
cwtd
inc
jno
je
in
mov
cli
jg
mov
cmp
pop
jae
pop
loopne
jmp
and
adc
sub
lret
mov
hlt
sbb
push
test
cmp
stos
push
outsb
lods
add
mov
in
sarl
clc
jnp
loopne
jg
loop
mov
dec
mov
lds
xor
pusha
dec
int3
xchg
pusha
mov
jns
repz
dec
sbb
ret
aad
aam
jl
movsb
xchg
loop
js
mov
pop
jp
clc
push
aad
fisubrs
std
jo
mov
leave
sbb
adc
rclb
clc
and
jl
xor
sbb
mov
fisubs
jp
ret
jmp
jo
and
pop
dec
outsb
cmp
ret
ret
outsl
pushf
popf
lahf
pop
aaa
in
pop
lods
pop
mov
sub
mov
inc
jno
pop
push
mov
and
stc
ffree
pushf
nop
mov
in
fwait
sub
adc
js
xlat
movsb
sbb
out
out
icebp
jl
push
xor
lods
push
ds
mov
rorb
jmp
insb
jg
rclb
push
inc
push
stos
stos
fsubs
mov
dec
data16
int
adc
pop
daa
add
movsl
inc
cmp
push
icebp
and
add
or
call
sub
cs
pop
and
in
mov
cmp
jmpw
adc
aas
out
je
pop
inc
mov
loopne
jns
orb
push
jge
adc
jno
mov
pop
xchg
xor
mov
jns
insl
in
sub
cld
lret
imul
or
inc
jecxz
push
dec
add
scas
xchg
fimull
rorl
pop
into
rclb
ret
sbb
push
mov
mov
pop
dec
adc
or
push
scas
inc
fsubrl
pop
add
push
cmp
or
or
mov
pop
xchg
inc
ds
add
test
sub
xchg
adc
decb
push
xchg
push
decb
out
out
jmp
jns
push
mov
lods
insl
cwtl
push
fadd
cmpsb
mov
xor
or
or
dec
inc
imul
notb
cmpb
or
mov
pop
scas
mov
stc
in
adc
jo
rcrl
xchg
push
sbb
movsl
add
jg
mull
xchg
pop
adc
shll
pop
sub
arpl
mov
nop
in
or
jmp
xchg
cwtl
adc
stos
push
add
stos
std
inc
add
cs
sti
insb
mov
sub
adc
dec
fnsave
repz
inc
and
in
dec
dec
push
sub
gs
insl
cmpb
pop
push
xchg
scas
mov
rol
sub
jecxz
cmp
divb
jle
mov
out
mov
lea
std
call
xor
pop
dec
or
sub
sub
dec
cmpb
notl
push
gs
fwait
and
mov
out
repz
push
xchg
mov
or
mov
push
and
add
cmc
pop
outsl
mov
and
std
mov
push
adc
adc
mov
lods
push
cmp
xchg
adcl
lods
sub
shlb
movsl
jl
add
adc
jae
jmp
jl
into
js
enter
or
test
cwtl
jecxz
je
es
dec
or
out
cmp
jno
test
aaa
push
test
mov
push
es
push
repnz
mov
ret
incl
sub
sub
lock
and
pop
mov
xchg
cmp
jl
mov
adc
or
jne
mov
fistps
test
xchg
out
inc
mov
xchg
xchg
lret
add
inc
orb
ljmp
and
jl
and
and
lea
iret
xor
sub
es
popf
call
or
cld
and
inc
movsl
popf
shll
outsl
sbb
into
push
adc
fmul
ljmp
out
lods
or
lock
fnstenv
cli
outsl
inc
inc
pusha
mov
dec
pop
push
addr16
pop
xchg
mov
or
xchg
jmp
scas
leave
pop
lahf
pop
aad
xchg
pop
push
mov
popa
mov
push
notb
mov
lahf
and
mov
push
inc
and
or
mov
jae
rcrb
mov
and
cltd
lods
push
pop
sahf
and
ret
dec
fimuls
push
fbld
adc
xchg
mov
mov
jmp
sub
inc
xchg
xchg
nop
test
aas
add
adc
sti
mov
shll
mov
lock
pushf
fadd
mov
mov
call
repnz
dec
cmc
icebp
pop
orb
mov
lods
inc
into
lahf
mov
and
or
xchg
or
mov
popf
stos
pop
push
jbe
popa
pop
mov
insl
adc
fdivl
inc
lahf
adc
adcl
pop
xor
jne
pop
insl
test
popa
xchg
aad
mov
adc
pop
leave
fisttpl
lods
inc
idivb
test
aam
xchg
add
mov
push
sti
pusha
test
dec
and
ja
les
mov
push
es
lock
ret
pushf
add
mov
cs
xchg
imul
adc
das
es
dec
xchg
das
dec
or
inc
test
add
adc
xor
add
dec
cmp
fwait
movsl
add
cmp
xchg
xlat
test
ds
in
jl
arpl
or
fbld
stc
leave
push
idivl
test
mov
adcl
inc
xchg
dec
and
push
push
js
and
pop
inc
mov
adc
cwtl
into
cs
test
pushf
lock
and
pusha
and
inc
aaa
dec
pop
stc
mov
push
insl
or
sub
and
dec
mov
dec
out
sbb
scas
lahf
sbb
mov
inc
cmp
shll
xchg
or
pop
aaa
in
sbbl
subl
mov
stos
add
jae
cmp
ret
dec
push
adc
ret
jle
test
dec
mov
adc
sub
fwait
sub
lea
and
movsl
sbb
lahf
loop
mov
lcall
frstor
mov
jmp
mov
or
cld
dec
hlt
and
pop
gs
dec
sbbl
negb
pusha
imul
cmc
push
jge
movsb
pushf
jnp
cmp
and
mov
sub
lret
lahf
jle
sbb
or
adc
push
dec
sub
mov
lods
data16
mov
shlb
inc
jl
jne
adc
int
jbe
lds
push
mov
push
inc
sbb
sub
push
popl
mov
mov
mov
ds
jo
aam
add
wbinvd
and
mov
stos
dec
sahf
fldz
push
stos
cli
adc
cmp
adc
and
mov
aas
mov
jns
in
sub
in
add
mov
mov
inc
and
test
cmpsl
add
jg
icebp
mov
push
fmuls
add
outsl
test
sub
stos
fmuls
push
aam
in
test
int3
push
sbb
bound
popa
ds
sti
or
lahf
xchg
ret
mov
adc
mov
sbb
push
mov
into
mov
push
dec
push
mov
dec
sbb
lahf
sarl
pushf
cmpsl
bound
addr16
out
xchg
adc
movsb
add
adc
jb
jo
fiaddl
ja
mov
jge
pop
or
popf
jmp
pop
jmp
lret
nop
xor
repnz
loope
sbb
divb
mov
cld
adc
xchg
inc
shll
jp
push
mov
and
pop
cmp
fldl
mov
xor
inc
and
outsb
stos
adc
adc
jns
mov
ret
push
cli
sbb
shll
imul
mov
lahf
jae
pop
stos
cld
out
mov
arpl
fcompl
mov
dec
xor
jecxz
leave
stc
or
jge
ds
or
jns
pop
pop
test
scas
ljmp
mov
lods
lods
pop
inc
or
mov
pop
movsb
fwait
pop
add
int3
jp
pop
mov
jns
sub
adc
fcoml
ficompl
sbb
jl
pop
sarb
fs
or
and
fwait
jg
dec
and
push
pusha
fstl
push
pop
sahf
xor
push
push
lcall
ds
outsl
out
lret
sahf
int
dec
and
pop
cmp
pop
or
mov
adc
lds
shl
in
in
rep
repnz
pushf
cmp
in
push
mov
les
and
popa
fildll
pop
std
repnz
mov
jp
in
pop
pushf
cs
mov
mov
xchg
cmp
fnstcw
sbb
mov
add
adc
add
outsb
dec
out
bound
inc
or
jp
xchg
out
add
adc
dec
lahf
into
es
pusha
adc
xchg
and
insl
or
sub
mov
jns
cwtl
adc
stc
pop
lock
iret
push
sub
lock
scas
and
orl
adc
dec
cmp
outsb
loopne
and
cmp
add
cltd
xchg
jne
iret
add
mov
loopne
scas
es
jecxz
mov
adc
sbb
pusha
dec
sbb
add
shll
jnp
repz
pushf
xchg
clc
aam
dec
add
test
xor
mov
insb
lods
xor
sar
mov
sbb
pusha
call
or
inc
mov
inc
sub
and
nop
aam
mov
decb
aaa
mov
ljmp
pop
and
and
jno
test
inc
add
jno
fwait
and
dec
xor
dec
dec
mov
or
gs
divl
and
je
mov
mov
rcrl
sub
inc
xchg
test
inc
fsubs
jmp
mov
or
lods
out
test
lcall
scas
ret
sahf
inc
jge
jle
daa
enter
lds
repz
or
sbb
sbb
mov
out
cmp
inc
out
inc
inc
xor
outsl
xchg
int3
push
adc
mov
cmp
mov
add
add
add
add
add
loopne
add
add
icebp
add
add
add
add
add
add
add
add
add
add
add
shll
add
add
add
add
add
add
add
add
rolb
addb
ljmp
ja
cmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
add
add
push
insl
add
add
add
add
add
add
add
add
js
add
add
add
enter
add
inc
add
jg
addb
add
pop
adc
dec
add
clc
add
test
add
popa
add
in
pop
outsl
ja
jae
inc
add
pop
shrl
mov
inc
fildl
add
sahf
add
andnps
mov
xor
or
push
cmpb
mov
mov
ljmp
push
test
call
jmp
test
in
adcl
adc
testl
in
inc
std
incl
inc
std
incl
shl
or
jge
push
add
add
add
popl
pushl
fistl
adc
decl
adc
loopne
incl
adcl
cld
push
push
cli
incl
shl
add
jne
test
xor
lea
lea
jne
add
adc
add
adc
adc
add
insb
add
add
add
call
push
add
push
add
imul
outsb
imul
mov
popa
gs
je
mov
outsb
jae
add
movsl
add
sub
popa
fs
ja
add
js
jne
popa
insb
outsl
jae
imul
push
jb
xor
push
add
add
adc
add
mov
add
add
add
add
sbb
add
add
add
add
dec
test
pop
inc
dec
int3
and
mov
mov
pop
xchg
in
outsb
pop
cmp
mov
stos
or
mov
xchg
xlat
cld
mov
adc
cmp
push
push
xchg
repnz
stos
dec
scas
adc
mov
mov
lahf
mov
mov
pusha
pop
adc
cmp
xchg
jne
cmp
lahf
notl
and
movsl
out
ficompl
jns
std
test
push
xor
scas
adc
jg
pop
in
mov
test
mov
and
jo
push
jp
jns
pop
xlat
jl
xor
jo
push
lods
pop
pop
jo
mov
mov
sbb
lcall
or
sbb
mov
add
cmp
lods
dec
sahf
mov
cs
xchg
cwtl
add
scas
popf
add
inc
repnz
dec
cmpsb
ja
fdivr
add
addr16
adc
mov
enter
mov
arpl
pop
jnp
imul
dec
loopne
push
imulb
int3
lret
sub
test
and
sbb
out
push
clc
lds
es
adc
xchg
bound
lret
bound
jns
jl
push
in
jo
in
push
mov
nop
lahf
pusha
xchg
imul
push
mov
dec
pop
push
popa
add
popaw
sti
rorb
cmpsb
aad
jne
nop
fidivl
fs
cltd
roll
iret
sub
sub
jp
fistpl
fbld
mov
xor
mov
adc
push
jmp
xchg
or
sbb
mov
and
xchg
sbb
xchg
mov
clc
movsb
or
ja
xchg
cmp
scas
jle
leave
mov
pop
cmp
mov
jbe
sbb
packsswb
mov
or
addl
sbb
jge
and
addr16
jno
sub
std
aaa
dec
push
gs
bound
pop
repnz
iret
int
repnz
xchg
xchg
scas
mov
lods
dec
dec
adc
nop
jmp
xchg
mov
cs
fistpl
inc
xchg
imul
mov
scas
icebp
stos
push
in
add
push
cmp
xchg
ja
xchg
xor
shr
dec
in
iret
test
sbb
and
popf
scas
test
mov
mov
leave
xchg
je
mov
xorl
xchg
xchg
mov
add
xlat
mov
aaa
dec
repnz
out
adc
jbe
shl
mov
adc
jle
mull
movsl
mov
pop
rcrl
xchg
push
xchg
mov
sti
sarl
movsl
jns
pushf
daa
dec
adc
jbe
data16
sbb
mov
gs
icebp
push
data16
sub
mov
and
movsl
add
clc
xlat
imul
mov
fmull
mov
scas
adc
add
hlt
insl
fistpl
fcomip
jge
cmp
call
adc
jae
int3
jl
jg
and
pop
test
push
in
scas
sub
xor
xor
jno
stc
loope
fildl
inc
icebp
lret
icebp
mov
xchg
sub
push
sarl
dec
popf
in
inc
sbb
lcall
in
jl
lahf
inc
repz
pop
inc
xor
les
enter
push
cmp
and
daa
mov
push
insl
lods
and
dec
jmp
xor
es
mov
stos
daa
mov
mov
test
mov
push
mov
shrb
out
add
into
cmp
scas
dec
arpl
pop
lahf
stos
jle
popa
mov
lcall
scas
ljmp
das
jl
xor
sbb
push
jmp
sbb
mov
pop
mov
andl
daa
sahf
sbb
lret
scas
push
mov
lock
adc
js
fisubl
pop
cmp
sub
inc
je
test
pop
pop
and
out
sub
mov
mov
sub
fistl
xchg
mov
leave
imul
jb
pusha
mov
enter
popa
hlt
shll
add
and
fs
or
out
mov
jg
lock
fstps
mov
xor
jb
fstpl
xor
sbb
pop
fwait
push
test
std
add
xchg
insl
pop
mov
aam
iret
fidivs
std
and
int3
movsb
je
inc
popf
jge
mov
mov
jecxz
sarl
jp
aam
and
mov
ja
dec
pop
and
lahf
cmp
mov
sbb
test
out
push
sti
jnp
int
ja
push
test
mov
cmp
das
pop
mov
ljmp
stos
popf
jno
fsubrs
sbb
shrb
dec
jmp
sub
push
fwait
adc
xlat
xchg
fisubs
add
or
and
sub
mov
scas
jbe
xchg
or
orb
lea
and
push
pop
pushf
push
iret
jl
je
cmp
sbb
insl
and
jbe
pushf
push
xchg
pop
mov
int
and
adc
sti
rolb
enter
ret
pop
jns
cmpsb
xor
pop
loop
fwait
out
cmpsb
dec
shrb
jge
int3
pusha
mov
inc
xchg
and
dec
aad
jle
dec
adc
jmp
jae
and
fdivrp
xchg
dec
ret
rcr
pop
jno
pop
xor
ja
sbb
dec
pop
nop
push
xor
mov
dec
pop
sar
test
push
lea
xchg
or
pop
mov
add
rcrb
dec
pop
stos
sub
adc
pop
and
xchg
pop
das
out
mov
adc
inc
cmpsl
pop
dec
mov
imul
mov
inc
inc
sub
mov
das
mov
fsubrl
fs
shll
push
ljmp
lods
mov
popf
xchg
adc
inc
popf
jmp
xlat
or
inc
push
ficoms
enter
dec
lcall
inc
sbb
inc
jecxz
and
cmp
xchg
and
out
repz
insb
mov
out
push
aas
and
aam
nop
sub
lea
out
and
pop
ljmp
jmp
and
iret
clc
dec
stos
sbb
mov
movsb
mov
xlat
fisubrl
ds
jle
fistl
or
mov
pop
stos
jo
dec
es
and
mov
push
add
pop
iret
sub
or
and
sbb
sar
outsb
clc
in
add
jo
push
loop
dec
test
xchg
lea
mov
lods
cmp
in
lahf
pop
insb
mov
mov
test
mov
mov
push
cmp
push
cmp
jp
std
out
jmp
mov
or
xchg
lock
mov
xadd
fmuls
andb
mov
inc
mov
sub
repnz
ret
xor
adc
test
push
jl
ret
in
inc
and
xor
pop
repnz
sbb
adcl
adc
test
int
xchg
cmp
mov
sub
xchg
scas
mov
ljmp
cmp
outsl
mov
lret
movsb
mov
loopne
out
sbb
fwait
in
fmul
push
xchg
imul
lahf
pushf
mov
xor
test
fcoms
imul
add
enter
fcmovnu
std
and
clc
and
jnp
stos
xchg
xchg
sahf
mov
lcall
popa
jp
sub
int3
ror
stos
call
out
cmp
mov
sti
cld
xor
sti
xor
rcrl
mov
or
push
push
fistpll
mov
push
scas
dec
sub
pop
xor
lods
add
and
cwtl
xchg
fsubr
fwait
sahf
and
std
fiaddl
add
popf
xor
mov
leave
cmc
pop
dec
iret
jb
or
aad
fdivr
mov
call
aaa
push
aaa
sub
sbb
lahf
mov
out
inc
imul
loope
xchg
stos
xchg
mov
inc
lock
dec
push
js
add
pop
stos
rorl
mov
push
movsb
pop
roll
sbb
cld
ret
lds
aas
rcrl
xor
inc
rcrl
mov
jne
pop
test
fs
bound
fcoml
push
call
dec
aam
xchg
xorb
sbb
ret
pop
dec
iret
inc
aam
enter
inc
pop
hlt
pop
mov
pop
inc
insl
gs
xor
test
pop
jb
aam
in
mull
xchg
in
xchg
push
lahf
mov
mov
mov
fldenv
flds
push
push
jb
loopne
jl
out
push
mov
pusha
fisttpll
mov
sub
and
daa
sbb
jecxz
push
fs
cmp
daa
mov
mov
jl
repnz
jl
aaa
cmpsl
xchg
out
sarb
fcmovnu
call
fdivs
mov
jb
sub
dec
nop
dec
cmp
mov
stos
pop
mov
push
cmp
fidivrl
pop
add
decb
xchg
jb
mov
jno
or
mov
inc
xchg
subb
cli
js
mov
and
sub
data16
xchg
stc
mov
inc
cmp
mov
sub
imul
es
rorl
movzbl
leave
push
fiaddl
jbe
push
mov
outsb
sbb
mov
dec
ret
mov
add
inc
sarl
ljmp
sbb
sbb
lret
stos
mov
lods
pop
in
pop
xor
or
jp
aas
push
push
mov
scas
loope
xchg
dec
or
lods
ja
mov
pop
dec
or
pop
jl
jbe
mov
push
movsl
int
sub
mov
pusha
cli
or
xor
mov
dec
cmp
push
push
and
fists
push
out
mov
mov
je
dec
cli
add
sbb
dec
mov
pop
subl
dec
arpl
lds
cltd
push
fwait
and
or
mov
xor
int
push
lods
mov
jmp
add
aaa
mov
or
mov
and
pop
add
sahf
push
out
or
stc
jecxz
iret
adc
and
clc
test
mov
in
sbb
push
add
pushf
loope
sbb
push
or
pop
stos
xchg
shll
cmc
lcall
in
mov
gs
xor
adc
lret
test
and
push
jmp
inc
xor
push
or
pusha
mov
pop
push
ja
fstpl
out
xor
mov
nop
ljmp
movsb
cs
sbbl
cld
sbb
cmp
sub
dec
outsb
mov
data16
dec
sub
jo
popa
mov
insb
aas
rcrl
mov
mov
dec
les
test
mov
repnz
cmpsl
xchg
mov
scas
jns
push
xchg
mov
negb
stos
add
out
dec
xor
aaa
jg
ret
fidivrs
xchg
loopne
lahf
clc
push
xor
mov
sub
xchg
pop
push
pop
push
gs
push
push
addr16
cmp
subl
pusha
mov
out
fcomp
sahf
movsb
mov
push
ljmp
pop
ds
jbe
sub
js
xchg
sub
xor
xlat
xchg
stc
fcmovnbe
cmpsb
xor
inc
mov
add
jb
pushf
dec
adc
or
or
test
mov
push
push
lcall
pop
fists
adc
loopne
imull
in
in
sar
pop
mov
inc
dec
fsub
jmp
popa
lods
in
jl
pusha
inc
aad
repz
pop
in
mov
sti
push
ficoms
lods
adc
cmp
mov
mov
sarl
push
cmp
sahf
ret
pop
mov
fstl
out
and
scas
aas
ret
lock
xchg
in
pop
adc
and
outsb
or
cltd
adc
mov
cmp
push
jmp
cmp
mov
xor
xor
dec
jns
pop
push
lea
pop
xchg
xchg
sahf
push
call
dec
jge
fnstenv
leave
jge
add
shr
in
daa
pop
inc
adc
lds
jmp
mov
push
mov
xchg
push
pusha
xchg
aas
sub
scas
outsb
xor
xor
push
js
aad
inc
xlat
test
mov
insb
pop
int
sub
cwtl
mov
in
imul
and
inc
lret
and
subb
xchg
cmp
and
lods
adc
cs
or
mov
jno
in
mov
pop
or
cmp
fidivrs
movsb
jl
pusha
adc
leave
xor
mov
pop
aad
add
jnp
in
stc
dec
lds
scas
sub
xchg
jnp
jl
mov
and
cli
add
or
mov
jbe
aaa
push
aaa
test
jae
mov
mov
sub
cld
bound
repnz
mov
arpl
icebp
outsb
fldcw
and
and
sbb
xchg
rcrb
pop
inc
push
xchg
mov
and
adc
out
mov
xlat
mov
push
mov
aas
fsts
pop
test
test
mov
dec
test
test
rclb
xor
push
lcall
cmp
jle
pop
mov
fcomps
mov
fldl
arpl
sbb
cmp
mov
push
and
push
jno
jo
imul
xor
pop
cmp
aad
mov
push
ret
mov
fsub
mov
rcrl
xor
dec
scas
inc
xchg
cmp
test
js
sub
not
mov
repnz
movsb
lahf
notb
dec
test
sbb
jg
dec
lahf
test
jb
mov
pop
xor
or
stos
sub
es
cmp
loope
mul
stc
stos
enter
mov
sub
sub
cmp
xchg
mov
fstl
add
xchg
aas
in
pop
cltd
rcl
push
shr
xor
mov
xor
stos
movsb
movsb
flds
bound
sbb
ja
pop
or
cmc
data16
test
inc
fwait
sub
sub
roll
jo
push
in
or
or
inc
cmp
inc
pusha
push
inc
adc
fcmovnu
push
or
insl
test
in
dec
and
popa
add
mov
dec
pop
dec
add
test
jecxz
pop
mov
shrl
and
into
pop
fcomi
and
cmc
mov
aas
shrl
dec
pushf
mov
lcall
push
cmp
dec
sub
xor
shll
rorb
push
call
sub
cmp
and
aam
jl
sarb
pop
out
test
call
mov
and
fs
push
lods
mov
dec
std
cltd
movsb
fnstenv
inc
enter
pushf
add
outsl
sub
dec
rclb
lods
sub
mov
pop
inc
xchg
cmp
xchg
ret
test
sbb
pop
jnp
cs
xor
lahf
stos
movsb
data16
subb
fiaddl
add
stc
jnp
cmp
add
scas
pop
aas
ret
movsl
mov
pop
fildll
jle
pop
imul
jo
out
push
adc
rcrl
lds
lahf
pop
lds
pop
adc
loopne
ds
test
lcall
out
lcall
stos
aas
aam
jg
xlat
push
movsl
mov
sarl
and
or
out
mov
and
xchg
gs
addr16
gs
xchg
xchg
inc
pop
fbstp
roll
adc
popa
fiaddl
or
sub
mov
repnz
inc
mov
rclb
mov
xchg
imul
mov
mov
stos
xchg
ja
hlt
mov
push
xor
add
pop
add
mov
sbb
pop
jne
add
mov
jnp
mov
addr16
mov
mov
or
jnp
or
sbb
add
mov
jp
pop
and
mov
and
mulb
mov
leave
add
xor
sub
adc
out
gs
mov
pop
into
mov
push
cli
mov
lods
mov
loopne
stos
mov
js
mov
mov
mov
mov
pop
adc
pop
repz
mov
and
addr16
mov
lret
enter
dec
xor
lock
jne
iret
mov
js
icebp
mov
pop
xchg
je
or
mov
divb
xor
cwtl
push
push
add
push
lods
or
mov
pop
sbb
cmc
shl
cltd
insl
push
cmc
inc
xor
cmpsl
daa
fistl
fdivrl
fistpl
add
loop
mov
mov
push
popf
leave
inc
xchg
in
mov
cli
bound
scas
jle
mov
sub
ret
mov
sahf
mov
cmp
mov
add
xchg
fsubrs
int
or
and
bound
or
pop
mov
out
out
jb
nop
xchg
xor
cld
mov
xchg
and
mov
inc
jmp
es
lods
icebp
pop
pop
mov
jo
jae
dec
lods
lock
push
lods
sti
mov
sbb
hlt
pop
sti
push
mov
and
push
adc
xchg
dec
adc
xchg
push
mov
cwtl
fsubr
test
ja
xor
or
push
or
loop
xchg
inc
daa
dec
or
inc
mov
and
jo
mov
popa
repnz
adc
adc
imul
pop
jnp
imul
sahf
pop
fcomps
popa
push
int3
mov
jnp
mov
movsl
sbb
xor
inc
push
adc
bound
fsubrs
into
imul
lcall
mov
inc
movsb
inc
push
scas
mov
ficompl
jnp
xorb
imul
and
lea
fs
jle
lods
mov
inc
lds
pusha
xor
cld
xchg
mov
push
dec
cli
pusha
lock
mov
out
imul
mov
out
add
out
or
pop
xchg
sub
sub
or
imul
orl
dec
and
ss
adcb
inc
sbb
popa
mov
cmpsl
sbb
incb
cmpsb
or
pop
hlt
jmp
fnstcw
ljmp
or
push
sahf
xchg
jae
rcl
dec
and
lock
lahf
imul
adc
xor
psubsw
outsl
punpcklbw
push
sti
pusha
cmp
inc
push
rcrl
test
lods
stos
mov
pop
pop
push
popw
or
or
add
add
xor
add
test
add
add
cmp
add
add
mov
add
add
adcb
add
in
add
add
add
add
add
or
add
add
insb
add
xor
sbb
add
add
add
add
push
stos
add
ja
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
nop
add
mov
mov
outsb
add
mov
add
add
add
adc
dec
add
add
add
add
cltd
add
add
add
add
add
add
add
add
add
add
add
add
add
add
stc
add
add
add
add
jg
outsb
arpl
pop
and
ja
dec
add
push
fisubs
mov
xor
addl
xchg
jne
decl
adc
inc
lea
adc
lea
adc
pop
decl
pop
push
mov
add
cvtdq2ps
add
mov
mov
mov
add
jmp
mov
lea
jns
add
add
sub
loopne
add
adc
call
test
adc
adc
add
sar
int
adc
out
add
jne
push
decl
add
push
mov
mov
enter
mov
sub
add
jne
pushl
push
add
add
pop
add
mov
add
add
fiadds
add
add
add
add
dec
inc
je
inc
jns
inc
dec
fadds
gs
gs
jo
sbb
fs
sbb
je
pop
insb
in
insb
je
dec
arpl
fs
push
gs
jb
addr16
dec
gs
push
sub
push
jbe
cs
arpl
js
xor
add
add
flds
add
add
add
add
add
add
add
add
add
add
out
cmp
add
add
add
add
add
add
add
jae
lahf
insb
fs
repnz
mov
jecxz
arpl
lret
fsubrs
scas
in
sahf
lock
in
mov
cs
outsb
cltd
out
jmp
movsl
dec
and
mov
test
es
pop
popf
xor
int
inc
into
das
adc
jbe
fdivs
add
pop
mov
xlat
mov
pop
movsl
mov
clc
fnsetpm(287
mov
inc
mov
lea
pop
clc
jge
in
lahf
cld
xchg
and
cwtl
lret
pop
inc
xchg
adc
xor
mov
stc
leave
fadds
les
xchg
xor
adc
sub
imul
jg
in
aam
mov
adcb
xchg
andb
loopne
jb
pop
in
mov
clc
adc
test
mov
faddl
outsl
pop
pop
add
lock
cmpsb
scas
repnz
stos
sub
and
addr16
repnz
pop
aad
xchg
movl
push
mov
ror
pop
dec
inc
cltd
or
das
xchg
fs
ds
inc
push
jbe
aam
mov
fstpl
mov
ljmp
mov
xor
sbb
jbe
imul
scas
cmpsb
push
cltd
dec
xlat
or
subl
pop
imull
loope
mov
data16
or
lds
pop
and
movsb
jle
bound
mov
cmp
dec
hlt
adc
pop
push
mov
mov
jae
jp
inc
adc
push
jns
dec
in
popa
lcall
repnz
jp
das
rcrl
lods
add
dec
push
std
fisttps
push
mov
aam
rorl
lahf
sub
adc
push
pop
mov
mov
lahf
push
dec
pop
xor
dec
xor
cmp
imul
pushl
xor
inc
sub
lret
adc
subb
push
aam
fs
fcmovnbe
repz
xchg
cmp
mov
leave
js
cmp
mov
stc
shr
cld
xor
jo
dec
ljmp
aaa
jbe
outsb
cld
mov
in
nop
test
jo
add
inc
arpl
insb
mov
xchg
icebp
rcr
or
movsl
or
and
mov
mov
mov
add
test
add
pop
out
fcompl
or
das
add
inc
and
pop
rolb
or
iret
jle
xor
pop
pop
subb
inc
push
mov
les
push
inc
sub
mov
fisubs
test
xchg
xchg
sbb
hlt
or
insl
jl
flds
mov
mov
adc
out
or
fwait
je
adc
into
mov
sbb
f2xm1
stos
adc
mov
bound
and
add
sub
sbb
push
fidivrs
mov
lret
adc
push
pusha
hlt
fisttpl
gs
cmp
push
outsb
jmp
jbe
lods
jg
imul
cmc
js
mov
mov
mov
push
sub
outsl
dec
xchg
clc
xchg
lock
cli
sub
xor
xchg
mov
rorl
xor
pop
mov
test
stc
add
addl
mov
repnz
fsubl
cmc
in
cld
sub
xor
push
add
sub
jmp
mov
in
in
in
call
mov
inc
cmpsb
cmc
push
dec
adc
bound
mov
sbb
xor
stos
xor
mov
lods
mov
or
jnp
in
test
mov
push
inc
pop
xchg
je
ss
call
mov
stos
leave
lea
dec
mov
pop
adc
push
jecxz
mov
adc
push
pop
dec
andb
roll
in
fsubs
out
stos
push
jae
adcb
popf
or
dec
xchg
jnp
leave
sbb
popa
cmp
rol
xor
xchg
xor
and
out
xchg
mov
jg
push
inc
loope
adc
mov
xchg
sbb
shlb
ja
jle
xchg
repz
and
mov
cmp
adc
subb
ja
mov
mov
lods
dec
repnz
test
cmp
xchg
and
outsb
ficoml
mov
jbe
mov
cmp
ljmp
push
lahf
pushf
mov
in
neg
inc
push
ja
pop
pop
fisttpl
movsl
sbb
mov
popf
inc
shl
cmpb
aad
xchg
add
adc
lcall
in
pop
call
pop
js
inc
mov
jo
push
xor
mov
push
cwtl
je
loope
dec
mov
gs
xlat
repnz
icebp
pop
ret
pop
mov
xor
les
imul
cmp
dec
cli
dec
dec
cld
lcall
sub
mov
int
mov
ret
cmc
scas
sub
adc
fnstsw
sahf
add
cmpsb
imul
jb
fnstcw
mov
or
xchg
and
dec
mov
les
push
lock
pop
aaa
movsb
test
andl
out
inc
mov
cli
imul
cmc
lock
and
and
ja
into
jbe
sub
std
xchg
and
dec
mov
dec
lcall
popf
loop
invd
push
test
enter
push
daa
xor
pop
inc
add
movsb
ss
aas
xchg
and
idivl
xchg
fiaddl
pop
cmpsl
fsubrp
xor
scas
andl
aas
mov
je
sub
pusha
imul
pop
push
out
pushf
ficomps
cmp
and
nop
jb
mov
fisttps
ds
cmp
les
out
sbb
test
pop
pop
or
xchg
inc
add
mov
pushl
mov
mov
mov
inc
push
xor
sub
aas
data16
mov
fisubrs
fstps
cmp
xchg
push
or
sbb
xchg
sub
dec
jnp
jne
clc
loop
sbb
gs
mov
pop
sbb
repz
imul
xor
fcmovb
movsb
pushf
dec
addb
add
int3
mov
xchg
sub
xchg
add
test
jno
shlb
stos
sub
jecxz
pop
repnz
sbb
mov
add
dec
jg
push
jl
push
rcrl
inc
add
mov
mov
lret
in
adc
xor
xorb
shll
shlb
dec
add
jecxz
add
sbb
pop
int3
cmp
xor
mov
mov
sbb
mov
and
dec
sub
inc
mov
test
mov
movsb
push
dec
sar
add
movsb
or
cmp
icebp
leave
fmulp
or
lahf
cwtl
pusha
jmp
aad
mov
mov
mov
jae
xchg
pop
and
push
insb
add
lods
xor
repnz
enter
pop
adc
pushf
mov
sub
or
cmpsl
les
cmc
mov
in
dec
ret
jne
sbb
hlt
inc
outsb
pusha
sub
mov
push
xchg
push
je
pusha
pop
stos
insl
push
cmc
ja
push
into
daa
xchg
stos
lret
push
inc
fcomps
mov
sub
cmp
pusha
or
jno
jne
jp
push
xchg
sub
sub
enter
pop
out
sahf
aas
mov
push
repz
add
cmp
inc
enter
repz
mov
daa
adc
mov
fwait
imul
lock
jne
call
cs
in
mov
push
stos
in
jmp
xor
ss
pop
int3
outsb
je
stos
leave
andl
mov
push
sbb
fsubs
aam
insl
adc
lahf
daa
inc
dec
mov
cmp
jle
stos
jge
mov
in
aaa
sub
sub
mov
sub
rclb
std
push
loope
dec
cwtl
outsb
mov
dec
mov
xchg
jmp
dec
jle
mulb
mov
jns
mov
and
push
lret
cltd
sub
xchg
out
pop
lods
adcb
or
cmp
sub
stos
pop
jae
xor
adc
and
pop
push
jmp
mov
hlt
rorb
cs
stc
xor
xchg
xchg
dec
or
or
cmpsb
mov
add
or
dec
pusha
sbb
loopne
fists
mov
xlat
mov
dec
push
inc
xor
in
pop
inc
inc
loopne
data16
sahf
xchg
mov
cwtl
mov
dec
mov
lret
push
and
jb
or
fimull
adc
cmc
test
shll
dec
cltd
mov
out
xchg
movsl
arpl
in
add
jp
push
cld
insb
fs
cli
pushf
xor
inc
pop
pop
bound
icebp
sahf
je
mov
rcrl
mov
in
pop
out
aad
das
dec
or
fiaddl
mov
jmp
fldt
mov
inc
in
dec
mov
cld
or
pop
mov
sahf
iret
xchg
stos
cmp
les
sub
add
divb
out
sbb
lods
pop
shl
pop
jno
mov
das
sub
jne
rorl
jne
repz
data16
jecxz
repnz
inc
jmp
lods
negb
fsubs
sahf
mov
out
inc
cltd
push
pushf
mov
cmc
pop
add
outsb
jb
jbe
jnp
fdivr
jbe
addr16
clc
stos
mov
mov
popf
icebp
fistps
push
pop
ret
mov
ss
dec
fimuls
ljmp
loop
aaa
arpl
je
sbb
push
xchg
pop
imul
enter
pushf
pop
inc
inc
or
adc
jo
mov
fisttpll
cmpsl
cmc
arpl
dec
lea
pop
scas
jl
sbb
repnz
icebp
mov
and
mov
cli
popf
gs
push
je
or
leave
lret
test
cwtl
jb
adc
xchg
lock
ja
mov
adc
testl
insl
sbbb
mov
cwtl
or
lret
mov
jmp
mov
pop
sub
ret
mov
push
dec
push
in
in
rcrb
fwait
xlat
and
push
fsubrp
dec
movsb
mov
mov
stc
ja
push
fcmove
je
sub
mov
inc
xor
lds
push
mov
fisubrs
lcall
in
mov
mov
loope
dec
xchg
ror
aad
test
lahf
adc
sub
xchg
mov
out
and
cwtl
xchg
repz
fildl
rcll
sbb
daa
mov
pop
popa
lret
fwait
mov
inc
pushf
ja
mov
lods
jnp
cli
cmp
inc
mov
cmp
outsl
push
mov
or
xchg
nop
inc
or
sub
pop
mov
shll
jmp
cld
mov
cmc
push
clc
fadds
xchg
xchg
fwait
cmp
fstpl
shlb
loope
adc
push
push
cwtl
mov
sbb
movsl
adcb
fdivp
insb
pop
ror
mov
sbb
ja
aaa
out
inc
lea
ret
and
mov
inc
jmp
cmp
idiv
popf
imul
pop
fidivrs
cmpsl
roll
cmc
mov
mov
fisubrl
stos
loope
fbstp
cmp
add
loop
mov
fidivs
movsl
mov
pop
and
repnz
cmpsl
cmp
dec
sub
test
mov
ret
sbb
mov
cwtl
jb
adc
xchg
rolb
inc
mov
cmc
sub
cmp
lea
xor
bound
dec
cs
mov
cmp
adc
repnz
inc
out
dec
mov
push
jno
in
punpckhdq
scas
inc
mov
fmulp
lcall
jmp
jbe
movb
push
mov
mov
xchg
sahf
inc
andb
or
scas
xor
mov
scas
jae
lods
dec
inc
sbb
jge
mov
pusha
mov
inc
addr16
mov
pop
adc
xor
cmpsb
pop
lock
xor
dec
or
aam
sbb
arpl
xchg
scas
xchg
push
jns
movsl
mov
mov
and
mov
in
lods
daa
add
pop
and
mov
pop
fsts
sub
int
in
inc
push
outsb
xor
call
pop
arpl
sbb
cmp
dec
ds
and
mov
inc
sti
mov
push
adc
lret
lahf
loope
jmp
dec
xchg
in
test
sub
xchg
mov
mov
aad
push
test
mov
out
ds
mov
lahf
jle
jp
pop
mov
out
out
aad
out
dec
mov
mov
outsl
adc
in
cmp
imul
dec
inc
loope
or
enter
into
sub
lods
inc
ficoml
arpl
and
sbb
inc
and
xor
cmpsb
imul
jp
mov
inc
push
mov
popf
aaa
ret
inc
lcall
ds
es
movsl
xchg
jo
loop
mov
xchg
fwait
dec
pushf
aam
inc
xchg
cli
ljmp
inc
adc
ret
and
insb
fucomp
ljmp
addr16
fisttpll
cmp
and
push
push
sbb
jge
shl
test
push
sub
gs
inc
shl
jae
inc
mov
push
inc
lcall
mov
or
pop
pusha
rorb
cmpb
clc
out
sub
and
sub
cmp
gs
sub
fwait
into
lods
cmp
es
insb
lahf
mov
add
in
inc
lods
and
out
adc
arpl
cltd
scas
dec
jae
cmc
aaa
and
sub
adc
inc
cmp
imul
pop
sbb
sti
mov
fnstcw
icebp
jb
ljmp
out
or
ds
pop
movsl
cmc
cli
fcomps
xchg
dec
cmpb
fildll
ret
and
loop
cmpsl
pusha
xchg
and
idivb
pop
pop
xchg
xchg
or
or
cmp
push
scas
cmp
push
iret
sbb
pop
je
fimull
lock
iret
gs
lcall
insl
push
adc
cs
lds
mov
jbe
inc
lret
xchg
int
xchg
mov
fisttpll
lea
inc
in
xchg
pop
add
mov
mov
push
lret
fidivrs
pushl
inc
sti
test
sub
mov
in
out
lea
xlat
jl
test
or
xor
inc
jnp
mov
in
mov
daa
stos
mov
shrb
das
ficoms
mov
lret
sub
ret
jge
arpl
popf
icebp
mov
jb
loop
ret
mov
xlat
pop
aad
scas
test
mov
add
lcall
fsub
mov
in
jmp
xchg
pop
mov
dec
mov
arpl
push
push
outsb
add
les
jmp
pop
imul
dec
inc
lods
and
out
xchg
or
mov
into
and
icebp
jnp
inc
lret
not
cmpsl
push
testl
cmp
sub
jmp
sub
dec
sbb
xor
adc
jg
insb
xchg
repz
test
sbbl
repnz
mov
or
mov
rcrb
mov
aad
pusha
sbb
mov
test
out
cmc
lahf
fdivrs
push
cmc
aaa
sub
fmuls
xor
out
mov
sub
and
xor
push
mov
add
stos
insl
in
pop
and
mov
in
and
stc
push
push
pushf
rcrl
divb
mov
jnp
lea
xchg
and
mov
cltd
clc
jae
dec
test
dec
lds
lds
dec
adc
loopne
add
scas
stos
popa
and
lds
int
js
jmp
arpl
hlt
clc
inc
inc
pop
dec
mov
lock
mov
scas
mov
cmp
mov
sti
add
adc
xor
cmpl
movsl
push
lcall
arpl
mov
dec
push
cmc
pop
mov
or
adc
hlt
push
popa
dec
call
sahf
popa
popa
inc
xchg
inc
xor
xchg
loopne
dec
mov
sbbl
or
inc
xchg
faddl
xor
and
cmp
mov
aam
imul
out
mov
pop
or
add
dec
shlb
addr16
dec
lret
lods
mov
fimuls
rcrl
ja
inc
xor
das
mov
mov
adc
sbb
mov
pop
subb
repnz
int
xchg
adc
or
repnz
xchg
gs
add
sub
bound
and
pop
cmpsl
imul
adc
pop
leave
les
mul
sub
push
pop
movsl
push
and
stos
leave
mov
dec
icebp
push
mov
sbb
adc
push
and
nop
or
sub
sbb
or
icebp
push
pop
testb
fimull
pop
rorl
hlt
bound
lret
and
nop
add
mov
pop
fisubrs
or
shrb
lea
mov
lcall
sub
pop
sarb
cld
add
sbb
mov
js
aam
lods
push
xchg
inc
xchg
dec
pop
and
clc
ljmp
adc
cmp
ret
push
testl
push
hlt
xchg
jmp
cmp
cmpsb
movsl
movsl
adcb
outsb
inc
push
sbbl
dec
jmp
stos
inc
pop
repnz
loopne
pushf
loope
mov
inc
jnp
or
cmpsb
fwait
pop
xor
xchg
push
dec
xor
add
pop
jb
cmp
xor
jge
iret
cmc
xor
xor
loopne
imulb
scas
and
aad
pop
stos
mov
out
sahf
lcall
mov
leave
fnstenv
and
mov
or
jnp
ljmp
ror
lea
sub
insl
insl
dec
mov
push
arpl
sbb
jno
into
mov
xor
mov
nop
lods
daa
jns
andb
cmpsb
push
in
gs
inc
mov
in
lds
add
add
int
pop
jle
lcall
dec
vpunpckhwd
sti
jnp
outsl
pop
jge
fsubrl
dec
imul
lea
pop
cmp
pop
icebp
cld
jo
xchg
and
jp
xor
leave
es
repnz
cmp
ja
push
int3
cmp
and
xchg
pop
jbe
outsb
decl
inc
push
and
fidivs
icebp
jecxz
rcll
shrl
sub
xor
loopne
jmp
push
sub
xchg
cmp
add
add
add
stc
push
dec
mov
add
add
add
add
jle
add
add
add
add
add
add
out
cmp
add
add
add
add
add
add
add
add
add
add
into
rolb
add
ja
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
rcl
add
cld
aam
add
aad
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
lahf
aad
add
add
jl
add
je
add
insb
aad
add
add
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
aad
add
aad
add
aad
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pop
add
js
add
mov
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
hlt
add
cld
add
add
add
or
add
adc
add
sbb
add
and
add
aaa
xlat
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
xlat
add
pop
xlat
add
push
xlat
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
nop
fadds
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
flds
add
add
add
add
xor
add
sub
add
and
add
sbb
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
js
add
sbb
add
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
sbb
add
cmp
add
pusha
fiaddl
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
mov
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
adc
add
sbb
add
sub
add
cmp
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
