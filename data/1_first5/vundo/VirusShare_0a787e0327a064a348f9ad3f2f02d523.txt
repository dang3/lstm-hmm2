stc
rcrl
inc
push
push
pop
inc
test
imul
sbb
outsl
adc
data16
sub
push
adc
adc
or
push
mov
mov
adc
cwtl
jae
adc
test
roll
push
cmp
jb
mov
adc
xchg
lea
stos
pop
jne
fnstenv
mull
push
imul
sahf
nop
lcall
jnp
mov
jecxz
adc
jb
js
jmp
sub
inc
int3
jae
adc
jl
jbe
adc
add
orps
jo
inc
rcrb
mov
hlt
xchg
clc
fisttps
repz
cmp
outsb
subb
add
xchg
das
inc
popf
inc
dec
test
mov
dec
out
fsubl
pop
xchg
loopne
ja
cld
lret
pop
idivb
cs
or
lret
jl
lds
ja
sub
test
mov
adc
stos
jle
aaa
xorb
push
sahf
mov
popl
mov
sbb
push
sub
or
stos
add
adc
xchg
sub
and
lock
adc
ljmp
adc
ret
jo
xchg
sbb
sub
or
mov
xchg
test
adc
lea
addr16
xor
push
adc
sbbl
invd
adc
push
adc
mov
call
push
adc
sub
mov
cld
repnz
push
mov
mov
adc
jae
adc
out
sub
mov
test
scas
add
fwait
imul
pop
push
lea
jno
int
imulb
fst
jge
ja
pop
lcall
jge
mov
adc
cmp
stos
imul
add
xchg
shl
es
adc
xchg
mov
push
or
jmp
sbb
sbb
push
sub
xchg
push
shrb
lea
adc
adc
aad
sbb
jns
mov
mov
mov
adcb
push
lods
or
mov
shlb
adc
lahf
xor
xchg
mov
xchg
and
mov
and
jae
mov
adc
mov
ja
je
push
fdivl
fs
test
addr16
xchg
jne
orl
inc
adc
popl
dec
jne
sub
aas
pop
test
mov
adc
lahf
imul
jo
adc
int3
lcall
sub
js
aaa
push
cmc
lahf
dec
es
inc
lock
sub
pop
mov
mov
es
stc
test
shlb
fs
adc
repnz
leave
mov
imul
add
lods
mov
imul
stc
lock
inc
cmc
lahf
mov
ljmp
lds
jo
push
adc
in
lahf
aas
jle
jno
xchg
cwtl
daa
push
hlt
adc
adc
push
sbb
fldl
jne
jo
adc
pop
add
adc
testl
add
jnp
shlb
arpl
jecxz
inc
or
fidivrl
xchg
mov
and
cmp
adc
stos
mov
cmp
jnp
push
ds
out
incb
andl
mov
bound
arpl
addr16
loopne
mov
mov
pop
js
mov
and
mov
mov
or
aam
cwtl
out
cmp
cmp
push
lahf
cmpsl
sbb
adc
xchg
cmp
mov
add
jp
aaa
fidivl
in
push
cli
mov
inc
inc
inc
inc
ds
test
xchg
push
scas
leave
in
aaa
mov
loopne
push
adc
lods
inc
mov
xchg
test
adc
adcb
xchg
movsl
pop
xor
push
out
adc
fcmovb
lods
mov
jl
lods
cwtl
mov
or
xchg
outsb
pop
cmp
sbb
test
fisubl
sbb
pop
jbe
pop
pop
mov
sahf
jg,pt
lret
loopne
jb
cmp
stos
push
scas
sub
xorb
fbstp
enter
or
sub
sub
jnp
lods
rep
shrl
stos
bound
das
pop
mov
jbe
hlt
jnp
and
adc
jo
pop
pop
and
xlat
addl
sbb
mov
scas
mov
adc
mov
loopne
fimuls
mov
inc
test
nop
out
fcmove
inc
int
aad
xchg
stc
stc
iret
mov
xor
imul
mov
popa
ja
jg
imul
adc
sub
sub
icebp
icebp
lahf
jecxz
sub
shrl
scas
and
mov
adc
adc
icebp
nop
mov
push
scas
mov
adc
jg
in
loop
jns
fidivrl
ss
pop
daa
push
adc
adc
enter
repnz
xchg
addr16
outsb
sti
out
rclb
xor
dec
sbb
int
or
adc
fistl
inc
movsl
cmp
xchg
add
adc
dec
jo
adc
and
lods
sahf
cmp
push
inc
push
arpl
scas
mov
fisubrl
push
cmpb
outsb
shlb
fisubrs
mov
dec
stos
loopne
and
sbb
push
adc
inc
jns,pn
xchg
nop
jo
adc
cmp
ss
stos
pop
daa
mov
cmpsb
sbb
sbb
push
adc
and
rcrb
jecxz
pop
xor
call
sbb
push
flds
xchg
fdivrl
jg
pop
cli
and
arpl
sub
mov
call
jb
or
mov
out
push
bound
and
cmpsb
inc
xchg
mov
pop
mov
rorl
stos
xchg
cmpsl
cwtl
sub
add
xchg
fnstcw
jg
fstps
adc
push
leave
push
shlb
dec
inc
enter
pop
xor
movsbl
icebp
xchg
sub
ss
popf
jp
lock
xor
lcall
roll
or
sahf
jmp
test
imul
movsl
push
lret
xchg
std
mov
mov
add
or
cmpsb
out
fidivl
rcll
fistps
sub
pop
mov
push
ja
movsb
or
jle
pushf
jo
adc
pop
push
aaa
clc
add
stos
push
inc
outsl
das
shlb
pop
in
push
inc
pop
mov
nop
inc
xchg
or
and
jo
adc
mov
je
nop
jo
adc
sub
popa
rolb
dec
xchg
cs
aaa
clc
push
aam
push
and
sub
jecxz
xchg
dec
add
cltd
and
sbb
pop
mov
js
adc
mov
mov
mov
test
pop
adc
fs
adc
pop
and
mov
fidivs
mov
test
jo
in
std
adc
pop
mov
push
sub
sub
scas
sub
fsub
xor
in
scas
inc
movl
push
add
add
rorb
je
adc
dec
sbb
inc
jp
imul
aad
adc
add
inc
push
xchg
lds
imul
adc
dec
decl
js
adc
rol
clc
ja
adc
jecxz
xchg
or
mov
xchg
js
ljmp
scas
sub
jg
sub
test
add
cld
or
and
into
push
loop
cltd
stos
xchg
das
scas
cmp
pop
outsb
inc
jecxz
rorb
or
es
mov
xor
stos
cmpsb
or
lds
lds
push
aas
add
jbe
push
jg
dec
xchg
into
xchg
adc
hlt
sbb
cmp
jns
enter
sub
jmp
mov
adc
pushf
ljmp
add
insl
pop
std
jns
call
lea
mov
fsubs
sbb
push
and
pop
addr16
stos
push
iret
sub
mov
push
in
xchg
pop
arpl
sub
orl
push
inc
xchg
adc
insl
jo
add
push
adc
mov
sbb
and
pop
mov
pop
dec
mov
in
insl
stc
and
loop
adc
mov
pop
leave
jge
imul
lock
lcall
test
mov
and
das
mov
outsl
xor
scas
push
fldl
test
add
ss
pslld
lods
fs
repz
enter
cmp
cmc
lea
fadd
mov
in
rorl
adcl
adc
push
loop
idivb
fmull
ret
pop
fisubs
out
insl
stos
cltd
push
cmp
push
lds
loopne
inc
arpl
iret
js
sbb
sub
adc
lods
mov
mov
ds
or
jl
jle
mov
pushf
push
lahf
stos
adc
fimuls
pop
pop
popa
pop
sub
adc
pop
inc
jecxz
insl
loop
sbb
pop
and
and
jne
ss
cltd
cmp
lock
cmp
shl
xor
pop
ss
adc
xchg
mov
lds
xor
jge
outsb
cmp
jno
outsl
push
jo
adc
jbe
or
xchg
fistpll
sub
cwtl
jmp
sbb
sbb
or
addl
add
insl
cwtl
jo
xlat
les
dec
test
pop
mov
aad
notb
ret
sbb
adc
xchg
mov
jle
insl
cs
xchg
or
sbb
push
cmp
xor
mov
dec
lds
or
cltd
aam
pop
aad
inc
notb
sub
push
fwait
xchg
dec
dec
fistpl
sub
mov
add
fidivl
adc
pop
stc
scas
mov
jo
adc
adc
enter
and
out
jns
nop
mov
jl
arpl
arpl
outsl
mov
add
movsb
xor
sahf
rclb
inc
test
inc
jge
shlb
push
dec
xor
fadd
adc
xchg
pop
outsl
lahf
cs
mov
fadds
adc
test
adc
pop
dec
cmp
lahf
cwtl
jb
rcl
cmc
loope
fidivl
jmp
lods
add
stos
inc
mov
pushf
jmp
shrb
hlt
or
jecxz
or
mov
lods
pop
jb
sbb
xchg
popa
shrl
push
in
pop
sbb
dec
into
movsl
lcall
inc
test
sub
mov
ds
push
mov
cltd
or
pop
push
shlb
dec
shll
scas
shrl
sbb
fnsave
cltd
cmc
sbb
sbb
fdivrs
stos
ficoms
arpl
xor
sub
scas
test
jns
cld
lods
rcll
mov
jmp
push
in
push
jb
rcl
cmc
adcb
es
lahf
lret
fstl
int3
std
xlat
mov
push
outsb
pop
mov
leave
dec
jl
mov
sub
jo
fisubrl
adc
decl
sub
mov
add
pop
pop
lret
sbb
fnsave
pop
in
inc
mov
mov
js
adc
or
push
int3
push
pusha
js
adc
and
or
jmp
push
cmp
lock
cmp
inc
or
lret
push
adc
jo
push
adc
cmp
push
bound
stos
mov
jl
push
adc
and
mov
fcoml
pop
arpl
shlb
sbb
stc
inc
scas
push
aas
cmpb
cld
add
push
adc
mov
lahf
mov
stos
stos
dec
fidivrs
pop
ss
adc
mov
or
test
addr16
jg
inc
jge
dec
sbb
imul
test
stc
jg
ljmp
lock
push
popf
aas
ljmp
mov
sbb
pop
sub
addr16
flds
out
adc
cld
adc
shlb
pop
pop
or
sti
clc
xor
jo
lock
push
stos
xor
mov
push
pop
jo
out
pop
pop
cmp
notb
int3
cwtl
test
pop
cmp
and
out
sbbl
lea
xlat
sbb
stc
shlb
inc
or
cmp
ds
jge
or
mov
adc
mov
pop
pop
and
lea
adc
push
xorl
xchg
push
adc
or
inc
insb
dec
or
adc
cltd
cmpsl
sbb
jmp
lret
and
in
movsl
xor
popa
mov
subl
icebp
sbb
js
push
push
scas
mov
inc
cld
pop
mov
mov
xor
pop
clc
dec
jb
and
in
fwait
sub
xchg
sub
sbb
sub
icebp
inc
mov
mov
mov
jo
dec
fisttpl
adc
enter
adc
cmp
imul
into
mov
pop
mov
outsl
aaa
inc
mov
inc
mov
rolb
xchg
dec
stos
loope
add
jmp
cmpb
push
lret
lods
xchg
in
lods
sbb
loopne
push
adc
and
jle
aad
icebp
pop
pushl
xchg
enter
cmpsl
arpl
xor
add
leave
addr16
rcr
or
pop
sub
push
ljmp
xchg
jb
shr
push
loope
and
xchg
movsl
movsl
aas
mov
xchg
and
in
pop
jmp
lods
jo
adc
sub
call
pop
rorb
fimull
inc
jmp
xchg
push
in
lock
fidivl
sbb
mov
mov
cmp
mov
ss
or
cld
pop
lahf
pusha
cmpsl
shrl
mov
sbb
filds
pop
int3
cli
movsb
das
inc
loop
pop
rol
cwtl
sub
sti
negb
push
xor
out
insb
fucomp
lods
outsl
add
popa
jae
aad
sbb
in
test
fidivl
adc
ficomps
test
lds
rorl
mov
xor
mov
mov
push
fisubl
aad
out
push
mov
pop
inc
fistpl
popl
inc
test
addr16
iret
fldcw
push
and
fst
enter
mov
std
stc
sub
ss
mov
cmp
dec
sbb
popf
jo
mov
test
dec
add
cs
mov
scas
pop
rorb
popa
push
adc
xor
dec
or
jae
sarb
jge
es
stos
push
ficoml
jl
cmp
clc
fwait
shlb
inc
lock
jl
popf
mov
cmp
stc
sbb
fucomip
dec
mov
insl
daa
push
adc
mov
in
xchg
das
std
lock
add
arpl
iret
sti
movsl
ds
jecxz
jle
dec
popf
dec
push
fdiv
hlt
out
lods
cmp
mov
sub
fldt
xchg
jbe
mov
push
aam
cltd
dec
sbb
div
call
cmpsl
inc
stc
jb
pop
scas
push
add
inc
jno
rcrb
sub
xlat
push
popf
xor
pop
stos
xchg
and
xor
xchg
fwait
sub
adc
or
mov
xchg
dec
pop
pop
xor
mov
aas
inc
mov
popa
mov
xlat
mov
inc
add
xlat
rcr
add
jmp
mov
cmpl
sub
mov
leave
sbb
inc
jae
pushf
fs
fmul
xchg
ja
cs
and
scas
sti
sbb
jg
std
cmc
cmp
test
sub
jge
das
mov
add
arpl
push
popf
cld
sbb
inc
stos
pop
in
and
pop
pop
fld
scas
out
mov
push
pop
jle
jmp
pop
in
in
mov
rorl
rolb
repnz
loopne
pushf
outsl
inc
push
gs
insb
popf
cmp
in
imul
jne
inc
and
jp
into
fadd
ds
cmpsl
cmp
mov
mov
cmp
test
lock
dec
enter
jno
andb
sar
sbb
jle
mov
js
dec
adc
xor
ljmp
into
faddl
fldt
adcl
adcb
and
sub
scas
iret
aam
stos
push
pop
cmp
or
adc
pop
mov
push
scas
stc
movsl
enter
pop
mov
adc
mov
mov
test
fisubrl
mov
test
and
pop
sbb
dec
inc
and
xchg
stc
movsb
cmp
scas
cmp
jge
enter
jb
and
pop
sahf
insb
cwtl
jo
test
xor
push
sbbl
test
cmpsl
nop
fisubs
outsb
xor
dec
sub
adc
iret
fstps
insb
pop
xor
xor
int
xchg
and
lods
insl
aad
hlt
and
sbb
push
or
sti
pop
in
nop
jecxz
shll
pop
stos
push
scas
xlat
push
add
shr
sbbl
imulb
out
adc
stos
inc
mov
pop
arpl
add
aas
adc
push
mov
shlb
addr16
xlat
push
or
sub
pop
mov
xchg
shr
aaa
hlt
in
fcmovb
addr16
pusha
mov
ljmp
dec
mov
adc
insl
pushf
sub
sub
jno
cltd
pusha
inc
push
stos
test
adc
scas
pop
inc
add
pop
sub
xorl
shr
add
nop
cmpsb
pop
mov
sub
push
cmpsl
cmp
xorb
orb
daa
cmp
xor
lahf
mov
inc
xchg
sub
jle
mov
push
cmpsl
fdivs
adc
int3
jbe
je
pop
push
out
pop
cmpsl
dec
in
inc
dec
cmc
sti
testb
rcr
mov
jle
push
scas
pop
xor
xchg
pop
sub
sar
in
fidivrl
lahf
movsl
fsubs
adc
adc
into
push
rcr
movsl
dec
push
sbb
aas
jle
add
shll
sbb
fisubl
lea
popa
jbe
fsubl
xchg
aas
jle
push
cmp
dec
dec
jle
aaa
test
mov
push
mov
cmpsl
dec
adc
or
fdivr
in
fisubl
clc
addr16
pop
stos
push
mov
mov
push
mov
roll
mov
sub
lods
sbb
push
fsubs
push
mov
dec
xchg
pop
and
inc
popf
cmp
adc
inc
sahf
inc
shrb
dec
or
push
dec
jno
dec
lcall
push
pop
sbb
ss
aaa
daa
push
scas
imul
mov
in
sub
sub
xor
sahf
jl
icebp
mov
fisubrs
xlat
aas
cmp
jle
mov
xor
jne
sub
xchg
fdiv
iret
mov
xchg
add
out
mov
popa
mov
js
mov
jbe
fst
dec
cltd
inc
cli
dec
push
xlat
inc
xor
jl
mov
mov
aad
xorl
imul
mov
xchg
cmc
mov
std
dec
roll
in
and
jns
or
das
cmp
jl
aam
inc
repz
ds
add
cmp
push
les
inc
clc
loop
rorl
mov
mul
shr
mov
or
and
add
xchg
and
fbld
into
add
pop
out
jbe
mov
test
sub
lcall
push
loopne
push
adc
lret
bound
inc
ret
xor
jo
inc
loopne
add
xor
loopne
push
adc
jae
mov
or
shrb
subl
push
xor
pop
mov
xor
add
out
sbb
adc
push
clc
cmp
inc
mov
pusha
stos
aas
movsl
fidivrs
adcb
and
sub
aam
ds
outsl
movl
sub
push
in
lods
cld
mov
aad
sub
dec
fldenv
cltd
mov
push
sbb
pop
mov
xchg
aad
push
mov
lods
cmp
push
sub
mov
jg
push
imul
xchg
stos
jecxz
repnz
fcomp
rcll
ret
xlat
in
fsubrl
loop
imul
fidivs
sub
pop
add
popf
test
ljmp
call
mov
aad
movsl
pop
xor
imul
fstpl
aas
jle
sub
and
sub
jnp
pop
mov
dec
xchg
jb,pt
mov
dec
or
repz
int3
pop
xchg
cs
aaa
lock
push
stos
sub
fwait
leave
lods
dec
xchg
ds
dec
lahf
dec
or
repz
int
jbe
pop
aaa
clc
mov
stc
inc
inc
mov
aas
out
mov
stc
fcompl
or
pop
shlb
sub
leave
dec
cmpsb
pop
mov
mov
dec
lahf
push
add
repz
and
or
inc
mov
mov
sti
loope
movsl
cmp
push
pop
cmpsl
dec
jmp
negb
mov
das
in
pop
scas
pop
enter
bound
inc
lahf
aas
add
or
pusha
mov
and
jnp
ja
pop
stos
push
fdivrs
cmpl
and
mov
adc
inc
mov
push
mov
push
jle
movsl
dec
cmp
dec
ja
sti
testb
roll
aam
test
sub
sub
push
les
mov
loop
outsb
jp
fildll
pop
pushf
pop
scas
pop
mov
adc
cs
mov
inc
inc
add
insb
sub
adc
pop
outsb
stos
sbb
inc
shr
jge
sub
pop
push
sub
mov
push
jmp
jae
adc
lods
dec
xchg
stos
test
cmp
in
jg
and
mov
cmp
sbb
lret
push
lods
mov
outsl
lods
pusha
sub
ss
jns
sub
iret
inc
pusha
pop
jnp
push
scas
rorl
movsb
in
push
lods
dec
popf
xchg
jl
sar
out
fdivs
adcb
and
data16
pop
mov
dec
xchg
mov
xor
ljmp
test
adc
xchg
pop
stos
pop
jnp
data16
out
and
lods
inc
fists
div
mov
pop
pop
sahf
or
pop
aad
pusha
push
sbb
shrb
sarb
imul
lock
iret
rorl
mov
or
inc
mov
cld
cmpsl
popa
mov
xchg
sbb
and
icebp
lahf
jmp
or
cmpsl
push
push
cmp
xor
jae
shrl
filds
cltd
loopne
fdivl
push
jl
add
sbb
add
outsb
push
ja
or
cmp
scas
nop
stc
mov
lock
loope
mov
xchg
or
inc
jg
or
decl
cmpsb
cltd
xlat
stos
mov
xor
mov
jno
xchg
push
loope
jmp
sbb
jb
jb
and
push
insl
add
mov
sbb
jnp
sbb
cld
sub
and
and
mov
mov
dec
or
imul
push
shll
lea
xor
dec
js
test
push
pop
jge
filds
xchg
dec
test
outsl
xor
sub
or
push
mov
stos
xchg
jmp
push
pop
dec
bswap
push
stos
jns
and
cmp
xchg
lods
fidivrs
mov
sub
nop
jo
adc
daa
inc
xchg
outsb
mov
hlt
jg
or
pop
mov
and
cmpb
mov
mov
fmuls
sub
stc
outsl
pop
daa
nop
and
jnp
fisubl
dec
test
push
xor
imul
cmp
inc
push
jge
fidivl
jge
add
jns
cmp
sti
and
repnz
into
stos
in
jp
pop
ds
test
jp
push
cltd
xchg
clc
es
xlat
daa
iret
or
jnp
pop
sub
push
xor
cmpsl
pop
mov
fnstsw
loop
push
and
scas
dec
lahf
dec
add
repz
jbe
jg
movsb
mov
insl
xor
lahf
mov
inc
xchg
sub
pop
cmp
or
sti
adc
pusha
push
movsl
enter
sub
and
lret
dec
fs
adc
sti
pop
cli
jl
push
sbb
push
arpl
xor
data16
jle
int3
in
fcmovb
adc
stos
inc
mov
push
outsb
mov
mov
loope
dec
xchg
stos
pushf
popa
sub
jo
cltd
test
pusha
shll
push
stos
clc
fsubl
leave
jl
rorb
dec
fiadds
pop
cmpsl
dec
lahf
mov
ljmp
loop
inc
mov
dec
jle
push
scas
xlat
dec
add
cmp
dec
add
repz
push
mov
sub
aas
stc
sbb
loope
mov
inc
xchg
sub
pop
jecxz
xchg
jle
sbb
push
adc
cmpsl
rolb
adc
mov
je
cmp
and
cmp
negb
mov
push
stos
fcompl
enter
movsl
pop
mov
in
dec
jbe
sti
loope
stc
dec
xchg
mov
sub
push
scas
pop
jge
cmc
fisubl
lds
aas
jle
mov
das
mov
mov
inc
scas
push
scas
fwait
shlb
movsl
shll
mov
lahf
aas
imul
inc
popf
or
fdivrl
mov
jmp
test
movb
mov
mov
sub
fldenv
inc
cmpsb
xlat
gs
sub
loopne
jg,pt
add
xchg
xchg
mov
push
stos
inc
enter
pushf
ljmp
cmp
ss
or
adc
dec
push
popa
mov
sub
hlt
or
xchg
adc
and
adc
and
adc
and
adc
add
shlb
adc
add
push
sub
adc
add
xor
add
xchg
and
adc
add
inc
sub
adc
push
aad
add
xchg
cmp
gs
arpl
pop
nop
pop
inc
xchg
jmp
sbb
je
lret
fs
cmp
js
adc
mov
push
daa
mov
push
push
dec
xor
push
push
push
cli
push
test
xlat
mov
mov
pushf
mov
add
fldl
adc
pop
out
leave
insl
jge
and
std
push
rcrb
sbb
sub
and
adc
adc
rcrb
int3
jne
loope
jae
icebp
pop
movsl
orl
push
mov
jae
call
push
adc
xchg
adc
sbb
add
xor
pusha
and
mov
push
adc
and
out
xorl
dec
shr
dec
inc
jecxz
inc
jne
sub
adc
sbb
jo
adc
jle
jge
mov
push
adc
cmp
repz
movsl
dec
pop
push
or
leave
mov
mov
push
dec
popa
shlb
insb
nop
das
fsts
mov
push
adc
push
and
or
jge
rorl
lahf
inc
movsl
rclb
dec
cwtl
cmp
lock
aaa
leave
movsl
inc
push
dec
cmp
and
out
push
dec
xlat
xchg
cs
and
repz
in
cld
arpl
in
movsb
pop
aam
xor
ljmp
xor
mov
test
idivb
push
mov
push
out
loope
les
int
iret
pusha
add
mov
dec
xchg
shr
andl
push
cmp
jne
fwait
test
call
in
jno
inc
shrl
inc
lock
fcmovnu
mov
lcall
fdivs
jmp
ja
testl
dec
rcl
mov
mov
mov
adc
pop
out
xor
add
adc
btr
pop
into
jb
cmp
sti
into
dec
dec
out
pop
mov
pop
pop
pop
mov
adc
mov
adc
in
push
test
shr
dec
js
adc
jbe
xchg
jle
pop
push
shll
data16
mov
lods
fdivrl
adc
push
adc
mov
add
pop
push
scas
leave
in
pop
mov
shll
mov
inc
ds
repnz
lock
inc
jbe
addb
mov
or
mov
mov
inc
lret
push
lods
cwtl
mov
mov
orb
dec
sbb
jns
mov
pop
xlat
dec
push
fistps
ds
lods
cmpsl
loopne
dec
inc
pop
or
and
adc
push
adc
scas
push
lds
dec
xchg
sub
mov
dec
jo
adc
adc
mov
rcrl
mov
cwtl
mov
andb
ja
fdivrl
adc
push
sub
jge
out
stos
push
push
pop
adc
mov
xchg
jmp
notb
mov
mov
push
stos
lods
jmp
pop
repnz
pop
add
cmp
cmpsl
fwait
lods
and
and
rcr
dec
mov
xlat
lock
xchg
sbb
push
adcb
cmpsl
das
push
mov
and
sub
fadds
and
test
jo
sahf
popa
inc
imul
cmpsl
add
mov
sub
in
or
movsl
dec
mov
cmp
or
jns
push
cmp
mov
mov
push
sub
lods
inc
add
pop
jo
dec
jns
adc
push
adc
mov
pop
sub
fsubrp
jns
jb
shrl
lret
add
or
adc
xchg
sti
lods
aad
jg
and
insl
push
mov
pop
fs
cwtl
pop
inc
xchg
neg
jl
les
mov
xor
cmp
sub
enter
daa
lret
cli
icebp
lahf
inc
xchg
mov
leave
pop
sbb
test
push
cwtl
add
inc
mov
fbld
jbe
hlt
adc
cld
inc
hlt
xchg
test
out
test
jle
xchg
scas
sub
or
aad
loope
or
push
adc
cmc
pop
xchg
mov
jle
adc
cmpl
add
movsb
mov
pusha
jns
adc
push
outsb
out
lcall
cli
enter
gs
pop
adc
aam
fs
push
sub
mov
xchg
xchg
in
mov
xor
daa
push
adc
lock
sub
jle
lock
cmp
pop
scas
push
sahf
push
stos
jl
das
jge
repz
jno
int
ss
jo
adc
sub
inc
dec
fcoms
jo
adc
push
adc
fstpl
int
xor
aaa
mov
and
lahf
sbb
sub
cmpsb
mov
rolb
jbe
xchg
push
mov
jae
adc
adc
jp
outsb
das
mov
xchg
mov
sbb
inc
aaa
and
stc
mov
sbb
xchg
lcall
jo
imul
xchg
or
sbb
pop
leave
mov
addr16
or
loopne
pop
adc
jp
call
sbb
mov
test
adc
stos
mov
stos
jecxz
bound
fsubp
cmp
shll
lds
push
imul
cmove
sbb
sub
stos
in
les
push
adc
rcrb
cmp
enter
jae
sbb
sub
pop
out
movsb
jmp
pop
pop
xchg
pusha
popa
mov
in
push
stos
mov
pop
aaa
mov
pop
adc
mov
mov
int3
inc
xchg
imul
fimull
stos
mov
mov
pop
daa
push
push
sub
mov
or
jo
and
mov
ljmp
adc
xchg
lods
pop
cmp
fadds
adc
pop
sub
mov
fadds
adc
xorl
or
dec
icebp
scas
and
xchg
test
mov
pop
loop
push
inc
cmpsb
dec
lahf
nop
jle
and
or
mov
mov
push
movsl
rclb
push
mov
fiadds
movsl
add
adc
push
adc
pop
pop
push
nop
jo
adc
xchg
xchg
and
rolb
mov
icebp
sub
dec
adc
stos
inc
pop
mov
add
push
mov
es
nop
adc
scas
pop
mov
dec
xchg
cmp
jle
aas
lret
fisubl
mov
nop
adc
push
and
out
push
cmpsl
dec
xor
push
adc
fisubl
aam
popf
adc
push
mov
pusha
xor
push
or
leave
mov
arpl
out
xor
jecxz
sti
stos
mov
sahf
test
xchg
pop
pushf
cmp
adc
dec
sbb
mov
sub
int3
sbbl
mov
repz
cmp
mov
das
mov
inc
add
xchg
call
mov
out
inc
push
mov
push
cmp
les
sahf
and
and
inc
xlat
pop
sti
xor
outsl
jb
pop
mov
rorl
rclb
xchg
ret
mov
je
mov
test
jmp
cmp
adc
into
and
sbb
ss
pop
shll
add
test
scas
clc
movsl
sbb
jae
and
vpmuludq
out
call
mov
arpl
jge
call
test
ja
or
inc
jg
fisttpl
or
mov
mov
cltd
push
popf
clc
push
sarl
enter
jle
daa
mov
or
push
xlat
ja
add
pop
insl
jno
dec
adc
cmp
pop
insl
sarl
imul
push
add
xor
aad
fndisi(8087
or
ret
ds
sub
xor
jmp
dec
aad
pop
test
cli
loopne
push
mov
mov
mov
jns
or
jns
dec
mov
adc
leave
mov
jle
fldl
sahf
sbb
cmpb
test
mov
ds
mov
or
push
adc
in
push
outsb
push
movsl
and
ret
in
cld
add
mov
andl
out
mov
pop
test
sbb
lcall
movsb
push
rolb
outsl
leave
fldl2t
movsb
pop
popa
outsb
inc
adc
es
cmp
insl
out
jns
mov
sbb
sbb
add
test
and
jns
jo
adc
test
inc
xchg
in
push
sbb
pop
aas
pop
sub
jp
pop
adc
pop
dec
jb
mov
test
pop
addr16
pop
mov
outsb
lock
test
pushf
xor
and
jo
adc
push
and
call
insl
ljmp
adc
daa
add
push
lock
inc
mov
arpl
xchg
mov
push
lods
shl
mov
and
mov
xor
pop
in
fsubl
das
inc
std
fwait
sub
mov
lods
or
sub
or
ret
mov
sub
adc
adc
cmp
adc
roll
or
pusha
stos
jg
lods
mov
mov
into
repnz
push
or
jae
mov
xchg
push
pop
jne
push
and
push
je
popa
loop
imul
mov
pusha
rolb
ret
push
xor
ljmp
inc
push
pop
int
dec
push
notrack
jle
cmp
lods
push
jnp
push
ljmp
movsl
je
ljmp
jecxz
xchg
mov
les
scas
push
jnp
pop
cmp
push
aad
xchg
fcompl
mov
adc
enter
jne
jae
adc
sub
call
mov
adc
sub
mov
sub
and
adc
mov
xor
push
insb
pop
xchg
push
mov
movsl
dec
loopne
dec
cmpsl
lds
inc
ficompl
fistpl
mov
xor
pop
mov
xchg
ja
daa
cltd
xor
add
or
or
add
mov
xchg
fdivrp
cmpsb
loopne
dec
into
pop
xchg
and
pop
pop
pop
shll
fisttps
push
rol
push
mov
pop
mov
daa
push
adc
mov
aaa
ret
or
inc
push
in
outsb
add
ss
xor
jmp
in
cmc
inc
inc
in
add
daa
into
sbb
ss
test
lcall
scas
mov
push
jmp
fstpt
jbe
xlat
cmp
adc
push
inc
in
int
pop
add
pop
push
sbb
jb
xlat
les
ret
test
xorl
ds
and
push
add
or
pop
shll
or
push
adc
lea
cmp
ja
es
das
orb
mov
sub
sar
vpsubq
inc
sub
push
hlt
pop
jecxz
and
cli
mov
arpl
push
dec
add
cmp
pop
call
add
xchg
ret
dec
cmp
push
stos
inc
cli
ljmp
cmp
adc
or
inc
cmp
aas
ds
movsb
sbb
incb
pop
inc
mov
lcall
fbstp
mov
lods
and
adc
lea
xor
mov
jno
inc
sub
mov
negl
idivl
stos
mov
mov
sbb
sbbb
push
fidivrs
jle
mov
sub
adc
out
push
fs
fbstp
push
pop
pop
sbb
push
cltd
jne
jns
je
pop
enter
add
lods
mov
and
scas
test
jae
mov
mov
clc
aaa
adc
test
mov
lds
aad
dec
out
fst
dec
nop
xor
xor
push
lods
rorl
mov
in
mov
jns
adc
inc
sub
or
or
jnp
push
push
xor
push
movsl
imul
jno
aaa
sbb
mov
pop
and
xchg
ljmp
jl
je
test
andb
fsubp
jmp
nop
jns
adc
loope
xchg
bound
xor
pop
adc
push
inc
out
loope
dec
in
cmc
add
cmove
sbb
mov
test
mov
sub
adc
mov
insl
adc
movsb
fsubs
and
pop
and
xchg
movb
cmc
mov
addl
mov
fbld
out
mov
dec
push
mov
sti
cld
sti
negb
xor
add
push
and
inc
shr
mov
scas
xchg
mov
mov
push
sti
sbb
sub
fbld
repnz
add
sar
lahf
mov
cmp
insl
rolb
inc
xchg
jnp
push
notb
scas
xlat
push
je
and
mov
inc
push
cmpsl
dec
cmp
loopne
fidivl
loop
pop
xlat
into
push
mov
pop
mov
ds
xchg
mov
dec
xchg
dec
rcl
sahf
jge
and
xor
sub
adc
push
adc
mov
jl
sbb
mov
sub
aam
imul
jmp
ja
cli
roll
movb
push
inc
ficompl
jae
adc
pushf
shrl
mov
jmp
xor
inc
enter
into
adc
dec
push
adc
fucomp
pop
xlat
push
mov
or
popa
mov
sub
add
cltd
jecxz
push
sub
mov
sbb
push
adc
bound
lea
mov
outsl
push
cmp
fadds
cld
adc
push
and
xchg
movsl
dec
push
ja
add
rclb
call
adc
and
gs
xchg
les
mov
push
scas
push
adc
push
adc
pop
mov
xor
leave
movups
pop
movsl
adc
lea
test
arpl
stos
mov
dec
xchg
sub
xchg
mov
test
mov
call
push
cmpsl
lret
ret
out
cltd
out
or
push
mov
or
mov
mov
icebp
or
push
and
mov
call
adc
dec
inc
inc
fadds
aas
inc
stos
mov
inc
lret
repz
jmp
test
pusha
aaa
dec
sbbb
lahf
lcall
imul
js
jp
mov
push
adc
or
jae
adc
popl
push
test
add
popl
pop
lds
test
lds
mov
out
cmp
add
arpl
ss
leave
sub
jae
adc
mov
push
mov
mov
sbb
fwait
cmp
es
cld
aas
pop
mov
insb
pop
xor
std
pop
xor
xor
idivb
pop
loope
cwtl
inc
xlat
mov
imul
cmp
repnz
cmp
jge
xor
jnp
add
mov
or
popa
fadds
adc
je
adc
out
mov
stos
cmc
mov
adc
sub
sub
mov
adcb
into
clc
cmc
xor
pop
mov
push
out
or
cmpsb
das
mov
outsb
fisubrl
inc
pop
and
movsb
rcr
cli
pushf
hlt
icebp
rcll
leave
mov
lds
push
test
pop
insl
cmp
add
in
adc
repnz
in
mov
idivl
cmpsb
adcb
jg
push
xchg
xor
xlat
jo
in
in
repnz
outsl
jnp
push
mov
push
xor
test
or
dec
test
insb
cwtl
cwtl
sar
mov
in
fcompl
jne
dec
aad
xchg
loop
jns
arpl
outsb
cld
jno
dec
jb
pop
hlt
test
dec
orb
push
cmp
push
scas
sbb
enter
arpl
stc
call
ja
cli
push
xchg
rcll
adc
scas
daa
mov
cmp
fadds
stc
adc
pop
and
xchg
movsl
dec
push
ja
add
scas
mov
pop
push
pop
mov
mov
push
loope
lret
dec
xchg
movsl
sbb
nop
movsb
add
mov
shll
push
in
mov
loope
jmp
jecxz
icebp
pop
out
lods
pop
sub
scas
push
jp
mov
cmp
les
or
mov
adc
in
push
mov
adc
inc
inc
mov
pop
fsts
jecxz
mov
ret
aam
popf
pushf
shlb
and
jl
shll
and
js
int3
out
aad
scas
push
jnp
lahf
leave
jns
sub
jg
push
xor
push
sub
jb
or
lds
xor
pop
out
pop
call
shrb
mov
andl
pop
mov
push
movsl
and
lahf
frstor
or
dec
mov
fxch
jae
ficomps
daa
les
mov
fidivrl
fwait
jle
push
or
shrl
inc
loope
cmpsb
xchg
pop
sub
push
cmpsl
dec
adc
push
push
lods
cmp
mov
out
testl
sub
outsb
push
mov
lea
repnz
js
mov
and
outsb
adc
popf
lret
arpl
push
adc
mov
popf
popa
cs
stos
mov
je
jne
aam
pop
out
aas
add
add
sti
lock
rcrb
push
add
fcmovnu
pusha
xchg
stos
mov
test
adc
mov
cmp
jbe
add
test
cmc
xor
pop
ret
jae
push
dec
jo
ret
hlt
fs
push
jnp
mov
lods
push
stos
dec
dec
or
pop
push
out
sbb
xor
add
push
push
or
loopne
sub
or
sub
adc
sub
lcall
dec
sub
fcmovnbe
int
ss
sub
fs
pop
insl
or
cmp
ljmp
or
divb
xor
push
push
daa
imul
sub
add
inc
jl
sbbl
aad
sbb
das
ret
jge
jnp
stos
inc
nop
loopne
add
test
xor
inc
adcb
cmp
scas
dec
fs
ret
aam
stc
loop
out
mov
or
push
imul
mov
out
clc
cmp
pop
mov
push
inc
insb
add
sbb
sbb
sahf
lea
dec
cltd
outsb
mov
gs
lea
addr16
lret
dec
xchg
imul
and
cmp
inc
loopne
adcl
cmpsl
push
inc
icebp
xlat
out
inc
arpl
idivb
imulb
stos
or
xor
data16
lea
cmp
lahf
push
sub
addr16
adc
xchg
xor
hlt
ds
mov
jbe
nop
sbb
xchg
push
jecxz
call
cmpsb
cwtl
cmp
int
fistps
sbb
xchg
cld
jb
rorl
mov
lods
push
fldt
jecxz
sub
mov
adc
movsl
scas
imul
jnp
fcmovu
shll
push
mov
fildl
add
lds
imul
repnz
sub
adc
sub
mov
jo
pop
mov
sub
push
mov
mov
addr16
icebp
xchg
xchg
out
aas
fcoml
out
jge
pop
aad
iret
or
inc
pop
les
dec
xlat
daa
fisttpl
add
shrl
xchg
es
shll
cmp
insl
rolb
dec
das
popa
sub
adc
iret
ja
test
hlt
adc
sbb
test
jmp
hlt
mov
dec
adc
sub
mov
add
pop
xchg
in
hlt
push
insb
pop
adc
lret
jg
pushf
mov
fwait
inc
scas
pop
mov
clc
lahf
pop
imul
add
mov
add
adc
mov
adc
adc
xchg
mov
xor
pop
cli
aam
push
sub
stos
add
xchg
out
ficoml
cmc
or
in
mov
loope
mov
xchg
in
test
sub
push
cmpsl
dec
adc
mov
mov
movsl
fwait
in
out
aad
jae
push
adc
in
pop
pop
rol
nop
sub
out
add
in
push
inc
adc
mov
insl
push
adc
push
adc
shlb
shll
movsb
or
add
adc
in
sbb
push
add
cmp
pusha
cltd
or
pop
lret
push
and
push
adc
or
push
jmp
lds
push
out
mov
fwait
push
mov
jne
mov
push
sub
and
adc
aas
jle
popl
rclb
xor
aad
push
popa
xchg
cmpsb
inc
xor
jnp
pop
mov
sub
mov
cltd
jo
rcll
pop
outsl
pop
psrlw
sarb
out
jne
mov
pusha
hlt
adc
test
leave
push
stos
push
cmp
add
adc
ljmp
aam
daa
dec
push
movsl
push
mov
movsl
and
fbld
fucomp
pop
mov
sub
jns
out
xor
dec
repz
push
adc
sub
icebp
pop
jno
or
cmp
divl
push
pop
out
loop
mov
hlt
adc
ret
movsb
and
test
in
out
addr16
sub
sub
adc
pop
pop
aas
dec
sub
mov
popf
test
in
dec
ret
push
pop
cli
cmp
jae
adc
inc
jle
push
dec
stos
jno
add
jae
cmp
pop
stos
enter
jb
add
mov
dec
push
or
and
or
testb
jp
adc
in
cmp
lods
out
ja
xor
push
sbb
pop
stc
mov
aad
dec
xchg
test
push
stos
pop
push
dec
std
jne
jne
pushf
ret
jg
repz
loope
inc
sti
dec
pop
fadd
jecxz
clc
pop
and
out
push
mov
add
jmp
inc
mov
shlb
aad
xchg
jp
or
cmp
jecxz
inc
test
inc
xor
xchg
rorb
dec
imul
mov
jp
adc
or
dec
xchg
and
mov
jns
adc
jne
mov
and
fs
mov
loope
test
pop
mov
jns
adc
push
mov
in
clc
mov
int3
jo
lods
ret
push
loope
lock
popa
fs
xor
jns
adc
jl
inc
rol
shrb
and
inc
push
pop
fildll
xchg
aam
push
adc
nop
and
jo
loop
xor
sub
sbb
cli
adc
inc
mov
mov
jge
sbb
sbb
push
into
scas
sbb
push
adc
lods
push
lds
jge
xchg
pop
fst
or
call
pop
fcmovne
mov
adc
inc
ja
in
sbb
ret
mov
xchg
cmp
in
and
sub
adc
jp
inc
add
push
and
push
jecxz
pop
mov
test
sub
push
dec
aas
mov
dec
lret
inc
in
mov
imul
orb
scas
repz
fs
dec
mov
dec
jp
adc
mov
push
push
and
mov
xchg
arpl
mov
xor
shlb
aas
into
sbb
pop
shlb
push
adc
in
dec
call
pop
jnp
pusha
rcl
movsb
test
jns
adc
test
inc
fbld
or
movsl
loopne
and
jns
adc
mov
sub
and
sub
lahf
push
push
sub
les
adc
dec
mov
out
outsb
adc
inc
arpl
fldenv
push
adc
lea
inc
cmc
adc
jno
shll
lcall
pop
sub
daa
push
cmp
sti
cwtl
fisubl
mov
loop
incl
pop
push
sub
xchg
sbb
add
cltd
pusha
lahf
lods
imul
jl
stos
push
and
jle
popf
imul
pop
movsl
mov
push
or
adc
in
ja
sbb
dec
xor
subb
scas
xor
jb
pop
lret
pop
mov
aas
hlt
ret
loop
das
insl
shll
insl
and
in
or
cmc
test
inc
push
and
push
adc
test
mov
and
ljmp
sar
js
dec
les
push
push
inc
jg
stos
inc
mov
mov
in
inc
repnz
ss
xchg
sub
sub
adc
shlb
and
cltd
mov
lods
vpsrlq
je
xchg
mov
and
lods
daa
clc
pop
dec
ja
jmp
xor
jp
adc
clc
subl
cmpsb
adc
test
mov
pop
int3
fs
xchg
pop
push
into
bound
in
icebp
cld
xchg
push
movsl
push
imul
sub
das
out
fldt
push
jne
xchg
pushf
pop
aam
call
les
cmp
jmp
sub
add
cld
push
sub
xlat
mov
fisubrs
push
jne
data16
lods
in
xor
push
adc
mov
es
stos
test
addr16
imul
mov
test
add
cmp
rorl
scas
sarb
lret
ja
jne
push
add
std
mov
in
adc
xchg
test
mov
sbbl
lock
mov
jmp
add
xchg
adc
mov
popaw
inc
push
lods
imul
ret
sub
sbb
fisttps
push
adc
outsb
inc
test
test
xor
mov
ficompl
mov
outsl
ljmp
stos
les
jl
cltd
sti
gs
sbb
pop
adc
testb
jo
adc
leave
inc
fistpll
push
adc
or
inc
cwtl
jae
adc
cld
imul
out
pop
adc
in
jo
test
or
jbe
adc
rcll
sub
sub
push
adc
push
gs
mov
xchg
cmp
push
adc
cwtl
jae
adc
insl
push
je
mov
mov
test
xor
enter
cmpsl
sub
loop
push
mov
dec
loop
int3
cmpsl
pop
lods
and
fstl
jo
push
adc
int
push
and
mov
push
mov
mov
push
loop
xchg
mov
js
lock
dec
push
jns
dec
jl
shl
enter
mov
xchg
gs
out
sahf
pop
pushf
aas
sbb
mov
mov
ret
lods
inc
mov
jl
adc
jp
sub
scas
mov
js
cmpl
or
adc
sub
pop
pop
iret
push
add
xor
push
cmp
imul
test
cmp
orb
nop
sbb
push
loope
aad
add
add
inc
fdivrs
mov
sub
lds
xchg
fdivs
adc
xor
push
mov
int
mov
mov
xchg
ret
aam
push
adc
js
rcl
or
jo
adc
insl
fxch
xchg
rcr
push
outsb
sbb
push
inc
push
outsl
adc
pop
push
aaa
cmpsb
pop
movsl
push
adc
ret
cmp
push
push
inc
sbb
push
shlb
in
xlat
push
movsl
sub
rcrb
adc
rcrl
out
sbb
ficoms
dec
lock
mov
pop
cmp
cmp
cmpsl
lds
mov
sti
notb
sub
adc
dec
xchg
movsb
dec
xchg
push
push
imul
mov
jns
push
out
lods
fistps
sub
inc
clc
pop
mov
loopne
push
mov
mov
push
in
int3
and
ljmp
push
test
roll
movsl
jecxz
mov
adc
xchg
xlat
push
je
jb
inc
repz
mov
and
movsb
pop
dec
sbb
mov
or
outsl
data16
add
insb
push
mov
cld
push
inc
aad
repz
adc
fs
call
cmpsl
stc
pop
mov
adc
pop
cmc
jbe
lahf
push
and
dec
mov
push
cmp
or
push
aas
push
call
dec
sbb
push
xor
scas
pop
andl
xchg
sub
xor
test
and
out
shrb
xchg
es
mov
pop
mov
fdiv
test
add
sbb
inc
lds
pusha
push
lea
call
push
inc
ja
hlt
xor
mov
rcll
and
fdivs
adc
pop
cmpb
and
aas
inc
mov
adc
rolb
mov
push
adc
out
push
and
jle
shrl
fiaddl
nop
jbe
adc
ficoml
icebp
sbb
imul
and
adc
mov
add
mov
push
adc
inc
rolb
push
pop
mov
mov
and
cmp
add
push
jg
dec
cs
push
fidivs
sub
jno
call
loope
loope
inc
mov
into
push
jl
adc
sub
jl
or
or
sbb
jbe
mov
aam
push
adc
cmp
cmpl
xor
sbb
sarl
sub
dec
mov
add
gs
jo
and
gs
cltd
sbb
mov
lahf
mov
addr16
cmp
adc
inc
orb
push
in
jo
adc
cmp
clc
jmp
fcoml
sub
ret
sub
mov
inc
inc
mov
shll
sbb
js
cld
mov
sub
out
mov
out
xchg
cwtl
adc
pop
lcall
xor
repnz
push
mov
xlat
and
pop
lods
dec
sub
adc
push
fnstcw
mov
fisttps
inc
movsl
inc
jecxz
dec
mov
cmp
jo
adc
push
fsubs
dec
and
orb
dec
aad
cmp
push
adc
cmp
mov
xchg
xor
adc
fwait
call
xchg
fsubrs
js
xchg
in
loopne
push
and
fdivrl
rolb
mov
imul
sbb
inc
ja
mov
out
arpl
in
push
adc
mov
and
jmp
mov
pusha
sbb
dec
xorb
shll
dec
sbb
movsl
sub
and
movsb
scas
pop
gs
jmp
sarl
or
nop
or
clc
sti
in
fisubl
adc
or
and
test
push
mov
cltd
sub
pop
stc
sbb
pop
push
sbb
sub
pop
sub
aam
shrb
js
mov
or
clc
sti
in
ficompl
push
mov
push
mov
push
cltd
xchg
lahf
test
pop
xchg
sub
jle
daa
mulb
mov
adc
in
int3
xchg
sub
inc
mov
mov
sbbl
stos
loopne
push
adc
push
mov
lea
pop
lahf
aas
cmc
ret
sti
mov
mov
sub
add
js
mov
ret
xor
push
test
or
push
stos
push
inc
fdivl
adc
push
or
sbb
into
mov
ja
mov
mov
pop
popf
frstor
loop
mov
pop
sti
imul
fwait
lds
dec
push
test
daa
mov
jecxz
stos
dec
pop
mov
std
fdivl
adc
fnstsw
loope
mov
shr
lods
subb
aam
fnstcw
xor
je
push
aam
inc
imull
fdivr
fsubrs
dec
mov
cmp
iret
inc
movsl
dec
xor
out
fcomps
push
adc
lods
lock
dec
xchg
popa
mov
das
ljmp
push
adc
push
stos
mov
jo
adc
jecxz
data16
loope
std
out
stc
xchg
dec
add
mov
cmpsb
or
push
mov
adc
sub
pop
cwtl
pop
sti
fsubrs
nop
mov
inc
mov
loop
or
dec
mov
cli
jg
push
sub
imul
sbb
cmp
test
bound
mov
adc
adc
addr16
loop
nop
pop
or
push
xchg
pop
hlt
adc
sub
or
sbb
mov
mov
or
xor
stos
add
int3
aas
pop
arpl
cmp
mov
xor
jmp
rep
jo
lods
mov
call
mov
sahf
mov
lea
outsl
fists
jo
xor
pop
out
pop
repz
push
js
cmp
mov
jmp
mov
xchg
mov
cld
inc
mov
cmp
cs
xchg
lcall
mov
lret
shlb
add
lock
push
mov
out
fcmovnb
dec
pop
lods
push
ss
lcall
scas
repnz
in
ret
in
push
xor
pop
jl
mov
jb
add
xor
xchg
test
mov
pop
jmp
fdivs
jp
cld
icebp
arpl
jno
push
sub
sarl
sbb
and
cmc
stc
mov
into
ja
jl
rcll
dec
call
mov
sbb
loope
mov
andb
imul
mov
dec
cmp
test
inc
push
and
iret
sbb
pop
adc
fdivr
jo
adc
dec
dec
adc
jecxz
test
js
pop
in
adc
push
add
jo
adc
or
jns
scas
popf
call
adc
aas
dec
orb
xchg
popf
fidivl
mov
xchg
or
subb
and
push
adc
daa
adc
add
jle
loop
in
or
add
inc
ficompl
jo
adc
lock
adc
push
aad
loop
stos
push
mov
rol
cmpl
inc
scas
push
movsl
iret
jo
adc
bound
aad
out
xchg
dec
out
js
pop
adc
pop
clc
jo
adc
dec
lock
fbld
pop
adc
jle
jo
adc
add
inc
lock
jae
xor
push
adc
adc
pop
inc
fdivrl
mov
lods
out
popa
rolb
mov
cmp
jo
adc
fldln2
lods
repnz
or
lods
fsubs
addl
pop
fdivl
adc
lock
adc
xor
insb
scas
push
in
jae
loop
mov
pop
sub
ja
push
jmp
jle
or
and
pop
and
push
adc
sub
mov
dec
mov
fsubrs
cmpsl
cmp
jne
fimull
sub
mov
add
and
xchg
std
sbb
and
push
jl
adc
adcb
xlat
sub
jl
adc
ljmp
mov
push
outsl
shl
push
psrlw
iret
jbe
adc
mov
ds
sub
rorl
ss
push
and
mov
fiadds
inc
mov
fs
push
imul
push
adc
call
inc
rolb
dec
adc
movb
add
push
es
jl
adc
stos
das
and
scas
xchg
in
jno
jl
adc
mov
xchg
iret
pushf
popa
inc
mov
sub
and
inc
pop
pop
mov
mov
push
repnz
jno
cltd
and
leave
push
loopne
in
cmpsb
cs
int3
dec
sbb
and
imul
push
xor
push
dec
dec
pushf
mov
xchg
xchg
cwtl
shrb
mov
pusha
in
cmp
adc
pop
mov
add
int
testb
lea
scas
leave
cld
jno
repnz
inc
clc
push
cmc
icebp
or
cld
jge
inc
ret
inc
push
lods
test
mov
incb
push
fdivl
clc
call
icebp
pop
ds
call
insl
idiv
sahf
and
mov
rorb
jp
sti
push
cmp
rcrb
std
in
adc
nop
out
clc
mov
inc
rolb
js
mov
repnz
mov
cld
pop
icebp
add
out
push
or
out
dec
rcll
sbbb
mov
mov
mov
xorl
sbb
pushf
fistpll
lret
fbstp
xorl
mov
fstpl
lret
push
out
xchg
pop
cmp
subb
out
cmp
xchg
daa
push
or
mov
xchg
mov
push
jae
jp
push
jge
and
sub
jmp
imull
sti
je
sbb
ret
pop
pop
in
add
cmp
or
inc
sbb
and
jno
jnp
jb
loope
ja
in
pop
or
scas
sbb
outsl
int
into
lcall
adc
outsl
mov
mov
in
mov
jmp
fsub
xchg
add
push
enter
enter
fst
add
loope
dec
xchg
jmp
stos
cld
fstps
cmpsl
call
testl
icebp
loope
cs
jns
jl
push
pop
in
in
out
mov
test
or
out
pop
scas
push
and
jnp
lds
sahf
rol
push
jl
lods
sbb
cld
lcall
inc
aad
sub
hlt
outsl
cmp
sti
rorb
jno
fwait
fs
jl
aam
cld
mov
xchg
cmpsb
inc
add
pop
pop
imul
and
add
adc
push
movsl
sbb
pop
fmull
adc
bound
dec
ds
mov
sti
lds
adc
cmpb
jno
jns
xchg
int
lods
inc
pusha
adc
lcall
add
scas
push
lahf
adc
cmp
aad
and
fwait
push
cmpsb
stos
fildll
insb
inc
mov
jl
jp
sbb
dec
out
popa
xchg
mov
xchg
pop
or
xchg
aam
mov
es
fidivl
clc
pop
mov
add
mov
push
sti
fcmovnu
jo
or
mov
add
mov
popa
and
std
sbb
push
cmp
mov
test
sub
and
test
cli
xchg
jecxz
pop
xchg
cmc
into
divl
and
cli
rol
inc
shr
or
mov
adc
js
dec
mov
mov
pop
in
pop
sar
mov
lods
les
out
xchg
movsl
sbb
stos
fdivl
adc
pop
push
ss
xor
sub
sahf
icebp
cmpsb
mov
or
and
mov
aaa
dec
pop
sti
push
repnz
das
xlat
dec
ljmp
cmc
push
sbb
jbe
xlat
sti
rcrl
xchg
or
test
sub
cmc
mov
jne
push
stos
rcrb
pop
pop
and
adc
pop
and
adc
cmpsb
cmp
mov
clc
fisttps
fcomps
sahf
pop
mov
orl
xlat
mov
cmp
push
in
mov
addl
call
pop
pushf
push
sti
fcoms
cmp
dec
and
sti
inc
jg
mov
dec
scas
in
pop
jo
out
dec
lock
xchg
lock
fdivrp
scas
je
inc
dec
in
aas
sub
mov
dec
in
sbb
daa
adc
call
lods
aam
sub
in
jne
in
ljmp
push
aad
jg
pop
in
cmpb
adc
repnz
adc
ljmp
xor
fidivl
mov
xchg
loope
mov
push
xchg
sub
hlt
mov
xor
out
repnz
mov
and
out
xor
gs
adc
or
fists
mov
cmp
jae
cmp
jns
sub
mov
fiadds
clc
jbe
adc
repnz
cmp
aam
and
push
jne
cld
dec
and
leave
jno
dec
mov
testw
cmpsl
and
or
xor
mov
pop
or
aad
rcl
mov
mov
or
xchg
cld
out
push
js
iret
enter
pop
sub
jns
jmp
mov
adc
mov
push
cs
sub
jle
jb
shl
movsl
mov
pop
test
sbb
das
xor
stc
imul
mov
jo
push
adc
int
cmp
insl
imul
mov
mov
repz
or
dec
movsb
pop
icebp
fwait
push
mov
insb
shrl
pop
add
leave
xchg
push
insl
loopne
mov
push
sbb
pop
xorb
in
sbb
inc
cmpsl
test
icebp
frstor
jg
sub
mov
shlb
mov
xchg
push
lods
push
fwait
mov
sub
inc
push
and
adc
loope
mov
adc
stos
fisttpll
enter
jge
xchg
push
scas
pop
into
jae
jmp
jge
js
lahf
fistps
lret
push
and
ret
cmpsl
lods
fucomip
pop
sub
adc
adc
or
xchg
sbb
pushf
shll
movsb
push
aaa
out
jmp
fucom
nop
mov
jne
and
rcr
data16
call
dec
mov
cmc
adc
ds
cmp
fmull
sub
inc
add
test
mov
or
and
jne
lds
es
mov
mov
loop
scas
mov
push
sub
mov
rolb
sub
scas
fstpt
lahf
ficompl
push
and
xorb
and
cltd
adc
int3
daa
sbb
adcb
sbb
into
shll
pop
cmpsl
out
scas
sbbb
push
xchg
outsl
pop
lods
or
les
add
or
push
adc
mov
cld
fistps
in
inc
add
popf
mov
jl
adc
jae
add
xchg
push
or
push
push
fcompl
lea
xchg
pop
mov
aam
cwtl
cmp
out
fidivl
mov
and
push
mov
fwait
ja
das
nop
dec
mov
not
jae
movsw
pop
inc
and
fstl
test
aad
xchg
pop
outsb
lods
pop
mov
mov
fildl
data16
jne
test
iret
inc
scas
ds
push
rcll
xor
pop
fwait
jp
ret
cmpsl
sbb
and
and
in
fcoml
dec
icebp
or
inc
enter
pop
xor
lahf
je
xor
xor
pop
and
rclb
mov
push
mov
mov
adc
adc
nop
push
xor
or
sbb
mov
loopne
addr16
sbb
and
sar
fsubrl
stos
lods
out
push
or
adc
mov
pop
mov
aad
push
and
test
aaa
or
mov
aam
push
sbb
test
cltd
das
aas
inc
lock
push
clc
lret
pop
push
loop
imul
cvtps2pd
les
push
mov
jl
roll
testl
jp
decb
test
or
js
sti
xor
mov
fadds
adc
xchg
ja
pop
repnz
adc
es
xchg
out
sahf
ljmp
xchg
imul
in
push
inc
pop
adc
js
cmp
outsl
cmp
push
xor
add
mov
mov
jp
popa
and
inc
jae
sub
or
sbb
inc
fiaddl
leave
mov
mov
adc
adc
xchg
mov
push
icebp
xchg
jle
scas
out
ja
cmp
mov
pop
outsb
push
jne
arpl
sarb
ss
icebp
imul
inc
add
xor
ljmp
pop
lcall
add
ljmp
push
jmp
or
scas
sbb
rcrl
lds
add
nop
stos
daa
repnz
sarl
mov
out
mov
jb
push
icebp
inc
cli
xor
add
aas
stos
stos
cwtl
pop
add
out
inc
sub
or
sub
cmp
aas
and
push
call
add
mov
aad
imul
andb
xchg
dec
xchg
jmp
lods
sub
cmp
loop
or
xor
sub
inc
inc
sub
pop
and
daa
sbb
or
ret
sahf
out
incb
test
push
scas
xlat
push
je
and
mov
adc
lret
cmpsl
shrl
inc
mov
scas
xlat
dec
arpl
adc
push
sti
jl
fidivrl
adc
stos
mov
mov
scas
sahf
mov
pop
ss
hlt
or
sbb
xchg
clc
inc
mov
or
dec
ss
das
mov
mov
sbb
push
adc
testb
and
mov
lahf
pop
stos
cmp
shrb
cmp
jl
adc
mov
push
adc
adc
mov
xchg
pop
stos
das
push
cmpsl
cmp
sti
loope
nop
dec
xchg
movsl
and
fbld
outsl
mov
mov
mov
adc
call
aad
push
test
pusha
dec
mov
fwait
push
xchg
outsl
push
insl
push
loope
sub
add
dec
jl
xchg
or
add
fstl
pop
fcompl
sar
or
jno
add
ss
add
mov
xchg
notb
imul
loopne
and
push
add
dec
out
xchg
js
into
push
loop
fidivs
and
and
cld
mov
xlat
les
push
outsl
ja
iret
sahf
mov
insb
or
mov
cwtl
mov
andl
cmp
in
push
inc
imul
stos
fsubrp
pop
and
mov
xchg
mov
push
mov
adcb
shlb
inc
add
sub
inc
inc
test
mov
fdiv
lahf
movsl
gs
sub
adc
call
cmpsl
xchg
stos
shll
and
jge
jbe
lock
mov
xchg
adc
adc
stos
les
mov
mov
movsl
push
mov
push
adc
ss
hlt
mov
dec
jne
or
pop
cmpb
insb
ss
push
push
mov
daa
xor
jns
outsl
sub
jmp
mov
pusha
ljmp
push
adc
jno
pop
cli
add
repnz
adc
push
xchg
sbb
sarl
incl
ja
mov
push
or
push
nop
mov
out
cmpsl
ja
mov
sbb
push
jb
ja
arpl
xlat
hlt
fdivp
test
inc
jecxz
out
enter
ret
add
push
int
dec
jno
or
push
cmpsb
xchg
ds
and
orl
int3
aas
jbe
sbb
and
sbb
loopne
jl
adc
jecxz
adc
clc
push
fsubrs
jne
ss
pushf
adc
cmp
aam
push
adc
addl
xor
gs
cmc
jle
add
sahf
inc
cwtl
and
jns
dec
mov
call
outsl
inc
into
mov
fidivl
mov
popa
push
iret
jecxz
mov
insb
nop
add
lock
int3
xchg
lods
jbe
xchg
jb
cltd
fsubr
shr
cmp
xchg
test
push
add
and
dec
fists
arpl
leave
or
jno
cmpsl
popa
in
mov
in
push
xor
pop
sbb
ja
clc
sub
movsl
push
mov
adc
add
xchg
lds
aad
sub
cmp
imulb
lods
or
xlat
loop
ljmp
cltd
rolb
inc
and
mov
outsl
adc
pushf
testb
lcall
jp
mov
adc
mov
pop
in
lcall
cmc
pop
repnz
adc
popf
cs
sub
ficomps
sub
leave
fmuls
loope
jmp
or
out
in
xchg
pop
pop
xchg
pop
pop
xor
movsb
aam
cmp
popf
insb
dec
imul
fwait
mov
addb
push
sub
test
push
mov
test
daa
or
lea
sbb
rcrb
pusha
and
xchg
sub
adc
pop
or
jae
insb
call
dec
jecxz
test
cmp
mov
push
adc
fldenv
add
andb
lds
or
aam
push
and
cmp
scas
rol
insb
inc
ja
sbb
movsl
add
pop
xor
pop
sub
and
pushf
pushf
imul
mov
jle
repnz
adc
scas
frstor
and
or
movsb
adc
or
lahf
or
sbbb
fadds
adc
xor
mov
popf
push
cli
aad
bound
es
sbb
fs
cltd
and
repnz
adc
fs
sub
pusha
les
add
push
test
cmp
ror
lret
pop
ds
xchg
sub
addb
push
pop
pop
xor
aam
mov
fistpl
push
ja
imul
andl
sahf
xor
pushf
sahf
jg
fsubs
jle
pop
daa
dec
xor
bnd
scas
or
jb
pop
cs
dec
popf
jl
mov
ljmp
sub
rcl
aad
jmp
test
or
fldpi
dec
add
lods
and
adc
push
cmp
fadds
adc
pop
lret
jno
cwtl
ja
pop
inc
pop
stc
add
outsl
push
loopne
hlt
and
xchg
out
cld
add
jne
pushf
jbe
test
test
xchg
cs
add
out
sub
je
or
fadd
sbb
push
mov
jo
mov
sub
jbe
push
shrb
push
mov
outsb
ja
xor
push
imul
mov
mov
cmpsl
jmp
fs
ficomps
or
xchg
icebp
xchg
inc
mov
xchg
adc
lret
sub
push
xor
std
lret
lcall
sub
sub
xor
or
test
jmp
loope
pusha
sub
push
mov
ja
clc
jne
mov
lock
push
pop
push
cmp
stc
rol
pop
xor
rsm
cmp
pop
test
adc
cmp
subb
outsb
mov
push
xchg
bnd
mov
stos
adc
dec
jno
mov
hlt
jb
sahf
lret
xchg
mov
pop
inc
fs
inc
fimuls
mov
ficompl
mov
out
stos
mov
movsl
cmpsl
fwait
dec
inc
mov
adc
cmc
mov
icebp
inc
cmp
scas
jl
movsw
inc
iret
and
lahf
lods
xor
jae
sbb
addb
aaa
stos
pop
jnp
inc
xchg
mov
dec
pop
mov
mov
dec
fisubl
inc
pop
stos
bnd
mov
call
fistpl
push
movsl
dec
aaa
lret
cmp
xor
jns
cmpsl
and
mov
in
fisubl
mov
loope
inc
mov
fildl
mov
sub
adc
ret
jecxz
or
mov
or
into
jno
mov
movsb
jo
into
xchg
aam
push
adc
add
xor
cs
inc
adc
stos
push
sub
repnz
mov
dec
mov
loope
and
jbe
inc
mov
ljmp
add
or
jecxz
out
es
iret
jnp
xchg
xchg
push
pop
mov
shl
fs
std
xor
cltd
push
xor
out
pop
insl
or
xor
sub
lods
xor
mov
and
add
rcrb
into
pop
pop
xor
popf
scas
outsl
bound
gs
mov
cmpsb
add
mov
out
push
sub
adc
sub
sub
pop
repz
dec
mov
fadds
adc
pusha
and
adc
and
xchg
cmp
sub
mov
dec
jns
sti
jl
mov
inc
sahf
stos
pop
out
movsb
clc
mov
scas
mov
xor
jge
adc
adcl
dec
add
aaa
adc
arpl
loopne
pop
adc
add
fidivl
out
aad
sbb
or
mov
mov
pop
loope
cmp
add
and
in
sbb
in
adc
sti
movsl
dec
add
pop
cmp
shl
in
dec
dec
std
das
shl
imul
cmp
mov
mov
fcomps
sub
adc
icebp
xchg
dec
xchg
lods
mov
scas
fistps
xlat
mov
push
sub
rclb
push
adc
js
in
fimull
add
push
test
mov
xlat
leave
xchg
sub
imulb
xlat
push
in
fdivrl
test
and
push
mov
pop
jecxz
daa
inc
mov
inc
and
adc
rol
pop
jo
lea
xchg
notl
pop
jg
out
and
dec
dec
push
out
pushl
sbb
and
mov
mov
repz
scas
xlat
xlat
jp
pop
cmp
fsubl
jb
repz
out
mov
xchg
das
sub
mov
jle
lds
mov
jp
incl
test
jns
popa
test
cld
movsl
iret
test
fs
xchg
cmp
jno
in
repz
aad
push
lcall
mov
lret
inc
jmp
shr
lcall
xorl
sbb
sub
mov
jl
xor
outsb
mov
or
das
pop
adc
mov
dec
adc
inc
lds
packuswb
push
xorl
test
dec
repz
or
xor
fs
mov
jg
mov
fs
add
xchg
mov
call
inc
or
sbb
int
sub
adc
mov
xchg
loope
inc
ljmp
jg
cmp
adc
cltd
fcompl
lods
cmc
out
ljmp
and
mov
subl
jge
out
lret
adc
cmp
insb
lock
addl
outsl
cmp
sub
mov
out
decb
jns
and
loop
pop
mov
pop
and
jno
jb
jnp
insl
dec
ficoml
push
out
sarl
pushf
cmp
pop
add
add
insb
lahf
mov
sbb
jecxz
mov
aaa
push
sub
adc
arpl
jl
mov
jecxz
dec
jb
push
dec
ss
jle
test
push
mov
mov
imul
sbb
pop
into
mov
lcall
add
dec
test
and
mov
cld
adc
pop
inc
subl
loope
and
inc
decb
int
shld
lret
loopne
jne
inc
jle
and
pusha
xlat
pop
lret
cmp
mov
xchg
lea
gs
adc
imul
out
dec
andl
daa
mov
xor
add
xchg
adc
pushf
cmc
imul
xchg
cs
push
leave
xor
fsubrp
fucomi
pop
cmp
or
scas
add
and
dec
adc
dec
fcompl
sub
cmp
add
push
inc
mov
push
fs
cmp
shlb
pop
cmp
mov
inc
xchg
jo
add
push
adc
inc
mov
sub
in
add
cli
fdivs
mov
ficoml
jp
shlb
pop
cmp
inc
out
das
push
and
jne
sbb
push
test
mov
push
adc
lret
das
mov
xor
in
push
inc
movsb
cmc
aam
cltd
add
xlat
dec
add
cmpsb
pop
ds
daa
sbb
js
inc
pop
jp
sub
xor
lods
mov
pop
pop
mov
mov
stos
dec
pop
lds
out
add
adc
mov
push
and
sub
mov
cs
sahf
cmc
pushf
shl
adc
movsl
sbb
loop
and
mov
shrb
pop
loopne
inc
sahf
pop
lahf
aas
add
sti
jl
cmpsb
push
jnp
faddp
cltd
ljmp
inc
add
jb
push
push
sub
cmp
jge
loop
jnp
pop
mov
adc
push
fs
jmp
sub
or
imul
or
dec
push
lea
ret
mov
inc
incb
dec
xchg
push
push
cmpsl
lds
int3
out
add
aad
mov
loop
jecxz
stos
cltd
sub
jl
fnstcw
xchg
pop
sahf
cmp
add
out
jecxz
xlat
mov
xor
leave
inc
jne
rcrb
popl
dec
loope
jg
mov
iret
xor
shll
and
mov
pop
in
mov
push
adc
or
mov
mov
cmpsl
cld
pop
and
pop
cmp
jecxz
add
subl
imul
and
imul
mov
jge
push
jp
pop
or
fisubrl
push
inc
mov
add
dec
sub
ja
pand
push
jecxz
inc
mov
mov
xchg
decl
cmp
jo
mov
mov
mov
xchg
int
jl
cli
add
nop
nop
lods
jg
sahf
shl
pop
mov
xor
faddl
or
das
stos
in
or
pop
fnstenv
pop
inc
add
mov
and
push
pop
int3
bound
repz
jo
scas
xor
frstor
out
jbe
cmp
test
and
aad
popf
loop
out
pusha
out
mov
xorl
leave
es
jne
push
addb
adc
int
in
mov
rorb
add
ret
leave
jo
mov
into
imul
jns
dec
mov
cmc
int
insl
add
pop
fistpll
cltd
scas
or
jns
out
sarl
xor
es
adc
push
insb
sbb
or
je
js
outsb
pop
insb
and
push
mov
movb
fistps
movl
movsb
rorl
jl
push
cltd
ds
cmp
mov
rcr
imul
inc
scas
sub
adc
xor
sbbl
and
rcrl
xor
sbb
and
mov
adc
inc
inc
fimuls
lret
or
mov
adc
lcall
popf
mov
jg
xchg
jecxz
outsb
add
mov
xchg
push
mov
mov
js
call
and
ret
adc
mov
xor
adcl
jle
xchg
sbb
aas
mov
sub
andb
stc
scas
xlat
mov
sarb
push
dec
adc
imul
cmpsb
popl
popa
and
stos
push
out
inc
mov
rorb
jno
adc
int3
inc
rolb
and
dec
xchg
cs
nop
adc
pop
cltd
xchg
adc
movsl
pop
jae
and
add
jmp
mov
aam
jmp
push
repz
push
sub
jo
adc
pop
ficomps
adc
out
je
repnz
push
stos
and
shlb
pop
ja
fmuls
scas
test
mov
fs
fdivl
lods
fcmovb
shlb
push
mov
dec
lock
pop
cli
cltd
mov
shrl
ficoms
mov
je
jae
adc
pop
out
xor
add
dec
or
dec
xchg
cs
mov
mov
mov
dec
dec
pop
repnz
jle
ret
sub
movsl
mov
mov
cld
pop
and
rcr
jne
enter
jo
test
shrl
mov
stc
add
lahf
dec
sbb
jmp
push
push
jae
je
les
jae
cltd
jmp
stc
mov
mov
and
adc
andl
jle
or
or
enter
scas
mov
je
and
sti
jg
fs
mov
cmp
add
sub
loopne
sbb
adc
psubw
dec
push
sub
adc
sub
cwtl
jne
aaa
lock
out
mov
jp
push
out
roll
jle
pop
mov
mov
addb
inc
pop
pop
xor
mov
cltd
bound
cmp
cmp
test
push
xchg
loopne
add
sbb
scas
add
out
pop
loopne
std
out
xchg
fcoms
jg
push
in
push
das
push
jl
imul
cmpsb
andl
fldcw
pop
cmpb
test
or
leave
bnd
mov
mov
adc
movsb
bound
xor
outsb
mov
jb
out
cmp
mov
push
push
icebp
and
push
fwait
popf
inc
jae
dec
xchg
pop
adc
jl
push
add
sti
or
test
push
sbb
cmp
in
lods
loop
ljmp
nop
sahf
push
add
pop
mov
xchg
aaa
sub
jbe
rcrl
cmpsb
mov
inc
xor
mov
call
push
xchg
xchg
jne
dec
sbb
jmp
jo
in
xor
xchg
ljmp
pop
mov
jns
dec
dec
jo
fsubr
xchg
sarl
test
test
or
jno
push
cmp
add
or
mov
dec
imul
nop
xor
lods
adc
xchg
adc
in
mov
push
inc
lods
xorl
in
push
adc
add
sti
mov
push
bound
fstpl
sbb
mov
xchg
rclb
sar
shlb
sbb
mov
jne
jno
stc
mov
movsl
inc
inc
rcll
mov
fsubrp
aad
mov
inc
sbb
pop
out
xor
fadds
adc
lock
adc
pop
lods
test
mov
fcmovne
sub
or
dec
inc
das
fmull
dec
test
ljmp
pop
lcall
mov
mov
arpl
lcall
je
pop
adc
jp
inc
lods
popf
fdivl
imul
in
pop
adc
mov
rorl
loopne
lret
inc
mov
rol
mov
cltd
loop
leave
dec
aam
jne
aad
popf
imul
fucompp
pop
cmpsb
dec
push
ret
mov
jno
cli
xchg
popa
and
filds
xor
pop
dec
dec
push
ficoml
mov
sti
mov
xor
mov
stos
adc
sub
adc
cld
divb
mov
popa
cmc
adc
iret
jns
ret
push
mov
lahf
and
imul
fwait
out
xor
add
adc
btr
pop
into
jb
cmp
sti
into
dec
dec
out
pop
mov
xlat
sub
push
adc
call
fidivrl
mov
dec
popf
andl
xor
and
push
cmpsl
out
mov
in
fidivrl
xchg
mov
stos
lods
mov
shlb
lcall
adc
addr16
ficoms
mov
fadd
mov
int
xlat
clc
mov
fnstenv
div
in
sbb
inc
jp
push
stos
push
test
out
fistpl
aad
mov
test
jle
ret
and
aad
mov
dec
fists
xchg
mov
ds
daa
adc
addl
fiadds
aad
xchg
adc
add
int
ret
popa
out
js
cmp
loope
les
sub
push
mov
mov
arpl
pop
mov
dec
rorb
or
and
adc
adc
cli
push
cmpl
loop
mov
add
orl
inc
mull
mov
jg
rcl
stc
sahf
mov
mov
push
or
jl
push
sub
das
sub
adc
or
ud2
loope
pop
pop
aam
xchg
negb
mov
test
push
cwtl
pop
and
xchg
or
shr
daa
outsb
shll
add
test
sub
jne
mov
xorb
pushl
repnz
movsl
in
xchg
sub
pop
xchg
inc
xor
lret
aas
mov
push
iret
js
push
fdivl
and
ret
mov
pop
divb
push
sbb
test
mov
test
cli
push
out
mov
adc
lds
bound
xorl
lahf
test
pop
inc
jne
adc
inc
sbb
pushf
jb
mov
punpckldq
inc
mov
movsb
stc
adc
or
inc
add
filds
sahf
outsl
and
and
and
ret
cmp
shl
dec
sub
adc
inc
add
hlt
ficoml
or
sbb
out
push
aas
xchg
xchg
stc
jnp
dec
jb
repz
repnz
in
jge
and
add
test
lock
gs
inc
jb
add
mov
jno
mov
mov
jno
xchg
filds
or
insb
pop
out
cmc
jbe
xor
dec
fs
and
rclb
clc
sbb
int
xchg
ror
mov
pusha
add
jb
push
and
or
pop
insl
cmp
push
out
inc
push
mov
cmp
adc
adc
add
dec
cltd
pop
mov
ss
xchg
jnp
xchg
and
or
popa
cwtl
inc
cwtl
push
loopne
insl
lods
movsl
pop
shr
cmpsb
ljmp
es
mov
ljmp
fidivs
stos
ret
inc
cmp
test
xor
int
test
xor
sbb
push
enter
aad
out
das
movb
adc
jns
push
sub
popf
adc
shll
mov
orb
mov
sub
xchg
pop
jle
es
push
ficomps
adc
push
imul
add
enter
ds
ret
mov
jno
sbb
pop
call
stos
fldl
xor
cmp
daa
sbb
add
inc
test
cmpl
popf
jp
push
stos
fwait
mov
int3
ljmp
aad
je
jno
pop
jmp
ficompl
sbb
jge
push
fisubrl
xorl
test
cmc
pushf
roll
aas
pushf
sbb
jne
adc
test
mov
sub
scas
xor
dec
int3
push
loope
in
mov
jge
neg
adc
adc
orl
shl
jae
outsl
es
add
push
int
lds
andl
jno
push
mov
cs
push
and
test
inc
sbb
mov
mov
mov
shl
cmpsl
pop
jmp
or
cmp
cmpsb
ss
ljmp
jo
out
add
shl
scas
pop
jmp
or
xor
push
push
push
imul
cmp
adc
clc
fsubr
andl
xchg
jl
std
jl
push
loope
shl
mov
in
adc
xlat
clc
cmpsl
ds
pop
mov
mov
lock
jl
scas
push
pop
cmpsl
pop
xor
cmp
jbe
int
lds
xchg
sub
sahf
out
cmp
mulb
pop
and
testl
xchg
push
jnp
inc
loopne
test
jg
and
sti
sbb
mov
dec
adc
aas
xchg
ret
add
or
ja
push
imul
fldl
pop
xor
xchg
aam
or
into
ret
or
cwtl
push
sub
adc
dec
aam
rolb
icebp
sub
sbb
push
sbb
fadds
adc
in
fadds
adc
movsl
das
dec
idivb
push
int3
adc
mov
push
lock
pop
lcall
scas
sub
inc
mov
pop
dec
push
enter
adc
push
or
xchg
cmp
sub
and
mov
in
int
cli
outsl
leave
lock
cs
xchg
push
nop
and
jg
add
jns
xor
or
or
dec
movsb
movsb
mov
dec
scas
sub
adc
popa
mov
into
mov
mov
je
jmp
mov
fstpt
xchg
dec
push
repz
xor
daa
jbe
clc
xor
mov
mov
repz
clc
clc
js
mov
and
adc
mov
ja
stos
gs
or
je
cltd
loopne
lds
jl
adc
ds
jle
cmp
push
adc
stos
pop
xchg
cltd
stos
fstpl
lock
ss
cli
ficoml
dec
cmp
lds
lret
push
mov
pop
div
and
jmp
int3
fcomps
std
mov
pop
inc
in
add
mov
adc
cmp
push
adc
add
jno
js
sub
push
adc
mov
cwtl
push
mov
into
push
clc
push
stc
loop
jb
mov
mov
or
movsl
push
dec
or
lahf
es
inc
push
push
leave
cmc
mov
lcall
dec
mov
dec
jae
fwait
in
fidivrs
or
aad
test
je
ss
mov
push
test
clc
mov
pop
or
cmp
movsl
movsb
push
aad
cli
lcall
cmc
push
out
fsubs
add
and
pop
jge
adc
jne
push
outsb
pop
and
mov
repz
and
push
jge
adc
jne
push
outsb
pop
and
mov
roll
pop
lods
shl
insb
sub
xchg
add
cltd
dec
sbb
mov
in
pop
divb
sub
test
cmp
imul
push
mov
jns
xchg
fsubr
aad
add
fcmovu
popa
xchg
cli
sbb
daa
test
sub
add
xchg
rcll
into
movsl
xchg
int3
jl
ret
jmp
dec
jae
loopne
cmp
cmpsl
shrl
or
xchg
out
inc
scas
frstor
lods
push
test
movsl
loopne
movsb
fcmovnbe
pushf
shrb
imul
scas
push
lahf
out
mov
add
push
scas
aas
dec
imul
lahf
dec
lahf
dec
les
int
push
and
adc
stc
add
or
lcall
cmc
adc
push
adc
sbb
fucomp
lods
add
sub
daa
sbb
punpckhbw
movsl
pop
xor
stos
lahf
dec
fistpll
rcl
clc
lahf
pop
push
aam
int
add
inc
xchg
xchg
shrb
push
adc
and
push
adc
sbbb
jle
xchg
shl
or
notb
sub
adc
lock
repnz
adc
sbb
or
or
fld
stos
ret
into
jp
int
dec
xchg
mov
xchg
lcall
pop
in
insl
and
lahf
int
sub
jb
adc
cs
jae
sti
aaa
ret
or
pop
sub
out
inc
loopne
dec
push
adc
mov
movsl
cmp
xor
movsl
sahf
inc
pop
xor
pop
cld
inc
scas
push
xlat
popa
pop
mov
or
lds
xchg
daa
xor
aas
imul
cmpsl
icebp
jecxz
scas
test
int3
cmpsb
cs
lret
movsb
fsubrl
push
adc
mov
call
xor
bound
imul
or
sar
mov
push
xor
add
addb
cltd
cs
test
jnp
fstpl
mov
inc
mov
testb
cld
out
or
jo
mov
movsb
movsb
mov
xor
adc
xlat
mov
sbb
push
pop
jmp
lock
pop
movsb
faddl
adc
faddl
adc
mov
call
xor
je
mov
cmp
add
ret
adc
push
mov
in
test
push
cld
movsl
cltd
or
in
int3
mov
aad
inc
xchg
mov
mov
aad
sub
pop
mov
loopne
add
push
adc
cmp
je
es
cmc
mov
sti
push
or
and
andl
inc
inc
sbb
xchg
js
xor
xor
add
mov
lret
in
aad
lds
je
adc
mov
ret
idivb
sbb
sub
push
es
lcall
hlt
jg
ds
mov
add
cmp
incl
adc
cmpsl
roll
outsl
iret
clc
outsl
insb
ss
jo
adc
out
and
mov
jne
mov
push
andb
out
fs
mov
in
xlat
adc
cmp
cmp
or
pop
adc
push
push
ss
bound
imul
adc
and
push
adc
push
fmul
jge
cld
test
mov
pop
lods
inc
in
cmp
push
sub
test
jo
std
sti
pop
inc
jbe
push
adc
scas
pop
dec
mov
sub
push
adc
push
pop
adc
push
adc
je
pop
adc
adc
fidivl
sarl
ss
cltd
push
retw
inc
add
mov
pop
in
cli
jno
sub
inc
jle
mov
test
or
mov
pop
adc
pop
cld
jae
adc
cld
outsl
dec
gs
push
pop
mov
je
pop
adc
lock
dec
xchg
movsb
faddl
adc
mov
push
fstl
inc
mov
pop
pop
insl
mov
jp
sbb
rcl
mov
imulb
cmc
stc
aad
push
mov
or
nop
jge
adc
or
cmpsl
mov
scas
clc
jae
adc
pop
push
dec
punpcklwd
pop
mov
sub
inc
clc
sti
idivb
jp
adc
stos
xlat
insb
pop
lret
push
or
push
xlat
std
adc
push
adc
add
jp
adc
dec
mov
jmp
or
xor
jp
adc
ret
jmp
sbb
jnp
adc
dec
nop
pop
jmp
pop
adc
je
inc
mov
xor
lds
adc
adc
arpl
scas
pop
mov
dec
add
repz
jbe
jg
stc
mov
stos
push
scas
repnz
xor
scas
lret
je
aas
jle
push
pop
js
sbb
shll
adc
sti
add
pop
mov
sub
bound
jno
adc
out
adc
leave
cld
add
jne
jl
pop
ret
shrl
movsb
leave
hlt
out
fcomps
push
adc
push
lods
mov
jo
adc
lahf
in
popa
or
clc
pop
std
test
fstpt
imul
adc
and
adc
push
les
adc
sbb
cld
xchg
adc
jae
adc
mov
icebp
or
push
and
adc
xor
pop
add
pop
std
iret
cmp
inc
mov
mov
into
test
fwait
inc
outsb
scas
sub
and
rcl
dec
dec
cmpb
idiv
adc
mov
ss
pause
jo
hlt
adc
xchg
dec
enter
sub
sub
je
adc
pop
push
dec
pop
fadds
cmpb
jnp
adc
incb
adc
ficomps
mov
sub
mov
xor
ds
je
adc
mov
mov
pop
orl
mov
out
sbb
sbb
jg
sahf
in
xchg
mov
push
mov
and
xchg
aaa
mov
inc
cmp
xchg
jg
in
shl
outsb
inc
mov
and
add
adc
lret
aas
mov
test
insl
push
pop
imul
mov
lea
xchg
aad
scas
mov
addr16
cmp
mov
ds
adc
or
jo
adc
ror
clc
adc
ja
sbb
jae
adc
cwtl
inc
testb
scas
xor
jae
adc
add
shlb
mov
and
or
nop
push
push
stos
cld
addr16
hlt
addr16
cwtl
and
add
pop
cmpsb
and
push
rcrl
int
or
push
mov
mov
pop
adc
mov
movsl
jmp
push
adc
dec
jo
adc
mov
and
shrl
cmp
mov
daa
pusha
mov
or
pop
adc
push
adc
or
adc
aam
or
pop
adc
add
dec
lahf
aas
xchg
sub
adc
aas
loope
inc
mov
adc
push
adc
out
mov
xchg
mov
and
orl
jae
mov
sub
cmpsb
stos
cmp
shlb
lea
cmp
into
imul
int3
jb
sbb
push
scas
pop
adc
movsl
pop
mov
nop
test
imulb
inc
mov
dec
xchg
dec
enter
jne
or
pop
stos
out
jmp
or
adcb
mov
pop
movsb
jge
adc
mov
shrl
insb
jl
adc
add
sbb
add
jl
adc
out
push
repnz
sti
arpl
jmp
sub
rclb
and
scas
je
push
adc
fldt
or
cltd
leave
enter
lock
inc
cmc
mov
dec
loopne
mov
push
adc
jns
xorl
sub
aas
inc
lds
outsl
cld
aad
aam
jle
sbb
in
push
pop
push
loop
inc
fsubrl
ljmp
pop
out
mov
push
push
add
sarb
mov
mov
jno
inc
scas
fwait
gs
shrl
jae
xchg
add
push
or
js
xor
into
int
dec
sub
xor
mov
jbe
test
add
jno
push
mov
push
lods
push
mov
mov
ljmp
test
mov
imul
icebp
paddw
fwait
shrl
mov
adc
daa
sub
adc
popf
movups
pop
adc
and
push
lret
jg
mov
sub
rcrb
call
cmpsl
out
mov
mov
mov
jb
push
add
mov
test
movsl
inc
scas
notb
pop
sub
and
and
jno
add
test
fs
cmp
mov
inc
ficoml
lret
sarl
or
inc
sbb
and
in
inc
subl
mov
fdivp
cmpsb
inc
subl
push
filds
pushf
clc
push
jecxz
shll
dec
and
arpl
stos
icebp
jle
in
loopne
test
and
jnp
clc
lret
clc
push
lods
out
mov
test
sbb
jae
jno
outsb
into
fisubrs
icebp
test
xchg
push
repz
rcrb
cmp
nop
iret
adc
sbb
std
mov
loope
ret
test
sbb
mov
popa
xor
ja
xchg
shrb
cmp
cmpsl
test
sti
inc
cmp
aad
or
jno
push
jo
cld
into
mov
inc
icebp
or
jo
cli
nop
cld
and
daa
fisubs
mov
loop
push
sub
sub
nop
mov
mov
and
xor
jmp
pop
insl
sbb
scas
mov
cltd
mov
js
lods
stc
mov
loopne
jb
or
das
lods
and
mov
pop
test
cwtl
mov
cli
aad
mov
push
loope
loope
xlat
pop
dec
push
cli
push
out
jae
mov
xchg
imul
pop
pusha
xor
xchg
sub
repnz
out
test
mov
in
push
out
push
aaa
inc
jno
cmp
inc
push
pop
add
cltd
mov
mov
mov
xchg
add
mov
dec
in
sbbb
leave
mov
fistps
scas
dec
daa
test
xchg
dec
les
ficomps
aam
lea
push
and
add
in
cmp
mov
std
sti
dec
push
push
jl
adc
mov
js
pop
add
cmpsb
add
push
sarl
adc
jle
and
pop
rol
fcmovu
aam
test
nop
pop
stos
push
fcmovu
mov
dec
fldenv
inc
pop
in
les
pop
push
fwait
xor
jae
mov
and
into
mov
xchg
inc
push
add
cltd
leave
enter
lock
inc
cmc
mov
dec
loopne
mov
push
adc
jns
and
mov
inc
lds
cmc
aam
jle
sbb
in
push
pop
push
loop
inc
mov
ljmp
pop
out
mov
sarb
cmp
pop
adc
into
incb
jp
rorb
movsb
dec
adc
pop
jp
jge
adc
incl
inc
arpl
je
jmp
sbb
pop
pop
push
add
xchg
sbb
inc
in
mov
scas
xlat
dec
fdivr
lods
cmpsb
dec
xchg
pop
loope
cmp
push
dec
int
or
pop
jae
not
filds
or
lock
pop
mov
mov
in
push
push
sbb
dec
ljmp
adc
into
jb
jp
jle
sub
je
nop
or
mov
cli
and
aaa
xor
push
and
jmp
fdivrp
mov
popf
jg,pt
dec
hlt
cwtl
popa
inc
adc
add
pop
mov
mov
xchg
pop
mov
lock
inc
lods
cmp
movsl
adc
cld
cmpsb
ret
fwait
lea
inc
xchg
pop
xchg
imul
aad
add
or
mov
sgdtl
scas
fstp
mov
cmc
jb
fldt
or
add
adc
adc
rol
add
loopne
push
adc
ja
and
mov
sbb
or
enter
mov
std
or
ds
int3
movsb
push
sahf
jo
xchg
lods
fdivrs
adc
sarb
adc
lcall
push
mov
lret
ret
gs
in
repz
lea
outsb
mov
stos
scas
cmp
lock
sarb
daa
sbb
pop
cmp
pusha
adc
push
mov
es
sub
sbb
cli
mov
arpl
popf
sbb
jp
ficompl
xchg
pop
cs
mov
push
or
sbb
push
imul
mov
clc
mov
inc
rcrb
jge
pop
bound
cli
mov
xchg
data16
imul
outsb
sub
adc
lcall
nop
jge
xor
inc
dec
mov
sbb
adc
aam
sbb
inc
mov
repz
or
mov
jle
mov
inc
dec
jnp
test
push
jnp
ljmp
imulb
sub
and
movsb
dec
sub
adc
ror
scas
test
enter
pusha
push
jecxz
sahf
lcall
xchg
jecxz
scas
dec
mov
push
or
stos
xor
inc
pop
xlat
jmp
mov
jg
or
inc
cwtl
and
dec
mov
push
fsubrl
stos
enter
std
les
in
in
repnz
ror
sub
pop
pop
imul
mov
jge
jp
push
out
push
pop
cmp
daa
sbb
xchg
push
pop
xor
jae
popf
scas
loopne
add
shll
fdivrs
cmc
push
push
add
pop
addr16
xchg
and
push
ds
rolb
push
inc
jge
inc
xchg
adc
cmp
push
arpl
mov
jle
sub
out
mov
add
mov
sub
push
sub
je
or
stos
popf
aaa
cmp
mov
xlat
popa
arpl
enter
jmp
stos
icebp
mov
jne
mov
sub
jo
sbb
adc
cs
mov
stos
jl
cmp
jl
cmpsb
ss
ljmp
jo
out
inc
lds
outsl
cmc
add
mov
ja
scas
cmpb
imul
cmp
xlat
clc
mov
pusha
dec
movl
dec
sbb
xlat
mov
xlat
aad
mov
into
into
pop
pop
cmp
push
and
mov
add
rolb
aam
pop
popa
nop
inc
fucomp
popa
sub
mov
ds
scas
cltd
mov
in
or
or
into
pop
push
push
cmpl
xchg
dec
ret
xchg
mov
addl
xchg
aad
and
arpl
sbb
cmc
je
les
push
sbb
push
xor
sub
frstor
cltd
pop
ret
inc
pop
jmp
or
adcb
push
movsb
pop
aaa
cmp
inc
ja
scas
pop
into
cmpsb
cmpsb
pop
add
sub
push
add
dec
push
scas
push
xchg
pop
out
and
xor
es
scas
pop
sahf
ds
jbe
andl
jmp
in
jmp
lods
inc
sub
lcall
sahf
or
mov
sub
mov
sub
push
and
sub
xlat
push
and
js
pop
add
mov
fdivrl
and
push
push
repz
cmpsb
jnp
cmpsl
inc
sti
out
fidivl
adc
ret
dec
shrd
pop
push
sbb
loope
orl
int
fldt
in
cli
sub
pop
test
inc
cmp
push
test
jge
or
inc
pop
adc
inc
lret
cmp
mov
into
in
dec
ret
push
inc
fsubl
push
dec
popf
outsb
mov
ficomps
xor
cmp
leave
jecxz
ds
or
and
das
cmp
jg
jb
cmp
add
aam
jle
push
or
loopne
and
repnz
ja
xor
out
daa
mov
rolb
popf
xor
mov
lods
push
xor
and
in
push
sar
sti
add
dec
addb
xor
add
or
ja
cmp
mov
aam
mov
push
inc
pushf
mov
stos
xor
sub
and
repnz
inc
ss
idivb
mov
sahf
pop
inc
movsl
inc
mov
dec
jnp
aad
dec
adc
push
inc
push
popl
push
fiadds
mov
push
mov
imul
fidivrs
lahf
stos
scas
ss
fldcw
insb
mov
push
outsl
pushf
popf
xchg
push
fs
pop
mov
jno
xchg
mov
cmc
cmp
mov
add
and
mov
loope
mov
pushf
adc
adc
inc
adc
sub
xor
scas
and
dec
sub
adc
sub
and
nop
mov
inc
inc
mov
push
divb
stc
push
neg
inc
inc
mov
std
xor
mov
add
ss
jge
dec
dec
mov
int3
dec
movsl
sbb
mov
bnd
mov
add
test
sbb
mov
imul
jno
sbb
fidivrl
testb
sbb
xchg
adc
addb
mov
mov
add
cmpl
adc
push
and
rcr
jno
sub
push
cmp
testb
leave
jne
js
ljmp
inc
mov
mov
enter
rol
je
or
sti
imul
scas
add
xor
adcb
mov
cmp
push
cltd
stos
movsl
pop
aas
lock
push
lea
mov
cmp
dec
fidivl
cmp
or
push
fwait
cwtl
stos
fnstsw
loopne
push
adc
iret
jle
insb
sahf
cmc
ja
pop
loop
rolb
inc
sub
dec
mov
xchg
in
inc
mov
fcmovb
jae
mov
adcb
pop
sarb
adc
outsb
adc
push
iret
repnz
jnp
jge
xchg
enter
cli
stos
popa
ljmp
daa
cmpsl
lea
jno
push
sub
sbb
or
dec
dec
out
test
xor
xor
push
cld
cmpsl
add
in
mov
fidivl
scas
pop
cli
mov
fildl
das
xor
xchg
and
kmovw
sbb
in
push
pop
push
loop
pop
sub
pop
lods
insl
out
shlb
sbb
pop
pop
loope
mov
xchg
out
cmpsb
jne
pop
inc
xlat
inc
adc
adc
push
lret
dec
in
test
adc
sbb
mov
aam
aad
fldln2
in
repnz
mov
les
cmc
or
add
mov
movsb
adc
scas
fsubrl
xchg
test
dec
sbb
sub
jbe
xlat
std
shr
inc
into
mov
lods
mov
mov
jae
mov
adc
push
dec
pop
fsubl
movsl
loop
mov
decb
and
xor
lret
fdiv
fdivs
stos
pop
sub
adc
mov
mov
pop
push
dec
cmpsb
and
mov
mov
outsb
cmpsb
fsubrs
imul
jp
fstpt
nop
mov
inc
mov
pop
cld
negb
cmp
pop
push
jo
and
pop
daa
shl
mov
sahf
xchg
mov
cmp
sub
mov
leave
imul
add
repnz
or
ljmp
inc
aam
ss
sbb
and
cmpsl
pusha
dec
add
xor
ja
arpl
movsb
out
jae
pop
sti
imul
push
cltd
pop
mov
clc
scas
test
push
lods
jne
jl
adc
dec
pop
cmp
loop
stos
adc
pop
xor
ds
mov
insl
mov
adc
rcrb
shl
mov
jb
shlb
ror
dec
stos
imul
lock
xchg
sti
jp
cmp
imul
test
sub
scas
xchg
add
out
pop
xchg
sbb
stos
outsb
xlat
leave
sub
jns
add
push
loopne
loop
mov
jo
sbbl
push
pop
lods
mov
mov
repz
pop
xor
ret
test
insl
icebp
and
jl
pop
movsl
or
sbb
lock
xor
cmp
rcll
and
inc
clc
stos
lds
mov
flds
mov
sub
fsubrl
add
adc
mov
jecxz
pop
dec
mov
ljmp
xor
push
push
pop
dec
fimuls
mov
xor
xor
fwait
pop
fisttpll
adc
push
test
bound
movsl
mov
cltd
xor
arpl
lcall
mov
jmp
es
push
test
sbb
jno
outsl
xor
push
cmp
push
lods
pop
jmp
add
je
sarb
xlat
mov
sbb
ds
mov
fwait
push
mov
jmp
lea
lds
and
inc
jp
mov
imul
and
nop
movsb
jae
jecxz
jle
aam
lds
sbb
mov
popf
adc
push
xchg
test
cmpsb
sbb
inc
pop
scas
lahf
mov
mov
imul
jg
push
mov
dec
imul
dec
ja
cmp
into
dec
sbb
push
xchg
mov
adc
rolb
imul
dec
add
fidivrl
imul
ret
pop
jb
out
push
hlt
push
je
and
lods
pop
xor
inc
jne
pop
cs
stos
ficomps
xor
imul
xor
and
mov
pop
and
push
shrl
movsl
adc
mov
pop
jmp
push
mov
cmpsl
add
push
and
stos
into
push
cmpsb
xchg
sahf
mov
insb
xchg
repnz
sub
in
pop
sub
jl
jle
push
scas
xchg
loope
dec
dec
ljmp
es
int3
jge
and
lcall
add
mov
pop
arpl
add
jl
lods
or
add
cmp
shlb
push
sbb
popa
insb
pop
mull
sbb
stc
mov
cwtl
faddp
inc
out
mov
sub
inc
into
fisubl
and
and
or
add
sarl
xlat
mov
movsb
and
sub
sub
push
pop
or
lods
xchg
loopne
mov
push
test
inc
lahf
loope
mov
mov
outsb
cmp
decb
rcrb
xchg
popf
test
mov
addb
mov
mov
or
lock
fistl
cmp
lock
lods
mov
cld
mov
xor
pop
mov
stos
lods
aas
lret
lods
lahf
lcall
mov
shll
push
ss
cli
add
je
test
fs
inc
add
xchg
push
xlat
lahf
xor
push
fwait
call
push
std
les
ror
jg
push
mov
sub
test
mov
repz
xchg
xchg
add
xchg
fstps
movsb
add
mov
inc
jmp
lret
xor
push
xchg
clc
pop
outsl
je
xchg
ja
xchg
jmp
lret
adc
jns
mov
out
sbbl
sti
inc
fstpt
sub
ret
cli
push
iret
int
lods
divl
aad
or
mov
cmp
lret
fistl
out
mov
mov
out
and
mov
and
lret
push
out
sub
adc
es
cmc
stos
jl
push
popf
fistps
add
lahf
mov
jo
ret
xchg
xlat
push
std
mov
in
cmp
stos
ds
adc
xlat
sub
cmpsb
adc
fnstenv
push
stos
cmpsl
arpl
mov
aaa
sub
insl
mov
pop
stos
out
shrb
mov
sub
mov
inc
stc
outsl
iret
mov
fbstp
fstps
enter
mov
outsl
mov
in
dec
test
sbb
jae
mov
adc
cmp
mov
pop
pop
aas
mov
xor
pop
imul
fmulp
xor
addr16
xchg
and
aaa
je
insl
pop
outsb
cmp
cmp
cmp
test
gs
loopne
jg
popa
pop
xor
insl
pop
dec
sarl
call
test
scas
and
movsb
mov
jecxz
mov
fidivrl
xchg
shlb
ljmp
inc
mov
in
mov
and
or
mov
and
test
enter
lds
outsl
daa
sbb
aam
ret
in
xchg
adc
xchg
sbb
scas
arpl
out
xchg
lahf
aas
or
mov
xor
xor
in
lods
mov
mov
or
stos
sub
sti
notb
pop
inc
sbb
push
aaa
xor
test
dec
arpl
xchg
movsl
dec
call
xor
ret
loop
inc
push
mov
je
mov
adc
or
cmpsl
cmp
repz
inc
int
sub
mov
out
testl
sub
outsb
push
mov
dec
insl
push
sti
jl
fidivrl
xchg
sub
sahf
dec
scas
pop
dec
push
in
loopne
cmp
cmpsl
lds
push
fidivrl
lahf
mov
adc
xchg
hlt
into
pushl
and
mov
scas
sub
out
notb
jns
add
mov
and
shrb
movsl
xchg
mov
sub
out
notb
or
add
fldl
and
rcr
jae
in
fdivrs
xor
sarl
fidivrl
adc
inc
jnp
cmp
es
lea
jb
in
push
pop
push
xor
push
stos
in
and
adcl
pop
pop
fdivs
jmp
fsubr
fcmovne
push
outsl
addr16
jl
and
dec
cmpsb
add
sub
stc
sahf
mov
cmp
addl
push
ftst
sbb
rorb
add
fldl
es
cld
sbb
sub
mov
into
ret
sub
adc
data16
inc
jge
push
cmpsl
loope
enter
cmp
fadds
mov
cmpsl
sbb
pop
xlat
aas
mov
lds
mov
pop
mov
jl
cltd
sbb
imul
addb
add
adc
mov
dec
cmp
mov
rcll
and
in
mov
iret
scas
mov
sub
and
sbb
and
addb
cltd
and
scas
xchg
addr16
in
push
adc
lods
out
call
nop
cld
andl
in
or
push
insb
adcl
stos
aad
push
lock
adc
lea
push
dec
dec
inc
cmc
pop
mov
jno
aam
mov
mov
sbb
movsl
lcall
push
imul
add
test
mov
inc
cmp
mov
fldl
or
mov
in
ret
enter
insl
xchg
sub
mov
sti
jo
in
push
adc
stc
mov
xlat
and
cwtl
pushf
js
sub
jb
stos
xchg
lahf
lods
adc
or
xchg
xchg
pop
aad
fidivs
jecxz
sarb
adc
adc
add
clc
cmp
cld
push
test
mov
call
adc
or
sub
imull
shrb
dec
mov
sub
shlb
push
ret
push
sub
jge
or
inc
cwtl
shrl
mov
mov
movsl
push
jle
adc
repnz
mov
addr16
pop
or
or
dec
mov
dec
push
jo
push
adc
xchg
decl
loope
mov
mov
sbb
sbb
dec
aad
xchg
and
outsl
popf
jp
arpl
mov
jle
adc
jmp
mov
mov
xchg
stos
jp
gs
push
push
mov
lods
push
cmpsl
loopne
flds
inc
add
adc
mov
stos
mov
xchg
in
xor
xor
push
test
sbb
jge
inc
repz
adc
je
pop
mov
dec
xchg
sub
add
jno
lahf
pusha
pop
mov
sub
mov
push
adc
mov
adc
jle
push
test
mov
mov
push
stos
push
scas
mov
jo
adc
xor
mov
push
add
lods
mov
ljmp
push
adc
mov
adc
dec
shl
out
repnz
js
in
mov
push
lret
push
sub
push
adc
inc
xchg
inc
test
push
inc
mov
inc
loop
push
mov
pop
jno
pop
loope
pop
mov
mov
adc
arpl
push
fnsave
test
pop
mov
add
jnp
adc
fidivl
dec
lods
push
stos
sub
push
sub
push
cmpsl
dec
xor
out
imul
jne
je
push
adc
cmp
push
xchg
daa
mov
jmp
inc
stc
pop
lahf
aas
add
jno
jp
jle
adc
mull
push
fsubl
mov
cmp
add
lahf
aas
inc
xchg
repz
fiaddl
lock
push
stos
clc
fsubl
mov
frstor
push
adc
sti
loope
xchg
mov
stos
popf
iret
imul
sbb
push
dec
movsb
dec
sahf
xchg
or
repnz
mov
sub
shrl
push
adc
daa
add
fs
cmp
adc
outsb
mov
adc
inc
mov
cmpsl
add
and
dec
jle
adc
xchg
push
jecxz
push
stos
iret
add
push
adc
pop
addb
aaa
das
dec
fildl
mov
jnp
pop
fs
hlt
sub
add
pusha
fdivrl
outsb
call
mov
in
sarb
adc
adc
add
shlb
mov
inc
cli
mov
ss
push
adc
mull
pop
ret
jbe
add
aas
sub
mov
arpl
jle
adc
sub
fcmovb
and
jg
movsl
nop
cmpb
add
call
add
adc
push
adc
adc
push
xor
adc
popf
xor
dec
or
jp
bound
jle
adc
dec
cmp
imul
clc
pop
repnz
dec
inc
cmc
pop
mov
jno
fdivrs
push
adc
cmp
and
dec
sbb
xorb
cltd
cmp
les
pop
ret
xchg
push
adc
repnz
mov
push
sub
lods
cld
aam
push
adc
mov
jno
add
ss
mov
push
fdivp
mov
lret
js
je
sti
xor
aad
ljmp
adc
cmp
push
pop
addl
sub
jo
push
adc
test
ss
hlt
mov
sbb
or
adc
sub
arpl
mov
rorl
pusha
jle
adc
adc
mov
mov
lahf
in
mov
adc
jle
pushf
repz
fldl
mov
imul
xor
jle
adc
push
cmp
mov
adc
popa
ret
imul
adc
es
shlb
push
in
movsl
xchg
inc
stc
push
mov
sub
sbb
mov
adc
cltd
shlb
adc
xchg
repz
fcmovb
or
cmpsl
inc
mov
pop
mov
dec
xchg
pop
test
jecxz
lock
mov
mov
rcl
push
adc
add
mov
js
dec
in
xchg
cmp
and
daa
sbb
xchg
je
cmpsb
fistps
sub
cmp
cmp
clc
jge
adc
cmpsl
add
jl
pop
mov
dec
push
imul
mov
push
sti
mov
rorl
push
stos
inc
mull
inc
mov
repnz
jge
adc
adc
inc
sbb
ljmp
fmull
je
xchg
sub
xor
mov
in
fcmovb
fcmovu
jge
mov
frstor
popf
pusha
stos
out
sbbl
cmp
pop
sub
cltd
mov
stos
push
or
enter
jnp
cmp
es
sbb
jg
adc
jnp
rorb
adc
scas
pop
in
flds
adc
adc
popf
jge
inc
popa
or
pop
adc
jmp
jno
out
imul
dec
xchg
sub
lahf
aas
jmp
push
pop
lahf
push
mov
stos
sti
cmp
movsl
dec
jecxz
push
mov
aas
jle
adc
jg
adc
pop
shrb
push
adc
in
dec
push
and
push
adc
std
mov
mov
add
pop
adc
add
pop
adc
out
cmp
flds
adc
adc
outsl
xchg
lcall
test
mov
mov
cli
add
or
imul
orb
sbb
jne
push
mov
push
adc
pop
fildll
push
adc
sub
call
adc
cmp
push
stos
pop
jne
flds
adc
jg
adc
loopne
xchg
sbb
ret
ret
mov
in
mov
jp
jle
hlt
jge
adc
push
inc
call
push
adc
adc
aad
faddl
adc
adc
repz
adc
outsb
cli
mov
xor
or
cld
sti
cs
sbb
mov
xor
jle
dec
mov
adc
lods
mov
jl
mov
out
jmp
add
pop
sahf
adc
mov
mov
sarl
insl
ret
lcall
add
pop
jbe
or
cmp
push
adc
mov
test
jle
ret
and
add
push
loope
mov
les
adc
dec
pop
lahf
fs
inc
sub
sub
pop
scas
icebp
shll
cwtl
mov
icebp
jb
push
fisubs
mov
into
pop
addr16
iret
lock
mov
add
jns
loopne
jae
cmpsl
mov
clc
push
sbb
nop
inc
dec
xor
push
fwait
sbb
jge
out
xorl
lcall
loope
fs
and
jae
cli
adc
xor
sbb
out
sbb
mov
xchg
scas
adcb
push
mov
add
test
sub
cmpsb
mov
cli
xlat
inc
push
sub
nop
adc
loop
mov
sub
daa
push
lods
fnstcw
imul
lods
lret
out
pop
add
out
jge
mov
push
lcall
and
jb
mov
sahf
int
mov
mov
outsl
cmpsb
cli
out
popa
cld
mov
sbb
mov
jge
mov
std
ds
es
push
and
shrl
fadd
cwtl
jmp
pop
sbb
in
inc
mov
out
cmp
pop
int3
mov
sahf
lods
xor
inc
addb
int
lods
or
jne
jge
mov
scas
push
adc
sub
adc
cmp
mov
xchg
or
aaa
repz
les
and
iret
cltd
arpl
movsb
push
jg
adc
push
adc
push
adc
and
and
rcl
mov
xchg
test
lds
dec
mov
aad
dec
cmp
adc
and
sbb
shlb
shl
fldt
or
ljmp
push
adc
ret
jno
cmp
pop
rol
mov
dec
xchg
pop
rcll
cmpsl
dec
dec
jno
pop
cltd
jnp
sbb
ljmp
test
lds
xchg
sub
mov
mov
std
sti
xor
push
pop
sbb
push
xor
out
test
pop
push
add
add
mov
push
cmpsl
dec
adc
or
fiaddl
in
arpl
stos
push
test
imul
loopne
test
jo
aad
std
jb
inc
int
shll
and
lods
push
and
mov
mov
pop
xor
int3
sbbl
or
or
aad
lea
cmpsb
xlat
addr16
and
push
cmpsl
dec
jmp
or
in
push
fcomp
mov
adc
jno
push
aam
test
sub
out
test
mov
in
ds
sbb
test
dec
mov
pop
inc
xor
mov
or
and
scas
cmp
rcll
add
dec
mov
inc
pop
into
and
ds
dec
push
js
ss
test
das
push
mov
push
mov
andb
incl
arpl
push
xor
int3
movl
dec
cmp
mov
repz
push
psubq
pop
stc
addb
cmp
inc
xchg
dec
dec
jge
xor
les
push
jae
push
xchg
cmpsl
movsb
fsubrl
xchg
call
popf
push
dec
mov
and
fs
fsubs
pop
jg
mov
in
push
adc
mov
mov
mov
and
adc
mov
adc
fiadds
add
pop
adc
sub
xchg
adc
aam
xor
adc
mov
sbb
and
test
mov
sbb
ds
je
int
or
lahf
aas
adc
mov
sub
jle
pop
push
mov
orl
jmp
inc
rorl
mov
mov
xchg
rcll
mov
jmp
or
imul
call
jge
dec
lcall
insl
shll
xchg
xchg
push
xor
mov
adc
push
mov
adcl
sub
loopne
jp
mov
mov
inc
mov
ljmp
das
aaa
push
loopne
in
lahf
jle
sbb
aas
mov
popa
out
push
jnp
in
xchg
outsl
jnp
sbb
xor
out
aas
pusha
sbb
dec
dec
xchg
and
add
push
scas
mov
inc
jecxz
cmc
arpl
pop
insb
pop
in
push
pop
sub
in
and
stc
stc
cmpsb
xchg
sub
shr
jo
jno
jecxz
mov
test
and
mov
out
lods
jle
push
and
push
mov
jecxz
jmp
iret
jmp
rorl
mov
cs
mov
adc
jns
ret
mov
pop
lods
adc
fnstcw
inc
sahf
and
shlb
ljmp
mov
jnp
push
push
jl
loopne
outsb
pop
pusha
xchg
test
sahf
xor
push
movsb
push
jbe
test
fisubl
jne
lds
push
hlt
or
sub
push
shll
jno
cltd
insl
inc
pop
push
sbb
aam
adc
insl
push
mov
sub
cs
lea
inc
or
stos
bound
adc
rcr
add
arpl
in
sbb
jmp
jno
ret
and
inc
in
pop
in
and
out
out
sbb
push
lods
push
jbe
test
fimull
ds
add
mov
pop
in
loopne
pop
shl
push
push
and
push
outsl
push
xor
out
out
pop
and
or
movsb
push
mov
lods
xchg
jb
rcl
jo
sbb
inc
mov
adc
adc
sub
cmp
jo
incb
or
mov
jge
push
inc
mov
scas
pop
into
mov
lods
sub
pop
clc
mov
push
and
sub
sub
dec
push
push
sub
ljmp
ds
jns
popa
cmp
stos
pop
dec
dec
push
ficoml
mov
sti
mov
xor
and
test
nop
sub
cmpsb
inc
or
sub
fsts
inc
cmp
int
push
and
aaa
add
pop
lods
stos
fcoms
jmp
mov
xchg
test
mov
cmpsl
mov
lea
cltd
adc
pop
push
in
mov
ficoml
jge
shlb
mov
aam
cmpb
mull
rcrl
shll
mov
mov
mov
loope
cmpsb
or
daa
lret
cmc
lock
fcoms
lret
jno
mov
add
fcoms
mov
pop
push
mov
mov
repz
lds
aad
adc
pop
mov
mov
aaa
das
ret
clc
out
push
ret
jns
mov
mov
push
aad
pop
sub
scas
leave
imul
jne
pop
cmpb
mov
sar
arpl
dec
imul
ds
push
pop
and
dec
push
mov
outsb
aad
repnz
lahf
test
dec
jle
js
sub
dec
std
test
repz
shl
in
sbb
test
neg
std
mov
jg
xor
mov
mov
cmc
or
hlt
loop
add
fadds
pop
mov
jns
sub
adc
das
pop
push
lret
insl
lock
fsubs
imul
xchg
mov
inc
pop
adc
sub
leave
loop
xchg
fwait
sbb
sub
xchg
ret
aaa
push
roll
xchg
cltd
les
sbb
dec
ret
clc
sbb
inc
jo
push
addr16
or
int
push
cltd
sbb
lcall
inc
push
sahf
adc
xchg
sbb
aas
je
sarb
mov
stos
xchg
lahf
xor
sti
sbb
and
xchg
fs
jl
cmp
jl
pop
pop
hlt
jle
xchg
rcr
rcrl
sarl
outsl
sub
js
jne
mov
push
test
ljmp
sub
inc
jnp
mov
mov
cmp
sub
fstl
ret
push
mov
lods
ret
jae
xor
mov
push
push
push
aad
xor
mov
dec
dec
shl
sub
incb
out
insb
cwtl
jo
jne
cmp
das
mov
aad
into
jl
jmp
test
adc
jae
stos
push
sub
jbe
lret
dec
mov
pop
mov
out
jl
inc
jl
pop
pop
std
add
nop
and
ds
lea
jle
inc
add
icebp
jmp
and
out
outsb
adc
inc
dec
out
sub
cmp
daa
xchg
pop
ja
jle
add
lahf
lods
cmp
addr16
push
add
mov
lds
pushf
mov
movsb
adcb
sbb
push
jnp
in
bound
dec
inc
xchg
sub
pushf
mov
in
cmp
dec
movsl
test
in
test
test
jmp
nop
movsb
rol
push
in
fcmovb
rolb
addl
scas
pop
dec
mov
adc
lea
and
push
popf
xchg
lods
scas
push
testl
sub
and
mov
jle
add
add
mov
movsl
pop
xor
iret
pop
mov
add
fwait
out
xor
cmp
sbb
mov
movsl
xchg
in
cmpsl
push
push
popa
out
jmp
lret
mov
lock
inc
scas
mov
jne
andb
and
cmp
push
lds
sbb
mov
pop
cli
cmp
popf
fistpll
stos
push
in
inc
mov
xchg
int3
jp
adc
pop
out
test
ljmp
jns
insl
cli
out
aad
loope
push
mov
xor
out
les
and
arpl
cmp
sub
push
dec
decl
inc
inc
je
mulb
sar
std
adc
push
clc
mov
shr
adc
lods
shlb
mov
xlat
jns
mov
pop
js
out
test
es
mov
pop
mov
adc
pop
mov
dec
add
xchg
sbb
dec
sub
push
and
in
cwtl
das
aad
mov
out
jnp
test
sbb
xor
arpl
mov
adc
cwtl
xorl
cli
arpl
pop
sbb
and
or
cmp
pop
shrb
xchg
sbbl
loopne
sub
inc
loop
lcall
add
sub
lock
mov
sub
inc
aaa
out
stos
adc
pusha
jnp
aas
pusha
out
aad
cmpl
and
and
and
push
pop
inc
mov
icebp
adc
adc
imul
pop
or
test
popa
out
add
loope
mov
mov
mov
loopne
psubsb
add
or
add
pop
lods
ss
sbb
and
pop
add
aad
adc
mov
add
movsl
cmp
sbb
lock
mov
xchg
push
mov
add
iret
adc
dec
or
sbb
or
jl
ds
jae
add
addr16
movsb
jno
jb
lret
insl
xorl
and
mov
or
cmp
push
fstl
inc
int3
lret
roll
jb
mov
gs
dec
xor
outsb
xchg
stc
in
test
mov
gs
in
adc
add
adc
insb
sbb
sub
mov
pop
pop
cmc
out
je
in
lcall
pop
imul
mov
add
adc
adc
sub
cs
data16
push
pop
mov
mov
scas
movsl
scas
sahf
mov
lea
dec
cwtl
and
pop
mov
push
f2xm1
jae
aad
mov
dec
cmp
sbb
dec
sub
adc
in
xor
lock
inc
pusha
cld
sbb
adc
in
sub
sbb
adc
test
pusha
jo
adc
push
inc
mov
clc
and
pop
dec
mov
je
mov
jnp
lret
mov
out
xchg
sub
scas
xorb
test
inc
in
add
lahf
push
inc
mov
arpl
mov
xlat
clc
mov
or
imul
push
sbb
push
xchg
push
cmpsl
lds
mov
shrl
pop
rorb
ss
ds
dec
cltd
daa
adc
je
push
adc
mov
inc
in
fcomps
addr16
scas
test
mov
loope
lods
push
sub
push
dec
inc
dec
jmp
mov
test
sti
sbb
jae
adc
mov
roll
push
cmc
or
adc
push
adc
insl
mov
popa
es
fs
movsl
popa
nop
push
daa
stos
fsub
stc
fiaddl
dec
adc
adc
mov
fidivl
lahf
pusha
xchg
std
sub
push
adc
push
enter
mov
and
add
sbb
mov
and
pop
xor
sub
repz
adc
or
push
adc
inc
lret
test
pop
incb
sub
jnp
sbb
sbb
adc
test
adc
pusha
jo
adc
adc
movsl
rcrb
mov
fbstp
push
inc
pop
mov
inc
in
add
lods
mov
xchg
cs
insl
cli
cmpsl
scas
fucomip
push
dec
inc
push
push
sub
je
push
adc
pop
push
rcll
data16
clc
fisubrl
mov
test
aad
pop
sub
sti
notb
pop
xor
out
ds
je
push
adc
pop
cmpsb
pop
test
pop
pop
pop
jl
ja
pop
pop
inc
mov
inc
pop
and
push
pop
jmp
out
add
shrl
call
push
cli
lods
jae
testl
jmp
les
sbb
push
adc
aad
pop
in
mov
stos
and
lds
mov
mov
adc
hlt
dec
rcrb
or
mull
sbb
pushf
lock
jmp
xor
pop
fxch
mov
adc
mov
sbb
pop
shll
icebp
jmp
mov
jle
jnp
cld
sub
jne
hlt
inc
add
stos
fistpl
dec
cwtl
adc
add
data16
or
sbbb
into
out
rcll
in
inc
sub
and
hlt
out
add
pushf
push
scas
sar
cli
add
into
mov
sbb
xchg
fiaddl
add
mov
pushf
sub
adc
push
fisttps
clc
push
shr
lock
xchg
stos
testl
jge
in
lcall
sbb
jg
popf
gs
mov
mov
sbb
dec
xchg
xchg
mov
mov
inc
lret
cmp
sub
cmp
js
xor
sbb
xor
int
lret
je
or
stos
xchg
insl
dec
ret
mov
push
enter
sbb
xor
cs
push
out
sbb
leave
and
cwtl
cld
cmp
arpl
inc
xchg
int3
jle
adc
jp
xchg
cmp
push
in
bound
aam
fdivrp
mov
add
leave
pop
inc
xor
push
adc
lret
nop
sub
lods
adc
das
sub
loop
mov
and
fnstcw
mov
pop
call
std
enter
sbb
mov
hlt
jbe
scas
rorl
jg
in
pop
adc
or
xor
gs
lret
sbb
pop
imul
mov
inc
vpsrld
jp
mov
outsb
mov
adc
in
adc
mov
shll
mov
jnp
out
dec
sarl
fsubrl
dec
cmc
in
push
dec
xor
pop
aad
dec
aas
jle
push
test
mov
sbb
ljmp
shlb
in
or
or
mov
xor
ljmp
jb
lods
cmp
mov
loope
lods
inc
jbe
test
sbb
mov
cmp
lret
push
adc
cmp
sub
jbe
cmp
ljmp
jge
aas
xor
and
jmp
ds
jle
mov
shl
mov
push
bound
int3
inc
mov
push
mov
ljmp
gs
rcrl
popa
ficoms
dec
inc
mov
xchg
daa
sbb
inc
faddl
or
jne
aad
stos
fnstsw
je
adc
mov
addl
xor
pop
ds
mov
mov
cmc
aam
xor
sti
imul
test
out
shll
push
stos
push
in
mov
popa
andl
or
cmp
in
ficompl
sbb
jl
sub
xchg
mov
cmpsb
stos
ss
sub
inc
mov
sti
imul
nop
push
push
jle
out
in
imul
out
push
sub
dec
lahf
nop
or
shl
dec
lcall
addr16
ds
in
lods
cmpsl
lods
mov
pop
and
dec
lahf
aas
inc
inc
clc
or
rol
push
mov
scas
pop
adc
nop
aam
push
fcmove
jns
repnz
mov
iret
dec
adc
mov
add
leave
pop
ret
shlb
push
jmp
jl
pop
mov
sub
ror
jle
adc
out
dec
incl
jmp
mov
push
jle
adc
cli
jp
inc
mov
push
movsl
adc
lcall
test
out
mov
fisubrl
sub
ret
fsubrs
mov
xor
pop
adc
mov
cmp
cld
in
jp
inc
mov
dec
lds
mov
push
stos
xlat
fisttpll
out
mov
fldenv
into
scas
popa
add
ret
popa
adc
shrl
push
mov
dec
cmc
inc
adc
inc
push
fimuls
rorb
jmp
imul
jl
jge
adc
mov
push
pusha
jl
cmp
jp
adc
cltd
pop
mov
clc
push
std
stc
push
inc
dec
enter
outsb
pop
loope
sbb
mov
movsl
sarl
imul
imul
dec
mov
cld
and
xor
enter
mov
mov
xor
or
sub
inc
inc
in
ret
push
push
stos
xor
call
or
pop
out
pop
repnz
sbb
and
mov
add
movsl
movsb
sbb
sbbl
data16
push
imul
loopne
adc
or
fistps
xchg
aam
or
aas
rcrl
lds
movsl
inc
fiaddl
xchg
scas
push
movsl
in
arpl
fsts
sbb
pop
sbb
and
mov
fisubl
cmp
arpl
push
mov
inc
or
add
movsl
push
mov
imul
mov
lahf
or
push
jmp
mov
sbb
xchg
bound
gs
das
jns
mov
leave
xor
ror
add
sub
mov
outsl
stc
mov
scas
mov
vprotd
dec
notb
andl
pop
fs
stos
fsubr
stc
or
sub
lret
sub
scas
mov
vprotd
dec
push
dec
andl
pop
fs
stos
fsubr
stc
or
sub
lret
dec
out
stc
mov
scas
mov
vprotd
dec
enter
and
pop
fs
stos
fsubr
stc
or
sub
shrl
fs
lahf
aas
sarl
lds
mov
push
stos
sti
fsubr
std
fsubl
roll
pop
sub
testb
addr16
inc
mov
rolb
cs
pop
jge
sub
movsl
dec
pop
xchg
daa
adc
std
sti
testb
outsb
shll
push
stos
sti
cmp
mov
in
sub
cmp
mov
cmp
shll
sub
mov
sarl
xor
dec
lahf
dec
int3
es
sbb
sub
clc
mov
jle
cmp
add
lahf
aas
or
jl
in
fisubl
sub
pop
dec
and
lahf
mov
sarl
popl
mov
mov
and
loope
mov
sub
or
rorb
adc
mov
push
xor
loopne
inc
mov
lahf
aas
or
jo
pop
jge
xchg
shrl
inc
arpl
pop
mov
pop
sub
dec
and
adc
ret
ljmp
addb
sub
lret
push
imul
popa
roll
mov
mov
stos
push
test
push
adc
xor
sub
adc
outsl
ja
dec
push
rclb
lock
cld
pusha
jnp
add
rcl
cltd
pop
hlt
icebp
cmp
jne
pop
mov
dec
fadd
iret
xchg
shl
mov
lea
call
inc
movsl
fnstenv
aaa
daa
bound
push
ret
les
repnz
sub
dec
test
pop
inc
adc
inc
pop
or
push
adc
les
dec
mov
inc
test
jnp
sbb
dec
mov
xor
test
adc
sub
jne
adc
mov
aad
mov
test
mov
out
fstpt
cmp
inc
jae
mov
cld
add
sbb
insb
sub
mov
dec
movsl
ljmp
push
rcll
psubsb
faddl
adc
jecxz
jae
jnp
lds
xchg
push
dec
jle
inc
xor
out
xorl
jo
sbb
fnsetpm(287
lcall
lret
sbb
jae
ljmp
xlat
imul
pop
jb
call
adc
xorb
lahf
dec
mov
rcll
or
push
ds
inc
xchg
push
xor
inc
je
gs
xor
mov
fsub
jl
pop
cs
mov
and
stos
jl
testb
jbe
js
mov
sbb
testl
or
cld
push
jp
push
inc
lods
les
sbb
test
sti
add
mov
sbb
rorl
cmp
or
sti
xor
stos
jge
xor
dec
or
mov
fistpl
pop
pop
sbb
sbb
mov
pop
adc
je
pop
adc
sbb
xchg
mov
sbb
push
xchg
sbb
xor
stos
xlat
movb
jno
mov
nop
or
push
and
or
popf
mov
adc
jecxz
mov
add
cmpsl
dec
mov
push
lea
sbb
jl
push
roll
dec
scas
pop
into
xchg
sbb
mov
jle
and
adc
mov
sbb
imul
pop
mov
or
aaa
shr
negl
and
sbb
xchg
in
lods
movsb
mov
dec
fs
lock
dec
lahf
dec
mov
sbb
sbb
sub
push
mov
je
test
sbb
aas
jle
movsl
je
pop
adc
fdivs
adc
mov
sub
or
or
add
pop
in
push
xchg
cmpsb
ret
fistps
fstpl
ds
cmpsl
pop
push
cmp
out
mov
in
push
adc
into
push
test
dec
or
xor
out
lea
ss
pop
jg
adc
push
push
stos
sub
inc
push
push
stc
or
es
xchg
aaa
lahf
aas
jmp
test
cmp
fldcw
push
adc
lret
fwait
pusha
push
pop
adc
cmp
clc
push
add
pop
scas
xor
loop
rolb
test
cmpsb
into
jb
daa
shl
addr16
outsl
ror
push
pop
adc
xor
out
pop
out
and
cmpsb
jl
adc
cmp
rolb
mov
test
xor
dec
repz
mov
mov
loopne
daa
pop
fs
push
mov
mov
dec
jecxz
aam
scas
and
sti
dec
insl
lods
and
shlb
rorl
inc
or
sbb
imul
cmp
shl
outsb
pop
movsl
sarl
add
push
or
push
and
into
mov
fs
ds
and
mov
dec
cld
pushf
imul
xchg
stos
mov
mov
pop
pop
cmp
movsl
bound
or
dec
sbb
adc
scas
pop
in
mov
sub
adcb
push
mov
movsl
jne
adc
inc
sbb
cmp
les
lret
add
cmp
int
lods
sub
mov
jle
es
hlt
add
jb
pop
hlt
cmp
js
or
jp
mov
loop
fistps
push
les
dec
rorb
test
jne
add
sbb
das
or
popa
sbb
or
std
sub
fsubrl
jae
push
mov
inc
icebp
push
cmp
daa
push
push
out
nop
mov
dec
cltd
adc
push
loope
cwtl
push
push
lock
jns
test
adc
js
fwait
xchg
push
add
mov
push
subl
imul
fucomi
cmp
push
adc
pop
lods
inc
inc
ret
xchg
int
add
aas
inc
addr16
test
add
sbbb
inc
xchg
pop
push
xchg
addb
ret
mov
or
mov
dec
cmp
adc
rcpps
push
cmpsb
sar
add
or
scas
adc
cmc
test
pop
les
jge
push
mov
add
test
cmp
mov
mov
jno
test
and
addr16
outsb
stos
push
data16
pop
sbb
cmp
lods
jb
mov
mov
mov
loopne
fiaddl
nop
mov
scas
or
call
inc
int3
jg
xor
push
cmp
ret
ret
xor
fidivrs
sub
mov
jmp
fwait
and
push
mov
xchg
ljmp
inc
cmp
bound
mov
insb
cmp
cwtl
movsl
loope
ret
fisttpll
lcall
shl
push
lret
push
and
adc
adc
mov
mov
ja
enter
xlat
push
outsb
push
and
adc
cld
scas
and
pop
mov
dec
xchg
pop
fnstenv
insb
xchg
and
xor
push
cmp
and
dec
xchg
sub
add
in
les
sbb
test
push
dec
sub
rcl
lock
push
dec
bound
fucom
sti
testb
push
mov
adc
inc
arpl
xchg
aad
loopne
incb
loope
pop
mov
lods
pusha
mov
pop
adc
pop
adc
in
ret
pop
adc
xor
mov
movsl
xchg
push
dec
sub
cwtl
fsubl
sub
rorb
sbb
or
jbe
xchg
aam
mov
adc
ret
xchg
jmp
jno
loopne
int
faddl
adc
out
jl
cs
inc
cmp
push
fnsave
lahf
mov
fs
sub
xor
adc
push
or
and
decl
push
scas
and
sbb
adc
fsubs
sahf
add
fisubrs
out
adc
push
xor
test
and
mov
decl
dec
jne
jno
adc
pop
mov
push
and
jmp
cli
pop
adc
mov
shrb
iret
into
das
pop
mov
stos
push
cmp
adc
mov
es
inc
pushf
jg,pt
sub
mov
das
fistpll
shlb
rcrb
pop
mov
pop
push
stos
dec
xchg
pop
push
cwtl
jg
sbb
mov
lock
stos
sub
xor
xchg
in
pop
add
lods
lret
data16
cmpsl
inc
and
push
adc
dec
xchg
fsubl
mov
push
or
icebp
or
hlt
inc
popf
and
cmp
lods
pop
test
imul
and
je
sub
in
sbb
xlat
pop
mov
push
lahf
add
in
push
adc
aad
rol
mov
repz
cpuid
fs
ret
and
and
cld
mov
ds
std
scas
jl
jbe
shlb
adc
orb
sub
xchg
pop
jge
adc
mov
clc
or
or
jg
imulb
inc
adc
lcall
jo
adc
dec
imul
inc
cmc
mov
add
and
pop
adc
sbb
add
sub
das
sbb
jb
or
sub
rol
std
and
stc
aas
mov
adc
push
adc
lock
xchg
loope
jb
or
adc
mov
jo
adc
or
cmpsl
fiaddl
and
insb
push
insb
aam
and
or
ret
andl
xchg
or
push
scas
pop
inc
sbb
add
adc
mov
mov
sbb
sbb
jo
adc
and
scas
fldenv
scas
mov
imul
cmp
push
int
xchg
imul
mov
fwait
jmp
pop
rorl
fildll
adc
inc
and
loop
insb
shll
adc
inc
xor
mov
sahf
sbb
lods
dec
sub
out
xchg
fstps
test
xchg
xor
add
push
adc
lret
inc
int
xchg
pop
xchg
out
mov
addr16
mov
xchg
add
je
test
xchg
imul
push
mov
dec
mov
fdivs
pop
push
add
sbb
mov
push
rclb
hlt
adc
mov
push
lods
pop
cmp
sti
pop
lahf
mov
ljmp
add
push
jecxz
incl
adc
xlat
lods
pop
xor
pop
std
sar
negb
mov
push
adc
push
sub
jge
dec
outsl
inc
or
and
stos
fldcw
adc
sbbb
fwait
test
fs
sub
or
or
pop
adc
mov
cmpsl
loopne
movsb
adc
sbbb
stos
test
mov
mov
fidivrl
adcb
and
ffreep
shlb
cmpsl
dec
popa
xchg
or
mov
in
ficompl
sarb
stc
pop
adc
aam
pop
mov
dec
xchg
fisubrs
jo
adc
nop
aaa
inc
shll
push
adc
je
pop
adc
movsb
faddl
adc
or
add
repz
sub
vsqrtps
adc
pop
mov
jecxz
ret
ficoms
pop
inc
jne
mov
adc
adc
rorb
push
enter
sub
mov
notb
cmp
adc
push
mov
adc
sub
daa
dec
movsb
faddl
adc
dec
pop
lods
and
ja
rclb
push
cwtl
shll
fwait
push
insl
aad
fcmovne
push
shl
pop
dec
adc
jge
hlt
and
stos
je
add
push
jecxz
jge
adc
mov
aas
xor
aad
in
ficompl
jae
adc
sti
push
sub
or
shlb
cmpsb
xor
fldlg2
fildl
mov
dec
roll
adc
push
adc
lcall
push
sbb
idivb
mov
mov
sub
cmpsl
jp
adc
lea
add
sarl
es
sub
sbb
pop
sub
push
stos
pop
adc
test
dec
xchg
sub
and
push
adc
shlb
xchg
and
shr
popl
das
jecxz
cmp
addb
shr
cmp
mov
push
adc
jp
adc
inc
icebp
aaa
andl
cmp
mov
jb
sar
rcr
dec
and
xor
jns
outsl
add
or
push
adc
out
add
aas
imul
mov
adc
push
clc
dec
adc
lock
adc
fsubrs
insl
lds
aam
in
sub
add
jo
int
lock
cld
orl
adc
pop
popf
xchg
ljmp
pop
sbb
pop
cmc
push
jbe
addb
arpl
repz
sbb
add
adc
loopne
std
mov
outsb
rcrb
dec
push
lock
lcall
inc
in
int
jb
addb
dec
jae
ret
mov
cmpsl
outsl
int3
adc
mov
adc
add
lret
xchg
movsb
lds
adc
into
dec
int3
jle
adc
cmc
jecxz
lds
adc
adc
pop
adc
adc
adc
sbb
and
add
stos
xchg
sbb
jge
lcall
add
nop
xchg
or
adc
sub
push
add
rol
movsb
lds
adc
mov
inc
dec
ds
test
pop
adc
adc
dec
xchg
lds
adc
ljmp
movsl
int3
adc
or
fnstenv
addb
push
movsl
push
mov
lods
rcll
inc
lret
cmp
xor
xor
idiv
hlt
inc
adc
fstl
stc
jno
sub
in
mov
andb
inc
rolb
dec
push
insb
xor
pop
xor
adc
mov
cmp
and
adc
push
or
test
in
dec
adc
ds
icebp
enter
pop
sub
pop
jb
jle
popl
sbb
movsb
adc
xchg
out
dec
xchg
in
outsl
sub
xor
sub
outsb
fidivl
imul
push
jnp
adc
aas
xor
aad
in
int
push
shll
aaa
sub
scas
pop
xor
xor
cmpsl
dec
aaa
dec
int3
in
adc
fidivl
scas
push
fsts
adc
adc
mov
adc
fsubp
push
lds
adc
lds
adc
movsl
scas
shll
jle
jnp
adc
pop
jmp
push
stos
sub
cld
movsl
dec
pop
ljmp
test
addb
shl
mov
push
rcrb
dec
adc
lds
adc
bound
push
mov
sarl
mov
adc
in
dec
enter
sti
je
pop
adc
cmp
jge
adc
sub
inc
jnp
adc
je
lods
mov
ds
rorb
inc
inc
push
cmp
push
cmpsl
add
add
push
adc
add
lahf
aas
and
adc
jge
adc
das
or
pop
icebp
dec
xchg
mov
dec
int3
in
adc
fidivl
adc
or
mov
pop
adc
imul
push
adc
cmpsb
movsb
fwait
imul
sub
xchg
movsl
imul
das
mov
jecxz
pop
subb
outsb
or
push
adc
popa
mov
inc
sub
xchg
lds
adc
mov
pop
adc
pop
mov
in
mov
push
adc
test
or
xor
lods
inc
xchg
and
stos
cmp
test
les
adc
fs
push
dec
imul
sbb
test
loope
cmp
scas
outsl
jnp
mov
gs
pop
or
pop
imul
push
adc
stos
sub
sub
add
adc
pop
pop
jp
outsb
repz
add
add
pop
sbb
mov
xchg
xor
or
jae
mov
lret
mov
cmpsb
cli
into
insl
cmpsl
and
jne
ja
cmp
test
addr16
jg
adc
out
sub
push
fsubl
lods
mov
js
jg
adc
outsb
push
lock
mov
adc
dec
pop
xlat
jbe
leave
in
ljmp
mov
xchg
mov
mov
jg
sub
std
xor
push
enter
mov
inc
iret
push
mov
or
xor
cld
jo
adc
outsl
in
jne
xor
pop
mov
psubsb
in
mov
jb
jb
cs
adc
scas
je
pop
adc
cld
inc
call
adc
popf
shr
sbb
xor
aad
orl
jg
xchg
stos
push
pusha
adc
add
or
push
ret
add
adc
xchg
and
adc
popa
fmull
pop
in
shlb
cmp
jg
adc
movsl
mov
push
and
push
xor
sbbl
push
adc
movsl
add
pop
or
sub
pushf
or
mov
mov
inc
addr16
movsl
ljmp
push
call
test
pop
lcall
fwait
dec
inc
pop
xor
test
or
out
sbb
outsb
popf
mov
adc
adc
add
or
jge
cld
jo
adc
call
aad
add
adc
xchg
lods
fidivl
mov
dec
mov
pop
or
scas
dec
lods
out
aam
std
cmp
push
pop
sub
mov
jg
adc
insb
loope
dec
leave
push
push
pop
in
xchg
xlat
xchg
cs
aaa
cmp
test
mov
movsl
lds
push
sub
mov
mov
inc
fdivrl
adc
pop
sbb
inc
vunpcklps
out
and
sti
push
dec
jne
out
mov
inc
dec
or
in
ret
sub
pop
outsl
pusha
jle
pop
push
cltd
in
mov
and
push
or
into
inc
ss
xchg
xchg
lahf
aas
fcomps
loope
test
or
stos
icebp
or
lods
test
shlb
mov
lahf
aas
fcomps
test
jg
mov
scas
pop
jle
sbb
or
fs
lcall
pop
or
ficompl
jo
adc
mov
and
sbb
push
add
shr
cmpsl
pop
icebp
mov
lahf
cmc
mov
pusha
mov
rorl
jno
adc
dec
shld
mov
rcrb
adc
xor
lods
into
sti
jmp
jnp
push
pop
and
mov
sub
loopne
dec
lahf
nop
imul
aaa
inc
xchg
adc
push
stos
xchg
sti
into
ret
adc
adc
dec
lahf
mov
sbb
add
xchg
add
stos
clc
fsubrl
jne
jmp
sub
pushf
popa
rolb
mov
fwait
adc
adc
popa
dec
mov
jno
push
insl
push
xor
rolb
mov
mov
in
idiv
add
cmp
divl
rclb
les
or
adc
mov
sub
push
addr16
out
and
jbe
jmp
xor
loopne
push
clc
sub
lods
movb
push
mov
les
or
fldcw
aam
scas
xor
add
mov
enter
cmc
mov
jecxz
inc
push
or
sbb
sbb
test
sub
aas
dec
scas
addr16
push
les
or
fistl
xchg
mov
repz
mov
fs
add
adc
add
push
movsl
xchg
pop
ret
mov
inc
sbb
mov
pusha
les
or
aaa
push
js
add
neg
push
add
loop
mov
pushf
mov
add
lds
push
xchg
xchg
test
fnstenv
add
cmpsl
mov
dec
and
sub
rorl
lret
fildl
loope
lock
adc
sbbb
andb
cld
jo
adc
pop
mov
subb
ret
cwtl
movl
filds
mov
mov
inc
ret
ds
or
and
fidivrl
jp
mov
fs
pop
fstl
lds
dec
mov
mov
jns
jge
jge
jmp
outsb
jecxz
orb
cs
sarb
adc
jo
insl
sbb
mov
insl
jmp
jbe
mov
adc
enter
enter
aam
scas
fidivrs
arpl
fisubrs
xorb
inc
ret
push
adc
adc
cmpsl
cmp
adcl
mov
sub
mov
adc
pop
and
loope
pop
cmp
sbb
sarl
mov
push
adc
lahf
sub
movsl
push
insb
sbb
mov
jb
xchg
into
fnstsw
arpl
jae
subb
outsb
popf
fcoml
xchg
jne
iret
gs
or
and
push
and
popf
mov
in
push
or
push
iret
add
adc
popa
rolb
dec
ss
or
popa
in
xchg
lods
and
ficoms
imul
out
jg
adc
cmp
or
fsqrt
fldcw
jle
jg
adc
aas
fcomps
loope
mov
ljmp
or
lods
or
xchg
lahf
aas
or
adcb
xchg
and
scas
lret
push
adc
pop
jg
push
cmpsl
jmp
cltd
imul
jl
mov
push
das
fdivrl
pop
pop
add
in
jmp
jmp
cli
imul
push
jmp
jne
push
scas
sti
sbb
fwait
push
mov
jne,pt
dec
lahf
dec
cmp
aad
in
push
jbe
pop
or
jp
test
push
scas
xchg
cld
push
or
movsl
mov
cmp
pop
or
test
aas
call
or
push
test
daa
cmp
add
push
adc
pop
out
pop
jle
pop
push
lahf
mov
ljmp
mov
adc
int
sub
cmc
pushf
lret
cmc
sbb
into
repz
jle
hlt
lret
pop
mov
adc
fwait
js
rol
aas
jle
mov
xchg
sub
stos
fistpl
clc
jecxz
shlb
xor
lahf
aas
rorl
mov
sub
inc
mov
push
pop
jne
xchg
movsl
mov
cmp
xchg
or
and
push
push
adc
scas
pop
mov
or
sub
mov
insl
imul
mov
hlt
jae
adc
pop
fld1
cltd
sub
cmp
scas
push
stc
hlt
add
aam
lock
adc
jbe
mov
push
or
clc
pop
jg
dec
xchg
or
push
fdivs
xor
mov
cmp
shrb
stc
jae
cld
fwait
jmp
movsb
mov
shlb
out
je
pop
adc
in
lods
mov
pop
adc
sub
ds
xor
sub
dec
scas
sti
mov
jae
outsb
xabort
in
aam
outsb
push
stos
loope
lret
jbe
addr16
stc
cli
push
out
addl
adc
xchg
adc
push
jns
das
clc
or
pop
test
or
add
sub
ret
ja
lds
xchg
mov
jno
sbb
jg
lods
mov
push
xorl
out
stos
mov
icebp
rsqrtps
adc
cmp
movsb
faddl
adc
push
mov
inc
xchg
jmp
lcall
out
cmpsb
adc
aas
and
std
lods
pop
xchg
pop
mov
sti
sbb
mov
cmp
or
push
inc
cmp
push
xchg
jg
adc
js
in
pop
sarb
in
xchg
fistpl
sub
stos
sbb
jge
lcall
push
lods
gs
ja
subl
and
and
rcrb
test
add
clc
jnp
imul
in
add
push
jnp
adc
out
pop
imulb
dec
dec
shrb
fsubl
lock
mov
pop
testl
jl
scas
test
and
outsl
iret
and
inc
ljmp
mov
cmp
in
cmp
cmp
movsl
in
sbb
leave
push
mov
mov
xor
dec
dec
std
xor
cmp
xchg
addr16
call
pop
pusha
jbe
cmp
jnp
adc
enter
pushf
popf
insb
mov
daa
pop
or
push
adc
les
jno
push
and
add
lods
adc
addb
aas
xlat
ljmp
pop
jnp
adc
lods
push
scas
hlt
adc
dec
xchg
test
mov
or
push
add
dec
jbe
adc
pop
das
fcoms
pop
adc
mov
arpl
dec
lahf
aas
push
cmp
xchg
cs
aaa
lock
stos
clc
mov
test
in
fs
pop
pop
mov
dec
add
aad
in
jne
and
push
lods
push
scas
repnz
mov
scas
ficoml
jle
jge
xchg
mov
jns
test
cmpsb
inc
je
test
and
popa
lahf
aas
rclb
mov
inc
jno
pop
das
sarb
pop
into
push
sahf
cld
movsl
dec
call
popa
xchg
or
shl
into
mov
addb
pop
out
inc
sahf
cmp
shlb
and
std
sti
popa
adc
outsb
popf
pop
dec
push
stos
push
in
xchg
je
lds
in
cmc
cmpsl
add
mov
shl
jmp
push
fsub
fwait
pusha
loop
sub
jle
jns
add
inc
js
frstor
loope
sbbb
pop
mov
and
dec
lahf
inc
cld
rclb
adc
movsb
adc
jmp
shlb
sarl
add
adc
sti
cmp
mov
xor
stc
or
cmp
enter
pop
cmp
testl
inc
pop
mov
pop
sub
mov
mov
mov
mov
les
and
cmp
jmp
ret
test
rcr
adc
adc
fdivs
lahf
sbb
test
xor
push
push
pop
std
test
push
lods
ret
mov
stos
sub
mov
in
stos
cltd
mov
pop
and
xchg
xor
lock
fbld
cmp
test
pop
adc
jge
iret
psrlq
clc
pop
mov
fs
jge
mov
rcr
adc
adc
dec
sub
repnz
stc
inc
cs
je
cmpsb
stc
stc
jge
jo
add
push
mov
stos
stos
leave
arpl
pop
inc
jae
inc
and
shlb
jp
or
int
sbbb
jg
popf
loop
insl
sub
sbb
outsb
ja
lds
popa
clc
add
inc
jg
dec
cs
mov
adcl
dec
jle
inc
lock
rorl
push
mov
pop
enter
iret
pop
pop
xlat
ja
jno
xchg
ljmp
fsub
int3
sbb
fst
test
lret
ljmp
adc
fildl
adc
lahf
or
call
mov
sti
inc
clc
or
outsb
loopne
pop
pop
movb
push
jl
mov
mov
or
push
adc
xorb
in
sbb
imul
inc
inc
cmp
dec
sbb
mov
fwait
mov
insb
sbb
pusha
loopne
hlt
inc
mov
js
xchg
in
mov
lods
fimuls
sbb
xlat
test
enter
lahf
test
pop
adc
adc
pop
adc
mov
and
jge
shll
adc
in
nop
add
adc
jmp
mov
ds
test
jno
movsl
mov
sbb
jp
xor
pop
or
jno
cmp
leave
test
pop
or
jle
notl
nop
cmp
push
and
bound
pop
xor
jp
sub
movsb
push
jmp
mov
jp
notl
scas
mov
out
xchg
adc
sub
pop
sti
jno
pop
dec
push
dec
pop
or
testb
jno
adc
je
aad
and
jmp
fwait
adc
cmc
mov
addl
mov
mov
pusha
sub
ja
vandps
xchg
or
mov
jg
into
inc
mov
fsubr
xchg
arpl
movsl
dec
cmp
decb
loope
inc
mov
lds
shrb
stos
inc
sbb
je
je
orb
dec
jne
jo
adc
add
xchg
cs
jmp
and
and
xor
in
js
sti
pop
js
mov
scas
mov
sub
scas
mov
lea
xchg
xlat
mov
orl
movsb
adc
test
mov
mov
push
push
push
std
sti
jge
scas
into
adc
mov
cmc
adc
mov
shr
xor
in
inc
or
jae
push
dec
pop
mov
stos
push
shlb
jecxz
jg
adc
fwait
js
lods
data16
cltd
sti
idivb
addb
shl
mov
push
pop
das
or
inc
rorl
adc
in
push
mov
mov
mov
jno
mov
sub
pop
mov
dec
xchg
xchg
aad
lahf
aas
jle
ss
in
fisubl
push
adc
push
stos
outsb
adc
push
arpl
inc
movsl
dec
cmp
jle
ret
mov
lret
je
push
adc
jmp
push
jl
dec
popa
lds
and
jbe
ss
outsl
add
es
or
xchg
sub
push
stc
hlt
movsb
mov
and
push
ja
xlat
and
mov
xchg
sub
cmp
dec
and
out
push
xchg
xchg
add
fldcw
xlat
mov
adc
addb
stos
nop
fcmovnu
cmp
pslld
sub
mov
and
add
call
mov
call
lock
pop
cmp
or
push
adc
lahf
add
mov
ffree
mov
sbb
adc
test
adc
xchg
adc
imul
int3
mov
fmull
pop
sub
lahf
or
test
cmp
in
mov
xchg
scas
sarb
xor
pop
dec
cmpb
pop
nop
je
add
xor
jg
add
mov
xorl
xorl
pop
adc
pop
mov
cltd
or
movsl
mov
adc
adc
andb
movsl
xchg
ja
in
cmp
cmp
loopne
stos
cwtl
jnp
adc
push
cwtl
cmp
mov
imul
cltd
orb
inc
fisubrl
inc
cmpl
mov
mov
out
ja
and
xor
cltd
push
jge
jge
bnd
repnz
ja
mov
mov
aaa
xor
bound
rorb
xchg
push
imul
in
insb
nop
jb
in
push
cmc
xor
xchg
or
xor
push
and
mov
pop
mov
add
xchg
and
sbb
cld
jp
pop
bound
ret
shrb
mov
cltd
jnp
lds
clc
or
push
adc
push
jle
push
mov
scas
lods
mov
sub
popa
xchg
in
inc
push
mov
adc
jno
cmp
insb
movsl
push
mov
mov
inc
fmuls
mov
lea
sub
inc
sbb
dec
push
outsl
test
mov
nop
aad
push
mov
xchg
jge
test
and
jo
test
sub
and
cs
pop
push
adc
and
cmp
aas
jle
test
adc
push
stos
fldcw
adc
mov
je
out
push
sub
xchg
call
mov
sub
or
sub
xor
aad
push
std
sti
loope
adc
xchg
adc
test
lea
ficoms
cmpsl
dec
in
inc
or
int
into
cs
cmp
jns
pop
xor
popf
test
fs
sub
shr
into
cmp
and
inc
mov
push
loope
sbbb
sbb
mov
pop
sub
popa
lahf
aas
add
adc
test
adc
roll
aas
scas
pop
sub
cmp
add
lahf
aas
xlat
fsubrl
xor
daa
sbb
shlb
mov
and
lods
add
inc
push
std
sti
test
mov
push
mov
add
stos
push
fisubrl
xlat
lock
sub
aaa
inc
shll
stos
or
scas
jmp
dec
pusha
repnz
jle
jnp
adc
mov
test
mov
fbstp
mov
pusha
shrb
or
mov
sub
fldcw
inc
inc
movsl
dec
imul
in
xor
mov
and
adc
pop
mov
test
repnz
dec
out
and
and
cmpsb
fwait
pop
rol
adc
aam
xchg
je
push
cltd
ret
xor
lds
clc
cmp
push
add
mov
cmpsl
fidivs
mov
jb
push
dec
rolb
mov
addb
daa
push
je
inc
adc
loopne
cltd
jge
jbe
cmp
adc
pushl
clc
mov
xlat
in
popf
sub
xlat
ss
dec
mov
test
add
iret
sub
push
sub
mov
adc
addl
mov
push
mov
fxch
andl
mov
outsb
fdivrp
rcr
add
out
pop
dec
jnp
scas
jl
mov
sub
stc
mov
arpl
push
shlb
push
sub
jl
ficoml
fsubl
je
add
jg
je
pop
adc
mov
mov
jo
ss
fwait
je
pop
adc
je
pop
adc
in
sbb
test
cmp
fs
adc
dec
add
push
shll
dec
pop
je
pop
adc
movsb
faddl
adc
push
sbb
lcall
rep
jecxz
cmpb
cltd
pusha
jb
sahf
xorb
mov
and
test
push
cmp
dec
out
cld
sub
xor
mov
mov
push
gs
inc
ds
push
inc
and
loop
add
aaa
or
in
sbb
insb
jl
adc
sbbl
xchg
lods
push
push
adc
pop
fwait
lret
xor
aad
das
xchg
test
inc
add
adc
adc
pop
adc
addl
adc
inc
add
pop
adc
pop
push
sbb
pop
mov
daa
pop
xor
or
mov
or
pop
adc
and
or
cwtl
and
scas
pop
or
pop
adc
adc
ror
divl
data16
vmulpd
xor
cmp
leave
movsb
xchg
cmpsb
mov
je
pop
adc
lcall
lds
je
pop
adc
popf
dec
add
adc
decb
lret
mov
faddl
adc
lock
adc
sub
ljmp
jmp
jbe
xchg
xor
mov
scas
xchg
mov
mov
punpckldq
addl
shlb
mov
shll
fists
xchg
dec
dec
add
std
push
dec
bound
std
aas
repnz
add
xchg
nop
mov
push
or
fldcw
mov
push
or
rcrb
adc
xor
push
addl
push
inc
cld
jo
adc
adc
pusha
rcl
xor
pop
or
push
adc
insl
and
adc
xchg
jge
sub
add
or
std
adc
jo
adc
shrl
pop
or
push
inc
add
adc
adc
or
pop
inc
push
jle
sti
cmp
pop
or
rorl
jo
adc
stos
popf
cld
push
or
jmp
adc
fs
or
cltd
sub
out
adc
pop
or
arpl
cld
push
or
aas
xchg
cld
jo
adc
adc
mov
pop
mov
adc
xchg
xchg
sarl
vunpcklpd
mov
inc
stos
pop
out
pop
loop
inc
push
das
or
in
push
lods
pop
mov
stos
sub
gs
fcmove
push
cmp
cmp
push
pop
sub
mov
pop
mov
pop
sub
xor
pop
adc
mov
push
sub
mov
scas
dec
xchg
sub
add
mov
call
test
arpl
mov
inc
lods
rclb
dec
push
push
stos
cmp
and
dec
pop
vmaxss
or
sbb
xor
je
lea
or
ja
shll
inc
out
pop
adc
pop
pop
nop
xchg
pop
push
inc
je
xchg
jg
mov
push
daa
push
mov
mov
ds
jg
cmp
movsl
inc
pop
in
and
stos
pop
mov
adc
scas
dec
inc
xor
adc
or
adc
xorb
push
pop
in
jo
adc
sahf
leave
les
adc
or
clc
inc
jno
sti
lds
cmp
aas
inc
ljmp
mov
adc
aam
push
adc
push
aas
and
push
cmpsl
cmp
outsb
mov
jl
add
out
imul
add
xchg
inc
sbb
andl
or
jo
fdivr
pop
adc
adc
shl
imul
decb
or
push
adc
lret
cmpsl
or
call
outsb
sub
ljmp
adc
icebp
fimuls
aaa
or
pop
adc
rorb
sbb
push
adc
shll
scas
addr16
sub
push
adc
xchg
adc
repnz
push
adc
cmp
lcall
and
sub
popa
out
dec
fildl
test
jmp
test
sbb
inc
and
outsb
xor
and
rorl
stos
mov
rolb
push
out
rcr
sbb
jae
mov
add
lret
or
pop
fistpll
fnstsw
pop
aad
xchg
ret
pop
jne
pop
xor
sub
sbb
jno
adc
fidivrl
jle
and
push
aam
addr16
pop
out
scas
mov
push
adc
dec
and
cltd
outsl
mov
push
adc
lret
push
outsb
sub
cld
stc
mov
push
mov
mov
shrb
sbb
das
test
leave
js
movsl
mov
mov
and
adc
pop
pop
cmp
mov
xchg
out
je
adc
mov
fs
cmp
insb
in
mov
out
xor
push
jno
jae
ret
mov
mov
aam
xchg
sub
mov
mov
xchg
pop
lods
inc
adc
pop
out
mov
push
filds
jae
loop
push
sub
je
cmc
es
rcr
mov
lods
mov
imulb
fldcw
mov
add
cmpsb
mov
adc
jl
or
test
dec
test
sub
mov
cmpsb
popf
jecxz
faddp
pop
loopne
rorb
mov
xor
adc
rcrl
lcall
mov
mov
sti
jge
movsl
mov
pop
pop
cmp
jmp
fidivrs
test
xor
jg
push
outsb
les
js
jo
xchg
fsubrl
jecxz
fldl
lahf
fldcw
sub
push
push
push
pop
int3
cli
inc
jp
js
xchg
ficoms
sub
pushf
jae
stos
push
and
das
stos
inc
mov
push
cmpsl
dec
xor
pop
ss
daa
test
adc
lods
pop
ss
popa
cmc
nop
mov
cmp
data16
rcl
sub
and
fildll
je
lahf
jl
or
adcl
pop
mov
or
xor
ret
add
pop
scas
outsl
clc
add
inc
sar
jmp
jmp
or
xor
repz
aam
sbb
pop
imul
xchg
mov
fsubrp
adc
fidivl
sub
jo
aam
xor
mov
in
add
dec
jl
fldl
lahf
fldt
sub
gs
cmp
fisubrs
ljmp
sbb
lahf
out
aas
test
lcall
scas
movsl
movb
clc
out
lods
out
fdivs
mov
sub
xor
aas
cmp
sbb
pop
into
pop
and
sbb
mov
sbb
sub
stos
pop
lods
lds
stos
lods
scas
sub
adc
sub
add
addl
rcrl
jns
mov
mov
mov
pushf
dec
adc
mov
clc
in
ret
ret
xor
mov
dec
inc
call
fiaddl
mov
adc
std
or
dec
push
incb
bound
jl
jle
push
cmp
or
sbb
inc
jns
test
aas
and
mov
mov
cld
pop
xchg
xor
xchg
or
outsl
movsb
mov
and
cmpl
dec
cmp
cmc
add
lahf
test
clc
xchg
pop
jmp
push
scas
pop
rcrb
pop
cmc
inc
call
stc
xchg
addb
out
mov
xlat
mov
mov
xor
xchg
popa
or
jecxz
mov
jnp
pop
adc
xor
in
insl
push
imul
mov
rep
xor
lea
cwtl
sub
jmp
ja
aad
popl
mov
jl
dec
shrb
inc
jae
addb
xchg
imul
pop
popf
push
push
leave
jmpw
ds
mov
std
test
fsts
pop
add
insb
xchg
pop
cmp
xchg
icebp
cmc
cmc
jns
mov
das
pop
loopne
adc
mov
jle
pop
and
pop
pop
lods
pop
call
stos
pop
mov
jbe
jae
jp
aad
insb
pop
sarb
fcoms
sbb
test
and
dec
sbbl
push
cwtl
mov
or
in
pop
outsl
inc
test
rcl
jl
add
cld
adc
mov
sbb
stos
js
lods
or
xchg
lahf
pusha
addl
push
inc
pop
vphaddbq
dec
mov
xchg
mov
push
mov
sbb
gs
in
pop
and
mov
mov
adc
push
icebp
or
push
jne
jae
cs
lods
fidivl
dec
lahf
pop
rolb
or
and
inc
and
sub
jge
sub
in
mov
test
pop
or
loop
imul
push
mov
jge
sub
xchg
add
dec
repnz
loope
mov
inc
sub
fwait
loopne
pop
lea
sub
push
lds
cli
rep
adc
in
adc
lods
inc
inc
add
jg
mov
xchg
pop
xchg
add
or
hlt
pop
cli
sbb
push
ljmp
adc
jle
mov
xchg
adc
movsl
cmp
sbb
ja
pop
push
xchg
rcll
add
xchg
and
out
pop
cmp
or
adcb
push
adc
lock
mov
push
adc
lret
movb
mov
aam
enter
push
pop
xor
es
leave
dec
lahf
aas
jle
or
mov
mov
mov
in
mov
imul
subl
push
ret
or
cmpsl
xchg
rcl
inc
sub
lds
imul
hlt
inc
int3
mov
in
mov
sbb
push
test
fisubs
push
jp
leave
dec
fisubrl
mov
jo
xchg
fidivrl
mov
mov
adc
scas
mov
jae
adc
jne
rcr
push
fsubrs
xchg
dec
jl
aam
sub
hlt
xchg
mov
xor
stos
push
mov
jmp
push
sub
push
jno
mov
add
xor
fst
mov
lcall
add
or
in
xchg
push
adc
movsb
inc
add
push
jle
adcb
insl
dec
jne
pop
pop
call
pop
cmp
xchg
push
adc
fdivrp
dec
inc
mov
lea
aas
inc
addr16
pop
cld
insl
aaa
lret
and
pop
movsb
mov
adc
scas
das
mov
mov
imul
cmp
adc
inc
dec
jecxz
mov
or
sub
dec
mov
mov
pushf
in
push
mov
inc
inc
ds
jae
cld
xchg
push
adc
cltd
popa
pop
stc
cli
test
add
xor
inc
mov
adc
push
jne
rolb
pop
mov
xlat
movsl
sbb
test
xorb
int3
mov
movsbl
xor
repz
sarb
push
cmc
cs
push
push
fs
lds
cmp
sbb
stc
sbb
mov
cli
int3
ds
popa
pop
out
jmp
sbb
in
clc
ret
aaa
fisttps
in
idivb
and
ss
push
addl
test
dec
addr16
pushf
sarl
mov
enter
ficompl
movsb
push
sbb
incb
fwait
subb
mov
inc
outsl
popf
lcall
xchg
mov
and
adc
mov
inc
and
sub
bound
sub
js
movsb
pushf
cmp
lea
scas
mov
jno
inc
push
mov
or
adc
cmpsl
stos
mov
in
clc
movsb
lock
shll
pop
fisubl
add
sub
or
sbb
and
dec
mov
xchg
or
inc
repz
lds
add
sbb
lea
xor
dec
lahf
outsb
stc
push
addr16
jle
arpl
push
lds
add
jmp
sub
popa
call
cmpl
xor
call
loope
jge
push
hlt
pusha
push
movsb
fmuls
stc
rolb
rcl
pop
push
ja
adc
sbb
rcrl
in
push
sub
daa
pop
jecxz
sbb
scas
sbb
repnz
js
mov
lods
cmp
lea
mov
push
adcb
or
add
add
test
lock
loope
les
nop
mov
inc
and
sub
jp
imul
adc
out
fs
fadd
pop
lock
inc
imul
dec
leave
in
in
sub
pushf
push
mov
roll
mov
dec
dec
mov
xchg
inc
mov
stos
xchg
into
js
mov
dec
ja
shlb
adc
mov
jl
dec
inc
xchg
sub
push
or
shrl
adc
movsb
push
mov
lods
xchg
jb
rcl
cmc
pop
in
xor
push
adc
mov
sar
mov
je
or
lods
shlb
add
leave
in
pop
mov
sbb
rcrl
in
push
sub
clc
jl
jmp
mov
scas
add
popa
fsubrl
in
or
inc
mov
cwtl
mov
pop
clc
jl
jmp
mov
fwait
push
inc
sbb
fldl
ljmp
adc
sbb
daa
adc
or
fs
jl
lock
fists
push
dec
inc
add
shll
mov
dec
aad
add
push
aam
jge
in
ljmp
cs
outsl
pop
fistps
adc
or
xor
adc
sub
cli
jo
fisubl
pop
lods
imul
mov
xchg
cmpsb
shll
add
inc
lods
mov
dec
js
test
stos
es
rcrl
cs
sub
dec
lret
pop
sbb
frstor
push
es
js
mov
pop
mov
aas
das
push
in
pushf
add
test
mov
fisubrl
push
stos
mov
les
popa
fmul
pop
hlt
popf
sbb
out
inc
in
sub
mov
inc
fisubrl
xor
mov
add
cmp
push
push
jae
dec
sahf
test
sub
jmp
mov
mov
outsb
and
jp
imul
push
lcall
ss
xlat
and
lods
out
loopne
xchg
cmp
or
add
jae
addb
imul
movsb
mov
scas
aam
add
add
dec
or
insb
shl
push
adc
lahf
push
lahf
add
cltd
push
push
pop
dec
jno
pop
or
cmc
loope
inc
sahf
xchg
adc
jb
sub
push
mov
ds
in
repz
xchg
popa
cld
sti
and
out
inc
or
cmp
fdivr
mov
int3
fsubr
out
jecxz
ds
jae
es
ret
idivb
aad
xchg
jl
jae
out
mov
loopne
int
adc
and
cmp
and
xchg
pop
add
es
jp
repnz
fists
xor
jmp
inc
mov
xchg
and
mov
lods
pop
aaa
mov
repz
jnp
cmpsb
stos
xor
sahf
pushf
jae
mov
jns
loope
and
lret
out
inc
or
xor
xchg
push
adc
sbb
inc
sbb
jns
add
test
sbb
sarb
inc
xchg
fs
inc
ret
int3
je
stos
scas
sbb
mov
xor
push
add
adc
aas
xchg
pushl
out
and
dec
xor
fld
xchg
ret
fisubrl
icebp
push
adc
ficoml
out
jge
add
adc
icebp
pop
jb
xlat
pop
mov
je
adc
aad
sarl
cmp
adc
cltd
pusha
pop
sbb
or
mov
push
adc
pop
dec
dec
push
ficoml
mov
push
adc
pop
cmp
mov
xchg
testb
mov
mov
cmp
push
shll
popl
inc
ficompl
lahf
fcomps
stos
popa
sahf
popf
daa
adc
push
adc
push
dec
adc
je
adc
stos
stos
xor
pusha
je
adc
daa
sbb
push
xchg
push
adc
push
scas
lds
pop
clc
scas
repz
pusha
add
cld
xchg
push
adc
push
sti
jl
ficompl
je
adc
sbb
sub
popf
jmp
call
icebp
fs
leave
push
test
and
sahf
jno
xchg
add
ret
pop
ds
pop
movsl
fmul
jne
cmc
out
or
inc
inc
mov
xchg
icebp
and
gs
mov
in
mov
lods
pop
push
outsb
jno
std
mov
cmp
cmp
xchg
sub
hlt
inc
les
jp
sbb
cli
jno
sub
add
pop
call
fs
call
lahf
stos
xchg
and
fidivrs
sbb
lods
nop
in
shlb
movsb
loop
cmp
adc
xor
stos
stos
jo
nop
push
mov
add
xchg
sub
fisubl
dec
ljmp
outsb
pop
cmp
xor
pop
adc
jmp
pop
outsl
pop
mov
dec
insb
push
mov
iret
pop
sbb
xchg
sub
adc
and
shll
shl
jb
faddp
out
and
mov
cmpsl
scas
push
stc
cwtl
sub
in
dec
sar
rcl
jno
pop
call
inc
pextrw
mov
enter
cmpsl
aad
test
and
lea
pop
fisubrl
call
je
push
rorb
lret
ja
loope
mov
sbb
bound
mov
sbb
lds
jb
andb
xlat
dec
stc
pop
xor
stos
fchs
and
testl
adc
sub
cwtl
lahf
cmp
mov
pop
ret
subb
fsubr
mov
nop
sub
add
iret
ret
test
fwait
mov
pop
ss
inc
pushf
inc
scas
ret
movsl
xor
stos
shlb
call
clc
mov
jg
xchg
mov
jb
lahf
cmp
add
shll
push
adc
fisttps
repz
scas
xchg
and
add
insl
push
jno
bound
lahf
iret
xchg
xchg
and
and
insb
adc
dec
xchg
mov
lcall
push
jecxz
mov
sbb
shrl
subb
jle
adc
lret
push
or
leave
push
pop
out
scas
or
jo
dec
addr16
out
das
lods
jp
outsl
dec
push
jb
cmp
mov
xor
movsb
cld
insb
or
sbb
jb
sbb
out
iret
push
movsb
jbe
push
stos
inc
orl
jl
sbb
movsl
and
cmp
and
lods
jae
sub
pop
dec
jg
mov
push
and
lods
flds
pushf
shrb
or
xchg
xor
int
fs
sbb
push
pop
movsb
shl
inc
ss
mov
adc
jno
mov
mov
fimuls
pop
mov
lock
mov
outsl
push
and
jbe
les
jb
mov
enter
adc
push
mov
lahf
sahf
mov
arpl
xchg
dec
leave
pushf
insl
push
outsl
loope
and
xlat
loop
and
pop
jle
loopne
jmp
jmp
xor
push
scas
inc
jl
jno
adc
fcoms
dec
pop
xor
addr16
pop
in
js
mov
push
pop
loopne
std
insl
imul
out
dec
jnp
test
mov
ret
sti
jl
test
nop
mov
clc
mov
cmpsb
sbb
fisttpl
mov
mov
loop
scas
adcb
enter
and
mov
fisubrs
test
lods
pop
cmp
adc
lods
movsl
stos
pop
out
pop
mov
jae
pop
pop
ds
lahf
mov
add
or
dec
push
sub
cmp
sub
xchg
xchg
jmp
ficomps
sub
xor
xchg
xor
sub
dec
stos
adc
inc
into
push
cs
adcb
mov
cmp
into
dec
sbb
fiadds
cwtl
shll
push
inc
push
sub
shlb
or
cmp
lods
cltd
mov
adc
fcoms
pop
dec
inc
add
scas
mov
pop
pop
bound
std
jno
adc
dec
fisubl
pop
jl
scas
int
add
out
inc
mov
fisubrl
mov
or
or
das
mov
dec
adcl
push
inc
cmpsb
pop
mov
test
popf
lea
loope
sbb
xchg
lods
cltd
mov
lahf
sub
fwait
inc
out
jmp
je
ljmp
mov
dec
insl
push
push
subb
sbb
mov
xor
jbe
cmp
sub
daa
lds
adc
jmp
sbb
pop
push
xor
subl
stos
cmpsb
arpl
jbe
test
dec
xchg
cmpsl
sbb
out
roll
and
jle
jmp
dec
out
cwtl
mov
aaa
fists
sbb
mov
addr16
and
mov
sub
cmp
fcmovnbe
jge
xor
or
push
mov
xor
imul
movsl
mov
stos
les
mov
mov
xchg
les
out
xacquire
lret
imul
inc
lret
mov
jbe
adc
dec
mov
mov
sub
repnz
sub
aas
popf
sbb
sbb
loop
xchg
pop
pop
mov
cmp
out
test
jl
or
enter
inc
mov
push
sbb
sub
test
idiv
sub
cmc
pushf
sahf
inc
xchg
add
inc
clc
lock
xor
sub
or
aas
fwait
pop
popf
push
add
mov
inc
cmp
aad
push
scas
enter
lcall
adc
xor
mov
pusha
rorl
cs
sub
cmp
mov
ljmp
cmpsl
xor
call
dec
shlb
xor
mov
jns
pop
fstl
fyl2xp1
rcrl
xor
ja
adc
gs
dec
xor
out
cwtl
mov
in
push
mov
mov
pop
or
xor
xchg
wbinvd
pop
scas
pop
jb
aaa
jmp
cmp
hlt
call
stc
ds
sub
mov
data16
lds
and
and
insb
push
dec
inc
push
fisubl
dec
iret
ja
rorb
sbb
fists
loop
cli
int
mov
jp
fstl
insl
inc
adc
mov
ror
arpl
scas
scas
into
cmpsl
mov
pushf
cld
stc
add
dec
inc
lock
push
and
sbb
mov
addr16
stos
mov
pop
and
call
pusha
mov
cmp
int
mov
lret
push
xor
test
push
hlt
loop
sarb
stos
cltd
aas
jle
int
shrb
xlat
push
movsb
pushf
jns
popa
cmp
add
ficoml
inc
lahf
dec
cmpsb
dec
push
fiadds
lahf
aas
or
in
adc
fidivl
call
push
repnz
cwtl
sbb
pop
lods
mov
mov
xchg
or
push
pop
inc
scas
mov
mov
fstpl
jno
jmp
xor
cmpsl
dec
in
cld
or
lret
jecxz
or
stos
fildll
imul
cmp
fldenv
or
addr16
inc
imulb
lds
ret
inc
or
cmp
push
fwait
out
mov
adc
xchg
cs
mov
scas
popa
lahf
jmp
push
push
cmpsl
dec
add
je
shlb
inc
mov
std
adc
pushf
cmp
fcmovu
push
cmp
leave
push
jbe
lahf
pusha
inc
jl
aam
mov
push
fbld
lahf
and
lods
or
mov
inc
scas
mov
mov
fidivs
das
mov
sbb
adc
push
mov
mov
sub
pop
inc
fidivrl
lahf
movsl
xchg
push
lock
sub
xor
inc
fcomps
ret
cmp
or
dec
xorl
mov
push
scas
daa
movsl
imul
les
outsb
or
test
imul
mov
and
scas
mov
sub
xchg
fstpl
sub
mov
inc
mov
lock
data16
mov
xlat
sub
call
pusha
jmp
and
sbb
pop
pop
shrl
testb
or
rcl
jle
mov
cmc
xchg
cmpsb
push
sbb
sub
dec
shrb
stc
jp
xchg
cmpsb
pop
mov
fcomp
movsb
dec
aam
in
xlat
aam
push
ret
scas
mov
dec
adc
inc
cmp
hlt
push
out
sub
scas
push
mov
jecxz
pop
shll
cwtl
pop
and
loope
pop
clc
cmc
mov
pop
inc
jl
out
inc
inc
aas
int3
movsl
out
push
cmp
fdiv
dec
xor
mov
jno
inc
std
xor
loop
cs
mov
lds
mov
mov
push
jge
sub
ret
or
and
mov
setp
cmp
push
dec
mov
push
mov
sbb
mov
push
roll
xchg
xchg
cmp
inc
lcall
cld
mov
mov
movsl
sbb
cltd
ljmp
pop
outsl
xchg
jbe
mov
aas
cmpsl
mov
insl
mov
mov
sub
xor
jne
jae
push
push
xchg
inc
fwait
sahf
test
inc
sbb
cmc
xor
push
mov
push
shl
push
popw
cs
adc
mov
push
inc
sub
sbb
imul
hlt
push
or
pushf
stos
repz
xchg
leave
adc
stos
mov
leave
and
jbe
movsb
sarl
imull
out
or
stos
insb
pushf
outsb
repnz
imul
mov
jnp
sub
mov
mov
dec
add
std
cwtl
and
dec
add
lods
pop
rclb
xchg
mov
jo
adc
xor
mov
push
xchg
sub
xor
sbb
mov
or
pop
or
push
adc
jp
addr16
sahf
insl
cli
adc
out
push
jb
repnz
push
jge
lods
sahf
cs
xor
aad
or
test
lret
stos
push
cmpsl
out
mov
subb
lods
push
jns
sbb
stos
mov
aas
cltd
sub
je
dec
or
scas
jno
js
ljmp
mov
adc
movsb
roll
mov
ljmp
and
fisttps
inc
sub
mov
lods
mov
sarl
int
sbb
xor
sub
jo
ficoml
lds
movsb
pop
pop
mov
push
cmpsl
cmp
mov
cs
adc
ret
sahf
jno
push
inc
adc
fs
adc
sahf
push
cmpsl
xor
roll
push
daa
jl
mov
adc
add
inc
ljmp
pop
mov
test
enter
rcl
or
pop
pop
push
sub
lock
loop
cmp
enter
imul
scas
push
cmpsb
jne
aad
shlb
push
mov
add
test
mov
or
addr16
cmpsw
pop
xor
out
in
push
and
enter
sbb
sub
cmpsl
dec
ljmp
and
mov
xchg
testb
mov
stos
cmp
lahf
aas
or
and
sti
mov
in
xchg
icebp
cmpsb
ds
cmp
inc
lock
sub
cmpsl
fisubl
push
push
test
cwtl
imul
imul
movsl
icebp
xchg
sub
cmpsl
fisubl
push
push
test
js
mov
and
fcomp
in
add
shl
adc
and
out
addb
adcl
aam
fsubrl
aam
inc
mov
popf
ljmp
push
adc
arpl
adc
enter
mov
pop
adc
divb
push
loopne
dec
fldenv
add
or
test
mov
out
mov
cmp
adc
pop
and
xor
xor
mov
popf
fidivrs
inc
daa
push
and
cmp
lahf
sbb
lds
adc
adc
mov
pop
adc
pusha
decl
xor
popa
mov
mov
adcl
scas
je
sbb
cli
ret
jmp
jp
iret
cmc
xchg
pop
ret
fs
gs
lods
lds
adc
jbe
je
hlt
adc
push
call
pushf
insb
xchg
push
adc
add
xor
es
inc
ja
dec
loope
sub
lds
adc
movsb
int3
lds
adc
xor
test
push
int3
lds
adc
push
imul
rorl
push
mov
xorb
sahf
das
mov
or
insl
add
repz
bnd
popf
loop
imull
in
or
push
mov
lds
adc
adc
pop
cltd
xorb
dec
in
fs
push
adc
mov
and
adc
mov
ficoml
lret
je
testb
or
pop
aad
jp
add
fs
jae
adc
out
out
out
dec
dec
push
insb
sbb
aam
mov
add
enter
pop
xchg
push
adc
fadd
jmp
loope
pop
ret
push
adc
stos
jno
out
adcb
fadd
pop
adc
mov
cli
and
push
sub
nop
xor
jns
pop
adc
mov
lods
dec
test
xchg
cmpsl
sub
popf
test
daa
movsb
and
and
imul
dec
push
inc
sbb
sarl
xor
or
xchg
addr16
call
pop
adc
inc
jb
pop
data16
xor
push
outsb
mov
rcll
insb
out
pop
adc
iret
fdivp
and
sbb
ret
aad
xor
iret
and
jge
pop
les
inc
imul
jbe
xchg
mov
sub
xchg
scas
pop
push
jecxz
xchg
push
adc
fwait
mov
jle
ret
adcb
ds
aad
pop
and
and
imul
dec
lahf
stos
adcb
xchg
fwait
sbb
pop
adc
and
out
test
xchg
out
mov
xchg
pop
sub
dec
lahf
aas
push
sbb
out
mov
das
and
scas
pop
push
push
pop
stc
popf
lock
lods
pop
mov
jno
std
sti
mulb
sarb
insl
adc
fisubrl
ljmp
pavgw
dec
int3
ret
and
es
fnstenv
push
rcrl
stos
call
sub
and
xor
xor
and
arpl
or
or
aas
rorl
cmp
or
and
in
lods
cmpsl
lods
or
movsl
out
xlat
and
loopne
aas
jle
inc
cmc
adc
cmp
imul
push
sub
mov
dec
pop
inc
test
mov
addr16
jle
and
inc
jge
clc
mov
mov
sar
pop
js
sbb
mov
push
push
inc
jns
mov
enter
adc
dec
fmul
push
and
std
das
sar
cmc
mov
xchg
out
mov
xchg
in
imul
push
test
mov
pop
jmp
out
aam
fsubr
xchg
fcmovnbe
push
mull
fstl
sahf
popa
sahf
mov
mov
sarl
xor
pop
adc
icebp
loope
xor
pop
adc
push
inc
xor
movb
popa
push
fsubrs
dec
xchg
pop
cmpsl
dec
xchg
and
pop
adc
xorb
ret
cs
aam
std
push
push
scas
push
stos
adc
jno
xlat
aam
ds
cmp
and
sarb
cmp
sub
jle
je
xor
sbb
mov
popf
adc
out
dec
insl
xor
iret
stos
mov
pushf
cld
sub
jl
mov
pop
adc
jae
push
xchg
push
adc
xchg
jg
icebp
lahf
add
sbb
inc
scas
or
dec
push
pop
mov
xchg
sti
subl
mov
jp
jecxz
inc
jl
xor
pop
adc
push
dec
out
ret
mov
fucom
imul
sbb
imul
fdivs
mov
mov
test
push
adc
jecxz
cmpsb
mov
jae
adc
ret
std
jae
cmc
dec
data16
mov
imul
cmp
clc
sub
dec
subl
push
arpl
ljmp
or
mov
xchg
xor
mov
stos
sub
push
adc
mov
das
cmpsb
and
sbb
mov
js
aad
arpl
xor
insl
mov
mov
jle
push
mov
pop
adc
push
jae
adc
mov
fwait
cmc
movsb
sbb
cmp
pop
outsb
adc
add
push
inc
popa
lret
pop
and
or
pop
enter
cmp
jle
and
sub
ret
add
push
pop
std
in
xchg
dec
test
ja,pn
jae
adc
cmp
push
adc
scas
movsl
add
push
jnp
mov
sbb
and
sub
je
pop
adc
incl
movsl
mov
imul
out
in
cmc
lret
or
xorb
stos
arpl
test
in
je
xchg
bound
rol
rorl
mov
xchg
mov
sub
pop
adc
xchg
push
adc
xchg
inc
jge
or
lods
fnstsw
hlt
loop
push
mov
test
cmp
faddl
adc
pop
loop
and
out
into
cmpsb
pop
xchg
in
jle
sti
and
dec
inc
sbb
jmp
add
push
test
dec
jecxz
or
fsubs
mov
imul
fcmovb
shrb
sub
inc
push
mov
lcall
aad
jle
sti
loop
test
adc
mov
stos
push
mov
jle
sub
push
adc
std
insb
sub
loop
adc
inc
mov
push
pop
push
test
das
add
inc
lds
and
push
decb
sub
in
es
adc
dec
arpl
dec
movsl
dec
cmp
decb
cmpsl
pop
mov
jns
shlb
pop
adc
in
dec
cld
in
jmp
daa
sbb
std
sti
idiv
es
xchg
pop
pop
aaa
xor
stos
je
push
das
enter
movsl
in
arpl
cmpsl
dec
lahf
nop
jle
or
cmp
push
lods
scas
pop
cmp
mov
cwtl
sub
mov
mov
and
inc
mov
jle
stos
push
add
inc
push
pop
xchg
shr
xchg
ds
bound
stc
sbb
sti
imul
push
inc
push
adc
push
sti
into
push
mov
cmpsb
addr16
lahf
xchg
jmp
mov
pop
lods
shll
out
pop
int3
fsubrs
sar
fwait
ds
inc
mov
lahf
fistps
lret
outsl
xchg
js
dec
inc
and
imul
push
sub
sbbl
insl
mov
pop
jg,pt
sbb
scas
test
stos
inc
mov
hlt
lods
pop
adc
pop
mov
mov
sbb
jmp
mov
push
lret
out
pop
mov
adc
mov
push
in
andl
inc
or
in
daa
dec
xchg
test
inc
jo
and
fcomp
mov
ficomps
inc
inc
pop
rolb
icebp
jbe
shlb
xchg
xlat
dec
out
push
movsb
push
int3
call
mov
aad
dec
fcomp
adc
mov
inc
sti
shl
mov
sbb
dec
insb
mov
add
add
ljmp
cmpl
cmp
jbe
push
outsl
inc
jp
and
cmp
leave
fwait
ja
add
in
test
test
ret
sbb
and
push
loopne
and
sbb
inc
js
mov
fxch
insb
pop
out
jg
pop
cmpl
dec
dec
jle
lcall
jp
sbb
adc
das
into
mov
aad
test
mov
ds
lcall
add
mov
frstor
xor
push
shll
adc
out
imul
push
mov
and
sbb
hlt
stos
outsl
les
sub
ja
nop
mov
mov
je
out
sub
adc
into
push
push
and
push
adc
test
jle
xchg
push
jmp
add
arpl
jnp
cmc
sub
fs
jl
sahf
sub
bound
and
into
mov
ja
pop
es
setl
dec
out
js
ss
lret
and
gs
push
xchg
in
test
nop
mov
imul
ror
scas
adc
out
xchg
inc
out
cmp
test
add
xor
stos
cld
adc
dec
mov
imul
mov
add
dec
push
cmp
mov
xchg
repnz
push
shlb
jno
xchg
mov
xor
inc
mov
xorb
inc
fadds
fmuls
xchg
mov
and
or
xchg
fiaddl
insl
sahf
sub
mov
loope
mov
movsl
sbb
push
test
sub
popf
insl
pop
jae
dec
lods
pop
mov
dec
movl
test
mov
scas
fbld
push
sub
push
cmpsl
dec
jmp
test
mov
jne
aam
adc
dec
dec
sarl
jns
rolb
adc
testb
stc
add
ficompl
hlt
push
pop
inc
jb
movsb
sahf
xor
adc
ja
rcr
fisttps
clc
fsubr
cmc
arpl
adc
pop
adc
test
push
ret
dec
mov
mov
imul
fcmovbe
push
loope
shrb
mov
loopne
mov
std
sti
notb
rorb
mov
push
sub
lahf
xor
mov
int
shl
lea
cltd
bound
push
sub
pop
sub
sub
pop
hlt
push
cmp
mov
ds
lock
fcoml
jg
stos
jbe
pop
mov
stc
xorl
aaa
cs
mov
fbld
xchg
lea
imul
pop
cmp
les
aas
jnp
push
inc
sbb
or
mov
push
inc
dec
xchg
lea
imul
push
mov
addb
dec
xchg
movsl
sbb
fwait
inc
lret
je
adc
je
lods
pop
xor
cmc
mov
shlb
jne
push
push
stos
and
cmpsb
orl
sub
jmp
cmp
lds
movsl
or
and
sbb
out
pop
fs
pop
push
sub
mov
mov
ret
inc
hlt
out
fadd
shrb
aam
jae
lcall
mov
pop
mov
out
add
add
jmp
into
cs
adc
mov
pop
jnp
in
bound
jg
cmp
add
ja
inc
pop
jg
adc
fs
movsb
sub
jge
stos
adc
loope
imul
mov
jle
jmp
push
adc
test
cmp
in
jb
pop
xchg
fs
mov
jp
aaa
jle
jp
dec
mov
mov
movsb
mov
lcall
mov
fistpll
pop
sbb
and
idivl
fnstcw
or
test
xor
lods
sub
std
clc
pushf
xchg
inc
inc
push
mov
jl
lds
iret
test
imul
jo
rorb
loope
jb
cmpsl
mov
inc
std
daa
mov
jp
dec
mov
mov
lods
sbb
lret
pushf
popa
fisttpll
push
fwait
xor
popa
pop
mov
xchg
push
pop
push
and
mov
arpl
jns
aam
pop
mov
aaa
test
mov
mov
inc
pop
loopne
jl
xchg
or
cmp
pushf
fistps
or
add
mov
cld
lret
jae
pop
int
pushf
pop
mov
adc
aaa
icebp
mov
shl
mov
js
inc
sahf
movsb
xor
test
shlb
clc
or
cmp
and
or
inc
push
jg
ljmp
loopne
cltd
outsb
mov
fists
sub
add
xchg
push
jg
and
xchg
stc
mov
mov
xchg
repnz
aas
xchg
xchg
sub
fprem
mov
into
inc
pop
scas
jg
daa
ljmp
inc
lock
push
dec
sbb
or
int3
push
cli
push
leave
xchg
jae
and
ret
adc
cmpsl
push
mov
std
mov
xchg
outsb
jmp
lcall
cltd
insb
add
cmpsb
add
test
xor
jns
pop
pop
push
roll
insl
aam
mov
sti
loop
scas
inc
pop
push
jno
add
pop
loop
outsb
adc
or
cli
lods
mov
mov
sbbl
add
testl
lret
cmp
les
shr
outsb
or
outsb
inc
mov
push
sti
into
out
sbb
jmp
leave
mov
cltd
push
xor
cwtl
pop
xor
pop
mov
cwtl
mov
cmp
xchg
cmpb
scas
xchg
sbb
sub
lahf
inc
mov
mov
jp
and
cmpsl
dec
aaa
sub
add
xchg
pop
xchg
ja
inc
add
hlt
punpckhdq
adc
cli
jl
rclb
int3
jle
or
int
mov
lods
cltd
stos
mov
stc
scas
xlat
mov
shlb
push
pop
mov
int
in
mov
jge
in
sbb
jns
lds
add
shr
insb
sub
sti
negb
sbb
in
pop
and
lcall
xchg
xchg
sbb
js
or
lea
fwait
dec
dec
push
jo
xor
cli
pop
hlt
inc
and
mov
pop
mov
adc
insb
mov
rolb
movsl
push
stos
pop
les
and
ljmp
loopne
repnz
mov
adcb
pop
dec
in
mov
pop
mov
stos
jb
lods
out
add
je
dec
adc
push
mov
mov
fcompl
pop
fstpl
mov
lock
cmp
sarb
or
add
pop
jne
jmp
xlat
jne
cmp
das
ficompl
push
sub
cltd
rclb
xor
fstpl
aad
std
and
pop
mov
int3
faddl
adc
xlat
insl
add
in
push
mov
das
and
adc
pop
mov
cld
sub
inc
xorb
div
mov
mov
outsl
mov
inc
mov
movsb
sub
fadds
pop
inc
adc
ljmp
push
adc
add
movsb
or
mov
push
mov
lods
sub
clc
aad
pusha
jmp
scas
lcall
sbb
negb
gs
jne
cli
dec
outsl
mov
xlat
and
inc
cwtl
push
dec
cmp
insb
fwait
sbb
jae
xchg
mov
mov
or
sub
push
sbbb
push
or
fiaddl
lock
or
sbb
rclb
inc
cs
add
add
aas
pop
aam
popf
push
gs
cmp
in
push
hlt
and
mov
sbb
sbb
aam
addr16
push
addr16
ja
test
hlt
dec
scas
into
push
mov
sub
cmp
xor
and
popf
arpl
in
imul
sub
mov
mov
mov
jne
lods
sahf
sbb
and
push
add
jecxz
xrelease
mov
ds
push
inc
mov
in
in
or
jecxz
stc
adc
mov
push
fbld
fidivrs
adc
aas
and
sub
add
aad
mov
mov
loopne
pop
dec
mov
cmc
pop
sub
xchg
pop
loopne
inc
nop
or
fnstsw
cmpsl
into
sbb
int
pop
fsubl
in
je
insl
stos
inc
fwait
lods
or
sub
into
mov
sbb
mov
jecxz
mov
and
clc
sbb
sub
pop
push
jp
dec
jl
outsb
out
adc
push
cmpsl
nop
cmp
cwtl
addb
fsubrs
push
fs
scas
sbbl
std
xor
or
push
fdivl
cltd
cmc
dec
mov
ds
ljmp
xchg
push
cmpsb
xor
cmp
jns
dec
lahf
inc
inc
pop
pop
jge
scas
push
xchg
dec
stos
push
test
icebp
into
inc
bound
or
fiaddl
enter
imul
scas
push
lahf
lds
clc
scas
sub
xchg
mov
ds
dec
rorb
inc
scas
cmpsl
jg
xor
dec
pop
xor
push
fsts
mov
dec
sbb
std
xchg
cs
xor
out
andl
movsb
push
adc
imul
push
mov
add
inc
jae
in
lods
iret
gs
xchg
mov
dec
clc
arpl
fildll
int3
shll
and
mov
test
sub
sbb
push
pop
dec
ds
sub
adc
addl
mov
xor
cmpsb
xchg
fxam
inc
sub
fwait
fcoms
xchg
pop
loope
mov
cmc
add
pop
in
cld
jge
insl
or
mov
mov
cmp
dec
ljmp
es
and
push
add
lcall
mov
mov
movb
sbb
add
stos
adc
dec
xchg
mov
les
inc
dec
xchg
lods
cmp
push
notb
jnp
inc
loopne
test
std
insb
sti
mov
xor
ds
movsl
xchg
push
dec
pop
sub
out
push
sub
xor
pop
movsl
pop
idiv
rorb
mov
sbb
jmp
scas
sub
xchg
dec
rorl
lret
les
adc
push
sub
shrl
mov
iret
call
adc
rclb
jmp
adc
stos
sub
mov
pop
dec
js
out
cmp
xchg
ror
dec
pop
sbb
shl
mov
out
or
mov
loopne
pop
adc
sbb
inc
xor
mov
cmp
sahf
add
ds
xchg
int
stos
sub
in
xchg
pusha
mov
pop
incb
xchg
pop
mov
int
inc
std
adc
test
mov
jae
xor
hlt
adc
inc
mov
fisubrl
or
or
ja
and
dec
xor
fcoms
repz
adc
adc
adc
push
loope
jmp
pop
fcompl
movsb
pusha
icebp
push
adc
std
out
sbb
push
push
mov
cs
nop
jno
outsl
lods
xchg
push
adc
jp
ss
ljmp
sbb
mov
and
mov
xchg
sub
pop
cmp
fstps
push
loope
inc
cltd
jp
insb
mov
ja
pop
jg
push
fucomp
push
pminsw
lea
push
adc
xchg
push
leave
mov
inc
outsl
jnp
mov
adc
lock
push
imul
lret
aas
pop
and
cld
int3
sbb
adc
or
fcompl
std
add
rorb
es
pop
inc
dec
mov
mov
add
lahf
nop
sub
or
cli
ret
scas
and
mov
in
xchg
mov
xchg
sbbl
lea
inc
ss
es
cltd
push
es
loopne
push
adc
pmaxub
imul
repnz
das
push
adc
hlt
cmp
dec
or
sbb
gs
dec
into
push
xorb
or
push
adc
rcrl
sub
adc
pop
xchg
in
lods
or
in
orb
pop
lock
inc
mov
in
xchg
aam
fstl
sub
mov
mov
pop
or
jl
push
aad
push
and
mov
inc
call
mov
pop
in
je
adc
push
orl
out
xor
jl
lock
jo
std
sti
sbbb
leave
dec
aam
jne
aad
popf
imul
das
push
adc
mov
inc
pusha
rolb
shrb
pop
mov
push
push
push
push
cmp
inc
sub
lahf
aas
add
insb
fisubl
sub
xor
mov
mov
sub
cmp
aas
jle
push
test
sbb
fwait
decl
push
scas
sub
fwait
sub
jmp
pop
std
sti
mov
mov
arpl
push
sub
in
std
enter
ds
lods
pop
mov
add
push
adc
push
mov
push
test
icebp
into
push
jnp
out
das
inc
push
push
aas
jle
push
dec
sbb
data16
gs
nop
daa
fld
scas
pop
mov
dec
call
xor
fdivrp
imul
int
jo
mov
mov
add
lds
xchg
sub
push
std
sti
loope
jbe
push
adc
scas
pop
into
loop
xlat
repz
idivl
insl
rolb
dec
jle
cmpsb
inc
mov
pop
cmpsb
into
addl
icebp
dec
sarl
das
jp
sti
mulb
cwtl
aas
pop
mov
xlat
into
pop
mov
loop
das
push
adc
sub
mov
enter
incb
xor
or
sahf
push
cmpsl
jecxz
fadd
pop
aas
das
lret
das
hlt
out
into
xchg
sub
xor
mov
popa
dec
push
cmpsl
dec
loop
xor
or
dec
rcl
data16
or
mov
sub
das
xchg
xchg
fstps
int
mov
int3
lods
in
out
sbbl
int3
mov
add
push
mov
mov
cld
pop
adc
sub
push
and
stc
pop
push
pusha
mov
aaa
dec
scas
jecxz
sub
lret
repnz
jo
ret
xchg
rcrl
jg
imulb
jp
xchg
cli
cmp
imul
xor
push
mov
xor
ss
xchg
test
or
inc
scas
push
sahf
push
xor
push
add
sbb
call
clc
pushl
outsl
xchg
cmpsl
mov
xor
lock
aam
pop
fwait
mov
fwait
mov
neg
mov
push
adc
mov
jae
cld
clc
pop
cmc
inc
pop
insl
stos
enter
ret
fidivrl
ljmp
push
adc
leave
xor
mov
insl
imul
enter
jo
jp
cmp
xchg
push
lret
push
sub
inc
adc
int
pop
sub
flds
adc
faddl
adc
xchg
sbb
push
mov
scas
imul
sbb
dec
sbb
faddl
adc
out
or
xchg
jmp
test
inc
add
lds
fcomip
lds
xchg
outsb
shll
pop
adc
push
les
adc
cmp
icebp
sbb
out
pop
and
xchg
lods
push
scas
stos
pop
xor
mov
and
pop
adc
negb
push
in
jp
je
sub
pop
lods
dec
sub
inc
out
dec
fnstenv
sbb
repnz
ja
ss
cmc
lret
mov
inc
arpl
mov
addr16
pop
push
xchg
sbb
push
adc
jne
adc
jl
jg
test
mov
lcall
faddl
adc
icebp
mov
and
movsl
out
scas
adc
and
and
xor
or
mov
jo
pop
adc
xlat
inc
mov
push
js
dec
jmp
imul
flds
adc
and
push
adc
lahf
mov
faddl
adc
inc
mov
sub
fldcw
inc
xchg
rcr
pop
adc
jo
pop
adc
adc
mov
aam
pop
adc
pop
ss
scas
push
cmpsl
dec
pusha
stos
jle
xor
or
movsl
cmc
aad
notb
or
into
mov
xchg
sub
adc
dec
adc
sub
daa
sbb
adc
shrb
sbb
sar
negb
mov
push
lds
mov
movsl
dec
xchg
out
sub
dec
lahf
aas
mov
shl
out
mov
push
fwait
cmpsl
fwait
jo
flds
adc
insl
pop
cltd
and
pop
adc
adc
pop
adc
xchg
push
adc
mov
mov
push
insb
frstor
lods
pop
loopne
test
push
std
pop
adc
jg
inc
mov
fldln2
fldcw
mov
mov
movsl
dec
xchg
xchg
lahf
aas
imul
mov
push
and
je
in
outsb
mov
add
jle
mov
push
inc
pop
aaa
cmp
les
test
sbb
or
jae
popf
add
mov
imul
gs
pop
into
jle,pt
movsl
dec
subb
cmpsb
dec
ljmp
adc
or
inc
popa
cld
jo
adc
fsubl
jo
pop
adc
mov
add
cld
or
popf
aam
xchg
jne
jo
gs
push
test
int3
call
paddusw
mov
pop
adc
or
pop
mov
mov
rclb
mov
cmpb
or
sbb
adc
jle
mov
mov
mov
mov
dec
std
or
lds
shll
mov
mov
pop
ds
shr
icebp
ss
dec
jp
pop
cwtl
cmp
addl
int3
flds
adc
pushl
pop
adc
and
mov
adc
cmp
cmp
mov
stos
push
adc
movsl
dec
sbb
adc
cli
or
jg
repnz
rclb
xchg
mov
pop
flds
in
aaa
ja
mov
mov
jo
mov
cmpsb
cmp
lock
sub
flds
adc
flds
adc
int3
xchg
push
adc
and
pop
adc
cs
xchg
repnz
xchg
fdivr
pop
adc
xor
mov
xorb
xchg
pop
js
push
mov
sub
sbb
adc
jno
xlat
test
ja
push
xchg
sbbb
icebp
jbe
mov
sub
push
adc
dec
and
add
outsl
xchg
jo
pop
adc
push
int3
sbb
mov
sbb
arpl
jmp
stos
mov
jle
fildll
jb
bound
test
adc
push
cmp
ljmp
ficomps
faddl
adc
cmpsb
xchg
sub
mov
push
andl
jns
test
pop
cmpsl
pop
sti
pop
and
les
dec
mov
faddl
adc
jmp
je
pop
adc
faddl
adc
faddl
adc
dec
test
dec
push
xlat
lods
cpuid
inc
mov
pop
adc
std
mov
adc
cld
push
outsb
aad
iret
or
or
xor
push
sbb
imul
dec
xchg
and
cli
outsl
lahf
aas
rorl
mov
inc
addb
pop
lods
push
scas
cltd
mov
adc
add
cmp
iret
xchg
mov
push
add
xlat
dec
or
movsl
lods
shlb
xchg
pop
push
adc
sti
cmp
lds
adc
lea
lcall
sbb
pop
adc
push
loopne
xchg
loope
lret
cmc
mov
shrl
lds
adc
pop
clc
scas
repz
jp
sub
pusha
lds
adc
cmp
mov
mov
fwait
add
sahf
pop
sbb
push
leave
mov
lret
ljmp
mov
pop
sbb
jmp
daa
xchg
pop
rorl
jle
popl
and
sub
or
xchg
stos
cmp
mov
mov
movsb
sub
test
adc
sub
pop
mov
pop
sub
mov
jo
pop
adc
das
mov
sub
add
xchg
pop
pop
xchg
pop
push
jge
jo
pop
adc
mov
pop
mov
mov
dec
hlt
or
xchg
rorl
jae
adc
dec
mov
push
adc
pop
inc
pop
in
push
and
dec
lahf
aas
push
push
sti
sbb
jno
adc
scas
mov
push
adc
adc
sub
mov
jns
adc
push
sub
pop
adc
push
test
stos
into
into
add
pop
cmp
lods
xor
xchg
push
adc
inc
mov
xlat
rol
inc
mov
pop
cmp
adc
sub
add
nop
enter
aam
mov
push
scas
rep
jle
shll
xor
add
in
xchg
les
jae
mov
cltd
and
mov
xchg
pop
scas
push
jnp
imul
aam
mov
mov
inc
mov
mov
dec
xchg
sub
inc
shlb
mov
sbb
pop
and
pop
adc
pop
mov
or
push
push
push
fdivrl
loopne
sbb
pop
adc
leave
xor
test
add
and
adc
jb
sbb
jno
adc
mov
adc
negb
add
push
cmp
mov
ss
mov
pop
or
xchg
add
adc
mov
or
mov
adc
jg
jle
inc
clc
pop
push
push
pop
in
fcomps
stos
pop
lock
fdivr
mov
pop
adc
pop
or
xlat
jl
cs
add
adc
fs
aaa
add
pop
adc
out
sub
test
loop
call
insl
lock
out
outsl
sbb
pop
adc
jbe
and
fbld
xchg
mov
jmp
loopne
ljmp
nop
lds
adc
js
xchg
cltd
std
aaa
xor
xor
faddl
adc
dec
int
pshufw
into
ret
mov
mov
dec
cmp
pop
jp
sbb
cmc
cld
ret
aaa
das
je
pop
adc
ljmp
incb
mov
and
prefetchnta
loop
out
adc
xchg
in
pop
adc
stc
dec
das
fildl
mov
xchg
lods
mov
mov
lds
adc
push
mov
add
fldcw
movsb
iret
add
aam
push
mov
insl
call
pop
cmpsl
les
les
adc
fsts
sbb
xor
jbe
faddl
adc
addr16
je
pop
adc
lods
jns
je
pop
adc
jecxz
jp
mov
or
cmp
jo
in
pop
adc
or
cli
enter
cwtl
scas
xchg
jo
pop
adc
in
jne
std
and
add
mov
and
cmc
roll
dec
or
push
lods
add
in
js
sti
mov
loop
imul
mov
popf
nop
sbb
dec
push
xlat
insb
or
adc
or
dec
push
mov
pop
adc
shll
cltd
stos
sub
mov
ds
fnstcw
cwtl
cmp
jge
and
aas
mov
push
andps
movsl
fbld
pop
mov
cltd
push
fwait
mov
or
rolb
movb
fbld
jns
je
scas
daa
mov
mov
movb
scas
test
stos
into
inc
mov
scas
sub
sbb
shlb
movb
jle
push
or
inc
scas
test
mov
inc
lret
pop
into
xchg
xchg
call
addl
int3
shll
jge
push
scas
cmc
into
inc
pop
test
push
mov
push
inc
mov
lods
xchg
cs
push
jle
mov
add
xchg
sbb
or
fprem
xchg
sub
lds
jo
pop
adc
mov
inc
outsl
push
pop
xor
les
adc
in
pop
adc
adc
xor
rclb
loopne
sub
movsl
dec
add
inc
in
rolb
xor
mov
pop
adc
das
inc
fistpl
pop
int3
cmp
mov
pop
adc
or
mov
mov
mov
lods
stos
push
test
dec
subb
xorb
or
dec
gs
pop
adc
pop
cld
jo
adc
xchg
lds
adc
lds
adc
loop
lds
adc
cmp
xchg
jns
cli
loopne
jecxz
imul
lods
movsb
inc
mov
rorl
jae
adc
aaa
ljmp
push
adc
ljmp
push
stos
fsub
pop
mov
xor
mov
ds
cmp
fs
pop
dec
int
fs
mov
or
imul
push
imul
stos
leave
data16
adc
pop
dec
cwtl
jae
adc
inc
and
inc
stc
enter
add
push
and
idiv
loope
mov
ds
sahf
add
js
in
subl
ss
mov
js
std
pop
lret
cli
push
test
out
sbb
xchg
push
adc
mov
adc
addb
jne
sbb
mov
jns
or
push
rol
gs
fwait
loopne
pop
add
push
jg
in
jno
add
lahf
call
cmpsb
dec
cwtl
jae
adc
xchg
sbb
dec
fidivrs
icebp
push
loope
movsl
aaa
adc
xor
xor
cli
mov
dec
inc
pop
ret
stc
adc
cmp
loopne
imul
outsb
jb
lret
and
fistl
xchg
xchg
xor
mov
insb
inc
xor
in
repnz
fcoml
or
lods
mov
adc
xor
gs
int
movl
or
rorl
cs
mov
outsl
xor
out
or
sub
popf
xchg
jmp
fiadds
aam
lret
sbb
in
pop
adc
push
cmpsb
fs
xor
or
out
into
mov
faddl
adc
xchg
mov
cmp
fwait
stos
jl
mov
fucomi
jo
adc
pop
loop
cmpsl
jo
pop
adc
sti
jg
notb
mov
add
push
push
jo
pop
adc
mov
lds
loop
xchg
repnz
dec
push
lds
adc
inc
push
adc
call
mov
jo
pop
adc
xchg
cmp
int3
jo
adc
divl
scas
in
xchg
imul
jmp
iret
das
adc
ss
aad
iret
or
lret
repz
les
adc
and
sbb
push
adc
int3
mov
inc
clc
push
in
repz
push
pop
ljmp
sbb
mov
dec
xchg
xchg
mov
sub
arpl
stos
push
test
out
test
mov
mov
xchg
jae
xchg
push
adc
icebp
scas
mov
jne
aad
lock
fstpl
cmp
sbb
aas
lods
hlt
in
fcmovb
repnz
in
arpl
mov
pop
mov
push
stos
pop
mov
std
jnp
add
sbb
pop
xchg
sub
mov
pop
mov
fldcw
push
mov
sarb
mov
stos
push
cmpsl
aam
inc
mov
inc
mov
imul
insl
dec
pop
or
std
adc
jno
adc
in
jno
test
sub
xchg
popf
cs
adc
movsb
sub
jmp
mov
mov
adc
in
leave
sub
push
or
es
lods
mov
mov
sti
xor
pop
inc
stos
sub
mov
mov
xor
sub
cmp
jmp
imul
ret
push
ds
aad
add
cmp
mov
aad
sbb
rolb
sub
dec
jns
stos
push
fdivrl
rorl
push
inc
lods
pop
mov
lahf
mov
push
adc
sahf
test
xor
sub
pop
mov
mov
rolb
inc
pop
pop
push
or
sub
push
sub
lods
pop
mov
into
add
scas
dec
sbb
xchg
xchg
jno
mov
movsb
in
ds
pop
mov
icebp
jl
mov
loope
bound
inc
xchg
lret
mov
gs
inc
aam
sub
cmpl
lahf
cli
cwtl
loopne
scas
push
inc
imul
jbe
das
movsl
mov
addl
dec
mov
and
loopne
enter
adc
test
adc
iret
je
fld
xlat
pop
sti
xor
fbld
push
adc
leave
sub
jg
movl
push
push
mov
int
outsb
fildl
mov
test
cmp
stc
decb
mov
fsts
js
mov
ret
jns
shrl
leave
sbb
push
pushf
dec
pop
or
lds
repz
in
cmp
lods
fidivrl
sub
push
jecxz
out
pop
sub
or
push
adc
hlt
push
rorb
mov
outsl
sub
in
in
push
fsubs
adc
sahf
fistl
xchg
push
jns
test
je
jae
adc
addr16
mov
outsb
and
repnz
xor
les
or
fnsave
iret
xor
cltd
pop
push
int
mov
icebp
orb
jmp
cmp
bound
in
xchg
push
ss
cmp
adc
dec
sub
sbb
adc
insb
mov
push
sub
fcomp
fsts
push
adc
xor
shlb
pusha
adc
insb
mov
ss
xchg
scas
mov
mov
cld
lods
sbb
add
in
pop
pop
daa
sahf
push
das
and
mov
xor
cli
or
sbb
lods
dec
mov
cmpsl
pop
lods
xor
rorl
mov
sbb
inc
mov
inc
sbb
cmp
mov
push
movsb
jne
xchg
lock
or
dec
mov
adc
ja
push
inc
dec
aad
sbb
fwait
adc
pusha
daa
iret
insl
or
xchg
movsl
fwait
lcall
aad
or
push
adc
cmpsl
test
test
int
cmpsl
sub
mov
test
sbb
sub
je
scas
daa
pop
jnp
jmp
popl
mov
mov
iret
jns
je
push
test
xchg
dec
pop
or
movsl
mov
fisubl
orb
push
add
test
arpl
inc
or
adc
std
mov
decb
push
cmp
adc
test
pop
dec
arpl
pop
fsubs
or
or
push
inc
dec
testb
xchg
clc
adc
fwait
movsb
or
pop
jle
or
cmp
dec
xchg
shrl
pop
or
push
inc
cld
jo
adc
push
inc
pop
cmp
push
inc
in
lahf
aas
or
jo
in
fimull
test
shrl
adc
pusha
push
pop
adc
pop
jle
or
clc
and
xchg
shrl
pop
or
push
inc
cld
jo
adc
arpl
daa
test
ret
shl
adc
xor
sub
pop
and
scas
sarb
or
jle
jno
adc
add
mov
adcb
push
ljmp
sub
jecxz
ds
mov
dec
inc
pop
pop
lret
mov
mov
mov
movsl
adc
rcrb
xor
push
jb
rcl
push
sub
cmp
sbb
push
cmp
icebp
push
fnstsw
pop
mov
sub
pop
jecxz
rclb
jno
adc
mov
add
inc
nop
jo
adc
es
cmp
leave
jg
cmp
data16
movsb
push
ss
sub
insl
movsb
and
pusha
xor
push
adc
sbb
ljmp
sub
mov
adc
test
xchg
push
jmp
cltd
and
jbe
xchg
push
adc
xchg
push
adc
sub
cwtl
jae
adc
int3
add
out
cltd
xor
adc
push
pop
test
insl
insb
xchg
enter
push
imulb
pop
adc
mov
and
sarb
sbb
sbb
mov
jmp
sub
cmp
jecxz
stc
jbe
dec
stos
jmp
jecxz
mov
and
add
lcall
dec
mov
dec
js
in
xor
into
jnp
push
lds
adc
outsb
and
mov
cmp
paddw
decb
aam
push
jae
add
andl
mov
lods
or
cmp
jle
adc
nop
mov
mov
mov
jno
test
pop
out
mov
push
adc
mov
mov
lock
push
pop
aam
je
mov
jle
aad
lock
lds
pop
rorb
sahf
sbb
sub
jge
mov
pop
sar
pop
adc
add
in
sbb
push
fs
push
adc
jns
nop
jecxz
inc
sbb
jmp
jp
add
clc
jnp
dec
sub
inc
std
jle
sub
sub
mov
out
push
rcl
pop
in
push
fnstcw
cwtl
js
adc
adc
fisttpll
cs
lods
add
mov
push
orl
cwtl
mov
clc
pop
xchg
push
adc
and
fiadds
testb
pop
adc
imul
fwait
es
loop
adc
lods
push
or
std
movsl
push
insb
sarl
pop
xchg
sbb
ss
cwtl
sbb
adc
sub
cmpb
inc
sub
xchg
bound
fisubl
popf
and
sub
pusha
pop
xor
mov
lret
xchg
push
insl
popf
pop
xchg
push
adc
xchg
push
adc
dec
xor
hlt
pop
adc
dec
imul
ficompl
jg
sbb
and
inc
lds
loopne
scas
sar
push
dec
jne
icebp
outsb
mov
push
push
test
dec
push
push
loope
pop
int
test
cmp
ret
or
adc
das
mov
lcall
jnp
clc
mov
lahf
test
xchg
push
adc
fdiv
mov
pop
adc
dec
xor
aas
jle
pop
pop
cli
sub
push
popa
popa
adc
xor
das
enter
movsl
pop
inc
popf
push
cmpsl
pop
xchg
sub
xchg
push
dec
dec
std
das
shl
mov
push
shr
mov
dec
xchg
sub
lahf
aas
or
insl
fwait
sub
cs
xor
sbb
std
sbb
and
in
push
cmpsl
out
xor
into
imul
scas
leave
in
in
xor
adc
pop
push
mov
pop
mov
lock
xchg
fidivl
sbb
xchg
sahf
add
jecxz
push
or
sahf
cmc
pushf
shrl
imul
scas
cmpl
inc
mov
and
mov
sub
pushf
push
or
mov
mov
pushf
push
or
std
cmp
add
push
or
cmp
xchg
push
adc
fsubr
pop
jo
pop
adc
rol
imul
push
mov
adc
aad
fldln2
fxch
fdivr
pop
adc
pop
shrb
mov
or
mov
shlb
mov
lods
je
scas
sahf
test
adc
or
mov
cs
add
shll
jno
sbb
cmp
imul
pop
mov
dec
xchg
out
sub
dec
lcall
and
adc
pop
scas
push
stos
sub
cs
xlat
mov
fisttpl
push
xor
testl
or
sbb
mov
jle
stos
fstp
lahf
and
sub
push
push
out
dec
mov
mov
cli
mov
lahf
iret
dec
xor
inc
mov
cmp
sti
inc
jns
fs
fisubrs
movsb
sub
xor
add
mov
mov
jae
adc
xchg
mov
jle
push
push
rol
fninit
xchg
jno
add
or
fdivs
pop
adc
testb
fisttpl
insl
inc
ja
cmpsl
xor
call
icebp
jo
xchg
sbb
idivb
adc
jo
pop
adc
ljmp
shld
sbb
adc
pop
repnz
inc
sub
adc
push
adc
sub
cmp
in
mov
xor
insb
int3
xchg
jo
pop
adc
dec
or
jo
test
cli
inc
mov
add
mov
jbe
mov
shlb
mov
clc
and
cmp
in
sbb
pop
test
sub
outsl
loop
mov
pop
or
lret
jo
adc
je
pop
adc
add
je
push
push
fbld
fidivrs
mov
push
call
imull
adc
jno
adc
mov
or
adc
sbb
pop
sub
jae
pop
mov
and
flds
xor
repz
push
sbb
push
mov
push
pop
cltd
stos
fdivr
push
mov
mov
push
jo
pop
or
scas
push
test
or
inc
movsl
sbb
test
dec
xor
push
mov
push
xchg
mov
arpl
lret
sub
sub
gs
faddp
sbb
pop
mov
insl
pop
lock
cwtl
stc
push
jl
aam
negb
sbb
xor
and
dec
lahf
aas
inc
inc
clc
add
and
inc
mov
cs
push
scas
dec
xorl
imul
pusha
adc
cs
and
push
mov
or
inc
add
pop
xchg
jmp
push
aaa
incl
push
mov
pop
ljmp
push
sub
das
call
xchg
fwait
les
jmp
mov
sub
pop
daa
sbb
scas
pop
int
lds
xchg
sub
sahf
cmc
pushf
int
mov
or
scas
incb
shlb
push
outsl
sbb
sbb
xchg
inc
mov
add
lahf
inc
mov
shll
stc
xchg
in
lods
lods
lods
iret
adc
pop
in
cmp
jmp
rclb
test
mov
cmpsl
or
inc
les
fsub
jns
inc
mov
mov
and
lahf
push
inc
mov
scas
pop
mov
pop
push
push
cmpsl
mov
nop
xchg
push
adc
arpl
push
cmc
stc
sub
mov
xchg
mov
js
push
xor
dec
mov
inc
pop
push
pop
adc
mov
pop
adc
xchg
xchg
movsb
dec
xchg
pop
sub
dec
lahf
aas
sarl
mov
clc
addr16
stos
push
add
lea
out
dec
out
enter
push
decb
loope
adc
cmc
sub
inc
cwtl
jne
mov
sbb
pop
or
push
dec
cld
jo
adc
adc
mov
xchg
roll
mov
dec
xchg
pop
xor
dec
sahf
or
push
testl
inc
rcrl
stos
and
sbb
sbb
test
stc
pop
jp
les
mov
movsl
test
ja
shlb
sbb
lcall
ffreep
pop
mov
test
push
stos
xchg
dec
pop
or
mov
adc
out
jp
div
cmp
call
adc
xchg
fbld
cmp
xor
push
pop
pop
inc
dec
pop
or
jecxz
cld
jo
adc
hlt
xor
adc
int
lods
adc
cmp
jecxz
jle
mov
inc
cli
mov
cmp
jle
pop
inc
xchg
pushf
push
or
add
push
or
cld
rolb
int3
xchg
push
adc
push
or
push
inc
inc
std
add
outsb
in
sub
jecxz
rorb
pop
adc
push
mov
xorl
lret
jb
jne
push
fadds
lock
imul
and
jo
add
and
or
and
loope
lcall
dec
loop
dec
sahf
and
or
and
jo
pop
adc
in
in
add
and
daa
rorb
je
pop
adc
int
push
jp
int
loope
xor
addr16
cmp
xchg
jne
and
dec
pop
or
mov
add
adc
adc
imul
shr
lea
jno
xchg
jecxz
mov
pop
or
add
add
adc
fidivl
jecxz
pusha
out
mov
fidivrs
sbbb
fbstp
inc
insb
adc
push
adc
dec
push
arpl
sbb
pop
test
push
add
and
sbb
sbb
push
pop
insl
jbe
pop
movsb
add
lods
cmp
cmpsb
and
push
pusha
dec
jmp
or
push
jnp
out
mov
inc
mov
add
mov
mov
add
cmp
leave
xchg
jo
scas
mov
arpl
outsb
dec
aad
xorb
outsb
popf
in
jo
push
adc
es
iret
or
adc
sub
fmuls
push
nop
das
fnstsw
xchg
adc
adc
imul
push
shlb
inc
bound
pop
enter
movsl
dec
lods
xchg
push
dec
pop
mov
jle
xchg
dec
int3
jbe
shll
stos
stos
popf
xor
or
jmp
adc
push
xor
movsl
in
fidivl
adc
scas
pop
mov
dec
xchg
pop
lods
or
aam
shll
nop
out
shll
or
push
in
mov
pop
fistl
cmpsl
cmp
sti
loope
stc
mov
shrl
pop
or
push
inc
cld
jo
adc
shrb
pop
or
cmpsl
movsl
cld
jo
adc
sbb
pop
adc
fdivr
mov
lods
cmp
xchg
pop
mov
cltd
or
je
pop
adc
mov
jo
pop
adc
aam
mov
pop
fsubs
loop
negb
push
mov
sbb
mov
push
jb
out
mov
fs
add
addb
cwtl
cwtl
xchg
xor
push
arpl
stos
jecxz
xchg
push
adc
aas
jle
pop
push
shll
lret
or
scas
xchg
lock
jne
adc
push
dec
sahf
xchg
sub
jl
push
add
push
xor
xchg
mov
rcl
mov
and
cld
push
dec
jle
xchg
push
adc
fdivrs
mov
adc
jge
xor
inc
imulb
lds
push
shll
pop
flds
adc
xor
push
mov
adc
and
xchg
sub
pop
adc
pop
test
adc
scas
popa
test
pop
adc
mov
flds
adc
xchg
jb
mull
hlt
add
jne
inc
mov
mov
flds
adc
sub
mov
pop
adc
arpl
jp
cmpsl
inc
mov
insb
fisubrl
xor
scas
mov
push
adc
les
hlt
fdiv
ja
xchg
adc
xchg
imul
xor
push
dec
dec
es
movsb
add
mov
jp
dec
aad
dec
rcll
sar
js
push
cmp
sub
testl
andb
cli
lret
jno
mov
out
frstor
xor
popf
mov
xor
add
fxch
xor
fsubrs
sbbb
sub
inc
cmpsb
das
cmc
mov
imul
in
sti
mov
xchg
fcmovb
jnp
add
inc
daa
arpl
inc
les
cld
pop
test
cmp
mulb
fsubs
daa
sarb
mov
jmp
mov
cmp
loop
adc
xlat
inc
fiaddl
mov
push
imul
sub
pop
mov
sbb
leave
jg
cmp
or
addl
and
loope
int
and
stc
loop
loope
push
sub
loop
test
loop
adc
pop
test
push
fcomp
xor
xchg
jle
je
cwtl
aas
add
cmp
push
cld
pop
les
pushw
lods
cmp
jp
pop
mov
dec
jge
cmp
rol
arpl
jns
push
pop
push
and
fwait
sub
or
push
and
stos
xor
fnstsw
dec
scas
stos
int3
shlb
popf
push
push
add
adc
lds
xor
adc
es
dec
push
movsl
mov
jns
sahf
cld
jo
adc
mov
in
inc
xor
adc
cld
imul
pop
lahf
sub
in
mov
addb
push
and
and
jbe
test
jne
inc
mov
mov
adc
daa
adc
pop
pusha
sbbb
dec
xchg
cs
js
ljmp
into
mov
xchg
test
mulb
or
sub
inc
ljmp
push
sub
or
pop
mov
addb
sbbb
fcmovu
mov
push
arpl
mov
jnp
movsl
dec
loopne
pop
cmp
insl
rolb
insl
xor
adc
add
stos
xlat
inc
insl
add
enter
jecxz
pop
push
shl
mov
cmp
push
push
loope
jge
sbb
mov
fprem
stos
sub
adc
std
sti
mov
dec
adc
mov
scas
add
push
and
cmp
jmp
hlt
mov
mov
pop
adc
add
loope
test
xchg
push
mov
add
xor
pop
cmp
jmp
push
adc
fld
subl
pusha
dec
mov
out
and
shlb
pushw
test
sub
jge
data16
pop
fdivrl
fadds
sti
adc
push
and
nop
movsl
dec
xor
es
mov
mov
xchg
fs
fcoms
cmp
mov
shrl
jbe
ficompl
pushf
push
and
adc
mov
adc
xchg
push
adc
shll
mov
test
das
or
jp
dec
xchg
push
push
cmpsl
les
les
inc
adcb
mov
sbb
stos
ret
into
inc
jbe
dec
xchg
cmp
add
rorb
rorb
jo
adc
push
ret
push
or
out
pop
dec
xchg
pop
jmp
cmp
ss
or
adc
dec
push
popa
mov
sub
hlt
or
lea
jg
push
adc
push
lds
jmp
fs
adc
ficoml
xor
add
and
pushf
mov
xor
adc
cmc
iret
and
push
adc
inc
dec
adc
adc
inc
jbe
pop
sti
push
xchg
inc
cmp
xlat
xor
adc
cltd
cmpsb
mov
push
in
xor
jns
adc
ds
mov
mov
inc
scas
rcl
dec
imul
sub
adc
add
xchg
repnz
adc
jnp
bound
stc
adc
inc
jnp
and
orb
fisttpl
cmp
mov
enter
jo
clc
out
fildl
ficomps
insb
adc
cmc
loope
mov
mov
mov
mov
adc
jno
test
push
popa
cmp
sahf
dec
and
fbld
xchg
mov
stc
movsb
mov
xchg
aam
aam
mov
pop
xchg
and
xchg
jbe
adc
int
in
iret
int
sub
mov
mov
xor
adc
pop
sbb
mov
sub
mov
jmp
adc
and
cmp
into
xchg
sub
dec
das
fsubp
adc
push
add
icebp
mov
sub
leave
in
or
add
lret
lds
sbb
cmp
pop
es
pop
stos
punpckhwd
ja
loop
mov
gs
shrb
xor
lahf
pop
mov
add
dec
out
push
adc
fwait
leave
ret
mov
adc
adc
arpl
cmp
xor
popf
cmc
lret
inc
loope
call
push
arpl
push
pop
test
xchg
stos
popa
js
xchg
cmpsb
xchg
imul
xor
mov
out
les
pop
mov
push
rcr
pushf
jecxz
push
repz
jae
js
outsl
adc
push
and
sbb
add
fwait
nop
xor
mov
lea
add
jno
call
cmpsb
xlat
popl
mov
in
push
stos
incl
repnz
pop
dec
push
lahf
xchg
jmp
mov
sbb
add
test
push
push
xchg
push
movsl
dec
xchg
xchg
adc
std
sti
idivb
int
mov
mov
fmulp
ret
push
push
pop
mov
enter
pop
dec
lahf
xchg
or
mov
ds
inc
and
scas
pop
adc
lock
roll
lahf
aas
jmp
push
pop
lahf
push
mov
stos
fwait
scas
icebp
add
fwait
mov
push
dec
sub
add
negb
adc
das
or
pop
adc
push
pop
sub
dec
xor
push
pop
inc
mov
scas
pop
mov
pop
jmp
push
cmpsl
xor
test
mov
stos
xlat
aad
mov
xor
sub
in
xlat
adc
dec
push
push
sub
icebp
sbb
push
push
xchg
jno
dec
xchg
xchg
adc
std
sti
arpl
jbe
sbb
jl
push
fldl
lods
scas
pop
push
fcompl
sub
lahf
aas
rclb
inc
stos
int
xchg
shll
ss
dec
push
or
add
and
std
sti
pop
js
fisubrl
sub
ds
repnz
dec
loopne
pop
shl
inc
sahf
fisubs
add
movsb
adc
add
mov
aas
ret
bound
or
pop
inc
scas
sub
cmpsl
cmpsb
sar
sti
xlat
test
fstl
sub
popa
jmp
add
adc
sbb
std
or
jge
sbb
test
sti
movsb
out
in
inc
sub
mov
pop
outsl
mov
fcmovnu
jne
xor
hlt
sub
adc
fidivrl
aaa
enter
and
lods
xchg
push
aaa
pusha
outsl
mov
cmp
adc
mov
mov
mov
inc
mov
pop
mov
xchg
movsl
cmp
xor
jo
adc
mov
xlat
int3
incb
lods
lods
cmp
adc
lds
or
push
in
ds
xchg
add
loopw
add
jl
jbe
aad
ljmp
jp
sbb
xchg
lret
adc
adc
inc
add
out
ss
ljmp
xchg
out
mov
dec
jno
dec
clc
cmpb
push
add
out
pop
xlat
ja
jl
stos
movsl
sub
add
into
jp
xor
adc
mov
icebp
cmp
jbe
push
mov
dec
push
das
gs
push
sbb
inc
add
mov
sub
and
xor
adc
push
xchg
in
loopne
shll
lds
in
push
jge
out
push
decb
ljmp
xor
push
out
stos
xchg
xlat
leave
pop
mov
ret
cli
jecxz
mov
inc
fs
sbb
js
ljmp
mov
bound
pop
push
sub
cld
pop
les
pop
inc
fnstcw
test
add
jo
sbb
xchg
mov
push
clc
or
ss
mov
jge
dec
cmc
sar
sbb
fnstcw
xchg
in
push
dec
cld
pop
lods
dec
test
sbb
adc
pavgw
inc
inc
movsl
push
int3
or
inc
les
push
mov
insb
adc
dec
shl
mov
push
mov
pushf
sbbl
mov
rclb
jecxz
les
fimull
cs
inc
push
test
or
inc
aad
cmp
push
leave
hlt
jecxz
xor
adc
or
push
andb
sbb
or
mov
mov
in
add
movsb
push
ds
sub
or
in
pusha
stos
fidivl
ljmp
popa
fwait
dec
jae
lods
xor
pop
in
sub
std
jno
in
push
pop
push
loop
cmpsb
scas
push
scas
and
jecxz
sub
jl
jmp
movsl
push
sti
jle
scas
xchg
rol
inc
mov
ficoml
adc
sbb
daa
push
mov
dec
mov
pop
lret
sbb
cld
jno
pop
xchg
push
sub
shll
xchg
es
mov
sbb
lods
and
mov
test
sbb
in
pop
mov
xor
outsl
or
ja
mulb
mov
mov
mov
mov
jbe
pop
inc
or
cmp
ja
mulb
mov
es
mov
cwtl
popa
std
daa
xor
adc
ss
pop
xor
inc
jae
loop
or
adc
pop
out
and
jle
push
pop
ds
push
mov
in
cmp
fidivl
add
and
inc
mov
shrb
mov
fwait
inc
aad
jo
imul
iret
xchg
adc
push
inc
adc
pusha
scas
ljmp
rolb
push
sbb
or
add
sub
pop
push
and
lods
iret
jmp
fcmovb
cwtl
mov
add
add
dec
out
xchg
js
dec
popf
sbb
push
stos
push
daa
cmpsb
lods
mov
cs
ss
mov
adc
cmpsb
xchg
xchg
das
fists
dec
lock
cmc
adc
jb
movsb
sarl
xlat
call
dec
in
jle
iret
mov
shll
and
mov
pop
jno
xor
les
adcl
xchg
fwait
sub
std
push
rolb
imul
iret
xor
popf
and
cmp
pop
lods
fs
daa
in
and
cmpsb
lods
pop
pop
jmp
inc
add
push
loop
inc
mov
inc
add
and
inc
nop
outsl
push
dec
jmp
sub
icebp
adc
cmovs
mov
sbb
push
roll
add
cmc
cmp
das
ja
notb
data16
test
aad
cld
or
dec
test
icebp
inc
out
orb
sahf
inc
std
lea
stos
lock
cs
leave
out
test
jne
shrl
pop
rorl
insl
push
adc
push
cmc
xchg
scas
inc
incl
fsts
out
pop
sub
xchg
dec
adc
push
enter
cmp
flds
mov
fsubl
mov
inc
outsb
pop
jbe
mov
xchg
in
cld
mov
inc
outsl
in
repnz
pop
add
xor
test
daa
sub
jno
inc
fcmovb
insl
sub
sbb
mov
pop
cmpsb
or
jp
push
sbb
int3
mov
outsl
loop
ret
fistps
sbb
jo
ret
iret
clc
adcl
add
popa
pusha
pop
sub
push
adc
cmpsb
xchg
xor
mov
test
lds
mov
add
adc
shll
or
movsl
hlt
shlb
clc
mov
jb
fucomp
xor
insl
mov
in
pop
adc
mov
dec
push
mov
nop
mov
subl
dec
aas
add
cmc
int
or
ljmp
xor
adc
mov
mov
jno
outsl
add
xor
ret
adc
sbb
iret
or
insl
sbb
dec
inc
xor
scas
bt
sub
fidivrl
mov
jns
inc
inc
or
movsl
xchg
leave
jo
adc
push
mov
cs
mov
pusha
rorb
aad
stos
popa
psrlq
jbe
dec
and
mov
jecxz
das
cmpsb
xlat
lods
pop
jae
cmp
or
xchg
cs
inc
jbe
mov
pop
lea
call
xor
hlt
or
rol
mov
mov
pop
repnz
pop
xchg
mov
aas
jle
rcrb
pusha
cmpsl
sbb
push
in
mov
pop
dec
or
rcr
jno
pop
bound
add
adcb
pop
dec
in
mov
pop
mov
imul
dec
ljmp
not
les
mov
cmpsl
mov
sub
fnstenv
push
in
fidivrl
jg
lock
jbe
push
outsb
inc
inc
xlat
mov
push
ds
fisubs
jmp
popf
push
in
sbb
push
xor
daa
push
xchg
add
addr16
lds
push
mov
outsb
xor
js
inc
add
adc
test
push
mov
movsl
mov
mov
jle
xchg
dec
leave
fidivrs
adc
and
lods
outsb
in
shlb
add
and
sbb
sbb
push
mov
pop
stos
nop
repnz
ljmp
pop
fisubl
xchg
loop
or
push
cmpsl
cld
cmc
popa
xor
push
sub
mov
into
push
lds
dec
xchg
sub
pop
call
add
outsl
shlb
push
and
call
lcall
add
or
jl
push
cmp
in
cld
add
and
jbe
pop
push
cmp
rclb
mov
or
shlb
mov
mov
pop
in
pop
lods
in
cmp
enter
pop
push
push
orl
dec
orl
jbe
leave
out
and
icebp
sbbb
and
aam
addl
inc
push
repz
fsubs
adc
outsb
sub
scas
imul
cmp
dec
jle
std
jns
divb
cmp
cmpsl
je
mov
add
xor
adc
inc
leave
fiadds
pop
mov
xlat
mov
test
movsl
fiaddl
sarl
lds
xchg
pop
fdivrs
hlt
mov
sbb
xor
mov
mov
mov
psubusw
stc
push
inc
sarl
lods
outsb
jo
rorb
add
mov
inc
pop
clc
cld
dec
cltd
add
sbb
push
mov
adc
sbbl
cltd
xorb
sbb
jnp
rclb
xor
or
push
xor
mov
adc
int
pop
ret
or
popa
xor
dec
jae
sti
jne
lcall
sbb
dec
and
shlb
outsl
cwtl
mov
mov
and
adc
movsb
imul
loopne
and
scas
mov
jbe
inc
test
dec
enter
xchg
pop
jecxz
dec
or
notl
pop
ja
mov
cs
pop
sub
stos
mov
gs
fwait
or
lods
sbb
movsb
or
es
sbb
outsl
fwait
mov
inc
fcmovb
cmp
movsb
clc
das
mov
stos
cld
or
pop
push
push
xor
adc
das
into
mov
cwtl
jo
lock
test
frstor
cmp
jecxz
cwtl
push
daa
imul
shlb
mov
or
out
sub
and
out
adc
and
bound
or
pop
adc
in
mov
mov
inc
mov
fisubl
or
pop
adc
arpl
fadds
ret
adc
les
adc
cmp
cmp
and
sarl
adc
out
adc
jle
adc
pop
adc
in
dec
jae
jmp
sub
xor
rolb
jo
es
xor
push
popf
lods
flds
adc
xchg
je
mov
test
cmp
xor
mov
scas
or
jp
mov
comiss
sahf
iret
or
add
adc
ljmp
jo
cmpsb
jge
xor
inc
mov
mov
mov
das
aas
cwtl
adc
jle
out
xlat
mov
mov
sub
sub
mov
sarb
push
shufps
adc
add
enter
movsl
dec
cmp
mov
cmp
mov
cli
popf
pusha
push
ljmp
mov
dec
xchg
mov
dec
jmp
pusha
mov
or
out
int3
clc
fsubr
shll
movsl
dec
out
xor
cmc
pushf
shrl
imul
jb
mov
addr16
jle
inc
imul
dec
xchg
fldcw
pop
dec
lahf
aas
fimull
adcl
pop
ffreep
rcr
inc
mov
pop
dec
jle
jno
adc
or
loopne
iret
std
mov
scas
pop
xor
push
adc
or
fdivs
stc
cmpsb
add
pop
scas
pop
iret
jecxz
aas
cmp
mov
jae
rclb
xchg
xchg
sub
jp
call
adc
pop
pop
das
fstps
aam
pop
adc
enter
test
sbb
cmpsb
add
adc
repz
push
stos
xchg
fstpl
cmp
je
icebp
mov
enter
mov
int3
xchg
push
adc
push
mov
das
out
loop
push
les
sbb
mov
outsb
sti
sarb
mov
dec
sub
jns
icebp
mov
push
pop
and
std
mov
lods
jle
xchg
testl
cmpb
mov
mov
adc
les
adc
sti
mov
pop
adc
ds
mov
popf
loopne
cmpsl
stc
sbb
imul
adc
mov
pop
or
test
cld
jo
adc
shl
dec
repz
nop
mov
push
jmp
push
lock
or
add
xor
lahf
push
outsl
mov
insb
push
lock
cmpsl
xor
adc
xchg
push
xor
int3
mov
pop
aaa
jl
in
insl
call
or
mov
sub
in
push
lret
xor
sub
and
roll
push
lret
jg
add
incl
das
int3
lret
leave
push
pop
fiadds
sub
mov
push
xorl
out
rolb
xor
adc
cmp
movsb
scas
sub
cld
or
aad
xchg
push
mov
loop
jno
adc
movl
cs
test
sti
xor
js
adc
inc
mov
iret
cmp
inc
fcoms
scas
push
hlt
cmpsl
lock
ds
push
mov
xor
mov
cli
dec
xchg
pushf
aad
jp
adc
dec
pop
cmp
lods
loopne
popf
inc
add
mov
je
dec
xchg
sub
gs
sub
xor
rorl
xchg
adc
dec
sub
dec
mov
push
ljmp
mov
fdivrl
jae
hlt
jecxz
xor
lods
sbb
mov
ljmp
es
or
lods
jmp
add
rclb
sbb
jo
adc
sub
fildll
test
pop
fcompl
ds
mov
push
fimuls
adc
les
mov
push
and
cmpsb
scas
mov
mov
mov
sti
mov
push
dec
push
push
aad
sbb
and
sbb
gs
dec
sub
xchg
cs
dec
add
imul
arpl
call
js
jnp
in
fidivl
xchg
push
adc
in
dec
mov
call
and
mov
push
ljmp
adc
sbb
adc
and
push
adc
shl
fs
hlt
adc
in
push
pop
sbb
or
push
stos
push
scas
in
add
cmpsb
sbb
push
cmp
les
inc
add
lds
or
aad
pop
and
add
loop
inc
push
cmp
enter
xor
ds
cmpsl
add
jmp
inc
mov
pop
mov
or
addb
in
xor
outsl
popa
push
fs
xchg
pop
cmpsb
push
ds
push
lods
pusha
dec
orl
mov
sbb
push
mov
lret
mulb
push
ret
and
lret
sbb
inc
scas
pop
scas
mov
pop
addr16
push
push
mov
sti
mov
jo
xchg
mov
and
cmpsl
iret
lret
sbb
dec
adc
or
out
popa
fsubs
dec
sbb
xor
scas
mov
movsl
xlat
mov
mov
xchg
lods
clc
xchg
add
sbb
xchg
adc
xor
in
data16
sbbb
adc
imul
xchg
jb
sbb
mov
in
scas
imul
mov
xor
pop
mov
jmp
xchg
inc
in
pcmpeqd
inc
decl
ds
sub
xchg
pop
cmp
repnz
adc
sub
mov
insb
push
dec
sahf
outsb
mov
sahf
jp
imul
push
lcall
sub
scas
jns
test
test
mov
adc
jg
loopne
testl
mov
hlt
cld
sarl
jb
mov
in
scas
lds
out
jbe
mov
push
ret
fdivr
add
pop
mov
js
jns
int
add
and
mov
lret
ficoms
cmpl
mov
push
xlat
movsb
adc
dec
ret
sbb
cmp
adc
xchg
lea
inc
fimull
arpl
dec
movl
xchg
sub
push
call
mov
xorl
ret
lea
sbb
rorl
or
mov
or
inc
adc
push
mov
leave
loopne
cmp
jge
fs
fdivl
push
and
mov
stos
xor
ss
push
es
pushf
lods
outsl
pop
cmp
jl
neg
jle
in
mov
mov
inc
loope
jb
pop
in
adc
test
in
mov
jecxz
mov
xchg
movsl
lret
and
int3
shr
pop
xor
push
adc
mov
dec
subl
gs
movsl
push
jae
ds
lods
lret
jge
dec
xchg
int
insl
adc
test
xchg
dec
push
out
jbe
xor
js
and
imul
cld
xchg
xchg
rcr
pushf
out
mov
mulb
xchg
fadd
rep
dec
lods
rorl
mov
mov
cltd
fs
lods
push
pop
mov
aad
push
stos
inc
sub
outsl
xor
jge
in
jbe
faddl
jecxz
mov
mov
mov
aad
push
and
mov
pop
inc
lods
nop
mov
cmp
inc
inc
sbb
cli
sub
imul
bound
je
lds
push
nop
dec
rorb
leave
dec
jnp
loope
adc
out
and
int3
sbbl
lods
pop
mov
or
add
inc
jb
jmp
dec
cmp
not
and
je
and
push
cmpsl
dec
jmp
or
in
dec
in
mov
mov
jbe
push
aam
test
sub
out
test
mov
inc
scas
mov
xor
push
rorb
push
sub
jne
cmpsl
arpl
insb
dec
jns
xchg
dec
out
movsl
imul
mov
fucomip
pop
and
xor
jg
lea
and
pop
pop
jmp
inc
and
repnz
sbb
pop
in
push
mov
imul
and
imull
add
pushf
cmc
outsl
xlat
inc
pop
cmp
or
ret
xchg
js
ljmp
inc
add
shrb
mov
repz
cmpsl
dec
jmp
or
adcb
lahf
cs
fmull
popa
adc
cli
jl
out
comiss
mov
jno
in
push
dec
std
das
mov
push
stos
push
dec
bound
xchg
test
mov
xor
cltd
movsb
pop
xorb
fldt
aam
push
mov
pusha
inc
pop
and
cmp
js
jo
ljmp
loop
out
in
out
pop
fnstenv
or
jnp
push
mov
add
dec
sbb
sbb
aas
or
sar
and
add
sbb
jecxz
fwait
loopne
out
ror
shlb
sti
jnp
fsubrs
pop
cltd
sbb
aas
sbb
mov
jg
inc
jbe
iret
sub
add
dec
pop
inc
leave
mov
lock
or
gs
and
movsb
xor
pop
sub
aam
outsl
sub
in
mov
jne
or
and
push
iret
mov
adc
adc
xor
pop
push
cmc
aam
rcll
sub
je
mov
sbb
mov
movl
pop
into
repnz
stc
xchg
fimull
or
cmc
sub
xchg
cmp
lods
loope
jno
gs
gs
sbb
sub
cld
jo
adc
pop
cmp
xchg
test
sbb
gs
stos
and
adcb
scas
rcr
xor
adc
jle
sbb
push
fldcw
arpl
jl
sub
int3
xor
dec
and
fldcw
push
std
icebp
es
js
popf
push
jno
sbb
cmp
or
pop
mov
push
push
cmp
in
jmp
sbb
fwait
add
push
loop
sarl
cmp
xchg
das
scas
cld
xchg
icebp
and
mov
out
push
pop
and
jg
xor
inc
inc
sbb
cli
jge
lods
cmpsl
popa
sub
sub
cs
fldl
push
mov
jae
cmp
pop
mov
pop
pop
inc
pop
inc
xor
xchg
std
loop
hlt
adc
fstps
mov
sub
pop
adc
mov
adc
inc
stos
dec
shr
mov
cmp
imul
jo
ja
cmp
adc
mov
pop
xorb
push
in
adc
pop
popf
pop
aam
movsl
mov
out
inc
push
push
mov
pop
dec
popa
je
jp
push
and
mov
jbe
test
sbb
loope
cmp
out
mov
xchg
std
out
lock
and
mov
sti
test
sbb
mov
xchg
mov
push
or
jae
mov
in
xor
jo
adc
jne
aam
sbb
scas
jne
mov
cld
cmpsl
dec
jmp
jne
lea
and
push
popf
push
add
stc
mov
sub
push
loopne
xor
adc
mov
les
dec
and
pop
xlat
into
imul
or
dec
lahf
dec
call
pop
cli
xorl
dec
cld
jo
adc
adc
nop
in
fnsave
ret
sar
xlat
arpl
dec
dec
sbb
push
fildl
sub
addr16
out
mov
movsl
movsb
dec
xchg
pop
bound
mov
dec
jnp
repz
push
mov
xchg
adc
xor
adc
sbb
mov
xchg
push
cmp
jl
lods
xor
cld
xchg
fldenv
sbb
xchg
in
mov
cwtl
mov
mov
jle
sbb
push
adc
jns
xor
shrb
jns
incl
sub
mov
sar
lahf
pop
ljmp
pusha
sbbb
dec
xchg
cs
jns
adc
mov
jb
adc
push
rcrl
mov
xor
add
aam
mov
xchg
icebp
cmpsb
rcll
push
dec
movntq
fadds
jmp
out
add
xchg
les
cs
or
pop
das
lcall
ss
add
jmp
add
lock
mov
sbb
mov
inc
push
insl
sub
je
insl
xorb
or
pop
lahf
push
ljmp
lret
shlb
psraw
out
mov
pop
rcll
xchg
aam
adcb
andl
jb
adc
in
pop
push
dec
mov
xorb
shlb
xchg
fildl
sub
sbb
xchg
mov
sbb
dec
in
xlat
cmpsl
xlat
dec
inc
in
jbe
xchg
shl
and
dec
dec
pushf
lods
nop
jne
mov
test
test
ljmp
sti
or
add
lds
sub
add
into
cmpsb
fstpl
les
fsubp
jecxz
ds
popa
push
add
popa
push
add
push
push
add
jp
add
test
add
xchg
push
add
test
add
mov
add
sti
push
add
sti
push
add
push
push
add
sti
push
add
jmp
add
and
push
add
out
push
add
push
push
add
or
adc
push
add
sti
push
add
sti
push
add
mov
add
mov
iret
pop
lock
add
jb
test
xor
fs
std
cwtl
mov
es
clc
jbe
mov
xorb
xor
icebp
and
dec
push
sbb
int3
add
mov
imul
mov
dec
subb
and
inc
adc
repz
pop
shr
add
das
jl
cmc
cmp
fwait
pop
test
and
cmp
stos
xchg
lods
mov
adcl
mov
cmpsb
jno
shll
fwait
inc
jo
pop
out
xchg
stos
pushf
dec
popa
mov
ljmp
fcmovnu
and
or
push
jns,pt
push
fimull
adc
enter
push
loop
ljmp
shl
push
mov
inc
sti
push
repz
sti
push
pusha
cmp
shlb
dec
mov
inc
xchg
in
pusha
push
addr16
repz
pushf
sub
pop
bnd
pop
sarb
add
xchg
jle,pt
push
mov
shll
test
in
pop
pop
outsl
dec
lret
push
aas
pop
sbb
push
outsl
push
push
ja
aam
add
fsub
inc
dec
adc
ja
call
inc
add
or
xchg
pop
scas
add
ds
js
loopne
mov
cmp
inc
loop
negl
ja
adcb
or
sbb
repnz
fstl
inc
rcl
cmpsb
pop
out
or
ljmp
ds
pop
xor
mov
dec
out
shll
jmp
xor
aas
js
pop
loope
mov
dec
add
cmpsb
pop
mov
std
jo
leave
or
push
jle
xor
pop
loop
and
int
add
sbb
mov
rcl
fbstp
dec
or
xchg
movsl
sbb
mov
pop
pusha
adc
mov
sub
xchg
add
pop
lret
jo
pop
push
xor
scas
insb
lock
mov
dec
add
mov
xlat
negl
cmp
sbb
sarl
push
pop
push
ds
shlb
mov
or
cwtl
jae
mov
ds
mov
adcb
shlb
sub
inc
mov
fists
xor
stos
add
nop
xor
out
push
dec
scas
push
xchg
in
xchg
icebp
mov
adc
bound
dec
fildll
pop
std
out
aas
add
mov
adcb
jecxz
mov
adc
push
sub
xchg
outsl
adcb
xchg
sub
sti
negb
pop
out
incb
test
pop
daa
mov
adc
inc
add
sub
push
test
test
pop
lods
fsub
lods
repnz
xchg
push
adc
xchg
and
movsb
mov
fwait
das
shlb
pop
mov
push
pop
in
push
dec
adc
sqrtps
inc
xor
bound
or
pop
test
iret
mov
nop
stos
push
add
pop
push
xchg
pop
dec
sbb
and
fimuls
and
outsb
mov
dec
es
pop
lcall
or
push
adc
xor
pop
cmc
lret
or
xchg
sbb
and
jmp
addb
xor
add
ret
adc
push
cmpsb
dec
sub
xchg
sbb
loop
ds
decb
mov
xchg
cltd
dec
sub
popf
out
test
xor
jb
jl
lds
iret
insb
xor
mov
scas
mov
incb
cmpsl
testl
and
mov
mov
int
in
jmp
outsl
out
xchg
adc
movsl
mov
mov
out
bound
push
cld
enter
or
int
xlat
mov
cs
mov
lds
xchg
outsb
push
test
ss
adc
add
inc
mov
dec
xchg
or
cmp
cmp
lahf
into
cmp
out
lret
popf
stos
push
data16
ja
push
loopne
pop
sub
scas
test
cmp
imul
shlb
push
stos
aam
movsl
movsl
cs
in
push
xor
fisubrl
xchg
roll
cmp
cli
jge
ja
mov
xchg
mov
and
sub
mov
mov
add
packssdw
loopne
push
mov
shll
and
test
cmp
imul
das
fwait
leave
pop
push
dec
cmp
jp
ds
push
add
out
js
pop
adc
xor
mov
push
and
fstpl
mov
arpl
push
xor
les
cmp
jecxz
or
mov
sahf
std
and
sub
jmp
std
push
add
leave
in
pop
mov
stos
pop
push
dec
push
fiadds
lahf
aas
add
adc
shll
jecxz
push
xor
or
mov
jnp
mov
mov
shlb
dec
sbb
jns
and
jo
mov
mov
mov
push
ffreep
or
inc
scas
cmpsl
shll
fiadds
cmp
dec
add
fstps
addb
aas
mov
scas
push
xchg
jns
popa
cmp
pop
dec
push
fucomp
pop
dec
pop
sub
xor
mov
cmp
push
scas
imul
popa
popf
sub
pop
shll
or
in
xor
mov
pop
scas
push
std
fimull
or
pop
ss
sub
jae
data16
out
sbb
push
adc
adc
mov
xchg
movsb
sar
pushf
dec
mov
push
and
push
cli
push
aad
test
jnp
jl
movsl
ret
arpl
mov
lahf
aas
jle
xor
push
adcb
and
rcl
sub
jae
mov
push
cmp
push
data16
ret
adc
test
mov
fcompl
cmp
adc
dec
mov
nop
xchg
rcll
jae
pop
mov
jbe
pop
pop
rcrl
push
je
xor
mov
hlt
push
sti
jl
int
insb
shll
push
test
ss
sub
or
mov
js
adc
push
and
mov
mov
movb
push
stc
jg
aaa
ret
add
mov
push
outsb
pop
xchg
daa
test
clc
jno
loop
cmp
mov
pop
jns
fistpll
lcall
imul
repnz
bound
mov
scas
cmp
sbb
add
outsb
lods
dec
sbb
test
push
add
lods
and
insl
pop
dec
cmp
out
push
shlb
pop
repz
sti
sbb
xchg
xchg
js
addr16
mov
jnp
inc
jo
jns
aas
add
inc
outsb
inc
lods
divb
jo
or
int
sub
xchg
pop
es
cmpsl
lock
jne
rcrb
mov
xchg
jne
ret
xor
sub
mov
aam
jno
mov
movsl
jnp
adc
cmc
mov
adc
xor
dec
repz
enter
rorb
mov
sbb
dec
fs
and
into
mov
sbb
cmp
fldcw
decb
adc
cmp
mov
add
pop
pop
in
xor
sub
arpl
xchg
scas
xor
pop
ds
mov
add
pop
mov
loop
outsl
jnp
repz
xor
sbb
pop
add
adc
and
cs
das
fstpt
repz
stos
mov
pop
pop
fidivl
leave
pushf
jmp
test
cmp
jno
sbb
and
dec
fisubrl
add
inc
scas
push
fidivrs
mov
cmpsl
in
mov
lret
outsb
mov
loop
gs
sbb
adc
push
and
fld
jg
push
push
scas
xchg
cmp
or
or
push
repz
in
loope
mov
leave
pop
loopne
dec
les
mov
adc
les
cltd
cltd
icebp
mov
outsb
jl
insb
popf
jp
shlb
and
scas
mov
or
dec
insl
mov
sub
pop
insb
roll
orb
lahf
lods
cmp
filds
xor
pop
dec
dec
push
ficoml
mov
sti
mov
xor
push
and
mov
pop
xor
push
fiadds
lahf
aas
add
adc
shll
sub
fcmovbe
dec
pusha
add
movsl
sar
jo
imul
push
xchg
fidivrs
mov
out
aad
out
or
pop
repnz
lea
jge
cmp
inc
mov
xchg
mov
shll
ja
cli
cmpsl
les
repz
lret
icebp
loop
in
and
cmpsb
int3
int
cmpsb
pushf
jmp
fisubrs
add
add
hlt
jno
roll
dec
scas
pop
into
dec
dec
out
push
mov
dec
xor
adc
pop
inc
jb
ljmp
pop
mov
or
pop
lods
lret
jl
in
cli
negb
fwait
in
arpl
stos
push
test
imul
push
adc
arpl
rclb
outsl
sub
iret
test
in
dec
stos
push
rol
mov
in
cwtl
mov
cwtl
cmpl
mov
cltd
push
in
sub
into
frstor
fucomip
pop
mov
andl
or
in
or
negb
je
pop
sbbb
shlb
mov
pop
call
jo
or
shlb
ret
shl
jno
or
sbb
sub
es
in
negb
xchg
and
popf
shrb
stos
jmp
scas
pop
iret
pop
and
roll
cs
jae
out
push
pop
push
dec
inc
add
sub
pop
inc
sub
jbe
jmp
jle
insb
arpl
push
adc
inc
stos
add
mov
aam
and
xor
sub
pop
dec
push
inc
xchg
push
add
out
and
or
pop
pop
mov
xchg
push
cmp
and
imul
jmp
add
mov
xchg
es
push
adc
sbb
fs
push
jl
scas
sbb
cmp
test
jbe
xor
add
mov
cmp
subl
test
push
adc
adc
xchg
cmp
lret
adc
xor
mov
aad
js
stc
int3
ds
sahf
jne
push
adc
testb
push
xchg
test
lds
lret
cmp
in
popa
or
rclb
add
ljmp
ja
xchg
push
adc
int3
add
mov
sbb
notb
inc
push
jl
pop
dec
xor
sub
jns
cld
sbb
lret
xchg
push
adc
jns
pop
jb
xchg
stos
arpl
jp
jmp
lcall
sbb
adc
xor
inc
ret
test
bnd
les
out
or
add
and
in
push
test
sub
and
push
dec
test
dec
xchg
mov
imul
and
jp
xor
leave
shl
pop
movsb
maskmovq
idivl
xor
out
aad
dec
pop
in
push
test
sbb
and
popl
pop
sub
clc
es
mov
les
in
mov
xor
push
push
push
dec
xor
icebp
inc
cmp
test
pop
add
xor
test
stc
stos
xor
adc
stc
pop
bound
leave
adc
nop
dec
cmpb
mov
jg
adc
leave
pop
jp
sub
push
pop
pop
or
outsl
add
outsl
imul
cmpl
push
ret
dec
mov
mov
mov
aad
sbb
cmpsb
push
xor
mov
mov
push
sub
into
jno
sub
pop
and
jle
popf
push
push
rcrb
mov
ja
andb
fcmovu
sti
jno
lea
inc
pusha
sbb
pop
xchg
mov
jmp
or
scas
and
addb
inc
add
pop
ds
jne
cmc
hlt
lea
cltd
pusha
mov
sub
mov
mov
mov
loopne
movsb
shll
lds
rorb
subb
dec
cld
mov
adc
popa
mulb
test
inc
mov
add
or
aam
jno
jmp
pop
mov
pop
and
loope
cmp
les
lods
or
out
in
mov
lods
fsubs
push
ds
and
xchg
mov
jne
pop
gs
cmp
aam
shrl
movsb
sub
mov
addl
mov
inc
cld
jge
lods
mov
add
repz
inc
out
inc
lahf
aas
or
push
dec
loop
mov
xchg
shrl
or
pop
roll
in
xor
aam
ja
sbbb
or
mov
mov
cmpsb
sbb
loope
mov
int3
bnd
and
xlat
or
aam
xor
pop
scas
cmc
xchg
push
dec
mov
imul
pusha
xchg
inc
inc
adc
sti
push
mov
hlt
xchg
shrl
or
pop
rorl
fcmove
jbe
negb
rorb
ret
sub
scas
push
adc
mov
je
pushf
push
mov
xchg
in
inc
cmpsl
test
out
mov
inc
xor
fiadds
inc
inc
pop
cmp
and
jbe
hlt
fimuls
push
movsb
push
mov
or
add
sbb
dec
cld
cwtl
fs
push
adc
lock
pusha
ds
sub
mov
lock
cmp
xchg
mov
in
mov
jmp
loopne
sub
mov
xor
adc
jnp
cmp
divl
add
mov
push
sbb
add
lret
int
mov
or
sub
adc
psubusb
jg
and
push
adc
test
jb
test
mov
mov
mov
push
push
cmp
cmc
xor
jg
xchg
mov
inc
ljmp
imul
lods
or
insl
pop
punpckhdq
or
adc
inc
faddl
jmp
dec
int
inc
xor
xchg
lea
xchg
aas
dec
sub
loopne
sub
fimuls
stos
pop
sub
push
fimuls
mov
jno
mov
dec
cmp
push
inc
repnz
sbb
or
push
sbb
inc
adc
stos
add
xchg
mov
int
jl
scas
mov
inc
lea
mov
lods
lret
in
mov
out
dec
std
loope
jo
fadds
push
mov
mov
cmp
shrb
add
fucomi
pop
inc
add
pop
insl
movsl
jmp
xor
cli
je
not
mov
adcl
das
sbb
popf
mov
out
cwtl
jle
xchg
repnz
xchg
mov
xor
adc
sbb
testb
jecxz
jge
adc
adc
adc
out
fdivrs
pop
mov
test
xorb
push
adc
mov
aas
faddp
pop
insl
fnstenv
andb
mov
cmp
les
inc
adc
pop
sub
shll
mov
mov
ftst
jne
push
sbb
lods
mov
lcall
dec
sbb
loop
dec
cld
in
pop
out
pop
and
cmpsb
into
into
push
mov
movsb
mov
cltd
aas
jle
inc
adc
jo
sub
notl
addr16
shrb
dec
xchg
mov
aas
hlt
push
sti
jl
int
outsb
shll
imul
pusha
add
movsl
fildll
fdivrs
push
imul
lea
lahf
cmp
dec
adc
arpl
mov
addb
dec
add
enter
iret
jns
and
mov
popf
rorl
ficoml
add
adc
shll
mov
mov
mov
and
mov
mov
push
adc
addr16
cs
scas
lds
xor
adc
arpl
and
lea
pop
in
push
pop
jg
movsl
inc
mov
mov
adcl
cmp
cmp
cmp
ds
mov
mov
add
shl
jnp
repnz
insl
rolb
repz
xor
push
stc
add
add
cmp
dec
in
lea
ds
pop
insb
in
mov
scas
pop
into
push
adc
in
call
jmp
insl
jmp
clc
xchg
shll
filds
enter
lds
inc
ljmp
sub
das
pop
loopne
sub
scas
iret
lea
stos
xlat
cld
data16
pusha
inc
sbb
push
xor
clc
pop
out
inc
and
into
iret
add
bnd
ret
dec
aaa
test
fwait
sbb
pop
jmp
pop
cmpsb
inc
movsl
adc
inc
loope
iret
mov
lret
cmp
not
in
pop
and
leave
hlt
inc
mov
xorl
sti
mov
xchg
inc
and
push
mov
push
jmp
dec
stc
inc
xor
mov
dec
xchg
mov
add
and
mov
mov
clc
mov
loop,pt
xchg
sbb
outsb
mov
leave
mov
lcall
sbb
das
jmp
andb
push
or
pop
sub
decb
sahf
or
stos
pop
sti
loope
ljmp
repz
clc
test
or
ds
in
push
xor
lods
mov
push
enter
or
pop
jb
pop
add
je
jb
mov
jge,pt
pop
push
fists
cmpsl
add
adc
add
push
cli
mov
les
shlb
popa
push
and
imul
mov
dec
push
push
les
shll
loopne
loop
flds
adc
push
fldl
leave
xor
adc
mov
popa
leave
add
xchg
cmp
xlat
mov
xor
outsl
pop
jle,pt
js
call
out
sbb
in
aad
sbb
sti
testb
rcr
les
and
dec
ret
jno,pt
shlb
rcl
subb
scas
lret
pop
cmp
ja
cmp
dec
cmpsb
ficoml
popf
fists
push
jno
sub
mov
mov
xchg
imul
mov
loop
movsb
sub
push
js
xor
iret
stos
notb
das
popf
pop
inc
mov
shll
andb
out
cwtl
adc
sbb
fildl
adc
jb
dec
out
imul
jb
cmpb
jae
push
adc
vpsadbw
adc
sbb
shrl
pop
aad
data16
lods
cmpl
in
int3
dec
mov
lahf
sub
loop,pt
jmp
inc
mov
pop
dec
pop
push
insb
scas
pop
jmp
in
jnp
es
sbb
push
xor
enter
lahf
pusha
dec
out
adc
or
jb,pt
cmc
movb
xor
push
dec
mov
jnp
loope
loope
fcomp
fwait
repz
out
mov
rcrb
jne
pop
add
stos
lods
je
shlb
add
das
inc
fidivrl
lahf
sub
outsb
pop
inc
arpl
jno
inc
cmpsb
mov
jae
aaa
sub
repz
imul
push
pop
push
insl
push
in
xchg
mov
push
push
cmc
or
mov
cltd
push
xor
aad
push
repz
pusha
dec
mov
loopne,pt
mov
inc
insl
push
push
pop
inc
lods
shrl
stos
sbb
mov
and
lods
sub
shlb
sarl
mov
outsl
sub
push
push
aam
push
and
shl
dec
xchg
sub
or
ja
cli
jg
push
adc
test
pop
push
sub
inc
loope
lahf
aas
sahf
sub
xor
push
dec
movsb
cmc
mov
jbe
pop
fs
mov
push
add
pop
bound
mov
or
in
xchg
jge
out
add
xor
into
int
jnp
dec
push
fisubs
fmull
ret
and
movsl
fisubl
daa
sbb
cmc
adc
mov
dec
call
add
aas
lcall
pop
stos
push
shll
add
icebp
push
xchg
sub
push
shlb
imul
jbe
push
test
xor
das
pop
in
mov
cmpsb
dec
ret
or
test
mov
push
push
and
sti
pop
xlat
sub
inc
xchg
mov
sbb
ret
mov
sub
stos
shl
inc
or
or
jle
filds
ret
xchg
enter
mov
mov
adc
inc
scas
popa
mov
and
sbb
add
jecxz
or
sbb
imul
pop
mov
popa
lahf
push
cmc
jno
out
mov
scas
adc
cmc
xchg
xchg
hlt
adc
jne
sbb
stos
xor
add
cmpsl
jle
push
adc
je
stc
outsl
cld
out
xchg
mov
jae
in
adc
rorb
mov
aas
mov
push
pop
mov
jg
dec
cmp
adc
sub
gs
inc
push
pop
insl
jg
mov
dec
and
das
loope
lcall
adc
ljmp
pusha
imul
jg
cmpl
dec
push
push
xchg
push
outsl
mov
jnp
clc
ja
pop
stos
pop
or
adc
or
jge
jae
sbb
data16
push
test
mov
adc
cmp
mov
in
pop
add
fwait
loop
out
notl
xchg
or
daa
or
mov
nop
movsl
xchg
dec
dec
lcall
movb
and
xchg
jp
aad
das
shlb
push
lods
pop
loop
addr16
test
pop
adc
xor
adc
push
dec
loope
cmp
xchg
inc
stos
into
insb
dec
in
sub
pop
iret
mov
fprem1
int3
call
add
mov
leave
dec
push
sub
push
pop
push
out
iret
pop
je
fs
pop
mov
outsb
dec
or
adc
jbe
mov
add
sbb
loopne
add
cmp
movsl
pop
scas
or
adc
push
into
leave
pop
sar
push
sbb
mov
std
ret
addl
push
cld
lahf
cmp
pop
inc
incl
shrb
lods
loopne
push
sub
std
jno
in
push
inc
jg
stos
inc
mov
pop
or
xchg
cld
and
sbb
gs
pop
movsb
es
into
inc
pop
shlb
popf
pop
push
test
test
dec
xchg
mov
aas
hlt
or
inc
ljmp
mov
pop
fidivs
mov
cmp
dec
pop
mov
push
mov
push
cmpsl
leave
in
or
cltd
mov
and
mov
mov
mov
sbb
xor
adc
stc
add
add
cmp
dec
out
xchg
cmp
mov
scas
pop
mov
mov
push
jmp
insl
jmp
js
shlb
fistps
xlat
stos
loope
push
aas
sahf
in
or
adc
in
sahf
icebp
mov
lods
scas
out
shll
sub
insb
mov
pop
mov
xor
adc
mov
sti
fucomip
pop
and
ja
jle
loop
mov
shl
mov
push
add
and
ds
sub
stos
push
sbb
into
push
adc
in
xorb
sub
int3
in
fucomip
loop
pop
ds
mov
pop
ds
push
aam
int
add
dec
in
mov
movsl
mov
mov
scas
xlat
push
je
and
scas
dec
sahf
inc
inc
pop
int3
lret
stos
xor
adc
mov
add
fisttpl
repz
scas
pop
mov
outsl
je
arpl
push
adc
add
pop
inc
add
decl
cmp
inc
mov
fwait
cmp
mov
or
jnp
cli
fsubrs
push
adc
adc
mov
test
lods
xor
xor
xor
xchg
cli
push
out
push
and
xor
sbb
and
ljmp
scas
fcomps
add
shlb
xor
dec
cmc
addb
mov
pop
xorb
inc
sub
or
mov
enter
jae
push
sti
fs
push
out
loop
fists
add
adc
into
adc
push
add
fwait
xor
int
lods
adc
movsb
mov
jnp
xor
out
cmpsl
jl
lock
imulb
ret
or
push
adc
jg
cmpl
movsl
inc
gs
push
rorb
jo
inc
mov
mov
lcall
daa
icebp
push
cmp
lahf
fs
fmuls
xchg
sbb
jne
daa
jno
cmp
xorl
push
sub
jns
and
andl
xchg
dec
lods
push
lret
pop
fdivl
mov
jge
pop
dec
lods
test
loopne
out
fdivrp
test
mov
lcall
fildll
xor
push
sti
xor
pop
clc
dec
and
sbb
jle
arpl
cmpsl
pop
or
push
and
jl
pop
lods
test
sub
cmp
cmp
jns
ljmp
adc
and
outsb
outsl
cmp
cs
cmpsl
les
xor
jg
ljmp
test
shll
out
cli
sbbl
dec
mov
xchg
sbb
jns
mov
xchg
or
inc
movsl
imul
mov
aad
test
pop
leave
shl
arpl
xchg
bound
xchg
in
cli
test
insl
mov
fidivl
mov
xchg
test
fsubs
lds
fisubs
test
mov
scas
sub
movsb
fmuls
clc
rolb
pop
pop
xchg
lds
dec
outsb
sarl
inc
mov
sub
test
icebp
fs
flds
or
sbb
gs
xor
mov
push
jae
dec
lods
pop
mov
nop
inc
sbbb
and
daa
fidivl
push
mov
lret
lods
sahf
mov
dec
orl
mov
stos
push
xchg
and
mov
sub
inc
jg
lahf
aas
ljmp
arpl
push
testb
inc
ret
lahf
insb
push
ds
sbb
dec
lock
fwait
sub
cs
jae
loop
filds
adc
xlat
lock
xchg
test
std
xchg
shlb
or
fildll
xchg
jmp
and
mov
pop
cli
mov
jge
sbb
push
test
cmc
into
jb
push
mov
sub
or
pusha
shrb
aaa
mov
fistps
popa
lahf
popf
loop
mov
mov
xor
push
test
loope
push
jnp
scas
icebp
cmpsb
or
pop
cld
xchg
xchg
mov
ja
cmp
into
inc
sbb
jns
pop
popf
shrl
stos
scas
popa
lahf
popf
loop
mov
mov
aaa
jle
dec
push
test
movsl
sbb
or
mov
or
loopne
das
and
jno
in
push
dec
std
das
mov
pop
stos
push
dec
bound
xchg
test
mov
xor
cltd
movsb
pop
xorb
fldt
aam
push
mov
pusha
inc
pop
and
cmp
js
jo
ljmp
loop
out
in
out
pop
fnstenv
or
push
ss
mov
add
dec
sbb
sbb
aas
or
sar
and
add
sbb
jecxz
fwait
loopne
loope
ror
shlb
sti
jnp
fsubrs
pop
cltd
sbb
aas
sbb
mov
jg
inc
jbe
iret
sub
inc
lret
pop
inc
leave
mov
lock
or
arpl
xor
pop
pushf
int
cmp
jae
add
test
push
sub
xor
arpl
adc
es
ret
mov
or
and
mov
enter
dec
and
push
adc
mov
jnp
inc
out
mov
lret
lods
cmp
fwait
add
jbe
lock
icebp
xchg
or
xor
pop
sar
jno
cmp
xchg
into
pop
push
adc
insl
push
testb
out
decl
addl
push
jne
daa
jno
cmp
or
rcl
ds
outsl
jno
fimuls
ljmp
jp
js
idivl
cmp
dec
aas
stos
push
inc
cli
push
and
push
jle
int3
mov
and
jmp
fildl
xchg
or
add
out
xchg
and
imul
mov
jno
lods
push
ret
inc
jmp
sub
xor
es
inc
adc
das
jno
sbb
cmp
inc
dec
push
sbb
sar
ja
xchg
xchg
dec
sbb
push
xor
sbb
es
add
fdivr
lods
dec
test
scas
into
cmc
movsb
inc
pusha
push
jecxz
lods
cli
lcall
pop
xor
xorb
adc
add
jae
subl
jb
xchg
xchg
test
adc
cmpsb
add
adc
inc
popf
fs
daa
mov
mov
ret
cmpsl
inc
cmp
or
adc
lahf
test
repnz
adc
insl
addb
dec
push
scas
xchg
add
pop
gs
add
jl
shlb
shl
fs
jno
or
sub
mov
dec
sub
inc
lcall
movsb
inc
ds
xchg
push
jmp
rcl
lretw
and
ficoml
enter
mov
daa
push
cmp
les
adc
ret
addr16
sub
call
push
fisttpll
dec
dec
push
add
sub
lods
sarl
inc
and
pop
pop
push
adc
movsb
mov
adc
fld
mov
xchg
sub
push
mov
subb
or
popa
xchg
scas
stos
fcoms
mov
pop
movsl
dec
and
and
jl
scas
mov
stos
cwtl
sub
out
push
fs
mov
xchg
test
lock
rorb
add
bound
rcrb
enter
in
push
and
cmp
push
and
ljmp
dec
roll
inc
out
or
mov
mov
repz
sub
lods
or
ja
mulb
mov
mov
mov
mov
jbe
pop
inc
or
cmp
ja
mulb
mov
and
pop
stos
push
shlb
inc
aad
fiaddl
adc
xor
adc
mov
les
iret
jge
pop
push
fbld
mov
imul
adc
scas
sub
sti
notb
adc
and
jl
jecxz
cmp
add
cwtl
imul
push
test
adc
stc
xchg
cltd
jno
popf
test
push
jecxz
mov
loopne
xor
inc
lock
jbe
loope
dec
cmpl
xchg
push
inc
clc
sub
dec
scas
push
fucom
dec
gs
mov
jecxz
ljmp
inc
jb
cltd
and
cmp
dec
or
jle
jmp
fs
dec
sub
leave
inc
push
call
pop
testb
int
pop
jne
mov
test
dec
ret
mov
jge
push
mov
scas
sub
cmpb
arpl
popf
iret
adc
rcrb
xor
and
dec
bnd
cwtl
rol
push
lock
int
js
xor
lods
out
add
shlb
daa
int3
js
jp
in
push
and
mov
sub
jbe
out
cmpsb
sub
or
movsb
and
dec
in
mov
sbb
pop
fcoms
mov
out
gs
idivl
sarb
addr16
jbe
and
loop
in
mov
shlb
dec
xor
adc
sub
gs
jb
xor
pop
jmp
iret
xor
aad
or
mov
clc
mov
inc
mov
push
pop
mov
or
mov
pop
xor
adc
in
pop
xchg
nop
enter
jg
push
cmp
bound
mov
adc
aas
cwtl
cmpb
mov
xor
sub
mov
imulb
lods
pop
ljmp
pop
mov
jno
fdivp
fisubl
out
in
inc
gs
mov
adc
test
nop
mov
stos
inc
lahf
outsb
cmc
gs
imul
push
insl
lock
dec
jg
pop
push
push
sub
mov
push
mov
pop
dec
popa
out
push
out
adc
cmpsb
imul
add
leave
sbb
dec
addl
aad
scas
and
mov
sbb
push
cld
out
fcmovb
outsl
into
pop
mov
aam
popf
call
pop
pop
ret
fldl
xchg
adc
iret
lea
mov
dec
movl
sbb
popf
add
push
stos
push
daa
cmpsb
lods
or
daa
sbb
add
or
lods
adc
cld
lods
roll
test
mov
das
jns
mov
aas
jle
jno
cli
je
xchg
fidivrs
add
test
in
dec
add
push
pop
mov
inc
fwait
dec
int3
adc
aad
aaa
sbb
push
xor
mov
and
push
fwait
and
test
sbb
xor
adcb
fs
in
lods
mov
sub
subl
cmpsl
dec
popa
sahf
mov
mov
mov
es
stos
fstpl
std
pusha
jmp
cmp
dec
int3
outsl
leave
push
je
fisubs
pop
jb
popa
cwtl
mov
fs
jmp
mov
jbe
add
in
cmp
sbb
or
stos
mov
scas
pop
xor
push
fdivrp
push
pop
xor
jle
mov
dec
imul
push
xlat
insb
jns
inc
loope
mov
outsb
cmpsb
dec
jmp
jne
lea
and
push
popf
adc
push
testl
sub
std
or
aaa
dec
js
inc
or
imul
mov
dec
and
arpl
shrl
inc
cmpsl
dec
in
fcomps
dec
ljmp
pushf
sub
cmpsb
test
push
sbb
in
push
inc
les
xor
test
fwait
inc
call
and
movsl
lahf
icebp
shrb
inc
out
int3
repnz
shlb
ficomps
push
scas
adc
sub
movsb
dec
out
pop
testl
or
hlt
fbld
fcoms
call
sbb
daa
pop
xor
adc
xchg
and
xor
es
and
out
cmp
aas
das
daa
push
sbb
div
cmpb
push
ljmp
and
adc
xor
pop
test
inc
je
test
xor
dec
scas
jbe
stos
dec
mov
xchg
enter
das
test
inc
xor
pop
ljmp
mov
aas
add
lea
outsl
mov
clc
shrl
adc
fstl
pushf
cmc
pavgw
xor
and
in
or
add
fldcw
jg
cld
stos
divb
cmpsb
dec
xchg
lock
movsl
mov
inc
xor
mov
les
mov
into
and
push
aad
adc
mov
xor
in
lcall
sub
or
bnd
xlat
sahf
add
mov
pop
and
lds
cltd
inc
dec
cld
sti
mov
int
cmpl
inc
lret
inc
push
sub
xor
int
loope
sbb
ret
mov
lcall
and
fs
fs
inc
loope,pt
mov
inc
adc
xor
and
and
xchg
cli
cmc
push
cmp
popw
xchg
xchg
arpl
cmpsb
adc
mov
push
or
test
iret
ret
xchg
lds
sarb
jnp
or
push
out
push
mov
dec
jnp
cli
mov
jb
jno
cmpsl
loop
ror
es
cmc
shr
pop
mov
mov
mov
pop
ljmp
stos
sbb
orl
imul
xchg
push
xchg
or
iret
inc
add
adc
scas
cs
push
adc
jns
jge
orb
pusha
xlat
lds
es
imul
movsl
lret
pop
and
lock
ja
jns
leave
lcall
shr
insb
xchg
or
popl
scas
or
mov
lods
mov
popa
std
addr16
push
push
and
or
rclb
push
sarb
and
sub
mov
test
cmp
adc
sbb
das
mov
clc
cmpsl
flds
jo
pop
into
sbb
filds
aaa
aas
hlt
decb
pop
adc
mov
add
ds
mov
lahf
fisttps
inc
xchg
xchg
dec
xor
adc
repz
popf
push
push
ds
popa
std
sti
mov
dec
adc
gs
clc
movsb
in
inc
cld
push
scas
pop
into
loop
shll
mov
push
mov
rolb
sbb
xlat
mov
mov
fstl
mov
sbb
jmp
fidivrl
cmc
std
and
aas
mov
jne
jmp
fidivs
mov
inc
lods
test
hlt
inc
int3
fimuls
dec
ret
jmp
mov
pop
mov
dec
dec
sbb
pop
dec
adc
imul
scas
push
lahf
pop
mov
push
sti
push
fstpl
mov
nop
shr
stos
jg
fcmove
push
ja
mov
and
stos
push
sti
pop
sub
mov
fnstcw
and
add
or
int
loope
mov
movsl
rolb
push
mov
or
fisubs
xchg
fisubl
or
add
lahf
arpl
jge
faddl
adc
or
jo
pop
cmp
outsb
orb
lds
xchg
pop
ja
jle
sub
adc
or
inc
sub
lcall
scas
or
lods
mov
push
insb
or
insb
pop
jle
sar
jnp
xchg
fsubrl
sub
in
mov
std
adc
or
gs
test
insb
adc
xor
jmp
jp
lds
mov
das
adc
jmp
mov
or
xor
movsb
fldl
sub
scas
inc
ljmp
shr
inc
xchg
enter
les
mov
mov
in
xorps
xor
imulb
dec
jle
push
ljmp
xchg
push
or
aad
rcl
jnp
inc
adc
push
les
out
test
pop
xchg
sub
jbe
lods
sbb
xchg
pop
mov
and
dec
push
jo
into
out
cmp
pushf
cmpsl
jbe
fbstp
test
daa
xor
insl
clc
cli
mov
add
dec
jg
xchg
xorl
jmp
fwait
push
sbb
ret
testl
incb
into
testl
add
in
xchg
cmp
lods
sbb
or
ja
hlt
mov
xchg
sahf
and
sarl
mov
xor
inc
or
iret
mov
testb
stc
adc
jae
pop
sbb
fwait
dec
lds
push
inc
cmc
mov
insl
dec
incb
mov
ret
outsb
lret
sbb
fldl
arpl
lret
mov
test
mov
lds
stos
addl
mov
sbb
idivl
fcmove
inc
push
mov
mov
jae
jp
sarl
sub
cs
popf
lahf
arpl
push
mov
sub
or
gs
xor
mov
cmpsb
rorl
stos
dec
aad
lods
dec
lock
lods
add
mov
imul
ljmp
xor
push
jge
ret
mov
shl
dec
data16
mov
push
jae
enter
mov
daa
push
push
xorl
std
xor
imul
add
cmp
loope
mov
movsl
xchg
and
cmp
movsl
fnstsw
push
hlt
addl
leave
mov
jecxz
jno
mov
mov
es
mov
push
rol
mov
lock
cmp
std
cmp
and
cmpsl
outsb
push
stos
and
enter
add
loop
lods
pop
mov
or
add
cltd
leave
sbb
repnz
fbld
pop
lods
inc
fwait
sub
mov
scas
mov
push
mov
cld
lods
fldl
and
stos
adc
pop
shrb
push
cmpsl
out
ds
inc
push
add
popf
xor
adc
ret
es
push
inc
adc
pop
cmc
into
negb
jp
insb
addl
mov
scas
dec
lods
push
sub
fxam
test
sbb
pop
mov
mov
test
sti
jl
test
and
push
push
stos
clc
pop
das
add
cmpsb
xchg
jae
sub
jle
xor
js
ficoml
sub
ds
xchg
xchg
movsb
dec
loopne
pop
pop
cmp
pusha
sbbb
dec
xchg
cs
js
ljmp
push
pop
adc
test
add
daa
lcall
sbb
lods
push
loopne
pop
dec
push
mov
dec
std
jno
in
push
pop
push
loop
test
or
cmpsb
pushf
jmp
pop
mov
fcmove
sbb
jo
jbe
mov
push
ret
sub
sub
push
adc
pop
addb
in
and
enter
cld
add
test
add
test
dec
xchg
sub
inc
in
jbe
add
loop
mov
cli
push
test
pop
cmpsl
inc
mov
pop
adc
aaa
push
cmp
mov
pop
adc
xor
jge
dec
bound
les
adc
lock
mov
les
adc
sbb
not
cmpsl
inc
jg
repz
lods
sub
mov
push
mov
icebp
cld
out
xchg
cmpsl
push
pop
xchg
dec
fsubl
mov
dec
iret
js
fsub
jle
lock
pop
cmp
je
pop
adc
aas
mov
ret
out
xchg
lods
cmp
mov
adc
fidivrs
adc
gs
xchg
aad
je
pop
adc
cmpsl
je
pop
adc
or
cltd
add
sbb
lahf
in
and
hlt
adc
xor
jno
lret
insl
sub
aam
mov
lock
mov
jnp
stc
ret
mov
dec
pop
or
cld
incb
jno
adc
dec
jle
ret
icebp
addr16
mov
je
pop
adc
lds
inc
test
mov
sub
gs
jns
lahf
ljmp
lret
repnz
data16
inc
popa
ret
aaa
push
push
cmpsl
xlat
outsb
fs
dec
and
lret
sahf
loopne
cmp
in
mov
inc
and
fstp
pop
ja
dec
sbb
mov
lret
cmp
adc
stos
fcompl
push
adc
outsb
mov
js
sbb
inc
add
pop
sti
fs
push
mov
xorl
enter
cmp
adc
cmpsb
adc
fldenv
or
mov
adc
jg
out
xor
cli
xor
fistl
inc
mov
push
out
mov
mov
xor
or
dec
pop
or
and
mov
pop
mov
or
or
push
xor
mov
mov
lret
adc
pop
xchg
or
rclb
mov
test
push
test
out
iret
call
mov
es
adc
iret
pop
adc
cmpsb
and
mov
jb,pn
xchg
push
and
pop
pop
sub
fidivl
jmp
push
adc
dec
imul
pop
inc
test
pop
jecxz
vpsubq
in
test
stos
shll
out
push
scas
les
dec
imul
aas
or
test
or
push
adc
fsubl
mov
push
rcr
mov
jle
dec
pop
or
mov
cld
jo
adc
out
push
scas
repnz
das
movsl
mov
xor
in
int
es
sbb
sub
adc
cmpsb
inc
mov
hlt
loop
xchg
aas
fstps
inc
and
sti
imul
and
mov
stos
push
scas
repnz
inc
shrb
mov
arpl
cmpsl
dec
jmp
imul
sbb
inc
mov
jb
stos
push
fisubrl
cmp
fistpll
inc
lret
or
or
and
jno
imul
shlb
dec
out
je
mov
stos
adcl
push
sub
jne
cmp
lret
push
adc
add
pop
adc
mov
xor
faddl
adc
mov
push
mov
lcall
pusha
dec
jb
mov
lds
adc
jo
mov
scas
pop
rorb
shll
loopne
ret
add
inc
int
adc
pop
xor
xchg
sub
and
sarb
in
xor
ret
or
cmpsl
fadd
mov
hlt
fidivrs
pop
mov
sahf
je
cld
cli
imul
xchg
xor
mov
stos
fisubrs
pop
mov
xor
mov
mov
push
jecxz
out
xchg
jne
xor
nop
scas
pop
mov
pop
adc
lcall
jb
xchg
sub
sbb
pop
adc
mov
in
xchg
pop
insl
xchg
mov
out
jp
mov
lds
adc
mov
imul
rcrl
pop
adc
call
mov
pop
mov
jmp
test
lds
adc
scas
iret
addr16
dec
dec
mov
andl
adc
xor
mov
jle
mov
pop
sbb
cmovl
cli
push
insl
std
jle
lods
mov
sbb
adc
incb
jg
xor
mov
imul
cmp
mov
mov
sbb
mov
insl
fs
data16
jmp
mov
in
adc
xor
jno
lock
ds
pop
jbe
gs
push
mov
sub
xchg
fbld
pop
dec
enter
loopne
ljmp
and
stos
enter
jecxz
sbb
xchg
mov
push
adc
and
fiaddl
inc
inc
dec
pop
or
mov
adc
and
out
movb
jg
adc
in
mov
mov
or
push
loope
or
stos
push
sbb
cmp
adc
mov
or
cmp
inc
jns
jns
add
pop
adc
push
or
shrb
and
jle
sub
ss
sbb
fstps
aas
mov
xchg
mov
or
pushf
clc
leave
xchg
cs
test
pop
mov
or
gs
and
add
pop
adc
mov
or
pop
ret
push
enter
cmp
and
adc
xor
adc
mov
lret
push
data16
imul
jge
int
insb
cwtl
add
cmp
pop
lods
mov
cmpsl
mov
addl
push
cmp
xor
xchg
mov
lds
out
jbe
xlat
jb,pn
sarb
lret
adc
pushf
aad
sbb
jle
sti
mov
movsl
xchg
ljmp
mov
pop
adc
iret
repnz
pop
sub
mov
rcl
add
js
lea
jmp
sbb
mov
dec
or
cmpsl
dec
jmp
add
adc
mov
adc
adc
rorb
or
in
inc
sti
imul
adc
adc
push
pop
or
add
sub
sbb
or
daa
inc
cld
jo
adc
xlat
arpl
fidivrl
push
or
mov
adc
mov
in
dec
out
push
fadds
scas
sub
cli
negb
adc
clc
out
xchg
daa
push
imul
adc
dec
push
dec
pop
or
test
out
mov
scas
mov
push
xchg
popa
movsl
dec
xchg
xchg
dec
bound
xchg
sbb
push
adc
push
sub
and
in
mov
dec
mov
or
cld
jo
adc
adc
add
ds
lods
pop
mov
lea
pop
xchg
adc
jns
xor
xor
xchg
roll
enter
push
push
xorb
shr
jne,pn
aad
adc
das
jl
roll
aaa
sub
ja
dec
addl
dec
jg
popf
inc
mov
adc
push
mov
movsb
pop
dec
fs
sbb
pusha
dec
decl
cmp
xchg
cs
xor
push
fidivl
imul
dec
xchg
dec
xchg
das
and
xor
pop
lods
and
shll
adc
hlt
out
xor
push
adc
sub
push
mov
fstp
xchg
sub
sub
or
push
jmp
ret
jp
cmp
das
push
fisubl
add
jno
xlat
addps
gs
lods
push
decl
testl
mov
and
sub
hlt
mov
jecxz
xchg
mov
shll
xchg
inc
stc
movsl
lret
cmp
mov
adc
or
sar
jl
inc
test
stos
sub
call
pop
adc
sub
insl
flds
int3
xchg
push
adc
pop
adc
in
sub
jne
sub
in
jae
push
nop
std
add
pushf
fdivr
pop
adc
and
popa
mov
ja
testb
pop
daa
mov
dec
icebp
pop
into
inc
push
or
inc
mov
fwait
pop
mov
push
dec
jle
inc
pushw
loope
aaa
add
psllq
inc
mov
cli
add
adc
rep
xchg
out
or
pop
adc
push
push
mov
cmp
enter
mov
iret
adc
mov
pop
icebp
les
ror
mov
or
js
inc
pushf
adc
and
push
and
insl
cmc
mov
sti
push
push
leave
repnz
mov
cltd
arpl
add
or
adc
lret
push
call
jecxz
repnz
outsl
loopne
aad
mov
dec
cmp
cmpl
lods
fimuls
mov
sub
test
scas
jbe
pop
adc
icebp
lods
adc
jg
jb
shlb
fucomp
movsl
inc
mov
mov
mov
movsl
fchs
mov
cmp
fucomp
cwtl
movsl
movl
or
dec
jg
enter
adc
js
xchg
inc
xchg
ljmp
movsl
lds
dec
stos
sub
call
jo
xchg
ret
addr16
push
loope
lds
sub
jp
xchg
adc
daa
mov
jnp
sbb
imul
push
and
out
lock
sub
and
mov
adc
pusha
jecxz
cmpsl
dec
lahf
stos
jle
xor
or
push
imul
inc
add
adc
mov
push
fistpl
mov
mov
adc
adc
push
sub
idivb
std
pop
adc
aam
pusha
rolb
or
pusha
mov
jnp
mov
add
jge
and
lods
pop
cmp
cld
jle
sti
xor
sub
mov
mov
pop
jo
pop
or
dec
jle
jo
adc
jge
std
sti
notb
push
dec
push
adc
scas
pop
rorb
cmpsb
mov
shlb
push
loopne
xchg
mov
mov
arpl
lods
fbld
jmp
sub
dec
lahf
aas
cmp
shlb
mov
into
stos
push
scas
add
sub
lock
dec
jmp
in
sti
idiv
sbb
adc
aam
inc
mov
mov
push
or
dec
addl
dec
jg
mov
push
test
sbb
mov
imul
sarl
xchg
inc
cld
sti
sbbb
push
or
adc
scas
xchg
and
jmp
sub
mov
adc
push
xor
cmpsl
fiadds
dec
ds
mov
cmpsl
dec
pop
inc
sar
sti
negb
pop
xor
test
dec
pop
mov
lds
push
les
or
dec
mov
movsl
shr
mov
fisubrl
adc
sar
addr16
and
dec
sahf
or
jns
lods
popf
mov
jno
scas
pop
int
aas
shll
dec
popf
dec
push
sbb
hlt
out
scas
les
arpl
and
mov
cmpsl
dec
scas
push
and
pop
add
sub
cwtl
adc
sub
mov
push
xor
add
aad
popf
and
fidivrl
push
or
leave
xchg
and
xor
xor
lds
adc
mov
es
dec
cmp
inc
mov
mov
mov
fwait
mov
test
and
pop
or
push
jo
cmpb
mov
adc
sbb
adc
mov
xor
jg
mov
xor
rolb
adc
adc
inc
push
ret
push
cli
lods
out
test
adc
call
test
data16
add
add
adc
adc
pop
scas
mov
mov
jl
insl
cs
adc
jbe
push
mov
pop
or
cld
pop
inc
pop
or
pop
xor
adc
push
pop
hlt
rorb
pop
or
inc
push
ds
pop
or
mov
or
pop
mov
int
adc
icebp
andb
or
icebp
add
push
fsubl
nop
out
in
movsl
insb
xor
imul
sub
imul
loopne
sti
xor
sub
push
xchg
push
adc
mov
mov
jmp
leave
xchg
cmp
sbb
or
xchg
push
jmp
mov
repnz
loop
in
mov
scas
xchg
movsb
add
sbb
out
mov
xchg
push
cmc
fwait
cs
nop
xor
cmpsl
stc
loop
mov
push
loopne
insl
push
les
lock
arpl
popa
loop
orl
sub
lret
mov
shll
int
push
push
jnp
jo
or
mov
in
jnp
popf
jp
pop
mov
ja
jo
adc
mov
fdivs
loopne
push
addb
and
add
adc
aad
or
in
cmc
and
int
lahf
aas
jle
push
testb
aas
dec
adc
rcr
pop
adc
mov
sbb
lahf
aas
inc
test
les
pop
push
ds
sub
push
sub
or
cmp
mov
jle
push
adcb
ljmp
adc
inc
mov
mov
pop
cmp
loope
jge
push
mov
sahf
dec
sub
jmp
flds
adc
cld
jo
adc
xchg
test
jmp
movsl
int3
xchg
sub
inc
mov
lock
sbbl
insb
xor
pop
test
inc
mov
lods
daa
mov
pop
adc
fwait
pusha
cmpsl
push
dec
lods
xor
mov
push
stos
fstpl
inc
jo
pop
adc
aas
lods
mov
cmpsl
inc
or
jno
xchg
movsl
sub
loopne
push
mov
int3
flds
adc
add
adc
mov
rorl
mov
stos
push
test
daa
adc
or
flds
adc
and
int3
flds
adc
dec
cld
jo
adc
sub
jo
pop
adc
lret
mov
adc
xor
sub
push
and
sub
pop
fisubl
xchg
push
je
adc
aaa
lock
push
stos
shlb
push
sub
das
mov
mov
addl
mov
dec
loop
lcall
cld
push
mov
mov
es
imul
push
adc
push
adc
xlat
push
inc
fdivr
subl
insb
stc
hlt
out
dec
jo
or
call
push
sti
add
mov
fmul
gs
push
jb
jo
pop
adc
and
scas
leave
stc
push
cmpsl
mov
dec
xchg
xor
notl
sub
inc
in
pop
adc
leave
and
flds
adc
sahf
leave
inc
jno
adc
flds
adc
add
sub
or
push
inc
push
mov
adc
mov
mov
push
mov
sar
sub
insl
outsb
lods
xchg
push
adc
sub
xchg
inc
xor
adc
mov
cs
pop
ja
pop
adc
cli
sbb
ret
mov
mov
popa
pop
adc
pop
push
pop
fnstcw
inc
jle
mov
repz
adc
jne
pop
adc
or
or
popf
jne
mov
adc
xor
mov
clc
dec
inc
xchg
push
jne
int
repnz
loopne
pushf
ja
pop
adc
fistpll
rolb
cwtl
xorb
sbb
xor
sub
jns
repnz
fdivrs
cmpsb
pop
adc
mov
xor
xchg
push
es
mov
loope
loope
mov
xor
fists
or
and
sti
xor
out
xor
adc
cmp
scas
sbb
pop
sub
fsubrs
jle
jne
fs
pop
adc
into
rcll
sub
sub
cmp
mov
icebp
and
pop
adc
mov
dec
ljmp
lods
rcll
rorl
enter
push
sub
std
pop
adc
pop
inc
inc
or
sub
push
mov
scas
jg
xchg
lahf
sbb
jno
mov
lret
std
pop
adc
dec
or
flds
adc
out
cwtl
aad
mov
sbb
outsb
test
xchg
iret
int3
xchg
outsb
popf
test
test
jmp
or
mov
pop
in
call
pop
adc
xchg
aam
lret
imul
cmpsl
loope
dec
sti
testb
jg
or
adc
scas
pop
mov
dec
loopne
lock
dec
lahf
sti
inc
jbe
sbbb
mov
sarb
dec
adc
push
add
adc
inc
je
sbb
push
adc
imul
pop
or
sub
out
scas
jo
pop
adc
movsl
loopne
enter
pop
add
pop
xchg
cs
adc
sub
inc
mov
push
sahf
cmc
pushf
int3
imul
pop
loope
and
push
pop
es
mov
sub
push
cmpsl
jbe
cmp
ljmp
mov
push
stos
popf
dec
pop
or
lahf
pop
cmpsb
dec
jle
jno
adc
mov
sbb
jo
pop
adc
push
add
adc
mov
rclb
push
or
mov
stos
push
push
mov
mov
jae
cmpsb
dec
lahf
rorb
into
pop
jo
pop
adc
jne
adc
test
mov
cmpsb
push
cmp
sahf
push
cmpsl
dec
xor
adc
inc
mov
push
cli
stos
push
scas
xlat
adc
es
dec
pop
dec
pop
or
lahf
aad
jo
adc
pop
inc
lock
aam
mov
jae
sub
sar
push
add
mov
das
xchg
fcoml
dec
fucomi
jl
ds
push
cmpsl
dec
and
leave
sti
imulb
sahf
aaa
clc
sub
outsl
adc
dec
mov
sub
push
shlb
inc
in
adc
pop
cs
iret
jmp
mov
rclb
jp
cwtl
add
shrl
hlt
movsl
sub
push
cmpsb
int3
addl
mov
sbbb
sbb
pop
mov
or
stos
mov
jno
adc
outsl
shll
mov
mov
das
xor
jecxz
jo
pop
adc
pop
or
sbb
shll
sbb
rcrb
adc
pusha
mov
test
sbb
cmpb
les
or
popa
mov
xor
mov
ja
add
mov
add
loopne
add
cs
jge
in
sbb
sub
sub
fdiv
push
clc
inc
jae
xor
arpl
push
loopne
lahf
push
pop
inc
fsubrs
mov
call
pop
cli
add
or
adc
push
lcall
iret
jne
fs
dec
jno
xchg
pop
loope
repz
data16
leave
dec
cmp
popa
ret
and
sbb
push
out
ret
pop
mov
add
jo
pop
adc
data16
xor
les
in
jge
mov
ds
mov
inc
mov
js
push
pop
pop
mov
or
mov
adc
or
adc
in
push
and
inc
dec
cmc
out
icebp
adc
addr16
insb
lds
adc
sbb
push
mov
insl
insl
pop
xor
inc
pop
or
lds
adc
cmp
outsl
jae
mov
jns
int
adc
pop
adc
insb
lds
adc
cmp
or
pop
xchg
push
cmp
xor
jge
inc
pop
or
push
mov
pop
or
mov
and
push
adc
mulb
addr16
or
inc
dec
xchg
or
inc
sahf
test
mov
mov
mov
mov
adc
xlat
stc
xchg
outsb
popf
jbe
mov
repnz
push
adc
xor
jmp
iret
rcrl
add
fnstsw
hlt
es
xor
mov
inc
inc
push
mov
shl
movsl
add
stos
push
rcr
lods
fwait
popf
push
jmp
jmp
outsb
or
push
jle
adc
adc
cld
jo
adc
add
and
cld
sti
mov
dec
loop
lcall
std
push
mov
ds
xchg
sub
cmp
rolb
into
fcmovnbe
mov
into
frstor
popf
pusha
mov
pop
scas
pop
out
ds
dec
rorb
cltd
xor
adc
sub
add
lods
and
pop
ret
jl
push
adc
cmc
inc
mov
push
push
and
pop
popf
mov
ret
sub
mov
pop
adc
push
daa
and
push
adc
sbb
in
add
xor
jg
xchg
shr
and
in
fidivl
lods
rcll
sbb
cmp
pop
jmp
pop
jle
cld
push
add
pop
lods
push
sbb
pop
addl
pop
sub
sbbl
fstps
cmp
or
mov
int3
ficoms
popa
test
xor
popf
jl
ds
sub
in
mov
mov
push
jno
push
insb
or
push
outsb
adc
inc
add
cmpsb
sub
mov
push
sbb
int
shlb
ljmp
push
sub
mov
mov
mov
loope
pushf
mov
lds
movsbl
fsubp
xchg
pusha
xlat
dec
add
jnp
jp
in
adc
dec
ljmp
scas
or
movsb
sbb
mov
subb
mov
push
xlat
hlt
dec
mov
int
shll
and
scas
fsubr
mov
push
jnp
cmp
fdiv
aam
cmp
pop
and
jmp
ss
adc
and
mov
roll
lock
pop
test
sub
js
and
cmp
or
lds
jle
loopne
xor
mov
sbb
sbbb
vpunpckhbw
fbstp
push
adc
cmpl
arpl
jb
pop
je
add
fistps
js
jg
jp
cmp
pop
mov
add
sub
cmp
adc
int
sbb
inc
jl
pop
je
adc
push
cmp
addb
sub
pop
inc
loopne
adc
adc
mov
lods
subb
jg
xchg
or
push
mov
mov
hlt
mov
clc
and
stc
push
lods
jne
sbb
stc
or
xchg
pop
in
adc
cwtl
add
push
dec
dec
push
cwtl
popf
add
pop
mov
mov
jns
or
out
mov
xchg
mov
fs
inc
and
mov
push
xor
cmp
dec
mov
jns
xor
xorb
pop
fnsave
sub
imul
cs
push
lret
dec
xor
lcall
or
nop
pop
fidivrs
mov
jmp
push
imul
jb
xor
pop
in
adc
xor
jnp
bnd
outsb
and
push
ret
inc
aam
adc
and
scas
inc
stos
pop
stos
pop
mov
or
adc
cmpsb
inc
fucomp
cwtl
out
pop
scas
push
movsl
or
cmp
pop
test
push
and
xor
aad
addr16
test
rcrl
sub
push
add
lods
icebp
jl
jg
cmp
mov
es
imul
mov
mov
stos
and
cmc
int
sub
out
movsb
stc
mov
in
push
out
out
jns
outsl
rcl
push
pop
jns
mov
push
clc
push
mov
xchg
push
adc
fsubrl
xlat
xorb
adc
lods
pop
ja
cwtl
ja
sti
xor
push
mov
mov
fwait
fwait
test
inc
xchg
sub
aad
test
jle
push
pop
aad
daa
popa
shll
inc
mov
fistpl
sub
cmpsl
movsl
or
sti
mov
mov
pop
stos
push
test
icebp
inc
mov
jg
dec
xchg
pop
loop
jbe
cmp
ljmp
mov
aam
mov
jmp
lods
xor
cmc
add
or
in
xor
jno
adc
lock
clc
fsub
dec
xor
flds
adc
pop
arpl
add
fstl
out
scas
flds
adc
xchg
fwait
test
inc
xchg
sub
sarl
add
sti
test
sbb
mov
and
faddl
add
inc
xchg
add
or
inc
mov
lahf
aas
jle
mov
jne
jns
push
stos
ret
enter
sarl
stos
or
add
or
in
xor
jo
adc
out
daa
call
iret
xchg
movsl
mov
inc
lods
pop
mov
test
or
jmp
aad
pop
test
pop
push
mov
cmc
cmp
hlt
sti
mulb
ljmp
in
push
push
sbb
adc
in
lods
pop
mov
in
and
sti
subb
hlt
jno
in
fbstp
scas
call
mov
in
sub
dec
cmpsb
test
or
movsl
pop
in
mov
push
mov
xchg
pop
mov
test
divl
mov
filds
push
fldl
mov
xchg
sub
jl
stc
mov
cmpsl
shlb
outsl
shlb
push
mov
pop
dec
mov
gs
push
pop
inc
jae
mov
inc
lds
es
scas
push
inc
test
push
adc
ljmp
loop
push
or
add
add
mov
mov
pop
jmp
lods
push
mov
lret
dec
push
in
xor
adc
out
jecxz
pop
pop
shrl
cld
or
aas
or
dec
les
push
and
inc
ffree
cmp
pop
or
push
sbb
jno
adc
inc
lods
ja
pop
shrb
adc
or
dec
dec
mov
mov
add
add
pop
or
je
jecxz
addb
fwait
pop
insl
sub
stc
das
jo
mov
xorb
adcl
cld
pcmpgtw
xchg
lock
stos
dec
fs
sti
aam
mov
or
js
cmp
cmp
adc
lahf
ja
bound
adc
sbb
cmp
mov
adc
add
pop
ds
scas
out
xchg
sbb
lock
in
push
mov
dec
cmp
scas
sub
or
sub
and
loop
xlat
mov
jae
lock
jge
cli
fstl
cld
call
jbe
popl
mov
push
or
or
push
imul
and
and
sub
mov
xchg
inc
adc
stos
xchg
pop
sub
fisubrs
rclb
arpl
es
pushf
gs
cli
or
cwtl
fdivrs
das
testb
rorb
movsl
inc
xor
fsubs
jb
ja
out
pop
cmp
aad
ljmp
mulb
sub
adc
jmp
sbb
adc
inc
or
adc
dec
lret
and
add
inc
mov
push
and
sub
imul
lock
jp
xchg
mov
jmp
in
je
jbe
dec
or
push
and
sub
cmp
hlt
imul
movsl
mov
fidivrs
jle
dec
movl
or
pavgb
pop
mov
dec
xorl
cmpsb
dec
in
lea
int
mov
push
pop
inc
scas
pop
mov
inc
xchg
sub
arpl
fmuls
dec
movsl
xchg
push
out
sub
lock
rclb
shlb
push
dec
jne
jae
adc
rcrl
mov
pop
daa
xchg
pop
scas
pop
jle
bound
mov
imull
push
shl
push
cmc
adc
pop
sbb
or
movsb
in
pop
mov
cwtl
repnz
xchg
sub
pop
or
into
push
cs
inc
pusha
cld
jo
adc
lret
or
xlat
clc
arpl
sub
mov
shlb
or
ret
sarl
jge
jb
push
stos
stos
push
int3
push
mov
movsl
dec
out
xor
dec
lahf
nop
rorb
ret
stos
inc
mov
scas
das
or
andl
imul
inc
and
push
inc
sbb
push
adc
cltd
enter
jae
arpl
or
xor
jecxz
imul
mov
stos
nop
psubq
popf
popf
jecxz
xor
lods
pop
xchg
dec
rolb
mov
dec
je
stos
push
test
and
mov
sub
mov
orl
dec
mov
and
in
lahf
aas
imul
cmpl
inc
mov
cmpsl
pop
mov
dec
loopne
adc
inc
ja
sbbl
mov
daa
fwait
cmp
pop
std
push
mov
out
pushf
sub
dec
movsb
xchg
or
mov
sub
in
lods
pop
int3
sbbl
xor
jo
sbb
lcall
push
scas
and
addr16
in
shlb
xchg
sub
pop
ljmp
out
sarb
push
adc
fdivr
jle
fsub
jg
and
sub
popa
call
sub
add
icebp
dec
mov
mov
std
pop
mov
push
add
xor
into
mov
cli
std
adc
aaa
add
inc
mov
add
xchg
adc
stos
push
insl
jae
in
xchg
xchg
sbb
add
cmp
push
test
ret
int3
andl
sub
outsb
and
mov
cmp
jg
aaa
in
pop
rcll
flds
jnp
test
fiaddl
push
dec
jno
push
ja
loope
lods
xor
rorb
mov
jnp
adc
jae
xor
mov
lcall
or
sbb
add
adc
add
popa
ret
cmp
lods
out
insl
lods
loopne
dec
and
bound
sbb
jne
cmp
inc
mov
mov
test
xor
or
rcll
cmpl
sarl
xchg
cmp
mov
arpl
leave
inc
inc
cmp
icebp
hlt
rcl
mov
fwait
mov
push
bound
cwtl
sbb
adc
fcmove
adc
or
flds
adc
loop
jno
adc
dec
jne
xor
and
nop
mov
rolb
jo
adc
out
xchg
cs
ret
mov
repnz
stc
fildl
xor
or
movsl
mov
jno
adc
jnp
pop
mov
cmpsb
jg
call
cmp
jp
sbb
and
inc
mov
inc
inc
je
sub
cmc
cmp
mov
adc
sbb
in
push
test
and
jne
fwait
mov
jmp
testb
out
sub
cmpsl
lds
popf
std
mov
lahf
aas
or
loope
mov
jmp
stos
push
scas
dec
es
shlb
dec
cmp
mov
ljmp
jge
jmp
push
scas
pop
lods
leave
mov
movsl
mov
inc
fdivs
nop
xchg
push
adc
push
adc
adc
or
sbb
dec
xchg
mov
dec
or
sti
imul
int
or
mov
adc
adc
cli
push
cmpsl
dec
xor
or
pop
or
or
mov
add
add
movsb
movsb
mov
aad
shr
data16
aad
sub
sub
shrl
std
or
pusha
sub
bound
in
adc
pop
or
inc
pusha
cld
jo
adc
lcall
pop
cmp
sbb
mov
popa
shll
push
stos
and
into
mov
mov
dec
adc
sbb
out
stos
inc
mov
scas
pop
enter
movsl
dec
xor
cmpsl
dec
cmpsl
inc
or
jno
xchg
shrl
pop
or
push
inc
cld
jo
adc
xchg
popf
lods
dec
xchg
in
outsl
sahf
cmc
pushf
popl
inc
ficompl
lahf
jmp
aad
add
loopne
movsl
mov
adc
or
push
testb
sbb
shlb
cmp
push
add
or
sub
mov
sub
cmp
aas
ret
mov
cmpsl
and
frstor
popf
pusha
mov
out
scas
pop
out
aas
lcall
cmpsb
jle
in
and
and
lods
fcmovnbe
inc
add
pushf
pop
cmp
das
inc
inc
aas
and
sar
jae
fwait
stc
mov
repz
aam
add
les
pop
fsubrl
and
gs
add
in
cmp
push
mov
mov
rorb
sub
cmc
bound
cmp
or
xchg
lock
xor
shr
cmpsl
inc
lds
jecxz
fcmovne
popf
and
inc
sub
fld
call
clc
iret
fiaddl
adc
imul
xor
pop
mov
sub
ja
adc
icebp
loopne
sub
pop
jmp
push
daa
aad
jge
ja
setno
lcall
mov
stos
lods
aam
jnp
jns
in
test
xchg
cwtl
test
inc
cmp
and
test
sbb
pop
cmp
arpl
push
scas
mov
out
es
pop
jl
jecxz
pop
or
mov
icebp
mov
psllq
jb
aam
mov
mov
pop
ja
mov
clc
test
pop
repnz
imul
mov
ljmp
mov
sub
int
fcmovu
jecxz
sub
jnp
mov
popl
clc
dec
sbb
popf
fwait
adc
lds
push
je
or
or
movsb
andb
test
roll
mov
lock
pop
cmp
and
mov
lret
mul
xchg
xor
push
mov
pop
sub
lahf
push
ja
mov
mov
xchg
scas
lods
mov
inc
inc
repz
sub
sbb
and
lods
leave
enter
repnz
xchg
jg
out
insl
inc
ss
adc
push
lods
scas
mov
into
outsl
push
push
mov
das
test
and
in
dec
lret
fnstcw
mov
dec
xchg
sahf
sbb
fistpll
std
jge
shl
mov
mov
or
mov
leave
sbb
aam
ss
xchg
sub
in
das
push
mov
data16
clc
out
into
leave
push
mov
sbb
sbb
mov
shr
test
pop
lods
pop
mov
or
add
or
push
adc
inc
iret
jbe
test
test
push
mov
pop
adc
enter
ss
mov
cmp
push
scas
mov
imul
mov
scas
pop
xor
pop
adc
mov
addl
pop
mov
dec
and
int3
push
fcmovb
movsl
dec
fs
mov
pusha
dec
testb
pop
sbb
pop
subb
mov
faddl
adc
pop
mov
fsubrl
cmp
rolb
test
bound
popa
stos
stc
push
lcall
jo
pop
adc
rolb
dec
xchg
cs
jne
pop
fs
add
jge
in
out
icebp
dec
les
jo
pop
adc
cs
mov
pop
stos
push
test
in
inc
mov
sub
mov
push
pop
inc
ficompl
adcl
scas
add
adc
sbb
push
sub
and
pusha
fwait
iret
add
lahf
jmp
test
clc
cmp
js
adc
mov
mov
inc
adc
aas
xor
sub
or
fdivl
xor
pop
fwait
addb
mov
push
stos
inc
adc
mov
pop
adc
lods
pop
cmp
and
std
sti
arpl
cmpsb
mov
adc
adc
add
lds
sbb
dec
xor
call
imul
in
in
out
dec
test
pop
xor
xchg
sub
and
iret
push
fmuls
das
pop
iret
js
shll
pop
adc
or
in
pop
scas
pop
mov
mov
lret
mov
pop
movsb
int3
jae
rolb
cltd
xchg
lock
add
sub
idivl
cmp
add
pop
push
sahf
movsl
scas
jle
cmpsl
lret
jl
aad
faddl
adc
push
mov
ret
push
ja
pop
cmpsb
push
mov
xor
lcall
aam
sub
je
jle
lods
imul
dec
xchg
pop
inc
dec
clc
test
popf
popa
ret
mov
or
movsl
jo
pop
adc
add
in
andb
hlt
fistps
jne
mov
arpl
cli
sahf
stos
dec
into
mov
xchg
dec
push
push
aam
xchg
icebp
xchg
scas
icebp
push
je
out
ret
mov
addl
inc
fnstenv
mov
pop
adc
mov
sarb
psubsb
leave
and
mov
fs
sub
rorb
jl
imul
call
or
ljmp
inc
sub
xchg
loopne
movsb
pop
mov
jno
popf
cmp
xor
xchg
imul
pop
jb
xchg
and
jae
insl
imul
dec
lods
gs
fisubrs
in
cmp
les
mov
cmpsl
jno
scas
lret
jmp
pop
pop
pop
cmpsb
fnsave
pushf
ss
loope
lret
xorl
cltd
add
inc
inc
out
push
sbb
outsl
sbb
fwait
stos
jle
je
adc
mov
sub
or
push
std
push
jl
outsb
pop
lock
cmpsb
lret
stos
test
cmpl
jecxz
and
pop
adc
push
mov
pop
mov
movsb
mov
out
aad
shr
sub
mov
push
or
mov
scas
or
mov
lahf
movsb
jo
pop
adc
inc
fwait
int
jg
or
popa
loop
cmpsl
repnz
push
movsl
push
mov
stos
push
decl
xor
fs
or
jo
pop
adc
sbb
popf
xchg
mov
push
aam
xor
arpl
pop
xor
bound
xchg
mov
hlt
sbb
adc
pop
dec
xor
mov
nop
dec
jnp
mov
stos
or
mov
cwtl
pop
pop
xchg
sub
arpl
add
sbb
pop
aaa
xor
test
ljmp
inc
daa
fildll
scas
mov
std
jle,pt
rcrb
inc
mov
fldln2
xor
adc
inc
push
cmpsl
jecxz
dec
std
std
sti
not
pusha
fistps
cs
push
stos
and
jmp
cmp
loopne
inc
std
std
sti
testb
inc
jle
xadd
sub
pop
sub
cmp
jbe
cmpsl
dec
mov
std
sti
xor
cs
mov
stos
push
add
sbb
adc
push
inc
mov
decb
adc
aaa
in
sub
movsb
insl
pop
mov
cmp
stos
push
cmpsl
dec
xor
xor
call
jg
lds
rorb
mov
add
loop
movl
nop
or
xchg
in
ficompl
jg
gs
mov
mov
pop
mov
dec
aad
ja
adc
dec
or
sti
imul
jecxz
imul
daa
imul
ret
push
xchg
shll
xor
push
test
or
out
test
mov
scas
sahf
mov
cmp
in
pop
pushf
adc
scas
das
enter
movsl
pop
cmp
insl
std
sti
pop
aam
mov
rorl
jae
adc
inc
mov
jge
sbb
aad
mov
arpl
orb
imul
adc
loop
das
pop
mov
loop
pop
or
cmp
adc
dec
xchg
sub
mov
pop
test
daa
fisubs
sbb
call
repz
cltd
ret
stos
push
adc
ja
add
cmp
ret
inc
xchg
sbb
cltd
fldt
test
jmp
fadds
mov
mov
ss
xchg
jge
jecxz
xor
or
mov
add
adc
and
pop
scas
popa
mov
push
out
sub
xor
sti
add
sub
aas
jne
pop
insl
inc
cli
sbb
adc
cmp
sbb
pop
test
cmp
notb
sbb
and
xchg
jg
in
pop
mov
xchg
mov
mov
add
mov
xchg
dec
addr16
adc
push
jp
mov
xor
add
cmc
push
notb
ret
test
ficoms
mov
jp
scas
addr16
pop
xor
cwtl
lret
gs
push
inc
mov
xchg
pop
push
adc
mov
cmp
pop
scas
xor
mov
xor
jns
inc
not
dec
and
push
adc
call
arpl
andl
les
adc
mov
pop
adc
jp
aaa
xor
outsb
inc
fildl
adc
or
hlt
push
push
push
insb
outsl
ret
cmp
xchg
xor
addb
mov
sub
jo
push
add
mov
pop
pop
mov
shlb
call
mov
adc
movsb
xor
inc
shll
clc
outsl
adc
sbb
es
xlat
in
dec
and
ljmp
inc
in
int3
sahf
sbb
scas
mov
xor
xor
lret
fldlg2
mov
pop
or
leave
jns
jo
adc
dec
shlb
sbb
adc
xchg
sbb
sbb
mov
in
flds
adc
add
mov
or
pop
mov
pop
mov
push
out
dec
les
adc
in
or
add
les
adc
and
cmp
aam
fisttpll
stos
movsl
mov
xchg
mov
sub
mov
ljmp
push
mov
movsl
dec
cmp
test
mov
cltd
mov
aas
lret
dec
sbb
push
subb
mov
faddl
adc
bound
sbb
fidivrs
rolb
je
pop
adc
xchg
call
adc
fmuls
je
pop
adc
je
pop
adc
or
adc
cli
rcrl
iret
cmpb
sbb
jo
pop
adc
lcall
pop
push
sub
lods
popa
lods
xor
shlb
dec
xchg
push
add
push
test
call
sbb
pop
jo
pop
adc
pusha
shrb
sahf
and
mov
add
fmull
xor
xchg
sub
and
ret
sub
xchg
mov
cmp
sub
imul
movsl
push
and
fsqrt
insb
out
shll
push
loope
mov
mov
inc
int
rolb
adc
dec
xor
fwait
jmp
adc
dec
nop
mov
jecxz
mov
sub
dec
pop
or
mov
adc
push
mov
dec
mov
ja
faddl
adc
bound
inc
imulb
fldcw
xchg
cmpsl
aam
push
mov
adc
push
jo
pop
adc
or
iret
inc
push
test
xchg
in
test
push
adc
stc
mov
popf
inc
jnp
jb
fwait
sub
sbb
gs
pop
push
stos
push
repnz
dec
int3
das
pop
mov
xchg
xchg
lcall
xor
push
cmp
shrb
add
rolb
xchg
lahf
jl
les
sbb
jg
xor
cltd
and
test
orl
mov
dec
out
jecxz
repz
or
iret
cmp
mov
lock
adc
cs
test
adc
jmp
aad
jmp
bound
lods
jae
adc
mov
push
adc
push
mov
jle
invd
adc
jl
ljmp
jae
adc
xor
les
pop
jns
mov
jae
adc
mov
out
test
test
adc
sub
andl
lock
jae
adc
sti
test
iret
jb
enter
push
call
repz
xchg
sub
adc
data16
add
popa
mov
nop
imul
adc
int
pushf
sbb
inc
scas
push
xchg
mov
lahf
js
in
dec
mov
mov
int
nop
dec
icebp
andb
dec
mov
mov
cmp
and
jp
ljmp
out
lret
push
loop
ds
adc
adc
adc
and
xor
xchg
shlb
and
dec
dec
inc
rcl
aam
push
mov
xchg
mov
xchg
adc
push
adc
ljmp
push
lods
push
mov
sub
or
ror
sbb
push
sbb
push
adc
lahf
movsb
jo
pop
adc
inc
fwait
int
jg
or
popa
loop
cmpsb
repnz
xchg
int3
jo
mov
xchg
mov
inc
fadds
dec
in
cmp
subb
jp
sub
sbb
sahf
pop
fistl
mov
sahf
jno
mov
jl
jge
mov
mov
stos
xchg
xor
or
push
xchg
in
into
cmp
xchg
fcomp
mov
or
adc
in
in
fisubl
adc
scas
mov
ret
sub
aad
subb
pop
fwait
addb
imul
and
fldpi
pop
dec
jp
cwtl
insb
dec
lahf
dec
dec
ljmp
mov
adc
test
mov
mov
jmp
sbb
push
adc
out
xchg
jle
addr16
aad
xlat
and
jmp
sub
cmp
sti
outsl
aad
repz
mov
ss
push
push
push
xchg
xchg
mov
xchg
xchg
sbb
push
adc
je
jne
aaa
arpl
dec
mov
ficoms
or
mov
dec
subl
imul
es
cs
mov
ficomps
push
jo
pop
adc
cmpsb
lahf
ss
rolb
jae
and
aam
fisttps
adc
adc
xor
cmp
loopne
test
sti
sbb
jae
adc
cmp
sub
imul
movsl
mov
call
jmp
aas
in
inc
mov
push
test
stc
push
sub
cli
aad
dec
aas
jle
in
aas
xchg
adc
xlat
pop
mov
mov
sub
cld
push
or
std
adc
jno
adc
adc
mov
pop
cltd
popf
lock
fldcw
cld
sti
pop
lahf
test
push
xchg
sub
cmpsl
push
mov
movsb
dec
loopne
xor
mov
les
cmpl
jne
xor
je
movsb
std
xlat
aas
xchg
cmp
inc
mov
fdivs
ja
mov
test
fisubrs
mov
shrl
aaa
dec
ss
add
repz
cmpsl
inc
inc
inc
shrl
mov
cmp
aaa
lcall
sarl
repnz
pop
mov
pop
or
mov
insl
popf
mov
call
mov
rolb
aas
in
sub
cmpsl
loope
cmp
out
jmp
mov
cld
push
or
test
xchg
xor
sbb
lods
mov
push
xor
out
add
sbbb
inc
jo
pop
adc
cmc
sbb
and
jne
lock
movsl
scas
push
or
arpl
cli
xor
mov
cmp
pop
adc
mov
or
push
dec
das
clc
in
adc
add
aaa
jmp
mov
add
push
pop
insl
ja
pop
aad
mov
sbb
cmpsb
lcall
lcall
adc
bound
mov
pusha
testb
outsb
inc
and
ljmp
in
pop
adc
out
loop
lret
fdivr
lret
in
in
add
pop
adc
sbb
push
sti
mov
es
aam
sbb
push
sbb
ret
push
pop
adc
pop
adc
pop
out
test
sub
dec
pop
ss
lds
adc
jl
rcll
pop
lds
adc
mov
fldt
sbb
sbb
adc
test
adc
cmp
pop
adc
mov
mov
outsl
loope
pop
sbb
add
xor
mov
jle
sbb
xor
pop
jecxz
sbb
rolb
leave
shrb
mov
mov
or
aad
inc
inc
lcall
sarb
fs
stos
dec
push
sub
push
fistpll
hlt
movb
call
cmp
pop
adc
pop
mov
fsubrs
push
sub
or
mov
imul
lods
push
fwait
pop
ja
je
andb
je
jg
in
push
insb
sub
lahf
mov
mov
xor
or
push
adc
lods
pop
mov
mov
pop
adc
sbb
int
cs
mov
ds
scas
xchg
dec
pop
or
movsl
mov
adc
dec
add
movb
aaa
lock
push
stos
push
mov
or
inc
cmpsb
xchg
pop
mov
cmpsl
cmp
sub
add
pop
adc
je
dec
adcb
imul
bound
mov
jl
shlb
mov
sub
cwtl
fs
mov
dec
xchg
xchg
add
pop
adc
int3
ret
xor
jmp
stos
push
inc
or
in
add
sub
add
pop
adc
mov
mov
sub
roll
pop
mov
pop
or
push
cmpsl
mov
or
faddl
adc
or
and
dec
mov
mov
cld
pop
mov
jge
sti
notb
sub
sbb
pop
mov
stos
push
fdivrs
dec
call
mov
inc
or
adc
push
push
stos
into
shrb
cmp
shlb
mov
lahf
ret
cmpl
sar
gs
sbb
icebp
insb
mov
cmp
dec
xchg
pop
arpl
int
imul
scas
cmpb
inc
mov
fistpll
iret
jmp
movsb
mov
mov
pop
and
push
popa
dec
cmpl
dec
fisttpl
ljmp
mov
or
or
pop
adc
mov
xlat
and
lahf
inc
sub
jmp
dec
lods
inc
cmp
shl
cld
out
adc
and
addb
sbbl
cmp
cwtl
sbb
pop
adc
adc
or
out
mov
repz
imul
sti
into
icebp
xor
insl
js
pop
adc
xor
outsl
test
and
inc
cmc
cli
push
sbb
and
push
adc
test
sbb
out
faddl
dec
ficoml
clc
or
enter
adc
or
faddl
adc
cli
rcrb
js
stc
and
add
cmp
pop
js
cmp
int
adc
jne
pushf
mov
or
sbb
jb
mov
mov
jle
lret
mov
sbb
leave
nop
sbb
push
es
jbe
std
and
xchg
filds
stos
aas
and
mov
and
scas
mov
add
jo
pop
adc
fiaddl
jns
jmp
testl
lret
xchg
push
leave
repnz
jb
imul
imul
orl
push
stc
xor
add
mov
adc
xchg
push
popa
xor
xor
xchg
mov
push
vpmulhuw
pop
adc
sbb
stos
pop
lds
mov
adc
dec
in
shrb
inc
fstl
jbe
faddl
adc
lcall
in
jmp
fisubrs
movl
js
or
mov
insl
rcrb
inc
push
and
sub
icebp
push
jno
adc
repnz
xor
mov
push
adc
mov
jo
adc
jne
adc
dec
cmp
add
xchg
outsb
mov
dec
in
mov
pop
xor
ret
fsts
pop
mov
push
arpl
imul
in
and
pusha
clc
fcoml
jo
aad
jo
pop
adc
and
outsl
xlat
cs
mov
jg
mov
push
xchg
cmp
or
int
ret
shll
push
and
adc
dec
push
jae
imul
push
push
or
fidivrl
fdivrs
adc
or
adc
mov
xchg
fnsave
jle
enter
cmpsl
push
outsb
sub
mov
or
adc
or
pop
add
leave
mov
cmpsl
add
ficomps
push
jo
pop
adc
mov
cmp
rolb
and
cmpsb
mov
mov
fistps
sub
clc
sub
loop
imul
je
sbb
cmp
sbb
inc
lds
out
xchg
sub
pushf
lods
pop
popf
xchg
jbe
into
pop
jo
pop
adc
ljmp
cmp
inc
mov
orb
adc
add
adc
daa
pop
pop
or
sar
gs
adc
push
pop
or
or
lods
pop
dec
push
dec
pop
or
testb
jo
adc
popa
sahf
fldcw
jo
pop
adc
inc
sub
stos
sub
aaa
dec
pop
or
mov
cld
jo
adc
push
or
je
add
adc
push
or
dec
dec
ljmp
pop
inc
xor
push
fisubrl
adc
outsl
xchg
and
adcb
or
rorl
jo
adc
orb
xchg
push
popl
xchg
das
xchg
mov
scas
pop
pop
or
sbb
dec
popf
cmp
adc
adc
mov
test
fstps
sub
fsubs
cmp
imul
int
aas
fcmovnb
cwtl
lcall
mov
lret
pop
pop
cmp
mov
adc
sarb
xchg
pop
and
mov
adc
and
sbb
cmp
hlt
pop
pop
andb
aad
sub
mov
push
adc
js
xor
test
pusha
mov
add
jge
jbe
inc
pop
add
push
icebp
sbb
dec
mov
push
sbb
cwtl
or
sub
jo
pop
adc
adc
dec
mov
add
int
cmpsl
sbb
inc
ja
aas
cmp
push
or
inc
pop
in
jno
enter
pop
adc
loope
sbb
shrl
adc
pop
stc
push
sbb
push
ljmp
mov
sub
push
xchg
cld
and
lds
mov
xchg
push
repnz
push
add
and
sub
scas
gs
pop
adc
mov
pop
fdivl
int
cmp
outsl
jmp
ss
sbb
in
lret
nop
mov
or
jl
push
sbb
push
jmp
fidivrs
aam
sbb
loop
add
and
dec
in
insb
sbb
xor
in
xor
cmp
mov
lcall
lock
les
or
inc
subb
mov
mov
mov
mov
or
cmpsb
adc
or
scas
push
inc
insb
lds
adc
sub
sub
gs
jp
mov
mov
inc
sbb
das
lcall
test
fldl
lds
sbb
movsb
int
stos
mov
pop
adc
ljmp
dec
aad
push
insl
jo
pop
adc
jmp
mov
aam
xchg
popf
xchg
add
pop
out
push
inc
scas
dec
imul
mov
dec
mov
cli
cld
sti
pop
lahf
test
push
into
sub
inc
dec
fnstcw
dec
xchg
sub
dec
jge
inc
dec
sti
notb
sbb
scas
sub
add
xor
or
sti
pop
lahf
mov
ljmp
add
shr
shlb
fdivl
inc
sahf
pop
add
sub
jecxz
lcall
clc
push
mov
mov
je
mov
test
or
adc
mov
push
xlat
adc
push
cmpsb
xchg
sub
cmc
pushf
fcomip
add
mov
mov
jle
aaa
popf
push
sub
push
sub
xchg
pusha
xchg
dec
or
pusha
dec
lahf
mov
xor
push
scas
repnz
push
adc
daa
xchg
jbe
cmp
ljmp
cli
daa
mov
aam
mov
in
pop
adc
push
inc
push
add
pop
adc
fistpll
dec
xchg
sub
in
popf
aas
jle
cmpsl
xchg
faddl
adc
dec
jo
pop
adc
das
add
xchg
nop
lds
adc
sahf
aas
mov
loop
jo
pop
adc
mov
push
sub
daa
xchg
pop
jno
jle
popl
jp
lds
adc
gs
add
inc
pop
lds
adc
cmpsl
loope
dec
dec
ljmp
inc
pop
lds
adc
insl
lods
push
xor
movsl
arpl
xchg
jg
imul
sbbl
adc
pop
aad
push
sub
aas
movsl
aas
sbb
dec
mov
sbb
mov
pop
addr16
add
pusha
sbb
and
lds
push
sbb
adc
stos
ss
mov
sub
shlb
sarb
sbb
scas
loopne
loopne
stos
cltd
and
test
and
shll
sbb
sahf
mov
jmp
mov
dec
je
xor
push
cmp
push
out
mov
adcl
test
adc
jle
test
ds
xor
cmp
adc
pop
inc
cwtl
pop
push
incb
lods
add
insl
or
call
ret
jno
adc
sbb
add
pop
adc
mov
or
add
daa
jg
and
imul
pop
adc
mov
or
clc
push
stc
push
lods
mov
movb
hlt
mov
or
mov
pop
loopne
sub
cmp
mov
sbb
or
pop
adc
jp
push
or
sub
xchg
inc
mov
int
sbb
shll
sub
icebp
xchg
and
push
or
mov
xchg
sub
ja
je
jge
and
int3
xor
data16
jle
add
pop
adc
in
adc
lods
xchg
pushw
out
sbb
fs
addr16
xchg
das
fcmovne
adc
js
js
out
enter
cmp
sbb
rol
pop
mov
or
adc
out
movb
dec
nop
sub
test
shrw
pop
add
pop
sbb
lret
pop
mov
sbb
push
mov
push
and
pop
sbb
and
scas
or
push
mov
inc
dec
sbb
push
adc
andl
add
mov
jecxz
int3
cmp
test
pop
sbb
adc
in
lcall
pop
mov
xchg
movsl
in
inc
scas
fnstsw
sub
fisubs
loop
jmp
mov
pop
adc
pop
adc
pop
cltd
adc
push
mov
pop
fisttpll
adc
or
in
mov
fidivl
lahf
ffree
cmp
adc
adc
shrl
push
xchg
addl
into
xlat
shlb
or
clc
mov
jl
cmp
xchg
push
cmpsl
dec
jmp
or
sbb
and
repz
push
shlb
jecxz
les
adc
adc
or
mov
dec
push
jae
cmp
mov
out
jo
pop
adc
inc
mov
cmp
push
cmpsl
ja
dec
addl
dec
pushl
sahf
push
test
daa
pop
jne
rcl
or
mov
in
in
ficompl
les
aad
pop
push
in
mov
iret
cmp
push
fcoml
jo
aad
jo
pop
adc
and
aad
push
outsl
push
in
mov
inc
movsl
dec
pop
dec
pop
or
lahf
aad
jno
adc
adc
or
aaa
xor
sub
cld
push
pop
or
in
add
cmc
dec
pop
or
cltd
adc
jo
adc
adc
adc
mov
cmp
mov
pop
adc
adc
dec
ret
mov
xchg
in
lods
cmpb
push
adc
sub
int
push
out
cmp
sub
push
cli
shlb
mov
pop
jle,pt
punpcklwd
or
xor
jbe
mov
fchs
lods
pop
mov
dec
out
mov
lods
popa
add
sbb
cmp
and
lock
sub
dec
jae
cmp
hlt
fwait
xchg
lods
jns
mov
movsb
xchg
scas
jo
pop
adc
pop
mov
fisubrs
cmp
test
or
sbb
inc
cmpsl
inc
jg
int3
scas
push
lods
pop
and
xchg
sahf
lods
ja
xchg
sub
sahf
xor
push
addr16
push
lock
cmp
fidivl
push
dec
cld
fwait
mov
lahf
jecxz
aad
pop
sub
xlat
pop
sti
pop
mov
inc
mov
xor
mov
les
ds
mov
inc
or
adc
iret
sti
mov
jecxz
add
xchg
icebp
or
pop
ret
fstpt
mov
leave
ds
add
push
sbb
std
rclb
pop
shl
es
push
ja
push
aam
daa
mov
xor
lods
ficoml
test
leave
or
cmpsb
aam
mov
lea
nop
add
lock
dec
movl
mov
mov
xchg
jno
inc
pop
ret
or
pop
pop
xor
pop
adc
enter
mov
mov
sbb
push
adc
inc
mov
sub
repnz
loope
int
outsl
sbb
xchg
xor
dec
sbb
adc
sub
jo
pop
adc
in
adc
mov
cmc
sub
xchg
inc
sub
adc
and
push
adc
stos
lods
and
jecxz
fistl
inc
negl
rclb
pop
xchg
scas
fldenv
divl
pop
lds
sbb
adc
cltd
dec
pop
or
mov
cld
jo
adc
test
or
inc
cwtl
dec
or
dec
mov
test
xor
inc
fwait
es
shlb
test
mov
mov
and
push
adc
in
int
push
arpl
adc
cwtl
pop
sbb
push
adc
int
cmp
xor
jnp
pop
mov
pushf
xor
scas
inc
mov
fs
pop
and
fdivrs
xchg
pop
imul
in
push
mov
jle
jo
in
fidivl
ja
lret
lock
adc
scas
mov
jae
adc
jne
mov
sub
rolb
mov
jb
push
mov
dec
pop
add
popa
cmp
ja
or
call
mov
mov
push
stos
xchg
xchg
xlat
movsl
pusha
add
xlat
xor
fnstenv
xorb
sub
inc
push
and
mov
push
sub
pop
jo
pop
adc
cs
push
jg
push
es
test
add
mov
push
lods
repz
cld
dec
lahf
aas
xlat
ljmp
arpl
in
popf
daa
cmpsl
push
stos
sti
fsubrl
add
or
stos
movsb
push
cmpsl
jecxz
dec
int3
shr
mov
mov
out
popa
and
jmp
pop
mov
or
loope
jge
xchg
jno
loope
sub
stos
add
mov
jge
in
fwait
push
or
xor
aad
mov
das
pop
mov
push
adc
xlat
mov
dec
push
sub
inc
cwtl
push
adc
or
pop
cwtl
jae
adc
jle
and
filds
jne
push
sub
adc
cmc
pushf
test
add
lahf
mov
ljmp
jo
adc
and
aas
imul
push
cmp
sti
popa
dec
cwtl
push
adc
inc
add
sub
jns
pop
fbld
arpl
xlat
push
and
jmp
rcrb
pop
inc
push
cmp
add
xor
sbb
push
adc
fwait
mov
adc
or
or
pop
pop
test
dec
out
push
arpl
sbb
sbb
or
test
jge
mov
sahf
mov
sbb
sub
dec
jle
imul
call
fs
dec
cwtl
fs
out
sub
adc
lods
and
adc
aaa
in
push
lods
pop
adc
leave
or
push
mov
sbbl
jmp
xor
push
lahf
mov
xchg
int3
leave
pusha
xchg
repnz
dec
ret
push
xchg
adc
push
cs
xorb
hlt
xchg
sub
pop
nop
mov
jb
jnp
movsb
jge
cmp
xlat
xchg
fstps
adc
jne
jb
add
movq
lret
aas
or
std
nop
test
ss
mov
hlt
pop
push
push
pop
test
add
mov
notl
sub
push
sbb
inc
cmc
pop
in
incb
insb
jle
pop
loopne
inc
or
xchg
shll
popa
dec
fs
and
orb
or
loopne
stos
jp
jbe
inc
aam
dec
pop
adcl
sbbb
adc
fs
ret
push
mov
cmpsl
sub
std
push
das
shlb
sbb
and
lds
xor
xor
and
es
or
adc
xor
adc
mov
out
add
sub
push
insb
aam
gs
pop
cmc
sub
mov
data16
in
fildll
outsb
push
mov
cli
jl
bswap
cs
imul
popa
cltd
xchg
addr16
fstpl
cltd
gs
ficoms
sbb
dec
insb
pop
sbb
adc
cltd
pop
jnp
sbb
adc
mov
or
push
out
dec
int
mov
daa
out
mov
vaddsubps
sbb
jbe
dec
cwtl
push
adc
int3
xor
add
dec
mov
sbb
xchg
repz
std
loopne
imul
les
and
sub
xor
mov
xchg
mov
add
sbb
cmp
stos
cmc
imul
jae
xor
bound
dec
das
xor
push
adc
iret
sti
push
test
repz
fstpl
xchg
test
mov
aaa
shrb
out
push
dec
lods
xor
push
fisubrl
cltd
test
mov
xchg
shrl
lret
clc
fmull
or
pop
xor
mov
xchg
mov
loope
loope
mov
scas
mov
jle
out
add
cmp
or
loop
push
shll
dec
cmp
loop
imul
mov
stos
push
rcrb
incb
cmpsb
pop
ds
scas
xchg
cmp
enter
or
adc
shlb
mov
inc
lret
imul
cmp
test
fisubl
loop
jecxz
stos
cltd
sub
jl
fnstcw
xchg
sahf
aas
cmp
shl
outsb
popa
in
pop
ljmp
sbb
test
mov
iret
or
pop
xchg
in
dec
mov
out
movsl
std
sbb
lahf
and
imul
xchg
jb
sarb
cmp
adc
dec
sub
xchg
pop
cmc
int3
out
out
and
in
mov
sbb
js
push
jae
mov
and
push
sub
std
jae
push
pop
iret
fs
pop
test
rcl
js
je
aad
lods
call
bound
arpl
xchg
sub
mov
sarb
rcl
pop
jl
mov
lods
je
vhsubpd
loop
jg
add
push
enter
pop
hlt
lahf
and
fsubrp
push
pop
xor
cmp
movsb
dec
loope
jl
add
push
lret
dec
xchg
sub
subl
push
sub
outsl
pop
mov
pop
loope
ds
repz
enter
mov
push
scas
fcoms
add
mov
cmp
jmp
addl
fsubrl
lock
fcoms
cmp
rolb
adc
scas
pop
xchg
pushf
push
sbb
xlat
fisubl
ret
test
mov
pop
pop
les
lock
mov
daa
fs
lret
sahf
inc
mov
add
fistps
or
outsb
mov
clc
push
cmp
adc
pop
cltd
push
push
or
push
adc
mov
xchg
pop
sbb
out
jnp
push
sahf
test
sub
pusha
shlb
or
daa
lods
jp
cmp
test
add
cmp
movsl
das
fwait
shll
pop
cltd
push
adc
mov
test
inc
fwait
cwtl
xchg
sti
iret
add
fildll
pop
adc
rcrb
adc
dec
push
xchg
das
shlb
pop
push
fwait
gs
hlt
aas
aam
cmp
sub
jp
leave
mov
mov
dec
enter
jae,pt
stc
sbb
sbb
dec
icebp
subb
push
adc
xchg
test
pop
sbb
test
inc
lahf
inc
cmpsb
jg
scas
loopne
or
jecxz
push
mov
pop
mov
test
lret
ljmp
xlat
mov
imul
in
inc
adc
xchg
fnstenv
loop
mov
inc
cltd
insb
pop
push
sub
and
add
repz
xchg
lret
mov
jp
leave
pop
push
cld
scas
pop
add
fidivl
sti
popa
sbb
jns
pop
sub
add
cmpl
mov
mov
insb
test
mov
push
adc
add
jae
subl
push
sbb
jne
cmc
sub
pop
adc
mov
lcall
xchg
mov
push
add
xchg
xor
mov
mov
adc
nop
nop
imul
push
or
adc
dec
cs
fnsave
adc
ja
adc
jne
xlat
inc
faddl
adc
cmpsb
xchg
pop
xor
sub
in
push
testl
mov
sub
cmp
adc
mov
jge
lock
mov
adc
add
scas
sbbl
ss
push
adc
popf
sbb
int
mov
xchg
scas
test
sub
lds
imul
adc
cs
int
aam
mov
enter
imulb
mov
scas
adc
pop
push
hlt
jae
jge
pusha
xlat
sarb
jmp
sub
gs
lahf
pop
cmpsb
pop
sub
cmpsl
cmp
mov
pop
in
shl
lods
imul
push
mov
add
jo
xchg
pop
cmpsl
xchg
pop
out
mov
stos
adc
mov
daa
and
rorl
loope
dec
mov
js
mov
push
ret
into
loop
add
loop
lods
pop
mov
dec
int3
repnz
xchg
fsubrs
aad
ret
adc
xchg
adc
sysenter
sbb
jns
lcall
in
loope
jbe
jl
shr
fstpt
pop
ret
dec
jno
testl
cs
in
sbb
fwait
pop
xor
sub
jo
inc
ret
addb
cmpsb
and
dec
iret
movsb
xchg
xor
inc
out
pusha
xchg
in
lods
mov
test
imul
sbb
testb
cli
movsl
arpl
les
sbb
and
add
add
sti
add
inc
xor
mov
push
stos
and
add
pop
push
leave
imul
sbb
loopne
mov
cwtl
inc
cmp
lods
pop
xor
scas
xlat
xchg
sub
imul
or
popa
lods
stos
mov
push
idiv
sbb
jg
lret
jo
push
movsb
outsl
int
jmp
pop
dec
mov
xchg
push
xor
outsb
jmp
mov
sbb
push
cmp
pop
aad
adc
fdivrl
push
adc
xchg
inc
jnp
movups
push
mov
pop
lcall
jns
xor
and
lock
push
out
jle
cmp
jmp
fwait
push
sbb
add
js
xchg
xchg
lea
and
push
dec
push
or
in
pop
pop
cmp
ds
push
add
add
adc
xchg
push
into
cmp
orl
cmpb
lret
andl
testl
mov
test
push
xchg
and
xchg
mov
or
sbb
in
add
mov
ja
mov
xchg
push
aaa
and
scas
repnz
xor
sub
aaa
mov
icebp
je
pop
mov
mov
loope
jnp
pop
xor
cmp
sub
pop
mov
jne
adc
adc
cmp
and
leave
dec
dec
dec
sub
pop
cmpsb
dec
sub
cmp
adc
cmp
hlt
jp
shr
mov
mov
movsl
imul
sub
out
lret
mov
leave
adc
xor
imul
sub
insl
jge
mov
pop
xor
xor
sub
shlb
xchg
xchg
imul
stos
mov
push
jge
mov
insl
jecxz
pushf
test
jp
loope
sbb
rcrb
push
jo
frstor
mov
js
enter
push
xchg
sub
fcmovbe
add
dec
popf
pop
mov
push
ds
orl
jl
cmpsb
test
popa
shll
sbb
push
insb
lods
push
xchg
shll
adc
loop
adc
shlb
xorl
push
sub
lods
push
out
mov
ss
pop
dec
in
mov
dec
testb
fnstenv
pop
ljmp
cmp
dec
out
xchg
jnp
push
push
mov
mov
mov
enter
imul
cmp
add
fwait
mov
mov
and
stos
push
incb
icebp
sub
fildll
pop
fsubs
addl
jo
adc
addr16
imul
fsubrl
pusha
rolb
sbb
rorl
jno
adc
stos
mov
fwait
push
or
dec
jne
jno
adc
fucomp
es
adc
add
call
inc
lret
cmpsb
sub
sbb
in
out
clc
pop
adc
in
lock
xchg
sbb
push
adc
xor
clc
push
aad
push
sub
push
adc
dec
push
cmpsl
cmp
js
add
push
lea
jg
movb
adc
lret
push
adc
pop
out
jmp
sub
int
fsubrl
aad
push
popa
xchg
sbb
cmp
adc
ficompl
xchg
or
mov
dec
sarb
test
push
adc
mov
sub
aam
xchg
mov
pop
mov
push
or
dec
push
subl
adc
lds
dec
or
xchg
mov
rcr
push
es
scas
stos
cltd
cwtl
imul
loop
es
test
adc
push
pop
pop
lds
pusha
mov
lods
cmp
sub
xor
dec
lea
xor
mov
push
fisubl
push
inc
xor
mov
push
aad
inc
clc
inc
fwait
aas
out
and
les
mov
jmp
out
jb
mov
add
mov
std
cwtl
sub
aaa
mov
sub
dec
scas
loopne
test
mov
adc
add
fwait
or
jne
xchg
pushf
gs
cmc
and
mov
lret
push
shlb
jl
or
out
xchg
pop
mov
js
je
mov
push
adc
add
xchg
mov
test
cmp
scas
xor
adc
das
shlb
fsub
xchg
xchg
mov
js
xchg
adc
mov
aas
scas
loope
push
dec
inc
xor
lcall
int
in
inc
push
and
clc
shll
outsb
dec
cmpsl
inc
and
mov
fcompl
mov
shll
cmpsl
dec
ds
mov
in
jne
mov
and
outsl
fistps
and
imul
dec
js
sub
into
sbb
pop
pusha
in
xchg
leave
xor
daa
inc
push
mov
cmp
ss
scas
xchg
inc
clc
add
adc
out
cmp
xlat
scas
shr
jno
loope
stos
fnstsw
push
out
lods
aas
cmpsl
xchg
sub
daa
scas
mov
lods
cmp
loopne
mov
movsb
repnz
inc
movsl
push
add
mov
push
loopne
repnz
dec
ja
cltd
sti
in
lock
stc
rorb
icebp
mov
pop
pop
sbb
mov
stos
stos
je
push
jp
jo
inc
jmp
arpl
imul
fadd
pop
inc
cmp
lds
jg
push
cmc
sar
nop
dec
rorb
leave
dec
jnp
loope
adc
out
and
int3
sbbl
lods
pop
mov
or
add
adc
push
adc
mov
inc
sbb
pop
cmc
into
negb
lods
in
imul
pop
cmp
pop
jg
adc
arpl
push
xlat
int
mov
xlat
clc
ret
ds
xor
test
xor
adc
sbb
sub
push
adc
pop
and
shll
add
adc
sbb
push
push
outsl
popa
lcall
mov
pop
pop
ds
cmpsb
sar
insb
sti
dec
mov
addr16
lret
sub
pop
mov
push
fstl
ss
popf
pusha
mov
sub
xchg
and
loop
sbb
loop
aam
sahf
jmp
adc
fimull
lret
pop
mov
les
out
add
and
shlb
and
lret
and
mov
inc
cmp
aas
xchg
movsl
fwait
push
jg
cmp
sti
into
cli
cmpsb
or
fsubrp
mov
push
add
pop
pop
xor
push
mov
pop
shrb
pop
cmp
or
lahf
cmpsl
adc
and
push
movsb
adc
mov
clc
hlt
push
lea
stc
es
std
jno
xchg
scas
aad
icebp
mov
xlat
xor
lods
pop
cmp
sbb
negl
test
mov
pop
mov
sub
and
add
shrl
pop
mov
pop
sub
mov
push
cmp
ja
pop
mov
clc
xorl
adc
pop
push
stos
mov
cli
movsl
lods
pop
int3
iret
sbb
adc
pop
mov
lds
and
subb
scas
and
fcomip
dec
push
test
shrb
mov
loope
and
mov
stc
push
mov
and
test
sbbl
popf
cmp
cmp
or
dec
scas
pusha
jne
aaa
rcrl
add
loopne
dec
lret
lea
sub
and
out
mov
mov
sar
repnz
mov
mov
cmp
cmpxchg
adc
push
pop
inc
fwait
mov
and
inc
cmpsb
hlt
adc
inc
push
adc
mov
sub
faddl
and
pop
fadds
sbb
call
xchg
mov
jl
out
add
ficoms
movsl
mov
out
daa
xor
icebp
psllq
mov
pop
sbb
lea
out
push
xchg
movsl
xchg
adc
xchg
adc
xchg
inc
pop
out
js
sub
dec
add
popa
add
and
clc
inc
xor
repnz
mov
les
mov
inc
mov
or
dec
pushf
aad
mov
and
mov
sub
sub
jns
fisttpll
adcb
cmc
jb
fidivrs
mov
sub
ret
push
roll
adc
pcmpeqb
leave
lock
mov
xchg
cmp
mov
adc
pop
outsl
les
std
mov
sbb
xchg
push
mov
stos
ja
add
mov
fwait
pop
scas
inc
and
movsb
inc
sub
pop
rcr
aad
lock
sbb
sbbl
xor
loopne
insl
mov
in
loop
ds
lea
sbb
push
and
imul
lret
sub
or
cmp
std
in
aam
loopne
aaa
sub
fadd
in
call
xor
fwait
cmp
adc
mov
sub
or
pop
addr16
in
mov
je
or
or
mov
jle
mov
fsub
cmc
add
mov
xor
push
mov
mov
add
in
jnp
imul
and
scas
sub
fwait
inc
jp
lock
and
mov
mulb
mov
rcrb
jne
cmp
repnz
xlat
lock
rolb
clc
notb
icebp
xor
push
fsub
icebp
mov
mov
movsl
and
pop
mov
lock
add
ret
sar
popa
mov
adc
shl
dec
mov
mov
jg
mov
daa
mov
jp
adc
scas
into
into
push
movsb
push
ds
and
jne
pop
insl
fwait
sub
cs
xor
sbb
mov
or
cmp
push
imul
test
loope
and
sahf
rorb
insb
lods
xchg
push
sub
mov
mov
pop
push
dec
out
xchg
pop
inc
into
sbb
pop
sub
fs
std
jo
lcall
jne
xchg
scas
xchg
out
push
mov
stos
fildll
ljmp
ljmp
push
xor
inc
push
mov
add
arpl
cli
sbb
lea
ds
adc
add
lahf
dec
jge
call
repnz
es
mov
mov
stc
es
shrl
mov
cli
mov
or
and
add
sahf
sahf
or
pop
lret
repnz
push
adc
mov
pop
adc
loope
mov
aad
inc
sti
inc
push
pop
pop
in
aam
dec
sub
loop
mov
aam
sub
dec
repz
pop
js
and
push
scas
push
xchg
loop
adc
pop
sbbl
or
pop
push
or
lock
popf
and
mov
fs
aam
sub
mov
adc
fidivrl
push
imulb
filds
movd
lret
push
cmp
adc
xrelease
and
les
jae
add
pop
mov
add
sbb
add
leave
fistps
push
jl
sbb
jl
dec
testb
jns
sti
lds
hlt
idiv
out
jg
pop
sar
push
cld
test
mov
arpl
jb
and
dec
cmp
push
adc
shll
add
ficoms
xchg
or
aas
sqrtps
clc
sub
dec
mov
mov
cmpsl
add
sbb
es
out
in
xchg
adc
mov
aaa
fisttps
sub
mov
fildl
sub
mov
rorl
xor
outsl
xor
mov
jecxz
mov
pop
fstp
pop
orb
mov
cld
leave
and
xchg
loop
add
mulb
or
jp
mov
lds
stos
mov
ret
push
sub
inc
aad
cmp
insl
lock
and
cmpsb
inc
neg
fs
aas
sub
pop
fldl
lods
pop
jmp
cli
lahf
add
popa
adc
cs
popf
cltd
jo
push
and
stos
jp
adc
movb
into
shll
pop
out
movsl
cs
movsb
outsb
sahf
push
loop
test
mov
sub
orl
push
std
mov
ret
repnz
movsl
jg
push
mov
sti
in
fs
rcr
mov
popf
adc
sub
push
orl
sub
inc
jmp
mov
add
mov
roll
jmp
jmp
jge
sti
rclb
scas
push
sbb
push
scas
pop
sbb
push
sbb
imul
imul
push
pop
sbb
mov
mov
adc
add
addl
test
sbb
pop
xor
push
rcr
inc
shll
fxch
fcmovnbe
fcomps
sbb
sbb
push
daa
ds
mov
push
inc
enter
std
xor
fsts
and
or
inc
orl
mov
fcomip
sbbl
lcall
jbe
les
out
push
ds
pop
mov
jnp
xchg
push
pop
sbbl
out
fidivl
ljmp
xor
sub
mulb
int3
mov
jl
lods
dec
cwtl
nop
popf
ljmp
xchg
testb
jmp
out
fmul
jnp
hlt
or
cmpsl
pop
push
subl
cmpsb
lods
stos
in
in
add
jnp
jmp
xorb
push
std
lret
stos
push
and
cmp
inc
inc
and
mov
sub
adc
sbb
cmp
aad
adc
ljmp
mov
outsb
jp
sti
adcl
shrl
sub
in
dec
xor
movsl
and
push
pop
cli
imul
outsb
jmp
stos
push
aam
xor
loopne
jne
mov
test
cmp
adc
rol
pop
jge
inc
aam
sub
sub
ss
loope
push
shl
mov
xchg
push
pushl
lcall
add
push
aad
mov
pop
mov
nop
sub
xorb
sub
xchg
sub
addr16
push
sub
notb
push
jbe
movsb
add
fistl
add
loopne
dec
pop
sub
movsb
mov
lods
adc
dec
sub
add
adc
push
imul
test
adc
into
pushf
fsts
adc
stos
sub
test
fmuls
pop
or
adc
sbb
enter
add
sbb
out
and
mov
jns
rcll
ret
hlt
decl
xchg
mov
movsb
out
fisubrs
xchg
mov
mov
inc
jg
fwait
mov
push
xchg
inc
aam
mov
xchg
xchg
je
add
sti
inc
and
repz
insb
aam
mov
pop
mov
into
mov
out
loopne
aad
jns
out
out
adc
jnp
push
cmpsl
add
leave
sbb
xor
push
in
inc
lds
mov
dec
push
xor
aaa
aaa
sub
or
das
mov
push
xchg
in
jns
dec
jp
imul
cld
ret
insl
adc
insl
fwait
jmp
fidivrs
aaa
testl
jecxz
or
push
cmp
adc
xchg
nop
in
cmp
lock
sub
xor
dec
lds
adc
xor
jmp
and
sub
lahf
add
mov
cmc
iret
enter
jmp
lret
adc
shlb
cmp
jg
or
aaa
push
aaa
test
jne
mov
push
out
mov
jno
inc
cmp
sub
sahf
xor
cltd
loop
mov
mov
subb
mov
push
in
aam
test
data16
fwait
mov
dec
aad
gs
inc
dec
lock
and
adc
lahf
sbb
imul
call
mov
loope
cmp
aad
mov
leave
leave
push
cmp
push
lods
pop
cmp
xor
and
add
push
adc
cli
add
adc
out
test
fucom
xchg
dec
dec
xchg
lods
jge
lahf
leave
daa
adc
pop
movsb
dec
loopne
mov
rcll
push
jne
shlb
or
stc
mov
fistpl
xchg
jl
pop
jg
addb
inc
out
fcmove
push
or
imull
or
pop
enter
xlat
clc
addr16
mov
mov
es
jmp
mov
push
scas
bound
xchg
jmp
pop
adc
mov
loop
out
and
cmpsb
into
loop
ds
lods
pop
mov
lea
in
imul
dec
pop
in
jge
int
cmp
adc
lcall
lock
ss
repnz
sar
jecxz
xchg
ficomps
fldln2
dec
repnz
inc
dec
sub
pop
fimull
add
test
sbb
imul
scas
add
pop
mov
jns
pop
jmp
call
fnstenv
negb
mov
push
push
cmp
cmp
fiaddl
lahf
aas
add
push
dec
adc
pop
aaa
xor
in
out
cwtl
faddl
sbb
lea
stos
shl
inc
dec
cltd
jmp
rcr
jge
frstor
sbb
pop
flds
loop
lods
pop
mov
dec
int3
repnz
loope
push
dec
xchg
out
lcall
mov
scas
mov
lret
pop
adc
xchg
or
or
dec
ljmp
cmp
fimuls
adc
les
xchg
sub
jg
push
pop
popf
bound
mov
xchg
js
stc
mov
jg
repnz
test
gs
or
insl
mov
test
fwait
std
mov
mov
in
xlat
shl
jp
sub
mov
push
jge
icebp
xchg
movsb
add
push
push
xor
push
in
mov
hlt
mov
mov
sarb
shll
cwtl
sub
push
ljmp
dec
cmp
xchg
mov
in
outsb
dec
iret
ja
push
pop
hlt
dec
cmpsb
das
cmp
pusha
mov
sub
mov
dec
mov
adc
adc
enter
subb
xchg
add
nop
std
inc
lock
mov
sbb
jo
push
pop
xor
idivb
adc
inc
in
push
jno
in
lds
dec
xchg
xchg
data16
adc
lret
push
sbb
add
cmp
pushf
popf
clc
mov
or
cmp
mov
mov
sub
sub
lock
cmp
aas
xchg
push
jno
mov
sub
inc
enter
outsb
imul
dec
push
repnz
xchg
mov
popf
aas
sub
inc
outsl
cli
dec
aaa
push
dec
mov
ret
pop
aad
lret
pop
test
pop
add
cmp
jne
ja
xor
and
mov
push
push
cmp
adc
lods
imulb
adc
dec
push
enter
pop
or
push
icebp
loope
cmp
test
xchg
mov
add
dec
xor
mov
lea
sub
stos
aaa
cmp
push
jne
sbb
lock
adc
insl
push
arpl
test
into
mov
in
mov
imulb
out
jp
mov
es
jmp
pop
or
xchg
enter
jmp
les
xorl
es
inc
negl
jae
adc
dec
push
dec
mov
pop
test
xor
jp
sub
mov
jb
in
push
mov
push
xchg
jo
push
adc
les
dec
enter
jl
xlat
movsb
cmp
inc
xor
js
test
push
lea
sub
shlb
xlat
pop
push
and
jbe
popf
jecxz
call
cmp
imul
mov
cld
jno
shlb
lcall
push
pop
sahf
push
shrl
fwait
mov
add
addr16
pop
cltd
dec
mov
and
orl
sbb
sbb
inc
mov
xor
jl
pop
aad
or
fdivr
in
adc
out
rcll
ret
add
sub
aaa
xor
xchg
push
cmpsl
fildll
mov
cmpsb
pop
sub
xlat
push
or
add
rorb
sub
mov
ljmp
fdivl
inc
js
add
xchg
pop
dec
xchg
pop
pop
xor
push
rcr
inc
mov
outsl
fstps
scas
sub
dec
scas
push
cmp
or
insb
adc
push
fiadds
push
lea
pop
lds
dec
ljmp
sub
jae
test
push
fmull
cmp
movsl
ds
stos
dec
lahf
dec
int3
mov
dec
pop
fimull
daa
rcrl
adc
jmp
xlat
mov
mov
into
shrl
pop
mov
popa
es
shl
pop
jns
ljmp
add
xlat
lock
nop
inc
mov
addl
push
lret
jmp
popa
sbb
pop
scas
pop
iret
into
mov
sbb
push
lock
pop
fisubl
int3
in
imul
push
or
sub
fldl
mov
fisubs
fstl
fidivrs
aaa
jp
sbb
call
insb
mov
mov
lods
xchg
add
pop
adc
push
mov
sub
sub
inc
mov
pop
outsl
cld
sbb
out
mov
sbbl
lahf
cmc
xor
mov
or
std
mov
mov
leave
or
push
hlt
mov
mov
ret
loope
inc
popa
xor
sbb
mov
pop
adc
inc
dec
or
mov
cmp
sahf
add
cmp
mov
mov
outsb
imul
pop
rorl
pushf
pop
ret
fwait
jns
mov
stos
push
lods
sbb
cwtl
sub
paddsb
or
ljmp
jle
xchg
cmp
jl
sbb
lods
movsb
lret
hlt
imul
repz
dec
mov
jg
mov
jp
int
jle
out
mov
xchg
jl
lock
lea
aas
push
inc
pop
mov
inc
loopne
cmp
test
lods
cmc
out
sbb
jbe
aam
aad
fcoms
mov
xchg
xchg
in
xor
scas
stc
lret
insb
shl
aad
jmp
mov
and
mov
or
push
ficompl
adc
xlat
popf
or
loopne
jge
mov
mov
adc
into
inc
inc
aaa
rcrb
dec
imul
shrb
push
insb
sbb
jecxz
int3
pop
in
inc
add
mov
dec
push
pop
cmpsb
adc
sub
rcrb
int
xchg
aam
mov
adc
adc
xchg
rclb
shll
jbe
pop
mov
push
pop
xchg
aas
stos
mov
pop
rolb
fmuls
aam
and
clc
lret
insb
fwait
scas
mov
clc
or
ljmp
adc
inc
movsl
push
and
jp
xchg
mov
xchg
jb
into
cmc
or
cwtl
jg
dec
inc
ret
cmpsl
icebp
add
aad
stos
fwait
in
cmpsl
arpl
add
mov
not
fcoml
insl
fsubp
cmp
and
cmp
outsb
pop
lods
pop
mov
test
std
inc
mov
dec
mov
xchg
fisubrl
mov
outsl
pop
cmpsl
dec
in
hlt
aas
cmp
push
push
dec
sbb
mov
test
jp
dec
add
pushf
mov
cmp
shl
pop
cli
in
mov
jo
mov
fs
cmpsb
jmp
add
push
pop
cli
dec
mov
jp
pop
stos
push
test
faddl
arpl
sarl
inc
pop
cmpsl
dec
loopne
test
jno
cltd
jmp
rcrb
sub
fldl
mov
frstor
mov
sbb
adcb
rcrb
lcall
add
lds
mov
mov
adc
sbb
mov
test
push
and
test
lds
dec
ljmp
sahf
xlat
cld
jo
nop
sbb
test
push
lcall
dec
adc
fscale
fidivl
xchg
jp
or
or
inc
or
pop
shrb
push
pop
arpl
mov
or
ficoml
cltd
in
push
mov
push
lea
cmp
lods
pop
mov
lea
out
adc
cmp
adc
and
pop
adc
cmp
or
cmpsb
imul
leave
cli
mov
or
pop
in
xchg
mov
rorl
mov
and
and
dec
add
add
add
and
sub
inc
stc
scas
sar
in
dec
fs
stos
mov
mov
int
lea
sub
loope
mov
pop
jmp
sub
es
lcall
int3
inc
pop
ss
cmovp
lcall
and
pop
xor
dec
mov
sub
and
stc
mov
ror
sbb
pop
arpl
fsubl
lock
ss
xor
xchg
cmp
mov
mov
pop
outsl
xlat
mov
sahf
push
mov
mov
dec
ret
scas
push
jns
lret
lahf
inc
push
sti
aam
xchg
jae
lret
rcll
fldt
ret
mov
icebp
gs
sbb
inc
sbb
ds
dec
clc
jae
into
lock
lock
dec
addl
xchg
in
adc
pushf
push
push
jecxz
pop
pop
jg
jb
fdivrs
pop
out
repz
add
xchg
push
sbb
fildl
pop
fdivr
dec
in
cld
jp
xchg
or
push
rol
cmp
mov
out
in
pop
push
mov
mov
push
cmp
adc
mov
ret
sub
adc
adc
clc
orb
dec
imul
push
test
jmp
inc
cmp
mov
xor
xlat
loop
adc
push
sahf
push
popf
lods
jl
add
sub
mov
mov
lock
dec
inc
or
shl
in
mov
fwait
mov
xor
addr16
jae
jbe
jecxz
scas
pushf
imul
jo
ret
imul
jecxz
cmp
pop
mov
push
lods
sbb
in
sbb
xchg
push
push
leave
bound
and
push
arpl
dec
add
cmpsb
pop
mov
sbb
pop
test
sbb
test
mov
rclb
pop
lods
xor
into
fsubrs
pop
adc
jbe
imul
lds
sbb
dec
or
movsl
imul
pop
enter
imul
enter
mov
gs
xchg
jne
jmp
lods
jne
faddl
adc
inc
inc
dec
faddl
adc
in
nop
jbe
adc
mov
stos
pop
dec
faddl
adc
or
push
adc
sub
inc
sbb
test
lcall
push
lods
pop
mov
test
cwtl
push
adc
dec
xchg
scas
aam
in
rorb
adc
test
outsb
test
mov
dec
les
push
pop
jle
stc
mov
add
add
inc
mov
lods
or
lahf
mov
std
adc
jo
adc
out
sub
ljmp
test
in
push
sub
lods
pop
pop
ja
aas
rolb
adc
adc
jb
lahf
ficoms
push
jecxz
add
pop
cltd
rorb
push
adc
mov
mov
aad
fbld
dec
cmp
shrb
and
push
adc
hlt
xchg
sti
sbb
jo
adc
aad
or
mov
lods
lahf
sbb
jae
xchg
or
in
ja
sbb
mov
outsb
cld
adc
movsb
mov
mov
stos
cmp
sub
shlb
cmpsb
movsb
and
and
stc
rcrl
or
in
aaa
jb
mov
loopne
inc
popf
fnstenv
pop
xor
add
push
cs
sti
adcb
movsl
sbb
add
fcomps
je
jae
ja
stc
rcrl
or
dec
push
scas
push
fwait
adc
nop
mov
lods
movsl
shll
push
pop
inc
sti
int3
adc
inc
scas
mov
arpl
mov
and
fadd
lods
push
xchg
sub
adc
pop
mov
popa
inc
pop
daa
add
out
fiadds
cmc
iret
jnp
push
aas
daa
fistl
adc
fwait
jmp
inc
cld
scas
shll
pop
inc
jbe
or
nop
pop
in
pop
push
adcl
mov
mov
icebp
ja
cmc
pop
scas
or
test
mov
test
decb
mov
enter
fnclex
imul
dec
mov
or
push
js
xorb
pusha
cld
dec
dec
mov
sbb
int
lret
arpl
mov
insb
mov
dec
stc
push
mov
shll
add
mov
add
sar
cld
adc
cmp
in
push
mov
pavgw
adc
aad
imul
jl
adc
movsl
or
movsl
jg
jb
mov
fistpl
xchg
sub
jne
call
or
push
adc
lea
mov
dec
pop
mov
mov
dec
lds
adc
lea
or
pop
xchg
imul
push
adc
fiaddl
mov
mov
inc
scas
and
mov
fwait
sbb
mov
push
or
andb
or
push
scas
jo
gs
insl
call
lret
pushl
cmc
adc
push
sbb
stos
aaa
loop
lret
ret
push
inc
add
xor
lods
xchg
push
imull
ds
cs
inc
mov
fnstenv
sahf
das
sbbb
shlb
push
mov
pop
mov
push
in
movsb
inc
mov
icebp
cli
dec
xchg
lods
cwtl
mov
push
inc
jge
jno
sbb
inc
push
sbb
lods
in
orl
inc
scas
jg
cmp
ss
inc
movsl
lods
xchg
in
mov
mov
es
and
inc
stos
mov
and
and
outsb
push
out
adc
aas
cs
pushf
jp
xchg
gs
clc
cs
daa
iret
mov
ss
mov
out
loope
out
xchg
aam
xlat
pop
cmpsl
add
imul
cmpsl
dec
adc
lret
push
adc
bound
movsl
add
stos
jecxz
add
push
adc
push
fstl
popf
mov
das
cmp
mov
imul
jne
push
cli
pop
mov
stos
push
shr
mov
xchg
push
cmp
jle
add
stos
xchg
inc
mov
scas
pop
dec
mov
std
movsb
dec
xchg
fldcw
cmp
aas
xor
pop
sbbb
repz
push
mov
sbb
dec
xlat
cmpsl
adc
decl
cmp
pop
and
lds
sbb
and
rcl
dec
push
sub
push
imul
mov
sub
aam
xchg
testl
inc
cmp
xchg
and
pusha
stos
loope
hlt
pop
inc
int
movsl
sub
sbb
mov
jmp
inc
pop
pop
pop
push
push
cmpsl
out
add
adc
push
sub
aad
mov
sub
enter
andb
fdivs
adc
je
sahf
dec
xchg
cs
jmp
adc
out
mov
pop
inc
xchg
add
xor
clc
pop
adc
or
and
rolb
pop
adc
jmp
lock
adc
fld
addl
and
sbb
adc
ljmp
add
or
mov
xchg
jle
outsb
cmp
jecxz
adc
std
stos
jle
nop
sub
fucom
lods
pop
out
pop
ljmp
movsb
pop
mov
aas
fwait
cmp
mov
xlat
stc
movsl
fs
jmp
add
adc
xchg
sub
out
mov
mov
pop
adc
lcall
aaa
xchg
fs
and
jl
imul
or
iret
rorb
mov
or
jecxz
push
add
js
dec
dec
fadds
adc
xor
dec
jecxz
cmp
adc
dec
clc
out
ljmp
mov
xchg
xor
repz
adc
jmp
stc
dec
or
incl
adc
hlt
sar
sub
push
js
or
neg
std
cli
push
mov
inc
mov
or
test
jmp
sub
outsl
in
pop
adc
mov
or
cmpsl
pop
inc
insb
jecxz
adc
pop
cmp
sub
cli
pop
adc
dec
cmp
pop
adc
push
dec
jle
xor
pop
adc
or
push
xchg
fdivr
pop
adc
jmp
icebp
in
or
or
or
out
adc
mov
sbb
or
pop
outsb
sbb
insl
movsl
inc
or
adc
add
jae
nop
imul
adc
in
icebp
andb
fcompl
mov
adc
pop
in
xor
xor
pop
adc
cmp
sub
pop
jl
cli
pop
adc
pop
sub
adc
outsb
pop
aaa
mov
fsub
pop
adc
cmp
push
fstps
jge
cmp
repz
adc
dec
cld
icebp
ljmp
jo
pop
adc
sti
test
add
jg
pusha
or
adc
pushf
jno
hlt
scas
sbb
inc
or
adc
movsb
pop
mov
mov
std
pop
adc
push
andb
sbb
loope
adc
cmc
xchg
or
sub
or
shl
mov
insb
iret
jbe
sub
adc
adc
sub
and
or
in
call
in
lcall
jo
pop
adc
cmp
movsl
lret
inc
push
or
add
xchg
lds
xchg
cli
and
sbb
adc
inc
ficompl
push
or
ret
push
mov
push
adc
mov
test
jns
fcoml
or
adcb
push
test
pop
xchg
loope
inc
push
pop
or
les
std
shlb
dec
inc
pop
or
shlb
push
xchg
ja
jb
or
add
lods
pop
mov
aas
push
push
or
inc
mov
add
lret
pop
adc
jo
lods
cmovg
jmp
cs
mov
data16
pop
adc
pop
mov
adcl
ljmp
or
mov
adc
mov
sub
les
pop
adc
lret
add
adc
inc
jge
lock
pop
adc
cwtl
test
mov
xor
sbb
adc
jge
rolb
sub
pop
adc
mov
push
xchg
sub
fnstsw
lahf
push
shrb
ljmp
mov
cmp
or
sub
jp
fadds
pop
adc
and
jmp
adc
aad
inc
mov
mov
add
incl
adc
in
addb
pop
in
repz
or
pop
adc
push
pop
xchg
fdivrs
jmp
adc
xchg
jle
push
popa
pop
in
adc
mov
cmp
and
adc
mov
sti
cmpsl
data16
jmp
dec
gs
cs
in
mov
cmpb
or
jecxz
sub
mov
sub
cltd
or
and
insl
push
ret
mov
lret
jbe
pop
sub
dec
mov
testl
adc
push
push
or
sbb
pop
adc
sahf
push
mov
xor
adc
pop
call
test
push
lods
push
lock
les
adc
lea
mov
aad
pop
sbb
dec
in
pop
adc
pushl
out
pop
adc
ja
jne
ret
call
sbb
adc
xchg
popa
inc
call
enter
daa
pushf
jg
xchg
popf
mov
adc
mov
pop
lods
jmp
push
sahf
cmp
jno
mov
loope
adc
ds
pop
test
filds
adc
push
hlt
adc
loopne
or
jne
insb
sub
pop
imul
adc
push
add
mov
adc
insb
fs
aaa
mov
ss
loope
out
daa
pop
fwait
pushf
icebp
pop
adc
cmp
cli
pop
adc
loopne
cld
and
adc
testl
cmp
int
aam
or
adc
test
mov
stos
sub
pop
adc
lea
ds
pop
adc
into
outsb
mov
test
ljmp
mov
or
in
les
or
adc
mov
xor
cmp
pop
adc
pop
sub
pop
adc
xor
adc
jb
sbb
or
inc
lcall
jne
xor
or
and
cmp
stos
push
cmp
fistl
sub
lods
pop
push
mov
sbb
testb
sti
jg
test
iret
cmpsl
mov
adc
mov
divl
pop
adc
stos
inc
fwait
jno
outsb
add
je
or
andl
testl
imul
inc
sbb
pushf
or
adc
ret
leave
test
pop
add
or
pop
adc
xchg
push
test
inc
xorb
inc
push
jge
sbb
pop
adc
jge
incb
adc
cmovg
pop
adc
xchg
cs
in
mov
ret
pop
adc
loop
add
xor
adc
or
and
rcrb
push
mov
or
in
sti
pop
adc
roll
and
add
adc
ljmp
push
or
add
aas
push
push
insb
in
pop
adc
dec
pop
mov
pop
rclb
adc
pop
mov
adcl
or
popa
jno
dec
xchg
jns
insb
cmpb
cmp
inc
mov
jp
arpl
mov
test
add
inc
ficompl
pop
adc
cmc
mov
loop
adc
aas
mov
rcl
rcrb
insb
out
adc
std
stos
jle
lret
pop
adc
fsubrl
lods
cmovg
or
dec
and
cmp
ret
pop
adc
loop
add
xor
or
adc
or
and
rclb
or
cmp
push
mov
or
xchg
or
adc
push
roll
and
aam
push
ljmp
pop
or
add
mov
aas
push
push
insb
dec
ljmp
jne
sub
fsubr
pop
adc
pop
mov
adcl
pop
adc
and
xchg
jns
insb
addb
mov
jp
arpl
mov
test
add
inc
ficompl
or
mov
cmc
mov
jecxz
adc
sub
cld
rcrl
fdiv
pop
adc
jne
aam
stos
jg
lret
fmuls
or
xor
imul
or
pop
hlt
pop
adc
xchg
sub
out
mov
test
dec
add
adc
icebp
adc
add
xor
outsl
js
pop
and
insl
std
or
hlt
out
pop
adc
xlat
push
cmpsl
inc
fldlg2
decb
fcompl
or
rclb
lret
mov
pop
cld
into
jl
or
pop
adc
pushf
fisubs
sbb
or
pop
adc
mov
sub
jns
hlt
pop
adc
inc
dec
scas
pusha
test
imul
adc
dec
mov
enter
or
dec
mov
mov
test
adc
outsl
mov
adc
push
push
push
pop
adc
pop
adc
jg
incb
mov
js
or
imul
jg
xlat
mov
xchg
flds
push
push
shrl
adc
push
adc
enter
pop
adc
xchg
int
push
mov
fstpl
pop
adc
dec
jbe
mov
sbb
pop
adc
cmp
dec
mov
adc
imul
push
in
adc
cmp
stos
sbb
or
jb
mov
sbb
dec
incl
adc
xchg
loopne
mov
and
gs
cmc
mov
rorb
xchg
lods
mov
filds
adc
pop
adc
xor
lods
adc
or
cmpsl
rep
xor
push
and
mov
adc
out
mov
or
je
sub
pop
or
or
pop
adc
cmp
mov
mov
or
adc
jp
push
lods
push
and
dec
lea
sub
dec
ret
movb
inc
nop
pop
mov
pop
adc
mov
cwtl
and
pop
mov
fldl
dec
test
dec
mov
outsl
popa
or
sub
or
lds
jb
or
sbb
les
insl
jno
cmp
loope
loope
mov
jb
jmp
shll
hlt
dec
mov
pop
insl
sbb
push
push
mov
pop
lods
add
cmp
vxorpd
loopne
test
in
fnsave
es
adc
jno
clc
outsl
xor
lret
push
sub
or
sub
jmp
sub
mov
dec
push
mov
orl
das
lods
cmp
fidivl
popf
pop
jmp
add
cmp
push
xor
mov
jle
push
scas
mov
mov
in
push
add
push
cmp
lods
mov
movsl
fildll
lods
aad
enter
ret
and
inc
adc
inc
outsl
or
push
fsubs
xchg
pop
jmp
push
dec
dec
lahf
nop
or
mov
dec
outsl
or
push
or
movsl
cmp
ss
dec
xor
mov
pop
or
mov
jecxz
movsb
pop
das
mov
scas
pop
adc
mov
pop
shll
das
roll
xchg
into
mov
mov
scas
pop
lods
or
movsl
in
pop
push
incb
loope
pop
mov
inc
pop
shlb
add
ja
lds
xchg
sub
xor
and
add
cs
jge
aad
xchg
in
pushf
lock
rcr
push
cmp
or
daa
js
call
xor
testb
mov
xchg
cmpsb
dec
jmp
xor
mov
xor
rclb
mov
adc
push
mov
pop
aas
jg
rcrb
mov
xchg
push
push
inc
cmpsl
popf
mov
sbb
aas
testl
popf
mov
inc
shll
jg
push
add
jne
rorb
xchg
add
ret
pop
cmp
dec
push
clc
in
sbb
jno
pop
pop
xchg
popa
add
mov
mov
dec
nop
andb
xor
inc
mov
shll
mov
sub
xor
icebp
pusha
insl
jge
mov
test
sbb
out
mov
mov
testb
push
ret
mov
sti
iret
pop
inc
ret
testb
divb
add
add
jecxz
sub
add
mov
cmp
ljmp
push
outsl
loope
lea
enter
push
mov
add
mov
cmp
jnp
repz
cmp
scas
insb
mov
xchg
adc
scas
mov
jno
pop
sbb
shlb
pop
popf
je
sahf
sub
cmpsb
xchg
movsl
or
addb
lret
mov
jg
jbe
adc
or
enter
sub
fdiv
test
jmp
sbb
sbb
dec
jns
xlat
int3
cwtl
push
adc
jbe
mov
push
xchg
lret
cmc
sbb
pop
fldenv
jp
jb
out
in
out
inc
roll
xor
mov
mov
mov
push
insb
mov
inc
rolb
xor
mov
jns
mov
imul
push
out
stos
push
call
data16
sub
push
sub
add
cli
lods
push
mov
mov
mov
cmp
nop
jo
aad
fisubs
repnz
or
mov
mov
rol
adc
addr16
lds
adc
ss
xor
lds
adc
ret
mov
pop
adc
adc
push
test
outsb
xchg
sbb
adc
sbb
roll
push
adc
mov
mov
push
mov
enter
pop
cld
lods
mov
data16
cmpsl
dec
lahf
dec
repnz
add
mov
adc
fdivr
mov
push
adc
pop
or
dec
mov
int3
sbbb
ret
jge
lret
pop
imul
enter
movsl
dec
cmp
jle,pt
pop
pop
cli
repnz
jecxz
and
repnz
inc
movsl
in
xor
mov
or
jle
in
mov
fidivl
add
and
test
out
xchg
mov
or
or
mov
add
or
testb
jo
adc
jmp
push
scas
pop
lods
mov
push
cmp
incb
sbb
xor
and
dec
shll
adc
lahf
lock
enter
movsl
push
shll
xor
push
and
movsl
loopne
daa
sbb
popl
in
push
mov
push
jmp
sbb
and
pop
pop
dec
jo
std
push
arpl
test
inc
sub
out
push
fsubr
frstor
dec
movsb
dec
out
xor
cmc
clc
insb
jl
adc
xchg
and
movsl
adc
mov
test
mov
mov
jo
lods
xchg
jae
inc
cmp
adc
icebp
xor
lods
mov
es
cmp
mov
xchg
ret
add
adc
ja
jno
fwait
push
xchg
push
pop
mov
fistps
mov
pop
or
and
or
iret
push
push
mov
dec
sbb
or
cmpsl
aad
inc
mov
cmpsb
fnsave
hlt
lea
das
mov
scas
adc
cmpsl
xchg
test
or
mov
dec
xchg
pop
repz
fsubs
in
push
pop
clc
lds
sub
jl
imul
stos
push
mov
mov
pop
out
dec
adc
or
inc
enter
pop
xor
add
jge
push
sub
cmp
aas
sub
cmp
sbb
cld
lahf
out
mov
cmpsl
shl
push
push
stos
pop
mov
mov
xchg
cmp
xlat
and
inc
mov
push
sarb
cmpl
stos
sub
mov
ss
shll
cmp
dec
popf
sbb
or
mov
push
push
sar
fsubl
xchg
pop
xchg
push
comiss
loopne
iret
push
or
loopne
pushf
clc
hlt
push
stos
cmp
aas
dec
xchg
add
add
insb
jp
cmc
sub
fcmovu
fwait
dec
lret
dec
or
pop
mov
mov
push
call
xor
dec
mov
mov
lret
dec
clc
hlt
mov
pop
popa
out
mov
push
rcl
mov
sbb
aaa
stos
or
xchg
jne
orl
sub
or
imul
inc
and
push
repnz
ss
fstl
mov
insl
mov
jae
dec
leave
push
fimuls
xor
add
push
sar
or
adc
enter
add
nop
xchg
shll
sbb
stos
cmc
and
out
fistl
sahf
and
jl
add
xor
adc
stos
aad
adc
sbb
shrb
lods
fistl
jns
aad
push
insb
pop
mov
pop
js
push
icebp
hlt
jb
xor
or
mov
xor
push
jo
pop
or
scas
xchg
cld
jo
adc
inc
push
out
mov
mov
cs
insb
cwtl
jo
pop
mov
jl
cmp
adc
stos
stc
xchg
push
pop
adc
js
sbb
pop
mov
push
xchg
mulb
lds
cmp
mov
andb
and
cmp
lahf
dec
jns
cli
push
xchg
sahf
dec
xchg
or
cmp
adc
mov
arpl
pop
sbb
dec
lahf
aas
xlat
pusha
mov
jmp
mov
inc
stc
jl
movsb
out
jmp
mov
test
push
pop
cli
inc
push
xchg
cs
mov
cmc
mov
sub
daa
scas
cmp
sti
pop
lahf
push
inc
mov
push
pop
jne
xchg
jge
dec
xchg
cmp
xchg
fstl
mov
jbe
mov
pop
adc
pop
or
pop
push
xchg
fucomp
lahf
aas
jle
or
mov
sub
cmp
mov
push
aad
aam
into
or
adc
inc
pop
ljmp
orb
shlb
pop
pop
xor
jg
outsb
or
in
mov
ljmp
jbe
jl
shll
cmp
push
cmpsl
cmp
xchg
jle
sti
adcb
aas
cmp
or
je
jge
lock
roll
arpl
add
dec
adc
push
shlb
pusha
repnz
push
scas
das
enter
movsl
lods
rolb
lahf
aas
add
sbb
sar
cmc
adc
scas
hlt
adc
mov
push
hlt
cmpsl
dec
lahf
jmp
in
es
sub
clc
mov
scas
imul
xchg
sub
xor
dec
fidivl
sub
inc
add
scas
pop
neg
cmp
scas
aam
fnstcw
xor
jb
jle
inc
mov
stos
push
scas
mov
call
mov
cmp
clc
lds
xor
and
mov
stos
push
ret
pop
mov
repz
out
jae
push
add
or
xchg
data16
lods
inc
xchg
inc
push
push
xchg
pop
pop
sbb
pop
or
scas
mov
imul
test
insl
sbb
loop
mov
scas
popa
sub
test
jno
ffree
pop
xor
xchg
pop
inc
push
fldl
fs
movsl
add
dec
xlat
xchg
pop
lods
or
xchg
mov
push
inc
mov
jg
movsl
cmc
in
das
scas
and
out
sbb
stos
jne
daa
mov
hlt
subb
jg
dec
xchg
xchg
sti
push
call
mov
or
push
roll
aas
push
das
pop
add
adc
nop
and
divl
dec
cmp
in
insl
add
adc
ret
xchg
outsb
push
sbb
or
add
xor
aaa
pop
adc
fildl
enter
push
jne
aam
shll
imul
jo
sbb
sub
iret
sar
mov
jo
leave
filds
sbb
dec
idivb
adcl
int3
fs
rorb
clc
stos
xchg
inc
popa
flds
mov
lret
sbb
inc
pop
and
xchg
dec
inc
nop
cmpsb
fs
popf
leave
push
or
push
mov
push
mul
aam
ss
stos
movb
adc
adc
inc
cld
jo
adc
jae
aam
add
mov
jno
cmc
je
mov
cwtl
and
stos
in
xor
push
test
push
or
push
xor
push
jbe
insl
jne
cmc
fsubrl
sarb
je
insl
adc
in
cmp
pop
test
xor
jp
sub
xor
cs
aad
fnstsw
sbb
mov
add
aam
mov
adc
sub
mov
ficoml
insl
xor
or
pop
inc
jb
rol
aam
test
push
add
mov
inc
add
shr
cmpsl
cmp
dec
jno
testl
cs
aaa
cmp
adc
mov
arpl
add
cmp
clc
or
mov
popf
cli
pop
out
sbb
das
add
pop
mul
cmp
loopne
mov
dec
cld
xchg
push
cmpsb
ss
push
cmp
ljmp
mov
push
test
cmp
push
inc
stos
loope
aas
jmp
jb
cmpsl
mov
cmp
and
mov
pop
mov
xchg
cli
negb
rclb
adc
loopne
jmp
pop
pusha
rcl
enter
mov
mov
ljmp
stos
push
jne
inc
mov
pop
sub
lahf
aas
or
call
mov
daa
sbb
out
test
sub
push
cmpsl
jecxz
dec
int3
mov
dec
out
mov
notb
jmp
xchg
or
cmp
js
lahf
aas
imul
loop
outsb
jae
in
filds
je
and
fs
push
adc
rcrb
es
sbb
test
jmp
sub
cmc
pushf
shrl
imul
test
jecxz
mov
push
stos
push
insb
jl
adc
sbb
pop
cmp
sub
in
scas
push
arpl
mov
ljmp
xlat
cwtl
adc
pop
outsb
fcmove
lods
rorl
inc
mov
jg,pn
insl
call
fucomp
lock
xchg
sbb
jl
stc
pop
clc
bound
cli
movsl
jg
frstor
aaa
xorl
adc
jae
lcall
jno
pop
ret
fdivrs
adc
loop
add
push
dec
in
xlat
push
jmp
add
or
negl
add
adc
popa
jecxz
hlt
das
aaa
push
das
pop
movsb
and
sub
aad
xor
call
push
xchg
jge
pop
or
inc
push
cld
jo
adc
imul
mov
cmp
rcr
decl
cmp
dec
adc
adc
lods
cmp
adc
mov
loop
rolb
loop
mov
xchg
add
adc
xor
or
pusha
pop
jl
jbe
and
ljmp
fimuls
call
testb
lds
popf
push
je
xchg
jmp
fwait
push
push
fcoml
jne
in
cld
outsb
stos
xchg
or
mov
je
sbb
dec
loope
mov
adc
in
jecxz
sbb
add
mov
pop
adc
mov
xchg
cli
ss
inc
mov
add
mov
mov
xchg
sbb
fistps
sub
or
repz
mov
jb
scas
or
cmp
push
jno,pn
cmp
mov
add
sub
and
xchg
xchg
das
mov
mov
inc
sub
enter
push
or
loope
sub
cmpsb
adc
jmp
shlb
sub
mov
subl
and
pop
add
je
xchg
je
pop
adc
mov
lds
lods
sbb
shrl
out
test
ficomps
inc
fwait
into
leave
inc
push
add
cs
inc
mov
lds
adc
xor
adc
xor
or
div
movb
add
jnp
push
sub
rcr
test
sbb
fstps
aas
sub
adc
xchg
leave
adc
xchg
cmp
sbb
cs
xor
sbb
enter
lds
xchg
sub
cmp
cmp
push
or
rorl
jo
adc
sbb
and
sbb
gs
or
cmp
adc
in
push
es
push
ret
jne
je
enter
adc
jl
add
adc
mov
cli
out
popa
imul
pop
daa
js
scas
pop
int3
ljmp
sbb
mov
lcall
adc
push
test
add
je
cs
popa
cmc
aam
add
ficoml
push
subb
adc
pushf
ss
lods
sahf
cmc
pushf
ret
xchg
daa
ds
inc
in
cwtl
push
adc
scas
cmp
cwtl
push
adc
pop
xchg
mov
inc
sub
loopne
push
adc
adc
sar
movsb
faddl
adc
fcompl
jmp
lret
addb
rclb
dec
stos
jne
adc
mov
cwtl
push
adc
dec
aas
fsubr
rolb
in
cmp
adc
dec
lahf
cltd
fcoms
mov
ja
push
fnstenv
add
fsubr
rolb
in
loopne
inc
out
sahf
aas
shr
dec
pop
in
ficoml
into
jge
mov
adc
arpl
fists
sbb
aas
jle
mov
sbb
mov
enter
pop
push
fistpl
sub
jle
outsb
or
mov
push
stos
push
and
lods
pop
sbb
pop
ss
cmp
pop
pop
jbe
sahf
popa
xchg
imul
mov
xor
or
fdivs
sub
mov
or
imul
out
stos
add
movsb
add
adcl
push
and
push
adc
movsl
mov
xchg
out
push
mov
enter
cmpsl
xor
sbb
cmpsl
inc
mov
mov
mov
push
dec
mov
cmp
adc
cld
or
and
pop
pop
sti
sbb
movsl
rcrb
adc
mov
call
xlat
not
inc
sub
inc
test
sbb
push
iret
test
and
and
jbe
jmp
mov
push
lcall
or
add
repnz
in
popf
mov
movsb
add
push
pop
iret
sub
out
mov
pop
lock
or
imul
inc
jae
mov
das
leave
mov
xor
in
les
or
push
sub
xchg
bnd
push
out
out
xor
or
cmc
inc
and
jmp
add
sbb
push
inc
das
in
insl
fistpl
cld
sbb
push
push
jmp
adc
movsl
adc
insb
lds
adc
pop
cmpsb
gs
xor
or
sub
push
iret
mov
mov
adc
mov
push
push
sbb
sbb
popa
and
xor
or
in
jb
imul
stc
std
dec
mov
mov
ss
fstl
jle
fcoms
clc
xor
mov
dec
push
lcall
sbb
xchg
into
jle
sub
out
push
xchg
scas
js
scas
stc
cmp
adc
jo
cld
jo
pop
mov
add
enter
daa
or
mov
or
mov
jo
pop
adc
xchg
fstps
outsb
das
adc
jo
test
sub
mov
push
adc
leave
ret
dec
cltd
push
adc
pop
cmp
sbbl
dec
bnd
pop
push
sub
aam
in
cwtl
addr16
repz
shrb
xor
push
adc
clc
sub
xor
jae
mov
mov
test
mov
cmp
decb
movsb
pop
out
xchg
jg
xchg
sbb
das
shlb
add
shll
push
push
insl
or
lret
mov
push
jl
adc
jno
add
test
sbb
leave
je
or
hlt
cwtl
push
adc
pop
daa
fildl
test
sbb
jne
mov
lahf
dec
cmp
rcl
clc
lahf
mov
cmp
insl
rolb
adc
push
mov
push
adc
cmp
adc
pushf
push
mov
push
inc
jo
lock
pop
inc
lods
shrl
faddl
adc
adc
movsb
faddl
adc
lock
imul
fwait
js
jg
lret
inc
mov
xor
or
das
add
inc
push
cmp
sbb
sahf
aas
mov
push
xchg
arpl
push
stos
shlb
inc
cmp
push
daa
xchg
cmp
cmc
adc
xor
shlb
push
xlat
insb
jno
pop
cmp
ja
faddl
adc
inc
jbe
sbbb
faddl
adc
mov
shll
sbb
orl
test
pop
cmp
clc
loope
add
pop
adc
imul
faddl
adc
stos
das
stos
sar
lods
mov
xor
sbbb
pop
or
data16
lret
pop
or
mov
sbb
daa
sahf
jno
movb
fwait
mov
popa
scas
push
scas
sub
jg
movsb
push
mov
lods
sar
mov
and
pop
or
adc
fwait
mov
push
adc
sbb
adc
js
pop
cmp
test
dec
dec
and
or
fsubrs
cld
mov
add
fmuls
movsl
lods
xor
cmp
add
sub
imul
outsl
lods
daa
cmc
adc
popf
sub
mov
fildll
int
push
inc
enter
pop
cbtw
xor
scas
cltd
pusha
stos
test
xchg
clc
add
loope
add
les
and
push
cmp
enter
gs
daa
fld
push
push
or
imul
jge
ret
imul
cmp
adc
icebp
das
dec
mov
jp
icebp
push
cmp
jp
sti
cmp
sub
cmp
stc
sbb
jle
stos
lods
mov
or
jecxz
lock
sbb
mov
das
lahf
or
inc
pusha
xor
or
in
fisttpl
mov
or
mov
mov
or
adc
and
dec
jmp
push
movsl
mov
pop
stos
je
movsl
add
push
xor
or
gs
mov
popaw
add
mov
sbb
adc
adc
push
and
mov
jae
xor
or
jmp
cli
mov
xchg
cmp
aad
mov
inc
sub
jno
xor
or
stc
pushaw
jns
outsb
adc
sbb
mov
ss
inc
inc
cmp
xor
or
mov
mov
call
pop
adc
enter
int3
xchg
pop
mov
xchg
jmp
xchg
adc
xor
sbb
mov
push
add
adc
pop
or
fldenv
push
test
add
or
inc
lcall
lds
adc
nop
mov
pop
adc
mov
adc
pop
sti
lods
lds
adc
or
mov
mov
cli
mov
lds
dec
mov
add
pop
adc
sbb
or
outsb
adc
xchg
sub
cmpsl
push
xchg
rcll
or
cmp
push
popf
and
sbb
lock
push
and
add
cld
and
sub
lods
xor
lods
add
and
dec
out
and
xchg
sub
clc
stos
push
dec
inc
mov
xchg
mov
push
or
cmpsl
xor
add
adc
lahf
enter
enter
outsl
les
or
loope
push
or
push
in
sbb
fidivl
adc
sbb
push
out
lods
pop
cmp
lds
adc
pop
cld
jo
adc
adc
in
mov
pop
adc
mov
jmp
imul
sbb
or
outsl
imul
or
inc
push
insl
mov
jno
or
jne
pop
shrb
mov
xchg
loop
pop
scas
lods
dec
xchg
mov
sar
xchg
fwait
in
or
adc
xor
clc
add
enter
or
add
test
add
pop
jo
adc
lahf
sub
xor
push
lcall
jne
jae
adc
jnp
push
and
adc
das
or
jge
fstl
and
or
xor
adc
add
in
mov
jecxz
lcall
movsl
cwtl
jae
adc
ret
jmp
sub
out
mov
nop
jbe
adc
add
pop
pop
jo
adc
iret
mov
fiaddl
push
and
sub
dec
push
ficoms
cwtl
jae
adc
push
sbb
fcoml
jmp
stos
cmc
lock
popf
push
push
cmp
sub
sbb
ss
addb
sbb
stos
pushf
mov
dec
aam
push
cli
push
leave
sbb
pop
jnp
mov
cmp
mov
fnstenv
mov
sub
inc
add
inc
jbe
xchg
rcll
adc
xor
sbb
mov
nop
jo
adc
cmpsb
es
mov
mov
push
adc
dec
jl
sbb
test
and
dec
jle
stos
aad
lahf
and
dec
fsub
xchg
pop
xchg
mov
cmp
lcall
dec
fistpll
adc
push
mov
push
jg
dec
add
push
adc
hlt
jae
lods
xlat
xor
jbe
sti
stc
push
das
cmc
ret
pop
mov
sbb
and
mov
or
cmp
xor
mov
repz
xchg
pop
pop
push
scas
or
or
sahf
sub
btl
icebp
movsl
cld
jb
jns
or
xlat
adc
push
mov
clc
jo
adc
inc
cmp
out
sbbb
hlt
jo
adc
aad
mov
cmp
cmp
lock
adc
and
cmp
and
enter
int3
mov
push
inc
push
and
mov
add
ds
xor
ja
inc
sbb
into
fwait
jno
xchg
add
imul
test
mov
push
ss
pushf
lcall
ffree
adc
mov
in
adc
dec
inc
ds
packssdw
outsb
popa
xchg
jp
or
lock
push
adc
dec
imul
sbb
icebp
ljmp
ss
lcall
dec
andb
pop
popf
arpl
ffree
push
jg
sub
inc
pop
jnp
and
jnp
lock
sbb
flds
in
loop
jmp
cltd
in
mov
test
jno
adc
pop
inc
and
add
les
aad
psubsb
add
jge
mov
or
mov
push
inc
jno
adc
dec
mov
mov
push
adc
sbb
adc
test
xchg
mov
std
adc
pop
into
js
enter
adc
inc
arpl
mov
mov
pop
cltd
les
adc
push
test
mov
pop
jo
adc
push
xchg
sub
pop
push
sti
push
cmpsl
cmp
in
enter
adc
dec
aaa
xor
test
pop
rclb
mov
cmp
jno
adc
mov
jo
adc
popf
movsb
out
sbb
stos
push
test
cld
sbb
incb
push
inc
push
in
leave
cmp
enter
incb
sbb
mov
sub
lahf
cmpl
pop
inc
int
xchg
sub
andl
dec
scas
pop
mov
cli
pop
adc
mov
sub
adc
inc
and
cmpsl
mov
dec
aaa
mov
mov
dec
jge
stc
and
or
mov
das
mov
scas
pop
sub
in
sub
gs
sti
idivb
lcall
stos
fists
push
mov
and
subl
rolb
mov
jle
pop
jno
aad
and
in
fidivrs
mov
lock
or
xor
cli
mov
add
scas
sahf
movsl
ljmp
roll
pop
scas
jbe
aaa
xor
mov
push
adc
inc
les
fidivl
orl
push
and
push
scas
lret
push
adc
pop
xchg
scas
pop
cmp
inc
jle
cli
pop
sahf
mov
jmp
mov
xchg
mov
movsb
dec
cmp
jno
stc
xchg
pop
sti
aam
fldt
lret
pop
mov
pop
adc
or
push
jp
dec
mov
push
and
movsl
dec
xchg
orl
imul
adc
bound
push
adc
test
add
inc
cmpsb
jne
push
sbb
aad
repz
add
jg
and
js
mov
popa
mov
cli
shl
cmp
jecxz
adc
std
andl
mov
ss
or
add
cmp
in
push
adc
or
push
adc
testb
adc
clc
push
faddl
adc
mov
jo
adc
shll
pop
faddl
adc
fsts
adc
adc
lods
or
pusha
faddl
adc
faddl
adc
aaa
roll
das
loope
loopne
pop
adc
lock
pop
mov
adc
in
jae
adc
push
or
sub
cs
dec
test
adc
push
dec
xchg
push
or
push
inc
sbb
jae
jb
orb
lds
outsb
xor
or
adc
orb
fstp
sbbl
out
cmp
sahf
add
push
adc
adc
les
sbb
ret
stos
lret
or
jo
adc
js
pop
adc
stos
test
pop
adc
fnstenv
rolb
push
adc
mov
push
and
jge
cli
xchg
add
jl
pop
adc
inc
ds
lods
mov
pop
adc
jmp
mov
scas
jle
jl
or
cltd
mov
sub
clc
mov
jno
adc
inc
into
std
mov
test
pop
adc
int
lods
test
jo
push
adc
sub
sahf
sar
les
push
test
pop
adc
pop
pop
test
pop
adc
mov
faddl
adc
in
ret
bound
adc
inc
out
aas
fsubrl
mov
xchg
push
push
jge
jl
pop
adc
jns
faddl
adc
pop
faddl
adc
iret
inc
cld
cmpsl
test
adc
inc
stos
popf
loope
loopne
jo
push
mov
cmovp
sbb
jle
jl
or
mov
cmpsl
jo
sbb
scas
pop
rorl
cs
pop
adc
xchg
aam
push
adc
pop
push
mov
dec
hlt
adc
adc
lods
jecxz
ret
cmp
push
adc
pop
adc
jg
add
test
mov
adc
in
lcall
jae
adc
mov
adc
inc
and
adc
adc
mov
push
adc
dec
out
testb
jae
adc
in
clc
scas
xor
add
xchg
test
pushl
jl
shrb
ljmp
or
in
and
pop
ds
bound
add
push
adc
movsb
pop
int
jle
aas
iret
or
xchg
js
in
clc
scas
add
jae
adc
xchg
jl
dec
jne
jae
adc
repz
mov
pusha
sub
push
adc
dec
or
jmp
faddl
adc
sti
sbb
jo
adc
add
and
adc
fucomp
cmp
push
adc
into
mov
shr
outsb
or
mov
pop
adc
sub
add
out
sar
lahf
mov
imul
mov
add
adc
push
sub
and
shll
push
fcmovbe
dec
add
sub
lds
xlat
push
jnp
lods
cmp
mov
fsub
inc
pusha
sbb
movsl
sub
call
adcl
push
mov
push
cli
bound
sarb
pop
pop
aas
sub
inc
jbe
jb
fldcw
jae
sti
and
mov
mov
fsubl
add
pop
test
cmc
popa
std
fsubrl
jne
das
js
out
sarl
mov
xchg
sub
cmp
dec
or
adc
pop
jmp
sti
sub
mov
or
decl
out
addr16
aad
pushf
cmp
sbb
cmpsb
xor
push
adc
int3
inc
xor
xchg
add
int3
fs
inc
sub
and
sbb
jp
mov
dec
sub
test
push
repnz
dec
jno,pt
je
pop
adc
fldcw
fs
stos
mov
je
movntq
incb
ja
fmull
add
cmp
mov
rclb
jne
fadds
mov
and
subb
inc
ljmp
xchg
or
xor
mov
push
jle
cmc
mov
das
cmp
jmp
or
adc
lea
cmp
and
icebp
stos
pop
and
lcall
add
ljmp
xchg
pop
xor
sub
inc
mov
das
sbb
aam
repnz
je
pop
adc
inc
arpl
push
movsb
faddl
adc
cmp
popa
cltd
out
jle
bound
and
sbbb
faddl
adc
in
or
sbb
faddl
adc
lret
je
pop
adc
push
in
int3
jmp
mov
adc
faddl
adc
sti
jmp
xchg
push
adc
xor
xchg
xlat
push
ficoms
pop
out
cli
inc
cmp
push
adc
stc
push
idiv
loop
dec
mov
sahf
mov
shl
push
ds
pop
shrl
push
xor
and
lock
xchg
sarl
sbb
mov
pushf
sti
loop
pop
dec
hlt
inc
mov
jecxz
mov
push
jecxz
insb
sbb
add
scas
sub
inc
mov
andb
adcl
jecxz
rcl
nop
sub
out
fdivp
out
push
daa
pop
jecxz
sbb
scas
sbb
repnz
js
mov
lods
cmp
lea
mov
push
adcb
or
add
add
test
dec
push
push
sub
ljmp
ds
jns
popa
cmp
stos
pop
push
dec
push
fiadds
lahf
aas
add
adc
shll
jnp
mov
mov
xor
enter
xor
cmpsb
cmpsl
js
dec
notb
bound
adc
push
repz
push
stc
daa
rclb
cmpsl
pop
jae
adc
andb
pushl
scas
and
jnp
test
orb
xchg
dec
adc
add
test
adc
lcall
jo
mov
scas
or
xor
xchg
xlat
push
mov
mov
test
orb
adc
sub
xchg
movsl
fcoms
pop
scas
mov
add
stc
aas
mov
adc
sbb
and
rolb
andb
decl
adc
loope
shll
push
lock
or
inc
xor
mov
push
sub
push
sub
outsb
pop
ljmp
push
test
mov
push
fs
ljmp
cmp
int
sub
jo
loope
jl
jnp
scas
or
xor
push
sub
xlat
std
fnstenv
mov
roll
rcl
mov
stc
lods
mov
push
loopne
inc
bound
adc
cmp
xlat
test
mov
adc
sbb
pextrw
add
dec
dec
clc
sub
mov
bound
loop
mov
xchg
pop
fucomi
xor
jb
test
xchg
jb
ss
ud2
rcr
mull
adc
mov
sub
out
or
sbb
dec
orb
nop
add
ret
push
adc
cmpsb
fstp
shrl
in
xchg
or
and
adc
rcl
cmc
mov
addr16
or
add
or
add
mov
mov
adc
hlt
cmp
jl
jne
data16
push
mov
cltd
movsl
loop
xorb
xchg
jg
mov
jae
and
movsb
popa
jnp
or
mov
mov
mov
adc
push
insb
imul
dec
add
ljmp
enter
xchg
xchg
pop
push
mov
adc
lds
divl
adc
sbb
repz
test
adc
adc
ja
add
pop
ljmp
xor
pop
jp
arpl
push
pop
push
fcomps
mov
pop
scas
mov
or
jno
movsb
jnp
insl
dec
sahf
xchg
cmp
cld
imull
and
adc
push
loopne
xchg
std
in
lahf
cmp
hlt
rolb
and
mov
pop
ret
les
movsl
jnp
ljmp
sbb
repnz
push
sub
jo
shll
call
lea
inc
add
stc
fildl
xlat
inc
push
push
inc
dec
xchg
movsl
lods
sub
or
inc
adc
push
aas
xchg
in
push
pop
sub
sbb
and
push
shll
imul
push
std
inc
push
dec
ds
xor
add
cmp
pop
add
mov
test
jno
outsb
xchg
sbb
pop
add
inc
pop
add
lea
pop
pop
stc
push
jmp
loope
lods
sar
and
fmuls
lahf
mov
std
jo
push
int
imul
cmp
and
jb
ja
cli
roll
loop
std
sti
test
xchg
call
aam
adc
fisubl
sar
arpl
push
mov
add
mov
push
jb
jecxz
dec
xor
into
inc
xchg
mov
cmp
repz
jb
rcl
lock
push
dec
sbb
mov
push
stos
push
fisubl
ss
lods
shll
jb
dec
out
sbb
ficoms
dec
lock
out
dec
jecxz
ja
adc
xchg
push
mov
dec
aas
jle
les
scas
push
fwait
inc
hlt
lcall
scas
daa
test
test
add
add
or
and
xor
sub
in
lods
rcll
sub
lods
fnstsw
dec
push
add
inc
jb
out
and
sti
mov
nop
jp
in
mov
inc
pop
cmp
into
inc
aad
test
shr
mov
xchg
adc
mov
adc
cmp
lods
inc
inc
push
outsb
or
pop
dec
cmp
ret
add
shrb
jns
mov
lea
pusha
lahf
call
jmp
stos
push
mov
shrb
jns
ljmp
movb
pop
adc
lods
push
stos
push
push
cld
push
add
mov
pushf
aam
xchg
jae
inc
cmp
adc
mov
dec
xchg
lods
mov
sbb
and
add
movsl
ss
sub
or
xor
adc
in
xchg
out
and
push
adc
lods
pop
jle
inc
cmp
adc
jae
dec
xchg
scas
mov
and
andb
sub
out
and
jl
push
adc
mov
sbb
not
pop
xor
sbb
in
inc
mov
pop
adc
pop
or
or
push
adc
hlt
cmpsl
fldt
sub
or
add
sub
sbb
add
mov
dec
adc
mov
bound
adc
push
dec
mov
mov
test
add
or
push
push
pop
iret
jnp
nop
jl
sbb
test
inc
aad
add
dec
lcall
imul
mov
hlt
rcrl
mov
ljmp
lock
push
pusha
hlt
jae
mov
adc
xor
mov
test
xor
and
jg
leave
dec
pop
mov
pop
repz
adc
ficompl
scas
push
adc
testl
es
rolb
xchg
push
jp
shll
xchg
jae
mov
incb
adc
andb
jno
dec
jp
popa
and
mov
pop
neg
pop
xchg
jnp
xor
insl
fwait
jmp
fidivrs
jne
cmpsl
lods
and
push
adc
aaa
movsl
imul
push
aad
xchg
push
pop
jg
adc
sbb
push
push
dec
sub
fsubrl
fiaddl
mov
mov
scas
jno
test
or
push
adc
xor
loop
and
shr
jno
icebp
jb
fstl
push
out
inc
add
pop
sub
cmpsb
jle
lods
xor
and
in
add
pop
push
inc
vpmaddwd
mov
push
pusha
cmp
mov
movl
movsb
arpl
ss
adc
push
popf
cmp
rol
mov
cld
mov
mov
sbb
push
mov
inc
out
fnstsw
mov
shl
pop
scas
fwait
sbb
push
cmp
and
stos
scas
rcrl
pop
movsb
arpl
push
loop
movsl
xor
cs
lret
and
lods
fcomps
mov
icebp
fs
int3
repnz
sbb
xchg
pop
pop
xor
movsb
push
fwait
pop
adc
push
cmp
les
dec
add
push
aad
pop
bound
mov
pop
mov
lods
pop
mov
mov
loop
dec
xchg
movsl
pop
orl
mov
pushf
cmc
inc
xlat
cli
sahf
testb
push
repz
scas
or
jne
test
pop
sub
mov
cmpsb
adc
les
dec
leave
or
movsl
push
jl
ret
sbb
fs
inc
xchg
sub
push
mov
dec
and
jne
stos
xchg
call
loopne
movsl
pop
adc
adc
or
mov
adc
sub
adc
lds
mov
push
push
outsb
jne
adc
fcoml
sbb
into
lret
and
dec
lahf
sub
or
bnd
xchg
adcb
push
adc
pop
aaa
and
cmp
iret
sub
call
aad
xchg
call
in
movsl
jae
lods
or
xor
pop
aad
fdivrs
mov
fcoml
fsub
dec
add
shl
arpl
sar
xchg
movsl
or
add
push
daa
pop
in
lcall
pop
in
push
sub
xlat
push
fsubr
pop
push
in
cmpsl
in
movsb
dec
popf
mov
call
lret
jae
push
into
pop
stos
rol
dec
mov
push
test
imul
push
and
aam
sar
jl
aam
xchg
inc
je
mov
jle
push
pop
lods
inc
cmp
add
pop
mov
imul
daa
add
or
loopne
dec
xor
dec
insb
shr
mov
sahf
or
scas
mov
mov
cmp
or
xchg
into
adc
lods
inc
and
push
in
jo
mov
cmp
ret
movsl
xchg
mov
test
fimuls
lea
sbb
mov
mov
ret
std
ror
and
je
dec
cmp
xor
pop
adcl
and
adc
jb
repz
nop
repnz
cwtl
imul
fdivp
iret
xchg
sub
dec
icebp
xor
stos
int3
jb
adc
inc
lods
xor
cmp
aam
jbe
adc
mov
loopne
xchg
sub
push
mov
dec
stc
aaa
push
push
adc
sub
xor
cmp
mov
cmp
hlt
cld
addb
jo
and
pop
jne
fsubrs
dec
cmp
dec
mov
or
xor
pop
fisttpll
adcb
jp
xor
and
mov
fldenv
mull
mov
xorb
dec
add
repz
fildll
sbb
loop
imul
push
fiadds
dec
jno
or
ss
aas
pop
loopne
movsb
outsl
and
mov
xchg
sub
lahf
cmpsl
sbb
sbb
or
ret
mov
shl
inc
sahf
mov
and
xchg
imul
loop
and
aam
inc
loop
sbb
mov
lret
sti
std
or
dec
xor
push
ljmp
insl
scas
aam
test
enter
jecxz
cmpsl
and
jb
std
add
jne
ror
pushf
scas
cmp
pop
stos
lods
add
push
and
and
loope
les
movl
sbb
inc
pop
push
bound
cmpsb
mov
add
shl
jnp
scas
sub
clc
test
sbb
mov
mov
adc
or
sub
mov
xchg
movsb
sahf
lock
lea
dec
in
mov
mov
pop
cmpsb
into
sbb
push
sarb
dec
lds
dec
ljmp
sub
mov
iret
out
out
fdivl
into
jb
pusha
push
pop
adc
in
test
pop
cli
mov
idivl
cwtl
mov
add
test
cmp
adc
and
push
mov
pop
push
and
sbb
movsl
dec
push
das
cmp
ljmp
es
push
ds
mov
clc
mov
inc
jmp
mov
add
and
push
into
push
sub
and
test
loop
rcrb
rorb
das
fistps
movsl
lock
scas
addr16
cmpsl
into
ficompl
push
mov
sbb
and
push
push
loope
fnstenv
sahf
int
sub
pop
sub
adc
or
lods
in
ficoml
jae
mov
mov
add
pushf
or
pop
shlb
dec
dec
adc
jmp
sti
jl
int
outsl
shll
sbb
sub
popl
das
mov
int
mov
mov
xor
adc
pop
mov
cmp
push
and
mov
ljmp
sarb
das
cltd
stc
cmpsb
les
and
call
rclb
or
mov
dec
ret
jmp
outsl
in
inc
sarl
pop
aas
rol
jns
mov
dec
lcall
push
dec
sbb
pusha
pushf
iret
and
movsl
aam
imul
mov
fdivrs
xchg
xrelease
test
fisubrl
or
dec
aad
cmp
shrl
pop
jmp
les
in
adc
push
jns
fs
scas
sarl
push
jecxz
add
cmp
fsubs
fidivrl
ljmp
mov
dec
aas
jg
mov
or
addr16
iret
xor
inc
push
or
or
adcb
add
idivl
cmc
dec
and
arpl
xchg
pop
std
adc
adc
push
add
mov
add
jno
lock
adcl
cs
faddl
adc
mov
jno
popa
mov
sbb
mov
sub
adc
rcll
out
sub
jne
cmp
ljmp
mov
cld
xor
outsl
lret
sti
and
faddl
adc
adc
inc
mov
jl
push
adc
xchg
xorb
jle
sbb
cmpsb
jg
push
cmp
xchg
jmp
rcr
adc
jae
mov
fs
lock
subb
pop
lods
aam
test
adc
mov
mov
add
or
and
jno
adc
les
adc
or
insb
sbb
faddl
adc
xor
cmc
push
idiv
jo
adc
movsl
pop
mov
push
out
icebp
adc
vpaddb
enter
push
jg
ret
mov
inc
or
repz
lret
jne
iret
xchg
movsl
popf
aaa
sbb
lock
mov
cmp
lcall
test
push
xchg
xchg
cmpb
jnp
test
mov
mov
sub
jp
jmp
cmp
mov
ds
stos
scas
shr
ror
add
cmpsb
cmpsl
mov
push
push
inc
dec
ret
xor
mov
ds
mov
je
add
lods
cli
push
jmp
aad
mov
mov
push
lods
pop
mov
ret
shrb
popa
adc
scas
fdivs
adc
push
scas
sub
das
sbb
and
pop
cwtl
testb
jo
adc
inc
and
or
test
push
jle
dec
pop
push
ss
rol
adc
lods
les
adc
rep
les
adc
test
icebp
adc
push
adc
mov
pusha
inc
inc
adc
push
test
sarb
rcll
adc
test
add
das
adc
pop
jmp
jle
xchg
push
mov
inc
jmp
inc
cmp
push
mov
movsl
mov
mov
je
xor
mov
pop
rcl
pop
adc
sbb
movsl
sub
adc
pop
mov
faddl
adc
lock
sub
adc
mov
decb
pop
cwtl
outsl
jg
xchg
push
cmpsb
jbe
faddl
adc
fildll
enter
mov
sub
inc
pop
mov
aaa
jo
pop
movsl
fwait
pusha
jecxz
imul
mov
scas
pop
sbb
inc
inc
pop
cmp
push
inc
inc
mov
aas
shrb
test
mov
cmpsl
and
frstor
popf
pusha
mov
cmp
fwait
dec
sarl
push
testb
stc
add
fcoms
or
cmp
ds
fs
adc
inc
popa
xorb
and
faddl
adc
nop
shll
pop
mov
push
pop
out
xor
jo
adc
adc
push
adc
ja
push
in
je
lds
adc
shll
sbb
jo
call
and
adc
shl
nop
sub
dec
mov
jbe
mov
or
ja
jecxz
cmc
int3
jo
adc
in
rorb
inc
call
cmpl
push
adc
cmp
cs
add
inc
les
lret
xchg
push
ljmp
in
mov
mov
jnp
cld
mov
sub
out
insb
jae
adc
mov
mov
adc
inc
es
movsb
in
or
mov
xor
icebp
repnz
jl
insl
lret
imul
mov
lods
pop
pop
adc
sbb
adc
lahf
cld
sbb
adc
adc
add
xchg
rorb
jmp
insb
js
ja
xor
lods
out
mov
mov
fsubr
push
push
jl
jae
adc
mov
aas
and
fiaddl
jp
inc
inc
fildll
or
push
inc
fisttps
xor
mov
cwtl
push
adc
mov
mov
xlat
jb
xchg
leave
repnz
movsb
push
sub
cli
mov
sub
xchg
pop
pop
sub
sbb
mov
sub
mov
loop
aaa
jmp
and
dec
out
inc
aad
xchg
push
mov
ss
mov
jp
fstps
pop
jmp
mov
mov
pop
ss
ds
incl
idivl
mov
icebp
sbb
aad
iret
inc
cmpsl
pop
jne
ret
pop
jmp
imul
lods
loopne
popf
mov
jb
cli
push
jle
mov
adc
xchg
jecxz
jno
adc
add
das
lret
aas
dec
cwtl
push
adc
repnz
imul
ret
jp
fisubrl
xor
xor
sahf
popf
jbe
cmc
hlt
imul
insl
or
push
lods
pop
mov
jl
adc
pop
jae
adc
stos
jge
bound
in
push
inc
movsl
sbb
daa
push
mov
ret
or
add
lock
push
pop
add
or
vsqrtps
pop
cmpsb
scas
mov
pop
lods
pop
mov
mov
mov
stc
es
rclb
mov
test
adc
cmc
push
cmp
test
mov
xchg
adc
jg
pop
mov
mov
add
push
inc
gs
rcr
push
mov
in
cld
jno
daa
adc
pop
pop
jae
repnz
adc
and
jl
and
stos
push
test
push
jo
sarl
xor
mov
in
fimull
jne
cmpsb
fisubrs
cltd
mov
xchg
mov
repnz
jmp
push
adc
scas
xchg
fcoml
jmp
stos
cmc
lock
inc
cmpsb
stos
loop
xchg
pop
roll
in
pop
aaa
arpl
pop
mov
jp
jmp
mov
ljmp
pop
mov
push
adc
daa
fidivrl
push
mov
movsb
dec
out
add
pusha
sub
mov
xor
cmp
stos
push
and
cmpsb
int3
rcrl
movsb
add
ja
sub
add
cli
out
dec
imul
sub
xor
lahf
mov
dec
xchg
sub
xor
leave
in
fidivl
mov
push
stos
rclb
mov
cwtl
sahf
dec
xchg
sub
mov
push
adc
sbb
mov
cmp
mov
dec
jmp
aas
jle
dec
popf
inc
cld
sbb
jns
lods
push
xchg
pop
xor
xchg
push
frndint
addl
xor
xchg
enter
cmpsl
aad
mov
push
cmpsl
inc
xchg
sub
dec
add
int3
lods
aaa
das
rcr
adcb
pop
sahf
xchg
scas
rcrl
mov
fadds
xor
dec
mov
xchg
jmp
roll
dec
scas
pusha
scas
dec
jno
sti
inc
dec
scas
hlt
cld
imul
out
ret
xchg
movsl
mov
sbb
icebp
or
push
adc
dec
outsb
cmpl
ret
fwait
push
adc
cli
loope
lods
aaa
cmp
add
mov
push
xchg
sbb
imul
xor
imul
or
clc
jp
add
dec
inc
sarb
sahf
xchg
mov
and
cs
addb
sub
xor
adc
jb
sub
push
jns
add
repz
mov
pop
out
cmp
std
mov
test
mov
inc
or
xor
sub
push
inc
cmp
push
xor
mov
iret
inc
sbb
fwait
push
adc
adc
dec
clc
add
ret
aas
inc
and
lahf
xacquire
lcall
push
adc
incl
dec
and
jecxz
push
xchg
jmp
jl
xchg
mov
inc
shl
cmc
sub
popf
rclb
icebp
js
pop
aaa
jmp
insb
ss
jle
xor
aam
sbb
not
xor
adc
inc
dec
cwtl
mov
enter
pop
loopne
add
add
mov
or
jle
popf
jo
pop
adc
sahf
loopne
aad
and
mov
daa
pushf
mov
mov
push
adc
or
lods
mov
sahf
rcrl
rolb
mov
sbb
mov
int
cli
pop
adc
loop
je
pop
dec
xchg
pop
test
xchg
stos
popa
jnp
and
adc
dec
and
fcomps
jge
dec
sahf
pop
mov
xor
test
fdivrl
mov
fwait
push
adc
in
les
xchg
rcl
cs
movb
lods
aad
shll
fdivr
pop
adc
shl
outsb
adc
clc
scas
inc
cli
fxam
test
mov
fwait
push
adc
std
mov
loope
cli
imul
push
inc
sbb
push
and
sub
and
and
movsl
fstl
adc
xor
in
cmpsb
cmpsl
mov
pop
iret
fdivr
mov
lds
xchg
sub
pushf
lods
aaa
stos
orb
push
or
je
cwtl
jle
inc
scas
pop
mov
clc
sti
jb,pt
dec
lahf
dec
int3
mulb
pop
and
testl
dec
scas
inc
cmp
adc
sarb
push
pop
inc
lods
cs
mov
or
push
inc
add
adc
adcl
push
dec
fsubr
lea
jle
push
or
jp
aam
push
test
in
adcb
xor
mov
jb
add
cltd
imul
in
xor
sub
fisubs
fnstenv
lods
fcmovne
push
ret
clc
jl
test
mov
adc
mov
mov
mov
mov
push
dec
dec
les
adc
bound
mov
and
inc
mov
push
cmpsb
dec
jmp
gs
jge
int
xchg
shlb
in
and
inc
xchg
adc
or
inc
cmp
aas
mov
scas
test
testl
scas
pop
into
notb
xchg
rorl
dec
sahf
sub
popa
stos
xchg
mov
or
cmp
jp
scas
add
xchg
addl
mov
pop
orl
pop
adc
and
mov
pop
sub
fucomi
mov
mov
or
pop
scas
sti
push
mov
clc
mov
enter
cmpsl
xor
pop
cmp
stos
lahf
sbb
dec
xchg
sub
addr16
pop
or
negl
cld
jo
adc
imul
test
dec
fistps
push
inc
jp
aad
sti
movsl
sbb
xor
lock
test
jno
pop
or
mov
push
adc
dec
push
pop
or
add
pop
pop
or
sbb
lea
jle
mov
ljmp
cmp
adc
pop
sbb
mov
jno
ds
std
mov
ja
out
pop
adc
mov
jg
lahf
loop
cmp
dec
mov
daa
mov
jg
hlt
jno
add
pop
adc
sbb
inc
xor
dec
cltd
sbb
stos
stos
addl
adc
add
inc
pop
sbb
mov
cltd
es
outsb
lcall
push
or
xor
aaa
xchg
adc
ja
fidivl
les
sub
sti
xor
lea
cmp
and
jl
xor
jp
jo
pop
rcrl
pop
cltd
sub
fwait
cmpb
or
mov
cli
xor
mov
jecxz
mov
sub
inc
add
std
cmp
pop
ffree
loope
push
sub
out
mov
out
adc
ss
movl
das
sub
jb
lods
push
scas
inc
mov
push
stc
rorl
and
in
pop
adc
and
test
jo
sbb
movb
xor
sbb
hlt
mov
pop
adc
inc
out
xor
or
jle
dec
mov
inc
stos
mov
jmp
jp
pop
pop
or
test
popa
arpl
pop
or
out
add
sub
mov
pop
push
pop
or
fnstcw
lods
push
scas
and
dec
pop
or
sub
sbb
pop
lods
pop
mov
dec
int3
repnz
sub
daa
dec
enter
mov
jb
push
adc
lods
mov
imul
stc
lock
push
adcb
rolb
or
stos
icebp
cmp
dec
cmp
push
adc
cmc
rclb
adc
fcomps
xlat
stos
or
faddl
adc
push
faddl
adc
addl
push
adc
adc
push
faddl
adc
in
insl
shl
enter
jl
aad
push
faddl
adc
pop
and
cmpsb
into
pop
sbb
xchg
adc
xor
xor
push
pop
andl
mov
adc
fistpll
cmp
orb
lret
iret
in
jo
icebp
outsl
push
push
faddl
adc
mov
sub
dec
dec
jne
jo
adc
faddl
adc
xlat
stos
push
inc
push
inc
mov
mov
faddl
adc
faddl
adc
std
xlat
stos
push
push
inc
cld
jo
adc
mov
imul
pop
adc
push
or
ficompl
jno
adc
scas
jns
pop
rclb
mov
cmp
adc
test
xchg
mov
std
adc
pop
iret
dec
mov
push
adc
loop
add
loop
lods
pop
mov
dec
int3
out
aaa
leave
dec
int
dec
sub
jae
out
aad
rcr
scas
pop
mov
jae
adc
ffree
lahf
aas
jle
sti
sbb
jae
adc
es
fisubrs
je
jo
push
adc
sub
mov
cld
cli
mov
cmp
adc
and
jmp
inc
popa
lods
push
mov
adc
cmp
adc
vgetexpsd
and
les
cwtl
mov
inc
pop
dec
push
mov
aad
push
mov
pushf
jo
adc
xchg
push
sbb
lods
imulb
pop
jmp
inc
xchg
xor
insb
sub
or
pop
idivl
mov
xor
fcomps
or
addb
push
adc
test
adc
inc
cmp
stos
xchg
and
push
xor
lods
rcll
notl
cld
sbb
jle
pop
push
pop
leave
not
cmp
imul
pop
ja
std
lds
xor
out
xchg
and
sub
inc
ja
push
sbb
or
mov
sbb
les
dec
adc
push
adc
jae
mov
or
aam
push
adc
jmp
aam
mov
inc
mov
push
push
fs
and
imul
sbb
sbb
pop
std
and
sub
and
push
push
fbld
in
mov
loopne
inc
xchg
ror
ror
sub
cli
repnz
mov
push
adc
mov
cmp
push
shr
test
mov
or
stc
mov
mov
and
adc
mov
ss
add
incb
adc
sbb
cmp
jbe
scas
repz
aas
mov
nop
lret
mov
pop
adc
add
cwtl
push
adc
sbb
adc
out
pop
adc
fwait
jno
mov
scas
cli
xor
adc
add
dec
mov
push
adc
outsl
pop
xorb
sub
popa
xchg
in
lock
mov
adc
inc
and
cmp
add
jns
dec
shll
cmpsl
mov
and
test
inc
lahf
pop
arpl
sbb
loopew,pt
sbb
dec
pop
mov
fsubrs
sbb
inc
cmp
cmp
adc
xchg
add
cmc
jmp
dec
shrl
roll
mov
test
bound
fwait
pusha
cmpsl
push
adc
imul
fdivrs
out
outsb
sub
je
sub
or
mov
adc
mov
fwait
push
adc
je
adc
outsl
sti
mov
pop
adc
testb
jo
adc
inc
insb
add
and
cmp
or
add
cli
leave
xchg
fidivrs
arpl
lods
push
scas
cltd
xchg
dec
shrl
mov
js
pushf
jne
sti
loop
push
mov
mov
push
divl
jmp
sub
dec
lahf
aas
mov
and
xchg
sub
jp
push
dec
inc
mov
enter
adc
arpl
test
push
jle
iret
jge
sarb
dec
pop
dec
cmp
adc
loope
lds
adc
lods
repnz
fisubl
sbb
push
and
lods
add
outsb
jo
pop
adc
addl
mov
dec
lcall
stos
push
mov
pop
ss
fisubl
jle
movl
cmp
push
mov
xchg
lahf
push
cmpsb
push
je
pop
adc
add
add
xchg
mov
jns
scas
sub
dec
add
lds
xchg
sub
andl
add
adc
mov
pop
stos
push
aad
dec
push
xchg
sub
scas
pop
mov
dec
add
cld
imul
jbe
jg
cmpl
pop
mov
sub
or
dec
je
jno
adc
aaa
or
icebp
dec
sub
stos
incb
dec
mov
adc
adcb
jno
adc
mov
les
pop
jne
push
push
ret
shlb
mov
push
adc
imul
enter
cmpsl
cmp
ljmp
lcall
les
adc
dec
enter
push
lea
into
ja
roll
adc
or
push
adc
out
out
test
pop
adc
mov
jo
pop
adc
inc
mov
cmp
mov
jno
adc
lahf
add
faddl
adc
cmpl
dec
scas
out
jae
sbb
xlat
pop
push
mov
adc
stc
or
adc
cmp
mov
or
xchg
jge
inc
sbbb
mov
fildl
add
push
adc
fcoms
or
movsb
push
sub
jo
pop
adc
adc
pusha
inc
jno
adc
sbb
pop
adc
xor
mov
pop
outsl
cmp
cmp
sbb
jecxz
cmc
rorb
std
and
cmp
out
mov
gs
mov
xor
sbb
sub
outsb
mov
loopne
sbb
ds
imul
cmc
and
lcall
popa
adc
push
pop
mov
adc
imulb
nop
sbb
dec
jo
adc
lcall
hlt
pusha
lock
xor
test
xchg
in
scas
adc
jo
adc
jae
adc
gs
push
int3
xchg
push
adc
push
or
bound
jno
sub
incb
aad
sub
mov
sbb
push
data16
inc
or
lcall
xchg
fisubrs
dec
xor
sub
jns
inc
lahf
mov
pop
xchg
push
imul
mov
cmp
loope
push
lcall
or
add
mov
adc
push
add
lock
aam
add
push
clc
int3
movb
adc
outsl
cmp
nop
jno
adc
faddl
adc
stos
in
outsb
or
dec
dec
imul
cmp
sti
iret
add
faddl
adc
push
push
add
gs
js
jno
jp
dec
xchg
sarb
rcr
pop
adc
fcomp
pop
adc
mov
sub
aas
shr
hlt
imul
fcmove
push
sarb
push
adc
push
add
inc
mov
pop
out
sub
or
push
adc
sbb
inc
sbb
sub
lds
adc
adc
pop
adc
outsl
inc
dec
dec
jg
pop
inc
mov
mov
dec
idivb
scas
addr16
pop
adc
js
pop
adc
stos
js
pop
adc
push
adc
fisubrs
sub
push
adc
in
fdivs
test
push
adc
clc
jo
adc
push
adc
lahf
aad
jo
adc
out
xchg
inc
pop
jmp
inc
lock
adc
cli
pop
adc
dec
mov
pop
jno
js
sbb
das
mov
jne
sub
nop
movsb
mov
mov
push
or
movd
cmp
jo
adc
aas
sbb
sti
cmp
fistpll
les
les
adc
shlb
sub
and
pop
jle
dec
mov
push
adc
mov
mov
inc
jo
pop
adc
icebp
out
faddl
adc
push
push
cmpsl
mov
faddl
adc
mov
xor
repnz
fcompl
jo
faddl
adc
pop
sub
sahf
or
rcll
mov
mov
xchg
jmp
loop
faddl
adc
outsl
call
and
or
and
test
and
jno
adc
push
or
cli
push
push
pop
faddl
adc
fisubrl
cmp
aad
mov
adc
repz
pop
lods
inc
out
xchg
div
cld
dec
pop
inc
cmc
xor
mov
or
enter
test
shl
xor
adc
in
pop
adc
inc
out
lret
or
pusha
decl
pop
inc
mov
faddl
adc
push
gs
and
test
test
sub
xchg
jbe
xor
push
adc
faddl
adc
inc
mov
sub
and
adc
in
and
faddl
adc
push
hlt
in
fisttpl
mov
rcll
test
mov
pop
aam
jp
sub
rorl
cltd
mov
or
je
push
push
push
faddl
adc
clc
ret
push
adc
cwtl
ljmp
pop
out
std
mov
xchg
outsb
inc
movsb
fisttps
scas
cmpsb
sbb
or
lea
dec
jle
outsb
xor
jo
push
adc
int
or
outsl
dec
mov
adc
or
jl
push
adc
or
cmp
icebp
and
insb
aam
mov
fwait
or
jno
adc
fwait
das
sbb
jecxz
xorb
mov
addb
nop
adc
enter
cmp
jg
sub
sub
sub
jo
adc
pop
xor
inc
cwtl
cmp
ja
push
out
jae
imul
dec
jae
gs
mov
les
adc
sub
xchg
sub
sbb
push
and
adc
inc
pop
jae
dec
inc
scas
mov
pop
idivb
push
dec
or
faddl
adc
leave
push
aaa
ror
jge
mov
data16
pop
mov
dec
std
jne
adc
jmp
xchg
movsb
pop
faddl
adc
jne
cld
push
mov
faddl
adc
xor
ret
das
enter
sub
push
xchg
jle
or
in
fidivl
outsl
adc
pop
mov
sbbb
cmp
sarb
orb
cmp
or
adc
insl
jb
test
lods
sarl
outsb
or
rorl
push
jns
sub
sub
dec
movsb
iret
mov
xor
in
popa
in
fidivl
adc
pop
mov
mov
cs
movsl
dec
jecxz
jmp
imul
fisubl
sbb
or
clc
cmpsl
add
dec
push
jg
shlb
sbb
mov
incb
loope
push
mov
mov
sub
jo
pop
adc
pop
dec
sub
or
push
adc
push
clc
scas
dec
cli
stos
sbb
cmp
imul
loopne
lea
mov
ljmp
test
scas
mov
adc
mov
cmp
ljmp
xchg
push
adc
cmpsl
add
dec
enter
xlat
cmp
aam
addl
mov
push
popf
fwait
adc
scas
mov
jno
adc
imul
rcll
inc
out
je
movl
out
test
push
mov
jo
adc
movsb
subl
jp
pushf
push
adc
cwtl
jae
adc
addl
mov
rolb
jno
adc
jp
repz
js
push
sub
sub
pop
adc
mov
add
imul
out
xchg
sarl
pop
adc
xor
fs
adc
addb
test
stos
daa
mov
inc
lds
adc
xchg
test
jnp
les
adc
call
rol
jo
push
adc
adc
enter
das
cs
sarl
adcb
push
mov
hlt
divb
push
sub
movsl
push
out
dec
out
orb
inc
sarb
pusha
cld
and
pop
gs
shrb
stos
mov
inc
outsb
sbb
add
jmp
ret
stc
mov
push
adc
stos
fcmovnbe
rorb
je
inc
jl
mov
sbb
xlat
repnz
pusha
pushf
push
adc
push
push
pop
ss
sahf
pop
incl
lret
push
flds
aam
test
push
pushf
push
adc
xchg
mov
pop
or
xor
push
adc
test
into
jb
aam
mov
sti
push
ret
push
call
fisubrs
add
mov
rorb
hlt
mov
and
xchg
cltd
sbbb
pop
mov
aad
jne
ljmp
sub
lock
jg
out
rcrl
sub
add
mov
add
lcall
fldlg2
sbb
in
dec
xchg
xor
outsl
sbb
aad
xchg
mov
test
ret
xchg
dec
inc
call
shll
adcl
cmp
and
mov
push
push
adc
ljmp
pop
cmp
adc
xchg
insl
shll
les
or
sbb
push
adc
popf
push
xchg
pop
mov
adc
jae
popf
mov
pop
adc
jo
faddl
adc
xor
and
mov
adc
les
cmc
mov
cwtl
cltd
adc
rcll
mov
dec
pushw
jo
xor
aas
dec
mov
adc
push
jbe
sub
mov
iret
fdivs
xor
iret
add
jbe
shlb
aad
push
sti
add
sub
lods
fmuls
adc
adc
pop
mov
fldcw
inc
jle
dec
sub
or
lods
ss
dec
and
push
adc
xchg
frstor
out
shr
out
rol
in
dec
xor
and
push
call
in
inc
add
arpl
out
fiadds
inc
mov
add
mov
test
in
xor
pusha
cmpsl
add
cli
push
popf
xchg
cs
jae
pop
out
shl
push
sbb
fcmovb
push
dec
jle
sub
adc
stos
std
pushf
jne
xchg
mov
or
and
lock
xchg
fstl
inc
rolb
pushf
push
adc
cs
mov
xchg
in
das
into
out
or
mov
nop
mov
in
sbb
out
add
push
addr16
xchg
hlt
mov
dec
xor
adc
inc
and
or
mov
dec
adc
rol
adc
xor
in
je
mov
mov
lock
sbbl
aam
sbb
pop
jbe
stc
sub
mov
push
inc
sub
adc
movsl
mov
dec
adc
jo
adc
sbb
and
push
jge
mov
cmp
or
pushf
push
adc
imulb
cli
cmp
inc
mov
inc
pop
out
mov
dec
push
enter
ja
sbb
push
adc
sub
xchg
xchg
mov
adc
mov
pop
mov
sbb
scas
push
rcr
movsl
sbb
test
jo
adc
or
jmp
mov
cmp
loope
inc
sbb
jl
clc
push
pop
iret
sbb
mov
and
imul
push
shlb
dec
jmp
movsb
push
imul
stos
popf
cwtl
cmpsl
mov
adc
outsb
sub
xchg
xchg
inc
fistpll
icebp
loope
mov
call
mov
sbb
xchg
mov
mov
in
dec
mov
aad
jb
je
insb
xor
push
pop
imul
mov
fadd
bound
mov
or
cmp
cltd
xchg
icebp
stc
hlt
aam
push
adc
push
sti
inc
push
push
pop
arpl
cli
jae
jecxz
rcrb
add
lret
inc
or
and
js
or
loope
jp
adc
jno
adc
leave
int
les
adc
in
sbb
xor
ja
xchg
jp
insb
fstp
pop
push
scas
sbb
aad
lcall
mov
lock
or
push
adc
aas
mov
inc
sub
jno
adc
fstpl
adc
mov
outsb
pop
adcl
aam
push
aad
mov
les
adc
adc
jns
stos
fwait
mov
fmul
jle
mov
das
cmp
dec
xchg
cs
out
xchg
xor
xor
xor
pop
jae
mov
into
add
fcomip
xlat
mov
mov
cmp
or
fs
cltd
aad
pushf
push
adc
adc
ss
cmp
jno
adc
pop
adc
adc
jno
adc
mov
pusha
sti
jmp
out
add
xchg
call
xor
movsl
daa
cmp
push
or
fistpl
mov
sub
call
push
add
push
adc
lods
mov
push
lods
stc
lock
push
pop
fwait
inc
mov
jno
aad
fldcw
inc
shrb
cli
pop
adc
adc
lcall
mov
inc
stos
push
scas
repnz
cmp
in
xorl
dec
mov
jp
sti
loope
mov
pop
push
sub
push
adc
pop
jmp
xlat
push
insb
rcll
adc
js
scas
js
push
adc
dec
sbb
push
add
test
loope
aam
int
add
cltd
push
sarl
cwtl
pusha
inc
mov
lods
sbb
adc
pusha
test
add
in
xor
adc
js
pop
adc
adc
adc
xchg
lds
jns
jno
inc
ficompl
jo
adc
mov
push
adc
call
push
repnz
add
inc
push
in
pop
pop
xchg
jge
in
adc
daa
test
inc
cmpsb
pop
mov
cmp
sbb
lahf
push
dec
in
mov
fnstenv
xor
stos
mov
jmp
mov
jbe
loop
mov
stos
stos
push
shlb
push
pop
xchg
adc
mov
or
das
iret
stc
es
in
mov
cmpsb
push
scas
popa
sbbl
lods
add
lahf
mov
adc
xchg
sub
adc
jmp
imul
lock
in
push
inc
sbb
xor
sbb
mov
mov
push
adc
pop
data16
jg
lods
hlt
out
fmul
insl
shrl
test
adc
sbb
pop
mov
mov
aam
and
dec
leave
fbstp
lcall
sti
stos
cmp
bound
fs
lret
cmpsl
pop
cmp
cmp
inc
fsub
test
test
or
stos
adc
out
rcr
sti
or
repz
sub
push
add
mov
pop
push
or
jne
icebp
cmp
ljmp
xchg
cmpsl
fninit
mov
jg
mov
stos
loop
push
xor
cli
arpl
xor
dec
sbb
mov
mov
jge
lds
fwait
push
and
hlt
mov
icebp
ja
mov
pop
hlt
adc
lret
ss
mov
sbb
test
xor
push
dec
popf
push
adc
iret
aam
jnp
ds
pop
adc
jo
adc
mov
dec
jle
fldcw
push
adc
cld
sbb
adc
sti
pusha
jo
adc
push
push
insl
add
sub
cmc
pop
adc
add
mov
xchg
rolb
mov
jns
sub
adc
stos
jmp
add
sbb
fs
jno
adc
pop
enter
add
mov
adc
mov
outsl
das
arpl
pop
pushf
mov
jno
xchg
jmp
incl
insb
icebp
les
adc
lods
jecxz
add
xchg
jae
adc
loope
mov
push
sub
add
or
test
lret
cmp
cmp
adc
es
push
scas
push
sti
call
mov
arpl
mov
in
fiadds
adc
jp
shll
test
out
jnp
in
in
cmpsl
xor
rcrl
and
dec
pop
add
sbb
js
push
adc
sbb
fs
xchg
shrb
push
mov
inc
pop
bound
or
jne
push
lods
mov
faddl
adc
icebp
jne
mov
jo
adc
fiadds
adc
cmp
test
xchg
mov
mov
popl
inc
fidivrl
fiadds
adc
adc
cmpsb
sub
in
jne
fiadds
adc
xchg
loopne
push
adc
lea
fiadds
adc
lods
repz
adc
sub
jle
shlb
adc
rcl
or
pop
add
pop
hlt
mov
adc
test
add
lock
adc
sub
test
enter
outsl
xlat
lods
pop
fcom
faddl
adc
cmp
cli
pop
adc
aad
stos
mov
cmpsb
dec
xchg
push
insb
sub
mov
or
jecxz
ds
adc
mov
pop
mov
shrb
clc
sbb
adc
nop
les
scas
inc
jno
adc
cwtl
push
or
arpl
in
movsl
dec
enter
adc
test
dec
rcll
adc
arpl
js
push
adc
inc
nop
dec
lahf
aas
sar
xor
pop
adc
jge
mov
loopne
stc
cmp
push
insl
inc
jecxz
ja
adc
in
lcall
jae
adc
mov
adc
mov
push
adc
iret
xor
or
push
push
cmpsl
cmp
jno
adc
popa
outsl
stos
jle
pop
jne
lds
js
jo
adc
lods
pop
dec
jne
jo
adc
mov
mov
sub
adc
out
sub
jae
test
xor
out
mov
sbb
xlat
icebp
dec
into
std
mov
mov
subb
adc
jle
mov
mov
mov
inc
jne
or
mov
inc
loop
call
jl
push
adc
sub
repz
jae
adc
ja
xor
lds
sub
push
adc
pcmpgtb
cwtl
mov
fs
jnp
dec
mov
dec
fiaddl
int3
flds
sub
xchg
enter
enter
jmp
iret
or
and
dec
sbb
jo
push
adc
inc
sub
adc
xchg
out
mov
sbb
filds
fiadds
jl
fcomps
adc
sub
call
arpl
sbb
mov
sbb
push
adc
outsb
call
mov
jae
inc
and
jno
adc
dec
sbb
fldt
jo
adc
ret
adc
inc
or
adcl
test
mov
lock
adc
push
dec
jle
inc
icebp
and
cs
mov
jo
adc
test
mov
lcall
cmp
out
xorb
sbb
hlt
insb
dec
test
add
jmp
outsl
out
insl
imul
mov
out
repnz
mov
sub
xchg
jno
adc
jl
push
or
scas
mov
xchg
scas
or
cs
leave
in
test
adc
imul
jg
xor
dec
jo
adc
push
xchg
pushf
push
adc
or
xor
inc
in
or
jnp
jno
adc
repz
rcl
push
adc
js
mov
mov
dec
insl
adc
imulb
jno
jo
and
in
clc
insb
out
mov
lret
inc
mov
xchg
and
jbe
outsb
rcll
push
ds
in
fs
leave
lds
push
outsl
movsb
cld
out
inc
clc
dec
loope
mov
mov
arpl
xorb
stc
lock
sub
pop
vdivpd
jecxz
mov
out
push
cmpsl
jmp
dec
into
addb
push
mov
outsb
fisubs
test
add
jle
mov
out
fnstsw
test
rclb
cmp
aad
mov
fbstp
sub
mull
daa
push
xor
cmpsl
or
and
inc
mov
sub
outsb
pop
in
pop
pop
outsb
dec
lret
push
aas
sbb
ret
pop
xor
pop
mov
inc
mov
aam
rol
push
add
pop
xor
out
pop
fcoms
and
or
icebp
sub
je
loop
aam
jge
xlat
and
add
pop
mov
xlat
ljmp
pop
cwtl
mov
sub
subb
mov
jb
leave
push
adc
and
nop
cmp
sbb
sub
lock
inc
add
jbe
loopne
cmp
cmpsl
lds
push
fidivrl
lahf
movb
inc
popa
xchg
test
mov
lds
pop
lahf
ja
cmp
fnstsw
jo
fisttps
lcall
push
data16
ret
adc
test
mov
fcompl
cmp
adc
js
call
cmp
push
lahf
lds
or
aad
push
and
adc
jnp
das
cwtl
mov
test
xor
push
and
andb
movsb
push
sub
loopne
test
jbe
test
push
add
out
lods
fstp
lods
das
add
and
and
out
test
mov
push
andl
rcl
lahf
pusha
pusha
test
inc
incl
dec
enter
fdivs
pop
stos
in
in
cmp
popl
push
and
pop
push
mov
test
int3
mov
pop
test
mov
mov
sub
and
stos
rclb
data16
lds
in
inc
xchg
dec
dec
sbb
rorb
mov
shl
mov
hlt
dec
add
sub
lret
dec
rcll
pop
mov
xchg
jmp
lahf
add
push
push
fistpll
popa
mov
sub
cltd
dec
push
jge
adc
dec
scas
jns
and
jle
out
mov
in
push
cld
shl
adc
decb
lods
xchg
mov
push
adc
fcmovnb
notb
adc
pop
cmp
dec
pop
int
rol
lock
aad
push
sub
dec
fsubrl
jnp
inc
mov
leave
jnp
add
test
das
imul
shlb
mov
jp
stos
test
iretw
pop
movsb
je
sarb
aam
in
mov
ds
pop
std
in
in
xchg
popa
imul
pop
cld
les
adc
iret
pop
cmpsb
sbb
inc
pop
shl
add
xchg
xchg
iret
cld
les
adc
shlb
pop
adc
or
mov
and
jb
rorb
lret
xor
in
orb
xchg
mov
inc
sarb
imulb
scas
xchg
add
cmc
idiv
jle
clc
sub
popw
cltd
adc
sub
mov
ljmp
pop
mov
sti
lock
mov
lea
in
lock
test
mov
in
js
scas
ud2
jp
cmp
adcb
pop
insl
repnz
jne
cmp
aas
mov
cmpsl
push
fs
sti
cli
subl
hlt
enter
ljmp
incb
add
add
mov
adc
popa
ret
push
adc
movsl
pop
pop
mov
popa
aam
popf
lods
adc
rcll
inc
push
jbe
push
and
jnp
jle
push
lahf
andl
fdivrl
inc
mov
shll
daa
adc
or
decb
dec
xchg
test
clc
les
adc
shrb
inc
mov
push
adc
addb
or
dec
xor
lahf
push
inc
mov
push
and
sahf
jge
clc
sarl
into
dec
dec
lahf
dec
int3
outsb
testb
rcl
pop
push
jle
sub
ret
or
orl
mov
or
pop
js
ficoml
sub
ds
repnz
aad
push
negb
jp
sub
push
mov
mov
stos
aam
xchg
jb
rorb
and
out
jnp
movsb
shll
sbb
adc
lcall
pop
mov
mov
loope
fdivs
or
stc
mov
shl
outsl
pop
ljmp
pop
push
shlb
dec
ret
xor
cli
pop
stos
pop
incb
sub
xchg
sub
int
inc
jle
faddl
xchg
je
xchg
cs
je
mov
push
stos
adc
in
jp
sbb
pop
pop
xchg
cmp
std
in
dec
loop
mov
jmp
inc
stos
push
test
popa
xchg
arpl
std
arpl
les
std
rcrb
dec
mov
and
stos
dec
xchg
pop
je
outsl
mov
push
push
int
xor
scas
add
scas
xlat
dec
jmp
imul
push
sbb
mov
shlb
mov
jecxz
ljmp
mov
lea
jl
incb
pop
pop
call
push
repz
dec
mov
cmpsb
push
mov
rep
dec
fiaddl
call
sbb
xor
out
outsb
jp
xchg
pop
inc
mov
mov
out
fnstcw
sub
in
adc
ja
loopne
sbb
fsubrs
push
aaa
add
divl
pop
ja
insl
inc
inc
xchg
leave
fsubs
jns
mov
and
xor
in
dec
test
pop
dec
shlb
leave
or
jmp
pop
call
jno
mov
icebp
jae
out
leave
jecxz
pop
mov
inc
mov
mov
out
mov
nop
push
inc
inc
rcll
inc
punpcklwd
fs
cmp
pop
pop
stos
je
mov
xlat
xor
jle
add
fisttpl
clc
je
clc
push
movsl
int3
xorb
negb
gs
gs
leave
dec
dec
mov
adc
mov
out
loopne
lcall
add
inc
mov
imul
mov
pop
pop
sbb
or
mov
mov
inc
mov
push
sbb
or
dec
xchg
lea
test
shl
adc
into
cmc
jns
in
dec
in
lret
adc
sar
xchg
mov
stc
les
xor
aaa
mov
cs
mov
sub
cmp
ss
sbb
in
push
and
mov
sbb
pop
jae
in
fs
je
pop
push
inc
jbe
pop
mov
rcrb
cmp
jnp
icebp
imul
test
push
dec
dec
pop
push
push
mov
mov
rolb
icebp
mov
imul
scas
lds
movsb
aaa
sub
fadd
outsl
push
and
push
test
outsb
int
insl
pop
push
addr16
cmp
mov
aad
arpl
sti
popf
loop
jne
inc
add
xor
and
pop
mov
sub
add
pop
mov
add
jmp
inc
push
leave
pop
xchg
or
test
mov
push
shrb
movsl
loop
movsb
cmpsl
lds
imul
inc
and
push
and
ljmp
rolb
rep
cmp
insl
test
stc
add
adc
arpl
cld
out
in
cs
fdivs
push
sub
push
adc
test
aad
rcl
push
pop
cli
jnp
push
arpl
sub
mov
jmp
add
int
push
shll
inc
mov
push
mov
mov
cmpsl
xor
repnz
scas
aas
mov
jbe
jno
sub
into
inc
jl
movsl
rorl
jg
lahf
aas
or
test
xchg
rcl
push
in
loop
push
into
jb
inc
mov
xchg
push
insb
sub
or
loopne
pushf
inc
jbe
mov
enter
or
movntps
cmp
les
hlt
adcb
enter
mov
aad
cmpb
das
pop
xchg
inc
cli
and
inc
lods
push
addr16
outsl
rcrb
push
adc
in
dec
adc
rcr
rclb
xor
scas
in
outsb
leave
fdivs
addr16
push
add
adc
sub
push
adc
aad
insb
sub
negb
pop
into
jo
scas
mov
dec
or
pop
shrl
mov
ljmp
sub
loopne
and
and
pop
cmc
outsb
out
negb
addr16
sti
add
add
cmp
movsl
popa
push
je
test
cltd
pop
cld
or
lods
arpl
and
inc
mov
rcr
cmpsl
and
sub
jle
pusha
pop
mov
fcmovnbe
sub
adc
mov
les
arpl
test
fisubrl
mov
sbb
and
call
cld
xchg
nop
pushf
sbb
dec
dec
and
adc
aas
ds
inc
cmp
lcall
mov
loop
movsb
imul
cmp
mov
mov
out
cmp
jg
or
ret
pop
xchg
xor
mov
xchg
mov
daa
ss
mov
enter
inc
mov
insb
sub
inc
push
mov
rclb
xlat
ret
stc
add
into
in
jl
into
sti
and
dec
mov
jg
pop
mov
test
dec
jno
dec
sti
mov
mov
mov
cmp
jb
cld
jle
xor
test
add
xchg
or
xor
sbbl
inc
lahf
cwtl
xchg
cltd
testb
movlps
movsl
xor
sub
dec
arpl
cltd
jb
jge
loopne
movsl
push
mov
xchg
cmp
xor
mov
push
mov
push
insb
xor
xor
jnp
cmc
ja
cmp
mov
test
shrb
sbb
scas
lea
xchg
cmpsb
enter
dec
add
shl
sub
lods
adc
enter
lock
sbb
push
add
pop
jmp
add
mov
gs
mov
push
pop
inc
xchg
fs
mov
pop
lock
out
mov
jbe
mov
lock
sub
mov
push
fistl
stos
insl
test
dec
out
inc
clc
push
sbb
mov
dec
movsl
imul
jae
xorl
adc
push
cmp
je
and
sbbb
xchg
imul
lock
pop
and
jp
pop
shrl
jge
add
lods
and
and
adc
test
outsb
fidivrs
hlt
leave
repz
out
push
stc
rcrl
or
in
push
sti
fdivs
mov
test
jecxz
mov
mov
sti
adcb
movsl
sbb
add
in
pop
mov
ja
decl
out
mov
xor
iret
push
adc
mov
cmpsb
insb
movsb
bound
aaa
mov
mov
add
mov
xchg
cmpsb
inc
add
pop
jecxz
daa
daa
push
xor
test
sub
mov
push
cmp
add
sub
andl
ret
imul
dec
int3
push
out
aad
dec
xchg
ret
mov
mov
inc
test
xstore-rng
cmpsl
add
lahf
gs
xor
push
fwait
push
movsl
dec
xchg
pop
fxch
pop
xor
jl
push
arpl
test
xchg
shll
out
test
scas
mov
jae
adc
jne
fdivr
cmpsl
movsl
mov
push
adc
sti
ret
dec
xchg
sarb
jne
sub
and
rcl
ss
mov
cld
mov
popl
cltd
push
inc
sub
push
das
or
incb
mov
lcall
rorl
push
xlat
insb
pop
and
ds
inc
pop
xor
imul
ficompl
rorl
jno
adc
ds
jmp
cs
cmpsl
pop
fwait
adc
test
aam
sub
sbbb
fwait
pusha
out
cmp
sbb
pusha
pushf
rorl
mov
mov
jae
push
scas
sub
push
out
shll
dec
loope
outsl
clc
stc
hlt
out
loope
imul
ret
push
adc
pop
mov
push
lods
mov
mov
hlt
call
jno
adc
mov
inc
add
subl
xchg
xor
in
adc
test
in
pop
movsb
inc
cmp
loop
aad
adc
popf
push
adc
mov
lahf
jp
lret
call
popa
cld
push
or
xor
ja
icebp
lahf
aas
sarl
fldz
repz
cmp
jne
adc
xlat
push
push
fists
or
jo
adc
jae
add
pop
jmp
mov
jg
sbb
sub
pop
mov
test
mov
adc
loopne
test
xchg
fisubl
dec
jle
inc
rolb
loope,pn
dec
mov
jmp
das
mov
jne
adc
push
out
mov
in
sub
sbb
adc
call
mov
or
adc
int3
mov
or
sub
mov
push
addr16
stos
dec
inc
jg
dec
lcall
xor
and
das
add
ret
add
pop
sarl
pop
cli
push
push
fdivrl
cmp
push
fs
andb
fucomp
call
jbe
push
insb
sbb
xchg
jl
mov
adc
es
cmp
sub
in
clc
jmp
daa
sub
mov
xor
adc
dec
inc
jle
sarb
sarl
add
pop
daa
mov
adc
jno
hlt
jp
shr
js
push
adc
fisubrs
push
repz
push
adc
daa
xor
cmp
xor
mov
xor
inc
pop
mov
mov
inc
push
jecxz
jle
adc
ss
ja
push
pop
add
pop
xchg
outsb
push
mov
popf
fmuls
cmp
jge
cltd
sbb
xchg
lret
or
es
lods
mov
cmp
sar
frstor
movsb
int3
vpshad
jl
lods
mov
mov
push
sti
idiv
cmp
scas
aad
mov
out
jne
fisubl
xor
rclb
das
or
dec
rorb
push
shll
jno
test
sbb
mov
stos
push
stos
sub
sub
pusha
mov
push
sti
mov
cmpsl
rorb
sub
pop
jno
adc
pop
gs
xlat
and
rcrb
cmc
adc
mov
rcrb
push
stos
inc
push
or
dec
shr
pop
xchg
sub
movsl
les
adc
cmp
fidivl
adc
push
test
jne
shlb
mov
push
cmpsl
lds
jmp
mov
shll
lods
adc
push
xchg
push
push
xchg
mov
loope
jae
out
push
push
cmpsl
dec
in
les
mov
mov
adc
push
push
dec
dec
xchg
fldenv
pop
mov
sub
cltd
std
ljmp
mov
and
jmp
sub
cmpsl
jecxz
jne
cli
sti
negb
mov
push
pop
ret
enter
movsl
jae
sub
jle
xor
movsl
fadds
adc
scas
pop
adc
shlb
mov
mov
push
pop
and
and
ljmp
add
shrl
lods
pop
mov
mov
popl
lahf
test
outsl
shll
push
stos
push
add
adc
push
adc
sub
mov
mov
imul
dec
or
mov
push
adc
shl
out
fsubs
and
and
mov
xor
sub
or
aam
push
and
sub
repnz
xlat
mov
lods
jmp
xchg
jmp
loop
bound
push
je
pop
movsb
inc
idivb
jecxz
arpl
lcall
jecxz
ror
mov
in
pop
xor
repz
popa
cld
rorb
and
ror
or
popf
inc
push
and
pop
push
stos
mov
test
jmp
sbb
es
sub
jo
adc
ja
adc
sub
or
sbb
mov
add
sbb
inc
push
or
stos
ficomps
inc
js
pop
jno
adc
jo
or
xchg
mov
jl
adc
lahf
xor
cmpsb
lods
mov
push
inc
xor
jmp
jb
pop
add
mov
fcoms
ds
mov
xchg
lahf
push
sti
sbb
in
xchg
sub
dec
ret
pop
gs
fsubr
lret
fdivr
xor
sbb
divb
scas
idivb
xchg
mov
ret
sub
xor
mov
sub
test
repnz
cmpsb
xor
lret
jne
stos
mov
setns
aaa
jmp
jmp
mov
notl
or
mov
or
mov
inc
push
and
jnp
cmpsb
das
outsb
jp
pop
scas
lods
out
ret
xchg
mov
mov
adc
push
adc
cli
sbb
fwait
and
push
test
sub
adc
or
aaa
idivb
mov
ss
mov
jb
cmpsl
pop
lods
ret
jg
fstpl
inc
fwait
movsl
sub
mov
lock
cwtl
dec
mov
pop
dec
idivb
loope
test
cmpsl
cmp
pop
adc
repz
pushf
push
sub
sub
pop
int3
iret
xchg
push
testl
jle
mov
inc
dec
push
xchg
lods
fidivl
mov
mov
ljmp
cs
mov
push
fs
lds
imul
lock
inc
jb
outsb
cmpsl
sbb
lods
leave
and
pop
add
cmp
cmp
cmp
lock
fidivl
scas
cmp
dec
cwtl
inc
jmp
pushf
lock
xlat
adc
jge
adc
dec
or
inc
int
in
shlb
push
and
dec
fadds
pop
add
dec
lahf
stos
jle
push
test
rcl
pop
push
sahf
daa
sub
ret
or
shrb
mov
or
dec
jmp
mov
ja
adc
les
push
notb
and
fs
xchg
fistl
fcoms
pop
rcll
int
pop
shll
push
clc
scas
mov
jo
adc
clc
lahf
mov
push
mov
rolb
sti
xchg
cs
and
scas
push
adc
xchg
sub
sbb
rolb
inc
pop
inc
jb
outsb
scas
and
es
pop
insl
sbbl
dec
jecxz
jge
mov
ficompl
sub
mov
pop
adc
into
cmpsb
jge
lock
repnz
adc
adcb
loop
aaa
mov
fwait
clc
pop
repnz
movsl
dec
sub
daa
cmpb
les
jge
sbb
pop
xor
xchg
scas
mov
mov
shrl
adcb
fwait
jnp
sbb
pop
addl
push
push
sub
sarb
pop
xor
push
pop
sbb
jecxz
shll
and
insl
jnp
lods
xchg
mov
push
lret
dec
xor
ret
das
mov
pop
fistps
mov
lahf
loopne
addb
add
daa
add
das
sahf
call
pop
jmp
lret
inc
sti
jae
dec
xchg
cmp
mov
lret
fdivrl
movsl
xor
lods
mov
cmp
gs
stc
dec
arpl
sbb
inc
pop
or
mov
xor
mov
and
inc
and
cmp
mov
or
and
test
and
mov
in
out
cmp
aas
ljmp
pop
aam
and
and
or
xchg
movsl
popa
jnp
push
sbb
jae
movsb
xchg
in
mov
push
xor
cmp
add
mov
mov
popf
shlb
mov
mov
xchg
pop
cmp
dec
loop
push
repnz
pop
cmp
ds
xchg
cmp
mov
pop
out
dec
insl
fistpl
and
adc
sbb
out
xchg
inc
loop
inc
xor
repnz
ds
adc
sub
jno
ds
cmp
add
jne
jae
cld
int
add
xchg
out
jo
adc
stc
loop
mov
sub
jae
ds
adc
sbb
nop
stos
lock
dec
jmp
icebp
xor
push
push
mov
push
movsl
stos
xor
xor
xchg
cmp
std
sbb
dec
nop
push
gs
enter
sti
mov
test
das
add
sbb
nop
xor
pop
ds
sub
cmp
inc
ror
sub
mov
mov
loopne
inc
push
push
bound
ficoms
xor
movsl
out
add
fmul
lcall
sub
sub
frstor
mov
scas
pop
inc
mov
call
filds
xchg
adc
pop
scas
movaps
and
rcrb
lock
mov
or
test
mov
push
imul
and
mov
push
popf
or
es
inc
jle
lahf
aas
or
nop
pop
lahf
push
mov
stos
and
push
test
movsl
adc
movsb
mov
fistpll
sti
test
mov
clc
cmpsl
dec
insb
adc
cmp
jmp
pop
fimull
lahf
ret
jg
push
subb
pop
push
jo
adc
pop
pop
adc
push
xchg
sub
lahf
adc
push
adc
fnstcw
jne
out
push
stos
push
fs
les
adc
push
cmpsl
ficompl
pop
cltd
ljmp
lahf
sbb
push
adc
pop
popf
mov
fsubrs
push
or
popa
dec
int3
shr
mov
shll
xchg
mov
lret
cmp
mov
pop
cld
sti
xor
rcr
and
adc
imul
push
adc
shr
mov
cmp
mov
mov
pop
mov
inc
movsl
xchg
test
cld
les
adc
jne
add
sub
in
enter
push
pop
movsl
dec
in
test
pop
cli
push
mov
mov
push
adc
das
mov
adc
pop
jbe
sub
adc
scas
push
push
lods
popf
cmpsb
and
push
adc
mov
xor
movsl
cmp
jbe
inc
xchg
cs
mov
xchg
inc
lds
inc
mov
add
lods
shl
inc
lds
adc
xchg
xor
out
cli
push
faddl
subb
push
mov
into
testb
out
xor
movsb
test
mov
lods
fcomps
scas
movsl
test
mov
inc
adc
std
mov
cmp
jbe
adc
sbb
cmpsb
push
inc
jg
jo
adc
int3
push
dec
or
adc
push
adc
mov
xor
mov
std
dec
xor
push
shrb
and
aad
jbe
adc
jge
cmpl
mov
scas
push
lds
outsl
push
push
mov
mov
adc
cwtl
jae
adc
add
cmc
ret
pop
clc
jbe
mov
and
enter
inc
mov
imul
cmp
dec
insl
sub
mov
or
add
pop
xchg
mov
negl
nop
sub
and
adc
outsb
cs
mov
or
jno
adc
mov
loopne
push
jne
mov
xor
ss
jo
xor
rcrb
out
dec
sbb
add
push
adc
pop
js
out
enter
test
fdivs
adc
ret
mov
pop
cmp
ds
jl
insb
mov
mov
imul
fmull
dec
sbb
mov
lret
test
cltd
jl
push
mov
testb
jo
adc
xchg
sub
jo
adc
mov
xor
mov
stc
popa
subl
test
out
jne
movsb
fwait
mov
out
pusha
and
pop
xchg
or
sbb
jnp
cld
dec
ljmp
jb
cmp
adc
sub
or
rorl
xor
aad
lea
and
cmp
test
scas
pop
xor
in
lret
outsb
mov
push
lahf
es
inc
inc
fdivs
adc
leave
fists
inc
clc
fcmovb
pusha
xor
icebp
aam
adc
jp
rcrb
jo
les
ror
mov
and
test
mov
das
adc
pusha
nop
jo
adc
int
jle
mov
jae
adc
xchg
pop
fldcw
pop
sahf
push
adc
aaa
aas
xchg
mov
mov
les
adc
cmp
mov
push
push
cmpsl
dec
lahf
mov
std
adc
push
adc
pop
mov
push
adc
adc
dec
push
sub
rolb
adc
jo
push
adc
mov
push
push
mov
inc
nop
test
inc
mov
scas
pop
push
add
mov
pop
and
sub
test
or
dec
scas
jae
mov
adc
stos
push
xchg
or
dec
pmulhuw
cmp
xor
rolb
stos
xchg
cs
jmp
int3
sub
and
jp
lods
aad
mov
mulb
mov
negb
jne
aam
push
push
add
lods
sub
sub
test
mov
inc
or
add
in
nop
stos
xchg
cs
sarb
xorb
push
rcrb
jmp
filds
imul
inc
xor
daa
dec
xchg
rorl
sub
push
adc
mov
adc
andb
fs
rolb
push
adc
adc
push
adc
xlat
xor
aam
pop
loopne
aas
aam
or
shr
pop
jno
aad
cmp
push
mov
jb
adc
outsl
sub
xor
push
adc
cmp
jo
adc
mov
mov
loopne
push
insb
push
xor
sti
jl
ficompl
jo
adc
les
adc
fwait
sub
call
push
movsl
xchg
sub
sub
push
adc
pushf
inc
jg
cmp
xor
hlt
ret
mov
shrb
adc
test
adc
xlat
out
mov
out
xor
sub
add
push
adc
jg
ljmp
xchg
inc
jle
dec
jnp
jo
adc
xchg
andl
test
decb
movsb
pop
mov
adc
call
jne
dec
and
xchg
pop
mov
scas
in
adcb
ss
sbb
add
xchg
adc
pusha
and
int
repz
in
repz
rcll
insb
jne
sub
add
adc
add
insb
sbb
data16
jno
adc
push
leave
mov
pop
inc
cmp
mov
test
push
adc
jl
mov
outsb
cwtl
jo
adc
rcrb
cmp
out
fld
jo
adc
add
repz
pop
adc
pop
push
pop
sub
out
xchg
shll
ja
sbb
sub
lock
mov
xchg
mov
mov
jmp
movsb
ret
inc
cmp
lds
sub
jno
adc
int
jo
dec
repnz
add
pop
fcmovnbe
int
imul
push
adc
pusha
adc
push
adc
xchg
mov
mov
out
mov
fwait
push
adc
nop
cmc
test
jo
adc
in
shr
fwait
sub
lock
jge
jo
adc
push
inc
out
ficoms
mov
inc
insl
fistpll
sub
jo
adc
mov
dec
js
cld
jp
rorl
inc
movb
incl
push
outsl
cmp
pop
adc
enter
push
adc
cwtl
jae
adc
stos
out
pop
inc
mov
in
pop
movsl
pop
mov
and
xor
push
cmp
pop
adc
xor
pusha
jno
adc
aas
pusha
cmp
jo
add
sbb
mov
jo
adc
dec
jmp
popf
or
xor
mov
push
push
jge
in
push
adc
stos
aad
movsl
xchg
and
fisubs
test
adc
fidivs
ljmp
adc
push
adc
arpl
inc
add
add
jp
mov
pusha
inc
jae
adc
in
push
adc
rclb
adc
sbb
jae
adc
pop
insl
mov
je
push
jae
adc
push
cmp
pop
cltd
mov
mov
sub
push
mov
push
lods
in
cmpsl
add
mov
pop
jns
add
add
shlb
fsubr
cmp
push
adc
jle
inc
add
ja
mov
jo
adc
aas
mov
jecxz
test
aam
push
adc
sbb
jno
adc
scas
les
adc
in
pop
dec
inc
mov
xor
divl
lret
arpl
dec
push
decl
adc
bound
mov
fdivrs
aad
jo
adc
std
push
push
outsb
sahf
shl
jmp
stos
cmp
mov
pop
mov
lock
test
filds
rcl
daa
lods
adc
push
lods
icebp
enter
movsl
dec
cmp
rcl
push
subb
push
adc
adc
aam
mov
mov
mov
cmp
mov
sbb
imul
jmp
test
in
mov
jmp
push
loope
in
dec
xchg
ja
xor
push
scas
cltd
mov
and
pop
sub
jmp
mov
sbb
mov
scas
pop
adc
bound
cli
xchg
sub
jbe
dec
push
sar
hlt
out
sbb
inc
cli
lods
daa
clc
mov
rorb
cwtl
cmp
xor
push
lds
mov
pop
scas
test
adc
mov
or
fistpl
adc
adc
mov
adc
into
movsl
push
mov
hlt
out
mov
pop
jne
xchg
pop
cwtl
mov
mov
jmp
inc
cs
pop
xchg
xor
imul
mov
sub
push
adc
repz
jbe
sub
leave
js
lock
pop
hlt
lods
mov
xchg
adc
push
adc
and
idivb
test
sbb
inc
ja
std
push
cmp
daa
mov
jno
xor
inc
jg
dec
dec
negb
mov
adc
rcrb
rorl
xor
pusha
push
xchg
xchg
mov
sbb
cmpsb
dec
inc
pop
roll
inc
adc
cmp
dec
sbb
adc
cmp
adc
jnp
xchg
xchg
pop
mov
cmc
out
mov
sarl
and
jo
adc
add
push
adc
lods
jne
jno
xchg
stos
jl
jnp
dec
testb
jno
adc
jmp
push
outsl
call
dec
lock
jmp
jmp
std
idiv
cmp
iret
leave
or
jns
cmp
pop
dec
stos
dec
ljmp
cwtl
addl
outsl
movsl
lret
or
push
lods
push
and
pop
and
pusha
testb
mov
mov
cld
std
loop
jmp
jb
mov
xchg
adc
jo
adc
jno
imul
fwait
es
pop
rcr
mov
mov
jae
mov
mov
adc
lods
outsl
test
push
fsubl
dec
stc
in
int3
inc
int3
int
in
mov
jae
out
pushf
insb
xchg
aad
test
popl
push
adc
test
add
adc
out
das
adc
rorl
push
scas
in
adc
xchg
add
jo
adc
pop
rcl
popf
push
adc
sub
inc
rorb
jo
adc
cmc
test
adc
jno
adc
push
stos
push
mov
pop
xor
jo
adc
cli
add
mov
pusha
sub
push
adc
push
jge
pop
sub
jmp
pop
or
jne
push
adc
es
dec
mov
lods
xor
adc
insl
mov
mov
test
test
dec
and
sub
jmp
addl
mov
sub
sub
rorb
xlat
xor
lods
pop
loopne
mov
std
adc
jo
adc
mov
push
adc
adc
jbe
sahf
mov
mov
and
pop
popa
rolb
and
push
adc
outsl
cmp
push
cwtl
jo
adc
subb
add
inc
ficompl
jno
adc
cli
mov
mov
lahf
jo
cmp
push
pop
repz
test
mov
sbb
jge
jmp
push
test
repnz
dec
push
lods
push
mov
push
dec
shlb
adc
jno
in
repz
ljmp
push
push
inc
sub
push
adc
lods
push
xor
rolb
dec
xchg
jle
mov
aad
mov
push
xchg
sub
imul
jle
rcrb
or
sbb
test
dec
jae
adc
out
push
mov
sahf
cmp
lds
sbb
das
pop
cmp
rol
adc
push
adc
in
pop
mov
push
stos
pop
mov
xchg
shr
stc
repz
fadd
adc
pop
mov
adc
jmp
xor
adc
sub
lcall
and
add
scas
push
xlat
arpl
data16
mov
lods
insb
xchg
mov
test
popf
and
les
and
cmpsl
sub
fsubrs
add
dec
stc
push
cwtl
xor
incb
pusha
decl
jl
ss
mov
add
enter
sbb
and
pop
jmp
roll
cmpb
and
icebp
add
mov
mov
or
push
adc
rclb
push
lds
adc
jno
adc
mov
mov
sbb
daa
mov
pop
or
negl
dec
incb
adc
enter
int
jle
inc
lock
add
sti
push
push
mov
adc
fs
add
pop
insl
add
das
loope
inc
insb
test
add
sub
xchg
ds
inc
xchg
lock
mov
mov
icebp
fildl
and
imul
int
adc
lock
mov
jp
pusha
jno
adc
adc
sub
sub
stos
popf
scas
xchg
loopne
pop
aaa
test
mov
loopne
jo
adc
push
adc
es
inc
aad
lret
fdivs
adc
and
lcall
enter
adc
dec
sub
les
adc
pop
test
ret
fadds
adc
dec
test
mov
andl
shrl
mov
and
mov
push
ror
pushf
fmull
mov
stos
pop
mov
adc
leave
shlb
out
xchg
decb
adc
bound
pusha
cmp
adc
aam
lds
xchg
lret
inc
cmp
das
rcl
xlat
cs
fidivrl
aaa
or
jmp
ficompl
jb
adc
xor
and
fsub
vhaddps
xlat
lock
jmp
jbe
popa
push
and
xchg
mov
aad
stos
fstp
icebp
mov
rcrl
sahf
push
adc
push
adc
shll
cli
stos
mov
xchg
in
cs
dec
pop
sahf
push
adc
stc
sub
xchg
jge
scas
mov
push
inc
les
adc
xor
pop
stc
les
mov
jns
scas
xor
push
adc
jecxz
fwait
push
adc
iret
add
dec
jo
push
adc
mov
cmc
int3
into
mov
mov
push
mov
sbb
insb
inc
mov
sbb
mov
cmc
int3
into
adc
xchg
dec
mov
jo
and
gs
aad
sub
pop
es
mov
sub
sub
lds
xlat
and
mov
lods
push
fsub
int
xchg
sahf
pop
mov
pop
and
push
ret
mov
daa
dec
xchg
push
pop
mov
test
mov
pop
mov
stos
push
in
pusha
rolb
rorb
inc
add
add
sub
das
pop
mov
cmpl
lahf
ficoms
sahf
push
adc
xor
and
push
push
inc
inc
jae
adc
push
xor
jne
test
aaa
jle
inc
and
push
gs
das
pop
mov
mov
ds
fdivs
adc
loop
or
mov
mov
pop
push
les
adc
out
pop
lods
pop
mov
cmp
andb
mov
mov
lods
mov
jo
adc
cmp
and
pop
mov
sbbb
jmp
adc
lods
mov
add
mov
sub
lock
jecxz
ja
addl
aas
mov
loopne
xchg
test
aam
push
adc
mov
pop
mov
imul
pusha
jno
adc
aas
out
mov
adc
hlt
sar
scas
hlt
jo
adc
mov
mov
jmp
cmp
xorl
mov
push
adc
adc
or
push
adc
pop
and
icebp
iret
mov
sbb
pushf
dec
jae
adc
sarb
mov
sub
dec
mov
lock
ficoml
add
scas
int3
jb
mov
rorb
lock
mov
mov
mov
ret
nop
cmp
cmp
lret
inc
arpl
mov
insl
imul
push
add
leave
outsb
icebp
cmp
add
or
push
adc
mov
lea
and
jge
and
cmc
pusha
xorb
cmpsl
jecxz
repnz
in
pop
inc
mov
sarl
out
dec
mov
fadd
inc
adc
sahf
and
mov
loope
aad
cmp
push
mov
sbb
adc
add
push
adc
or
sub
cmp
push
adc
pusha
cmp
out
lock
push
adc
inc
fldl
call
push
adc
xor
sbb
pop
sub
sub
sbb
cmp
xchg
enter
mov
in
or
adc
insl
xor
lods
push
cmp
andl
fcmovnu
addb
mov
movl
mov
in
inc
aad
in
repnz
mov
loope
jge
dec
lret
cld
les
loope
cwtl
jo
adc
fidivl
pop
adc
nop
jo
adc
insb
lock
ljmp
inc
mov
in
pop
adc
push
adc
shr
pop
adc
jno
adc
movsl
out
mov
mov
rcl
in
lock
fcmovb
adc
sbb
pop
inc
scas
pop
sbb
mov
shlb
adc
push
adc
push
xlat
stos
push
sub
sub
mov
in
call
btr
or
ret
push
mov
push
pop
push
nop
cmpsl
movsl
dec
jo
adc
xchg
cs
xor
into
int
adc
insl
pop
mov
xchg
or
in
lds
and
mov
mov
rorb
pop
mov
and
xchg
pop
ret
push
loope
fdivs
jbe
lret
push
lods
shll
sub
nop
pop
mov
nop
jle
or
cs
inc
xor
cmc
ret
push
mov
push
adc
stos
mov
sbb
or
and
mov
aad
add
out
inc
mov
lods
or
pop
addl
int
insl
lret
sub
sbb
mov
push
sub
adc
pop
jmp
xchg
ss
inc
xchg
cs
add
pop
jo,pn
push
mov
jle
imul
adc
adc
pop
ljmp
push
repnz
gs
shlb
jge
pusha
roll
sbb
stos
js
jne
aam
stos
mov
pushf
les
push
mov
push
adc
push
adc
sahf
sbb
xlat
clc
test
push
adc
ljmp
std
test
add
es
mov
lea
fs
sub
xchg
add
adc
adcb
clc
int3
sbb
outsl
mov
loopne
pop
mov
or
push
adc
or
leave
orl
ror
sub
fistpll
stos
sub
adc
mov
cmp
lahf
sbb
iret
mov
in
pop
adc
in
mov
mov
popf
adcb
inc
push
mov
addr16
mov
lock
fildl
cmpsl
call
adc
ret
sbb
or
add
in
loopne
popf
push
adc
inc
js
jo
fsubs
pop
xor
push
adc
clc
xchg
fimull
es
out
fstps
jo
adc
icebp
psllq
sti
test
jo
sbb
push
aas
mov
dec
dec
out
pop
mov
adc
dec
dec
outsb
pop
ret
ret
mov
jae
adc
sub
jnp
stos
add
jno
sbb
sub
or
loope
xchg
rcrl
mov
mov
jae
mov
mov
sbb
xor
push
lret
add
and
cwtl
mov
cmpl
aaa
xrelease
or
push
adc
dec
out
jecxz
mov
sub
mov
xchg
rolb
or
sub
fisubrs
test
and
xchg
push
aad
sarb
cld
cmpsl
adc
movsl
inc
add
test
sub
push
and
cli
jle
mov
lcall
dec
int
push
mov
and
sbb
mov
mov
mov
and
push
adc
mov
out
ss
pushf
enter
push
adc
aas
test
sahf
inc
jo
adc
ljmp
shlb
shrl
xor
inc
add
jno
movsl
lret
pop
push
enter
adc
cmp
push
iret
les
adc
jbe
or
rcl
sarb
mov
ljmp
push
add
or
push
ret
dec
adc
pop
in
push
inc
push
adc
fucomp
inc
add
xchg
sub
mov
les
fnsave
inc
push
sub
pop
push
inc
inc
incl
adc
xor
pop
adc
cli
cli
imul
jne
adcb
dec
and
test
push
mov
dec
cmp
loope
mov
xchg
out
stos
jne
adc
sub
scas
push
jnp
rorl
dec
je
or
mov
mov
push
shlb
std
mov
dec
adc
xor
or
sti
mov
cmpsl
ret
les
jp
lcall
mov
into
push
dec
cmpsb
cltd
out
test
mov
clc
jo
adc
out
sub
and
hlt
jo
adc
aam
push
adc
dec
mov
incl
adc
pop
inc
jb
sbb
pop
adc
ljmp
push
adc
adc
cld
jecxz
adc
mov
mov
cmpb
sub
push
adc
out
add
cmpsl
in
cmc
call
adc
pmaxsw
jo
or
rorb
lcall
aaa
test
lds
adc
and
push
adc
push
test
cmc
pop
adc
xor
or
out
inc
add
adc
adc
inc
scas
call
jo
adc
sarb
adc
test
push
adc
lds
adc
test
jno
adc
cmp
js
dec
mov
inc
je
arpl
add
jl
imul
lock
or
sbb
in
stos
shrb
mov
cmp
sbbb
cmp
lods
cmp
pop
add
js
cmp
das
pop
inc
js
push
adc
mov
fcompl
stos
cmpsl
pop
mov
adc
pop
subl
inc
or
lea
test
mov
mov
xor
ret
pop
sub
and
mov
sbb
incb
xchg
pop
into
lods
pop
xor
push
leave
imul
or
scas
cmp
std
add
jle
adc
in
pushf
addb
sbb
insl
sub
and
dec
jne
call
loopne
mov
xchg
adc
cmc
pop
adc
jno
adc
xchg
cmp
or
testl
insl
jecxz
clc
mov
out
dec
mov
leave
shlb
jb
rcr
imul
test
and
and
xchg
cltd
and
push
int3
mov
loop
inc
xchg
mov
mov
aad
sub
mov
and
ljmp
or
mov
jge
stos
xor
jno
adc
dec
andb
jo
adc
push
add
outsl
xor
or
pop
push
xchg
xor
sub
aam
fwait
push
adc
adc
nop
fwait
push
adc
sub
jo
adc
aam
push
lret
test
jo
adc
mov
movsl
in
and
shlb
nop
jo
adc
add
inc
aaa
push
lock
jp
mov
daa
movsl
notb
push
mov
push
ror
or
jmp
enter
repnz
mov
sbb
pushf
cs
arpl
push
into
xchg
addr16
push
adc
out
les
out
mov
nop
push
ret
stos
sub
mov
sub
pop
enter
outsl
xor
cs
js
push
movsb
cmp
mov
sti
subb
test
push
adc
clc
jo
adc
out
out
adcl
mov
xor
push
adc
out
stos
push
scas
das
rol
shlb
jno
adc
in
fcmove
push
and
or
ljmp
mov
mov
lock
adc
or
push
stos
clc
bound
fadds
mov
sbb
lods
shll
aas
lret
ret
mov
stos
push
scas
cltd
ror
shlb
cltd
push
fs
add
cli
imul
lea
adc
mov
dec
je
and
lods
add
in
hlt
xor
push
arpl
stos
push
scas
pop
lock
shlb
pop
mov
clc
jg
sti
jl
cmpsb
push
imul
aas
dec
adc
push
mov
je
jns
dec
xchg
cmp
jle,pt
out
add
sarb
nop
js
scas
lock
adc
in
pop
scas
test
mov
jmp
jecxz
jge
aaa
notb
pop
mov
push
test
cmc
enter
movsl
dec
cmp
xor
mov
inc
inc
push
lea
aaa
mov
push
and
push
cmp
mov
add
std
jno
lahf
pusha
lret
rorl
jo
adc
shl
scas
pop
mov
lds
inc
push
in
jg
sti
pop
cli
sub
xchg
cs
inc
clc
scas
push
cli
mov
fildl
pop
je
cs
mov
mov
jg
push
lock
stos
shrb
imul
push
adc
outsb
sar
xchg
out
add
clc
repnz
std
les
adc
and
mov
cmp
test
sahf
dec
push
mov
jp
scas
push
shll
mov
call
cmpsb
add
iret
or
or
pushf
and
mov
mov
movsb
pop
mov
push
adc
inc
pop
and
xchg
inc
inc
jecxz
adc
jge
nop
jo
adc
mov
sahf
add
cmc
sub
call
icebp
adc
dec
jle
ljmp
jle
in
push
adc
pop
mov
mov
pushf
jo
adc
hlt
stc
hlt
jo
adc
cmp
inc
mov
sub
push
adc
jno
adc
lahf
mov
aad
add
jno
adc
inc
fcomps
jmp
sbb
psrlq
cmpl
ficompl
add
addl
pop
or
les
adc
sti
les
adc
cld
jb
mov
loop
ljmp
pop
or
pop
cltd
add
and
insl
stos
outsl
pop
or
adc
insb
pop
push
test
dec
jcxz
dec
icebp
xchg
jbe
data16
shll
outsl
jg
dec
jl
push
adc
fisubs
pop
mov
jae
imul
shll
icebp
xchg
enter
das
clc
std
sub
mov
inc
out
xchg
cmp
push
outsl
dec
flds
mov
jle
mov
repz
movsl
imul
and
pop
pop
lods
arpl
cltd
imul
test
xchg
dec
inc
push
and
xchg
cmp
repz
dec
mov
mov
push
mov
pop
cli
xchg
ds
ret
add
xlat
stos
adc
shlb
cs
inc
push
into
andl
mov
dec
test
jmp
sub
xor
mov
aam
sbb
fsubrl
or
mov
cmp
cmp
lods
xor
fldt
push
lods
pop
cmp
push
dec
scas
push
xchg
xor
into
popf
fiadds
add
addr16
dec
jmp
jl
out
rorl
push
xchg
xor
sar
test
xchg
inc
fucomp
pop
jle
xchg
mov
push
addl
int
es
leave
in
or
or
stos
fcompl
pushl
cmp
lods
stos
adc
rcrb
or
repnz
or
mov
xchg
push
popf
dec
popf
in
fsts
inc
aaa
dec
call
pop
cli
mov
push
jns
push
int3
pop
test
in
scas
push
sub
cltd
mov
cmpsb
js
in
mov
mov
push
sub
mov
popf
jmp
jbe
pop
pop
push
les
cmp
xor
and
leave
push
stos
push
rol
dec
mov
mov
aas
rorb
xchg
add
orb
stos
or
xchg
dec
xchg
repnz
cmpsl
dec
lahf
inc
insl
sub
enter
cld
outsl
jno
push
test
daa
std
mov
sub
cli
movswl
lret
addl
sbbb
jno
outsb
sub
int3
xchg
jmp
adc
addb
pop
lahf
pusha
mov
ljmp
mov
dec
push
sub
mov
sti
pushf
dec
xchg
cs
add
push
push
scas
rorl
mov
sub
push
dec
pop
jae
adc
cltd
mov
imul
or
push
pop
push
mov
adc
pop
scas
fmuls
lds
int3
sub
mov
mov
inc
or
shlb
shll
lret
aad
dec
cmp
leave
push
mov
push
mov
movsl
dec
loop
xchg
scas
mov
add
xor
mov
push
lods
lods
decl
dec
shlb
mov
pop
cld
or
repz
mov
jo
adc
jno
stos
insb
mov
and
mov
push
jle
mov
jno
pop
cmp
mov
xorl
cmpsb
and
cmp
cmp
rcll
sub
cmp
cli
push
out
and
push
pop
iret
outsb
or
push
adc
xchg
or
fldl
xchg
push
adc
xchg
xor
mov
xor
std
add
cmovl
cmp
or
cmp
jb
jmp
fwait
mov
cwtl
jo
adc
fimuls
sbb
mov
or
out
add
ja
test
add
sbb
jmp
xchg
adc
dec
jnp
add
ljmp
in
adc
xor
pop
push
or
xchg
imul
mov
sbb
mov
sub
fwait
mov
sarl
add
lea
jae
adc
mov
test
or
mov
jle
cmp
cli
and
cmpsl
push
insl
sbb
or
outsb
lods
jmp
nop
fsubrl
pop
in
and
sbb
sbb
jp
xor
insb
push
mov
or
js
aad
cmp
inc
xor
cld
fldln2
mov
sub
jecxz
xchg
pop
adc
and
inc
mov
pop
push
enter
and
mov
ss
add
pop
jbe
sbb
aad
int3
into
sarl
enter
test
outsl
mov
fucomi
jb
adc
aas
mov
xchg
jge
ljmp
dec
das
fidivrl
cmp
cmpsl
sbb
push
adc
cltd
rol
jp
testb
loop
add
lock
jb
out
stos
pop
lods
inc
and
or
es
xor
mov
rorb
pop
lahf
pusha
iret
jge
psubsw
aad
mov
add
test
mov
mov
ret
addb
mulb
shlb
xlat
stos
xor
hlt
sub
mov
sub
ja
fwait
aaa
dec
mov
test
pop
jle
insl
es
and
push
enter
or
cmpl
mov
add
xchg
push
addr16
adc
mov
sub
movsb
or
jecxz
andl
push
inc
icebp
lods
cmpsl
xchg
add
mov
scas
xchg
and
into
dec
jo
imul
pop
loope
fwait
mov
jge
lods
rclb
iret
icebp
adc
in
jb
adc
ds
ret
aas
hlt
xchg
sbb
jae
adc
aad
xchg
testb
pop
add
lods
pop
jns
enter
gs
jnp
pop
mov
pop
adc
hlt
adc
fwait
jge
dec
xchg
pop
jmp
jle
jl
push
nop
lods
fstl
and
aad
cmp
icebp
push
adc
mov
mov
push
fnsave
cltd
mov
adc
inc
mov
adc
inc
fdivrs
icebp
push
adc
mov
add
or
pop
inc
xor
push
scas
xlat
and
push
and
pop
sti
imul
jne
loop
mov
adc
adc
sub
loopne
popf
stc
std
adc
pop
mov
push
test
sub
or
mov
push
cmpsb
xor
mov
nop
in
adc
insb
stos
fisubrs
xlat
iret
cmovae
movsb
dec
push
mov
rol
dec
pop
mov
xor
mov
and
xchg
jg
dec
xchg
pop
mov
aad
ljmp
and
rcll
and
cwtl
lods
cmovg
pop
iret
je
push
call
cmpsl
shl
sbbb
test
daa
xorps
and
pop
and
outsl
stc
das
jnp
mov
cmp
aas
inc
adc
lods
and
arpl
add
fs
outsl
mov
mov
aam
xchg
add
adc
lret
enter
adc
xchg
mov
mov
push
adc
roll
aam
push
hlt
adc
int
aam
cmp
lcall
ja
lds
lods
arpl
add
out
add
insl
out
mov
movsb
push
mov
or
sbb
or
push
adc
cmpl
mov
jg
jo
lcall
pushf
iret
adcb
dec
sbb
jo
adc
push
adc
sbb
sbb
enter
mov
inc
adc
mov
lcall
insl
mov
addl
cwtl
push
mov
add
pop
lcall
mov
and
dec
inc
scas
or
push
adc
ja
pop
jmp
xchg
into
cwtl
jle
in
cld
pushf
dec
inc
call
aam
lahf
mov
and
fs
and
add
flds
mov
hlt
ja
push
adc
pop
mov
nop
scas
push
movsl
ss
add
sbb
cmc
sbb
xchg
xor
mov
sbb
mov
fadds
adc
sub
pmaxub
jns
cli
mov
lret
mov
dec
dec
imul
movsl
pop
and
mov
sub
xchg
test
and
arpl
loope
pop
pop
cs
incb
shrl
jge
cltd
insl
rol
call
xchg
stos
aad
in
pop
sbb
pop
xchg
and
mov
sbb
pop
dec
push
dec
adc
push
push
fldl
mov
in
push
cmp
lahf
fadd
push
and
adc
mov
and
adc
cmpsb
pushf
jmp
andb
fisubl
pop
and
adc
movsb
mov
sub
je
stos
push
add
test
xchg
fcoms
jg
sbb
push
push
orl
fistpl
sub
out
insl
mov
fmuls
push
aas
hlt
adc
dec
lret
fidivl
lret
stos
push
daa
test
push
and
push
push
lods
xor
mov
aas
cmc
in
fcmove
push
cmpsl
sbb
xlat
outsl
push
cltd
xchg
lock
mov
push
sti
jp
int
insb
shll
out
pop
testl
sub
daa
add
add
lret
jl
jge
cmp
rcrl
xchg
roll
xor
mulb
ds
loope
mov
and
jnp
in
loopne
cltd
dec
lahf
aas
add
lea
data16
mov
and
mov
adc
and
mov
jns
adc
std
mov
push
stos
push
fsub
dec
add
add
push
mov
dec
insl
push
push
pop
cltd
js
movsb
out
arpl
loopne
std
push
scas
rorl
mov
sub
adc
dec
pusha
inc
push
scas
push
adcl
ljmp
push
jnp
mov
cmp
imul
xchg
fstpt
subb
bound
scas
lods
outsb
rcl
xor
loope
xchg
jne
sti
mov
hlt
xlat
frstor
nop
mov
add
cmpsl
mov
ss
test
xchg
pop
push
jmp
adc
stos
mov
mov
inc
aaa
je
xor
insb
aas
mov
adcb
mov
adc
cmp
fs
jne
xchg
cmp
mov
lea
sahf
cld
dec
imul
iret
cmpsb
inc
pop
and
adc
pushf
int
jmp
xchg
add
lods
xchg
cmp
xor
fstps
pop
jg
imul
mov
ss
mov
aad
fdivrs
jecxz
or
out
lds
cmp
or
jo
jno
in
sbb
xlat
idivb
fcom
dec
xchg
or
inc
and
mov
bndstx
movsb
cmp
stc
sbb
pop
aas
xor
in
lods
shl
or
pusha
xchg
repnz
repnz
fwait
gs
jge
ret
aaa
sbb
testl
jns
ret
subl
or
dec
jae
add
push
mov
rep
ss
cwtl
popf
xlat
inc
stos
rorl
popl
mov
pop
and
sbb
pop
cmp
lods
mov
lods
fwait
mov
xchg
xchg
ds
push
inc
adc
lret
sbb
xchg
movsl
sub
imul
loop
andb
aam
rcrb
aas
mov
shl
xchg
and
mov
in
pop
lods
adc
shlb
push
cld
jnp
xchg
adc
xchg
mov
hlt
jns
loopne
xor
push
hlt
xor
roll
cmp
mov
int3
dec
js
push
adc
je
je
adc
repnz
push
push
or
dec
aas
jle
inc
repz
cmpsb
leave
xor
je
mov
lea
jp
adc
loopne
push
adc
xchg
shrb
add
mov
push
rorl
jge
jg
add
sbb
jno
in
leave
xchg
lods
mov
dec
adc
xchg
mov
add
jg
scas
inc
mov
cmpsb
fldcw
sub
push
sub
push
adc
or
jp
stc
pop
cmpsl
rcr
adc
inc
bound
adc
cltd
inc
or
mov
popf
into
jae
add
pop
xor
arpl
sub
sti
not
sub
push
stos
pop
sub
out
sub
mov
mov
xlat
daa
pop
cmp
les
add
fisubs
jge
mov
and
rcl
sti
outsl
pop
lods
sahf
xor
rolb
or
popa
fsubl
sbb
mov
or
lcall
iret
push
lea
aam
jp
movsl
pop
xor
test
stos
int3
ret
cmp
imul
jnp
sti
negb
fwait
cli
and
pop
stos
fucomp
push
sub
cmpsb
push
cmp
fisubrs
ds
in
fidivrl
imul
scas
mov
scas
xlat
dec
arpl
shlb
xchg
jae
rcrb
or
loopne
fdivs
adc
scas
xlat
push
je
and
cmpsl
dec
lahf
dec
les
insl
leave
sbb
dec
xchg
lods
cltd
stos
jbe
xchg
movsb
push
test
dec
xchg
push
inc
inc
mov
shlb
enter
sbb
jo
adc
sarl
mov
or
loopne
jnp
add
or
sbb
push
adc
sub
or
pop
push
mov
mov
cld
jo
in
xor
push
adc
sub
leave
iret
lahf
jl
icebp
out
clc
or
xor
jmp
jne
adc
xchg
sub
xor
fs
shrb
ret
movsb
mov
shl
loope
or
pop
inc
jbe
insl
pop
aam
gs
push
adc
lods
pushf
mov
and
rcr
pop
adc
and
arpl
les
cmp
pusha
mov
mov
movsl
push
mov
loop
inc
inc
adc
inc
pop
sub
push
adc
fs
clc
and
and
imul
inc
loop
test
mov
fwait
dec
jmp
jmp
and
lock
adc
pop
sar
hlt
jb
pushf
sbb
adc
sahf
sub
jno
push
xlat
imul
xlat
lahf
sbb
pop
repnz
add
push
lock
lock
js
push
movsl
cmc
push
mov
cli
adc
daa
push
in
jno
adc
insl
std
iret
mov
imul
dec
or
adc
sbbl
cltd
fstps
addr16
stc
fwait
adc
or
adc
mov
and
scas
cmp
add
push
adc
gs
les
adc
inc
push
mov
sub
jg
in
cmp
pusha
ds
adc
inc
lds
dec
mov
adc
pop
xchg
mov
cli
sbb
test
leave
push
mov
mov
pop
adc
das
add
aad
mov
push
cmc
in
outsb
test
and
jmp
xchg
add
xor
pop
adc
dec
sbb
js
js
outsb
aam
outsl
add
or
mov
es
xchg
push
inc
dec
jo
adc
cmp
aas
pop
loopne
fnstsw
cmp
adc
pop
test
and
push
adc
adc
es
sbb
in
mov
adc
adc
lods
and
mov
push
or
inc
xor
xchg
or
adc
cmp
inc
stos
mov
lea
push
adc
inc
shl
mov
stos
sar
xchg
push
xlat
push
rcrb
or
les
cmp
push
or
and
and
dec
jp
push
adc
out
or
enter
aaa
test
cmc
pop
adc
lods
push
call
stos
bound
push
xchg
or
add
dec
sti
arpl
jae
sbb
jl
push
aam
adc
lods
pop
adc
pop
mov
cmp
adc
sbb
in
sbb
ret
das
mov
pop
mov
xchg
fdivs
adc
aas
cltd
jns
scas
lock
adc
push
inc
les
adc
mov
fwait
js
dec
idivb
dec
inc
ret
pop
mov
or
fiadds
fucomip
or
cmp
lahf
aas
or
fs
adc
sub
pop
adc
adc
push
test
mov
stos
xor
xorb
xchg
pop
push
push
fcoms
or
mov
mov
pop
push
dec
jle
jo
adc
cmp
dec
xchg
inc
pop
push
mov
sub
test
mov
faddl
adc
push
arpl
xlat
std
adc
jo
adc
sub
adc
pop
adc
adc
adc
aaa
xchg
jle
inc
jno
adc
jns
adc
xchg
push
or
arpl
mov
ficomps
js
mov
mov
in
inc
into
mov
stos
ds
push
dec
les
jno
and
mov
pop
sub
pop
daa
mov
mov
push
jle
mov
or
popl
push
addl
sub
jg
push
mov
sub
arpl
cwtl
push
mov
and
push
sub
mov
mov
sub
int
sbb
out
xchg
das
sahf
cmp
lahf
inc
push
sub
cmpl
sbb
push
jb
aas
xlat
lret
dec
sbb
xchg
mov
sub
lret
pop
rolb
xor
fstpl
jbe
jg
push
shrl
sub
pop
or
iret
mov
and
sbb
bound
hlt
test
mov
jecxz
sarb
or
add
add
cwtl
mov
push
sub
pop
sbb
add
std
inc
test
add
adc
sbb
sbb
add
cmp
dec
repnz
xchg
inc
test
dec
sahf
test
push
pop
xor
out
mov
push
sub
or
or
adc
cmc
les
or
xlat
add
cli
pop
xchg
jbe
je
fstpt
je
pushf
into
mov
insl
mov
jno
clc
cmp
xchg
mov
leave
add
mov
adc
sysenter
sahf
enter
mov
popa
xchg
ja
jne
lea
leave
sbb
iret
cli
xchg
jmp
pop
addr16
inc
in
dec
repnz
mov
sbb
and
jmp
or
and
push
jo
cmpsl
pop
push
or
push
push
add
aaa
rcrb
rol
inc
and
pop
xchg
outsl
pop
inc
sbb
jns
cld
jp
or
mov
imul
in
pop
pop
lcall
or
jmp
inc
mov
xchg
fstpl
shll
jne
in
stos
adc
push
add
loop
insb
adc
push
mov
pop
cmc
subb
arpl
leave
out
pop
fs
xorl
dec
aad
loope
pusha
ret
mov
in
and
jmp
lret
lret
bound
enter
jo,pt
and
rorb
scas
fidivl
dec
adc
imul
inc
mov
push
lret
mov
adc
pop
mov
aad
ror
insb
dec
repnz
xchg
cs
inc
rorb
push
stos
inc
xor
inc
mov
pop
fildll
mulb
mov
dec
lret
enter
sub
pop
mov
fucom
inc
icebp
jle
gs
lock
xor
ret
mov
popf
dec
mov
adc
dec
push
mov
push
or
fxch
addl
jmp
adcb
mov
movsb
scas
rorl
adc
dec
push
movsb
shr
push
imul
jne
dec
jge
iret
jge
aaa
inc
stos
push
shlb
pusha
and
imul
xchg
stos
cld
push
loope
shll
test
pop
cmc
lods
outsb
in
movsl
cmp
xor
dec
xor
jbe
push
loope
iret
mov
lods
cltd
xchg
cmpsl
and
frstor
popf
pusha
mov
inc
scas
scas
pop
out
ds
dec
rorb
stos
les
push
adc
sub
sub
enter
in
popa
lods
dec
sbb
loop
inc
adc
mov
das
or
pop
int
xchg
test
adc
lds
sbb
mov
stos
xlat
scas
cmc
enter
movsl
dec
cmp
fdivs
cmp
les
lret
scas
adc
adc
and
sub
cmp
cs
cmpsl
dec
xor
sub
aad
mov
jge
aaa
cmp
adc
test
mov
jle
mov
pop
push
movsb
dec
sahf
pop
loopne
mov
imul
pop
mov
stc
mov
popf
xchg
rclb
inc
das
mov
jecxz
sub
cmp
fisubrs
sahf
repnz
aad
shlb
out
inc
xor
lahf
mov
out
push
leave
push
scas
push
cmpsl
or
and
pop
sbb
mul
push
mov
xor
and
pop
shrl
cltd
loop
scas
pop
adc
scas
repz
shrl
mov
std
mov
or
adc
or
xchg
cmp
enter
push
push
adc
je
mov
ret
mov
test
repnz
out
jl
sar
sbb
push
xchg
test
mov
mov
adc
movsb
push
adc
mov
push
sub
out
and
push
fdiv
mov
mov
nop
call
lock
pop
adc
xchg
fiaddl
jp
adc
loop
hlt
xchg
sbb
imul
adc
dec
xchg
and
hlt
clc
jo
adc
pop
mov
mov
pop
mov
in
call
pop
repnz
or
push
aaa
testl
pusha
dec
pop
mov
and
lock
pop
adc
cs
jp
sub
jae
cld
pop
lret
jmp
divps
into
sbb
adc
and
adc
mov
add
adc
je
das
fists
dec
sbb
cmp
or
xchg
xchg
or
push
adc
sbb
inc
sbb
les
adc
and
or
jbe
jmp
push
mov
sbb
inc
fnstcw
push
adc
cmpsl
cmpsl
inc
or
jmp
lock
negl
les
xor
lock
loop
ss
jge
test
jne
jg
pop
inc
mov
sarl
enter
push
jns
fs
adc
mov
adc
mov
pop
adc
jno
adc
pop
ds
imul
popf
jp
scas
xor
xchg
push
in
mov
ret
cmpsl
and
sbb
and
xorb
jbe
push
and
lds
sbb
adc
jno
adc
push
adc
cmpsb
mov
add
adc
add
adc
and
lods
pop
fdivr
sbb
adc
adc
xor
xchg
inc
je
xorb
push
push
pop
mov
add
sbb
data16
stos
cmp
push
mov
xchg
mov
cld
xor
cmc
pop
adc
adc
jno
adc
mov
push
mov
test
mov
mov
in
push
xor
pushf
push
adc
xlat
mov
pop
mov
test
push
adc
test
add
and
lret
push
push
stos
rorb
adc
xor
dec
push
add
mov
dec
xchg
clc
xchg
icebp
xchg
xchg
fwait
push
jle
sarb
hlt
inc
mov
inc
and
push
and
aaa
xor
movsl
daa
sbb
add
out
test
or
xor
push
adc
adc
xchg
sbb
or
pushl
mov
rolb
push
mov
push
mov
adc
push
push
push
loope
rorb
jno
adc
jle
sbb
pop
test
inc
mov
stos
push
mov
xlat
stc
dec
mov
aas
push
push
test
aas
mov
mov
lock
adc
adc
gs
lods
cmpsl
movsl
sub
push
adc
and
fidivl
insb
lock
adc
cld
jo
adc
subb
adc
aam
push
adc
jns
cs
adc
scas
les
rorl
mov
sub
lock
in
dec
lock
movsl
mov
mov
in
aaa
mov
sarb
xchg
jmp
xchg
lcall
adc
xor
aas
cs
scas
std
fnstsw
mov
xlat
mov
bound
xlat
add
icebp
mov
mov
cmpsl
das
pop
test
add
fisubrl
shlb
sub
inc
jecxz
or
dec
mov
sbb
jle
mov
dec
std
mov
sub
cltd
dec
outsb
push
jbe
cmp
fistl
add
aam
popa
mov
sbb
pop
loope
mov
mov
jl
mov
adc
popa
popa
decb
es
xor
sub
movsl
mov
mov
clc
jl
repz
mov
xchg
cld
in
cmp
pop
pop
cmp
adc
clc
subl
xor
pop
adc
pop
fdivs
adc
xchg
mov
mov
xchg
lods
fs
xchg
mov
rcrl
jle
adc
or
outsb
das
nop
xchg
jmp
xchg
pop
mov
push
ja
cmp
movsl
or
push
adc
inc
xchg
inc
sub
pop
cmpsb
cmp
nop
test
jl
sbb
and
adc
stos
ss
dec
imul
dec
movsl
jne
jp
jge
fsubs
aam
add
daa
push
xchg
inc
enter
xchg
sub
scas
sub
fs
shlb
adc
xchg
sub
and
adc
jl
adc
add
pop
mov
xchg
loope
push
scas
stc
xor
cmc
pop
adc
fdivs
adc
arpl
mov
mov
fisubrs
movsl
xchg
scas
out
cmp
scas
cmp
loope
sbb
adc
subl
lret
cmp
jge
pop
xchg
cmpsb
inc
testl
dec
mov
movsb
push
adc
jge
mov
mov
adc
enter
mov
cld
je
pop
cmp
stos
cmpsl
imul
xchg
sub
add
popa
es
shl
shlb
int
sub
and
jmp
test
or
xor
xchg
shlb
adc
sub
mov
jo
adc
shlb
push
cmp
hlt
in
scas
push
arpl
fdivrp
out
stos
push
test
out
mov
pop
jbe
js
aam
xchg
jae
dec
insl
push
push
pop
cltd
fadd
shrb
fdivrs
out
in
sbbl
das
mov
and
cmp
imul
push
pop
sbb
aaa
mov
in
pop
scas
pop
into
int3
adc
movsb
pop
cmp
dec
rorb
inc
jb
outsb
mov
mov
bound
popf
imul
mov
repz
aad
jecxz
dec
xor
mov
gs
shlb
inc
arpl
lods
pop
mov
les
inc
and
in
push
mov
adc
into
inc
mov
mov
xlat
push
lea
jns
pop
jg
adc
jle
xor
pop
mov
cmp
add
aad
int3
sub
stc
idivb
xor
adc
fnstcw
repnz
adc
pop
pop
mov
fwait
mov
jle
jns
sub
sarl
and
mov
bound
rorl
daa
sbb
jp
jl
movsl
xor
cs
leave
jno
and
lods
mov
push
sub
outsl
mov
sub
lods
jne
sub
pushf
scas
insl
mov
mov
cs
add
cmp
push
call
dec
push
push
insl
mov
fsubrp
mov
jne
rcll
shrl
push
or
in
sbb
mov
cld
cmp
sub
xchg
inc
std
loope
or
mov
into
or
push
dec
sbb
mov
lock
loope
fcmovu
push
rolb
fs
mov
cwtl
scas
fcomi
bound
add
insl
scas
push
mov
mov
sbb
xchg
mov
sbb
xor
lret
cld
push
jne
aas
sbb
jno
test
dec
add
sub
and
repz
pop
sar
jns
cmp
sub
icebp
out
std
pop
and
add
fdiv
adc
iret
pop
subl
cmp
or
vandnpd
scas
xor
mov
fnstenv
outsb
mov
ret
mov
jo
fiadds
fwait
gs
xor
inc
cmp
dec
mov
repnz
mov
mov
cmpl
jmp
add
push
sbb
or
xor
adc
mov
pop
push
pop
shrl
add
outsl
lahf
jl
or
mov
mov
sub
mov
sub
adc
lcall
mov
enter
push
push
ss
pushf
inc
inc
cmp
adc
inc
sbb
xchg
sti
arpl
aam
cmp
int
adc
pop
mov
subl
fdivrl
scas
loope
inc
push
mov
arpl
mov
stos
aad
and
cs
test
int
mov
out
aad
test
pop
sti
push
mov
popf
in
in
pop
es
lods
shrl
push
test
and
jae
jmp
fbstp
or
xchg
lds
or
mov
xchg
jmp
ljmp
jno
leave
xchg
addr16
dec
adc
ret
outsl
inc
mov
mov
lock
ds
adc
jp
test
xor
add
sub
loopne
jo
adc
adc
lahf
mov
mov
sarb
leave
insb
xadd
mov
jne
test
movsl
adc
mov
push
or
mov
dec
xchg
dec
sahf
jne
inc
pop
fcomps
jne
aad
andb
push
adc
subl
pop
mov
add
pop
jo
fwait
adc
inc
or
aaa
xor
shlb
cmp
or
push
mov
inc
adc
cli
xchg
push
add
pop
in
push
sub
test
mov
dec
les
mov
mov
enter
adc
add
inc
movsb
das
cmp
into
inc
dec
cld
mov
sub
or
stos
stos
in
fldcw
inc
rcrb
add
pop
or
mov
push
sbb
loope
sub
adc
cmp
in
aam
inc
or
dec
rcl
push
jmp
xchg
adc
pop
mov
mov
add
dec
push
pop
fnstenv
add
in
fists
jle
push
or
add
dec
mov
inc
mov
clc
jno
adc
imul
jns
sub
fstp
pop
push
les
adc
in
pop
adc
or
jle
icebp
sub
aas
popf
jns
imul
push
adc
inc
pusha
jl
out
imul
pop
lds
test
or
inc
dec
dec
push
adc
insb
fists
popf
xor
adc
jmp
push
pop
jp
insb
xchg
cs
cmc
mov
and
mov
pop
adc
cld
jno
adc
aad
nopl
shll
add
mov
leave
xchg
jge
dec
mov
mov
jmp
sbb
adc
pop
pusha
jo
adc
stos
lods
adc
cmpsl
add
aam
pop
dec
rcrb
pop
add
add
xor
out
shrb
jb
adc
fidivs
shll
mov
imul
pop
adc
int
sbbb
stc
popf
not
inc
sbb
in
lods
push
mov
xchg
mov
adc
cli
jnp
lcall
jg
dec
imul
mov
jbe
dec
sbb
sahf
lret
icebp
jmp
mov
mov
add
test
lea
icebp
mov
pop
aam
and
cmp
inc
jl
int3
jne
sbb
add
cmc
or
mov
shlb
setle
inc
hlt
pop
arpl
test
pop
mov
pop
ficomps
add
jno
out
rorl
xchg
les
add
out
pop
ja
sub
rcrl
pop
dec
and
arpl
mov
adc
enter
and
mov
into
lret
dec
and
das
fwait
cmpsb
sub
stc
cld
lods
fiaddl
jae
in
imul
xchg
lock
aas
push
adc
adc
mov
xchg
mov
lock
pop
push
cmp
xor
mov
clc
call
jmp
inc
fadd
test
mov
cmc
xor
inc
call
hlt
xchg
push
adc
loopne
scas
sub
fsubrl
xor
pop
movl
lretw
shr
pop
push
daa
pop
inc
pop
mov
insb
rcl
mov
push
or
mov
call
aam
fimull
test
sub
dec
test
pop
out
fs
and
or
fistps
inc
loope
hlt
arpl
or
insb
lret
and
add
rcll
popa
test
add
adc
fsubs
gs
jmp
mov
cli
aam
push
adc
cmc
xchg
stos
aad
mov
fidivrs
hlt
pop
xor
leave
adc
and
jle
scas
mov
fisubl
mov
push
adc
fstl
push
fcomp
mov
dec
loopne
xchg
fwait
jbe
cmp
jbe
addb
dec
movsb
cld
aas
jne
sub
imul
imul
dec
mov
mov
sarb
daa
mov
fisubrl
dec
ja
shlb
loopne
push
dec
popa
mov
ljmp
and
xorb
and
mov
jns
push
cmp
sub
dec
xor
push
clc
imul
ja
xchg
inc
mov
xchg
leave
push
stos
pop
mov
jno
sub
dec
jne
jae
adc
rcl
mov
mov
scas
pop
pop
fdivrs
movsl
push
adc
add
adc
mov
pop
iret
jns
push
scas
push
scas
sub
sub
movsl
cmp
adc
dec
xor
xchg
sbb
push
adc
inc
dec
sub
daa
pop
ja
rcl
mov
fdivs
adc
push
adc
xchg
out
mov
shll
cmp
sarb
xor
push
dec
sbb
mov
inc
and
inc
push
scas
pop
into
mov
xchg
sub
or
push
xchg
rclb
pop
inc
scas
movb
pop
pop
xchg
in
lods
mov
fimuls
in
pop
push
cmp
ret
lea
rclb
sub
and
shlb
shlb
movsb
dec
lahf
xchg
jmp
outsb
testb
xchg
rolb
sub
aas
and
jmp
jae
adc
in
jl
cli
sbbl
sbb
mov
xchg
cmp
jge
cmp
filds
js
stc
add
mov
loopne
inc
mov
fnstenv
stos
or
ret
shlb
mov
cld
repz
fistps
jae
adc
push
push
scas
push
outsl
fs
or
dec
test
sub
je
push
push
out
dec
push
imul
mov
in
push
mov
pop
jle
jg
inc
popf
mov
mov
xor
jecxz
ret
cmc
in
loop
in
ds
mov
sahf
add
pop
adc
push
adc
outsl
adc
sbb
repnz
sar
negb
outsb
jne
pop
mov
int
mov
int
sub
iret
stos
mov
repz
faddl
popa
fiadds
mov
xchg
adc
adc
aam
cmpsb
and
mov
adc
jne
jg
pop
jo
adc
pop
pop
push
pop
addl
lock
je
and
mov
mov
clc
sub
gs
cmpsb
or
adc
call
aad
or
std
push
cld
and
push
pop
xchg
nop
cltd
xor
clc
inc
xor
scas
jno
cmp
dec
adc
sbb
inc
mov
mov
ja
push
roll
imul
pop
popf
std
add
inc
dec
cmp
xlat
ret
cmovp
mov
push
adc
dec
adc
ret
xchg
in
mov
inc
mov
ja
mov
adc
adcb
cmp
mov
sbb
movsb
cmp
mov
adc
ret
outsl
sub
mov
pop
push
daa
pop
inc
pop
mov
insb
rcl
cwtl
int
sub
mov
mov
dec
scas
xlat
mov
pop
lods
mov
addr16
cmp
sbb
and
fiadds
push
cmp
leave
and
xor
andl
js
lea
cmp
jmp
test
mov
imul
push
jmp
mov
push
xor
push
das
mov
cmp
adc
les
sti
pop
js
and
call
push
add
push
rclb
stos
lods
pop
fidivl
add
push
in
jbe
jg
cmp
fldcw
inc
rorb
jae
adc
xor
popl
inc
jbe
add
cmpsb
inc
mov
push
adc
jne
int
frstor
jle
sti
sbb
jae
adc
shlb
shrb
adc
imul
push
adc
mov
repnz
inc
mov
sbb
shlb
fisttpl
mov
fs
ret
inc
push
mov
inc
mov
pop
pop
xchg
or
sub
nop
cmp
lahf
aas
imul
dec
aad
inc
jp
aad
adc
mov
je
adc
mov
popa
jmp
xchg
sti
negb
push
xor
out
push
stos
and
mov
lods
xchg
sub
mov
mov
fnstenv
mov
cmp
movsb
push
adc
push
cmpsl
cmp
enter
and
push
daa
fistps
repnz
mov
xor
xor
lahf
aas
or
sub
cmp
notb
pop
loopne
das
jl
scas
pop
adc
dec
xchg
ds
inc
push
insb
les
mov
pop
sub
roll
std
or
mov
stos
or
dec
lods
movsb
push
adc
andb
mov
movsl
ds
dec
sahf
test
cwtl
ljmp
nop
movsb
push
adc
sahf
dec
test
lods
xor
outsb
shr
out
dec
decb
jecxz
es
sti
mov
lods
pop
mov
dec
addl
xchg
mov
stos
cmpb
inc
popl
fildll
and
movsb
push
adc
movsb
and
mov
mov
fldt
push
movsl
pop
movsb
and
jno
fsubrs
loopne
mov
push
adc
stc
jl
mov
and
push
adc
int3
lock
mov
data16
push
adc
inc
push
mov
mov
sbb
adc
shll
fistpl
add
sti
iret
loopne
push
movsb
push
adc
sbb
outsl
mov
rorb
rcll
fcompl
sbb
push
xchg
movsb
push
adc
push
mov
cmp
jmp
jle
cmp
fwait
add
pop
sbb
jmp
insb
ret
jae
jecxz
imul
fs
adc
push
fildl
pop
pop
pusha
out
daa
sahf
cmp
xor
adc
out
xorl
cmp
ja
xchg
mov
push
or
push
scas
xchg
hlt
scas
clc
xchg
xorl
adc
sbb
adc
lea
or
in
ds
adc
xor
das
pushf
pop
jmp
add
shll
dec
xor
orb
cli
pop
adc
xor
shrb
rclb
pop
xchg
scas
fnstenv
add
mov
mov
pop
mov
push
scas
lock
imul
insb
jle
sarb
jno
cmpsl
stos
mov
popf
push
adc
dec
test
movsl
or
lds
inc
sbb
adc
adc
in
xchg
ret
rcrb
insb
testl
jae
dec
stos
je
aas
lock
mov
lcall
test
push
push
jmp
adc
mov
int
xor
insl
cmc
cwtl
jg
fnsave
pop
lods
xor
cmp
push
outsl
cltd
sbb
jo
adc
sbb
test
add
pop
mov
dec
xor
xor
push
pop
jp
dec
cwtl
cs
jmp
scas
push
scas
repnz
dec
xchg
ret
adc
adc
inc
or
dec
sbb
test
rcll
pop
mov
pushf
sahf
push
adc
std
lea
fadds
xchg
push
pop
push
and
push
adc
stos
mov
xor
add
sbb
test
push
sti
cmp
add
xor
add
inc
mov
sub
fldcw
inc
jle
jo
std
sti
subb
scas
and
push
adc
push
push
mov
push
or
mov
jl
mov
sub
push
adc
repnz
out
lods
sahf
push
adc
imul
repz
adc
pop
das
call
fadds
mov
push
adc
add
mov
fidivl
jmp
push
adc
bound
subl
out
xchg
sub
inc
fisubl
mov
and
push
adc
sbb
xchg
test
in
jg
sti
pop
inc
int
imull
das
in
pop
scas
pop
adc
dec
xchg
xchg
or
enter
sti
mov
cmpsl
loopne
xchg
jo
adc
pop
dec
cmp
cmp
dec
or
sahf
push
adc
addl
das
fnstcw
mov
mov
jne
nop
jo
adc
push
adc
pop
js
sahf
push
adc
push
test
gs
add
mov
jnp
cmp
pop
iret
rcrb
and
xor
jb
div
cld
or
shlb
fcompl
and
scas
call
cmpsb
jne
push
dec
dec
push
nop
jo
adc
pop
ffreep
sahf
push
adc
mov
aaa
cltd
movb
sub
add
jo
jbe
ja
mov
insl
mov
jo
adc
repz
loop
insb
hlt
pop
dec
jl
std
sub
inc
mov
notb
push
adc
dec
fcmovu
push
push
movsl
push
test
cmpsl
das
add
daa
xor
dec
test
scas
sub
push
adc
and
adc
shl
les
adc
or
ficomps
xchg
std
adc
xor
out
pop
xlat
cli
mov
inc
pop
popa
push
inc
xor
inc
mov
cmp
mov
aad
lods
out
loopne
addb
push
adc
push
int3
push
lds
xor
hlt
shll
sti
inc
and
rcrl
xor
push
adc
pushf
out
mov
pop
je
ja
cltd
dec
testb
sahf
push
adc
mov
test
jo
adc
aam
jbe
cltd
push
push
insb
mov
push
mov
dec
xor
mov
in
push
adc
push
arpl
and
push
adc
sbb
mov
sub
sbb
add
pop
mov
daa
test
test
push
jae
lods
test
and
out
sbb
dec
pusha
sub
or
cmp
xor
ja
movsb
repnz
scas
dec
mov
adc
xchg
iret
mov
jl
pop
call
test
lcall
iret
or
ljmp
mov
adc
push
adc
out
inc
add
or
push
and
pop
xchg
adc
cmp
gs
mov
cwtl
inc
lahf
aas
jmp
jne
or
xadd
fsubl
test
shlb
jo
push
adc
pop
mov
or
mov
sub
add
idiv
inc
mov
push
inc
movsl
dec
lahf
nop
jle
or
pop
fdivs
adc
aas
popf
pop
sub
and
jmp
aam
aad
mov
lock
push
adc
rcl
ja
push
outsb
inc
sti
fsubl
std
js
rorb
out
jmp
xchg
shrb
sahf
push
adc
xchg
cs
cmp
adc
bound
inc
das
pop
mov
xor
pop
adc
push
stc
xor
pop
adc
mulb
mov
adc
pop
sub
fdivs
cmc
pop
adc
mov
call
scas
pop
mov
mov
push
push
cmp
fisubl
sub
and
lods
mov
mov
invd
adc
adc
inc
and
stos
push
cmc
enter
movsl
dec
cmp
rolb
sbb
or
push
stos
clc
add
adc
test
aam
lahf
aas
jle
and
push
adc
pop
inc
aaa
lock
push
stos
clc
fsubl
test
pop
jne
scas
pop
xor
andb
dec
les
jmp
stos
push
add
push
fadds
or
outsb
pop
cmpsl
dec
jmp
imul
xor
push
adc
mov
push
xchg
push
test
sub
pop
in
movsl
cmp
jbe
cmpsb
dec
call
negl
mov
mov
push
scas
lcall
imull
movsl
dec
adc
push
test
sbb
xchg
add
jbe
jg
xor
lcall
popf
fisubs
cmpsl
inc
lds
push
scas
and
xor
or
adc
aas
mov
je
pop
mov
mov
sub
mov
jecxz
call
pop
sub
adc
xchg
mov
mov
sti
cmp
dec
mov
mov
xlat
mov
movsb
pop
sbb
push
adc
sbb
add
mov
insl
mov
mov
and
lods
ror
ds
mov
std
add
lret
jnp
and
les
push
mov
rcrl
lcall
ja
push
aad
jg
sbb
jnp
push
cmpl
mov
int
push
rorl
jo
dec
stc
push
loope
dec
jbe
gs
call
xchg
inc
dec
inc
shlb
jno
add
repnz
loopne
mov
adc
sub
push
adc
mov
cltd
push
hlt
push
lods
jbe
cmp
lods
aas
je
push
or
fisttpll
dec
xchg
fldt
sub
movsl
lret
gs
xor
aad
mov
lret
repnz
test
test
out
and
sub
adc
push
repz
in
mov
shlb
and
mov
rcr
mov
shrb
dec
in
adc
mov
or
xchg
cmc
popa
aad
dec
in
call
fsts
in
push
xchg
and
imul
sbb
push
imul
pop
lods
shrl
adc
ffreep
iret
push
or
sahf
xchg
loopne
shrb
push
mov
rcl
push
mov
inc
sub
jge
in
std
xor
push
xor
pop
adc
adc
jnp
ret
imul
mov
push
mov
shrb
mov
or
je
or
xor
push
push
and
or
and
xchg
mov
fisubrl
jmp
rolb
rolb
add
xchg
inc
inc
xchg
ja
jecxz
mov
ficoml
int
cmpsb
pop
mov
mov
cli
imul
fldl
xchg
sbb
xor
fiaddl
sahf
aas
popl
inc
scas
test
clc
inc
mov
cmpsb
outsl
in
xlat
cmpsl
aam
push
gs
sbb
adc
inc
cld
sbb
adc
mov
jae
pop
jo
add
and
jl
rolb
jno
adc
add
ljmp
mov
leave
cmpsl
dec
xchg
loope
dec
cld
jo
adc
lret
mov
rorl
xor
fisubl
inc
jnp
inc
loopne
test
mov
and
outsb
mov
scas
mov
or
pop
ss
cmp
cmp
aas
push
adc
push
sub
jmp
mov
and
or
sub
imul
cmpsl
dec
lahf
aas
aaa
into
add
adc
pop
les
adc
add
and
addl
add
daa
push
mov
jge
aaa
sti
jp
stos
push
inc
jns
mov
sti
pop
ds
dec
lahf
xchg
xor
push
push
in
clc
movsb
jmp
pop
push
fcompl
movsb
push
cmpsl
jecxz
dec
dec
ljmp
fiaddl
in
mov
test
mov
movsb
dec
xchg
aas
lcall
in
sbb
popf
into
sub
fisttpl
sbb
pop
mov
lock
dec
cld
lea
jno
arpl
cltd
out
js
fsubrl
ret
das
pop
push
and
or
js,pt
jo
adc
inc
pop
mov
test
fsubr
sti
aam
nop
jo
adc
out
xor
icebp
push
xchg
pop
dec
shlb
int
in
lods
in
dec
jns
fsubrs
dec
movsl
sub
fstps
out
pop
or
push
lahf
jb
inc
mov
dec
cmp
fsubrl
dec
push
xor
pop
adc
push
push
adc
cltd
cmpsl
jl
jbe
push
xchg
add
sbb
push
fcompl
ds
mov
mov
orb
jecxz
inc
adc
mov
inc
or
outsl
dec
popl
clc
jo
adc
out
scas
mov
or
divb
mov
cmpsl
add
sub
pusha
js
push
adc
adc
imul
in
outsl
hlt
mov
jecxz
and
push
fwait
sub
cmpsb
adc
xor
adc
xchg
mov
js
push
adc
sbbb
mov
xor
sbb
sub
pop
adc
fwait
mov
sbb
sbb
pop
mov
pop
pop
shll
or
xchg
faddl
adc
mov
pop
lods
jo
les
mov
adc
lds
push
js
push
adc
fidivl
outsb
or
inc
jo
adc
xlat
sub
mov
scas
dec
cmp
dec
jnp
jns
mov
mov
lea
sbb
adc
or
inc
jno
adc
insb
lock
adc
push
mov
pop
sbb
push
adc
lahf
shll
movsl
js
das
lahf
jo
inc
scas
xchg
or
push
adc
insb
pop
or
push
inc
sbb
inc
les
cs
popf
in
add
es
add
notb
xlat
js
push
adc
insb
pop
or
loop
add
jo
adc
insb
sbb
stos
push
sub
jl
or
mov
jno
adc
stc
jne
sbb
arpl
push
or
cmp
subb
jo
adc
mov
xchg
push
or
jle
bound
dec
mov
or
jmp
fidivrl
pop
or
mov
add
adc
bound
addb
insb
pop
or
cmpsl
arpl
adc
repnz
sbb
pop
and
sub
scas
pop
jmp
or
sub
aas
cltd
movsl
lods
push
in
sub
inc
je
inc
mov
pop
dec
xor
insb
push
lock
and
push
or
out
xchg
js
dec
popf
cmp
xchg
cld
xchg
push
dec
pop
repnz
adc
push
hlt
in
fimull
sbb
push
and
adc
push
or
loopne
inc
stos
pop
popf
aas
jle
add
shlb
lods
cmp
push
icebp
psubq
dec
cmp
mov
jle
ret
jo
jnp
adc
pop
and
sub
sub
inc
in
cli
adc
mov
push
test
sbb
sahf
push
sub
scas
shl
jo
aam
xchg
add
movl
sub
push
and
sub
fs
mov
inc
outsl
jbe
add
notl
inc
and
mov
loop
push
mov
in
in
outsl
aad
pop
inc
outsl
jbe
pop
pop
notl
inc
and
mov
loop
push
mov
in
in
arpl
push
pop
inc
outsl
jbe
or
notl
inc
and
mov
loop
pop
mov
in
in
addr16
pop
inc
outsb
ja
push
push
notb
xlat
inc
and
mov
jecxz
pop
mov
movsl
aaa
stos
out
aaa
adc
fldenv
and
sub
and
data16
scas
fisubs
stos
inc
out
add
cmc
xor
loopne
int
cmp
mov
push
scas
push
stos
cld
lret
dec
ror
dec
mov
jns
inc
addr16
pop
andb
into
jb
inc
scas
pop
and
mov
mov
push
andnps
sbb
add
out
lahf
mov
lret
cmp
mov
jb
dec
pusha
out
out
lret
cmp
sub
test
xor
mov
stos
push
adc
dec
rcl
cmp
sbb
fsubrl
pusha
cmp
mov
ffree
pop
pop
sbb
add
xchg
adcb
mov
stos
push
adc
icebp
movsl
xor
cwtl
sbb
repz
sahf
sbb
popa
dec
repz
mov
js
syscall
dec
push
cs
jp
sbb
or
sbb
pop
add
cmpsb
push
adc
xor
lods
pop
sbb
fdivr
mov
mov
cld
les
stos
push
adc
push
sbb
lds
mov
and
cmpsb
push
adc
pop
leave
nop
lds
mov
adc
or
jl
lret
adcl
push
adc
enter
sub
scas
push
adc
cmp
and
ja
cmpsb
push
adc
push
call
adc
adc
popa
out
jb
fldenv
adc
lock
cmp
adc
cmp
sbb
pop
shrb
sbb
push
pop
sar
loope
out
mov
and
sbb
sub
out
dec
sbb
fcmovne
inc
xchg
push
cmp
cmpsb
push
adc
dec
mov
add
pop
incb
lret
shll
stc
jnp
data16
stos
sbb
add
shl
loope
sbb
outsb
sbb
mov
adc
call
dec
jae
pinsrw
ret
jl
fsubl
fistl
cmp
stos
push
adc
pop
xor
xchg
sbb
jnp
repnz
leave
sbb
push
push
xor
mov
adc
enter
into
insl
fstps
pop
fwait
cltd
orl
push
adc
aas
int3
or
dec
jnp
inc
jne
jns
cmpsb
icebp
mov
jbe
aad
cs
addr16
call
jl
sti
push
shll
movsl
sbb
inc
cltd
mov
xor
sarb
or
xor
xchg
movsl
sbb
sub
push
fcoml
push
call
dec
cmp
faddl
or
sub
cld
jge
xchg
mov
into
addr16
roll
mov
test
test
js
lret
adc
pop
fucomip
jne
fnsave
shlb
sbb
xchg
jecxz
xchg
cs
xor
sbb
scas
xlat
int
mov
pop
mov
push
scas
pop
mov
dec
out
mov
fcmovb
rcl
xlat
mov
lods
nop
iret
mov
mov
and
or
adcb
out
pop
dec
ljmp
pop
daa
rorb
xchg
out
call
or
add
cwtl
and
and
cmp
aad
fisubrs
outsb
cmpsb
pop
pop
sub
mov
scas
dec
rcll
iret
inc
test
test
xchg
push
xlat
imul
insl
mov
xchg
scas
dec
rcll
iret
popa
test
test
xchg
push
xlat
dec
leave
pushf
das
sbb
insl
mov
jge
shrl
push
es
xchg
das
addr16
js
push
stos
push
cs
cs
dec
pop
out
push
xor
adcl
mov
daa
xchg
dec
add
push
add
xchg
sbb
orb
pop
adc
inc
push
and
add
lods
xor
dec
loope
mov
out
inc
push
scas
dec
mov
dec
mov
and
out
test
xchg
aam
or
sub
mov
jne
into
scas
adc
fcmovnb
dec
cmpb
ljmp
mov
sti
out
imul
xchg
das
lcall
mov
in
xchg
and
outsl
mov
ret
jns
in
mov
ja
pushf
cwtl
stos
sub
lret
or
push
push
cmpsl
outsl
je
repnz
push
sbb
jnp
and
dec
xor
xchg
xchg
mov
sti
data16
and
cltd
mov
je
movsl
idivl
test
cmp
lret
pop
fs
jmp
push
adc
sub
mov
dec
sbb
pop
std
mov
pop
or
clc
jle
cmpsl
xchg
sub
aad
pop
mov
cmp
cmp
mov
or
sbb
mov
js,pn
adc
icebp
cld
testb
repnz
push
or
out
cwtl
adc
fidivrs
lahf
imulb
push
popf
scas
loop
push
pop
inc
stos
sbb
mov
mov
mov
adc
sub
xchg
data16
mov
shrl
add
nop
loope
xor
push
scas
and
and
mov
mov
fildll
sbb
ds
jmp
or
outsl
lock
jae
cld
sub
rorl
stos
mov
stos
aad
neg
int
in
addr16
add
enter
repz
out
xchg
pushl
ljmp
sbb
and
pusha
iret
pop
inc
add
inc
jb
insl
pushf
pushf
jbe
cmp
data16
outsb
mov
mov
push
shl
or
inc
or
dec
xchg
push
pop
in
and
into
enter
pop
mov
pop
pop
or
push
inc
aaa
nop
movsl
adc
addr16
push
mov
mov
testb
push
setno
pop
jg
mov
xchg
sub
and
cmpsb
or
loopne
mov
dec
movb
ret
lods
loope
mov
xchg
inc
push
xchg
test
inc
jge
pop
cmpsb
in
pop
cmp
movsb
or
adc
popl
adc
inc
lods
rcr
shlb
add
pushf
movsl
push
aas
data16
rcr
data16
in
pop
in
fs
nop
dec
inc
mov
nop
shlb
xlat
data16
fadds
sbb
jne
adc
add
popf
sub
shll
push
mov
and
daa
inc
pop
loop
inc
out
xlat
push
push
lods
rorl
imul
out
mov
adc
in
sahf
dec
xchg
cs
xor
xchg
imul
je
cmpsb
sbb
push
adc
in
add
lea
dec
xchg
stos
popf
mov
mov
test
imul
and
jmp
lods
shl
sbbb
bound
sub
in
sbb
pop
sahf
int3
int
dec
shll
out
cmpsb
or
jle
push
inc
push
dec
in
xchg
adc
lds
dec
shl
cmpxchg
cmc
cmp
mov
lcall
and
and
push
scas
mov
sarb
into
jnp
cli
mov
and
add
push
push
push
fcompl
andb
movsb
dec
jecxz
neg
int3
cmp
mov
ret
dec
mov
fldl
mov
mov
out
ds
mov
jbe
or
test
dec
sbb
pop
cmp
mov
cmp
fldcw
js
cmpsb
pop
or
lds
adc
push
mov
insb
push
xor
pop
into
mov
jp
push
mov
lods
jp
adc
loope
adc
push
inc
rorl
jg
loop
adc
xor
push
or
dec
movb
jmp
sbb
push
mov
stos
add
icebp
adc
push
out
lea
push
gs
xchg
movsl
add
add
loop
sbb
mov
mov
dec
int
loope
push
out
push
icebp
pop
jmp
out
call
lds
and
mov
cli
jl
mov
jne
aad
arpl
ret
inc
cmp
xchg
out
push
push
mov
fldl2e
xchg
xor
jg
inc
mov
js
xor
std
xchg
jno
xchg
in
rcl
dec
push
cmpsb
adc
pop
shr
xor
dec
out
add
shrl
fstl
mov
mov
jns
push
pop
and
jae
loope
or
push
inc
push
in
xchg
dec
jns
je
mov
arpl
or
or
push
clc
stos
stos
mov
adc
jnp
lret
push
subb
mov
aad
mov
addr16
out
xor
inc
jbe
sub
cmpsl
and
stos
in
pop
jnp
push
testl
mov
aas
sahf
jne
mov
mov
jnp
shrb
lods
jae
push
sub
push
xor
mov
jb
fldenv
or
sbb
mov
imul
pop
out
js
and
xchg
shrb
mov
lea
mov
pop
aas
push
aad
jecxz
jge
push
cld
jae
xchg
adc
js
ret
push
sbb
in
sarl
mov
push
pusha
fidivs
std
lea
mulb
sahf
repnz
sub
cmp
dec
in
xor
testb
jno
xor
push
cwtl
stos
bound
pop
sub
mov
pop
es
ljmp
pusha
cmpb
movsl
adc
push
fwait
nop
addl
cmp
xchg
lret
and
imul
std
movsl
sbb
push
lods
stc
and
nop
pop
adc
shl
or
hlt
inc
rorb
inc
inc
outsl
fwait
xor
sbb
add
xchg
xchg
push
sub
sti
popf
imul
loop
lock
cmp
arpl
in
cld
adc
mov
jp
jle
popa
jle
cmp
lods
pop
mov
cli
sub
push
add
sub
jae
pop
push
ds
pop
push
mov
push
cltd
arpl
adc
pop
int
imul
xor
jnp
ljmp
adc
adc
push
inc
add
push
push
cmpsl
sar
inc
mov
adc
in
fs
stc
pop
mov
dec
iret
outsb
dec
jbe
fisttpll
cmp
push
dec
mov
dec
jbe
arpl
xchg
push
jmp
pop
test
adc
push
sub
xor
jb
stos
push
and
xor
push
movsl
push
xchg
push
xor
mov
iret
aaa
lret
or
adc
mov
aad
fsubs
shll
rcll
lods
push
pop
mov
mov
loope
adc
push
jnp
in
ficompl
or
push
adc
xchg
stos
fidivrl
jmp
adc
in
add
ljmp
into
jb
in
sahf
mov
mov
notl
rol
outsb
add
push
repz
aam
mov
in
jae
mov
and
test
arpl
jmp
jg
popf
sub
cmp
mov
sbb
mov
push
stos
add
xchg
mov
adc
es
pop
imul
xchg
mov
xor
mov
enter
mulb
loop
mov
mov
jecxz
push
jmp
pextrw
dec
cs
xchg
push
xor
or
ss
fsts
xor
inc
insb
les
mov
sub
popa
push
outsl
cmp
fisubs
fisubs
shrb
sbb
std
cli
push
insl
jo
pop
sbb
add
dec
notb
push
call
pop
xor
cmc
xchg
inc
std
cmp
sbb
into
je
jp
call
sbb
arpl
ffreep
inc
dec
jle
loop
dec
mov
jp
testb
inc
shll
dec
test
pusha
pop
aaa
xchg
movsl
xchg
ja
std
arpl
fs
daa
femms
lcall
and
scas
fidivrs
sub
aas
pop
push
aam
test
xor
mov
inc
leave
pop
xor
push
jl
std
mov
adc
popa
int
icebp
jns
cli
mov
in
aas
mov
jbe
pop
jae
nop
jecxz
lods
stos
imul
push
arpl
jecxz
xchg
pop
shl
daa
push
cmp
jge
out
pop
mov
pop
sbb
jg
outsl
pop
fwait
jge
leave
pushf
in
xor
push
int3
mov
jns
loope
and
sub
inc
mov
cmp
jle
ja
push
jae
insb
shll
stos
sbb
or
movl
test
movsb
pop
dec
ljmp
sbb
or
adc
outsl
mov
test
push
mov
mov
imul
dec
fdivrl
iret
enter
pop
fbstp
clc
cli
sahf
and
loope
mov
xlat
mov
pop
add
jge
lret
dec
scas
or
daa
daa
nop
jle
popa
mov
cmpl
pusha
sbb
sbb
sub
scas
add
mov
dec
sbb
adc
pusha
push
ss
inc
xor
mov
arpl
and
xchg
movsl
loop
addb
ljmp
xchg
xchg
sub
sbbb
mov
add
and
cmpsl
aam
inc
mov
push
mov
mov
xchg
mov
scas
push
jae
push
sub
cmpsl
and
iret
mov
clc
xchg
fstps
adc
les
xchg
cs
mov
mov
fdiv
mov
pop
aad
cwtl
push
fwait
mov
lea
mov
arpl
out
pop
mov
hlt
cmpsb
pop
dec
and
stc
movsb
arpl
and
rcr
fiadds
cltd
enter
pop
loope
cmp
fisubrl
aaa
adc
jmp
jo
adc
push
mov
cmpsl
sbb
mull
stos
popf
pop
in
push
xor
aaa
fistl
test
aas
leave
adcb
movsl
add
mov
sbb
dec
or
arpl
pusha
pop
pop
add
push
adc
mov
std
cwtl
mov
mov
xchg
pusha
inc
lahf
insl
push
or
cmp
and
push
push
idivl
cmpsb
loopne
mov
push
loopne
inc
ljmp
jge
pop
call
mov
xchg
sub
dec
popa
xchg
insl
mov
cltd
ljmp
insb
cmp
jle
movsb
cmovge
pop
mov
dec
int
dec
sbbl
jb
int
out
sbbb
pusha
stc
sahf
fsubrs
stos
dec
repnz
pop
cmp
pop
mov
jl
addr16
push
jne
clc
xchg
dec
leave
ljmp
inc
lcall
add
push
xchg
cmp
add
pushf
push
popa
xlat
cmpsl
sbb
sub
xabort
dec
lock
imul
in
cmpsb
sub
pop
push
or
push
scas
cmp
lret
mov
mov
pop
adc
jmp
inc
adc
jg
in
xchg
push
outsb
shlb
ret
stos
je
mov
xchg
or
test
shrb
movsb
or
xchg
xlat
aas
stos
inc
xor
bound
xchg
mov
add
fimull
inc
std
imul
out
test
sarb
or
push
push
push
cmp
ljmp
jns
adc
fistps
cmpsl
lods
pop
es
aas
lcall
push
out
cmc
xorb
mov
sub
jp
js
in
inc
pop
jns
out
repnz
push
adc
fsubs
adc
push
sub
test
xchg
inc
jecxz
pop
loopne
push
adc
and
ds
test
das
pusha
mov
insb
xchg
push
push
out
adc
std
push
xchg
mov
lods
lods
pop
pop
enter
sti
or
jmp
jno
insl
sahf
jl
xchg
push
xchg
sub
out
sbb
mov
fnstenv
pop
jb
xchg
cli
leave
and
mov
push
adc
pop
fucomp
mov
sbbl
rcrl
nop
mov
loop
jns
fdivs
fstl
movsb
add
and
pop
bnd
jle
and
hlt
mov
cmpsb
out
movsb
mov
adc
popa
jle
push
mulb
inc
and
fistpl
mov
in
in
repnz
xlat
push
test
xorb
test
insb
cmc
push
in
push
in
or
mov
lret
push
pusha
insl
push
cs
or
outsb
stos
push
inc
fxch
xchg
push
push
test
push
or
rcrl
adc
cmpsl
xor
movsb
scas
imul
outsb
push
aam
jge
sub
testl
fsqrt
sar
jl
stc
cs
pop
in
fidivl
pushf
std
push
add
inc
movsb
pop
imul
in
push
outsl
fwait
inc
push
inc
add
lds
push
scas
pop
dec
push
out
xchg
faddl
jl
or
adc
mov
push
repnz
xchg
call
jmp
dec
sti
xchg
outsb
jp
lods
cmc
filds
pop
mov
mov
push
xchg
jmp
sbb
das
movsb
movsl
fsqrt
jg
add
cmpsl
fcompl
imul
xor
call
fwait
arpl
dec
jbe
pop
rcll
and
push
daa
mov
sbb
jae
xor
cs
dec
cmp
push
push
sub
nop
movsb
jp
xor
adc
sub
inc
push
or
jne
shr
sbb
jns
adc
call
cs
enter
in
ret
outsb
jp
mov
imul
cmpsl
popf
js
out
pop
xchg
mov
aaa
iret
add
scas
cmp
xor
sbb
pop
mov
push
mov
les
and
mov
push
test
loopne
add
ror
pop
pop
jmp
or
adcb
push
outsl
movsl
pop
mov
adc
test
lock
test
roll
hlt
add
ffreep
jl
mov
mov
fmul
xchg
xlat
mov
orl
push
mov
stos
mov
pop
into
aam
lods
lahf
mov
insb
out
orl
lea
jecxz
push
cli
add
pusha
in
xlat
idivb
movsb
sbbb
push
push
movsb
xchg
pop
mov
pop
xchg
popa
inc
ss
jle
movsb
jne
xchg
pushf
inc
adc
fnstsw
inc
sub
add
inc
sub
call
int3
outsb
ret
das
jb
iret
outsb
stos
sub
test
add
jne
mov
lret
mov
fcoml
pop
arpl
dec
cmp
pushf
flds
adc
inc
sbb
inc
mov
adcb
inc
mov
fiadds
popa
xlat
int3
cmp
mov
push
adc
adc
jnp
cld
mov
mov
mov
pop
les
adc
xchg
pop
incl
mov
pop
sbb
lods
mov
insl
add
adc
jo
push
adc
jle
mov
popa
int3
mov
add
jb
and
or
pop
aad
pop
jecxz
jnp
mov
rolb
aas
in
push
test
mov
pushf
flds
adc
and
ja
mov
mov
push
flds
adc
xor
or
mov
push
add
add
stos
mov
roll
test
sti
mov
shlb
popa
cli
cmc
notb
aam
aam
xor
es
xchg
stc
pop
mov
cmc
dec
icebp
adc
jbe
mov
rclb
push
shrl
ds
cmpsl
jle
aad
pop
fdivl
repz
cld
jno
cmp
movsb
pop
inc
pop
or
mov
push
cmp
push
sbb
pop
lret
scas
adc
divb
inc
or
or
jns
sbb
and
jnp
test
mov
jo
test
jae
pop
popf
test
sahf
movsl
inc
mov
outsb
pop
jge
jmp
push
adc
and
push
jg
stos
mov
lret
cmp
inc
mov
adc
daa
or
mov
and
ret
outsb
inc
mov
shrl
push
bound
stos
call
in
lea
add
push
fldl
mov
jns
stos
mov
jae
ljmp
inc
roll
add
mov
mov
jmp
cmp
enter
adcb
cmpsl
add
adc
push
mov
cs
loopne
xchg
arpl
pushf
dec
divb
cltd
pusha
mov
imul
adc
arpl
movsl
rclb
sub
pop
sbb
imulb
flds
mov
lret
push
mov
add
dec
popa
push
push
xlat
test
pop
es
adcb
imul
insb
enter
sbbb
rcr
sub
mov
decl
das
inc
xchg
mov
sub
jmp
inc
push
push
push
outsb
pop
adcl
daa
insl
imul
leave
mov
add
adc
into
imul
push
lcall
push
inc
lret
arpl
xorl
out
inc
xorb
jmp
cs
movsb
mov
imul
addb
sarl
incl
in
lods
mov
xorb
pusha
pop
xchg
add
adc
or
sahf
enter
test
es
adcb
shl
xchg
fstps
pop
dec
sub
or
call
xlat
aad
test
mov
popf
add
jle
xchg
xlat
scas
popa
push
into
inc
inc
push
inc
flds
adc
mov
or
pop
je
inc
jg
pop
pop
ds
mov
inc
adc
push
daa
lahf
mov
mov
or
ljmp
jae
mov
push
jmp
push
jl
and
cmpsb
sub
pop
int3
inc
adc
scas
lahf
adc
sub
dec
cmp
xor
mov
pop
dec
popf
ret
sub
xlat
push
xor
call
mov
into
jp
jne
jp
scas
lock
push
cltd
pop
cmpsb
add
xchg
inc
fistpl
je
fxch
mov
xorl
jp
push
rol
dec
push
jecxz
add
sbb
sub
pop
or
rolb
jo
or
fldl
cmp
xchg
xor
inc
enter
cli
push
bound
xlat
or
add
in
inc
push
nop
sub
aaa
jbe
pop
cmp
mov
jmp
imul
inc
sbb
fistl
push
adc
imul
dec
iret
lret
ficompl
test
mov
push
adc
pushf
dec
mov
xchg
pop
push
push
rcrb
hlt
andb
or
mov
xchg
pushf
xchg
iret
incl
in
push
and
repz
dec
push
or
xchg
lahf
xchg
test
pusha
jle
push
mov
jle
cmp
and
not
push
push
out
fsubrl
mov
fbld
dec
sbb
sub
push
pop
rorl
push
xor
mov
jnp
aad
xchg
sbb
and
repnz
aad
in
cwtl
xchg
iret
inc
xchg
pusha
scas
stos
fdiv
push
mov
insl
cwtl
push
jl
sarb
mov
cmpsl
or
mov
fnsave
scas
push
ja
dec
mov
imul
dec
stos
dec
xchg
in
xchg
dec
call
xchg
adc
dec
add
xchg
sub
ljmp
shll
mov
mov
lcall
inc
push
sub
and
int
xchg
movsb
fisttpl
mov
mov
mov
cmp
das
pop
mov
mov
imul
fwait
pop
outsb
pop
ljmp
xchg
push
in
xchg
lods
mov
hlt
xchg
lea
fistps
push
rolb
pop
int3
add
aad
pop
xchg
cs
push
es
push
adc
push
sub
add
xchg
rcll
inc
and
scas
out
or
and
jo
incb
iret
ss
dec
call
out
xlat
jns
add
and
pop
rolb
in
lahf
imul
bound
dec
inc
push
fwait
jl
cld
adc
call
xchg
dec
sbb
imul
cmp
push
mov
xchg
or
hlt
adc
and
in
fdivl
cmp
pusha
movl
aaa
mov
push
and
dec
push
test
cmp
or
push
cmp
rolb
adc
testb
inc
mov
mov
imul
mov
inc
or
add
cltd
pusha
mov
cwtl
pop
inc
cmp
pop
xchg
jp
into
out
scas
popf
mov
jo
adc
dec
dec
pop
push
mov
fdivl
fucomp
movsl
aad
in
xchg
push
lods
movsl
sbb
lea
mov
dec
cwtl
stos
sbb
lods
cmpsl
out
mov
mov
test
mov
into
sbb
mov
hlt
cld
adc
into
mov
lahf
popa
sbb
xchg
nop
int
in
xchg
sub
jns
and
aad
test
imulb
sub
lods
shlb
pop
aas
das
das
mov
jg
leave
fdiv
lods
add
das
xchg
adc
daa
adc
shl
or
inc
jbe
loopne
or
dec
xchg
sub
xor
mov
adc
fbld
adc
movsb
sbb
or
gs
push
mov
sub
je
movsl
das
aad
dec
jns
xor
sub
sub
mov
and
out
push
sti
mov
ja
mov
jo
sbb
or
or
imul
mov
jne
mov
adc
mov
add
lret
mov
imul
dec
adc
stc
jae
xor
out
or
push
ja
out
sub
fstpt
in
sti
push
js
rcl
push
arpl
or
add
add
add
and
lea
add
lods
push
mov
inc
arpl
push
cmc
out
aam
das
sbb
add
pop
xor
push
adc
mov
xor
push
adc
int3
mov
pop
test
int3
mov
xor
mov
push
push
mov
xchg
cmp
gs
jae
and
popf
push
leave
jno
jb
leave
fwait
mov
stc
mov
in
adcl
adc
int
imul
add
add
and
loope
insb
inc
mov
js
jecxz
addr16
push
test
push
jg
out
pusha
mov
test
test
ljmp
fldcw
jmp
adc
xchg
cs
outsl
inc
xorb
bnd
push
ror
cmp
cmpsb
xchg
and
pop
mov
xor
add
fcmovne
int3
call
cmp
cmpsb
sbb
xor
cmp
pop
push
adc
je
sub
mov
ret
pop
rcrb
add
push
or
xlat
lea
push
rclb
adc
sbb
xchg
popf
jmp
pop
loopne
addl
mov
add
push
fldl
mov
jns
and
out
dec
push
orb
lahf
cwtl
lock
or
xor
rclb
sbb
adc
rorl
fnstenv
lds
iret
aaa
aaa
rcrb
jp
jmp
fwait
lods
repz
gs
mov
xchg
ret
inc
mov
adcb
cmpsb
mov
notb
push
push
push
adc
loop
rcrb
mov
addr16
mulb
jg
mov
lds
scas
push
or
jmp
adc
xor
inc
sub
or
shr
push
movsb
jmp
mov
cmpsl
and
or
in
jge
sbb
lods
mov
xchg
aas
jle
and
sbb
dec
pushf
cs
mov
stos
add
dec
dec
push
xor
inc
cmp
or
cmp
xchg
ljmp
gs
enter
fsubl
arpl
orl
xor
mov
out
push
and
sbb
daa
push
lock
add
shl
inc
xor
dec
rcll
mov
adc
lods
inc
test
mov
lcall
jmp
or
push
lods
mov
jne
push
xchg
push
test
sub
jae
fwait
pop
dec
sub
xchg
arpl
into
sbb
xchg
push
stos
push
dec
sbb
dec
popf
sub
mov
cmp
pop
inc
and
outsl
jb
and
lea
int3
sarb
popa
sti
cmp
add
or
xchg
xor
mov
insl
and
jne
and
gs
lock
lret
incb
stos
addl
or
movsl
push
jg
lret
jmp
lahf
lock
sbb
xor
jmp
cwtl
or
daa
xchg
cmp
test
movsb
fildll
daa
call
shufps
mov
aas
call
xor
inc
jmp
ljmp
push
adc
jmp
je
jecxz
or
fbld
mov
mov
mov
xor
orb
push
sub
ret
js
addr16
mov
add
cwtl
adc
sbb
pop
xor
js
cmpsb
or
les
cvtdq2ps
clc
inc
rcr
or
dec
cmp
cwtl
lahf
mov
sbb
aaa
push
test
push
adc
mov
pop
jbe
out
mov
imul
or
aaa
mov
xor
jne
inc
data16
imul
cs
mov
sub
sbb
sub
in
sub
xor
shlb
rorb
dec
jo
adc
jb
cwtl
mov
cli
sti
jne
push
cwtl
cmc
jae
nop
js
xchg
and
dec
movb
fxch
sahf
cmp
push
push
jb
xor
xchg
adc
mov
addr16
mov
sub
fmull
xor
xor
jnp
insb
js
outsb
mov
sbb
test
fidivrs
jl
mov
das
push
adc
aam
sti
cmp
clc
fnsave
jb
scas
sub
push
cmpsb
ficoms
out
aad
outsl
adc
test
adc
jo
hlt
jb
sub
pop
jns
ljmp
subl
pop
cs
inc
jo
stc
ljmp
xor
cmc
ret
icebp
test
outsl
cs
iret
mov
jae
sbb
mov
adc
arpl
push
bound
dec
xchg
outsb
jmp
mov
outsl
sbb
cmp
mov
loopne
sahf
jmp
mov
pop
dec
paddq
shll
dec
rclb
sub
rcr
xchg
add
pop
enter
jle
pop
jnp
lods
rcr
outsl
adc
mov
pop
or
aas
inc
add
or
and
into
pop
imul
rcrl
sbb
jmp
jle
clc
sbb
stos
xchg
mulb
pop
xlat
outsl
pop
and
jmp
mov
adc
push
adc
adc
dec
xchg
cs
test
fsub
dec
add
shl
jnp
jmp
decb
cmpsl
cmpsl
and
movsl
push
scas
xchg
sahf
mov
imul
lahf
cmc
mov
loop
loop
dec
shll
and
mov
push
and
lock
dec
cmp
dec
out
lods
or
arpl
xlat
push
or
xor
dec
sar
push
adc
push
push
push
sbb
push
or
inc
imul
adcb
shrb
out
rorl
sbb
adc
mov
lods
xchg
jge
scas
or
jge
jns
xchg
lds
xor
cmp
aas
jle
inc
sbb
imul
pop
fstl
lds
pop
pop
daa
push
mov
sbb
es
mov
addb
lea
fldt
and
lds
jmp
sbb
dec
and
add
mov
out
adc
out
adc
out
adc
add
dec
call
add
or
jmp
add
in
jmp
add
shr
adc
adc
out
add
shr
add
sbb
add
sbb
add
jle
add
pslld
adc
repnz
jmp
add
popa
repz
push
add
mov
movsb
xor
or
push
out
daa
fsubl
push
add
jbe
xor
pop
inc
jecxz
sbb
push
jecxz
leave
imul
cmp
stc
dec
add
mov
mov
hlt
ljmp
add
enter
icebp
aam
imulb
jns
add
mov
insb
mov
aam
or
xor
dec
jae
mov
mov
jo
jae
xchg
mov
cmpsl
ret
stos
out
stos
mov
mov
mov
jo
inc
imul
or
lret
popf
cmp
lahf
in
fs
cmp
lea
dec
mov
mov
xchg
popf
sub
repnz
jne
push
mov
and
sti
jmp
pushf
pop
sbb
mov
jnp
loope
es
mov
daa
outsb
lea
or
sub
adc
push
jns
sub
in
adc
mov
aad
js
push
xchg
add
mov
repz
shlb
cs
jp
jno
mov
mov
sbb
pop
in
jecxz
jbe
in
xor
pop
das
imull
data16
lahf
imul
adc
push
adc
mov
jae
sar
icebp
ljmp
jl
pop
ficoms
cld
flds
adc
pop
xlat
fsts
test
nop
xor
pop
div
push
loopne
inc
pop
mov
fprem
iret
insl
cmpb
arpl
loop
in
call
mov
xlat
fcomip
mov
shrb
outsb
inc
neg
es
bound
add
int3
cli
adc
jp
addr16
fld
sbb
xlat
and
mov
dec
mov
shr
int
xchg
jecxz
cmp
add
mov
cmp
mov
cltd
jo
icebp
movsl
push
stos
adc
mov
and
or
jle
js
lea
inc
xlat
jmp
push
xor
push
push
inc
push
aad
das
dec
xor
xchg
pop
dec
pop
fwait
scas
inc
cld
mov
subb
scas
pop
mov
cmpsl
addr16
push
push
jnp
sub
sub
das
mov
pop
fldenv
jle
xor
dec
insl
lds
mov
push
push
and
jmp
and
mov
in
dec
xchg
cs
fxam
bound
repnz
push
movsb
pop
xor
sbb
dec
aas
jle
popl
test
fisubrl
dec
push
scas
pop
imulb
fwait
sbb
std
fmuls
xchg
mov
arpl
xor
push
out
push
and
sub
pop
shr
cmp
pop
adcb
and
jbe
lock
adc
ds
mov
leave
push
scas
fwait
inc
int3
pop
out
in
rcll
xlat
dec
or
pop
mov
mov
orl
xor
sub
inc
cltd
shl
arpl
daa
push
cmp
or
lahf
sub
push
add
stos
push
fldt
scas
dec
fnop
jns
push
mov
out
inc
xchg
pop
repz
pop
dec
xor
mulb
in
dec
add
fnop
rcl
daa
imul
rorl
dec
mov
sbb
dec
xor
out
fchs
scas
loopne
imul
add
mov
mov
xor
dec
pop
movsb
movsl
push
jbe
sub
stos
fsub
sub
adc
scas
pop
cmp
jbe
add
lret
push
sub
imul
aad
pop
xchg
int
push
gs
inc
xor
outsl
fldcw
jno
shrb
fbstp
push
rorb
ret
sbb
add
mov
or
push
shll
movsl
cld
gs
adc
neg
push
aas
dec
scas
popa
lcall
out
rorl
mov
sub
enter
push
pop
and
arpl
mov
cmpl
mov
jno
outsb
bound
pop
les
insb
pushf
mov
data16
in
out
pusha
adc
push
sbb
stc
mov
mov
push
adc
stc
mov
pop
xchg
xchg
fcmove
xchg
cmp
dec
mov
dec
aam
mov
test
and
sbb
pop
out
stc
push
test
dec
in
xlat
cld
cmpsb
std
cmpsl
mov
dec
or
or
out
mov
imul
int3
cli
gs
cld
ret
sbb
and
push
repnz
mov
and
ret
aad
rcrl
ljmp
int
mov
jg
scas
pop
leave
repnz
sbb
jle
mov
cmp
iret
sub
imul
aaa
test
test
lret
gs
aaa
rcrb
xor
adc
pop
or
test
in
mov
pop
xchg
cmp
sahf
pcmpeqw
loope
push
pop
inc
dec
fwait
xor
aad
pop
xchg
dec
cmp
or
loope
fisubrs
sbb
das
dec
and
jns
xchg
insl
mov
or
in
push
aad
dec
fiadds
sarb
in
dec
add
mov
testb
lahf
mov
dec
dec
rol
and
and
out
pop
fisubs
test
push
scas
movsl
int3
loopne
test
test
and
shll
pop
sub
mov
cltd
shll
ljmp
cmpsb
add
mov
imul
bsr
xlat
scas
ds
outsb
inc
cld
incb
fsubrs
xor
push
mov
sub
jnp
lcall
les
dec
xor
and
mov
rcrl
sbb
xchg
sub
jg
and
sub
cmpsb
and
inc
adc
push
push
adc
mov
mov
sub
lds
jl
fiaddl
imul
push
push
cld
sbb
fucomip
xchg
aas
rclb
adc
adc
das
popf
ret
xor
imul
pop
loope
xor
notb
pop
mov
fucomp
lods
in
dec
popf
pusha
cmpsb
mov
push
les
cli
rol
and
pop
test
les
add
jne
rclb
std
orb
mov
stos
mov
hlt
pop
dec
movsl
aaa
rcr
lods
pop
pop
cmpsb
jle
mov
dec
stos
xchg
xor
adc
mov
fwait
shrb
fisubl
test
push
js
adc
imul
or
cwtl
popa
adc
cli
scas
mov
call
ss
ss
pop
js
ret
add
lods
or
dec
loope
xchg
shlb
bound
out
add
xchg
in
aad
adc
mov
pop
adc
sbb
pushf
pop
clc
test
jbe
jne
pop
fwait
cltd
stos
insl
mov
pop
and
mov
out
sbb
scas
pop
cmp
jbe
add
popa
add
pop
xchg
and
pusha
sbb
ficomps
inc
add
cld
mov
push
and
mov
and
rcll
fucomip
push
add
ffreep
cmpsb
push
xor
add
mov
push
sub
xchg
mov
shrl
movsl
mov
mov
push
sub
xor
or
push
clc
or
test
das
and
push
outsb
mov
cmpl
scas
mov
scas
loop
mov
xlat
push
push
push
repz
lea
xor
ljmp
lahf
inc
popf
push
mov
lea
jb
push
jb
xchg
push
dec
imull
stc
mov
negl
dec
addr16
stos
das
adc
hlt
mov
push
loope
lods
lahf
jp
inc
sbb
push
das
or
inc
jge
jmp
cmp
push
hlt
jne
sub
or
or
aad
in
add
mov
outsl
in
xor
inc
xor
push
or
jno
ds
pop
sbb
lea
jae
out
or
mov
xchg
rorl
cmp
sbb
pop
jp
cmp
push
inc
or
lea
inc
sbb
mov
jg
and
add
fdivl
adc
cmp
aad
pop
pop
fcoms
js
aaa
adc
xor
mov
cmp
pop
scas
sahf
sbb
mov
cwtl
mov
push
pop
out
push
or
fsubl
xor
call
gs
dec
pop
lods
lcall
inc
out
loop
lds
push
push
cltd
bound
sbb
mov
push
adc
test
fistpl
test
inc
cmc
push
pop
xchg
test
cmp
loopne
jns
push
mov
sub
shll
push
es
add
or
fsubs
je
dec
push
sub
pushf
jae
sub
mov
dec
mov
xor
cmc
shlb
fistpl
xchg
xchg
test
ss
ss
add
and
xor
sbb
inc
add
shrb
cmp
inc
adc
lahf
dec
mov
fdivl
sub
sbb
push
in
popl
pop
pushf
fidivrs
xor
pop
ret
stos
push
and
scas
popf
jo
loop
popa
lods
arpl
pop
adc
jne
sub
sub
popf
push
sub
jg
cmp
enter
mov
push
dec
xor
pop
ret
stos
push
and
mov
mov
sub
addl
shll
cmp
mov
lcall
shl
data16
mov
dec
sbb
mov
xchg
mov
sbb
mov
adc
mov
addl
ret
and
jp
gs
pop
test
sub
mov
cmpsb
pusha
rorb
adc
cs
dec
adc
pop
sub
cmp
sub
and
mov
add
in
gs
es
adc
cmp
sbb
out
dec
jnp
movsb
ljmp
pushf
sub
das
dec
xchg
dec
mov
jecxz
sbb
push
sub
jnp
loop
jae
push
push
push
cmp
je
add
push
scas
mov
leave
bnd
fcoml
in
push
mov
ret
lods
shrb
jno
scas
add
ljmp
icebp
popf
push
sub
mov
outsb
add
cli
sub
adc
sbb
push
and
mov
mov
cmp
push
ljmp
pop
push
jg
adcb
cmp
pop
ret
pop
out
out
jo
incb
das
lret
xor
cmpsl
inc
das
mov
xchg
clc
fisttps
add
outsb
push
pop
pop
jmp
pop
jge
movsb
xor
movsl
xchg
dec
sbbl
mov
jp
fldcw
or
jne
or
pop
sbb
mov
mov
or
add
lock
fwait
bound
fistpl
sub
fnstsw
jmp
stc
movl
out
mov
jno
es
mov
dec
dec
repnz
xchg
adc
pop
in
xchg
dec
adc
adc
jle
imul
fnstcw
scas
test
bound
test
xchg
int3
scas
aam
mov
decb
popa
mov
fstps
jbe
shlb
cmp
in
imul
or
pushf
nop
jg
shll
rep
cs
add
mov
inc
sub
rcl
aaa
mov
scas
test
icebp
roll
add
dec
mov
cmp
jns
mov
add
mov
or
sub
inc
stos
jp
jno
push
imul
mov
cltd
mov
push
bound
inc
cli
mov
or
lret
push
loopne
loop
repz
in
sub
les
push
mov
mov
test
mov
pop
popf
outsb
das
imull
xor
xchg
xchg
test
in
cld
icebp
imul
lea
push
lods
sub
out
aad
lds
cmp
imul
xchg
push
movsb
pop
sub
and
subb
dec
sti
jg
mov
sar
cmp
adc
test
add
sti
xor
icebp
add
sub
lahf
loopne
mov
or
sti
lcall
loopne
ljmp
sbb
mov
and
and
mov
push
mov
negl
mov
rol
pop
aaa
std
data16
push
inc
outsl
pop
mov
jmp
pop
sub
mov
sub
jnp
pop
in
or
cltd
imul
stos
jbe
das
movsl
ret
cli
movswl
cmp
mov
or
les
and
xor
xor
adc
cltd
lods
incl
pop
ficompl
xchg
mov
push
or
arpl
add
ljmp
push
sub
jmp
ret
add
orl
lods
jne
sub
inc
and
hlt
fwait
cmp
cmp
test
bound
dec
xor
adc
cs
fdivr
cld
mov
mov
pop
xor
popf
push
sub
scas
pop
mov
jbe
or
push
adc
xor
push
ficompl
inc
mov
cmpl
daa
rolb
rolb
ss
and
push
loop
shrl
cmpsl
add
cmp
sti
mov
jmp
xchg
mov
xor
pop
loop
and
stos
iret
adc
lret
and
addl
pop
mov
popa
cwtl
push
ftst
pop
push
and
scas
popf
dec
mov
pop
shrl
bound
cs
fsubl
sbb
inc
add
pop
jg
pop
sbb
pusha
dec
int3
decb
adc
mov
in
adc
dec
ljmp
cwtl
repnz
je
adc
adc
inc
sbb
push
sub
popf
mov
mov
mov
dec
pop
fwait
ja
pop
mov
scas
ja
pop
mov
and
adc
mov
sbb
shll
sbbl
pcmpgtd
rolb
mov
dec
mov
sbb
fimull
jl
mov
cld
sbb
inc
popf
push
pop
mov
push
adc
into
push
mov
push
or
push
adc
pushf
pop
adc
pop
comiss
xlat
mov
aad
out
outsb
sti
mov
adc
ret
xchg
ret
push
jge
mov
push
xchg
sbb
leave
cwtl
mov
xor
sub
sti
push
lock
push
outsb
sub
or
xchg
xchg
jo
je
stos
cmp
loop
jg
imul
mov
aaa
pop
or
inc
and
inc
add
sahf
push
mov
or
jle
cltd
xchg
or
ficompl
pop
mov
fiaddl
push
push
vmread
shll
jno
popf
sub
and
adc
mov
xlat
shlb
mov
add
cld
in
insb
ja
aaa
push
pop
mov
jge
lods
in
int
push
push
repnz
push
fldt
in
xor
push
pop
dec
sti
xchg
popa
xor
ljmp
stc
loope
scas
int3
out
inc
mov
xor
fisubl
or
pop
mov
push
jg
imul
pop
daa
jae
mov
insl
sub
outsb
jl
jne
sarb
arpl
jecxz
insb
call
sub
stos
push
mov
sbb
loop
out
lahf
mov
sarb
add
aad
lds
sbb
js
dec
hlt
aad
in
cmpsb
mov
dec
stos
shll
out
jnp
and
push
sub
data16
push
into
ljmp
adc
ljmp
cmp
movsl
outsl
test
xchg
gs
mov
inc
rorl
pop
push
popf
push
out
xchg
int
sub
push
aaa
iret
jmp
out
in
lcall
mov
push
mov
pop
and
pop
scas
frstor
dec
sub
stos
adc
mov
mov
pop
mov
iret
sbb
ficoml
test
hlt
data16
stos
push
push
shll
inc
mov
push
insb
pop
adc
xor
jp
push
rcrb
icebp
xchg
and
push
push
mov
scas
mov
shl
push
test
xlat
mov
adc
fcmovbe
dec
add
sar
push
mov
add
jp
cltd
insl
inc
sbb
dec
xor
pop
ret
stos
push
and
mov
adc
mov
pusha
xor
jle
ret
jmp
scas
inc
lret
je
push
push
mov
push
add
pusha
enter
jge
scas
add
test
adc
push
add
rorb
cmp
enter
sbb
cmpsb
push
lods
mov
dec
add
fimull
sbb
sbbb
es
jge
lret
mov
dec
and
repz
mov
in
test
enter
inc
and
fwait
mov
inc
add
insb
cli
outsl
ja
aaa
fsubrs
aad
jno
fdivr
scas
cwtl
jbe
sub
push
push
leave
pop
fstps
or
bound
jbe
test
xchg
movsb
out
xor
bound
into
fsubrs
fsts
insl
mov
and
xchg
jbe
hlt
mov
xor
test
sub
out
mov
scas
imul
sub
out
adc
es
bnd
cwtl
push
stos
sti
fidivrl
or
movsl
cmp
mov
pop
xchg
das
popa
mov
aad
push
mov
pop
rorb
adc
dec
pop
adc
rclb
or
scas
insb
xlat
nop
pop
popf
adc
pop
pop
outsl
mov
cmp
addr16
inc
lock
fldcw
fcoms
push
mov
dec
call
loope
ret
sbb
add
push
mov
sub
inc
pop
les
aam
xor
mov
xor
adc
jmp
mov
jmp
std
jmp
mov
and
dec
mov
fidivs
movsb
jno
pusha
mov
sbb
jp
mov
add
popa
sbb
addr16
adc
inc
xor
in
and
push
cmc
pop
hlt
cwtl
inc
sbb
jecxz
or
inc
scas
and
push
mov
js
xchg
push
mov
push
scas
adc
jnp
mov
ficompl
into
sub
int3
jne
outsl
bound
inc
in
push
rol
repnz
mov
or
jnp
aad
lods
pop
call
dec
or
pop
push
pop
sub
xchg
and
push
cmp
dec
push
and
aaa
fisubrl
xor
insb
std
dec
gs
add
clc
ret
xchg
push
fists
and
repnz
sbb
test
insl
jns
imul
gs
push
mov
leave
outsl
sbb
inc
sbb
ljmp
sbb
fisubrs
lods
inc
lcall
push
mov
imulb
mov
xor
push
stc
and
arpl
push
cmp
add
mov
adcb
sub
mov
pop
test
push
mov
repnz
scas
or
dec
cwtl
and
int3
lods
adc
scas
dec
test
cmpsb
das
mov
push
fdivr
fildl
adc
jge
mov
leave
dec
dec
int3
stos
sub
mov
mov
cwtl
arpl
cs
mov
outsb
add
clc
popf
jp
rcrl
adc
cmp
jmp
dec
xchg
and
mov
addb
lret
cmp
loop
cmp
push
sbb
imul
push
daa
or
xchg
mov
outsb
dec
or
pop
int3
xchg
pusha
mov
xchg
and
sbbl
std
mov
mov
inc
add
pop
loope
cmp
dec
out
fidivl
push
andl
mov
push
ror
jnp
loopne
into
jl
hlt
add
mov
rcl
cmp
loope
stos
add
pop
pop
mov
mov
dec
pushf
aas
jle
pop
adc
xchg
imul
ret
stos
push
and
push
push
mov
scas
cwtl
mov
pop
arpl
push
and
cmp
js
nop
xchg
push
push
mov
ret
push
sub
push
push
loope
aam
push
xchg
fwait
sub
aas
add
lods
pop
mov
test
faddl
pusha
push
or
pop
into
pop
xor
popf
push
sub
xor
cmpsb
pusha
rorb
adc
fnstcw
in
jge
dec
sbb
push
sub
popf
mov
push
push
movsb
rcl
stos
enter
cmpsb
mov
push
arpl
aad
loope
inc
mov
aas
mov
fildll
call
ret
pop
sbbb
loopne
adc
adc
push
adc
dec
loop
dec
xchg
cmc
mov
pusha
rolb
dec
adc
push
les
popa
das
jns
and
stos
and
imul
cmp
jo
add
push
sbb
sarl
hlt
popa
pusha
dec
sbb
push
sub
sbbl
mov
xchg
mov
and
inc
cltd
jl
lahf
dec
std
jne
mov
sarb
add
pop
js
dec
cmp
hlt
jb
add
mov
and
sbb
xchg
rorb
inc
movsb
fisubs
in
add
repz
pop
mov
push
lods
push
test
dec
xchg
push
bound
lods
and
icebp
cld
fwait
push
push
popf
jg
les
orb
movsb
push
adc
fbstp
push
loop
add
call
lahf
fcompl
jle
and
jmp
cli
lea
add
in
dec
sbbl
movsb
push
push
or
push
adc
jns
adc
jle
inc
jbe
scas
aad
push
cld
fisttpl
sti
inc
sub
sbb
and
scas
stc
dec
lods
ljmp
jns
xchg
xor
decb
push
test
rcll
ja
mov
arpl
pop
jo
test
pop
mov
push
sbb
sbb
jno
mov
mov
or
leave
push
push
inc
sahf
xor
xor
fwait
addr16
xor
into
popa
jo
aam
loope
int
add
and
jbe
loope
sbb
push
push
orb
lret
or
mov
out
out
cmp
std
push
add
dec
lods
sbb
inc
push
shr
pop
mov
mulb
cmc
jecxz
mov
inc
push
and
lret
mov
adc
fidivrs
xor
sub
popl
push
jmp
sti
mov
out
dec
pop
sub
mov
out
popa
aaa
lahf
jae
dec
push
sbb
jge
or
lods
pop
push
dec
enter
icebp
roll
leave
xchg
xchg
push
push
daa
push
and
mov
lcall
mov
jle
pop
inc
nop
xor
ds
mov
mov
push
xor
into
popf
cmpsb
je
loopne
push
bound
loop
fwait
lock
dec
adc
push
orb
sbb
jnp
push
dec
ror
push
pop
stos
and
sbb
ljmp
fcompl
movsb
int3
cmpsb
sarb
adc
cmp
jnp
es
test
pop
es
or
sahf
sbb
pop
lods
or
mov
leave
pusha
inc
adc
and
adc
pop
mov
xchg
movsb
xor
sbb
cmp
push
adc
push
outsl
icebp
mov
scas
addr16
in
cmp
fisubrl
xchg
dec
nop
iret
inc
adc
rcrb
das
stos
and
sbb
sub
xchg
ljmp
mov
push
outsl
shl
push
nop
dec
shlb
lock
sub
cmp
pop
mov
xchg
jl
push
mov
mov
sub
pop
xchg
push
or
stos
stos
mov
jns
or
call
shrl
lds
sub
pop
xor
lret
inc
mov
mov
push
xchg
and
cmpsb
rcrb
imul
mov
jmp
rol
fsubrs
jmp
adc
ret
in
pushf
das
outsl
shl
fs
push
ja
cmp
out
and
pop
rorb
push
xchg
and
scas
adc
test
iret
push
sti
jge
sub
popa
and
mov
xlat
mov
xchg
rolb
adcb
mov
test
fucomp
pop
jle
add
push
sub
inc
aas
xchg
je
push
adc
push
jbe
sub
or
mov
mov
push
and
stos
shrb
jl
outsb
in
push
out
push
push
and
or
gs
scas
pop
xor
sub
daa
mov
shrb
lahf
js
mov
mov
push
ja
scas
mov
cmp
out
mov
bound
ret
mov
hlt
sub
into
aad
adc
or
xchg
daa
aad
jb
jb
inc
mov
pop
fimuls
stos
scas
int
pop
pop
pop
cmp
movsb
fldcw
sahf
scas
add
rorl
fdivl
pop
ljmp
loopne
mov
mov
pushf
inc
sbb
mov
int3
xchg
adc
or
sti
daa
scas
jle
pop
fwait
pop
dec
push
push
in
test
js
sbb
xchg
lea
mov
rorl
xchg
pop
adc
cmp
mov
pop
addr16
add
or
lock
fxch
push
loope
push
orb
mov
stc
mov
and
push
inc
cmp
add
jg
xchg
subb
out
pop
mov
xchg
mov
cs
push
out
shll
pop
repz
pop
incl
scas
pop
mov
out
lret
fwait
popa
fisttpll
push
mov
sub
out
mov
push
push
and
imul
sbb
mov
clc
xchg
mov
mov
push
or
ds
negl
aad
lret
pop
test
pop
add
jge
inc
outsl
push
xor
test
jbe
adc
cli
jp
clc
sahf
mov
mov
fcmovu
jnp
mov
mov
fisttps
pusha
movsl
leave
pmaddwd
and
outsb
fwait
push
aam
rorb
shlb
or
jecxz
push
mov
jl
jns
sahf
sarl
and
lods
leave
pushf
fwait
cmp
adc
push
lds
leave
shl
scas
adc
push
loopne
add
fcomps
sarb
out
jo
int3
inc
jp
xor
jg
mov
fwait
icebp
lret
cmp
stc
jae
add
jo
mov
fimull
and
mov
sahf
testb
loope
cld
ficomps
cmpsb
mov
xor
push
rcl
push
jecxz,pn
sbbl
lods
scas
aas
imul
mov
add
jmp
adc
jne
adc
mov
lret
push
mov
repnz
and
hlt
add
scas
mov
test
pop
xchg
add
cmp
mov
dec
sbb
push
xchg
int
xchg
shll
lods
fdivrl
in
shlb
cmpsl
loopne
inc
inc
adc
sbb
dec
xor
mov
lahf
jl
ds
and
or
loop
scas
or
scas
icebp
scas
xlat
enter
adc
pop
ds
daa
or
dec
ss
ds
lock
and
mov
push
cmpsb
sbb
hlt
inc
les
bound
or
sti
gs
lds
xchg
inc
sub
scas
adc
sarl
dec
or
and
repnz
xchg
mov
xor
pop
mov
pop
pop
aad
fs
xchg
adc
shrl
sahf
jns
sbb
push
scas
pop
into
dec
dec
out
pop
mov
pop
pop
sar
inc
enter
pop
push
cmpsb
mov
mov
scas
push
sub
cmpsb
stos
roll
inc
mov
and
jns
addb
sub
jo
push
repnz
mov
scas
mov
jno
sbbl
sbb
lcall
inc
adc
out
push
mov
pop
inc
or
xor
out
movsl
xchg
pop
stos
add
or
mov
fildll
fcoms
test
in
push
dec
jle
mov
mov
iret
dec
push
jl
bnd
and
adc
mov
call
nop
lods
mov
add
pop
jmp
ja
lock
dec
dec
insl
pop
jl
repz
shlb
inc
idivl
lds
sahf
scas
inc
xchg
dec
dec
sbb
popf
scas
push
mov
test
and
mov
dec
add
in
inc
fdivs
fstpl
cli
sbb
mov
mov
je
mov
div
repz
add
xor
dec
or
jecxz
dec
mov
aas
movsb
arpl
pop
add
adc
insl
jl
in
inc
daa
pop
int
test
dec
in
lods
or
cwtl
fcoml
dec
xlat
jne
xchg
lea
andl
xchg
mov
push
xchg
repz
icebp
cmp
xor
int3
adc
pop
push
jno
push
mov
les
dec
hlt
dec
std
inc
out
push
sub
push
xor
ljmp
pop
jmp
out
scas
adc
insl
movsl
les
test
ljmp
adc
xchg
adc
dec
jns
cld
leave
sub
dec
fdivl
in
cmp
adc
xor
adc
lahf
sbb
cwtl
push
nop
stos
push
mov
test
out
jle
dec
daa
imul
cmp
lcall
sbb
pop
pop
sbb
rclb
jb
adc
mov
nop
dec
adc
inc
push
mov
aaa
jns
cld
cltd
push
out
adc
rolb
jo
adc
mov
nop
sub
sbb
pop
test
push
inc
jo
hlt
jp
int
adc
icebp
fldenv
add
jp
ffree
dec
out
adc
mov
je
jo
adc
fidivrs
test
jo
adc
adc
push
adc
stos
mov
pop
add
push
mov
and
adc
fs
insl
dec
out
push
cmp
adc
jno
pop
mov
mov
stos
aad
stos
test
int
xchg
es
xor
push
and
mov
mov
popa
outsl
xchg
cmpsl
push
js
ljmp
inc
push
je
mov
and
mov
or
add
jg
test
jne
adc
mov
xchg
shrl
fiaddl
testl
clc
mov
push
sub
insl
mov
lahf
xlat
lods
fnsave
mov
mov
pop
and
pop
pop
pop
xor
and
je
arpl
mov
clc
orl
cmp
mov
xchg
cmc
adc
test
adc
lods
es
sti
idiv
pop
rcl
data16
icebp
outsl
stos
push
test
cltd
xchg
adc
cwtl
pop
imul
ret
push
loope
fdivs
mov
jne
sub
flds
push
enter
in
in
fidivl
out
stos
aam
inc
mov
mov
pop
mov
dec
insl
push
outsb
sbb
cs
dec
lock
fiadds
and
into
inc
jmp
push
sub
ljmp
jo
js
ljmp
inc
mov
pop
aam
dec
cmp
jo
fwait
xor
fbld
data16
call
dec
mov
loop
aas
push
adc
sub
loop
or
mov
push
scas
jb
dec
stos
cmp
ficompl
adc
fstpt
rclb
dec
movsl
int
sbb
test
ja
fcoms
stos
sarl
fs
mov
jmp
out
arpl
push
sub
aas
mov
test
imull
or
lock
jle
adc
inc
aam
push
mov
loopne
sbb
adc
jb
xchg
int
daa
pop
leave
imul
fists
pop
mov
sub
imull
rcrl
cmp
push
push
cld
fwait
jmp
mull
mov
cmp
gs
into
push
dec
loop
imul
push
rep
add
mov
scas
pusha
inc
in
jg
mov
shr
or
andl
cld
jg
jo
or
jo
loop
push
adc
pop
jns
jp
subb
test
out
sbb
int
in
dec
add
idivb
add
jg
stc
xchg
add
inc
add
mov
sbb
mov
mov
andb
les
push
mov
sbb
out
jnp
dec
jno
dec
sti
xorl
out
pop
xlat
ja
jl
mov
insl
mov
adc
loop
jne
jg
aam
nop
out
add
or
fildll
mov
cli
enter
addl
jns
scas
push
xor
das
scas
push
lret
jno
push
jp
jno
mov
sahf
or
insl
in
inc
decb
idivl
sti
cld
out
ljmp
inc
fs
lock
lret
sbb
xchg
movsl
xor
imul
shl
rol
push
lcall
lock
cmpl
and
add
stc
mov
clc
sti
jae
stc
fildl
in
and
or
mov
dec
mov
xor
jmp
or
sub
fcomi
ja
push
fcoml
loopne
jno
test
aaa
mov
xor
pop
lahf
dec
inc
movsl
push
jno
mov
adcl
mov
mov
add
xchg
dec
mov
jmp
xchg
nop
imul
xchg
adc
andl
daa
mov
xor
lds
or
sub
mov
mov
sub
repnz
in
jbe
sbb
push
xor
fsubp
jno
jp
popa
adc
pop
rcll
dec
xlat
lods
pop
clc
outsl
inc
mov
add
pop
sub
jne
pop
mov
push
test
ljmp
loopne
test
pop
push
leave
fwait
pusha
inc
dec
imul
rolb
push
adc
and
adc
and
rorb
or
push
sub
jmp
cmpsl
and
pop
mov
test
ret
das
pop
fidivrl
sbb
stc
dec
inc
out
adc
pop
xchg
jecxz
xchg
popf
imul
shrb
cwtl
int
sbb
inc
out
adc
push
arpl
mov
mov
adc
addl
in
je
por
sbb
and
mov
and
mov
jmp
pop
jg
aad
sbb
cli
mov
into
pop
sbb
push
xor
pop
shrb
mov
bound
sti
push
je
cmp
test
xchg
cmpsl
sbb
dec
mov
pop
scas
movsb
mov
fiaddl
ror
in
push
jg
gs
sub
andl
dec
push
or
loopne
sub
scas
mov
out
mov
mov
pop
cmc
into
negb
cmpsb
pop
xchg
sub
test
outsl
jle
xor
call
pop
adc
fisubs
push
mov
pop
adc
jmp
jns
hlt
loop
test
xchg
leave
orl
dec
or
dec
outsb
pop
in
pop
pop
bound
pop
push
loopne
add
xchg
jbe
dec
pop
sbb
push
push
adcb
rcrb
cmp
mov
jle
stos
xor
xchg
xor
in
loope
xchg
xchg
aam
add
sub
dec
push
mov
lret
testb
sbb
and
inc
test
mov
pop
cs
mov
mov
stos
inc
pop
arpl
test
mov
pop
inc
mov
fadds
sbb
test
sidtl
xor
lods
in
add
cmp
jbe
jl
pop
xor
mov
jne
lahf
jecxz
mov
or
mov
xchg
lret
mov
sahf
fcompl
leave
repz
clc
pop
ss
fstl
sub
sbb
xor
inc
ja
cmp
mov
push
inc
sti
pusha
icebp
add
in
adcl
sbb
adc
cmpsb
mov
int
inc
cld
das
cmp
clc
xchg
rol
jg
cmpsl
cmp
jge
pop
mov
sahf
jge
addr16
imul
add
repz
in
jno
sahf
mov
push
sar
pop
xchg
cltd
andb
sbb
mov
fsubs
test
add
icebp
and
add
adc
sarb
addr16
inc
jno
push
in
push
sbb
aas
out
xor
mov
push
inc
movsl
loopne
out
inc
adc
cmpsl
push
aam
adc
mov
sarb
pusha
cli
push
xchg
mov
jle
pop
jns
dec
push
mov
ret
sahf
sub
addr16
roll
pop
sub
cld
jnp
lea
mov
cli
sbb
xor
outsb
mov
sub
xchg
ja
adc
arpl
mov
xchg
test
adc
fwait
inc
clc
dec
movb
jle
xor
xor
xchg
add
out
notb
xchg
cmpsl
icebp
adc
andb
lcall
sbb
test
inc
in
ret
leave
jge
dec
xchg
loopne
lcall
cmp
shll
ror
push
jo
fbstp
out
dec
add
lret
jns
dec
repz
into
push
push
dec
cmp
sub
mov
fnstenv
dec
dec
jmp
stos
pop
mov
mov
and
loop
lods
xchg
sbb
or
adc
int3
xchg
dec
jo
loopne
cmp
push
cmp
dec
in
and
jo
mov
fsts
xchg
dec
jno
inc
cmpsb
and
pop
or
enter
loope
fnstenv
shrl
jp
xchg
shrb
mov
push
das
lahf
movsb
pop
mov
push
ficoml
jo
js
ljmp
cmc
mov
ret
xchg
mov
int
js
mov
scas
pushw
push
fcompl
cmp
dec
dec
push
in
insb
out
fidivl
xchg
cmc
ficomps
fistps
push
rcrb
mov
imul
hlt
fmuls
leave
out
mov
push
inc
mov
js
pop
cmp
faddl
sti
or
or
push
cltd
rcrl
adc
push
notl
mov
add
in
fcmove
push
pop
jp
or
mov
mov
shrl
adc
pop
mov
dec
jle
pop
in
pop
mov
mov
fs
cmpsb
stos
pop
sti
and
xor
enter
or
js
dec
popf
jg
push
stos
sub
stos
inc
add
shll
adc
pop
jbe
cli
mov
dec
pop
imul
pop
inc
push
adc
cmp
and
or
or
mov
daa
inc
rorb
das
aad
dec
test
xchg
lea
cli
incb
gs
adc
inc
daa
vphadddq
dec
mov
fscale
ss
int
test
pop
std
scas
adc
mulb
add
daa
push
mov
sbb
stc
sbb
xor
xlat
or
and
dec
ljmp
pop
adc
inc
repz
mov
sahf
clc
mov
cmp
sub
adc
jb
arpl
adc
xchg
in
cwtl
add
and
push
adc
mov
mov
push
cmc
sbb
adc
dec
push
adc
sbb
push
fadd
xchg
dec
stos
mov
andb
fsts
jg
adc
add
clc
int
sti
push
lods
aam
icebp
xorb
sahf
adc
int
jae
xor
adc
xlat
push
sub
push
adc
xchg
pusha
pop
jecxz
stos
sbb
pop
xchg
mov
gs
arpl
rorl
icebp
mov
inc
outsl
call
or
add
aad
fbld
jp
xchg
and
shll
js
sub
sbb
outsl
xor
cmp
lahf
int3
xor
incl
popf
cmp
jmp
scas
sbb
loopne
jecxz
scas
into
pushf
in
jle
and
mov
or
scas
lods
mov
lods
pop
cld
mov
out
xchg
pushl
popa
lahf
mov
stc
out
add
fisubrs
inc
test
push
fldl
lcall
pop
fcmovu
dec
or
and
lcall
push
loope
adc
xor
fnsave
mov
dec
lea
inc
sub
sbb
mov
add
xchg
aam
lcall
movsl
stos
outsb
jp
addr16
test
add
jne
push
lods
cmpsl
and
dec
test
mov
test
jle
pop
stos
lods
cmp
push
aam
mov
mov
jle
dec
sbb
loop
roll
stos
into
ret
push
lods
and
clc
push
jl
scas
inc
push
outsl
dec
mov
xchg
call
xor
ds
call
stc
aam
pop
xchg
movsl
sbb
mov
mov
int
and
adcb
and
mov
inc
test
mov
ret
push
lods
and
mov
jno
aam
pop
xchg
movsl
mov
out
and
cmpsb
jle
adc
fisttps
xchg
enter
or
rcr
fwait
sti
gs
out
clc
xchg
loop
mov
aad
dec
xchg
pop
stos
sar
jo
leave
adc
xchg
mov
push
inc
faddl
dec
mov
ds
pop
mov
cltd
or
adcb
push
jno
loope
out
popf
and
add
sarl
cmp
addl
dec
das
ret
adc
iret
push
push
test
dec
add
inc
jp
dec
ljmp
repz
push
adc
arpl
push
xlat
int
mov
xlat
clc
fstpt
and
lahf
test
sub
adc
sbb
and
push
adc
push
sub
sarb
cmpsl
lds
push
push
pop
cli
mov
push
popa
or
push
xor
sub
and
push
test
aas
lcall
lcall
lahf
jae
ds
xchg
sub
or
xchg
leave
mov
fdivrp
push
sub
fstpl
aas
cmp
and
xchg
add
fwait
das
aam
pop
jle
clc
and
sbb
mov
movsb
lods
mov
pop
mov
jb
xchg
jbe
pop
ret
popf
dec
adc
push
imul
add
push
out
mov
jle
xchg
loopne
lret
mov
rcrb
dec
mov
imul
aam
pushf
push
sbb
jo
xorl
jns
lods
inc
cmp
lcall
hlt
andl
sub
jo
or
into
mov
xchg
leave
push
jo
mov
push
cld
jno
out
imul
int
sbb
loope
xorl
add
and
or
movsl
nop
subl
push
pop
inc
add
fs
hlt
pop
pusha
hlt
aas
push
adc
push
jmp
xchg
mov
mov
sub
xchg
test
lods
fidivrs
loop
add
mov
out
sub
lahf
cld
and
bound
repz
xor
fisttpl
inc
mov
iret
rorb
cmpb
xor
ret
out
mov
xchg
xchg
out
mov
sub
xor
arpl
push
imull
cmp
xchg
dec
push
lret
repnz
arpl
sbb
mov
andb
xchg
jmp
dec
mov
repz
nop
xorl
shl
aas
popa
in
inc
out
mov
and
adc
push
and
mov
jae
mov
in
adc
jo
jb
shlb
mov
fwait
daa
aas
pop
mov
outsl
ss
js
xchg
mov
mov
scas
and
jb
cmpsb
mov
jmp
imul
mov
std
cli
ret
mov
test
test
leave
xchg
cs
sbb
iret
jae
lret
test
push
add
jmp
aam
and
xor
inc
xlat
push
test
mov
mov
rorb
and
addl
mov
push
adc
push
push
mov
daa
mov
lds
imul
push
push
adc
mov
inc
sub
loop
shll
mov
push
mov
rolb
hlt
aas
push
adc
adc
stos
add
sbbl
inc
push
lods
popf
aas
add
or
adc
stos
and
sbb
shlb
cmp
lods
pop
mov
add
push
adc
movsl
mov
and
out
xchg
scas
xchg
sub
mov
mov
int
mov
mov
insb
or
fsubrs
xchg
ja
adc
inc
push
adc
cld
or
je
fisubl
aam
test
push
push
sub
arpl
mov
xchg
sub
std
xchg
movsb
or
add
adc
inc
push
adc
repz
push
movsb
pop
inc
call
test
add
rcl
testl
dec
scas
mov
adc
mov
or
sbbb
repnz
mov
movsb
mov
cmpsb
pop
inc
maxps
dec
rcll
dec
dec
push
cli
sub
pop
push
and
lods
loopne
movsl
ds
pushf
movsb
cmp
arpl
fidivrl
adc
stos
mov
mov
cmpsb
pop
mov
jae
dec
insl
push
xchg
enter
xor
loop
jge
push
scas
sub
sbb
pop
mov
pop
inc
or
add
addb
movsb
adc
stos
and
sub
aas
xchg
inc
inc
test
or
jbe
fsubs
and
sub
adc
inc
movsb
mov
ljmp
test
add
insl
inc
jp
inc
inc
fs
cmpsl
cwtl
outsl
push
cmpsl
adc
aad
shll
movb
popa
add
mov
mov
dec
or
sub
jbe
repnz
rcrl
fcomp
add
or
xlat
sbb
mov
jmp
push
pop
orl
stos
jl
into
push
cmc
push
jle
jne
ja
outsb
xchg
xchg
pop
mov
jns
cmp
pop
insl
fcmovb
push
xor
nop
repz
in
inc
lcall
pop
inc
jnp
push
loope
out
in
cmp
repnz
lcall
cmp
cld
pop
arpl
ljmp
add
out
xlat
xor
loopne
adc
das
mov
jb
bnd
jbe
out
pop
adc
jb
pop
cmp
or
dec
jb
fcomps
or
adc
xor
test
pop
adc
pop
mov
sbb
cmc
pop
adc
iret
ret
loope
adc
leave
ror
jno
sbb
jns
rorb
adc
xchg
divb
sti
jp
push
loopne
adc
jnp
push
sub
pop
adc
jbe
adcl
jecxz
lret
icebp
jle
add
icebp
pop
adc
addl
or
adc
jnp
shlb
mov
mov
mov
jg
repz
pop
in
testb
sti
sbb
cmpsb
push
in
pop
adc
mov
call
or
adc
daa
mov
testl
inc
scas
add
inc
xchg
out
cmpl
inc
movsb
push
mov
nop
cmp
pop
adc
jne
xchg
sbb
inc
lock
adc
adc
shlb
pop
sahf
add
mov
jmp
ljmp
sbb
rcrl
pop
inc
in
sti
pop
adc
adc
push
fcomp
add
adc
xchg
in
fidivl
loop
lods
cmp
push
or
pusha
sbb
mov
jl
or
imul
inc
mov
mov
std
push
inc
push
adc
and
rclb
in
scas
mov
or
pop
xlat
mov
sbb
and
clc
add
pop
sub
inc
lock
and
ds
inc
pop
xor
mulb
rcrb
je
and
push
fwait
pusha
mov
pop
cmp
push
dec
inc
ret
pop
mov
push
adc
inc
push
adc
pop
scas
mov
push
inc
jl
lock
dec
loop
or
cwtl
shlb
adc
mov
jnp
cmp
push
inc
xchg
cmpsl
popf
aas
inc
inc
call
xchg
inc
pop
aaa
cmp
cmp
enter
mov
pop
mov
jb
jle
dec
std
jbe
inc
xchg
cs
mov
xchg
idivb
in
mov
outsb
sbb
adc
xchg
add
ss
nop
pop
fucomip
pop
and
ds
inc
pop
xor
inc
ret
adc
jl
push
aam
xor
or
loope
mov
mov
lea
mov
cli
xor
rcl
testl
out
pushf
jmp
jge
pop
mov
add
push
adc
scas
mov
pop
or
mov
in
pop
or
sub
loop
test
or
adc
jne
or
bound
adc
cmpsb
mov
push
jecxz
dec
cmp
cmp
stos
repnz
inc
sub
cmp
push
sub
mov
xchg
xchg
fmulp
jge
testb
dec
adc
dec
adc
pop
in
sti
mov
sub
mov
aad
add
jecxz
mov
add
out
cwtl
cs
sbb
and
repnz
xlat
dec
out
dec
movsb
push
and
mov
jne
xchg
gs
inc
adc
in
mov
out
adc
mov
loopne
cmp
pusha
or
js
xchg
shlb
arpl
ffreep
test
mov
pop
jle
xor
arpl
jo
repnz
mov
and
sbb
movsb
pop
psubusw
mov
inc
movsl
icebp
push
in
and
dec
out
push
adc
dec
iret
addl
lock
add
mov
add
ds
mov
mov
enter
mov
and
adc
add
or
push
mov
add
push
rol
jbe
cmp
arpl
pop
movsl
jb
cmc
mov
cmpsb
adc
icebp
push
jge
adc
cmc
sahf
std
in
ja
clc
ret
loop
aas
popa
ret
aaa
sbb
scas
pop
mov
data16
dec
mov
sbb
ds
jns
xor
xchg
jg
push
push
xchg
add
add
push
xor
add
addl
outsl
xor
arpl
aam
mov
ds
bound
clc
jnp
dec
aam
push
loopne
je
out
adc
and
cmp
and
mov
push
adc
aad
xchg
cmp
unpckhps
sbb
cs
test
insl
push
lods
push
test
mov
push
adc
sbb
or
xor
push
sbbl
mov
adc
or
lret
jg
mov
int
aaa
lret
xchg
or
inc
iret
push
subb
cmp
lret
mov
adc
pop
es
imul
addr16
popf
popa
sub
test
or
test
cmc
xor
jecxz
sub
lcall
sbb
or
and
add
sub
iret
test
inc
add
scas
aas
dec
imul
pop
daa
aam
std
sti
jl
test
stos
call
in
mov
pop
or
pop
ds
fbld
add
and
scas
jne
andb
and
out
into
mov
pop
rcll
insb
dec
iret
or
adc
fidivl
fsubr
fstpl
fnstsw
sub
mov
jle
or
aas
jle
push
imul
xor
frstor
sbb
cmpsb
xchg
pop
cmp
push
cmpsl
out
aaa
je
add
pop
sub
stos
sub
mov
shll
mov
add
shll
mov
push
adc
jl
mov
push
inc
push
jecxz
dec
jo
lea
nop
push
jae
push
sbb
sub
dec
sub
dec
add
call
cmc
push
dec
out
es
mov
fs
sub
stos
sti
fsub
popa
fistpl
sub
cmc
and
sbb
scas
mov
pop
mov
inc
add
scas
shll
inc
loope
scas
test
insb
inc
mov
ds
lret
jmp
sub
test
mov
xor
call
popa
xchg
scas
mov
or
dec
cmp
xchg
ficomps
daa
les
mov
lods
push
addr16
and
cwtl
lods
pop
push
je
insl
movsl
test
xchg
in
cmpsb
les
or
cmpsl
mov
cwtd
mov
mov
cmp
repz
out
lahf
cmp
fwait
loope
into
dec
mov
call
outsl
mov
adc
cmp
in
mov
add
out
lea
push
lret
cwtl
ficomps
rcrl
mov
inc
test
xchg
xchg
sub
push
adc
daa
lods
mov
lock
xor
shr
push
fwait
nop
pushf
push
sbb
ret
push
cmpsb
mov
iret
mov
mov
in
xchg
out
jmp
sub
jmp
or
mov
incb
dec
jge
pop
jbe
or
push
jecxz
pop
add
dec
xor
jl
mov
jnp
jg
outsb
xlat
incb
jmp
push
notb
add
mov
lods
decb
test
bound
rclb
push
push
sbb
cld
popf
and
jp
pushl
icebp
imul
xor
fwait
ds
aad
mov
mov
ds
mov
mov
xor
sbb
pop
mov
in
push
push
and
addr16
roll
xchg
cltd
testb
ret
or
mov
xor
xchg
jecxz
jne
arpl
popf
jnp
cltd
call
in
adc
stos
xor
inc
xchg
sub
xor
or
push
adc
lods
fwait
jbe
aam
inc
ret
fistpll
sbb
test
das
enter
mov
loop
sarb
repz
push
lods
mov
xchg
lock
inc
jg
sub
adc
mov
and
push
adc
jg
sub
push
ss
pop
test
push
xor
dec
ret
adc
xor
in
sub
mov
mov
ficoms
mov
jns
adc
cmp
push
movsb
test
lret
mov
iret
loopne
cmpsb
inc
mul
arpl
jge
pop
adc
fistl
push
adc
xchg
out
dec
push
cmp
dec
dec
xchg
movsl
jae
inc
push
adc
stos
cmp
push
adc
mov
clc
or
adc
popf
push
lds
rorb
in
xchg
sbb
repnz
adc
cmc
or
jmp
adc
sub
movsb
aas
inc
add
inc
dec
imul
cltd
aad
push
pop
mov
add
push
pop
xchg
in
lods
mov
dec
movsl
sub
push
dec
adc
imul
scas
push
arpl
jl
mov
test
mov
pop
dec
push
cmp
popa
rcr
add
adc
inc
data16
pop
jbe
ret
adc
dec
inc
mov
fisubs
or
nop
and
cmp
jo
jo
mov
and
sbb
movsl
ss
sub
dec
mov
adc
mov
inc
mov
pop
adc
in
xchg
out
and
push
adc
lods
pop
mov
dec
rorb
inc
out
ret
pop
mov
push
adc
inc
push
adc
sbb
mov
push
inc
sbb
and
or
pop
lods
fidivl
sbb
jns
adc
fsts
xor
roll
push
daa
cld
mov
adc
adc
add
inc
ljmp
pop
aaa
xor
fs
sbb
test
stos
push
test
pusha
inc
mov
ds
mov
pusha
inc
insl
inc
push
lahf
js
mov
movsb
xchg
mov
sarb
pop
loope
pop
dec
iret
jl
xchg
shl
or
xchg
pop
push
scas
lret
pop
adc
lock
repnz
adc
cli
cld
and
cli
jl
cltd
pop
xor
pop
mov
cltd
mov
outsl
ret
adc
in
pop
or
push
xor
loopne
push
sbb
jns
fldl
les
sarb
dec
leave
fucomip
leave
sbb
mov
dec
movsb
mov
fsub
in
xchg
sub
aaa
mov
pop
adc
ficompl
repnz
adc
mov
sub
stos
shl
mov
mov
mov
push
adc
xor
and
xorl
dec
mov
jns
sarb
mov
mov
mov
push
aas
push
ds
dec
add
adc
pop
out
adc
pop
jno
repnz
adc
add
add
lcall
or
insl
lods
movsb
ljmp
rclb
repz
pop
daa
lock
mov
mov
mov
fidivs
out
mov
dec
fldenv
out
das
mov
test
jb
jecxz
sbb
and
add
das
addr16
movsl
sbb
gs
push
mov
sub
test
scas
ss
xor
fs
arpl
and
shll
insl
outsb
mov
sbbb
in
jecxz
jne
adc
adc
jl
arpl
sbb
ret
mov
in
pop
sbb
stos
push
sbb
movsl
pop
jecxz
mov
adc
mov
rcrl
jle
mov
daa
int
inc
jns
jno
sub
mov
fists
cwtl
aas
loop
icebp
ljmp
out
inc
push
push
and
dec
ss
insb
movsl
lcall
jg
imul
push
hlt
shrl
mov
xor
andb
int
cs
in
rolb
mov
xor
jae
adc
movsb
mov
dec
xchg
insb
int
push
in
dec
aad
das
mov
xlat
es
or
cmc
dec
out
int3
xor
inc
push
adc
dec
lret
pop
pop
add
and
cmp
sbb
gs
cwtl
inc
xor
arpl
dec
dec
sbb
xor
idivb
sub
jg
jmp
shl
fldt
mov
mov
and
mov
push
and
enter
xlat
lock
dec
popa
rolb
mov
cs
mov
jle
lods
pop
das
mov
clc
inc
ds
dec
lahf
dec
int3
testb
cs
mov
repz
push
adc
in
mov
pop
cmp
or
sbb
stos
push
fsubr
push
arpl
dec
loopne
pop
shl
push
or
and
xor
into
fldenv
push
and
inc
pop
cmp
cld
aad
sub
or
idivb
and
addr16
mov
jmp
ljmp
or
negb
add
in
or
push
ret
jbe
sbb
pop
cmp
pop
cltd
leave
sbb
popa
popa
cwtl
mov
adc
and
dec
call
cmpsb
fdivrl
scas
push
xchg
jns
popa
cmp
pop
fwait
xor
jnp
daa
adc
push
in
aam
and
iret
sahf
popa
nop
mov
into
pushl
and
daa
xchg
pop
pop
and
xchg
push
push
aas
mov
sub
andb
fcmovbe
dec
mov
and
mov
jmp
outsb
or
cmc
push
mov
mov
add
cmp
ljmp
and
mov
sbb
fsubp
push
sub
pop
sub
jp
push
push
cmpsl
dec
xor
push
in
pop
or
push
pushf
addr16
and
xchg
test
fistps
push
push
sub
pop
daa
fnsave
push
out
pop
scas
fwait
mov
jno
out
lods
imul
push
adc
lods
out
lsl
lret
aam
and
not
xlat
push
inc
in
scas
adc
cmp
mov
iret
mov
cmp
mov
xor
outsb
xchg
cmp
mov
xchg
adc
dec
decl
mov
sub
xor
mov
pop
adc
push
out
pop
adc
std
inc
push
adc
add
or
adc
push
fs
fisubl
dec
xchg
sbb
mov
nop
push
mov
jge
sbb
dec
push
sbb
loopne
aad
mov
in
adcl
setns
adc
cmp
mov
pop
mov
mov
xchg
cmpsl
jmp
push
adc
mov
insl
sub
std
cmpl
loop
ret
popa
adc
inc
fldcw
in
cmp
rol
sbb
loopne
add
xor
push
scas
cmp
lock
xchg
mov
push
lret
mov
sti
insl
out
movsl
mov
jb
out
push
xor
aaa
jmp
popf
jecxz
lret
push
xor
sub
inc
bound
or
cmp
les
mov
lahf
pop
fidivs
xlat
sub
pop
es
pop
stos
popf
arpl
loopne
and
ret
sbb
std
mov
push
flds
loope
mov
out
dec
adc
loop
cld
imul
mov
pop
mov
fwait
cmpsb
pop
cmp
rorb
adc
outsl
test
push
mov
dec
mov
hlt
mov
jp
or
mov
rolb
shll
push
mov
pop
push
jmp
xchg
mov
imul
fwait
dec
es
fisttpl
int3
jbe
xor
sbb
adc
outsl
xor
sbb
push
add
insb
pop
cld
bound
push
sub
sub
mov
and
push
test
dec
pop
mov
pop
dec
mov
cmc
cwtl
mov
or
push
arpl
cmp
push
aad
or
jl
xor
popf
aas
jmp
outsb
or
push
inc
sbb
mov
pop
pop
sub
adc
ffree
adc
mov
xchg
push
jne
pop
jle
mov
jle
mov
fists
nop
or
in
add
aaa
mov
jp
scas
std
push
add
add
test
mov
push
xchg
sbb
jge
movsl
mov
push
rcrb
test
ljmp
add
lods
popf
mov
push
stos
push
sub
jne
push
aam
mov
inc
or
sub
stos
fucomp
test
in
bound
adc
mov
roll
or
mov
je
aad
xlat
int
mov
lcall
push
imul
inc
in
inc
ficompl
jb
adc
nop
dec
addr16
push
dec
adc
test
cmp
sub
push
or
push
outsl
push
push
jge
push
aam
push
test
mov
push
add
xor
mov
mov
mov
pop
negl
sbb
xor
pop
mov
lahf
stos
jle
add
fs
pop
pop
xchg
mov
adc
into
inc
daa
insl
dec
xchg
pop
jmp
fistpl
adc
scas
cmpl
pop
pusha
mov
add
xor
xlat
sub
dec
call
and
add
test
int3
call
aam
pop
xor
mov
lcall
push
insb
aam
jg
cwtl
xchg
movsl
rcrl
stos
jns
xor
or
xchg
xor
out
dec
push
jmp
xor
and
jl
pop
and
inc
ljmp
pop
outsl
or
inc
pop
or
inc
arpl
int3
lock
out
sahf
imul
je
adc
sub
or
cli
mov
orl
dec
sub
jle
je
mov
pop
ja
inc
pushf
mov
outsl
stos
mov
mov
repnz
inc
push
jae
int
sub
out
test
lock
mov
fadds
push
jb
hlt
mov
push
lahf
ljmp
push
cltd
gs
andl
popf
jae
shll
xchg
pop
movsl
pop
sub
jecxz
scas
outsl
es
lcall
enter
mov
add
iret
mov
jp
push
outsl
imul
push
jae
ds
bound
jle
shl
xorb
add
shl
adc
fs
aam
jns
inc
je
adc
testl
andb
std
stc
mov
popf
xor
call
jecxz
dec
jo
adc
mov
jo
adc
add
push
dec
enter
aam
xor
adc
xlat
dec
sub
lock
mov
jmp
add
fnstsw
cmp
xchg
xlat
out
dec
sbb
jno
cld
in
push
pop
data16
sbbl
mov
in
inc
scas
or
mov
mov
sub
and
inc
or
xor
xchg
add
shll
push
test
adc
cmpb
dec
push
sub
pop
jne
inc
add
lea
sub
push
mov
inc
lret
xchg
ficomps
out
adc
mov
add
sub
push
and
out
ljmp
inc
or
mov
nop
inc
inc
andnps
adc
rcl
inc
notb
push
mov
xlat
cli
nop
xchg
pop
loopne
lea
ljmp
and
inc
xor
fdivr
mov
dec
call
and
or
rclb
mov
icebp
adc
mov
xor
add
adc
ljmp
in
leave
mov
pop
cmp
push
daa
gs
push
adc
sbb
jle
iret
loope
add
xchg
das
or
xchg
push
push
pop
cmovnp
push
mov
jne
fidivl
sub
adc
ljmp
roll
test
pop
cmpsl
xchg
daa
adc
out
dec
fiaddl
or
xchg
mov
mov
mov
dec
sbb
ljmp
aam
sbb
arpl
shr
repz
rcr
outsb
or
mov
and
xor
adc
push
adc
adc
cmp
cmc
in
jbe
xchg
mov
sub
and
scas
xchg
inc
inc
pop
cmp
add
pushf
aas
shrb
test
mov
inc
sub
cld
and
sbb
loope
jmp
bound
add
shlb
dec
les
dec
inc
xor
pop
jmp
sub
jmp
andl
mov
sbb
shlb
inc
push
jmp
fstpl
lahf
dec
popf
mov
cmp
xchg
dec
aas
jl
jo
xchg
pop
push
test
mov
push
sub
push
adc
andl
push
and
adc
call
push
dec
je
adc
fcompl
fistpl
lret
lock
xchg
push
push
aad
xor
loope
mov
inc
xchg
loop
aad
outsb
pop
dec
dec
movsl
jne
ret
call
out
push
dec
push
lahf
add
mov
rcl
shlb
cmpl
daa
and
icebp
adc
decl
mov
jne
xchg
mov
sub
pop
mov
mov
jae
xchg
pop
out
jp
cmp
mov
ds
mov
and
iret
pop
mov
xlat
sub
sbb
insl
mov
aad
dec
out
push
int3
cmpsl
mov
push
pop
call
cld
mov
test
mov
mov
mov
test
outsl
outsb
fwait
iret
mov
and
and
fidivl
loop
loopne
adc
data16
xor
jmp
and
test
xchg
mov
add
outsb
mov
push
sbb
adc
fisttpl
inc
jecxz
mov
mov
sbb
cltd
push
lret
pusha
jne
mov
or
mov
adc
test
push
lods
fwait
cmp
cwtl
jecxz
xchg
inc
push
adc
loope
sbb
in
aad
lock
stos
dec
mov
mov
jb
inc
inc
and
mov
pop
es
pop
inc
sbbl
ja
cli
push
ret
jnp
clc
mov
adc
das
into
clc
mov
jle
mov
outsl
iret
repnz
and
fdivrp
enter
xchg
movsl
pop
cmp
filds
adc
or
dec
mov
imul
data16
add
mull
loope
cld
repz
dec
cltd
xor
adc
fcompl
mov
sub
movsl
es
in
fadds
nop
jge
sbb
fmull
loope
cli
pop
insl
jns
sub
mov
test
rolb
shll
push
or
fxam
test
mov
mov
lahf
aas
shr
add
in
fisubl
push
ds
test
mov
mov
push
mov
jecxz
xorb
pop
cmc
rcrb
sub
nop
scas
lods
shrl
fwait
js
repz
cmp
pop
adc
mov
inc
pop
sub
sbb
daa
xor
pop
sub
ficompl
fst
pusha
mov
pop
popf
mov
scas
pop
lods
lods
jmp
aam
rolb
mov
shll
push
stos
clc
fisubrl
repz
aad
mov
incb
loope
add
clc
adcl
arpl
nop
test
jae
decb
inc
or
inc
sub
push
adc
addb
mov
dec
push
sbb
adc
sti
popa
sub
push
adc
cli
push
stos
sub
pop
add
popa
repz
pusha
mov
jecxz
xorb
pop
add
idivl
and
enter
movsl
dec
cmp
sti
xor
push
test
rcl
pop
push
xor
sub
ret
enter
movsl
cmp
dec
pushf
aas
add
sbb
push
fcompl
xchg
arpl
fwait
jl
cmc
mov
imul
scas
inc
adc
mov
das
mov
pop
into
push
mov
cmpsl
dec
sahf
xchg
ljmp
outsl
shll
out
pop
testb
int
pop
sub
mov
lcall
add
leave
adc
icebp
dec
inc
push
adc
sub
pop
adc
ds
push
outsb
outsb
ss
leave
mov
xor
mov
add
jge
out
xlat
aam
call
lds
mov
sub
pop
adc
lods
addr16
and
adc
pusha
test
jne
lcall
cmp
mov
cmp
add
or
lea
shl
adc
repz
push
jecxz
pop
add
adc
mov
mov
xchg
mov
imul
jb
xor
pop
adc
nop
and
add
pop
adc
insl
insl
sub
sub
in
push
icebp
pop
adc
jg
call
call
push
sub
inc
daa
dec
push
pushf
or
adc
pop
xor
jp
bound
or
popf
imul
outsb
call
adc
es
push
sahf
subb
divb
cmp
pop
loope
adc
fucompp
add
iret
ret
in
adc
testl
xorl
or
push
cmp
lret
or
adc
jo
or
or
sbb
nop
dec
ljmp
nop
aam
sbb
fcomps
push
hlt
xchg
sbb
mov
xchg
xchg
lock
xchg
icebp
inc
xchg
xor
cmpsb
mov
arpl
and
popf
xchg
add
pop
adc
fcoms
xchg
ljmp
lret
fwait
add
fs
das
mov
arpl
and
xor
and
jb
fcmovbe
fldlg2
dec
pop
out
out
out
adc
push
mov
sahf
imul
repnz
dec
and
inc
aad
inc
or
jnp
adc
data16
arpl
ret
loop
imul
xchg
push
push
fidivs
sub
xor
icebp
fldcw
movsb
lret
fisubrs
dec
out
push
adc
out
les
adc
enter
add
sub
aam
push
adc
cmp
pop
out
movsb
inc
pop
mov
ss
sub
push
mov
les
stc
push
stos
ret
inc
fstpl
cmc
push
cmpsl
jecxz
lea
pop
and
xor
jge
or
cmp
out
adc
pop
stc
mov
inc
sub
std
push
loope
fnstenv
je
cwtl
jle
mov
pop
lock
rolb
mov
mov
dec
inc
push
adc
cmc
pop
mov
cmp
stc
lock
push
pop
cltd
fdivrl
inc
call
out
and
int3
mulb
cmp
dec
jmp
test
ret
push
ds
ljmp
or
and
imul
scas
dec
lahf
dec
sbb
imul
mov
fsub
push
adc
mov
push
shlb
cli
pop
adc
outsb
add
xchg
fnstsw
and
push
push
or
inc
mov
push
mov
fbstp
lods
xor
cwtl
push
adc
pusha
push
xor
daa
sbb
mov
inc
fcompl
or
pop
lahf
push
out
add
pop
test
shlb
popa
and
push
cmpsl
fcom
out
adc
mov
loop
out
in
clc
mov
jle
mov
fwait
adc
dec
xchg
cmp
mov
cltd
pusha
inc
enter
js
aad
push
and
push
arpl
adc
pop
xor
jo
pop
adc
filds
sahf
rol
movsb
cld
pop
adc
shrl
lock
adc
mov
cs
pushf
testb
pushf
into
push
push
fists
out
adc
sub
adc
sbb
ljmp
pop
adc
ret
mov
into
fcomps
mov
test
jecxz
movsl
or
shr
jecxz
mov
insl
aaa
popf
daa
xchg
aam
aad
loope
pop
mov
fcoms
lahf
sahf
mov
lahf
mov
dec
aam
jp
sbb
je
adc
push
adc
rcll
test
add
mov
movsl
push
sbb
lret
sub
mov
loop
shlb
aam
pop
ja
popf
loope
enter
push
mov
pop
and
imul
lret
out
and
repz
ss
mov
in
jle
jle
rcrb
or
xchg
mov
push
xchg
sub
mov
test
mov
int
jae
ds
inc
xchg
pop
mov
les
sbb
mov
and
cmp
loop
test
add
cmpsb
incb
dec
and
mov
mov
cmpsl
outsl
adc
mov
mov
in
cmpsl
xor
ret
sarl
push
out
fwait
lret
je
dec
inc
or
sbb
inc
sub
adc
sbb
imul
xchg
dec
adcl
or
xlat
sub
add
push
push
push
dec
push
outsl
les
nop
pop
xchg
push
mov
lods
mov
push
adc
inc
das
pop
sub
adc
es
sub
stos
and
dec
push
ret
jae
sahf
outsl
mov
pop
adc
pop
inc
orl
cmp
push
daa
xchg
test
mov
call
xchg
movsl
incl
iret
loopne
jb
lds
cmpsl
and
pusha
xlat
mov
iret
arpl
pop
call
cmp
push
call
fs
or
jge
fnstsw
push
cmpsl
fiaddl
orb
push
fdivrp
mov
mov
imul
dec
sub
test
jle
adc
jne
mov
mov
lods
mov
imul
icebp
clc
negb
push
in
mov
test
mov
mov
mov
lods
xchg
jb
sarb
dec
push
adc
mov
pop
cmp
pop
adc
adc
out
js
cmc
nop
dec
ret
dec
sub
cs
xchg
sub
adc
mov
push
rol
test
into
in
hlt
xor
xor
cmp
loop
jmp
imul
sub
hlt
in
cmpsb
mov
inc
mov
fstps
adc
mov
sahf
loopne
nop
aad
addr16
shr
scas
pop
out
fisubl
mov
cmpsl
add
lods
pop
into
int
inc
movsl
cmp
sarl
xor
mov
cwtl
pop
jmp
out
inc
cmpl
cmp
mov
push
sbb
inc
pop
shl
sbb
and
xor
movsl
ds
sbb
cmc
clc
testb
sbb
push
pop
sbb
push
movsl
sub
orl
mov
cmp
ficoms
and
add
dec
push
adc
cli
sbb
lock
out
sbb
repz
test
ret
aam
mov
nop
inc
pop
test
mov
movsl
movsl
pop
lock
pop
or
jg
or
das
pop
rcr
or
adc
in
dec
pushf
jl
shll
inc
jle
adc
pushl
hlt
popf
popa
dec
sbb
fwait
xor
sahf
daa
adc
cmpsb
sbb
or
mov
cwtl
push
adc
mov
push
adc
sbb
pop
adc
lds
fcomps
fsub
sahf
sarb
adc
out
and
fcomps
or
orl
adc
dec
add
dec
fimull
fcomps
test
push
mov
push
mov
cmpsb
jle
jno
icebp
jmp
cwtl
mov
sbb
jne
inc
jae
cmpsb
add
push
pop
cld
rcll
cld
sub
push
rolb
jnp
dec
xor
jle
push
nop
xchg
xchg
pusha
inc
jg
ret
es
aad
imul
dec
les
in
add
inc
jg
jb
adc
mov
mov
clc
inc
xor
repz
stc
je
sarb
push
lock
adc
loopne
sbb
and
xchg
inc
or
adc
cmc
arpl
push
adc
inc
jge
insl
call
enter
dec
mov
dec
lret
cmp
cmp
mov
imul
pop
xor
lods
push
jmp
add
cmp
in
lock
adc
or
mov
shlb
jecxz
jmp
jbe
lods
ret
imul
jecxz
fists
clc
and
cmp
ret
xlat
movsl
cltd
stc
ss
ss
daa
adc
adc
in
pop
and
dec
mov
lds
mov
push
xlat
clc
mov
ret
mov
jns
ss
filds
cltd
out
or
pop
sub
add
mov
fidivl
in
lods
nop
add
xor
inc
or
xchg
jb
dec
inc
dec
mov
xor
loope
loope
les
pop
mov
sbb
sub
jg
xchg
outsb
jmp
dec
and
iret
mov
add
leave
pop
jp
and
push
push
ja
loope
and
or
or
rorb
or
mov
movsb
jmp
sub
pop
adc
xchg
sub
andb
rol
push
mov
mov
xchg
bound
hlt
pop
adc
test
mov
dec
setp
movsb
fisttpl
mov
push
cwtl
push
adc
mov
push
pop
sub
in
testb
scas
pushf
xchg
aad
rorb
fcomps
in
adc
fdivs
addr16
jle
mov
push
cmp
fdivs
inc
stos
orb
push
aaa
inc
pop
ljmp
xchg
arpl
aaa
cmpsl
dec
add
pop
cmp
push
hlt
in
scas
jge
pop
dec
iret
movsb
cmp
push
and
or
movsl
xchg
push
imul
dec
ss
das
shl
mov
push
push
sub
sbbl
pop
movsb
dec
ss
orb
imul
testl
mov
sub
inc
push
fs
rorb
or
jmp
push
rorb
pop
mov
inc
movsl
fildll
imul
popf
ljmp
call
cmp
aam
scas
das
je
sub
mov
dec
lahf
stos
jle
add
push
cmp
sbb
push
jle
sub
out
imul
pushf
jmp
shrb
inc
inc
andb
mov
push
pop
in
push
and
or
mov
mov
xor
ja
pushf
in
sub
stos
in
mov
les
push
xchg
push
inc
ja
sbb
inc
jne
mov
out
hlt
fsubs
lea
roll
xchg
lods
or
pop
dec
test
adc
mov
dec
fistpll
mov
enter
mov
or
aam
je
or
mov
hlt
rcrb
dec
daa
out
icebp
gs
testl
and
in
sbb
testl
scas
leave
mov
popa
cltd
rcl
lock
fs
int
andb
mov
es
push
mov
add
xchg
adc
addl
add
ss
sub
loop
xchg
add
inc
push
mov
cmp
push
fmul
ds
mov
fidivs
ret
mov
fs
ret
mov
cmpsl
es
std
jp
cmp
cmc
test
and
call
push
dec
inc
into
insl
les
bound
push
loop
mov
clc
adc
imul
xor
push
shl
mov
std
lret
sbb
xor
mov
mov
cmp
testl
xchg
and
sbb
loope
xor
mov
mov
inc
movsl
andl
pop
out
inc
stos
lret
call
xor
loop
jp
cmp
enter
dec
jne
mov
pop
outsb
pop
divb
fildll
push
push
arpl
sbb
outsb
pop
test
adc
pop
das
pop
sub
scas
imul
rclb
sub
inc
repnz
fdivs
sahf
imul
into
ss
jge
xor
dec
icebp
dec
mov
sbbl
cmp
je
sub
push
push
outsl
adc
mov
in
sti
xchg
inc
xor
mov
movsl
cmp
xchg
push
in
out
lock
fcmovne
adc
je
outsl
jmp
inc
loop
pop
cli
imul
mov
pop
out
inc
and
cmpsb
adc
movsl
shlb
dec
ja
aas
add
adc
je
fcoms
and
stos
adc
inc
shrb
mov
dec
jecxz
xchg
mov
loope
and
push
out
push
push
mov
adc
pop
fldenv
aaa
or
jl
sarb
shlb
fldenv
imul
lods
pop
dec
adc
or
jl
xchg
inc
pop
push
jg
aam
fucomip
pop
sub
sbbl
scas
arpl
test
ljmp
jmp
mov
cmpsb
sbb
call
mov
rcr
dec
mov
and
out
test
push
mov
movsl
dec
loopne
movsb
pop
imulb
testl
pusha
addr16
push
pop
push
sub
insb
pop
dec
ja
lahf
push
test
or
and
fidivl
loop
fistps
xor
pop
cmp
push
pavgw
mov
or
in
arpl
stos
push
test
stc
mov
sub
adc
sub
push
dec
lods
sarb
test
mov
cmp
cmp
inc
inc
clc
or
mov
ss
je
lahf
rcll
scas
xlat
dec
je
and
push
sar
xchg
lahf
or
pop
insl
fwait
sub
cs
loope
sub
stos
stos
fnstsw
sub
lods
mov
scas
rolb
jbe
mov
inc
dec
fildl
push
push
shrl
inc
rolb
push
or
mov
push
imul
pusha
or
pop
leave
cmp
add
sub
inc
adc
adc
adc
pop
mov
jnp
xlat
xchg
mov
leave
push
add
sahf
sarb
cmpsl
xchg
aam
nop
dec
and
jle
call
mov
sub
jl
cmpsb
sbb
jge
stc
xor
mov
adc
mov
pop
sub
lret
shlb
pop
xor
jle
sub
push
lea
test
stos
mov
enter
add
rcl
xchg
sub
cmc
out
test
in
jp
lock
inc
rolb
hlt
pop
insl
sub
and
mov
mov
sbb
jne
in
enter
pop
fwait
cmc
mov
push
add
lea
cmpb
mov
loop
push
pop
mov
pop
sbb
dec
sub
adc
out
sahf
mov
sub
sbb
mov
lods
sarl
test
lock
push
into
ret
xor
xchg
jne
jae
sti
int3
jnp
xchg
mov
stc
outsl
mov
mov
mov
out
mov
jbe
adc
inc
push
adc
lods
fwait
movsb
js
mov
inc
movsl
loop
sbb
pop
xchg
in
mov
sbb
xor
mov
iret
enter
aam
fidivrs
lods
mov
out
dec
push
js
xchg
pushf
mov
cltd
roll
and
adc
mov
mov
in
and
mov
mov
outsl
mov
sub
pop
cmc
int3
aas
and
add
inc
das
test
inc
inc
dec
cmp
or
cmp
sti
dec
push
mov
cmc
je
loop
bsr
xchg
mov
adc
adc
push
lret
sub
jge
lods
mov
add
or
xchg
ss
pop
cmc
cs
enter
pop
pop
push
sub
std
jno
in
push
inc
jg
mov
mov
popa
popl
stos
arpl
pop
cmp
or
add
xchg
lds
out
aad
jmp
push
adc
in
pop
jmp
adcl
push
imul
addr16
and
mov
gs
sub
mov
pop
push
stc
rol
ret
and
popa
inc
push
scas
and
rcrb
dec
add
pop
rcll
dec
aam
jne
aad
punpcklwd
adc
or
jmp
mov
sbb
cld
scas
cmp
sub
cmp
test
push
xchg
adc
lds
mov
inc
adc
rcr
jae
in
fsts
nop
stos
subl
xchg
movsl
adc
mov
and
push
mov
or
pop
repnz
mov
jmp
imul
lea
lahf
and
popa
cmp
sarl
daa
push
in
cmp
push
push
mov
cltd
mov
and
mov
mov
nop
cmpl
push
sbb
or
add
in
fistps
and
fwait
jp
pop
movsl
call
iret
jle,pt
aas
jl
push
mov
sub
andb
fcmovbe
dec
mov
and
mov
add
cmp
loope
push
lahf
and
mov
popf
rorl
push
sub
movsl
sahf
mov
cld
jo
in
push
inc
jle
mov
mov
inc
push
adc
sub
xlat
decl
cmp
lret
cli
or
push
sbb
scas
xor
add
aad
stos
and
shrb
mov
test
jns
jns
ror
pushf
add
and
inc
sbb
mov
mov
fcmovnbe
mov
loopne
enter
rcl
or
sbb
mov
xchg
lods
mov
mov
popa
sub
pop
out
imul
test
add
push
je
wbinvd
inc
push
adc
lock
push
outsl
test
scas
dec
mov
div
xchg
mov
mov
cmp
shrl
jecxz
mov
xchg
div
jle
enter
ljmp
or
push
or
push
pop
xor
fisttpll
test
mov
adc
adc
aaa
push
call
inc
mov
cmp
dec
adc
adc
push
ja
icebp
pop
mov
sub
outsb
out
pop
adc
cmp
push
sahf
out
push
test
repnz
mov
loopne
xchg
mov
mov
jge
rclb
add
std
in
mov
iret
aad
dec
and
xchg
fildl
jae,pt
cli
sgdtl
xchg
dec
icebp
fldcw
adc
pop
push
leave
jno
sub
and
aaa
xor
inc
ror
sti
xor
push
sbb
out
sahf
leave
test
idiv
sub
stc
dec
cs
jae
cmpsb
enter
cs
push
sub
cli
push
es
pushf
out
dec
adcb
xor
cmpsl
adc
push
leave
lret
add
push
into
arpl
cmpsb
rol
aad
inc
js
test
lret
arpl
and
sbb
fndisi(8087
push
mov
mov
outsb
dec
xor
mov
repnz
and
xor
rcrb
mov
jge
scas
or
jo
push
mov
push
add
out
aaa
mov
stos
sub
lret
push
scas
xor
inc
lock
xlat
push
inc
push
mov
add
cmp
dec
es
and
in
int3
pop
jbe
adc
pop
push
and
jp
push
push
cmp
lods
pop
xor
add
adc
roll
and
adc
fwait
pusha
out
cmp
fiaddl
lahf
aas
add
or
dec
iret
jo
nop
mov
in
push
push
test
lods
dec
lahf
dec
les
das
into
js
ror
fldenv
clc
aad
das
inc
mov
push
inc
dec
cmp
shrb
push
lahf
mov
jno
insb
xchg
scas
sub
xchg
xlat
lock
aas
add
negb
push
inc
mov
xchg
stos
in
xlat
pusha
scas
jmp
pop
mov
or
push
cli
inc
adcl
cmp
pop
dec
dec
pop
scas
dec
xchg
push
jmp
mov
push
jge
or
sub
lahf
sub
jo
push
jo
jnp
or
adc
aad
fistps
in
add
xlat
lock
xchg
lahf
aas
or
push
xor
xor
push
rcr
mov
lock
xchg
xchg
pop
inc
ja
std
sti
jl
scas
test
mov
mov
inc
xor
inc
push
adc
jecxz
shll
sarl
inc
xor
das
or
push
inc
je
pushf
aas
or
andb
mov
inc
addr16
push
add
pop
stos
lods
out
shlb
aam
mov
loopne
sub
stc
cmpsb
pusha
and
push
mov
cmpsl
insl
sbb
add
push
adc
adc
xor
loopne
in
cmp
xor
mov
cltd
jge
sub
pushf
gs
int
cmp
jge
shrb
sbb
out
pop
mov
adc
push
adc
daa
fldt
inc
push
enter
enter
hlt
or
mov
dec
mov
add
nop
fs
dec
int3
out
mov
jle
imulb
push
adc
int3
lock
ds
pop
subl
not
dec
insl
inc
cli
and
adc
test
jecxz
jmp
add
pop
push
push
pop
adc
push
adc
inc
aad
dec
sub
fiaddl
push
insl
or
test
push
ret
pop
in
fsubrs
push
ss
and
nop
stc
cmc
clc
add
jne
jp
jb
stos
incl
loopne
cmpsb
rclb
std
cs
add
in
pop
mov
or
out
push
cmp
pop
jp
shlb
xchg
xor
adc
pop
lock
and
xor
and
test
push
mov
scas
int3
jg
xchg
fadds
mov
ret
add
push
adc
insl
fwait
and
loopne
nop
rcrl
les
pop
clc
mov
ss
sahf
aas
dec
sbb
mov
mov
push
push
imul
adc
movsb
imul
imul
lock
punpcklbw
adc
adc
or
sbb
in
pop
mov
sub
push
adc
mov
mov
scas
cli
xlat
cmp
out
aad
sbb
dec
pushf
int
movsb
jns
ss
sbb
push
icebp
mov
dec
pop
lods
filds
es
call
or
adc
xchg
cmp
push
lods
xor
loope
ljmp
pop
xchg
lret
and
xor
adc
inc
jns
cmp
and
ds
inc
mov
insb
pusha
imul
iret
xor
push
ja
lods
adc
rorb
hlt
vxorps
fdivp
movsb
pop
sbb
jge
mov
fdivs
add
sti
xchg
out
mov
pop
popa
andl
dec
mov
dec
fldenv
sbb
and
add
movsl
ds
sbb
out
testb
mov
stos
push
sub
sbb
dec
aam
dec
sarl
cmp
int
and
add
inc
push
adc
cli
adc
lock
out
dec
jo
fistps
push
jge
push
fisubrl
fwait
ja
cmpsb
sbb
loopne
xchg
mov
xor
fsubs
mov
mov
add
or
push
cmpsb
movsl
dec
xor
lcall
mov
xchg
sub
push
xchg
rorl
loopne
fidivrl
arpl
jbe
sbb
jl
push
xlat
inc
leave
mov
pop
mov
push
mov
mov
cmp
pop
insb
aaa
xor
daa
sbb
jmp
pop
loope
jbe
cmp
ljmp
das
shl
int
mov
loope
pop
mov
sbbl
jmp
mov
pusha
repz
mov
aas
push
stos
ret
adc
lock
rolb
popf
aas
shrb
test
ret
lret
mov
push
sub
imul
mov
xchg
xchg
les
les
mov
inc
mov
jle
in
lods
cmpsl
lods
jae
shlb
adc
jmp
aad
fcmovnb
shlb
orl
lcall
pop
pop
xchg
sub
movsl
loope
dec
into
aam
dec
in
and
and
and
mov
dec
loop
xchg
and
adc
or
pop
lcall
popl
sbb
lret
out
das
mov
addr16
popa
inc
cmp
nop
jb
jne
mov
lcall
inc
lock
shr
adc
jmp
hlt
outsl
cmp
sub
push
or
lods
popa
mov
lock
outsl
jae
dec
add
fisubrs
and
xor
mov
inc
cwtl
test
mov
repz
cmp
test
daa
repnz
push
add
pusha
sub
stc
pop
popl
jae
sub
xor
or
inc
insb
jnp
in
push
jl
jl
pop
sub
arpl
cld
psubsb
xor
pop
test
and
mov
cmp
icebp
int
push
adc
pushf
nop
mov
mov
imul
std
clc
incb
pop
mov
inc
pop
ret
jno
scas
aas
mov
insl
pop
divb
fsub
cmpsb
lret
fistps
mov
mov
jnp
and
xor
je
lock
xor
dec
lods
mov
ds
orb
fldl
sub
fbstp
xor
jmp
mov
pop
aad
les
mov
loop
fcompl
xchg
in
xchg
pop
int3
call
mov
mov
sub
scas
fdivrp
shl
mov
pop
rcl
test
into
sbbl
mov
add
push
and
and
sub
stc
pop
fldenv
pop
stos
inc
mov
sub
mov
jg
out
xor
in
sub
aad
xchg
loopne
push
shll
mov
sub
mov
mov
xor
sahf
mov
jl
push
mov
gs
icebp
popf
push
mov
insb
sar
call
subb
push
cmp
dec
scas
aad
mov
xlat
pushw
add
in
std
inc
jge
fsubrs
dec
subb
xor
cs
lret
int
hlt
shlb
pop
jmp
ljmp
mov
in
fidivl
add
inc
stos
push
fisubl
adc
inc
sbb
ret
and
mov
shll
xor
push
fdivrs
out
outsb
std
sti
adcb
push
out
and
scas
inc
xor
inc
push
adc
jecxz
lds
pop
cltd
fmul
call
out
cmpsl
cwtl
cmp
xchg
push
adc
pop
cmc
mov
mov
push
fcmovnbe
pushf
rorb
pop
lahf
push
inc
mov
fsub
cmc
fcmovnbe
push
adc
mov
cltd
push
pop
std
mov
cli
add
mov
rcrb
pop
mov
xor
jge
xchg
cmpsl
inc
xor
out
ds
aad
mov
shl
outsl
in
pushf
sub
or
push
sbb
mov
jmp
mov
mov
movsb
shl
fs
xchg
cmp
jl
scas
sbb
nop
xchg
stos
and
push
sub
imull
xlat
daa
push
cmp
les
inc
or
mov
dec
fstp
pop
and
mov
ljmp
inc
or
outsb
sbb
and
fisubrl
xor
shll
sbb
adc
mov
aam
sbb
mov
xchg
sub
adc
imul
shrb
hlt
pusha
dec
movl
test
scas
inc
mov
scas
fbld
sbb
es
mov
addl
mov
int3
cmc
push
int
scas
inc
mov
sub
jbe
xlat
clc
or
out
cli
hlt
xchg
out
xchg
pop
test
mov
and
xchg
shrb
jge
data16
mov
mov
pop
jmp
sbb
jl
pop
jmp
mov
shll
pop
in
add
cmp
cld
out
lret
adc
sub
movsb
ss
out
dec
shrl
or
jge
pop
inc
or
sarl
gs
adc
and
or
mov
movsb
sub
es
lds
dec
jl
add
lret
lret
adc
mov
mov
xchg
lret
add
std
jge
loopne
push
adc
cmc
std
or
xchg
pop
mov
xchg
xor
in
mov
aas
pop
arpl
ljmp
cld
sahf
aaa
fs
push
mov
mov
push
sub
in
sbb
loope
pop
mov
clc
adc
dec
and
scas
insb
push
stos
stos
in
into
add
fistpl
add
sbb
fiaddl
xor
pop
xor
sub
inc
mov
cmp
ret
mov
mov
mov
sub
popl
cmp
jno
pop
inc
add
shl
pop
pop
in
xchg
repnz
das
inc
iret
mov
dec
ljmp
aad
xchg
pop
fs
out
hlt
mov
jecxz
cmc
xchg
pop
xchg
call
xchg
mov
xchg
and
bound
jbe
add
jp
push
fs
fs
lods
push
call
push
sbb
or
adc
hlt
stos
mov
xor
cs
imul
sbb
mov
scas
int
loop
in
cmc
stos
pushf
inc
xchg
inc
enter
mov
mov
andl
lahf
lret
push
jns
shrb
mov
daa
adc
stos
inc
push
pop
add
mov
ljmp
jge
test
ret
call
das
lds
jmp
mov
fsin
and
mov
in
ljmp
cmp
adc
inc
jp
dec
loop
pop
rol
insb
dec
cld
out
add
shll
filds
mov
fs
pop
push
ds
or
insb
sub
sarl
mov
movsb
adc
push
sub
mov
lods
xchg
jae
dec
insl
std
jno
in
push
pop
push
out
fistps
push
mov
ss
ret
in
sub
ja
mulb
mov
mov
mov
mov
jno
mov
cmp
adc
inc
popf
fnsave
stos
and
pop
shlb
dec
jae
aas
dec
sarl
in
jne
cmp
push
test
add
enter
jecxz
xchg
pop
xchg
repz
js
jg
mov
mov
movsl
rolb
mov
pop
adc
fwait
adc
fdivrs
pop
lahf
pusha
inc
sub
pop
adc
lods
mov
movsl
ds
jl
dec
mov
inc
int
dec
shlb
inc
fnstsw
pop
dec
xor
decl
jbe
cmp
ljmp
das
shl
in
sub
push
push
inc
jns
mov
cmp
outsb
cld
sarl
xlat
pop
sti
andb
ss
enter
scas
mov
fstpl
sub
lahf
aas
jle
mov
push
imul
daa
shll
scas
pop
mov
dec
xchg
adc
movsl
mov
int
mov
imul
sub
and
imul
push
fwait
pop
or
dec
sbb
xor
push
add
inc
add
xchg
mov
mov
push
xor
insl
add
movsb
inc
sti
mov
push
cmpsl
inc
mov
cmp
push
mov
inc
push
adc
and
xchg
enter
jle
dec
mov
idivl
scas
pusha
decl
dec
push
test
lods
popa
cmp
in
int3
or
lcall
inc
push
jo
add
rcrl
std
add
add
stc
mov
push
add
lcall
cmp
jge
std
movl
hlt
or
rcll
rorl
out
add
mov
inc
dec
imul
mov
jnp
mov
add
xor
and
fistps
pop
js
and
xchg
mov
mov
inc
mov
mov
fildll
enter
cmp
adc
ds
fisttps
push
adc
jmp
inc
inc
sti
pushf
dec
enter
test
push
adc
repnz
mov
sub
xor
cmp
aaa
or
pushf
les
or
pusha
loope
pop
repz
dec
mov
jmp
jecxz
sti
cmp
out
adc
das
fldl
hlt
push
test
sub
jle
jne
dec
mov
mov
fcmovbe
movsl
xchg
cmc
mov
pop
mov
out
in
dec
repnz
mov
aaa
scas
and
jb
push
scas
cs
jg
adc
dec
fiaddl
jo
sbb
jp
shr
cmpsl
jle
test
adc
mov
mov
es
lds
xchg
ljmp
rcr
add
aas
add
jo
cmc
cmpl
cltd
std
in
mov
jnp
je
sub
xchg
sahf
daa
pusha
aaa
cmc
jmp
dec
in
lcall
pop
inc
add
lea
adc
leave
fists
stc
xor
pop
adc
push
mov
sbbb
sbb
pop
mov
lods
fcompl
pop
adc
xor
push
or
sub
stos
push
inc
xor
inc
jecxz
testl
movsl
mov
inc
inc
push
or
sub
stos
push
inc
adc
dec
jecxz
incl
adc
rep
mov
inc
inc
push
or
and
mov
inc
jae
dec
jecxz
or
adc
xchg
movsl
mov
inc
inc
push
or
cs
cmp
lods
push
mov
js
out
inc
lods
pop
mov
ret
or
dec
adc
and
jmp
and
xchg
mov
mov
std
push
cmc
push
pop
cli
ljmp
imul
pusha
mov
stos
rolb
xor
inc
ret
xchg
inc
cmp
in
and
outsl
mov
inc
inc
sub
inc
jl
push
movsb
cvtpi2ps
aad
and
ja
inc
pop
repnz
and
pop
cmc
in
scas
push
lahf
scas
popa
mov
stos
push
scas
in
mov
and
movsb
sub
andl
jbe
inc
xchg
cs
mov
mov
inc
aam
pop
mov
out
push
adc
int
and
adc
jge
lock
fcmovbe
dec
or
add
daa
cmpl
and
testb
and
scas
jnp
test
dec
push
pop
push
jb
iret
lods
pop
mov
pop
lcall
or
mov
stos
push
sub
pushf
mov
xlat
scas
pop
xor
xor
movsl
fstps
cld
adc
psllq
pushf
insb
dec
inc
jns
cli
mov
lcall
and
shrl
aad
movsb
mov
stos
pop
ret
ret
out
xlat
xor
pop
outsb
out
mov
jns
in
shll
xor
and
jne
jns
ss
fdivrl
fs
stc
push
mov
pop
dec
stc
dec
scas
jecxz
les
pop
mov
push
adc
jno
jae
sbb
jg
push
xor
xlat
pop
dec
mov
add
pop
add
jno
idivb
dec
int
or
adc
or
inc
push
push
pop
pop
outsb
jbe
mov
push
push
das
stc
mov
push
in
into
cmp
jb
les
lret
xchg
test
inc
stos
mov
lcall
int3
cld
inc
movsl
movsl
test
mov
movsb
dec
xchg
sub
push
ds
stc
jp
cltd
adc
leave
bound
lods
mov
push
in
add
aas
dec
hlt
test
jecxz
imul
out
inc
popa
pop
ret
shlb
test
sub
leave
jo
cli
ja
sub
xchg
shll
jp
jne
jbe
dec
arpl
ds
mov
or
cli
pop
push
cmp
mov
js
mov
loopne
stos
xchg
lahf
scas
es
lret
mov
loope
xchg
sbb
pop
test
inc
cld
sub
test
dec
sbb
imul
inc
out
fildl
lods
mov
dec
hlt
insb
in
rcr
sub
test
pop
and
xchg
cs
cmc
lret
push
imul
in
xor
mov
das
xchg
sub
push
jle
fnstcw
mov
dec
push
outsb
mov
push
test
inc
cs
movsl
sbb
cmp
dec
cmc
out
rol
xchg
addr16
pop
add
pushf
pop
or
push
mov
sahf
sub
push
xchg
data16
adc
push
std
xor
in
adc
testl
xor
shlb
scas
push
inc
jecxz
rcrb
ret
fwait
push
mov
push
std
jno
int
dec
push
and
push
loope
mov
arpl
mov
push
sub
mov
sbb
jecxz
jmp
mov
nop
imul
mov
lahf
fyl2xp1
stos
and
test
out
ds
dec
rorb
scas
cmpsl
sarl
popf
hlt
xor
and
ret
movsb
dec
push
cs
sub
or
inc
jg
lods
inc
mov
mov
dec
fistpl
lret
pop
cmpsl
dec
aas
sahf
fadd
add
inc
scas
cmpsl
shrl
stos
mov
mov
cmpsb
pop
mov
je
ret
les
pop
lret
push
and
cld
jno
adc
aam
iret
mov
pop
pop
fdivs
add
xchg
cs
jge
push
int3
pop
test
popa
adc
out
push
inc
xchg
sub
mov
push
xor
add
je
dec
into
jo
out
incb
test
mov
arpl
push
shl
insb
stos
inc
outsb
xchg
add
push
lahf
jae
mov
push
pop
inc
push
adc
scas
mov
lret
pop
adc
xchg
mov
in
push
pop
sbb
shl
shll
fstp
stc
dec
stos
cmp
xchg
daa
xchg
pop
cli
pop
jle
je
mov
ds
jmp
stos
fbld
push
jle
stc
rolb
dec
jno
loope
out
push
adc
pop
and
jbe
ds
clc
repz
and
les
lods
pusha
sbb
aaa
scas
pop
inc
dec
sub
sub
sub
cmp
jnp
jno
xlat
and
pop
out
cld
add
sbbl
cltd
les
repz
adc
and
and
pop
test
in
xlat
mov
adc
cmp
mov
test
cld
and
sub
jle
stc
gs
jns
mov
sub
pop
inc
hlt
insl
les
mov
andb
cwtl
jge
test
push
daa
stos
jg
mov
jbe
mov
xor
repnz
mov
filds
dec
lods
cli
sbb
sub
inc
xlat
inc
imulb
mov
sub
mov
imul
inc
mov
nop
test
cli
add
fwait
add
dec
pop
push
loop
movsl
mov
fimuls
xor
loop
dec
jns
loop
jecxz
mov
pop
out
sti
adc
ja
lock
out
mov
fucomip
loop
je
popf
loop
fucomi
movsb
mov
xchg
dec
je
add
mov
testb
sti
andb
jbe
cmp
mov
stos
push
push
out
xchg
xchg
scas
push
jge
fbld
sti
jne
add
jp
xchg
dec
test
pop
fldl
dec
or
loopne
pop
sbb
ror
jmp
scas
xor
jne
pop
insb
and
inc
push
adc
jae
imul
mov
cmc
lock
lods
stos
js
sub
mov
pop
lods
fucomi
mov
adc
dec
mov
and
sbb
jg
inc
in
mov
std
push
and
xor
cmc
das
sbb
dec
sub
es
fdivs
test
sub
cs
mov
insb
adc
adc
ror
inc
insb
and
push
insl
in
dec
adc
insb
sub
mov
sbb
jbe
adc
mov
cltd
cmp
test
and
and
aas
rorb
mov
imul
stos
sub
jl
in
sbb
jle
loopne
in
fcmovb
adc
inc
mov
mov
mov
shlb
mov
adc
push
lods
shrl
xchg
faddl
std
push
jge
in
sub
sub
loope
sbb
and
push
cmp
dec
and
lret
arpl
pop
pop
mov
addl
mov
shr
mov
scas
pop
mov
dec
xchg
arpl
cmpsl
dec
lahf
sub
add
jle
pop
mov
fildll
out
loope
mov
inc
nop
pop
loope
out
pop
bnd
dec
sbb
aaa
popa
jmp
add
imul
fisubrs
pushf
mov
outsb
gs
mov
jl
push
subl
push
movsb
rol
push
test
sbb
cmp
and
lock
and
lahf
aas
ljmp
xchg
out
xor
loop
imul
push
mov
fildll
lods
mov
rol
subl
movb
push
stos
push
and
int3
int
cmpsb
das
mov
inc
lahf
aas
or
test
fistpl
movb
adc
sbb
lods
call
es
sarl
popl
aam
das
pop
in
mov
push
popa
popf
sub
mov
test
mov
movsb
lcall
inc
add
call
filds
inc
popf
cmp
rcrb
lret
pop
std
jg
adc
test
lahf
mov
mov
jmp
sbb
push
jge
out
push
dec
je
adc
push
out
pop
fistpl
fwait
popf
add
jmp
loope
bound
cwtl
mov
cmpsl
rcl
fldt
shr
adc
jmp
hlt
xor
mov
aas
je
loope
xor
mov
sahf
add
lea
adc
dec
subl
push
std
pusha
xlat
movsb
push
or
outsl
xchg
outsb
iret
pop
ret
xchg
inc
add
push
xor
dec
xor
xor
subl
addr16
push
fistl
movsb
mov
hlt
pop
push
or
andb
sbbb
push
mov
push
sbb
add
or
test
js
testl
gs
sub
jae
cmp
mov
popa
lret
pushf
add
stc
mov
ja
sahf
mov
and
adc
arpl
ret
roll
add
cs
aad
rorl
outsb
mov
pop
orb
sub
inc
add
fs
ss
sahf
rolb
jle
jg
sahf
inc
push
adc
outsl
dec
add
arpl
jecxz
cmp
cmp
inc
jns
add
push
out
imul
pusha
fsubl
scas
addl
addr16
xor
leave
shl
pop
movsb
xor
push
mov
mov
movsl
mov
lods
test
xchg
cmc
in
in
mov
push
shr
dec
lcall
into
xchg
scas
add
shrl
xlat
and
mov
mov
inc
inc
cmp
arpl
mov
lds
in
pusha
sub
xchg
sub
mov
push
lock
pop
test
mov
add
lods
and
jbe
rcr
pushf
fmul
lds
pop
fxch
inc
sti
imul
js
in
addl
xor
arpl
sub
lods
xchg
mov
mov
mov
insl
inc
push
push
xor
cli
pop
loop
and
call
movsl
dec
call
mov
adc
sti
imul
push
pop
sbb
inc
add
sub
pop
clc
mov
shrb
mov
fs
mov
jno
cli
shlb
lahf
rcll
scas
xlat
dec
arpl
pop
mov
sub
inc
push
pop
je
lods
jae
jo
jns
sahf
inc
push
adc
or
push
xchg
cmp
es
sub
sub
repnz
push
and
and
in
cmp
loope
lret
lods
cltd
sahf
clc
cmpsl
roll
scas
pop
into
loop
pop
mov
mov
rorb
cmp
cmpsl
andl
mov
and
jle
imul
push
iret
or
inc
mov
pop
and
jnp
jle
and
push
and
int3
sub
push
cmp
shlb
lea
pop
sbb
ljmp
xchg
or
cli
xchg
sub
mov
jno
in
push
pop
mov
sub
inc
and
mov
std
adc
insb
dec
push
fiadds
lahf
aas
or
mov
add
mov
sub
cs
into
sbbl
daa
pushf
subl
push
lods
inc
push
out
pop
loop
and
scas
into
lds
movsb
adc
pop
mov
jg
xchg
xor
jnp
adc
fiadds
adc
shrl
mov
dec
popf
cmp
add
aas
xchg
shrl
add
aas
and
push
lods
dec
lret
jbe
cmp
push
pop
add
sub
mov
xchg
fsubl
imul
sahf
inc
push
adc
cmp
inc
addl
imul
push
cmp
insl
push
icebp
dec
pop
add
sbb
cmp
iret
pop
shl
pop
sbb
inc
jae
adc
cmpsl
cmp
cmp
clc
mov
stos
xor
pusha
mov
dec
adc
xchg
xchg
icebp
int3
jbe
mov
push
leave
lret
and
and
pop
sbb
add
lret
xor
adc
out
mov
imul
adc
loope
ss
lret
cld
pushf
xchg
push
icebp
dec
jmp
into
loopne
or
inc
mov
jae
out
lods
mov
sbb
xor
push
pop
movsl
jno
pop
mov
mov
je
mov
rorl
dec
es
popaw
dec
lret
cmp
repnz
mov
jp
push
mov
ljmp
xor
push
int
lock
dec
xor
dec
frstor
rorb
scas
xchg
push
int
xchg
and
lcall
retw
and
ss
or
jnp
orl
or
outsl
xchg
or
jnp
pushf
adc
sub
mov
xchg
cmp
or
sbb
nop
push
and
bound
pop
insl
fsubrl
pop
scas
icebp
dec
hlt
popf
arpl
sahf
inc
push
adc
in
lret
shl
daa
movsb
ftst
cmpsb
ds
cli
pop
data16
neg
mov
mov
inc
adc
and
lea
test
std
imul
inc
mov
xor
int
push
or
clc
push
icebp
cmpl
mov
mov
data16
cmp
sub
xchg
dec
mov
fimuls
push
xor
adc
add
mov
sahf
testb
sbb
sub
fs
fcmovnbe
mov
outsb
fsubl
mov
xchg
and
pop
cmp
jle
xchg
xor
pop
mov
adc
mov
movsl
cmp
xchg
mov
lahf
aas
hlt
push
jg
fidivrl
add
cmp
sub
adcl
lods
pop
cmp
sarb
scas
inc
push
pop
cmp
popa
fadd
pop
je
cmp
mov
clc
fs
leave
or
xchg
cmp
mov
or
or
stc
in
lahf
aas
hlt
push
mov
ds
sub
stos
push
scas
xlat
dec
add
movsl
ret
outsl
sub
cmp
sti
idiv
test
iret
gs
push
mov
shl
arpl
push
mov
int3
or
pop
push
push
sbb
jns
nop
mov
push
incl
das
mov
dec
adc
imul
cmpsb
popl
inc
push
adc
and
sub
push
cmp
adc
shrl
stos
cld
loop
fistps
sbb
adc
std
inc
dec
leave
adc
ljmp
aaa
cmp
cmp
sub
jg
push
lods
pop
mov
or
in
scas
push
js
iret
shll
enter
jo
rcll
jae
ss
dec
ljmp
xor
jp
cmpsl
leave
ficomps
mov
test
test
lahf
aas
xor
jl
push
test
inc
jmp
and
jmp
lret
les
cmc
or
fdivrp
mov
mov
push
hlt
xchg
test
xchg
rorb
iret
clc
rol
inc
xchg
or
xor
pop
cmp
ss
test
rcll
mov
loop
lcall
adc
mov
fsubs
sbb
pop
cmp
cmc
addb
or
mov
test
adcb
fstpl
imul
inc
mov
add
pop
popa
add
jno
mov
mov
add
lret
ret
or
mov
cmpsb
push
dec
test
xchg
dec
mul
bound
mov
push
mov
push
je
or
sahf
pop
sbb
aam
arpl
in
imul
int
loopne
push
decb
loop
jns
ljmp
mov
clc
push
jo
test
out
test
and
or
add
push
pop
mov
cmc
xchg
loope
xor
insl
hlt
sbbl
imul
inc
push
adc
push
pusha
pop
bound
ror
adc
mov
xchg
push
sbb
push
ret
sbb
mov
rorl
mov
iret
js
jo
and
arpl
mov
es
mov
mov
dec
pusha
cmpsb
add
out
scas
cmp
into
testl
jmp
mov
inc
out
ss
mov
insb
outsl
jae
jmp
add
push
pusha
je
push
popf
loop
enter
rolb
sub
mov
cmp
push
sub
nop
mov
divb
cli
xor
rorl
pop
mov
mul
inc
mov
push
es
and
cmp
mov
inc
push
adc
mov
mov
pop
adc
push
mov
cmp
insl
pushf
push
addr16
inc
outsl
jecxz
jp
lods
testl
jnp
in
jnp
call
push
es
xor
xchg
and
ljmp
rcrb
call
je
or
sahf
mov
data16
movsl
xchg
xchg
pop
jle
and
adc
aam
xor
outsl
or
testb
and
decb
movsb
push
xchg
mov
dec
icebp
or
xchg
add
adc
sbb
lods
pop
scas
shlb
sbb
mov
or
and
add
jg
mov
or
pop
and
rol
nop
dec
cld
push
push
push
lods
imul
testl
imul
xchg
push
insb
aad
jl
mov
aad
fidivl
mov
scas
and
clc
inc
push
inc
dec
cmp
add
add
and
mov
into
lret
pop
pop
das
push
cmpsl
cmp
rolb
and
pop
stc
ret
mov
int3
adc
fisubl
out
push
shrb
lods
loop
jmp
push
lea
lods
cmp
out
sub
stos
sub
lds
adc
pop
pop
insl
fwait
sub
cs
loope
sub
inc
push
adc
sub
sub
cli
imul
hlt
repnz
je
scas
push
andl
fidivrs
or
xor
call
mov
add
push
dec
shll
jbe
inc
pop
js
je
ljmp
xor
push
fidivrl
xchg
pop
ficompl
scas
int3
ret
push
mov
inc
test
aas
or
mov
add
pop
add
dec
push
add
movsb
aas
movsl
xchg
mov
ds
or
cmpsb
sub
std
xchg
les
push
scas
pop
dec
aaa
mov
push
movsl
dec
jmp
add
sub
ja
mov
adc
jle
mov
push
inc
inc
out
divb
mov
stos
xor
lcall
jnp
or
in
dec
xchg
and
dec
add
dec
into
int3
add
pop
pop
arpl
xchg
cmpsl
lret
scas
cmp
loopne
pushf
cs
pop
sti
add
mov
cmp
iret
inc
xor
mov
pop
mov
xchg
lret
mov
test
and
subl
and
adc
pop
leave
cwtl
ljmp
lods
sub
in
int3
jne
out
out
sub
mov
int
sbb
and
push
xor
out
fstl
stc
pop
xor
jl
lret
jle
shrb
jns
pop
fsubs
out
repz
jno
iret
js
in
fidivs
inc
in
test
call
imul
daa
add
and
add
icebp
cltd
jno
inc
iret
pop
incl
adc
cltd
xorb
in
mov
push
and
xor
cli
pop
out
inc
xchg
mov
inc
mov
cmpsb
imul
decb
or
sbb
pop
push
mov
sbbb
or
cli
jecxz
lret
or
pop
push
loopne
pop
test
in
sbb
loop
nop
inc
push
adc
or
and
mov
xlat
sub
mov
enter
jo
pushf
pop
addr16
adc
add
movsl
inc
gs
xchg
scas
push
rcl
inc
cltd
clc
mov
and
cmp
nop
xor
mov
ret
mov
popf
xchg
pusha
inc
das
fadds
push
mov
fstpl
fidivrs
lret
jbe
fnstsw
jg
xlat
mov
inc
mov
sahf
lret
add
or
inc
add
mov
cld
inc
sub
xchg
lcall
imul
push
mov
add
shr
mov
js
jp
or
push
push
mov
in
lods
cmp
loop
and
cmpsl
pop
mov
add
lahf
pop
mov
rcr
jnp
bound
pop
mov
xor
aam
pop
cmp
hlt
in
scas
mov
aad
pop
or
jp
inc
mov
fldcw
pop
mov
rorb
xor
shrl
iret
jbe
pop
mov
push
test
ljmp
and
sub
pusha
ror
sbb
imul
ret
test
xchg
sub
repz
scas
push
cmpsl
dec
sbb
out
adc
adc
dec
fisubrl
pop
pop
sub
sub
dec
lahf
aas
pop
xchg
fcmove
push
push
outsb
inc
test
push
mov
xor
sbb
sub
jo
pushf
or
sbbb
xchg
xlat
xchg
push
je
inc
out
adc
mov
push
xchg
add
js
test
fadd
xlat
sub
jp
outsl
lods
push
stos
push
mov
cmp
mov
roll
push
adc
jb
imul
cli
stos
popa
ljmp
xlat
imul
movsl
mov
js
mov
rclb
mov
stos
pop
es
in
movsb
pop
mov
lods
pop
xor
fmuls
or
adc
inc
mov
fisubl
cmp
sar
addr16
insb
cmpsb
ret
dec
sbb
push
rorl
inc
out
mov
es
xchg
sub
adc
inc
adc
rol
sbb
pop
mov
aas
push
dec
mov
pop
mov
pop
call
or
cmc
mov
addr16
add
out
xlat
dec
stos
xor
xchg
sub
cmc
add
push
jmp
js
subb
xchg
stc
add
in
xchg
pop
in
dec
repnz
mov
imul
inc
jno
fadds
jge
cmpsl
pcmpgtw
rorb
sarl
movsl
inc
loope
xchg
push
jae
pop
sahf
hlt
add
mov
mov
bound
lahf
push
testl
cli
pop
mov
add
lods
inc
arpl
sub
out
sarl
cmp
ss
mov
ror
scas
mov
dec
mov
add
sbb
insl
popf
nop
scas
adc
lret
adc
mov
paddsb
mov
iret
push
incb
ja
aam
decl
cmp
ret
scas
test
xor
inc
sti
out
lock
call
popf
mov
testl
fnsave
pop
dec
jle
xchg
mov
mov
cmpb
mov
lret
mov
mov
mov
dec
cli
jle
shlb
mov
mov
or
pusha
ret
fmul
mov
jge,pt
lock
adcb
les
in
ret
inc
xor
pop
sub
scas
ret
les
mov
mov
negb
enter
rcll
aas
ljmp
shll
mov
sbb
icebp
mov
in
jecxz
mov
loope
adc
insb
out
pop
fstp
xlat
mov
xchg
scas
lods
test
sub
xchg
mov
fwait
test
and
push
add
add
mov
lods
mov
lret
pop
mov
sbb
mov
jns
fisubrl
mov
lcall
dec
inc
and
in
stos
sub
jg
mov
into
aad
mov
sub
loop
mov
je
out
in
mov
add
add
fadd
cmp
cmp
and
testb
lods
and
or
outsb
pop
mov
js
leave
in
xchg
aam
lret
push
and
movb
dec
dec
les
pop
int
sub
mov
daa
adc
int3
outsb
shlb
in
lahf
dec
add
cli
imul
jne
push
pop
mov
shrb
shrb
mov
dec
xor
in
fidivl
bound
ret
enter
sarl
lret
dec
jmp
xchg
cmp
jge
scas
sbb
rcll
ficoms
popa
dec
inc
mov
jnp
loope
ret
arpl
fiaddl
sarl
and
mov
push
mov
pop
push
fists
sub
clc
testb
sbb
push
mov
ret
or
out
in
dec
xchg
aas
xor
dec
lahf
stc
fmul
or
movsl
adc
ds
add
add
inc
xchg
sub
sbb
lea
xor
shlb
and
jo
out
mov
or
sub
pop
imul
fidivl
cltd
daa
sub
out
fistpl
cmpsl
fcom
ds
fidivl
cli
cmp
or
cmc
fnstenv
push
shll
fsubl
testl
ret
jmp
xchg
xchg
icebp
or
cmp
imul
ds
fistps
sub
icebp
xchg
fidivl
outsl
loope
stos
push
add
or
push
dec
xchg
mov
lea
inc
cmc
sbb
mov
pop
jmp
daa
pusha
push
scas
pop
or
sub
xor
push
test
je
fistl
sub
sub
fs
icebp
lret
out
arpl
ficoml
or
inc
push
fstps
push
mov
add
xchg
or
and
inc
or
movb
lods
add
ret
and
mov
das
fimull
sbb
pop
adc
fimull
add
pop
xchg
push
push
call
and
dec
movlps
inc
sahf
and
movsl
ds
sub
aad
insl
iret
or
cmpsb
mov
cld
dec
scas
int
cmp
sub
pop
push
pop
mov
icebp
or
sti
aam
xchg
jne
xchg
movsl
ret
cltd
pusha
push
jle
cmp
push
imul
fwait
mov
inc
mov
cmp
xor
pop
fbld
mov
into
or
scas
xlat
mov
int
insl
jp
sbb
xchg
jmp
enter
push
sub
jbe
imul
sub
dec
push
sbb
pop
adc
inc
mov
cmc
push
push
sub
or
scas
outsb
mov
dec
mov
adc
add
sahf
ud2
movsb
pop
jmp
mov
sti
push
stos
xlat
adc
popf
add
mov
cmp
stc
mov
adc
mov
js
out
fstps
and
ds
call
mov
cmp
and
in
mov
fwait
loop
aaa
jne
sub
outsl
xchg
sbb
lcall
mov
xchg
pop
nop
add
adc
test
pop
mov
stos
cmp
sarl
sbbl
cmp
cmc
js
jmp
mov
cmpsb
dec
or
sub
push
cmp
ljmp
data16
sti
mov
mov
fwait
mov
mov
fistpl
mov
inc
adc
rclb
out
mov
and
or
lds
movsbl
mov
mov
outsl
pushf
iret
xor
pop
call
jmp
xchg
and
rcll
push
insb
sti
arpl
test
loop
push
jmp
mov
xchg
mov
inc
fidivrs
sbb
imul
and
add
adc
mov
stos
push
ficoml
aad
push
sub
lods
and
or
jl
push
add
or
push
in
mov
int
sub
lds
xlat
ljmp
sub
fldl
bound
fmuls
insb
inc
inc
push
insb
mov
push
adc
xchg
inc
mov
fiadds
pop
scas
dec
or
test
addb
adc
or
in
inc
push
das
or
sbb
daa
cs
ret
add
add
jae
andb
push
adc
mov
push
test
out
mov
mov
mov
fldcw
or
pusha
rorb
test
andb
pop
inc
mov
scas
stos
push
rclb
push
pop
xor
mov
pop
js
and
decl
push
adc
insl
int3
push
push
movsl
dec
andl
or
js
in
ficompl
ror
jne,pn
aad
leave
aam
pop
mov
mov
sub
and
lahf
aas
add
or
xor
ret
sub
mov
add
sarl
pop
sub
jl
in
les
and
push
cmpsl
and
push
xlat
push
push
lods
ret
aaa
adc
pop
dec
sbb
mov
ss
sti
adcb
jge
aaa
cmp
out
test
mov
scas
daa
pop
jnp
roll
or
push
xor
push
scas
pop
idiv
cmp
jne
xor
jg,pt
push
test
mov
sbb
ds
mov
cmp
stc
or
and
movsb
lea
fwait
aam
adc
call
mov
fcmovnbe
test
lock
jno
xor
fcomip
sub
lods
and
jno
inc
or
jecxz
mov
push
inc
mov
mov
test
das
insl
xchg
je
out
lods
cmpsl
jecxz
fldt
sarb
loopne
fmuls
lahf
jl
mov
add
dec
andb
out
sti
and
cmp
mov
sub
jnp
and
inc
imul
cmp
pop
and
xchg
inc
jl
sbb
pop
adc
push
sarl
add
movb
das
jo
mov
outsb
mov
loopne
lods
repnz
mov
rcrl
movsl
mov
xor
jae
mov
cs
loope
sbb
enter
outsl
lret
aam
pop
jno
addr16
sbb
mov
jmp
pusha
inc
pop
xor
aaa
xchg
sbb
xchg
push
cmp
sbb
fs
mov
dec
jo
shl
or
pop
jp
arpl
push
imul
pop
xor
in
jns
push
xor
gs
movsb
aad
jmp
sbb
mov
jnp
pop
sti
inc
sbb
sbb
jnp
jnp
int3
sub
jge
jg
jne
cltd
mov
adc
mov
sbb
int
jg
ja
adc
int3
push
add
lahf
int
and
mov
sbb
pop
adc
outsb
adc
mov
mov
mov
dec
sbb
pop
adc
adc
jns
int
adc
push
data16
ds
mov
scas
jg
jno
daa
pop
push
cmp
repnz
movsl
push
fldl
mov
shll
subb
xor
jbe
sub
adc
dec
aad
lods
rcll
adc
mov
fwait
imul
ss
pop
mov
mov
stos
aad
shrl
add
push
movsb
dec
xor
subb
push
in
rcl
imul
mov
pop
mov
clc
sarl
repnz
pop
and
testl
inc
aam
pop
ss
rolb
movsb
popf
aas
cmp
push
adc
stos
pop
das
pop
cmp
pop
adc
adc
imul
sarl
test
jno
aad
jnp
cs
mov
stos
and
stos
into
mov
adc
pop
jecxz
xchg
xor
hlt
jns
inc
insb
test
xchg
popf
imul
into
ficomps
and
push
xchg
push
jne
inc
sbbl
rolb
lods
push
mov
shll
adc
loope
jecxz
push
popa
xchg
mov
inc
add
mov
call
sti
insl
addb
adcb
cld
sub
mulb
push
mov
das
and
cmpsb
cmp
or
add
ljmp
inc
lds
sbb
cmc
shl
push
or
je
jne
push
push
arpl
pop
add
or
pop
mov
cmp
sub
lock
fwait
sbb
cmc
outsl
cmp
nop
imul
ret
mov
jno
aad
xor
sub
fwait
aad
insb
sub
stc
notb
sbb
push
and
cmpsb
scas
mov
or
pop
mov
dec
pop
in
cmpsl
pop
and
push
push
aam
imulb
cmp
fiadds
scas
xlat
cld
outsb
sub
xchg
out
adc
mov
dec
aad
call
aam
add
sbbb
push
xchg
movsl
xchg
cmpsb
adc
xchg
or
fistpll
lea
dec
neg
idivl
cld
jo
ds
pop
out
sub
cmpsl
cmp
daa
push
cmp
enter
push
adc
pop
stc
mov
fiadds
nop
out
adc
dec
mov
fbld
call
mov
mov
push
adc
aaa
pop
xchg
sti
mov
orb
xlat
push
push
mov
sbb
push
clc
jno
test
mov
add
not
add
xor
xor
sbb
ljmp
mov
cmpb
clc
mov
mov
mov
in
out
and
xor
add
stc
push
rol
cmp
adc
negb
sub
pop
jo
movsl
sub
jecxz
out
pop
loopne
gs
fbld
mov
push
xor
popf
dec
xor
push
push
std
in
mov
loopne
pop
cmp
cmc
push
pop
pop
fcomps
inc
mov
push
dec
jge
add
neg
pop
inc
mov
lahf
mov
in
aaa
clc
mov
cmc
outsl
sbb
or
dec
arpl
in
test
addr16
sbb
push
and
inc
hlt
fldenv
xor
mov
sub
hlt
jmp
mov
mov
adc
in
mov
inc
fs
das
push
lods
rcll
enter
scas
movsl
aaa
in
mov
sub
jmp
or
pop
lret
push
fnstsw
adc
push
add
insl
addr16
cli
in
inc
daa
adc
xchg
or
pop
xlat
outsb
jge
mov
pushf
sbb
adc
popf
stc
jno
loop
or
out
loope
stos
push
jmp
add
inc
add
lret
xchg
push
lret
out
es
adc
cmp
lods
inc
xchg
add
add
adc
aad
jmp
repz
inc
dec
jp
push
sub
inc
outsb
mov
rolb
sbb
add
mov
push
mov
xor
test
mov
add
adc
jg
and
xchg
icebp
scas
bound
push
xor
lods
sahf
idivl
push
cmpsb
mov
and
or
aad
sbb
test
mov
mov
mov
shll
popa
nop
push
xchg
in
lods
mov
pop
cmp
bound
cmp
mov
dec
cmc
rorb
aaa
sub
out
enter
std
arpl
sarl
add
std
xor
push
sub
popa
jne
push
outsb
inc
rolb
pop
adc
adc
xor
inc
xor
adc
adc
cmpsl
insl
inc
outsw
lods
pop
rorb
popf
repnz
xlat
lods
pop
mov
jmp
test
das
movb
adc
adc
int3
int3
mov
push
cmpsl
dec
jecxz
mov
sub
mov
sub
test
push
adc
lods
sbb
daa
sbb
pop
cli
cltd
loop
cs
xor
push
and
sti
outsb
cltd
dec
lahf
inc
inc
or
dec
sbb
dec
subl
push
dec
inc
or
sub
pop
jecxz
lods
pop
jmp
aam
adc
xchg
clc
movsb
flds
imul
es
mov
add
lods
pushf
mov
push
test
mov
mov
push
push
xor
int
out
push
rcr
mov
in
push
ds
inc
cltd
pop
xchg
data16
imull
stos
fidivs
xchg
insb
daa
test
pop
jns
fsubl
sar
and
loopne
lods
push
xlat
pop
inc
clc
jae
sbb
loop
mov
repz
pop
and
pop
mov
mov
movsb
rcrb
out
cs
jecxz
lock
mov
int3
repnz
xor
mov
mov
stos
pop
cmp
jg
or
jbe
sahf
lods
ret
lea
add
cmp
int
lods
mov
daa
outsl
gs
dec
add
xor
hlt
inc
add
push
adc
xor
push
pop
fadds
lock
dec
jb
jg
sbb
scas
cld
adc
adc
sub
cmp
bound
mov
scas
cmc
push
loope
shl
adc
jb
insb
mov
mov
dec
inc
pop
xchg
cld
and
popf
sahf
pop
inc
sbb
or
xchg
scas
out
out
outsb
lock
jl
mov
insl
cmp
dec
jae
ret
mov
mov
push
ror
and
stc
out
cmpsl
xor
ret
lea
inc
repz
ret
adc
lods
fwait
je
xor
add
cmc
lock
dec
lods
mov
sub
xchg
aam
mov
sub
jl
roll
sbb
xlat
sub
mov
xor
push
dec
adc
dec
pop
and
lahf
in
jns
sbb
test
adc
leave
mov
pop
test
lahf
mov
repz
stc
stos
fidivrl
xchg
fisubrs
in
pop
mov
fsubrl
xor
jl
mov
andb
out
adc
and
adc
push
ljmp
mov
ss
inc
aas
mov
mov
xor
sub
dec
add
imul
cmpsb
lock
xorl
ret
xlat
xchg
inc
out
adc
and
add
pop
sub
push
scas
lea
xorl
mov
add
mov
stc
jno
sub
sub
xor
icebp
insl
xor
fldt
pop
stc
inc
rcl
andb
addb
adc
or
sbb
jmp
mov
adc
rorl
cmp
test
add
movsb
sbb
and
aad
popa
rcrb
cli
adcb
push
not
cli
sbb
mov
inc
lods
test
hlt
push
and
jmp
and
or
cmp
cmp
das
or
scas
mov
pop
and
dec
lahf
aas
imul
push
arpl
fdivrp
out
stos
push
test
out
mov
mov
pop
outsl
loopne
inc
push
adc
inc
adcl
pop
mov
movsl
and
cmpsb
adc
cs
xchg
dec
push
fsubs
xor
test
lahf
jle
xor
adc
push
and
rcrb
mov
xchg
push
mov
rorl
inc
lret
and
sbb
shrb
imul
scas
push
lahf
mov
nop
dec
add
adc
inc
arpl
dec
out
add
fidivl
cmp
push
fists
xchg
cmpsb
adc
out
pop
fsubrs
xor
loop
mov
movsb
stc
sub
out
cli
jge
lock
aad
pop
mov
sbb
cld
cli
test
or
sub
cmp
lret
push
scas
and
sbb
imul
popf
mov
xchg
dec
push
insb
push
pop
inc
popa
cli
cmpsl
dec
in
add
jnp
mov
fbstp
ds
sub
fisubl
add
inc
mov
aas
mov
jnp
out
xchg
sarb
jg
pop
dec
inc
sub
loopne
inc
fdivrl
cltd
pop
imul
cltd
jae
mov
pushf
pop
xor
mov
into
mov
cmp
xorb
add
inc
push
roll
addl
shrl
lret
fldenv
mov
test
and
inc
jl
inc
lret
sub
and
lds
loopne
cmpsl
stc
dec
repnz
sbb
add
push
xor
adc
loope
jl
sbb
jnp
adc
les
sub
sub
or
push
mov
ss
inc
adc
lea
out
out
push
cli
leave
dec
cmp
lods
pop
mov
es
push
clc
es
pop
pop
mov
lret
and
cltd
hlt
pop
fcoms
adc
sub
push
test
inc
repz
dec
mov
loope
int
add
mov
es
mov
sbb
fs
lret
xchg
cld
dec
hlt
mov
jae
out
ljmp
dec
push
push
jo
outsl
sbb
fsave
call
add
insb
scas
mov
cwtl
les
popa
xor
mov
loop
enter
dec
dec
cmp
pop
insl
xor
jl
fs
fldln2
in
loop
push
add
dec
nop
sub
jno
loope
push
scas
and
or
aad
xlat
nop
jnp
inc
or
adc
add
and
sub
insl
sbb
and
shl
inc
gs
in
in
repnz
xlat
adc
mov
sbb
pop
pop
sbbl
push
enter
xchg
mov
mov
cmp
mov
les
jecxz
mov
imul
and
or
cmp
imull
in
xchg
sbb
fdivrl
out
addb
subb
mov
push
ficoms
popa
adc
xor
in
dec
jo
dec
xchg
push
inc
inc
cmp
pop
sub
mov
ficoml
das
sar
shlb
mov
sti
aas
jle
shlb
sbb
ljmp
mov
lock
loope
divb
daa
sbb
and
jmp
imul
mov
ds
scas
jecxz
jne
aad
and
rorb
add
scas
pushf
shl
mov
or
scas
sub
sti
notb
aam
cltd
mov
lods
mov
mov
lds
cmp
aas
jle
lea
sbb
shll
daa
fsts
rorl
inc
cmp
dec
or
xchg
sbb
push
test
inc
dec
mov
rcl
cmp
push
cmpsl
pop
pop
or
push
fidivl
adc
shufps
push
sub
outsb
pop
mov
dec
frstor
or
cltd
aam
fs
pop
jne
aad
lahf
inc
mov
in
das
mov
mov
aas
push
jb
pop
mov
mov
mov
push
mov
pop
dec
adc
jle
add
adc
int3
jge
cmp
and
adc
sub
jo
ret
movl
dec
sbb
mov
int3
pop
sub
lcall
shlb
sbb
clc
rcr
gs
dec
jmp
mov
pop
adc
test
incb
rcl
repnz
in
xchg
aam
vpaddsw
lret
add
arpl
mov
jbe
daa
or
das
push
mov
mov
or
mov
sub
dec
push
out
xlat
lret
sub
addl
into
int3
sub
pop
pop
fs
sub
jns
jge
fcoml
ja
sub
ret
jecxz
or
ret
adc
aas
cmp
jne
mov
test
shlb
jb
test
adc
pop
xor
add
pop
fwait
xchg
pop
mov
cmpsb
inc
mov
test
bound
xchg
xchg
repz
addr16
push
or
adc
incb
scas
test
pop
xchg
xchg
mov
or
push
sub
insb
cmpsb
out
imul
out
out
shlb
fwait
mov
and
xor
or
add
gs
movsb
sahf
clc
sub
test
lea
rep
sbb
popl
push
gs
es
fdivp
fcmovne
jne
add
pop
insl
xorl
inc
sbb
vprotw
cmp
sub
lea
mov
inc
lcall
or
or
or
pop
mov
jmp
sbb
add
jbe
sbb
sub
aam
xchg
fwait
mov
in
aas
xor
roll
or
out
mov
adc
push
xchg
stos
push
and
adc
push
mov
and
addr16
dec
mov
int3
jno
cmp
dec
bound
push
rolb
in
subb
insl
adc
sub
mov
sbb
add
leave
sub
cmp
push
bound
cmc
lret
decl
lods
int
mov
pop
ss
cwtl
sti
arpl
test
in
mov
mov
into
adcl
mov
jmp
iret
push
outsl
pop
inc
iret
lods
add
jbe
ret
shlb
dec
inc
xchg
sti
mov
sahf
pop
and
into
ret
and
pop
jmp
shll
js
cmc
adc
jns
mov
test
inc
add
pop
jle
iret
jge
jbe
stos
push
shlb
add
lds
cmp
les
jo
inc
fidivrl
ret
push
and
scas
sahf
movsl
loopne
xor
ret
pop
add
orb
es
jno
or
xorl
xchg
out
dec
lahf
aas
hlt
lret
xchg
and
adc
dec
push
cld
ljmp
test
repnz
cmp
jp
scas
push
lahf
movsl
adc
negb
push
cli
add
lods
xchg
rcl
movsl
ds
jecxz
xchg
dec
push
into
mov
inc
and
out
test
jp
adc
mov
xchg
sub
out
push
insb
out
and
xchg
xchg
adc
je
jmp
jmp
ljmp
xchg
out
xor
loop
imul
adc
je
jmp
lods
mov
in
subl
movb
push
stos
push
and
int3
int
cmpsb
das
mov
push
lahf
aas
or
aam
adc
sbb
aam
mov
push
enter
std
mov
sbb
push
sar
xchg
movsb
or
add
adc
add
jmp
cmc
or
cwtl
pusha
dec
mov
add
mov
inc
insl
push
movsl
lock
js
xor
sbb
filds
das
or
lahf
push
inc
mov
sahf
add
or
mov
cs
and
sub
aas
movsb
aas
mov
movl
cmpsl
xchg
lret
jb
ret
push
mov
sub
mov
lds
shl
scas
fs
das
jae
dec
and
stos
bound
movsl
inc
push
cwtl
out
push
sub
push
jge
adc
add
fcmovnu
push
mov
and
sbb
push
mov
lods
cld
nop
cmp
cwtl
pop
stos
negb
jle
mov
cmp
test
push
push
sub
mov
push
push
mov
xchg
and
push
cli
push
test
xchg
icebp
sbb
fiaddl
in
push
and
adcb
popa
decl
jle
gs
rcll
outsl
fs
jns
ror
add
psubsb
into
and
insl
push
subb
mov
dec
je
ljmp
jb
fadd
mov
stos
cmp
daa
jbe
and
push
pop
adc
fists
icebp
jb
mov
sahf
dec
jno
and
out
scas
jbe
pop
xchg
test
jb
dec
cmc
add
sub
adcl
push
add
push
mov
icebp
mov
and
jb
add
jp
jo
stc
mov
fwait
jb
icebp
push
fsubrl
mov
add
cs
adc
imul
fs
test
jns
add
clc
xchg
and
imul
fsubs
pushf
fistps
jo
mov
insl
jecxz
sub
adc
out
loope
push
shrl
xor
pop
cmp
xlat
in
hlt
mov
loop
testb
jp
call
fldl
adc
xor
inc
lock
and
inc
pop
aas
mov
mov
xor
das
fisubs
and
les
or
icebp
enter
pop
mov
out
dec
in
adc
iret
pop
add
movb
pusha
scas
aas
sbb
shlb
cmp
xchg
push
in
in
jle
mov
dec
inc
shr
mov
popa
setae
rcrl
popf
add
vpsubusb
mov
mov
loope
dec
mov
movsl
test
pop
inc
jno
inc
mov
sub
push
cmp
movsl
aam
mov
sbb
mov
sbb
adc
inc
cmpsb
xchg
cmp
jp
push
popa
lahf
aas
or
adcb
pop
icebp
ljmp
scas
pop
dec
push
cmpsb
xchg
pop
xor
dec
movl
sbb
popf
insl
pop
push
stos
push
daa
cmpsb
lods
mov
daa
sbb
add
or
lods
adc
cld
lods
roll
test
mov
das
sbb
aas
jle
jno
cli
hlt
lret
fidivrs
add
test
in
dec
add
push
pop
mov
inc
fwait
dec
int3
adc
aad
aaa
sbb
push
xor
mov
mov
dec
xchg
pop
ljmp
adc
pop
xchg
sbb
adc
adcb
fs
in
lods
mov
sub
addl
dec
popa
sahf
mov
mov
mov
es
stos
fstpl
jo
jmp
fnstenv
cmp
dec
int3
cmpsb
outsl
leave
je,pn
fisubs
pop
jb
popa
cwtl
mov
test
rcr
jno
mov
testb
add
in
sbb
sbb
or
stos
mov
scas
pop
xor
push
fdivrp
push
pop
iret
add
mov
dec
imul
push
xlat
insb
jns
or
decb
loopne
aad
int3
addb
or
and
pushf
imul
inc
push
adc
scas
pop
xor
pop
adc
movsl
cmp
popf
and
int3
clc
cmpsb
sub
mov
pop
mov
lcall
and
rol
jl
das
and
mov
adc
pop
lods
add
mov
or
lret
and
lret
push
pop
test
and
pusha
xor
sbb
mov
movsl
push
inc
ljmp
test
sti
rep
mov
jmp
and
add
loopne
out
lods
push
icebp
lahf
aaa
fnsave
xor
sbbb
daa
into
mov
sahf
pop
adc
cltd
add
adc
aas
inc
call
inc
lret
mov
cmpsb
xchg
push
in
add
loop
ficomps
dec
das
mov
add
sub
xor
and
mov
lahf
es
sub
mov
jno
push
lock
adc
scas
dec
jbe
sub
push
pop
inc
insb
sub
insl
mov
sub
lock
pop
mov
jecxz
out
xchg
test
lock
adc
ret
mov
xor
mov
lds
mov
and
jo
ss
dec
mov
adc
or
lahf
je
sub
mov
aas
dec
sbb
dec
std
sti
lods
aaa
cli
sbb
lahf
adc
fbld
aaa
add
in
jecxz
cmpsb
das
fcmovne
inc
mov
or
or
xchg
and
sub
or
cld
inc
adc
xchg
cmp
mov
insl
adc
pop
and
sti
add
cs
xchg
repnz
push
fiadds
bnd
movsl
repnz
jne
push
sarb
sahf
outsl
mov
and
lret
pusha
cmp
adc
stos
add
cld
stc
lods
add
les
or
xchg
pushf
jp
je
mov
add
adc
rclb
sub
fdivl
adc
repz
sahf
lret
sub
fistpl
popa
stos
and
fdivrs
sub
xor
loope
dec
mov
movsl
and
pop
sub
mov
mov
add
push
loope
and
test
int3
xor
scas
test
sub
inc
test
sub
lods
pop
cmp
dec
push
and
adc
push
inc
push
stos
mov
mov
inc
movsl
dec
push
imul
je
in
fcmovb
dec
sub
xchg
int3
push
mov
or
fisubs
les
mov
imulb
shll
sbb
cmc
adc
sbb
jmp
add
cmp
iret
jge
sbb
add
lds
xchg
sub
add
jo
inc
fidivrl
lret
adc
mov
scas
sahf
movsl
loopne
add
dec
pop
ret
pop
add
orb
es
jno
or
loope
arpl
mov
dec
lahf
aas
hlt
stos
in
lcall
push
cld
ljmp
test
repnz
cmp
jp
scas
push
lahf
movsl
adc
pop
mov
lods
xlat
cmpsb
shlb
sbb
dec
ja
mov
inc
and
out
test
jp
adc
mov
cmpsl
sub
out
push
insb
out
and
xchg
xchg
fs
pop
cmp
sub
pop
cltd
insb
inc
xchg
out
xor
loop
imul
pop
mov
fildll
lods
mov
sbb
subb
inc
scas
xchg
movl
push
stos
push
and
cmpsl
cs
setge
adc
push
ret
sarb
push
insb
jle
push
adc
cmp
and
aam
lds
jno
sub
cs
insl
pop
lods
pop
sub
stos
pop
adc
xchg
jle
sub
fdiv
js
out
gs
pop
mov
stos
rclb
imul
sbb
pop
push
xor
fyl2xp1
inc
scas
fcoms
inc
push
adc
rcll
aam
add
enter
sbb
fisttpll
dec
mov
and
test
or
daa
xchg
mov
adc
inc
jbe
out
push
imul
mov
and
xchg
in
and
aas
dec
cmpsl
cmp
mov
ss
ror
xchg
call
and
jg
call
leave
cs
scas
aas
mov
bound
ja
cmp
or
cli
fldpi
xchg
add
or
clc
sub
out
mov
aad
scas
scas
enter
ret
sbb
mov
xor
and
inc
pop
ret
xchg
cltd
decb
test
xor
mov
xchg
and
mov
cmp
repnz
lds
push
out
jge
outsb
and
call
jns
outsb
xor
repz
and
aaa
in
push
inc
pop
fs
out
in
mov
sar
xchg
mov
or
adc
push
call
jl
push
mov
rorl
scas
fnstenv
bound
mov
cli
ds
sbb
mov
pop
jmp
push
roll
pop
movsb
cmp
pop
out
pop
lds
jne
jns
xchg
cmp
ss
lcall
aad
es
pop
cmpsl
sub
orl
adc
jns
insl
xor
mov
cmp
mov
notl
out
std
mov
loop
mov
and
jne
jno
ljmp
push
fisubl
rol
adc
dec
aad
fildll
adc
stos
test
scas
or
mov
fs
sbb
sub
pop
cli
scas
out
shll
mov
adc
xchg
movsl
dec
out
sbb
mov
xchg
xlat
ljmp
push
shl
lds
fsts
push
mov
lahf
and
imul
adc
add
dec
jle
push
and
xor
sar
stos
fdivl
into
jp
sub
icebp
dec
and
mov
outsb
shr
rclb
mov
popa
xchg
mov
scas
popa
fwait
popf
mov
xchg
mov
cs
loope
in
mov
movsl
fwait
in
out
and
mov
into
jp
and
mov
imul
mov
adc
inc
mov
andl
adc
dec
sub
mov
daa
mov
push
rcrl
jge
flds
scas
aas
hlt
push
sti
jl
fidivrl
fwait
shrl
mov
inc
sbb
stos
and
sbb
shlb
cmp
lods
pop
mov
or
add
addr16
mov
sub
aad
push
inc
aad
inc
mov
xchg
xor
push
les
rclb
pop
cltd
push
inc
shlb
pop
fst
mov
rorb
movsb
ds
dec
lahf
inc
inc
jbe
sbbb
shll
int3
jno
mov
push
incl
repnz
andl
int3
testb
and
jne
mov
lods
push
sub
addr16
stos
dec
xchg
mov
stc
add
js
dec
loop
push
and
enter
fstps
sub
lahf
out
mov
add
imul
stos
push
add
pop
push
pop
jp
jecxz
in
add
mov
pop
push
ljmp
fucomp
inc
sbb
movsb
mov
loop
movsl
shrb
test
stos
add
pop
inc
push
scas
push
outsl
rorb
clc
mov
gs
xor
dec
or
add
ja
movsb
jle
and
sub
sbbl
mov
rorl
sub
js
aad
sub
insb
lock
dec
inc
mov
cmp
scas
lock
push
movsb
jecxz
and
popa
xor
mov
int3
xchg
test
popa
adc
data16
lods
mov
push
xchg
ds
add
push
add
stos
ret
and
inc
xchg
inc
push
xchg
cmpsl
ret
jg
cmpsl
call
adc
into
jl
or
dec
dec
je
sti
mov
icebp
sbb
cmp
dec
cmp
in
mov
stos
loope
mov
inc
cli
pusha
lcall
push
adc
add
lret
mov
adc
dec
test
sahf
dec
jb
and
adc
es
pop
shlb
es
rolb
jle
mov
cld
lock
cmp
add
mov
mov
mov
mov
jp
mov
jge
stos
mov
loope
dec
icebp
and
push
or
subb
sbb
xchg
push
add
cld
and
cld
hlt
mov
imul
stos
lea
pop
loope
movsl
xchg
cmc
mov
cmp
rorl
dec
repz
cmp
pop
aaa
popf
lahf
push
movsl
into
ja
out
movsl
test
mov
xor
jg
imul
inc
sub
rol
inc
pop
daa
movsl
repnz
and
dec
adc
xor
mov
loop
jecxz
inc
clc
add
inc
lea
xor
push
dec
add
xchg
addr16
cmp
adc
pop
pushf
cmp
dec
mov
outsb
pop
insl
hlt
dec
ja
repz
in
aad
hlt
lcall
js
imul
xchg
loopne
cmpsl
cmp
ud2
aas
jle
les
test
stos
jle
in
sahf
rcrb
fisubrl
jge
movsl
xor
jecxz
mov
mov
push
add
fsub
jns
inc
jle
aas
cmpsl
sub
je
inc
inc
ds
jl
push
in
jo
out
mov
jns
or
out
lods
fisttpl
xchg
or
dec
sbb
inc
push
jae
cwtl
mov
hlt
sbb
mov
addl
or
ljmp
test
cmp
es
scas
mov
mov
xchg
fsqrt
mov
add
scas
sahf
movsl
loopne
xchg
pop
repz
pusha
mov
sbb
sub
sahf
inc
negb
movsb
pop
dec
cmp
fsts
sub
ja
pop
cli
push
xor
mov
lds
xchg
adcl
mov
je
dec
loop
push
shl
je
cli
push
mulb
ret
or
daa
adc
lods
inc
rcl
movsl
out
mov
aas
hlt
notb
addr16
inc
scas
int
adc
push
add
sar
jg
js
lea
push
lahf
cmpsl
and
stos
push
scas
xlat
dec
add
mov
add
push
fdivl
inc
inc
add
in
push
inc
push
inc
sub
icebp
mov
cmpsb
sbb
mov
sub
mov
cmp
lods
cs
shrl
mov
loop
fistps
cmpsb
int3
ret
push
movsb
adc
stc
jno
vandnps
lock
imul
pop
mov
movsb
xchg
mov
cmp
adc
jp
les
fucomp
inc
sub
pop
sub
pop
jge
insl
outsb
jl
mov
sahf
sub
je
cwtl
cmpsl
fsub
pop
sub
sahf
lcall
mov
mov
and
rorb
pop
stos
mov
stc
dec
push
cmp
xchg
bound
push
and
inc
pop
add
decl
xlat
clc
iret
fldl
pop
icebp
cmp
add
lret
pop
js
dec
sub
in
nop
or
enter
js
mov
std
int3
inc
sub
or
xchg
icebp
int3
jbe
cmc
jns
adc
ljmp
iret
and
lods
std
cmp
and
and
mov
fisubl
lcall
adc
sahf
flds
fwait
add
sarb
gs
or
in
shlb
js
xchg
loope
dec
or
adc
cli
jae
dec
lret
lods
ret
out
adc
fpatan
xchg
and
mov
lret
cmpsb
je
sub
ljmp
push
add
ja
dec
rolb
aaa
dec
jnp
jl
xchg
adc
and
xchg
inc
push
and
inc
sbb
xor
sbb
jns
sahf
cmp
pop
mov
and
jmp
mov
fs
icebp
jmp
mov
ljmp
cli
mov
sahf
pop
fidivs
xlat
sub
inc
push
es
push
mov
cmp
push
call
out
mov
pop
push
and
addr16
stos
xlat
jecxz
sbb
jg
and
push
leave
inc
cmp
aam
test
test
into
shlb
int
or
in
mov
mov
in
mov
lret
pop
cmp
mov
incb
or
js
mov
leave
enter
cmpsl
cmc
add
call
jecxz
pusha
sbb
mov
popf
std
adc
pusha
or
jge
or
inc
pop
jbe
fdivl
stos
aad
cmp
aad
in
push
jo
test
aas
hlt
or
in
mov
lods
cltd
mov
xchg
std
fimull
cmpsb
pop
mov
cmp
push
pop
inc
sub
jge
pop
mov
push
and
into
into
push
push
xchg
lret
decl
sub
mov
les
data16
jns
pop
jmp
test
cltd
test
and
jge
cmp
jl
lods
push
outsl
js
iret
gs
pop
stos
fstpl
lods
inc
vpdpwssds
dec
cmp
xor
cmpsl
sbb
jns
sub
enter
movsb
out
mov
popl
in
push
inc
mov
pop
lcall
push
and
pop
mov
inc
adc
push
fstpl
push
incb
das
add
jge
insl
lods
sub
dec
adc
mulb
sbb
push
adc
dec
mov
ja
pusha
dec
ds
add
xor
ss
jge
test
pop
sub
jmp
fiaddl
lahf
aas
add
and
mov
lahf
fldl
or
lcall
out
dec
cmp
leave
push
xchg
push
scas
movsb
out
fildll
mov
xlat
dec
add
sar
arpl
push
cmp
rorb
dec
adc
push
std
sbb
cwtl
inc
mov
mov
in
dec
sbb
jmp
pop
testl
sbb
sub
mov
stos
push
mov
cmpsb
push
cmp
shrb
mov
ljmp
fstpt
xchg
pop
jecxz
and
stos
int
sbb
mov
imul
mov
adc
in
push
push
test
rolb
sub
xchg
add
enter
cmpsl
cmp
testl
les
and
sub
lahf
or
xchg
mov
push
std
inc
dec
pop
and
xchg
xchg
bound
test
gs
ficomps
push
xchg
repz
mov
mov
iret
cld
inc
mov
movsl
ret
sub
mov
pop
inc
fstps
cmp
xor
mov
or
jae
cld
lock
add
jbe
lea
es
cs
test
inc
push
and
repz
std
or
rcr
movsl
sub
sbb
mov
clc
jb
jg
clc
lods
jge
mov
lods
inc
outsb
pop
sbb
adc
push
push
xor
stc
xchg
sarb
lret
in
movsb
cmc
mov
pop
or
fstl
clc
test
pop
insl
mov
iret
adc
loop
loopne
push
ljmp
ljmp
movsl
call
cli
enter
shlb
dec
xor
xchg
mov
pop
push
ret
dec
icebp
sbbb
lahf
jns
gs
nop
stos
insb
fnstenv
cmc
aaa
xor
loope
push
ror
inc
xor
lahf
sbb
add
mov
and
lods
test
aaa
mov
icebp
cmp
add
pop
int3
imul
loope
adc
fnstenv
call
mov
or
jno
repnz
arpl
inc
jb
jge
mov
gs
mov
fwait
cmpsl
adc
ret
jl
cli
ss
xor
mov
in
push
sub
jae
xchg
cmpsb
into
shlb
or
stos
aaa
cmp
popf
xlat
fcom
mov
mov
stos
stos
clc
xor
xor
in
fstpt
test
lret
repz
inc
push
adc
inc
fnstenv
arpl
clc
out
pushf
sti
aad
orb
pop
sub
sbb
dec
mov
insb
roll
out
adc
jle
cmp
pop
fcomps
pop
cmp
fisubs
xchg
push
mov
mov
lcall
popf
add
mov
ljmp
aam
pop
leave
cmp
scas
imul
popa
mov
sbb
jnp
aam
cmp
enter
subb
cs
scas
or
dec
out
xor
dec
cmp
ret
pop
push
push
pop
inc
int
push
shll
out
inc
outsb
and
pop
pop
push
push
cmpsl
cmp
sbbb
dec
xchg
cs
jae
mov
pop
icebp
into
add
mov
test
dec
jb
outsl
ljmp
fidivrl
xchg
sar
add
add
add
xchg
sub
pop
cmp
and
enter
ljmp
sbb
xor
jmp
into
push
sub
push
in
pop
mov
dec
push
orl
icebp
adc
push
xchg
dec
xchg
push
push
cmp
push
adc
dec
ljmp
pop
cmp
and
into
ficomps
cmpsb
das
xchg
pop
sub
pop
stos
pop
test
jo
dec
adc
mov
imul
sub
jnp
jmp
fldcw
mov
pop
inc
push
push
push
xor
jo
dec
push
dec
jmp
push
push
or
loope
movsl
mov
movsl
sbb
xchg
adcl
jmp
ss
pop
pushf
test
roll
aad
jl
lods
scas
fcoml
bound
icebp
mov
mov
cmp
pop
mov
je
test
add
mov
lods
pushf
lahf
in
jno
inc
sbb
jnp
dec
sbb
lret
xor
shl
test
push
cmpsl
inc
mov
pushf
in
aas
sub
sbb
pop
add
test
out
adc
fstpl
sbb
fldl
hlt
clc
nop
addb
iret
iret
mov
jo
les
xchg
jge
sub
jb
mov
pop
xor
out
push
nop
scas
imul
in
pusha
cmc
fwait
sar
mov
movl
push
mov
add
inc
push
adc
inc
jne
inc
clc
loopne
outsb
push
jle
jmp
rcrl
jmp
popf
outsl
icebp
jp
jp
xor
ss
fwait
sub
pop
loopne
fisubrs
rcrb
mov
loopne
mov
jp
icebp
xchg
test
pushl
bound
pop
aaa
push
aas
lock
dec
xor
mov
inc
sbb
pop
cmp
or
push
sub
add
lcall
notb
add
es
inc
lods
xor
mov
cs
push
call
jl
cli
mov
test
pop
mov
jmp
mov
cmc
mov
mov
xchg
mov
adc
xchg
out
mov
test
mov
xor
out
cli
jo
add
and
adc
pop
sub
sbb
std
and
sub
sub
push
fwait
and
inc
shll
bnd
fnsetpm(287
aas
xchg
iret
enter
mov
addr16
mov
xchg
xor
hlt
imul
mov
repz
add
das
mov
in
dec
push
ljmp
adc
jg
movsl
repnz
cltd
push
xchg
je
out
or
pop
popa
jae
nop
jns
inc
inc
push
adc
inc
and
rcrb
sbb
popf
or
fistps
imul
mov
adc
lcall
out
pop
dec
cmp
xchg
mov
test
enter
push
lea
ja
shl
or
push
inc
and
cmp
testb
aas
or
addb
push
pop
sbb
in
or
add
pop
popf
loopne
and
lea
dec
push
push
aam
pop
adc
mov
dec
flds
pop
or
shr
fnstcw
or
jbe
lds
and
nop
sbb
popf
arpl
movsl
dec
out
mov
jle
dec
std
dec
jnp
push
and
jne
mov
std
fimull
push
jle
call
mov
and
and
mov
movsb
fsts
mov
js
dec
lahf
dec
orl
cmp
and
adc
lods
xchg
mov
aas
hlt
push
jnp
inc
jne
in
mov
inc
inc
ret
mov
or
addl
dec
jecxz
cltd
pop
pop
lret
inc
push
adc
sub
add
shl
arpl
js
lahf
dec
test
aas
dec
cmp
scas
pop
cmpsb
inc
sub
movsb
pop
inc
loopne
and
jno
cmp
inc
lods
xor
xchg
fldenv
and
add
add
lds
jno
sub
sub
dec
rcrl
and
popa
nop
mov
std
mov
add
sbb
insl
push
cmp
push
pop
dec
xor
and
cmpsb
int3
mov
dec
jb
push
fisubl
sbb
push
int
push
in
dec
lods
orb
push
jae
lock
cmp
jb
das
sbb
jp
out
stos
add
les
mov
pop
in
cmc
or
das
pop
mov
sbb
dec
leave
rsqrtps
xor
push
pop
add
mov
in
pop
dec
cmp
mov
addl
test
hlt
loopne
in
das
pop
mov
les
xchg
cmpsl
pop
cltd
mov
lret
dec
sub
iret
sub
mov
rorb
pop
ja
cld
int3
outsb
sub
jae
jl
imul
adc
cmp
adc
xlat
adc
out
pusha
sbb
or
add
jle
stos
std
xchg
testb
test
push
push
pop
xor
adc
dec
js
stc
add
out
or
dec
xchg
lock
jmp
push
and
xchg
inc
sahf
mov
fcmovbe
dec
sti
stc
test
mov
or
xlat
cmp
adc
cmp
lods
ret
xchg
mov
loop
inc
mov
test
fisttpl
repz
xorb
sahf
xlat
inc
cmp
aas
sarl
mov
inc
add
mov
adc
daa
jo
and
or
loopne
push
icebp
and
push
or
adc
popf
jmp
popf
stos
cmp
push
out
xchg
mov
dec
xor
fldl
inc
mov
mov
add
sub
mov
outsb
fisubl
sbb
fstl
inc
outsb
inc
push
adc
mov
inc
fildl
stos
das
xor
mov
outsb
lret
pop
inc
push
jg
ljmp
xlat
in
jno
push
repnz
cmp
push
gs
sahf
fsts
in
in
jg
dec
xchg
jge
sbb
kaddw
loopne
and
loope
jl
jp
cmp
adc
or
adc
bound
popf
in
sub
clc
add
jne
dec
daa
inc
push
and
pop
out
cmp
jo
push
inc
mov
lahf
aas
stos
repnz
pop
cltd
ljmp
add
inc
xchg
stc
scas
pop
jle
gs
repnz
rcll
sbb
pop
cltd
push
mov
pop
or
ljmp
rolb
outsb
inc
push
adc
mov
stos
add
ficompl
out
ljmp
rol
push
jp
jbe
enter
jns
cmp
mov
pop
pop
xor
jmp
fildll
push
imul
push
mov
jge
and
adc
push
and
mov
lahf
dec
int3
push
in
lahf
mov
test
cmpsl
push
test
mov
loop
inc
push
adc
push
push
sub
imul
mov
adc
push
into
inc
gs
xor
and
push
sti
idivb
aad
les
sub
inc
dec
dec
lcall
shlb
mov
jae
inc
jae
shlb
or
inc
stos
push
fsubr
dec
arpl
test
pop
out
add
mov
add
adc
mov
cs
inc
push
adc
notl
adc
popf
aam
rclb
lahf
aas
or
xor
scas
test
xor
pop
out
pop
clc
mov
push
stos
jecxz
pop
arpl
pop
out
push
cli
dec
sbb
dec
push
cld
pop
in
pop
ret
cmpsl
sahf
inc
cld
adc
cmp
fdivrp
sarl
scas
imul
mov
cmpsl
and
or
fsubrs
xchg
ja
adc
push
cmpsl
cmpsb
lcall
rorl
call
cmpsl
mov
daa
not
mov
call
mov
pop
dec
inc
add
pop
test
pop
xor
xchg
pop
in
ljmp
pop
and
jo
jge
out
das
fidivrl
mov
pop
fisubrl
cmp
mov
inc
push
adc
pusha
ret
xor
sub
pop
and
mov
movsl
and
mov
pop
int
ljmp
push
cmp
popa
jbe
mov
jbe
stos
cltd
fs
out
jo
call
xor
shll
sbb
adc
push
mov
jle
aaa
push
pop
mov
ret
adc
loop
cld
adcl
lret
orb
adc
push
adc
xchg
and
sti
bound
jbe
int
lock
or
orl
xlat
mov
and
push
adc
insl
repnz
aam
add
test
jb
sti
mov
daa
pusha
in
pop
dec
insl
add
fsubp
xchg
and
sbb
movsl
adc
jo
in
outsb
adc
or
out
jne
and
aad
mov
fidivrs
leave
jnp
insb
ss
push
push
sub
jge
icebp
andb
andl
and
sbb
ret
cmpsb
xor
push
mov
lahf
mov
xor
roll
leave
div
mov
in
fisttps
shrb
push
jg
loope
and
push
mov
sub
pushf
or
ja
add
rcll
xor
loope
imul
gs
pop
movb
xor
fisubl
or
shl
push
dec
or
push
lods
pcmpeqb
ljmp
repz
inc
movsl
push
jb
aas
or
lea
stc
mov
shl
mov
pop
push
mov
outsb
push
mov
jae
push
or
mov
andb
xor
and
push
xchg
lods
inc
push
adc
fs
jmp
mov
cli
inc
lret
imul
fisttps
clc
fsubr
pop
arpl
cmpsb
dec
call
cs
inc
inc
clc
or
enter
testl
mov
sub
stc
rcrl
hlt
sti
jl
fidivrl
fwait
shrl
mov
mov
mov
cmpsb
cs
arpl
rorb
int3
in
adc
fidivl
into
mov
addr16
shrb
dec
xchg
mov
aas
hlt
or
inc
sti
fidivl
mov
sub
add
or
pop
int3
daa
sub
mov
sarb
sahf
adc
fisubl
addr16
testb
cmp
outsl
xor
scas
lods
lds
pop
push
and
int3
ret
adc
pop
jg
push
loope
add
jb
dec
adc
push
mov
xor
dec
add
movsl
shlb
stos
dec
lahf
aas
hlt
adc
rcl
mov
lcall
mov
jno
in
rorl
int3
lahf
pop
cltd
leave
sbb
dec
lcall
dec
sub
fwait
xlat
ret
pop
cmp
push
stos
pop
mov
nop
imul
iret
cltd
adc
fmuls
je
je
xchg
xor
rorl
aaa
dec
hlt
push
dec
add
xor
mov
push
scas
cmp
mov
mov
add
cld
mov
mov
shrb
movsl
loopne
mov
cmc
or
js
fstpt
arpl
sub
idivb
andb
and
jmp
sub
lods
fistl
shll
mov
subl
adc
cmp
inc
jb
repz
jp
mov
mov
lds
insl
ficoml
inc
mov
mov
mov
mov
dec
lods
lods
mov
pop
rcrb
enter
inc
pop
mov
rorb
pop
iret
sub
add
lret
add
cmp
stos
mov
and
lea
insl
mov
add
mov
mov
mov
sahf
stos
jbe
jns
or
and
rcll
pop
clc
or
sbb
lret
xchg
sarl
stc
dec
and
std
out
gs
repz
mov
cmc
out
mov
addb
adc
fidivrl
lret
int3
mulb
cs
std
vmread
mov
mov
lds
adc
lahf
ret
inc
pop
out
stos
push
cmp
loopne
adc
std
and
mov
aaa
xchg
xchg
jge
lret
in
cmp
cmp
aad
dec
jnp
jl
add
js
and
lahf
pop
fstp
sbbl
xorl
insl
xchg
dec
push
dec
mov
addl
out
loope
repz
stos
push
add
pop
jmp
js
mov
push
aas
popf
jbe
testb
aaa
pusha
sbb
dec
insb
push
mov
movb
push
stos
aad
adc
stc
add
cmpsb
mov
movsb
push
scas
stos
movsl
ds
out
fistps
addb
mov
ret
adc
ja
data16
cmpsb
cltd
dec
jb
rcll
mov
push
into
arpl
out
imul
mov
das
mov
pop
jge
adc
jge
add
push
nop
cwtl
and
into
test
mov
ret
push
rclb
les
and
sub
xor
mov
xchg
inc
jecxz
hlt
push
in
jnp
sti
dec
dec
xchg
xchg
and
out
popf
jno
pop
jge
adc
outsb
das
and
fbld
and
je
scas
bound
mov
xchg
pop
mov
dec
bnd
pop
mov
mov
push
xlat
or
push
pop
repnz
cmp
notb
adc
stos
and
scas
adc
push
cmpsb
dec
xor
aad
fsubrl
leave
jle
notb
jno
repnz
push
stos
sub
mov
cmp
push
movsl
pushf
aas
or
test
sbb
sub
pop
sub
and
fists
lahf
fistps
sbbb
dec
xchg
cs
jns
ret
adc
cli
inc
mov
mov
xchg
and
and
aas
mov
xchg
repnz
pop
cmc
mov
int3
sub
std
insb
inc
in
add
cli
mov
testl
arpl
mov
mov
mov
sbbb
leave
dec
aam
jne
aad
popf
push
mov
loop
dec
push
adc
sub
pop
adc
xor
loop
xchg
jl
fsub
mov
out
pop
push
mov
pusha
rcl
add
shl
adc
push
leave
lahf
aam
xlat
insb
pop
daa
test
sbb
pop
mov
jbe
sub
add
js
and
dec
fists
shlb
push
pop
push
jb
les
jmp
or
and
or
adc
mov
lcall
popa
roll
push
loope
es
xchg
inc
pop
shll
hlt
pop
adc
inc
push
inc
mov
mov
addl
int
into
mov
sub
sarb
add
pop
adc
das
push
imul
pop
add
out
jnp
pop
mov
icebp
pop
adc
add
mov
pop
stos
xlat
jp
les
add
das
ret
mov
lret
or
xor
or
push
push
es
adc
fs
shlb
cmpb
inc
xor
sarb
adc
lahf
aam
ret
add
xchg
into
sub
and
and
in
inc
nop
pop
rcll
or
push
cltd
xor
cli
lea
cmp
pop
and
inc
pop
sbb
and
out
pop
adc
xchg
pushf
xchg
cmp
xorb
dec
lods
pop
movsb
outsb
mov
push
call
xchg
insb
out
adc
icebp
sbbl
clc
xor
outsb
sti
out
aam
pop
bound
adc
adc
cmp
bound
adc
jmp
insb
ret
fcomi
test
jns
mov
lret
int3
mov
sbb
lcall
dec
mov
fisttps
jbe
and
inc
xor
repz
push
cmp
pop
adc
add
mov
sahf
test
adc
lret
xchg
dec
icebp
imul
or
cmpsl
mov
add
mov
lods
jb
xlat
outsl
sbb
sarl
or
mov
xchg
addr16
fldln2
adc
fstpt
in
lahf
cmp
push
pop
or
mov
inc
sbb
dec
shll
jle
cld
icebp
ljmp
pop
adc
xor
test
ds
push
bound
shr
xchg
inc
nop
xor
pop
mov
ss
fldl
clc
or
inc
int
cli
adc
imul
popa
adcl
loop
std
dec
mov
mulps
jnp
adc
mov
ss
fldt
pop
sub
das
jno
mov
xchg
jne
push
sub
jge
push
jmp
insb
or
scas
faddl
adc
in
jge
and
stos
cs
cltd
dec
or
lods
pop
push
mov
fs
push
and
stos
jae
pop
adc
xor
lahf
dec
jl
or
adc
mov
movsb
lds
shrb
std
xlat
clc
mov
lahf
dec
push
sbb
push
imul
add
sub
sbb
das
mov
push
fbld
adc
adc
pusha
sub
push
adc
cmp
outsb
inc
je
pushf
aas
or
mov
rcl
pop
push
mov
fxam
jmp
lret
add
test
insb
mov
rol
or
push
dec
inc
ret
pop
mov
in
out
push
adc
jns
mov
cmp
dec
hlt
jbe
fidivrl
lahf
adc
je
mov
adc
inc
pop
jmp
mov
xchg
imul
fwait
stos
popf
into
jo
sbb
fldl
arpl
imul
mov
dec
sbb
std
or
push
cltd
jg
stos
fbstp
jns
shlb
sbb
dec
test
popa
rolb
push
data16
movsl
movsl
in
es
jle
int3
repnz
mov
rclb
cmp
in
dec
dec
std
das
shl
mov
push
jnp
fwait
imul
fcmovbe
std
jmp
lea
mov
dec
xor
pop
out
testl
sub
movsb
pop
or
inc
push
adc
lods
inc
and
adc
or
adc
and
adc
pop
inc
or
pop
adc
shl
xchg
dec
jns
sbb
push
and
jnp
jecxz
arpl
mov
fisubrs
or
adcb
push
sub
mov
mov
ss
test
aad
insl
loopne
fstpl
mov
and
add
incl
shlb
or
dec
xchg
pop
jmp
xor
inc
dec
cmp
imul
stos
pop
adc
and
enter
and
mov
shr
mov
iret
and
inc
mov
outsb
sub
ficompl
scas
mov
rcr
mov
insb
std
mov
out
icebp
cmpsb
addr16
sti
fmull
jl
sarl
add
mov
leave
jecxz
add
xor
jae
inc
mov
shll
out
out
and
int
jbe
xor
inc
ja
xor
adcl
inc
cld
testb
inc
mov
dec
add
xchg
ficompl
push
ret
xchg
popf
jp
das
mov
xor
repz
cmc
xor
mov
and
adc
and
pop
and
pop
adc
imul
mov
adc
pop
gs
xorl
ds
fimull
ds
in
hlt
hlt
add
push
dec
out
rcl
adc
and
xchg
dec
int
push
cmp
jne
xor
pop
int3
mov
xchg
mov
fsubrp
adc
imul
push
or
sbbb
add
ffreep
and
cmp
test
gs
dec
cmp
push
imul
adc
nop
push
and
lret
clc
out
test
mov
push
adc
push
push
imul
mov
inc
ljmp
movsl
pop
in
imul
inc
push
push
fs
push
mov
in
xlat
fidivl
repz
popf
dec
xchg
or
add
or
cld
mov
insl
arpl
andl
aam
outsb
xor
push
add
xchg
cli
popf
in
test
rolb
jno
pop
push
and
jnp
test
cmp
daa
fmull
sub
push
dec
lahf
aas
mov
inc
sbbb
push
and
jne
pop
out
inc
inc
testl
shrb
lret
int3
popf
lods
inc
push
adc
mov
ficoml
scas
test
movsl
cmp
pushf
aas
or
add
in
rcll
aam
xor
outsb
shufps
push
sub
cli
roll
mov
fisubl
xchg
inc
pop
aaa
cmp
cmp
enter
cmpsb
xchg
pop
imul
sub
xchg
xchg
cs
testb
push
into
int
jp
loop
pop
rol
mov
incl
jo
lahf
push
jg
cmpsb
inc
mov
inc
mov
adc
cmpsb
das
pop
out
inc
pop
mov
pop
incb
or
and
mov
iret
add
popa
into
cli
cmpsb
sbb
loopne
imul
aas
ja
push
pop
sbb
push
adc
push
fists
iret
add
jbe
fwait
pop
pop
out
rol
in
or
adc
out
incb
cmp
pop
mov
cmpsb
xchg
ds
ds
dec
lahf
sti
jns
jno
cltd
jmp
cwtl
inc
pop
inc
add
cmp
sub
cmp
shl
arpl
sub
sti
testb
push
sub
incb
test
xlat
inc
insl
sub
sbb
cmpsl
dec
lahf
mov
mov
loope
enter
xchg
js
ljmp
test
jns
mov
mov
es
jle
jno
cltd
jmp
ffreep
mov
scas
push
std
fimull
fstl
pop
popa
rcl
popf
sub
cli
imul
push
inc
sbb
adc
cmc
pushf
imul
sti
jge
aaa
xchg
and
out
out
lods
push
fdivs
mov
push
or
jp
pop
cmp
xor
lret
mov
enter
cmpsl
inc
add
cwtl
mov
ljmp
into
dec
fiadds
je
pop
out
inc
push
std
add
mov
xor
shlb
jno
inc
xor
push
into
dec
cs
lret
sahf
and
repnz
subb
lahf
mov
stos
lret
mov
xchg
notl
and
and
movsb
rcl
fadds
inc
cli
jmp
pop
dec
mov
xlat
xor
out
push
adc
sub
xchg
xlat
xlat
mov
int
jo
and
aam
dec
push
jae
jnp
jg
adc
push
jmp
scas
lret
xor
xor
mov
sti
push
insl
mov
lds
add
pop
sub
push
adc
lods
or
rcrb
cli
push
or
pop
out
scas
push
shll
fsub
ss
sbb
out
cmp
jmp
mov
push
inc
pop
gs
pop
and
dec
shl
mov
repz
cmp
push
dec
mov
lahf
and
loope
bound
loop
jno
cmpsl
add
repnz
pushf
cmp
push
cmp
jne
jecxz
iret
fistpll
adc
loop
xchg
outsl
fistpl
fsubs
icebp
and
mov
bound
and
in
imul
fidivl
mov
stos
dec
in
cmp
clc
js
push
clc
addr16
in
dec
push
pop
and
pop
dec
clc
cmpsl
rcrl
and
xchg
fstpt
mov
arpl
mov
das
adc
mov
call
bound
je
mov
dec
mov
into
pop
movsb
fs
mov
mov
test
dec
stos
stc
mov
lcall
test
je
mov
or
adc
xor
xchg
cmp
mov
jne
dec
sub
mov
mov
inc
std
frstor
dec
hlt
pop
aam
push
xchg
pop
fmuls
and
mov
pop
inc
lods
nop
mov
cmp
enter
adc
shll
mov
fldl
add
repz
inc
dec
rcrb
jno
and
mov
xchg
leave
stos
and
or
scas
lods
xchg
mov
cmp
inc
loop
or
outsl
ljmp
adcl
daa
adc
popl
xlat
xor
xlat
stos
sub
scas
fucomi
pop
add
sar
fwait
adc
inc
mov
rcl
inc
adc
shll
daa
pop
mov
jmp
xlat
lods
add
sub
mov
jp
int3
pop
pop
repnz
stos
frstor
sbb
cmpsb
pop
inc
maxps
dec
rorb
inc
inc
push
adc
sub
add
xor
mov
movsl
jge
stc
dec
lods
jnp,pt
sub
sbb
out
test
and
cmpsb
xchg
dec
push
ficoml
mov
sti
sbbb
sbb
add
cld
out
stos
push
test
imul
orl
subl
xchg
loop
xor
movsb
pop
sub
outsl
push
aam
mov
dec
js
inc
cmc
adc
sbb
data16
sub
and
ja
pop
pop
imul
stc
pop
add
mulb
jne
cmpsl
dec
and
cmpsb
jle
arpl
or
add
inc
dec
cmp
int
dec
gs
in
scas
pop
lcall
mov
scas
mov
aas
movsb
aas
or
mov
addr16
xchg
pop
xor
loopne
call
into
orl
decl
ds
xchg
xchg
pop
stos
xchg
sbb
sub
and
inc
mov
mov
jg
mov
and
push
pop
popf
jge
dec
or
cmp
pusha
pop
test
lds
and
inc
adc
cld
rcrl
push
xor
or
inc
fists
aas
inc
lret
jne
sahf
cmp
dec
pusha
cmp
into
rolb
insb
aas
mov
cli
add
hlt
pop
test
stc
pusha
lds
adc
mov
mov
pop
arpl
ds
xchg
addb
inc
mov
test
inc
lcall
ljmp
idiv
sahf
popf
push
cs
add
add
add
push
and
out
lock
sar
mov
add
dec
or
mov
xchg
clc
adc
cmp
mov
ss
cli
int3
cmpsl
jge
mov
or
std
ret
aam
adc
mov
and
divb
pop
xor
inc
xor
aad
mov
ret
out
int3
jnp
pop
mov
or
mov
mov
sarb
push
or
and
push
fs
or
cwtl
add
popa
out
stos
or
fnstsw
insb
sbb
push
lods
lock
imul
ficomps
imulb
adc
mov
fs
fcmove
inc
push
mov
aaa
xchg
pop
sbb
pop
mov
fcomi
dec
jmp
mov
xlat
jmp
inc
iret
cli
add
into
outsl
in
inc
dec
jae
rcll
dec
pop
pop
or
push
into
fidivs
addr16
rcr
adc
insl
lods
loop
inc
js
inc
movsl
jle
fucomp
dec
mov
leave
loopne
fisttpll
jmp
adc
cmp
sub
bound
movsl
jge
pop
cwtl
outsb
pop
lea
sub
xor
outsb
mov
gs
fistl
and
sub
lret
imul
shr
je
rcll
shrb
imul
push
xlat
dec
mov
and
loop
sub
push
iret
jp
lods
in
sti
negb
push
ljmp
pop
dec
pop
gs
jne
cmpsl
dec
jmp
xchg
sub
pop
inc
fidivrl
fwait
cmpsl
sbb
stos
push
shlb
fsubr
pop
dec
loop
mov
enter
imul
cmpsb
jno
loope
sub
mov
jae
push
push
dec
push
ficoml
mov
sti
push
dec
js
les
xorb
push
pop
into
enter
ds
mov
enter
pop
inc
jae
loop
and
stos
and
outsb
dec
inc
jge
shlb
dec
out
in
std
sti
loop
int
push
cli
insl
pop
clc
scas
xlat
dec
add
or
sti
sub
xor
inc
fidivrl
fwait
js
iret
jge
aam
stos
push
shlb
aam
jbe
jbe
dec
inc
push
adc
pop
inc
scas
push
xchg
andl
mov
lahf
push
fsubrs
lahf
mov
ljmp
ds
jecxz
imul
xlat
test
mov
outsb
movsb
dec
jecxz
xchg
cmp
addr16
xchg
inc
pop
push
aas
cmpsb
aam
movsl
sub
fwait
dec
jae
cmp
lods
pop
mov
or
xchg
adc
hlt
push
popf
stos
push
test
xchg
sahf
mov
and
stos
imul
addb
pop
fwait
js
push
jae
xor
ss
imull
movsb
pop
pop
loopne
mov
js
inc
hlt
adc
into
daa
das
pop
mov
daa
lods
fnsetpm(287
inc
popa
adc
sbb
cmp
testb
xor
hlt
out
fdivrs
popa
out
jle
adc
inc
je
lods
pop
pop
add
lcall
ja
lcall
nop
cmpsb
xlat
adc
push
scas
push
insl
and
jo
xlat
cltd
cmc
xchg
rcl
pop
inc
fbld
div
jmp
outsb
inc
popf
jge
std
cmpsl
arpl
inc
fstp
inc
mov
push
push
bound
dec
es
pushf
sahf
push
in
jne
aad
aas
mov
xor
adc
jmp
fbld
adc
push
push
mov
push
loop
mov
fisubrs
add
mov
mov
inc
push
pop
in
mov
negl
adc
andl
push
push
daa
jns
imul
add
mov
andb
add
or
adc
adcl
lods
cmp
fwait
cmpl
xchg
and
movsb
das
std
jl
or
mov
xchg
push
insl
es
xor
sbb
cmp
pop
adc
push
scas
add
cs
xchg
cltd
lock
adc
mov
inc
cmp
add
sub
sti
inc
mov
lcall
pop
test
xchg
pop
ljmp
sti
xchg
out
cli
sub
out
jmp
xorl
and
sbb
adc
xor
shrl
inc
push
adc
fcomp
mov
and
pop
movsl
jb
jne
jnp
enter
out
ret
stos
push
mov
adc
pop
and
scas
fldenv
orb
pop
gs
mov
sub
outsl
cmpsl
add
fdivr
scas
sbb
fnstenv
and
xchg
mov
pop
fstps
fcoml
push
mov
mov
call
in
movsl
loopne
jg
aaa
mov
inc
mov
xor
mov
js
syscall
lods
mov
mov
and
dec
xchg
add
xor
adc
fildll
cwtl
daa
xor
lret
mov
push
adc
incb
xchg
rol
call
xchg
mov
jnp
inc
dec
cs
push
gs
rolb
or
inc
mov
scas
and
cmpsb
scas
mov
push
mov
pop
aas
jle
fbld
adc
scas
and
pushf
mov
ss
ret
mov
rorb
fcmovb
ljmp
sub
andl
loop
pop
mov
jmp
stc
inc
test
ja
stos
sub
and
into
pop
cmpl
and
dec
cmp
aam
mov
pop
push
xor
add
divl
push
mov
push
sub
ljmp
pop
xor
sub
push
jno
loopne
pop
not
sub
fs
movsb
add
aas
icebp
popa
push
and
add
stos
push
addl
add
mov
imulb
push
mov
pop
enter
arpl
push
fwait
insb
mov
cs
dec
jmp
rcl
mull
push
bound
pusha
or
pop
jne
fs
dec
in
lea
scas
inc
in
fcmovb
mov
out
sub
mov
dec
dec
sarl
jns
enter
in
je
sbb
cld
jns
xchg
mov
lods
lret
and
movsl
ss
cs
sub
push
pop
cli
fstpt
rcl
je
cltd
aas
push
stos
negb
lods
and
shl
fs
or
aas
stc
data16
fldenv
mov
mov
cmpsb
xor
push
mov
mov
out
cmp
inc
add
and
cmc
jl
inc
push
stos
push
fistl
stos
jmp
adc
roll
test
daa
ret
clc
jae
mov
push
xchg
sub
movsb
inc
cmp
cmp
les
xchg
insb
mov
or
jb
inc
add
outsb
pop
icebp
pop
jno
or
cmp
divl
push
pop
out
out
sarb
hlt
adc
jle
pop
movsb
and
test
in
out
addr16
rcrl
mov
fadds
lods
mov
cmp
shrb
push
jmp
add
sbb
int
mov
or
cltd
sbb
dec
bnd
out
xchg
addb
xor
push
test
pop
or
mov
nop
push
push
pusha
out
loopne
mov
subl
pushf
xchg
push
repz
inc
lock
lods
cli
mov
fstpt
ja
push
or
pop
imul
insl
cmc
clc
dec
icebp
cmpsl
les
push
xchg
popf
pop
dec
dec
ljmp
jnp
stos
cmp
lods
adc
or
ljmp
aas
sahf
cmp
lcall
test
scas
xor
xor
mov
ss
and
or
xchg
sub
push
shlb
mov
push
mov
add
repnz
aas
aas
dec
outsl
js
and
add
inc
push
adc
dec
mov
data16
pop
clc
jnp
and
xor
or
rolb
xlat
xlat
add
mov
mov
xchg
and
bound
repnz
scas
popa
sbb
or
inc
lea
sub
pop
inc
push
add
add
cltd
out
clc
loop
add
inc
push
adc
fs
movsb
fisttpl
ds
loope
ja
in
scas
add
add
movsl
push
outsl
leave
dec
cmp
add
and
pop
addl
orl
gs
bound
out
push
adc
jp
inc
add
push
cmp
aad
lahf
push
or
and
pop
outsl
and
inc
shrb
rorb
pop
inc
fidivrl
fwait
shrl
mov
push
and
sub
xchg
sub
adc
or
and
inc
push
adc
and
sahf
cs
xor
inc
repnz
mov
mov
fsub
movsl
fildl
das
mov
inc
xchg
aas
jle
rcrb
push
inc
mov
pop
or
fsubrs
xchg
jbe
out
push
adc
mov
xor
shlb
jbe
jge
mov
pop
enter
stos
jecxz
pop
xchg
cmpsl
dec
jecxz
jge
mov
sbb
add
cmp
and
pop
jl
push
cmpsl
cmp
add
and
add
inc
push
adc
cli
cmp
lock
jmp
fcomps
stos
sbb
or
shrb
push
xlat
int
mov
or
push
ficoml
mov
sti
mov
xor
jl
adc
shufps
push
sub
stc
rcrl
hlt
sti
jl
fidivrl
xchg
sub
xchg
pop
scas
pop
dec
add
cltd
jecxz
mov
dec
dec
ljmp
cmp
push
out
pop
or
lock
push
adc
mov
cmp
or
sbb
dec
lods
xor
push
push
xlat
pop
test
xchg
mov
mov
dec
lahf
lea
jl
jl
iret
cltd
add
daa
sbb
scas
pushf
mov
inc
or
ljmp
sbb
pop
cmpsb
push
test
aam
or
shrl
pcmpgtb
ret
aam
loopne
out
and
jge
mov
fldl
pop
jns
cmovs
cs
push
repnz
bound
cmp
lret
and
or
and
dec
sbb
mov
arpl
mov
inc
imul
mov
xchg
bound
jecxz
cmp
dec
shll
cmc
lahf
add
pop
inc
mov
jbe
mov
jb
dec
fwait
add
adc
sarb
add
sahf
mov
imul
aam
jo
inc
jle
or
fsts
xchg
andb
cmpl
jb
in
test
lock
or
or
xchg
insb
sub
sub
hlt
pushf
pop
mov
mov
xor
jbe
out
rclb
xor
or
xchg
push
imul
mov
outsb
jecxz
mov
push
cmp
add
jo
or
pop
loope
clc
push
ljmp
aam
xchg
jle
lock
sbb
data16
mov
lea
nop
or
fcmovne
sub
cli
mov
push
in
div
xchg
and
and
xchg
dec
icebp
add
jg
mov
push
orl
out
es
dec
movsb
cmp
mov
or
xchg
popa
cli
jmp
xor
or
jmp
add
repz
lods
lret
outsb
mov
mov
orb
call
mov
jbe
mov
popa
adc
jmp
mov
rcll
enter
dec
ja
shll
lcall
cmp
sti
ds
xchg
push
pop
daa
daa
mov
mov
mov
sbb
sti
lahf
pop
xchg
movsl
push
cmc
mov
mov
repnz
mov
enter
test
mov
outsb
ss
stos
cmp
pop
sub
dec
jno
sub
lret
je
add
xchg
cmp
mov
es
js
push
cmpsl
fiaddl
orb
push
and
dec
push
adc
mov
sub
lods
pop
adc
enter
test
fidivl
sbb
and
mov
ret
push
cmpsb
sbb
dec
jmp
negb
mov
push
stos
fstl
test
sub
cmp
mov
add
add
shlb
popa
sbb
cwtl
scas
pop
mov
and
bound
lods
or
sti
subb
sbb
push
sub
fxam
jmp
push
mov
mov
dec
es
popl
inc
test
repz
fs
in
lods
mov
movsl
dec
and
lahf
aas
jle
lea
dec
cmp
loop
ficoms
cmp
movsl
dec
xchg
fnstcw
cwtl
pop
cmp
adc
shll
mov
dec
xchg
add
lods
pop
mov
xorb
ds
pop
rclb
xchg
int3
xchg
cmp
push
cmpsl
dec
mov
add
or
jb
push
mov
xchg
leave
mov
add
stos
shll
mov
je
xchg
cli
push
stos
xchg
int3
xchg
mov
fcmovu
je
sub
push
adc
jno
shlb
push
pop
and
jmp
sub
std
insb
test
cwtl
push
adc
les
jmp
push
fidivs
or
xchg
shll
xor
xor
scas
pop
xchg
call
mov
fnstcw
stc
sarb
adc
dec
popf
dec
push
fs
hlt
out
into
xor
sub
cmp
stos
push
mov
ror
icebp
cmp
add
lcall
fmull
pop
ss
push
stos
sub
mov
xlat
mov
pop
inc
imul
fwait
pop
mov
jg
and
adc
in
rcl
xchg
shr
or
xor
call
jecxz
les
fwait
mov
sbb
jl
in
inc
pop
jb
mov
rcr
ss
mov
test
aad
aas
in
mov
ret
ljmp
sbb
jecxz
mov
int
cmc
mov
mov
xchg
pop
mov
cmp
rclb
cmp
daa
pop
flds
and
or
adc
push
repnz
mov
dec
pop
stc
push
sarl
loope
or
test
das
adc
mov
lret
clc
sub
test
out
sub
push
adc
iret
imul
mov
xchg
xchg
in
xchg
xchg
xchg
in
xor
fcompl
aaa
cmp
dec
jnp
adc
or
int
mov
mov
mov
sub
cltd
push
mov
cltd
sbb
out
dec
testb
push
xor
fs
adc
sbb
adc
cltd
sbb
mov
xchg
das
fisttpl
movsb
repnz
add
adc
push
les
imul
iret
add
scas
fnstenv
bound
movl
loopne
adcb
push
inc
nop
cmpsb
inc
lock
in
mov
rcrb
inc
nop
inc
je
mov
or
ss
push
aas
xchg
xchg
push
add
fdivrl
lods
shll
adc
inc
movsl
push
mov
mov
mov
pushl
repnz
pusha
cmp
out
ss
rolb
push
lods
cmc
mov
in
call
inc
les
insl
movsb
lret
pop
scas
ss
stos
adc
cmp
xchg
mov
pop
xchg
lds
orb
cwtl
notb
push
shrb
mov
dec
lahf
dec
sbb
sti
imul
push
pop
push
stos
jne
mov
scas
pop
dec
pand
mov
jmp
scas
test
roll
popa
pop
mov
push
scas
das
rcrb
movsl
in
loop
cmpsl
dec
or
rclb
aam
mov
jle
mov
fdivl
je
jmp
dec
outsl
ds
push
dec
lahf
stos
jle
mov
rcrb
cmp
push
adc
mov
mov
mov
or
rcl
data16
in
push
push
fcompl
mov
dec
dec
mov
mov
cmp
and
ret
sub
or
rorl
fildll
sub
dec
lahf
aas
rorl
shrb
inc
es
lods
movsb
lods
adc
and
or
pop
out
fcmove
fcmovbe
mov
out
inc
cmp
mov
pop
pop
xlat
lods
pop
xor
or
and
inc
mov
jp
mov
xor
lods
pop
jecxz
dec
lods
std
sti
negb
mov
push
pop
and
jmp
lods
pop
cmp
mov
fidivs
push
adc
aam
mov
mov
sbb
dec
push
notb
mov
push
stos
push
and
negb
cs
mov
in
cld
cli
pop
xchg
mov
or
in
ss
scas
pop
xor
xchg
sub
jle
out
jl
stc
or
daa
dec
jle
insb
js
rcll
cmp
sub
push
dec
lea
mov
or
ret
movsl
mov
xor
jno
es
pop
lods
xor
loop
div
jbe
cmpsb
les
gs
pop
mov
imul
mov
jae
aad
aaa
and
out
adc
aaa
mov
mov
call
cmpsl
push
pop
push
movsb
mov
aas
dec
mov
stos
ljmp
xchg
std
xor
aad
icebp
sbb
push
sub
xor
pop
push
hlt
adc
enter
idiv
or
lret
mov
or
jle
dec
xchg
shll
mov
jl
sbb
cmp
pop
flds
push
xor
ficompl
pop
mov
pop
loope
jae
icebp
pop
js
test
sbbl
lock
xchg
test
dec
jecxz
jne
add
data16
add
sub
pop
dec
push
ret
sub
stc
xchg
and
jne
and
hlt
enter
rolb
or
outsl
add
xchg
dec
and
int3
js
sub
aad
xor
test
gs
adcb
mov
aaa
outsl
sub
lea
cmp
jae
sbb
pop
xchg
fildll
sbb
arpl
adc
cmp
and
lock
sub
add
or
mov
out
adc
stc
push
mov
cmp
test
dec
add
adc
outsb
out
mov
rcrb
xor
jge
adc
vmwrite
mov
stos
dec
psadbw
inc
adc
xor
or
jo
cmc
pop
std
xor
push
adc
mov
dec
inc
xor
mov
adc
lds
cld
pop
ja
aad
jbe
mov
push
jecxz
xchg
ficoml
stos
push
sub
bnd
push
adc
and
fidivrs
jle
rorl
sahf
es
in
outsl
cld
push
les
cmpl
ds
mov
and
stos
push
rol
mov
ds
cld
or
and
test
das
shlb
into
frstor
fucomip
push
mov
mov
sub
sti
idiv
shl
dec
push
adc
sub
pop
adc
es
cwtl
mov
jl
pop
mov
pop
mov
adc
sub
inc
inc
mov
push
lahf
cmc
mov
addl
mov
mov
aad
mov
push
adc
inc
shrb
mov
daa
sti
movsb
dec
jmp
test
or
imul
in
fcoms
inc
fwait
popf
mov
ficoms
call
loop
test
lret
das
pop
mov
pop
and
fwait
arpl
mov
mov
xor
ds
lds
xor
aam
push
ret
or
scas
or
pop
jmp
int3
mulb
pop
and
testl
push
xchg
xchg
dec
push
adc
popa
rolb
push
test
enter
or
xor
mov
repnz
pop
mov
lods
pop
cmpl
shrb
clc
scas
sbb
fxam
icebp
sub
ja
jg
dec
xchg
pop
jmp
cmp
int
add
mov
out
and
lods
mov
cmp
push
xor
imul
fcmovb
ficoml
sub
sbb
int3
xchg
sub
pop
add
testb
repnz
push
adc
mov
lock
or
pop
lret
inc
sti
inc
stos
int3
shll
mov
loope
jmp
imul
in
cmp
cmp
leave
add
and
arpl
inc
fs
sti
push
or
add
mov
scas
xchg
xor
sbb
fdivp
jae
popa
jl
mov
xchg
mov
push
dec
sub
sbb
mov
pop
and
outsl
sarl
popa
cld
dec
inc
sub
lahf
xchg
mov
and
push
lahf
leave
adc
add
divb
lods
add
xlat
fistps
push
adc
lret
hlt
outsl
data16
ja
idivb
dec
test
repnz
jmp
jg
jl
rcll
ja
vpsubb
repnz
push
cli
iret
iret
pusha
jnp
or
pop
mov
push
adc
mov
cmp
mov
incl
sti
jmp
add
mov
ds
fcoml
push
sub
mul
sbb
mov
mov
fs
sbb
xor
xchg
out
jns
fildl
adc
dec
hlt
das
aad
aad
hlt
iret
xor
fiaddl
mov
add
test
je
jno
cltd
ds
mov
push
repz
inc
inc
dec
inc
sbb
and
bound
add
push
push
mov
mov
jecxz
xchg
jg
clc
xchg
cmp
jle
xchg
sub
scas
jbe
add
fwait
dec
aaa
movl
adc
jmp
les
mov
inc
nop
mov
jns
test
ljmp
addps
sbb
cli
enter
inc
scas
inc
gs
out
or
push
and
mov
mov
mov
mov
inc
stos
push
mov
addr16
pop
push
sub
dec
push
cmp
ja
adc
divl
sub
arpl
gs
in
les
mov
fists
lds
and
sub
cmp
imull
push
or
jg
jle,pt
dec
std
dec
jnp
push
and
jne
pop
out
repz
in
mov
push
adc
xchg
add
xchg
cs
sbb
enter
fcmovbe
dec
or
dec
loop
xchg
pop
rorl
lds
pop
add
adc
scas
mov
mov
shrb
out
push
cmpsl
dec
xor
imul
sbb
pop
xor
and
mov
pop
popa
cmp
push
pop
pushf
clc
jle
xchg
rcl
aam
mov
scas
pop
mov
insl
loop
mov
cld
out
adc
adc
scas
mov
scas
pop
mov
pop
fisubs
ds
fidivl
sub
push
in
mov
dec
adc
je
sbb
push
adc
ss
mov
fisubs
sbb
mov
clc
mov
lahf
dec
mov
jae
sbb
mov
pop
or
xor
sub
divl
lret
movb
mov
push
stos
and
jmp
pop
arpl
stc
lcall
mov
popf
sbb
aam
mov
mov
lret
dec
push
out
imul
inc
scas
outsl
rcll
lea
xorl
outsb
mov
or
ret
lret
in
je
aad
sbb
mov
push
cltd
cmp
ret
dec
adc
or
mov
inc
mov
fsubp
pop
leave
mov
mov
test
loop
cmp
sbb
cmp
cmpsl
nop
push
push
jbe
push
fbstp
push
pop
mov
dec
xchg
sub
sarb
adc
fbstp
xor
xor
xlat
mov
scas
inc
xchg
dec
mov
and
dec
lret
pop
mov
sbbl
xchg
sub
stc
cltd
push
int3
mov
lahf
add
dec
scas
pop
inc
les
push
jp
enter
movsb
iret
fadd
icebp
cmpsb
stc
stc
je
jo
add
push
jp
xchg
pop
insl
insb
adc
jnp
sbb
sbb
lods
mov
test
xchg
xor
dec
push
lods
out
dec
jo
inc
and
out
cmc
sahf
or
ljmp
jl
inc
adc
sbb
pop
fldpi
or
or
scas
lahf
xor
jp
clc
mov
rorb
aaa
dec
invd
adc
pushf
mov
mov
jb
adc
arpl
insl
add
mov
lea
in
std
and
push
sub
fs
push
pop
mov
inc
cmp
sbb
ljmp
movsl
xchg
sub
jo
inc
sbb
push
lret
jp
enter
icebp
jnp
loope
or
sbb
mov
in
jp
cld
popl
sbb
cwtl
push
test
xor
mov
mov
iret
inc
stos
fcomps
push
in
pop
rcrb
mov
outsb
fisubrl
inc
pop
and
movsb
ret
sahf
mov
ja
add
stos
cmpsb
and
push
pop
mov
sbb
pop
push
nop
mov
dec
push
adc
ja
data16
cmpsb
cltd
dec
scas
pop
lods
push
testb
orb
mov
daa
test
out
mov
xor
mov
icebp
arpl
lret
aam
movsl
out
and
mov
mov
xchg
inc
xchg
in
fcmovnu
and
dec
sub
and
xchg
outsb
jmp
pop
xor
les
pop
mov
pop
call
lds
loope
fimuls
push
repnz
xor
jb
rcl
call
sbb
pop
xor
out
mov
push
sbb
push
cmpsl
cmp
les
or
sub
push
xor
adc
fcompl
sbb
lahf
aas
or
xor
jne,pt
jge
popf
push
mov
call
cs
divl
and
jo
jmp
jo
fcmovu
popa
lahf
jmp
addl
pop
cltd
aad
add
inc
cld
popf
shll
adc
out
push
mov
andb
cmp
les
or
popa
outsl
fwait
jle
je
mov
daa
cmpsb
lods
imul
shrb
pop
pop
lret
outsl
xchg
adc
rclb
xor
subl
add
inc
and
pop
dec
shlb
aad
and
shlb
shl
inc
les
xor
xchg
inc
pop
inc
add
mov
sarb
test
hlt
inc
enter
or
mov
or
popf
mov
xchg
mov
add
pop
mov
repnz
sub
or
jmp
sti
jge
xor
inc
mov
mov
adc
arpl
movsl
sarb
push
dec
adc
imul
cmpsb
popl
push
test
push
scas
xlat
push
je
cmp
fsts
scas
sub
xchg
push
in
mov
inc
dec
push
adc
dec
adcl
jae
pop
out
pop
fcoms
call
in
push
mov
dec
pusha
cltd
inc
fsubr
pop
repz
push
cmp
into
push
int3
pop
push
imul
mov
popa
leave
les
sub
imul
popa
xchg
sub
repnz
push
cmpsl
inc
mov
popf
mov
push
adc
lods
and
add
enter
push
std
push
daa
cmp
in
lods
test
movsb
and
jnp
pop
pop
pop
pcmpeqd
imul
cld
mov
xchg
lahf
ffreep
iret
jno
lahf
aaa
inc
jb
outsb
cli
push
inc
cmp
std
pop
data16
jno
xor
aaa
xchg
xlat
add
mov
jo
cltd
aaa
inc
div
ljmp
add
push
push
in
stos
mov
jge
or
xchg
dec
add
daa
ss
lock
cld
popa
jle
test
adc
jne
loope
cmp
add
xlat
pop
rolb
ljmp
mov
mov
add
adc
jne
mov
loope
loopne
in
dec
push
adc
sub
popa
inc
fistpl
push
scas
out
int3
lock
scas
lret
xchg
or
les
mov
fisubrl
stos
lret
and
xchg
inc
pushf
cmp
fistpl
or
push
shr
loope
loop
adc
fildll
lret
and
mov
lret
sbb
dec
xchg
xor
xchg
aad
sti
xor
mov
push
and
jecxz
jo
enter
ffreep
cmp
mov
fldcw
arpl
inc
push
push
or
xchg
add
cltd
push
movsb
inc
mov
adc
iret
jle
adc
loop
cmp
lods
inc
add
es
movsb
aad
ficompl
ja
stos
enter
inc
scas
inc
gs
jecxz
inc
sarb
push
hlt
imul
cmc
xor
mov
inc
stos
je
sub
xchg
popa
cmp
jne
adc
xchg
imul
sub
jnp
sbb
and
inc
add
ret
sub
or
pop
cmpsl
imul
cmpsb
subb
sub
clc
imulb
or
mov
inc
inc
mov
outsb
add
mov
fisubl
or
cli
imul
fisttpl
popf
cmpsl
xchg
push
stos
sub
das
or
sbb
and
jle
idivb
and
sub
push
push
inc
je
mov
mov
fwait
adc
cmc
pushf
les
inc
cmc
in
into
pop
rol
testb
fsub
dec
fistpl
movsl
push
cmpsl
xor
fisubrs
and
push
rorb
add
movsb
lcall
sub
or
cmp
popl
mov
push
outsb
push
jne
rcl
cmp
and
push
in
fcmovb
sbb
inc
mov
push
push
inc
cmp
mov
cmp
add
xchg
cmp
sub
std
sti
pop
cli
movsl
add
ficoms
popa
sbb
icebp
inc
scas
pop
mov
dec
out
cwtl
cmpsb
dec
lahf
nop
imul
stos
jle
shld
push
fldenv
shrb
mov
dec
in
dec
mov
sti
idiv
xor
imul
mov
subb
inc
arpl
cmpsb
dec
loopne
daa
fstpl
aas
jle
je
sbb
mov
fistps
xchg
sub
mov
cmp
push
adc
xchg
int
fst
mov
daa
adc
add
or
push
xlat
movsb
dec
or
push
adc
and
sub
mov
enter
inc
pop
cmp
outsb
push
lcall
dec
out
fcmovne
dec
mov
mov
es
pop
outsb
lods
push
movsl
fcomps
inc
daa
mov
aas
adc
ret
push
sub
cmpsl
jno
sub
jnp
sbb
push
adc
cli
cmc
mov
mov
loope
ficomps
mov
push
dec
push
mov
cmpsb
in
fisubrl
ljmp
shrb
inc
sbb
sub
iret
roll
movzbl
scas
push
cli
mov
popa
cld
mov
xor
movsb
repz
icebp
cmpsb
stc
stc
jnp
stos
cltd
add
push
dec
ja
pop
sti
inc
lea
sbb
mov
mov
adc
in
imul
add
ja
ror
test
jle
or
sub
mov
sbb
mov
cmc
out
sbb
fdivr
sub
mov
lds
rorb
xor
out
and
push
lock
xchg
loopne
mov
addl
cli
jnp
jne
pop
xchg
adc
fstl
repnz
imul
or
sbb
leave
dec
cmc
xchg
push
mov
out
pop
lea
cmp
cmp
dec
mov
xor
adc
xchg
mov
inc
xchg
push
sbb
int
jl
push
xchg
add
inc
ja
xchg
dec
testb
push
xchg
xor
jns
scas
mov
aam
adc
fwait
lods
je
mov
mov
les
xor
adc
lods
dec
aad
push
sub
dec
pop
and
jp
popf
fdivs
call
addr16
jb
mov
fstpl
push
movsl
inc
ds
push
sahf
mov
icebp
mov
sub
std
shlb
mov
inc
in
xchg
pop
cs
and
pop
inc
icebp
and
es
or
fcos
dec
push
adc
fnstcw
arpl
mov
stos
je
fs
enter
int
test
test
and
push
xlat
imul
xor
xor
sbb
ret
lcall
jnp
gs
popa
imul
aad
test
fdivs
notb
shl
jno
xchg
scas
fscale
mov
adc
dec
loopne
daa
adc
pop
adc
mov
mulb
mov
lds
sub
xor
sbbb
leave
dec
aam
jne
aad
popf
push
mov
adc
repnz
pop
xor
lock
or
test
scas
pop
int3
into
out
aad
sub
jo
jle
dec
add
mov
and
push
bound
and
rclb
dec
pop
add
and
inc
mov
push
mov
movsl
dec
adc
lahf
aas
jle
xor
in
fidivl
ja
ds
out
aad
cmpsl
psllw
cmpsb
movsb
das
jge
sub
dec
xor
xchg
lea
add
shlb
daa
adc
add
add
inc
shrb
xchg
lods
xchg
push
pop
dec
adc
imul
mov
mov
mov
rcrb
sub
add
sti
imul
jbe
sbb
mov
subb
jmp
mov
dec
mov
sar
mulb
sarb
gs
push
add
adc
adc
dec
push
fisubs
aad
popf
aas
jle
inc
cmc
push
loop
not
mov
stos
mov
add
xchg
fucomp
sahf
aas
jle
ret
dec
out
and
cs
test
mov
movsl
ds
cmp
jl
std
cli
mul
mov
mov
xor
pop
lcall
scas
dec
popf
xor
pusha
clc
hlt
out
es
rcrb
ja
mov
sub
cmpsl
pop
leave
xchg
push
mov
push
jmp
lret
jb
bnd
add
fs
or
cmc
xchg
fcmovnbe
dec
cmp
fwait
jp
mov
stos
sahf
cmpsl
xchg
mov
lods
shl
or
adc
push
push
jbe
push
mov
rcrb
popa
adc
xchg
loop
pop
push
mov
pusha
cld
mov
jb
inc
xor
lods
push
movsb
outsl
sbb
arpl
pop
shll
add
stc
mov
sub
ja
jb
mov
jb
mov
xorl
add
sbb
xchg
jns
jecxz
lds
and
mov
inc
test
imul
in
gs
jne
mov
cmpsl
mov
adc
bound
clc
inc
lds
inc
mov
or
mov
jmp
add
test
xchg
pushf
iret
call
dec
fmuls
sbb
mov
push
push
pop
gs
enter
fs
mov
stos
sub
pop
xchg
test
mov
sbb
fbld
sti
inc
cli
sbb
inc
loopne
push
inc
mov
add
out
in
pop
pusha
jg
cmp
lret
push
popl
lea
jb
stc
jbe
and
outsl
sbb
mov
xchg
jmp
xchg
ret
loop
lret
imul
loopne
adc
or
fildll
insl
sub
ss
mov
scas
lods
lcall
adc
jg
mov
lds
jbe
lods
push
mov
fldt
enter
push
adc
icebp
sub
add
and
or
movsl
pop
mov
testl
fldenv
mov
sbb
push
lahf
mov
icebp
inc
cmp
fidivl
inc
stos
arpl
sub
test
cmp
subb
adc
jae
jmp
lahf
jp
mov
call
mov
outsb
pop
inc
sbb
pop
jbe
xchg
stos
jp
aas
push
jecxz
jecxz
inc
and
cmpsb
dec
lahf
sub
clc
idivb
shl
or
stos
push
icebp
add
rclb
sub
jmp
lods
cld
sti
idiv
cmpsb
packssdw
sarb
pop
adc
push
add
fsubr
mov
dec
gs
dec
lahf
xchg
jmp
mov
sbb
add
xchg
test
fisubrl
dec
cmp
std
jmp
pop
imul
sub
sbb
fwait
push
push
adc
mov
mov
add
sub
shl
or
push
stos
inc
inc
out
je
mov
push
sahf
cmc
pushf
iret
imul
and
adc
pop
dec
xorl
push
loopne
dec
lahf
nop
jmp
xchg
dec
int
jl
mov
into
stos
push
scas
repnz
dec
dec
lds
cmp
or
push
mov
mov
sbb
push
xor
sub
cld
mov
and
mov
sub
aas
fwait
inc
mov
cli
mov
add
lds
imul
loope
add
ja
aaa
mov
sub
mov
fwait
test
cmp
or
cli
imul
int
xor
mov
test
enter
movsl
pop
mov
fdivrl
sti
loope
lgs
adc
popa
adc
xor
pop
mov
pop
inc
xor
push
jnp
pusha
or
add
jae
push
adc
ret
movsl
je
push
inc
sbb
enter
cmp
sub
mov
ds
lcall
mov
scas
mov
add
pusha
jg
rolb
scas
popf
cmp
fistl
jge
inc
inc
mov
call
fcmove
ljmp
mov
mov
aaa
out
adc
lds
int3
into
stos
pop
mov
dec
xchg
fsubl
lds
test
test
and
test
push
ret
fldcw
sub
decl
xchg
clc
iret
aad
aas
mov
lahf
les
cmovo
dec
cmp
popa
cmp
sti
inc
shlb
cmpsb
rcr
mov
add
add
jl
or
mov
add
add
sub
cwtl
mov
mov
pop
add
pop
int
fnstsw
push
in
repz
pop
inc
push
arpl
psubsb
cmp
push
adc
mov
flds
rcrl
add
ljmp
inc
cli
ror
jne
mov
out
fnstsw
addl
arpl
push
pop
mov
inc
pop
pop
jno
addr16
push
or
popa
out
decl
and
sub
xchg
xchg
cltd
jb
inc
stc
inc
xor
mov
mov
dec
sar
int3
jnp
mov
and
or
andb
mov
clc
subb
test
sbb
and
daa
push
in
outsl
sbb
inc
fnstcw
adc
lret
push
insb
and
ret
sbb
std
xchg
xchg
dec
xchg
cmpsb
mov
cmp
sub
sub
imul
xchg
scas
stos
dec
add
sbb
mov
in
xchg
pop
inc
gs
add
inc
mov
test
enter
push
lcall
icebp
jmp
cmp
mov
cltd
loope
hlt
aad
outsb
dec
test
sbb
mov
scas
jg
in
dec
sbb
or
inc
or
or
mov
push
xchg
mov
xchg
adc
in
mov
dec
ret
mov
ljmp
mov
adc
mov
sarb
inc
int3
outsb
mov
and
sbb
stos
sub
and
xchg
and
adc
in
mov
and
mov
sub
jp
cmp
sub
pop
mov
jle
sti
mov
lods
fwait
cli
and
notl
scas
sub
stos
xchg
in
jp
dec
je
pop
cmp
mov
sti
mov
aad
jp
mov
push
stos
push
add
inc
push
pop
popf
mov
push
sub
fisubl
int3
xchg
in
pop
sub
mov
xchg
insl
inc
mov
scas
pop
int
ljmp
aad
lahf
aas
jle
dec
cs
fcmovb
mov
pop
in
push
stos
push
pop
daa
jbe,pn
rcl
cmp
push
cmpsl
adcl
xchg
fisttpll
test
mov
fs
scas
pop
das
mov
fucomip
xchg
sub
xor
imul
fisubl
outsl
mov
jp
xor
pop
pop
add
lods
mov
jle,pt
in
sahf
sbb
mov
fidivs
xor
mov
cmp
jle,pt
fucom
sub
xor
ja
push
orl
xor
imul
fidivrl
jno
scas
lods
lahf
stc
inc
push
jne
sub
icebp
xchg
sub
jbe
sub
fidivl
outsl
adc
mov
movsb
dec
xchg
pop
jmp
test
and
jno
jne
cmp
stos
and
das
je
mov
push
fs
lahf
dec
int3
sbb
ret
and
sar
push
mov
scas
sub
lahf
sub
sub
aam
imul
pop
jno
cmp
pop
cs
push
scas
pop
adc
rorb
movsb
dec
loope
mov
inc
inc
cli
or
xchg
jne
rorl
jbe
pop
mov
loope
call
sub
cmp
popf
jp
incb
aam
stc
sbb
cmp
inc
out
sbb
mov
dec
add
inc
aam
int3
adc
test
sahf
mov
jg
fadds
xor
mov
pop
mov
push
int
rcll
and
jmp
inc
mov
jbe
add
push
sbb
pop
or
outsb
mov
jl
popa
cmpsb
sar
rolb
push
leave
imul
adcb
xor
lods
cld
add
sbb
inc
mov
jle
or
loopne
arpl
pop
or
sbb
jl
fwait
mov
test
jbe
or
pop
pmullw
fs
fmull
mov
inc
inc
clc
push
pop
rorl
mov
clc
loop
bound
mov
sub
adc
or
xor
sbb
mov
in
outsb
jb
out
sahf
inc
mov
or
je
mov
inc
cmp
inc
dec
xor
sbb
dec
mov
xor
inc
loopne
xor
pop
mov
mov
gs
lahf
mov
jb
hlt
push
jp
xor
repz
inc
dec
push
pop
mov
pushf
or
test
bound
and
bound
sbb
loopne
jbe
jl
jmp
leave
adc
jno
push
xchg
movsw
xor
and
pushl
leave
pop
mov
xor
mov
jbe
xlat
movsl
sbb
cli
test
lods
push
sub
repnz
mov
dec
push
or
inc
cwtl
and
or
movsl
pop
sahf
in
mov
mov
fstl
push
iret
inc
movsl
stc
inc
movsl
push
inc
xor
xor
dec
mov
mov
addr16
sub
ss
push
stos
adc
adc
sub
push
adc
popf
pop
cmp
dec
mov
dec
fstps
sub
jmp
push
test
jb
hlt
imul
and
xchg
jmp
mov
sbb
add
in
inc
push
xchg
jge
dec
xchg
xchg
jbe
scas
sub
imul
cmp
test
mov
mov
add
jle
push
sbb
aam
shll
popa
fucomip
push
sub
pop
push
sub
push
or
adc
out
fcmovb
fidivl
data16
out
push
pop
and
pop
pop
cmpsb
dec
loopne
test
inc
mov
jle
mov
in
fidivl
addr16
cs
push
scas
dec
jl
call
sub
pop
xor
jge
aaa
call
adc
mov
push
stos
inc
adc
je
pusha
scas
shl
fldt
repnz
iret
cli
inc
push
xchg
cs
and
mov
adc
dec
push
adc
jl
mov
push
inc
call
lock
sbb
xor
pop
push
fstpl
lahf
cwtl
or
sub
jle
jae
lahf
test
push
push
cmp
sub
xlat
jmp
mov
cmpsl
dec
jmp
negb
xor
adc
xchg
out
mov
test
daa
lahf
aas
jle
cmpl
mov
sub
test
lahf
inc
iret
cmpb
loopne
je
cmc
pushf
ret
lea
push
aaa
cmp
pop
daa
and
pop
idiv
cmp
je
xor
mov
shl
mov
push
cmp
ds
xchg
sub
sub
imul
xchg
xor
mov
stos
push
sub
adc
daa
add
loopne
cmp
gs
rclb
push
aad
xorl
dec
push
mov
jnp
ljmp
and
adc
cmpl
xchg
sub
add
daa
jb
gs
jmp
inc
sarl
add
and
pop
imul
in
xor
sub
pushf
pop
mov
mov
lahf
pop
xchg
mov
lahf
mov
dec
idivb
jo
mov
std
xchg
cli
mov
sub
jl
gs
stc
aam
mov
std
push
xchg
test
mov
insb
loop
cmc
xchg
inc
add
test
or
dec
add
push
push
daa
cmp
sbb
jl
lcall
cmp
and
mov
cmp
jp
adc
fs
add
je
lods
cli
ja
or
loop
movb
jo
sahf
push
add
inc
pop
insl
jno
rcll
fistpl
insl
mov
mov
sahf
cmp
mov
testb
mov
mov
push
pusha
shll
sti
cmp
bnd
imul
int
inc
push
loop
je
dec
inc
pop
adc
adcb
out
inc
iret
mov
push
lods
fwait
cmc
movsb
aad
push
inc
sbb
xor
adc
js
inc
subl
scas
xchg
fmul
outsb
mov
jecxz
mov
fs
adcb
sub
sub
push
stos
xchg
iret
daa
ror
mov
sub
and
sub
sarl
add
push
movsl
inc
mov
pop
daa
or
sti
adc
adc
mov
es
in
fisubl
insl
bswap
mov
or
xor
jg
mov
fsts
push
frstor
rcll
or
ret
mov
in
push
xchg
xchg
cmpb
jns
pop
lahf
iret
pop
mov
insl
pop
and
and
js
sbb
or
xchg
rorl
rorb
hlt
loope
cmp
xchg
jno
loope
sub
dec
push
adc
sahf
pop
sub
lods
pop
adc
enter
pop
and
sbb
imul
stos
push
scas
sub
fucomi
shlb
cmpsl
dec
lahf
ja
add
lahf
test
push
push
cmp
sub
xlat
jmp
mov
cmpsl
dec
jmp
negb
pop
xor
xchg
push
stos
and
mov
push
rcrl
out
pop
lods
pop
mov
inc
int
sti
negb
mov
hlt
pop
clc
fisubrl
push
or
movsl
ss
cmp
incb
jnp
lods
into
jecxz
mov
out
and
mov
pop
jnp
scas
aad
mov
imul
test
rcl
mov
jle
ss
mov
adc
aas
mov
xorl
and
inc
mov
push
mov
push
out
adc
adc
sti
mov
scas
and
sar
int
cmp
and
pop
push
cmpsb
pop
or
push
imul
into
inc
sbb
xor
xchg
sub
sub
push
clc
adc
push
les
dec
mov
push
adc
pop
sub
scas
pop
mov
dec
xchg
sub
or
mov
push
test
das
jle
aaa
sub
mov
push
inc
pop
cmp
outsb
inc
movsl
sbbl
cmpsl
clc
ret
sub
mov
or
xor
jno
jae
cmpsb
dec
sahf
xchg
or
ret
dec
out
and
stc
data16
stos
push
xchg
out
mov
cmp
xchg
pop
and
dec
popf
cmp
out
fmul
adc
mov
pop
sub
pop
dec
push
rcrl
sbb
mov
inc
jl
insl
inc
pop
aad
bound
cmpsb
test
and
mov
push
mov
mov
out
mov
subb
mov
inc
jecxz
xor
inc
mov
rcrb
fcoms
mov
xchg
cmpsb
cltd
lret
jb
orb
sub
jns
adc
jmp
pushf
xor
scas
or
ret
jnp
outsb
dec
and
popa
ret
cmp
andl
aam
aaa
sbb
js
fcompl
dec
mov
incb
hlt
sahf
cwtl
xchg
sub
out
loop
out
push
inc
mov
jg
mulb
into
in
push
cli
add
loope
pop
jle
mov
inc
ja
sub
cmpsb
popf
dec
sbb
add
das
and
jb
xchg
clc
sub
loope
add
lret
les
sbb
or
std
and
ja
pop
cmp
xor
sub
add
divb
scas
in
push
imul
cmp
and
inc
jne
dec
icebp
orb
ja
or
test
stc
fst
mov
mov
daa
lods
into
sahf
aam
add
pop
out
push
adc
insl
push
insb
sbb
insb
std
sub
inc
xchg
hlt
add
enter
xor
movsb
sub
sub
sahf
xor
pop
cmc
or
sbbl
lcall
gs
push
or
andb
enter
mov
ds
sub
inc
inc
xchg
sbb
xor
jnp
mov
inc
mov
xchg
shl
dec
xlat
push
ret
loope
sub
cmpsl
pop
xchg
jnp
or
dec
es
idiv
pop
or
jno
dec
push
adc
ret
imul
xor
out
gs
mov
in
push
in
insl
pop
dec
jb
fnsave
sub
pop
pop
leave
mov
add
outsl
pushf
lods
pop
mov
push
imul
pop
loop
xchg
mov
fistl
test
shlb
pop
ja
sbb
and
add
pusha
push
ss
and
push
daa
xchg
pop
jo
jle
pop
into
sub
cmp
sub
jo
jge
xchg
in
mov
movsb
mov
dec
iret
push
push
pop
in
push
inc
push
imul
scas
fldcw
push
dec
loope
jmp
pop
loope
loope
nop
or
lea
pop
push
out
in
pop
scas
xlat
dec
fucomi
pop
push
pop
adc
movsb
rorb
int3
in
mov
cld
jno
adc
aam
mov
ficompl
aad
add
xchg
pop
cmpsb
fsubl
int3
lds
movsb
sbb
cmpb
mov
mov
std
jno
in
push
pop
jg
mov
mov
inc
or
cmp
lods
sar
push
add
ror
fldenv
xchg
xchg
cmpsl
shlb
inc
mov
cmpsb
pop
mov
push
bound
add
inc
int
pop
shll
out
pop
sub
jl
mov
cmp
and
jb
loope
mov
mov
fcmovbe
dec
or
pop
cmp
push
cld
jae
ss
hlt
or
out
fidivl
popa
nop
cmpsb
mov
mov
scas
pop
js
dec
int3
or
enter
je
mov
stos
ds
mov
data16
pop
je
push
arpl
pusha
jmp
imul
fsubl
and
movsl
shll
dec
xor
hlt
out
movsb
lea
into
inc
push
test
xlat
jo
push
mov
aam
push
jl
leave
test
cmpsb
shlb
mov
fcmovu
pop
lock
ja
out
aad
pop
fstpt
negl
xlat
movl
xchg
ret
sub
cmpsb
shr
inc
or
rcr
popf
fsubr
sbb
and
test
dec
or
sub
jecxz
ds
sahf
add
dec
sti
mov
xorl
pop
inc
add
ffree
fs
add
decb
or
push
repnz
std
lods
test
inc
nop
adc
out
adc
sub
jl
les
ret
mov
decb
movsl
orl
inc
add
enter
sub
arpl
add
arpl
rorb
fistpl
add
or
int
pop
mov
mov
mov
mulb
mov
incb
ja
jne
out
xlat
hlt
push
dec
addb
push
mov
jecxz
adc
add
mov
add
cs
xor
inc
jno
cmp
mov
repz
lock
jns
pop
mov
inc
cmp
outsl
xor
fldt
orb
shr
out
loop
mov
adc
sti
or
sub
inc
inc
xor
or
loop
xchg
pop
jnp
mov
cmpsb
dec
mov
push
mov
mov
outsb
lahf
testl
fwait
xchg
cmp
add
add
adc
lock
sbb
repnz
nop
push
call
add
sbb
adc
das
ds
movsl
sbb
sub
andb
push
ljmp
loop
sbb
rolb
mov
fmuls
adc
stos
hlt
or
and
push
pop
pop
ljmp
cmp
mov
pop
ljmp
test
push
test
dec
aad
stos
fwait
in
popf
jp
pop
push
lock
in
inc
inc
mov
jg
cld
mov
mov
cmp
jb
int
lods
fidivl
lds
or
adc
mov
push
test
bound
ret
shll
or
cmpsb
cmp
dec
jge
das
pushf
push
sub
aaa
xchg
loope
arpl
add
add
pop
mov
rorb
or
in
jl
js
mov
jne
into
xchg
inc
cmpsb
mov
js
les
or
add
aam
jno
sbb
imul
cltd
movsb
add
and
xchg
pop
pop
orb
mov
adc
test
jo
rcr
jne
rcrb
lds
adc
push
and
xorl
push
and
shrb
xchg
jae
test
dec
lahf
dec
into
push
mov
movsl
sbb
or
mov
adc
fisubrl
or
adcb
std
jno
xchg
scas
pop
repnz
das
inc
orl
cltd
andl
jns
hlt
imul
pop
mov
lods
mov
sarl
int
push
and
adc
stc
add
adc
popf
rcrb
add
std
xchg
and
idivl
mov
push
and
cmpsb
into
ret
dec
imul
mov
push
in
arpl
stos
push
test
stc
mov
sub
js
dec
lahf
stos
subl
xchg
loop
mov
adc
mov
pop
and
enter
or
or
jge
int3
arpl
mov
and
push
mov
push
push
adc
mov
cli
fwait
push
cmpsb
in
divb
cltd
mov
mov
push
sub
mulb
call
or
fadd
aam
sar
push
xchg
xchg
pop
popa
add
dec
sbb
dec
dec
cmp
cli
mov
jno
adc
push
mov
loopne
bound
or
cmp
shr
mov
lahf
loopne
mov
pushf
cmc
sarl
sahf
mov
nop
roll
sbb
out
fldenv
cli
mov
jmp
add
or
fstl
into
int
mov
sbb
pop
mov
mov
dec
int
adc
inc
or
add
or
sbb
dec
jl
mov
xchg
test
jg
icebp
sbb
pop
stc
mov
pop
flds
push
scas
out
push
test
flds
stc
bound
sahf
jp
sub
mov
mov
jb
adc
fdivrp
jnp
cmp
shrl
fistps
xchg
loope
cs
nop
cmpsb
outsl
nop
mov
pop
gs
xchg
and
test
sub
ds
cmp
cmp
std
cmpsl
popa
add
or
inc
dec
mov
adc
jns
pop
cltd
push
out
adc
cmp
dec
xor
mov
mov
xchg
aad
inc
dec
das
out
cmp
mov
pop
cwtl
push
addw
sub
inc
add
inc
call
adc
sub
sub
je
orb
call
adc
int3
addb
adc
fnstsw
inc
xor
pop
mov
or
jle
and
sbb
xchg
pop
sub
addr16
enter
andl
mov
pop
scas
jmp
xor
test
fwait
shlb
sahf
sbb
inc
mov
mov
leave
outsb
lods
mov
mov
addr16
sub
seta
mov
mov
outsb
popf
add
sub
imulb
shlw
iret
fmul
test
jnp
insl
cmc
or
stos
push
stos
aad
movsl
lods
fnstsw
hlt
jle
mov
adc
lods
xor
inc
cmc
adc
cmp
shll
pop
mov
dec
xchg
sub
aad
lahf
aas
jle
mov
jle
inc
mov
out
push
scas
icebp
adc
icebp
movsl
dec
push
and
inc
inc
ds
cli
data16
mov
push
ljmp
or
push
in
cmpsb
lea
sub
sub
out
fimuls
lods
aad
mov
or
or
xchg
xor
push
popa
mov
in
lods
movsb
aaa
sbbl
inc
push
cmp
jl
in
fcmove
ljmp
jb
sub
inc
mov
in
dec
or
ds
mov
shll
push
stos
push
add
lods
jbe
sub
push
cmpsl
dec
jmp
loope
sti
notb
sub
mov
push
pop
push
ss
xchg
aas
jle
in
loop
jae
adc
inc
mov
imul
lds
lods
xor
inc
cmc
adc
sbb
shll
pop
mov
dec
xchg
sub
pushf
aas
or
dec
imul
fisubl
cmpsl
and
frstor
popf
pusha
stos
pop
cmpsl
dec
rcll
pop
outsl
fwait
movsl
lods
addl
arpl
cmp
idiv
hlt
dec
xchg
cs
xor
push
fisubrl
xchg
lods
dec
xchg
in
jne
sbbl
jle
testb
fstpl
mov
scas
lahf
lods
loope
inc
enter
or
xchg
les
call
cs
mov
outsl
orl
sbb
adc
pop
ret
cmp
fsts
push
daa
int
nop
jge
pop
push
jns
lods
xor
add
push
dec
js
jne
nop
dec
andb
add
and
test
and
inc
cmc
popf
clc
dec
call
mov
aaa
dec
scas
jecxz
shlb
push
pop
inc
scas
popa
push
mov
dec
mov
js
pop
mov
mov
push
push
nop
test
jbe
fs
mov
xchg
xlat
add
mov
and
xor
or
mov
out
mov
and
mov
sub
sahf
adc
jl
push
shrb
subb
cmp
fimull
aam
dec
andl
loope
push
or
mov
jge
cmp
sbb
negb
mov
xchg
jno
xchg
mov
push
popa
loopne
sahf
mov
and
push
push
das
fistpll
xchg
xchg
cltd
and
loop
xorl
dec
push
push
xchg
mov
cltd
jne
arpl
int
inc
imul
lds
dec
mov
pop
je
add
cli
test
jge
out
in
orl
jg
outsl
sbb
or
sbb
sbb
pop
pop
sbb
enter
gs
sarb
ror
ljmp
push
stos
xor
dec
notl
adc
cmp
jmp
xor
addr16
shl
and
mov
jae
cs
lea
dec
test
lods
pop
inc
sar
mov
mov
or
test
mov
mov
push
add
mov
arpl
repz
and
in
adc
test
insl
inc
inc
and
xchg
and
push
ss
nop
xor
mov
ret
jmp
xor
cmpsl
cltd
call
imul
ljmp
add
insb
ja
into
sbb
mov
cmc
mov
sbb
jmp
jecxz
fwait
and
add
bound
push
sub
push
push
inc
add
mov
cmp
pop
push
dec
bound
mov
pusha
fwait
jge
neg
add
or
fcmovnbe
push
push
cmpsl
dec
in
lea
fcmovb
loopne
shl
movsl
imul
adc
out
sub
dec
jmp
or
push
dec
jle
push
and
jne
sbb
pop
test
bound
pop
xor
cmpsl
pop
xchg
js
dec
push
adc
cmpsl
dec
xchg
cs
jns
pop
pop
push
sub
lock
ljmp
or
jns
inc
dec
xchg
leave
and
mov
push
stos
mov
daa
nop
cmp
je
push
inc
sarb
mov
sub
stos
bound
decb
scas
pop
dec
xchg
pop
fs
je
xor
sti
idiv
es
testl
mov
sub
cli
rol
je
ja
or
shll
stos
push
icebp
punpcklwd
add
jl
rclb
int3
jle
or
fdivs
sub
dec
push
adc
mov
sub
mov
rclb
sbb
repnz
lcall
cltd
pop
pop
xor
xchg
push
jmp
add
sub
cmc
scas
jnp,pt
push
xor
push
shlb
arpl
pop
pop
xchg
movb
jbe
out
stos
push
test
and
push
adc
loope
xchg
push
push
pop
faddp
call
pop
sub
sbb
push
mov
imul
adc
js
sbb
ss
pop
out
and
mov
mov
call
mov
fildl
mov
xor
mov
pop
jle
lods
push
xor
sub
or
dec
js
cmp
data16
dec
push
adc
repz
arpl
js
xchg
fisubs
or
mov
adc
out
sub
add
pop
adc
mov
cmp
add
jne
jg
aad
ss
inc
mov
xlat
lods
sub
cwtl
mov
xabort
push
add
jb
jne
loopne
pop
push
or
dec
mov
jo
les
stos
in
cs
icebp
xor
stc
cmpsb
cmp
adc
pop
sbb
push
cmp
repnz
mov
or
repnz
dec
int3
loop
lret
fisttps
adc
popa
lock
sub
lds
xlat
sbb
mov
and
or
sub
jnp
lret
insl
lret
cli
aad
icebp
add
jo
xchg
fs
sbb
inc
sbb
js
cmp
stos
fsubl
inc
dec
push
adc
mov
adc
jnp
mov
lcall
mov
ljmp
sub
rcrb
pop
movsb
jl
add
mov
xchg
inc
shlb
mov
aad
mov
dec
out
sbb
pop
mov
mov
es
mov
mov
popf
int
jge
jae
idiv
lret
mov
mov
out
and
mov
nop
fwait
test
xchg
test
and
adc
outsb
loope
pop
pop
and
jp
inc
add
push
mov
enter
sbb
sub
addr16
push
sbb
jmp
or
push
xchg
or
cs
jge
xlat
in
fsts
adc
pop
xor
push
arpl
ljmp
push
shl
or
inc
lds
pushf
mov
xchg
adc
push
push
das
pop
mov
push
test
mov
adc
cmpl
mov
add
xchg
jl
dec
dec
iret
sub
cmp
push
test
enter
loopne
adc
and
pusha
inc
inc
push
or
sub
fsts
out
add
shl
xchg
pop
jmp
mov
ficompl
sub
lods
push
mov
out
pop
adc
rolb
or
push
jge
cmp
stos
push
test
sbb
mov
or
adc
rolb
or
pop
jge
cmp
stos
push
test
cmp
lea
sbb
adc
rolb
or
pop
jge
cmp
stos
push
test
aam
je
inc
push
pop
adc
mov
pushf
add
sub
push
pop
push
cmp
lods
push
mov
movsl
dec
add
les
rcll
enter
jp
in
insb
push
outsl
adc
inc
mov
sub
push
xor
adc
xchg
fidivrs
outsl
adc
stos
or
sub
imul
cmpsl
dec
lahf
stos
test
push
or
sbb
push
inc
mov
shrl
lods
dec
adc
pop
gs
lods
pop
pop
mov
jg
outsl
push
loopne
adc
push
sub
aad
insl
pop
es
sbb
jle
mov
ret
clc
hlt
out
dec
inc
std
sub
pop
adc
push
and
mov
lock
test
add
mov
mov
inc
push
xlat
insb
in
pop
adc
inc
inc
mov
push
xor
jl
or
sbb
test
fisubrl
sbb
or
jmp
cmp
sarb
push
pop
xlat
es
cmpb
icebp
sahf
add
aad
aad
adc
lahf
mov
xchg
into
sub
lods
in
leave
and
pop
sub
jg
jl
cltd
push
je
or
leave
test
out
out
push
fcmovnbe
xchg
sub
fcmovnbe
mov
cmp
out
or
mov
adc
adc
xchg
shrl
insl
test
dec
xchg
xor
add
out
fildl
pop
scas
cmp
or
insb
jae
inc
pop
push
lret
dec
mov
out
lods
ja
ss
and
stc
push
shlb
adc
loop
cli
mov
out
add
insl
sahf
and
adc
pushf
cmp
mov
in
sti
pop
adc
mov
push
fimuls
mov
xchg
adc
add
inc
inc
pusha
cmp
pop
fstp
in
ret
roll
movsl
je
ja
lock
stos
ss
in
sbb
cmc
hlt
in
inc
ret
mov
xchg
jecxz
lret
mov
insb
push
pop
lret
imul
push
xchg
mov
fidivrs
loope
sub
xlat
pop
push
insl
into
rcrl
sub
cld
icebp
sbb
faddl
or
pusha
adc
push
sub
lods
into
push
sub
jno
sbb
or
or
or
mov
and
das
test
mov
and
stos
ja
push
pop
push
lret
inc
testl
adc
push
cmpsl
jno
mov
ljmp
in
ds
pushf
in
mov
mov
and
rcll
xor
mov
xor
pop
lret
add
inc
sub
mov
xchg
jns
ret
push
pop
pop
sbb
jge
dec
sbb
sbb
in
out
cwtl
clc
fsub
icebp
fucomi
pop
mov
daa
pop
and
dec
lahf
aas
imul
mov
scas
sub
lods
lock
shlb
sbb
add
and
fidivl
push
push
fldln2
cltd
repnz
push
stc
xchg
sub
sbb
jmp
jge
inc
sbb
mov
pop
stos
push
cmp
pushf
lock
aad
or
stos
sub
sti
sti
negb
mov
out
test
mov
mov
push
mov
loopne
jle
inc
add
adc
jp
sub
out
mov
xor
mov
rorb
imul
fisubl
mov
scas
xlat
orl
inc
push
dec
lahf
aas
add
negb
mov
sub
fucomip
shlb
cmpsl
cmp
mulb
rcrb
adc
pop
es
push
sub
xchg
fmuls
in
or
rcl
frstor
push
fst
loope
add
inc
cmpsb
pop
mov
jnp
test
add
adc
pop
popa
shll
mov
test
mov
cmpl
push
sbb
cmpsl
lds
test
mov
test
scas
xlat
dec
dec
push
rcrl
cmp
mov
cltd
aas
jle
mov
in
fidivl
push
roll
inc
scas
pop
enter
movsl
dec
orl
dec
push
mov
int3
lock
mov
jmp
and
mov
inc
lods
pop
popf
cmp
gs
rcl
push
call
or
add
shll
fwait
lock
ret
insb
mov
repz
cmpsl
inc
cwtl
jmp
adc
adc
jp
addr16
push
or
je
lea
ror
rolb
and
sub
mov
push
call
dec
mov
xchg
pop
xchg
in
inc
pfacc
jmp
enter
insb
mov
mov
add
pop
les
stos
loop
add
jae
aaa
mov
or
mov
cli
shll
xchg
xlat
push
push
aam
addl
cmc
in
and
hlt
add
push
sti
daa
test
repz
cmc
jg
das
movsl
mov
add
out
outsl
cld
inc
int3
orl
xchg
in
inc
pop
mov
aam
pop
cmc
adc
testb
cmp
std
mov
jle
xchg
sbb
fdivp
xor
cmp
dec
dec
test
and
daa
in
fcomp
xchg
int3
jns
mov
in
in
xchg
popl
insl
xorb
adc
ret
mov
fisttps
ja
addr16
dec
rcrl
jl
cmp
testb
stos
ss
sahf
jmp
jbe
add
jle
mov
sbb
xchg
clc
xor
jg
lahf
push
adc
lret
or
sub
or
sub
cltd
aas
cmpsb
inc
pop
lods
push
mul
movsl
sub
lds
loop
fisubrs
aad
push
adc
mov
cmp
and
stos
leave
je
xchg
mov
out
adc
mov
add
sbb
jge
jns
scas
pop
push
rcr
adc
adc
out
inc
jle
imul
repnz
sub
mov
cmpsl
pushf
in
add
sub
enter
aad
int
fs
adc
loope
orb
mov
mov
shlb
mov
mov
in
popf
inc
imul
sub
push
popf
jge
int
leave
push
cmp
push
lods
pop
jns
enter
clc
lahf
imul
pop
inc
mov
pop
mov
movsl
movsl
mov
dec
lahf
aas
cmp
dec
push
adc
dec
outsb
cs
cmp
pop
adc
into
jb
push
loope
ja
sub
add
cli
into
pop
imul
fisttps
fstpl
mov
fisubl
pop
cmp
in
pop
add
test
stos
push
test
out
mov
shll
sbb
shrb
imul
jo
jnp
mov
cmpsb
stos
fstpl
enter
shl
addr16
rolb
sub
stc
dec
push
adc
scas
push
push
test
dec
jno
inc
jp
rcrb
xchg
dec
int3
ret
dec
inc
jnp
mov
and
je
push
push
xor
roll
lods
imul
rolb
mov
adc
mov
xchg
sub
sahf
aas
add
rcrl
pop
xor
faddl
out
mov
or
dec
dec
ljmp
adc
sbb
dec
scas
pop
into
push
adc
test
pusha
rorb
add
fidivrl
lahf
cmpsl
sbb
xchg
in
lods
mov
movsl
ss
ret
jo
xchg
rorl
mov
cld
scas
fldenv
adc
inc
shrb
mov
dec
jecxz
xchg
mov
loope
ret
sub
push
push
mov
inc
xchg
sub
mov
ss
add
sarl
aaa
inc
pop
call
push
scas
int
pop
movsl
sbb
pop
mov
mov
pushl
out
push
pop
jge
mov
mov
inc
or
aas
mov
imul
dec
inc
sub
add
or
leave
fsubl
xchg
xchg
fisubrs
sub
xchg
pop
mov
call
sti
cld
out
pop
xchg
movlps
adc
ret
test
test
mov
pop
sub
out
insb
mov
push
fdivrs
push
bnd
popf
sbb
lods
out
in
aaa
inc
jp
adc
icebp
shlb
push
cli
rorl
cmp
jmp
fwait
dec
sbb
fdivrs
jg
mov
pop
or
jne
or
mov
das
lret
insb
imul
mov
push
mov
out
clc
xor
data16
xor
add
dec
fwait
rorb
mov
xchg
fisttpll
add
imul
pop
xor
mov
xor
in
into
sbb
jmp
pop
cli
mov
sahf
add
mov
insl
call
add
push
inc
sub
scas
and
inc
push
sub
mov
ret
dec
scas
xor
fnstenv
mov
jb
ficoms
push
incb
sub
rcrl
or
and
or
aaa
xchg
mov
and
lret
add
in
push
jmp
cmp
lds
jge
cmp
and
or
mov
mov
lods
stos
mov
fidivrs
or
jo
mov
cld
jb
shl
cmp
jne
dec
mov
pop
ds
adc
sub
leave
in
hlt
add
mov
and
pop
push
aam
das
test
aam
pop
pop
sbb
push
into
rclb
xor
in
repnz
or
pop
push
fldenv
cld
add
cmpsl
mov
cwtl
mov
adc
mov
mov
int3
sub
mov
push
sbb
sub
dec
insb
in
pop
xor
outsb
test
mov
rorl
push
cli
mov
xchg
aas
jle
rcrb
bound
arpl
into
frstor
dec
in
mov
pop
loope
pop
push
jle
outsb
or
mov
mov
ficoml
and
movsl
pop
push
mov
test
jle
cld
mulb
rcrb
shlb
mov
mov
mov
cmp
xor
ficoml
jae
mov
stos
fdivl
into
divl
cmp
addps
or
sarb
and
cmpsb
sbb
es
ja
adc
dec
push
adc
lock
cmpsb
cmpsl
repz
lock
and
mov
out
pop
jns
sbb
adc
roll
dec
aam
add
pop
fwait
xchg
loop
clc
adc
pop
jecxz
and
in
add
cwtl
and
adc
lock
stos
push
ret
jns
jle
push
or
addl
or
push
jge
cmp
stos
push
test
int
mov
inc
push
out
cmp
xchg
imul
iret
jnp
es
adc
mov
pop
mov
mov
or
push
in
jle
and
adc
push
aas
mov
fisubrl
xchg
scas
xchg
out
mov
inc
xlat
lods
pop
fisubl
inc
out
pop
adc
pop
stos
das
pop
cmp
cmpsl
shlb
push
std
inc
mov
inc
pop
mov
rcl
jo
pop
adc
sbb
mov
shrl
lods
inc
js
push
lods
mov
popa
roll
movsb
cld
pop
adc
pushf
in
stos
push
sub
pop
inc
lods
xchg
jle
mov
ret
push
or
je
pushf
testb
and
cmp
dec
or
pop
push
mov
adc
lea
sahf
or
and
inc
xchg
out
adc
cmpsl
ret
dec
pop
lods
lahf
lds
pusha
pop
jge
sbb
push
sub
adc
test
inc
adc
jg
bound
add
in
outsl
xor
push
or
or
xchg
push
lret
mov
pop
bsr
mov
fwait
shrl
pop
or
repnz
adc
sub
dec
bound
mov
mov
xlat
mov
inc
lock
adc
add
clc
xchg
sbb
cmp
or
cld
xchg
test
mov
xor
xor
mov
jle
cmp
lods
mov
pop
cmp
clc
pushf
inc
pop
loope
dec
or
push
stos
add
jbe
sub
enter
add
gs
popa
lcall
jno
dec
mov
pop
pop
push
push
cmpsl
cmpsb
rcrl
or
and
out
mov
shlb
sub
push
dec
mov
inc
dec
cmpb
sub
out
test
xchg
sub
push
divl
sub
add
or
ljmp
pop
out
or
sbb
push
call
add
push
push
test
push
xor
xchg
movsb
enter
cwtl
sbb
mov
fidivrs
imull
imul
inc
sahf
push
dec
cwtl
icebp
mov
and
in
iret
shrb
sarl
cmp
bound
mov
sbb
pop
movsl
xor
jno
push
push
jp
push
movsl
fnstcw
inc
adc
vandps
out
mov
pop
push
or
mov
adc
or
push
cli
xor
xorl
dec
dec
push
adc
bsr
jl
pop
cwtl
in
addr16
adc
sahf
imul
shrl
movsb
lret
xchg
xchg
cmpsb
arpl
out
lret
sub
mov
push
cmpsl
mov
aas
pusha
rolb
dec
movsb
out
mov
jne
aad
outsl
andb
int3
sbb
call
cld
pop
int3
imul
aaa
add
aam
push
ret
or
sahf
push
inc
inc
inc
lahf
aas
or
mov
dec
jg
jne
imulb
push
stos
sub
mov
adc
dec
leave
push
push
mov
sub
inc
ljmp
push
sub
mov
inc
push
lds
dec
testl
sub
pop
into
loop
add
maxps
dec
rorb
imul
ljmp
into
negb
lods
gs
loopne
fldenv
mov
inc
jb
pop
movb
add
mov
add
loop
pop
sub
or
inc
add
push
and
dec
add
adc
test
dec
push
pop
push
mov
pusha
rolb
or
xchg
insl
popa
cwtl
cld
xchg
frstor
inc
loope
jle
push
xlat
lods
rorl
aas
fcomps
lea
sahf
ljmp
outsb
pop
mov
out
pop
loop
cmp
cmc
in
cmpsb
push
imul
shlb
jle
sbbl
js
and
pop
mov
add
lret
into
ja
ds
stos
jg
add
enter
inc
mov
lahf
stos
addl
xchg
cs
mov
cmp
test
shr
mov
cmp
outsb
inc
test
adcl
xchg
push
shlb
cmp
fs
sub
out
sub
push
inc
std
arpl
dec
inc
jmp
pusha
xor
imul
push
adc
push
mov
sub
imul
jae
fildll
xchg
lods
push
cmpsl
imul
or
mov
xchg
dec
dec
pop
xorb
pop
fiaddl
mov
xchg
pop
test
jns
fmuls
out
pop
and
jne
nop
lcall
adc
inc
out
enter
jns
xor
lods
cmc
addl
and
pusha
aas
std
mov
xor
cmp
adc
movsl
insl
test
inc
push
jnp
sub
xchg
mov
jmp
jne
incl
jg
pop
mov
ljmp
jmp
adc
pusha
rorb
dec
std
mov
ja
in
sti
test
add
ficompl
xchg
aaa
push
or
push
jmp
stos
loop
cmpsb
das
mov
rcll
pop
cmp
ljmp
cltd
ljmp
hlt
or
adc
mov
aaa
stc
mov
jne
jae
inc
xchg
dec
insl
nop
cmp
mov
ficoms
aas
mov
push
mov
and
mov
jl
out
gs
cmc
push
sub
xor
xor
push
dec
adc
in
push
and
out
orl
jmp
test
imul
mov
fidivrl
outsb
xor
or
je
ss
push
es
cmp
add
vpavgb
mov
pop
or
test
pop
inc
fwait
out
ficompl
adc
push
adc
xor
mov
inc
cwtl
cltd
sub
sbb
rcll
and
pop
add
pusha
loop
ret
cld
cli
addl
jl
leave
mov
mov
mov
aaa
fldt
ss
cwtl
stc
test
data16
stos
adc
jp
cmpsl
pop
jl
lcall
xor
popf
dec
imul
fidivrs
in
scas
push
ret
or
fldt
movsl
push
jb
ds
pop
adc
adc
iret
mov
dec
jg
inc
push
je
mov
mov
pop
rcll
pop
insl
mov
lock
es
push
mov
and
cmp
adc
pusha
dec
jns
sti
push
dec
sub
or
pop
mov
scas
rolb
subb
pushf
mov
outsb
je
int
mov
out
ljmp
push
adc
loop
lcall
add
xlat
jle
xor
push
aam
cmp
popf
push
push
fists
xchg
sti
mov
dec
roll
adc
jp
mov
fsubr
pop
adc
mov
adc
or
push
and
shlb
rcll
bound
lahf
xchg
in
push
in
adc
cmp
mov
in
mov
jb
mov
out
testl
sub
test
andl
cltd
arpl
movsl
xor
xchg
scas
fucomp
push
and
adcl
and
pop
iret
call
scas
jmp
imul
mov
fists
dec
push
aam
out
loop
dec
push
adc
sub
xchg
jge
xor
out
and
pop
fsubr
test
sarb
sar
mov
or
sub
inc
fcompl
inc
mov
xor
cmp
lock
fcompl
sub
inc
adc
cli
shll
dec
lahf
mov
push
enter
fstpl
loopne
pop
push
out
add
or
jg
push
aas
pop
in
lcall
cmp
stos
push
scas
pop
xor
push
enter
pushf
inc
jmp
icebp
xchg
dec
push
adc
sti
add
adc
lahf
rcrb
dec
daa
jp
subb
mov
and
bnd
mov
push
and
mov
dec
cmp
hlt
add
movsb
and
bound
sbb
mov
xchg
daa
fcomi
lea
mov
mov
jbe
pop
xor
and
scas
inc
fidivrl
sahf
push
mov
aam
add
jg
out
adc
sahf
inc
mov
xorl
movsl
adc
mov
loop
rcrb
jb,pn
push
jecxz
sub
xchg
add
js
pop
ret
stos
hlt
in
rcll
mov
push
adc
sbb
pop
fcoms
sub
lds
jo
jno
insl
ss
out
lahf
xor
out
adc
mov
fnstsw
sbb
loope
les
std
outsb
rcll
out
lock
push
mov
sbb
outsb
dec
lcall
out
dec
aaa
fisttps
inc
xchg
inc
xchg
cltd
testb
jae
insb
mov
mov
cmp
ds
loopne
adc
sub
sbb
fstp
ds
orb
mov
xchg
pop
jno
test
push
std
mov
or
adc
mov
daa
hlt
inc
pop
push
insb
outsl
lds
jecxz
rorl
adc
jo
pop
rcrl
enter
scas
mov
ficomps
push
xchg
mov
push
adc
lods
test
fadd
in
scas
push
rol
stos
out
in
jle
adc
mov
push
aam
mov
push
dec
mov
jb
lods
cmp
inc
scas
or
jmp
xor
aam
or
mov
in
dec
push
add
or
fcompl
idivl
sub
bound
rcll
gs
stos
jl
push
mov
insb
pop
xchg
pop
xor
scas
mov
js
shrl
aam
cmp
ficompl
fnclex
xor
jge
pop
in
push
pop
mov
push
imul
push
mov
insb
out
in
jns
or
div
in
scas
test
outsl
inc
mov
adc
arpl
sub
inc
pop
xor
clc
inc
lods
ds
pop
jge
out
out
adc
fisttps
popf
jecxz
fists
pushf
rorb
jg
push
inc
mov
xchg
and
ljmp
sar
xchg
lahf
or
pop
insl
fwait
sub
cs
jae
loop
inc
aaa
push
scas
pop
lods
movsl
jmp
dec
push
adc
sub
jae
dec
pop
add
and
ljmp
mov
ja
cwtl
je
push
adc
je
mov
push
stos
and
gs
jne
adc
push
clc
xor
in
jge
fdivs
movsl
lea
adc
lock
xlat
inc
mov
lahf
aas
or
adcl
cmp
mov
lods
popf
cmp
cmp
add
push
adc
mov
pop
or
xchg
cld
push
out
lahf
and
imul
lcall
adc
lods
xchg
cs
es
pop
sub
ss
push
ja
int3
mov
push
adc
arpl
test
push
adc
xchg
add
lahf
dec
repz
rcl
jb
push
and
clc
jnp
mov
jne
lret
mov
pop
mov
or
or
xchg
pop
jmp
in
dec
repnz
stc
movsl
mov
dec
testb
xlat
scas
pop
loop
dec
pop
add
or
bound
mov
pop
das
imulb
lcall
mov
sti
decb
sub
xor
push
shrb
inc
data16
mov
or
insb
xchg
sbb
inc
popf
in
xchg
mov
mov
cmpsl
push
mov
mov
loope
rol
pushf
loopne
push
iret
sub
mov
dec
ds
lcall
inc
sub
insl
or
outsl
test
jp
ja
hlt
pop
popf
jecxz
xor
sbb
icebp
sbb
pop
cld
mov
adc
push
lds
mov
fs
cmp
pop
insl
sub
int3
pop
mov
test
push
xor
repz
or
or
out
shlb
fwait
addl
or
push
mov
testl
in
fnstcw
jae
or
push
adc
inc
adc
mov
aaa
xchg
mov
insl
imul
idiv
inc
mov
out
xor
mov
sbb
inc
jb
jg
push
push
adc
cmp
lret
movb
jnp
push
or
mov
inc
iret
pop
inc
ljmp
ds
cld
out
sbb
data16
sbb
jl
pop
call
rep
cmp
lods
or
sub
and
scas
or
js
arpl
mov
mov
icebp
cmp
ljmp
das
xlat
arpl
pusha
fadds
or
imul
or
jnp
push
mov
stc
mov
inc
imul
adc
dec
movsl
inc
ss
xorl
mov
or
inc
add
xchg
fwait
dec
div
aam
test
ja
adc
inc
xchg
ror
adc
imul
or
adc
fsubp
cmp
das
fnstsw
pop
jle
xor
jmp
pop
push
fwait
cmp
add
dec
push
adc
cli
popf
pop
mov
ja
enter
xlat
xor
pop
fwait
pusha
mov
cmp
add
je
cwtl
push
dec
xchg
sub
mov
sti
negb
leave
inc
mov
imulb
jmp
shlb
cmpsl
dec
jmp
test
mov
push
dec
mov
sub
inc
mov
sub
jle
inc
fstpl
xchg
push
jg
sub
aad
mov
into
into
jmp
dec
imul
lahf
push
inc
mov
and
xchg
sub
xor
push
test
mov
sbb
push
in
mov
cmp
scas
push
cmpsl
dec
lahf
jne
std
sti
testb
movsl
cs
cmp
push
adc
or
push
inc
dec
xchg
push
insb
sarl
mov
cli
push
cmpsl
imul
pop
imul
outsb
adc
inc
stc
push
movsb
int
sub
mov
xorl
lea
call
je
jge
clc
sarl
lahf
jge
lahf
test
ds
push
addr16
shrb
arpl
pop
mov
adc
or
pop
imul
fisubl
pop
ljmp
inc
mov
shlb
inc
cmp
in
jne
cltd
ret
testb
and
je
jge
jle
xchg
push
pop
pop
mov
test
mov
jmp
lret
pop
stos
push
fldt
xor
call
sub
xor
mov
stc
aaa
popf
mov
call
mov
add
push
cmpsl
dec
xchg
cmp
jno
lcall
hlt
mov
xlat
pop
push
out
sub
ficompl
xchg
scas
mov
ds
xchg
xor
out
test
hlt
jge
pop
mov
jle
fadds
jmp
pop
dec
es
xor
mov
jb
jnp
push
testb
ret
dec
pop
pop
or
or
repz
push
jns
in
roll
inc
cli
cmc
push
bound
inc
inc
minps
out
lea
mov
jle
out
xchg
pop
adc
sub
adc
aas
adc
jne
sub
cwtl
mov
sbb
xchg
or
xchg
movsl
stos
push
xlat
mov
xchg
idivb
cmpsb
aaa
sarl
add
push
rorl
roll
push
es
fs
lds
fistps
cs
test
xor
js
data16
sbb
xchg
jae
xchg
cltd
cmpb
adc
pop
lahf
icebp
inc
cmp
xchg
mov
ret
mov
add
push
xchg
add
mov
gs
lret
mov
mov
sbb
or
in
sbb
lods
pop
inc
inc
cmp
rorl
outsl
or
xchg
stos
xchg
lahf
cmpsl
loop
xchg
divb
cwtl
cwtl
cmp
sub
mov
loope
push
push
adc
aad
test
fidivrs
test
stc
add
or
arpl
nop
sub
cmp
lods
push
fstps
inc
mov
sub
jne
mov
mov
jae
inc
out
imul
jp
lods
out
les
andb
mov
in
fistps
xor
push
adc
xor
pop
xchg
or
je
xchg
adc
lret
sbb
stc
enter
shll
movsb
in
lock
shll
fucomi
int
pop
or
call
sbb
xchg
lock
cmpsl
mov
mov
test
lea
push
sarl
add
push
stos
push
scas
xchg
enter
movsl
dec
xchg
arpl
cmpsl
dec
lahf
nop
imul
out
adc
addb
mov
jle
scas
and
jmp
notb
add
mov
sub
cmp
mov
xor
xchg
cmp
mov
das
or
aad
dec
xchg
mov
aas
xor
sti
imul
fidivrl
stos
and
cli
mov
or
cmp
lock
aas
jle
out
out
fisubl
xchg
inc
pop
aaa
cmp
popa
stos
push
scas
dec
and
xchg
roll
pop
or
dec
lahf
aas
shr
or
in
fcmove
jnp
jle
dec
mov
sub
pop
mov
push
cmpsl
cmp
sti
iret
push
lret
mov
fisubrl
out
shlb
cmpsl
dec
pop
dec
add
sti
imul
jne
rcl
pop
push
dec
cli
sub
and
decb
jae
xchg
mov
lea
inc
cmc
adc
sbb
mov
sahf
pop
sub
jmp
sub
aad
lahf
aas
jle
and
jle
inc
mov
out
push
scas
icebp
adc
sahf
movsl
dec
push
and
inc
inc
ds
cli
data16
fadds
push
shrl
mov
std
ljmp
or
imul
cmpsb
lea
sub
sub
out
fimuls
lods
aam
mov
or
int3
mov
lods
and
pusha
mov
in
lods
movsl
sbbb
inc
push
aas
daa
sbb
test
out
fmul
call
mov
das
cmp
jbe
mov
mov
add
mov
aam
std
push
push
scas
push
pop
imull
cmp
pop
lods
inc
loope
jmp
icebp
cld
fwait
jmp
cmpsb
cld
and
mov
hlt
push
mov
fcoml
cmp
rolb
stc
notl
rolw
dec
mov
lahf
scas
dec
lock
fisttpll
popa
mov
sarb
xchg
lcall
cmp
push
inc
decb
mov
push
cmp
mov
popa
mov
lret
fstps
mov
and
adc
repz
hlt
adc
lret
ss
or
xchg
ss
clc
das
decb
cld
inc
sub
push
std
add
mov
ljmp
mov
ja
mov
dec
bswap
sahf
push
push
adc
shl
or
push
dec
jbe
dec
lock
andl
loopne
ja
jno
in
pop
and
arpl
data16
xor
sub
fisttps
adc
arpl
xchg
test
clc
inc
mov
mov
sub
test
pushf
or
xor
shll
jb
add
and
ljmp
incb
stos
mov
fdivp
jns
xor
test
pusha
out
adc
sbb
add
jo
pop
hlt
out
int3
sbb
hlt
push
mov
add
pop
or
and
cmc
push
and
sub
jb
sbb
cs
nop
pop
jmp
push
ja
push
cld
add
xchg
push
iret
sbb
pop
into
mov
mov
inc
in
cwtl
test
xlat
in
push
dec
pop
pop
test
pop
push
frstor
xbegin
mov
mov
lds
jo
lret
movsb
mov
mov
mov
insb
ljmp
inc
lahf
cmp
pop
pop
cmp
sbb
pop
test
and
mov
sarl
add
and
js
mov
and
rcll
adc
pop
lahf
push
inc
mov
ficomps
adc
inc
mov
sub
lods
aad
jo
or
shl
out
mov
stos
popf
mov
in
stos
push
shl
inc
mov
ss
mov
and
inc
inc
clc
or
and
sbb
push
fucomp
leave
dec
inc
or
pop
ds
sti
sahf
cmc
pushf
shrl
imul
cmpsb
mov
pop
jge
or
movsl
shlb
mov
mov
cltd
sub
vmovaps
int3
call
jb
insl
adc
push
mov
stc
mov
daa
es
in
cmc
adc
push
or
stos
xlat
into
jge
sbb
pop
mov
lock
aas
add
sbb
mov
xlat
rolb
add
lahf
push
mov
cmp
test
das
fsubs
ds
jmp
cmp
addl
test
push
aam
xor
mov
push
cmpsl
dec
adc
or
jl
xchg
movsl
sbb
cld
lods
stc
rclb
or
shrb
mov
jmp
push
imul
push
imul
mov
andb
lds
nop
sub
mov
shr
insb
fcompl
or
rol
sahf
je
push
outsb
pop
sub
leave
inc
pop
cmp
mov
ret
imul
mov
test
push
mov
movsl
dec
call
in
mov
cld
cli
loopne
mov
movsb
sbb
fsub
pop
dec
pop
addr16
frstor
adc
mov
jg
stc
loopne
loopne
add
lods
test
xor
mov
adc
sub
xchg
in
pop
jmp
cmp
out
shrb
js
in
xlat
in
negb
mov
test
xchg
fs
int
fdivrl
movsl
and
pop
or
popf
and
popf
mov
imul
and
iret
aad
jnp
out
fs
testl
xchg
xor
mov
inc
cmc
das
and
test
cld
mov
xchg
rorl
dec
sub
cmp
jno
test
sbb
sbb
sbb
mov
cmp
into
xchg
push
repnz
nop
loopne
inc
ja
std
mov
outsb
into
loopne
mov
xor
pop
inc
scas
cltd
sbb
cli
xchg
sarl
add
cmp
inc
jecxz
out
push
or
dec
mov
mov
xchg
adc
mov
test
inc
fistl
leave
dec
cmp
cmc
xchg
cld
and
jns
test
ljmp
pop
xchg
fisttps
scas
mov
and
sbb
add
cmp
pop
push
sti
inc
cwtl
test
aad
sbb
into
mov
data16
or
repnz
imul
mov
push
es
aaa
ljmp
and
hlt
out
nop
sahf
in
rcll
adc
push
xchg
pop
adc
or
imull
cmpsl
or
cmp
aam
sbb
add
ja
loope
and
inc
cwtl
cmp
clc
pop
adc
pop
iret
add
shrl
inc
mov
out
shrl
or
jne
push
addr16
mov
xchg
imul
push
jb
dec
xchg
aad
push
mov
hlt
pop
adc
or
lret
repz
mov
cmp
sbb
iret
jmp
jg
and
ret
pop
ljmp
popl
adc
xchg
inc
push
sub
pop
mov
push
gs
adc
aas
pop
lds
out
xchg
and
cmp
adc
inc
jns
lahf
aas
jmp
insb
inc
in
pop
adc
in
fwait
je
push
outsb
pop
sub
push
push
pop
aas
arpl
dec
pminsw
adc
popf
push
icebp
stos
push
sub
push
mov
daa
and
mov
loop
test
mov
fldl
scas
push
scas
sub
dec
loopne
inc
mov
int3
in
pusha
rcr
mov
loopne
or
lcall
pusha
scas
ds
repz
aam
int
add
cltd
push
data16
sbb
push
test
mov
je
shrb
xchg
outsl
movsl
mov
add
je
repnz
or
aad
fistps
movsb
orb
xchg
mov
imul
movsl
sbb
fildll
imul
outsl
push
xchg
and
jmp
hlt
push
sti
jg
gs
sub
stos
xlat
insb
pop
daa
test
adc
daa
push
mov
add
adc
dec
push
add
cli
pop
nop
or
shll
aam
add
pop
lret
jo
sub
push
nop
or
add
xchg
test
clc
fs
clc
adc
or
test
mov
sbb
sarl
mov
test
pop
ss
xchg
js
lret
out
and
rcr
push
mov
shl
outsl
pop
ficomps
les
dec
add
inc
and
jno
fisubl
push
lods
push
dec
adc
pop
cmp
leave
or
lret
pop
sbb
pop
sub
inc
push
and
les
sahf
mov
push
subb
push
dec
mov
and
ffreep
mov
imul
jb
pop
add
cmpsb
lret
xchg
mov
hlt
xchg
test
inc
sbb
ja
or
push
sub
push
adc
dec
or
push
outsb
mov
jg
fcomp
icebp
jno
xchg
mov
cmp
sub
int3
mov
mov
dec
cs
lahf
mov
dec
ds
icebp
dec
subl
sub
xchg
jne
repnz
jle
push
cli
mov
mov
fsubl
jnp
dec
js
fidivrl
hlt
pop
cmp
push
sub
sahf
xor
mov
and
mov
cld
arpl
int3
ja
mov
orb
arpl
xchg
pop
mov
push
sbb
or
mov
loope
cmp
sub
hlt
push
xchg
sahf
dec
incl
sub
sbb
aaa
xor
mov
movsl
sbb
test
push
bound
dec
insl
stc
mov
push
push
nop
dec
jb
pop
and
mov
jae
into
out
mov
stos
or
pusha
push
call
mov
pop
xor
push
or
and
mov
adc
mov
shll
fidivrs
aaa
idivl
outsl
push
adc
scas
mov
push
adc
xor
aad
cmp
lahf
dec
jmp
xchg
or
enter
hlt
popa
jl
push
adc
push
shll
jb
push
sub
mov
sbb
sub
adc
pop
or
movsl
hlt
pop
test
xlat
xor
xchg
xchg
loop
into
jae
bound
rorl
imul
lahf
sbb
js
imul
adc
inc
cmp
repnz
jle
pop
dec
dec
or
xchg
andl
adc
mov
insb
js
test
xchg
cli
adc
push
or
lea
test
xorb
adc
and
dec
xchg
sahf
icebp
jo
or
jns
into
sub
and
fbld
ds
jne
cmpsb
sbb
lods
xchg
mov
or
iret
push
xor
inc
add
xchg
and
adcl
push
mov
ljmp
push
sub
mov
mov
mov
loope
out
mov
mov
push
roll
sbb
shl
outsl
pop
in
pop
cmp
or
inc
in
mov
test
mov
loop
push
push
adc
sub
sbb
push
in
lret
push
rcl
push
andl
xor
jns
adc
std
mov
notb
sbb
addr16
sbb
mov
pop
adc
xchg
sbb
ja
jo
repnz
adc
xchg
xchg
xchg
cs
js
stos
frstor
sbb
dec
mov
sub
lods
loopne
push
push
adc
and
adc
fs
adc
sbb
xor
jo
scas
aas
dec
imul
loopne
lea
ljmp
sub
adc
scas
gs
xchg
in
loope
repnz
adc
add
imul
loopne
push
push
adc
loope
adc
xor
out
roll
pop
cmc
int3
out
push
adc
repz
cmpsb
imul
jmp
inc
or
je
mov
jmp
sub
int
dec
cs
aaa
cmp
cmp
sub
outsl
cmp
shrl
push
pop
jbe
ret
or
xchg
movsb
movsl
push
jle
xchg
cmpsl
outsb
push
fisttpl
lods
and
push
fstpl
popa
dec
hlt
add
inc
loopne
or
in
pop
rclb
pop
cltd
pop
cld
adc
xlat
push
ds
mov
pop
pop
xchg
pop
pop
xor
add
and
orl
mov
cmpsb
es
jecxz
add
mov
js
sub
lret
lcall
sarb
xchg
xchg
pusha
pop
xor
aaa
mov
pushf
xchg
imul
jbe
mov
imul
dec
dec
sub
pop
jmp
pop
sub
xchg
mov
leave
ja
ja
xor
cmp
lret
mov
aaa
mov
adc
jge
mov
push
mov
mov
test
xchg
test
mov
inc
xchg
icebp
sbb
jns
stc
in
dec
psubsb
cmp
out
leave
incb
add
cmp
fsubl
daa
and
jle
les
scas
fcoms
divl
fs
fcomip
dec
movsb
mov
fcomps
hlt
mov
push
jmp
add
movsl
or
ss
sbb
stos
sub
shrl
hlt
xchg
or
roll
repz
push
dec
test
pop
dec
fcoml
lds
or
hlt
mov
push
add
inc
sub
jle
addl
call
loopne
loop
xchg
or
inc
mov
in
mov
cld
in
jle
mov
das
xor
rorl
xchg
xchg
scas
sub
test
or
sub
repnz
aaa
stos
int
in
push
adc
cmp
movsb
inc
clc
call
dec
and
cmc
jb
cmpl
lods
mov
bound
mov
out
out
stos
inc
ret
dec
fcmovnb
sub
and
aas
inc
cld
push
push
inc
cmp
icebp
inc
cmp
add
insb
cwtl
mov
lret
adc
aas
popf
jp
sub
push
rorb
popa
lea
and
xchg
dec
add
aam
jmp
or
xchg
pop
jle
leave
xor
fstl
cmp
in
into
cmp
and
inc
rolb
imul
jmp
sti
jmp
mov
out
inc
sbb
je
pop
pop
xor
testb
xlat
ljmp
stos
mov
adcl
dec
xchg
mov
rol
mov
lods
ds
dec
mov
sbb
lods
mov
movsl
lods
std
jmp
jne
pop
insl
fwait
sub
cs
jae
out
aad
out
push
adc
in
andb
out
mov
mov
movsb
rcrl
mov
push
and
rorb
mov
mov
sti
inc
jbe
sbbb
mov
es
in
clc
mov
add
or
pop
mov
pop
outsl
stc
sti
pop
inc
test
stos
das
pop
mov
stos
and
push
lds
xchg
sub
push
test
test
lret
sub
add
lahf
dec
and
rcl
clc
lahf
mov
add
jmp
or
out
sbb
or
mov
cld
fistps
in
inc
add
fcmove
jp
sti
rorl
test
jno
cltd
jo,pn
and
inc
jp
nop
push
aam
lods
mov
mov
loopne
movsb
fmul
jno
cmc
out
je
and
mov
repnz
in
push
xchg
imul
pop
pop
jl
loope
pop
dec
add
popl
or
mov
fsub
dec
fistpl
sub
mov
inc
or
iret
dec
sbb
out
aam
or
pop
clc
lea
sub
aas
xchg
test
das
cmp
adc
pop
mov
pop
mov
mov
movsl
adc
rorl
mov
cmpsl
inc
daa
bound
dec
add
std
call
xchg
add
mov
jno
pop
sub
icebp
push
push
adc
add
sub
cli
jno
out
push
fstpl
push
adc
or
ror
jbe
push
test
adc
cmc
sbb
stos
mov
pushf
inc
mov
aad
inc
dec
icebp
inc
sbb
popa
mov
leave
xchg
adc
push
int
sarl
repnz
cmp
std
add
out
or
shl
imul
lds
les
pop
inc
mov
add
sbb
mov
test
and
es
jmp
sbbl
incb
js
sti
loope
xchg
test
insl
hlt
cltd
xchg
mov
jge,pt
cltd
popf
add
adc
xchg
pop
push
dec
cmp
pop
sbb
adc
sub
xchg
loopne
jns
in
push
mov
inc
sti
iret
add
xor
xor
xor
dec
push
xlat
push
inc
mov
in
in
xorl
sahf
daa
jge
push
xchg
out
mov
push
mov
cmc
mov
pop
loopne
rcr
in
push
sbb
sbb
divl
mov
push
scas
sbb
jp
mov
lahf
popa
mov
adc
sbb
xchg
aam
inc
cli
mov
pop
mov
test
sub
fwait
mov
shlb
sbb
pop
sub
mov
pop
lods
cltd
inc
push
pushf
push
out
lea
xchg
into
fnstsw
jg
adc
insl
scas
cli
cmp
jg
push
mov
icebp
mov
movsl
and
out
pop
pop
sub
popf
lcall
popf
and
push
jecxz
loope
pop
test
pop
adc
roll
fistps
pop
dec
fnstsw
popf
in
pop
adc
pop
or
jle
add
push
xor
leave
lods
ss
inc
popf
loope
stos
push
clc
scas
xlat
mov
pop
lret
pop
xor
xchg
pusha
mov
insl
fadd
mov
pop
or
aam
dec
pop
add
pop
rcrb
push
adc
dec
loop
enter
bound
andl
cs
adc
fcmove
or
lods
pushf
stos
popf
xor
push
stos
sub
add
adc
add
movsl
lock
js
mov
add
or
push
mov
adc
push
jp
call
pop
or
cld
lods
dec
jno
push
sub
adc
mov
and
adc
in
sahf
mov
adc
mov
out
pop
nop
sub
xchg
mov
sbb
and
sub
inc
sub
mov
lea
in
out
fidivl
add
test
cmp
mov
ret
push
cmpsl
xor
or
push
adc
iret
subb
lods
and
shll
push
cmp
daa
out
ficompl
std
das
shl
mov
push
mov
push
and
mov
or
push
cli
in
xchg
cs
js
ljmp
inc
add
jge
cmp
repnz
mov
sti
imul
push
dec
jg
mov
push
sub
stos
inc
rorb
cltd
jecxz
pop
push
mov
sahf
cmp
lds
pop
mov
push
sti
fcoml
scas
mov
sarb
push
cs
jp
hlt
fwait
pusha
dec
sbb
scas
xor
int3
fcomi
fbld
lods
sub
adc
rorb
loopne
movsb
inc
repz
fsub
je
fcmovnb
adc
sar
pop
adc
pop
and
push
mov
xchg
cmc
and
jne
pop
movsb
and
push
push
and
inc
mov
sti
lea
cmp
jge
rclb
mov
cmp
jle
and
lcall
cmp
pusha
mov
pop
mov
mov
hlt
lds
adc
mov
outsl
aas
or
ds
repz
add
mov
mov
outsb
aad
jno
int3
insl
sub
pusha
out
adc
inc
mov
inc
js
ljmp
testb
in
push
je
out
pop
scas
data16
push
push
cmp
cmc
or
loop
inc
rorb
jmp
leave
push
xlat
ja
cmp
mov
fwait
mov
loop
lcall
in
vprotw
imul
pop
arpl
cmp
pop
adc
fiaddl
dec
mov
iret
jae
push
xor
mov
mov
cli
pop
mov
jecxz
jne
add
inc
test
sbbb
stc
mov
cli
jae
mov
jp
std
jbe
out
sbb
cmp
fmuls
or
cmp
sbb
lock
sub
push
shrb
xchg
cmp
xchg
pop
stos
fisttps
jne
cmc
jnp
icebp
ljmp
add
add
mov
arpl
ss
sub
pop
adc
addr16
imul
aad
push
in
loope
loop
cwtl
jmp
and
or
mov
pop
xchg
xchg
in
stos
mov
xchg
pop
pusha
and
lahf
sti
call
and
mov
test
xor
lcall
jnp
mov
rolb
pushf
adc
sbb
xchg
movsl
dec
fists
into
dec
insl
push
push
adc
out
lds
adc
enter
ss
or
aaa
sarb
in
pop
adc
mull
cmc
in
shlb
shl
sub
push
adc
cmp
clc
loope
cmp
and
jp
pop
das
je
jge
clc
mov
mov
js
ficoml
stc
dec
scas
push
pop
das
or
addr16
dec
xchg
andb
mov
push
popf
sbb
mov
cmpsl
adc
shrb
shrb
mov
les
orb
jg
mov
out
inc
pop
mov
mov
and
in
cli
idivb
sbb
mov
sub
mov
jecxz
fwait
adc
in
pushf
sub
in
negb
pop
aaa
xor
inc
aad
scas
pop
das
je
jge
clc
mov
mov
sti
pop
inc
test
das
cmpsb
add
xor
and
add
push
mov
imul
test
rcl
pop
push
hlt
clc
sub
fsubr
std
add
mov
lea
rolb
mov
pop
adc
test
adc
xcrypt-cbc
cmpsl
xchg
sub
push
cmp
clc
loope
ret
mov
inc
add
push
adc
addb
mov
cmp
add
mov
mov
jle
push
test
mov
cmpsl
and
adc
sbb
loope
jmp
dec
add
shlb
dec
das
xchg
adc
dec
insl
push
test
dec
add
adc
cmp
push
cmp
mov
lcall
xor
fldt
mov
call
cmp
divl
mov
ja
movsl
mov
sub
test
pop
shrb
mov
mov
ss
test
mov
mov
out
es
and
ret
sbb
int3
mov
or
js
test
xor
in
std
add
daa
push
mov
dec
jb
xchg
pop
fcomp
add
or
xlat
push
clc
jmp
sub
adc
cmpb
fs
out
sub
or
add
cmp
xor
lods
adc
sbb
setge
movsl
pushf
push
push
adc
pop
inc
cld
add
push
adc
inc
enter
push
dec
xor
dec
add
call
lods
mov
lock
inc
push
or
push
mov
xor
out
push
lock
stc
push
shlb
push
cmpsb
mov
sub
es
movsb
fbld
or
inc
sbb
or
std
and
mov
xchg
out
add
roll
iret
dec
jnp
dec
insl
je
xor
ja
cwtl
aad
fstl
adc
cli
rol
rcll
or
jge
cld
jg
fildll
cmp
push
adc
xor
push
adc
mov
cmp
out
sti
xor
and
jecxz
mov
shrl
lock
push
adc
fcomp
out
and
test
enter
jnp
enter
ds
jo
enter
fs
outsl
sub
xchg
in
shrb
loopne
push
adc
sbb
sbb
cltd
jg
push
sbb
push
mov
xchg
jmp
loope
mov
and
cmp
or
jmp
es
outsb
cmc
data16
xchg
or
ljmp
mov
data16
leave
shrb
push
aad
jb
sbb
xchg
jmp
push
and
stos
xor
mov
cmp
xchg
movsl
lret
pop
daa
pop
or
inc
jle
or
or
or
pusha
pop
in
nop
pop
push
repnz
ljmp
sub
lods
pop
mov
sub
inc
mov
ljmp
dec
decb
sub
sub
lea
push
jecxz
pop
adcl
fisubl
push
aad
lods
test
out
adc
push
imul
sub
fistpl
sub
fwait
aas
rorl
mov
imul
stos
fwait
scas
icebp
add
fwait
mov
push
dec
arpl
pop
loopne
negb
pop
aaa
lock
sub
clc
cmp
cmp
rclb
dec
mov
leave
sti
notb
aaa
mov
scas
sbb
stos
sbb
insl
cmpsb
mov
push
push
rorl
mov
out
mov
inc
stos
push
scas
repnz
movsl
dec
lods
xchg
push
pop
pop
out
jl
push
pop
lahf
test
imul
inc
ds
stos
pop
into
add
out
test
dec
lahf
nop
jmp
in
mov
fidivl
adc
scas
enter
loope
out
daa
push
pop
mov
nop
imul
fwait
mov
pop
inc
stos
push
scas
dec
adc
xlat
xor
in
dec
test
sti
not
pusha
mov
movb
adc
mov
push
dec
mov
add
lahf
mov
ljmp
scas
das
enter
movsl
pop
xor
dec
int
in
fdivp
fbstp
mov
and
scas
cs
mov
shll
cmp
fcompl
sbbb
cmc
xchg
pop
repz
inc
daa
pop
nopl
adc
push
test
and
and
mov
enter
stc
fcmovu
pop
xchg
adc
pop
xorl
add
les
xor
adc
pop
sub
mov
xor
xor
out
jecxz
lods
sub
mov
std
xchg
inc
mov
movsl
les
add
clc
jns
jae
test
mov
shlb
jmp
ret
movsl
xor
out
xchg
pop
pop
sub
jp
adc
mov
jl
ret
std
dec
xor
and
enter
mov
jge
dec
adc
int3
xchg
push
add
jl
mov
pop
call
lock
rorl
icebp
lock
jae
adc
and
fs
inc
cld
ds
scas
outsb
jno
in
repnz
mov
out
std
test
jae
adc
in
xor
aad
test
mov
das
or
sub
es
adc
mov
xchg
push
lea
lds
fdivrl
call
adc
adc
stos
fmul
inc
push
or
cs
cmp
xcrypt-ofb
cmpsl
stos
jl
aaa
xor
mov
jo
push
push
push
sub
mov
cltd
jle
lock
fidivrs
notb
cmpsb
and
mov
icebp
lock
imul
dec
nop
sub
pop
sbb
add
fsub
shll
jp
adc
mov
scas
push
hlt
cmpsl
lock
ds
xchg
and
adc
shr
shlb
jae
call
mov
or
mov
ret
xor
pop
xchg
or
add
xor
xchg
pop
orb
dec
cmp
test
jp
pop
test
mov
mov
sbb
jae
adc
or
shlb
lds
bound
pop
inc
push
call
adc
push
adc
or
xchg
adc
dec
xor
push
scas
pop
loopne
inc
mov
arpl
lret
xor
int3
cld
imul
pop
mov
into
into
andb
xor
jp
adc
sbb
jecxz
sbb
nop
cmp
mov
jmp
xchg
push
cmp
cwtl
stos
sub
out
outsl
xor
sbb
lret
cmp
jle
mov
enter
inc
scas
inc
daa
loope
scas
pop
mov
adc
push
inc
dec
cmpsl
inc
std
std
sti
notb
and
inc
clc
pop
test
pop
loopne
mov
or
mov
sti
testb
call
sti
push
push
and
pop
mov
dec
xchg
sub
push
cmp
sti
pop
and
ds
std
mov
ljmp
mov
inc
imul
pushf
mov
jl
in
fcmovb
lahf
and
sbb
add
repnz
dec
push
pop
das
adc
call
adc
adc
push
mov
pop
mov
mov
rolb
dec
xchg
lods
cltd
stos
and
dec
dec
popa
push
sub
push
cmpsl
xlat
std
adc
push
adc
rcll
add
stos
or
dec
adc
push
cmpsl
xor
fst
pusha
mov
cs
mov
andb
inc
shlb
addr16
mov
inc
add
fcmovnb
jecxz
aad
lock
mov
or
pushf
cmp
popf
bound
mov
faddl
add
lods
cmpsl
dec
sbb
and
mov
clc
pop
outsb
aam
lret
xchg
push
push
fnstenv
jle
adc
std
idivb
subb
add
test
aaa
jg
movsb
out
sbb
xchg
push
push
mov
pop
aam
pop
mov
inc
int3
pop
push
xchg
push
lahf
mov
xor
leave
cmp
cld
cmpsl
inc
mov
js
arpl
mov
or
in
jg
adc
mov
hlt
lods
adc
add
imul
sbb
pushf
mov
xor
jne
jg
sbb
movd
push
mov
scas
lock
jmp
inc
pushl
fwait
cmp
mov
fdivl
add
dec
xor
xlat
and
or
inc
pop
push
push
adc
orl
adc
enter
stos
xor
aam
in
push
ret
pop
gs
cwtl
sahf
cmp
push
xchg
out
xchg
xchg
out
loopne
fildl
mov
mov
lret
dec
arpl
mov
and
outsl
mov
sub
ja
inc
mov
cmc
mov
jg
repz
inc
das
dec
or
push
jmp
mov
xchg
fs
xchg
das
and
popa
add
xor
in
in
mov
jo
jns
outsb
loope
mov
outsl
cli
pop
lods
call
mov
das
cmp
addr16
inc
jg
push
adc
movsl
inc
lea
mov
push
scas
push
and
fwait
jp
mov
icebp
mov
or
scas
or
sbb
outsb
inc
add
and
fidivl
ja
adc
jg
push
or
cmp
push
lret
or
mov
xor
mov
xchg
addr16
mov
xchg
cmp
sub
bound
xchg
push
push
mov
jne
xchg
push
shlb
inc
mov
andb
or
push
test
js
aam
xorb
xor
inc
mov
ret
cltd
mov
xor
fistpl
enter
movsl
pop
fcoms
push
cmpsl
imul
jle
sti
adcb
aas
and
sub
int3
cwtl
cmp
sub
aad
and
jle
lea
rclb
pop
scas
pop
enter
pop
dec
orl
movsb
dec
in
dec
stc
std
sti
idiv
inc
mov
mov
mov
mov
dec
xchg
in
outsl
push
xor
ret
mov
add
push
push
push
cmpsl
xlat
in
inc
mov
cmpsb
adc
cmpsl
dec
lahf
nop
or
mov
adc
stos
push
inc
in
imul
xchg
sub
addb
inc
sbb
pop
repnz
pop
push
mov
fcomip
xchg
sub
mov
sub
mov
arpl
pusha
mov
int
jno
lods
stos
rol
fs
shrl
inc
mov
sub
fs
xor
push
or
icebp
imul
sbb
fwait
jmp
sub
rcr
shlb
aas
jle
cmpl
pop
cmp
das
enter
movsl
pop
sbb
push
cmpsl
mov
xchg
jle
sti
jge
fidivrl
fwait
movsl
xchg
push
sbb
sub
imul
pop
mov
ds
hlt
push
mov
fidivrl
lahf
cmpsl
shr
mov
scas
pop
int
popf
fwait
divb
cmp
in
mov
out
pusha
xchg
scas
fsubp
pop
mov
jg
push
sub
push
xor
lret
enter
mov
adc
cmp
sbb
jbe
pop
movsb
pop
pop
sub
loopne,pt
jnp
out
sbb
jo
pop
fists
dec
pop
mov
cmp
sbbl
out
fwait
div
cld
dec
adc
test
xorb
in
mov
hlt
inc
mov
rorl
lds
out
xchg
pop
int3
mov
loop
push
jmp
nop
inc
mov
popa
cld
pop
dec
stos
daa
js
icebp
mov
cli
movsb
pusha
push
decl
mov
lods
jmp
push
negl
sub
test
and
sbb
mov
xchg
mov
std
xchg
clc
cmpsl
inc
push
cvtdq2ps
cmpsb
roll
lds
lds
add
dec
pop
flds
fnstsw
test
lds
jle
inc
cmp
imul
data16
fmuls
mov
adc
test
push
mov
enter
or
in
mov
fs
xor
mov
fists
arpl
xchg
cltd
add
mov
int
repnz
push
cmp
dec
jnp
sbb
xor
push
mov
ja
pop
fstl
rcll
cli
mov
push
xchg
jg
pop
dec
imul
mov
addr16
aas
mov
cmpsb
jns
outsb
push
xor
ljmp
mov
aam
pop
adc
jecxz
jne
test
lods
pop
dec
test
push
sub
cmp
mov
stos
test
inc
aad
mov
mov
ficoml
xchg
popa
test
in
sub
and
mov
cmp
insb
sbb
sub
mov
mov
dec
test
lock
pop
lods
jae
sbb
inc
fwait
inc
fnsave
in
negb
push
or
insl
lea
lret
lds
mov
push
mov
pop
adc
cmp
pop
mov
icebp
cmp
xchg
imul
ss
sub
shll
fdivs
mov
out
js
sub
fdivrs
xlat
cs
imul
sarl
popl
mov
movb
ljmp
push
push
adc
dec
or
das
mov
shl
pop
adc
lods
push
addr16
push
aaa
xor
test
mov
out
pop
ds
jbe
pop
mov
mov
adc
dec
add
push
aam
mov
push
sub
fldcw
andl
cs
sti
jno
adcb
clc
xchg
out
mov
sub
push
cmpsl
xor
mov
dec
ja
rcl
cmp
pop
and
jb
fidivrs
into
push
test
mov
movsb
sar
xlat
imul
pop
mov
sbb
movsl
dec
in
lea
int
inc
aad
xor
push
mov
frstor
popf
pusha
stos
jmp
popf
adc
test
ja
scas
test
mov
mov
daa
adc
dec
add
mov
mov
push
mov
in
lea
ljmp
rcrb
and
scas
das
or
std
xchg
mov
push
adc
push
xchg
sbb
jns
inc
lods
mov
and
jle
dec
pop
inc
cmp
scas
jle,pt
aas
stc
enter
add
mov
adc
sub
jg
jae
cmp
lods
pop
mov
or
adc
adc
testb
cld
add
popf
rcrb
pop
xchg
push
adc
push
cmc
pop
fs
push
pop
gs
xchg
adc
addr16
mov
mov
cmp
lods
push
scas
leave
or
push
rcrb
bnd
pop
jmp
or
dec
or
or
sub
mov
jmp
lods
dec
inc
mov
sub
stos
aam
stc
lds
dec
lret
mov
jmp
xchg
call
jns
mov
sub
mov
sbb
inc
in
enter
mov
or
xchg
mov
pop
scas
sub
fnstsw
xchg
and
jbe
negb
jle
shrl
inc
mov
push
mov
in
jb
dec
mov
mov
fisubs
inc
and
mov
inc
cli
popf
xchg
insl
add
mov
cld
and
cmp
cltd
jae
out
xchg
xlat
popf
nop
push
inc
lret
jno
push
adc
or
mov
jno
mov
mov
fldt
push
adc
adc
jl
jg
xchg
mov
jle
pop
shll
sub
sbb
jle
std
push
mov
repz
jmp
sub
sbb
xchg
jne
ss
cmp
fcomip
sbb
dec
ds
push
adc
push
push
inc
cmp
pop
jno
xor
shl
lcall
jge
int3
xchg
jecxz
aad
push
jb
jbe
add
inc
inc
shrl
fwait
enter
mov
call
or
xchg
or
lahf
into
fistps
push
mov
cmpsb
jbe
les
inc
mov
xchg
dec
push
out
sbb
sub
xchg
in
pop
mov
jae
cmp
mov
inc
aam
adc
xchg
int
in
stc
es
pop
cmc
fbld
cld
mov
cli
cld
icebp
ljmp
push
push
adc
in
and
out
xlat
push
fcoml
cmpsl
sub
mov
pop
lods
loop
out
stos
inc
ret
sbb
and
sbb
scas
lahf
imul
sbb
aad
int
push
push
leave
sbb
jge
test
and
xchg
mov
popf
icebp
inc
pop
mov
shll
addr16
mov
movsl
mov
cmc
push
ret
sub
scas
or
lods
push
jnp
mov
stos
subl
in
cmpsb
inc
and
mov
push
scas
sub
jg
jae
cmp
lods
pop
mov
add
inc
and
das
mov
lods
fucomip
jne
enter
sbb
xor
cmpsl
dec
jmp
ffreep
or
stos
mov
addr16
sub
add
xor
imul
mov
rol
andl
cmpsl
sub
lahf
cmp
pop
inc
incl
shrb
movsl
loopne
push
sub
ljmp
fiaddl
xor
test
mov
push
mov
mov
rolb
mov
mov
fdivl
into
divl
cmp
addps
aas
jle
outsb
or
xchg
mov
pop
cmpsb
sbb
es
ja
std
shl
fs
icebp
push
mov
and
jg
sahf
inc
mov
push
adc
xor
jp
pop
mov
xchg
or
outsb
or
mov
push
xlat
int
mov
adc
cmp
aas
jle
xchg
sbb
inc
mov
in
push
stos
push
fcmovu
sbb
imul
jecxz
pop
jne
jle
or
roll
adc
push
xchg
test
pop
flds
pop
mov
rorb
or
push
out
andl
fstpl
jge
bound
lds
mov
test
adc
mov
lock
popf
nop
push
pushf
jmp
andb
xchg
imul
pop
pop
mov
in
fadd
push
sti
aam
pop
out
mov
xor
sub
pop
loop
push
sarb
jle
loope
daa
add
push
stos
movsb
js
dec
jecxz
add
adc
mov
pop
mov
and
popf
insl
push
add
cmp
test
push
and
mov
or
dec
pop
pop
mov
cmpsb
pop
jae
hlt
pop
test
clc
cmpsl
aam
daa
push
cmp
dec
mov
mov
jne
int3
nop
mov
mov
adc
adc
outsb
dec
ret
or
and
js
jmp
sbb
mov
add
mov
and
mov
adc
or
clc
popa
in
sbbb
push
add
ffree
add
mov
imul
int3
xchg
push
scas
mov
test
dec
icebp
xor
in
pop
shll
jae
fstl
rcll
es
inc
adc
pop
aas
ds
test
lahf
sbb
jmp
sahf
mov
lret
lcall
cmp
push
mov
loopne
es
out
inc
addr16
testb
iret
inc
sub
xor
sahf
xor
aad
mov
add
push
cmpb
or
inc
mov
loope
loope
cs
adc
mov
out
add
push
insb
aam
gs
pop
add
sub
push
jp
fidivs
pop
mov
cmp
xchg
lahf
or
push
addr16
push
cld
xor
fsts
inc
cmpsb
mov
ss
mov
mov
outsl
mov
out
cmp
cli
movsl
dec
rcll
neg
repz
and
stos
inc
scas
or
popa
push
xchg
es
in
or
in
loope
imul
dec
xor
in
or
dec
sbbb
push
sbb
sub
shrb
iret
mov
jbe
and
mov
xchg
std
pushf
stos
jne
and
loop
insl
lea
iret
dec
dec
sahf
repnz
add
out
push
adc
and
push
jge
pop
pop
fstp
mov
dec
cmpsb
mov
sarb
in
dec
std
std
sti
not
and
jmp
dec
aad
fldenv
decb
cld
mov
pop
loope
cmp
or
and
mov
jne
int3
sbbl
mov
dec
mov
adc
in
dec
mov
jg
jne
jl
xor
mov
jo
inc
add
repnz
adc
and
cwtl
push
add
ja
jge
mov
lods
or
xor
jp
dec
xchg
scas
aam
mov
adc
test
xor
mov
ret
roll
or
sub
lcall
jo
adc
adc
push
adc
outsb
pop
mov
xchg
or
add
movsl
xchg
inc
and
scas
rol
jns
std
pop
sarl
test
mov
xchg
jle
jp
adc
std
xor
das
xchg
icebp
and
outsb
stos
dec
xchg
cmp
xchg
pop
pop
lret
push
and
adc
fcmovbe
dec
push
loopne
jge
push
fnstcw
push
or
sbbl
push
cmp
push
aad
popf
fcompl
inc
arpl
aam
cwtl
cmp
int3
imulb
dec
jnp
push
and
jne
sbb
add
mov
cmp
enter
pop
cmp
aam
mov
in
pusha
pop
xlat
adc
pop
out
inc
cmc
xchg
icebp
adc
popf
push
jle
loopne
test
or
jno
sahf
bound
movsb
xchg
push
lods
adc
imul
stc
jae
out
test
scas
or
xchg
sub
jmp
hlt
xchg
inc
add
int3
cwtl
insl
push
nop
jmp
dec
xchg
sub
fwait
jmp
roll
pop
jmp
nop
repz
hlt
cmpsl
push
fcomps
cmp
pop
sub
mov
xlat
mov
jl
cmovns
xor
out
fbld
hlt
sbb
adc
aad
pushf
dec
cmp
data16
mov
jmp
inc
jg
xchg
iret
stc
inc
cmpsl
add
and
std
stos
push
adc
push
sub
es
jbe
sub
add
mov
std
and
mov
xchg
xlat
test
mov
in
mov
scas
out
in
inc
clc
hlt
sbb
fnstenv
xchg
push
xchg
and
test
into
mov
push
or
loope
std
test
in
mov
inc
fstpt
mov
sub
sub
dec
fsts
cld
mov
pop
gs
xchg
repz
cwtl
mov
dec
pop
xor
add
and
cmp
and
xchg
cmp
lea
andb
les
sub
xchg
mov
jge
imul
cli
adc
std
cmc
sub
dec
and
or
push
adc
out
pop
xchg
sub
in
movsl
lret
push
loopne
call
push
push
xchg
pop
in
pop
or
lods
mov
orl
mull
xchg
and
lods
sub
mov
aaa
cld
jmp
in
enter
add
imul
adc
sbb
out
aad
je
pop
adc
out
stc
loop
xchg
push
mov
mov
mov
test
inc
mov
sbb
or
sbb
stos
ja
lock
push
int
adc
sarl
add
fidivrl
xor
cmp
call
xchg
imul
jbe
mov
push
jp
shrl
mov
mov
repnz
jle
ficoms
xlat
shr
in
mov
imul
dec
or
dec
xchg
cs
cld
sub
sub
sub
shll
mov
ficoml
jecxz
push
or
add
stos
push
test
in
add
or
xchg
pop
ljmp
add
pop
insl
sbb
das
mov
adcl
and
loopne
ficompl
fs
int
cmp
inc
stc
sbb
inc
xor
xchg
movsl
sbb
push
and
sahf
into
xchg
lahf
push
cld
aad
pusha
nop
or
sti
pop
lahf
pusha
mov
sub
and
adc
add
fwait
xchg
lds
or
sub
xchg
pop
pop
xchg
pop
jbe
test
mov
fisubrl
xor
and
inc
mov
add
adc
inc
pop
cmp
imul
pop
xor
push
in
fidivl
imul
out
fldl
ljmp
mov
or
push
pop
in
bnd
daa
sbb
fcmovu
push
mov
add
sbb
dec
or
in
scas
mov
stos
xlat
mov
jbe
jmp
adc
enter
out
fidivl
fs
stos
notb
push
push
adc
ss
jo
jp
adc
push
out
fistps
push
inc
mov
mov
dec
dec
ljmp
ds
push
stos
push
rol
mov
dec
xchg
sub
or
scas
sub
imul
pusha
adc
lcall
sarb
jnp
into
cmpl
cmc
xchg
hlt
add
or
enter
fistps
mov
add
adc
and
adc
shlb
stos
pop
adc
and
dec
rcll
push
repnz
fwait
push
lods
lea
lods
movsl
shl
andl
or
fildl
sub
mov
rol
pop
mov
pop
ror
cmc
xor
cld
mov
xlat
dec
push
jl
adc
mov
or
dec
sub
ja
ds
loopne
ds
or
cmpsb
pop
js
outsl
out
mov
mov
xor
data16
mov
push
push
dec
ret
ja
lds
jns
mov
adc
and
inc
or
sub
jbe
test
adc
decb
jne
negb
repz
cmp
push
pop
daa
sbb
push
orl
add
idivb
jp
adc
arpl
daa
sahf
dec
jp
test
or
imul
clc
mov
fstpl
push
sti
shrl
leave
jge
subl
dec
mov
pop
sub
jle
adc
add
lods
aam
mov
push
push
aad
push
sbb
aas
add
push
push
adc
dec
mov
lcall
sti
xchg
pop
imul
push
lods
sbb
daa
push
xchg
fidivrs
mul
adc
cltd
pushf
lods
fucomip
dec
fwait
notb
lea
sub
cmc
fucom
mov
pushl
mov
or
and
dec
push
pop
and
shr
dec
mov
in
iret
inc
scas
repz
sbb
ljmp
mov
pop
enter
pop
es
or
insl
jae
sub
dec
xchg
push
inc
mov
imul
push
gs
lods
popf
insb
fdivrl
shll
and
and
push
test
outsl
fsubl
xchg
gs
je
cmp
fstpt
nop
imul
shlb
adc
lahf
fstpl
add
call
cmp
fdiv
push
xchg
rclb
mov
inc
cmpsl
jo
scas
pop
dec
xchg
pop
loope
pop
pushf
push
jp
popl
rclb
xor
aad
push
repz
popa
std
dec
push
push
adc
jle
pop
xor
jecxz
cs
pop
out
and
int3
repnz
pop
pop
loop
test
loop
cmp
fwait
js
loop
fidivs
add
cmpsb
into
es
inc
mov
popf
aas
or
xchg
in
push
inc
push
imul
jg
pop
cmpsb
scas
lods
popf
push
in
mov
dec
rorb
or
popa
mov
insl
cwtl
ja
adc
cli
cmpsb
daa
push
pop
or
sar
jno
adc
ret
mov
xchg
adc
sub
push
scas
das
or
imul
lea
and
jns
pop
push
push
adc
or
xchg
rorl
andl
jmp
aaa
rolb
ja
sub
mov
and
lods
mov
adc
push
sub
jmp
or
sbbb
push
imul
stos
sub
push
lods
mov
jmp
insl
mov
pop
and
movsl
sbb
pop
jmp
bound
mov
xchg
inc
js
adc
lds
pop
and
push
arpl
pop
mov
cmp
ss
insb
lcall
loop
repnz
push
mov
pushf
push
pop
xor
push
repz
mull
jecxz
fdivl
bound
and
scas
push
outsb
int3
enter
xor
stc
mov
mov
add
cwtl
outsb
push
push
adc
dec
shrb
lock
cmp
into
clc
test
insl
sub
int
mov
loopne
out
sub
jl
daa
call
mov
add
frstor
clc
cmp
hlt
pop
ret
test
dec
xor
inc
pusha
je
jno
fwait
jb
dec
rcl
adc
fidivrs
sahf
mov
jl
shlb
aas
pop
jno
lret
ds
out
xchg
pop
sbb
xor
stos
jecxz
out
jl
push
xor
mov
std
jbe
and
ljmp
cmpl
int3
test
mov
ja
gs
sarl
js
push
mov
rclb
popf
cs
mov
fimuls
pop
out
and
out
xor
sub
xlat
and
lcall
enter
jno
dec
mov
add
sarb
cmp
jl
int3
ret
aad
inc
stos
inc
mov
inc
outsl
aaa
inc
pop
std
sbb
cmc
jb
push
test
push
pop
lods
sub
add
sub
fcompl
gs
ss
mov
jns
sbb
pop
xchg
xchg
mov
out
push
and
mov
xchg
and
shl
lret
pop
sbb
jb
sub
jecxz
arpl
cmp
xchg
mov
mov
push
xlat
push
push
mov
outsl
movsl
leave
shl
mov
je
ljmp
sti
push
sbb
cli
mov
jb
in
outsl
push
mov
popa
jne
neg
sti
aas
fists
and
xchg
in
or
ss
pop
mov
leave
jecxz
mov
inc
imul
inc
add
fstpl
outsl
adc
and
ret
xchg
push
test
jl
mov
repz
jge
iret
shrb
lods
push
and
cmp
adc
pop
rorb
mov
xchg
add
in
push
pop
push
mov
int
test
and
out
push
or
cwtl
imul
into
ja
cmp
cmc
daa
adc
push
arpl
push
loop
cmp
dec
sub
adcb
push
mov
scas
frstor
and
mov
clc
xchg
pop
mov
clc
insb
dec
icebp
adc
sbb
adc
adc
cmp
cmp
sub
orl
ja
stc
rcrl
or
pop
cltd
aam
jmp
adc
dec
and
dec
jl
cmc
push
cmpsl
dec
in
mov
rcl
or
pop
mov
rorb
and
popa
aas
hlt
push
sti
jg
int
inc
cs
cmp
lret
mov
pop
int3
cmp
ja
sbbb
pop
push
xor
idivb
in
arpl
out
mov
aad
and
xorb
pop
xor
lcall
jne
xlat
imul
rol
xor
cli
xchg
adc
cld
mov
mov
repnz
adc
fwait
movsb
mov
xor
dec
in
mov
sbb
jno
testb
js
jle
movsl
dec
out
push
fsubrs
cwtl
imul
into
pop
jp
mov
negb
rcl
jmp
ja
pop
or
dec
push
movsl
in
or
push
push
pop
insb
mov
rcl
xchg
outsb
push
push
adc
adc
add
sub
adc
inc
jmp
jge
out
in
mov
movsl
in
mov
lea
cltd
push
mov
pop
xor
and
push
mov
gs
sbb
sbb
mov
mov
jno
cli
adc
mov
mov
push
cmpsl
inc
push
in
cmp
and
test
dec
inc
inc
lret
dec
cmpb
and
mov
fs
sbbl
push
adc
add
push
adc
call
pop
mov
inc
iret
cli
movsb
cli
mov
or
imul
lock
fs
adc
pop
fldl
int3
popl
xchg
nop
jmp
test
fistpll
daa
sbb
fldl
ja
mov
cmp
in
jnp
jbe
xor
pop
jae
mov
add
mov
add
xor
mov
test
cmc
scas
pop
xchg
fldt
mov
jne
push
out
dec
cmc
push
pop
scas
xchg
lods
imul
aam
pop
scas
inc
cmpsl
ds
lods
ret
jno
repz
push
inc
das
push
mov
push
adc
iret
imul
ja
push
add
sub
xor
jnp
mov
sub
mov
shr
push
adc
popf
fmulp
jmp
or
add
jb
out
cltd
jg
out
fmull
inc
fildl
in
lahf
lahf
sub
sub
in
jmp
popa
sbb
pop
and
loop
sbb
js
pop
aaa
jmp
jecxz
or
push
push
adc
or
mov
adc
cmp
jmp
jno
mov
mov
lea
sub
cmpl
push
mov
nop
jo
aad
fisubs
cmp
mov
repz
mov
stc
adc
push
inc
out
fstpt
das
out
and
pop
mov
das
xchg
cmp
mov
mov
xchg
test
pop
dec
mov
pop
mov
stc
rcl
adc
mov
adc
mov
lahf
imul
lods
mov
inc
fcmovnbe
imulb
pop
scas
fnstsw
scas
mov
pushf
into
sub
pop
jmp
lods
mov
into
push
test
rcrb
inc
mov
jb
mov
push
adc
mov
insl
cmp
les
inc
add
pop
out
and
lods
fsubr
shlb
cmp
in
sub
fidivs
xchg
adc
out
mov
pop
icebp
mov
dec
fimull
jnp
cs
adc
or
aad
dec
xchg
push
xchg
jle
aam
and
push
xor
scas
xlat
addl
and
cmpsl
dec
jecxz
test
mov
cmp
push
lds
adc
mov
pop
mov
punpcklbw
or
cmp
out
pop
mov
pop
cmpsl
out
in
mov
insb
add
jnp
ljmp
scas
mov
repz
sub
icebp
mov
cmp
or
mov
cltd
adc
aam
xor
sub
jo
cltd
or
jno
cltd
cli
sbb
mov
das
mov
mov
jae
xchg
sub
cwtl
jmp
je
stc
and
loop
fidivrs
and
push
lahf
add
xlat
lock
xchg
adc
sti
adcb
push
lahf
cmpsl
sbb
movsb
stos
xchg
hlt
adc
pop
sbb
cmp
xor
inc
adc
mov
rclb
jbe
outsb
stos
movsl
cmp
push
imul
icebp
push
dec
inc
ret
fwait
das
pop
mov
push
inc
and
inc
mov
out
push
mov
pop
ffreep
cmp
out
insl
popf
sub
push
or
stos
or
adc
cld
push
push
adc
pop
test
push
pop
pushf
rol
out
fcmovnu
mov
pop
loope
inc
rcll
xor
das
pop
xchg
xor
jl
dec
popf
and
mov
and
pop
or
fisttpl
shll
shlb
inc
jecxz
adc
or
mov
xor
xchg
mov
je
jmpw
into
rolb
js
test
add
out
jle
xchg
mov
jg
add
out
fists
add
dec
and
pop
xor
adc
in
dec
jl
jno
xchg
xor
sub
mov
aas
outsb
inc
js
ret
sub
mov
aaa
adc
sub
push
sahf
fs
cltd
push
or
mov
imul
movsb
sti
add
xor
pop
jecxz
test
and
jns
filds
repz
or
sub
std
sbbl
cmpsb
and
push
out
lret
xchg
int
inc
inc
cmpb
mov
mov
push
cmp
test
xchg
sbb
mov
push
push
movsl
rep
jle
push
cmp
insl
pop
xchg
dec
adcb
cltd
jp
scas
cmp
lret
cmpsb
rcrl
xor
stos
dec
mov
int
mov
mov
enter
sarl
ss
sub
or
push
sub
movsb
out
ficomps
movsb
data16
repnz
loop
mov
dec
push
sub
adc
jae
mov
in
dec
ret
add
pop
dec
out
sbbl
stos
and
js
mov
int
add
subb
push
adc
es
xchg
or
sbb
push
loope
aas
iret
cwtl
pop
int3
inc
ret
jl
mov
pop
push
jmp
adc
mov
loopne
xor
or
clc
sub
pop
mov
jg
jecxz
sbb
lods
cmpsl
lds
sahf
fldenv
inc
add
pop
out
mov
fisubrl
jmp
movsl
stos
les
imul
lcall
test
fsubr
push
adc
fwait
rcl
lods
roll
xor
pop
jo
inc
fidivrl
dec
xchg
sbb
ljmp
cltd
arpl
xchg
pop
mov
adc
add
pop
std
mov
ljmp
movsl
cld
push
out
lahf
and
imul
lcall
adc
xchg
xchg
ficoms
mov
ficompl
shlb
pop
les
push
push
mulb
mov
icebp
sub
enter
pop
pop
fs
lods
pop
pop
adc
std
xchg
sar
or
out
inc
push
mov
lock
xchg
xchg
jbe
cmp
ljmp
mov
xor
ret
inc
push
pop
stc
mov
shrl
lahf
or
sub
jbe
inc
xchg
cs
mov
in
dec
push
push
adc
mov
mov
cmp
pusha
popa
lock
jae
dec
jns
dec
ss
scas
pop
int3
into
out
lds
daa
adc
jg
loope
add
gs
shlb
and
inc
in
mov
decl
cmp
sti
loope
shll
adc
fisubl
inc
xchg
jmp
mov
mov
rcll
std
and
in
clc
cmpsl
insl
and
js
cmp
jo
jp
clc
mov
repz
cld
ret
dec
out
mov
stc
scas
insb
sti
fsubrs
pop
mov
inc
xchg
sub
jl
inc
setnp
inc
repz
mov
push
xor
mov
jl
call
sub
push
scas
push
mov
stos
cmpsl
dec
sbb
cs
or
dec
lahf
div
cld
xchg
outsl
inc
sbb
and
dec
add
pop
lret
and
movsl
jne
rol
inc
xchg
andb
les
inc
xchg
inc
lret
dec
scas
popa
mov
sub
fwait
mov
imul
mov
inc
jg
jg
sub
jecxz
lea
rcll
testl
mov
repz
add
je
lods
mov
sbb
fs
jg
or
sbb
rcll
pop
inc
cld
in
movb
push
xchg
push
mov
or
cmp
icebp
adcl
pop
inc
repz
sbb
jno
lock
xchg
push
mov
fs
leave
dec
cmp
mov
adc
les
mov
dec
add
pusha
mov
fiadds
int
xchg
stc
inc
cmp
das
imul
mov
adc
mov
adc
iret
icebp
sub
rcll
incb
jns
lcall
jle
jne
mov
and
push
adc
aaa
int
adc
cli
jae
sti
xor
test
xchg
addl
loope
pop
sub
push
dec
and
je
dec
ss
mov
xchg
inc
jmp
mov
iret
add
lods
push
mov
gs
cli
mov
rcl
call
xchg
or
sbb
lahf
xchg
insb
repz
cmp
imul
pop
scas
jg
in
sbb
or
xor
cmc
lret
mov
xchg
inc
stos
je
mov
loop
mov
out
xchg
insl
jno
ds
setl
xchg
mov
clc
repz
mov
jge
inc
jp
sub
addl
scas
add
inc
jl
test
dec
or
fcmovb
push
stos
bound
push
dec
test
xchg
cmpsb
das
mov
xor
mov
jmp
or
arpl
int
rcl
mov
push
stos
inc
pop
inc
mov
ds
in
pop
sub
or
or
and
sub
shll
or
push
stos
clc
mov
je
in
adc
movsl
dec
cmp
jmp
mov
cmp
xchg
cmpsb
sbb
arpl
jmp
cmpsl
cmp
repnz
test
push
jmp
push
adc
pop
flds
sarl
pop
rcl
dec
das
jg
push
adc
scas
xor
dec
dec
fadds
and
mov
mov
test
ret
mov
xchg
adc
cld
add
fs
push
adc
sti
sahf
cmc
pushf
sarl
leave
fwait
pusha
cmpsl
jecxz
or
stos
or
into
out
or
test
stos
sub
mov
mov
jne
cmp
test
cld
call
adc
jmp
iret
loope
into
mov
mov
push
inc
mov
pop
into
loop
add
test
enter
rolb
dec
adc
sub
adc
jae
out
or
loopne
mov
xor
mov
mov
adc
xchg
lods
push
sbb
sbb
lods
or
sub
mov
dec
adc
sub
nop
push
scas
pop
into
loop
sarl
js
jns
push
push
adc
cmpsb
fstl
andl
fucomp
pushf
in
mov
pop
aas
daa
sbb
lea
clc
and
outsb
shll
mov
pop
adc
add
and
push
adc
test
sub
dec
mov
sub
xor
pop
pop
pop
stos
push
fsubp
pop
push
push
xor
cmp
aas
inc
addr16
test
push
xor
push
inc
xor
lock
adc
hlt
loop
inc
sahf
out
inc
rcrb
inc
les
inc
pushf
imul
repnz
sbb
sub
jnp
ret
mov
insb
enter
sub
push
mov
sub
xchg
adc
insl
inc
jp
pop
cmp
mov
adc
out
insl
hlt
data16
jnp
cmpsb
addb
push
cmp
imul
pop
orl
pop
add
inc
hlt
rorl
dec
mov
cmp
les
jg
cmp
pop
and
bound
imul
add
sar
sub
data16
sahf
lret
bound
cli
mov
mov
dec
push
das
xchg
add
push
push
cmp
pop
xor
sub
push
inc
lds
shll
call
pop
loopne
arpl
lret
shll
cmp
lcall
in
out
mov
or
insl
inc
sub
popa
fdivs
mov
lret
sub
popf
fistps
xor
std
in
xor
hlt
push
scas
lock
mov
es
rcr
mov
jecxz
sub
shrb
into
add
push
stos
and
sbb
sub
push
jb
cmp
das
mov
mov
ljmp
mov
into
ja
fadds
outsl
sub
lods
ss
adc
sbb
adc
sbb
inc
rcl
push
hlt
stos
mov
jne
cmpsb
cs
nop
js
mov
call
push
or
adc
cmp
lock
pop
sbb
cmp
imul
jns
insl
es
jmp
push
hlt
sbb
mov
sbb
push
lods
pop
cmp
imulb
jbe
dec
and
mov
vhaddpd
mov
or
scas
mov
in
mov
lcall
mov
pop
bound
add
xor
push
inc
sbb
mov
mov
stos
mov
mov
pop
mov
mov
sbb
inc
add
fidivrl
lahf
cmpsl
add
arpl
mov
movsl
ss
ret
jl
xchg
rorl
mov
cld
scas
sbb
pop
xor
shrb
mov
dec
jecxz
xchg
mov
loope
in
mov
sub
push
push
mov
inc
lds
cs
pop
sbb
add
xor
jns
or
pop
scas
int3
cmc
push
movsb
add
orb
pop
mov
mov
std
jno
in
push
jg
mov
outsb
mov
or
cmp
lods
shl
push
fnstcw
hlt
mov
insw
cld
scas
jge
push
cmp
aas
jle
inc
add
xchg
jmp
and
out
outsb
adc
inc
dec
out
sub
cmp
daa
xchg
pop
ss
add
lahf
lods
cmp
addr16
data16
mov
lds
xchg
sub
pushf
mov
les
addr16
jnp
out
bound
dec
inc
lds
xchg
sub
pushf
mov
in
sbb
test
out
test
mov
movsl
loop
movsl
rol
imul
jecxz
mov
mov
pop
dec
aas
inc
pop
fisubrs
jecxz
pop
fnstenv
decl
cwtl
sub
mov
mov
dec
je
jne
aam
or
pushf
sub
xchg
loopne
xchg
sbb
mov
and
sub
xchg
mov
in
mov
mov
cmpsb
add
jg
fisubrs
push
jmp
mov
inc
jecxz
cmp
push
mov
lahf
add
mov
sbb
jp
add
xchg
dec
push
cli
pop
jmp
push
and
scas
sub
test
in
aad
mov
movb
xchg
ds
inc
mov
nop
and
faddl
mov
push
aad
testb
push
xor
imul
adc
inc
aad
pop
js
insb
push
call
pop
adc
jl
bound
push
sbb
mov
lea
stc
push
pop
mov
xor
mov
stc
push
xchg
sti
mov
jb
sub
mov
outsl
xchg
and
icebp
ret
fwait
push
adc
add
jo
adc
mov
bound
jge
outsb
dec
mov
cmp
enter
in
leave
add
jo
adc
jo
push
adc
mov
jb
fcompl
int
dec
push
jnp
dec
test
inc
mov
xor
gs
outsl
xor
adc
lret
xor
int3
sbb
jle
fmuls
xchg
or
shlb
cmp
out
mulb
leave
pop
sub
cmp
js
ljmp
pop
adc
pop
inc
mov
insb
and
sub
xor
ja
pop
sbb
sub
jnp
fidivl
pop
mov
and
fbld
fbld
leave
bound
push
mov
and
or
leave
rclb
mov
call
dec
dec
dec
sub
je
aas
cmpl
aad
and
into
jnp
sub
shlb
iret
xorb
pop
and
jmp
daa
add
add
ljmp
adc
mov
push
mov
add
push
xlat
pop
test
daa
decb
shrb
cmpsl
mov
inc
das
add
js
mov
lock
or
adc
adc
jo
pop
or
pop
pop
push
xlat
inc
mov
add
adc
mov
adc
inc
pop
in
pop
and
dec
lahf
aas
imul
mov
ljmp
pop
or
pop
cwtl
xor
clc
jecxz
insl
adc
sbb
ljmp
mov
cmpsl
fistps
xchg
sub
xor
mov
in
pop
or
insb
adc
lret
jbe
shlb
mov
xlat
and
aam
aas
jle
mov
jmp
pop
or
adc
adc
inc
loope
mov
add
std
mov
in
jne
pop
das
call
pop
sbb
popf
pusha
scas
shl
fldt
repnz
loope
mov
xchg
out
mov
push
fstpl
clc
and
shlb
fstpl
sahf
aas
jle
inc
adc
push
push
adc
sub
aam
bnd
ja
jae
mov
in
stos
adc
popfw
test
stos
push
ret
jo
pop
or
cmp
sub
add
adc
aam
mov
mov
or
scas
movsl
xchg
push
inc
movsl
sbb
daa
pop
mov
ret
or
add
sub
cld
jno
daa
adc
icebp
mov
jbe
lods
fnsave
int3
add
and
or
sub
in
pop
in
dec
and
jecxz
jge
sub
xchg
pop
or
mov
out
xor
jo
adc
mov
mov
xor
pop
cvtpi2ps
dec
lcall
and
call
mov
fsubs
or
subb
inc
pop
ret
sub
adc
pop
push
push
in
mov
and
push
adc
in
mov
jns
xchg
mov
clc
and
and
out
ret
jns
pop
dec
rcrl
dec
lods
jmp
out
sbb
rorb
push
aaa
add
data16
mov
in
sbb
mov
inc
mov
nop
xchg
or
push
adc
add
sbb
aad
decb
loop
test
push
add
sbb
cmp
andb
cmc
jmp
shll
jb
adc
xchg
mov
sbb
mov
divb
lock
cmc
inc
adc
and
sbb
or
insl
xlat
cld
clc
pop
sbb
movsl
xchg
iret
sti
fiaddl
adc
imul
movsl
aam
gs
pop
movsl
iret
mov
jp
mov
cmp
sub
fs
gs
mov
adc
adc
xor
pop
mov
sub
lret
xchg
mov
jmp
adc
pop
cmp
push
xchg
cmp
pmaxsw
jno
xlat
push
adc
pop
sbb
cmp
push
jne
jp
int
push
push
adc
clc
xchg
or
jo
dec
push
sub
jne
push
xor
sbb
pop
adc
xchg
add
mov
mov
xlat
in
iret
outsb
jle
xor
imul
fisubrs
fsubs
pop
das
sbb
push
mov
loop
mov
cmp
outsl
loopne
shrl
lret
shrl
xor
dec
ret
dec
int
test
mov
sti
test
int
dec
pop
mov
xor
sbb
jp
mov
add
adc
int
jo
adc
dec
ret
arpl
inc
aad
or
fnsave
and
lahf
aad
jo
adc
scas
btr
pushf
pop
ja
sub
jo
scas
popa
xchg
cld
shlb
jmp
movsl
push
vmovupd
jecxz
push
inc
add
flds
xor
dec
sbb
or
lcall
addl
mov
pop
fcmovu
popa
lahf
popf
jecxz
jp
sahf
test
jle
jo
sbb
loope
push
xor
and
cmpsb
adc
cmp
sbb
jne
add
mov
aad
add
mov
push
jle
push
pop
repnz
dec
push
sub
xchg
add
dec
lods
jo
push
jns
and
inc
les
pop
rorl
rorl
xchg
mov
jns
and
scas
es
adc
lcall
mov
or
adc
in
adc
push
clc
cmp
lret
in
ficomps
sbb
cld
push
outsl
adc
repnz
cs
xchg
sub
pop
dec
cs
rorl
and
stos
dec
mov
bound
lea
pop
xchg
xor
andb
xchg
movsl
test
jge
sub
add
inc
loop
lea
test
cmp
or
pop
inc
pop
and
and
je
in
das
mov
mov
out
and
xchg
into
outsl
push
mull
mov
push
rcrb
in
stos
and
cmpsb
ret
add
xchg
sub
push
or
xchg
stos
mov
inc
addl
enter
cmpsl
adc
inc
xchg
stos
or
das
shl
mov
ud0
ret
xor
push
outsl
or
rclb
sub
loopne
jnp
leave
or
or
inc
inc
vsubsd
jg
fbld
les
out
inc
adc
xor
adc
hlt
inc
mov
sub
jge
stos
scas
call
xchg
and
fs
inc
mov
lods
mov
and
dec
andb
and
mov
sbb
add
pop
sbb
or
lret
ja
cld
add
in
and
ja
pop
mov
add
shrl
mull
dec
aad
or
mov
scas
repz
jle
fidivrs
fcmovbe
push
xchg
lret
enter
movsl
int
loope
add
fwait
das
cmp
xor
mov
lcall
cwtl
mov
push
or
and
push
push
scas
dec
xor
mov
cltd
or
pop
ja
push
dec
popa
inc
in
mov
inc
popf
jnp
xchg
inc
dec
or
mov
jp
inc
cmpsb
mov
add
and
mov
adc
xor
xor
xchg
cmc
ret
jp
and
lods
adc
in
push
inc
pushf
mov
sbb
cmp
pop
mov
sbbb
lcall
scas
in
pop
cli
jno
ja
into
aad
xchg
sub
adc
and
push
loop
pop
cmp
in
and
xchg
jge
aad
pop
xchg
sub
sbb
pusha
mov
frstor
ja
mov
daa
sbb
push
mov
cmp
mov
jle
insl
cmp
aaa
push
dec
data16
shlb
mov
push
mov
mov
jb
jge
push
mov
adc
repz
andb
cmpsl
xchg
fisubrl
sti
ja
es
stos
xor
and
adc
loop
lret
test
popa
jg
sti
adc
mov
push
adc
and
adc
inc
cmpsb
stos
xchg
int3
or
subb
cmp
cmp
shll
sub
loope
shrb
mov
cmp
jmp
in
mov
arpl
aam
neg
fs
lahf
and
imul
lcall
idivb
fldcw
mov
mov
push
and
lahf
push
scas
jl
lods
nop
mov
mov
rcr
push
and
or
xor
and
rcr
jne
mov
rolb
rcl
adc
push
scas
push
scas
sub
scas
sbb
pop
out
mov
clc
in
arpl
push
mov
out
mov
adc
or
cmpsl
dec
in
hlt
add
mov
int3
push
addr16
mov
mov
cmp
in
sbb
mov
subb
sbb
aaa
inc
mov
pop
in
inc
sbb
mov
cmp
ret
mov
pop
lret
push
and
sahf
jns
and
sbb
pop
into
jae
shlb
cmpsl
cmp
loop
pop
or
jle
popl
lods
add
sub
push
sub
scas
adc
ds
inc
push
mov
int
push
mov
insl
push
test
mov
loopne
repz
jb
rcl
call
ret
push
sbb
jle
addr16
pop
push
xor
mov
mov
fwait
je
lods
mov
and
les
and
cmc
xor
or
push
xor
in
sub
scas
push
mov
or
inc
test
dec
pop
add
cmp
mov
arpl
lahf
cmp
fildll
mov
icebp
mov
cmpsb
add
mov
andl
inc
sahf
and
dec
es
cmc
jecxz
out
cmp
cmove
test
mov
ror
cmp
popf
ret
icebp
lahf
aaa
std
popf
sub
cli
cmc
pop
xchg
pop
in
sub
jle
or
outsb
aas
adc
adc
mov
inc
in
nop
mov
or
in
rcll
in
add
fsubrl
psubsb
cmp
popf
pop
psubusw
stc
push
dec
fnstenv
mul
or
jns
fld
in
clc
pop
xor
incb
adc
sub
cmpsb
adc
pop
flds
filds
sub
in
enter
aas
inc
cmp
dec
lock
outsl
sbb
dec
iret
and
in
sbb
mov
pop
leave
jo
push
push
jge
and
inc
mov
pop
push
inc
mov
cmpb
in
sbb
dec
ds
sbb
outsb
sbb
inc
sbb
lahf
cmp
inc
jecxz
hlt
sub
nop
and
aas
adc
xchg
fldcw
adc
fnsave
push
xchg
scas
lods
mov
and
test
int
lock
sub
dec
nop
pop
jecxz
push
pop
roll
clc
addl
pop
mov
movsl
sbb
lret
ffree
cli
divb
movsb
icebp
push
stc
and
push
pop
sub
jmp
jg
cwtl
pop
lods
xchg
fidivs
ljmp
repnz
movsl
push
mov
pop
push
sub
mov
sbb
mov
inc
lods
shll
bound
adc
popf
jp
fwait
adc
imulb
les
pop
mov
push
lods
inc
push
pop
out
cli
jle
lret
shrl
ret
data16
xor
popa
pop
cmpsb
fdivl
inc
mov
sbb
lods
cs
ds
adc
push
lods
cmc
dec
adc
aad
xchg
sub
mov
rcrb
mov
sbb
dec
inc
add
daa
fidivs
lods
cmpsb
dec
lahf
inc
inc
pop
inc
loopne
fdivs
outsb
cmp
push
mov
pop
and
cmp
cmp
adcb
adc
mov
push
add
nop
cmpsb
lods
mov
aad
xchg
adc
test
sbb
pop
push
outsb
sbb
pop
cltd
or
repnz
stos
push
sub
pop
jl
sti
subb
jle
mov
stos
pop
sub
pop
mov
loop
pop
test
pop
xchg
aas
jle
inc
or
imul
stos
and
adc
xlat
sub
push
push
imul
push
jbe
cltd
push
ljmp
scas
pop
dec
xor
fs
in
movsl
dec
lahf
xchg
cmp
pusha
out
mov
scas
sub
sub
push
sub
fwait
lahf
pusha
mov
sub
mov
std
sti
sbbb
rcr
cld
gs
adc
lods
stc
loopne
movsl
ds
dec
out
in
push
fidivl
out
pop
ljmp
xlat
sub
mov
sub
or
sbbb
sbb
jge
daa
aam
aad
add
fs
mov
cmp
ds
push
mov
lea
imul
xor
push
subb
lods
fsub
test
dec
loopne
inc
shl
gs
rolb
inc
jmp
push
push
sub
movsl
pusha
cltd
inc
fsubp
push
sub
jp
and
movsb
jns
ret
or
enter
test
sub
and
js
jbe
pop
in
movsl
pop
lods
xor
mov
ja
push
das
sar
cwtl
pop
imul
add
push
jecxz
xor
add
imulb
hlt
cmpsb
iret
sub
pop
or
mov
in
sub
cs
jecxz
icebp
aad
rcr
push
lahf
add
push
or
sbb
xchg
sub
xchg
ljmp
jge
std
pop
mov
add
subb
xchg
pop
mov
popa
adc
daa
xor
xchg
mov
loop
mov
test
std
add
xchg
sbb
cmp
in
call
mov
xor
clc
push
mov
xchg
out
lock
push
or
fisttpl
stc
mov
stc
push
movsl
cld
jb
push
sti
mov
fwait
cmp
outsb
out
aas
repz
dec
dec
xor
in
loop
lahf
push
popa
inc
jmp
sahf
mov
lcall
cmp
stos
cmp
adc
cmp
pop
push
jns
fwait
xor
sub
sti
int3
jnp
xchg
ljmp
push
cmp
test
jge
outsl
add
cli
icebp
insl
in
fistps
jl
pop
adc
cwtl
add
sbb
add
icebp
cwtl
add
adc
add
lret
lcall
jno
add
int
add
int
add
int
add
int
add
outsl
cltd
add
push
cltd
add
pop
cltd
add
fs
add
add
cwtl
add
int
add
sbbl
adc
cltd
add
or
add
sub
lcall
jo
add
jbe
add
scas
popf
add
rcrb
adc
or
or
mov
xor
cmc
enter
test
leave
into
hlt
lcall
test
je
test
push
cmp
leave
and
popf
push
sarb
shll
ret
sahf
jmp
mov
jle
outsl
cmp
xchg
cmp
push
cmpsl
cmp
stc
sbb
pop
shlb
sbb
push
scas
pop
rorb
lahf
mov
and
mov
inc
inc
push
in
mov
fidivl
mov
inc
sbb
pop
rorb
pushl
cmp
notb
push
ss
aad
stos
fstpl
mov
out
mov
pop
je
imul
jg
push
scas
and
and
and
enter
add
or
and
lock
inc
lods
loop
shlb
sbb
mov
loope
sub
aaa
xor
test
fbld
mov
das
inc
loopne
movsb
aad
fs
pop
ljmp
rcl
hlt
jno
lods
scas
mov
push
int
add
mov
lds
lret
or
fcmove
mov
lea
pop
sub
xchg
jmp
dec
rorb
scas
cmpsl
jge
xor
loop
jae
stos
push
sub
lock
or
and
imul
push
mov
sahf
jmp
and
inc
dec
inc
jge
lods
hlt
decb
imul
pop
mov
addr16
jp
mov
inc
lahf
aas
jmp
pop
fwait
pusha
mov
xchg
stos
inc
mov
adc
lods
and
pop
jmp
cltd
mov
loope
shll
imul
mov
arpl
cld
jo
cwtl
ljmp
adc
jmp
ret
dec
sub
jb
sub
jb
dec
sub
lods
xchg
scas
inc
mov
mov
js
pop
in
cmpsl
cmp
rol
push
ds
dec
movl
mov
jmp
cli
and
das
push
lods
push
pop
xor
lds
rclb
inc
push
aad
sbb
push
dec
or
outsb
mov
stos
push
mov
add
lahf
ss
push
das
push
mov
adc
insl
push
push
mov
push
lahf
add
outsl
mov
sub
in
push
test
sub
lahf
cmp
or
sub
jbe
aad
lea
lcall
leave
sbb
iret
mov
clc
aad
jl
ret
ja
and
or
js
int3
test
pop
push
pop
ss
or
sbbl
test
mov
and
sti
int
sbb
dec
cs
sbb
or
xchg
dec
std
lret
jnp
adc
jnp
dec
cli
stos
iretw
addr16
mov
in
sbb
mov
test
xor
inc
aaa
filds
xchg
jbe
movsl
xor
ljmp
das
xchg
push
and
pop
mov
sub
xor
inc
mov
ret
aaa
inc
popf
test
hlt
outsl
jp
push
sbb
lea
push
lods
mov
pop
xor
in
mov
adc
mov
insb
ud0
jecxz
icebp
divl
add
cmp
sbb
je
add
fstl
sahf
inc
daa
sub
add
xchg
pop
jge
gs
push
lods
push
pop
push
push
in
and
test
arpl
mov
mov
cmpsl
adc
mov
adc
push
mov
push
mov
lock
or
imul
mov
sbb
mov
movsb
xor
push
dec
inc
adc
lds
cltd
xchg
nop
stos
sbb
xchg
out
and
fsubr
popf
cmp
test
jge
jbe
gs
fdivrs
push
adc
push
int3
mov
cmpsb
fiaddl
gs
sbb
arpl
push
pop
push
dec
js
lahf
or
cltd
imul
sub
out
push
and
add
sti
loopne
and
xchg
jge
in
mov
mov
cmp
std
outsl
mov
pushl
sti
mov
lods
push
arpl
cmp
test
repnz
inc
jge
dec
xchg
pop
loop
cmp
les
adc
scas
test
test
and
push
sub
jecxz
mov
sub
jo
or
push
pop
cli
add
push
popa
push
and
popf
insl
pop
fistpll
pop
icebp
sti
notb
xchg
inc
pushf
push
stos
push
push
and
into
inc
jmp
sub
cmp
mov
mov
ljmp
inc
add
xchg
sub
mov
std
jno
cltd
out
mov
pop
xchg
sub
pop
and
add
insb
sub
add
stc
xchg
xchg
movsl
xchg
push
push
sbb
push
shrl
aaa
adc
pop
xchg
sub
inc
jmp
or
in
mov
fidivl
out
pop
out
test
or
mov
sub
cli
xor
div
in
mov
js
les
lcall
in
daa
mov
push
push
mov
xor
or
addr16
pop
jge
xchg
sub
sub
sub
cltd
adc
cli
fdivrl
lock
lods
das
or
xchg
mov
dec
clc
pop
in
jae
mov
xlat
stos
push
test
adc
push
dec
xor
push
or
inc
jo
jmp
mov
push
dec
or
jmp
fnsave
fildll
mov
lds
sbb
mov
inc
stos
pop
lds
sub
xor
je
mov
insb
and
fwait
and
jg
pop
pop
mov
or
les
push
lods
inc
sahf
push
popa
enter
decb
xchg
leave
fsubs
mov
mov
aad
mov
and
subl
lcall
divl
sbb
es
icebp
sbb
rcll
jae,pn
ret
in
loopne
or
push
scas
push
jg
aad
mov
or
scas
test
rclb
call
jl
jne
hlt
push
mov
pop
addr16
jnp
mov
jl
xor
enter
mov
dec
sbb
mov
imull
xlat
and
adc
cmp
repz
xchg
aas
in
mov
ljmp
pminsw
mov
int3
outsl
mov
sub
add
and
sti
inc
testb
xchg
sbb
mov
add
ret
aas
inc
and
loop
ja
jno
movsb
push
mov
or
adcl
icebp
sub
lcall
inc
push
insb
sbb
mov
and
js
in
push
add
cmpsb
fisubrs
sbb
icebp
pop
mov
mov
movsb
ds
ljmp
lock
sti
fistpl
push
sahf
adc
daa
lea
loopne
cmpsb
mov
ja
sbb
lods
dec
out
xor
sub
insl
adc
dec
fs
inc
out
mov
or
sbb
out
mov
mov
mov
or
xchg
addr16
ret
mov
jo
dec
scas
aad
adc
xchg
bound
jne
js
xor
vpand
inc
out
xor
mov
push
sub
lods
jle
xor
call
nop
aas
jle
fmull
adc
stos
and
sti
sbbb
outsl
mov
jmp
lea
iret
adc
inc
xor
sub
inc
jge
lock
rorl
add
cmp
pusha
xor
mov
maskmovq
testl
jle
sti
outsl
ds
dec
lahf
dec
stc
push
out
mov
loopne
push
cltd
adc
pop
pop
xor
mov
mov
xchg
aas
push
scas
movsb
out
push
push
push
jge
jmp
mov
mov
mov
pop
in
sti
negb
call
push
mov
mov
fiaddl
xor
mov
sbb
lahf
aas
or
adc
pusha
pop
push
scas
add
push
xlat
enter
scas
jl
sarl
jb
cmpsl
dec
jmp
add
or
jge
hlt
jno
insb
inc
stos
push
fisubrl
adc
mov
sub
jno
xchg
sbb
aas
cmpsl
sahf
pop
xchg
test
pop
mov
ja
ds
dec
lahf
jo
rolb
inc
scas
cmpsl
adc
jns
mov
cld
fistps
in
add
shl
jg
push
sub
mov
fwait
pusha
scas
sbb
push
xor
adc
sub
inc
fs
gs
mov
stos
stos
push
pop
cli
pushf
mov
and
xor
inc
vdivpd
fstpt
fisttpl
arpl
push
xlat
push
inc
sub
jae
cs
xor
aam
pop
xor
or
and
imul
aam
aas
mov
stc
shll
mov
push
popa
push
lods
xchg
mov
mov
and
pop
pop
sub
mov
xor
pop
lcall
and
inc
dec
xor
pop
inc
inc
scas
push
shll
lret
jmp
roll
outsl
shll
arpl
cld
out
adcl
insb
mov
mov
ss
mov
sub
jge
xchg
leave
fadds
insb
les
inc
dec
xor
dec
mov
and
or
jae
add
movsb
insb
and
adc
mov
imul
xchg
pop
ret
adc
push
jle
sub
push
xor
xchg
push
inc
jg
push
add
jg
jle
and
mov
cmp
ret
scas
xchg
push
jo
test
scas
push
or
mov
adc
push
shlb
aaa
psllq
push
loop
mov
shl
inc
sbb
pop
pop
xor
xor
jg
mov
mov
loopne
pusha
xchg
aad
fwait
in
add
in
adc
stos
or
shr
xor
inc
cmp
adc
cmp
push
and
mov
inc
adc
mov
add
or
int
icebp
sub
repnz
sbb
imul
test
outsl
dec
fstl
jb
inc
xchg
mov
sub
pop
out
add
or
xchg
scas
mov
push
pop
cmp
mov
sbb
mov
and
ss
pop
out
inc
insb
pop
push
and
xchg
mov
sbb
orl
pop
lods
ss
push
ljmp
test
jmp
fwait
xor
push
ja
leave
jl
pop
xchg
movsl
imul
xor
sub
dec
mov
sub
xchg
icebp
jle
int3
lea
adc
out
jge
push
fdivs
cltd
loopne
add
shll
lret
pop
scas
mov
jle
mov
cmpsl
add
andb
or
jmp
inc
add
dec
fidivs
popa
cwtl
cmpsb
aam
push
push
or
ds
sub
mov
add
stc
lods
lea
imul
pop
dec
incl
cwtl
test
call
sti
negb
aaa
mov
and
lcall
int
out
sub
lds
iret
push
lea
cmp
adc
fcom
inc
arpl
lret
loopne
movsb
sar
fs
jle
dec
out
dec
sbb
push
in
mov
push
test
adc
push
cli
cltd
jns
movb
xor
loop
lods
clc
out
mov
inc
add
test
rcrb
popf
inc
or
adc
ds
outsb
aam
jge
nop
mov
or
rcr
jne
fisubrs
mov
rolb
popf
ret
jmp
arpl
hlt
lods
cmpsl
jno
movsl
ds
fisubrs
scas
mov
add
in
xor
mov
push
jnp
test
xchg
mov
pusha
daa
cmpsb
mov
add
cwtl
and
movsl
mov
push
and
dec
jge
fldcw
fdivl
ds
addr16
ror
push
add
imul
shll
popf
out
xchg
jecxz
jne
jo
inc
scas
cmpb
inc
mov
cmpsb
add
mov
je
jne
lock
xlat
inc
or
mov
adc
mov
dec
sub
inc
push
test
lods
sub
in
inc
inc
push
or
add
dec
jmp
cs
scas
pop
negl
add
dec
push
push
pop
jge
inc
inc
in
pop
out
push
mov
popa
push
push
lods
sbb
push
adc
iret
pop
xchg
out
mov
push
add
xlat
jle
push
and
pop
push
push
adc
fbstp
test
or
xchg
rclb
xchg
cmpsl
xchg
mov
push
and
push
dec
or
iret
mov
sarb
loope
lcall
ret
loop
je
loope
xor
mov
sahf
add
lea
adc
dec
pop
das
and
xchg
aad
cli
mov
sahf
sub
add
push
lods
xlat
push
lahf
xor
iret
js
insb
lret
cs
std
jne
jns
gs
ss
pop
jl
jo
mov
dec
fnsave
lds
push
or
popa
sub
mov
push
push
adc
dec
cltd
push
mov
out
or
and
or
push
imull
adc
pop
ss
mov
les
in
mov
loop
inc
out
shll
out
popa
ret
enter
sti
nop
jo
adc
in
sbb
xor
aad
repnz
sbb
mov
repz
pop
lret
dec
js
lcall
test
pop
and
aaa
xor
jnp
int3
pop
outsl
fadd
mov
cmp
mov
cmpb
jecxz
int
mov
sub
cmp
sbb
fstpl
jl
push
push
addr16
jae
pushf
or
mov
pop
lods
leave
int
push
xchg
cld
add
lods
fwait
fwait
cmp
xlat
addr16
int3
jne
inc
pop
sbb
mov
pusha
cmpsb
cmpsb
mov
xor
mov
scas
add
xchg
cmp
add
sub
inc
cld
mov
fucom
push
mov
iret
call
stos
je
lcall
mov
jno
test
adc
gs
imul
mov
adc
sbb
xor
sbb
inc
mov
call
stc
out
xchg
in
xchg
rcl
and
or
and
sub
insl
dec
mov
mov
imul
jl
adc
insb
fadds
ror
arpl
pop
push
in
hlt
xor
or
popf
jno
stos
push
sub
fs
inc
loope
xchg
cmc
sahf
mov
cld
loop
pop
push
push
pop
inc
cmp
mov
lods
xlat
pop
je
aad
lods
out
xchg
pop
fiaddl
imul
inc
xor
insl
fistps
fistpll
jae
mov
xchg
jb
rolb
sti
loop
scas
pop
mov
adc
push
mov
lods
sbb
rcl
xchg
mov
push
adc
pusha
rolb
and
jge
in
inc
adc
sbb
int3
into
out
daa
lods
xchg
inc
push
mov
shrb
repnz
scas
dec
mov
xchg
sub
and
sbb
pop
fstpl
jmp
adc
repnz
test
xchg
cmpsl
adc
stos
sub
jle,pt
clc
mov
lahf
dec
decl
out
das
js
sbb
arpl
push
ds
cmp
mov
shrl
dec
int3
in
leave
stos
fidivs
out
jg
in
dec
scas
cs
jno
in
lea
movsl
mov
fisubl
sahf
int3
mov
jbe
add
movsl
fists
adc
sub
les
insb
push
stos
sub
pop
ds
sbb
nop
push
js
sbb
arpl
push
movsl
sub
orl
cmp
lods
pop
mov
mov
in
mov
dec
pop
in
pop
mov
mov
dec
adc
andb
sub
sub
and
hlt
sub
inc
cli
mov
pop
les
pop
push
xchg
sub
pushf
mov
pop
sbb
decb
adc
aam
or
stos
pop
lret
fists
lods
lds
xchg
xor
mov
jbe
fs
loope
gs
imul
adc
xchg
aad
inc
loopne
pop
mov
add
mov
das
pusha
inc
mov
sbb
inc
xor
icebp
sbb
daa
cwtl
sbb
jge
sahf
jg
outsb
jns
lcall
insb
sub
xor
or
aaa
push
mov
fwait
negb
in
decb
pop
mov
push
push
inc
imul
rep
mov
repnz
fmul
xor
jl
mov
pop
sbb
jnp
mov
cmp
dec
notl
inc
cmp
mov
xor
testb
add
aam
in
mov
cli
jle
ss
nop
jne
pop
mov
sbb
xchg
dec
out
or
xorl
mov
ret
testb
adc
push
ds
movsb
fdiv
enter
and
aad
mov
xchg
leave
dec
sbb
and
cld
cmpsl
data16
scas
mov
addr16
int3
repnz
cmp
lcall
test
pusha
cld
fwait
stos
enter
sub
jmp
inc
add
cmp
mov
jb
or
in
sar
and
stos
test
imul
jno
loop
mov
shl
pop
sbb
idivl
xor
out
aad
dec
sbb
repz
inc
jno
cmp
in
xor
mov
out
das
mov
aam
dec
push
ljmp
inc
scas
add
jne
daa
mov
xor
push
insb
cmp
leave
arpl
arpl
dec
ret
outsb
dec
or
mov
add
dec
pop
stos
sahf
insl
dec
out
mov
jnp
adc
ret
pop
daa
fwait
jle,pt
or
andb
push
pop
push
jecxz
and
ffreep
push
and
or
cld
ljmp
in
push
sub
mov
cmp
dec
ljmp
inc
das
mov
or
rorb
cltd
or
pop
mov
scas
ss
movsb
pop
xor
add
or
addr16
push
cmpsl
xor
sub
add
mov
fsubr
jns
push
rcrl
xchg
cmpsl
cmp
push
jbe
inc
xchg
cs
mov
in
adc
adc
inc
pop
mov
pop
loope
cmp
or
sub
stos
and
and
sbb
outsl
or
addr16
or
pop
jmp
cmpsl
fldl
daa
stos
pop
into
into
push
in
mov
andl
loope
movsl
jge
test
inc
and
xchg
jg
idivl
lods
and
dec
inc
aam
pop
jecxz
daa
inc
pop
dec
lahf
aas
jle
add
adcb
cmp
add
mov
cmpsb
bound
pop
ljmp
or
sub
jecxz
push
xor
sbb
leave
scas
pop
adc
pop
pop
mov
mov
push
popf
and
adc
adc
lret
push
adc
clc
mov
loope
dec
lahf
inc
in
add
push
std
sbb
arpl
push
sub
push
cmp
sub
adc
push
popf
or
data16
push
adc
xchg
jb
or
popf
sub
jmp
stc
push
or
pop
out
pop
fcoms
call
in
push
inc
loop
or
cmp
stos
push
scas
and
lcall
inc
mov
or
imul
mov
mov
aaa
mov
pop
in
ds
fistpl
test
and
sub
jbe
mov
pop
sub
mov
outsb
lcall
mov
jg
cwtl
orb
adc
fsubrl
into
bound
sbb
hlt
push
mov
imul
ss
add
push
push
mov
jle
bnd
cmp
and
adc
outsb
subl
jns
xor
clc
jno
loop
xchg
pop
sub
add
dec
mov
call
sarl
add
testb
shr
mov
imul
xchg
xchg
sbb
lcall
inc
jg
xchg
aaa
xchg
xchg
adc
lods
pop
mov
es
dec
adc
loope
out
dec
dec
aaa
push
push
adc
mov
faddl
and
sar
ja
cmpsl
in
xchg
jmp
adc
add
mov
xlat
mov
jge
ljmp
inc
cmp
fcoms
mov
in
decb
shlb
aad
rorl
gs
xor
aaa
andb
jg
push
aad
xor
jns
cmpsl
imul
loopne
lock
pop
popa
fadds
xor
push
sbb
or
adc
sub
in
adc
ficoml
push
test
sbb
pop
into
movb
push
stos
and
cmpsb
mov
movswl
arpl
add
movsl
enter
shll
pop
fcoms
sub
mov
ldmxcsr
mov
shll
fstpl
mov
test
outsl
lods
loop
cmpsl
scas
inc
repz
sbb
int
cli
inc
cmp
sbbb
push
je
jl
test
scas
leave
mov
popf
jp
insb
sbb
stos
scas
adcb
cltd
dec
fs
imul
dec
inc
push
lods
push
imul
cs
lret
mov
or
pop
and
jb
sbb
lcall
inc
mov
push
daa
cs
das
stc
inc
jbe
data16
inc
imulb
flds
clc
fsub
dec
dec
icebp
jae,pn
arpl
sub
addr16
iret
jge
cmp
das
add
mov
add
inc
inc
sub
repz
push
mov
popf
push
mov
push
pop
gs
jl
jmp
imul
iret
adc
cmp
xchg
adc
push
adc
mov
std
shl
push
pop
inc
jb
repnz
lcall
fisubs
xor
mov
sub
push
dec
jl
jae
sub
loopne
fs
or
jne
shlb
xor
push
arpl
fdivrp
out
stos
push
test
imul
push
sub
movsb
lahf
mov
std
jno
in
push
inc
jg
mov
mov
test
mov
dec
xor
sbb
loop
mov
mov
jo
or
pop
mov
ss
enter
and
or
pop
adc
es
adc
fwait
aas
aas
sub
push
adc
mov
mov
sub
adc
shrb
mov
mov
mov
push
sub
mov
inc
inc
adc
shrb
mov
pop
sarb
jg
mov
int3
mov
aam
xor
sti
pop
rclb
dec
cmc
lods
lods
xlat
movsb
ficoms
das
push
imul
lock
jno
fdivr
mov
int
sub
xchg
mov
fisttpl
pop
sti
sub
push
adc
sbb
int3
jae
xchg
ja
loopne
test
ds
sub
push
shrb
faddl
data16
std
mov
shlb
fcomi
xchg
xchg
into
jne
pop
aad
sbb
gs
push
adc
cmp
loope
lock
sbb
xorl
into
cmp
pusha
aaa
lret
scas
sub
push
ljmp
adc
adc
leave
std
imul
inc
jl
mov
sbb
ljmp
pop
xchg
xchg
shrb
test
stc
fcomps
mov
or
inc
push
jb
sahf
aas
test
mov
fnstcw
add
shlb
xorl
and
adc
pop
xor
cmp
sub
arpl
mov
or
pop
gs
push
and
enter
fwait
gs
mov
jnp
es
shlb
sub
dec
xor
xchg
imul
loopne
pop
pop
movb
nop
push
push
adc
insb
jne
es
mov
mov
cltd
pop
xchg
mov
jmp
adc
or
loopne
mov
mov
das
test
cmpb
aas
leave
adc
outsl
out
iret
rcll
rclb
movsl
lods
cmovns
xor
cmc
ljmp
lea
inc
push
in
sub
fnstsw
mov
xlat
outsb
iret
cld
mov
sub
and
mov
cmp
insl
sub
xor
dec
scas
jg
add
in
mov
inc
movsl
push
dec
cmp
add
loopne
xchg
xchg
insb
cwtl
jo
ret
jl
push
push
adc
jnp
loope
loope
xchg
push
cs
pop
cmp
xchg
and
pop
lret
iret
push
mov
pop
sbbl
push
sub
sub
loope
ret
adc
lds
lods
pop
xor
lock
dec
cld
scas
and
pop
mov
dec
xchg
mov
rorb
imul
ficompl
jg
inc
mov
stos
ret
enter
movsl
dec
lods
xchg
push
pop
pop
pop
inc
jp
outsb
or
sbb
mov
push
push
inc
jns
mov
cmp
pop
push
cmpsl
dec
mov
push
xor
inc
mov
stos
push
scas
repnz
mov
mov
aas
hlt
sbb
jl
fidivrl
lahf
stos
decb
push
fsubrl
adc
rcl
inc
andl
cmpsl
dec
jmp
jne
lea
and
dec
sub
inc
and
push
mov
loop
push
push
adc
sub
adc
pop
adc
adc
into
int3
es
orl
lahf
push
imul
fiaddl
pop
mov
add
pop
lods
push
mov
movsl
ds
ret
cmp
sti
pop
fwait
js
jg
inc
mov
stos
sti
add
enter
movsl
jae
sub
jle
outsb
or
mov
loope
push
scas
pop
jae
fwait
movsl
movsb
dec
xchg
lea
pusha
dec
movl
mov
mov
sub
stos
fldl
or
addr16
push
dec
adc
imul
fisubl
lock
icebp
mov
clc
xchg
sub
aad
sahf
aas
jle
or
in
fcmovb
fcmovu
xlat
aas
es
push
or
fsubrs
sar
fwait
lea
popa
rorl
or
cmpsb
sarb
pushf
pop
inc
push
stos
and
mov
dec
push
das
push
das
mov
insb
or
push
inc
jge
sti
inc
mov
mov
dec
fstps
pusha
push
mov
lds
ret
aam
scas
lcall
mov
mov
jle
leave
into
add
adc
test
fldcw
push
adc
lret
dec
sbbl
pop
adc
inc
lcall
or
inc
mov
popa
cld
rcl
aaa
cmpl
push
jns
push
xor
jns
int
andl
sub
mov
leave
imul
cwtl
pop
test
adc
jmp
lods
jns
adc
subl
mov
inc
ja
push
cmpb
mov
add
push
cmpsb
inc
jg
lods
mov
daa
cmpsb
mov
int3
cld
fwait
dec
rorl
js
pop
testl
cld
adc
push
pop
xlat
mov
dec
into
jae
inc
cmpsl
sbb
rcrb
outsb
lcall
mov
leave
and
inc
and
xchg
gs
xor
popa
adc
mov
fimuls
sbb
fstl
cmc
popf
xchg
loopne
jge
shll
xor
xor
adc
int3
sbb
xor
ja
xor
int3
lret
in
std
mov
xor
mov
mov
mov
push
and
xchg
ds
sub
mov
xchg
scas
xchg
add
jp
jns
pop
and
cs
test
test
push
scas
push
sub
imul
insb
jle
out
js
pop
or
repnz
fwait
movsl
jno
outsb
fisubl
cmp
sbb
push
lods
test
mov
mov
bound
push
mov
xor
popf
xchg
cwtl
adc
or
inc
add
pop
mov
push
cmp
sub
bound
imul
inc
push
sub
jb
add
rcll
cwtl
mov
stc
pop
xor
xchg
out
int
shl
sub
cs
and
lret
mov
rorb
test
in
fisubl
out
movsl
mov
adc
push
sub
push
cmpsl
loopne
mov
mov
push
stos
in
mov
mov
cmpsb
fisttps
jae
inc
sub
add
pop
sub
sbb
pop
mov
mov
adc
push
push
cmp
daa
and
sar
scas
aas
shll
mov
inc
icebp
adc
jne
xor
hlt
in
fidivrl
jb
test
out
das
call
fcompl
sti
push
cmpsl
cmp
enter
ret
mov
and
ficoms
sub
sbbl
scas
cltd
xor
fsubs
sub
shlb
jno
cmp
scas
fwait
add
loopne
add
out
scas
sub
inc
adc
stos
scas
mov
mov
sub
push
cmpsl
dec
jecxz
mov
cli
xchg
mov
es
push
mov
mov
ljmp
or
stc
imul
jecxz
imul
rcr
lods
pop
mov
into
add
push
xor
nop
or
aam
adc
push
pop
imul
pop
ret
enter
movsl
jae
sub
jle
cmpl
adc
stos
ret
adc
mov
adc
movsb
mov
aaa
add
sti
pop
js
sbb
inc
mov
cmp
scas
push
loop
enter
movsl
dec
and
movsb
dec
loop
jl
mov
mov
out
testb
int
pop
sub
mov
lcall
arpl
or
in
xchg
xchg
dec
pop
push
adc
icebp
or
mov
enter
decl
cmp
xor
out
add
mov
pop
inc
adc
stos
pop
ret
jmp
sub
jle
es
lods
inc
loope
xchg
lds
and
aaa
push
mov
movsb
adc
hlt
and
xor
sub
mov
les
pop
daa
iret
cmp
mov
rcl
testb
jo
fldcw
arpl
jns
add
inc
inc
push
sbb
xor
xor
or
lahf
push
sarl
daa
ljmp
lahf
mov
ds
and
outsb
cmp
xor
jb
aam
pushf
push
into
cmp
lock
scas
adc
sub
fs
push
mov
mov
push
push
pop
push
lock
add
lcall
lahf
aas
decl
pop
in
enter
ret
or
or
cli
push
aas
iret
mov
imul
outsl
adc
out
sbb
fidivl
in
jnp
mov
fcmovnbe
int
fiaddl
inc
dec
out
cmp
jns
adc
fldenv
mov
loopw
mov
or
ds
xchg
lahf
lods
push
les
mov
subl
cmp
add
mov
sub
cmp
inc
inc
shrb
rcr
addr16
daa
cs
jb
push
sub
or
and
push
and
ss
ret
mov
mov
push
and
fisubrs
xor
out
sarl
stos
pushl
or
add
xor
popf
addl
push
xchg
or
rcr
xchg
iret
es
mov
cmp
push
sbb
ja
ljmp
dec
in
lcall
loopne
pop
inc
push
test
ret
sbb
lods
adc
cmp
aad
scas
jb
jae
fs
fstps
mov
and
jne
lods
cmp
shlb
das
mov
test
jnp
fwait
or
cltd
mov
test
je
jecxz
dec
andl
dec
pop
cmp
or
fcoml
std
das
mov
push
stos
push
fsub
dec
pusha
sbb
jmp
jle
sti
push
dec
js
xchg
fdivrl
jmp
stos
add
arpl
xlat
outsb
pop
mov
add
add
inc
scas
pop
mov
mov
mov
push
mov
jp
xchg
sub
mov
aaa
loopne
add
je
dec
into
jo
in
sbb
push
ficompl
pop
cmp
shrb
ds
jo
inc
scas
push
sbb
mov
popf
adc
std
mov
mov
sub
ds
mov
add
mov
loope
fidivl
inc
mov
push
sub
cmpsb
inc
rorb
xchg
inc
cld
or
cltd
aam
xchg
jmp
adc
sbb
cmpsb
pushf
jmp
adc
pop
xor
imul
int3
std
push
pop
push
adc
inc
scas
aas
pop
imul
mov
dec
jo
jno
and
addr16
scas
mov
or
pop
cmp
fwait
aas
jmp
mov
jecxz
imul
cld
dec
ljmp
inc
push
pop
pop
pushf
lock
aam
xchg
cld
lahf
aas
or
adc
das
push
and
jne
sbb
push
test
sub
inc
sub
jmp
sub
cli
idivl
and
lods
push
stos
ret
push
leave
inc
pop
pop
sub
add
mov
mov
jp
dec
cld
scas
sar
fstl
adc
mov
lock
push
xchg
stos
cmpl
cmp
xor
dec
mov
stc
or
cmp
jp
int3
cld
out
mov
pop
loopne
and
cmpsb
pop
icebp
adc
ret
scas
inc
sahf
mov
mov
pushf
sub
mov
stos
jecxz
enter
inc
ret
dec
int
daa
les
adc
add
dec
das
and
push
fs
in
lcall
xchg
stc
mov
stc
adc
ss
push
xor
sbb
hlt
adc
add
pop
push
adc
inc
dec
fldl
pop
mov
mov
int3
inc
clc
and
dec
add
sahf
dec
mov
roll
push
jg
xchg
mov
pop
pop
shll
inc
mov
mov
data16
or
je
in
mov
std
in
fdivrs
jle
testb
fxch
adc
or
sbb
shlb
push
push
cmp
adc
and
ret
imul
outsb
mov
mov
pop
push
mov
ret
jne
mov
jb
outsl
orl
scas
btr
rorl
fistpl
nop
stos
push
daa
inc
push
cltd
and
sbb
fwait
cmp
xchg
jecxz
cmp
adc
loope
sbb
fs
lds
and
aam
bound
xchg
push
aaa
jmp
push
aam
pop
inc
jb
sub
mov
mov
push
es
jno
push
stc
lds
push
cmc
pop
push
gs
inc
jle
jae
push
test
inc
pop
ret
mov
or
int3
pushf
and
les
and
push
pop
push
adc
push
enter
dec
lods
jg
in
lods
mov
mov
adc
lret
mov
dec
inc
or
inc
fadd
push
stos
fisttpll
ss
shrl
xchg
imul
sahf
jp
sbb
cmpsl
xchg
les
test
push
insb
jle
fsubs
or
add
dec
cmc
add
cli
mull
rcl
hlt
jno
cmp
stos
push
scas
and
xchg
andb
fisubl
iret
push
ret
xadd
push
adc
bound
pop
and
test
cld
shlb
pop
mov
inc
imul
arpl
int
sbb
pop
ljmp
or
adc
js
pop
cmp
xchg
shrb
pop
js
and
lahf
frstor
or
fdivs
adc
inc
push
and
lods
add
sti
jge
dec
dec
les
inc
pusha
aam
push
adc
fsub
mov
lock
cli
roll
sti
fists
and
lahf
in
or
inc
pop
in
loopne
mov
test
cld
inc
test
imul
mov
scas
je
dec
bound
fstps
popa
aas
hlt
cli
sti
sbb
jo
adc
hlt
punpcklwd
roll
enter
and
dec
cli
jne
rol
or
out
push
scas
and
mov
pop
in
test
sti
jl
int
push
cli
pop
out
inc
movsl
stc
inc
mov
out
mov
out
lods
xor
stc
cltd
jbe
xchg
xor
jg
sarl
or
std
imul
mov
in
rolb
dec
pusha
xlat
fidivrs
add
sub
arpl
cli
lods
pop
mov
dec
jo
cli
push
adc
mov
jne
dec
adc
lods
push
mov
add
jb
inc
pop
push
adc
nop
jae
xchg
jle
idivb
push
push
sub
lock
sahf
dec
stos
sarb
add
jl
mov
xchg
enter
in
fucom
cmpsl
lcall
in
popf
and
imul
xchg
rdmsr
pushf
jae
adc
clc
sub
push
scas
jnp
lcall
in
std
and
loope
mov
fsubp
push
lds
adc
pop
lds
adc
cmc
sbb
pop
adc
sbb
adc
inc
ljmp
adc
shll
jbe
push
mov
test
pop
adc
dec
cs
xchg
subb
pop
adc
sub
mov
cld
pusha
lds
adc
pop
enter
mov
jne
mov
xchg
pop
adc
jle
sub
lret
insl
clc
and
pop
adc
mov
shr
in
test
dec
outsb
pop
lds
adc
negb
push
jb
arpl
cld
or
pop
adc
pop
js
jb
fmul
mov
movsb
mov
pop
out
jae
cld
ds
mov
ret
loope
int
pop
push
fnstsw
ret
mov
jae
adc
add
pop
push
fwait
andl
dec
and
or
pop
ljmp
fwait
ret
inc
xor
js
and
adc
lock
push
adc
adc
mov
fnsave
xor
adc
ds
xor
inc
cmp
adc
lock
sbb
test
loop
inc
inc
inc
jne
or
add
push
adc
imul
push
into
shrl
daa
jbe
cmp
lods
iret
xor
fistpll
sbb
movsl
in
sbb
xchg
sti
clc
mov
jno
loope
je
adc
inc
fistps
mov
pop
cmpsb
cltd
es
rcrl
push
cmpb
cmp
cli
dec
lds
push
mov
movsl
cmp
pop
adc
jno
add
dec
pop
mov
sbb
stc
lods
dec
aad
jg
jo
adc
jne
push
adc
decb
lret
jge
xorl
js
cmpsl
mov
imul
cmpsl
dec
xor
adc
and
inc
mov
lret
scas
sub
inc
shlb
cmpsl
dec
lahf
aad
jo
adc
nop
sub
mov
filds
aam
xchg
je
movsb
fucomip
mov
adc
jle
add
inc
shll
push
loope
xchg
dec
xchg
pop
mov
fisubrs
jo
adc
nop
xor
mov
push
adc
fsubr
lds
push
mov
inc
in
ret
shrb
in
push
adc
fisubl
fwait
decl
test
dec
mov
ljmp
out
push
inc
test
push
xchg
aaa
xor
pop
xchg
call
fldl
or
mov
pop
adc
fucomip
fidivl
rorl
adcb
xor
fs
add
pusha
dec
add
shl
in
jne
adc
inc
mov
mov
pop
adc
test
arpl
aas
xchg
add
push
adc
inc
je
shll
rcr
xchg
fstpt
orb
add
mov
pop
sbb
dec
leave
jbe
nop
mov
adc
pop
adc
jnp
jae
inc
stc
aam
negb
pop
jmp
stos
push
add
shr
shlb
pop
nop
lahf
jne
aam
not
mov
mov
inc
lock
adc
stos
dec
mov
inc
lods
pop
mov
inc
jp
add
xchg
jmp
roll
push
adc
pop
inc
mov
mov
dec
push
aam
cmpsl
cmp
mov
jnp
dec
xchg
das
mov
adc
sub
pop
mov
pusha
cmpb
mov
lea
inc
stos
add
ljmp
lods
push
imul
dec
push
rcrl
in
ja
pop
mov
dec
leave
fwait
dec
mov
mov
add
xchg
or
xchg
loop
mov
mov
and
adc
cld
popf
cmpxchg
fisttpl
fstsw
add
inc
mov
clc
cwtl
sub
pop
mov
iret
mov
mov
aas
call
mov
lret
outsl
mov
xor
into
imul
icebp
mov
xchg
adcb
dec
loop
test
mov
repnz
test
pop
popa
outsb
add
loop
add
int
nop
and
loope
xchg
sar
cli
sub
xor
cmp
js
pop
arpl
repz
xchg
andl
adc
fists
jle
xor
add
je
or
inc
push
mov
lret
rep
adc
or
xor
cmp
lcall
and
pop
adc
xor
push
adc
mov
ss
cltd
int
js
lret
add
sbb
mov
lret
fistpl
dec
ss
addl
sub
push
adc
sti
jae
inc
nop
jecxz
mov
jnp
scas
into
mov
clc
mov
loopne
cli
pop
adc
adc
xchg
xor
mov
sbb
push
shl
and
ss
push
jb
mov
cld
lods
push
cmp
fldcw
call
test
xor
cmp
out
xchg
mov
les
scas
in
jae
adc
cmpsl
aad
xchg
fs
rcrb
movsl
or
push
mov
cmp
inc
cmc
lret
dec
mov
and
and
inc
push
mov
insb
add
adc
test
ret
pop
cwtl
out
in
mov
leave
in
cwtl
jne
jle
incl
adc
add
mov
push
and
loopne
jo
adc
or
or
adc
call
jle
jo
js
adc
inc
mov
or
pop
adc
cwtl
and
sub
sbb
push
adc
adc
adc
call
push
inc
sub
adc
mov
sub
or
test
sbb
sub
mov
rorl
in
rorb
fildll
loope
pop
jnp
jp
popl
push
lahf
dec
aam
jne
aad
mov
sub
nop
pop
push
adc
es
add
xchg
leave
aaa
xchg
cs
sbb
enter
fwait
mov
pop
inc
cmp
sub
or
loope
iret
jbe
pop
mov
cmp
push
mov
fisubs
lods
push
pop
cmp
dec
sub
push
sub
es
jle
in
mov
lds
fistl
mov
push
adc
dec
fldenv
imulb
fldcw
xchg
frstor
sarb
shlb
pop
mov
aad
jno
adc
mov
inc
lds
stos
pop
dec
adc
clc
mov
lahf
sub
and
test
push
adc
add
push
test
dec
push
pop
dec
lods
pop
cmp
sti
pop
in
xor
push
adc
mov
arpl
pop
mov
adc
jmp
test
and
mov
xor
push
adc
sarb
shlb
mov
ret
cmp
cmpl
ljmp
mov
jmp
lcall
out
xchg
popf
lea
push
stos
ret
push
lret
cwtl
in
push
adc
pop
xor
pop
popf
mov
call
stos
push
repz
adc
push
sbb
or
in
xorb
adc
mov
xlat
sahf
movsl
jmp
xchg
sub
rolb
data16
push
adc
imul
inc
mov
jecxz
cmp
adc
cmp
test
push
pop
sti
inc
sub
lods
inc
mov
enter
pop
cmpl
stos
sub
inc
push
sahf
jns
cmp
add
pop
ret
enter
pop
mov
imul
and
adc
sub
shll
std
or
and
jno
adc
stc
into
out
inc
jp
sub
inc
ja
insl
rcrl
or
or
push
adc
adc
push
pop
in
mov
mov
loope
call
cmc
push
loope
les
adc
sub
fsubp
jmp
movsl
test
lea
jecxz
loopne
popa
icebp
je
imul
stos
fidivrl
jecxz
mov
pop
adc
sarb
dec
sahf
sbb
loope
xchg
xor
test
inc
lods
imulb
jl
push
adc
ret
test
jp
icebp
add
xchg
int3
inc
inc
dec
cli
push
mov
xor
out
lahf
pop
sub
pop
insl
scas
inc
xchg
das
imul
leave
jg
imul
cmc
xor
lods
daa
inc
dec
mov
cmp
andl
movsl
cmpsb
iret
enter
sub
test
mov
pop
sub
outsl
and
imul
pop
sub
xor
mov
fmuls
fdivl
jo
adc
xchg
inc
shl
mov
ret
xor
dec
mov
jmp
bound
leave
push
and
dec
aad
cmp
xchg
and
jg
sub
push
adc
xor
sbb
or
mov
hlt
adc
and
jle
pushf
repz
fisubl
sub
sub
jge
sbb
fldl
mov
shlb
shlb
adc
pop
hlt
mov
cmpsb
stos
ss
sub
xorl
sub
mov
popa
es
shl
negl
hlt
and
push
adc
add
fwait
aas
add
sbb
sar
leave
addr16
lcall
cmp
addl
jp
imul
jne
mov
aad
sub
sub
inc
rolb
push
sub
or
lahf
aad
jno
adc
sbb
inc
mov
sbb
scas
push
push
in
push
push
xlat
clc
mov
cmp
addl
or
scas
imul
xchg
clc
adc
push
lods
pop
mov
aas
xchg
call
jnp,pt
adc
jmp
and
into
into
stos
pop
pop
cmp
push
or
adc
adc
push
aaa
xor
daa
sbb
sub
adc
mov
sahf
pop
mov
jno
test
sbb
clc
jo
adc
outsl
pop
and
jnp
mov
mov
pop
in
xor
jo
adc
shll
out
loope
jle
in
sbb
xchg
sub
adc
mov
out
adc
pop
test
pop
xchg
mov
add
dec
int3
in
jnp
mov
imul
fcoms
sub
push
sub
inc
sar
popa
rcr
pop
rcl
stos
pop
push
adc
mov
sbb
lock
aas
aaa
imul
jle
adc
mov
add
adc
and
pop
mov
dec
mov
je
adc
call
scas
jnp
rorb
inc
pop
pop
mov
cmpsb
scas
ficompl
sbb
ret
ja
and
out
cmc
or
add
es
cmp
add
pop
test
jge
xor
add
sarb
movsb
cmpsb
xrelease
cli
fdivrp
push
cmp
cmp
xchg
popf
divb
push
sarl
add
mov
loopne
shrd
xchg
lock
mov
sbb
mov
test
push
adc
sbb
mov
test
push
or
imul
jl
push
or
mov
sbb
or
icebp
pop
mov
lods
xlat
jle
push
dec
pop
add
in
clc
mov
sti
adc
lods
enter
cmp
xchg
mov
and
mov
lock
pop
lock
pop
cs
mov
cmp
rcr
into
and
and
incb
sub
js
jp
mov
aas
pushf
mov
fisttps
in
xchg
or
lcall
cld
push
mov
xor
adc
jo
shlb
fsubrs
ds
push
mov
sub
xlat
mov
xorb
lret
jne
adc
cltd
adc
in
xlat
sub
xor
scas
inc
adc
out
cltd
jnp
cmp
pop
jo
mov
pushf
and
xor
pop
clc
mov
cli
adc
jne
lds
xor
ja
fisubrs
mov
bound
inc
movsl
imul
xchg
dec
repz
jp
aaa
je
mov
mov
sub
xchg
fisubs
aad
mov
push
adc
int
xchg
es
pop
sub
adc
push
call
repz
aad
je
lods
pop
cmp
in
add
inc
leave
sbb
ror
jne,pn
aad
xchg
cmpsl
frstor
dec
pop
dec
pop
or
lahf
aad
jno
adc
mov
lahf
fsts
adc
dec
scas
aas
dec
imul
mov
mov
fcmovb
lahf
mov
sub
shrb
mov
daa
sbb
ja
andb
pop
outsl
cmp
sbb
pop
adc
scas
movsb
mov
fwait
movsb
sub
or
loop
dec
mov
push
adc
imul
rorb
jo
adc
or
pop
adc
daa
insb
rcl
testl
mov
sub
push
sub
push
mov
jg
lds
popa
aad
sbb
cmp
add
mov
test
mov
lahf
flds
push
scas
pop
std
out
push
adc
sahf
lods
pop
xor
lock
or
add
adc
int3
out
out
imul
sub
add
xchg
in
cwtl
stos
adc
pop
xchg
mov
sub
fcomps
xchg
das
jle
stc
js
mov
dec
pop
or
bound
test
add
adc
es
and
cltd
sti
arpl
push
adc
cmpsl
pop
insb
adc
jb
ljmp
pop
mov
dec
int3
mov
in
fnstenv
jnp
stos
push
test
out
int
int3
aas
cmpsb
dec
loopne
decb
dec
lock
pop
lods
mov
jmp
xchg
stos
cmp
mov
rcrl
push
movsl
cmp
sar
xchg
mov
daa
dec
sbb
push
sar
sub
and
shlb
sbb
adc
inc
mov
xlat
andl
lods
push
stos
dec
fildl
jbe
pop
lods
ljmp
xchg
push
cmpsb
out
cmc
and
cld
addr16
dec
fcompl
mov
loop
lea
jo
fdivl
cli
pop
mov
add
mov
inc
push
inc
xor
lcall
js
repz
jl
adc
sub
jae
adc
push
dec
dec
jnp
cmpb
sub
test
call
iret
test
movl
dec
movl
pop
push
test
sbb
mov
push
push
pop
out
add
shl
jmp
lret
adc
in
repz
jne
dec
pop
es
xchg
cld
sahf
xor
xchg
cmc
mov
and
insb
mov
xor
jge
rorb
jmp
mov
adc
pop
xchg
adc
mov
out
push
rcrb
add
sub
and
inc
ja
nop
cltd
idivb
jae
adc
popf
inc
cmp
xchg
clc
dec
add
xchg
jno
mov
mov
mov
xchg
dec
jl
popa
push
lret
dec
xor
gs
clc
push
in
ds
ficoms
lods
fwait
movsl
movsb
adc
add
std
pop
adc
lock
in
cmp
in
jecxz
add
mov
lret
dec
lret
jno
push
call
rclb
dec
stos
test
subl
add
or
sub
fsubrs
jnp
movsl
inc
cwtl
out
daa
fiaddl
lahf
lcall
hlt
loop
mov
insl
subl
decl
jl
pop
sub
adc
sar
andb
fs
push
push
sub
adc
arpl
in
pushf
add
adc
sub
bound
mov
xchg
adc
pop
fldt
mov
xchg
lret
pop
and
adc
cmp
adc
daa
aad
lahf
aas
jle
lret
push
dec
dec
les
adc
into
test
les
adc
arpl
sbb
push
cmpsl
int3
jb
push
addr16
or
sbb
sti
shll
test
adc
pop
aam
lods
pop
cmp
sti
pop
cli
fists
xchg
cs
lret
je
pop
adc
sbb
sbb
das
cwtl
lock
pop
pop
add
sub
into
pop
inc
cmp
imul
adc
repz
push
data16
pop
adc
test
faddl
adc
stc
movsl
fstps
mov
or
xchg
mov
pop
adc
shrb
sbb
int3
add
pop
adc
mov
sarb
faddl
adc
xor
adc
enter
lds
adc
lds
mov
rorb
imul
ficompl
jg
inc
inc
mov
stos
push
scas
cltd
mov
imul
mov
rolb
andl
adc
jg
insl
mov
or
add
pop
xchg
jmp
or
mov
mov
aas
mov
cs
xchg
sub
mov
xadd
sarb
xchg
movsl
pop
push
ja
adc
mov
nop
lds
adc
test
sub
int
fildll
pop
cmp
push
sub
into
inc
aam
dec
xchg
pop
fsts
data16
lds
adc
ret
movsl
pop
rcrb
pop
adc
push
add
into
lea
lds
adc
call
jb
movb
insb
push
call
movsl
outsb
push
lds
adc
xchg
pop
adc
ss
lds
adc
lods
sub
subl
pop
mov
adc
popf
sbb
dec
xchg
mov
mov
idivl
mov
xchg
scas
fnstenv
adc
mov
cmp
call
sbb
mov
mov
es
fwait
xchg
sbb
xor
add
push
aaa
add
mov
sahf
add
outsl
iret
jle
sar
sti
bound
push
rcr
movb
cltd
test
mov
jp
mov
stc
cld
rorl
sbb
sub
movb
xchg
add
sbb
fbld
repz
jg
stc
nop
sbb
pop
lret
ficomps
cmovs
or
mov
adc
push
pop
or
pop
mov
insb
dec
pop
or
out
frndint
jo
adc
js
or
pop
scas
loope
push
jno
adc
dec
mov
xor
inc
pop
insl
lods
jbe
decl
adc
or
jo
adc
pop
ljmp
lods
out
insl
rorl
add
cmp
inc
lock
pop
or
mov
add
adc
mov
add
pop
adc
jl
sbb
cmc
lret
mov
or
lret
sbb
out
dec
imulb
jp
sub
or
add
fiaddl
or
loopne
mov
cwtl
in
cmp
fsubp
inc
jo
cld
and
pop
ffree
or
sub
cmp
andb
dec
add
les
xor
in
mov
mov
pusha
adc
sub
mov
mov
repnz
stc
popa
test
stos
stos
js
repz
daa
mov
xor
cld
fcompl
adc
cmp
push
pop
lret
icebp
lret
pop
xchg
or
ljmp
push
test
cmp
push
shlb
inc
out
jo
scas
or
stos
adc
sti
movsb
int3
pop
lret
iret
inc
shll
inc
sbb
mov
xor
sub
pop
cmpsl
popf
hlt
imul
cmpsl
movsl
sbb
push
adc
jg
jnp
jne
cwtl
mov
in
pop
rolb
mov
or
ret
xchg
aas
nop
adc
or
mov
sub
dec
call
adc
push
adc
pop
push
sub
mov
or
cs
les
or
shr
daa
pop
adc
xor
es
movaps
pop
adc
dec
or
movsb
dec
jecxz
popf
push
les
adc
pop
or
and
cmp
cmp
imul
and
lahf
dec
ret
push
xchg
sbb
stos
xor
rclb
adc
pop
cmpsb
dec
call
and
hlt
sbb
cmp
pop
or
mov
push
pop
or
call
jge
mov
test
or
xor
jo
adc
mov
mov
adc
add
adc
rcrb
adc
scas
sub
jbe
notb
xchg
push
sbb
cs
fbld
fwait
sub
cmp
pop
inc
sahf
lock
jle
mov
inc
sahf
pop
xor
push
mov
pop
test
mov
mov
sub
lods
pop
out
cmp
inc
mov
arpl
jl
fildll
aam
mov
lods
mov
add
xchg
dec
push
mov
xlat
lahf
cwtl
lock
dec
ss
push
push
dec
xor
push
sub
pop
dec
fsts
mov
xchg
addl
xor
bound
ficoml
jp
mov
stc
xchg
or
std
jne
dec
sbb
daa
fsubrs
push
fdivr
movsb
sub
sahf
cmp
movsl
subb
or
stc
pop
sbb
mov
sub
repz
and
cmp
mov
insl
jnp
xor
test
push
and
fildll
pushf
cwtl
rcr
dec
sbb
dec
mov
rclb
out
loopne
cmpsb
iret
lock
dec
sti
cmpsl
lock
scas
xor
and
mov
adc
jge
or
cmpsl
sbb
push
enter
cmpsb
adc
js
mov
movsb
sub
jle
sahf
mov
imul
rolb
and
mov
in
xor
pop
mov
or
insl
aad
xchg
pop
sbb
jg
xlat
xchg
lea
imul
cmp
jnp
adc
dec
shl
movb
cld
adc
lds
pop
pop
add
fwait
lret
mov
cmpl
adc
jae
jg
jnp
sub
add
pop
aaa
xchg
setl
inc
cwtl
add
and
mov
mov
aad
add
roll
xchg
cmp
dec
pop
ja
je
mov
add
adc
pop
fildll
jp
mov
sbb
inc
inc
xor
xchg
or
iret
and
jmp
dec
mov
cmp
pop
outsb
xchg
and
popf
aad
push
shll
rcr
and
test
xchg
js
inc
and
test
into
jno,pn
test
out
jae
shl
stos
jnp
sub
shll
mov
jo
lods
inc
sub
push
adc
inc
call
sbb
jmp
xlat
jmp
test
push
out
dec
test
vaddss
mov
push
mov
cld
rolb
stc
mov
jns
mov
push
cmp
out
adc
jmp
sahf
pop
fs
sbb
rcl
sahf
cmc
es
loopne
push
adc
insb
stc
frstor
arpl
cs
repnz
pop
lods
pop
mov
dec
into
repnz
cmp
sub
cli
fxam
mov
rcl
clc
fwait
ds
xchg
lret
sbb
cwtl
loopne
push
adc
add
in
inc
mov
fsubl
push
mov
mov
inc
loop
test
addr16
mov
mov
movsl
std
sbb
jb
push
mov
lods
xchg
jb
rcl
cmc
adcb
jecxz
mov
adc
jne
rorb
add
insl
pop
movsb
or
les
and
sahf
jns
and
push
scas
bnd
out
test
enter
xchg
push
adc
adc
js
ljmp
mov
dec
jle
roll
xor
xchg
je
push
adc
push
sahf
icebp
mov
mov
mov
ret
add
adc
push
adc
jne
pop
push
jo
sbbb
aam
pop
mov
lock
xchg
or
aaa
shrb
cmp
adc
mov
mov
je
imul
addl
dec
xchg
ja
push
dec
rorl
jp
push
enter
cmp
lods
pop
pop
or
add
push
ljmp
rorb
sub
push
adc
mov
xor
xchg
movsl
push
aaa
and
cli
stos
stc
sbb
add
sub
push
inc
stos
mov
rorb
mov
and
adc
cmp
stos
adc
lock
movsl
aam
std
xchg
sar
push
dec
sahf
popa
ljmp
cmp
adc
push
dec
jne
mov
aas
aaa
pop
rcll
pop
push
sar
xlat
mov
push
sub
jae
adc
xor
fadd
dec
mov
shll
ret
pushl
pop
test
int
jp
dec
aas
stos
sub
mov
int
pushf
test
popf
and
les
stos
mov
lods
fidivrs
sbbl
lock
adc
sbb
mov
lods
cmp
in
mov
add
push
negb
lock
adc
push
adc
inc
lock
push
adc
inc
shll
decl
inc
mov
loopne
adc
fnstenv
xchg
pop
adc
aaa
mov
push
adc
jecxz
sbb
addl
bound
mov
inc
push
jne
out
push
adc
dec
pop
mov
cmp
testb
mov
mov
push
adc
fxch
add
mov
pop
ja
push
sbb
push
insb
and
mov
xchg
xchg
in
es
adc
ds
add
ljmp
out
push
adc
add
adc
mov
ss
data16
loopne
int3
ja
jb
out
push
adc
jns
insb
mov
ljmp
push
adc
ja
fsubl
jb
adc
lret
jmp
test
icebp
test
jae
adc
cli
cmp
jl
cwtl
sbb
lock
adc
ja
repz
insb
jne
aad
shrb
jbe
mov
pop
jno
cwtl
outsb
test
inc
mov
cmp
xlat
mov
jp
xchg
sub
dec
pop
jo
shlb
adc
shll
fcmovnb
aad
adc
notb
pop
loop
jns
ficoms
mov
popa
mov
sub
jnp
push
jg
pop
push
mov
add
pop
xchg
mov
inc
movsl
imul
mov
mov
dec
ret
lea
leave
xor
push
outsb
sbb
mov
js
push
sub
stc
and
mov
mov
push
stc
and
out
es
adc
pop
lret
fcom
push
sub
push
sbb
add
dec
dec
push
adc
scas
xlat
inc
bound
pop
movsb
dec
loopne
test
mull
push
inc
pop
xchg
jecxz
sbb
in
and
push
shlb
add
jb
jbe
xchg
mov
xchg
add
adc
cltd
aam
add
mov
and
fisubl
adc
daa
pop
cmp
test
cmpsb
pop
dec
lods
mov
push
call
out
adc
cmp
sarb
cmp
jnp
aaa
adc
xorl
mov
mov
jmp
xor
sbb
lods
lods
and
push
packssdw
lods
pop
mov
or
push
mov
sub
inc
sub
mov
cmpsb
xorb
fstps
sub
adc
jg
testb
jecxz
lods
lcall
inc
cmp
ficomps
out
ds
inc
push
add
adc
aas
mov
aaa
mov
stos
fdivl
lods
inc
in
shlb
and
fs
cmc
jge
scas
pop
mov
fdivs
lret
outsl
loopne
fstpl
or
outsl
sahf
cld
mov
push
rolb
dec
mov
jmp
xchg
stos
inc
loope
lds
cwtl
jmp
mov
mov
mov
mov
push
mov
pop
cmp
pop
in
xor
add
shlb
fadds
push
mov
movsl
dec
out
push
fcoms
outsl
roll
mov
sub
mov
pop
and
dec
add
movsl
push
dec
sub
and
xchg
test
sbb
pop
mov
sbb
inc
inc
and
test
rolb
inc
lcall
fs
jge
lret
push
lcall
fsubrs
sahf
push
cmp
xlat
dec
imul
into
push
rcll
push
aad
testb
pop
and
test
push
dec
movsl
out
mov
imul
mov
icebp
mov
inc
iret
mov
out
divl
jecxz
fs
and
xor
insb
int3
push
std
pop
mov
or
fsubl
lods
movsb
cmp
adc
xchg
push
mov
xchg
movsb
mov
lret
pop
mov
or
push
mov
test
cwtl
cmp
scas
ja
sub
ds
icebp
in
mov
pop
fnstenv
int
inc
dec
mov
ficompl
or
jae
pop
mov
rsm
pusha
stc
je
movsl
test
dec
mov
ds
shll
repnz
inc
mov
sub
sub
sub
push
arpl
aaa
decb
push
dec
push
mov
and
xor
fstl
mov
stos
push
jp
insl
and
xorl
movsb
inc
mov
imul
adc
dec
dec
push
mov
jb
fistps
sbb
arpl
xchg
decl
ret
or
repz
das
cmpsl
or
inc
mov
rcll
fisubrs
andb
push
fcoml
mov
add
add
outsl
xchg
je
flds
mov
sub
dec
push
jno
xchg
lock
insl
ds
in
pop
hlt
mov
popa
dec
test
jmp
adc
xchg
mov
pop
popa
sub
inc
int
into
push
sbb
ret
testl
mov
sub
or
sbb
lret
ret
imul
stos
sahf
fs
int
add
popa
jbe
xor
testl
lds
icebp
cmp
cmp
scas
ljmp
ja
and
mov
movsb
lods
dec
xchg
mov
sub
cli
sti
notb
xchg
push
inc
pop
sub
lods
mov
cmpsb
popf
ljmp
dec
jo
add
pop
mov
mov
push
mov
mov
sahf
sub
cmp
sub
jns
inc
fstpl
movsb
sub
sbb
rolb
jno
xchg
ja
pop
inc
int
insb
shll
jb
or
pop
mov
stos
xor
dec
dec
push
in
das
in
mov
jmp
aad
ds
popa
xchg
sub
jo
cltd
cmc
push
sti
jge
sub
push
mov
push
sub
scas
adc
pop
roll
sub
jecxz
push
sub
sahf
icebp
mov
mov
pop
insb
addb
rcr
push
sbb
mov
shll
stos
add
mov
cmpsb
bound
pop
ljmp
or
sub
jecxz
push
xor
sbb
push
scas
pop
adc
adc
mov
mov
push
jae
sbb
jns
and
inc
or
lods
pop
into
int3
adc
push
jb
sarb
pop
push
adc
mov
and
and
mov
in
in
movsb
dec
jmp
lea
sbb
mov
and
mov
hlt
or
pop
loopne
cmp
or
and
pop
in
push
mov
adc
nop
inc
mov
or
cmp
xchg
dec
imul
test
daa
lret
pop
jle
adc
faddl
adc
rorb
mov
in
add
inc
mov
out
cmpsb
sti
jg
inc
sti
mov
add
lods
xchg
daa
mov
push
ja
js
jecxz
sbb
addr16
jb
shlb
idivb
xor
jne
jne
int
cld
inc
insl
iret
or
jne
inc
test
rorl
lock
dec
inc
lret
or
shrb
and
xchg
hlt
popf
sub
add
test
mov
aam
cli
push
add
inc
jl
push
push
and
adc
mov
les
xor
imul
xlat
pop
xchg
or
push
cld
fxch
mov
scas
add
pop
or
pop
popf
push
dec
sub
rorl
xchg
sbb
into
push
ror
adc
push
cmpsb
pop
push
adc
mov
popa
dec
lret
adc
or
lock
pop
sarb
loopne
mov
mov
aaa
and
mov
lcall
mov
pop
adc
pop
out
lea
jge
repnz
adc
pushf
xor
iret
jne
sbb
or
out
sbb
aas
add
pop
push
adc
dec
mov
fs
repz
insb
sbb
ljmp
iret
push
sarb
mov
pop
insl
push
push
dec
sub
fsubrl
fiaddl
pop
mov
mov
pop
adc
jecxz
xchg
adc
mov
mov
cmp
dec
nop
xor
cmp
and
test
dec
das
test
ret
or
and
sahf
sbb
cmpsl
ja
ss
subl
test
and
mov
push
int3
test
cltd
pop
mov
orb
stos
int
in
push
mov
nop
in
pop
repnz
mov
rorl
push
and
les
sbb
shlb
popf
inc
cmp
or
xchg
sbb
jge
fldl
and
int3
xchg
dec
jae
call
pop
jmp
cmp
or
stos
popf
into
pop
rcll
aad
add
mov
call
pusha
mov
mov
pop
scas
dec
loop
idivl
adc
pop
mov
pop
imul
rcl
call
outsb
movsl
sbb
pop
and
add
add
dec
pop
je
sub
mov
inc
lock
ficompl
jg
cmp
or
xchg
push
pop
ds
dec
push
cmp
dec
insl
cli
test
sahf
call
cmp
sti
rcrb
push
insb
push
and
pop
push
cltd
in
push
es
add
jmp
inc
fidivl
andb
or
loop
sbb
in
sub
pop
sub
inc
add
xchg
sub
cwtl
lds
hlt
or
push
popa
adc
xor
pop
mov
cwtl
mov
aas
sub
pop
push
adc
daa
jnp
cs
mov
and
lods
push
shll
cmp
ljmp
pop
push
inc
add
pop
fs
add
shll
mov
push
mov
rolb
sbb
popa
popa
test
cmpsb
into
push
inc
lds
pop
cmp
hlt
in
fcmovb
loopne
cld
jno
pop
lcall
jl
mov
jo
lods
rolb
aaa
fnstenv
mull
pop
sbb
sti
sub
jno
mov
cmpsl
popf
ljmp
push
adc
arpl
daa
lret
or
xchg
sub
cmpsb
and
sbb
repz
loopne
cwtl
inc
push
mov
jb
stos
sub
add
nop
std
xchg
scas
mov
icebp
jbe
movl
stos
sub
push
mov
mov
push
adc
xor
cmp
inc
insb
jl
inc
inc
out
adc
push
testl
pop
mov
mov
inc
jle
mov
jl
jbe
xchg
mov
jge
movsl
jbe
out
and
inc
clc
push
sub
push
pop
pop
std
add
jmp
cmp
insl
sub
in
loopne
xorb
and
cmp
push
adc
xchg
call
sbb
shlb
aam
clc
push
lods
aam
icebp
mov
cltd
mov
push
xor
cltd
leave
dec
cmp
cltd
test
add
sahf
sbb
push
pusha
in
in
dec
sub
popa
sub
and
push
inc
xor
xchg
lret
rcrl
aad
cli
jl
push
add
arpl
sbbl
inc
mov
and
inc
xchg
mov
mov
into
insl
mov
mov
cmp
adc
push
mov
das
mov
in
jo
xchg
jmp
add
push
adc
lret
cmpb
jecxz
mov
pusha
jo
fistl
adc
aam
aam
push
jbe
andb
and
jl
jns
mov
push
mov
pop
jb
and
jbe
xlat
lock
push
movsl
pop
mov
inc
lock
adc
cld
cmp
mov
push
test
dec
mov
stos
dec
test
stos
add
fstps
mov
xchg
add
mov
jecxz
andl
enter
inc
ret
mov
push
shrb
sub
mov
movsb
scas
push
ds
notb
pop
mulb
fdiv
push
adc
dec
and
xlat
fnstsw
jbe
pop
scas
adc
int3
dec
lock
adc
xor
or
pop
mov
xor
dec
pop
xor
scas
jl
out
js
in
aas
jle
jns
adc
or
sub
adc
xor
inc
mov
sbb
pop
xor
loope
push
outsl
fbld
mov
xchg
cmp
and
jne
pop
dec
ss
xlat
fsts
sub
imul
lods
push
ja
mov
notb
adc
mov
fs
insb
shl
mov
cmpsl
int3
inc
xchg
cs
cmp
or
movsl
rclb
mov
fldcw
mov
cli
or
xchg
stc
dec
xchg
fiadds
sahf
fstl
pop
mov
dec
sar
imul
or
lods
and
pop
shlb
xchg
out
xchg
push
xor
rolb
mov
les
mov
movsb
sub
push
dec
fxch
arpl
lret
cmp
pop
sub
dec
mov
push
fsubs
xor
es
inc
add
lods
pop
or
notb
mov
inc
into
rcr
inc
out
cmp
fsubrl
xchg
sub
icebp
lods
movsb
add
mov
sbb
dec
xor
imul
fisubrl
jp
call
in
in
xchg
adc
push
cmpsl
dec
jmp
push
cmpsb
ss
and
xor
in
in
xchg
adc
out
mov
cmpsb
dec
cmp
cmc
js
popa
shlb
push
inc
adc
push
adc
out
cmpsl
push
mov
dec
repz
pop
out
xor
jae
adc
stos
stos
mov
mov
mov
dec
out
mov
pop
push
sub
mov
rclb
sub
adc
loope
pop
push
fnstcw
cld
dec
aas
adc
pop
cmp
movsl
pop
movsb
sub
jge
stos
adc
movsl
adc
sub
pop
in
test
scas
push
push
push
lahf
je
dec
lret
rcr
xchg
add
dec
mov
enter
pop
or
mov
inc
test
add
js,pt
jbe
mov
test
add
sbb
pop
sbb
sub
and
pop
push
adc
inc
cmp
inc
clc
loopne
imul
sbb
and
inc
xchg
test
insl
dec
mov
and
dec
clc
mov
pop
mov
push
repnz
adc
mov
gs
xchg
cmp
test
xor
ja
xor
movsl
xchg
mov
add
jmp
mov
fiaddl
inc
or
jp
test
addb
lret
or
imul
stos
fldcw
cmp
sub
mov
lock
adc
sbb
mov
cs
jno
and
sbb
es
sbb
cmpsb
movsb
fldl
in
test
out
mov
mov
xchg
icebp
or
cmpsb
mov
stc
adc
xlat
and
lahf
mov
push
adc
insb
movl
repz
adc
imul
inc
and
filds
in
repnz
rcrb
icebp
xor
fisubl
sbb
fisttps
imul
mov
repnz
cmp
je
push
xor
push
leave
sbb
cltd
int
inc
ret
test
mov
mov
insl
add
in
lcall
loope
add
jge
out
fwait
lcall
aad
add
and
insl
sbb
cmp
push
data16
inc
enter
iret
outsl
mov
pop
fsubs
enter
jo
push
adc
mov
adc
iret
pop
mov
push
frstor
and
push
mov
es
jp
je
je
pop
push
shrb
push
adc
in
sub
and
mov
xchg
dec
orb
jge
mov
mov
pop
pop
fstl
push
adc
cmpsb
mov
inc
enter
iret
bound
mov
cmc
push
dec
hlt
xchg
push
adc
xor
dec
dec
loop
cmp
push
mov
pop
pop
fstl
icebp
push
adc
cmpsb
mov
inc
enter
iret
outsl
stos
lods
xor
outsb
cltd
xor
adc
test
insb
cmp
stc
pop
and
xchg
push
adc
cmpsl
and
pop
scas
mov
adc
rorb
sub
imul
scas
push
jnp
sub
sub
inc
std
push
scas
pop
sub
cmp
es
mov
aas
jmp
push
testb
jb
adc
jp
call
cmc
adc
jb
adc
imul
cmp
addr16
jmp
addr16
pop
mov
add
sar
xchg
cltd
jns
sti
test
rcl
pop
push
mov
mov
rcl
clc
lahf
mov
cmp
insl
rolb
dec
ret
cmp
fstpl
sahf
mov
jp
clc
pop
lock
mov
add
data16
xor
sbb
sti
or
adc
test
mov
xlat
and
pop
xor
clc
pusha
int3
push
repz
xchg
cmpsl
push
call
or
std
fwait
xchg
pop
in
lods
ds
dec
rol
push
addl
mov
aaa
sub
sti
inc
mov
rcrb
xor
fdivp
pop
imul
adc
hlt
movsl
adc
push
repnz
stc
inc
or
imul
inc
sub
sub
inc
out
xlat
xor
mov
push
jmp
nop
inc
adc
pop
cmp
arpl
mov
xor
jle
sbb
aas
popa
out
rorl
icebp
sbb
sbb
adc
hlt
mov
or
sbb
push
adc
mov
lds
mov
imul
sahf
popf
fwait
repz
icebp
mov
mov
xor
adc
push
cmpsb
mov
mov
and
adc
mov
or
stos
out
pop
xlat
cld
ds
mov
cli
adc
adc
dec
out
dec
pop
dec
gs
loop
sub
sub
push
jp
dec
enter
lea
inc
xor
xor
mov
imul
js
xchg
xchg
sbb
push
ficomps
xchg
xchg
idivb
add
sub
mov
pop
in
testl
jle
jl
mov
inc
xor
lret
in
aad
adc
and
and
mov
loop
sub
or
push
stos
pop
mov
in
out
and
adc
sub
cs
fucomp
jl
repz
repnz
jg
out
subb
ret
and
cmpb
shl
ja
pop
or
f2xm1
andl
jne
cs
rorb
jp
adc
inc
rcrl
lret
int3
mov
iret
test
lea
lret
inc
fidivl
mov
xchg
sub
adc
mov
and
pop
push
add
test
add
dec
mov
fnstsw
jle
or
xor
pop
in
lahf
mov
mov
cmpsl
cmp
dec
inc
xlat
push
sub
fsubs
stos
sub
jmp
fcmovu
mov
adcl
popf
insb
pop
cmp
decb
pop
inc
xor
loop
push
imul
jnp
add
mov
mov
ds
cwtl
mov
clc
orl
jge
ljmp
add
sarl
mov
sti
negb
push
xor
out
pop
out
mov
mov
jb
push
mov
lods
xchg
jb
sarb
pop
push
adc
lret
pop
jmp
mov
fadd
mov
arpl
mov
xchg
push
fcmovnbe
push
sbbb
repnz
xor
pop
jecxz
and
inc
fiaddl
jnp
xchg
pop
cmpsl
dec
jmp
jne
iret
dec
inc
ret
pop
mov
push
test
out
test
dec
add
pop
pop
imul
addl
enter
in
sbb
jno
and
stos
lods
aad
shlb
je
mov
outsl
sub
push
cli
aad
add
add
add
decb
js
movsb
sarb
lods
push
dec
and
cli
je
aad
or
rcl
enter
inc
mov
rcl
xor
mov
jecxz
sub
pushf
inc
testl
insl
xorl
pop
mov
dec
ljmp
push
sub
sub
jae
mov
cmp
dec
icebp
xor
push
push
lods
ja
jp
cltd
inc
push
bound
inc
test
sub
mov
call
ret
sbb
pop
in
mov
lea
xor
sbb
cmp
leave
sti
mov
lahf
fisttps
outsb
test
std
mov
mov
mov
jecxz
ret
lock
les
fldt
fwait
adc
in
stos
hlt
ss
or
pop
clc
fwait
mov
iret
mov
dec
jbe
push
sbb
shl
movl
cli
xchg
xor
iret
test
mov
lea
push
test
push
mov
out
adc
pop
mov
xchg
test
jg
das
sub
xor
loopne
loop
xchg
imul
out
jl
es
hlt
popa
jnp
imul
xchg
subb
dec
pop
add
add
popf
mov
jne
lock
shlb
xchg
cwtl
pusha
gs
xlat
cld
jo
ljmp
and
into
pop
xor
imul
jns
notb
adc
stos
gs
push
dec
stos
gs
outsb
testb
inc
mov
sub
jl
fsubs
idivb
in
cmp
test
mov
out
pop
mov
mov
lcall
mov
in
cmp
mov
out
push
hlt
xor
cmp
lea
out
sbb
imul
jnp
fucomip
jbe
nop
mov
cmpsb
enter
cs
mov
stos
mov
fisubs
test
push
add
movsb
adc
lods
ja
popa
xchg
mov
xlat
repnz
lock
xchg
test
push
pop
pop
mov
lds
int
cmp
jns
adc
lods
jno
outsl
lret
shl
push
sub
and
and
push
adc
inc
loop
mov
std
inc
shl
cli
mov
push
sub
loop
les
dec
nop
adc
mov
mov
insb
cmc
jg
jecxz
cmp
and
sbb
cwtl
mov
ficompl
mov
xlat
pop
enter
lds
loope
ficomps
pop
pop
addl
mov
dec
inc
pop
pusha
sbbb
dec
xchg
cs
jns
stos
pop
push
adc
addl
rcll
pop
pop
adc
addb
sbb
imul
adc
inc
mov
sub
cmp
inc
jbe
sbbb
mov
es
cld
inc
lods
push
rcll
mov
aad
jp
jle
out
cmpsl
dec
lahf
lock
adc
ret
aaa
inc
clc
xchg
stc
rclb
les
out
mov
imul
mov
pusha
inc
shlb
cwtl
inc
mov
push
pop
dec
mov
test
push
sar
nop
push
incb
loope
jg
push
mov
rcl
jle
inc
inc
cmpsl
dec
jmp
jne
pop
push
jbe
inc
xchg
cs
mov
pop
push
adc
stos
push
sub
cli
jae
jg
fwait
inc
mov
jg
scas
lret
aad
inc
mov
cmpsb
sbb
loopne
cld
or
push
pop
cli
ja
push
shll
insb
pop
enter
xchg
adc
pop
ds
pop
loope
loope
dec
cld
fdivrp
pop
dec
scas
push
dec
adc
aad
push
and
imul
pop
cmp
jle
and
outsl
cmc
ret
push
xor
ljmp
dec
push
inc
mov
cmp
decb
dec
xor
add
js
je
xor
sub
scas
jns
xchg
faddl
and
push
adc
lahf
rorl
inc
test
sbb
es
jge
adc
bound
pop
das
adc
jge
and
lods
pop
cmp
or
push
testl
mov
sahf
outsl
adc
inc
bound
shll
icebp
add
or
push
hlt
inc
das
mov
nop
aam
lret
rcll
sub
sbbl
sub
pop
cmp
sub
ljmp
lahf
dec
xchg
cmp
inc
out
icebp
push
adc
adc
out
push
sahf
adc
push
adc
cmc
ret
imul
pop
or
stos
and
sbb
call
and
adc
inc
adc
mov
xchg
shl
jl
jo
adc
adc
outsb
dec
dec
mov
jbe
test
inc
xchg
sbb
ss
pop
pop
fisttps
mov
dec
sub
test
xor
push
jne
add
lds
sub
and
pop
fisubl
xchg
jnp
push
add
stos
arpl
push
and
or
cld
maskmovq
divl
loop
es
and
push
adc
pop
sahf
das
jae
cld
ds
test
mov
push
and
xor
sub
in
test
hlt
push
arpl
scas
mov
push
sub
or
xchg
mov
cmp
lret
hlt
js
repnz
add
and
adc
into
mov
cwtl
cli
jp
or
mov
xor
dec
push
fs
jo
or
stos
cmp
jmp
cwtl
push
mov
and
outsl
in
cli
in
jne
pop
mov
jge
and
dec
lret
loope
cs
xlat
ficoms
dec
jae
dec
cmp
loop
cmpb
movhps
or
jle
xor
xchg
movsl
pop
inc
inc
mov
cmc
or
push
cwtl
and
or
xchg
and
pop
pop
sub
or
cs
push
loop
arpl
imul
sahf
inc
sti
push
adc
inc
dec
aas
dec
pop
inc
xchg
stos
jge
mov
fcmovu
hlt
mov
mov
mov
adc
ss
lds
outsb
test
add
les
mov
pop
ds
aas
faddp
test
test
sbb
aad
movsb
mov
enter
pop
inc
ficompl
fbld
mov
xchg
into
sbbl
jp
adc
aas
nop
mov
cltd
sub
cmp
push
aad
inc
push
and
into
inc
mov
jmp
jle
or
shlb
pop
in
in
pop
push
adc
mov
mov
or
loopne
and
aam
dec
int3
loop
xor
fidivl
imul
inc
sarl
inc
adc
or
or
adc
mov
movsl
pop
xor
sbb
pop
clc
add
in
push
sub
fsubs
and
andb
sbb
push
scas
or
push
stos
cwtl
fsubr
test
dec
cmp
fnstcw
clc
or
mov
negl
in
lods
mov
movsl
ds
in
fildl
kunpckbw
push
popl
add
scas
xor
pop
mov
popa
inc
xlat
clc
mov
mov
pop
les
in
imul
scas
push
arpl
jl
mov
and
push
mov
pop
loopne
cmp
roll
or
sti
adcb
jg
sub
sbb
pop
pop
xor
xchg
sub
jo
fdivrl
adc
ds
dec
push
mov
inc
sub
lds
mov
and
shr
outsb
popa
jbe
frstor
or
shrb
xchg
jnp
mov
mov
imul
xchg
pop
sub
out
xor
push
movsl
loopne,pt
dec
sahf
pop
arpl
gs
push
adc
inc
adc
pop
iret
dec
dec
movsl
add
pop
mov
cmp
adc
insb
xor
mov
xor
push
adc
xchg
fadds
adc
pop
mov
aam
pmulhw
in
aas
dec
xchg
jno
inc
nop
adc
xchg
fadds
adc
nop
fadds
adc
lods
lahf
nop
fadds
adc
je
push
mov
mov
lock
imul
push
test
pop
adc
xchg
push
lahf
add
lcall
pushf
jno
adc
adc
lods
jno
adc
lods
jo
mov
test
inc
movl
stos
test
xchg
pop
pusha
jae
sarl
test
push
test
repnz
pushf
mov
sbb
add
cmp
mov
insl
xor
mov
mov
mov
rorb
dec
into
incb
pop
sahf
sub
into
jge
cmp
add
stos
jno
test
cs
push
rorb
add
out
xchg
adc
ds
rcll
mov
push
adc
jl
add
fisttps
scas
mov
dec
and
ret
dec
shr
dec
pop
das
mov
and
dec
mov
add
jae
nop
stos
nop
jo
adc
mov
shlb
jge
inc
je
push
adc
stc
fwait
xchg
out
pop
mov
cmp
insb
insb
jecxz
lret
push
out
fcoml
test
cli
mov
hlt
loopne
js
or
dec
je
outsb
xchg
aam
shlb
sbb
add
push
and
sub
sub
data16
cltd
ss
push
out
mov
shlb
sub
jg
add
adc
lds
movsl
mov
cmpsb
pop
lods
xchg
enter
add
and
loop
cld
je
push
adc
das
stos
mov
dec
movsb
dec
mov
lods
cmp
ljmp
pushf
sti
xchg
xorb
ss
dec
sub
bound
xchg
mov
cmp
aad
loopne
adc
xor
outsb
adc
push
adc
lret
sub
addl
nop
loop
xor
inc
insb
push
scas
pop
into
dec
fwait
dec
mov
es
rolb
scas
lret
mov
stos
shl
push
adc
pop
mov
cld
cmp
inc
rolb
sbb
jns
jge
sub
xor
decb
arpl
jmp
outsb
or
and
mov
fcom
test
push
adc
fisttpll
mov
daa
xorb
mov
mov
jle
dec
icebp
jbe
shrb
loopne
pop
cmp
insl
rolb
shlb
mov
stos
push
push
mov
sbbl
dec
push
add
dec
lock
fwait
sub
cs
in
mov
dec
or
mov
pop
mov
inc
sub
movb
lret
push
imul
mov
add
ror
sbbl
xor
sti
imul
fidivrl
mov
mov
test
add
ds
lods
pop
mov
sahf
fimull
dec
sbb
push
shlb
aad
pop
incb
enter
rorb
jo
adc
jo
in
shr
push
adc
and
push
adc
scas
addr16
je
dec
imul
push
mov
or
adc
lret
mov
pop
out
testl
and
imul
rcll
add
jmp
jbe
push
lds
adc
inc
push
or
inc
and
shl
adc
cwtl
popl
adc
push
mov
sub
pop
mov
scas
pop
jle
push
dec
int3
lret
jmp
pop
loopne
je
lods
rep
add
mov
push
adc
shlb
adc
ret
mov
test
mov
out
shrb
adc
sub
jbe
adc
add
mov
insb
and
mov
arpl
mov
dec
add
push
loope
push
std
imul
push
or
lds
sub
imul
jo
adc
movsb
shll
push
repnz
mov
iret
pop
sub
cli
pop
push
lods
test
mov
dec
mov
adc
inc
fdivrl
lsl
add
decl
sbb
mov
insl
jl
jnp
sarb
mov
mov
push
push
repnz
rcrb
xchg
pusha
xor
mov
stc
jle
add
xchg
popa
gs
shrb
fsts
and
pop
adc
int
std
adc
and
add
add
jp
imul
sub
pop
ss
pop
gs
imul
icebp
sub
jns
jae
add
scas
popf
outsl
mov
xchg
sub
push
gs
xor
push
adc
sub
lock
je
jecxz
les
lods
out
out
in
pop
add
pop
sbb
xor
call
jecxz
or
cli
jle
mov
dec
aam
push
adc
repz
push
sub
repnz
fadds
adc
and
aam
pop
xchg
ds
ljmp
push
jecxz
insb
lods
and
or
sub
loopne
or
jnp
iret
add
push
jnp
fsubs
inc
aad
je
daa
aas
mov
ss
jmp
nop
jo
testl
push
pop
mov
push
movsb
push
mov
scas
je
mov
inc
ret
add
add
pop
cmp
mov
xlat
outsb
movsb
mov
mov
popf
inc
movl
fs
icebp
push
adc
aam
mov
addr16
jle
movsb
jb
adc
pop
ljmp
jb
adc
pop
mov
stos
mov
iret
jle
and
sub
adc
scas
adc
fstps
popa
aas
xchg
jmp
inc
std
mov
cwtl
jb
adc
mov
pop
jle
add
push
sub
adc
and
movsl
lods
push
or
jne
inc
call
jnp
stos
jno
lods
add
cmpsb
sahf
inc
push
add
shrl
bnd
aad
icebp
push
adc
popf
cmc
jg
lods
pop
mov
mov
lods
add
arpl
sub
popf
sub
aad
in
aad
je
jno
lds
lahf
fs
push
movsl
pushf
jns
scas
icebp
scas
push
ficoml
clc
icebp
push
adc
sar
mov
jns
sbbl
xchg
js
into
push
loop
insb
pop
sub
orb
andl
or
xchg
add
xchg
push
lret
fcomps
pop
mov
pop
fcoml
add
scas
dec
shll
mov
xchg
test
adc
or
in
std
push
add
aam
jge
pop
cmpsb
push
inc
push
mov
cs
arpl
mov
dec
push
dec
jg
push
mov
inc
test
daa
test
enter
repnz
push
adc
mov
popa
and
push
adc
cmpsl
or
pop
out
ljmp
adc
mov
mov
cli
pusha
mov
sbb
and
xchg
sbb
push
adc
shl
pop
push
adc
mov
arpl
dec
repnz
adc
movsl
cmovo
in
call
test
add
mov
pop
adc
xchg
pop
and
push
adc
jl
test
pusha
sbb
jne
js
jmp
call
push
sub
push
jge
fsubr
dec
and
pop
out
push
mov
push
dec
scas
pusha
cmp
mov
fadds
mov
and
push
mov
xor
es
mov
or
xchg
mov
adc
fsubl
or
fstps
mov
js
and
add
sbb
and
add
push
jl
mov
shrb
xchg
hlt
clc
xchg
sub
stc
cld
cmp
mov
loope
adc
loope
out
dec
cmpsl
test
cmpl
adc
and
adc
aam
mov
adc
call
gs
in
inc
roll
sbbb
push
xor
inc
fstpt
mov
push
int
in
or
sbb
adc
outsb
es
add
cld
mov
jno
insb
adc
cli
test
mov
cli
pushf
sbb
jle
aaa
jl
outsb
lahf
cmc
xchg
sub
mov
mov
out
jecxz
dec
shlb
imul
insb
repnz
adc
sbb
add
xchg
js
sahf
cmpsl
push
mov
cld
cmpsl
popa
sub
jnp
movsl
inc
jnp
or
and
or
push
stc
aad
adc
call
divl
repnz
adc
cwtl
and
pop
pop
push
adc
push
mov
or
inc
fwait
lods
or
mov
mov
or
dec
shrl
push
aam
ss
outsb
mov
je
stos
mov
push
adc
sbb
movsb
adc
sbb
xor
popf
loope
shll
mull
adc
in
pop
adc
cmp
push
jmp
repnz
adc
loope
pop
lret
std
ret
dec
out
and
xchg
cs
sbb
and
jmp
sub
fstp
lahf
aas
jle
mov
push
imul
inc
mov
repnz
adc
in
pop
adc
xchg
and
pop
aaa
aad
add
lcall
mov
push
adc
cld
dec
mov
xchg
sbb
andb
pushf
or
mov
xlat
outsl
pop
cmc
enter
pop
insb
repnz
adc
mov
dec
scas
leave
dec
aam
jne
aad
popf
push
mov
push
ds
xchg
push
adc
mov
fistps
cmp
movsl
mov
sub
add
js
jns
xor
pop
add
lods
nop
mov
or
insb
cmp
jmp
adc
pop
enter
lds
dec
xchg
sub
shll
add
dec
scas
leave
in
or
test
push
mov
dec
mov
cmc
push
jae
icebp
imul
push
ljmp
addr16
jnp
shlb
sub
add
push
sub
test
ljmp
add
imul
and
mov
xchg
fisttpll
cwtl
mov
push
push
push
cmpsl
fiadds
inc
mov
scas
lcall
xor
or
adc
xchg
adc
and
pop
sti
mov
test
in
push
fldl
cmp
leave
jbe
pop
or
ret
lret
xlat
popf
mov
cmp
aaa
test
push
aam
add
loop
mov
adcl
enter
jns
popl
cltd
xchg
sub
test
push
mov
mov
dec
leave
sti
imul
jo
xlat
daa
or
lcall
ret
dec
xor
gs
jge
or
push
jbe
pop
push
xor
cmpsl
mov
cltd
jl
rcl
repnz
adc
sbb
fadds
cmp
lahf
ljmp
ss
add
mov
cmp
jo
adc
mov
mov
pop
shll
outsb
mov
movsb
std
jns
sbb
jle
xor
iret
xor
dec
cmp
cmp
mov
inc
jnp
or
popl
cmc
inc
inc
sub
sub
movsb
fimuls
sub
lock
mov
in
call
pop
es
add
rclb
dec
notl
mulb
cs
or
push
rol
add
gs
nop
pop
mov
imul
push
or
or
dec
xchg
add
and
shlb
movsl
pop
inc
dec
fdiv
push
adc
imulb
shrl
addr16
hlt
pop
push
fstl
popl
push
je
sub
aam
ret
xlat
or
outsb
ds
and
push
mov
adc
dec
nop
jecxz
or
jbe
pushl
sbb
lret
jo
adc
fmul
sbb
mov
mov
jmp
lret
repz
stos
mov
fisubrs
pop
pop
into
sbb
adc
jge
jns
or
movsl
leave
enter
mov
push
or
inc
stc
and
sbb
adc
mov
mov
shlb
xor
repnz
adc
xchg
es
push
mul
and
sbb
mov
sub
xchg
or
rol
imul
inc
inc
shlb
sbb
mov
into
mov
popf
jp
rcll
icebp
mov
add
cmpsl
cwtl
cmp
jmp
movsl
inc
push
dec
pop
ja
xchg
mov
test
cmp
dec
pop
lods
pop
jae
mov
js
mov
sub
flds
int3
push
mov
jo
adc
pop
adc
jo
adc
jp
repz
or
adc
sub
call
dec
and
adc
cld
jnp
push
jno
rcr
movl
jo
adc
push
xchg
imul
scas
mov
repz
popa
into
iret
xor
fsts
andb
cmp
test
or
adc
stos
or
push
cmpsb
pop
cmp
and
and
adc
and
ja
xor
cmp
daa
test
push
cmpsb
dec
fildll
cmpsl
mov
add
aas
mov
xor
sub
xchg
fcompl
push
loope
cmpsb
xchg
dec
jns
stc
rcrl
orl
push
and
adc
push
scas
pop
sbb
pop
shll
xchg
jae
std
je
or
adc
jmp
shlb
adc
pop
in
loopne
mov
and
adc
sbbb
pop
mov
data16
cltd
frstor
adc
pusha
adc
lcall
je
xchg
mov
jo
and
mov
stos
frstor
push
cmp
sub
loopne
std
xor
or
in
dec
and
adc
sub
sub
fmuls
inc
jb
lahf
aas
xlat
ljmp
and
adc
sub
mov
dec
mov
and
adc
push
and
inc
sbb
das
scas
push
test
mov
movsb
dec
out
pop
imull
mov
or
cltd
das
shl
mov
inc
sub
or
incb
sbbl
pop
sahf
push
mov
push
adc
pusha
add
mov
cmpsb
pop
lods
inc
loope
xchg
dec
lcall
les
bound
hlt
in
addr16
dec
aad
adc
je
pop
call
mov
sarb
cmp
sbb
aaa
lret
fwait
inc
mov
gs
cld
repnz
adc
push
jno
inc
xor
pop
mov
addr16
imul
add
cld
push
mov
add
push
popf
adc
in
push
addb
inc
sahf
pop
sub
jl
sarl
lret
adc
aam
pop
jne
cmpl
adc
enter
sbb
xchg
ret
in
stc
push
out
aad
in
push
cmc
push
dec
pop
mov
jb
stos
and
jbe
mov
push
ja
cld
and
popa
lret
pushf
lahf
sbb
pop
push
adc
pause
in
add
jp
sub
outsl
addr16
and
cmpl
inc
insb
hlt
repz
cmp
adc
icebp
pop
cltd
fildl
push
adc
in
sti
xchg
cmc
inc
addl
test
or
and
faddp
sahf
pop
push
adc
sub
loopne
fxch
mov
stos
sbb
sub
sahf
and
inc
adc
aam
lret
mov
and
adc
loop
aas
mov
dec
inc
stos
ljmp
or
movsl
sbb
inc
cmpsb
popf
inc
dec
test
inc
insb
pop
push
sti
test
pop
jno
iret
cmp
mov
ljmp
push
out
les
test
repnz
jae
add
mov
hlt
cmp
and
adc
jne
xchg
dec
test
or
fistl
or
mov
insl
out
shlb
ret
pop
sub
dec
or
shr
and
andl
fisttpll
jge
jmp
movsb
mov
cmp
sti
test
sarl
bound
jo
jl
adc
add
insl
push
and
adc
into
dec
jmp
or
pop
and
adc
sbb
mov
out
xchg
sub
std
xchg
dec
inc
pop
pusha
sbbb
dec
xchg
cs
jns
popa
and
add
pop
int3
lea
adc
fwait
aas
or
pop
lret
cmpsl
adc
push
in
lahf
fldcw
mov
cmpsb
dec
sub
inc
push
out
pusha
shrb
aaa
cltd
arpl
rcl
incl
mov
lcall
and
add
cli
add
mov
aad
push
mov
filds
fcos
mov
rolb
rclb
xor
and
int3
out
in
daa
dec
arpl
adc
mov
dec
dec
mov
sbb
or
cmc
sahf
fcmovb
push
and
int
sbb
pop
mov
andl
pop
and
iret
andl
repnz
xor
pop
ficoms
xor
inc
je
shll
dec
test
pop
leave
movsb
mov
int
js
and
repz
adc
and
sarb
mov
ss
lods
shl
push
mov
push
pop
sbb
push
cmp
push
sub
sbb
decb
repnz
mov
aas
xchg
mov
repz
cs
aas
mov
enter
push
mov
jo
adc
sbbb
mull
mov
int3
lods
mov
mov
xchg
sub
jmp
xchg
iret
inc
xchg
sub
xor
loopne
fs
stos
push
arpl
hlt
lock
sub
add
inc
and
vpaddsb
xchg
jnp
stos
shlb
xchg
inc
mov
pop
jnp
xchg
cmpsl
sbbb
mov
cmp
les
push
into
jo
pop
xchg
sahf
jmp
movsl
and
push
adc
inc
push
lods
popf
dec
sbb
repz
adc
jne
mov
inc
repz
lret
gs
ret
je
jmp
mov
addl
mov
jl
outsb
test
pop
inc
sbb
jg
jp
lods
loopne
add
xor
stos
popa
lahf
add
and
inc
repz
adc
lret
mov
add
repz
adc
cli
and
cli
int3
inc
icebp
arpl
das
pushf
lcall
push
push
aam
aaa
pop
mov
cwtl
mov
enter
xchg
or
or
push
mov
or
fwait
sbb
push
adc
cld
and
add
push
push
mov
push
aaa
repnz
test
add
sub
push
adc
sub
push
dec
sub
fsubl
add
fwait
sbb
push
sbb
push
push
testb
sti
popf
call
push
xor
adc
iret
dec
and
fisubrs
mov
cmp
insl
lock
or
lret
xor
adc
mov
test
or
imul
and
adc
push
adc
jg
sub
fs
or
mov
and
and
dec
dec
lcall
adc
ss
test
cmp
inc
mov
xchg
std
sbb
adc
pop
dec
mov
adc
fstps
jo
adc
cmp
push
stos
js
pop
adc
shrb
sbb
push
mov
mov
pop
jmp
adc
add
js
pop
adc
dec
push
test
or
jmp
adc
push
pop
mov
enter
scas
fnstenv
add
cwtl
repz
adc
mov
les
inc
mov
es
inc
pop
push
ja
aad
or
in
sub
push
in
cmc
or
cli
stc
cmp
cmpsl
sub
mov
imul
shlb
push
pop
push
test
adc
and
mov
or
scas
mov
jb
adc
fwait
in
sub
push
dec
push
cmpsb
mov
popa
enter
push
sub
mov
pop
mov
pop
jmp
or
cmpb
ja
xchg
js
ljmp
movsl
ficomps
cmp
cmp
addl
mov
sbbb
adc
pop
xor
pop
push
pop
and
lods
pop
cmp
mov
fadd
fisubl
aam
jno
pop
xchg
push
test
mov
popa
shl
lret
lods
pop
mov
lahf
fistps
lret
sbb
push
jno
cmp
and
jbe
inc
jge
dec
push
sub
movsb
lahf
mov
std
jno
in
push
inc
jg
xor
fucomp
lods
std
sbb
popf
push
outsl
movsb
cmp
mov
lock
jns
xchg
mov
sbb
cltd
fildll
push
sub
mulb
imul
inc
add
cmc
inc
pop
push
mov
xchg
insb
jecxz
mov
adc
das
mov
add
mov
pop
mov
mov
pop
ja
sbb
sbb
adc
aam
xchg
popa
nop
mov
in
mov
add
cs
pop
ljmp
inc
mov
je
mov
push
and
dec
cli
mov
xlat
scas
shl
mov
test
daa
dec
xchg
jmp
je
call
pop
sub
pop
lahf
push
ds
and
gs
cmp
and
out
add
mov
popa
push
and
jb
pop
dec
aam
into
cmpsb
push
mov
push
fistl
push
mov
loopne
test
in
sbbl
loop
data16
inc
inc
loopne
jne
or
xchg
gs
push
cmp
xchg
mov
and
ret
sbb
rorb
aam
dec
mov
std
popa
sub
mov
fs
cli
push
out
push
xchg
mov
pop
int
jnp
test
popl
jb
mov
data16
cmc
adc
rcll
pusha
xor
lock
sbb
repz
cmc
xchg
adcb
push
sti
jmp
fs
adc
cmpsb
jne
loope
hlt
jb
rorb
stc
push
cmp
mov
adc
sub
imul
add
add
insl
stc
mov
push
mov
dec
dec
xlat
test
loop
xor
testb
stc
addb
dec
enter
inc
xor
or
xchg
pop
pop
loop
leave
xchg
scas
mov
mov
jnp
cmp
das
dec
andb
mov
cmp
addr16
test
or
pop
aam
testl
subb
sbb
jo
into
sub
pop
mov
fwait
loop
dec
mov
andb
add
leave
pop
and
sub
cmp
mov
mov
pop
adc
fldcw
push
lret
aad
int
cs
test
fwait
mov
out
mov
sahf
test
sbb
popa
xchg
jecxz
mov
stos
inc
adc
mov
xor
loop
out
push
into
mov
ret
mov
sti
test
stc
ret
push
mov
add
fidivrs
loopne
mov
loope
iret
mov
cmp
and
mov
enter
nop
adcb
and
xor
jo
fucomp
dec
lock
test
sbb
cmpsl
sbb
dec
aad
push
test
out
push
push
lds
push
imul
pop
dec
adc
sbb
daa
aaa
xchg
cs
jb
scas
cmp
mov
cltd
jns
sbb
rcrl
push
outsb
or
and
pop
add
inc
loopne
push
mov
rcll
adc
aaa
rolb
or
and
mov
jo
popa
fwait
lahf
das
loop
imul
fwait
jecxz
xchg
or
sbb
mov
and
add
push
test
mov
pop
mov
pop
call
mov
mov
add
push
into
mov
sub
lahf
popa
jle
loop
mov
xorl
xchg
movsl
sbb
jge
xchg
stos
push
test
div
cmp
cmp
lods
pop
mov
add
pop
pop
push
rcll
mov
movsl
push
mov
sub
adc
shl
addr16
push
mov
enter
or
and
add
enter
mov
enter
fisubs
test
mov
adc
push
mov
jle
maxps
or
add
jle
out
incb
cmp
sub
sub
adc
pop
pop
cltd
mov
sbb
aaa
xor
aad
sbb
sbb
mov
les
sbb
and
push
or
sub
mov
dec
sbb
mov
mov
dec
jne
cld
xchg
imul
cmpsb
out
outsl
dec
loopne
inc
je
pop
lea
xor
loopne
dec
inc
std
test
push
adc
inc
test
dec
or
mov
fdivl
push
mov
or
jnp
dec
dec
jp
push
mov
lods
lods
add
std
adc
push
cmp
aaa
and
mov
push
sbb
and
sbb
data16
and
loop
mov
inc
test
pushf
sub
adc
pop
mov
sub
xor
jae
adc
sub
fnstcw
inc
jno
xchg
mov
add
push
mov
inc
push
xchg
xor
add
mov
push
pop
shll
loopne
mov
and
adc
addr16
dec
xchg
leave
sbb
jg
lods
ficomps
call
xchg
pop
jb
xchg
adc
arpl
mov
push
adc
setne
push
js
stc
hlt
mov
adc
or
mov
stc
cld
mov
mov
mov
dec
insl
mov
sbb
cs
in
bound
inc
addl
jge
dec
in
ja
dec
jp
cmp
rolb
inc
cli
cld
xchg
xchg
inc
lcall
jns
jp
mov
mov
jno
repnz
outsb
xchg
stc
fidivl
iret
dec
lahf
cmpsb
in
sti
mov
jo
adc
and
adc
loope
fadds
jbe
pop
aaa
popw
aad
dec
push
mov
loop
jno
adc
ret
icebp
mov
and
lea
sub
dec
xor
lret
and
addr16
mov
jo
cmp
shl
movsl
pop
cmpsl
sub
dec
mulb
es
mov
xchg
repnz
into
ret
fs
or
std
out
fisubs
adcb
dec
xchg
fisubrs
pop
sbb
jle
sub
bound
out
push
movsl
popf
int3
insl
add
sbb
pushf
aad
imul
lret
loop
pop
lret
adc
rcl
mov
add
rclb
sarl
cltd
popf
fwait
adcl
call
mov
dec
subb
jg
mov
scas
fld
inc
hlt
push
arpl
movsl
dec
call
push
stos
orb
imul
xor
pop
jmp
dec
mov
mov
lahf
adc
jns
test
push
shlb
aad
push
inc
jb
add
rcl
lods
pop
mov
aad
outsl
sbb
sbb
cmpsb
inc
mov
mov
inc
mov
add
loopne
icebp
fwait
in
mov
fs
movsl
sbb
and
push
shlb
aam
pop
jns
sbb
repnz
rcll
loope
push
sub
mov
xchg
stc
fsubr
popa
adcl
sbbl
cmp
add
jb
cs
stos
fisttps
stos
into
lret
adc
fbld
mov
fdivrp
sti
notb
pop
shlb
aad
test
sti
scas
mov
mov
pushf
aas
jmp
sti
sbb
jno
adc
data16
enter
test
jmp
shl
push
adc
and
dec
enter
pop
in
adc
out
ljmp
sub
sub
hlt
sti
testb
imul
mov
jg
scas
pop
xchg
sbb
mov
fwait
out
xor
sti
imul
rorl
mov
pop
into
jb
cmp
sti
into
dec
dec
out
pop
mov
pop
inc
ficompl
dec
lds
push
pop
jns
adc
fdiv
push
adc
dec
cmpsb
or
out
add
shl
xchg
pop
jmp
loop
mov
pushl
out
push
test
push
adc
mov
xchg
jnp
sbb
or
add
mov
out
and
cs
mov
fcoml
cmpsl
stos
jns
loop
or
jo
scas
lahf
jno
call
lcall
cmp
fistpll
cmpsl
add
addr16
test
ror
add
or
dec
jmp
insl
or
pop
lea
mov
out
mov
mov
push
xchg
es
push
adc
sarl
outsl
cwtl
xchg
fimull
xchg
cwtl
fbld
repnz
xchg
cwtl
or
cmpb
adc
or
push
aad
push
add
repnz
add
icebp
into
xor
hlt
push
adc
je
stc
push
lods
aam
icebp
lock
add
mov
clc
andb
xor
pop
insl
adc
gs
xchg
cmpsb
rep
push
push
mov
jle
add
and
sbb
popf
ds
add
aad
test
inc
dec
or
mov
adc
jae
add
push
adc
add
dec
xor
dec
jb
adc
repz
out
out
xchg
outsb
inc
mov
ret
mov
and
sbb
mov
outsl
sbb
and
inc
inc
add
dec
rsqrtps
jecxz
sub
shrb
into
mov
push
stos
arpl
mov
hlt
push
adc
daa
dec
nop
sub
aas
test
imulb
and
push
daa
pop
mov
ja
sub
nop
xor
xchg
ret
mov
ss
lret
pop
mov
sub
adc
andb
mov
movsb
lock
mov
mov
cld
loop
xor
mov
sub
inc
mov
inc
mov
cmpsb
dec
mov
or
jecxz
xor
lcall
xchg
inc
mov
pusha
bound
fnstsw
lods
jecxz
into
out
jmp
or
push
push
jo
insl
push
mov
push
rcll
jl
int
xchg
cs
in
popf
and
inc
adc
inc
aas
mov
push
push
hlt
dec
aas
cli
and
push
adc
xor
pushf
sub
adc
mov
push
shll
jle
xor
popf
and
je
fs
mov
mov
rolb
shl
cs
cmp
push
mov
adc
push
push
hlt
xchg
stos
lds
ja
xchg
sbb
sub
popa
pushf
sub
adc
jb
adc
mov
shll
cmp
and
adc
sub
test
sti
rorb
mov
sbb
push
je
dec
dec
jg
adc
xchg
sub
fisubrs
mov
and
push
out
aas
mov
sub
adc
pop
cwtl
jb
adc
mov
and
adc
or
mov
in
hlt
into
aaa
leave
cli
mov
push
scas
icebp
cmpsb
shrl
call
or
loopne
daa
and
jo
push
and
xchg
cs
mov
outsb
cmpsl
and
dec
pop
scas
popf
mov
lods
sub
ljmp
pusha
rcr
xlat
in
je
add
outsl
sub
scas
mov
push
xor
or
loop
enter
mov
popa
fwait
push
lods
lcall
addr16
inc
dec
jno
sarb
shl
xchg
cs
mov
mov
popa
rorb
shll
les
adc
lret
lods
mov
add
push
dec
push
test
pop
sub
mov
push
fistl
pop
lds
dec
xor
push
adc
adc
push
gs
in
add
shl
lea
mov
adc
jns
stos
subb
mov
pop
push
adc
imul
mov
shl
xchg
xor
sbb
aad
fldt
fnstsw
hlt
add
and
mov
jge
out
jmp
jecxz
mov
adc
sbb
inc
mov
cmp
adc
mov
cmp
adc
add
mov
jbe
sub
incb
in
ds
add
icebp
sbb
dec
mov
xchg
xchg
int3
cmp
adc
add
or
loope
inc
mov
enter
test
int3
cmp
adc
je
in
cmp
adc
cmp
adc
rcrb
int3
jne
or
xor
int3
cmp
adc
xchg
inc
sub
divl
int3
cmp
adc
enter
add
hlt
push
adc
sub
std
xor
divl
fisttps
jne
pop
pop
mov
cmp
sub
jns
jo
in
sbb
mov
fcmovnbe
push
add
ficoml
cmc
adcb
mov
xorl
cltd
stos
sub
mov
mov
shll
shrb
pop
sti
xor
aad
shlb
mov
jne
std
adc
push
and
adcb
fucomp
je
scas
adc
or
cmp
mov
stos
and
scas
mov
or
lods
push
push
pop
leave
pusha
inc
aad
dec
insb
pop
pop
inc
lea
fucom
jp
push
in
mov
push
add
cltd
fcomip
xchg
mov
out
xor
loopne
xor
addr16
sbb
dec
cs
pop
add
out
jae
cmp
ljmp
in
push
push
push
aam
js
sub
and
sbb
in
cmpsb
adc
addr16
push
test
inc
jmp
scas
adc
iret
rcl
sub
int3
sub
rclb
add
add
adc
sub
dec
xchg
dec
sbb
call
xchg
mov
mov
std
dec
inc
push
mov
insb
dec
mov
xlat
mov
push
imul
adc
daa
icebp
mov
sub
pop
lods
fsubrl
ljmp
fnstenv
push
push
push
ret
and
and
adc
mov
add
adc
sub
adc
sub
adc
scas
pop
dec
fucomp
fiadds
iret
cwtl
in
daa
sbb
mov
call
push
push
dec
scas
pop
pop
fucomp
ficoms
iret
cwtl
aad
icebp
in
daa
sbb
pushf
dec
lds
dec
xchg
cs
mov
jo
mov
ror
sub
adc
sub
adc
push
in
and
cmp
scas
fldenv
add
pop
cmp
movl
push
lahf
jo
jae
addr16
stos
fisubrs
pop
movsl
sbb
shl
bound
or
fistpl
pop
insb
inc
clc
xchg
in
push
mov
mov
fwait
pop
imul
repz
cli
mov
mov
mov
pop
push
mov
or
daa
lahf
or
addl
inc
adc
pop
xchg
mov
sub
adc
add
add
adc
imul
inc
push
bound
aaa
xchg
call
jmp
sahf
pop
sub
mov
xchg
adc
int
push
out
mov
loope
stos
ficomps
inc
imul
outsl
fdivr
inc
lret
inc
pop
sub
enter
cmp
shrb
mov
dec
add
movb
push
xor
and
fsubrs
mov
push
inc
pop
sub
pop
or
add
adc
add
adc
add
adc
inc
clc
xlat
test
hlt
hlt
xchg
out
mov
cli
fcmove
jmp
sbb
add
or
stos
clc
or
mov
iret
jae
cmpsl
mov
mov
and
lret
call
add
sub
add
adc
jbe
xchg
mov
lea
lock
test
aas
cmc
mov
fsub
push
popf
xchg
mov
popf
mov
sub
out
mov
xchg
out
out
outsb
and
sbb
push
xchg
insl
dec
dec
shll
js
push
insb
jns
mov
cmc
push
xor
andb
or
ja
imul
aaa
lock
das
cld
cs
pop
lret
push
imul
aad
nop
sub
icebp
in
adc
add
or
add
lods
nop
cs
add
adc
add
sahf
mov
jo
lock
andl
scas
shrl
ds
push
pop
inc
loope
scas
or
cs
inc
dec
or
cltd
dec
push
cmp
inc
sbb
dec
cmp
inc
push
push
cld
cs
mov
test
mov
repz
loopne
cld
cs
repz
adc
cs
adc
cs
adc
cs
into
pop
insb
pop
dec
dec
sbb
jno
mov
dec
lds
mov
scas
pop
pop
fucomp
ficoms
iret
cwtl
aad
icebp
in
daa
sbb
pushf
dec
lds
dec
xchg
cs
mov
jo
cld
cs
das
add
adc
das
add
adc
push
in
and
cmp
scas
fldenv
add
pop
cmp
movl
push
lahf
jo
jae
addr16
stos
fisubrs
pop
movsl
sbb
shl
bound
or
fistpl
pop
insb
inc
clc
xchg
in
push
mov
mov
fwait
pop
imul
repz
cli
mov
mov
mov
pop
push
mov
dec
xor
daa
lahf
or
addl
inc
adc
pop
xchg
mov
das
add
cwtl
xor
add
adc
das
add
cltd
movsb
bound
arpl
xchg
ljmp
pushf
cwtl
xor
ljmp
mov
mov
jecxz
scas
fistpl
inc
outsb
add
push
clc
inc
mov
inc
cwtl
xor
adc
aad
push
mov
xchg
int3
dec
pop
imul
sub
shlb
movsb
dec
inc
push
cwtl
xor
dec
xor
adc
adc
adc
adc
adc
adc
push
cmpsb
cld
scas
pop
mov
in
fistpll
shl
in
and
jne,pt
les
pop
sbb
scas
pop
cmpsl
fsubrp
fisubrs
shl
in
daa
push
cmp
push
or
daa
dec
gs
cmpsl
inc
push
jge
xor
xor
adc
xor
adc
loop
das
cli
test
dec
rorb
cmp
mov
dec
add
pop
out
and
sbb
aam
pop
and
adcb
xor
movsb
std
xchg
xchg
pushf
push
adc
outsl
xchg
inc
mov
sub
sti
sarb
inc
jo
push
hlt
push
adc
xchg
or
mov
sub
push
adc
sahf
pop
cmpsb
ds
das
imul
pop
mov
mov
mov
inc
jae
cwtl
daa
int3
stos
sub
shrl
adc
jge
adc
imul
adc
out
mov
xor
mov
adc
adc
inc
shlb
outsb
sti
ret
sbb
insl
out
mov
mov
icebp
push
stos
loope
xchg
xchg
dec
incl
outsl
push
fnsave
int3
mov
hlt
push
adc
mov
pminsw
push
pop
mov
hlt
push
adc
lock
cmp
add
jo
push
adc
repz
mov
cmp
sub
mov
test
push
adc
dec
sub
xchg
enter
adc
mov
icebp
and
mov
push
cs
fs
aam
or
and
jo
jecxz
insb
and
leave
shrl
scas
cmp
xchg
es
loope
pop
sub
lea
push
lods
popf
xor
xor
adc
xchg
outsl
adc
jle
out
lret
je
pop
mov
mov
adc
cmpsl
push
out
add
cmp
aaa
xchg
out
daa
sbb
leave
jp
rcl
pop
loop
mov
sub
std
mov
out
push
sbb
or
lcall
or
dec
sbb
cmp
outsb
sti
pop
je
cmp
add
push
pop
jp
rcrl
rorl
jl
lcall
mov
inc
pop
imul
mov
ret
mov
lods
fidivl
xchg
fs
jbe
pop
or
and
cmp
cmpsb
arpl
push
sub
daa
pop
or
fsts
fidivrs
inc
aad
push
sub
test
dec
sub
leave
rolb
dec
xchg
mov
daa
sub
bnd
sub
cmp
and
cs
into
push
test
sahf
cmp
jb
and
mov
shl
out
or
xor
push
sub
inc
mov
and
andl
shll
popa
roll
in
rclb
fsubrs
popf
subb
stos
stos
test
mov
dec
push
sub
inc
lahf
cmp
lds
or
roll
andb
test
notl
imul
cmp
mov
mulb
dec
jg
pop
mov
and
push
sub
outsl
or
popl
inc
ficompl
jb
adc
scas
sub
mov
jo
jmp
xor
xor
pop
inc
int
jmp
pop
xor
loop
arpl
lods
fsubs
cltd
ds
repnz
jo
ret
pop
cltd
leave
sbb
jge
xor
loop
in
and
sahf
mov
and
pop
push
lods
daa
mov
loope
adc
mov
push
test
fimuls
aad
fnstsw
lods
push
pop
push
inc
push
push
sbbb
fisttps
loop
push
aam
push
mov
rolb
adc
test
leave
push
andl
jmp
xchg
dec
inc
rolb
adc
pushf
fcoml
scas
pop
in
roll
add
mov
jle
adc
mov
pop
adc
mov
jno
push
out
adcl
mov
push
shlb
xchg
sub
cltd
mov
mov
adc
rolb
adc
xor
int3
cltd
das
inc
sbb
push
les
rorb
pop
adc
inc
rolb
adc
clc
push
jno
mov
rolb
sarb
push
cmpsl
mov
inc
cmp
bound
dec
sub
rolb
adc
insl
imul
push
or
jg
jecxz
imull
sbb
outsl
xor
fcmovbe
xchg
arpl
jne
test
jl
push
and
addb
aad
sub
and
cmp
jns
sub
mov
xor
add
xor
adc
std
push
xor
test
or
add
add
xor
jg
dec
sub
repz
xchg
aam
in
bound
std
xchg
mov
push
daa
lret
dec
rorl
decb
fcoml
ret
in
rcr
les
xchg
andl
add
mov
or
movsb
xchg
mov
scas
mov
xchg
mov
pop
popf
or
lods
adcb
cwtl
jb
cli
mov
outsl
in
stos
push
cld
sti
test
push
out
test
xchg
and
arpl
and
idivl
sub
sub
push
testb
je
dec
jne
inc
and
sub
push
push
out
fldcw
imul
push
pop
mov
lock
mov
test
pop
and
repnz
inc
scas
sarl
lock
sub
mov
cmp
pop
push
sahf
movsl
mov
cs
mov
or
out
iret
clc
scas
sbb
and
mov
gs
mov
into
ret
aas
mov
adc
cmp
sbb
jnp
sub
pop
adc
push
imul
aas
outsl
hlt
add
mov
hlt
push
mov
jo
roll
adc
cmp
cmpsl
lds
adcb
ret
xchg
imul
aad
xchg
adc
mov
xor
dec
lahf
mov
ljmp
pop
inc
xor
push
pop
out
ret
sub
std
or
inc
addl
enter
mov
scas
cmp
into
loop
pop
dec
loopne
push
xor
pop
enter
sbb
test
stos
push
sti
inc
jae
fistpl
les
push
outsb
or
mov
mov
mov
mov
pop
dec
adc
dec
out
ds
cmpsl
sbb
loope
stos
push
ret
sub
xchg
aad
shl
pushf
aas
hlt
notb
lret
fwait
pusha
mov
mov
or
pusha
inc
cli
inc
pop
cmpsb
cs
orl
ljmp
inc
mov
sbb
or
rcrb
int
subl
xor
pop
enter
sarb
cmp
rorb
push
cltd
xlat
rclb
frstor
adc
mov
lret
imul
inc
rolb
adc
add
lahf
pusha
mov
popf
sbb
push
stos
xchg
xchg
sti
xor
popf
bound
mov
pop
cwtl
mov
rolb
adc
nop
pop
add
add
lods
inc
in
shlb
lods
loopne
push
incl
add
sarl
movsl
or
jecxz
pop
fucomip
movsl
sti
mov
std
sub
jg
pop
outsl
push
out
cmp
inc
mov
pop
dec
dec
jle
mov
addr16
gs
outsl
mov
loopne
js
sbb
push
shlb
jae
popf
pop
test
sub
fistpl
test
add
fwait
xchg
rcll
insb
push
jne
loopne
dec
xchg
sub
lcall
sub
dec
lock
sub
stos
imul
scas
pop
xor
loop
inc
dec
hlt
out
jl
cmp
fmul
test
jg
pop
test
loop
dec
pop
jnp
mov
jge
cmp
mov
lahf
orb
aas
mov
out
push
jecxz
push
push
ja
jp
mov
cld
push
fdiv
lret
xchg
sti
decb
cmp
xchg
fistps
flds
adc
mov
jle
roll
adc
test
adc
mov
pusha
roll
adc
add
roll
adc
sbb
cmp
roll
adc
and
stc
push
rcrl
jne
xrelease
loopne
or
outsl
ljmp
pop
pop
xor
push
rcll
mov
mov
push
push
xor
mov
stos
adc
stc
dec
cltd
sarl
outsb
dec
dec
dec
iret
mov
inc
mov
add
lret
push
fstpl
fcmovu
outsb
mov
pop
or
mov
lock
jae
stos
mov
adc
enter
in
loopne
fiadds
lret
cmc
inc
rolb
adc
push
jle
push
pop
xchg
stc
inc
xchg
jb
adc
pop
push
or
mov
cli
aam
add
push
bound
and
adc
pop
push
out
mov
and
adc
xlat
clc
mov
sub
sub
or
xchg
int3
fucom
mov
cmpsb
daa
enter
jb
pusha
leave
pop
adc
nop
mov
adc
inc
jo
mov
leave
pop
adc
fsubrs
call
in
loop
and
adc
adc
sub
mov
xchg
xor
xchg
popf
cmc
arpl
pop
loopne
jmp
cmc
and
push
jmp
lods
mov
xor
loop
dec
aaa
xchg
out
inc
add
pop
ds
cs
testl
arpl
les
xchg
jae
dec
insl
push
push
adcb
shlb
mov
dec
add
shrl
rcrl
addl
sub
je
frstor
adc
adc
pop
dec
imul
pop
cmp
int3
add
or
adc
mov
outsl
jo
pop
aaa
mov
ficoms
pop
dec
das
jle
sub
adc
push
xchg
stos
jmp
mov
mov
shll
cmp
pop
jl
cmpsb
imul
inc
add
out
fildll
xlat
mov
shlb
dec
pop
mov
xchg
push
cmpsb
mov
pop
btc
loop
jb
outsl
and
into
imul
jae
fisubs
imul
push
adc
dec
jmp
cmpsb
lret
jmp
addl
jmp
mov
popf
imul
outsb
dec
and
cmp
loopne
inc
cld
loop
dec
inc
js
push
adc
out
stos
push
scas
xlat
push
arpl
push
pop
mov
push
leave
movsb
mov
mov
std
jno
in
push
inc
push
adc
push
xlat
insb
inc
sub
outsl
xchg
pusha
cmpsb
dec
sbb
pop
mov
test
cmp
in
fimull
mov
aad
or
scas
push
jp
jp
and
push
xor
xlat
ljmp
mov
lock
rorb
push
rcrb
imul
dec
pop
mov
and
push
dec
xor
dec
mov
pop
aas
lods
mov
cltd
fsubrs
mov
push
adc
mov
cmc
xchg
pop
pop
fstpl
adc
lods
ds
pop
fldenv
jnp
ret
adc
sub
cmp
adc
stc
mov
xlat
lcall
mov
jecxz
mov
pop
jne
je
jg
sbb
dec
lret
push
adc
outsb
mov
sahf
xor
lret
movsl
jne
shl
xchg
fdivl
mov
das
dec
scas
cmpsl
fdivrs
mov
mov
fs
pop
daa
lret
pusha
mov
test
add
jg
popa
addr16
cli
leave
push
sub
mov
inc
push
sbb
arpl
fmuls
add
pop
xor
mov
lcall
lock
lods
iret
pop
adc
adc
or
sub
xor
fsubl
push
cmp
inc
and
and
in
xorl
sahf
das
jae
xor
insl
mov
fnstenv
in
push
sbb
test
mov
xchg
push
daa
jnp
int
jecxz
into
leave
mov
mov
hlt
cmp
loopne
sub
sub
push
adc
mov
jge
mov
add
jns
loope
add
xchg
dec
arpl
out
imull
sub
pop
add
lods
out
mov
daa
cmc
inc
fucom
mov
rcr
mov
shlb
and
lret
gs
leave
pop
stos
xlat
fisubrs
jo
pop
mov
pop
cmp
jb
lods
test
into
insb
xlat
stos
mov
sahf
jns
test
mov
bnd
out
ds
cwtl
in
xor
jge
arpl
popa
es
lock
and
out
and
lret
inc
clc
push
sbb
inc
mov
dec
bound
mov
into
aas
insb
adc
dec
test
adc
mov
push
ds
jne
xchg
call
and
stos
jge
push
ss
fcompl
xlat
out
pop
inc
cmp
push
inc
aad
adc
rclb
fwait
lcall
mov
jo
jae
add
repnz
test
loop
mov
lods
iret
pop
adc
rolb
mov
sub
push
cbtw
fs
outsb
mov
loope
jns
sbb
adc
push
sbb
into
sbb
stos
rcrb
test
mov
mov
adc
adc
rcll
mov
push
sbb
dec
push
lcall
pop
xor
jmp
ja
scas
sub
pusha
shrl
xchg
stos
imul
xor
lahf
inc
inc
add
data16
mov
cs
push
inc
push
push
rolb
xor
daa
lahf
out
cmp
fsubrp
xchg
xchg
jbe
cmpsb
icebp
cmpsb
add
push
sub
jne
les
les
or
and
iret
jle
cmp
pop
sub
std
or
mov
adc
addb
push
pop
jb
mov
aad
push
fnsave
das
aam
xor
movb
add
xchg
stos
popf
into
inc
imul
out
fwait
dec
jae
jbe
adc
xchg
mov
mov
and
jle
push
ds
ljmp
inc
mov
shrl
scas
sub
lds
popa
jne
xor
into
xchg
and
orb
insb
push
cmpsb
dec
push
dec
xchg
aam
loop
js
movsl
dec
cmp
test
les
xor
popa
sarl
add
out
xchg
das
mov
inc
dec
sub
movsl
dec
pop
fs
dec
movsl
mov
ret
in
mov
rolb
push
inc
push
ficomps
xchg
adc
sub
xchg
test
fbstp
sub
push
icebp
lret
jl
or
js
je
mov
repz
icebp
add
dec
push
sbb
lds
sub
aad
insl
pop
mov
mov
pop
sub
or
aas
orl
mov
xor
dec
pushf
dec
mov
ljmp
jbe
aas
mov
adc
ja
out
inc
mov
sub
cmp
adc
loope
jl
jbe
ljmp
mov
std
hlt
sbb
insb
lods
and
jnp
xlat
stc
mov
test
pop
dec
pop
testb
xor
addps
lret
mov
jb
lods
pop
stos
test
loop
push
add
mov
dec
fdiv
adc
aam
mov
movsb
jmp
nop
ja
mov
pop
ret
lock
out
outsb
pop
dec
iret
lahf
lret
xchg
lock
dec
outsl
push
push
and
in
inc
mov
xchg
in
mov
add
int
pop
dec
aaa
addb
cmc
jle
movsb
jge
stos
mov
arpl
or
mov
cmp
popa
sbbl
mov
mov
xchg
in
pop
les
xchg
push
repnz
adc
pop
out
orl
popf
stos
push
mov
lods
stos
fwait
call
and
lea
scas
xchg
mov
imul
jle
aaa
test
ljmp
xchg
or
mov
shr
dec
mov
pop
iret
icebp
mov
decb
mov
insb
push
sbb
pop
inc
movsl
imul
scas
fimuls
and
sub
dec
push
shl
mov
push
jp
sub
sub
sub
filds
scas
xor
out
lds
addl
sarl
mov
fnsave
pop
jmp
lahf
inc
cld
push
add
addr16
xchg
pop
jmp
fistps
mov
inc
xor
lahf
aas
add
add
xchg
push
push
ljmp
arpl
xor
mov
push
lahf
sub
fists
repnz
filds
xor
or
sub
je
sub
imul
fcmove
jg
sub
testb
ficomps
decl
gs
fildl
push
adc
out
cmpl
in
fldl
add
pushf
das
daa
lcall
mulb
sbb
js
mov
stos
push
scas
enter
shll
shl
js
push
inc
in
sub
mov
push
push
mov
mov
ret
cmp
push
pop
ds
dec
lods
pop
mov
shr
out
fidivl
mov
shrb
push
adc
inc
test
pop
jmp
inc
jbe
inc
cltd
pusha
push
jecxz
cmp
ljmp
loope
push
sub
mov
xor
rolb
push
mov
aad
pop
sub
mov
push
mov
je
push
adc
push
adc
adc
mov
inc
in
lahf
js
shl
test
mov
sub
mov
xchg
into
fcoms
dec
shl
test
jmp
jl
jae
push
push
xchg
stos
sbb
mov
shl
mov
int
addb
jge
lods
aas
push
pushf
mov
pop
jbe
pop
int
jmp
sub
xchg
xor
dec
shrl
mov
in
aad
scas
pop
int3
aam
sbb
mov
mov
or
repz
stos
mov
aad
fdivl
lods
push
cs
out
cmpsb
inc
rcrb
out
in
popf
and
dec
sub
xchg
fwait
cwtl
fdivrl
cmp
pop
fmul
pop
cs
leave
lret
fwait
pop
les
cmp
push
add
xchg
insl
push
mov
push
mov
popa
cli
mov
pushf
out
or
arpl
sub
jecxz
jbe
sbb
shll
pop
lds
cmp
or
push
lahf
js
js
mov
mov
cmpsb
sub
mov
cmp
test
and
mov
mov
pmulhuw
fisubl
xor
mov
icebp
addr16
push
adc
xchg
push
push
fdivp
sbb
pop
mov
test
cmp
adc
inc
mov
sub
push
xchg
add
out
add
cmpsl
xchg
popf
out
in
insl
imul
xor
sbb
sbb
in
mov
push
mov
imul
fisubl
xchg
dec
icebp
inc
and
or
mov
lcall
cmc
push
adc
mov
ret
in
xchg
push
loop
shrb
xchg
in
aam
xor
push
sbb
jne
shlb
mov
pusha
fldcw
dec
and
inc
adc
or
mov
push
pop
inc
sti
or
arpl
dec
xchg
movsl
dec
and
ss
xor
testb
xor
ds
lods
dec
pop
pop
loope
lock
sbb
and
out
adc
loop
lods
adc
jbe
mov
push
std
cmp
or
jnp
ret
mov
insb
pop
xor
vpsrld
into
mov
je
mov
adc
bound
adc
sub
imul
xor
aam
cmp
pop
lods
fidivl
pop
gs
add
add
fisubs
stos
cmp
fisubrl
cmpsl
test
mov
mov
imul
sahf
cmc
xchg
adc
mov
xchg
frstor
aam
push
mov
fisubrl
imul
fisttpl
mov
cmpl
lahf
and
imul
frstor
pavgb
pop
dec
ss
xlat
fimull
loopne
orl
mov
in
sub
int
jmp
jmp
addr16
clc
mov
int3
stos
es
fiadds
outsb
mov
bound
mov
dec
xchg
mov
notb
inc
sbb
xlat
stos
std
sti
sub
pandn
ds
addl
aas
xchg
sub
adc
mov
push
lret
inc
pop
adc
gs
or
sub
pusha
xchg
xchg
cs
mov
mov
call
fs
push
ret
insb
rcl
fnstcw
leave
sub
mov
mov
das
mov
pop
push
cmp
xchg
add
jp
clc
sub
and
iret
mov
fwait
mov
fisubs
add
xchg
test
add
pop
push
sti
cmc
rcl
fimuls
je
rclb
insl
pop
mov
rorb
ror
xlat
mov
and
das
mov
dec
ljmp
shl
jl
inc
push
je
push
dec
sbb
adc
xor
pop
out
inc
sub
push
sub
sti
shl
jge
push
addl
mov
mov
jo
sub
ret
xchg
inc
cs
scas
fcmovb
jne
sbb
jge
popa
leave
stos
sub
in
movsl
push
push
push
lods
mov
cmp
fsubs
pop
dec
and
ret
adc
pop
or
lcall
mov
test
mov
arpl
test
cmpsb
pop
fldl
sub
int3
cld
add
lods
ljmp
roll
cmp
fisttpl
inc
push
scas
adc
add
and
rolb
andb
test
fdivrs
jae
iret
pop
adc
jp
mov
jae
popa
xor
leave
jecxz
stos
daa
push
adc
adc
xchg
outsl
out
fidivrs
push
leave
mov
hlt
and
cmp
pop
inc
ja
xchg
xor
int3
xchg
push
jb
hlt
cmp
movsl
jb
add
hlt
xor
pop
mov
mov
sub
mov
iret
sbb
jb
sub
mov
dec
mov
icebp
xchg
stos
scas
push
xorl
xchg
lds
in
stc
mov
sub
cmp
jo
pop
lds
cmp
jmp
sub
or
fwait
pop
aad
inc
sub
jp
out
out
adc
cmpb
xchg
fcmovnu
adc
dec
lods
addb
push
cmp
lods
imul
ret
inc
cmp
adc
lahf
jecxz
popf
pop
jmp
adc
enter
insl
jo
and
inc
jecxz
es
dec
mov
mov
mov
and
pop
mov
xchg
cwtl
arpl
movsl
loope,pt
push
testl
insl
xor
cltd
fsubrl
mov
in
or
lods
adc
gs
lock
xor
imul
outsl
sbbb
push
jne
fnstenv
pushf
cmc
imulb
adc
pop
xchg
cmpl
xchg
push
and
ss
adc
cmp
frstor
push
out
popf
lock
adc
nop
and
sub
mov
xchg
movsl
lret
xchg
xchg
jo
pop
adc
adc
push
out
sarl
mov
mov
or
repnz
push
pop
icebp
pop
inc
iret
jle
nop
mov
add
fwait
xchg
or
xor
hlt
adc
arpl
mov
js
push
adc
push
ficomps
or
xor
jno,pn
dec
push
popf
inc
mov
inc
hlt
pop
inc
ja
sbb
js
push
adc
icebp
mov
ds
in
pop
sub
pop
popf
jno
adc
add
loope
mov
jae
pop
xor
shrb
add
fcmovu
rcr
add
add
stos
push
cwtl
popa
enter
or
jo
pop
adc
test
dec
sbb
push
lcall
add
in
arpl
fwait
mov
sti
int3
push
jae
and
jo
push
dec
xor
jmp
nop
lahf
and
int
adc
imull
mov
adc
xor
cmp
nop
mov
dec
je
cmp
push
add
dec
int3
repnz
pop
inc
jbe
push
adc
js
push
adc
sub
mov
imul
fiaddl
jle
mov
loope
test
loop
mov
lods
iret
pop
adc
rolb
aas
mov
mov
inc
jl
scas
pop
dec
push
out
xchg
jns
sbb
sbb
push
add
scas
pop
mov
sub
mov
fsub
int3
shrl
xchg
mov
add
xchg
add
adcb
pusha
iret
pop
imul
and
jle
xchg
ss
add
add
adcb
lock
push
and
pop
jb
mov
sub
dec
push
or
inc
inc
and
out
test
jecxz,pn
inc
mov
mov
lds
adc
mov
das
cld
cmp
lods
lahf
mov
mov
push
adc
mov
addr16
mov
dec
add
fdivrs
loopne
pop
push
popf
sbb
dec
int3
fimull
push
and
mov
or
push
ja
mov
ret
repz
sub
jnp
xchg
mov
push
xchg
lods
jmp
jl
lea
mov
push
jno
out
ret
and
xor
jno
hlt
adc
xchg
stos
push
xchg
clc
or
sub
xchg
cmp
je
push
adc
imul
popa
dec
xor
xchg
cwtl
xor
lods
iret
pop
adc
jns
jmp
fs
jge
lods
cmp
and
jle
push
or
cmp
in
mov
jo
adc
cmpb
and
push
jmp
loope
xor
or
mov
mov
push
jne
loopne
ja
icebp
mov
mov
jp
js
bound
mov
imul
dec
cmp
imul
out
push
inc
or
jae
jno
leave
mov
popf
je
iret
jo
jg
aas
jle
scas
inc
jle
push
xchg
les
imul
movsl
fadds
xchg
aas
sub
sub
mov
push
call
or
adc
mov
test
shr
cld
icebp
imul
dec
out
scas
in
xor
adc
inc
xchg
and
fidivrs
in
mov
jecxz
xchg
xchg
loop
loope
xchg
addb
ss
aad
insb
push
mov
cmc
push
adc
movsl
loopne
frstor
movsl
dec
mov
es
or
inc
and
aad
mov
sbb
pop
push
outsl
icebp
jmp
mov
in
adc
dec
xchg
or
pop
cmp
nop
popa
pop
mov
pop
negl
insb
jle
jno
pop
outsb
fisttpll
push
dec
iret
inc
sub
add
xchg
fimull
jno
pop
lcall
xlat
dec
xlat
push
mov
xlat
call
jle
in
aad
and
ds
lods
mov
add
pop
movb
insb
ss
push
jno
aad
push
xchg
sub
mov
inc
push
daa
mov
imull
xchg
cwtl
aas
mov
mov
jne
adc
movb
add
add
les
testb
imul
ds
shrl
xor
xor
push
fiadds
lahf
aas
add
or
shlb
stos
fucomip
mov
mov
dec
push
fiadds
pusha
rcr
push
cmp
sbb
jns
lcall
push
lods
iret
pop
adc
mov
cltd
xchg
jmp
or
mov
dec
sbb
imul
and
fstps
jmp
mov
rol
push
or
test
dec
pop
sub
or
data16
subl
fisubs
sub
nop
mov
jg
push
sub
sub
pusha
rolb
and
popf
or
jp
cli
mov
jo
stos
xchg
xor
imul
mov
ljmp
jge
sahf
jmp
aad
mov
mov
cmp
pushf
sub
jp
or
imul
push
addr16
xlat
push
add
and
pop
adc
sbb
cmc
les
sub
sub
fists
add
int
push
xchg
xlat
cmp
addr16
push
and
push
cmp
int3
dec
lcall
in
fnstenv
or
sbb
fcompl
scas
mov
test
lret
inc
sbb
mov
lcall
lret
ret
ret
cmp
jmp
or
add
loopne
aam
and
jmp
cmpsb
in
mov
arpl
pop
pusha
test
mov
pop
xor
dec
inc
sub
inc
xor
dec
push
cmp
xchg
pop
and
inc
pushf
inc
out
sbb
aad
orl
ds
mov
mul
aad
push
add
mov
cld
mov
aaa
movb
cmc
mov
push
push
mov
stos
inc
xchg
movsb
out
lds
pop
daa
xor
sub
lock
movsl
jg
xor
movl
insl
outsb
clc
fisttpl
sahf
xor
leave
dec
stc
push
push
lea
push
add
sbb
test
jnp
jecxz
cltd
jecxz
cld
stos
aad
add
adc
lret
cltd
sbb
loop
sbb
sbb
mov
pop
fcmovbe
pop
test
int
in
sbb
or
dec
xor
pop
adc
repnz
jnp
stos
xor
ja
lcall
dec
adc
leave
sahf
jbe
mov
sbb
or
arpl
ljmp
jg
out
cmp
std
jle
add
iret
pop
adc
inc
or
leave
jl
pop
movsl
lods
out
xlat
lds
lock
inc
add
nop
xlat
push
xlat
jnp
orl
cs
sub
mov
arpl
add
push
pop
cs
out
data16
fwait
and
mov
or
imul
jo
cmp
jnp
or
insb
cwtl
repz
add
js
shl
or
sub
jb
ds
out
fwait
bound
add
int3
sub
test
and
insl
shrl
or
inc
xchg
adc
jg
cmp
rcll
fistps
ror
xchg
pop
jmp
jns
outsb
idivb
ret
mov
add
aad
or
lods
add
shrl
pusha
fldenv
add
sarb
and
iret
mov
lcall
push
sub
fcoms
and
pop
adc
push
inc
shll
out
push
subl
scas
movl
sti
cltd
pusha
stos
scas
imul
and
cli
pop
push
ret
fnstenv
push
add
or
ds
sub
lahf
or
mov
mov
mov
xor
adcl
push
outsl
cmpsb
sbb
subl
stos
and
mov
sarb
popa
cmc
insb
mov
mov
fwait
push
xor
push
ds
cld
lods
out
pop
mov
mov
push
fnstcw
popa
mov
and
lret
mov
movsb
test
mov
dec
arpl
arpl
lahf
movsb
xchg
das
mov
mov
cli
mov
jmp
adc
xor
call
jbe
les
push
jge
cmpsb
cs
addl
scas
sub
jg
push
test
mov
inc
sbb
imul
xlat
jns
push
pushf
add
sar
lahf
pop
jmp
push
dec
push
mov
mov
or
or
loope
shrb
xchg
jnp
fnstcw
sahf
mov
adc
test
push
ljmp
pusha
lcall
push
movsl
dec
loope
xchg
ret
lret
jmp
pop
loopne
je
arpl
incl
and
test
pop
lahf
fsubrs
ljmp
jp
push
clc
and
pop
dec
xor
push
and
nop
pop
pop
sbbb
in
or
dec
add
movsb
or
imul
jl
mov
jne
lods
cld
fdivrl
mov
repz
sahf
pop
or
push
pop
inc
jl
ss
add
inc
rcrb
imul
push
mov
gs
inc
push
test
ret
and
cmpsl
cli
push
insl
jnp
push
popf
es
int
aam
mov
and
outsl
jg
fiadds
pop
and
adc
or
insl
jle
loopne
sbb
inc
fsts
subb
idiv
cmpsl
movsb
jl
loop
push
add
cmp
pop
cwtl
mov
sbb
lea
nop/reserved
and
hlt
jp
outsl
icebp
jb
adc
scas
ss
mov
and
xchg
loopne
ljmp
les
insb
mov
dec
data16
inc
mov
inc
sub
adc
or
mov
pushf
es
mov
push
imull
push
jecxz
je
xlat
mov
fisttps
pop
insl
dec
mov
out
in
cmp
xchg
mov
daa
xchg
and
dec
inc
sbb
mov
movsb
repnz
mov
push
add
int3
pushf
insb
stos
rorl
mov
mov
lods
and
cli
mov
push
mov
repz
sbb
mov
xchg
es
out
fcoml
mov
loop
add
out
arpl
mov
std
lods
lret
mov
filds
adc
jo
adc
adc
jge
into
push
test
mov
fbstp
or
xchg
mov
mov
push
push
or
jne
jmp
pop
add
or
pop
ret
sbb
pop
es
xor
ret
sub
pop
mov
add
lcall
fsubs
cmc
or
or
jbe
std
fcmovbe
stc
dec
fmulp
fisttpl
add
fnstsw
rcrb
mov
xchg
and
test
ds
repnz
nop
fs
xor
ret
jo
mov
sub
das
popa
mov
rol
inc
bound
stos
iret
mov
imul
scas
jb
popa
jle
out
pop
cli
sbb
lea
pop
mov
cmp
ja
pop
lods
adc
adc
and
pop
pop
cld
push
cmp
xchg
les
cmc
or
leave
ret
int3
mov
xchg
and
scas
push
sub
sbbl
repz
frstpm(287
push
outsl
lahf
lods
cmpsl
mov
out
push
push
xchg
stos
mov
mov
adc
or
sbb
xchg
std
fimull
testb
shl
arpl
jmp
outsb
add
and
xchg
shrl
stos
cmpsl
flds
push
scas
pop
into
into
sbb
test
daa
mov
mov
jl
sbb
lahf
push
pop
cli
cmpsl
fsqrt
stos
fldl
add
xchg
pop
jmp
inc
push
in
je
sbb
push
in
inc
and
out
and
pop
push
jae
sti
ljmp
negl
push
inc
add
test
mov
or
and
call
jb
lds
ret
push
loop
movsl
mov
sub
jns
pop
shrb
pop
sti
loope
daa
pop
cmp
or
xor
push
mov
mov
aam
fiadds
arpl
testl
xchg
mov
mov
adc
aad
mov
mov
xor
xchg
pop
in
dec
call
and
jae
sbb
call
bound
sub
in
js
inc
sbb
xor
push
imul
cmp
movsl
fstpl
fisttpll
stos
and
stc
push
pop
xor
pop
sahf
std
pop
jnp
clc
inc
cmpsb
rcl
pop
lahf
add
lret
repnz
adc
cmc
xchg
push
es
and
test
das
sar
xchg
test
aad
test
insl
jbe
imulb
jecxz
mov
ljmp
dec
xor
xor
cmp
adc
mov
mov
cmp
inc
push
mov
test
add
jno
ja
cli
jae
arpl
push
cmp
sbb
pop
fisttpl
sti
loope
xor
jp
aam
xchg
je
mov
inc
insb
mulb
gs
aas
xlat
pop
jmp
ret
add
repz
mov
pusha
leave
imull
imul
sbbb
add
or
xor
shll
pop
ss
test
or
cmpsb
mov
mov
xchg
xchg
cmp
aaa
jmp
mov
les
stos
sbb
sbb
mov
lahf
mov
cwtl
jl
jno
xchg
xchg
shlb
mov
mov
sub
jg
jmp
lods
or
mov
sti
das
jno
aad
mov
sub
or
je
test
mov
xchg
scas
or
push
js
add
hlt
mov
subb
inc
out
mov
adc
push
adc
adc
mov
sub
mov
sbb
shr
testb
cmp
sarb
adc
mov
cwtl
jo
mov
push
mov
lcall
ret
mov
dec
in
ret
sub
les
gs
mov
mov
int3
xor
and
aam
jle
and
mov
inc
loopne
or
lahf
pop
dec
dec
mov
mov
pop
mov
dec
push
aad
sbb
ljmp
test
inc
lahf
xor
adc
aad
lods
add
mov
loope
and
mov
popa
nop
dec
and
push
ljmp
dec
jp
sbbl
testb
push
subl
xlat
dec
pop
jnp
cmpsl
xchg
sub
pop
inc
aas
hlt
or
popf
push
and
inc
mov
scas
pop
sbb
push
leave
fprem
xchg
sub
pusha
rorb
loopne
in
mov
in
mov
scas
push
test
popa
das
mov
stc
movsb
dec
xchg
outsl
xor
loope
jecxz
push
add
and
ja
rclb
adc
daa
push
cmp
mov
and
cmp
sti
sbb
push
leave
fprem
xchg
sub
pusha
rorb
loopne
test
mov
in
iret
jns
cmp
sti
xchg
popf
rcr
addr16
sbb
cmp
sbb
xchg
cmpsl
sub
jmp
push
icebp
adc
inc
pop
mov
adc
jge
push
pop
sub
add
in
push
inc
dec
mov
shl
arpl
jae
xchg
add
sbb
dec
movsl
xchg
jnp
out
pop
mov
inc
daa
or
or
xor
mov
mov
mov
mov
xor
push
inc
pop
pop
push
iret
jbe
nop
push
adc
or
pop
shlb
pop
scas
roll
mov
mov
ret
test
scas
sub
mov
nop
mov
addl
sbbb
pop
pop
push
cltd
cmp
ds
push
stos
push
mov
mov
mov
flds
inc
daa
or
stos
mov
lret
inc
xor
lods
nop
dec
push
push
add
pop
test
fiaddl
int3
push
inc
pop
ds
bound
sbb
or
push
out
sub
mov
rolb
loopne
xchg
scas
arpl
icebp
ja
mov
add
pop
int
add
mull
pop
inc
shr
and
mov
insb
dec
les
pop
aaa
cmp
jbe
js
cli
popf
mov
cld
or
inc
xchg
sub
pop
aam
jnp
test
add
aas
pop
stos
dec
adc
adc
mov
push
adc
sub
rcll
shll
lock
pop
and
xchg
fadds
xchg
sbbl
rcrl
push
ret
and
ret
jb
test
sbb
mov
testb
adc
pushf
jo
adc
jle
test
mov
adc
cltd
fcomps
stos
adc
jno
adc
xchg
dec
add
ss
insb
sbb
subl
fistpl
pop
mov
mov
lcall
adc
push
mov
retw
scas
ljmpw
pop
adc
and
pop
adc
rcr
fs
mov
sub
push
in
mov
mov
push
xlat
loope
and
adc
jno
or
adc
testw
ss
mov
stc
adc
subb
lods
popa
dec
add
out
adc
in
mov
adc
inc
leave
popf
sbb
das
dec
dec
adc
or
and
sbb
and
push
adc
push
adc
adc
imull
or
dec
fisttpll
cmc
std
hlt
int3
cmp
adc
or
pop
adcb
mov
adc
lret
add
sbb
dec
mov
roll
xchg
sub
pop
adc
insb
cmpl
adc
xor
pop
adc
jecxz
mov
ja
testl
fwait
arpl
xorb
adc
enter
imul
push
mov
fcomps
orl
mov
test
push
je
pop
or
shr
sti
jge
sub
imulb
fldcw
test
decb
push
jae
sarb
adc
sub
push
inc
push
cltd
xor
cmpsb
pushf
push
sarb
adc
fs
imul
into
ja
mov
dec
ret
int3
mov
cmp
pop
mov
add
pop
cmpsl
mov
sub
mov
xchg
mov
sub
mov
mov
xchg
push
movsb
mov
into
pop
adc
add
arpl
mov
pop
adc
out
fwait
ss
insl
cmpsb
mov
hlt
xor
daa
or
test
push
movsl
pop
cmp
adc
ficoms
xchg
xlat
inc
or
fnstenv
xchg
sub
adc
cmp
jnp
jg
cmpsb
inc
mov
sub
or
mov
sub
xchg
fs
lret
pop
adc
in
adcb
into
pop
adc
pop
inc
or
cmp
lods
pop
jmp
push
testb
jo
adc
sub
push
jge
add
lods
add
test
jne
cmpb
jo
call
push
fwait
jl
add
pop
adc
ljmp
mov
imul
gs
cmp
cmc
inc
lds
sti
adc
cmpsl
mov
jmp
repnz
and
dec
or
or
dec
jg
jo
adc
pop
fwait
jp
ret
cmpsl
sub
pop
repz
jl
sbb
push
adc
fisttpl
sub
push
insb
scas
xchg
pop
int
fldl
outsb
aam
shll
add
or
sub
push
les
mov
ljmp
out
xchg
cwtl
repz
and
cltd
pop
add
cmpsl
sub
pop
pop
inc
xor
adc
js
lahf
cmpsb
push
inc
sub
imul
jle
xchg
xchg
add
cmp
cmp
xchg
mov
neg
ja
mov
add
xor
insl
lahf
xor
mov
loope
das
stc
imul
popf
ds
lods
iret
pop
adc
repnz
arpl
add
mov
mov
out
xchg
sub
pop
les
out
mov
loope
sbb
adc
fimuls
mov
push
sub
add
shlb
das
jmp
lods
pop
sub
cwtl
sbb
lret
rcll
sbb
dec
lcall
mov
in
cmp
push
push
or
pushf
ret
movsl
cmpsb
insl
pop
testl
push
test
jge
stos
das
enter
lods
fwait
add
cmp
xchg
stos
idiv
inc
in
jo
pop
insb
sbb
stos
jecxz
scas
cmp
ja
mov
in
test
push
movsl
outsl
push
ljmp
rclb
xor
jmp
cli
std
lock
mov
lea
repnz
dec
pop
push
and
dec
cs
xor
sbbb
pop
mov
cwtl
aad
lea
out
repnz
cs
fildll
jg
push
sub
enter
jb
out
test
loope
fidivrs
incl
mov
pop
mov
mov
sbb
xlat
adc
jns
fwait
mov
loopne
lds
lods
pushf
jmp
rcr
xchg
and
pop
insl
sub
lods
push
jo
push
les
pusha
sarb
loope
push
dec
xchg
lods
cltd
cmpsb
lock
cmpsb
and
push
roll
test
arpl
dec
shll
lods
iret
pop
adc
push
mov
aad
jne
and
out
shlb
cltd
jae
mov
je
mov
pop
push
fdiv
adc
arpl
dec
ss
push
add
aaa
aas
jle
pop
push
rorl
incl
daa
adc
push
bound
lret
subl
mov
cmp
lods
iret
pop
adc
and
and
movsb
and
into
int
push
cltd
rolb
push
cmp
rclb
dec
sbb
xchg
fildll
lods
repnz
lds
movsl
push
notl
fnstenv
add
in
push
dec
les
inc
mov
push
mov
pop
mov
adc
or
dec
push
jae
cmp
inc
xchg
sbb
mov
xchg
pop
roll
jmp
mov
mov
sbb
push
addr16
pop
mov
rcl
rorb
mov
ljmp
lcall
xchg
stos
push
mov
mov
aas
hlt
or
and
push
in
aad
xlat
insb
jno
test
sbb
and
cmp
data16
scas
jmp
mov
xor
lods
lods
test
movsl
jbe
xchg
mov
dec
mov
aaa
sar
inc
js
fmuls
test
addr16
push
scas
and
xor
cli
sarl
shrl
cmp
or
fists
pop
out
dec
mov
pop
movsl
cmp
jb
and
sbb
ja
xlat
adc
cltd
mov
jl
push
out
pop
and
test
push
bound
push
pop
std
pop
pop
cmp
pop
inc
cmp
pmaxsw
jne
rolb
adc
xlat
push
sbbl
lods
lock
pop
adc
rorb
push
xchg
fbstp
sahf
lods
xor
sub
scas
push
rorl
ror
add
loope
dec
ret
push
mov
jmp
dec
ds
or
add
mov
mov
mov
movsl
xchg
mov
dec
mov
ret
ds
jecxz
and
push
or
stos
inc
xchg
scas
fwait
movsb
mov
cmc
lods
iret
pop
adc
in
fs
es
fistps
mov
cmp
sbb
ljmp
mov
aam
roll
pop
adc
sbb
mov
rcrb
pop
adc
sbb
inc
repnz
in
jl
or
enter
mov
dec
cmpsl
cmp
icebp
pop
pop
int
mov
ret
xor
lods
cli
mov
inc
xchg
pop
cmp
fisubrs
push
mov
pop
popl
mov
lret
or
cli
ljmp
je
fstpt
imul
cltd
xchg
in
xchg
or
and
popf
mov
jmp
pop
out
or
mov
cli
xor
pop
sub
xor
aad
rolb
mov
lds
popf
push
test
shrb
test
and
ja
lret
ja
movsl
mov
ds
push
mov
and
imul
je
das
xlat
out
push
int
sbb
push
adc
xchg
xchg
jg
pop
es
arpl
ret
lret
mov
bound
scas
mov
outsl
push
mov
cltd
xchg
mulb
lds
loopne
and
ja
rol
sahf
fstpt
aad
jno
pop
cmp
movsb
sub
adc
inc
das
jmp
rcr
bound
movsl
adc
inc
sub
mov
mov
addl
push
fwait
adc
mov
pop
mov
mov
and
adc
mov
hlt
jns
roll
sub
movsb
adc
loopne
mov
or
adc
mov
stos
push
and
lods
lods
lods
shlb
mov
cwtl
aas
jle
pop
cltd
jns
lahf
lods
cmpsb
inc
and
inc
sub
xchg
push
aad
sbb
scas
cmpl
adc
jne
mov
push
xchg
pop
stos
xor
push
ret
mov
into
ja
or
and
lcall
lods
xlat
pusha
scas
cld
push
dec
sahf
xor
ljmp
add
push
or
dec
movsb
cmp
xor
xchg
sub
mov
sti
push
xchg
inc
mov
shrl
mov
lahf
fldl
push
scas
pop
sbb
lahf
push
push
mov
pusha
rolb
icebp
push
out
xchg
lods
push
scas
sti
xchg
sbb
testb
inc
jnp
lahf
aas
or
pop
cli
idivl
push
aad
sbb
fwait
pop
hlt
loop
inc
pop
out
push
faddl
add
fwait
pusha
scas
adc
mov
stos
push
and
lods
lods
lods
shlb
push
pop
mov
jle
pop
lret
outsl
xchg
pop
lret
jne
mov
sbb
std
jns
outsl
pop
lods
fidivrl
cli
push
ja
cmp
out
rorb
push
shll
scas
stos
cltd
scas
xlat
pusha
lcall
push
jno
dec
outsl
push
push
jecxz
or
cmpsl
pop
fmull
iret
pop
adc
cmpsl
scas
faddl
push
aam
mov
popf
pop
jl
or
xor
jl
movsl
cmpsl
mov
or
cmp
pop
in
loope
xchg
mov
movsb
icebp
test
mulb
or
or
repnz
inc
loop
test
pop
fbld
test
orb
sub
clc
mov
rorl
mov
rolb
jp
jg
fwait
inc
add
cwtl
add
jg
ficomps
mov
clc
jmp
jne
out
sbb
inc
sub
adc
jg
lret
push
mov
add
xor
push
imul
lea
imul
cld
call
add
arpl
lds
fcompl
mov
push
xchg
sti
inc
lret
or
ficoms
inc
jno
adc
mov
shl
adc
mov
mov
push
std
in
mov
call
lods
iret
pop
adc
ja
addr16
or
and
xchg
dec
leave
jo
jno
mov
fstp
sub
ret
loopne
out
push
js
in
hlt
je
in
push
dec
xor
cmp
out
dec
pop
push
pop
lods
fwait
cmc
out
push
cwtl
ds
jmp
push
xchg
xor
mov
add
add
mov
or
hlt
sub
hlt
jmp
adc
bnd
xor
xchg
sub
mov
xor
adc
xchg
xchg
adc
push
lret
in
cli
mov
sbb
xchg
movsl
pop
add
mov
push
fsubrl
int3
jns
push
gs
orl
pop
xchg
or
cmp
mov
jne
cmpsb
rorb
addr16
aad
test
mov
jp
sub
outsb
popf
fadd
xchg
in
adc
xchg
outsl
iret
pop
adcl
jp
out
scas
push
jb
push
pop
lods
iret
pop
adc
xor
push
lods
shl
pushf
dec
dec
cmpl
movsl
or
into
fidivrl
sub
arpl
and
leave
je
dec
icebp
adc
pop
jecxz
xchg
push
test
mov
sbb
sub
cmpsb
mov
sbb
xchg
flds
and
jbe
jo
pop
in
imulb
mov
cmp
inc
rclb
popf
pop
stos
push
shlb
int3
push
dec
fildll
ror
arpl
adc
pop
or
add
mov
push
adc
fwait
movsl
dec
pop
or
mov
inc
ret
data16
lods
iret
pop
adc
mov
push
cmpsb
stos
cmp
xor
push
movsb
pop
add
xor
icebp
pop
inc
mov
cmp
stos
push
fwait
add
lcall
lret
cmp
je
pop
outsl
cmp
in
push
mov
or
xchg
sub
push
fsubs
addl
dec
xchg
lods
cltd
cmpsb
adc
xchg
stos
lods
roll
sub
and
add
mov
push
popa
or
or
out
mov
jne
adc
sti
xor
sti
cmp
cmpsb
push
imul
iret
xchg
popa
test
shll
mov
movsl
fisubrs
push
add
mov
or
and
inc
add
cmp
push
scas
xlat
dec
jecxz
sub
mov
mov
rolb
aas
pushf
jge
iret
jge
or
stos
push
or
div
sub
loopne
dec
sahf
cwtl
or
test
mov
mov
pop
inc
inc
jl
lock
sarl
cmpsb
aas
daa
push
sar
jae
clc
add
cli
lods
add
test
imul
pop
in
push
mov
repz
mov
or
sahf
xchg
cli
addl
sub
inc
into
jns
add
push
sti
pop
push
lds
sahf
loop
dec
mov
clc
adcb
pop
xchg
mov
je
xchg
call
popf
fnstsw
dec
idivb
cmp
xor
add
inc
and
and
jmp
sub
push
icebp
lahf
aaa
icebp
and
push
incb
jo
adc
sti
push
out
fadd
fstpl
and
adc
cmovg
and
adc
add
or
push
loop
insl
sub
push
cmpsb
ss
arpl
mov
jns
cld
xchg
clc
and
adc
es
roll
adc
andl
mov
or
add
dec
jbe
cs
xchg
mov
js
mov
cltd
ljmp
mov
dec
mov
and
adc
or
pop
test
aas
add
inc
in
cmc
cmpsb
adc
jae
jg
loopne
pop
sbb
pusha
and
adc
cwtl
jne
ja
sahf
sti
push
leave
sbb
inc
mov
stc
js
push
or
test
push
stc
sbb
pusha
and
adc
adc
and
adc
xchg
or
and
das
int3
je
mov
outsb
pop
fbld
dec
and
loop
sub
sub
push
dec
enter
mov
or
test
icebp
in
jecxz
roll
adc
inc
in
or
cmp
int
pop
test
outsl
and
popa
fwait
mov
xchg
bnd
pop
cmpsl
clc
popa
jne
negb
inc
out
cs
loop
fidivl
test
adc
jecxz
push
push
xor
fsubrs
leave
inc
loop
rdtsc
sub
dec
je
cmp
jne
ret
popa
xchg
xchg
xchg
nop
nop
mov
mov
nop
nop
call
xchg
xchg
xchg
nop
nop
mov
mov
nop
nop
addl
xchg
xchg
xchg
nop
nop
mov
mov
nop
nop
sub
xchg
xchg
xchg
nop
nop
mov
nop
nop
addr16
xchg
xchg
xchg
nop
nop
mov
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
mov
nop
nop
dec
xchg
xchg
xchg
nop
nop
mov
nop
nop
jne
xchg
xchg
xchg
nop
nop
mov
mov
nop
nop
xor
push
push
jp
sub
movsb
push
add
adc
dec
push
mov
add
jo
or
dec
loop
mov
add
aad
and
sub
lods
cmpsl
movsl
and
pop
adc
roll
mov
ficoml
mov
xchg
push
je
mov
push
in
fwait
andl
testb
jg
out
inc
mov
push
xchg
dec
js
or
jle,pn
xchg
testb
push
or
and
jb
adc
and
or
mov
xchg
ret
xorb
inc
jns
jno
aad
js
or
mov
or
cmpsb
pop
movsl
and
mov
mov
repnz
fcmove
pop
shll
je
rorl
and
adc
jae
and
imul
inc
push
add
xchg
fisttpll
stos
mov
push
fst
test
sbb
jo
mov
neg
push
adc
dec
xor
push
cli
out
insl
cmc
jne
rorb
sub
or
loope
push
je
push
adc
data16
sub
sbb
das
in
test
mov
pop
mov
pop
stos
insb
xor
jecxz
xchg
mov
movsl
cmp
sub
in
mov
push
pop
mov
imull
stc
jne
clc
xor
sahf
jge
adc
inc
sti
xchg
add
and
insl
cli
movsb
sti
shld
ds
loop
xchg
xchg
add
cmp
and
std
and
pop
mov
mov
clc
fsubs
daa
movsb
mov
jo
adc
sti
inc
sub
out
adc
jp
dec
inc
pop
or
js
push
xlat
stos
inc
ficompl
or
push
pop
sar
cmp
pusha
sbb
clc
std
cli
push
fisttpll
fcomp
std
pop
inc
jae
mov
hlt
cltd
cmp
jl
out
jb
in
test
test
push
mov
insl
sub
in
pop
mov
hlt
sub
jnp
sbb
adc
pop
flds
lock
mov
cmpsb
mov
jp
push
paddd
jg
push
lock
inc
xor
cmp
adc
pop
dec
imul
sub
mov
cmpsb
fst
xchg
and
fsubl
pusha
and
mov
aas
sub
xor
sub
push
mov
push
aam
mov
mov
adc
lcall
push
adc
lods
lock
dec
push
mov
adc
rolb
icebp
push
andl
call
fistl
outsb
test
mov
fildl
js
and
data16
jo
or
dec
dec
sahf
nop
mov
mov
or
scas
mov
push
and
cli
movsl
js
sbb
inc
mov
push
test
push
dec
dec
xchg
cs
frstor
or
into
inc
ss
cmp
shl
mov
push
fs
pop
call
xchg
in
push
out
jb
adc
stos
sbb
jmp
loopne
imul
out
or
outsl
sbb
cmp
pop
andb
adc
or
jl
and
jno
cwtl
insb
sbb
sub
xchg
adc
pop
ja
xchg
outsb
shll
jecxz
add
arpl
icebp
jle
fcomps
int
shll
out
nop
test
arpl
or
sub
std
jno
in
xor
adc
xor
out
imul
lods
jmp
into
and
ja
mulb
mov
imulb
int
movsb
pop
mov
pop
ds
outsb
xchg
add
ljmp
xor
iret
imul
jmp
ficoms
insb
jb
adc
aas
sahf
shrl
bound
icebp
fisubl
mov
sub
and
pop
adc
push
cmp
cmpsl
mov
lock
cltd
stos
xchg
insb
jo
or
movsb
pop
dec
loop
dec
push
xor
roll
or
jge
iret
push
in
scas
pushf
or
sub
lods
pop
loopne
sub
jo
or
push
aas
pop
jmp
stos
lods
mov
cmpsb
cmpb
imul
addl
mov
ficomps
stos
push
inc
push
btrl
cmp
xor
cmpl
dec
xchg
data16
outsb
imulb
jbe
test
pop
loope
cmp
cmp
jne
test
jg
mov
adc
adc
lods
pop
xor
in
and
push
notb
aam
jo
pop
adc
movsb
xchg
push
mov
pop
jmp
sbb
shlb
sbb
jmp
sahf
loope
pushl
test
test
sbb
loope
jg
jo
and
sbb
jg
and
push
scas
mov
mov
dec
enter
push
lahf
test
add
lods
dec
xchg
sub
push
mov
xlat
test
sub
mov
roll
adc
xchg
mov
lock
stc
sub
jg
cwtl
push
pop
sbb
movsl
lret
outsb
shlb
mov
add
pop
pushf
into
mov
jl
loop
shlb
inc
popa
fdivrl
xchg
pop
inc
dec
out
mov
jge
ret
ljmp
and
pop
adc
dec
mov
cltd
push
fucom
ret
mov
aad
mov
cld
mov
dec
out
push
in
add
sub
pop
sub
pop
adc
clc
push
adc
adc
pop
in
and
pop
loopne
jns
jl
ficomps
scas
and
dec
mov
adc
bnd
aas
fcmovbe
pop
push
mov
push
aad
hlt
lods
iret
pop
adc
movsl
add
fninit
les
andb
adc
pop
adc
add
pop
xor
pop
adc
fisttps
push
fsubrp
lods
jle
fcoml
inc
mov
inc
fmul
leave
jge
shr
ss
xorb
jp
mov
adc
in
adc
jp
mov
adc
xor
add
add
or
or
jmp
fs
jae
lea
xchg
push
xor
push
iret
pop
adc
pop
adc
sti
sti
mov
out
push
push
lds
jp
out
fsubrl
pop
das
dec
icebp
xchg
cmc
ret
je
cmp
add
das
xor
pop
adc
mov
push
adc
xchg
ret
push
aad
cld
push
adc
lret
in
cld
movb
into
pop
adc
push
lock
or
xchg
mov
mov
cmpsb
loop
jmp
movsb
mov
testl
in
mov
shl
test
insb
iret
cwtl
sbb
nop
push
and
fs
ljmp
dec
lcall
mov
cwtl
sub
adc
and
ss
add
cmpl
leave
adc
movsl
pop
mov
repz
inc
in
sahf
mov
push
push
cmp
add
test
cmp
xor
pop
adc
add
inc
int
push
mov
mov
mov
adcl
fadd
movsl
movsb
sub
adc
sub
adc
cld
jne
into
int
jp
dec
push
sarl
cmp
jge
scas
or
sub
outsl
and
xor
or
les
imul
stos
mov
repz
popa
cltd
cmp
adc
shlb
xor
or
cmc
adc
xchg
pop
mov
pop
xor
xchg
sub
fs
dec
arpl
pop
push
cltd
arpl
lods
sub
mov
outsl
and
cmp
pop
fs
cmpsl
cmp
test
mov
sub
pop
in
add
push
mov
inc
mov
rolb
sub
cs
inc
add
scas
sti
sbb
clc
dec
xchg
repz
jae
sub
add
cltd
aad
mov
iret
pop
adc
hlt
mov
popa
jg
stc
daa
sbb
or
sub
js
call
popa
cltd
xchg
adc
push
sub
aas
mov
call
iret
pop
adc
out
xor
adc
pop
adc
lods
jbe
adcb
xchg
lods
iret
pop
adc
cli
pusha
fcompl
add
lods
iret
pop
adc
push
mov
mov
in
and
lods
iret
pop
adc
xchg
fistps
adc
mov
pop
adc
dec
loop
addl
xor
push
pop
lods
cmp
pop
iret
pop
adc
cmpsl
push
popa
popa
shll
cmp
cmpsb
xchg
and
mov
lret
push
call
push
push
bound
stos
add
pop
or
pop
daa
aad
int
xchg
ret
pop
lret
mov
pop
enter
inc
mov
scas
xor
shlb
dec
es
adc
cmp
push
sub
mov
out
sbb
sub
mov
mov
outsb
and
pusha
mov
inc
incb
outsb
repz
insl
repnz
std
ja
mov
cmpsl
add
jno
andl
ja
in
int3
nop
mov
mov
dec
xchg
jae
stc
hlt
xor
out
mov
les
mov
ss
mov
ja
dec
test
rcrb
pop
dec
adc
jne
mov
stos
dec
push
lock
cmc
sahf
sub
and
stc
add
inc
inc
mov
lock
push
adc
adc
cmp
inc
xchg
xchg
jno
pop
shll
xor
stc
sbb
sub
sub
xchg
and
adc
sbb
and
add
mov
std
mov
cmp
test
ror
cmpsl
inc
sub
rcr
add
cmp
push
adc
cmpb
hlt
mov
jecxz
movsb
std
sbb
push
lods
fimuls
jb
fwait
aam
imull
arpl
mov
push
jne
or
adc
in
rolb
adc
inc
adc
xchg
push
mov
push
in
rolb
adc
fdiv
mov
dec
jb
movsb
pop
pop
addr16
rolb
adc
out
scas
mov
rolb
adc
rolb
adc
lret
mov
idiv
rolb
adc
scas
ficoms
hlt
jge
adc
je
rolb
adc
stc
jae
ljmp
mov
outsb
pop
gs
pop
fiaddl
or
fisubrs
aaa
jge
and
in
rolb
adc
sub
cmp
sub
pop
adc
fildl
pop
pop
push
addr16
in
rolb
adc
sub
lahf
in
rolb
adc
ss
in
rolb
adc
add
pop
adc
mov
movsl
mov
cltd
jle
stos
push
or
enter
cmpsb
das
mov
cmp
leave
sti
or
fldl
test
push
and
clc
jnp
data16
mov
push
roll
jge
inc
ret
aam
ja
pop
sti
push
and
jle
sbb
and
addl
fidivrl
shll
stos
outsl
outsl
or
fmul
pop
adc
xchg
cmp
adc
push
notb
fnstcw
inc
xchg
jg
je
in
add
pop
scas
and
fcompl
loope
fdivs
lahf
int3
daa
rol
scas
pop
mov
or
xchg
pusha
rolb
or
mov
jne
aad
jecxz
aam
or
mov
and
adc
xor
lahf
aas
shrl
rolb
adc
cmc
aam
repz
mov
ficomps
mov
push
adc
inc
jecxz
pop
rolb
adc
dec
imul
sarl
xor
and
adc
jno
cli
inc
in
rcr
jle
imul
and
adc
aas
jle
rolb
or
out
shl
push
scas
sti
sbb
shlb
ds
mov
aas
jle
pop
lahf
dec
outsl
sbb
aad
lock
into
data16
xor
in
inc
dec
std
cli
testl
into
or
mov
addr16
and
std
push
jle
inc
jecxz
hlt
mov
sar
fwait
mov
lods
and
push
cmp
in
rolb
adc
push
int3
push
jp
cmc
inc
scas
addb
stos
pop
lds
jno
xor
mov
lret
mov
push
mov
add
cli
add
pop
mov
or
fstpt
pop
mov
popa
pushf
sbb
or
and
mov
sub
mov
xchg
scas
sub
adc
cli
sti
aam
xchg
add
jge
jbe
xor
in
rolb
adc
and
lods
mov
jle
imul
add
xchg
cmp
ret
xor
sub
mov
adc
daa
mov
pop
adc
push
jle
out
fadds
aam
pop
adc
sti
les
mov
pop
mov
pop
adc
jbe
jne
mov
sub
sub
fbld
cwtl
jle
popf
loop
dec
loop
mov
cld
and
fmul
pop
adc
call
dec
adc
test
inc
sarl
shll
and
popa
mov
pop
adc
xlat
enter
adc
sbb
or
iret
pop
adc
jg
lock
stos
ss
scas
push
lock
lods
shlb
adc
xchg
adc
lret
push
insb
mov
stos
add
std
push
adc
cld
xchg
outsb
sub
mov
dec
movsb
push
jge
lcall
or
aad
push
and
jns
jno
push
and
xor
push
adc
xor
push
movsl
ds
and
push
outsb
mov
jae
mov
adc
iret
pop
adc
mov
movsb
repz
pop
adc
adc
adc
scas
adcl
cmp
or
cmc
cmpsb
lock
adc
gs
flds
mov
leave
xchg
lds
mov
rolb
adc
and
aad
out
push
xchg
outsb
popf
or
pop
push
popl
mov
bound
lds
pop
adc
cmc
imul
add
jecxz
rolb
adc
scas
push
out
inc
pop
mov
xchg
test
pop
call
lods
pop
adc
enter
pop
cltd
xlat
js
adc
mov
cltd
mov
repnz
sub
pop
rolw
jg
in
rolb
adc
sub
push
test
pop
or
sub
mov
pop
icebp
mov
in
addl
inc
adc
pop
mov
pop
cmpsl
aam
inc
mov
lods
and
mov
add
push
adc
xchg
mov
or
mov
sub
inc
push
xor
rolb
iret
es
mov
push
test
sbb
rolb
adc
or
lahf
imulb
mov
fwait
stos
popf
iret
js
jecxz
sbb
scas
pop
jl
je
mov
jbe
inc
jg
roll
adc
aam
hlt
jge
adc
pop
into
jae
rolb
in
push
shrl
mov
mov
and
jns
incl
pop
scas
pop
enter
pushf
icebp
push
lods
mov
pushf
aas
jle
rcrb
in
xchg
rcrl
push
jbe
push
xchg
push
fcompl
lds
sub
inc
pop
mov
jbe
loope
fbstp
popa
cwtl
fimuls
testb
xchg
sub
rcr
jo
pop
outsl
imul
rclb
test
sbb
out
mov
inc
cltd
mov
ret
rolb
adc
pop
jbe
mulb
test
addr16
push
lods
adc
or
push
push
push
fisttpll
pop
lea
cwtl
cmc
push
and
sti
iret
dec
imul
sub
hlt
ficomps
movsb
lea
aas
fiaddl
cmp
ds
rolb
adc
sub
and
rolb
adc
aaa
dec
xchg
sub
repz
cmpsl
int
cmpsl
inc
sbb
mov
dec
sub
in
xlat
aam
data16
imul
add
addr16
loopne
lods
mov
scas
push
mov
xchg
jp
xchg
int3
push
xchg
mov
loope
iret
aad
push
mov
and
and
cmpsb
mov
iret
mov
jnp
jmp
sub
ja
fwait
push
mov
mov
jge
xchg
adc
pop
xchg
mov
pushf
dec
divl
cmp
adc
or
mov
or
fldl
sub
mov
push
push
dec
jg
mov
aad
adc
shll
rcrb
jp
xor
or
cmpsl
add
xor
or
cmpl
adc
leave
pop
adc
or
arpl
cld
mov
or
outsl
push
mov
lods
sub
adc
xchg
in
fdivl
pop
adc
or
mov
jp
lods
iret
pop
adc
pop
iret
pop
adc
mov
add
insb
stos
ss
fmuls
jp
sub
jnp
dec
push
ret
insb
sbb
into
push
imul
or
lock
movsb
jnp
ljmp
xchg
mov
fcoml
xchg
xlat
loope
dec
sbb
fisubrs
jl
push
sbb
popa
inc
leave
push
in
sub
adc
shlb
adc
scas
push
leave
imul
dec
sbb
hlt
test
repz
xlat
iret
outsl
sub
lcall
out
xchg
es
mov
mov
lds
xlat
dec
mov
pop
lods
dec
mov
mov
sbb
push
adc
repz
sub
dec
mov
pop
nop
outsl
mov
das
xchg
push
push
sub
adc
mov
test
jge
mov
xor
mov
dec
inc
sahf
scas
adc
ja
cmp
add
xchg
pop
dec
xchg
pop
dec
xor
loop
test
into
les
shrb
mov
mov
in
add
or
inc
mov
rol
mov
ds
sub
jmp
mov
aaa
pop
mov
and
push
movsb
sub
dec
mov
jl
int
subl
cmp
outsb
aad
push
test
scas
lods
std
add
lods
pop
dec
push
xor
push
adc
ret
inc
mov
mov
into
ret
or
fmuls
add
jns
int
add
mov
inc
mov
mov
fs
insb
fwait
cmp
or
jae
movsl
pop
mov
push
aam
sub
popf
fs
ds
in
push
mov
pop
lret
pop
xchg
outsb
jae
bound
push
test
aaa
test
xlat
out
xor
add
push
adc
or
ss
movsl
sub
xor
push
sub
ja
push
and
cwtl
sti
testb
shr
mov
ljmpw
fsub
test
ds
mov
push
sub
mov
dec
les
dec
push
pop
and
stc
aad
inc
sub
or
sub
lods
lahf
cmc
pushf
roll
mov
ss
inc
add
addb
scas
pop
dec
add
pop
pop
iret
rolb
dec
push
imul
aaa
fstpt
xor
adc
scas
sub
ljmp
and
pop
push
xor
andnps
inc
mov
pop
incl
cmpsl
push
push
jmp
daa
push
addb
or
shl
pop
mov
mov
lds
mulb
in
lea
sbb
cmovo
test
shr
movsb
faddl
es
outsl
testb
imul
mov
mov
inc
aad
xor
fldt
mov
mov
sar
lahf
or
in
cli
mov
and
clc
mov
xchg
mov
dec
jmp
mov
cli
lods
popa
jmp
dec
mov
jae
jbe
in
pusha
shlb
in
dec
mov
jbe
fs
call
xor
xchg
pop
sbb
inc
push
in
test
aas
jne
jle
hlt
adc
jg
aas
jbe
xchg
and
stos
mov
aas
adc
arpl
jp
add
mov
imul
cmpb
push
pop
add
mov
roll
xchg
and
imul
pop
scas
negb
mov
mov
dec
jno
outsl
pop
incb
adc
cmp
stos
push
cwtl
xchg
mov
mov
frstor
mov
pop
scas
loope
push
addr16
scas
mov
mov
outsl
dec
test
inc
xor
in
inc
mov
and
es
pop
mov
mov
lcall
add
xor
out
fildll
xlat
outsb
iret
mov
ret
push
in
andb
imul
notl
or
sub
std
jle
subl
lods
mov
lock
lods
adc
pop
cld
imull
dec
enter
aad
cwtl
popa
and
outsb
outsb
mov
pop
xor
in
pop
dec
sti
mov
insl
adc
cmpsl
lds
xor
jg
addr16
dec
test
sbb
inc
mov
test
inc
ret
js
std
dec
pusha
mov
mov
xchg
cmp
mov
sub
and
cmp
cwtl
mov
fimuls
sarl
jae
out
push
sbb
or
stos
dec
jne
lock
jl
hlt
pushf
popa
mov
pop
cli
addl
sub
or
ljmp
jle
sbb
cli
mov
lods
popf
pop
sub
clc
scas
aam
fdivr
pop
into
dec
xchg
cmp
rolb
aas
or
mov
imul
cwtl
push
sub
gs
xor
hlt
or
push
xchg
leave
stos
stos
fstpl
inc
movsl
shlb
int3
dec
lahf
aas
mov
jno
in
push
pop
rol
inc
mov
push
mov
inc
cmc
xchg
mov
aas
hlt
push
popl
jae
loop
mov
mov
aam
xor
sub
jae
dec
insl
push
push
pop
cltd
push
inc
push
adc
jne
fisubrl
repnz
mov
pop
adc
mov
std
jno
in
push
push
push
cli
sub
pop
mov
scas
sahf
test
cmp
icebp
inc
test
imul
add
sub
dec
inc
mov
mov
lock
push
push
repnz
push
xor
pop
lds
xchg
cmpsb
inc
arpl
std
lahf
push
gs
loopne
mov
jno
in
push
outsl
sbb
push
inc
add
pop
repnz
push
and
jbe
jmp
push
sub
std
sti
andb
push
mov
push
xlat
outsl
inc
cltd
add
addl
or
es
dec
push
scas
or
scas
sub
dec
add
popa
hlt
outsl
stos
test
adcl
hlt
pop
xor
mov
push
mov
in
outsb
inc
mov
xor
roll
loop
popa
lcall
sub
push
and
int
push
insl
lcall
fstpl
dec
scas
inc
mov
aam
pop
jecxz
adcb
loopne
pop
cmp
inc
push
mov
mov
xor
mov
push
sahf
push
dec
cmp
hlt
in
sub
add
aam
xor
inc
or
xor
xchg
add
mov
sahf
addb
jno
jno
fwait
dec
pusha
jmp
add
mov
sbb
mov
add
inc
mov
and
sub
loop
repz
sbb
push
mov
or
cmp
sub
es
repz
push
jl
ja
clc
scas
imulb
ja
xor
mov
aam
int3
mov
cltd
test
jp
add
jl
fmuls
jecxz
clc
push
mov
shrb
imul
ret
push
ljmp
mov
in
adc
dec
in
add
cwtl
jp
ffree
mov
xor
sub
jmp
jno
fwait
mov
inc
loopne
adc
or
pop
push
xchg
and
testb
xor
mov
mov
jmp
in
sbb
mov
lods
enter
sbb
xchg
or
sub
cmpsb
cmp
mov
jecxz
fldl
das
adc
xor
mov
les
xchg
shl
jmp
pop
cwtl
cmp
adc
shl
addr16
rorb
jo
leave
movsb
dec
sub
pop
test
aad
xchg
cmp
fisubrl
inc
movsb
sub
sbb
movsb
stos
test
es
add
or
push
cmp
test
outsb
pushf
adc
mov
out
js
leave
xor
rcr
fwait
mov
xchg
loope
outsb
pop
xchg
mov
loope
mov
call
je
jnp
mov
xor
and
xchg
and
sub
jb
outsl
imul
das
jbe
cwtl
lock
sahf
fadd
push
cmp
cmpsl
mov
or
or
ficompl
and
fwait
pop
in
cltd
ja
dec
in
fdivs
pop
inc
jae
addr16
inc
sub
pop
out
mov
add
sti
push
sub
push
xchg
ret
dec
faddl
mov
bound
rorl
adc
add
aam
nop
aad
adc
mov
lods
inc
imul
push
lods
pop
mov
int3
ja
add
jl
cmp
mov
arpl
fstl
sub
fstpl
cmp
rcr
pop
lods
pusha
hlt
and
adc
add
or
pop
outsl
in
sbb
ret
fld
aaa
leave
sub
xchg
inc
pop
mov
sub
repnz
adc
push
setl
or
cmc
sub
enter
adc
pop
sbb
mov
pop
inc
mov
imul
cwtl
jmp
pushf
sub
adc
fsts
popa
mov
sub
adc
lds
cmpl
adc
mov
xchg
nop
cld
fistps
inc
cmpsb
fdivl
adc
jbe
test
inc
add
jp
dec
xchg
mov
stos
aam
push
enter
rorb
pop
dec
push
pushf
sub
adc
cmpsb
lea
sub
adc
pushw
cld
mov
adc
push
insl
pushf
sub
adc
rcll
jle
sub
adc
adc
sub
pushf
sub
adc
xchg
mov
mov
sahf
aad
fsubp
je
scas
subb
adc
mov
nop
sub
adc
movsl
push
mov
or
outsl
push
xchg
sub
adc
stos
jne
sub
adc
xchg
pop
daa
rclb
test
shll
mov
fisubl
stc
loop
ret
fstpt
jno
mov
sub
mov
and
lea
scas
xchg
sbb
cmp
pushf
fidivs
xor
cmpb
and
sarl
nop
dec
into
mov
push
pushf
jmp
and
and
xchg
add
sub
fcompl
ret
dec
mov
push
scas
insl
sub
and
testl
jnp
nop
and
lret
testb
stos
pop
ja
aam
jle
stc
sti
int3
xor
adc
pop
push
sbb
mov
hlt
cmp
pop
bound
sbb
nop
xlat
cmc
test
sub
sbb
ds
cs
loop
xchg
push
jmp
pop
xchg
aaa
aam
cmp
sbb
cmp
test
hlt
pop
shl
les
mov
dec
arpl
or
mov
fsts
pop
push
add
cltd
xor
loopne
fdivr
mov
jg
xor
icebp
xor
inc
push
insl
jg
inc
dec
mov
mov
pusha
aad
nop
jecxz
dec
daa
jl
and
add
sub
cmc
cltd
imul
in
xchg
icebp
cmc
pop
dec
sahf
je
jl
or
outsb
in
aam
faddp
mov
pushf
out
cmpl
ja
loop
cli
imul
push
pop
and
fstl
mov
mov
lds
sbb
hlt
mov
out
popa
push
sbb
cmpl
loop
in
adc
xor
test
cli
dec
in
cmc
repz
loopne
mov
rsm
xchg
aaa
dec
inc
jne
jp
pushf
add
mov
out
popf
jp
stc
loope
pusha
cwtl
jnp
dec
in
sbb
popa
vandnps
or
les
fcmovne
mov
mov
sub
sub
cs
shrl
out
or
addl
mov
test
push
sub
mov
xchg
fisubs
andl
data16
aad
pop
cwtl
sub
adc
and
jo
adc
add
pop
inc
push
sahf
dec
pop
cs
jmp
pop
cwtl
sub
adc
subb
adc
lods
pop
xor
test
sub
adc
cwtl
sub
adc
push
int
push
sub
sub
adc
adcb
sub
adc
repnz
jmp
and
sub
adc
and
outsb
or
push
inc
push
or
push
and
cmp
or
xchg
ret
pushf
jb
adc
sub
adc
adc
jno
adc
push
and
adc
out
mov
xchg
push
push
loope
mov
mov
fsts
test
or
mov
subb
adc
aam
mov
or
xchg
xor
jbe
sub
adc
js
sub
adc
xor
gs
adc
xchg
sub
adc
inc
dec
sub
repnz
jge
orb
cmc
pushf
sub
adc
xor
mov
rcrl
inc
xchg
sub
adc
adc
test
or
sbbb
sub
adc
shlb
mov
or
xlat
mov
pop
cwtl
mov
aad
or
mov
xchg
rclb
addb
sub
push
dec
loopne
push
adc
ret
sub
test
sub
sub
adc
jb
adc
push
loopne
dec
jmp
or
hlt
adc
aam
addr16
test
lahf
ret
or
loop
mov
rorb
jns
mov
push
shrb
mov
sub
ljmp
mov
dec
sti
inc
cmpsb
add
and
ljmp
je
inc
mov
cmpsb
or
cld
pop
xchg
sbb
addr16
jo
adc
lret
mov
add
cmp
jmp
jo
and
jp
stos
xchg
lret
push
dec
mov
jno
and
add
sbb
xchg
xlat
fldl
aam
repnz
lods
fisttps
add
lock
test
or
int
add
sbb
jge
scas
loopne
je
mov
or
pop
stc
mov
or
mov
fdivl
xlat
cmp
decl
dec
icebp
psllq
mov
push
push
pop
out
cltd
xor
mov
mov
push
or
mov
jns
inc
mov
pop
xor
fistpl
and
cmp
ja
lret
dec
push
leave
mov
adc
push
hlt
xor
xor
pop
fstl
int3
mov
sub
inc
mov
xchg
jle
mov
xchg
aas
push
fwait
stos
push
push
and
mov
loop
fwait
cmc
fists
or
push
ljmp
test
or
jecxz
fmuls
orl
dec
stc
push
pop
in
mov
lcall
adc
mov
sub
jp
and
mov
xor
call
clc
mov
xor
imul
mov
adc
cmpsb
test
mov
stos
aad
sbb
lods
add
mov
and
xor
popf
cmpl
pop
call
add
sub
dec
mov
adc
sbb
inc
cmp
xchg
loop
sti
pop
fcmovb
mov
pop
imul
inc
mov
addb
mov
dec
cmpsb
push
jno
loope
cs
arpl
test
rolb
fsub
pop
mov
lea
add
leave
imul
sub
xor
mov
xchg
dec
cltd
ljmp
lahf
lds
sbb
mov
mov
fisubs
adc
add
adc
mov
pop
mov
pop
rcl
icebp
pop
sub
jge
pop
addb
shrl
aam
mov
cwtl
lods
inc
insl
mov
mov
push
lods
push
cmp
push
push
or
xchg
sub
or
xlat
rcrl
call
insb
dec
lret
or
adc
jp
push
stos
push
test
xlat
mov
ss
jmp
sahf
or
xor
ds
mov
stos
aam
dec
sub
mov
and
in
lock
jno
cltd
push
cmpsb
clc
movsb
xor
movsb
inc
jl
or
and
dec
imul
jae
xor
loop
fstl
and
adc
rol
jo
hlt
decb
xchg
pusha
fiadds
shrb
out
mov
sbb
ror
outsl
pop
out
cmp
les
pop
add
es
icebp
jno
sahf
mov
inc
sahf
pusha
push
dec
stos
push
push
js
sub
test
mov
dec
loop
je
ljmp
or
sti
xchg
daa
xchg
pop
inc
inc
cld
or
add
jne
push
inc
pop
stos
cmp
fwait
test
lods
aam
cmpl
into
inc
xchg
out
dec
push
arpl
aad
ja
ja
pop
inc
fstps
dec
into
or
push
cmp
imul
pop
fistps
pop
xor
and
xlat
and
jl
sbb
gs
stos
sahf
push
in
sbb
dec
mov
mov
scas
cmp
adc
jg
mov
jecxz
or
add
inc
inc
and
push
add
inc
sti
mov
xchg
cmp
scas
cmpsb
fcmovnbe
pop
mov
xorl
movsb
lea
in
ss
jmp
gs
add
out
nop
sub
adc
mov
insb
sub
pop
mov
call
or
jmp
mov
or
psubd
fidivl
lret
mov
jmp
shll
sbb
lods
or
jnp
and
fcoml
mov
movsb
repz
nop
xlat
aam
jbe
arpl
jnp
cmp
xor
and
scas
out
lea
pop
out
shll
lock
aaa
aas
inc
dec
xlat
pminub
out
test
hlt
pop
sub
sbb
cmpsl
cmc
mov
mov
shr
cmp
inc
jnp
xlat
adc
cmp
push
push
lret
push
repnz
hlt
pop
mov
repz
sbb
xor
out
mov
outsl
in
sub
push
data16
xor
push
mov
dec
jbe
xorl
stos
aaa
enter
stos
sub
push
je
adc
dec
testb
scas
int3
cltd
cmp
ja
out
out
addr16
jb
xchg
push
lods
push
sub
fwait
clc
and
dec
rcl
js
mov
mov
and
ret
sub
xchg
shr
mov
mov
pop
subl
push
imul
xor
lods
push
ret
push
dec
dec
sub
sbb
out
pushf
orl
in
or
push
popf
icebp
jmp
sahf
adc
add
data16
and
xlat
mov
inc
add
out
movsb
jl,pt
pop
mov
roll
fucom
pop
mov
enter
inc
adc
ret
fisubl
cmc
and
scas
push
fbld
imul
shlb
pop
mov
dec
dec
shr
add
scas
test
cs
mov
sbb
int
std
add
enter
push
cmp
add
xchg
mulb
push
pop
push
fsubrl
inc
push
pop
int
mov
sub
pop
imul
fistl
push
and
mulb
test
xor
cld
xlat
sti
push
cmpsb
sar
push
cmp
ja
sbbb
sbb
xor
iret
xchg
dec
subb
adc
add
pop
dec
push
fistpl
xchg
adc
loop
call
mov
cmp
push
adc
mov
cmp
pop
adc
jle
scas
call
movsl
cmp
pop
adc
les
xchg
sub
sbb
fs
rcll
pop
adc
ljmp
jo
adc
outsl
cmp
pop
adc
push
or
cltd
aad
popa
pop
adc
stc
ljmp
jge
push
cmpsb
stos
xor
ss
mov
roll
adc
pop
in
or
lock
pusha
aam
adc
sbb
push
lods
pop
dec
jne
jno
adc
sub
ljmp
add
jno
adc
push
jmp
stos
xchg
push
incb
adc
lahf
fstpl
roll
repnz
lahf
les
imul
roll
data16
in
test
sub
sbb
pop
sar
mov
jecxz
jg
mov
pop
loop
or
dec
imul
out
dec
arpl
or
push
movsl
jmp
test
cmp
jg
ja
mov
mov
cld
imul
adc
adc
cmpsl
jmp
push
add
push
repz
test
stos
xor
xchg
flds
dec
sti
sbb
pop
inc
sub
adc
mov
icebp
cld
inc
lods
or
fstpt
lret
cmpsl
jne
jle
loopne
inc
pusha
fdivrl
sbb
inc
adc
jno
dec
mov
xor
xchg
mov
dec
dec
sub
idivl
mov
movsb
push
icebp
imul
mov
shll
mov
jno
inc
ljmp
outsl
pop
iret
pop
adc
mov
clc
or
or
addb
dec
and
std
push
popf
outsl
lds
fdivs
mov
addr16
inc
add
aaa
jae
test
sarl
pop
adc
ja
jnp
cmpl
push
loopne
or
pop
sub
insl
xchg
and
cmp
pop
adc
mul
and
adc
dec
jle
std
and
add
out
adc
jb
sub
rcrb
cld
mov
hlt
jo
adc
incb
adc
incb
adc
fsubl
or
orb
push
adc
stos
loopne
or
sub
adc
adc
and
adc
adc
push
adc
loopne
or
xchg
push
jb
adc
jne
jb
adc
adc
add
or
andb
adc
fsubl
or
das
test
stc
cmp
pop
adc
or
shll
inc
nop
xor
movsl
sbb
aam
mov
faddl
jno
cmpsl
xchg
cmp
pop
adc
mov
cmp
movsb
mov
aam
adc
mov
movsl
xorb
push
adc
incl
loop
inc
jge
mov
xchg
fs
pop
xor
in
jecxz
incb
adc
xchg
xchg
imul
xchg
divb
imul
jg
jbe
cmc
cmpsl
cld
test
fimuls
stos
pushf
fidivrs
loop
pop
and
sar
adc
xor
test
pop
adc
mov
sub
push
push
pop
xchg
pusha
adc
lcall
sub
imul
fiaddl
and
sub
into
sbb
push
shl
push
sbbb
cli
shlb
cld
add
std
sbb
lret
jo
clc
jnp
daa
mov
cltd
rolb
dec
xchg
cs
jmp
jb
push
stos
cmc
or
mov
sub
lods
sub
jecxz
test
mov
sub
fwait
sub
push
lods
push
mov
pop
mov
outsb
test
mov
add
adc
or
out
std
outsb
outsb
jp
push
pusha
sub
adc
mov
adc
dec
sub
adc
inc
sub
adc
adc
inc
mov
and
sub
pop
adc
and
loope
fidivrl
sub
adc
adc
pop
inc
xor
fs
mov
inc
mov
push
push
pop
out
mov
arpl
shlb
aad
xchg
mov
push
pop
inc
xchg
mov
inc
push
das
stc
mov
shll
js
xchg
imul
xchg
adc
loope
movsb
pop
clc
icebp
sub
mov
or
out
inc
mov
sub
adc
sbb
test
push
inc
mov
inc
mov
andb
cmp
sti
pop
inc
jae
adc
mov
push
popa
inc
sub
adc
movsl
dec
add
push
insb
sub
adc
mov
jg
ss
add
push
stos
stc
cmp
outsb
inc
sub
adc
add
and
das
push
mov
sub
stos
daa
mov
add
or
jns
and
jnp
mov
aaa
scas
jle
fwait
shrb
popa
sub
adc
xchg
sub
mov
sub
adc
outsl
jp
push
jmp
cmp
pop
and
jns
push
inc
aas
jmp
gs
pop
xchg
sarb
mov
inc
jg
cmp
xor
or
or
push
adc
ret
subb
adc
rorl
jne
dec
in
orb
mov
incb
adc
stos
jne
dec
cli
inc
jl
sbbl
lds
jl
xchg
mov
lahf
mov
adc
push
or
std
or
lahf
fiaddl
adc
popf
cmp
addr16
sub
adc
jae
shll
loop
push
rorb
movl
les
fistpll
ffreep
sub
mov
icebp
mov
repnz
data16
push
sbb
xchg
adc
fs
dec
and
jb
out
mov
adc
ja
hlt
mov
xchg
sbb
fs
adc
push
xor
lock
jbe
jge
adc
xor
pop
pop
or
pusha
sub
adc
sbb
or
inc
sub
adc
imul
cltd
in
addr16
sahf
int3
sbb
jo
xchg
jg
in
mov
or
and
push
sti
push
es
jge
addr16
adc
pusha
sub
adc
inc
push
mov
add
leave
clc
and
pop
roll
adc
mov
inc
adc
add
fimull
xchg
xchg
jo
cs
pop
adc
dec
popa
sub
adc
xchg
not
daa
movsb
outsb
out
jbe
fisubs
cmp
xor
lds
sub
adc
dec
sub
adc
leave
shl
arpl
adc
cmp
sbb
adc
push
mov
sub
adc
ljmp
adc
mov
ffree
add
in
lret
sbb
mov
or
sub
mov
xchg
inc
xor
je
inc
sub
adc
dec
sub
adc
lea
sub
adc
or
incl
cli
dec
dec
mov
in
and
adc
aas
jle
cmc
in
fidivrl
lds
mov
testl
shlb
xor
incb
adc
stc
mov
fcmove
fcmove
mov
jge
push
or
rorl
cmp
jl
loop
in
and
adc
stos
stos
mov
std
push
mov
and
adc
andb
add
sub
in
and
adc
lods
pop
adc
dec
sbb
dec
sub
adc
outsb
stos
push
test
xchg
inc
sub
adc
shlb
cmc
adc
and
inc
mov
lea
das
mov
dec
cmp
loop
into
addr16
ret
sub
adc
or
or
lahf
imul
sub
adc
es
mov
lea
mov
push
dec
fdivr
out
jo
or
int3
push
cmp
insb
shl
test
addb
or
rcrl
sub
adc
lcall
lahf
push
lods
pop
int
dec
or
cmpsl
xor
stos
ds
fstpl
xchg
push
mov
insl
inc
sub
adc
pop
cli
inc
xor
add
jbe
test
xlat
in
pop
lods
adcb
pop
ds
cmpsl
xor
loopne
icebp
mov
jbe
cmp
cmp
adc
decl
pop
sarb
or
add
or
adc
push
jns
push
hlt
add
sti
add
es
xlat
sbb
fwait
mov
iret
int
lods
lds
inc
sbb
test
mov
adc
lahf
pop
sahf
shlb
xchg
jb
fs
xchg
mov
push
mov
roll
test
jbe
jp
rcll
adc
dec
pop
orb
and
mov
pusha
es
inc
inc
mov
arpl
push
lods
add
push
pusha
xchg
jns
inc
sar
fdivrp
and
adc
movb
cmp
inc
imul
and
adc
fnstsw
mov
mov
testb
sar
loopne
jb
adc
imul
inc
js
clc
or
jmp
in
or
mov
pop
pusha
adc
inc
sti
das
int
push
push
lea
mov
das
out
xor
jl
mov
cld
or
mov
push
repnz
mov
paddusw
mov
pop
fs
sub
daa
sub
cmpsb
sbb
sti
loop
mov
cmpsl
sub
lods
pusha
jo
adc
xor
and
adc
outsb
pop
push
inc
cld
and
adc
sub
mov
jo
in
outsb
les
push
fists
out
dec
cwtl
sbb
inc
add
adc
cmp
rorb
pusha
lods
pop
sub
xchg
movsb
sar
and
adc
inc
and
adc
pusha
jo
adc
inc
dec
nop
sub
movsb
mov
mov
pusha
jo
adc
test
adc
sub
mov
movsb
push
mov
and
out
add
adc
push
inc
clc
and
adc
pop
jno
fcomps
or
mov
mov
leave
pop
xor
sbb
and
adc
mov
cli
sbb
sub
adc
add
adc
andl
adc
pop
inc
and
adc
jnp
xor
or
test
jnp
enter
jo
mov
push
add
and
push
adc
xor
pop
mov
push
adc
jle
xor
adc
rorl
jb
adc
adc
push
adc
lods
andl
lock
push
jge
lock
mov
aad
out
xor
fadds
pop
adc
stc
ja
lock
scas
xor
inc
and
adc
sub
fwait
push
cmpsl
lds
or
enter
push
jge
aad
addr16
inc
mov
cs
sub
fbstp
std
mov
roll
add
adc
push
test
dec
push
xor
incl
adc
inc
incl
adc
cmpsb
adc
out
aam
push
and
jmp
mov
add
adc
push
adc
stos
addl
scas
pop
sbb
fwait
mov
dec
xchg
sub
fwait
loopne
fadds
std
sti
push
xchg
in
adc
popa
int3
push
popa
push
cli
mov
add
mov
push
fistpl
ret
pop
push
push
adc
daa
out
adc
add
push
jmp
out
inc
popa
in
jge
fidivl
mov
scas
pop
cli
and
push
adc
cmp
lahf
test
incl
adc
sbb
mov
and
push
push
hlt
lods
or
push
push
cmpsl
dec
ss
mov
idivb
imul
adc
mov
or
adc
mov
jbe
cmpsb
dec
lods
xchg
or
add
das
xchg
sahf
enter
push
push
add
xchg
outsl
inc
mov
mov
jecxz
xchg
pop
jle
iret
mov
shll
adc
push
mov
popa
js,pn
mov
adc
sub
or
lret
dec
mov
out
mov
pop
push
nop
jno
adc
dec
and
adc
dec
and
adc
adc
mov
ss
push
pop
scas
inc
loop
mov
loope
jnp
out
fmuls
add
mov
pop
repz
push
sub
and
mov
inc
pusha
lods
int3
xor
sbb
and
xchg
lods
outsb
mov
inc
mov
icebp
xchg
ds
xlat
stos
addr16
sub
adc
insl
xchg
jb
adc
or
cmp
fsubrl
mov
ljmp
imulb
xor
mov
or
scas
jnp
mov
xor
outsb
cmp
xchg
pop
es
std
jbe
jne
icebp
and
xorl
pop
fs
fcomi
push
mov
cmp
jns
mov
pop
add
out
push
outsl
push
decb
sbb
ror
adc
mov
lret
pop
adc
inc
ja
xor
jp
dec
shrb
aad
inc
insb
mov
outsb
call
fiadds
sbb
lock
jnp
pop
jae
or
mov
adc
jle
stc
mov
lahf
sbb
in
popl
xchg
xchg
adc
bound
or
sbb
mov
xchg
mov
adc
adc
mov
rorl
shll
jne
jb
sbb
out
dec
sub
jle
xchg
dec
test
pop
out
stos
push
push
divl
mov
aam
repnz
outsl
sti
push
dec
test
into
push
daa
nop
sbb
push
sbb
jnp
dec
adc
cli
xor
pop
in
add
inc
stos
fnsave
es
xor
popa
mov
sbb
jl
aad
test
push
mov
mov
lods
dec
jmp
es
call
push
push
xor
loope
dec
lcall
add
add
or
mov
stos
in
scas
into
inc
scas
movsl
dec
xchg
xchg
das
dec
adc
add
add
jne
out
clc
inc
icebp
xchg
fists
pop
adc
in
addb
cmp
lods
push
das
cmpsl
sbb
cld
scas
jne
rorl
mov
imul
rolb
dec
sbb
int
notb
mov
inc
mov
mov
sub
nop
sbb
add
jl
sbb
jecxz
fadds
pop
adc
dec
pop
dec
inc
mov
stos
clc
add
adc
movl
ret
push
cmp
stos
mov
leave
scas
add
es
push
shl
hlt
dec
les
push
cmp
jno
pop
scas
push
mov
mov
pop
in
das
mov
adc
add
or
or
ficoms
in
inc
push
test
and
dec
push
les
adc
add
or
xchg
mov
nop
sub
scas
pop
jno
aas
adc
pusha
inc
jp
jno
xchg
mov
mov
push
test
loop
push
movsb
pop
sbb
mov
inc
int3
movb
dec
lea
scas
jge
ljmp
insb
mov
jle
and
les
sti
push
dec
xchg
fldl
lahf
icebp
sub
dec
push
mov
mov
sbb
or
push
lahf
ja
xchg
cs
mov
cmp
push
test
sub
dec
sbb
and
ret
in
cmp
and
push
aam
iret
pop
imul
and
add
push
mov
mov
inc
into
lds
loop
and
scas
adc
subl
pop
scas
popa
adcl
add
add
bound
or
stos
adc
dec
push
lods
push
dec
movsb
mov
sub
sbb
es
dec
dec
cmpl
adc
mov
jg
imul
cwtl
out
mov
and
rclb
out
xchg
dec
xchg
adc
mov
xchg
fistpll
out
stos
sub
and
pop
adc
and
cwtl
in
pop
icebp
ljmp
xchg
pop
and
aad
fwait
das
cmp
hlt
data16
or
incl
hlt
cwtl
push
pushf
jp
jecxz
cmc
mov
fisubs
dec
in
out
mov
pop
mov
decb
call
xchg
inc
jnp
add
ret
aad
adcl
add
xor
add
stc
push
rolb
lds
test
jnp
xor
xlat
fsubrl
cmp
scas
sahf
mov
ja
fdivrs
and
imul
test
push
aas
and
ds
push
lock
mov
cmp
xchg
fildll
aad
cmp
pop
adc
mov
out
out
mov
xor
jbe
jge
mov
jae
xchg
push
fidivrs
jg
xor
pop
mov
in
and
and
xchg
add
adc
cmc
mov
jle
adc
push
ret
insb
fisubrs
imull
rorl
jl
jns
mov
sub
inc
inc
lds
stc
push
test
pop
out
out
jne
in
fcoml
stos
popa
cmp
mov
stos
fstl
nop
outsb
add
push
andb
mov
stos
ja
arpl
cmp
dec
mov
cmp
movsb
imul
mov
pop
js
lea
lods
mov
pop
cmp
push
mov
test
pusha
fistpll
loop
add
add
movsl
lret
adc
push
mov
mov
sbb
and
mov
aas
xchg
adc
lock
mov
mov
pop
pop
ret
add
push
imul
pushf
pop
aad
push
fstpl
mov
lock
xlat
lods
pop
mov
idivl
add
or
sbb
push
push
pop
xor
sub
push
test
fwait
cmp
or
icebp
pop
mov
nop
imul
sbb
in
pop
out
call
add
shll
xlat
lods
pop
cmp
hlt
xchg
xchg
sbb
ds
cmpsl
fcomps
ljmp
roll
cli
or
sub
roll
adc
ljmp
sub
dec
or
pop
shlb
dec
roll
adc
bnd
inc
adc
sub
roll
adc
lds
adc
xlat
ljmp
negb
imul
lds
out
arpl
xchg
add
adc
leave
lods
mov
jp
adc
stos
push
sbb
dec
setbe
movsl
dec
call
add
dec
mov
dec
xchg
cs
cmp
push
xchg
push
fcoml
add
sahf
cs
mov
add
cmp
pop
adc
scas
imul
or
cs
gs
jmp
or
and
mov
int3
pop
adc
lds
dec
mov
mov
jle
inc
xchg
push
je
rcrb
adc
clc
stos
push
mov
movsl
dec
popf
xchg
imul
add
imul
cmp
cs
inc
mov
psllq
jmp
xchg
jmp
or
cmp
cmp
pop
inc
push
sub
cmp
cmc
aad
pop
mov
and
les
sub
iret
pop
sub
pushf
in
pop
les
sbb
inc
repz
les
aas
sbb
dec
insl
jo
imul
or
mov
arpl
xchg
into
pop
movl
ss
mov
mov
das
leave
sub
xchg
pop
sar
cmp
mov
in
lea
lea
xchg
pop
inc
jae
test
inc
addl
lock
pop
movsb
rclb
dec
and
daa
jle
gs
mov
mov
or
mov
or
jb
ljmp
or
adc
mov
jmp
movsl
dec
repz
lcall
xlat
inc
mov
fcoms
dec
ss
cltd
and
cmpsb
ret
leave
ljmp
and
stos
scas
push
int3
int
cmp
and
cmp
adc
xchg
xchg
sub
mov
pop
inc
imul
jbe
jge
adc
out
dec
pop
mov
mov
daa
sub
nop
jecxz
mov
out
pop
push
in
lret
in
push
mov
imul
rcr
cmp
adc
mov
dec
mov
imul
lds
jge
nop
aas
pop
push
ret
leave
mov
xlat
fs
test
test
sub
jns
and
push
call
pop
movsb
pop
dec
cmovge
jg
jg
fists
outsl
movsb
dec
dec
out
ret
es
mov
icebp
mov
adc
sub
lret
enter
dec
pop
insl
loopne
mov
sbb
jmp
aad
dec
cmpsl
gs
inc
add
fwait
or
push
and
stos
xor
cmpsl
add
shll
dec
dec
and
xor
sahf
test
roll
add
adc
cmpsl
add
adc
test
adc
adc
add
sarl
popf
adc
das
sahf
inc
incb
inc
inc
pop
inc
movsb
push
cmpsl
xor
cmp
pop
pop
xor
pop
out
mov
jecxz
push
sub
hlt
jnp
clc
jl
in
in
shll
adcl
xor
push
test
push
sub
ss
aad
mov
rolb
adc
enter
mov
mov
fisttps
aam
shlb
adc
push
and
sbb
push
and
stos
xchg
sub
lds
mov
cmp
les
cmc
stc
mov
daa
dec
push
cmpsb
pop
mov
xchg
out
push
cwtl
into
mov
aam
xor
bound
or
ficoml
push
push
shll
push
fimull
dec
adc
lcall
call
addl
dec
mov
stos
fildll
push
mov
mov
xchg
mov
adc
adc
dec
adc
sub
in
mov
imul
jns
sbb
push
cmp
cltd
or
jl
scas
pop
mov
push
cli
out
mov
iret
xor
lods
inc
loopne
inc
sbb
test
frstor
adc
push
mov
add
test
jp
inc
arpl
lods
inc
loopne
pop
cmp
js
dec
mov
push
shrb
dec
mov
and
sub
and
aas
lcall
mov
pop
adc
lcall
movsb
loopne
les
ror
sahf
dec
sahf
andb
adc
adc
or
sub
rolb
adc
and
rolb
adc
lods
add
adc
sub
and
sbb
ror
lods
aam
mov
inc
push
sub
shll
or
xor
lret
int3
cmp
sbbb
stc
sub
sbbb
sbb
add
call
jne
iret
pop
aam
cmpsb
xlat
lahf
add
dec
scas
pop
fwait
sbb
xchg
iret
stos
sub
je
out
cmp
inc
mov
subb
outsb
mov
jne
rolb
adc
pop
stos
lods
faddl
pop
adc
cld
cmp
cmp
sub
cmpsb
fldl
cmp
push
and
rorl
fsub
inc
rolb
adc
bound
xchg
clc
int
fisubl
pop
pusha
adc
jne
or
adc
and
push
sbb
jb
data16
and
and
adc
mov
adc
in
adc
repnz
test
adc
or
push
push
mov
pop
inc
rolb
adc
cmp
and
adc
repnz
mov
push
push
mov
pop
adc
adc
aam
and
mov
rolb
adc
adc
insb
cmpsl
push
dec
rolb
adc
pop
loop
inc
rolb
adc
dec
rolb
adc
xor
fwait
jbe
add
rolb
adc
cmp
adc
test
adc
mov
xor
rcl
pop
adc
repz
dec
dec
sub
rolb
adc
or
imul
or
adc
lea
add
push
dec
popf
and
aam
pop
adc
jae
mov
pop
adc
pop
gs
fldl
cld
cmpb
push
add
stos
push
pop
ss
cmpsl
jnp
loop
popf
fsubl
push
rcrl
adc
in
cmp
or
mov
mov
xchg
jle
movsl
dec
hlt
imul
pop
adc
cld
mov
and
push
test
or
mov
rolb
adc
xchg
pop
push
inc
rolb
adc
pop
pop
in
adc
rolb
adc
data16
insb
pop
add
rolb
adc
adc
rolb
adc
or
int
clc
shll
sti
add
testb
stos
lods
mov
cmp
jg
or
pop
aas
cmpsl
arpl
gs
out
jbe
dec
out
add
inc
cmp
add
test
stos
inc
lock
inc
inc
add
cmp
and
pop
adc
imul
rcl
push
xor
std
mov
mov
sub
cmp
es
test
shlb
out
mov
push
ret
popf
test
dec
cmp
or
lea
dec
push
stos
xor
push
mov
jne
std
outsb
pop
cmc
js
aam
jnp
lahf
push
dec
outsb
lds
test
mov
cmp
pop
push
lods
mov
cmp
jno
lahf
mov
and
jp
stos
push
pop
stos
daa
xchg
lcall
push
and
pop
adc
mov
lock
adc
mov
pop
arpl
shll
mov
add
inc
push
ja
test
les
in
aad
mov
sbbb
adc
in
rolb
adc
mov
xchg
cmc
rcrl
arpl
cwtl
pop
adc
lret
adc
fildl
aad
fcom
pop
adc
movsb
loopne
pop
adc
imul
rolb
adc
push
call
pop
add
pop
les
jmp
sbb
in
rolb
adc
fnstenv
mov
cmp
pop
sub
sbb
ss
rolb
adc
jne
rolb
adc
push
in
pop
adc
push
sub
js
inc
rolb
adc
cwtl
std
jl
dec
lods
sub
rolb
adc
sbb
and
rolb
adc
inc
pusha
inc
xchg
or
xchg
xchg
inc
add
daa
push
and
pushf
or
int
or
or
and
or
mov
add
or
pop
mov
and
mov
push
and
jp
ljmp
or
inc
xor
test
push
or
mov
scas
lret
mov
or
mov
lods
and
adc
and
adc
and
adc
add
out
stos
and
adc
sbb
jb
jmp
sahf
inc
repz
in
loope
outsb
mov
or
test
orb
insl
xchg
push
pop
pop
fcomps
ja
xchg
loop
and
and
aad
cld
pop
or
jge
xchg
scas
test
cld
addb
rolb
adc
mov
jns
outsl
mov
arpl
push
in
cli
xor
inc
loope
mov
or
cs
ret
jmp
sub
repz
push
mov
push
sbbl
inc
and
imul
mov
out
mov
jae
or
pop
adc
daa
cmpsb
xor
rolb
adc
fiadds
sbb
or
cmc
pop
or
or
xor
push
cs
enter
sbb
or
les
orb
inc
stos
mov
mov
in
mov
jmp
cs
jp
adc
add
adc
popa
sub
jge
jp
or
push
test
mov
cmp
cmp
imul
cmpsl
pop
imul
test
cld
shll
loopne
push
scas
sti
xchg
popf
rcr
jg
jmp
adcl
sbb
aam
cltd
arpl
pop
mov
mov
mov
enter
mov
and
xchg
scas
cmpsb
mov
mov
movsl
mov
mov
mov
js
mov
lock
sti
and
pop
ficompl
pusha
test
xor
or
mov
and
adc
push
mov
and
dec
or
rol
fcmovbe
sub
cmp
leave
dec
xchg
sub
sbb
sti
test
movsb
push
movsl
movsl
aaa
xor
pop
jo
cli
add
pop
jmp
add
xchg
addb
pop
inc
int
add
mov
push
inc
std
mov
push
adc
outsl
push
push
sub
jmp
jne
inc
cmc
xchg
loop
movsb
iret
pop
cmp
sbb
rclb
push
mov
ds
cmp
cmp
js
jl
scas
push
imul
mov
les
xchg
ljmp
mov
das
or
mov
js
ror
fldenv
adc
loope
fbld
ret
dec
lods
xchg
add
stos
mov
xchg
cs
inc
lock
mov
pop
dec
add
jmp
push
push
loope
mov
push
testb
scas
pop
pop
in
leave
dec
xchg
aad
dec
in
inc
std
sti
add
adc
add
pop
adc
out
dec
nop
lret
outsb
pop
leave
addr16
jbe
mov
cli
mov
fsubl
pop
ret
adc
jl
insl
sub
jnp
push
xlat
and
or
mov
mov
xor
test
outsb
lods
inc
add
jo
mov
fildl
pop
mov
aam
dec
insb
inc
adc
out
movsl
aas
in
imul
test
mov
inc
test
arpl
mov
out
or
je
mov
mov
ss
add
push
clc
lret
jno
ret
pop
sub
adc
mov
xorl
pop
jge
stc
push
jo
xchg
or
or
or
insl
jle
cld
loopne
int3
mov
inc
add
pop
jl
loop
jl
iret
sub
sahf
jge
andl
cmp
add
outsb
nop
sbb
in
movsl
jns
loope
scas
rcrb
sub
sub
cmpsl
cmp
push
cmpsb
sbb
jp
adc
inc
jmp
leave
clc
push
imul
dec
jecxz
ret
sub
lock
push
adc
shlb
popf
adc
push
jg
add
jo
roll
adc
outsb
or
mov
xor
push
ja
push
sahf
divl
adc
lods
test
pop
sub
aad
or
jo
ljmp
lock
test
push
pop
mov
jo
sbb
dec
mov
leave
repnz
daa
pop
scas
add
xchg
in
movsb
and
stos
icebp
cmpsb
nop
xchg
repnz
loopne
push
adc
mov
mov
mov
add
push
out
fstl
mov
xor
rep
jmp
xchg
in
fdiv
mov
lret
in
outsl
aas
push
aaa
adc
mov
nop
mov
pop
addr16
mov
scas
ljmp
mov
jmp
jp
mov
push
icebp
jnp
adc
dec
insl
mov
aam
pop
shlb
jo
add
add
push
xchg
shrb
xor
push
and
popf
out
das
mov
aad
aad
popa
inc
cld
or
add
xor
adc
pop
je
pop
adc
push
push
xchg
lea
mov
add
adc
es
lahf
jg
daa
add
push
sti
sbb
ficomps
jae
xchg
daa
push
mov
jo
cltd
arpl
push
pop
dec
lods
sub
xchg
orl
mov
jne
mov
inc
jne
pop
push
xchg
dec
out
xchg
je
lock
adcb
sbb
ljmp
pop
pop
xor
adc
lods
rol
jo
fmull
mov
shrl
or
jle
cmpsl
lds
inc
xchg
fistl
stos
aad
pop
js
sub
dec
add
js
mov
cmp
jmp
push
scas
sub
ja
jmp
divl
lret
pop
cltd
leave
sbb
movsl
lods
xor
out
popf
sub
mov
sub
in
fisttpl
pop
rcll
inc
sbb
fwait
mov
push
sub
into
push
pop
pop
jae
sti
out
shl
fs
or
and
adc
inc
push
xchg
push
push
mov
ljmp
std
movsb
je
pop
adc
sub
push
pop
sub
push
sub
mov
lea
mov
and
cmp
or
and
lock
xchg
or
xchg
aas
test
enter
xor
andb
dec
add
add
cmpsl
push
mov
orb
gs
sar
rdpmc
xor
aam
push
cltd
xchg
and
pop
cmp
int3
ja
xchg
movsl
or
pop
imul
cmp
cld
das
push
scas
sbb
lret
pop
stos
fwait
cwtl
xor
mov
pop
test
fwait
ret
insl
cmp
enter
mov
sbb
and
adc
inc
pop
add
es
xor
dec
nop
and
out
repz
cmp
xchg
xchg
clc
dec
in
dec
jg
ficomps
lret
jg
pusha
aaa
inc
scas
adc
mov
dec
in
pop
sarl
addl
pop
push
adc
dec
aas
cmc
xchg
out
jl
push
jae
and
push
mov
ljmp
jnp
das
loop
push
fs
call
cmp
into
sub
or
mov
lret
pusha
lret
mov
sub
mov
jg
loope
inc
mov
insb
in
clc
push
mov
call
add
adc
adc
or
sbb
adc
enter
fwait
gs
mov
jnp
and
cmp
push
int
in
stos
sbb
lods
ljmp
push
add
adc
call
or
das
rcrb
mov
inc
inc
mov
dec
lock
adc
or
sub
xor
pop
adc
pcmpeqb
pop
adc
adc
add
adc
push
adc
cwtl
test
and
imul
movsl
clc
mov
or
xchg
addr16
shl
adc
jg
aad
in
sar
jl
fabs
pop
ljmp
imul
pop
test
lods
icebp
cs
inc
sub
push
cmpsb
mov
scas
cmp
nop
add
mov
incb
cs
mov
mov
lods
sub
sub
repnz
push
movaps
das
xor
icebp
push
mov
enter
cmp
addr16
push
lods
shll
lea
adc
mov
test
daa
in
mov
sub
scas
pop
mov
and
test
push
mov
or
fildll
push
sbb
pop
out
aas
xor
pop
or
int
shrb
pop
cmp
outsb
cmpsl
loop
or
test
xchg
in
arpl
orl
xor
jle
sub
test
mov
xlat
sbb
lods
aad
clc
dec
cld
xchg
aas
test
jp
and
out
fsubs
inc
jecxz
jno
pop
push
dec
cs
push
mov
mov
push
fimull
pop
scas
and
jne
aad
sub
pop
enter
mov
fsub
aaa
dec
les
jg
rorl
jo
adc
xchg
fmull
add
pop
push
mov
cmc
in
jmp
scas
pop
or
push
mov
stos
in
mov
mov
jo
adc
lock
push
shl
call
xchg
and
into
das
adc
insl
ffree
xlat
add
mov
movsl
pop
mov
sub
adc
div
mov
push
mov
pop
mov
out
dec
in
jo
adc
push
pop
cmpsl
and
cld
scas
pop
inc
clc
push
inc
xorb
movsb
pop
and
mov
stc
xadd
mov
mov
inc
shrb
mov
mov
adc
sti
into
adc
dec
xchg
cs
in
sub
insb
sub
push
and
mov
rcr
xchg
fcmovne
push
pop
mov
pop
shll
pop
adc
test
dec
xchg
pop
repz
mov
daa
or
js
lods
mov
xor
or
fsubs
imul
xor
mov
add
jae
out
pop
mov
push
es
push
add
pop
sub
movsb
xchg
cmpsb
mov
iret
cwtd
arpl
repz
out
test
divl
cmp
dec
mov
push
push
cli
dec
inc
mov
push
aad
pop
cmc
jecxz
jge
jge
inc
scas
pusha
decl
movsl
push
gs
xchg
push
rorb
mov
es
call
mov
jge,pt
jg
mov
xchg
pop
stc
mov
jbe
sub
popa
sarb
inc
pop
inc
lock
and
mov
jge
mulb
sub
inc
sub
add
ss
arpl
test
mov
movsl
pop
pop
xor
jo
adc
orb
xorb
fnstenv
push
or
mov
lret
add
pop
dec
repz
daa
or
cwtl
or
push
mov
mov
and
sahf
add
loopne
xchg
cmp
dec
cwtl
faddp
cmpl
pop
shll
add
adc
lret
and
dec
movsl
mov
push
cmp
daa
or
xchg
popf
pop
cmp
inc
into
push
mov
sub
ret
dec
inc
jbe
xor
test
mov
push
push
jns
clc
mov
js
sti
xor
xor
adc
insb
sbb
aad
shlb
lahf
icebp
sbb
push
and
adc
cmp
push
int3
inc
es
dec
imul
fstpl
pop
pop
mov
fs
inc
jb
mov
push
hlt
out
push
and
pushf
cwtl
repnz
push
ljmp
fadds
movsl
ret
pop
inc
adc
repz
popf
scas
or
and
and
outsl
dec
and
int3
dec
das
insb
lds
xchg
imul
mov
fstp
cld
pop
imul
xchg
push
pop
outsb
push
je
push
xchg
shll
loopne
orb
out
shrb
scas
push
sub
and
mov
and
daa
fdivrs
xor
loope
push
jae
push
into
push
fisubrl
lds
ljmp
lahf
cmc
pushf
roll
mov
dec
mov
fbld
outsl
adc
inc
mov
sub
das
pop
mov
ss
inc
jno
xchg
in
or
jnp
lahf
subl
push
rolb
fildll
fstpt
lods
pop
pop
add
adc
xchg
in
ds
and
cmp
outsb
or
es
call
xchg
add
lea
filds
adc
inc
mov
sub
push
cmpsl
pop
inc
stc
fdivr
jo
and
mov
je
aad
aad
push
loop
mov
lods
jo
mov
inc
addl
mov
adc
push
pop
xor
sbbl
mov
or
adc
fstps
movsb
out
mov
scas
rcll
and
adc
and
in
outsl
pop
mov
call
lea
jp
int3
out
shlb
inc
add
adc
push
addl
mov
testb
imul
lahf
sarb
adc
sub
sub
adc
les
cmp
jge
rorl
fwait
lods
sub
notb
aam
sub
imul
lds
cmpsl
dec
cmp
or
dec
ss
loope
add
cmp
mov
mov
rorl
jge
jne
jg
roll
mov
mov
ljmp
pusha
add
push
mov
xchg
and
mov
push
scas
imul
jg
push
mov
push
outsb
jp
mov
add
push
dec
mov
or
popf
les
lods
mov
jbe
mov
test
add
ret
mov
mov
mov
mov
rolb
xor
mov
enter
lods
cld
scas
iret
pop
fucomp
cmpsl
push
cmpsl
mov
push
xor
xor
adc
push
pop
push
jbe
fsubrs
mov
mov
add
mov
jg
xchg
inc
pushf
mov
mov
aad
aas
jnp
aam
lock
mov
xchg
aaa
cld
jp
mov
ficompl
mov
dec
adc
in
testb
add
cmp
sub
in
out
fsubrs
jg
jge
scas
mov
stc
add
jnp
cmc
roll
sbb
lret
sahf
test
sub
pop
mov
xor
adc
in
xor
jne
das
mov
out
ror
mov
dec
pop
filds
sbbl
mov
movsb
jmp
pop
dec
in
add
xor
daa
cmp
jae
mov
push
xor
mov
jne
xchg
dec
icebp
sub
mov
jg
pop
dec
cmp
push
push
fidivrs
je
roll
out
jno
add
inc
adc
and
in
adc
cmpsb
cmp
push
add
push
jmp
in
mov
nop
sub
pop
pop
rorl
cmp
lahf
sbb
cmp
jg
adc
pop
xorl
outsb
adc
or
lock
das
inc
pop
mov
popl
lcall
cwtl
jp
lods
fldcw
xchg
jnp
push
cld
dec
sbb
mov
imulb
xor
mov
inc
dec
jae
test
inc
mov
add
xchg
mov
or
jge
ss
orl
inc
cmpsl
xor
or
and
mov
fcomp
pop
std
push
addr16
cmp
mov
les
xchg
es
cmp
scas
mov
leave
lahf
sbb
inc
daa
or
in
adc
push
stos
xchg
sub
mov
mov
add
jbe
mov
inc
jecxz
mov
stos
in
sub
adc
push
pop
mov
rolb
or
dec
dec
sbb
ljmp
scas
xchg
jne
add
jo
adc
sub
jo
adc
adc
popf
aad
push
stos
outsl
push
stos
inc
mov
lds
xchg
sub
jns
or
jle
mov
adc
scas
dec
pop
mov
sub
mov
lds
add
cs
aas
mov
lds
outsl
mov
fwait
imul
mov
xor
xchg
add
xor
adc
bound
fsub
push
add
push
lods
lods
pop
cmp
adc
pop
xchg
fisubs
push
jmp
out
bound
out
loope
ret
je
les
inc
mov
das
ds
lods
sbb
adc
push
inc
pop
cmp
and
xor
push
in
adc
cmp
jo
adc
and
push
adc
jne
nop
das
and
mov
call
dec
fistps
xor
adc
xchg
mov
push
test
test
insb
mov
cmpb
push
dec
push
sub
aam
stos
push
and
lods
arpl
sub
sub
dec
push
test
pop
add
scas
push
outsl
pop
adc
stos
push
mov
imul
lds
add
ret
lret
xlat
xlat
decb
push
clc
lea
and
push
add
adc
mov
sub
cmp
or
lret
packsswb
scas
scas
ficomps
cmp
push
dec
inc
cmp
inc
loope
xchg
or
mov
push
inc
jmp
sub
mov
xchg
xchg
push
mov
push
cld
insl
and
jne
stos
dec
andb
xlat
out
inc
pop
imul
jne
add
pop
add
push
jecxz
cmp
test
adc
cmc
sahf
and
loope
sub
shrl
inc
cli
mov
push
sar
xchg
out
jbe
and
adc
push
sbb
cmc
jb
or
mov
out
out
int
and
addb
aad
xor
clc
push
rcrb
test
rclb
adc
jo
adc
cmp
insl
into
test
xorb
xor
xchg
int3
mov
repnz
dec
jno
mov
cmc
adc
pop
xor
icebp
icebp
je
or
daa
or
xor
adc
mov
fldl
push
push
lods
repnz
add
adc
mov
lock
xor
pusha
cmp
or
inc
lods
xchg
inc
jnp
ds
add
daa
or
mov
or
fidivrs
mov
cmp
mov
ljmp
lock
out
lret
lods
inc
ret
sbb
dec
nop
addr16
scas
repnz
adc
insb
sbb
aad
shlb
hlt
leave
jp
xchg
dec
pop
mov
mov
inc
inc
push
ds
sub
mov
pop
dec
xchg
cmp
aas
sbb
movsl
dec
lea
sub
movsl
ds
out
push
push
jnp
add
mov
cmp
adc
rcll
popa
daa
popf
lock
stc
mov
mov
outsl
lods
int
xchg
rcll
push
outsb
movsb
ret
jns
arpl
adc
dec
popf
imul
add
lret
pop
sti
into
mov
dec
and
imul
and
mov
inc
enter
add
pop
ficomps
subl
rclb
dec
stos
xor
xchg
xor
and
inc
mov
mov
xor
jb
jb
sub
mov
jo
out
inc
sub
cs
cmp
jmp
stos
xor
sbb
outsl
loope
lahf
rolb
ja
cs
add
xchg
nop
lods
mov
sub
stos
push
xor
addl
dec
icebp
adc
aam
push
into
insb
pop
inc
test
lret
pusha
cmpsb
mov
and
xchg
dec
pusha
lret
push
push
push
test
sbb
mov
pusha
shl
hlt
add
pop
add
loopne
stos
xor
push
sub
cmpsb
push
xor
out
sbb
mov
sub
stos
push
into
insb
push
dec
test
lret
pusha
cmpsb
mov
and
lret
push
xor
sbb
xchg
sub
cs
shl
je
sbb
pop
add
xchg
nop
sarb
in
sub
push
sbb
push
mov
cmpsb
mov
sbb
lcall
stos
xor
sub
cmp
push
mov
cmpsb
mov
sbb
mov
mov
xchg
ficoml
les
sbb
or
lods
pop
pop
add
xor
pop
xor
lods
jne
mov
xchg
fidivl
js
add
ss
out
arpl
shl
aas
push
adc
and
jae
bound
imul
mov
and
sahf
ds
cmp
outsb
sub
pop
dec
mov
scas
fsubs
pop
sub
pop
adc
pushf
sub
pop
inc
pop
jmp
dec
adc
jl
add
sub
mov
mov
fnsave
rcrb
sar
mov
jmp
jle
sub
and
mov
jo
sub
in
sub
pop
adc
cmp
add
jae
pop
and
push
mov
sbb
loope
xor
xchg
pop
aam
sub
lods
iret
pop
adc
inc
sahf
push
aas
inc
mov
into
jmp
mov
addl
cmpsb
inc
jo
pop
adc
aad
idivb
adc
inc
jbe
iret
push
xor
jmp
inc
daa
or
xchg
add
jmp
scas
mov
in
mov
in
jo
or
sub
int
jne
int3
pop
mov
rclb
xor
adc
jmp
loop
jno
adc
dec
xorb
cltd
mov
push
mov
movsl
mov
or
dec
inc
bound
mov
jecxz
std
cli
cmp
lcall
addb
push
ja
data16
out
xorb
cmp
ds
loop
xchg
out
and
daa
in
movsb
fcompp
fcmovnbe
sahf
adc
sbb
jge
push
jg
or
leave
repnz
daa
or
and
cmp
or
lcall
out
lret
mov
insb
jl
xor
adc
aad
inc
adc
or
imulb
and
movsb
testb
inc
jbe
add
adc
mov
in
pop
outsl
movsl
leave
leave
ss
insb
pop
sub
pop
lcall
sbb
dec
stc
ljmp
push
loop
cmp
or
enter
daa
or
jne
je
jg
in
mov
cmp
or
mov
xor
cmp
mov
movsl
and
mov
or
cwtl
mov
add
add
int3
fsubrs
aam
mov
sbb
push
mov
daa
or
xlat
test
cmp
or
mov
les
sarl
sub
cs
xchg
sbb
and
scas
jno
mov
push
sti
sbb
jo
adc
push
and
in
mov
inc
daa
or
or
test
cs
ljmp
fsub
dec
jecxz
and
cmp
in
inc
mov
inc
inc
pop
pop
jge
fimull
gs
xchg
out
outsl
ja
xor
push
popf
and
or
and
hlt
add
into
dec
call
ffreep
mov
inc
jmp
sahf
pop
subb
testb
jb
adc
inc
notb
scas
mov
jo
adc
jne
loop
cmpsl
mov
rolb
push
subb
pop
pusha
pop
cli
sahf
jecxz
push
push
fstl
or
add
pop
mov
sub
adc
adc
pop
hlt
inc
xor
mov
scas
xchg
arpl
sub
pop
mov
sti
mulb
cmp
or
mov
adc
push
cld
sbb
xchg
jmp
adc
or
or
mulb
adc
iret
sub
mov
push
and
dec
jle
jo
adc
movb
and
and
adc
jecxz
in
loop
pop
lods
push
je
jae
push
push
inc
sub
adc
mov
inc
incl
xbegin
mov
xor
xor
pop
adc
adc
aas
mov
ficoms
inc
push
xchg
test
aad
aas
pop
call
and
loope
ja
push
nop
add
adc
repz
sub
pop
adc
int3
test
pop
adc
cmpsl
das
push
xlat
nop
pusha
aam
xchg
fstpl
xchg
popa
adc
fwait
hlt
test
das
jl,pt
inc
out
adc
pushf
jge
push
inc
mov
mov
pop
adc
jle
dec
loop
mov
or
push
dec
aam
cmpsl
ss
fidivl
and
mov
sbb
jnp
jnp
xchg
jb
cmpsb
cmp
xor
mov
ljmp
push
aam
mov
int
push
clc
test
jge
add
movsl
cmp
fsubs
and
outsb
and
ss
or
or
adcb
hlt
popa
xor
and
adc
dec
or
imul
add
pop
sbb
out
pop
movsl
or
xchg
scas
cmpsl
push
sbb
jmp
pop
adc
lret
pop
adc
lods
jp
jb
les
add
or
ficoml
sarb
adc
stos
je
mov
add
dec
cmc
shl
in
jg
xchg
mov
loop
pushf
push
ljmp
and
pop
jle
sub
adc
bound
in
adc
rorb
sub
adc
dec
inc
dec
inc
mov
into
mov
lret
jg
jb
cltd
push
fldl
jne
ja
cmp
dec
mov
adc
xor
jns
loopne
icebp
adc
cmp
fnstsw
int
push
fmuls
inc
fnstsw
sbb
shlb
sub
mov
and
adc
inc
dec
mov
push
sbb
jns
in
mov
vmovaps
and
pop
out
sbb
sub
and
sub
shll
ret
push
inc
mov
sub
movsb
pop
dec
jo
test
pop
mov
out
mov
push
inc
stos
sub
cmp
or
jmp
out
mov
iret
cltd
out
inc
daa
or
add
out
js
sub
or
mov
pop
and
lods
xchg
in
push
jbe
and
adc
lret
mov
int
lcall
push
bound
jb
std
imul
jle
out
jmp
jecxz
stos
push
inc
repnz
mov
jmp
movsl
push
aas
or
daa
or
pop
inc
xor
push
push
sub
inc
daa
or
out
insb
aad
loope
roll
jge
scas
dec
push
aas
les
test
mov
movsl
ss
das
nop
dec
mov
add
adc
xchg
frstor
fwait
imul
push
daa
push
cmp
mov
jo
iret
xor
filds
or
shll
arpl
rolb
sahf
test
pop
jecxz
outsl
adc
das
add
lds
add
inc
add
je
jne
pop
insl
xchg
push
push
and
outsl
push
inc
daa
or
dec
lds
mov
mov
cmp
popa
into
negb
inc
push
pop
xor
push
cmpsl
jmp
add
out
movsb
mov
daa
or
das
inc
dec
fwait
imul
mov
push
adc
adc
add
adc
imul
adc
cmp
movsl
in
out
push
mov
subl
push
xchg
sub
sub
add
mov
pop
cwtl
in
daa
or
xchg
push
xchg
out
xchg
cs
xchg
popa
rcll
inc
daa
or
inc
or
sub
das
mov
shlb
or
js
pop
add
mov
rcl
push
lods
pusha
out
imul
or
movsb
stc
aam
or
aad
xor
lcall
ficompl
ret
out
into
lea
loopne
cmc
stos
inc
jbe
inc
mov
sarl
add
jae
xchg
mov
add
mov
xor
push
ror
pop
rcpps
enter
js
call
js
loopne
push
jmp
ja
mov
jg
mov
sbb
cld
popa
in
inc
inc
pop
ffreep
out
inc
daa
or
xchg
add
daa
or
fimuls
outsb
subb
lcall
xchg
fst
xor
lock
icebp
dec
or
pop
inc
sbb
ja
adc
xchg
sbb
add
and
push
sub
inc
ja
xor
pushf
out
repnz
add
sub
ss
sbbl
adc
xor
enter
or
movsl
js
push
mov
adc
in
pop
xchg
push
adc
ficoms
or
xlat
mov
clc
xorb
mov
ja
in
outsb
push
and
xor
and
scas
mov
mov
jecxz
int
das
test
sub
pop
pop
xor
mov
inc
fs
and
inc
pop
and
or
or
jnp
orl
andb
imulb
push
adc
push
pop
out
sbb
int
out
xor
sbb
xor
mov
push
daa
sub
or
mov
xlat
pop
pop
xchg
or
adc
out
mov
out
loopne
stc
sbb
sar
push
mov
pop
dec
push
xor
aam
idivl
push
adc
gs
das
mov
jp
frstor
sbb
mov
hlt
test
lahf
inc
jns
shr
mov
dec
mov
pop
xchg
stos
mov
xor
arpl
rcl
pop
xor
test
test
bound
xchg
pushf
adc
and
jecxz
xchg
lock
push
fcmovb
pop
mov
or
inc
aad
cmp
mov
sub
add
inc
fidivrl
ja
sub
lahf
fsts
mov
push
adc
inc
loop
jl
inc
outsl
inc
sub
add
fwait
pop
mov
out
pop
cmp
push
scas
sub
arpl
push
loope
dec
mov
mov
inc
lret
mov
mov
push
cltd
stos
sub
mov
dec
push
ret
mov
icebp
sub
aas
jmp
aad
add
scas
xlat
movsl
je
leave
movsl
shlb
push
dec
jne
jb
adc
push
mov
mov
das
pop
inc
enter
inc
out
aas
hlt
sbb
sub
ljmp
and
pop
inc
dec
push
into
cli
pminub
hlt
and
sbb
jo
adc
pop
xlat
cwtl
xchg
or
xor
sub
popa
in
mov
mov
jno
cli
or
add
xor
pop
iret
xchg
inc
clc
call
pop
cmp
or
xor
bound
fcmove
push
ja
notb
pop
jmp
fcompl
xchg
ljmp
pop
jno
enter
push
xor
es
and
stos
ljmp
daa
mov
mov
rclb
outsl
sub
jp
lods
shll
and
mov
pop
in
addb
rorb
xchg
add
out
arpl
lds
sbb
enter
adcb
mov
sub
mov
add
cmpsb
or
xchg
cmp
shlb
ds
movsb
xorb
sub
scas
fidivs
adc
lods
imul
movb
adc
out
filds
adc
fwait
dec
sti
out
add
sub
shl
cmc
and
scas
xchg
popf
pop
outsb
xlat
scas
push
xchg
cmpsl
push
mov
sub
jp
pop
fs
decb
sbb
lds
and
mov
scas
add
adcb
idivl
fs
nop
pushf
pushf
xlat
xor
daa
or
dec
jns
pop
pop
cmp
cmp
jne
lret
lahf
fiadds
dec
cmp
jo
jns
out
incb
sub
and
lret
mov
out
mov
push
xchg
scas
jp
stc
jb
out
fdivr
mov
lcall
incb
push
fcompl
enter
pop
fiaddl
test
push
mov
mov
ja
int
fisubrs
cltd
mov
loop
cmc
mov
or
xor
jne
cwtl
mov
xlat
cld
jae
subb
xor
push
push
pushf
push
stos
fimuls
pop
adc
dec
and
xchg
push
das
fdivr
mov
inc
cmp
sahf
mov
lret
cmpsb
mov
clc
inc
fwait
mov
pop
aad
cmp
push
jl
mov
jg
arpl
or
push
xchg
andb
cwtl
jb
aas
in
ret
ficoms
mov
xlat
xchg
adc
stc
inc
leave
adc
push
xchg
shrl
sub
ljmp
in
add
inc
or
push
flds
fadds
leave
sbb
mov
test
movsb
push
xor
xchg
jns
fstl
inc
jge
sub
in
xchg
fimuls
fidivs
pop
xchg
in
fnstenv
popa
loop
and
xlat
push
std
dec
push
pop
adc
or
xchg
sub
gs
sbb
inc
adc
jbe
pop
sbb
popf
push
pop
fists
fsubr
inc
add
jg
push
and
or
pop
ret
fstpl
daa
lcall
mov
sbb
aas
fisubl
fstps
gs
pop
sub
es
les
inc
jbe
mov
and
push
das
gs
pop
in
in
jbe
stos
push
inc
jge
sub
sbb
scas
sahf
mov
addr16
js
push
cltd
into
jl
sub
push
and
add
xor
outsl
xor
loope
arpl
push
and
das
add
push
movsl
repnz
in
testb
xchg
jle
movsb
jno
adc
push
pop
push
xor
and
pop
push
xorb
ss
scas
fsts
gs
and
and
or
imul
jmp
xor
cwtl
rorl
ret
aam
xchg
shll
andb
adc
sub
xor
xor
inc
add
sarb
push
clc
scas
xlat
pop
je
je
push
adc
ror
mov
mov
and
mov
xchg
sub
xchg
sub
or
pop
js
sbb
mov
cmpsb
xlat
in
pop
scas
sahf
and
mov
mov
and
mov
mov
push
test
sbbl
aad
je
je
ds
push
pop
sub
cmpsl
test
add
adc
push
out
stos
stos
fisttpll
push
je
push
adc
stos
mov
nop
xlat
std
jno
in
xor
ss
xlat
mov
and
adc
test
dec
fstpl
ds
data16
mov
or
pusha
test
movsl
iret
mov
or
cmp
rcrl
bound
adc
mov
fs
idivb
in
push
fsubr
pop
push
out
cmp
pop
mov
inc
inc
pop
mov
xchg
cmp
sub
push
and
stos
rorb
and
jnp
jno
adc
xor
jp
dec
mov
hlt
daa
push
lds
jle
je
fs
rcl
or
add
adc
test
mov
and
adc
jne
add
aam
test
fwait
inc
pop
adc
jo
push
aas
pminsw
dec
cli
cmp
cmpl
dec
cs
mov
add
stos
adc
or
xor
or
and
adc
cmp
ret
mov
repz
jne
mov
push
imul
into
jg
into
push
lods
out
jae
jg
inc
inc
mov
test
and
adc
pop
in
and
adc
cmp
adc
out
pop
xlat
inc
imul
out
loope
leave
aas
fildll
pop
fsubp
sbb
adcl
inc
mov
jns
rcll
xchg
xchg
xor
les
int
in
dec
mov
imul
fsubp
stc
mov
and
movsb
cmp
push
gs
dec
or
lcall
arpl
pop
sbb
or
add
jmp
and
jns
push
leave
out
mov
aas
add
sbb
mov
push
inc
xor
inc
sbb
jns
cld
jnp
pop
dec
dec
mov
pop
push
in
mov
outsb
in
mov
test
adc
repnz
cwtl
mov
fwait
movsl
dec
or
ficompl
and
addr16
in
call
inc
sarb
sub
mov
hlt
mov
pop
loope
mov
pusha
shrb
or
push
mov
in
cld
dec
push
add
mov
scas
ljmp
mov
cmpsl
out
xchg
push
test
inc
test
jl
test
cwtl
and
mov
push
rep
or
hlt
loop
aad
cmp
adc
bound
push
in
inc
pop
cmpsl
out
mov
popa
sub
adc
scas
sbb
aas
xchg
popa
in
fidivl
in
aad
stos
scas
dec
bound
shlb
fnsave
ret
add
add
adc
pop
in
or
cltd
mov
bound
mov
cmp
adc
roll
lahf
aas
jmp
fwait
pop
and
sub
pop
or
mov
push
adc
mov
or
pop
pop
or
and
or
aas
nop
scas
gs
fbstp
out
fildl
das
dec
pop
pop
daa
fwait
pop
pop
jle,pt
jl
scas
push
outsl
out
mov
inc
in
jmp
xchg
jmp
test
movsb
popl
inc
test
test
popa
push
inc
pop
push
scas
pop
into
into
ljmp
adc
jmp
adc
in
leave
jne
jns
mov
adc
adc
inc
cmpsb
addr16
push
adc
push
ss
push
pushw
dec
dec
sbb
or
pop
sub
push
dec
xorb
cmp
push
lea
or
ds
cmc
pusha
or
or
sub
enter
push
dec
mov
jno
idivl
inc
jb
movsl
fwait
into
jnp
adc
insl
mov
pop
inc
dec
jo
inc
rcrb
adc
push
push
and
jbe
outsl
outsb
or
out
jo
scas
jne
arpl
ds
sbb
sti
inc
pop
lea
xor
out
and
incb
icebp
mov
mov
pop
sub
jg
pop
orl
stos
and
lods
jb
adc
xchg
pop
sahf
shlb
cs
add
stc
push
test
push
adc
daa
nop
dec
ficomps
jg
popa
aam
jno
pop
jbe
and
mov
mov
shll
sub
pop
repnz
fsincos
cltd
push
dec
xchg
push
bound
xchg
fistpll
push
adc
or
and
sbb
xchg
scas
inc
ljmp
shlb
dec
add
insl
jb
inc
jl
cmp
repz
lahf
leave
shlb
sub
add
int3
repz
push
inc
in
cmpb
shlb
out
sub
dec
jns
ss
adc
lret
cld
add
cmc
sbb
movsl
jnp
jecxz
pop
jl
xor
imul
pop
xlat
ret
stc
add
pop
adc
aam
adc
sub
dec
cmpsl
jle
push
sbb
mov
aad
stc
vmread
fcom
pop
adc
sbb
aam
adc
mov
ja
xchg
popa
add
movsb
in
sbb
scas
dec
test
stos
pop
pop
popa
ret
aaa
xor
cs
std
imul
sub
sbb
pop
sub
mov
in
xchg
hlt
sbb
and
cli
push
cmp
mov
jne
pushf
mov
repnz
pop
mov
fidivrs
push
lcall
xchg
or
ljmp
add
or
inc
ss
jle
mov
add
lahf
sub
cmp
cmp
jmp
fucom
adc
lock
cmc
push
lahf
rorl
jb
adc
or
adc
into
push
push
in
out
xchg
pop
push
push
xor
cmp
sbb
sbb
sahf
mov
test
subb
dec
cli
or
stos
inc
fwait
xchg
enter
in
jbe
jmp
dec
xor
cwtl
jecxz
jno
test
adc
xor
mov
or
mov
call
nop
jg
push
or
sbb
xor
inc
cmp
test
cwtl
jo
or
cmp
out
fwait
sub
sub
cmp
xchg
lods
aad
add
pop
fsubs
add
pop
mov
sub
rorb
xlat
lock
sub
push
adc
in
jl
sbb
xor
push
scas
loop
jae
je
xchg
loopne
cld
mov
es
jle
cld
test
enter
mov
incl
adc
lods
clc
dec
shlb
mov
es
jle
mov
aam
adc
mov
xor
dec
sti
dec
adc
ds
sbb
dec
pop
push
or
adc
jg
adc
mov
scas
pop
sub
out
mov
cmpsl
dec
lahf
jbe
aam
adc
sbb
shll
stos
cmp
incb
adc
incb
push
or
nop
or
and
aam
adc
pushf
mov
rolb
insb
fistps
push
adc
std
adc
jo
adc
mov
inc
mov
push
mov
movsl
ljmp
rolb
or
lods
movsl
mov
and
or
pop
rorb
pop
mov
sub
cld
sti
divb
fdivrs
sahf
xlat
push
test
scas
mov
movsb
dec
xchg
outsl
or
push
movsl
lock
sub
decl
rclb
mov
pop
push
jae
sub
cmpsl
movsl
push
leave
addr16
pop
shll
cli
mov
rcrb
jmp
stos
mov
adc
aam
enter
adc
jbe
lahf
push
xchg
cmp
push
sbb
ljmp
loopne
shll
addr16
js
push
fcoms
or
jl
andl
inc
je
mov
dec
loopne
sar
cmpsl
mov
test
and
lcall
xor
test
inc
add
pop
pop
mov
xor
dec
aaa
pop
push
adc
pop
add
test
push
cmp
push
dec
out
mov
aad
enter
mov
xor
adc
mov
loopne
inc
mov
jle
mov
push
ret
popa
mov
sub
dec
jle
lret
lahf
inc
xchg
jle
xchg
dec
dec
arpl
roll
xlat
pop
mov
inc
aam
cmp
cmpsl
in
or
test
lock
loop
push
frstor
sub
test
cmp
or
gs
or
outsb
sti
xchg
pop
ficompl
dec
inc
insl
aam
es
dec
sti
in
lock
scas
dec
xchg
js
push
adc
inc
sarl
sti
mov
mov
mov
dec
mov
movsb
outsl
mulb
push
and
push
adc
push
pushf
adc
sbb
stc
test
jecxz
mov
repnz
nop
dec
adc
and
nop
lret
enter
adc
loop
mov
sub
leave
in
xchg
add
xor
xor
test
test
cmp
push
and
jecxz
mov
jns
popf
shlb
add
enter
sub
aam
lock
jo
int3
sub
test
adc
lods
repz
fnsave
icebp
in
shrb
mov
cmp
in
cltd
jns
stc
loop
dec
in
mov
movsl
mov
jo
adc
push
cmpsl
fistps
enter
and
or
fcmovb
stos
cld
ds
xorl
pop
hlt
lahf
xchg
or
outsb
jo
sbb
mov
push
xchg
in
mov
popf
test
es
push
mov
enter
xchg
add
mov
inc
rcrb
call
es
aaa
pop
pop
sarl
aam
hlt
imul
loope
out
ds
imul
mov
jns
push
leave
mov
push
xlat
insb
pop
fwait
sbb
movsb
in
cmpsl
jmp
or
shlb
xchg
mov
or
adcb
scas
xlat
dec
arpl
adc
or
orl
ljmp
xchg
sti
xor
popf
aas
scas
fwait
pushf
push
xchg
cmp
or
pop
sub
pusha
inc
sub
and
sahf
test
adc
in
lcall
or
adc
aam
or
sub
sub
and
adc
fdivrs
fwait
push
adc
sbb
jo
adc
xor
pop
adc
pop
push
hlt
jo
adc
mov
or
xor
xor
add
or
testb
pop
xor
mov
dec
orl
xor
add
mov
push
inc
push
dec
jle
jno
adc
add
idiv
mov
push
push
test
rcrl
adc
adc
or
dec
decb
adc
mov
daa
sbb
jge
out
fcoml
dec
jmp
or
or
js
mov
rorb
push
mov
sub
push
fsub
dec
fstpt
rclb
aas
mov
mov
jne
mov
add
push
stos
push
shlb
sub
sbb
cmp
imul
mov
push
sub
test
mov
jnp
adcb
and
cli
negl
fadd
rorb
or
pop
adc
push
push
inc
ret
pop
mov
mov
loop
jmp
clc
pop
mov
rcll
scas
clc
cmp
lods
aad
inc
movsl
dec
xchg
fists
repz
xchg
out
sub
jns
jae
iret
cmpsl
inc
jnp
pop
jmp
mov
cld
xchg
sub
sarl
shll
aaa
dec
inc
outsb
bound
jecxz
fsubs
pop
mov
popf
dec
dec
pusha
inc
adc
ljmp
jmp
call
lods
sub
test
inc
add
lret
repnz
mov
mov
rorl
stos
mov
popa
lahf
pop
ret
data16
mov
mov
loop
jae
popa
gs
rcll
inc
xor
ss
mov
popf
pop
gs
fcompl
pusha
pop
jl
xchg
sbb
jae
je
lods
pop
subb
dec
rorl
cld
adc
arpl
or
and
or
or
cmp
fwait
int3
fdivp
addr16
sub
stc
ret
data16
icebp
xchg
mov
loope
loopne
shll
bound
cld
push
push
xchg
cltd
addb
pop
push
test
inc
mov
xchg
lahf
sbb
shll
in
push
inc
push
mov
xchg
xor
and
gs
dec
je
jb
jb
xor
dec
sbb
sbbl
fldenv
rorl
lods
bound
outsl
mov
ficoms
mov
cmpsb
inc
pop
add
cmp
imul
imul
mov
mov
addr16
xor
movsl
adc
sub
daa
push
add
inc
mov
ficomps
adc
rcrb
addl
xchg
mov
add
cmp
test
push
jae
mov
scas
mov
in
fs
sbb
pop
fstp
dec
mov
shll
xor
insb
cwtl
and
inc
mov
lcall
lods
subl
mov
adc
popf
shr
daa
cmp
int
sbb
push
test
cmpsb
addb
sub
fcmovu
dec
lea
lods
fidivl
lds
in
cmpsb
xlat
and
aad
push
clc
cmp
mov
nop
sub
dec
in
inc
and
dec
imul
jmp
stos
mov
push
sub
mov
jns
in
or
fidivl
addr16
sbb
repnz
out
inc
mov
lahf
aas
add
inc
add
lods
aad
cs
mov
popf
imul
xor
out
push
lods
pop
mov
mov
ljmp
es
pop
adc
mov
shrb
dec
lahf
mov
ljmp
ss
pop
adc
lea
pop
inc
stc
push
cmpsl
dec
push
in
and
cmp
mov
inc
lea
pop
fs
push
cmpsl
dec
push
hlt
imul
xchg
mov
cmpsb
mov
pop
test
push
cmpsl
xor
testb
push
ss
push
stos
push
daa
ljmp
sbb
lahf
aas
jle
push
loope
or
push
sti
push
stos
push
daa
cli
lods
aas
cmp
movsl
dec
sbb
lahf
aas
jle
fs
or
jbe
push
stos
push
daa
lret
cmp
movsl
dec
sbb
lahf
aas
jle
je
xchg
or
xchg
sti
push
stos
push
daa
fisubrl
dec
sbb
lahf
aas
add
inc
mulb
in
adc
push
mov
movsl
dec
xchg
pusha
and
enter
in
xchg
xchg
das
pop
push
dec
lds
push
stos
pop
shlb
dec
xchg
sub
into
mov
ret
sub
out
fdivr
or
hlt
stc
push
test
mov
dec
cltd
xchg
sub
adc
pop
and
fbstp
jo
sub
call
inc
inc
sub
sarl
xchg
dec
mov
jl
or
popf
jb
lock
pop
fbld
stc
fcomp
dec
in
loopne
shlb
push
push
dec
fucomip
shll
out
xchg
push
jg
mov
adc
insb
xchg
adc
leave
pop
adc
adc
or
jp
imul
adc
pop
adc
fbld
jnp
imul
mov
sub
mov
leave
pop
adc
adc
pop
adc
dec
and
std
xor
loop
mov
adc
std
jno
xor
sbb
pop
adc
pop
dec
mov
adc
pop
call
cmp
lret
leave
pop
adc
jb
mov
adc
mov
iret
mov
adc
push
fbld
je
or
cwtl
inc
jge
daa
or
xor
lcall
cmc
lods
iret
pop
adc
outsb
and
lret
or
xchg
mov
iret
xor
or
in
lahf
xor
or
int3
adc
pop
adc
mov
stos
pmaxub
mov
mov
aas
pop
outsl
push
dec
sahf
xor
leave
pop
adc
dec
enter
pop
dec
mov
js
dec
outsb
jnp
mov
out
incb
or
js
or
mov
lea
mov
xchg
or
sub
mov
mov
jo
or
pop
dec
loopne
test
push
out
mov
cmp
dec
add
inc
xlat
out
add
movsb
push
fildl
sti
add
inc
dec
push
fisttpll
adc
pop
aaa
sub
bound
pop
cmp
insl
pop
cli
adc
repnz
ljmp
andl
ret
xchg
push
in
inc
out
lods
adc
sbbl
inc
mov
loopne
mov
test
xchg
movsb
push
xor
and
push
and
scas
imul
or
or
movsl
sbb
pop
adc
insl
pop
sbb
pop
adc
jmp
add
daa
or
fbstp
cmc
das
pusha
mov
fimuls
shrd
adc
add
test
stos
push
scas
xchg
mov
and
jmp
xor
or
ret
or
arpl
inc
leave
pop
adc
inc
add
je
pop
adc
js
pop
adc
add
adc
mov
jo
jae
mov
aam
dec
paddusb
mov
pop
adc
dec
push
push
inc
lods
sub
leave
pop
adc
mov
movsl
loopne
inc
leave
pop
adc
rclb
push
sub
and
pop
adc
jb
cmp
sti
into
int
cmpsb
push
inc
leave
pop
adc
je
mov
add
leave
pop
adc
sub
push
or
xchg
adc
mov
mov
pop
adc
sbb
ja
mov
pop
inc
leave
pop
adc
sbb
xor
pop
adc
pop
cli
out
push
lret
inc
leave
pop
adc
ss
push
mov
leave
pop
adc
shr
mov
sbb
jns
inc
leave
pop
adc
jne
dec
mov
cmp
pop
adc
ljmp
sarb
in
inc
sbb
lahf
je
or
adc
aas
adc
js
or
sub
daa
or
fwait
adc
daa
or
jge
inc
leave
pop
adc
pop
adc
and
pop
mov
stos
mov
add
les
stos
mov
movsb
rol
push
mov
ljmp
pushf
fwait
or
jle
je
mov
mov
test
jle
je
or
push
rcrl
scas
sub
cmp
fbstp
jb
sub
or
ficompl
mov
jg
inc
inc
sub
or
inc
mov
or
test
lret
mov
jecxz
test
and
jmp
xchg
pushl
jmp
mov
mov
sub
xor
sbb
xlat
icebp
jecxz
inc
jge
roll
sub
outsl
dec
shl
mov
add
cld
xchg
cmp
lods
jmp
scas
jmp
sahf
adc
ss
mov
popf
pop
ss
ret
movsb
push
aaa
adc
jl
rcrl
sub
gs
jo
sbbb
xor
lock
and
repnz
sarl
pop
xchg
dec
xchg
jbe
les
in
pop
xor
in
call
in
repnz
out
push
fildll
mov
ret
and
movsb
push
loopne
dec
sub
xor
xor
mov
add
mov
push
cmp
inc
pushf
lcall
mov
data16
mov
test
and
ljmp
hlt
mov
out
cwtl
arpl
sti
sub
adc
nop
adc
cwtl
sbb
dec
push
push
rclb
notl
popf
rol
data16
dec
push
push
cmpsl
pop
fists
dec
add
dec
adc
leave
pop
adc
iret
sub
or
movsl
jecxz
leave
pop
adc
push
and
inc
leave
pop
adc
shrl
aad
inc
xor
adc
fnsave
and
vmwrite
adc
xor
or
and
or
arpl
aas
mov
inc
inc
push
out
imul
notl
out
ss
outsl
pop
jmp
dec
mov
xor
fcmovbe
insl
test
pop
jns
cwtl
dec
push
es
jge
ret
movb
adc
push
dec
stc
adcl
leave
jne
repnz
and
insb
push
and
fwait
or
pop
lret
inc
shlb
adc
sub
out
or
push
les
or
jae
dec
insl
sub
pop
adc
xor
and
pop
jbe
jo
pop
adc
mov
out
sti
mov
jl
jecxz
xor
cld
mov
push
je
rolb
aad
xchg
nop
jmp
out
add
rcr
or
stos
stos
popf
enter
jmp
adc
cwtl
les
hlt
notb
out
mov
ja
testl
mov
dec
ror
arpl
mov
pop
adc
push
gs
push
inc
sub
test
fbstp
pop
pop
cmp
nop
cmp
lcall
pop
and
pop
adc
pop
jg
outsb
pop
aam
pop
arpl
add
insb
repnz
dec
inc
add
sub
pop
push
inc
push
add
ss
pop
cmp
inc
pop
push
push
adc
pop
into
dec
imul
mov
push
sub
mov
ljmp
adc
popa
shll
or
adc
ds
or
adc
or
or
adc
inc
shll
pop
adc
loopne
add
or
adc
pop
je
pop
adc
push
and
ret
sub
scas
test
jmp
pop
out
loope
xchg
imul
ljmp
adc
xor
je
in
mov
sub
cmp
imul
jp
xchg
in
jge
faddl
xchg
fsubrl
lods
out
das
mov
cmpsb
dec
xchg
fsubs
xchg
movl
fucomp
push
adc
inc
or
jne
mov
mov
add
mov
jno
enter
adc
dec
xchg
inc
loope
loope
addl
loopne
or
mov
les
cmpsl
stos
push
mov
push
aaa
push
mov
loopne
or
xchg
shrl
adc
or
and
xor
adc
gs
or
dec
insl
fadds
repz
xor
sahf
inc
cli
repz
pop
mov
add
or
movsb
mov
enter
jae
les
or
cmc
shlb
adc
sub
cmp
pop
xorb
pop
sbb
repz
adcb
adcl
outsl
jg
lcall
inc
hlt
sub
and
lret
jnp
add
imul
or
sti
sarb
pop
push
lock
mov
jl
xor
cmp
or
push
mulb
fsubl
or
inc
push
ret
pop
mov
lock
pushf
cs
sbb
mov
xor
mov
enter
or
cli
ret
lea
nop
in
lds
or
adcb
jno
add
mov
add
push
mov
shrb
jmp
shlb
adc
xor
nop
in
sbb
aam
or
nop
jl
pop
aaa
outsb
xchg
js
mov
pop
sub
imul
mull
lcall
fnstsw
adc
gs
dec
adc
add
scas
mov
push
bound
jecxz
test
sbb
int3
fsubl
or
outsb
push
test
mov
inc
sar
jmp
or
and
les
or
je
or
pop
loopne
xchg
fsubs
or
gs
mov
aaa
adc
xchg
lods
fsubl
or
sub
sub
sbb
fsubl
or
push
inc
shlb
adc
or
jmp
sahf
into
fsubs
or
lods
pop
jl
loope
or
loopne
pop
ffreep
or
pop
lds
imul
cmp
or
test
or
sarl
or
addl
inc
adc
lods
daa
adc
add
or
lods
insl
jo
fwait
mov
nop
xlat
std
adc
or
adc
sub
or
push
xchg
test
pushl
jmp
fsubl
or
cli
ret
cs
mov
repz
or
pop
mov
or
adc
or
aas
fcmovbe
push
inc
fcompl
fsubs
or
xor
jmp
or
ds
fsubs
or
out
insl
and
inc
shrb
or
mov
adc
jle
rolb
or
pop
sub
push
xchg
and
or
lods
popa
les
or
jno
fwait
adc
or
sbb
or
xchg
inc
push
push
xchg
or
sub
out
loopne
push
push
pop
inc
in
jle
int
push
and
push
or
enter
testl
adc
push
cmpsl
cmp
lea
int3
or
dec
lods
icebp
adc
pop
inc
mov
sub
mov
add
jno
xor
shlb
adc
sahf
popf
pop
out
sar
scas
xchg
fsubl
or
mov
jl
lods
fnsave
cltd
hlt
push
cmp
adc
shlb
sub
or
mov
sti
fsubs
or
fnsave
not
popl
inc
fidivrl
or
popf
les
scas
rorb
or
orl
cmpsb
dec
in
fstps
sbb
adc
or
fsts
cli
shlb
adc
and
fwait
push
lret
les
xchg
mov
push
push
stos
lods
xchg
aam
or
mov
pop
sub
pop
data16
int3
jge
push
cli
lods
hlt
add
or
stos
mov
jb
adc
adc
shlb
adc
or
dec
push
xchg
movsb
push
mov
aam
or
loop
mov
aam
int3
or
mov
or
dec
cltd
cmpsb
test
mov
or
stos
jo
adc
jp
pop
fsubs
or
cmpl
fsubl
or
out
int
sub
fsubs
or
ja
adc
jmp
mov
or
adc
jmp
outsl
pop
stos
add
shlb
adc
clc
int3
fsubl
or
into
cmp
hlt
hlt
xor
pop
lcall
mov
or
or
rol
fsubl
or
repz
sub
adc
std
dec
lret
testl
test
test
or
insl
test
dec
xchg
sbb
adc
iret
fidivrl
adc
cmp
jo
adc
loopne
or
xor
or
loopne
or
ja
add
addb
dec
push
test
test
sbb
fsubl
or
mov
or
and
repnz
lock
or
mov
adc
fldl
fsubl
or
adc
or
push
in
fcoms
adc
or
arpl
insb
mov
mov
leave
repnz
mov
mov
push
movsl
test
or
out
xor
or
sbb
adc
cltd
loope
and
or
jle
push
inc
orb
mov
mov
sub
movsl
push
and
cmp
jp
pop
icebp
and
xchg
cmp
or
fwait
lcall
push
in
lcall
sbb
lea
and
sbb
jg
jb
adc
shrd
xor
les
or
std
adc
jb
adc
out
push
ds
aad
fucomip
jne
jle
popf
and
or
fmuls
jmp
enter
je
inc
icebp
cmpsl
or
scas
jne
jle
bound
xor
ret
mov
adc
xchg
add
sahf
stc
mov
mov
mov
dec
loopne
or
fnsave
bnd
mov
jne
xchg
ds
mov
or
scas
mov
or
fbstp
rol
xor
pop
inc
int
lret
shll
push
inc
push
xchg
test
dec
jbe
jns
sbb
rcrl
inc
push
push
pop
inc
jne
jle
out
jns
pushf
stos
fisubrs
xchg
out
pop
mov
inc
jmp
mov
mov
and
jl
in
scas
jo
mov
jmp
cli
cmpsl
les
hlt
sti
jge
sub
push
adc
and
dec
out
or
pop
repnz
movsl
push
inc
testb
jb
adc
jp
call
punpcklwd
je
or
popf
nop
push
dec
enter
xchg
jge
push
mov
and
sub
pop
adc
loop
and
push
out
aas
hlt
push
lea
push
jae
sar
test
inc
mov
sahf
test
mov
add
addr16
loop
mov
clc
scas
cmp
repnz
cltd
adc
cmc
add
gs
jns
jno
lods
movsl
dec
xchg
cs
jns
lahf
shrb
lods
stos
and
les
pop
mov
xchg
movsl
sar
test
int
mov
lcall
cmp
pop
out
neg
jmp
add
add
movsl
dec
stos
add
or
ret
enterw
and
dec
add
xchg
arpl
cmp
cld
call
push
fs
mov
jno
mov
pop
adc
inc
jp
xchg
loopne
fcomi
mov
add
insb
inc
or
push
adc
xchg
in
loope
dec
pop
fdivl
hlt
and
mov
out
or
cmp
in
or
xor
in
or
jne
xchg
or
or
call
pop
pushf
lock
mov
or
push
imul
xchg
pop
mov
clc
ret
pushf
jbe
pop
insl
inc
sahf
aas
shrd
mov
dec
pop
pop
inc
in
or
lret
inc
in
or
mov
int3
insl
sub
and
arpl
fiaddl
movlhps
ret
mov
stc
add
roll
or
cmpsb
fucomip
rorl
mov
xor
push
pop
jo
icebp
push
into
mov
lcall
cld
gs
cmp
jno
mov
sbb
add
mov
jg
push
in
add
loop
aas
stos
sub
fcom
pop
adc
paddb
pop
adc
lock
pop
adc
xor
dec
aad
lods
xor
jmp
adc
xchg
es
inc
jb
cltd
push
fstl
jne
ja
add
sbb
arpl
sbb
xchg
daa
sub
pop
fimull
and
ds
jecxz
insb
imul
mov
aas
add
mov
ds
add
push
iret
pushf
out
test
or
or
and
pop
dec
shll
popa
ja
mov
or
xor
incb
sbb
adc
fs
jo
adc
pop
and
and
jo
adc
jno
outsb
aad
cmp
or
xchg
adc
cmc
jecxz
enter
repnz
adc
movsl
hlt
and
adc
add
or
and
cmc
lods
sbb
adc
or
or
add
adc
push
daa
add
or
mov
daa
or
out
xchg
pop
call
jg
and
aad
nop
xchg
jmp
push
testb
daa
or
fdivrs
in
and
lods
test
add
or
outsl
movsb
cmpsb
fdivr
jb
push
aaa
leave
stc
adc
fidivrl
push
push
cld
or
aam
xor
out
or
daa
or
or
bound
movsb
scas
xlat
dec
fsubr
cmp
or
repz
jmp
add
inc
and
or
enter
imul
dec
out
sub
mov
adc
les
mov
ja
sahf
out
incb
pop
out
bound
arpl
imul
pop
mov
ja
outsl
cltd
pusha
pop
icebp
adc
stos
addr16
inc
and
jecxz
cmpsb
test
lds
add
push
js
push
adc
arpl
cs
dec
cmpsl
shrb
mov
jae
push
mov
push
fucomip
xor
pop
adc
outsb
andb
lahf
aas
cmc
es
add
and
adc
rcrb
pop
jecxz
jecxz
and
adc
shll
mov
or
and
sub
in
test
or
cmp
or
scas
sahf
jecxz
mov
rcrb
adc
lahf
sti
inc
pop
jb
cltd
and
stos
push
pusha
iret
jp
xchg
mov
or
and
jne
fldcw
sahf
mov
movb
fsubl
in
int3
jo
xor
xchg
xchg
push
inc
movsl
sub
scas
push
inc
jp
repnz
cmp
dec
or
rol
fimull
pop
dec
cmpsb
outsb
shrb
mov
sub
sub
mov
inc
enter
popf
jp
rclb
dec
pop
scas
and
test
in
pop
add
mov
notb
shr
inc
fistpll
hlt
dec
mov
pop
aad
sub
call
cmpsl
lods
lea
sbb
nop
push
xor
add
and
mov
fdivrs
aaa
pushf
pop
push
imul
ds
mov
jl
loopne
in
inc
xchg
jmp
push
in
jle
roll
inc
cli
repz
pop
cwtl
mov
xchg
ret
sbb
insl
jae
push
sahf
lods
aam
mov
int
and
fildl
imul
mov
xchg
xor
push
sti
lods
out
mov
aam
mov
and
push
ja
popa
adc
push
add
or
adc
xchg
int3
add
lods
dec
lea
fucom
lea
mul
mov
aam
int3
gs
push
sbb
sahf
sub
outsl
pusha
mov
dec
or
negb
sbb
adc
cld
not
or
xor
test
lea
int3
mov
jae
mov
pop
push
insl
cmpl
jge
mov
add
pop
xchg
cmp
sahf
xor
shll
xchg
les
fildll
jo
sub
adcb
out
stos
cmc
or
push
and
xchg
and
mov
sahf
fisubrl
sbb
mov
ljmp
or
sub
push
scas
and
inc
stos
and
add
sub
or
loop
pop
adc
sbb
stc
fistpll
xor
inc
fwait
es
ror
mov
mov
cli
mov
jge
lret
mov
lret
jne
and
int
out
pop
out
or
mov
sub
rcrl
shrl
insb
pop
lods
dec
inc
shrb
fistps
pusha
or
jge
add
push
pushf
inc
inc
pop
les
xchg
stos
pop
fsubl
mov
lret
mov
jne
in
mov
ljmp
push
daa
scas
cmp
lahf
jge
repz
std
inc
int
imul
mov
fwait
xchg
sti
add
mov
cmp
fndisi(8087
jge
mov
ja
mov
out
sub
fwait
clc
arpl
jne
jns
and
cld
inc
lret
inc
xor
movsb
mov
movsb
sbb
cmpsb
nop
adc
orb
adc
cwtl
aad
adc
pushl
and
jmp
fidivrl
mov
mov
sub
xchg
js
pop
call
enter
inc
cmc
and
sbb
jle
inc
add
pop
out
mov
repnz
mov
sub
push
cmp
mov
fcmovbe
fidivrs
add
mov
add
scas
mov
lret
pop
adc
test
les
jne
push
push
test
adc
dec
out
push
sub
jmp
jle
sti
sbbb
push
or
arpl
fiadds
cmpsb
adc
xor
or
lahf
pop
dec
push
sub
mov
lret
mov
xchg
ljmp
mov
push
stos
mov
mov
push
fiaddl
lahf
pop
mov
and
push
jno
test
ficoms
das
sbb
mov
subb
mov
and
mov
inc
mov
insl
or
cmp
sahf
inc
inc
adc
dec
jns
ret
movsb
mov
mov
fndisi(8087
inc
flds
in
insl
xlat
scas
in
add
mov
mov
cltd
and
lods
int3
lret
adc
mov
fdivl
sub
cmp
out
rolb
stos
fadds
clc
or
adc
inc
cmpl
adc
xor
daa
call
pop
xchg
dec
adcl
xchg
ficomps
mov
movsb
in
dec
testl
or
push
xchg
pop
mov
jmp
leave
lahf
inc
add
scas
test
mov
push
mov
push
mov
fnstenv
lock
movb
test
int
cld
mov
test
xor
ljmp
add
push
xor
imul
dec
push
out
xchg
das
adc
cltd
lret
movsb
cli
cmp
cmc
xorb
pop
adc
idiv
dec
mov
loop
data16
or
bound
mov
mov
negl
scas
outsl
adc
in
lock
cmp
pop
out
mov
sub
cltd
pop
test
ja
test
fldenv
stc
xorb
sbb
add
leave
rorl
or
adc
push
arpl
mov
or
xchg
jecxz
mov
push
out
sbb
cmp
fisubrs
push
clc
jae
je
pop
adc
es
fsub
movsl
fldt
aam
repnz
es
pop
pop
xchg
mov
gs
fnstenv
dec
add
in
cmpsb
push
leave
jo
sbb
sub
xor
loope
jae
sub
icebp
sbb
push
mov
out
test
jae
andb
loop
and
cs
int3
dec
mov
mov
mov
cmp
jg
jo
add
enter
mov
cwtl
ja
cs
addl
sub
sub
xor
xor
nop
scas
or
insl
fnstsw
icebp
push
pop
shll
push
clc
push
fnstcw
pushf
dec
fdivr
in
in
fidivl
sbb
adc
data16
sbb
sbbb
push
cmpsl
cmp
adc
adcb
jge
sub
push
add
scas
push
xchg
sub
add
dec
insl
push
push
adcb
sbb
push
xor
adc
inc
incl
sub
ja
jmp
arpl
paddsb
fidivl
ljmp
or
shrb
dec
cmp
mov
mov
push
pop
push
adc
and
jmp
pop
jnp
scas
jmp
inc
cli
add
or
cmp
and
ss
lock
pop
stc
movsb
out
or
adc
or
pop
adc
lret
mov
pop
xchg
dec
cmp
or
and
xor
lods
shll
cmp
or
movsl
sahf
cmp
imul
mov
or
pop
mov
dec
sbb
stos
incb
aam
dec
push
and
mov
mov
dec
lahf
inc
inc
adc
jae
inc
push
cmc
mov
pop
mov
adc
push
mov
sub
in
in
cmpsb
push
imul
mov
ljmp
mov
mov
dec
lahf
cltd
inc
ljmp
daa
pop
mov
stos
push
rolb
shll
divb
or
xchg
push
scas
push
cmpl
subl
adc
inc
mov
pop
fdivs
call
dec
xchg
das
pop
jge
adc
adc
push
mov
lods
jb
mov
daa
or
jb
nop
push
adc
mov
imul
mov
sub
pop
mov
add
out
dec
xchg
imul
push
lods
aam
mov
dec
dec
cmpsl
xchg
roll
mov
insb
xor
dec
mov
mov
jecxz
pusha
cmp
and
movsb
jne
sbb
negl
jp
dec
scas
pusha
adc
js
inc
inc
mov
sahf
call
dec
inc
leave
fwait
dec
jmp
or
fwait
cmp
pusha
mov
sar
jg
push
std
inc
fwait
sti
jb
movsl
xchg
xchg
xlat
and
bound
rorl
cld
add
in
mov
or
cmp
cmp
mov
lock
inc
or
ret
sub
xor
jg
ffreep
insl
testl
cmpsb
mov
xor
mov
testb
push
cmp
inc
sbb
lea
out
mov
movsl
xchg
cld
push
mov
lock
adc
lds
mov
sub
imul
das
mov
dec
and
inc
mov
hlt
and
adc
mov
dec
addr16
mov
lret
js
lahf
imul
int
pushf
mov
xor
insl
jb
add
fstps
xor
xor
push
xor
mov
add
mov
insb
cmp
mov
aad
pop
popa
les
stos
orl
dec
lcall
movb
filds
fdivs
adc
shrl
jge
pop
push
pop
jo
adc
nop
fmull
sti
les
adc
dec
xorb
and
iret
mov
jne
mov
outsl
and
jmp
clc
push
inc
sbb
mov
xlat
enter
push
jb
push
jbe
jp
insl
push
xor
or
loopne
dec
pop
dec
push
add
dec
iret
or
add
adc
cs
lds
adc
cli
pop
loop
aad
lock
xor
push
mov
and
clc
lret
imul
pop
lds
inc
cld
std
add
sbb
sub
push
lods
shrl
add
mov
and
dec
in
and
inc
imulb
fldcw
xchg
fldl
cmp
pop
dec
dec
push
es
mov
outsb
rolb
aas
test
jne
cmp
and
ror
inc
mov
jmp
imul
fisubl
addl
pop
adc
and
outsl
push
scas
aas
dec
imul
dec
dec
adc
test
sbb
imul
mov
dec
add
cmpsl
pop
imul
into
int
adc
xor
movsl
arpl
movsl
dec
xor
sbb
adc
xchg
add
mov
fsubrs
xor
loopne
daa
or
xlat
ja
push
leave
or
add
testb
aaa
aas
xchg
movsb
jno
adc
xchg
or
mov
jo
adc
dec
adc
daa
or
push
or
and
adc
mov
pop
xor
push
ficoms
movsb
jno
adc
mov
adc
mov
fstp
subl
inc
shlb
or
dec
les
cmp
andb
adc
mov
fisttpll
mov
mov
into
fcoms
cwtl
aas
cmc
add
sarl
gs
and
mov
adc
push
and
hlt
add
dec
xchg
cs
mov
sub
xor
movsl
dec
loop
inc
shlb
test
pop
sti
push
push
imul
cltd
push
stos
inc
dec
nop
test
aam
ds
adcb
movsl
dec
loope
pop
add
push
aam
scas
xchg
and
mov
fdivrp
fcompl
aam
mov
test
sbb
js
lret
movsl
mov
mov
js
push
adc
jp
dec
dec
or
add
dec
mov
and
and
jle
scas
xor
or
cwtl
push
lock
inc
mov
inc
mov
and
sbb
addl
sub
and
pop
es
aad
jle
or
imul
xchg
les
jo
or
int
add
sbb
fdivl
sbb
lret
xchg
sarl
jle
or
xchg
pop
jae
shll
in
jno
adc
xchg
fadds
add
dec
mov
or
dec
es
shll
dec
std
in
mov
out
inc
test
lcall
out
lds
sahf
add
sub
ljmp
sbb
jl
and
insb
test
inc
sbb
adc
ss
mov
mul
test
lock
or
inc
icebp
push
out
and
nop
stos
int3
jb
adc
mov
adc
pusha
je
xorb
dec
or
pop
mov
or
cmp
adc
or
fadd
mov
jmp
movsb
insb
xchg
add
jge
jb
adc
jle
jne
mov
add
stos
int3
pop
push
add
mov
cs
rcr
lods
add
mov
jo
adc
jmp
je
adc
pop
and
ja
push
cmp
ret
loopne
scas
scas
sub
xchg
ss
xor
sbb
sarl
orl
or
push
push
and
xor
xor
sbb
mov
bound
mov
jge
jo
adc
out
push
imul
xor
pop
ljmp
pop
les
insb
cmpsb
xchg
and
sub
pop
call
fcomps
mov
mov
sti
push
cltd
pusha
scas
sbb
push
cli
stc
sub
ret
push
sbb
adc
imul
adc
or
or
rcrl
mov
rorb
rorl
pop
jne
xchg
xorb
cmpsb
mov
pop
push
jge
adc
or
stos
push
mov
or
call
mov
addl
adcb
mov
sub
imul
inc
shlb
or
dec
les
push
pop
in
push
inc
push
int3
jb
adc
mov
sbb
repz
mov
push
inc
pushl
clc
test
ds
pop
mov
fistpll
lods
add
movsb
daa
insl
call
ja
inc
inc
movl
sbb
push
xlat
in
pop
into
lret
sarb
loopne
dec
nop
std
sti
push
cltd
fnsave
pop
bnd
or
stos
push
test
cmc
mov
mov
push
adc
jbe
pop
inc
sbb
sbbl
and
rcll
mov
jmp
into
push
dec
js
push
adc
stos
jecxz
or
loopne
push
or
cltd
jmp
push
sub
std
adc
push
adc
dec
xchg
push
cmp
sub
std
fimull
fdivr
mov
hlt
cmp
jge
iret
pop
adc
int
shll
mov
xor
inc
arpl
jmp
jl
jb
ljmp
inc
in
scas
pop
int3
into
ljmp
mov
dec
jg,pt
rcrl
in
rcl
sbb
mov
rclb
outsl
dec
dec
ja
ja
pop
inc
fstps
arpl
enter
jno
rcl
insb
js
arpl
sub
inc
popf
push
jo
pusha
test
mov
dec
ror
dec
stos
test
sbb
stos
jl
adc
fucom
clc
pop
outsb
call
xchg
mov
xor
and
mov
mov
jns
sub
int3
arpl
mov
adc
adc
mov
pop
clc
stos
mov
push
movsb
push
je
pop
adc
test
xchg
jecxz
add
cld
imul
add
xor
xlat
ds
pop
xorl
sar
in
enter
mov
insl
testb
dec
int3
mov
pop
jno
sub
push
popf
shrl
daa
je
pop
adc
jg
std
in
or
call
insb
repz
or
lahf
or
and
and
mov
psllq
idiv
lea
add
pop
xlat
test
xchg
cld
and
in
in
pop
bound
pop
cmp
in
sbb
mov
xorb
roll
adc
cmp
and
add
mov
xchg
xchg
jno
xchg
dec
icebp
imul
jl
cmp
and
or
sbb
hlt
and
mov
outsl
lret
sbb
dec
xchg
xor
sub
je
pop
adc
mov
fdivr
jle
mov
out
mov
mov
adc
popa
push
cmp
mov
dec
jne
mov
out
jecxz
rcl
dec
jmp
pop
cltd
in
fwait
push
xchg
push
out
add
pop
std
jo
sbb
addb
fisubl
dec
test
imul
arpl
mov
insb
mov
or
cmp
xchg
or
inc
movsl
imul
fadd
enter
fmull
sarl
pop
mov
xchg
les
std
inc
fwait
in
aas
bound
icebp
xor
sub
mov
inc
push
pop
xor
inc
inc
cmp
push
outsl
jo
shll
daa
lds
lods
pushf
sub
loopne
mov
add
popa
aam
mov
and
int3
mov
test
movb
test
adc
outsl
ret
sub
sub
nop
and
neg
sub
lods
pop
pop
movsl
rolb
inc
pop
aad
lds
repnz
pop
mov
shl
rcrl
and
lods
mov
clc
movsl
sub
sbb
mov
ret
arpl
fprem
fildll
pop
call
sti
arpl
mov
in
push
pop
lods
shl
shlb
cmpsl
cmp
insb
in
fidivl
dec
aam
push
test
push
scas
sahf
sbb
and
mov
jg
adc
adc
sbb
sub
pop
rorb
xchg
push
dec
hlt
scas
or
sub
mov
sub
pop
rorb
mov
push
sbb
mov
lahf
aas
jle
dec
shr
fldcw
pop
out
mov
push
push
std
or
aam
pop
cmp
int
sbb
and
dec
lods
jmp
cmc
xlat
inc
mov
arpl
ret
mov
std
rcll
add
insl
or
lds
filds
fsub
test
mov
pop
stc
mov
cmp
adcb
push
and
scas
push
test
dec
pop
mov
imul
pop
mov
inc
mov
ret
dec
stos
daa
dec
xchg
cs
mov
insl
stos
push
test
xchg
xchg
mov
mov
loopne
mov
je
lcall
ljmp
fucomi
mov
mov
call
adc
adc
push
adc
adc
adc
push
adc
push
adc
adc
adc
adc
adc
adc
push
adc
and
aas
mov
sub
adc
iret
arpl
cld
out
cmp
and
mov
and
push
cmp
adc
inc
cmp
sbb
cmpb
mov
das
ret
sarb
clc
ja
mov
outsb
test
and
adc
mov
or
mov
js
push
adc
imul
repz
jns
imul
add
iret
aad
leave
ds
jno
push
or
cmp
jmp
xor
lret
scas
push
adc
in
mov
push
out
sahf
out
cmpsb
sub
mov
pop
dec
or
ret
jmp
shrb
mov
inc
pop
lret
jg
add
dec
or
mov
xchg
xor
mov
test
ret
mov
in
fsubr
pop
stos
negb
add
enter
shll
mov
iret
imul
in
sti
fwait
dec
nop
inc
loopne
sbb
push
or
xchg
arpl
jno
xlat
or
or
mov
in
inc
shrb
sti
xor
scas
sbb
fwait
pop
add
mov
xchg
cmpsl
sub
sub
jp
xchg
or
dec
dec
mov
andb
cmp
inc
dec
sub
or
icebp
or
mov
repz
repz
pop
xor
out
popa
xlat
or
adc
scas
imul
arpl
movsl
fnstcw
lods
nop
jmp
jo
imul
xor
dec
xor
enter
cmp
mov
and
ljmp
mov
push
xchg
mov
std
adc
mov
inc
xchg
shlb
jg
fmuls
popa
lock
xor
and
shrb
xlat
jno,pn
pop
imul
out
jecxz
jne
xchg
ret
sar
test
scas
pop
dec
or
pop
mov
push
push
adc
scas
xor
scas
cmp
test
sub
loopne
daa
test
mov
inc
jecxz
add
in
xchg
pop
test
dec
xor
sbb
mov
sahf
aas
jle
inc
in
fimull
ja
leave
jge
cmp
fucomip
mov
jae
cmp
fdiv
mov
insb
aas
jle
pop
cltd
leave
enter
lock
adc
push
fcomps
push
adc
jecxz
mov
and
jae
sub
dec
cwtl
outsb
adc
mov
lret
xchg
jae
xor
cmc
mov
inc
in
mov
mov
outsb
adc
mov
ret
mov
lahf
cmc
mov
addl
dec
push
insl
pop
xchg
sahf
out
adc
push
mov
daa
xchg
add
das
mov
mov
or
and
ret
aad
aam
test
sub
movsb
pop
les
inc
add
push
push
dec
pushl
adc
xchg
int3
shll
mov
je
sub
das
and
push
sbb
adc
push
imul
adc
imulb
inc
shrl
pop
or
inc
lahf
xchg
ja
push
sbb
aad
cmp
sbb
adc
push
sub
pop
add
and
xchg
in
movsl
out
addr16
popf
stos
cmp
aad
xlat
int
mov
inc
je
fisubs
push
decl
or
mov
jp
sbb
stos
mov
iret
inc
pop
in
xchg
pop
or
jmp
jns
jnp
clc
pushf
dec
xchg
sub
jl
mov
lods
push
insb
rclb
push
lret
or
sub
stc
sbb
movl
stos
push
data16
inc
mov
xchg
xlat
and
push
nop
lret
cld
or
or
mov
fs
out
inc
stos
mov
movsl
jne
sbb
dec
out
adc
jo
mov
les
mov
mov
jle
stc
jle
push
sbb
rcrl
jo
sbb
sarb
sarb
jo
push
clc
rcll
imul
icebp
fistps
mov
mov
fdivl
or
push
rorb
in
and
ds
mov
icebp
movsl
cmc
cmpsl
xchg
rcll
loope
fmuls
test
call
mov
clc
aas
imul
jg
enter
mov
std
fisubs
pop
sub
ret
test
push
test
inc
divl
cmc
fxch
dec
cmp
dec
in
mov
inc
mov
xchg
mov
ret
xor
xchg
movsl
push
std
andb
sbb
popa
dec
jb
test
adc
xor
pop
mov
mov
pop
adc
inc
or
mov
pop
insl
sbb
push
or
andl
mov
push
xchg
sbb
icebp
jg
enter
cli
icebp
hlt
sbb
sti
mov
inc
mov
lret
sbb
inc
cltd
inc
adc
aaa
jmp
dec
les
rcr
and
je
pop
sbb
mov
xchg
ficoml
pop
dec
adc
sub
mov
mov
shll
jno
xor
fisubrs
mov
cmpsl
pop
imul
pop
jbe
cmp
mov
pushf
cli
sub
fsts
mov
dec
cmp
imul
xchg
ficoms
jns
mov
cmp
mov
mov
cmpsb
outsb
popf
xor
ficomps
les
fldt
out
jecxz
pop
push
test
or
pop
ret
fnstsw
jle
inc
stc
lea
das
pushf
mov
jno
adc
dec
xorb
cmpsl
fisttpll
fnstsw
data16
lods
pop
pop
div
jle
icebp
in
xor
jb
aad
loope
mov
and
push
inc
pop
out
or
add
popf
xor
push
stos
popa
xchg
test
adc
enter
jmp
lea
js
dec
icebp
jg
pop
fistps
inc
int3
into
out
pop
inc
loop
push
cmp
lret
std
mov
pop
dec
xchg
or
pop
sub
in
sub
and
or
add
je
mov
push
push
cmp
jmp
stos
xor
stos
pop
cli
test
mov
mov
xor
loop
inc
into
push
xchg
mov
mov
in
pop
xchg
test
inc
and
test
mov
in
adc
cmpl
incb
adc
mov
xchg
pop
lds
or
jle
pop
mov
fldln2
movsl
sub
shrl
mov
lods
shl
mov
inc
cmpl
call
nop
cmpsb
pop
sub
imul
daa
adc
or
mov
mov
mov
test
stos
cltd
mov
scas
sahf
mov
cmp
mov
dec
adc
mov
fistps
push
lds
push
mov
pop
add
or
and
mov
xchg
lock
adc
xlat
pop
push
push
fisttpll
pop
das
push
cmpsb
xor
jg
add
sahf
das
add
pop
test
pop
shll
mov
inc
add
incl
hlt
pop
in
push
xchg
pop
push
ficoms
add
push
out
dec
push
mov
in
xorb
cmp
mov
mov
add
xchg
shlb
mov
andb
call
loopne
in
daa
ss
inc
mov
jle
rcrl
ja
inc
lret
rolb
lahf
mov
add
popf
cld
jge
sub
lret
loope
fs
mov
movsb
outsl
lret
push
xlat
cld
or
jnp
push
fmuls
loope
adc
lea
xlat
xor
inc
repnz
sarl
mov
addl
pop
scas
cmc
push
rcll
addr16
lock
mov
mov
repz
inc
mov
scas
add
pop
mov
xlat
pop
adc
gs
ss
or
cmp
jae
and
divb
sbb
or
ss
cwtl
idivb
outsb
fs
pop
ret
mov
add
xchg
popf
into
ret
fdivs
and
rcrl
and
jecxz
mov
inc
xor
xchg
adc
cmpb
cld
imul
push
lock
add
xchg
adc
cmp
mov
lahf
imul
andl
enter
dec
xor
pop
cmp
rcrb
adc
push
adc
cmpb
and
jo
adc
pop
sub
daa
or
pop
in
enter
adc
jne
pop
pop
imul
or
in
aad
dec
stos
push
dec
dec
outsl
inc
gs
jmp
and
ret
rorb
pop
mov
sub
mov
neg
mov
or
gs
jmp
sbb
add
mov
push
jb
mov
xchg
cmc
testb
ret
push
insb
imul
loopnew
mov
pop
popf
jecxz
andb
adc
xchg
imul
cmp
xchg
pop
sub
push
mov
mov
sbb
add
xor
xor
into
push
fwait
adc
ljmp
jb
adc
and
dec
push
lods
popa
int
mov
pusha
cld
sar
ffree
mov
clc
push
es
fbld
xchg
push
ret
dec
je
or
movsl
jae
pop
mov
mov
xchg
push
adc
imul
xor
cmp
and
cmpsl
in
push
test
sub
xchg
pushf
and
mov
mov
sti
or
movsl
jae
pop
adcb
aad
add
scas
xlat
push
je
cmp
mov
adc
lods
icebp
push
ds
aad
fst
lods
das
inc
nop
xchg
in
pop
mov
inc
mov
addr16
adc
push
pop
lods
adc
add
cltd
xchg
call
decb
leave
xchg
mov
lea
push
stos
push
mov
xor
out
insl
and
pop
pop
dec
xchg
and
mov
ret
push
ljmp
pop
pop
xor
push
adc
cwtl
mov
add
adc
push
repnz
pop
push
je
push
adc
fwait
pop
fldlg2
xor
add
adc
push
imul
mov
xlat
push
decb
xchg
pop
leave
mov
pushf
dec
cld
mov
inc
out
fisubl
mov
mov
mov
mov
xchg
pop
icebp
loopne
adc
push
lahf
and
movb
lods
sub
push
xchg
pop
mov
sti
push
dec
adc
jg
sbb
mov
dec
je
push
adc
xchg
fldl
adc
call
fistl
mov
push
adc
jecxz
add
addb
lods
pop
push
or
pop
ret
pusha
sub
xchg
pop
outsl
aas
jp
pop
xchg
cmpsl
cmp
pop
mov
sub
and
adc
sub
sub
decb
test
andb
adc
and
mov
jg
push
push
mov
add
jne
rol
cmp
repnz
xchg
xchg
push
in
jae
dec
out
xor
ss
in
inc
push
mov
or
inc
jmp
dec
jbe
add
icebp
mov
inc
aam
mov
cltd
aas
inc
mul
std
mov
or
mov
mov
loopne
jo
adc
and
imulb
scas
out
es
stos
notb
fnstcw
push
push
mov
mov
xor
adc
or
loope
dec
xorb
call
cmp
jae
test
cli
stos
popf
in
xor
sub
and
xchg
xor
sub
icebp
hlt
or
or
cmp
pop
fsubrl
adc
pusha
push
call
inc
xchg
cltd
test
pop
push
jns
dec
test
divb
fxch
jg
push
or
xchg
add
insl
lods
mov
ds
cld
mov
adc
mov
loopne
cmp
jge
sbb
je
sti
mov
out
fldenv
lahf
mov
cmp
lds
pushf
inc
xlat
dec
pop
adc
test
in
mov
mov
call
lea
pop
xlat
mov
jge
xchg
push
js
mov
ret
loop
fwait
pop
ds
and
cs
adc
or
sub
jns
test
and
adc
cmp
mov
cmc
lret
adc
or
push
xor
cmp
orl
mov
adc
jne
sub
pop
xchg
iret
cmp
fists
pop
sbb
adc
add
pop
lock
jle
and
adc
mov
and
adc
cmp
mov
sahf
jle,pt
push
mov
and
adc
jns
repnz
xlat
mov
ljmp
mov
sahf
aas
jle
cld
xor
jl
rcll
inc
into
aaa
loopew
stos
sahf
mov
adc
dec
xor
dec
xchg
mov
cld
in
xchg
sub
js
ljmp
adc
or
ljmp
ja
into
ss
xchg
or
daa
out
push
sub
pop
xchg
add
inc
fidivrl
and
adc
xchg
xchg
sti
sbb
xchg
sbb
movsb
cmp
lea
scas
push
lahf
cmpsl
inc
sbb
or
insl
cmc
pop
adc
ljmp
sub
cli
negb
add
dec
adc
inc
lods
mov
lock
scas
sbb
cli
mov
push
rclb
push
and
push
adc
fwait
pop
cmpsl
out
sub
sti
push
sub
jecxz
mov
pop
stos
push
or
add
lcall
pop
stos
ss
dec
sbb
repz
mov
fisubrl
jb
scas
mov
inc
daa
or
or
les
and
jge
adcl
push
mov
pop
mov
repnz
or
push
or
cmp
aad
push
test
mov
cltd
fwait
popa
push
mov
fildll
push
imul
es
leave
in
mov
pop
adc
push
mov
add
cmp
in
hlt
sbb
mov
outsl
or
leave
pop
sub
or
xor
sub
jmp
add
lods
movsl
push
rcrb
iret
add
add
cld
fcom
dec
add
sar
insl
pop
notl
mov
vmwrite
sbb
xor
call
ja
jge
loope
pop
push
aam
cmc
bound
lcall
inc
fcompl
push
push
mov
loopne
fisttpll
sbbl
hlt
orl
pop
les
jbe
mov
clc
dec
out
lahf
push
push
sbb
jl
push
adc
out
lret
orl
jns
stc
jne
jae
mov
out
popf
nop
jbe
xchg
mov
and
test
addb
add
push
add
decb
sbb
or
daa
or
or
lods
push
cmc
push
inc
push
lods
lock
inc
testb
mov
push
dec
jle
sub
or
stos
jno
incl
shll
jb
mov
mov
ja
sbb
js
mov
adc
or
in
inc
roll
sbbb
cmp
jns
xorb
outsl
call
add
or
dec
jl
push
adc
nop
sbb
stos
xor
jno
pusha
jo
adc
cwtl
push
fimuls
sbb
mov
in
fs
jno
adc
pop
or
mulb
daa
or
sbb
and
or
push
cli
sub
adc
sub
or
sub
mov
jp
in
ja
adc
sbb
scas
test
ss
cltd
push
scas
xchg
sub
ss
aad
push
sbb
xchg
or
int
fdivs
and
es
lea
aam
dec
push
mov
hlt
jo
adc
pop
movsl
mov
xorb
xor
dec
stos
and
or
xor
shll
addb
loope
xchg
dec
sti
js
lcall
adc
adc
mov
add
call
jo
adc
or
daa
or
sub
not
movsl
pushf
sahf
xchg
popa
xchg
and
loope
or
jmp
ficomps
shrb
jb
adc
cbtw
fs
outsb
mov
loope
jns
sbb
es
adc
lock
test
jae
mov
push
stos
and
jmp
sub
es
adc
lock
test
dec
fldenv
push
stos
and
jmp
sub
aad
xchg
aas
jle
cmp
fcmovb
sbb
stos
inc
mov
icebp
pop
lods
push
fsubrl
sub
fistpl
loopne
jle
in
push
fdivl
adc
scas
das
enter
movsl
pop
es
cmpsl
cmp
sti
loopne
aam
push
adc
mov
jnp
inc
test
daa
pop
adc
mov
push
inc
mov
sub
adc
mov
push
mov
outsb
cmp
mov
in
fidivl
addr16
mov
mov
dec
xchg
aas
pop
push
dec
lahf
js
sub
adc
clc
mov
sub
adc
pop
scas
pop
mov
dec
xchg
sub
fwait
cmp
call
sub
adc
sbb
push
stos
fnsave
rolb
jbe
push
sub
adc
mov
sub
adc
les
adc
nop
stos
lods
jg
aam
or
pop
in
jg
sti
jl
int
push
mov
sub
adc
xchg
mov
ds
sahf
aas
or
loopne
cmp
sub
adc
cmpsl
push
scas
pop
xor
sub
outsb
loope
sub
adc
inc
sti
in
fcmovnb
fcmovnu
mov
jge
sub
or
pop
adc
cmp
cmova
movsb
sub
adc
push
data16
xor
lods
sub
dec
dec
xchg
insb
shrb
pop
adc
hlt
push
lcall
bound
pop
mov
sbb
idivl
cs
cld
xchg
bound
subb
mov
inc
push
mov
push
iret
mov
shr
cmp
push
jmp
mov
mov
pop
jl
pop
adc
sub
xor
lahf
mov
lcall
arpl
push
iret
nop
pop
test
sub
adc
lcall
jns
sub
push
cld
add
negb
and
ficoms
sub
fs
imul
pop
adc
lods
std
push
fnstenv
int
fwait
das
xor
add
shll
pop
adc
insb
arpl
inc
and
cmc
inc
aam
pop
adc
bound
sahf
mov
dec
inc
sbb
add
scas
pcmpgtb
cs
adc
xor
arpl
sbb
insl
call
xor
xor
fdivrl
inc
mov
and
ret
sub
sub
gs
lahf
push
lea
lods
imul
mov
icebp
data16
pop
adc
push
outsl
xchg
or
and
jecxz
insb
imul
das
pop
adc
cmpb
pushf
xchg
data16
fildll
popl
das
pop
adc
daa
sbb
pop
addl
inc
sub
cli
in
pop
adc
pop
movsb
inc
mov
aam
and
fmull
push
pop
inc
xor
adc
in
xlat
jmp
sbbl
and
inc
scas
or
cld
or
cmp
test
lock
xor
adc
xor
mov
pop
xor
dec
dec
mov
movb
or
addl
ljmp
sub
pop
lret
inc
jb
imul
movsl
aam
gs
xchg
repz
adc
adc
xor
adc
hlt
imul
test
dec
into
scas
adc
adc
jnp
shl
xchg
xor
adc
mov
xchg
lds
stos
push
mov
movsb
push
test
dec
inc
sub
fwait
cmp
loopne
or
xor
adc
movsb
push
scas
das
or
jmp
je
xchg
pop
loope
pop
pop
aad
std
mov
jle
lods
inc
mov
push
mov
push
pop
xchg
mov
jle
push
aad
mov
popf
pop
imulb
mov
test
daa
sbb
cmp
jmp
adc
inc
sahf
aas
cmp
xor
adc
ja
shlb
adc
push
pop
stc
mov
jg
push
aad
fsubrs
pop
push
negb
mov
push
in
mov
sbb
movsb
dec
out
jl
pcmpeqb
jle
mov
lcall
stos
push
scas
dec
in
lahf
in
shl
and
pop
adc
mov
xchg
lds
stos
push
mov
movsb
push
test
test
cmp
loopne
or
xor
adc
mov
xchg
fiaddl
xchg
outsb
je
pop
adc
and
cli
negb
popa
inc
mov
xor
stos
jne
mov
mov
push
jmp
sbb
xor
cmp
mov
inc
mov
xchg
pop
loope
pop
jle
jnp
mov
in
xchg
inc
pop
mov
je
mov
inc
pop
movsl
fwait
ds
stc
push
push
stos
push
mov
mov
push
mov
jno
jl
mov
clc
dec
inc
mov
adc
lcall
adc
dec
movsb
pop
cmp
aad
enter
lods
push
stos
rorb
dec
aaa
adc
pop
push
push
cwtl
repnz
cld
insl
out
adc
test
enter
inc
subb
mov
cmp
mov
das
pop
adc
lea
mov
scas
lods
mov
pusha
cld
cmpsb
les
js
push
add
hlt
lahf
xor
js
rolb
repnz
dec
pop
xchg
pop
aam
pop
bound
or
les
popa
scas
int3
jge
std
pop
pop
mov
and
testb
call
mov
sbb
push
mov
sti
push
mov
pop
flds
or
jp
ja
enterw
add
stc
cmp
push
mov
or
adc
mov
mov
iret
jb
push
fadd
leave
cmp
push
dec
inc
out
fisubl
inc
jp
lods
nop
imul
into
fwait
cmp
xchg
mov
push
jg
cltd
lds
idivl
cmp
imul
bound
pop
repnz
jns
dec
sbb
push
lret
jnp
dec
push
jae
fisttpl
jp
clc
aaa
pop
adc
sbb
pop
jb
cmp
popl
incl
adc
adc
cmp
inc
inc
sub
pop
adc
dec
inc
inc
cwtl
cmp
shlb
aaa
pop
adc
inc
cli
push
stos
sub
call
cmp
adc
in
rcr
loope
inc
jo
mov
pop
out
cmc
jp
dec
push
mov
out
jmp
sub
sub
inc
pop
xchg
loopne
xlat
sub
lods
dec
xchg
loope
push
mov
scas
jg
popf
repz
push
jg
lahf
mov
inc
mov
sbb
mov
add
or
aaa
sbb
fisttps
or
sub
out
mov
add
imul
and
adc
pop
adc
daa
jmp
xchg
and
cmp
fcmovnu
cmp
outsb
bound
adc
mov
insl
shl
nop
cmp
adc
inc
scas
pop
into
out
fwait
mov
add
jno
lds
sti
in
dec
insl
rcl
testl
add
fnstenv
add
repnz
int3
sbb
cmp
push
imul
push
mov
movsl
ds
sub
rcr
fdivrl
ljmp
mov
adc
jmp
jno
lds
rcl
testl
xor
cmp
adc
in
lea
dec
psubsb
fcmovb
mov
jae
sub
inc
cmp
adc
es
inc
in
lcall
fisubl
int
cmp
adc
dec
mov
dec
xchg
sub
mov
imul
fisubl
int
cmp
adc
dec
mov
pop
enter
cmp
adc
in
popf
enter
push
mov
and
push
pop
dec
xchg
pop
and
dec
lahf
aas
push
test
adc
cwtl
mov
sub
scas
pop
lods
jmp
test
jo
pop
adc
and
cli
negb
mov
push
fldenv
ljmp
dec
xchg
sub
aam
lahf
aas
imul
mov
mov
cmp
pop
push
scas
das
enter
movsl
pop
xchg
push
cmpsl
or
pop
adc
push
stc
out
das
push
fxam
orl
clc
ja
pop
dec
sahf
dec
int
in
pop
in
mov
bound
fsubs
pop
mov
dec
xchg
pop
jecxz
pop
mov
add
pop
adc
inc
mov
and
xor
pop
adc
call
repz
mov
repnz
push
jg
stos
push
in
push
ds
adc
mov
nop
sub
xchg
xor
loop
int3
adc
movsb
movsb
pop
and
mov
shrb
sub
clc
xlat
add
mov
lahf
add
mov
cmp
mov
adc
jge
push
mov
popa
add
mov
mov
jbe
sub
test
mov
mov
xchg
adc
cwtl
nop
mov
int
aam
push
psrad
aas
pop
adc
bound
lds
daa
xor
lock
js
or
adc
inc
add
fs
adc
mov
int
inc
pop
adc
in
cmc
je
or
test
adc
sbb
add
scas
pop
pandn
pop
pop
mov
int
and
test
push
sbb
adc
xorb
mov
lret
outsb
lock
mov
add
lahf
push
mov
jno
adc
or
in
sbb
mov
cmp
adc
sub
cli
xor
mov
adc
lods
adc
push
sub
inc
pop
adc
andb
mov
mov
enter
push
iret
push
xor
adc
jns
scas
fnstenv
inc
pop
adc
inc
rolb
adc
lahf
pusha
loop
ljmp
inc
pop
adc
mov
mov
adc
mov
xor
int3
push
dec
cmpsb
pop
scas
pand
mov
imul
lret
mov
dec
insb
inc
pop
adc
dec
jno
pop
int3
sahf
cmp
sub
nop
inc
pop
adc
js
jp
mov
mov
pop
inc
cmp
inc
pop
adc
push
xor
inc
pop
adc
shrb
loope
hlt
mov
inc
pop
adc
int3
int
push
or
push
stos
and
pop
movsl
or
pop
movsb
sub
mov
cwtl
mov
movsb
push
push
scas
das
or
lcall
lock
pop
adc
and
cli
negb
dec
inc
mov
pop
xlat
imul
sar
fwait
push
insl
inc
pop
pop
int
std
mov
jle
mov
mov
pop
mov
xor
pop
adc
jmp
jno
push
add
insb
inc
pop
adc
and
mov
mov
sub
add
nop
inc
pop
adc
sub
mov
mov
fistl
adc
mov
xchg
pop
loope
pop
xchg
jnp
mov
jle
mov
mov
jb
fs
pop
mov
adc
in
lea
mov
and
adc
jo
pop
adc
sarl
pop
adc
arpl
cli
imulb
mov
xchg
adc
daa
sbb
push
stc
jno
xchg
rorb
adc
push
sahf
aas
jle
call
aam
mov
adc
dec
pop
adc
push
cmp
pop
mov
test
sti
push
dec
out
orb
pushf
jl
push
stos
adc
dec
pop
adc
mov
and
adc
add
cli
negb
push
inc
mov
dec
pop
adc
xchg
xchg
dec
pop
adc
push
sahf
aas
or
loopne
adc
pop
adc
mov
scas
das
or
sub
xchg
outsb
inc
dec
pop
adc
ret
negl
push
dec
pop
adc
mov
movsl
mov
pop
adc
push
shlb
cmp
push
test
mov
and
pop
popa
and
jns
fistpll
jp
fnstcw
xchg
adc
cli
les
es
xchg
xor
out
int3
rcr
test
xchg
mov
aam
jle
into
fidivs
cltd
mov
imul
sbb
iret
rorl
dec
mov
lahf
push
mov
cli
aam
inc
test
pop
adc
scas
mov
lahf
inc
cli
lahf
xor
repnz
test
dec
sub
mov
jo
icebp
sbb
jg
push
test
leave
ds
dec
add
faddl
dec
pop
adc
test
and
jg
sbb
int
shll
in
push
imul
loopne
xchg
adc
cli
cmc
pop
stos
ss
out
xchg
movsb
add
les
xchg
mov
je
dec
pop
adc
pop
icebp
or
je
es
call
bound
sahf
ljmp
leave
dec
loopne
cmp
loopne
cld
jmp
dec
aam
shlb
and
popf
cltd
andb
xchg
sbb
dec
lret
rcrb
repnz
subl
inc
loopne
push
outsl
and
add
lcall
je
pop
fsts
jp
pop
inc
adc
icebp
push
repz
dec
inc
sbb
shrl
mov
mov
adc
add
in
or
test
adcl
imulb
jbe
sub
pushf
scas
fldenv
sbb
adc
sbb
dec
nop
outsb
movsb
push
pop
adc
es
scas
push
xlat
lock
pop
push
jmp
xor
lret
inc
mov
adc
xchg
test
dec
cmpsl
pop
mov
daa
or
dec
mov
jg
in
cmpsb
sbb
or
inc
xlat
fcoms
dec
iret
sub
or
inc
mov
std
sub
and
in
jno
arpl
ljmp
imul
mov
jmp
or
adc
in
push
push
mov
xchg
stos
aad
xor
cmp
adc
les
push
cli
imul
int3
dec
cmpsb
aam
aaa
clc
ret
stos
inc
fisubrl
fimuls
sub
jne
aas
or
in
in
fisubl
clc
addr16
inc
stos
push
mov
cmpsb
xlat
jns
sub
fsubrs
jle
dec
leave
sti
add
insl
rcl
test
push
fsubrl
and
icebp
bound
aad
nop
jle,pt
in
fbld
fbstp
adc
scas
das
or
xchg
pop
and
lahf
aas
push
scas
push
ret
pushf
repz
and
jmp
sub
aad
lahf
aas
jle
incb
call
mov
mov
test
int3
scas
sub
aad
mov
jmp
fbstp
adc
scas
das
or
mov
and
push
repz
test
stos
shlb
push
stos
and
sbb
movsl
cmp
mov
cmpsl
test
sti
sbbb
and
sub
fldenv
and
mov
jle
dec
add
movsl
inc
insl
rcl
divl
push
fisubrl
andl
sub
sarl
in
imul
mov
js
pop
adc
inc
dec
stos
push
mov
xor
movsb
dec
rcrl
cld
sti
test
mov
int
push
pop
adc
inc
mov
pop
mov
dec
push
pop
adc
push
icebp
pop
sub
imul
push
pop
adc
adc
sub
adc
mov
stc
cli
mov
push
pop
adc
gs
mov
out
inc
jnp
mov
pop
adc
mov
in
out
lret
sub
add
dec
test
fsubrp
sub
pop
adc
bound
sub
mov
pop
int
pop
lods
add
cli
sarl
scas
je
pop
shr
mov
fsubr
cld
push
pop
adc
pop
cld
out
xchg
jns
lock
push
pop
adc
pop
mov
shrl
cmpsl
test
js
pop
adc
int
movb
movsb
ds
pushf
push
pop
adc
inc
ret
stc
cld
rcrl
cs
sbb
mov
dec
xor
jns
mov
sbb
subl
push
pop
adc
add
jl
pop
les
inc
add
pop
adc
cli
cmp
fsubl
stc
cmp
push
xchg
xor
adc
cmp
loopne
sar
adc
jb
sahf
adc
push
pop
adc
ret
orb
sbb
adc
cld
sub
enter
cmp
fiadds
int3
mov
sub
rol
aad
mov
and
nop
push
cld
outsb
mov
bswap
jge
cmc
pushf
push
jno
adcb
inc
and
adc
icebp
push
repz
imul
in
repz
mov
xchg
jmp
jp
out
mov
sub
xor
scas
mov
fidivrs
push
pop
adc
inc
int3
and
jp
adc
jb
mov
mov
cs
xlat
cld
push
pop
adc
pop
mov
scas
and
imul
out
int3
mov
push
pop
adc
aas
push
mov
push
cmc
mov
pop
pop
lods
cmp
lcall
inc
scas
or
in
or
es
scas
inc
movsl
push
fimull
mov
adcb
inc
stos
xor
push
pop
adc
mov
xor
test
cmpsl
xor
int
mov
pusha
xlat
roll
and
pop
cmp
pop
adc
inc
xor
pop
adc
mov
jg
adc
and
aas
push
test
das
into
mov
in
inc
fisubl
pop
pop
adc
imul
pop
adc
cwtl
stos
imul
sub
les
xor
pop
adc
in
lea
pop
or
xchg
pop
pop
adc
and
lods
leave
cld
shll
mov
pop
sub
pop
lret
pop
pop
adc
adc
adc
es
inc
js
lcall
int3
pop
ja
mov
movsb
push
push
scas
sbb
pop
adc
aad
aam
jge
negb
mov
push
fxam
orl
rcrb
mov
cmpb
mov
jle
pop
inc
mov
push
stos
push
scas
and
xchg
pop
and
dec
lahf
aas
add
cmp
stos
and
mov
mov
cmpsb
xlat
or
adc
sbb
test
imul
aad
push
inc
fisubl
out
xchg
sub
sub
rcrb
mov
jle
test
dec
idivb
xlat
clc
mov
lahf
dec
or
cli
imul
int3
xchg
lock
adc
push
pop
mov
push
aad
mov
mov
push
inc
mov
pop
pop
adc
mov
stos
mov
pop
adc
dec
cli
mov
mov
rcll
and
adc
movsl
cmp
xchg
dec
mov
xor
cli
mov
pop
pop
adc
gs
cmp
dec
imul
stc
sarb
dec
pop
dec
popf
dec
into
aam
rclb
fnsave
adc
ret
push
lods
adc
mov
subl
jo
repz
jl
pop
dec
push
scas
push
mov
jno
dec
fisttpl
lods
inc
sbbb
icebp
pop
fistl
pop
test
and
das
mov
mov
cmc
mov
popf
dec
or
outsb
call
mov
sahf
add
xchg
push
das
mov
popa
mov
sub
lods
gs
mov
pop
adc
xchg
mov
mov
mov
test
pop
pop
adc
cli
inc
mov
fildll
cld
pop
pop
adc
push
mov
pop
sub
jmp
or
cmp
nop
and
mov
pop
inc
add
adc
mov
testl
pop
adc
and
pop
pop
adc
mov
sbb
cltd
lahf
in
lret
cmp
adc
xchg
insl
inc
pop
pop
mov
jo
out
nop
lahf
loopne
ljmp
push
and
adc
xchg
xchg
jmp
dec
dec
inc
enter
push
xchg
cmpsl
imul
xor
and
xchg
mov
cmp
pop
pop
adc
adc
adc
icebp
stos
xchg
ror
pop
ljmp
jae
pusha
pop
adc
pop
roll
mov
sub
inc
push
or
and
enter
das
sahf
dec
push
sub
rclb
adc
inc
movb
mov
sub
minps
add
scas
and
or
mov
arpl
inc
in
int3
mov
jns
dec
cltd
fwait
and
mov
test
cmp
ds
inc
popa
fxtract
mov
adc
dec
out
daa
dec
pop
outsl
cmc
mov
inc
pop
xchg
dec
mov
pop
adc
dec
inc
mov
cmp
adc
clc
push
test
ret
fisubrl
xchg
sbb
push
mov
es
aam
iret
pop
test
pop
sub
ljmp
aad
gs
push
js
mov
js
bound
adc
clc
xchg
imul
sub
and
pop
mov
adc
in
lea
jle
call
mov
je
sub
aam
pop
adc
add
mov
aas
cmp
bound
adc
xlat
dec
shlb
push
stos
inc
add
mov
inc
adc
or
in
fisubl
clc
rcll
mov
mov
push
mov
arpl
jle
mov
jmp
cmp
push
inc
arpl
adc
mov
push
mov
add
jle
push
lods
repnz
inc
mov
out
fwait
test
dec
jmp
jno
lds
rcl
testl
add
fnstenv
insl
pop
dec
lahf
dec
int3
repnz
andb
adc
nop
push
inc
mov
pushl
inc
loope
push
add
sti
les
arpl
adc
jae
pop
std
dec
fs
adc
push
cmpsl
or
mov
ljmp
adc
mulb
mov
or
pop
adc
clc
cmpsl
add
pop
std
xor
adc
push
cmpsl
adc
in
xchg
cmpsl
fldl
jle
pop
std
pop
gs
adc
push
cmpsl
cmp
loopne
and
dec
imulb
cmc
inc
pop
test
pop
std
les
pop
and
in
clc
cli
icebp
in
test
inc
lea
out
inc
mov
popa
mov
stos
lret
inc
mov
cwtl
gs
adc
push
dec
shlb
fnstsw
jbe
jbe
gs
adc
jp
jns
fistpll
jp
flds
adc
popw
adc
les
pop
push
hlt
xor
popw
adc
dec
subb
mov
movsb
push
mov
push
sub
cmc
cwtl
popw
adc
rol
stc
iret
ror
sub
pop
mov
xor
mov
or
pop
adc
xor
pop
addr16
adc
lods
outsl
mov
adc
mov
test
mov
mov
in
inc
jl
loopne
pop
adc
mov
test
outsb
jo
call
mov
ja
lds
clc
jnp
adc
andb
cmp
mov
and
out
xor
jl
or
push
idivl
mov
arpl
ds
enter
sub
fistpll
popf
movsl
sub
pop
adc
xor
adc
and
push
arpl
fisttps
int3
jg
repz
pusha
push
in
and
add
push
add
sub
js
test
cmc
ret
shrb
dec
lds
pop
adc
imul
pop
mov
adc
outsb
push
fs
fsubrl
adc
loop
ljmp
inc
aas
cmp
push
adc
cmpsl
xchg
adc
pop
shrb
outsb
sbb
pop
adc
jns
scas
flds
mov
roll
adc
mov
pop
iret
rol
jl
test
pop
repz
mov
xchg
insb
imul
fsts
sub
push
outsl
cwtl
outsl
mov
push
mov
xchg
push
stos
dec
imulb
fbstp
popf
pop
sbb
pop
adc
hlt
lret
pushf
pop
test
xchg
or
in
aam
popa
sub
xor
sbb
sbb
test
shr
out
sarb
js
sub
int
aam
and
insl
or
imul
push
xor
or
cmp
xchg
lea
hlt
push
mov
pop
adc
int3
std
mov
xchg
fs
pop
adc
mov
sbb
mov
push
aad
insb
sub
std
negb
mov
xor
push
fwait
mov
push
xchg
dec
lahf
dec
int3
in
xchg
rcr
das
add
adc
inc
jb
push
fsubrl
in
jmp
das
push
aad
fsubrs
add
clc
negb
mov
insl
pop
adc
cmpsb
pop
inc
call
add
mov
mov
clc
cmpsl
popa
inc
decb
insl
pop
adc
push
cmpsl
cmp
in
popf
js
pop
adc
xor
push
in
enter
bound
cmc
movsb
dec
xchg
mov
sub
idiv
testb
das
xor
jb
push
fsubr
push
in
fldenv
pop
adc
test
mov
int
outsl
pop
adc
jne
je
pusha
loop
enter
cmp
sti
loopne
divl
mov
test
enter
fwait
addr16
sub
aad
lahf
aas
jle
jle
jmp
fidivrl
mov
cmpsl
push
sub
sbb
mov
sub
in
dec
jge
sti
idiv
jb
outsb
rcl
mull
push
fsubrl
jno
jmp
das
push
aad
loopne
mov
test
imul
sub
fxam
int
insb
ja
rcl
clc
jmp
lea
cli
imul
int3
pop
imul
aaa
cmp
cmp
test
scas
das
enter
movsl
pop
push
sub
imul
jbe
mov
push
stos
and
aas
lods
in
aad
cmp
push
inc
mov
lea
inc
xlat
cmpsb
inc
iret
in
pop
adc
ja
jbe
bound
mov
sbb
insl
xchg
sub
pop
adc
pop
xchg
sub
in
xlat
mov
lods
add
jo
adc
fmul
sarl
out
sbb
pop
shrl
das
push
mov
cmc
add
inc
sahf
push
hlt
loope
outsb
icebp
outsb
call
sub
mov
in
mov
inc
mov
popa
mov
dec
jle
jge
adc
sbb
aam
movb
mov
fnstsw
push
aaa
and
mov
sbb
mov
pop
icebp
adc
or
sbb
jg
js
xor
inc
ja
ja
sbb
mov
adc
or
or
ja
popa
and
ljmp
pop
popa
or
or
je
das
mov
call
bound
sahf
dec
xchg
dec
inc
fisttps
dec
adc
cmp
loopne
cld
xchg
pop
pop
gs
loopne
cmp
ss
mov
shl
jo
adc
mov
notl
aad
jo
pop
adc
push
cmpsb
jns
xor
xor
cmc
aaa
add
adc
fisttps
jae
ljmp
adc
sbb
sbb
out
push
mov
add
and
pushf
mov
fsubs
loop
sub
insb
push
outsb
sub
pop
adc
jns
scas
fnstenv
bound
aad
jo
mov
test
push
or
clc
lods
push
call
pop
mov
adc
or
adc
xchg
push
mov
adc
push
ficomps
push
mov
pop
adc
pop
push
sbb
iret
mov
stc
pop
cmpb
pop
adc
cmp
dec
pop
stc
xchg
loope
jns
ja
sub
pop
adc
inc
aam
jnp
fistps
and
adc
pop
adc
and
cmp
sbb
add
dec
scas
push
cmpsl
or
jbe
adc
adc
int3
jb
shl
cwtl
jbe
adc
push
mov
rcl
mull
push
jmp
icebp
popa
xchg
sub
adc
sti
sti
test
mov
clc
cmpsl
pop
inc
sbb
pop
enter
movsl
dec
orb
mov
pop
adc
insb
icebp
mov
xchg
in
pop
adc
adcb
xor
pop
mov
lcall
cmp
pop
adc
pop
inc
shlb
adc
push
pop
std
mov
sub
std
subb
pop
clc
negb
mov
push
fxam
loope
push
ljmp
cmpsl
pop
dec
or
mov
jle
mov
cwtl
jp
out
add
mov
stc
aaa
sub
cmp
in
add
fdivl
and
push
fxam
xchg
dec
je
ljmp
mov
mov
jle
jno
in
push
mov
mov
jns
adc
movsb
dec
out
dec
mov
nop
cmp
mov
mov
int
jns
adc
jno
je
mov
inc
cmp
aas
or
mov
push
mov
sbb
lods
ret
out
aam
cmp
add
dec
cltd
aas
or
shl
in
fisubl
clc
insl
push
stos
push
mov
mov
push
mov
cwtl
cmp
mov
fidivl
push
inc
jp
adc
mov
jmp
dec
fldcw
pop
adc
sub
adc
test
sbb
aad
or
jp
adc
adc
mov
into
jp
shll
mov
jp
adc
sarb
jge
jnp
call
pop
callw
sbb
push
fsubl
push
pop
mov
dec
xchg
pop
sub
xchg
stc
cli
out
int3
jne
test
xchg
jo
pop
mov
jle
into
aad
cwtl
and
or
pop
adc
ret
loop
mov
pop
cltd
add
pop
inc
mov
ret
repz
js
mov
scas
mov
sahf
inc
cli
lahf
ret
test
arpl
mov
push
jnp
adc
adc
or
adc
in
or
or
or
inc
sti
insl
jbe
mov
add
daa
mov
add
shl
idivb
adc
or
mov
popf
adc
fisttpll
jle
sub
arpl
ds
rorb
sub
dec
rorb
jecxz
loopne
jb
pop
pop
pusha
and
push
adc
es
std
rolb
mov
adc
inc
xchg
xchg
mov
push
loope
and
dec
cmp
imul
mov
push
lret
xchg
lea
pop
pushf
aaa
or
jmp
adcl
inc
inc
pop
mov
xchg
jl
adc
xchg
mov
inc
imulb
sarb
pop
scas
xchg
lods
fisubrs
out
daa
push
sub
add
inc
adc
int3
mov
push
adc
pop
sbb
test
push
scas
push
fstps
loope
mov
xchg
fisttps
or
je
sub
mov
shll
cmp
dec
clc
push
fbld
mov
sbb
add
lods
iret
mov
dec
dec
cmp
inc
fadds
sbb
mov
cmp
jne
adc
xlat
ljmp
mov
es
dec
es
pop
test
pop
sub
jmp
lahf
lods
aad
movsl
std
fdivrl
hlt
jg
das
int3
adc
and
aas
push
popf
push
jge
adc
cmp
push
fldenv
call
and
mov
in
test
add
cs
mov
cmp
je
mov
inc
cmp
aas
or
lods
hlt
in
fisubl
clc
addr16
push
stos
push
mov
mov
push
mov
xchg
cmp
mov
fidivl
addr16
mov
insb
jle
rcl
cmp
sub
pop
shll
std
mov
dec
dec
mov
scas
pop
lods
and
movsl
cmp
ret
dec
mov
lahf
xor
adcl
pop
adc
out
push
cmpsl
dec
mov
lahf
jge
push
pop
sub
sbb
mov
jmp
adc
mov
std
sti
idiv
xchg
mov
or
dec
pop
mov
adc
jle
adc
in
in
fcmovb
sbb
inc
mov
test
je
shlb
aad
mov
std
idiv
negb
test
shrb
jg
rcl
cmp
sub
pop
fdivrl
mov
sbb
nop
jle
adc
push
pop
cmc
mov
sub
push
loopne
jg
adc
test
in
insb
jg
adc
sbb
dec
push
fadds
jg
adc
lret
imul
popf
or
pop
adc
and
mov
dec
outsl
dec
xchg
pop
loopne
xor
cmc
in
pushf
pop
addb
push
inc
and
push
fsubs
pop
mov
dec
xchg
pop
and
dec
popf
cmp
out
stos
add
lds
out
inc
cwtl
push
mov
dec
xchg
sub
inc
pushf
cmp
mov
call
mov
inc
cld
pop
lods
pop
clc
mov
pop
adc
sbb
sub
cmp
out
or
int
repnz
in
mov
pushf
mov
xchg
push
push
loop
inc
mov
cmp
add
loope
mov
addb
inc
xlat
xor
inc
mov
inc
std
push
arpl
sbb
xlat
rcrb
in
out
pop
mov
push
dec
xchg
pop
ret
jbe
and
cs
addl
aas
xchg
cltd
xor
cld
add
stos
rolb
decl
movsl
adc
jno
sbb
jae
clc
je
xor
pop
fsts
xor
cmp
mov
and
out
xor
jl
or
push
testl
clc
ds
dec
dec
xor
ss
dec
rclb
cs
sahf
and
push
adc
je
pop
adc
add
sub
add
xor
xor
je
js
repnz
or
xor
movsb
jb
jge
movsl
clc
mov
addb
and
dec
xchg
dec
test
out
mov
inc
add
addb
shrb
cli
xor
es
lret
sub
add
je
pop
adc
sbb
adc
fcoml
cs
addl
les
or
adc
hlt
mov
sbb
dec
nop
pop
call
stos
push
fucom
lret
sub
pop
cmc
push
test
adc
jns
jle
dec
mov
test
adc
insb
lods
dec
imulb
fbstp
popf
adc
pop
adc
hlt
lret
nop
pop
test
xchg
or
jmp
sbb
int3
sub
push
lock
adc
jle
xchg
outsb
fiaddl
pop
adc
callw
jge
test
sbb
cmp
test
insb
insb
test
adc
jnp
and
pusha
sbb
xchg
xchg
in
jle
addb
cwtl
test
adc
cmpsb
pop
inc
xorb
dec
jmp
jno
lds
sti
push
mov
test
adc
fs
pop
into
out
jle
xchg
sub
adc
jmp
cmp
fcmovb
fcmovu
fidivrs
add
push
mov
xlat
inc
mov
lcall
adc
test
in
fcmovb
fcmovu
mov
nop
pop
sub
sbb
arpl
dec
loopne
pop
sub
stc
negb
xor
push
mov
sub
push
cmpsl
cmp
or
and
inc
int
xchg
adc
outsb
mov
dec
push
ds
negb
aas
fcomps
mov
xchg
adc
inc
jbe
adc
and
lods
sbb
xor
adc
enter
mov
push
stos
and
jmp
sub
adc
sti
sti
test
mov
lods
push
stos
push
mov
mov
push
mov
jns
jle
dec
push
mov
xchg
adc
arpl
shlb
movsl
dec
in
dec
fscale
sti
idiv
xchg
jp
rcl
mull
push
fsubr
std
bound
mov
cmpsl
dec
lahf
sub
test
push
repnz
push
fxam
test
jnp
shl
movsb
xchg
adc
fidivl
addr16
jle
movsb
mov
mov
push
add
mov
ljmp
pop
mov
dec
test
jl
call
sub
sub
push
out
push
lds
mov
mov
and
mov
dec
rorl
mov
adc
pop
clc
cmpsl
daa
les
pop
adc
mov
pop
int
pop
lods
aaa
daa
jbe
xchg
loope
out
jl
pop
adc
sub
pop
aad
stos
inc
outsb
in
fcomi
xchg
pop
js
dec
testb
adc
adcb
sub
pop
adc
mov
je
mov
push
mov
adc
cmpsl
les
mov
adc
or
jns
popa
sbb
add
push
mov
jecxz
div
mov
pop
adc
lret
std
jae
and
cmc
scas
xor
jo
call
mov
addr16
lds
mov
incb
mov
jns
xchg
mov
push
add
fs
adc
mov
int
mov
adc
lds
movsb
nop
out
pop
iret
add
out
or
mov
adc
andl
cmp
loopne
cld
lods
xchg
pop
gs
add
pop
adc
fcmovb
push
adc
out
xorb
in
divl
imul
aad
hlt
stos
lret
and
xchg
inc
xchg
rcr
and
xor
addr16
call
je
add
jg
xchg
dec
idiv
data16
xorl
sbb
jae
mov
adc
pop
aad
lret
xor
mov
sub
inc
xchg
rolb
xchg
insb
pop
loopne
inc
das
xlat
pop
pusha
push
mov
enter
mov
jno
stos
and
push
adc
mov
movsl
push
into
inc
das
pop
rcrb
mov
lahf
or
je
lds
inc
pop
imul
xlat
sub
lods
dec
xchg
loope
push
mov
adc
test
sbb
push
mov
push
mov
cmp
mov
inc
stos
push
mov
jmp
push
mov
adc
aam
out
sarb
mov
loope
aam
and
insl
or
imul
mov
adc
popf
aam
nop
les
adc
adc
loope
pop
dec
ss
popl
mov
into
push
mov
nop
lods
add
aam
ds
sub
mov
and
repz
push
and
lods
jmp
test
fnstenv
std
pop
lret
inc
jg
popl
push
adc
mov
adc
es
xchg
inc
popf
aas
or
mov
insl
mov
cmpsl
and
mov
inc
ljmp
popf
out
std
imul
push
inc
jg
popl
push
push
and
jmp
ds
mov
sar
sbb
mov
mov
jl
pop
adc
cmpsb
pop
inc
andb
jno
lds
repnz
outsb
rcl
testl
add
lods
pop
pop
fisubrs
std
mov
jle
lcall
fnstsw
rolb
in
test
adc
lahf
test
push
push
sub
xor
pop
adc
ljmp
out
jnp
jle
pop
lea
adc
mov
scas
pop
sbb
scas
jl
pop
adc
or
out
in
inc
lods
add
stos
push
fsubr
push
bound
sub
pop
adc
test
mov
clc
cmpsl
xor
lods
stos
pop
std
insb
mov
adc
push
cmpsl
cmp
jge
in
popf
les
sub
mov
or
in
shl
sbb
pop
adc
mov
cli
shll
lea
adc
outsb
scas
pop
iret
out
push
mov
popl
adc
shl
lods
or
scas
mov
test
stos
rol
mov
lahf
bound
dec
pushf
cmp
dec
loopne
loope
jnp
cmpsl
inc
push
insb
popl
adc
mov
cli
mov
mov
popl
adc
loopne
pop
adc
outsb
mov
xchg
push
push
push
inc
mov
cmp
jge
cli
in
mov
pop
adc
cmp
inc
lret
pop
cmp
testl
lea
rcl
cs
cli
into
xor
inc
test
in
jmp
add
jp
dec
les
pop
adc
push
jno
add
or
push
imul
xchg
mov
arpl
lds
nop
nop
pop
adc
andb
jg
icebp
mov
mov
pop
adc
inc
cmp
or
pop
ja
test
movsb
jle
adc
xor
sahf
adc
dec
inc
pop
out
fucomip
sbb
pop
mov
and
adc
sbb
inc
push
xchg
pop
adc
sub
js
pop
adc
or
pop
adc
push
fwait
add
add
xchg
pop
adc
dec
andl
jbe
xchg
dec
loopne
stos
lock
jb
push
into
inc
bound
movsb
sbb
cmpb
adc
mov
add
mov
lods
xchg
pop
adc
pop
int3
push
pop
adc
jns
scas
fnstenv
xchg
pop
adc
ja
sbb
arpl
outsl
jle
in
cmpsb
pop
pop
shrl
push
int3
shrb
pop
fildll
jns
dec
or
inc
adcb
jnp
scas
pop
push
mov
xchg
dec
test
xchg
pop
adc
or
jg
and
outsl
jmp
lret
push
frstor
cld
xor
adc
int3
arpl
ficomps
xchg
imul
jb
dec
push
adc
out
lds
sbb
mov
dec
aaa
rcll
mov
mov
cs
das
test
aad
push
negb
mov
mov
jle
and
pop
mov
adc
jmp
jno
lds
rcl
testl
xor
xchg
pop
adc
lahf
mov
std
jno
cli
add
mov
lock
pop
adc
mov
inc
mov
pop
adc
insb
loope
push
adc
nop
push
scas
sbb
xchg
pop
adc
loopne
xchg
pop
adc
fs
fcmovb
mov
pushf
adc
adc
adc
es
inc
arpl
lcall
int3
ja
shlb
imul
test
stos
ss
movb
popf
aas
or
mov
cmp
int
xchg
pop
adc
mov
pusha
stos
pop
xchg
dec
push
cmpsl
or
xchg
pop
adc
not
adc
scas
das
enter
movsl
pop
enter
or
pop
adc
rcr
mov
mov
cmp
mov
mov
call
xor
rcr
mov
mov
cmp
mov
adc
shlb
cmpsl
cmp
sti
loopne
outsb
mov
mov
sub
or
shlb
mov
sti
idiv
adc
add
sub
test
xchg
pop
adc
in
lea
adc
push
push
stos
and
dec
adc
pop
pop
xchg
sub
adc
loop
mov
fcmovnb
fcmovnu
fistpll
add
inc
cwtl
pop
adc
jo
xchg
sub
stc
sbbb
push
cmp
push
adc
and
pop
shlb
pusha
lcall
fidivs
lds
pushf
insl
mov
push
subl
movsb
and
in
xor
xchg
pop
jmp
cmp
std
out
cwtl
cwtl
pop
adc
and
pop
aad
stos
inc
xor
loop
fcomi
xchg
pop
js
dec
or
insl
call
lahf
mov
jb
sahf
add
mov
test
mov
xor
add
shll
test
push
lahf
loope
aas
add
xor
dec
or
insl
popa
lret
mov
daa
ficoms
and
sti
insl
loop
cmp
pop
sub
ljmp
imul
cltd
pop
adc
and
jl
pop
aam
ja
add
jno
push
out
ss
adc
bound
mov
xor
pop
popa
pop
testb
cltd
pop
adc
xchg
mov
dec
dec
xor
sub
jp
cltd
pop
adc
not
or
sub
push
jmp
xchg
enter
pop
lea
pop
adc
cmp
or
mov
imull
sub
mov
add
pushf
push
mov
jno
leave
mov
or
in
sbb
mov
test
pop
adc
sub
cli
xor
out
adc
fstl
imul
jecxz
mov
xchg
inc
stc
mov
das
push
jle
sub
or
and
fdivl
adc
adc
adc
and
adc
sbb
adc
push
into
mov
jo
and
mov
mov
xchg
dec
test
test
mov
mov
cmp
pop
adc
test
mov
xchg
jge
dec
mov
enter
adc
fsubl
in
xchg
sub
pushf
pop
adc
es
hlt
xor
jo
pop
adc
in
outsb
and
jle
movsl
ret
cmp
xchg
pushf
pop
adc
add
xor
add
pop
jle
iret
popf
add
sti
xchg
mov
push
insb
cmpsb
dec
fmuls
popf
pop
adc
lods
in
push
inc
outsb
push
stos
and
enter
xor
pop
adc
add
mov
fldcw
mov
mov
push
scas
sbb
pop
adc
aad
nop
sub
mov
popf
pop
adc
aam
pop
adc
es
cltd
mov
sti
sbbb
push
xor
sbb
arpl
or
dec
loopne
pop
sub
mov
sahf
pop
adc
sbb
arpl
andl
sub
push
push
xchg
shrb
push
mov
push
clc
dec
xchg
pop
loope
xor
imul
popf
push
sahf
pop
adc
push
sub
in
dec
icebp
sbb
shl
lods
sahf
pop
adc
xor
imul
push
adc
pop
adc
xchg
or
pop
adc
mov
dec
cs
mov
adc
xor
rcl
clc
fstpt
int
dec
lahf
dec
int3
mov
push
neg
mov
mov
cmp
mov
scas
sbb
pop
adc
sar
nop
sub
xlat
cli
imulb
mov
lret
and
inc
mov
cmpsb
pop
pop
call
test
jle
dec
stc
sti
sub
imul
adc
pop
scas
pop
into
out
mov
mov
mov
data16
mov
mov
out
sub
aad
aas
daa
daa
sub
pusha
stc
stc
sbbb
push
adc
and
pop
shlb
pusha
ror
mov
pop
adc
pop
shlb
lcall
sbb
clc
mov
in
inc
xchg
jb
mov
jmp
fwait
jl
aad
roll
mov
cmpb
rep
fadds
adc
pop
adc
hlt
cld
mov
fadds
adc
popa
push
adc
hlt
mov
daa
add
rol
pop
adc
cli
out
icebp
cmp
sbb
pop
adc
xchg
aas
popa
push
adc
insb
ret
stc
sub
cmp
addl
adc
sbb
pop
adc
adc
adc
pop
adc
mov
fsubrs
sub
pop
adc
jae
sbb
mov
mov
add
pop
popa
push
adc
pop
push
and
push
xchg
lock
adc
into
loopne
jno
imul
mov
mov
in
popa
push
adc
cld
push
iret
loopne
mov
jno
adc
flds
adc
aaa
pop
les
adc
arpl
xchg
xor
inc
faddl
adc
pop
adc
loopne
xor
mov
adc
inc
aas
out
dec
mov
adc
rcr
adc
jae
push
adc
push
stos
ss
inc
add
cmp
je
mov
pop
adc
push
adc
push
adc
clc
arpl
push
push
pop
adc
inc
call
cli
faddl
adc
adc
xchg
adc
pop
pop
inc
jno
adc
faddl
adc
adc
in
hlt
fiadds
adc
imul
fs
pop
sbb
pop
adc
adc
mov
and
out
push
or
xchg
call
add
jle
push
pop
sbb
inc
jno
adc
push
or
cmc
aad
pop
or
test
lea
push
adc
int
mov
adc
jnp
push
or
inc
in
sub
adc
mov
les
xor
jb
push
inc
jno
adc
pop
or
mov
adc
mov
imul
push
bound
adc
bound
in
or
cmp
mov
and
pop
or
out
add
or
popf
test
bound
adc
out
dec
xchg
outsl
imul
sar
adc
push
adc
pop
or
sub
or
dec
aaa
out
shlb
inc
bound
adc
pop
cmp
jne
rorl
jno
adc
xor
or
xchg
mov
or
sbb
movsb
dec
or
adc
outsl
out
mov
ja
mov
mov
mov
pop
or
adc
adc
into
imul
jl
pushl
bound
adc
andl
les
adc
sbb
cmpsl
jmp
push
adc
sbb
sbb
inc
popa
push
xor
popa
push
adc
pop
popa
add
adc
inc
jo
adc
bound
adc
out
dec
xor
adc
into
imul
jl
rcrb
or
add
call
bound
adc
mov
xchg
sub
fwait
dec
push
mov
pop
adc
loope
mov
ja
mov
or
imul
dec
xchg
pavgb
or
inc
xor
pop
inc
jne
addb
adc
pop
or
xchg
lret
push
adc
add
cmc
hlt
movb
cli
xchg
subb
sbb
or
xchg
push
fs
pop
adc
cli
jl
sub
sti
or
or
sar
and
pop
adc
shll
adc
or
xchg
movl
dec
sahf
cwtl
and
and
adc
xchg
nop
ja
nop
bound
adc
push
jne
out
loop
and
adc
push
mov
sub
and
adc
and
shlb
mov
push
adc
pop
ret
nop
jb
adc
mov
push
andb
adc
icebp
push
adc
test
or
jl
mov
or
add
rorl
pop
andb
adc
mov
or
hlt
dec
cli
inc
sahf
mov
bound
adc
pop
repz
and
adc
aad
bound
adc
xrelease
lcall
rcll
mov
push
dec
into
jge
loope
bound
adc
push
and
adc
and
and
jmp
pop
adc
and
flds
adc
in
fldt
imul
adc
or
jmp
cmpsb
adc
adc
dec
movsb
lods
lock
adc
lret
in
jno
setns
inc
mov
pop
adc
das
in
je
sub
xlat
sbb
pop
adc
inc
adc
add
mov
pop
adc
shlb
pop
and
sbb
push
or
iret
in
inc
mov
int
lods
cmpsl
sub
lds
adc
scas
jle
jl
pop
mov
outsl
nop
lds
adc
repnz
mov
pop
adc
push
ficoms
add
sbb
or
imul
in
pop
adc
cmp
sub
add
xchg
adc
test
sbb
pop
adc
shlb
rcrb
or
jno
cmp
add
push
or
aas
mov
xchg
and
or
mov
xor
pop
or
inc
in
int
dec
adc
or
push
pop
mov
mov
movsb
push
or
mov
cmp
pop
add
or
iret
mov
lods
jg
mov
or
sbb
rorl
adc
sbb
pop
or
mov
leave
hlt
pop
or
sub
fwait
and
fisttpll
pop
adc
adc
or
push
mov
or
and
and
dec
pop
and
adc
movsb
test
hlt
das
andb
adc
pop
test
push
adc
adc
xor
adc
fnstcw
or
loopne
xchg
mov
xchg
shlb
or
cmp
in
scas
sbb
and
adc
add
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
call
xchg
xchg
xchg
nop
nop
mov
nop
nop
pop
xchg
xchg
xchg
nop
nop
mov
nop
nop
add
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
xor
xchg
xchg
xchg
nop
nop
mov
nop
nop
ret
xchg
xchg
xchg
nop
nop
mov
nop
nop
popl
xchg
xchg
xchg
nop
nop
mov
nop
nop
add
xchg
xchg
xchg
nop
nop
mov
nop
nop
push
xchg
xchg
xchg
nop
nop
mov
nop
nop
push
xchg
xchg
xchg
nop
nop
mov
nop
nop
push
xchg
xchg
xchg
nop
nop
mov
nop
nop
push
xchg
xchg
xchg
nop
nop
mov
nop
nop
jmp
or
sbb
rolb
mov
nop
nop
call
xchg
xchg
xchg
nop
nop
mov
nop
nop
subl
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
and
xchg
xchg
xchg
nop
nop
mov
nop
nop
add
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
movzwl
xchg
xchg
xchg
nop
nop
mov
nop
nop
add
xchg
xchg
xchg
nop
nop
mov
nop
nop
cltd
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
div
xchg
xchg
xchg
nop
nop
mov
nop
nop
xor
xchg
xchg
xchg
nop
nop
mov
nop
nop
xor
xchg
xchg
xchg
nop
nop
mov
nop
nop
ror
xchg
xchg
xchg
nop
nop
mov
nop
nop
inc
xchg
xchg
xchg
nop
nop
mov
nop
nop
cmp
xchg
xchg
xchg
nop
nop
mov
nop
nop
jl
xchg
xchg
xchg
nop
nop
mov
nop
nop
call
xchg
xchg
xchg
nop
nop
mov
nop
nop
pop
xchg
xchg
xchg
nop
nop
mov
nop
nop
test
xchg
xchg
xchg
nop
nop
mov
nop
nop
je
xchg
xchg
xchg
nop
nop
mov
nop
nop
dec
xchg
xchg
xchg
nop
nop
mov
nop
nop
je
xchg
xchg
xchg
nop
nop
mov
nop
nop
dec
xchg
xchg
xchg
nop
nop
mov
nop
nop
je
xchg
xchg
xchg
nop
nop
mov
nop
nop
xor
xchg
xchg
xchg
nop
nop
mov
nop
nop
ror
xchg
xchg
xchg
nop
nop
mov
nop
nop
xor
xchg
xchg
xchg
nop
nop
mov
nop
nop
cmpw
xchg
xchg
xchg
nop
nop
mov
nop
nop
je
xchg
xchg
xchg
nop
nop
mov
nop
nop
sub
xchg
xchg
xchg
nop
nop
mov
nop
nop
and
xchg
xchg
xchg
nop
nop
mov
nop
nop
jmp
xchg
xchg
xchg
nop
nop
mov
nop
nop
add
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
cmpw
xchg
xchg
xchg
nop
nop
mov
nop
nop
jne
xchg
xchg
xchg
nop
nop
mov
nop
nop
and
xchg
xchg
xchg
nop
nop
mov
nop
nop
pop
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
jmp
xchg
xchg
xchg
nop
nop
mov
nop
nop
xor
xchg
xchg
xchg
nop
nop
mov
nop
nop
jmp
xchg
xchg
xchg
nop
nop
mov
nop
nop
xor
xchg
xchg
xchg
nop
nop
mov
nop
nop
jmp
add
add
add
pop
daa
test
mov
push
mov
mov
mov
mov
loope
mov
mov
cmp
rorb
push
sbb
fldenv
add
sarl
into
push
adc
pop
sub
xor
fcomps
fsubp
in
rorb
clc
mov
push
mov
pop
cli
fwait
adc
dec
or
ret
sbb
jnp
test
inc
cmp
xchg
cwtl
mov
pusha
into
cmp
push
arpl
aam
sub
rcl
dec
jmp
data16
ret
ror
ss
loope
lcall
pop
mov
aad
adc
add
nop
xchg
shrb
and
in
jne
lods
sub
clc
pop
pop
aam
andl
jge
sbb
dec
pop
dec
shlb
mov
sub
mov
mov
in
les
mov
cmpsb
jo
pop
push
call
test
fwait
push
xor
pop
ljmp
xlat
or
cmc
pop
pusha
test
scas
mulb
inc
mov
inc
add
mov
aam
arpl
or
pusha
sub
lods
or
aam
movsb
addr16
mov
mov
mov
pop
imulb
adc
lods
xchg
push
push
mov
push
lods
js
fstpl
jmp
aad
sbb
mov
mov
pop
jmp
mov
xlat
mov
jnp
and
adc
fsubrl
dec
cltd
jmp
mov
dec
mov
sbb
aaa
adc
cmp
inc
jmp
popa
lods
cmc
inc
add
pop
inc
jne
jmp
shlb
add
mov
mov
pop
loope
cmc
mov
div
enter
xchg
push
push
mov
push
lods
js
fisttpll
gs
cmpsb
dec
bound
push
sbb
mov
hlt
push
pop
cmpl
pop
adc
add
or
push
popa
sub
ret
jmp
push
and
cmp
fstpl
pop
orl
iret
fwait
loop
jecxz
mov
lods
add
or
ficompl
mov
push
data16
lods
test
decb
sub
pop
sbb
jb
jl
into
pushl
call
and
je
loop
bound
pop
push
in
test
mov
es
add
les
and
inc
xor
dec
scas
mov
cmp
rcrb
or
loopne
lea
push
lret
mov
ljmp
mov
fxch
imul
imulb
popf
mov
mov
jmp
les
push
dec
push
call
add
test
dec
incb
and
loop
cmc
add
add
mov
nop
in
inc
push
cmp
hlt
mov
mov
pop
out
es
mov
test
sbbl
aad
mov
sbb
daa
out
xchg
push
aam
iret
sub
mov
test
inc
mov
or
cltd
add
in
lcall
push
test
add
repnz
sub
pop
inc
mov
int
add
mov
sbb
mov
xchg
pusha
sub
insl
rcrl
adc
mov
adc
paddsb
sbb
mov
ljmp
mov
in
imul
pusha
mov
shlb
scas
mov
not
or
push
xor
arpl
push
push
mov
mov
cmp
adc
outsl
ljmp
arpl
xorl
out
xlat
xor
aam
sbb
inc
add
pop
out
lds
jns
mov
jne
and
mov
pop
inc
jne
insl
xchg
push
add
sarb
and
in
addr16
push
je
dec
add
pushl
push
push
cmpl
sub
test
pop
push
in
add
popl
pop
fcomps
mov
cs
pop
in
sbb
push
cltd
cltd
or
aad
pop
jl
fwait
stc
fstpl
xchg
sub
pop
and
mov
pop
push
cltd
int3
xor
inc
jge
inc
outsb
ficoml
loop
loopne
inc
pop
push
sbb
imul
inc
out
inc
int3
pusha
jl
jmp
sub
xchg
call
mov
mov
popa
neg
rcl
into
push
loop
into
xor
sub
xchg
loopne
push
xchg
xchg
fsubl
push
push
popf
nop
popf
rol
xchg
cltd
stc
jmp
xor
mov
movsl
int3
scas
push
cmpsb
mov
mov
in
lcall
xchg
mov
cltd
inc
nop
stos
xchg
rcrb
mov
mov
inc
ret
daa
adc
xchg
push
pop
inc
fidivrl
cmp
movsb
mov
xor
cltd
add
xchg
mov
and
fnstsw
dec
pop
mov
push
pop
xor
cltd
add
or
mov
mov
jle
xlat
ljmp
aad
cmp
push
cltd
adc
mov
int
cmp
int3
popa
cmp
pusha
sub
scas
stos
roll
cmc
or
xlat
xchg
cs
cmp
or
stos
and
adc
int3
cmp
mov
imul
dec
cmp
scas
adc
outsb
xor
in
add
push
pop
cmc
inc
and
mov
sbb
movsl
sub
xor
bound
cs
decb
push
sbb
lods
rorl
movsb
jl
shr
fucomi
pusha
xor
inc
cwtl
mov
mov
mov
inc
pop
push
xchg
fidivrs
cmpsb
pop
pop
pop
push
fmull
xchg
lea
jnp
je
adc
dec
and
mov
and
and
out
stc
test
fisubrl
jnp
mov
test
jo
add
push
aad
mov
dec
jp
jge
call
fsubl
pusha
dec
push
xchg
rclb
push
std
pop
push
imul
and
mov
mov
aam
hlt
mov
fisttpl
movsb
mov
xor
cltd
add
xchg
mov
and
fnstsw
dec
pop
mov
push
pop
xor
cltd
add
or
mov
faddp
mov
imul
das
mov
mov
push
enter
scas
ljmp
andl
jno
adc
pop
inc
mov
push
popa
push
enter
daa
add
outsb
rcl
jno
xorl
inc
sub
xchg
test
loope
int3
lock
pop
inc
adc
test
rcl
adc
lds
les
arpl
scas
mov
dec
mov
adc
std
out
stos
adc
sub
and
mov
ljmp
pop
inc
out
fdivrs
push
roll
pop
push
push
inc
and
lahf
scas
push
adc
cltd
decb
push
sbb
mov
mov
or
inc
jl
rcll
fucomi
pusha
dec
es
push
pop
inc
cwtl
mov
inc
outsl
cmpb
loopne
call
lahf
sub
sub
pop
mov
movsl
test
cs
cltd
dec
inc
xlat
out
cmp
push
out
inc
inc
lret
daa
out
cmp
inc
xor
clc
movsb
inc
and
ret
pop
pusha
push
xchg
sub
ror
xchg
mov
movsl
lcall
mov
inc
and
ret
insl
pusha
push
push
aad
pop
add
push
mov
aas
jne
scas
mov
aas
movsl
stos
adc
sub
push
cmp
scas
adc
lahf
fdivrl
lret
scas
pop
ja
inc
xor
and
shrb
in
add
or
mov
adc
insb
xchg
iret
fisubs
dec
pusha
sub
cmpsl
out
cmp
sarb
mov
mov
shrb
stos
and
adc
add
aaa
add
lcall
cmp
jl
cmpsb
das
and
sub
les
sar
xchg
scas
pop
je
and
fwait
mov
lcall
add
roll
in
loope
mov
sub
movsb
out
push
mov
imul
rolb
jg
cmpsl
je
loop
into
aas
pusha
sub
addl
jmp
and
mov
add
daa
or
mov
mov
mov
push
pop
fldcw
mov
or
push
xor
xchg
fsubs
push
roll
rclb
pusha
sbb
jno
loop
out
xchg
decb
push
adc
out
orl
and
imul
dec
sbb
dec
incb
mov
sarl
test
mov
and
shr
sub
push
sub
aas
outsb
xchg
scas
mov
dec
push
stos
push
dec
jmp
add
inc
jne
push
incb
xchg
je
add
push
xchg
shlb
fimull
popa
push
mov
lock
push
pop
inc
xchg
mov
xchg
push
sarl
adc
fcomip
mov
rcrb
jmp
popf
sub
xor
sub
out
lods
adc
xorl
push
fimull
popf
push
rorl
fistl
push
dec
mov
sbb
dec
fistps
lahf
shrb
mov
cmpsl
je
xchg
adc
int3
push
loopne
lods
ret
pop
mov
int3
stos
test
in
and
nop
std
add
add
mov
daa
out
jp
xchg
pop
pushf
ljmp
xchg
shrb
fimull
in
mov
push
push
add
xchg
scas
lods
cmp
push
push
jmp
inc
in
or
mov
or
insl
int3
xor
cmp
push
fcomp
dec
push
rorl
xchg
mov
or
aad
pop
jl
fwait
stc
movsl
mov
xchg
pop
inc
sti
imul
repnz
push
roll
in
inc
inc
outsl
mov
sub
dec
dec
ret
inc
inc
add
push
push
mov
fwait
decb
cmp
push
popa
push
pop
scas
cmp
add
mov
in
leave
sub
repnz
in
addr16
pop
mov
mov
xchg
test
js
std
sub
mov
leave
sub
out
mov
in
ret
mov
pusha
sub
xchg
fisubl
cmp
out
inc
sti
xchg
pop
jmp
xor
xorl
or
add
cmpsl
mov
inc
sti
sub
popf
add
sub
das
rcrl
in
fisubl
rorl
sub
inc
es
push
xchg
scas
rorl
lock
sbb
or
lds
je
sub
inc
jne
scas
cmpsl
repnz
nop
in
inc
push
cmp
hlt
mov
mov
dec
and
loop
mov
hlt
dec
sub
inc
push
jmp
cmp
push
subb
sbb
mov
fsubrs
push
roll
jne
push
inc
ss
mov
xchg
aam
mov
outsl
rclb
cmp
push
mov
popf
push
loop
mov
mov
jge
fimull
arpl
push
sub
sub
jbe
and
lret
fxch
mov
cs
fists
push
xor
mov
not
mov
xchg
mov
pop
sub
mov
push
mov
xchg
cltd
rorb
ljmp
mov
f2xm1
imul
movsl
gs
dec
sbb
push
add
dec
pop
mov
adc
ss
cmpsb
xchg
adc
xchg
rclb
and
cltd
in
je
sbb
sub
ljmp
shrl
icebp
push
xchg
pusha
cmpsb
das
cmova
sub
push
mov
inc
sti
loopne
mov
push
rorl
xchg
xchg
ljmp
jl
in
pop
xor
sub
dec
sti
sub
or
push
sub
subb
cmpsb
dec
sbb
notb
mov
std
xchg
pop
cltd
mov
push
mov
xchg
into
and
push
fidivl
leave
adc
adcl
push
roll
push
sbb
imul
adc
adc
sub
dec
outsl
nop
mov
ss
das
cmc
sbb
push
mov
aam
xor
into
lock
pop
pop
inc
ret
push
xchg
adc
xchg
push
xorl
popf
and
notl
test
mov
sti
pop
aaa
sbb
xchg
scas
cmpsl
or
movsl
mov
sub
xchg
xchg
in
cmpsl
je
leave
fmuls
adcl
test
jbe
push
push
mov
mov
in
mov
negb
repnz
scas
pop
dec
mov
mov
dec
test
mov
inc
mov
fwait
aad
xor
sub
in
pop
adc
mov
dec
cmpsl
les
shlb
pop
stos
dec
pusha
cmpsb
push
sbb
adc
or
sbb
imul
cmp
mov
outsl
cmpsb
das
adc
sub
cwtl
mov
sti
push
pop
mov
xchg
scas
pop
mull
mov
lcall
add
daa
rorb
pop
xor
push
push
mov
pusha
add
lds
cmc
and
rcl
inc
push
pop
push
or
insl
cmc
xchg
push
lods
imul
rorb
ljmp
lods
movsl
fwait
dec
mov
pusha
nop
cmpsl
les
inc
dec
fildll
lahf
shlb
push
or
into
mov
add
lcall
std
into
pop
fistpll
lahf
shrb
sub
push
in
mov
aas
sub
fnstcw
fistps
in
ficoml
pop
pop
rcll
add
or
push
or
pop
xchg
jg
push
sbb
and
cltd
mov
dec
sti
sub
rorl
rcr
jae
rclb
cmp
add
sub
mov
leave
sub
repnz
in
fimuls
mov
mov
xchg
test
js
std
cltd
jmp
sub
call
cmp
ret
mov
shrb
ficompl
pop
in
cmpsl
enter
inc
add
inc
fdivrl
dec
push
xchg
rclb
pushf
shrb
cmpsb
int
ljmp
into
inc
pop
out
test
or
pop
push
xchg
rclb
mov
aad
frstor
mov
pop
daa
lcall
pop
sarl
pop
fists
dec
ficoml
cmp
cmpsb
mov
cmp
and
pop
push
or
aam
cmc
dec
push
lods
imul
mov
stos
int
dec
je
sbb
lods
sub
and
scas
mov
dec
rolb
mov
lahf
rclb
les
add
pop
mov
sub
sti
sub
sarl
pop
lahf
inc
mov
and
pop
andl
adc
mov
xchg
scas
pop
xorl
and
or
outsl
push
pop
mov
dec
sti
xchg
push
pop
add
pop
pusha
aas
shrb
mov
push
sub
sbb
movsb
orl
xchg
movsl
add
mov
pop
xchg
shrb
push
clc
sbb
push
mov
enter
roll
dec
mov
into
mov
je
mov
sbb
cmc
les
imul
adc
push
aad
pop
mov
mov
das
stos
repz
scas
jbe
mov
in
mov
sub
inc
and
adc
or
ds
aam
outsl
pop
sarl
jmp
dec
push
aas
pop
pusha
inc
xlat
add
dec
dec
jnp
xchg
push
mov
loopne
into
xorb
pusha
aas
movsl
ffreep
insb
ficoml
fwait
push
mov
adc
push
dec
mov
push
stos
jle
inc
and
push
pusha
lahf
shrb
mov
scas
je
xchg
adc
imulb
mov
mov
pop
mov
int3
mov
jbe
in
and
mov
add
dec
mov
mulb
das
mov
sub
cld
cmp
pop
ret
adc
pop
mov
inc
dec
xor
call
mov
divb
fidivl
ljmp
push
inc
std
loopne
lods
add
rcrb
mov
inc
inc
mov
addr16
mov
inc
inc
add
push
push
mov
fwait
in
iret
inc
pusha
aas
shlb
in
push
adc
push
xor
sub
adc
scas
mov
les
jg
shl
mov
cmp
cltd
sbb
int3
jmp
push
fistpll
les
jg
rcrl
cmpsl
mov
mov
aad
imul
lods
inc
pushf
pop
sub
mov
jno
jle
sub
ret
mov
rclb
cmp
sub
rorl
ret
mov
inc
sti
push
mov
jle
fists
call
fwait
std
rorb
jmp
and
inc
push
jns
std
xchg
sub
add
out
jmp
icebp
rorb
rcrl
test
push
push
mov
dec
arpl
mov
inc
out
mov
cmc
popf
nop
out
push
push
call
cld
subl
aam
ja
push
lods
clc
pop
and
jmp
mov
ljmp
pop
xor
loopne
test
add
mov
inc
jmp
je
fcomp
cmp
or
push
inc
shll
arpl
fdivl
pop
stos
ret
and
dec
popf
scas
stos
roll
xchg
or
mov
loop
fidivs
push
jl
rcl
mov
pop
pop
pop
xchg
test
adc
repnz
or
mov
stos
sub
stos
push
cmp
lods
sbb
int3
xor
adc
pop
add
push
pop
mov
pop
fdivrs
jl
ljmp
xor
adc
cmp
aaa
push
repnz
ja
stos
adc
pop
and
mov
sub
xor
jne
mov
dec
inc
mov
mov
push
test
pop
rorl
pop
pop
mov
adc
das
pushf
scas
jnp
outsb
ficompl
pop
push
pusha
xchg
movsb
aas
scas
inc
jmp
outsl
negb
mov
cmpsl
mov
ja
stos
xchg
mov
and
mov
cmp
ret
mov
dec
push
rcrb
test
int3
push
push
ffreep
sar
testl
cmp
pop
mov
push
ss
negb
pop
xchg
mov
movb
and
or
stos
mov
mov
inc
ds
in
pushf
push
adc
arpl
imul
dec
mov
neg
sbb
aaa
test
push
rorl
pop
xor
inc
push
jmp
and
fwait
sbb
and
pop
adc
adcl
sub
inc
push
jmp
cmp
push
sbb
mov
dec
inc
mov
loop
scas
rorl
mov
push
in
je
shlb
jge
mov
mov
rcl
arpl
push
aad
out
adc
dec
cs
inc
pop
outsl
imul
xchg
shlb
scas
std
aaa
popa
push
dec
outsb
xor
lahf
jo
and
push
pop
cmc
lcall
sub
into
mov
jmp
fstl
notb
pop
fsubl
pop
mov
les
jg
rcrl
mov
cmp
stc
mov
outsl
std
pop
mov
mov
cmp
mov
sbb
push
js
nop
push
aad
scas
jp
xchg
mov
cmp
cmpsl
mov
or
andb
sub
mov
sub
mov
clc
cltd
sbb
sub
call
loop
ret
fists
xor
push
mov
pusha
xor
inc
in
aas
add
outsl
sbbb
cmpsb
fisttps
loopne
sbb
scas
mov
shll
imul
std
je
mov
cmp
stos
jno
lahf
sub
adc
push
test
add
mov
sarb
in
xchg
movsb
adc
sub
push
mov
rcl
enter
pop
xor
xorl
lret
fwait
and
nop
cmpsb
nop
lds
jmp
sbb
gs
adc
mov
orl
pop
jns
lret
fisttpll
mov
out
lds
push
call
test
sub
ficomps
je
aas
movsl
push
cwtl
in
test
mov
nop
aad
push
cmp
push
mov
aas
enter
mov
dec
cmpsl
add
mov
stos
xchg
jmp
arpl
das
pop
jle
sub
lea
xchg
sub
outsl
scas
je
mov
cmpl
adc
or
pop
sbb
mov
out
lds
into
push
andb
cmp
mov
push
loopne
outsb
push
or
rcrb
jmp
jmp
sub
push
mov
aas
les
push
loope
cmpsb
out
mov
std
jnp
repz
test
dec
pop
dec
insb
xchg
mov
xchg
sbb
jmp
cmpsb
mov
ss
stc
dec
sti
sub
mov
in
fdivrs
sub
rcl
notl
stos
and
cmpsl
mov
ds
mov
sub
sbbb
sub
rol
push
cmp
dec
inc
fldt
mov
mov
dec
movsl
les
push
mov
xchg
insl
rorl
popa
push
test
mov
lods
mov
mov
fs
decl
lock
cld
test
xor
mov
ljmp
enter
pop
push
mov
cmp
popa
aas
movsl
fmull
mov
push
rcrb
jg
pop
mov
jnp
je
adc
dec
and
jmp
dec
enter
pusha
mov
xor
xchg
dec
jnp
je
adc
fs
and
pop
push
aad
cmc
jnp
in
cmpsl
inc
jne
sbb
in
ficomps
shl
in
ret
inc
cwtl
ja
sub
mov
add
mov
mov
outsb
shl
xchg
ja
push
pop
rcl
repz
rclb
jb
pop
xchg
jge
mulb
add
dec
fwait
cmpb
adc
in
stos
ret
push
pop
mov
add
dec
xchg
imul
ja
sub
and
adc
mov
mov
ficompl
out
stos
inc
mov
pushf
push
and
arpl
add
lahf
loopne
mov
mov
sub
mov
mov
shlb
fwait
mov
hlt
push
sbb
popa
dec
dec
mov
pop
out
adcl
and
fwait
mov
lcall
sub
or
sub
mov
or
push
jmp
je
fistl
pop
notb
xor
loop
fimuls
xor
push
mov
adc
mov
sti
push
bound
mov
jle
inc
sbb
pop
fimull
lods
push
pop
test
lods
inc
jne
xchg
dec
xor
ficompl
gs
ret
mov
pusha
sub
and
cmpsl
add
and
jno
add
loopne
aas
rolb
jmp
popa
rorl
imul
pop
pop
inc
xchg
stos
std
xchg
test
xchg
adc
mov
shrb
arpl
pusha
mov
sti
sub
adc
push
adc
mov
mov
bound
sbb
repnz
or
dec
push
lods
sub
adc
fistl
xor
ljmp
dec
movsl
es
cmpsl
les
pop
mov
push
mov
and
scas
xor
in
in
imul
and
das
mov
std
loop
pop
dec
add
jmp
push
dec
stos
std
xchg
nop
into
cmpl
outsl
cmpsb
das
mov
sub
add
push
hlt
xchg
scas
pop
test
stos
push
js
cmp
push
cmp
mov
lods
or
add
addr16
dec
mov
ficompl
aad
xor
sub
ljmp
pushf
add
out
mov
jo
arpl
or
jmp
xchg
dec
pushf
ljmp
pushf
add
adc
mov
aad
sub
rolb
dec
fcomp
jne
push
shrl
pop
lods
push
cmp
mov
aad
repnz
xorb
jns
cmpsl
popf
xchg
into
jns
loop
sub
xchg
ror
dec
pusha
xchg
sbb
sbb
sbb
pop
imul
mov
stos
dec
pusha
sub
sbb
dec
xchg
adc
push
xor
out
out
jnp
jbe
loop
lock
cpuid
xor
ffree
mov
lret
data16
stc
je
pop
popa
jle
lahf
mov
inc
movsl
lods
rorb
mov
or
loop
in
add
loop
or
adc
pop
dec
lods
stc
loope
bound
in
xchg
xchg
mov
ror
iret
pushf
arpl
into
adc
lea
fsts
jb
insl
fldl
or
mov
scas
daa
sbb
xchg
stos
sti
cmp
adc
jo
test
leave
test
dec
add
ret
pusha
les
mov
and
xor
movsl
push
jp
xor
dec
aaa
ss
pop
divb
push
inc
imul
push
enter
dec
lret
