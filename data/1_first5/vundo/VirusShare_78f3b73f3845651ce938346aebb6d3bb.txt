mov
pop
scas
out
imulb
jae
pop
xchg
push
push
mov
call
es
pop
mov
shl
jne
shlb
adcl
xlat
adc
push
bswap
jae
jbe
mov
pop
ja
andb
adc
int
mov
popaw
inc
add
or
lcall
daa
sub
xchg
pushf
in
push
and
mov
xchg
push
iret
jle
lds
sbb
mov
fcomip
lret
and
aas
xchg
cmp
shrl
pop
clc
int
sub
fimuls
aam
addl
add
in
and
aas
insl
in
shrb
ficoml
sbb
das
insl
aam
inc
pop
repz
pop
mov
jecxz
inc
fisttpll
add
js
shll
mov
xor
ds
stos
jmp
and
push
cmp
daa
lods
jns
xor
add
das
xchg
jmp
push
mov
popa
repnz
sub
mov
sarb
xchg
lods
xchg
decl
inc
add
aas
ror
or
mov
loope
jne
aaa
ja
or
pop
push
jmp
dec
xorl
mov
in
shrl
mov
out
xor
mov
jg
aad
inc
aaa
icebp
pop
int
js
lret
les
jo
sub
movsb
xor
in
frstor
jmp
sbb
pop
lods
xor
lds
jl
rcl
jno
sbb
mov
cli
mov
xor
sbb
cli
jns
sahf
clc
cmp
sub
dec
push
sbb
test
popa
push
test
or
jno
sbb
inc
lret
shufps
cwtl
sti
dec
sbb
pop
pop
cmp
inc
sbb
ret
jmp
lcall
and
sarb
jecxz
std
pop
jl
das
call
rolb
outsl
sbb
jns
cmpsl
lret
lea
sbb
sbb
jns
xchg
mov
rolb
fadds
rcll
xchg
cwtl
inc
dec
xchg
inc
inc
mov
sub
sti
jb
add
in
sbb
xchg
cs
insl
pushf
clc
lret
iret
loope
fsts
fisubl
ss
xchg
inc
outsb
dec
sub
dec
xor
in
jb
mov
es
dec
cmpl
dec
lahf
lods
push
inc
mov
ret
mov
lods
pushf
shrb
jb
addr16
popa
jl
jns
std
cmp
add
adc
pop
xor
cmp
add
aas
aam
out
pop
push
sti
repnz
int
dec
arpl
fsubrs
rolb
jmp
fwait
inc
scas
xchg
pop
lcall
xorb
rcr
stc
sub
or
push
sub
mov
leave
inc
mov
mov
add
test
push
cli
outsl
jnp
mov
fnstenv
xor
inc
jnp
push
mov
mov
inc
imul
push
mov
leave
inc
fwait
sbb
sbb
cltd
push
xchg
cmpsb
in
and
stc
jle
lahf
ja
fisttpll
loope
push
xor
push
fiaddl
lods
add
sahf
dec
sub
mov
pop
mov
mov
xchg
adc
js
shlb
push
dec
lods
mov
and
cwtl
xor
xchg
ja
scas
pop
fistps
aad
sbb
ds
inc
mov
movsl
lret
insl
pop
push
lmsw
jb
cmc
adc
in
stos
repz
push
inc
aam
js
jmp
cmc
or
jl
ret
xchg
pop
fsubr
cli
mov
subb
enter
cwtl
push
lods
outsl
mov
mov
dec
adc
add
in
lds
testb
push
movsb
xchg
xchg
aaa
in
inc
repnz
pusha
fmull
imul
insl
cwtl
fimuls
popf
and
dec
push
in
dec
aaa
inc
dec
cli
out
mov
inc
xor
mov
outsl
mov
jbe
in
jb
add
packsswb
sti
jmp
cmp
daa
push
int
insl
mov
jae
mov
clc
mov
les
and
push
int3
scas
cmc
push
add
mov
loopne
jns
inc
dec
cwtl
rorb
inc
lret
mov
mov
out
adc
lret
cmpsl
push
hlt
xor
mov
mov
ret
lahf
jge
fsubr
cmc
fdivl
stc
lds
mov
inc
gs
sar
cli
jecxz
dec
mov
mov
lods
dec
outsl
rolb
jo
xchg
loope
outsl
and
push
subl
ja
xchg
xchg
push
adc
push
inc
pop
imul
lods
add
push
insb
jecxz,pn
push
jae
sub
movl
xor
out
adc
or
or
stc
push
out
pop
inc
sbb
scas
call
loop
arpl
push
int3
inc
pop
jg
loope
repz
das
jle
jno
mov
icebp
xor
mov
fldpi
std
jb
lock
and
fildll
movsb
lods
shll
mov
loope
mov
enter
mov
xor
pusha
xor
add
sbb
xor
cmp
adc
ja
dec
adc
mov
adc
mov
loope
loope
or
test
outsb
test
mov
jge
pushf
loop
xchg
shr
adc
popf
pop
pop
xchg
push
out
jp
lahf
repz
adc
ds
inc
xchg
sbb
mov
fiaddl
push
movsb
jecxz
jb
jmp
iret
shll
mov
addb
es
imul
inc
aas
xchg
add
jge
xchg
enter
fwait
or
xor
mov
lret
adc
daa
sub
mov
xor
pop
mov
cmp
mov
add
shll
mov
push
adc
cmp
aaa
daa
sbb
call
pop
dec
adcb
and
sub
xchg
out
xor
pop
sti
jbe
xor
xchg
xchg
jge
out
push
jl
nop
xchg
outsb
xor
fdivrs
lods
pushf
xchg
mov
xchg
pop
addr16
js
cmp
cmp
dec
out
sbbb
mov
push
mov
mov
mov
adc
mov
add
inc
push
sahf
xchg
fcomi
aaa
adcl
mov
and
dec
sbb
in
stos
push
sub
mov
xor
mov
movb
inc
pop
ja
inc
adcb
aad
pop
dec
xor
add
divl
daa
in
dec
in
mov
mov
movsl
and
mov
imul
sub
dec
lea
xor
inc
pop
arpl
or
jle
inc
loope
and
mov
sub
add
out
mov
jb
rcrb
mov
xchg
mov
mov
popf
xchg
shrl
dec
repz
lahf
sahf
test
pop
cmpl
out
popa
int3
mov
sbb
push
mov
cmp
pop
popa
xchg
lretw
rclb
jmp
cmp
dec
inc
xchg
mov
mul
push
pop
sub
mov
mov
sbb
or
pop
add
pop
lahf
jno
inc
add
aaa
or
cli
shlb
outsl
jns
lahf
add
add
or
push
push
in
sbb
inc
sti
push
dec
fldl
pop
rcr
arpl
cwtl
fisubl
pop
xchg
iret
outsb
dec
clc
push
pop
push
shll
lret
mov
inc
mov
imul
mov
mov
gs
add
jl
sahf
sbb
lods
cmp
and
mov
adc
sbb
fwait
add
lds
in
xchg
and
lret
cmpsl
inc
jl
shrl
jae
in
inc
sbb
ljmp
in
mov
mov
movb
xchg
cmp
dec
add
and
sbb
ljmp
int
setp
dec
cmp
dec
sub
push
rcl
fldl
jns
stos
inc
mov
add
test
xchg
sbb
repz
push
jmp
jno
ret
or
xchg
add
mov
cmp
loopne
xor
jle
xor
adc
shll
mov
mov
mov
mov
dec
mov
stc
lret
loope
jmp
div
mov
mov
hlt
mov
loop
jb
loope
outsb
cmp
pushf
rcll
and
push
jno
push
push
into
addl
mov
js
pop
xor
xchg
jae
push
mov
xor
jnp
mov
pop
inc
inc
fcomi
push
xchg
aad
adc
stos
sbb
sub
shll
xchg
cmpl
push
test
add
push
in
insb
mov
js
lods
pop
and
or
ds
dec
mov
fiadds
pop
cltd
test
lcall
stc
jns
fldt
mov
mov
js
out
daa
jmp
and
shlb
movsl
ficoml
push
xor
out
mov
pop
fistpl
adc
sub
lods
mov
ds
roll
fs
fwait
jne
mov
xchg
int3
inc
or
and
lahf
adc
cs
pop
imul
arpl
jle
test
dec
shrb
test
add
aaa
pusha
mov
jmp
arpl
hlt
xor
sub
jecxz
int3
movsb
jl
and
cmpsl
and
jg
das
mov
fs
insb
mov
scas
sub
ret
jl
ljmp
das
and
movsl
cmp
stos
mov
mov
mov
decl
fwait
imul
dec
jb
ja
cmp
bound
push
sbb
dec
out
push
std
out
movsl
out
imul
andb
xchg
xor
mov
leave
loope
mov
ljmp
lret
inc
xor
les
popf
add
lock
push
xchg
xor
inc
icebp
xchg
push
lahf
cs
dec
pop
mov
sti
adc
test
and
arpl
aaa
cmpsw
jnp
stc
js
andb
mov
xor
mov
inc
clc
xchg
clc
outsb
scas
adc
out
pushl
mov
pop
in
pop
dec
push
notl
add
xchg
enter
sbb
xchg
cld
fisttpll
ljmp
push
jl
mov
push
bound
aas
jo
jp
cli
mov
pop
js
inc
mov
cmp
adc
mov
dec
shlb
mov
cmp
fdiv
mov
fwait
jmp
xor
inc
out
jle
push
loop
cmp
pop
movsl
loop
rcll
push
mov
cmpsl
push
in
dec
mov
out
mov
lods
lock
sub
mov
cld
ret
shrb
dec
mov
jmp
mov
dec
lret
decl
push
xor
ljmp
inc
push
push
insb
outsl
push
sbb
sbb
shl
std
cmp
add
inc
icebp
inc
je
dec
inc
outsb
cmp
imul
dec
cmpsl
rcrb
insb
sub
inc
inc
add
pop
repnz
lea
imul
stc
daa
idiv
push
xor
inc
xchg
mov
ret
cmp
je
mov
imul
jbe
leave
stc
mov
dec
mov
mov
pop
xor
aaa
outsl
cmp
shr
ret
out
fdivl
dec
xor
push
pop
sbb
dec
pop
push
cmp
cwtl
sar
bound
pop
pusha
stos
mov
pop
pushf
pop
loop
repnz
jmp
jmp
aam
mov
xchg
pop
add
pop
clc
adc
mov
dec
inc
add
mov
test
mov
sbb
xor
enter
test
mov
cwtl
inc
cltd
out
in
or
and
aad
adc
push
xchg
jne
xchg
cs
jb
jp
lret
mov
sbb
xchg
mov
shll
mov
sbb
jp
cmp
iret
ret
popa
jns
jle
xorb
inc
push
mov
cmp
cld
mov
or
rorb
and
sbbb
xor
sub
in
jnp
push
jne
icebp
mov
lret
enter
outsb
testl
jge
jge
jnp
push
cmp
int
cmpsl
insb
jecxz
cmc
cld
and
in
mov
std
push
xchg
cli
pop
sbb
cmp
xchg
shll
stos
int
sub
and
aad
push
pop
ljmp
cmpsb
lret
mov
dec
stos
stc
out
fsts
fistl
fstp
pushf
mov
mov
js
outsb
mov
xlat
xchg
cmpsl
jo
test
jecxz
cmp
daa
sub
out
lock
je
dec
xchg
rorl
adc
mov
jne
push
xchg
xor
fsubr
rorb
xor
jp
push
xchg
ds
mov
sbb
adc
cmp
xchg
xlat
outsl
daa
loopne
pop
xchg
pop
xchg
daa
mov
and
push
push
pop
js
mov
push
pop
mov
cs
pushf
xchg
negb
lret
sarl
shll
sbb
push
xchg
fstpl
mov
mov
mov
in
jo
addb
das
fdivs
pop
loope
gs
adc
ja
call
insb
mov
or
cmpsb
pop
and
xchg
push
or
lret
cmp
jge
iret
push
adc
push
sub
mov
movsl
push
inc
sub
sub
xchg
xchg
nop
mov
ret
adc
push
mov
push
rcrb
push
mov
or
ret
out
nop
std
push
jno
mov
inc
addr16
je
out
mov
mov
or
mov
sahf
cmp
mov
test
sub
jge
add
out
sub
cmp
mov
movsb
mov
out
call
into
push
insl
xlat
cltd
gs
fwait
push
and
stos
or
ds
cli
jne
les
jnp
cltd
xchg
sub
addr16
pop
inc
and
dec
pop
mov
mov
mov
shl
and
lods
mov
add
lea
xchg
les
and
out
sub
inc
je
and
gs
test
insb
cmc
js
rcrl
dec
inc
xor
dec
loop
push
cmp
test
add
cmc
push
shr
sub
rol
lds
cld
data16
pop
xchg
cld
mov
lahf
fldcw
and
mov
cmpsb
push
push
out
popf
sbb
or
mov
or
jo
and
fs
push
jmp
ret
arpl
call
stos
lock
pop
je
std
pop
jle
rorl
xchg
mov
xchg
or
xor
leave
sar
mov
fcoml
pop
subl
xchg
inc
outsl
push
sbbb
sbb
dec
out
lock
sbb
mov
push
mov
rclb
call
xchg
fdiv
mov
scas
ja
mov
cwtl
sbb
sub
and
cmpsb
pop
mov
xchg
jg
cmpsl
cmp
data16
cmp
outsl
jecxz
or
loop
or
lret
mov
pop
mov
sub
mov
rorb
push
stc
sub
sub
push
lods
xlat
cmpsl
add
mov
movsb
sbb
sbbl
lea
jge
cmp
in
inc
xlat
jp
lcall
cld
jle
pop
mov
popf
ret
dec
xor
cmp
lahf
push
sub
and
mov
js
int3
mov
ret
dec
or
outsl
je
dec
dec
or
iret
mov
lahf
pop
jge
cmp
stc
dec
pop
xor
aad
jae
pop
repz
mov
sbb
push
scas
movsl
out
fwait
pop
outsl
cmp
mov
mov
icebp
push
je
pop
push
jge
adc
ljmp
imul
insb
adc
add
mov
sbb
int
cmp
adc
loope
cmp
sti
sbb
ficompl
aam
into
cs
loope
push
sub
push
lock
xchg
shr
jns
dec
stos
sub
shll
fcomp
int
mov
fsubrs
mov
adc
mov
pop
imul
lsl
xorl
pop
or
scas
repz
cmpsl
sarl
lods
pop
into
sub
cmpl
leave
fdivl
or
fs
rcll
sub
frstor
mov
pop
ret
stos
imul
dec
push
data16
pop
out
lahf
hlt
pop
xor
stc
inc
mov
adc
pop
ret
dec
fsubrl
xlat
pop
mov
mov
je
pop
lahf
cli
repnz
xor
push
jle
or
out
es
push
push
pop
outsb
mov
add
pop
int3
jnp
mov
dec
mov
out
ljmpw
sbb
add
push
mov
or
insb
push
add
in
popa
test
or
cmp
cltd
add
repz
jo
sub
pop
popa
sti
addr16
stos
test
add
std
cmp
push
pop
mov
jo
adc
stos
subb
or
pushf
je
in
jne
add
fnstcw
lds
fcom
mov
xchg
and
shll
lret
lea
stc
pop
jge
sub
push
nop
aam
xorl
lret
or
sub
xchg
data16
adc
lcall
or
test
cmp
je
arpl
adc
test
cwtl
xchg
mov
jl
idivb
lcall
adc
push
mov
imul
in
out
jbe
dec
outsl
pop
xchg
xor
pop
popl
iret
sahf
dec
mov
push
xor
pop
push
inc
pop
xor
add
mov
loop
mov
shrb
sbb
adc
adc
jns
fistpl
add
and
scas
adc
dec
jmp
iret
mov
jmp
test
scas
push
xchg
dec
sarb
lret
xlat
lret
lea
in
pop
repnz
adc
test
fcomps
fnstsw
sub
repz
sar
pop
iret
imul
adc
xor
push
dec
insb
adc
and
mov
dec
xor
cs
and
xchg
and
das
fwait
lret
mov
cmp
xor
lahf
sub
nop
inc
stos
fdivrp
ja
dec
mov
mov
dec
fisttps
in
imull
sbb
stc
sub
mov
stos
adc
in
pop
cmpsl
mov
push
add
jle
mov
outsb
ja
mov
mov
imul
ret
sbb
stos
push
inc
pop
imul
rorl
aas
mov
imul
mov
mov
mov
inc
addr16
rcrb
inc
push
xor
lock
cmpsl
cwtl
xchg
cmp
push
jp
add
out
xor
pop
adc
jns
pop
lcall
adc
fwait
call
xchg
cli
pop
jns
cmpsb
mov
push
add
fsubl
or
sub
call
addr16
cmp
lock
fdivr
add
lods
mov
rcrl
fidivrl
mov
mov
jo
add
dec
adc
lret
pop
icebp
mov
cwtl
xor
sub
sub
cmpsb
mov
dec
out
nop
pop
daa
orb
insb
fwait
dec
ja
inc
addr16
push
cmp
inc
inc
or
mov
mov
lret
mov
sub
leave
pop
cltd
dec
popa
fmuls
adc
data16
pop
xlat
push
aas
fldcw
and
sbb
jmp
outsl
pusha
in
popf
loopne
daa
inc
mov
insb
and
xor
cld
push
or
xchg
jb
adc
sbb
ret
popa
jno
test
jo
cli
jg
fcomps
or
dec
mov
lock
cmp
out
mov
pop
adc
pusha
stos
dec
pop
insl
ret
mov
adc
pop
clc
test
shrl
ja
outsb
mov
lcall
mov
mov
pop
jg
inc
int
leave
add
push
add
icebp
jge
pop
gs
mov
arpl
adc
or
mov
insb
popa
lods
xor
dec
adc
fwait
es
fcompl
mov
sub
adc
outsl
sarb
add
testb
mov
dec
adc
outsb
cwtl
aam
and
pushf
jnp
ror
rcl
pop
cmpsl
mov
pop
pushf
mov
inc
mov
pop
ret
std
pop
dec
cmp
pop
mov
xor
mov
scas
push
setnp
jb
jg
xlat
lea
loope
push
push
pop
sub
in
push
cmp
daa
out
bound
mov
xchg
ss
mov
test
imul
lret
xor
repz
test
or
adc
lahf
sti
leave
sub
out
mov
sbb
sub
aam
xchg
xchg
lock
je
inc
ja
mov
mov
test
roll
fisttpll
std
das
mov
and
xorl
leave
xlat
imul
pop
jmp
or
in
pop
sub
mov
lret
xchg
adc
out
shl
sbb
inc
leave
scas
test
pop
fdivs
or
cmp
or
or
and
dec
ljmp
flds
ljmp
mov
jo
jb
mov
out
jg
pop
xchg
fcmovnbe
xor
icebp
sbb
mov
adc
xchg
lods
int3
mov
cmp
cltd
loope
dec
loope
adc
rcll
adc
xor
test
jl
sbb
add
jbe
mul
fld1
mov
dec
rcrl
bound
mov
mov
int
cmpsb
sub
lock
xchg
xor
fsubs
out
in
xchg
inc
mov
out
xchg
sub
divb
sub
jge
pop
lret
and
pushl
and
push
fmulp
and
rcll
cmp
adc
scas
call
int
fwait
cli
jle
mov
sub
xor
mov
dec
jp
mov
int
xor
insl
inc
and
in
stos
jg
mov
addb
mov
dec
aaa
pop
xor
or
ljmp
jno
push
xchg
hlt
inc
xchg
sbb
iret
inc
xor
push
mov
ret
or
cmpsl
pop
lods
sbb
in
loopne
fcoms
ret
iret
mov
pop
or
cmc
scas
mov
in
jp
imul
out
add
xchg
insb
inc
ret
and
fistl
sahf
mov
int
and
pop
jnp
jb
xchg
enter
aad
inc
int3
addr16
jns
arpl
mov
pop
rclb
jge
lods
in
pop
sub
arpl
clc
pop
xchg
cmp
out
cli
out
lea
cmp
fcoml
adc
pushf
stos
cmp
cmc
daa
sahf
nop
jbe
repz
or
ficompl
sbb
pop
popf
cld
cmp
ret
insl
stos
mov
imul
xor
xor
in
push
jp
adc
inc
je
xor
push
lea
mov
and
xchg
das
add
popf
jbe
aas
pop
fldl
nop
imul
dec
cmp
dec
mov
inc
int3
cmpsl
loop
mov
das
mov
addr16
scas
lds
sbb
and
ljmp
out
in
sahf
jns
pusha
mov
lret
cwtl
into
cmpsl
inc
in
pop
dec
pushf
jmp
mov
fld
bound
add
int3
jae
ftst
xchg
aad
inc
ljmp
out
rolb
imul
nop
dec
movsl
push
jmp
push
and
mov
fwait
add
push
imul
mov
out
sbb
test
ss
mov
inc
jmp
add
shlb
scas
popf
and
push
ja
xchg
push
inc
or
push
adc
sbb
fcmovnb
adc
test
icebp
rolb
cld
adc
mov
xchg
add
pop
icebp
xchg
imulb
mov
xorb
cmp
std
je
daa
mov
cmpsb
mov
sahf
jnp
jmp
sub
sub
add
inc
clc
mov
cltd
mov
jp
inc
xchg
popf
mov
add
lds
sbbb
add
decl
scas
pop
cmpsb
dec
rolb
xor
enter
xchg
fstpl
or
frstor
andb
test
or
out
adcb
out
mov
xchg
sbb
std
dec
int3
ret
insl
into
add
xchg
xchg
jne
cmp
sub
mov
adc
data16
mov
stos
mov
push
popf
repz
rcll
adc
cmp
dec
mov
mov
sbb
arpl
xchg
aam
pushf
in
xchg
mov
sbb
in
xor
xor
out
sbb
sub
xchg
xchg
cmp
xor
fisttpl
dec
sub
sbb
data16
cwtl
add
push
dec
sub
pop
mov
lahf
push
xchg
push
xchg
cwtl
and
dec
cmp
dec
out
inc
std
push
inc
mov
mov
cmp
inc
xchg
or
mov
aaa
pusha
lods
jge
push
jl
popf
ror
movsl
dec
xor
mov
inc
mov
aam
fs
sub
test
int
out
cmc
jmp
or
rorb
mov
pop
pop
repnz
add
test
xor
mov
adc
inc
imul
ds
scas
dec
xor
loopne
inc
pop
insl
int
add
jnp
pushf
or
sbb
xor
or
iret
xor
sub
push
aad
pop
pop
pusha
cmove
push
mov
cld
cmp
push
push
js
sub
xchg
mov
mov
mov
daa
cli
add
adc
movsl
xchg
out
mov
cmpsl
xchg
mov
notb
or
sub
rorb
xlat
fisttps
fdivrl
fwait
gs
cmc
clc
cmc
mov
pop
movsb
aaa
pop
stos
in
dec
insb
lcall
xlat
jle
cmpsb
cltd
addl
les
push
mov
inc
lods
jecxz
aam
jecxz
ficoms
jl
pop
bound
pop
xor
fcmovb
xchg
mov
jg
mov
test
in
test
std
xchg
dec
mov
aad
dec
faddl
insb
sub
pop
xor
pop
rol
pop
cmp
aad
xor
push
xorl
lods
fmuls
mov
stc
adc
lock
aas
xor
sarb
or
pop
xchg
mov
sub
xor
out
xor
repz
pop
xor
jb
add
cmc
je
daa
call
es
jle
dec
fnstcw
jnp
cmp
movsb
subb
jno
xor
mov
cmp
aad
cmp
push
test
in
cli
ficoml
pop
mov
inc
mov
adc
shlb
pop
out
leave
jb
pop
imul
mov
movsl
fisttps
sbb
inc
fisttpl
mov
mov
push
xchg
dec
mov
jle
dec
leave
scas
push
mov
cwtl
test
add
pop
clc
cmpsl
dec
neg
mov
xchg
and
leave
fadds
loope
out
or
aad
inc
movsb
pop
dec
push
mov
aaa
jmp
mov
fcoml
les
add
push
or
lods
mov
int
adc
mov
in
add
sub
out
sti
mov
xchg
xor
inc
or
cwtl
outsl
aas
jp
bound
sbbb
bound
lods
sub
mov
pop
popf
rclb
or
hlt
pop
jo
jnp
es
jmp
test
mov
xchg
pop
pop
ficompl
vmread
sbb
lods
add
add
add
lods
xchg
pop
insl
jge
insb
in
int3
lea
sbb
orps
mov
lcall
lret
out
sbbb
xor
js
jmp
nop
or
sbb
int
lret
std
inc
jae
data16
jb
scas
loopne
fimull
sub
xchg
and
pushl
push
dec
xchg
xor
shrb
into
cmp
outsl
xchg
out
cmp
lret
sbb
xchg
int3
je
xor
loopne
inc
mov
pop
sbb
add
loope
sbb
sbb
xchg
lods
push
xor
xor
add
fcomps
xlat
ret
push
rcl
and
das
mov
mov
xor
idivl
dec
mov
mov
sbb
push
mov
fcmovbe
sbb
cmp
cmp
clc
pop
dec
adcb
sbb
inc
imul
mov
sarl
xlat
mov
jne
mov
insl
inc
and
xchg
mov
imul
cwtl
add
mov
pop
mov
add
dec
fisubrs
cmp
jo
push
add
push
and
enter
sub
sahf
pop
clc
sub
or
and
adc
sbb
clc
sbb
push
dec
jo
inc
add
inc
dec
mov
insl
jle
data16
cmc
dec
fistl
jg
mov
outsb
mov
and
pop
loop
add
cs
mov
cmp
push
rcrl
fwait
sbb
rorb
and
cmp
mov
dec
adc
ror
inc
jb
and
push
fiaddl
add
lods
mov
jmp
inc
icebp
xor
addr16
add
jge
add
stos
shlb
mov
adc
pushf
and
jbe
and
cmp
dec
mov
in
fbstp
cli
mov
cmp
clc
imul
aas
lahf
mov
mov
jle
mov
cli
pop
xchg
nop
xchg
cmpsl
pusha
jg
and
jb
dec
cmpl
sbb
lret
add
aad
enter
dec
pop
mov
cmp
adc
xchg
mov
data16
in
rcrl
sbb
lahf
pop
and
sbb
fists
cmpb
push
adc
mov
lods
jle
mov
mov
pop
sub
divl
das
adc
inc
imul
xor
outsl
dec
sbbb
inc
jmp
xchg
jno
movsl
inc
test
push
ficoml
xor
in
sti
jb
sub
stos
pop
rol
push
sahf
loop
cmp
or
sub
sub
mov
loope
jg
or
imul
mov
push
sbb
cwtl
cs
ja
sbb
sub
notl
push
lock
out
ret
sbb
sbb
mul
push
mov
test
inc
shrl
sub
dec
pop
mov
xchg
in
inc
xor
mov
test
dec
add
jb
sbb
pop
loopne
mov
outsl
sub
cmp
mov
lds
insl
lds
imul
sbb
adc
sub
in
arpl
int3
mov
adc
sub
jge
sbb
jle
out
cmp
dec
dec
push
mov
sub
fnstsw
jmp
cmp
shlb
jge
aas
clc
gs
mov
jne
jae
outsl
loopne
mov
sbb
jbe
cmp
aas
cli
or
hlt
mov
or
add
dec
xchg
pop
jge
jae
js
and
enter
mov
push
cli
pop
mov
ret
insb
arpl
mov
clc
popa
fucomp
push
inc
insl
data16
rclb
int
outsb
xor
pop
sub
cmp
rcll
lds
fwait
imul
test
lcall
dec
mov
clc
dec
sbb
dec
int3
sbb
inc
in
inc
push
out
in
jg
mov
pop
adc
mov
push
sbb
dec
into
mov
int3
and
ljmp
pop
jnp
pop
lret
shlb
outsl
ljmp
repz
lahf
or
pushf
lds
out
cmc
in
jmp
dec
jle
push
sub
lea
repnz
xor
cmovns
inc
mov
jle
subl
int
insl
outsl
push
mov
test
imul
cs
sbb
push
pop
shll
fistpl
push
shll
stos
jnp
mov
aaa
mov
dec
sbb
cmp
xchg
nop
cmp
inc
xor
fwait
es
cld
ret
ret
mov
dec
fadd
jnp
jl
mov
sub
push
sbb
test
jmp
arpl
jge
nop
push
pop
push
or
push
mov
xor
arpl
xor
dec
and
addb
jbe
ss
imul
pop
jae
sub
xor
lret
mov
and
mov
push
sti
xchg
or
mov
adc
mov
test
fbld
lea
inc
xlat
add
jle
or
inc
imul
mov
insl
or
add
loopne
icebp
mov
mov
outsl
inc
icebp
xor
outsb
popa
jbe
mov
dec
inc
repnz
cmp
xchg
push
jl
push
lahf
pop
clc
rclb
sti
sbb
repnz
iret
or
jne
push
mov
stos
xor
mov
dec
mov
inc
mov
pop
xchg
dec
adc
adc
cs
ja
jns
in
idiv
mov
in
or
dec
lret
movsb
pop
cmp
or
into
into
shl
push
rcrb
adc
xor
dec
adc
push
dec
or
iret
lock
inc
push
inc
sbb
hlt
pop
cmp
pop
inc
push
mov
fldcw
pop
ja
add
add
popf
mov
enter
dec
dec
mov
xchg
inc
sub
testl
pop
pop
aas
xchg
loopne
mov
xor
imulb
fs
das
xlat
cmpb
inc
push
pop
push
push
dec
out
sbb
lret
mov
scas
add
sub
dec
ljmp
aas
cmp
nop
in
xchg
test
scas
lret
add
cmp
jo
daa
int3
dec
mov
mov
xchg
je
sbb
subb
mov
or
push
add
mov
push
pop
or
xchg
jg
dec
loop
sbb
jmp
leave
pop
test
jne
jbe
mov
or
sarb
xchg
push
loope
push
dec
mov
sub
push
mov
push
sub
and
xor
loop
add
frstor
mov
xor
ds
adc
testl
loope
ss
sub
mov
cs
jae
testl
adc
mov
or
cmp
add
fcoms
jnp
jae
xchg
jp
push
call
xchg
daa
int3
mov
arpl
mov
xor
mov
inc
std
inc
jge
cwtl
pop
aas
insb
inc
out
sbb
lcall
and
dec
movsl
mov
and
int
push
push
pop
cmpsb
fldcw
outsl
or
push
shll
fisttpl
xor
pop
pop
push
and
inc
insl
sbb
sub
adc
sbb
or
inc
pusha
fsts
cmp
push
dec
stos
sbb
lock
mov
daa
jo
dec
cwtl
cmpsl
mov
and
jp
pushfw
mov
cld
push
jne
aaa
xchg
mov
push
fcoms
xchg
fisttpll
mov
mov
xchg
cwtl
xchg
sub
pop
xchg
gs
stc
xor
daa
mov
loopne
loop
xor
jne
ss
aad
loopne
lods
sbb
inc
outsb
or
push
cld
or
pusha
fs
xchg
mov
cmp
mov
xor
add
sahf
sbb
pop
icebp
mov
add
xchg
fistl
push
jmp
hlt
push
xorl
mov
je
xor
sbb
cmp
pop
sub
clc
adc
lret
push
fimuls
xor
push
dec
mov
or
xor
xchg
push
xor
jp
js
pop
daa
loop
inc
jge
xchg
loopne
fmull
adc
ds
jmp
push
fstl
jno
cs
sbb
cmp
int3
pushf
push
gs
out
xchg
jp
jge
negb
arpl
and
cs
out
pop
outsb
sub
jns
int
int3
jnp
pop
fldcw
add
ret
shrl
fiadds
in
dec
sbb
int3
int
xchg
in
mov
add
mov
sub
outsl
inc
insb
sarb
in
popf
lahf
lcall
arpl
js
xor
xchg
and
jnp
add
sbb
leave
pop
int3
shrl
and
rep
xor
sbb
push
lcall
jl
xchg
incl
sbb
int3
pop
das
test
iret
mov
in
push
int3
jge
mov
push
out
push
xor
push
hlt
into
inc
insb
mov
add
dec
das
outsb
fldl
mov
lahf
and
lea
mov
inc
shrl
enter
scas
or
push
dec
mov
push
adc
jno
or
cmp
lahf
lods
mov
adc
jno
lret
jl
mov
insl
xor
push
mov
out
sbb
icebp
sbb
nop
or
sub
inc
adc
jmp
ja
movsl
test
inc
add
or
push
ds
fwait
sbb
sbb
sahf
sub
lret
xchg
dec
lock
jmp
outsl
push
cwtl
loopne
das
jge
pop
and
pusha
inc
mov
iret
incb
mov
je
hlt
mov
push
popf
nop
mov
bound
jp
pop
movl
adc
movsl
xor
aas
jge
add
jb
pop
and
cmp
xchg
roll
mov
rol
or
shll
jl
lods
nop
dec
jp
fs
push
xor
les
adc
or
add
xor
dec
pop
loope
les
aaa
mov
inc
push
in
sahf
inc
sub
mov
jmp
shlb
add
cs
cltd
out
loopne
and
cmp
repz
imul
std
mov
pop
js
sub
cmp
das
push
push
fisubrl
cmp
xchg
add
mov
mov
enter
test
mov
int3
add
adc
mov
xor
push
inc
insb
push
in
in
adc
mov
jmp
imul
int
ret
loopne
imul
adc
loop
dec
stc
jno
aaa
out
popf
rclb
fwait
pop
push
push
ficoml
cmp
add
bound
nop
dec
popa
sub
test
sbb
or
test
or
shlb
loope
push
xchg
lahf
fucomi
lock
mov
push
mov
mov
es
add
mov
loop
cmc
jns
lret
pusha
ret
jnp
cmp
andl
xchg
add
or
and
nop
dec
or
icebp
shrb
aad
xor
mov
mov
add
fisubs
cmc
or
push
stc
call
insb
push
or
push
mov
sub
jmp
andl
lea
jmp
lea
jmp
pop
je
orb
xor
jmp
call
mov
jmp
mov
movb
movb
jmp
push
jmp
lea
call
ret
nop
nop
nop
nop
nop
pushl
jmp
mov
jmp
mov
jmp
je
mov
test
jmp
jle
mov
mov
mov
jmp
jne
mov
jmp
push
push
pushl
push
jmp
movzwl
mov
and
cmp
jmp
push
jmp
add
jmp
xor
mov
jmp
jle
jmp
test
pop
jmp
mov
ret
nop
nop
nop
nop
nop
cmpl
sete
test
jmp
pusha
call
mov
xor
jmp
mov
xor
mov
mov
jmp
mov
jmp
add
push
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
add
cmpl
jmp
pop
jmp
cmpl
je
jmp
mov
lea
push
jmp
nop
push
push
pop
jmp
push
jmp
lea
jmp
ret
nop
nop
nop
nop
nop
nop
nop
call
push
call
jmp
push
jmp
mov
call
push
jmp
andl
mov
jmp
call
pop
jmp
test
je
lea
push
jmp
push
jmp
nop
push
jmp
mov
jmp
push
mov
push
mov
jmp
mov
push
push
jmp
movb
movb
mov
mov
jmp
mov
mov
jmp
nop
nop
nop
nop
nop
nop
mov
mov
jmp
nop
nop
nop
nop
mov
xor
mov
jmp
mov
mov
mov
ret
nop
nop
nop
nop
nop
test
jmp
nop
nop
nop
nop
push
mov
push
push
jmp
push
xor
push
jmp
push
push
push
jmp
push
mov
jmp
push
call
push
call
jmp
mov
jmp
shr
shl
or
movsbl
jmp
je
push
push
jmp
pushl
jmp
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
jmp
test
jmp
pushl
nop
nop
nop
nop
nop
pushl
pushl
jmp
je
cmp
je
mov
jmp
incl
push
jmp
test
pop
jne
mov
jmp
mov
add
push
jmp
add
push
push
jmp
lea
sub
shr
jmp
nop
nop
push
mov
test
jbe
jmp
push
jmp
nop
nop
nop
nop
nop
nop
push
mov
push
push
jmp
pushl
call
jmp
push
push
jmp
pushl
jmp
pop
jmp
call
mov
add
jmp
jne
jmp
mov
xor
jmp
shr
push
mov
jmp
add
jmp
call
jmp
cmpb
jne
jmp
mov
mov
add
jmp
lea
push
lea
push
jmp
lea
push
nop
nop
nop
nop
nop
call
test
pop
jmp
movl
mov
jmp
mov
add
add
cmpl
jmp
mov
cmp
jmp
test
jle
jmp
nop
push
mov
push
mov
jmp
mov
test
jmp
mov
xor
push
add
jmp
movb
jmp
push
jmp
pop
cmpl
jne
jmp
inc
mov
mov
jmp
pushl
push
call
jmp
nop
nop
nop
nop
nop
nop
push
mov
jmp
mov
andl
jmp
mov
mov
sub
jmp
call
jmp
mov
jmp
add
mov
jmp
je
jmp
pushl
jmp
jmp
lea
mov
jmp
mov
test
je
lea
jmp
push
call
jmp
xor
jmp
nop
nop
nop
mov
sub
cmpl
je
jmp
mov
jmp
mov
movzbl
jmp
cmp
mov
je
jmp
cltd
pop
mov
jmp
pushl
call
jmp
mov
xor
mov
jmp
idiv
xor
test
jmp
je
lea
push
call
jmp
nop
push
mov
push
jmp
push
push
jmp
lea
jmp
je
push
mov
jmp
xor
push
mov
sub
jmp
inc
dec
jmp
call
test
pop
jmp
pushl
call
cmpl
jmp
mov
add
shr
and
jmp
nop
nop
push
mov
jmp
push
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
xor
mov
jmp
movl
push
movl
pushl
jmp
and
incl
jmp
jne
pop
ret
nop
nop
nop
nop
nop
inc
test
jne
pop
jmp
pop
jmp
nop
add
test
add
add
add
test
add
leave
test
jmp
mov
mov
add
jmp
call
jmp
jne
and
add
jmp
test
je
call
jmp
xor
mov
leave
ret
nop
nop
nop
nop
nop
mov
test
jle
jmp
call
test
pop
jmp
je
xor
leave
ret
nop
nop
nop
nop
nop
call
cmp
jmp
lea
mov
test
je
jmp
pushl
mov
sub
pushl
jmp
add
jmp
mov
call
push
push
jmp
push
push
call
jmp
add
mov
inc
jmp
mov
call
push
push
jmp
call
jmp
mov
jmp
je
jmp
pop
je
jmp
test
jmp
push
push
call
push
jmp
inc
decl
jne
jmp
mov
call
push
jmp
mov
xor
mov
jmp
sub
sub
jmp
push
xor
jmp
incl
jmp
je
jmp
mov
add
mov
jmp
dec
mov
jne
sub
jmp
addl
mov
cmp
jmp
movzwl
jmp
push
jmp
add
cmpl
jne
jmp
push
mov
call
add
jmp
jl
xor
jmp
jmp
jmp
jmp
push
call
jmp
pop
pop
push
jmp
mov
jmp
popa
jmp
push
call
nop
nop
nop
nop
nop
decl
jne
mov
test
jmp
lea
push
jmp
pop
pop
leave
ret
nop
nop
nop
nop
nop
mov
jmp
jle
mov
add
jmp
call
dec
pop
jmp
mov
jmp
mov
add
add
jmp
add
push
push
push
jmp
add
dec
jne
jmp
lea
jne
mov
jmp
mov
jmp
push
push
call
test
jmp
call
jmp
pop
pop
pop
jmp
test
je
jmp
movzwl
jmp
je
mov
add
add
jmp
xor
jmp
leave
ret
nop
nop
nop
nop
nop
mov
test
jmp
mov
add
jmp
jmp
add
jmp
jmp
jmp
add
lea
jmp
jle
mov
jmp
mov
sub
mov
mov
jmp
push
push
pushl
push
jmp
shl
jmp
jmp
andb
incl
jmp
jmp
pop
pop
pop
leave
jmp
xor
jmp
jmp
ret
nop
nop
nop
nop
nop
push
pop
pop
pop
jmp
call
mov
jmp
shr
jmp
mov
push
jmp
pop
pop
ret
nop
nop
nop
nop
nop
cmp
je
pushl
jmp
or
xor
add
dec
jmp
pop
jmp
jne
pop
pop
pop
jmp
movzbl
incl
jmp
add
jmp
leave
ret
nop
nop
nop
nop
nop
mov
and
jmp
pushl
push
push
call
nop
nop
nop
nop
nop
add
add
cmp
jmp
inc
inc
shr
jmp
jne
call
push
pop
jmp
je
test
je
mov
jmp
pop
pop
pop
leave
jmp
mov
sub
mov
nop
nop
nop
nop
nop
mov
incl
jmp
ret
xor
jmp
nop
nop
nop
nop
nop
dec
nop
nop
nop
nop
nop
jne
jmp
mov
mov
nop
nop
nop
nop
nop
push
nop
nop
nop
nop
nop
pop
jmp
call
test
nop
nop
nop
nop
nop
pop
jne
cmp
nop
nop
nop
nop
nop
jne
lea
push
nop
nop
nop
nop
nop
call
nop
nop
nop
nop
nop
test
pop
je
nop
nop
nop
nop
nop
mov
mov
nop
nop
nop
nop
nop
sub
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
mov
incl
dec
jne
nop
nop
nop
nop
nop
jmp
sub
jmp
dec
nop
nop
nop
nop
nop
dec
mov
nop
nop
nop
nop
nop
shl
nop
nop
nop
nop
nop
movzbl
add
incl
nop
nop
nop
nop
nop
mov
lea
push
call
nop
nop
nop
nop
nop
cmp
pop
jb
nop
nop
nop
nop
nop
inc
cmp
jb
inc
nop
nop
nop
nop
nop
cmp
jae
nop
nop
nop
nop
nop
inc
inc
test
nop
nop
nop
nop
nop
je
mov
mov
nop
nop
nop
nop
nop
sub
mov
mov
incl
nop
nop
nop
nop
nop
dec
jne
mov
jmp
nop
nop
nop
nop
nop
mov
mov
mov
nop
nop
nop
nop
nop
mov
incl
incl
xor
nop
nop
nop
nop
nop
cmpl
je
mov
pop
nop
nop
nop
nop
nop
sub
nop
nop
nop
nop
nop
pop
pop
leave
ret
nop
nop
nop
nop
nop
add
and
add
add
add
inc
push
add
push
push
add
pusha
push
add
outsb
push
add
orb
add
add
add
push
add
xor
add
mov
push
add
test
add
test
add
and
add
add
add
inc
push
add
push
push
add
pusha
push
add
outsb
push
add
orb
add
add
add
inc
js
je
jb
arpl
jae
dec
inc
push
dec
inc
dec
xor
cs
insb
add
incl
inc
gs
gs
je
jo
imul
mov
push
popa
imul
inc
imul
add
xchg
add
jo
je
push
popa
addr16
add
addb
jb
outsb
jae
popa
je
dec
gs
popa
add
xchg
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
inc
push
xor
cs
insb
add
movsl
mov
dec
inc
cmc
or
inc
add
add
add
add
add
add
sub
add
leave
shl
add
add
add
add
add
inc
add
add
add
add
add
fistpl
cmp
lock
add
add
add
rolb
add
adc
add
add
add
mov
xchg
xor
add
add
add
loopne
add
adc
add
add
add
xchg
mov
add
add
add
add
add
add
add
add
xor
add
add
add
cmp
or
inc
add
add
bt
and
add
pop
repz
inc
adc
mov
std
add
nop
add
add
mov
inc
aaa
test
xor
xor
xor
lods
aaa
in
cmp
aaa
fidivs
cmp
xchg
xor
xor
js
mov
xchg
cmp
cmp
daa
cmp
cmp
cmp
aam
push
cmp
cmp
cmp
cmp
xor
pop
aaa
push
cmp
cmp
xor
cmp
ds
cmp
cmp
xchg
xor
outsl
cmp
movsl
xor
cmp
add
pop
daa
push
and
sbb
push
jle
js
jb
insb
aaa
xor
pop
and
push
aas
and
dec
jnp
jne
outsl
cmp
bound
xor
add
lock
lret
setbe
xchg
or
.byte
