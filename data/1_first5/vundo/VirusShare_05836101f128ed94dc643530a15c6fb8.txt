add
add
outsb
add
add
push
add
jne
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
inc
add
jb
add
jb
add
add
inc
add
je
imul
inc
add
jb
add
jb
add
add
push
add
je
insb
add
push
add
js
je
add
push
add
outsb
add
add
push
add
js
je
add
add
dec
add
outsb
add
push
add
js
je
add
add
push
add
outsb
add
add
inc
add
popa
add
add
add
imul
outsl
add
add
add
dec
add
outsb
add
add
add
dec
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
je
imul
push
add
je
insb
add
add
inc
add
arpl
imul
mov
mov
mov
test
add
or
add
add
add
xchg
add
pop
add
add
add
add
test
add
push
add
enter
xchg
add
add
add
xchg
add
xchg
push
sub
xchg
add
push
add
add
pop
add
mov
add
add
add
mov
inc
add
add
add
and
add
xchg
add
add
cwtl
add
mov
add
add
add
add
loop
xchg
add
add
jo
xchg
add
add
mov
add
add
add
add
xchg
add
add
add
jae
roll
xchg
add
add
add
add
dec
add
pop
add
add
xchg
pop
inc
add
add
add
add
xchg
add
add
lret
add
add
push
add
addl
roll
mov
xchg
add
inc
add
add
std
add
add
add
mov
pop
add
add
imul
dec
add
push
add
add
add
add
into
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
jbe
sbb
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
inc
add
movsl
add
add
add
add
add
mov
jo
lds
test
sub
roll
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
add
add
add
add
add
add
enter
xchg
add
add
add
add
filds
mov
add
add
add
add
add
add
xchg
add
add
add
add
cltd
add
add
add
rolb
add
imul
pop
add
add
add
cmpsb
add
add
add
add
add
fldl
ljmp
add
mov
aad
push
add
add
add
add
add
mov
inc
or
add
add
into
add
fiaddl
dec
add
adc
cmp
mov
stos
add
add
add
add
push
add
add
add
add
add
xchg
add
add
add
pop
add
add
add
add
add
add
add
into
add
add
jae
mov
add
add
and
jae
xchg
add
push
add
inc
add
add
add
add
add
add
add
add
fadds
cmp
add
add
add
cwtl
add
add
jae
pop
add
add
add
mov
into
add
pop
sbb
xlat
add
mov
imul
fs
add
add
add
add
add
add
jo
pop
add
add
xchg
add
test
add
add
add
jp
push
sarb
test
das
xchg
lret
sti
cmp
xchg
xchg
xchg
and
ret
dec
fidivrs
sub
arpl
addr16
lret
jbe
or
push
lea
xchg
add
jae
in
mov
movsl
add
pop
addr16
push
data16
ret
addl
rcrl
push
mov
inc
mov
enter
mov
lcall
mov
inc
mov
leave
xor
cmpsb
outsb
outsb
sub
jo
lods
pop
fisubrs
mov
pop
mov
push
inc
imul
xor
jne
pop
xchg
fwait
sbb
test
adc
sbb
push
pop
outsb
call
je
pop
roll
bound
cmpsl
jge
mov
dec
push
push
jge
lret
push
mov
out
hlt
stos
fcomp
mov
lods
arpl
mov
mov
sbb
adc
xchg
leave
mov
mov
mov
jg
call
jmp
sbb
push
idivb
sub
fildl
insb
in
xchg
popa
out
sbb
jb
cmc
adc
rolb
mov
inc
xchg
mov
cmp
pop
outsb
aas
movb
sbb
mov
adc
ds
adc
outsb
xchg
das
inc
push
ficomps
and
adc
outsb
bound
jbe
push
testl
jp
add
and
loope
sub
mov
dec
mov
fidivl
leave
fs
mov
arpl
lret
add
repz
jl
int3
in
cmp
cmp
fwait
mov
jnp
dec
enter
xlat
push
lock
jge
xlat
aaa
rcll
mov
in
adc
push
sub
xor
sbb
dec
sub
insb
xchg
inc
dec
mov
lock
xchg
int3
mov
mov
cld
repz
cli
loop
fwait
mov
movsl
jns
subl
stos
inc
cmp
cltd
scas
addr16
sbb
mov
je
inc
dec
fimull
pushf
test
xchg
rorb
aam
xor
imul
push
inc
inc
mov
arpl
inc
xchg
and
mov
arpl
shll
add
push
pop
inc
in
xchg
movsl
in
sti
mov
fld
fsts
mov
es
pop
xlat
in
jno
dec
pop
dec
cltd
jp
arpl
pusha
jns
outsl
iret
inc
dec
push
adc
push
insl
sub
add
fiaddl
and
sbb
out
adc
pop
push
daa
adc
scas
or
push
pop
push
adc
and
aaa
push
pop
mov
add
jne
sbb
pop
cmp
add
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
call
call
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
mov
mov
stos
sti
xchg
test
cmpsl
ds
push
lcall
jb
enter
ljmp
subb
pop
loop
sarb
push
xor
add
push
mov
mov
sub
data16
rclb
jmp
jb
adc
sbb
fs
dec
jmp
std
insl
mov
cmp
mov
cltd
or
sbb
ljmp
add
sbb
jg
repnz
loop
cmp
sub
sar
mov
add
adc
sbb
psubb
lret
add
or
jb
fcompl
lar
xchg
jae
jmp
cli
mov
test
push
sub
and
gs
std
push
and
bound
loope
daa
loop
imul
jb,pn
push
leave
sub
and
inc
adc
test
jge
fstps
rclb
loop
push
xor
jno
mov
and
pop
loop
shlb
and
add
jb
bound
push
cli
inc
test
dec
rorl
jns
add
lea
inc
faddl
popa
into
inc
ret
hlt
mov
mov
les
dec
icebp
pop
ret
seta
xchg
inc
incl
outsl
filds
int
mov
xchg
fwait
sub
aam
out
mov
loop
sarb
push
lcall
jb
lret
inc
ljmp
subb
pop
loop
sarb
push
lcall
jb
lret
inc
ljmp
std
push
and
fistps
cs
out
lods
dec
cs
ret
cltd
pop
push
add
out
mov
pop
ret
hlt
imul
push
push
xchg
push
fwait
rcl
std
inc
pusha
popf
cli
stos
cmp
lea
or
movsl
sub
pop
lods
ss
xor
loop
negb
mov
dec
stos
or
stos
sbb
arpl
pop
arpl
jmp
mov
xchg
imul
pop
pop
cltd
sarb
push
clc
dec
nop
xchg
jnp
sbb
push
into
lahf
bound
push
xchg
cmp
jecxz
or
or
jb
sub
push
jle
cs
push
xchg
mov
fidivrs
sub
scas
enter
push
cs
inc
and
dec
or
int3
jg
mov
aas
add
dec
push
movsb
xlat
mov
scas
and
add
pop
jb
inc
cmp
cmp
add
mov
xor
popa
scas
xor
mov
mov
rsm
lds
call
jb
fidivrl
icebp
call
add
or
stc
mov
dec
cmp
jnp
fisubrl
jmp
push
rcr
stos
xchg
add
jmp
fisubrl
xchg
movsl
shlb
cli
lret
push
popf
inc
push
lahf
add
fiadds
test
fistl
movsl
imul
movsb
xor
ja
sub
inc
jp
imul
adc
fiadds
gs
int3
fdivr
sub
inc
iret
add
sub
mov
inc
mov
loopne
sahf
fistps
das
or
test
xchg
cmp
roll
adc
insb
enter
jno
inc
repnz
faddl
call
xor
mov
lret
cwtl
insb
sarb
loope
xchg
fistps
ret
pusha
decl
xchg
mov
out
into
and
pushf
mov
addl
lcall
sbb
orl
ret
pop
jne
fadds
leave
out
out
or
mov
std
mov
add
lea
or
stos
sbbl
mov
sbb
and
push
data16
loope
scas
or
arpl
jae
out
outsb
lret
and
xchg
and
mov
xchg
sahf
repnz
pushf
lods
arpl
lahf
shrl
lahf
les
jmp
fdivrs
mov
out
jg
loop
mov
or
dec
mov
inc
cmc
stos
mov
cmp
aas
xchg
enter
pusha
pop
sub
mov
dec
fucomip
adcb
and
push
daa
dec
in
icebp
les
add
insl
dec
push
pop
shrl
xor
leave
fadd
sbb
scas
ja
mov
pop
fdivl
or
fnstsw
lret
subb
loop
lods
movsb
adcb
dec
lret
in
mov
push
arpl
adc
lds
pushf
inc
outsb
into
cmp
jnp
xor
or
outsl
push
call
into
xor
push
fmuls
lods
lret
or
push
inc
push
lds
int3
jle
xchg
inc
cmp
bound
popf
xor
and
mov
inc
and
test
nop
add
jecxz
jle
pop
mov
mov
adc
repz
dec
mov
aam
add
mov
fs
mov
je
popf
pushf
sbb
mov
jbe
lods
xchg
xchg
pusha
xchg
cs
movsl
scas
jnp
jnp
cmp
cmp
dec
fnstenv
dec
xchg
aaa
jo
ljmp
inc
lahf
cmp
fisubs
pop
or
out
cmp
arpl
pop
cmpsl
out
daa
jno
add
lcall
jno
inc
dec
subb
cmp
inc
xchg
outsb
arpl
xlat
icebp
repnz
scas
or
addl
pop
mov
je
adc
sbb
xchg
test
fcmovnu
iret
xchg
ja
mov
push
bound
dec
insb
xchg
mov
cld
pusha
adc
adc
mov
xor
push
movsl
cli
ss
push
imul
sahf
pslld
sub
jge
mov
dec
jns
ret
test
ja
loopne
dec
pop
test
sub
push
sub
in
and
push
stos
pop
jg
rclb
fisttps
iret
push
lcall
and
shl
cmpsl
push
adc
inc
add
mov
mov
mov
push
mov
pop
loop
scas
test
insl
adc
lods
cmp
into
ljmp
jp
out
ds
lcall
adc
test
sahf
in
scas
rorl
sbb
fs
sti
mov
mov
push
adc
in
outsl
xor
pop
push
inc
in
sbb
movsl
inc
xchg
pushf
jnp
xor
mov
shr
fimuls
xor
inc
stc
ljmp
and
jo
mov
jb
push
lret
push
pop
mov
imull
sbb
or
inc
das
jecxz
pushf
outsl
dec
or
rorl
mov
imul
xchg
lcall
lods
shrb
pusha
xor
jb
cli
jns
lahf
dec
adc
inc
xchg
jl
cwtl
mov
cmp
ror
add
mov
sub
popa
jmp
stos
xchg
pop
cmp
cmp
dec
out
or
sti
fs
xchg
cmp
jne
lds
daa
dec
loopne
dec
fwait
cld
inc
fisubs
clc
movsb
fs
or
addr16
xchg
shrl
xchg
mov
dec
test
popa
push
imul
jge
push
fistl
and
inc
test
testb
cwtl
mov
stos
push
or
lcall
mov
sbb
fisttpll
jnp
push
pusha
cmp
fbstp
ds
add
or
adc
and
and
mov
cmp
popa
or
mov
cld
pop
pop
ret
push
mov
add
xor
data16
ds
sub
mov
pop
int
adc
push
pop
mov
stos
jp
dec
adc
fdivs
incl
insl
repnz
sbb
insb
sbb
mov
test
jg
push
sahf
xchg
ret
push
mov
adc
lds
iret
jecxz
outsl
movsl
push
daa
push
xchg
shlb
iret
mov
xor
mov
lods
push
lret
ret
jno
adc
adc
cwtl
mov
fucomp
testl
fdecstp
mov
out
and
sti
mov
in
jnp
mov
jbe
xchg
pushf
lcall
out
aaa
dec
add
lret
orl
jo
aas
push
lods
xor
jp
rorl
outsb
nop
popa
dec
sbb
orb
ljmp
adc
mov
inc
jecxz
jp
mov
pushf
jo
cmp
in
repnz
adc
fildll
loope
xchg
push
scas
xor
sbbl
adc
cwtl
insl
xchg
icebp
pop
popf
sub
cmp
call
or
jne
bound
rcrb
lods
or
mov
out
out
dec
popf
repz
cmp
dec
jle
loope
scas
movsl
sbb
mov
xchg
lds
shrl
jne
jge
sub
cmp
jnp
insb
imul
mov
jmp
jb
lcall
dec
dec
push
push
pop
fcomps
arpl
shrl
mov
inc
mov
sub
fisubl
sbb
mov
mov
cld
rolb
mov
shll
push
outsl
ret
jb
sbb
add
pop
mov
dec
aas
arpl
sbb
xchg
popa
sar
mov
sbb
aaa
xchg
jecxz
pop
ljmp
adc
in
je
in
mov
int
and
sub
jecxz
mov
les
mov
cld
in
inc
jecxz
lds
adc
add
sbb
adc
int3
scas
int3
xchg
xchg
mov
and
pusha
fstl
mov
mov
sbb
lahf
addr16
sbb
ret
gs
dec
cmp
inc
inc
sbb
jg
xchg
inc
daa
icebp
dec
inc
jecxz
movsl
ja
loopne
inc
enter
loope
sbb
stos
rcll
fisttpl
dec
addb
push
mov
dec
sbb
mov
subb
jmp
cld
lods
or
xchg
stc
add
mov
addl
ljmp
xchg
call
or
rorl
rol
sbbb
and
sbb
outsb
icebp
subl
xchg
and
pop
sbb
cmpsl
jmp
mov
or
lds
insb
add
subl
das
mov
mov
arpl
cmpsb
or
je
outsl
jmp
push
push
lret
test
int3
out
inc
es
sbb
loopne
sub
push
sbb
mov
outsb
dec
cmp
cmp
insb
xor
sbb
push
lods
xor
lods
adc
popf
cmp
push
jb
out
inc
repz
pop
cmp
and
or
mov
int
in
cld
cmp
gs
xchg
pop
cmpb
daa
mov
or
jl
pop
aam
clc
add
popa
sub
dec
es
in
lds
mov
fwait
popa
imul
mov
into
aam
loopne
repnz
insb
cmp
test
mov
jo
aam
jno
jo
xchg
xlat
adc
and
sbb
mov
call
and
jbe
cmpb
xor
test
dec
popf
addr16
push
push
rorl
sbb
mov
std
jmp
push
fadds
sbb
in
sbb
insb
imul
rorl
push
mov
aas
sbbl
xor
xlat
loope
hlt
xor
jne
jmp
std
or
clc
mov
movsb
negb
mov
out
or
aam
pop
push
in
adc
int
inc
dec
jge
and
jbe
cwtl
pusha
jae
sub
imul
pop
inc
das
xchg
shlb
ljmp
push
pop
mov
das
sti
fs
inc
test
outsb
in
mov
rcrb
cmp
stos
or
scas
pop
movsb
xchg
sbb
jbe
xor
mov
les
sub
lret
xchg
dec
daa
pushf
sbb
adc
inc
andb
in
outsl
repz
or
inc
shlb
sbbl
mov
test
hlt
imul
daa
sbb
pop
dec
push
cmp
cmp
sbb
in
jno
inc
push
dec
movsb
dec
jb
movsl
push
push
jl
sbb
mov
test
lods
imul
sub
mov
out
outsb
fimull
push
les
jecxz
iret
and
xchg
and
xchg
push
sub
inc
rcrl
cmc
daa
enter
cmp
or
shlb
aaa
mov
adcb
or
aaa
mov
jo
push
mov
idivl
aam
adc
cmp
add
lods
int3
sti
loope
es
inc
inc
ljmp
push
imul
inc
xor
out
mov
dec
pop
ss
pop
mov
ret
pop
xchg
jbe
xor
shll
add
movsb
mov
stc
sub
fstpt
repz
loop
scas
ret
fisttpll
and
inc
xchg
mov
orb
adc
mov
jle
mov
xor
cmpsb
loop
les
lret
out
shll
sub
lcall
sbb
xor
xchg
repnz
out
mov
cmc
out
mov
sub
adc
pop
out
ja
xorb
mov
fisttps
push
mov
lods
push
das
xor
inc
mov
out
jnp
cmp
out
cltd
cmpsl
push
ret
call
mov
int3
mov
stos
pop
sbb
lret
repz
addr16
push
lret
adc
sub
int
mov
push
loope
mov
mov
sub
dec
xchg
cmpsb
or
lret
repz
mov
cmp
push
mov
cmp
pop
hlt
jae
xor
clc
adc
pop
pop
pop
fwait
mov
cs
cltd
lea
mov
jno
imul
push
dec
jecxz
js
pusha
test
and
das
and
and
sbb
pop
int3
cmp
or
pop
fnsave
je
loope
mov
or
aam
cmpsl
pop
nop
push
or
arpl
and
insb
or
mov
pop
add
bound
jp
push
or
xchg
mov
sarl
popa
ljmp
pop
adc
xor
push
adc
mov
daa
daa
cwtl
jmpw
ss
ret
jne
mov
pop
mov
adc
sbb
xor
pusha
add
lahf
cwtl
add
sub
cmp
jmp
jecxz
jg
push
xor
daa
add
repz
cs
das
icebp
in
mov
mov
jge
fsubs
cmp
mov
inc
jo
cmpsb
out
xchg
fsubrs
test
dec
aaa
movswl
dec
dec
adc
pop
mov
clc
dec
mov
cmp
fwait
xor
das
ljmp
cmc
inc
mov
mov
xor
in
pop
popa
scas
sub
xor
movsb
xchg
jg
mov
lea
xchg
fwait
pusha
enter
insb
xchg
dec
popf
sub
xor
icebp
mov
repz
adc
imul
sub
add
xchg
pop
cmp
test
pop
fimull
sub
shr
lock
or
mov
push
sti
pop
iret
popl
xor
mov
push
dec
xchg
jmp
aam
outsb
inc
pop
push
divb
lods
cmc
sub
cmpsb
mov
mov
cltd
push
test
push
fnstenv
fildll
or
ja
ret
movsb
jns
xor
stos
sbb
dec
inc
lcall
notl
fsubrs
xchg
mov
mov
lods
stos
mov
sbb
pop
inc
out
cltd
std
pop
xchg
and
clc
imul
xor
add
mov
pushf
cmpsb
std
loopne
xchg
mov
sti
data16
and
lods
jl
movsb
mov
popa
dec
mov
sub
sbb
push
mov
xor
cli
ret
shrl
out
dec
out
or
scas
or
popl
cmp
movsl
mov
adc
loopne
sbb
jle
daa
rcr
cmp
mov
pusha
dec
add
es
gs
mov
nop
sbb
loopne
imul
jg
push
or
sti
push
ret
and
sub
inc
xchg
data16
and
icebp
xchg
mov
pop
shll
push
mov
add
pop
cmp
outsb
push
sub
loopne
flds
data16
xchg
pop
jge
pop
pop
mov
int
push
ljmp
andl
pop
xchg
cmp
call
es
daa
jae
xorb
jae
pop
xlat
inc
leave
dec
xchg
push
incl
jae
stc
push
in
cmp
psllq
mov
sub
sub
imul
sub
stc
mov
fmul
inc
es
icebp
mov
xorb
mov
loope
push
xor
ja
popa
loopne
mov
jns
cmp
sbbl
jo
mov
sbb
add
jb
jp
sub
xchg
fsubr
jnp
or
cmp
add
bound
sbb
mov
cltd
adc
shll
pop
daa
jge
jne
xorb
sbb
mov
jg
mov
dec
jne
sbb
xor
push
cs
xor
push
jecxz
lock
inc
mov
rcr
jge
enter
push
xchg
pusha
lret
sub
cmp
xchg
pop
pop
jne
sub
mov
lret
and
jecxz
ljmp
rcrl
pop
iret
sub
sbb
pop
dec
ds
ljmp
xchg
push
push
xchg
scas
mov
lods
aas
std
aas
movsb
mov
outsl
jge
aas
cltd
jl
cmp
in
jp
stc
fildll
ror
xchg
gs
pop
jp
push
jp
test
or
ljmp
out
pop
cltd
int
lahf
icebp
fcompl
add
pop
je
out
mov
insl
add
fnsave
inc
jnp
aam
ret
mov
ds
outsb
jae
inc
add
pop
decl
rorl
jmp
addl
push
add
cmp
or
dec
repnz
xchg
sbb
aam
cmp
movsb
cmp
bound
mov
ret
inc
sub
pop
pop
push
sbb
add
hlt
ret
jecxz
inc
data16
mov
rcr
dec
add
mov
push
mull
pop
shrb
xchg
xor
push
push
lds
jmp
mov
mov
sub
or
push
sub
js
sub
add
out
jo
xor
fwait
les
push
sbb
aaa
rcll
cs
xchg
dec
stos
sub
add
cmp
and
imul
ss
pop
cmc
push
mov
fs
popf
sti
iret
or
or
jbe
jg
sbb
or
mov
jb
loop
and
adc
subb
adc
jae
mov
inc
fdivrs
push
add
aaa
add
cli
push
aad
pop
pop
out
daa
xor
jbe
insl
sti
rcr
roll
in
cmpsl
ficompl
pushf
lock
jae
lahf
inc
mov
push
sbb
aam
int
lods
sbb
and
shlb
push
gs
mov
out
adc
aam
mov
icebp
mov
cmp
loop
ficomps
or
call
and
mov
ss
das
into
in
add
icebp
mov
mov
ret
loopne
add
jge
inc
dec
xor
cmpsl
push
mov
jne
out
out
cld
inc
fcompl
xchg
test
xchg
lcall
lods
pop
dec
push
xor
lock
data16
push
push
sbb
jp
enter
cmp
pushf
inc
jecxz
dec
mov
mov
pop
loope
and
jmp
ficompl
cmp
mov
sahf
call
pushf
out
mov
mov
mov
mov
xor
ret
out
mov
cmp
lret
stc
loop
in
into
dec
dec
lcall
decb
je
ds
xchg
fwait
btc
mov
mov
sbb
cmc
pusha
es
pop
mov
dec
or
cld
loopne
stos
in
xchg
lea
outsb
icebp
dec
inc
bound
dec
mov
cmp
bound
sbb
adc
adc
jne
popa
outsb
sbb
ss
fisubrl
adc
stc
fwait
int
ret
jp
mov
inc
or
test
ljmp
lret
test
sahf
in
sti
and
sbb
xor
fucom
xor
fnsave
mov
fisubrl
or
adc
jmp
and
dec
pop
xchg
cwtl
je
jae
scas
aam
dec
xor
pop
xor
lret
mov
lock
mov
xchg
lods
dec
or
and
imul
jnp
data16
push
shl
decb
xor
inc
test
pop
add
xor
push
out
push
jb
jnp
lods
push
adc
xchg
jb
ret
mov
in
or
or
inc
fsubrl
lds
jle,pt
xor
aam
jecxz
outsl
mov
dec
sub
imul
pop
shll
mov
inc
and
hlt
mov
enter
repz
xor
negl
daa
pop
sahf
xor
adc
sbb
mov
ja
and
cmpsl
adc
popa
dec
xchg
out
cmpsb
loop
push
sub
imul
and
push
js
pushf
es
pop
push
les
and
or
jecxz
mov
push
clc
dec
call
sbb
inc
mov
sub
xchg
movsl
jbe
inc
push
pop
arpl
cmp
jbe
ffreep
mov
scas
push
sbb
in
and
xorl
mov
mov
sbb
push
xchg
mov
lcall
imul
stc
jp
nop
shlb
mov
pop
pop
dec
mov
movb
mov
ss
rorb
ljmp
jns
ljmp
mov
sub
in
pusha
mov
push
not
add
pop
ja
inc
pop
mov
push
push
out
push
sub
out
ss
sub
mov
popf
push
push
incb
cmp
popa
adc
adc
imul
jno
jl
mov
fldt
aad
pop
mov
sub
lret
jp
or
fmulp
xchg
add
xchg
adc
aad
push
nop
lods
adc
fdivrs
fisttpl
xchg
jg
sub
lods
jg
lcall
int3
mov
mov
cmp
or
movsb
orb
jge
imul
xchg
adc
sub
data16
adc
lea
jo
jno
std
imul
lret
shlb
int3
jp
and
cmp
testb
xor
cmpsl
xchg
jae
repnz
cmp
into
pandn
scas
and
ljmp
gs
data16
sahf
out
pop
shlb
jns
dec
jbe
in
jno
das
mov
push
fst
inc
div
fwait
and
xchg
jae
add
mov
clc
leave
loop
bound
cmp
xrelease
test
gs
push
jo
int3
dec
outsl
pushf
cmp
cmc
cmpsl
inc
xchg
jns
inc
xchg
add
ss
shlb
mov
sub
pop
shlb
mov
fmuls
or
lock
add
fs
xchg
dec
loop
dec
iret
jle
pop
xchg
jo
rclb
push
daa
and
ds
add
int3
leave
mov
fists
nop
push
push
cmpb
test
das
lds
adc
adc
xorb
dec
cld
aaa
loopne
cmp
sbb
xor
lret
popf
lock
push
leave
xchg
in
hlt
fnstenv
and
iret
insl
push
andl
push
mov
aas
xchg
push
or
hlt
outsb
push
push
js
and
sub
je
fisubrl
xor
push
sub
iret
js
push
ljmp
aam
iret
subl
mov
cmp
sbb
xchg
cmp
jg
insl
mov
bound
mull
mov
roll
into
lods
sarl
sbb
fdivs
and
fsts
jns
aas
arpl
fdivrl
outsl
addr16
add
mov
xor
or
sub
pop
loop
sarb
push
lcall
jb
lret
inc
ljmp
subb
pop
loop
sarb
push
lcall
jb
lret
inc
ljmp
subb
pop
jecxz
sarb
push
inc
and
jb
lret
inc
ljmp
subb
pop
loop
push
cli
inc
push
frstor
mov
push
ljmp
int3
int3
int3
int3
jno
xchg
mov
jb
add
fucomip
xchg
lods
xor
stc
outsb
in
jle
pop
int3
pop
xor
sub
sbb
or
jl
insb
lcall
mov
mov
mov
cld
or
pop
out
lods
mov
insb
out
and
jo
mov
mov
push
jno
sub
sub
or
pop
fdivrl
notl
adc
dec
fimull
push
pop
push
daa
out
or
scas
jnp
and
test
sub
xchg
jb
inc
enter
push
shlb
or
jge
pop
testl
sbb
mov
mov
je
cld
das
push
arpl
jb
add
xchg
xchg
jns
push
stos
popa
lcall
pop
dec
aas
test
leave
jae
jno
out
lahf
leave
cmp
pop
mov
jo
xchg
andl
sahf
add
jl
cld
sub
pop
in
outsl
mov
mov
test
icebp
mov
mov
inc
das
push
cmp
jle
das
cltd
dec
fsubl
sbb
pusha
lahf
jl
sub
pop
iret
hlt
fisttps
ds
inc
setb
pushf
outsl
bnd
dec
test
dec
scas
pop
pop
into
ficoms
test
mov
sub
es
pop
in
outsl
xchg
sbb
cmp
movsb
rcrl
cld
adc
cwtl
aas
icebp
test
dec
stc
push
mov
test
out
pop
in
insb
ljmp
pop
iret
dec
fistpll
mov
cld
outsl
in
jg
dec
int3
pop
cmp
sub
sbb
or
jl
insb
lcall
fistpll
mov
cld
outsl
in
jg
dec
int3
pop
cmp
call
pop
xor
dec
ss
shll
mov
pop
push
cmpsb
dec
orl
ficompl
pop
mov
imul
int
push
or
push
mov
mov
imul
imul
data16
push
out
imul
paddw
mov
sub
pop
movsb
sbb
mov
jb
mov
sbbl
jb
daa
pop
inc
push
loop
int3
insb
les
add
ljmp
mov
pop
mov
cwtl
xor
insl
mov
ja
push
pushf
popf
and
ljmp
xchg
ja
test
pop
xchg
mov
scas
dec
addr16
popa
xorb
dec
adc
fimuls
inc
inc
adcb
les
add
push
ja
test
cmpsb
icebp
cmpsl
scas
je
xor
repnz
jecxz
ret
mov
fldcw
lea
dec
and
cld
xchg
jbe
lahf
rcrb
cmp
movsb
imul
push
sahf
push
cwtl
cmpsl
sub
add
sbb
int
jne
rcll
mov
cmc
mov
sbbb
xlat
or
cmp
cmp
push
pop
pop
xchg
inc
enter
jecxz
out
jbe
and
xor
hlt
in
std
dec
inc
push
push
or
or
loop
call
mov
insl
sbb
or
xchg
cmp
imul
fmul
or
ds
lea
nop
jmp
jmp
cmp
icebp
lcall
icebp
and
out
aam
ret
inc
hlt
xor
mov
aas
mov
sbb
sbb
repz
sbb
mov
jp
jnp
fcomps
or
mov
je
in
scas
int
pop
xchg
cli
dec
xchg
pop
jno
sub
xor
ja
insl
or
mov
ret
xchg
insb
push
xchg
xchg
cwtl
movsb
fwait
out
cmpb
imul
sti
xchg
lds
imul
rcrb
mov
stos
test
subb
sahf
scas
test
mov
xchg
aas
outsb
or
xchg
cmp
stc
xchg
cmp
sbb
jecxz
cltd
sub
jg
arpl
icebp
jg
lea
or
xchg
iret
sbb
or
roll
add
clc
insb
cmp
xchg
xchg
adc
lahf
nop
jbe
mov
mov
andb
mov
in
std
les
gs
ret
mov
mov
push
dec
enter
dec
mov
and
test
aaa
jbe
fwait
ret
in
js
xor
push
mov
xor
mov
add
adc
js
leave
push
lahf
iret
aam
mov
and
mov
rol
movsl
cmp
sbb
andb
jle
es
lods
xchg
movsb
sub
sti
and
pop
inc
mov
cmp
or
outsb
testl
pop
nop
xor
add
fistpll
pop
adc
mov
idivl
cmp
nop
ja
mov
inc
pop
call
mov
sbb
xchg
dec
leave
pusha
in
std
push
cmp
cli
push
mull
mov
nop
cmp
pushf
xchg
outsl
and
aaa
xor
xor
jbe
movsb
stos
dec
push
icebp
sahf
lret
in
pop
xchg
pop
out
ss
dec
shr
mov
jecxz
lods
ja
dec
add
int3
out
sub
in
cld
out
int
fs
inc
mulb
xor
add
enter
cltd
je
loop
call
push
mov
cmpsb
inc
cmp
pop
mov
xor
add
push
shll
into
nop
push
inc
xor
sub
test
mov
inc
and
int3
stos
add
jno
mov
je
pop
test
cs
pop
xchg
cwtl
pushf
cwtl
pop
ljmp
dec
shll
dec
cmpsl
and
loope
inc
stos
fnstcw
aad
jge
hlt
stc
sub
repz
dec
mov
xor
mov
pop
pushf
mul
adc
or
or
xlat
inc
ret
idiv
movd
push
rorl
shlb
arpl
pop
ret
cwtl
push
pop
sub
fcomip
push
icebp
jns
fstp
xchg
lods
and
mov
in
cmp
or
adc
orl
mov
mov
sti
jbe
dec
out
xor
adc
rorl
jecxz
xor
sbb
pusha
movsb
imulb
les
jmp
mov
adc
out
scas
mov
inc
or
jmp
mov
xchg
fwait
rol
cmp
mov
cs
hlt
xor
mov
mov
pushf
nop
orb
adc
xor
rolb
shll
sbb
pop
mov
sbb
lds
mov
cmp
test
jge
cmp
out
add
lds
mov
in
idiv
clc
movsl
std
test
dec
fs
sti
ror
stos
adc
daa
pop
ja
jmp
or
xor
out
gs
jmp
jae
jb
in
jae
mov
push
mov
aad
sti
jbe
es
ja
xor
iret
pop
adc
lock
jbe
and
sahf
imul
rcr
push
movd
out
jno
mov
mov
pop
sbb
lods
out
cs
out
je
fmul
movl
push
fsubrl
mov
xor
or
push
test
int3
in
in
rolb
mov
xor
mov
out
stos
and
jae
xor
stc
std
btr
mov
push
lret
xchg
std
test
push
incb
jae
sbb
jle
adc
dec
fildll
fwait
cs
fwait
cli
mov
scas
pop
add
mov
rcrl
dec
mov
push
cmp
sbbb
aad
sub
sti
fcmovnb
les
dec
and
stos
sub
inc
hlt
cmp
testl
loope
push
jae
out
notb
mov
or
notb
inc
ret
xchg
out
into
jecxz
mov
lods
mov
orb
imul
and
scas
sub
sbb
inc
movsl
int
push
mov
sbb
ret
cltd
clc
push
push
scas
lods
test
add
push
or
sarl
outsl
add
sub
sbb
mov
pop
outsb
js
in
lods
in
jb
xor
movsl
stc
sub
out
stos
and
jp
out
rolb
andb
out
adc
xor
ficoml
lcall
push
cmpsb
ret
sbb
inc
test
das
sub
fidivl
push
dec
scas
pop
iret
lea
daa
mov
xchg
lea
push
jecxz
push
add
mov
jmp
lret
add
scas
xor
rep
sbb
cli
icebp
cvtps2pi
data16
and
xchg
aam
cmp
test
loop
shlb
insl
inc
rcrl
loopne
sub
cmpsl
sbb
push
and
es
jnp
xchg
xchg
jg
aas
push
repz
pop
mov
xchg
nop
bswap
outsb
mov
cmp
ret
jo
dec
xor
fnstsw
cltd
xchg
lahf
xchg
dec
mov
push
mov
das
aaa
cmpsl
sbb
fwait
mov
ret
sahf
ss
cmp
fisubrs
push
in
je
cmpsl
jmp
out
add
sbb
jg
insl
rolb
insl
inc
and
std
add
adc
pop
sub
push
xchg
pop
out
faddl
push
dec
sbb
out
inc
mov
into
dec
mov
je
in
jle
xchg
dec
mov
movl
adc
inc
sbb
mov
rcrl
xorb
jno
repnz
popa
mov
jge
in
aaa
mov
sti
push
insb
insl
jns
dec
cltd
cli
jge
lock
std
jbe
dec
add
cmp
cmp
lcall
arpl
in
add
pop
mov
inc
jb
mov
fstpt
int3
std
xchg
sbb
pop
sub
arpl
fidivrl
out
sub
sbb
add
jne,pt
stos
js
insl
iret
test
icebp
insb
lea
adc
xchg
inc
dec
push
xchg
nop
flds
dec
jb
lds
icebp
jae
test
enter
push
cmp
mull
pop
mov
pop
xchg
js
pop
in
mov
fbld
mov
pop
cmc
in
out
nop
test
add
add
gs
cmpsb
jge
mov
js
add
cmp
rolb
push
dec
push
inc
mov
mov
ds
rcrb
mov
lods
mov
and
std
and
push
in
ret
jle
es
cmp
lds
jle
shll
mov
add
in
rcl
addr16
xor
inc
and
adc
loope
pop
scas
fcoms
xchg
insb
ljmp
lock
movsl
push
adc
gs
fld1
in
xchg
and
arpl
xor
pop
sahf
dec
les
xor
xor
fs
pop
xchg
jl
insl
cld
jns
push
fisubs
dec
adc
sub
pop
jge
das
addb
mov
push
push
pop
add
jns
pop
loopne
inc
fildll
bound
insl
xchg
lea
cmp
and
ljmp
add
push
jmp
push
xlat
pop
movsl
xchg
out
push
push
inc
fidivrs
or
out
lds
aaa
arpl
adc
jge
cmpsb
je
jbe
mov
push
lods
addr16
leave
sub
mov
cltd
jns
mov
sbb
mov
pop
mov
push
push
jnp
mov
fcompl
jge
test
cwtl
test
dec
in
push
dec
cmp
dec
ret
and
rcll
cmp
subb
mov
fsubl
jge
dec
adc
out
aad
fdivl
sarl
and
mov
mov
cld
mov
insb
inc
clc
jecxz
sbb
sub
fwait
dec
pusha
ljmp
adc
sub
pop
ss
xchg
dec
push
das
pop
ror
cmp
jnp
mov
loopne
aas
into
xchg
lcall
mov
test
xchg
imul
outsb
flds
and
xchg
cmp
lret
sbb
dec
aas
mov
sub
out
pop
dec
mov
bound
mov
popa
sarb
push
cmp
clc
dec
lret
mov
dec
pop
outsb
mov
adc
enter
and
out
cmp
sti
andb
aas
es
int3
dec
sbb
pop
rolb
sub
jge
out
xlat
xchg
sahf
mov
aad
push
add
pop
pop
popa
in
ds
sahf
pop
add
sbb
lret
in
cmp
inc
or
int3
cltd
push
pop
iret
lds
adc
mov
mull
out
sarb
push
in
enter
jbe
arpl
cs
push
xchg
andb
add
lret
xor
mov
xchg
jnp
jno
out
pop
lea
lods
test
jbe
subl
sub
cmp
aaa
cmp
mov
ret
nop
sub
clc
ds
ficoml
cmp
xchg
repnz
fisubl
sub
out
out
cltd
int3
xchg
mov
or
mov
inc
leave
mov
xchg
int
mov
sbb
xor
sub
or
adc
adc
and
xor
shlb
shr
jo
sbb
inc
pop
mov
jecxz
aad
add
sahf
cmp
or
into
dec
mov
adcl
rcrb
sub
lea
xor
xor
dec
enter
or
push
stc
mov
insb
out
jge
out
ja
sub
in
lret
xor
pop
fstl
jecxz
sub
lods
or
xchg
lea
adc
nop
je
mov
mov
in
jle
xchg
mov
cmc
rcll
int
jecxz
push
mov
les
ficomps
sbb
subb
out
ljmp
repz
inc
mov
sbb
pop
sti
ja
ja
sti
cmp
loopne
jbe
movsl
in
cmp
jmp
scas
das
cmp
out
enter
jp
repnz
pushf
pop
loope
stos
mov
dec
sub
test
in
dec
mov
inc
sbb
xchg
call
dec
pop
in
sbb
mov
es
xor
push
bound
mov
lret
and
lods
je
insb
cli
mov
push
pushl
aaa
ret
imul
push
divl
lcall
sub
nop
push
and
xchg
add
mov
mov
sbb
out
lea
mov
pushf
jb
jmp
nop
imull
inc
jnp
movsb
pop
or
fwait
pop
je
mov
xchg
pusha
or
out
mov
mov
popa
std
ret
jecxz
cmp
jae
stos
pop
stc
inc
repnz
dec
jb
scas
into
test
dec
pushw
and
mov
jbe
mov
std
pop
inc
cmp
push
xor
sbb
ja
scas
out
pop
sub
xor
add
sarb
mov
sub
lcall
mov
fists
dec
inc
xchg
xor
and
sbb
pusha
sub
lcall
or
lods
dec
push
or
aam
insl
sub
fists
fs
cmp
sbb
sub
xlat
mov
push
repz
mov
hlt
mov
fnclex
mov
or
xchg
loop
inc
mov
add
or
fnstenv
incb
inc
dec
mov
adc
xor
and
inc
clc
xor
pop
stos
push
mov
imul
js
inc
inc
lods
xor
pop
lahf
inc
mov
mov
mov
dec
inc
adc
cmp
imul
fcoml
jne
jmp
and
dec
ljmp
xchg
dec
lret
iret
repnz
mov
dec
ret
mov
leave
test
stos
mov
jnp
imul
push
mov
xchg
dec
inc
icebp
cmpsb
cltd
loope
int
insb
dec
adc
dec
jnp
fstl
fdivl
repnz
arpl
mov
std
dec
pusha
mov
pushl
and
imul
mov
or
pop
xchg
xor
xchg
pop
stos
ret
lock
pop
fsubl
test
cmp
mov
movsb
jecxz
fidivs
sub
addr16
dec
ja
ret
mov
daa
inc
sub
cmp
fstl
push
test
ja
cltd
ljmp
add
pop
arpl
push
pop
mov
push
xor
test
pop
mov
jle
icebp
loop
fbstp
dec
jns
push
adc
fcmovnb
popf
jne
mov
xchg
es
call
sti
or
and
pop
fs
jo
add
xor
je
mov
xor
fidivrl
xor
insb
addr16
lahf
sub
or
aaa
and
icebp
mov
jg
rorl
outsb
add
cmp
mov
repnz
inc
subps
sub
inc
clc
aam
fadds
pop
jns
dec
dec
je
add
pop
notl
sbb
pop
ljmp
gs
xor
dec
inc
add
jge
or
lcall
in
jae
cwtl
lds
dec
inc
mov
xor
shr
mov
aaa
popa
xor
int3
fildll
mov
fwait
loopne
jl
cli
sub
les
int
xchg
sar
mov
push
push
ret
push
sahf
mov
mov
sbb
xchg
or
dec
enter
cmpsl
and
and
fsubs
or
movsb
or
sub
lods
ljmp
sub
gs
aas
mov
sbb
sbb
mov
xor
jg
jge
dec
add
inc
mov
cmp
inc
cwtl
adc
movsb
jbe
sub
les
mov
hlt
jno
add
sbb
rcr
adc
adc
mov
adc
inc
cmp
and
xor
rcrl
divl
add
xor
dec
sti
test
mov
imul
mov
ret
or
test
xor
int3
cmc
sbb
sub
xor
or
cmp
pop
or
dec
nop
insl
fcom
out
mov
gs
cmpsl
or
xchg
cli
and
ja
int
cmp
aaa
out
cmpsl
pop
bswap
clc
neg
repnz
xchg
jno
pusha
sbb
ss
in
inc
inc
xor
lahf
inc
andb
fmulp
aad
dec
inc
movsb
mov
mov
int3
sahf
stos
cmpl
adc
dec
repnz
hlt
dec
js
fs
inc
jns
incl
adcl
fsubs
mov
rcll
cltd
add
ds
mov
or
cli
cmpsb
xor
fidivl
in
cwtl
adc
add
jp
ja
mov
int
pushf
fistl
sarl
xor
mov
repz
xchg
sahf
mov
in
subl
lods
loopne,pt
sub
inc
in
arpl
push
xlat
push
cmp
iret
inc
js
adc
dec
mov
xchg
add
sbb
jmp
loope
and
iret
scas
fidivrl
add
divb
in
movsl
jg
jo,pt
pop
xor
test
push
xor
adcb
mov
sbb
adc
fsubs
sbb
pop
push
enter
cmp
adc
jae
js
jmp
enter
mov
inc
cs
push
cmp
pop
mov
xchg
fstps
jmp
xlat
pop
inc
loope
or
mov
or
mov
jecxz
imul
mov
data16
into
pop
lret
jge
jle
cmp
jae
xchg
ljmp
adc
push
cld
call
sbb
scas
and
inc
cs
leave
xor
outsb
and
inc
enter
jl
push
imul
imul
mov
movsl
lret
lret
push
xchg
scas
mov
push
push
cltd
popa
push
std
push
bound
aas
push
neg
xor
inc
scas
sub
cld
mov
inc
mov
enter
imul
add
movsb
shl
cmp
and
dec
push
mov
mov
and
xor
push
insl
jge
cs
popf
int3
bound
and
jo
ljmp
test
mov
jle
pushl
fld
gs
aad
jno
sbb
cmpsb
mov
and
dec
mov
andb
mov
sahf
cmc
les
push
add
scas
mov
cwtl
adc
adc
cmc
pop
orb
or
xor
lea
push
dec
loopne
arpl
sarb
dec
push
dec
xor
ret
lock
and
fwait
inc
sub
cmp
rcll
test
inc
mov
loope
or
pop
call
xchg
sbb
jb
jge
mov
mov
mov
mov
std
movsb
icebp
mov
xlat
jmp
stos
iret
xchg
lret
test
call
mov
push
xchg
cmpsb
sub
adc
pextrw
fcompl
leave
sub
or
add
es
mov
push
js
sarw
push
das
jp
daa
dec
cltd
xchg
push
inc
lock
push
fstpl
rcl
and
fxam
mov
sub
mov
sbb
add
lods
xor
sub
inc
call
lahf
cmpsl
push
inc
jo
daa
das
lcall
pop
ljmp
mov
mov
cmp
inc
cmp
jns
mov
hlt
inc
lret
ficoms
mov
cld
lds
cmp
pushf
inc
jg
cli
out
cs
data16
cmp
scas
pop
lea
test
icebp
aaa
mov
jg
insb
outsb
adc
pop
jae
cmp
push
test
push
cmp
push
pop
outsb
sbb
movsl
sbb
push
repz
jg
shlb
repz
cmc
ret
add
xor
js
adc
inc
test
int
ror
bound
sub
dec
fistl
arpl
cs
in
fstpl
and
incl
xor
insl
jb
jo
shll
mov
rcr
mov
or
cld
std
repz
enter
arpl
pop
adc
ret
and
pop
loope
xchg
mov
xlat
or
std
add
inc
pop
ret
out
jg
jns
dec
ficoml
movsb
leave
enter
dec
lds
dec
xor
pushf
mov
mov
roll
cmp
and
inc
stos
pop
outsl
push
sbb
ret
push
test
sub
xchg
lahf
mov
pop
out
das
decl
mov
add
jmp
push
push
pop
adc
mov
cmp
ds
shlb
adc
sbb
mov
xchg
add
mov
sbb
imul
testl
imull
add
lahf
ss
xchg
ficoml
add
testl
cmp
or
push
add
cwtl
dec
les
adc
pop
out
push
adcl
sub
rorb
xchg
or
xchg
cs
xor
addb
cmp
and
fs
fdivrs
pop
mov
lock
mov
cmpsl
rorl
sbb
cltd
sub
xor
mov
pushf
pushf
dec
icebp
mov
bound
int3
xlat
scas
cwtl
dec
mov
and
ret
mov
leave
cmp
and
push
stos
pop
add
outsb
sub
insl
mov
mov
or
loopne
jnp
outsb
imul
lea
xor
in
scas
gs
cmp
or
jge
clc
and
inc
sub
xor
mov
rorl
lods
loop
inc
ss
arpl
leave
inc
lods
add
inc
and
loopne
stos
mov
pop
inc
mov
xor
sub
mov
lock
dec
jp
test
inc
push
mov
je
push
inc
fsubl
cmp
push
pushl
clc
test
in
and
imul
rol
rolb
sub
sahf
pop
jns
in
movsl
xchg
fcoms
add
js
and
inc
adc
out
fistpl
daa
xchg
into
dec
repnz
aad
cmp
pop
movsb
aad
in
loop
sbb
xchg
mov
test
jecxz
pop
sbb
lods
clc
xchg
dec
les
jbe
mov
mul
in
push
add
push
fwait
scas
push
sbb
cmc
arpl
js
outsl
std
lea
sub
pop
dec
xchg
inc
gs
jp
scas
dec
jae
adc
mov
dec
xchg
adc
pop
sbb
add
and
add
dec
inc
dec
cmp
xchg
jb
cmpsb
or
inc
mov
cmpsb
pop
into
adc
lock
cmp
in
push
dec
mov
stos
sub
ret
xorl
jns
sub
jno
xor
cmp
movsb
mov
test
adc
outsl
pusha
pop
les
lahf
imul
add
rclb
in
fnstsw
jl
insb
lcall
fistpll
mov
cld
outsl
in
jg
dec
int3
pop
cmp
sub
sbb
or
jl
insb
lcall
fistpll
mov
cld
outsl
in
jg
dec
int3
pop
cmp
das
mov
jge
push
fistpll
js
jg
dec
cld
pop
and
add
jl
jl
pop
iret
int3
pop
mov
jl
andb
xor
int3
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
push
mov
push
push
push
push
movl
movl
movb
call
andl
andl
push
mov
push
mov
movl
movb
movl
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
out
lods
lcall
lahf
mov
mov
sub
push
sub
jl
sub
pop
push
jp
mov
cld
lret
fsubr
int3
cli
or
js
fidivrs
jl
insl
pop
pop
push
jp
mov
mov
ljmp
jo
js
push
sbb
ds
jp
mov
hlt
or
sbb
jmp
aam
aad
loopne
or
adcb
mov
mov
adc
cmc
mov
jp
sub
cmp
mov
shll
lahf
lods
dec
aad
dec
mov
in
push
into
in
aam
ds
dec
das
repz
orl
notb
mov
scas
fxch
stc
lret
int3
stos
or
inc
nop
push
aas
or
movsl
pop
pop
pop
push
lds
lods
lret
int3
adc
rcrl
or
or
subb
imul
stos
add
inc
add
cmp
out
ret
cmc
rorl
jecxz
or
scas
mov
mov
in
lret
fsubr
aad
and
sub
pop
pop
push
cmp
out
dec
stc
in
call
fimuls
sub
outsb
inc
bound
or
cmp
sub
mov
stos
mov
mov
mov
ds
sub
pop
jl
push
sbb
dec
adc
ficompl
into
test
int3
cli
cmp
sub
sbb
or
jl
insb
pop
pop
push
jp
mov
cld
lret
fsubr
int3
cli
cmp
sub
sbb
or
jl
insb
pop
pop
push
jp
mov
lds
imul
lock
test
jle
push
outsl
push
pop
inc
sbb
int
lds
or
inc
dec
bound
xor
nop
adc
jge
push
mov
mov
lret
xchg
outsl
aam
inc
lea
mov
push
nop
sbb
fsub
test
add
cmpb
sub
lahf
rolb
dec
pop
lcall
popf
xchg
cmc
jb
movb
and
push
movsl
xchg
xchg
inc
popa
pop
pushf
sbb
jae
inc
stos
sub
jle
ds
sub
repnz
das
jb
xor
xor
push
adc
in
mov
js
cmp
repz
cmp
push
xchg
sbb
xor
sub
sub
xchg
or
pushf
daa
and
enter
scas
leave
cmpsb
jbe
sahf
dec
loop
fs
mov
lcall
fs
inc
std
adc
jmp
jle
mov
add
push
mov
adc
cmp
stc
mov
jns
mov
or
mov
int
mov
cmp
call
out
outsb
aad
filds
or
dec
andl
xor
cld
nop/reserved
sub
int
hlt
dec
mov
jne
push
xchg
and
fnstcw
mov
outsb
hlt
mov
pop
mov
enter
in
lret
ret
rclb
mov
or
dec
sbb
in
lahf
pop
lahf
or
leave
movsl
and
cmp
adc
movsl
lcall
cld
ds
or
repz
lahf
pop
push
xor
fsubl
and
inc
lahf
push
lock
sub
jae
jbe
sbb
mov
lcall
popa
ss
push
cwtl
adc
sub
add
and
sbb
xor
jl
mov
jle
shlb
fldcw
bound
mov
insl
scas
xchg
add
jge
repnz
imul
inc
adc
cmp
insl
loope
cmp
nop
cmpsl
aaa
and
pop
cmp
movb
outsl
dec
test
aas
out
mov
aas
out
jmp
sarl
xchg
pop
arpl
test
push
jp
mov
jmp
dec
push
dec
jo
sbb
push
hlt
nopl
test
inc
xor
xchg
push
dec
movsb
or
dec
jmp
dec
aad
push
clc
adc
insl
nop
shrb
lret
jmp
sahf
dec
mov
xchg
shll
and
cwtl
andb
push
jge
orb
rolb
pop
mov
and
int
lcall
pop
cmpsl
xchg
les
cltd
jne
cmp
dec
mov
in
mov
jmp
dec
cmp
pop
push
ja
icebp
in
sbb
cmp
sbb
add
pop
lret
ret
jp
lahf
sysexit
aam
dec
lcall
sub
mov
or
xchg
dec
jb
push
sbb
icebp
in
fiaddl
outsb
mov
jae
rorb
lods
adc
push
mov
inc
jge
popa
scas
dec
out
add
jnp
test
jg
sbb
pop
mov
loopne
out
jae
sbb
xor
lret
leave
push
outsb
mov
xor
push
call
rorl
cmp
and
xchg
xchg
rcrl
push
push
mov
jae
cmpl
jge
or
inc
clc
scas
jmp
push
sbb
out
mov
sbb
cli
push
xchg
insl
add
testb
push
pop
add
push
sarb
sub
xor
filds
or
mov
lods
xor
cmp
mov
and
sub
repz
xchg
lea
pop
adc
sahf
dec
cmpsb
ret
cmp
out
loopne
sbb
addr16
push
leave
bound
ja
jbe
inc
lcall
push
in
out
daa
lea
sub
pop
jecxz
dec
pop
and
loopne
fadds
xchg
stos
dec
rcll
ds
xor
adc
insb
mov
lds
hlt
push
xchg
mov
push
dec
jl
sub
cmp
lahf
cmpsl
mov
lahf
fstpt
or
jp
repz
xchg
pusha
lahf
rep
mov
movsb
xor
test
cmp
mov
xchg
add
adc
xchg
repz
fsubl
push
pop
push
cmp
imulb
ss
lea
je
arpl
inc
xchg
cli
pop
int
test
dec
pusha
lea
clc
xchg
pop
fists
mov
neg
add
cs
loope
jb
push
bound
movsb
jbe
xchg
push
pop
and
in
lcall
aam
adc
inc
mov
xchg
ja
lcall
inc
cmpsl
sub
mov
push
lds
lods
xchg
dec
in
test
sbb
ret
jnp
pop
das
jl
mov
pop
rcl
lret
ja
jp
pop
dec
fisttpl
jns
jp
icebp
fldcw
ja
mov
jp
rcrb
lret
fmul
xchg
sahf
push
push
sub
test
js
jbe
mov
call
fisttpll
clc
hlt
stos
dec
movsb
sub
or
pop
and
adc
icebp
rcl
xor
xor
push
mov
inc
jge
cwtl
inc
fwait
das
dec
into
push
shll
das
rclb
es
stc
loop
mov
xchg
dec
cmc
pusha
in
inc
call
div
inc
jae
ljmp
sbb
cmp
loopne
es
pop
mov
mov
hlt
dec
js
mov
cmpsl
int
enter
mov
mov
fldl
jecxz
dec
sbb
imul
mov
ss
arpl
pusha
imul
scas
fnstcw
incb
jle
outsl
xchg
cld
or
mov
xorb
mov
fisttpll
bound
cmp
js
mov
and
insb
mov
pop
xor
movsl
xchg
aad
inc
out
in
dec
sbb
leave
iret
and
cmpsb
push
xchg
ror
ljmp
add
int
int
aaa
cwtl
xlat
pop
rolb
das
daa
lea
lock
xlat
sbb
fisubrs
das
and
pop
ss
frstor
inc
mov
sub
xor
in
nop
cmp
jb
jns
mov
dec
mov
sbb
gs
pop
sub
adc
mov
inc
popf
pop
lds
pop
arpl
xchg
jbe
das
test
xor
cld
push
xchg
ret
sbb
fimull
int
adc
loope
lret
pop
leave
inc
mov
or
push
mov
add
inc
aas
dec
cmp
add
mov
xor
iret
xchg
into
mov
stos
sbb
das
jns
bound
pusha
das
mov
enter
jnp
iret
jmp
out
pop
inc
cmp
sbb
fstl
out
pop
outsl
lret
mov
jmp
popa
ret
mov
or
mov
shlb
adc
in
lods
je
pop
push
pop
pop
mov
mov
scas
test
jl
orb
loop
mov
fmull
inc
mov
out
or
icebp
dec
idivb
adc
lret
daa
shrb
dec
and
push
aad
mov
cmp
fimull
daa
shlb
cmpsl
cmpsl
lcall
pop
jb
and
out
dec
decl
sub
push
xchg
decl
xor
jmp
ljmp
fs
loop
fdivr
xor
cld
pop
clc
or
mov
and
push
int
push
js
cmp
das
in
pop
sbb
insb
cmp
mov
lahf
sahf
fsubl
fs
mov
arpl
xchg
inc
out
cli
inc
out
in
sub
adc
ret
fnstsw
adc
xchg
dec
mov
or
mov
and
adc
je
dec
stos
inc
push
scas
loop
mov
inc
push
sbb
cmpsl
xchg
pop
inc
sub
xor
inc
gs
push
jmp
loop
xchg
addr16
jne
dec
popa
dec
mov
pop
nop
arpl
js
jle
sbb
mov
mov
add
les
bswap
jg
das
push
cmp
mov
xchg
sahf
mov
and
add
push
fst
aas
mov
push
lods
testb
fidivs
cmp
outsb
and
mov
ja
jg
sbb
ljmp
int
mov
int
sub
or
iret
sbb
mov
sub
hlt
mov
lcall
mov
andb
jne
cmp
push
pop
and
out
sbb
jb
push
idivl
mov
std
arpl
clc
jle
in
inc
sbb
jmp
sub
ljmp
mov
mov
adc
repnz
dec
mov
in
or
mov
or
pop
fmuls
xlat
pop
mov
ja
stos
mov
sbb
sub
les
cmpsb
es
nop
icebp
dec
xchg
jno
mov
aaa
imulb
xor
add
pop
jmp
jae
add
jp
aaa
std
ljmp
inc
pop
jl
add
cs
stc
das
mov
xor
cmp
cmp
mov
jecxz
mov
jle
lock
inc
ds
cmp
xchg
mov
enter
imul
and
in
dec
and
popf
cmp
seta
mov
test
iret
xor
mov
cmp
lret
pop
pop
popa
cld
mov
sbb
mov
addr16
jns
int3
pop
lcall
ret
jb
sbb
dec
and
sbb
mov
xchg
xor
sbb
adc
pop
aam
aam
sahf
js
pop
lret
sti
arpl
mov
stos
repz
std
push
fidivrl
xchg
pop
notb
xchg
dec
dec
pop
mov
mov
cmp
or
inc
and
into
xchg
xchg
push
xor
xchg
sarb
jecxz
inc
mov
adc
movsb
inc
jle
and
scas
outsl
into
xchg
xlat
ret
pushf
xor
mov
inc
outsl
mov
dec
aas
add
fldl
mov
jne
mov
test
jb
popa
inc
cltd
sub
dec
jmp
jmp
push
dec
lea
in
aaa
mov
and
dec
orb
mov
add
rcrl
mov
cmp
inc
mov
fidivs
mov
adc
clc
mov
mov
movsl
hlt
and
mov
loope
ss
loopne
fisubs
aad
jl
inc
jmp
pop
out
push
jns
out
add
ljmp
cmp
xchg
dec
repnz
test
imull
popf
mov
movsb
stc
enter
rep
or
in
adc
mov
cs
add
loopne
pusha
xchg
mov
pop
sahf
outsl
aam
and
push
ja
lcall
mov
out
das
inc
movsl
fistl
pop
push
pusha
mov
pop
cmc
dec
subl
sub
and
scas
xchg
jbe
lret
jbe
and
insl
jge
cmc
div
xchg
insb
ljmp
movsb
insl
and
inc
pushf
iret
test
xor
xchg
add
fistps
aam
pop
jl
and
jmp
addr16
loopne
pop
jno
into
add
mov
jb
mov
out
fs
adc
sub
int
call
jmp
mov
testb
insb
orl
inc
mov
sub
mov
outsl
jl
cmp
push
loop
imul
cmpsl
pop
pop
xchg
sub
cltd
and
mov
mull
popa
fyl2x
cmp
stos
adc
xchg
pop
sbb
pop
fnstsw
fwait
mov
les
dec
cli
and
jne
test
sub
inc
xor
pop
cmpsb
add
jo
test
or
repnz
add
cmp
clc
xchg
cmp
pop
or
sarl
xchg
push
es
adc
mov
jp
ja
mov
jp
xchg
push
andb
sub
in
fsubrs
mov
cltd
pop
mov
call
iret
clc
pushf
hlt
sbb
mov
dec
add
add
daa
cmp
scas
jp
stos
test
push
fidivrl
or
repnz
pop
sbb
int3
xchg
movsl
sub
and
rep
aaa
or
gs
inc
sbb
insl
add
dec
or
jo
and
push
orb
mov
mov
movsb
jae
aam
int
dec
je
sub
lret
xor
inc
out
and
nop
bound
jns
leave
jg
jl
gs
sbb
stc
mov
popa
xchg
out
enter
sub
push
xchg
sti
iret
mov
lods
repnz
sub
insb
push
ja
jmp
push
xchg
mov
jle
divl
jns
inc
leave
into
push
push
ss
xor
xor
mov
js
mov
pushf
push
pop
mov
or
push
adc
add
sbb
out
mov
xor
xchg
fsubs
jecxz
xchg
pop
and
xor
dec
or
mov
aaa
xchg
add
stos
push
mov
das
dec
les
ds
push
adc
mov
sahf
std
popf
aam
test
js
mov
test
adc
mov
mov
inc
pop
inc
test
adc
out
arpl
lcall
divb
repnz
mov
or
push
stos
nop
jg
negb
pop
insl
fmuls
lea
rcrb
stos
mov
push
inc
loop
add
mov
xlat
ljmp
sbb
scas
divl
lods
sbb
xchg
xor
movsl
push
adc
mov
push
into
pusha
jae
shr
dec
loop
andps
ret
adc
dec
lahf
or
out
loope
pop
xchg
inc
xchg
cmc
push
movsb
adc
into
pop
jle
dec
les
cmp
cmc
cmpsl
push
xchg
lahf
dec
mov
test
add
push
pop
notl
test
jns
sbb
sahf
aam
rolb
in
arpl
push
out
int3
mov
mov
lods
insl
push
or
stos
add
dec
aaa
jge
stos
rcrl
test
in
sub
movsl
addr16
cmp
mov
inc
cmp
sub
mov
push
test
or
aad
adc
jl
and
pop
add
fsubr
lods
jno
int
jno
xlat
das
and
icebp
push
out
sbb
jmp
cmp
mov
xor
sti
pop
mov
mov
cmp
cmpsb
xchg
dec
cmp
mov
xchg
add
jecxz
mov
push
in
fstpl
pop
fs
in
subl
sub
popf
adcb
int3
outsl
jp
sbb
syscall
push
lods
sahf
inc
mov
sbb
mov
movsb
mov
push
lcall
adc
or
jmp
inc
cltd
or
jnp
jnp
mov
sub
pop
test
jbe
sahf
pusha
insb
xchg
cltd
aam
cmp
movsl
pusha
fs
mov
stos
aad
xchg
cmp
pop
ljmp
sbb
jp
out
scas
mov
repz
aas
xchg
rcr
add
addr16
mov
pop
and
dec
aam
cmpsl
jnp
pushl
add
mov
dec
subb
aam
push
push
pushf
jns
xor
fnstenv
icebp
cmpsl
cmp
out
and
out
call
mov
int
mov
sub
adc
add
mov
sub
mov
leave
push
popa
pop
jo
jge
push
cmpsb
push
jns
cmp
cltd
inc
popa
mov
inc
adc
cmp
mov
pop
out
out
add
push
bound
out
fcmove
jbe
sbbb
or
pushaw
mov
jbe
loope
pop
mov
inc
xlat
negl
push
adc
insl
enter
ljmp
pop
cmp
out
fwait
jle
inc
je
cli
sahf
clc
lahf
add
mov
xchg
sub
icebp
push
pop
add
repz
mov
xor
add
out
jecxz
cmp
push
pusha
lret
inc
mov
mov
mov
or
aad
out
fnstenv
lds
push
call
data16
test
adc
push
lods
lea
xchg
xchg
push
cli
mov
inc
jp
lock
addl
adcl
sbb
out
out
movsb
bound
and
push
pop
xor
pop
ja
loope
imul
adc
lea
pop
hlt
adc
repnz
pop
movb
leave
mov
sub
xor
and
loopne
or
test
adc
mov
ja
cs
dec
xor
pushf
xlat
pop
inc
fwait
and
or
stos
aas
cltd
push
and
stos
call
jl
cli
sti
ljmp
xor
jl
cmp
mov
clc
pop
fbld
cmc
mov
daa
cltd
mov
daa
adc
and
xchg
ss
int
xor
mov
repnz
imul
jns
cmp
fldcw
out
mov
or
scas
adc
sbb
lahf
xor
jl
lods
int
pop
or
mov
movb
or
dec
xchg
pusha
adc
xor
repz
aam
push
mov
push
insl
mov
sbbb
push
push
xor
nop
add
cmpsl
inc
or
pop
cmp
or
gs
into
lock
add
mov
arpl
cmp
icebp
lods
loop
sbb
loop
outsb
mov
outsb
inc
ror
lcall
lea
pop
mov
das
popa
scas
mov
xor
in
pushf
dec
pop
lcall
scas
rorl
mov
mov
int3
push
pop
mov
dec
dec
pop
cmpsl
sub
mov
cmp
or
adc
mov
push
sarb
movsb
mov
dec
mov
arpl
shl
dec
xchg
into
mov
pop
cmpsb
or
lret
sahf
and
mov
dec
xchg
xor
mov
ret
inc
mov
std
sub
cmp
xchg
gs
call
dec
mov
mov
stc
ljmp
mov
inc
cltd
sub
lods
dec
insl
lods
jb
mov
test
sbb
push
rol
mov
subl
cli
add
rorb
inc
push
pushf
lea
push
stos
lock
cmp
fbld
add
repnz
add
mov
push
test
or
lock
rcrl
adc
jp
test
lock
es
or
or
icebp
adc
jmp
cmpsb
xor
add
xor
lret
jecxz,pn
jbe
mov
shll
fcmovbe
imul
ds
gs
adc
aad
vcvttpd2dqy
call
popa
inc
xor
xchg
jl
insl
sub
mov
push
sub
loopne
xor
push
add
push
outsl
add
adc
xchg
pushf
push
sub
and
fsubl
enter
mov
xchg
mov
mov
add
pop
add
cltd
ja
mov
dec
js
and
and
les
cmp
in
out
xor
rcrb
test
and
mov
test
cmp
mov
das
je
call
mov
cltd
idiv
cmp
shlb
mov
push
pop
dec
gs
mov
sub
nop
jge
pop
mov
movsl
ljmp
sub
jge
mov
loopne
and
ror
jbe
or
xchg
xor
pop
test
mov
outsb
sti
out
cmp
scas
sbb
mov
mov
insl
xchg
ret
mov
cltd
jle
push
pop
pop
inc
mov
xchg
pushf
out
push
jle
rolb
test
fdivrs
cmp
call
mov
in
jo
dec
outsl
sti
sub
into
adc
dec
mov
call
xor
das
push
dec
push
inc
in
lods
sbb
fstpt
test
and
sub
dec
and
pusha
outsb
sub
imul
int
xchg
mov
and
sbb
add
mov
pop
stos
xchg
dec
packuswb
mov
jp
mov
popa
aas
mov
std
lahf
outsb
shl
adc
daa
shrb
push
pop
push
idivl
pop
or
and
cld
sbb
xchg
lods
fimull
rorb
js
imull
and
int3
andl
lahf
sub
out
ss
pusha
inc
pop
pop
mov
fadd
iret
add
push
lcall
xor
loop
xchg
push
xchg
std
in
fisubrl
sub
push
cmpsl
mov
das
subb
fstps
or
cmp
mov
mov
popa
cmc
sub
lea
mov
lcall
jno
int
mov
data16
and
je
sbb
loope
adc
shrb
je
mov
loope
into
xor
inc
js
jae
testb
jg
testb
inc
pop
push
jmp
out
scas
jne
sbb
mov
jecxz
sbb
add
gs
cltd
bound
fwait
scas
sub
adc
push
cmp
cwtl
imul
out
xchg
cmp
outsl
stc
mov
cmp
insb
cmp
int
mov
sbb
cld
push
shrl
hlt
shrb
cmpsl
inc
inc
sub
in
pop
jmp
pop
cmp
and
fimuls
arpl
rorl
ss
fisttpll
push
pop
imul
mov
mov
mov
movsl
idivl
adc
xchg
mov
addl
mov
xchg
popa
or
push
cmp
bound
push
cwtl
fdivrl
fistpl
inc
sbb
js
movsl
mov
cmc
jmp
xor
pop
ret
mov
inc
cmpl
xor
test
std
hlt
cmp
out
loope
or
aas
push
jno
mov
pop
lret
push
cwtl
sbb
data16
ljmp
mov
jne
lcall
sbb
popa
pop
hlt
in
push
in
xchg
int3
imulb
jnp
shlb
xor
pminsw
push
iret
add
stc
adc
adc
push
test
or
insl
mov
pop
push
or
fistps
mov
in
pop
fildll
pop
dec
and
scas
inc
into
xorb
or
call
les
adc
rcrb
fwait
bound
pushf
sub
movsl
pop
and
push
fstpt
popa
stc
inc
mov
in
clc
pop
cmp
jmp
push
in
ss
or
gs
push
fs
xchg
mov
cltd
in
lea
push
push
popa
movsl
fstpl
mov
stos
or
jns
mov
enter
cmp
repz
sbb
push
dec
push
fs
pop
inc
adc
loope
push
les
test
leave
xchg
aas
cmp
push
mov
cli
ja
outsl
fwait
rorl
ja
clc
sbb
je
or
xchg
lds
fwait
aas
push
jl
cltd
js
cmpsl
xor
sti
or
out
int
stc
ret
mov
popa
sub
adc
xor
sahf
xchg
rolb
stos
cmpsb
and
sbb
mov
call
lods
iret
sar
fwait
int
xchg
in
insl
pop
xorb
pop
sbb
movsb
pop
mov
pop
xchg
xchg
in
scas
mov
pusha
ja
lds
cld
lret
fsubr
int3
cli
cmp
sub
sbb
or
jl
insb
pop
pop
push
jp
mov
cld
lret
fsubr
int3
cli
cmp
sub
sbb
or
jl
insb
pop
pop
push
jp
mov
cld
lret
fsubr
int3
cli
cmp
sub
sbb
or
jl
push
jp
mov
mov
pop
push
add
mov
or
or
in
mov
int3
int3
int3
int3
pop
test
jnp
imul
rorb
lret
sbb
adc
xor
pusha
stos
jo
orb
mov
or
cmp
sub
fildl
lret
adc
outsb
mov
pusha
stos
jo
es
push
jnp
imul
lock
fildl
lret
xor
adc
ss
adc
adc
les
or
sbb
pop
iret
or
mov
shlb
sbb
mov
pop
ss
jmp
rolb
out
xor
pop
xor
fisttpll
sub
fildll
fs
sahf
bts
cmp
mov
jecxz
inc
sub
sub
lds
add
or
fidivs
nop
or
aam
loopne
and
fildl
int
gs
jecxz
mov
push
aas
insl
adc
dec
mov
and
or
and
inc
jmp
rclb
mov
xor
outsl
cmp
mov
nop
mov
inc
add
scas
pop
cmpsl
sub
sbb
aam
mov
rorb
cmp
sub
add
mov
fwait
jl
mov
sbb
int3
push
fdivl
inc
mov
lcall
push
incb
loop
call
sbb
cmp
sub
push
fcompl
cmpb
sub
mov
jb
add
pandn
add
das
jo
int3
push
sbb
lock
lret
adc
and
xor
pusha
stos
jo
orb
mov
or
cmp
sub
fildl
lret
adc
and
xor
pusha
stos
jo
sub
rcr
pop
shll
adcl
daa
xlat
add
jbe
addr16
mov
sbb
or
repnz
fisubs
rol
sbb
push
aas
movsl
sbb
or
repnz
fisttps
int
gs
mov
idivb
outsb
jno
pop
insl
movsl
outsl
negl
push
mov
mov
mov
imul
push
jo
roll
inc
cld
mov
cmp
andl
add
or
jle
out
jg
je
pushf
int
rol
int
dec
push
out
ss
dec
mov
imul
lret
in
sarb
sbbb
fisttpll
inc
mov
xchg
xor
outsl
scas
hlt
jae
mov
rcrb
adc
scas
jle
pop
jae
push
out
add
nop
mov
push
imul
mov
daa
repz
lcall
mov
mov
std
xlat
les
add
sub
sub
and
mov
adc
lret
lret
loop
loop
in
inc
dec
fcmovu
test
movsb
movsb
push
inc
test
stos
in
cs
or
adc
sbb
jl
int3
hlt
mov
pop
in
and
xchg
cmp
xchg
pop
jns
out
dec
mov
and
pop
mov
push
sbb
lcall
add
ret
sbb
ret
test
sub
les
repz
ja
mov
orb
insl
pop
lds
inc
lret
pusha
hlt
add
mov
mov
push
iret
inc
inc
push
popa
jbe
aam
out
daa
sbb
iret
dec
loop
test
jmp
or
xchg
out
mov
lahf
xor
popf
cmp
faddp
ror
inc
mov
addl
out
fldt
mov
cmp
jnp
mov
pop
or
lock
inc
arpl
into
and
pop
cld
aaa
rcr
jne
inc
lret
and
sbb
pop
xchg
and
shrl
cmpsl
cmpsb
cli
pop
ja
je
or
stos
xchg
sbb
push
cli
cli
les
fprem1
movsl
int3
ss
mov
std
adc
jns
das
es
aad
jp
add
bound
nop
push
ljmp
and
xor
dec
in
mov
lds
int3
lea
pop
push
mov
loope
mov
add
popa
cmp
test
sub
pushf
jp
fdivrl
jbe
adc
cwtl
lahf
push
and
je
xchg
mov
pop
cli
cwtl
mov
mov
movsb
ficoms
mov
xor
jge
jo
cmovb
jmp
outsb
icebp
sbb
xor
mov
bnd
push
fs
nop
push
and
pop
cmp
mov
cltd
idivl
xor
push
jl
in
xchg
push
pop
jl
jbe
xor
stos
jecxz
push
sarb
movsl
loope
add
inc
ja
cmp
inc
js
scas
sahf
ljmp
and
xor
iret
popf
rclb
movsb
ss
jp
bound
push
mov
mov
js
sbb
mov
sahf
cli
adc
xor
inc
jae
enter
arpl
sbb
pop
push
and
and
mov
xchg
or
mov
call
dec
fldcw
sub
jae
data16
fwait
lds
bound
dec
movsb
add
scas
rcrb
mov
sti
mov
lock
inc
mov
or
call
mov
push
add
adc
outsl
jp
inc
xor
jo
stos
sarb
jo
mov
jne
ficoms
xchg
jbe
repz
and
xor
out
pop
into
das
aad
data16
out
xchg
aad
mov
andb
cs
packuswb
outsl
jnp
pop
hlt
les
sub
xchg
xchg
cmpsl
repz
bound
je
sub
pop
pushf
cmp
mov
divl
rcrb
in
inc
or
push
fcoms
imul
jg
jle
push
addr16
ds
push
inc
mov
cmc
out
jne
arpl
add
cmpsl
fnstenv
ffreep
add
inc
outsb
push
jns
add
add
dec
xor
fsub
pop
mov
inc
lahf
js
jns
iret
add
fidivrl
in
fdivp
push
pop
faddl
adc
add
mov
mov
fcoml
add
rcll
stos
fidivrl
and
mov
leave
mov
lods
lds
pop
and
aad
lcall
push
dec
in
and
sahf
mov
mov
daa
cmpl
sub
testl
cmp
fsubl
ror
cmp
shlb
mov
stos
sbb
mov
mov
sbb
cmp
lret
mov
enter
sbb
int3
push
sbb
jne
push
test
scas
scas
loop
movsb
or
mov
repnz
roll
ret
das
sbb
shr
aaa
es
add
mov
and
push
icebp
icebp
inc
in
fisttpll
or
ds
or
pusha
nop
fldenv
dec
xchg
and
ljmp
push
and
mov
shlb
rorl
pop
scas
sbb
and
adc
xchg
or
out
lds
push
sub
leave
sub
or
mov
scas
mov
xchg
adc
pusha
shlb
lret
mov
js
mov
push
out
jae
test
xchg
sbb
pop
mov
iret
or
fwait
je
inc
dec
test
adc
push
xlat
pop
sub
push
stos
cmp
or
in
ret
sub
and
pushf
in
insl
jns
xor
cs
gs
cmp
cmp
cld
jecxz
cli
and
xchg
sbbb
sub
push
ret
sub
enter
or
add
test
mov
inc
dec
dec
aaa
imul
lcall
xor
fmull
testl
aam
dec
pop
pop
cmp
stos
shlb
and
mov
aam
adc
pop
insl
cmp
icebp
arpl
or
inc
sbb
cmp
stos
lcall
fdiv
xchg
scas
push
xor
ss
inc
dec
adc
cmp
pop
xchg
mov
and
pop
lock
iret
sub
nop
inc
lcall
nop
into
sbb
insl
jmp
jmp
sub
clc
xchg
ljmp
cmpsl
adc
push
aad
mov
orl
rorb
call
jbe
push
cmp
dec
add
js
inc
sbb
lret
inc
aad
in
sbb
cmp
jecxz
push
test
rcrl
test
jmp
pop
mov
pop
faddp
mov
movsb
mov
fisttps
push
mov
sub
ljmp
iret
inc
cmp
decb
jmp
mov
push
xor
xor
mov
test
lea
lea
ret
mov
gs
jle
in
add
adc
fisttpl
xor
psubb
loopne
je
out
mov
mov
or
inc
cmp
xor
xchg
in
mov
idivb
dec
scas
mov
jnp
mov
mov
pop
mov
nop
mov
push
mov
pop
out
inc
sub
popa
mov
cwtl
push
push
dec
xor
dec
bswap
lods
mov
or
mov
pusha
add
dec
gs
loop
mov
loop
xchg
push
fiadds
in
jb
xchg
adc
mov
push
and
xchg
ljmp
in
add
xchg
sub
lock
dec
pop
dec
sub
or
xchg
add
inc
clc
loope
mov
xor
adc
pop
jns
cmc
cmc
test
inc
dec
loop
cld
fdivrs
push
mov
test
gs
or
mov
or
lret
ljmp
out
scas
dec
mov
jg
pop
int3
inc
cmp
xchg
jp
pusha
cmp
adc
notb
pop
and
mov
hlt
lods
sti
cmp
dec
cmove
scas
mov
aad
cmpsl
pushf
fucomi
aas
test
fst
and
movsb
push
shr
adc
mov
call
lock
popa
test
sti
out
xchg
popf
repnz
inc
pop
sub
jns
pop
xchg
test
or
fiaddl
pop
xchg
mov
jmp
imul
sbb
add
pushw
test
lahf
or
cmp
add
fistps
cwtl
cmp
push
in
repnz
mov
jle
sbb
xor
jno
jo
push
push
xchg
pop
cmpsb
mov
call
out
pop
pop
xor
cltd
xchg
sbb
inc
repz
cmp
push
push
add
mov
mov
xor
hlt
negl
sub
xor
inc
shr
mov
cli
es
adc
push
or
sti
stos
or
or
inc
or
mov
add
inc
cmpsl
test
push
xchg
xchg
out
jmpw
jp
mov
push
mov
lds
pop
mov
and
cmpl
inc
push
lea
cmp
pop
out
bound
in
orl
lds
stc
icebp
mov
lods
pop
in
mov
sub
adc
xchg
cmc
enter
cmp
or
in
and
jbe
hlt
es
mov
rcrb
xchg
and
das
test
mov
sbb
mov
mov
movsb
fimull
pop
mov
test
sub
push
subb
jmp
mov
shlb
daa
adc
mov
imul
lret
inc
or
fs
fwait
pop
xorb
out
in
hlt
movsl
rolb
pop
decb
les
mov
ss
subb
lods
cmp
mov
rcl
add
mulb
test
cwtl
jnp
jb
lret
add
lods
stc
hlt
fistpl
push
pop
leave
sub
pusha
data16
mov
inc
mov
aam
fisubrl
sbb
out
lock
cmp
scas
jo
cmp
addb
jbe
aad
loope
icebp
int
les
out
jae
pop
mov
push
sbb
and
inc
insl
std
sbb
cmpsb
sub
inc
jg
sahf
icebp
mov
cmp
mov
mov
adc
ja
iret
jge
mov
jg
les
pop
inc
shrl
out
jnp
mov
stos
xchg
movsb
mov
and
fwait
jle
lds
dec
mov
xchg
leave
push
jl
xchg
cmp
ljmp
mov
iret
pusha
in
sarl
int
pop
xchg
xor
add
scas
adc
inc
outsl
sbb
rorl
into
inc
and
add
ja
cmp
cwtl
jl
stos
loopne
pop
out
pop
out
js
xor
mov
rcrb
les
cmpsb
jmp
xor
call
mov
sub
push
pop
cmp
out
in
mov
gs
cmp
stos
outsb
movsb
mov
sub
sub
mov
movsl
push
insb
jb
and
mov
jl
push
setl
test
rcrl
shll
in
push
mov
xor
jle
mov
dec
mulb
aas
add
mov
add
push
cmpb
inc
sub
push
je
or
mov
xor
clc
push
ds
adc
push
shrl
mov
push
mov
cmp
stos
pushf
cmpsl
fs
mov
inc
sbb
dec
xorb
out
fsubrl
sahf
pop
xor
pop
inc
adc
mov
sub
jo
xabort
jl
jns
dec
aas
fldt
xorb
rolb
jl
int
ret
pop
icebp
pop
pop
imul
xchg
std
nop
adc
dec
mov
sub
jno
cld
mov
imul
jg
dec
dec
sbb
sti
push
test
pop
lcall
mov
movsb
lret
test
mov
push
push
scas
push
call
cmpsl
pop
or
xor
mov
mov
not
or
jbe
mov
into
in
into
mov
nop
xchg
xchg
cmp
pop
jnp
mov
sbb
mov
xchg
aaa
lea
xchg
test
call
insl
and
data16
push
or
inc
jmp
xchg
lret
dec
mov
into
cmp
pop
or
mulb
scas
fimuls
mov
xchg
cmpl
mov
mov
mov
mov
dec
dec
fldenv
xlat
cltd
in
sti
insl
jmp
inc
in
or
add
stos
cmp
data16
push
xchg
cmc
ljmp
or
test
xchg
mov
mull
in
add
jo
rolb
push
leave
addr16
push
mov
sub
sub
mov
fs
and
sub
jns
gs
mov
repz
fbld
jb
xlat
mov
hlt
icebp
xor
ljmp
ds
test
cld
ss
cs
idivb
adc
repnz
xor
mov
maskmovq
notl
pop
ds
lcall
scas
lds
or
imulb
gs
shrb
cmp
jae
mov
sub
les
ss
sub
inc
shlb
jns
cwtl
subb
out
repnz
stos
inc
mov
mov
xchg
movb
js
jnp
imul
mov
inc
pushf
adc
outsb
fs
out
jnp
xor
ss
cmp
add
pop
test
sbbl
inc
lea
jmp
decb
test
out
lahf
jl
lock
dec
loop
cmp
jl
fsts
and
xchg
jnp
inc
cmpsb
addr16
pusha
sub
adc
dec
mov
lret
mov
cwtl
mov
in
dec
pop
or
xlat
sbb
stos
jo
cld
fmuls
jne
sbb
add
je
fisttpl
cmpsb
cmp
sbb
mov
mov
shl
and
add
cmp
and
repz
aad
pop
ds
loopne
mov
adc
aas
and
mov
mov
movsb
pop
std
adcb
fcmovne
dec
lcall
popa
addl
sbb
sub
in
cs
aaa
aad
pop
ss
jl
dec
and
shr
pop
imul
dec
dec
lock
rorl
or
icebp
inc
call
movsb
inc
hlt
inc
jmp
sub
fidivl
jnp
xlat
jns
jae
imul
jbe
sub
adc
test
pop
into
aad
repz
les
out
dec
imull
out
cmp
and
mov
out
mov
andb
mov
ljmp
icebp
pop
sbb
repz
jno
ret
sbb
ja
jmp
sbb
scas
data16
idiv
cmp
clc
and
leave
cwtl
pop
mov
mov
xor
inc
test
mov
push
and
mov
mov
sub
pop
xchg
cmova
mov
rsqrtps
rcr
xchg
mov
hlt
sbb
data16
cmp
scas
imul
pop
adc
sbb
outsl
lods
and
dec
icebp
push
ja
andb
xchg
cmpsb
pop
mov
mov
cmp
in
jae
outsb
sub
je
enter
cmp
cmp
mov
mov
and
aam
hlt
jmp
stos
cmp
shrl
test
jne
xor
cli
pop
inc
mov
add
jmp
mov
sbb
pop
mov
lods
xor
xchg
sti
sub
in
mov
aas
or
mov
sbb
xchg
jbe
out
hlt
das
popf
fidivs
pop
xor
jecxz
pop
mov
daa
xor
ret
pop
mov
icebp
adc
jle
sbb
mov
decl
mov
cwtl
cmc
jecxz
jle
adc
inc
std
mov
mov
insl
and
mov
lret
rorb
sub
out
ss
repnz
scas
push
scas
jmp
loop
fs
xchg
pop
mov
pushf
inc
add
arpl
xchg
cs
mov
dec
lock
add
shlb
div
dec
enter
ja
mov
jnp
in
adc
imul
cmp
lcall
adc
xchg
push
ret
and
pusha
test
cltd
push
ffree
data16
in
inc
pop
fsubs
mov
sbb
or
jo
arpl
in
js
cmp
push
xor
and
shr
and
in
mov
cmp
je,pt
pusha
xchg
jb
push
orb
pop
mov
jnp
in
dec
mov
rep
icebp
mov
iret
inc
pop
xchg
push
sbb
in
xchg
xor
sbb
scas
addr16
sahf
lret
dec
mov
or
push
mov
mov
ljmp
shrl
cmp
xchg
fcmovbe
arpl
mov
scas
sub
in
dec
in
je
cltd
mov
jo
cmp
xor
scas
lahf
cld
in
adc
aam
pop
jmp
cwtl
mov
dec
dec
fldl
outsb
adc
jg
std
cmp
movsb
sub
mov
sbbl
imull
stos
test
push
icebp
and
jbe
cvtdq2ps
sbb
repz
jmp
xchg
xor
int
mov
popf
adc
push
jp
push
clc
push
mov
xchg
scas
lds
outsl
dec
inc
or
inc
or
or
lret
jo
xor
bswap
and
cltd
repz
loop
xchg
clc
dec
mov
test
outsb
mov
adc
negb
adc
sub
mov
push
add
outsb
inc
pop
mov
test
stc
push
loope
xchg
mov
ss
addr16
lock
sub
cmpsb
and
iret
push
dec
push
mov
cltd
mov
ret
mov
or
pop
inc
xchg
loope
jmp
sbb
push
leave
inc
adc
std
push
push
fldcw
call
add
or
push
mov
pop
fistl
les
push
xchg
xor
inc
loop
nop
int
add
adcl
jae
pop
test
in
jge
dec
xlat
pop
mov
mov
sbb
xchg
add
and
lock
jb
mov
shl
xchg
push
push
push
dec
xor
test
sub
pop
xchg
je
jns
insb
loop
ret
add
xor
popf
pop
dec
cmpsl
inc
adc
call
mov
xor
xchg
jnp
ds
shlb
jb
int3
test
arpl
xor
push
push
movaps
nop
cltd
int3
idivb
cmp
int
aas
push
rol
loop
push
insb
add
push
test
fbld
test
cmp
or
loopne
xor
dec
and
fadds
cmp
inc
sub
ret
sbb
jmp
or
adcl
xor
jne
loope
jle
mov
loopne
mov
scas
lahf
fsub
jbe
jp
xchg
sar
mov
lcall
divl
add
mov
repz
ret
mov
mov
test
neg
rcll
pop
imul
pop
call
aam
inc
ret
adc
flds
pop
pop
adc
jl
fcoms
insl
cmp
pop
adc
fstpl
or
arpl
xchg
shrl
int3
xor
cmp
stc
dec
mov
enter
lods
cmc
fisubs
movsl
loop
inc
mov
and
int
test
test
xchg
jge
hlt
mov
movsb
fwait
imul
test
or
lds
push
mov
xor
pop
inc
psadbw
mov
ds
jmp
xchg
sub
or
rol
add
push
sub
andl
sub
dec
fimuls
je
xchg
addl
mov
not
and
xor
mov
jno
inc
mov
test
lods
xchg
arpl
ljmp
insl
pusha
jg
ja
sbb
or
xor
cmp
jno
cmp
sub
cli
shl
xchg
dec
shrb
xchg
mov
xchg
inc
sub
jns
call
xor
lret
pushf
jg
cld
cmp
pop
adc
jg
mov
lcall
xchg
inc
pop
int
lods
push
fs
jae
nop
imul
or
sbb
push
adcl
jge
std
nop
scas
and
iret
adc
xor
cwtl
xor
xchg
xchg
pop
mov
movsb
mov
ljmp
cli
lds
sbb
outsl
sub
sbb
fcomps
mov
in
aaa
or
dec
sub
mov
adc
aad
sub
icebp
adc
push
repz
test
lahf
add
std
inc
outsl
lds
ret
loope
rclb
inc
mov
hlt
popf
aaa
faddl
xchg
cmpl
xor
xchg
sbb
je
aam
sub
nop
jg
das
sahf
xor
and
outsb
ret
loop
cld
test
rorb
stos
adc
scas
cmc
movsb
lods
cmovg
in
outsl
or
pop
loope
or
repnz
xorl
xchg
sub
push
shrb
std
pop
mov
push
jp
dec
fildl
ja
mov
or
fcompl
xchg
test
loop
add
add
or
push
pop
sub
dec
roll
pop
je
pushf
xchg
int3
xor
mov
cmp
int3
push
insb
shll
fnsave
add
cmc
pop
jmpw
mov
mov
cmc
mov
scas
negl
pop
lcall
inc
jnp
repnz
aaa
jae
fidivl
push
push
fwait
mov
js
sbb
mov
pushl
pop
fsubs
push
xchg
aas
out
mov
lret
xor
cmpsl
ja
jbe
inc
cmp
xchg
mov
loope
xor
popl
or
jmp
aaa
popa
mov
or
jp
nop
repz
ret
std
lea
cld
jno
or
rol
out
xor
lods
rcr
xor
pop
jns
mov
jmp
cmpsb
cmp
outsb
inc
xor
xorl
or
unpcklps
jb
mov
xchg
shlb
and
xchg
jne
push
mov
fnstenv
jo
xchg
pop
iret
fcoml
lds
xchg
insl
dec
push
fadds
int3
xor
sbb
dec
in
lret
jnp
adc
aad
pop
or
into
outsb
icebp
loop
mov
nop
push
movsl
imul
loopne
lock
lret
adc
and
xor
pusha
stos
jo
orb
mov
or
cmp
sub
fildl
lret
adc
and
xor
pusha
stos
jo
test
jnp
imul
sub
fildl
lret
adc
and
cmp
imul
lock
or
cmp
xor
dec
mov
in
cmp
sub
or
int3
int3
int3
int3
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
mov
cmpsb
xchg
testl
or
es
and
push
fs
inc
inc
data16
cmpsb
xchg
out
test
es
push
push
push
or
jbe
push
cmpsb
push
jbe
scas
mov
mov
into
out
cld
das
cmc
add
es
or
or
adc
xchg
leave
out
xchg
ret
movsl
cmp
pop
pop
push
fisttpll
jle
addr16
mov
aaa
lret
pop
out
cmp
pop
out
push
jl
outsb
mov
pmaxsw
es
es
push
jbe
sub
pop
add
rol
andb
addb
popa
xchg
fld
mov
inc
push
mov
mov
mov
pop
mov
xchg
or
out
sub
daa
stc
and
stc
cld
inc
or
scas
sub
dec
inc
or
cmp
fwait
loopne
pop
jae
mov
lretw
test
cltd
inc
shlw
in
and
pop
stos
adc
push
xor
inc
jbe
xchg
mov
mov
out
das
push
ds
push
das
pop
aas
outsb
dec
jle
dec
jbe
add
repz
xchg
mov
cmpsl
test
mov
jg
jle
arpl
jbe
add
fldz
movl
xchg
xchg
mov
inc
addr16
inc
inc
gs
or
add
xlat
lret
xlat
out
sarl
test
ss
es
push
ss
es
inc
push
jbe
data16
cmpsb
xchg
out
test
ss
es
push
ss
es
inc
push
jbe
data16
mov
sub
xchg
lock
ljmp
divb
lahf
insb
fdivrl
mov
pop
mov
mov
dec
push
sbb
std
dec
cmp
add
jbe
sbb
sub
subb
loopne
mov
ror
and
sti
xor
pop
cmpsb
popa
xchg
jmp
fxam
outsl
clc
sbb
js
rolb
out
rcrl
scas
mov
call
popa
cmpsl
dec
and
push
xchg
cmp
lahf
xor
push
sbb
sbb
cmp
mov
push
mov
and
sbb
adc
lds
aad
sub
int
sub
popf
mov
dec
inc
outsl
lods
stc
xchg
lahf
mov
adc
mov
std
das
lahf
aas
sub
mov
push
imul
fidivrl
push
inc
jg
xchg
movsb
add
testb
call
pop
add
dec
or
insl
outsl
icebp
adc
hlt
push
jp
jle
cli
sbb
sbb
pop
or
in
or
jns
mov
inc
lcall
lcallw
push
mov
jae
and
iret
inc
clc
stos
stos
dec
sbb
notb
push
stos
scas
pop
lds
std
pusha
xchg
push
imul
fimull
sbb
aad
aas
add
shlb
pop
sub
aaa
decb
sbb
fs
xor
mov
imul
fidivl
adc
enter
and
aaa
test
mov
push
mov
push
sub
jb
push
jmp
out
aad
sahf
cmp
pop
loop
mov
mov
jecxz
ss
inc
push
lods
mov
pop
or
mov
ljmpw
fiadds
outsb
add
insl
or
cmp
addr16
in
inc
or
fwait
and
adc
call
mov
in
cmpsb
les
mov
adcl
and
movsb
imul
loop
jnp
cmpb
dec
icebp
dec
jecxz
jecxz
and
dec
outsl
decl
or
sbb
lcall
je
mov
mov
cltd
push
pop
dec
mov
mov
cli
ja
inc
pushf
stos
js
pop
movups
test
lret
xchg
pop
mov
call
int3
mov
dec
cltd
iret
xor
psubw
jo
adc
ljmp
ljmp
dec
stc
xchg
xlat
fdivs
imul
mov
hlt
mov
sub
dec
notb
adc
or
inc
loop
jae
lahf
xchg
push
adc
aas
mov
xchg
scas
ss
idivl
jne
push
notb
push
test
and
fsubrp
inc
or
xchg
je
push
jl
in
clc
and
mov
in
mov
fwait
out
fisttpll
in
and
mov
jg
or
imul
mov
fstpl
ja
out
rolb
cmpsb
movsl
pushf
jne
mov
jg
decl
and
jmp
lcall
cmp
out
aaa
xchg
shll
adc
dec
jecxz
push
cmpsl
mov
add
mov
pop
adc
arpl
or
add
js
lret
fidivrs
mov
pop
fidivl
jle
mov
cld
adc
mov
mov
xor
or
or
icebp
push
mov
mov
adc
insl
pop
jne
pop
dec
sub
lret
aam
sbb
jnp
dec
pusha
popf
dec
ret
dec
enter
ja
jb,pn
sub
aam
mov
repz
fs
jp
mov
push
rorl
js
lcall
fxch
mov
inc
das
lods
xchg
lcall
mov
add
dec
loope
fldcw
xchg
out
mov
sbb
in
test
xchg
int3
cmc
mov
adc
sub
cmp
add
nop
js
jbe
dec
inc
ja
jmp
lock
and
mov
or
es
fcomps
jecxz
das
insl
out
orb
outsl
std
nop
clc
jmp
sbb
cltd
mov
icebp
sbb
mov
stos
popf
xchg
add
sahf
or
popa
stos
fimull
xchg
jns
jo
mov
inc
adc
mov
push
shll
aas
mov
sar
in
mov
mov
iret
mov
sbb
jbe
leave
js
leave
mov
mov
and
mov
or
push
adc
testb
bound
sbb
push
fnstenv
push
int3
cmp
sub
fs
xlat
and
stos
pushf
xchg
jl
mov
jns
call
and
pop
insb
adc
inc
cli
jge
sub
pop
push
jbe
out
arpl
cmpl
sbb
cltd
push
and
lds
adc
in
inc
cs
pop
cmp
fwait
cmc
xchg
inc
orl
les
jno
pop
imul
les
push
mov
and
sub
ret
mov
dec
xor
dec
aad
jg
push
xchg
rolb
outsb
push
orl
and
das
jns
enter
adcl
lock
and
fadd
xchg
shrl
mov
enter
sarl
popf
scas
popa
pop
xor
jno
shlb
fs
mov
fimuls
hlt
push
fwait
jne
loopne
leave
cmpsl
sub
add
adc
inc
xor
insl
cmc
add
xchg
mov
sub
mov
inc
push
mov
ss
push
pop
fidivs
cmp
pop
ja
andl
lahf
dec
lock
outsl
xor
or
loopne
mov
xchg
push
ficompl
stos
sub
repnz
sahf
xchg
rorb
xor
cmp
jo
mov
mov
cmp
adc
add
adc
push
fucomi
idivl
lock
jmp
sbb
dec
mov
rolb
mov
jb
cltd
add
jl
cmp
out
sbb
mov
cmp
aam
data16
pop
lret
jge
data16
ret
int
rolb
sbb
pop
add
loop
sbb
jo
scas
xchg
cwtl
adc
mov
add
arpl
orb
fs
lret
lret
lret
bound
xchg
mov
roll
arpl
shlb
mov
sub
insb
aad
repz
sbb
fisttpl
les
jmp
mov
and
push
sub
fwait
inc
dec
stc
enter
mov
push
sub
inc
cwtl
mov
lret
in
out
mov
sbb
mov
mov
cmp
pop
into
jmp
and
pop
jne
jmp
iret
mov
mov
fs
rorl
out
jmp
ret
loope
inc
dec
insb
jne
sub
cmpsb
lret
inc
sbb
pop
mov
xchg
or
mul
pop
jbe
mov
dec
sahf
sbb
pusha
loope
std
arpl
inc
movsb
cmp
push
std
cwtl
xor
fxch
in
adc
lea
mov
addb
aaa
mov
xor
mov
fs
leave
inc
sbb
jge
daa
or
imul
das
fdivrl
mov
jle
stos
mov
cmpsb
push
sbbl
mov
fwait
movsl
cmp
or
push
lret
outsl
cmp
or
pop
fldt
push
xchg
lcall
push
movsb
lods
mov
adc
leave
inc
xor
aam
and
inc
push
pusha
xchg
hlt
js
cmpsl
mov
xadd
adc
cmpsb
stos
sti
out
sbb
inc
mov
test
xchg
inc
sbb
out
sbb
sub
lods
stc
loopne
imul
ljmp
mov
mov
stc
cli
shll
lods
orb
insl
icebp
repnz
add
sub
sub
ds
inc
inc
dec
rcrl
sbb
bound
inc
mov
jnp
jno
bound
es
and
cmp
sahf
fwait
adc
xlat
fsts
jnp
sub
scas
ja
into
pop
xor
xchg
add
rol
sbbb
adc
shrl
pop
int3
jg
aas
add
xor
sbb
dec
fldcw
lods
adc
sbb
hlt
cmc
outsb
fimuls
fs
pop
inc
jbe
xor
bound
or
inc
lea
pushf
cmpsb
hlt
cmp
pop
cmp
shll
adc
cmp
push
jl
fucom
inc
insl
mov
leave
cwtl
dec
dec
ror
shll
xor
pusha
xchg
stos
inc
orb
mov
je
aam
cmp
insl
inc
push
testb
out
xchg
cmp
cmc
jbe
fidivrs
jne
dec
sbb
or
pop
mov
fildl
daa
cld
add
call
pop
inc
mov
push
sti
fwait
lea
mov
cmp
fdivrs
addl
push
push
hlt
mov
dec
mov
les
aad
movsl
xchg
negb
mov
rclb
sub
push
in
jecxz
test
lret
or
aad
pop
int3
mov
arpl
arpl
in
gs
inc
cmp
jp
cld
jo
pop
mov
jecxz
add
enter
repnz
push
inc
xchg
inc
cmpb
inc
ds
and
adc
push
pop
shr
inc
mov
fldl
das
push
ficompl
xchg
mov
or
push
dec
or
sbb
lahf
cmp
push
mov
test
popa
xlat
bound
fistpll
jmp
cmp
sarl
and
in
inc
xlat
mov
divl
xchg
enter
mov
sbb
xlat
outsb
fs
push
or
lds
in
in
mov
inc
mov
iret
clc
shrl
push
mov
movsb
mov
shr
adc
dec
or
imul
cmpb
mov
adc
mov
sbb
cmp
pop
or
or
inc
or
fbstp
js
data16
lret
push
lea
bound
movsl
xchg
mov
mov
or
dec
jb
adc
xchg
shlb
pop
fdivr
cli
pop
xor
and
dec
xrelease
jb
mov
repz
rorb
hlt
mov
ss
and
mov
adc
sbb
mov
nop
or
xchg
sub
je
jnp
loopne
sub
pop
sbb
sbb
push
stc
mov
sub
inc
adcl
loopne
cmpb
cmpsl
mov
push
xchg
mov
fildl
push
fisubrs
adc
xchg
das
nop
shlb
inc
int
std
shrl
test
testl
fsubrl
out
outsl
mov
pop
add
cmp
pushf
imul
test
rcr
sti
nop
inc
cmc
mov
adc
out
mov
mov
mov
jns
loope
mov
ljmp
aaa
mov
cli
setne
and
push
stos
fidivrs
call
adc
or
jecxz
adc
dec
imul
dec
dec
lret
cmp
xor
jge
and
imul
mov
mov
pop
adc
push
shlb
xchg
jmp
sbb
idivl
data16
data16
push
fadd
iret
and
or
mov
stc
sahf
xchg
movsb
dec
and
xor
stos
mov
or
mov
dec
icebp
push
sbb
pop
lret
inc
xor
nop
xchg
mov
sub
cmpb
sbb
xor
xchg
bound
mov
arpl
dec
pop
push
xor
mov
xchg
inc
stc
insl
mov
jo
mov
pop
adc
sbb
fcmove
data16
scas
pushf
and
dec
jno
or
jae
pop
sbb
adc
lock
mov
hlt
ret
lods
cwtl
push
or
test
jb
clc
sub
xor
sarb
mov
in
imul
add
jns
mov
mul
sbb
cmp
aas
sub
loopne
xor
jp
jno
test
dec
cld
ss
loop
loop
push
xor
pop
test
psubb
into
xchg
rolb
movsb
cmpsl
dec
mov
sub
dec
cmp
das
cmpsl
adc
fld1
cmc
pop
cmp
lret
popf
je
cmpsb
nop
mov
xor
mov
sub
sub
sbb
mov
das
or
jp
mov
pusha
mov
inc
xchg
inc
xchg
js
aaa
setns
adc
sbb
push
test
clc
cwtl
roll
dec
ja
push
mov
inc
ds
xchg
rorb
push
sbb
sub
inc
mov
repnz
add
inc
mov
push
dec
mov
dec
inc
popf
enter
stos
test
sbb
dec
mov
add
fsubrp
pop
xchg
mov
cmc
stos
sbb
out
imul
in
mov
stc
jbe
mov
mov
int3
cli
pop
mov
lods
out
dec
clc
inc
dec
push
lret
adc
aas
dec
leave
pop
aad
out
jge
inc
add
jecxz
mov
cmp
movsl
rorl
imul
pop
clc
fildll
inc
les
mov
sbb
mov
loope
mov
hlt
add
xchg
or
mov
mov
inc
fdiv
xchg
xor
fbld
cmpsb
or
loope
sbb
or
xrelease
mov
orl
pop
mov
mov
cwtl
mov
aas
lret
adc
jl
mov
popa
jo
push
push
push
ret
jg
jns
fistpll
push
leave
jle
jb
push
mov
js
cltd
jnp
outsb
dec
jnp
inc
push
sar
dec
aad
mov
mov
loopne
add
add
push
in
mov
test
mov
adc
jae
roll
sub
jge
fmull
mov
mov
gs
mov
pop
je
std
push
repnz
dec
inc
filds
gs
les
adc
mov
lock
ljmp
pop
and
jle
jmp
inc
xchg
pop
adc
cs
data16
inc
pop
xlat
or
or
ficompl
xor
or
and
das
insl
push
xchg
aad
shll
or
fldln2
and
in
jmp
and
cli
rcrl
jae
mov
aas
mov
notb
sbb
cmp
push
xor
enter
cmp
sub
sub
pop
push
cli
sbb
mov
js
leave
mov
scas
andl
ja
ds
in
outsl
dec
stos
mov
out
inc
scas
in
pusha
jp
cld
inc
add
sub
test
xchg
cmp
and
pop
mov
fcompl
sub
cmp
test
mov
inc
cmp
divb
adc
and
dec
cltd
mov
jl
stc
sbb
jle
mov
bound
imul
cltd
and
data16
push
out
xchg
mov
ss
out
ss
and
cmp
test
ljmp
sti
sub
out
icebp
addr16
das
dec
insl
cmpsb
push
rcll
push
inc
sub
jns
mov
fsts
into
push
push
imul
fimull
mov
out
dec
sub
iret
cli
fneni(8087
into
xorb
loopne
inc
add
out
push
xlat
and
pop
sbb
push
incl
cld
jns
stc
push
je
mov
sahf
jle
fwait
xchg
jb
fcoml
es
insl
push
mov
mov
jns
mov
lahf
imul
xchg
mov
mov
ret
cmp
and
cmc
mov
sub
mov
rclb
lret
out
pop
scas
and
cmpsl
adc
mov
pop
shr
xchg
clc
xor
cmp
pop
push
lret
push
dec
adc
push
nop
fcmovu
sbb
dec
je
into
je
push
push
nop
int
in
sub
sarl
data16
clc
cli
xchg
cmp
out
pushf
push
in
sub
push
jle
mov
movsb
lret
cld
dec
push
mov
int
scas
imul
bnd
dec
or
sub
testl
sbb
sbb
pop
out
xchg
adc
lret
fstpt
test
add
jecxz
jae
xchg
mov
adc
adc
fwait
sub
fistpll
jge
pusha
dec
mov
pop
idiv
sbb
in
xchg
iret
mov
lea
cmp
sbb
scas
dec
in
jge
sub
jno
daa
lret
mov
mov
imul
or
push
pop
rcr
iret
fisttps
fcmovnu
jb
mov
xchg
push
sub
cpuid
enter
js
sub
cmc
mov
ret
fs
pushf
cmp
fwait
sti
pushf
pusha
popf
and
fs
xchg
inc
arpl
xor
xchg
mov
ret
inc
inc
gs
push
rorl
xchg
js
mov
insb
pop
push
jmp
jnp
dec
test
pop
cwtl
mov
xor
mov
inc
sbb
out
cmp
fildll
std
movsb
add
jp
pop
insb
test
push
rcl
push
mov
jns
jge
ret
ss
clc
lock
mov
xor
subb
mov
pop
mov
cmc
and
pop
ret
jno
and
push
jo
in
jp
je
into
pop
fcoml
test
dec
jl
pop
dec
xor
inc
sub
imul
mov
inc
adc
inc
lahf
mov
pop
dec
fldt
cmp
insl
xchg
mov
jne
jb
popf
ss
mov
lods
ljmp
in
inc
pusha
inc
ja
fcom
xorb
cwtl
ret
push
fsubp
mov
add
mov
cltd
xchg
fs
bound
in
movsb
pop
test
hlt
push
daa
and
lea
dec
dec
mov
xor
add
mov
std
mov
movsl
repz
push
lods
ds
and
imul
lods
push
subl
js
daa
sti
fistpll
pop
repz
lret
and
aad
push
mov
out
in
mov
jno
arpl
sbb
mov
data16
inc
stos
les
ss
sub
pop
or
jle
mov
lret
mov
pop
arpl
sbb
loopne
std
iret
movsl
and
sub
cmpl
mov
rclb
sahf
in
dec
pop
inc
mov
push
aaa
fucomip
pop
into
test
jg
scas
lret
fdivrl
hlt
pop
fisttpll
jg
sahf
pop
scas
push
loope
jmp
sub
push
add
inc
pop
inc
cmp
adc
fnstsw
test
loope
jmp
mov
add
mov
and
sarl
mov
mov
fwait
hlt
gs
fstpl
inc
aaa
test
cltd
addr16
nop
mov
sarb
xor
push
loopne
lret
add
insb
push
inc
repz
xlat
mov
ret
or
add
popf
inc
or
movsb
fstpl
jne
cmp
jge
mov
inc
mov
pop
stos
fsubr
ja
xor
dec
cmp
mov
mov
scas
rol
pop
mov
stc
shrb
push
pop
sbb
out
repnz
cli
ds
jbe
in
insl
in
cltd
ljmp
push
sti
mov
inc
movsb
mov
inc
inc
in
es
pop
jecxz
test
ret
jno
pushf
int
loope
cmp
pop
adc
dec
test
aaa
iret
sahf
lods
pop
test
add
test
inc
jecxz
setae
mov
xchg
je
xor
je
rcrl
sbb
cmp
jmp
cmp
push
inc
mov
mov
dec
pop
mov
mov
xchg
fsubs
test
loope
dec
arpl
enter
inc
inc
and
call
xchg
test
pushf
jns
or
stos
mov
test
adc
fcoms
sbb
pop
push
fs
xor
inc
jg
mov
pusha
push
push
out
sub
scas
dec
imul
popa
xor
xlat
call
dec
sti
nop
xchg
mov
stos
stos
jae
fdivrl
stos
xor
inc
outsb
sub
sbbb
ret
mov
sub
mov
mov
jecxz
sar
pop
xor
sbb
xchg
jl
shl
ret
mov
loope
dec
mov
inc
fsubs
mov
lods
sbb
mov
add
pushf
jecxz
cmp
fistpl
loope
inc
in
inc
cmp
data16
rclb
push
jnp
push
mov
pop
stc
es
test
add
push
int
fsubrs
ret
loopne
out
in
insb
lcall
loop
stos
mov
outsl
jge
negb
push
mov
scas
inc
scas
jmp
repnz
mov
lock
mov
sbb
movsb
adc
shll
dec
lret
add
inc
sbb
pop
cmpsb
shll
les
mov
pop
xchg
xor
xlat
jg
lods
hlt
int3
and
inc
outsb
orl
mov
mov
nop
ss
fistpl
scas
or
dec
test
aaa
pop
imul
add
mov
push
adc
ret
xorl
mov
lock
and
pop
js
js
mov
lret
xor
pop
mov
fisttpll
push
xchg
adc
test
mov
sbb
cmpb
les
inc
cwtl
jmp
imul
mov
notb
add
push
jo
fxch
xchg
xchg
adc
lods
xchg
mov
insb
mov
sar
pop
adc
or
ljmp
mov
repnz
dec
rorb
adc
inc
test
inc
stc
aam
and
iret
test
dec
inc
aaa
jae
test
and
xchg
and
cli
mov
mov
jmp
adc
testl
dec
movsl
push
in
add
cmp
stos
fldl
mov
addr16
mov
notl
in
jnp
lret
and
cmp
add
mov
call
xchg
imul
mov
int
test
mov
push
pop
imul
aad
nop
xor
lds
ljmp
mov
es
mov
inc
in
mov
pushf
cmp
insl
std
jns
repz
or
push
inc
enter
les
add
xchg
std
fisubrs
jp
jmp
es
sub
xor
sub
cmp
mov
adc
popl
push
and
out
xchg
movsl
dec
movsl
mov
xchg
sbb
cmp
lahf
notl
mov
or
loopne
mov
aaa
gs
filds
clc
jmp
inc
adc
shrb
cmp
dec
imul
mov
adc
inc
xor
cmp
lret
jne
sbb
sub
cmpsb
not
out
test
ss
es
push
ss
es
inc
push
jbe
data16
cmpsb
xchg
out
test
ss
es
push
ss
es
inc
push
jbe
data16
cmpsb
xchg
out
test
ss
es
push
ss
daa
jbe
addr16
push
ja
data16
movsb
xchg
out
push
testb
push
fldcw
fsubrp
mov
int3
int3
int3
int3
int3
mov
cli
mov
repnz
in
lcall
push
jp
push
sbb
pop
cmp
fcmovu
scas
lret
mov
lcall
ds
sub
push
push
sbb
pop
js
sub
ficompl
cli
push
ljmp
into
stos
pop
repnz
push
pop
sbb
or
sub
xchg
sahf
xchg
out
cli
pop
out
imul
sbb
out
cmp
outsb
sbbl
push
dec
push
pushf
or
push
mov
pop
mov
jnp
out
outsl
xor
pop
push
jnp
sub
jmp
cwtl
xchg
pop
scas
pop
cli
std
inc
push
mov
sub
xchg
lds
iret
dec
jnp
ljmp
into
push
aas
subl
cmp
lds
inc
cmp
adc
push
scas
inc
sub
cmpsb
lods
sbb
cmp
outsb
mulb
dec
xor
add
pop
pop
and
sti
dec
or
push
imul
cmp
sub
lret
mov
sbb
push
dec
push
sbb
cmp
xlat
mov
lret
testb
hlt
into
cli
ds
jge
jnp
imul
add
cmp
imul
lret
enter
cwtl
xchg
rorb
stos
pop
and
sbb
pop
jns
popa
aaa
pop
rclb
fisttpll
fidivrs
cs
push
jp
push
sbb
pop
cmp
mov
cli
mov
lcall
ds
cs
push
jp
push
sbb
pop
cmp
mov
dec
dec
lods
xor
jnp
mov
adc
xor
fildl
push
sbb
pushf
cli
inc
sbb
jno
pop
js
mov
xor
adc
sub
xorl
pop
and
inc
idiv
popf
lods
sbb
jg
adcb
insl
cmp
scas
jbe
dec
int3
mov
adc
xor
nop
add
sub
int
jle
sub
inc
jl
mov
testl
push
xor
aam
mov
jns
jle
xlat
adc
mov
xchg
inc
sbb
add
xchg
pop
ret
adc
inc
and
arpl
push
repz
pusha
and
aad
push
popa
iret
sbb
sbb
mov
jo
jp
and
xchg
cmp
fwait
pop
push
and
iret
xor
push
add
add
hlt
lret
ds
jne
cmp
xchg
repnz
imul
js
pop
or
stos
cmpl
sbb
sbb
cmp
pop
pop
pusha
loope
cmp
jae
sbb
mov
flds
cltd
iret
sarl
dec
nop
jl
jnp
shrl
pop
scas
cs
push
push
nop
add
adc
dec
popf
sub
jecxz
xchg
cmp
icebp
shll
jecxz
inc
mov
pop
fldcw
movl
inc
dec
add
inc
dec
sbb
xor
fbstp
mov
mov
mov
cmpsb
pop
add
inc
jge
bound
jl
je
or
sahf
fsts
and
cmp
jle
adc
jae
loope
in
outsl
adc
aam
in
lods
loope
loopne
and
outsl
mov
jno
clc
in
std
jnp
jmp
xchg
sub
loop
sbb
inc
add
adc
push
imul
sub
cld
aad
xor
popf
push
lods
or
test
fnstcw
xlat
pop
cwtl
or
mulb
inc
lret
pop
pop
insb
shrl
clc
mov
and
out
push
sbb
cmp
movsl
adc
mov
out
mov
ds
fcoml
dec
outsb
cmpsl
dec
cs
cmp
mov
and
dec
addr16
das
shr
push
jne
mov
movb
ljmp
test
jecxz
adc
sarb
dec
ret
scas
push
test
aam
inc
dec
push
and
pop
pusha
mov
inc
out
xchg
xor
adc
mov
xor
int
popf
dec
je
push
cmp
ud1
jmp
outsb
aas
push
lahf
mov
pop
ss
cmpsb
fisttps
jne
stc
jo
insl
jne
out
rcr
add
cwtl
mov
data16
push
push
pop
jmp
stc
push
in
pop
xchg
inc
and
adc
or
mov
pop
xorb
mov
sub
mov
ds
jns
and
cmpsb
sub
imul
imul
out
xchg
cmp
ja
jp
or
jnp
push
into
sahf
addl
xchg
xor
ja
orb
fs
mov
adc
fidivl
loope
nop
ss
scas
stc
rcl
and
or
repnz
iret
imul
push
pop
bound
add
adc
adc
in
push
mov
pop
mov
shr
pop
mov
lahf
fildl
xor
pusha
stc
addr16
jle
add
cld
dec
mov
sbb
fs
fwait
sbb
sbb
outsl
cmpsb
cmp
dec
mov
dec
data16
xor
pop
xor
testl
sub
add
iret
adcb
and
lcall
push
cld
pop
sub
fiadds
lods
jg
lret
mov
mov
cmp
mov
jbe
add
pop
lods
neg
enter
int3
mov
lea
inc
adc
repnz
push
das
jnp
mov
cld
sbb
mov
aas
addr16
std
out
cmp
fists
and
fmull
and
aad
jo
clc
into
dec
pop
data16
sub
mov
xlat
andl
push
lret
int
xchg
bound
fcmovnu
outsb
pop
mov
push
cmpsl
push
mov
lods
in
sti
jg
pop
cwtl
sbb
or
xchg
dec
scas
popa
test
cmp
push
orl
and
dec
les
pop
pop
imul
mov
mov
loopne
stos
mov
std
mov
inc
mov
mov
xchg
lahf
push
sub
pop
pushf
cmp
ss
xchg
mov
nop
movsl
pop
mov
jne
jne
mov
xchg
lock
sbb
roll
xchg
xchg
iret
push
cmp
std
mov
pop
mov
iret
aaa
adc
adc
ljmp
push
inc
jp
es
jge
push
add
xchg
test
sub
bound
divb
repz
mov
fcoml
arpl
jl
pusha
lock
pop
inc
jo
jle
jo
ret
fdiv
addb
pop
pop
sbb
xchg
int
adc
das
push
cwtl
shrb
adc
mov
lea
sub
cmpsb
mov
andl
insb
popf
mov
outsb
sbb
or
lds
xchg
mov
mov
mov
sub
add
adc
fildll
int3
and
or
fisubs
jl
pop
addr16
cmc
fmuls
jns
push
cmp
lds
jae
rorb
stos
fldl
add
js
push
lods
sbb
mov
xor
adc
cmp
sbb
stos
mov
das
push
pop
in
cmp
test
movsb
lea
imul
in
adc
dec
sub
push
push
dec
push
sbb
or
cmp
cmp
dec
mov
jecxz
fidivl
sbb
mov
xchg
pop
jo
xor
push
int3
sahf
loop
sub
sbb
xor
mov
cmp
jp
pushf
lods
xchg
out
test
jmp
loopne
or
shlb
bnd
or
cmp
fsts
sub
repnz
insl
data16
sub
jae
mov
pcmpgtw
mov
clc
ds
and
dec
testl
lret
shlb
shll
push
jg
mov
adc
adc
jnp
xor
aam
fildl
jo
repz
inc
fcmovu
insl
shlb
fsubs
or
xlat
xor
fwait
inc
rcrb
and
xlat
sbb
into
mov
pop
in
loopne
add
icebp
dec
outsb
stc
ficompl
push
icebp
or
hlt
ror
xchg
inc
pusha
fimuls
loope
fwait
lock
pop
leave
mov
cmp
gs
cmc
xchg
cmpsl
in
push
mov
mov
imul
xor
lods
cs
sarb
and
mov
mov
pop
fstl
pop
cmc
xor
stos
cmp
xor
aam
mov
push
cmovo
mov
and
stc
pop
outsb
xchg
pop
ficoms
mov
cmp
xlat
xor
mov
repnz
sbb
pop
stos
push
repz
xchg
dec
jo
adc
mov
mov
mov
pop
xchg
enter
movsl
pop
cmp
pop
or
inc
popf
mov
fs
xchg
aam
arpl
jmp
xor
das
mov
dec
inc
ret
jno
into
jo
push
leave
ds
in
xchg
je
mov
cwtl
fcomps
jp
mov
jge
mov
or
add
mov
xchg
es
inc
xor
clc
pop
clc
add
mov
xchg
mov
sub
xchg
push
scas
and
inc
mov
movsb
outsl
shlb
jb
sub
cwtl
cmpsb
sbb
ljmp
xor
xchg
stos
xor
xchg
outsb
test
sub
sar
jle
leave
add
repz
test
out
push
push
das
out
es
sub
ss
sub
dec
jo
dec
or
and
mov
into
sbb
out
jp
insb
fbld
xchg
sub
push
movsl
in
pop
mov
mov
clc
inc
call
in
cwtl
and
dec
scas
dec
insb
gs
xor
inc
mov
and
aad
adc
jno
and
add
cltd
jns
dec
daa
lahf
lret
dec
mov
rcr
orps
or
mov
stc
push
cmp
pop
leave
mov
clc
shrl
lods
mov
dec
cltd
rcl
jl
int
pushf
orl
push
and
push
cmp
sub
js
loope
adc
stc
lea
or
mov
stos
and
fildll
stos
aas
mov
cmp
jg
in
jne
and
cmp
clc
inc
jmp
dec
dec
fldenv
test
aas
insl
and
cld
push
push
lahf
fs
mov
cld
jmp
sub
in
insl
in
insl
lcall
add
in
push
mov
ss
push
mov
iret
test
aam
mov
dec
rclb
cmpsb
std
jge
icebp
or
cltd
mov
in
imul
adc
inc
xchg
fs
jnp
out
call
leave
int3
cmc
ret
lods
pop
out
popl
out
sbb
jmp
dec
add
flds
loopne
add
push
andl
fldcw
add
mov
pop
fwait
or
cld
lock
std
push
or
inc
inc
fdivl
adc
enter
push
and
xchg
in
xchg
stos
xchg
pop
pop
out
add
mov
add
jp
in
xor
xor
fdivrl
movb
fstpt
and
pop
sbb
cmp
jne
icebp
inc
cmpsl
mov
andl
out
sub
popa
mov
mov
cmp
arpl
and
std
mov
mov
call
lcall
mov
arpl
jl
cmpl
sbb
sub
jmp
jb
ret
sbb
test
lahf
call
pop
rol
mov
mov
push
jp
clc
fisttps
insl
rcr
pop
subl
outsl
rclb
adc
mov
jl
ret
cmpsb
jae
adc
repz
shlb
lea
mov
fildl
je
pop
std
push
jo
xor
inc
push
xor
inc
inc
or
xor
sub
scas
and
adc
cmp
mov
pop
es
adc
pop
cmp
mov
outsl
cs
ret
xchg
push
imul
jmp
je
popf
adc
lods
ret
inc
mov
pop
aad
leave
nop
push
inc
cmp
les
addr16
xorl
jmp
iret
cmp
arpl
push
push
out
xor
adc
cld
inc
sbb
in
xchg
daa
in
push
jp
pop
sbb
decl
and
adc
or
xchg
aad
lea
movsl
cmpsb
out
sar
lret
or
dec
scas
leave
les
jo
sbb
out
mov
shrl
pop
popa
dec
inc
sub
cmp
lods
lret
xor
jg
out
and
jno
shlb
fwait
fs
cmp
lods
add
mov
mov
div
push
aaa
int
dec
fxch
rcrl
lahf
popf
jge
rcrb
ja
lock
scas
sub
cli
sbb
ja
jecxz
rcrb
das
pop
call
mov
addr16
popa
and
mov
popf
add
gs
and
push
fsubr
push
pop
xor
mov
xor
pushf
nop
and
dec
sub
fidivrl
call
sub
stc
lods
movsb
inc
cld
fnsetpm(287
mov
outsl
test
xor
aam
jnp
lcall
jns
in
mov
sbb
sbb
fcmovbe
mov
or
inc
mov
push
add
lds
stc
lds
mov
lcall
jle
cmp
push
imul
jp
inc
aas
cli
add
addb
jmp
dec
icebp
arpl
lds
ret
jge
call
jnp
mov
xor
or
sub
sbb
push
adc
sub
xor
out
cli
mov
movsb
mov
xor
dec
sbb
orl
pop
push
mov
push
or
cli
cmp
mov
sub
bound
lea
jns
pop
test
push
mov
call
dec
ret
add
jno
lea
mov
sbb
gs
adc
pop
cmpsl
and
xor
addr16
jbe
adc
imul
das
fsubrs
fdivp
sbb
pusha
into
dec
es
pop
fmuls
xchg
push
add
subl
pop
jp
stos
lea
xor
dec
cmc
into
or
sbb
sub
ljmp
into
jcxz
mov
aam
jbe
lret
int
cmp
repnz
sub
dec
lahf
sub
cltd
mov
pop
ja
sub
xchg
add
pop
sbb
in
aaa
sbbb
out
adc
rolb
pop
xchg
fidivs
mov
clc
mov
xor
dec
test
pop
sbb
pop
icebp
push
adc
push
test
xchg
inc
adc
ds
out
loop
or
jbe
push
divb
lret
lret
xchg
clc
sub
sti
mov
mov
outsl
jecxz
inc
repnz
fsubrp
das
sti
aaa
scas
jnp
pop
rorl
inc
sub
test
lahf
xchg
test
aaa
fwait
pop
rcrl
rolb
jae
push
test
test
enter
leave
xchg
call
pop
jmp
rorl
ret
lret
pop
mov
popa
aad
ljmp
jg
mov
mov
sbb
push
aaa
mov
pop
insb
cli
loope
cs
pop
mov
mov
pop
movsb
ds
cmp
lock
test
das
sti
movsb
xor
imul
sub
shr
out
jmp
stos
push
outsl
jg
out
xchg
lock
mov
stos
int
mov
fbld
inc
out
cwtl
imul
jp
sbb
mov
sarl
call
popa
lods
out
jo
xchg
fbstp
inc
lret
clc
dec
lock
mov
adc
out
sub
ret
fwait
add
out
test
out
xor
sub
xor
repnz
out
div
lret
xchg
icebp
dec
lret
mov
adc
mov
jbe
test
xlat
sti
fcoml
roll
add
xchg
push
inc
andl
push
sbb
xor
inc
jb
dec
xor
adc
push
push
xchg
aaa
js
or
adc
inc
outsl
xlat
pop
xor
ret
inc
repz
shlb
leave
insl
shrb
cmp
mov
mov
std
loope
and
cltd
ret
inc
lcall
ljmp
or
mov
mov
mov
dec
inc
xor
mov
sub
test
dec
push
icebp
clc
clc
fsubl
or
pop
sub
mov
out
jg
pop
xlat
test
insl
push
mov
xlat
adc
ficompl
popa
fmul
adc
outsb
push
enter
add
push
push
aad
xchg
inc
repz
xchg
fdivr
sbb
mov
scas
inc
imul
in
pop
pusha
bound
movsl
andb
int3
push
adc
inc
cmp
pop
incl
mov
icebp
data16
shll
pop
jl
xchg
sub
inc
and
jne
jge
dec
and
or
into
mov
add
lcall
jg
xorb
mov
cmpsl
fbld
je
inc
mov
inc
imull
pop
imul
push
xchg
sub
push
push
mov
jle
test
test
ljmp
lea
pop
mov
mov
pop
rol
fdiv
cmpsl
out
stos
inc
inc
insl
out
addr16
mov
aad
out
cmc
cmp
dec
jne
sub
xor
and
outsb
mov
movsb
clc
jns
or
in
lea
mov
cltd
adc
lret
dec
xor
xor
out
sub
insb
pop
xor
push
or
sub
pop
mov
add
cwtl
mov
jecxz
out
stos
push
nop
lods
fwait
pop
xlat
add
neg
cmp
push
sbb
mov
sbb
rcll
cmc
dec
scas
sbb
mov
fdivs
add
pop
roll
cld
sbb
les
clc
not
dec
popf
movsb
pop
ja
dec
pop
xor
push
into
popa
push
mov
pop
xor
popf
enter
xchg
mov
aam
scas
shrb
pop
or
and
jns
loope
sub
push
mov
cwtl
jp
mov
add
jecxz
inc
call
adc
ja
movsl
mov
rolb
pop
pop
in
filds
imul
mov
inc
jecxz
dec
loope
mov
in
cld
xchg
clc
gs
pcmpgtd
pop
mov
inc
sarl
jp
dec
lods
pop
xlat
sub
stos
mov
mov
adc
push
in
xor
mov
mov
rcrl
dec
jg
dec
mov
out
add
imul
mov
inc
cld
int3
cmpb
mov
out
loope
shlb
push
inc
mov
pop
sbb
lods
js
lcall
lods
sbb
xor
popa
xchg
int
xchg
mov
jbe
mov
push
push
addb
xor
cmpb
iret
shrl
fcomp
mov
aam
adc
inc
ljmp
test
jo
pop
jl
push
leave
movsb
enter
fucomi
sarl
jmp
xlat
imul
mov
or
in
push
aas
and
sbb
push
adc
dec
sbbl
jnp
mov
dec
or
je
cwtl
faddl
adc
inc
rcrb
sbb
cmp
cmp
pop
jno
sub
cmpsb
sub
mov
lods
add
mov
addr16
and
les
loop
out
jne
and
es
sbb
outsb
adc
push
ljmp
popa
imul
lds
lret
sub
or
iret
in
xchg
test
and
cmp
pop
inc
test
sbb
xor
fs
push
push
or
iret
xchg
div
pop
mov
pop
mov
fnstsw
int
pop
call
cmp
push
out
mov
jns
and
add
adc
sbb
xchg
xchg
cld
mov
adcl
inc
rol
mov
mov
pop
push
pop
ljmp
sub
notb
sbb
mov
and
es
xor
ds
pop
cmp
je
jnp
dec
sbb
push
insl
push
lret
pop
pop
repz
jle
pop
xchg
subb
dec
add
mov
psrlw
pop
sub
in
sbb
mov
imul
push
and
mov
fisubl
mov
xor
lahf
test
sbb
inc
pop
push
adc
lods
dec
mov
out
add
clc
dec
mov
jo
jl
lods
arpl
inc
insl
mov
or
cmp
add
in
jno
xchg
adc
jp
loope
mov
xchg
pop
test
mov
notb
cmp
push
add
adc
jbe
ja
xchg
movsl
jl
popf
popf
cmc
clc
hlt
cmp
push
cmp
in
xor
mov
adc
mov
push
addl
cmp
pop
arpl
mov
hlt
dec
fwait
rcrb
loop
mov
fnstcw
inc
cmp
push
adc
and
cmp
iret
sub
clc
cmpsl
pop
cmp
dec
dec
adc
push
inc
sbb
into
ror
xor
dec
adc
orb
sarl
sbb
call
mov
out
inc
push
rcrl
xor
scas
insl
jo
test
pop
inc
mov
or
pop
jle
lods
push
aam
sbb
and
loope
insl
pushf
loopne
add
jns
loop
popa
ljmp
mov
loop
pop
aad
imul
nop
xchg
into
test
inc
push
and
xor
adc
cmp
leave
loope
dec
negb
sub
mov
xchg
lods
hlt
xor
nop
std
test
mov
in
aaa
insb
data16
aad
das
mov
xchg
add
mov
lds
add
lcall
xor
pop
pop
and
inc
iret
and
add
sahf
fcompl
sub
imul
bnd
call
pop
js
stos
loopne
repz
inc
add
sbb
pop
ja
pop
jnp
mul
or
xchg
nop
mov
push
aaa
ljmp
xor
push
je
scas
or
inc
xchg
repz
sbb
cmp
aas
sub
test
mov
imul
clc
in
iretw
sbb
cmpsb
arpl
jbe
enter
lods
shlb
stc
xchg
xchg
push
lods
popf
push
mov
push
mov
cmp
lods
fimull
mov
push
mov
repz
pushf
cwtl
in
adc
gs
mov
insb
iret
pop
aas
test
jl
push
add
or
scas
gs
orps
xor
xchg
lcall
aas
add
and
scas
lea
xor
inc
sarl
jecxz
in
sti
ljmp
push
cwtl
cmp
repnz
adc
shlb
ljmp
test
insb
sub
inc
mov
in
pop
add
push
iret
inc
aas
dec
xchg
xchg
cli
jo
pop
mov
aad
push
movl
testb
or
jno
add
push
sbb
arpl
es
push
push
pop
clc
sbbb
les
loop
add
fimull
and
add
inc
lock
xchg
aad
aas
mov
pop
jl
filds
ja
lret
mov
out
sarb
fs
inc
add
mov
xchg
xchg
lds
and
fistl
mov
aam
ret
gs
mov
rclb
ficoml
xor
and
cmp
jno
cwtl
xor
mov
sub
and
inc
or
test
mov
ret
and
mov
testl
pop
aas
clc
pop
pop
adc
jmp
mov
xchg
outsl
push
push
insb
fs
mov
outsl
push
fucomip
mov
stos
pushf
ret
jnp
je
pop
ficoml
lds
addr16
add
cmpsb
add
xchg
sbb
inc
mov
adc
xchg
xor
fdivrs
pop
ret
xor
std
push
in
adc
dec
cmp
xor
fisttps
sub
outsb
arpl
and
fsqrt
mov
lcall
ds
cs
push
jp
push
sbb
pop
cmp
mov
cli
mov
lcall
ds
cs
push
jp
push
sbb
pop
cmp
mov
jp
ljmp
push
stos
fisubrl
dec
out
jp
push
sbb
pop
cmp
lret
scas
ljmp
dec
stos
ds
shl
mov
push
sbb
mov
int3
int3
int3
int3
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
mov
push
push
call
mov
call
push
push
pushl
mov
pushl
pushl
call
mov
push
push
pushl
call
mov
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
call
push
mov
call
xor
leave
ret
in
stos
cld
mov
popa
cmpsl
into
cwtl
loop
xchg
fldt
cmp
sbb
cmp
or
sbb
in
stos
cld
mov
lods
jmp
sti
mov
pushf
mov
dec
or
pop
cmp
or
sbb
in
stos
cld
mov
lods
jmp
sti
mov
pushf
fldt
sbb
jns
jp
aas
push
sub
and
cwtl
repnz
jecxz
fwait
gs
aaa
incb
enter
ret
push
rcrb
movsb
clc
ja
nop
xlat
and
push
jmp
jle
ret
popa
rcll
push
mov
mov
dec
xchg
or
test
jnp
cmp
mov
mov
push
pushf
dec
jl
inc
jnp
into
sbb
in
out
cld
lahf
cmpsb
mov
test
and
mov
ss
shrl
test
fistps
sub
and
cmc
arpl
test
sub
hlt
and
jg
ret
jnp
dec
sbb
setnp
outsb
ljmp
cmp
mov
repz
jl
mov
dec
dec
pushf
dec
and
fcompl
mov
pushf
fldt
cmp
sbb
cmp
or
sbb
lods
scas
mov
movsl
mov
xchg
call
push
sbb
dec
outsb
and
sub
xor
mov
cltd
fisubrs
xchg
mov
mov
sub
jle
add
imul
stc
mov
loopne
mov
fldt
cmp
sbb
cmp
or
sbb
in
stos
cld
mov
lods
jmp
sti
mov
pushf
fldt
cmp
sbb
cmp
or
sbb
in
stos
push
repz
push
lahf
into
cmp
mov
lret
lods
les
fcmovnb
in
aas
jno
sub
fidivl
mov
sbb
cwtl
ja
xorl
add
add
sub
add
push
and
jbe
js
inc
imul
xchg
lods
cmc
adc
xor
cli
xchg
in
sbb
add
jno
ret
fbld
ljmp
popa
fimuls
sahf
pop
cmp
sub
fwait
xchg
pop
xchg
iret
mov
and
pop
jns
stos
pop
and
out
jecxz
ret
jle
sub
jecxz
imul
icebp
xlat
sbb
movsl
pusha
inc
and
inc
cwtl
jg
imul
mov
and
imul
stc
sub
mov
imul
lcall
push
ret
test
xlat
mov
leave
adc
iret
jbe
pop
fmull
mov
rcll
fs
mov
pop
sahf
loop
loopne
add
xchg
sbb
outsb
fcompl
dec
loop
test
sub
mov
ret
fidivs
pop
stc
insl
mov
insl
mov
pop
xchg
pop
les
cmc
add
cltd
icebp
dec
popl
mov
mov
adc
repz
lock
jbe
fsts
add
pop
cmp
dec
adc
xchg
loop
add
in
sbb
cli
das
gs
jge
roll
js
test
fwait
add
push
call
mov
jge
dec
mov
mov
cmp
add
pop
mov
leave
lahf
pusha
sbb
xchg
dec
cmp
insl
and
mov
bound
pop
stos
mov
leave
xchg
lret
loop
lahf
test
mov
push
push
push
jnp
fwait
inc
jns
arpl
out
pop
repnz
out
shll
pushf
cmp
cmp
adc
or
cld
int3
pop
jnp
push
cltd
sub
jl,pn
fs
jmp
jns
popa
inc
repz
ds
imul
xchg
popa
dec
loope
pop
mov
clc
sub
push
neg
aad
mov
lods
push
icebp
inc
xor
push
out
mov
mov
cmp
push
mov
sbb
mov
jp
add
xor
aam
pop
jge
mov
push
dec
out
add
add
popf
negb
movsl
repnz
mov
insb
cmp
xchg
inc
mov
in
dec
mov
cmp
cwtl
pusha
stc
mov
pop
cmp
xlat
ror
repz
sbb
push
xchg
and
sbb
es
pop
in
sbb
and
test
sbb
out
inc
mov
xor
cmp
xlat
mov
mov
or
mov
rorb
mov
ds
test
jb
lods
push
pusha
dec
xchg
jns
cmp
inc
inc
addl
dec
pop
xchg
adc
ret
sub
jmp
cmpsl
jb
dec
sbb
push
ds
addr16
and
ds
repnz
call
adcl
into
js
sub
and
xlat
adc
jp
test
je
xchg
push
inc
mov
inc
inc
stc
mov
inc
test
push
stos
je
mov
popf
fdivp
loopne
push
inc
push
push
add
les
stos
inc
mov
or
ret
lea
incw
jns
fldt
pop
push
and
fists
and
fs
test
int
push
adc
pop
xchg
sbb
jo
fcmovb
clc
inc
push
xor
movsb
add
mov
add
imul
xor
push
cmc
call
jnp
jne
mov
pop
scas
inc
pushl
cmp
shll
jae
iret
jge
xor
xor
fidivs
mov
sbb
mov
fimull
dec
jl
sub
mov
push
jns
push
ljmp
lahf
ja
inc
ret
push
lea
jb
pusha
repz
and
mov
pop
jnp
jge
mov
lea
dec
iret
fs
sub
arpl
insl
fildl
mov
mov
in
inc
dec
mov
in
jmp
jo
ss
dec
xchg
bound
or
int
jp
mov
dec
cli
jnp
and
pop
scas
add
clc
sarb
fistpll
cmp
lcall
mov
xchg
sbb
int
fstps
sbb
mov
ja
out
mov
std
das
dec
adc
jnp
push
iret
xorb
jl
cmp
add
and
sub
in
gs
mov
dec
or
sub
call
pop
ds
ret
lds
loop
shll
jge
cmpsb
outsb
lret
loop
jbe
cli
xchg
popa
sub
sbb
add
popf
subb
sub
ds
xchg
push
nop
dec
rcrl
cwtl
addl
and
mov
jae
scas
sbb
mov
jp
mov
insb
nop
push
lea
mov
push
jo
cmc
addr16
addl
jecxz
inc
subl
mov
and
rorb
out
cwtl
jno
push
cmc
shll
add
icebp
mov
pminub
xor
mov
aas
loopne
pushf
sbb
cmpsl
cmp
jmp
dec
int3
push
xchg
mov
inc
add
fs
mov
cmp
dec
sub
jns
inc
sub
fnsave
js
or
call
mov
or
loopne
lods
adc
push
call
mov
js
cs
repnz
lret
push
cmpsl
loope
inc
and
cmp
jo
xor
hlt
stos
push
jbe
mov
test
push
or
xlat
pop
mov
jp
pop
js
je
ja
jp
pop
pop
dec
les
ret
mov
pop
add
cmpsl
outsb
pusha
xor
push
test
mov
inc
fst
or
jg
inc
sbb
jbe
sub
cld
fsubp
lahf
mov
loopne
add
and
ret
inc
xor
adcl
and
ljmp
jbe
subb
pop
push
adc
aas
std
inc
adc
in
nop
out
sbb
fiaddl
stc
test
pop
cld
outsl
popa
add
xchg
pop
lcall
add
popa
or
jg
xchg
or
push
test
vpaddb
inc
stc
scas
add
mov
je
out
loop
adc
inc
dec
lds
mul
pop
jge
mov
jb
mov
xor
roll
and
pop
cmp
arpl
orb
out
push
push
ds
xchg
cwtl
fisubrl
enter
fwait
addr16
jns
jne
icebp
dec
push
cmp
incl
aad
hlt
pop
pop
sti
inc
dec
dec
push
pushf
adc
and
jne,pt
subb
out
fstpl
outsb
imul
xchg
out
gs
adc
xchg
mov
inc
movsl
xor
mov
aas
sbb
mov
jg
inc
xor
jbe
loop
lods
fadds
fwait
push
mov
fists
rolb
dec
or
xor
xchg
inc
jle
test
loop
sti
xchg
mov
jge
mov
std
inc
aas
inc
mov
pop
fiaddl
cmp
mov
sub
xor
mov
sti
bound
rorl
int
push
out
fldcw
rorl
stos
mov
rcrb
enter
push
test
subl
in
shll
std
popf
jmp
pop
arpl
mov
aad
add
cltd
xchg
cmp
adc
or
push
jp
rcrl
in
repnz
pop
lds
and
add
mov
sbb
inc
fisubrs
mov
cltd
mov
fs
test
sbb
gs
xchg
cltd
in
cs
dec
fcomp
aaa
mov
inc
out
xlat
jne
pop
gs
xchg
push
mov
sar
mov
xchg
pmuludq
fstpl
out
or
xchg
pop
lods
rorb
stos
add
or
pop
addr16
jg
inc
arpl
cltd
dec
xor
dec
push
faddl
dec
xor
hlt
outsl
cltd
ljmp
pushf
inc
cmc
push
jb
adc
into
sub
push
negl
jb
push
ret
and
lahf
test
add
xor
mov
sbb
jns
inc
stos
cltd
ds
cld
mov
sub
aas
sbb
mov
insl
xchg
xor
push
cmpsb
dec
mov
sahf
pop
inc
push
jae
outsl
add
push
ja
sbb
pop
out
jge
xlat
insb
imul
xchg
dec
cmp
jns
or
push
fs
out
in
aad
loope
addb
xor
insl
push
mov
subl
push
push
gs
call
jg
das
jg
cmpsl
mov
mov
xchg
push
stos
fmulp
loope
sub
jne
mov
pop
mov
imul
les
cmpsb
lea
fdivrs
mov
addr16
divl
ljmp
mov
stos
ss
leave
mov
adc
add
push
inc
dec
jnp
jno
xchg
fimuls
dec
mov
outsl
and
fiadds
fwait
in
and
cmp
jno
inc
cmpsl
cmp
sbb
dec
imulb
lahf
inc
jne
les
in
jmp
and
mov
rcrb
das
or
mov
nop
sub
test
push
cmp
cmpsb
fwait
inc
test
xor
sub
into
xor
mov
into
lahf
pop
cmp
ret
orl
inc
sarl
aam
loop
push
ret
dec
sub
mov
inc
add
inc
mov
adc
into
cmovo
or
jp
cmp
mov
mulb
repz
xor
sub
cmp
shlb
movb
jmp
aaa
daa
pushf
sub
shl
mov
iret
inc
in
push
mov
lret
cmp
in
mov
push
test
push
lods
pop
push
in
sub
push
jecxz
mov
pop
mov
jp
cmc
cmp
je
aad
mov
fdiv
int
popf
lock
aas
or
cwtl
ficomps
or
pop
bound
and
xor
jb
inc
arpl
loop
fidivs
cmp
lock
jg
jbe
jnp
jl
data16
out
mov
mov
mov
lahf
dec
es
xchg
jns
les
js
sbb
rorb
in
xchg
out
adc
mov
jg
dec
adcb
push
pop
int3
lock
inc
xchg
cli
loope
xor
mov
leave
add
add
jp
and
dec
push
ret
add
mov
fidivl
mov
sub
in
xchg
mov
push
pop
sub
frstpm(287
xor
rcll
outsl
movsb
test
out
dec
inc
jle
jbe
imul
mov
inc
rcrb
sbb
or
ljmp
pop
insb
jne
lock
rorl
in
lret
push
icebp
ret
push
dec
cli
or
sbb
and
or
cmpsb
fbld
and
push
mov
nop
das
jns
mov
dec
enter
mov
ret
add
mov
jb
jno
adc
jle
aaa
jecxz
shll
sub
push
or
push
decb
aas
stc
xchg
or
add
ret
roll
lods
in
adc
xchg
in
leave
in
ds
xchg
pop
inc
sub
xchg
in
leave
loop
cmc
pop
dec
fsubrs
jecxz
dec
stos
testb
dec
in
mov
les
ds
sbb
testl
mov
xchg
lock
sbb
into
inc
push
in
in
adc
jns
js
fdivrs
cs
and
int
cs
shr
xchg
fcmovnbe
jnp
lds
aam
push
push
sbb
mov
pushf
loopne
lods
int
jne
insb
dec
xchg
mov
push
out
roll
shlb
movsl
mov
cwtl
in
aaa
pop
cmp
aam
xchg
loope
les
adc
add
and
push
jl
jp
adc
or
frstpm(287
jbe
and
stos
fnstcw
lret
mov
xchg
fst
and
dec
xchg
arpl
inc
xchg
inc
add
push
pop
dec
out
mov
cmc
push
ja
adcb
popf
ret
js
cmp
scas
movsl
fcompl
ljmp
cmp
sub
xchg
cmp
inc
dec
sbb
repz
or
adc
scas
push
xor
adcb
add
test
or
mov
add
punpckldq
pop
fcoml
call
in
mov
sar
cmp
push
or
inc
sub
cwtl
or
insb
jmp
into
shlb
ja
adc
movsl
adc
jno
and
or
dec
aam
adc
push
push
push
lret
leave
xchg
and
addr16
dec
push
jmp
sub
pop
or
outsl
out
mov
inc
fcmovne
cwtl
cmc
mov
xchg
cld
gs
jmp
insw
dec
dec
lcall
fldenv
loope
cmc
adc
lds
sub
sahf
or
test
test
pop
xor
out
js
jl
xchg
scas
les
gs
mov
repnz
push
or
sbb
out
inc
add
loopne
nop
xchg
jmp
push
bound
fbld
lods
mov
aad
pop
xor
ror
pop
mov
ds
fxch
cmc
es
push
loop,pt
xorb
mov
mov
and
enter
mov
xchg
ss
mov
imul
and
pop
fwait
pop
mov
sub
cs
cmpsb
mov
jno
cmp
xchg
sub
lcall
popf
int3
roll
test
pop
std
xchg
aas
jle
adc
or
orl
push
sti
cld
fsub
and
in
hlt
lock
rolb
dec
jb
je
loopne
mov
jb
in
int3
push
sbb
mov
sahf
fsubl
rcl
sub
pop
in
sbb
mov
pusha
loope
ffree
lods
lock
mov
arpl
mov
dec
test
push
push
xchg
aam
and
aaa
rorb
cmp
jbe
test
mov
cmp
mov
leave
out
in
xor
lahf
andb
adc
jecxz
ret
les
int3
pop
add
push
pop
cmp
mov
sti
sbb
mov
fstpl
mov
or
loop
scas
xchg
fsubl
icebp
aas
ja
iret
jb
scas
jns
push
fisttpl
cmp
incb
jecxz
jnp
lcall
jo
shll
cmp
in
xor
mov
dec
or
aas
loopnew
cmp
out
inc
jno
pop
push
sbb
mov
push
addb
ljmp
push
jno
push
sub
adc
mov
mov
aam
adc
sbb
pop
push
pusha
jnp
cli
sarb
mov
xchg
add
fdivrl
scas
loopne
mov
popa
mov
jg
cmp
out
jne
xchg
loop
ret
dec
inc
mov
mov
mov
mov
dec
push
xor
pop
pop
addr16
clc
daa
insb
or
push
pop
sub
pop
inc
imul
mov
or
sbb
sub
lret
addr16
xor
lahf
xrelease
jle
mov
mov
scas
adc
in
aam
jns
add
mov
xchg
in
bnd
stc
orb
ja
in
add
aam
clc
jge
fwait
and
adc
adc
aad
pop
loopne
fs
mov
xchg
je
dec
xor
cmp
adc
es
pslld
dec
mov
fnstcw
test
roll
imul
push
or
mov
ret
in
mov
jmp
lahf
rorb
lock
push
lock
adc
mov
dec
mov
sub
xchg
mov
std
imulb
push
adc
outsb
sbb
test
cld
add
js
leave
daa
xorb
fwait
sti
popa
jnp
call
xor
fcmovnbe
xor
sub
cli
adc
into
add
testl
jg
push
andl
in
mov
inc
call
pop
orl
stos
je
push
sahf
mov
int
ds
mov
sbb
xor
mov
je
lahf
lret
outsb
xchg
sbb
enter
sbb
in
stos
stc
je
imul
xorb
jle
aaa
lret
sbb
cmpsl
scas
jbe
inc
mov
xor
or
mov
mov
js
mov
sbb
in
fwait
sarb
dec
pusha
push
test
jo
inc
loop
jmp
sbb
push
push
mov
insb
jl
mov
idivb
outsl
in
pop
cld
js
xchg
jae
sub
int
inc
and
dec
scas
dec
lcall
js
cwtl
pop
roll
sbb
test
out
xchg
pusha
jb
add
cmp
xchg
outsl
add
sub
shll
pop
sahf
xchg
mov
cmp
dec
cli
mov
mov
dec
aas
popf
dec
pop
lea
ret
pop
dec
inc
sub
mov
fidivrl
rol
pop
loop
fwait
lcall
aas
xor
cmpsl
inc
in
dec
les
insl
and
mov
leave
jp
cmc
lods
fnsave
in
cwtl
adc
lahf
outsl
fdiv
sbb
cmp
popl
inc
mov
mov
lds
mov
mov
lock
sbb
jl
and
xchg
cmp
andb
mov
fsubs
cs
insl
sbb
adc
pop
pop
push
ss
aad
mov
inc
scas
ret
test
sub
cwtl
scas
or
andb
push
add
mov
dec
jne
and
movsb
cltd
shlb
lahf
ret
aas
lds
mov
xor
cmp
pushf
ficompl
pop
std
push
add
add
je
dec
out
push
adc
ss
cli
fwait
repnz
sub
insl
out
data16
mov
cmp
scas
or
cmp
and
in
mov
mov
mov
and
push
mov
inc
xchg
sbb
pop
cwtl
movsb
jg
aas
mov
add
data16
add
sbb
xlat
cltd
clc
js
in
or
cmc
xchg
xchg
mov
mov
pop
test
adc
arpl
adc
hlt
iret
je
or
test
cmp
lret
clc
and
gs
clc
cmp
into
fildll
or
shll
add
cli
insb
pusha
int3
lods
cmp
aam
mov
pop
pop
dec
xchg
loope
xchg
hlt
imul
sub
jb
inc
fucomi
out
aad
sarb
or
mov
jl
std
jecxz
cli
lcall
jecxz
aaa
inc
filds
int
fs
ds
mov
cmc
movsl
xor
je
jns
mov
lock
sbb
xchg
jb
pop
fimuls
mov
and
popf
xchg
fstpt
arpl
sub
in
cmpl
sub
outsl
stos
scas
pusha
sahf
mov
sbb
sti
mov
jbe
mov
pop
dec
mov
addb
addr16
cs
movsl
and
mov
arpl
add
sbb
iret
mov
outsb
mov
xchg
push
or
push
rclb
fsubr
out
out
lods
push
testl
movsb
cmc
pop
js
test
push
ret
inc
fistl
xchg
sarl
jle
roll
pushf
sbb
mov
std
and
jns
add
sarl
jno
xchg
outsl
push
stos
andb
xchg
xor
add
and
iret
mov
icebp
mov
dec
sbb
sbb
gs
cmpsl
xor
or
cmp
outsl
call
inc
icebp
add
rclb
flds
cli
imul
pop
dec
xchg
xor
fucomip
cltd
xor
mov
push
jmp
fwait
pop
cmp
push
lahf
push
stos
cmp
cmp
xchg
mov
jg
jecxz
jle
jle
jns
out
ret
mov
add
mov
aam
nop
mov
add
mov
popf
rolb
adc
addr16
lret
mov
popa
sbb
mov
stos
cmp
shlb
je
cmp
mov
dec
stc
in
incb
ret
iret
rol
jl
dec
cmp
repnz
inc
fnsave
jb
iret
pop
inc
sbb
xlat
mov
cwtl
sbb
push
push
movsl
xchg
inc
loope
rcl
sbb
gs
lods
adc
in
adc
cltd
shll
and
je
cmp
add
xlat
sbb
dec
aas
mov
adcw
adc
mov
into
out
sub
fcom
push
inc
lahf
inc
hlt
mov
insb
sahf
sub
addr16
push
mov
mov
dec
xlat
rep
data16
cmc
mov
sbb
cmpb
jmp
es
fsubrs
test
je
push
sbb
jge
test
mov
push
jmp
jcxz
inc
rolb
jb
pop
ss
rep
mov
cmpsb
and
mov
inc
sub
call
aas
inc
fnstcw
sbb
movsl
and
jecxz
pop
stc
adc
les
dec
popf
mov
gs
lds
dec
push
outsb
sbb
dec
jb
adc
int
nop
jns
clc
inc
std
gs
jl
inc
sub
out
mov
imul
call
jmp
fsubp
push
call
mov
inc
mov
leave
dec
jmp
cmc
mov
xchg
cmp
sbb
sub
pushf
xor
stos
cmpl
mov
adc
add
mov
xchg
hlt
jo
aam
imulb
xor
sub
inc
bound
mov
or
or
lahf
mov
sub
inc
sub
loop
pop
lds
lods
insb
les
inc
inc
mov
xchg
cmp
inc
repnz
sbb
xor
std
jo
test
fsts
in
cmp
out
adc
mov
jbe
add
add
subb
push
or
das
or
and
fildl
insl
and
outsb
fisubl
sbb
mov
scas
dec
or
mov
pop
cmp
es
pop
lds
stos
mov
cli
mov
in
mov
adc
mov
xchg
ja
add
dec
addr16
shr
fldcw
cmpsl
jno
fdivs
in
xchg
xchg
and
lret
nop
sub
xchg
mov
cmp
sbb
push
sbb
ljmp
scas
sub
and
enter
pop
aaa
mov
xor
push
fmull
lret
std
idivb
aam
sbb
push
into
andl
les
mov
jne
out
shrb
and
enter
mov
cmpsl
icebp
or
lods
repnz
in
push
movsl
pop
push
mov
jnp
int3
sbb
and
mov
jae
cs
fsubrs
mov
xor
ljmp
xchg
stos
clc
jns
dec
jmp
cmp
shl
and
push
clc
mov
lods
jmp
sti
mov
pushf
fldt
cmp
sbb
cmp
or
sbb
in
stos
cld
mov
lods
jmp
sti
mov
pushf
fldt
cmp
sbb
cmp
or
sbb
in
stos
jl
dec
mov
fwait
sub
mov
fldt
cmp
sbb
cmp
or
sbb
in
stos
cld
mov
lods
jmp
sti
mov
pushf
fldt
xchg
out
pop
insb
pop
jecxz
test
movsb
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
push
mov
cmpsb
mov
xchg
push
sub
sbb
inc
in
pop
dec
xchg
mov
cmpsb
mov
sti
sti
neg
out
push
aaa
push
sub
or
inc
imul
xchg
loop
repz
rcll
cmp
or
inc
jle
xor
pop
push
sub
and
testl
sub
loope
cmp
ja
pop
adc
and
and
xchg
out
xlat
mov
sbb
xor
stc
aad
dec
stos
hlt
stos
sbb
mov
daa
xchg
mov
jo
sarb
xchg
push
cmp
pusha
jno
hlt
call
pop
and
push
in
push
xchg
fs
fcom
sti
ljmp
fcmovnb
aad
in
xchg
movsb
insb
pop
imul
push
in
mov
ds
sahf
not
out
jle
jae
data16
mov
jns
jnp
or
fistpll
and
ss
dec
push
fisubl
fwait
jmp
in
hlt
and
mov
addr16
leave
lods
xchg
sti
jmp
rclb
cmp
xor
add
adc
inc
jae
inc
dec
loop
ret
call
mov
push
mov
pop
pop
inc
outsb
and
or
xor
daa
leave
rol
ret
out
in
sti
mov
stc
inc
dec
imul
inc
or
cmp
aas
loopne
test
aad
xchg
xchg
enter
lret
push
cmp
sub
sbb
or
inc
imul
dec
xchg
mov
cmpsb
mov
sti
jmp
lret
push
cmp
sub
sbb
or
inc
imul
dec
xchg
mov
hlt
mov
cmp
outsl
divl
int
daa
xchg
clc
sub
cwtl
je
imulb
add
out
dec
test
and
cmpsb
mov
test
inc
loop
shr
popa
fidivl
sbb
pop
adc
push
mov
cmpsb
cmpsl
fnsave
jg
fstps
insb
pop
cmpsb
jne
mov
jno
push
das
fstpl
cs
ja
jno
mov
push
in
or
mov
pusha
out
icebp
add
lds
fsubrl
fstps
mov
into
lods
sbbb
mov
or
and
xor
cmp
mov
cmp
rclb
cli
push
loope
push
mov
lret
pop
mov
and
and
call
out
dec
xor
in
pusha
mov
cli
shll
jns
add
sbb
xor
sub
pop
mov
sbbb
pop
push
insb
and
lds
fnstcw
adc
inc
cmpl
pushf
mov
std
insl
adc
mov
or
push
fisubl
cmp
xchg
arpl
and
lods
add
sub
push
lret
inc
in
push
xor
push
mov
cmp
xor
ffreep
pop
xor
xchg
push
sahf
js
mov
dec
repz
inc
mov
inc
ljmp
pop
push
jnp
fwait
aad
or
fwait
sub
mov
mov
jno
mov
icebp
std
mov
cmp
cmpsb
int
enter
push
dec
jmp
fbld
inc
add
inc
loopne
dec
enter
jb
dec
mov
leave
jo
push
sbb
inc
sbb
into
dec
dec
dec
cmp
xor
ret
push
cli
scas
pop
push
or
add
lret
imul
jle
jecxz
test
push
cmp
js
fidivrl
ja
push
and
sub
cmp
std
rcrl
push
jne
popf
ja
fsubrs
movsb
mov
add
outsl
int3
mov
cltd
aad
sar
hlt
int3
cmpsb
lcall
push
push
lock
sub
rclb
adc
insl
cmp
push
jb
push
cmp
jg
lcall
inc
mov
leave
outsl
out
popa
jnp
test
cmpsl
sbb
dec
fmuls
mov
or
and
mov
out
xchg
loope
int3
push
and
xchg
stos
out
push
pushf
mov
data16
jecxz
leave
fdivl
inc
push
gs
notl
fcomp
push
pushf
adc
stc
mov
pop
xlat
adc
mov
xchg
cmp
mov
adc
xchg
xchg
sbb
out
test
lea
pop
mov
je
inc
push
bnd
ficomps
in
test
mov
arpl
inc
pop
lods
and
pop
sbb
fisubrl
cmp
or
xchg
xchg
mov
fisubrs
insl
rolb
jmp
ljmp
pop
push
mov
mov
je
mov
stos
push
insl
je
and
repnz
push
sbb
sub
lods
aad
stc
mov
add
ja
dec
fidivs
push
inc
aam
int
cltd
int
lret
dec
mov
lods
sub
fs
stos
mov
lret
fistl
subb
shrl
xchg
lds
sbb
imull
jg
ret
test
jmp
in
add
xor
lods
or
push
cltd
xlat
aam
and
push
ljmp
or
dec
cmp
jecxz
jb
loopne
mov
cmc
pop
sbb
pop
inc
push
pop
add
sbb
mov
pop
and
arpl
mov
jno
fldcw
inc
sbb
cmp
popf
push
mov
es
push
xor
push
or
inc
sub
mov
cmp
push
stc
cld
ljmp
dec
mov
sub
dec
xor
or
or
sarb
mov
push
mov
xor
inc
popa
inc
or
mov
iret
mull
cli
xor
push
into
adcl
scas
bound
dec
fmuls
push
mov
leave
jg
mov
and
or
dec
xchg
icebp
pusha
inc
pop
adc
fwait
mov
jno
cwtl
clc
add
mov
call
pop
pusha
dec
xchg
fidivrs
fcompl
mov
fmul
ljmp
aam
lods
cwtl
sti
push
mov
cmpsb
idivl
std
mov
fildl
fs
mov
into
and
push
ss
divl
fimull
pusha
lahf
pop
push
cmpsl
sub
fadds
insl
mov
es
shrb
cmp
inc
pop
mov
inc
push
push
scas
sbbb
test
into
mov
cmp
sub
fwait
cvttps2pi
xor
repnz
inc
bound
test
xchg
outsl
mov
add
adc
je
cli
and
or
xchg
sub
mov
push
adcb
test
out
mov
pop
mov
add
das
and
and
je
xchg
js
pop
mov
mov
loop
cmp
mov
pop
sub
adc
pop
ljmp
test
push
and
jne
lcall
or
or
jle
cmp
mov
int
inc
push
mov
and
sbb
imul
ljmp
xchg
inc
enter
xor
enter
jbe
fdivrl
xor
popf
es
imul
lret
js
pop
addl
push
bound
rcrl
jecxz
test
add
mov
subb
ss
and
in
or
std
imul
or
push
scas
mov
pop
lcall
lock
push
push
mov
sbb
clc
in
outsb
test
mov
cmp
pop
sahf
das
cltd
pop
hlt
dec
aam
inc
outsl
je
dec
jg
or
mov
popf
inc
push
push
sbb
mov
dec
test
push
lods
dec
sub
popf
sbb
dec
repz
sbb
jno
xlat
cli
mul
insl
divps
cli
loopne
cmp
mov
or
add
adc
cmpsb
lea
rcl
xor
hlt
and
aad
in
inc
cs
push
idiv
sbb
dec
xor
js
and
sub
cmp
push
shl
inc
cmpsb
dec
jl
or
mov
stc
mov
flds
loop
mov
and
shr
xlat
repz
and
ljmp
mov
jo
popf
paddb
xchg
fs
sub
insl
dec
int
mov
pop
rcll
mov
xchg
cmc
pop
or
sbb
aaa
pop
adc
rcrl
dec
pusha
pop
imul
repz
iret
aad
int
and
mov
mul
lret
sbb
pusha
mov
movsb
dec
popf
jecxz
cmp
push
xor
push
cmpsb
je
pop
pop
pop
add
int
jge
imul
fwait
xchg
cli
fnstcw
icebp
mov
cmpsb
bsr
popa
aaa
mov
incl
lcall
imul
adc
lret
pop
aaa
sti
outsb
aaa
cmpsb
in
dec
into
cltd
sbb
imul
xchg
fs
sbb
aad
dec
sbb
sbb
push
pop
notl
push
mov
push
mov
stos
aas
hlt
jl
push
sub
inc
shll
aad
jbe
cmp
dec
push
mov
pop
fimuls
insl
ret
jnp
mov
repz
mov
or
pop
fldl
movsl
fcmove
or
or
hlt
xchg
pop
adc
lret
repz
ss
js
fiadds
stos
hlt
add
pop
stc
dec
stos
and
test
pop
ds
int3
popf
xor
and
aad
loope
dec
adc
arpl
cld
fnstenv
xchg
arpl
pushf
mov
push
das
mov
aam
insl
je
clc
lcall
mov
lahf
stos
lods
shlb
cmp
dec
xor
fwait
cmp
or
sbb
pushf
jbe
pop
jmp
or
cmp
loope
push
xchg
aaa
adc
ret
jmp
xor
imul
adc
jp
adc
inc
pop
mov
mov
add
or
dec
pop
sub
mov
sbb
out
loopew
int
sbb
int
out
fucomi
test
sahf
call
and
and
adc
popf
pop
cmc
cmpsl
pop
bound
repnz
sub
insl
push
jno
lret
mul
je
and
lcall
test
in
pop
icebp
push
xor
dec
stos
and
loope
aaa
ss
insl
nop
jae
sarb
cmc
dec
fistl
flds
gs
or
stos
xchg
repnz
cmp
cwtl
xlat
repz
sub
and
cld
add
mov
clc
pop
and
scas
dec
fisubl
data16
scas
add
jns
repz
cmp
outsl
and
outsb
pop
mov
subb
int
sub
xchg
in
adc
in
inc
inc
jne
dec
out
pop
mov
inc
add
mov
cmp
insl
pop
xor
imul
mov
push
xor
dec
sti
lret
xchg
mov
ja
xor
jnp
mov
mov
aaa
clc
aas
outsl
push
and
sbb
loop
outsl
jae
dec
cmpsb
cmp
and
jnp
adc
push
outsl
mov
inc
stc
jmp
jnp
sbb
xor
adc
push
jg
fwait
jb
push
xor
pop
pusha
es
lods
cmpsb
mov
repnz
push
ljmp
xchg
add
call
jne
test
rclb
mov
inc
insl
inc
rclb
jne
mov
inc
cmpsb
mov
jl
pop
mov
mov
repz
mov
mov
repz
repz
jmp
pop
xor
test
push
xchg
pop
cld
clc
rcr
pop
movsb
pop
mov
and
mov
loop
cmp
shl
mov
ss
imul
fbstp
add
imul
sarb
rol
jo
mov
dec
sbb
dec
out
add
add
mov
push
push
xor
push
mov
into
sbb
mov
test
inc
into
jle
push
repnz
add
mov
add
loop
fs
gs
aam
mov
les
js
das
xor
pop
push
ret
out
out
sub
push
dec
cmc
subl
xchg
xchg
lea
jmp
jae
js
stc
hlt
mov
mov
ja
sub
jb
iret
jno
inc
pop
int3
xor
and
cmp
icebp
pop
mov
lcall
fiaddl
mov
loopne
cmc
pop
js
std
push
jnp
lcall
movsl
push
cmpsb
sbb
mov
and
inc
ret
inc
mov
inc
push
fcompl
repnz
stos
or
out
sbb
mov
inc
aas
iret
add
adc
ja
xor
imul
adc
mov
lds
lret
fldt
icebp
sub
hlt
int
push
xchg
xlat
fdivr
clc
into
mov
jbe
pop
sbb
mov
push
pop
push
fbld
inc
xor
or
push
je
inc
inc
ret
ds
adc
or
pop
xchg
sbb
lret
or
pop
jno
ss
test
fcoml
inc
sub
inc
mov
gs
mov
dec
lock
out
jae
mov
ret
das
xor
pop
out
or
addr16
jl
push
jge
or
jmp
inc
imul
xchg
ljmp
mov
lods
push
push
or
mov
mov
sub
push
jl
mov
cs
out
mov
sti
loope
in
sarb
and
mov
xchg
cmp
cmp
sbb
adc
mov
loopne
add
sub
test
lods
push
mov
fcmovnu
jne
jo
pop
mov
ret
lods
mov
xchg
pop
pop
cmc
ror
dec
sti
xor
xchg
xor
mov
daa
test
das
lcall
xor
aaa
je
and
mov
push
xchg
ja
daa
lods
push
pushf
sbb
cs
or
fstps
or
hlt
sub
jo
call
dec
out
pop
jmp
inc
insl
lcall
ja
mov
leave
dec
xchg
cltd
sub
cld
lret
fnstsw
fisttpl
push
pop
pop
add
mov
dec
insl
setg
mov
popf
out
ds
aad
and
jbe
xor
or
jge
lea
sti
mov
and
dec
mull
incl
jmp
movsl
ror
sub
jne
push
stos
jnp
outsl
pushf
adc
cli
jne
mov
mov
sub
cld
fidivs
sub
clc
loopne
pop
rclb
dec
nop
aam
int3
mov
ljmp
out
jp
leave
and
std
bound
fstps
cld
dec
shll
cmp
pop
mov
inc
and
mov
mov
mov
pushf
add
add
or
inc
clc
lock
push
dec
push
aaa
incb
sbb
popf
icebp
xchg
pop
inc
mov
mov
xor
pushl
das
ljmp
popa
cltd
fcoml
stc
in
and
pop
imul
arpl
hlt
fidivrl
mov
jl
dec
cs
adc
pop
pop
bound
inc
xchg
jmp
aam
movsl
sub
pop
inc
mov
mov
adc
pop
test
jle
xchg
stos
jp
sub
repz
cmp
cmpsb
inc
or
dec
mov
int
divl
ret
call
push
scas
les
push
dec
pop
sub
or
imull
jno
cltd
xor
stos
cmpsb
adc
sub
rdtsc
bound
mov
push
xchg
inc
movhps
sbb
dec
test
sbb
mov
pop
aas
jne
and
jno
pop
push
je
sub
imul
cwtl
ljmp
out
push
dec
dec
push
cmp
push
pop
cmpsl
cmpl
adc
or
mov
push
mov
inc
fwait
pop
sub
fs
lock
jecxz
int3
sub
xchg
aaa
fidivrs
mov
push
into
xchg
xor
ret
and
push
fstpt
sbb
jg
xor
cmpsb
push
sbb
pop
pop
out
adc
cs
add
dec
mov
cwtl
mov
adc
sbb
fsts
xchg
rclb
stos
shll
pop
dec
cltd
imul
dec
ja
mov
popa
in
daa
iret
jnp
mov
out
fisubl
and
movsb
movsb
les
push
jnp
out
addl
mov
pop
adc
mov
push
int
lods
and
cmpl
push
lock
pop
fnstenv
dec
or
push
shll
cmpsl
ss
imul
daa
xchg
cmp
sub
mov
add
js
jbe
or
mov
scas
pop
jnp
mov
or
js
xor
adc
les
cmp
mov
sbb
hlt
sbb
testb
insl
cs
dec
lahf
xor
stc
push
test
dec
dec
mov
enter
in
fwait
and
adc
xchg
in
mov
imul
xchg
repz
in
cmc
push
jl
daa
cli
mov
shl
jle
mov
fmuls
loope
je
ficoml
cltd
and
bound
aaa
arpl
cld
inc
lods
add
push
fsubrl
lret
xlat
xchg
fwait
cmpb
jle
xchg
cmp
sbbb
clc
addb
push
test
std
fstpt
sub
sub
dec
out
pop
scas
inc
mov
xor
aad
inc
mov
fucomi
popf
adc
bound
cmp
les
lods
pop
pop
fs
cmpsl
adc
cmp
dec
push
fwait
mov
out
fistpl
jmp
rcrb
pop
das
enter
cmp
call
pop
out
test
sbb
scas
push
xor
test
stc
fdivr
mov
xor
and
mov
mov
fistpll
or
mov
fldt
sahf
aas
in
loopne
loope
mov
paddsb
inc
movsb
pop
pop
jb
sahf
sub
faddp
xor
mov
ss
test
pop
jno
dec
or
adc
call
ja
xchg
push
rolb
adc
jns
testb
mov
pop
pop
fdivs
mov
sti
mov
pop
add
push
pop
xchg
push
addr16
adc
push
xor
jae
sub
xchg
sbb
scas
pop
ret
leave
push
sarb
pop
outsb
cmp
call
mov
mov
repz
fnstsw
inc
jb
mov
inc
inc
js
les
or
pop
outsl
fcoms
push
bound
fwait
and
out
or
mov
pushf
arpl
mull
bnd
jbe
inc
jo
aaa
loope
jb
in
xor
pop
int3
jle
push
xor
xchg
pop
push
iret
aas
add
add
jne
popa
lahf
hlt
jne
ret
enter
sub
negl
mov
sbb
dec
mov
gs
sub
pushf
out
xchg
mov
xor
inc
mov
cs
loope
movsl
jb
leave
cwtl
jo
out
pop
adc
int3
mov
and
lock
js
int3
or
iret
mov
imul
pop
sub
jns
pop
ret
sbb
in
mov
xchg
aaa
or
xor
shr
push
dec
inc
jo
inc
or
mov
outsl
jl
push
jae
imul
cmp
or
cmp
divb
adc
and
aad
sub
push
dec
rcll
pop
cs
out
lods
sahf
or
in
das
cmc
sub
add
add
adc
stos
and
lds
dec
ja
stos
jp
lcall
inc
fwait
and
jecxz
nop
pop
adc
mov
push
test
rolb
in
rclb
adc
lds
iret
sti
es
sbb
sarb
icebp
test
inc
dec
sti
pop
call
xor
adc
adc
push
sub
dec
inc
js
and
loope
push
icebp
jg
xlat
adcb
add
enter
stos
xor
mov
outsl
sub
pushf
jae
pop
aas
lea
shl
add
jo
test
lahf
dec
data16
sbb
das
pop
jmp
mov
and
js
js
mov
movsl
mov
cmpsb
jmp
xchg
mov
int3
pop
sbb
es
sub
pop
lock
aam
out
aam
jp
test
arpl
mov
or
cmp
adc
cmp
cmp
pop
loop
add
push
xor
aam
mov
push
rcrb
or
movsl
repz
xchg
sub
aaa
sub
sub
cmp
adc
and
arpl
push
push
xor
or
push
and
pop
fdivrl
hlt
pop
push
call
jae
hlt
arpl
mov
hlt
pop
mov
insb
pop
cli
cltd
dec
scas
xor
xchg
popa
or
fwait
inc
popa
mov
or
mov
xchg
dec
adc
mov
xchg
push
xchg
inc
adc
xor
fsubp
inc
pop
ss
arpl
mov
xor
adc
mov
fdivrl
mov
aam
adc
sbbb
jge
xchg
lahf
mov
pop
arpl
xchg
std
add
sysenter
or
pop
adc
push
cmp
dec
adc
lea
push
pop
lock
das
std
mov
out
shlb
cld
pop
dec
or
mov
cmpsb
popf
sbb
movsb
add
adc
pop
push
fwait
dec
pop
subb
repz
mov
stos
xor
jp
adc
jp
mov
sub
push
adc
mov
jmp
or
jg
gs
fsubrs
push
roll
xchg
dec
jns
sbb
cmp
aas
cmp
jb
lods
sbb
push
or
dec
mov
inc
inc
jo
xchg
cli
js
or
movsb
in
mov
inc
lods
mov
popf
xchg
sub
sbb
daa
loope
pop
pop
sub
inc
cmpsb
shll
jb
xor
xlat
inc
insb
xchg
xchg
hlt
repz
xor
clc
adc
arpl
pop
bound
mov
or
and
sbb
push
xchg
push
sub
jge
xor
gs
cmp
cld
inc
mov
scas
lods
jp
adc
adc
and
pop
lret
sub
mov
and
repz
sub
or
daa
inc
mov
jl
in
das
and
push
mov
lods
aas
loopne
nop
iret
xorb
in
cmpsb
js
scas
mov
push
jg
cli
push
xchg
arpl
xor
aas
mov
fimull
jg
dec
clc
mov
je
add
jbe
arpl
inc
imul
dec
mov
jno
adc
mulb
repnz
out
jg
pusha
push
les
outsl
test
jl
pop
or
xchg
loope
adc
sbb
or
sub
or
mov
xchg
insl
mov
adc
add
and
push
int3
inc
imul
shll
popf
sar
les
jmp
mov
pop
das
test
xor
xor
push
insb
ss
fldenv
outsb
test
mov
add
aaa
jge
nop
mov
fcmovnbe
push
scas
fsub
jle
pop
fistpll
popl
jmp
cli
fisubs
mov
fwait
mul
loope
mov
fadds
cld
enter
out
dec
rcrb
aaa
pop
inc
out
iret
addr16
ljmp
and
sub
cmpsl
aas
and
push
adcl
roll
lock
dec
fwait
in
pushw
cmpsb
push
in
imul
frstor
icebp
sbb
xor
lock
out
cld
mov
rorb
push
fsubrs
dec
cld
out
adcb
pop
shufps
mov
cmc
in
insb
pop
iret
ret
sub
mov
shrb
test
sbb
lahf
push
mov
jmp
enter
jecxz
pop
cmp
and
jecxz
mov
add
cmp
pop
jg
add
jns
push
sar
movsl
and
and
aad
mov
or
fidivrs
outsl
add
jnp
scas
cltd
pop
sarl
xor
adc
dec
inc
in
jb
jbe
stos
data16
cmpsb
mov
sti
jmp
lret
push
cmp
sub
sbb
or
inc
imul
dec
xchg
mov
cmpsb
mov
sti
jmp
lret
push
cmp
sub
sbb
or
inc
imul
dec
xchg
mov
cmpsb
mov
sti
jmp
lret
push
cmp
sub
sbb
orps
imul
dec
xchg
mov
cmpsb
mov
sti
jmp
or
cmp
sbbl
cltd
xor
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
rolb
add
add
add
add
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
lahf
add
add
test
add
je
add
insb
add
add
pop
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
add
loopne
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pop
push
add
js
add
mov
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
hlt
push
add
cld
push
add
add
add
or
add
adc
add
sbb
add
and
add
aaa
pop
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
pop
add
pop
pop
add
push
pop
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
add
fmull
add
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jg
add
insb
or
add
add
add
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
or
add
or
add
or
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cmp
add
pop
or
add
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
aam
add
fmull
add
in
add
in
or
add
or
add
or
add
add
pop
or
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
add
cmp
add
dec
or
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
