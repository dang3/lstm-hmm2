pusha
call
mov
cwtl
pop
add
rorb
jmp
or
sahf
mov
jmp
out
xor
sub
sbbl
dec
test
ljmp
psrld
aam
cmpsb
sbb
cld
mov
mov
jmp
lods
sbb
dec
lret
fdivp
shrb
stc
jmp
je
inc
cmp
pushf
fldt
mov
jecxz
int
sub
jmp
adc
adc
out
or
cli
loope
sti
dec
movsl
mov
loop
xor
inc
pop
push
jmp
xor
jmp
mov
xchg
negl
lds
or
and
clc
pop
push
sub
mov
pop
push
xor
popf
dec
pop
cmp
jl
mov
lock
and
movsb
inc
jmp
imulb
cmp
int3
dec
pop
jne
scas
jmp
bnd
push
mov
sbb
cs
inc
arpl
shrl
xchg
loopne
xchg
cltd
xchg
jae
fisttpll
popa
mov
fbld
repz
xorl
fsubs
icebp
or
sahf
mov
out
xor
xchg
add
add
sbb
sar
add
mov
ljmp
aad
psrld
aam
cmpsb
sbb
cld
mov
mov
lods
sbb
fdivp
shrb
stc
je
roll
push
fldt
mov
jecxz
int
sub
add
cmp
jmp
repz
or
cli
loope
sti
dec
movsl
mov
loop
add
jno
or
xor
mov
xchg
negl
lds
or
and
clc
pop
push
sub
jmp
mov
pop
jmp
push
xor
popf
dec
pop
cmp
jl
mov
icebp
in
lahf
and
cmp
sub
int3
dec
pop
jne
scas
bnd
push
mov
sbb
cs
inc
arpl
shrl
xchg
jmp
loopne
xchg
cltd
xchg
jae
fisttpll
jnp
shl
ds
ss
fsubs
icebp
or
sahf
mov
out
xor
sub
sbbl
incl
dec
test
ljmp
psrld
aam
cmpsb
sbb
cld
mov
jmp
jo
mov
lods
sbb
fdivp
shrb
stc
je
inc
cmp
pop
rcrl
mov
jecxz
add
dec
jne
jmp
jle
pusha
dec
adc
inc
sbb
out
or
cli
loope
sti
dec
movsl
mov
loop
add
jno
or
xor
mov
xchg
negl
lds
or
and
clc
jmp
pop
push
sub
jmp
mov
pop
push
xor
hlt
es
dec
jmp
pop
cmp
jl
mov
lock
and
movsb
inc
imulb
int3
dec
pop
jne
scas
bnd
push
mov
sbb
cs
rorb
inc
arpl
shrl
xchg
loopne
ret
jmp
jae
dec
data16
jnp
and
in
ss
fsubs
icebp
or
sahf
mov
out
xor
sub
sbbl
dec
test
ljmp
aad
psrld
aam
cmpsb
sbb
cld
mov
in
sub
push
push
xor
mov
mov
mov
add
xor
add
or
or
sub
and
add
add
add
xor
dec
jne
mov
mov
pop
mov
or
and
rolb
or
or
add
sub
leave
ret
push
mov
sub
push
jmp
data16
add
push
xor
mov
mov
mov
or
ror
and
sub
add
or
lea
xor
and
sub
add
sub
add
and
sub
xor
dec
jne
mov
mov
mov
jmp
mov
adc
jmp
sahf
mov
out
xor
add
add
add
or
push
std
sub
sbbl
clc
leave
ret
push
mov
sub
push
push
xor
mov
mov
mov
or
sub
or
sub
xor
and
add
or
add
add
dec
jne
mov
mov
push
mov
pop
jmp
lea
xor
jmp
ljmp
jno
add
inc
loopne
ret
push
mov
sub
push
jmp
cwtl
daa
or
xor
mov
mov
mov
and
and
xor
push
subl
add
movb
add
sub
dec
jne
mov
mov
mov
add
add
sub
mov
mov
jmp
push
mov
sbb
and
jmp
add
inc
add
add
leave
ret
call
pop
jns
xchg
cmp
scas
xchg
inc
xor
outsb
xchg
test
pop
int3
mov
mov
sub
mov
cmpsb
in
insl
popf
sub
in
sti
les
fcmove
ljmp
jnp
movsl
jle
sub
adc
push
fisubs
iret
and
movsl
addl
cmpsb
daa
jns
mov
dec
dec
lods
fmuls
push
sub
rclb
shrl
insl
mov
mov
lcall
popf
push
lock
in
sub
popf
pusha
pop
mov
and
xchg
sbbl
sbb
xchg
adc
xchg
jae
xchg
jno
sahf
inc
push
cmpsl
add
mov
xchg
mov
pop
out
mov
dec
gs
jmp
ljmp
in
push
mov
jge
popf
mov
add
pop
pop
inc
divl
xlat
mov
scas
fnstenv
inc
mov
jge
lods
jno
mov
sbb
or
loopne
jne
mov
out
mov
fists
and
daa
push
or
arpl
test
outsl
xor
jl
adc
add
ss
js
lahf
in
lods
data16
in
and
scas
mov
lock
lret
sbbb
in
insl
mov
sahf
cmc
fwait
push
rorl
adc
pop
mov
ficoml
mov
lea
push
mov
pop
into
jbe
outsb
mov
sub
cmp
out
xchg
inc
mov
sub
int
sbb
cs
insl
pop
inc
insb
pop
push
bound
std
shlb
gs
inc
inc
mov
push
cmpsb
sahf
push
push
adc
cwtl
ret
mov
add
mov
jmp
decb
cs
dec
cmp
mov
bound
mov
jge
xchg
test
mov
fsubs
mov
lcall
hlt
mov
xor
das
repz
jl
sahf
push
addl
pusha
sub
add
sub
sti
xchg
jbe
mov
inc
push
cltd
adc
aam
dec
sub
or
mov
jne
pop
jo
mov
cmp
mov
mov
sbb
insw
fldenv
ljmp
inc
insb
fisttpl
arpl
inc
dec
les
xorl
inc
test
fstpt
sti
push
inc
nop
adc
jno
pop
push
or
add
outsb
xchg
mov
sub
mov
dec
lods
mov
cmc
test
dec
or
push
xor
fbld
cmp
sub
dec
mov
arpl
jne
mov
adc
jb
je
outsb
or
shrl
xchg
mov
jmp
lods
sub
dec
pop
mov
mov
loopne
mov
icebp
dec
or
push
in
push
mov
cli
push
int3
jge
sbbl
push
sbb
sbb
out
xchg
call
xorl
insb
movsl
popf
mov
xchg
xchg
pop
lods
bnd
mov
pop
rcll
lahf
mov
mov
std
inc
pop
dec
jno
hlt
dec
lds
sbb
mov
test
and
adc
dec
sub
pop
popa
lods
test
out
and
adc
push
xlat
push
adc
scas
mov
fwait
jne
int3
call
add
mov
test
orb
jge
jmp
adc
loopne
test
inc
add
out
jle
ficompl
cmpsb
cmpsl
loop
shrb
push
xchg
into
add
mov
mov
lods
sbb
cmp
ljmp
lods
add
xor
sub
jmp
lods
test
dec
inc
xchg
jnp
stc
loopne
cmpsl
sub
scas
fisubrl
loope
mov
mov
inc
cmp
push
fcoms
xchg
push
or
fimull
pop
in
xor
popf
and
out
lods
sbb
mov
add
popa
xor
out
fildll
stos
call
gs
jae
add
jg
jge
cmp
cltd
rolb
jne
xorl
enter
dec
sbb
inc
sub
insw
mov
ljmp
repz
dec
ss
mov
add
loopne
xchg
aas
and
mov
stos
imull
call
scas
inc
add
sti
pop
jle
fwait
sub
xchg
fbld
add
xchg
into
xor
sub
and
arpl
pop
daa
mov
fcoms
pop
flds
inc
cmp
sub
test
sub
adc
sbb
mov
sub
inc
and
jae
das
scas
cmp
mov
cmpsl
xchg
mov
inc
cmp
sbb
adc
dec
push
or
xchg
pop
mov
stos
pusha
pop
roll
mov
mov
xor
cs
add
or
ret
subl
aaa
inc
pusha
push
jae
add
jg
js
cmp
pushf
rolb
jo
or
enter
sbb
jp
and
pop
inc
hlt
adc
in
pop
mov
add
dec
ss
mov
mov
inc
xchg
pop
lds
xchg
test
mov
xlat
outsb
adc
stos
mull
xchg
orl
dec
out
mov
mov
push
jo
insl
dec
and
in
add
jge
and
or
inc
dec
icebp
test
add
cld
pop
jle
rcrb
in
clc
rcl
fs
into
pop
adc
cli
jp
outsl
jbe
or
add
sub
fdivrs
movsl
je
pop
flds
xchg
lcall
dec
mov
xchg
dec
lea
cld
stos
xchg
sbb
movsl
fisubrl
add
ljmp
or
lret
aam
stos
test
sub
and
and
in
orb
jl
mov
xchg
into
addr16
lahf
aaa
fucomi
pop
adc
lock
roll
ja
das
xchg
stos
cmp
mov
shlb
xchg
mov
inc
cmp
call
push
adc
dec
push
or
nop
mov
adcl
xor
dec
daa
pop
pop
or
mov
cmp
test
xchg
fs
stos
mov
insb
push
jae
or
lods
adc
push
cmp
loop
xor
mov
dec
fsubrs
inc
adc
mov
add
addr16
or
lret
mov
push
push
push
sbb
dec
inc
sub
mov
adc
mov
nop
cmp
dec
inc
pop
pop
add
inc
lods
xchg
pop
les
insb
and
inc
idivl
adc
out
mov
sti
jns
nop
pop
lcall
dec
xor
fmull
pop
and
xchg
ss
fcomp
rorb
mov
daa
lahf
sbb
mov
outsl
out
jl
das
add
mov
out
aam
popa
mov
loop
dec
mov
pushf
and
gs
inc
call
out
mov
push
lods
mov
adc
les
and
dec
xlat
mov
and
push
loope
push
push
lds
cmp
xchg
rcll
xchg
in
hlt
pop
or
fsubrs
cmpsb
lods
jno
or
cmp
insl
test
ret
cltd
xor
test
adc
stos
xor
push
jae
or
jg
ja
cmp
insb
and
sbb
pop
inc
sbb
lock
xlat
rorl
adc
sbb
mov
insb
fistl
les
cltd
mov
add
scas
rolb
jmp
inc
fisubs
pop
jb
fs
xrelease
stc
lcall
add
mov
sub
mov
mov
mov
arpl
mov
jl
xor
aam
push
lea
std
icebp
dec
mov
out
stc
and
inc
mov
xor
lods
insl
in
sbb
popf
lcall
in
inc
bound
sub
or
out
mov
mov
in
mov
subl
mov
divw
push
mov
jmp
insb
outsl
das
ss
and
pop
out
adc
jnp
pusha
mov
mov
inc
daa
ja
cmp
iret
iret
push
dec
and
orb
lea
mov
es
push
push
roll
mov
das
das
out
negb
jecxz
clc
cmpsl
push
pop
stos
cmp
out
jle
inc
mov
jae
fsub
aaa
out
xor
dec
lcall
addl
inc
mov
sbb
popa
clc
xlat
rol
cs
pusha
icebp
sub
arpl
jge
inc
daa
mov
ss
sub
lahf
mov
cwtl
outsb
pop
jl
je
dec
jecxz
bound
mov
sbb
lret
xchg
inc
jbe
sbb
outsb
cmpsb
jbe
mov
inc
push
outsb
adc
lea
adc
push
and
lds
push
scas
aad
dec
inc
adc
outsb
mov
mov
dec
fs
pop
dec
mov
inc
fisubrl
inc
inc
pop
and
sbb
push
add
in
push
bound
pop
sbb
scas
fs
dec
inc
adc
and
push
fistps
mov
dec
lret
cli
fwait
lea
mov
ror
pop
inc
ret
dec
inc
dec
xor
rclb
ljmp
push
cld
fistpll
scas
inc
pop
dec
inc
imul
test
mov
filds
scas
faddl
repz
outsb
lock
divl
mov
sbbl
mov
in
mov
sub
xor
mov
lds
cld
mov
lcall
cs
insl
dec
inc
and
inc
ds
dec
cs
xor
inc
sbb
jae
mov
mov
mov
stos
jnp
gs
pop
inc
lock
mov
out
push
jecxz
inc
scas
push
into
bound
mov
fidivl
adc
ja
pop
inc
insl
pop
and
fs
xchg
mov
dec
dec
pop
imul
jmp
push
jnp
test
and
sbb
or
pop
dec
xchg
mov
iret
pop
out
sarl
jmp
dec
inc
jb
outsb
mov
fisubl
scas
fs
dec
inc
or
xor
xorl
push
insb
pop
dec
xchg
push
jg
mov
fmuls
or
xor
or
inc
inc
add
push
bound
int
or
mov
divl
idivb
enter
test
stos
inc
int
out
lret
jecxz
aad
cmpsl
bound
jb
push
fnsave
pop
lcall
xlat
xor
dec
out
jg
sahf
cmc
mov
int
out
loope
and
lcall
xchg
xchg
xchg
mov
jbe
mov
mov
or
stc
fimull
pushf
data16
pusha
xchg
repnz
sub
inc
inc
pop
mov
add
xchg
lds
cli
sbb
lock
test
adc
push
insb
dec
sub
push
je
loop
and
mov
cmp
gs
lods
sbb
dec
mov
inc
iret
leave
insw
and
ljmp
lds
push
inc
jns
jge
mov
out
add
inc
jmp
or
lds
mov
leave
outsl
nop
pop
or
fs
fwait
out
xor
mov
inc
add
mov
dec
ret
cmp
adc
sbb
mov
mov
jo
sub
fdivs
xlat
movsl
je
arpl
inc
mov
pop
out
shrl
scas
push
add
scas
mov
ds
pop
ljmp
xchg
xchg
mov
in
jmp
inc
pop
das
ss
and
and
pop
jo
jnp
pop
mov
xor
addl
popa
mov
iret
push
mov
mov
push
mov
mov
add
mov
fsubrl
or
xor
icebp
push
lods
mov
inc
pop
xor
hlt
ret
pop
add
and
push
dec
lods
in
mov
pop
sub
dec
gs
pop
mov
leave
les
es
leave
fisttps
jne
enter
je
jge
mov
flds
out
add
inc
in
or
sub
lods
jmp
mov
mull
pop
or
fs
cltd
ljmp
test
lods
rol
mov
filds
sub
dec
add
daa
add
test
mov
outsl
inc
xlat
jl
inc
xor
mov
repz
dec
mov
cmp
and
mov
in
mov
mov
xchg
add
lahf
ret
out
stos
out
in
pop
leave
ret
lock
call
call
jmp
hlt
shlb
xchg
mov
jl
mov
shl
xchg
mov
lods
inc
pop
jns
fimull
sbbl
sub
xlat
jg
adc
sbb
push
subb
jns
dec
push
and
xchg
push
dec
inc
ret
mov
lods
mov
outsl
nop
daa
fmuls
cs
bound
stos
lcall
dec
mov
dec
sub
imul
adc
loop
adc
pop
outsb
xchg
sbb
negl
mov
xor
pop
ljmp
iret
add
jae
jge
mov
push
add
mul
mov
xor
add
fs
sub
mov
xor
or
mov
outsb
sahf
fcomp
pop
and
lock
xor
sub
or
ss
mov
daa
sahf
sbb
mov
repz
push
mov
bound
sbb
outsb
shrl
mov
aam
nop
fs
lods
iret
cld
loope
push
jo
xchg
adc
cld
adc
lods
mov
push
in
je
xor
dec
in
int3
dec
sbb
cwtl
test
cltd
add
scas
cs
or
push
push
adc
or
rcll
std
and
popf
mov
sub
push
cwtl
add
call
loope
push
inc
sub
daa
repnz
cmp
pushf
les
inc
icebp
imul
sbb
cs
dec
sub
xchg
dec
inc
jae
fnstenv
pop
mov
mov
cmpb
adc
inc
outsl
fisubs
mov
mov
xchg
jge
lods
ret
add
sti
mov
inc
xchg
and
cli
sbb
out
inc
push
mov
dec
mov
ja
push
or
loop
sbb
pop
cwtl
mov
cmp
xchg
ss
mov
inc
and
insw
sbbl
push
lods
fnstcw
fistl
jo
outsl
jne
mov
pop
push
mov
imull
push
adc
pushf
loop
aas
and
jp
pop
cmpsl
push
fs
and
mov
fcoml
lock
and
es
scas
push
dec
dec
inc
stos
add
out
fwait
xchg
shlb
sbb
lea
lods
test
scas
fnstcw
and
lds
mov
jge
and
test
sub
fcomps
movsl
je
js
inc
sub
dec
adc
sub
pushf
mov
cli
enter
lcall
and
js
insb
inc
xchg
movsl
cwtl
stc
lods
pushf
cmpsl
je
jnp
cli
mov
dec
xor
push
in
int3
push
add
xor
cmp
sbb
rclb
push
rorb
ret
addb
xchg
adc
stos
daa
xor
adc
cmp
sub
and
icebp
push
mov
outsb
push
outsl
mov
scas
sbb
jnp
loop
xor
dec
push
bound
dec
and
repnz
inc
xor
outsb
out
movsb
fstpl
xor
lods
adc
mov
cmpsl
int3
mov
jecxz
adc
cld
stos
xchg
mov
dec
cmpsl
jg
sub
push
and
dec
xchg
pop
arpl
dec
and
inc
push
fistps
ljmp
pop
std
adc
adc
daa
sbb
enter
inc
mov
cmpsl
jp
xchg
dec
sbb
add
xchg
gs
js
test
jo
mov
scas
mov
pusha
mov
jge
inc
inc
ret
dec
inc
cmp
jne
pop
xchg
or
add
push
inc
or
or
mov
mov
rcrl
and
xchg
and
lods
leave
jo
nop
sub
fsubs
movsl
je
jl
subb
lods
pusha
cmp
sub
cwtl
mov
popa
dec
mov
nop
lock
lods
arpl
loope
mov
inc
xchg
test
cld
out
icebp
dec
pop
cmp
pop
insb
mov
mov
int3
sub
cwtl
in
mov
xor
add
pop
sbb
cmp
lds
mov
fwait
sub
das
in
sbb
mov
xchg
sbb
mov
loope
cli
mov
loope
push
inc
sahf
sub
inc
shlb
data16
mov
push
inc
addb
fs
movsl
scas
jge
dec
pusha
aaa
dec
inc
fstpt
dec
push
das
dec
inc
lds
xchg
sbb
lea
lea
jl
sub
fists
add
lods
push
xor
or
mov
dec
sub
cs
xchg
xchg
ret
sbb
and
bound
test
mov
mov
movl
into
bound
lods
push
dec
fcoml
mov
adc
adc
jp
sbb
inc
cld
stos
add
push
jae
sub
jg
push
int3
cmp
pop
movsb
orl
dec
cli
inc
and
fldt
adc
pop
mov
insb
fistpl
scas
mov
mov
push
imul
mov
testl
mov
sti
xorb
inc
pop
fs
ret
dec
add
fmull
add
loopne
pop
das
mov
mov
fisttps
cltd
ret
and
jp
lea
lds
sub
clc
dec
jne
sub
inc
mov
mov
jnp
sti
mov
int
ret
addl
iret
es
rorl
enter
push
mov
repz
mov
and
sub
scas
in
mov
lret
xchg
cpuid
inc
stos
stos
jnp
xor
inc
ret
sbb
pop
mov
int
dec
bound
inc
xchg
pushfw
mov
mov
adc
pop
shrl
inc
and
inc
dec
lods
xor
into
jnp
sub
and
adc
mov
xor
leave
aas
dec
mov
inc
dec
push
addb
mov
mov
add
jo
mov
bsr
mov
repz
dec
xor
mov
cmp
lds
sti
mov
loope
pop
dec
mov
dec
inc
add
outsb
lods
call
jb
adc
dec
inc
int3
inc
mov
bound
jle
lods
mov
push
fstl
test
idivl
pop
int
ret
cmpsb
jb
adc
xlat
xor
rcll
dec
iret
scas
ret
faddl
and
dec
jmp
mov
xlat
lcall
jae
call
dec
stos
inc
jp
mov
cmp
ret
jo
mov
and
xor
inc
cwtl
aas
dec
iret
rcrl
mov
lret
jns
dec
inc
inc
popa
aas
mov
xchg
imul
addb
imul
jecxz
inc
inc
dec
mov
and
aas
dec
lods
cli
cmpsb
insl
dec
inc
cmovle
or
roll
mov
dec
out
mov
inc
shrl
shll
shll
rolb
sub
stos
mov
xor
dec
inc
inc
clc
into
bound
mov
mov
aaa
mov
shll
mov
dec
pushf
lret
sub
mov
cmp
stos
mov
insl
ret
xor
cmp
jge
call
cmp
xchg
cmp
stc
dec
xor
lds
hlt
mov
aad
mov
ret
sbb
lods
add
or
and
mov
pusha
inc
xchg
jbe
push
cwtl
cli
sbb
xchg
lods
cmp
fildl
jae
push
clc
jg
das
int3
cmp
rolb
daa
movsb
and
enter
sbb
pop
cmp
xlat
mov
imul
sub
sub
les
lcall
mul
ja
xor
mov
sti
out
or
inc
popa
test
lods
or
add
es
sub
dec
inc
int3
push
es
cltd
push
cmp
mov
xchg
mov
cltd
lret
add
ret
mov
cmp
sbb
popa
mov
mov
les
xchg
mov
push
sti
arpl
mov
mov
sub
fdivrs
movsl
je
push
flds
adc
sub
ljmp
or
lods
push
loope
movsl
sbb
mov
repnz
pushl
ss
and
dec
out
dec
aas
and
jmp
scas
mov
cmpsb
outsb
hlt
or
mov
add
rcr
push
cmp
inc
mov
shll
mov
inc
xor
mov
pop
in
sbb
push
rcl
pop
mov
xchg
sub
lahf
scas
cmp
lods
sahf
lcall
xor
cs
cmpsl
leave
mov
xor
int
and
mov
mov
in
out
jl
mov
aaa
mov
sbb
jmp
mov
shrb
mov
shlb
fcoms
jl
out
out
bound
hlt
insb
enter
std
mov
push
outsb
inc
outsl
push
or
inc
lahf
sbb
add
icebp
xchg
mov
mov
loop
shlb
dec
sbb
xchg
lret
scas
rol
enter
mov
mov
loopne
mov
dec
repnz
outsl
lret
scas
inc
std
inc
dec
clc
jae
xchg
mov
xor
loopne
ja
sbb
cmp
sbb
sbb
pop
adc
ja
adc
popa
and
out
add
arpl
repz
lds
loope
dec
fwait
lcall
pop
sub
out
push
imul
lock
mov
mov
out
leave
mov
xlat
and
dec
pop
lods
pop
jbe
mov
dec
adc
loopne
psrad
and
cmp
insb
jne
xor
popf
and
pop
push
mov
leave
xchg
lret
jge
js
mov
mov
call
out
mov
add
add
mov
int
fs
imul
and
adcl
in
jge
add
xor
cs
mov
je
xor
inc
aas
push
jae
pop
clc
jg
daa
int3
cmp
ret
rolb
das
movsb
or
enter
sbb
jp
and
pop
pop
hlt
adc
mov
insb
fistpl
and
aaa
pinsrw
fisttps
popa
adc
inc
or
sti
dec
mov
sub
xor
in
pop
mov
push
jecxz
dec
addr16
shll
insl
pop
xor
and
mov
pop
mov
cld
fcomp
lock
sub
shll
repnz
test
in
sub
mov
sub
push
add
xchg
fdivrl
cmp
bound
in
mov
fldl
int
lret
into
in
mov
mov
xchg
mov
in
pop
pop
movsl
lock
mov
sub
cmp
jg
shlb
xchg
mov
sbb
or
push
test
xchg
pop
jns
mov
repnz
and
sub
pop
sub
call
adc
loop
mov
push
mov
popf
lret
outsb
test
out
xor
stos
fcom
xorb
cmp
pop
clc
jg
and
cmp
rolb
sub
aaa
adc
ja
insw
lods
fs
jnp
adc
jge
aad
fptan
fldz
add
mov
xchg
push
dec
mov
jno
jno
sbb
call
push
fmull
pop
ja
xchg
cmp
jne
mov
stos
mov
fstpt
mov
dec
test
out
sub
mov
sub
dec
add
imul
dec
mov
xchg
mov
add
dec
mov
cwtl
inc
dec
inc
xchg
das
sbb
out
mov
adc
fistpll
xchg
stos
addr16
outsb
movsb
ret
adc
add
mov
in
or
int3
xor
cwtl
add
gs
pop
cltd
add
inc
std
sbb
mov
call
dec
ljmp
sti
ret
mov
mov
lds
nop
cmp
mov
cwtl
pusha
out
testb
jecxz
mov
jbe
mov
fdivrs
lret
jg
dec
pushf
jae
or
dec
lcall
addl
inc
mov
repnz
pop
out
jg
adc
or
push
scas
pop
imul
mov
mov
sub
inc
push
pop
pop
sub
ljmp
clc
mov
mov
leave
cmpb
and
les
cs
push
sub
out
jb
es
test
divl
jns
outsb
dec
lea
add
pop
add
adc
outsb
movsl
cmp
dec
mov
dec
adc
sub
add
cli
insb
in
std
fcomps
add
jge
testb
cmp
dec
out
inc
add
mov
fwait
sub
cmpsb
jecxz
rcl
push
dec
xchg
into
inc
push
sub
jo
outsl
jbe
dec
arpl
xchg
sub
fsubs
movsl
je
pop
flds
mov
dec
inc
ret
outsb
orl
outsb
cmpsl
or
movsb
mov
jne
pop
push
shlb
sub
ret
ds
adc
xchg
xchg
stos
lea
mov
das
repnz
bound
pop
out
jo
jnp
pop
hlt
mov
xor
ja
jo
std
sbb
mov
call
add
test
insb
and
dec
add
bound
std
mov
push
lret
jbe
jl
cli
sbb
subl
stos
adc
in
and
inc
clc
jg
cmp
cmp
rolb
xor
rorb
dec
inc
cs
addb
adc
cmpsb
sbb
enter
mov
in
sbb
xor
popa
repz
pop
dec
jmp
add
pop
jle
sbbl
fstpt
xchg
into
test
out
lods
and
xchg
lods
out
arpl
mov
and
fadds
movsl
je
sbb
inc
data16
sub
clc
mov
xor
lods
jne
loope
mov
inc
xchg
xchg
cld
stc
loopne
loopne
cld
push
sub
inc
sub
dec
lods
sbb
in
or
add
cmpsb
mov
mov
xor
popa
ja
bound
ficoml
mov
push
andb
push
xor
stos
jne
pop
fdivl
mov
dec
movsl
testb
jecxz
mov
jg
mov
inc
pop
add
xchg
pop
shlb
fmull
sti
push
test
ja
les
and
jecxz
dec
sub
or
lea
and
movsl
jecxz
sbb
jmp
push
fldcw
mov
movsl
sbb
mov
inc
cs
xor
mov
inc
push
cmpsb
bound
jnp
mov
or
out
add
sbb
or
push
pop
mov
jno
sbb
inc
inc
lcall
andb
ret
dec
mov
inc
ljmp
push
into
xchg
lods
mov
pop
test
cli
sub
cmpsb
jl
popl
mov
scas
aam
ror
movsl
add
jle
sub
push
push
dec
mov
dec
xchg
inc
je
sub
cmc
outsb
cmp
std
mov
dec
outsb
test
mov
sbb
mov
fnstsw
xchg
cwtl
loop
inc
fistpl
js
iret
sbb
xor
add
loopne
push
out
pushf
lea
mov
push
sbb
mov
mov
inc
xchg
adc
lock
mov
and
xchg
dec
lcall
addl
inc
adc
mov
popa
clc
pop
add
push
ja
pusha
mov
pop
jno
ret
rcl
xacquire
mov
mov
add
in
xchg
sbb
cwtl
adc
mov
test
sub
ljmp
jns
cmpsb
inc
mov
shl
inc
xchg
into
and
cli
adc
outsl
jbe
inc
arpl
sub
mov
repz
and
outsb
imul
shrl
dec
repnz
mov
jmp
sub
dec
dec
jbe
and
xchg
pop
cmc
stc
loopne
jmp
icebp
dec
rclb
repz
in
int3
mov
sbbl
pop
lret
out
jnp
ficoml
arpl
adc
mov
out
sbb
inc
xor
repz
pop
dec
and
stos
jp
outsb
out
testb
cmpsl
push
cs
pusha
and
shl
mov
test
jo
std
jecxz
push
jno
and
jmp
stos
insl
push
and
leave
and
pop
in
jae
sbb
jecxz
sbb
ss
sahf
mov
cmpb
adc
sbb
and
stos
stc
add
pop
ret
mov
mov
mov
bound
mov
cmpsb
nop
fs
mov
sbb
mov
push
dec
lods
jg
mov
pop
imul
addr16
and
mov
mov
mov
divl
push
adc
mov
mov
sti
xor
cltd
jno
pop
push
sbb
jnp
push
and
or
sarl
incb
and
mov
xchg
and
cli
leave
jo
sub
fadds
sub
inc
loop
cmp
sub
inc
mov
jmp
test
pop
ljmp
xchg
xchg
je
push
mov
cmpsl
jmp
jno
dec
cs
test
lcall
out
jb
mov
shl
into
out
out
dec
addr16
pop
mov
dec
pop
das
stos
scas
xorb
inc
mov
pushf
mov
int
cmp
dec
add
sbbl
fnsave
adc
xchg
call
fsubrs
jl
sbb
fmull
push
push
jnp
pop
dec
stos
out
jp
push
out
idivb
jecxz
pop
notl
push
mov
add
pop
scas
jae
ss
adc
mov
les
addl
inc
mov
rep
pop
out
dec
adc
icebp
cmp
imul
xchg
mov
fs
or
xor
add
add
mov
out
sbb
adc
sbb
jp
movsb
add
lcall
pushf
fdivs
inc
outsl
fabs
test
icebp
sbb
fcmovb
fidivl
inc
lods
arpl
inc
jmp
mov
in
jne
and
pop
mov
and
sbb
mov
xchg
and
dec
jo
ret
mov
lcall
xor
sub
mov
loope
add
pop
iret
ds
and
lods
clc
mov
js
cmp
or
mov
mov
mov
das
ss
outsl
out
ss
jnp
dec
mov
xor
inc
mov
xorl
xchg
xor
stos
lds
es
or
jmp
pop
dec
stos
jp
push
out
imulb
scas
cmpsl
push
push
sarb
lret
jg
and
and
ror
mov
test
testb
mov
imul
loop
popa
clc
cmp
dec
jns
iret
push
pop
jl
fs
fld1
aad
fdivrs
dec
stos
repz
mov
aas
push
stos
ljmp
fmul
shll
xor
testl
or
mov
push
cmpl
push
lahf
sbb
jge
fldcw
mov
arpl
xor
dec
rorl
jb
adc
outsb
imul
add
pop
rol
jne
pop
ljmp
xchg
lods
xor
stc
loopne
cld
sbb
icebp
dec
aad
push
in
xor
int3
mov
gs
sbb
cs
mov
cmpl
andb
sbb
outsb
add
push
in
pop
dec
fsubr
stos
jp
pop
out
imulb
mov
cmp
fisttps
mov
inc
shll
aaa
out
pop
dec
lcall
xor
adc
dec
sub
cmp
xor
jns
int
pop
jl
imul
mov
mov
lea
sbb
dec
pop
mov
push
mov
or
dec
mov
fldt
int3
sbb
mov
aaa
or
test
mov
adc
dec
push
or
jg
adcb
and
dec
ret
aaa
scas
movsb
xor
jb
outsb
mov
jmp
aam
lods
sub
jecxz
inc
daa
adc
dec
cwtl
xor
inc
adc
and
ss
inc
fs
out
in
mov
ljmp
cmp
in
inc
scas
adc
dec
daa
adc
cwtl
nop
addb
pop
dec
pop
mov
jbe
xchg
pop
jge
fs
lods
mov
jo
or
loopne
pop
js
ror
fisttps
inc
xor
mov
test
int
outsl
pop
xchg
jl
xor
mov
cltd
aam
push
std
js
add
jle
mov
gs
cli
mov
dec
in
dec
jecxz
in
lahf
xor
nop
add
in
push
push
mov
sahf
cmc
decl
adc
mov
std
dec
ja
pop
lcall
loope
and
leave
out
imul
pop
inc
notb
mov
sub
jns
sahf
pop
dec
mov
xchg
cmp
lret
test
inc
into
inc
sbb
xor
mov
cs
clc
outsb
inc
addr16
push
in
nop
mov
cld
adc
rcr
dec
inc
xor
fiadds
adc
gs
mov
cld
mov
sub
repnz
add
pop
mov
dec
inc
xchg
push
icebp
jbe
out
mov
sbb
inc
cmp
popa
dec
imul
jg
add
cmp
out
inc
xchg
or
mov
mov
dec
in
and
ds
adc
cmp
fstpt
xor
mov
je
mov
notl
xchg
push
jbe
adc
push
out
inc
orl
mov
insl
cmovp
pusha
cmovp
mov
push
test
dec
inc
mov
inc
and
lock
adc
in
cmc
inc
sub
dec
bound
or
jae
pop
out
test
push
dec
rcl
shrl
lock
cli
out
outsl
jbe
insb
arpl
sbb
mov
mov
jb
or
sbb
pusha
setbe
or
ret
jmp
lods
or
inc
xchg
fistpl
es
mov
in
dec
mov
ret
popl
outsb
push
sub
push
lods
in
and
jnp
pop
cmp
mov
xor
push
mov
mov
iret
push
bound
xorb
sbb
jle
push
push
aad
pop
dec
int3
mull
jp
inc
out
mulb
mov
cmp
shl
mov
hlt
cli
mov
mov
test
pop
xor
adc
and
and
pusha
std
inc
sbb
ljmp
push
mov
sub
jp
pop
or
inc
inc
cs
arpl
adc
add
bound
mov
scas
add
mov
loop
std
fiadds
mov
push
aas
push
and
xor
dec
rorl
pop
xor
leave
inc
add
popf
pop
jle
mov
fbld
pop
insl
xchg
into
jbe
sub
insl
lds
loopne
xchg
and
out
leave
jo
shrb
fsubrs
movsl
je
ds
or
mov
fstp
dec
lcall
xchg
sarl
in
mov
add
in
pop
scas
popf
lock
mov
and
adc
cmp
and
xchg
mov
and
pushf
xchg
dec
aaa
and
pop
lret
popf
push
mov
scas
orb
std
pop
adc
mov
adc
out
sbb
lock
icebp
inc
adc
xchg
sub
mov
jecxz
push
test
or
out
xorb
loop
dec
push
cmp
sub
sbb
cmp
adc
add
sbb
add
and
fsubl
hlt
adc
sbb
mov
mov
fisttpl
les
pop
dec
mov
mull
xchg
test
adc
mov
or
push
and
lahf
fldenv
sub
jbe
cmc
fcoml
xchg
lret
and
aam
std
in
push
int
int3
push
add
xor
xor
lds
pop
inc
ret
dec
inc
loop
mov
sbb
nop
pop
sbb
jns
adc
das
or
ds
in
jne
add
inc
int
mov
test
sub
bound
cmp
lcall
mov
rcrl
in
aad
push
xor
sahf
cmc
ds
in
pop
add
mov
mov
outsl
mov
test
stos
push
loope
aaa
push
lea
ds
and
and
push
popf
incl
mov
sbb
lods
pop
adc
lods
lret
pop
sbb
lods
sbb
mov
jecxz
imul
xchg
and
inc
ret
inc
fildll
mov
repz
je
lret
test
imull
ficoml
dec
inc
pop
sub
push
mov
sub
loop
mov
xchg
pop
repz
nop
int3
dec
gs
or
insl
dec
push
ljmp
cltd
add
and
mov
add
and
push
out
jo
shlb
jmp
mov
jmp
pop
mov
push
sbb
mov
jb
pushf
aad
sub
mov
fidivs
jo
idivb
xchg
call
jl
push
add
dec
in
js
mov
or
inc
pop
scas
repz
sbb
inc
pop
scas
outsb
cmpsb
test
mov
movsl
leave
sub
cmpsl
add
pop
fsubr
movb
sarl
mov
add
outsb
dec
stos
pop
mov
fsubr
jae
out
add
out
jmp
lods
out
loope
cmp
inc
xchg
cmp
stc
loopne
lret
push
icebp
dec
movsl
jb
in
mov
pop
sbb
int3
scas
dec
sbbl
xchg
enter
push
sbb
sahf
xchg
call
fucomi
mov
sti
sub
stos
fidivrl
imul
pop
dec
xbegin
out
mulb
mov
push
add
cmp
rcrb
jg
mov
pop
jbe
fisttpl
sahf
fistl
int
xor
inc
dec
jb
and
repnz
xchg
push
popa
outsb
xchg
fs
outsb
inc
adc
push
testb
mov
xor
push
adc
cmp
xlat
push
ljmp
enter
lods
jecxz
mov
fsubp
or
mov
pop
aas
push
pop
repnz
lods
fimull
pop
aam
dec
lods
pop
nop
cmc
test
sub
and
or
mov
aam
cmp
lahf
mov
mov
lahf
pop
and
adc
aam
sbb
loopne
stos
dec
rorl
movsb
enter
sbb
sbb
xchg
sub
mov
dec
jecxz
sub
xchg
jno,pn
out
mov
icebp
fstpt
add
adc
sahf
int
jb
stc
mov
sub
enter
or
mov
sub
ds
pop
ljmp
nop
xchg
mov
inc
mov
dec
mov
mov
pop
imul
and
js
je
pop
movsb
mov
dec
push
int3
push
mov
rolb
aam
stos
addb
insl
fwait
lods
enter
pop
insb
addr16
sbb
cmp
xchg
dec
cs
pop
push
mov
push
aas
or
scas
shrl
mov
std
and
sub
jg
adc
leave
add
decl
int
push
jo
fstpl
loopne
pushf
mov
scas
mov
jno
pop
arpl
es
jb
pop
sarb
push
test
lods
ss
stc
push
sbb
clc
stos
pop
adc
test
pusha
add
aam
loopne
pop
jl
xorb
or
fs
pop
mov
fiadds
mov
xor
dec
or
rorb
ds
add
push
jle
push
cwtl
sub
add
cmpsb
imull
inc
or
xchg
cmp
xor
or
cmp
mov
xchg
das
repz
outsl
or
adc
lret
sub
stc
sbb
leave
mov
das
xchg
and
stc
fistps
mov
pop
xchg
sti
leave
inc
cmp
push
adc
ss
inc
sbb
or
add
stc
nop
inc
cs
lret
or
add
mov
mov
stc
push
lods
cli
mov
lds
popf
add
cmc
adc
dec
mov
or
add
adc
rol
in
and
imul
out
roll
mov
lcall
sub
xchg
insl
push
jnp
mov
cmp
lcall
mov
sub
dec
jmp
sarl
jns
insl
stc
rcrb
dec
enter
adc
mov
out
pop
in
adc
pop
in
int
icebp
sbb
ficoml
adc
add
scas
adc
dec
inc
push
lods
insl
adcl
ret
mull
xchg
and
inc
pop
mov
mov
rcrl
adc
outsl
es
scas
ds
inc
popf
mov
sbb
inc
mov
adc
les
call
test
push
iret
inc
mov
mov
push
clc
jecxz
mov
sub
mov
gs
push
movsb
sbb
dec
lock
scas
scas
mov
jnp
pop
mov
inc
mov
out
test
jl
sub
cwtl
cmpsl
les
sbb
mov
sbb
out
movsl
adc
sub
aam
pop
int
cmp
jns
mov
aam
loop
add
cld
clc
mov
add
sbb
sbb
jle
inc
mov
pop
stc
fmuls
xor
add
pusha
add
pop
cwtl
sub
fs
adc
sub
xor
insb
jbe
xchg
pusha
mov
dec
mov
ret
jbe
je
ret
add
ds
jae
subb
adc
lahf
lret
addr16
shrl
test
in
cmpsb
scas
jne
rorl
and
cmc
imul
pushf
je
cmpsb
sub
inc
or
dec
pop
fwait
dec
xor
and
shr
add
mov
xlat
cmp
jne
cmpsb
dec
xchg
mov
pop
icebp
push
out
and
mov
xchg
push
iret
xor
pop
in
lods
in
pop
ja
mov
inc
out
pop
dec
arpl
out
dec
inc
and
jmp
das
inc
aaa
aas
jmp
push
ret
ja
aas
xchg
mov
fstpt
mov
inc
inc
adc
or
cmpl
cmp
adc
out
xchg
xor
aad
or
daa
test
jne
clc
push
stc
sbb
sub
mov
xchg
dec
sub
lret
repnz
mov
repnz
pop
mov
sbb
sarl
dec
gs
mov
push
bound
mov
sbb
lods
cmp
push
cmp
xor
sbb
add
rolb
or
test
lods
xchg
mov
mov
test
mov
xchg
fisttps
dec
mov
xchg
add
fcmovnu
ret
fwait
ret
movsl
xor
cld
mov
outsl
into
jno
sub
xchg
add
loop
jge
clc
or
lods
mov
push
mov
daa
add
push
lahf
lret
mov
pop
ja
xchg
fwait
lahf
jb
out
pop
push
repz
dec
inc
and
out
jmp
pop
xor
jmp
push
ret
ja
cmp
imul
push
inc
adc
mov
push
js
movsl
sbb
subl
in
or
jmp
inc
xchg
das
adc
test
sbb
sub
mov
xchg
jne
mov
test
int
jge
dec
add
sti
lea
pop
adcl
movsb
mov
scas
cmpsl
push
sbb
bound
push
outsl
repz
sub
cwtl
iret
cmp
mov
dec
push
aam
pop
iret
or
scas
loopne
push
xchg
or
jecxz
cmp
cmc
dec
inc
jo
insl
in
divb
inc
and
dec
xchg
in
mov
testl
inc
stos
mov
mov
int
jg
xchg
cmpsl
pop
push
sub
fiadds
ja
mov
mov
adc
call
push
xor
dec
adc
or
das
mov
mov
mov
adcl
and
push
mov
mov
enter
fs
dec
or
shll
add
and
sbb
ja
adc
jle
test
stos
mov
jle
inc
cwtl
sub
rcl
lcall
push
mov
adc
mov
insb
jbe
pusha
mov
shlb
jle
lock
jmp
outsb
or
enter
or
lcall
ds
out
rcrl
popf
dec
push
mov
push
fdivrp
mov
popf
push
in
leave
mov
pop
hlt
out
int3
frstor
data16
addr16
inc
mov
mov
popf
add
pop
jns
lea
mov
stc
sub
popa
cmc
pop
mov
mov
xchg
cmpsl
or
stc
sbb
add
mov
cmp
dec
sub
dec
cmp
lock
cmpl
pop
dec
ficompl
mov
leave
xchg
mov
jne
jbe
push
xchg
lret
sub
mov
add
mov
or
cltd
xchg
mov
jno
stos
push
sbb
std
loop
and
adc
sub
call
cltd
das
fwait
jp
xor
pop
xchg
xchg
xor
jg
push
lea
mov
popa
xlat
repz
dec
mov
roll
test
ljmp
in
addr16
mov
ret
outsl
mov
add
inc
mov
dec
test
lret
xchg
dec
push
mov
in
ss
dec
and
inc
icebp
out
int3
out
movsl
sbbb
fwait
mov
insl
scas
je
add
mov
jae
int3
push
mov
incl
xchg
xchg
pop
es
push
push
xchg
unpcklps
adc
and
fs
lods
push
dec
mov
out
inc
ljmp
and
jae
xchg
jg
sti
iret
cmp
roll
repz
addl
pop
dec
cmp
and
lcall
pop
hlt
fldt
fldl
mov
leave
xor
fsts
in
add
push
pop
mov
inc
add
xchg
imul
sbb
jmp
mov
lods
inc
push
mov
sbb
daa
out
or
add
and
mov
jle
xor
flds
jns
out
into
lods
lds
inc
lods
stos
insb
xlat
repz
jnp
bound
arpl
and
or
ret
in
add
sbb
stc
mov
out
ret
adc
mov
sbb
les
sub
dec
mov
dec
arpl
popf
cmc
add
adc
sahf
cmpl
daa
insl
test
push
loope
xlat
add
imul
icebp
sbb
aad
xchg
arpl
outsl
outsl
lea
cmp
or
pop
pop
loop
jne
or
add
mov
sub
ljmp
and
mov
jg
test
and
roll
cmpsl
andl
lret
arpl
pop
dec
movsb
loop
xlat
jge
imull
les
outsl
fldt
push
push
and
xor
fldenv
or
add
in
test
sub
mov
sbb
outsb
in
or
add
shll
fcmovnu
sahf
fstp
xor
and
lahf
xchg
cmp
outsl
fisubl
sub
addl
and
xlat
repz
or
es
mov
mov
sbb
punpckldq
lret
mov
pop
sbb
add
pushf
insl
je
mov
push
jecxz
inc
movsb
or
push
pop
call
dec
out
push
in
mov
lods
pop
sti
out
int3
scas
sbbb
xchg
lcall
jg
call
pushf
daa
stos
push
pop
mov
mov
lods
cmp
mov
mov
sub
mov
push
adc
imul
add
and
cmp
lcall
sbb
in
jl
or
fcompl
push
test
mov
les
sbb
mov
inc
adc
mov
pusha
nop
stos
pop
jl
sahf
jb
adc
fs
jns
dec
addr16
cmp
outsl
adc
mov
daa
hlt
scas
popf
cmp
pop
iret
dec
ret
push
out
int3
inc
mov
dec
int
icebp
sbb
mov
mov
inc
mov
xchg
sbb
stos
jle
push
push
aas
sbb
leave
mov
cmpb
dec
lahf
push
dec
inc
adc
mov
out
loopne
jmp
push
pushf
and
lcall
jb
pusha
mov
lock
mov
outsb
shl
jb
out
outsb
sbb
enter
or
stos
loop
ret
les
mov
ficomps
adc
nop
xchg
mov
pop
call
ss
xor
in
sti
mov
jno
or
push
js
or
lods
mov
arpl
mov
inc
jno
push
mov
rolb
cmc
mov
cmp
push
push
inc
lret
mov
mov
xchg
outsl
push
movsb
test
ja
std
pop
dec
adc
out
push
jae
loope
jo
xchg
pop
xor
sbb
push
pop
dec
gs
shll
insl
or
xchg
push
test
xor
fstps
in
add
stc
inc
lods
popa
outsl
test
mov
mov
test
cmp
mov
mov
jecxz
xchg
mov
rorl
scas
das
fwait
pop
mov
daa
jo
xchg
add
adc
push
mov
xchg
xchg
adc
xchg
aaa
mov
in
lcall
dec
mov
cmovbe
add
jle
lret
dec
pop
mov
xchg
cmp
fwait
lahf
lds
pop
into
dec
repz
addr16
lods
lret
mov
insl
test
mov
lea
mov
and
and
ret
popf
and
jns
push
lea
inc
lea
or
mov
or
sbb
mov
or
jbe
fs
sbb
aaa
mov
stos
push
cmp
jae
mov
jg
enter
sub
inc
push
shlb
mov
fsubl
xlat
mov
notl
cmp
call
mov
push
push
sbb
and
sbb
mov
cld
inc
div
nop
pop
xor
mov
sti
in
xchg
pop
adc
mov
mov
jecxz
mov
fcmovnu
pop
test
xor
or
cmpl
ja
jg
push
mov
inc
int
outsl
leave
test
pop
daa
popa
xor
adc
add
and
lahf
lret
pop
pop
mov
xchg
das
aad
lahf
shrb
pop
xor
out
bound
aas
mov
insl
test
call
mov
and
ret
daa
fisttpll
jl
dec
inc
sbbb
and
dec
inc
and
mov
ja
push
jbe
rolb
repz
push
lret
push
push
loope
adc
shlb
test
pop
xchg
in
imulb
outsb
movsb
push
cmp
cmp
fcmovnb
jl
stos
push
repnz
sbb
shlb
fsubl
mov
les
push
mov
mov
fwait
daa
mov
adc
pusha
data16
pop
dec
gs
repnz
jmp
jne
inc
add
stc
xor
fnstenv
xor
add
cmc
test
sbb
mov
sbb
jg
mov
or
push
and
mov
fnsave
or
jns
cmp
lods
lds
xchg
and
es
int
leave
test
and
push
jo
icebp
fmul
cmp
xlat
dec
lods
lret
pop
mov
push
dec
jge
xchg
neg
fwait
lahf
pop
gs
pop
or
out
insl
inc
and
leave
jmp
mov
jno
ja
sbb
cmp
add
xchg
or
mov
pop
lea
mov
arpl
lret
push
jnp
mov
mov
call
mov
shrl
pop
jecxz
mov
stos
xchg
xor
jae
mov
iret
cmp
and
inc
dec
into
cmpsl
sbb
lret
lods
dec
sbb
gs
mov
add
fiadds
lcall
repz
and
push
mov
mull
fisubrs
mov
xor
jmp
or
cli
dec
jns
inc
add
inc
add
idivl
sub
and
push
inc
cmp
pop
pop
push
cmp
push
stos
inc
mov
cmpsb
lods
gs
jb
shlb
lods
mov
add
addb
ds
ds
ljmp
nop
xchg
inc
jne
mov
call
mov
mull
pop
adc
mov
cwtl
push
mov
je
lret
mov
push
pop
xchg
rolb
stc
sbb
jne
push
push
fdivl
test
loop
in
lods
ret
movsb
stos
mov
lock
pop
inc
int
cs
cmp
daa
out
iret
cmp
roll
leave
cmpsl
cmp
lret
movsb
icebp
pop
dec
insl
aad
xlat
cmpsb
stc
notl
fistpll
test
lahf
call
outsl
fistl
lds
das
jmp
imul
cmc
inc
imul
cltd
pop
lods
ret
cmpsl
or
repnz
inc
jne
mov
mov
or
jno
outsb
add
mov
fnsave
loop
cmc
cmp
loopne
lods
lds
xchg
and
pop
xor
pop
dec
or
sarb
pop
ss
mov
shr
lods
dec
jecxz
jb
xlat
mov
jle
enter
or
or
add
dec
push
les
pop
cmp
jns
pushf
enterw
pcmpeqd
push
mov
test
bound
in
and
or
adc
popf
movsb
lcall
dec
xchg
call
cmp
pop
or
mov
cld
scas
mov
push
sbb
mov
mov
inc
jg
movsb
jl
dec
lock
xchg
scas
mov
inc
inc
pop
or
pop
shl
mov
test
lahf
mov
les
aaa
dec
sub
jecxz
lods
mov
popf
adc
shl
jp
lods
xchg
add
jb
aas
fs
or
dec
add
sbb
cmp
andb
pushf
sbb
pop
cltd
loopne
or
add
pop
add
out
cwtl
sub
xor
cmpsb
inc
xchg
push
gs
push
lods
dec
test
mov
test
dec
xor
and
adc
mov
lret
inc
xor
clc
in
cmp
imul
rolb
std
aad
cmp
add
aas
jmp
es
and
es
mov
icebp
and
jns
inc
lea
pushfw
movsl
lods
aas
fsubrs
or
pop
mov
nop
inc
xchg
fisubrl
sbb
mov
stos
lods
sub
jae
mov
pop
inc
xor
mov
je
inc
inc
jecxz
test
incb
dec
scas
insb
cmp
gs
lret
and
dec
out
adc
inc
sbb
sbb
outsl
fisttpl
jae
inc
daa
mov
flds
and
mov
test
fs
sti
or
xchg
pop
lret
inc
pop
je
cwtl
add
or
or
mov
fcmovnu
sbb
pushf
xor
iret
mov
lods
mov
jns
aas
loop
lds
and
jle
test
and
popa
xor
dec
adc
int
mov
lods
roll
lahf
lret
mov
popa
ja
jecxz
fwait
lahf
insb
jns
pop
gs
repz
jno
and
aad
das
test
aas
jmp
insl
ret
ja
add
mov
cmp
adc
lods
decb
jns
and
in
sub
cmpsb
or
aaa
push
jecxz
sub
out
rcrb
adc
inc
xchg
sbb
insb
stc
sbb
pusha
sub
mov
scas
cld
dec
sub
lock
push
sbb
loope
adc
xchg
sbb
cmpsl
sahf
dec
mov
pop
or
sbb
adc
push
adc
out
fwait
adc
lret
pusha
mov
jb
in
fs
or
outsb
add
sbb
cmp
addb
mov
pop
repz
and
inc
add
pop
add
shlb
pop
fcoml
cmp
push
cmp
je
mov
xchg
and
sub
jo
adc
or
dec
cmpsb
je
cld
fiaddl
loopne
pop
adcb
movsb
inc
ljmp
imul
sbb
inc
xchg
sbb
mov
jp
pmaxub
add
repnz
lock
in
jecxz
xor
fucomip
int3
inc
mov
cwtl
stos
pop
data16
mov
add
sbb
pop
xchg
call
scas
add
insb
inc
sub
es
push
push
add
adc
xor
jp
mov
notb
jo
push
pop
xchg
ret
dec
cmp
lock
test
mov
loopne
sub
imul
adc
xchg
pop
adc
int
pop
cmpsb
inc
lret
fwait
push
lods
or
mov
orl
adc
pop
dec
icebp
shll
shr
notl
push
dec
sbb
mov
shlb
scas
inc
mov
sbb
inc
imull
pop
xor
push
aas
fs
lods
inc
js
jno
jae,pn
jae
addr16
hlt
jp
dec
sbb
sub
jmp
push
test
xor
insl
movsb
cmc
cmp
arpl
lods
xchg
and
jno
test
adc
inc
aas
xchg
push
adc
out
mov
bound
mov
pop
jne
mov
dec
inc
mov
in
bound
imul
flds
std
mov
insl
test
loope
cmc
add
imul
add
popf
jbe
pop
jns
dec
lea
movaps
addl
ficompl
pusha
sub
push
data16
inc
xchg
and
and
stc
sbb
adc
and
dec
sub
mov
xchg
pop
cld
push
sbb
test
dec
lods
xor
pop
dec
or
and
lret
adc
sbb
sti
xor
push
xchg
xor
int
add
outsb
stc
je
cwtl
add
push
jnp
mov
fiadds
clc
mov
cmp
jecxz
xor
add
or
in
dec
lahf
add
jbe
add
dec
push
fsubl
lcall
cli
test
insb
jbe
mov
lret
sbb
or
std
mov
jle
lock
mov
or
movsb
lods
dec
fcmovne
sbb
scas
or
movsl
ret
add
in
pop
les
ret
sub
xchg
lcall
nop
addr16
mov
iret
sub
sbb
in
xor
out
int3
rorb
xor
mov
int
add
pop
and
jbe
sbb
test
mov
mov
push
push
scas
es
test
test
mov
and
and
jbe
push
rorl
lret
jl
jg
jo
push
inc
xor
or
jnp
test
push
jb
cmpsb
cmp
inc
mov
push
sbb
xchg
sbb
sub
cltd
aam
fwait
test
mov
popf
mov
fiadds
clc
mov
loope
push
in
xor
mov
pushf
push
das
testb
mov
imulb
xchg
icebp
outsl
adc
sti
mov
mov
and
enter
andl
sahf
inc
mov
dec
cmpb
lret
into
fadd
sub
pushl
jbe
fsubl
in
mov
add
mov
mov
mov
enter
or
fidivrs
mov
stos
sbbb
imul
mov
mov
push
jne
imul
pop
cmp
js
pop
arpl
scas
sti
je
out
fidivrl
inc
xorb
mov
cmp
fldl
push
cmp
mov
mov
aad
adc
unpckhps
mov
rorb
std
push
xor
loope
xor
sbb
pop
jne
fdivl
gs
lret
leave
cmp
sbb
push
imul
imul
fwait
inc
not
notl
xor
or
in
out
adc
sub
push
sbb
sbb
jno
outsb
push
sub
cmp
fnsave
loop
cmc
cmp
loopne
lods
lds
xchg
and
dec
inc
int
push
leave
lods
jmp
sub
push
and
add
inc
dec
setnp
lahf
lret
insb
cmp
push
push
push
jne
adc
jb
cld
dec
inc
repnz
mov
sahf
mov
push
out
int3
testb
pop
into
lcall
es
call
repz
push
mov
push
mov
lods
jb
push
push
pop
scas
mov
mov
int3
hlt
in
lods
or
movsb
movsl
fimuls
in
loop
mov
mov
pop
shrb
push
test
jmp
push
movsb
push
popf
mov
mov
jmp
adc
addb
mov
jae
in
add
xor
test
xlat
sarb
aad
push
sbb
cmp
jno
dec
imul
xor
aas
out
xor
adc
xchg
sub
cmp
push
fistps
add
fadds
jp
imul
or
mov
add
inc
dec
movzwl
lahf
lret
push
aas
mov
xchg
xor
out
pop
xor
repz
or
and
je
jmp
adc
ja
jl
mov
xchg
mov
cwtl
cmp
icebp
add
lods
popa
jbe
popf
sub
mov
iret
test
jo
pop
mov
clc
pop
pop
push
inc
scas
sbb
pusha
mov
pop
dec
pop
jecxz
call
sub
mov
ljmp
push
pop
lret
loope
test
mov
or
push
xor
gs
mov
gs
das
jecxz
leave
aam
sbb
push
dec
xchg
xor
fnstcw
in
add
dec
pop
test
fmul
mov
jno
notl
int3
in
addr16
xchg
or
or
repnz
fidivs
push
shlb
or
pop
mov
fwait
and
xor
pop
nop
jns
jmp
lods
lds
xchg
and
inc
inc
int
add
test
push
dec
popa
xor
adc
mov
lock
shl
in
ficompl
ja
and
pop
out
pop
daa
and
out
mov
stos
adc
add
dec
lds
ret
stos
push
loope
test
mov
fwait
cmp
add
adc
inc
mov
iret
mov
movsl
sub
jge
jae
pop
lds
push
jle
pop
pop
pop
inc
scas
sbb
arpl
jecxz
in
mov
out
mov
push
xorl
mov
sti
jg
mov
roll
test
lods
outsl
jbe
cmp
jp
gs
mov
gs
fucom
jmp
jne
add
xchg
xor
lods
adc
push
add
add
add
test
pop
lret
mov
jno
repz
sbb
or
jno
sbb
sub
fnsave
std
shl
lods
mov
insl
sub
xor
adc
mov
cmp
repz
dec
sbb
pop
scas
sbb
call
cmp
in
push
pop
sub
add
dec
dec
punpckhwd
lahf
lret
lcall
lods
repz
lods
adc
scas
aam
pop
aaa
fsubrs
cld
sbb
loope
addb
sbb
lods
mov
jnp
push
adc
sub
push
pop
mov
les
xorb
cmp
sbb
scas
mov
pop
xor
pop
mov
in
inc
xchg
ds
jne
notl
sub
mov
xchg
test
xor
loope
divb
sbb
aam
dec
gs
and
mov
jmp
pop
dec
subl
cmpsl
jae
jne
mov
push
in
mov
iret
mov
pop
lds
cmpsl
inc
ret
stos
push
mov
pop
xchg
cmp
call
pop
sbb
les
testb
push
in
mov
and
fidivrl
cmp
in
push
cmp
adc
mov
lahf
xchg
and
dec
lret
ja
test
mov
movb
jb
test
outsb
mov
icebp
sbb
push
jmp
pusha
cmp
out
pop
sbb
mov
xchg
pop
mov
out
pop
scas
cmp
out
adc
jmp
bound
jmp
or
ja
gs
mov
cmpl
jnp
sbb
xchg
inc
idivb
and
movsl
cmc
pusha
icebp
xor
mov
pop
mov
lock
xchg
push
outsl
push
inc
dec
xchg
pop
jecxz
repnz
lods
enter
ss
adc
je
dec
sub
xchg
std
push
rcl
loope
shrl
cmp
mov
gs
lods
clc
jmp
lods
ss
outsl
fstpt
xchg
mov
test
movsl
lds
mov
stos
mov
test
pushf
xchg
jle
jp
inc
dec
lahf
push
pop
push
xchg
test
inc
insl
cli
jp
jmp
mov
sub
mov
shll
inc
test
outsb
mov
mov
jg
shlb
cmc
push
insl
mov
stos
sbb
xor
movsl
jp
sub
scas
mov
dec
inc
jl
jns
lds
push
bound
and
loope
mov
inc
jo
jp
in
movsl
int
mov
int3
mov
cmp
movsl
mov
iret
push
mov
xor
mov
repnz
inc
lret
cli
push
mov
jbe
jge
loop
and
pop
orl
push
bound
stos
sub
inc
stos
stos
dec
push
fwait
xor
mov
push
js
lahf
stos
les
rcrb
mov
mov
pop
movsl
mov
lret
mov
out
push
add
cs
add
hlt
inc
int
mov
mov
dec
insl
dec
outsb
jg
mov
lds
mov
push
push
mov
roll
sub
jns
inc
aas
mov
andb
sarl
add
imulb
inc
popa
and
mov
push
test
push
in
mov
lcall
inc
fsubrl
insl
jne
and
xor
inc
int
movsb
inc
or
mov
ja
inc
push
mov
sti
jo
mov
repnz
outsl
rolb
mov
push
mov
cmpsl
std
movsl
iret
je
ret
or
icebp
hlt
push
mov
adc
lea
jnp
ret
mov
sub
or
add
pop
mov
movsl
adc
dec
lret
lock
cs
neg
inc
int
stos
pusha
sbb
fisubl
fisttpl
push
mov
mov
mov
cmp
xchg
mov
out
cld
xchg
pop
pop
mov
les
movsl
mov
cmp
mov
ds
push
sti
inc
pop
mov
sbbl
dec
cmp
inc
ret
fstps
mov
and
adc
subb
arpl
insb
cmpsb
std
fcomps
mov
daa
cmpsb
jp
in
leave
ret
jbe
cmp
sbb
cmpsl
push
mov
push
xor
adc
std
pop
mov
addr16
in
cltd
scas
mov
push
cmp
clc
fstps
insl
clc
fstps
insl
scas
jb,pt
push
pop
ficoml
cltd
xchg
dec
and
inc
lret
sub
in
xor
pop
mov
negl
xchg
lret
mov
adc
xlat
aad
inc
lret
das
clc
not
faddl
mov
stos
cmp
inc
jae
xchg
mov
xor
and
push
sbb
cmpsl
jge
lahf
cltd
pop
jns
mov
mov
or
cltd
loop
dec
add
repz
and
and
shrb
adc
in
jns
mov
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
mov
js
inc
mov
adc
in
pop
mov
and
xlat
push
test
repnz
imul
jbe
das
mov
cmc
or
movsl
loopne
addr16
xchg
stos
andb
xlat
pop
dec
add
xlat
pop
dec
add
push
mov
inc
pop
scas
sbb
mov
dec
mov
in
cmp
xor
loop
in
cmp
xor
loop
mov
dec
pushf
clc
fstps
insl
cltd
xor
bound
pop
insl
fisubl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
push
cltd
mov
cld
and
call
test
outsl
adc
jns
or
fdivr
fstps
insl
xor
fnstsw
pop
dec
dec
scas
xchg
push
mov
fidivrl
into
inc
out
pop
dec
clc
fstps
insl
or
push
inc
mov
sub
jmp
ss
xorl
insl
lods
data16
push
mov
jl
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
clc
fstps
insl
xor
and
call
cmp
xchg
icebp
sub
cmp
lods
xchg
sub
js
cli
push
stos
sub
sbb
lods
pop
xor
icebp
fisubl
mov
lods
stos
fstpl
mov
dec
push
pushf
cmp
jae
inc
xor
xchg
pop
sub
mov
jo
sub
cmp
in
mov
xor
push
jb
inc
repz
orb
dec
or
push
dec
jp
sbb
hlt
add
mov
iret
xchg
in
sar
inc
cmp
hlt
xchg
push
inc
mov
out
lods
aas
fucomi
lret
or
mov
jge
and
mov
dec
push
and
sub
jle
arpl
subb
xchg
in
mov
xchg
in
push
sub
cld
pop
jmp
cli
addr16
mov
xchg
pop
xchg
jo
mov
pop
xlat
mov
data16
mov
ret
sbbl
or
out
push
mov
jmp
ret
pop
push
lret
or
jl
sub
cmp
inc
in
xorl
daa
sub
jecxz
mov
fldenv
adc
addr16
lods
scas
mov
testb
mov
adc
std
out
insb
rcrb
xor
out
out
mulb
mov
int3
loopne
mov
mov
push
cmc
push
repz
and
daa
sarb
movsb
shlb
pop
cmpsl
ret
adc
add
mov
xchg
shr
fs
test
push
mov
mov
sbb
mov
xor
push
jge
ds
and
rorb
inc
hlt
cmpsb
mov
out
int3
rcrl
ficoms
repz
icebp
inc
adcl
mov
inc
ja
xchg
pop
fwait
push
mov
clc
popa
insl
imul
cmpb
shrl
pop
sbb
add
mov
ja
jecxz
and
adc
lods
xchg
sbb
push
jmp
ja
dec
lahf
mov
rcrl
aam
xchg
mov
or
and
jge
fbstp
pop
push
and
adc
into
fcompl
cmp
pusha
scas
stc
push
and
les
dec
inc
inc
das
in
out
out
sbb
jae
pop
cmpb
stos
lods
xchg
jl
repz
xor
push
scas
mov
arpl
or
jbe
in
mov
cmp
and
mov
rcr
lret
loop
cltd
aam
sbb
xchg
xorb
sti
xor
xor
lods
sub
leave
ret
mov
jl
cmp
loopne
xor
sbb
call
mov
scas
cld
adc
or
test
push
cmp
imul
pop
dec
imul
shll
push
or
and
push
stos
test
pop
mov
xor
leave
lcall
inc
pop
mov
subl
xchg
pop
pop
inc
jbe
out
mov
fisttpll
test
cld
add
adc
mov
and
push
lahf
pop
out
fcmovnu
lea
sbb
inc
and
push
int3
lahf
scas
xor
out
fldenv
ret
lock
andb
test
ret
jecxz
nop
ds
subb
jns
stos
cld
arpl
add
adc
sub
pop
clc
push
movsb
push
cli
jns
jne
adc
or
or
jge
dec
cli
enter
mov
sub
popf
sub
fwait
clc
cld
push
or
xlat
lahf
push
dec
bt
aam
dec
in
jge
pop
lods
and
jb
push
cli
dec
push
sub
lret
daa
ljmp
or
push
jle
bound
push
es
pop
inc
push
je
ds
mov
jns
or
xchg
adc
hlt
xchg
push
sub
lahf
clc
rcl
add
aam
or
inc
negb
push
es
jmp
jge
and
scas
pop
imul
dec
mov
mov
lcall
pop
ss
mov
mov
ret
out
imul
fwait
mov
fwait
mov
dec
cmp
out
out
cltd
addr16
pop
mov
int
jp
int
mov
mov
stos
inc
cli
iret
aaa
popf
dec
xor
cli
fsubp
mov
mov
arpl
jns
call
cwtl
in
repz
leave
adc
scas
pop
cltd
inc
fdiv
add
pop
inc
rcr
int
add
aas
mov
jno
hlt
repz
ret
jb
jae
dec
and
mov
icebp
sti
dec
cltd
xchg
aam
or
pusha
popa
push
stc
mov
dec
sub
adc
mov
sbb
lret
xor
inc
shrb
adc
bound
push
xor
mov
stc
jecxz
inc
mov
jae
decl
adc
ja
fildl
lcall
adc
jmp
hlt
sub
insl
and
or
push
xchg
add
cwtl
jecxz
loopne
sub
bound
jo
pop
cmp
dec
or
xor
fwait
lcall
adcb
ja
fadd
je
xchg
scas
mov
mov
dec
daa
arpl
in
mov
adc
movsl
or
jmp
mov
cmpsb
jbe
imul
iret
push
xor
pop
gs
xchg
loopne
ret
sbb
movsb
cmp
adcl
orl
xchg
aad
into
nop
pop
jb
adc
pushf
aam
add
adc
xchg
push
jmp
cmp
sub
dec
fdivl
pop
sbb
inc
into
lcall
inc
pop
mov
add
mov
and
enter
pusha
inc
sbb
jecxz
pop
pop
mov
es
std
dec
outsl
jmp
jge
push
iret
mov
xchg
daa
mov
sub
adc
pusha
cmpsl
cmpsb
jmp
cmp
aad
das
out
test
fisttps
cmpb
cmp
mov
jnp
shrl
push
mov
roll
add
push
lahf
push
and
push
stc
jno
jb
push
lea
fadds
sbb
xchg
std
movsl
cli
out
idivb
dec
push
mov
es
lahf
icebp
hlt
jno
arpl
inc
adc
vmulps
mov
test
pop
in
sbb
cmp
fcmovnu
pop
out
jle
pop
xor
pop
add
cmp
push
push
stos
cmp
sbb
xchg
ds
or
push
ret
push
pop
push
orb
mov
add
xor
add
jne
movsb
mov
sarb
inc
and
pop
shl
cltd
xorb
mov
adc
add
ds
cld
pop
rorl
cmp
icebp
subl
gs
xchg
inc
insb
sub
loope
pop
je
test
jg
xchg
ret
mov
jo
adc
push
pop
ds
adcl
cmpsb
js
cmc
sbb
xchg
or
add
inc
add
jno
fistps
in
das
imul
mov
mov
or
fisttpll
aas
mov
pop
mov
mov
pop
pop
dec
inc
inc
movsl
xor
add
jmp
outsl
setl
lods
fildll
inc
test
fdivs
shrb
stos
lret
das
sahf
loope
push
jmp
cld
enter
jl
xchg
fcmove
test
addl
neg
outsb
test
mov
pop
push
das
push
loope
ret
mov
xorl
mov
sahf
cmp
add
xor
int
out
addr16
arpl
cmp
hlt
pop
sub
add
add
adc
insl
adcb
push
mov
lcall
push
hlt
andl
iret
sar
stc
shrl
lcall
or
cs
xchg
ds
test
std
adc
xor
ljmp
and
faddl
imul
jl
mov
or
gs
popf
xor
fs
cmp
ss
pop
add
cmp
push
adc
mov
aad
jle
jo
sub
xor
aad
inc
inc
mov
sbb
jno
nop
add
fwait
cmp
add
sti
or
out
es
test
mov
lods
push
iret
mov
loop
push
outsb
mov
push
test
imul
sub
xchg
fsubr
sub
jg
into
int3
adc
pop
div
dec
hlt
pop
loope
in
lods
imul
adc
leave
sbb
mov
int
ja
and
lods
and
mov
mov
jno
leave
leave
int
in
jp
xor
pop
mov
add
jmp
cmc
mov
addb
cmp
jmp
icebp
out
xorps
push
mov
jns
imul
dec
js
test
mov
pminub
flds
insl
nop
mov
dec
xchg
addb
out
xor
js
mov
mov
outsb
in
and
and
inc
sbb
rcrb
jae
lock
in
jns
push
sub
mov
dec
in
or
popa
subl
cmpsl
lods
fs
xor
add
lock
xchg
ja
int
jl
test
nop
test
cmp
or
adc
sub
addr16
ficoml
cmp
aam
outsb
pop
jecxz
xor
scas
test
cmp
push
cld
popa
mov
mov
mov
test
fwait
aaa
stos
mov
in
les
sbb
xchg
adc
ffree
cmp
cmp
push
inc
push
addr16
bnd
cmpsl
xchg
xchg
add
lds
or
dec
push
jg
push
lock
sub
or
sub
enter
pushf
rcrb
push
adc
pop
cmp
or
imul
dec
clc
dec
inc
icebp
loopne
add
pop
or
inc
fdiv
outsl
jne
addr16
aam
call
ljmp
insb
das
xlat
sbb
mov
xchg
lock
push
enter
loop
lods
pop
add
fcompl
or
mov
loope
sbb
hlt
rcrl
and
pop
or
lods
pop
or
mov
cmp
imul
das
fisubrs
mov
rcll
aam
pop
aad
dec
ficoms
loope
dec
pop
fs
mov
jle
fldcw
mov
push
xchg
jo
adc
push
mov
dec
push
andl
cmp
scas
fwait
or
push
insb
mov
pop
and
mov
mov
pop
mov
push
repz
or
test
sbb
add
jg
mov
xor
pop
sub
in
cmp
fisubl
or
scas
into
pop
inc
jo
push
rorb
lock
rol
decb
xchg
pop
dec
and
in
es
push
into
mov
sub
xchg
sub
subl
or
ret
icebp
cld
stos
and
fiadds
cmp
out
add
cmp
loop
cmp
or
fistl
xlat
dec
lds
jne
int
push
std
or
dec
iret
int
movsb
lret
mov
jl
jp
fs
jae
dec
and
mov
repz
push
mov
and
mov
cs
loopne
loopne
jbe
push
fs
inc
dec
mov
sub
aaa
jae
mov
inc
call
and
cs
fwait
stos
lds
dec
mov
test
sbb
js
jg
sbb
jae
adc
push
jg
inc
mov
iret
sarl
pop
lret
test
xor
mov
push
mov
cld
inc
xchg
xorl
xor
stos
outsl
mov
lcall
cmp
jecxz
dec
mov
xor
inc
mov
outsb
out
jle
test
stc
inc
sbb
out
popl
mov
dec
mov
or
inc
scas
mov
call
je
jle
clc
jp,pt
dec
les
inc
dec
filds
sbb
or
cmp
pop
dec
roll
cmp
xchg
cmp
jo
sub
push
adc
mov
mov
mov
mov
dec
jp
fidivs
aam
cltd
xor
stos
add
mov
out
sub
cmp
ss
movsb
hlt
mov
mov
sahf
enter
xor
mov
dec
scas
cmp
stos
add
push
sub
add
faddl
in
and
inc
outsb
jl
sbb
hlt
and
les
je
adc
cmp
fstps
jge
daa
inc
push
xchg
adc
sahf
int3
inc
xor
jnp
mov
push
into
xchg
sti
add
push
push
jnp
and
mov
xor
xchg
fistl
lea
push
inc
test
sahf
push
fwait
fs
fcmovnu
insb
pop
incl
lcall
es
addb
repnz
jge
sbb
fbstp
lret
mov
cmp
add
enter
mov
dec
lahf
mov
es
xor
aad
mov
test
in
addb
stos
adc
xchg
dec
mov
add
xor
les
filds
jle
ds
test
nop
xchg
jge
mov
push
adc
cltd
leave
nop
fadds
cltd
lcall
xor
daa
and
and
movsl
scas
xor
dec
ds
and
mov
sub
mov
loope
ds
pop
dec
aam
jno
lahf
insb
lds
cmp
stos
mov
into
dec
loopne
and
and
sub
fwait
jne
dec
subl
movsb
mov
xlat
in
push
leave
inc
push
arpl
es
push
cld
mov
shrb
xchg
dec
push
jo
pusha
mov
dec
repnz
jge
add
mov
aam
loop
into
shlb
test
mov
ret
shl
pop
mov
inc
out
scas
movsb
pop
out
outsl
sub
ja
pop
ret
dec
fisubs
inc
pop
orb
or
ja
das
mov
mov
fwait
lock
cltd
faddl
pop
pushf
leave
addr16
mov
out
mov
inc
pop
adc
std
dec
int
cmpsb
add
jb
rorl
adc
aam
fistl
scas
xchg
hlt
sbb
jne
adc
les
rorb
and
pop
insb
out
and
fstpl
cld
shlb
adc
js
in
mov
sub
mov
cwtl
and
mov
xchg
notb
shlb
jecxz
inc
xorb
cmp
bound
mov
pushf
mov
dec
xor
mov
cmpsb
sbb
cmpsb
xchg
mov
xchg
je
fistl
inc
repz
cld
bound
lods
sub
es
inc
outsb
scas
divl
in
into
lahf
mov
mov
call
mov
adc
xor
es
insb
adc
and
inc
push
fadds
xor
in
lods
movsb
jecxz
repz
add
mov
iret
shrl
or
fdivrs
jl
lea
cmp
sbb
adc
jns
mov
add
shll
push
enter
dec
sub
pop
je
fadds
leave
lods
mov
push
mov
sbb
and
rcrb
cmp
enter
xchg
push
xor
mov
push
mov
incb
inc
jae
lcall
xchg
subb
fwait
jnp
std
fnstcw
stc
push
mov
iret
inc
fisubl
lcall
movsl
cmp
mov
jmp
sbb
adc
leave
dec
hlt
xor
cmp
lea
ss
in
jbe
aas
insl
inc
ret
sahf
insb
jecxz
sbb
mov
cld
cltd
popa
cmpsl
or
mov
push
mov
pop
test
pop
call
adc
orl
lock
adc
pop
in
mov
pop
mov
or
je
lods
adc
aaa
jg
sbb
inc
xchg
xchg
xchg
pop
push
lcall
or
mov
out
roll
cld
pop
sub
mov
push
cmp
lcall
inc
and
gs
pop
dec
clc
inc
dec
fidivs
adc
push
dec
and
daa
sarb
rcl
push
mov
cmp
pop
add
xor
and
pop
add
fimuls
lret
adcb
nop
outsl
fs
into
mov
and
das
imul
mov
push
aas
loope
inc
ds
cmp
add
outsb
mov
inc
insl
cmpsl
ds
mov
addr16
lcall
call
aas
xchg
push
mov
imull
push
adc
add
sub
cld
outsb
jo
das
jne
divl
int3
sbb
sub
sbb
xor
std
mov
ffree
sbb
cmp
or
add
les
jp
mov
add
test
jg
inc
mov
push
mov
dec
mov
test
push
jae
push
int3
lahf
pop
jmp
insl
mov
imul
and
repz
ds
ss
inc
mov
popa
jns
and
int3
mov
pop
sbbl
mov
dec
and
sbb
mov
fistl
inc
lcall
add
and
ja
mov
add
push
push
inc
movsb
sbb
mov
sbb
iret
fs
rorb
imul
cwtl
jno
cs
mov
add
test
int3
cmp
repnz
fnstsw
daa
cmp
adc
inc
shrl
gs
adc
or
pop
pushf
xor
mov
repnz
cmp
mov
push
mov
lret
dec
ja
and
xchg
add
mov
out
rcrb
mov
inc
add
sub
gs
push
or
mov
adc
bound
pushfw
es
push
repnz
rcrb
mov
xchg
enter
sub
mov
xchg
cmp
xchg
in
sbb
lock
pop
imul
fadds
ret
adc
cwtl
lods
and
fs
xlat
push
dec
cltd
out
cltd
pop
pop
rcrb
sar
adc
data16
incl
jno
mov
cmp
cld
inc
repz
out
pop
push
lret
cmp
or
push
insb
push
rcll
inc
out
and
mov
jecxz
lock
sub
dec
out
mov
in
rcl
cmc
fwait
add
sbb
lods
sub
pop
lods
rcrb
fbstp
out
mov
mov
out
call
flds
mov
and
cmp
lahf
dec
stos
adc
test
xchg
lahf
std
pop
std
xor
es
movsl
add
mov
push
push
scas
or
pop
adc
pushf
mov
and
fucomip
ljmp
mov
push
sbb
arpl
loop
stos
dec
fst
fistpl
gs
pop
add
inc
jp
dec
jecxz
xor
sbb
out
inc
mov
cmp
mov
mov
lock
icebp
popf
in
subb
clc
dec
pop
jne
divb
imul
clc
divb
adc
push
mov
jns
jmp
rcrb
pop
fadd
outsl
rcll
shlb
or
mov
std
loopne
or
movsb
xchg
mov
jge
das
fsts
add
sbb
push
or
mov
xor
add
test
xchg
mov
ljmp
or
out
push
fs
gs
rclb
repnz
lds
les
repz
out
add
rorl
xchg
into
jg
push
clc
xchg
dec
pop
jnp
dec
lcall
sub
mov
ret
cltd
shlb
xlat
dec
mov
movsb
adc
nop
lea
popf
nop
jns
jnp
ret
sbb
lcall
cmc
pop
sarb
adc
or
and
loopne
loopne
xor
fldl
jns
ret
pop
adc
jge
jp
imul
mov
nop
mov
adc
popa
sub
pop
shll
mov
mov
dec
xchg
pop
aas
daa
jle
mov
jmp
and
or
mov
jbe
movsl
xchg
leave
mov
loope
sub
or
popf
popa
aad
pop
data16
out
ret
xor
mov
mov
test
andl
dec
test
fisttpl
pop
fld
pop
jmp
mov
jle
add
loop
das
out
cmc
test
push
jl
push
xchg
dec
gs
std
or
pop
jl
push
iret
in
cmpsb
je
sahf
sbb
or
aad
mov
clc
les
mov
daa
int
xchg
pop
cltd
in
cmc
jmp
jno
push
outsl
jmp
repnz
std
movsb
xchg
mov
push
or
hlt
bound
or
fnstcw
iret
xchg
clc
mov
in
cmp
mov
pop
insb
jmp
adc
cmp
int
pop
stos
call
jmp
add
aad
xchg
jb
push
jge
pop
cmpl
xchg
xchg
jp
cmc
xorb
jnp
repz
pop
repnz
xor
pop
jnp
mov
insl
sahf
sbb
inc
jp
scas
fisubrl
push
stos
or
rcll
insl
mov
clc
push
and
mov
popa
add
mov
dec
into
fsubrs
in
sub
addr16
mov
add
push
dec
cmpsl
or
test
cwtl
dec
adc
and
cmp
sti
jno
insb
push
xrelease
ficoml
dec
dec
xlat
or
sbb
das
shrl
enter
mov
insl
add
scas
fnstenv
cmpsb
cli
loope
fisubrl
cltd
push
push
pushf
mov
sbb
cmc
pop
sub
sub
dec
outsl
jo
adc
xchg
jmp
stc
addr16
sbb
stos
pop
xor
frstor
xchg
inc
add
pop
dec
or
mov
insb
mov
jns
pusha
mov
mov
jp
call
arpl
mov
sbbb
std
cli
test
pop
mov
loopne
push
out
xor
call
stos
cmp
inc
cmpsl
mov
push
lcall
scas
or
mov
push
cmp
cltd
ret
stos
popa
inc
imul
cmpsb
jns
push
jle
push
rcr
or
fidivrl
cs
xchg
cmp
sbbl
dec
pusha
movsb
cmpsl
fisubrl
pop
insl
clc
xchg
call
fwait
cs
jle
testb
in
sub
and
sub
lods
daa
mov
outsb
es
out
das
out
xor
dec
test
or
popl
test
jo
add
cli
aaa
jbe
inc
jle
lock
mov
daa
fadd
jnp
hlt
push
or
ret
mov
xor
inc
push
pop
inc
daa
popa
cld
add
jp
jnp
loope
shrb
nop
mov
adc
jecxz
in
dec
repz
loope
lds
inc
jbe
adc
shlb
cmpsl
cltd
incb
mov
pop
clc
xchg
les
scas
mov
jb
mov
mov
fiaddl
shlb
cmp
ds
xchg
jmp
add
stos
and
sbb
test
dec
and
imul
aas
jmp
pop
lret
fisubrs
out
jo
inc
xchg
faddl
mov
sbb
ja
mov
cmp
xor
sti
mov
jne
xchg
vcvtsi2sd
xchg
outsb
cmc
aaa
jno
test
les
xchg
jnp
and
and
mov
outsl
mov
pop
fcmovnu
inc
ds
pop
and
lds
add
lret
testb
push
cmp
sub
aaa
div
fisubl
imul
outsl
divl
pop
pop
mov
lock
icebp
mov
xor
movsb
jp
fidivrl
push
dec
mov
jne
jns
push
pushf
les
push
hlt
repnz
stos
outsl
int3
adc
ror
xchg
xchg
add
scas
or
push
xor
add
sub
lcall
je
jo
outsb
lcall
sub
xchg
xlat
mov
dec
fidivrl
ficoml
js
bound
mov
dec
pop
hlt
mov
dec
xlat
mov
cltd
and
out
orb
icebp
sub
ljmp
add
cmc
lock
xchg
xor
ret
fsts
fwait
mov
shlb
mov
mov
xor
jle
sub
dec
jecxz
psllq
or
inc
mov
add
mov
jmp
dec
repz
stos
pushf
enter
jns
adc
adc
loop
jle
pop
dec
aas
xor
xor
and
and
test
out
in
or
mov
hlt
fisttpll
incb
xchg
sbb
stos
das
jle
cmp
xchg
lds
push
dec
mov
cmp
or
xor
cmp
inc
gs
gs
adc
cld
xor
cmp
sbb
mov
mov
pusha
popa
adc
nop
pop
fmul
or
mov
adc
mov
and
pop
into
outsb
push
mov
in
and
add
icebp
ja
outsl
lcall
dec
push
mov
into
aam
push
shlb
jl
incl
adc
sub
lret
subl
jae
xor
fldenv
shrb
jns
cld
mov
pop
rdmsr
push
or
xadd
lahf
add
adc
out
pop
sub
sbbl
ljmp
popa
into
cmp
sub
dec
mov
int
push
sahf
sti
jmp
jnp,pn
aam
ss
aas
pushf
inc
or
gs
test
pusha
ret
dec
mov
and
fs
dec
add
pop
iret
ss
push
jge
lret
add
jae
test
fldenv
push
arpl
ja
gs
push
pop
inc
test
mov
test
cmp
and
das
sub
mov
adc
int3
xor
inc
sahf
push
lods
loop
xchg
pop
outsl
cwtl
pop
jmp
inc
shll
imul
lock
cltd
out
repnz
pop
test
in
jecxz
bound
nop
test
jl
push
insl
or
xor
inc
jp
lret
lret
inc
in
int3
imulb
shlb
adc
das
jo
jle
fistpl
mov
sub
push
sub
jmp
lock
sbb
xor
fdivrl
sub
sub
mov
out
fcmove
push
aam
out
or
mov
sub
inc
addr16
test
lods
loope
jb
xchg
daa
inc
xor
jmp
int
outsl
out
mov
pop
mov
dec
daa
mov
jb
push
cwtl
jecxz
daa
or
sub
addr16
ret
out
cmp
jmp
mov
dec
sarl
sub
insb
ss
pop
cmpl
adcl
inc
inc
pop
xchg
pusha
fldl
aaa
or
dec
nop
aas
and
movsl
pop
cmp
xor
mov
push
jae
pop
pop
inc
test
inc
jle
scas
not
and
pop
frstor
push
add
xor
sbb
ret
loopne
enter
in
sbb
enter
lret
scas
stc
int
inc
daa
jg
add
call
stos
mov
mov
push
jns
mov
aaa
test
cmp
dec
enter
cli
leave
jmp
pop
pop
fimull
jne
leave
push
lock
xor
and
xchg
sahf
fcomip
dec
dec
lret
not
cs
rorl
das
stos
xchg
jg
sub
dec
bound
cmp
mov
cmpsl
shll
nop
adc
testl
cmp
sub
xchg
add
dec
jne
out
pop
or
popa
into
jno
jecxz
aaa
sub
push
lret
mov
inc
jno
jl
filds
enter
je
fcomp
or
icebp
jecxz
adc
out
mov
push
xchg
les
aaa
push
fwait
and
xlat
ret
push
dec
mov
sub
pop
sbbb
xchg
cwtl
shlb
loop
outsb
mov
std
pusha
aad
xor
fidivrs
xor
aam
xchg
sub
dec
test
je
xor
das
aam
fistl
mov
sbb
lods
ret
push
mov
add
rcr
sub
mov
inc
cld
and
xchg
pop
push
and
aam
mov
cmpsl
sbb
bound
in
xor
int
int
test
adc
dec
dec
xchg
add
add
sbb
lock
jmp
out
jp
lea
xor
imulb
lahf
cmp
mov
sbb
into
scas
dec
mov
or
or
or
sbb
pop
ds
shrb
lds
outsb
ficoml
sub
adc
pop
pusha
cs
xchg
decl
or
popf
mov
rcrb
fistpl
and
or
insl
and
xchg
out
mov
lahf
out
or
insb
clc
dec
or
push
aam
sbb
imul
xchg
pop
icebp
cmp
insl
pop
sub
mov
cld
ficoml
cmp
cli
mov
push
pop
je
fs
test
scas
xchg
pop
sub
andl
shl
orl
cmp
into
dec
shrb
fnsave
sub
lcall
arpl
cmpsb
sub
mov
mov
andl
push
outsb
pop
lahf
adc
jl
and
xchg
rclb
cmp
dec
dec
adc
ds
add
jo
out
arpl
ret
lock
dec
and
into
mov
lea
push
out
scas
rclb
cwtl
sub
lret
cld
xor
lods
into
xchg
sbb
shl
rorl
bt
sbb
loop
pop
int
push
and
xor
int
push
jae
push
xor
aas
sub
jle
repnz
mov
loopne
clc
lds
adc
pop
in
cwtl
aaa
stos
mov
push
mov
inc
jbe
or
data16
aam
lods
cli
mov
cmpsl
test
xchg
outsl
push
add
js
xchg
inc
and
push
mov
imul
cli
cmp
sub
or
inc
std
loope
push
or
lods
cmp
mull
and
xor
mov
jns
sti
xchg
jnp
inc
or
mov
aas
jp
fs
pusha
jmp
shrb
mov
push
cs
pop
push
cmp
incl
icebp
mov
aas
das
imul
mov
in
pop
xor
pusha
xchg
lds
jp
nop
popa
push
pop
mov
enter
mulb
addr16
sbb
xchg
rcll
aaa
mov
imul
es
cmp
add
pop
xchg
dec
or
lret
cmp
jo
push
inc
mov
dec
sbb
pop
out
nop
pop
adc
sahf
cmp
xchg
outsl
stc
in
add
jnp
mov
push
cwtl
mul
and
cmpsb
call
cmp
pop
pop
dec
pop
aaa
cmp
fildll
subl
push
fsubrl
in
jne
mov
mov
xor
insl
mov
data16
add
pop
stos
mov
out
mov
dec
nop
test
arpl
sub
mov
xor
adc
cli
mov
and
lods
test
lret
ret
and
cwtl
adc
jo
sbb
stos
ds
sbb
fcom
js
shlb
mov
mov
sub
mov
xor
rorl
cmp
fistps
ret
inc
push
neg
cltd
leave
dec
orb
sbb
lret
add
push
xchg
push
xlat
adc
shr
mov
inc
icebp
sbb
cmc
push
cld
pop
rorl
jns
bound
ljmp
mov
dec
lods
sub
fcomp
or
pop
sub
imul
stc
dec
push
cmp
in
repz
or
fadds
cmp
jno
fisttps
int3
loopne
idivb
loopne
mov
lea
repnz
sahf
in
jmp
pusha
je
call
sub
mov
loop
outsb
sbb
fld
imul
les
mov
cmc
fwait
mov
and
xchg
adc
lea
sti
cltd
or
dec
out
or
adc
and
cld
mov
xchg
jnp
ljmp
movsl
cmovs
call
sbbb
mull
test
je
sar
jne
inc
in
or
test
orb
cmp
sti
sbb
mov
dec
sbb
pop
stc
and
xor
int3
inc
mov
repz
adc
scas
mov
or
push
in
dec
aam
push
push
and
cld
cltd
in
or
mov
add
mov
lret
setb
and
pop
jb,pn
mov
cli
imul
xchg
xchg
repz
jb
xor
in
inc
movsl
not
cmpsl
mov
mov
movsl
out
int3
daa
cmp
rclb
imul
sbb
cmp
sbb
inc
mov
sbb
lahf
mov
jb
out
jg
jle
fsubrp
testb
mov
inc
inc
rcrb
test
push
in
imul
fisubrl
jne
and
out
jmp
fisttps
inc
mov
test
repz
sub
loopne
mov
ljmp
pop
mov
mov
js
std
test
cmp
mov
mov
je
xchg
jle
inc
xchg
jecxz
fdivrp
cs
jne
fwait
ds
add
in
inc
xor
push
std
jp
lds
pop
js
jbe
rorb
lock
mov
adc
mov
out
cmpb
pushf
add
cmp
decl
leave
xor
mov
inc
dec
adc
ret
sti
lods
or
lds
cmc
enter
outsb
push
nop
aad
mov
xor
imul
lods
jo
push
push
sub
ss
inc
sub
in
sub
add
pop
movsb
pop
lret
js
shrl
rcrb
movsb
pop
push
cmp
jbe
aad
xchg
shlb
jp
jns
test
push
mov
out
sbb
into
loope
inc
inc
sbb
jae
mov
pop
ss
cmp
inc
xchg
push
lcall
fimuls
dec
mov
xchg
popa
fwait
ljmp
inc
jne
fdivrs
and
pop
call
dec
lret
call
sub
cmp
jmp
jecxz
test
sbb
pop
pop
aaa
dec
orl
pop
fs
jo
inc
popa
xchg
inc
pop
adc
lock
pop
dec
daa
jg
imul
inc
jnp
cmp
mov
orl
or
adc
mov
daa
pushf
inc
stc
mov
fucomip
adc
jp
jbe
jne
pusha
fxch
add
fstpt
mul
lret
pop
dec
js
mov
cmpsb
or
std
adc
jae
pop
loopne
sbb
pop
inc
xor
inc
push
mov
sub
fsubr
imul
xchg
push
add
out
iret
sbb
fs
dec
pop
pop
mov
xor
or
cmp
lret
sub
cmpsb
mov
call
pushw
pop
iret
cli
mov
push
sbb
leave
ret
push
dec
and
adc
rclb
mov
add
rcrl
fbstp
mov
mov
adc
sbb
leave
call
pop
pusha
scas
jnp
in
ss
push
outsb
pop
fidivl
loope
test
mov
dec
les
xorps
pop
sbbl
pop
imull
mov
jbe
imul
and
insl
mov
mov
notl
mov
std
cs
cli
push
mov
into
sbb
sbb
sub
or
into
push
pop
inc
jge
push
scas
insl
mov
iret
push
das
sub
mov
test
and
inc
mov
push
stc
std
xchg
addr16
mov
inc
out
mov
pop
lcall
fcmove
inc
sahf
test
sbb
iret
lcall
jg
lods
test
xchg
out
stc
sahf
jmp
cmp
sbb
mov
popl
imul
movsl
lods
std
mov
fsubrs
inc
incb
pop
jb
jo
mov
nop
das
pop
adc
clc
jne
mov
pop
in
lods
lret
mov
inc
sbb
pop
push
pop
mov
jge
cli
and
ret
pop
mov
xchg
rcll
daa
pushf
lcall
fdivs
imull
inc
ja
or
movsb
fisubrl
mov
aam
xchg
pop
aas
mov
stc
jle
ja
mov
ja
dec
cmpsl
insb
mov
inc
adc
mov
adc
xor
add
mov
xor
lcall
and
std
mov
iret
or
out
mov
in
imul
mov
mov
xor
xchg
outsl
ds
outsl
lret
jne
nop
dec
cltd
dec
daa
jle
loope
imul
jnp
add
and
cmc
inc
outsb
jmp
loop
jle
sbb
or
aam
pop
xchg
or
fstl
leave
hlt
imul
cmpsl
mulb
stc
in
sbb
dec
adcb
inc
es
sbb
lret
push
jne
fimull
jo
inc
jg
js
add
bound
mov
add
sub
std
ret
movsb
sub
lret
adc
push
and
push
fistps
fisubrs
mov
push
test
aam
lcall
imul
std
and
cmp
orl
dec
add
dec
arpl
add
addr16
mov
xchg
inc
fs
push
xor
mov
or
jbe
stc
mov
lock
xlat
mov
daa
nop
jnp
push
jae
stos
jne
mull
xchg
jge
mov
stc
shlb
xor
mov
xor
xchg
mov
fcoml
xor
sti
add
test
aam
add
fwait
pop
lcall
clc
sbb
mov
and
rep
js
cli
shll
stc
pop
cmp
pop
pop
mov
mov
lods
int3
and
sub
dec
clc
nop
sbb
inc
add
add
mov
cli
mov
or
icebp
jae
jae
popa
sarl
pop
mov
stc
cmp
fbstp
xchg
inc
mov
lods
add
mov
popa
aaa
cmp
adc
jo
mov
sahf
xchg
sbb
addr16
cs
adc
sub
roll
mov
pop
icebp
pop
insl
add
dec
inc
sbb
arpl
pop
inc
or
shl
mov
add
das
dec
mov
xchg
scas
mov
pop
dec
jp
int3
gs
leave
scas
pop
mov
xchg
out
sbb
loop
pusha
adc
mov
mov
test
mov
fwait
insl
pushf
stos
or
mov
pop
jne
jae
xchg
jno
ffreep
je
mov
std
push
dec
lods
adc
mov
add
outsb
sub
pop
dec
popf
fmuls
cmc
and
and
std
addr16
popf
mov
imul
decl
push
in
pop
xchg
test
xchg
mov
lret
jecxz
seto
add
add
insl
push
in
add
test
pop
into
stos
outsb
push
leave
push
mov
jno
test
fcomps
dec
jg
in
mov
push
hlt
pop
or
fsts
mov
mov
and
sbb
testb
push
push
lods
mov
mov
loope
xchg
negb
sub
subb
gs
pop
dec
sub
jnp
cmovnp
es
mov
je
data16
pop
cli
aaa
pop
adc
push
pop
xor
mov
call
leave
pop
or
add
xor
call
orb
sub
in
mov
jnp
lcall
jle
pop
clc
lds
mov
lea
sbb
scas
mov
inc
popa
or
cs
ljmp
out
imul
or
mov
jge
sbb
or
rol
fcmovnbe
idivl
jge
in
das
lcall
mov
inc
mov
fdiv
pop
mov
repz
hlt
pop
push
mov
cld
mov
mov
cmp
sbb
ret
mov
cmp
orb
adc
aaa
lret
outsb
test
cmp
jne
dec
stos
dec
addr16
negb
arpl
xchg
mov
ret
mov
jo
mov
pop
es
scas
adc
or
cli
ljmp
push
imul
add
das
mov
mov
add
jo
cltd
push
pop
jno
pushf
push
cli
ficompl
mov
sbb
mov
popa
cmpsl
mov
stos
pop
ror
jo
lods
pop
cmc
push
xchg
jl
push
xor
jbe
cmp
lea
outsb
aaa
sub
data16
sub
pop
aas
dec
les
fwait
inc
mov
cltd
stc
ficoms
out
adc
xlat
push
fstl
fstps
lock
clc
fwait
test
loopne
bound
repnz
xchg
stos
bound
loopne
cli
dec
shll
out
jbe
rol
fs
jb
fimull
push
popa
xor
lds
hlt
pop
pop
in
icebp
rorb
xlat
sub
cmp
and
rcrb
sbb
push
outsl
pop
nop
mov
hlt
and
shll
pop
push
jp
test
push
push
cltd
ljmp
inc
cmp
sub
jecxz
dec
and
xchg
sahf
pop
sub
sbb
loop
lea
cld
std
mov
stos
push
adc
sub
insl
sub
jne
addb
pushf
cmp
mov
cltd
aaa
lcall
add
inc
mov
jbe
repz
push
cmpsb
inc
jle
xor
mov
int
les
int3
divb
subl
xchg
inc
jp
jnp
ljmp
movsl
arpl
xchg
insb
jle
cmp
shrb
iret
jp
shr
mov
lahf
out
mov
push
sub
mov
and
xchg
test
xchg
and
and
ds
bound
cwtl
imul
sarl
push
cmpsl
enter
decb
sbb
pusha
cmp
stc
and
xor
movsb
dec
jge
loopne
pop
arpl
dec
sbb
sub
sub
and
xlat
cmp
cmp
cld
icebp
sti
jle
jnp
xchg
mov
jne
insl
stc
or
dec
sub
repz
cwtl
les
outsl
out
mov
sbb
int
and
sub
test
and
or
sbb
add
cmpsb
je
jns
ja
add
xor
sub
adc
sarl
lahf
sbb
mov
xlat
pusha
test
mov
mov
and
cmpsl
xchg
cmp
jl
orps
jo
inc
int3
aaa
bswap
xchg
adc
pusha
into
repnz
cltd
cwtl
jl
int
cs
inc
mov
pop
mov
mov
cmp
mov
mov
mov
mov
xchg
ja
cs
fisttps
fsts
aam
adc
sub
jnp
clc
push
pop
lock
jae
jo
xlat
daa
jle
stos
call
mov
dec
jecxz
and
cmp
loope
int3
cmp
mov
cmpsl
push
pop
aam
lds
das
xchg
jg
adc
loope
pushf
and
ret
test
test
mov
lret
js
in
xor
rorl
inc
xor
test
rorb
lea
sbb
and
jnp
int
push
repz
xchg
pop
icebp
sub
insl
int
jle
jl
cmp
lods
imull
les
jl
cmpsb
sarl
imul
imul
nop
imul
in
movsb
mov
and
lret
lods
lods
jb
jo
fidivrl
push
stos
iret
sbb
test
pop
mov
addr16
mov
jmp
jecxz
insb
jecxz
add
divb
cs
ret
scas
pop
inc
aad
mov
scas
sti
sub
inc
pop
movb
sbb
mov
outsb
push
cld
mov
js
leave
xor
cmp
mov
js
sarl
rorl
xchg
mov
push
fstps
mov
dec
push
and
gs
xor
jl
cmpsl
lret
or
push
dec
sbb
cmp
or
mov
imul
mov
cmpsl
mov
loope
push
cmp
rcll
sub
xchg
cmp
test
sub
les
pop
dec
out
je
xor
imull
cwtl
cmp
or
fcmove
lods
rclb
cmp
sub
ss
inc
pop
das
pushf
test
out
pop
push
fnstenv
push
call
nop
in
cmpb
pop
push
fmuls
jmp
mov
subl
daa
mov
pop
cli
xchg
test
mov
inc
repz
xchg
out
cmp
repnz
pop
test
hlt
lret
inc
xor
pop
into
dec
scas
mov
jg
cmp
xchg
insb
xchg
fmull
sub
sbb
jge
jge
icebp
xchg
fwait
testb
sbb
mov
cmp
mov
jmp
or
cld
pop
xchg
ljmp
test
pop
fwait
cltd
in
cs
mov
or
push
dec
xchg
sbb
dec
sbb
jle
and
or
into
pop
mov
push
jmp
pusha
lds
xlat
fwait
xchg
and
in
sar
lahf
sbb
mov
jne
add
scas
sbb
xor
jnp
imul
adc
adc
arpl
idivb
jae
sub
cmp
gs
dec
sahf
pop
cmp
pusha
push
lcall
adc
jbe
jmp
in
and
push
mul
shr
prefetchw
sarl
push
in
xchg
out
clc
scas
xor
add
dec
jle
fs
cwtl
scas
sub
inc
fsubrs
and
bound
inc
mov
add
test
fcoml
sub
push
rorl
ljmp
jge
mov
push
sbb
ja
cmp
and
jno
jle
add
sbb
mov
out
jne
jbe
add
xor
in
and
sbb
loop
xor
push
mov
out
outsl
xchg
or
xor
pop
sbb
jg
clc
cmp
scas
imul
leave
add
sub
pop
lret
mov
cmc
mov
mov
pushf
leave
adc
mov
xlat
ds
sbb
psllw
ret
or
sub
mov
jo
test
xor
jae
mov
sub
push
push
inc
cmp
fistpl
scas
sub
mov
or
loopne
push
lds
rcll
push
sbb
vpshlb
repz
cmc
jo
rolb
sub
sbb
fcoms
add
jns
repnz
xor
jp
cmpsb
in
push
cmp
fs
mov
fwait
aad
push
dec
movsl
fs
mov
jmp
jae
jno,pn
test
icebp
jns
sbb
sbb
sbb
jb
dec
pop
in
sbb
push
pop
cmp
jne
push
test
dec
mov
sbb
lret
dec
mov
hlt
inc
cmp
and
pop
xor
mov
pop
rcrb
mov
hlt
pop
leave
js
pop
sahf
loopne
cli
push
push
pusha
sarl
jmp
cmp
mov
pop
pop
test
imul
fcom
lods
daa
mov
mov
popl
mov
dec
cs
sbb
nop
add
fists
or
push
fwait
in
sub
lock
push
ja
mov
roll
mov
cs
dec
pop
pop
xchg
cmpsb
dec
lods
jb
shl
sub
lahf
xor
in
cmp
imul
cltd
cld
loope
or
and
pop
push
cltd
in
sti
nop
mov
fmuls
and
cmpsb
push
cmpsl
negb
insb
xchg
jle
lods
bswap
lcall
decl
cmp
mov
mov
xchg
hlt
or
dec
add
sbb
lahf
sub
mov
data16
add
jmp
dec
push
pop
sub
inc
fwait
sub
push
ret
pop
out
cs
in
cmp
sbb
fdivl
bound
inc
fcmovnu
ss
sbb
push
in
fwait
mov
inc
into
add
xchg
jae
and
mov
in
or
or
adcb
sbbl
adc
sbb
and
cwtl
shr
negb
hlt
mov
sub
rorl
lds
cli
jle
jmp
mov
ds
out
mov
add
std
lds
test
pop
xchg
lds
imul
mov
test
jnp
xor
inc
sbb
jbe
into
movsb
push
xchg
test
pop
xlat
cld
and
pop
cmp
aad
inc
cmp
lods
aas
push
fwait
adc
xorl
call
xchg
mov
adc
gs
sbb
mov
xchg
push
inc
sub
fmull
xlat
mov
fst
addr16
push
lret
fimuls
sbb
or
xchg
insl
repz
int3
cwtl
add
sub
push
pop
sbb
int3
xchg
rclb
add
jmp
add
add
jnp
add
shll
mov
mov
dec
pop
adc
dec
dec
movsb
in
add
cld
cld
andps
push
inc
mov
push
ret
sahf
aaa
jmp
inc
mov
pop
xchg
outsb
andl
mov
insb
int3
add
dec
xchg
lahf
push
inc
fs
rorb
pop
cmp
push
decl
cmpsb
fstl
fidivs
jle
ss
and
mov
fs
add
pop
sti
aas
fmull
scas
aad
jmp
test
mov
jmp
mov
push
cltd
es
pop
xor
test
insb
icebp
ss
std
mov
adc
jmp
pop
es
in
pop
subb
pop
jg
push
sub
cs
inc
sub
mov
mov
xor
jne
jne
adc
fwait
arpl
int
out
ljmp
jne
popf
aas
icebp
test
mov
push
mov
roll
mov
movsl
jl
sub
mov
dec
shll
cmpsb
xor
mov
xor
inc
xchg
stos
mov
mov
aad
cwtl
je
jnp
or
push
or
cmp
lcall
lret
jae
dec
icebp
rorb
sbb
dec
sub
insl
or
jne
movsl
sbb
sbb
stc
mov
fadd
aas
popa
scas
lods
test
pop
add
stos
lods
ret
sti
addr16
pop
rcrl
push
data16
xor
or
sub
aam
jnp
dec
ret
sub
cwtl
sbb
or
jle
or
test
ret
and
push
or
je
xlat
das
divl
pop
sub
outsb
clc
push
jbe
lods
inc
xor
pusha
fsubs
cmp
or
pop
jbe
push
inc
mov
add
stc
fiaddl
orb
mov
pop
mov
add
test
jmp
icebp
adc
xor
loope
mov
pop
in
movsb
mov
hlt
mov
roll
mov
jge
add
jecxz
fdivrl
repnz
sti
orb
mov
outsl
pop
pop
stc
mov
push
push
add
cmp
and
in
or
icebp
jnp
orb
xchg
mov
fcoms
adc
pop
pop
pop
in
mov
jae
jno
cmp
mulps
scas
mov
sahf
add
sbb
dec
add
cld
notb
push
jmp
pop
stc
push
jo
adc
jl
cli
dec
dec
ljmp
jb
xchg
jecxz
xor
lods
mov
inc
das
lea
orb
dec
push
inc
loop
jge
or
mov
xchg
mov
test
inc
mov
shr
and
nop
gs
dec
sahf
lahf
and
adc
imul
jecxz
clc
incl
enter
jmp
mov
dec
add
jb
lods
fnsave
sbb
repz
sub
loope
les
ret
out
shrl
daa
cmc
insl
lea
xor
adc
lods
add
insb
push
jmp
je
jnp
cmc
lods
bound
push
mov
cmp
pop
or
jge
rcrb
add
outsl
mov
and
dec
scas
fidivs
pop
inc
inc
jle
jbe
popf
add
mov
xchg
cmc
jns
outsl
jb
pop
sti
pop
daa
cwtl
mov
out
hlt
and
pop
stc
dec
or
pop
scas
push
add
add
repz
es
sbb
cmpb
xchg
pusha
dec
stos
and
mov
fldt
imul
sbb
outsl
dec
adc
jns
xchg
inc
nop/reserved
cs
enter
test
nop
mov
les
sahf
lods
xor
scas
cmp
addr16
or
into
aad
lcall
mov
popw
dec
mov
mull
ja
sub
fwait
dec
xchg
jecxz
inc
jae,pt
xor
rolb
jle
cld
jns
popa
push
sbb
and
in
or
test
xchg
add
pusha
call
fisttps
cmp
xor
sub
jle
movups
push
adc
stc
or
add
fiaddl
in
test
fwait
test
out
mov
mov
in
pop
add
icebp
out
mov
adc
jle
dec
jo
popf
out
arpl
insb
or
stc
fwait
adc
mov
fxch
cmp
pusha
and
inc
add
cmp
dec
push
ja
imul
and
jl
xchg
mov
mov
adc
sbb
not
mov
adc
cs
gs
mov
push
mov
cli
fisttpl
and
mov
inc
icebp
popf
ljmp
cld
fistpll
lret
fs
mov
ffreep
incl
mov
xchg
inc
cli
nop
sbb
pop
mov
xchg
xchg
push
andl
outsl
xlat
loopne
adc
fldl
fmuls
fnstcw
cld
xchg
and
sbbb
cmpsl
test
add
jns
leave
inc
out
ror
mov
push
jge
add
mov
xor
or
lcall
test
fs
or
fcos
xchg
shll
lea
and
sbb
mov
scas
loop
jl
ret
movsb
addr16
xchg
xchg
les
or
test
xchg
jl
stos
add
insl
aaa
lds
loop
int3
and
xchg
push
add
clc
mov
lods
adc
inc
imul
fisubs
enter
pop
jg
inc
inc
mov
jbe
ret
pushf
popf
push
pop
adc
pop
andb
dec
cwtl
jae
sub
int3
sbb
int3
adc
pusha
lret
fists
iret
lds
bound
cs
dec
jae
and
outsl
mov
sbb
loopne
outsl
pop
lock
imull
pop
xchg
out
mov
xchg
xor
outsl
lcall
jno
iret
div
int3
repnz
and
outsb
fcoml
cld
xchg
les
ds
push
popa
gs
sub
sbb
pushf
daa
and
xchg
pop
pop
sti
daa
or
popa
mov
das
lods
fistps
jp
push
test
dec
pop
repnz
jg
mov
iret
scas
hlt
bound
dec
lcall
repnz
hlt
das
xchg
rcrl
sub
jle
lea
pop
test
mov
cltd
ss
mov
lcall
cmp
jae
jp
mov
pop
cmp
adc
jmp
cmc
dec
roll
and
cmp
sub
and
push
movsl
cs
mov
pop
sbb
push
addr16
lds
aad
push
jle
fsubl
xchg
fdiv
sub
inc
push
cmp
push
dec
repz
fimull
lea
adc
ret
lds
mov
xorl
shr
and
mov
imul
mov
xchg
test
aas
or
mov
out
push
orb
inc
std
mov
mov
jb
xchg
xor
data16
outsb
push
jle
xorl
fistpl
ljmp
shrl
inc
cli
ret
inc
mov
stos
ds
mov
aaa
stos
jae
dec
inc
xchg
push
or
out
pop
push
ja
sub
fistps
jl
sbb
mov
jno
sub
or
out
lods
add
int3
mov
jmp
int
push
add
or
cmp
or
int
cmp
hlt
daa
mov
and
xchg
jnp
mov
out
das
lods
fadd
xchg
push
outsb
out
lahf
movb
ss
push
sbb
pop
shll
dec
sub
mov
mov
push
push
mov
sbbb
movsb
pop
mov
cmpl
or
jbe
shlb
push
sub
mov
sarl
mov
data16
and
xor
cwtl
mov
lock
repnz
sbbb
lahf
add
xchg
mov
jp
lea
inc
push
jge
lods
jp
push
sbb
dec
imul
in
mov
shll
push
notl
cmp
or
sub
outsl
sbb
xor
push
mov
enter
aas
xor
or
lcall
cmc
or
adc
and
int3
call
push
pop
ficoms
test
jo
sahf
jns
das
sub
test
inc
ss
dec
rolw
rolb
xchg
notb
fcoml
mov
stc
dec
pop
int3
adc
and
outsb
mov
dec
mov
sub
or
pusha
out
cmpsb
fdivl
pusha
rcrl
loope
cmp
test
mov
and
pop
and
dec
xor
stos
addb
fcmovne
lods
mov
mov
hlt
mov
mov
lret
pop
pusha
xchg
dec
scas
xor
add
and
mov
sti
push
clc
mov
nop
nop
add
inc
notb
into
mov
mov
fisubl
xor
fcmovnu
push
bound
fmull
jecxz
xchg
cmp
sbb
fstl
mov
xchg
sbb
push
cltd
in
ja
popa
xchg
xlat
pop
sub
push
ss
jns
out
pop
sbb
add
or
cltd
push
or
popf
cmp
das
jle
sub
arpl
mov
cmp
shrb
cmc
test
pop
xor
mov
icebp
daa
jbe
andl
sub
xor
xchg
mov
xor
sbb
jp
and
mov
xchg
fisubl
sub
test
loope
push
cs
xchg
pusha
in
in
sub
add
outsl
out
sbb
sbb
xor
icebp
sub
add
hlt
sbb
inc
sub
push
push
add
pushf
mov
sbb
sub
pop
sub
mov
jbe
adc
fists
dec
stc
mov
jne
mov
fadds
xchg
jno
sbb
lods
sub
fistps
pop
shl
lahf
data16
xor
outsb
push
bound
ss
fsubs
jg
mov
sbb
lcall
mov
outsb
lods
gs
fs
mov
fs
inc
sbb
mov
mov
in
movsb
jg
cld
or
orl
int
push
out
adc
adc
test
xor
push
pop
fstps
cmp
stos
xchg
std
xchg
mov
test
jge
jae
addl
push
test
and
jle
mov
xor
daa
jmp
pop
mov
adcl
or
dec
jb
mov
cmp
jne
ret
lahf
sub
and
fbstp
scas
xchg
mov
and
and
pop
dec
testb
lret
sub
test
lcall
cmp
neg
dec
mov
xor
cmp
pop
or
rcrb
jl
jne
fisttpl
scas
or
shlb
and
xchg
pop
sub
mov
test
add
iret
push
jmp
pop
ret
mov
bound
ret
xchg
xchg
pop
mov
ja
sub
mov
into
cmp
mov
xchg
in
das
xchg
test
lcall
xchg
mov
inc
xor
and
aas
and
sbb
push
popf
iret
mov
cmp
mov
xor
test
popf
cmc
pop
dec
div
xchg
mov
adc
xor
xchg
mov
inc
inc
cmp
xchg
add
cli
add
setle
js
xchg
sub
inc
mov
in
xor
or
adc
sbb
fdivp
push
mov
pop
mov
mov
mov
xor
pop
and
mov
inc
or
aam
push
xor
jg
jmp
enter
pusha
ljmp
std
xchg
iret
out
outsl
pop
inc
cmc
popa
lahf
clc
or
push
or
cld
daa
lahf
or
mov
sub
aaa
jmp
inc
or
jmp
scas
iret
addr16
fmull
gs
stos
xchg
add
stos
cwtl
ficoms
test
push
pop
jnp
dec
xchg
xchg
xchg
jns
sarb
push
xchg
pop
push
lods
mov
andl
enter
pushf
movsb
scas
rol
cs
sbb
or
adc
in
ret
sub
fcomp
pop
xchg
add
dec
repz
insl
sub
lea
hlt
add
mov
push
sub
out
jg
xor
push
inc
and
outsb
pop
out
add
shll
outsl
mov
cmpsb
sub
shrb
call
test
xchg
gs
and
fdivrs
mov
test
jo
ds
daa
jb
xor
or
outsb
push
scas
pop
mov
sub
daa
push
xchg
xchg
test
jge
test
movsb
mov
das
pop
mov
inc
jnp
adc
ret
inc
sbb
sub
cmpl
clc
xlat
repz
xchg
xchg
cltd
and
icebp
movl
xor
inc
dec
lea
mull
jge
xchg
das
jae
jle
das
imul
arpl
and
push
loope
xchg
inc
pop
fistl
push
int3
push
mov
mov
add
and
test
push
cltd
lods
inc
dec
jne
sub
sub
sbb
fstl
xchg
aam
and
in
inc
pop
inc
cmp
add
sub
stc
out
and
cltd
sbb
inc
inc
jle
xor
mov
jl
movsl
outsl
ss
sbb
jo
bound
sbb
sbb
xchg
mov
sarb
lods
mov
mov
mov
mov
xor
nop
jecxz
xor
loop
cmp
leave
stos
mov
pop
lea
sbb
inc
xor
sbb
out
lret
gs
dec
cmp
dec
in
add
xchg
ret
cmpl
lods
pop
jge
add
cmc
sbb
and
iret
int3
popf
adc
or
sub
inc
xor
cmp
mov
call
mov
repnz
out
xor
sub
inc
ret
xchg
cmp
mov
ret
cwtl
aad
je
sti
cmpsb
xchg
mov
outsb
or
push
clc
test
cmc
mov
shrb
mov
sub
xchg
push
sub
lods
imul
pop
fisttpl
dec
dec
sar
cs
jp
shl
ret
pop
addr16
xlat
dec
ds
inc
scas
int
out
rcll
add
movsb
insb
iret
test
xchg
lret
inc
ss
mov
out
frstor
gs
sbb
dec
aam
push
mov
out
jecxz
je
setne
fst
clc
in
add
cmpsb
imul
adc
xchg
loop
fdivs
aad
std
cmpsl
mov
out
sub
dec
mov
aad
pop
rolb
push
fstps
shr
out
lret
fldl
push
sbb
sbb
jnp
and
dec
aaa
cwtl
mov
cmp
mov
orl
je
mov
ret
in
shr
sub
rclb
mov
cmp
pop
dec
pop
test
dec
insb
sub
adc
ds
jae
mov
sar
and
dec
test
and
rdtsc
pop
inc
call
int
or
out
movsb
sti
test
xor
movsl
je
ss
out
jo
cmp
push
movsb
mov
fldcw
and
and
or
leave
dec
lret
dec
push
leave
insl
mov
dec
idivb
fldpi
pusha
negb
push
sbb
bound
cmpsl
push
mov
hlt
cmp
xor
or
dec
in
cmp
xchg
xorb
mov
dec
leave
pop
or
sub
ljmp
xchg
jge
mov
cmpsl
fsubr
xchg
addr16
sbb
dec
repz
xor
movsl
jle
cmp
es
xchg
adc
in
adc
push
add
jmp
add
into
sarb
xchg
pusha
cld
stos
lds
lds
outsb
js
popl
cmp
fs
mov
cmp
or
push
and
ds
in
ret
jle
rcll
xor
popf
jecxz
pop
shl
xor
inc
xchg
pushf
movsb
pop
scas
and
test
addl
fsts
push
jmp
mov
aam
pop
jecxz
mov
int
aas
xchg
lea
pushf
in
mov
test
inc
movsl
sbb
out
sub
add
mov
cmp
rorl
mov
mov
movsl
adc
movsb
cmp
sahf
cmp
mov
or
ljmp
sub
mov
lods
sub
je
ss
jo
test
stos
stc
insl
mov
fwait
mov
and
xchg
repz
or
or
adc
mov
notl
movsl
mov
dec
cmp
into
or
dec
inc
loopne
xchg
mov
daa
add
or
xchg
pop
mov
xchg
push
in
pushf
and
repz
xchg
adc
adc
test
inc
add
xor
inc
int3
push
out
pop
pop
mov
lahf
int3
rcl
adc
insl
lret
push
pop
pop
xchg
sub
or
aas
or
and
cmp
adc
scas
aas
and
fdivs
jae
aam
stos
dec
jecxz
cmpl
xchg
hlt
loope
inc
sbb
les
or
idivb
mov
out
mov
imul
adc
cmc
in
xlat
jg
xchg
lahf
mov
int3
push
xor
and
es
test
or
stos
aaa
add
xor
insb
pshufw
outsl
adc
pop
inc
lret
aaa
ret
mov
push
adc
sub
test
das
mov
mov
scas
fdivl
and
stc
cmp
loopne
jnp
fildl
add
pop
mov
sub
repnz
icebp
sub
bound
les
imulb
push
or
mov
cmp
popf
jl
cltd
mov
dec
outsl
xchg
movb
pop
orb
xchg
mov
fisubl
ds
add
inc
lahf
or
ret
xor
mov
in
sbb
popf
es
dec
xchg
aaa
pop
out
and
xchg
and
pop
insb
push
jae
rclb
push
stc
pop
clc
daa
sbb
mov
negb
cmp
mov
arpl
mov
cmpsb
pushf
jnp
out
pop
pop
jbe
subb
sbb
int
bound
repz
daa
adc
mov
jb
shrl
pop
mov
mov
test
mov
cmp
mov
dec
movl
sti
mulb
int3
and
xorb
addr16
int
leave
arpl
jbe
push
sub
icebp
cmp
mov
and
lock
sub
add
jge
cmp
jb
lahf
jno
xor
jae
push
mov
fcmove
lcall
lock
push
dec
fistpll
loopne
mov
fstps
or
fbstp
sub
cmc
cmpsb
or
hlt
pop
mov
mov
mov
gs
pop
inc
dec
dec
or
lods
cwtl
inc
data16
loope
push
mov
jmp
movsb
lret
scas
add
out
mov
mov
sub
stc
and
sbb
or
pop
push
mov
jmp
or
test
loop
mov
inc
add
push
jne
mov
pop
push
mov
daa
sbb
cs
pop
lret
inc
or
push
out
fisttpll
xchg
xor
subb
repnz
sbb
fldt
lret
xchg
mov
sub
sbb
inc
pop
cmp
out
pushf
sub
sub
push
int
das
or
test
cmp
xchg
je
adc
test
jo
call
movsl
push
xchg
pusha
test
mov
pop
push
add
out
mov
shlb
ret
je
not
sbb
subb
subb
xor
mov
cmp
pop
push
pop
test
dec
pop
push
fwait
stos
xor
pop
cwtl
cmp
dec
pop
test
cmp
or
loope
lcall
sarl
add
aaa
outsl
dec
shr
inc
enter
xor
jmp
cmp
sub
mov
jmp
mov
adc
sub
jg
mov
mov
cltd
push
push
jo
test
pmovmskb
or
rcll
into
jne
fmul
inc
pusha
je
mov
lahf
push
fwait
push
add
fs
cmp
and
jb
mov
pop
mov
mov
and
mov
stc
inc
adc
push
cmpsl
jo
cld
or
jmp
testl
testb
push
sbb
xor
jmp
add
lds
xchg
fiaddl
imul
pmuludq
std
pop
or
sbb
pop
mov
inc
add
adc
loopne
push
mov
movsb
inc
in
fsubr
mov
nopl
cmpsl
xchg
hlt
sub
jb
shrb
jbe
decl
inc
inc
scas
out
cmpsb
cmc
jmp
test
ret
dec
xchg
lret
fsubrs
sbb
repz
mov
sbb
xor
lret
jnp
leave
call
sbb
mov
push
sub
subb
call
cwtl
jmp
push
in
and
sbb
out
movsb
mov
mov
in
adc
mov
and
lock
sub
sbb
sbb
add
mov
xor
mov
jmp
adc
sub
and
inc
lret
push
cmp
insl
mov
jno
maxps
lds
or
add
shr
add
jmp
clc
ja
scas
mov
fisubrl
cmpsb
inc
dec
or
into
inc
or
or
sbb
fs
cmp
cmova
in
stos
in
mulb
jae
sbbb
ja
lret
jmp
or
jae
out
jo
adc
mov
xchg
sbb
sbbl
outsl
fiadds
jmp
mov
xor
push
cmpsl
jp
test
int
pop
fwait
add
mov
jecxz
dec
clc
pop
out
ljmp
fldcw
fstpl
mov
ljmp
mov
in
data16
cmp
out
fnstsw
arpl
xchg
rcll
jnp
and
xchg
rorb
movsb
into
dec
pop
xor
pop
rdmsr
scas
or
imul
dec
dec
loopne
push
add
and
pop
jne
push
cmpsl
loop
xor
push
xor
sub
sub
lods
mov
jp
ja
aam
jb
mov
adc
aam
push
inc
arpl
xor
jnp
pop
addr16
fmuls
std
jle
sahf
mov
inc
lock
push
loopne
push
push
add
inc
mov
stos
cs
popa
and
mov
jg
popa
lock
cmp
xchg
dec
inc
push
iret
pop
ja
pop
pop
fwait
jae
sbb
in
dec
fidivrl
stos
add
repz
jns
jg
inc
shlb
fwait
ror
movsl
ror
pop
jecxz
cld
mov
add
sub
nop
adc
orl
sub
repnz
sub
pusha
jbe
and
push
imul
into
mov
fiaddl
jg
xor
push
jbe
imul
daa
pushf
cmp
lods
mov
add
push
int3
jmp
lock
fistl
movsb
aas
jle
dec
push
and
add
les
jo
mov
ja
mov
mov
inc
addr16
pop
adc
mov
cmp
js
pop
shlb
hlt
pushw
mov
mov
mov
jnp
or
js
cmp
add
pusha
adc
jb
ret
inc
fsubrl
stc
cmp
rcr
push
push
or
or
imul
xchg
lcall
daa
mov
ficoml
xchg
xchg
cs
nop
jge
addr16
test
lret
push
jne
and
ret
lahf
pop
lds
clc
xchg
testl
inc
pop
push
cld
aam
and
adc
adc
mov
push
jnp
sbb
jnp
jno
jno
adc
dec
pop
out
in
xor
xchg
lret
sbb
aaa
cmpl
jg
push
fisubs
aad
movsb
enter
insl
sbb
add
push
bnd
cmp
mov
sbb
fldt
in
shll
pusha
decb
jbe
fstpt
mov
mov
sbb
test
aaa
xlat
test
dec
jmp
icebp
rcrb
pop
sti
pop
insb
push
andb
add
lcall
mov
mov
add
and
ret
inc
je
mov
movsb
or
gs
fisttps
dec
aad
pop
sbb
jecxz
push
sbb
sbb
in
add
divl
inc
scas
aas
jbe
pop
int
aad
inc
mov
enter
xchg
mov
ret
jb
out
mov
lret
cmp
xchg
jb
or
lcall
stc
clc
jne
jne
sub
xchg
imull
clc
jg
int
test
lret
imul
push
fwait
movsb
outsl
xor
mov
cmc
aaa
push
cld
and
les
mov
sub
add
xor
xor
inc
rorb
mov
rorl
pusha
mov
jp
push
call
gs
imul
into
stc
xchg
add
sbb
cmpsl
ss
dec
cltd
test
sbb
mov
stos
push
cmpsl
or
xor
adc
fldenv
gs
mov
mov
enter
stos
add
shrb
and
insb
push
mov
push
in
hlt
cli
ljmp
jns
push
repnz
add
pop
notb
pop
das
out
cli
ret
testb
and
mov
repz
hlt
add
movsb
mov
subb
mov
or
dec
push
inc
dec
cmpb
sbb
sbb
and
inc
xchg
ficompl
adc
dec
jle
bound
and
lods
repz
mov
ss
inc
call
imul
lret
mov
mov
mov
mull
pop
add
adc
inc
inc
xlat
xchg
aaa
pop
outsl
jg
test
test
push
jl
jo
stos
loope
jl
lret
cmp
leave
dec
inc
push
mov
pop
dec
and
cmp
fmul
pop
scas
fwait
xor
adc
push
aas
push
decl
lret
int
adc
shll
dec
xorb
mov
hlt
mov
movsb
std
in
fldenv
bound
lret
jo
iret
push
repnz
pop
xchg
xchg
movsl
mov
sub
ret
shrl
clc
mov
or
das
push
adc
xor
fildll
ljmp
jo
cmp
repnz
test
dec
lret
lods
mov
hlt
popa
movsl
jle
sahf
in
push
sti
cmp
enter
adc
pop
out
out
adc
lret
add
mov
jg
mov
int
jb
xchg
push
cltd
adc
xorl
push
sbb
or
jb
cmpsb
movsl
jnp
add
adc
lds
lods
sub
mov
or
and
or
xor
add
inc
cs
sti
push
xor
cli
cltd
inc
insl
loop
pop
test
jmp
cmp
mov
js
cmp
lock
nop
test
push
jg
enter
imul
sahf
inc
andl
xchg
fucomp
cmp
call
shlb
sbbb
jbe
iret
into
or
adc
outsb
jno
loope
out
repz
push
mov
add
adc
mov
loope
shr
test
adcb
fisttpll
xchg
adc
stc
cltd
adc
cmp
test
xchg
out
imul
ret
pop
xor
dec
adc
scas
shrl
dec
mov
and
inc
or
ret
das
or
div
inc
mov
shrb
shrl
fdivrs
pop
cmp
xor
xor
add
in
push
push
test
pushf
cmp
incl
xor
mov
aam
or
mov
sbb
rcrb
inc
mov
insl
out
flds
pop
xchg
mov
shl
adc
adc
pusha
add
push
inc
xor
ret
and
mov
mov
sub
fldcw
or
inc
aam
mov
jae
loopne
pop
mov
jno
push
push
addr16
mov
xchg
xchg
lahf
push
add
lea
jl
dec
dec
outsl
mov
int3
fsubrp
gs
mov
inc
jns
inc
mov
add
iret
xor
cs
lds
adc
mov
pop
and
in
xchg
mov
pop
inc
adc
and
int
jl
jle
pusha
mov
shll
ljmp
pop
jae
xchg
fdivr
iret
jmp
ljmp
stc
jle
mov
cmp
add
dec
scas
lcall
clc
mov
dec
xchg
xchg
push
jo
pushl
add
sahf
inc
push
push
lret
loope
push
ret
adc
sbb
jo
push
inc
add
lods
adcl
cmpsl
mov
fisubs
loopw
mov
push
sbb
jbe
mov
or
push
pop
xor
jne
pop
dec
mov
mov
js
repz
or
shl
js
xchg
pop
xor
adc
ds
sub
xchg
sbb
int3
enter
test
sub
cmp
and
sub
loop
adc
xchg
inc
sbb
pop
jg
dec
jp
or
repnz
pop
jns
fs
xchg
inc
repnz
dec
adc
xor
repz
aad
xlat
sbb
inc
mov
pop
leave
fcompp
addl
cld
cmp
aaa
cmpl
jbe
out
sti
cwtl
lods
xchg
push
lds
or
or
or
jle
xor
rep
lret
jb
dec
cmp
cmc
pop
fs
cmp
popa
mov
ficoms
mov
je
adcb
outsb
iret
fdivrs
movsl
iret
jnp
adc
jae
fidivrl
repz
sbb
dec
and
aas
insl
mov
mov
mov
xor
xchg
push
dec
das
cmp
mov
jae
push
dec
sub
sub
loope
bswap
xchg
cmp
cli
punpckhdq
jmp
inc
out
mov
and
mov
sbb
lcall
in
sbb
cld
out
lods
mov
or
xabort
or
xchg
cmp
and
jnp
xor
push
insl
xchg
lret
push
or
mov
fbld
andl
mov
jno
cmpsb
out
jmp
push
push
dec
outsb
or
int3
inc
out
mov
pusha
movups
stos
mov
bound
jmp
cld
jns
lcall
mov
xchg
add
data16
scas
dec
push
xor
push
add
xor
fldpi
into
mov
xor
int3
jp
out
or
stos
push
gs
into
push
xor
xor
jp
scas
ret
fcompl
cmp
mov
rclb
lds
arpl
loopne
insb
and
adc
aad
testb
dec
mov
xlat
xorl
out
adc
sti
cs
mov
dec
adc
pop
pop
popf
add
adc
xor
adc
loopne
std
addr16
mov
and
aam
sub
mov
mov
clc
ljmp
mov
shrb
adc
arpl
lcall
add
sbb
decb
mov
cmpl
and
adc
xlat
inc
movsl
ss
xbegin
xchg
adc
cwtl
xor
icebp
clc
and
fists
push
fdivl
daa
addr16
push
out
pop
xor
outsl
sbb
arpl
xor
mov
enter
or
add
clc
in
insb
push
je
push
std
das
sub
dec
subl
psrlw
orb
loope
pop
mov
push
lret
test
lfs
das
inc
mov
lock
push
fimuls
notb
xchg
adc
mov
cld
std
mov
pop
pop
lods
imul
hlt
cmpsl
sbb
add
aas
mov
fs
mov
push
pop
push
jle
in
mov
inc
int3
mov
sub
je
and
jmp
nop
and
mov
sbb
lcall
stos
arpl
pop
mov
in
add
lock
sbb
mov
rcrl
cmp
cmp
pop
fnstcw
add
push
mov
mov
stos
sub
mov
sti
hlt
ljmp
jl
mov
inc
out
lds
jp
out
xchg
imul
sbb
inc
ja
pushf
stos
and
into
xchg
stos
je
push
icebp
jecxz
cmpsl
fcompl
mov
faddl
cmp
enter
outsl
mov
mov
jp
test
jns
std
in
call
popa
orl
sbb
add
or
ljmp
mov
pop
lock
jnp
js
daa
fmuls
mov
dec
sbb
out
inc
push
scas
data16
nop
mov
hlt
lret
xchg
xchg
notb
pop
in
push
ljmp
arpl
mov
add
and
push
cmp
pmaddwd
popf
in
adc
push
movsl
mov
decl
iret
mov
sub
cmpb
fcomip
xor
adc
inc
mov
shlb
movsb
push
push
aas
rclb
xorb
mov
data16
out
jg
in
movsl
and
shr
mov
jbe
add
xchg
jne
add
ds
inc
stos
lret
pop
push
fnstenv
test
fwait
int
adc
call
inc
je
jp
test
sub
sbb
or
jbe
xchg
scas
dec
fildl
das
cmp
add
popf
fyl2x
cli
or
mov
rolb
addl
in
sbb
ja
enter
sub
mov
mov
insb
cmp
aad
loop
pop
mov
xor
push
push
rorb
cmp
insl
mov
in
imulb
enter
loopne
inc
cmc
gs
jmp
dec
gs
daa
xchg
gs
mov
les
mov
js
arpl
inc
cmpsl
pop
cmp
mov
lret
mov
dec
or
lock
scas
lret
lcall
insb
je
in
dec
clc
lods
mov
bound
xchg
insb
aas
loopne
mov
daa
dec
ret
addl
call
jge
dec
sti
shrl
and
push
ja
ja
xchg
mov
mov
jae
fs
push
sub
fwait
jb
outsb
pushf
fwait
roll
gs
add
pop
cmp
push
sbb
jl
dec
push
gs
or
rorl
cltd
inc
movsl
mov
jne
mov
mov
push
mov
push
mov
push
gs
dec
mov
out
mov
addr16
cmp
mov
and
mov
lods
mov
jle
cli
add
or
repnz
inc
dec
fwait
mov
fcmove
sbb
xor
dec
dec
lahf
call
add
mov
sub
cld
lods
cmpsb
or
jp
in
cwtl
test
xor
dec
dec
roll
and
idivl
add
dec
jbe
pop
pop
sbb
out
lock
dec
cs
add
or
xlat
mov
push
mov
cmpsl
loope
jo
xchg
and
loope
or
rorl
dec
inc
cs
or
dec
push
bound
mov
rolb
pop
stos
add
sarb
mov
arpl
test
sarb
mov
scas
xchg
cmpsl
sbb
pop
addr16
leave
add
adc
js
std
fiaddl
dec
push
mov
dec
mov
inc
jmp
xor
xor
push
or
jp
arpl
bound
add
mov
and
pusha
sbb
ss
fwait
push
leave
in
ss
xor
dec
xor
or
sbb
ds
jle
cmp
sub
out
mov
dec
xor
stc
xor
mov
lods
sub
iret
mov
cld
inc
std
fnstcw
mov
add
jle
jb
xchg
popf
add
xor
cmp
dec
test
cmpsl
and
mov
inc
inc
pop
pop
pop
loop
fadd
scas
sbb
fwait
pop
sbb
mov
imul
add
fcmovnbe
dec
cmpsl
lea
out
loopne
xchg
mov
scas
xor
out
aad
lret
popa
jns
repnz
shl
mov
sbb
mov
iret
cmpsb
xchg
jbe
pushf
push
xlat
call
sbb
and
dec
pop
and
push
cwtl
mov
jg
mov
cmpsl
mov
aas
jnp
inc
stc
fnstsw
fdiv
loop
mov
sbb
pusha
aad
mov
stc
lcall
push
pop
jo
je
lret
or
cmp
adc
test
ja
rcrl
into
inc
popa
fcomp
sbb
repnz
pop
or
mov
fucompp
add
outsb
or
rcr
aas
adc
rcr
out
cmp
test
andl
mov
or
lret
data16
cmpsl
lahf
jmp
sbb
ja
fwait
dec
add
xchg
pop
adc
insl
sub
mov
mov
xor
sub
bswap
mov
xor
jne
add
int3
sub
fldt
outsl
push
jno
inc
in
cltd
push
fwait
xor
dec
sub
or
clc
inc
mov
and
fisttpl
cli
mov
mov
fistps
add
fcoms
mov
mov
xchg
inc
pop
mulb
cmp
std
push
sub
scas
loope
lock
stos
fadd
xchg
cmp
add
int
or
jae
jle
add
lahf
repz
pop
or
xor
push
lea
cmpsl
jbe
fcmovbe
movsl
jge
ja
into
and
mov
out
rcr
xchg
inc
jg
mov
fs
lret
imul
repz
mov
mov
push
nop
xchg
jno
sahf
gs
stos
lods
xchg
xor
into
cld
lret
xchg
jae
jne
aas
add
sub
adc
push
inc
mov
aas
jecxz
dec
notb
addr16
xchg
xor
rcrb
dec
pop
xchg
out
mov
dec
es
add
aad
lahf
in
loopne
loopne
imul
push
test
push
pusha
add
lahf
fiaddl
and
or
pop
mov
out
pusha
push
ret
jge
inc
cmp
cmp
jbe
pop
mov
mov
sbb
pop
ds
imul
and
xor
inc
scas
in
mov
xor
scas
mov
jo
push
dec
xchg
fcoms
pop
addl
adcb
cli
ja
hlt
fstpt
inc
imulb
mov
dec
mov
xchg
sbb
out
jmp
mov
cmp
lret
jo
mov
mov
jns
int
or
std
lods
dec
call
repnz
xchg
lods
fstps
dec
inc
repnz
cmp
cmovo
push
jno
cwtl
add
sbb
or
jbe
pop
dec
out
xorl
dec
xchg
sbb
cmc
je
loop
dec
repnz
loop
mov
test
cmpsb
imull
arpl
xchg
imul
lock
mov
and
ret
fldl
movsl
and
cmp
add
aas
xor
fwait
rcrb
xor
inc
and
loopne
stc
lcall
cld
mov
test
xchg
jmp
add
mov
test
fwait
jno
mov
shlb
ds
inc
xchg
je
ss
popf
repz
or
inc
popa
jo
cli
test
pop
insl
push
add
jns
push
fnsave
je
pop
pop
movsb
mov
in
mov
insl
xchg
lcall
adc
ljmp
adc
xorl
inc
imul
add
aaa
push
push
pusha
xchg
xor
sbb
xchg
or
xor
ret
fnstcw
jmp
or
addl
cmc
sahf
frstor
jp
dec
push
frstor
inc
dec
pop
mov
mov
mov
es
cs
push
dec
jns
or
int3
es
inc
in
jo,pt
jnp
or
and
add
sub
inc
adc
cmc
in
add
movd
aaa
nop
lods
shll
push
and
movsb
repnz
or
test
imul
add
or
js
and
out
inc
cmp
xchg
popa
jp
cmpsb
jmp
and
xor
push
mov
and
or
xor
mov
insl
mov
je
rcrl
cmpsl
pusha
push
lahf
sbb
into
jle
dec
lods
rclb
sub
mov
jns
popf
aad
loopne
movsl
add
data16
stos
jl
int
jb
sarb
mov
mov
cmp
inc
das
and
mov
ret
jne
or
inc
pusha
jecxz
out
inc
sub
lods
or
push
daa
dec
xchg
test
lcall
adc
push
jecxz
inc
lcall
shll
lock
jno
roll
out
iret
pop
dec
lods
inc
adc
aam
pusha
cmp
cld
mov
fsubr
xchg
std
test
or
insb
pop
xchg
cmpsb
