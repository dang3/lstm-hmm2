add
add
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
inc
add
jb
add
jb
add
add
inc
add
je
imul
inc
add
jb
add
jb
add
add
push
add
je
insb
add
push
add
js
je
add
push
add
outsb
add
add
push
add
js
je
add
add
dec
add
outsb
add
push
add
js
je
add
add
push
add
outsb
add
add
inc
add
popa
add
add
add
imul
outsl
add
add
add
dec
add
outsb
add
add
add
dec
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
je
imul
push
add
pop
push
add
and
and
call
inc
pop
or
add
add
add
loop
and
xor
bound
or
jns
and
inc
add
add
add
add
push
test
bound
inc
add
add
add
add
add
inc
add
add
add
push
pop
xchg
add
add
add
add
add
add
iret
add
das
add
cli
add
xchg
add
bound
and
add
and
bound
aas
add
inc
add
fiaddl
add
push
add
sahf
add
mov
bound
sub
fiaddl
xor
and
inc
add
aam
jns
ljmp
add
add
push
add
test
lea
jno
bound
sub
fiaddl
fiaddl
and
dec
add
sub
into
add
add
and
fiaddl
or
add
mov
test
bound
mov
fiaddl
inc
add
out
add
dec
add
add
xor
add
aaa
add
flds
ret
add
add
add
add
add
test
flds
bound
in
mov
xchg
add
bound
hlt
add
add
add
add
loop
add
dec
add
add
lea
mov
bound
flds
and
add
bound
das
add
add
test
cld
add
add
inc
add
popf
add
add
mov
test
daa
add
add
add
add
add
add
or
add
test
fiaddl
movsb
add
add
jg
jns
dec
add
add
inc
add
inc
add
add
xor
pushf
add
add
push
add
add
push
xor
bound
cmp
mov
jno
bound
out
add
pop
add
add
test
and
add
add
add
add
jle
add
in
adc
cmp
add
add
inc
add
movsb
add
add
add
add
add
add
flds
int
push
int
test
pushf
add
add
or
add
push
dec
add
filds
fiaddl
movsb
add
push
bound
bound
cmp
add
push
loop
bound
and
and
push
inc
add
stos
add
add
add
add
mov
add
add
add
inc
add
test
test
add
push
add
loope
or
push
add
add
add
add
add
add
mov
adc
sahf
add
add
push
adc
xchg
add
add
inc
add
and
and
insb
add
add
inc
add
push
add
add
add
mov
or
jno
mov
add
add
sbb
adc
add
sahf
add
add
jle
or
stos
add
add
add
add
add
add
push
push
add
add
inc
add
or
add
or
sub
int3
add
add
add
bound
add
lret
add
add
add
bound
bound
cld
add
add
add
add
push
popf
add
repz
and
bound
bound
hlt
add
test
or
bound
mov
hlt
add
add
bound
hlt
add
add
add
and
loop
bound
xor
jmp
add
bound
or
ds
jg
imul
test
jle
and
popf
add
xchg
add
int
push
add
add
add
push
add
add
xchg
add
mov
outsl
add
out
movsl
adc
sub
daa
jne
dec
repnz
dec
pop
adc
mov
in
cmp
push
dec
enter
into
mov
inc
xor
jbe
lahf
mov
xchg
jae
stos
fstpl
movsb
aas
mov
shl
and
mov
fs
and
sti
xchg
inc
mov
mov
adc
sbb
pusha
enter
or
repz
push
push
enter
xor
sub
mov
subb
dec
inc
inc
cli
cmp
fwait
out
outsb
into
repz
mov
sbb
bound
xchg
mov
xchg
push
fld
or
icebp
sbb
rol
daa
sub
push
aam
jns
mov
mov
sbb
jg
enter
jnp
pop
clc
scas
repz
xor
cmp
out
test
sahf
cmp
fcoml
shrb
mov
test
lahf
jbe
push
aas
movsl
cltd
mov
and
jno
cwtl
into
addr16
cltd
cwtl
mov
scas
add
out
test
das
inc
out
and
fdivs
push
xchg
mov
xchg
xor
jl
jnp
push
lret
dec
in
mov
adc
aas
ficompl
inc
push
add
sub
shl
cmp
xor
xchg
test
js
in
popf
jecxz
cwtl
sbb
shr
xchg
lods
mov
test
jb
sbb
xor
cmp
es
mov
sub
dec
rol
cmc
jne
mov
adc
mov
out
enter
jecxz
sub
sub
push
or
das
cwtl
inc
cmp
adc
sbb
stc
jno
movb
push
gs
mov
xchg
cs
pop
cmp
jl
punpckhdq
push
dec
nopl
adc
and
jp
ficoml
ljmp
andl
sub
dec
or
push
xor
mov
add
out
xor
cmp
lea
adcb
push
dec
rorb
movsb
sbb
push
mov
xchg
jns
adc
out
sub
lret
imul
cmc
dec
or
or
daa
sub
mov
dec
out
pushf
jecxz
xchg
aas
dec
int3
jb
xchg
jge
push
cmc
sub
gs
gs
sub
scas
adcl
test
lret
aaa
xchg
into
insb
push
sbb
xchg
nop
cmc
notl
xchg
cmp
popa
dec
push
repnz
sub
push
mov
test
and
in
inc
jae
lret
in
sub
pushl
xacquire
mov
mov
mov
push
pop
sti
mov
movsb
clc
test
xchg
mov
mov
push
cltd
into
xchg
ret
andb
xchg
jb
addr16
leave
pop
add
add
add
add
loop
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
call
call
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
andl
mov
fidivrs
add
xor
jae
jae
andl
mov
shlw
inc
repz
stos
adc
inc
xchg
arpl
arpl
jae
lcall
push
fidivrl
outsb
sti
pop
repz
sbb
dec
jecxz
test
and
ljmp
jno
scas
shll
test
stos
subb
push
push
jge
cmp
add
insb
mov
jmp
mov
cmp
int
adc
mov
jl
outsl
pop
push
xor
push
pop
push
cmpsb
in
mov
in
mov
dec
arpl
jae
cmpb
push
xchg
inc
cmp
shlb
xor
rorl
jns
sbb
jae
shll
push
bound
lret
add
pop
aad
and
das
mov
xchg
arpl
fnstenv
in
dec
pushf
cmp
rcl
adc
push
cld
into
sahf
fcompl
arpl
into
add
arpl
jae
dec
xor
push
aam
ret
jbe
inc
ljmp
lahf
sub
jns
jae
out
testb
jae
fs
scas
sub
xor
leave
jg
push
adcb
xorl
adc
repnz
int3
jne
jns
sarw
jecxz
mov
shll
jecxz
xchg
inc
xchg
cmp
adc
pushl
iret
fistl
push
shll
inc
repz
add
xor
arpl
jae
andl
mov
shlw
inc
repz
add
xor
arpl
jae
andl
and
scas
in
xlat
fwait
rol
xchg
aaa
iret
imul
dec
dec
mov
push
lahf
dec
fisttpll
mov
fnstcw
xorl
inc
inc
out
mov
lret
cmp
les
xchg
scas
adc
push
fimull
add
loope
lahf
inc
test
arpl
scas
adc
xchg
jl
xchg
ffreep
test
fsubrs
data16
xlat
and
pop
dec
mov
addr16
mov
mov
out
inc
popf
pop
enter
xor
sbb
test
sub
adc
shl
movsl
lea
pop
in
test
xchg
ja
dec
dec
push
gs
aaa
sbb
dec
ss
push
es
enter
daa
bnd
mov
cmp
inc
frstor
fldcw
xchg
push
jnp
mov
sbb
addr16
jp
xchg
fcmove
jle
or
addb
pop
or
push
push
mov
pushf
insl
scas
imul
xchg
inc
add
fwait
adc
in
je
pop
testb
insl
out
rclb
stos
adc
mov
inc
add
stc
or
lods
sarl
fwait
jnp
out
in
or
pop
ficoms
inc
add
fisubrl
mov
dec
xor
cmp
rcrb
xor
cmpsb
icebp
sbb
add
repz
movsl
add
clc
lret
mov
out
cmp
push
xchg
into
jl
cmp
addr16
pop
adc
ret
sbb
sub
fs
test
mov
shr
scas
daa
mov
xor
xor
or
or
insl
fbld
rcll
in
dec
and
mov
xchg
movsb
outsl
jnp
push
cmpb
add
sub
pop
and
pandn
cmp
punpckhdq
jge
scas
filds
push
mov
jae
inc
pop
pushf
out
int
int
and
sti
mov
jge
or
add
lock
inc
xchg
leave
push
inc
push
xor
or
sub
adc
jae
add
xchg
das
aam
add
sbb
fisubrs
sub
lea
insl
es
sbb
adc
dec
popf
stos
mov
scas
jp
cmpsl
cmp
sub
add
xchg
cmc
xor
ret
pusha
xchg
add
xchg
leave
insl
int3
xor
pushf
mov
inc
call
dec
jno
mov
xchg
mov
adc
mov
aam
cmc
dec
cmpsb
adc
jo
mov
cs
gs
mov
loop
jne
sub
pop
out
jnp
dec
nop
notl
jno
in
in
stos
push
cmp
movsl
aas
jb
lock
xor
sub
mov
pop
pop
out
iret
jp
lock
ljmp
pop
ficoms
loopne
push
mov
cmp
add
mov
or
pop
rclb
jp
mov
rcrl
lods
mov
data16
sub
cmp
rorb
or
push
mov
arpl
nop
lods
repnz
dec
jne
or
add
xor
int
subb
push
out
cmp
ljmp
and
mov
mov
xor
outsl
xchg
pop
jo,pt
stos
push
mov
xchg
adc
rcl
sbb
jbe
sbb
lcall
clc
or
jl
icebp
aad
xchg
cld
mov
mov
dec
mov
adc
mov
mov
sub
int
cmp
aad
in
rcll
icebp
clc
push
sbb
insl
sub
pause
divb
loopne
fs
daa
imul
pop
adc
lea
aaa
imulb
mov
push
mov
andb
add
int3
addl
or
sbb
adc
and
mov
mov
sub
sbb
adc
call
loop
or
add
cli
ror
or
fists
sbb
pop
cli
and
xchg
inc
xchg
ficomps
inc
cmpsl
faddp
push
jl
xchg
mov
int
ret
inc
dec
mov
in
scas
inc
mov
or
add
aas
mov
popl
lods
in
adc
loop
les
shll
insl
cmp
repz
je
and
dec
movl
fidivrl
xlat
add
out
xchg
sbb
xchg
mov
repz
cmpsb
sub
dec
xor
inc
clc
jle
lea
leave
stc
push
jecxz
xor
xchg
sbb
repnz
xchg
stos
cmp
dec
out
jl
jmp
jmp
push
test
jb
cld
mov
adc
gs
mov
dec
les
adc
fidivl
in
push
into
mov
adc
ljmp
xchg
icebp
jb
mov
lods
sbb
addb
mov
dec
mov
xchg
ficomps
jge
shrb
mov
aas
jecxz
test
lret
pop
xor
lods
xchg
ret
movsb
mov
nop
movsl
mov
pop
les
cltd
sbb
cwtl
scas
jg
lea
dec
push
dec
int3
mov
les
in
mov
or
repz
aam
mov
icebp
dec
orb
sub
ficoms
sbb
cmp
add
dec
and
scas
pop
lea
inc
cli
xor
cwtl
mov
aaa
notb
jl
jne
in
into
in
cmovle
adc
add
mov
push
ljmp
popa
xchg
push
pop
ficoms
adc
push
cli
stos
pop
inc
ss
idivb
stos
push
push
xchg
push
insl
or
test
ljmp
mov
cmp
add
jle
arpl
test
shlb
out
cwtl
dec
and
inc
leave
jmp
jp
int3
push
movsl
imul
subl
xchg
sbb
loopne
jne
in
adc
or
xchg
out
scas
jae
addps
loopne
mov
add
cli
lock
inc
xchg
mov
test
mov
mov
test
sbb
sbb
fs
xor
xchg
pusha
cmpsb
je
mov
decl
lea
ret
enter
add
push
jnp
add
fadd
insl
das
jmp
int
adcb
xchg
shll
out
sub
push
outsb
cmc
jb
jmp
fimuls
insl
xchg
mov
pop
push
lret
lcall
jl
shl
and
or
lahf
pop
js
or
jno
stos
xchg
je
add
fcmove
push
adc
insb
add
repnz
test
pop
mov
mov
cmp
mov
xchg
testb
cwtl
out
lret
lret
hlt
mov
jno
in
mov
aas
cld
dec
popf
test
pushf
lods
ds
scas
test
adc
minps
mov
or
insb
enter
push
rcl
fwait
jb
test
mov
xor
and
enter
sub
or
xor
push
mov
xchg
and
lahf
repz
aaa
mov
push
mov
push
dec
sbb
cmp
stos
pop
pop
fmuls
push
movsb
repnz
fcmovu
xchg
push
sub
pusha
cmp
pop
mov
mov
negb
stos
into
cmp
and
cmp
js
pop
xlat
ljmp
nop
cmp
int3
popa
lcall
lea
dec
outsb
fwait
pop
divb
dec
sarb
fstps
je
outsl
fildll
movsb
jp
xor
and
orl
pushf
jae
jge
rorl
pop
dec
add
pop
call
jp
add
popf
xor
rcrb
mov
push
push
and
adc
lret
bound
mov
sti
fucomi
jmp
xor
xchg
nop
pop
popa
cmpsl
mov
add
gs
les
mov
dec
inc
in
dec
dec
xchg
cmpsb
ret
daa
dec
sbb
lock
out
jp
cltd
jge
mov
mov
fdiv
mov
cmp
orb
shl
int
xor
pop
sbb
xchg
mov
lea
mov
push
stos
dec
hlt
ss
in
orb
xorb
push
shr
dec
ret
in
je
lahf
ficoml
sub
pop
mov
jecxz
ljmp
out
pop
scas
jmp
and
lret
les
jnp
and
in
mov
or
pop
inc
or
push
icebp
sub
imul
mov
lods
fcomi
jle
roll
out
or
mov
fcompl
test
sub
data16
aam
cmpsb
mov
mov
inc
mov
stc
sbb
sbb
sub
fnsave
pop
sti
pushf
or
in
gs
pop
scas
popf
out
repnz
xor
out
mov
mov
sub
sbb
subl
dec
inc
push
adc
xchg
mov
test
or
fmulp
mov
lods
adc
aam
lods
sbb
into
mov
mov
repnz
dec
mov
cli
setb
sahf
push
not
sahf
or
adc
cli
inc
imull
bound
jle
in
push
xchg
ss
jmp
or
mov
mov
and
cs
pop
lods
pop
vpunpcklqdq
or
xchg
movsb
std
push
sbb
das
dec
enter
sub
jae
icebp
sub
dec
lods
stc
orb
popa
adc
sbb
jbe
pop
mov
sbb
and
leave
pop
and
push
leave
out
rcrb
cmp
pop
push
lret
ret
mov
mov
xchg
stc
enter
pop
in
popf
xlat
add
addr16
pop
imul
push
cld
jmp
push
icebp
adc
imul
test
ja
aad
shl
out
stc
popf
pushf
mov
ret
insl
lcall
dec
mov
jb
push
jns
jle
xor
lods
xchg
and
aaa
and
mov
mov
clc
jmp
sbb
mov
and
dec
insl
imul
int
in
push
push
mov
cltd
cwtl
in
movsl
shl
xchg
push
sub
lods
outsb
ret
mov
xor
mov
insb
inc
daa
les
imul
shll
ret
push
loopne
lods
mov
test
aam
mov
mov
int
mov
sahf
xor
into
fwait
mulb
dec
and
popa
xor
lret
mov
stos
mov
pushf
mov
fucomi
mov
mov
dec
addr16
into
jl
mov
call
lods
insb
lock
es
xor
dec
xor
xchg
lods
push
push
outsl
js
mov
push
xor
inc
mov
cmovl
ret
adc
sub
dec
push
loopne
jp
in
dec
adcl
push
mov
cwtl
lds
pushf
push
xlat
aam
ja
mov
adc
adc
aam
inc
cmc
xor
test
inc
mov
mov
and
mov
in
and
leave
push
xor
jmp
out
pop
pop
sub
inc
sub
fucomip
jg
inc
mov
push
jae
sti
clc
cmp
add
sbb
dec
sbb
cmpsl
addr16
sub
pop
sbb
or
insb
sub
int3
jnp
cltd
pop
inc
fcos
adc
inc
mov
jb
dec
pop
sub
mov
xchg
stos
pop
std
or
loopne
gs
push
outsb
out
in
into
xor
push
inc
push
repnz
test
sub
push
pop
push
mov
shrb
jns
push
xor
jbe
into
or
cltd
adc
cmp
jb
push
push
repz
call
pop
add
xlat
in
and
lret
push
pop
mov
sub
repz
xchg
shl
sbb
lea
dec
out
test
dec
pop
in
and
dec
pop
mov
outsl
aaa
pop
shrb
push
dec
scas
cld
sahf
cmc
stos
dec
xchg
inc
adc
test
rcrl
add
push
and
jne
lock
inc
leave
testb
lret
ffreep
jnp
fiaddl
clc
pop
dec
xchg
mov
mov
mov
cld
rolb
stc
jbe
and
popl
mov
mov
pop
test
sub
push
ret
in
pop
daa
and
cmp
lret
add
jns
fldenv
cmp
shl
xchg
jne
ss
ja
push
push
aaa
in
xchg
mov
jp
popf
ljmp
fstpl
ds
ja
test
mov
ret
mov
aaa
inc
dec
mov
sub
aas
in
test
mov
addb
lock
add
fsubs
shrl
sbb
pusha
cli
stc
push
fistps
scas
mov
xor
and
ret
push
or
addb
pop
xchg
add
sub
daa
shlb
lods
andb
mov
aas
jmp
fldcw
ljmp
cmc
pushf
push
push
movsb
lods
jg
pop
xor
pop
les
ljmp
aam
ret
xor
adc
or
insl
xchg
popf
and
cmc
jae
fists
pushf
fcompl
pop
pop
mov
int
xor
sti
scas
loope
ficoms
mov
dec
fcoms
imul
stos
negl
dec
adc
and
push
push
push
mov
cli
pop
mov
shl
fmull
xchg
lret
ds
pop
clc
jmp
fstl
xorb
cmp
inc
jmp
call
flds
rcrb
lahf
adc
mov
andb
repnz
push
imul
in
scas
cmc
jl
and
addr16
scas
mov
bound
in
push
fdivs
das
add
cld
add
mov
bound
jne
outsl
xor
adc
jo
movsl
gs
push
int3
rcrl
mov
xor
clc
sbb
mov
cmp
rclb
mov
rolb
ljmp
rcrl
fisttpll
outsb
xchg
jo
sub
pop
inc
testl
cmp
add
push
mov
sbb
jg
push
sbb
icebp
jl
clc
and
or
inc
xchg
repz
test
push
cmpsb
push
sub
out
inc
pop
xor
int3
xlat
lret
and
outsb
sbb
cli
lds
push
and
pop
jl
imulb
aas
push
or
cmp
push
scas
xor
mov
adcb
test
es
leave
mov
test
xchg
mov
int
jl
ljmp
push
xor
fdivr
jle
pop
imul
mov
sbb
lret
test
sub
mov
add
inc
or
sbbb
mov
hlt
loopne
int
push
sub
into
mov
test
sti
mov
mov
push
or
movsl
mull
adc
pop
and
movb
push
dec
in
jbe
mov
scas
fwait
xchg
mov
popf
mov
dec
popf
rclb
fistpll
out
ljmp
je
ret
pop
movsl
inc
mov
pop
push
lock
loopne
mov
scas
mov
mov
push
and
adc
inc
dec
nop
popf
aad
or
mov
pop
lret
pop
push
addl
mov
sub
loope
stos
into
xor
sbb
push
dec
adc
pop
ds
sub
jmp
sbb
inc
xor
int3
xchg
icebp
test
les
push
push
or
adc
mov
cmpsb
int3
test
sti
xor
cmp
fimull
mov
cs
mov
dec
js
adc
insb
cmp
or
adc
xor
xchg
pop
adcb
dec
add
mov
call
lret
push
repnz
mov
int
push
push
add
inc
sbb
in
in
aam
dec
rolb
hlt
cmp
pop
jecxz
insl
mov
inc
xchg
jmp
mov
mov
dec
pop
insb
mov
jmp
xor
in
sbb
jle
fadds
sti
dec
into
rep
xor
push
jns
push
popf
dec
fistpl
and
lcall
adc
das
xor
addr16
pusha
ret
mov
and
lds
andb
outsb
mov
sub
xchg
pop
mov
push
inc
fsubrl
test
aad
mov
ljmp
and
stos
xor
lret
adc
cmc
mov
sbb
adcl
cmpsl
in
cwtl
push
imul
push
mov
jge
cmp
inc
xchg
dec
sahf
inc
sbb
pop
cltd
sub
arpl
fs
test
inc
pop
adc
adc
dec
add
in
ficompl
and
lret
xchg
sbb
cmpb
stos
sahf
jo
jne
xchg
inc
add
js
adc
dec
and
dec
subb
mov
leave
or
sub
popa
sbb
mov
shlb
mov
rcrl
into
adcb
push
fimuls
daa
imul
movsl
or
inc
aas
cmp
jns
mov
cmp
out
loop
sbb
push
int3
mov
lahf
out
popa
pop
jne
negb
pushf
enter
popl
or
pop
mov
xor
repnz
ror
test
lcall
fildll
test
aas
stos
sahf
dec
pusha
inc
jo
pop
jge
xchg
mull
subb
dec
mov
mov
cs
pop
lods
dec
nop
sarl
aam
loope
mov
scas
test
rolb
mov
mov
adc
adc
outsb
inc
mov
faddl
cli
test
lea
or
out
dec
jecxz
fwait
sub
lret
jle
or
jbe
add
mov
xor
push
dec
cmp
jecxz
iret
xchg
pushf
pop
jmp
scas
stos
jmp
ss
gs
cmc
in
test
sahf
pop
jb
jnp
lods
push
cmp
mov
in
xchg
cmp
cmp
data16
test
adc
mov
outsb
cld
xor
jge
cmpl
aas
test
or
clc
jge
stc
inc
sub
pop
jo
mov
sub
shll
imul
xchg
xor
lock
dec
adc
inc
xor
fwait
js
jne
stc
int
mov
shlb
mov
push
mov
fs
mov
push
hlt
into
shr
inc
sub
and
or
pop
lcall
mov
adc
inc
in
sub
mov
or
out
jbe
mov
fwait
lcall
lods
xor
and
jae
cmp
int
jno
add
jecxz
xorb
ljmp
sbb
push
in
repnz
call
sbb
and
jns
jno
mov
nop
lret
fmuls
popa
sub
fdivl
cpuid
daa
int3
adc
mov
fmul
cmp
scas
adc
push
faddp
jne
jae
push
xor
mov
push
fstpl
dec
nop
in
scas
sbb
lret
or
pop
pushf
ret
shl
loop
or
xadd
mov
ja
push
jmp
lock
test
push
std
xchg
inc
rcrb
rorl
iret
inc
lock
mov
mov
fstps
sarb
jl
inc
mov
sbb
cmp
inc
adc
imul
fnsave
loopne
adc
adc
mov
push
inc
pop
add
add
les
and
or
inc
xor
and
dec
sbb
sub
adcb
add
jno
xchg
ret
pop
jo
sub
fs
inc
daa
je
test
ja
popa
lahf
shrl
mov
pop
hlt
and
repnz
pop
xchg
enter
rolb
adc
sub
lods
xor
aas
add
pusha
test
sub
mov
push
les
mov
inc
pop
ljmp
dec
in
sahf
clc
jg
mov
mov
jp
pop
repnz
adc
outsb
xor
pop
pop
out
mov
mov
pusha
cmpsl
push
or
outsl
shll
jo
repnz
rorb
rclb
pop
pop
int
dec
xor
inc
int
les
imul
sub
xchg
pusha
cmpsb
cmp
aas
and
mov
add
mov
cmc
shll
jecxz
mov
aam
ja
insl
and
mov
xchg
lcall
adc
lock
mov
fsubr
xchg
xchg
xchg
sarb
xchg
mov
cmc
mov
xchg
adc
and
test
dec
mov
xlat
sub
rol
cltd
out
rorb
xchg
mov
and
scas
dec
cld
push
xchg
sti
mov
data16
and
das
roll
insl
add
iret
push
adc
cmp
mov
push
or
push
push
out
inc
lahf
in
lahf
jecxz
insl
add
cmc
pop
lds
jae
pop
pop
ds
loope
aas
mov
arpl
adc
xchg
daa
repnz
iret
test
rolb
nop
push
mov
rcll
loopne
int3
mov
dec
jl
mov
test
fwait
enter
add
add
add
jnp
adc
movsb
js
dec
aam
in
inc
mov
add
icebp
push
push
out
add
loop
dec
movsl
pop
rolb
cli
mov
xlat
xor
xchg
inc
dec
sti
and
dec
dec
cltd
pop
push
mov
ljmp
nop
or
aad
loope
mov
xorl
jae
roll
rol
mov
out
mov
push
test
xchg
ljmp
jg
aad
xor
push
fimull
fimull
push
hlt
pop
push
and
mov
mov
cli
clc
mov
stos
mov
test
pop
rorl
out
jbe
nop
iret
pop
jmp
pop
pushw
xor
jbe
dec
jmp
mov
enter
pop
pop
in
jp
or
cmp
jbe
sbb
shrl
leave
and
js
inc
mov
mov
orb
sbb
push
out
mov
rcrb
mov
scas
mov
fstps
jnp
cmp
stos
fisubrs
pop
mov
icebp
jle
sti
pushf
fimuls
jne
lahf
jmp
xchg
addr16
adc
sbb
shl
lods
xchg
sbb
jecxz
mov
inc
arpl
test
bound
inc
lahf
out
pop
arpl
fisubs
push
hlt
cmpl
jno
mov
jg
imul
dec
test
fwait
adc
loop
pop
push
mov
imul
int
imul
lahf
jne
gs
lret
push
aas
pop
jnp
and
mov
fimuls
out
add
mov
movsb
shrl
inc
ljmp
rcll
mov
arpl
cli
or
addr16
into
sub
pop
aas
rcrb
pop
clc
mov
and
js
mov
jp
movsl
jb
pop
sbb
pop
sbb
clc
xor
fmull
mov
ret
shlw
inc
repz
add
xor
arpl
jae
andl
mov
shlw
inc
repz
add
xor
arpl
jae
andl
mov
shlw
inc
repz
add
xor
arpl
jno
andl
xor
shlw
inc
jae
cld
cmpsb
in
sbb
xchg
loope
outsb
fisttpl
int3
int3
int3
int3
int3
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
es
ss
push
int
push
fisubs
lods
xor
xchg
pop
out
idivb
es
ss
push
int
frstor
jbe
inc
lea
cmpsb
insl
mov
repnz
xchg
pop
out
idivb
es
ss
push
int
frstor
jbe
inc
lea
cmpsb
insl
mov
cmc
aas
mov
push
arpl
mov
movsl
frstor
lea
int
lods
push
mov
test
and
dec
xchg
jne
xchg
fwait
pop
dec
lods
repnz
mov
orb
adc
sbb
sub
mov
fstpt
movsl
addr16
cmpsb
cmp
lock
cld
or
mov
test
fnstenv
xchg
mov
mov
arpl
leave
mov
sbb
aam
fstps
cs
frstor
push
mov
xchg
mov
pop
imul
es
push
jo
popf
sahf
lods
mov
mov
jl
jle,pn
rorl
sub
mov
std
push
int
frstor
jbe
inc
lea
cmpsb
insl
mov
xchg
pop
out
idivb
pusha
jmp
jae
or
aas
aam
lret
pop
leave
out
mov
in
cli
sub
je
push
and
test
frstor
rcrl
inc
in
stc
ret
es
push
sarl
addl
mov
jb
test
pop
mov
inc
lea
cmpsb
insl
mov
xchg
pop
out
idivb
es
ss
push
int
frstor
jbe
inc
lea
cmpsb
insl
mov
xchg
pop
out
idivb
es
xchg
xchg
mov
mov
iret
sub
sbb
dec
pushf
scas
dec
push
cmp
sub
sub
pop
repnz
and
js
pop
stos
sbb
mov
arpl
out
jle
icebp
pop
clc
cmp
sbb
adc
aad
mov
les
pop
push
mov
add
xor
in
fisubl
inc
rolb
lret
xlat
add
lahf
mov
cmp
cmpsl
xchg
int
or
cmpsl
insl
lcall
sbb
mov
in
mov
clc
testl
out
leave
in
xchg
arpl
cmp
mov
cltd
adc
push
test
addr16
mov
mov
adc
dec
fwait
sahf
imul
insb
inc
sub
mov
mov
addb
lret
sbb
popa
cltd
jle
jg
pop
xor
mov
adc
mov
adc
sbb
fldenv
out
push
lcall
repnz
fsubs
mov
repz
mov
pop
xor
je
jno
or
movsb
data16
sbb
div
popf
rolb
mov
mov
ret
add
jmp
jo
push
inc
mov
and
lret
lods
orl
nop
mov
cmpsb
ss
jl
mov
stos
loope
xchg
mov
xchg
and
scas
pop
mov
mov
mov
dec
xchg
push
fistpll
in
rep
pushf
mov
inc
dec
cld
sbb
and
push
insb
ret
pop
adc
add
mov
fstpt
into
pop
jbe
push
js
or
fnstenv
enter
pop
pop
add
orl
inc
leave
pop
mov
inc
dec
inc
mov
pop
jl
sub
nop
xor
mov
imul
mov
shrl
or
mov
and
adc
jl
ljmp
sahf
and
into
fs
insb
mov
cwtl
sub
jae
pushf
xor
idiv
repz
mov
ss
mov
outsb
mov
daa
mov
loop
sar
cmp
push
es
mov
pusha
lret
dec
cmp
daa
sub
cltd
sub
jno
push
cmpb
add
cmpsb
shll
dec
loop
mov
jmp
lahf
cmp
mov
jge
mov
inc
sbb
es
pop
jecxz
data16
adc
xchg
ret
and
aad
jo
or
fistpl
mov
sub
push
pop
or
or
inc
mov
jns
push
int3
xor
cmp
mov
xor
ds
test
adc
imul
push
pop
adc
scas
inc
adc
cmpsl
push
mov
pop
fidivs
hlt
aas
outsl
jecxz
fisttpll
cmp
divb
dec
jo
mov
fwait
cmc
and
pop
in
xor
pop
and
movsb
sbbb
mov
fidivs
pop
nop
mov
pop
sarb
adc
add
pop
fnstsw
inc
aas
arpl
ret
ss
cmp
testl
mov
popf
scas
lods
push
fimuls
ds
sahf
and
nop
sub
sar
mov
pop
mov
shlb
out
loope
adc
imul
and
cmp
rorl
adc
push
gs
out
adcb
mov
leave
aaa
sub
or
bound
sahf
ja
pop
and
pop
or
xor
mov
mov
xchg
fcompl
inc
xor
icebp
xor
xchg
adc
xchg
mov
xchg
lret
mov
loop
es
stc
ror
add
push
pop
cmp
mov
sub
mov
add
fstps
out
pushf
cmp
test
aas
cld
mov
or
pop
jne
inc
push
mov
sub
pop
pop
inc
adc
lods
xor
xor
stc
fldenv
pop
ret
out
mov
cmp
scas
arpl
cmp
mov
dec
lock
mov
fcomi
xor
cmp
popa
repz
aad
fs
pop
ret
inc
leave
sbb
mov
aam
sbbb
push
mov
test
jno
idivl
jnp
xlat
addr16
push
lret
lods
das
cs
pop
sbb
cmp
rolb
cltd
xor
cs
mov
daa
out
ret
push
adc
cmpsl
sahf
jg
pushf
jecxz
in
xor
push
and
test
or
gs
push
lock
pop
insb
xchg
pop
mov
cmp
push
cmp
das
outsl
pusha
pop
dec
cltd
leave
shrl
cwtl
in
call
pop
and
cmpsb
push
std
pop
icebp
addr16
dec
roll
xor
out
lods
push
lods
mov
sbb
mov
arpl
adc
and
xor
and
loopne
cli
adc
inc
or
loop
out
and
cmp
mov
sbb
adcb
in
cmp
iret
mov
scas
jge
aaa
shlb
outsl
cmpsb
cltd
or
mov
lret
and
out
leavew
jg
sbb
leave
sbb
loop
repz
aaa
iret
mov
add
and
mov
arpl
push
sub
dec
jbe
imul
jmp
xorl
add
xchg
dec
aam
lea
call
incb
movsl
push
fdiv
sub
in
rcl
in
mov
pop
aam
fwait
jne
fldenv
lcall
sbb
out
xor
lcall
cmp
xor
xchg
icebp
ja
pop
add
dec
jle
sarl
out
hlt
dec
mov
es
push
and
inc
scas
sahf
ljmp
xchg
sbb
fildl
testl
add
nop
xchg
out
das
and
enter
jno
sarb
inc
or
nop
pop
add
mov
mov
dec
and
jmp
ja
addr16
cmp
test
cmp
jnp
xlat
in
mov
adc
adc
or
dec
sub
leave
cmp
popf
xor
std
mov
jp
mov
xchg
xchg
movsb
sarl
inc
pushf
stos
xchg
ljmp
inc
clc
das
leave
test
add
dec
repnz
test
jmp
lods
mov
mov
inc
mov
mov
cmp
mov
xchg
sbb
leave
jmp
push
in
repnz
pop
fst
add
sahf
mov
cs
test
into
jo
clc
aas
movsl
subb
daa
cmp
adc
mov
stc
mov
mov
mov
out
push
shl
dec
stos
jbe
sub
mov
add
cmp
mov
cmp
lahf
sti
mov
nop
push
pushf
mov
inc
lods
das
dec
scas
gs
dec
ffreep
sbb
mov
adc
lods
pop
mov
out
fnstcw
push
inc
add
enter
mov
fnstenv
jnp,pn
push
stos
sbb
dec
insb
mov
mov
jb
pop
inc
dec
imul
ret
leave
pop
mov
cld
push
cwtl
clts
test
mov
int3
call
ljmp
pop
mov
gs
jo
inc
and
jp
dec
dec
add
jb
sbb
mulb
sub
adc
sbb
movsl
adc
lock
xchg
cmp
cmp
add
out
addb
movsb
and
out
mov
xchg
scas
mov
pop
nop
stos
push
inc
adc
pop
pop
dec
insb
mov
int3
pushf
out
ret
pop
and
imul
in
inc
ss
mov
adc
shlb
mov
jle
inc
xchg
scas
xchg
shl
add
mov
dec
inc
insl
xchg
lock
fiaddl
sub
push
mov
pusha
dec
addl
add
dec
clc
je
std
inc
sbb
js
es
test
cmp
mov
repnz
add
xchg
xor
repz
inc
sub
xor
jle
dec
icebp
xchg
in
cltd
pop
clc
pop
adc
sbb
aad
int3
cmpb
mov
arpl
push
jbe
cld
xlat
movsl
incb
sub
loope
adc
or
rclb
add
imul
movb
and
cmpl
fisubs
mov
mov
adc
movsl
popa
sahf
ds
mov
hlt
cmp
fbld
jne
frstor
jle
pminub
xorb
imul
adc
mov
lcall
mov
or
cmp
insb
dec
in
bnd
push
je
cli
cmp
cmpsl
imul
jnp
mov
adc
rol
xchg
in
jnp
lods
and
xchg
ds
lods
xchg
mov
jnp
faddl
or
in
int3
push
fwait
stos
in
orb
pop
jmp
shlb
inc
cs
cld
shll
dec
repz
hlt
adc
xor
xchg
mov
in
or
popa
rclb
sub
lret
decb
loope
loop
sub
stc
xchg
mov
loopne,pn
and
inc
out
jb
adc
ds
mov
jne
repz
and
loop
inc
jmp
xchg
xchg
lock
mov
add
or
add
xor
rcll
mov
adc
mov
jbe
mov
out
loop
and
or
cs
enter
lcall
add
pop
xor
int
sbb
out
loop
mov
or
and
mov
icebp
fadds
dec
xchg
push
xor
aad
sub
push
cli
cld
sti
sub
inc
data16
and
sbb
fs
inc
sub
mov
xchg
ja
in
or
push
sub
sahf
int
mov
cmpsb
outsb
jae
xchg
add
gs
push
xchg
inc
loopne
outsl
call
repnz
or
ds
sub
test
and
out
testl
inc
adc
mov
cmp
call
lret
loopne
cltd
sub
cmp
xlat
push
xor
push
cmp
loopne
and
or
push
xchg
aas
nop
xor
inc
xor
jbe
adc
push
bound
std
fistps
imul
lea
inc
mov
sub
stos
in
sbb
iret
frstor
mov
dec
add
cmpsb
into
scas
mov
cmp
push
push
inc
aaa
inc
seto
lret
xchg
in
or
pop
xchg
dec
lret
cli
repz
pop
lds
aas
and
xchg
sbb
dec
ret
decb
or
adc
cmp
inc
jb
pop
mov
outsl
and
or
lret
inc
inc
lret
or
sbb
cwtl
popa
pop
out
test
cltd
hlt
out
xor
xor
add
lret
loope
dec
jbe
pop
dec
jl
out
push
movsl
jmp
or
iret
mov
add
xor
and
std
mov
repz
dec
ficomps
sub
xorb
and
nop
sub
dec
mov
sub
dec
push
call
aad
insl
pop
sbb
rcrl
int
daa
dec
mov
ret
add
aaa
pop
push
sbb
inc
dec
je
push
mov
mov
sbb
jo
aas
test
in
shrb
jp
inc
lds
sub
cmp
sbb
sub
ds
in
sarl
inc
jl
sti
add
mov
mov
mov
dec
daa
sbb
sub
in
test
int
sub
addl
fstpt
push
cmp
shll
mov
aaa
loopne
inc
inc
js
jge
xor
shll
sbb
scas
loope
and
je
push
sub
popa
sub
ret
mov
mov
xchg
jno
rclb
cmp
ret
mov
pushf
dec
push
in
fwait
lahf
shll
mov
adc
cmc
and
mov
mov
jle
in
ja
sbb
xchg
pop
stos
or
and
aaa
push
loop
aam
adc
xor
das
and
xchg
fdiv
inc
aam
sarb
data16
push
sub
mov
lea
sbb
int3
or
les
mov
ret
sbb
aas
test
in
mov
sub
adc
pop
mov
dec
dec
sbb
test
push
cltd
mov
xorb
cmpsl
dec
or
cs
cmp
stos
mov
push
iret
push
mov
outsb
jecxz
mov
jae
lods
add
cmp
lea
sahf
mov
xor
dec
cltd
or
push
dec
popa
call
sbbl
xchg
adc
inc
js
sti
xchg
leave
clc
pop
cmc
sub
lahf
mov
fwait
add
sbb
jmp
add
sub
loope
mov
xor
scas
iret
jp
add
push
fwait
mov
mov
fisttps
stos
cwtl
pop
lea
arpl
adc
sbb
movsl
addr16
sub
test
sbb
popf
sbb
pop
pop
jbe
mov
xor
push
xchg
cld
and
faddl
aas
rcrb
xor
repz
icebp
fcmovb
fildll
cmpsl
xlat
sbb
inc
loop
and
add
popa
sbb
cwtl
and
sahf
mov
inc
or
cs
inc
dec
pusha
mov
fsubr
test
sbb
cmp
test
jns
or
pop
inc
push
and
shrb
cmp
outsb
popf
ret
fisubl
dec
cmpsb
dec
cmp
ror
loopne
cmp
mov
iret
iret
lock
icebp
pushl
ja
jb
es
icebp
and
mov
sub
out
xor
lret
xchg
inc
lret
cwtl
pop
mov
push
fbstp
rcrl
dec
pop
sbb
sub
aaa
mov
sub
ss
fimuls
jg
out
sahf
add
mov
or
mov
pop
shlb
test
movsb
dec
jmp
adcb
addb
mov
out
scas
jecxz
push
out
out
dec
pop
inc
cmpsb
cwtl
cmp
pop
push
cwtl
add
inc
inc
dec
fnstcw
push
stos
arpl
nop
adc
out
adc
mov
xchg
nop
flds
sub
jno
sbbb
and
push
jmp
push
imul
cltd
cltd
js
outsb
pop
mov
pop
sbb
loop
mov
mov
aam
fmul
and
popa
and
aas
sarb
pop
ret
out
push
add
movntq
cmp
clc
rolb
outsb
and
mov
fmul
dec
xor
jns
stos
mov
test
dec
push
or
gs
pop
decb
adc
int
imul
mov
mov
scas
pusha
pop
shrb
dec
or
mov
mov
mov
icebp
inc
jns
adc
fsubr
and
test
jnp
xor
xchg
sub
lcall
push
adc
sbb
pop
jecxz
sbb
adc
xorl
stc
test
scas
mov
and
cs
dec
xor
lahf
in
clc
jno
insl
neg
sbb
push
ficomps
fwait
cld
jae
lock
inc
iret
mov
xrelease
mov
repnz
nop
rol
cmp
add
jmp
add
aam
insb
xchg
mov
ss
jnp
push
lock
out
jg
xlat
cmc
pop
addr16
scas
or
daa
add
loope
sbb
pop
outsb
and
pop
push
mov
jl
sbb
push
dec
sub
cld
pop
sti
aad
mov
xchg
xor
fcomi
das
test
out
pusha
push
sti
ja
sbb
push
jp
and
or
lahf
in
ds
mov
add
repnz
cmp
or
mov
xchg
sub
push
pushl
mov
loop
mov
sub
pop
and
and
pushf
lcall
cmp
cld
push
dec
rorl
fs
inc
outsl
fs
dec
ja
addr16
adc
out
inc
xor
sbbl
hlt
cwtl
pop
stos
xchg
pop
mov
or
outsb
pop
sarl
and
js
mov
in
fnstsw
fwait
lcall
mov
mov
and
adc
clc
and
cli
mov
mov
jnp
xchg
fidivs
xchg
cli
int
out
pop
ret
pop
test
dec
push
pop
pushf
in
ss
or
int
and
stc
mov
adc
mov
or
or
push
xor
adc
out
insb
in
xchg
xchg
pop
rcrb
ljmp
test
mov
adc
pushf
and
je
das
xchg
aad
mov
and
sbb
xor
shl
xorl
xchg
push
mov
test
mov
scas
std
les
mov
nop
push
jmp
sarl
in
movsl
cmpsb
enter
inc
rcrb
sub
mov
fistps
xor
sub
enter
push
sub
push
outsl
inc
push
cmp
jb
in
insb
pusha
pop
sbbb
mov
fidivrs
add
cmp
je
cld
lahf
sub
jo
add
sbb
fstps
stc
add
sub
leave
popl
popf
sarb
out
or
dec
ds
bound
mov
xchg
jbe
clc
shlb
rcll
sub
inc
xchg
cmp
cltd
xchg
mov
jge
xor
cmp
test
je
enter
movsb
cltd
or
pushf
addb
inc
mov
push
ret
sub
and
lock
dec
mov
dec
fists
mov
ss
shrl
pusha
cmc
pop
scas
jnp
mov
jnp
aad
ror
pop
mov
mov
outsl
pop
in
fcoms
cmp
push
aas
inc
stc
ret
daa
loope
lret
jne
fstp
scas
mov
movsb
jb
loopne
push
adc
adc
pop
loope
test
fldcw
test
dec
mov
subl
fcom
add
inc
cltd
mov
or
cmp
mov
nop
sahf
movb
jl
sbb
arpl
mov
rcrl
sbb
decl
neg
sub
lahf
push
push
adc
js
sbb
and
sbb
cmp
js
sti
sahf
addr16
cmp
das
lock
cmpsb
repz
adc
loope
test
fcmovnu
imul
jns
pop
cmp
loope
test
repnz
mov
dec
mov
push
mov
fsub
js
xor
mov
mov
repz
adc
cmp
insb
cmpsb
hlt
xchg
pop
push
xor
je
mov
daa
sub
push
jae
mov
push
push
jmp
xchg
shr
add
mov
pushf
mov
adc
movsb
pushf
sbb
loope
xlat
jne
cwtl
sbb
dec
sbb
lea
add
jg
mov
inc
xchg
sub
jmp
jmp
sbb
push
es
mov
es
cmp
fbstp
adc
fdivr
loopne
xchg
iret
push
cmpsl
or
leave
cs
cmp
rcrl
pop
adc
hlt
movsl
jnp
xchg
adc
testl
dec
dec
jae
adc
sti
iret
lock
xor
sbb
fcomps
arpl
jae
xchg
push
or
jp
or
shll
popa
sbb
cmpsl
cmp
daa
mov
and
std
xorb
in
fwait
nop
fnstsw
fcomps
xor
repnz
dec
in
adc
xchg
mov
inc
jle
jg
int3
add
out
and
cwtl
jae
lret
xchg
cmp
mov
cs
out
das
xchg
sahf
adc
enter
mov
jge
cli
mov
bound
and
push
pop
sbb
in
lret
xchg
jg
push
movsl
sub
xor
push
call
rorl
cmp
in
inc
and
sbb
roll
jbe
jne
imul
mov
jae
jmp
jne
inc
jg
dec
ret
push
push
enter
stos
pop
sub
mov
dec
mov
sahf
int
mov
aad
arpl
mov
pusha
jno
jl
or
xchg
push
pop
movsb
cmp
and
test
pop
test
mov
fwait
xchg
jp
cmp
scas
and
inc
xor
xchg
dec
jbe
fidivl
inc
push
loopne
fwait
ret
jl
hlt
xchg
pop
sbb
fdivr
inc
xor
les
inc
mov
mov
inc
adc
xchg
sub
rclb
cltd
mov
xor
lods
imul
mov
enter
jb
xor
dec
adc
in
jns
rcrb
mov
paddq
in
int
lret
push
dec
cmc
jge
xchg
mulb
xchg
add
dec
add
in
push
add
ljmp
jp
or
inc
mov
push
pop
mov
xor
cmpsl
inc
and
shll
sub
mov
sarb
xchg
jns
fistps
je,pt
inc
lea
sub
std
movsl
or
aas
addr16
sub
push
push
adc
pop
xor
pop
pop
je
adc
sbb
lea
and
std
mov
enter
and
mov
jl
pop
sbb
cwtl
inc
ficompl
sbbb
aaa
sub
or
mov
mov
xlat
lods
push
std
dec
in
sahf
push
sbb
dec
mov
or
out
fildl
jp
ss
xchg
lret
xor
adc
fs
cmp
or
sarb
into
mov
and
and
les
mov
pushf
xchg
ds
sub
mov
mov
imul
in
stos
xchg
cld
fisttps
push
cld
fisubl
push
or
push
aaa
addr16
jp
pusha
pop
or
pop
push
int
xadd
pop
inc
aad
xor
popf
in
enter
sub
shlb
pop
and
data16
push
xchg
lret
das
pusha
add
js
notl
pop
sub
cmpsb
outsl
lret
pop
lock
fisttpl
lret
xchg
jecxz
adc
xchg
xor
icebp
idivb
fstl
icebp
bound
add
dec
add
and
xor
mov
ljmp
leave
ret
add
or
push
pop
out
arpl
mov
loop
adc
mov
mov
divl
sub
and
mov
roll
xchg
mov
arpl
lods
addl
cmp
int
frstor
jbe
inc
lea
cmpsb
insl
mov
xchg
pop
out
idivb
es
ss
push
int
frstor
jbe
inc
lea
cmpsb
insl
mov
xchg
pop
out
idivb
es
ss
push
int
frstor
jbe
inc
lea
cmpsb
insl
mov
xchg
pop
out
idivb
es
ss
push
int
frstor
jbe
inc
lea
cmpsb
insl
mov
sub
xchg
sub
repnz
int3
int3
int3
int3
int3
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
push
mov
push
mov
push
push
push
push
movl
movl
movb
call
andl
andl
push
mov
push
mov
movl
movb
movl
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
mov
movb
movb
call
mov
lea
push
movl
call
pop
pop
leave
ret
mov
or
sbb
outsl
xor
out
jb
inc
lret
push
or
jnp
dec
shlb
stos
xor
lds
inc
lret
push
xchg
xchg
insl
loop
repnz
inc
shrb
stos
adc
bound
cmp
sbbb
in
movsl
subb
pop
lcall
adc
imull
sub
jge
outsl
in
jle
lock
movsb
sahf
push
mov
lret
xor
inc
add
call
xchg
orb
lea
pushf
stos
daa
stos
adc
stc
pop
rcrl
sbb
sub
sbb
mov
shrb
mov
lcall
fldenv
pop
imulb
sbb
mov
and
cltd
imul
repnz
mov
aam
les
and
mov
ret
clc
ja
repnz
js
xchg
push
mov
cmpsl
mov
cmpb
loop
bnd
dec
ror
and
adc
inc
rcll
sub
push
les
ja
into
popf
push
lods
ds
sbb
call
push
clc
in
xor
insl
jge
js
ja
cmp
push
jg
adc
sub
mov
les
ja
daa
bnd
dec
rcrb
stos
xor
jmp
sti
inc
lret
push
or
jnp
dec
rcrb
stos
xor
jmp
sti
inc
lret
push
jbe
cmc
xor
clc
faddl
addr16
or
jo
fdivr
lret
mov
push
movsl
movsb
xchg
dec
loop
sub
dec
push
inc
stc
insl
hlt
cmp
xor
mov
movsb
xchg
push
sti
addr16
aam
inc
push
push
fldcw
inc
fidivl
xchg
movsl
out
outsl
fistl
dec
leave
ret
aam
sub
nop
pusha
cs
decl
movsb
xor
fcomip
lds
mov
aaa
aaa
lods
pop
lock
mov
loopne
out
adc
clc
push
xor
or
insl
mov
mov
add
std
fsts
adc
sbb
mov
mov
daa
adc
mov
mov
out
ds
clc
xchg
jbe
repnz
test
mov
sahf
ret
pop
push
jns
sub
clc
dec
mov
out
out
in
movsl
inc
mov
push
jmp
fnstenv
jae
loop
aad
fwait
std
cmp
fs
jle
mov
push
lods
jae
lcall
addl
cmp
push
and
ret
or
popf
sub
cs
mov
xor
ret
cmp
in
xorb
lret
bound
lret
nop
popa
fisttpll
sbb
jge
push
fwait
cmp
inc
sbb
inc
shl
rolb
or
mov
movsl
out
ljmp
pop
arpl
sub
lock
push
outsb
xchg
xlat
jne
xchg
or
cmpsb
adcb
pusha
sbb
pop
sub
cmp
dec
rolb
cwtl
lock
outsl
jnp
addb
lret
dec
cs
rorb
dec
rclb
adc
sbb
clc
sbb
jp
mov
sbb
fstps
xchg
fbstp
testl
or
mov
or
or
andl
dec
dec
dec
sti
shl
jle
in
adcb
xor
add
or
mov
push
and
pop
jg
add
add
iret
cmp
aam
xlat
adc
cwtl
jo
out
mov
xchg
inc
cmp
movsl
dec
push
dec
push
fmull
movsb
cmp
adc
arpl
mov
inc
shl
pushf
insl
ret
rcll
pushf
scas
mov
js
lcall
movsb
xchg
sub
xor
pop
leave
lods
push
xor
sub
pop
mov
sahf
rcrl
cmp
mov
in
pop
push
inc
adc
add
dec
add
mov
lods
fmull
enter
cmp
faddp
mov
sub
xchg
test
fcomp
xor
ret
ret
xor
or
jge
lret
sub
xchg
dec
dec
divl
jmp
test
sub
cmc
and
rcl
stos
mov
sbb
popa
and
lds
cli
fcom
mov
mov
jge
lods
mov
cmp
into
out
cwtl
cmp
out
xchg
push
mov
xchg
xchg
jns
push
push
xor
ret
sbb
ror
push
jl
or
adc
mov
scas
int
fisttpll
push
jmp
and
arpl
mov
dec
add
jmp
mov
lods
push
aad
push
stos
pop
imul
xorl
mov
add
jae
sbb
adcb
or
cli
cwtl
cmpsl
fmul
dec
leave
lret
ret
push
xchg
daa
mov
lock
aam
imul
mov
adc
shlb
loop
push
enter
xchg
es
gs
inc
or
negb
dec
lods
push
loopne
test
add
jecxz
xchg
lock
cs
cmp
push
lret
cmpsl
shlb
fnstsw
jp
ret
jg
ret
imull
add
mov
mov
pop
inc
aam
je
mov
cs
adc
cmpsb
mov
rcrl
lret
aad
or
mov
sub
cli
sti
fnstcw
repnz
movsb
push
dec
mov
xor
add
ljmp
adc
cmp
or
xchg
ljmp
jmp
lds
sbb
fwait
inc
sbb
inc
lret
cltd
imul
adc
lret
mov
loope
lds
pop
pop
cmp
or
pop
test
dec
sbb
ret
push
rcr
xchg
lret
inc
hlt
in
pushf
aaa
mov
ret
fisttpl
dec
and
dec
mov
sbb
jb
fcompl
enter
pop
dec
mov
sub
mov
bound
mov
cwtl
sub
mov
mov
xchg
mov
jmp
leave
es
mov
sub
lea
jbe
call
popa
outsb
mov
jo
xor
xor
pop
das
movsl
mov
xor
mov
js
sahf
dec
lahf
mov
fwait
or
call
push
nop
sub
xlat
test
xchg
push
in
jno
rcll
insl
jg
sub
jge
movsb
ljmp
popf
mov
mov
jb
pop
in
and
dec
mov
xor
sub
and
xlat
imul
stc
mov
out
out
push
fisubl
ret
xchg
and
xlat
jp
cmp
cltd
rorb
fcomps
sub
push
fadds
inc
fnstenv
test
and
sti
js
addb
sbb
push
in
es
pop
mov
xor
lock
push
sub
in
out
rorb
and
imul
subl
insb
add
out
adc
popf
movsb
dec
cld
and
ret
es
popa
add
cmp
std
mov
jmp
cli
mov
pop
pop
sbb
cmp
repz
push
jle
mov
push
sbb
mov
mov
jb
or
push
mov
imul
ljmp
in
inc
inc
xlat
or
mov
js
add
test
out
jae
mov
lds
pop
fldcw
inc
sub
sub
sbb
mov
fnstcw
mov
mov
push
pop
pop
inc
dec
or
jb
mov
fucomip
fidivl
xchg
mov
mov
int3
xlat
test
inc
xor
cmpsb
sbb
lods
xor
hlt
push
xchg
dec
push
xchg
pusha
push
sbb
ss
fs
iret
aaa
or
inc
test
and
out
jg
adc
insb
xchg
jnp,pn
out
and
mov
pop
jae
xor
dec
out
daa
fwait
or
jl
sub
mov
pop
ja
xor
loopne
mov
cli
clc
cmp
cmp
ret
ret
sahf
add
cmp
or
or
ds
loopne
filds
xchg
bound
pop
rcll
jne
cmp
push
sub
nop
pusha
mov
sub
aam
loop
push
sub
out
jl
jl
cld
mov
cmpsl
sbb
jo
int3
das
js
push
sbb
icebp
cwtl
in
sbb
inc
rcll
sub
mov
xchg
js
ret
icebp
xor
cli
sarb
mov
sbb
es
loopne
push
add
lret
cmp
filds
add
push
adc
imul
dec
ror
repz
dec
jbe
mov
stos
push
mov
or
sub
popa
fisttps
jle
cmc
xchg
test
lret
xor
pop
xor
sub
fdivs
xlat
add
js
loope
insb
jns
push
jbe
test
mov
inc
fs
mov
popf
mov
adc
jp
subl
mov
inc
into
fnstsw
cmp
xlat
int3
incb
lods
mov
push
cld
insb
adc
inc
mov
insb
xor
lahf
sahf
xlat
dec
leave
push
std
xor
fdivr
fsubrs
or
das
add
adc
cltd
clc
dec
inc
popf
loope
scas
loopne
add
outsl
push
jbe
lret
fsubrs
xchg
xchg
mov
xchg
pushl
jmp
inc
mov
or
jecxz
cs
cld
fldl
in
xor
adc
push
das
pop
and
push
aam
imul
xchg
leave
mov
ret
mov
push
subps
xchg
ret
inc
pop
jge
pop
fdivrs
lds
out
push
push
mov
dec
sbbb
ljmp
cmp
mov
add
in
mul
mov
dec
xor
jae
add
cltd
push
loopne
popf
dec
xor
leave
or
jae
aam
ljmp
jns
mov
sti
xor
in
mov
cld
pushf
add
pop
jb
int3
sarl
fldt
aaa
lods
sbb
xor
pop
xchg
sti
test
mov
mov
jmp
adc
xor
xchg
ds
jecxz
insl
fwait
nop
adc
into
inc
adcb
cli
rep
adc
icebp
jecxz
test
loop
mov
out
loop
and
pop
iret
xor
div
sbb
add
fcompl
adc
mov
pushf
hlt
xchg
adcb
fwait
sub
ds
into
cmovo
jno
cwtl
rol
outsl
mov
xor
adc
jne
adc
adc
outsl
and
and
or
cmp
or
sbb
mov
pop
mov
scas
inc
outsl
cmp
pop
loop
push
xchg
outsb
mov
das
jnp
xchg
xchg
clc
test
and
popa
hlt
scas
out
mov
mov
and
loopne
xchg
loopne
imull
add
mov
mov
orb
xorb
add
jmp
pop
dec
xchg
xchg
lea
or
fstps
arpl
popf
js
movsb
fsts
cmp
cmp
dec
mov
or
cmp
das
je
ds
pop
arpl
xchg
movsb
jnp
pop
add
icebp
lcall
gs
stos
jge
fucomp
mov
mov
or
popf
sahf
cmpsl
mov
mov
or
sub
push
pop
lahf
stc
cmp
sub
clc
pop
push
jne
dec
into
rorl
icebp
adc
push
jno
fisubl
in
jmp
stc
adc
fisttps
es
loopne
mov
dec
out
and
aas
insb
adc
and
mov
mov
clc
xchg
cmp
and
int
inc
stos
sub
sub
mov
mov
test
add
pop
cld
imul
inc
insl
jge
setb
inc
cmpsl
push
sbb
jae
mov
push
cmp
cs
lea
push
fisttps
in
mov
fs
imulb
gs
fsts
repz
inc
cmp
lret
xchg
shrb
sbb
cmp
cmp
scas
push
mov
cmc
lret
pusha
rcl
sbb
xchg
sbb
sarl
and
adc
or
and
into
in
arpl
faddl
stc
gs
mov
inc
jbe
idivb
fldenv
mov
sbb
adc
cmpsb
aad
or
xor
push
int3
sbb
jno
fstpl
mov
aas
lcall
aaa
mov
push
pusha
sbb
out
fwait
lret
and
and
jle
orb
push
pop
shrb
stc
inc
dec
mov
jnp
ja
xchg
push
xchg
mov
gs
pusha
jae
sub
jmp
imul
add
and
push
cli
loop
jl,pt
or
dec
push
imul
mov
mov
ss
xlat
dec
hlt
jg
shrb
or
in
fldcw
push
mov
and
xchg
xchg
in
ror
mov
addb
or
sub
jbe,pt
imul
popf
mov
test
mov
mov
add
stos
add
ficomps
cmp
inc
in
scas
dec
out
add
and
mov
fwait
enter
cmpsl
and
hlt
dec
pop
shrl
data16
mov
int
out
mov
push
add
mov
ret
jns
sbb
fcmovne
gs
mov
scas
clc
aaa
pop
add
push
xor
mul
mov
sbb
push
rolb
push
shl
inc
sarb
outsl
pop
leave
lea
imul
aaa
movsl
popf
sbb
jl
inc
sahf
fwait
aad
repnz
and
mov
mov
mov
mov
jb
sub
out
ret
das
or
add
test
pop
dec
pop
mov
jo
adc
or
xchg
jmp
dec
decl
out
insb
dec
jbe
stos
fmuls
inc
popf
mov
loope
bound
mov
mov
pop
adc
scas
xor
cmp
fnsave
mov
movsl
cltd
outsl
or
aas
aam
mov
test
jae
mov
repz
push
aad
push
dec
ret
in
pushf
loop
mov
pop
ficoml
stos
xor
jmp
push
lock
fnstcw
xor
or
daa
inc
rcrl
or
inc
fistpl
jns
rorl
icebp
xchg
fnstcw
mov
xor
mov
push
xchg
stos
cmp
das
rcrb
push
inc
xor
idivl
out
jl
jmp
dec
mov
aad
out
xor
in
bnd
and
inc
push
outsb
cmp
in
mov
inc
jne
outsl
jle
adc
enter
pushf
push
xchg
daa
ficoms
sbb
jp
mov
lods
sub
jmp
add
and
outsb
lea
shl
add
and
or
adc
ret
test
stc
das
divb
shlb
mov
mov
out
push
in
mov
and
or
dec
aam
dec
mov
adc
push
mov
mov
push
xchg
sbb
lods
add
push
test
jns
outsb
jmp
sbb
fs
rorb
xor
pop
leave
and
movsl
mov
xlat
in
mov
sub
xor
jae
adc
push
inc
lret
or
movsb
in
pop
add
fbstp
add
fnstsw
mov
add
and
inc
mov
xor
mov
and
push
jge
lret
pmaddwd
dec
xor
std
sub
dec
push
rorl
aaa
push
pop
jp
sbb
inc
pop
aad
jbe
dec
es
push
loopne
lea
cltd
jmp
mov
and
pop
rolb
fldcw
jbe
jb
mov
sbb
pop
xchg
mov
je
lcall
sbb
rorb
scas
hlt
sub
mulb
mov
adc
ss
cmpsb
call
xlat
pop
mov
adc
movsl
mov
in
andl
in
dec
jb
mov
pmaddwd
pop
rclb
fcompl
outsl
stc
dec
push
or
xlat
js
movsb
in
jns
mov
inc
clc
stos
xor
cltd
popf
xlat
int
ljmp
hlt
lock
pop
and
xchg
rolb
mov
sbb
fistl
adc
push
stos
iret
mov
test
lahf
lds
pop
cmpsb
test
mov
push
push
mov
cmpsl
dec
test
sbb
lods
push
push
sti
jno
mov
into
je
stos
dec
aad
or
out
and
and
fimuls
inc
std
rcl
out
lock
add
pusha
sub
ss
mov
sbb
stc
insl
fsubrs
in
jp
leave
shll
jae
insl
mov
in
inc
jp
add
adc
sbb
cwtl
push
aad
push
add
mov
cmpsl
lds
xchg
lea
or
jecxz
sbb
or
xlat
mov
out
push
and
cwtl
xor
insl
adc
test
imul
or
dec
les
cmpsb
xchg
out
je
and
xor
inc
rcrb
mov
repnz
clc
jb
push
loop
jno
add
ds
nop
lds
lcall
adc
int3
inc
xor
test
movsl
lcall
xchg
clc
push
mov
je
je
mov
mov
sub
cld
xlat
cmpsl
lods
je
rcrb
and
push
test
push
jge
mov
push
cmpb
push
jb
repnz
dec
dec
inc
movsl
decl
jle
test
sti
mov
xchg
ds
cli
stos
adc
mov
stos
xor
enter
push
sub
std
add
subl
jbe
xchg
mov
xor
add
aad
xchg
in
movsl
scas
mov
adc
jne
add
push
out
cs
dec
mov
ret
xchg
test
test
out
add
fnstsw
cmp
push
movsb
cmc
jne
push
fstl
xor
push
jno
in
cmp
and
and
movsb
popf
xchg
push
cld
pop
sarb
jmp
and
js
or
jns
add
iret
nop
sti
mov
adc
jp
xchg
loopne
stc
in
daa
cmp
cltd
clc
enter
xor
dec
jb
aam
cmp
stos
xchg
xlat
sub
cli
je
xchg
pop
loop
dec
imul
mov
arpl
mov
fsubr
mov
inc
mov
add
push
out
fmull
and
lahf
xchg
aad
cmp
daa
pop
idivb
jg
loopne
ds
or
xchg
mov
xchg
xchg
push
dec
gs
aad
adc
mov
mov
mov
in
pop
sub
ret
xchg
rclb
sbb
outsl
into
sub
mov
sbb
jmp
test
adc
aad
pop
popf
pop
pop
xor
push
sub
jb
fiaddl
cmp
iret
sbb
scas
out
pop
push
xchg
shll
sub
inc
shr
pop
bound
test
add
push
dec
xor
mov
sbb
fnsave
xchg
loopne
xchg
mov
push
pop
inc
pusha
xchg
adc
into
test
lods
insl
repz
push
scas
in
add
or
pushf
inc
jae
sbb
xor
cmp
addr16
jae
jmp
es
call
xchg
out
and
jns
into
adc
in
sti
xchg
mov
pusha
mov
jno
sub
dec
mov
jb
pop
mov
jp
mov
imul
daa
aad
lds
insl
loopne
adc
mov
cmp
orb
repz
jecxz
xchg
add
xchg
iret
pop
ds
test
leave
in
int3
cmpsl
je
xor
rcl
cmp
test
adc
sbb
or
repnz
popa
sbb
mov
cmpsb
clc
pop
push
fisttps
push
add
add
sbb
xor
fcomp
imul
sahf
cmp
jp
lods
sub
rcrl
push
cld
shlb
dec
loope
or
sbb
add
stc
daa
sahf
subl
mov
fcomps
fistpll
lret
ljmp
jl
xlat
xor
aas
mov
sti
mov
into
pusha
cs
adc
cs
popa
rorl
mov
stc
stos
sub
mov
xchg
das
or
mov
dec
inc
aaa
ss
out
arpl
push
inc
push
add
xchg
pop
pop
cmp
jecxz
lahf
inc
insl
int3
out
test
sub
pop
push
out
test
mov
cmp
ret
pop
mov
cmp
ljmp
out
sbb
fisttpl
fwait
sub
inc
xor
xorl
mov
mov
cltd
xchg
mov
jge
out
xchg
add
out
sahf
adc
sahf
lock
inc
stos
xchg
mov
scas
test
sbb
push
scas
call
or
dec
mov
aaa
dec
mov
sub
lods
mov
adc
cltd
mov
push
xchg
in
dec
cmpsb
pop
jg
pop
dec
xchg
cltd
fidivrs
lods
fmulp
and
les
gs
adc
inc
jg
jmp
movsl
add
mov
das
sbb
rcr
dec
cld
sub
mov
andb
aaa
pusha
sub
or
xchg
mov
clc
xchg
sbb
mov
sbb
inc
push
jnp,pt
out
repnz
adc
mov
daa
mov
jp
fmulp
stos
repz
inc
and
test
inc
cmp
xchg
cmpsl
arpl
add
clc
in
push
mov
lret
repnz
mov
aam
cmp
sti
jle
cmpsb
mov
pop
or
xor
and
push
in
fisttpll
adc
add
sbb
pop
ds
ret
fdivrl
mov
dec
push
repnz
scas
aam
test
imul
sub
push
add
sub
xor
mov
popf
lahf
xor
enter
jle
jp
fwait
and
pmulhw
mov
int3
cmpsl
xchg
inc
jno
ret
ret
loope
insb
push
insb
jge
add
lods
fildl
fstl
rcr
inc
push
mov
sub
lds
jmp
add
or
inc
out
hlt
aam
adc
xchg
mov
sbb
sti
adc
pop
push
aaa
mov
mov
lcall
incl
and
mov
data16
cmp
mov
stos
out
add
ret
dec
and
dec
or
push
int
icebp
or
or
mov
jmp
aaa
jae
jns
cmpsl
loope
shll
adc
mov
mov
into
jns
aam
jl
mov
xchg
std
outsl
cmp
adc
out
ja
xchg
xchg
js
mov
pop
cmp
mov
in
mov
ds
jmp
mov
jns
add
mov
scas
pop
aam
je
rcr
xor
in
fistps
pop
out
cmp
les
and
cmp
dec
jl
xlat
or
test
mov
pop
adc
add
rolb
test
lea
sbb
adc
aam
add
mov
fwait
xlat
mov
iret
mov
ret
dec
cmp
sbb
test
fcomp
in
nop
cmpsl
pop
fldcw
stos
cmp
pushl
add
insl
push
loopne
push
mov
rorb
dec
shl
scas
mov
fstpl
cmp
ror
push
js
rcrl
xor
mov
je
addr16
inc
ljmp
cwtl
stos
or
scas
add
pop
sbb
ret
or
pop
pop
sbb
sbb
mov
mov
cmp
lock
sub
pop
dec
ljmp
sbb
ds
cmp
aam
clc
and
test
dec
and
add
out
push
adc
lret
hlt
bound
pop
sti
xchg
sub
or
add
xor
and
shlb
inc
mov
cwtl
push
cltd
test
aad
dec
pop
push
pop
mov
cmp
pop
stc
push
xchg
and
imull
sbb
push
das
in
adc
sbb
dec
pop
je
out
jno
add
jmp
mov
and
out
call
mov
mov
xor
out
in
xchg
lahf
imul
mov
mov
sbb
jbe
rol
fcmovnu
loop
rcl
jge
cmp
clc
orl
inc
push
pop
bound
cbtw
stc
das
ss
shlb
cmp
hlt
cmc
popa
cmp
push
cmp
xchg
cmpsl
loope
hlt
mov
js
mov
scas
cmp
imul
ret
pop
and
adc
inc
lret
push
or
jnp
dec
rcrb
stos
xor
jmp
sti
inc
lret
push
adc
adc
dec
rcrb
stos
xor
out
jb
inc
ret
mov
out
xchg
pop
loop
bnd
lret
push
fstl
test
adc
adc
mov
mov
int3
jae
arpl
pop
inc
lret
notb
jge
or
repz
loop
rcr
ret
mov
orl
pop
inc
dec
xor
and
repz
jecxz
rcr
ret
lret
jae
mov
mov
arpl
repz
dec
xor
and
adc
add
repz
mov
in
int3
ret
in
mov
pop
add
cli
or
mov
xchg
clc
sub
pop
sbb
mov
inc
out
ret
aad
lock
test
pop
decb
fisubs
sub
cmp
dec
mov
push
push
and
outsb
push
inc
ss
mov
mov
rcll
inc
jecxz
fisubrs
jae
arpl
dec
inc
repz
ss
xchg
loopne
hlt
jle
mov
test
push
adc
fmuls
mov
outsb
nop
adc
sbb
mov
stos
ret
mov
nop
dec
enter
shrl
movsb
sti
adc
jecxz
cs
fwait
add
mov
filds
xor
and
adc
add
ror
ret
xorl
and
sub
imul
sub
dec
push
inc
ja
add
mov
mov
fcomip
fcmovb
ljmp
das
outsb
xor
imul
xchg
sahf
mov
sarl
int
cli
mul
push
sub
das
sub
and
adc
add
repz
jecxz
rcr
ret
lret
mov
mov
mov
arpl
pop
inc
dec
xor
and
adc
add
repz
jecxz
rcr
ret
lret
mov
mov
mov
inc
mov
int
xchg
dec
in
sub
pop
scas
imul
pop
ljmp
insb
push
sub
cmp
xchg
lds
pop
pop
cmp
insb
xchg
ljmp
mov
xchg
aas
dec
adc
loop
std
cmp
or
lcall
cmp
mov
cli
cmp
lret
xor
insl
movsb
jns
pop
aad
cmp
jnp
rolb
out
xor
pop
icebp
dec
nop
jno
enter
jge
test
push
mov
out
das
jp
out
cli
or
or
jb
es
call
push
in
mov
orl
dec
adc
stos
xchg
mov
into
and
fs
fcoms
test
pop
cmc
xbegin
inc
stos
nop
push
dec
bound
stc
adc
arpl
in
and
inc
inc
mov
out
or
std
pop
mov
mov
jb
scas
xchg
imul
ret
mov
mov
enter
dec
pusha
mov
ret
pop
cld
fcoml
addr16
lds
or
lods
dec
je
movsl
inc
int
cmp
cmpsl
xchg
aas
pop
clc
sub
icebp
icebp
imul
mov
jb
sub
mov
sahf
push
fcoms
dec
stc
dec
or
repz
push
fbstp
lds
cmp
mov
pusha
fmuls
add
inc
in
iret
faddl
cmpsl
lds
inc
rorl
out
adc
gs
mov
lds
pop
mov
bnd
push
test
out
mov
inc
push
mov
xchg
popa
xor
shrl
jmp
mov
pop
leave
adc
cwtl
add
add
clc
xchg
adc
mov
scas
clc
xchg
mov
test
cs
inc
add
mov
icebp
xchg
add
and
or
xchg
or
cmpsl
decb
cltd
and
fcomps
inc
add
outsl
dec
xchg
xchg
mov
mov
or
push
or
mov
ficompl
add
mov
sbb
nop
addl
cmpsl
sub
inc
fldenv
jmp
push
push
mov
cmc
dec
xchg
stos
imul
fcmovbe
jle
dec
pop
stos
pop
decl
jp
pop
lock
nop
push
mov
stos
into
mov
jnp
clc
ret
out
fs
movl
rorl
orb
pushf
aad
ret
push
fs
and
into
adc
jb
imull
aaa
leave
mov
popa
jne
bound
cmpsb
mov
xchg
cs
mov
pop
dec
cmc
mov
and
sbb
sub
stos
ljmp
jg
test
dec
leave
sub
jb
hlt
rcrl
int
mov
es
jl
lahf
repz
shrl
fidivl
sahf
ljmp
arpl
aam
test
push
xchg
jle
dec
or
sbb
sahf
pop
mov
nop
and
das
popa
data16
lahf
in
ret
out
push
jp
cmpsb
adc
xor
push
xchg
jbe
int
lods
dec
pop
sub
pop
test
pushf
mov
rcrl
lret
aaa
fs
test
mov
in
test
cmp
fisubs
jecxz
es
int3
insb
aam
pusha
pop
dec
movsb
mov
xchg
movsb
add
xchg
movsb
arpl
jge
mov
test
loopne
das
dec
mov
ds
inc
mov
mov
popf
cwtl
or
sbb
aam
jnp
mov
pop
shrb
inc
jbe
inc
fldcw
dec
test
dec
cmp
test
xor
mov
es
mov
mov
fisubrs
push
shlb
leave
ljmp
xchg
stos
into
lcall
xlat
and
jnp
vcvtsi2sdl
fsubp
jmp
mov
fnstenv
data16
into
cmp
lahf
adc
mov
addr16
add
jle
push
adc
jmp
iret
jg
fnstenv
dec
or
mov
stos
repnz
push
fabs
hlt
fldl
scas
shll
adc
ljmp
insl
adc
rcll
sub
fnstsw
cmc
cmp
leave
or
push
adc
xchg
or
xor
dec
sbb
popa
jg
mov
cmp
mov
in
fcompp
ficomps
int3
push
pop
int
adc
test
jo
fdivl
jae
xchg
xor
jne
mov
les
jl
idivl
and
cmp
fbstp
mov
sbb
push
fstpt
repz
sub
mov
lods
add
iret
inc
mov
fisttpll
cld
and
inc
loopne
aad
scas
fdiv
fnstsw
aaa
inc
jbe
arpl
iret
mov
push
enter
cmp
cmp
outsl
loop
push
ljmp
mov
lods
mov
pop
add
pop
fcoms
xchg
loope
or
xor
sub
popa
repz
cmp
fidivrs
mov
mov
aad
sbb
int
or
repnz
hlt
imul
stc
adc
fimuls
mov
aad
mov
push
mov
imul
shlb
jl
xchg
adc
icebp
fisubrs
ficomps
jge
lock
sub
pop
fiaddl
ja
xor
pop
shl
rolb
push
lock
jcxz
fists
aad
push
mov
in
mov
test
jecxz
adc
cs
outsl
mov
dec
push
scas
ret
cltd
xor
mov
and
sbb
sbb
es
repnz
adc
xor
in
jmp
sarl
sarb
dec
repnz
out
sbb
adc
dec
sbb
mov
test
fisubs
push
dec
pop
push
fnstcw
mov
cmpsl
dec
outsl
add
fcomip
cltd
xor
cmc
movsb
xchg
sub
fcompl
outsl
jg
inc
sub
pop
cmp
rcll
jno
subb
imulb
shlb
je
jl
mov
js
sbb
mov
ja
loop
out
sbb
iret
es
cmc
fsts
adc
inc
mov
xor
arpl
mov
push
std
shlb
pop
les
cmp
rorb
xor
xor
xchg
ss
fs
shr
js
mov
pop
ret
cltd
movsb
outsl
enter
dec
add
dec
fisttps
dec
pop
xchg
ret
je
and
in
bound
imul
das
and
mov
adc
push
enter
mov
and
fstp
fnstsw
cmp
mov
adc
outsb
xchg
cmp
xchg
in
adc
decl
in
cmp
xchg
inc
sbb
dec
hlt
xchg
imul
jmp
or
stc
fistpll
fnstenv
cmpsb
test
mov
sub
push
outsb
cmpsb
adcb
mov
ljmp
nop
aaa
jecxz
in
or
gs
mov
and
dec
mov
sbb
inc
imul
mov
mov
addl
and
cmp
inc
sub
xchg
ja
pop
movsb
or
xor
pop
and
fmull
lock
clc
add
pushf
pop
psllw
lock
or
mov
mov
pop
mov
idivb
scas
pop
mov
aaa
jbe
int3
lahf
push
imul
sub
aad
add
out
ja
cmp
in
mov
pusha
mov
add
loopne
testb
adc
sbb
aad
push
adc
scas
in
loope
or
adc
mov
adc
add
js
lret
add
push
inc
xor
fwait
loope
sub
mov
lds
mov
cmc
lret
pop
or
subb
mov
daa
push
data16
mov
loope
push
nop
cld
fnstcw
mov
mov
pop
mov
insl
leave
sbb
loope
mov
adc
add
mov
jno
nop
mov
pop
lcall
push
stc
inc
ficompl
rolb
in
bound
cmp
dec
mov
mov
cmpb
insl
cmp
call
scas
cmp
cli
fcompp
xchg
mov
adc
xchg
cmp
fwait
jns
in
not
mov
xchg
dec
xchg
pop
and
pop
sbb
xchg
ja
mov
xchg
jecxz
jp
push
mov
pusha
sbb
mov
xchg
jle
pushf
jle
mov
mov
ds
sarb
insb
negl
inc
sub
daa
aaa
ffree
sub
cmp
rorb
jmp
loope
imul
or
call
sbb
jns
mov
into
fwait
vpaddd
andb
cmp
jecxz
lret
std
lret
in
cwtl
aaa
dec
lret
pop
out
test
adc
xchg
mov
cld
xchg
rcrl
int
inc
sbb
dec
adc
fwait
mov
mov
mov
scas
sub
std
dec
dec
push
push
icebp
xor
scas
ljmp
movsb
loop
sub
dec
pop
repnz
mov
test
mov
std
aas
sbbl
test
test
xlat
pop
mov
mov
sub
xchg
inc
clc
mov
pusha
add
add
shll
shlb
adc
xor
dec
lds
xchg
jmp
xlat
aad
xchg
repnz
mov
or
fists
mov
push
mov
sbb
outsb
mov
inc
dec
int
mov
xor
out
outsl
ja
iret
and
pop
cltd
orl
pop
pop
push
sub
cmp
sub
test
out
xor
rorl
int
sahf
nop
std
cltd
pop
mov
push
adc
sbb
mov
ret
out
jne
inc
insb
call
sahf
int
sbb
mov
scas
push
jbe
or
outsl
cmp
pop
frstor
stos
aaa
jnp
shll
inc
popa
dec
mov
std
int3
stc
push
loope
push
loop
jne
sqrtps
ljmp
test
xchg
out
or
insl
rolb
dec
add
pushf
aas
shrl
and
test
loopne
scas
jecxz
gs
hlt
movsb
in
xor
lods
lods
mov
pop
int3
shrl
xor
gs
std
mov
lds
mov
cli
sub
es
jmp
xchg
test
in
add
mov
xor
sub
test
data16
dec
pushf
push
fnstenv
aas
inc
cwtl
mov
sbb
fists
cld
jo
xor
insl
mov
sbb
dec
out
ret
out
leave
add
decl
popf
imul
arpl
mov
push
enter
stos
dec
out
jo
popa
lea
inc
loope
inc
stos
mov
pop
sub
cli
adc
loopne
xchg
arpl
jno
std
insb
push
arpl
and
add
aam
icebp
jmp
mov
clc
xchg
xor
and
cwtl
pop
pop
jge
push
lock
xor
xor
push
in
repz
add
cmpsl
test
lea
adc
mov
sti
sbb
cmp
repz
lock
mov
fidivs
or
inc
enter
xor
jecxz
push
xchg
add
sbb
lret
sbb
test
sub
add
inc
ja
push
fs
sarl
leave
jecxz
icebp
insl
insb
shlb
sub
sub
mov
xchg
fwait
sbb
push
ret
jae
dec
mov
push
inc
pop
xchg
loopne
mul
sahf
dec
pop
out
pop
xchg
sub
pop
cmp
cmpb
out
push
or
lcall
pop
push
dec
push
in
in
add
push
jecxz
out
mov
mov
xchg
fbld
adc
mov
mov
test
xor
sbb
mov
sarb
cld
pop
and
pop
cmpsl
lock
sbb
xor
bound
in
xchg
xchg
push
clc
jo
mulb
loop
mov
sub
fcoml
scas
xor
sbb
out
ror
je
sub
jp
dec
test
add
repz
pop
xchg
xlat
push
dec
add
mov
jmp
bound
lea
push
push
out
out
fcmovu
test
pop
mov
fcmovu
fdivp
idivl
pop
xor
pop
jae
pushl
or
ja
fldcw
fnstsw
jo
pop
iret
stos
pop
sbb
pop
and
dec
into
clc
mov
leave
xchg
adc
inc
aam
dec
imul
insb
xchg
mov
clc
repnz
mov
cltd
adc
mov
aas
aad
arpl
xor
imul
sub
cmp
mov
jne
push
pusha
xor
jp
rorl
inc
xor
dec
scas
cld
rorb
push
repz
mov
and
mov
scas
insb
ljmp
int
jge
test
je
or
repz
mov
pop
xor
sub
mov
leave
mov
sahf
das
mov
arpl
cmp
and
loopne
dec
pop
fdivrl
and
adc
cmc
ss
adc
sub
inc
inc
data16
xchg
call
pop
dec
fcoml
inc
stos
insb
jg
sub
movsw
adc
imul
loop
imul
rcl
and
jb
xchg
cmpsb
fiaddl
xchg
or
pushf
fdivs
test
je
mov
add
popa
inc
out
cmpsb
es
out
push
addr16
loope
adc
mov
fcomi
lret
shlb
aad
sub
push
scas
dec
cmpsl
mov
idivb
inc
xor
mov
outsl
sub
es
or
and
popa
fsubs
pop
jnp
push
pushf
dec
dec
in
lahf
mov
cltd
ja
sbb
or
scas
xchg
loope
in
stos
pop
dec
or
iret
push
xorb
add
mov
lret
orl
stc
inc
adc
sub
icebp
and
inc
orl
push
inc
test
jle
int
pop
inc
mov
loop
pop
lock
cmp
cmpsl
xchg
das
in
mov
jne
xchg
aaa
lahf
pop
and
push
push
imul
out
or
lods
call
adc
test
inc
pop
nop
in
push
sub
scas
inc
test
dec
fcomps
je
mov
cmc
mov
dec
fidivl
adc
and
aam
cmpsl
das
cmp
pushf
mov
test
icebp
inc
mov
sub
push
xchg
mov
test
outsl
push
jb
push
mov
xor
fnstenv
lock
cmpsl
mov
cltd
inc
push
mov
lea
imul
xchg
xor
adc
jle
cmp
mov
ljmp
and
push
mov
xor
sub
mov
fbld
sub
adc
in
insb
inc
inc
test
rol
cmp
std
xor
inc
mov
mov
fidivrl
notb
test
movsl
push
es
and
rcrl
clc
into
adcl
aad
scas
je
push
mov
push
pop
repnz
hlt
mov
call
lcall
xor
stos
loop
cmp
jg
nop
sub
aas
rolb
fwait
push
mov
shlb
movsl
pop
and
loope
fnstsw
daa
fsubrl
inc
bswap
insl
sub
sbb
js
fistl
xor
aas
sti
loopne
cmp
test
or
fdivs
pusha
ret
xor
pop
dec
subl
daa
inc
mov
mov
adc
pop
std
nop
jo
cmp
add
push
pop
sbb
cld
dec
sbb
outsb
rorl
sub
gs
mov
fwait
popa
xor
and
out
movsl
cmp
icebp
fwait
cmpsb
imul
jbe
sahf
roll
adc
push
lcall
or
clc
iret
add
push
fimull
jle
mov
jbe
out
inc
icebp
jbe
push
xchg
add
lcall
mov
cmp
push
nop
das
pop
call
cmp
cmpsb
repnz
push
add
int3
mov
rcrl
jns
sub
push
repz
mov
test
sub
jno
add
and
xchg
add
xchg
fbld
lock
push
adc
outsl
jb
push
cmpsl
push
testl
and
ss
adc
sahf
sbb
mov
push
pop
cmp
xor
shl
adc
push
and
in
sub
inc
sti
das
imul
fstl
into
mov
sti
or
pop
push
inc
test
dec
inc
sub
aam
clc
js
pusha
lret
pop
bound
push
loopne
sbb
jl
ret
fst
dec
call
adc
push
adc
jmp
cltd
fimuls
cmpb
inc
or
iret
add
std
mov
sti
nop
lret
fldt
out
orb
mov
repnz
jle
sbbb
call
loope
stos
test
mov
leave
repz
clc
jne
or
or
and
out
mov
push
mov
inc
out
mov
jp
scas
cmpsl
pop
fwait
insl
les
and
addr16
lret
add
out
mov
mov
dec
and
loopne
sbb
xorl
xchg
scas
xchg
push
dec
adc
mov
dec
xchg
sti
push
stc
js
pop
jae
mov
lret
popf
pop
sbb
push
xor
add
int
jae
ret
pop
test
xchg
cld
adc
fadds
jge
jno
sub
add
xor
jg
shlb
xchg
mov
xchg
lock
and
scas
lret
jbe
vpcmpeqb
mov
ljmp
sub
mov
xchg
adc
pop
sub
cmp
out
cltd
dec
dec
je
aam
loop
inc
pop
sahf
add
inc
enter
mov
cld
ja
sbb
sbbb
mov
paddd
fisubrs
and
cwtl
mov
sub
loopne
lret
mov
testb
ljmp
je
sti
jmp
fimuls
ret
jb
shl
pop
lds
lods
xor
aad
add
andl
mov
and
jae
xchg
js
and
jns
inc
cld
mov
or
aad
add
push
cs
or
sub
push
dec
xor
dec
icebp
and
mov
orl
push
adc
dec
fcoml
iret
pop
in
lret
dec
and
pop
in
mov
mov
push
lret
jne
cmpsb
movsb
xor
aad
mov
out
pop
popa
xchg
xchg
inc
int3
dec
adc
jnp
sti
adc
or
xchg
lret
mov
mov
jo
push
loopne
shll
dec
pushf
cli
jp
jo
sub
test
stc
mov
pop
push
hlt
mov
lret
mov
sbb
push
pop
jb
sub
cmpb
iret
inc
or
mov
cmpsb
mov
inc
loopne
lods
push
push
rorl
mov
movsb
sahf
out
ss
add
in
shll
add
fs
add
sti
hlt
repz
stos
or
in
push
fdivs
cltd
mov
inc
fstpl
cltd
loopne
outsb
aas
stos
dec
out
dec
subb
ret
stos
or
outsl
ljmp
ljmp
out
cmpsb
fisttpl
xlat
push
and
repnz
lret
mov
lcall
or
daa
mov
sub
dec
nop
lahf
or
test
loop
push
lahf
fs
or
mov
lret
roll
cwtl
dec
jno
mov
in
sub
adc
call
or
inc
mov
ljmp
xor
sub
or
or
xor
stc
ficomps
mov
jecxz
pop
movsb
xchg
cmp
lret
xchg
addr16
aas
hlt
xchg
or
xchg
jb
mov
adc
inc
lcall
das
jmp
je
pop
test
inc
cwtl
mov
cmp
pop
fs
push
dec
pushf
adc
dec
cmpl
mov
lds
add
sbb
push
mov
pop
loop
rcrb
imulb
jbe
and
pop
sti
dec
mov
push
add
out
lahf
popa
lds
outsb
xchg
jmp
lds
mov
loope
ret
adc
jl
pcmpeqb
stos
mov
fistpll
dec
divl
jne
cmp
jns
adc
mov
mov
cmp
cmp
mov
scas
add
ss
sub
or
test
push
hlt
ficoml
jge
std
xor
lock
mov
movsb
mov
fs
addl
gs
dec
shll
addr16
or
jo
fldt
cmpsb
pushf
mov
mov
mov
jb
ds
pop
dec
imul
sub
rcr
push
add
adc
or
mov
add
push
ja
xchg
cwtl
and
xchg
and
sarl
xchg
mov
pop
xchg
push
sbb
adc
add
nop
imul
push
aaa
add
jecxz
call
cmp
stos
sub
xor
mov
add
push
shr
cmp
or
js
xor
push
xor
xchg
mov
sub
pop
daa
mov
dec
out
or
mov
fidivs
jg
popa
out
mov
and
mov
and
sbb
mov
xor
xor
inc
fdivl
mov
add
fs
or
enter
pop
push
pop
movsb
pop
cmp
out
insl
das
jne
adc
mov
mov
mov
movsb
sbb
aam
ss
mov
mov
push
fldt
mov
mov
sbb
mov
inc
fnstcw
call
push
shll
and
mov
push
in
mov
imul
out
mov
mov
insl
les
sbb
arpl
inc
sub
xor
add
push
imul
mov
push
outsl
repnz
and
ret
adc
enter
jmp
dec
xchg
push
sub
or
or
sbbl
lret
out
jnp
cmp
and
or
mov
lock
std
mov
pusha
sub
lcall
push
fsubl
xchg
sub
cmp
xchg
outsl
cmp
mov
jge
fldl
push
jae
in
xchg
std
out
inc
fdivl
xor
cmp
loop
incl
sub
call
adc
repnz
push
sbb
mov
out
xlat
mov
in
or
jl
and
or
jecxz
or
in
xchg
add
jle
fldcw
xchg
callw
shlb
xchg
xchg
jnp
popa
xor
jo
pop
std
xor
sahf
dec
filds
fcom
adc
rolb
lahf
and
and
scas
xchg
sbb
and
sub
mov
push
je
out
stos
lods
push
loope
add
cmpsl
in
loopne
cs
push
aaa
inc
dec
xor
and
adc
add
repz
jecxz
rcr
ret
lret
mov
mov
mov
arpl
pop
inc
dec
xor
and
adc
add
repz
jecxz
rcr
ret
lret
mov
mov
mov
jecxz
shll
inc
dec
mov
and
repz
jmp
fcmovnb
lret
mov
mov
mov
arpl
pop
inc
dec
xor
and
adc
jecxz
jns
ret
mov
jecxz
repz
int3
int3
int3
int3
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
decl
int3
ret
fmulp
mov
jb
outsb
pop
inc
dec
inc
cmp
sub
sbb
sbb
cwtl
repnz
loop
ror
ret
lods
mov
jl
insb
bound
push
sub
sbb
or
inc
jmp
loop
lret
mov
mov
xor
sub
jae
dec
dec
inc
push
add
cmpsb
movsl
dec
mov
or
inc
cmp
pop
jmp
jns
sub
sbb
or
scas
adc
xchg
cmp
adc
add
mov
sbb
ret
mov
ja
adc
dec
add
fisubl
xchg
out
outsb
sub
insb
mov
sub
imul
and
and
inc
xchg
lods
bound
mov
and
mov
mov
sbb
lret
cld
sub
and
pop
ret
pop
out
bound
inc
jns
sub
in
add
add
jno
fst
xor
inc
mov
arpl
push
push
mov
jg
sbb
movlps
ret
pop
mov
mov
mov
dec
jl
je
es
xchg
xchg
sahf
loop
shll
call
sbb
sbb
pop
sub
jne
imul
mov
leave
nop
imul
add
add
inc
dec
jne
dec
addr16
mov
xchg
fisubrs
jl
insb
bound
inc
cmp
sub
sbb
or
cld
repnz
loop
ror
ret
lods
mov
jl
insb
bound
inc
cmp
sub
sbb
or
cld
repnz
gs
repz
jae
shrb
fwait
pop
std
loop
aas
cmp
mov
mov
mov
imul
pop
sbb
add
cmp
lds
cmpsl
xor
aaa
add
cmpsl
sub
cwtl
mov
xchg
mov
movsl
pop
mov
movsb
fisubrl
push
mov
lret
call
in
repz
movsl
xor
pop
rol
mov
sub
mov
movb
filds
out
sbb
adcb
lods
sub
jp
push
add
mov
sbb
cmp
sub
outsb
pop
div
inc
jmp
clc
shrl
lret
sbb
pushf
inc
add
movsb
in
dec
sbb
std
mov
push
imul
dec
mov
pop
jmp
nop
nop
js
cltd
loope
push
movsl
or
in
das
fs
mov
mov
subb
push
lret
dec
inc
frstor
jae
es
push
push
adc
dec
mov
out
sub
mov
cli
daa
mov
add
nop
dec
test
inc
fistps
loop
inc
fdivrl
pop
idiv
adc
repnz
mov
outsb
mov
add
adc
xchg
mov
push
cli
push
ljmp
mov
movsl
loop
xchg
pop
repz
aad
jecxz
pop
add
rcrb
stc
imul
add
mov
cmp
cltd
cmp
xor
mov
out
push
jmp
mov
fs
push
mov
sbb
sub
clc
xchg
movsb
out
adc
pushf
out
loop
shll
aam
loope
aas
cmp
and
lods
fldcw
pop
cmc
pop
icebp
in
mov
sub
repnz
test
xlat
cmp
xchg
inc
icebp
shll
push
xor
cmp
xchg
add
mov
enter
xchg
outsb
xchg
fidivrl
mov
jl
std
jno
push
dec
sub
pop
sbb
jns
jns
mov
je
add
jp
fcom
ret
dec
das
jg
sbbl
pop
repnz
fisubrs
push
lret
dec
stc
push
pop
adc
rcll
in
jg
mov
xchg
insb
leave
ret
leave
test
pop
aam
insl
mov
das
dec
adcl
aas
sti
pop
call
test
dec
jg
bnd
mov
sub
mov
mulps
in
pop
test
jg
mov
xchg
outsl
mov
inc
pop
lea
cmpl
pop
loopne
daa
cmc
dec
mov
rcr
jae
or
scas
fmul
imul
aas
and
mov
fxam
cmc
xchg
pop
pop
repnz
gs
push
cmpsl
mov
ret
sub
pushw
pop
lea
jmp
sub
push
cmp
rcl
movsb
jg
repz
movsb
cmp
push
movsb
into
mov
dec
enter
scas
mov
mov
add
adc
cmp
xor
insl
xor
pushf
fadds
adc
push
ret
clc
mov
rcrl
ds
stos
vpand
roll
jae
gs
push
dec
in
out
hlt
movsl
or
xor
add
sbb
loop
xor
shrl
in
int3
call
lret
fdivrl
xchg
lahf
jle
andl
out
sbb
stos
mov
inc
arpl
aaa
add
mov
ficoml
push
ja
adc
aam
or
adc
fldenv
test
enter
rcrb
cmc
and
repz
dec
and
mov
pop
dec
and
in
pop
shl
dec
andl
dec
mov
dec
jnp
daa
sbbl
sbb
ss
test
mov
add
push
aad
lods
pop
sub
xchg
outsb
loop
cmp
and
mov
popf
jne
mov
mov
mov
loope
rol
enter
out
push
scas
xchg
mov
push
inc
cmp
sub
and
adc
and
dec
sbb
loop
loope
orb
mov
adcb
and
aad
insb
xor
shrb
mov
mov
arpl
loopne
stc
push
xchg
or
adc
loope
arpl
mov
lods
in
xorl
adc
push
mov
fsts
test
pop
xor
mov
lock
cmp
ret
add
mov
inc
pop
push
loopne
enter
out
mov
fwait
shr
mov
push
movsl
ret
leave
sar
xchg
mov
dec
ljmp
mov
cli
pop
and
loope
xor
int
in
xchg
mov
outsl
or
roll
pop
nop
jb
inc
test
jle
pop
mov
and
les
adc
fdivl
cltd
js
mov
dec
jno
push
sub
in
mov
stos
repnz
sbb
jae
jmp
ret
jnp
sub
fildl
mov
mulb
push
xchg
xchg
popa
outsb
scas
dec
push
sub
adc
inc
cld
cmp
lock
clc
and
sti
cltd
mov
clc
and
das
push
xor
jb
sub
clc
loope
negl
pop
ljmp
push
inc
mov
adc
movsb
arpl
pop
out
lret
sarb
xchg
mov
mov
lahf
shlb
xchg
push
dec
xchg
aaa
inc
xorl
rolb
clc
not
sbb
push
xchg
pop
negb
pop
push
aam
sahf
sbb
es
sbb
mov
cmp
sub
push
mov
fs
in
and
mov
test
xor
mov
lret
cmp
cs
loope
sar
mov
xchg
repnz
add
jle
scas
int
in
pop
push
loope
dec
jecxz
outsb
xchg
mov
add
mov
jbe
push
not
mov
cmp
jge
adc
lret
or
loope
iret
stos
negb
fcoml
mov
mov
outsl
cli
cli
cwtl
sti
leave
fisttpl
push
rcrb
xor
add
sub
push
pop
mov
push
sbb
popa
and
icebp
inc
add
int
addr16
into
and
ret
lea
push
dec
jge
sbb
mov
pop
push
lcall
push
adc
xchg
int3
movsb
jmp
sbbb
sbbb
mov
mov
jo
xchg
ss
leave
shlb
mov
cld
and
push
xchg
lods
pop
inc
pop
push
pop
jle
adc
pop
xchg
cmp
push
xchg
push
inc
imul
mov
xor
cmp
lods
fcoml
cmp
insb
cli
sbb
nop
int
mov
pop
add
stos
stc
fwait
push
pusha
incb
push
mov
mov
mov
push
andl
fdivr
and
lcall
inc
inc
movsl
push
mov
jecxz
shll
sbb
sub
aad
fcoms
inc
push
jmp
int
lock
mov
sbb
std
inc
mov
dec
mov
jae
sarb
sti
int3
insl
xor
xchg
inc
imul
lret
popf
frstor
shrb
xorb
add
bnd
lea
cwtl
outsb
xchg
outsl
mov
mov
in
mov
int3
inc
xorb
jno
add
das
in
cli
jle
flds
cltd
cwtl
inc
mov
and
ds
push
cmpsl
daa
or
iret
jp
pusha
xchg
jl
das
sahf
imul
mov
pusha
jno
or
shlb
sub
sbb
xchg
xor
inc
es
mov
push
adc
inc
inc
sub
push
sub
inc
imul
inc
xor
test
dec
js
or
inc
push
sbb
xor
cmp
jae
cmp
inc
or
je
mov
mov
cmpsl
and
shl
and
xchg
neg
std
fsubrs
xchg
movsl
ljmp
fstpt
push
movsb
pusha
add
mov
ds
xor
adc
pop
jmp
pop
mov
xchg
cmpsl
js
ret
mov
cmpsl
rcrb
loope
mov
dec
inc
test
mov
add
outsl
xchg
mov
mov
dec
rorb
mov
mov
imul
push
lods
mov
stos
sbb
sub
sbb
insb
testb
xchg
pop
icebp
adc
int
fcmovnbe
and
imul
xor
int
jle
enter
pushf
int
cld
outsb
pop
stc
inc
xchg
aam
jno
and
rcrl
sub
add
pushf
pop
mov
jl
int
out
aad
clc
inc
in
fldenvs
cmc
cmp
dec
cltd
testl
pop
lea
lds
fucomip
out
shrb
dec
or
jl
add
repz
mov
andb
lds
xor
mov
nop
add
push
or
scas
xchg
mov
lock
xchg
mov
scas
add
pop
sub
das
push
das
rolb
or
daa
out
adc
jae
sub
das
xchg
or
add
and
loopne
sub
pop
loop
js
idiv
jp
inc
test
cmpsl
push
mov
lahf
push
jo
insb
or
into
pop
cli
ja
ja
outsl
jg
xchg
and
test
add
sub
popa
cmpsl
rol
mov
xchg
je
int
push
lods
cmpsl
push
arpl
sbb
mov
fwait
negl
push
xorb
xor
gs
xchg
cmp
jo
or
pusha
xchg
jle
mov
adc
aad
js
mov
jbe
pop
cmp
dec
das
and
outsb
or
jmp
push
clc
dec
mov
dec
ret
movsl
lods
imul
iret
ss
out
mov
push
mov
fcoml
test
inc
and
and
mov
lret
push
jl
mov
mov
fyl2xp1
insb
adc
push
orb
aam
push
sub
mov
push
push
push
add
lahf
loop
aad
jo
mov
lret
scas
add
xor
mov
sub
mov
mov
sbb
mov
jle
sbb
scas
cmp
jbe
ret
dec
fs
jp
cmpsl
pop
jmp
xchg
dec
outsb
aad
cmp
shlb
cmp
xchg
mov
mov
int
xor
cmp
lods
ror
mov
in
mov
mov
jne
push
lods
inc
cmp
mov
sarb
sbb
sahf
cmpsl
ret
negl
scas
push
clc
enter
rcl
xchg
iret
jge
stos
repnz
xchg
push
not
jmp
out
inc
out
mov
imul
jl
stc
mov
pop
ret
mov
pop
popa
fdivl
sbb
mov
and
test
xor
lods
jg
scas
das
addr16
push
pop
fisubrl
lret
ret
xor
dec
pop
push
dec
insb
push
add
cmc
lea
add
hlt
rclb
jbe,pn
repnz
mov
and
and
mov
fdivrl
or
or
daa
mov
pop
lcall
ficoml
hlt
rclb
inc
adc
test
outsb
test
lea
adc
jle
sbb
pop
mov
es
mull
mov
lahf
les
stos
repz
mov
insb
xor
xchg
sub
lahf
jae
or
imul
out
out
xchg
mov
or
dec
test
int
clc
adc
pop
addr16
inc
fwait
mov
mov
rorb
scas
repz
loope
pop
or
incb
pop
call
das
imul
aaa
push
mov
mov
add
sbb
mov
scas
or
cli
sub
cmp
push
inc
inc
jne
fsubrs
in
nop
or
dec
loopne
xor
idivl
repnz
fadd
mov
and
nopl
sbb
pop
cmc
dec
out
cli
movsl
push
outsl
mov
adc
lahf
stc
mov
mov
cmp
test
jle
insb
or
pop
adc
xchg
sub
adc
cmp
sub
test
cld
xchg
nop
aam
mov
mov
cltd
dec
shll
xchg
test
into
out
or
cmp
lret
aad
push
xlat
cli
or
es
mov
adc
cmp
add
loope
mov
sarb
outsl
xchg
jg
outsb
repz
mov
mov
stos
jae
out
jae
push
pop
and
mov
adc
jne
mov
adc
out
push
out
xchg
repnz
ljmp
fwait
xchg
pusha
adc
mov
dec
xchg
and
js
rorl
fbld
sarb
pop
bound
pop
adc
xchg
inc
fcmovnb
scas
push
add
mov
ds
mov
std
lea
adc
out
push
inc
xchg
jp
addr16
in
gs
js
dec
jmp
and
lea
imul
bt
fwait
enter
push
sbb
lock
ret
add
lods
sbbl
cmp
jmp
insl
lds
inc
frstor
xchg
dec
mov
into
fldcw
daa
arpl
and
xchg
jmp
arpl
divl
mov
fsub
sub
sub
push
mov
and
out
and
jl
cmc
aaa
cmpb
loop
cmc
stc
pop
out
idivb
dec
dec
cmp
sbb
xor
jl
aad
stos
jb
inc
popa
inc
mov
vcvtsi2sd
pop
hlt
pop
lahf
es
xor
imul
add
jl
lret
add
dec
push
out
cmpsb
cmp
mov
lahf
out
sbb
adc
lds
fnsave
sub
sbb
pusha
push
push
or
out
popa
iret
outsl
ret
stos
insb
movsb
in
and
popf
jb
xchg
xor
inc
das
xor
cmpsl
pop
mov
push
pop
syscall
jo
dec
rorl
es
icebp
dec
arpl
xchg
mov
xchg
sarb
jl
es
dec
and
iret
adc
pop
jecxz
pop
movsb
inc
push
dec
aad
lds
scas
push
filds
dec
outsl
es
xor
ja
cwtl
scas
xchg
fs
mull
xchg
test
mov
fdivs
cmp
pop
and
mov
mov
xchg
mov
aad
adc
movsl
lcall
push
lods
jg
xor
add
sub
fadd
pop
mov
and
push
loop
cmp
sub
fstpl
fsincos
daa
inc
mov
push
cltd
xlat
lock
xor
inc
imul
or
lsl
lds
pushf
mov
enter
mov
jnp
decb
pusha
repnz
xor
dec
or
arpl
pop
jl
mov
cld
pusha
dec
mov
push
movsl
lods
mov
fldt
push
mov
push
sbb
shl
mov
lret
mov
clc
inc
push
inc
xlat
sbbb
imul
cmp
cwtl
jge
pop
xchg
stos
cmp
or
outsl
movsl
mov
fmuls
cmp
and
mov
pop
mov
xor
and
jle
in
mov
dec
and
fdivs
das
test
fmulp
jle
xor
ret
lcall
cmp
or
pushf
xchg
dec
insl
in
orb
add
or
jnp
stos
push
jg
imul
push
int
sbb
xchg
loopne
mov
dec
mov
add
jge
pop
or
lea
outsl
mov
cmp
movsl
and
mov
pop
repz
ss
lret
inc
out
push
xchg
sub
mov
nop
inc
mov
imul
cmp
lcall
mov
mov
sbb
adcl
cltd
pop
in
das
sarb
es
mov
sbb
inc
cmp
jecxz
add
lds
mov
loop
pusha
push
iret
shll
cwtl
movsl
mov
dec
push
mov
push
fnstenv
mov
push
pop
cmpsb
movsb
repz
push
in
xor
push
fs
jmp
std
jecxz
pop
jg
xchg
bound
outsb
mov
pop
fdivs
sahf
xor
cmp
sbb
xchg
cmp
test
test
lods
clc
jnp
mov
xchg
or
jo
dec
sub
mov
mov
mov
mov
mov
xchg
imul
cld
lods
sysret
push
and
out
iret
ret
jae
int
or
aam
push
mov
stos
xor
and
addr16
push
pop
insb
xlat
shll
lea
sbb
enter
cmpsl
cli
outsb
xlat
cmp
imull
lcall
lods
decb
pop
cmpsl
pop
repnz
push
stos
push
ljmp
mov
faddl
pusha
testb
sbb
call
pop
mov
lcall
xchg
inc
ds
adc
hlt
dec
sub
test
aas
insl
movsl
cmp
or
dec
inc
sbb
jae
cld
mov
adc
sbb
out
loop
jno
add
mov
in
adc
jg
ret
imul
jb
and
fwait
adc
push
gs
nop
ljmp
and
mov
sbb
inc
imul
fwait
lcall
repnz
xchg
push
stc
add
in
out
add
mov
enter
cltd
pop
shlb
std
int3
or
mov
sub
aad
mov
mov
pop
shl
cmc
popa
pop
mov
gs
mov
data16
mov
iret
pop
aad
mov
and
jne
outsb
sbb
hlt
clc
cmpb
sub
push
mov
xor
adc
das
mov
inc
add
push
shl
mov
mov
outsb
or
gs
mov
iret
cmp
xchg
call
lds
inc
cmp
js
xor
sbb
mov
mov
jmp
inc
and
aaa
jb
loop
mov
jbe
scas
das
sbb
dec
arpl
jl
inc
jle
or
ds
scas
into
sti
mov
scas
arpl
or
push
les
outsl
cltd
xchg
gs
fxch
push
and
pusha
hlt
enter
mov
in
sub
or
sbb
jecxz
aad
jp
pop
jg
es
mov
test
mov
pop
fadds
sarb
dec
pop
add
mov
scas
or
jp
mov
test
xor
in
or
push
pop
adcb
shll
xchg
mov
xor
es
pushf
inc
xor
jecxz
loop
xor
mov
mov
xchg
movsb
adc
push
das
add
inc
gs
inc
xchg
jae
cmp
imul
out
adc
outsl
lret
sarl
jmp
sti
mov
sbb
int
imul
pop
xchg
mov
insl
cmpsl
call
push
pop
cmp
sti
lcall
out
repz
or
lret
xor
aaa
inc
mov
jb
adc
ret
inc
lods
mov
push
jp
pusha
loopne
cs
xor
lret
and
rcrl
bound
add
xor
das
ret
push
jge
push
les
push
ss
push
out
stc
test
test
mov
xor
in
mov
lret
sub
popf
adc
pop
jg
test
jge
cmp
xor
pop
outsb
fs
mov
in
dec
pop
or
or
cli
mov
adc
cmp
nop
xchg
fsubs
xchg
mov
push
nop
js
hlt
je
pop
push
mov
push
mov
fadds
add
cltd
popf
adc
ss
dec
mov
inc
pop
cmp
iret
adc
lcall
and
mov
xlat
cmpsl
sbb
add
xor
fstpt
ficoms
adc
int
jb
add
or
pushf
outsb
xchg
in
and
aam
inc
mov
add
dec
mov
push
xlat
dec
sub
inc
jnp
jne
pop
sbb
dec
jne
or
jl
aaa
jecxz
lahf
lret
lret
into
repnz
sahf
mov
jecxz
jmp
and
out
fbstp
cmp
jg
test
fwait
cs
jnp
repz
stos
adc
adc
inc
add
push
mov
add
daa
int
outsb
sysexit
notb
sub
xlat
jne
hlt
sbb
push
push
push
push
or
mov
shll
fidivs
pop
and
pop
scas
mov
jo
or
dec
repz
repnz
jo
outsl
and
mov
jb
in
mov
push
adc
add
jno
stos
xchg
pop
sbb
aaa
push
cmp
jmp
out
in
pop
add
fdivs
mov
gs
andl
mov
in
add
shl
jp
sub
cmp
rolb
icebp
jge
dec
push
xchg
dec
cwtl
jl
inc
shlb
insb
cltd
push
sub
imul
pop
test
popa
out
int3
into
sbb
cwtl
mov
jae
testl
cwtl
jle
sub
fwait
mov
and
sbb
std
addl
mov
cmp
cmp
mov
mov
divb
xchg
mov
add
mov
lahf
or
add
jnp
mov
sub
and
mov
sub
stos
std
xor
hlt
mov
mov
xlat
or
sub
adc
lea
xchg
jmp
not
shrb
or
negb
clc
mov
sub
lret
subb
out
inc
xchg
arpl
cmp
dec
insb
pop
or
inc
sub
repz
pop
push
inc
jno
add
jecxz
cmp
pop
pop
mov
mov
ja
push
xchg
push
sbb
mov
sub
outsb
cmpsb
repnz
jno
cld
adc
push
or
scas
adc
fcoml
inc
cs
fistps
jmp
mov
mov
mov
js
out
xchg
sbb
imul
push
mov
pop
sub
adc
xor
mov
aad
loopne
aaa
out
xchg
pop
cmc
mov
jb
cmc
cld
xchg
jnp
das
xchg
mov
cli
fisubs
adcl
gs
lea
insl
insb
icebp
xchg
das
scas
jbe
int3
fs
aaa
sub
jne
or
call
inc
sbb
jno
mov
in
in
jp
jns
out
imul
cmpb
inc
xor
movsl
dec
mov
int3
xor
loope
cmp
mov
or
imul
into
int
int3
pop
pop
scas
mov
push
ret
pop
enter
xchg
ljmp
jns
clc
cmpsl
movsb
adc
shll
mov
dec
or
mov
cmp
ret
aaa
push
pop
mov
jnp
mov
aas
add
push
or
jecxz
xor
xchg
xchg
jno
sbb
jle
repz
mov
adc
add
int
mov
mov
ret
lods
mov
jl
insb
bound
inc
cmp
sub
sbb
or
cld
repnz
loop
ror
ret
lods
mov
jl
insb
bound
inc
cmp
sub
sbb
or
cld
repnz
mov
mov
mov
jl
insb
bound
cmp
sbb
in
call
shr
ret
mov
cmpb
notb
xor
jecxz
repz
int3
int3
int3
int3
int3
xchg
sbb
xor
add
pop
insl
sbbl
lods
ret
repz
repz
add
xor
arpl
insl
sbbl
lods
ret
fst
int
std
repz
add
xor
arpl
insl
andl
lods
mov
cwtl
pushf
in
jae
adc
pop
arpl
enter
cwtl
jle
mov
adcl
adc
push
adc
jb
inc
movsl
pop
mov
jno
mulb
insb
in
cli
mov
sub
jmp
or
xchg
adc
sub
push
inc
inc
or
call
pop
ret
jae
mov
adc
pusha
add
or
cmp
cmp
jg
adcl
mov
mov
int3
incb
shrb
xorb
fsub
mov
inc
mov
nop
adc
or
sti
cwtl
adc
test
xchg
fwait
dec
fwait
mov
call
mov
sarl
loop
repnz
pop
sbb
xor
arpl
insl
sbbl
lods
ret
fst
int
std
rep
ja
push
fimuls
jge
add
ss
sbb
sbb
int3
rcl
ret
mov
lahf
mov
jg
mov
inc
push
cmp
aaa
arpl
or
fdivr
loope
jmp
rorl
in
xorl
jns
dec
adc
xor
arpl
insl
sbbl
lods
ret
fst
int
std
repz
add
xor
arpl
insl
sbbl
lods
ret
fst
int
std
repz
add
popa
cld
xor
pushf
lods
cmp
std
or
out
fcoml
xchg
in
pop
ds
xor
call
imul
dec
dec
cmpsl
mov
pop
jns
jecxz
int3
test
xor
pop
sbb
jmp
movsb
cld
pop
cmpsl
cld
or
aam
cmc
sbbl
adc
cwtl
cmp
inc
pushf
jne
std
lock
leave
add
icebp
ja
push
mov
push
mov
daa
mov
mov
das
clc
lods
xchg
and
adc
ja
or
add
jmp
add
inc
mov
addr16
lea
or
sbb
push
mov
pop
mov
incl
mov
int3
data16
mov
iret
les
inc
jae
mov
mov
int3
or
mov
and
lret
mov
mov
sub
add
and
cmp
xor
loope
cmp
dec
jno
cmp
jnp
test
loopne
repnz
cmc
leave
push
sti
sbb
sahf
ss
cmp
sub
cmc
inc
rorb
push
inc
je
mov
mov
sbb
inc
fisubs
out
sbbl
adcl
cwtl
test
repnz
inc
aam
mov
xchg
xchg
push
lahf
cmpsl
orl
loope
and
jae
push
imul
mov
adc
fnstenv
xor
pop
and
sbbb
push
push
and
ret
or
mov
adc
and
inc
rcr
aaa
xor
dec
in
sbb
dec
lds
fadds
scas
or
adc
xor
dec
xor
and
ss
add
xchg
out
mov
jo
int3
jb
leave
or
test
adc
pop
int
xor
add
ss
ret
adc
cmpsl
cmp
mov
es
mov
lret
dec
xor
arpl
iret
push
cltd
or
xchg
sbb
jae
stos
addr16
scas
inc
pop
lcall
test
jle
stos
mov
outsl
adc
mov
push
sbb
xchg
xchg
adc
or
cmp
adc
ret
mov
mov
adc
mov
adc
int3
inc
mov
ret
dec
inc
add
xchg
cmp
sbb
mov
and
xchg
in
lds
in
mov
push
push
sar
jne
sbb
mov
add
or
dec
mov
insl
and
push
xor
push
or
movb
push
mov
dec
jmp
shlb
jne
xor
in
setb
xchg
dec
int3
and
add
pusha
data16
insb
sbb
or
adc
hlt
aad
inc
aas
test
ja
lret
pop
jmp
ja
lea
scas
gs
pop
adc
add
insl
fwait
dec
pop
cld
out
add
fidivl
movsl
cltd
arpl
subb
push
xor
sti
jmp
pop
xor
adcb
into
push
xchg
and
sbb
in
jns
fnstenv
lea
xchg
mov
inc
jnp
int3
lods
cmc
xor
or
push
add
mov
dec
out
shlb
push
jge
inc
movsl
xchg
cmpsb
xchg
scas
scas
adc
inc
pop
in
shrl
mov
clc
dec
add
jne
shld
sub
mov
sti
cmpsl
mov
insl
xor
out
pop
int
jl
out
fildl
ret
es
push
in
jbe
icebp
mov
pop
icebp
icebp
test
lea
icebp
hlt
pop
aas
loop
fsts
dec
outsl
mov
loop
mov
clflush
sbb
xchg
loop
push
xor
xchg
push
mov
lea
fdivr
adc
lcall
mov
xor
inc
mov
push
and
jmp
mov
out
xor
xchg
es
inc
negl
push
je
xchg
push
or
pop
pop
das
cmp
cmpsb
inc
sbb
add
or
daa
stos
mov
into
inc
test
es
scas
lods
mov
cwtl
repnz
ja
sarb
fcomps
sub
pop
mov
fwait
rorl
and
gs
push
lock
popf
add
jle
test
pop
shr
sbb
bound
loope
rcr
mov
mov
imul
hlt
push
in
lods
jp
jnp
mov
dec
imul
into
or
cmpsb
jnp
sub
or
std
scas
mov
mov
in
sahf
insl
int
cmp
lods
dec
ljmp
insl
out
or
adc
ljmp
adc
cmp
out
xchg
ss
dec
mov
push
mov
loopne
and
cmpsl
dec
pop
pop
jl
pushl
leave
sbb
repnz
sbb
sbb
pop
out
inc
jle
sub
mov
sub
es
mov
in
dec
jbe
ret
jle
mov
out
js
or
fwait
outsb
lret
out
jae
jge
into
jne
xor
lea
push
jb
push
mov
push
mov
cli
mov
mov
xor
dec
xchg
fisttps
cmpsl
pop
scas
push
jle
iret
sbb
dec
cmpsb
push
jne
sbb
je
fwait
push
mov
test
and
ficoml
out
mov
push
andb
jo
aas
in
pop
lods
lret
push
or
cmp
lds
dec
inc
jne
mov
lret
ret
xor
jae
xchg
stos
fsubrs
gs
fdivrl
xor
add
mov
push
mov
inc
pop
cmp
fdivrl
inc
xor
mov
test
pusha
adc
cwtl
xchg
mov
xchg
je
xor
pop
mov
cmpsl
mov
sbb
jae
sbb
in
jp
imul
sbb
jb
or
mov
jmp
int3
into
bound
call
iret
or
popf
test
fisttpll
jmp
pop
negb
insl
les
push
lock
nop
ret
jne
test
adc
in
add
in
in
or
call
sbb
xchg
mov
mov
jge,pt
int3
nop
cmpsb
shl
sub
cld
add
cmp
mov
lcall
call
inc
mov
stos
mov
out
jb
clc
and
insl
out
xor
je
mov
in
xchg
shl
std
jecxz
outsl
mov
pusha
inc
das
pop
xor
test
call
iret
in
insb
and
and
out
roll
push
cmpsl
sbb
jno
push
pop
cmpsb
pop
inc
and
add
mov
outsl
jno
cld
push
xor
inc
or
mov
mov
xchg
cmc
mov
xor
insb
mov
cmp
push
fsubs
insb
mov
mov
mov
shl
in
stc
push
cltd
sbb
lds
shl
leave
and
push
cltd
pop
mov
cwtl
mov
test
xchg
xchg
int3
stc
mov
fstpl
pop
ljmp
repnz
insl
jl
imul
sbb
shrl
inc
test
mov
xchg
decl
stos
jmp
mov
mov
lret
pushf
sub
test
adc
cltd
orb
test
shlb
dec
stc
outsl
scas
mov
add
add
mov
scas
xchg
inc
fisubrl
pop
fisubrs
fwait
or
add
es
push
data16
cmc
gs
cld
and
loope
imulb
pop
xor
push
inc
es
or
imul
dec
cltd
jae
and
loope
test
push
inc
adc
dec
daa
mov
ljmp
sbbb
mov
or
push
clc
jo
inc
adc
cmp
leave
push
repnz
hlt
jle
cmp
fisubl
push
xchg
push
jl
jg
cmp
in
inc
adc
mov
mov
mov
and
mov
and
fstps
cld
sarl
push
imull
mov
lcall
cmc
adc
pop
ficoml
jbe
push
insb
push
add
xlat
fsubs
pop
add
xor
jbe
push
cmp
mov
push
jge
or
push
mov
pop
fimuls
out
cmp
addr16
inc
xor
add
dec
cltd
cwtl
push
into
out
scas
fstps
fwait
outsl
cs
push
outsb
enter
icebp
push
inc
adc
repnz
push
out
jb
sbb
push
enter
bound
arpl
adc
adc
mov
mov
fwait
push
movsl
scas
or
std
clc
push
fldenv
sub
or
out
pop
and
data16
inc
int3
dec
mov
push
xchg
div
ss
lods
inc
push
mov
outsl
push
mov
in
aad
ret
adcl
push
call
call
shl
inc
stos
sbb
icebp
sbb
sti
pop
inc
mov
scas
ret
xor
mov
popa
add
repnz
mov
nop
test
pop
test
xchg
mov
xchg
or
jg
loopne
jecxz
popf
ljmp
aad
inc
cmp
and
push
inc
ljmp
sbb
adc
psrad
mov
jge
inc
fstps
inc
stos
lds
std
mov
push
mov
aaa
shlb
sbb
repz
orb
cmp
shr
int3
pop
mov
lcall
into
out
inc
lock
xchg
push
jns
jb
stc
data16
cmp
dec
mov
fs
jbe
aas
and
add
inc
push
inc
loope
es
cmp
jecxz
bound
adc
inc
jg
xlat
or
jns
mov
sbb
dec
cs
test
sbb
fdivs
sbb
shrl
loop
lea
rcrb
mov
adc
mov
test
xchg
mov
mov
pop
int
fistpl
inc
push
adc
pop
addr16
adc
sbb
shl
add
shrb
mov
loope
fimuls
xor
js
adc
daa
xchg
mov
mov
mov
pop
pushf
gs
repnz
insl
addl
pop
das
jl
and
dec
aad
call
ret
jmp
cmp
dec
mov
hlt
ficomps
cwtl
pop
pop
sbb
mov
shll
test
mov
push
dec
movsb
lahf
xchg
ret
pop
adc
dec
lds
mov
inc
sub
sahf
and
out
lret
enter
bound
pop
cltd
movsl
mov
ljmp
rorl
data16
cmp
loope
cmp
dec
nop
adc
jbe
fcmovu
cld
mov
cmp
add
sbb
mov
adcl
jns
in
incb
arpl
hlt
sub
loopne
inc
xchg
push
mov
pop
sub
gs
testl
inc
insl
pop
ret
add
sbb
inc
mov
cmpsb
shl
outsl
out
push
inc
ret
mov
jg
mov
push
cmp
pop
nop
popf
lcall
into
cmpsl
mov
cmpb
mov
dec
cmp
sete
and
sub
rclb
xchg
movsl
jg
dec
repz
xor
inc
push
repz
imul
push
xchg
pop
cmc
daa
dec
aam
xchg
sahf
enter
push
icebp
xchg
dec
in
cmpsl
or
jnp
mov
loopne
cmpsl
mov
push
stc
xchg
je
jae
lret
adc
inc
lods
adc
insb
pusha
add
xlat
jno
loop
sub
hlt
fstpt
push
outsb
aam
mov
jbe
sub
movsl
mov
cmp
sbb
pop
rcrb
jg
pusha
test
cs
loopne
push
bound
cmpb
or
push
icebp
inc
testb
pop
cmp
mov
mov
inc
pop
cmp
dec
mov
add
dec
leave
mov
rorl
int
mov
lret
in
cwtl
cmp
cmp
sahf
test
xlat
notb
push
inc
aad
cmp
in
jae
sbb
fcompl
add
jbe
negl
js
stos
inc
insb
sbb
xchg
das
xor
cmpsb
lock
lock
adc
xor
xchg
sti
inc
jmp
cmpsb
sub
cli
xchg
rcrb
and
imul
adc
xor
jg
lahf
fbstp
clc
das
mov
mov
dec
sbb
lock
repz
sbb
lds
fisttpl
int
sbb
ret
in
cmp
int3
in
test
fmulp
out
lods
lods
xor
hlt
ljmp
jl
fdivl
pop
jbe
add
pop
or
fimull
in
xchg
lea
nop
arpl
out
and
sub
out
ljmp
dec
shrl
cld
stos
out
adc
filds
inc
lods
ljmp
xchg
jmp
mov
cmp
xlat
mov
pop
pushf
inc
iret
test
cltd
lcall
push
loop
fildll
dec
mov
stc
out
subl
and
or
stc
stos
es
in
xchg
icebp
shlb
mov
push
jmp
push
lock
movsl
enter
pop
jle
dec
jo
loop
lret
pop
sub
fisubs
fwait
test
inc
aam
and
cwtl
jge
jle
aaa
mov
xor
push
bnd
sbb
std
and
clc
iret
test
rclb
dec
dec
add
add
push
push
aad
fld
jecxz
imul
or
mov
test
imulb
stos
ret
test
or
sbbb
pop
or
out
jne
push
adc
aas
jmp
ds
jg
xor
jne
ret
lret
jecxz
or
dec
mov
and
fadds
in
and
mov
or
in
push
loopne
dec
out
or
push
outsb
shrb
xor
outsb
pop
cmp
dec
movnti
mov
pop
jg
jl
cmp
adc
jns
inc
call
push
das
pop
mov
sahf
js
inc
dec
inc
hlt
mov
aam
out
inc
cmp
jae
xchg
push
popa
pop
insl
clc
sbb
xchg
mov
push
pop
jbe
mov
int
mov
mov
ja
ss
out
jg
dec
test
mov
or
dec
ljmp
jns
xor
push
repnz
adc
cli
cs
divb
jbe
xor
push
inc
rcll
in
add
mov
pop
sbb
mov
sub
xchg
ret
gs
push
mov
mov
in
push
mov
sbb
dec
lds
mov
pushf
shl
out
pop
xor
gs
ljmp
cmpsb
mov
add
sub
stos
dec
sar
push
in
mov
adc
pop
ljmp
stos
sbb
mov
scas
and
icebp
sub
sub
or
ds
or
loopne
xor
idivb
jb
ret
stc
ret
pop
push
push
cwtl
pop
jnp
xchg
ret
cltd
mov
inc
xchg
fistpll
and
insb
dec
inc
mov
pop
and
xchg
mov
inc
sub
ljmp
jo
dec
dec
lret
mov
ds
cwtl
addl
and
addr16
pop
mov
adc
out
into
inc
stc
stos
lods
int
fstl
repnz
testb
mov
jns
sbb
xchg
out
xor
pushf
ss
fiaddl
bound
dec
into
pop
xchg
icebp
mov
fwait
push
inc
jg
std
xchg
shlb
pop
sbb
cmp
cmp
mov
stc
mov
pop
mov
mov
and
sbb
notb
in
dec
das
and
imul
rcl
mov
and
popa
aad
push
scas
mov
pop
pushf
pusha
xor
sub
cmp
mov
mov
fwait
rcrl
push
jle
push
aaa
icebp
ret
push
shrb
imull
inc
push
jle
sub
inc
jle
dec
inc
xor
xchg
flds
vpmacsdd
stos
ret
std
jne
adc
sbb
ret
push
fs
and
pop
or
and
ficompl
add
sbb
push
ljmp
fwait
jmp
pop
shr
jmp
stos
add
xchg
jg
mov
insl
daa
push
test
mov
inc
cld
push
xor
lods
in
and
xor
and
add
adc
and
pop
test
aam
or
mov
imul
xor
aad
xor
add
mov
push
push
add
stos
fdivr
pop
daa
cmp
orl
rcrb
xchg
push
hlt
out
test
mov
jnp
push
sbb
lds
sahf
mov
push
rorb
or
mov
dec
mov
lea
inc
jmp
sbb
adc
pop
mov
aam
fiaddl
js
push
adc
mov
inc
data16
aas
cli
or
in
cmp
hlt
push
or
inc
push
push
imul
call
cwtl
call
mov
xorl
adc
or
popf
or
add
mov
fs
mulb
add
adc
out
dec
jno
inc
sub
mov
mov
ret
test
jmp
stos
cmp
jmp
out
rcll
pushf
push
add
inc
pop
sti
in
cmp
mov
inc
inc
xchg
dec
sub
arpl
outsb
xchg
mov
shl
fistps
push
push
dec
adcl
xlat
xchg
mov
out
stos
xlat
lds
cmpsb
push
outsb
fisttpll
adc
push
xchg
pop
in
pop
cmp
mov
dec
adc
adc
rcrl
xchg
push
xlat
inc
bound
lcall
cmp
dec
pusha
add
or
mov
pushf
insb
stos
adc
pop
daa
jle
lock
push
enter
or
sub
repz
dec
imul
mov
xchg
mov
jne
insb
lret
add
roll
push
xor
and
enter
xchg
clc
dec
mov
push
mov
jbe
filds
push
shrl
push
or
js
inc
add
shll
bound
aas
pop
dec
xchg
inc
dec
fisubrs
pop
or
lods
jno
in
jp
push
loopne
and
shr
xor
test
and
insl
mov
pop
ja,pt
push
xlat
dec
adc
cmp
pop
arpl
inc
out
jg
fcompl
icebp
pop
int3
push
mov
enter
push
fstpl
outsb
mov
jle
xor
sbb
or
sahf
sarl
push
sahf
out
or
in
and
orb
mov
mov
sub
push
mov
ds
lcall
dec
insl
fsubs
push
mov
jge
out
lea
std
adc
ret
int
xor
jmp
shrl
dec
in
or
mov
in
adc
sbb
mov
mov
fwait
mov
les
pop
add
xchg
mov
mov
pop
fidivs
jmp
jb
mov
cltd
std
mov
dec
xor
out
sub
out
into
daa
xlat
test
xchg
mov
xor
add
mov
dec
push
out
cld
mov
dec
cltd
pusha
mov
adc
fnstenv
push
add
sbb
cmp
std
in
lds
lret
ja
ljmp
jno
xor
and
stc
pop
js
jo
xchg
loopne
or
cld
push
push
sahf
adc
and
sti
xchg
aad
sub
pop
xor
test
scas
sub
push
nop
mov
push
dec
inc
inc
arpl
push
pop
mov
cmp
pop
sbb
in
jp
loopne
mov
sub
jge
data16
hlt
mov
cli
push
in
and
mov
js
imul
mov
ret
mov
mov
mov
shll
mov
pop
push
fnstenv
inc
jmp
cs
and
xchg
jge
inc
adc
sub
dec
mov
imul
xchg
and
jnp
mov
xlat
fnstenv
adc
bound
and
test
test
sbb
movsb
shll
icebp
xchg
and
shrb
in
sub
lods
lahf
out
lret
loop
dec
into
imul
sbb
inc
movsl
repnz
repnz
sbb
add
cmp
aaa
outsl
jno
test
sbb
cmp
cmp
xchg
sbb
inc
andl
out
pop
jl
adc
out
adc
popf
xchg
mov
popf
cmp
jp
lds
cmp
aas
xchg
xchg
add
dec
jmp
cmp
rol
or
xchg
push
lods
adcb
dec
sbb
aam
ret
icebp
cli
mov
mov
jl
sbb
cmpsl
and
or
out
xor
mov
adc
aas
pop
inc
mov
mov
adc
adc
cltd
xor
push
in
pop
pminsw
lods
int3
sub
dec
push
push
jl
cmp
dec
repz
insb
fldl
dec
add
dec
push
fsubrl
mov
xorl
mov
mov
push
divl
shrb
jnp
out
mov
dec
pop
ret
fstps
pop
scas
mov
imul
cwtl
loop
add
pop
pop
xchg
push
repz
push
inc
stc
push
push
rclb
jp
sti
fwait
xchg
mov
movsl
fwait
inc
cmp
and
jne
add
adc
shlb
mov
fidivl
sub
mov
sbb
lock
loopne
icebp
mov
jne
push
mov
adc
insl
icebp
sbb
adc
dec
aas
jnp
pop
inc
mov
xchg
sub
lods
push
mov
shll
jae
cmp
xlat
test
mov
add
std
inc
movsw
out
mov
adc
push
mov
out
xorl
pop
fucomp
mov
test
iret
pop
cld
xlat
sub
mov
pop
iret
scas
in
jle
cmpsl
mov
pop
addr16
mov
rol
roll
xor
data16
mov
and
lcall
fstp
pop
pop
xor
arpl
jae
jo
arpl
mov
popa
les
lods
pop
test
add
es
repnz
cld
test
jo
sbb
xor
xchg
sub
andl
sbbb
mov
std
gs
mov
push
sub
dec
insl
push
jbe
scas
fstl
add
out
loopne
xor
jge
cwtl
hlt
lds
aas
or
mov
data16
adc
out
adc
fsts
push
mov
jnp
mov
hlt
cmp
and
fisubrs
mov
aad
jno
pop
push
pop
pop
pop
imul
insl
inc
or
add
bound
xor
clc
lock
cmp
dec
dec
scas
push
mov
lahf
mov
mov
daa
es
pop
or
or
cltd
sbb
bound
in
in
ret
inc
lods
xor
mov
movsl
pop
imul
xor
arpl
insl
sbbl
lods
ret
fst
int
std
repz
add
xor
arpl
insl
sbbl
lods
ret
fst
int
std
repz
add
adc
inc
pop
push
dec
arpl
sbbl
lods
ret
int
std
repnz
add
xor
inc
pop
push
int
std
jae
andl
or
pop
xor
or
int3
int3
int3
int3
int3
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
mov
push
push
call
mov
call
push
push
pushl
mov
pushl
pushl
call
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
call
push
mov
call
xor
leave
ret
pop
dec
mov
jp
bound
jne
or
cmp
lret
mov
cmpsl
cli
rorb
out
pop
dec
pop
pop
aaa
push
jp
or
ja
addr16
lret
cltd
ljmp
imul
out
int
xchg
push
jp
or
sbb
lahf
cmp
mov
cli
test
xchg
mov
jae
push
sub
int
stc
jae
fs
push
test
mov
dec
adcb
mov
push
fimull
or
test
mov
jp
and
dec
jmp
ja
call
jbe
push
inc
adc
dec
aaa
popf
cmpsl
push
filds
pop
xlat
aaa
js
dec
sub
sub
mov
jb
push
or
lds
adc
lds
push
sbb
xchg
stos
cli
movsl
enter
test
les
xor
das
mov
dec
adc
cmpsw
push
xchg
aaa
xchg
faddl
movsl
enter
fidivrl
xchg
repnz
sahf
fisubrl
jg
mov
cmpsl
sti
push
lahf
pop
mov
idivl
aaa
push
jp
or
sbb
fistpll
gs
outsl
ljmp
imull
jno
jae
dec
adc
data16
fs
push
scas
scas
out
mov
subl
pop
jo
in
or
inc
es
pop
adc
scas
mov
scas
rorb
mov
ljmp
popw
adc
inc
sbb
cmp
fidivl
mov
lcall
pop
pop
aaa
push
jp
or
ja
cmp
fidivl
mov
lcall
ret
adc
es
popf
gs
fisttpl
aaa
aas
jno
lret
xor
or
in
outsb
and
clc
fldt
pop
out
xor
or
dec
les
inc
pop
arpl
dec
stc
out
pop
jno
hlt
adc
push
mov
jns
out
insl
xlat
xor
and
jno
ret
xchg
and
clc
adc
jne
ficompl
jo
pop
dec
push
sbb
test
jno
std
cltd
mov
or
push
sub
mov
outsl
pop
test
repnz
ret
repz
das
les
mov
pop
cmp
lcall
mov
jno
jb
sub
or
add
dec
cld
mov
bound
jae
mov
cs
mov
add
cltd
fwait
jb
rcl
je
sub
dec
mov
add
and
pop
ja
xor
aad
out
push
into
mov
cli
or
lret
cwtl
cmp
call
popf
mov
mov
mov
int3
adc
or
fwait
insb
mov
popf
movups
rol
cld
verr
pop
pop
cmp
jnp
out
sbb
dec
push
int
sti
arpl
jg
jl
out
es
cmp
pop
bound
flds
sti
push
out
out
cmpsb
incl
aas
mov
insb
test
sub
dec
xor
cmp
out
fs
xchg
roll
sbb
inc
frstor
pop
cmpsl
mov
cli
jb
stos
mov
cmc
cmp
fmull
fisttpl
fdiv
mov
ficoms
stos
es
lea
push
test
jl
stc
ret
cwtl
xchg
mov
sub
xchg
andl
xchg
popa
subb
and
lods
add
cmp
in
mov
arpl
cmp
fs
ljmp
push
and
test
mov
in
divl
cli
jne
fwait
sahf
adc
leave
jecxz
mov
mov
ror
out
int3
nop
shrb
push
or
mov
jp
inc
ljmp
hlt
push
sub
jb
in
stc
pusha
pop
scas
std
in
push
ljmp
cmpsb
or
pop
ljmp
adc
jmp
adc
je
cld
xchg
imul
jb
scas
mov
add
and
push
jl
xchg
xlat
sbbl
sub
jns
mov
std
mov
mov
insb
icebp
push
or
and
lds
fcoml
xor
rclb
stos
loopne
in
call
xor
dec
pusha
adc
xchg
xor
mov
lods
jo
cmc
test
push
cld
iret
in
dec
call
loope
jb
pop
xor
xchg
fisttpll
jmp
push
shlb
aad
inc
ficompl
pop
daa
lret
fcompl
cmpsb
stc
pop
je
mov
or
or
test
or
inc
cmp
xchg
push
sbb
into
in
stc
pop
inc
imul
loop
ljmp
ja
push
ljmp
outsb
lahf
push
sahf
jbe
xchg
push
fisubrl
inc
xor
jmp
clc
ljmp
stc
cmp
sbb
fimull
dec
jne
mov
out
pop
shll
sbb
push
nop
xchg
std
cmp
imulb
inc
ficoml
add
adcl
cmp
popf
enter
shrb
lret
ret
mov
inc
insb
sbb
rorb
adc
and
sbb
inc
int
or
jp
cwtl
dec
les
jmp
push
cmp
insl
test
and
push
adc
out
sbb
leave
inc
mov
pop
jmp
xchg
pushf
lret
test
jmp
loope
push
cmp
push
cmp
push
cmpb
hlt
cltd
add
shl
jbe
int3
jns
dec
sub
sbb
push
dec
rcr
xor
xchg
mov
aam
cmp
sbb
mov
jp
or
repz
jnp
jg
lock
into
jmp
js
dec
scas
jns
iret
stc
insl
in
test
out
jge
jb,pt
xchg
pop
xor
cmp
push
movsb
fisttpl
jb
jns
mov
enter
das
testl
daa
lock
movsb
or
les
insl
xor
xchg
add
dec
pop
jnp
jmp
outsl
addl
and
xchg
aaa
jnp
lcall
loopne
es
or
es
lods
dec
int
xchg
test
pmuludq
mov
xchg
xlat
mov
pop
xorl
xchg
repnz
ds
in
jne
std
lods
bound
cmp
dec
cmc
out
dec
insl
cmc
or
call
loope
cmc
cli
dec
sbb
mul
add
cmp
pop
mov
push
out
xchg
push
aaa
mov
inc
jbe
clc
mov
sbb
sbbl
scas
jmp
or
jnp
sbb
cs
rcl
in
add
mov
mov
loop
pop
pusha
or
xor
or
lds
idivl
or
rolb
jbe
or
mov
mov
cmp
loop
mov
std
cmp
notl
daa
sub
bound
das
in
push
jl
loopew
es
mov
in
movsb
push
imul
imul
cmp
or
cmp
xchg
int3
dec
adc
fcmovbe
cld
mov
fsubrl
iret
lret
mov
insl
imul
or
mov
pop
js
sub
in
jp
test
mov
push
lods
and
jae
rcrl
mov
dec
push
andb
dec
mov
push
adc
daa
add
fidivrl
in
and
jbe
shrl
mov
aad
loope
push
pop
fadds
outsl
std
dec
insl
int3
dec
aad
push
dec
adc
es
lfs
loopne
pop
dec
dec
or
lea
xchg
test
lcall
outsl
adc
fildll
insb
mov
add
mov
and
into
fcompl
int3
fwait
xchg
adc
push
fldt
popf
add
mov
push
outsl
out
add
outsl
push
cli
mov
ret
rol
int3
push
xchg
lahf
fcmovbe
mov
push
imul
dec
loopne
push
jmp
lods
adc
xor
aam
and
jp
or
rcll
in
fwait
pop
cmp
xor
aaa
sbb
lea
into
ss
jecxz
in
or
jb
insl
adc
jns
lret
ss
mov
pop
fidivl
outsl
gs
dec
sbb
pushf
incl
cs
in
sub
mov
mov
movb
dec
ror
in
pop
sbb
out
es
in
cmpb
into
andb
mov
push
pop
aas
outsl
add
inc
movsb
add
shll
aam
repnz
in
push
pop
xlat
jmp
insb
dec
pushf
nop
repz
les
mov
jmp
push
sti
push
imul
mov
adc
cmp
outsl
jle
imul
in
shrb
repnz
lods
or
fistl
inc
mov
pop
inc
cmp
mov
loop
jle
and
imul
fisubrl
mov
mov
out
inc
or
sub
jg
loope
inc
pusha
in
xor
and
jmp
xor
movsb
xchg
add
sbb
pop
xchg
lahf
sbb
inc
cmp
sbb
cmc
gs
mov
xchg
or
jmp
xor
push
xchg
push
outsb
lods
jg
xchg
inc
stos
fcomps
ret
push
imul
aam
pop
mov
and
sbb
ljmp
inc
sbb
push
popf
fcomp
out
movsl
lahf
xchg
rcrl
test
into
sahf
notl
fwait
sub
xlat
aaa
das
mov
ficoml
jge
mov
push
es
push
in
scas
or
mov
sub
xchg
imul
stos
jnp
mov
inc
sub
xor
mov
push
iret
push
dec
push
lcall
mov
ss
cmp
imul
add
insb
jno
xchg
lahf
add
jp
sbb
jg
insb
js
in
xchg
jns
mov
mov
mov
or
ja
sbb
pop
test
sub
xchg
enter
aad
in
pop
xchg
dec
inc
hlt
pop
popa
inc
dec
and
fiaddl
popa
mov
popa
mov
xchg
andb
int3
in
push
call
loop
inc
stos
addr16
sub
pop
daa
push
iret
add
fwait
adcl
jmp
pop
pop
inc
mov
sbb
pop
popa
sbb
pop
movb
call
test
in
les
stc
push
pop
gs
mov
mov
fstl
repz
jnp
fwait
lock
scas
jl
cli
push
add
xchg
imul
cmp
out
push
xchg
sub
out
dec
xor
jp
jp
dec
pop
or
sbb
xchg
sub
jge
inc
out
mov
dec
test
ss
sub
add
sub
movsb
sbb
mov
push
scas
js
sub
imul
cmp
push
mov
imul
jbe
pop
and
jp
scas
cmpsb
insb
mov
aas
cmc
lahf
sbb
lcall
sbb
lods
loop
test
aam
stos
sbb
repnz
aaa
pop
rorb
mov
or
pop
test
loope
es
push
sub
hlt
sub
pop
imul
and
inc
mov
fs
xor
out
push
enter
mov
repnz
ret
add
sub
sbb
call
aad
adc
xchg
sbb
outsb
mov
mov
jg
movsb
cmp
cmpsb
add
repz
insb
ja
mov
popf
adc
sahf
inc
adc
cmp
cltd
test
xchg
add
testl
push
xchg
mov
loope
hlt
adc
out
push
jg
adc
insb
lea
jnp
sbb
adc
xlat
loope
pusha
sti
xchg
hlt
xchg
popa
add
push
lret
movsb
inc
cmpsl
pop
jp
hlt
leave
mov
mov
iret
lret
ret
sbb
fbld
or
pop
jg
out
mov
repz
mov
ds
cltd
xchg
pop
addr16
aas
push
dec
mov
dec
in
fsts
xchg
cmp
enter
jle
cmp
fcom
shlb
push
xor
and
add
jne
out
daa
xchg
or
pop
xchg
fistpll
adc
push
push
xor
cltd
jl,pt
pop
test
add
insb
les
test
cmp
lret
aas
push
dec
sub
pop
add
xchg
pop
lods
cmpl
imul
push
and
loopne,pt
icebp
addr16
mov
mov
scas
push
cltd
sub
mov
mov
xchg
call
mov
clc
mov
push
cmp
inc
fildl
cmp
pop
add
pushf
push
mov
cltd
and
xchg
jbe
sub
mov
scas
push
mov
iret
les
pop
mov
out
cmp
mov
cmc
jg
sbb
lds
cmp
jnp
adc
jl
adc
and
dec
sahf
xor
and
sub
dec
adc
or
pushf
popa
jne
pop
dec
sahf
jo
lods
mov
or
ret
icebp
jno
jne
cwtl
out
adc
notl
cmp
rep
or
or
lock
mov
mov
inc
stos
test
jg
popf
faddl
ret
movsl
leave
sarl
cli
push
inc
inc
jae
pop
lock
inc
loope
lea
mov
jo
mov
inc
popf
cmp
loope
sub
sbb
cmp
aas
xchg
dec
mov
mov
loopne
push
push
sbb
out
repnz
jnp
aaa
in
arpl
mov
mov
adc
inc
lods
push
cld
dec
cmp
push
test
lock
mov
add
call
dec
jecxz
shrb
adc
or
daa
xlat
xor
inc
mov
sbb
mov
fcompl
and
push
addr16
lcall
push
push
dec
in
addr16
add
not
push
jbe
ss
jbe
dec
leave
adc
sarl
push
lret
add
and
push
mov
sbb
roll
adc
mov
push
loop
ret
fsubp
lods
jbe
and
sub
add
adc
pushf
adc
xor
enter
jp
xchg
sbb
andb
jbe
cmpsl
add
test
xor
jle
je
sub
je
imul
pop
adc
mov
push
lods
mov
mov
fnstsw
add
fcmovne
mov
test
orl
les
xchg
ds
cmp
add
jcxz
in
adc
jecxz
pop
jnp
mov
sbb
pop
mov
fnstsw
push
pusha
pop
jo
ljmp
xchg
js
loopne
es
in
pop
movb
jg
scas
pushf
and
mov
stc
dec
mov
dec
mov
stos
xor
jmp
pop
xchg
pop
inc
popf
cmpsb
fcoml
mov
jo
push
enter
outsb
les
mov
xor
cmp
push
dec
dec
sub
mov
xor
stos
dec
and
cmp
sub
mov
iret
mov
push
xor
xchg
loop
leave
cmp
and
mov
clc
rclb
cmpsl
hlt
sbb
dec
stc
push
hlt
enter
dec
arpl
or
mov
mov
fstl
fstl
dec
xchg
imul
pop
ret
cmpsb
mov
shll
sub
in
imul
or
adc
ljmp
shll
mov
loopne
test
pop
inc
stc
pop
shl
shll
sbb
clc
jbe
test
xchg
sbb
adc
sbb
mov
in
cmp
clc
mov
aas
push
stc
dec
jmp
dec
aaa
stos
lock
push
insl
lods
mov
push
lds
arpl
out
push
pop
insb
aam
pop
bound
mov
popa
and
hlt
andl
gs
js
out
jae
leave
xchg
dec
jl
sbbl
xchg
nop
inc
jl
dec
cmp
movl
sub
bound
cmp
clc
xchg
cmp
rorb
and
push
mov
inc
rcrb
adc
imul
jl
fbld
shlb
imul
test
dec
repnz
xchg
cmpsb
aad
xor
hlt
ss
push
dec
sahf
mov
outsb
push
les
and
idivb
js
dec
test
daa
mov
in
cwtl
dec
cmpsb
push
repnz
aas
imul
xlat
out
mov
mov
fdivrl
mov
xor
mov
scas
or
sub
jecxz
fildl
out
xchg
out
and
sarl
js
jp
imul
xor
in
ljmp
sbb
jno
jge
ret
fcmovb
mov
mov
jnp
cmp
dec
sbb
push
rorb
fs
ds
bound
ja
jmp
je
hlt
pop
cld
xchg
sbbb
std
add
mov
int3
scas
jbe
into
inc
mov
fld
push
mov
outsb
adc
out
aaa
cld
scas
fucomi
xchg
mov
add
sub
stos
pusha
out
std
aad
fcoml
sub
into
mov
enter
xlat
mov
cmp
cmp
mov
pushf
mov
stos
xchg
push
inc
pushf
mov
mov
leave
rcrl
mov
add
cmpsb
test
gs
scas
lds
sbb
stos
rclb
ja
cs
cmpsl
fisubrl
xchg
popl
or
dec
pop
inc
das
or
lods
int
jl
sub
jmp
sbb
outsl
icebp
cmc
fwait
bound
jp
xor
les
jp
in
stc
leave
sbb
notb
clc
mov
lods
cwtl
mov
fmuls
or
test
aad
aaa
pushf
cmp
dec
mov
xchg
cs
mov
aas
dec
pushl
mov
cld
cli
insb
or
jge
mov
mov
mov
repz
daa
pop
mov
dec
lock
and
das
lcall
fdivl
mov
dec
jns
sub
out
mov
fidivl
lock
jp
and
fmuls
div
cmpsb
pop
sbb
in
icebp
dec
sbb
inc
rol
adc
cld
push
and
and
add
xchg
jp
int3
pop
orl
out
lods
aaa
adc
jae
test
insl
ret
mov
in
cmc
rep
mov
fwait
shlb
xchg
adc
ljmp
push
pop
pop
out
mov
outsl
adc
adc
in
adc
jp
mov
cltd
xchg
xchg
adc
out
xchg
es
pop
jns
and
inc
test
loopne
mov
pop
and
sbb
in
jl
filds
pop
mov
cmp
or
sbb
push
jnp
mov
leave
add
lds
jb
jne
push
aas
add
movsl
loope
pop
out
xchg
push
std
in
or
sub
movsl
sarl
shlb
inc
push
outsb
cltd
fidivl
inc
lds
xchg
std
pop
push
adcb
push
mov
add
mov
test
dec
xchg
mov
enter
aaa
in
or
rorl
sahf
mov
aas
jae
outsl
or
movsl
sub
dec
movsl
push
push
loopne
lea
mov
stos
adc
jne
jb
mov
js
sahf
bound
scas
jbe
cmpsb
cltd
dec
jl
in
or
xchg
fstps
cmp
fs
stos
inc
mov
or
mov
mov
out
push
pop
hlt
ljmp
jne
or
aad
mov
into
sbb
fs
aam
or
sti
pop
rcrb
mov
not
ja
xchg
cld
cwtl
mov
fists
loope
enter
sbb
push
pop
mov
dec
mov
xor
jns
ret
inc
inc
push
push
cwtl
mov
andl
movsl
roll
xchg
or
stos
jmp
push
in
out
fs
add
sub
faddl
pop
add
icebp
int3
add
sahf
sbb
fadds
fstl
xchg
adc
cmp
outsb
pop
idivb
or
xchg
lahf
inc
xchg
js
test
hlt
xor
fbld
shlb
inc
sbb
mov
mov
in
es
xchg
fs
test
push
lock
loope
xor
ja
adc
add
add
adc
add
mov
lcall
add
xor
inc
or
int3
and
rcrl
mov
loopne
inc
out
push
jne
mov
add
sub
inc
and
adc
push
adc
mov
inc
scas
xor
mov
dec
dec
pop
cli
push
add
std
mov
incl
mov
data16
push
arpl
mov
ret
xor
test
lret
push
leave
xor
push
pop
in
ret
rcll
jae
push
mov
push
lods
inc
mov
das
mov
jae
cmp
popf
push
mov
xor
push
jae
mov
pop
xor
je
setno
mov
mov
pop
cmp
in
add
add
shrb
outsb
add
loopne
mov
and
dec
sub
mov
sbb
adcl
arpl
pop
faddl
add
lahf
jns
decb
jno
mov
xor
dec
sub
cltd
push
mov
rcrl
sbb
dec
sarb
pop
jb
sti
lahf
fsts
nop
pop
mov
xchg
lea
fisttpll
psllw
pop
mov
push
shlb
cmp
aam
and
dec
add
pop
fsts
loop
imul
mov
test
nop
ljmp
cmp
or
inc
xor
movsl
lahf
in
scas
into
and
cmpsl
add
shl
sti
jno
xchg
loopne
xlat
mov
fidivrl
fs
ss
int
mov
aas
sbb
xor
push
fstpl
add
or
imull
adc
mov
jp
out
xchg
aaa
loop
scas
xchg
pop
push
xchg
add
or
push
inc
and
push
lods
lock
cmp
test
mov
gs
movsb
test
stc
imul
mov
lret
mov
dec
gs
in
dec
cwtl
dec
cmpsb
sbb
mov
test
mov
sbb
rcl
lret
dec
negb
or
sbb
lock
cmpsb
or
mov
pop
mov
popa
sti
and
movsl
add
xor
adc
lahf
lret
mov
lahf
cwtl
orb
xor
mov
pop
cmpsl
add
cmpsl
and
lds
jle
loopne
leave
ret
cmp
je
mov
sub
shl
lods
adcl
rorb
pushf
sub
xor
call
adc
xchg
jle
push
mov
loop
fildl
aaa
dec
out
aas
xor
shrb
jne
mov
sti
jmp
arpl
jg
mov
jae
in
sub
into
xchg
cmp
popa
xchg
inc
sbb
lods
in
sbb
pop
loop
and
clc
jo
and
or
shlb
ja
wrmsr
xchg
popa
adc
jle
xchg
sub
sbbl
jge
mov
into
mov
inc
pop
xchg
dec
jbe
xor
and
and
cmp
jnp
fwait
pop
addr16
mov
dec
sub
lea
mov
dec
or
lret
cmp
pop
jg,pt
dec
pop
jmp
sbb
out
sbb
lret
rcr
gs
mov
fwait
insb
or
imul
mov
fdivrs
jbe
addr16
xor
icebp
xchg
test
and
jno
mov
jge
inc
lock
xchg
xor
sahf
negl
mov
xor
add
xchg
repnz
xchg
jnp
repnz
stc
push
sbb
xor
pop
mov
shlb
std
dec
sbb
mov
cmp
push
ljmp
in
xor
ret
xor
pop
repz
adc
adc
movsl
and
inc
ret
adcl
push
in
inc
int
fcomps
sahf
shll
adc
popf
loopne
pop
push
jmp
cmp
or
ja
cmp
fidivl
mov
lcall
pop
pop
aaa
push
jp
or
ja
cmp
fidivl
mov
lcall
add
daa
ljmp
ja
data16
ljmp
rep
xlat
mov
mov
or
ja
out
xchg
lret
sbb
add
or
inc
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
or
inc
cltd
jbe
mov
jne
push
xchg
xchg
mov
adc
sub
cmp
jns
jns
mov
inc
test
push
fnstenv
jmp
sbb
sub
pop
mov
cmpsb
jns
mov
outsb
test
pop
fldcw
jmp
int
lcall
add
lds
cmp
or
push
jae
ss
mov
in
jb
jb
sarb
xchg
test
mov
jbe
rcr
stc
push
popa
out
jae
sbb
out
jmp
sub
add
sub
fistpl
movsb
jle
test
pop
and
ds
or
sbb
mov
gs
popa
mov
add
mov
enter
loope
sbb
cmc
scas
out
out
mov
mov
mov
mov
mov
inc
ss
cmp
out
cmp
xchg
add
mov
inc
cmp
jmp
stos
xchg
jo
or
sbb
push
pop
xchg
or
cmpsb
xchg
test
sbb
ss
ficomps
out
sub
cmp
imul
clc
jb
imul
jns
add
loop
rcrl
ret
sbb
in
cmc
adc
fisubl
push
xlat
aam
imul
cmc
iret
or
sub
adc
shrw
fnstenv
jmp
sbb
sub
cmp
imul
mov
ss
sbb
sub
cmp
imul
jle
cmp
jbe
aad
or
pop
adc
test
push
dec
lds
inc
sbb
jae
mov
rcr
in
pop
ljmp
jmp
push
out
mov
test
int3
jnp
and
dec
add
enter
adc
insb
or
xlat
es
jnp
ret
sub
dec
minps
or
mov
and
mov
or
mov
xor
popl
cmp
jl
fildl
cwtl
add
inc
roll
add
movsb
mov
pop
cmc
fsubrl
mov
or
leave
dec
pop
jno
int3
pop
imulb
pushf
push
pop
cmpsl
jg
dec
mov
repnz
movsl
pop
shrb
imul
and
nop
jg
cld
push
lcall
outsl
out
mov
mov
int3
insl
push
ficoms
fs
sub
dec
cmp
and
pop
push
jge
mov
cs
xchg
sbb
stc
testl
xlat
adc
push
push
sub
jp
mov
mov
and
mov
jg
mov
and
cmp
in
xor
and
dec
sti
cmp
mov
sbb
subb
ja
jl
mov
lock
jge
call
shrl
inc
jo
aam
dec
scas
mov
inc
dec
inc
dec
inc
push
mov
push
popa
movsl
test
sbb
mov
ljmp
sbb
xchg
fimuls
in
mov
test
push
jmp
leave
nop
pop
xchg
in
cmp
repz
and
je
stc
jl
addr16
loopne
adc
es
sub
inc
mov
cwtl
nop
adc
push
mov
arpl
jae
cwtl
inc
inc
mov
ret
mov
inc
xchg
lock
mov
jl
adc
mov
sysenter
cmp
sub
xchg
inc
in
rorb
push
outsl
lcall
dec
dec
icebp
xchg
jl
rolb
loop
jmp
add
lock
popa
negb
sahf
ljmp
xor
push
xchg
loopne
push
push
jno
je
sbb
cmp
cmp
es
arpl
mov
lods
xlat
pop
push
adc
xchg
and
les
jg
cmpsl
push
add
pop
lds
pop
sub
shrb
adc
pop
je
clc
lods
cmpb
inc
add
rcrl
sbb
je
xor
stos
loop
lcall
xbegin
fisttps
sbb
outsl
lods
mov
xor
pop
out
dec
test
dec
dec
cld
xor
xchg
cmp
sbb
mov
sbbl
pop
rcrl
movsl
sub
mov
mov
enter
mov
push
inc
mov
push
stos
xchg
pop
inc
int3
mov
cmp
aas
lock
pop
lret
mov
or
mov
int3
jmp
test
add
mov
mov
out
cmp
add
mov
insb
pop
cmpsl
mov
pop
cli
adc
dec
mov
repnz
push
test
and
int
repnz
data16
pop
mov
addr16
lcall
gs
jg
into
jmp
test
or
lret
std
movsl
push
inc
or
lock
xchg
out
pop
add
mov
inc
sbb
xchg
add
and
clc
roll
xchg
sub
pushf
cmp
loopne
pushl
add
mov
popf
leave
mov
xchg
arpl
sbb
imul
fwait
fs
scas
call
enter
stos
mov
cmpsb
mov
fiaddl
inc
sbb
in
int
out
add
mov
or
shll
pop
clc
mov
dec
and
movsl
pop
movsl
pop
insl
aaa
pop
inc
add
test
inc
arpl
scas
xor
ficoml
loop
aad
push
dec
xor
sbb
pop
xlat
lahf
loopne
leave
dec
in
xchg
jno
js
add
mov
xor
push
jp
cltd
adc
cmpsb
cmp
dec
pop
push
mov
sbb
dec
or
lret
mov
sbb
stos
rol
inc
push
fstpt
lahf
jg
daa
jae,pt
push
jecxz
fldl
xor
bound
aam
fs
in
cmp
sbb
int3
dec
and
pop
sub
stos
js
je
jge
jmp
ret
cwtl
push
cmp
test
mov
dec
frstor
mov
sbb
shld
test
mov
stos
mov
push
mov
jge
faddp
sbb
mov
addb
pop
dec
adc
push
add
jb
daa
nop
pop
pop
cmp
or
pop
sub
inc
fwait
outsb
fcmovu
push
cmp
push
out
sbb
sbb
mov
sbb
into
dec
adc
jmp
out
push
shrl
gs
ja
mov
push
xlat
dec
or
sti
sti
inc
mov
or
push
jbe
cwtl
mov
lret
adc
lods
jae
push
cltd
sbb
adc
push
mov
lret
cs
fcmovb
outsb
push
push
mov
sarl
lea
sub
mov
inc
stc
sub
syscall
in
add
movsl
icebp
xchg
ljmp
nop
and
xchg
arpl
imul
icebp
inc
cmpsb
adc
sbb
adc
ficomps
fldcw
adc
add
out
jo
jae
adc
stc
mov
push
xchg
inc
mov
and
or
out
jle
lds
mov
adc
addps
jo
imul
jae
lahf
dec
cmp
fdivs
popa
xchg
sbb
push
pop
sbb
add
lds
stc
cmp
mov
cmc
cmpsl
loopne
push
in
pop
ret
cmp
aas
inc
jecxz
mov
dec
das
mov
cmp
hlt
incb
inc
mov
lds
jns
insb
mov
jns,pn
int
jmp
pop
sbb
mov
repz
push
mov
outsl
sar
adcl
int
cmpxchg
push
daa
leave
push
les
imul
mov
sbb
add
pusha
xor
push
ret
xlat
adc
add
mov
fcompl
dec
mov
jp
fdivs
insb
adc
jnp
and
sbb
pop
out
shlb
pop
push
mov
add
jmp
jge
sarl
and
sbb
call
jl
cld
and
mov
jne
inc
mov
rorb
pusha
cmp
mov
cli
mov
inc
cli
xor
pop
dec
call
mov
or
stos
lret
sub
icebp
mov
ja
push
mov
stos
dec
cmp
push
shl
xchg
inc
cs
jge
sbb
mov
insl
sbb
jl
push
mov
dec
das
lcall
addr16
mov
sbb
addr16
push
rcrl
dec
inc
dec
test
mov
dec
dec
mov
mov
push
inc
adc
jle
mov
pop
or
bound
pop
push
ljmp
sbb
sub
or
push
or
mov
decb
arpl
xchg
push
push
cltd
inc
fucomp
pop
lcall
rcrl
sbb
test
cld
and
lds
push
mov
push
cmp
inc
pop
jge
jnp
in
lods
adc
xor
fwait
lock
adc
lcall
lds
cmc
imul
ljmp
adc
je
and
aaa
push
iret
dec
xor
mov
int
jae
cmovp
shlb
hlt
fdivrs
popa
xor
in
pop
adc
out
pushf
push
sub
push
jns
scas
cmpsb
cvttps2pi
adc
aad
rclb
aaa
lock
push
adc
mov
les
xchg
adc
mov
mov
sbb
sub
ret
dec
lea
in
push
idivb
jp
sub
lret
scas
fimuls
dec
sbb
loopne
out
xor
andl
sub
add
pop
xchg
push
dec
cmpsb
leave
movsb
cld
push
shl
les
cmc
jg
pop
lea
jmp
push
xor
stos
jo
cmp
sub
js
inc
insb
mov
pop
icebp
pop
add
xor
int3
push
enter
setbe
popf
jecxz
inc
pop
push
ss
mov
mov
mov
inc
adc
out
inc
push
stos
jbe
sub
adc
or
mov
dec
inc
jg
mov
inc
jg
gs
inc
xchg
mov
ret
mov
mov
repz
shl
pop
mov
adcb
rorb
aam
stc
shll
jns
mov
scas
and
push
loope
lret
ljmp
jmp
imul
push
push
mov
sbb
mov
shld
cmp
jmp
lahf
inc
sbb
sub
mov
sub
sub
push
inc
cmp
ds
jge
push
mov
out
xchg
xor
and
into
mov
jle
inc
xor
dec
fs
push
pop
mov
sarb
daa
and
fnstcw
xchg
inc
repz
jecxz
pop
sub
inc
dec
xor
mov
sbb
icebp
test
push
mov
js
insb
push
cwtl
repnz
jmp
aaa
dec
sarl
insb
movsb
pop
outsb
jnp
fmul
mov
mov
adc
push
ss
call
aas
pop
cmpsl
iret
mov
dec
sub
mov
lock
movsb
pop
push
dec
cmp
dec
fs
or
mov
mov
int3
pop
aas
lcall
fcmovbe
inc
xchg
ret
fwait
push
popf
xlat
jmp
sub
inc
push
dec
mov
aad
mov
addr16
pinsrw
push
pop
lret
fsub
jnp
fidivrs
push
icebp
lret
add
inc
jecxz
add
es
sbb
popa
mov
mov
dec
jo
cmpsl
add
movsb
addr16
lret
les
aas
adc
sarb
int3
and
mov
std
mov
inc
mov
sbb
add
fs
mov
mov
mov
lods
fisubl
aam
leave
cli
xchg
push
inc
pop
shl
ret
aaa
stos
xor
mov
pop
addr16
out
roll
pop
dec
inc
aam
pop
insl
mov
loope
mov
fwait
das
xor
lock
cltd
loope
cli
arpl
das
shr
sub
and
loopne
fbstp
dec
sub
icebp
push
rcr
popa
push
mov
out
pop
add
insb
aaa
ljmp
mov
push
ds
frstor
pop
xchg
sub
inc
xchg
jb
inc
std
lret
jae
mov
lret
das
pop
test
out
jle
push
sbb
repz
sbb
std
popl
rcr
neg
mov
je
lret
adc
inc
cs
mov
jle
cmp
insb
xor
in
and
lock
ljmp
mov
mov
sub
pushf
aas
movsb
cmp
mov
jb
shll
fistpll
or
add
test
or
push
sub
cmp
adc
jmp
mov
add
aam
ljmp
mov
in
jb
inc
out
xchg
bound
iret
mov
xchg
insl
pop
sbb
popf
sbb
shrl
outsb
outsb
jl
pop
push
lods
into
cs
mov
xorl
fwait
test
mov
scas
int
imul
imulb
out
int
add
gs
adcb
in
sti
in
repz
dec
ss
or
adc
jb
or
shll
sahf
je
inc
out
stos
stos
jecxz
je
jno
pop
sbb
xchg
pop
push
mov
ja
loopne
add
hlt
inc
mov
icebp
inc
scas
mov
sbbl
scas
cwtl
pop
daa
je
test
jb
out
rcrl
je
push
fxch
out
imul
pop
mov
xchg
ja
mov
inc
push
stos
mov
pop
adcb
aaa
xchg
jne
mov
outsb
das
lret
js
nop
rcrl
stos
scas
movl
cs
pop
dec
call
orb
jp
sbb
repz
dec
pop
ljmp
mov
pop
xchg
xor
mov
mov
push
push
dec
ljmp
rolb
movsl
int
cmpsl
sbb
inc
or
or
inc
lret
xchg
std
mov
or
and
scas
imul
jg
scas
push
ja
in
inc
sti
jecxz
lds
arpl
jbe
lods
inc
mov
and
xchg
or
cmc
xchg
mov
mov
jne
cmp
repz
jb
dec
inc
hlt
daa
and
movsb
mov
stos
and
jg
or
fimull
add
outsb
jp
xchg
sbb
sbb
stos
sub
xchg
mov
sub
inc
punpcklwd
sub
pop
or
sub
pushf
aam
mov
add
xor
cmpsb
lock
mov
call
cmp
dec
sbb
push
mov
insl
jns
jl
mov
hlt
jae
paddq
scas
mov
sub
adc
lods
sub
aas
mov
into
adc
sarb
pop
loop
orb
adc
mov
cmp
push
cltd
outsl
sub
sbbb
push
cs
mov
dec
fistpl
insb
lret
lret
loopne
test
pop
mov
pop
or
subb
es
and
cmp
xchg
jecxz
das
ljmp
mov
divb
pop
mov
inc
stc
ljmp
lea
mull
sarl
push
lock
add
daa
int3
sub
add
aad
cli
addl
leave
cmp
mov
adc
sub
dec
xchg
loopne
fbstp
jle
sub
and
scas
mov
adc
clc
lock
jle
pushf
xor
aad
jmp
xchg
fisubl
mov
fwait
push
dec
jnp
ss
into
lods
and
sbb
sbb
mov
mov
fistpl
ret
pop
xor
in
or
mov
mov
pop
ds
mov
mov
pop
mov
mov
dec
xchg
insl
pop
icebp
les
cmp
mov
and
pushf
or
pop
scas
sahf
icebp
lea
xchg
das
or
adc
pop
ror
out
jne
lock
imul
push
cmp
xchg
sub
pop
dec
xchg
xchg
out
xorl
mov
add
lahf
jo
imul
add
mov
sbb
adc
nop
or
cs
cltd
jmp
inc
push
add
insb
ffree
push
xor
push
mov
adc
push
xchg
movsl
xor
and
jb
inc
inc
mov
and
arpl
inc
pop
aas
sub
jl
mov
les
shll
je
sub
mov
stos
sub
es
cmc
sbb
mov
sbb
aam
cli
pop
arpl
movsl
push
shlb
mov
or
push
and
in
jge
bts
in
lret
int
mov
and
shll
cmc
icebp
dec
add
sbb
out
add
inc
or
add
push
fcomi
sub
xorb
xchg
and
adc
pop
fs
mov
pop
loop
jns
and
sar
sbb
pop
cmpsb
popa
cltd
jg
mov
sbb
push
and
mov
aam
fidivs
adc
or
jno
ret
lods
add
cs
push
dec
shll
icebp
mov
sub
mov
sub
jmp
sub
gs
inc
loope
in
and
mov
lea
or
test
shrb
pusha
pop
shll
push
pop
xchg
jo
inc
outsb
sbb
fsincos
lea
imulb
push
subl
daa
cli
or
iret
ljmp
fistpl
inc
stc
mov
and
test
lret
int3
jae
xchg
mov
adc
lock
movl
leave
dec
scas
xor
mov
fiadds
and
xchg
fwait
mov
pop
mov
in
cs
adc
inc
cmp
fidivl
inc
pop
sub
mov
jmp
inc
mov
adc
or
or
mov
in
and
sahf
xchg
daa
fwait
mov
push
jl
fwait
shrl
dec
sbb
mov
out
lcall
xor
and
insb
mov
rclb
or
stc
stos
fcoms
jg
mov
int
sbb
cmp
pop
xor
xchg
cs
movsb
test
test
sarb
pop
push
add
mov
dec
pusha
fcmovbe
adc
rcrl
imull
in
add
fwait
fs
data16
repz
loopne
or
mov
sbb
fisubrs
jge
add
jne
xor
add
inc
mov
lods
xchg
xor
movsb
adc
aad
popa
cwtl
inc
lds
and
adc
xchg
fdivp
neg
iret
pop
dec
int
leave
mov
adc
xor
movsb
cmp
mov
test
mov
clc
mov
add
mov
call
imul
add
jns
add
aam
jo
repz
stos
repz
insl
in
mov
push
push
aam
inc
lods
lret
mov
inc
ja
sbb
sub
jecxz
xchg
js
sub
roll
cld
into
xlat
push
lds
cmp
pop
sub
mov
out
xchg
xchg
fsubr
pop
add
mov
dec
cmp
cmp
mov
mov
out
mov
inc
mov
mov
add
cmp
ret
fmul
or
and
or
pop
insb
add
inc
dec
vminpd
test
pop
mov
sbb
mov
add
outsl
dec
add
jge
in
cli
adc
mov
andb
inc
rcrl
shll
xchg
das
sub
add
adc
pop
xor
jo
push
int3
push
addr16
sub
mov
mov
jmp
subl
and
das
scas
sbb
inc
cmc
ja
stos
inc
nop
fiadds
int
mov
int3
add
xchg
push
cmpsb
or
cmp
mov
mov
add
cmc
add
stos
sub
jbe
add
test
insb
test
sub
add
int3
mov
and
mov
testl
inc
movsl
xchg
adc
jge
adc
pop
xor
fildll
in
and
movsl
aam
stos
xlat
mov
out
fdivrs
xchg
jno
scas
imul
jg
pop
ret
test
mov
fdivr
outsb
pop
iret
out
jnp
pop
aam
scas
dec
sarb
sub
int3
cmp
xlat
adc
xchg
sbb
loop
add
add
push
sub
call
mov
push
ficoms
mov
in
xchg
dec
jg
push
pop
xchg
sbb
xchg
sub
jb
fldt
inc
ds
adc
jle
jmp
adc
leave
jmp
aam
arpl
sti
push
jae
push
xchg
rcrl
xor
int3
cmp
popf
cs
pop
addb
mov
gs
push
inc
jl
je
jmp
xchg
adc
clc
jg
and
jp
xchg
mulb
pop
cs
shrl
fs
mov
ret
sbb
pop
pop
fnstsw
sarl
dec
xor
xchg
popf
sub
pop
push
dec
test
and
mov
movsb
clc
imul
sbb
test
sahf
iret
inc
cmp
popf
xchg
je
out
or
inc
call
mov
fwait
mov
mov
pop
inc
dec
xor
pop
mov
lods
pop
pop
iret
cli
sarb
loope
fs
fistl
cmp
push
hlt
mov
daa
imul
aam
sti
int3
adc
adc
fldcw
stos
sbb
or
addr16
pop
inc
dec
xchg
je
push
in
imul
rsqrtps
and
push
pop
ljmp
lahf
js
xchg
xchg
scas
loopne
xchg
cld
and
xchg
imulb
fmulp
faddl
daa
inc
push
and
sbb
inc
sub
pop
mov
roll
test
mov
cmp
cmp
jmp
mov
scas
adc
mov
push
mov
fwait
mov
adcb
pop
cltd
ds
cli
push
aaa
add
push
cmp
xor
ret
dec
icebp
push
xor
sti
jae
xchg
jl
jb
xor
imul
add
fstps
sti
xchg
mov
dec
add
mov
push
mov
jp
js
shr
sbb
aas
dec
mov
adc
push
mov
roll
mov
ljmp
andl
add
push
rclb
mov
iret
pop
hlt
mov
and
int
cld
rolb
and
adc
dec
adc
and
cmp
sahf
lcall
ss
mov
or
lds
lcall
flds
cmp
test
adc
test
cwtl
mov
mov
idivl
lcall
or
mov
jp
loope
cmp
sti
rolb
push
mov
xchg
adc
and
js
or
inc
loopne
and
pop
pop
ffree
jne
dec
inc
adc
xchg
stc
int
outsl
lds
cmpsl
push
inc
outsl
dec
mov
xor
mov
mov
sub
stc
adc
sub
test
sub
mov
bound
mov
jmp
inc
sbb
dec
or
mov
icebp
xchg
ret
sbb
dec
pop
jnp
dec
sbb
cli
xlat
pop
or
xchg
dec
or
adc
pop
cmpl
inc
sub
dec
es
inc
push
mov
jne
popf
jge
leave
lds
dec
pop
pop
fs
cld
movsb
inc
popf
cmpsb
test
or
xlat
jmp
mov
loop
jbe
ficoms
sub
test
cmp
aad
outsl
xchg
xchg
xchg
shlb
or
repnz
addb
cmp
fimull
jle
lods
pop
rorl
shlb
daa
sbb
pop
push
imul
add
sbb
pusha
pop
mov
in
push
mov
xor
xor
lret
aaa
cmp
ss
les
imul
loopne
notl
push
jb
mov
fwait
push
inc
shrb
cli
rcll
cmp
daa
enter
xchg
cltd
mov
leave
push
fnstenv
jmp
sbb
sub
cmp
imul
mov
ss
sbb
sub
cmp
imul
mov
ss
sbb
sub
cmp
imul
mov
mov
cmpsb
cmp
or
mov
sub
dec
loope
push
cmpsb
dec
xchg
pop
xchg
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
rolb
add
cld
add
add
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
lahf
add
add
add
jl
add
je
add
insb
add
add
add
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
add
add
add
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pop
add
add
add
mov
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
hlt
add
add
add
add
add
adc
add
sbb
add
and
add
aaa
add
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
add
add
push
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
add
faddl
add
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jg
add
insb
pop
add
fs
add
pop
pop
add
push
pop
add
dec
pop
add
inc
pop
add
cmp
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
pop
add
mov
pop
add
rolb
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cmp
add
pop
or
add
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
aam
add
fmull
add
in
add
in
or
add
or
add
or
add
add
pop
or
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
add
cmp
add
dec
or
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
