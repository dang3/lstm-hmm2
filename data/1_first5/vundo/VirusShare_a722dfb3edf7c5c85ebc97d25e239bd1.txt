mov
ljmp
addr16
data16
imulb
add
ret
jmp
out
push
addb
mov
dec
add
popf
or
dec
adcl
dec
push
stos
es
inc
mov
outsl
incl
mov
addl
aas
sub
xchg
fists
lret
mov
inc
dec
xor
push
add
mov
xchg
aaa
dec
add
sub
push
dec
imul
fnsaves
loope
je
stc
push
outsb
insb
dec
add
mov
outsb
clc
add
inc
sbb
in
jmp
cmp
out
dec
cmp
ret
sub
and
dec
jmp
pusha
mov
mov
clc
cmp
xor
adc
fidivrs
dec
add
and
out
xor
dec
push
push
inc
mov
sbb
jle
pop
andnps
push
and
gs
xor
xchg
dec
out
lods
mov
xlat
pop
addr16
psubusb
mov
dec
fsubr
push
dec
xchg
out
fistl
out
push
dec
pop
sbb
or
dec
ljmp
rclb
xchg
fadds
mov
jbe
mov
xor
mov
inc
dec
push
adc
nop
outsl
sbb
leave
add
mov
inc
xor
mov
pop
pushf
dec
inc
dec
jp
mov
push
insb
mov
mov
inc
pop
jo
add
inc
dec
push
mov
inc
cs
std
mov
ret
mov
dec
push
push
inc
mov
cs
ss
insl
jg
repnz
insl
push
fbstp
mov
insb
inc
mov
pop
push
call
outsl
fsubrl
jno
inc
dec
ret
mov
lahf
mov
ss
xor
push
push
shll
outsl
clc
ja
call
mov
mov
adc
fucomi
push
jb
dec
add
inc
outsb
xchg
cld
orl
inc
xor
or
sti
inc
add
dec
inc
pop
pop
call
ja
jle
out
inc
imul
je
mov
in
mov
sbb
inc
push
pop
jmp
ja
xchg
pop
push
mov
inc
and
fisubrs
dec
pop
mov
dec
dec
push
bound
push
insl
incl
movsb
and
or
lock
dec
push
xor
adc
insl
pop
lret
enter
addr16
cli
rorb
inc
ljmp
xchg
in
outsb
ja
mov
mov
push
std
add
sahf
lock
push
xor
insl
dec
and
inc
dec
pop
or
shll
push
add
movsb
sti
aas
mov
add
dec
call
test
add
orl
std
lcall
mov
cli
cmp
xor
cmp
add
cli
repnz
dec
xor
xor
xchg
movsb
arpl
jae
adc
jle
mov
pop
fwait
lret
inc
jbe
xchg
jmp
sbb
push
add
inc
adc
cwtl
dec
push
rclb
jge
insl
out
add
test
dec
or
sub
mov
jb
push
cld
mov
push
or
dec
fs
pop
fwait
decl
add
push
push
sarl
mov
pop
inc
dec
cmpps
mov
inc
xlat
add
andl
pop
das
pop
push
mov
push
dec
pop
jmp
jns
pop
ss
inc
xor
clc
jns
call
out
out
pusha
test
mov
mov
fiadds
add
dec
or
and
jo
clc
out
dec
add
addr16
dec
push
bound
sarb
loope
and
push
sub
addb
lret
mov
jne
addr16
sarl
sbb
mov
xor
in
jg
clc
jbe
sub
dec
jno
jp
push
out
outsb
outsl
popl
repz
mov
enter
shll
xor
or
dec
js
out
mov
flds
loopne
mov
adc
and
dec
fistpll
mov
push
jns
dec
je
xor
or
push
mov
jno
aaa
nop
and
jnp
xor
lock
movl
dec
sysexit
or
xchg
test
add
and
push
or
cmp
popa
dec
cld
cmp
jne
nop
sbb
mov
jb
addr16
push
sbb
xor
add
stc
fldln2
rolb
dec
test
fs
popa
leave
ret
cmc
mov
pop
ret
inc
mov
cmp
pusha
jns
jne
inc
pop
mov
inc
jmp
in
test
inc
lock
sbb
cmpsb
test
dec
xor
push
shll
push
mov
lea
dec
popa
pop
fdivs
inc
add
sbb
dec
fneni(8087
pop
push
icebp
mov
nop
dec
jnp
test
inc
mov
fadds
fld
mov
cwtl
orl
xchg
xor
cmpsb
not
dec
sbb
sbb
mull
cmc
jbe
arpl
xchg
adc
inc
imul
lcall
dec
mov
in
mov
jmp
fnsave
push
jp
push
imulb
fsubrl
roll
add
add
push
jne
ret
aas
inc
pop
cltd
int3
sbb
add
push
push
mov
ret
push
mov
xor
sbb
xor
stos
dec
or
test
mov
out
loope
inc
lock
into
jne
inc
xlat
popa
jmp
xor
fldt
add
cld
pop
add
jbe
push
or
lods
add
dec
das
pop
jno
dec
decl
fs
cmp
jne
push
inc
xor
lea
pop
inc
insb
arpl
jmp
jp
sub
dec
pop
push
enter
and
inc
xor
lock
pop
outsl
xor
mov
dec
inc
mov
nop
xor
add
mov
dec
mov
cld
adc
push
aad
jb
dec
add
pop
js
rolw
out
xor
jbe
dec
andl
test
mov
dec
aaa
xor
inc
rcrb
cli
jae
push
and
push
call
sub
dec
push
test
pop
mov
add
cmp
je
mov
inc
mov
xchg
movsl
push
ss
test
adc
pop
imul
dec
dec
lretw
mov
or
js
loop
push
inc
test
push
push
addr16
sbb
push
dec
xor
fs
jbe
arpl
add
ja
add
fmull
mov
push
clc
insl
pop
popa
mov
fildl
popa
outsb
sub
inc
jo
jno
push
testl
lret
dec
xor
out
add
xchg
fimull
inc
dec
cmp
dec
nop
arpl
mov
insl
jno
xor
mov
fbstp
clc
jo
jge
dec
inc
fs
mov
imul
sbb
xchg
sbb
leave
add
or
inc
or
adc
fadds
jg
cmp
inc
add
mov
mov
ds
xor
in
pushl
inc
nop
jo
xor
inc
mov
inc
lock
push
sbb
inc
inc
add
mov
pushl
inc
xlat
and
and
cmp
or
inc
inc
inc
sbb
pand
inc
lods
inc
push
inc
add
add
loop
data16
mov
push
sarb
mov
add
inc
negb
mov
and
and
fs
stc
movl
stc
decl
add
push
out
inc
loop
loop
cld
and
and
pop
cld
in
inc
andl
inc
cmpsb
add
inc
inc
sub
push
and
cld
jo
inc
pop
cli
mov
ds
xor
enter
jnp
es
nop
sbb
xchg
inc
dec
in
sbb
jg
incl
out
inc
xchg
movsl
ljmp
xchg
pop
pop
xor
mov
sbb
outsb
inc
dec
xchg
jl
inc
fsubrl
dec
jbe
jb
ficoms
sbb
incl
or
sbb
adc
jne
sub
mov
mov
add
jge
outsb
out
sbbl
push
cltd
xor
pop
jg
rcrl
sbb
jle
fucomp
inc
jp
lea
fdivs
ja
jle
jg
mov
mov
inc
pop
jmp
inc
pop
add
test
push
cmp
cs
xchg
inc
inc
inc
adc
inc
inc
or
adc
and
notl
and
in
in
lcall
test
xor
inc
cmp
fs
jmp
outsl
inc
sbb
cs
mov
daa
xor
adc
fstl
dec
pop
imul
inc
or
ret
add
or
xor
xchg
xchg
push
pop
pop
sti
je
sub
mov
out
rep
jecxz
inc
xchg
pop
inc
das
rcll
nop
cld
out
inc
sti
adc
dec
inc
xchg
dec
lsl
inc
jae
inc
mov
rcr
push
fsubrs
les
test
mov
lock
in
cmp
xchg
leave
out
cmp
adc
decb
lcall
sub
out
loope
gs
adc
mov
jecxz
cs
push
inc
mov
inc
mov
lods
daa
adc
mov
inc
jnp
inc
loope
mov
mov
mov
sub
out
fdivrp
outsl
fcmovb
jno
inc
jno
lret
ljmp
movsl
dec
sub
inc
jbe
xor
add
mov
mov
dec
in
lods
add
ss
xor
add
cli
inc
mov
sbb
sub
in
xor
dec
jnp
mov
xchg
dec
pop
and
dec
popf
int
mov
pop
je
push
mov
adc
jnp
ret
inc
push
sub
out
jb
popf
mov
add
inc
repnz
out
dec
xchg
fcomip
fmulp
nop
push
testb
in
push
andb
std
pop
test
mov
jl
int3
inc
push
fnstsw
insb
aaa
sub
sbb
inc
adcb
shrb
xchg
bound
sbb
xor
icebp
adc
popf
lds
push
nop
inc
lret
cmpl
ljmp
xor
cmp
sbb
scas
or
cmpsb
test
icebp
xor
addr16
inc
xchg
inc
dec
test
xchg
pop
sbb
or
mov
mov
and
fs
outsb
adc
sti
and
cli
rolb
adcl
and
lea
xchg
sti
jb
insb
add
das
cld
insl
fnop
lods
icebp
hlt
mov
loopne
add
mov
lods
scas
xchg
dec
popa
test
pop
rcl
adc
mov
xor
jnp
pop
fmull
mov
daa
cmpb
rol
aaa
movsb
scas
outsl
aaa
daa
push
inc
das
mov
xchg
bound
fucomip
sub
sub
push
mov
mov
sbb
addr16
inc
loopne
jg
lea
call
push
cwtl
lock
jg
outsl
xor
and
or
mov
fadd
mov
loope
xor
cwtl
push
mov
and
popa
js
and
cs
jp
or
push
mov
lock
xchg
cmp
sub
sbb
fistpll
data16
pushf
flds
and
dec
ret
and
icebp
mov
dec
jmp
pop
mov
pushf
mov
lock
mov
cmp
out
inc
add
and
jnp
aam
or
dec
push
ss
sbb
pop
int3
and
cmp
mov
xchg
mov
lock
mov
jae
xor
mov
test
push
cli
out
decb
jmp
sub
test
jbe
cmc
push
adc
dec
pandn
call
insl
repz
cmc
cmp
mov
mov
mov
ret
lock
sub
addl
sub
outsl
mov
movsl
dec
mov
push
xchg
sbb
out
rolb
sbb
pop
sub
sbb
pop
push
pop
daa
out
inc
pop
jp
mov
sub
mov
addr16
inc
insb
pop
pop
lea
sbb
test
fs
mov
sbb
lods
xchg
je
and
dec
testl
call
jbe
cld
fistpl
les
add
pusha
nop
daa
add
test
add
addr16
das
mov
push
fsubrs
dec
add
sub
push
xchg
jb
or
stos
sbbl
pusha
or
sbb
test
or
aas
leave
cmp
je
jecxz
rcrb
test
adc
mov
sbb
inc
mov
in
outsl
xor
sbb
clc
pop
pop
sahf
add
dec
mov
mov
pop
inc
es
add
adc
sti
aaa
outsl
fstp
add
xor
lods
dec
dec
movsl
jl
out
ret
mov
sarb
push
fsts
lea
or
cld
mov
icebp
pop
adc
shll
inc
sbbb
push
mov
xchg
inc
rorb
inc
out
int3
adc
rorb
sbb
sbb
push
push
xor
fildl
or
or
dec
cli
dec
sbbl
add
dec
xor
mov
mov
mov
add
push
and
cmp
les
or
jbe
pop
push
sbb
leave
aas
fadds
or
bound
mov
shl
or
sbb
ss
lock
test
mov
lahf
lcall
mov
rorb
xor
adc
pop
lods
pop
mov
cmp
cmpsl
mov
lret
inc
test
jno
clc
cltd
roll
push
testl
pop
xor
sub
lret
and
push
sbb
or
xchg
push
and
or
dec
cltd
fdivr
loopne
fistl
pushf
das
icebp
stc
pop
int3
aam
inc
mov
ss
sub
loop
adc
mov
mov
cld
jo
fcomp
pop
fildl
cltd
jle
mov
outsl
ja
dec
orb
ljmp
inc
fsubrs
and
mov
jmp
in
mov
xchg
add
icebp
xchg
inc
add
adc
stos
lcall
push
shlb
jg
or
lds
mov
daa
pushf
adc
ja
and
sbb
adc
pop
sbb
int
pusha
pop
dec
test
dec
aaa
add
lahf
pop
fadd
add
mov
repnz
mov
mov
cld
aaa
jb
iret
or
add
ja
lahf
adc
push
insb
or
mov
adc
andl
and
ret
scas
adcb
or
das
cwtl
mov
mov
mov
cmpsl
jg
pop
js
jno
fnstenv
int3
rorl
aam
dec
add
xchg
sti
in
mov
fneni(8087
jmp
mov
iret
inc
loop
pop
or
xchg
adc
cltd
aas
cmp
ret
shll
ljmp
cmp
xchg
lahf
push
and
outsb
xlat
cmc
scas
mov
push
clc
sbb
mov
loopne
jle
dec
outsl
or
push
ret
adc
insb
pop
pop
imul
stos
fbstp
inc
les
insl
jns
adc
mov
lret
sbb
in
sub
xor
jle
sbb
loop
sub
xorl
inc
cmp
jl
push
xor
mov
test
mov
iret
add
data16
dec
je
pop
bound
pop
dec
out
fdivrl
mov
aas
in
hlt
nop
shrb
fcmovnbe
in
stos
add
ret
aad
je
jp
jnp,pn
pop
pop
rorb
mov
pop
test
mov
add
iret
imul
or
mov
je
test
and
fdivrs
dec
call
mov
fcmovb
lea
int
mov
cmp
mov
sbb
sub
push
aas
mov
mov
jmp
push
dec
outsl
push
outsl
jmp
js
cwtl
jae
in
insl
push
imul
mov
add
sbb
les
jge
pop
mov
test
xchg
mov
lret
xchg
sub
divb
je
mov
or
roll
mov
aad
cltd
jg
dec
sarl
mov
sbb
popa
sti
lret
inc
xor
cmp
pop
std
or
leave
hlt
hlt
inc
je
cmp
aam
or
shl
xchg
loope
mov
ljmp
lods
hlt
call
lods
inc
inc
lods
and
or
into
sub
xrelease
xor
sarb
and
in
lcall
insl
les
and
bound
mov
cmp
je
fndisi(8087
mov
ljmp
lea
lahf
into
cld
mov
test
xchg
jne
and
pop
dec
stos
mov
dec
icebp
mov
jns
frstor
cmp
mov
fiaddl
or
mov
mov
icebp
push
push
sbbl
fwait
jmp
or
insb
inc
mov
mov
pop
dec
mov
inc
testl
add
icebp
pop
aaa
lret
enter
shl
mov
nop
push
rclb
cli
sub
fstl
cld
mov
jge
lahf
in
icebp
jle
les
add
sbb
test
ficomps
dec
in
xchg
xor
ds
xchg
loope
lock
insl
pop
sub
test
gs
loopne
je
insb
or
popf
mov
and
xor
ss
cmp
test
in
and
cmp
outsl
iret
and
mov
xchg
js
inc
lds
je
mulps
incl
xor
dec
loopne
cmp
test
adc
aaa
or
pop
adc
js
sub
decb
push
sub
or
or
add
stos
push
mov
out
movsl
add
and
mov
mov
xor
mul
push
dec
movsb
add
or
xchg
movsl
hlt
imul
das
add
test
out
add
pop
jl
cmc
mov
mov
popf
sahf
mov
inc
mov
mov
sarl
pushf
push
pop
out
dec
sbb
fadds
test
test
or
ret
sub
rorl
inc
mov
inc
fsubs
inc
nop
mov
test
mov
mov
pop
sbb
sbb
jns
mov
jo
jp
or
and
in
jl
cwtl
adc
fdivs
insb
or
sbb
lods
add
pop
add
adcb
aas
push
fsubrl
out
mov
and
cmp
out
mov
cmp
sub
dec
pop
lahf
mov
pop
adc
sub
mov
loope
loope
push
push
fnstcw
inc
je
mov
call
ja
insb
dec
fs
adc
fimull
push
aas
jmp
mov
int3
sub
jl
fsubr
mov
mov
push
inc
push
inc
movsb
clc
sub
jb
jns
lahf
mov
imul
lods
lds
push
dec
dec
mov
mov
xor
cmp
sbb
fiadds
test
dec
lods
lds
or
je
hlt
mov
push
push
pause
xor
pop
rcl
pusha
das
pushf
jmp
pop
inc
roll
imul
les
idivb
pop
faddp
idivl
std
lahf
loope
idivb
add
lea
rcr
es
mov
dec
inc
lcall
cmp
cli
enter
mov
decb
jle
fadds
xchg
pop
xchg
mov
bound
mov
mov
sbb
es
xchg
mov
cmp
out
test
sbb
and
ss
loope
or
dec
sbb
fstpt
inc
addr16
fxch
js
mov
lcall
daa
push
sub
lods
cltd
cld
enter
ja
movsl
andl
push
mov
sbb
cwtl
push
movsb
jno
push
js
popf
pop
jmp
movsl
movl
loope
jl
inc
sub
call
xchg
lret
pop
je
xchg
jp
push
jmp
aas
loope
lss
dec
clc
adc
xor
or
or
and
sub
cmp
int3
xorl
sub
rorb
pop
rclb
outsl
fdivr
inc
sub
das
insb
idivl
int
adc
fbstp
mov
jge
fdivr
jecxz
mov
stos
push
test
jne
test
dec
fs
mov
mov
test
outsl
invlpg
aaa
lock
jnp
cmp
mov
mov
mov
fucomp
mov
andb
pop
and
xchg
das
repz
mov
daa
or
xchg
cmp
addr16
or
rorl
push
subl
add
data16
or
loop
mov
mov
pop
mov
add
js
test
stos
mov
mov
cmp
mov
lret
adc
ret
jle
sti
inc
aaa
lock
push
inc
mov
sub
dec
sbb
xchg
push
sub
add
insb
cmp
mov
mov
popa
cmpxchg
cmp
sub
clc
aam
jp
leave
sbb
add
xor
das
mov
pop
jbe
ret
fisubrl
mov
je
test
inc
push
imul
add
push
mov
call
movsb
sbb
mov
lahf
mov
xlat
mov
fwait
rcr
enter
int3
movsl
mov
mov
outsb
stos
xchg
fdivp
jbe
mov
addr16
inc
mov
xchg
sbb
cmp
mov
lcall
mov
push
nop
out
mov
sbb
adcl
jae
push
sub
pop
repz
imulb
addb
mov
shrb
adc
dec
aas
data16
xor
shll
je
test
punpckhbw
mov
out
cmp
jl
gs
lcall
pop
mov
add
or
insb
scas
fisttpl
sbb
mov
je
mov
mov
imul
mov
mov
das
and
and
pop
jnp
mov
xchg
js
loope
lret
lret
push
inc
inc
pop
adc
xor
jmp
dec
test
leave
mov
adc
add
inc
or
lods
mov
push
lcall
jmp
fcompl
icebp
cld
ds
insb
insl
pusha
rol
sub
pop
sbb
add
shl
data16
pop
push
dec
adc
add
movsl
or
adc
jns
push
add
cmpb
mov
inc
mov
mov
xchg
mov
ss
jb
sti
sbb
push
addb
jbe,pn
imul
or
jmp
xlat
add
dec
mov
add
je
dec
adc
aas
dec
leave
mov
sub
ret
insl
roll
iret
in
push
sti
adc
das
aaa
ret
xlat
jecxz
lods
outsb
in
jmp
mov
sub
mov
jl
jae
lea
and
out
lods
mov
nop
or
repnz
xor
jle
mov
mov
adc
jle
pusha
hlt
inc
mov
es
xchg
jnp
or
fcoml
add
ret
and
mov
sbb
movsb
lea
mov
cmp
in
sub
xlat
cltd
outsl
push
and
cmpsb
and
mov
xlat
shrb
test
or
lods
fnstenv
mov
adc
sbb
mov
jo
push
mov
jno
fcomps
fnstenv
call
mov
pop
pop
mov
sub
jmp
sbb
jecxz
shlb
mov
jbe
cmp
jnp
aam
cmp
dec
loopne
sbb
arpl
xchg
and
and
mov
insl
test
sub
push
cld
lods
add
mov
xchg
xor
ret
dec
lcall
sti
in
scas
dec
push
sub
or
adc
push
fdivrl
sbb
inc
test
jp
inc
xlat
xchg
leave
sti
aad
push
aas
popa
aas
mov
cmpsb
out
jb
jns
bound
jle
loopne
pminsw
cmp
rcr
jl
pop
aas
andl
popf
out
imul
fmul
xchg
xchg
pop
into
mov
hlt
iret
xor
add
mov
scas
cmp
mov
fists
push
stos
fdiv
pop
lcall
test
andb
xchg
in
mov
xchg
lcall
sub
cld
jns
dec
movsb
cli
in
arpl
or
stc
loope
jne
jbe
dec
out
mov
mov
test
das
fwait
xor
outsl
sbb
jle
roll
or
stc
mov
test
adc
inc
mov
or
xor
fdivrs
orl
std
mov
mov
popf
fildl
sbb
dec
add
cli
in
rcrl
inc
out
je
pop
mov
xlat
mov
sbb
xlat
std
subb
push
dec
data16
testb
push
fisttpl
movsl
adc
jle
out
cmp
hlt
cmp
clc
jle
adc
lods
or
inc
je
xlat
cs
adcl
cmp
pop
inc
imul
dec
aas
push
pop
int
jmp
cmpsl
inc
xchg
pop
hlt
ds
lret
xchg
lret
push
das
xor
stc
insb
push
int3
dec
clc
sbb
adc
call
mov
mov
daa
fdivp
imulb
adc
lahf
cld
sarl
fst
mov
and
outsl
daa
cld
fdiv
fld
and
pop
xchg
hlt
jbe
aaa
shlb
push
test
sub
cli
xchg
jbe
dec
pushf
jne
cmp
stos
jge
inc
jg
cs
mov
xchg
rolb
lock
adc
shr
pop
int
xor
cmc
xor
xchg
jmp
into
cmpsl
push
popf
pop
and
pop
shll
and
pop
xor
xor
jbe
loopne
or
sbb
divb
ja
or
xchg
sarb
aaa
dec
cmp
mov
dec
outsl
adc
and
push
mov
mov
fwait
or
pusha
add
stos
ljmp
sbb
dec
jl
lds
shrl
and
in
sbb
sbb
rcrl
fxch
inc
mov
clc
outsb
push
adc
cltd
popf
cmp
mov
lock
pop
xchg
bound
sub
inc
jno
sbb
ret
xor
ret
and
sbb
adc
inc
mov
pop
xchg
filds
sub
repz
loopne
and
lds
int3
ret
adc
jmp
cmp
dec
sub
sbb
inc
ret
xorb
sub
shl
pop
cli
shrl
push
lret
andl
inc
mov
insl
roll
inc
mov
xchg
popa
dec
inc
sub
les
sub
or
dec
pop
xlat
std
add
jmp
scas
xchg
pusha
xorb
cmp
cltd
stos
mov
push
ds
xchg
xor
cmp
fiadds
rcr
shll
orb
into
lea
mov
xchg
pusha
cmp
rol
call
pop
in
inc
jge
inc
push
jmp
out
inc
mov
pushf
lods
sbb
sub
xchg
bound
ret
fdivrp
test
add
insl
xlat
xlat
cmp
in
lea
pushf
out
inc
call
je
cmp
adc
out
testb
fdivrl
sub
sarb
adc
dec
sub
lods
and
dec
adc
sbb
cmpsl
push
pop
push
mov
out
clc
shlb
pushf
add
fwait
mov
enter
call
andl
fwait
mov
inc
shl
int3
fsubr
jge
inc
cltd
xor
stos
insb
mov
fadds
insb
and
mul
arpl
dec
notl
push
push
ljmp
fs
dec
push
ds
mov
adc
push
pop
xor
mov
cld
jae
cmp
jae
test
outsb
xchg
xchg
movsb
xorb
mov
xchg
adc
mov
dec
out
sub
cmp
aam
fildl
push
and
adc
movb
dec
mov
mov
jge
pop
mov
fiadds
in
add
js
out
aas
imul
fisttpl
cmp
pop
pusha
cmp
push
addb
stos
mov
sarl
adc
adc
sbb
ret
mov
sbb
fbld
adc
sub
mov
dec
test
out
mov
pop
xor
jae
lock
and
rclb
movsbl
leave
xor
stos
inc
js
mov
ret
pop
cld
mov
sbb
dec
xchg
add
fldcw
mov
mov
hlt
testl
pop
cmpsb
stc
mov
shlb
lcall
and
adc
outsb
mov
adc
and
out
jg
je
and
in
idivb
ret
push
mov
xor
xchg
adc
xor
cmp
and
or
in
sbb
xor
loope
ds
and
or
push
ret
inc
push
adc
andl
cmpsb
lods
xor
in
js
xor
mov
mov
fildl
rcll
fidivrs
out
sub
xchg
push
lcall
inc
xor
mov
outsl
fadds
sbb
push
and
das
ljmp
pop
fidivrs
stos
mov
xchg
mov
mov
inc
sbb
jmp
adc
ffree
push
out
cwtl
lock
xchg
clc
sbb
sub
pop
and
xor
xor
fisttpll
pushf
cmp
mov
popa
xor
mov
inc
pop
cmp
or
mov
sbb
lock
in
xor
fiaddl
inc
inc
dec
pop
mov
pusha
mov
jg
stos
or
or
ss
sbb
aam
loopne
jle
xchg
pop
pop
fisubl
push
cmp
imul
test
or
push
shrl
ja
xor
test
jl
and
push
sbbl
pop
xor
cmp
fiadds
call
aas
push
ja
and
add
or
insl
sti
sbb
das
mov
or
or
push
xchg
fisttps
mov
xor
loopne
pop
jb
mov
lock
mov
rorb
pop
sahf
cmpsl
fcmovnbe
sbb
xchg
xchg
pop
out
xor
je
mov
ljmp
dec
imul
in
fs
rorl
mov
adc
insb
sbb
sbb
pop
inc
pusha
add
and
xchg
pop
and
mov
inc
hlt
jl
mov
push
mov
pop
add
stc
loope
shlb
les
adc
inc
dec
jl
inc
add
or
mov
data16
pop
inc
xchg
adc
jb
add
push
insl
scas
int3
int3
xchg
mov
test
inc
sbb
or
dec
xchg
fs
push
inc
ret
into
aad
imul
or
test
sub
cmpsb
int
loopne
call
pushf
lock
sub
push
jbe
jne
inc
ljmp
mov
cmp
or
xchg
xchg
xor
test
cli
movsl
inc
add
inc
xchg
ds
aaa
dec
movsb
rorb
adc
mov
loopne
cmp
insb
dec
bound
jmp
add
adc
xor
in
aad
mov
ret
loopne
mov
jne
mov
xchg
fstpt
cld
push
jae
or
fisttps
je
hlt
or
test
inc
lret
push
pop
push
mov
adc
fldl
repz
stos
fwait
aas
cmpps
xchg
insl
std
or
mov
pushf
mov
addb
es
mov
adc
addr16
loopne
cli
icebp
test
daa
xor
dec
idivl
fcomps
and
in
scas
lds
mov
inc
popa
loopne
sub
or
sub
cmp
push
popw
jl
into
out
mov
xchg
dec
jo
fs
mov
popa
jecxz
fsubs
fcomip
pop
sbb
xchg
add
fisubl
scas
pop
out
sahf
inc
aas
or
aas
icebp
mov
movsb
lret
sbb
and
lods
dec
repz
out
mov
dec
sbb
mov
mov
int
je
inc
dec
push
sbb
inc
adc
mov
out
or
cmpsl
pop
iret
aaa
leave
cmc
adc
clc
mov
adcb
fstpt
stos
mov
test
clc
add
ss
and
cmp
in
mov
add
call
mov
mov
cmp
mov
mov
dec
inc
jp
lds
mov
sbb
sub
aas
xchg
mov
mov
insl
mov
and
data16
add
lret
jg
adc
jns
mov
sbbl
mov
add
sub
push
dec
cmp
pop
xchg
dec
repz
sub
fisttps
fs
push
insb
pop
jo
into
mov
dec
pop
dec
pop
lret
xchg
add
gs
jle
add
xor
push
ds
jmp
ljmp
cmp
shrb
leave
lea
jge
sub
or
xor
or
in
mov
rol
test
fwait
fs
cmp
daa
das
inc
cmp
gs
std
ret
sbb
jmp
clc
sub
mov
and
scas
mov
adc
sahf
mov
clc
call
call
popa
scas
cs
call
les
cltd
js
sbb
fimuls
out
or
pop
bound
mov
faddp
cmp
loopne
sbb
sub
mov
cmp
inc
cli
or
sub
sub
lock
pop
jb
jne
or
lret
iret
lret
cmp
icebp
lcall
lret
xor
and
stc
cwtl
ss
ljmp
clc
imul
andl
loop
es
add
popa
jmp
adc
dec
xchg
outsl
inc
push
cmpsl
int
imul
add
ss
das
lock
test
jmp
inc
rorb
leave
cmp
clc
and
xchg
arpl
push
xchg
jo
fcmovnu
movsb
mov
xchg
and
push
xchg
xor
pop
adc
jl
inc
lea
cmp
dec
sbb
dec
call
mov
fisttps
xchg
jle
incb
pop
dec
in
pop
adc
mov
lea
pop
mov
mov
dec
or
cmpxchg
jg
add
dec
lock
loopne
out
pop
fstps
aas
jno
jle
test
mov
cmp
stos
xor
xchg
pop
int
fmul
jbe
std
dec
ret
out
sub
in
sub
jbe
jne
xchg
loop
mov
adc
inc
testl
or
mov
or
js
adc
push
mov
fucomi
fs
xor
jmp
mov
cwtl
in
aas
xor
or
jo
mov
xor
int3
or
jmp
cmp
jp
arpl
data16
cwtl
mov
push
es
cmp
inc
xchg
sub
adc
ficomps
or
hlt
daa
push
mov
and
shll
jne
inc
adc
cmp
daa
hlt
popf
pop
aad
add
fwait
ret
adc
cmpsl
rorb
inc
jae
lock
jmp
dec
push
dec
ds
xor
mov
push
mov
push
test
test
mov
add
adc
lds
loopne
xchg
xor
jno
scas
jle
jmp
and
into
cld
sub
push
es
jne
std
add
pop
pushf
test
jo
rcrl
push
add
mov
jmp
xchg
hlt
adc
int3
test
sub
in
sbb
add
mov
add
xor
or
enter
fdivs
push
sbb
jmp
adc
xchg
and
jge
cmpsb
pop
add
or
mov
mov
sbb
cmp
lock
pop
aas
dec
addb
mov
aam
pushf
lea
jle
mov
xor
dec
pushl
hlt
xchg
outsb
add
pop
mov
jo
sub
das
mov
clc
incb
divl
cmpsb
addr16
shrl
pop
mov
jae
push
add
sbb
push
push
jno
pop
pop
pop
xchg
dec
xchg
sbb
out
loop
adc
cmp
fsubrs
mov
pop
adc
xchg
movsl
xlat
mov
jne
mov
mov
loop
pop
call
icebp
loop
mov
or
ja
movsl
xor
inc
mov
xchg
add
inc
sti
mov
rorl
cmp
adc
cmp
lcall
push
jnp
or
mov
fwait
jp
xor
push
adc
add
adc
mov
jno
mov
out
or
adcl
pop
dec
xchg
aad
jb
outsl
push
or
movsb
push
hlt
enter
gs
mov
lret
xlat
xchg
enter
jle
es
and
add
sti
dec
fdiv
rclb
pop
outsb
mov
xor
cmp
cmp
bnd
pop
fmuls
jge
sub
rcll
arpl
mov
bound
pop
jb
cmc
sub
aas
and
enter
add
mov
das
inc
sub
adc
cmpsl
jl
jae
add
das
shrl
mov
sbb
bound
jb
dec
mov
push
pop
or
push
pushf
push
je
push
imul
mov
lock
add
rorb
movsl
out
jl
fs
sbb
mov
loop
inc
mov
lds
rorb
ja
arpl
repnz
in
mov
adc
out
jl
sub
push
adc
dec
adc
je
jp
pop
sbb
mov
mov
icebp
and
pop
jg
hlt
push
xor
mov
insl
cmpsb
cmpsl
add
lods
outsl
ret
inc
inc
xchg
dec
or
mov
sbb
jl
imulb
fucom
lcall
data16
scas
leave
mov
pushw
mov
mov
addb
in
mov
lcall
lods
movsb
sti
and
mov
mov
frstor
mov
aam
shlb
xchg
mov
fnstcw
jp
pop
test
imul
mulb
xor
outsl
in
dec
and
jmp
fnsave
nop
adc
lea
outsb
outsb
add
movsb
je
xchg
add
pop
jno
adc
repnz
enter
add
jbe
out
loope
mov
add
pop
aam
add
loopne
cmp
jge
push
push
and
push
clc
dec
push
rorl
aam
pushf
push
js
mov
ret
sub
popa
adc
jmp
shl
arpl
dec
test
das
mov
es
outsb
or
ret
mov
inc
call
jne
ss
push
mov
or
or
test
loop
add
sub
and
mov
sub
pop
repz
pop
jge
and
ret
push
and
in
mov
stos
lahf
xlat
jecxz
into
shl
xchg
add
sbb
mov
loopne
aas
je
dec
cwtl
inc
lods
lahf
cmp
push
or
out
lods
in
sbb
mov
xor
arpl
sub
es
ret
lods
jbe
enter
cld
add
or
and
jo
sbb
adc
xchg
and
or
xchg
or
pop
ds
mov
and
mov
pop
push
and
mov
mov
loop
sbb
or
xor
adc
adc
push
aas
les
inc
or
and
outsl
sbb
popf
push
iret
jne
lods
and
jl
lret
out
iret
pop
add
in
pop
pop
in
js
add
test
fdivr
sub
out
in
pop
sbb
mov
mov
push
out
es
aam
push
hlt
pop
in
cmpsb
mov
mov
rorl
jecxz
dec
xchg
inc
pop
loop
les
cmpsb
je
dec
mov
je
adc
aaa
scas
xor
cmpsb
test
icebp
inc
jecxz
pop
cltd
mov
mov
add
enter
sbb
cmp
into
mov
je
or
outsl
pop
fdivr
sbbl
add
fldt
orb
lea
fstps
xor
and
in
adc
sub
add
into
dec
ror
outsb
add
jno
das
xchg
pushf
insb
mov
bound
and
roll
sub
js
pop
add
push
repnz
adc
push
sbb
push
xchg
or
inc
imul
testb
jl
jbe
ljmp
adc
push
mov
mov
xchg
jecxz
mov
adc
filds
mov
into
cwtl
jae
inc
pushf
mov
lahf
ret
test
sbb
and
lahf
cwtl
mov
xor
jle
xchg
mov
imul
sub
outsl
sar
adc
fiadds
inc
sbb
fstp
sbb
call
inc
jne
or
je
nop
cmpsl
jbe
xor
jne
into
addr16
outsl
mov
jno,pt
aaa
ss
push
pop
in
lods
inc
es
jbe
push
imul
insl
push
sbb
xlat
inc
and
jne
mov
adc
data16
ja
cmpsb
cmp
cmp
sub
scas
pop
sahf
es
shrl
cmp
pusha
sub
mov
fimull
jo
stc
cmp
ja
pop
sub
sbb
pop
insb
inc
call
subl
std
sbb
and
and
test
sti
jne
aaa
inc
sbb
mov
add
shlb
sub
int
inc
sahf
test
push
pop
andb
adc
mov
cli
jp
repz
mov
push
push
jle
movsb
add
adc
scas
lock
sub
push
jns
ja
mov
pop
int
out
sbb
mov
outsb
ret
mov
sub
fdiv
test
das
add
call
rolb
ret
in
xchg
pop
push
clc
xchg
and
lds
pop
jno
push
shrl
imul
not
xchg
sub
jge
sbb
adc
rcrl
into
inc
test
pop
pop
mov
scas
push
repz
fnstenv
jbe
test
lret
and
xchg
lret
xchg
pop
data16
aaa
je
cli
mov
ret
ret
add
jns
fsubrl
stos
pushf
jp,pt
movsl
sub
xor
jo
add
outsl
inc
jo
lds
mov
dec
das
mov
push
testb
adc
push
xchg
in
data16
shlb
xchg
lret
or
inc
in
add
xchg
sub
imul
mov
outsl
push
sbb
outsb
or
cmp
jno,pt
and
and
jg
leave
or
jmp
or
cmpsb
dec
mov
ret
paddsw
mov
lea
test
fidivs
in
ret
loope
negl
jp
xchg
push
mov
rorb
mov
or
fmulp
fdivrs
mov
xor
mov
mov
pop
ja
cmp
mov
jnp
aam
enter
lods
outsl
into
mov
pop
lock
cmpsl
pop
xor
addr16
cmp
mov
shll
mov
sbb
outsb
shll
inc
ljmp
sub
lds
xchg
pop
inc
int3
movl
adc
and
push
inc
mov
lcall
shlb
js
jg
iret
rcll
loope
jle
jne
leave
xor
pop
mov
add
push
fwait
add
test
add
push
lods
inc
popa
movsb
xchg
in
or
add
aad
mov
movsl
insl
jmp
aam
lahf
mov
shll
mov
pop
add
insl
mov
popa
sub
ss
pushf
dec
cmp
jp
cwtl
call
pop
lcall
call
mov
notl
pop
in
and
dec
lds
jecxz
xchg
or
lahf
sti
lods
push
cwtl
fwait
shrl
inc
inc
inc
popf
int
sarl
xchg
pop
ret
jge
mov
enter
in
roll
mov
mov
add
add
icebp
add
xchg
mov
and
mov
pop
jb
rcrl
adc
clc
sub
rcrl
ret
je
or
test
loop
mov
rcl
inc
jmp
mov
xchg
xorl
aaa
or
mov
stc
and
xchg
lods
xor
jge
inc
xor
loope
rcrb
sahf
inc
fdivrl
and
rcl
push
cmp
sub
xchg
lock
fstpt
mov
lret
push
lods
sub
scas
ljmp
or
jne
cwtl
or
lcall
mov
cmp
es
popa
icebp
cmc
lea
push
ja
rolb
fdivs
push
xor
loopne
push
inc
sbb
push
pop
mov
inc
push
pop
enter
inc
sub
add
mov
pop
stos
out
mov
mov
mov
cmp
sub
std
rclb
jae
in
cltd
stos
xor
arpl
xor
xor
rclb
icebp
xchg
jns
xchg
dec
fcmovne
shrl
fidivs
pop
mov
test
sbb
sbb
mov
fdivrl
jl
add
inc
lahf
fimuls
xchg
mov
imul
add
adcb
movsb
jne
mov
hlt
jl
dec
sub
shlb
stos
or
shlb
in
push
call
cmp
fcoms
sbb
je
js
jg
aad
mov
cltd
lret
js
inc
cmp
das
movsb
inc
mov
jb
test
adc
sbb
jp
icebp
add
test
or
mov
sub
pop
cmc
or
dec
dec
push
pusha
and
mov
mov
xchg
or
cmp
rclb
js
out
fidivs
mov
jecxz
daa
rorb
ljmp
fstpl
mov
add
pop
insl
mov
add
dec
pop
adc
or
cltd
fcmovnb
dec
fwait
popf
in
ljmp
adc
push
lret
fstpt
push
dec
inc
scas
loope
add
jmp
mov
push
ss
les
jp
mov
cmp
inc
lret
in
dec
and
adc
cmp
push
test
push
fs
shrl
test
and
js
add
jno
pushf
lock
pop
mov
cmp
push
pushf
or
insb
sbb
pop
fcomip
into
pushf
sbb
ret
xlat
cmp
jg
mov
inc
inc
jp
pop
push
jns
sbb
ljmp
mov
dec
out
out
mov
out
inc
mov
ss
jp
push
movsl
add
jge
je
add
and
das
test
or
xor
sub
jns
nop
in
xchg
add
scas
loop
nop
sbb
pop
in
adc
rcr
outsb
leave
adc
sbb
mov
fidivl
aad
je
sbb
daa
jmp
sbb
xor
jno
push
mov
cli
clc
test
xchg
fdivl
push
bound
dec
mov
push
leave
xor
out
cmc
sbb
lods
xchg
dec
xchg
out
out
pop
cltd
sbb
cwtl
out
lods
sub
push
jge
cmc
mov
xchg
and
sub
add
and
mov
pmaxsw
pop
push
hlt
xor
ja
push
sbb
mov
hlt
mov
push
imul
stc
mov
and
or
mov
add
cli
rcrl
push
adc
sbbl
outsl
loopne
mov
adc
and
insl
stos
sbb
push
mov
jp
jbe
pop
pop
push
pop
sub
je
mov
jmp
rcll
adcl
add
out
daa
cld
daa
push
hlt
mov
adc
lcall
lock
mov
mov
cmp
jne
into
pop
cmp
lret
loopne
ret
xchg
cmpsl
cmp
sub
jnp
pop
push
fstpt
addr16
sub
and
je
nop
rcl
orl
dec
insb
inc
ret
stc
push
inc
mov
mov
xchg
out
adc
jae
sbb
mov
mov
jo
sarb
cmp
cmpsl
arpl
bound
jg
xchg
mov
mov
xchg
jne
call
and
es
or
repz
xchg
add
loopne
aam
movsl
xchg
sbb
clc
adc
loopne
xchg
orb
arpl
lds
shrb
xchg
gs
push
cmc
push
in
scas
cmc
jns
xor
and
popa
jmp
sub
xchg
outsl
out
sahf
cli
push
jp
xor
jae,pt
out
mov
mov
or
fst
repz
add
xor
cmp
inc
or
mov
push
in
jg
cmp
pop
inc
hlt
mov
xchg
pop
insb
aam
movsb
mov
and
mov
inc
es
sbb
cmc
sbb
and
js
mov
mov
jo
or
push
jge
aaa
lock
inc
sub
or
outsl
xor
ret
cld
and
adc
mov
adc
inc
icebp
fildl
jne
and
and
xor
bound
inc
sbb
pop
shll
cmc
repnz
aam
es
jge
and
addr16
add
sbb
add
ret
stos
out
notb
test
jo
sar
add
rcrl
out
xchg
pop
pop
add
adc
xorl
fistl
test
js
jnp
pop
inc
lret
adc
dec
fs
call
xor
ds
ss
xchg
or
je
or
push
sbb
ret
movsl
lods
mov
ret
rorb
popa
cmp
cmp
shr
inc
cmp
imul
outsb
adc
mov
adc
add
aas
mov
push
stos
out
aam
sti
mov
fisttps
clc
orb
push
pop
add
xor
sbb
subl
jmp
mov
ds
inc
dec
push
push
imul
sahf
xor
jb
jbe
jo
push
out
sbb
xchg
adc
mov
xchg
pop
andb
inc
and
cli
adc
jle
ss
lock
ffreep
aam
push
mov
xlat
mov
dec
push
xor
xor
mov
dec
mov
mov
pop
sub
into
xor
lds
into
dec
lret
dec
xor
push
int
prefetch
cmp
dec
sub
xchg
movsb
mov
mov
mov
xchg
lds
push
and
les
adc
adcb
call
dec
popa
std
rcll
xor
mov
xor
enter
lcall
sbb
pushf
loope
mov
mov
adcl
pop
push
icebp
and
sahf
add
mov
or
or
cmpsl
inc
mov
cmpsb
pushf
adc
fcoms
lock
pop
dec
popf
stc
iret
and
jg
add
sbbl
insb
add
xchg
test
mov
cmp
pop
negb
popa
hlt
add
enter
inc
inc
mov
ret
xchg
xchg
mov
mov
mov
xchg
nop
add
mov
xchg
mov
sub
cmpsl
mov
or
sbb
pushf
and
fdivr
test
xchg
sub
inc
jb
incl
cli
hlt
inc
pop
jp
insb
and
and
push
jg
mov
outsb
int3
xchg
outsb
nop
xor
testb
int
jl
mov
and
adc
lret
hlt
pop
jo
xor
loopne
xor
or
pop
rorb
call
clc
jecxz
call
mov
pop
xchg
or
movsb
lret
call
push
clc
mov
or
fistpl
add
adc
pop
inc
movb
sub
sahf
pop
inc
mov
hlt
popf
cwtl
scas
xor
outsb
sbb
mov
pop
fdivrs
jnp
aas
je
pop
loopne
shr
cli
iret
or
jae
mov
or
lds
pop
and
mov
dec
dec
mov
sub
das
ds
add
adc
mov
mov
iret
push
sub
sbb
mov
cmp
jno
add
aas
xor
inc
and
mov
push
jp
pop
rolb
dec
inc
add
icebp
cmp
xchg
lahf
adc
test
or
xor
xor
call
xor
sbb
mov
or
mov
mov
fistps
inc
jp
stos
stc
pushf
jecxz
inc
dec
jecxz
jb
fcomp
int3
mov
or
or
or
repz
scas
adc
jns
adc
fwait
sub
scas
loopne
out
xor
inc
jno
outsl
mov
pop
xor
insl
sub
aad
pusha
mov
pop
jl
jmp
std
push
jle
js
in
inc
pop
sbbl
outsb
mov
sbb
dec
jecxz
push
leave
orl
insb
lock
and
or
mov
pop
lret
sti
ljmp
loopne
jl
stos
cmpsb
fcmovnbe
mov
and
xor
push
pop
or
je
adcb
pop
lret
stos
and
add
int3
jo
arpl
in
or
test
sbb
jmp
jbe
out
jg
lods
in
mov
adc
mov
sbb
push
dec
roll
add
and
pop
dec
or
pushl
sbb
rcr
lods
js
push
in
adc
push
cltd
mov
lcall
aad
arpl
cwtl
add
push
pop
adc
add
add
mov
shll
mov
pop
cmp
ret
inc
dec
pop
addr16
pop
into
js
outsb
leave
sahf
outsl
mov
cmp
or
jbe
sbb
test
inc
sarb
cwtl
and
add
push
fcmovbe
adc
lea
jo
gs
mov
jne
and
repnz
dec
push
or
cmc
hlt
and
xor
rorl
fmull
dec
shrb
mov
mull
cltd
or
mull
xor
enter
roll
sbb
xchg
arpl
and
dec
mov
lock
or
jecxz
push
fs
pusha
add
inc
lcall
xchg
dec
outsl
xchg
xor
out
xor
lds
sbb
mov
adc
div
pop
pop
mov
pop
aaa
and
pop
test
rcl
sbb
sub
orb
stos
stc
push
xchg
aaa
fs
dec
sbb
pop
ret
sub
push
fldt
hlt
movsb
lods
jne
push
fcompl
pusha
push
inc
iret
leave
ret
int
or
rol
inc
xchg
or
mov
iret
xor
push
pop
cld
sahf
and
insb
imul
je
movsb
xchg
fs
adc
adc
js
add
mov
jecxz
jb
cmp
pop
cmpsl
mov
cmp
adc
sbb
jae
dec
pusha
adc
pop
xchg
mov
add
stc
lds
pop
or
rclb
cwtl
aam
push
mov
adc
mov
cmp
fnsave
jnp
lock
lock
sbb
dec
sub
leave
pop
or
xor
sbb
or
pop
test
test
mov
fcomip
ljmp
lret
notb
or
jecxz
leave
scas
iret
jne
cwtl
imul
in
test
aas
mov
mov
xchg
call
je
add
fcomps
je
jl
pop
mov
mov
pop
into
ljmp
stos
or
shlb
or
mov
ret
ss
test
cmpsb
and
mov
in
mov
ja
int3
adc
pop
inc
mov
and
rcll
add
cmpl
int
dec
push
in
adc
pop
ret
shrb
ret
mov
add
icebp
push
sbbb
int
outsb
and
test
dec
mov
movsl
pshufw
xchg
jne
loop
insb
dec
add
or
inc
pop
xchg
mov
pop
imul
mov
insb
mov
adc
mov
and
sbb
nop
cmp
push
sbb
add
inc
and
xor
lret
jno
cs
in
pushf
xor
mov
ljmp
pop
inc
inc
cmp
cmpsb
aas
dec
bound
mov
dec
mov
popa
jbe
adc
popa
sub
out
sbb
push
andl
add
out
outsb
fdivl
sbb
fdivrl
cmp
incl
ljmp
and
test
inc
xchg
out
aad
clc
inc
arpl
enter
sbb
orb
xchg
rorb
std
ds
add
aas
icebp
fstpl
pusha
xor
das
add
xor
mov
inc
loopne
cmp
mov
outsb
xchg
cmpsb
in
add
andb
test
into
push
xor
movntq
mov
ja
adc
xchg
pusha
jo
mov
push
shrb
pop
pop
loope
das
adc
add
cmp
inc
ss
mov
subl
inc
mov
fidivl
mov
mov
push
push
xlat
pop
jle
push
xor
in
std
loope
enter
fwait
out
dec
lock
outsb
inc
pop
dec
or
mov
idivb
mov
sub
cmp
dec
xor
test
outsl
add
ss
andl
in
mov
add
fs
or
or
scas
mov
icebp
fldl
das
mov
cli
sub
clc
mov
std
addr16
je
and
mov
lcall
stos
test
subb
xchg
int
jbe
cs
fs
dec
mov
ljmp
cltd
cld
test
call
cld
cmpl
adc
xchg
movsb
cmp
rol
daa
test
ret
out
rolb
mov
js
jo,pt
cmpsl
dec
loop
ret
outsl
lret
gs
push
lods
dec
cmp
xchg
ljmp
je
push
jne
and
mov
aad
es
mov
mov
mov
addr16
sbb
cmp
loop
add
lea
lods
cmpsl
adc
jae
cs
pop
cs
push
loope
xor
sub
mov
sub
dec
ss
mov
dec
mov
nop
pop
loopne
rcrl
scas
xchg
sti
cmp
lcall
nop
jmp
xchg
adc
fs
push
or
adc
sub
cmp
cmp
lods
add
mov
push
pusha
sub
lock
sub
pinsrw
sub
gs
or
shlb
add
int3
add
stos
addl
adc
inc
out
push
aaa
or
sub
mov
je
mull
in
lahf
cld
push
mov
pop
xchg
sbb
or
cmp
mov
push
dec
insb
popf
mov
scas
mov
nop
callw
cs
hlt
mov
pop
mov
in
pusha
arpl
fldenv
sub
cmp
insl
push
jmp
sbb
gs
scas
out
or
inc
lahf
push
movsb
pop
sbb
inc
mov
loopne
mov
test
mov
add
mov
push
or
mov
pop
xchg
push
in
lods
dec
xor
es
pop
cmp
add
in
dec
mov
fcompl
arpl
and
push
xchg
test
jbe
ss
pop
test
lock
fwait
aas
notb
in
aad
jbe
in
mov
lcall
cmp
xchg
gs
aad
add
mov
rcrb
add
xchg
clc
loop,pn
mov
inc
lea
cmp
setg
jle
lock
dec
cmp
sbb
arpl
inc
cs
add
ss
movsl
mov
out
sub
cmp
jne
push
mov
mov
iret
lcall
sub
xchg
jo
lea
out
inc
pop
or
push
sbb
in
pop
call
lea
icebp
or
cmp
inc
push
inc
pushf
dec
rcrl
rorb
adc
dec
das
out
pop
push
push
mov
or
xor
mov
ljmp
clc
mov
jbe
test
adc
jo
out
stos
pop
mov
jge
les
push
cmp
and
xchg
push
imul
dec
subl
ret
sub
add
mov
imul
rolb
hlt
loop
mov
stos
pop
jne
jg
shlb
dec
pop
outsb
jecxz
push
mov
leave
hlt
inc
add
scas
enter
mov
shrd
je
sbb
fcmovne
rcll
dec
dec
cmp
push
insb
cmp
xor
pop
dec
and
lods
lret
mov
hlt
jnp
nop
sbbb
insl
or
js
cmp
jge
loop
jle,pt
mov
pop
ss
insb
std
cmp
jne
clc
pop
lock
std
dec
xor
mov
iret
or
jecxz
inc
dec
loop
sub
cmp
mov
sub
add
add
in
lahf
fsubrl
jo
cld
push
cmpsl
sbb
jmp
add
aad
std
add
sbb
aaa
pop
ret
movsl
std
mov
mov
xchg
jle
sbb
sub
addr16
loop
lea
imul
ljmp
jae
loopne
fs
or
sbb
sub
mov
adc
fnstenv
jne
sub
pushf
sbb
dec
imulb
mov
movsl
adc
fimull
nop
dec
shl
cmpb
bswap
push
outsb
push
xor
call
pop
dec
lods
je
dec
fcoms
or
add
and
mov
andb
sbbl
xlat
int3
adc
xchg
loope
aas
loop
out
imul
sbb
add
jbe
xchg
pop
cli
popf
xchg
popf
leave
cmp
fs
jne
jg
pop
push
lds
add
mov
arpl
mov
pop
fstpt
ret
nop
or
imul
bound
mov
inc
push
in
test
ja
push
test
fsubrl
jns
cmp
imul
insl
mov
ja
add
push
and
clc
shrl
mov
mov
xorb
pop
cmpsb
rep
in
fdivrl
sbb
cmp
push
lahf
push
outsb
jg
dec
push
cmp
std
add
sub
and
sub
popa
cs
xor
insl
fldlg2
adc
jge
or
cmc
or
jbe
fcmovbe
pop
shlb
or
js
cmc
sbb
inc
adc
adc
ret
movb
sahf
int3
mov
adc
cmp
fs
cmp
out
rorb
dec
repz
jmp
cmp
cld
xchg
pop
fs
push
inc
xchg
jl
mov
cmp
jmp
mov
xchg
sub
cmc
jb
arpl
jne
sub
lcall
cmp
jl
cmp
into
cli
mov
xchg
cmpb
cmp
push
mov
or
and
hlt
fstl
dec
movd
or
lcall
add
fcoml
sbb
and
daa
fwait
lea
fsubrs
inc
lcall
jb
adc
cwtl
outsb
insb
bound
sarb
adc
xchg
mov
jp
cmovb
mov
negb
ret
movsb
ljmp
ss
loopne
push
dec
push
push
stc
or
push
xor
fcmovu
popf
jmp
jne
mov
les
xchg
xchg
xchg
sarl
or
sbb
mov
scas
pop
adc
pop
out
pop
inc
push
mov
inc
jb
jb
and
xchg
push
das
or
ja
bound
dec
cmpsl
add
and
mov
xor
js
je
sahf
lldt
adc
ss
add
and
push
nop
std
push
mov
or
xchg
add
ss
add
outsb
cld
pop
das
mov
inc
xchg
adc
sub
mov
adc
xchg
je
or
add
movsl
and
sbbl
push
mov
add
xchg
shlb
adc
or
push
xlat
or
push
xchg
pop
add
sub
xchg
pop
mov
pop
std
push
add
mov
inc
or
inc
mov
push
mov
scas
xchg
xchg
pop
ljmp
pop
jo
dec
push
xor
and
subl
mov
test
jbe
lock
xor
call
shl
pop
pushf
add
lock
sub
in
sbb
sub
mov
jl
inc
fstl
inc
pmaxsw
mov
movsl
lahf
sti
pop
sbb
pop
push
adc
sub
je
mov
rcr
fmuls
aaa
dec
mov
cmp
je
and
sub
dec
jbe
sbb
lret
outsb
insl
imull
sub
and
pop
adc
jno
mov
sub
jmp
pop
mov
iret
aaa
vaddsubpd
adc
mov
mov
movsb
popa
mov
and
push
arpl
into
rcl
je
pop
fidivl
mov
push
bound
pop
sub
inc
mov
sbb
xchg
inc
shl
sub
addr16
push
dec
push
es
mov
xchg
push
dec
xor
jne
push
mov
and
cmp
add
or
sbb
dec
fcoml
jnp
push
fidivrl
jecxz
sbb
in
in
jns
xorb
inc
ffreep
mov
mov
xchg
xor
and
hlt
ja
stos
mov
pop
lea
xchg
outsb
ss
push
test
mov
or
mov
stos
ja
adc
std
or
jbe
aas
test
test
xchg
icebp
mov
push
sub
cli
das
jle
mov
repnz
pop
xchg
insl
addr16
test
dec
xchg
adc
ss
in
adc
cmp
enter
and
insb
aam
adc
jae
xchg
pop
aaa
ret
das
cmp
xchg
cli
outsl
pop
lahf
in
and
sahf
out
adc
lahf
gs
insb
jp
ljmp
mov
test
add
push
ret
rcl
jle
rorb
sbb
sub
js
mov
or
clc
ljmp
fldt
push
adc
popa
iret
xor
in
mov
add
incb
daa
mov
cli
jne
scas
add
rcrl
inc
xchg
mov
lret
test
aam
lods
ja
or
xchg
pop
xchg
add
cmp
jno
hlt
pusha
cmp
inc
je
sub
rsqrtps
inc
jo
aaa
vmwrite
mov
inc
cmpb
sbb
sub
adc
jo
enter
fcoms
xchg
ret
cld
movsb
pop
cwtl
pop
mov
pushf
mov
xchg
incb
push
cmp
mov
jne
ss
sub
pop
cmp
pop
repz
sbb
mov
dec
inc
vxorps
mov
aaa
mov
mov
xor
mov
or
xchg
mov
pop
inc
lods
incl
je
and
popf
pop
dec
mov
xlat
in
sub
pusha
sti
sub
shl
mov
movsl
jecxz
repnz
push
or
scas
xor
cmp
stc
jmp
cltd
add
lock
xor
xorl
daa
inc
out
cmp
lcall
loop
pop
in
adc
in
mov
mov
mov
dec
pop
daa
jle
and
mov
sti
dec
cmpsl
jecxz
ret
and
or
cwtl
rcll
push
xor
out
test
js
adc
mov
xlat
dec
cwtl
das
into
sarb
xlat
outsb
jmp
cli
sub
outsb
sub
lods
jl
cmp
xchg
and
aad
cmc
rolb
scas
cs
ljmp
mov
lcall
jp
mov
jl
mov
jge
stos
pop
loopne
mov
xor
pop
jne
mov
or
dec
cmp
dec
xchg
and
push
mov
xor
pop
push
xchg
jp
and
or
mov
jmp
push
daa
dec
sahf
push
pop
push
and
add
jle
xor
mov
std
sbb
jo
jl
call
pop
call
out
imul
lock
inc
ficompl
nop
jnp
pop
push
sti
cmp
sub
or
jnp
out
cmp
cmp
xchg
dec
fcoms
add
andl
push
ja
mov
adc
fsubl
xor
das
andl
call
jo
sbb
sti
sar
js
adc
cwtl
loop
mov
gs
cmpl
call
pop
popf
sub
pop
and
xor
int
mov
sbb
add
mov
aad
jbe
lahf
lea
xorl
push
push
push
xor
xchg
fistl
mov
push
fcmovu
mov
sbb
aas
aas
loop
fsubrs
adc
out
sti
inc
into
or
sbb
inc
jae
roll
push
jp
les
xchg
push
and
mov
test
scas
lods
mov
dec
add
and
mov
push
inc
push
repz
outsb
inc
add
cmp
mov
xchg
xor
inc
aas
jae
add
adc
dec
xchg
or
push
jp
outsl
dec
or
xor
cltd
jmp
fnstsw
es
out
pop
and
lea
xchg
adc
inc
in
outsb
push
push
xchg
movsb
or
xchg
shrb
sbb
cli
dec
jo
xchg
mov
loop
iret
das
outsb
or
lahf
push
cmp
movl
insb
cmp
dec
xchg
test
jnp
push
mov
cmp
push
fistpll
adc
fs
mov
cli
cmc
fbld
pusha
adc
xor
call
pop
and
mov
add
and
mov
mov
call
test
cmpsb
ret
loope
cmpsb
jmp
push
js
sbbb
mov
mov
stos
jno
into
jp
sbb
adc
inc
addr16
outsb
push
push
lcall
sti
or
into
in
clc
out
or
cmpsl
mov
ret
imul
mov
inc
xor
out
out
adc
in
je
pop
push
scas
dec
xor
mov
and
imulb
fdivl
xor
jle
mov
dec
ret
or
shlb
pop
fnstsw
mov
arpl
addr16
daa
or
dec
dec
mov
clc
cmp
fwait
adc
mov
mov
pop
lods
lods
pop
push
dec
sbb
mov
filds
pslld
mov
scas
inc
jecxz
repz
add
mov
pminub
lock
jg
xchg
sbb
add
cs
fadd
bound
push
jge
outsb
insb
xchg
sub
stc
jmp
sbb
test
out
je
cli
fdivs
sbb
gs
scas
cltd
jo
bound
jne
sub
add
in
loop
in
mov
push
sbb
loop
or
adc
aaa
sub
inc
cli
test
leave
es
pop
in
and
inc
lret
push
and
je
xchg
or
andb
aad
xchg
add
pop
insb
mov
cmp
into
lcall
adc
repnz
add
arpl
ds
pop
pop
cmp
mov
cmp
xchg
popf
adc
icebp
ja
insl
imul
mov
in
push
jbe
nop
add
jle
pop
insb
fnstcw
mov
outsb
dec
mov
or
cmp
dec
dec
loope
cmp
pop
mov
hlt
loopne
fdiv
push
dec
cmp
sub
inc
jmp
dec
xor
lea
cmp
push
pushf
mov
push
insl
daa
xlat
adc
lret
call
xchg
pop
cld
shll
mov
mov
dec
dec
iret
jge
add
dec
shll
cli
jp
push
pop
pushf
add
pop
hlt
adc
int
out
movsl
pop
add
pop
movsb
pop
or
daa
ret
data16
pushf
adc
aas
lods
loopne
dec
leave
lds
bound
cmp
or
inc
push
out
jae
jmp
pop
addl
dec
les
adc
push
or
fs
in
sbb
outsb
adc
dec
call
decl
push
notl
cmp
out
sub
adc
mov
fsubs
aaa
xchg
xor
mov
pop
jmp
inc
sub
adc
inc
mov
lcall
stc
cmovbe
in
stc
lcall
sbb
and
jp
stc
and
pop
mov
ljmp
inc
pop
fdivs
xchg
daa
mov
out
pop
js
js
jnp
xchg
or
sbb
push
add
add
mov
cmp
or
mov
inc
shl
mov
cmc
cmp
xchg
popf
aaa
xor
or
aaa
pusha
enter
mov
lods
lods
mov
cmpsl
mov
div
mov
into
and
repnz
mov
sbb
es
mov
xor
roll
aam
out
mov
ret
pop
cmp
loopne
ret
mov
adc
mov
pop
mov
inc
add
rcrl
jno
xchg
hlt
movsb
mov
mov
sahf
xchg
jg
jl
cmp
adc
ret
cld
or
jl
addb
fdivl
sbb
shlb
dec
test
cmp
lcall
and
insb
mov
shrb
jbe
or
push
adc
xor
mov
andl
add
outsb
xchg
adc
inc
push
pop
test
cmp
sbb
fldenv
mov
mov
shld
jmp
in
clc
mov
jne
fldl
adc
or
daa
inc
mov
adc
mov
mov
jo
fisubs
dec
popf
add
jmp
sub
jge
mov
popf
push
jecxz
and
aas
loope
fs
mov
sbbb
dec
fisubl
jne
lret
sbb
pop
xor
loopne
es
jne
das
cmp
inc
add
call
jo
shl
cmpsl
movl
insl
les
pop
neg
jl
jecxz
lcall
xchg
pop
xchg
sahf
lea
xchg
sub
mov
adc
clc
xchg
or
sub
jne
call
adc
inc
enter
mov
jp
in
lcall
mov
pop
jecxz
xor
daa
xchg
push
imul
mov
jg
in
jnp
xor
mov
mov
cltd
dec
mov
jp
pop
push
xorl
pop
mov
jl
loop
testb
mov
or
lock
lahf
add
and
and
xchg
test
cmp
lods
push
ret
sbb
xchg
fisttps
loopne
xlat
and
mov
popf
inc
leave
cld
pop
sub
pop
sub
adc
push
sub
into
frndint
add
mov
pop
pop
push
pop
mov
in
sub
nopl
aam
cmp
js
out
ljmp
dec
sbb
stc
rolb
cmp
mov
outsl
je
mov
lret
adc
jg
jne
js
mov
mov
push
aaa
mov
ja
xchg
mov
divl
int3
xchg
movsb
addl
pop
push
lret
jae
dec
lret
in
cmp
aas
imul
xlat
ds
sahf
push
fiadds
jns
dec
sbb
mov
xor
cmp
xchg
jg
and
adc
jmp
cli
mov
and
in
add
lcall
push
ljmp
sti
pop
js
daa
sbb
or
jmp
inc
loop
test
lods
mov
cwtl
ja
sti
movsb
int
push
inc
and
outsl
outsl
incl
cmp
xor
xchg
mov
sub
push
sbb
incl
pushf
mov
xchg
and
inc
sti
xlat
fiaddl
xor
add
gs
add
pop
lcall
imul
popf
pop
sbbb
cmpsl
cmp
push
jecxz
cmpsl
jns
cmpsl
mov
push
fwait
mov
mov
and
add
lock
xor
cwtl
or
mov
aad
inc
stc
dec
xor
push
fwait
lcall
incb
std
cmpsl
leave
mov
int
dec
pop
pop
add
pop
fcoms
int3
fadd
in
sub
lock
pushf
ret
mov
add
and
ret
cmpsb
xchg
mov
inc
rorb
ss
push
andl
xor
test
aas
add
stos
fiaddl
inc
lea
in
mov
es
nop
push
and
loopne
popl
or
or
stc
js
adc
sub
add
adc
stc
icebp
and
sub
enter
fstpl
inc
sbb
and
ret
add
cmpsl
inc
push
ret
aaa
shrb
in
int
lock
mov
inc
mov
jbe
cmpb
cmc
int3
bound
cld
cmpsl
iret
int
enter
mov
enter
mov
enter
pop
pop
push
mov
add
aam
shrb
fst
insb
sbb
mov
out
adcb
mov
jns
cwtl
mov
in
push
jns
xchg
mov
xchg
add
cmp
cmpsl
cmp
xchg
jecxz
imul
mov
push
jns
scas
pop
lods
test
push
cmp
stos
stos
push
movsl
in
popf
fcmovne
add
and
cmp
mov
pushf
xor
or
leave
testb
jge
mov
es
fldl
in
inc
or
ret
lds
xchg
movb
inc
sbb
icebp
into
add
pushl
mov
lea
cmp
fldcw
dec
or
loopne
in
mov
hlt
test
mov
cmp
out
cmp
stc
out
outsl
or
cmp
je
fnstsw
add
dec
mov
lds
mov
into
mov
mov
jne
mov
and
sub
nop
push
adc
add
or
sub
xor
mov
outsl
inc
icebp
inc
in
or
and
add
cmp
inc
or
sbb
jge
sbb
or
mov
fisubrs
jno
aam
enter
into
xchg
push
pusha
jae
leave
frstor
add
ljmp
fldenv
pop
cmp
icebp
mov
sbb
sbb
or
cmp
cmp
lea
nop
xchg
icebp
inc
xchg
aad
cmc
inc
and
out
fildl
or
lea
std
inc
inc
mov
cmp
js
cwtl
mov
cmpsl
lea
and
outsl
movsb
xor
cltd
dec
push
xor
jg
fprem
stc
cld
jne
movsb
mov
push
add
jo
testl
inc
sbb
test
pushf
popf
pop
and
popa
clc
popf
les
pop
mov
loop
and
cmpb
iret
lret
or
out
mov
mov
dec
and
or
and
xchg
mov
lret
sbb
pushf
fldl
fldpi
sbb
ror
mov
lahf
and
lds
mov
pushf
adc
clc
pop
xchg
dec
push
in
xchg
add
aaa
ss
cwtl
adc
cs
lea
cmp
ljmp
adc
hlt
mov
ret
std
fwait
mov
or
movsl
int
and
jge
or
fistps
inc
dec
std
jmp
adc
daa
cmp
and
sub
sbb
rorl
xor
lods
inc
icebp
add
dec
in
in
adc
mov
jnp
out
jg
scas
or
mov
or
inc
dec
adcl
cmpsl
shrb
sub
mov
pushl
cwtl
inc
and
xor
aaa
or
xor
pop
add
xchg
add
mov
mulb
mov
scas
out
fiadds
das
or
fimull
push
mov
cmp
rorl
dec
fadd
cmpsb
rcr
or
add
cmpsb
or
nop
pop
and
mov
inc
pusha
lds
iret
loope
lods
cmp
mov
loopne
ja
or
xor
inc
sbb
lret
sub
cmpsb
inc
push
or
and
adc
hlt
into
add
adc
adc
mov
adcl
and
mov
mov
sub
adc
adc
push
pusha
and
jne
push
push
mov
int
add
lds
mov
add
pop
mov
leave
fsubl
fbstp
out
xlat
lret
add
mov
stos
dec
sarl
dec
xor
rcrl
sub
mov
inc
in
cmpsl
leave
lds
xor
sbb
cli
xchg
sar
pop
xor
shl
or
jmp
fst
fldln2
es
inc
dec
inc
sti
idivb
mov
inc
adc
in
fwait
mov
or
or
lahf
std
add
inc
inc
pop
inc
or
push
clc
inc
div
fstpt
mov
aad
or
stos
pusha
lods
lods
mov
xchg
mov
into
dec
sub
xor
inc
mov
aad
jb
push
mov
xchg
and
sub
into
pusha
xchg
mov
into
aas
es
xor
testl
les
dec
jno
mov
dec
cmpsl
aas
xchg
push
sarl
mov
jmp
orb
into
xchg
leave
xor
es
xor
jae
or
lods
xor
mov
xchg
or
lods
xchg
pop
cli
movsl
call
mov
out
frstor
shll
xor
add
pushf
inc
and
cld
cmp
inc
pusha
sub
rolb
push
mov
sub
push
inc
xor
sub
data16
sub
aas
call
rol
pop
ficomps
fsubs
aaa
pop
test
dec
or
fwait
mov
ss
in
mov
jns
mov
xchg
inc
xor
shll
addr16
add
pop
mov
cmp
aas
inc
stc
mov
and
bound
xor
loopne
popf
pushf
in
loope
ja
pop
cmp
addl
leave
testl
nop
sub
cwtl
lods
cmp
leave
jecxz
dec
and
push
add
jle
clc
or
and
dec
mov
ss
test
xor
xor
xchg
inc
test
lds
loope
test
mov
shlb
enter
lret
add
fisttps
outsb
adc
xor
addr16
orb
add
enter
fildl
push
add
sbb
repnz
popa
sub
push
roll
popa
add
cmp
sbb
dec
ret
mov
and
add
push
nop
inc
leave
std
iret
pop
popl
shrb
or
and
and
rolb
int
or
int
xchg
scas
inc
dec
fistps
je
mov
add
int
mov
rclb
push
dec
add
inc
and
jnp
or
cmp
or
mov
xchg
xchg
jb
mov
pop
jmp
push
inc
fldt
mov
fisttps
insb
adc
adc
xor
loop
and
jne
das
cmp
mov
inc
icebp
aas
mov
int
mov
in
sub
pusha
sub
sbb
jge
inc
or
cmp
sbb
or
mov
xchg
xchg
and
push
insl
pop
in
sahf
idiv
add
out
jbe
inc
add
pop
push
lea
pop
jo
add
pop
mov
pop
dec
ljmp
push
adc
test
add
adc
inc
mov
jae
jmp
sbb
call
call
mov
test
inc
into
ljmp
pop
push
cmp
push
add
call
stos
and
inc
call
les
or
sar
pushl
inc
incb
add
leave
jmp
inc
mov
ds
nop
or
adc
decl
lods
xor
or
test
and
or
dec
sub
and
sub
sbb
inc
std
fs
adc
repz
xchg
test
adcl
inc
inc
movsb
leave
ja
scas
aad
or
mov
pop
inc
jne
inc
cmp
push
cmp
xchg
es
cld
mov
and
mov
pushf
lea
sub
insl
aaa
test
inc
loope
add
push
mov
mov
mov
cmp
jo
in
add
stc
jne
scas
sbb
mov
inc
inc
lret
ljmp
xor
lds
in
adc
mov
dec
incl
int3
xchg
or
mov
gs
nop
inc
pushl
inc
enter
bound
hlt
pop
icebp
in
inc
mov
and
mov
pop
cmp
and
mov
mov
lcall
hlt
adc
jge
push
push
sub
sti
add
and
test
test
shlb
inc
hlt
in
adc
stos
cs
dec
xor
adcl
out
cmp
add
das
inc
movsb
or
insl
push
lcall
out
xchg
push
and
or
inc
orl
fwait
lods
out
pop
clc
fmuls
inc
jne
outsl
jg
mov
cmp
dec
insb
into
and
jle
mov
std
pushl
add
or
bound
mov
and
nop
nop
push
mov
mov
xlat
add
ret
and
aam
mov
inc
call
jle
int
xchg
jge
adc
andb
fs
pop
and
inc
adc
pushl
scas
je
adc
inc
adc
sahf
add
addl
inc
mov
mov
loope
sub
lcall
cmp
lahf
push
fdivrp
fstpt
inc
xchg
arpl
pop
sub
or
sub
inc
unpcklps
aas
rorl
pop
mov
in
xchg
xchg
lods
sbb
aas
push
dec
dec
mov
es
inc
imul
clc
jne
mov
dec
mov
mov
fsubr
scas
dec
ljmp
xor
sub
lahf
jg
movsb
andb
sbb
mov
movsl
mov
xchg
inc
leave
dec
xor
or
mov
mov
lods
faddp
dec
jl
aam
or
ja
xchg
aaa
push
xchg
icebp
push
push
ds
outsl
lcall
aas
dec
inc
push
in
lret
mov
inc
push
cli
enter
dec
aad
cmpsb
xor
loop
push
cmpsb
mov
in
out
dec
mov
lods
stos
inc
fsubl
sti
addr16
adc
sub
or
stos
movsl
or
mov
and
adc
jae
adc
roll
ret
cmp
pop
mov
cmc
xor
out
call
mov
cmpsb
es
das
xchg
cltd
push
test
mov
pop
leave
fildll
clc
decl
push
ss
push
xor
xor
out
inc
pop
mov
adc
and
test
cmp
mov
mov
decl
nop
and
outsb
cmp
sub
ficoms
sar
jb
cmpsb
dec
xor
out
mov
add
sub
mov
jge
loop
sahf
lret
and
or
xor
xor
mov
mov
ja
cmpsb
mov
in
fcoml
add
pop
dec
test
movsb
and
push
outsl
fldt
jmp
shl
adc
cmc
jg
and
and
and
mov
adc
inc
and
call
mov
xor
xchg
ret
stc
mov
inc
cmp
add
test
sub
pushl
cwtl
pop
sti
and
mov
mov
jne
xor
call
call
inc
push
dec
sti
pop
aam
adc
daa
sub
pop
pop
jle
mov
adc
cmp
sbb
pop
dec
xchg
mov
xor
mov
inc
xor
sbb
xchg
jno
xor
and
jnp
and
ljmp
mov
imul
cmpsl
daa
mov
xchg
leave
mov
sbb
xor
in
popa
or
es
pushl
jle
pop
sub
or
xchg
pushf
adc
sub
or
push
loope
mov
pop
in
or
daa
rclb
loope
das
or
adc
sbb
mov
out
fidivrl
stos
pop
out
scas
jne
inc
lcall
push
enter
pop
xlat
push
pop
test
pop
imul
std
ljmp
xchg
inc
push
andl
shll
and
jbe
pop
pushf
fmull
push
int3
cmpsl
jns
outsb
xchg
pop
mov
jg
nop
mov
and
insb
call
xchg
push
sbb
xchg
xchg
sbb
fistps
incl
inc
adc
lods
mov
xor
shll
insb
cmpsl
lock
mov
out
jmp
dec
dec
mov
cmp
sbb
mov
cli
xor
inc
mov
pop
dec
sub
fistpll
in
leave
call
leave
stos
mov
rcrl
enter
mov
push
dec
das
out
adc
icebp
test
dec
xchg
add
ja
lret
ljmp
push
out
xchg
pushl
dec
sub
adc
adc
test
popf
ret
test
xor
add
popf
mov
call
std
jne
in
xor
xchg
cld
das
mov
mov
clc
sbb
inc
add
mov
mov
pop
adc
incl
aad
add
fdivr
and
adcl
jle
ljmp
add
test
cmp
cmp
adc
sub
adc
add
inc
icebp
repz
fsubl
fs
das
sub
shld
cli
incl
xlat
loopne
inc
inc
push
xchg
shlb
inc
clc
cli
or
outsl
in
inc
and
in
xor
push
and
call
inc
std
hlt
daa
and
mov
popa
xchg
repz
inc
mov
je
dec
xor
decb
imul
ss
jae
andl
fdivs
testb
outsb
add
jo
sbb
mov
inc
cmp
xchg
leave
dec
jns
or
je
cmp
mov
fucomi
adc
ret
pusha
orl
cld
frstor
inc
and
mov
fcoml
aam
dec
mov
push
xor
lods
jbe
popf
sahf
scas
ljmp
test
or
inc
push
cmp
stos
test
dec
or
push
adc
and
arpl
push
into
jp
insb
sbb
negl
fistpl
leave
pop
call
orb
xchg
popf
les
int3
cmp
push
xchg
js
sub
jnp
mov
mov
outsl
dec
sub
inc
sarb
jns
inc
or
jmp
cwtl
xor
push
inc
mov
xlat
imulb
loopne
jg
inc
cmp
mov
lret
pusha
mov
mov
adc
lcall
and
rclb
pop
pop
shrl
jbe
inc
xchg
xor
jmp
repz
or
and
or
ret
sahf
incl
filds
dec
xor
dec
outsb
adcl
cmp
popf
mov
pop
aam
out
inc
dec
cmp
add
cmp
decl
jp
popa
sahf
cmp
jmp
push
repnz
add
xor
mov
mov
shrb
filds
lods
mov
or
inc
jne
jne
sbb
das
cmp
pop
xor
cli
test
dec
repnz
lret
pusha
pop
xchg
clc
popa
shrl
loope
or
icebp
mov
and
lahf
inc
cmp
dec
push
insb
sbb
adc
in
rcrb
pop
xchg
jg
fsubp
sbb
cld
in
fcmovb
cmp
cmp
movsb
push
add
es
lcall
push
pop
jl
inc
sub
add
push
enter
push
jne
inc
sti
test
mov
insb
and
sub
pop
cmp
add
pop
fwait
mov
cmp
adc
sub
shl
stos
xor
pop
push
loope
dec
stos
xchg
or
loop
push
jmp
test
inc
int3
push
inc
nop
lock
xchg
roll
test
xchg
outsb
call
xor
lcall
outsb
fs
mov
fisubrl
xchg
pop
stos
push
fstl
popf
dec
pop
jg
dec
cmpsb
ja
dec
push
arpl
ds
lds
decl
repz
jecxz
jnp
add
addr16
mov
mov
push
in
lcall
dec
mov
jmp
cmp
sbb
mov
outsb
sub
cld
fcmovbe
pop
clc
into
out
adcl
shlb
pop
push
pop
push
and
pop
fcomps
push
cmp
bound
jmp
cmp
push
bound
icebp
lock
imul
lret
fldenv
cmp
std
test
sbb
cmp
and
push
dec
add
or
ljmp
mov
lahf
pusha
sub
out
fimuls
ror
das
std
out
enter
xor
cmp
cmp
leave
jb
movsl
adcb
rolb
fimull
mov
sti
jg
mov
mov
movsb
pop
or
lea
repz
test
shrb
popf
jb
pop
push
in
jge
repz
insl
sarl
and
cmp
push
pop
add
jle
movsb
mov
jno
sahf
rorb
sub
mov
stos
outsl
mov
mov
inc
xor
test
sub
inc
pop
and
lods
mov
push
pop
dec
mov
xor
gs
adc
ret
cwtl
adc
cli
cmp
mov
sub
mov
clc
call
adc
mov
and
xchg
in
in
es
xchg
outsb
add
call
sarl
loop
pop
nop
sub
lock
cmpsb
inc
push
movsl
mov
outsl
cld
push
mov
or
call
js
leave
jecxz
test
pop
stos
sbb
jmp
sbb
dec
jg
std
xor
orb
mov
popf
fdivrp
sbb
jmp
loope
or
mov
or
xchg
dec
push
xchg
mov
mov
fstl
push
shrb
cmp
test
mov
dec
call
mov
jg
or
mov
lcall
cmpsb
dec
pushf
nop
mov
add
push
jle
push
scas
xchg
outsl
popa
cmp
pop
mov
sbb
clc
call
icebp
dec
mov
adc
cs
stos
sbb
inc
adcl
fistl
adc
sub
in
mov
xor
xchg
sub
adc
movsb
sahf
mov
pop
inc
and
xchg
pop
jecxz
pop
fs
add
loop
mov
fcoms
movsb
test
jne
xchg
xor
mov
lahf
mov
mov
jbe
and
add
fsub
sub
das
mov
lret
out
sub
movsl
ss
and
inc
cmp
adc
jecxz
lods
fists
add
cmp
cmp
popf
mov
mov
add
sub
fsubrl
or
mov
shll
jo
or
int3
push
push
lds
pop
lea
out
mov
js
cmc
cmp
adc
mov
dec
xchg
pop
ss
and
cmp
mov
mov
jo
lea
fdivrs
xchg
lock
or
dec
and
and
cld
ret
xor
xor
or
inc
and
daa
mulb
xchg
sub
fmull
movsl
aaa
or
or
push
sub
stc
push
lcall
aad
sub
jne
jns
push
scas
fstpl
push
cld
test
mov
sbb
enter
and
daa
lock
fldt
push
inc
jo
pop
adc
lods
mov
jne
inc
mov
dec
addr16
decb
aam
scas
cmpb
mov
and
fbstp
scas
push
sbb
and
cmp
clc
dec
addr16
push
rorl
and
adc
push
jmp
lcall
int3
outsb
loopne
lea
adcb
cltd
and
stc
and
lock
or
fs
mov
add
pushf
push
pop
add
fnstcw
movsb
push
mov
test
mov
push
imul
pusha
es
mov
xor
mov
and
dec
fistpll
or
xchg
dec
shlb
inc
icebp
cmpsl
cmp
sub
or
dec
pop
adc
out
cltd
xor
lock
mov
dec
push
dec
mov
dec
mov
adc
or
mov
mov
decl
cmp
clc
outsl
loope
popf
mov
nop
cmp
das
add
in
insl
test
call
push
cld
shrb
pop
out
inc
sub
and
pop
out
cmpsb
xor
fldt
loop
out
xchg
imul
loop
cld
cwtl
test
inc
jo
or
rolb
fnstsw
sub
pop
and
jb
fldcw
xchg
pop
movsl
adc
rcll
mov
ret
add
push
shrb
enter
pop
clc
jmp
mov
push
push
pop
xor
dec
aas
adc
pop
filds
or
je
dec
or
movsl
fucomip
cs
push
fcoms
mov
inc
or
mov
lea
mov
lock
mov
inc
push
lock
lods
push
rcll
and
lcall
jnp
out
shrb
mov
movsb
in
jmp
add
cs
test
lods
cmp
add
daa
cmpl
movsl
pop
ljmp
aas
mov
dec
sub
clc
outsl
adc
add
cltd
cmp
std
in
xchg
mov
mov
pop
lock
in
push
enter
dec
jae
les
and
std
inc
sbb
or
pop
dec
out
xor
sbb
or
sub
mov
pushf
mov
sbb
aaa
jne
fmuls
add
ret
mov
aaa
xchg
loopne
sub
jle
mov
shlb
aam
inc
stos
std
loop
push
pop
lret
sbb
fcoms
fisubs
std
cmp
xchg
and
xor
cli
in
fstpl
pop
adc
lret
mov
sarb
jmp
mov
shlb
jne
dec
mov
push
dec
mov
jno
cmc
out
adc
sbb
jg
sbb
pop
cmp
and
clc
xor
sbb
mov
xchg
xchg
mov
dec
cwtl
mov
test
stc
cmp
xchg
jp
jnp
sbb
lea
ljmp
iret
dec
shlb
mov
inc
arpl
adc
inc
je
sbb
rcl
add
icebp
mov
mov
gs
stos
into
cmpsl
call
insb
addl
testb
xchg
int3
dec
enter
in
outsl
pusha
stos
std
xlat
mov
sub
sti
mov
mov
loopne
xor
mov
leave
cmp
pop
clc
in
testb
sub
sbb
outsb
pop
jo
lock
or
mov
ret
insb
pop
incb
mov
push
jnp
xor
roll
fisubrl
pop
jbe
shlb
imul
subl
rorb
xchg
daa
cld
int
pop
and
popf
push
dec
pop
push
mov
jle
mov
pop
adc
fstpt
ljmp
lods
cmp
push
mov
rclb
insb
xchg
jne
xchg
mov
sbb
mov
in
les
lret
mov
mov
addb
test
and
movsl
sbb
push
push
mov
ss
xchg
cli
lcall
or
adc
sub
or
jmp
mov
leave
add
pop
mov
jae
inc
cmp
xchg
rorb
loope
cmp
mov
out
or
in
adc
scas
ds
aas
pushf
add
orb
pushl
lcall
cs
adc
pop
clc
jmp
and
subl
pusha
add
mov
lock
call
fs
sub
mov
je
sub
jle
lods
andb
fidivs
aam
mov
xchg
sbb
outsl
sbb
jge
lea
cmc
mov
xor
fcmovnbe
mov
xor
mov
mov
mov
push
imul
or
test
adc
mov
out
ret
inc
insb
insl
dec
ljmp
and
mov
sub
mov
sub
mov
sub
add
mov
pop
insl
pop
loope
inc
mov
shrb
jmp
scas
decb
gs
jno
fidivs
ds
lea
pushf
cmpl
fildll
fbstp
outsl
mov
sub
push
dec
out
and
xchg
sub
xor
xor
xchg
sub
jbe
adc
jle
andb
or
inc
pop
test
je
cmp
dec
sub
xor
jg
rolb
mov
or
call
adc
mov
call
pop
push
jns
add
frstor
decl
push
ja
lahf
cmp
mov
push
or
dec
insb
sub
outsl
rcrb
add
sub
adc
jno
add
mov
and
cmp
jae
dec
lods
out
popa
or
in
xchg
es
fdivrs
shlb
dec
push
fmuls
mov
pop
or
jbe
roll
pop
add
gs
dec
push
imul
imul
xchg
jge
or
imull
inc
ljmp
arpl
mov
push
dec
or
jecxz
add
ds
rcll
in
fisttpll
inc
mov
aaa
clc
in
call
sub
les
sub
dec
cmp
roll
outsb
cwtl
add
adc
lret
or
fs
sbb
push
bound
out
clc
ds
adcl
cmpb
sbb
out
push
stos
cmp
outsl
std
cmpsb
push
push
add
sbb
stc
movsl
adc
and
mov
rorb
mov
test
jle
sbb
addr16
jp
inc
push
sbb
sub
aaa
divb
xchg
aad
dec
enter
xchg
ret
sbb
cmpsb
inc
not
rorb
daa
call
inc
or
nop
push
es
cmp
push
sub
push
roll
rolb
jecxz
inc
jmp
mov
push
xchg
mov
add
lds
cld
lret
and
fs
mov
out
push
dec
imul
sarl
stos
and
stos
inc
aad
mov
roll
les
jne
dec
mov
out
cmp
or
inc
adc
xchg
insl
aad
outsb
mov
or
sub
mov
cmp
cs
aaa
call
in
push
sub
adc
popa
cmp
sub
or
add
adc
in
lahf
ss
rdmsr
sub
sti
sub
and
stos
xchg
pushf
jmp
jmp
or
add
lods
jne
add
xor
add
sti
loopne
shrb
fisubrs
xor
mov
push
and
dec
xchg
mov
into
ja
inc
outsl
jg
adc
xor
mov
ret
xchg
cmp
pop
stos
je
lea
sbb
test
or
lock
or
or
pop
fdivl
add
push
dec
icebp
xlat
mov
hlt
call
cmp
and
dec
sub
inc
push
fwait
xchg
or
imul
or
or
mov
sti
mov
lret
mov
fsubl
sbbb
popa
mov
xchg
and
clc
das
outsl
adc
xchg
sub
mov
or
lods
idiv
pushl
cwtl
in
cmp
gs
rcrb
imul
xchg
push
mov
mov
outsb
movsl
add
call
pop
in
insl
jmp
pop
cmp
push
pop
dec
les
roll
push
jbe
leave
and
push
clc
dec
mov
mov
dec
filds
xchg
test
add
lahf
push
cld
dec
in
getsec
mov
mov
add
inc
sub
inc
inc
clc
aad
or
sbb
adcb
mov
mov
sub
dec
push
or
jmp
pop
dec
sbb
add
sub
jle
clc
fistpl
cli
push
jno
mov
daa
fsubrs
xchg
movsb
xchg
repz
adc
jl
jl
cmp
std
incl
mov
pop
loopne
fsubrp
push
and
xchg
jne
push
lcall
jno
movsb
xor
jo
js
jg
outsl
cld
xchg
pop
push
cmp
aaa
cmp
fcoms
in
das
lds
push
jmp
dec
xor
sub
jns
je
pop
and
cli
push
pop
stos
inc
shl
sar
pop
add
jb
cmpsb
adc
fisubl
mov
or
pop
test
inc
movsb
fcmovnu
fsub
div
bnd
pop
fstps
mov
ljmp
mov
xor
or
es
cmpl
outsl
pop
jne
aas
and
add
cmpsb
sti
fistpll
jbe
loope
and
mov
jmp
aaa
aaa
pop
or
sbb
push
sub
xor
mov
and
cmp
mov
push
pop
and
pop
lods
mov
insb
jnp
jo
test
mov
loop
pop
test
lret
fidivs
ret
cmp
push
mov
mov
movb
mov
fistl
cmc
pop
dec
pop
pop
and
insb
ljmp
mov
adc
jmp
sbb
add
notb
pop
push
and
mov
push
mov
clc
push
inc
punpcklwd
lock
sub
loop
or
jl
divb
mov
cmp
jb
lea
sub
incl
sub
fstpl
xor
push
add
aaa
lock
adcb
or
cmp
sub
rcrl
and
js
mov
or
pop
dec
scas
dec
cs
rolb
leave
insb
lods
ljmp
mov
test
pop
or
mov
ss
mov
std
fcmovnb
outsl
ds
fidivrs
dec
fistl
int
sbb
les
outsb
push
xchg
push
je
mov
inc
jae
mov
or
pop
pop
daa
and
cltd
sub
mov
test
jg
sub
sbbb
mov
mov
in
fbld
pop
sbb
xchg
sbb
jp
add
push
movsl
mov
jne
lods
into
push
adc
decl
pop
sub
dec
dec
scas
or
lock
dec
btc
cld
pop
or
loop
jg
add
inc
rep
ret
lret
inc
mov
jl
cmp
rorb
push
push
sub
cmpl
jo
in
cld
das
std
test
shl
xchg
or
pop
xor
je
rcll
clc
add
mov
jmp
add
jbe
jo
mov
mov
cmp
pop
imul
or
mov
ss
andl
pop
mov
enter
lahf
inc
testb
outsl
test
in
fsubrp
push
push
mov
pop
mov
ja
ds
add
adcb
mov
sar
dec
mov
sbb
xor
mov
das
test
loope
test
push
adc
mov
and
repz
add
lock
test
or
dec
mov
cltd
push
std
or
mov
inc
mov
ret
loope
mov
andb
cmpsb
lahf
push
icebp
call
xor
fsubl
ffreep
pop
loopne
xchg
leave
sahf
movl
in
ret
pop
or
repz
cmp
mov
gs
dec
inc
push
sub
lcall
mov
adc
ret
xchg
ljmp
in
daa
int
ret
out
lds
xorl
gs
popa
or
mov
jg
xchg
cli
in
outsl
jg
nop
fstl
push
dec
fmull
adc
call
outsb
jmp
fistl
xchg
xchg
adc
mov
mov
jo
mov
fsubl
fs
xchg
adc
fcomi
adc
sub
jmp
jne
call
adc
add
out
fcoms
dec
sub
imul
xchg
inc
mov
dec
or
cld
and
push
das
ret
dec
outsl
call
mov
out
and
loopne
cmovo
add
in
inc
xchg
xor
outsl
dec
stos
out
out
nop
jl
je
mov
cmp
jle
inc
or
push
adc
cmpsb
push
push
cld
lock
xchg
pop
sub
cwtl
loop
pop
dec
pop
mov
in
or
inc
pop
outsl
pop
clc
xor
mov
push
add
push
cld
sub
addr16
lahf
int3
push
les
mov
pop
pop
js
pop
inc
call
or
cmp
xor
mov
or
inc
xor
xor
lods
imulb
and
jge
dec
lock
or
mov
push
push
mov
pusha
fdivs
adc
lock
mov
nop
mov
fildl
ds
call
aad
cmp
cltd
pop
loopne
pushl
adc
and
mov
movntps
adc
add
add
pusha
push
sub
ret
jnp
test
andl
cs
test
sub
aam
push
jno
pop
adc
or
repnz
jg
sti
jg
int
sahf
das
pusha
sbb
je
daa
adc
test
std
push
push
inc
aam
push
negl
decb
and
push
pusha
outsb
in
mov
lahf
popa
fidivrl
outsb
cmp
jne
roll
movsb
std
lcall
outsl
dec
rcrl
push
or
jmp
fcoms
and
lea
add
jecxz
pop
in
pop
cs
ret
push
push
pop
jl
adc
mov
sbb
or
rol
inc
add
push
stos
outsl
pop
inc
adc
rolb
mov
shrl
mov
sahf
jae
inc
mov
cld
fucomip
xchg
iret
adc
in
adc
adc
out
sbb
cwtl
pop
xchg
bound
jle
dec
inc
loop
cmovno
mov
push
fldcw
cmp
imul
or
add
push
inc
or
add
inc
aaa
loop
cltd
dec
xchg
cmp
and
outsl
in
pop
lods
xchg
push
rcr
clc
inc
sbbb
inc
jo
outsl
push
push
dec
and
push
jnp
addr16
inc
jge
shl
lods
enter
data16
dec
or
loope
les
shr
lea
and
nop
fistpl
mov
lcall
or
dec
insl
jge
mov
pop
cs
jl
popa
inc
mov
cmpb
or
ffreep
add
push
fnstsw
repz
push
fidivrs
cld
pop
jbe
outsb
push
ja
pop
adc
push
xchg
lds
pop
fisubl
mov
jnp
std
mov
mov
dec
mov
cmp
sti
or
xorb
mov
dec
jg
xor
cmp
enter
insb
sbb
decl
int
add
push
cltd
and
test
xchg
pushl
orb
lds
xchg
in
repz
repnz
adc
jmp
dec
mov
fs
push
mov
jns
mov
repz
daa
push
je
pop
pop
jg
test
inc
outsb
aaa
mov
adc
fucomi
outsl
popl
shlb
mov
sub
jecxz
test
sub
and
fldenv
or
cs
mov
adc
aas
sub
aas
sbb
jae
sub
data16
pop
ds
mov
ret
adc
mov
cs
mov
pop
invd
mov
pop
pop
iret
ficoml
rol
cmp
mov
pusha
xorl
push
ja
les
mov
lock
lret
xchg
xlat
fdivs
push
test
mov
pop
xchg
clc
sbb
rorb
sbb
arpl
jne
aam
clc
jg
jg
shrb
pop
sbb
aas
pop
and
push
outsl
popa
jp
movsl
stos
out
ret
js
jg
mov
cltd
cmp
jne
push
movsl
and
pop
loopne
add
fstpl
pop
xchg
das
call
pop
mov
std
fcmovnu
mov
inc
nop
cmp
mov
ja
adc
mov
std
and
or
or
rcll
rcrl
mulb
outsl
icebp
pop
stc
jl
and
mov
sub
les
lea
push
cmp
ds
pop
mov
mov
mov
rorl
sub
mov
xorl
adc
loop
push
push
xchg
xchg
inc
xlat
dec
jno
arpl
outsb
mov
push
adc
mov
pop
or
mov
incl
jl
fcompl
xchg
and
mov
outsl
dec
mov
pushf
shll
ljmp
adc
push
cmpsl
ret
hlt
inc
xchg
inc
hlt
jg
call
test
outsl
jns
inc
cmp
add
pushf
mov
outsl
push
mov
push
fisubrs
add
adc
fisubrl
mov
dec
or
xor
add
inc
adc
inc
push
xchg
repnz
cmp
pop
icebp
dec
or
fmuls
loop
jmp
cmp
stc
lock
popf
push
je
testb
fiadds
sbb
mov
and
jle
addl
mov
ja
andb
out
loopne
fiadds
push
jo
xor
jns
add
mov
and
mov
int
in
mov
cmpsl
decl
sbb
rcll
mov
sti
imul
mov
cmpsl
adc
sub
lcall
push
repz
dec
clc
mov
mov
ret
enter
fdivr
jno
out
pusha
popa
inc
mov
cmpsl
jnp
pop
add
jbe
cmp
add
rcll
jmp
mov
add
arpl
cmp
test
es
push
out
scas
inc
inc
sahf
pop
in
inc
or
cmp
loopne
jl
rcll
loope
pushf
inc
sbb
and
push
push
sub
les
inc
mov
es
aas
shl
adc
test
push
pop
adcb
add
sbb
adc
add
outsl
mov
cmp
or
inc
lea
mov
fiaddl
sub
lods
fmuls
cmp
lcall
out
das
sub
faddl
xchg
push
push
insl
cmp
cmp
pop
xor
lock
jns
scas
mov
mov
dec
pop
inc
sbb
xor
idiv
rorb
fs
cld
inc
jmp
add
out
sub
push
sbb
iret
lock
imul
sahf
sbb
adc
adc
mov
test
sbb
hlt
cmc
pop
les
hlt
aad
jg
lret
cld
test
sbb
adc
fcoms
cmp
lret
add
je
pop
mov
sbb
stos
andb
insb
enter
inc
insl
std
outsl
or
add
ficoms
ficoms
inc
or
xor
cmp
cld
mov
pop
shl
mov
cli
adc
mov
divl
aas
jl
sub
ret
jg
mov
aaa
xchg
xchg
stc
cmp
sti
aaa
loop
not
and
xor
cmc
pop
movsl
inc
dec
adc
cmp
jo
xor
dec
cmp
pop
mov
incb
dec
mov
subb
pop
loopne
clc
mov
push
dec
cli
xor
sbb
clc
in
dec
fwait
out
sbb
pop
lret
jle
push
jecxz
out
fdivr
mov
xor
lds
mov
mov
xor
mov
inc
add
adc
sub
cld
mov
xchg
bound
movl
inc
mov
ret
xor
imulb
imul
sbb
jne
mov
add
jle
mov
jp
dec
push
push
fadds
mov
decl
ss
pop
loopne
fmuls
mov
xchg
pop
inc
sti
pop
jb
in
rorb
dec
inc
data16
pop
push
cmc
popf
rcrb
adc
adc
incb
push
rcll
xor
push
inc
stc
clc
sbb
cld
jmp
inc
jmp
fiaddl
add
mov
outsb
aad
mov
cmpsb
mov
pop
add
call
mov
shl
dec
call
lock
push
xbegin
mov
in
xor
pcmpeqd
ret
add
pop
pop
mov
push
lock
and
cmpsb
movl
out
pop
ret
sub
hlt
mov
rorb
adcl
xor
pop
push
mov
or
call
notb
push
xor
cmp
sub
jae
mov
rorb
testb
or
outsl
les
jl
inc
fcoms
daa
add
fsubrl
xorb
sbb
mov
xor
xchg
cli
ljmp
iret
je
cs
aas
xor
inc
dec
or
js,pn
lahf
leave
and
inc
push
ficoml
int3
add
inc
xor
jp
dec
paddq
incl
mov
lock
cmp
push
pop
repz
inc
sbb
lods
xchg
pop
jl
lcall
ret
adc
flds
pop
jg
int3
push
stc
adc
cld
das
hlt
fstpt
incb
iret
and
mov
lods
adc
sub
and
imulb
or
and
sub
sub
mov
clc
xchg
mov
nop
leave
and
out
jle
mov
mov
or
pop
adcl
jg
cmp
test
nop
andl
imul
rol
stos
push
sub
adc
xchg
mov
jmp
leave
sbb
dec
jmp
sbb
xor
add
mov
mov
xor
push
push
lret
or
in
inc
lods
test
pop
push
hlt
adc
jmp
push
sbb
pop
ret
negl
mov
xchg
lock
and
ret
cmp
mov
negb
ret
ja
adc
mov
cmpsb
fwait
mov
mov
pop
inc
lea
xchg
or
out
mov
call
sahf
out
pop
decl
outsl
les
add
lods
scas
pusha
jmp
cli
jg
lds
push
pop
mov
scas
mov
sarb
or
xor
jle
andb
or
enter
sbb
sbb
popf
mov
dec
cltd
lret
iret
ror
push
adc
xchg
push
mov
test
xchg
mov
clc
push
mov
mov
pusha
fs
or
clc
or
and
loop
mov
dec
or
pop
int3
pop
xchg
clc
pop
mov
pop
lret
out
push
test
loop
insl
je
pop
inc
lahf
add
add
sbb
mov
mov
jl
inc
flds
pop
jge
mov
mov
gs
shll
insl
or
fidivrs
das
mov
pusha
inc
inc
in
sbbb
ret
in
popf
nop
dec
inc
xchg
mov
cmpl
xchg
clc
push
test
sbb
push
inc
movsb
int3
pop
call
adc
dec
jns
or
or
int3
scas
inc
lods
outsb
push
inc
mov
jecxz
lahf
cmp
jns
je
fisubl
or
pop
pop
test
xor
xlat
xchg
das
push
lock
stc
jmp
inc
cmpsl
or
push
or
bound
cmpsb
cmc
mov
inc
xchg
aad
loop
dec
xchg
and
jle
dec
push
pop
icebp
or
jb
fcomps
lods
push
push
jle
push
pop
sub
aam
dec
or
and
mov
push
fwait
push
ret
data16
jae
icebp
mov
call
in
cwtl
shrl
or
stos
dec
inc
frstor
scas
push
mov
ja
shrb
adc
fistps
jns
mov
add
dec
jne
nop
mov
xchg
sbb
aas
inc
and
xchg
push
in
cmpsl
negl
adc
cmp
mov
mov
roll
out
dec
arpl
xor
arpl
test
cmp
sub
mov
pop
pop
hlt
cmp
jmp
inc
sbb
clc
pop
sbb
hlt
sub
xchg
dec
into
xor
outsl
jg
mov
inc
adc
add
nop
mov
add
in
fldenv
sbb
mov
insl
sub
pop
in
jbe
popa
lret
mov
arpl
data16
loopne
lret
in
movsl
dec
pop
bound
insb
cwtl
movsl
sub
pop
stos
data16
cli
jp
dec
mov
sbb
add
dec
inc
cmpb
push
rcl
and
bound
sub
inc
mov
daa
add
hlt
add
add
cmpsb
jno
pop
jne
insl
adc
outsl
push
jl
push
add
and
add
lcall
dec
inc
std
movsl
add
fucomi
xor
in
xchg
sbb
xor
mov
mov
push
adc
ret
mov
loopne
mov
xchg
mov
jmp
movsl
pushf
mov
sti
scas
mov
lods
lds
mov
lods
adc
fisttpl
sahf
bound
lds
push
insl
adc
fidivs
pop
xchg
imul
es
aad
out
je
pop
adc
push
mov
jno
pop
mov
push
mov
rorb
push
dec
and
push
jmp
xor
push
aaa
pop
mov
addr16
push
cmp
in
and
mov
push
dec
les
imul
mov
nop
clc
orb
das
adc
xor
push
and
fisubs
dec
int
dec
adc
ret
jle
xchg
sbb
fwait
pushl
rcl
aad
ss
pop
addr16
test
dec
xchg
incb
pushf
call
cli
add
xchg
call
sbb
push
xchg
jmp
add
test
add
jmp
int
pop
repz
fsubr
push
dec
pop
cmc
xor
fildll
call
jne
loopne
xchg
ficoml
xlat
lea
repz
inc
lock
imul
out
pop
sbb
jle
call
pushl
jl
cmpl
jmp
stos
pop
les
fwait
js
aas
xchg
leave
push
and
add
inc
mov
push
and
push
and
test
loope
js
push
stos
inc
add
sbb
inc
or
push
lds
cltd
lahf
mov
hlt
lcall
add
adcl
mov
sbb
mov
mov
test
adc
imul
sbb
push
sbb
fistl
lret
testl
dec
cmp
sub
add
and
mov
clc
in
mov
mov
ss
sbb
hlt
add
ljmp
in
lods
dec
jmp
or
or
xor
mov
xor
sbbl
fidivrs
lods
pop
imul
pop
out
scas
adc
jbe
pop
xor
daa
xchg
xor
cltd
stos
cmp
arpl
xchg
cmp
mov
sbb
pop
jns
pop
sbb
or
ss
sbb
pop
xor
mov
push
and
add
inc
fisttps
mov
xchg
mov
pop
ficoml
sub
xor
push
mov
fidivrs
mov
outsl
cmp
leave
pushf
ljmp
mov
das
loopne
jecxz
pop
rclb
inc
test
pop
ljmp
js
jl
movsb
data16
jb
xlat
sbb
leave
add
mov
cli
push
inc
and
ds
std
add
mov
push
mov
cs
sbb
push
mov
cli
leave
or
add
aaa
jecxz
jg
xor
push
add
shl
cmpsl
fistpll
ds
jns
sub
ljmp
icebp
fistpl
mov
movsb
inc
push
xor
mov
push
out
sub
loopne
sahf
sub
sbb
lods
pop
cli
out
mov
inc
or
movsl
xchg
xchg
andl
cmc
mov
aaa
or
and
sub
scas
mov
pop
cltd
mov
mov
addr16
mov
add
and
imul
outsl
mov
jb
ror
cld
je
pop
or
mov
shr
pop
scas
hlt
jp
imul
shr
ljmp
pop
cld
xor
inc
jle
push
aam
push
mov
push
rcr
add
mov
loopne
daa
lahf
adc
ljmp
in
fildll
mov
loope
xchg
pop
and
sub
das
in
add
xor
sub
je
push
rolb
sub
inc
out
and
mov
fbld
xchg
in
ret
imul
push
stos
or
sub
lcall
inc
fs
iret
andl
cmc
pop
les
je
lock
roll
mov
je
fistl
or
in
mov
xchg
loopne
dec
dec
jae
je
stos
mov
js
xchg
std
incl
xor
ljmp
pusha
sbb
push
aaa
idivb
clc
jmp
aaa
cs
pop
mov
sub
dec
mov
popa
int3
por
push
lds
mov
xor
mov
dec
mov
sub
mov
gs
ja
cld
ret
xor
test
sub
and
add
data16
orl
sbb
cmpsb
xchg
mov
dec
cmp
icebp
mov
xchg
pusha
push
ret
stos
xlat
or
cmc
nop
repnz
mov
das
lret
leave
aaa
cli
outsb
jecxz
mov
mov
hlt
out
adc
push
or
clc
push
add
push
jmp
fstl
add
add
testl
mov
insl
mov
mov
push
add
scas
jno
ljmp
sbb
mov
fs
pop
call
mov
nop
das
test
add
movsl
jle
adc
sbb
push
push
and
orl
jmp
add
sahf
rcl
adc
or
mov
mov
insl
push
sti
pop
hlt
loopne
enter
jne
adc
js
mov
in
imul
jmp
idivl
jp
in
push
popa
mov
inc
in
push
add
push
mov
and
pop
mov
lods
negb
dec
insb
add
je
mov
insl
sti
aaa
push
cs
push
mov
hlt
dec
jg
or
cmp
loopne
cmp
or
aaa
aad
sgdtl
sbb
and
call
cmpsl
mov
das
fcmovne
rolb
mov
jo
aaa
mov
cmp
xchg
xchg
fwait
sbb
or
loopne
scas
xchg
lahf
rcrb
pop
add
inc
hlt
dec
icebp
adcl
ret
or
mov
mov
inc
negb
cmp
mov
adc
enter
mov
mov
push
or
decl
cs
adc
cmp
sub
js
mov
push
clc
or
in
mov
and
in
insb
jl
or
cld
push
cltd
and
xor
pushf
inc
lcall
dec
rcrl
and
push
dec
mov
cld
das
std
adc
push
mov
sub
mov
sbb
push
decl
jmp
ret
add
inc
ret
inc
es
dec
inc
pop
sbb
mov
das
or
push
mov
je
push
stc
pop
mov
adc
jmp
or
jne
lock
or
vpaddd
ficoml
addr16
fildl
jle
fcmovnbe
pop
add
mov
aaa
mov
mov
add
test
daa
xor
test
outsb
adc
inc
int3
out
xchg
loopne
xor
lds
push
xchg
int3
sub
inc
mov
mov
fcomp
and
lock
popf
int3
xor
gs
das
aam
or
mov
aam
push
stc
outsl
cmp
push
xor
pop
loopne
mov
push
sbb
call
addl
xchg
add
or
push
scas
fldcw
jo
out
mov
sub
sbb
xacquire
sub
loopne
in
mov
push
mov
mov
imul
and
in
rorb
pop
cli
dec
mov
xchg
jecxz
fdivl
test
mov
inc
dec
fildll
push
lret
testb
mov
pop
loopne
in
dec
out
adc
pop
sub
scas
sub
fidivl
rcrb
stos
pop
popf
outsl
or
xchg
jmp
jle
cs
mov
push
xchg
lcall
mov
cmp
xor
test
stos
mov
inc
inc
or
call
ret
mov
int3
and
sbb
movsb
popa
bound
mov
es
loop
push
shll
add
xor
cmp
insl
jecxz
jb
mov
out
jmp
sahf
rolb
fdivr
outsl
scas
mov
insb
push
and
lret
leave
adc
xchg
fiaddl
fidivl
mov
fucomip
pop
stc
aas
stc
cmp
add
or
mov
divb
xorl
ud1
dec
shrb
sbb
mov
mov
xchg
mov
in
loop
push
sbbl
dec
add
sarl
enter
jmp
movsb
cmp
add
cs
filds
xor
push
inc
lret
lret
test
jg
mov
xor
popf
call
rcr
push
or
jbe
xchg
or
mov
inc
nop
mov
ljmp
arpl
dec
insl
jns
pop
ds
repz
pop
jg
ss
in
imul
divb
adc
and
ficoml
sbb
push
scas
xchg
xchg
inc
push
inc
sbb
mov
push
or
insb
pushaw
add
lret
pop
imul
jecxz
or
push
test
mov
call
sar
pop
in
dec
aas
mov
mov
adc
jmp
and
je
xor
or
mov
ret
adc
loopne
push
aam
pusha
add
into
mov
ret
mov
or
test
sub
push
or
pop
movsb
test
adc
push
xchg
stc
jp
pop
call
call
in
mov
pop
mov
nop
dec
outsb
ret
les
call
std
fisttps
inc
sti
in
push
rorb
adc
mov
fcoml
cmp
cmp
lea
cmp
add
jmp
incl
mov
adc
mov
mov
adc
std
mov
outsl
mov
pop
cmp
orl
and
jmp
addl
dec
or
shll
mov
stos
inc
loop
sbb
das
jmp
adc
ljmp
xchg
cmp
lcall
jp
inc
fdiv
adc
or
xchg
and
mov
jge
push
movb
or
xchg
mov
push
push
sub
mov
out
inc
xlat
mov
mov
cli
enter
mov
std
sbb
xchg
cmc
adc
mov
jmp
push
ret
repz
lea
ret
ret
sbb
lea
push
cltd
or
sti
fistl
mov
dec
mov
jmp
jmp
push
cmp
xor
xor
fwait
shl
dec
jmp
outsl
call
push
pop
xor
in
lods
insl
lahf
stc
adc
cwtl
add
std
das
sub
mov
popa
sti
push
sar
sub
sub
xchg
mov
ja
push
mov
jg
in
fstpt
mov
pop
dec
cmp
xlat
dec
inc
push
or
aad
sbb
and
pop
fistpll
xchg
mov
hlt
and
mov
dec
and
xlat
or
inc
sti
stc
mov
add
inc
mov
clc
or
jbe
adc
cmp
pop
lock
mov
mov
fucomp
daa
mov
xchg
js
xchg
fdivs
jbe
dec
test
pushl
mov
arpl
repz
repnz
dec
cld
sbb
jg
push
push
hlt
or
or
and
cld
inc
pop
popf
add
or
data16
mov
jg
je
ret
test
jecxz
xor
add
das
and
in
adc
push
fwait
and
pop
or
movsl
mov
leavew
inc
inc
mov
fidivl
and
fwait
movsl
std
or
or
adc
psrad
mov
add
pop
jecxz
ljmpw
or
or
mov
push
pop
test
bswap
fisttps
loope
shlb
xchg
mov
insl
sbb
rcrl
rorl
movsb
loopne
inc
mov
lcall
jge
adc
dec
rclb
xchg
mov
idivl
add
xchg
mov
sbb
icebp
pop
add
das
and
pop
loop
fwait
inc
fidivrl
sbb
push
or
jle
jo
or
aam
and
pop
xchg
ja
bound
jb
mov
mov
mov
adc
out
nop
movsl
xchg
or
outsl
adc
sbb
pop
mov
in
xlat
shll
lock
mov
mov
xchg
fs
adc
outsl
mov
mov
nopl
sub
mov
sbb
loope
inc
ret
and
jo
mov
push
insl
lods
addr16
int3
jge
icebp
sbb
inc
popa
insl
fistl
rcrl
dec
xchg
push
dec
pop
pop
jle
xchg
insb
mov
dec
cmp
push
lock
insl
rcrb
or
aam
leave
jno
lock
push
add
adc
mov
fldt
dec
loop
stos
inc
xor
mov
xor
xor
in
dec
adcl
dec
xchg
push
push
push
inc
fildll
int3
dec
rorb
add
push
pop
sub
icebp
daa
movsb
sbb
jmp
sbb
jnp
pop
outsl
popl
jle
push
and
dec
add
stos
mov
sub
pop
cmpsl
fsubrl
jmp
call
int3
std
imulb
lock
and
cmp
ss
push
xchg
fstps
dec
mov
popa
sub
mov
je
push
sub
lahf
dec
clc
inc
sbb
xchg
mov
mov
jmp
pop
in
dec
mov
outsl
and
mov
adc
jno
lods
adc
adc
cltd
sub
mov
mov
sbb
test
leave
jns
xchg
scas
mov
and
mov
jg
xchg
jecxz
mov
subl
xor
test
or
mov
adc
or
movsb
adc
xor
outsb
fs
mov
hlt
mov
loope
sahf
imul
lret
mov
mov
ljmp
daa
xchg
add
out
ret
mov
rcrb
jo
mov
sub
outsl
sbb
sbb
mov
fs
cli
adc
repz
inc
jnp
dec
dec
push
js
int3
sti
lcall
out
bound
sub
mov
inc
adc
jge
lcall
hlt
movsl
lods
notb
clc
xchg
adc
sub
jp
loop
add
std
das
xchg
xor
test
fwait
cmc
adc
push
adc
cmpsb
in
movsb
mov
mov
push
arpl
sbb
push
pop
cli
sub
jnp
in
mov
and
mov
cs
pop
rolb
cld
imul
cwtl
or
jmp
ffreep
mov
stos
pop
insl
lcall
fadd
js
inc
shl
in
push
jmp
sbb
js
jne
mov
mov
mov
scas
or
adc
push
jmp
push
mov
xor
jmp
movsl
outsl
push
fsubrl
cmp
inc
test
mov
fs
and
mov
outsl
sub
cmc
sbb
xlat
cmp
push
adc
rcll
fstpt
iret
and
mov
jmp
lods
push
pop
addr16
mov
idivb
mov
xchg
and
leave
jp
js
sub
dec
ljmp
or
cmp
invd
movsl
sub
lods
fidivl
lods
push
mov
or
adc
ds
insb
rcr
sti
leave
jecxz
test
js
outsl
into
add
or
or
jno
sub
jnp
mov
pusha
adc
pop
fisubrl
adc
rcrb
or
out
xchg
shl
pop
or
push
arpl
cmpsl
sub
or
andl
mov
add
pushf
flds
xor
sbb
mov
xchg
add
adc
lret
jp
jge
mov
pop
clc
aas
add
dec
or
xorl
jecxz
cmp
stos
xlat
sub
cld
jge
push
or
clc
cmpsb
add
fistps
inc
out
addr16
test
rcrl
or
mov
les
outsb
xor
or
popa
scas
rcrl
jp
and
outsl
jg
or
xchg
gs
ljmp
cmpsb
inc
jmp
cmp
inc
adc
sbb
xchg
sub
leave
shr
clc
or
push
or
mov
pop
push
cltd
or
push
rorb
scas
sub
mov
dec
push
hlt
fbstp
jg
movsb
xor
or
rdtsc
bswap
or
mov
or
or
mov
sbb
out
cmp
push
daa
push
ret
dec
push
cmp
cmp
or
mov
shlb
adc
js
jnp
inc
popf
ret
fildll
xlat
test
in
add
adc
mov
xchg
adc
mov
xor
cmp
nop
ljmp
dec
leave
sub
push
ret
mov
outsl
or
and
imul
push
in
adc
dec
out
fiadds
enter
lock
ret
int3
in
jle
sbbb
shl
outsb
jl
out
jno
jge
nop
or
rcrb
mov
pop
cmpsl
add
lahf
dec
push
dec
out
mov
sbb
inc
inc
xor
pop
jecxz
inc
mov
mov
test
rcrb
xchg
sbb
ret
lea
jge
clc
mov
inc
adc
jle
jmp
pop
cmp
cli
call
mov
outsb
cmp
jo
sbb
leave
pop
mov
cs
and
sarb
pop
jbe
sarb
push
call
data16
in
fstp
outsb
dec
mov
cmp
rcrb
test
inc
mov
ss
icebp
test
fistpll
in
mov
js
out
jp
ds
add
fcomp
idiv
xor
inc
pop
out
and
lds
mov
push
lahf
dec
fistl
stc
jmp
mov
out
jbe
adc
rorl
jae
enter
jmp
adc
popf
enter
mov
ret
sub
call
loopne
cltd
add
shl
shrb
fstl
data16
decl
test
mov
mov
xchg
dec
or
push
mov
cmp
mov
xchg
jle
or
adc
fld
jg
jbe
ret
push
popf
xor
fwait
dec
lcall
mov
idivl
mov
addr16
rorl
and
and
pop
sti
or
inc
xor
sbb
cli
stos
mov
lcall
cmpsl
mov
imul
dec
stc
popf
and
int
inc
out
inc
and
cmp
jne
ljmp
fstpl
fcomps
xchg
fisubrs
icebp
push
or
jmp
je
mov
cld
jg
shr
adcl
jp
sub
sub
cmp
sub
cmp
dec
push
scas
loope
orl
sbb
es
mov
loop
inc
sub
sbb
das
hlt
pop
dec
dec
mov
in
in
popa
adc
push
lret
loope
push
packsswb
sub
add
outsb
std
mov
xchg
jb
mov
shrl
fsubrs
xchg
sbb
pop
lahf
stc
mov
sub
jecxz
jb
aas
mov
aas
jo
jl
mov
andb
mov
mov
add
cld
xchg
loop
pop
push
ficompl
jb
pop
xor
ret
lcall
mov
xchg
lods
aas
movsb
jl
jbe
push
jo
xchg
rolb
push
and
lcall
dec
mov
test
push
mov
xchg
mov
test
jbe
pop
lret
pop
js
add
fcmovu
cld
adc
aaa
mov
push
loopne
mulb
outsl
mov
push
mov
pop
scas
cmp
xchg
and
cmpsb
stc
inc
and
fldl
jb
lds
imul
movl
dec
jo
faddp
sahf
cmp
call
inc
sbb
fdivl
adc
repnz
in
mov
cmp
or
lds
call
sbbl
ljmp
push
into
imul
mov
cmp
in
mov
mov
pop
mov
jo
mov
jno
inc
dec
or
daa
and
mov
or
adc
cs
es
test
mov
outsl
stos
cmp
push
xlat
pop
push
xor
icebp
push
outsl
cmc
adc
loop
arpl
in
sbb
push
lods
sub
decb
call
mov
ss
jns
aam
out
fisttps
jae
int3
popf
stos
pop
pop
pop
jle
stc
loope
push
sbb
xchg
jl
ss
mov
shlb
insl
shl
push
xor
incl
fnsave
clc
sub
aas
add
imull
fs
shll
push
mov
xor
dec
and
jne
mov
sub
mov
pop
pop
lds
xor
push
pop
cmp
in
ret
fcmovnb
adc
daa
mov
insb
push
mov
jns
push
mov
nop
in
push
add
xor
cmpsb
sub
sub
mov
stos
sub
adc
mov
mov
shr
outsl
inc
mov
or
pusha
daa
sub
jl
fcoms
dec
adcl
clc
xchg
sub
and
lcall
xchg
pop
pop
pop
lock
dec
add
sub
in
cmpsl
push
fadd
movsl
mov
push
dec
stc
andl
cmp
inc
pop
je
dec
dec
xchg
mov
icebp
movsl
repz
pop
inc
rcrb
sti
roll
mov
decl
das
and
xchg
lock
fldt
cli
lods
ss
dec
inc
push
inc
imul
test
jo
pop
inc
imul
rcll
sbb
pop
pop
mov
xchg
mov
push
aas
nop
stos
push
push
adc
jmp
pop
adc
or
divb
js
push
pusha
sub
cmp
mov
or
sbbb
jno
push
outsl
sub
stc
push
xchg
cmp
movsb
movsl
inc
icebp
push
ss
sub
jne
xchg
aad
mov
jo
pop
and
xchg
xor
or
or
add
mov
fs
stos
dec
mov
and
repz
ret
or
xorl
adc
frstor
inc
lods
fcoms
inc
aaa
mov
mov
fcomps
imul
xor
das
jmp
or
add
sub
adc
add
cmpsb
outsl
insb
out
iret
stc
sub
mov
outsl
iret
add
pop
xchg
fsubl
or
push
cltd
mov
dec
in
das
test
jne
and
out
rolb
loop
or
stos
scas
enter
sbbb
insl
and
es
inc
aaa
fldcw
outsl
in
js
out
loopne
mov
decl
cmpsl
mov
in
sbb
cs
lret
lods
imul
rcr
or
in
sbb
ret
insl
sub
push
jg
cld
in
mov
inc
adc
xchg
movsl
jmp
inc
pop
xor
rcl
sbb
ss
ficoml
inc
adc
mov
push
aad
nop
scas
cs
cli
sub
xlat
loope
inc
repz
or
out
stos
mov
xor
pop
ds
push
or
mov
cmpb
and
mov
jae
stos
adc
outsl
adc
cmpsb
sahf
es
sub
dec
lock
in
mov
fs
jns
cwtl
dec
sub
jg
cmp
jl
rolb
ja
or
out
notl
sbb
aaa
call
inc
xlat
incb
fsubr
adc
adcl
ss
cmpl
movsl
mov
leave
xchg
xchg
inc
xor
rolb
fldt
add
sub
adcb
test
inc
dec
jae
inc
mov
and
and
pop
add
addl
mov
adc
stos
push
add
imul
mov
dec
jmp
jle
incb
out
sti
clc
add
in
add
call
out
std
adc
fdivrp
mov
jns
out
jns
add
jg
iret
std
sti
jns
std
fcomi
mov
std
into
jmp
jns
fdivrp
incl
jle
cli
bnd
adc
aaa
std
pop
dec
jns
std
clc
fldt
das
pop
jge
sti
out
and
push
jg
dec
push
out
lret
and
cli
pop
outsl
sti
decb
fsubrl
cli
dec
in
pop
sti
std
or
jle
stc
fcompl
and
fwait
jg
sti
ljmp
scas
or
cmp
movd
jnp
in
fisttpl
std
jmp
cli
stc
cmp
stc
gs
xchg
clc
jg
dec
jnp
jge
mov
fnstsw
das
jge
sbb
into
stc
sar
push
mov
jnp
pop
mov
iret
ja
dec
jmp
ja
out
outsl
incl
push
dec
std
jmp
sti
jae
outsb
mov
or
fucom
cmp
dec
mov
ja
scas
popa
and
or
jge
xor
fbstp
imul
mov
jae
popf
fstpt
repz
into
mov
outsb
pop
inc
jnp
ljmp
testb
dec
jnp
jnp
pop
xchg
repz
xlat
xor
imul
xlat
lods
shlb
add
xor
in
fdiv
lcall
jecxz
cli
lock
xor
jns
out
cld
or
shll
jg
pop
stc
call
xchg
repz
push
xlat
out
in
mov
outsl
jg
jge
sub
outsl
fwait
sub
pop
out
xchg
jae
pop
lret
ret
jg
push
out
jae
into
jne
popf
iret
out
out
fistpll
mov
fidivs
dec
pop
outsb
addl
shrb
jg
outsl
push
ljmp
pop
fstpt
fcomi
sbb
xor
cmp
ja
push
stc
cmpsl
in
mov
jns
push
aaa
std
pop
add
lods
mov
sbb
sbb
mov
mov
ret
push
out
add
fbstp
fistpll
push
scas
cld
lock
int
or
jle
jnp
insb
movsl
scas
loope
jmp
jg
adc
out
cmpl
mov
xor
pop
ljmp
push
paddb
mov
dec
iret
pop
scas
js
push
fdivrl
pop
in
arpl
call
mov
mov
call
and
out
ljmp
jnp
cmpsl
cmpsb
mov
arpl
into
inc
xchg
xchg
or
pop
imull
sbb
cli
int
xchg
inc
psubq
mov
ja
adc
jmp
sahf
nop
jne
adc
mov
jmp
xchg
ss
fwait
mov
test
std
pop
in
pusha
sub
movsb
imul
jg
mov
pop
sbb
out
and
jg
inc
inc
test
adc
push
aaa
adc
xchg
lcall
mov
mov
lret
pop
push
pushf
add
out
push
arpl
jne
and
ljmp
lret
dec
jmp
nop
mov
in
pop
mov
jl
pop
repnz
mov
xchg
fisttpl
and
or
cli
lret
and
insb
outsl
bound
mov
inc
je
insl
dec
popa
insl
gs
adc
gs
fcomi
ljmp
outsl
ja
jb
je
je
jae
insb
adc
outsb
pop
jbe
jg
inc
outsb
jne
and
fs
popa
addr16
adc
outsl
mov
inc
jbe
je
sbb
jne
jb
mov
inc
imul
xor
push
pushl
outsl
dec
jne
je
inc
jns
xor
gs
fs
imul
jae
dec
bound
inc
outsl
jb
sbb
inc
or
jae
js
cs
fcmovne
or
jae
mov
fidivs
and
jo
outsl
outsb
not
ss
insb
xchg
pop
adc
or
data16
dec
addr16
insb
stc
arpl
scas
std
pop
and
dec
dec
xchg
lcall
jo
outsb
and
scas
insl
dec
insl
xor
pushl
imul
sub
addr16
inc
movq
fldcw
dec
data16
push
gs
je
insb
daa
mov
or
cmp
data16
cmovl
push
or
fldcw
shll
stc
inc
jne,pt
jae
fstpl
testb
jb
jb
gs
jmp
loope
je
pop
ja
and
mov
test
or
and
sbb
or
outsb
outsw
adc
mov
push
in
not
outsb
inc
pushf
aas
jno
pop
test
imul
ret
push
fmull
jns
call
push
aaa
out
sbb
jns
outsl
outsl
ss
jb
dec
loope
cmpsl
lods
push
imul
adc
fwait
adc
inc
sti
bound
push
cmp
adc
xchg
inc
gs
ds
test
xor
aas
dec
outsl
jg
es
scas
addr16
or
inc
inc
cmp
inc
fsubrs
jbe
lea
insl
cmp
pop
xchg
xor
fs
data16
outsb
testb
pop
pop
gs
mov
jnp
test
xor
jo
mov
icebp
push
push
popa
dec
sti
int
test
inc
rcll
pop
mov
test
dec
and
scas
aam
adc
adc
dec
xor
dec
mov
dec
imul
lock
mov
nop
and
inc
add
repnz
fistps
adc
mov
cmp
in
adcl
add
inc
dec
inc
aad
popa
jbe
xor
jne
jbe
jecxz
xor
insl
stc
lahf
or
cmp
add
xchg
je
pop
xor
fwait
les
dec
mov
ret
mov
addr16
mov
out
loop
inc
enter
rolb
sbb
fcoml
sbb
ret
loopne
jne
out
push
pop
fildl
or
sbb
dec
outsl
cmp
insl
dec
jp
sub
pop
inc
inc
push
push
imul
inc
xchg
mov
inc
nop
push
jbe
or
or
out
cmp
les
push
jb
sbb
xor
adc
outsb
in
xor
lea
push
mov
pop
dec
push
addr16
fisubrl
dec
test
popa
inc
jns
inc
adc
subb
mov
ds
fcmovne
xor
jae
fistps
jecxz
ds
lods
push
pop
sub
call
pop
mov
sbb
outsb
dec
dec
outsb
push
ret
mov
mov
mov
imul
push
call
adc
sub
jo
insl
cwtl
push
jo
mov
dec
mov
adc
arpl
dec
sub
neg
xor
bound
sbb
ljmp
shll
mov
push
mov
pop
imul
or
lods
fnsave
jo
fsubs
sub
int
cmp
cmpsb
sbbb
pop
out
inc
mov
data16
fnsave
sub
push
je
pop
jne
and
or
cmp
mov
dec
inc
dec
or
cmp
mov
xor
jo,pt
mov
imul
cmp
dec
inc
shr
iret
or
dec
xchg
jo
insb
addr16
out
and
xor
ret
sbb
inc
push
sub
inc
mov
ja
xor
inc
jb
mov
xchg
sub
cs
xchg
jl
inc
sahf
dec
dec
inc
ss
mov
call
lods
mov
push
repnz
inc
cwtl
pop
xchg
das
iret
outsb
xchg
lods
fs
push
lret
inc
mov
imul
subl
inc
fbld
push
jnp
jne
push
xor
out
inc
mov
adc
dec
dec
mov
push
mov
xor
lock
xorl
cmp
mov
lds
xchg
imul
jmp
pop
ljmp
lea
insl
loope
sbb
movsl
inc
push
push
and
int3
mov
cwtl
lock
int3
das
lods
sti
mov
inc
sahf
dec
inc
xor
xchg
and
les
leave
lcall
sbb
add
shr
push
sub
nop
clc
and
movsl
pop
push
bound
cmp
adc
test
add
sub
inc
fwait
lock
adc
mov
xchg
inc
xchg
xor
test
xor
lahf
mov
add
dec
mov
add
add
fnsave
add
or
or
adc
and
xlat
int
inc
xor
add
xchg
cmp
adc
sbb
fnstcw
xor
pop
push
repnz
mov
cmp
add
adc
rorb
and
pusha
mov
jmp
movsl
dec
and
add
add
insb
aaa
lock
push
cmp
add
add
add
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
