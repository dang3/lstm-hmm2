in
xlat
sti
inc
cltd
sbb
fwait
leave
pop
sbb
cmp
fdiv
mov
out
dec
push
or
aam
xorb
pop
clc
or
jmp
adc
and
fs
mov
xchg
js
aad
jmp
in
dec
js
in
sbb
sub
mov
jg
dec
pop
call
jns
jne
rcl
and
shll
bound
inc
pushf
lea
lods
push
cmp
rorb
cwtl
leave
bound
ret
jle
arpl
je
lods
je
adc
add
scas
push
shlb
sub
mov
pmulhuw
out
mov
sbb
push
fdivrl
inc
pop
pushf
les
pushf
mov
addr16
push
inc
cwtl
sti
mov
xor
mov
roll
sub
adc
pop
addr16
pop
aad
aam
sbb
sbb
mov
fwait
mov
stc
jle
mov
and
sub
dec
mov
ss
scas
inc
mov
mov
jnp
xchg
fs
xchg
leave
sbb
and
pop
das
aam
xchg
das
dec
mov
das
mov
xchg
outsl
mov
cs
pop
jmp
inc
mov
pop
dec
ss
add
jne
cwtl
sahf
xchg
push
fnstcw
sarl
outsl
mov
lea
xor
push
aaa
icebp
shrb
icebp
xorb
dec
es
pushf
in
jg
push
pop
aaa
adc
dec
lcall
mov
push
mov
xor
pop
test
aas
add
inc
push
dec
rolb
adc
jno
push
adc
daa
mov
rcrb
pop
jmp
push
sbb
dec
jo
inc
std
dec
shlb
dec
add
push
xchg
mov
xchg
add
stc
sbb
lahf
icebp
scas
ds
pusha
inc
jbe
inc
jg
cmp
jns
jno
shll
or
lret
stc
or
pop
test
pop
mov
in
xor
into
jnp
push
js
sub
or
data16
inc
mov
add
jle
stc
sub
adc
lock
and
les
imul
jno
adc
xchg
loope
movq
jge
push
sbb
stc
inc
mov
mov
inc
push
stos
jecxz
into
push
mov
sbb
dec
loopne
inc
imul
xchg
or
jno
xrelease
inc
fdivs
pop
test
and
sub
lods
imul
xor
pushf
cmp
mov
imul
dec
fiaddl
and
sub
push
rcll
in
sub
inc
xor
inc
rorl
or
lret
or
cmpsb
mov
int
inc
mov
gs
out
gs
sbb
or
stc
xor
xor
outsb
ljmp
push
fadds
jge
popf
mov
repz
pop
inc
test
rcl
popa
mov
mov
xchg
sub
add
fsubrl
xor
fs
mov
stos
in
adc
mov
xor
add
fnsave
repz
mov
mov
and
rcll
mov
fisttpl
mov
ljmp
pop
xchg
ja
addr16
lds
jmp
aas
aam
or
inc
or
pop
into
aad
mov
mov
inc
into
dec
push
jle
mov
dec
pop
push
sbb
or
int
lock
es
in
adc
add
mov
sbb
add
mov
pop
outsb
xchg
mov
inc
je
xorl
dec
xchg
pop
icebp
sub
adc
push
xchg
mov
leave
pushf
cmp
adc
lock
adc
cmp
insb
mov
mov
mov
js
or
into
sbb
mulb
insl
or
icebp
rclb
sbb
lcall
push
and
xor
cld
mov
lahf
mov
fidivrs
dec
sbb
or
sub
vrcpss
xor
mov
sub
push
jne
int
push
mov
sub
scas
out
test
loop
and
sbb
imul
ficomps
sub
xchg
adc
add
pavgb
inc
test
cld
jg
xchg
xchg
bound
data16
cmp
jns
mov
in
cmpsb
ja
enter
xchg
xor
dec
mov
negb
pop
xor
inc
inc
aad
xchg
mov
test
sbb
fiadds
xchg
cmp
iret
inc
push
ret
test
scas
insb
sarb
xor
mov
jecxz
jno
xchg
mov
cmp
pop
mov
in
xor
out
inc
repnz
jns
add
ja
mov
bound
adc
pusha
fcoms
roll
pop
adc
xor
rolb
pop
test
xor
hlt
out
adc
lds
mov
cmpsl
daa
sbb
decl
push
mov
dec
adc
subb
push
xchg
cmpsb
test
or
repnz
or
lods
push
iret
xor
sbb
jle
insb
mov
xchg
xor
cld
je
dec
inc
pop
movsb
inc
sbb
cmpb
xchg
sbb
mulb
pushf
jge
xor
xchg
ds
je
fcmovb
push
mov
movsb
pop
fistpll
pop
repnz
icebp
cmpsl
xlat
mov
icebp
xorb
add
mov
or
out
jmp
cmc
push
mov
xchg
out
test
scas
testb
rcll
sbb
mov
lock
sbb
sub
stos
pop
xchg
fimull
or
sub
cmpb
shl
xor
lcall
dec
std
hlt
and
mov
add
jno
jle
mov
inc
dec
addr16
gs
jmp
into
mov
nop
dec
pop
jle
adc
sub
add
in
pop
xlat
sarl
pop
je
and
sbb
int3
mov
test
ljmp
mov
inc
leave
notl
lods
xlat
movsl
adc
add
xlat
sub
push
xlat
pop
test
fdivr
mov
xorl
xor
sbbb
or
sbb
fstl
sbb
cmc
or
mov
and
jmp
push
in
pop
fistps
fidivrl
rcrl
cmpsb
pop
cld
int3
mov
fdivr
enter
add
lock
add
xor
xor
out
add
nop
cmp
ds
cmpsb
jg
push
loop
aaa
xor
pop
fstl
mov
xchg
lock
aam
stos
sbb
cmp
or
pusha
rorl
mov
fcomi
hlt
mov
repz
inc
fidivl
push
test
loopne
scas
or
mov
push
xlat
js
jns
or
push
jo
hlt
jno
out
mov
xchg
incb
iret
sbb
les
sbb
inc
adc
mov
das
stos
add
xorl
cmp
call
sub
mov
imul
test
popa
mov
and
mov
cmp
push
dec
fmull
or
mov
daa
les
adc
shlb
inc
outsb
pop
mov
push
cmpsl
mov
jnp
xor
repnz
jp
xchg
orb
ret
pushf
push
cmp
fists
sar
jns
sub
pop
fnsave
out
xor
xchg
xlat
jo
adc
out
jp
shll
outsl
mov
je,pn
icebp
lret
leave
mov
loop
push
and
jg
out
aad
pop
jg
sub
add
jo
in
or
fsubrp
xor
inc
ret
ja
daa
dec
inc
test
fwait
cmp
inc
aas
loope
test
inc
xchg
xchg
xor
fdivl
and
lds
sahf
push
fs
xor
out
sahf
cmc
lods
inc
or
hlt
mov
out
mov
adc
and
add
jae
pop
sub
cli
aad
push
pop
andl
repz
mov
inc
push
lea
mov
push
ss
inc
orl
add
jo
int3
repnz
inc
into
imul
mov
xchg
or
test
jno
std
jmp
sub
jcxz
xor
cmpsl
out
lods
adc
or
cmp
inc
jmp
mov
dec
add
punpckhwd
lahf
aaa
frstor
lahf
test
ds
jmp
jp
jno
fwait
mov
jns
iret
sbb
sti
pop
ror
cmp
sbb
mov
subb
pop
aam
push
adc
addl
out
scas
fucomip
mov
out
jp
or
push
xor
bound
sbb
aaa
gs
xchg
sub
push
out
pop
fdivl
sub
scas
ret
in
cmp
xchg
jbe
inc
jnp
jp
je
lahf
add
jl
je
adc
pop
pop
leave
inc
add
mov
das
or
rorb
sti
inc
cmp
push
popa
jg
mov
lret
int
cli
jbe
cmovo
cmp
call
out
roll
and
inc
ret
adc
mov
sub
js
loope
add
mov
fisubl
add
sti
xchg
test
es
sbbl
imul
shl
in
insl
add
insl
stos
test
fisttpl
push
mov
xchg
push
add
and
fs
and
cmp
xchg
test
sti
cmp
nop
pop
out
push
mov
xchg
cli
inc
js
xor
cmpsb
pop
in
lds
int3
jno
fs
mov
and
mov
add
inc
lahf
mov
fiadds
pop
xor
mov
sbb
test
aas
mov
xchg
pop
roll
int
jmp
cmpsl
mov
or
mov
jo
cmc
rorb
iret
jno
and
je
pop
xorl
push
pop
jg
ficoml
push
sub
scas
aaa
push
or
xchg
sbb
orb
enter
xor
and
jl
xlat
clc
mov
enter
mov
and
sarb
int
cmpsb
lock
lods
cmp
sbb
shlb
sub
cwtl
shlb
mov
lods
loop
sbbl
cmpl
aad
into
push
pop
test
insb
pop
aas
dec
pop
mov
ljmp
pop
out
add
pop
xchg
push
out
or
lea
ret
cmp
push
pop
xor
je
adc
test
sub
in
into
push
aas
ljmp
adc
into
scas
dec
popaw
fimuls
je
fldl2e
mov
sti
mov
divl
jo
adc
lcall
repz
cmp
sbb
nop
mov
push
test
daa
ficomps
data16
scas
iret
add
jge
jnp
push
icebp
movsl
rclb
mov
or
out
xor
icebp
or
aas
sbb
push
movsb
fidivs
dec
pop
dec
addl
loope
fcompl
mov
out
jle
xor
dec
mov
mov
cmp
adc
pop
in
push
xor
in
pop
push
inc
in
xlat
cwtl
test
sub
jnp
inc
jge
mov
adc
enter
adc
gs
cmpsb
mov
jp
add
imulb
xor
lods
test
frstor
fiaddl
adc
aam
mov
cmp
add
jmp
jne
add
mov
arpl
testb
xor
xor
nop
stc
xor
push
jnp
mov
ja
jp
jp
or
push
arpl
mov
add
add
imul
nop
dec
aaa
imul
clc
movsb
movsl
cmp
and
dec
inc
mull
jnp
loop
lock
adc
cmp
dec
or
lods
clc
add
inc
movsl
jp
jmp
or
and
sub
xchg
pop
mov
jge
call
sbb
sub
cmpsl
arpl
sub
enter
scas
pop
jnp
add
jnp
or
enter
leave
xchg
jne
std
andb
std
and
aaa
dec
out
sub
or
mov
adc
stc
mov
sub
mov
aad
sub
icebp
subl
mov
push
mov
out
out
lods
jns
movsb
mov
pushf
push
test
sbb
sub
test
and
and
and
call
cmpsl
pop
ror
loope
je
push
notb
push
jp
rcrb
sub
inc
dec
and
jecxz
mov
jne
cli
cli
insl
fcom
cmp
shlb
jp
jp
and
and
outsb
pop
test
shll
push
das
es
loop
jbe
push
dec
jae
repnz
shrl
lret
sub
adc
lret
and
cmp
pusha
cmp
jmp
mov
pop
mov
lods
adc
xchg
jae
shlb
mov
rcrb
fdivrp
insb
xchg
add
das
int
push
shl
cmpb
jae
xor
repz
adc
jle
mov
lods
xor
movsb
and
mov
xor
cmpsl
add
sahf
sub
lcall
ds
add
xchg
cld
jb
push
call
jo
icebp
xchg
pop
lea
mov
or
jae
lds
push
int
pop
rcl
lret
out
dec
cmpl
push
cmp
mov
push
add
ret
je
xchg
test
mov
mov
out
adc
cmp
fs
pop
mov
jnp
inc
loop
push
mov
pop
adc
stos
fadds
and
outsl
xor
leave
push
jb
dec
jo
sahf
je
stc
xchg
mov
or
lret
std
adcb
pushf
adc
aaa
lock
inc
cmp
and
pop
push
dec
mov
push
pop
cli
xchg
xchg
lret
mov
fnstcw
inc
mov
mov
mull
add
mov
jl
iret
aam
int
sub
test
pop
icebp
sti
add
std
imul
je
push
cmp
into
xchg
push
int3
adcb
push
cwtl
jle
push
dec
adc
lods
test
lret
bound
das
inc
int
and
aam
stos
mov
iret
icebp
ss
lret
cwtl
xchg
insb
cmp
gs
inc
mov
xor
in
test
idivb
cmp
or
cmpsb
out
lock
dec
gs
mov
lret
cmp
test
aad
popf
mov
test
aam
fs
mov
in
shlb
sbb
and
dec
aaa
sub
scas
mov
repz
shrb
inc
inc
insb
test
push
int
rorl
jnp
add
insb
repz
xorl
movsb
push
sub
stc
scas
movsl
test
nop
xchg
imul
push
repnz
movsl
mov
xchg
xor
rolb
das
nop
ljmp
and
jecxz
enter
fwait
or
jle
mov
shlb
jne
rcrl
inc
xor
jne
xlat
loop
jle
and
les
cltd
and
sub
decb
lret
mov
mov
mov
dec
dec
leave
iret
adc
lea
cmpsb
aas
addr16
xlat
mov
push
jnp
popl
repz
add
mov
and
imul
outsb
cmp
mov
popf
outsl
add
or
decl
imul
movsb
push
jl
or
mov
xchg
push
into
mov
cmpsb
mov
imul
subl
sub
movb
clc
lcall
cwtl
or
add
cmc
or
add
aas
cs
fcompl
sub
jne,pn
xchg
lahf
push
pop
pop
mov
inc
jg
sahf
jg
shrl
add
pop
add
or
push
push
dec
pushf
and
jno
bound
pop
std
repz
pop
xchg
jnp
pop
lahf
push
jp
call
jge
sbb
and
divb
mov
imul
jge
xchg
xchg
dec
xchg
pop
orl
outsl
icebp
fbld
mov
or
lret
cmp
pop
push
mov
popa
lcallw
out
sub
test
mov
enter
popa
imul
fistpl
stc
movsl
jo
les
cmc
sarb
pop
dec
mov
mov
aad
xor
jnp
jl
mov
sbb
jge
adc
sarb
daa
push
repnz
icebp
mov
cmpxchg
call
pmullw
imul
dec
jne
mov
pop
in
test
dec
jo
orb
pop
xor
mov
or
adc
pop
mov
sti
cmp
adc
movsb
movsl
mov
orl
out
mov
es
jle
ds
adc
xor
pop
and
lahf
addr16
fldz
mov
add
popf
push
sub
arpl
ret
in
in
push
sbb
add
mov
pop
inc
inc
fiadds
shr
mov
cmp
adc
dec
stc
xor
movsl
and
sub
shlb
bnd
adc
push
jp
adc
lret
sbb
cmp
scas
or
inc
xchg
popf
mov
scas
test
push
lods
inc
fs
cmp
fdivrs
gs
out
sbb
inc
push
mov
adc
test
add
adc
data16
stos
sbb
pop
push
lea
enter
rcrl
fnsave
push
mov
scas
pusha
lds
pop
in
pop
mov
xchg
add
adc
jnp
mov
lock
movsb
mov
les
adc
mov
sub
cwtl
xchg
sahf
ja
addl
sahf
dec
je
cmp
mov
in
xor
cmpsl
xchg
or
mov
mov
add
fxch
outsb
mov
sbb
and
jle
mov
shrb
mov
sti
sbbl
ror
jl
in
pop
fs
ljmp
cmp
mov
das
lds
jl
call
aad
enter
xor
inc
push
nop
xchg
insl
add
mov
xchg
mov
or
sbb
jb
inc
in
push
mov
mov
or
jmp
mov
ret
notl
sbb
mov
and
adc
imul
divb
xor
in
into
outsb
lret
pop
nop
mov
repz
mov
jge
movsb
xchg
or
xor
pop
addr16
into
sub
jae
lahf
cmc
outsl
push
pusha
mov
fidivl
sahf
scas
mov
sub
insb
push
cld
cwtl
fld
cmp
es
add
mov
leave
stos
fsubp
sbb
ret
inc
dec
movsb
add
add
jo
bound
sbb
push
mov
dec
das
sub
push
cld
dec
pop
cmp
adc
ret
gs
fcoms
aaa
xor
pop
sbbb
push
in
cmp
add
or
sbb
mov
adc
sub
stos
popf
ds
mov
cs
insb
fstpl
cmp
mov
cmp
push
xchg
dec
lret
in
cmpsb
jmp
xchg
or
fs
stc
or
add
rcrl
mov
ret
sub
orb
pop
or
mov
sub
xchg
stos
loop
outsb
or
mov
sub
fnstsw
fildll
pop
outsb
cwtl
xchg
push
inc
or
in
gs
pop
stc
call
nop
push
or
stc
mov
jno
and
mov
arpl
pop
call
cltd
pop
daa
das
mov
or
stos
push
es
clc
cli
mov
sbb
ss
add
fisubrl
or
mov
mov
xchg
pop
in
jne
dec
xchg
pop
xor
scas
push
outsl
pusha
push
fisubl
call
jnp
xor
and
lea
out
insb
add
orl
ret
clc
mov
mov
enter
out
push
jmp
pop
mov
mov
mov
rcrl
insb
pop
cltd
and
cmpsb
mov
jmp
sub
aad
adc
mov
pop
lds
push
sub
xchg
push
jne
cmp
or
push
xchg
out
cmp
push
and
popf
test
movsl
imul
neg
popf
ret
xorl
loopne
in
jo
sub
and
xlat
cltd
negl
pop
icebp
inc
xor
or
jne
mov
dec
imul
call
mov
loop
imul
adc
bound
sub
sub
mov
ds
mov
les
scas
sub
cmp
dec
pop
mov
and
orl
jp
sbb
adc
add
push
pushf
adc
ret
add
fcomp
or
pop
add
sub
jmpw
mov
rcl
out
dec
arpl
fldcw
and
cmpsl
sub
sbb
cmpsb
mov
sti
arpl
mov
xlat
adc
pop
jb
pop
into
leave
cwtl
mov
leave
pop
stc
dec
aad
test
sbb
mov
sub
mov
dec
loop
jne
xchg
aas
insl
popa
mov
and
sub
test
lcall
mov
ss
pop
ret
pop
rolb
xor
movsb
aam
push
shll
pusha
xchg
je
lcall
push
sub
fsubr
xchg
push
push
pop
loope
pop
mov
test
addr16
mov
and
std
cli
loop
cmp
mov
push
icebp
outsl
addl
aam
sbb
pop
mov
mov
shl
icebp
xchg
je
nop
ja
loop
xor
test
or
stc
xlat
jmp
adc
xchg
cmp
ret
out
mov
loope,pt
ret
mov
cmpb
imul
xchg
outsl
lcall
add
inc
dec
aad
mov
lret
lock
aad
push
adc
xor
xlat
popf
call
cmp
shr
jno
xor
mov
rorb
pushf
lcall
pusha
xchg
dec
fistl
mov
and
mov
pusha
adc
push
cltd
sti
or
dec
mov
push
adc
inc
sbb
jle
out
mov
idivb
push
js
ja
and
pop
imul
sub
mov
mov
mov
mov
xchg
sbb
xchg
aas
mov
movb
mov
repz
lcall
dec
mov
and
lret
aas
cltd
jecxz
loope
adc
sub
push
int
mov
pop
inc
xchg
jecxz
mov
xchg
mov
push
dec
test
enter
call
les
shrb
js
loop
dec
shrl
dec
mov
test
inc
sbb
xor
fisubrl
imul
xchg
rorl
sbb
xchg
mov
cmp
push
jb
xchg
test
imul
mov
shrb
cmp
inc
add
mov
in
jecxz
cmp
imul
addr16
or
js
lret
push
xor
push
outsb
cli
pushf
loope
cmc
pop
add
cmp
jno
sub
and
mov
fidivrs
xchg
xor
aas
scas
dec
js
mov
cmc
jae
push
dec
lret
mov
lahf
dec
out
popa
incb
das
push
lret
mov
popa
add
mov
in
push
push
jae
mov
hlt
daa
cmp
jl
in
addr16
mov
insb
dec
push
inc
mov
stos
mov
lock
cmpsb
sub
add
adc
mov
ret
arpl
imul
enter
ds
xor
sbb
push
setns
adc
push
jl
fistl
fstl
pop
out
icebp
mov
mov
lock
mov
cmp
xchg
inc
cmp
push
adc
and
inc
xchg
mov
sti
add
ret
int
adc
xchg
add
cmpsl
fsubrl
jnp
dec
in
leave
mov
ja
jnp
div
push
clc
pusha
xor
cmp
xchg
adc
inc
shl
xlat
push
bound
loopne
movsl
bound
pushl
dec
gs
cltd
insb
mov
nop
addl
lock
and
das
dec
xor
mov
add
push
leave
mov
xchg
or
cld
cld
fs
scas
scas
cwtl
dec
ret
fcoms
or
sub
stos
stc
sbb
sahf
cmpsl
popa
dec
fs
sbb
jb
shl
jns
movl
mov
rcll
mov
adc
mov
notb
push
adc
xchg
das
insb
js
mov
arpl
xor
lahf
cmpsl
scas
sti
xchg
in
out
xor
xor
pop
test
push
jb
imul
gs
cmp
js
or
jp
or
add
fstl
mov
lods
xor
mov
pusha
and
dec
cwtl
test
insb
aam
test
pushf
cli
cld
mov
adc
mov
mov
push
pop
bound
xchg
xchg
mov
pop
sub
ljmp
lods
js
pushf
cmp
movsb
pop
insb
pusha
jb
mov
and
movsb
mov
jecxz
fisubl
pusha
adc
call
mov
shrl
dec
dec
outsb
icebp
xor
pusha
xchg
sbb
push
outsb
adc
pop
push
aad
xchg
jno
stos
xchg
lahf
inc
popa
fdivs
popf
sub
dec
mov
dec
cmp
xchg
subb
dec
ljmp
scas
xchg
push
or
sarl
xchg
push
pop
xor
xor
mov
jmp
cmp
adc
orl
cmp
scas
and
dec
add
js
out
pop
or
ret
sbb
adc
jecxz
and
pop
push
decb
xor
test
jb
and
dec
push
xor
pop
pop
ss
mov
es
mov
or
or
jbe
xlat
arpl
adc
in
lock
jle
fsubs
cmpsb
fmulp
sbb
dec
pop
pop
pop
mov
sbb
punpckhbw
ljmp
pop
add
jb
pop
lock
mov
add
std
sub
sub
adc
and
mov
lea
mov
dec
cmc
inc
jle
outsb
in
mov
sbb
push
or
pop
cmp
repnz
cmp
cmpb
sub
out
dec
mov
dec
add
dec
and
push
cld
ja
pop
jno
cmp
push
ficoml
fsubp
and
push
mov
lret
dec
call
cs
std
add
cli
int3
pop
sbbb
loope
pop
dec
ds
subl
std
enter
imul
cwtl
and
pop
pop
imul
xlat
das
js
cld
flds
ret
or
inc
enter
pusha
xchg
push
push
mov
and
testb
cs
in
fdiv
pop
rclb
ds
inc
test
cmp
clc
shr
push
cmp
push
punpckhdq
out
mov
test
xlat
push
shll
das
push
jge
mov
mov
addr16
repz
clc
mov
adc
mov
pop
repz
in
mov
mov
inc
fwait
idivl
cli
data16
pop
adc
pop
cmp
jmp
adc
mov
sub
xor
and
xor
es
iret
adc
inc
bound
lods
in
lahf
ret
add
mov
outsl
push
daa
loope
add
xor
insb
rcrl
in
push
ljmp
fstl
loope
pop
cmpsl
aaa
scas
es
mov
cmpsl
stc
mov
insl
and
jae
jno
mov
mov
or
iret
and
les
pop
inc
outsb
add
and
adc
lock
jno
pop
push
push
or
push
and
mov
lahf
andl
and
stc
bound
in
outsb
hlt
adc
ret
rclb
test
loopne
push
adc
adc
mov
sbb
mov
fsts
xor
mov
xor
lods
xchg
out
out
xchg
and
out
mov
jo
mov
scas
pop
out
push
jg
push
aad
jae
add
mov
pop
fisubl
ljmp
orl
add
int
mov
dec
push
adc
scas
out
clc
aam
aaa
int
cld
iret
jp
pop
adc
fdivs
shl
shr
and
add
add
fwait
int3
rorl
shlb
pop
and
andb
aaa
or
sub
in
ja
movl
xor
inc
outsb
jae
add
cmc
cltd
jg
mov
mov
mov
ja
add
or
ds
pop
fdivrl
into
inc
aad
add
fmulp
push
pop
sub
and
int3
dec
les
jge
sbbw
pusha
xchg
out
inc
mov
adc
push
jnp
lret
data16
fistps
rolb
xchg
iret
fmull
push
repnz
loopne
gs
lea
int
push
xchg
xorb
scas
cmp
testl
loop
rclb
mov
fsts
xchg
into
inc
fldenv
adc
repz
mov
fildl
push
dec
cmp
sub
cmovs
popf
pop
out
call
and
mov
fcomip
mov
lret
cwtl
mov
add
mov
test
xor
mov
dec
mov
sbb
mov
cmp
aas
pop
test
xor
jmp
je
mov
in
fstl
imulb
xor
adc
push
lret
lret
cmp
imul
adc
mov
xchg
jnp
mov
xchg
les
or
imulb
das
enter
pop
mov
repz
xchg
loope
mov
adc
push
inc
jmp
cmp
aad
sbb
lret
cmp
mov
xchg
jmp
push
add
idiv
mov
xchg
pop
std
or
hlt
loope
xorl
push
xchg
rorl
stos
loopne
cmp
push
cmp
icebp
fmul
fs
mov
bound
jp
cltd
xor
push
fidivrs
dec
ja
roll
jbe
imul
mov
dec
popl
xor
lret
push
push
pop
adc
mov
int
int3
fwait
movsb
dec
test
push
cmp
test
ret
pop
cmpsb
mov
movsl
pop
pop
add
xor
sbb
mov
jl
cmp
cmp
mov
and
mov
cmc
inc
mov
aas
das
ret
in
mov
or
push
test
fcoms
mov
out
add
jg
in
shlb
aas
popf
push
cmp
xor
in
xchg
xor
dec
shl
adc
lret
push
cwtl
cs
cmp
loopne
daa
xchg
lcall
fwait
outsl
pusha
dec
in
push
daa
mov
sbb
stos
daa
adc
fdivs
jne
lock
pusha
call
xorl
js
int3
push
xchg
insb
push
lret
mov
in
fisubrs
ss
cli
aaa
or
adc
jns
dec
sub
sbb
inc
adc
add
push
leave
stos
push
stc
popf
dec
sub
cmp
gs
leave
popa
leave
and
or
addr16
lret
sti
mov
xor
or
aad
test
pop
jb
movl
pushf
mov
iret
push
adcb
mov
call
mov
pop
xchg
fld
xor
call
pop
jge
mov
sub
lret
ret
inc
stos
ja
aam
testb
add
sub
xor
rorl
popf
xchg
mov
pop
push
out
mov
sub
sub
or
mov
mov
cmp
xlat
sbb
sub
jl
dec
fisttpl
mov
sub
jecxz
es
cli
shl
dec
outsl
and
sub
xor
jns
add
sbb
addr16
push
jb
test
enter
sub
jo
or
lods
pop
push
cmp
xor
ljmp
mov
jo
into
pop
repnz
js
fmuls
pop
popf
lods
xchg
mov
xchg
sub
push
std
jle
sub
xor
mov
test
sbb
sub
int
push
loope
pusha
xchg
mov
shrb
adc
mov
mov
popf
out
in
mov
jmp
adc
test
aaa
cs
popl
test
lcall
mov
mov
aas
mov
and
push
mov
inc
xor
xorb
out
dec
fchs
xor
mov
and
mov
repz
pop
push
adcl
popf
movsb
xchg
xor
xor
xor
xor
imul
in
push
inc
ljmp
andl
mov
adcl
scas
inc
or
int
xchg
inc
adc
add
pop
enter
stc
ret
jecxz
fstpt
sarb
xchg
out
pop
cmc
pop
loope
nop
push
frstor
in
sub
and
mov
in
mov
inc
cs
sbb
mov
push
lods
stos
shrb
insl
loope
ljmp
loope
pop
xchg
movsl
mov
and
int3
jo
add
clc
mov
push
pop
push
pop
movsb
bswap
push
sub
pop
mov
and
test
loope
cli
ficompl
jnp
and
cmpsl
in
out
mov
fisttpl
or
mov
clc
cmc
addr16
das
cmp
fisttpl
testb
jp
pushf
xchg
stc
cmpsb
sbb
jle
jge
repnz
arpl
lock
in
sub
xor
push
or
lcall
lcall
mov
out
mov
push
sahf
push
dec
fistl
xchg
sti
xor
imul
mov
sub
mov
add
test
mov
je
pop
dec
cmp
mov
dec
xchg
movsl
loop
std
jo
insb
xor
je
cmp
dec
pop
inc
xchg
in
test
ret
mov
push
das
pop
arpl
sub
pop
scas
mov
mov
add
and
pop
xlat
shl
cmp
sbb
push
movsl
nop
fmuls
sbb
jno
mov
outsl
scas
stos
dec
push
inc
adc
in
sub
mov
inc
out
sbb
imul
fidivs
iret
ds
lahf
nop
xchg
mov
add
test
nopl
pop
or
movb
jecxz
mov
jle
jns
pop
lods
cmpsb
pop
cmp
add
int3
inc
pop
and
sarb
fidivl
repz
ret
nop
imul
push
popa
adcb
mov
imul
fsubrs
xchg
fisttps
fists
shll
adc
add
pop
adc
cwtl
test
ficomps
les
and
out
int3
clc
rolb
imul
repnz
jp
adc
int
mov
clc
cmc
inc
in
stc
xor
pop
mov
add
xor
and
leave
andb
cwtl
pop
adc
push
xchg
xor
cmpsb
pop
cmpsl
push
and
js
loop
or
scas
pop
cli
hlt
movsl
pop
lcall
or
dec
add
notl
pop
notb
stc
in
xorl
and
loope
in
sets
adc
mov
add
xchg
sub
adc
imul
push
push
sbb
cli
je
jb
mov
iret
aam
into
sbb
lods
cmp
mov
insb
add
xor
gs
xor
pop
mov
nop
jp
sub
insb
int3
mov
mov
mov
sbb
rcrl
dec
add
add
inc
int3
clc
in
stc
mov
push
sub
add
xchg
fisubl
pushf
outsl
pop
imul
fistpl
loop
or
adc
lock
je
pop
sarl
mov
dec
gs
pop
cmp
push
dec
aam
push
mov
jmp
or
out
ja
push
mov
sbb
rorl
mov
in
jl
fimuls
cs
stos
out
xchg
cmpsb
decl
imul
cmpsb
mov
pop
push
dec
pop
leave
repz
sbb
mov
xchg
adc
aad
adc
stos
lods
add
test
push
fimull
test
nop
mov
addr16
loop
out
xor
int
sbb
add
ljmp
minps
int
add
mov
decb
inc
sub
fdivs
lds
enter
outsb
nop
and
jbe
and
test
out
inc
cltd
aad
xchg
adc
in
mov
inc
push
in
lock
filds
mov
mov
jle
mov
pop
cmp
inc
loop
stc
sarb
lcall
xchg
jne
or
loop
add
test
mov
dec
dec
sbb
ret
mov
add
dec
adc
ja
jecxz
stos
mov
sbb
xor
pushf
arpl
lods
adc
sbb
mov
push
mov
xchg
push
ret
push
outsl
cs
lea
mov
inc
xchg
pop
hlt
sbb
ja
jge
cli
outsb
incb
fstl
xchg
fucomip
lds
scas
pushf
outsb
xor
loop
iret
inc
cwtl
hlt
fsubl
lret
loop
cmc
mov
ss
xor
xchg
jno
loope
test
into
rcrb
jmp
xor
arpl
sbb
xchg
sbb
and
push
mov
add
andl
std
out
rorb
add
hlt
sbb
out
jge
push
incb
dec
sub
xchg
je
ljmp
xchg
jne
repz
cwtl
pushf
inc
cwtl
add
cmp
cmc
sub
sbb
mov
push
inc
dec
loope
loope
cmc
mov
sbb
xchg
mov
inc
xor
ja
adc
lea
add
gs
mov
jne
ret
push
dec
fldenv
shrl
rorb
je
hlt
sbb
push
fwait
jge
fidivrl
incb
mov
loop
ljmp
xchg
jne
push
inc
cwtl
aam
stos
fnsave
mov
adc
xchg
push
jmp
dec
gs
xor
mov
xchg
push
jmp
test
jbe
mov
mov
nop
nop
nop
nop
nop
sub
mov
jmp
andl
push
mov
jmp
movzbl
inc
jmp
cmpl
je
mov
jmp
xor
test
jle
jmp
test
jne
mov
mov
jmp
and
cmp
jne
jmp
je
lea
push
jmp
cmp
pop
jmp
mov
test
je
test
jmp
je
jmp
add
add
add
jmp
movb
movb
jmp
mov
mov
add
mov
jmp
dec
mov
jmp
call
test
pop
jmp
je
movzwl
jmp
lea
push
push
jmp
mov
jmp
mov
mov
jmp
popa
jmp
ret
add
add
add
test
out
add
dec
or
test
testl
pop
push
add
add
add
mov
mov
test
jmp
mov
sub
jmp
push
push
push
pushl
jmp
inc
test
jmp
add
add
rolb
add
mov
andl
mov
mov
jmp
push
jmp
add
cmp
add
xor
jmp
add
rorb
add
add
fldl
add
mov
jmp
pop
jmp
add
pop
add
add
add
mov
push
jmp
mov
jmp
mov
shr
shl
jmp
mov
mov
ret
add
add
add
jle
add
pop
cmpl
jmp
call
jmp
push
shr
push
mov
jmp
pusha
jmp
add
push
push
jmp
lea
jmp
pushl
nop
nop
nop
nop
nop
call
pushl
lea
jmp
push
add
jmp
push
mov
mov
mov
jmp
pop
jne
mov
jmp
je
push
push
mov
jmp
jne
cmpb
jne
pushl
nop
nop
nop
nop
nop
jmp
pushl
jmp
add
add
je
adc
sti
cld
call
xor
jmp
test
jmp
add
in
jmp
mov
jmp
jne
ret
mov
mov
jmp
push
xor
push
jmp
mov
jmp
mov
mov
mov
add
jmp
orb
jmp
xor
mov
and
jmp
movl
jmp
jne
pop
ret
add
add
add
add
jmp
call
add
jmp
mov
xor
mov
jmp
incl
incl
jmp
mov
jmp
mov
add
add
jmp
mov
jmp
cmpl
jmp
add
in
push
mov
jmp
push
andl
lea
jmp
je
push
jmp
xor
push
mov
jmp
lea
mov
mov
xor
jmp
pop
ret
add
add
add
or
adc
mov
jmp
push
push
jmp
push
push
push
jmp
add
or
xor
pushl
jmp
push
jmp
mov
jmp
popa
cmpl
jmp
push
jmp
add
add
mov
jmp
je
mov
cmpl
jmp
mov
add
shr
and
jmp
mov
xor
mov
mov
jmp
mov
call
jmp
xor
mov
leave
ret
add
add
add
fs
incl
decl
jl
add
mov
mov
jmp
cmp
je
mov
jmp
push
push
jmp
mov
movzwl
mov
jmp
pushl
push
call
jmp
mov
xor
test
je
jmp
mov
mov
test
jmp
mov
add
nop
nop
nop
nop
nop
push
call
jmp
add
add
pop
jmp
mov
jmp
call
pop
test
jmp
mov
mov
jmp
jne
pop
ret
add
add
add
cltd
pop
jmp
shr
jmp
mov
idiv
jmp
push
lea
push
jmp
je
add
jmp
mov
add
lea
jmp
push
jmp
add
call
push
mov
jmp
mov
jmp
andl
push
push
jmp
push
push
push
push
jmp
or
movsbl
mov
xor
jmp
push
pusha
nop
jmp
sub
add
cmpl
jmp
lea
push
lea
jmp
push
push
jmp
mov
ret
add
add
add
and
incl
add
in
push
jmp
mov
sub
jmp
push
jmp
lea
sub
jmp
test
jle
jmp
and
jmp
movb
jmp
call
call
mov
xor
jmp
jle
mov
sub
sub
jmp
add
test
add
call
jmp
je
incl
jmp
pushl
push
call
jmp
mov
movb
movb
mov
jmp
mov
test
jmp
test
pop
je
jmp
addl
mov
cmp
jl
jmp
jmp
mov
add
jmp
xor
jmp
mov
mov
jmp
add
push
push
call
jmp
pushl
mov
sub
pushl
jmp
jne
add
jmp
call
jmp
jle
jmp
push
xor
pop
lea
jmp
movzwl
mov
jmp
cmpl
jne
pop
jmp
test
jmp
mov
add
jmp
push
jmp
add
dec
jne
mov
jmp
call
dec
jmp
add
pop
pop
jmp
je
mov
add
add
jmp
push
call
push
jmp
pop
push
pop
pop
jmp
jne
lea
addb
call
jmp
pop
leave
ret
add
add
add
idiv
incl
idiv
pushl
shr
add
add
dec
idiv
call
jmp
leave
ret
add
add
add
clc
jmp
test
jle
mov
shl
jmp
pop
nop
nop
nop
nop
nop
lea
jne
mov
jmp
jmp
push
pop
jmp
push
call
add
jmp
test
jmp
shr
jmp
pop
jmp
push
jmp
pop
jne
lea
jmp
or
xor
add
jmp
test
je
mov
sub
jmp
dec
jne
pop
pop
jmp
mov
mov
jmp
jmp
pop
pop
pop
ret
add
add
add
push
jmp
call
mov
jmp
call
jmp
add
lea
jmp
call
cmp
je
push
jmp
pop
leave
ret
add
add
add
hlt
jmp
pop
jmp
jmp
mov
push
jmp
push
nop
nop
nop
nop
nop
push
pushl
push
call
jmp
mov
mov
jmp
pop
jmp
mov
jmp
mov
lea
push
push
jmp
movzbl
incl
mov
and
nop
nop
nop
nop
nop
inc
inc
shr
je
jmp
test
je
pushl
add
jmp
call
cmp
je
jmp
pushl
jmp
cmp
je
cmp
jmp
test
je
jmp
push
jmp
je
mov
pushl
jmp
mov
jmp
call
mov
push
jmp
mov
sub
mov
mov
jmp
push
call
jmp
incl
jmp
add
jmp
push
call
jmp
dec
jne
jmp
jmp
add
cmpl
jne
call
jmp
mov
jmp
push
pop
pop
pop
jmp
add
mov
jmp
mov
jmp
lea
push
push
pushl
jmp
mov
push
pop
jmp
pop
leave
ret
nop
nop
nop
nop
nop
xor
jmp
add
add
add
xlat
jmp
jmp
jmp
push
jmp
call
test
pop
nop
nop
nop
nop
nop
jne
cmp
jmp
push
mov
call
push
nop
nop
nop
nop
nop
push
mov
call
jmp
jne
lea
push
call
jmp
push
jmp
test
jmp
push
jmp
pop
jmp
mov
call
push
jmp
je
mov
mov
jmp
push
mov
call
add
jmp
sub
jmp
mov
mov
jmp
mov
mov
jmp
pop
pop
pop
leave
jmp
incl
dec
jne
jmp
ret
add
add
add
incl
add
add
dec
dec
nop
nop
nop
nop
nop
mov
shl
movzbl
nop
nop
nop
nop
nop
add
incl
mov
nop
nop
nop
nop
nop
lea
push
call
nop
nop
nop
nop
nop
cmp
pop
nop
nop
nop
nop
nop
jb
inc
nop
nop
nop
nop
nop
cmp
jb
nop
nop
nop
nop
nop
inc
cmp
jae
inc
nop
nop
nop
nop
nop
inc
test
nop
nop
nop
nop
nop
je
nop
nop
nop
nop
nop
mov
mov
sub
mov
nop
nop
nop
nop
nop
mov
incl
dec
jne
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
mov
mov
mov
mov
nop
nop
nop
nop
nop
incl
incl
xor
cmpl
nop
nop
nop
nop
nop
je
mov
pop
nop
nop
nop
nop
nop
sub
nop
nop
nop
nop
nop
pop
pop
leave
ret
add
mov
add
add
add
sbb
add
add
add
push
add
xor
add
push
push
add
inc
push
add
add
add
cld
or
add
add
add
es
add
mov
add
orb
add
or
add
add
add
xchg
push
add
orb
add
add
sbb
add
add
add
push
add
xor
add
push
push
add
inc
push
add
add
add
jge
inc
js
je
jb
arpl
jae
dec
inc
push
dec
inc
dec
xor
cs
insb
add
or
inc
imul
add
incl
inc
gs
gs
je
jo
imul
xchg
add
jo
je
push
popa
addr16
add
roll
gs
popa
addr16
outsl
js
outsb
imul
push
push
inc
push
xor
cs
insb
add
or
inc
jb
add
dec
xor
cs
insb
add
mov
dec
repz
addl
adc
add
push
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
and
cmp
and
add
add
add
rolb
add
adc
add
add
add
lret
xchg
xor
add
add
add
loopne
add
adc
add
add
add
sbb
cmp
add
add
add
add
add
add
add
xor
add
add
add
repz
xchg
dec
dec
jecxz
addl
adc
add
pop
addl
pop
repz
std
add
nop
add
add
inc
xor
xor
fnstenv
add
and
add
cmp
aaa
cmpsl
cmp
cmp
cmp
cmp
mov
ss
cmp
cmp
inc
xor
cmp
cmp
cmp
cmp
cmp
jae
cwtl
ds
mov
ss
aaa
shll
fnstenv
push
cmp
dec
xor
pop
xor
mov
mov
add
xor
and
sub
inc
aaa
dec
aaa
push
aaa
insb
aaa
