test
stos
lock
cltd
lcall
adc
mov
ret
loop
pop
jo
adc
stc
in
outsb
sub
mov
adc
out
xor
add
adc
mov
xchg
jae
jae
adc
jbe
adc
inc
pop
ret
shlb
sti
sub
dec
jnp
or
jbe
adc
fwait
sbb
out
push
add
dec
pop
pop
je
jbe
adc
adc
mov
pushw
xchg
addr16
int3
jae
adc
in
xchg
jbe
adc
fildl
nop
aad
dec
leave
mov
xchg
sbb
int
cwtl
fs
jo
push
negl
lcall
cmp
fsubrl
adc
jns
lods
paddb
xor
lahf
movsl
xor
mov
in
and
popf
jecxz
mov
bound
add
loope
imul
adc
mov
jae
adc
test
or
xchg
lret
or
fwait
gs
test
adc
adc
pop
adc
movsb
outsl
push
nop
xorb
fsubs
mov
daa
inc
sti
out
sahf
sub
or
repz
adc
sub
out
adc
mov
ljmp
cmp
enter
dec
pop
push
mov
or
clc
test
adc
push
clc
repz
mov
lea
adc
mov
pop
mov
dec
add
mov
adc
mov
pushf
nop
jae
adc
daa
or
fnstcw
enter
cmp
outsb
pop
aam
jnp
in
xchg
jge
push
jp
ficomps
xchg
in
jp
outsl
leave
ret
pop
inc
stos
cld
xchg
inc
jae
out
xchg
daa
loopne
push
adc
outsb
loop
xchg
popa
cmc
jnp
add
mov
cmp
insb
popa
push
cmp
sbb
out
adc
adc
ljmp
ds
lea
inc
pop
loope
ret
push
jle
inc
add
pop
mov
shlb
adc
mov
or
dec
aas
stc
adc
movsl
mov
outsb
hlt
aas
cld
add
ljmp
stos
inc
fnstcw
cmp
out
enter
ror
xor
sub
sbb
xlat
cmp
cmp
xor
lock
adc
jp
and
jae
call
mov
gs
cli
add
pop
out
mov
sarl
push
mov
pop
mov
push
xor
sub
jl
les
adc
xchg
hlt
cmp
imul
mov
pusha
mov
dec
imul
add
enter
xchg
pushf
pop
lcall
sbb
arpl
jo
push
adc
jae,pt
iret
arpl
lcall
add
out
cmp
adc
add
adc
adc
add
adc
mov
pushf
icebp
mov
dec
imul
jl
adc
and
repnz
inc
jne
push
sub
rorl
xchg
xlat
js
je
push
adc
jnp
dec
cmp
mov
mov
inc
outsl
cmpsl
fistl
insb
mov
xor
sub
js
into
repz
jae
and
out
adc
shrl
lods
mov
js
push
adc
sbb
loop
sbb
fisubl
popa
xchg
or
inc
shlb
xor
es
adc
jge
mov
pop
push
sbb
mov
push
adc
out
gs
lcall
push
push
psrlw
test
or
xchg
hlt
cmp
std
and
ja
adc
in
mov
xchg
dec
mov
push
adc
mov
sbb
daa
mov
adc
pusha
fisubs
shll
sbb
js
lret
sbb
pusha
mov
stos
xor
mov
lds
arpl
dec
shll
into
jmp
outsl
lods
out
fwait
dec
push
push
pop
call
cli
es
inc
lock
test
adc
pushf
test
push
xor
adc
loope
pop
inc
js
jp,pt
pop
xor
xorl
push
adc
loop
mov
pop
jmp
adc
sub
pop
dec
roll
push
pop
mov
adc
inc
popf
daa
push
inc
cmpsl
push
mov
nop
rol
fldcw
in
mov
mov
cmp
or
hlt
filds
insb
sbb
cli
push
inc
mov
xlat
jae
jo
adc
xlat
ret
call
jno
add
xor
data16
imul
scas
fcoms
push
adc
pop
sub
push
adc
xchg
jg
pop
add
repnz
cltd
xchg
jle
fdivs
xor
into
pop
xor
outsb
fwait
pop
addl
sar
mov
adc
adc
push
rcr
in
es
jbe
in
bound
les
inc
xchg
jecxz
outsb
hlt
cld
sti
cltd
add
and
clc
mov
add
sub
sub
inc
nop
dec
lcall
jo
adc
mov
jbe
pop
add
es
jne
mov
inc
les
pop
enter
xchg
pop
xor
int3
test
out
xchg
ja
mov
shll
and
nop
jo
adc
sbb
ljmp
out
xchg
xchg
rol
jbe
test
sbb
push
adc
pushf
pop
jns
xchg
aad
iret
rorb
add
std
nop
jo
adc
jne
pusha
inc
mov
pop
mov
inc
in
sbb
push
adc
neg
pop
jae
enter
pop
cmc
frstor
pop
jbe
cmp
mov
fxch
es
mov
lock
pop
imul
jbe
add
mov
cld
in
jle
ja
call
pop
push
xchg
jo
adc
lret
and
fildl
das
jb
jnp
ficomps
fsqrt
aas
out
mov
xchg
jmp
pop
popf
dec
pop
scas
jge
enter
out
cmpsl
call
mov
add
adc
fisubs
and
adc
mov
xchg
pop
mov
mov
pop
dec
lds
jo
adc
fadds
sub
icebp
out
mov
mov
les
jo
inc
outsb
cmp
cmp
xlat
push
out
iret
je
jo
adc
mov
push
jae
into
ja
std
sub
insl
cmp
inc
mov
in
xchg
adc
adc
bound
popf
cmp
cmp
nop
jo
adc
push
cmpsb
stos
lea
xor
add
hlt
xor
xchg
mov
into
pop
and
insb
mov
xchg
clc
popa
ret
xchg
xchg
cs
call
adc
push
xchg
xchg
mov
xor
inc
add
xor
lcall
daa
rcll
jo
ret
or
cltd
mov
xchg
arpl
adc
mov
sub
jle
daa
int
fmuls
mov
pop
movsb
and
fisttps
test
jns
xchg
cmp
mov
and
add
or
push
adc
mov
sub
sbb
gs
decl
mov
push
out
cmp
mov
jae
adc
add
or
adc
clc
ja
adc
insb
mov
adc
insb
mov
fs
push
xchg
xor
sti
insb
aaa
test
sbb
mov
movsb
cmp
sbb
js
and
xor
or
sbb
inc
push
cmp
dec
mov
mov
mov
sbb
inc
xchg
insb
lea
pop
xchg
xchg
sbb
push
mov
adc
fimull
mov
data16
fimuls
repnz
pop
out
jge
mov
inc
and
cmpsl
in
xchg
jb
addl
adc
cs
push
repz
xchg
bsr
mov
push
stos
mov
sbb
test
push
xor
out
pop
into
dec
cmp
pop
sub
inc
call
pop
insl
and
mov
clc
popf
mov
xorb
fcomp
pop
stos
mov
mov
or
imul
inc
dec
insl
out
xor
inc
mov
vmwrite
pop
outsb
jns
push
dec
out
repnz
pop
xchg
inc
fmulp
or
inc
mov
jnp
test
loopne
stos
dec
movsl
push
fsqrt
xor
mov
pop
das
std
cmpsl
inc
bound
fs
jge
lcall
mov
addr16
or
xchg
popf
fmuls
fs
leave
loope
mov
dec
insb
mov
pop
adc
jmp
out
fstpt
mov
popl
jne
ljmp
push
mov
mov
mov
or
cld
pop
das
mov
mov
push
adc
jl
in
int3
pop
hlt
pop
cmpsl
iret
pop
jl
mov
or
and
data16
jb
jne
in
sub
add
jp
dec
out
mov
sbb
lcall
dec
pop
pusha
mov
stos
lods
sub
hlt
cmp
andb
pop
jns
loopne
aad
adc
shlb
sbb
lds
mov
mov
test
xchg
repz
jmp
cmp
enter
adcl
sahf
out
or
loop
mov
fisubrl
dec
adc
js
add
xchg
loopne
jp
push
or
lods
pop
shlb
adc
lock
test
stc
sarb
daa
lret
addr16
inc
pushf
jb
pop
add
sbbl
loopne
cld
xor
mov
repz
xor
in
bound
movb
sbb
rsqrtps
aaa
pop
out
lret
fmuls
cmp
xchg
mov
xlat
jg
mov
loope
inc
lcall
inc
ficoml
xchg
xor
filds
xchg
lret
fwait
jmp
or
cmc
pushf
mov
sub
fidivl
sub
out
mov
adc
es
int
mov
adc
outsl
incl
out
push
mov
test
adc
scas
jnp
xor
testl
repnz
jo
ret
and
test
xor
repz
xchg
cs
je
ficomps
pop
loop
js
xchg
stos
mov
roll
lret
sbb
mov
popf
dec
jne
xchg
and
lds
loop
test
jae
int
cmp
pop
loopne
je
jns
ret
fiadds
shl
int3
sarb
xchg
add
rolb
add
inc
loop
test
jle
rcll
lea
sub
add
push
jno
lods
clc
sub
jbe
push
xor
and
dec
stos
inc
mov
cmpsl
popf
sbb
movsl
sbb
cmp
xchg
js
cmc
jnp
in
shll
xchg
inc
inc
jp
addb
sub
mov
ljmp
cwtl
cli
sub
dec
repz
cld
lcall
sbb
cmp
icebp
pop
xor
xchg
std
test
dec
sbb
out
or
insb
bound
jmp
insb
or
cs
scas
push
adc
inc
inc
jl
jmp
xchg
ljmp
out
mov
das
in
mov
inc
or
gs
cmp
test
jne
xchg
cmp
push
adc
sbb
mov
pusha
js
adc
movsl
inc
mov
lcall
dec
mov
into
lds
mov
sbb
jbe
jmp
jo
push
adc
add
shrl
adc
jo
sbb
lret
daa
add
out
js
adc
and
xchg
mov
in
dec
jae
mov
ret
xor
fstps
sbb
aaa
fmuls
adc
ljmp
arpl
jne
jae
cmp
sub
pop
xlat
sti
xchg
inc
dec
pop
jecxz
cmp
out
ss
push
dec
jb
icebp
cmp
fcomip
inc
jg
lcall
pop
push
add
into
push
cli
push
int
orb
mov
adc
jnp
in
xor
inc
sbb
mov
push
pop
add
dec
jg
dec
in
icebp
scas
mov
mov
inc
cmp
jae
ss
sbb
int3
cld
jne
mov
inc
pop
or
sbb
mov
lret
in
jae
int
xchg
sbbl
pop
cmp
add
mov
je
xor
mov
jo
loopne
or
sbbl
mov
mov
outsb
inc
xchg
dec
daa
cmp
leave
pop
inc
push
gs
adc
push
or
jo
adc
xchg
xchg
in
pop
movsb
push
into
mov
iret
xchg
cmp
rclb
jl
adc
int
xchg
cmp
mov
in
out
das
inc
leave
movsl
push
imul
or
sub
addr16
sub
jp
adc
mov
rorb
inc
inc
inc
xor
jns
mov
cmp
test
mov
flds
inc
jg
cmp
lock
lahf
cmc
add
or
dec
sahf
mov
push
outsb
ja
cmp
xlat
mov
inc
aad
jge
pop
push
ret
aas
pop
lock
xchg
popf
mov
sbb
jecxz
idivb
popf
xor
in
adc
outsb
pop
add
xor
adc
push
fldpi
jmp
xchg
out
mov
xchg
call
jns
mov
or
pop
sub
jnp
cmc
aaa
jno
shrl
pushf
sbb
xchg
outsb
sbb
gs
outsl
stos
mov
mov
repz
clc
xor
push
gs
jg
jae
lods
jo
adc
dec
jle
js
pcmpgtw
fs
adc
add
sub
sub
out
and
sub
adc
ret
pop
in
outsl
incl
dec
push
fimull
and
sbbl
dec
mov
push
lret
and
fstps
or
mov
and
les
dec
ret
cld
add
pop
out
fcoml
mul
int
or
jno
rcrb
jae
lret
in
into
mov
mov
mov
mov
or
arpl
arpl
int3
adc
and
and
xchg
xchg
ja
fwait
push
sbb
dec
cli
xchg
inc
andb
scas
out
iret
sahf
dec
jbe
out
dec
imul
jecxz
pop
fwait
mov
add
pop
pop
shr
mov
sarl
jnp
xchg
imul
aas
es
sub
sub
rcrl
xor
adcb
arpl
pop
nop
ja
add
fsubs
aaa
jns
inc
fldcw
fcmovu
mov
fwait
jecxz
scas
clc
sub
cmp
insl
daa
push
adc
into
fs
fdivrs
fs
enter
cltd
lret
imul
mov
ss
nop
inc
imul
inc
mov
sbb
aad
lcall
je
test
xchg
stos
mov
and
adc
insb
jmp
cmp
adc
sti
jb
jmp
mov
xchg
lods
addr16
lods
mov
mov
sub
adc
dec
das
mov
popa
or
or
add
push
mov
pop
sahf
or
cmp
xchg
or
sbb
movsb
jns
mov
pop
adc
sahf
lds
inc
hlt
xchg
sbb
repz
loopne
and
fdivrs
push
inc
jae
test
call
pop
test
push
ja
xchg
mov
cmp
in
jb
or
jmp
rorl
cwtl
jecxz
push
sbb
xchg
stc
test
xchg
addr16
push
dec
in
and
xor
mov
mov
sub
adc
int3
mov
xchg
dec
sbbl
cmp
ret
lcall
cltd
dec
xchg
out
hlt
sub
push
pop
dec
fildll
sbb
and
and
dec
pop
imul
dec
sbb
gs
adc
adc
sbb
test
leave
jbe
ret
jg
fimuls
push
add
mov
fisttpll
pop
bnd
lcall
pop
inc
repnz
rol
ljmp
add
jmp
in
mov
xor
subl
add
mov
popa
popa
mov
mov
and
ffreep
push
jne
arpl
mov
lods
imul
dec
cmp
in
repnz
in
jbe
sbb
adc
aas
pop
jbe
lcall
je
dec
fdiv
cmp
movsb
iret
mov
and
cmp
sbb
fcoml
xor
sarl
inc
clc
mov
daa
pop
mov
inc
xchg
repnz
pop
push
push
fldenv
sbb
cwtl
push
adcl
repz
or
sahf
cmp
rep
lcall
popf
adc
arpl
add
test
adcl
pop
xor
aaa
fidivrl
mov
arpl
fwait
rorl
int
lds
jae
inc
jge
add
out
int
xor
xlat
xor
adc
arpl
add
loop
fs
mov
mov
jnp
out
xchg
and
mov
call
loop
pop
cs
outsl
out
iret
sahf
mov
xchg
dec
dec
fldenv
imul
loopne
or
ljmp
jae
pusha
in
inc
mov
xor
xchg
stos
inc
mov
movsb
iret
push
cmp
push
xchg
cmpsl
dec
pop
cs
iret
adc
sahf
cmp
xchg
pop
lds
dec
mov
inc
add
cmp
xchg
fxch
mov
pop
mov
iret
mov
out
cmpsb
inc
adc
stos
inc
mov
push
cmp
jp
mov
cmp
pop
mov
cmp
pop
xchg
mov
cmp
rorl
xor
arpl
xchg
shrl
out
mov
outsl
mov
out
cld
pop
jno
out
insl
inc
adc
stos
inc
mov
dec
inc
stc
loop
dec
and
lcall
andl
mov
dec
mov
mov
xor
icebp
es
add
pop
add
iret
mov
mov
jae
xor
sbb
es
push
dec
jg
out
jmp
clc
cmp
out
cmpsl
cmp
shll
adc
arpl
pop
add
add
mov
xor
fs
out
adc
pop
mov
dec
lea
inc
adc
xchg
cmp
mov
mov
in
pop
and
pop
ds
mov
jbe
int3
cmpsl
outsb
in
inc
and
pop
cmp
or
test
push
mov
xor
cmp
mov
sbb
xchg
xor
xchg
cmp
test
dec
or
pop
xor
sbbb
cmp
imul
jmp
add
sahf
movsl
and
xchg
xchg
or
sbb
lret
fistps
and
sarl
adc
xor
std
jnp
fadd
loopne
in
fnsave
lods
test
xchg
pop
cmp
or
cmpsl
int3
push
ja
xor
das
pop
mov
push
or
or
sub
or
push
sbb
fstl
sub
jo
adc
enter
pop
testl
adc
cmp
pop
xor
inc
push
aam
cwtl
imul
mov
cmp
fistl
in
xchg
jge
out
mov
ret
fisubs
gs
push
adc
cmc
mov
rcrl
iret
add
jne
hlt
loopne
push
adc
inc
add
adc
xchg
lods
xor
leave
mov
push
adc
std
test
mov
or
shrb
negb
sti
mov
addl
in
or
in
enter
mov
imul
iret
call
jg
mov
or
sub
test
les
das
scas
mov
dec
cmp
dec
sbb
add
adc
cmpsl
out
or
setns
xchg
jns
lods
sti
sub
mov
xor
jnp
mov
inc
into
push
ja
fildll
mov
stos
in
cltd
mov
push
pop
daa
pop
in
cwtl
mov
cmp
mov
iret
jge
push
pushl
sti
sbb
out
int
mov
test
xor
mov
push
cmp
out
aam
pop
pop
es
jnp
iret
pop
inc
sti
out
adc
sbb
es
push
dec
or
lds
mov
repz
lret
xchg
mov
xor
clc
add
dec
or
ljmp
jae
mov
icebp
addl
nop
xchg
in
cmp
sbb
cmpsb
inc
mov
insl
jge
add
sbb
gs
stos
inc
mov
jg
push
mov
test
std
insl
or
fidivs
sbb
mov
arpl
stc
jl
jo
loop
jmp
add
jns
test
adc
insb
movl
insb
cmp
movl
and
adc
arpl
icebp
sahf
ret
jne
pop
outsl
mov
out
in
xchg
mov
mov
arpl
and
stc
loop
and
cs
push
fs
sahf
cmp
sbb
stos
orb
inc
sbb
push
push
mov
inc
dec
sti
out
adc
movsb
out
mov
mov
imul
push
nop
jo
adc
adc
lock
lock
inc
sahf
iret
xchg
cmpsl
cmp
and
sub
xchg
cmp
icebp
test
adcl
repz
mov
or
jge
inc
data16
push
adc
dec
add
ljmp
or
iret
sahf
sub
in
sbb
fldenv
cwtl
cmp
in
xchg
rcrb
lahf
mov
xchg
xor
pushl
cmp
cld
gs
jno
jecxz
clc
insb
push
push
mov
adc
adc
jge
stos
inc
mov
int
sbb
sbb
call
sub
push
jmp
lcall
dec
dec
frstor
outsl
ret
mov
add
or
mov
mov
mov
xchg
xor
xchg
cmp
test
dec
insl
or
jmp
or
dec
cmp
imul
loope
lods
cli
pop
jb
mov
lods
sub
mov
jecxz
jmp
out
jno
ljmp
pop
push
int3
loopne
arpl
sub
jnp
fadd
loopne
lret
adc
xor
lods
xchg
popa
aaa
lcall
mov
sub
enter
push
push
mov
cmpsl
imulb
xchg
mov
cmpsb
hlt
daa
jp
mov
push
jp
loope
sub
in
popf
out
pusha
mov
test
xchg
jecxz
cmp
xchg
mov
dec
cmpsb
mov
test
sbb
shlb
cwtl
mov
enter
pop
dec
das
or
xchg
push
dec
lock
fwait
movsl
int
inc
pop
jle
push
pop
jbe
ficompl
test
mov
fnsave
cli
sahf
cmp
jl,pt
pushf
mov
adc
mov
stos
notb
or
into
jb
stos
pusha
hlt
push
pusha
cmp
stc
rclb
testb
filds
dec
in
pop
inc
ss
in
mov
xor
cmc
nop
jo
adc
imul
xchg
in
or
or
push
mov
adc
les
scas
fwait
pop
push
push
jne
aad
xor
adc
loope
into
repnz
or
and
pop
jle
mov
out
outsb
mov
movaps
arpl
in
inc
pop
fdiv
mov
or
add
push
jno
and
clc
dec
mov
push
mov
sbb
scas
fmull
lret
lock
setle
cli
xchg
aaa
jns
sub
sbb
sahf
cmp
adcl
push
add
push
sub
repnz
mov
push
mov
xor
repz
bound
cmp
xchg
cmp
xchg
aad
mov
scas
cld
int
rol
sahf
cmp
int
sbb
inc
mov
adc
push
pop
stc
loop
jnp
aad
int
enter
in
fistps
dec
mov
dec
jge
mov
rorl
ds
test
iret
in
jno
out
loopne
pusha
shll
arpl
or
cli
sbb
ljmp
pop
out
iret
sahf
mov
xchg
flds
mov
insl
xor
icebp
dec
es
mov
and
repz
loopne
pusha
shll
arpl
add
ljmp
test
repz
adc
sbb
rorb
sbb
sub
mov
mov
iret
je
jo
adc
cmpsb
inc
or
int3
shlb
nop
mov
pop
cs
int
lock
cmp
sbbl
xor
xor
insb
sub
sarb
add
lds
gs
sbb
inc
data16
fstps
stc
loop
add
pop
ds
jnp
iret
in
dec
cmp
out
lret
mov
arpl
dec
sub
dec
jg
pop
dec
mov
sub
xchg
mov
mov
scas
jecxz
adc
xchg
pushf
xchg
or
xor
dec
ds
out
xor
sbb
stos
inc
mov
push
cmp
test
dec
push
jns
into
jecxz
addl
mov
xor
cltd
pop
cmp
pop
push
sub
iret
ret
out
push
ljmp
test
add
jne
xchg
shlb
flds
add
sub
add
pop
and
adc
and
adc
add
push
sub
adc
add
xor
add
xchg
and
adc
add
inc
sub
adc
xor
mov
mov
js
int
out
imul
loope
cmp
test
repnz
inc
push
and
out
cmpsb
fld
je
js
adc
mov
cmpsb
mov
or
or
stos
das
call
mov
jns
cmp
or
inc
fsubs
xor
pop
cmpsb
mov
std
jg
push
adc
mulb
push
sbb
inc
xor
orl
adc
test
jb
sub
les
testb
dec
in
add
in
sub
loope
lods
dec
xor
push
adc
cli
lcall
adc
aas
out
out
out
and
data16
in
dec
add
mov
push
adc
sub
mov
xchg
mov
lahf
xlat
or
xchg
inc
add
mov
inc
cmp
adc
and
jo
adc
mov
jns
cmp
sub
and
in
mov
ret
dec
add
mov
iret
sub
test
xchg
sti
jge
xchg
cmp
js
adc
adc
test
or
or
xchg
int
sti
aas
in
idivb
or
jae
daa
sahf
addr16
xlat
insb
cmpsb
pop
cmpb
aaa
ds
adc
pop
mov
pop
cld
icebp
push
cmp
fsubp
iret
inc
rcl
xchg
fsubr
outsb
jge
push
cld
jb
enter
aad
int
ljmp
cld
popa
scas
pop
push
lea
test
aas
js
sbb
adc
mov
mov
rolb
mov
cmp
cmp
pusha
aaa
jno,pn
mov
dec
jae
mov
mov
fs
pop
insb
orb
jnp
xorb
and
shl
xchg
xor
xor
sub
mov
and
les
push
inc
popa
sub
shll
ret
xchg
jbe
ret
xchg
pop
pop
out
fwait
cmp
fxch
sbb
and
hlt
int
mov
adc
dec
cmp
js
adc
and
leave
sbb
push
adc
addb
dec
mov
mov
js
adc
test
arpl
mov
pusha
cmp
or
xlat
cmc
push
jmp
push
xorb
pop
jp
mov
int3
aad
push
mov
sbb
int
out
fwait
jle
stos
cwtl
out
dec
mov
xchg
xchg
xchg
pop
cmp
orl
mov
mov
in
xor
ljmp
adc
push
cwtl
xchg
idivb
add
push
adc
push
adc
dec
les
ficoml
or
les
out
lahf
das
sub
cmp
mov
je,pt
pop
push
orl
js
adc
sbb
mov
mov
cmp
shl
cmp
push
popa
ret
jle
mov
mov
js
loop
sbb
aad
scas
jmp
or
dec
ljmp
sarl
inc
nop
jg
mov
xchg
jne
xchg
or
and
mov
fwait
dec
ja
mov
popf
rcrl
movsl
mov
lahf
mov
sbbb
mov
pop
ljmp
xchg
pushf
imul
pop
mov
orl
cmpsl
lahf
cmp
loope
sbb
leave
sub
pushl
jns
adc
cmp
jns
adc
sar
push
out
fdivs
in
xchg
jl
sbb
out
imul
push
out
push
add
loop
rcll
clc
pusha
pop
jno
lret
loope
xchg
out
jecxz
lahf
es
or
jl
nop
and
mov
sub
inc
out
dec
ljmp
jge
mov
test
cmpsb
and
subb
ja
mov
xchg
cltd
jnp
lcall
xor
sub
lret
mov
pop
inc
dec
mov
or
dec
inc
arpl
mov
out
js
adc
mov
nop
dec
sub
mov
xchg
in
and
pusha
jns
adc
ds
movsl
cmp
notb
fadds
adc
fadds
adc
sub
pop
adc
mov
pop
adc
lods
mov
xchg
or
xchg
je
sub
popf
adc
pop
sti
rorb
adc
lcall
arpl
cmpsl
jae
inc
sub
shl
insl
int3
jo
adc
iret
push
rcll
xor
jo
adc
hlt
aaa
les
adc
push
out
jl
xchg
in
adc
popa
stos
dec
mov
and
pop
ret
mov
mov
out
xchg
sbb
divb
adc
sarl
jl
test
pop
dec
mov
and
mov
push
adc
dec
mov
adc
adc
scas
push
push
loop
jae
adc
fadds
adc
out
sbb
lcall
dec
mov
xchg
pushf
jns
push
outsl
cmp
leave
jb
lret
jbe
push
fdivl
ret
repz
dec
pop
scas
fdivr
sti
sbb
mov
xorb
subl
fisttpl
inc
xor
push
sub
xchg
jo
dec
leave
add
xor
sbbb
popa
clc
push
jno
jnp
out
les
push
adc
xchg
jecxz
cmp
add
mov
enter
dec
mov
add
dec
jl
popf
xchg
jp
or
mov
fldenv
in
dec
inc
shlb
mov
loop
mov
rclb
in
js
out
mov
inc
jbe
into
sbb
cmc
into
roll
fsubrl
cld
pop
js
out
insl
les
es
mov
fadds
adc
iret
or
mov
int
mov
pop
adc
and
mov
pop
adc
iret
mov
mov
cmp
or
xor
dec
jmp
bound
movl
jae
iret
push
and
or
int
mov
mov
dec
and
jo
clc
inc
add
pop
push
add
adc
call
adc
mov
shll
hlt
nop
jo
adc
jns
sbb
ret
icebp
adc
das
adc
sub
bound
test
cmpsl
inc
pop
insl
dec
xorb
mov
mov
js
push
dec
or
jecxz
mov
iret
sahf
clc
inc
jns
mov
mov
pushf
aas
lock
stc
xor
pop
mov
or
push
adc
mov
mov
es
push
sub
pop
das
repz
movsb
or
adc
add
movsb
adc
cld
jb
adc
mov
lds
jo
int
dec
popa
push
sbb
out
push
jne
mov
pusha
lds
inc
mov
pop
enter
pop
add
ret
mov
inc
or
in
push
ljmp
or
inc
aas
out
jle
stos
dec
repz
imul
arpl
add
xchg
fnstenv
push
adc
pop
shl
or
pop
inc
inc
inc
es
and
xor
popf
hlt
aam
data16
jg
imul
sbb
mov
mov
jle
rorl
add
and
jb
or
insb
xor
cltd
cltd
adc
xchg
insl
mov
out
xor
cmpsb
stos
inc
xchg
add
inc
inc
es
or
and
xchg
stos
out
data16
imul
stc
sub
dec
mov
mov
or
sbb
push
divb
rorl
fs
roll
mov
scas
mov
mov
or
mov
xor
adc
sahf
jl
cmp
cli
push
popa
loopne
sub
mov
addl
cld
shll
cmp
cmp
out
mov
xor
inc
xlat
cmpsl
aas
mov
push
adc
add
push
and
pop
and
cld
fisubrs
lret
push
jnp
xchg
pop
inc
cmpb
enter
popa
and
arpl
popa
mov
popa
adc
daa
push
adc
repnz
inc
push
mov
inc
mov
dec
faddl
insb
loop
aam
rorb
mov
ret
jg
mov
add
and
add
add
sbb
sbb
push
mov
mov
pushf
loop
dec
push
mov
adcl
pop
adc
inc
into
and
jo
adc
cmpsb
dec
test
shr
xor
jp
inc
hlt
xchg
setle
aaa
pop
iret
sbbl
gs
jmp
push
mov
outsb
sti
adc
enter
pushf
mov
adc
sbb
in
push
mov
adc
sahf
insb
mov
sbb
dec
jg
jl
call
xor
rdtsc
int3
xor
sub
inc
add
sub
push
pop
xchg
out
or
xchg
sbb
dec
std
in
or
cwtl
je,pt
shl
iret
shl
mov
orb
and
adc
lcall
mov
inc
cmp
adc
xor
iret
test
cld
data16
pop
and
xchg
adc
test
gs
sahf
mov
ljmp
inc
mov
mov
xlat
inc
movsl
xor
out
push
dec
out
mov
xor
mov
and
out
jmp
lret
lds
add
lock
ja
inc
pushf
jle
jmp
mov
add
leave
pop
ja
shll
in
cli
and
lods
cmp
fmull
and
adc
imulb
xchg
mov
adc
iret
sbb
mov
xchg
movl
movsb
dec
vpmulhuw
sahf
and
adc
push
lock
cmpsl
jg
out
dec
icebp
loop
ljmp
xchg
ja
dec
test
bound
clc
push
movsl
adc
mov
loope
xchg
clc
jo
pop
lds
push
cmp
popf
jnp
cmp
sbb
cmpsl
iret
add
imul
test
add
mov
mov
jns
xor
pop
hlt
ret
sbb
int
daa
push
adc
aad
roll
or
insl
dec
dec
and
cmp
add
repz
mov
sbb
sub
pushf
cmp
outsb
inc
std
add
dec
icebp
add
sbb
les
or
cmp
adc
repnz
and
pop
mov
stos
jmp
test
pop
test
sbb
sbb
outsl
mov
sub
xor
ja
js
iret
stos
push
jbe
jae
jecxz
or
or
in
or
push
adc
shlb
lret
fdivrs
cmp
fwait
je
inc
call
xchg
adc
xchg
jae
inc
shlb
out
cmp
sbb
cmpl
add
lock
std
pushf
clc
push
jg
sbb
pcmpgtd
imul
inc
hlt
enter
mull
rcrb
movl
sub
jmp
inc
dec
ja
cmp
mov
iret
mov
inc
or
dec
xor
addr16
test
std
sbb
hlt
inc
fisubs
jp
xchg
or
testb
xlat
ss
shll
push
nop
jns
adc
icebp
bound
sub
mov
clc
add
pop
xor
pusha
hlt
adc
mov
fdivrs
cmp
pop
shrb
sub
or
pushf
mov
adc
fisubl
les
in
xor
adc
jecxz
xchg
push
ds
cltd
sub
pop
jp
test
sub
mov
xor
inc
call
and
lds
in
stos
pop
dec
inc
shrl
mov
jns
adc
stos
mov
es
adcb
test
inc
cmp
and
in
pop
in
pop
pop
pop
in
daa
dec
pop
push
sbb
dec
pop
hlt
popa
adc
insb
xor
jns
adc
cmpsb
jp
fidivs
xchg
cs
xor
fadds
adc
loopne
xlat
push
xchg
dec
js
pushf
pop
mov
dec
sbbb
insl
inc
fcmovu
add
cli
ljmp
aas
xor
push
adc
fldl
mov
sbb
fs
cmp
push
pop
mov
ret
pop
in
push
insb
popa
loope
add
xor
vmwrite
mov
lea
mov
add
jne
les
lock
lahf
cmp
xchg
fldcw
cmp
adc
cmp
imul
inc
jae
cmp
cmp
mov
mov
xlat
mov
and
dec
ret
ja
mov
iret
sbbl
gs
sbb
ffreep
jnp
mov
cmp
add
pushf
jl
pop
mov
sahf
outsl
inc
out
lcall
push
dec
cli
cmp
test
add
ss
xor
or
fs
cmp
sbb
jae
adc
sbb
jbe
ret
jecxz
xor
jae
dec
je
mov
inc
clc
jo
xchg
mov
push
mov
mov
pop
out
and
adc
iret
ja
cmp
aas
or
sub
xchg
adc
adc
lcall
daa
inc
fidivl
add
adc
mov
test
insb
cmpsl
iret
xchg
jg
lods
sbb
push
adc
out
bnd
adc
int
add
sbb
lds
mov
add
inc
jns
outsl
cmp
call
rorl
sub
jnp
andl
sbb
iret
and
outsb
jle
aas
jne
test
dec
add
orb
mov
fstp
in
push
dec
js
mov
in
mov
lahf
jns
cmp
enter
pop
mov
cmp
ja
fbld
gs
dec
test
lock
into
mov
jbe
mov
jp
xchg
cmp
enter
push
cmp
outsb
mov
rcll
xlat
jg
mov
or
mov
mov
mov
out
cld
orl
pop
lret
mov
xor
mov
pusha
das
cmp
dec
push
ljmp
jae
adc
sar
cmp
dec
aad
cmp
mov
jno
or
movsl
sbb
pushf
hlt
push
sbb
mov
das
xchg
lea
adc
jmp
frstor
js
adc
cmpsb
and
ror
or
outsl
aad
xlat
pushf
call
cltd
inc
daa
ds
jmp
sub
xchg
dec
in
insl
xchg
jle
std
mov
fdivp
cmp
cmc
in
loope
popl
pop
cmc
cmp
imulb
mov
bound
pushf
jae
and
test
int3
cld
sbb
sbbb
adc
ret
pop
inc
dec
xor
lea
out
fiadds
arpl
cmp
xchg
and
push
cwtl
or
pop
fsubl
or
in
xor
aas
ret
pop
mov
test
cmp
adc
mov
pop
pop
int
lods
mov
lods
add
xchg
pop
sub
sub
xor
out
add
cmc
insl
popf
or
pop
dec
cli
nop
sti
mov
pop
popf
cmpsl
mov
inc
sub
ja
inc
xchg
sbb
int3
pop
ss
jge
jle
mov
mov
fwait
loop
sub
jle,pn
dec
push
sbb
outsb
mov
or
cmp
push
xor
inc
pop
or
pusha
sub
lock
lods
movl
icebp
ja
pop
call
rolb
lods
stos
int
and
mov
in
jmp
sbb
dec
xchg
mov
mov
mov
in
lock
add
sbb
lds
mov
add
dec
mov
shl
dec
fmull
scas
xchg
outsb
scas
divl
gs
sarl
ja
jg
or
pop
lock
sub
std
sbb
xor
xlat
outsb
loope
ss
push
ja
mov
outsb
sti
xchg
out
pop
xchg
xor
movsb
cmc
mov
les
mov
cs
sub
adc
in
add
adc
arpl
loop
js
loopne
add
push
push
mov
jbe
mov
adc
or
and
or
loopne
addr16
push
pop
push
rorl
mov
pop
mov
add
orb
mov
mov
mov
adc
pushf
mov
pop
fdivrl
jnp
aas
add
cmpsb
inc
ljmp
jo
or
sahf
inc
insb
clc
mov
rorl
inc
imul
xor
loope
xchg
cs
mov
dec
nop
inc
jge
jo
mov
ret
data16
into
xchg
sbb
stos
inc
pop
push
fcoms
shlb
fidivl
push
shrb
cmp
inc
jl
cs
jo
adc
add
sbb
mov
mov
xor
shlb
xchg
cli
lahf
ljmp
pusha
test
in
into
fwait
xor
lea
cltd
lret
into
add
lahf
dec
mov
mov
adc
push
loop
push
lret
sbb
popa
rcrl
mov
insb
imul
jb
cld
jp
pop
mov
shll
push
jmp
imul
jp
or
fs
sbb
in
mov
gs
adc
inc
rorb
xor
mov
pop
pop
inc
loop
xchg
test
fadds
aam
int3
jle
or
pushf
push
ret
ret
dec
adc
push
out
jge
cmovns
mov
fidivl
loopne
lods
test
or
inc
or
js
sub
push
push
mov
cmp
into
enter
cld
test
pop
pop
xor
add
dec
mov
sub
xchg
imul
faddl
popf
sbb
ja
cld
imul
mov
sbb
loope
jmp
adc
icebp
jno
in
add
mov
nop
adc
pop
xor
mov
cmpsb
ret
lcall
adc
in
inc
cmpsb
add
lret
popa
cltd
mov
xor
and
js
jno
xlat
inc
cwtl
dec
loope
add
xor
xor
cltd
push
sbb
loop
lea
xchg
adcb
push
in
int3
ljmp
loope
icebp
xor
dec
and
pop
ret
sub
arpl
and
arpl
sub
adc
pop
pop
mov
fs
imul
lock
pop
and
inc
insl
inc
cmpsb
aam
push
movsl
jge
ja
push
add
cmp
ucomiss
mov
xor
push
adc
inc
movsl
push
add
mov
mov
jo
pop
xchg
ret
add
add
iret
scas
bt
xchg
or
push
inc
int3
fptan
insb
enter
xchg
sub
adc
jo
lret
loop
mov
dec
mov
add
in
pushf
push
je
in
loopne
jne
aaa
or
popa
sub
sbb
mov
mov
inc
xchg
pop
push
sarl
leave
sbb
and
push
into
ljmp
pop
iret
sbbl
into
sbb
push
adc
cmp
pushf
imul
in
dec
and
mov
sub
add
add
and
cmpsl
ret
dec
ja
pop
or
or
inc
insl
stos
mov
mov
xor
sub
insb
add
push
cmp
cmp
cld
sbb
xchg
cmp
shl
popa
lret
shll
test
jo
ret
outsl
mov
lds
jae
adc
dec
dec
in
iret
lcall
out
arpl
dec
jbe
popf
fdivl
mov
mov
or
lcall
push
movsb
pushf
pushl
stc
int3
xchg
sbb
pop
mov
or
lcall
pop
jae
push
adc
nop
pop
or
sub
jl
je
movl
idivl
enter
adc
div
loop
jmp
jl
insb
ret
xchg
sti
cmpsl
iret
xchg
js
dec
fwait
repz
pushf
cmp
imul
cmpsl
popf
inc
or
cmc
fs
push
adc
sbb
arpl
out
loope
call
pop
cmp
xchg
mov
xor
lods
addb
jns
adc
cs
mov
dec
ret
aam
mov
mov
sub
adc
pop
fidivrl
and
push
adc
gs
test
nop
jae
inc
fcmovu
cmp
jle
into
pushf
cmp
jae
push
adc
sub
or
adc
lods
push
mov
lret
popf
mov
enter
cmpsl
fbld
adc
push
adc
es
in
test
aad
das
addl
dec
into
sbb
and
in
cmp
fidivl
and
push
adc
jnp
and
cwtl
outsl
and
mov
enter
sbbl
ret
adc
icebp
cmp
lock
into
add
rcrl
lcall
lods
fldl
mov
xor
loopne
insl
xchg
jae
push
in
mov
repz
adc
stos
mov
xor
sbb
pop
xor
hlt
push
push
fscale
ret
mov
jns
pop
push
outsb
inc
fisubl
mov
loop
fistps
lret
jno
cli
fdecstp
mov
es
pop
sub
std
pop
popf
int3
pushw
bound
xchg
mov
jns
in
jge
xchg
push
inc
add
cwtl
mov
mov
pop
adc
iret
xchg
mov
and
je
mov
sbb
rorb
ljmp
push
je
push
mov
jo
xchg
insb
inc
cmp
jge
das
or
add
adc
or
cmp
jns
adc
enter
and
xchg
cmp
test
fwait
or
push
jns
adc
pop
in
dec
pop
pusha
dec
cmc
mov
inc
repnz
xchg
dec
xchg
mov
scas
pop
sub
add
in
push
adc
icebp
jne
cmp
inc
loopne
stc
inc
push
mov
ljmp
aam
push
adc
sub
pop
nop
adc
ret
int3
fsubl
repz
call
xchg
jbe
or
test
lods
cli
push
or
xor
push
xchg
mov
sbb
jae
adc
popf
inc
icebp
lds
xor
or
lcall
xor
inc
cwtl
mul
xlat
xchg
or
mov
mov
addr16
sbb
stos
test
adc
adc
push
sbb
loop
mov
dec
gs
xor
not
les
or
xchg
inc
mov
jae
jnp
sub
sti
out
out
mov
pop
pushf
int3
and
jmp
call
xchg
cmp
xchg
pop
pop
jno
jp
adc
test
daa
rcll
jb
ret
or
shll
fsub
popa
inc
clc
inc
add
inc
xor
push
adc
xor
sahf
arpl
clc
jns
adc
arpl
mov
push
rcr
sbb
js
icebp
sub
and
movb
outsb
mov
loop
xlat
jb
imul
push
dec
shll
push
add
cmpsl
xchg
icebp
xor
xor
shrl
mov
jge
jecxz
jo
loop
sbb
jp
adc
push
clc
cmpsl
xchg
icebp
or
mov
les
xchg
sbb
stos
lret
fld
bound
cmp
les
xor
shll
xlat
mov
mov
into
push
push
sbb
out
sbbl
pop
out
mov
out
pop
jne
fimull
dec
adc
dec
inc
mov
repz
pop
out
lea
daa
pushf
int3
loope
ret
xchg
es
jnp
mov
inc
mov
inc
mov
push
lahf
xor
movsl
sbb
and
shll
mov
gs
jp
adc
xor
lcall
xchg
cmc
mov
pop
sub
xchg
and
cmpsl
xchg
insl
cmp
xor
incl
sub
insb
mov
pop
mov
mov
in
int3
fwait
inc
rol
or
fadd
ja
lea
mov
add
outsb
or
ss
leave
insb
movsl
in
iret
cwtl
inc
call
mov
shll
lcall
jp
adc
hlt
clc
xchg
cmp
pop
shlb
inc
fisubs
sahf
clc
mov
and
into
out
and
mov
and
cmp
jo
insl
xchg
sbb
cmp
mov
mov
into
lahf
and
cmp
mov
pushf
pop
and
icebp
cmp
mov
mov
dec
sub
call
insl
stos
ret
mov
pop
sub
cmpsb
xorl
adc
and
dec
test
arpl
fiaddl
cli
add
jl
or
pushf
cli
mov
push
test
ljmp
add
out
out
cltd
cs
imul
or
fsts
lcall
popf
or
adc
xchg
jge
int3
int3
jge
jp
pop
dec
popf
adc
push
ss
in
xor
nop
pushf
push
push
repz
inc
ds
into
xchg
sub
fildl
push
push
mov
out
outsl
lock
rcrl
xor
cwtl
stos
arpl
std
inc
adc
jne
mov
adcl
xor
aas
adc
xor
nop
jbe
adc
or
popa
sub
adc
clc
roll
cmp
push
adc
push
lret
cwtl
jae
adc
add
test
jp
leave
aaa
leave
sub
add
gs
out
test
adc
push
sbb
inc
loopne
sub
jo
adc
int3
push
sbb
aas
push
cmc
sub
adc
push
das
popa
stc
cwtl
jae
adc
bound
mov
es
lock
sub
mov
mov
add
add
outsb
orb
push
adc
cmp
es
pop
xchg
lret
decb
pop
xor
mov
push
inc
add
enter
inc
jo
mov
mov
xchg
outsl
js
inc
dec
xor
xchg
or
cmp
in
jl
adc
in
aad
lret
std
sub
cld
cmpsl
mov
je
scas
in
add
add
lahf
pop
pop
cmp
popf
inc
dec
cmp
aad
int3
movsl
adc
lock
cwtl
cmp
sahf
js
loop
jg
adc
cmp
sqrtps
inc
stc
push
enter
cwtl
iret
imul
nop
in
pcmpeqw
je
push
pop
xor
adc
cmpsl
sub
jecxz
pop
rcrl
mov
aam
icebp
insb
mov
aam
push
adc
and
sbb
xor
js
mov
jo
adc
cmpsb
fs
dec
sahf
inc
mov
movsb
cltd
adc
test
lcall
xchg
jmp
mov
test
dec
sub
mov
sti
fistpl
insl
cmp
mov
out
dec
pop
cmp
xchg
cmp
loop
adcb
les
adc
fisubl
daa
adc
dec
sbb
enter
jno
xchg
sbb
pop
xor
frstor
loope
jecxz
mov
jo
add
jecxz
mov
scas
int
in
inc
sbb
pushf
sbb
js
clc
loopne
insl
push
fistpl
cmp
jae
xor
sub
rcrb
jno
jg
and
in
xor
sbb
sub
fisttpll
ss
sti
add
fidivl
in
insb
mov
inc
pop
xchg
add
loop
int
out
inc
popf
dec
xorb
ss
mov
lret
cs
sub
adc
or
das
xchg
or
ficoml
xchg
cs
lock
outsb
daa
rcrb
push
dec
icebp
mov
sbb
mov
ret
cmp
or
cltd
stos
jge
jb
inc
mov
adc
ljmp
dec
sub
mov
mov
xor
adc
imul
sub
gs
xor
dec
aas
cmc
out
leave
sahf
cmp
dec
repz
jnp
xchg
stos
cld
cld
mov
int
test
lods
dec
test
cli
out
imul
xchg
adc
movsb
xor
cwtl
pop
lcall
fdivs
adc
adc
flds
mov
inc
sahf
or
xor
pop
adc
xchg
xchg
jge
pop
jae
adc
pop
and
loope
cld
mov
push
lods
nop
jbe
adc
aam
jno
repnz
lods
outsb
pop
jo
adc
adc
ljmp
test
mov
push
popf
fdivs
adc
xor
or
lock
add
pop
or
data16
or
sbb
movsb
adc
fbld
mov
add
gs
std
mov
mov
mov
jae
jl
adc
mov
mov
fnsave
and
inc
ficoml
in
sbb
jo
adc
lea
in
mov
or
aaa
mov
movsl
xchg
push
shrb
cmp
mov
nop
lods
divb
shll
mov
sahf
mov
adc
sbb
push
sub
jl
popf
int3
test
dec
dec
jl
adc
imul
jo
adc
popf
dec
rcll
add
pop
pushf
sub
sub
mov
ja
cmp
stc
mov
xor
ds
into
xchg
dec
adc
jl
jne
cwtl
enter
inc
cwtl
mov
push
imul
push
loop
jo
adc
sub
out
jle
push
lds
cld
vpackuswb
imul
test
dec
nop
cmp
push
pop
jae
aam
push
adc
cmc
xchg
sbbl
into
add
mov
jo
adc
pop
sbb
in
and
in
insl
repz
lcall
mov
leave
sub
loop
icebp
sub
daa
mov
out
int
mov
jle
dec
jl
adc
push
cmp
lret
mov
dec
mov
jo
adc
icebp
adc
les
inc
iret
and
sub
push
adc
ret
nop
repz
sahf
dec
ret
add
repnz
into
sub
adc
insb
mov
js
jbe
inc
in
js
or
dec
mov
out
adc
or
or
imul
mov
sbbl
scas
adc
jbe
fs
dec
mov
insl
sbb
jp
movb
adc
roll
in
je
out
in
push
pop
mov
cwtl
cmp
lcall
pop
es
addr16
adc
jns
xor
lcall
adc
int3
adc
into
xchg
sbb
dec
push
pop
sbb
ds
ffree
fidivrl
adc
ja
into
lods
cmp
xchg
aam
lret
popa
push
scas
lods
jae
inc
mov
int
inc
sbb
scas
inc
mov
in
add
adc
ret
mov
or
cmpsb
roll
xor
fdivl
adc
cs
push
shll
add
int
xchg
std
sub
inc
jmp
adc
es
std
pop
icebp
dec
mov
cmp
repz
imul
or
sbb
insb
pushf
xchg
xor
jo
adc
pop
cs
out
and
jnp
rorl
test
lahf
pop
das
das
add
js
dec
fcomi
xor
fidivrs
inc
sbb
sbb
mov
sub
in
in
jo
adc
popa
lds
sbb
popf
out
mov
dec
mov
sub
mul
and
jo
adc
addr16
popa
les
adc
pop
clc
inc
mov
out
out
addl
xchg
dec
add
xchg
in
add
popa
jns
and
enter
jg
cli
xchg
push
mov
ljmp
cmp
daa
sub
arpl
jge
leave
sbb
inc
adc
sbb
xor
test
push
inc
pop
adc
cmp
add
xchg
ss
test
jae
shlb
stos
faddp
pop
push
lret
movsb
adc
and
push
adc
imul
sub
fs
adc
pop
pop
xchg
pusha
aad
les
emms
scas
bound
push
push
daa
dec
and
xchg
lcall
cmp
lods
mov
xchg
lret
hlt
jle
jecxz
popa
sub
adcb
fisttps
jo
jg
xor
fwait
movsb
pop
rcrb
push
and
xchg
and
dec
cmpsl
rcr
loop
or
mov
xlat
in
pop
fdivrs
js
inc
aas
rclb
jno
mov
pop
add
dec
sbb
insb
mov
test
out
mov
jnp
rorb
fs
push
cmpsl
adc
mov
push
xchg
sbb
xchg
add
dec
testb
repnz
jbe
cwtl
mov
mov
cmc
cmp
sbbb
xor
and
imull
hlt
xor
mov
push
push
sub
std
jle
mov
pop
outsl
push
sbb
mov
mov
arpl
or
push
push
addr16
in
out
les
leave
lods
jecxz
js
pop
adc
clc
jo
adc
inc
mov
pop
push
dec
pop
adc
in
adc
mov
jo
adc
adc
shl
or
jo
adc
push
adc
ret
xchg
xchg
iret
stc
in
mov
loopne
push
adc
sar
mov
fxch
and
lds
sbb
xor
xchg
fdivl
adc
ret
lock
adc
xchg
pushf
inc
pusha
cmpsl
inc
mov
int3
cmp
adc
movsb
out
sbb
jno
push
ret
mov
or
sahf
fs
adc
je
jo
adc
sub
std
cmpsb
and
adc
push
adc
leave
in
inc
push
jns
lock
adc
xorb
outsl
sbb
stos
xchg
sbb
mov
call
loopne
push
adc
sahf
adc
mov
push
cmp
outsl
addb
xor
cmp
fdivl
adc
fisubs
adc
mov
xchg
push
cli
xorl
push
fsts
jns
mov
or
push
jmp
fld
std
movsb
aas
xlat
pop
nop
jg
mov
adc
push
cmp
and
push
adc
pop
jg
push
test
roll
arpl
pop
cmp
js
pop
push
mov
icebp
mov
ret
inc
jl
adc
int
mov
mov
sbb
jo
push
adc
mov
cmp
mov
loopne
enter
xor
out
in
stc
mov
add
sbb
xchg
jno
call
cmp
outsb
in
xlat
call
cmp
add
adc
mov
jmp
or
cmp
xor
mov
sbb
inc
sub
mov
bound
cmc
daa
sarb
push
adc
aam
sti
jne
mov
adc
xchg
imul
fdiv
out
xchg
lret
rorl
xor
jecxz
or
es
jp
test
scas
xchg
dec
add
mov
adc
jge
mov
adc
mov
xchg
or
jle
inc
sbb
xcrypt-ecb
cmpsl
dec
aaa
sbb
pop
fs
and
mov
sub
mov
dec
movsl
cltd
xchg
push
dec
test
mov
adc
xchg
xorl
lods
out
fwait
sahf
mov
repnz
cmp
push
std
ror
push
mov
mov
mov
and
or
xor
or
insb
lcall
or
jb
mov
imul
cs
jmp
xchg
and
push
push
adc
in
pop
xchg
dec
mov
push
nop
dec
lcall
sbb
fcoms
sub
inc
stos
add
repz
mov
pop
xchg
outsb
push
int3
xlat
pop
and
mov
popf
ror
or
push
sbb
mov
enter
out
xchg
xor
push
lahf
cmp
jl
dec
add
imul
pop
jecxz
fcmovbe
sarl
ret
and
call
add
jp
pop
dec
mov
jmp
jnp
gs
ljmp
inc
pop
xchg
ret
jge
cmpsl
sbb
mov
data16
out
fisubrs
sbb
aaa
in
sahf
dec
dec
cmp
inc
xchg
outsl
jl
adc
stc
lcall
pusha
insb
outsl
cs
repz
mov
lods
ljmp
mov
sub
cmp
pop
test
shl
and
dec
or
pop
fldln2
pop
insb
dec
dec
insl
push
insl
xlat
arpl
pop
mov
ljmp
call
sbb
sbb
addr16
andb
nop
jmp
insb
add
inc
add
movl
in
pop
mov
mov
mov
testl
fldenv
cmp
sbb
dec
rorb
xchg
inc
popa
inc
out
xlat
lock
lahf
cwtl
add
or
xor
pop
test
call
mov
aad
ja
lret
xor
insb
or
sti
jmp
push
sbb
mov
xor
jne
xchg
jbe
iret
lods
push
mov
lcall
xlat
or
ja
imull
icebp
cwtl
add
repz
insb
cmpsb
dec
out
ss
lret
jbe
cwtl
shll
addb
adc
mov
lea
add
ja
mov
push
testl
in
or
scas
pop
jg
inc
mov
or
js
pop
mov
negb
sti
xchg
ljmp
test
ss
push
and
fnstenv
movsb
lret
repz
insl
testl
mov
xchg
sbb
scas
sbb
or
icebp
sahf
inc
test
jl
sbb
push
pop
pop
adc
dec
shrb
adc
outsb
adc
pop
inc
push
jmp
insb
lcall
ret
les
xchg
xor
sub
jl
in
ret
sbb
sbb
inc
aad
idivb
add
cwtl
nop
pop
inc
pop
ret
int3
movl
scas
test
jns
cmp
or
cmp
lret
mov
add
test
mov
add
popa
mov
xchg
inc
shll
inc
xlat
inc
push
pushf
cs
outsb
incb
cltd
or
mov
sbb
in
jno
repnz
dec
jg
les
or
xlat
pop
and
adc
sbb
cmpsl
xor
xchg
je
jle
push
adc
addl
scas
dec
push
push
cmp
adc
in
lcall
xchg
xor
and
fisttpl
dec
ds
xchg
cmp
movsb
mov
sahf
cmpl
mov
pop
bound
jmp
or
sbb
pop
cli
ljmp
sub
pop
jno
mov
fidivl
repnz
push
repnz
add
pushf
push
jp
idiv
fiadds
mov
mov
xor
inc
adc
hlt
cld
repnz
adc
es
arpl
jbe
fwait
pop
aam
out
stos
push
test
fimull
sbb
mov
hlt
or
jg
aaa
pop
dec
xchg
cltd
pop
test
aaa
inc
out
mov
cmp
out
fwait
sbb
sub
inc
out
lret
lods
sub
mov
sbb
sbbl
aaa
mov
xchg
mov
ds
cwtl
add
mov
sti
xor
pop
sub
dec
push
adc
aad
imul
adc
rcl
xchg
call
test
scas
add
pop
ret
jg
icebp
outsb
inc
sub
mov
shll
popa
and
popf
add
sub
pop
cwtl
xchg
int
push
out
push
jg
and
sbb
xor
mov
and
les
cmp
mov
les
jo
push
adc
cmp
sub
fistps
pop
cli
mov
subb
add
mov
jmp
add
cli
in
ja
in
into
pushf
mov
enter
iret
cmc
dec
pushf
jmp
mov
fwait
cmp
xorl
xor
incl
xchg
cli
repz
pusha
push
sbb
add
dec
in
pusha
xchg
leave
add
sbb
lods
mov
add
sub
rolb
fnstenv
icebp
sub
inc
jg
or
int
ret
sarl
mov
xor
shl
iret
add
push
cld
sbb
shl
insl
ret
or
roll
jmp
xchg
shll
mov
add
test
fwait
dec
jno
rolb
loope
xlat
cld
jg
or
push
sti
daa
sub
test
dec
lods
shl
sti
inc
sbb
or
mov
or
je
or
idivb
ljmp
pop
mov
and
mov
mov
sub
lret
mov
inc
inc
jp
mov
inc
pop
pop
inc
aaa
roll
jl
ffreep
imul
sahf
mov
push
lods
leave
idivb
mull
cs
sbb
ret
or
lret
jecxz
xlat
call
sub
clc
inc
jge
mov
fsubrl
stos
int
cmp
pusha
dec
or
mov
aam
jl
emms
xor
xchg
mov
pop
andl
icebp
xor
xor
add
jl
adc
arpl
inc
mov
or
cmp
iret
xchg
stos
pushf
loopne
out
inc
push
rolb
pop
or
lock
out
or
jae
into
pushf
icebp
mov
add
sbb
cmpsl
inc
iret
mov
xor
fwait
xchg
lds
push
outsl
or
mov
push
cmp
out
lret
sbb
xor
lcall
setg
jmp
inc
popa
call
ja
inc
xchg
test
subl
sub
dec
jp
sub
test
ss
inc
lds
ss
ret
lret
in
rcrb
add
adc
inc
pop
push
push
mov
xor
xchg
mov
scas
push
repz
imul
mov
ret
loopne
rol
xchg
out
hlt
mov
insl
cmc
mov
push
inc
pop
jle
mov
std
popa
je
in
sbb
int3
sub
jmp
push
ret
push
scas
cmp
arpl
insl
lods
int3
xor
mov
mov
fs
addl
cli
lock
push
xor
jo
sti
pop
out
fidivs
mov
fiaddl
push
and
mov
fstps
lods
push
adc
sub
sti
fists
in
lods
and
adc
mov
adc
sahf
push
pop
pop
repnz
adc
and
int3
test
or
push
sbb
and
and
adc
pop
adc
cmp
movl
or
das
repz
fcoms
xor
cmpsb
jle
ss
xor
pop
mov
out
adc
cmp
jl
inc
mov
cmp
lock
mov
imul
xorb
nop
pop
movsb
aaa
std
adcb
mov
xor
mov
jae
lock
dec
lods
cmp
mov
ss
mov
mov
dec
out
ret
and
jno
into
rcr
dec
mov
shl
repz
hlt
mov
inc
mov
adc
iret
lds
lcall
sub
std
add
rcrb
inc
dec
stc
repnz
addr16
cli
std
lsl
cmova
test
cmpl
mov
ds
fadd
std
mov
icebp
pop
push
pop
int3
pop
call
stos
iret
cmp
dec
add
mov
inc
xchg
jne
out
clc
push
inc
lcall
sbb
jmp
mov
xchg
popa
ret
xchg
arpl
loopne
repz
xchg
add
jmp
mov
in
jmp
xor
icebp
xor
jg
int3
sbb
cmp
push
cmc
pop
mov
and
dec
push
out
cltd
xor
mov
xchg
shl
sbb
fldcw
mov
fucom
inc
popf
cmp
sbb
inc
jne
loop
mov
arpl
jo
pop
xchg
fisubrs
add
sub
test
and
cmp
sbb
xchg
popf
xor
lods
sbb
push
fidivl
xor
incb
adc
fnstenv
gs
jnp
xlat
cld
arpl
xchg
xor
dec
sbb
sarb
in
dec
cli
repz
mov
adc
and
outsl
iret
in
mov
fistpll
jbe
or
dec
insl
dec
push
lsl
imul
clc
lret
lret
sub
flds
lcall
nop
cmp
xchg
mov
sbb
cmp
out
mov
push
jmp
xchg
cwtl
lret
mov
je
inc
mov
sub
imul
jno
jg
and
movsl
out
fdivl
and
mov
imul
mov
sub
mov
jmp
push
cmpsw
inc
add
jbe
mov
adc
imul
enter
mov
into
push
jl
in
orl
mov
arpl
popa
lahf
mov
repnz
and
aaa
ljmp
xchg
es
dec
adc
mov
cltd
cmp
lcall
adc
cli
aad
scas
sub
adc
pusha
ss
out
and
dec
sbb
nop
in
adc
addr16
fdiv
les
je
icebp
inc
mov
sbb
enter
notl
cmp
jnp
or
add
jmp
jle
xchg
push
or
mov
push
int
mov
outsb
inc
sti
shl
sbb
cmp
lock
and
dec
xchg
mov
call
mov
xchg
ret
push
adc
fwait
adc
addr16
xchg
cmp
push
xchg
out
and
push
scas
imul
lea
push
lcall
fwait
movsb
fists
mov
sahf
add
popf
movsl
adc
jecxz
push
stos
jne
mov
sub
std
and
enter
inc
incl
xchg
aaa
int
cmp
aad
jmp
xchg
fadds
in
sbb
cli
rcrb
iret
sahf
outsl
sbb
jmp
adc
nop
push
pushf
test
fimuls
dec
adc
and
in
lea
add
aam
push
adc
jb
lods
sub
outsb
adc
cmp
adc
and
inc
push
addl
mov
ljmp
jnp
sub
add
dec
cmp
fnstsw
repnz
pusha
imul
out
mov
mov
inc
and
dec
testb
mov
jl
push
dec
push
fcompl
cmp
movsl
mov
pop
inc
xor
jle
sub
loop
mov
jl
inc
lcall
sbb
fcmovu
sbb
je
test
test
or
ja
sub
outsb
insb
negb
xor
adc
xor
and
mov
pop
faddl
pop
sub
les
cmp
repnz
stc
cmp
sbb
or
mov
dec
pushf
out
cld
mov
loop
adc
popa
inc
pop
or
les
adc
dec
fbstp
xchg
jae
loopne
movsl
sub
mov
add
jg
ljmp
loop
xchg
or
ss
cmp
int3
jg
cmp
jb
mov
arpl
or
xor
lods
lret
sbb
dec
leave
sbb
jl
jno
mov
xchg
sbb
mov
loop
xchg
jae
inc
scas
movsl
sbb
pop
mov
push
mov
fidivl
mov
jo
and
test
mov
or
push
test
push
adc
mov
aam
loop
cmpsl
add
repnz
out
xchg
sub
mov
stc
push
es
push
mov
xchg
imul
adc
or
imul
push
jmp
out
mov
repnz
adc
es
clc
ljmp
popl
adc
iret
les
insb
pop
adc
xchg
jnp
out
pop
aam
movsb
iret
or
or
shrl
pop
test
and
adc
js
or
in
aad
dec
insb
repz
repnz
adc
jo
cltd
mov
add
or
dec
inc
pop
sbb
pusha
push
or
and
lods
shll
fsubl
fidivrl
xor
out
lcall
int3
call
or
cwtl
loope
scas
pop
loop
pop
and
sbb
in
icebp
sbb
push
ja
xchg
fs
add
fs
dec
jg
sbb
xor
xchg
stos
add
fidivs
test
xor
jmp
sbb
adc
and
adc
xchg
mov
lods
and
adc
pop
adc
mov
shlb
outsl
int3
xor
leave
sarb
mov
into
pop
sahf
ja
and
xchg
mov
inc
aad
sarl
mov
shr
inc
sbbl
sub
lock
or
cmp
mov
lcall
add
cs
stos
xchg
adcl
xlat
or
fcmovu
mov
xchg
mov
xchg
push
sbb
nop
xchg
xchg
cmpsl
sbb
cld
dec
gs
aas
repnz
repz
add
push
insl
popa
cli
rcrb
mov
adc
sar
mov
gs
mov
xor
aaa
adc
loop
mov
stos
xlat
clc
cmp
pop
jmp
pop
sbb
sbb
clc
mov
jecxz
cmp
cmp
and
jnp
push
mov
and
pop
sbb
lahf
adc
pop
stos
out
cmp
cmpsl
push
pop
pusha
out
sbb
fdivr
rol
adc
aaa
fmul
fidivrl
outsl
xchg
jmp
mov
sub
into
stc
adc
gs
imul
pushf
mov
mov
loopne,pt
sub
mov
mov
fsts
mov
xchg
sbb
call
push
push
adc
mov
loope
lcall
das
xchg
rcl
dec
lods
lea
decb
daa
lahf
rcrb
xchg
mov
imul
and
sub
aad
lods
outsl
add
cmp
pop
jb
mov
mov
jg
mov
cmp
mov
ret
das
push
mov
xlat
dec
out
jns
dec
add
cmp
sub
push
adc
jae
xorps
arpl
arpl
pop
pushf
mov
add
aam
push
adc
fidivs
sbb
pop
mov
mov
daa
vcvtdq2pd
mov
sub
adc
ret
xor
clc
push
cwtl
adc
loope
sbb
cmpsl
vpmulhuw
bound
adc
sbb
jo
mov
leave
pop
lock
xchg
cmp
xchg
cmp
test
and
mov
jb
repnz
mov
addl
jo
ret
dec
int3
sbb
push
mov
sbb
mov
inc
push
insl
xor
fistpl
pop
cmpb
test
cmp
stc
pop
jecxz
lea
push
sub
adc
sub
fcmove
outsl
sbb
dec
lret
int
in
shrl
jae
fadds
adc
lock
aad
orl
insl
pop
cmc
mov
mov
inc
jo
sbb
mov
out
bound
js
push
push
adc
push
rorb
pop
je
pop
adc
cld
xchg
mov
pop
test
cli
xchg
cmc
std
aad
fadds
adc
cmp
fcmovbe
addr16
cs
sbb
aam
jle
orl
ja
arpl
cld
sbb
xchg
cmp
shl
xor
inc
pop
shll
or
pop
aaa
cmp
fs
fwait
scas
xlat
into
iret
sahf
test
sub
jg
mov
into
idivb
sti
das
sub
fsub
lds
sub
sub
adc
xchg
lcall
xor
ss
loop
sbb
adc
add
cmp
or
icebp
mov
cmp
insb
dec
sti
icebp
loop
std
scas
fldcw
adc
xchg
leave
dec
aad
jae
into
pushf
icebp
mov
ret
roll
aam
mov
cmp
pop
lock
fmul
xchg
jbe
jle
and
popf
outsl
cli
xchg
out
mov
dec
bound
cmpsl
test
push
outsl
sub
loope
iret
in
mov
jle
sub
dec
imul
mov
std
or
adc
jge
adc
aad
jns
sub
int
cwtl
mov
testb
sub
xchg
enter
lcall
les
xor
or
outsb
mov
lahf
adc
hlt
xor
lea
mov
pop
push
inc
int
data16
jg
or
mov
adc
or
popf
fisttpll
nop
enter
popa
jle
repz
dec
imul
inc
and
xorl
pushf
xor
aas
cltd
ja
inc
fisttpll
mov
adcb
xor
xlat
into
push
lods
sti
sbb
add
fwait
addb
jmp
and
sub
inc
adc
movsb
and
call
mov
push
repnz
lods
lods
jbe
pop
stos
add
divb
sbb
dec
cs
mov
insb
dec
stos
lds
and
jmp
xchg
lock
mov
in
aad
js
push
das
std
inc
lods
pop
popa
xchg
lock
pop
sbb
lret
push
and
inc
les
int
mov
inc
ss
mov
sbb
outsb
cmp
cmp
adc
jmp
fdivrs
movsb
test
pop
dec
hlt
jle
popf
and
xchg
loope
shl
fisttpll
loopne
sbb
dec
sti
mulb
adc
sub
adc
outsb
inc
iret
adc
dec
jmp
mov
loop
mov
push
aaa
test
xchg
jg
sbb
and
sahf
aaa
scas
mov
pop
js
adc
or
pop
add
sbb
inc
scas
rorl
cmc
mov
add
repz
sbb
inc
int3
push
mov
and
and
sbb
xor
cld
insb
mov
shl
es
ret
inc
inc
push
pmulhuw
mov
jbe
cmpsl
ljmp
in
adc
jge
arpl
jno
addl
in
pop
cmp
sti
cmpsl
insb
or
pushf
scas
mov
dec
enter
ss
or
pushf
fucom
lds
arpl
std
sbb
xchg
or
xor
mov
or
jge
push
push
dec
sbb
dec
add
mov
icebp
fnsave
push
adc
push
lret
es
xchg
cmc
mov
and
pusha
mov
jge
out
sub
push
insb
je,pt
popf
push
cmp
jnp
mov
arpl
pop
push
xchg
xchg
jge
popf
loop
adc
gs
xchg
out
mov
push
adc
push
xor
sbb
cmc
adc
mov
ret
daa
jg
loop
jae
mov
lds
sbb
test
data16
clc
or
cmc
out
adc
mov
xor
aas
xchg
frstor
sbb
popa
ret
outsl
mov
xor
xchg
movsl
sbb
clc
mov
loopne
xchg
sub
jmp
loopne
or
movsb
adc
clc
cmpsl
out
jne
push
mov
test
shlb
je
inc
push
inc
lret
loopne
mov
daa
xchg
pop
inc
xor
mov
or
dec
lds
in
repz
mov
inc
jbe
ret
loopne
xor
sbb
xlat
stc
ja
or
pop
push
negb
mov
xchg
out
mov
xchg
es
lock
lea
icebp
sahf
ret
xlat
and
pusha
sbb
cmpsb
mov
xchg
ja
inc
lahf
movsl
adc
fnsave
sbb
inc
dec
or
sbb
push
or
adc
mov
movsl
popf
movb
dec
out
mov
push
in
mov
sub
repz
in
test
aad
das
addl
faddp
faddl
stos
shrl
xchg
jae
inc
fstpt
or
cld
xchg
ret
jmp
es
fbld
xchg
mov
leave
loope
arpl
out
mov
das
dec
rcr
xchg
jmp
repz
inc
mov
lods
popa
cmc
mov
jbe
add
inc
jns
scas
popa
cmc
fsubl
rcrl
sbb
jae
std
adc
out
sarl
adc
sub
cmpsb
cmpsb
sub
xchg
sbb
adc
aad
sub
lcall
or
fxtract
push
xlat
scas
mov
test
jge
xor
sub
fists
add
mov
jge
xchg
push
inc
adc
movsl
xchg
add
pop
leave
imul
in
xor
mov
in
pop
mov
xor
and
rcl
mov
xor
pop
iret
cmpsl
rolb
inc
out
out
push
lcall
lods
xchg
test
dec
mov
shll
outsl
cmpsb
sbb
inc
mov
sarl
xchg
sbb
push
cmp
lods
call
insl
add
sub
jae
xchg
rep
dec
lcall
add
xchg
or
xor
dec
stos
adc
cwtl
shl
scas
add
pop
pop
pop
shr
sbb
lcall
or
popf
push
dec
add
push
sub
in
or
pop
mov
sub
fnstcw
mov
mov
inc
push
or
adc
adc
sbb
mov
mov
dec
cld
aas
mov
adc
dec
dec
mov
lcall
pop
dec
lret
push
push
cld
aas
movsl
dec
ret
aam
dec
push
mov
and
inc
cltd
dec
xchg
jp
popf
into
call
adc
inc
push
jns
lcall
out
and
pop
dec
push
jmp
mov
add
imulb
repnz
jnp
push
and
mov
cmp
push
loop
js
movsb
stos
scas
inc
loope
sahf
inc
inc
sbb
icebp
xor
push
add
jno
adc
xchg
cmc
mov
stos
sbb
sbb
jb
push
jmp
pop
dec
je
cmp
push
nop
mov
call
rolb
bound
sub
xor
hlt
jo
ret
js
cld
jo
adc
sbb
fidivrl
popa
xchg
or
mov
mov
jne
xchg
push
cmp
test
push
je
xchg
mov
mov
repz
adc
fwait
movsl
xchg
inc
pop
ret
ret
mov
inc
clc
jl
xchg
aaa
and
repz
and
lahf
das
sub
cmp
mov
je,pt
pop
push
sub
fbstp
int3
xchg
fisubrl
push
testl
js
cmp
pushf
xchg
add
fisubrs
iret
xchg
fidivs
inc
lret
ljmp
push
inc
inc
jp
mov
inc
pop
pop
xor
rorb
sbb
testb
clc
sub
push
sub
aad
pop
scas
lds
ljmp
dec
ljmp
loop
jae
iret
in
push
dec
mov
add
lock
and
into
sbb
pop
push
jo
mov
leave
sbb
repnz
mov
sbb
xlat
fcmove
push
push
mov
loope
shrl
push
adc
cmc
jno
xchg
lods
lock
sbb
dec
mov
inc
fmul
clc
popf
jbe
daa
xchg
jp
shr
aad
add
mov
or
gs
xor
or
adc
mov
pop
test
mov
sbbl
out
shr
addr16
outsb
aad
rcrb
and
add
xor
insb
ret
sbb
fldcw
cmp
xchg
xchg
cmp
es
mov
enter
ret
js
ss
mov
xchg
sbb
sub
and
lods
adc
adc
inc
lea
adc
xor
push
out
mov
push
pop
or
lcall
sub
cmc
int3
lcall
mov
add
fbld
lret
xchg
sbb
push
adc
and
or
insb
or
frstor
pop
inc
mov
adc
push
mov
pop
cmp
inc
mov
roll
sbb
cli
sarb
lret
loopne
jmp
push
and
pop
sub
ds
sub
push
cmp
mov
cmc
add
push
negl
adc
call
push
addr16
xchg
ret
xchg
mov
mov
and
sub
adc
and
push
sbb
jbe
ja
aad
lahf
xchg
cmp
xchg
sbb
cmc
jnp
push
dec
and
test
sbb
push
sahf
mov
sarb
mov
mov
out
push
iret
ljmp
cli
cmp
es
sub
adc
lock
cmp
lret
lock
fadds
adc
fldcw
cltd
hlt
push
pshufw
movsb
pop
push
movsl
add
xor
or
call
sbb
scas
or
add
lahf
jns
fmuls
jge
adc
add
cmp
jge
mov
lock
xlat
mov
adc
addr16
fwait
dec
outsl
cwtl
cmp
lods
aas
js
push
pushf
jo
cmpsl
inc
pop
push
ljmp
lret
xchg
cs
jo
mov
jo
xchg
aas
js
or
add
cs
dec
jae
cmp
mov
fistps
or
lahf
mov
jmp
js
adc
add
cmp
rorl
lcall
inc
lret
sti
sub
adc
dec
mov
loopne
out
mov
jge
popa
inc
dec
js
int
jg
mov
push
xchg
sbb
push
scas
cwtl
sbb
popa
xor
adc
rol
or
xchg
pop
cs
xchg
sbb
repnz
adc
inc
out
aaa
cmp
sub
mov
pop
mov
sbb
push
outsl
inc
loope
mov
xchg
fdivl
cmp
sbb
push
cltd
lret
push
stos
je
mov
cmp
dec
adc
sbb
xchg
or
mov
jmp
js
xor
stos
mov
lret
dec
cwtl
popa
mov
push
ljmp
outsl
cltd
les
test
mov
sti
out
iret
or
hlt
pushf
push
xor
mov
ret
out
lcall
paddw
dec
sbb
dec
mov
xor
mov
adc
movsb
push
mov
sbbl
arpl
add
fsubrs
jns
and
adc
push
imul
sti
movsb
das
or
xchg
jae
jmp
sub
test
loop
sbbb
xor
xchg
push
je
adc
sbb
xchg
jb
mov
xlat
mov
std
int3
fwait
dec
fcmovnbe
mov
or
lret
sti
inc
mov
mov
sub
sbb
arpl
fildll
sub
adc
dec
enter
ret
xchg
rcrl
leave
decl
xchg
jns
dec
mul
xchg
imul
dec
mov
ljmp
test
lcall
fists
dec
jnp
nop
push
ret
jecxz
lret
xchg
test
add
xor
pop
push
pandn
roll
jle
cmpsb
mov
clc
or
ss
jl
mov
dec
ror
ja
mov
xchg
mov
adc
add
ret
cmp
push
int
lret
xchg
test
mov
rcl
push
jno
test
aas
loop
push
ja
inc
jne
adc
inc
cmp
fistps
fstpl
mov
ja
jae
cwtl
push
sbb
sbb
popw
loopne
xchg
pop
jns
pop
mov
in
js
call
push
add
mov
out
sub
adc
jnp
ret
div
push
cmp
sub
and
dec
cmp
lds
lods
mov
inc
add
daa
add
js
cmp
insl
mov
sub
scas
push
lret
xchg
popf
into
pusha
xor
sub
lock
andb
pop
sub
mov
or
push
mov
out
dec
xchg
dec
test
orb
jl
imul
fnstenv
lahf
fs
ljmp
loopne
cmpsl
or
test
fcomps
ljmp
inc
mov
iret
test
xchg
int
lods
mov
pop
cmpsb
aam
pop
mov
mov
sbb
js
rol
mov
scas
inc
dec
add
xchg
hlt
pop
flds
mov
pop
mov
outsb
arpl
adc
dec
stos
inc
inc
fsubs
leave
jns
pop
test
xchg
hlt
hlt
aas
pop
mov
pop
fdivrp
les
jne
inc
enter
sbb
dec
xchg
mov
sar
and
sub
mov
xor
inc
or
xchg
stos
dec
sbb
aaa
dec
repnz
and
lret
idivb
js
sahf
fs
sbb
fidivrl
jnp
sub
adc
cmp
pop
adc
stc
xchg
sub
jl
das
outsb
jne
adc
or
divl
jmp
js
add
inc
mov
arpl
dec
ret
sbb
stos
and
int3
mov
adc
xchg
sbb
sub
cmp
adcl
mov
fstps
mov
sub
mov
icebp
jae
lret
xchg
call
je
jno
ret
inc
dec
loope
push
pop
subb
pop
dec
fdivs
sub
das
lcall
push
dec
rclb
stc
or
ljmp
sub
cmp
mov
into
pushf
mov
xor
pop
out
pop
pop
and
xchg
pop
int
rcrl
arpl
pushf
jbe
adc
ret
js
xchg
jae
leave
or
xchg
inc
sti
loopne
mov
sar
stos
outsb
mov
in
dec
ret
jg
popa
xchg
imul
lock
cs
mov
loop
and
pop
shrb
pop
ljmp
jmp
and
cmovns
mov
inc
xor
aaa
mov
dec
lret
or
xor
inc
imul
mov
ss
jle
or
inc
icebp
loop
mov
mov
or
mov
sbb
adc
pop
pop
and
dec
jbe
push
ds
and
mov
fs
pushf
xor
jae
or
sti
jne
xchg
or
loope
mov
pushf
xchg
xchg
test
scas
or
mov
jmp
stc
loop
loopne
pop
es
pop
loop
inc
fidivs
gs
sub
adc
ds
negl
imul
jo
call
pop
xchg
lret
fadds
adc
xlat
mov
push
jl
mov
xor
adc
and
adcl
lods
xor
aad
sbb
aad
xchg
std
or
adc
mov
test
inc
mov
adc
stos
push
pop
xchg
aad
jmp
push
movsl
xchg
insl
push
mov
adc
das
fldenv
dec
mov
fdivrl
xchg
mov
lahf
shll
cmp
sub
cmpsl
notb
dec
sbb
and
and
jle
out
lods
fnstsw
scas
add
test
mov
adcl
pop
dec
sub
pop
xor
add
mov
mov
and
hlt
fisttps
sbb
mov
lret
in
jns
nop
sub
adc
cmc
inc
stos
pop
adc
sub
dec
inc
sub
dec
imul
adc
inc
es
dec
popa
xchg
repnz
pop
in
mov
add
mov
add
stc
push
movsb
cmp
sub
push
imul
or
lahf
andl
test
jp
jo
or
mov
sub
xchg
add
mov
insl
popa
aam
loopne
sbb
push
adc
inc
mov
xor
cmp
push
adc
jle
mov
xchg
mov
out
cmpsl
scas
loope
push
add
hlt
push
addl
add
add
dec
push
movsl
bound
jae
prefetcht0
popa
lcall
mov
lea
int3
aas
push
lahf
inc
mov
es
jo
pop
inc
cmp
mov
jae
popa
inc
sbb
aam
mov
adc
xchg
inc
push
inc
imul
lret
xchg
lods
cwtl
mov
mov
in
push
dec
stc
mov
or
hlt
cs
jge
adc
in
push
gs
xchg
lods
cwtl
mov
mov
in
push
dec
shll
push
jge
adc
in
icebp
jo
lret
xchg
lods
cwtl
mov
mov
in
or
xchg
cmp
scas
fisttpll
sbb
ljmp
aas
enter
sub
jo
ret
fadd
fistpll
je
pushf
dec
scas
scas
out
sahf
lock
dec
fimull
xchg
cs
out
and
mov
xor
or
or
dec
mov
xor
xor
adc
sbb
mov
mov
imul
fwait
push
popf
ret
outsb
or
int
inc
shlb
xchg
jnp
out
pop
aam
push
mov
test
testl
ret
add
lock
lret
ret
call
jne
bound
mov
sub
test
bnd
shrb
adc
test
mov
pop
add
xchg
dec
cwtl
popa
xchg
push
xor
push
adc
je
insb
jl
adc
sbb
fxch
jno
ret
xchg
cs
dec
dec
sbb
push
xor
adcl
es
int
push
dec
lret
cld
sub
xor
shrb
push
adc
sbbb
out
jo
sbb
adc
fs
ret
or
call
jle
sbb
dec
ret
std
xor
repnz
adc
and
dec
gs
mov
and
inc
sbb
cltd
pop
leave
cwtl
add
js
ja
push
call
xchg
jg
sub
int3
out
lea
mov
mov
aas
jne
pop
dec
adc
cmovae
data16
jo
shll
sbb
mov
mov
cli
mov
sbb
imul
push
mov
mov
test
add
lret
mul
inc
std
and
lock
adc
push
xor
pop
xor
xchg
push
mov
fsubrl
push
adc
and
fldl
in
jmp
bound
jg
lahf
add
es
push
pusha
dec
xchg
xchg
jg
bound
mov
xchg
xchg
stc
inc
or
and
rcr
and
jno
xchg
mov
les
out
cmp
test
push
pushf
scas
mov
mov
push
xchg
andb
dec
in
push
adc
jle
pop
or
mov
adc
or
jg
lock
pop
movsb
faddl
adc
faddl
adc
mov
loope
adc
cmc
push
std
out
inc
xchg
fcomp
sti
imull
add
outsb
mov
mov
or
adc
sti
stc
mov
shrl
dec
sarb
dec
outsl
cmp
pop
sub
xor
push
jg
xchg
xor
cmpsl
aad
jno
jle
loope
push
jg
adc
ja
daa
out
push
adc
sub
cmpb
loop
ret
add
push
leave
outsb
daa
inc
in
dec
push
and
dec
sahf
push
mov
cmp
pop
pop
inc
jp
iret
sahf
inc
jnp
add
mov
rcrl
pop
stos
fdivr
pop
adc
and
insb
xchg
dec
cmp
jno
lahf
pop
sbb
jo
adc
lea
pop
xchg
sub
jb
popf
mov
arpl
dec
xchg
cmpsl
mov
mov
arpl
aaa
dec
ficoms
jno
stc
pop
adc
fdivl
push
dec
push
lret
push
dec
sbb
mov
adc
or
sti
mov
adc
push
adc
aas
mov
inc
jbe
inc
jns
mov
mov
arpl
mov
insl
dec
icebp
loop
and
adc
nop
shl
lods
lcall
mov
jo
cmp
sbb
push
adc
or
adc
push
adc
xlat
stc
dec
insb
iret
std
cmp
or
mov
sbb
xchg
jle
mov
fistpll
call
mov
test
imul
mov
pop
adc
je
jae
adc
cmpsb
inc
adc
dec
jns
jo
bound
adc
test
sub
faddl
adc
int
xor
add
pusha
mov
or
loope
test
shlb
hlt
sub
adc
or
dec
push
push
out
mov
out
nop
jge
adc
adc
aam
dec
repz
jo
jae
adc
sbb
xchg
mov
data16
je
pop
xorb
or
jp
adc
push
and
jmp
pushf
cmp
test
mov
repz
and
push
adc
or
call
es
sbb
jp
adc
lock
sbb
jnp
adc
push
bound
sub
and
lds
adc
cmc
or
jle
push
jnp
adc
rol
xor
mov
cmp
cs
cmp
iret
sahf
nop
in
xchg
popa
lret
sbb
sahf
je
mov
add
mov
aad
out
jo
jno
adc
and
xchg
push
mov
mov
jno
adc
push
mov
or
jmp
push
mov
cmp
sub
aad
pushf
ds
add
push
adc
and
les
adc
es
sbb
daa
dec
mul
mov
ret
pop
ljmp
js
push
adc
les
adc
jecxz
hlt
jae
adc
push
xchg
je
jecxz
mov
popf
mov
adc
mov
movsb
faddl
adc
lret
mov
aas
xorb
and
pop
data16
sti
add
cmp
out
call
mov
test
xchg
inc
inc
insl
aam
sbb
lcall
or
popf
xchg
xorl
push
mov
xor
je
adc
pop
and
xchg
or
repnz
add
ljmp
push
adc
nopl
add
or
outsb
inc
sbb
mov
push
shlb
jmp
fiaddl
push
lock
adc
dec
loope
test
roll
sub
test
adc
out
lods
xor
pop
jbe
cmc
call
mov
xchg
or
mov
cli
rcr
adc
adc
push
aad
jnp
outsb
inc
mov
lea
outsb
pop
adc
sbb
mov
fadds
lret
arpl
rcrb
faddl
adc
sbb
jo
adc
xchg
sub
mov
push
adc
mov
push
push
in
jae
adc
fsubrl
or
hlt
in
inc
divl
inc
fs
sub
cmpsl
dec
shll
in
js
test
sub
divl
adc
xlat
jle
arpl
pushf
out
andl
icebp
imul
repnz
incl
adc
es
pop
js
mov
add
adc
fwait
and
dec
sbb
push
xchg
inc
xchg
cmp
mov
cmpsl
lcall
or
mov
stc
pop
adc
mov
lcall
adc
pop
adc
test
mov
sub
adc
movsb
int
xor
adc
push
adc
mov
jne
js
jns
jns
shll
cmp
test
rcrl
nop
add
sbb
dec
stc
sbb
mov
int
int3
sbb
mov
mov
xor
rorb
pop
ds
scas
fldenv
cmp
push
inc
lock
lret
das
or
jbe
cmp
mov
mov
and
js
pop
push
iret
stc
hlt
mov
fidivs
jge
adc
push
adc
push
adc
mov
mov
fidivs
imul
adc
xor
add
fidivrl
ljmp
sahf
cmp
or
ficompl
push
adc
daa
popf
jecxz
adc
je
shrl
test
gs
enter
xor
repz
arpl
push
sub
lods
jge
adc
pop
dec
ficompl
fistpll
mov
sbb
repz
mov
rep
ds
out
pop
jne
push
fsts
sub
sbb
mov
push
insl
inc
ret
or
or
or
cmp
daa
popa
dec
clc
sbb
pusha
loopne
pop
dec
gs
mov
ss
cmpsb
repz
call
mov
sbb
xor
dec
sbb
xor
ljmp
mov
jmp
lahf
jecxz
jl
rcl
inc
pop
dec
xor
lds
jb
mov
mov
andl
push
adc
push
pop
adc
cmp
jg
mov
sbb
sub
lcall
inc
ficoms
mov
mov
pop
ljmp
lcall
jns
jmp
pop
shr
loope
inc
fdivrs
inc
cltd
mov
push
xchg
inc
sbb
and
mov
filds
jg
jo
jns
pop
mov
call
mov
xor
xor
mov
add
lcallw
mov
clc
jle
fisubs
repnz
inc
mov
loope
fmul
sti
xchg
dec
mov
out
mov
sarb
fcmovnu
cs
std
int
mov
mov
pop
jecxz
xlat
aam
jne
repnz
sahf
ja
and
pop
sub
push
inc
dec
sub
jle
mov
pop
cmc
into
popf
xlat
pushf
call
mov
jb
in
inc
ror
loope
mov
sub
mov
jnp
int3
lret
inc
xchg
pop
aaa
sub
into
pop
mov
into
dec
pop
iret
mov
xchg
pop
out
xlat
movsb
dec
mov
mov
ret
das
xorl
mov
mov
iret
stos
xor
loop
and
adc
or
imul
mov
cwtl
xor
addr16
push
imul
xchg
sbb
notb
jge
cwtl
test
inc
cwtl
and
adc
test
cmp
aas
and
fucomip
lods
mov
sarl
aaa
sbb
repz
icebp
mov
out
and
pop
push
je
lods
cld
sub
inc
fistpll
ret
cmp
push
aad
mov
lock
jno
fmull
test
push
cld
cmp
inc
push
mov
inc
xchg
jnp
shr
into
xor
icebp
or
xor
jecxz
mov
mov
dec
add
sub
xchg
xchg
out
or
dec
or
arpl
pop
jge
out
jge
pop
nop
ja
add
jne
mov
out
jg
inc
ret
int3
imul
xorb
popf
inc
push
call
cmp
jmp
imul
mov
adc
ja
add
add
cmove
movsl
mov
mov
test
xchg
dec
ljmp
sbb
das
add
enter
xor
repz
arpl
push
sub
mov
push
adc
pop
dec
aaa
push
mov
sbb
repz
mov
rep
ds
sbb
pop
jne
push
fsts
sub
sbb
mov
fsubp
daa
fisttpl
cwtl
pop
dec
fs
repnz
jg
pop
movsb
mov
or
aas
sbb
or
fwait
aad
arpl
repz
mov
mov
mov
insb
sub
xor
mov
xchg
outsl
cwtl
pusha
aas
js
xchg
ja
arpl
aas
sub
xor
lahf
fs
cltd
lock
xchg
dec
pusha
mov
pop
int3
sahf
mov
xchg
xor
adc
mov
mov
dec
cmc
loop
imull
repz
leave
lods
pusha
mov
sub
sbb
mov
jle
int3
imul
iret
js
adc
pop
mov
xchg
xchg
jle
mov
cmp
cs
jecxz
cmp
jb
enter
xor
jge
inc
fstpt
insl
pusha
dec
cs
fcmovnb
and
pop
inc
jle
xchg
mov
mov
cmp
jnp
cmp
sbb
ret
mov
mov
cmc
sbb
push
xor
or
lods
test
cmp
pop
mov
sbb
push
adc
jne
mov
aam
cmp
ret
inc
rorl
mov
int
pusha
fldcw
iret
in
iret
mov
adc
or
adc
mov
jge
adc
jecxz
mov
repz
inc
mov
mov
roll
fmul
jge
adc
inc
clc
aad
iret
gs
xorl
push
adc
mov
or
shl
roll
js
or
sbb
daa
ds
jne
arpl
mov
pop
mov
mov
or
mov
filds
or
stc
out
in
dec
xchg
dec
xchg
and
les
mov
out
cld
roll
sarl
sub
cmp
lods
into
xchg
mov
add
sarl
jns
hlt
push
inc
fbld
mov
adcb
mov
in
aaa
lods
daa
pop
add
pop
xor
js
dec
add
dec
mov
xchg
sub
xchg
rorl
fnstsw
mov
nop
sahf
loopne
orb
xlat
cwtl
mov
sub
adc
pop
mov
inc
push
aad
lock
jb
pop
mov
jl
or
dec
cld
fcomps
fmull
ret
sub
sub
insb
sub
fmull
push
xchg
push
inc
inc
cmp
repz
jmp
flds
cwtl
or
mov
lcall
mov
push
sbb
es
fdiv
mov
or
lahf
inc
cwtl
loope
mov
push
fstpt
pushf
push
enter
add
loope
mov
and
or
inc
adc
jl
not
rolb
pop
mov
sti
stc
add
lods
and
insb
mov
dec
jae
xchg
mov
mov
push
dec
lret
fmuls
pushf
das
push
lea
movl
stc
xor
sub
repz
mov
xchg
mov
es
cmp
int3
cmp
lds
fadds
xor
inc
inc
add
insb
int3
jns
mov
cmp
in
lds
rcrb
jg
jbe
xchg
outsb
adc
xor
cmpsl
shrl
popf
stos
sbb
shlb
ret
xchg
movsb
pop
xor
inc
sti
loopne
mov
sar
stos
push
add
or
sub
sbb
dec
outsb
or
dec
dec
dec
dec
daa
push
xchg
push
adc
loop
loopne
mov
lret
icebp
jbe
shrl
add
test
call
or
pop
jge
xchg
rorb
lds
mov
and
cmovns
mov
mov
xlat
inc
rcll
sti
movsb
out
pop
add
int
add
and
add
cmp
loope
ja
cli
stos
push
ja
repz
test
push
sub
mov
outsb
inc
add
xor
xchg
cs
int
insb
mov
xchg
ljmp
outsb
outsl
sahf
mov
adcl
testl
or
xchg
jg
popa
xchg
adc
leave
or
and
mov
xchg
xor
xchg
jle
lcall
push
xor
ja
popa
mov
jne
lret
sbb
inc
std
dec
popa
cmpsl
adc
cli
mov
xchg
fisttps
inc
lods
rolb
clc
jmp
adc
mov
push
xchg
les
pslld
jle
xchg
lock
out
mov
mov
int
into
adc
test
in
pmaxub
pop
loopne
push
addr16
sub
iret
push
in
sahf
inc
fwait
mov
into
sbb
push
test
cmpsl
and
and
out
out
les
mov
lods
sbb
out
cmp
xor
inc
movsb
int3
or
dec
hlt
hlt
adc
xor
dec
test
and
add
insl
ret
sub
stos
or
jbe
mov
popf
or
ret
fidivs
xchg
or
gs
cmp
frstor
push
cli
ljmp
fsts
cld
mov
and
push
test
mov
cmpsb
stos
fs
data16
mov
xchg
pop
rorb
fs
xchg
outsl
add
inc
idivb
cs
lret
mov
divl
sbb
shll
cmp
lods
mov
push
adc
push
adc
in
xchg
arpl
sbb
mov
imul
mov
fbld
xchg
xchg
inc
sbb
fdiv
sti
or
push
pop
hlt
mov
in
pushf
rcr
das
inc
and
pushf
ss
repnz
dec
movl
rorl
cmp
lahf
or
in
push
cld
mov
xchg
movsl
movsb
cs
js
xor
pop
test
dec
dec
movsl
adc
adc
ds
icebp
insl
and
int
and
mov
call
xor
mov
test
cwtl
ret
iret
xchg
pop
idivb
xor
xlat
dec
xchg
sub
les
dec
imul
movsl
ss
mov
push
and
sbb
and
shl
xchg
stos
jns
sahf
in
inc
dec
mov
pop
nop
cwtl
jns
pop
add
stos
inc
push
int
neg
sub
test
test
mov
ss
and
pop
dec
xor
add
push
and
les
xchg
cmc
out
popf
addl
fnstenv
sub
jo
push
addr16
pcmpgtd
jno
test
xchg
aad
int3
jg
es
push
inc
inc
add
dec
jl
pop
dec
push
and
iret
ds
inc
push
inc
outsl
cmpsl
xchg
jnp
push
repnz
cmp
lock
lcall
out
sahf
dec
enter
in
mov
in
push
out
jecxz
cmc
cmpsl
shl
or
sub
aad
leave
call
mov
dec
fs
in
shl
inc
xchg
add
movsb
mov
xor
push
add
dec
loopne
push
adc
xchg
cli
mov
mov
xor
gs
int
dec
jg
lock
ja
dec
mov
aaa
fdivrs
adc
cwtl
in
sarb
adc
mov
clc
or
jb
test
sbb
add
jg
enter
sbb
cli
fnsave
fildll
cmp
sarb
call
dec
adc
cmp
test
dec
jg
outsl
ret
xor
sar
aaa
fs
push
pop
lods
pop
mov
cmp
frstor
xor
push
sub
pushf
push
sbbl
popf
push
repz
mov
rep
ds
sbb
je
mov
cmp
inc
loope
xor
push
addr16
roll
movsl
push
orb
jns
ret
cmp
pop
adc
xor
out
in
jge
adc
xchg
ficompl
xor
pop
sahf
arpl
push
mov
icebp
push
pop
xor
js
xchg
jle
inc
shll
fidivrs
daa
call
inc
pop
sbb
mov
lods
jg
and
addr16
jecxz
mov
push
data16
xchg
jp
pop
mov
mov
jecxz
mov
imul
xor
mov
pop
sub
adc
adc
call
inc
outsl
aas
inc
ljmp
stos
sbb
fwait
sub
ret
pop
xor
imulb
sub
xchg
sahf
or
cmp
pop
cmp
cmp
jmp
jecxz
aaa
dec
xor
dec
call
sbb
ret
call
dec
hlt
jp
insl
sbb
cmp
push
out
call
gs
adc
fwait
inc
loope
leave
je
xchg
sub
add
fstps
leave
outsb
jp
jo
xchg
push
mov
inc
test
cs
push
movsb
sub
scas
mov
jle
sub
sti
addl
mov
scas
lock
mov
inc
inc
ljmp
fidivrl
nop
inc
test
enter
cmp
gs
scas
pop
adc
dec
sahf
and
sbb
cmp
out
jecxz
adc
lods
mov
sbb
not
sahf
mov
sahf
xchg
shrl
je
mov
mov
lret
fnstcw
nop
cs
cmp
push
sahf
repz
repz
fs
sub
jo
inc
lahf
inc
stc
loop
sbb
mov
popa
dec
pop
inc
sbb
lea
daa
jnp
negb
push
sub
sbb
out
xchg
loope
sbb
inc
sbb
js
pop
pop
mov
mov
mov
jecxz
mov
fwait
dec
scas
dec
popa
ljmp
pop
iret
jmp
or
mov
mov
adc
jno
es
int3
aad
and
mov
push
dec
je
jnp
xchg
movsl
gs
pop
imul
out
scas
popf
pop
pop
inc
inc
call
icebp
jmp
sub
or
pushf
adc
mov
mov
sbb
mov
sub
xchg
repz
mov
dec
nop
pop
sahf
call
sbb
inc
mov
jge
notl
xor
inc
and
inc
andl
sub
test
push
sbb
popa
dec
mov
lea
gs
sbb
xlat
divl
pop
lret
mov
repnz
das
push
lahf
loopne
in
cmpsl
fnstcw
adc
inc
pop
mov
cmp
and
addb
imul
ficompl
jo
jecxz
pop
shll
test
rcll
popa
ret
xchg
adc
mov
pusha
dec
jbe
cmpsb
jnp
idivb
jne
sub
add
cmp
xchg
jmp
fcompl
icebp
add
sbb
inc
dec
xchg
jne
cmp
lock
cltd
sbb
xor
add
mov
je
adc
popa
ss
or
lret
or
add
cwtl
push
xchg
xchg
jl
imul
push
or
xchg
jl
loopne
sub
leave
int3
rcl
jo
xchg
jg
jmp
sub
adcb
nop
insb
popa
and
cs
mov
gs
or
xor
xchg
pop
icebp
or
lret
sbb
jne
mov
dec
and
subl
pusha
ret
xchg
mov
xlat
ja
ret
jge
enter
loop
jl
shlb
inc
mov
inc
insl
dec
rolb
insl
cwtl
jg
into
mov
mov
pop
jp
mov
sti
cli
push
jmp
or
inc
push
out
mov
outsl
xchg
sti
sub
or
mov
sbbl
dec
or
dec
sti
mov
loope
or
bound
scas
rcr
xor
dec
out
cwtl
ss
mov
movsl
cmc
stc
sub
fisttps
ja
aaa
mov
mov
fwait
insb
lahf
pop
xor
shrl
aaa
xor
orb
out
cmp
cmp
arpl
fcom
sarb
dec
in
pop
jbe
push
ja
pop
movb
cmp
aad
jo
adcl
popa
fiadds
cmc
jns
popa
dec
adc
add
cmp
inc
dec
sub
xchg
scas
into
bound
ret
mov
arpl
sub
cmp
xchg
jg
scas
xor
pop
clc
popa
cmpsl
scas
cmpsl
rcrl
sub
pop
lcall
js
sub
mov
inc
mov
pop
dec
dec
loope
mov
dec
sbb
sbb
enter
mov
mov
rolb
es
xchg
fdivl
cmp
adc
outsb
jle
inc
add
fwait
dec
and
inc
pop
test
sub
sarb
and
loopne
ljmp
push
icebp
jp
pop
hlt
movl
outsb
repz
xorl
and
sub
adc
pop
sub
sbb
fidivl
mov
add
outsb
sar
or
lahf
and
sahf
cmpsb
ret
call
aaa
popa
inc
sbb
mov
lods
bound
in
sub
sbb
cmp
call
adc
insb
xchg
or
push
jae
xor
dec
cmp
jmp
cwtl
cmp
dec
lods
out
test
sti
ret
cmpsl
adc
pop
sbb
sub
jns
push
or
adc
jge
movsb
imul
fldcw
mov
enter
stc
jae
jbe
pop
jle
outsl
mov
sub
jmp
dec
fs
enter
and
mov
fistpll
push
xor
mov
inc
cwtl
cmp
or
mov
xlat
cld
arpl
sub
orb
rorb
pop
xor
xchg
sbb
adc
jg
sarb
push
jo
mov
aaa
loopne
out
dec
pop
enter
jl
and
in
mov
sbb
jnp
std
cmc
int3
aad
dec
rolb
cmp
pop
int
adc
leave
arpl
add
int3
pushf
cmp
cmp
arpl
dec
movsb
push
out
pusha
mov
call
data16
mov
cmp
fnstenv
lahf
movl
pop
icebp
sbb
cli
movsb
lret
mov
jmp
lds
out
sub
mov
int
movswl
stos
adc
xchg
clc
js
test
stos
fucom
inc
popf
cmp
sbb
inc
imul
sbb
pop
cld
pusha
sub
rolb
sub
inc
insl
cmp
add
out
xor
lods
cwtl
test
dec
push
jmp
push
arpl
dec
and
iret
loop
aaa
insl
push
imul
dec
mov
mov
icebp
push
dec
push
xchg
out
mov
clc
sub
jp
push
inc
inc
dec
es
push
in
push
sbb
outsl
sub
adc
xlat
cld
jnp
stos
pusha
cmp
mov
push
imul
xor
fimuls
outsb
add
cmp
inc
ds
fnstenv
xor
dec
cwtl
add
sub
cmp
adc
jecxz
aaa
mov
mov
loopne
lret
sti
inc
adc
mov
stos
add
test
popa
cwtl
mov
mov
sbb
in
fmull
inc
fisttps
ja
lret
xchg
stos
mov
jb
lret
enter
pop
dec
or
sbb
xchg
fsts
mov
sbb
cmp
push
cmp
mov
popf
sbb
mov
mov
out
pop
lods
repnz
mov
aaa
jl
push
popf
or
sub
sub
jg
jl
push
insl
jge
in
sub
push
ljmp
data16
leave
mov
add
fcoms
into
mov
ja
dec
aam
das
sbb
imul
mov
sub
xor
test
sbbl
jle
adc
dec
insl
and
ds
cmpsb
add
mov
int
mov
dec
lret
mov
and
dec
pusha
lea
fdivrs
adc
daa
cmp
and
xchg
sahf
fiadds
jnp
cs
test
add
movaps
lods
cmp
aam
push
adc
push
xor
adc
loope
aaa
pop
nop
xchg
insb
pop
jle
adc
push
jne
mov
ljmp
hlt
in
and
push
adc
movsb
xchg
mov
lock
ss
incb
in
in
orb
cmpsl
imul
jle
adc
out
cltd
xor
and
xchg
lods
jl
cs
xor
pop
dec
mov
jl
fs
inc
push
or
frstor
cmp
test
fdivl
scas
clc
mov
sbb
pop
sbb
or
scas
xchg
int3
jle
adc
test
pushf
or
push
or
hlt
test
pushf
jns
fcomps
jo
push
adc
xor
scas
fdivrl
pop
addr16
adc
push
mov
push
and
inc
aad
clc
jno
mov
scas
sub
adc
mov
ss
xor
xor
push
dec
add
out
mov
sbb
inc
add
adc
or
dec
jo
adc
and
stc
insl
xor
mov
dec
pop
inc
repz
adc
arpl
icebp
loop
and
push
adc
dec
insl
pop
in
xchg
xchg
mov
xor
shll
jle
adc
rolb
movl
jae
mov
ror
xor
repnz
inc
mov
fistl
push
adc
out
mov
sbb
fiadds
mul
int
inc
rolb
adc
rolb
fldcw
stc
lods
jns
lret
ror
popf
adc
repz
mov
pop
test
cmp
loope
xchg
push
adc
add
xor
enter
push
adc
add
jecxz
pop
cld
jl
xchg
nop
ja
add
je
jae
mov
adc
inc
shll
arpl
into
inc
test
dec
push
aam
push
adc
add
lret
and
push
mov
sbb
mov
rorb
in
sahf
xchg
out
je
push
adc
ret
mov
dec
insb
ret
or
pop
cs
ret
dec
insl
push
or
push
adc
mov
push
js
push
xchg
or
shlb
aas
cs
orl
dec
or
xor
dec
addr16
inc
and
js
push
xchg
out
pusha
jle
adc
dec
mov
je
repz
repnz
pushl
push
adc
dec
sarb
cmp
sbbl
lret
fstps
mov
imul
xor
int3
jle
adc
inc
enter
sub
sub
jle
adc
repz
ss
fisttpl
sbb
lahf
cmp
ds
in
mov
and
dec
jle
adc
push
adc
scas
adc
mov
add
push
adc
jo
popf
cs
or
clc
lret
sahf
movsb
xchg
lods
sub
inc
fxch
xchg
lcall
dec
pop
scas
popa
cmc
lret
imul
loopne
pop
dec
cmp
stos
or
adc
mov
xlat
cltd
ja
outsb
cltd
push
ret
arpl
aad
call
push
adc
dec
pop
inc
loop
add
rol
loopne
int
call
aad
or
jle
adc
add
test
loopne
add
pop
or
xchg
jae
pop
or
rcrb
jle
adc
cmpb
sbbb
xchg
test
fildll
std
sbb
mov
inc
mov
inc
mov
movsl
cmp
jnp
sub
xchg
test
add
push
adc
mov
lods
int
lds
out
pop
aam
and
jbe
repz
gs
stos
pop
xor
jle
adc
ljmp
jecxz
aam
push
adc
insb
aad
xor
cmp
push
aam
sahf
cmp
and
out
adc
jbe
sub
lahf
or
jle
adc
lea
stos
aas
add
scas
mov
xor
jo
push
adc
in
in
pop
inc
push
push
iret
sahf
inc
jnp
jl
in
cmpsb
leave
inc
and
cmp
mov
lods
adc
lret
fisubrl
cmc
mov
sub
cli
push
jb
dec
lds
jle
adc
test
jmp
xchg
xchg
daa
mov
and
pop
hlt
fisubl
orl
mov
imul
push
adc
gs
fsubs
mov
jge
adc
test
jge
or
jnp
jae
adc
push
jno
xor
xor
gs
fistps
loopne
insl
shll
mov
cmc
xchg
jae
adc
or
lret
setno
enter
pop
xlat
xor
sbb
add
ds
mov
ror
cmp
ficoml
aam
push
adc
lock
out
out
mov
pop
in
mov
rcrb
in
push
adc
hlt
cmpsl
jo
inc
outsl
hlt
loop
jmp
pop
mov
into
out
clc
jge
adc
cli
mov
cmpsl
sbb
arpl
aaa
mov
ror
test
in
jle
aam
inc
fwait
dec
dec
cwtl
cmp
lods
pop
inc
or
hlt
jge
adc
pop
out
ljmp
and
lea
data16
icebp
loop
push
jmp
mov
inc
in
mov
cmp
jle
into
pushf
cmp
lods
xor
out
mov
mov
ret
xor
daa
lret
das
pop
mov
adc
mov
push
imul
scas
addb
xchg
jge
dec
ret
loopne
scas
shll
rcrb
xor
mov
or
pop
adc
mov
flds
adc
mov
iret
xchg
adc
movsb
test
insb
pop
jns
loop
sub
cs
sub
dec
pusha
in
mov
pop
into
fs
in
inc
and
pop
cmp
xchg
pushf
testl
xor
push
adc
aaa
or
xor
aaa
es
push
stos
and
push
adc
movsl
add
pop
out
rolb
pop
adc
pusha
add
pop
adc
xor
add
pop
adc
mov
sbb
xchg
sub
pop
jns
out
mov
shlb
inc
and
movsl
ds
into
repnz
or
add
xchg
js
shll
jg
adc
in
sub
push
adc
ja
aaa
into
lret
lcall
addb
outsl
mov
adc
dec
movsl
push
add
push
adc
insl
xchg
test
lret
sbb
sub
stos
sbb
popa
adc
jge
adc
xor
sub
xchg
dec
cld
jle
adc
out
mov
or
faddl
adc
mov
xlat
cltd
xchg
lock
adc
sti
ret
call
adc
cs
sti
lret
sbb
test
adc
lods
test
dec
push
jns
lods
out
aam
push
stos
loop
enter
pop
mov
jo
adc
sbb
cmpsb
hlt
pushl
jne
sbb
in
push
adc
add
lods
and
mov
dec
inc
mov
adc
mov
add
add
inc
sbb
jecxz,pn
test
push
inc
movsb
lock
mov
and
mov
adc
flds
jge
sbb
icebp
popa
dec
dec
in
outsb
lods
pop
xchg
jecxz
pop
xchg
nop
mov
outsl
popa
sbb
ds
lcall
fiadds
mov
jo
fimull
stos
stos
mov
fists
dec
add
inc
jg
popf
mov
xchg
cmp
bound
stos
mov
inc
gs
pop
insb
push
cs
ja
cmp
jo
cmc
and
filds
in
addb
xchg
push
xor
lret
or
mov
xlat
fdivp
jge
xor
or
lock
mov
mov
and
test
div
xchg
iret
sub
mov
cmp
int3
mov
add
mov
xchg
movsl
aaa
aaa
aas
adc
xor
jno
dec
inc
xor
cltd
mov
aam
add
in
rcrb
mov
jbe
push
sbbl
and
mov
inc
mov
add
mov
pop
mov
adc
dec
imul
xchg
nop
test
daa
push
imul
push
adc
push
je
push
adc
in
insb
jl
adc
lock
dec
xchg
fwait
sbb
ljmp
push
dec
addl
gs
cmpsb
movl
inc
clc
stos
cmp
mov
mov
cmp
push
test
mov
sub
adc
xchg
sbb
xchg
js
xor
cwtl
sub
icebp
xchg
inc
jl
push
sub
popf
mov
and
cltd
iret
mov
or
push
loop
lahf
idivl
add
jae
or
cmp
test
mov
fnstenv
and
outsl
shl
lds
xchg
popa
lcall
push
and
out
pop
xor
mov
jbe
pop
ds
sub
cmp
sub
out
lcall
out
pop
sub
xchg
xchg
mov
inc
rcr
arpl
xchg
or
mov
xlat
pusha
clc
adc
dec
dec
out
lds
inc
lock
stos
cmp
pop
icebp
in
xchg
scas
and
dec
scas
mov
cmp
arpl
mov
xchg
repz
loopne
into
sbb
push
xchg
movsl
insb
mov
clc
push
cmpsb
int
adc
mov
testl
in
or
fwait
mov
arpl
fwait
std
inc
jno
add
jne
pop
and
adc
test
dec
arpl
lcall
ret
and
xchg
mov
add
push
mov
lds
mov
jne
xor
ret
jne
mov
repz
lcall
inc
xlat
push
push
loop
jmp
pop
xor
or
icebp
in
adc
das
lock
mov
jmp
jg
mov
and
clc
pusha
pop
or
inc
stos
popa
andl
and
fstp
mov
cmc
mov
sub
adc
jne
data16
into
xor
pusha
sbb
popf
out
push
leave
mov
pop
jg
adc
mov
loopne
test
call
cmpsl
lds
aaa
out
jg
mov
sarb
out
and
repnz
adc
mov
ret
fs
jno
stc
fdivrl
lret
pop
loope
and
inc
lock
pop
sbb
bnd
xchg
dec
cmp
or
xchg
loope
fs
nop
iret
orb
arpl
lcall
mov
inc
aad
push
dec
push
es
cli
aas
cvtps2pi
in
leave
out
fs
out
lock
stc
mov
cmp
push
in
mov
jne
jne
dec
repz
sub
fldl
out
cmp
test
xchg
clc
scas
push
and
mov
mov
jbe
mov
mov
sub
jmp
mov
jae
mov
outsl
loopne
lock
aad
jae
repnz
push
push
pop
mov
xor
dec
jge
xchg
and
jge
lods
dec
push
xchg
rorl
mov
fldl
ret
insb
lcall
add
and
xchg
jecxz
push
add
add
fcomps
pop
cld
pop
adc
movsl
fcoml
sbb
decb
fadds
fsubs
bound
fdiv
xlat
mov
into
test
aas
and
pop
orb
or
mul
aas
jg
xchg
xor
or
ror
mov
or
xor
mov
sbb
cmp
cmpsl
xchg
cs
out
rcrb
cltd
dec
and
loop
lcall
xor
sub
loop
out
push
fildl
mov
ljmp
mov
or
mov
mov
in
pop
out
mov
pop
xor
mov
lcall
addr16
cmp
fstpt
jmp
fidivs
ret
outsb
outsl
mov
lcall
scas
mov
jne
daa
test
setbe
and
xchg
out
fs
lahf
sahf
cmp
dec
pop
xor
sbbb
popf
je
push
in
fiadds
fldenv
xchg
inc
imul
into
test
out
xchg
out
inc
ror
adc
into
xchg
sbb
mov
imul
xor
sub
push
adc
data16
ret
aam
dec
mov
int3
shll
leave
sbb
cmp
adc
sbb
mov
mov
xor
push
sti
cs
enter
add
inc
mov
xchg
inc
mov
mov
imul
cs
dec
fs
sahf
cmp
enter
sahf
sbb
or
jmp
js
adc
add
cmp
xlat
dec
iret
dec
mov
xlat
jge
xchg
pushf
mov
repnz
jl
lock
mov
ret
rcrb
lret
call
inc
add
es
push
dec
addl
xchg
xor
cmc
flds
ret
out
and
aas
je
fistpl
cmp
rclb
inc
mov
into
adc
cmp
lret
imul
popf
mov
call
xor
jmpw
fistl
repnz
shlb
jbe
ficomps
push
ret
sahf
mov
movsb
inc
mov
lret
adc
or
outsb
cmp
into
insb
pop
push
push
add
xor
sub
sbbl
pop
insl
loope
xchg
xor
push
cmp
inc
push
inc
insb
mov
fisttpl
push
lret
nop
push
mov
addr16
jecxz
dec
sub
std
fmull
push
dec
test
aaa
add
xor
xor
dec
leave
ret
testl
das
test
pusha
daa
cmp
adc
mov
inc
push
repnz
dec
movsb
push
sbb
fsts
xor
pusha
cli
lock
cmp
in
dec
jecxz
adc
pop
add
sub
xchg
adc
xor
sub
adc
aam
push
int3
add
xor
pop
adc
push
and
movl
mov
pop
repz
lods
inc
in
jle
fdivr
sbb
cmpsb
fs
pop
ljmp
xchg
popf
pop
je
xchg
dec
mov
push
sub
mov
cmc
jl
mov
xchg
dec
pop
orb
jg
mov
outsb
inc
pop
xor
push
pop
add
ds
lret
out
jge
jl
repnz
xchg
mov
arpl
out
pop
popa
imul
lods
lea
jecxz
ror
test
or
mov
add
mov
ljmp
inc
stos
sub
out
ret
pop
lods
mov
in
adc
outsl
loope
xor
or
sub
bound
addr16
lret
add
push
aas
push
in
cmp
mov
lret
or
xchg
jp
mov
repz
cld
lods
push
rcll
push
inc
imul
bound
jae
adc
mov
icebp
lretw
lahf
cmpb
add
xchg
add
push
repz
sbb
mov
mov
fstpt
cmp
jno
test
fldcw
or
negb
or
lret
adc
jbe
xlat
mov
pushf
sub
pop
cmp
pop
xchg
adcl
mov
mov
out
jle
dec
mov
add
pop
mov
dec
lock
push
cltd
lret
sbb
jmp
dec
js
adc
icebp
loop
mov
cmp
int
mov
xchg
movsb
sub
stos
lahf
stc
and
jne
icebp
loop
mov
mov
add
xchg
ljmp
and
sahf
jno
push
mov
xchg
lcall
mov
sahf
cmp
dec
mov
xor
mov
lahf
sbb
pop
cld
pop
insb
mov
out
xchg
call
xchg
jg
and
push
pop
mov
cli
jl
xchg
rolb
pop
movsl
mov
aas
jns
xchg
xor
mov
out
into
adc
push
js
fs
pop
push
lret
ret
outsl
cmp
xchg
cld
cmp
ficoml
bound
push
loop
cmp
lock
aaa
dec
ja
xchg
gs
xchg
jns
jb
bound
cmp
mov
icebp
loop
mov
cmpsl
stos
sub
xchg
sti
mov
jp
out
scas
and
push
push
cmp
int3
jp
adc
mov
rorb
fistps
mov
or
out
pushf
mov
popa
test
pushf
das
pop
cmpsl
inc
fcomi
xchg
xchg
xchg
mov
ljmp
icebp
cmc
pop
cs
dec
iret
aam
xchg
mov
ss
cmp
push
jbe
push
sbb
mov
or
inc
out
sbb
cmpsl
mov
std
loop
push
mov
or
mov
call
cmp
sbb
pop
xor
mov
sbb
or
pop
cmp
push
add
inc
sub
sbb
mov
lret
ja
add
xchg
daa
lcall
lret
jle
xchg
jbe
leave
dec
test
dec
xor
leave
dec
ds
and
sahf
and
test
bound
nop
push
subb
shll
and
and
mov
pop
fwait
js
daa
mov
sbb
xchg
xor
jns
push
sub
sub
lods
loopne
push
int
pop
test
dec
xor
js
cmc
pop
lea
mov
enter
sub
pop
xchg
pop
cmpsl
notb
sub
gs
xor
cmpsb
hlt
and
out
push
adc
jne
insb
mov
test
fimuls
ljmp
xchg
push
or
add
mov
add
test
je
scas
adc
push
or
inc
insb
ds
movsb
pop
movsb
pop
pop
in
insl
xchg
inc
je
clc
dec
js
loopne
jo
pop
sub
loope
mov
xor
repz
test
mov
cli
out
pushf
subl
mov
mov
adc
cmc
dec
popf
cmpsl
or
sbb
shrl
cli
popf
lods
mov
mov
jmp
cmp
loopne
aad
pop
loop
js
push
lahf
popa
mov
fadd
mov
seto
jns
iret
lods
movsb
add
sub
cld
cmpsl
mov
aam
jge
mov
nop
add
sub
filds
cmp
fidivrl
xchg
xchg
dec
cmpsl
int3
add
icebp
fsubs
std
lods
jno
xchg
dec
sbb
nopl
sub
adc
and
xchg
popl
jbe
jb
sbb
adc
sbb
adc
pushl
pusha
jo
adc
jl
push
in
inc
pop
mov
mov
xchg
movswl
cltd
lock
andb
sub
sub
and
jo
data16
mov
jns
lcall
out
pop
jge
loopne
lret
xor
fnstcw
iret
sahf
sub
lret
xchg
scas
bound
or
mov
outsl
movsb
cmpsl
lds
sbb
mov
or
sar
iret
je
push
adc
cmp
sbb
aad
pop
aaa
dec
dec
in
into
lcall
out
fchs
sub
pop
jmp
out
fsub
and
pushf
repnz
scas
pop
mov
ss
mov
xchg
js
adc
push
adc
stos
pop
push
call
rorl
sbb
loopne
jo
mov
imul
push
adc
cmp
xor
xchg
pop
bound
adc
out
pushf
push
jno
mov
mov
mov
fldcw
adc
leave
jne
hlt
xchg
loope
or
in
gs
ret
movsl
cmpsl
inc
inc
fisttpl
icebp
adc
ljmp
aam
sbb
adc
or
xchg
inc
lea
pusha
jo
adc
das
push
cmp
mov
mov
inc
add
and
jo
mov
sbb
pop
xor
and
stos
je
push
adc
fisubrl
inc
mov
push
insb
or
xor
mov
add
push
cmp
icebp
dec
insb
stc
cmpsb
in
dec
mov
mov
out
mov
jecxz
je
push
adc
je
or
pushf
aam
inc
outsl
xchg
or
lock
xor
loop
les
add
jl
add
sbb
mov
adc
sub
xor
and
pop
sbb
addb
loope
fsub
and
push
adc
das
sar
aaa
or
adc
fwait
sbb
sti
xchg
faddl
push
cmp
adc
adc
jmp
shll
jmp
enter
sub
adc
pop
push
or
ja
enter
add
mov
mov
xchg
inc
xor
mov
test
adc
xchg
xchg
fwait
mov
enter
pop
and
fidivrl
adc
jle
cltd
insl
inc
sbb
testl
push
int
aad
xchg
cmpsl
fsts
xor
xchg
call
das
cmova
add
sbb
test
push
push
pushf
sub
adc
push
mov
loope
push
push
enter
popf
pop
ss
shl
push
popa
adcb
pusha
mov
mov
mov
inc
popa
and
jae
and
enter
mov
repz
xchg
pop
jne
jmp
mov
xor
sub
call
repz
xor
jecxz
lret
inc
mov
and
das
push
or
jb
out
lea
jbe
mov
or
cwtl
sub
repnz
scas
gs
jle
adc
inc
adc
aas
push
andl
sub
jnp
ja
adc
inc
push
jge
pop
mov
adc
int
and
sti
mov
cmp
mov
push
mov
out
cmpsb
cmp
repnz
std
aam
hlt
in
out
pushf
or
sub
pop
cld
adc
jb
and
test
loope
mov
inc
into
push
dec
inc
scas
fdivrl
cltd
mov
adc
in
sahf
sub
or
cmpsb
pusha
loope
popa
lret
bound
loope
cmpsl
mov
sbb
daa
xchg
xor
movb
dec
cli
xchg
int
insl
std
pop
mov
pop
outsb
imul
add
adc
pop
dec
rol
push
shlb
movsl
xlat
add
enter
shll
cmpb
mov
push
test
cmp
sub
es
imul
push
sbb
dec
or
lds
fs
mov
dec
mov
mov
arpl
daa
xchg
cmc
sub
pop
cs
mov
cmp
repz
mov
roll
aam
iret
jg
insb
dec
fcomi
loop
pushf
aaa
pop
pop
mov
cmpl
hlt
and
xchg
xchg
xor
cmpsb
inc
cli
loop
mov
xor
mov
out
or
inc
push
setle
or
xor
shll
lahf
cmp
aaa
in
mov
lds
fs
push
mov
gs
repz
iret
sahf
dec
or
lcall
push
shlb
insb
mov
imul
sahf
cmp
adcl
inc
dec
cmovo
lock
outsb
out
es
jae
iret
sahf
jbe
repz
call
or
fwait
mov
mov
cs
ror
cmp
jae
ss
sbb
jg
sbb
je
std
push
cmp
pop
nop
mov
push
cs
or
xor
pop
lcall
sbb
int3
mov
xor
enter
xchg
jno
sub
into
cmpsb
pop
mov
mov
push
cmp
popf
push
pop
pop
mov
inc
popf
bndstx
bswap
jle
adc
cmp
and
mov
sbb
orb
push
adc
ss
mov
cmpsl
xor
fbstp
mov
pushf
add
fbstp
xchg
les
je
cmc
scas
mov
pop
xor
andb
add
or
lcall
push
add
mov
sahf
movsl
push
ret
movsb
jbe
push
lock
sub
ljmp
or
dec
hlt
sub
sbb
add
mov
js
xchg
sbb
pop
lods
icebp
sarl
fbstp
sarb
mov
jns
inc
scas
sbb
sti
or
push
cld
mov
dec
add
and
mov
jo
sbb
test
xchg
fucomip
popw
and
add
cmc
lock
mov
inc
idivl
inc
and
fsubrs
inc
mov
movsl
cmp
xchg
shll
mov
fistpll
lcall
xchg
xor
mov
test
pop
je
js
dec
pop
popa
jno
sub
mov
imul
cmp
pushl
and
cmp
dec
wbinvd
imul
aad
cmp
sarb
cmpb
loop
ret
in
and
cmp
cmpsb
jbe
test
aas
call
xchg
andb
inc
cmc
jae
insb
dec
pop
inc
dec
or
push
inc
in
mov
rcrl
push
add
fsts
nop
iret
sahf
in
fstpl
mov
test
aad
jno
imul
add
inc
imul
cmpsl
dec
cmp
add
hlt
pop
gs
xchg
sbbb
or
jo
xchg
mov
sbb
lcall
add
pop
hlt
fsubl
xchg
xchg
test
andl
nop
scas
fdivr
push
push
mov
cltd
andl
sbb
test
sub
aam
out
and
pop
rolb
push
mov
incl
sahf
inc
movsl
xchg
lret
andl
dec
loopne
stc
push
pop
rolb
push
mov
incl
sahf
inc
movsl
xchg
lret
andl
dec
loopne
stc
dec
and
movsb
arpl
rolb
push
mov
incl
sahf
inc
movsl
xchg
lret
andl
dec
loopne
stc
sub
movsb
arpl
rolb
push
mov
incl
sahf
inc
movsl
xchg
lret
andl
dec
loopne
repz
pop
push
mov
cld
outsb
dec
div
out
pop
push
stos
shll
and
add
dec
xor
loop
mov
out
adc
mov
jl
mov
cmc
sbb
movsb
movsl
dec
push
cmp
jp
mov
int3
pop
es
iret
xor
push
cmc
out
out
jbe
shll
adc
cmpsb
sub
loop
stc
gs
insl
popf
sub
mov
mov
fiadds
xor
and
fwait
repnz
sub
test
jno
dec
xlat
or
call
inc
and
js
mov
or
shl
outsb
cs
lret
add
sahf
cmp
ds
lcall
out
es
mov
cli
inc
pop
std
in
mov
xchg
cwtl
outsb
or
push
jge
out
clc
push
movsb
arpl
sub
das
add
adc
adc
xor
or
xor
movsl
and
xor
cmpsb
ret
rcrb
shlb
ret
inc
jmp
xor
int
sbb
movl
sarb
add
add
mov
lret
xchg
xlat
cmc
push
repz
mov
in
stc
ss
mov
jmp
outsl
push
out
int3
fwait
xor
jb
jo
adc
jne
shrb
adc
push
add
test
enter
daa
pop
leave
mov
cmovs
cld
xchg
fisubl
pop
lret
aad
mov
mov
ja
jnp
pop
lret
stos
lret
inc
orl
and
add
fcomp
sarl
jo
fwait
jle
dec
mov
mov
call
int3
push
std
cli
imul
js
idivb
dec
stos
pop
test
subl
push
sbb
mov
sahf
dec
xor
lcall
rorb
jb
stos
sbb
dec
outsb
push
int
movsl
movsl
das
cmp
sub
cmpsl
fsubl
repnz
imul
xchg
sbb
mov
sbb
jne
pop
or
adc
dec
xor
mov
mov
scas
out
sbb
test
jb
inc
dec
jg
and
adc
neg
mov
pop
push
fbld
das
push
mov
xorb
inc
outsl
mov
xchg
out
fidivrs
aad
pop
xor
out
inc
or
orl
jb
cmc
out
out
inc
adc
dec
mov
dec
and
lods
pop
pop
cmp
mov
jne
int3
adc
add
add
add
movsl
testb
lcall
add
push
cltd
dec
lret
push
loopne
xor
fnstsw
pop
xor
xor
ret
xor
ljmp
xor
scas
jge
push
rcr
lock
inc
fcompl
adc
pushf
cmc
int3
mov
fsubrl
fcmovb
es
dec
xor
add
mov
js
pop
jle
hlt
pop
insb
outsl
orb
arpl
adc
push
int3
push
pushl
adc
es
in
mov
push
jno
xor
ja
mov
ljmp
xor
lret
adc
cmp
shl
mov
int3
add
int
xor
out
mov
sbb
sub
mov
cmp
mov
imul
push
mov
test
sbb
pop
xor
xor
cs
mov
ret
outsb
and
gs
sbb
aad
mov
mov
mov
out
xor
pop
imul
cmp
adc
enter
bound
js
cwtl
mov
sub
sbb
xchg
inc
imul
and
jo
dec
lcall
pop
mov
pop
adc
ret
xchg
sbb
je
pop
adc
mov
lcall
mov
sahf
mov
pop
icebp
leave
sbb
jne
and
iret
outsb
std
lods
imul
lds
jae
adcl
adc
cmp
imul
iret
pop
jne
cmp
mov
sub
jg
adc
mov
pushf
mov
xor
shlb
mov
ret
mov
sub
push
adc
std
lods
iret
outsl
jne
lds
fstps
inc
fs
std
add
and
and
jae
lret
fwait
jmp
ret
stc
call
addr16
dec
cmc
or
mov
clc
cmpsb
lret
je
push
jbe
sarl
iret
inc
add
clc
add
jnp
repnz
cmp
into
call
xchg
test
mov
add
sub
xchg
xchg
mov
xlat
icebp
ja
xchg
xchg
dec
or
rorb
imul
int3
lret
mov
addb
push
or
xor
xchg
xor
loope
loop
sti
push
mov
fs
in
sub
add
test
or
pop
mov
loop
out
add
out
mov
lret
pop
push
jns
sbbl
lods
shlb
add
cwtl
jno
inc
fcoml
jae
dec
into
jae
sti
outsb
mov
leave
popl
adc
iret
loope
mov
loope
and
push
or
cld
fistpll
mov
push
push
rep
test
dec
jl
lods
xor
aaa
test
pop
mov
out
or
imul
push
mov
sub
lahf
sub
sbb
icebp
cltd
inc
daa
outsl
movsl
mov
and
repz
jne
mov
decb
shrb
cmp
push
fldt
mov
arpl
mov
sbb
mov
out
popaw
shll
stos
lea
in
in
dec
dec
or
iret
pusha
lret
mov
xchg
and
dec
in
inc
lret
pop
test
ljmp
mov
std
lcall
xchg
out
fcoml
mov
popf
and
pop
push
fwait
pushf
cmp
dec
jo
lods
pop
pop
ss
adc
mov
sti
mov
mov
mov
push
xchg
add
mov
jb
cmp
test
std
movsl
adc
sub
adc
push
je
out
pop
ss
filds
cltd
xor
testb
outsb
nop
and
aad
shll
cwtl
das
mov
cmc
repz
and
sahf
fsubs
xor
mov
lods
xor
in
rcrb
jae
and
call
cmp
daa
or
scas
negl
imul
fprem
rcll
jle
jecxz
lret
movsl
jmp
lcall
andb
fnstcw
andb
btc
or
jo
int3
aas
push
mov
std
add
mov
xchg
cmp
mov
js
dec
xchg
mov
inc
js
sahf
jmp
or
jns
xchg
ja
fwait
sbb
mov
sbb
pop
jne
fimull
ljmp
shl
insl
ret
ds
mov
mov
cmp
mov
lock
jb
push
sbb
pop
xchg
jg
inc
rcr
aad
pop
xor
in
cltd
adc
xchg
dec
cwtl
add
popa
ret
xchg
xor
xchg
imul
xor
sbb
xor
insb
dec
jg
loop
std
pop
rcrl
loopne
cmp
sbbl
es
push
dec
ret
cld
xor
dec
sbb
cmp
call
inc
mov
xor
js
ja
stc
movsl
push
add
fdivrs
js
xor
ret
pop
adc
in
je
pop
adc
insl
mov
mov
pop
adc
lea
shll
lock
test
rorb
sbb
xor
in
psllw
je
pop
adc
fdivl
and
out
mov
pop
adc
mov
mov
arpl
stc
jl
push
icebp
loop
xor
adc
in
xor
aad
sbb
and
xchg
sbb
sub
push
sbb
adc
adc
pop
mov
out
add
mov
stos
ret
out
fs
jg
push
xchg
sbb
add
adc
sbb
mov
bound
popa
mov
mov
cli
pop
adc
les
mov
xor
adc
mov
int3
rolb
in
mov
sbb
pop
mov
daa
wbinvd
sbb
sarb
dec
jne
sahf
insl
or
pop
sub
inc
imul
test
push
jo
pop
adc
fcoml
imul
hlt
sub
pop
cld
loopne
sahf
lahf
insb
aas
fdivs
adc
pop
mov
cltd
push
jl
push
mov
int3
jge
ss
adc
push
loopne
sub
xchg
fldenv
xor
add
cmp
xchg
fcomi
daa
inc
daa
sbb
es
in
push
adc
dec
mov
cs
xchg
mov
or
movsl
mov
test
jo
adc
jmp
aaa
fimull
cmp
cmp
pop
xchg
inc
fistl
xlat
jg
call
jp
jbe
pusha
in
test
in
in
adc
loope
dec
jno
or
adc
lds
fs
xchg
xchg
push
pop
pop
mov
fildl
mov
clc
test
daa
pop
sub
int3
cld
mov
adc
ficoml
ljmp
cmp
push
adc
lahf
push
push
shlb
dec
pop
je
int
pop
jbe
les
adc
or
ljmp
dec
mov
shll
adc
cmc
stos
dec
sahf
push
test
test
sbb
mov
jno
adc
add
out
sub
test
push
adc
faddl
adc
out
adc
movsb
faddl
adc
js
pop
adc
dec
xor
sbb
loope
lock
push
add
push
inc
pop
inc
pushf
inc
sti
ljmp
push
mov
addl
xor
inc
push
jne
adc
imul
mov
dec
mov
aas
push
push
add
popf
add
ss
orb
mov
or
pop
cld
push
add
push
adc
ss
mov
orl
adc
andl
into
dec
jg
mov
jne
xchg
clc
jno
mov
add
jmp
int
push
ret
jmp
arpl
hlt
and
add
sbb
and
inc
cli
fucom
int
cwtl
pushl
pop
mov
push
fdivr
pop
adc
cmp
cmp
iret
call
int
ficoms
jo
adc
rcrl
jo
ret
mov
pop
fisubs
lret
xor
flds
push
xor
std
cmpsl
push
icebp
loop
daa
orb
pop
adc
test
popl
sbb
aad
sti
xor
int
adc
loop
and
push
adc
jl
sahf
cmp
sbb
icebp
adc
sbb
aam
mov
inc
sbb
cmp
mov
mov
shl
lret
or
pop
dec
pop
or
pop
adc
arpl
cmc
imul
je
cs
jo
adc
int
ficoms
push
adc
je
pop
adc
mov
faddl
adc
xchg
add
into
sbb
out
ds
cmp
and
mov
mov
arpl
xchg
jns
mov
pop
adc
cld
jae
adc
nop
rolb
cs
adc
iret
loop
mov
push
out
cmp
or
and
pop
adc
shl
add
lcall
mov
cmp
add
push
clc
notl
xchg
jo
sub
dec
pop
cs
cltd
ja
popf
iret
push
nop
jge
adc
mov
adc
leave
iret
sahf
cmp
clc
jae
adc
and
push
cmp
rcrb
scas
jle
cltd
loopne
cmp
fs
and
nop
push
adc
push
adc
jge
mov
rcl
repz
loopne
push
mov
sbb
fdivrs
adc
sbb
mov
ss
movsl
insb
cmpsl
fnsave
mov
push
jl
out
and
push
adc
imul
popf
mov
add
sbb
addb
lock
pop
pop
aam
cmc
add
call
sahf
inc
pop
pop
aad
sbb
mov
js
ljmp
test
sbb
xchg
or
push
adc
test
loopne
inc
xlat
cmp
clc
std
test
loopne
addb
mov
pop
push
cmp
sbb
lock
adc
mov
pop
push
rcrb
push
cmp
lcall
sub
cmp
and
sbb
or
push
adc
push
lock
ficoml
addb
and
out
mov
and
add
adc
xor
inc
jnp
out
rolb
push
pop
jns
push
fs
out
sbb
push
xchg
lods
aad
pcmpeqd
sbb
push
adc
mov
xchg
jmp
daa
lock
iret
xchg
adc
mov
cmpsl
adc
movsb
lds
adc
add
int3
jle
adc
lds
adc
sub
lds
adc
pop
adc
mov
jnp
adc
fisubs
sub
icebp
popa
stos
inc
sub
and
lods
adc
or
xlat
pop
jmp
addb
mov
jge
sti
mov
push
jg
outsb
movsb
lds
adc
push
adc
pop
adc
adc
pop
adc
mov
adc
push
dec
out
ret
andb
push
adc
arpl
mov
adc
shlb
fnstenv
sbb
adc
fdivl
dec
dec
push
stos
inc
push
dec
data16
sbb
mov
test
pop
push
or
lock
int
jns
movsb
push
lcall
sbb
arpl
insb
inc
lret
icebp
loop
and
pushf
ja
adc
push
adc
xchg
into
adc
jne
xchg
add
aam
jae
cmp
xchg
mov
sbb
or
jle
mov
cwtl
adc
es
add
subl
sbb
cmpsb
adc
clc
mov
movsb
inc
xlat
mov
jnp
adc
iret
sahf
sub
test
int
setnp
rol
sbb
call
push
out
xchg
mov
xchg
or
sub
fs
jne
shrb
dec
int3
mov
xor
lds
addb
add
mov
sub
loopne
pop
adc
adc
int3
lds
adc
ljmp
sbbl
enter
test
mov
movsl
movsl
or
cmp
jp
insb
stc
movsl
add
iret
or
push
adc
testl
pop
adc
es
lds
adc
xchg
jge
sub
out
or
xor
xor
adc
faddl
adc
sbb
jge
adc
push
jge
adc
inc
push
jle
inc
jnp
adc
mov
cmc
ljmp
and
insl
rdpmc
inc
mov
fcomps
xor
or
push
adc
inc
leave
shlb
inc
cs
out
faddl
adc
ficoms
jge
adc
xor
lret
push
addb
or
sub
and
lds
adc
std
mov
pop
adc
mov
pop
adc
or
std
and
push
jnp
adc
aad
push
repnz
add
jl
fists
call
pop
xchg
jbe
add
or
push
adc
aas
shll
pop
adc
mov
pop
adc
popa
adc
iret
fldcw
divl
addb
cmpsl
adc
addr16
push
in
addb
inc
inc
pop
out
in
idiv
out
les
or
adc
mov
add
jno
or
sbb
and
addb
sub
or
ja
add
dec
stos
popa
mov
or
push
add
adc
test
cmp
sub
add
ret
mov
mov
or
test
pusha
jbe
lods
xchg
adc
cli
dec
mov
inc
xor
xchg
ret
jbe
stos
lcall
push
xor
jg
adc
pop
mov
sti
pusha
mov
dec
loopne
adc
clc
jg
adc
mov
jl
adc
push
mov
sub
cmp
mov
mov
sbb
jecxz
dec
call
mov
loope
jne
pop
je
std
jno
pop
jbe
shll
mov
cld
jo
adc
xor
xor
sbb
mov
xor
mov
dec
dec
test
dec
add
je
pop
adc
pushf
ja
jg
adc
fwait
xor
push
nop
mov
movsl
imul
test
pop
loope
sbb
aas
imul
sub
add
or
or
jns
test
dec
loop
xor
push
or
or
pop
jb
jge
pop
pop
stos
fsubs
bound
aas
and
jle
fdivrl
sub
sub
pop
sbb
jg
adc
js
movsl
or
rolb
xchg
and
inc
pusha
inc
jns
subl
mov
jle
xlat
xor
stos
mov
mov
cmp
jno
cs
pop
and
mov
mov
sti
or
add
or
jae
cld
jo
adc
pop
xor
or
mov
adc
add
sub
pop
or
dec
xchg
fdivrs
mov
pushf
cmp
loopne
push
adc
cs
fmull
sahf
jae
or
xor
orl
into
pop
clc
sbb
cmp
cs
lds
xchg
adc
xchg
mov
cmp
jg
adc
xchg
sbb
lds
or
icebp
loop
sub
jae
imul
int
xchg
into
jle
cmpsl
rcrl
xor
popa
sti
sub
in
loop
and
fiadds
mov
or
mov
lcall
mov
cli
imul
cs
pop
aad
fcoms
jns
inc
imul
sub
push
cmp
push
dec
shlb
aad
mov
icebp
adc
xor
movsl
fnstenv
mov
sbb
or
add
pop
jae
pop
or
cmp
cld
jo
adc
adc
ret
outsb
xchg
sub
ret
movsb
mov
or
cmpsl
xchg
out
add
adc
jb
into
xchg
mov
mov
push
or
cmp
into
jae
or
int
inc
or
inc
mov
dec
adc
jl
cwtl
jbe
pop
cs
ss
popa
les
or
call
mov
jo
fimull
movsl
pop
fbld
pop
mov
outsl
and
mov
lods
jmp
shl
lds
jae
pusha
mov
jns
lods
jle
xor
shrl
mov
push
cltd
cli
jnp
int3
icebp
js
xchg
mov
add
lcall
inc
negl
add
push
or
pusha
pop
jnp
pop
iret
push
ss
mov
popa
roll
int3
push
xor
das
xchg
ja
adc
dec
or
loop
mov
xor
push
or
outsb
test
and
stc
cmp
je
aad
mov
movb
add
sub
adc
in
adc
push
or
xor
sbb
sub
hlt
ss
cmp
bound
and
outsb
pop
out
les
or
add
push
cmp
in
cld
jge
inc
push
ret
mov
hlt
xchg
fstpt
inc
loop
dec
arpl
push
mov
out
push
or
push
call
xchg
clc
jp
mov
or
mov
pop
push
dec
jae,pn
shlb
aam
inc
xor
or
xor
push
sub
data16
outsb
repnz
pop
xchg
pop
fdivrp
xchg
adc
mov
sbb
dec
sub
sbb
dec
lahf
jecxz
cmp
fistpll
and
jae
in
mov
inc
cld
jo
adc
lods
insl
mov
inc
ds
sub
out
sbb
jg
enter
imul
fadd
xlat
jl
xor
in
pop
or
dec
nop
jge
xor
fisttps
xchg
mov
loop
das
subl
cmp
push
adc
jbe
dec
xchg
pop
push
mov
mov
mov
sar
add
sub
enter
xchg
fistpl
adc
insb
jle
cmp
adc
inc
pop
pop
pop
xchg
sahf
jae
push
jg
sbb
inc
xchg
adcl
cld
cmp
dec
dec
cmp
mov
adc
cld
fdivrp
push
or
mov
fstpt
je
xchg
inc
pop
sbb
out
pushf
jns
mov
push
adc
and
outsb
pop
hlt
push
mov
xchg
outsb
mov
stos
lret
scas
ret
jnp
dec
js
in
pop
repz
add
xor
outsl
cwtl
mov
loope
mov
fwait
jno
jecxz
xchg
push
sub
jecxz
out
int
mov
mov
cld
push
or
push
add
adc
shlb
popa
ret
xchg
sbb
addr16
cli
pop
mov
out
inc
xor
sbb
push
adc
xchg
ja
xchg
out
or
and
negb
test
push
adc
and
aad
fdiv
pop
jns
inc
imul
sub
push
cmp
push
dec
rolb
cs
int
push
mov
out
dec
popf
push
sbb
xchg
outsl
sbb
repz
fiaddl
pop
icebp
ss
xor
lods
fnstenv
mov
cmc
imul
cmp
out
sahf
mov
movsb
jg
adc
movb
mov
popf
adc
cmc
jecxz
pop
cs
lock
iret
sahf
clc
mov
les
jle
inc
mov
sti
cld
push
or
cmp
cld
jo
adc
scas
addr16
xor
lret
movsb
fbstp
int3
jg
push
mov
push
stos
add
push
adc
pop
cmp
inc
loop
out
xor
inc
mov
jp
fcomps
lds
xchg
jb
xor
push
sbb
push
das
jge
arpl
addb
adcl
mov
mov
cmp
sbb
xchg
inc
add
inc
and
push
cmp
stc
nop
mov
push
add
in
mov
xor
adc
imul
pushf
fildll
inc
in
xor
aad
sbb
mov
sbb
xor
mov
inc
cmp
lds
or
lahf
cmp
fwait
xor
push
adc
inc
push
lock
mov
jno
int
xorb
mov
adc
clc
pusha
inc
dec
lds
loopne
es
xchg
ja
fs
leave
aam
inc
aad
xor
sbbl
ret
mov
scas
push
or
and
out
jmp
cmpl
shrb
je
pop
adc
out
mov
faddl
adc
test
repz
cmp
push
jmp
dec
repz
cli
jns
vmread
ljmp
mov
sub
adc
fcmovbe
test
pop
aam
pop
push
int
std
add
push
adc
xchg
ljmp
jp
sbb
mov
mov
je
adc
mov
ja
incl
pop
loop
fsubl
sbb
push
sbb
lods
ficoms
adc
or
inc
popa
mov
je
pop
adc
aad
xor
pop
fidivl
inc
lods
fstpl
mov
loope
cli
xchg
sub
jl
and
lret
fbstp
icebp
and
mov
or
push
jbe
xor
jg
adc
xor
xor
mov
jecxz
in
inc
mov
cmp
mov
imul
xchg
mov
mov
pop
add
xchg
pop
movsl
and
stos
cmp
fisttpl
or
icebp
pop
sbb
cmp
jnp
adc
pop
je
insb
in
mov
sbb
scas
aas
xchg
xor
mov
fildl
cmp
movnti
mov
jge
sti
mulb
notb
xchg
aaa
mov
dec
cmp
adc
aam
pop
sbb
cld
fdivrp
push
or
aam
jno
scas
jg
sbb
ds
mov
lcall
shlb
cltd
mov
pushf
xchg
mov
rorl
dec
js
lret
int3
popa
pushf
mov
movb
pop
push
jnp
adc
push
insb
js
inc
out
dec
cmp
addb
xchg
jge
sub
out
xor
cli
mov
rcrl
xor
adc
leave
rcl
dec
cs
adc
gs
fbstp
sbb
cwtl
int3
push
adc
sbb
push
cmp
lcall
sbb
int3
push
push
ret
xchg
test
movsl
pop
cs
xchg
pavgb
outsb
inc
orl
xor
dec
sbb
mov
lret
fs
add
cs
add
iret
sahf
xchg
jns
popf
jecxz
xor
stos
rolb
sbb
ret
add
adc
jmp
clc
popa
mov
out
cmpsb
mov
int3
pushf
mov
nop
mov
cmp
pop
pop
fcoml
repz
adc
iret
xchg
movsl
fnstcw
mov
xor
fldcw
cld
hlt
shl
lret
ror
mov
or
push
adc
push
arpl
push
dec
push
icebp
loop
cmp
fnstenv
pop
adc
mov
and
inc
dec
vphadduwd
sbb
jb
jae
mov
adc
dec
mov
movl
std
lods
jnp
dec
loope
pushf
mov
gs
dec
repz
ja
in
aad
sti
xor
jns
xchg
xchg
and
pop
or
dec
repz
mov
sbb
or
ds
xchg
ds
jb
jae
add
inc
push
fucom
int
fwait
jg
mov
mov
fimuls
pop
cs
outsb
mov
push
ja
mov
inc
into
pushf
cmp
pushf
adc
jmp
out
sti
cmpsb
fdivrs
pop
mov
lret
xor
bound
faddl
adc
or
jno
adc
pop
add
pop
xchg
jge
and
inc
sbb
lahf
into
orl
js
dec
lret
mov
dec
mov
leave
sahf
or
push
push
sti
mov
add
adc
push
pop
or
jb
cli
out
push
xchg
xchg
into
sahf
test
pop
adc
ror
jbe
test
clc
jmp
pop
loopne
cmp
popa
cmc
fstpl
filds
faddl
adc
jo
adc
cltd
rcrb
push
mov
es
or
ret
cmp
or
insb
rcrb
fcomi
xchg
push
rorb
pop
aam
dec
xchg
dec
push
cmp
cmp
sub
flds
jge
sub
mov
add
mov
mov
daa
daa
stos
out
fs
or
cmp
das
in
aam
and
mov
out
jp
xor
test
mov
lcall
sbb
dec
fildl
push
fbld
mov
mov
cwtl
adc
or
dec
not
sbb
adcl
lods
gs
addr16
add
leave
add
cs
push
test
push
cmc
movsb
inc
sbb
and
in
dec
pop
or
jbe
iret
jns
push
lahf
test
push
jne
aad
insl
or
push
adc
divb
jnp
or
sti
sbbb
addb
adc
cwtl
mov
push
jns
addr16
loope
rclb
mov
scas
fiaddl
ret
daa
jnp
sti
mov
cld
or
lock
pop
adc
mov
movsb
faddl
adc
mov
fdivl
fwait
pop
imul
adc
dec
mov
pop
out
mov
push
ret
clc
mov
xchg
sahf
xor
mov
push
mov
jns
ja
xor
push
and
or
cmpsl
mov
sub
or
insb
push
sbb
mov
fsubrl
dec
mov
dec
dec
sbb
push
negl
add
jno
cmp
add
repz
mov
bswap
sbb
jg
sbb
je
pop
push
cmp
push
cmp
je
in
pop
or
iret
je
jno
adc
addr16
sub
dec
jp
dec
mov
adcl
lods
add
movsb
jns
xchg
ja
fwait
push
sbb
fld
popa
or
icebp
loop
sub
leave
mov
in
mov
addb
push
dec
sarb
jge
js
ja
stc
movsl
imul
movsb
jns
repnz
lcall
scas
das
arpl
sub
or
pop
cld
jo
adc
jno
adc
mov
mov
dec
pop
xor
insb
inc
add
loop
and
push
das
mov
loop
mov
push
stos
fsubrs
sbb
cwtl
cmp
adc
negb
inc
add
pop
out
loope
push
push
xor
cwtl
das
lahf
xchg
sahf
js
dec
fistl
dec
add
push
pop
add
and
xchg
test
jo
jbe
pop
es
iret
xor
gs
adc
or
adcl
hlt
xlat
dec
pop
out
or
push
adc
movl
cwtl
mov
icebp
jne
addb
or
insl
cli
cmp
pop
icebp
ret
sub
xchg
ja
or
xor
cmc
insl
adc
dec
mov
shrb
mov
cmp
repz
call
inc
mov
xor
js
ja
stc
gs
pop
mov
enter
int
jne
jnp
adc
bound
mov
inc
mov
cmpsb
inc
icebp
jbe
movb
adc
mov
adc
mov
xchg
out
lock
jne
and
inc
jl
adc
mov
xchg
sub
ds
xor
popa
push
push
inc
push
repz
repz
mov
movl
inc
add
sbb
mov
mov
adc
fisttpll
cli
out
mov
dec
dec
fsubrs
sbb
cmp
adc
mulb
stos
popa
subl
cltd
cmp
xor
mov
or
or
push
adc
mov
outsb
add
ret
push
sub
ret
call
sub
test
push
adc
call
pop
lret
xor
mov
pusha
sbb
jns
jg
loope
or
mov
or
cltd
daa
xor
pop
mov
adc
loopne
push
mov
enter
and
data16
ljmp
iret
mov
and
je
pop
adc
mov
mov
scas
mov
mov
fcomps
popf
inc
clc
das
in
dec
insl
cmp
push
aam
mov
mov
jnp
adc
pop
fistpll
fistpll
jb
and
popa
fisubrs
sub
lock
mov
sub
lods
idivl
call
mov
sub
xorb
dec
mov
cmp
xchg
push
lahf
jns
add
xchg
pop
movsl
ss
ret
xchg
xor
pop
adc
push
dec
sti
testb
scas
test
repz
out
ljmp
es
xchg
pop
push
push
xor
mov
cmp
inc
push
or
mulb
mov
inc
divb
mov
mov
cmp
adc
dec
ja
jne
lods
cli
push
inc
in
es
or
sub
push
adc
push
movsb
es
push
and
mov
jle
jmp
lret
sub
add
jne
stc
pmulhuw
rclb
cmp
repnz
push
filds
inc
pop
mov
jecxz
in
pop
jb
jae
cmp
inc
repnz
int
dec
pop
jmp
adc
or
icebp
loop
icebp
sub
test
adc
lret
pushf
mov
xor
cs
mov
cmp
mov
mov
lret
or
out
gs
push
sbb
dec
mov
in
sbb
daa
xchg
jae
fsubrs
orb
cmp
adc
inc
mov
dec
push
cmp
xchg
js
cltd
jmp
pop
pop
es
iret
xor
mov
setnp
rol
sbb
call
push
icebp
loop
mov
jecxz
fs
gs
jns
popf
jecxz
xor
fisubs
arpl
aad
orl
mov
lds
pop
test
adc
mov
in
xor
or
push
adc
inc
leave
rclb
add
mov
adc
out
adc
cmpsl
str
mov
in
sbb
sub
jae
mov
gs
xor
mov
inc
mov
out
pop
adc
mov
cld
xor
dec
dec
sbb
xor
int
in
sub
iret
adc
daa
xchg
cmc
pop
push
pop
cs
in
inc
or
out
xor
mov
iret
pushf
cmp
inc
add
loop
je
shll
popa
lcall
push
imul
and
vpunpckhbw
pop
mov
ret
lret
xor
sbb
sahf
arpl
sbbl
scas
scas
inc
xor
inc
add
scas
sbb
fdivr
bound
fiaddl
icebp
push
pop
push
pop
jmp
mov
js
loopne
loope
inc
shlb
cmp
fsubp
imulb
into
mov
iret
cwtl
mov
cld
test
jbe
in
rolb
inc
pop
mov
adc
inc
leave
pop
insb
aad
push
cmp
mov
push
cmc
out
cmc
pusha
or
aad
je
and
xchg
out
out
mov
popf
les
je
mov
xor
xor
outsl
lret
pop
adc
fisttps
push
pop
push
xchg
sbb
jae
cltd
add
ret
arpl
clc
ret
call
add
and
test
sbb
or
xor
adc
cli
fisubrl
lahf
and
push
push
fidivl
adc
bound
pop
adc
jg
and
adc
loope
movsl
jmp
cmovl
cltd
jne
arpl
in
jae
adc
inc
int
sbb
mov
faddl
adc
sbb
adc
pop
cmp
inc
scas
cmp
or
hlt
pop
mov
mov
jb
jo
adc
adc
sbb
mov
xor
cmp
jle
lods
dec
test
add
push
test
mov
inc
cli
outsb
xor
dec
ss
scas
mov
popa
insb
jl
adc
mov
filds
sti
add
test
sub
ljmp
sub
stos
aad
jae
adc
les
flds
adc
push
sbb
pop
adc
flds
adc
cmpsb
std
test
lock
js
sub
jmp
or
sbb
sbb
sbb
cmp
or
pop
adc
pop
aas
xchg
xchg
flds
adc
sub
lods
movsl
jmp
es
jno
lret
xor
push
pushl
sbb
and
mov
jmp
xor
je
pop
adc
ljmp
adc
mov
xor
add
pushf
push
pusha
ret
xchg
dec
outsb
or
outsb
lock
adc
adc
cs
in
psllw
xor
lods
cwtl
mov
sbb
mov
xchg
add
adc
mov
adc
jecxz
xor
mov
mov
fsts
js
ss
mov
shrl
jae,pt
lret
sbb
mov
adc
cmpsl
inc
cwtl
stc
and
lds
rcrb
adc
or
cmp
inc
pusha
out
lcall
repnz
jo
adc
orb
test
shll
pop
or
repz
jno
adc
add
or
or
dec
icebp
loop
inc
add
or
jae
cld
jo
adc
pop
xor
or
mov
adc
mov
aad
adc
or
add
insl
mov
pop
or
out
cld
jo
adc
inc
inc
cld
push
or
hlt
add
adc
mov
testl
ljmp
sbb
or
pusha
pop
or
ror
aas
cmp
icebp
sub
push
or
pop
push
cld
jo
adc
xor
or
lock
pop
pop
push
jecxz
xor
je
pop
adc
movsb
faddl
adc
shlb
inc
popa
sub
xchg
movsl
adc
cwtl
in
aam
xchg
sti
pushfw
cmp
leave
inc
sub
add
mov
shll
pushf
cmp
in
xchg
nop
mov
push
jae
push
or
jo
adc
into
pushf
cmp
fs
jp
loop
sub
sbb
in
lcall
jecxz
pop
cld
pusha
fidivl
or
cmpsb
cmpsb
sub
in
xlat
in
pop
pusha
lret
aad
jae
dec
imul
out
pop
adc
mov
xor
mov
cld
pusha
cmp
lea
push
adc
pushf
mov
cmp
aas
ja
xor
sbb
addr16
jo
adc
popf
jb
xchg
jo
xchg
cmp
sub
push
adc
clc
add
jo
adc
mov
lret
ret
mov
or
push
or
or
lds
jnp
jg
push
pushf
push
sub
lods
pusha
mov
pushf
test
adc
lret
aam
fwait
xchg
mov
addb
shll
test
jae
and
shlb
sbbl
push
push
je
mov
mov
sbb
popf
sbb
jl
subb
stc
pop
adc
adcb
jo
adc
ss
pop
adc
mov
in
sub
adc
int3
mov
adc
push
adc
dec
gs
test
inc
dec
xchg
fwait
cmp
cs
ljmp
jno
lea
inc
sarl
std
pusha
dec
pop
shlb
add
mov
nop
pop
jns
insb
adc
inc
adc
je
mov
inc
stos
pusha
hlt
faddl
bound
daa
and
jmp
pop
andb
iret
xchg
ljmp
xchg
xlat
out
xor
pop
xchg
inc
push
and
push
adc
inc
adc
dec
aas
fsubrl
sahf
shrb
sti
shrb
data16
adc
push
nop
mov
or
push
adc
jo,pn
push
sub
cmp
mov
lods
and
clc
fstp
cmc
insb
sub
aam
xor
jecxz
fsubs
int3
and
adc
or
test
push
mov
scas
ss
push
adc
mov
notl
pop
and
mov
mov
nop
xchg
repz
inc
or
addr16
daa
adc
dec
mov
cmp
movsb
rorl
adc
cmp
pop
mov
fs
mov
shll
cwtl
or
sbb
pop
xor
jns
lcall
dec
clc
pop
mov
mov
push
inc
out
cmpb
xchg
cli
loop
test
mov
movsl
xchg
xlat
jo
in
clc
or
sbb
push
roll
mov
sahf
sub
or
xor
xchg
test
dec
cmp
addr16
mov
jne
inc
pop
inc
jg
insb
xor
mov
or
xchg
repz
call
in
repz
and
cmp
js
mov
scas
loop
fadd
jb
mov
out
or
and
cmp
push
cs
mov
sbb
insb
mov
dec
les
shl
sub
call
inc
mov
dec
pop
dec
je
xor
dec
lods
and
mov
pop
les
inc
mov
pop
stos
xchg
mov
sbb
sub
loope
aad
fidivrl
je
pop
imul
sti
in
xlat
mov
cmc
or
andb
movsb
cltd
pusha
cwtl
xor
sub
stc
adc
mov
fcmovu
xor
test
lds
dec
lret
pop
mov
cs
sub
fildll
push
movsl
sbb
pop
cli
jmp
aaa
hlt
nop
rolb
arpl
out
mov
and
and
lds
into
call
or
aas
mov
shl
sub
movb
loop
or
jb
mov
cmp
mov
repnz
pushf
jnp,pt
dec
fsub
aaa
push
fstpt
mov
and
addr16
aad
jno
inc
imulb
aam
imul
pop
xor
sti
inc
int3
sbb
adc
stc
sub
adc
stc
sbb
mov
imul
push
adc
mov
xchg
inc
mov
pop
adc
loope
and
and
lds
daa
xchg
cli
xor
push
jp
in
mov
sbb
push
jne
jnp
push
ret
xchg
adc
jmp
push
int
call
cs
inc
push
std
orl
lea
fldt
lods
ss
or
stc
lods
or
mov
stc
or
in
cwtl
and
jb
xor
jp
sbb
data16
push
aas
cltd
cltd
insb
icebp
or
xchg
rcrb
dec
int3
test
out
cmp
rcll
out
iret
push
adc
in
aas
lret
in
in
les
shll
outsb
scas
push
ret
push
sub
push
mov
mov
and
mov
out
cmp
pop
idiv
push
fs
and
fmuls
adc
jl
sub
inc
inc
nop
pushf
in
jb
loop
jno
stos
cmp
gs
mov
bound
pop
cld
and
mov
and
or
add
ss
ffreep
sub
fstl
int
inc
push
cmp
aam
and
pop
pop
fnsave
sbb
iret
ljmp
jnp
mov
pushfw
lods
jge
fdivrl
and
cmpsl
xor
push
mov
push
push
cld
mov
stos
movsb
sbb
ja
xor
cmc
mov
or
add
mov
inc
inc
ret
outsl
loop
dec
dec
pusha
addl
ljmp
ljmp
lds
pop
in
icebp
sbb
jmp
xchg
hlt
push
push
sahf
mov
inc
js
in
cwtl
int
mov
adc
mov
add
sub
loopne
xchg
hlt
mov
pop
cs
mov
xor
outsl
out
lcall
insb
mov
icebp
push
out
jp
xor
ret
lock
add
sbb
push
bound
mov
loope
inc
dec
jmp
add
sbb
imul
lahf
testl
mov
popf
ret
je
push
popa
ret
inc
dec
in
in
adc
or
enter
xchg
pop
into
test
add
lret
leave
call
repz
cmpsl
xchg
jnp
push
and
mov
and
int
mov
adc
cmp
jecxz
pusha
xchg
push
repz
fnsave
repz
js
arpl
cmc
int
adc
insb
ds
cld
mov
pushf
pushf
cmp
add
pushf
or
mov
xchg
or
push
enter
out
jmp
or
shl
adc
adc
sub
jns
adc
mov
hlt
psubusb
mov
ja
pushf
ss
lcall
call
daa
mov
rolb
cmc
scas
jge
outsb
xor
inc
daa
fdiv
xor
lods
cmp
xor
mov
sti
sub
std
xor
shlb
in
repnz
jb
adc
and
fisttpl
jae
adc
xchg
dec
jp
fbld
jge
xchg
sbb
add
out
arpl
dec
jbe
fidivrl
call
sbb
inc
icebp
pusha
lret
mov
icebp
xorl
outsl
cli
adc
adcb
mov
sbb
out
stc
add
xchg
push
adc
push
sti
stc
enter
pop
lahf
dec
iret
dec
movl
add
bound
ss
out
es
xchg
push
adc
insb
pushf
sbb
je
lea
mov
rolb
out
dec
js
cwtl
fsubs
mov
inc
jno
xor
jge
cmp
jecxz
dec
cmp
adc
lahf
negb
stos
adc
jbe
test
lock
stos
add
hlt
shr
pop
mov
leave
stos
pop
js
call
add
ds
xchg
push
adc
xchg
push
mov
mov
les
ret
sub
mov
mov
mov
add
push
mov
fildll
xchg
jo
js
pop
and
push
pop
xchg
outsl
ljmp
jecxz
adc
sbb
mov
int
stc
lahf
or
xchg
xchg
push
push
xor
sub
inc
adc
rcr
dec
fxch
imul
pop
inc
in
mov
clc
add
push
cmpsb
int3
xchg
pop
in
fldenv
mov
insl
mov
cmp
rorb
mov
xchg
sub
ret
ja
jmp
sarb
cmp
repz
dec
lcall
lds
xorl
iret
adc
hlt
fmull
mov
and
out
int
jno
out
xchg
pushf
out
push
lock
sti
mov
and
adc
testl
nop
sbb
rorl
mov
adc
shll
mov
jae
call
cmpsl
mov
mov
shrb
outsl
sbb
pop
cmp
pop
sti
inc
dec
popa
mov
mov
mov
fwait
mulb
push
gs
or
jae
sub
xor
jl
mov
adc
in
je
adc
loope
pop
stos
out
idivl
cmp
xor
xlat
mov
inc
add
prefetchwt1
sub
mov
inc
test
hlt
push
dec
mov
xchg
add
leave
sbb
xlat
icebp
jnp
ja
cmp
ret
repz
fidivs
jle
xor
add
push
pop
xor
pop
xchg
xor
pop
inc
stc
stc
ljmp
dec
or
push
mov
mov
inc
jo
cmp
es
pushf
ret
sub
or
sbb
out
push
push
lcall
std
xchg
push
ja
shll
scas
inc
add
dec
adcb
mov
and
into
int
sbb
dec
jbe
cmpsl
sbb
mov
mov
jp
pushf
sti
adc
push
out
pinsrw
mov
xchg
mov
mov
mov
sub
adc
data16
into
xchg
sbb
mov
sahf
sbb
push
adc
or
sub
sub
lret
add
lret
loope
sbb
je
sbb
jbe
dec
inc
push
gs
sub
icebp
ja
ja
cmp
ret
repnz
mov
fisttpll
inc
fs
iret
add
ss
or
faddl
shl
into
pushf
cmp
add
in
pop
loope
ficoml
xchg
mov
push
xchg
cs
mov
cmp
xchg
push
jle
mov
in
ljmp
addb
lods
aas
sub
mov
jmp
ds
shrl
adc
rolb
sbb
faddl
shl
into
pushf
cmp
xchg
dec
jo
mov
or
fnstcw
mov
bnd
fsubrp
cmp
xchg
cld
stc
pop
jecxz
dec
push
xor
add
mov
jb
fistl
or
cmp
clc
test
jne
lret
cmp
xchg
adcl
sub
out
sarl
lods
in
in
cmpl
jbe
sbb
les
pop
sbb
ret
fdivp
jb
jmp
push
mov
adc
insb
mov
jg
popa
cmc
jnp
lret
xor
add
or
int
pop
sub
movsl
js
lahf
mov
cli
hlt
repz
and
dec
xchg
jb
mov
lahf
mov
mov
lcall
adc
lds
dec
mov
scas
mov
in
jno
xlat
stos
or
mov
adc
mov
xor
inc
popf
iret
movsl
in
cltd
pop
and
call
lahf
add
jecxz
push
test
inc
incl
xchg
push
daa
jnp
xchg
sahf
inc
cmp
push
push
sub
in
scas
mov
jb
sbb
cli
mov
dec
dec
out
mov
push
add
cmp
popf
in
pop
xchg
insb
leave
dec
and
icebp
into
sarl
cmp
or
push
imulb
inc
ljmp
imul
fucomp
mov
cmp
xchg
arpl
movsl
pusha
pop
movsl
cmc
xor
shll
in
fbstp
mov
test
aam
sbb
dec
jg
filds
mov
pop
pop
orl
test
std
mov
dec
arpl
lds
or
imul
xchg
sbb
jo
ja
imul
xchg
push
adc
addr16
dec
pushf
rcrb
cs
and
ret
lods
aaa
and
cmpsl
out
sub
call
mov
pop
mov
pop
out
leave
repnz
jno
xlat
add
xchg
js
jb
cli
frstor
fsubl
push
adc
pop
jecxz
cld
sahf
ss
mov
adc
mov
out
dec
and
repz
daa
pusha
je
adc
dec
notb
mov
mov
icebp
dec
pop
jne
js
adc
mov
xchg
lcall
js
adc
adc
add
cs
je
adc
xor
cli
fs
in
xchg
jno
jg
mov
push
rcrl
ret
out
push
arpl
mov
add
ja
sar
arpl
adc
push
loop
js
movsb
stos
mov
adc
mov
dec
inc
pushaw
je
adc
adc
jb
mov
clc
pop
stos
adc
cld
xchg
push
adc
repz
xlat
mov
sbb
stos
cld
xchg
push
adc
and
imul
inc
stos
stos
les
jmp
popf
fcmove
adc
ljmp
cwtl
dec
je
repz
xchg
inc
iret
sbb
gs
jno
or
or
xchg
xor
xchg
les
popa
test
popa
lret
movsb
cld
addr16
xchg
int3
adc
mov
stc
pop
jmp
mov
inc
arpl
lret
fs
movl
iret
pop
stc
je
cmpsb
leave
icebp
loop
ljmp
and
xchg
xchg
jle
mov
fistpll
mov
arpl
mov
outsl
loopne
mov
aad
adc
hlt
popa
xor
add
jmp
sub
mov
cmp
push
nop
outsl
mov
adc
rorb
into
sbb
mov
int3
mov
or
icebp
loop
jp
shrl
mov
popa
ret
cmp
pop
xor
dec
dec
pop
pop
xor
xor
xor
push
fsts
clc
jo
test
stos
fistl
xchg
xor
in
shlb
xchg
mov
add
lods
ret
lcall
dec
repz
jnp,pt
nop
rorl
aas
stc
and
dec
lea
inc
push
fsubrl
sbb
jp
das
adc
loop
or
stc
sub
repz
or
ret
mov
jo
add
out
jp
cli
ds
jle
and
stos
les
nop
ret
ret
loopne
insl
inc
adc
sub
mov
movsb
xchg
nop
push
push
jns
xchg
lods
mov
mov
mov
jp
mov
adc
add
inc
push
lods
repnz
ret
dec
lret
sub
enter
sub
leave
loop
dec
test
ret
jo
xor
cmpsb
xor
ja
or
xchg
shr
lcall
xor
into
nop
das
cld
cmc
int
mov
sbb
jp
or
das
imul
mov
adc
hlt
leave
dec
inc
mov
lcall
pop
xchg
pop
cwtl
mov
out
mov
adc
mov
push
sahf
mov
iret
mov
outsl
arpl
movsl
in
and
jl
xchg
popa
sub
shrb
mov
fwait
dec
add
push
mov
sbb
fildll
jg
jp
cld
aad
cmpsl
pop
jg
in
cmp
lret
aas
arpl
adc
push
mov
gs
orl
adc
add
clc
into
pop
and
or
and
xchg
mov
std
push
pop
inc
arpl
shll
mov
lcall
inc
iret
das
inc
popa
push
mov
or
sbbb
leave
lock
lods
fildl
out
test
push
clc
jo
inc
mov
mov
call
mov
push
inc
test
ret
pushf
sbb
jle
pop
lahf
enter
iret
sbb
and
stos
imull
inc
push
add
test
in
dec
push
sbb
stc
jp
mov
pop
inc
inc
push
mov
stos
stos
insl
js
push
lahf
inc
loopne
inc
mov
push
pop
push
sbb
bound
test
push
mov
pop
push
push
xchg
jge
imul
gs
out
mov
cs
xor
ror
push
in
mov
dec
jnp
sbb
pop
mov
jnp
mov
dec
lret
ja
lds
sti
sub
push
outsl
ds
jmp
mov
imul
or
inc
call
cmp
push
lahf
fnstenv
notl
rcl
pop
adc
arpl
loope
pop
leave
sbb
xlat
cld
sbb
mov
sbb
mov
leave
or
es
pop
lcall
push
jno
add
or
idivb
ljmp
cs
dec
xor
test
sbb
lcall
inc
shll
repz
dec
jo
rorb
pop
xchg
sub
fwait
shrl
mov
jge
loop
xlat
out
cmp
pop
push
sbb
push
test
in
xlat
mov
mov
cmc
cmp
add
lock
and
dec
rcll
imul
in
and
cmp
add
sub
or
mov
jmp
cmp
cmpsb
fildl
adc
int
repz
or
inc
mov
ret
and
xchg
or
sar
dec
fisttpll
out
orb
imul
and
es
fsts
clc
pusha
call
dec
mov
call
rcr
jns
rorb
pusha
xchg
or
sbb
ja
xchg
cmpsb
mov
xchg
shl
insl
aas
out
add
pop
push
push
pop
sbb
rolb
xor
rolb
aam
xlat
orb
jbe
inc
pop
pop
xchg
cmpb
popf
mov
out
inc
dec
repz
bound
fisttps
lods
mov
adc
scas
fcoms
enter
dec
mov
dec
pop
xchg
add
sub
dec
push
lds
xor
mov
rolb
mov
dec
pop
jb
adc
sbb
mov
pop
stos
push
icebp
pop
push
pop
pop
js
xorl
neg
ja
repz
lods
vprotq
sbbb
xchg
lret
xchg
and
sub
xchg
mov
mov
fcompl
xchg
mov
and
into
jle
rcrl
or
add
enter
cmpsb
jle
in
stos
gs
inc
in
dec
sti
jmp
cmp
and
jg
mov
jg
sub
mov
aad
mov
sbb
mov
adc
push
adc
jge
mov
sbb
stc
xchg
push
adc
movsl
push
pop
jmp
insb
mov
fs
shl
jne
xlat
mov
js
enter
aad
aad
cli
in
add
inc
ss
shrl
in
or
adc
jne
imul
push
sub
adc
xchg
add
nop
sarb
sbb
xor
rclb
or
imul
cs
fistps
xlat
test
mov
cli
pushf
cmp
iret
movsl
movsb
mov
xchg
cltd
mov
fildl
popa
imul
adc
outsb
pop
mov
cwtl
xor
dec
ret
shrl
daa
cmp
test
cmp
clc
mov
repz
insb
jns,pn
pop
or
addr16
add
repz
mov
lahf
mov
adc
pop
inc
dec
sbb
dec
pop
lods
test
in
negl
mov
mov
outsl
js
cmpsb
adc
sahf
into
dec
mov
xor
cld
mov
gs
xchg
fisubs
jnp
nop
pop
movl
pop
mov
int3
sbb
xchg
repz
sahf
sbb
or
pop
hlt
stc
test
js
adc
pop
int
lock
dec
push
cmp
loope
je
jle
ret
or
inc
repz
shl
int
dec
data16
aas
xor
pop
push
dec
mov
test
push
dec
dec
out
ret
push
arpl
andl
adc
sub
mov
mov
imul
mov
movsb
mov
stc
adc
adc
outsb
pop
loopne
lcall
out
popf
mov
dec
loop
mov
xlat
bound
or
imul
mov
xchg
out
out
mov
popa
dec
mov
lea
imul
je
add
js
ficomps
in
xchg
aaa
sbb
xor
mov
int3
adc
cmc
adc
gs
dec
ja
push
lcall
cltd
mov
push
and
mov
in
cs
push
cmpsl
loopne
aaa
cmp
add
cld
lea
shll
pushf
imul
lret
mov
arpl
dec
jle
sbb
loop
jns
pop
es
mov
push
mov
bound
ljmp
jb
xor
test
mov
shll
pop
jle
bound
xchg
andl
in
pop
lods
lods
mov
jle
mov
fwait
xor
jae
rol
push
icebp
and
mov
mov
into
add
add
push
enter
int
in
bound
sub
cmp
sub
xchg
cld
mov
mov
jns
in
sub
cmp
mov
xchg
xor
or
nop
jno
lahf
push
fs
xor
adc
or
mov
dec
les
lcall
push
push
sub
mov
test
test
push
jbe
popa
mov
cmpsl
jecxz
adc
shll
pop
lods
cmp
insl
pop
add
sahf
jle
lret
mov
rclb
sub
js
inc
outsl
in
aam
or
dec
xorb
dec
sub
out
sub
xchg
leave
lcall
dec
jmp
push
sub
push
sbb
jns
sti
or
adc
shll
aad
ret
mov
add
ljmp
sbb
jmp
sbb
scas
shld
das
jb
cmp
jae
dec
add
shlb
nop
cmp
inc
stos
hlt
jne
push
inc
insl
cmp
pop
roll
sbb
xor
rcll
add
aaa
push
fidivrs
mulb
ret
and
push
cmpsl
xlat
ds
dec
je
lods
pop
push
lock
xchg
inc
cwtl
inc
push
stos
jno
xchg
mov
ds
xor
pop
cs
adc
or
movsb
mov
lods
push
lret
enter
cmp
inc
rclb
into
pop
leave
sub
popa
lock
jge
aas
iret
mov
inc
loopne
cmp
popf
rol
imul
int
mov
ds
das
jbe
idivl
cmc
ljmp
es
push
cmp
sbb
insl
mov
cs
cmp
or
xchg
mov
lahf
dec
dec
mov
dec
push
lds
stos
out
lret
lods
or
mov
jo
mov
push
pop
dec
sbb
push
adc
mov
rcrb
cmp
mov
or
sahf
mov
cmp
jae
adc
dec
ja
sub
mov
push
movl
stos
inc
fimull
sbb
push
jno
pop
dec
out
mov
std
sub
sub
sub
test
xor
insb
cmpsl
xchg
xchg
pop
cs
adc
imul
xchg
shl
push
mov
js,pt
cmp
jns
mov
aaa
xchg
mov
xor
sti
lods
aaa
or
inc
pop
std
in
mov
imul
out
lret
rcl
popf
jg
aas
adc
push
lds
test
mov
cs
adc
xchg
inc
iret
xchg
lods
mov
sbb
adc
lods
sbb
push
lds
add
xor
mov
push
adc
mov
xchg
and
push
adc
or
ljmp
mov
jne
mov
ret
je
popa
xchg
stos
scas
mov
iret
sahf
dec
ret
adc
mov
lret
xchg
cs
sti
daa
popf
fcmove
or
and
sub
test
adc
or
mov
mov
push
les
add
nop
popa
ret
xchg
lahf
xchg
gs
xchg
xlat
jg
mov
push
or
rorb
ret
mov
sbb
jmp
push
rorl
or
ret
push
mov
dec
mov
pop
int
mov
xor
sahf
adc
or
ret
push
mov
dec
mov
pop
int
inc
rcrb
incl
insb
mov
mov
xchg
dec
shlb
or
push
and
sbb
sbb
pop
xor
iret
popf
cmp
imul
sbb
int
cs
adc
adc
add
leave
xor
enter
lcall
test
sbb
dec
fcomip
cmc
push
outsb
lret
xchg
jae
aad
xchg
push
adc
jb
rorl
out
shr
cmp
xchg
hlt
xchg
stc
pop
scas
ror
test
cmp
insl
cli
aad
lds
adc
fdivl
setp
and
test
and
aad
mov
push
pop
xlat
jae
jae
adc
cmp
mov
adc
loop
sub
pop
aam
hlt
inc
lcall
inc
lea
repnz
jg
push
jecxz
in
insb
xchg
push
adc
into
pop
mov
fisttpl
stos
out
out
in
es
loopne
pop
adc
inc
int3
lds
adc
and
data16
out
int3
lds
adc
outsl
in
test
mov
push
lea
and
mov
adc
les
popa
and
cs
sbb
jb
ds
lds
adc
push
add
aad
push
jbe
and
push
adc
cmp
imul
ret
mov
dec
das
pop
sub
mov
cs
xchg
lock
shll
cmpsl
jp
mov
inc
adc
or
cmp
mov
mov
fmull
push
adc
jecxz
ffree
lods
arpl
rolb
sti
mov
add
loop
sub
adc
sub
xlat
and
lods
mov
push
adc
insb
and
inc
push
jge
test
fadd
pop
adc
xor
pusha
aam
mov
test
inc
lret
es
mov
stos
pop
call
fcmovnbe
cmpsl
leavew
mov
mov
sahf
mov
pop
push
mov
mov
cmpb
dec
jno
testl
out
pop
adc
fimuls
xor
stos
cmpsb
int3
bound
gs
out
pop
adc
stos
jne
gs
data16
inc
jecxz
imul
push
push
mov
push
adc
nop
in
or
lret
aam
sbb
iret
push
push
xchg
push
adc
ds
mov
mov
loope
xchg
cs
ljmp
out
ret
xchg
cmc
ret
cs
inc
fists
movb
xor
inc
jno
mov
cwtl
mov
add
cs
scas
test
xor
cmp
lcall
sbb
iret
mov
xor
cmp
pop
js
out
aam
jns
out
loopne
push
insb
add
mov
sub
mov
fidivs
outsb
ficomps
lcall
sbb
arpl
xor
and
mov
mov
or
xor
add
mov
pop
xor
aas
dec
movsb
adc
nop
mov
push
add
mov
cmc
repz
ss
sbb
jg
sbb
je
xor
cmp
fs
stc
mov
pop
int3
bound
lock
int
jno
push
mov
clc
mov
movsb
sbb
cmc
mov
xor
push
popa
xor
cmp
int
fwait
sbb
push
xchg
xor
and
jg
out
cmp
or
or
push
imul
fwait
push
inc
cli
loop
mov
xor
mulb
lods
data16
adc
and
cltd
js
es
add
cmp
sub
outsb
popa
daa
int
mov
and
dec
push
out
pusha
mov
jmp
xor
in
xchg
xchg
jle
and
mov
mov
xor
pop
adc
stos
push
pushf
xor
pop
adc
mov
sbb
cs
mov
daa
xchg
std
notl
movb
pop
loop
fcoms
mul
leave
push
inc
push
pop
cmpsl
inc
mov
call
dec
pop
icebp
sbb
daa
inc
jle
xchg
dec
xchg
xor
loope
push
ja
jle
inc
mov
into
cs
jbe
out
jmp
popa
cmc
jno
rcrb
push
fwait
out
and
sahf
or
xchg
xor
pop
adc
adc
xchg
push
adc
cs
dec
sbb
inc
int
xor
push
nop
xchg
cmc
ds
sbb
push
push
faddl
lods
test
dec
mov
and
adc
mov
das
bound
mov
push
mov
subb
pop
jae
inc
imul
sub
data16
mov
dec
cmc
xchg
pop
leave
dec
mov
push
jae
adc
and
dec
ss
lret
xor
movsl
cmp
ret
xchg
xlat
lea
mov
inc
insb
lea
dec
popa
and
clc
rclb
out
ret
dec
xchg
push
adc
stos
push
and
cltd
fdivrs
icebp
mov
daa
int
or
movsl
push
xchg
lds
adc
sub
xor
jns
ljmp
pop
adc
adc
js
jbe
test
fisttpll
stos
outsl
mov
into
out
aas
pop
rcrl
mov
in
cmpsl
mov
or
mov
nop
lds
adc
in
or
inc
cmc
ds
push
scas
or
push
jae
adc
cmp
push
adc
jg
scas
inc
jne
arpl
mov
xlat
mov
pop
cmpsl
out
je
pop
adc
push
outsb
sahf
sbb
adc
dec
push
jne
cld
mov
jae
adc
testb
cld
mov
xlat
xchg
popf
dec
stc
cmp
dec
sbb
aaa
and
inc
inc
sbb
add
xchg
cs
push
adc
add
xchg
mov
adc
xor
add
dec
add
lds
mov
xchg
je
pop
adc
icebp
cmp
pushf
movsl
adc
clc
cmpsl
mov
mov
xchg
les
iret
mov
test
xor
jg
or
push
jo
ret
xchg
cs
cmp
dec
popf
bound
inc
fwait
in
pushf
cmpsb
add
inc
adc
pop
fstpt
dec
ret
mov
bound
push
mov
push
sub
push
adc
movsl
fisttpll
addr16
pop
add
mov
lcall
out
flds
icebp
loop
xor
add
fcomps
jns
inc
imul
mov
xor
js
ja
stc
movsl
inc
add
fcomp
stc
jns
dec
popa
or
xor
pop
es
cli
fimuls
xor
iret
mov
xchg
xor
mov
inc
pop
cltd
jae
inc
adc
cmp
icebp
test
mov
cs
mov
mov
shll
loopne
push
sub
std
loop
lahf
sti
xchg
lret
leave
mov
mov
jg
mov
mov
dec
cmc
jnp
pop
cs
mov
lods
dec
lcall
out
pop
jne
insb
xchg
pop
cs
xchg
jge
sub
xchg
sbb
cmp
dec
lret
xchg
imul
cld
sbb
shl
ljmp
clc
pop
adc
inc
shlb
stc
scas
iret
repnz
cli
lahf
shr
mov
dec
dec
in
lds
jns
in
jne
jbe
ret
inc
mov
in
pop
out
pop
fs
fistl
xor
jno
cs
adc
icebp
bswap
pop
dec
mov
sbb
fcoml
push
popf
iret
sbb
add
cmovae
aam
adc
negb
dec
adc
dec
jl
cli
adc
jmp
mov
push
jl
mov
dec
pop
jo
jo
ret
mov
shrl
out
sbb
cmpl
dec
jge
rcrl
mov
insl
jns
cmp
jg
sahf
and
pushf
push
sub
mov
pop
sub
add
mov
fmull
mov
test
fsts
std
sarb
lret
cs
ret
vcvttss2si
pop
add
dec
or
lcall
adc
rolb
in
fs
push
stc
pop
mov
or
fisttpll
in
push
pop
sbb
sarb
xor
rcr
mov
andb
and
rcrb
sub
push
adc
or
cmp
loope
add
icebp
push
popf
pop
jecxz
pop
pop
adc
adc
jmp
daa
std
lcall
cmp
or
cli
stc
mov
pop
adc
lock
sub
adc
loope
icebp
push
cld
aaa
adc
dec
and
int3
in
xchg
sbb
andb
outsb
push
pop
cltd
out
ss
dec
jg
ljmp
xor
cld
daa
ja
sub
dec
mov
xor
and
divl
mov
cmp
pop
mov
xor
stos
fnstsw
repz
xchg
inc
ss
pop
adc
lcall
xchg
sti
xchg
add
sarl
setno
jns
daa
push
xlat
clc
cmp
lods
mov
pop
test
pop
adc
xor
jae
cmp
cmp
addr16
xchg
hlt
ljmp
push
sbb
adc
or
xor
lds
mov
into
pushf
cmp
fadd
repz
or
loop
push
adc
xlat
fsubs
je
or
jae
inc
fidivrl
mov
cmp
sub
mov
inc
gs
dec
in
xlat
lcall
addr16
cmp
ret
mov
pop
in
pop
pop
xor
mov
cltd
stos
gs
xchg
das
xlat
cld
jnp
inc
test
test
push
sbb
mov
xor
cs
adc
add
gs
jnp
pxor
aaa
sbb
inc
movq
sbb
xchg
push
adc
push
call
out
add
xchg
mov
subl
fnstsw
data16
pop
adc
jne
and
push
adc
mov
xchg
xlat
ja
mov
mov
test
push
mov
out
es
or
lock
push
xor
jecxz
fstpt
stc
dec
rorb
and
xchg
frstor
ljmp
inc
pop
push
xor
dec
xchg
lret
repnz
and
add
ret
xchg
sbb
addr16
cmp
test
push
iret
mov
lcall
add
sbb
gs
pop
xor
xchg
xchg
sbb
cmpsl
lods
and
mov
xchg
fs
add
add
cwtl
lock
ret
xchg
sbb
xor
pop
jecxz
dec
cwtl
nop
popa
ret
xchg
je
xor
sub
jbe
jl
arpl
faddl
scas
sbb
mov
adc
or
and
iret
mov
pop
mov
setbe
nop
cmpsb
orl
fwait
mov
mov
aaa
in
mov
shll
pushf
cmovns
mov
stos
jge
inc
int3
sahf
cmp
test
mov
cs
mov
gs
inc
sbb
adc
sbb
cmp
dec
fiadds
cltd
inc
pop
in
mov
enter
mov
loope
dec
iret
enter
inc
lock
gs
pop
push
cltd
jle
or
popa
bound
mov
push
rclb
jmp
repz
fcoms
out
xchg
inc
cmp
mov
cmp
sbb
out
jmp
sbb
cmp
adc
adc
push
movsl
int
and
adcl
jns
pop
push
xchg
ja
repnz
dec
dec
or
enter
lock
jns
add
rcrb
lock
xchg
jb
jb
es
sub
sub
xchg
dec
insl
rorb
aaa
push
aaa
addr16
and
xchg
sub
adc
ret
lock
into
sub
call
pushf
add
mov
sbb
arpl
je
fdivp
int
mov
push
xchg
push
mov
inc
fs
das
leave
fsubr
fnstsw
inc
jnp
imul
xchg
pop
mov
popa
add
jl
dec
jmp
jmp
fadds
outsb
push
repnz
dec
loopne
pop
inc
push
lock
mov
and
loope
cwtl
in
mov
xchg
xchg
sbb
xor
mov
cltd
ficoms
add
sub
pop
mov
pusha
inc
xor
cmpb
inc
push
or
or
mov
es
enter
adc
dec
stos
adc
jo
jl
cli
cwtl
aas
xchg
jecxz
outsb
xchg
push
hlt
ja
call
lea
push
int
ret
repz
pop
lcall
and
ljmp
iret
je
addr16
inc
pop
out
cwtl
lds
cmp
push
repnz
call
cmp
sbb
or
lea
mov
adc
or
inc
jo
push
pushf
mov
dec
mov
movsl
adc
mov
loop
mov
adc
pushf
mov
push
mov
xor
push
cwtl
pop
js
loopne
not
loop
mov
std
mov
in
mov
xor
pop
mov
jne
push
mov
sub
pop
cmp
mov
ret
sbb
test
cli
ljmp
push
dec
insb
and
xchg
addr16
out
inc
inc
xor
xlat
jb
add
arpl
sti
xlat
dec
dec
out
rorl
xchg
sbb
loope
stos
or
mov
add
mov
into
leave
mov
mov
repnz
fs
movsb
scas
mov
cmp
lcall
push
and
mov
cmp
add
dec
jl
cvtps2pd
or
dec
xor
jns
push
aam
adc
push
xor
mov
dec
test
iret
ljmp
lea
mov
mov
dec
icebp
dec
mov
int3
leave
repz
xchg
push
call
ds
movsl
xchg
pop
jle
test
xchg
fidivrl
shll
mov
repz
in
movsl
xlat
cmpsl
xor
cli
mov
popf
filds
mov
pop
jmp
int3
insl
daa
xor
es
dec
sbb
arpl
push
in
cmpsb
pop
sbb
imull
and
mov
mov
lret
xchg
push
jnp
push
and
sbb
or
adc
pop
leave
mov
or
arpl
push
xor
bound
dec
in
jno
in
inc
add
sbb
mov
subb
inc
push
dec
push
loop
mov
rcr
mov
insb
aad
mov
cmpsb
ret
mov
ret
and
mov
adc
push
nop
jp
mov
ss
sbb
sub
into
iret
mov
test
inc
push
push
jb
pusha
adcb
cli
loope
pop
mov
xchg
cmc
mov
jnp
js
cltd
dec
test
in
mov
or
in
mov
pop
je
test
es
stos
pop
lods
dec
out
or
arpl
int3
adc
cmp
pop
repnz
fs
push
stos
add
int3
sbb
mov
mov
lock
inc
icebp
dec
in
dec
mov
pushf
cmp
std
adc
clc
sub
jb
pop
mov
in
fildll
jp
sbb
repnz
ljmp
mov
cmc
pop
rcll
cmp
outsl
sub
lds
fadds
imul
mov
std
add
outsl
mov
jle
pop
jmp
push
mov
popa
mov
sti
fimull
cmpsl
aad
cli
out
popa
mov
jg
or
xchg
iret
movb
cwtl
test
test
jnp
cmp
sub
xchg
jmp
or
rcll
adc
cwtl
or
insl
insl
stos
aas
push
iret
cmpsl
lods
push
add
xchg
imul
and
push
and
test
shrl
and
les
clc
cltd
pop
fildl
lods
imul
ret
es
inc
mull
out
negb
mov
pop
lcall
sub
mov
icebp
mov
xor
push
mov
mov
inc
dec
push
enter
jb
sbb
rorl
lret
test
lea
mov
mov
xor
or
mov
cwtl
scas
inc
fisubrl
and
vmovaps
jge
dec
repz
test
test
sub
and
xlat
pop
cmc
out
xchg
pop
cs
xchg
inc
inc
inc
dec
ret
sbb
jl
dec
cs
mov
testl
push
jne
movsb
stos
scas
sbb
iret
sahf
dec
ret
add
and
inc
rcl
or
mov
dec
adc
cld
dec
adc
xor
push
dec
popa
out
adc
xor
sub
loop
jl
push
push
mov
sub
or
xor
mov
fdivr
lret
mov
icebp
mov
test
add
clc
fisubs
rorl
and
adc
sbb
push
xor
div
xchg
dec
add
negb
out
ljmp
rorl
jns
ficoml
push
push
insb
leave
movsl
jns
xchg
rorl
adc
mov
mov
xor
pusha
xor
testl
js
xchg
ja
rcrl
aaa
pop
adcb
pop
xchg
std
mov
dec
jae
sub
pop
ja
mov
and
sahf
cmp
dec
adc
jbe
sbb
jmp
les
pop
xor
loopne
std
sbb
xchg
or
dec
push
pop
dec
out
mov
sbb
icebp
imul
aam
cmpsl
inc
paddusb
loop
orb
insl
lret
adc
push
mov
aam
mov
jbe
pop
notrack
or
and
repz
shll
xchg
rcll
mov
adc
dec
gs
jmp
cmp
xor
pop
push
lea
inc
shlb
in
inc
mov
loope
test
arpl
das
push
adc
ljmp
and
nop
xchg
push
adc
lahf
and
imul
pop
push
mov
mov
fstpl
js
in
push
hlt
push
inc
push
arpl
rcrl
gs
rolb
adc
in
daa
test
iret
push
jmp
mulb
and
rcll
andb
out
insl
js
sub
pop
or
jb
arpl
mov
jo
or
mov
fmuls
mov
andb
dec
mov
mov
or
cmp
sub
jb
mov
subb
push
stos
notb
inc
addr16
pop
push
xor
inc
hlt
sbb
push
adc
mov
fs
imulb
xchg
adc
jle
pop
mov
lcall
dec
scas
lods
xchg
push
adc
inc
inc
outsl
mov
nop
sub
xchg
andl
dec
in
movsl
jecxz
jbe
repz
jl
ja
dec
shlb
rol
push
dec
pushf
and
fidivrs
test
pusha
addr16
cmp
pop
xchg
movsl
lock
scas
xchg
mov
adc
in
push
out
repz
nop
xchg
push
adc
daa
jnp
cmp
arpl
fstpl
cmp
or
outsl
in
pop
inc
dec
or
push
mov
dec
push
rolb
es
sbb
sub
inc
mov
sbb
setnp
iret
jno
idivb
xor
pusha
ret
adc
xor
cmp
or
sbb
je
shlb
je
cli
rcll
xlat
pop
mov
notb
loopne
dec
cmp
mov
dec
jae
push
adc
and
or
adc
lcall
adc
icebp
or
push
adc
push
jl
aaa
cmpsb
mov
inc
jle
jp
push
push
stos
mov
pop
jno
xchg
push
adc
cld
out
int
sti
movsb
das
add
imul
dec
fsub
popa
jns
ret
loopne
repnz
mov
imul
mov
xlat
inc
pop
adc
xchg
mov
repz
shll
xor
and
mov
mov
adc
fsts
mov
pop
jo
pop
nop
das
push
adc
adc
sbb
mov
adc
or
xor
movsl
lods
addb
mov
jnp
rolb
or
pop
ret
imul
rcr
fmull
js
dec
xchg
loop
pushf
fs
mov
xor
xchg
hlt
and
xchg
daa
inc
mov
inc
lods
mov
loope
js
fstpt
call
out
sub
jns
push
mov
mov
adc
mov
cmp
popa
inc
mov
in
ds
lret
push
ret
jae
popf
pop
gs
xchg
aam
in
jg
cs
int
and
mov
xchg
or
fnsetpm(287
imul
pop
sbb
arpl
inc
cmp
js
js
je
subb
push
out
sahf
sub
popf
sbb
jmp
les
ljmp
pop
inc
mov
nop
jns
xchg
mov
mov
and
xor
jne
mov
popa
adc
mov
mov
leave
lcall
mov
mov
ret
sub
push
cmp
out
pop
outsb
push
or
gs
icebp
sub
out
into
lds
and
das
push
adc
cmc
adc
adc
mov
or
clc
popf
sarl
push
je
sahf
test
pushf
sub
sbb
ljmp
in
sahf
shrb
jp,pt
adc
pop
dec
pop
push
ficomps
insb
aad
jp
ljmp
lods
cmc
out
mov
pushf
je
and
push
out
in
mov
jp
lret
cld
pop
adc
dec
rcr
iret
cmp
loop
and
and
pop
clc
rcrb
xchg
jle
push
jae
lock
rol
pop
jle
push
jmp
ret
mov
daa
mov
jp
out
mov
and
xor
or
mov
bound
mov
or
mov
cli
out
ficompl
adc
mov
xchg
fsubrl
adc
ret
lods
sbb
outsl
cmp
jbe
adc
pop
add
cmpsb
xlat
mov
sbb
call
dec
shlb
aad
push
lods
mov
jne
cmp
xchg
ret
popa
lea
xchg
clc
mov
das
push
adc
jmp
push
aaa
mov
pop
adc
jnp
shrl
add
daa
rcrl
xor
inc
pop
mov
pop
xchg
inc
stos
and
pop
adc
add
pop
adc
loop
icebp
nop
ds
std
popa
mov
inc
jb
and
out
test
and
ss
xchg
lcall
das
imul
in
and
fnstsw
inc
in
fisttpl
adc
xorl
test
in
les
adc
push
cmpb
mov
mov
push
jle
xor
pop
and
pop
adc
nop
mov
hlt
sbb
push
or
mov
dec
js
add
fwait
dec
dec
dec
mov
pushf
out
cli
mov
cmovns
int3
fnstcw
push
test
arpl
jae
or
lock
push
dec
inc
pop
mov
xlat
scas
jae
dec
fs
push
sbb
push
adc
push
mov
mov
in
mov
popa
jge
jo
pop
adc
insl
xor
add
int
fwait
sbb
jg
sbb
je
nop
push
cmp
jae
cmp
out
pop
mov
roll
xchg
jo
pop
adc
pushf
cmp
dec
out
mov
pop
imul
jns
sub
flds
adc
add
adc
jmp
loop
mov
jo
pop
adc
ficoml
or
idivb
pop
rcr
pop
adc
jno
faddl
adc
insl
xor
fsubrp
out
out
lret
lods
sub
flds
adc
sbb
jno
ret
add
lds
jae
dec
pop
or
ds
dec
push
or
pop
or
push
stos
js
loop
inc
mov
pushf
popa
ret
xchg
push
and
jo
pop
adc
push
sbb
dec
jmp
lret
or
lds
sub
out
pushf
mov
lea
icebp
and
add
cs
dec
or
jp
andl
adc
test
repz
sub
dec
and
pop
adc
xchg
push
adc
xor
mov
cmc
out
inc
push
out
in
std
pop
adc
in
sub
adc
push
xor
outsl
inc
push
mov
cltd
cmp
icebp
dec
rcrb
ret
cs
scas
fsubp
iret
sahf
inc
inc
adc
in
xlat
jbe
stc
sbb
sub
vpunpckhqdq
in
adc
xor
xchg
xor
jae
jbe
push
add
add
inc
sbb
adc
pop
inc
add
lret
pop
into
arpl
xchg
cs
cmpsl
sbb
pop
lea
push
cmp
out
les
jb
into
lahf
testl
cld
jo
adc
push
popf
cmp
adc
add
xor
inc
sbb
mov
pop
jg
in
mov
mov
dec
jnp
mov
pop
adc
xor
xor
pcmpgtw
inc
push
cmp
or
aad
fistps
and
mov
cli
out
cmp
rcrb
add
jae
pop
mov
cmp
inc
call
lds
or
push
push
pop
ror
gs
insl
dec
xor
popa
jo
repz
cmp
pop
adc
addl
insl
sbb
int3
cmp
push
ret
loop
int3
flds
adc
sbb
pop
adc
mov
jnp
popf
cld
jo
adc
xor
push
xchg
nopl
adc
sbb
add
dec
sub
rcl
fidivs
jns
push
inc
lcall
sbb
sbb
punpckhqdq
pop
addr16
les
jecxz
or
cld
lea
aas
flds
frstor
mov
adc
adc
std
and
pop
adc
test
sbb
inc
aaa
movsb
lock
fdivr
pop
adc
mov
and
mov
sbb
movsl
xchg
test
lods
dec
inc
lret
dec
into
sbb
adc
fstl
cli
outsb
cmp
test
inc
push
popa
insb
inc
inc
jge
mov
push
adc
dec
stos
jbe
faddl
adc
in
add
lock
pop
aam
popa
lock
pusha
dec
pop
sub
inc
xor
adc
bound
push
lock
scas
fildl
test
faddl
adc
mov
clc
ja
sti
scas
cmp
xchg
pop
sbb
jle
inc
and
js
jns
jmp
fs
adc
lcall
inc
push
insl
je
pop
adc
mov
pop
adc
lock
adc
inc
inc
or
std
jmp
adcl
adc
lret
fs
setle
mov
in
or
sbb
out
and
xchg
sbb
mov
push
cmp
test
rcl
aaa
cs
push
add
in
in
lcall
sbb
push
dec
jne
cwtl
mov
pusha
sub
mul
push
jg
out
adc
jg
jns
mov
mov
enter
add
jae
jae
add
xchg
cmp
ja
stc
push
arpl
aam
lds
adc
es
fsubrs
jns
out
pop
lds
adc
mov
sbb
cmp
loop
inc
pusha
lds
adc
adc
xchg
testb
rcl
mov
xor
sbb
vpsubb
mov
stos
or
repz
cmp
icebp
movsl
dec
pop
sbb
jo
xchg
sbb
insb
mov
adc
xchg
sbb
inc
loop
into
pushf
cmp
das
sub
shl
mov
fs
xor
mov
xor
ljmp
pushf
cmp
adc
sbb
xchg
or
mov
adc
nop
into
pushf
sarl
xchg
call
xchg
dec
gs
mov
jae
adc
movsb
mov
push
adc
mov
xlat
xchg
pop
xchg
fsub
and
dec
int
mov
push
adc
mov
fs
jle
loop
popa
mov
and
mov
sbb
faddl
adc
pop
jge
es
or
cmp
mov
push
adc
in
loopne
xor
out
and
cmp
insb
xchg
data16
pop
adc
xor
mov
pop
mov
inc
lea
lahf
jne
push
pop
cmp
mov
mov
adc
out
push
repz
xchg
jne
je
mov
or
repz
mov
ja
xor
or
dec
adc
aad
jne
push
add
mov
jp
out
shlb
add
add
jo
pop
adc
into
push
je
das
lret
adc
std
pushf
shll
jo
pop
adc
xor
fsubrl
pop
mov
shll
jns
push
out
inc
mov
adc
adc
jp
sbb
adc
insl
out
lcall
in
mov
lods
dec
xor
or
lods
insb
add
adc
jae
fs
cmp
lret
mov
movsb
add
or
movsl
repnz
mov
lret
adc
or
and
pop
sbb
xchg
jb
mov
adc
inc
jmp
inc
jmp
loopne
jle
scas
sbb
pop
adc
movsl
aam
clc
scas
mov
negl
rcl
insb
inc
movsl
xor
sahf
mov
lds
adc
mov
je
add
sbb
faddl
adc
sub
push
jb
dec
mov
faddl
adc
leave
outsl
inc
push
cmpsl
mov
faddl
adc
jno
xchg
mov
jns
xlat
js
test
jbe
xchg
lods
mov
adc
sbb
lds
adc
mov
push
push
jns
and
xchg
lds
adc
pop
mov
fdivrs
or
sub
sub
sbbl
addr16
sub
ja
insb
clc
lds
adc
es
sti
insl
je
pop
adc
sbb
mull
divl
je
pop
adc
cmp
mov
faddl
adc
mov
adc
mov
pushf
cs
out
or
dec
sbb
in
pop
adc
sub
gs
scas
test
xor
jo
pop
adc
jg
lds
outsl
xor
cmp
cwtl
stos
hlt
mov
cmp
sub
jecxz
cmp
jae
mov
add
lock
push
outsl
jo
stos
xchg
lods
mov
xchg
out
adc
or
pop
in
les
adc
out
out
xor
inc
lock
xor
or
adc
adc
popa
ret
add
fs
xor
stos
stc
mov
rol
adc
pop
cmc
add
in
sar
scas
push
sbb
popa
jge
push
or
or
xor
bound
xor
inc
arpl
add
pop
adc
test
jecxz
mov
inc
adc
dec
mov
sbb
ss
dec
lret
pop
into
pusha
lret
xchg
cs
sbbb
pop
xor
test
std
pusha
inc
mov
scas
sub
jmp
int
adc
mov
sbb
xor
sahf
inc
js
fidivs
xchg
pop
je
dec
sbb
xor
add
and
adc
or
inc
lret
mov
dec
dec
sbb
imull
and
out
jmp
jo
testb
lds
adc
hlt
sub
filds
xchg
cs
shlb
int
js
sbb
mov
mov
pop
adc
aam
sbbb
adc
xchg
les
adc
iret
xor
xor
outsb
jnp
int
or
push
pop
mov
fbstp
cmp
xor
or
pop
aam
les
adc
je
jo
adc
adc
adc
in
call
gs
repnz
add
add
imul
enter
pop
xlat
sbb
adc
insb
pop
pop
mov
push
adc
jne
sarl
mov
or
imul
rcl
mov
add
addl
sub
adc
sbb
push
je
cmpb
setb
pop
fldt
popl
pop
out
les
jl
adc
test
cwtl
jae
adc
push
cld
jmp
adc
into
loop
aad
popf
iret
cmp
lods
lea
push
mov
bound
sbb
test
xchg
push
adc
out
push
lea
dec
andb
ja
xchg
insl
insl
ret
mov
hlt
xchg
push
adc
mov
xchg
call
mov
insl
cli
and
push
ja
int
mov
and
mov
mov
xchg
in
mov
pop
mov
iret
sahf
psubb
shr
jne
call
pop
and
mov
mov
inc
push
call
aad
pop
dec
inc
mov
cld
lods
and
jae
pop
mov
fsubl
imul
aaa
in
push
push
adc
insb
add
pop
mov
pop
fisttpll
fdivs
mov
mov
jae
adc
jb
mov
addr16
adc
fs
xchg
dec
movl
outsb
dec
push
or
insl
pop
cli
in
jno
je
xchg
mov
adc
mov
dec
ficoms
ljmp
mov
lds
adc
inc
in
cmp
sti
mov
call
faddl
adc
pushf
mov
lahf
lock
ficompl
xor
push
push
aaa
sahf
gs
jecxz
xor
cld
int3
xchg
jbe
faddl
adc
and
adc
add
sub
inc
stos
jo
pop
adc
sbb
dec
out
mov
lds
adc
fcomp
je
pop
adc
add
xor
mov
incl
adc
pop
movsl
int3
jo
adc
inc
push
mov
or
inc
or
sbb
xchg
jns
les
adc
push
lds
adc
pop
or
sbbl
or
aaa
sahf
adc
xor
mov
mov
mov
js
dec
lds
fdiv
pop
add
xchg
inc
lcall
jo
and
xchg
popa
mov
push
adc
xchg
test
fsubp
lret
xchg
cs
lock
outsb
sti
xchg
lret
push
dec
icebp
mov
in
nop
mov
cmp
imul
push
mov
pushf
cmp
mov
add
sahf
mov
inc
sbb
xor
fwait
int3
pushf
cmp
ret
xchg
adc
jnp
sbb
popa
int3
add
sbb
negb
bound
popf
cmp
sub
pop
or
jae
add
adc
sbb
gs
cwtl
stos
xchg
and
loop
add
sub
sarl
push
mov
adc
jo
jae
adc
ss
lahf
mov
test
mov
hlt
cmp
cmpsb
mov
gs
jecxz
or
dec
push
int
xchg
ret
xchg
jg
ljmp
mov
cmp
pop
out
mov
mov
test
mov
lock
jecxz
paddusb
push
xchg
inc
adc
add
pop
mov
cmp
mov
xor
cld
jnp
sbb
popa
mov
xor
jg
dec
jb
into
call
xchg
imul
clc
and
fs
mov
sbb
rcrl
jo
ret
add
icebp
cmp
lods
ret
xor
xchg
xchg
jge
jle
out
popf
outsl
sbb
cmp
jne
rcll
arpl
test
or
sub
cmp
in
cld
and
cmp
in
call
inc
and
and
pushf
sub
lahf
mov
test
inc
dec
in
cwtl
sahf
push
push
mov
sbb
stos
clc
ret
cmp
push
jmp
push
adc
mov
cmp
dec
int3
addr16
sarl
fisttps
adc
js
push
sub
cmp
or
aas
stos
mov
fisubrs
out
pop
hlt
call
pop
arpl
push
push
mov
ljmp
js
fdivs
push
xchg
jl
and
or
xor
inc
xor
in
dec
pop
or
fs
cld
jo
adc
mov
popa
mov
dec
push
out
push
fwait
xchg
ficoml
ja
lock
xor
and
jae
adc
in
mov
pop
iret
data16
add
mov
jb
sbb
call
adc
es
nop
dec
and
lods
push
adc
push
adc
jb
arpl
cmp
popf
push
loopne
mov
mov
cmpsb
andl
loop
pop
mov
push
outsl
inc
sti
mov
cltd
sbb
test
push
mov
xchg
test
add
movsb
add
push
sub
lcall
adc
jae
adc
and
jbe,pt
not
in
out
decb
lahf
stos
enter
popa
xchg
cmpb
push
and
in
or
test
bound
mov
iret
in
scas
cs
clc
jns
add
ret
in
js
jl
dec
subl
dec
fsubs
es
je
pop
fdiv
lcall
and
adc
cli
mov
stc
mov
sbb
push
pop
testb
pop
out
bound
popa
ret
adcl
rorl
push
adc
inc
loop
push
clc
pop
out
fsub
inc
in
outsl
cmp
xor
setnp
hlt
mov
bound
mov
pop
xchg
jge
xchg
jns
or
pop
mov
pop
or
cmp
cld
jo
adc
push
loopne
hlt
xchg
repz
sub
xchg
pop
pusha
and
inc
or
adc
movsl
add
jo
fsubs
fistpll
jno
xchg
push
adc
xor
js
nop
dec
mov
cs
adc
lret
fdiv
and
and
insb
mov
jae
xchg
push
xor
movsb
cmp
roll
or
mov
adc
mov
or
shlb
insb
iret
sahf
cmp
dec
in
lea
sahf
sub
and
lods
lret
out
push
movsb
cmp
ret
out
dec
pop
or
mov
adc
int
mov
arpl
ss
adc
out
ret
rorl
sbb
add
xchg
js
xor
push
adc
mov
mov
movsb
cmp
lcall
rcrl
and
adc
ja
mov
lcall
xchg
leave
lret
sbb
xchg
cld
sub
aad
adc
dec
icebp
add
jmp
int
jae
popf
iret
outsb
sbb
movl
mov
iret
je
jno
adc
je
mov
nop
jo
adc
xchg
mov
gs
stos
mov
lahf
unpcklps
rcr
cmpb
adc
cmpsb
pop
jecxz
cmp
adc
xchg
xor
cld
pop
mov
leave
xchg
sub
popa
xor
jbe
mov
mov
aad
pop
or
add
subl
iret
push
sub
sub
inc
sbb
pop
roll
mov
push
fisttpll
dec
lock
notb
inc
xadd
shr
int3
cmpsb
sti
flds
cmc
rorl
test
jns
sub
test
and
sub
fmuls
adc
xchg
push
adc
xchg
mov
arpl
fdivs
and
lret
push
jns
xchg
hlt
gs
jnp
inc
mov
mov
std
pop
adc
and
adc
call
repz
and
out
sub
pop
fsubrp
movsl
adc
jb
enter
aas
imul
mov
pop
xor
ja
roll
cmp
xchg
mov
lret
es
adc
movsl
inc
addr16
ficomps
std
aaa
add
enter
cmc
jecxz
sti
in
inc
sbb
fdivrs
mov
cmpsb
fistpll
rol
sub
ja
mov
add
cmp
xchg
pushf
sar
pop
adc
sbb
mov
fs
fs
push
adc
out
cmc
fiadds
xor
push
jns
sbb
and
sahf
push
shlb
xchg
pop
cmp
xchg
cltd
loopne
cmp
sub
sub
push
cmpsb
aam
popa
shlb
leave
movsl
or
or
sub
push
xor
fstps
adc
pop
xchg
push
adc
dec
push
xor
pop
adc
xor
aaa
aaa
out
jge
fsub
pop
adc
leave
nop
divps
push
and
mov
hlt
push
mov
mov
xor
pop
pop
cld
icebp
pop
mov
int3
adc
push
or
loope
push
xor
adc
int
ljmp
cmp
dec
fcomi
js
movl
adc
pop
xchg
push
adc
sbb
adc
or
sahf
cmp
in
jb
xor
ja
jno
push
xchg
and
mov
icebp
loop
sub
jae
imul
int
pushf
jg
cmpsb
mov
mov
sub
je,pt
pushf
ja
jl
xor
mov
push
adc
add
push
mov
mov
lret
or
lret
push
xchg
push
adc
xchg
xchg
mov
xor
shll
incb
adc
shrb
cmp
push
inc
push
mov
pop
mov
lret
repz
mov
sbb
aad
mov
push
cmp
and
mov
and
mov
test
sub
jg
dec
inc
mov
std
insb
cmpl
shlb
shr
call
xor
xchg
push
inc
jo
xchg
ret
in
ret
outsb
xor
push
scas
data16
sahf
dec
inc
push
fimull
mov
xchg
into
sbb
xchg
xor
add
test
scas
addr16
loope
mov
std
inc
mov
sbb
adc
ret
sahf
dec
dec
in
lcall
sbb
adc
pop
aaa
add
add
adc
popa
fistpl
xchg
push
adc
faddl
adc
pop
fcmove
sahf
clc
inc
jno
pop
xchg
mov
outsl
cmpsb
fdivr
pop
adc
je
cmp
mov
out
lcall
bswap
je
bound
fwait
mov
xor
adc
dec
jbe
sbb
jmp
outsl
lds
fadds
pop
cmp
adc
loopne
in
sbb
repnz
sub
xlat
rcrl
xor
testl
adc
pop
dec
add
jge
les
adc
mov
inc
mov
sbb
jmp
pop
mov
mov
test
loope
dec
jg
lcall
stc
jmp
sub
dec
xor
sbb
fisttps
add
dec
repz
cltd
cltd
add
mov
adc
repnz
hlt
sub
ds
inc
or
push
adc
sti
bound
jb
fcmovb
push
imulb
lock
jl
call
jp
jbe
faddl
adc
jno
gs
rep
or
or
es
js
push
push
push
in
push
adc
add
cmpsl
jo
pop
adc
and
lea
mov
dec
pop
or
add
xchg
mov
fs
mov
jno
adc
cmpsb
mov
cwtl
mov
push
or
call
mov
pop
adc
je
pop
mov
jg
shl
mov
pop
jle
and
sub
jno
lret
cmpb
test
int3
sub
add
stc
push
mov
xchg
mov
sbb
nop
xchg
pop
or
dec
bound
pop
or
sub
push
je
pop
adc
popa
and
pop
leave
adc
nop
mov
add
loopne
mov
add
adc
iret
sahf
es
pop
or
movsl
mov
adc
jle
mov
out
enter
mov
mov
lods
in
adc
xchg
call
xchg
fldt
shlb
pop
or
ja
ljmp
fistl
pop
or
bound
sbb
inc
dec
push
xlat
scas
jno
dec
fs
adc
sbb
cwtl
ret
xchg
sbb
sahf
mov
mov
mov
iret
fbstp
jecxz
xlat
mov
add
add
cs
or
xchg
mov
stos
fadds
sbb
pop
push
lock
pop
cmc
jae
in
shl
push
fs
hlt
xchg
mov
xor
sub
or
mov
es
add
pop
xchg
lods
mov
xor
cwtl
pop
sbb
movb
pushf
mov
cmp
lret
mov
aad
inc
sbb
mov
ss
shlb
adc
dec
or
xchg
icebp
loop
mov
sub
xor
xor
adc
mov
arpl
jg
push
xchg
sbb
inc
mov
mov
out
lds
push
sbb
je
je
ret
ficomps
jg
gs
cmpsl
adc
cmp
pause
lea
cmp
mov
mov
sbb
subb
pop
xchg
add
in
and
cmp
sbb
arpl
lods
inc
outsl
mov
xor
adc
test
mov
adc
sbb
xchg
push
adc
push
mov
stos
xchg
repz
mov
pop
adc
adc
icebp
nop
mov
push
xor
outsb
fwait
cli
int
inc
sbb
inc
mov
sub
adcl
add
fadd
hlt
jns
lcall
inc
fwait
sbb
or
lds
jo
adc
adc
orl
xor
in
dec
cmp
rclb
pop
int3
mov
xor
mov
jg
shll
sbb
sub
jecxz
pop
out
cmp
ret
jno
popa
or
or
jge
push
inc
mov
cmp
lea
dec
js
shl
in
pop
lret
adc
jne
jnp
xchg
sbb
dec
pop
or
cmp
addr16
sbb
or
adc
aas
adc
loope
repnz
jno
sbb
imul
adc
data16
jo
adc
lea
mov
jecxz
jmp
cld
jg
xor
sbb
ret
call
xchg
push
or
xchg
movsb
mov
adc
xchg
push
adc
pushf
push
or
xor
stos
or
inc
push
cmpsl
dec
inc
push
cld
jp
cs
pop
adc
push
push
adc
cld
inc
movsl
sub
cld
mov
sbb
push
sbb
or
pop
mov
push
push
insl
xor
adc
push
aad
xchg
adc
movb
dec
cs
aad
fsts
push
and
and
jo
pop
adc
sahf
ficoml
out
aaa
mov
adc
jbe
jl
in
ljmp
push
std
cld
mov
cmpsl
mov
pop
or
test
jno
adc
daa
xor
or
fdiv
js
movl
xor
out
and
mov
test
adc
adc
inc
data16
div
add
ds
inc
xchg
ret
dec
aas
adc
sbb
leave
jne
in
test
cmpsl
push
and
adc
mov
xchg
sub
push
jle
xchg
iret
aam
aaa
mov
dec
cmp
add
out
pop
mov
cmp
pop
inc
cwtl
dec
cmp
dec
in
push
jne
push
jle
sbb
cmp
fcomps
sub
dec
lds
arpl
dec
stos
dec
pusha
stos
loopne
mov
xchg
pop
fdivrl
addr16
push
fcoml
icebp
mov
push
xor
std
cwtl
mov
jo
push
adc
xchg
cmp
jae
xchg
mov
pop
adc
aaa
mov
pop
adc
cmp
sbb
arpl
icebp
dec
adcl
adc
dec
or
out
lcall
sbb
adc
enter
add
xchg
mov
sub
les
pop
inc
inc
xor
or
hlt
cld
jo
adc
adc
lea
cmpsl
shll
sbb
arpl
icebp
xchg
cmp
pop
xorl
out
out
xor
or
mov
mov
outsl
mov
pop
xor
pop
jns
out
dec
pop
or
mov
adc
fs
testb
mov
cld
jo
adc
iret
sub
les
adc
dec
bound
lahf
pop
cmc
jp
in
sar
int
je
pop
adc
fnsave
gs
jo
pop
adc
pushf
cmp
lods
aas
js
nop
dec
mov
cs
into
insb
out
ljmp
lret
xchg
xlat
hlt
lahf
psubb
mov
mov
int3
aad
decl
mov
scas
cli
out
movl
mov
imul
mov
nop
or
adc
or
xor
ret
fcmove
mov
lock
push
hlt
loop
int3
mov
pusha
mov
repz
arpl
lcall
xchg
push
adc
dec
push
clc
xlat
bound
mov
int
dec
push
ds
out
int
into
pushf
cmp
mov
out
sub
pop
adc
lea
mov
xchg
stos
xchg
int
call
sub
pop
adc
mov
cmp
flds
adc
fxch
cwtl
push
test
pop
adc
ja
jbe
mov
les
int
pop
xor
xchg
out
iret
cwtl
ss
call
test
pop
adc
mov
in
mov
adc
adc
mov
adc
sahf
xor
jae
ss
clc
inc
add
clc
mov
sbbl
ja
or
jo
lea
cmpsb
jg
les
stc
icebp
sahf
jb
mov
insb
pop
push
sub
add
fcomp
inc
ljmp
out
shl
push
test
jg
pop
clc
xor
insl
ljmp
add
in
ret
fists
insl
testb
xchg
push
fwait
adc
pop
orb
jns
adcl
jns
test
cmpsl
ja
jecxz
notl
das
dec
cmpsb
iret
jne
lock
sub
xchg
not
inc
mov
sub
jno
pop
cmpsl
outsb
xor
rcrb
int
push
cli
sub
data16
sub
inc
push
nop
mov
inc
loop
dec
inc
mov
xlat
rcl
mov
adc
push
jl
and
mov
popa
scas
les
pop
mov
pop
stc
fsubl
dec
lods
shlb
les
std
aaa
sahf
jge
jmp
mov
add
or
xlat
mov
xor
push
insl
int
jle
rcr
inc
dec
xchg
push
lods
gs
push
jb
popa
ret
ds
mov
fiadds
loopne
filds
pop
sub
pop
pusha
hlt
dec
jo
popf
andb
mov
addr16
push
mov
cmp
push
cmp
loop
in
mov
inc
iret
popf
movsb
outsb
nop
scas
ds
gs
outsb
or
out
xor
in
jmp
sub
mov
jb
orb
pushf
scas
in
cltd
ret
stos
out
repnz
int
fwait
xchg
scas
cld
cmpsl
rcrw
push
adc
popf
or
mov
fdivl
push
pop
hlt
test
pushf
inc
cmc
xor
sub
jo
adc
test
in
mov
mov
mov
clc
ljmp
das
aad
lret
ret
adc
outsb
lea
rcrb
cltd
adc
or
cmp
sub
ret
xchg
sti
cmpsl
iret
xchg
js
xor
ret
ret
sti
adc
test
std
scas
aad
add
dec
adc
or
call
inc
pop
data16
ret
aas
pop
xor
adc
cmp
mov
jmp
stos
xchg
int
sbb
cmp
test
adc
mov
mov
adc
cmp
pop
adc
std
lods
cmp
lock
mov
ret
adc
mov
pushf
movl
cmp
add
xchg
sar
das
mov
inc
cwtl
icebp
dec
repnz
xor
jne
xchg
or
fcmovb
loop
shl
sarl
add
sub
and
sbb
or
gs
adc
adc
nopl
add
jne
ret
adc
and
cwtl
mov
inc
sarl
and
test
nop
dec
push
arpl
mov
xchg
and
sahf
pop
lds
sub
sub
jecxz
xchg
imul
dec
cmp
pop
out
test
jno
xchg
push
int3
rorb
rolb
mov
mov
out
out
push
mov
shr
cwtl
mov
js
sahf
ret
fsubrs
add
adc
ja
and
shll
pop
negb
idiv
int3
cmp
adc
dec
fdivrl
cld
jo
adc
mov
jmp
lock
jle
bound
xor
test
jle
pop
in
mov
pop
jg
push
adc
cmp
pop
pop
fs
adc
and
cwtl
mov
cmp
mov
mov
pop
adc
mov
cld
sub
repnz
adc
mov
jg
push
adc
jae
shlb
fstps
dec
add
mov
xchg
into
rcrb
fwait
sarb
movsl
sub
sbb
imul
movsb
jns
adc
mov
adc
mov
pop
adc
outsb
mov
mov
and
push
adc
push
mov
pop
push
pop
and
stos
inc
push
inc
push
cli
jnp
inc
bound
outsl
stos
mov
movsl
cwtl
popf
add
test
jge
sbb
mov
adc
cmp
enter
mov
inc
scas
mov
lcall
pop
inc
dec
fimuls
dec
aam
fsubrl
xchg
mov
in
xor
out
pop
mov
scas
pop
xor
stos
fdivrs
jbe
mov
xor
imul
and
and
xor
fstl
push
adc
jle
xor
jae
xchg
inc
inc
jmp
sub
dec
arpl
ljmp
std
jmp
cmpsl
mov
push
fsubrl
push
fsubrp
out
jp
push
in
nop
sbb
xor
mov
xor
xchg
add
ljmp
xor
pop
lds
sbb
cmc
fstps
adcl
adc
or
insl
dec
inc
mov
popa
dec
sbb
shl
push
adc
mov
enter
mov
cmp
mov
mov
or
and
adc
cmp
ja
adc
incl
jae
dec
xlat
add
xchg
push
adc
dec
fmull
mov
js
sbb
push
adc
fldt
pop
lds
or
push
bswap
fbld
orl
loop
js
sbb
bound
repz
adc
pop
jae
push
pop
out
pushf
mov
or
inc
cmc
cmp
imul
adc
popf
insb
sahf
cmp
pop
xchg
jg
and
push
mov
adc
daa
xchg
cmc
add
pop
cs
xchg
mov
fbstp
leave
jg
pop
inc
mov
popf
cmp
icebp
dec
mov
cmp
cmp
iret
dec
sub
adc
int
cmp
xchg
iret
mov
jge
cli
mov
cs
shll
sbb
lcall
sbb
int3
mov
xor
rclb
cs
sub
dec
pusha
in
mov
lret
arpl
pop
sub
fldt
insb
lahf
js
loop
xor
dec
cli
mov
iret
ljmp
shll
int3
mov
xor
lds
pop
xor
shll
mov
lcall
sbb
arpl
xor
pop
lds
pop
pop
nop
adc
or
bound
cmp
aaa
ficoms
dec
push
push
arpl
jmp
out
fdiv
shll
xchg
out
shll
iret
mov
mov
mov
push
out
sahf
nop
adcl
mov
jbe
xor
outsl
std
insb
lahf
js
loop
push
ljmp
fldcw
nop
push
out
ss
sbb
push
jg
xor
xor
sbb
cmp
pop
inc
jae
arpl
ret
cltd
ficoml
shll
adcl
push
into
lods
idiv
sbb
nop
cmp
ret
xchg
jle
xchg
jle
mov
mov
push
adc
push
xchg
ljmp
xor
loope
nop
leave
cmovno
movsl
inc
jecxz
testb
push
adc
shr
xor
lcall
xchg
ss
testl
mov
xlat
xchg
pusha
mov
push
ret
ds
adc
sbb
push
cmpsl
xor
add
loope
out
rolb
les
gs
jmp
lock
es
adc
mov
and
mov
cltd
and
push
jl
xor
adc
lahf
das
cltd
call
mov
jno
jno
jae
or
dec
mov
test
stos
jno
fistpl
pop
pop
test
mov
ffreep
mov
xchg
repnz
sbb
lods
out
adc
mov
xchg
xlat
cs
cmpl
cli
rclb
movsl
mov
testl
inc
sbb
cmp
adc
push
adc
jecxz
ret
push
xchg
mov
add
adc
sti
pop
dec
mov
loopne
mov
mov
hlt
imul
pop
pop
addl
pop
cmc
xor
dec
push
xchg
mov
mov
inc
add
mov
lea
loopne
fisubs
popf
shll
fdivl
rcrb
loope
push
in
push
andb
test
sub
int
push
dec
mov
arpl
sub
cmp
or
sub
cmc
add
xor
adc
and
cmpsl
int
rclb
lret
mov
aam
scas
test
out
dec
lods
jo
or
xor
mov
push
add
inc
add
cmc
call
sub
scas
mov
or
cmpsl
or
push
pushl
clc
fisubl
jmp
sub
cli
aas
movsl
jl
push
push
mov
jnp
sbb
sbb
rclb
xchg
mov
iret
sbb
scas
xor
xor
push
out
cltd
xor
cmp
nop
movl
lds
fisttps
adc
gs
xor
mov
or
sbb
int
lock
fnstcw
pop
icebp
inc
or
rcll
mov
insb
mov
lahf
push
fbstp
je
pop
dec
pop
jae
int3
sahf
mov
rep
ds
sbb
sub
loop
push
cld
pop
fbld
out
gs
pop
pop
icebp
insb
fwait
xor
inc
pop
xor
mov
cmp
jns
mov
in
mov
jbe
inc
repnz
and
shlb
cwtl
mov
in
loope
sbb
mov
scas
sub
out
xor
jp
pop
mov
mov
xchg
sub
push
inc
stc
and
repnz
xlat
jns
or
adc
push
sbb
arpl
pop
xchg
and
stc
or
adc
jns
adc
mov
jge
cs
adc
std
cmp
scas
vpmulhuw
xor
in
scas
cmpsl
adc
xchg
cmpsl
dec
pusha
xchg
decb
icebp
mov
loopne
pop
xor
xchg
mov
xlat
int3
fwait
or
pop
jge
push
mov
test
stc
lods
shl
xor
iret
sahf
dec
mov
insb
adc
mov
lods
aaa
fcoms
mov
call
shl
jno
roll
xchg
sub
jl
push
cmp
dec
adc
aam
addr16
pop
cmp
mov
mov
mov
je
xchg
loop
add
sbb
sub
xor
adc
mov
lcall
cltd
lret
adc
clc
movsb
arpl
add
inc
sub
in
in
imul
int
repz
loopne
outsb
outsb
cmpsb
inc
mov
or
jae,pn
dec
sub
push
dec
jno
sbb
cmc
out
cmpsb
and
stos
dec
inc
sub
addr16
pop
add
dec
iret
in
hlt
ds
ret
mov
mov
fdivrs
sbb
lcall
fnstenv
clc
add
push
repnz
or
popa
sub
dec
and
xor
xchg
out
inc
adc
and
dec
aad
adc
ljmp
out
sub
sbb
lret
mov
outsl
and
mov
cltd
leave
pushf
mov
cli
jp
fildll
std
les
nop
inc
dec
mov
pop
jns
add
or
cmpsb
jge
mov
push
data16
xchg
jnp
ja
mov
and
ja
fnstcw
xchg
in
cmp
inc
stos
lods
leave
in
adc
jae
mov
jmp
mov
xor
pop
nop
shl
lods
ja
push
inc
addr16
xchg
cmp
out
mov
movsb
in
push
jb
cmp
mov
inc
test
out
sub
fsubs
mov
inc
add
ds
rcl
pop
lahf
pusha
dec
jp
lods
or
popf
push
mov
lahf
adc
adc
lock
cli
mull
std
xchg
sub
add
mov
mov
popa
stos
inc
sub
lock
out
pop
jmp
inc
pop
cli
mov
dec
jecxz
push
and
fcoms
out
or
sub
ss
test
sahf
xchg
incl
cmc
cmc
fldpi
mov
push
jne
cmpsl
shrl
stos
mov
xchg
xchg
push
or
jns
inc
test
push
clc
pop
pop
sbb
pop
shrl
sub
pop
mov
cmp
out
pushf
repnz
out
sbb
adc
mov
push
adc
sahf
add
rclb
jl
xor
dec
xor
mov
sub
sbb
push
icebp
ficoml
xchg
fldenv
pop
rcrl
jno
ret
or
cmc
in
mov
enter
or
into
jg
test
push
cmp
add
shll
fadds
lods
lock
pop
pop
mov
das
sub
sub
pop
xor
dec
dec
or
insb
inc
mov
push
cmp
lea
mov
xchg
jne
xchg
cmovns
ficoml
xor
fistpll
mov
arpl
push
ss
mov
pop
mov
xchg
pop
cmp
xor
ret
push
out
es
push
inc
inc
push
xchg
hlt
pushf
fstpl
inc
pop
mov
insl
daa
xor
es
push
sbb
arpl
push
in
out
push
cmp
sub
sub
fs
pop
sarb
mov
push
xor
jo
cmp
ljmp
scas
js
iret
sahf
cmp
in
addb
popa
into
pushf
cmp
cmpsl
lret
or
adc
fs
subl
inc
sbb
dec
adc
mov
aam
or
jge
loop
cmp
pop
bound
jb
ds
jno
dec
arpl
inc
jno
into
pushf
mov
mov
or
jae
mov
cmp
push
adc
push
out
mov
push
cmp
lret
sub
dec
int
cld
pop
mov
cmp
movsl
adc
pop
mov
cmp
lret
je
rorl
insb
sbb
sahf
mov
addr16
mov
sub
and
adc
jge
loop
add
in
jb
cmp
sub
out
xor
jle
dec
addr16
mov
scas
test
sub
sbb
arpl
xor
jp
dec
cltd
push
ss
lds
sbb
add
pop
cmpsl
mov
xchg
push
out
sahf
xchg
into
call
xor
mull
push
loop
mov
shl
lret
gs
pop
xor
sub
hlt
pop
in
shlb
lock
mov
inc
adc
loopne
adc
push
and
and
mov
xchg
aas
jbe
div
shr
pop
mov
inc
arpl
sub
cwtl
mov
cmp
sub
inc
sub
pushf
xchg
fstpl
mov
rcrb
pop
jns
inc
fs
xor
adc
jo
sti
fstps
sub
les
arpl
movsb
out
fs
int3
ret
movsl
test
out
adc
ret
test
cmp
xchg
addl
stc
push
add
iret
in
bnd
rcll
adc
cmp
dec
leave
jae
outsl
push
xchg
xchg
out
fdivl
xchg
pop
xchg
inc
out
daa
in
push
stc
fbld
jno
dec
fidivl
push
imul
pop
cmpsb
mov
push
movsl
xchg
loopne
insl
cltd
add
and
sub
xchg
lods
add
pop
adc
cli
in
popa
xorb
lock
mov
jmp
loope
std
mov
jae
pop
lahf
popa
hlt
mov
iret
sub
jp
adc
sub
int
mov
pop
aam
and
aaa
push
push
nop
cltd
mov
push
sarb
and
movsl
or
imul
xchg
sub
dec
mov
xchg
mov
pop
in
flds
jle
cmp
xchg
and
subps
jnp
or
ss
inc
inc
pop
lods
clc
leave
inc
out
and
xor
adc
and
mov
lock
mov
dec
sbb
jp
jl
mov
popa
inc
out
aam
inc
or
lods
pop
iret
icebp
nop
mov
mov
adc
sbb
jg
sbb
je
mov
cmp
icebp
sub
pop
adc
or
mov
cmp
xchg
mov
xor
sub
lcall
or
pop
adc
mov
shlb
sahf
notb
les
adc
xchg
pop
push
mov
dec
fs
stc
movsb
lret
repz
les
adc
lcall
les
adc
xor
stos
lahf
push
dec
ja
jecxz
jnp
mov
mov
cmp
pop
mov
adc
pushf
das
xchg
test
pop
jmp
out
or
add
xchg
fidivs
shl
das
mov
add
ret
mov
dec
es
pushf
arpl
lods
lret
aaa
sbb
popa
inc
sti
loopne
mov
sar
stos
insl
lret
push
xchg
fdivrl
movsl
mov
test
leave
repnz
adc
daa
adc
js
adc
jge
adc
dec
lret
xchg
icebp
sub
fwait
xchg
mov
cwtl
adc
pop
nop
ja
cs
pop
inc
add
lods
repz
lcall
and
cmp
ja
push
jmp
out
cmpsl
xchg
icebp
popa
xchg
xor
and
sbb
mov
cmp
adcl
lods
sub
iret
sahf
xchg
jns
adc
pop
adc
arpl
arpl
sti
adc
icebp
adc
sbb
scas
dec
or
mov
outsl
fstpl
sbb
jno
adc
dec
pop
pop
xor
mov
xchg
int
inc
mov
xor
add
hlt
cld
jo
adc
subb
fincstp
js,pt
dec
pop
gs
mov
xchg
xor
je
mov
cmp
pop
in
mov
fsubrl
pop
or
xchg
xchg
xor
adc
in
jno
inc
imul
mov
nop
push
xor
adc
outsl
std
mov
cmp
mov
out
mov
push
push
push
lock
push
adc
dec
sub
jecxz
dec
cwtl
dec
push
addr16
subl
cmpl
inc
jge
cmc
cltd
nop
or
pushf
fdivl
cwtl
or
sbb
jmp
xchg
inc
dec
shl
cmp
adc
loopne
xor
xor
or
aad
add
adc
or
adc
or
xchg
adc
push
adc
or
data16
push
ret
push
shlb
pop
or
jne
cld
jo
adc
pusha
and
or
test
test
xlat
push
jae
inc
insl
cmc
pop
xlat
push
cld
cmpsl
xor
adc
adc
push
ss
or
aaa
and
es
inc
sti
add
xchg
lcall
dec
lods
sub
sub
xchg
xor
dec
test
sub
inc
push
shll
pop
sbb
sub
imul
pop
sub
adc
imul
jnp
fimull
mov
push
adc
xchg
arpl
add
and
dec
or
pop
and
mov
adc
or
sahf
in
or
jg
cld
jo
adc
nop
jae
xchg
popa
pop
sub
adc
out
and
sub
mov
xchg
jne
imul
add
in
out
sbb
xchg
sub
lahf
int
pop
inc
cmp
sub
lcall
mov
mov
push
mov
cmc
or
push
inc
mov
adc
inc
dec
inc
mov
cmpsb
jns
jle
stos
lret
fxtract
bound
cmp
in
xor
ror
xlat
mov
sbb
sub
icebp
push
cmp
cmp
xchg
jge
inc
inc
cmp
cli
mov
loop
ficomps
push
mov
movsb
dec
adc
jo
adc
inc
mov
scas
rcrl
sub
outsl
sti
das
dec
fwait
ss
imul
lret
lock
sbb
xchg
mov
cmp
daa
roll
cmp
mov
mov
lret
pop
or
xlat
hlt
xchg
loope
xchg
inc
repz
shrl
add
jo
ret
sbb
lahf
add
push
adc
in
rolb
xchg
mov
cmp
add
or
xor
aas
es
mov
inc
loop
sbb
or
cmp
sub
adc
imul
mov
jle
repnz
adc
inc
push
cmp
scas
aad
xor
xchg
bound
fwait
jg
mov
xchg
mov
push
xorl
cmpsl
int
sbb
jns
rorl
sub
mov
sub
dec
shll
jp
stos
int
sbb
adc
repz
inc
mov
into
pushf
cmp
jmp
sub
movsb
test
sbb
xor
push
jbe
xor
rcrl
lcall
jno
lret
or
sbb
xor
pop
push
jge
inc
outsl
inc
data16
jbe
pop
push
popf
cmp
cmpsl
movl
aad
push
mov
jo
ret
or
iret
sbb
mov
fwait
sbb
ja
lock
popf
fisubrl
mov
xchg
decb
mov
inc
mov
jns
sbbb
mov
pop
stos
rolb
push
inc
mov
lds
pop
cmp
cmpsl
and
xchg
sbb
addl
jecxz
pop
sub
pop
ret
xor
adc
pop
aas
fldt
jecxz
addl
scas
sbb
fsubrl
inc
ret
sar
mov
xor
scas
ss
lahf
jnp
ret
mov
daa
pop
adcl
adc
jle
adc
jae
mov
in
ret
xchg
cs
or
shll
fadds
pop
inc
in
or
cwtl
xlat
clc
dec
scas
std
iret
int3
and
out
mov
nop
pop
mov
repnz
mulb
mov
or
cltd
jle
pop
popf
mov
xchg
arpl
jne
inc
sbb
cmp
mov
add
inc
lret
pusha
lret
mov
push
stos
dec
cli
and
movsb
dec
inc
sbb
imul
dec
out
test
insb
or
mov
cmpsb
add
stc
and
movsb
or
rcr
pop
and
movsb
pop
inc
out
pushf
clc
repz
dec
cwtl
imul
shrl
mov
dec
popa
pop
add
lds
inc
and
lock
pop
outsb
imul
lret
fwait
subb
iret
adc
test
jmp
shr
mov
aam
pop
dec
gs
cmp
pop
pop
ret
fsts
cwtl
mov
sub
int
inc
lods
outsl
ret
jno
stos
adc
mov
fidivl
les
add
out
out
pop
test
jmp
dec
mov
iret
cmpsb
jl
or
icebp
in
pushf
push
xchg
adc
lret
mov
inc
and
adc
hlt
fsubrl
xchg
cmp
mov
sti
aas
push
test
cltd
pop
fwait
lret
outsl
mov
dec
jecxz
push
add
mov
adc
pusha
sub
push
cmp
mov
das
sub
and
xchg
flds
add
call
pop
aad
pop
push
shr
xorb
ss
test
mov
xchg
mov
sbb
mov
xor
or
xlat
mov
jo
push
ja
pop
es
shl
or
xor
hlt
and
xchg
mov
aas
arpl
and
adcl
and
pop
test
jp
jp
mov
mov
lods
aaa
jecxz
adc
je
shrl
test
arpl
xchg
or
mov
xlat
pusha
clc
adc
dec
dec
out
lds
inc
lock
cmp
pop
icebp
ret
xchg
scas
and
scas
mov
cmp
arpl
cmp
dec
ja
push
ss
mov
mov
gs
xor
xchg
xor
mov
inc
sti
lock
inc
xchg
lds
xor
dec
in
jo
daa
pop
jae
cmp
daa
pop
out
dec
clc
add
insb
xor
pushf
std
das
mov
stos
ret
xchg
push
cmp
inc
adc
xor
mov
sbbl
inc
mov
inc
xchg
mov
jmp
shll
xchg
stos
or
xor
popf
inc
sti
cmpsl
ret
xchg
js
xor
jbe
mov
out
lds
int3
sbb
addr16
loope
sbb
aad
jnp
or
xchg
aam
les
pop
jae
and
int
ret
jg
cmpsb
inc
mov
rol
loope
xchg
movsl
scas
jl
dec
mov
xchg
xor
mov
out
lret
mov
jbe
or
xor
mov
inc
or
aam
sbb
cmp
mov
movl
insl
push
sti
mov
mov
and
sbbl
mov
bswap
mov
and
jae
orl
insl
test
xchg
xor
daa
ljmp
out
repnz
ret
or
sub
pop
dec
jb
loope
sub
mov
and
aaa
popf
jge
mov
lds
or
mov
stos
jbe
dec
mov
or
mov
fiadds
and
mov
es
inc
and
or
mov
filds
fstpt
dec
pop
shrb
in
sub
dec
lcall
dec
adc
fiaddl
add
push
xchg
add
adc
adc
cmp
cmp
out
fistl
in
into
jo
jo
adc
xor
xor
roll
and
ljmp
xor
adc
inc
fnsave
jns
push
inc
add
aam
roll
xor
push
out
inc
sbb
mov
cmp
aaa
push
xor
inc
imul
xchg
call
or
cmpsl
push
shl
roll
and
sub
sub
xchg
pusha
or
pop
sbb
sub
xor
ss
mov
rcrl
mov
cvttps2pi
fwait
add
mulb
fcmovnb
loop
xor
pop
cmpb
jbe
test
iret
pop
cmc
loop
adc
fisttpl
outsl
push
push
add
andb
repnz
pushl
push
adc
xchg
adc
lock
rcrb
push
or
inc
stos
inc
mov
insl
stc
test
adc
cld
mov
sub
add
adc
aam
and
jmp
xor
adc
popa
lret
push
iret
clc
scas
xchg
pop
inc
mov
and
out
mov
cwtl
je
sbbb
or
cmc
mov
xchg
pop
mov
insb
mov
xchg
sbb
sbb
and
sub
push
dec
mov
clc
cmp
jae
mov
rcr
outsb
cmp
shl
lret
setl
add
adc
pop
fdivp
jae
jo
cld
jo
adc
lret
std
das
shl
mov
insb
mov
pop
pop
out
mov
xchg
cmp
xchg
jg
and
pop
mov
cli
fs
popa
lock
int3
daa
xor
adc
mov
lods
cmp
mov
ret
xchg
cmc
lcall
xchg
decl
mov
xlat
movsb
cld
jo
adc
cmp
test
icebp
sub
pop
popa
test
lea
shlb
pusha
cmp
xchg
hlt
pushf
mov
pop
mov
popf
aas
gs
xchg
cs
jp
cmp
push
adc
dec
imul
jae
inc
xchg
dec
clc
or
and
mull
mov
shl
sub
xchg
fcompl
add
pop
dec
gs
mov
rorl
fiaddl
xor
cli
xchg
jl
mov
gs
jl
insb
ret
xchg
sti
cmpsb
popf
push
push
cwtl
arpl
mov
inc
jb
cmp
sbb
sbb
jmp
push
cmp
insb
aas
xchg
mov
xor
pop
movsl
and
xchg
cmp
dec
mov
sub
pushf
cmp
add
jmp
sbb
test
lods
popa
testl
cmp
adc
pushf
xor
lret
lock
sub
cmp
mov
xchg
shl
das
jmp
ljmp
and
pop
dec
adc
jns
mov
imul
xor
mov
stc
or
jmp
push
aas
inc
xor
push
addb
mov
pop
push
jns
xchg
decb
loopne
std
lahf
lea
or
shrl
popf
aaa
dec
and
inc
adc
add
cwtl
outsb
xor
lds
adc
sar
adc
mov
sub
lea
gs
push
jl
pusha
sub
push
jns
inc
cmpl
idivb
pop
push
add
pop
push
add
gs
add
clc
push
add
ja
add
movsl
push
add
xchg
push
add
movsl
push
add
scas
push
add
clc
push
add
clc
push
add
gs
add
and
adc
push
add
call
push
add
in
push
add
in
push
add
gs
add
clc
push
add
add
push
add
clc
push
add
clc
push
add
in
sbb
out
sub
enter
in
shll
xchg
gs
pop
sbb
push
adc
dec
clc
jno
sub
and
lahf
and
mov
or
fsubs
adc
and
xchg
jge
push
inc
in
xchg
push
adc
js
movl
movsl
fmuls
std
pop
jecxz
push
dec
lods
cmp
fwait
xchg
cmc
pop
mov
movsb
cmp
je
in
pop
cmp
xchg
fnstenv
pop
mov
ljmp
arpl
push
out
and
sub
dec
add
imul
ja
outsb
faddl
lods
add
mov
fidivl
adc
inc
dec
and
sbb
xor
mov
or
out
out
shll
sbb
sub
inc
stos
imulb
push
gs
mov
add
and
push
into
jns
cmp
mov
sbb
daa
sahf
cmp
in
aam
enter
lret
jecxz
test
seto
in
aad
ja
xchg
repnz
or
and
mov
test
mov
push
das
aad
jnp
mov
xchg
loope
mov
xlat
inc
pop
pop
cmp
push
pop
xor
sub
mov
xchg
mov
rcrb
dec
or
push
mov
push
in
popf
arpl
movb
std
movsb
mov
fcoml
or
repz
xor
sbb
fs
xchg
cmp
xchg
xor
pop
mov
cmp
repnz
xor
or
movsl
mov
mov
adcl
push
notrack
xchg
jge
dec
xchg
test
out
adcb
adc
fs
adcl
pop
mov
cmp
repnz
movsl
dec
subl
jb
adc
adc
push
iret
popf
inc
repz
lret
pop
subl
sub
mov
xchg
mov
xchg
xchg
pop
adc
mov
pop
dec
mov
movsb
shll
push
test
xor
xlat
fdivrp
mov
pusha
adc
hlt
mov
adc
popf
shrb
mov
push
ja
sub
stc
repnz
aas
dec
ret
sbb
icebp
xor
or
xchg
add
shr
or
mov
pusha
adc
jmp
js
mov
push
cmp
inc
pop
data16
xchg
arpl
dec
mov
out
ljmp
inc
jnp
or
push
out
dec
push
ja
xchg
xchg
popf
shrl
gs
pop
scas
pop
daa
xor
lret
sti
pop
lret
xchg
movsb
pop
xor
or
push
adc
lock
test
arpl
or
bound
ljmp
xacquire
leave
orb
or
nop
jnp
daa
xchg
mull
jo
test
cmp
int3
inc
divl
imul
out
imul
push
xor
xchg
mov
popl
cltd
jle
or
and
pushf
push
push
adc
mov
push
inc
js
imul
insl
ljmp
cmp
cmp
arpl
shlb
dec
stos
xchg
sub
mov
pop
and
fidivs
pusha
inc
fwait
lods
xchg
cmp
sar
jae
or
sub
adc
nop
popf
sahf
cmpsl
pop
bound
add
or
scas
xchg
lcall
add
cmpl
adc
mov
add
sbb
xchg
and
lods
stos
jno
or
mov
pop
mov
insb
mov
into
clc
jae
cmpsl
lret
sub
xchg
fimuls
outsb
repz
dec
mov
mov
mov
aad
and
pop
repz
pop
icebp
pop
add
dec
pushf
test
jp
mov
cs
ja
xor
lret
adc
mov
scas
mov
push
sub
sbb
es
sarl
xchg
xorb
xchg
cwtl
iret
sub
mov
adc
out
rcrb
popa
scas
sub
cli
mull
popf
dec
or
mov
shl
cmp
addl
fsubp
loop
fsubrl
shl
and
fdivrl
sti
jle
or
mov
ds
cwtl
stos
les
and
push
fbstp
dec
das
push
add
cmp
fldenv
mov
ja
cmp
ss
lods
lds
call
mulb
imul
sbb
pop
mov
fnsave
in
test
mov
int
cmp
aaa
dec
ja
xchg
or
xor
cmp
jns
loope
lcall
cwtl
lds
out
pop
movsb
adc
cmp
dec
inc
push
gs
sbb
or
jmp
js
adc
pop
lds
stc
mov
cmp
cmp
xchg
mov
dec
push
in
dec
dec
icebp
imul
call
out
mov
push
popa
popf
push
xor
out
test
sbb
xor
push
xchg
inc
imul
lock
xchg
mov
icebp
inc
imul
cs
jge
adc
dec
ret
sbb
outsl
cmpsb
sahf
sbb
or
push
out
and
shrl
loope
mov
mov
aad
mov
fstpt
inc
sarb
add
mov
mov
inc
pop
xchg
lret
std
out
movsl
test
sahf
mov
or
es
and
mov
imul
and
sub
push
int3
xor
movsl
mov
inc
sbb
push
adc
rolb
sub
bnd
aad
dec
mov
and
add
xchg
icebp
pushf
or
mov
sbb
xlat
inc
pop
add
ret
in
push
cmc
and
jmp
nop
xchg
mov
imul
pop
pop
xor
xchg
pop
fstpt
jmp
dec
mov
icebp
fxch
enter
cmp
mov
stc
dec
dec
icebp
push
pop
xor
test
out
out
or
jae
inc
jo
sti
lods
lret
add
loope
stc
lods
shl
enter
pop
jns
out
and
adc
sub
push
fildll
popf
imull
inc
rorl
shl
divb
push
cwtl
mov
xchg
call
add
xchg
imul
cmp
add
inc
lahf
xor
lods
mov
and
xor
clc
mov
cmp
xchg
pop
rcll
mov
arpl
or
cmp
jo
cmc
push
push
fnstsw
fisttps
mov
lods
test
ret
cmp
test
lock
xlat
adc
or
ja
dec
add
dec
pop
test
dec
hlt
xchg
xchg
and
fidivs
push
push
and
rcrb
or
js
test
sbb
and
mov
pop
inc
leave
cwtl
dec
mov
dec
out
mov
daa
ss
mov
enter
pusha
out
stos
sbb
inc
adc
or
mov
shrl
imul
imul
int
and
xchg
loope
push
adc
push
xor
es
js
sub
outsb
or
sahf
rcll
pop
lock
rcll
mov
imul
movsb
push
pop
ret
mov
xchg
cmp
rol
pushf
jg
push
push
mov
mov
hlt
push
push
les
hlt
xchg
sbb
sub
sub
sbb
iret
sub
popa
icebp
aaa
inc
test
adc
and
sti
adc
test
cli
mov
push
imul
inc
cwtl
movsl
setae
jbe
xchg
cmp
cli
in
rcrl
movsl
popa
rcl
dec
adc
add
cmp
mov
dec
mov
pop
shll
pop
or
subb
test
pop
cld
mov
jg
gs
xchg
and
out
push
jge
or
add
mov
dec
call
lcall
add
shrl
inc
pop
outsl
call
fs
cmp
mov
cwtl
mov
daa
adcl
aad
inc
add
iret
add
push
insl
lret
leave
in
or
lahf
mov
jmp
js
adc
add
cmp
out
movsl
rorl
dec
mov
mov
jmp
js
adc
pop
lds
stc
mov
push
xlat
push
and
bound
jmp
loop
sahf
inc
ret
sbb
mov
ret
lods
pop
push
int3
xchg
insb
mov
jp
and
xchg
out
inc
fcmovnbe
pop
icebp
test
pop
iret
lock
adc
mov
insb
mov
cmc
cmpb
inc
lahf
cmpsl
adc
jle
push
fxch
adc
cmpsl
int
dec
iret
adc
mov
mov
nop
sbb
pop
cs
xchg
cmp
xchg
or
pushf
push
pop
lods
push
or
arpl
leave
add
cmpsb
int
outsl
out
ljmp
scas
push
and
out
pop
cmp
pop
dec
xor
adc
jp
shlb
sbb
or
cmp
mov
pusha
cmp
cmpsb
adcl
ret
xor
pop
pop
or
mov
pop
or
inc
push
jo
xor
into
pushf
cmp
dec
mov
int3
int
lock
pop
cs
lea
mov
mov
jle
in
xchg
mov
adc
dec
mov
mov
ret
loope
or
dec
mov
in
push
xor
repz
out
je
mov
mov
xor
jl
call
data16
pop
dec
adc
mov
icebp
outsb
and
mov
popf
xor
icebp
daa
aad
iret
cmpsl
arpl
push
adc
aaa
pop
xor
dec
iret
add
pop
cmp
js
mov
hlt
out
cmp
test
cmp
dec
mov
jbe
ljmp
lock
cmp
sub
lret
imul
insl
cmpl
cmc
adc
push
adc
call
xor
int3
sahf
sbb
nop
jmp
dec
jg
pop
push
cmp
cmp
scas
mov
add
jo
mov
xchg
push
adc
cmp
push
mov
push
cwtl
lret
ret
xchg
dec
jnp
add
dec
or
jne
push
adc
adc
jg
fstpt
sub
xchg
or
sub
sbb
and
mov
shll
sub
data16
cmp
pop
mov
rcpps
outsl
mov
dec
test
in
xchg
push
adc
jbe
lock
addr16
popf
xor
cmpsb
arpl
dec
sub
sub
cmpsl
push
mov
daa
or
mov
mov
push
adc
rcl
inc
pop
ss
in
and
mov
xchg
inc
ljmp
sbb
adc
test
movsb
insl
or
in
dec
lods
jne
in
int
je
inc
adc
stos
xchg
insb
in
xchg
push
adc
xlat
roll
sahf
fidivs
adc
stos
cmp
mov
loop
hlt
insl
xchg
or
or
fwait
cmp
jge
rcll
sbb
aaa
ja
add
cmp
ja
xchg
and
cli
push
int3
or
push
push
jnp
jmp
rclb
mov
sbb
pushf
add
mov
ljmp
jae
stos
inc
dec
inc
aad
jge
pop
and
xor
adc
cmpsw
pop
std
push
fs
xor
lret
jmp
push
adc
push
in
add
add
xchg
mov
xorl
test
cmp
pop
adc
jne
sub
push
adc
jmp
xchg
cs
jg
mov
ja
cmp
in
pop
fmuls
btc
lret
push
je
xor
iret
sbb
mov
clc
mov
cltd
lret
bnd
inc
popa
call
sbb
jmp
jbe
int3
jbe
mov
sarl
or
dec
pop
push
xor
adc
sub
outsl
cwtl
testl
or
xchg
cmp
nop
les
ljmp
xchg
lahf
pop
daa
cmp
into
call
xchg
test
aas
cmp
imul
inc
es
cli
cmpsb
lret
stc
jmp
lcall
cmp
ljmp
iret
push
adc
bnd
xchg
or
cmpsl
jg
sbb
fs
or
cmp
adcb
iret
ja
stc
mov
mov
in
pop
lock
push
push
and
xchg
xchg
test
in
subl
cmp
out
pushf
rol
loope
xchg
push
push
inc
mov
mov
jne
and
pop
push
dec
mov
sub
mov
rcrl
rol
sbb
adc
fs
pop
int3
jp
xchg
xchg
jb
push
push
mov
sbb
sbb
jae
xchg
outsb
test
cld
mov
fidivs
ret
adc
subl
fldl
lock
xlat
xchg
cld
xor
shl
or
jne
out
bound
cmp
insl
xchg
repz
mov
ja
nop
inc
arpl
cli
jne
mov
xor
repz
paddw
push
ficoms
imul
pop
and
or
test
cmp
or
jo
fs
mov
fimuls
orb
cmp
insl
jmp
xor
dec
cld
movsb
adc
lret
inc
push
push
jae
or
inc
and
push
lret
and
sti
pop
fsubr
imul
pusha
lcall
push
adc
pop
mov
fidivrs
loopne
shr
fisubl
xchg
push
adc
lock
out
push
cmp
rorb
mov
cmp
mov
pop
adc
loop
add
fidivrs
and
push
adc
xchg
out
rorb
add
jne
div
xor
repnz
jo
sarb
mov
inc
stos
lods
test
loopnew
lods
dec
insl
dec
xchg
push
dec
iret
sub
ss
popf
dec
cmp
xor
mov
inc
cmc
mov
aam
mov
push
mov
inc
dec
dec
in
negb
hlt
mov
mov
inc
loopne
dec
shl
in
test
push
mov
decb
xchg
cmpl
mov
loopne
sub
and
cmp
or
sub
inc
or
daa
push
xchg
scas
sub
add
adc
ljmp
xchg
pop
iret
sahf
cwtl
mov
outsb
rol
mov
jg
fdivrp
or
jp
clc
fidivrl
aad
lods
in
sub
lods
cli
push
jl
cmp
andl
out
cmp
add
cmp
mov
xor
push
adc
jbe
sti
mov
out
add
fsubrl
in
insb
pop
mov
push
je
mov
inc
wbinvd
mov
pop
adc
mov
andl
outsb
mov
ret
xor
out
cwtl
arpl
push
push
or
cmpsl
int
or
adc
xor
cld
imul
ss
or
inc
addr16
shl
int
xchg
jne
xchg
jns
or
movsl
sbb
jge
insb
lea
shrl
pop
mov
test
inc
push
jo
jnp
out
pop
aam
push
mov
icebp
push
pop
xor
stos
cmc
out
out
and
out
clc
xchg
ljmp
push
loop
push
lock
insl
scas
je
into
sahf
inc
inc
adc
inc
inc
loop
add
insb
and
mov
jmp
sub
add
inc
mov
lret
adc
loop
xlat
cld
arpl
or
add
loopne
mov
ljmp
dec
jns
or
xor
add
pop
sub
mov
sbb
xchg
nopl
inc
sarb
out
lret
jmp
mov
add
dec
clc
sub
mov
in
lret
adc
dec
movsl
sub
push
dec
repnz
xor
cmp
jae
mov
fistpll
mov
sbb
pushf
mov
adc
adc
mov
test
ds
dec
cltd
pop
mov
sub
test
xchg
mov
loopne
sub
jl
jne
clc
repz
xor
ds
mov
xor
jge
fstpl
lahf
cvtps2pd
stos
adc
xor
or
push
push
movsb
pushf
push
jo
ret
sbb
out
rolb
jmp
xor
add
or
push
ret
ds
adc
lock
cmpsl
xlat
dec
pop
jl
int
xchg
test
fcoms
jl
push
and
lods
leave
cs
xchg
jae
dec
les
xchg
jno
movsl
insb
mov
inc
fists
push
out
adc
or
out
mov
mov
pop
push
insb
inc
pop
imul
xor
dec
sarl
mov
jo
dec
mov
push
enter
pop
call
push
je
or
insb
outsb
xchg
cmpsl
fsub
push
out
mov
adc
sub
shr
test
je,pn
popa
call
mov
or
mov
mov
adc
or
imul
std
jp
push
and
fbld
stos
mov
and
clc
test
sbb
or
mov
fdivrl
add
je
cmpb
mov
dec
dec
fwait
adc
add
or
pop
mov
iret
and
jno
leave
in
and
inc
ss
fwait
xchg
mov
sub
sti
loop
jno
aaa
mov
stc
ret
aas
mov
out
push
and
cmp
aaa
sbb
dec
leave
xor
adc
out
sub
xchg
mov
cmpsb
icebp
push
mov
repz
mov
mov
sub
dec
lds
std
test
cs
sbb
popa
in
push
adc
jne
cli
and
fdivrs
insb
cmp
jmp
in
adc
sbb
cmp
inc
add
fists
movsl
and
fs
cld
push
push
arpl
cmpsl
mov
sbb
push
cli
and
dec
ret
clc
outsl
sbb
inc
imul
jno
adc
ret
pop
push
mov
push
mov
add
push
sbb
in
cmp
lea
shl
cmp
adc
jmp
in
mov
jo
pop
xchg
jae
ljmp
jg
aad
xchg
or
setp
jge
push
pop
movsl
inc
add
cmp
dec
or
scas
mov
lock
dec
into
pushf
cmp
cmpsl
cmp
mov
fadd
xchg
mov
jle
imul
lods
rcl
xor
xchg
stos
lret
mov
icebp
xchg
or
push
pusha
xor
jg
lods
inc
mov
adc
nop
ja
mov
out
leave
ljmp
lret
xchg
add
je
sbbl
xchg
mov
loopne
out
fdivl
out
xor
add
inc
mov
lods
cwtl
mov
aad
test
and
inc
call
xchg
jge
iret
sahf
mov
test
xor
or
or
arpl
stc
dec
insl
pushf
aam
pop
mov
mov
inc
push
in
xchg
cs
mov
cmp
push
adc
jne
jmp
and
dec
jecxz
out
jne
mov
and
push
cmp
imul
jmp
cmp
lods
jae
mov
xchg
ljmp
clc
sub
rcl
mov
jp
icebp
loop
pop
and
insb
int
imul
ficoml
imul
rcrl
jo
ret
or
int3
ror
pop
cs
pop
cmpsl
rorb
stos
mov
aas
ret
enter
push
bound
xor
mov
sbb
add
cmp
pop
shlb
add
dec
mov
ret
mov
jle
mov
js
adc
sub
sbb
popf
ret
in
int
dec
push
cmp
hlt
xchg
mov
int3
mov
push
mov
pop
out
push
pop
cmp
cmp
adc
jle
test
lea
icebp
jecxz
lea
movsl
rorl
call
pusha
sub
pop
loope
pop
xorb
inc
sbb
jge
jmp
xchg
xor
push
pop
mov
dec
js
mov
loop
mov
pop
insl
xchg
add
in
ret
fdivp
jb
lcall
pop
or
in
jle
mov
insl
fimull
push
clc
mov
jno
jmp
pop
movsl
sub
movsl
or
mov
inc
lret
and
lahf
mov
fiadds
xchg
daa
lds
movsl
in
xchg
js
jl
and
add
imul
pop
ss
sti
add
mov
xchg
pop
or
mov
push
sbb
jbe
cltd
faddl
lock
repnz
imul
ror
jecxz
nop
test
mov
and
push
lods
jbe
or
ja
dec
cmp
xchg
insb
in
jbe
ds
sbb
and
lret
sub
ljmp
fidivrl
jle
test
and
inc
add
or
shll
cmp
out
dec
sub
adcb
iret
sbb
or
std
push
into
jnp
mov
jl
dec
jmp
loopne
leave
lea
pusha
mov
mov
adc
pop
insl
mov
mov
rcrl
cmp
mov
push
inc
int
adc
push
mov
push
xchg
inc
aam
in
or
lock
lods
cmpl
lods
fnsetpm(287
iret
adcl
dec
pop
sub
jl
mov
push
adc
loope
mov
push
cld
jle
int3
mov
outsl
insb
popa
pop
adc
sbb
stos
dec
add
cmp
jne
lds
xor
xchg
mov
push
sbb
dec
xor
fdivrl
xchg
inc
mov
cmp
dec
pop
scas
fsubl
movsl
pop
sbb
test
mov
inc
fs
test
dec
mov
xor
adc
in
mov
imul
dec
loop
ja
pushf
mov
jge
popa
dec
jbe
nop
inc
mov
mov
push
mov
test
lds
cld
cs
push
jae
cmp
mov
in
lds
out
and
ret
xchg
inc
repz
rcrl
lock
rolb
jg
jmp
pop
aam
push
mov
icebp
push
pop
xor
frstor
lods
or
movsl
sub
dec
push
icebp
dec
dec
out
fidivl
push
gs
insb
adc
mov
push
fisubl
daa
shrl
inc
mov
push
mov
icebp
push
pop
mov
add
adc
jmp
mov
fnstenv
repz
xchg
insl
std
lea
sub
pusha
fwait
dec
insl
ret
lock
out
jne
loop
mov
sbbb
arpl
bound
lahf
or
stos
adc
mov
out
out
mov
mov
bound
or
mov
and
xchg
icebp
xor
or
insb
add
pop
cmp
enter
int3
fst
mov
fisttpl
icebp
xor
enter
xor
out
dec
stc
les
xchg
rolb
cmp
inc
push
cmp
sbb
inc
insl
and
fisubs
pop
jge
fstpl
add
test
cltd
cmp
pop
mov
jae
into
je
inc
jmp
scas
inc
mov
xor
or
xchg
fidivs
loop
mov
mov
add
cmc
popf
adcl
and
xor
adc
in
xchg
das
ficoms
cltd
lret
in
inc
cmp
pop
in
test
sub
jg
adc
mov
sahf
mov
xor
xchg
sub
mov
mov
sub
push
adc
stc
test
imul
rorl
adc
push
fs
pop
xchg
xor
mov
ja
mov
jnp
in
sahf
mov
ja
test
pop
pop
data16
jns
dec
sub
xor
data16
scas
in
lcall
or
ret
stos
mov
and
lcall
fsts
sti
jns
test
aad
jp
mov
dec
pop
hlt
mov
inc
xor
mov
adc
mov
xor
or
and
cmpsb
push
and
lcall
xchg
xchg
add
cmpsb
mov
insl
aas
imul
out
loopne
push
pop
inc
pushf
lods
push
xor
nop
xchg
dec
in
xchg
push
push
dec
out
xchg
inc
ss
outsl
outsb
mov
mov
imul
xchg
ds
push
dec
popf
in
daa
or
imul
jo
into
push
aas
mov
lock
xchg
mov
mov
js
mov
sahf
cmp
fmull
fisttps
lea
pushf
xchg
outsl
popa
dec
cwtl
add
sti
movsb
push
mov
jg
pop
addb
and
mov
jmp
nop
adc
inc
pop
xor
xor
aaa
mov
sahf
in
or
inc
jmp
aaa
mov
aas
ret
es
repz
and
push
add
leave
aad
ss
pop
adc
pop
adc
adc
sub
inc
push
push
or
icebp
and
and
int3
mov
jno
les
in
xchg
cwtl
mov
inc
out
jecxz
dec
sbb
jle
sbb
lock
pop
sti
mov
xchg
adc
xor
outsb
shrb
lcall
pop
push
pushf
cmp
mov
test
hlt
push
dec
mov
inc
dec
xchg
mov
das
sub
cmp
dec
pop
test
ljmp
pop
mov
cmp
out
fistl
xchg
les
and
mov
inc
mov
repz
popa
ret
xchg
testl
aaa
jmp
into
pushf
mov
imul
jmp
push
fdivl
add
gs
sub
and
cmp
ret
or
pop
adc
fsubrp
mov
mov
mov
mov
loopne
stos
int
in
push
call
xor
lahf
mov
lret
jmp
mov
add
imul
lcall
fisubs
iret
js
loope
xor
mov
pop
jae
out
and
leave
out
mov
rcrl
cli
add
loop
lods
adcl
sbb
fldenv
mov
xchg
imul
mov
dec
cmpb
movsb
inc
rorl
push
out
out
nop
pop
xor
mov
or
cmc
sbb
push
cs
sbb
xchg
sub
loopne
popf
inc
jo
mov
test
insb
add
ja
dec
mov
xchg
jbe
enter
mov
into
leave
mov
mov
aam
les
pop
jae
and
int
ret
jg
lods
inc
mov
rol
loope
xchg
movsl
scas
jl
dec
mov
xchg
xor
mov
out
lret
mov
jbe
or
xor
mov
inc
or
aam
sbb
cmp
mov
movl
insl
ss
mov
mov
and
sbbl
xchg
bswap
mov
and
jae
orl
insl
inc
fistl
add
ljmp
out
repnz
ret
add
sub
pop
dec
jb
loope
sub
iret
jne
mov
and
aaa
popf
jge
mov
lds
or
mov
stos
jbe
dec
mov
or
cltd
xor
adc
inc
out
jl
pop
lcall
pop
xchg
lret
adc
adc
sbb
inc
repz
jns
repz
stos
jns
sub
adc
inc
or
repnz
adc
movsb
jnp
clc
js
ss
stc
and
addr16
sbb
mov
aad
jmp
rcrl
int3
jne
mov
lret
insl
xor
aam
pop
sbb
stos
imul
or
push
andl
jne
or
shrl
cmp
mov
add
in
pop
xor
or
jmp
push
cli
fimull
lahf
ds
sahf
mov
and
lock
in
adc
call
sub
call
or
sub
lock
fiadds
cmpb
xchg
sbb
nop
sbb
ds
push
sar
pusha
rorb
sbb
addr16
rcr
cmp
loop
mov
push
and
sarl
test
insb
mov
adc
xor
mov
jmp
pop
imul
xchg
fcoms
cmpsl
fwait
cmpsl
insb
jns,pn
pop
jl
and
pop
iret
aam
test
pushf
jns
out
int3
dec
clc
or
xchg
sbb
dec
lret
out
enter
mov
scas
or
jge
fwait
out
pop
push
inc
or
mov
inc
add
xor
mov
push
adc
mov
xchg
and
push
adc
dec
push
inc
mov
sbb
xor
jmp
iret
push
cmp
push
xchg
loop
scas
aad
mov
adc
dec
sbb
sub
pushf
dec
jge
fisttpll
sbb
inc
popf
ret
sub
push
mov
sbb
sub
cmp
push
xchg
sbb
cmpsl
int
and
adc
or
ret
pop
push
jo
push
std
inc
xchg
xor
ret
xor
jmp
pop
ljmp
xchg
lods
pop
push
int3
jns
aas
lret
or
cmc
icebp
loop
xor
pop
jecxz
lea
or
jb
lret
sbb
pop
inc
add
inc
push
rolb
mov
divl
ja
xchg
std
lea
xor
jno
test
test
mov
adc
or
xor
mov
dec
in
jo
inc
fdiv
loop
ljmp
xchg
jge
add
and
enter
sub
loope
dec
int3
or
repnz
xlat
jns
or
adc
push
adc
arpl
pop
xchg
and
stc
or
adc
jns
adc
cld
stos
inc
mov
icebp
mov
inc
jbe
loop
cmp
adc
xchg
xlat
pop
dec
mov
movsl
xor
or
loop
and
push
dec
fstpt
in
repnz
xlat
iret
ja
stos
pusha
cmp
mov
shl
test
pop
push
push
add
cmp
jae
fildll
pop
and
jb
xchg
push
sti
jne
dec
lret
jecxz
or
push
sub
inc
in
fidivl
gs
and
cltd
inc
pop
pusha
dec
jge
jo
mov
adc
stos
mov
bound
pop
jnp
mov
nop
xlat
jns
orl
jp
ss
dec
add
outsb
out
enter
xchg
mov
es
jbe
push
out
sbbb
dec
stos
jmp
test
or
add
insl
or
xchg
outsl
js
popf
dec
subb
sbb
cltd
push
ret
mov
lret
pop
pop
xchg
pushf
arpl
add
repz
xchg
and
int
xchg
mov
jl
jge
xchg
sub
xor
sahf
pop
jge
iret
je
int3
sbb
adcl
or
lods
and
pop
ret
jbe
fwait
jne
push
xchg
outsl
add
fs
inc
push
cmpsl
sahf
push
xchg
push
jmp
cltd
negl
add
clc
or
stc
out
in
dec
xchg
dec
xchg
xor
mov
jg
and
cmp
pushw
sbb
fisttps
push
adc
sub
xlat
adcl
sub
mov
cmpsb
or
imul
add
jnp
xor
lcall
push
mov
negb
push
adc
mov
enter
mov
push
in
xlat
test
outsl
mov
push
es
push
cli
idiv
sti
test
arpl
mov
ds
jnp
jae
xchg
jmp
test
nop
xchg
ds
cmp
fcomps
sbb
aaa
addr16
rclb
sub
movsl
shll
xchg
dec
out
mov
pop
les
dec
in
nop
jmp
push
lcall
clc
test
and
shll
push
sbb
fdivrs
aam
xor
lahf
pop
clc
cmp
adc
adc
xchg
test
jl
push
cli
lea
adc
sub
lea
xchg
cs
iret
leave
aam
daa
lret
shl
insb
xor
das
xchg
xor
cld
pusha
push
outsl
sub
lds
mov
rep
cmp
inc
mov
loop
add
or
pop
pop
pop
xor
dec
insl
inc
shrl
mov
jae
into
arpl
push
mov
icebp
push
pop
mov
xchg
sub
sbb
pop
mov
mov
lret
add
or
xchg
adc
cmc
inc
xor
in
int
cwtl
out
aaa
js
xchg
jl
ret
xchg
stos
lds
mov
add
movsl
xchg
jg
sbb
mov
daa
push
mov
out
mov
sar
dec
pop
outsb
cmp
cmpsb
jp
xchg
ja
fwait
mov
out
es
push
inc
inc
add
insb
ljmp
jae
jge
or
lcall
es
inc
add
push
call
sbb
xchg
arpl
lret
dec
mov
xor
sub
cmpsl
lret
or
adc
push
mov
xchg
test
dec
lea
mov
movsb
pushf
push
jno
mov
jg
mov
pop
out
mov
xchg
cmp
xchg
jg
and
pop
mov
cli
jl
xchg
or
dec
imul
xchg
mov
mov
xchg
andb
mov
mov
in
dec
pop
out
inc
mov
push
arpl
aad
jne
mov
xchg
fldenv
loope
fadd
inc
out
inc
mov
jnp
dec
inc
arpl
cs
mov
pop
jae
call
jbe
pop
ss
sti
jmp
xor
mov
aas
shl
int3
out
mov
jmp
lcall
popf
ficompl
orb
cmp
nop
jne
inc
movsl
ljmp
repz
sarl
cltd
add
mov
enter
cltd
les
ficoml
int
test
or
mov
dec
xor
or
sarl
lahf
daa
fmulp
jbe
cmp
jmp
pop
adc
mov
ja
push
sahf
mov
aaa
xchg
nop
xor
dec
dec
dec
inc
sbb
jno
jmp
xchg
pop
enter
ja
arpl
dec
nop
js
add
cltd
ret
inc
push
and
push
ds
shrb
int3
lcall
add
scas
cmp
das
adcb
sub
fwait
in
mov
into
sbb
repz
xcrypt-ctr
cmpsl
fstl
loopne
pop
call
repz
pop
and
add
cmp
jge
leave
loope
test
test
int3
lods
and
rorl
in
xor
xor
lcall
sarb
xchg
xor
imul
mov
stos
jno
xchg
mov
jnp
mov
add
mov
lret
pop
xchg
pop
hlt
arpl
inc
pop
dec
test
xchg
mov
loope
out
fucomip
sbb
mov
or
add
icebp
xchg
andnps
aas
cmp
xor
cmp
rcrb
and
sti
cmpb
fisttps
mov
jns
scas
sbb
andb
cmp
ret
test
mov
out
jnp
fistpl
movsb
sub
std
enter
inc
push
or
push
pop
xchg
lods
test
lea
dec
hlt
mov
inc
imul
rolb
add
es
hlt
orb
fildll
push
inc
fwait
repnz
pop
pop
jo
in
push
loopne
mov
sub
out
inc
clc
xor
add
in
push
mov
ret
xchg
pop
out
mov
xchg
cmp
xchg
jg
and
mov
loope
or
dec
imul
jge
jle
dec
or
movsl
movsl
jg
sbb
jmp
iret
add
pop
icebp
in
adc
xor
mov
xchg
sub
xchg
add
pop
in
mov
inc
addr16
shll
fnstenv
fisubl
mov
stos
sbb
pop
jne
push
mov
xchg
xchg
jne
xchg
or
xor
movsl
push
xor
out
or
cmp
or
or
adc
cld
sbb
mov
dec
xor
adc
rcrb
out
lret
pushf
lret
or
dec
mov
sbb
xchg
cmpsb
jae
mov
aas
xchg
fsts
mov
mov
xor
jne
mov
mov
call
fidivl
xchg
roll
push
jecxz
push
jg
xchg
or
pop
jnp
mov
or
shrl
popf
imul
data16
or
cmc
scas
sbb
xchg
fidivs
shlb
jmp
js
sbb
pop
movsb
stos
scas
movsl
in
iret
sahf
dec
ret
add
xor
lret
xchg
movsl
sbb
outsb
sti
xchg
iret
mov
scas
adc
cmp
int3
inc
imul
cs
mov
rol
loope
xchg
xchg
stos
lds
xor
or
out
loope
into
ja
cmp
mov
in
js
adc
dec
lret
mov
xor
test
mov
sub
icebp
dec
repnz
cmc
stc
lods
pop
das
sub
popf
lcall
inc
fwait
xor
push
icebp
inc
fsubrs
cli
test
push
jbe
cmp
bound
mov
and
jl
lcall
mov
sub
lahf
lds
popf
sbb
xor
adc
in
and
xor
ret
mov
ficoml
sbb
test
xchg
inc
pop
lret
fisttps
xchg
jne
add
popf
jno
push
cmp
pop
test
hlt
rorl
jns
and
xchg
jecxz
call
ret
dec
test
mov
xchg
std
pusha
inc
aad
ret
add
mov
jb
ljmp
or
add
jmp
ret
mov
fists
adc
mov
dec
rolb
shl
pop
addr16
ret
push
xorl
mov
sbb
mov
push
jg
jecxz
xor
cwtl
movsb
sbb
dec
rcrb
repnz
mov
test
stos
mov
outsb
ror
xor
xchg
pop
jg
dec
stc
popf
and
pop
imul
mov
loop
je
xor
lahf
jl
cwtl
insb
inc
rcr
or
pop
jne
enter
inc
ret
jecxz
pop
cmp
push
dec
jp
push
shll
fidivrl
mov
sbb
fdivs
mov
sub
or
jecxz
test
pop
test
arpl
adcl
in
pop
leave
popa
clc
sbb
fstpt
lock
dec
loopne
mov
aam
int
push
inc
jne
pop
mov
or
nop
imul
xchg
cmp
jb
and
xchg
es
insb
sub
jmp
xor
fimuls
pop
pmuludq
pushf
repz
push
rorb
int
test
xchg
popa
push
mov
cmp
pop
inc
cwtl
repnz
push
fidivrs
repz
out
mov
xorl
inc
andb
aaa
mov
sbb
or
call
push
xchg
je
fwait
push
xchg
xor
mov
lcall
push
mov
xchg
jne
xchg
jns
adc
addb
stos
pusha
cmp
mov
ret
mov
add
mov
ret
in
or
xchg
mov
adc
mov
cmp
push
mov
gs
dec
sbb
pop
xor
std
loopne
mov
arpl
rorb
sbb
pop
lret
outsb
inc
out
int
inc
shll
mov
clc
mov
jmp
lds
mov
mov
xchg
stc
enter
stc
and
mov
pop
out
out
mov
pop
push
jge
sbb
dec
xorl
movsb
rorl
xor
xor
jg
ret
xchg
orb
out
imul
and
mov
fxch
and
inc
dec
loope
pushf
jno
pop
mov
ret
mov
rorl
shll
orl
pop
cmp
sub
mov
xlat
jl
insb
ret
xchg
sti
cmpsl
iret
xchg
xchg
mov
push
adc
mov
dec
insb
and
push
sub
lock
rolb
addr16
int3
lahf
outsb
mov
xchg
imul
jae
and
mov
rep
ds
sbb
int3
das
push
fldcw
aaa
je
shll
popa
cmp
loopne
add
enter
mov
cwtl
jae
xor
adc
jge
inc
mov
or
lock
or
clc
push
inc
std
mov
adc
pop
adc
xor
jns
int3
fwait
or
jb
xchg
cmp
fbstp
insb
mov
mov
flds
adc
ljmp
decb
movsl
aas
dec
les
adc
inc
jle
fmuls
pop
adc
pop
insb
loop
sahf
rcrb
mov
mov
add
fsubs
lret
xchg
lcall
xor
push
sub
loope
add
push
cmp
or
fnsave
pop
inc
dec
jbe
mov
int
rcll
fcoml
jg
lods
mov
mov
adc
mov
sub
je
pop
adc
mov
int3
in
in
cs
sbb
stos
test
lock
xor
mov
fwait
repnz
pop
xchg
adc
mov
xchg
pop
scas
out
popa
dec
pop
or
sbb
add
adc
sbb
in
test
mov
dec
in
mov
shrl
mov
cmp
add
call
inc
outsl
cmp
sti
jmp
shr
inc
xchg
pop
lret
sub
xor
andps
mov
inc
ss
dec
push
mov
ss
cmp
sub
pop
rcr
xchg
mov
int
cmp
inc
push
or
js
adc
adc
mov
push
cmpsl
sti
pusha
hlt
and
mov
adc
adc
mov
test
subb
cmp
test
sub
mov
int3
xor
lods
push
lret
fmul
sahf
in
pushf
cmp
inc
aad
inc
push
xchg
adc
dec
ljmp
lret
inc
and
rcr
ret
push
std
xchg
pop
or
xchg
jo
adc
pop
push
xchg
mov
or
pushf
out
repnz
pcmpgtd
dec
psraw
arpl
xor
and
xchg
push
mov
mov
addr16
mov
cmp
dec
sbb
jns
or
mov
push
sub
xchg
xchg
cs
fidivs
shrb
int
inc
pop
push
bound
push
cmp
enter
add
mov
cmp
repz
hlt
and
xchg
rorl
jae
adc
clc
or
arpl
je
push
add
iret
sahf
dec
add
out
lcall
sbb
cmp
or
rcrb
cs
into
leave
fwait
mov
out
lcall
daa
mov
push
push
popf
inc
imul
movsl
pushf
mov
adc
cld
jo
adc
stos
adc
sbb
cmp
sbb
push
adc
fiadds
lock
xchg
push
cwtl
lret
cwtl
cmp
dec
jo
shll
jecxz
out
sahf
ret
inc
or
stos
and
sbb
aas
and
pop
imul
or
jg
cs
mov
push
inc
dec
jp
shl
push
das
pop
lds
cmp
popa
ret
test
mov
mov
inc
cmc
push
test
je
ror
inc
fsubl
lret
pop
aas
aaa
lret
xchg
aaa
add
push
adc
movb
pushf
cltd
push
mov
ret
xchg
adc
js
jae
iret
test
je
and
adc
add
dec
mov
add
xor
mov
xor
clc
add
dec
xchg
pop
or
sbb
sub
sbb
in
dec
out
shll
arpl
fs
push
imul
jne
popf
lock
mov
xor
shll
arpl
loope
outsl
je
das
pop
cmp
into
lahf
ja
repnz
mov
sub
xor
xchg
xor
repnz
add
push
mov
ret
add
mov
shll
iret
adcl
orb
jecxz
lea
sbb
pop
adc
push
adc
cmc
mov
xabort
test
push
or
push
lds
adc
pop
fldenv
mov
pop
lds
adc
pop
jle
sbb
fisttps
lds
adc
jge
insl
xlat
cltd
jno
out
pusha
lds
adc
repnz
mov
test
shl
xchg
pop
stos
pop
sbb
xor
cmp
push
inc
push
add
movsl
lods
test
or
shlb
hlt
xlat
repnz
ja
into
pop
sbb
or
and
adc
inc
dec
pop
cmp
mov
adc
mov
push
mov
push
sbb
inc
sar
lea
nop
daa
mov
or
in
and
or
outsl
loope
insb
mov
mov
mov
pop
sbb
call
jl
ret
lods
cmc
dec
xchg
xchg
lock
or
xchg
sbb
jge
sub
mov
insb
sub
or
iret
out
add
adc
push
or
xor
and
xor
stc
add
pop
adc
xor
daa
mov
or
sbb
push
rclb
fadds
add
pop
adc
mov
rcrl
adc
push
or
mov
jmp
in
sub
mov
jge
sti
push
pop
push
jg
ss
roll
pop
adc
mov
or
mov
ss
lods
mov
mov
dec
fsts
repz
jmp
cmp
movb
test
cwtl
jle
push
stc
rcll
mov
stos
es
arpl
clc
mov
les
cli
mov
pop
mov
insb
or
lea
mov
xor
xrelease
mulb
test
inc
sbb
jns
sbb
sahf
pop
repz
cltd
adc
stc
insl
lods
pop
mov
cmp
repz
stc
xor
inc
sbb
add
test
nop
mov
push
out
or
inc
or
sbb
jmp
jb
into
arpl
out
mov
pop
pop
sahf
add
adc
pop
lcall
or
jg
cmp
adc
cmp
or
pop
sbb
iret
sahf
notb
adc
push
pop
or
jmp
cmp
adc
adc
pop
sahf
cmp
mov
inc
xchg
rcrb
adc
shrb
fisttpll
arpl
dec
xchg
inc
out
ljmp
inc
xchg
outsb
sarl
cmp
adc
cmpsl
pop
in
pop
or
iret
mov
or
lcall
push
xor
cmc
lods
cmp
icebp
dec
cld
xor
pop
push
sbb
push
adc
jno
bound
xor
xchg
xor
cmc
sub
mov
cmp
push
adc
dec
pop
or
push
mov
pushf
mov
adc
cmp
out
stos
fs
test
ret
fsts
sti
cmpsb
jae
xor
pop
lahf
cmp
or
fwait
lock
fimull
add
or
lret
xchg
cs
lahf
lea
dec
xor
lds
mov
pop
xor
xchg
adc
fwait
xor
out
shl
ja
or
add
cmp
or
xor
add
int3
add
insb
fdivp
cmp
loope
dec
pop
dec
push
mov
shl
out
xchg
xchg
cmpsb
fcomp
lea
xor
mov
cmp
adc
and
int
aam
je
adc
or
sbb
lds
in
popa
or
repz
push
sub
or
fdiv
xchg
rol
pop
dec
mov
cmpsl
ss
mov
xchg
imul
sub
je
mov
sarl
xchg
icebp
arpl
or
xchg
sarl
into
loop
mov
mov
adc
sti
negl
sahf
or
push
and
js
arpl
xlat
jge
adc
flds
adc
cmp
mov
adc
pop
adc
mov
add
rclb
jnp
push
in
fdivr
pop
adc
and
repz
and
pop
or
mov
inc
cmpsl
hlt
inc
sbb
stos
out
sbb
pop
jp
call
in
shrb
mov
pop
push
mov
push
mov
adc
dec
add
adc
inc
insb
cmp
aam
dec
push
xchg
jae
flds
adc
cmp
xor
sbb
lock
insb
pop
je
std
or
jbe
arpl
mov
add
ds
xor
lds
inc
nop
sbb
push
ds
push
xchg
sbb
mov
push
pop
jno
jb
xchg
out
jbe
mov
jnp
adc
jo
fyl2x
sub
icebp
mov
subl
sub
adc
jnp
sti
mov
or
push
dec
out
flds
adc
and
repz
mov
test
popa
faddl
sub
mov
mov
or
mov
mov
shll
jmp
pop
out
xchg
sbb
push
adc
aam
pop
xor
scas
repz
or
faddl
nop
dec
fiadds
dec
sub
mov
adc
mov
scas
push
mov
cwtl
mov
jle
popf
inc
out
sbb
inc
or
sbb
aad
iret
call
int
fcoms
pusha
inc
mov
into
and
mov
adc
mov
cs
mov
or
lret
pop
into
arpl
xchg
mov
adc
test
pop
mov
cmp
repz
mov
sti
lock
lcall
cmp
mov
sbb
xor
adc
xor
movsl
push
xor
mov
arpl
and
cmp
lahf
mov
xchg
jns
out
add
adc
inc
mov
xor
js
cld
jo
adc
sub
mov
repz
jle
xor
movsl
fyl2xp1
mov
xor
clc
mov
aas
cmpl
jl
cs
pop
popf
je
cmp
push
into
lcall
mov
int
fs
js
loop
das
push
cs
decb
or
xor
mov
or
les
ret
xchg
sti
mov
pop
and
iret
mov
jns
out
fadds
jl
add
inc
out
loop
and
push
das
inc
mov
shll
ret
xchg
ljmp
jmp
out
rcrb
adc
inc
push
sbb
testb
push
or
jp
iret
xlat
mov
sahf
arpl
mov
testl
adc
pop
popf
fs
cmp
fnstsw
pop
dec
repz
pushf
cmp
rorl
jge
mov
call
iret
outsb
inc
adc
add
test
mov
cmp
ds
lock
jns
push
or
les
int
mov
aad
jnp
inc
enter
dec
iret
add
pop
int3
sbb
lahf
cmp
flds
fcomps
pop
pop
cmp
mov
sub
rcll
adc
iret
cwtl
cltd
push
jecxz
cs
sbb
popa
rolb
cltd
mov
ljmp
stos
dec
sbb
sbb
jmp
lds
push
sbb
jo
pop
insl
leave
or
cmp
fldl
pusha
fcomp
mov
jns
in
mov
add
mov
stos
pop
inc
sub
pop
lock
xchg
mov
and
in
in
rcll
cli
sbb
shrb
sub
adc
lea
push
ret
add
aad
in
push
xchg
xor
add
push
or
add
lods
xchg
enter
jg
insl
push
pop
adc
push
ja
dec
dec
and
mov
adc
adc
roll
and
fisttps
loope
fistpll
xor
in
and
in
mov
inc
mov
push
or
cmp
push
mov
sub
outsb
mov
mov
arpl
mov
pop
or
pop
inc
pop
or
ss
inc
pop
or
mov
mov
pop
or
addr16
leave
pop
add
add
inc
pop
or
cmpsb
inc
lret
or
jp
inc
pop
jb
imulb
adc
sbbl
mov
nop
mov
add
mov
loopne
ficoms
adc
and
je
test
push
adc
roll
aam
add
mov
inc
sbb
mov
jg
or
mov
lahf
in
jge
les
or
jle
lods
ret
out
sub
xchg
mov
or
out
cmp
inc
aam
ret
es
sub
xlat
out
aas
hlt
pop
aad
jecxz
ret
cli
inc
in
rcll
shl
jecxz
mov
testl
sbb
test
fmuls
imul
cli
fnstsw
lret
push
cmp
inc
push
mov
and
pop
cld
jo
adc
clc
dec
sbb
hlt
push
sbb
push
int3
flds
adc
jo
jno
adc
or
mov
shrb
pop
mov
push
xchg
mov
mov
pop
adc
loop
dec
pop
cs
orl
mov
sbb
lea
mov
mov
or
pop
loop
lods
jae
adc
stos
lods
xchg
push
adc
mov
cmp
sahf
add
dec
pop
xlat
fsubrs
jns
xchg
cmp
mov
decl
flds
adc
cld
jo
adc
out
xchg
jne
lret
xchg
movsl
lahf
xor
adc
ret
xchg
inc
mov
test
ds
xor
mov
push
popf
cmp
mov
enter
adc
xchg
jmp
jl
in
push
repz
cltd
jo
pop
adc
pop
sbb
and
mov
xor
xchg
xchg
inc
insl
dec
popa
and
or
aam
flds
adc
popa
add
adc
push
mov
out
xor
mov
dec
int3
push
xchg
ds
pop
adc
loop
mov
flds
adc
daa
cld
jo
adc
les
mov
faddl
adc
call
xchg
xor
std
pop
sbb
out
int
rorl
negl
dec
push
jne
rcrl
je
adc
jno
call
inc
sbb
or
sbb
cmp
sbb
xchg
cmc
pusha
jo
pop
adc
daa
out
ja
mov
dec
xchg
sbb
sub
sbb
test
pop
jo
js
adc
lods
push
je
adc
dec
cmp
subl
in
pushf
test
aaa
and
mov
mov
cmp
inc
clc
add
dec
jp
shlb
pop
adc
pop
icebp
loop
xchg
sub
and
lret
and
cmp
inc
mov
push
push
lret
dec
pop
cmp
in
pop
adc
jmp
mov
xor
loop
into
clc
add
adc
loopne
pop
adc
pop
sub
or
cld
sahf
loopne
jae
adc
cltd
sbb
and
pushl
pop
adc
and
xchg
int3
out
mov
push
ret
dec
add
adc
mov
repnz
push
mov
xchg
jg
loope
repnz
adc
adcb
cmp
cmp
mov
push
jns
xchg
push
adc
pop
adc
add
push
bound
push
sbb
cmc
in
divb
push
cmpsb
and
flds
adc
xor
and
cmp
divps
adc
pop
sbb
inc
sbb
inc
popa
aad
mov
out
mov
jne
xchg
jbe
sbb
inc
fcoms
mov
inc
push
inc
insb
pop
adc
lock
xchg
inc
inc
push
aad
adc
into
mov
push
fs
popa
ret
in
jns
jae
xchg
or
jbe
lock
xchg
stos
pusha
hlt
sbb
cmp
aad
jne
shr
es
pop
adc
popa
stos
aas
arpl
mov
xchg
push
adc
inc
dec
mov
aaa
fldenv
je
aas
stos
js
rolb
mov
push
jne
xor
std
pop
adc
mov
cli
mov
ret
es
or
jne
dec
jg
sbb
xchg
dec
mov
xor
mov
pop
je
mov
mov
sahf
and
pop
adc
mov
jl
and
cmp
adc
jo
sbb
cwtl
mov
add
sti
jge
push
das
pop
mov
cmpl
mov
flds
adc
loopne
push
dec
or
jecxz
mov
out
xor
in
gs
sbb
arpl
mov
cmp
test
cwtl
cmp
jns
adc
mov
fwait
gs
push
adc
std
or
orl
mov
cltd
mov
faddl
adc
jo
sub
pop
cs
xor
rorb
mov
mov
arpl
and
lock
mov
sub
iret
sahf
cli
cmp
lcall
call
loope
or
lds
fs
sahf
cmp
icebp
int
xor
inc
mov
or
stc
xchg
aas
js
add
adc
dec
mov
jne
ret
repz
aaa
jo
pop
adc
jae
and
cmp
clc
call
sbb
sarb
inc
adc
mov
mov
mov
pop
mov
fs
pop
adc
xor
xchg
call
xchg
iret
fwait
push
les
sbb
or
xor
stos
or
mov
mov
ret
dec
pop
or
cs
jo
adc
mov
lcall
bound
add
loope
add
pop
stos
push
jae
cmp
inc
out
repnz
out
imul
jns
loope
xchg
push
mov
dec
push
jno
iret
adc
call
inc
mov
xor
scas
pop
loop
ljmp
pop
mov
cmp
add
push
movsb
fcomp
mov
xor
out
and
adc
xchg
add
iret
cwtl
dec
fcom
mov
adc
lea
sub
gs
ljmp
mov
filds
jno
adc
orl
cltd
test
test
or
jo,pt
pop
adc
jp
sub
mov
clc
shll
insb
lret
or
int3
rcrb
adc
mov
in
test
mov
loop
mov
adc
mov
add
insb
movsb
and
test
or
xchg
pop
mov
pop
fadd
and
inc
shr
ss
pop
push
xor
add
xchg
call
inc
push
mov
cld
pusha
dec
fists
xchg
popf
mov
or
push
mov
and
rcrb
rclb
cltd
add
push
sbb
ja
sub
cmpsl
mov
into
aad
decl
dec
jmp
dec
roll
add
cs
and
adc
negl
push
xor
sbb
push
pusha
pop
lcall
mov
adc
mov
xchg
sub
rcll
mov
pop
jne
lret
pop
cmc
mov
add
stos
stc
outsb
int
test
adc
adc
int3
std
cmp
or
nop
inc
add
or
aam
outsb
fildl
insb
lds
adc
repnz
pop
adc
mov
pop
roll
or
sbb
xchg
inc
pop
or
adc
aad
fnstcw
jae
repz
xchg
push
xor
adc
cmp
or
fadds
sbb
sub
es
dec
inc
pop
or
lock
inc
pop
or
aam
imul
lods
mov
and
pushf
or
call
or
je
sub
addr16
push
or
inc
nop
sub
fnstsw
cmpsw
jbe
das
clc
jae
mov
js
and
or
xchg
lret
xchg
push
adc
add
scas
xor
into
sahf
test
fwait
xor
jle
cmp
sbb
arpl
shlb
push
cmc
into
enter
addb
repz
mov
test
fs
sub
movsb
pop
hlt
or
mov
xor
mov
fldt
mov
mov
jo
adc
fs
cmp
cmp
sbb
xchg
cmc
pusha
jo
pop
adc
es
ja
sti
cmpsl
jns
loop
hlt
shll
popa
dec
add
int
inc
fcmovu
cmp
jle
into
pushf
cmp
lods
das
outsl
mov
clc
dec
adc
fstps
lds
fists
mov
lret
mov
pusha
mov
ja
jecxz
jl
push
adc
mov
sbb
mov
int3
mov
push
sub
mov
pop
adc
pop
xorb
ret
mov
jg
aam
jae
mov
xchg
push
cmc
push
fs
fcomps
mov
addr16
push
ljmp
push
push
xchg
jge
add
and
sbbb
insb
dec
cwtl
xchg
pop
sti
loop
aad
cwtl
jmp
cmpsb
mov
popa
mov
sub
or
xor
ret
sbb
pop
xor
add
insl
sti
mov
or
adc
pop
pop
adc
and
fs
lahf
movsl
adc
pushf
mov
push
and
add
jge
mov
out
out
lea
insb
mov
pop
sbb
roll
xlat
fdivs
jp
repz
mov
sub
dec
mov
dec
dec
out
orl
pop
gs
dec
rorl
jae
or
jnp
xor
xor
cmp
into
loop
clc
scas
xlat
sub
data16
add
iret
cwtl
inc
shrb
aad
jne
subl
dec
pop
addr16
mov
add
xor
movl
adc
cmc
or
or
lahf
lock
rcrl
pop
adc
in
jb
xor
pop
outsl
arpl
xchg
dec
add
adc
xor
imulb
or
inc
das
cmc
fmull
fninit
lock
stos
clc
insb
inc
mov
lcall
push
ret
sbb
ffree
loopne
xor
pop
repnz
cmp
js
adc
and
adc
mov
clc
loopne
push
push
jno
xchg
push
mov
or
adc
adc
cs
aam
sbb
push
add
pop
mov
jb
dec
aas
mov
inc
jecxz
data16
fwait
dec
push
leave
loopne
fwait
idivb
adc
xor
cmpsb
cs
adc
jl
sbb
push
fwait
dec
rolb
fwait
in
dec
xchg
and
jb
mov
cld
std
mov
lcall
sti
xor
or
cli
xchg
dec
psllw
call
rorl
inc
insl
mov
xor
imul
dec
fisubs
sub
movsl
ss
js
lock
aam
divb
imul
idivb
pusha
or
cwtl
dec
sbb
in
xor
and
xchg
shrb
sbb
imul
inc
add
push
cmp
sbbl
sbb
mov
add
out
test
or
outsb
mul
sarb
pushf
fistps
push
mov
xor
add
test
pop
cmp
and
fstpt
and
icebp
cld
or
inc
cwtl
outsb
dec
push
inc
push
mov
jp
cmp
addr16
dec
xor
jno
aaa
jns
daa
pop
mov
adc
push
adc
inc
adc
inc
mov
ret
out
or
je
push
sti
mov
out
popa
ret
xchg
pop
pop
lretw
push
stos
xor
mov
dec
pop
sub
fs
jno
loop
stc
insl
sbb
jae
pusha
cmpsb
inc
ljmp
cs
stc
in
lds
or
loop
mov
or
out
or
rorl
mov
popf
pushf
cmp
nop
je
cs
pop
inc
fs
icebp
or
add
bound
push
out
inc
or
sbb
xchg
add
or
sahf
add
adc
dec
push
fsubs
xchg
xchg
flds
adc
cmc
mov
pop
mov
popa
ret
outsb
inc
cmpsl
int
inc
xchg
adc
adc
and
icebp
loop
jmp
cmp
jae
mov
rcr
sub
pop
testl
pop
or
rcrb
xchg
mov
xor
stos
and
popf
adc
mov
dec
out
fwait
mov
cs
add
or
sahf
cld
jo
adc
add
jg
pop
cmp
nop
mov
je
pop
out
mov
mov
rolb
xchg
cs
ljmp
push
adc
call
out
adc
pop
adc
iret
push
sub
mov
push
adc
add
je
cmp
jg
repz
sub
lods
pop
sub
sti
sub
and
pop
out
mov
mov
les
xor
es
je
into
adc
push
outsl
fcoms
mov
dec
or
out
push
stc
inc
js
mov
pop
xchg
das
pop
mov
mov
or
lock
mov
jno
xchg
or
cltd
cmp
cli
and
sarl
cmpsb
jmp
aad
sub
notb
ja
sahf
jp
fsubl
jae
adc
jb
cld
out
cmp
rolb
add
test
push
adc
fsubrs
push
scas
or
push
inc
pusha
cs
jbe
mov
mov
and
jnp
sti
outsl
xchg
or
jno
movsl
jne
xchg
sbb
clc
xor
mov
xor
or
xchg
add
adc
sub
aam
insb
pop
bnd
pop
or
popf
int3
popf
xchg
arpl
lcall
or
movsl
or
inc
push
jno
and
fildll
mov
lret
add
mov
in
pop
xchg
jae
push
adc
add
lea
das
jnp
push
mov
dec
and
jmp
push
adc
sub
push
adc
pop
push
aam
cltd
imul
cmpsb
jae
fsubl
mov
sbb
enter
std
cmc
dec
pop
jbe
sbb
mov
fwait
mov
lods
mov
rcrb
add
push
ret
in
in
or
mov
cli
jns
cwtl
mov
adc
in
cmc
in
fadds
sahf
cmp
addr16
rclb
arpl
loopne
andb
lea
push
pop
push
nop
or
add
daa
push
subb
ds
std
and
jae
xchg
push
rcrb
minps
or
inc
sahf
in
jne
pushf
nop
mov
imul
test
adc
cmpb
cmp
sti
xchg
or
push
add
xchg
bound
ja
aam
pop
sbb
cmp
jg
mov
adc
push
adc
arpl
fadds
cld
scas
cmp
dec
shrb
push
and
sbb
xchg
mov
call
js
inc
jg
pop
push
bnd
iret
xor
inc
mov
int
xchg
btr
dec
loope
pushf
jnp
pop
mov
adc
pop
dec
bound
pop
cmpsl
stc
or
enter
out
mov
dec
dec
pop
int3
push
iret
inc
out
out
add
mov
arpl
push
pop
jno
loop
mov
mov
popa
ret
xchg
lea
shll
sbb
enter
pop
les
push
adc
mov
roll
xchg
movsl
sarl
sbb
cmpsl
repz
sub
jecxz
ljmp
pop
int3
addr16
xchg
bound
add
add
sti
sti
push
imul
or
or
mull
orl
lcall
cltd
cmpsb
inc
or
adc
push
fidivrl
fistps
xor
push
mov
inc
jno
test
movsl
rclb
cmp
sbbl
pop
add
ljmp
xor
jecxz
mov
inc
sarb
movsb
aas
mov
push
imul
add
imul
push
adc
add
or
pop
mov
mov
stos
add
pusha
and
mov
inc
dec
mov
das
add
sbbb
inc
fs
xlat
sahf
cmp
or
mov
dec
adc
jo
rorl
sbb
mov
xchg
cmp
xor
push
xchg
clc
adc
pop
nop
mov
push
cs
scas
bound
sahf
dec
dec
in
test
xor
adc
arpl
aaa
push
cmp
test
cltd
test
pop
mov
adc
loop
xchg
das
pop
mov
out
adc
jns
jg
stc
jecxz
dec
adc
mov
roll
shll
adc
xlat
fs
jp
adc
dec
sbb
inc
in
inc
push
fsubl
outsb
ret
mov
mov
mov
xchg
stc
sahf
xor
xchg
push
adc
lds
mov
into
xchg
jg
icebp
jmp
sub
add
cmc
test
jecxz
es
lret
sbb
cmp
lahf
lret
and
ja
fisubl
es
ret
pushf
lds
hlt
xchg
or
ret
jnp
dec
pop
inc
fnstsw
ss
ds
cwtl
mov
jg
insl
sub
jmp
and
push
cmp
dec
and
adc
je
inc
loopne
xchg
xchg
push
fsubrp
rclb
mov
repz
dec
loop
mov
movsb
xor
and
iret
data16
std
lret
push
outsl
cmp
mov
inc
outsl
cmp
dec
pop
or
inc
xchg
jno
adc
xor
std
aaa
fs
sbb
push
hlt
aaa
mov
movsl
xchg
add
ja
lods
sub
or
mov
xchg
daa
xor
mov
dec
push
cmc
adc
sti
pop
lahf
or
inc
imul
ljmp
adc
clc
xchg
xchg
lret
loop
mov
or
sbb
pop
inc
cwtl
cmpsb
sub
imul
mov
cmc
dec
jno
adc
jecxz
and
addr16
sarl
shlb
adc
lret
pop
notl
cmpsl
jbe
stos
in
js
cmp
out
xchg
pop
or
ret
int3
add
adc
lea
mov
out
pushf
psrlw
cld
int
xor
adc
sub
icebp
mov
push
xor
aad
repz
jae
add
scas
push
inc
iret
pop
adc
mov
test
pop
mov
aaa
fcoms
push
iret
sahf
nop
inc
dec
in
fistpl
sub
inc
fsts
nop
mov
pop
cs
iret
fldcw
repz
ss
sbb
es
mov
pop
nop
jge
mov
dec
stos
lahf
cmp
repz
mov
shl
mov
xor
pop
cmp
push
mov
adcb
add
ja
xor
push
adc
mov
icebp
jne
xchg
push
adc
lret
out
sahf
sub
mov
pop
adc
mov
pop
adc
movsb
lret
or
subl
adc
or
icebp
or
push
mov
arpl
icebp
fstpt
cld
cmp
xchg
mov
fwait
or
or
imul
mov
sti
xor
mov
dec
xchg
sbb
dec
cmp
sbb
sahf
divb
pop
or
lcall
mov
pop
mov
pop
dec
cmp
xor
push
inc
cli
out
in
push
push
fsubs
pop
cmp
push
xchg
xchg
mov
dec
bound
movsb
scas
int
xor
or
jns
fld
lcall
sbb
adc
out
push
mov
push
and
aas
xchg
xchg
pop
dec
pop
or
mov
adc
icebp
es
mov
sub
cmp
cmp
add
mov
lret
xchg
cs
jae
inc
sbb
fstpt
in
movsl
movsl
int
dec
iret
xor
aad
push
xchg
lret
lret
mov
shr
sbb
sub
gs
mov
outsb
out
int3
lcall
out
pushf
cmp
lods
das
outsl
andl
mov
xor
pusha
xor
jbe
mov
ret
push
dec
in
imul
jno
ds
iret
cwtl
dec
push
jne
xor
or
push
jp
mov
sahf
or
mov
imul
inc
enter
xchg
outsl
push
in
movb
mov
add
pop
mov
lcall
std
sub
lahf
int3
jp
aaa
adc
pop
addb
inc
jno
test
mov
adc
push
jns
sarb
inc
clc
sahf
andb
sub
push
cmp
sbb
insl
inc
pop
gs
mov
xchg
push
mov
inc
push
inc
cmp
and
jb
cmp
push
jns
or
mov
xchg
mov
xor
adc
pop
jb
dec
ret
cmp
add
mov
scas
out
outsl
loopne
lods
mov
icebp
data16
adc
leave
imul
or
cld
jle
das
add
sbb
enter
mov
dec
mov
mov
jne
leave
mov
xchg
lock
ds
or
scas
fmuls
jbe
mov
int3
xchg
adc
lret
ret
fiaddl
imul
test
sub
in
or
cltd
xor
adc
sarb
mov
jbe
jecxz
lahf
jg
popf
adc
in
int
out
xchg
jecxz
test
pop
push
jbe
sarb
popl
push
sub
xchg
mov
pop
pushf
test
adc
nop
sbb
cs
mov
addr16
and
in
cwtl
or
inc
ss
adc
sub
and
push
pop
xchg
fs
in
push
inc
mov
push
jecxz
fprem
sub
or
jmp
subb
pusha
jns
pop
xor
pop
xor
fsts
aad
dec
lods
inc
mov
movsl
sbb
sbb
push
adc
fdivrl
cltd
and
inc
pminsw
ret
dec
push
loop
das
pop
lret
roll
jg
and
stos
cmp
mov
movsl
popf
jecxz
adc
je
shrl
mov
mov
push
adc
adc
enter
inc
pusha
out
je
or
ret
es
xchg
jne
and
dec
jg
pop
fsubrp
scas
cmpsl
loope
lahf
sbb
call
faddl
adc
cmp
rorl
dec
lahf
mov
push
xor
shrb
mov
mov
add
xor
or
sbbl
jbe
faddl
adc
scas
ret
xchg
pop
std
repz
popa
dec
dec
in
or
or
and
test
add
add
jo
pop
adc
adc
out
xchg
jle
lret
xchg
movsl
xchg
push
int3
fdivs
arpl
push
and
fs
jo
pop
adc
outsl
or
mov
sbbb
loop
clc
xor
inc
dec
popa
xor
sbb
outsl
jno
fwait
jmp
adc
jbe
loope
leave
lcall
mov
mov
out
pop
and
andb
push
adc
push
adc
adc
adc
js
popa
ret
jns
dec
mov
mov
adc
mov
test
dec
imul
xchg
pop
mov
dec
loopne
int
and
mov
cmpsb
arpl
repz
cmp
inc
stos
jae
pop
popa
inc
inc
or
inc
lret
xor
xchg
aas
lods
add
or
cmpsb
sub
loop
jbe
or
repz
lret
lock
cmp
cwtl
stos
sbb
xor
insb
pop
imul
rclb
js
pop
jg
or
or
push
sub
pop
adc
enter
cmp
mov
mov
lret
adc
push
sub
jbe
out
loopne
lds
sub
aad
pop
pushf
inc
insl
in
inc
in
leave
adc
faddl
adc
int
mov
in
test
ret
add
sti
cmp
movsl
fsubl
mov
into
xchg
gs
test
sahf
pop
jne
fs
hlt
fistps
sub
push
call
nop
jo
pop
adc
xchg
aaa
rol
push
sub
cld
inc
mov
and
insl
mov
popf
jb
nop
les
xchg
push
jns
xchg
mov
out
add
std
pusha
push
xor
pop
push
insl
movsl
pop
dec
mov
pop
jmp
pop
jmp
or
push
test
aad
outsb
repnz
mov
fists
fcmovb
inc
popf
add
and
push
sbb
pushf
xorl
lock
pop
cmp
fsubrl
in
aaa
xlat
ds
xor
mov
loopne
mov
sub
and
aaa
xlat
jge
push
jg
xchg
out
jle
cmpsl
aad
jns
scas
pop
ds
test
xchg
push
push
cmpsl
sub
add
inc
inc
or
js
pop
push
adc
lea
mov
fdivs
xlat
adc
push
adc
pop
sbb
les
jg
sahf
cmp
jmp
xor
testb
and
push
xlat
push
jg
mov
inc
jge
sub
pop
imul
mov
push
fwait
xchg
lds
inc
lret
scas
push
pop
repz
xchg
stos
pop
dec
aad
xorb
adc
in
out
xchg
push
rorl
popf
arpl
add
hlt
fisubl
xchg
movsb
insb
dec
fidivrs
sbb
sbb
add
jo
pop
adc
shrb
push
cmp
loopw
mov
sbb
push
dec
pop
add
xchg
mov
mov
sti
in
xor
pop
sbbl
out
in
sub
rcrb
icebp
loop
push
shlb
ljmp
mov
roll
out
into
pushf
movl
cmp
fsubl
fmull
lret
std
rorl
xor
aaa
sahf
and
outsl
cs
mov
out
cmpsb
xchg
add
xor
push
mov
sbb
dec
add
pop
cmp
iret
xor
fmull
sarb
shll
push
xor
mov
adc
jae
or
int3
add
sbb
gs
adc
xor
add
mov
ljmp
adc
dec
ret
mov
call
push
jg
xor
xor
popa
lds
sub
iret
sahf
dec
dec
in
stos
lcall
sbb
jnp
movl
repz
or
in
or
xor
sbb
arpl
mov
mov
push
adc
iret
sahf
add
clc
xlat
push
mov
arpl
icebp
dec
insb
stc
insl
fstpl
dec
mov
out
lcall
psllw
xchg
pop
ja
stc
fstpl
lock
cmp
cwtl
xor
xchg
add
lea
cmp
pop
cmp
push
xor
xchg
out
sbb
push
adc
jl
dec
sahf
cmp
sub
xchg
shlb
cltd
bound
and
xor
imul
jecxz
xchg
sub
adc
add
adc
xchg
sbb
push
mov
lds
loopne
add
pop
sub
jecxz
mov
insb
inc
cmpsl
out
cli
cmpsb
sbb
mov
in
cmp
inc
loopne
daa
and
sbb
add
les
dec
test
dec
xchg
pop
jnp
lcall
ret
hlt
cmc
fldl
pop
or
fbld
jno
adc
cld
pop
xor
jmp
jge
jecxz
mov
pushf
and
xor
lcall
nop
xchg
mov
add
aam
scas
negb
inc
loope
lods
je
jle
inc
push
hlt
push
mov
mov
mov
xchg
xor
mov
pop
sti
mov
stos
pushl
dec
mov
cmpsb
pop
and
xchg
push
sbb
jbe
enter
cmpsl
cmp
fmul
jbe
mov
inc
mov
shll
adc
fbld
sbb
mov
push
imul
rolb
jnp
mov
out
enter
nop
xchg
push
adc
and
push
ljmp
xchg
push
adc
sub
xor
mov
adc
sahf
test
cmpsl
aad
jnp
inc
adc
adc
adc
out
jo
pop
xchg
rcll
aaa
sub
pop
or
lret
arpl
movsb
mov
sti
test
subb
fsubrs
push
or
mov
inc
cmp
js
jg
add
in
flds
push
iret
sahf
sti
sub
test
cs
xor
or
sub
jo
adc
xor
cmp
and
and
dec
cmp
jno
mov
jne
add
or
sub
repz
scas
xor
or
jmp
icebp
jns
mov
dec
xchg
es
scas
mov
jp
mov
or
and
cld
jo
adc
pushf
dec
push
mov
or
mov
out
mov
xchg
leave
mov
pop
adc
popf
mov
or
flds
adc
xor
or
arpl
mov
dec
les
adc
cmp
push
pop
pop
sbb
mov
xchg
add
imul
inc
push
xchg
dec
mov
xor
inc
ljmp
and
mov
pop
cmc
cmp
jne
and
cmp
pop
xchg
sbbl
jbe
faddl
adc
xchg
pop
std
repnz
popa
bound
adc
jecxz
fistpll
mov
push
mov
add
dec
je
pop
adc
je
pop
adc
shrl
mov
adc
test
inc
jo
xchg
lods
inc
mov
and
iret
inc
or
pop
adc
in
or
mov
loope
scas
inc
sbb
sbb
mov
outsl
push
adc
xchg
mov
jo
pop
adc
shll
in
ret
xchg
jge
lret
sbb
jmp
lock
or
shrl
pop
fidivs
int
sete
dec
ljmp
sbb
pushf
push
cmp
or
xchg
scas
push
add
mov
sarl
add
or
arpl
inc
insb
xchg
push
shll
cmp
repnz
aaa
jo
pop
adc
jae
and
ret
xchg
and
dec
inc
mov
iret
push
dec
pop
or
int
add
adc
hlt
loope
xchg
mov
lock
lret
outsb
subl
lcall
bound
mov
jo
sahf
xchg
jp
std
jno
faddl
adc
push
xor
lret
fs
adc
xchg
push
adc
fcomip
cmc
dec
push
sub
mov
int3
xor
sbb
sahf
pop
cld
stos
jecxz
test
es
sub
lcall
xchg
mov
fucomp
and
mov
loop
mov
adc
negl
sbb
pop
adc
ret
pop
ja
xchg
xor
cmpsl
lret
mov
pop
or
adc
xchg
mov
fwait
es
lret
cmc
fdivl
sbb
pop
adc
dec
lock
out
dec
adc
push
rcl
mov
pushf
push
cmp
adc
faddl
call
movsb
jbe
clc
add
or
mov
jp
data16
adc
xchg
add
cmp
jo
xor
dec
lcall
je
out
adc
sahf
mov
test
adc
bound
sbb
sbb
and
pop
jae
dec
lods
jae
adc
inc
imul
add
mov
jns
aam
dec
test
jo
pop
adc
outsl
ljmp
data16
xchg
xorl
mov
xchg
pop
pop
jbe
divb
pusha
std
mov
mov
xchg
insl
xor
inc
pop
jnp
inc
aam
shll
ljmp
out
or
popa
ret
test
or
mov
jnp
xor
cwtl
iret
lret
call
in
sbb
sbb
add
sahf
test
das
fwait
leave
xor
in
sub
inc
iret
sahf
inc
or
adc
push
adc
test
in
or
inc
sbbl
les
loope
xchg
add
scas
pop
repz
xchg
stos
pop
dec
aad
xorb
adc
in
out
xchg
push
rorl
popf
arpl
add
inc
repnz
or
pop
icebp
jmp
lret
cli
mov
mov
xor
pop
in
pop
fcmovu
mov
push
addr16
pop
aad
out
jmp
lahf
stos
jae
xor
and
pop
push
cmp
arpl
ja
rorb
adc
or
adc
add
fcompl
int3
lcall
sbb
pushf
pop
stc
jl
imul
imul
xor
jae
cld
call
int
and
mov
int3
mov
daa
xchg
cmc
push
inc
pop
sub
cmp
adcl
cmp
insb
xchg
fstpt
stc
cs
jae
adc
sti
or
test
daa
and
insb
inc
aas
loop
lds
out
cmpsb
inc
loopne,pt
int
lret
jg
rolb
mov
js
dec
lds
jae
adc
outsb
scas
push
xor
lret
mov
lea
or
push
ja
cs
scas
pusha
out
mov
cmp
into
ja
mov
loop
faddl
adc
xchg
divb
mov
pop
mov
popa
ret
mov
xor
dec
pop
or
sbb
cld
jo
adc
sahf
icebp
lds
pushf
out
sbb
push
adc
icebp
sbb
mov
inc
adc
pushf
push
cmp
lds
pushf
mov
xchg
rcrb
fwait
xor
mov
es
jno
pop
insb
stc
gs
pop
mov
cmp
call
push
pop
popa
xor
xor
ret
xchg
inc
cld
push
or
jae
add
adc
adc
fsubs
out
iret
mov
push
add
ret
je
cmp
ret
jb
arpl
dec
out
out
mov
inc
jl
into
pushf
shr
fs
sbb
add
xchg
data16
mov
xor
inc
jnp
push
mov
jnp,pt
adc
addr16
jge
fildl
push
sbb
add
loope
sbb
xchg
call
jne
push
outsl
movsb
stos
lahf
imul
push
sbb
popa
sub
stc
dec
loopne
jo
push
jmp
dec
sbb
stos
dec
test
adc
aam
jmp
imulb
sub
popf
popa
cmc
scas
and
hlt
enter
ret
sbb
out
aad
or
rcrl
cmc
or
sbb
dec
sbb
jmp
push
or
cmp
adc
xor
gs
out
lods
test
fidivl
pop
jp
jae
push
loopne
push
push
icebp
xchg
ds
mov
add
mov
inc
imul
pop
xchg
xor
pop
xor
jnp
xchg
pop
fs
movb
fs
push
jge
out
mov
jmp
add
mov
add
fs
push
mov
mov
hlt
stos
jp
dec
aad
mov
ja
lock
mov
xchg
push
adc
ss
xchg
out
or
pop
js
fistps
inc
jecxz
iret
add
pop
adc
xor
pushf
mov
and
adc
mov
cs
or
push
xchg
ficomps
xchg
faddl
adc
mov
mov
faddl
adc
negb
pop
aas
lret
sub
test
das
inc
and
mov
push
lds
adc
test
stc
push
scas
mov
test
adc
or
mov
dec
pop
lds
adc
sbb
adc
ret
es
pop
pusha
lds
adc
sbb
adc
push
jns
push
clc
leave
pop
sbb
lcall
out
enter
dec
cmpsb
pop
sbb
push
int3
cwtl
mov
enter
sbbb
pushf
cmpsb
mov
sbb
popa
leave
inc
pop
mov
jne
cli
loope
mov
sbb
hlt
jae
cs
xor
arpl
arpl
and
and
cld
mov
dec
dec
sbb
in
push
xor
popf
jmp
into
jg
jo
dec
mov
sbb
sub
inc
hlt
iret
sahf
dec
fildl
insl
sbb
lret
push
jmp
jb
jo
mov
xlat
sbb
dec
pop
adc
rep
decb
push
stos
sbb
arpl
sub
sbb
pop
adc
mov
fldt
add
fsubrs
pop
rorl
adc
add
adc
push
or
xchg
jne
stos
add
pop
adc
dec
jg
mov
or
and
outsl
out
mov
mov
test
add
pop
adc
mov
jmp
pop
adc
pop
mov
cmp
out
mov
mov
arpl
icebp
dec
push
add
pop
adc
inc
fidivs
aam
mov
int3
lcall
mov
sub
mov
movb
pop
fsubrs
xchg
jns
xchg
mov
aad
fwait
or
arpl
xor
sub
mov
mov
jo
pop
adc
bound
jl
xlat
cmp
or
arpl
lock
ret
xchg
pop
push
call
out
arpl
add
and
mov
mov
arpl
fstpt
jmp
cmp
fdivs
pop
inc
or
adc
mov
loopne
push
cmp
leave
cwtl
dec
cwtl
pop
mov
lea
pop
dec
mov
aad
mov
xor
cwtl
negb
xchg
hlt
mov
sub
scas
inc
aaa
into
lahf
dec
dec
in
xchg
fwait
xor
lea
lahf
pop
jl
clc
cmp
adc
adc
inc
fdivp
mov
ret
push
and
imul
stc
fcomps
xchg
lea
test
xor
pop
adc
popaw
iret
js
lahf
cmp
jecxz
cwtl
sub
int
adc
xchg
lcall
testb
xchg
xor
pusha
push
jmp
hlt
jl
pop
stos
popa
cmpl
xor
lret
imul
or
mov
lds
or
out
sub
stc
mov
js
pop
adc
int3
inc
mov
subl
pop
push
xor
ljmp
jg
lcall
data16
push
adc
gs
scas
xorl
aam
adc
mov
pop
or
bound
inc
popf
adc
in
bound
lret
ret
test
or
cs
ret
push
or
lock
rol
lods
gs
scas
jb
adc
xchg
aad
sub
mov
adc
shr
sbb
mov
rolb
mov
dec
jno
xchg
push
mulps
pop
adc
cmp
dec
mov
aad
aad
cli
inc
push
pop
mov
mul
test
inc
push
lahf
scas
lret
cli
outsb
inc
in
push
xchg
pop
ljmp
mov
lahf
sbb
rcll
fadds
movb
adc
adc
clc
adc
sbb
pop
inc
rep
push
aas
adc
in
pop
adc
in
testb
mov
push
shrb
pop
or
push
mov
xlat
and
lea
pop
adc
mov
push
add
mov
mov
es
add
adc
bound
mov
lret
mov
push
jno
adc
scas
mov
icebp
mov
dec
jno
adc
xlat
inc
les
adc
data16
mov
inc
mov
or
lock
jnp
lcall
pop
adc
popa
ret
insl
push
fidivs
jmp
mov
cltd
mov
call
insb
cmp
jo
pop
adc
mov
popa
inc
pushf
cmp
xchg
xchg
mov
cmc
call
or
sub
pop
out
out
out
mov
js
adc
push
sub
popa
cmp
pop
xchg
mov
xor
add
adc
rolb
rolb
das
pop
mov
pop
push
out
lea
push
mov
arpl
adc
or
add
test
push
repz
mov
loop
faddl
adc
xor
mov
popa
ret
out
mov
pop
adc
fcomps
mov
loop
cltd
cs
insb
in
sahf
xchg
aad
cmpsl
mov
cmovbe
push
xor
and
mov
mov
jmp
mull
pop
adc
lret
xchg
lds
je
sahf
pushf
cmp
push
cmp
dec
pop
or
pop
les
jno
adc
push
pop
pop
or
mov
push
pop
or
ja
pop
or
xchg
outsl
cmp
dec
pop
or
iret
je
jo
adc
cmp
jecxz
fwait
mov
dec
and
ret
insb
or
cmp
mov
adc
cld
jo
adc
shll
adc
add
adc
sub
cmp
int3
insl
sub
add
sub
inc
mov
push
or
mov
or
jo
pop
jecxz
out
mov
daa
cld
jo
adc
xchg
ret
jo
pop
adc
cmp
roll
xor
xlat
or
shlb
into
imul
sub
cli
mov
xor
insb
xchg
addr16
adc
mov
jp
sti
push
mov
repz
pusha
jno
movw
mov
daa
andl
adc
xchg
les
dec
int
jo
fdivrs
test
test
popa
fadds
push
adc
insl
mov
sub
jbe
mov
mov
mov
mov
sahf
loopne
je
adc
jno
lock
cltd
dec
mov
push
mov
clc
out
sub
push
ret
hlt
int3
in
cmp
out
sahf
shl
scas
xor
outsb
les
ja
xchg
push
es
test
pop
adc
xor
inc
inc
push
jno
repz
xor
scas
imul
cli
sahf
xor
push
or
adcl
adc
jne
or
mov
test
pop
jecxz
shlb
xchg
repz
add
jno
adc
jb
sahf
adc
int3
sahf
fistl
ljmp
add
test
jb
lods
adc
jbe
mov
adc
or
xor
out
or
lret
insb
cmp
aad
xor
push
pop
dec
shl
sub
sbb
sbb
push
sbb
leave
and
cmp
sbb
xchg
mov
fsubrp
pop
sbb
dec
and
lods
fldlg2
jle
pop
mov
jmp
ret
cwtl
sbbb
repz
rcrb
aam
add
push
iret
sub
pop
clc
ds
movsb
inc
pop
or
adc
inc
pop
or
push
jle
lds
adc
pop
insb
lds
adc
jge
cltd
data16
lds
mov
sbb
and
mov
jmp
pushf
addr16
ss
push
sbb
sbb
rorl
mov
push
mov
loop
add
adc
adc
push
adc
sub
or
jo
pop
adc
xor
gs
jge
in
mov
popa
sti
fistpl
push
mov
into
xchg
cs
mov
adc
push
cmp
mov
lds
jb
arpl
dec
mov
out
in
jbe
shll
std
insb
das
jnp
loop
xor
dec
test
out
loop
outsb
sbb
ja
or
jo
mov
jge
sbb
and
push
rsm
jae
pusha
in
inc
push
out
xor
inc
mov
push
cmp
icebp
dec
or
sub
daa
pop
mov
xor
xchg
js
cmc
pusha
jo
pop
adc
out
ja
mov
dec
xchg
sbb
lret
inc
or
adc
dec
pop
loopne
int
out
out
shlb
arpl
pusha
push
jecxz
loop
mov
sub
mov
cmp
repz
mov
mov
arpl
lods
or
fidivrl
ljmp
in
inc
pop
loopne
int
pop
push
mov
je
out
cmp
jo
mov
cs
pop
addr16
pop
sahf
cmp
icebp
xchg
clc
xor
inc
mov
arpl
mov
in
pop
adc
out
in
inc
mov
out
xor
adc
sti
fs
jnp
loop
leave
hlt
sub
mov
pop
adc
mov
sysenter
xor
mov
fld1
and
lds
adc
dec
xchg
das
pop
jle
or
insl
add
jo
pop
adc
jns
dec
adc
jo
sub
push
sbb
test
push
lds
adc
lcall
xor
js
pop
lds
adc
mov
cmc
push
sahf
cmp
add
pop
lds
adc
call
jecxz
push
cmp
push
jne
lds
adc
mov
sub
out
out
ret
sbb
or
jo
ret
hlt
push
push
sub
dec
out
sbb
mov
addr16
xchg
cmpsl
xchg
push
out
ret
xor
jp
pusha
sbb
jnp
cmpsl
inc
mov
mul
mov
or
daa
sbb
and
in
imul
cmp
push
icebp
sbb
pop
adc
cmp
sahf
int3
pop
ja
xchg
xor
sbb
sbb
pop
xchg
out
lahf
imul
cmp
push
sbb
mov
jecxz
cmp
cmp
sahf
dec
xor
or
call
xchg
push
sub
jecxz
cld
mov
push
jo
pop
adc
add
arpl
adc
cs
inc
repnz
jp
inc
dec
pop
or
mov
adc
adc
movb
jg
adc
jb
push
or
jecxz
jnp
stos
sub
movb
sbb
jp
mov
addl
movb
out
push
or
fildl
jmp
push
loopne
mov
push
mov
adc
xor
adc
fidivs
pop
test
std
add
jbe
jo
xchg
subps
and
fcmovb
dec
lock
and
xchg
mov
outsl
xor
ffreep
mov
scas
call
pop
jo
pop
adc
fmull
cmp
test
and
pushf
or
sub
push
sbb
xor
inc
in
ret
mov
stos
jmp
or
pop
mov
inc
bound
in
or
or
push
in
push
jb
test
repz
addr16
and
aam
jge
subl
scas
repz
dec
in
lods
cli
es
mov
jle
das
xchg
out
mov
add
std
or
adc
pop
or
and
nop
ljmp
in
mov
out
jg
data16
cmp
faddl
adc
sahf
push
aas
adc
xor
mov
jbe
shll
adc
jo
sti
ficompl
imul
pop
adc
popa
popa
ret
insl
sbb
mov
daa
push
out
pushf
or
loope
out
mov
pop
adc
pop
or
lock
inc
xor
cmp
adc
push
fiadds
and
inc
mov
pop
xor
dec
out
lcall
psubb
cmp
xchg
or
pop
outsl
iret
sub
fcompl
dec
fwait
xor
or
inc
mov
push
mov
pop
adc
cmp
or
mov
or
jo
pop
adc
lahf
pushf
cmp
icebp
lds
mov
push
xor
xchg
pop
adc
xor
push
dec
cmp
icebp
lds
or
int
cmp
pop
cwtl
cmc
jmp
ljmp
mov
std
pop
loop
imull
cmp
jo
pop
adc
lcall
mov
cmp
cmp
cmp
or
cs
jno
adc
adc
mov
or
and
xlat
out
fidivl
cs
dec
pop
or
ljmp
sbb
or
xor
sub
sbb
pop
adc
pop
mov
sbbl
out
or
ss
arpl
xor
cmp
sbb
out
scas
mov
lea
inc
adc
pushf
push
cmp
lds
pushf
sbb
adc
sbb
push
enter
xor
sbb
arpl
aam
cmp
mov
das
dec
imul
xor
test
adcb
xchg
int
sbb
jns
jecxz
xor
in
call
iret
pop
xchg
sbbl
pop
adc
mov
test
adc
cmpsl
inc
xlat
dec
xor
lcall
leave
sahf
rclb
pop
mov
and
pusha
out
jl
out
mov
jp
imul
fsubrs
push
cli
sub
in
inc
arpl
insb
jmp
stos
popa
int3
addr16
idivb
fimuls
es
or
jno
daa
xadd
jp
cltd
xchg
inc
or
adc
pop
ret
push
repnz
xchg
dec
outsb
xchg
loop
cmp
out
adc
pop
repnz
adc
out
cmp
lret
mov
stos
add
mov
dec
mov
sbb
pusha
mov
outsl
mov
sahf
mov
data16
sub
mov
xchg
orl
dec
movl
stc
jno
push
push
dec
inc
ja
adc
xor
add
push
push
loopne
shlb
push
xor
cwtl
cmp
fsubrs
xchg
sbb
push
adc
call
dec
and
inc
pop
jo
jle
test
shrl
iret
jno
dec
sub
test
sub
ja
jno
jg
jo
pop
adc
xchg
cli
leave
es
hlt
fdivr
jle
loopne
pop
sbb
test
xor
adc
xor
movsl
push
shlb
mov
shll
dec
push
mov
leave
add
in
ss
sbb
mov
push
push
and
xor
dec
pop
or
ja
cld
jo
adc
loopne
aad
jmp
adc
xchg
sub
add
jp
ret
es
outsl
inc
cmpsb
out
push
or
push
adc
xchg
and
xor
jno
hlt
and
hlt
and
push
adc
jbe
and
inc
or
sahf
js
ficompl
adc
lds
iret
cmp
inc
js
sbb
adc
cmpsl
iret
adc
fcompl
int
inc
lahf
mov
xor
push
push
sbb
pop
mov
cmp
iret
inc
inc
adc
adc
sbb
test
adc
jp
mov
je
mov
ljmp
int3
push
stos
nop
push
mov
and
clc
or
icebp
lds
inc
hlt
iret
sahf
sub
sub
pop
ret
dec
and
dec
add
icebp
lds
or
fcomps
jns
out
jno
pop
shrl
test
dec
js
dec
pop
icebp
loop
sub
movsl
scas
orl
mov
push
test
mov
cmp
xor
rclb
cs
adc
lahf
cmp
adcl
inc
and
fadd
push
xchg
outsl
int
les
pop
lock
cmp
mov
adc
outsb
call
jae
xchg
aaa
je
shll
and
insb
add
pop
in
clc
or
xchg
xlat
adcl
mov
push
adc
xor
sbbb
mov
jg
sarb
push
inc
cwtl
push
adc
cwtl
jae
adc
or
lahf
data16
enter
lods
sub
xor
inc
push
repnz
xor
lods
mov
mov
inc
or
gs
jae
jae
pop
dec
cwtl
push
adc
lcall
adc
ret
in
inc
dec
rorb
out
mov
dec
fidivl
xchg
fistpll
fs
or
push
add
outsl
arpl
in
add
adc
or
or
ret
inc
cmp
fisubrs
pusha
dec
pop
and
sbb
or
pop
push
stos
mov
movl
adc
orl
pop
xor
cltd
or
add
movsbl
or
std
ljmp
mov
test
or
or
xor
lods
and
adc
mov
pop
adc
imul
int3
or
jmp
xchg
adc
sbb
mov
icebp
sbb
adc
jmp
test
stos
fsubs
sub
mov
pop
pop
pop
inc
xchg
pusha
enter
in
adc
inc
and
xchg
pop
or
call
sub
push
xchg
sahf
hlt
mov
push
sahf
ja
out
mov
rclb
cmp
xlat
lds
xlat
inc
cltd
dec
push
in
jns
xlat
std
push
fwait
mov
sahf
jecxz
push
loope
data16
mov
mov
jmp
and
pop
mov
filds
mov
test
inc
mov
xchg
lcall
cwtl
and
push
adc
sbb
aaa
fistl
sub
sub
push
test
int3
or
and
dec
push
bound
cltd
jmp
rorb
mov
inc
push
icebp
lods
iret
push
movsl
leave
aad
push
sbb
dec
stc
push
dec
or
adc
mov
cmpl
test
xchg
sbb
push
es
dec
sarb
adc
icebp
mov
addr16
sbb
and
push
jg
aaa
adc
clc
jnp
fdivrl
sub
shlb
xchg
or
or
std
and
jns
push
cmp
adc
inc
inc
test
out
cmp
stos
popf
std
loope
rorb
pop
add
sarb
xchg
xchg
arpl
cwtl
push
adc
and
adc
movb
add
sbb
jg
lds
jnp
sbb
hlt
push
sbb
cmp
and
inc
and
int3
in
jp
xor
orl
lret
xchg
xor
iret
outsb
sti
adc
test
stc
in
sub
test
jmp
add
test
mov
jae
into
pop
jno
fimull
repz
jne
push
cs
sbb
or
xor
adcl
setge
hlt
jo
xchg
nop
ja
mov
fcomps
dec
js
dec
mov
lret
inc
mov
sbb
push
jecxz
out
pop
jecxz
pop
push
add
ret
lock
gs
jg
mov
arpl
push
or
sbb
mov
xor
sub
mov
int
hlt
sbb
dec
mov
daa
cmp
or
xchg
jp
arpl
into
sahf
cmp
lds
movsl
adc
fnsave
sbb
inc
dec
or
pop
insl
das
pop
test
add
add
inc
xchg
movsl
sbb
lock
xor
jl
cli
fiadds
push
lods
int
adc
or
push
adc
ret
xchg
sbb
mov
adc
sbbb
daa
cmpl
push
out
cltd
adc
roll
cmp
iret
pop
sahf
bound
pop
cs
mov
cmp
daa
dec
iret
push
sahf
ret
jne
aad
mov
cmp
dec
or
movsl
lret
filds
and
cli
adc
jge
sbb
lds
inc
fistps
xlat
stc
pop
outsl
xorl
dec
dec
out
mov
pop
push
pop
mov
orl
movsb
pop
xor
loop
call
scas
out
mov
push
push
pop
mov
sub
pop
xchg
jns
push
orb
mov
jo
popa
xchg
lret
adc
or
cmc
iret
jmp
insb
test
or
movl
push
pop
cmp
sbb
inc
push
and
push
add
les
cmp
dec
es
sbb
push
int
sbb
inc
mov
xchg
icebp
xlat
in
or
in
std
mov
pop
mov
cmp
daa
clc
jmp
sbb
xchg
push
cmp
adc
inc
les
mov
or
rclb
insl
ss
cmp
cmp
and
enter
sar
adc
pop
or
out
insl
jbe
inc
pop
lea
dec
std
add
mov
mov
or
xor
mov
aaa
int
rorl
and
mov
mov
flds
adc
andb
jae
jns
cmp
adc
add
fs
cmp
mov
sub
or
and
fists
fildl
dec
sub
sarl
mov
fidivrl
pop
xchg
jp
push
adc
pop
dec
xchg
mov
xchg
jnp
push
adc
xchg
sub
hlt
cmp
es
cmc
pusha
hlt
fisttpll
je
jb
xchg
mov
jg
sbb
sarb
aad
aam
in
mov
jl
fidivs
roll
or
cmp
pop
cmp
jmp
vpsubb
aaa
loopne
mov
arpl
aam
sub
sub
icebp
leave
inc
adc
add
sub
out
push
push
push
andb
adc
xchg
jg
and
mov
cvtpi2ps
xchg
push
xor
outsl
fsubp
pushf
jns
daa
push
xchg
cmp
mov
push
adc
mov
mov
shll
or
push
or
faddl
adc
xchg
popf
inc
mov
loope
push
scas
pop
popf
into
sahf
dec
lret
add
ficompl
xchg
xlat
inc
negb
mov
or
idivb
lods
and
scas
fsub
iret
sahf
inc
jle
inc
inc
jle
or
adc
stos
je,pn
loop,pn
out
je
pop
adc
inc
push
outsb
popa
mov
faddl
adc
je
outsl
pop
cmp
pop
mov
xchg
nopl
add
pop
outsb
ret
pushf
cmp
or
cmp
adc
push
lea
adc
cli
mov
dec
ret
xchg
cs
outsb
and
push
adc
and
rcrl
sti
xor
lock
pop
inc
mov
pop
xchg
inc
jno
popa
lcall
std
das
xlat
popa
fwait
sub
cmc
cmp
inc
push
ljmp
xchg
pop
dec
fisubrl
push
imul
sbb
push
dec
add
arpl
sbb
xchg
jg
mov
call
out
cmp
movsb
arpl
pop
loop
adc
adc
dec
insb
sub
mov
mov
popa
mov
mov
xchg
mov
mov
int3
fdivrs
test
fs
fidivl
xor
jne
mov
cmp
sub
jl
repz
fs
sbb
lods
or
push
adc
loop
add
push
fwait
lock
xorl
push
dec
lods
xor
push
sahf
scas
jecxz
out
fidivrl
sub
jp
or
or
jnp
stos
in
mov
xor
loope
pop
xor
inc
icebp
adcb
push
xchg
sti
in
xchg
adc
jle
sbb
jmp
test
idivl
inc
sub
mov
adc
push
fcomps
xor
adc
xchg
je
lret
xor
mov
daa
mov
in
outsb
adcb
ret
or
xor
sbb
cmp
int3
aas
insl
lods
cmp
arpl
xor
sbb
je
xchg
cmp
push
dec
es
xor
inc
pushf
or
lcall
lret
push
mov
mov
sub
pop
inc
out
cmp
je
mov
mov
popa
test
xor
ret
or
int3
incl
fdivrl
push
adc
cmp
stos
or
imul
jl
add
mov
daa
fisttpl
fisttpll
test
dec
jg
in
dec
jmp
jg
xchg
add
mov
aaa
pop
loop
sbb
in
inc
fmul
jmp
lahf
add
popf
sbb
mov
into
jo
outsl
xchg
test
call
push
lods
xor
mov
ja
and
fsts
loopne
xchg
into
inc
dec
and
movb
repz
jge
lods
cmc
cmc
fcmovnu
in
ds
icebp
es
adc
sbb
movsl
add
jo
push
out
js
ja
adc
fldcw
or
push
aam
push
fidivrl
adc
and
sbb
and
push
sub
jnp
lock
push
pop
fstpl
les
cli
inc
cs
test
push
iret
in
pop
cs
ljmp
mov
mov
ret
push
jle
rorl
xchg
ja
push
out
cmp
adc
outsl
out
js
in
mov
cmp
fxtract
and
pop
popf
add
popf
int3
inc
outsb
sbb
cmp
pop
cld
jle
cmp
andl
pop
int3
sub
jb
lods
and
jb
dec
push
mov
jmp
movb
daa
jns
sahf
jmp
pop
add
xchg
mov
insb
xchg
fwait
test
das
dec
ret
xor
mov
pop
cmp
ret
sbb
shlb
adc
sti
xchg
das
or
cmc
or
shl
inc
bound
push
xchg
cmc
ss
sbb
xlat
icebp
ja
add
pop
cmp
dec
adc
or
mov
clc
repnz
sub
enter
pop
outsb
ret
pushf
cmp
cwtl
dec
int3
adc
and
and
or
xor
mov
das
mov
add
dec
add
mov
mov
mov
popf
cmp
lock
inc
xor
decb
or
xor
pop
cs
mov
mov
or
shll
cmc
pop
adc
or
jo
adc
xor
or
mov
lock
mov
and
pop
out
pop
jno
adc
inc
les
adc
movsb
inc
xlat
sbbl
pop
les
push
adc
pop
mov
cwtl
push
adc
fisubl
jp
in
es
xchg
add
cltd
sbb
and
jns
stos
and
je
cwtl
dec
mov
inc
mov
pusha
sahf
cwtl
jae
adc
inc
das
cs
mov
jl
push
adc
xchg
mov
sbb
sbb
and
in
jae
cmpsb
hlt
jge
adc
scas
xchg
jecxz
sub
sbb
cmp
and
sbb
in
daa
cs
mov
cmp
adc
adc
add
icebp
int3
rclb
pop
dec
mov
xor
adc
ss
icebp
jecxz
adc
dec
mov
jo
cwtl
mov
cld
mov
dec
sub
push
adc
lret
cmpsl
iret
lds
fcoml
jp
or
sub
cld
cwtl
ret
jmp
ds
push
push
movsb
lcall
xor
mov
pop
fs
popf
ret
loopne
lock
into
add
in
jmp
or
jg
xor
add
or
movsl
test
mov
add
loopne
push
push
cli
addb
loope
xlat
adc
cmp
stc
in
ret
xchg
inc
dec
mov
push
inc
sub
sub
leave
int3
test
pushf
and
clc
jns
or
pop
cmp
inc
push
out
fistps
adc
mov
fnstenv
std
and
in
mov
jnp
mov
jmp
and
xchg
or
xor
sbb
int
jmp
sub
fs
lea
in
jne
fadds
cli
dec
loopne
jmp
xor
ljmp
sbb
mov
mov
js
add
push
movsl
out
dec
lods
jne
addl
ror
mov
lods
add
sbb
cmc
sarb
push
loope
mov
inc
xchg
test
or
inc
jg
adc
ljmp
mov
add
sub
lock
aad
pop
mov
addr16
lods
mov
add
or
fwait
mov
mov
out
or
aam
int
push
push
adc
insb
xlat
jg
cwtl
dec
cmp
mov
push
aaa
pop
lods
cmp
add
addr16
inc
push
add
fmul
repnz
insl
fisttpl
adc
jo
jl
mov
out
push
mov
insb
nop
imulb
add
or
dec
dec
out
pop
hlt
mov
pop
ds
lea
pushf
lret
sbb
xchg
lret
loope
in
repnz
outsb
dec
popf
loopne
mov
push
lds
ss
jae
add
loope
scas
es
sahf
add
mov
fwait
insb
lods
and
popa
int
sbb
sub
test
jp
jp
mov
mov
lods
aaa
jecxz
adc
je
shrl
test
mov
cmp
adc
xor
enter
cmc
and
popa
jl
push
sbb
dec
xor
adc
call
mov
adc
mov
lret
dec
sbb
cs
mov
xchg
pop
fidivs
sub
push
adc
scas
int
mov
in
sub
jecxz
out
push
sbb
mov
xor
addl
popa
push
cmp
inc
into
pushf
cmp
or
divb
jmp
inc
cmp
push
mov
xor
xchg
movsl
sub
cmp
lods
das
or
sbb
or
movsb
cmpsb
iret
aam
fldt
mov
and
lret
add
sbb
cmpsl
int
repz
sub
ja
int
inc
fcmovb
xlat
call
jns
fdivrs
je
shll
std
sub
repnz
test
mov
xchg
pop
jne
push
addl
jmp
pop
pop
mov
insb
ss
cmp
add
out
pushf
cmp
nop
repnz
iret
sub
test
add
jp
inc
rol
xlat
stc
ja
mov
dec
jne
mov
in
call
cmp
mov
pop
cmp
cli
lock
add
test
pushf
nop
and
mov
adc
cld
mov
mov
out
cmp
sbb
lea
xor
add
xor
adc
mov
jl
popf
cmp
cmpsb
lret
mov
fwait
inc
sti
or
popa
rcl
popf
nop
addr16
xchg
sub
pop
jle
xor
imul
xor
or
popf
mov
iret
xchg
sub
addr16
inc
movl
push
inc
xor
jo
add
xchg
xchg
xor
or
cmpsl
adc
jge
sub
cmc
test
stos
and
cvtps2pi
cmp
cmc
fmull
aad
test
lods
xor
ret
test
xchg
es
call
jns
jmp
sbb
ds
sbb
lods
push
jnp
pusha
imul
movsl
xchg
sti
jb
or
fists
test
inc
xor
sbb
cmpb
and
movsl
repnz
add
shr
rcrb
scas
out
mov
jnp
aad
lods
mov
mov
push
leave
jo
pop
add
xchg
stos
popf
push
sub
xorb
pop
fdivrl
fwait
jno
insl
cmp
xor
dec
nop
sbb
cs
sub
ficoml
mov
jbe
dec
fstpl
popf
mov
mov
cwtl
or
sbb
push
daa
or
cmc
jae
dec
mov
pop
sbb
sub
in
jnp
or
mov
cwtl
jne
pop
out
mov
mov
pop
xor
push
subb
loopne
pop
dec
das
jnp
inc
cmp
adc
xchg
mov
lock
shl
aas
mov
fstp
lcallw
mov
and
push
add
push
ljmp
inc
push
mov
sub
int
rcl
inc
sahf
mov
call
fwait
sub
pop
mov
hlt
pop
roll
dec
cmp
cwtl
lret
sbb
xchg
xchg
inc
mov
xor
sbb
mov
fistpl
inc
subb
mov
movsl
dec
leave
sbb
and
adc
enter
negl
call
or
sbb
mov
inc
jb
push
inc
jecxz
pop
adc
xchg
jge
dec
fcomi
icebp
mov
and
insb
mov
insb
xchg
ja
stc
lods
leave
adc
mov
or
mov
fcmovnb
jge
hlt
cmpsl
outsb
mov
or
jecxz
lahf
cmpl
xor
sbb
xchg
dec
mov
pop
sahf
xor
ret
lea
inc
jecxz
and
mov
in
add
dec
iret
adc
inc
dec
in
gs
xchg
movb
jge
mov
ret
rorb
shlb
loop
mov
xor
and
sub
xor
sub
call
and
push
rorb
test
mov
into
pushf
cmp
and
imul
div
sbb
add
jg
les
out
aam
clc
stos
ret
js
lret
or
or
out
mov
inc
push
call
xor
xchg
mov
aaa
in
push
cli
push
loope
rcrl
ret
inc
xor
cld
inc
stc
sbb
or
inc
inc
fldt
insb
add
loope
mov
mulb
outsb
cmp
orb
adc
movsb
out
sbb
xorb
or
add
push
cltd
pop
and
test
lret
sbb
jecxz
ret
push
in
push
fidivrl
shll
lahf
cmp
js
ds
add
fwait
loope
pushf
cmp
daa
popf
inc
push
sbb
xchg
out
ljmp
enter
out
clc
sub
cmpsl
pop
mov
inc
inc
jp
mov
inc
pop
pop
xor
rorb
sbb
jns
push
sahf
nop
xor
mov
xchg
or
cmc
mov
int3
dec
inc
repz
push
adc
call
or
cmp
enter
test
jmp
push
push
xor
xchg
test
mov
pop
inc
xor
mov
mulb
mov
popw
movl
pusha
push
lret
lcall
mov
cmpsl
inc
mov
dec
cmp
cld
sub
dec
cltd
enter
adc
out
adc
push
mov
inc
jno
inc
mov
nop
repz
andl
clc
mul
mov
cmp
mov
xchg
dec
lock
inc
fwait
jae
cmp
jp
movb
and
out
dec
push
loopne
dec
pop
popf
adc
adc
leave
xor
lea
lcall
dec
jp
std
lret
ds
jo
pushf
lret
or
mov
adc
icebp
cld
jno
in
test
inc
xchg
aas
popf
dec
jp
rcll
out
out
xor
mov
out
inc
stos
push
sub
hlt
cwtl
mov
cmp
data16
popa
scas
pop
iret
and
jle
sbb
pusha
mov
lahf
subl
mov
pop
lret
dec
enter
mov
add
repz
stc
fildll
cli
outsb
int
inc
stos
xchg
dec
push
adc
hlt
sbb
pop
sahf
xchg
xchg
mov
retw
cmpsb
mov
lea
arpl
fimuls
jg
out
xchg
daa
jo
push
adc
push
movsl
lock
mov
dec
scas
dec
sti
fisubl
sahf
and
dec
leave
movsl
adc
xchg
ds
inc
push
iret
ljmp
mov
mov
divb
test
cli
push
inc
sarb
cmpsl
dec
inc
out
inc
push
repnz
in
sub
mov
push
push
adcb
or
std
and
mov
xorb
pop
cld
mov
es
adc
ds
cmp
lahf
and
jecxz
xchg
mov
jle
mov
fcmovnbe
mov
inc
sbb
lock
mov
add
xor
insl
add
mov
aad
ret
sbb
xchg
fstpt
call
out
mov
ss
sbb
mov
sbb
sbb
jne
mov
test
cld
xor
dec
lods
jb
iret
sahf
mov
xchg
fcmove
aaa
push
mov
out
dec
out
mov
push
fldl
insb
and
mov
out
add
mov
cltd
pusha
add
sbb
adc
or
scas
add
mov
push
imul
fwait
jle
arpl
fwait
stc
inc
cli
mov
xchg
adc
sbb
loop
ss
sub
pop
dec
mov
jg
add
std
enter
sub
sub
xor
mov
call
push
repnz
arpl
add
pop
jne
and
cmp
mov
cmp
pop
cmp
sti
das
sub
scas
aam
or
out
lds
add
cwtl
push
adc
repz
js
xchg
lret
test
cmp
ds
xchg
and
inc
ss
or
and
mov
lods
cs
or
sbb
and
xchg
mov
clc
mov
movsb
sbb
push
fisubrs
mov
sbbl
clc
repz
orl
cmp
mov
insb
mov
mov
xor
in
mov
shl
mov
cs
xor
jge
out
movsl
les
adc
call
xchg
test
pop
jmp
out
or
test
aaa
mov
lds
add
dec
shll
cmpsl
icebp
shll
jmp
add
and
outsb
addl
sbb
add
push
pop
aaa
cltd
lahf
dec
mov
or
inc
bound
repnz
jle
incl
pop
sbb
xor
lret
jle
add
pop
mov
sbb
int
cmp
pop
jl
mov
sahf
or
sub
sbb
inc
sub
das
pop
pop
shrb
xchg
cmp
rcr
inc
out
jnp
rcll
adc
outsl
out
adc
pop
nop
fidivrl
fiaddl
xor
adc
sub
jns
mov
xchg
outsl
imul
and
and
push
jle
cmpsl
cmpsb
add
or
inc
imul
jecxz
sbb
push
pusha
mov
mov
fmul
pushf
ss
sub
insl
iret
or
gs
cld
subl
sahf
inc
adc
jne
and
sbb
ds
dec
and
inc
pop
push
jns
cmp
add
mov
push
add
out
jp
imul
in
aaa
ss
js
or
movsb
push
mov
arpl
add
add
sahf
cmp
sub
push
in
ret
cmp
adc
call
enter
add
dec
nop
cmpsl
cmp
cmpl
add
clc
mov
mov
mov
push
mov
push
addb
pop
ds
popa
dec
adc
sub
xor
scas
mov
test
mov
xchg
js
fcmovb
inc
or
and
sub
sub
or
mov
fmuls
enter
mov
push
add
fadd
leave
in
add
loope
mov
sarb
in
cmpsb
data16
mov
mov
stos
adc
pop
outsb
pop
out
movups
ljmp
ret
sbb
dec
xor
jecxz
ror
das
test
push
sbb
push
sbb
xor
push
cmp
adc
fmulp
pushf
mov
enter
mov
rcr
test
gs
loop
sar
outsl
mov
push
rcl
xchg
cmp
testl
or
call
push
scas
sbb
movsb
sbbl
add
leave
inc
mov
enter
xlat
sbb
mov
add
xor
jge
mov
lret
bound
insl
adc
mov
nop
int
psrld
cmp
sti
xchg
mov
int3
pop
mov
arpl
add
movsl
adc
jne
mov
cmp
out
mov
lock
pop
rolb
push
cmp
adc
repz
pop
adc
xchg
jmp
sbb
inc
xor
sti
sahf
pop
negb
xchg
dec
imul
xlat
sbbl
ljmp
insb
xchg
nop
jg
mov
sbb
fstl
call
push
inc
xchg
xor
xor
adc
jecxz
cs
ret
inc
inc
mov
pop
xor
mov
sbb
mulb
push
jae
inc
mov
lods
cmc
sub
sbb
adc
xlat
hlt
arpl
cwtl
mov
adc
cmp
sub
jl
fadd
clc
test
lock
lret
das
push
cmp
adc
push
stos
cmp
das
scas
scas
lock
hlt
into
enter
sub
ljmp
ror
mov
or
div
jecxz
add
push
les
test
cltd
sbb
jmp
or
mov
rol
mov
cmp
xor
mov
sahf
repnz
inc
fidivs
rorl
cmp
ljmp
dec
mov
loopne
jle
jp
mov
fs
lret
sbb
mov
jo
lea
xchg
or
leave
cmp
mov
nop
cmc
or
xor
and
push
lret
and
sti
pop
fmuls
pusha
bound
jb
int
sbb
sub
rolb
push
or
cltd
sbb
adc
shlb
lcall
pop
adc
lock
dec
push
scas
test
and
ror
adc
sub
pop
jge
add
jmp
repnz
xor
cmp
xor
addb
in
cli
dec
ret
jb
sbb
aas
imul
shll
stos
jmp
add
rcl
mov
dec
mov
mov
insl
sub
rorl
push
stos
pop
mov
mov
mov
sbb
mov
bound
clc
stos
or
mov
iret
pop
mov
aaa
fwait
sbb
in
pop
sub
add
out
test
and
adc
sbb
jbe
roll
andb
gs
or
icebp
push
mov
flds
mov
mov
aam
out
sub
movsl
movsb
imul
imulb
jge
mov
or
std
popa
je
shlb
sub
fistpll
push
cs
pusha
xchg
sbb
push
or
cld
push
outsb
cmpsl
fistpl
subb
fiaddl
cld
add
lock
inc
mov
fsubrl
or
dec
dec
inc
cwtl
repnz
test
mov
push
bnd
pop
scas
push
je
cmp
mov
scas
popf
add
push
adc
inc
push
mov
jge
out
mov
or
or
loop
jmp
pop
out
fcoml
nop
out
out
mov
mov
das
dec
xchg
inc
les
or
ds
iret
sahf
inc
inc
jns
or
iret
loop
xlat
ja
cmp
arpl
lock
lods
jnp
cld
jae
cmp
adc
or
xor
scas
and
pop
cmpsb
dec
dec
xchg
pushf
inc
daa
pop
mov
rcr
xor
and
aad
fldt
cmp
jae
xchg
mov
mov
mov
ret
mov
xor
mov
scas
fs
cmp
mov
test
adc
pop
push
dec
mov
shll
pop
jge
loopne
pushf
cli
loop
lock
es
mov
out
add
mov
cltd
or
inc
stc
or
dec
imul
loope
xorl
or
cltd
xor
arpl
je
sub
cmp
jb
add
int
push
hlt
mov
cmp
xchg
les
cmc
enter
sub
cmp
jbe
cmp
mov
xchg
pop
and
mov
movsb
sbb
xor
fisubrs
rorb
shll
xor
push
or
loopne
loop
ret
push
insb
call
mov
jb
xor
int3
sbb
mov
sbbb
push
jge
flds
je
shrb
or
push
sbb
jns
xchg
cld
lea
repz
push
rorb
cmp
mov
xor
mov
sti
cli
loope
jbe
mov
repnz
popf
inc
jb
sub
shrb
inc
pusha
dec
shll
loopne
fadds
push
or
sidtl
push
pop
ljmp
mov
dec
dec
pop
dec
test
cmovno
in
out
into
shlb
cmp
aam
or
mov
mov
shrb
fidivrl
sbb
jb
cld
push
sub
cmp
les
adcb
ret
lret
jo
mov
bound
xchg
sbb
das
in
xor
dec
xchg
push
ret
jecxz
push
push
xchg
ds
push
dec
loop
inc
cwtl
cmpsl
adc
shlb
lods
mov
sub
cs
fucomi
fstps
movsl
pop
jp
repz
scas
mov
xchg
mov
mov
and
mov
outsb
ss
hlt
ljmp
es
dec
pop
ljmp
test
xchg
xor
das
mov
repnz
stc
notl
cs
addb
loopne
inc
insb
inc
movsl
pop
cmpsb
pushf
push
xor
ss
pop
add
xlat
fisttpl
mov
enter
ds
inc
push
pop
nop
xorb
fstps
mov
pop
and
ljmp
push
dec
mov
mov
repz
jmp
or
adc
or
cmpsl
daa
arpl
rcrb
idivb
jo
clc
test
add
xchg
fstpl
sbb
push
in
test
lock
inc
cbtw
cmp
add
mov
cmpsl
loopne
or
pop
mov
std
daa
mov
inc
pop
sub
jns
add
cmp
and
cmpsb
sbb
int
push
and
mov
add
hlt
and
pop
mov
add
loope
out
mov
imul
cwtl
dec
xchg
push
lea
mov
sbb
jbe
dec
sbb
enter
mov
je
pop
and
xor
xchg
mov
gs
outsb
push
xor
push
in
mov
pop
out
jae
sub
inc
or
fisubl
push
insb
add
loope
pop
out
lret
push
arpl
mov
jbe
mov
xchg
fiaddl
jbe
mov
add
hlt
xchg
aad
xor
jbe
out
sbb
mov
push
or
shl
xchg
cs
xor
jbe
out
movsl
les
mov
mov
cmp
mov
mov
push
fldl
insl
sub
or
lea
repz
push
rorb
cmp
mov
dec
mov
clc
inc
mov
test
popa
fadd
ja
mov
xchg
ja
loop
or
loope
or
data16
mov
xchg
fisubl
cmp
fadd
jbe
mov
mov
mov
je
sub
cmp
inc
test
imul
jb
inc
push
xor
out
lds
inc
lock
cmp
mov
inc
dec
ljmp
lcall
xchg
jg
add
sub
cmp
xor
ret
mov
popa
adc
insb
subl
inc
cmpsl
push
add
out
mov
incb
push
cmp
adc
adcb
shl
enter
mov
sbb
scas
sarl
inc
cmpsb
or
jg
inc
shlb
or
pop
mov
arpl
sbbl
gs
scas
push
add
xor
fwait
sbb
jmp
shrb
leave
rolb
sub
les
mov
jo
fwait
inc
sarl
or
mov
inc
test
add
push
scas
inc
add
pop
test
psubusb
xorl
inc
jg
push
shll
fisubl
and
or
xchg
jnp
inc
fldt
shl
addl
or
popa
cwtl
jmp
dec
dec
rcrl
push
adc
xchg
mov
adc
test
push
rcll
mov
jae
flds
xchg
mov
es
sahf
jbe
jb
xor
orl
xlat
stc
push
xlat
pop
pop
insb
lcall
push
sub
mov
scas
dec
pop
enter
xchg
sub
xor
push
sub
sbb
jp
idiv
and
in
xor
xor
lret
inc
stc
mov
cmp
icebp
sub
stos
dec
sti
lcall
jecxz
ds
inc
in
mov
hlt
push
push
push
leave
loopne
push
aad
sbb
pop
movb
sar
push
cmp
adc
dec
lahf
xor
enter
jp
fldt
fdivrs
sbb
mov
repnz
imul
lods
mov
push
js
cmp
xchg
lahf
fsubp
fldenv
sub
lahf
mov
aad
rorl
pop
mov
adc
cli
in
mov
ffree
sbb
mov
cmp
xchg
mov
es
sbb
sti
idiv
pop
fistpll
fcmovnb
addr16
ret
jbe
dec
adc
jecxz
mov
imul
aas
sub
and
das
adc
jp
lds
pop
mov
pop
cmp
xor
add
sub
cmp
pop
adc
rol
pop
push
movsl
add
add
gs
popf
jns
sahf
mov
lods
mov
inc
sub
lds
adc
mov
push
adc
jl
mov
and
out
dec
faddl
adc
into
rorb
pop
adc
push
adc
or
jo
adc
imul
in
loopne
xchg
jl
adc
xor
pop
mov
xchg
jle
ja
push
movsb
push
xlat
data16
jbe
or
cwtl
push
adc
ret
cltd
mov
dec
jo
adc
aaa
cmc
outsl
ret
xchg
movsl
jne,pt
shrl
add
jne
dec
ret
mov
and
mov
inc
fnstenv
or
cs
jae
and
adc
adc
jae
cmp
dec
or
lods
clc
pop
fimull
repz
int3
frstor
sti
out
jmp
and
xchg
push
adc
fcomps
mov
lret
xchg
cs
mov
push
mov
icebp
or
push
adc
out
adc
push
adc
cs
sub
cwtl
lods
cmp
push
das
or
hlt
int
lock
add
popa
clc
popa
lds
pop
ret
fidivs
test
imul
inc
jae
adc
sub
out
out
mov
mov
jmp
outsl
incl
hlt
int
lock
add
popf
and
xor
xor
das
mov
fs
add
cmp
les
mov
xchg
je
fwait
sbb
jmp
das
mov
outsl
incl
cmc
int
xchg
jbe
dec
lret
add
cmp
fsubrs
insb
add
pop
cmp
dec
sbb
or
adcl
out
mov
or
icebp
loop
cmp
jmp
push
clc
sti
outsb
jmp
popl
das
or
sahf
mov
push
enter
or
pushf
rcrb
adc
shrl
aad
lcall
xchg
push
cmc
xchg
jne
add
int
ja
mov
rcr
push
sub
lock
xchg
movb
ss
test
push
adc
cmp
insb
inc
jb
push
mov
dec
lock
inc
rorl
inc
pusha
pop
loopne
sbb
push
adc
fs
xchg
xchg
pusha
xor
aam
or
jge
cmp
mov
insl
std
sbb
rcll
jb
jle
xchg
sub
mov
dec
ljmp
jmp
sti
into
inc
sarl
xlat
xchg
sti
rolb
xchg
jge
es
lret
hlt
pushf
push
pushf
push
pop
pop
or
jmp
and
shr
lea
push
adc
aaa
push
inc
xchg
pop
nop
or
lock
pop
add
xor
adc
scas
mov
sbb
shlb
addr16
out
enter
mov
dec
pop
fidivl
std
jne
out
mov
xor
imulb
or
xlat
mov
adc
mov
dec
adc
je
push
lret
jo
mov
push
dec
push
ja
test
fmull
push
icebp
andl
xchg
add
pop
gs
mov
insb
jge
cmp
mov
mov
iret
sahf
sti
std
pop
stos
addb
sub
fcomip
in
divb
adc
sub
xor
cs
loopne
jno
sub
std
mov
pop
sbb
mov
mov
lods
mov
rcrb
out
rolb
cmp
or
or
bound
jge
mov
mov
addr16
out
xorl
sbb
adc
mov
inc
mov
inc
mov
jge
or
sbb
pop
sbb
jns
add
inc
mov
push
test
mov
test
xchg
push
jmp
mov
cmp
lds
mov
repz
mov
mov
arpl
sti
insb
jg
icebp
loop
adc
cs
cmp
iret
sahf
xchg
pop
int
xor
jg
mov
pusha
daa
or
or
mov
lahf
cmp
xchg
fnstenv
sbb
xchg
add
xor
push
push
cs
testb
push
xchg
xlat
hlt
cmpl
inc
or
nop
popf
mov
pusha
adc
mov
repnz
push
adc
sub
jecxz,pt
push
dec
jg
out
gs
in
sahf
xchg
outsb
stc
pop
xor
and
jp
mov
mov
pop
jmp
leave
es
call
sbb
out
xor
or
lock
negb
mov
outsl
ds
mov
cmp
adc
mov
mov
fxch
int
cltd
lock
dec
mov
fdivs
adc
xchg
dec
imul
mov
sbb
pushf
cmp
push
imul
movsl
xor
shl
iret
popa
or
shl
out
pushf
outsl
aaa
nop
out
cwtl
lock
adc
dec
iret
mov
out
call
adc
pop
mov
or
add
or
jne
je
shl
mov
cmp
pop
adc
lret
xchg
or
cld
hlt
in
pop
adc
test
je
mov
adc
xor
rorb
incl
adc
insb
mov
mov
or
test
xor
inc
inc
insb
shll
cld
jecxz
test
out
sbb
mov
pop
ljmp
movsl
mov
adc
nop
jl
dec
push
inc
add
adc
pop
adc
push
or
repz
adc
jmp
xchg
mov
pop
adc
jne
pop
jbe
add
dec
stos
popa
mov
fwait
js
pop
adc
cli
hlt
xchg
jmp
jbe
adc
pop
adc
inc
mov
jns
test
add
adc
mov
pop
push
lcall
push
or
das
loopne
orb
in
pop
adc
cmp
inc
push
shlb
mov
cmp
fwait
mov
mov
arpl
out
push
inc
pop
decb
lret
dec
in
fucom
dec
and
in
adc
in
loopne
inc
mov
fdivr
pop
adc
pop
sbb
inc
cmp
dec
mov
sub
or
adc
mov
ds
aam
out
adc
xchg
mov
sbb
sbb
or
loope
jo
xchg
mov
push
nopl
or
adc
lods
jno
add
cwtl
fisubrs
adc
push
mov
insl
test
pop
adc
mov
js
mov
hlt
xor
pop
adc
mov
cmc
mov
adc
fdivs
pop
adc
jb
or
mov
or
test
mov
cmp
and
fsub
pop
adc
inc
loopne
outsb
in
mov
pop
adc
and
push
mov
jo
pop
adc
push
jle
fistpll
xchg
add
adc
outsl
es
js
jne
pop
adc
or
es
fsts
xchg
add
pop
adc
mov
mov
mov
adc
lret
xchg
data16
or
imul
jecxz
xchg
sub
or
sub
mov
std
mov
adc
adc
popa
inc
push
jno
rol
add
pop
adc
popa
ret
xchg
in
stc
decl
js
cmp
cmp
pop
jne
sbb
adc
xchg
mov
xor
cmp
sub
push
or
xor
jae
into
lret
cmpsb
mov
out
stos
push
or
adcb
inc
mov
mov
mov
fcoml
or
in
pop
mov
push
inc
mov
pop
or
push
mov
shll
push
stos
inc
pop
or
or
out
mov
movsb
scas
push
jb
or
data16
je
xchg
sub
pop
or
jno
gs
xchg
jns
outsl
sbb
cmpsb
sub
adc
and
pop
leave
je
mov
pop
adc
lret
gs
push
in
pop
adc
es
xchg
dec
lds
ljmp
sbb
sbb
or
cmpsb
push
cmp
xchg
js
dec
push
push
inc
sbb
popa
xchg
jns
dec
pop
lock
pop
adc
cmpsb
mov
clc
sbb
adc
out
xor
or
out
mov
popf
hlt
xor
adc
fcompl
jne
in
ljmp
gs
push
or
loope
xchg
in
daa
addb
adc
popa
ret
xchg
in
mov
sbb
pushf
cmp
push
adc
pop
adc
addr16
adc
pop
adc
add
jae
xor
sbb
pop
adc
je
shl
mov
in
adc
gs
xchg
jns
outsl
and
mov
xchg
sbb
mov
sub
or
stos
test
sbb
xor
inc
je
add
or
push
inc
loopne
xchg
in
push
sarb
push
ret
xchg
mov
adc
xchg
jns
jbe
sbb
out
xor
shl
int
cld
pop
adc
inc
in
sahf
insl
lea
in
pop
adc
arpl
test
mov
ljmp
adc
fcmovnu
stos
dec
shr
out
add
aam
js
loopne
adc
mov
out
nop
push
sub
pop
inc
loopne
mov
popa
fdivl
cmp
or
dec
dec
fadds
cmpsb
mov
or
adc
xor
in
adc
pop
adc
add
pop
adc
and
cmc
aam
dec
cmp
pop
adc
lcall
pop
adc
and
jl
movsb
loopne
or
lret
pop
xor
and
jns
push
or
xor
mov
pop
hlt
repnz
adc
sbb
icebp
pop
mov
je
dec
in
jmp
adc
mov
test
xchg
in
cli
pop
adc
adc
testl
gs
sub
adc
mov
in
sub
pop
adc
scas
add
pop
and
push
cwtl
xor
adc
xchg
aad
add
sbb
adc
mov
rol
sarb
jns
dec
push
popa
jmp
ret
pop
adc
loope
fsubrs
pop
adc
cwtl
popf
or
test
icebp
pop
adc
sub
mov
adc
in
push
inc
mov
out
dec
aaa
xor
or
pop
cs
cmp
jg
and
in
pop
adc
ja
in
or
testb
cld
mov
pop
out
lock
adc
push
add
mov
adc
mov
ret
je
or
cwtl
cmc
add
mov
testl
clc
mov
cld
xchg
popf
mov
or
adc
or
rcr
icebp
or
pop
adc
mov
repz
outsb
mov
adc
lods
imul
arpl
sbb
pop
adc
lret
or
mov
cmp
or
stos
fisttpll
sbb
lock
pop
adc
xor
jge
movsb
cld
pop
adc
fs
ret
shl
lret
imul
mov
popa
ret
shl
iret
popa
or
shrl
out
pushf
outsl
aaa
nop
out
in
sti
pop
adc
dec
iret
mov
out
faddl
or
mov
and
sbb
push
add
or
data16
je
xchg
jo
in
adc
gs
rcl
ljmp
add
push
dec
lds
or
pop
add
xchg
int
cwtl
jl
or
jo
cmp
pop
jne
out
pop
adc
and
push
pop
jno
loope
adc
mov
out
and
push
adc
shll
or
adc
lret
or
mov
cmp
pop
adc
and
pop
lock
or
inc
jge
xchg
out
adc
push
jno
ret
shl
lret
imul
je
popa
ret
shl
iret
popa
or
rcrl
out
pushf
outsl
aaa
nop
out
xchg
or
adc
dec
iret
mov
out
lods
repz
adc
and
sbb
push
or
or
data16
cmp
pop
nop
fbstp
ljmp
lret
rcl
ljmp
mov
xchg
dec
lds
pop
adc
ret
dec
int
cwtl
incl
popf
cmp
cmp
pop
jne
testb
lret
xor
sbb
ss
pop
jno
invd
adc
mov
out
and
push
add
shlb
or
hlt
pop
adc
lret
xchg
das
or
mov
fmuls
or
stos
lock
sbb
and
add
pop
adc
xor
inc
jg
dec
add
adc
inc
jae
rcl
leave
imul
in
adc
gs
lret
gs
out
pop
adc
or
mov
xchg
jmp
sbb
adc
mov
pop
adc
sub
or
pop
adc
xor
xchg
dec
or
xor
adc
and
rol
cwtl
clc
or
jecxz
adc
mov
xchg
sbb
xlat
mov
pushf
lock
adc
out
sub
xchg
mov
adc
xchg
sbb
or
pop
adc
jge
sbb
sbb
pop
adc
shrb
movsl
push
adc
mov
in
hlt
sahf
mov
ja
add
xor
or
cmp
cwtl
mov
add
adc
sbb
outsl
push
sbb
pop
adc
sahf
pop
iret
in
inc
xor
pop
adc
mov
testl
xchg
shll
push
mov
in
adc
loope
std
aaa
hlt
je
sub
or
adc
mov
mov
incl
adc
sub
out
push
mov
loope
adc
popa
flds
lret
loope
jge
filds
adc
scas
jno
pop
adc
in
sbb
adc
add
jge
or
sub
cltd
xor
adc
or
in
jmp
sub
mov
or
cmp
or
fstpl
incl
adc
jne
pop
adc
or
daa
dec
push
in
or
fdivl
scas
sbb
out
inc
aad
pop
mov
mov
pop
adc
lds
xchg
xchg
adc
push
xchg
addr16
cmpsl
jp
pop
pop
adc
aad
aad
pop
adc
mov
or
arpl
pop
dec
jno
or
or
scas
mov
and
or
sbb
push
push
push
cmc
jp
xchg
lret
inc
rdtsc
stos
xchg
into
arpl
lods
jg
mov
or
out
loopne
inc
shll
arpl
and
lds
lock
rolb
adc
mov
mov
add
js
sahf
lahf
mov
add
pop
fidivs
pop
mov
push
jae
inc
jg
inc
xor
inc
add
inc
push
mov
mov
inc
out
push
dec
add
lret
gs
mov
call
int
xchg
mov
sbb
pop
push
lds
out
jno
js
dec
mov
mov
je
push
push
cmp
push
ja
stc
gs
mov
ret
and
lcall
outsb
dec
dec
out
push
dec
dec
sbbl
iret
add
out
cmp
pop
aas
xor
adc
mov
mov
push
cmp
mov
in
mov
orl
inc
push
int
mov
movsb
sbb
int3
rclb
rolb
add
clc
xor
or
in
xor
mov
xor
pop
cmp
adcl
add
fadds
mov
bswap
sbb
or
les
xchg
xor
sbb
sbb
outsl
ret
xchg
cs
arpl
cmc
and
jge
sbb
dec
sbb
mov
mov
fbstp
lret
sbb
testb
insb
mov
sub
mov
pop
scas
xor
or
pusha
mov
jmp
push
adc
lds
rcrb
xchg
in
xor
lcall
xor
fs
gs
jno
pusha
out
push
sub
in
xor
inc
mov
sbb
movsl
popw
push
ja
pop
sub
jl
ja
or
push
cmpsl
lock
sbb
ffree
jno
inc
mov
imul
cmp
and
adc
out
push
xchg
je
xor
popa
adc
mov
inc
int3
stos
insb
inc
push
andl
test
xchg
xchg
add
push
inc
mov
pushf
inc
cmp
ret
lcall
and
rorb
inc
fildl
loopne
inc
pop
inc
fidivrl
lods
xchg
sbb
xor
or
lea
arpl
ja
inc
cmp
mov
out
jecxz
in
loop
push
stc
outsb
mov
or
into
xor
sahf
xlat
xor
mov
pop
push
add
adc
xchg
into
add
mov
les
fisubl
mov
cmp
jp
aas
mov
notl
push
dec
int
inc
popa
xor
sub
cmp
pop
je
cmp
mov
popl
mov
test
pop
and
xor
lret
lcall
sbbb
inc
test
scas
inc
dec
push
mov
mov
push
lahf
jg
xor
add
mov
xchg
jge
ja
add
pop
mov
jmp
addr16
dec
xchg
shr
mov
mov
mov
cmp
mov
lahf
in
movsl
push
int
fwait
and
dec
adc
sub
jecxz
ja
pop
jp
inc
mov
cmpsb
dec
dec
imul
out
jns
dec
pop
pop
aad
ficoml
fdiv
cmpsl
xchg
rcl
pop
rol
lds
adc
jns
dec
pop
int
lds
adc
jns
stos
mov
pop
adc
push
or
mov
pop
adc
adc
jne
in
mov
enter
or
enter
or
lds
adc
lcall
stos
stos
imul
fiaddl
lret
xchg
cs
lock
outsb
sbb
test
mov
sub
jl
cmp
cmp
push
add
or
mov
add
adc
dec
mov
mov
dec
int
jecxz
out
push
ljmp
push
cmp
pop
dec
push
jb
pop
mov
adc
repz
cmp
pop
rcl
lea
sahf
je
mov
xchg
repnz
xchg
mov
mov
mov
sarb
add
pop
or
push
add
or
iret
je
jo
adc
sar
mov
xor
pop
cmp
jae
sub
popf
or
jo
mov
fs
stos
sbb
pop
cmp
xor
adc
aam
xor
push
mov
jo
dec
pop
and
pushf
das
xchg
test
mov
xor
call
dec
fisubl
mov
sbb
in
cmp
out
push
jne
cli
adc
dec
lret
fdiv
inc
push
xor
mov
add
incl
mov
jl
adc
call
jg
xchg
repz
push
mov
jne
mov
cmp
push
adc
xchg
test
ficoms
sarl
orl
or
icebp
or
jno
adc
call
shr
mov
cli
xchg
add
pop
or
mov
add
fwait
iret
stc
cld
mulb
test
sbb
or
jl
push
popf
cmp
inc
pop
push
sbb
sub
mov
fsubrs
loop
sbb
imul
mov
sar
cltd
inc
pop
js
xchg
mov
sub
bound
mov
lds
xchg
fidivrl
aas
stc
lods
mov
setb
adc
sbb
das
inc
sub
ss
out
aad
mull
ret
or
mov
fisttps
cmp
dec
sbb
loope
inc
ret
mov
xchg
clc
popa
fcomip
in
loopne
jbe
add
xchg
imul
jae
or
mov
mov
cmovb
jnp
arpl
cs
in
sub
fldl
mov
and
cmp
adc
pop
in
ds
add
sarl
xchg
lea
not
clc
je
arpl
enter
stos
mov
push
jno
cwtl
mov
addl
out
mov
or
mov
repnz
int3
sub
mov
lret
mov
add
cs
ficomps
roll
shl
rcl
xor
xchg
lret
mov
push
dec
loope
sub
cmp
sub
fsubl
lret
add
jmp
test
xor
mov
roll
jae
push
lock
addl
lds
int3
add
dec
jg
and
jl
mov
movsl
adc
mov
jnp
cmc
or
adc
inc
and
or
push
enter
add
rorl
push
clc
inc
jge
mov
or
xor
adc
push
adc
push
push
idivl
xchg
fmuls
std
call
sub
xchg
mulps
push
out
js
or
sbb
cmpsl
or
rorb
cmc
out
jle
shlb
pop
or
ja
cld
jo
adc
scas
jmp
sbb
je
xchg
daa
push
xlat
mov
jle
and
cli
mov
push
js
iret
and
push
adc
out
xchg
inc
jo
repz
lock
or
hlt
iret
leave
hlt
mov
inc
int
xor
sbb
mov
cmp
icebp
cmc
adc
push
sub
js
or
fs
push
jl
into
pushf
shrb
cmp
sub
cs
adc
push
loopne
xchg
icebp
test
insl
sbb
xchg
movsl
gs
push
lds
jmp
out
fimull
mov
sbb
adc
push
subb
rcrl
jae
ret
or
mov
gs
idivl
mov
pop
fs
xor
xchg
xor
adc
mov
js
dec
push
fists
pop
mov
pop
xchg
xor
sbb
add
adc
or
cmp
cs
mov
rolb
push
call
pushf
icebp
jns
ja
stc
movsl
gs
xor
outsb
pusha
sub
lcall
sbb
pop
mov
add
xchg
mov
mov
lret
pop
subb
cs
inc
sbb
scas
clc
sbb
dec
add
lds
jae
mov
out
loopne
push
mov
mov
ret
sar
not
mov
sahf
cmp
fnstsw
bswap
push
sbb
inc
push
cmp
enter
sub
pop
and
xchg
jg
mov
add
mov
cwtl
int3
shlb
cwtl
bound
shl
iret
sahf
shlb
mov
mov
cmpb
bound
icebp
loop
jo
adc
test
cmp
repz
jg
dec
push
sub
inc
mov
outsb
cmp
lods
push
into
lahf
xchg
xlat
in
sub
add
sbb
pop
cmp
clc
insb
xchg
jno
bound
pop
arpl
sub
and
xor
and
adc
imul
lret
lcall
int3
xchg
test
xor
lods
xor
data16
adc
daa
ret
xchg
dec
dec
add
in
lods
cmp
test
cmp
jno
addr16
stos
popa
cmc
xchg
sub
imul
jo
cmpsb
cwtl
aas
dec
and
lods
and
dec
jbe
push
lock
icebp
ret
mov
rcrl
out
xor
out
cmp
dec
scas
out
sahf
pusha
loopne
xor
movsl
xchg
inc
xchg
jg
repnz
lods
cli
push
xor
out
push
outsb
dec
scas
or
xor
push
rcrb
add
scas
stos
out
cmpsl
and
fimuls
sbb
mov
loope
in
out
jbe
sbb
es
push
adc
xchg
lods
clc
in
into
loopne
popa
and
int
mov
imul
cmp
out
push
add
sub
mov
stos
and
mov
movsl
xchg
cmp
stc
pushf
fsubrs
out
call
jp
or
movsl
outsl
inc
mov
hlt
xchg
shlb
in
rclb
adc
cmp
mov
arpl
out
in
mov
into
mov
or
push
mov
out
sahf
es
loopne,pn
mov
mov
sub
in
or
popf
xor
or
inc
lods
mov
pop
adc
cld
jo
adc
stos
push
jp
inc
mov
cmpsb
dec
test
mov
sbb
or
and
sbb
pushf
out
cli
mov
packuswb
int
and
test
sub
cmp
xor
lret
jp
dec
push
bnd
pop
scas
push
je
sbb
mov
inc
pop
jl
cmp
xchg
add
iret
mov
pusha
test
out
jo
jo
ret
es
fdivl
xchg
cmovns
mov
lock
mov
sbb
xor
sub
lahf
xchg
popa
call
push
jl
into
pushf
rorb
loop
fsubs
jae
leave
in
mov
repz
sbb
xchg
inc
fldlg2
xchg
outsl
rcrl
jne
jmp
sub
pop
fwait
hlt
insl
inc
sti
in
cmp
pop
xor
xor
mov
dec
xchg
or
rolb
xchg
xor
adc
popf
mov
dec
pop
sub
loopne
test
cs
sub
out
in
xchg
xchg
mov
lcall
push
inc
imul
idiv
lea
scas
mov
or
int
and
ret
pushf
cmp
add
or
xchg
mov
int
sbb
in
scas
repz
fs
and
ret
outsl
xor
les
cmp
jne
shrb
int
dec
ljmp
lahf
mov
pop
nop
rcrl
mov
pop
cs
scas
fcomp
iret
sahf
clc
inc
jns
add
lcall
dec
into
or
repnz
shrb
xor
mov
inc
xor
std
das
shl
pmulhuw
repz
loop
mov
sub
into
sahf
dec
or
int
or
pop
mov
push
adc
dec
push
jne
pushf
jae
ja
into
sahf
dec
lret
clc
jge
push
xor
or
or
jae
pushf
fsts
stc
notl
mov
mov
fistl
xchg
das
add
and
sub
pop
pop
cmp
and
jno
bound
imul
xor
lea
ss
dec
rcrb
sub
rcll
shl
movsl
xor
push
es
std
mov
sahf
fisubl
roll
or
jp
add
adc
push
iret
jecxz
test
dec
fcomps
mov
mov
stos
popa
subl
adc
mov
cld
jo
adc
repnz
fsubrs
or
push
ret
jecxz
sbb
inc
adc
adc
adc
mov
dec
mov
xor
push
or
and
jno
adc
fidivl
stos
jno
stos
xor
pop
arpl
pushf
push
stc
add
pop
or
and
pop
or
pop
test
jae
decl
mov
int
aaa
jbe
insb
hlt
loopne
push
sbb
pop
rcrb
adc
rorb
mov
mov
in
stc
sarl
sbb
jecxz
mov
mov
cmpxchg
adc
jg
xor
das
mov
add
inc
movsl
shlb
mov
fnstcw
inc
push
imul
push
push
gs
stos
adc
jb
sbb
mov
jmp
dec
fwait
pusha
xor
jbe
or
pusha
sbb
fbstp
mov
add
xchg
and
push
or
pop
ret
mov
jge
adc
in
pop
hlt
les
or
mov
fxch
cld
outsb
roll
sbb
cmp
sahf
bnd
test
dec
ds
mov
sahf
ja
call
les
xor
bound
adc
pop
mov
jmp
jp
cwtl
mov
or
pop
push
cld
add
jns
sbb
xchg
sbb
mov
push
push
push
pop
adc
xor
or
push
sbb
adc
inc
jne
aaa
sbb
sub
adc
xchg
push
sbb
pop
rcrb
adc
jnp
popf
pop
cmp
pop
mov
sbb
out
xor
or
sbb
movsb
pushf
push
jne
shll
lock
jno
sbb
add
out
cld
jo
adc
hlt
xchg
loope
xchg
inc
repz
fidivrl
push
adc
xlat
insl
rolb
xchg
lock
lret
out
pushf
mov
dec
mov
cmp
out
add
lods
repnz
mov
mov
xor
or
loop
xor
sub
cmp
ljmp
add
out
test
pop
adc
inc
iret
in
dec
lods
lods
lds
sbb
popa
nop
or
mov
jbe
mov
faddl
adc
add
mov
sub
dec
pop
shl
jno
cwtl
push
adc
pop
shl
cwtl
push
adc
and
lds
cwtl
push
adc
push
mov
xchg
movsb
faddl
adc
cwtl
push
adc
or
push
or
push
adc
fcoml
mov
fcomps
out
mov
lcall
cs
pop
fdiv
test
cmp
lea
shlb
outsl
mov
lcall
das
pop
push
fs
addr16
cmp
push
dec
pop
fs
ficoml
es
mov
cmp
mov
repz
mov
xchg
or
jg
ds
mov
lods
pop
inc
dec
loope
pushf
adc
pop
mov
mov
lret
and
mov
je
jl
ret
add
icebp
sub
sbb
lahf
aam
xor
xchg
insl
jle
dec
mov
sbb
add
dec
popf
mov
mov
mov
js
inc
cld
test
pop
jg
insb
jl
adc
ljmp
xchg
jns
das
adc
jecxz
ljmp
out
lret
je
mov
icebp
adc
fsubs
cmp
sbb
insb
inc
jb
aad
out
xchg
ret
data16
or
popf
push
lea
xchg
mov
daa
sbb
xor
xor
mov
add
mov
fs
fnsave
imul
les
or
lods
dec
xchg
es
fnstenv
in
jb
das
jl
lds
and
cli
mov
sbbl
push
or
cmp
int
pop
pop
mov
push
cwtl
out
mov
or
out
sarb
fs
cltd
lods
mov
mov
je
subb
pop
dec
data16
into
mov
inc
cmpsl
push
xchg
stc
lcall
movsl
ljmp
adcb
fiaddl
gs
adc
ret
push
sub
lds
adc
cmp
xor
or
enter
mov
push
or
repz
or
fisubrl
or
sub
or
ss
xor
or
sti
mov
pop
movsb
imul
cli
mov
stos
pusha
hlt
out
pop
ficoml
fimull
xor
jae
notb
flds
adc
hlt
inc
ret
call
or
xlat
pop
pushf
pushf
aaa
sarl
xchg
inc
push
movb
stc
cmp
adc
add
and
enter
sbbb
fidivl
dec
test
adc
jmp
jb
es
addl
out
test
jo
push
adc
or
adc
cs
cltd
push
adc
push
xchg
cltd
push
adc
std
mov
sub
jge
in
lods
loop
lea
mov
sbb
imul
adc
cmp
mov
popf
mov
imul
shll
arpl
mov
or
xchg
mov
pop
lock
cmp
data16
mov
arpl
movl
cli
xor
adc
outsl
push
lcall
push
adc
push
lds
and
fwait
mov
jge
ret
orb
and
jb
inc
clc
sub
loope
push
dec
lret
adc
mov
sub
fucom
fnstcw
lretw
pop
in
pop
mov
adc
sahf
pop
dec
lock
ss
jecxz
out
test
pop
adc
cld
lahf
sbb
movsb
faddl
adc
ret
faddl
adc
call
movsb
fwait
xor
and
hlt
and
rcrb
mov
insb
push
sahf
mov
adcl
inc
sbb
or
mov
popa
mov
push
dec
pop
int3
pusha
sub
out
lea
shlb
cmpl
cs
cwtl
test
or
adc
lods
or
aad
mov
cmp
push
jne
pushf
jae
shl
fdivrs
in
repz
adc
ret
test
pop
adc
dec
iret
in
std
movsl
sbb
mov
adc
scas
mov
or
in
stc
mov
clc
ja
cmpxchg
dec
dec
mov
out
and
inc
xchg
inc
mov
inc
ror
adc
into
xchg
sbb
dec
out
xchg
xor
popf
ffree
pusha
cmp
xor
add
mov
dec
imul
lcall
pop
out
fstp
ja
ret
or
xor
or
movsl
rorb
push
add
xor
cmp
inc
jg
outsb
cmp
mov
aad
ret
in
addr16
push
call
cltd
leave
insl
sti
in
mov
dec
or
loop
xor
xchg
adc
ss
in
movsl
ret
int3
sub
mov
sbb
out
adc
in
mov
adc
jns
inc
lock
popf
dec
cmp
loopne
lret
imul
stos
mov
dec
push
sub
push
adc
fs
dec
test
xor
lret
mov
push
xor
sbb
xchg
dec
cmp
cmpsb
xor
add
lods
test
xchg
cmp
nop
addr16
repnz
xor
or
stc
fistpl
pop
int
xor
or
movsl
pop
jnp
add
pushl
xor
or
pop
cld
lea
pop
je
push
adc
and
loop
outsb
mov
sbb
fcoms
mov
jae
fistpll
adc
das
push
mov
or
mov
rclb
popa
push
pop
xor
or
cmp
xor
inc
xchg
cmp
xor
or
mov
shll
xor
or
pushf
add
shl
mov
sbb
xor
daa
sbb
inc
adc
or
cmp
push
sahf
or
xor
or
fimull
sub
popa
hlt
xorl
adc
xchg
testb
or
lods
shll
call
imul
mov
add
jb
faddl
adc
or
or
add
mov
add
or
sub
push
lds
adc
mov
pop
adc
lods
mov
pop
adc
lds
adc
lcall
cld
jbe
pushf
push
repnz
fsubl
je
std
fyl2x
ss
dec
add
pop
adc
stos
and
sbb
or
enter
mov
xor
adc
or
sbb
mov
sbb
insb
ds
popf
jg
push
mov
cmp
sub
lcall
cmp
dec
fbstp
ret
sbb
inc
pop
push
adc
or
ja
mov
mov
xor
add
adc
imul
jge
push
test
or
int
push
or
fdiv
and
sub
push
or
cmpsl
inc
push
cmp
dec
and
insb
lds
adc
je
jo
adc
push
test
pop
adc
or
test
cmp
pop
insl
scas
stos
mov
sahf
dec
sub
les
or
xorb
pop
or
and
call
xor
mov
sbb
and
xor
icebp
inc
jmp
adc
out
daa
sbb
sahf
adc
mov
xlat
xchg
jbe
adc
out
scas
sbb
popa
cmp
pop
jo
adc
shrb
fwait
in
jmp
push
adc
dec
jl
les
movsl
iret
dec
iret
dec
mov
or
and
mov
out
nop
jbe
adc
xchg
pop
lea
xor
adc
mov
jo
mov
push
adc
push
jae
adc
pop
xchg
fidivs
push
jle
jmp
imul
push
adc
mov
iret
je
jo
adc
mov
mov
push
adc
adc
push
adc
fdivrl
add
xchg
mov
xchg
cs
sbb
enter
sti
pushf
lret
push
dec
loope
xor
xchg
out
nop
jo
adc
das
pop
mov
push
jno
cmp
adc
and
orl
aaa
push
pop
iret
jb
daa
pushf
mov
mov
repz
push
adc
or
jge
nop
jo
adc
ficompl
cld
and
pop
insb
and
mov
andl
cwtl
scas
loop
ds
add
into
loope
dec
test
cmp
jbe
jmp
sub
sahf
mov
or
adc
adc
push
adc
loopne
lock
jmp
or
pushf
push
insl
ljmp
lcall
adc
loop
sbb
mov
push
add
mov
and
and
adc
ret
inc
push
cld
mov
dec
jo
stos
add
jo
adc
ror
sbb
fwait
inc
hlt
sti
shr
addr16
sbb
out
jb
scas
data16
rclb
fcomps
hlt
cld
lcall
or
jmp
clc
jo
adc
call
sbbb
hlt
jo
adc
mov
cwtl
cmp
jo
adc
lret
test
xor
enter
je
aaa
xor
lock
shll
es
cmp
xchg
jno
scas
xor
inc
xchg
dec
cmpsl
mov
outsb
int
push
out
or
push
adc
repnz
pushf
lcall
cmp
cwtl
loope
push
das
out
and
test
mov
pop
add
unpckhps
fstpt
shrl
inc
push
ficompl
rcrl
and
xchg
dec
pop
sub
or
sbbl
or
idivl
cmp
and
and
push
imul
scas
cld
pop
mov
enter
cmovb
xchg
inc
or
sub
rorb
arpl
xchg
adc
lods
inc
arpl
leave
outsl
jnp
and
sbb
out
xchg
lea
nop
push
call
adc
in
test
sub
sbb
adc
jno
adc
sub
fcompl
xor
push
adc
nop
shl
lret
mov
shll
pop
jae
xorb
loope
adc
scas
xor
cltd
rcrb
xchg
pinsrw
mov
lock
out
mov
adc
mov
movsb
hlt
push
jne
shrb
les
fdiv
icebp
popf
cmp
frstor
call
ljmp
hlt
sbb
adc
enter
ss
aas
fnstenv
inc
mov
pop
mov
arpl
pushf
lock
xchg
fsub
das
testb
xor
lock
and
jo
xchg
push
dec
loope
scas
gs
inc
mov
sub
setnp
cmp
sbb
arpl
aam
cli
pop
adc
popa
mov
popf
aam
cmp
pop
icebp
arpl
xchg
ja
test
imul
push
inc
jle
imul
inc
les
mov
push
nop
sbb
fwait
xor
mov
xor
fcomps
sbb
mov
aam
push
adc
xchg
mov
or
nopl
sbb
shlb
fwait
cmp
pop
dec
fcmovbe
iret
xchg
xlat
int3
jnp
or
mov
sbb
xchg
mov
pop
jl
out
and
or
or
dec
cmc
int
mov
bound
xchg
and
adc
pusha
and
lret
es
ror
lcall
lcall
mov
cmp
adc
ja
fwait
sbb
cmpsb
mov
outsl
loope
cmp
and
inc
pop
mul
int3
xor
fdivrs
xlat
adc
jbe
es
in
out
jle
in
stc
xchg
pop
ss
jge
popa
lds
fdivr
pop
adc
push
or
shl
out
iret
adc
js
mov
icebp
jge
jl
dec
mov
fldt
lock
js
xchg
push
adc
pop
imul
sbb
cld
int3
jne
ret
xor
adc
adc
ret
mov
and
adc
fnstenv
subb
inc
fisttps
inc
out
in
sub
test
test
pop
out
or
stc
ret
negb
pop
xchg
add
inc
cmp
lcall
adc
jae
sub
dec
jae
adc
faddl
adc
les
adc
mov
adc
faddl
adc
push
pusha
faddl
adc
loope
faddl
adc
popf
sbb
ss
and
fiadds
adc
mov
pop
aad
cs
pop
adc
in
jae
adc
xchg
push
or
sbb
and
popa
or
insl
xchg
push
or
mov
loope
push
xchg
fmull
or
or
adc
inc
iret
lds
cli
outsb
adc
and
insb
inc
nop
jns
pmullw
add
push
adc
adc
adc
test
jg
cmc
lock
adc
js
pop
adc
out
xlat
int3
repnz
lret
pop
adc
int3
lock
dec
in
ljmp
jl
cmp
adc
adcl
faddl
adc
movsb
jae
adc
sub
faddl
adc
fistpll
adc
lret
xchg
cmpsl
dec
cmp
adc
mov
sahf
test
pop
adc
ret
add
insb
push
jo
push
adc
pop
xor
loopne
add
lods
in
hlt
bound
mov
adc
or
test
pop
adc
stc
mov
sahf
ret
or
lret
fmul
cli
loopne
and
movsb
mov
jae
jl
pop
adc
into
int
jl
pop
adc
outsb
jecxz
faddl
adc
sub
sbb
inc
fstpt
pushf
repnz
jg
iret
pushf
cmp
jl
or
je,pn
mov
jns
nop
pop
jl
or
mov
push
sbb
sbb
das
mov
mov
sub
pop
adc
jb
adc
push
ret
cmp
jb
xor
je
adc
mov
adc
pop
jae
xadd
js
mov
mov
push
adc
in
lcall
jae
adc
ja
add
pop
cltd
fwait
xor
faddl
adc
adc
js
push
adc
fldt
add
iret
je
jae
adc
ror
or
mov
dec
pop
dec
cltd
mov
cmp
xor
push
adc
arpl
add
pushf
push
dec
lods
shll
cmp
gs
push
adc
mov
out
in
or
sar
or
data16
push
adc
and
and
les
adc
subb
fisubrs
push
adc
push
cmp
sbb
adc
daa
sub
pusha
out
les
adc
xor
and
adc
outsb
hlt
js
push
adc
call
jb
ret
pop
adc
dec
jecxz
rcr
jge
pop
sbb
adc
dec
lret
fs
sub
xor
dec
into
sbb
sub
mov
mov
push
mov
je
shrb
adc
testb
jnp
lock
sub
int3
jbe
cwtl
sarl
mov
in
pop
jecxz
sbb
xchg
jno
or
aam
movsl
popa
pop
xchg
or
cltd
push
cmpsl
outsl
sub
jb
icebp
int
sub
hlt
xchg
pop
mov
fcom
lock
xchg
cmp
stos
rcrl
pop
lahf
stos
jge
mov
rcll
and
xor
outsb
mov
adcl
cmp
sbbl
dec
out
cmpsb
adc
mov
cs
and
xlat
mov
adc
loopne
add
lods
mov
in
xor
and
push
push
adc
cmp
jg
inc
mov
sub
sbb
adc
das
jno
sahf
xchg
add
adc
daa
sti
xchg
pop
je
pop
adc
or
xlat
shr
or
cmp
xchg
inc
push
repnz
rcr
xlat
out
lahf
andl
inc
outsl
shl
cltd
jle
pop
jbe
ss
ficoml
imul
js
inc
fdivl
cmc
fwait
in
add
cmpsb
jmp
loop
jmp
lret
je
pop
adc
adc
sbb
movsl
cmp
cmp
adc
sub
mov
ss
push
fmull
fidivrl
dec
shrl
xchg
adc
jns
fnstcw
je
pop
adc
or
xchg
or
movsb
faddl
adc
cmpsb
xor
mov
mov
inc
adc
inc
je
jle
inc
je
pop
adc
lods
or
cmc
push
test
adc
pushf
jecxz
subb
lods
je
pop
adc
call
stos
mov
push
lret
ds
mov
faddl
adc
rclb
xchg
sub
repz
and
ficomps
cmp
push
adc
or
xor
cmp
movsb
fs
aam
cmp
push
adc
xchg
jo
adc
push
pop
xchg
lds
cwtl
stos
ja
adc
fcmove
outsb
or
fdivl
mov
nop
cli
dec
paddusb
pop
jo
pop
daa
pop
mov
inc
inc
mov
mov
adc
nop
xchg
mov
bound
cmp
xor
cmpsb
jmp
movsb
cmpsb
iret
int
fldt
int3
or
and
iret
push
das
mov
cli
cmpsb
adc
inc
or
js
aam
inc
dec
dec
add
push
pop
xor
pop
xchg
xor
pop
inc
stc
stc
ljmp
dec
or
push
mov
mov
inc
jo
xchg
aas
js
or
dec
fs
cmp
enter
sahf
sbb
or
jmp
js
adc
pop
lds
stc
mov
int
aaa
push
divl
jmp
outsl
lods
loopne
mov
mov
dec
dec
mov
dec
mov
pop
int3
je
push
jne
jb
ret
add
add
cmpsl
xor
xchg
aaa
mov
or
pop
jae
adc
mov
pop
dec
push
bound
ljmp
pop
jo
mov
out
hlt
std
cs
mov
test
adc
add
pop
cmp
cld
jg
push
push
repnz
lret
jle
push
daa
mov
ret
xchg
outsl
aas
ljmp
pop
dec
xor
bnd
mov
cmpsl
lahf
xlat
icebp
into
mov
clc
add
xor
addl
push
dec
pop
dec
outsl
fdivrs
xor
pop
or
dec
xchg
inc
pusha
inc
loope
mov
lock
mov
or
cs
dec
iret
mov
inc
js
or
inc
xchg
cs
lret
jbe
mov
shll
test
pop
loop
icebp
sub
fs
rorb
xlat
pop
and
add
inc
ljmp
ja
popf
jge
mov
adc
or
inc
fsubs
shlb
test
jo
adc
mov
nopl
adc
inc
xor
xlat
pop
in
in
sbb
mov
dec
ja
xchg
out
mov
xchg
mov
xor
lods
andl
aad
mov
mov
xchg
inc
int3
test
in
insb
std
loope
dec
scas
popf
inc
mov
cmp
cltd
shlb
cmp
mov
mov
lods
dec
xchg
push
clc
fcoml
pop
jno
adc
mov
movsl
and
jns
push
ret
fwait
pop
dec
push
int
jp
hlt
xchg
data16
mov
cmp
and
adc
les
adc
pop
xor
scas
xchg
mov
add
dec
fcoms
adc
outsl
pop
push
xorb
xchg
fisttpll
fcoms
testl
pop
sti
sub
xor
call
lock
or
adc
mov
lods
cltd
or
pop
iret
xchg
dec
leave
push
dec
cmp
pop
leave
sub
movb
mov
arpl
outsb
push
push
mov
in
xchg
loope
dec
dec
add
arpl
mov
imul
sarl
xor
mov
push
sub
jo
insl
lret
push
cmc
jae
pop
push
popa
mov
and
jle
movsl
sbb
movsl
push
jge
test
xchg
out
cmc
ficomps
sub
lods
iret
pop
jns
testl
jp
outsb
cmp
or
mov
lock
mov
and
pop
hlt
sar
daa
jp
stos
aam
ja
das
pop
dec
mov
xchg
xor
scas
call
dec
mov
sbb
jo
or
xor
popw
mov
xor
cwtl
add
movsb
aam
cmpl
fnstcw
andb
test
mov
hlt
stos
and
mov
cltd
loope
lea
push
mov
cmp
hlt
in
jae
int
dec
xchg
shll
popa
inc
loopne
sbb
lahf
out
and
mov
sub
out
test
dec
addr16
insb
adc
sub
setnp
ljmp
add
cmpl
jb
lret
aad
ja
iret
adc
into
push
sahf
pop
jl
pusha
adc
insb
adc
xchg
jns
cmp
ds
fwait
and
repz
sub
frstor
in
mov
xchg
int
iret
jg
mov
adc
add
adc
xchg
sbb
roll
ss
adcl
xchg
pushf
insb
pop
mov
dec
lret
add
lcall
sbb
aaa
cmc
pop
ret
xchg
dec
mov
loopne
loopne
push
test
lds
mov
sbb
imul
icebp
and
sub
aaa
xchg
or
and
scas
imul
ja
or
stc
lods
sbb
push
fs
arpl
in
sbb
jns
leave
xchg
inc
dec
cmp
xor
pop
cmp
lods
sbb
xor
dec
rol
sub
out
xchg
sub
iret
inc
fldlg2
and
mov
out
and
pop
pop
out
dec
paddusb
xchg
fbstp
lret
jg
dec
inc
mov
mov
push
mov
out
ret
jbe
mov
or
testl
mov
sbb
inc
mov
sbb
cmp
push
adc
xor
fs
adc
stos
push
je
addr16
cmp
imul
stc
lods
or
lret
jns
jo
sub
adc
mov
outsb
shr
cmp
imul
adc
add
fsubl
lcall
les
nop
fsubr
mov
fs
push
adc
lcall
insl
loope
in
mov
aad
or
mov
mov
mov
pop
mov
xor
addr16
out
insb
dec
fldenv
faddp
push
push
insl
arpl
xor
dec
stos
flds
test
xor
add
or
dec
and
icebp
push
xchg
mov
pushf
jb
mov
and
jg
cmp
push
jno
adc
ror
adc
and
add
addb
repnz
push
adc
imul
dec
cli
aaa
gs
sbb
neg
sbb
mov
inc
outsl
add
into
faddl
pop
gs
add
xor
pop
leave
loope
stos
lods
in
xor
outsb
incl
xlat
pop
push
lcall
aaa
lahf
xchg
cs
in
scas
pop
mov
fiadds
cmpsl
mov
xor
fildl
push
adc
imul
mov
cwtl
je
in
mov
mov
fistpll
cmp
scas
add
movsl
xchg
mov
in
pop
lods
lods
in
sub
pop
push
lods
scas
and
lds
sahf
cmp
int3
lea
popa
fmuls
inc
jno
mov
cmpsl
adcl
cmp
jg
adc
cltd
adc
or
add
aas
fwait
add
mov
repz
push
iret
or
fbld
in
cs
push
adc
xor
int3
mov
add
fmul
ljmp
or
sub
or
pop
push
fwait
les
sbb
jcxz
fdivrs
pop
xor
push
test
cmp
mov
jnp
and
push
stos
clc
out
cmp
mov
or
mov
xchg
outsb
sbb
add
add
inc
or
sbb
jo
or
pop
subb
mov
ret
repz
in
pop
iret
xchg
in
mov
mov
ja
stc
mov
xor
inc
pop
call
and
loop
aad
ja
lock
jae
push
xor
test
xchg
jns
cli
fisttps
insb
aaa
in
mov
jecxz
test
push
jnp
arpl
mov
xor
je
or
iret
xchg
mov
out
cmp
fsubrl
pop
mov
ret
xchg
xor
xor
inc
xlat
jnp
mov
cmp
sbb
mov
stc
mov
sahf
dec
rolb
dec
lret
loop
xlat
mov
sahf
out
dec
jns
mov
pushf
mov
dec
dec
ret
xchg
cmp
hlt
xorl
dec
jae
loop
xor
pop
in
outsb
add
sbb
mov
pop
sbb
or
iret
iret
je
xchg
cmp
jo
inc
pop
call
xor
aaa
add
cmp
push
lahf
out
dec
gs
mov
popf
repz
popa
sbb
pushf
lret
gs
imul
fidivrl
mov
cs
jno
adc
ud1
mov
xor
ret
outsl
push
jmp
mov
sub
movsb
nop
js
dec
lret
cld
fbstp
sbb
or
iret
iret
je
sbbl
inc
dec
xor
push
inc
mov
sub
or
xchg
leave
jne
mov
mov
in
dec
ret
xor
movsl
and
into
sbbb
pusha
ret
adc
xor
movsb
sbb
mov
jns
push
sub
inc
data16
popa
roll
or
cmp
cmp
xchg
mov
dec
mov
into
fstps
ret
or
mov
push
pushf
ret
dec
addr16
add
dec
dec
loop
lds
pop
adc
loope
mov
popa
pop
jmp
repz
lahf
add
icebp
dec
mov
adc
adc
pop
test
lret
outsl
out
push
aam
insb
outsb
fcoms
sbb
repz
insb
sub
es
adc
pop
push
repnz
sub
xlat
stos
out
ss
cld
dec
sbb
add
idivb
lods
jecxz
leave
je
xchg
sub
lcall
xchg
gs
push
jno
out
in
cwtl
inc
pop
fldl
fbld
lret
sbb
sub
add
pop
popa
test
cmp
cmpsb
test
adc
xor
rcrb
xlat
pop
or
int3
popa
cmpsb
sbb
ror
mov
fcomp
pop
pop
nop
dec
sahf
lcall
add
mov
in
out
xor
add
cmc
xorl
mov
dec
lcall
fsubr
fstpl
xor
xchg
jne
jge
lods
pushf
dec
jecxz
jae
inc
insl
mov
cmp
inc
loop
or
arpl
in
hlt
fmull
addl
push
andb
out
cmp
xchg
in
sub
mov
lcall
cmp
inc
adc
sar
cmpsl
sub
jecxz
cmp
gs
pop
pop
or
cwtl
adc
and
fstl
xchg
mov
ret
scas
mov
and
int3
cmpsl
lret
jne
mov
test
fisttps
nop
int3
xchg
dec
clc
cltd
ret
xchg
fwait
jp
aas
in
rol
dec
clc
popa
or
gs
sub
rcl
lahf
mov
jl
add
jb
add
inc
xor
nop
xchg
scas
inc
int
xor
shlb
ljmp
addr16
out
or
int3
popa
mov
xchg
fldenv
xlat
es
pop
out
js
or
xchg
ja
pushf
leave
sub
mov
or
mov
sbb
push
jmp
cmp
cmp
repz
stc
in
and
xchg
xor
xlat
mov
mov
loopne
addb
mov
cmp
inc
add
addr16
daa
js
dec
clc
mov
fcmove
repnz
fildll
mov
sahf
cmp
dec
sbb
adc
cltd
pop
sar
iret
outsl
jo
lds
fcoml
repz
sub
lods
arpl
mov
jmp
cmp
push
cmp
adc
arpl
add
adc
lods
mov
mov
cmp
jnp
mov
mov
lahf
cmp
inc
adc
push
cwtl
shlb
adc
or
lock
cmp
out
call
xchg
icebp
mov
shll
pop
dec
je
xor
cmpsb
add
sub
test
out
xchg
dec
popa
pop
pop
mov
js
adc
or
xchg
mov
jns
repnz
jecxz
xlat
sarb
mov
dec
and
and
xchg
scas
push
fs
sahf
cmp
push
inc
lock
lret
ret
call
mov
push
loop
fs
mov
inc
imul
out
mov
out
fistpll
push
mov
rcl
pop
pop
or
rorl
lret
sarb
dec
pop
mov
dec
iret
push
es
sub
lds
fstpt
aam
bound
aaa
jb
mov
xchg
test
add
mov
mov
call
and
pop
xorb
mov
dec
lock
and
adc
daa
jg
mov
sbbl
and
loopne
sar
jg
mov
cmp
xchg
aad
mov
filds
fcmovbe
fidivrs
sub
mov
adc
mov
or
push
jmp
fstl
ret
cmp
mov
push
outsb
mov
cltd
add
push
inc
out
dec
cmp
ret
mov
add
into
icebp
jge
push
fwait
adc
in
mov
inc
es
mov
sub
dec
cmp
pop
add
sub
enter
ljmp
adc
movsl
xor
divb
out
es
cmp
add
std
push
jmp
sbb
into
decl
xor
inc
cltd
mov
faddl
adc
les
jno
adc
mov
jno
outsl
imul
lea
lods
in
insb
mov
jecxz
push
cmp
push
cmp
faddl
adc
fnstenv
hlt
daa
testb
xchg
add
adc
adc
je
sub
adc
sbb
int
adc
enter
mov
push
in
xlat
adc
pop
adc
inc
test
and
adc
adc
push
sub
mov
and
mov
jl
fistpll
jecxz
jne
adc
jno
adc
les
adc
xor
enter
faddl
adc
adc
jo
adc
arpl
lret
adc
or
push
in
shll
inc
mov
cvttps2pi
cmc
jecxz
sub
xor
sub
pop
jecxz
mov
jp
mov
int3
repnz
inc
mov
icebp
dec
sbb
int3
dec
loop
mov
xorl
iret
jmp
mov
out
and
mov
dec
pop
adc
daa
inc
dec
loope
cld
mov
lods
ret
xor
push
jae
cmp
imul
jmp
or
ja
daa
movsb
pop
sub
jmp
mov
and
adc
sbb
push
pmaxub
cmp
movsb
pop
aam
popf
cmp
mov
popa
ret
xchg
push
adc
mov
inc
fstps
sbb
repz
roll
adc
mov
lret
sub
les
adc
add
lods
les
adc
jae
popf
lret
dec
dec
fisubrl
shll
sbbb
dec
int
outsl
push
adc
dec
addr16
mov
pop
loop
fadds
pop
inc
mov
inc
inc
js
hlt
and
js
rcrb
add
jo
adc
mov
xor
or
inc
sar
pminsw
rcr
pop
adc
mov
fwait
push
adc
std
sub
adc
popa
ror
pop
adc
pop
enter
int3
imul
push
mov
inc
mov
int
and
mov
cmp
fsubl
mov
inc
pushf
call
lcall
mov
xor
popa
and
rclb
pop
adc
ja
sbb
int3
lcall
out
pushf
cmp
lods
das
outsl
mov
clc
dec
mov
iret
dec
mov
pxor
std
push
fcoms
or
pop
jne
je
rcrb
fs
adc
faddl
adc
adc
jmp
faddl
adc
or
push
lahf
ret
jo
push
sbb
pushf
aam
jo
adc
sub
push
adc
mov
adc
or
cld
inc
pop
cltd
mov
add
je
dec
hlt
out
insl
mov
imul
push
jo
adc
popa
pusha
sub
jb
dec
lret
hlt
mov
cmc
in
jae
adc
sub
dec
stos
popa
lahf
and
cmpsl
daa
jno
push
push
push
pop
sbb
aad
sarl
scas
ret
sahf
popa
testb
jp
or
adc
popf
jl
push
adc
ss
mov
out
decl
test
inc
aam
xor
sub
mov
daa
and
hlt
lcall
or
xchg
mov
jo
adc
fidivl
adc
enter
std
pop
inc
outsl
pushw
pop
iret
add
fnstcw
push
outsl
cmp
fdivl
push
mov
loope
cld
xchg
sub
cli
lcall
adc
enter
or
dec
popf
shrl
jl
dec
mov
cmpsl
fcomps
cmp
loopne
and
sub
push
adc
mov
pop
enter
push
xchg
mov
push
dec
dec
and
lock
mov
pop
mov
pusha
popa
and
pop
push
in
insb
sbb
adc
and
jp
sub
inc
xor
out
ss
aaa
sbb
inc
iret
das
inc
hlt
clc
mov
das
pop
jge
dec
lods
or
int3
roll
adc
or
and
mov
popa
mull
mov
jmp
in
ds
push
and
cmpsb
test
cmp
xor
int
sbb
rcrl
cli
pusha
or
fmul
into
jae
leave
push
mov
loopne
arpl
and
pop
movsl
test
adc
xchg
lods
pop
push
test
or
insb
add
push
adc
inc
cmp
addr16
sbb
push
mov
mov
sahf
cmp
xchg
fidivl
bound
call
loope
cmp
mov
shll
jae
adc
cmpsb
bound
call
xchg
jl
mov
in
cmp
sahf
push
add
insb
imul
ds
cmp
scas
movl
rcl
pop
pop
dec
mov
or
pop
gs
adc
inc
push
pop
ds
jmp
in
in
cwtl
push
adc
in
xor
into
ja
push
es
add
push
cmp
test
shlb
shlb
pop
fistl
iret
jl
sar
ja
xor
mov
movb
sub
or
ret
xchg
xor
pop
mov
sub
cwtl
repz
push
call
scas
xor
shlb
gs
xchg
lds
hlt
das
into
pushf
cmp
data16
mov
sbb
cmp
adc
mov
repz
cs
sbb
enter
es
rolb
insl
pop
mov
cmp
sub
push
jae
push
cmp
xor
push
fisttpll
out
pop
mov
pop
in
push
fs
adc
insl
fimull
imul
into
pushf
rclb
js
xchg
xchg
je
rorl
test
push
or
xor
push
inc
cs
mov
pusha
js
fwait
mov
ja
das
xchg
dec
dec
mov
xor
mov
mov
arpl
stc
jl
jns
loop
sbb
shlb
lahf
cmp
lret
insb
and
fldenv
pushf
cmp
loop
add
das
mov
jo
adc
xchg
xlat
adcb
pusha
dec
lea
xor
std
pop
cmp
jae
sub
cmp
ret
or
xor
mov
sbb
iret
push
dec
push
jp
inc
popa
sti
outsl
add
mov
jecxz
or
sarb
out
lret
lock
jl
sbb
popf
mov
push
xor
sarl
stos
dec
stc
push
cmp
aas
adc
lcall
sub
cmc
dec
mov
ja
aad
addb
and
popf
mov
sub
jns
jg
or
mov
push
adc
fwait
jns
push
sub
inc
fwait
push
adc
cmp
lods
adc
fwait
push
adc
mov
mov
fwait
call
pop
cmp
mov
mov
sub
mov
mov
sub
fstps
hlt
loop
add
xchg
icebp
mov
insb
inc
hlt
test
inc
lcall
xor
push
daa
add
fmulp
jl
fwait
push
adc
stos
and
roll
in
mov
mov
or
lods
mov
adc
xchg
and
ret
ja
add
test
pop
jmp
mov
dec
psllw
shlb
in
inc
adc
push
insl
inc
jno
adc
and
cmpsb
loopne
fisubs
xchg
cmp
scas
cmp
xchg
sbb
cmpb
sbb
dec
cmpsl
dec
dec
cmpsl
sub
aam
loopne
xor
adc
nop
sbb
enter
and
and
pop
sub
mov
mov
std
jne
jo
pop
adc
sub
add
cld
add
xlat
xchg
mov
push
adc
stos
imulb
jns
daa
lret
push
mov
xor
jle
cmpsb
mov
icebp
xor
cli
pop
adc
orl
pop
sub
fmull
xor
insb
push
rorb
dec
in
ret
lcall
adc
xchg
push
add
add
fwait
hlt
insl
cmp
add
jg
or
in
jecxz
arpl
pop
nop
ja
add
mov
rorl
inc
rclb
cltd
je
jge
cmp
lret
fdivr
pop
adc
ror
sbb
int
inc
sarb
lds
mov
stos
push
fwait
push
adc
movsl
add
iret
sahf
mov
adcl
out
stos
sbb
pop
cmp
push
xchg
push
adc
ja
mov
into
sahf
inc
push
xchg
ja
inc
pop
cmpsl
cmp
lock
mov
xchg
inc
add
mov
icebp
out
bswap
sbb
push
lahf
sbb
arpl
loopne
lret
fisttpl
js
mov
sbb
mov
push
sti
enter
adc
push
xchg
ljmp
ss
jecxz
jae
lcall
repnz
adc
sbb
mov
loope
sbb
inc
mov
mov
push
or
les
das
pop
mov
xor
mov
add
sbb
pop
mov
sbb
shlb
sarl
pop
lds
or
mov
sbb
mov
jne
enter
into
xor
lahf
add
arpl
clc
loope
xchg
in
mov
int3
pusha
sub
xchg
xlat
jno
stos
je
and
out
orb
roll
mov
int
xchg
jae
sbb
jbe
into
pushf
cmp
pop
adc
or
rclb
cmp
pop
jg
insb
inc
outsl
dec
dec
in
cwtl
fwait
xor
out
xor
sbb
pop
jne
fimull
repz
in
mov
insb
fldln2
xchg
mov
scas
xchg
lea
or
jo
jle
add
clc
pushf
cmp
pushf
stc
fabs
adc
insl
ss
or
xor
pushf
daa
mov
or
insl
lret
xor
mov
and
ja
jns
das
pop
mov
jnp
stos
inc
mov
pusha
sbb
out
inc
dec
pop
or
jp
cld
jo
adc
cli
scas
pop
mov
out
into
clc
mov
adc
jae
shll
shll
mov
imul
rorb
adc
gs
add
adc
push
pop
or
jg
pop
pop
or
leave
imul
xchg
inc
popf
mov
movb
ja
lds
adc
mov
mov
xchg
mov
xchg
inc
jae
les
xor
push
pop
adc
in
pop
adc
sbb
shll
pop
add
pop
adc
sbb
add
test
push
mov
xor
xorl
popa
xor
push
in
pop
adc
lds
repz
xchg
ret
adc
adc
stos
insb
ds
in
out
icebp
cmp
enter
outsb
cmp
popa
mov
std
gs
push
nop
cwtl
shll
xor
and
pop
xchg
cmp
push
cmpsl
ret
outsl
inc
addr16
push
push
int3
pop
js
test
dec
mov
xchg
or
emms
fdiv
or
mov
push
in
mov
push
testb
mov
sti
bound
sahf
cwtl
leave
inc
adc
jns
mov
jl
in
or
lock
jge
test
mov
shlb
dec
sbb
lds
adc
xchg
test
jns
inc
ds
pop
adc
sbb
pop
mov
xchg
and
movsb
xacquire
push
je
dec
fistpll
fdivrp
mov
xlat
scas
fdivr
or
or
or
push
dec
sbb
adc
cltd
cld
setle
adc
pop
or
pusha
mov
loopne
sbb
push
dec
pop
or
inc
data16
jo
adc
lods
aaa
jecxz
adc
je
shrl
or
add
push
inc
imul
cmp
das
pop
push
sbb
pop
adc
dec
mov
mov
xor
inc
sub
push
cmp
push
adc
lods
jno
orl
lea
sub
loopne
sbb
test
inc
or
pop
adc
mov
add
adc
adc
adc
jb
ret
or
es
std
lods
jns
cmp
pusha
sub
adc
xchg
xlat
mov
nop
lret
jnp
mov
test
ja
pop
jmp
lahf
or
stc
sbb
pop
sahf
aaa
pop
push
addb
mov
inc
ja
mov
xor
mov
iret
rorl
test
stc
sbb
loop
faddl
adc
roll
enter
mov
push
faddl
adc
loope
arpl
sti
movsb
imul
and
adc
push
faddl
adc
repnz
jo
adc
std
jno
faddl
adc
xchg
sub
push
adc
orb
out
mov
hlt
fs
adc
dec
jae
xorb
loope
adc
rcl
les
adc
jne
mov
cmp
sub
pusha
sub
cmp
inc
rcrl
xor
pop
sbb
arpl
hlt
insb
jae
adc
mov
jae
adc
ss
sbb
popf
int3
gs
push
adc
cmp
cmp
adc
mov
enter
mov
iret
cmp
enter
pop
dec
test
shll
push
sbb
mov
jl
mov
out
sbb
add
xchg
pushf
jo
adc
push
adc
scas
in
inc
mov
jo
xchg
out
fiaddl
daa
push
pop
add
paddb
dec
orb
loopne
test
dec
adc
fcomps
push
pushf
or
hlt
dec
pushf
lcall
fimuls
test
hlt
daa
loop
hlt
xchg
aad
inc
out
movsb
mov
pop
sub
jmp
imul
ret
fwait
lret
into
push
jnp
or
jle
sub
push
adc
push
repz
mov
imul
lret
enter
add
mov
push
adc
pop
sub
add
pop
and
push
adc
cmp
mov
mov
lahf
add
popa
add
adc
sbb
test
roll
or
and
dec
xchg
out
test
and
or
mov
push
ljmp
loop
cmp
dec
jns
pop
xchg
lret
xchg
jne
test
mov
and
xchg
subl
jb
in
xor
shlb
mov
je
test
scas
cmp
push
xchg
sti
data16
arpl
xchg
adc
sub
cltd
mov
pop
adc
xlat
rcr
push
adc
js
and
or
shlb
adc
in
cmp
arpl
push
je
pop
adc
jp
inc
fwait
loopne
dec
stos
fcompl
xor
push
xchg
push
adc
jecxz
mov
lods
pop
sbb
xchg
inc
cltd
int
call
pop
cld
mov
imulb
fmuls
add
orl
je
lods
fcoml
sti
out
cmp
sbb
pop
pop
mov
sbb
jnp
mov
roll
aaa
clc
dec
mov
in
jmp
lret
push
ret
jae
outsl
lock
rcrl
pop
test
ret
arpl
xchg
or
je
adc
movsb
imulb
loopne
fimull
jecxz
imull
dec
xchg
lea
xor
cmp
mov
adc
pop
fwait
push
adc
sbb
es
xlat
mov
pop
adc
adc
je
jo
adc
mov
fcomps
xor
shrb
cmc
sahf
jns
ror
mov
sub
push
sbb
rolb
cmc
pop
mov
sbb
xor
and
pushl
lock
int
lcall
push
mov
adc
iret
and
mov
jge
fbstp
ret
sbb
inc
pop
sbb
sahf
or
insb
out
pop
adc
sub
dec
dec
ret
enter
ret
jg
mov
or
or
push
lods
lds
adc
pushf
cmp
cmpsl
cmpsl
int
mov
mov
push
cmp
or
pop
adc
mov
scas
cmp
data16
pusha
jo
pop
adc
js
jecxz
add
adc
mov
aas
repnz
inc
shll
mulb
stc
pushf
aas
and
faddl
adc
addr16
mov
in
jle
out
cmpsb
or
rcrb
jae
mov
jecxz
repz
jbe
adc
cmp
add
or
in
into
lcall
arpl
xchg
mov
mov
cmp
cs
sub
iret
sahf
nop
in
out
addr16
adc
push
ljmp
loope
mov
sbb
or
adc
add
dec
xlat
mov
push
jae
inc
inc
add
pusha
add
push
adc
lahf
lcall
xchg
xchg
test
inc
sbb
out
push
mov
push
adc
in
pop
addr16
or
or
or
addr16
jo
adc
ljmp
rcll
into
inc
add
push
jecxz
sti
js
push
adc
lea
adc
fiadds
xchg
mov
imul
jb
faddl
adc
mov
add
jae
jno
adc
mov
xchg
rcr
pop
adc
mov
pusha
test
shrb
add
push
test
inc
sbb
or
adc
sti
and
push
cld
rcll
pop
mov
adcb
adc
dec
test
xor
sbb
jno
adc
fcoms
or
mov
cli
jo
pop
adc
dec
in
test
and
push
adc
daa
mov
faddl
adc
dec
push
add
cmp
push
jo
pop
adc
test
push
pop
and
sbb
cs
sbb
ss
push
dec
pushf
mov
jl
xor
mov
pop
sub
jp
test
rorl
cmp
call
dec
add
faddl
adc
cmc
and
pop
jle
sbb
or
xchg
push
imul
sbb
adc
sub
adc
push
adc
jl
push
pushf
jae
adc
push
mov
daa
xor
xchg
push
adc
push
or
inc
nop
xchg
sahf
in
or
xchg
fcmovbe
ja
xchg
cli
mov
push
jne
and
sub
add
insl
xchg
cld
push
push
jo
pop
adc
mov
loopne
cwtl
outsb
xchg
sub
and
sub
mov
fdivrs
imul
repz
dec
dec
add
es
cmp
adc
ds
push
mov
mov
adc
xor
add
cmpsl
sbb
mov
jno
adc
xchg
and
jb
mov
mov
data16
xchg
push
mov
faddl
adc
ret
sub
fisttps
movl
jmp
adc
nop
mov
push
fs
pushf
cmp
enter
out
imul
int
cmp
mov
aam
loop
popa
or
push
adc
adc
jecxz
filds
sarl
pop
adc
int3
js
pop
adc
jb
xor
fwait
xor
ljmp
inc
pop
decb
js
pop
adc
fnstcw
pop
adc
ficoms
push
adc
daa
mov
ret
xchg
or
push
adc
lods
inc
lock
fwait
push
adc
push
out
nop
fwait
push
adc
push
adc
repnz
ss
js
lods
lock
adc
inc
push
aad
and
mov
data16
push
lret
imul
mov
out
icebp
loop
and
jbe
mov
jo
adc
loopne
push
iret
iret
cmpsb
push
lds
loopne
pop
adc
dec
test
and
shll
int3
push
jno
nop
js
xchg
pop
enter
push
das
push
faddl
adc
jno
incl
adc
ljmp
pop
adc
ror
cwtl
faddl
adc
inc
xchg
repnz
in
pop
shlb
test
js
xchg
mov
into
or
mov
int
xor
lea
inc
sbb
lock
pop
adc
in
cmp
adc
cli
rclb
push
adc
imul
jecxz
pop
les
adc
into
rorb
add
or
push
daa
push
jnp
cmp
insb
ret
cmp
les
std
dec
jno
adc
out
adc
int
hlt
sbb
dec
arpl
push
flds
or
fistpll
faddl
adc
jns
xor
jmp
sbb
jno
adc
js
or
xchg
mov
js
push
adc
inc
inc
test
ja
adc
adc
and
adc
xor
pop
outsl
jl
pop
adc
ret
and
in
mull
add
rcpps
inc
andl
or
faddl
adc
push
push
cmpb
mov
mov
push
jb
xchg
sub
loopne
jmp
pop
adc
cmp
inc
call
cmp
vshufps
mov
mov
jecxz
mov
sbb
push
jne
jcxz
and
push
sbb
xor
push
adc
push
ja
iret
out
insb
jae
adc
mov
jae
adc
inc
push
adc
fs
out
fs
popa
ret
or
fcompl
jno
adc
xor
xorb
call
in
xchg
ret
popa
stos
sub
add
mov
in
cmpsb
stos
jnp
push
imul
adc
fwait
xor
idivb
int
inc
notb
xlat
jnp
shlb
xchg
loopne
pop
adc
test
nop
lahf
dec
cmp
mov
xchg
xchg
pop
faddl
adc
mov
xchg
ljmp
inc
movsl
std
mov
stos
je
pop
adc
pop
es
movsb
xchg
and
outsl
or
dec
xlat
scas
subl
clc
jae
aas
pusha
pop
jmp
push
pop
faddl
adc
jecxz
movsb
das
pop
mov
pop
adc
fimull
or
shll
sti
add
cli
lcall
lock
cmp
sbb
jno
adc
out
sub
mov
mov
faddl
adc
mov
cld
aas
jnp
out
out
push
je
pop
adc
sub
jmp
je
pop
adc
mov
inc
repz
movl
xor
sub
lock
stc
insl
aad
mov
cmp
xor
adc
push
adc
xor
or
test
mov
push
addr16
gs
sahf
cmp
sbb
or
inc
lcall
lea
stos
sbb
add
jo
fcomps
mov
mov
stos
sbb
int3
mov
xor
outsl
sub
xchg
push
adc
push
loopne
sbb
inc
shlb
xor
cwtl
clc
lret
test
sahf
js
pop
out
xchg
cmpsb
adc
and
mov
pop
xor
xor
or
adc
pop
inc
fs
pushf
cmp
sbb
lcall
mov
dec
or
loopne
mov
inc
inc
mov
mov
push
inc
and
jb
fldt
push
adc
rolb
xor
popf
xchg
pop
jno
jbe
adc
sbb
out
pushf
gs
jo
adc
inc
jae
int3
or
push
adc
adc
push
adc
xor
and
push
call
sbb
je
jno
adc
dec
xorb
mov
repz
adc
iret
sbb
cmp
xlat
repnz
sbb
jnp
cmp
pop
adc
loopne
xchg
or
mov
fs
adc
sbb
fwait
pop
mov
inc
lds
adc
pop
cmp
push
idivl
adc
into
xchg
sub
jo
push
adc
movsl
out
and
enter
popf
dec
jl
cwtl
movsb
mov
jo
cltd
xchg
cmp
lcall
sub
inc
shrl
inc
sbb
mov
dec
stos
jno
dec
aam
or
xchg
inc
xchg
or
pop
ret
and
test
test
stos
cmp
sub
push
adc
pop
or
repnz
idivb
cld
mov
and
jp
mov
push
jbe
mov
iret
mov
jg
movsl
gs
jnp
mov
int
cmc
push
sbb
push
push
pushf
push
adc
das
out
loopne
adc
jno
xchg
cmp
inc
jmp
mov
adc
jge
int3
jmp
add
enter
xor
mov
iret
xchg
stc
ret
pop
jnp
mov
mov
addr16
je
sub
adc
mov
sti
fdivr
enter
mov
jl
mov
lret
mov
add
inc
pushf
and
call
sbb
mov
jg
mov
inc
js
mov
mov
add
and
cmp
cmp
frstor
xchg
or
adc
addr16
pop
test
xchg
fisttpl
aas
adc
jnp
jae
jmp
pop
or
add
sahf
inc
or
xor
adc
test
xor
ja
ror
out
inc
push
jne
sub
cmp
xor
scas
pop
repz
push
adc
imulb
adc
dec
pop
sbb
mov
enter
notl
addr16
pop
adc
push
pop
adc
add
repnz
aas
sarb
xor
mov
pop
cld
lods
mov
movsl
imul
mov
push
movsl
movsb
lods
xor
add
rolb
xor
and
loopne
movsb
sub
mov
ret
xor
or
bound
mov
and
adc
or
cmp
pop
les
jo
adc
sbb
gs
shrb
call
nop
out
lods
pushf
push
adc
movsb
sub
movsb
adc
popa
dec
sti
mov
daa
and
push
adc
jns
xchg
inc
fnstcw
imul
popf
pop
cs
mov
jl
pop
inc
imul
xor
inc
dec
stos
jmp
enter
xacquire
mov
imul
data16
jo
add
push
push
add
sbb
mov
push
sbb
sbb
dec
mov
pushf
push
adc
movsb
sub
adc
sbbl
int3
pushf
mov
mov
icebp
dec
mull
or
inc
push
push
fadds
and
push
adc
and
push
call
lock
mov
xchg
sbb
into
xchg
xchg
sub
cmp
out
pop
es
sbb
xor
lock
ja
lret
test
mov
jo
fmull
ret
je
pop
pop
pop
sub
xor
outsb
push
xor
push
ja
int3
data16
pop
in
jb
dec
fisttpl
cltd
cwtl
sahf
aad
jecxz
int
mov
mov
adc
add
jo
adc
movsb
sub
adc
sbb
mov
bound
lods
cmp
cmp
cwtl
jno
adc
push
lea
pop
jl
push
adc
xor
xchg
das
add
and
mov
aad
je
jne
adc
inc
sub
arpl
push
adc
aam
inc
mov
xor
or
outsl
mov
in
push
adc
das
sbb
sub
and
sbb
adcb
dec
mov
insb
daa
mov
in
pop
push
cltd
data16
nop
repnz
mov
cs
jecxz
repnz
inc
add
mov
mov
rcll
adc
neg
mov
out
stos
mov
movl
test
push
sarb
jnp
jmp
jbe
nop
and
jbe
in
mov
fcoms
inc
sti
rolb
and
fldenv
cmp
inc
or
xor
xor
movsl
or
sbb
andl
lret
popf
pop
popf
aam
xchg
idivb
loope
and
jecxz
aam
push
adc
in
jo
adc
mov
jae
inc
adc
xchg
loop
adc
jge
dec
and
sub
and
dec
pop
nop
add
xchg
jno
adc
ret
lret
les
adc
adcl
iret
shlb
add
outsb
aam
jge
dec
or
inc
push
fld
sti
add
mov
adc
hlt
cmp
faddl
cmc
fidivs
mov
push
adc
lret
stos
xor
jle
jo
adc
jae
mov
cmpb
sub
jmp
push
adc
bound
cmp
ljmp
pop
mov
or
mov
mov
mov
fisubs
dec
movsb
cmp
cmp
dec
shll
mov
dec
jae
adc
cmpsl
fstpt
scas
sub
mov
arpl
push
adc
push
sbb
fisubrs
scas
fdivs
adc
cmpl
dec
inc
push
leave
mov
inc
and
push
fisubs
je
orl
insb
mov
sbb
lods
and
dec
hlt
push
adc
test
dec
outsb
inc
sbb
loopne
xor
xor
adc
push
cmp
das
mov
sbb
pop
adc
dec
addr16
fimuls
xor
wrmsr
arpl
and
imulb
pop
adc
adc
call
int3
lcall
sbb
ret
fsubp
mov
mov
cmp
insl
mov
jae
xor
insb
ret
nop
jg
mov
jo
push
add
pop
dec
int
js
push
adc
dec
sbb
push
add
int
ja
mov
inc
mov
xor
mov
sbb
xchg
cs
sub
or
cmp
shlb
adc
or
sahf
fs
adc
js
pop
adc
xorb
sti
in
js
pop
adc
mov
cmp
les
adc
sub
push
adc
cmp
fs
sar
test
xchg
fsub
mov
xor
pop
or
xor
dec
pop
dec
and
mov
cltd
pop
and
mov
jle
mov
lcall
psubw
cmc
or
gs
insb
adc
nop
jns
or
adc
jg
pop
inc
mov
mov
jno
sub
ljmp
mov
add
nop
lret
mov
xor
adc
and
mov
xchg
sahf
mov
sbb
inc
lcall
pop
push
cmp
inc
or
mov
enter
lahf
mov
adcb
data16
mov
bound
stos
mov
adc
mov
ds
mul
inc
ja
ljmp
data16
lea
push
test
mov
outsl
aaa
call
aaa
pusha
inc
ret
sbb
xchg
mov
lcall
mov
call
push
loope
aaa
gs
mov
dec
lods
or
dec
xlat
jecxz
xor
xchg
sub
lods
xor
and
sbb
int3
add
sbb
jg
out
pop
jae
adc
jle
add
push
dec
cmpsb
add
jb
sbb
dec
stos
and
lds
pusha
xchg
xchg
jae
xor
mov
js
lods
clc
mov
pop
imul
dec
popf
push
adc
insb
add
inc
addb
pop
adc
jo
adc
ficomps
sub
push
adc
cld
sbb
adc
adc
je
outsl
push
lods
popa
and
add
imul
lea
clc
insb
sub
push
adc
mov
fwait
lods
pop
push
xchg
adc
xor
pop
adc
cmpsb
jmp
iret
out
sub
push
adc
mov
into
jo
jmp
and
fcomip
adc
add
imul
xlat
xchg
xchg
stc
mov
lea
fisttpll
les
adc
testb
push
adc
xchg
push
or
std
xlat
sub
dec
or
mov
xor
adc
cmp
movsb
mov
test
sbb
idivb
fucomip
fiadds
adc
mov
test
cmpsl
dec
nop
stos
mov
in
fiadds
adc
subb
adc
pop
mov
mov
or
mov
mov
pop
add
mov
jno
adc
test
dec
xlat
mov
addl
sbb
out
iret
movsl
xor
out
lcall
pushf
rcr
pop
adc
fdivs
adc
xor
lock
adc
mov
jne
mov
add
pop
int3
xor
lock
adc
in
push
adc
loope
xlat
pop
mov
pop
push
loopne
push
adc
inc
scas
call
or
sbb
pop
adc
fiadds
adc
adc
dec
loope
xor
adc
jno
adc
loop
lds
jns
mov
cmp
push
scas
mov
jb
into
cmp
out
or
je
rcr
pop
adc
add
nop
mov
ja
cs
inc
data16
cli
aas
js
cltd
cli
add
pop
das
bound
xor
cmpl
or
lret
mov
mov
loopne
xchg
sbb
daa
mov
sbb
adc
pop
pop
dec
int
inc
jno
adc
cwtl
push
or
shrb
les
adc
cwtl
dec
arpl
stos
into
push
add
ss
push
jb
xchg
mov
js
push
adc
sbb
push
cs
adc
pop
adc
pop
outsl
mov
jae
add
data16
lcall
jae
adc
getsec
rorl
jae
adc
jl
fstl
mov
fs
adc
xchg
lret
xchg
ds
in
mov
inc
mov
outsb
xchg
sbb
xorb
mov
mov
rorl
jno
adc
sub
pop
adc
pop
loop
dec
sub
bound
jo
adc
xor
cmp
cld
dec
ret
sub
mov
popa
test
in
fcompl
push
jnp
iret
popf
movb
xor
lods
testl
sbb
inc
rorl
jb
and
fnstenv
push
adc
push
sub
cmpsl
mov
adc
dec
cmp
xor
les
mov
fsubl
std
stc
test
mov
xchg
xor
cmp
mov
stos
dec
adc
add
sbb
jo
push
adc
ficompl
sbb
mov
jmp
cs
mov
iret
inc
pop
subl
test
fsubr
fiadds
adc
mov
popf
gs
fdivl
adc
adc
leave
sti
fadds
jno
adc
dec
sbb
outsl
mov
or
jo
adc
fiadds
adc
inc
or
and
leave
jne
push
lock
adc
dec
in
test
mov
mov
mov
fsubl
imul
mov
or
dec
mov
out
add
cs
xor
push
enter
dec
fdivr
aaa
mov
jnp
mov
cwtl
jne
fsubs
xor
sub
push
adc
ja
sub
pop
cwtl
push
or
lret
mov
ss
jmp
shr
dec
push
mov
push
adc
enter
mov
or
pop
jle
push
lahf
arpl
pushf
push
adc
imul
push
and
and
pop
lods
push
mov
pop
adc
adc
pop
push
pop
xchg
scas
add
stos
adc
aam
adc
and
enter
lret
mov
shll
and
and
push
outsl
jge
xchg
mov
sbb
scas
ja
adc
sti
sbb
ss
cmp
les
mov
inc
insl
jne
cmp
lea
ficoms
mov
add
mov
lds
pop
and
outsl
and
js
cli
mov
andb
jo
test
mov
mov
iret
test
inc
icebp
out
mov
sahf
out
pushf
dec
push
xchg
mov
mov
push
cmp
cmp
mov
sub
jecxz
pop
insb
push
in
lds
dec
mov
popa
mov
dec
inc
ret
repz
in
aad
ja
xchg
repnz
or
and
adc
prefetch
or
lahf
cmpsl
dec
xor
jecxz
cwtl
cmp
mov
addl
sub
cmp
mov
in
popf
xchg
movsl
cs
jno
ficoml
std
test
push
xor
xchg
mov
mov
aad
cli
mov
adc
xchg
jmp
mov
xchg
and
mov
inc
push
jno
push
pop
jp
fstps
gs
sub
or
dec
xchg
mov
lods
subl
jno
add
test
imul
out
insl
cmp
add
in
xchg
ss
and
pop
aam
push
in
insb
mov
sbb
loop
xchg
add
imul
lahf
adc
inc
fldcw
cs
add
ljmp
adc
jp
lock
pop
pop
xor
xchg
pop
fstpt
jmp
dec
mov
repnz
xchg
sub
sub
jmp
ret
mov
dec
stc
mov
dec
mov
xlat
les
inc
insl
rolb
pop
cmp
test
dec
cs
out
clc
adc
outsb
clc
into
add
call
xor
sbb
sti
jmp
mov
mov
pusha
dec
lea
adc
mov
inc
inc
ficomps
mov
adc
add
arpl
dec
mov
in
ljmp
int
cmp
mov
cmp
jecxz
out
dec
or
gs
inc
pop
xchg
fidivl
xor
cmpsl
enter
mov
add
cmp
add
jge
adc
sub
inc
sti
and
out
mov
lret
xchg
test
insl
insb
movl
push
push
sbb
cmpl
mov
jno
fisubrl
cmp
fdivr
hlt
add
jge
adc
testb
pop
lea
mov
orb
pop
xchg
cmp
and
push
adc
adc
xlat
mov
adc
mov
ja
lock
fsubrs
lods
push
mov
jge
cmp
mov
cld
xchg
mov
xchg
pop
mov
outsl
std
and
fimull
sbb
jge
mov
sbb
fs
xchg
mov
jp
std
xchg
movsb
dec
loopne
xor
xor
sarl
add
sub
jecxz
lock
mov
in
mov
push
shlb
mov
fsub
leave
sbb
push
call
adc
mov
pop
sub
or
sub
pusha
ret
inc
sahf
and
jg
movsl
or
popa
imul
dec
repz
sbb
loopne
lahf
push
shlb
push
pop
mov
push
scas
or
ficoms
fwait
or
ds
adc
pop
sarb
add
mov
cmp
pop
adc
scas
ret
les
mov
in
std
pop
mov
sarl
out
mov
jle
xchg
xor
pop
sub
lcall
mov
in
push
inc
xchg
es
enter
cs
push
cmpsb
mov
mov
cmp
and
pop
movsb
mov
jle
adc
test
jge
or
xor
jnp
dec
je
adc
clc
jmp
dec
push
pop
pop
call
shll
fptan
pop
mov
dec
gs
xchg
test
imull
mov
in
movsl
jns
out
push
push
mov
roll
icebp
dec
lds
les
adc
push
mov
mov
xor
jl
mov
push
adc
xor
insb
mov
out
scas
mov
or
popf
push
adc
mov
in
mov
mov
adc
mov
lret
pop
fs
sub
test
iret
xor
lds
mov
shll
icebp
fstpt
jmp
aas
arpl
ret
mov
rorl
shll
orl
cmp
js
ja
stc
movsl
push
in
ljmp
xchg
repz
push
mov
jne
mov
cmp
enter
dec
ja
rorb
movsb
inc
fldcw
aad
jnp
adcb
daa
and
mov
out
aad
pop
fsubrs
jns
dec
mov
or
dec
int3
pushf
cmp
xchg
jl
popa
scas
scas
testb
pop
xchg
fsubrp
mov
mov
insl
mov
icebp
sub
xchg
frstor
mov
xchg
xchg
mov
mov
arpl
pop
sub
dec
test
dec
jno
and
jae
ja
jns,pt
fimuls
mov
mov
ror
push
cmp
xor
repnz
and
xor
or
ss
xchg
lds
negb
xchg
loop
aaa
adc
fists
stos
sbb
out
adc
pop
out
and
mov
cmp
sahf
pusha
gs
mov
fimull
scas
sub
out
xor
pop
out
daa
cmp
mov
inc
inc
pop
xchg
cmc
popf
and
pop
mov
lds
into
outsl
aaa
aaa
and
pop
mov
cmp
sbb
sbb
cmc
cmpsl
movl
xchg
mov
xor
pop
push
sti
sub
dec
dec
or
xor
fists
cmp
arpl
fdivp
jb
add
add
sbb
lcall
in
in
pushf
lea
aam
fimull
xchg
in
lock
jno
sub
cmpsl
in
fwait
jbe
int
mov
push
sbb
xor
pop
lds
add
ja
les
insl
pushf
mov
and
xchg
push
mov
incb
push
adc
cmp
repnz
mov
imul
jo
push
popf
frstor
xchg
je
loope
xchg
or
inc
lcall
imull
adc
imul
and
in
mov
sahf
iret
mov
cli
sbb
push
sbb
cwtl
sarb
in
mov
sbb
jb
arpl
push
dec
out
jecxz
adc
xchg
nop
push
pop
pop
jle
xchg
pushf
or
jmp
lret
mov
in
call
mov
sbb
sub
and
aas
xchg
xchg
std
mov
iret
ret
pop
pop
scas
cmp
loopne
sbb
sti
div
rcrb
call
or
adc
inc
jno
icebp
decb
push
sbb
lock
imul
divb
call
jl
rorl
arpl
push
cmp
fisubs
pop
mov
loop
rclb
stos
or
sub
sbb
lods
cld
add
leave
out
and
mov
clc
sub
insl
pop
sbb
cmpsb
xor
push
pop
xlat
aaa
jno
add
adc
jg
add
sub
inc
test
jbe
pop
inc
lea
inc
repz
mov
xor
sbb
jge
jns
xchg
ja
lret
xlat
iret
jnp
xorl
xchg
aam
add
dec
sub
xchg
mov
jle
int3
jnp
aam
cmp
mov
xchg
mov
stc
xor
ret
in
xor
adc
dec
pop
adc
lods
aaa
fcoms
mov
call
shl
insl
ret
outsb
cmp
xchg
pop
mov
mov
jmp
hlt
std
lea
sub
pusha
lock
mov
jns
xchg
std
lea
mov
rclb
ja
push
popl
sub
mov
mov
xor
adc
test
push
sbb
popa
inc
mov
iret
out
bswap
std
cs
iret
in
push
outsb
daa
push
outsl
fcomip
mov
inc
mov
repnz
sbb
iret
push
rcrb
pop
ret
ficoml
negl
loopne
repz
pop
int
sbb
insl
jae
dec
cmp
jo
mov
mov
pop
rcrl
cli
add
loop
lods
xchg
jnp
repz
enter
lods
clc
sub
outsl
push
lds
sub
and
cmp
or
push
adc
jecxz
add
push
imul
lods
sbb
dec
lret
cld
insl
add
xor
xor
inc
loop
sbb
or
lock
mov
xor
adc
imul
mov
bound
push
adc
cmpsl
mov
cmp
movsl
fisttpll
jns
iret
ljmp
into
sbb
push
push
fs
lea
or
out
mov
mov
cwtl
dec
inc
lret
pop
int
outsl
mov
dec
or
sub
icebp
cmp
icebp
or
push
push
xor
loope
xchg
arpl
std
cmp
mov
xchg
jecxz
ret
or
xchg
xor
mov
sub
repnz
ljmp
dec
or
dec
icebp
adc
mov
out
jne
fisubs
lods
iret
adc
jnp
inc
cmp
adc
xlat
push
jle
cld
sub
into
aam
cmc
push
cs
lock
loop
xchg
in
mov
movntps
loop
mov
mov
sti
cmovo
push
mov
xor
call
dec
mov
push
repnz
test
aaa
js
mov
test
jbe,pt
xor
inc
xor
notb
icebp
test
push
test
cs
pop
xor
sbb
push
xchg
or
ret
jg
pushf
scas
loop
pop
sbb
out
add
hlt
adc
stc
rcll
cwtl
xchg
push
sub
xor
mov
jne
fld
adc
lahf
scas
cmp
daa
xor
mov
add
and
mov
mov
mov
pop
je
ds
cmp
stos
repnz
sbb
or
xchg
iret
adc
outsl
xchg
lock
in
mov
stc
push
insl
add
sub
loop
je
lods
cs
ret
or
ret
lds
dec
add
bound
adc
inc
out
iret
insl
xchg
mov
sbb
movsb
pusha
fisubrs
popf
or
outsb
js
pop
pop
mov
cld
mulb
xor
aam
je
mov
rep
mov
cmp
dec
push
and
sub
inc
cmp
sub
jo
lods
jl
adc
push
or
scas
movsl
rcrl
sub
dec
adc
test
mov
sbbb
xlat
scas
add
and
test
dec
std
jo
or
sbb
enter
mov
scas
xor
in
inc
andb
mov
out
daa
lret
insl
add
imul
xor
das
mov
outsl
incl
hlt
int
lock
mov
jns
xlat
mov
mov
jmp
mov
add
cmp
jae
mov
xchg
je
fwait
sbb
jmp
das
mov
imul
pushf
cwtl
dec
inc
ret
or
jmp
mov
shl
adcl
mov
sub
jecxz
add
sub
test
mov
imul
iret
orb
outsb
mov
int
inc
push
jo
mov
push
adc
push
xor
mov
pop
adc
pop
dec
mov
lods
out
cli
mov
sbb
icebp
or
shrb
jmp
dec
lret
xchg
nop
outsl
cltd
inc
loop
mov
mov
std
popf
cmp
icebp
xchg
dec
loopne
test
jae
pop
inc
dec
add
int
fwait
call
jae
adc
jnp
insl
mov
mov
push
adc
mov
loopne
push
mov
je
cmpsl
sbb
add
lods
sub
lods
dec
rolb
pop
lods
ljmp
xchg
jecxz
ss
out
shll
icebp
jne
popf
push
adc
add
mov
out
lea
mov
dec
in
pusha
xchg
or
sbb
ja
adc
sahf
cmp
pop
out
enter
psrlq
inc
cld
push
dec
add
in
mov
das
jb
jae
mov
out
rclb
shlb
xor
std
lods
ja
jnp
shl
cmp
loope
mov
in
loop
xor
lea
inc
add
mov
cmp
mov
push
sbb
jbe
int
pop
shl
inc
imul
rcll
lcall
cmp
jge
les
adc
ljmp
mov
aad
jl
dec
mov
test
push
mov
popf
out
xchg
xor
push
adc
stos
adc
adc
jecxz
xchg
dec
dec
jae
pusha
adc
adc
imulb
mov
add
cmp
in
jo
jo
popf
mov
movsl
jecxz
or
pushf
stc
aad
sbbb
stos
clc
sbb
xchg
stos
sbb
cltd
fldl
add
icebp
js
sbb
cmpsl
cltd
orb
fcomp
jo
adc
push
xchg
jge
mov
sub
cmp
xlat
pop
xchg
leave
cs
jno
stc
rcrb
jno
mov
jo
adc
repz
outsb
repz
data16
addr16
lea
ss
in
cmpsl
lods
nop
push
dec
in
call
imul
xchg
fs
lret
jmp
leave
or
roll
mov
aas
test
jg
stc
sbb
in
lds
jo
jo
adc
subb
push
outsb
nop
xchg
bound
pop
or
jo
notb
inc
or
arpl
pop
add
sbb
sarl
add
addr16
repnz
dec
push
cmp
in
and
shl
mov
repnz
dec
lods
pusha
hlt
test
rclb
in
sbb
or
ds
mov
sub
outsb
out
mov
stc
mov
sub
dec
lahf
js
xchg
sahf
jae
push
jg
and
mov
popa
test
ds
fdiv
ret
inc
push
jne
or
es
js
lds
push
adc
in
xor
clc
push
add
call
mov
push
adc
rcll
es
fildl
arpl
sbb
mov
fs
adc
int3
jle
adc
scas
cmpsb
repz
daa
push
cli
mov
lcall
cwtl
cmp
xor
clc
add
mov
cmp
xor
pop
pop
xor
xorl
es
outsl
cmp
scas
adc
push
loopne
fbstp
xor
jo
jno
xchg
pop
inc
cwtl
icebp
dec
lret
cmp
movsl
add
dec
pusha
cmp
jns
pop
mov
push
adc
mov
call
icebp
sahf
inc
pushf
clc
pop
out
lcall
mov
xchg
jg
and
pop
xor
xchg
cs
cmp
nop
scas
xchg
xor
mov
adc
fs
stc
mov
pop
mov
sub
in
lcall
mov
push
jbe
mul
lds
adc
add
mov
push
xor
xor
push
cli
sbb
in
mov
pop
mov
out
fcoms
outsl
shll
push
xchg
mov
pop
cmpsl
mov
xchg
mov
cmp
dec
int
shlb
cmp
cmc
adc
cmp
dec
xchg
mov
les
mov
mov
fs
icebp
loop
mov
out
in
dec
cli
repz
lea
sbb
inc
adc
push
cmp
dec
loope
pushf
xlat
pop
pop
mov
cmp
adc
shll
lret
push
cmp
icebp
test
mov
cs
push
mov
fistpl
cs
out
inc
fnstcw
icebp
loop
jo
rcl
inc
add
in
dec
jbe
out
xor
sbb
movsl
inc
mov
sbb
push
adc
out
dec
add
lock
mov
imul
cmp
adc
and
lret
insb
or
sub
push
lea
mov
call
leave
mov
xlat
cmpsl
out
sbb
mov
cmp
aam
mov
mov
adc
jb
fwait
std
xchg
test
das
sub
xchg
stc
js
push
lock
adc
push
neg
and
and
std
in
js
jno
popf
sbb
ja
cli
pushf
push
ret
sub
outsl
inc
int
sub
push
push
stos
cmp
cmp
and
loopne
or
mov
push
adc
pop
adc
ljmp
jl
int3
pop
jno
mov
add
adc
sar
cmp
jno
adc
stc
mov
lods
popf
out
mov
in
iret
loope
data16
stos
ja
shl
addr16
aam
imul
data16
mov
fidivl
pop
add
rcl
push
sbb
scas
arpl
je
jl
rolb
pushf
push
lret
outsl
ret
push
in
inc
sbb
xorl
lea
outsb
mov
dec
sub
lds
xor
push
mov
shll
mov
mov
mov
cmpl
icebp
insl
movl
mov
add
imul
adc
push
imul
jnp
fdivrs
jns
ljmp
std
mov
adc
xor
jne
into
sahf
cwtl
cmp
xchg
mov
pop
scas
xchg
in
or
push
and
jb
adc
xchg
roll
pusha
call
imul
pop
push
and
cmpsb
adc
in
js
mov
adc
outsb
cmp
mov
scas
clc
sar
cmp
inc
sahf
jns
lret
add
scas
out
data16
stc
adc
push
and
fs
mov
add
ljmp
sub
mov
dec
push
mov
iret
loopne
movsb
mov
stc
adc
adc
outsb
cs
lcall
mov
loope
xchg
clc
pusha
call
popl
sbb
and
lahf
pop
mov
push
adc
shrb
or
mov
enter
aaa
xchg
or
inc
shlb
aad
xorl
mov
andb
xor
leave
lahf
cmp
pop
xchg
jg
or
push
mov
repnz
add
hlt
jge
adc
rcll
sub
adc
adcl
cmc
js
push
cs
mov
adc
in
lea
sbb
inc
rorl
out
lock
pop
out
dec
in
ja
adc
pop
dec
fimull
hlt
mov
repz
outsl
lds
lds
lea
in
out
mov
pushf
movsl
and
cli
jns
jns
shll
mov
cmp
lret
mov
adc
adc
pop
inc
shll
aaa
xchg
or
add
push
lret
inc
jl
push
adc
out
cmc
mov
push
mov
xchg
or
fcmovb
add
shll
sub
adc
jge
mov
ret
repnz
adc
cli
testb
jns
pop
gs
cmp
jbe
mov
je
mov
cmp
dec
adc
cmpsl
jge
insl
cmp
pop
ss
rcrl
pop
push
insl
addr16
cmp
dec
cltd
test
dec
fsubs
call
ss
mov
sub
inc
outsl
mov
in
adc
sbb
repz
push
or
stos
mov
xchg
out
cwtl
sahf
scas
daa
cwtl
jb
aad
xor
pop
sbb
sub
rorl
nop
inc
arpl
hlt
pop
das
mov
out
inc
outsl
insb
stc
sub
mov
loopne
std
lods
shll
test
mov
sbb
and
xchg
mov
into
adc
pushf
mov
or
xchg
clc
stos
cmp
or
mov
sub
int
dec
icebp
test
push
jno
jmp
jae
daa
adcl
mov
xchg
xor
ret
in
gs
push
push
inc
repz
inc
lock
cltd
jno
sub
cmp
sbb
lret
stos
mov
cltd
xor
push
out
loop
sqrtps
adc
fstps
or
in
adcl
mov
xor
pop
adc
sbb
push
fdivrl
lret
pop
loopne
pop
loopne
insb
ss
nop
loope
lods
xchg
fwait
jg
xchg
mov
movsb
push
das
xchg
or
xchg
push
sahf
mov
movsl
enter
cmp
mov
pop
add
pop
popf
test
pop
cmp
jecxz
incb
xor
jnp
inc
popa
push
pop
lret
and
jae
sbb
fsubl
cmpsb
mov
lret
or
sbb
push
adc
test
iret
add
pop
rcll
lods
call
add
xor
dec
mov
negb
stc
addb
xor
push
subb
loopne
pop
dec
lahf
dec
ds
adc
mov
pop
loope
lret
pop
adc
sub
movsl
dec
lods
push
xchg
cmp
lahf
jge
sub
test
aad
inc
int
pusha
push
mov
jle
aad
shrb
sub
pop
jecxz,pt
ljmp
stos
push
jp
push
sub
mov
es
xchg
cld
pop
insl
xor
mov
daa
push
mov
lock
or
sub
mov
stos
dec
mov
jnp
jmp
es
lret
nop
mull
push
pop
jne
in
push
lret
stos
aas
out
jle
in
pop
push
mov
cmp
daa
cltd
cmc
sub
add
mov
jle
mov
sbb
mov
lret
pop
and
bound
into
scas
jecxz
mov
mov
push
pop
out
fcoml
lock
enter
xlat
cld
jnp
mov
mov
push
xchg
or
rclb
cs
lret
leave
mov
mov
lret
popa
and
fisubl
int3
mov
dec
xchg
or
fstpt
in
cmp
inc
outsb
mov
mov
cld
in
in
push
test
adc
mov
sbb
or
ss
mov
or
repz
dec
movsb
mov
mov
push
adc
stos
and
sar
les
adc
outsl
or
mov
enter
outsb
jmp
loop
mov
adc
mov
shrb
or
cmpsl
jns,pt
out
ret
fistpll
insb
add
cmp
inc
adc
cwtl
jb
or
or
mov
fwait
jp
popa
xchg
or
mov
push
adc
jge
sub
lret
mov
mov
push
cmpb
mov
clc
dec
push
mov
pop
mov
pop
adc
insb
shll
arpl
movsb
adc
out
enter
out
fcoml
repz
adc
push
adc
adc
fcmovnb
mov
sbb
js
adc
bnd
push
adc
sbb
test
pushf
pop
adc
mov
dec
mov
xor
fcmovb
xlat
jle
jo
sahf
cmp
mov
cmp
lods
hlt
cmpsb
int3
popf
xchg
jge
lret
insl
das
out
lcall
inc
int
dec
mov
repz
lods
xor
mov
fcomps
ss
push
inc
add
fucom
roll
adc
scas
icebp
adc
fdivs
inc
pop
dec
xor
or
daa
mov
cmpb
jo,pt
int
jo
adc
clc
cmp
mov
cmp
adc
add
les
jo
xchg
jns
push
sti
or
mov
mov
movaps
adc
aas
call
mov
mov
inc
cwtl
jae
adc
mov
shll
mov
lock
andl
ret
xor
sbb
lret
push
clc
push
mov
adc
cs
hlt
sbb
jo
adc
fld
out
xchg
jb
mov
jno
adc
jno
je
in
add
push
sbb
cmpsl
or
adc
fmuls
out
push
inc
inc
cld
sbb
adc
jns
mov
lods
mov
call
jno
adc
ror
xchg
ss
sahf
fdivs
adc
jns
andl
jle
enter
jl
mov
inc
mov
sti
cmp
xchg
ret
inc
push
fsubr
rolb
les
clc
jo
adc
cwtl
iret
daa
subb
adc
jo
adc
mov
push
adc
repnz
add
cmpb
stos
push
orb
lahf
mov
mov
int3
out
sub
sbb
cld
mov
hlt
cmp
shll
mov
xor
jno
adc
xor
sub
pop
scas
hlt
push
ficoml
xchg
inc
add
dec
cwtl
lret
insb
cwtl
ror
imulb
pop
jmp
fdivs
adc
lcall
pop
cmp
ja
mov
xor
push
scas
inc
lock
mov
adc
stc
add
sub
push
adc
mov
adc
xchg
ret
jo
xor
jns
inc
jae
adc
out
sub
pop
sahf
push
adc
sarl
pop
push
mov
jns
les
adc
int3
inc
ss
je
dec
movsb
pop
mov
shlb
xor
push
adc
inc
xor
ljmp
jo
adc
xor
shlb
jo
adc
push
adc
rorl
adc
movsb
pop
js
jne
mov
leave
mov
mov
inc
mov
shlb
mov
xchg
icebp
lret
add
jo
out
sbbl
cmpsb
push
insb
cs
mov
mov
aaa
inc
stos
jnp
cmp
outsb
inc
addr16
xor
mov
lock
xor
dec
push
sbb
cmpsl
inc
mov
adc
inc
mov
ss
mov
mov
jne
jo
ret
mov
call
sbb
sahf
jbe
or
xor
ret
push
xor
pop
insb
inc
xor
repnz
xor
xchg
addr16
and
adc
push
adc
mov
cmp
mov
inc
jae
adc
push
cmp
or
dec
add
xchg
popf
lock
insl
adc
xchg
shll
into
pushf
fdivs
adc
stc
add
xor
cltd
mov
repz
jo
adc
into
int3
movl
xchg
out
std
cmp
les
adc
stos
mov
adc
push
xchg
jg
mov
stc
scas
or
or
xor
jl
movsl
nop
jo
adc
out
pop
xchg
inc
push
stc
test
mov
int
inc
inc
jp
or
sub
inc
fs
jae
adc
adc
sbb
popf
call
dec
lret
jo
jae
adc
cmpsl
outsb
je
loope
jl
mov
jl
lods
jo
adc
insb
in
stos
pop
in
les
mov
dec
lock
pushf
ret
orb
sub
push
clc
lods
mov
lea
bound
or
movaps
jb
or
mov
pop
jo
xchg
fsubr
mov
sub
inc
shr
dec
push
scas
loop
inc
loopne
or
push
adc
dec
push
sub
or
adc
mov
out
or
out
cmp
and
jno
jb
adc
std
fcompl
inc
data16
cwtl
jo
adc
sub
loope
imul
xor
push
popf
add
push
pop
inc
dec
pop
sbb
inc
movsb
dec
push
mov
lret
lock
out
jo
enter
mov
repnz
mov
js
mov
xchg
out
aaa
dec
int3
jno
adc
add
mov
lret
pop
jp
inc
pop
out
outsl
call
cmpsl
aas
adc
push
adc
jb
add
add
adc
enter
loopne
jo
adc
outsb
popa
jg
sbb
mov
in
jo
adc
and
cmpb
insl
xchg
stc
adc
push
push
adc
xchg
into
data16
aas
in
idivl
or
je
movb
pop
xchg
test
cmp
pop
adc
mov
push
jne
or
cwtl
jae
adc
mov
cmp
adc
jle
mov
push
pushf
mov
movb
mov
xor
or
pusha
jno
adc
js
and
sub
sub
push
sbbl
jo
adc
jo
mov
and
sbbl
cmc
adc
push
adc
insb
shll
xchg
push
pop
loop
or
push
adc
xchg
mov
cmp
push
mov
lret
xchg
cs
and
or
adc
daa
mov
xor
in
push
adc
fiadds
push
adc
mov
push
adc
mov
and
lcall
push
pop
int3
gs
jae
adc
mov
inc
outsb
mul
int
or
fucom
into
mov
repz
int3
mov
pop
mov
cmp
dec
xor
mov
imul
cmp
add
pop
mov
cmp
in
loop
lcall
insb
push
js
push
xchg
rcrl
lds
jo
adc
out
xchg
jno
adc
jo
jo
adc
ss
and
mov
inc
popa
pushf
mov
fistpl
test
imul
bound
jmp
pop
loop
push
in
mov
jo
adc
icebp
or
roll
mov
inc
roll
pop
out
mov
js
out
clc
adc
mov
adc
pop
dec
push
je
xlat
mov
sbb
shl
insb
cmp
adc
bound
fiaddl
mov
push
pop
inc
stc
jle
cmp
xor
addr16
jae
fwait
incb
sahf
cmp
and
ds
mov
mov
or
imul
push
fwait
nop
inc
mov
cmc
outsl
dec
inc
lret
pop
nop
mov
pop
adc
sub
mov
xor
movb
enter
imulb
in
pushf
sti
inc
jnp
pop
cwtl
inc
rcr
push
push
fnstsw
sahf
arpl
roll
push
inc
sti
sarb
dec
xlat
cmpsl
stos
xor
ss
test
jp
aad
jecxz
cwtl
outsl
daa
mov
jl
adc
adc
adc
in
xchg
xor
shrb
push
adc
push
xchg
sub
mov
xchg
divl
ret
mov
mov
loope
and
push
or
sahf
lahf
mov
jecxz
fisubs
jae
push
popf
push
ret
outsb
pop
ret
sub
push
adc
adc
nop
lds
sbb
mov
popa
mov
dec
dec
out
lods
xchg
pusha
pushf
push
adc
add
mov
test
lret
cs
cmp
stos
out
pop
or
mov
adc
aam
push
sbb
rcrl
and
push
adc
inc
cmp
aas
push
scas
lahf
add
add
mov
in
xchg
imul
rolb
iret
cmp
adc
int3
add
pop
mov
ja
je
dec
in
stos
adc
mov
xchg
sub
push
adc
dec
mov
call
jo
adc
cli
outsb
int3
out
mov
dec
push
xchg
imul
gs
ret
lock
lret
rcrb
mov
add
fldl
mov
add
pop
push
imul
loopne
and
lods
pusha
mov
pop
neg
mov
jae
in
or
aas
in
xor
dec
cmp
imul
aad
cli
push
jl
int3
jo
adc
stos
jecxz
jge
inc
filds
push
lds
enter
jecxz
ja
xchg
stos
mov
and
cltd
mov
dec
mov
fs
sbb
addr16
dec
out
mov
push
adc
fisttpll
add
out
mov
outsl
mov
cwtl
cmp
mov
icebp
lret
add
or
xchg
les
adc
lret
xor
xor
jecxz
pushf
cmp
push
cwtl
jo
adc
lods
xor
xor
repz
jno
adc
into
int3
xchg
ret
pop
pop
loop
sbb
adc
je
inc
dec
stos
outsb
nopl
lcall
lret
jo
xchg
outsl
mov
mov
ret
mov
xor
shl
or
jo
adc
pop
jle
sbb
dec
sub
or
cmp
mov
push
into
roll
adc
pop
mov
xchg
jb
inc
inc
push
nop
jg
mov
sbb
xor
xchg
ja
dec
dec
jo
adc
clc
add
pop
cmp
cmpsb
jae
sub
adc
insb
rcrb
adc
mov
jl
xchg
sbb
mov
lret
sbb
push
adc
ret
jae
xor
js
dec
je,pt
pop
es
lea
xor
cmp
pusha
jno
adc
lcall
or
xchg
filds
out
fcoml
pop
dec
popa
ss
sbb
sahf
iret
pushl
sbb
push
adc
clc
sahf
adc
mov
arpl
pop
mov
push
adc
pop
fisttps
sbb
mov
rolb
xchg
cs
push
popa
jg
arpl
push
dec
push
lods
sub
fsubl
or
aad
pushf
ss
xchg
jle
lods
dec
jae
adc
push
pop
mov
gs
cmpsb
inc
lea
sbb
xor
cmp
xor
lret
inc
rolb
shl
adc
in
pushf
or
jl
cld
jb
and
ret
stos
andb
adc
xor
inc
xchg
sbb
mov
test
add
cmp
insb
loop
cmp
fists
xchg
mov
int
loopne
jle
jge
adcl
mov
or
loop
in
rcll
test
ljmp
shll
enter
mov
adc
shlb
aaa
out
arpl
lret
and
xor
and
int3
mov
aad
fmuls
push
adc
ss
cmp
inc
je
mov
push
adc
mov
subb
or
mov
aad
or
jecxz
push
adc
pop
push
addb
cmp
orl
mov
inc
push
and
mov
lcall
push
adc
jmp
lods
xchg
ret
popa
and
les
adc
std
mov
lea
pushf
ficompl
dec
adc
enter
or
mov
sub
enter
xchg
pop
jne
aam
fistpll
push
cmpsb
aad
cmp
fsts
dec
in
jno
adc
lock
jl
dec
push
dec
in
jno
adc
adc
jmp
loopne
mov
incb
cmp
sbb
rcl
pushf
or
jo
adc
mov
int
adc
fiadds
pop
pushf
test
stos
rolb
jb
adc
sub
adc
push
test
data16
mov
pop
push
sub
popf
les
adc
mov
pop
loop
shrb
test
jno
add
push
adc
ja
xchg
jle
arpl
pop
adc
mov
push
adc
mov
adc
mov
fs
mov
insl
add
mov
sarb
mov
faddl
out
lcall
adc
sub
add
dec
data16
jl
gs
mov
rcrl
jo
ret
or
test
inc
outsl
mov
xor
xchg
fdivs
adc
stos
xchg
push
push
sbb
sbb
dec
ret
imul
ret
xchg
mov
leave
xchg
cs
push
outsl
popf
arpl
fs
cmp
cmc
mov
adc
pop
xchg
mov
leave
xchg
cs
inc
jae
adc
and
cmc
push
pop
sahf
push
adc
lret
dec
int
mov
mov
les
adc
adc
pop
mov
add
mov
cmp
repz
int
xor
push
adc
out
pushf
push
test
push
adc
lret
insl
lods
ret
xor
jo
push
adc
xor
inc
pusha
mov
jge
push
adc
adc
jo
mov
ja
xor
inc
xor
jge
push
adc
in
popa
xchg
das
dec
or
xor
mov
lret
xchg
cs
dec
cmp
cli
cli
lcall
jge
pop
mov
ret
xchg
pop
addr16
mov
inc
mov
adc
hlt
push
ret
xchg
nop
mov
ljmp
test
xor
push
out
movsl
test
pusha
shll
xor
or
mov
and
ret
xchg
dec
scas
lahf
outsl
adc
nop
jo
adc
jmp
push
adc
pop
sahf
cld
jnp
das
pop
sahf
push
adc
ret
lods
dec
popa
lcall
or
arpl
pop
jne
jo
rcrb
fdivs
adc
inc
jns
fs
andl
mov
jo
adc
mov
cmp
sbbl
in
repz
inc
add
ja
into
cmc
sbb
lock
adc
jbe
pop
loop
xlat
hlt
jno
lds
iret
xchg
jecxz
call
xor
in
and
enter
push
out
mov
pushf
mov
inc
push
push
imul
xor
push
adc
stos
into
cmc
aaa
pusha
jno
adc
ret
push
push
je
jo
adc
or
cmp
iret
hlt
jo
adc
mov
rol
movl
adc
loop
inc
es
cmp
iret
cmp
outsb
cwtl
jo
adc
js
jg
lock
adc
push
lcall
clc
jmp
mov
mov
int3
in
cwtl
pop
dec
out
cmp
cmpsb
xor
xor
add
test
mov
cmp
xchg
fiaddl
loop
pop
sub
fsubl
outsb
lock
seto
inc
or
inc
insl
push
pop
jne
cmp
mov
notb
jbe
enter
xor
aaa
mov
xchg
sub
cli
push
frstor
pushl
xlat
dec
or
push
adc
clc
movsl
sub
xor
mov
or
adc
stc
push
xchg
mov
and
pop
push
mulb
dec
movsl
pusha
mov
push
adc
dec
scas
aas
out
and
pop
sub
mov
jnp
nop
int3
pop
int
inc
sub
add
push
adc
inc
sti
cmp
inc
mov
sub
jo
adc
inc
fs
sbb
les
adc
cmpsb
mov
shlb
and
aad
jo
adc
push
loopne
mov
es
sbb
hlt
dec
cmp
inc
aam
clc
or
pop
xor
jns
xchg
movsl
pop
push
or
adc
rep
adc
mov
mov
add
sahf
xor
mov
hlt
add
push
adc
sbb
jo
adc
push
mov
mov
rclb
jae
lock
gs
sbb
cwtl
jo
adc
sbb
in
xchg
mov
mov
jo
adc
dec
push
pop
dec
in
mov
xchg
mov
push
in
pop
adc
mov
in
pop
adc
rorl
push
adc
cltd
push
xor
shll
sahf
cmp
mov
jle
mov
sbb
lds
je
js
cmc
inc
mov
sub
jno
adc
sub
cmc
and
mov
and
ret
pop
xchg
pusha
das
xchg
xchg
sahf
push
adc
sub
ss
jae
into
iret
movl
jo
adc
or
mov
sar
push
iret
sahf
adc
dec
imul
dec
pop
adc
movl
and
push
adc
clc
jg
sahf
xchg
sbb
mov
stc
jns,pt
inc
or
cmp
jae
rcrl
jno
ret
or
shl
mov
inc
and
mov
xor
jo
into
arpl
lea
push
in
lods
push
arpl
xchg
inc
adcl
push
out
or
ds
mov
mov
jbe
lret
xchg
jb
dec
arpl
fnstcw
loope
test
push
adc
pop
add
inc
stos
mov
imul
mov
into
pushf
push
or
cmp
les
jno
adc
sbb
xor
mov
lcall
cmp
push
nop
mov
inc
fucom
out
in
aam
pushf
pop
and
xchg
das
or
push
adc
or
insl
jnp
jle
adc
push
adc
xchg
outsl
arpl
push
sbbl
push
inc
cmpsl
lea
dec
fmuls
out
sti
outsb
icebp
lahf
inc
mov
lcall
lcall
dec
mov
shl
iret
push
cwtl
mov
dec
cmp
add
sahf
ja
data16
push
adc
xchg
mov
ret
mov
push
sahf
pop
frstor
filds
std
movsl
ret
pop
sub
adc
mov
pop
sub
jb
mov
adc
das
dec
ret
adc
das
arpl
jo
adc
add
das
cmp
push
dec
out
sub
mov
pop
lods
xchg
jg
inc
add
mov
jbe
mov
push
pop
into
sbb
popf
push
adc
cmpsl
mov
dec
jo
adc
mov
push
cmc
push
aaa
sbb
adc
jb
pop
inc
movsb
xchg
and
inc
imul
cs
jne
aas
movl
sahf
scas
xchg
lcall
adc
inc
mov
adc
decl
ret
ss
mov
push
adc
sti
xorl
into
ds
push
adc
mov
aad
ficomps
stc
inc
fstpl
push
pusha
dec
push
mov
cwtl
test
mov
mov
ret
cmpsl
pop
fsubrs
sbb
sbb
sbb
mov
pop
inc
nop
ljmp
jb
xor
insl
mov
mov
cmc
cmp
cs
adc
mov
mov
les
xor
dec
cmpb
pusha
pop
or
mov
pop
hlt
test
adc
out
mov
xchg
rcrl
int3
and
push
adc
push
adc
push
dec
adc
or
inc
mov
push
adc
inc
jo
adc
xlat
outsl
movsl
xor
pop
push
mov
pop
lcall
imul
enter
or
daa
cmp
push
adc
jns
out
arpl
push
les
adc
cs
fdivr
mov
fisubrs
xchg
cs
lock
mov
in
xchg
or
or
pop
movsb
mov
leave
in
sahf
mov
repz
sbb
xor
repz
lds
loop
add
mov
mov
out
lcall
repnz
incl
adc
sbb
cmc
pop
adc
ret
je
iret
sahf
xchg
jns
xchg
jo
adc
out
sub
shlb
cmp
lret
pusha
arpl
lds
or
lock
movsb
out
mov
and
mov
repz
or
pop
shlb
mov
xchg
or
cmp
pushf
pushl
pop
or
insl
pushf
mov
mov
cmp
out
xchg
dec
je
or
pop
loopne
push
fmul
adc
push
adc
clc
jo
adc
sbb
hlt
jo
adc
xchg
js
cwtl
cli
xlat
inc
incl
adc
dec
arpl
out
sbb
pop
adc
inc
jno
adc
fcompl
jecxz
adc
mov
enter
mov
inc
pop
mov
jno
adc
mov
push
arpl
data16
mov
adc
xor
jo
or
arpl
rolb
inc
or
lret
cmp
pop
adc
ret
in
or
daa
inc
jno
adc
xor
pop
adc
xor
or
mov
adc
fs
or
fisubl
xchg
xlat
mov
icebp
jle
mov
test
push
adc
mov
mov
and
out
mov
push
adc
pop
jecxz
and
cli
lock
push
popl
adc
mov
imul
in
inc
je
or
rolb
fmulp
sbb
and
divb
and
adc
in
subb
xlat
jbe
das
pop
add
mov
or
shll
push
adc
sbbb
mov
inc
jb
push
mov
dec
lock
stc
push
ds
and
push
pop
add
adc
test
push
adc
sti
cmp
mov
aas
mov
cmp
rol
call
jns
jmp
adc
cmpsb
outsl
orb
mov
mov
gs
cmp
repz
or
mov
cli
pusha
dec
in
jno
cmpsl
inc
xor
dec
add
add
sbb
xchg
mov
jbe
out
leave
loop
cmc
pop
adc
fdivs
adc
lret
mov
test
pop
push
dec
in
and
shr
movsl
cmp
or
push
adc
inc
in
cld
xchg
aaa
cs
popf
rolb
jno
fnsave
inc
jecxz
je
rcll
mov
push
dec
rorb
sub
cmc
rolb
inc
sub
shlb
jl
nop
mov
aad
shlb
adc
xchg
jns
jo
adc
or
xlat
xchg
pop
or
dec
and
sbb
mov
adc
pop
push
push
pop
jno
adc
push
clc
jo
adc
jecxz
nop
fwait
push
adc
push
hlt
jo
adc
out
xor
in
es
xchg
lock
adc
xchg
jnp
adc
cmp
aas
inc
mov
stc
nop
jo
adc
test
pop
sbb
unpckhps
cld
cmpsl
xor
fucomi
aad
mov
sbb
inc
mov
loopne
lock
inc
push
inc
fildll
arpl
mov
dec
and
cmp
stos
mov
xor
or
mov
push
out
mov
mov
dec
test
lock
sbb
sbb
jl
push
cmp
aad
inc
mov
jmp
jae
mov
out
test
push
adc
adc
lock
dec
pop
movsl
mov
sub
sbb
jo
adc
stos
sbb
sbb
jo
push
cmp
icebp
or
mov
cmp
int3
push
mov
lret
xchg
cs
cmp
sbb
arpl
lock
mov
pop
lock
adc
out
call
inc
and
adc
sub
jg
cmp
insl
jmp
repz
cmpxchg
lcall
sbb
sbb
push
cmp
ss
lret
aad
ret
fsub
iret
sahf
rolb
jp
xor
adc
mov
sub
jb
cmp
mov
jns
xchg
jbe
iret
push
stos
pusha
inc
mov
xor
push
xor
rorl
jae
inc
jbe
lret
lock
loopne
imul
into
pushf
cmc
mov
js
imulb
mov
xor
or
jo
jo
adc
sbb
ja
inc
and
jmp
sub
in
mov
sub
pop
mov
mov
pop
cmc
movsl
in
shll
addb
repz
pop
and
pop
mov
outsl
std
movsb
inc
xlat
out
stos
jbe
push
addr16
jae
cmp
xchg
pop
out
cwtl
jo
adc
cmp
sbb
arpl
or
or
roll
push
fistpll
iret
inc
push
sbb
or
jb
int3
pushf
push
or
mov
xor
js
dec
mov
sub
add
jo
adc
sti
movsb
aaa
dec
sub
sbb
mov
or
repz
add
push
adc
inc
lea
pop
dec
insl
inc
pop
in
lret
cbtw
push
or
pop
inc
jnp
mov
in
cmp
cs
or
ds
adc
inc
or
add
cmp
or
rcr
jb
adc
cmp
cmp
jg
mov
int
fldl
cmc
mov
push
nop
jo
adc
and
bound
cmp
call
xchg
idivb
arpl
pop
xchg
cwtl
xchg
mov
lret
push
adc
lods
outsb
pushf
jo
adc
xchg
hlt
jo
adc
std
fsubs
fstpl
jno
adc
mov
addb
fcomps
add
adc
mov
out
mov
notl
decl
sbb
mov
fimuls
shll
cwtl
adc
xlat
jne
cmc
dec
xor
adcb
mov
dec
arpl
xor
and
icebp
cmpsl
mov
je
pop
std
xlat
sbb
sub
insb
pop
in
push
lock
test
sub
into
test
push
sub
jl
push
adc
jnp
addr16
testb
mov
xor
rcrl
imul
pop
orl
loopne
test
jnp
loope
sbb
push
jae
pop
into
movsb
sub
ficoml
mov
aaa
adc
inc
cmp
adc
ljmp
xor
pop
xor
outsl
mov
nop
fsub
push
sbb
stc
mov
and
jmp
loop
fsubrl
inc
inc
dec
and
lahf
fwait
cmp
sbb
sub
out
push
cmp
push
adc
insl
ja
xor
cwtl
mov
fiadds
repnz
dec
into
fptan
sahf
dec
jae
and
scas
pop
vsubpd
or
jp
loop
adc
lds
je
jb
mov
mov
adc
cmpsb
or
repnz
rol
pop
out
jg
pop
testb
cmp
xor
rolb
test
call
mov
push
jecxz
repnz
aas
dec
ret
sbb
icebp
out
xchg
hlt
inc
fcomps
push
mov
mov
push
int3
push
inc
nop
add
mov
or
push
pushf
outsb
xchg
out
icebp
imul
inc
mov
push
fisubl
mov
flds
ljmp
add
dec
cld
test
aas
rcrb
or
xor
and
inc
sti
sti
and
push
fisubrs
xchg
cmp
icebp
out
add
xchg
lods
cmp
sbb
loope
or
xchg
fadds
adc
inc
inc
jno
hlt
pusha
fadds
adc
addr16
daa
popf
inc
pop
xchg
lret
and
cmpsl
lds
clc
add
inc
outsl
pushf
jg
mov
nop
cmp
cmpsl
jmp
into
imul
test
sbb
or
and
pop
push
xchg
or
and
lock
inc
adc
dec
and
jo
lock
xor
push
test
mov
mov
sbb
scas
les
rcrl
jae
adc
roll
mov
insb
outsl
cmpsl
inc
mov
data16
xchg
pop
out
aad
xchg
cs
sti
sbb
mov
jg
out
js
xchg
mov
jp
or
or
mov
cmp
dec
ret
lds
jae
adc
xchg
push
out
mov
sbb
cmpsb
inc
lea
sub
in
loopne
iret
pop
dec
xor
sbb
test
test
add
mov
repz
adc
shr
psraw
into
rolb
out
add
mov
lcall
or
xchg
shlb
xor
inc
push
sbb
jo
push
out
jb
inc
jge
jo
adc
inc
nop
jo
adc
sarl
idivb
loope
dec
leave
loop
or
lcall
int
bound
jb
out
rcll
lods
jns
jmp
sub
mov
pop
sub
push
inc
xchg
movsl
call
push
int
pop
mov
push
jnp
xchg
or
push
adc
pmaxsw
ja
mov
stos
add
push
adc
neg
pop
pop
movsl
fs
ffreep
mov
pop
scas
mov
popw
sub
decl
mov
cwtl
jo
adc
mov
nop
jo
adc
push
mov
pop
ret
insb
int
test
popa
loop
clc
addr16
mov
pop
pop
fcoms
mov
mov
dec
std
movsl
test
dec
xlat
or
mov
and
or
jl
stos
std
lret
jle
out
cmpsl
aad
lods
xchg
xchg
pushf
dec
jne
adc
hlt
adc
push
adc
popa
ret
mov
push
pop
and
dec
lods
loopne
xchg
add
and
loopne
or
or
rclb
or
out
add
adc
inc
jno
push
test
stc
mov
outsl
loope
mov
or
push
or
in
jp
test
adc
call
ja
fiaddl
dec
sbb
sub
cmp
add
adc
mov
dec
and
insb
movsl
fs
inc
push
dec
sub
mov
call
jmp
sbb
sub
lahf
in
ja
aam
adc
addr16
xchg
mov
push
adc
dec
dec
xor
jno
cmp
jl
mov
pop
adc
popf
sbb
xor
ja
pushf
cmp
xchg
cmpsl
aam
shll
in
xchg
pop
dec
int
push
xchg
cs
push
nop
sbb
arpl
addb
mov
iret
adc
or
bound
fcomip
inc
inc
popf
cmp
inc
inc
add
sub
jo
adc
test
mov
sbb
mov
adc
nop
shl
lods
mov
call
fsubrs
shl
pop
add
xor
outsl
inc
push
dec
push
xchg
push
push
bound
lret
mov
enter
dec
filds
xchg
int3
pop
stc
push
fdiv
repnz
jb
ljmp
dec
int
dec
push
in
jb
adc
adc
mov
or
adc
out
and
adc
xlat
jg
mov
loope
inc
lcall
inc
fsts
loopne
xor
ss
cwtl
lret
mov
mov
js
xchg
jg
add
inc
sbb
pop
aaa
ljmp
rcll
add
loop
icebp
sub
xor
or
movl
popf
imul
icebp
push
adc
das
pop
je
adc
dec
pop
mov
and
or
mov
mov
int3
add
xchg
cs
aam
iret
sahf
xchg
jns
insl
int
inc
je
adc
add
adc
sbb
push
loop
mov
or
subl
pop
mov
cmp
xchg
outsl
aad
mov
xor
xchg
mul
add
adc
mov
cmp
cltd
xlat
sub
mov
stos
dec
pop
data16
sti
iret
push
data16
lahf
mov
mov
jp
xchg
xor
lahf
rcrb
pushf
divl
lcall
inc
dec
ret
ss
cmp
cmc
out
js
lods
scas
mov
or
imul
cmp
mov
lock
sbbb
cmp
out
adc
sub
dec
pop
lods
cli
cmpl
dec
clc
xlat
popf
enter
pop
xlat
cltd
add
cmp
push
adc
insb
cwtl
jo
adc
add
sbb
or
gs
pop
add
adc
and
mov
aad
mov
push
jae
push
jno
repz
mov
clc
xchg
pop
lds
or
lea
pop
inc
lret
mov
jb
adc
gs
sbb
fstl
or
push
adc
fisubrl
inc
gs
jmp
push
into
jmp
pop
les
in
xor
ret
cmpsl
and
loop
dec
lcall
adc
fiadds
cwtl
jo
adc
ret
add
test
push
push
mov
subb
arpl
cwtl
iret
push
cmpsl
pop
jne
adc
xor
inc
fs
pop
cli
push
ret
sbb
add
pop
push
int
cmp
lahf
loope
jo
adc
stos
add
xchg
ffree
test
xor
add
push
jmp
pop
test
xchg
adc
mov
or
sbb
in
fwait
mov
in
jnp
clc
jg
mov
ss
lock
dec
xor
lds
lods
aad
add
push
dec
and
mov
repnz
inc
cmpxchg
addr16
mov
fadds
adc
fdivr
mov
dec
call
sub
pop
xor
jmp
mov
dec
fdivrp
les
int
ja
fcmove
xchg
repz
dec
push
ss
jae
mov
aad
or
int
test
mov
inc
adcl
rep
cmp
cmp
sti
or
add
in
mov
popa
ret
shl
insb
and
mov
add
mulb
sar
dec
dec
mov
out
bswap
cs
and
adc
pop
push
int
mov
adc
pop
and
adc
mov
movsb
inc
mov
mov
loop
out
imul
or
roll
fwait
cmpsl
sbb
add
or
pop
xor
mov
imul
inc
pop
inc
and
xor
sbb
and
sbbl
add
nop
ja
mov
sbb
cmc
out
add
ret
sub
fst
dec
fsub
inc
sub
mov
mov
loope
or
dec
mov
loopne
js
mov
out
mov
ret
xchg
js
xor
out
cmc
out
add
dec
inc
imul
cmp
sbb
mov
loopne
xchg
out
idivb
mov
xlat
icebp
sub
mov
cs
ret
dec
xchg
jne
mov
xor
adc
aad
jnp
out
pop
pushl
mov
or
rcr
push
pcmpgtw
mov
sbb
push
iret
jg
cmpsb
inc
mov
xchg
mov
jmp
clc
js
test
stos
fisttpll
ljmp
mov
je
daa
and
mov
orb
sbb
popa
dec
ret
sbb
repz
das
sub
push
pushf
cmp
dec
popl
popf
stos
lods
xchg
xchg
pmulhw
insb
lret
mov
jne
cmpsb
pop
cmp
add
push
addr16
mov
adc
ja
stos
sub
repnz
mov
sbb
nop
mov
mov
inc
or
xor
cmpb
cmp
cmpsl
jo
push
adc
jl
orb
dec
push
mov
das
cmp
jo
add
pop
cmp
sub
xlat
sbb
jno
lcall
int3
pop
sahf
jg
mov
pushf
and
push
shlb
cmp
sahf
sub
jnp
push
andb
adc
ret
call
adc
ret
sbb
stc
add
or
sbb
inc
mov
enter
xchg
and
stos
mov
inc
fsubp
cmpsb
mov
mov
fwait
mov
int
cmpsl
hlt
std
adc
xchg
sub
pop
in
inc
xor
fmuls
lea
add
mov
mov
imul
rcl
add
ds
lret
add
jno
cmc
call
sub
inc
sub
inc
adc
dec
out
mov
stos
jb
test
int3
addr16
cmc
je
popf
dec
mov
mov
movsl
mov
in
fstp
mov
pop
stc
jecxz
std
nop
inc
mov
mov
fimuls
stos
outsl
jns
xchg
cmp
sub
sbb
push
repnz
mov
jbe
cmp
inc
cwtl
lcall
push
push
popf
push
rcl
mov
adc
inc
or
mov
aas
push
shlb
xchg
cmc
insl
addb
clc
imul
jnp
lods
js
ljmp
fcmovu
ja
lods
or
shlb
cmp
pushf
xchg
pop
je
adc
test
repnz
mov
sub
test
sub
push
adc
imul
mov
jno
in
jg
cmp
jae
and
xor
pop
mov
cli
je
xchg
or
cmp
and
movsl
xchg
fs
xchg
shl
out
lcall
nop
xchg
ret
loope
repz
lret
pop
and
adc
mov
mov
movsl
push
rcr
adc
icebp
add
cmp
and
or
pop
add
test
adc
fnstcw
cmc
xor
sbb
push
mov
push
jne
and
adc
jo
iret
mov
ret
lea
shll
popf
lock
xchg
sbb
jne
xchg
cmpsl
int
xchg
xor
lret
adc
lahf
out
clc
push
es
push
dec
leave
or
inc
mov
mov
xchg
xor
lret
sbb
aad
jnp
test
cmp
and
mov
cs
mov
xchg
xor
mov
insb
adc
push
inc
stc
and
dec
mov
lea
sahf
xchg
movsl
pop
xor
jecxz
popf
mov
push
push
inc
adc
std
test
xchg
fdivl
cmp
lock
jno
loop
mov
xchg
rcrb
fldcw
mov
or
fldcw
repz
jecxz
push
sbb
cmp
push
cmc
clc
mov
sub
xorb
roll
shlb
add
out
adc
pushf
insb
jmp
enter
rcrb
movups
adc
cmp
out
pushf
mov
imul
jns
pop
xor
xchg
rcrb
lock
adc
mov
mov
jnp
lds
jb
mov
push
adc
adc
push
adc
jl
mov
ret
orl
test
sub
jne
adc
out
mov
jne
int3
sahf
lds
push
sti
scas
push
test
xchg
aam
push
jo
adc
sbb
dec
pusha
push
faddl
adc
cmp
or
pop
fs
add
adc
push
xchg
int3
push
popa
jg
mov
adc
push
adc
push
adc
stos
ds
out
dec
jno
add
cli
hlt
xchg
mov
je
adc
in
mov
stc
pop
cmpsl
cmp
adc
and
mov
xchg
mov
sti
lcall
out
je
add
and
fsub
cs
sub
iret
mulb
adc
orl
mov
mov
pop
and
jno
adc
xchg
push
lcall
pop
mov
lds
adc
sub
out
lcall
sbb
add
push
adc
mov
jo
adc
daa
in
cmc
fdivrs
je
pusha
ds
adc
js
pop
test
mov
sub
pop
mov
in
and
mov
aas
mov
sahf
lock
mov
push
clc
outsb
rorb
enter
cs
push
adc
repz
and
stos
push
out
jno
pushf
lods
lock
std
orb
sbb
shr
xchg
sbb
andb
clc
mov
sbb
cmp
dec
jo
adc
fstp
pop
ss
and
pop
sub
xchg
stos
mov
push
adc
and
lock
sub
cmp
and
push
adc
sbb
mov
testl
adc
in
ret
adc
ret
les
xor
cmp
hlt
jge
adc
mov
jo
adc
push
fs
iret
out
xchg
imul
xchg
shl
fcom
push
or
push
xchg
rcrb
or
outsl
push
out
lcall
fidivs
jmp
lock
xchg
xor
pop
adc
mov
pop
ret
or
mov
lret
pop
xchg
or
mov
adc
cmp
sahf
xchg
adcl
repz
jno
mov
out
lods
mov
push
fisubrs
mov
sbbl
mov
cmp
loope
xchg
dec
lds
jo
adc
loopne
sahf
cmp
add
jo
jno
adc
mov
les
adc
out
pushf
pop
inc
pop
mov
cmpsl
lidtl
xor
sbb
lods
out
jo
sahf
cmp
dec
sarb
pop
cs
int
fs
adc
sub
pop
adc
jae
into
iret
cmpsl
push
add
push
jo
adc
fcoms
or
sarl
clc
pop
std
arpl
xchg
push
adc
inc
stc
cmp
jmp
xor
test
xchg
jmp
pop
adc
lds
movsl
movsb
adc
les
adc
gs
call
faddl
adc
sti
push
xchg
mov
xchg
mov
adc
pop
dec
int
push
xchg
push
or
shl
inc
cmp
pop
loop
hlt
jno
adc
rolb
or
outsb
inc
out
lcall
imull
xor
sbb
add
or
jmp
aaa
hlt
xchg
ret
cwtl
call
lods
mov
fucom
popa
fidivs
shll
xchg
stos
fcoml
out
aas
sti
das
sub
repz
icebp
cmp
ss
es
popf
leave
pop
adc
mov
dec
iret
popf
cmp
sub
outsl
mov
les
push
imul
sbb
loop
loopne
insl
jb
loop
shlb
pop
sub
jl
rolb
mov
les
nop
std
sbb
movsl
sub
sbbl
or
je
lcall
or
mov
addr16
scas
sbb
out
dec
pusha
lcall
pop
xor
std
push
nop
lds
clc
jmp
sub
jmp
lret
imul
data16
inc
sub
imul
inc
shll
popf
aaa
stc
lahf
stc
or
inc
lods
mov
sub
lret
stos
mov
into
mov
sub
jne
test
lcall
addb
mov
sahf
mov
aas
xchg
add
repnz
pop
jge
sbb
dec
mov
adc
call
mov
test
and
push
cmc
sbb
aaa
pop
inc
data16
sbb
mov
xchg
inc
jecxz
push
adc
rorl
cmp
popa
scas
pop
lods
gs
xor
cld
fwait
adc
mov
sbb
fsubrl
shrl
mov
icebp
xchg
add
jp
pop
rolb
xlat
xor
push
adc
enter
push
mov
xor
test
test
popa
ret
jmp
push
enter
add
cmp
aam
sub
mov
push
in
or
mov
shll
test
jmp
in
aad
fsts
iret
idivb
or
mov
stos
jnp
push
xlat
mov
dec
shll
push
mov
dec
shl
andb
sub
push
jl
aas
daa
cwtl
inc
cmp
adc
cmp
mov
jne
mov
pop
test
jl
dec
fdiv
sub
loopne
jno
xor
jns
cmp
scas
and
addr16
mov
push
pop
push
pop
mov
jb
xor
dec
inc
test
push
jns
inc
ja
shrl
fs
fistpl
jno
dec
push
pop
dec
xor
out
and
ret
xchg
mov
xor
or
xor
rcll
out
push
jb
ret
test
push
lret
xor
sub
sbb
lcall
mov
cmp
mov
in
push
cmc
addr16
test
mov
xor
push
fldenv
cmpsl
incb
mov
les
mov
pop
icebp
repnz
xor
movsl
pop
mov
mov
insb
dec
arpl
loop
and
mov
cwtl
dec
dec
lret
pop
into
addr16
xchg
ja,pn
and
in
cmp
pcmpgtd
pushl
in
sahf
xchg
lods
rorl
adc
jg
mov
mov
roll
xor
and
jb
fadds
jne
aam
or
push
out
cltd
je
sbbb
or
andl
lcall
xor
into
pushf
cmp
lods
das
outsl
and
je
clc
dec
adc
fld
ds
adc
inc
mov
out
pushf
cltd
lock
loope,pn
cmc
dec
sbb
xchg
xchg
mov
rolb
pop
adc
mov
icebp
dec
mov
cmp
mov
ret
xchg
fdiv
ss
sbb
cmp
pop
nop
ja
cs
pop
inc
dec
popf
and
cmp
push
icebp
ror
push
xchg
mov
xchg
or
subl
cmpsb
jns,pt
dec
call
inc
jno
sub
lds
nop
ret
das
add
fnstcw
jbe
dec
push
rorl
pusha
mov
cmp
ficoms
repnz
enter
or
data16
lea
shl
rcl
jnp
pop
sub
das
hlt
in
pop
lcall
xor
xchg
fisubrs
imul
add
xor
mov
adc
push
popf
jle
jmp
test
cwtl
sub
fisttpl
mov
cmp
es
scas
ds
jl
int
mov
in
mov
idivl
std
xlat
jmp
in
js
push
insl
cwtl
or
jo
ljmp
sbb
lods
mov
push
adc
andb
dec
cmp
push
dec
xor
adc
pop
outsb
rolb
xlat
pop
fmul
adc
dec
mov
xor
icebp
pop
adc
les
add
mov
hlt
sti
sbb
idivb
sub
mov
pop
adc
fwait
dec
in
icebp
jnp
jecxz
clc
jo
adc
adc
dec
sbb
sbb
in
adc
jno
xor
aam
mov
adc
cmp
jle
adc
dec
xchg
inc
push
xor
cmp
xchg
and
add
inc
xchg
dec
not
cmpsl
push
cmpsl
lds
add
adc
out
sbb
push
roll
jno
adc
jno
orl
xor
cmp
or
hlt
stos
test
xlat
clc
jo
adc
rcrb
sbb
les
adc
out
add
dec
testb
pop
fs
xchg
xchg
stos
cmp
pushf
pop
fdivrs
test
ds
adc
jg
adc
lret
pop
out
or
div
enter
es
jmp
mov
test
mov
add
negl
lar
mov
arpl
pop
adc
inc
mov
cs
adc
les
adc
dec
icebp
mov
adc
enter
adc
fstpt
sbb
sub
mov
xchg
mov
addr16
dec
shl
popa
push
pop
jno
xor
sub
cmp
xorb
dec
outsl
sub
loopne
into
pushf
push
lock
adc
lds
jno
adc
enter
test
jns
addb
push
adc
roll
inc
or
int3
add
cmp
sbb
adc
popa
ret
xchg
or
out
xor
into
pushf
xorb
sahf
ret
push
mov
jl
sbb
fcoms
out
pushf
mov
lds
xchg
sbb
pop
adc
fdivs
adc
jle
mov
jae
into
xchg
cmp
sub
loopne
sbb
pushf
push
adc
push
adc
dec
sbb
stc
xor
jg
cwtl
inc
mov
insb
mov
adc
shlb
popa
ret
adcl
mov
push
adc
lods
out
out
stc
mov
loop
lds
cmp
popa
ret
xchg
and
jmp
jo
fsubrs
mov
fwait
movsl
mov
ljmp
sbb
ss
cmc
push
lcall
xchg
aam
dec
imul
cltd
shlb
adc
cmp
pop
js
mov
inc
rcrb
clc
sbb
adc
call
int
cltd
clc
jge
cmp
jo
jo
adc
mov
mov
sub
push
adc
lock
imul
sbb
jno
into
arpl
loopne
lret
sub
push
data16
lods
dec
iret
mov
repnz
insb
lock
adc
jo
adc
mov
sub
push
adc
sbb
in
insb
lock
adc
mov
mov
cli
pop
adc
push
adc
lahf
fdivl
jle
xor
cmp
arpl
enter
mov
repnz
jnp
fistpl
enter
aas
out
int3
sahf
mov
xor
jp
dec
or
jo
adc
repnz
jo
adc
dec
inc
aam
inc
daa
push
push
rorl
inc
inc
bound
mov
negl
out
les
cltd
ja
dec
imul
push
mov
xor
lock
popa
pop
frstor
fisttps
mov
cli
pushf
or
ret
dec
out
jmp
hlt
add
pushf
push
adc
int
cmc
xchg
xchg
add
push
les
jb
push
cmc
in
jb
xchg
ja
dec
xchg
cld
out
and
jp
mov
sbb
insl
ficomps
out
out
xchg
sbb
jecxz
xor
and
fsubl
movsl
push
ja
sbb
jp
imul
xchg
inc
jmp
pushl
cmc
pop
adc
dec
fdivs
adc
pop
adc
neg
inc
insl
cmp
mov
mov
cmpsl
mov
cwtl
rcl
jo
push
adc
fs
sbb
lret
pop
mov
dec
pop
fsts
clc
jge
ret
xor
push
adc
jno
dec
and
scas
pop
out
jns
stos
pop
fnstsw
and
stc
imul
fldenv
add
mov
sbb
dec
test
out
mov
xchg
pop
mov
mov
or
cmp
enter
jle
outsl
test
addr16
pop
sub
pop
xchg
mov
aam
jno
adc
xor
push
shr
aad
jo
adc
adc
or
jle
mov
adc
mov
pop
push
xor
pop
adc
imul
mov
jmp
add
ljmp
adc
stos
mov
adc
jle
adc
es
xchg
adc
ss
mov
xchg
cmp
dec
xlat
imul
inc
outsb
and
or
push
adc
jo
or
sar
xor
sahf
cmp
cmpsl
nop
scas
fnsave
push
sbb
arpl
fidivrl
add
dec
sarl
call
mov
aam
dec
imul
shlb
adc
mov
int
inc
stos
les
adc
sbb
enter
icebp
lret
gs
ja
mov
int
dec
lret
clc
inc
insb
add
cs
mov
mov
sub
pop
cmp
fisttpll
ljmp
mov
pop
das
pop
gs
sbb
shll
movsb
scas
insl
jl
into
sahf
mov
xchg
pop
fs
and
jg
insb
iret
testl
adc
aaa
xchg
or
xor
stos
pushf
int3
ja
cmp
sti
movsl
out
and
shll
ljmp
add
das
mov
mov
jno
pop
cmp
cmpsl
int
cmp
ds
mov
fstpt
gs
aas
push
adc
repz
ss
xchg
loopne
adc
xchg
jge
mov
fs
jg
adc
arpl
arpl
dec
leave
push
movsl
jge
jmp
in
or
addr16
jmp
push
adc
adc
ss
hlt
xor
adc
sbb
push
ret
jl
xlat
cli
jnp
mov
cmp
mov
in
pusha
int
adc
inc
stc
cmp
loop
aad
ja
subl
cli
fisttps
push
dec
dec
mov
inc
gs
mov
ret
sbb
pop
subb
sbb
inc
loope
addl
sub
dec
test
pusha
cmpsb
dec
xor
push
inc
aad
dec
mov
inc
inc
jmp
icebp
and
xchg
inc
cmpsl
sbb
icebp
popf
std
sahf
dec
xchg
out
mov
out
pop
lods
lret
andb
insl
mov
sub
jnp
in
sbb
pop
out
fwait
mov
loope
mov
movsb
shlb
add
cwtl
js
inc
ret
jb
sti
and
mov
scas
ret
jle
repnz
aaa
hlt
loopne
mov
filds
test
rsm
and
pcmpeqb
xor
push
lds
loop
loope
adc
outsl
shrl
xchg
sub
xchg
mov
mov
repnz
int3
data16
cmp
or
fmuls
xchg
cmp
testb
mov
lods
lock
clc
xor
icebp
cld
inc
and
jmp
mov
sub
xchg
push
fadd
pop
jne
inc
and
imul
fnstcw
jae
sub
lds
shrb
inc
mov
cmp
fwait
test
sbb
push
mov
or
sbb
out
sub
jmp
xor
cwtl
test
mov
aaa
fstpt
cmpsl
xor
xlat
mov
ds
hlt
sub
mov
les
loopne
cmp
dec
cltd
jle
jle
sbb
add
lods
or
sahf
aad
or
and
jge
mov
adc
pop
dec
pop
push
mov
cmp
push
stos
call
int
fwait
mov
xlat
mov
push
adc
mov
xchg
int
insb
outsl
aas
dec
cmpb
or
or
inc
aaa
xor
and
jl
mov
enter
xchg
out
mov
mov
rcrl
out
jle
shl
mov
sarb
in
pushf
shll
mov
repnz
subb
int3
pop
clc
in
scas
arpl
mov
xor
mov
pop
adc
out
lret
mov
or
mov
inc
mov
mov
out
fs
cli
nop
jo
adc
pop
xchg
aam
shll
pop
jmp
gs
sbb
xor
rolb
cwtl
lcall
xchg
jne
xchg
jns
and
and
mov
push
adc
out
mov
call
insb
ss
adc
mov
jle
int
int
cmp
pmaddwd
loope
and
pusha
sbb
out
movsl
mov
pop
mov
cmp
aad
jp
jne,pt
shrl
add
dec
add
jo
adc
nop
jo
adc
mov
push
mov
cmp
mov
bound
inc
outsl
inc
fwait
popa
std
movsb
dec
xlat
icebp
into
add
pusha
lods
jl
leave
xchg
pusha
or
into
pop
push
sar
decl
mov
in
pop
cmp
sub
xchg
xchg
daa
push
add
out
pushf
and
ret
mov
loop
lds
mov
test
mov
dec
cld
jno
adc
test
or
dec
push
jbe
push
cwtl
addb
clc
jno
adc
rorl
mov
jo
adc
in
pop
adc
xchg
enter
push
dec
int
pushf
push
adc
and
sbb
lret
test
or
aaa
test
jno
adc
jo
adc
cld
dec
jno
adc
sub
dec
or
mov
dec
jle
push
xchg
inc
arpl
sbb
out
adc
jbe
push
adc
cmpsb
dec
ret
es
lret
sarb
push
out
adc
xchg
jns
jecxz
std
push
add
sub
sbb
adc
xchg
pusha
jo
adc
and
cmp
jb
xor
cmp
sbb
jo
jae
adc
pop
loop
mov
in
inc
sahf
sbb
jo
sbb
xor
pop
adc
mov
or
das
gs
mov
add
jns
or
adc
inc
out
repnz
push
jp
andb
out
loopne
test
or
or
imul
mov
cld
push
adc
add
ficompl
data16
adc
sub
loopne
xchg
sub
movl
int3
mov
lcall
scas
les
xor
and
insl
xor
sar
mov
jnp
or
movsl
mov
out
es
mov
mov
and
sbb
add
pop
mov
xlat
mov
push
movb
dec
xchg
test
mov
adc
xchg
shll
inc
push
movsb
xor
xchg
filds
and
inc
ss
push
and
push
and
cmp
cmpsb
adcl
mov
ret
push
adc
inc
dec
int
adc
push
xchg
adc
enter
leave
mov
pop
in
jno
jno
xchg
mov
call
dec
adc
cmp
and
insb
fisubl
test
and
cli
in
icebp
test
fsubs
adc
and
add
mov
es
call
pop
inc
dec
aam
lret
inc
push
add
push
cmp
adc
aas
sub
push
cli
cmpsl
mov
aad
or
out
sbb
data16
popf
pop
or
lret
pop
stos
adc
mov
and
jno
out
cmp
lods
bswap
jecxz
dec
stc
cmp
mov
jne
pop
jb
inc
jg
sbbl
movsl
push
adc
mov
arpl
stc
jl
jnp
loop
jmp
fs
pushf
cmp
mov
push
adc
mov
pusha
shr
pusha
js,pt
sbb
pop
inc
clc
sbb
jno
test
lret
mov
mov
pop
xor
cwtl
sub
add
pop
dec
pop
push
cltd
jle
out
and
les
in
cld
xor
xlat
inc
or
push
mov
aad
jnp
xor
pop
push
or
subl
mov
iret
sahf
xchg
in
or
ds
sbb
arpl
inc
inc
cmc
loop
and
les
jae
adc
out
insl
cwtl
les
xor
imul
movsl
push
adc
and
lcall
out
adc
sbb
nop
inc
mov
inc
sbb
mov
cmp
mov
rorl
jae
adc
adc
int
lock
pop
fistl
insb
dec
test
push
dec
pop
loop
jl
je
push
adc
repz
xchg
in
push
and
dec
xchg
in
or
jae
or
fldenv
pop
movsl
fldcw
or
pop
fstpt
loop
daa
and
pop
fsub
xor
sbb
int
lock
movsl
lods
jg
sbb
call
jp
es
jnp
xchg
mov
test
jns
nop
scas
lea
push
out
inc
or
mov
cmp
orl
sub
jb
xor
sbb
scas
cltd
xor
sub
bound
addr16
mov
xchg
sbb
adc
cmpsb
mov
xchg
aam
negl
shlb
push
adc
mov
mov
push
gs
fnstcw
xlat
lret
cwtl
ss
ret
mov
sbb
or
test
xchg
lret
xor
push
adc
movsb
inc
mov
or
jl
pop
mov
hlt
and
mov
sbb
fwait
xchg
movsl
push
adc
pop
cmp
cmp
pop
sbbl
cmp
mov
aas
js
mov
pop
mov
popf
fmuls
adc
push
adc
sarb
push
mov
pusha
sbb
xchg
mov
mov
das
adc
loop
pop
pop
pop
aam
xchg
int3
or
into
shll
into
iret
adc
cs
push
jp
out
fistl
xor
adc
pop
push
adc
lea
rcrb
mov
inc
pop
jo
adc
lock
mov
mov
push
mov
movsl
xor
stc
lods
mov
mov
cs
or
adc
test
pop
imul
push
rclb
fnstsw
dec
xchg
out
iret
pop
je
sarl
outsb
sbb
inc
loope
fstpt
int
dec
pop
jle
clc
sarl
jecxz
or
test
and
push
adc
ret
xchg
mov
jno
cmc
out
push
popa
ret
pop
inc
and
daa
call
adc
ret
hlt
je
xor
comiss
xchg
not
mov
pop
aas
pop
inc
jae
movsl
push
adc
sahf
pop
or
inc
popa
push
and
gs
out
stos
mov
clc
mov
push
jge
inc
in
call
pop
inc
dec
aam
lret
inc
push
add
aad
fcmovnu
adc
sub
cli
std
cmpsl
lds
xchg
fwait
jno
mov
pusha
mov
add
xor
dec
leave
push
pop
hlt
fsub
int3
xchg
das
test
hlt
dec
fdivrp
int3
lea
lock
fimull
sbb
mov
fdivp
jne
inc
jge
and
lods
cltd
cmp
fbstp
into
jl
xlat
cmp
sbb
arpl
cmc
loop
and
jae
popa
or
in
repz
jge
push
ficoms
ret
push
int3
add
sbb
cs
pop
jecxz
sahf
nop
in
push
addr16
adc
push
xor
xor
sbb
adc
insl
aad
mov
nop
or
lds
in
push
adc
and
inc
inc
jae
mov
cmp
pop
mov
jae
adc
scas
jge
push
sbb
arpl
sbb
pop
pop
cmc
loop
add
push
adc
ret
xor
stc
fnstcw
stos
inc
sbb
mov
cmp
test
sarl
and
ljmp
xor
pop
jae
jno
xor
mov
mov
pop
nop
mov
adc
pop
scas
loope
sahf
dec
add
loop
lcall
fisubl
fadds
repnz
or
pop
es
jo
iret
ljmp
dec
fwait
shlb
arpl
push
lahf
repnz
jmp
sbbl
jns
xchg
cmp
int3
jnp
shlb
mov
stos
mov
mov
inc
insl
push
sub
div
bswap
call
mov
xchg
cmpsl
pop
pop
cs
lret
xor
iret
sahf
cmp
cmpsl
jg
iret
mov
mov
xor
mov
cmc
scas
jecxz
shll
addb
xchg
ficoml
push
sarl
sbb
arpl
shrb
repnz
lods
movsb
push
adc
push
adc
hlt
mov
shl
adc
push
adc
or
hlt
stos
into
fwait
mov
stc
sub
jo
mov
test
push
das
sti
std
mov
sub
add
cltd
add
mov
jmp
mov
xor
xchg
sbb
jp
int3
scas
je
push
arpl
pop
mov
movsl
test
adc
jo
sbb
jmp
movsb
push
adc
inc
out
aaa
in
push
push
jg
out
les
xlat
adc
adc
adcb
movsl
mov
hlt
movsb
lret
les
je
push
adc
add
jbe
push
les
push
psubq
adc
arpl
add
repz
mov
adc
jmp
sbb
shll
pop
movsl
adcl
and
push
movsb
push
adc
push
add
icebp
dec
xchg
out
cwtl
push
adc
inc
dec
in
std
inc
mov
andb
out
data16
add
adc
testb
jbe
mov
stos
cmp
lcall
adc
add
out
jbe
loopne
nop
push
xor
pop
jo
shlb
adc
test
cwtl
rcrl
add
mov
fistpl
js
sub
mov
sub
shlb
mov
cld
data16
push
adc
aam
xchg
mov
mov
f2xm1
enter
sbb
jge
sub
cmp
push
xor
cmc
xlat
cwtl
add
negb
cmpb
inc
dec
mov
adc
imul
rcrb
mov
adc
xchg
push
push
jg
mov
push
jge
sub
mov
daa
jg
inc
std
or
std
fldcw
sub
imul
pop
stos
test
pop
add
xchg
andb
iret
and
aam
rcrb
mov
xchg
pcmpeqw
lea
pop
lret
jecxz
rcrb
pop
adc
adc
movsb
lds
sbb
push
adc
or
cs
cmp
iret
sahf
xchg
aad
xor
les
xor
pop
xor
jbe
std
loop
mov
adc
adc
sbbl
xor
sbbl
stc
insl
popa
push
mov
cld
xchg
sbb
cwtl
sbb
sahf
arpl
icebp
or
jo
adc
arpl
xchg
push
adc
arpl
mov
pushf
sahf
push
adc
jae
lods
fnsave
jns
fidivs
pop
mov
and
push
adc
into
push
push
mov
test
xchg
xor
jle
mov
push
adc
jbe
std
loop
mov
insl
push
mov
ret
jns
xchg
mov
cmp
or
testb
arpl
and
push
adc
adc
jnp
repz
jo
jo
adc
xchg
js
inc
imul
lds
mov
lock
insl
xor
nop
jo
adc
mov
aam
lods
sahf
push
adc
push
idivb
iret
sahf
adc
lcall
sbb
int3
imul
mov
push
adc
rcrl
mov
cmp
or
xor
andb
adc
jmp
je
loop
imul
iret
sahf
xchg
in
or
mov
push
adc
arpl
icebp
loop
and
dec
mov
sub
insb
sbb
out
fwait
mov
xor
mov
or
imul
adc
test
xor
nop
fnstsw
push
jo
adc
mov
les
push
adc
push
movsb
xchg
iret
pop
jg
rcrb
nop
jo
adc
rcrb
popa
or
sahf
push
adc
sarb
shll
sbb
mov
pop
test
xchg
testl
cmpsl
in
and
mov
cmp
mov
adc
jo
adc
push
adc
std
dec
adc
xchg
xor
ss
xor
push
push
imul
sbb
pusha
cmpsb
mov
sahf
push
adc
and
mov
mov
push
adc
movsl
cmp
jno
push
aam
loopne
adc
push
adc
into
xlat
fnstenv
xor
fwait
sub
lcall
add
ja
adc
push
adc
andl
jo
sbb
push
or
fwait
dec
andl
push
adc
dec
mov
jb
mov
jo
adc
adc
leave
shll
ret
sub
push
fisttps
jae
xor
xchg
ret
insl
jo
out
lds
sbb
pushf
push
adc
add
mov
sbb
mov
ret
jle
adc
outsl
lret
push
mov
pushf
rorb
daa
scas
lret
xlat
xor
mov
or
push
adc
xchg
cmp
outsb
mov
or
xchg
adc
cmc
fmull
add
adc
and
xchg
jg
sub
addr16
pop
negb
cld
xor
inc
dec
or
adc
or
fstpl
jmp
push
adc
xchg
mov
in
movnti
pop
not
inc
push
jge
xchg
sub
daa
jne
fdiv
roll
jne
mov
mov
mov
add
negb
sub
out
jle
cmp
jbe
jo
adc
dec
dec
popf
icebp
movsl
or
imul
fcomps
sahf
shll
add
sahf
push
jg
aam
fcoml
in
push
adc
mul
push
and
and
setle
sbb
lock
int
xchg
cs
xor
es
movsl
sub
nop
mov
cmp
mov
repz
mov
lret
push
stos
jo
push
adc
or
xor
ret
xchg
mov
ss
dec
xchg
sahf
cmp
and
rorb
stc
adc
je
jno
adc
mov
outsl
mov
and
insl
adc
jae
lock
push
adc
push
leave
xchg
lods
cwtl
test
lret
push
xchg
aam
and
jnp
xor
in
sahf
push
adc
push
sbb
in
adcb
push
adc
xchg
mov
data16
pop
adc
fsubs
sbb
rorl
xor
pop
adc
xlat
add
jns
aaa
mov
jne
mov
hlt
xor
pop
adc
xchg
mov
cmp
inc
mov
lahf
sbb
arpl
movsl
mov
js
cli
mov
into
sahf
cmp
js
jp
cmp
and
sbb
adc
cmc
scas
gs
popa
dec
add
out
lcall
out
adc
pop
dec
ror
mov
mov
in
jne
out
call
inc
and
xor
xchg
xchg
sbb
pop
mov
adc
dec
push
frstor
jo
push
xchg
outsl
das
mov
je
adc
pop
sbbl
popa
ss
adc
popf
iret
imul
nop
js
movsl
leave
mov
pop
ds
jg
iret
sahf
or
push
adc
or
out
add
mov
aas
jecxz
out
in
dec
pop
out
in
xchg
push
inc
fimull
sbbb
setb
aam
or
sbbl
or
insl
lds
out
mov
jecxz
in
jp
sti
loop
sahf
jp
fldenv
imul
sbb
or
adc
imul
mov
push
jl
out
sarl
xor
fdivs
popa
xchg
jge
jmp
push
popa
sahf
subb
xchg
mov
add
out
jbe
data16
js
out
nop
jo
adc
adc
imul
arpl
test
ljmp
loopne
inc
pop
je
cmp
lods
xchg
jge
imul
insl
or
sbb
add
and
jo
repnz
adc
add
fdivl
adc
mov
xchg
pop
mov
mov
push
xchg
out
mov
inc
xlat
repz
cmp
dec
push
pop
iret
in
and
mov
mov
cmp
fcompl
sbb
inc
es
rolb
iret
sub
push
adc
mov
iret
adc
push
adc
fildll
add
or
nop
push
pop
jle
push
push
pop
mov
popf
mov
out
adc
cmc
lret
adc
xchg
jl
sub
dec
and
lea
imul
push
inc
iret
add
jge
cwtl
mov
comiss
test
sbb
jnp
or
test
cvttsd2si
xchg
jl
sub
dec
sub
jno
in
or
fstpl
pop
leave
addr16
sbb
insl
or
jbe
sarl
inc
add
ljmp
lds
lcall
cmc
mov
test
arpl
sbb
hlt
sub
push
gs
cmp
pop
into
mov
out
xor
pop
adc
or
icebp
jae
fsub
sbb
or
mov
out
xor
lock
repz
add
xchg
or
xor
shrl
mov
cmp
xchg
xchg
cli
test
dec
mov
xchg
cmp
mov
insb
add
push
cmp
js
rorb
mov
mov
loop
mov
insb
cmp
ret
call
jle
push
mov
xchg
mov
adcb
out
and
sbb
mov
dec
stos
fsubrp
sbb
push
or
rclb
leave
das
pop
adc
pop
int3
xor
in
xchg
fwait
xor
arpl
idivl
lret
push
push
inc
repz
shl
mov
adc
or
rorl
jo
adc
shlb
shlb
lret
mov
je
jno
adc
pop
mov
sarb
add
lds
jo
adc
inc
xrelease
out
cmp
mov
insb
or
sti
and
notrack
xor
xor
in
int
xor
pop
pop
push
fidivrl
in
add
adc
pusha
dec
aas
push
adc
mov
cwtl
shll
pop
jge
out
xchg
cmc
pop
mov
cs
lock
sbb
popa
cmp
les
adc
cli
pop
mov
rcrb
mov
dec
jge
gs
cmovbe
repz
gs
mov
and
sbb
adc
push
push
out
xor
adc
outsl
std
scas
fildll
outsl
mov
loop
pushf
cmp
inc
in
insl
cmp
jae
into
push
sti
cltd
xchg
mov
das
hlt
int3
jl
and
insl
cmpsl
and
insl
and
scas
lock
sub
jb
ja
xchg
mov
xor
xor
adc
pop
mov
movsb
jo
shll
or
popa
enter
adc
jne
pusha
iret
xchg
cmpsl
fldl
sbb
enter
dec
mov
popa
pop
push
mov
out
imul
mov
adc
xchg
xor
jg
lcall
pop
adc
repz
push
sahf
or
jmp
cli
hlt
cmp
cmc
pop
adc
sbb
adc
popa
inc
test
cli
pop
adc
loope
xor
xchg
mov
xor
and
adc
int3
xchg
popa
mov
cs
or
cwtl
out
adc
or
lods
clc
jo
adc
inc
or
pop
call
add
add
mov
jno
adc
or
sub
int
movsl
scas
hlt
mov
dec
out
fsts
scas
popa
iret
mov
ljmp
add
push
xor
js
push
adc
sbbb
xchg
out
dec
movsb
mov
jl
sub
pop
adc
imul
cmp
pop
arpl
inc
jmp
sahf
popl
adc
addr16
imul
adc
mov
neg
or
xor
ja
out
negl
pop
sarb
jno
adc
iret
je
gs
dec
mov
adc
mov
mov
cmp
arpl
cmp
inc
mov
cmp
mov
lock
adc
sub
popf
inc
jno
adc
cmp
rclb
xchg
test
shll
xlat
in
pop
adc
xor
ja
or
push
adc
xchg
insb
pop
or
push
inc
sbb
mov
mov
and
cmp
js
push
adc
sbb
mov
in
insb
sbb
mov
or
mov
mov
adc
popf
rorl
adc
mov
rcrl
jmp
adc
jo
adc
fwait
push
or
cmpsl
incb
xchg
js
xchg
sete
or
js,pn
xor
mov
pop
or
xor
add
adc
call
insb
pop
or
mov
cs
insb
pop
or
sahf
adc
add
sbb
sub
iret
jno
xchg
outsl
dec
dec
cmp
scas
xor
or
pop
or
lea
shll
sahf
cmp
push
jnp
cs
sub
sbb
test
mov
mov
mov
pop
movl
or
fs
sahf
cmp
add
arpl
inc
movsw
sbb
mov
test
rolb
cli
sbb
mov
test
push
popa
lret
adc
push
mov
shll
xchg
lret
pushf
adc
pop
mov
xchg
or
popf
shlb
jp
loope
inc
loope
mov
xchg
icebp
ret
popa
ret
xchg
adc
pop
mov
sub
push
outsb
cmp
mov
fwait
lret
or
push
out
mov
clc
aas
cmp
xchg
in
push
add
adc
bound
mov
xchg
fstl
sub
int
cmp
push
les
ficoms
bound
mov
xchg
fstl
sub
int
cmp
push
les
ficoms
bound
mov
xchg
fstl
sub
int
cmp
push
les
fists
sbbb
arpl
mov
xchg
fcoml
sub
int3
arpl
and
add
insb
movsb
pop
mov
lret
sbb
xchg
mov
outsb
or
test
lret
sbbl
out
xor
jne
ss
sbb
adc
mov
xlat
mov
inc
pusha
sub
aam
mov
inc
insb
fwait
adc
push
mov
lcall
mov
cmp
imul
sbb
enter
loop
aam
inc
data16
lret
mov
cli
hlt
or
inc
outsl
out
rorl
adc
cmp
xchg
loopne
adc
stos
push
adc
test
sbb
or
dec
dec
and
sbb
fcomi
sbb
jb
sub
enter
pop
jge
xchg
sbb
fs
sub
scas
push
adc
sti
cmpl
sub
push
adc
mov
push
call
stos
push
adc
push
int
dec
sbb
test
cmpsb
push
adc
sbb
mov
xchg
mov
lods
cmp
daa
sbb
pop
call
repz
dec
cltd
cld
push
cmp
cmpsb
push
adc
xchg
negl
mov
adc
pop
sub
mov
inc
in
dec
imul
push
adc
stc
jbe
clc
inc
sbb
dec
int3
arpl
mov
adc
pop
ds
sbb
js
fisttpll
sub
cmp
stos
push
adc
loop
inc
jge
scas
push
adc
and
push
pop
imul
push
adc
lods
nop/reserved
shlb
ds
xor
push
adc
pop
movsb
arpl
adc
ljmp
add
out
dec
pop
cwtl
daa
test
scas
add
mov
sbb
fidivs
sbb
int
test
inc
fwait
sbb
popf
fdivs
mov
arpl
push
lods
stos
xor
xchg
jge
add
nop
jg
clc
xchg
pop
and
mov
sbb
lcall
adc
sbb
push
adc
mov
iret
add
mov
adc
es
or
adc
add
shll
in
push
stc
cwtl
jmp
cmpsb
push
adc
fdivrs
popf
jno
inc
sti
cmpsb
inc
fisttpl
push
cmp
xchg
int
clc
mov
mov
add
cmp
xchg
or
inc
fnstcw
or
or
cmc
gs
jb
cmp
icebp
imul
mov
xchg
test
je
lret
pop
shll
mov
push
icebp
dec
rcll
inc
pusha
arpl
mov
xlat
xchg
mov
dec
out
and
pop
aam
or
mov
fcomps
mov
ret
xchg
mov
test
xor
inc
add
mov
cmp
fsubs
leave
and
shll
xorl
or
lds
push
pop
into
cmpsl
xor
lahf
cmp
shrl
add
je
cmp
dec
out
popa
fcompl
imul
cmp
mov
mov
add
mov
sub
xchg
inc
rcl
fs
cmp
dec
ret
jle
pop
fisubs
int3
mov
xor
lds
xchg
sbb
jne
mov
imul
insl
or
dec
test
xor
call
movsb
pop
decl
mov
test
insl
sub
dec
test
xor
movsb
pop
decl
mov
test
cmp
repnz
add
cwtl
aam
jl
imul
adc
mov
in
popa
inc
rcl
aad
pop
mov
into
xor
outsl
add
sbb
adc
lea
leave
sahf
xor
outsl
mov
xchg
enter
mov
push
jg
push
pop
imul
lret
push
ficoml
mov
mov
out
mov
mov
push
popa
push
cmp
adc
arpl
loope
dec
stos
outsl
cwtl
mov
jg
iret
adc
std
aad
pop
imul
push
jle
xor
mov
or
push
dec
repz
daa
dec
mov
loop
and
aam
in
ss
enter
add
imul
shr
pop
add
inc
fnsave
mov
mov
test
pushf
movsl
lcall
xor
bnd
xchg
pop
leave
loope
sub
pop
iret
outsb
sub
sbb
mov
stos
fwait
out
test
mov
xor
pop
pop
insl
xor
mov
outsl
repnz
shlb
jnp
xor
fdivrp
pop
es
mov
xlat
outsb
push
ss
mov
outsl
lret
in
jo
lea
cwtl
mov
mov
clc
or
out
pop
loop
mov
imul
lret
add
nop
push
ret
cmpsb
lds
filds
cmp
imul
jp
imul
xchg
rcl
fwait
lds
pinsrw
dec
mov
push
in
out
fs
iret
sahf
clc
out
push
andb
dec
iret
inc
adc
cmp
cmp
test
cmp
sub
add
mov
outsl
sti
dec
jnp
adc
ret
jl
pop
in
pop
rcll
lcall
mov
inc
xchg
mov
jl
add
xchg
addr16
into
mov
and
jg
cmp
sarb
mov
and
scas
lea
jnp
or
shll
inc
psubusw
pop
or
xchg
inc
addr16
dec
sbb
dec
cmp
icebp
sub
lock
ljmp
pushf
cmpsl
popa
ret
xchg
ret
movsl
adc
cli
cltd
mov
mov
and
je
ret
daa
cmpsl
cli
or
lds
mov
and
cmp
scas
mov
add
xchg
ss
xchg
in
into
lcall
xchg
mov
jbe
push
jecxz
pop
push
pop
cmp
movsl
inc
mov
or
dec
bound
push
pop
js
in
pop
outsl
and
cmp
iret
lret
addr16
inc
sbb
ljmp
or
rcrl
push
cmp
into
inc
fs
sub
bound
or
mov
movsl
sbb
or
sbb
adc
xor
xor
gs
adc
dec
xor
sti
out
push
cmc
loop
out
call
mov
repz
cmp
rorl
std
movsl
ret
xchg
subb
pop
xlat
bound
or
sti
adc
mov
test
xor
lods
xchg
pop
mov
roll
lds
mov
jno
cmpsl
orl
mov
mov
push
clc
mov
push
and
push
or
repnz
orl
mov
bound
xor
cltd
pusha
clc
clc
mov
xchg
push
mov
test
xchg
jbe
dec
enter
dec
add
dec
pushf
cmp
cmp
cmp
movsb
insb
sbb
lret
cltd
lods
movsl
mov
shll
sbb
jns
pop
arpl
xchg
mov
arpl
sets
bound
xor
jns
sahf
cmp
cmpsl
push
dec
jnp
pop
lods
mov
mov
mov
ja
xchg
mov
lret
pop
sbb
sbb
jg,pt
adc
push
adc
dec
adc
mov
lret
mov
pop
aam
loope
adc
sahf
daa
js
add
js
or
jecxz
mov
arpl
cmp
cmp
lret
test
add
pop
jg
xchg
sub
push
jg
sbb
insb
shlb
add
bnd
push
sbb
jbe
push
xchg
inc
xor
int3
into
inc
test
push
cmp
jmp
sub
xlat
add
call
insl
es
fists
test
mov
adc
call
outsb
out
fs
dec
mov
cld
dec
sub
aad
jne
roll
or
inc
dec
pusha
mov
cli
inc
and
negb
gs
pop
push
popa
sub
mov
sti
mov
xlat
jecxz
xchg
lret
pop
push
mov
fnsave
ret
xor
in
mov
add
sarb
sahf
push
sub
adcb
icebp
js
sub
sahf
mov
jbe,pt
fdivrl
inc
lahf
daa
jnp
and
pusha
inc
dec
sti
cmp
paddd
stc
testb
pop
pop
xchg
mov
mov
loopne
call
or
and
test
xor
insl
xchg
cmp
add
push
cmp
iret
aam
lret
mov
jge
repz
push
es
adc
inc
fwait
hlt
xlat
inc
and
jno
xchg
jns
orb
shrb
repz
push
adc
ret
aam
mov
cmc
inc
xchg
lods
cmp
jmp
and
or
mov
sub
out
cld
add
stc
jo
dec
adc
in
pop
pop
jbe
movsl
cmp
push
sbb
test
jne
roll
mov
incl
ljmp
pmuludq
mov
or
or
lahf
mov
cmp
pushf
cmp
sbb
cmc
inc
xchg
jl
arpl
mov
xchg
jl
les
bound
inc
es
fidivl
decl
dec
pop
pop
in
nop
subb
xchg
je
call
dec
call
scas
jmp
test
std
lods
cmc
mov
lret
call
push
lahf
mov
addr16
in
fimull
cmpsl
stos
fiaddl
mov
das
pop
pop
inc
pop
test
jg
mov
js
mov
add
or
sbb
dec
ficoms
repz
mov
inc
jo
fistps
shlb
or
xchg
cld
pushf
shrl
pop
mov
test
loope
adc
adc
fdivrl
sub
sbb
repnz
xchg
jl
ret
xchg
lret
jnp
or
popa
mov
test
out
out
movsb
mov
cmp
test
add
sub
loopne
jbe
dec
adc
mov
mov
mov
into
jnp
xor
fldenv
loopne
sbb
cmp
jno
mov
jo
iret
mov
call
pop
xchg
or
push
adc
lcall
ja
pushf
cmp
push
ret
sbb
rorb
scas
mov
loope
adc
cmp
or
push
adc
push
sbb
and
push
or
xor
xchg
movsl
sbb
jl
roll
lods
sbb
sbb
pop
into
lret
imul
jl
mov
fisubl
push
addr16
xor
or
movsl
ret
dec
cmp
lret
jbe
scas
push
sub
cwtl
stos
outsb
lcall
dec
jnp
xor
pop
jmp
and
int3
xor
mov
jl
cld
movsl
mov
mov
movsb
hlt
pop
cmc
push
dec
add
mov
push
pop
jo
sub
jne
adc
xchg
fidivrl
dec
jp
lea
inc
sbb
xor
insl
and
lcall
lahf
lret
cmp
and
sub
imulb
or
mov
and
movsb
jmp
push
inc
fmull
xorb
fsub
cmp
lods
test
pop
fldl
aas
sub
movsb
sbb
sbb
ud2
mov
scas
out
stos
adc
or
cmc
jg
lds
scas
or
fisttpll
push
pop
fidivs
jne
sbb
jecxz
std
pop
cld
sub
jno
fisubrs
cmp
push
pop
and
jle
inc
jne
and
push
sbb
lcall
or
aad
out
enter
ss
jo
jmp
push
cli
xor
mov
ret
arpl
clc
mov
mov
arpl
movsb
mov
popa
outsb
imul
mov
outsl
inc
sbb
cmc
fimuls
or
subb
jno
loopne
rcl
out
or
adc
aas
inc
ror
jle
inc
les
inc
adc
pop
adc
xchg
mov
ret
or
inc
jg
cltd
sbb
pop
xor
push
loopne
add
fcoms
xchg
and
aas
aaa
ret
js
adc
add
in
xchg
sbb
dec
push
mov
xchg
jg
adc
and
jae
cltd
push
cmpb
pop
cmp
dec
insb
push
and
xchg
xchg
not
call
xchg
jge
cmp
or
enter
cltd
inc
fstps
aad
jg
sbb
mov
push
jb
popa
pushf
inc
int
push
jecxz
dec
enter
xor
movsb
cld
push
push
lods
inc
leave
lock
lods
iret
add
adc
imul
adc
ds
imul
pusha
xor
popf
insl
mov
mov
xchg
ja
lret
pushf
pop
int
cld
mov
out
repz
stos
fcomps
sahf
cmp
adc
xor
gs
xor
ds
inc
fcmovu
push
movsbl
pusha
adc
adc
dec
xchg
jge
sub
ret
pop
jl
fwait
push
stos
aaa
push
ss
sti
pop
out
dec
iret
pop
xchg
xchg
sahf
imul
fsubrp
xchg
push
jg
outsl
mov
mov
sbb
or
in
jg
lea
or
adc
and
lods
lock
lret
shlb
jp
pop
ds
inc
jg
insb
fwait
jl
jl
sub
insl
pop
mov
and
add
jnp
mov
mov
jo
lret
mov
rcll
cmp
or
mov
pop
fnstcw
mov
movsl
sub
insl
pop
push
cmp
xchg
fadds
hlt
mov
fwait
pusha
add
push
ss
out
mov
outsb
xchg
jge
ret
lcall
push
insb
andl
mov
shl
stos
pop
dec
fsubr
or
inc
fisttpll
mov
adc
pop
mov
insl
mov
xchg
jg
lcall
push
push
mov
lock
mov
pop
sub
ror
cli
sub
lret
sti
adc
insl
ret
out
mov
or
test
dec
into
test
cmpsl
movsl
lock
in
cmpsl
and
jns
cld
iret
cld
outsb
push
sbb
adc
xor
cmp
jne
je
icebp
ret
add
sbb
mov
scas
xor
or
scas
jg
or
pop
xor
stos
sahf
adc
sub
mov
in
aas
adc
jg
dec
in
pushf
or
dec
sub
cli
push
mov
xor
test
in
stc
popa
call
dec
inc
ds
push
adc
je
mov
mov
and
aaa
dec
mov
inc
and
mov
mov
pop
clc
inc
aas
mov
divb
xlat
insl
insl
mov
adc
lods
and
jo
adc
inc
test
hlt
hlt
inc
and
pop
icebp
cltd
cmpl
iret
push
adc
stc
jmp
push
adc
movsl
addl
aaa
mov
idivl
push
loope
enter
into
fwait
xchg
aas
sahf
jg
cs
mov
pushf
fs
arpl
mov
addr16
aaa
push
dec
xchg
mov
jle
aas
pop
dec
sub
test
push
notl
xor
aam
movsb
cs
scas
pop
into
xor
cmp
jp
adc
vmovdqa
test
sub
dec
inc
pop
xchg
mulb
and
or
jbe
mov
and
mov
movsl
fsub
fsubs
pop
aaa
std
mov
outsb
movsb
icebp
sbb
es
adc
aad
rcrb
daa
jns
jge
xchg
mov
insb
add
fdiv
mov
lret
fucomp
pushf
jns
push
sub
inc
push
jge
mov
jae
xor
add
arpl
lcall
mov
je
add
or
sbb
popf
shl
xchg
cmpsl
mov
iret
mov
aaa
jl
xlat
cmc
push
div
push
mov
std
mov
xorl
mov
pop
fxch
addl
pop
jl
aaa
xchg
inc
bound
mov
insb
std
mov
lock
cmp
push
repnz
out
push
mov
mov
sub
pusha
mov
mov
add
lcall
sbb
pop
cld
pusha
and
and
mov
ljmp
clc
push
outsb
pop
sbb
sahf
arpl
push
xchg
cmpsl
fnstenv
icebp
sub
push
push
jo
popa
xchg
add
test
test
xor
push
dec
xor
cmc
cmpsw
inc
and
test
inc
fsubs
or
mov
cwtl
adc
js
mov
inc
pop
pop
adc
test
jecxz
in
aad
xchg
int
mov
mov
push
sub
mov
outsb
iret
pop
xor
rcl
fistpll
int3
push
call
aam
fisubrs
sahf
std
dec
in
lret
loop
mov
xchg
push
inc
lret
sub
je
lahf
xchg
imul
add
in
clc
or
adc
mov
aam
aam
movsl
mov
sbb
popa
dec
hlt
adc
ret
push
dec
cs
mov
mov
aaa
pop
dec
jge
fwait
cmpsl
dec
or
xor
add
or
and
insb
mov
stc
cmp
iret
leave
hlt
mov
xchg
jo
inc
rcl
aad
cmpsl
insb
mov
sub
xchg
ja
add
inc
out
in
hlt
add
mov
ret
ja
je
iret
popf
cmp
sbb
icebp
sbb
mov
insb
ja
icebp
push
int3
in
push
inc
int3
pop
arpl
andb
loopne
add
pop
loope
and
inc
aaa
inc
jns
xchg
ss
mov
and
dec
lds
jae
std
test
stc
es
mov
dec
js
movsl
leave
stos
dec
stc
sub
cmpsb
ljmp
hlt
jnp
ret
mov
adc
pop
out
das
icebp
stos
jp
mov
lahf
lods
adc
stos
xor
or
andb
add
cmp
sub
orl
mov
dec
divl
fmul
lcall
pop
inc
and
ret
jno
rol
flds
adc
fbstp
imul
xchg
repnz
mov
rcll
push
mov
ret
jmp
push
adc
sahf
sbb
test
and
loope
in
div
inc
adc
xchg
xchg
fiadds
jmp
lods
cltd
mov
mov
test
and
iret
cmp
push
mov
flds
adc
push
scas
inc
push
std
mov
cmp
mov
aaa
sbb
mov
mov
jae
push
arpl
flds
adc
dec
sub
mov
push
flds
adc
xcrypt-cfb
cmpsl
pusha
hlt
sub
push
sarb
dec
jns
cmc
mov
pop
shl
sbb
sti
div
lret
pop
inc
sub
xchg
sbb
repnz
popa
stos
aas
std
pop
arpl
lds
push
push
xchg
out
lods
xor
push
push
xor
subb
lret
push
xor
icebp
inc
nop
jbe
ja
and
mov
cmp
out
jo
inc
dec
insl
scas
mov
movsb
mov
sti
in
stos
jno
clc
inc
dec
ds
pop
pushl
ja
ljmp
pop
ss
mov
sti
mov
add
pop
cmpsl
sub
cwtl
mov
push
incb
jmp
adc
adc
std
or
test
or
daa
in
mov
sahf
outsb
sbb
push
jmp
dec
or
and
push
addr16
add
sqrtps
add
mov
cmp
mov
cwtl
lea
je
push
sub
and
mov
sbb
pop
jo
xor
shl
lret
add
or
mov
add
push
push
icebp
pop
addr16
rol
popf
push
jnp
inc
rcl
xchg
xlat
outsl
loopne
lds
dec
adc
daa
xlat
mov
nop
outsl
xchg
clc
push
out
push
popa
in
iret
test
dec
lods
sub
ss
or
pop
stos
jmp
mov
cmp
mul
dec
pusha
add
mov
dec
rcrb
ja
dec
push
and
out
adc
flds
ss
mov
popa
ret
xchg
pop
and
les
dec
inc
xor
lock
test
jnp
sub
cmovns
inc
pusha
lock
cs
test
push
mov
icebp
push
dec
add
iret
ljmp
mov
cwtl
mov
mov
bound
in
shll
popa
ret
jo
or
adc
jl
mov
cmp
add
in
ret
jecxz
inc
xchg
jge
dec
ret
clc
insl
aaa
pop
mov
mov
xor
xchg
aaa
js
in
add
cmp
jae
mov
or
ljmp
shl
sbb
call
sbb
popa
xor
sub
inc
jae
dec
xchg
jo
dec
ret
mov
pop
int3
inc
lret
sbb
loopne
cmp
adc
idivb
out
lock
dec
xor
inc
flds
adc
mov
addr16
cmpsb
not
out
xor
insl
cmc
mov
scas
lret
into
or
adc
les
push
pop
pop
xor
mov
push
out
mov
cmpsl
cmp
call
adc
mov
push
divb
xor
mov
sahf
sub
lret
push
call
xor
xchg
sub
sbb
push
push
cli
adc
mov
out
mov
ret
dec
add
loopne
adcb
sbb
or
jg
sbb
pushf
and
mov
aad
cmp
or
icebp
xchg
mov
hlt
inc
add
mov
push
sbb
mov
push
pop
test
jp
shrb
loopne
dec
mov
push
dec
adc
inc
insb
dec
cmp
sub
adc
ja
and
mov
adc
hlt
jmp
xchg
add
iret
push
adc
xor
test
shll
xchg
or
bndldx
push
jp
scas
or
push
mov
push
adc
add
add
cmpsl
add
mov
pop
das
sbb
imul
push
lods
je
mov
stos
push
jmp
adc
je
push
aas
movsl
inc
nop
xchg
pop
and
gs
or
pop
cmpsb
mov
cmc
leave
imul
ret
test
adc
fnstcw
adc
inc
in
aaa
jmp
dec
add
jle
add
subb
enter
stos
cld
pop
fwait
les
sub
xchg
or
divl
iret
push
mov
mov
sbb
clc
dec
push
idivl
int3
mov
cmp
mov
cmp
fldenv
jnp
lret
or
lods
pop
inc
sbbl
lret
xchg
rcll
inc
clc
sub
xchg
fidivl
notl
lcall
or
shll
push
jbe
or
add
jl
arpl
and
add
lcall
mov
insb
stc
mov
inc
sub
cmpsb
scas
xor
xor
test
push
adc
js
ret
add
loope
jnp
sahf
stos
inc
mov
or
jg
inc
pop
std
mov
fs
or
mov
icebp
adcb
push
adc
fnstcw
aad
andl
stc
movsl
out
icebp
pop
pop
testl
and
mov
out
mov
pop
cld
call
repz
adc
scas
ret
push
mov
sbb
aad
aaa
push
je
jo
xchg
or
push
das
shll
dec
shlb
and
daa
pop
mov
cld
push
rorl
adc
dec
rolb
adc
push
xor
icebp
dec
pop
jle
test
cmp
sahf
inc
mov
fisubs
lret
mov
xor
xchg
scas
xor
push
in
arpl
bound
test
inc
sub
je
loopne
xchg
adc
mov
xor
ret
out
mov
cmp
popf
jbe
lret
xchg
movsl
sbb
push
into
arpl
push
push
out
xchg
ja
jmp
pop
add
imul
and
adc
stc
lods
test
icebp
pop
pop
std
mov
dec
pop
mov
xor
mov
faddp
mov
rcrb
ja
ret
in
ret
jmp
aad
orl
sbb
cwtl
mov
cltd
mov
movsb
into
movsl
ret
dec
ret
insb
int3
rcrl
push
addr16
aad
cmp
and
mov
dec
sar
scas
push
popw
or
cmp
mov
adc
mov
adc
lea
rcll
jns
dec
sbb
adc
mulb
outsl
pop
pop
int
and
out
xchg
jbe
xchg
outsb
fsubs
or
movl
addl
cltd
or
jge
pop
jnp
pop
inc
cmp
mov
push
or
das
inc
rorb
fcomps
or
mov
jne
sbb
mov
xchg
add
stc
mov
fdiv
loopne
les
inc
imul
test
mov
dec
cmp
cld
jle
mov
bswap
pop
mov
add
add
imul
adc
push
push
dec
mov
push
adc
js
mov
psadbw
xchg
push
lods
aad
scas
lds
cmpsb
sbbl
jb
jae
inc
adc
cmpsl
xor
add
xchg
in
dec
push
adc
jmp
inc
dec
pop
and
adc
push
adc
pusha
ret
jbe
aam
sub
inc
dec
loopne
js
rorb
sarb
adc
andb
popf
add
xchg
adc
mov
mov
cmp
nop
cmpsl
push
nop
addr16
add
data16
iret
push
adc
add
ret
es
sti
sub
clc
das
jmp
stos
inc
or
hlt
rcrl
pop
xchg
mov
adc
add
add
jnp
sti
iret
les
pop
sbbb
int3
lock
pop
xchg
int3
pop
std
in
mov
mov
lods
jmp
adc
add
pop
mov
inc
xchg
clc
hlt
call
inc
jge
and
jp
iret
ljmp
sub
or
mov
mov
imul
je
push
or
and
mov
sbb
pop
clc
test
loop
js
in
mov
add
ret
inc
add
pop
lods
loope
cld
xchg
gs
xchg
sbb
lods
lock
sub
jmp
cmovns
add
pop
clc
sub
test
xor
xchg
sarb
xchg
fstps
ljmp
pushf
cmp
movsb
cmp
adc
insb
xchg
insb
sub
jmp
pop
fidivrs
adc
movsb
mov
nop
push
iret
sub
data16
pushf
fnstcw
cwtl
cmp
addr16
mov
sub
insb
and
ficoms
xlat
shrd
popf
repnz
fcmovu
aad
subl
dec
jnp
lds
stos
and
mov
add
pop
sbb
and
cmpsl
mov
loopne
push
adc
pop
jmp
mov
daa
addl
xor
sbb
sbb
mov
hlt
cmpsl
rolb
inc
cli
repnz
mov
outsb
jne
repz
into
out
add
into
fistpll
in
arpl
fidivrl
cmp
clc
js
add
loopne
jmp
into
pop
jbe
rolb
jb
sub
int
push
mov
lcall
mov
sarb
js
loope
mov
fcompl
repz
lret
xlat
std
mov
mov
mov
xchg
push
xor
rcll
lods
inc
pop
cmpsb
sbb
es
sahf
repz
stos
outsb
lods
mov
adc
iret
nop
clc
in
frstor
dec
jecxz
jb
inc
push
push
pop
cmp
scas
sub
jns
dec
dec
add
fstpt
loopne
addr16
pop
ret
or
in
nop
addr16
insb
inc
ret
jge
fists
cli
out
lods
push
xor
or
lret
repz
jg
xorl
lret
js
dec
pop
mov
and
pop
outsb
xor
enter
adc
test
xor
xor
cmp
xlat
jmp
sbb
jmp
and
jmp
jnp
or
inc
push
jns
lds
mov
pop
mov
dec
push
test
scas
pop
std
jnp
sbb
dec
in
mov
mov
push
decl
loopne
int3
mov
cmp
mov
fwait
movsb
in
add
iret
push
adc
jne
dec
iret
in
test
leave
or
sbb
inc
out
jle
adc
in
stos
icebp
mov
sbb
push
sbb
sbb
jno
mov
push
fistpl
popa
in
inc
adc
into
aas
shll
fsub
xor
cmp
or
cmp
mov
lods
mov
xor
mov
clc
add
shl
fs
jge
mov
aas
add
jbe
lahf
orb
subl
and
jae
imul
xor
sti
idivb
repnz
ds
mov
idivb
push
inc
imul
xchg
sbb
cmp
jle
outsl
xchg
jae
mov
fcomps
cli
test
cmp
xor
fildl
fidivrl
dec
push
jl
out
cmp
pop
push
mov
fs
arpl
in
inc
mov
repz
shrb
adc
xlat
mov
in
sbb
push
inc
and
inc
out
or
dec
sbb
or
lds
jns
push
test
xor
repnz
ljmp
or
xor
mov
into
pop
repz
roll
and
test
icebp
ljmp
lock
sub
flds
adc
int
mov
sbb
pop
orl
adc
pop
andl
repz
jg
out
mov
scas
adc
ror
xor
jae
cmp
cmp
fsts
imul
push
adc
fadds
fcmovnbe
cmp
xlat
cld
xchg
outsb
mov
lds
xchg
jg
popa
shrl
add
jb
dec
fdivrs
dec
push
mov
mov
std
inc
or
sbb
mov
insl
add
shl
int
xor
sub
mov
xor
dec
ret
js
arpl
popf
dec
les
lcall
xor
dec
stc
mov
jmp
insb
sub
xchg
cmp
cmp
xchg
ret
pop
ds
loope
xchg
inc
sbb
pop
int
adc
sbb
jno
mov
sub
mov
cmp
lods
add
inc
dec
dec
roll
sbb
jmp
aas
cwtl
lock
icebp
idivb
pushf
dec
or
pop
and
test
setnp
ja
cmp
sub
in
es
pop
fwait
shlb
rcl
sbb
loopne
push
jns
int3
ja
adc
iret
cmpl
or
inc
dec
pop
in
lcall
and
in
adc
out
adc
out
adc
out
adc
out
adc
add
fsubr
add
or
add
xor
add
cmp
add
jmp
ljmp
popa
jmp
adc
out
add
into
out
add
adc
icebp
add
jnp
add
or
add
das
repnz
call
repz
repz
mov
inc
sti
and
mov
adc
aaa
int3
dec
inc
jae
mov
and
imul
jns
scas
cltd
ret
cmp
dec
jle
mov
das
iret
jbe
nop
or
cmp
addr16
test
lock
dec
mov
dec
add
sub
xchg
pop
xchg
shll
dec
fdivrl
pop
xchg
rcl
adc
adc
or
shrb
add
adc
test
fstpl
loopne
cmp
int
repnz
jns
mov
call
mov
jp
sub
cld
add
push
or
lock
mov
sub
mov
push
nop
xchg
dec
leave
dec
nop
and
cmpsl
xor
cmpsl
sbb
insb
into
mov
lods
inc
pushf
mov
push
inc
movsl
sub
mov
out
push
push
or
sub
and
das
std
and
pop
push
mov
sbb
test
pushf
insl
xor
imul
shll
mov
jnp
ret
fcomps
push
jo
ljmp
cmp
pop
jle
xchg
inc
repnz
pop
sub
push
std
cwtl
shll
sub
aas
jl
in
orl
xor
pop
int3
mov
lcall
inc
sbb
adc
adc
mov
mov
flds
adc
jns
push
les
ret
int
repz
lock
mov
das
fsts
xchg
mov
and
movsl
lahf
mov
shl
sub
inc
pushf
jbe
inc
test
loope
cmp
aad
sub
jnp
cs
and
jle
andl
out
jne
mov
rcrb
je
in
xchg
cmc
dec
jmp
push
xchg
jecxz
lods
icebp
inc
and
mov
lods
push
jnp
push
pop
cltd
rclb
jne
out
je
test
movsl
or
push
add
and
xchg
or
je,pt
push
arpl
jp
dec
stc
sub
xchg
and
out
dec
lret
shr
mov
test
xchg
std
mov
push
push
inc
nop
xchg
jae
hlt
jbe
push
and
cmp
mov
insb
fsts
sbb
sti
mov
fwait
jecxz
insl
mov
dec
mov
xlat
dec
add
inc
cmp
xor
imul
stos
mov
aaa
sbb
mov
in
xchg
mov
pop
xor
jmp
sub
push
mov
pop
mov
loopne
aaa
push
lcall
mov
xor
inc
enter
test
std
movsl
imul
out
dec
dec
daa
push
mov
mov
sbb
dec
fimull
addr16
es
inc
les
ficomps
imul
inc
push
dec
clc
mov
movsb
imul
jmp
rcll
and
xor
push
scas
imul
mov
lds
dec
shll
ljmp
arpl
pop
xor
inc
xchg
mov
push
dec
roll
sbb
jg
pop
mov
dec
rolb
mov
mov
mov
enter
sbb
cld
xor
xchg
sub
popf
repz
mov
out
xchg
or
mov
inc
loop
sbb
mov
shll
push
and
movl
sbb
insl
mov
dec
mov
dec
add
inc
or
fadds
push
inc
fsubs
out
push
cmp
xchg
adc
call
imul
mov
inc
push
mov
jecxz
aas
adc
cmp
and
lret
mov
idiv
ja
in
inc
adc
pop
mov
mov
std
jae
std
lods
mov
loope
or
adc
sbb
jp
dec
and
pop
mov
and
int3
mov
and
and
test
ljmp
inc
sbb
jae
jp
cmp
inc
out
loopne
fisttpll
xor
jns
add
loope
mov
lds
jecxz
xor
int3
inc
out
dec
mov
and
adc
and
stos
mov
fisubs
inc
sbb
lcallw
push
mov
outsl
and
loope
fwait
test
mov
mov
cmp
or
adcl
pmullw
inc
push
mov
cltd
push
insl
cmp
xchg
pop
xchg
mov
pop
mov
pop
mov
xor
dec
sub
dec
jbe
and
repz
and
and
fadds
push
inc
inc
mov
icebp
jno
sub
or
movsl
cmpsl
repz
movsl
or
push
xchg
in
add
out
dec
mov
push
pop
jnp
loopne
mov
mov
lahf
dec
fwait
dec
pushf
or
sbbb
inc
mov
or
inc
mov
pop
test
cltd
mov
sahf
aaa
imul
outsb
movsb
mov
aas
mov
sbbl
inc
cmp
mov
dec
dec
lret
add
mov
insb
jns
pusha
pop
divl
xor
test
insb
pop
lret
js
push
jb
outsl
int3
mov
add
inc
loope
mov
mov
lret
push
popl
out
enter
adc
cwtl
cmp
pop
scas
pop
jl
arpl
xor
mov
xor
lret
hlt
xchg
xchg
lcall
xchg
test
aad
xchg
idivb
cmp
mov
inc
xchg
movsl
jns
push
push
outsb
lret
xchg
lods
xor
push
push
jnp
ret
loope
sbb
adc
fbld
cmp
dec
stos
dec
lret
hlt
pushf
sti
in
xchg
aas
xor
pop
inc
ror
jg
lret
xchg
ja
pushf
xchg
cs
dec
cmp
add
subl
mov
jl
int3
xor
add
adc
mov
lahf
int3
xor
sbb
mov
pushf
cmp
push
lcall
sbb
cmp
lock
mov
arpl
dec
imul
sub
dec
pop
dec
ja
scas
jp
xchg
movsb
cmc
fnstenv
jecxz
jmp
or
mov
testb
sbbb
pop
xor
sbb
aas
mov
lods
cmpsl
jge
insb
push
pop
sbb
pop
adc
inc
add
popf
and
or
xor
movsl
stos
and
mov
leave
xchg
int
jg
cs
push
fs
jns
cmp
mov
cmp
lds
ret
mov
pushf
sti
in
mov
pop
add
out
pushf
shll
add
or
cs
inc
out
push
loop
add
sub
or
das
lahf
lea
mov
sbb
les
jns
insl
push
cmp
ja
mov
dec
xchg
sbb
das
and
orb
xchg
inc
ret
hlt
xchg
jns
mov
sbb
test
pop
into
clc
in
push
add
xchg
adc
mov
jnp
popf
cmp
jle
jns
cmp
pop
adc
jae
scas
shll
sti
sbb
add
movsb
xor
push
inc
pop
pop
jg
gs
mov
mov
cmp
mov
mov
les
push
mov
inc
xchg
mov
sbb
loope
les
dec
add
add
ja
push
ffreep
and
jecxz
mov
popa
sbbl
test
mov
pop
es
loop
lahf
push
ret
adc
inc
out
sub
dec
mov
push
je
xor
xor
or
repnz
xchg
mov
xchg
inc
mov
pop
mov
xor
rcrl
add
and
ret
sti
int3
mov
lret
outsl
and
aaa
push
pusha
push
adc
xchg
mov
and
xor
movsl
adc
pop
jmp
push
fistpl
stc
jb
sub
mov
and
cmp
clc
push
loope
jns
xchg
inc
push
std
sysenter
fcompl
pop
cmc
pop
mov
fidivl
fimuls
std
aaa
lds
mov
sbb
cld
push
jg
in
rorb
adc
xor
add
dec
sahf
das
inc
movsb
int
dec
lahf
push
and
ljmp
and
test
mov
cmp
js
enter
fimuls
cmp
push
xchg
sahf
jge
icebp
pop
loopne
andl
sbb
cmp
loop
inc
mov
mov
in
jmp
pop
jne
mov
rolb
clc
mov
mov
jns
add
push
xorl
dec
cmp
dec
int
fs
inc
add
dec
jl
xor
sbb
push
ljmp
in
add
daa
mov
mov
fcoms
lods
or
scas
adc
sub
mov
or
xor
jne
in
les
xor
pop
sbb
jae
inc
out
push
pushf
mov
int
lods
es
ret
in
sbb
cmp
pop
mov
pop
je
cmp
sbb
lds
icebp
cmp
cmp
or
sbbl
into
pushf
mov
cmc
dec
pop
mov
int
mov
lret
or
test
gs
sbb
dec
xor
inc
add
data16
js
or
xchg
bound
pop
jmp
cmp
xchg
xor
push
push
aas
add
cmp
cmp
lds
test
popa
ret
or
dec
push
rcr
inc
jle
inc
sub
jo
mov
xchg
arpl
xorb
xchg
out
push
daa
cmp
sti
mull
fs
xchg
test
jo
mov
mov
mov
xlat
cmp
test
repz
loope
lods
mov
shrl
fidivrs
push
xor
ja
sbb
mov
icebp
daa
in
or
into
pop
stc
jae
sbb
push
outsl
test
pop
or
jno
dec
xor
and
inc
jmp
push
shll
stc
jae
or
mov
dec
xor
out
inc
add
data16
or
or
repnz
or
scas
lods
inc
rcl
subl
enter
aaa
sbb
dec
push
ljmp
jg
subb
out
loope
jae
inc
inc
sti
sahf
ret
jge
pop
pop
push
mov
dec
and
mov
in
gs
pop
inc
imul
sbb
pop
push
cwtl
xchg
dec
jne
into
add
stos
aam
xchg
cs
jl
push
sub
jo
cmp
sbb
test
int
repnz
subb
dec
pop
ds
push
or
fcomi
inc
fs
push
sbb
mov
scas
jns
into
jbe
lret
jno
out
or
jb
push
loop
mov
jns
enter
leave
sahf
nop
int
xchg
jle
push
push
roll
mov
inc
inc
xor
std
xchg
cmp
fcomp
test
frstor
push
test
int3
cs
jae
les
cmpl
lds
jg
aas
cmp
repz
lds
xor
jno
xor
cmp
je
cmpsb
push
les
stos
jb
add
xor
dec
mov
loope
lcall
or
mov
add
bound
cli
scas
add
jno
sub
add
and
pop
outsl
ret
add
outsl
sbb
outsl
cmp
repnz
pop
subb
lods
jecxz
addr16
pop
in
ds
icebp
xor
sbb
push
aad
in
cmp
lahf
lret
sbb
add
loopne
inc
xacquire
add
sub
lock
mov
push
jbe
scas
rorl
pop
mov
sub
es
inc
aam
xor
mov
stos
stos
addr16
mov
in
pop
xor
movsb
dec
xchg
and
add
push
xchg
mov
mov
addr16
insl
outsl
lahf
daa
jnp
loopne
pop
pop
xor
inc
sub
das
imul
lret
or
xor
testb
test
push
rolb
push
adcb
xor
daa
lods
adc
rclb
or
into
sub
cld
fildl
adc
and
pop
cmp
or
das
mov
addr16
ljmp
into
lock
out
mov
pop
cli
pop
xor
mov
mov
push
out
mov
cwtl
dec
mov
add
popa
jo
mov
inc
pop
call
shll
cmc
push
lock
sbb
add
jne
push
sub
icebp
into
pushf
mov
mov
ljmp
cmp
pop
adc
inc
sbb
pop
mov
sti
mov
int
xchg
mov
imul
out
daa
adc
dec
ljmp
imul
out
pop
inc
mov
mov
sbb
int3
sub
into
xchg
mov
add
xchg
inc
andb
sub
insl
dec
ljmp
jmp
jmp
jno
in
add
sub
push
test
icebp
jae
or
mov
in
scas
jae
inc
subb
mov
mov
pop
mov
jmp
xchg
xchg
rcrl
sub
movsl
push
loopne
jbe
sbb
xor
sbb
add
dec
pop
adc
jo
rorb
cmp
adc
adc
int
xor
xchg
jmp
push
lret
sub
sbb
inc
in
cld
pop
mov
cmp
add
test
pop
xchg
sub
xor
movsl
mov
pop
repz
push
addb
and
lods
clc
mov
push
mov
xchg
sub
js
mov
mov
jo
jb
rcll
sbb
movsb
xor
in
ds
mov
push
aad
push
xchg
inc
addb
sub
test
cmc
push
orb
xor
sbb
push
sub
icebp
into
pushf
mov
sbb
dec
xchg
sub
jo
mov
pushf
loopne
sahf
imul
ret
push
adc
imul
mov
js
inc
addr16
adc
out
xchg
jnp
lods
lahf
mov
inc
int
sti
js
nop
nopl
push
add
mov
movsb
inc
stos
cli
jne
mov
jb
adcl
sub
jb
xchg
xchg
fsts
add
xrelease
lret
push
xor
adc
loope
adc
add
xorl
inc
cs
xchg
xchg
pop
js,pn
iret
ds
cmp
add
pop
and
movaps
jge
lahf
xlat
outsl
sbb
aam
out
cmc
lret
cmpsb
mov
aam
mov
cmp
xchg
xacquire
bound
xor
gs
jp
mov
stos
mov
add
mov
cmc
add
push
fstps
jle
jnp
mov
lret
outsl
add
std
inc
jbe
push
fwait
push
out
bound
or
pop
cmp
push
adc
and
pusha
sub
xor
sub
lock
inc
movsb
rolb
movsl
repnz
dec
cmp
ficoml
sub
cmp
scas
adc
mov
sahf
cmpsl
fucomp
mov
arpl
addl
mov
push
or
pop
sub
test
outsb
inc
call
outsb
xor
hlt
loopne
pusha
push
or
jmp
imul
push
add
sar
sbb
dec
mov
sub
push
int3
or
nop
pusha
xlat
ljmp
nop
icebp
lahf
adc
pusha
adc
gs
xor
lds
cli
imul
lret
xor
hlt
mov
push
jae
mov
cmp
pop
mov
mov
pop
sub
cwtl
pop
sbb
pop
adc
repz
fsubrp
ret
add
jge
or
sbb
aad
mov
gs
sub
and
rsqrtps
imul
push
rclb
xchg
adc
popa
inc
pop
inc
pop
jmp
jne
sub
in
inc
or
xor
les
ss
inc
lock
lret
test
cmp
lods
icebp
xchg
sbb
loop
addb
call
mov
cmp
fildl
movsb
push
xchg
or
repnz
xor
jp
outsl
jp
cmp
cmp
mov
or
jmp
mov
mov
xchg
mov
cmc
dec
into
setne
inc
mov
mov
inc
data16
mov
push
daa
cmp
sti
fbld
xchg
mov
push
add
lcall
xchg
fidivs
pushf
sbb
xlat
inc
fwait
jl
arpl
repz
lret
xchg
popf
xchg
call
sbb
into
sbb
aas
mov
mov
pop
loop
pusha
arpl
and
or
xchg
jae,pt
xlat
cmp
leave
insb
sahf
xchg
mov
push
adc
and
lds
es
clc
add
adc
aam
bound
mov
int3
jnp
gs
mov
test
faddl
lock
clc
pop
cmpsl
sbb
push
inc
or
lret
mov
mov
les
xor
xchg
hlt
add
arpl
loop
dec
pushf
lret
sti
cmp
lea
push
shll
xchg
clc
xor
rclb
cwtl
cltd
lods
clc
adc
sti
das
inc
movhpd
movsl
push
add
or
dec
xchg
adc
nop
fimuls
insb
andl
or
or
repz
pop
dec
lds
mov
adc
movsb
inc
and
clc
cmc
sub
popa
push
ljmp
xchg
or
xchg
and
cmp
iret
sti
mov
das
jecxz
cmp
add
arpl
or
leave
xchg
movsl
sbb
popa
cld
into
jb,pn
shrl
mov
add
imul
and
pusha
xlat
jbe
pop
jl
push
sub
push
and
xchg
adc
loope
add
cmp
out
mov
sub
lods
xor
dec
mov
xor
cmp
hlt
mov
and
or
adc
xchg
fmull
xchg
push
jae
in
mov
mov
or
mov
gs
xorb
pusha
jg
subl
pop
jb
pushf
stos
int3
out
xchg
inc
rcrl
adcb
cmpsb
xor
mov
or
inc
xor
sbb
jg
dec
nop
mov
xor
push
dec
or
cltd
mov
push
mov
mov
test
roll
dec
arpl
sub
adc
lret
push
and
out
adc
into
and
lahf
lahf
outsl
pushl
fidivs
push
iret
pop
aaa
cmp
xor
lahf
fidivrl
outsl
rorb
or
or
sub
mov
or
clc
in
sti
sarl
insl
int
in
pop
sub
dec
arpl
xchg
xchg
mov
and
stos
pusha
testb
and
aaa
mov
adc
outsb
fs
xchg
adc
shlb
aad
sub
in
mov
icebp
cltd
es
mov
mov
cmp
aas
decb
and
mov
mulb
add
clc
mov
aad
inc
das
in
js
jmp
filds
mov
outsl
push
add
jl
push
mov
adc
fptan
movsl
jle
cmpsb
pop
xorl
outsb
lret
cli
mov
xchg
jbe
loopne
cmc
jmp
mov
enter
insb
mov
jnp
nop
in
aad
xchg
popa
inc
adc
sbb
test
xor
xor
inc
aam
cli
jns
xchg
push
sbb
mov
ja
xchg
pop
es
mov
fs
mov
push
aad
push
jnp
les
mov
je
rcrl
lret
ret
dec
mov
mov
push
aad
push
xchg
ja
arpl
popf
cmp
push
inc
icebp
xor
js
int3
jnp
push
movsl
jle
mov
cli
push
arpl
xchg
int
xor
jge
out
jecxz
pushf
cs
jmp
std
fisttps
push
adc
pop
mov
sub
out
out
pop
aaa
cmp
imul
lea
shlb
and
push
les
xchg
jge
inc
inc
jge
out
fcoml
and
pushf
iret
xchg
lds
cld
xchg
dec
fcoms
divb
mov
sub
loope
mov
pop
out
psubusb
loop
mov
mov
adc
jo,pn
dec
rcrl
xchg
movsb
shll
daa
xlat
or
ret
sbb
out
subb
ja
xchg
push
sbb
mov
inc
jle
mov
call
cmp
cmc
push
fcomps
push
shll
out
ja
or
pop
nop
loopne
adc
faddl
adc
cwtl
cs
popf
je
mov
loop
orb
aam
pop
clc
test
push
aad
push
xchg
inc
pusha
bound
push
mov
mov
or
mov
scas
jae
inc
loop
clc
std
cli
or
test
in
cmp
sbb
lock
inc
or
inc
or
sbb
inc
adc
sbb
scas
es
aad
aad
push
out
int3
sahf
jp
push
cmp
mov
call
mov
popa
lahf
push
lods
aam
ja
lcall
cmc
lcall
outsb
out
jmp
fwait
add
sarb
adcb
lret
insb
mov
clc
or
movsb
shll
xor
mov
dec
call
or
mov
fsubs
enter
ret
mov
or
push
adc
pop
addr16
xchg
xchg
into
outsb
jns
sbb
push
sbb
and
fadds
or
inc
sbb
les
mov
inc
mov
xlat
shl
jo
iret
jmp
inc
imul
pop
xchg
das
es
mov
sub
inc
loop
adc
sbb
add
pop
xor
fldenv
pop
adc
adc
dec
xchg
and
adc
inc
lcall
xchg
lods
inc
mov
add
jnp
add
mov
xchg
popa
cmpsl
xchg
xchg
loope
fs
push
mov
es
das
jo
jl
shr
jg
adc
and
andb
or
fisttpl
sbb
mov
dec
push
loope
jmp
xchg
push
pop
js
sub
ficoml
add
out
cmp
pop
mov
lock
stos
outsl
jo
stos
cmp
adc
xor
shrl
sub
outsl
in
pop
pop
cmpsl
movsl
in
add
cmp
cld
rcr
ds
in
std
bound
pop
mov
shlb
nop
inc
dec
loopne
cmp
add
lods
test
jl
adc
stos
insb
push
adc
test
popf
sti
pop
sbb
adcb
cwtl
sub
adc
outsb
and
int
subb
popa
mov
pop
inc
arpl
pop
pushf
inc
cli
adc
xor
outsb
xchg
and
cmp
inc
pop
add
or
and
lcall
adc
repnz
pop
pop
cmp
dec
arpl
xchg
inc
out
adc
xchg
rolb
pop
xor
cmp
push
adc
fcomi
rclb
mov
mov
add
dec
adc
xchg
xchg
mov
mov
int
cmc
xor
ljmp
or
cmp
iret
xchg
arpl
inc
pop
pop
mov
pop
and
lea
pop
repnz
or
inc
lock
iret
xchg
jae
loopne
inc
xor
sub
aaa
pop
mov
into
popa
sub
stc
ljmp
aaa
or
lret
push
sub
out
sbb
cmp
js,pt
xchg
imul
inc
mov
mov
fistpl
push
into
fldenv
sbb
add
xchg
jnp
ret
adc
push
inc
cwtl
add
mov
clc
cmpsb
mov
sbb
pop
fdivrp
in
mov
sbb
mov
sbb
dec
mov
xchg
or
push
dec
or
out
inc
iret
jns
nop
jo
adc
sbb
lea
pushf
cmp
sti
dec
cmpl
rcrb
shll
data16
fs
xor
jg
pop
inc
mov
xchg
out
fs
pop
push
je
push
adc
jns
fcmove
enter
out
out
into
pop
imul
mov
nop
scas
insl
dec
jb
clc
lcall
fwait
sub
ljmp
pop
pop
cmp
scas
test
pop
adc
out
inc
imul
lahf
cmp
and
inc
mov
jge
xchg
test
pop
es
cmova
sub
cmp
int3
pop
jb,pt
nop
orl
adc
cmpsl
lods
mov
or
mov
ret
jo
ret
or
repnz
cmp
imul
ja
mov
dec
xlat
xor
mov
aad
mov
paddsb
in
push
add
adc
loope
cmp
mov
les
imul
fwait
xor
mov
idivb
gs
mov
mov
out
push
sub
inc
sbb
dec
mov
adc
jmp
clc
push
test
xor
sub
cli
mov
andl
les
add
cli
jg
lret
add
fwait
mov
cmpsb
sbb
cs
jae
dec
cmp
clc
negb
push
and
pop
mov
pop
inc
loope
and
divl
sbb
rclb
aaa
sub
in
sbb
aas
into
gs
je
jg
lret
push
imul
or
cli
cwtl
stos
jb
xchg
mov
lods
inc
inc
pop
jo
mov
out
sarl
mov
sbb
push
mov
cli
mov
mov
mov
sbb
and
aam
cmp
lods
rcl
add
repnz
add
xorb
pop
add
mov
push
shlb
push
push
or
ljmp
sub
pop
repz
jge
lock
addr16
fidivs
sub
ficompl
int3
xchg
in
xchg
pop
test
or
pop
or
into
dec
dec
adcl
test
out
mov
aam
sub
dec
pushf
push
cmp
arpl
das
inc
mov
mov
adc
pop
adc
jmp
mov
adc
fcmovu
inc
mov
add
ljmp
mov
mov
dec
cltd
or
mov
popa
insb
mov
lea
loop
push
sbb
mov
lock
lret
movsb
out
gs
jg
fisubs
mov
rcll
repz
dec
ja
pop
mov
gs
dec
pop
fcoms
and
lods
test
loope
cmp
fwait
arpl
fbstp
push
cmp
or
and
popf
inc
xchg
out
fwait
lahf
stos
mov
insb
mov
or
or
mov
les
jno
movl
rorl
pop
cmp
jecxz
adc
or
or
jno
cwtl
xchg
je
minps
mov
xlat
rep
xchg
mov
cmc
cmpsl
xor
lret
inc
or
mov
fldcw
repz
fcomps
push
sub
loopne
jmp
mov
or
fistpl
js
lock
pushf
mov
and
xchg
lret
stc
scas
aad
inc
jae
add
adc
inc
sbb
mov
mov
xor
cs
xchg
lret
jmp
pusha
insl
inc
inc
sbb
xor
or
repz
ljmp
daa
sahf
inc
insb
loopne
add
cmp
popa
dec
rorb
mov
sub
or
insl
pushf
aam
mov
adc
cmc
and
nop
cs
mov
cs
xchg
and
mov
push
inc
cltd
movsl
pop
out
cli
mov
push
in
psrad
arpl
pop
push
push
loope
lahf
mov
in
iret
fwait
xor
stos
fwait
int
cli
xor
mov
stc
orb
sbb
call
cmp
pop
sbb
pop
push
adc
aaa
sbb
mov
add
mov
imul
shll
outsb
jl
pop
testb
push
mov
daa
sub
or
dec
and
leave
addr16
mov
mov
adc
cmp
adc
pop
mov
fyl2x
rorb
cs
aas
mov
jecxz
and
cmp
pop
pop
shr
sbb
mov
sub
hlt
pop
inc
shr
ss
es
mov
inc
fstpt
es
in
push
idiv
test
pop
jb
cwtl
push
hlt
sbb
push
cmp
aaa
add
into
push
push
out
xchg
dec
lock
shlb
mov
fsubrl
sbb
pop
outsb
psrlq
fwait
xchg
repz
add
sub
ja
in
push
and
mov
push
or
xor
scas
mov
mov
jne
push
cmp
fcomp
adc
in
cli
jno
movsl
repz
cli
xor
loop
add
mov
mov
fdivp
cmp
mov
test
int3
sahf
jno
add
push
xchg
push
loope
sbbl
ds
or
lahf
in
or
call
cmp
mov
andl
add
lret
fwait
subb
pop
leave
xchg
cmp
bnd
hlt
push
xchg
pop
lods
add
push
adc
data16
add
stos
aas
push
xor
xchg
int
les
popa
sbb
push
test
push
out
adc
adc
cmpsl
popa
stc
dec
jo
adc
mov
aad
mov
in
js
jns
negb
jl
inc
scas
sbb
mov
xchg
pop
jp
lret
dec
out
adc
std
sbb
cld
xor
es
jo
adc
mov
push
adc
xchg
movd
cwtl
adc
adc
mov
or
or
inc
lahf
js
call
jns
popa
push
dec
push
gs
enter
or
xor
jp
sahf
xchg
dec
jne
addb
pop
ljmp
mov
iret
xchg
inc
add
aaa
adc
pushf
mov
xchg
push
mov
in
fs
adc
add
adc
fs
or
cmp
jns
xor
add
js
mov
fnstenv
in
popf
sti
sbb
cmp
sub
mov
insl
xor
lret
xlat
dec
fwait
ja
fildll
push
mov
fwait
inc
pop
fisubrs
dec
xchg
xchg
int
out
cmc
dec
inc
jb
xor
adc
or
xchg
jo
iret
mov
or
mov
xchg
pop
mov
inc
je
add
cli
dec
lods
mov
jns
jns
inc
lock
lret
les
xor
ret
ficomps
popa
loope
pop
test
dec
outsl
pop
cmpsl
stos
int
lock
cmp
xchg
lea
sub
cmp
mov
clc
jo
test
stos
fidivl
mov
dec
popa
ja
scas
mov
xchg
xlat
js
or
dec
fs
sahf
cmp
lret
cmpsl
fists
adc
pushf
or
pop
mov
gs
cmpsl
jge
insb
xor
rorb
inc
adc
scas
mov
xor
iret
adc
insl
and
aas
push
adc
hlt
cmp
xchg
or
add
mov
mov
sar
xor
jae
dec
jno
movsb
stos
lods
stos
sub
or
or
inc
fdivs
aad
lahf
mov
clc
inc
jge
orb
and
pop
rorl
adc
sbb
lret
fwait
or
lods
fldt
add
or
mov
mov
and
pop
jg
mov
adc
std
adc
cmp
add
ss
aam
push
inc
mov
out
fistpll
lahf
out
les
out
jl
mov
jb
jmp
subl
insl
dec
push
iret
dec
dec
test
cmp
cmp
add
inc
stos
popa
subl
sub
adc
add
ret
jbe
rclb
aad
dec
in
in
loop
push
adc
movsl
lcall
xchg
insl
xlat
and
arpl
dec
adc
mov
xchg
cmpsl
lds
adc
icebp
es
and
test
cmp
pop
or
leave
adc
dec
jb
adc
mov
lret
pop
out
scas
add
fadds
jb
icebp
mov
test
inc
sti
aam
inc
lods
inc
popf
sbb
mov
inc
mov
incb
xchg
popa
scas
mov
ss
sbb
rorl
sub
ret
std
add
mov
and
sub
sub
stos
lret
ret
popa
mov
mov
nop
or
mov
mov
ds
in
pop
ljmp
int3
stc
jge
icebp
imulb
xchg
sbb
fstps
lods
daa
mov
lret
les
scas
dec
pushf
in
xchg
lret
and
jmp
push
mov
popa
and
add
pop
mov
fimull
xchg
mov
mov
cmp
add
push
add
fisttpl
dec
mov
and
mov
test
xchg
inc
pop
outsl
push
adc
and
fisubs
mov
mul
mov
arpl
fcomps
pop
or
mov
push
or
adc
inc
xchg
push
cmp
ljmp
lds
jge
in
outsb
lret
push
and
cmpsl
cmpsl
ljmp
in
adc
push
pandn
inc
inc
adc
arpl
push
fdivrs
mov
or
mov
inc
fs
shl
int
fsubrl
rolb
mov
int3
or
int3
add
sbb
je
fisubs
dec
lea
xor
int3
add
sbb
sbbl
xchg
xchg
fldcw
push
mov
xlat
pop
ds
dec
sub
push
adc
xchg
and
adc
jmp
mov
and
or
mov
and
lds
xchg
dec
push
arpl
js
or
dec
addr16
addl
adc
lret
pop
test
out
sti
cmpsl
pop
dec
sbb
inc
inc
out
adc
rclb
xor
dec
sti
jp
es
push
pop
out
punpcklbw
push
into
out
daa
xlat
cld
jnp
lds
jo
ficompl
hlt
insb
xchg
jmp
xor
xchg
pusha
sahf
sub
xchg
popf
stos
mov
mov
mov
imull
das
cwtl
xchg
cli
sbb
mov
les
mov
insb
mov
cmp
test
shll
xchg
sub
lret
jl
ffreep
imul
fnstenv
add
imul
lret
dec
inc
push
shl
insl
lret
ret
call
inc
js
les
cltd
xlat
inc
mov
ret
hlt
dec
fcoml
pop
adc
mov
ljmp
fcomps
mov
dec
leave
or
cmpsb
pop
xor
imul
cmc
or
and
loop
or
pusha
adc
jle
mov
mov
push
lock
and
xchg
inc
xchg
dec
stc
divb
cmpsl
pop
stos
dec
and
mov
jnp
bound
cmc
xchg
shll
lds
fistps
lahf
lods
sti
hlt
and
mov
div
out
mov
lods
pop
cmpsl
and
dec
or
fiaddl
shr
xor
test
lahf
add
push
xor
xchg
jne
aam
pusha
bswap
je
sti
cmp
out
popf
movsl
push
inc
ret
sub
jecxz
movsl
and
mov
pop
or
pop
jbe
fiadds
lcall
out
scas
scas
mov
mov
jo
cld
jmp
xchg
es
jae
std
add
movsl
mov
pop
or
not
push
cmp
cltd
mov
dec
sti
push
pop
leave
xchg
add
and
icebp
pop
push
in
add
xlat
pop
inc
loope
push
aad
fs
mov
push
sarb
sbb
jmp
pop
jge
gs
xchg
movsb
dec
adc
xchg
adc
fisubrs
fs
shrb
lods
orb
inc
lahf
cmp
mov
dec
sbb
mov
in
mov
lods
jb
mov
incl
xor
test
mov
lods
mov
push
enter
cmp
not
xchg
imul
fcomps
mov
xor
call
imul
pop
out
mov
repnz
movsl
test
lock
or
dec
and
int3
mov
inc
out
xchg
out
pop
sbb
repnz
inc
or
fcoms
dec
cmpsl
xchg
andb
mov
int
push
mov
pop
fdivl
xor
mov
inc
cwtl
ljmp
mov
push
lahf
cmpsl
pop
cmp
push
add
mov
xor
fsubl
mov
mull
xchg
addl
dec
cmp
test
dec
ret
and
mov
test
xchg
jne
nop
or
mov
mov
adc
rcrl
jg
arpl
cltd
adc
out
pop
xchg
notl
xor
mov
into
add
loop
mov
xchg
mov
shlb
bound
sbb
dec
jne
call
mov
mov
imul
and
or
outsb
jmp
int
dec
outsl
sub
mov
imul
mov
push
pop
movsb
stos
int
dec
fsubs
repnz
lods
push
jl
jnp
push
loop
mov
cmp
test
mov
stc
ret
cmp
push
inc
sti
cmpsl
iret
xchg
call
ds
fwait
push
xchg
or
dec
insb
lcall
pop
in
pop
dec
pop
iret
pusha
sub
jecxz
int
xor
or
iret
outsl
sti
lahf
jecxz
aad
sbb
fcomi
push
popf
cmp
mov
inc
inc
lock
aas
mov
xor
sahf
std
pusha
shrl
jne
pushf
fstl
lock
lret
push
imul
rcrl
dec
mov
gs
mov
mov
imul
in
outsb
jns
rcrl
lock
in
lds
loopne
insl
adc
sahf
cmp
int3
insl
adc
push
subb
loopne
pop
fisubrl
dec
xchg
cmc
pushf
push
pop
iret
ds
fadd
gs
adc
ja
es
outsl
sahf
jmp
mov
stos
inc
add
fmul
dec
mov
mov
pushf
mov
in
inc
push
fisubrs
cmp
mov
out
push
lret
pop
aaa
out
or
in
in
inc
push
adc
mov
ret
dec
mov
loope
cmpsb
iret
jg
xor
xchg
inc
loopne
mov
push
sbb
sbb
ret
mov
lret
pusha
jne
mov
push
or
les
xor
mov
pop
data16
stos
test
or
lcall
jl
dec
fadds
cmp
call
aaa
jge
ret
adc
and
out
cld
cwtl
lea
clc
mov
out
push
pop
push
xchg
sarb
mov
pushf
push
or
call
hlt
mov
push
mov
pop
adc
ja
mov
push
adc
lods
fbld
icebp
cli
and
pop
in
inc
dec
push
jno
mov
aaa
out
push
adc
pop
repz
adcl
outsl
sub
jbe
inc
adc
pop
xchg
dec
xchg
pop
jg
adc
adc
cld
jb
sbb
daa
sti
mov
int3
jl
xor
adc
repnz
adc
jno
in
negl
sahf
push
pop
rcrb
mov
sbb
int
jle
and
iret
jo
xchg
insb
sti
and
bound
mov
mov
mov
cmp
jle
or
mov
in
arpl
add
pushw
dec
mov
cld
push
les
push
stc
add
pop
push
les
pusha
pop
fwait
xchg
and
push
adc
mov
push
mov
xor
aad
xor
pop
jbe
mov
mov
cmp
imul
cmp
push
pop
xor
cmp
xchg
aad
rclb
mov
insl
mov
cli
aas
test
xorb
clc
das
adc
push
and
int3
cmpsb
jne
sbb
call
lahf
vpsubsb
dec
loope
movsl
jbe
inc
cwtl
testb
movsl
cwtl
inc
stos
push
or
stc
pop
and
mov
sbb
dec
pop
mov
test
cmp
cmp
loop
sbb
pop
mov
lods
ret
jl
xor
xorb
inc
or
es
arpl
mov
ret
pop
sub
push
mov
inc
sbb
lahf
scas
and
pop
jo
popa
mov
jmp
sbb
dec
mov
pop
and
fimuls
xor
into
je
push
loopne
or
adc
jmp
pop
push
shlb
insl
popf
push
outsb
dec
mov
fwait
lahf
inc
lcall
sbb
mov
fcmovu
jbe
ret
outsb
sti
cmp
scas
and
jae
fistl
jo
popa
mov
jmp
push
ficoml
insl
sub
int3
out
mov
clc
cmpsb
lret
je
inc
mov
fistps
cmc
or
adc
or
fistl
and
xor
xchg
cmp
cmpsb
shrl
pushf
xchg
jge
add
gs
push
outsb
dec
mov
cmp
cmc
test
sar
int
call
int3
inc
insb
ds
jnp
adcl
test
adc
mov
mov
inc
push
adc
mov
fsubrs
mov
jle
bound
mov
cs
xor
jo
xchg
push
adc
mov
mov
adc
mov
lret
test
adc
pop
adc
xchg
pop
fidivs
and
push
adc
out
pushf
mov
in
repnz
ja
mov
dec
pusha
mov
repz
and
sbb
xlat
ja
ds
or
sbb
lods
xchg
cwtl
dec
insl
ret
repnz
adc
ja
stc
mov
add
movsl
mov
xchg
dec
les
icebp
cmpsb
fs
push
xor
loop
popl
mov
sbb
push
mov
call
xor
mov
lods
enter
jecxz
test
out
dec
std
push
mov
cmc
repz
xor
mov
mov
loope
ret
push
fistpll
in
push
in
dec
jp
cmp
xor
insb
sub
jbe
add
inc
jg
lahf
cld
xchg
mov
dec
es
test
andb
lds
mov
jno
push
enter
aad
shl
pop
xchg
add
mov
les
pop
adc
repnz
stos
mov
loop
cmp
cltd
or
mov
jns
inc
int3
gs
mov
test
pop
xorb
jg
or
cmp
je
or
xlat
lds
in
aas
push
adc
mov
add
sub
cwtl
dec
lock
sbb
mov
inc
and
jmp
inc
stos
xchg
stos
jle
roll
sbb
mov
fistl
outsl
icebp
push
into
jae
outsl
ret
int
jle
inc
scas
push
test
les
repz
sub
sar
lret
ret
mov
adc
mov
fidivs
cwtl
mov
call
xor
lret
call
cmp
clc
xchg
inc
push
jbe
dec
test
ja
adc
popa
inc
xchg
cmp
loopne
aam
xchg
loopne
std
test
push
addb
insl
xchg
xor
sub
adc
repz
jp
outsl
adc
dec
xchg
mov
dec
mov
jo,pn
ljmp
cltd
add
pusha
or
loopne
push
pop
rcll
xchg
rcl
out
push
dec
or
test
mov
push
mov
pusha
or
fdivrl
movups
mov
jne
dec
movsb
lret
cmp
jmp
daa
and
popf
push
pop
mov
popf
in
aas
xor
lds
loopne
or
sbb
int
mov
iret
xchg
push
push
inc
lcall
adc
loope
mov
mov
sbb
mov
mov
into
int
daa
push
popl
and
nop
in
sahf
mov
jl
gs
fnstenv
mov
outsl
sbb
pop
jne
mov
mov
call
fidivl
jnp
aas
push
adc
call
xor
adc
hlt
sub
vpmulhuw
loop
lcall
xor
cmp
mov
mov
cmp
popa
inc
mov
in
lret
js
int3
jnp
aas
adc
pushf
repz
add
push
mov
sub
int
xchg
lcall
jo
or
sbb
adc
xchg
or
cmp
mov
xchg
movl
and
xor
dec
iret
mov
pusha
inc
jb
lahf
pop
jne
push
je
sbb
dec
jae
cmp
cmpsb
jnp
out
sub
repz
push
mov
sti
enter
adc
xor
int
adc
in
loopne
jecxz
mov
popa
push
aaa
je
shll
lea
lcall
xchg
je
xchg
cmp
dec
adc
pusha
adc
hlt
pop
popa
cmp
sbb
inc
jne
loop
mov
push
fldcw
sub
test
stos
fstpl
int
arpl
xchg
sbb
xor
xchg
and
or
mov
xchg
jle
and
xor
push
sti
jne
xchg
or
adc
sbb
arpl
stc
shrl
aad
jns
push
lcall
jp
jbe
adc
inc
mov
popf
sub
xor
outsl
push
je
out
int
cwtl
mov
out
sbb
add
jo
push
xor
cmp
jns
inc
ret
paddb
sbb
cmp
xchg
ret
loopne
rol
xchg
out
hlt
mov
movsb
push
ret
and
test
xor
andb
stc
adc
xchg
or
mov
fiadds
pop
add
jbe
mov
fstl
fnstenv
push
mov
lea
mov
stos
fldl
pop
repnz
pop
inc
mov
aaa
fisubrs
pop
stc
jp
pop
or
in
loopne
or
inc
mov
adc
jecxz
aas
clc
gs
pop
adc
outsl
aas
cmc
cmp
mov
mov
pop
adc
mov
pop
mov
xchg
cmp
or
xlat
jle
test
enter
lds
cmp
mov
adc
jge
loopne
inc
movsb
jecxz
cmc
pop
adc
pop
mov
loopne
push
loope
adc
flds
mov
pop
in
mov
shl
adc
shrb
push
loopne
adc
hlt
call
daa
sub
pop
adc
jmp
dec
insb
in
pop
adc
fisttpll
push
call
adc
cmp
dec
mov
or
insl
xor
sbb
in
pop
adc
and
js
push
cmp
in
testb
into
stos
adc
cmp
xchg
std
lret
adc
cmpsl
dec
cmp
adc
and
or
in
mov
jmp
fcomi
xor
adc
xchg
fwait
movsb
cmp
cwtl
cmp
or
xor
pop
hlt
test
fs
sub
adc
lods
xor
add
int3
fs
lock
adc
push
addr16
sbb
out
mov
pop
adc
lods
mov
sbb
pop
adc
mov
in
loop
xor
sti
pop
adc
mov
cmp
idivb
dec
jle
faddl
or
icebp
scas
lahf
cmp
loope
out
xchg
push
or
sarl
cmp
push
or
scas
push
add
sahf
sub
xor
imul
into
and
inc
push
adc
jmp
mov
fimull
sahf
dec
ja
fs
in
mov
cmpsl
and
lcall
cmpsl
test
mov
adc
pop
aas
lea
mov
xor
lcall
jmp
in
pusha
xchg
or
sbb
ja
adc
adc
or
lret
test
sar
daa
outsl
mov
pushf
push
int
inc
outsb
cmp
gs
pop
in
push
mov
adc
sahf
push
dec
lock
jne
dec
movl
in
xlat
stc
ja
int
clc
je
xchg
or
sarb
leave
hlt
xor
cmpsb
jp
jae
call
fdivs
movsb
pushf
push
jno
mov
stos
lret
ret
pop
mov
dec
mov
xor
fcmovu
xlat
jg
psubusb
sub
orl
sbb
adc
js
xor
das
mov
adc
imul
pusha
xchg
or
sbb
ja
adc
mov
jecxz
in
mov
fmull
cwtl
sub
cmp
jmp
scas
rorb
sub
repz
push
mov
jne
push
mov
jne
sbb
mov
in
shll
test
or
iret
lret
sbb
pop
or
add
push
scas
test
or
popa
inc
loop
sbb
pop
mov
adc
lahf
jbe
push
mov
mov
xchg
cmpl
pusha
sti
push
jno
inc
push
sar
fwait
rolb
int
xor
orl
outsl
repz
sub
xchg
sbb
mov
les
scas
call
dec
cmp
das
mov
push
jbe
imul
loopne
mov
in
pop
xor
jg
mov
push
push
enter
ljmp
push
push
push
jg
mov
sub
mov
mov
pop
ljmp
xchg
sbb
gs
rol
mov
gs
pushf
fdivs
xchg
and
je
sbb
fidivs
cmp
cmp
pusha
jle
push
jno
dec
push
lock
adc
push
jns
or
inc
push
filds
repnz
mov
push
mov
mov
mov
fld
loope
push
aad
outsb
imul
sti
nop
xchg
inc
xchg
sbb
jge
adc
jmp
inc
movsl
je
xchg
pop
mov
sub
sbb
mov
pushf
lods
or
jo
xchg
fs
pop
jp
dec
lret
pop
js
repz
iret
shlb
pusha
ja
xchg
call
in
nop
jbe
loope
push
and
ftst
mov
and
js
cli
in
mov
sbb
add
xchg
or
mov
jecxz
push
pop
adc
out
adc
iret
mov
in
adc
xchg
popl
xchg
and
test
dec
aaa
nop
out
adc
test
div
leave
movsl
or
or
push
jle
mov
mov
push
adc
adc
std
nop
je
insl
sub
inc
scas
cmc
dec
cmp
clc
pushf
mov
stos
mov
out
out
cmp
jnp
or
or
roll
stc
cmp
rolb
dec
mov
mov
pop
addr16
sbb
repnz
clc
rcll
testl
mov
xor
lret
cld
inc
ficompl
xchg
cs
jnp
out
pop
inc
push
adc
mov
sbb
and
jae
cmp
xor
inc
sbb
sub
dec
pusha
bound
push
add
inc
jne
enter
cltd
lret
dec
inc
mov
mov
inc
jmp
gs
xchg
cmp
shl
jno
sarl
clc
test
pop
or
clc
jbe
or
add
or
mov
inc
bound
adc
xchg
ret
loope
roll
iret
hlt
int
and
mov
xchg
out
lds
xlat
divl
enter
push
outsl
pop
sti
lds
lea
iret
cs
filds
leave
cmpsl
inc
loop
out
into
pop
jl
in
xchg
dec
push
in
push
lret
ret
sub
out
out
or
lret
test
adc
sahf
js
xchg
mov
xchg
inc
lock
test
movsl
cmpsb
shll
push
rclb
js,pt
loop
stc
lods
fpatan
int
fidivs
rorb
and
or
push
ss
and
mov
out
loopne
ljmp
fwait
leave
jno
shlb
popa
mov
cmpsl
and
inc
jle
outsl
cmp
call
pop
fdivs
dec
dec
in
add
add
js
rorl
dec
loop
test
sbb
add
pop
into
sbb
pop
push
jo
mov
push
dec
pop
dec
jno
xchg
cmpsl
lods
xchg
ja
dec
ret
cld
xchg
ja
fwait
sbb
mov
inc
sbb
iret
movl
and
scas
mov
inc
sbb
push
lret
sbb
push
mov
jno
ret
or
shll
ret
out
insl
call
mov
pop
jb
fxch
es
adc
lock
cmp
sub
iret
shl
hlt
jae
insb
test
popl
stc
test
imul
ret
popl
jl
lcall
adc
filds
out
or
mov
pop
sbb
adc
push
adc
test
pop
stos
mov
rol
fidivrs
xlat
mov
outsb
js
lcall
xchg
lods
mov
scas
in
imul
popf
sbb
ds
rcr
mov
xor
popf
or
lret
mov
lcall
jg
test
mov
lret
jno
dec
add
push
sub
fs
cli
xlat
inc
mov
outsb
loopne
mov
and
jle
push
popf
mov
mov
pusha
ds
sbb
jae
xchg
mov
ficoml
call
std
fsubrl
mov
add
pop
add
xchg
xor
sub
ljmp
sub
mov
fwait
jns
movsb
lock
pop
je
xor
stos
xchg
jae
mov
out
inc
pop
cs
orb
pop
imull
push
jmp
loope
jp
mov
pop
mov
mov
inc
push
adc
jmp
das
lock
mov
inc
xlat
mov
adc
mov
jns
adc
lea
push
jge
sub
imul
mov
or
sub
mov
adc
push
inc
insb
outsl
lds
repnz
adc
mov
sahf
out
lret
dec
push
jbe
lds
mov
xchg
jae
es
ret
adc
iret
xchg
push
add
cwtl
sbb
hlt
push
scas
dec
outsl
sub
stos
das
jp
adc
lret
addl
adc
sbb
daa
sbbl
loopne
dec
mull
into
jmp
xlat
cmp
repz
dec
faddl
and
push
adc
add
pop
jp
and
ret
imul
inc
mov
bnd
ds
adc
test
or
adc
inc
clc
sub
vpmulhuw
in
xchg
xchg
jg
and
mov
pop
adc
movsb
jae
leave
pop
mov
repnz
adc
popf
inc
push
adc
imul
ret
daa
push
shrb
mov
ljmp
mov
ss
call
or
loop
js
movsb
stos
scas
in
jmp
sahf
dec
lret
clc
inc
mov
push
mov
icebp
mov
ret
js
icebp
shrb
shlb
popa
sub
ret
adc
repz
mov
loopne
sbb
dec
xor
mov
stos
push
je
jg
cmp
imul
stc
lods
or
lret
shrl
jno
sub
adc
mov
repnz
adc
in
cmp
sub
test
add
xor
pop
in
pop
mov
adc
sahf
xor
stos
int
adc
cmp
repz
sbb
mov
sarb
std
lods
sbb
adc
mov
pop
inc
add
xor
mov
push
adc
mov
xchg
and
push
adc
mov
mov
bnd
movb
lcall
cwtl
cmp
ret
adc
cmc
lahf
jmp
xchg
jno
dec
roll
mov
sbb
ja
dec
adc
sarb
nop
ja
add
lods
mov
ret
or
call
mov
sbb
dec
ret
std
xor
repnz
adc
les
mov
test
popf
cmp
add
push
adc
sbb
loopne
rolb
jp
lock
int
lret
lahf
idivb
ja
jns
adc
movmskps
cld
imul
mov
popa
inc
repnz
cmp
inc
xor
pop
adc
test
mov
in
adc
ret
fdiv
jb
mov
lock
mov
adc
mov
inc
push
adc
mov
inc
and
jge
mov
mov
out
sarb
leave
stos
jnp
pop
sbb
pushf
fildl
je
xlat
and
sub
adc
lret
jp
mov
and
push
adc
clc
repz
and
cmp
fistpll
inc
xor
int
cs
push
push
xor
mov
daa
add
xchg
movsl
xchg
jp
lret
insb
dec
xor
push
cmp
mov
inc
push
and
xchg
and
fcmovb
and
popa
push
dec
inc
push
out
mov
je
adc
sahf
mov
push
nop
dec
and
inc
jmp
add
popl
repz
je
je
jns
inc
add
rcrl
and
add
inc
push
adc
and
idivb
mov
pop
sub
mov
rcrb
sti
or
or
pop
jp
cmp
cld
sub
fisttpll
loopne
scas
mov
or
jnp
push
fwait
and
pop
sub
test
sarl
inc
or
xlat
sbb
xchg
imul
scas
adc
fdivp
jae
sub
fdiv
in
divb
sub
pushf
enter
lcall
mov
jno
push
es
xor
mov
push
movsb
cli
mov
loopne
dec
fdivs
or
xchg
pop
cmp
jno
sub
cmp
mov
cwtl
idivb
sbb
in
lret
jno
adc
and
or
mov
enter
js
push
adc
daa
sub
cmp
fs
pusha
cmp
movsb
iret
xlat
test
rcrb
in
pop
int
xor
test
in
lea
sbb
int3
sti
daa
popf
jecxz
adc
je
shrl
xor
inc
push
adc
lock
adc
lods
mov
jge
mov
ret
std
xor
mov
xchg
cmp
sbb
inc
fisubl
mov
je
xor
cmp
loopne
lret
sbb
sub
js
jne
cmpsl
lidtl
xor
pop
in
in
inc
push
adc
loopne
lea
je
pushf
stos
vpmulhuw
in
xchg
fwait
jg
movsb
inc
mov
mov
xor
js
push
into
ljmp
sbb
popa
ret
dec
iret
dec
gs
mov
and
mov
mov
mov
or
push
cmpsb
aad
incl
in
or
jne
fwait
sbb
push
xor
mov
or
push
cmpsb
in
dec
filds
fiadds
lret
cmpsl
sbb
clc
mov
push
jecxz
pop
pop
sub
std
test
rolb
sbb
dec
rorl
call
sub
pop
mov
xchg
sbb
outsl
cmpsb
sahf
sbb
or
push
jmp
jmp
ljmp
dec
jle
lock
jbe
xchg
insb
cmp
and
dec
out
and
pop
dec
push
jmp
mov
add
inc
mov
clc
repnz
jnp
push
and
add
jo
push
jae
xor
sub
mov
adc
inc
fldcw
cs
dec
push
clc
pop
mov
pop
repz
cwtl
cmpsb
push
xor
inc
fwait
mov
in
dec
out
mov
test
bound
xor
inc
fxch
jb
mov
insb
stc
adc
add
lods
leave
inc
hlt
bound
jge
fimull
pop
mov
pop
test
je
je
cwtl
mov
inc
bound
cmp
fwait
add
add
add
nop
sbb
mov
bound
aas
or
xchg
dec
and
imul
mov
push
sti
mov
pop
pop
hlt
lock
fwait
add
dec
add
push
pop
test
pop
or
sbb
pusha
cld
or
cmp
push
int
and
jg
inc
push
adc
rorl
leave
jns
and
std
les
fists
sub
fsubr
outsb
adc
add
out
sahf
dec
test
incl
imul
add
and
mov
or
insb
dec
add
pop
daa
ds
int3
lock
cld
pop
iret
data16
mov
lcall
sbbb
adc
mov
xor
stc
mov
mov
insl
cmc
pusha
sub
sub
js
cltd
cld
rolb
mov
leave
jl
fnstcw
dec
xchg
fwait
xlat
jno
stos
cld
mov
cmp
push
fucomi
repz
lahf
mov
nop
adc
add
mov
shlb
imul
cltd
jns
daa
mov
adc
push
mov
outsb
xlat
movsl
adc
sahf
xchg
mov
cmpsl
js
push
mov
mov
and
pop
lds
outsl
gs
ss
inc
adc
iret
shrl
mov
xor
mov
loop
jp
lds
adc
scas
fs
popa
fldcw
cmp
dec
push
mov
call
cmc
jecxz
in
sahf
jns
not
mov
dec
movsl
loop
jno
es
dec
pushf
pop
loop
mov
loop
jb
lods
fcompl
add
jo
add
pop
pop
ret
jp
in
aad
jne
xchg
jns
sbb
adc
cs
pop
aaa
in
and
xchg
add
ljmp
and
insb
or
rcrb
jae
and
rorl
lods
sub
dec
subl
addr16
scas
imul
in
bound
test
rol
sub
sub
jb
sahf
mov
xchg
fisubl
in
shl
mov
mov
or
xor
mov
lock
or
ss
enter
sti
cmpsl
iret
in
icebp
ja
imull
jmp
cmp
jns
cmp
inc
pop
or
mov
sbb
cmp
arpl
push
popf
ret
rolb
jg
inc
inc
mov
aaa
repnz
ret
xchg
jl
imul
and
insl
setp
popa
cwtl
mov
inc
inc
mov
in
inc
inc
adc
roll
pop
xor
rolb
xchg
sub
xor
pop
inc
fidivl
and
add
add
sub
mov
xor
add
lret
cmp
push
add
adc
or
xchg
filds
or
add
xor
sbb
adc
and
mov
mov
or
inc
loope
inc
rcll
outsb
subl
cmp
das
pop
mov
sti
add
sti
add
adc
pop
xchg
clc
mov
aaa
xchg
movsl
add
push
push
mov
or
cmc
push
pop
adc
sbb
pop
iret
or
ss
adc
hlt
jp
xchg
jl
subb
inc
push
fldcw
cld
push
cltd
xor
adc
bound
gs
mov
subl
data16
sahf
ds
sub
xor
add
jae
mov
mov
insl
std
push
subl
push
cmp
lcall
mov
jg
xor
lods
addb
push
and
mov
out
out
arpl
aas
xchg
adc
dec
pop
fnstenv
push
aas
incb
xor
xchg
xchg
dec
and
fiaddl
cld
dec
es
in
or
subl
jno
push
mov
adc
sarl
or
push
icebp
sub
testb
xchg
loop
out
ret
xchg
mov
sbb
mov
leave
and
fistps
rclb
rcll
add
pop
add
fdiv
fcmovnb
sbb
jp
add
lds
xchg
enter
adc
cs
std
std
jg
loope
fnstenv
mov
out
mov
push
inc
in
clc
xchg
mov
push
adc
fcmovbe
test
jne
pop
inc
xor
pop
cmp
test
xor
xchg
pop
inc
sbb
int3
orb
push
mov
shl
adc
pop
ss
ljmp
iret
test
into
out
js
movsl
cmpl
push
jne
int3
insb
fs
test
stc
cmc
fmull
push
leave
pop
frstor
jo
adc
and
mov
push
adc
sahf
aas
ret
push
adc
xor
adc
enter
popa
inc
push
shl
pop
adc
xchg
jmp
int3
bound
cmpsl
aam
subl
adcb
outsl
adcb
pop
insl
jns
mov
jge
loop
repz
sub
lcall
mov
hlt
cmp
call
fimuls
lods
cmp
es
dec
pushf
pop
loop
mov
mov
enter
imul
jae
dec
orb
xor
cwtl
fistl
rolb
dec
jge
in
xlat
stc
ja
int
clc
je
out
shl
adc
sbb
push
mov
lret
fwait
cld
jmp
into
pushf
mov
emms
or
insb
mov
lcall
rcll
inc
out
pushf
mov
in
dec
enter
jno
pop
out
popl
pushf
cmp
dec
adc
jle
hlt
cmpsl
outsb
xchg
pusha
shl
sarl
js
pusha
ljmp
in
adc
or
mov
inc
mov
movl
adc
inc
sti
loopne
mov
push
jle
jg
pushf
cmp
rorb
lds
adc
push
cmp
nop
aad
dec
int
pop
push
cwtl
inc
shlb
cwtl
xchg
jns
sahf
ret
mov
jbe
xchg
or
enter
cld
jnp
sahf
pop
jge
jecxz
lock
lcall
pop
out
add
ss
push
xchg
ja
xchg
in
sar
stos
push
xchg
imul
push
fdivp
pushf
xchg
jne
mov
sbbl
mov
popa
add
dec
shrb
shlb
in
mov
in
int3
cltd
xor
sub
mov
jo
adc
jne
pushf
ja
mov
int3
sahf
nop
in
or
cmpsl
shlb
ja
and
rclb
pop
adc
jnp
sbb
into
lcall
mov
loope
xchg
xchg
ja
mov
or
movl
mov
cmovne
icebp
inc
dec
mov
int3
ror
ficoms
lock
fwait
mov
stc
sub
inc
adc
hlt
popf
iret
cli
pop
mov
mov
bound
sub
negb
adc
in
divl
addr16
imul
fisubrs
lret
xchg
xchg
dec
inc
push
adc
scas
jecxz
in
outsl
dec
lcall
pop
adc
jg
loope
call
cmp
and
pop
dec
dec
or
loop
popa
jg
pushf
sub
dec
and
sub
faddl
addr16
loopne
loope
mov
cmp
pop
sub
leave
xchg
push
loopne
adc
jle
cld
test
sub
loopne
dec
push
ret
ret
mov
add
sbb
jle
fistps
int
or
std
call
mov
imul
aam
jnp
scas
dec
in
data16
sbb
jb
fdiv
data16
test
push
adc
xlat
mov
jg
popa
insb
dec
stc
repnz
daa
xor
mov
rorb
rcl
xchg
dec
and
repnz
aam
add
xchg
sub
xchg
dec
pop
mov
insb
pop
adc
pop
adc
sub
sub
nop
outsb
sub
cmp
inc
push
shr
and
mov
repz
js
dec
add
repnz
mov
xchg
inc
push
adc
push
jo
das
imul
lock
enter
xor
xlat
mov
jg
xchg
and
andl
sub
cwtl
mov
and
sar
test
fildll
fcomps
or
lea
fmull
xchg
push
out
jns
mov
and
movb
pop
adc
stos
mov
out
call
sub
or
int3
hlt
repz
leave
pusha
xor
ja
movsb
add
test
dec
or
std
jo
fcmovu
cwtl
push
adc
daa
popl
push
xlat
add
jb
xorb
mov
ret
xchg
sbb
mov
dec
sahf
je
mov
loop
lock
shlb
mov
sbb
in
or
xor
xor
adc
lea
dec
lret
mov
push
fs
sahf
cmp
repz
call
inc
jno
xchg
mov
mov
push
dec
mov
test
shll
sbb
jno
ret
rolb
loope
mov
adc
inc
int
push
sti
push
xlat
hlt
mov
push
xchg
outsl
mov
cs
add
cmpsl
xchg
icebp
xor
push
sbb
jne
push
cmp
negl
xor
inc
fistl
and
int
dec
ret
shll
je
xchg
push
cmp
icebp
dec
push
movsl
add
fsubrs
pop
fs
sbb
inc
mov
pusha
rcl
sbb
js
pop
ds
sub
and
insl
and
jp
adc
loope
sbb
nop
js
shll
pusha
jno
pop
sub
push
adc
mov
xorb
push
pop
inc
stc
push
mov
cmp
adc
adc
pop
cmc
insl
pop
jmp
dec
mov
in
lea
sbb
inc
adc
push
cmp
push
loope
push
adc
and
xchg
pop
push
adc
fcompl
dec
rcrb
js,pt
push
ljmp
iret
sahf
dec
mov
xchg
and
mov
xor
jne
insb
xchg
cmc
testl
sub
in
out
xchg
sbb
xor
loopne
xchg
jle
mov
lock
inc
push
adc
lret
negl
repnz
adc
pop
xchg
roll
sub
xor
mov
cli
push
mov
lds
and
stc
mov
movsl
lret
xor
cmp
out
out
adc
lahf
mov
push
jbe
arpl
mov
sbb
pop
adc
mov
js
or
ja
add
push
ljmp
xchg
imul
loope
inc
out
shrl
bound
mov
por
xlat
and
or
adc
mov
push
jnp
jo
xor
xor
pop
adc
pop
cmp
andb
xor
sbb
jecxz
sbb
icebp
pop
adc
sub
cs
mov
xor
or
inc
popa
jg
jmp
sub
test
cmp
pop
loop
mov
and
sub
push
popa
pop
scas
movsb
out
pop
adc
and
pop
insb
out
adc
mov
inc
mov
loope
adc
insl
cli
pop
mov
pop
adc
lea
jno
add
pop
adc
or
or
dec
divl
fstpl
or
adc
stos
bound
or
or
jl
jb
push
cmp
ljmp
add
cwtl
push
adc
shlb
repnz
xchg
mov
xchg
dec
push
test
es
aad
roll
cltd
jns
pushf
test
mov
dec
rcrb
pushf
in
pushf
push
ret
mov
sub
inc
repz
xor
lods
bound
xchg
dec
ja
xor
mov
movsb
cmpsl
insb
mov
out
xor
and
jns
out
lret
or
lods
or
hlt
cmp
push
mov
xchg
fdivr
sbb
repnz
jae
stos
fs
push
adc
lcall
cmpsl
pop
and
js
mov
daa
mov
pop
out
mov
lock
ret
gs
dec
push
adc
repz
pop
adc
jae
fimull
cwtl
stos
aam
push
adc
xchg
sbb
jge
pusha
sti
xchg
movl
push
push
adc
jg
and
add
pushf
outsb
std
lods
pop
outsl
pop
ds
mov
inc
sbb
cmp
lret
adc
loop
pop
rcl
out
adc
and
fldcw
add
fsubs
jp
jae
bswap
sbb
push
jg
xor
cmp
inc
pop
std
in
mov
xchg
popf
outsb
lods
lds
add
pop
add
push
adc
in
ret
icebp
jle
lock
dec
addr16
push
adc
ds
aaa
out
rorl
pop
cmp
sqrtps
cmp
pop
ljmp
out
ret
xchg
cmc
bound
xchg
fwait
enter
lock
mov
lcall
iret
repnz
xchg
cli
pop
adc
mov
xor
cmp
push
or
mov
jae
into
pop
shrb
push
push
sbb
push
adc
push
mov
pop
inc
out
pop
adc
hlt
lret
push
mov
vpshab
adc
insl
jno
arpl
mov
sbb
stos
inc
mov
add
jmp
lds
adc
daa
in
out
xchg
les
push
sbbb
ljmp
xchg
cs
mov
shl
cmp
xchg
fistpll
je
sub
lock
adc
push
mov
out
jecxz
xor
jbe
repnz
repz
pop
adc
or
in
pushf
testb
and
loop
xchg
out
adc
lahf
out
add
mov
fildll
jp
adc
xor
repnz
adc
jns
out
fcomps
test
cli
jp
aas
dec
fcomi
add
in
adc
pop
pop
ret
test
fisttps
cmp
arpl
sahf
lahf
in
out
mov
aad
jns
lcall
std
push
fcompl
mov
cmp
mov
sub
divl
popw
xchg
xor
adc
push
cmp
lcall
push
ljmp
data16
mov
xlat
stos
fidivl
idiv
or
jmp
and
scas
adc
in
out
xchg
or
cmp
xor
stos
sbb
shll
mov
ds
xchg
or
sahf
adcl
jb
outsl
push
xchg
xchg
stos
xor
jp
out
sub
dec
pusha
daa
xchg
repz
fdivrl
pushf
scas
faddp
or
cmp
sub
sub
jno
mov
lock
and
loope
sub
mov
dec
mov
adc
test
sti
cli
jmp
xor
icebp
xchg
pop
jle
test
xchg
loopne
and
cmp
andl
inc
in
xchg
jne
frstor
mov
push
mov
dec
cltd
xchg
cmp
inc
sub
out
or
sbbl
test
or
rol
out
push
adc
inc
mov
lock
cmc
mov
xchg
hlt
cld
jp
call
orl
push
loop
jns
sahf
in
leave
or
pop
adc
xchg
pusha
lock
jecxz
sbb
pop
lret
sub
mov
dec
mov
iret
sub
cwtl
and
shl
in
push
shll
movsl
or
jb
in
mov
sbb
xor
xchg
cwtl
push
je
mov
outsl
popf
add
mov
push
in
sbb
and
mov
add
cmp
mov
push
adc
mov
popa
sbb
xor
xor
cmp
push
ja
stc
movsl
add
iret
ljmp
xchg
repz
push
mov
jne
mov
cmp
out
push
adc
inc
fcomps
xor
daa
mov
adc
xor
adcl
lods
and
sbb
int3
xchg
fcmove
cmp
sar
outsl
or
pop
adc
xchg
std
popf
sbb
add
int
jns,pt
push
or
xchg
inc
ljmp
add
aas
push
jne
pushf
ja
scas
push
int
inc
jns
jae
call
mov
mov
sub
lods
test
stc
lods
xor
fs
pushf
cmp
mov
mov
push
sbb
pop
jle
mov
dec
sbb
push
add
mov
out
inc
mov
fwait
xor
movsb
adc
inc
and
out
jae
jo
cli
ret
fsubrl
cmp
stos
sbb
sbb
or
adc
dec
outsb
jnp
iret
xor
cli
shlb
fnstenv
test
push
sbb
push
sbb
ret
dec
into
sbb
push
adc
xor
pushf
mov
enter
mov
dec
mov
jmp
imul
cmpsl
sbbl
fs
inc
jl
sbb
or
or
adc
iret
lea
stos
inc
jle
adc
movsb
pop
dec
movsb
test
int
xchg
popl
mov
push
dec
test
and
rclb
fcomps
leave
jmp
repz
adc
negl
negb
jno
cwtl
push
adc
add
movsb
dec
aaa
jo
adc
pop
adc
dec
js
sar
fcomps
rcr
ds
cmp
incl
adc
sbbl
fcomps
pop
ret
sub
je
or
adc
mov
arpl
mov
ror
test
cmpsb
mov
sarl
aas
lds
call
xchg
dec
xor
repnz
push
imulb
lret
mov
sbb
test
out
inc
in
mov
xor
movsb
lret
pushf
push
pushf
pop
dec
stos
inc
std
inc
mov
ljmp
lods
outsb
xor
sub
in
mov
mov
loopne
pop
roll
call
nop
xchg
dec
xor
push
inc
outsl
cmp
jbe
xchg
shrl
push
adc
lret
and
f2xm1
enter
es
dec
insb
repz
sarl
repz
popa
les
pop
cmpsl
aad
adc
jmp
leave
and
int
inc
xchg
push
adc
dec
push
xchg
or
adc
xchg
or
out
add
js
pop
iret
int3
cmc
hlt
jno
xchg
cwtl
pop
mov
test
notb
mov
iret
mov
ficoml
inc
jns
pushf
test
out
aam
push
jno
test
mov
pop
and
sbbb
pop
ss
adc
test
imul
inc
ja
cmpsl
fstpt
mov
mov
mov
mov
or
dec
rorb
dec
add
movsl
xor
add
mov
negb
mov
or
and
fdivl
pushf
fnstcw
in
pop
sbb
mov
push
ret
inc
leave
and
cwtl
lds
jge
xchg
push
adc
xchg
or
add
mov
out
sub
sbb
push
out
outsb
ret
pushf
cmp
dec
lret
rcrb
shlb
dec
push
adc
inc
sbb
inc
lock
xchg
mov
xchg
jecxz
gs
ja
leave
call
dec
cmc
cmp
pop
push
sbb
out
xor
xchg
aas
mov
xchg
xor
adc
mov
pop
cltd
xor
insl
push
xor
ss
mov
test
notl
enter
fcomps
int
push
out
push
xor
testb
ja
repz
repnz
jne
cwtl
push
adc
or
sub
add
mov
ret
xor
aaa
icebp
dec
mov
in
dec
pop
xor
inc
add
mov
pushf
icebp
out
lcall
push
dec
shlb
aas
push
jne
pushf
ja
scas
add
sahf
dec
mov
outsb
and
sbb
pop
ss
aaa
push
cmp
clc
xchg
add
ret
clc
out
sahf
test
sub
jg
inc
inc
mov
movsb
pop
xlat
out
leave
mov
xchg
inc
add
mov
aas
sbb
push
out
outsb
ret
pushf
cmp
dec
lret
sarb
shlb
aaa
xchg
or
xor
or
orb
insl
les
sahf
std
push
fs
rcrl
cmpsl
iret
xchg
js
xor
ret
ret
sbb
xchg
or
cmc
and
adc
leave
mov
adcl
mov
fiaddl
das
push
fxch
sbb
and
pop
mov
push
int
out
andl
mov
add
xlat
outsl
mov
dec
push
das
or
xor
sub
cmp
or
or
int
lcall
out
in
or
mov
adc
jb,pt
dec
je
pop
cmp
popa
in
cs
add
in
xchg
hlt
in
cs
and
aad
repz
mov
in
cmp
stos
je
adc
in
dec
xor
adc
gs
clc
inc
sub
add
mov
cwtl
sti
test
scas
xorb
jno
out
iret
push
push
sti
or
xchg
lds
cmpsl
mov
mov
add
mov
sub
adc
adc
test
inc
add
sub
icebp
icebp
push
jbe
lods
add
lods
ds
rcrb
dec
addr16
push
adc
mov
ret
ja
push
push
mov
adc
fcompl
dec
scas
or
xor
jle
pop
sti
and
fbstp
leave
loopne
aaa
bound
inc
push
cmp
mov
push
lods
in
xchg
lret
insl
push
je
loopne
jecxz
cmp
outsb
sbb
pop
sub
lods
lret
xchg
insb
fistpl
xor
jns
jle
jno
flds
iret
jae
inc
pushf
repz
and
and
cltd
mov
push
mov
push
xor
lahf
cmp
test
in
cmp
cmp
xchg
sub
sub
loopne
sbb
pop
push
sarb
outsl
imul
push
scas
mov
adc
xor
in
mov
xchg
sti
dec
repnz
jg
add
aaa
out
xchg
lret
lret
push
mov
test
mov
mov
push
mov
repnz
cld
jle
aam
fisttpll
lret
or
push
insl
dec
and
movsl
lahf
cmc
sbb
jmp
jns
jecxz
out
popa
xchg
fdiv
mov
mov
mov
repz
loopne
stc
pop
mov
cmp
in
int
dec
sahf
mov
iret
mov
repz
or
ss
xchg
lds
negb
xchg
loop
aaa
pop
pusha
xchg
mov
aaa
xchg
cmpsl
sbb
movl
cs
lds
mov
dec
mov
mov
lret
push
mov
out
cld
mov
push
addr16
pop
fdivrs
repz
out
lea
insb
adcb
fmull
pop
cmpsl
cmpsl
scas
mov
xor
or
adc
pusha
push
xor
pop
inc
shlb
stc
cmpsl
outsb
cmpsl
sbb
mov
xchg
lret
lcall
inc
das
pop
xor
sti
sub
dec
iret
in
dec
daa
pop
out
fisubrl
ljmp
ret
xchg
in
jmp
fldcw
stc
movsl
cmp
int
xor
mov
gs
inc
jno
into
pushf
rcrb
cmp
test
jne
fldcw
xor
cld
dec
popa
out
shll
scas
push
jmp
sbbl
jns
insb
and
lea
divps
jo
xchg
push
shll
cmp
jae
mov
jmp
inc
in
insl
cmp
jae
xchg
push
cli
jl
jnp
inc
push
adc
hlt
cmp
xchg
roll
jg
in
jae
stos
pusha
cmp
adc
add
push
push
or
xor
mov
mov
nop
movl
and
push
call
xor
add
pop
inc
push
or
lcall
ja
pushf
adc
mov
mov
sbb
shll
xor
cltd
xor
and
call
int3
cwtl
jo
shll
push
mov
nop
les
rol
add
mov
pop
lea
sbb
mov
sbb
add
cld
dec
jns
or
xchg
push
out
xor
push
sbb
sub
jle
xchg
cmp
repnz
push
divl
cs
mov
xchg
dec
and
mov
inc
sti
mov
jae
loope
lds
push
pop
jns
stos
jg
mov
ss
mov
xchg
stos
cmp
or
nop
aam
loopne
xor
xchg
cvtps2pi
and
fsts
sbb
sti
and
adc
mov
das
cmp
xor
sbb
fisttps
fstps
and
adc
stc
xchg
aas
pop
push
push
testl
enter
cmp
bound
adc
mov
fidivs
sub
and
in
or
or
xchg
ret
adc
xor
lds
mov
mov
lods
mov
aas
sahf
filds
punpckhwd
mov
sarl
xor
rorl
iret
add
or
push
stos
addr16
mov
mov
inc
push
adc
cmp
mov
movsl
push
jle
cwtl
cmpsl
outsl
or
push
std
clc
or
push
mov
aad
xor
xchg
or
inc
mov
pop
mov
inc
das
sub
rcrl
sbb
lods
jb
divb
aas
and
enter
inc
mov
push
sbb
out
movsl
or
sbb
cwtl
dec
inc
jno
out
jle
and
xor
jnp
push
mov
sbb
das
out
sbb
addb
mov
dec
xchg
push
stc
stc
xchg
dec
nop
inc
ljmp
cmp
or
xor
enter
push
out
cs
inc
jae
adc
dec
dec
in
std
lcall
ret
ret
and
add
push
jae
cmp
mov
in
rcrl
jo
insb
mov
or
sahf
cli
jo
fcomip
lret
ret
loope
jns
xchg
hlt
cmp
xchg
cs
inc
push
adc
loopne
pop
xchg
jg
imul
cmpsb
jbe
pop
fsubp
mov
sub
dec
js
mov
cmp
push
out
mov
imul
xchg
test
sbb
add
lret
repnz
push
call
sbb
jge
push
loop
and
cmc
inc
push
adc
adc
mov
jge
popa
nop
rcrb
push
xchg
inc
rol
ffreep
jg
mov
cmp
push
cmc
adc
fwait
jne
scas
fists
out
mov
cmp
lea
inc
inc
bound
dec
jl
and
inc
out
fcom
ja
xchg
leave
dec
aad
jae
into
pushf
arpl
cmp
lahf
loop
insl
scas
mov
int
inc
inc
xor
inc
inc
loop
add
insb
mov
dec
dec
out
decb
mov
adc
mov
push
fisubl
daa
shrl
inc
mov
push
mov
icebp
push
pop
mov
add
xchg
fs
mov
pop
repnz
icebp
sub
mov
add
mov
mov
xchg
xchg
push
jnp
push
and
add
jo
dec
arpl
mov
jno
out
adc
loop
xlat
cld
arpl
or
lds
cld
das
xlat
push
jb
cmp
add
jmp
jno
pop
incl
adc
mov
push
sbb
and
xchg
test
xor
out
mov
and
dec
bound
in
testl
sahf
fninit
stc
mov
shll
stos
fisubl
mull
sti
mov
xchg
rorb
repnz
xor
jp
pushf
pop
repnz
es
popa
iret
adcb
jg
loope
jecxz
test
jp
mov
inc
push
adc
fimull
push
clc
add
adc
and
cmp
adc
or
mov
pop
popf
gs
add
ja
jno
or
imul
bound
sarl
fimull
mov
fadd
les
jge
sub
adc
ss
lret
in
mov
orb
std
add
xor
push
dec
push
adc
adc
or
movsl
mov
cli
jbe
popa
push
xchg
add
addl
cmp
jecxz
fwait
pop
add
inc
adc
xchg
pop
mov
ds
hlt
push
cmp
std
dec
pop
or
insb
pop
loopne
push
andl
mov
mov
int3
cmp
loop
outsl
movsb
or
sbb
fidivrl
and
mov
pop
mov
lock
cmp
fimuls
stos
adc
mov
adc
popf
sbb
test
sub
out
dec
in
pop
mov
std
inc
or
out
jb
in
test
sbb
mov
inc
sti
test
div
imul
pop
adc
adc
jbe
cwtl
dec
sbb
out
xchg
add
xchg
xchg
fcmove
push
or
jp
nop
stos
rcl
xchg
cli
mov
rcrb
inc
adc
hlt
mov
jns
sbb
nop
or
les
insb
pop
les
loope
pop
movsb
movsb
fdivrl
aaa
in
mov
xchg
cmp
fs
and
adc
popf
cmp
cmp
lock
and
or
ret
les
rorl
cmp
test
xchg
mov
cmp
or
cmp
movsl
popf
cmp
insb
add
int
daa
int3
or
adc
dec
jbe
ret
cmp
cli
mov
lods
ja
jnp
sarb
and
pop
vpmulhuw
in
cwtl
aaa
pop
and
into
sbb
push
dec
outsb
mov
pop
cmc
aam
pop
sub
pushf
xor
or
pop
push
out
lret
in
mov
pop
sbb
add
movsb
arpl
dec
mov
inc
jae
pop
ror
xchg
ja
inc
fimull
inc
shll
dec
rcr
sbb
pop
vpmulhuw
in
mov
in
aas
cwtl
xor
shlb
push
mov
aaa
fldcw
aaa
je
shll
mov
cmpsb
sahf
sbb
or
push
jmp
xchg
outsb
cwtl
xchg
aaa
js
sahf
jg
aam
gs
insl
and
mov
ret
push
es
mov
inc
insl
mov
in
pop
cli
loop
stc
cmpsb
sar
pop
in
iret
sahf
xchg
or
scas
imul
xor
ss
dec
ret
rorb
cs
int
adc
daa
rorl
dec
loope
out
add
mov
movl
hlt
adc
jae
inc
imul
xor
imul
lret
aas
inc
push
adc
int
jne
push
dec
push
sub
aad
dec
mov
testb
inc
shr
stc
movsb
xor
push
int
pop
cvtps2pi
sbb
push
clc
jbe
inc
into
adc
sbb
jmp
push
push
cmp
icebp
dec
push
movsl
add
add
pop
gs
fistpl
add
hlt
mov
addl
mov
pop
sbb
iret
in
test
or
mov
test
xor
mov
orb
xchg
sub
cld
scas
cmp
aam
and
add
cmp
imul
lret
popl
enter
sub
dec
insb
add
adc
movsb
pop
push
repnz
push
jb
hlt
sahf
sub
push
adc
es
push
rcl
mov
xlat
xor
and
shrl
mov
stos
cmp
sub
mov
jne
sahf
pop
outsl
test
push
jnp
add
and
xor
rorl
fstpt
ja
das
in
pop
movsl
add
pop
arpl
and
mov
add
pop
xchg
and
pop
mov
in
fistpll
les
sbb
out
inc
repz
jmp
push
gs
shlb
mov
and
lcall
fwait
sub
out
sub
or
das
les
jno
jg
add
push
adc
inc
pop
sub
popa
mov
inc
mov
cmpsl
adc
rorb
mov
sbb
add
rcrb
pusha
hlt
fmull
ss
jp
jns
fwait
or
cltd
and
sbb
dec
enter
dec
or
fldenv
fcompl
or
es
int
pop
mov
ds
pop
push
iret
fildll
push
adc
pop
loop,pt
hlt
jle
dec
xor
arpl
rep
or
push
jae
xor
pop
sub
mov
sbb
test
aam
push
jp
xchg
cmpsl
inc
or
inc
outsb
jge
inc
add
rorl
or
adc
cmp
ja
adc
xor
outsb
adc
fisttpll
rolb
call
movb
pushf
sti
jno
incl
pop
insb
scas
jecxz
iret
sahf
test
sub
push
imul
and
mov
scas
jl
jae
jne
xchg
or
fcmovu
cs
and
mov
outsl
xor
shrl
into
lcall
stos
sbb
sbb
or
adc
dec
outsb
push
or
ficoml
imul
hlt
xchg
test
push
sbb
push
sbb
ret
dec
into
sbb
push
adc
daa
iret
pushf
mov
enter
mov
ret
arpl
mov
pop
ret
jnp
pop
mov
les
and
pop
xor
or
fisubrl
ss
mov
shr
mov
aas
xchg
iret
xor
add
jmp
in
cltd
xor
adc
ja
add
jbe
fimull
repz
mov
sahf
nop
adcl
and
sbb
iret
push
jno
mov
xchg
pushf
xchg
maxps
sti
mov
mov
jle
idivb
shlb
mov
pop
nop
ja
cs
pop
inc
fs
pushf
cmp
data16
mov
arpl
jnp
mov
test
fwait
jge
insb
add
xchg
pop
xchg
jge
and
sbb
add
inc
loop
pop
adc
jnp
push
in
ja
imul
xchg
mov
idiv
outsl
xchg
xchg
sbb
add
fmuls
int
fwait
sbb
jg
sbb
je
jns
cmp
fs
cmp
mov
cmp
pop
icebp
outsb
pop
insb
xor
jbe
or
lock
mov
fdivl
insb
lret
adc
cwtl
lcall
xchg
vpmaxsq
and
or
movsb
fs
fcomps
in
cli
scas
push
pop
jns
loop
pop
add
roll
in
sbb
pop
and
out
cmp
mull
pop
xor
lock
pop
ja
bound
lret
imul
cmp
mov
mov
lds
hlt
outsb
and
adc
mov
xchg
sub
divl
push
push
inc
dec
add
sbb
sbb
lods
xor
lods
in
push
ja
or
or
jmp
imul
xchg
int
jno
mov
cmpsl
jmp
insb
cmp
mov
ds
test
lret
pop
mov
lahf
imul
or
out
mov
adc
jno
xchg
ret
into
push
sahf
lods
fcomps
nop
xor
fadd
out
imul
mov
dec
lods
popa
dec
ret
ret
cltd
push
aaa
and
stos
testb
jns
inc
push
js
mov
fiaddl
xchg
mov
scas
fistpll
test
shr
into
add
jp
mov
or
pusha
jg
adc
push
ja
jle
add
fmull
imul
xchg
push
arpl
inc
es
jnp
scas
shlb
fistpll
sbb
cmp
push
jno
mov
mov
sub
lahf
clc
out
push
dec
jns
cmpsl
mov
push
shl
add
mov
push
or
insl
test
sbb
outsb
imul
movsl
dec
test
xor
jno
pop
or
mov
or
cli
in
mov
fs
mov
enter
sbb
and
idiv
ljmp
sbbb
jno
rolb
out
or
lcall
xor
push
fidivrl
shll
sahf
cmp
js
cmp
add
mov
cli
je
xchg
rolb
sub
xor
xor
inc
fstpt
xor
sbb
push
in
psrad
lock
or
jmp
jno
mov
and
inc
push
adc
int
jne
push
dec
add
dec
addr16
pop
xchg
pop
outsb
sarl
adc
out
loope
testl
ss
rcrb
pop
adc
sub
mov
jae
repnz
adc
pop
xor
mov
sbb
adc
sbb
or
and
dec
insb
push
test
in
ljmp
dec
rorl
sub
mov
jmp
call
rorb
or
cli
pop
mov
imul
mov
clc
adc
fistpll
je
xchg
xchg
xor
mov
rolb
dec
xlat
or
push
int3
imul
lds
mov
arpl
xor
ret
or
lock
sub
negl
xchg
jl
cs
out
pop
pop
xor
addl
shrl
mov
je
sbbb
xor
movsl
adc
insl
cmp
xor
xchg
fcmovb
cmp
xlat
pushl
mov
cmp
cmpsl
or
sbb
xor
shrl
add
dec
in
rcrb
jnp
mov
cmp
pushf
js
loop
xor
pop
loop
push
push
lds
jbe
xchg
pop
aaa
add
push
outsl
ret
jno
or
insl
and
dec
mov
int
add
or
mov
push
pop
jp
pop
xchg
enter
sbb
mov
jmp
shll
hlt
sbbl
ret
and
inc
nop
bound
enter
sbb
xchg
pushf
add
fwait
jge
xchg
adc
test
sbb
jge
lods
xchg
das
dec
jns
filds
sub
mov
cmp
test
lret
mov
call
cmpsl
mov
mov
mov
test
xchg
shl
mov
popw
js
lods
push
cmp
dec
lods
or
push
mov
outsb
and
and
movsb
or
cli
stos
fs
data16
mov
addb
and
data16
mov
sbb
adc
repz
es
mov
dec
arpl
cwtl
movsl
filds
mov
jle
in
cmpl
dec
xor
mov
xor
pop
faddl
pop
xchg
sub
pop
xchg
insw
adc
ficoms
insb
dec
xlat
jne
add
aaa
sub
int
movsl
xchg
push
sub
popa
add
loopne
sbb
enter
into
sti
outsb
cmp
pop
iret
push
loopne
xchg
cmp
mov
pop
bound
sub
ja
clc
push
mov
pushf
test
rcll
testb
mov
fstl
shll
jle
les
aad
faddp
jmp
or
cmp
add
inc
lds
jnp
inc
push
adc
in
ss
mov
add
outsl
or
xor
fldenv
push
mov
hlt
stos
paddw
outsl
add
pop
lods
sub
dec
loopne
gs
xchg
pop
xchg
icebp
mov
xor
mov
rol
and
js
in
add
repz
fucomip
jnp
adc
sti
popa
inc
cmpl
sahf
mov
in
rcrb
mov
into
idivb
xchg
out
icebp
imul
push
fs
sahf
cmp
enter
sahf
inc
push
adc
pop
iret
pushf
imul
pusha
lret
cmp
cmp
sub
or
stos
fucompp
xlat
sti
xchg
lret
or
cmp
iret
repnz
or
jecxz
push
mov
push
cmp
jae
cmp
and
mov
mov
arpl
sti
movsb
lret
add
or
mov
adc
adc
jns
or
adc
push
adc
arpl
sbb
and
and
dec
or
lcall
stos
or
sbb
or
shlb
pop
dec
mov
in
mov
ret
jae
outsl
lock
roll
and
call
fcompl
aas
cltd
out
pushf
push
sbb
pop
adc
or
out
arpl
xchg
adc
movsl
xchg
jg
sbb
je
test
adc
add
sub
sub
xlat
in
call
xor
sbb
pop
cld
push
push
mov
and
xchg
pop
inc
fs
jmp
sbb
mov
pusha
sbb
nop
or
push
daa
cmp
pop
iret
add
into
sbb
pop
push
jo
or
jns
loop
or
mov
ret
lock
add
push
sbb
arpl
cmc
jne
js
fstpt
in
movsb
scas
mov
cmp
fs
adc
mov
movsl
sbb
sub
dec
fsts
test
jge
cmc
inc
mov
pop
sub
popf
call
sbb
popf
enter
cmp
jp
lret
ljmp
adc
in
fdiv
adc
fdivr
dec
lret
inc
push
adc
adcb
xchg
xor
lock
dec
pop
cli
les
sbbl
mov
add
aad
xor
cmpsb
in
sti
hlt
xchg
out
xor
cmp
pop
push
xchg
data16
stos
cmp
dec
mov
loopne
xor
push
pusha
inc
mov
js
call
sub
and
push
out
cs
iret
inc
push
adc
or
int3
jg
mov
out
fcmovb
cltd
mov
jmp
sub
mov
mov
cmp
xchg
mov
int3
data16
ss
pop
push
pop
or
mov
ud1
cwtl
les
sarl
add
call
mov
jmp
out
adc
adc
sub
jg
sbb
add
push
adc
ljmp
xor
pcmpgtd
sub
out
fcmovnbe
cld
out
adc
mov
arpl
lret
std
sbb
fwait
imul
adc
out
adc
std
rclb
dec
iret
lahf
push
shr
or
ss
xchg
test
lods
push
jnp
sbb
pop
adcb
or
jnp
jl
xchg
xor
mov
jecxz
or
inc
xchg
dec
mov
mov
mov
cmp
shll
stos
jb
gs
push
aaa
lahf
push
xor
out
jge
imul
repz
cli
xor
jmp
or
cli
pop
add
fstl
dec
cld
jo
dec
mov
out
xlat
and
adc
ret
insl
in
and
inc
inc
fidivl
jnp
dec
push
adc
cmp
pop
adc
sub
movsb
scas
iret
leave
call
subb
gs
sbb
push
shll
repnz
pop
adc
cwtl
mov
shll
addb
lret
and
xchg
cs
mov
push
adc
pop
adc
mov
addb
lret
and
xchg
cs
mov
push
dec
incl
adc
pop
mov
shll
addb
lret
and
xchg
cs
mov
push
mov
cmc
js
jmp
popf
lock
inc
dec
or
xor
or
ja
into
pushf
mov
mov
mov
bound
xor
inc
negb
xchg
lds
hlt
jg
xchg
ss
pop
lods
fldcw
or
arpl
mov
mov
jmp
add
sbb
push
imul
xor
sbb
sub
xor
dec
pop
and
ljmp
movsl
add
xchg
fmuls
lea
jb
mov
rol
mov
shlb
cmp
push
scas
xlat
lret
dec
ret
add
push
arpl
cwtl
stos
xor
sbb
int3
or
jecxz
mov
adc
or
outsb
add
xor
fcmovu
pop
push
stos
push
iret
pushf
icebp
mov
ret
add
loop
xchg
push
out
push
adc
not
ret
cmc
adc
lock
and
dec
leave
dec
ret
mov
out
das
inc
mov
pop
jnp
out
in
testb
popf
jg
lea
mov
or
push
fs
data16
jno
add
enter
icebp
and
sbb
add
add
jne
adc
pop
inc
xchg
insb
cmp
insl
test
lock
and
xorl
mov
sbb
mov
xchg
sbb
sbb
sbb
cmp
insl
imul
xor
fcomi
pop
int3
push
xor
es
pop
or
jge
dec
cld
movsb
rclb
inc
cmp
ss
inc
push
adc
mov
or
dec
insl
movsl
mov
cmp
pop
adc
cli
adc
push
adc
mov
popa
cmpsb
ret
out
push
out
mov
cltd
cmp
mov
inc
push
jbe
bound
adc
mov
cwtl
fdivrs
cli
jmp
xchg
insb
xor
fidivl
into
sub
jo
int3
mov
pop
movd
dec
icebp
push
adc
cli
fwait
and
xchg
lahf
das
into
add
pusha
jbe
call
pop
jae
in
mull
in
scas
sub
ljmp
mov
mov
mov
ficoml
jns
mov
xlat
xor
or
sarl
inc
push
scas
pop
jae
in
sbb
jbe
add
xor
dec
mov
inc
inc
cmp
push
enter
aaa
jns
lods
jg
stos
aad
insl
aam
cmp
popa
inc
pop
fnstcw
cmpsb
sub
jp
mov
adc
popa
cli
daa
aad
andl
call
test
jp
shlb
les
cmp
arpl
push
push
jle
xlat
sahf
fdiv
mov
shll
in
js
mov
cmp
mov
ret
push
fisttpll
adc
idivl
xchg
subb
add
adc
or
adcb
ja
cmp
or
cmc
sub
xchg
sub
add
cwtl
in
scas
push
in
shr
fwait
cmp
pusha
inc
pusha
lret
inc
jbe
movsb
jns
mov
sub
into
ja
cld
mov
loop
icebp
push
popf
inc
xor
movsl
jg
dec
xchg
ret
call
mov
sub
push
jno
xchg
mov
fbstp
lret
shl
psllq
icebp
push
repz
and
push
inc
inc
insb
xor
and
inc
push
pop
and
dec
mov
pop
je,pt
clc
dec
adc
xor
push
dec
mov
mov
shrb
in
add
pop
insl
xor
mov
in
ret
fwait
xor
push
mov
out
iret
mov
mov
sbb
xor
push
out
jne
loop
mov
imul
fldl
imull
mov
insl
ret
rolb
adc
sub
cwtl
add
jo
push
inc
mov
or
mov
ret
xchg
lods
cmp
mov
or
jb
loop
add
cmp
repz
mov
movl
int3
arpl
mov
sub
sti
loop
ljmp
fwait
hlt
jno
ret
add
lock
adc
xor
jo
das
lret
scas
lock
cmc
adc
xchg
xchg
mov
mov
push
dec
es
push
inc
loop
sbb
cmp
jae
dec
insl
inc
jns
sarl
xor
pop
out
pushf
sbb
mov
lcall
repz
jmp
fwait
subb
loope
inc
fcomip
adcl
cmpsb
insb
inc
and
adc
mov
repz
sbb
sbb
sahf
decb
mov
test
rcr
ja
pop
iret
push
sbb
or
mov
enter
mov
xor
cmpsb
insl
aam
pop
mov
mov
inc
sbb
jnp
sahf
les
jae
cmpsb
jp
nop
mov
cmp
dec
test
push
cmp
addr16
xchg
inc
pop
aaa
fidivrs
mov
adc
add
dec
and
imul
push
jae
call
xor
add
lods
pop
xlat
sub
xlat
xor
idivb
inc
adc
mov
sahf
adc
pop
aam
mov
icebp
cs
ret
add
inc
push
repnz
mov
cmp
xor
mov
add
sarb
mov
popf
vpshad
dec
leave
sbb
xor
lcall
sti
scas
jmp
jb
dec
into
inc
push
loope
and
dec
jmp
stos
inc
sbb
mov
icebp
cmp
xor
and
mov
addr16
adc
adc
loope
cmc
xor
ficoml
xor
rcr
push
orl
mov
mov
pop
jmp
pop
sti
popf
nop
mov
insb
mov
mov
sbb
pop
push
push
xchg
or
ss
imul
add
iret
sub
cmp
imul
adc
xchg
jbe
shr
inc
add
stos
push
push
adc
mov
fwait
pop
lds
enter
push
or
and
push
gs
das
fmulp
pop
ja
scas
fwait
lds
jne
cmp
nop
mov
add
adcb
pop
iret
xchg
inc
jnp
and
pop
dec
popa
lods
test
aas
sub
xor
hlt
test
push
in
fmuls
xorb
or
fwait
dec
out
jecxz
into
mov
shl
int3
inc
fidivrs
sub
xor
insb
sahf
mov
xchg
insl
scas
adc
pop
shufps
cmp
jb
inc
sarb
mov
repnz
xchg
mov
pop
add
jns
pop
into
and
and
adc
mov
xlat
test
mov
xchg
cs
mov
cmp
mov
lcall
push
mov
mov
repnz
cmc
rclb
pushf
xchg
decb
xor
jns
repnz
arpl
mov
xlat
cld
loop
mov
sbb
loop
xchg
xchg
mov
fs
in
dec
stc
push
xchg
jl
add
mov
adc
xchg
xor
shll
arpl
arpl
cmp
icebp
test
mov
cs
mov
pop
xchg
in
xor
sbb
push
xor
sbb
cwtl
jo
xchg
ja
mov
xchg
jne
dec
pop
addr16
fists
sub
sti
cmpsl
lret
lods
dec
adc
out
fnsave
cmp
cmc
xchg
cld
mov
inc
and
mov
cmp
cmovae
lcall
sbb
ljmp
dec
mov
dec
pop
xor
mov
mov
pop
cs
sub
mov
xchg
nop
aas
arpl
repz
cmp
out
xor
pop
xor
and
mov
adc
pop
dec
shl
sbb
pop
lret
leave
cwtl
pusha
bound
xchg
xor
lods
cwtl
xchg
stos
dec
je
or
cmp
inc
jmp
mov
lea
and
sbb
cmp
jae
mov
js
cmp
lcall
pop
in
inc
add
fsts
js
xchg
cmc
cmp
sahf
das
or
sahf
mov
call
jns
adc
sbb
iret
lret
push
pop
mov
xor
ror
push
mov
insb
stc
adc
fistpll
in
sub
hlt
inc
cmp
fldt
lret
xchg
xchg
lods
inc
push
adc
scas
xchg
jne
xchg
aad
xchg
inc
js
sub
lock
or
jae
xchg
pop
nop
ret
dec
loopne
mov
adc
or
scas
sti
ja
bound
lret
push
subb
push
cli
adc
call
bound
adc
push
adc
add
imul
mov
stos
inc
subb
xlat
loopne
mov
leave
int3
sbb
xchg
push
gs
mov
leave
fcoms
inc
or
push
pop
push
cmpsl
notb
dec
mov
and
cmpsb
popa
scas
lea
adc
mov
jecxz
ds
mov
mov
outsb
cld
or
rcrl
movsl
mov
out
sub
push
pop
leave
int
and
dec
inc
in
enter
in
xor
lcall
adc
dec
pop
adc
inc
stos
arpl
ret
dec
lret
push
es
and
fdivrs
inc
push
adc
gs
cmpsl
test
inc
jae
xchg
inc
xchg
je
push
aad
or
adc
stc
sbb
add
sahf
cmp
sahf
inc
push
adc
divl
sub
jns
sar
fldl
call
lea
and
popa
mov
sub
dec
mov
or
dec
imul
xchg
pop
sub
nop
xor
and
jle
jge
rcll
jae
mov
push
mov
inc
mov
dec
arpl
out
dec
ds
mov
mov
add
bound
adc
or
ja
mov
cmp
pop
xor
nop
lock
and
bswap
or
cld
cmp
data16
push
mov
push
sti
or
mov
mov
and
clc
sti
mov
js
dec
cmp
out
sahf
mov
xchg
lcall
out
es
push
dec
ret
push
add
mov
add
out
ret
push
pop
cmp
mov
push
push
add
mov
xchg
and
rcrb
fstps
stc
movsl
cmp
iret
sahf
mov
sbbl
mov
psubsw
push
mov
test
mov
insl
cmp
fldl2t
xor
cmp
nop
sarb
loop
ljmp
sbb
dec
mov
jae
inc
push
adc
and
or
inc
in
lds
loopne
out
mov
pop
punpckhwd
int
fistpl
mov
cwtl
movl
pushf
xchg
les
fsubs
sub
repz
mov
jne
push
je
shll
lea
sbb
pop
jl
clc
lcall
leave
push
es
xchg
mov
mov
or
cmpsl
cmp
xor
sbb
dec
pop
push
and
mov
and
shll
adc
or
icebp
loop
add
pop
out
jae
and
mov
pop
icebp
and
lods
clc
xchg
fisubs
je
cmc
js
adc
pop
int
adc
sbb
gs
sarl
sarl
pop
xor
test
mov
fistpl
sub
xchg
out
jne
mov
insb
and
adcl
ret
pusha
push
and
cmp
lcall
adc
xor
jmp
pop
mov
pop
hlt
test
adcb
in
cwtl
mov
mov
daa
adc
pop
idivl
lock
dec
jp
xor
pop
dec
movl
out
roll
test
sub
xchg
leave
xchg
mov
out
mov
loopne
lock
sti
or
mov
cmp
pop
push
das
test
mov
stos
cmpsl
das
out
or
mov
or
dec
out
sub
cmpl
dec
scas
mov
cmc
mov
in
xchg
mov
fnstcw
adc
mov
and
aam
and
stos
mov
mov
test
cmpl
xor
mov
outsb
xor
gs
sbb
movsb
scas
jb
mov
lods
incl
xchg
mov
inc
add
mov
add
sub
scas
mov
mov
or
out
imul
mov
dec
lahf
push
mov
pop
subl
lret
iret
shll
xor
out
lea
pop
js
jecxz
sti
in
xchg
xchg
mov
cmpsl
sub
push
push
mov
push
push
std
jmp
mov
insb
movsb
xor
ret
or
dec
and
xchg
in
xchg
jl
popa
and
pop
int3
pop
mov
shr
js
lret
mov
aad
xchg
mov
mov
inc
je
ss
lcall
add
subb
fistpl
mov
cmp
fstps
sbb
jno
dec
mov
pop
mov
icebp
dec
sbb
pop
ja
arpl
pop
mov
cmp
lods
outsl
fsubp
pushf
jns
daa
lahf
lods
cmp
subb
ficoml
pop
adc
std
js
repz
cmp
inc
lahf
in
xchg
mov
sub
bound
sub
xchg
out
jno
mov
insb
ds
adcl
ret
pusha
push
and
mov
fwait
hlt
inc
dec
lret
loopne
cmc
fdivs
shrl
mov
mov
push
mov
pop
cmc
add
xor
lock
add
mov
mov
inc
fnstenv
repz
cmp
mov
hlt
adc
add
test
out
andl
test
add
push
sub
test
sbb
jp
inc
rol
or
lcall
dec
lret
outsl
leave
pop
cs
xor
repz
inc
imul
mov
icebp
cmp
or
or
popf
addr16
mov
jns
int
fldt
push
push
popa
out
pushf
push
fisttpll
push
sahf
js
lods
scas
iret
mov
outsb
test
roll
scas
imul
mov
icebp
push
stos
scas
xor
sahf
inc
inc
sbb
icebp
fstpl
dec
inc
iret
pushf
imul
dec
jl
pushf
pop
lds
mov
out
jne
lahf
shrl
mov
scas
lret
js
mov
movsl
cmc
sub
pushf
lock
push
call
add
int3
sti
movsb
lret
jecxz
adc
je
shrl
fsts
adc
mov
push
out
pop
shlb
repz
in
pop
xchg
lea
sahf
cmp
jno
mov
inc
fidivl
sub
loop
insb
push
dec
sarb
jnp
inc
insl
mov
rep
cs
cmp
jbe
jnp
insb
mov
icebp
out
cmp
out
xchg
jecxz
and
or
or
pushf
repz
push
or
pop
mov
outsb
les
jb
pusha
sub
mov
std
or
insl
cmp
add
jle
inc
shl
jnp
test
out
lcall
mov
es
stos
les
cmc
bound
mov
into
or
lcall
mov
fucomip
sbb
add
push
jg
enter
ljmp
push
xchg
sbb
mov
outsl
pop
sahf
dec
outsl
jmp
mov
cmp
int3
or
int3
sbb
cmp
loopne
pop
lock
inc
cmovb
imul
or
push
push
adc
out
and
in
mov
pop
xor
pop
pop
xchg
pop
addl
cmc
sbb
xchg
jl
jge
sbb
push
out
scas
jne
jmp
inc
fs
pop
fstl
inc
or
nop
mov
imul
in
in
pop
daa
lret
inc
mov
adc
orb
jmp
xor
imul
cwtl
test
pop
mov
xchg
stos
push
jnp
sub
add
mov
pop
or
xor
daa
xor
iret
jns
jp
imul
and
sbb
int
cmpl
icebp
push
inc
std
jmp
lcall
imul
pop
lret
arpl
movsb
adc
jb
mov
sub
add
push
test
jno
dec
push
int
sti
outsb
push
pop
mov
and
xor
clc
rcrl
mov
sub
shll
sbb
mov
cmp
into
es
js
pop
push
aam
inc
push
adc
rcrl
in
inc
mov
mov
or
fistpl
test
cmp
lods
fcomps
cs
out
fs
fiadds
shlb
lret
pop
xlat
addr16
bound
or
mov
xor
push
jle
or
xchg
add
mov
test
in
mov
mov
jo
js
xchg
inc
imul
sbb
outsb
lds
cmp
jge
sbb
dec
push
push
sub
test
sbb
insb
popf
xor
lods
cwtl
cltd
stos
shlb
push
cmp
inc
jmp
std
and
xchg
icebp
fnsave
test
pushf
stc
nop
sarl
and
cmp
repz
mov
pop
ret
repz
cmpsl
pop
js
cltd
cli
stc
movsl
int
dec
fcomip
in
mov
push
mov
rol
arpl
xor
and
sub
and
jno
mov
imul
sub
cli
scas
ficoms
jge
mov
outsl
cmp
lds
dec
cmp
xor
rcr
push
insb
or
lahf
xchg
sub
mov
add
xlat
mov
adc
or
aas
icebp
loop
cmp
out
roll
call
xor
add
inc
push
adc
mov
push
dec
insb
inc
push
xchg
xor
insl
dec
fistpl
nop
inc
cltd
lock
call
outsl
lea
or
lahf
out
out
stos
lds
arpl
repz
ja
imul
insl
cmp
sbb
add
mov
cli
xchg
ret
pusha
insb
xchg
dec
shrb
hlt
or
lds
in
mov
mov
push
and
fadds
inc
fs
testl
mov
xor
std
push
insl
lcall
in
mov
pop
cmp
loopne
push
xor
xchg
ja
js
mov
push
adc
pushf
aam
mov
xchg
inc
xchg
dec
incl
imul
arpl
addr16
loopne
popa
insb
xchg
loop
adc
push
lret
inc
pushf
je
mov
mov
popa
movsb
xchg
mov
mov
sub
lods
push
popf
xlat
jb
test
hlt
push
addr16
mov
ds
call
outsb
jp
test
sbb
cltd
push
ret
mulb
in
sbb
or
je
jne
inc
sahf
mov
pop
clflush
lods
push
and
mov
or
icebp
sub
in
enter
lock
lret
cs
ret
adc
rol
jnp
add
lcall
xchg
frstor
sahf
addr16
push
fbld
push
in
popa
hlt
pop
jl
push
push
test
sbb
std
jmp
inc
leave
ljmp
adc
stos
dec
ss
mov
ror
adcb
cwtl
pop
movsl
cmp
adc
xchg
pop
popf
punpckhwd
ret
fnstcw
mov
in
xor
pop
ss
fs
mov
push
inc
add
mov
daa
cs
xor
push
xchg
pop
lahf
fsubp
testb
mov
sub
xchg
and
mulb
push
adc
xchg
mov
sahf
lock
dec
or
shll
in
pop
dec
mov
jo
ss
test
and
data16
lea
push
mov
ret
lods
lods
cmp
fucom
loope
lods
out
mov
or
xchg
daa
scas
cld
pop
sub
pushf
aas
sub
sti
jns
push
or
cmp
es
arpl
aas
sbb
dec
fdivrp
pop
cltd
pop
cmp
in
fsub
inc
orl
imul
jle
inc
loop
jns
inc
in
sbb
push
lock
loopne
imul
xor
add
cmp
push
jecxz
mov
cmp
inc
mov
in
mov
movsb
cmp
jae
push
push
imul
add
pop
cmp
stos
scas
jo
int
dec
jle
loop
fdivs
test
movsb
sarl
shll
mov
xor
cwtl
stos
out
jae
xchg
xchg
mov
push
sbbl
pop
and
mov
daa
inc
sbb
push
cmp
mov
mov
lods
movsl
lcall
add
mov
inc
mov
es
jno
dec
lret
mov
popf
or
sahf
cmp
int
add
inc
mov
push
in
push
sub
fsubp
vmovapd
mov
loopne
popa
xor
out
and
push
adc
lds
divb
mov
sbb
push
mov
in
push
mov
out
adc
cld
out
sahf
sbb
cli
fnsave
adc
sbb
dec
cmp
mov
popa
sahf
notl
out
popa
ret
or
xor
pop
mov
or
pushf
cmp
and
je
scas
mov
adc
or
xor
adc
dec
loopne
push
dec
leave
add
mov
popa
ret
xchg
mov
into
pushf
cmp
mov
cmp
scas
int
or
mov
gs
sbb
push
rorb
jge
xchg
xchg
jg
arpl
fstps
adc
push
or
or
call
jns
jecxz
mov
call
int
pop
cmpsl
aad
rcrl
and
inc
jge
repz
jge
lods
pop
fistpll
inc
mov
fisttps
into
in
and
xlat
xlat
jno
rclb
sbb
inc
out
out
push
sbb
in
pop
dec
mov
xor
in
leave
stc
lahf
jge
mov
lods
push
pop
loope
clc
xchg
test
push
jp
rcrl
sbb
and
ja
and
or
mov
cmp
imulb
ds
cli
mov
jno
pop
xchg
ret
jge
adc
and
cmp
int3
into
inc
push
repnz
mov
cmpsl
jne
pop
xchg
or
and
jmp
mov
scas
out
pop
xchg
out
subl
es
pop
dec
in
xchg
jg
adc
xorb
or
fdivrl
or
dec
leave
inc
fstl
sub
jg
xchg
inc
ss
xchg
call
jne
addr16
gs
cmp
lret
cmp
std
inc
adc
jmp
shlb
imul
sti
sbb
jo
xor
xchg
mov
or
cmp
stos
ss
fst
xchg
pop
movsb
mov
xchg
pop
aaa
lret
or
repz
jl
addr16
idivb
andl
mov
pop
push
nop
adc
inc
and
fwait
or
inc
sub
in
out
mov
xchg
xchg
nop
fidivrl
xchg
fsubrs
push
enter
data16
jge
adcl
xchg
jo
push
or
inc
xlat
mov
data16
jmp
add
lock
ljmp
fwait
loope
sbb
movsb
leave
or
xor
jns
clc
inc
test
mov
cmc
sbb
negl
pop
mov
push
lahf
jns
mov
popf
inc
cmpl
popf
cmp
sbb
pop
adc
mov
cld
jmp
jmp
repnz
sub
sub
mov
int
dec
jnp
sar
cmpsl
insb
add
js
cmc
ja
adc
cs
jo
iret
sahf
xchg
outsb
popf
insb
iret
lcall
mov
shr
mov
aas
mov
and
inc
add
lret
push
inc
sbb
popf
adc
mov
dec
out
orb
fildl
adc
xor
lods
in
sub
or
xchg
ja
fwait
shrb
or
cmp
fiaddl
fwait
xchg
xlat
hlt
push
or
icebp
dec
mov
cmp
dec
lahf
xor
xchg
and
mov
shr
cwtl
daa
jne
icebp
hlt
mov
sbb
mov
les
lock
pop
push
rorl
or
repnz
xor
or
insl
jns
add
in
out
jnp
xlat
les
add
dec
cmp
lds
push
xchg
mov
cmp
repz
les
std
lods
pop
outsl
pop
mov
out
sbb
add
mov
add
pushf
mov
cmp
sbb
mov
call
ficoml
jp
mov
or
dec
ja
pushf
jnp
dec
xchg
enter
js
gs
adc
mov
roll
icebp
ja
daa
mov
pop
int3
imul
mov
mov
xor
mov
sub
loope
push
pop
push
gs
ficoml
mov
rcr
inc
fcomps
scas
dec
shll
fnsave
out
mov
xchg
js
shlb
int
aaa
pop
xchg
or
shr
push
sub
sbb
pop
adc
mov
dec
insb
aad
mov
adc
sub
notb
loop
and
sbb
std
and
fdivl
stos
loopne
mov
insl
inc
jo
jmp
xchg
jp
dec
stos
sbb
dec
xchg
pop
rol
inc
sub
jno
or
pop
sbb
mov
push
pop
mov
outsl
lcall
jg
pop
inc
and
fsubr
es
in
xchg
mov
ret
stos
xor
gs
jns
inc
sbb
into
sbb
out
rclb
xchg
mov
push
lcall
mov
rolb
xchg
jne
pop
inc
fsts
scas
faddl
test
pop
adc
test
call
pop
les
roll
add
in
xor
sbb
pop
adc
notl
adc
add
out
imul
in
iret
pusha
add
pop
sti
test
add
mov
push
push
and
sahf
pop
mov
stos
jmp
add
adc
jge
bound
or
cmp
adc
insb
pushf
aam
cli
push
std
push
pop
out
icebp
add
adc
cli
jmp
xor
cwtl
xchg
pop
or
mov
test
pop
pusha
mov
test
add
pop
xor
pop
test
mov
testb
stos
cmp
pop
sahf
lret
xor
mov
jae
aas
inc
sbb
or
les
mov
movsl
add
mov
or
adc
test
out
stos
cmp
add
testl
repz
mov
jle
lcall
imul
push
fdivrl
and
pushf
cld
fisubl
mov
xlat
scas
lret
sub
addr16
fdivrs
push
pushf
cmp
stc
testl
bound
lods
cs
jg
add
dec
or
xor
or
bound
jnp
icebp
loop
or
mov
decb
xchg
ja
xor
push
mov
or
jo
sub
sbb
and
mov
popa
lcall
add
or
mov
arpl
push
jbe
icebp
loop
mov
mov
sbb
gs
fldenv
mov
mov
jae
inc
aas
or
frstor
xchg
adc
mov
out
sub
clc
insb
bound
ljmp
fdivs
mov
bound
xchg
movsl
adc
add
lahf
fistl
in
cmp
xor
push
adc
pop
mov
add
jns
xchg
adc
int
cltd
div
ret
and
pop
mov
adc
scas
cmp
cli
pop
clc
push
arpl
ret
flds
adc
dec
jno
adc
movsl
or
cmp
out
mov
pop
stos
lret
sbb
cmp
pop
out
icebp
lret
xchg
cs
sbb
arpl
hlt
sbb
xchg
loop
or
cs
lds
mov
rorl
xor
rorl
push
push
or
arpl
xchg
sbb
je
lcall
ret
xchg
pop
shll
sbb
adc
icebp
jo
mov
dec
call
inc
jo
leave
sub
bound
lods
popa
mov
sbb
repz
mov
fld
mov
xor
inc
pushf
icebp
mov
andl
insl
movsb
pop
mov
push
outsl
lret
fwait
mov
lea
mov
repnz
insb
and
mov
sbb
das
sar
test
adc
cmp
mov
ss
lahf
dec
mov
or
inc
bound
bnd
cld
sbb
ret
add
es
adc
cli
ret
rcl
sub
cli
jp
aas
xchg
adc
jbe
adc
jge
int
xor
lock
cmp
stos
pop
dec
fidivs
ret
fistps
cld
in
mov
fisubs
cli
repz
in
inc
xchg
call
imul
insb
pushl
mov
and
cmp
data16
sbb
mov
scas
es
arpl
cmp
xchg
and
lcall
ds
test
sbb
pop
adc
xchg
push
mov
ljmp
aam
jnp
mov
push
sbb
pop
inc
fstpl
xchg
lret
dec
mov
adc
in
mov
push
inc
mov
pop
cs
dec
out
push
pop
cmp
nop
push
popl
orb
ds
adc
pop
icebp
stos
add
lcall
test
jl
xchg
pop
inc
adc
addb
mov
push
sub
adc
insl
jae
adcl
sub
inc
inc
dec
jmp
in
and
stc
pop
stc
or
push
shrb
stos
ss
pop
mov
xchg
in
lods
pop
push
pop
aad
mov
cmp
xlat
cltd
rcrl
out
sahf
clc
outsl
bound
lock
mov
mov
rclb
arpl
iret
sbb
pop
adc
lret
stos
inc
addr16
dec
cmp
lock
sbb
pop
adc
mov
inc
push
loop
cmp
out
js
jg
or
outsl
outsb
lret
add
push
xchg
movsb
push
inc
pop
cld
lret
dec
jno
pop
hlt
pop
push
xchg
pop
dec
fmuls
adc
insl
lods
xor
push
adc
aas
dec
mov
push
sbb
cmpsb
mov
or
sub
fstl
pushl
insb
scas
adc
int3
sahf
cmp
adc
cld
lea
testl
xlat
out
mov
or
xor
mov
pop
push
pop
dec
xor
sbb
dec
lret
pop
fistl
sub
js
mov
sbb
enter
nop
icebp
mov
ret
add
sbb
ret
pop
imul
sbb
out
lret
lock
lret
mov
jmp
lret
jmp
pop
out
add
mov
sbb
and
mov
adc
add
sbb
je
pop
in
pavgb
sub
lcall
sti
cmpsl
sarl
arpl
lock
outsb
fnstenv
mov
jbe
into
pop
pop
jo
pop
orb
mov
lret
ret
cmp
adc
sbb
dec
subb
mov
sub
dec
push
inc
mov
es
outsl
addr16
gs
fsubrs
mov
pushf
mov
adcl
enter
or
inc
jle
rcrb
jge
xchg
movsl
sbb
cwtl
in
pop
cmp
or
std
scas
mov
xor
mov
lret
xchg
lods
movsb
mov
jmp
loope
xchg
add
pop
push
stc
sub
das
iret
outsb
fcmovu
iret
lcall
div
les
add
dec
or
cmp
sub
repz
xchg
mov
popa
lcall
xchg
cs
addr16
inc
cmp
loope
jg
push
dec
fisttpl
iret
in
lock
ss
cmp
and
xlat
out
xchg
jne
mov
add
xchg
pop
das
add
xchg
das
mov
jbe
iret
push
rcrl
nopl
clc
cmpsl
fisttps
dec
out
out
mov
push
dec
ss
and
mov
pop
add
push
pop
loop
cli
sbb
nop
jnp
inc
ficomps
adc
aas
stc
mov
outsb
std
mov
in
movb
ds
popa
pop
fdiv
jb
xchg
jge
movsb
call
pop
cwtl
out
adc
rcr
lret
imul
movsb
jnp
inc
pop
popf
nop
out
adc
inc
hlt
call
inc
push
mov
mov
xchg
aas
push
rcrb
push
xchg
mov
nop
sbb
mov
int
lea
push
xor
clc
inc
push
jno
dec
pop
pop
pusha
sbb
adc
lds
insb
bt
aaa
insl
imul
jbe
pop
dec
or
pop
adcb
jecxz
push
lret
popf
pop
dec
in
clc
inc
cwtl
fmuls
mov
roll
jmp
add
add
mov
jnp
leave
and
push
xlat
gs
mov
inc
ja
push
inc
addr16
repz
std
fwait
scas
jle
shrb
ror
andl
inc
pop
jo
into
mov
xchg
xor
insl
lret
push
mov
xchg
sbb
adc
jbe
xor
js
mov
add
jns
lods
xor
and
in
stc
out
inc
ljmp
lods
xchg
int3
test
adc
xchg
cmp
lret
dec
lods
lods
sub
out
mulb
adc
out
lods
xor
lcall
ss
into
mov
in
or
imul
pop
jg
sbb
cmp
jno
jl
ds
cmp
push
jl
inc
scas
sbb
mov
xchg
jl
pop
adc
mov
test
pop
cmpsl
or
fisubrl
jg
cs
cmp
lods
int
cmp
jmp
icebp
pop
cwtl
mov
sbb
and
daa
push
xchg
inc
mov
add
pop
shlb
arpl
xchg
sbb
push
pop
and
arpl
dec
or
cmpsb
int
sbb
bound
or
pop
popa
xchg
cs
mov
enter
inc
ljmp
and
add
cmpsl
ss
insb
mov
test
lahf
jmp
arpl
push
jge
adc
in
dec
addr16
pusha
testb
sbb
lds
nopl
mov
leave
mov
popa
inc
jle
push
mov
lret
xchg
cs
jg
gs
lds
lds
je
cs
add
mov
sub
out
cmp
sbb
loopne
ss
pushf
cmp
push
dec
test
pop
iret
shrl
xor
xchg
sub
andl
sub
js
sarl
add
jae
mov
icebp
cmp
lods
sbb
in
adc
lods
jnp
inc
fcmovb
mov
inc
lods
pop
or
pop
adc
xchg
mov
mov
xor
clc
add
sbb
je
cmp
adc
mov
sub
mov
jg
insb
mov
out
mov
push
pop
ja
aaa
mov
fmul
lcall
out
pop
jle
fcomps
xor
cmp
mov
sbb
mov
pop
mov
or
cmc
clc
mov
cs
xchg
pop
pop
xor
jecxz
lahf
mov
test
add
xor
add
inc
fldenv
mov
mov
xor
clc
jg
js
push
sbb
cli
pop
lcall
and
insb
push
fwait
repz
lcall
inc
fidivl
jl
xchg
lahf
ret
dec
pushf
test
xor
mov
aas
loope
xchg
sub
xor
cmc
cmc
and
out
lds
hlt
cmp
sub
imull
sahf
cmovbe
mov
cltd
inc
mov
cltd
dec
adc
adcl
push
push
cmp
adc
test
ss
jmp
jo
adc
sti
cmp
pop
test
adc
xor
sbb
es
or
pop
hlt
in
call
fildll
sahf
add
leave
push
pop
ret
cs
pop
hlt
shrl
sub
adc
sub
and
lds
test
xorb
gs
repnz
jne
fwait
mov
int3
mov
push
adc
jl
adc
bound
lock
scas
sti
sbb
cmc
sbb
add
adc
jp
enter
icebp
sbb
ss
dec
jmp
inc
flds
in
cmp
lahf
fistl
xchg
xor
inc
insb
ds
cwtl
mov
out
adcl
dec
pop
jbe
cwtl
outsl
inc
sbb
inc
adc
iret
sbb
jle
lods
dec
sbb
jnp
and
pop
sub
mov
dec
add
xchg
mov
mov
inc
push
adc
jmp
push
fimuls
pop
adc
daa
pop
adc
xchg
sbb
lods
push
arpl
adc
adc
jae
sahf
push
rolb
lock
cmpsl
sub
imul
aam
aas
sub
mov
mov
sbb
add
nop
jl
cwtl
lods
mov
adc
push
dec
lods
bound
lret
adc
andb
enter
lds
mov
mov
movsl
mov
insl
mov
adc
xchg
push
and
in
push
mov
mov
lock
ljmp
jb
scas
jp
pusha
pop
out
cmpsl
cltd
sarb
pop
cmc
pop
jae
daa
mov
in
inc
out
adc
sti
stos
xor
inc
mov
sbb
dec
ret
jmp
pushf
les
lret
inc
out
adc
inc
rol
in
push
adc
fcmovnbe
clc
dec
rol
mov
or
jg
mov
push
xchg
dec
ret
or
rcll
sbbl
inc
les
cmpsl
or
mov
clc
mov
push
mov
loopne
out
out
sub
test
data16
out
xchg
sbb
pop
jge
push
shl
push
shlb
and
in
repz
push
sbb
or
pop
jg
mov
stc
lods
loope
push
addr16
mov
dec
gs
xchg
sbb
mov
nop
mov
pop
cs
scas
xchg
clc
inc
insb
add
cs
mov
arpl
aam
int3
cmpsl
inc
push
adc
pusha
ret
pop
loopne
xor
les
dec
clc
mov
bound
js
in
or
dec
xchg
push
lea
add
pop
push
out
jo
sti
and
mov
loopne
clc
jae
mov
out
in
xchg
imul
daa
mov
dec
pop
add
insb
mov
leave
pop
jne
shll
sahf
dec
lret
add
ja
fwait
sbb
jmp
rcrb
aaa
cmp
adcl
xor
pop
mov
cmp
test
add
dec
fdivl
lea
imul
xchg
xchg
outsb
add
add
push
outsl
insb
or
ret
cmp
jns
jb
mov
out
in
xchg
push
xor
lea
dec
pop
add
enter
jmp
xchg
int
dec
leave
push
xchg
jne
cltd
sbb
jmp
mov
ss
push
xchg
sahf
mov
pop
mov
cmp
inc
lret
inc
cmpsl
ss
mov
cwtl
cmp
sub
testb
iret
mov
xor
insl
ret
mov
lock
das
jb
adc
jge
das
ds
popa
xchg
pop
test
rcll
sbb
push
pop
repz
data16
hlt
outsb
bound
ret
stos
stos
movsb
jns
adc
out
sub
jecxz,pt
jbe
cmp
das
xchg
testl
inc
sbb
lcall
mov
or
pop
fnsave
sahf
adc
dec
mov
dec
out
xlat
les
scas
ret
push
add
mov
cltd
mov
lock
daa
inc
loope
adc
stos
push
mov
adc
cmc
mov
pop
repnz
pop
cs
in
into
and
sahf
std
adc
jge
lcall
adc
jbe
pop
test
dec
out
mov
pop
je
and
and
cld
sub
lods
lds
sar
dec
mov
or
xchg
rorl
push
sbb
stc
mov
cmp
and
out
xchg
or
jbe
repnz
dec
mov
push
pop
xor
scas
pop
adc
clc
add
sahf
push
sub
xor
loop
push
jecxz
or
outsl
rolb
sbb
shll
sub
outsl
loope
mov
cmp
push
or
push
or
cmc
cmp
inc
pop
testb
add
arpl
pop
outsl
xchg
dec
mov
or
cmpsb
pop
push
in
js
adc
sub
adc
jp
fdiv
mov
or
arpl
adc
mov
in
sbb
add
mov
loopne
sbb
lret
push
xchg
std
adc
test
mov
mov
mov
xor
jp
xchg
mov
aad
jns
cld
mov
arpl
inc
mov
mov
data16
xlat
sbb
aad
subl
push
icebp
sahf
push
pusha
dec
mov
in
gs
xchg
jbe
mov
inc
sbb
cmp
xchg
pushf
or
mov
dec
lret
mov
xchg
cs
push
subb
cmp
dec
mov
or
add
fdivrs
adc
xchg
jg
and
mov
arpl
out
testl
ret
repz
cs
int
and
jecxz
js
and
pop
dec
fildl
out
loop
lcall
movsl
xchg
jle
sbb
pushf
cmp
test
icebp
loop
icebp
in
cs
mov
sub
xchg
out
out
stos
jle
xor
sbb
arpl
xor
sbb
pop
int
adc
out
call
cld
lock
ljmp
lds
jae
mov
icebp
add
dec
sub
stos
adc
xchg
clc
jo
subb
test
ljmpw
mov
lret
xchg
xlat
jb
or
cmc
and
ret
pop
scas
inc
sbb
popa
xchg
or
ss
syscall
and
lock
dec
jo
mov
fsubs
jns
dec
int
ret
mov
dec
pop
and
sub
and
int
add
xchg
push
xlat
ja
pop
es
lea
clc
jg
sub
incl
bound
sbb
pushf
mov
and
mov
dec
rolb
pusha
jge
xor
data16
sahf
ds
lret
mov
mov
fxch
lds
xchg
insl
pop
in
mov
xchg
xor
xchg
std
mov
sub
cmpsl
in
cld
sub
sbb
jle
mov
call
dec
cmp
clc
inc
mov
mov
mov
add
cmp
mov
xchg
xchg
repnz
ret
lret
imul
js
insl
js
mov
and
bound
les
sub
mov
loop
scas
adc
mov
and
xlat
xchg
imul
mov
scas
cs
sbb
std
mov
dec
dec
call
insb
lcall
jae
clc
pusha
dec
sbb
mov
and
ja
stc
cmp
bound
pop
cltd
mov
sub
jae
fiaddl
dec
sub
mov
fs
fldl
incb
test
mov
insb
fldcw
dec
out
push
xchg
fcoml
pop
sub
mov
pop
fisttpll
push
js
ds
or
out
cmp
iret
sub
push
cs
mov
mov
ss
jl
iret
fs
cmp
orb
adc
lea
pusha
jge
and
lret
sbb
mov
xlat
add
cmp
aam
mov
popa
cmc
cld
scas
mov
lea
loop
fcoml
lock
and
sub
aaa
adc
imull
dec
and
fbld
jne
fcmovnbe
aas
es
scas
adc
xchg
repnz
or
or
in
xchg
cmp
cld
pop
fwait
dec
dec
flds
inc
addr16
outsb
mov
lahf
test
je
add
icebp
pop
aas
mov
or
sbb
cli
mov
xchg
repnz
and
dec
sub
dec
and
aaa
cmp
mov
mov
sub
fisubrl
mov
pushf
cmp
aam
in
push
adc
out
pop
jbe
mov
js
adc
sub
inc
fidivs
ret
fmulp
lcall
mov
int3
mov
push
les
pop
pop
cmp
cmp
rorb
ret
jg
fwait
inc
mov
mov
or
mov
cmpsl
ret
dec
insb
and
dec
fimull
jl
shll
sbb
jo
pop
xchg
test
pop
pop
int
sahf
loopne
aas
iret
adc
pop
mov
movl
cs
xor
out
xchg
xchg
cs
xor
xor
inc
int
popa
pushf
mov
mov
inc
sbb
in
push
adc
mov
je
mov
cmp
dec
adc
addr16
add
xor
pushf
inc
pop
call
ss
movl
loop
jne
fldcw
xor
dec
leave
bound
rcl
mov
push
js
repz
jg
arpl
ljmp
xchg
inc
js
repz
cmp
out
xor
pop
xor
and
call
ficoms
pop
dec
rol
pop
cs
lret
leave
enter
rcrl
mov
cwtl
xchg
sbb
movsb
popf
mov
xor
push
jge
and
xor
or
dec
xchg
cs
sub
or
cmp
lret
inc
push
adc
xchg
or
shll
stos
fdivrl
pop
dec
gs
scas
shrl
test
mov
movsb
das
push
jnp
rcrb
call
outsl
jnp
int3
fwait
inc
jmp
fadds
rcrb
jo
ret
hlt
sub
push
sub
add
pop
ss
or
int3
jge
int3
inc
mov
loopne
mov
ljmp
faddl
test
mov
sub
pop
gs
jae
jecxz
cmp
lcall
mov
roll
mov
push
test
xor
test
jmp
andl
shl
or
adc
ret
int
jne
xchg
jnp,pt
mov
test
and
iret
mov
in
mov
push
jne
inc
sahf
xchg
aam
insb
ret
inc
jo
xor
ljmp
shlb
rorl
fwait
pop
cs
xchg
popa
mov
out
pop
cs
mov
lods
cwtl
lds
dec
cmp
or
shrb
dec
xchg
mov
pop
leave
imul
pop
mov
test
leave
imul
aad
in
sub
ret
popf
jnp
xchg
pushf
push
cmp
pop
test
iret
sub
sbb
mov
jge
daa
insb
lods
mov
pop
cmc
mov
fwait
push
xor
xchg
fldt
push
sbb
xchg
dec
cs
repnz
pop
ss
xchg
push
or
cli
in
add
lret
push
jb
cmpsl
push
adc
push
mov
adc
imul
pop
pushf
lret
or
shr
es
mov
shr
in
test
in
cmp
shr
xchg
mov
mov
jmp
fnsave
ret
mov
adcl
xchg
push
mov
icebp
inc
push
add
in
js
add
stos
adcb
bound
loopne
inc
push
adc
xchg
in
lock
lcall
mov
inc
stos
inc
in
jno
int
xor
ss
scas
mov
das
stos
push
loop
dec
outsb
sbb
and
mov
data16
or
sbb
test
inc
pusha
and
mov
arpl
jae
clc
pop
add
sub
xchg
or
cli
pop
add
sub
cwtl
in
inc
mov
or
icebp
loop
mov
or
dec
pop
fmul
scas
jns
xchg
ljmp
fwait
les
rcrl
dec
jl
xchg
or
add
jp
icebp
jne
xor
lods
cwtl
lods
stos
jle
outsl
and
push
dec
mov
cmp
cs
iret
leave
mov
daa
lret
shl
insb
sahf
xor
cwtl
sbb
pop
cld
pusha
push
outsl
push
jo
mov
sub
add
shl
outsl
cmp
inc
mov
loopne
add
or
pop
jp
shlb
dec
fadds
nop
dec
insl
inc
shrl
mov
jae
into
arpl
push
mov
icebp
push
pop
mov
pop
pop
or
jle
pop
mov
mov
lret
and
or
xchg
adc
cmc
pusha
xor
in
int
cwtl
jnp
js
xchg
jl
ret
xchg
stos
lds
mov
and
movsl
xchg
jg
sbb
mov
daa
push
mov
out
ljmp
outsb
cmp
cmpsb
jp
xchg
ja
fwait
mov
out
es
inc
add
insb
ljmp
jae
pop
xchg
or
lcall
es
stc
push
inc
inc
add
push
call
sbb
call
xchg
arpl
jle
mov
xor
sub
cmpsl
lret
or
adc
bound
xchg
test
dec
lea
pop
shll
rorl
icebp
xchg
ja
mov
inc
lea
xor
imul
dec
gs
push
jno
ljmp
outsb
jle
cmp
aas
icebp
in
enter
rcrb
push
xchg
ss
aad
cld
test
pop
jg
push
and
mov
mov
xchg
cli
out
mul
mov
shll
addr16
cmp
outsb
or
jb
push
pushf
out
or
add
arpl
test
mov
mov
xor
dec
jb
jbe
data16
xchg
nop
xor
orl
add
in
outsl
mov
pop
and
lcall
lahf
test
sub
ljmp
aam
pop
fmuls
mov
jp
sarl
mov
aam
and
mov
mov
incb
out
out
and
or
popf
sbb
mov
push
loopne
je
insb
daa
imulb
mov
mov
push
imul
push
repnz
jae
sbb
inc
xchg
mov
xlat
fdivrs
addr16
into
lcall
rcl
xor
jne
out
inc
or
pop
cmp
and
cltd
movsl
xchg
out
inc
adc
inc
loopne
jo
mov
fidivrl
test
cwtl
and
aas
addr16
int3
cmp
push
ret
jmp
dec
push
repz
int3
outsb
jo
xchg
cmp
inc
jle
lock
adc
or
adcl
jae
and
imul
pop
pop
test
cmp
add
push
cmp
ljmp
clc
jg
stos
dec
test
push
out
enter
xchg
ja
shlb
les
adc
sub
clc
pop
dec
mov
in
js
in
rcll
sub
sbb
inc
icebp
add
ret
stos
adc
mov
adc
mov
mov
cwtl
cmp
in
dec
cmc
adc
add
adc
ja
addl
xor
lcall
push
inc
stc
xchg
outsl
andb
imul
test
imul
pop
iret
pushf
cmp
das
sub
lods
xchg
out
cmpsl
rorb
scas
dec
dec
jg
fcmovu
inc
push
sbb
lahf
decl
int3
add
sbb
jb
xor
lods
les
stc
push
iret
movsb
cmc
mov
jo
inc
push
rorb
fiaddl
lods
fisubrl
mov
sahf
cmp
aam
in
push
adc
out
pop
jbe
mov
js
adc
sub
and
jne
ret
test
lcall
mov
int3
mov
push
testl
cmp
mov
jg
in
inc
mov
mov
or
out
icebp
loop
mov
cmpsl
ret
dec
insb
and
dec
fisubrl
ja
or
cmp
pop
xchg
test
pop
pop
in
mov
aas
iret
adc
pop
mov
movl
cs
xor
cmpsb
sbb
xchg
xchg
cs
xor
xor
inc
int
popa
pushf
mov
mov
inc
sbb
in
push
adc
mov
je
rcrb
or
adc
addr16
add
xor
pushf
inc
pop
call
ss
movl
loop
jne
fldcw
xor
dec
test
shrl
mov
adc
popa
repz
jg
arpl
ljmp
xchg
gs
repz
cmp
out
xor
pop
xor
aaa
and
mov
adc
jns
mov
pop
dec
roll
sub
leave
lret
stos
bound
rcrl
scas
mov
xchg
cld
test
jbe
mov
ds
inc
jmp
jmp
aad
inc
mov
jae
ss
enter
ja
inc
les
js
fwait
cmpsl
sbb
sbbl
stos
and
popa
jno
jb
aas
ret
push
xor
hlt
lahf
lret
out
cs
sub
popa
adc
adc
loope
xorl
mov
ljmp
lock
lock
loop
inc
sbbl
sarl
dec
ja,pn
ja
lahf
pop
std
xchg
sbb
int
sub
jge
add
int
mov
stos
out
jae
ret
add
imul
repz
scas
out
xchg
shll
cmpsl
cmp
cmpsb
mov
fidivs
xor
call
jecxz
sub
out
fildl
cmp
rcrb
mov
inc
cmp
out
in
push
in
mov
dec
cltd
pop
je
mov
daa
jl
sub
dec
xor
icebp
jns
sub
mov
pop
pop
jp
nop
mov
in
testl
cmc
std
stos
cmp
enter
xor
rclb
dec
add
mov
pop
sbb
adc
repnz
repnz
dec
scas
mov
ljmp
push
dec
mov
in
mov
pusha
adc
mov
mov
out
test
ja
cmp
ds
call
cmp
ficompl
push
sti
pop
dec
xchg
es
or
hlt
jae
mov
and
pop
movsb
fnstcw
das
or
int
mov
adc
jno
faddp
mov
int3
mov
push
scas
cmpl
xchg
pop
jnp
ljmp
xchg
std
cld
ljmp
jecxz
stos
inc
inc
dec
mov
dec
fimull
rcr
jge
into
idivb
cwtl
inc
mov
dec
mov
arpl
int
fistpl
push
popf
lret
pop
cmp
sbbl
jmp
hlt
adc
pushf
cmp
enter
jnp
and
inc
mov
pop
stc
in
ret
xchg
sbb
dec
lea
outsl
aas
cwtl
dec
into
adc
sub
inc
pop
ret
ficoms
leave
stc
out
ret
sub
in
fs
sahf
cmp
lret
imul
and
sti
adc
test
fs
stos
iret
lret
add
jns
xchg
hlt
cmp
fwait
xlat
std
push
jecxz
pop
leave
sti
jmp
xor
gs
cmpsl
scas
sbb
iret
sahf
dec
inc
push
gs
inc
push
adc
repz
mov
sbb
xor
jecxz
sbb
mov
push
cmovnp
xor
loop
insb
arpl
pop
xor
repz
inc
insl
and
out
inc
clc
stos
cmp
mov
mov
cmp
push
cwtl
sbb
adc
outsb
sahf
pusha
xor
std
cs
cmp
sarb
shlb
ljmp
add
push
or
lods
pop
push
xchg
or
cmc
popa
rcll
cs
xchg
add
cs
or
iret
adc
mov
lret
dec
cmp
fldcw
std
scas
fldcw
or
idivl
popf
loop
adc
gs
xchg
jne
jnp
out
rcl
cwtl
or
js
ja
push
call
sbb
ljmp
inc
lahf
lods
pushf
mov
jbe
or
icebp
loop
mov
adc
mov
movsl
ret
mov
mov
jno
cli
xchg
lret
xchg
jbe
mov
in
rcll
mov
xor
xchg
ret
stc
daa
push
xor
lahf
fst
push
or
jno
iret
sbb
mov
mov
adcb
xor
mov
inc
lret
mov
ret
sbb
loope
jg
jns
inc
rcrl
pushl
adc
pop
dec
sbb
cmp
stos
popa
cmc
push
fnstsw
pop
mov
lcall
inc
push
sahf
mov
popa
clc
les
jmp
dec
stos
mov
das
outsb
enter
lret
mov
dec
addl
stos
cltd
imul
cli
jle
arpl
fdivrl
out
pop
int
mov
pop
cwtl
fidivs
or
ret
push
pop
inc
and
out
adc
dec
inc
out
je
je
aad
xchg
push
sbb
sbb
mov
arpl
fs
lret
out
xchg
scas
pop
nop
dec
push
push
stc
sbb
lds
adc
mov
pop
add
ds
popf
fnstsw
xor
bound
enter
dec
pop
sub
add
cld
xchg
fldt
in
inc
gs
and
ljmp
andl
mov
lea
loope
in
subl
sbb
xchg
std
pop
nop
sti
jl
pop
sbb
popa
icebp
adc
pushf
int
testb
mov
inc
lods
sub
in
adc
outsl
loope
mov
ret
push
jg
jnp
out
jge
imul
sbbl
test
jne
mov
dec
gs
repz
mov
loop
xchg
inc
mov
xchg
in
rcrl
jle
jmp
xor
ljmp
push
fcoml
pop
mov
movsb
lret
std
stc
jmp
inc
and
popf
sbb
ret
in
inc
xchg
sbbw
push
test
roll
loop
pop
rol
loope
stos
test
stos
fistl
add
xor
adc
jg
fwait
iret
shll
mov
pushf
push
mov
inc
imul
and
insb
add
push
cmp
into
imul
jp
xchg
decb
mov
mov
jge
mov
or
sub
and
mov
push
inc
insl
cmp
ret
cmp
sti
movsb
fcmovnbe
orl
notl
shl
adc
xchg
sbb
dec
xor
push
push
inc
jl
nop
xchg
xor
and
arpl
les
push
mov
addr16
rolb
mov
test
push
adc
dec
add
repz
ja
xor
and
std
lahf
xor
dec
bound
xchg
test
adc
in
lahf
out
leave
call
stos
dec
or
xlat
inc
sbb
repnz
inc
jl
xchg
loop
js
xchg
dec
mov
mov
repz
push
dec
push
xlat
jg
mov
mov
ret
lds
adc
cmovns
and
cld
xchg
push
cmp
icebp
push
pop
xor
iret
adc
outsb
sub
shlb
ja
insb
orl
sbb
repnz
jne
dec
roll
dec
imul
mov
mov
sub
fs
lock
daa
orl
insb
cmp
loopne
push
jge
cmp
adcb
push
dec
push
pop
faddl
test
jecxz
out
imul
scas
lret
js
mov
mov
dec
flds
testl
sbb
bound
cltd
xchg
lock
xor
mov
repz
xor
cmc
inc
xchg
mov
out
imul
pop
ret
imul
mov
push
xor
out
inc
shrl
shrl
push
push
mov
aad
in
push
in
fdivrs
cmp
cmp
xor
xor
inc
jno
mov
add
adc
mov
pop
ficoml
jg
orb
lea
cmpsb
mov
add
movsl
jb
ja
popa
ljmp
rorb
cmp
sbb
roll
scas
mov
sub
and
rcll
mov
jne
push
popf
fs
repnz
loopne
cli
xor
iret
enter
outsb
xchg
mov
inc
fs
mov
sbb
inc
mov
jge
sbb
insb
xchg
pop
lcall
sahf
scas
inc
mov
idivl
xchg
ret
xor
loope
gs
inc
movsl
mov
jae
cmp
xor
xor
jl
test
addb
movsb
mov
pop
jmp
xchg
sub
lret
push
push
inc
sbb
mov
mov
add
test
gs
inc
push
shrl
cs
popa
add
sbb
add
push
mov
fiadds
jb
mov
int
dec
pusha
hlt
fisttpll
or
addr16
lea
mov
adc
and
push
test
sbb
xchg
aad
movsb
mov
mov
xor
sub
in
mov
mull
sbb
mulb
mov
popa
cmp
stos
xchg
jno
sti
mov
hlt
stos
insb
xor
pushf
es
mov
cld
pop
jo
xor
mov
arpl
jae
test
inc
dec
xor
aas
in
ljmp
popl
stos
push
jno
out
push
adc
mov
adc
sub
cmp
movsl
jecxz
inc
rcr
dec
push
insb
xchg
mov
add
dec
ret
or
test
pop
or
lcall
jp
insb
and
aam
push
xchg
test
daa
lds
ss
add
sbb
gs
lret
mov
jge
fimull
clc
add
scas
dec
add
xor
or
cwtl
mov
cmc
pop
inc
inc
push
push
and
and
mov
sbb
dec
ret
hlt
dec
int
fistpl
imul
add
cmp
ss
arpl
mov
xorb
lcall
movsb
mov
jnp
pop
inc
fs
ffree
cli
add
dec
add
sahf
mov
pop
icebp
adcl
cmp
xor
inc
int
popa
xchg
pop
int
or
and
aad
insb
into
in
mov
jmp
fxch
es
pop
enter
pop
movsb
pop
mov
aaa
shl
insb
cmp
xor
jmp
fld
sti
lods
xlat
or
jmp
imul
sub
cwtl
rorl
add
push
mov
cld
xor
xchg
lret
or
adc
aam
cs
ret
mov
ret
xchg
inc
imul
sbb
lds
push
ret
xchg
xchg
jns
arpl
sub
mov
aas
sarb
push
xor
mov
dec
iret
push
xchg
jb
arpl
mov
call
ljmp
mov
push
xchg
popa
fs
movsb
mov
leave
add
adc
jns
sbb
sub
inc
mov
pop
jnp
push
push
inc
sbb
je
nop
push
js
repnz
lcall
adc
jge
mov
lods
or
lods
push
pushf
inc
inc
cs
jge
and
nop
fcoml
addl
imul
jne
out
and
out
or
mov
hlt
mov
pop
test
or
or
repnz
shlb
mov
mov
xchg
add
push
xorb
xor
and
fmull
push
fstl
or
inc
xchg
stos
mov
sbb
fldenv
mov
mov
rorb
mov
in
push
ja
mov
push
movsl
andb
adc
das
clc
ret
shll
sub
out
arpl
outsb
subl
mov
sbb
aam
popf
sbb
pop
adc
repz
mov
pop
mov
fisubl
sbb
inc
data16
or
xchg
mov
stc
enter
cmp
add
mov
movsl
adc
sbb
xor
inc
adc
fnstsw
or
jmp
dec
out
sti
les
jns
outsb
jg
push
lock
xor
xchg
sub
mov
add
xor
enter
in
sbb
inc
js
dec
mov
sub
fmuls
ret
jle
xor
inc
scas
push
fimull
xchg
subb
mov
imul
aad
dec
mov
xchg
add
mov
pop
movsl
mov
mov
ljmp
and
mov
icebp
roll
test
fisttps
arpl
pop
xlat
lods
sub
mov
xchg
or
mov
pop
andl
push
cltd
leave
scas
insb
and
pushf
es
sbb
mov
cld
mov
inc
popl
mov
sub
cmp
mov
xor
dec
xchg
dec
push
fs
ja
mov
push
lods
cmp
filds
inc
inc
push
adc
shl
push
dec
addr16
mov
ja
cmc
fsts
stc
pushf
aas
clc
pop
jbe
dec
fnsave
gs
mov
mov
int
stc
cltd
push
jbe
mov
in
rcll
xchg
jne
xchg
outsb
xchg
lcall
push
inc
mov
shrl
loop
ljmp
sbb
dec
xchg
jp
jae
cmp
sti
and
inc
js
test
mov
out
imul
mov
aaa
xchg
imulb
pop
xor
mov
xor
mov
movswl
dec
arpl
std
lods
shrl
pushf
lds
sarb
ret
xchg
imul
gs
pushf
xor
xchg
mov
jae
pop
cmp
sbb
imul
or
and
or
icebp
loop
je
xchg
mov
mov
sbb
add
rcrl
and
test
or
lds
in
scas
pop
fdiv
addr16
cmp
frstor
mov
cld
cmc
pusha
mov
push
icebp
sahf
insb
mov
pusha
incb
push
adc
andb
daa
mov
out
clc
mov
push
cmpsl
cmp
ljmp
xchg
in
xlat
and
ret
ja
inc
fxch
sti
and
dec
test
repnz
add
mov
xchg
stos
mov
mov
push
dec
negl
sahf
pop
gs
jnp
stc
cmp
sub
ja
inc
ret
jns
mov
pushf
jb
push
cmp
outsl
push
fnstsw
adc
sbb
pop
push
pop
xor
stos
mov
add
dec
ret
xlat
arpl
daa
mov
in
cmpsl
loope
pop
jo
pop
lret
or
pop
lds
push
loopne
sbb
and
sub
mul
mov
cmp
jp
lret
das
sub
xor
and
xchg
pushf
cmp
outsl
insl
jo
inc
inc
adc
inc
mov
inc
arpl
into
loop
mov
test
push
andb
leave
push
shll
cmp
add
dec
sbb
loop
pop
xchg
xchg
clc
cmp
das
test
sahf
leave
mov
aad
dec
orl
inc
fs
inc
push
adc
jb
sub
add
mov
bound
addr16
push
mov
mov
fwait
and
jp
xchg
jne
and
je
enter
xchg
sub
push
push
xchg
jae
call
mov
cmp
inc
popf
mov
xchg
fs
cs
xchg
insb
loop
dec
inc
push
and
lds
push
inc
cmpsl
add
inc
and
and
out
add
and
popl
jo
int
or
fcmovb
std
iret
lret
push
insl
jbe
adc
pop
pop
cmpsl
aad
shll
mov
sub
push
push
jbe
mov
ja
movsl
mov
neg
test
inc
ja
pop
sub
inc
xchg
pop
xchg
add
jnp
wbinvd
sub
nop
mov
mov
out
cwtl
adc
or
add
pop
lahf
pushf
outsl
nop
lods
subl
or
stc
rcrl
xor
add
add
andl
addl
dec
mov
es
imul
mov
leave
sahf
ret
sub
ds
in
ja
loopne
pop
xor
lret
iret
add
jge
dec
fmuls
sar
inc
push
adc
cmp
pop
std
adc
adc
rol
cmpsb
push
dec
rcll
mov
pop
loopne
mov
adc
loop
xchg
sbbl
or
jmp
xchg
std
nop
fldcw
adcb
shll
push
shll
pop
adc
lods
sbb
jnp
rol
xchg
cs
int
cmp
xor
test
xor
repnz
and
clc
mov
fcomps
add
pop
fisttpl
pusha
cmp
mov
add
push
aas
mov
push
or
cmp
loop
mov
cmp
mov
punpckhbw
fistpll
push
inc
shrb
pushf
cmp
adcl
mov
push
les
popf
loop
adc
gs
xchg
jne
jp
insb
and
jne
mov
ficompl
nop
outsl
rcll
xchg
xchg
in
cli
and
sub
dec
loope
int3
push
pop
cmc
out
mov
sub
pop
and
popf
and
pop
sbb
fcomps
push
pop
xor
outsb
jg
int
dec
push
ds
sbb
lahf
loope
mov
xlat
out
decl
xlat
inc
repz
push
adc
inc
scas
xchg
fists
mov
lret
mov
lds
push
xchg
dec
push
fldt
cs
xchg
and
dec
sti
lock
adc
or
adc
push
mov
add
mov
and
dec
decb
nop
dec
insl
inc
out
and
leave
arpl
or
add
push
outsb
add
call
dec
lcall
pop
int
adc
pusha
mov
mov
and
dec
inc
test
in
mov
cmpsl
and
cli
lahf
lret
stc
test
js
adc
adc
cmp
hlt
popa
mov
imul
sahf
jns
andl
repz
sbb
push
adc
mov
jecxz
test
sti
and
sub
orb
rorl
or
or
push
test
xlat
push
push
pop
mov
ljmp
jl
addr16
aam
xchg
dec
sahf
scas
adc
je
imul
ds
sub
cs
jg
loope,pn
xchg
lock
cmpsl
xor
or
push
or
cmp
cli
outsb
inc
adc
ljmp
push
and
out
pop
inc
push
adc
imul
mov
xchg
or
or
and
cmpsb
add
dec
fmull
jo
jge
in
dec
sti
xchg
aad
mov
fwait
add
into
add
scas
jb
sub
xchg
mov
cli
jo
jecxz
sbb
xchg
mov
mov
jmp
dec
lret
fmul
sub
push
adc
aas
rol
adc
out
lds
mov
in
xchg
or
cmp
and
jno
hlt
jle
sbb
xor
sub
mov
test
add
std
icebp
sub
movsb
push
jp
cmpsl
dec
inc
adc
cmc
js
dec
loop
ret
jmp
xor
mov
cld
and
pop
pop
adc
push
pusha
fisttpl
inc
ja
test
popa
stc
test
jo
arpl
pop
sub
push
jnp
ror
inc
xchg
lods
mov
jnp
lcall
test
push
adc
jg
adc
jo
adc
xchg
scas
mov
jle
cmp
mov
stc
or
and
pop
sbb
inc
pushf
jns
sub
mov
cltd
or
ljmp
jae
leave
xor
stc
and
pop
insb
lock
sar
cmp
dec
pop
scas
fdiv
xor
dec
movsb
outsb
inc
push
adc
mov
mov
sub
out
out
mov
mov
das
jmp
shlb
jl
arpl
or
test
int
nop
jl
mov
and
xor
rolb
int3
dec
jmp
cmpsl
push
ficoml
ret
icebp
testb
out
fs
sti
lods
aaa
fcoms
mov
call
fidivl
jnp
inc
push
adc
out
and
aaa
pop
pop
mov
sub
pop
loop
lcall
xlat
inc
jp
or
mov
sbb
insb
outsb
and
outsl
cmp
lds
fisttpll
sahf
clc
jbe
ud1
ret
cld
fsubs
add
sahf
lret
jmp
push
or
jns
push
cmp
jae
into
push
cli
xor
jnp
inc
push
adc
dec
mov
sbb
insl
lcall
or
testl
adc
dec
mov
out
dec
xor
pop
xchg
std
lea
jno
mov
inc
push
jge
mov
loopne
push
jp
outsl
xor
xchg
or
out
add
into
mov
mov
nop
rclb
js
push
into
sub
sbb
popa
or
mov
push
adc
outsl
sti
sbb
repnz
pop
int
adc
cmpsl
dec
dec
jg
popa
out
xchg
lahf
mov
dec
int3
pop
xchg
cmc
pushf
and
pop
mov
scas
repz
xchg
mov
sbb
repnz
dec
je
xchg
or
push
daa
cmp
scas
jae
mov
mov
lcall
outsb
ret
pushf
cmp
or
sbb
adc
inc
imul
xor
fbstp
movsb
lcall
xchg
sub
data16
les
and
inc
add
xor
xor
xchg
jne
mov
popa
sbb
xchg
cmp
orb
jmp
push
lahf
dec
scas
cltd
cmp
pop
jmp
in
fsubs
sahf
inc
push
adc
stos
pop
adc
out
cs
je
out
mov
jmp
orl
pop
jg
cli
movsb
jl
std
out
and
adc
push
inc
aad
ljmp
loopne
out
mov
bound
xor
inc
out
mov
mov
pop
ret
icebp
mov
popa
jne
cmpsl
lcall
xor
inc
push
adc
aas
andb
call
push
or
lods
xor
mov
fstps
xchg
cmp
sar
push
in
lods
or
pop
mov
pop
adc
xchg
repnz
adc
cwtl
cmc
pop
leave
imul
aad
std
ret
and
popa
dec
dec
inc
scas
dec
subl
dec
inc
xor
iret
sahf
dec
cmp
ficompl
outsb
mov
push
jge
scas
mov
into
fimull
loopne
mov
mov
scas
ffree
sarl
cmp
lea
jno
lret
push
mov
out
outsl
inc
adc
jmp
addl
cmc
repz
and
jp
aam
outsb
jbe
xor
sbb
int
insb
aam
or
mov
jne
push
xchg
fbstp
mov
xchg
adc
inc
and
and
cltd
xchg
daa
jbe
in
xchg
and
popf
inc
inc
push
imul
jge
insb
dec
pop
orb
mov
movsl
dec
dec
pusha
call
insl
sub
inc
scas
xor
and
cwtl
shrl
psubd
movsl
jmp
push
addr16
add
xchg
cwtl
repnz
pop
inc
inc
cwtl
bnd
dec
jge
push
push
mov
cmc
dec
pushf
ljmp
test
nop
lret
fstps
iret
lret
sub
xchg
hlt
cmp
fwait
cs
inc
push
adc
loopne
pop
dec
mov
loopne
push
adc
push
lock
add
xchg
mov
addb
fiaddl
and
fwait
or
xor
mov
lcall
jo
or
sbb
pop
xor
inc
jno
repz
inc
insl
and
mov
push
sti
es
mov
pushf
cmc
mov
inc
lock
fbld
pop
mov
sub
and
mov
icebp
push
pop
xor
frstor
lods
or
movsl
mov
lock
shlb
mov
clc
adc
add
pop
dec
ficoml
push
insb
or
aam
xchg
iret
xlat
out
rorl
lods
inc
or
clc
pop
xchg
inc
jno
sarl
xlat
mov
xchg
ficoms
imul
test
sbb
jns
gs
fnstcw
aad
sbb
cmp
push
cmc
out
xchg
cs
xor
pop
out
insl
xor
sub
arpl
jae
inc
inc
ss
fs
jge
sbb
gs
inc
shlb
or
paddw
sub
popf
cmp
scas
adc
fists
cmc
adc
push
outsb
and
sub
inc
fs
xchg
xor
mov
insb
and
adcl
or
sbb
mov
jl
push
ret
dec
mov
lock
imul
cmove
push
mov
test
ja
xchg
test
inc
fs
fwait
xor
dec
fnsave
pushf
dec
int3
dec
mov
mov
xchg
ja
xchg
shll
mov
pop
ss
gs
sahf
cmp
loopne
cmp
lock
adc
shl
out
fistps
popf
sub
mov
inc
and
xchg
sbbl
pop
or
cmp
fwait
out
loop
movsb
xor
popf
xor
mov
mov
dec
and
loope
jecxz
andl
ret
cmp
aad
or
popf
jecxz
sub
lret
xchg
push
ret
adc
push
xchg
push
push
daa
push
xchg
xchg
pusha
push
dec
mov
pop
pop
lcall
les
orb
jp
sub
dec
mov
repz
outsl
cmp
jo
scas
ds
mov
loop
push
xor
andb
mov
pusha
xchg
jmp
lods
and
push
int3
lea
cmp
xchg
xchg
cmp
xor
movsl
mov
push
out
and
lret
fiaddl
jg
imul
lds
imul
push
and
es
je
add
and
sbb
aam
inc
repz
movsl
outsl
lret
push
aaa
cli
outsb
adc
and
nop
mov
in
mov
push
out
push
pop
push
xchg
adc
xlat
jo
mov
pop
jle
mov
add
test
jne
cmp
icebp
push
clc
add
clc
pop
shrb
pop
pop
cli
xor
mov
icebp
insl
and
mov
stos
sub
sbb
out
push
xlat
cs
ds
flds
sbb
cmp
subl
lcall
adc
push
mov
mov
sbb
lods
sbb
adc
imul
pusha
mov
push
sbb
mov
cs
pop
jge
adc
pop
mov
js
in
cs
and
sub
out
aas
test
incl
stos
lds
add
xor
ds
hlt
push
sbb
icebp
jae
lret
mov
and
jnp
push
xchg
pop
xchg
dec
pusha
mov
pop
jge
adc
inc
rol
or
mov
sti
js
js
mov
jae
jne
xchg
or
xor
lds
sarb
dec
nop
fs
sbb
add
iret
in
lock
xchg
jl
and
mov
lret
rorb
aas
js
cmp
movsl
insl
dec
or
cmpsb
jp
dec
mov
mov
arpl
mov
or
shlb
pop
int
call
xchg
fidivrl
lock
xor
dec
je
inc
in
icebp
loop
jmp
jl
insb
ret
xchg
sti
cmpsb
jae
inc
push
adc
repz
xor
add
in
scas
dec
fcoms
xchg
lret
into
ja
cli
pop
and
sub
test
frstor
and
pusha
mov
out
sub
push
push
inc
shl
xchg
aas
js
push
hlt
repz
clc
pop
fidivrs
jge
push
jo
out
into
scas
clc
fwait
or
adc
hlt
adc
lock
out
mov
and
mov
xchg
lret
add
loop
in
shll
or
testl
loop
pop
cmp
jle
les
cs
dec
mov
xor
out
mov
jg
sub
mov
or
cmp
gs
gs
in
pop
jno
or
adc
ret
into
pop
cld
jl
add
add
cmp
les
fdivrs
or
hlt
pop
adc
lcall
into
add
imul
sub
sbb
or
pop
adc
jecxz
inc
add
mov
out
mov
lds
popa
iret
stc
and
icebp
pop
adc
aam
nop
movb
lods
movsb
mov
or
sbb
fcmovb
sahf
daa
aas
mov
adc
mulb
jge
pop
mov
mov
sbbl
and
clc
or
add
sbb
jno
push
mov
mov
out
mov
jno
add
adc
pop
rorb
xchg
insl
int
pop
mov
push
nop
cmp
fsubl
push
movsb
out
pop
adc
sbb
scas
ret
hlt
movsb
adc
fistl
addr16
inc
insb
out
adc
lar
adc
aas
clc
xor
dec
in
test
icebp
or
std
push
mov
cltd
add
flds
cmpb
dec
stos
cmp
cwtl
and
cwtl
test
mov
jmp
sarl
ficomps
fwait
xor
testl
shll
lock
adcw
jp
scas
data16
in
sub
mov
mov
mov
ds
or
jecxz
adc
or
adc
cmpsl
cmpsl
popf
or
push
in
bswap
jl
push
shr
fstl
xorb
adc
push
fstpt
sbb
adc
insb
inc
imul
rcrl
ljmp
push
jle
dec
int3
aam
inc
in
push
pop
mov
and
leave
les
xchg
and
pop
enter
pusha
cmp
mov
xor
jns
mov
sbb
cmp
test
mov
inc
inc
nop
cmp
lret
jp
fs
popa
jge
clc
and
adc
test
add
out
call
mov
scas
lret
inc
xor
inc
or
mov
inc
push
adc
aam
bound
and
sub
test
aaa
outsb
cmp
sbb
pop
mov
shlb
push
adc
mov
sbb
push
adc
inc
fnstcw
mov
or
xor
push
fwait
xor
dec
or
cs
mov
sbb
pop
jl
rcl
hlt
cmpsl
into
idivb
mov
aas
xchg
aas
dec
mov
cmp
je
inc
scas
dec
fadds
xchg
stc
lea
shll
out
adc
pop
nop
sub
pusha
ljmp
xor
shll
and
int
cli
lahf
ljmp
aas
cmpsl
lidtl
xor
int3
out
add
dec
push
adc
add
icebp
sbb
xchg
frstor
insl
cmp
add
arpl
lret
aad
jg
cltd
pop
inc
js
fstps
aam
pop
adc
scas
push
test
popa
inc
inc
add
mov
cltd
inc
add
outsl
mov
sbb
xchg
jne
rolb
bound
xor
add
sub
dec
shrb
dec
inc
imul
arpl
arpl
repnz
pop
mov
test
sub
jg
cs
mov
mov
mov
mov
out
mov
mov
aam
repnz
adc
movsl
adc
mov
loope
xchg
fbstp
je
testb
lock
xor
xchg
enter
clc
xchg
lret
push
jns
or
pop
adc
and
mov
ret
adc
movsb
mov
fwait
add
popf
cmp
cmpsl
fiadds
loope
repnz
fidivrs
sbb
addr16
mov
in
fcoms
mov
cmpsl
cltd
push
cmp
xor
sbb
adc
ss
fwait
sub
jmp
movb
pushf
jnp
jg
xchg
jae
addr16
daa
mov
fisttps
fldt
fcoms
sar
dec
fistps
cmp
xor
test
out
lods
push
fiaddl
addr16
jb
jbe
testl
xchg
imul
insb
lcall
test
adc
xchg
outsb
aam
xchg
adc
gs
fstl
int
xchg
insl
mov
mov
mov
rorb
out
mov
pop
or
repz
push
cmp
cmpsb
hlt
push
aam
adc
adc
pop
mov
mov
pop
jl
arpl
xchg
pop
cli
and
fldl
adc
mov
inc
push
adc
jno
inc
insl
mov
outsl
cltd
lock
js
out
xor
enter
pop
adc
call
inc
jns
xor
test
and
leave
add
pop
mul
xchg
inc
sbb
cld
pop
sbb
mov
jp
data16
in
pop
sub
inc
sti
lcall
inc
test
pop
pop
js
movsl
in
fmull
mov
int
adc
cwtl
mov
icebp
shl
scas
stc
pop
aam
rcll
pop
nop
popa
in
mov
mov
inc
inc
and
xchg
mov
mov
incl
iret
ljmp
test
pop
les
sbb
jl
aas
mov
push
adc
lahf
sub
call
cmpsb
loop
nop
mov
pop
sbb
cmp
push
inc
mov
inc
mov
xchg
mov
add
and
mov
inc
outsl
sub
test
dec
lods
mov
xor
add
cmp
cmp
testb
add
sbb
and
push
jb
hlt
mov
mov
in
lea
shlb
arpl
imul
int
mov
jne
pop
mov
adc
gs
xchg
movsl
adc
lock
popf
cmp
mov
cmp
cmp
inc
out
mov
adc
call
sbb
inc
add
imul
cmp
cmovp
push
stos
adc
xchg
fisubrs
pop
in
jle
sbb
sahf
cmp
or
xor
test
sbb
outsl
or
adc
sub
data16
or
repnz
insb
aas
pop
jle
mov
mov
popf
cmp
and
and
lcall
js
add
mov
mov
adcl
add
xor
outsb
inc
xorl
xchg
iret
add
or
test
adc
mov
push
mov
adcl
mov
and
iret
add
inc
test
sub
adc
push
shl
xor
js
xor
div
and
adc
insl
cmp
or
lcall
sbb
xor
dec
mov
loopne
dec
popf
popa
out
ds
fcmovne
sbb
jg
cmp
mov
adc
pop
cs
dec
pop
fcomps
sti
cmpsl
iret
xchg
jnp
push
and
adc
xchg
pushf
add
pop
mov
or
lcall
insb
and
outsb
repz
idiv
lea
mov
out
lahf
mov
xchg
fcomi
and
rolb
jno
loop
enter
xchg
add
bound
sub
jb
xchg
and
cmp
pop
jge
mov
mov
mov
imul
push
leave
inc
xchg
push
cltd
das
add
leave
sahf
mov
inc
or
bound
sbbl
cwtl
cld
mov
xchg
mov
test
fsubrs
push
rcll
inc
jns
test
sub
pushf
push
pop
jbe
es
sbb
sbb
data16
ret
cltd
add
mov
lods
xor
ret
sahf
aaa
ljmp
mov
fistps
pop
out
push
adc
inc
mov
dec
rolb
xor
enter
pop
jg
adc
sbbb
jle
cmpsl
jnp
call
aaa
rorl
xor
inc
pop
iret
add
push
adc
pusha
in
fcomip
sub
inc
mov
and
loopne
adc
mov
inc
aaa
mov
jecxz
movsl
inc
out
jne
fiaddl
arpl
push
inc
or
xchg
pop
cmp
fsubl
iret
lcall
daa
call
cmpb
icebp
ficompl
int3
aad
int3
addb
mov
mov
push
dec
out
xor
ds
jg
adc
ss
inc
aad
mov
roll
jp
inc
outsb
mov
scas
pop
lods
aam
push
ljmp
adc
inc
adc
sub
add
movsb
mov
jl
jnp
mov
add
sub
sbb
mov
iret
adc
fwait
and
lds
xor
adc
lods
or
clc
jge
and
insb
xchg
gs
fdivl
faddl
mov
outsb
mov
mov
sub
push
cmp
out
test
sysenter
push
pop
andl
pop
lcall
inc
xchg
cltd
sub
or
iret
fdiv
movsl
loop
out
pushf
jns
pop
adc
xor
push
cld
shlb
dec
dec
nop
xor
je
push
push
clc
sbb
cmpsb
inc
cli
setle
inc
xchg
fmulp
test
add
out
xor
sbb
mov
sbb
mov
cmpsl
sbbl
push
test
push
ja
pop
es
xchg
stos
adc
sub
sub
mov
push
inc
mov
and
mov
rcll
shlb
sub
int
cwtl
dec
jl
repz
xor
push
insb
sbb
insb
loopne
popf
enter
arpl
sub
mov
or
dec
popa
les
adc
pop
xor
cwtl
filds
loopne
loop
lea
dec
add
shll
xorb
fstpt
pop
mov
pusha
sub
insl
in
mov
repnz
add
mov
pop
sbb
sub
int
mov
pushf
fcoms
ss
hlt
jg
mov
push
aaa
je
shll
flds
push
adc
and
push
jg
cwtl
lret
mov
adc
jne
push
mov
dec
repz
inc
lea
call
fisubs
pusha
push
js
adc
add
cmp
test
out
sub
flds
lcall
pop
xor
push
mov
out
imul
leave
inc
out
fdivs
addr16
daa
jge
in
mov
insl
mov
in
or
sub
mov
xchg
or
and
les
or
idivb
ljmp
sbb
sti
lock
sub
add
sbb
arpl
scas
scas
jns
lahf
dec
lret
jb
icebp
xchg
push
inc
jmp
sbb
xchg
or
push
sub
dec
add
orb
aaa
in
mov
mov
sub
lea
outsb
and
adcl
sub
pop
sub
inc
xor
and
jbe
push
xor
dec
dec
loop
scas
adc
cmp
mov
add
inc
js
jmp
ljmp
jno
xor
notb
dec
mov
fisubrl
xor
lahf
pushf
xchg
dec
and
pushw
and
loope
fnstcw
xlat
cltd
scas
jg
call
fsubl
ret
bound
add
loopne
or
mov
jbe
dec
adc
stos
lock
cli
add
mov
cmp
dec
mov
mov
pop
inc
fs
test
and
or
aad
out
add
repz
cmp
cmp
adc
test
je
mov
push
ss
mov
filds
mov
pop
add
push
xorl
cmp
addr16
lcall
scas
pop
test
icebp
dec
xchg
inc
movsb
push
fcoms
sub
loop
inc
pop
out
push
pop
mov
cmp
mov
mov
mov
sub
xor
lret
js
in
inc
push
cmp
ret
adc
loope
orl
ret
mov
jb
loope
in
dec
je
cmp
xor
cmp
repnz
jl
leave
stos
mov
out
in
fsubrl
adc
inc
jns
popa
dec
sbb
std
mov
aam
aad
push
adc
sbb
dec
movsb
jg
jnp
iret
jno
sub
jle
das
pop
dec
or
enter
cmc
xor
pusha
cmp
sbb
cmpsb
cmp
sub
clc
mov
clc
mov
jp
jle
insb
sub
rcr
inc
pushf
repz
push
mov
push
scas
ret
aaa
or
aas
xchg
sbb
fwait
out
pop
xor
jne
pushf
addr16
push
rol
lret
pop
inc
push
test
adc
movsl
mov
mov
test
xchg
fsubr
xchg
les
push
inc
push
out
es
push
lcall
fildl
xchg
mov
sbb
aaa
dec
dec
in
xchg
add
in
nop
rcrb
dec
jl
lret
dec
imul
ljmp
xor
and
cld
arpl
push
sub
pop
pop
out
cmpsl
fbld
cmp
add
mov
or
icebp
push
stos
scas
daa
ret
iret
sahf
inc
inc
adc
insb
ds
push
jnp
push
clc
mov
sahf
int3
js
adc
add
cmp
xchg
jae
imul
outsl
jno
xlat
jns
xchg
mov
ss
jnp
xor
stc
jbe
dec
jmp
stos
jge
adc
ss
jns
adc
and
mov
mov
repnz
test
out
jns
and
mov
sbb
xchg
outsl
sahf
loop
mov
adcl
repz
adc
jg
addl
cs
inc
push
adc
mov
lea
popa
xor
sbb
push
cltd
lret
les
int3
jnp
inc
stc
enter
mov
mov
xlat
lods
sahf
cmp
dec
or
cmp
adc
dec
push
xchg
insb
mov
lea
pop
push
gs
mov
and
in
or
xor
xor
adc
sub
mov
cmp
push
xor
inc
push
adc
pop
xor
jnp
pop
mov
add
push
or
sbb
sahf
push
test
xchg
dec
cmpsl
add
mov
push
ljmp
pop
int
int
mov
jmp
insl
mov
sbbb
fsts
sub
lods
mov
mov
push
andb
sti
sbb
into
mov
xor
shl
rcrb
pop
adc
sbb
dec
es
sahf
inc
push
lcall
ret
add
negb
dec
jl
insl
push
mov
out
rorl
mov
sbb
test
xor
test
jb
bound
rolb
aam
inc
bswap
je
fdivrl
ret
out
lods
movsl
xor
pop
popf
or
fbld
adc
and
in
mov
nop
jl
mov
pop
inc
icebp
xor
in
aam
loopne
mov
daa
push
test
insl
es
adc
pop
outsb
aam
dec
pop
add
jb
scas
aad
in
and
dec
pushf
fnsave
mov
jne
inc
imul
inc
dec
outsb
sub
orb
cmp
and
dec
enter
adc
pop
leave
gs
cmp
nop
mov
sub
inc
out
jbe
push
mov
sub
cvtps2pd
inc
popa
ljmp
lock
std
or
cmc
add
std
push
sbb
int
dec
pop
jle
mov
add
jge
jnp
xchg
in
lret
ds
lahf
in
dec
idivb
movsb
mov
ret
mov
sub
xchg
pop
jle
lods
ss
push
sti
subb
aam
or
outsb
mov
mov
mov
shr
inc
jl
mov
mov
scas
or
mov
in
pop
aam
sti
sub
mov
cmpsb
add
jp
sahf
gs
pop
fisubs
hlt
add
and
and
in
sub
scas
insl
sub
std
insl
mov
cmp
cld
pop
xchg
mov
push
mov
pusha
or
fsubl
es
arpl
ds
fldl
scas
notb
dec
js
outsb
push
lret
loop
inc
jns
dec
mov
push
and
jecxz
jge
jecxz
jno
xorl
pop
mov
mov
rep
scas
fwait
xor
mov
pop
jne
bound
arpl
aam
pop
mov
xor
addb
rcr
cs
cmp
mov
push
daa
ljmp
adc
jmp
fimuls
jmp
repz
or
scas
shrl
iret
sahf
cmp
jno
or
adc
add
jle
fs
xor
out
addb
fidivs
dec
lret
in
icebp
push
mov
xchg
sbb
push
fnstenv
mov
jp
insl
cmp
xchg
jg
add
sbb
pop
jne
insb
xchg
dec
lds
or
bound
inc
adc
add
insl
pop
out
xchg
fwait
stos
xchg
cmp
xor
inc
mov
mov
test
pop
lods
adc
enter
jae,pn
out
add
pop
inc
mov
mov
pop
dec
xchg
es
mov
or
xchg
into
lcall
adc
cmpsb
sub
daa
lahf
pop
mov
add
repnz
sub
jg
iret
inc
mov
push
push
mov
scas
je
pop
pop
out
cmpsb
fs
lahf
cmp
inc
leave
pop
push
insb
subl
test
push
sbb
stos
inc
fsts
xchg
mov
dec
xor
pop
sahf
je
inc
push
cmp
jae
lds
jecxz
out
fcoml
repz
stos
and
les
lret
mov
popa
mov
ljmp
and
adc
fcmovbe
xor
rcl
jmp
xchg
stc
and
sbb
jns
mov
mov
cmpsb
dec
jne
xor
push
fildll
sbb
inc
fsts
dec
pop
mov
push
mov
and
push
ss
adc
push
xor
inc
mov
pop
jecxz
mov
iret
ret
add
rorl
jbe
sub
sar
in
xor
cmpsl
dec
outsb
iret
mov
test
dec
loop
repnz
into
rorl
lret
mov
adc
pop
mov
f2xm1
and
fidivs
scas
mov
or
popf
hlt
sub
cltd
add
lea
cmp
fwait
mov
mov
ret
fucom
daa
aaa
xchg
ror
lcall
js
push
fnstcw
or
rolb
inc
inc
insl
aaa
xor
fs
out
je
jae
jns
adc
int3
pop
movsl
jl
push
and
jle
push
mov
xor
or
aad
mov
adc
cmp
hlt
cmpsb
lods
push
xor
pop
std
int
data16
into
sub
mov
xchg
pushf
cwtl
movsb
mov
mov
ja
push
mov
cwtl
mov
pusha
cs
and
mov
dec
aad
rcrl
out
mov
xchg
add
cwtl
fcomps
inc
in
call
mov
inc
push
mov
imul
repz
adc
fcom
inc
push
adc
movsb
xchg
into
jecxz
enter
mov
jecxz
push
std
clc
or
outsb
or
sub
sbb
push
mov
lock
dec
push
iret
cs
dec
pop
mov
sahf
in
jge
pop
fistps
push
jnp
sahf
mov
add
sar
sub
push
jo
lods
shrl
sti
ds
add
out
push
adc
fsts
sbb
out
cmp
dec
adc
lcall
scas
or
or
pushf
hlt
test
or
lds
test
scas
mov
add
outsb
push
jecxz
mov
sbb
cmp
adc
hlt
and
xchg
mov
mov
jl
xorb
testl
repz
inc
insl
and
fsubs
adc
or
icebp
loop
cmp
iret
sbbl
iret
mov
mov
jo
sti
movsb
iret
lods
dec
adc
cmp
dec
jbe
icebp
adc
push
push
jl
es
mov
icebp
push
pop
mov
mov
jno
lcall
outsb
ret
pushf
cmp
or
inc
push
adc
or
lea
mov
xlat
or
ret
roll
adc
adc
push
shl
int3
add
mov
rep
ds
sbb
sub
lods
and
inc
lds
call
xchg
icebp
fucom
inc
push
adc
cmpsl
iret
pushf
mov
add
jg
mov
out
leave
in
mov
jmp
shll
adc
mov
js
adc
add
cmp
mov
out
movsl
rorl
inc
stc
fisubl
hlt
xchg
loope
xchg
fisubrs
add
pop
xor
inc
jne
repz
inc
imul
sbb
pop
cld
sub
roll
fldt
mov
sahf
cmp
lret
adc
fwait
pop
lods
out
pop
lock
push
adc
adc
arpl
xor
in
mov
and
dec
pusha
push
mov
out
scas
mov
cs
dec
minps
jne
std
mov
shl
ja
scas
pop
les
push
mov
and
xchg
repnz
push
mov
lock
xchg
or
testl
pop
mov
adc
ds
sub
and
outsb
jecxz
mov
jnp
sahf
or
ds
sbb
add
jecxz
adc
and
or
mov
dec
test
mov
data16
fists
ja
mov
fnstcw
test
jge
inc
dec
push
jmp
fldl
fstpl
shl
dec
sub
stos
popa
cmc
pop
jbe
pop
cld
loopne,pn
test
mov
jns
inc
test
sarl
bound
movl
mov
loop
inc
out
sub
pop
js
fdivs
nop
inc
sbb
inc
and
or
rcrl
or
clc
and
fs
test
fcmovnb
mov
cmpsb
ja
adc
jb
xchg
jo
clc
fs
negb
xor
mov
rcrb
or
add
fdivrl
int3
popa
push
cmp
ljmp
and
lods
bound
xchg
lret
lcall
insb
mov
cmpsb
jae
scas
pop
test
pusha
dec
xchg
icebp
or
mov
ret
fwait
pusha
and
cmpsl
push
and
mov
hlt
fsubrs
pushf
mov
mov
outsl
jmp
xchg
push
aad
or
dec
push
dec
add
ja
lods
push
pop
mov
stos
test
or
lods
das
imul
cs
inc
dec
daa
push
adc
sub
add
insl
push
dec
push
iret
das
inc
fs
enter
ret
fstl
xchg
jge
je
pop
pop
arpl
push
pop
orl
jne
add
add
mov
fistpl
fnsave
imul
pop
insb
lahf
scas
mov
pushl
adc
call
sub
push
and
fstpl
shrl
ja
xor
dec
mov
cmp
xlat
and
jne,pn
mov
sbb
pop
icebp
enter
out
pop
adc
aad
out
je
sub
sbbb
jae
out
add
mov
push
outsl
popf
lcall
pop
fdivrs
repnz
dec
push
adc
mov
xor
je
lock
mov
out
xor
cmpsl
sbb
mov
push
xchg
cmp
pop
bound
iret
jmp
int
dec
mov
mov
pop
rorl
ret
xchg
xor
ret
jmp
add
out
lcall
sbb
pop
add
sbb
mov
mov
int3
xchg
imul
xor
pop
inc
rol
pushf
adc
inc
mov
xchg
out
adc
dec
add
int
fwait
les
iret
je
push
cmp
inc
push
mov
mov
cmp
rep
daa
out
lahf
sub
std
pop
add
lds
icebp
adc
sbb
repz
adc
scas
mov
inc
mov
mov
cmp
icebp
sbb
je
cmp
jne
pop
or
repz
scas
dec
xor
shrl
mov
jp
arpl
xchg
out
xchg
xor
add
fistpll
xor
and
push
sbb
arpl
icebp
push
pop
mov
cmp
repz
mov
mov
arpl
xchg
lahf
mov
arpl
adc
mov
xchg
bound
sub
movsl
fcompl
or
out
and
lods
in
sub
sub
psllq
pop
push
iret
pushf
int
dec
lret
int3
aaa
inc
rcll
xor
sbb
dec
lret
mov
cli
sub
sub
leave
ljmp
sbb
in
xchg
and
loopne
in
int
aas
arpl
xchg
mull
push
sub
iret
lds
or
ret
mov
sbb
roll
fildl
stos
out
jmp
jo
xchg
xchg
insb
ret
adc
sub
or
lods
dec
fisubrs
mov
stos
popa
cmc
insb
aas
push
sub
hlt
fisttps
push
sahf
or
shl
push
in
push
cmp
sbb
ret
jb
ret
sbb
add
adc
push
aam
loopne
jmp
lods
test
mov
inc
mov
pop
push
cli
dec
mov
dec
pop
les
mov
pop
mov
cmp
stos
out
fs
or
jno
push
sbb
pop
sub
push
sbb
jbe
inc
pop
leave
loope
jmp
cmpsl
pop
jecxz
sbb
mov
fdivs
or
outsl
mov
ljmp
out
adc
aaa
outsl
ds
pusha
mov
and
in
mov
lret
pop
add
push
adc
inc
sbb
inc
mov
rclb
cmp
cmp
push
cmp
rclb
shlb
pop
push
mov
lods
jne
nop
and
ret
popf
add
xchg
aad
or
sub
jno
xchg
fistpll
sub
lahf
mov
imul
mov
sahf
in
or
jnp
outsb
cmp
in
loope
add
arpl
sti
push
mov
pop
mov
and
dec
ljmp
mov
gs
stc
add
and
aad
aas
not
or
pushf
movsb
xchg
or
lds
or
sbb
fdiv
sub
xor
mov
xchg
sbb
addr16
push
dec
xchg
dec
jb
fcoml
pop
rol
add
mov
inc
test
lcall
fs
movsb
out
sahf
ret
sbb
daa
clc
push
outsb
gs
jnp
movsl
movsl
pop
push
cmp
jp
add
int3
cs
mov
jmp
repz
inc
dec
ljmp
mov
push
mov
aaa
sbbb
pop
cs
movsb
out
sahf
mov
test
rcrl
mov
pusha
ss
adc
push
adc
in
mov
inc
inc
mov
inc
sbb
mov
cmp
out
js
pop
mov
jmp
adc
aaa
push
push
daa
xchg
cmc
cmp
adc
leave
mov
xchg
or
aaa
push
adc
sarb
aas
js
pusha
sub
movsl
add
sahf
cmp
dec
add
cmpsb
mov
pop
in
dec
fs
add
inc
jg
push
xlat
add
in
daa
jae
out
add
cmp
inc
mov
mov
seto
push
add
mov
or
cwtl
movsl
xchg
jg
sbb
je
repnz
mov
push
das
pop
mov
cmp
inc
in
mov
fwait
mov
pushf
outsb
cmp
je
sub
popa
ret
or
movsl
xchg
push
pop
int3
xor
dec
push
int3
add
sbb
je
pop
cs
out
call
int
and
shlb
arpl
xchg
sbb
ret
mov
xchg
jp
dec
mov
mov
arpl
mov
test
jbe
iret
loop
scas
repz
lcall
xchg
fistpl
inc
js
mov
in
or
out
hlt
add
outsb
insb
mov
push
rclb
dec
jge
jns
jecxz
push
cs
mov
roll
imul
lds
sbbb
sub
add
jecxz
mov
nop
pop
inc
test
lret
xor
push
cs
gs
xorb
or
sbb
stos
dec
test
ret
mov
sbbb
lds
push
cs
fcompl
push
pop
dec
and
push
adc
fldl
jle
fucom
lock
mov
mov
cmp
jmp
mov
add
adc
inc
pop
mov
loopne
xor
fmuls
xor
jp
sarl
inc
lcall
mov
pusha
daa
insb
test
int
nop
iret
mov
jno
std
fxch
inc
xor
outsl
cmc
jno
push
sbb
fistps
aam
push
decl
mov
sbb
jb
and
inc
sbb
data16
popf
sbb
sub
scas
mov
imul
lcall
mov
das
sub
out
repz
sub
into
std
imul
push
jl
flds
inc
push
pop
test
dec
jne
push
sub
rclb
push
sti
or
jnp
jmp
push
push
movl
pushf
pop
adc
enter
adc
xchg
outsl
enter
mov
cmpsl
cmp
xchg
mov
aaa
ret
cmp
pop
adc
adc
mov
add
faddl
into
mov
mov
xor
in
sahf
dec
dec
sbb
icebp
adc
cltd
fildl
pop
enter
add
add
or
jecxz
cmp
cltd
xor
movsb
mov
pop
cld
int
push
mov
push
adc
and
mov
je
add
andl
cmp
scas
mov
cltd
pop
iret
cli
cli
jae
jmp
stc
js
mov
dec
pop
mov
mov
adc
ret
xor
daa
andl
pop
jbe
push
insb
or
jl
jmp
inc
mov
inc
xchg
cmp
add
lret
fs
pusha
cmp
scas
or
sbb
add
inc
mov
sub
in
out
xchg
cmp
jle
into
pushf
cmp
push
dec
pushf
cmp
iret
mov
jge,pt
push
adc
dec
sbb
lock
cmp
push
dec
in
or
loope
data16
inc
in
xor
les
cld
mov
and
xchg
mov
cmp
fmul
xchg
jp
xchg
lods
fxch
xchg
cs
ja
adc
repz
aas
xchg
jmp
in
pop
sub
xchg
mov
lret
gs
shlb
filds
add
into
pushf
sub
jno
xchg
sbb
incl
sbb
addr16
push
push
sbb
mov
mov
scas
lret
outsl
fsub
lds
pop
or
repz
repnz
mov
in
cwtl
addr16
jnp
xchg
jg
mov
sub
js
mov
sbb
inc
xorl
pop
xchg
dec
push
adc
jp
shlb
lock
fs
mov
push
xor
sub
xor
jbe
je
or
addb
enter
inc
shl
or
ds
inc
rol
mov
jnp
nop
jg
mov
pop
int3
pusha
sub
mov
sti
mov
sbb
push
cld
pop
in
xor
sahf
cmp
inc
movsl
fimull
hlt
xchg
loope
xchg
pop
xchg
inc
shl
fs
dec
push
adc
call
or
pushf
cmp
lock
and
test
xor
iret
cwtl
cltd
sbb
dec
inc
mov
and
xchg
lea
pop
pop
xchg
jne
arpl
cmp
and
addr16
xor
insb
or
xor
insb
orb
daa
push
mov
insb
xor
adc
mov
cmp
outsb
add
insb
inc
jns
sahf
or
or
cld
dec
adc
jo
jno
popf
sbb
data16
pop
sub
popa
adc
out
pop
sub
int
dec
hlt
xchg
into
adc
or
imul
or
pusha
sbb
lods
xchg
mov
xchg
ret
popl
lods
and
mov
dec
lret
cs
cmp
stos
out
fs
stos
mov
sbb
xor
sti
sub
push
pop
outsb
cmp
in
out
adc
sub
fidivs
add
push
push
inc
movsl
jle
roll
push
cld
mov
jo
dec
pop
enter
and
add
cld
sbb
xchg
dec
call
xchg
add
dec
add
cs
fiadds
mov
int
mov
fdivrs
jl
dec
pop
imul
jg
mov
loop
fucomip
push
in
add
cli
outsb
push
in
and
xchg
ss
into
mov
inc
sahf
or
gs
or
test
es
sub
push
out
lahf
or
imulb
hlt
push
dec
gs
in
sub
scas
inc
adc
mov
inc
pop
push
dec
xor
dec
popf
in
or
leave
push
and
sub
pop
sub
jae
out
inc
adc
pop
mov
loop
cmc
adc
xchg
lods
cli
push
pop
push
imul
push
jns
jmp
xlat
es
xor
xor
mov
xchg
outsb
mov
xlat
scas
jae
sbb
jg
push
cli
jae
aas
push
pushl
inc
popf
mov
dec
test
pop
adc
jae
cltd
push
into
lcall
jns
dec
mov
daa
ljmp
popf
loop
adc
gs
xchg
movsl
adc
psubusb
mov
movsl
push
dec
push
adc
mov
xchg
or
enter
and
push
stc
rcl
xchg
call
mov
fmuls
xchg
mov
xor
rorl
mov
push
repz
xor
inc
lock
jns
pop
ss
sti
lods
ficoms
in
into
pushf
or
nop
je
add
dec
rorl
aaa
in
aad
arpl
xor
jns
mov
nop
sub
pusha
or
dec
ret
aam
mov
xor
rcl
cmp
sbb
arpl
lods
pop
outsl
mov
sarl
add
cmp
repz
call
inc
mov
arpl
mov
jle
sbb
lret
sbb
push
adc
mov
and
xor
out
sub
sbb
dec
lret
mov
jo
outsl
xor
inc
ljmp
arpl
xchg
cmp
ret
or
in
popa
pushf
jecxz
mov
popa
dec
or
int
and
xor
arpl
insb
mov
mov
sub
iret
sahf
dec
add
int
lock
push
imul
out
pushf
in
mov
pop
scas
lea
dec
add
out
lcall
cmp
cmp
push
adc
add
loop
mov
or
fdivl
adc
lret
shl
and
inc
stc
lds
or
mov
movsb
inc
scas
out
xor
jo
or
fwait
xor
aas
ljmp
test
dec
ror
mov
or
ds
push
nop
decl
xor
loope
popa
leave
jp
loopne
jmp
sub
add
jge
xchg
stc
cmpsl
mov
mov
jmp
je
cmp
mov
out
movb
add
imul
xchg
out
xchg
xor
sub
add
arpl
insb
and
popa
loop
and
mov
jp
ret
es
or
jno
daa
psrld
sahf
aad
test
fucomp
mov
adc
xchg
rol
adc
loop
scas
icebp
sub
rcrb
add
test
pusha
inc
cmc
scas
xchg
and
mov
cmp
fsubs
cmpb
pop
aas
idivl
icebp
gs
sbb
xor
popa
nop
cmpsl
hlt
push
mov
fsts
data16
and
inc
cmpsb
jecxz
mov
stos
sbb
mov
mov
mov
int3
jmp
xchg
out
nop
push
lods
je
popa
and
shll
xor
rorl
ds
aas
pop
xchg
out
jb
mov
dec
dec
pop
jbe
ds
imul
fdivrs
inc
ret
jmp
fsubrp
add
andl
jne
mov
mov
mov
jp
outsl
lds
mov
mov
jle
add
xchg
mov
stos
pusha
pop
lret
popf
or
pop
arpl
and
or
mov
shll
inc
les
mov
iret
cmpsb
lods
mov
fimuls
test
addr16
mov
aam
push
adc
in
testb
sub
aaa
mov
push
push
mov
cmp
adc
push
lret
insl
jns
jmp
roll
std
ja
clc
out
sbbl
call
lret
out
cmp
lods
mov
repnz
jne
leave
push
adc
nop
and
fdivrl
pop
into
cmp
push
je
mov
inc
xchg
rorl
lds
jb
push
push
sub
pop
vpmulhuw
in
mov
lea
xor
arpl
ret
push
cmp
pop
hlt
popa
aaa
dec
ja
pop
ss
xchg
fimuls
or
mov
cmpsl
int
repz
cmp
xor
arpl
adc
xor
std
movsb
aas
xlat
test
shlb
cs
int
adc
sub
repz
inc
mov
add
jmp
lret
or
icebp
loop
add
cmp
pop
movl
popf
insb
mov
sub
xchg
or
dec
rcl
add
pop
sub
xchg
sti
ljmp
inc
loopne
xlat
pushl
inc
lods
sub
lret
xchg
mov
arpl
popa
in
xchg
and
shll
je
inc
loopne
add
sbb
testl
mov
ret
jecxz
ss
sbb
mov
sub
sub
pusha
int
cmp
pop
xchg
lret
std
mov
je
lcall
ljmp
cmp
xor
push
addr16
arpl
dec
cmp
dec
lods
cmc
stos
xor
jns
cmp
lds
pop
mov
dec
cmp
add
mov
inc
inc
rcl
in
fstps
jp
insb
and
movl
movsb
stos
scas
pop
repz
sahf
inc
inc
sbb
icebp
xor
jg
int3
sbb
cmp
add
dec
jl
push
dec
mov
or
inc
dec
push
adc
ja
jae
and
aam
xchg
dec
js
pop
mov
push
fucomp
mov
ss
and
negl
out
lahf
bound
cld
pop
lock
inc
pusha
cmpsb
lods
scas
imul
pop
cmp
push
cld
mov
or
jp
sub
add
mov
xor
je
or
je
xor
jecxz
cwtl
cmp
sub
xchg
or
inc
gs
adc
jmp
mov
lock
lods
or
mov
sti
add
repz
popa
ret
mov
enter
mov
mov
mov
fidivs
popf
jo
imul
in
sbb
adc
fimuls
ret
lahf
mov
adc
out
pop
and
xchg
add
xchg
and
pop
sbb
pop
jp
idiv
aad
inc
jae
push
cmp
lahf
test
ds
call
sbb
scas
push
in
clc
jp
push
sbb
mov
ljmp
dec
in
dec
or
mov
or
in
mov
cmp
inc
test
and
and
sbb
add
dec
push
adc
push
inc
out
jne
sbb
xchg
lock
loope
push
mov
mov
aad
xlat
or
xchg
dec
dec
imul
push
outsb
lret
xchg
inc
push
test
mov
push
cli
outsb
shr
cmpsb
pop
enter
out
xchg
cld
popa
ret
mov
xorb
fwait
jmp
jo
testb
mov
testb
mov
scas
jmp
xchg
scas
mov
mov
push
inc
mov
jns
and
pop
and
push
jge
popa
lods
fldt
inc
jecxz
shll
pop
clc
jb
xchg
cmpsb
dec
cmp
push
popw
inc
push
or
sub
cmp
sahf
lret
push
addl
es
xor
cld
mov
hlt
test
adc
mov
mov
sub
xor
jae
mov
into
notl
js
push
xchg
mov
xchg
test
sahf
mov
add
mov
xor
fdiv
dec
sub
push
push
xor
push
xchg
or
cld
xor
iret
fimuls
push
adc
add
mov
popa
sti
cmp
fs
cs
and
iret
sahf
cmp
popa
and
imul
test
xor
dec
cmp
in
or
or
mov
mov
pusha
sbb
test
mov
sub
int3
sahf
sub
aaa
push
push
xchg
push
sbb
cmp
mov
out
lcall
and
imul
lds
popf
pop
lahf
cmp
pop
icebp
inc
pop
xor
lods
cwtl
test
sbb
push
dec
or
jecxz
mov
xchg
pop
inc
fs
cmp
xorl
mov
pusha
repz
mov
popa
je
mov
inc
int
out
mov
sbb
aad
lahf
sbb
arpl
adc
aas
js
cwtl
push
mov
cs
nop
daa
iret
sahf
inc
inc
xor
rcrb
imul
xor
mov
aas
out
pusha
mov
pop
jb,pn
out
mov
div
out
mov
mov
xor
js
sub
mov
inc
adc
out
out
adc
ds
mov
mov
out
adc
fcoml
inc
in
bswap
std
cs
lret
mov
shr
mov
aas
mov
pop
inc
mov
mov
mov
adc
repnz
test
pushf
and
movsl
les
gs
je
cmp
mov
mov
imul
mov
xchg
outsb
or
mov
xchg
jg
pop
shl
fmul
subl
inc
adc
dec
jecxz
sahf
jne
pop
mov
out
adc
xchg
sub
insb
inc
cmpsl
xlat
ja
mov
imul
mov
ret
sbb
out
les
dec
test
mov
stc
jmp
sub
xchg
jbe
push
aas
fimuls
push
push
popf
jo
test
add
jns
and
jmp
sbb
rcrb
sbb
hlt
xchg
fcomi
adc
sbb
xor
add
dec
push
scas
mov
xchg
jg
in
mov
outsl
mov
add
test
shl
jno
adc
out
push
or
or
jmp
mov
xchg
sbb
push
push
lahf
add
das
mov
in
loopne
or
rolb
jmp
fmul
jle
lods
lea
add
xor
add
test
inc
insb
cli
adc
lods
mov
pop
popf
mov
and
in
mov
popa
sub
mov
mov
dec
add
rcrl
mov
aad
inc
in
enter
mov
imul
shll
faddl
insb
ss
xchg
add
sti
inc
mov
adc
and
test
cmp
mov
test
dec
and
scas
sub
addr16
mov
jnp
xor
jmp
in
sub
sahf
mov
jae
shrl
adc
es
cmp
pusha
ja
scas
fwait
not
push
jne
aad
cmp
adc
out
cmpsb
popa
and
dec
cmp
adc
or
shrl
into
outsl
jge
dec
rcr
mov
adc
ret
repnz
mov
inc
pop
adc
test
pop
cmp
xchg
out
mov
xor
adc
ds
inc
loopne
repnz
test
mov
inc
pop
or
inc
arpl
xchg
lock
cmp
repnz
dec
pop
std
out
loop
jns
or
pop
xor
add
js
sbb
out
adc
or
mov
xor
fcmovbe
mov
call
shl
loop
add
lods
pop
sbb
aaa
fsts
mov
pop
jo
out
into
and
dec
push
adc
cmp
je
cmp
xchg
lock
fs
adc
mov
xor
out
loop
pushf
mov
pop
mov
inc
jp
out
xor
in
aam
je
jecxz
cmp
mov
lds
add
xor
push
out
movsl
movsl
jo
cmp
jo
vpsubsb
pop
mov
cmp
iret
inc
cmp
pop
sarl
adc
push
js
pop
subb
sbb
dec
in
out
xchg
mov
fldcw
pop
jbe
movsb
scas
scas
jns
iret
sahf
inc
inc
add
inc
xor
test
mov
loop
mov
lods
js
and
sahf
nop
or
push
fwait
je
mov
adc
cmp
push
cmp
xchg
inc
les
jo
iret
aam
jns
out
loopne
imul
pop
int3
mov
push
xchg
js
adc
pop
mov
add
insb
out
lcall
aad
arpl
icebp
dec
mov
mov
pop
mov
movb
imul
into
je
inc
push
cmp
div
cmp
pop
pop
sbb
into
xchg
inc
out
out
mov
clc
fmuls
dec
aas
jns
hlt
daa
adcl
inc
dec
out
addr16
xchg
pop
push
call
sub
les
fcomip
add
cmp
inc
mov
inc
inc
mov
mov
notb
dec
insl
outsl
cmpsb
mov
notl
push
into
fs
xchg
std
push
out
cmpsb
out
xlat
call
dec
gs
mov
fucomip
push
leave
jo
push
sbb
cmp
insl
cli
jp
sahf
jle
rcl
popf
or
loopne
mov
adc
pusha
bound
aam
call
nop
aad
sbb
inc
cmp
icebp
inc
cmp
dec
cmp
loop
jae
xor
push
push
xchg
jle
imul
test
int3
into
adc
aam
mov
notb
dec
std
sbb
xchg
inc
xor
test
push
adc
jno
out
pop
xorb
std
push
xchg
mov
int3
xor
inc
lods
stos
sub
fbld
sbb
xchg
mov
and
dec
pop
lcall
shr
jnp
dec
rolb
xchg
inc
sub
add
dec
sbb
enter
add
std
and
xor
sub
dec
pop
or
pop
sub
jae
push
jmp
sub
cli
mov
and
pop
jmp
mov
add
cmp
and
ds
fcomps
daa
fmull
daa
sbb
sub
cmc
jo
pop
inc
adc
dec
addr16
in
mov
inc
and
xor
nop
push
pop
inc
scas
push
iret
sahf
inc
pushf
adc
inc
mov
pop
testb
imulb
and
pop
mov
push
jne
or
add
cmp
cld
xchg
ret
es
out
add
xchg
xorb
add
insl
test
mov
or
sub
shll
mov
xlat
fsubl
mov
mov
addr16
sbb
inc
in
jecxz
lcall
or
orb
cmp
add
or
fs
or
adcl
mov
in
or
or
bound
and
mov
lcall
nop
jg
mov
out
mov
lock
loopne
imul
andb
daa
xchg
cmc
jae
adc
xchg
mov
fbstp
jg
arpl
insb
rclb
cmp
cmp
pop
ja
imull
mov
addr16
in
dec
lret
int
dec
xor
mov
arpl
std
movsb
pxor
out
adc
sbb
aad
call
inc
fwait
std
mov
and
lock
mov
sub
int
nop
in
or
push
jmp
push
push
mov
dec
mov
cs
fwait
icebp
cmp
nop
out
int
lds
stos
cmp
sbb
cmpsb
or
loop
cmp
ljmp
cmp
sahf
cmpsb
push
faddl
nop
or
push
xchg
nop
pop
mov
or
add
ss
rorb
or
sbb
or
mov
jae
fcoms
xchg
mov
mov
arpl
icebp
cmc
stos
pop
push
cs
shl
sahf
sub
scas
in
push
cmp
mov
push
cmp
out
jne
mov
mov
or
js
xchg
jg
xchg
sbb
add
cli
ljmp
ja
cmc
xchg
push
jmp
sbb
icebp
xchg
jp
xchg
scas
mov
jno
into
cmp
aam
dec
mov
arpl
cli
jmp
add
push
adc
xor
cmp
stc
dec
jnp
shll
cmc
sub
iret
ret
add
test
and
sbb
push
inc
mov
inc
add
sbb
or
push
mov
sub
xchg
dec
fcomip
xchg
stos
push
xor
and
fnstsw
jl
push
mov
movsb
sbbl
popf
mov
cmp
fdivrs
sbb
cltd
jge
daa
xchg
jbe
lods
mov
pop
xchg
pandn
stos
pop
push
pop
data16
lock
push
mov
or
ret
arpl
push
div
xchg
int
scas
pop
push
les
pop
outsl
loopne
and
imul
shl
in
repz
ja
insl
mov
mov
or
or
push
adc
mov
daa
jle
xchg
or
inc
imul
out
fcmove
inc
popf
push
and
adc
mov
repz
push
insl
mov
popl
or
mov
loopne,pt
enter
je
dec
push
popf
in
pop
je
cli
pop
mov
mov
in
and
push
xor
rorl
ret
ret
je
outsb
inc
adc
fs
aam
cli
stos
cmp
cli
cmc
out
cld
popa
ret
sti
or
push
stos
jb
or
fisubrl
pusha
andb
out
into
movaps
or
mov
fnstsw
test
stos
jp
push
shlb
fcmovb
cmp
inc
insb
and
jp
jle
xchg
movsl
mov
negb
shlb
ja
add
mov
push
jne
addb
adc
test
mov
or
out
imul
or
and
and
arpl
insl
dec
fdiv
lcall
and
cmp
adc
in
rol
into
in
push
test
pusha
stos
ljmp
loopne
bound
sub
fidivs
vcvttss2si
sub
ja
int
pushl
lret
lock
and
fs
cwtl
popa
ret
insl
push
lcall
ja
int
pushl
or
lds
jae
test
hlt
and
stc
sbb
sbb
and
outsl
sub
out
mov
xor
adc
lcall
mov
popf
mov
push
sub
adc
or
lock
jns
movsb
add
loope
sbb
adc
mov
add
repnz
stc
hlt
cs
mov
cmp
cmp
inc
popa
inc
and
mov
test
xor
lds
xchg
iret
loop
xchg
lahf
cmpsb
gs
xchg
movsl
rorl
cmp
insb
inc
fcomip
loop
and
adc
iret
xor
cmp
stos
xor
lcall
int3
or
popf
lods
leave
imul
mov
cmp
xchg
fiaddl
xchg
lds
mov
cmp
mov
or
jge
pop
mov
push
ret
int
add
or
test
pop
cmp
or
push
pop
test
jecxz
imul
jge
pop
into
sahf
cmp
ljmp
mov
scas
aas
inc
outsb
rcll
ret
lock
imull
inc
dec
pop
add
in
cmp
cmp
mov
mov
jg
arpl
xor
in
push
inc
xor
inc
clc
stos
ret
and
pop
cmc
les
sub
xchg
and
adc
mov
mov
sbb
sub
sub
stc
scas
fdiv
scas
push
and
sbb
xchg
mov
xor
shll
sub
push
xor
lret
out
mov
repnz
or
inc
mov
and
add
loope
mov
mov
fwait
jl
loop
daa
cmpsl
sbb
jge
xchg
and
and
fsubrs
mov
add
jbe
imul
or
mov
push
add
inc
push
sub
dec
popa
and
push
xchg
ret
cmpsl
mov
xchg
and
inc
sub
jg
js
push
insl
jg
in
shrl
sbb
sub
test
insl
in
das
mov
xor
les
xchg
sarl
call
insl
test
push
ja
xor
mov
inc
and
fs
jge
add
sbb
ljmp
inc
out
data16
in
inc
add
daa
and
mov
clc
scas
mov
aaa
imul
into
jmp
pushf
xchg
cmp
pop
sub
daa
scas
iret
and
dec
and
sbb
ljmp
aas
lods
mov
out
ss
in
cmc
insl
dec
pop
jbe
ja
imul
fdivrs
cmc
jns
idivb
daa
pop
sub
adc
push
mov
mov
mov
cmpsl
outsb
inc
add
cmp
jl
jg
std
popa
insl
ret
or
jb
das
sbb
rcrl
cmp
scas
sub
jmp
fdivrs
gs
mov
add
cmp
shr
insl
clc
in
ds
jg
iret
or
jnp
rolb
orb
aam
and
xor
out
sbb
xchg
test
mov
cmpsl
mov
es
push
icebp
mov
cli
pop
sbb
add
mov
or
sbbb
adc
jecxz
icebp
mov
mov
lcall
dec
xlat
fsubrl
or
jo
dec
push
jmp
push
and
push
adc
out
and
scas
lret
leave
aam
in
dec
xchg
repnz
lea
stos
shlb
daa
xchg
cmc
mov
adc
xchg
mov
fbstp
sarl
inc
mov
mov
mov
js
dec
push
pop
jmp
dec
cli
outsl
out
ljmp
xor
jle
jbe
in
inc
arpl
sti
pushf
fistpll
mov
mov
sub
push
int
xchg
jecxz
sbb
ja
daa
gs
stos
push
fs
popf
cmp
inc
add
scas
mov
mov
fstpt
js
push
ds
sbb
lock
cmp
in
push
cltd
xor
mov
movsl
sbb
jecxz
mov
test
mov
sub
inc
stos
shlb
arpl
sti
lods
aaa
jecxz
adc
je
shrl
or
mov
cmp
lret
rorl
cwtl
mov
xchg
pushf
call
enter
sarb
out
gs
mov
movsl
xor
stos
xor
stc
push
xchg
js
loop
sarl
in
dec
into
repz
in
mov
mov
inc
sub
cmp
mov
pop
push
and
iret
ljmp
xor
movsl
insb
addb
gs
xchg
sbb
pop
mov
cmp
sbbl
jb
jns
arpl
repz
das
xchg
test
mov
sub
mov
cmp
repz
xchg
ror
mov
xor
inc
pushf
icebp
mov
sbbl
insl
test
mov
cmp
repz
mov
add
mov
push
jbe
icebp
loop
mov
pop
daa
aas
jb
into
lahf
ja
repnz
xor
mov
pop
mov
push
out
adc
inc
enter
cs
rorl
push
mov
divb
xor
and
xor
ja
pop
mov
cmpb
cwtl
dec
sahf
xor
insl
addr16
leave
adc
jmp
out
and
adc
mov
xchg
ja
fsubrs
adc
pop
xor
sbb
ret
xor
sbbl
es
imul
sahf
lahf
fsub
sub
mov
aam
adc
sahf
subb
ret
call
data16
xchg
dec
inc
aam
loopne
inc
push
cs
cmp
mov
push
jg
lcall
push
les
inc
xor
ret
pop
cs
and
and
fs
jg
jl
xor
mov
sbb
stos
pextrw
adc
popw
and
cmp
mov
test
ss
push
xor
mov
jmp
pusha
cmp
fnstsw
jae
in
sub
or
imul
xor
xchg
lcall
cwtl
out
lock
pop
je
mov
mov
adc
xlat
or
imul
and
inc
pop
mov
call
or
push
shlb
test
ret
test
or
lea
push
mov
fldcw
xor
sbb
xchg
add
pop
leave
mov
fisttpll
lcall
imul
push
dec
addr16
iret
sahf
in
cmpsb
mov
push
cmp
inc
push
ljmp
mov
lock
jae
push
jne
or
inc
in
js
pushf
lcall
xchg
xchg
or
mov
pop
xlat
xchg
xchg
and
aas
shrb
stos
mov
out
out
cmp
jae
pop
jge
mov
push
ja
in
mov
pop
dec
ficoms
and
fmull
adc
in
push
out
aas
test
shr
and
sbb
jge
inc
jnp
js
into
xchg
aas
mov
cs
lret
add
sahf
cmp
pop
or
inc
sbb
inc
mov
loope
push
aaa
je
shll
inc
fiaddl
add
dec
push
adc
mov
mov
lock
push
xor
out
xor
fwait
adc
sbb
push
mov
cs
lea
xor
dec
into
repz
in
mov
mov
inc
sub
cmp
mov
pop
push
and
iret
ljmp
jle
shll
insb
xor
xchg
cmp
or
iret
call
int
mov
add
out
push
cmp
jae
sub
lods
or
jo
inc
imul
and
push
arpl
bound
stc
lods
or
ret
hlt
out
sahf
dec
add
int
fwait
sbb
push
in
mov
arpl
ds
mov
cs
jbe
popf
dec
sahf
cmp
rep
dec
lcall
out
pop
cld
mov
push
adc
or
mov
dec
dec
jns
mov
push
movsb
mov
dec
loope
pusha
push
cmp
pop
ja
fldcw
fcomi
out
sahf
sub
dec
out
shll
mov
insb
sahf
cmp
cs
shll
jno
ds
mov
xor
std
fs
and
mov
hlt
jne
ret
mov
mov
mov
arpl
mov
or
shlb
pop
lods
ljmp
nop
xchg
sbb
push
nop
sti
xor
pushf
std
dec
inc
xchg
repnz
inc
fbstp
outsl
mov
sbb
inc
lea
mov
cltd
mul
jns
xchg
mov
push
sub
mov
ds
mov
cwtl
ss
sbb
into
cld
aaa
pop
les
pop
mov
fstpt
fwait
jle
ja
or
push
mov
pop
lret
jo
inc
sbb
or
mov
xchg
xchg
xor
xchg
cmp
test
das
sub
xchg
inc
adc
int3
subb
stos
popa
cmc
jno
cmp
sub
cmp
fsts
roll
mov
imul
mov
pop
hlt
adc
ret
jmp
cmc
dec
out
pop
test
and
mov
into
mov
lock
int3
int3
inc
push
repnz
mov
cmp
add
and
mov
sub
mov
fidivs
adcb
rcrl
mov
and
jne
sbb
andb
xor
cmpsl
pop
jecxz
sbb
lea
inc
mov
mov
jmp
adc
mov
in
enter
and
pop
aas
rclb
mov
insb
ds
in
mov
lock
xchg
lods
aad
inc
jne
cmc
in
loope
orl
xor
xchg
dec
cltd
cltd
fisubs
mov
lcall
aad
cmpsl
aad
add
push
std
mov
xor
cmp
notb
and
sbb
mov
mov
je
icebp
stos
pusha
hlt
scas
std
mov
rolb
mov
fs
mov
ja
sti
test
aas
popf
or
inc
jmp
pop
lcall
jge
jg
ja
clc
lea
adc
lcall
ja
jle
lahf
xchg
cmpsl
lret
jbe
mov
pop
sbb
jge
or
add
clc
pop
xchg
out
out
sbb
shlb
testb
jg
test
pop
xchg
jmp
pop
cmp
int
mov
push
jge
add
adc
hlt
dec
pop
sub
sbb
pop
add
pop
stos
fs
sahf
cmp
imul
out
inc
mov
mov
mov
cmp
insl
scas
rcrl
sahf
jp
rcl
dec
add
es
sbb
loop
ja
ljmp
ret
or
pop
pop
loop
xchg
mov
inc
cmp
test
shll
sbb
pop
xchg
cld
enter
xor
jmp
and
call
dec
pusha
sahf
mov
test
inc
shlb
lcall
push
inc
inc
sbb
repz
xchg
jne
sub
mov
sbb
lret
outsl
jo
lds
inc
lock
sahf
cmp
and
adc
sub
cwtl
ja
js
loop
jo
or
jno
ret
sbb
ds
dec
mov
ret
js
test
call
insl
cmp
mov
in
lcall
repnz
pushf
mov
push
sbb
sub
xlat
pop
push
out
leave
in
xchg
fs
pushf
cmp
xchg
or
cs
sub
out
out
lea
and
adc
mov
xchg
push
test
lea
add
sbb
fidivl
jnp
mov
ret
or
push
sbb
cmp
fnstsw
mov
or
movl
and
icebp
xor
inc
out
out
out
fwait
inc
pop
shll
enter
insb
cmp
jecxz
psrld
insb
push
dec
fsts
or
je
shlb
int
mov
jne
ret
pop
cmp
jbe
test
lods
push
test
pushf
inc
inc
es
jge
and
test
shll
test
cmp
xor
dec
push
adc
adc
popa
sahf
ret
ss
popf
adc
ljmp
dec
out
nop
inc
pushf
add
push
mov
inc
mov
and
add
cmp
jle
sbbl
sub
xchg
pop
mov
adc
cld
xchg
jno
mov
aas
xchg
push
subl
repz
aad
sub
jno
push
test
ljmp
push
std
mov
mov
mov
fbld
cmp
cmp
out
lret
out
adc
push
xchg
xor
and
inc
shll
imul
orl
addr16
push
adc
bound
and
add
imulb
in
subb
adcb
imul
sbb
mov
xchg
or
das
pop
in
xor
ret
pop
gs
xchg
icebp
sahf
adc
mov
shll
lret
mov
pop
adc
jbe
add
popfw
cmp
es
mov
popf
fs
dec
es
pop
outsl
pop
cmpsb
ror
push
sub
mov
aaa
pop
arpl
mov
cmp
rclb
jl
outsl
lds
aad
test
mov
filds
mov
hlt
fs
xorb
jp
fistps
insl
bound
mov
sbb
fldl
dec
mov
test
mov
push
push
sub
sub
jmp
and
inc
mov
mov
lods
xor
sub
push
pop
ss
add
orb
stos
cmpsl
out
jle
loopne
cmp
adc
ljmp
and
and
testb
movsb
ret
push
xchg
sarb
xlat
scas
fsubr
lret
mov
dec
int3
jno
mov
ss
mov
inc
jnp
sub
push
ljmp
cmp
call
jmp
adc
ret
add
adc
inc
pop
push
xor
pusha
out
adc
jg
mov
mov
pop
cmp
fnsave
and
pop
pop
adc
push
inc
mov
push
repz
lods
dec
push
and
js
insb
vmptrld
push
aaa
je
shll
push
add
lock
sahf
xor
jge
xor
ret
ficoms
es
push
mov
arpl
cmp
lea
iret
sbb
mov
mov
xor
rclb
xchg
push
xor
roll
jns
inc
add
fldt
push
push
es
ret
mov
inc
inc
jnp
or
test
sbb
in
sbb
fisubs
push
push
jno
mov
push
cmc
ds
pop
sub
mov
lea
cmpsl
push
out
jmp
and
dec
push
adc
adc
je
xchg
int
adc
pop
mov
pop
xor
out
sahf
adc
push
pop
mov
pop
in
int3
popa
inc
inc
adc
sub
push
push
xor
cmp
inc
pop
std
in
mov
gs
ds
dec
push
adc
imul
adc
xchg
dec
cwtl
add
mov
imul
sub
adc
mov
pop
jno
push
or
dec
push
gs
out
ljmp
scas
push
and
out
push
cli
je
dec
lret
out
stos
pop
cs
inc
out
fdivs
xchg
adc
mov
jmp
pop
mov
push
imul
out
insb
sub
xchg
aam
jb
iret
popf
lock
push
push
adc
sbb
shlb
call
mov
push
xor
mov
dec
les
jns
popa
subb
cmp
dec
cmp
insb
jo
xor
or
shlb
jl
adc
push
enter
xchg
jmp
sbb
out
xchg
mov
mov
jmp
lock
lret
out
mov
imul
sub
ret
lock
jle
or
pop
mov
int
out
ret
call
xchg
ja
inc
loop
cmp
scas
xor
js
mov
into
out
sarl
in
mov
pop
pop
push
ja
into
adc
cs
xchg
int
xlat
fidivs
std
fadds
cmc
adc
shll
jne
outsb
cmp
add
stos
xchg
test
enter
stc
rolb
sub
fs
int3
jmp
sub
int3
loopne
popa
and
adc
xchg
xor
mov
pop
pop
mov
push
sub
das
shlb
push
sarl
add
sbb
aaa
mov
movsl
xchg
dec
adc
xor
inc
pop
ss
pop
push
out
adc
addr16
cmp
cmp
insl
cmpsl
inc
jb
and
push
mov
loope
ds
xchg
cmpb
bound
push
xorl
imul
add
push
outsl
fwait
or
and
sub
in
inc
inc
push
jg
mov
xor
sub
movd
add
jb
std
pop
dec
add
flds
cmp
pop
mov
mov
dec
cmpsb
sar
out
js
lcall
hlt
ljmp
pushf
movsb
xchg
loop
cld
lds
lds
xor
arpl
ds
fldl
scas
lahf
iret
add
cmp
addr16
mov
sbb
cwtl
mov
aam
sahf
mov
or
out
sahf
xchg
inc
dec
in
lea
fwait
xor
cwtl
mov
cmp
jmp
pop
int3
pusha
sub
sub
int
std
lods
pop
adc
push
scas
js
loop
stc
mov
xchg
mov
int
xor
fwait
adc
sbb
cmp
xor
loope
xorb
adcl
mov
arpl
insb
inc
out
icebp
loop
and
sahf
jmp
fs
sahf
inc
inc
xor
xor
inc
lods
add
sbb
repz
ret
out
jns
lcall
jg
sbb
out
xor
jl
js
loop
jge
xchg
jnp
or
sahf
cmp
jno
and
enter
xor
xor
and
out
jae
pop
mov
iret
aam
jns
out
push
inc
adc
inc
mov
ret
or
inc
lds
jae
iret
loop
xchg
aaa
roll
sbb
push
pop
aas
xor
mov
into
add
add
jmp
stc
lock
mov
lcall
fbstp
dec
testl
pop
out
xchg
dec
pop
int3
pusha
sub
sub
int
std
lods
pop
adc
std
insb
fwait
js
loop
ret
pop
lret
add
sahf
cmp
pushf
int
inc
fcmovu
cmp
jle
into
pushf
cmp
lods
xor
push
cmp
clc
dec
dec
addr16
cmp
stos
mov
jae
inc
push
shrb
fisttpll
arpl
dec
test
out
mov
xchg
popa
out
add
out
stos
inc
mov
loopne
pop
xor
add
das
aam
jb
cmp
cltd
fwait
xor
and
push
inc
mov
sahf
test
shl
pop
sub
mov
lcall
je
cwtl
cmp
stc
sub
into
mov
xchg
imul
cmc
push
xchg
xor
mov
adc
mov
imul
addr16
mov
cmp
xchg
cmp
xchg
stos
dec
shll
push
jmp
jne
sub
aad
insb
pop
and
inc
sub
fs
sub
xor
jge
cmp
cltd
jle
bnd
jnp
iret
test
push
mov
nop
cmp
dec
mov
xchg
xchg
pop
in
or
filds
mov
out
fnstcw
inc
shll
les
cli
icebp
rorb
shl
stc
scas
push
inc
in
jno
mov
jmp
inc
push
cmpsl
mov
cmpsl
jmp
and
pop
dec
adc
es
call
mov
xchg
lea
adc
aaa
add
in
lcall
ret
rolw
xchg
jnp
fimuls
jnp
repz
or
je
repz
jmp
cmpsl
jns
subl
inc
rolb
push
adc
add
xor
leave
pop
mov
cli
sbb
xchg
lahf
mov
repz
push
fiadds
inc
loopne
or
or
push
stc
les
jle
cs
leave
xchg
cmp
jno
jnp
nop
adc
inc
add
inc
cmpsl
xchg
jnp
push
add
dec
xchg
inc
mov
dec
mov
push
adc
pusha
test
jae
push
rcl
lock
xchg
insb
aaa
ljmp
jo
mov
pextrw
movsl
add
and
jmp
arpl
push
add
test
inc
jne
cld
jmp
mov
adc
inc
dec
sbb
imul
daa
lea
xor
push
mov
movsl
adc
xchg
dec
into
pop
add
stc
jae
inc
fidivrs
repz
xor
push
add
push
sbb
jae
mov
add
push
xor
mov
into
adc
addr16
jl
lret
mov
cmp
mov
cs
inc
shl
daa
xchg
roll
sub
fcoms
xchg
jp
dec
mov
mov
popa
and
cld
xor
dec
jp
in
in
xchg
dec
mov
std
inc
mov
push
out
les
mov
sbb
mov
pusha
lock
mov
pop
gs
in
outsl
aas
cwtl
loop
adc
gs
xchg
out
mov
aam
ja
std
lods
and
xchg
mov
and
decb
mov
or
shll
mov
sbb
iret
lret
and
or
repnz
notb
lahf
xor
popa
pushf
scas
jge
xchg
dec
popf
mov
pop
dec
lea
shll
arpl
bound
std
scas
lds
jno
iret
mov
or
movsl
lcall
jo
or
sbb
es
push
mov
out
xor
cli
daa
pop
mov
mov
mov
repnz
fs
movsb
scas
mov
jns,pt
lcall
dec
push
adc
dec
cmp
xchg
test
testl
punpckhwd
mov
push
int
mov
jmp
js
sahf
jg
les
fildl
cmp
add
mov
add
sbb
movsl
inc
lea
sbb
fwait
das
pop
mov
andl
dec
push
fisttpll
cmp
leave
push
insl
pusha
sbb
inc
ret
lcall
mov
ret
sub
adcb
inc
ds
lods
mov
and
cmp
popa
popf
inc
pop
or
inc
inc
lea
test
mov
cmp
add
icebp
dec
jbe
rclb
fcoml
cmpl
data16
rol
dec
test
lods
jns
pop
mov
xor
sub
jge
push
mov
dec
and
push
inc
ljmp
sub
imul
addb
adc
fwait
call
xchg
jnp
out
xor
xchg
clc
inc
mov
aaa
pop
arpl
push
lret
lods
mov
movsl
das
stc
daa
add
mov
inc
nop
insb
add
out
ret
mov
jns
xchg
inc
in
add
lahf
cmp
adc
xor
outsb
rol
imul
mov
sbb
or
push
xchg
sarl
pop
xchg
inc
ret
add
mov
rorl
cmc
js
enter
and
out
cwtl
mov
fidivrl
adc
xchg
jle
adc
xchg
ret
xlat
cmp
push
inc
lcall
aam
mov
jl
arpl
loopne
cmpsl
icebp
mov
and
out
or
and
ss
fstps
ficompl
adc
sbb
nop
popa
clc
sbb
xchg
js
clc
imul
mov
mov
in
subl
fstps
sub
sub
daa
insb
dec
and
fdivl
cmp
outsl
mov
sbb
cmpsb
fists
xchg
outsb
arpl
adc
dec
stos
inc
sbb
test
lods
push
cmp
imul
mov
mov
jns
push
cmp
in
movsb
push
ss
jae
mov
cmpsl
les
int
lods
cmp
adc
hlt
push
lock
arpl
insb
mov
jmp
add
jp
stc
aam
in
orb
and
std
sub
xor
loope
add
pop
adc
imul
daa
test
leave
xchg
cs
adc
or
cltd
nopl
xor
ret
enter
lret
jle
pop
mov
pushf
icebp
pop
adc
out
and
call
fadds
test
in
mov
int
jae
movsb
cwtl
push
in
pop
adc
mov
jmp
popf
lock
add
sbb
mov
mov
and
repnz
jg
push
inc
xor
or
fisubrl
jl
out
divb
sbb
out
pop
adc
cmp
shlb
mov
cmp
mov
cmp
adc
pop
not
mov
mov
aaa
mov
mov
sbb
sbb
adc
jp
shlb
mov
xor
mov
pop
mov
mov
out
sub
pop
adc
sbb
insb
cmp
sbb
out
pushf
shll
push
cmp
sbb
cmc
pop
adc
shrb
adc
lods
lcall
jo
sub
loopne
xor
pop
adc
data16
or
adc
sub
jge
out
xchg
hlt
aaa
mov
cs
inc
in
push
or
shl
fwait
das
fs
adc
push
cmp
xchg
rcrl
je
xchg
sbb
pop
mov
push
loopne
adc
mov
pop
cmp
jle
add
enter
jmp
in
pushf
stos
mov
loopne
adc
les
jo
dec
pop
mull
mov
fnstenv
scas
add
ffree
cmp
ja
or
adc
lahf
cli
xlat
cltd
cmp
and
push
lret
repz
insl
or
cmp
data16
les
or
adc
lret
sbb
xchg
xchg
int
mov
leave
sub
jp
and
or
adc
bts
cmpsb
mov
stc
daa
pop
inc
out
pop
xor
shll
adc
ret
mov
push
int
sub
inc
xchg
push
and
cmp
pushf
fsubl
sbb
push
jp
sbb
adc
xlat
cs
xor
jae
fs
or
imul
push
sbb
or
adc
push
int3
sub
jg
mov
jmp
mov
mov
adc
pop
pop
xor
adc
fcmovnbe
andb
mov
jge
adc
mov
cwtl
fildll
in
sti
pop
adc
mov
and
daa
ja
fbstp
pop
cmp
cmpsb
mov
pop
and
xor
outsb
jne
mov
mov
imull
iret
add
stc
push
mov
jmp
les
or
icebp
fimuls
stos
pusha
mov
sub
cmc
mov
lea
jbe
sub
inc
xchg
roll
adc
js
es
adc
jecxz
repz
fwait
cmp
outsl
cmp
pop
faddl
or
sub
into
stos
or
aam
and
js
dec
orl
sbb
jl
add
or
imul
shrl
daa
popa
clc
sub
mov
loopne
dec
pop
mov
sub
fstps
call
cmp
popa
or
mov
push
xor
test
mov
mov
dec
sbb
test
dec
inc
test
inc
jns
add
mulb
xchg
test
xor
push
push
shll
movsb
popf
mov
xor
je
scas
mov
imul
clc
push
pop
sbb
push
sub
xchg
adc
inc
nop
mov
pop
cs
scas
sbb
test
inc
imul
inc
mov
cmp
inc
mov
mov
cmp
adcl
xor
das
sahf
adc
or
lret
icebp
loop
aaa
lods
pop
jecxz
add
or
jg
lods
inc
mov
sub
push
arpl
dec
in
jne
iret
in
dec
mov
mov
sbb
movlps
insb
dec
scas
icebp
loop
pushf
mov
pop
cmp
incl
les
cmpsl
inc
mov
ss
pop
repnz
pop
jmp
push
iret
sahf
cmp
out
int
xor
loop
jb
sbb
movb
cs
vpmulhuw
in
dec
out
repz
in
mov
fcoml
sbb
insb
push
cmp
mull
mov
stos
lret
mov
iret
adc
or
xor
filds
call
loope
ja
sbb
sar
xlat
movsb
lret
pusha
ret
xchg
out
sbb
push
lock
push
inc
fstps
in
insb
jmp
push
out
mov
xor
xchg
cli
out
pop
or
stos
inc
mov
xor
loopne
mov
popf
add
mov
dec
mov
out
sub
mov
xor
xchg
icebp
pushf
fisubrl
pop
mov
cmp
test
mov
mov
lcall
cmp
out
inc
mov
pop
out
fstl
out
out
mov
movsb
sbb
jbe
cld
insl
pop
js
jecxz
addl
pop
mov
push
or
aaa
cwtl
push
out
loopne
sbb
adc
test
mov
sub
lcall
daa
xchg
push
movsb
inc
cli
cmpsb
outsb
enter
dec
lret
push
lcall
jp
je
xor
or
popa
fdivrs
push
jno
or
mov
imul
mov
mov
jbe
shlb
addr16
or
fwait
or
sbb
mov
lahf
push
mov
out
push
outsl
adc
mov
mov
fiadds
insl
out
fbld
xor
push
lock
scas
xchg
xchg
adcb
and
mov
push
ja
lea
dec
push
adc
or
adc
bound
inc
push
or
push
mov
cmc
xor
cltd
mov
push
adc
xor
mov
stos
jb
mov
adc
mov
sbb
pusha
cld
xchg
mov
inc
pop
or
inc
in
addb
fucomip
iret
dec
dec
and
aaa
xchg
mov
int
fxam
out
in
fistps
cli
dec
popa
jae
shrl
inc
int3
xlat
add
mov
loope,pt
inc
pop
testl
mov
aad
lret
daa
mov
sbb
add
xchg
cmp
pop
fsubs
fmuls
dec
and
jmp
push
sub
rcrb
call
lahf
lods
in
cmp
jnp
mov
push
mov
pop
aad
push
adc
cmc
push
adc
addr16
addr16
dec
sub
addr16
adc
ret
mov
xchg
cmpb
or
jno
lcall
add
cmp
mov
mulb
adc
negl
jo
adc
and
leave
and
rorb
push
cwtl
fs
adc
push
negl
mov
das
pop
out
push
cmpsl
inc
or
pushf
push
iret
repnz
pop
sti
pop
mov
adc
or
test
push
sbb
stos
inc
ficoml
in
xor
mov
push
addr16
shrl
push
cs
out
push
adc
xor
xor
daa
mov
lock
pop
sar
xor
push
nop
ja
das
xchg
dec
dec
mov
xor
mov
aaa
xchg
inc
pop
inc
push
out
inc
push
rorb
push
cmp
fs
ja
je
sub
jns
push
movb
lcall
insb
mov
mov
cmp
lock
sahf
xchg
or
fldt
push
inc
push
out
es
push
dec
ret
cli
pop
imul
mov
dec
push
adc
movsb
mov
imul
dec
loop
loop
arpl
or
lea
loopne
int
scas
imul
ja
sbb
sti
pushf
iret
add
xchg
loop
insb
push
inc
mov
repnz
cmp
dec
sub
dec
jne
sub
comiss
and
outsb
inc
push
or
xor
or
in
pop
ss
mov
dec
sub
jbe
or
mov
lahf
cmp
lret
and
push
rcrb
or
ds
and
insb
or
mov
xor
add
ja
lcall
iret
je
xchg
cmp
lret
cmp
xor
pop
mov
out
lcall
mov
jmp
out
int3
mov
push
addr16
pop
fdivrs
and
repz
out
lea
mov
ljmp
loop
add
cmp
lea
mov
rorb
or
out
negl
sti
mov
imul
jno
ds
mov
out
int
ss
dec
push
mov
mov
sub
pop
cmp
movsb
mov
sbb
int
addb
inc
fnsave
cmp
mov
in
xchg
inc
leave
or
pop
aaa
fdivr
mov
loopne
xor
loop
dec
add
sub
and
rorl
dec
inc
sub
faddl
outsl
mov
lock
outsb
adc
jbe
push
mov
mov
pop
pusha
mov
mov
popf
xchg
insl
out
and
fiadds
and
sarb
push
xchg
add
gs
adc
push
push
and
jne
and
mov
and
pop
xchg
pop
inc
int
add
mov
mov
cmpsl
pop
stc
invd
movsb
out
or
repnz
subb
mov
in
fists
sbb
aas
arpl
xchg
test
sbb
in
test
movb
aas
aad
out
hlt
fisubrl
int3
clc
inc
sarb
in
imul
mov
aaa
and
xchg
sub
jbe
daa
cmpsl
insb
psllw
mov
test
ja
add
mov
pop
and
in
leave
lds
outsl
nop
inc
sahf
push
jg
or
xchg
daa
hlt
mov
cmp
jo
shrb
dec
inc
fcompp
mov
mov
sbb
clc
testb
pop
aam
lods
nop
sub
test
int
push
movl
adc
add
or
in
and
scas
in
cmp
clc
out
ljmp
rol
sub
mov
adc
aad
repnz
adc
out
jle
insb
and
pop
cmovno
lock
movsl
hlt
and
je
dec
daa
push
add
scas
adc
mov
jmp
pop
xchg
mov
pushf
fcmovnbe
outsb
js
xchg
xchg
lret
jne
adc
lock
inc
cmp
mov
inc
jns
fsubrs
xlat
jnp
mov
ret
rcrb
insb
pushf
push
and
fsubl
call
out
or
jo
xor
into
pushf
cmp
sub
orl
ja
add
pop
mov
ret
outsb
jge
xor
ret
out
and
aas
je
xchg
pop
cmp
rclb
mov
lret
or
lret
push
push
inc
sbb
arpl
test
and
xchg
stos
push
fs
into
sahf
cmp
push
inc
lock
lret
les
inc
pop
ret
ficoml
inc
push
cmc
cmp
or
pop
mov
or
xor
cmpsl
sub
mov
mov
cmpb
in
xor
push
mov
jge
in
mov
adc
dec
rol
pushf
dec
out
inc
or
dec
cmp
insl
dec
lods
push
sub
dec
jb
ret
sarl
fisubrs
and
cwtl
dec
and
sub
mov
sbb
push
or
dec
shlb
dec
adc
mov
cmp
mov
cmp
into
fcompl
xchg
cli
pop
adc
scas
adc
popa
inc
inc
add
fwait
cld
mov
cltd
stos
ret
ja
sbb
push
or
fcomi
dec
pop
ret
fnstsw
loopne
loop
fistpll
and
ret
outsb
es
je
aam
inc
out
pop
adc
sub
xor
xor
setnp
or
xchg
sbb
mov
pop
adc
in
push
fs
adc
push
cmp
xchg
rcrb
push
sbb
mov
xor
xor
xchg
pop
mov
stc
add
shll
jmp
jmp
sbb
arpl
adc
jno
or
xchg
fdivrs
iret
aad
inc
popa
xorl
out
adc
jae
loop
sbb
js
pop
testb
clc
jnp
popf
jp
test
cmp
lods
repz
adc
push
inc
out
push
cmc
jne
or
or
popa
bound
adc
pop
or
imul
out
outsb
jbe
loopne
or
mov
test
lret
hlt
repnz
adc
push
inc
das
mov
xchg
mov
mov
hlt
lcall
loopne
lock
adc
lea
repnz
xor
jae
inc
push
repnz
scas
xorl
rcll
lret
gs
les
mov
outsl
cmp
push
fstl
push
push
mov
inc
jno
sbb
into
add
fs
push
pop
iret
outsl
or
xlat
mov
dec
cmp
adc
aas
mov
jbe
inc
sbb
push
and
sarb
inc
and
out
sub
pop
ss
and
hlt
pop
push
push
and
lcall
adc
or
lcall
xor
inc
popa
add
jae
test
push
arpl
mov
sub
xchg
pop
js
adc
mov
inc
fimuls
xlat
movsl
sbb
clc
testb
iret
and
sub
jecxz
add
fildl
loopne
mov
scas
lea
fidivl
test
pop
mov
mov
fwait
jbe
jl
test
ljmp
inc
daa
aas
cmpsl
dec
nop
jo
or
adc
clc
cmp
stos
ds
cmp
push
andl
jecxz
jnp
pop
mov
divps
ds
repnz
hlt
sbb
add
add
fldl
dec
push
adc
imul
inc
and
sbb
add
aad
inc
fcomip
mov
ret
and
les
mov
mov
mov
dec
icebp
xor
inc
iret
cwtl
or
cmpl
xchg
faddl
jg
push
andl
movsb
jmp
xor
jle
insl
push
call
mov
movsb
clc
movsb
enter
shrb
cs
int
sbb
add
xchg
stos
and
stos
xor
cmp
loop
ljmp
dec
mov
lret
outsb
mov
shlb
inc
inc
dec
in
push
mov
scas
cmpsb
int3
shr
imul
push
push
data16
lock
xor
jne
mov
aaa
je
shll
fldcw
push
adc
in
xchg
fists
mov
pop
inc
js
cld
cld
test
dec
dec
mov
sbb
xchg
or
xor
fwait
pop
xlat
popf
cmp
and
add
mov
mov
add
adc
jae
or
add
loop
lret
mov
ljmp
inc
ljmp
pushf
push
push
mov
gs
sbb
call
push
pop
pop
aad
mov
ret
xor
xor
push
pop
fdivs
arpl
rcrb
aam
nop
je
popa
mov
mov
int3
sahf
inc
lret
lock
bswap
sbb
push
pop
jmp
fsubp
repnz
pop
push
push
mov
sbb
inc
cmp
pop
xchg
mov
cltd
adc
or
mov
fldt
leave
inc
lret
dec
mov
sbb
dec
inc
mov
sbb
xchg
or
rclb
sbb
gs
pop
rol
mov
inc
gs
mov
cmp
mov
pop
test
pop
adc
xchg
xchg
sub
jg
pusha
or
out
stc
movsl
int
dec
sbb
adc
xchg
js
lret
push
pusha
ss
int3
push
and
lret
xor
nop
or
icebp
orb
popf
mov
mov
push
mov
dec
out
push
leave
cld
pop
xchg
xlat
or
fistl
dec
ficomps
call
lahf
dec
mov
dec
sub
mov
xchg
cltd
xchg
dec
sub
lods
jns
push
movsl
aad
cmp
mov
xorb
push
and
mov
sbb
mov
pop
adc
mov
push
das
test
sarl
in
pop
fsubr
pop
adc
movsl
jno
or
or
sti
pop
pop
and
jb
inc
adc
popf
out
xchg
mov
fidivs
stc
sub
aas
dec
enter
flds
mov
mov
movsl
popf
pop
mov
mov
or
outsl
icebp
push
into
jae
and
push
sub
mov
push
dec
stos
mov
inc
cmp
cld
popf
daa
les
and
cmp
loop
int
pop
dec
jge
add
sub
loop
stc
js
adc
and
jae
inc
cltd
int3
lock
push
mov
cmc
sub
push
out
pop
adc
sbb
mov
rorb
bswap
xor
aam
pop
mov
fstpt
sub
shr
jno
xchg
pop
xchg
adc
jl
push
dec
dec
cmp
sbb
push
mov
mov
xchg
jl
sbb
jb
test
test
fisubs
shlb
pop
jbe
or
ret
mov
xchg
sarb
mov
rolb
ja
subl
dec
xchg
adc
dec
dec
loop
adc
dec
adc
ss
divl
leave
outsb
mov
sub
cs
dec
push
rorb
fsub
sbb
jecxz
rcrl
mov
xor
xchg
mov
lods
stos
sub
pop
addr16
test
dec
push
adc
pushf
cmp
jmp
fdiv
pop
adc
scas
xor
add
or
leave
iret
pushf
mov
mov
cmp
fs
fmull
das
mov
loope
lcall
out
pop
inc
js
mov
pop
jmp
out
cmp
add
xchg
mov
loope
adc
or
mov
push
arpl
pop
jb
sub
and
xor
lea
mov
adc
js
mov
inc
mov
dec
dec
gs
add
mov
loopne
sti
pushf
lret
in
jne
insl
pushf
mov
mov
sahf
lcall
rcl
xor
jmp
adc
sarb
ret
fnstenv
icebp
sub
and
aad
xchg
jle
jg
daa
mov
sub
and
xlat
fcmovb
and
sti
scas
ret
sahf
inc
inc
jno
mov
xor
movsl
adc
mov
loope
xchg
fistpll
je
adc
ficoml
pop
xchg
or
lret
sbb
pop
xor
jecxz
cli
xor
mov
push
pop
insb
scas
xor
iret
sahf
xchg
outsb
jle
xor
leave
sub
and
dec
push
adc
hlt
cmp
cmpsb
jp
dec
fs
mov
subl
mov
or
repnz
imul
add
or
mov
add
rcrb
loop
jo
pushf
dec
lret
leave
or
xor
push
lock
sub
out
pushf
shlb
ret
xchg
mov
dec
lea
xor
dec
iret
or
xor
adc
sbb
jmp
cltd
add
xchg
lahf
pop
jno
mov
xchg
int
ds
dec
push
adc
lret
pop
mov
insl
stc
adc
cld
xchg
dec
lcall
push
insl
jge
adc
dec
movsb
mov
jne
outsb
or
dec
insb
and
inc
jl
out
jecxz
jnp
fwait
std
xor
jp
pushf
pop
repz
inc
ret
jmp
mov
push
hlt
or
pop
ds
push
jne
xor
popa
jbe
xchg
xor
and
sbb
outsb
push
out
adc
repz
imul
test
mov
push
sbb
sbb
in
data16
xchg
leave
lcall
mov
jle
cmp
and
or
xor
outsb
lret
cs
mov
push
adc
dec
repnz
push
call
add
stc
insb
xchg
imul
dec
cs
jl
push
adc
outsl
je
push
adc
pop
mov
pop
dec
jmp
jle
popf
add
add
and
lods
inc
xchg
stos
inc
xor
test
and
mov
lock
je
xor
test
pop
mov
repz
cmpsb
jmp
fisubrs
pop
xor
outsb
scas
outsl
mov
jns
insb
push
inc
daa
imul
out
pop
mov
sbb
xor
xchg
imul
push
stos
cmp
ret
lret
pusha
repnz
movsl
mov
test
dec
push
adc
mov
sarl
pop
aaa
popf
mov
xchg
and
mov
imul
out
adc
sub
jmp
test
push
je
das
aas
mov
or
dec
push
mov
cli
es
jnp
jno
xchg
andl
es
fdiv
dec
mov
xor
jg
mov
out
pushf
xchg
sbb
aad
int3
or
and
or
jb
inc
push
pop
push
and
repz
hlt
adc
popf
mov
jns
jno
inc
mov
test
sbb
inc
sbb
inc
fwait
les
nop
je
add
xchg
sbb
call
fstenv
sti
das
xor
sbbl
and
imul
dec
push
lock
dec
push
adc
imul
loope
lea
je
lods
scas
inc
ficoml
cld
insl
xor
out
adc
outsl
sti
das
sub
repz
testl
xchg
in
ds
xor
jmp
loop
jge
loopne
ja
loope
jmp
inc
push
call
xor
lea
xor
push
cmp
and
adc
pop
dec
inc
mov
xor
imul
outsb
xchg
jo
jle
test
das
xchg
sti
je
push
adc
mov
stos
and
shll
inc
mov
test
mov
mov
lock
and
jns
faddp
mov
jns
es
int3
mov
mov
rcrb
lret
jo
daa
stos
or
call
inc
jno
cwtl
xchg
les
sbb
sub
sbb
and
test
pop
cmp
out
and
ret
xchg
sbb
sbb
push
adc
arpl
rcrl
insl
outsl
stc
xchg
xor
push
icebp
dec
jp
xchg
scas
mov
push
adc
push
adc
es
sub
sub
push
dec
inc
stc
lds
gs
xchg
jle
xchg
sqrtps
ficoml
push
aas
inc
shll
and
inc
pop
dec
mov
mov
out
mov
jne
cmp
xor
fadds
std
mov
daa
sub
lea
dec
add
pop
das
rorb
or
push
fstps
jno
int3
into
mov
inc
roll
cmp
mov
jnp
or
sub
mov
ss
aam
out
cmp
lret
push
hlt
adc
cwtl
xor
lret
fyl2xp1
fs
pop
pop
cwtl
adc
push
mov
jmp
mulb
sti
dec
jb
loopne
pop
test
pop
es
std
push
enter
das
push
test
cmp
clc
xchg
in
sbb
adc
inc
cmp
cmpb
out
xor
pop
dec
mov
scas
xor
cs
add
dec
push
adc
xchg
push
xor
roll
pusha
inc
push
jno
je
xor
cwtl
ljmp
rcrb
aad
push
dec
fsubs
xor
mov
add
inc
push
xchg
jae
clc
pusha
dec
inc
loope
adc
outsl
ret
inc
shlb
fs
lcall
or
clc
mov
addr16
sbb
xor
jb
dec
push
adc
daa
gs
push
xor
aaa
mov
mov
or
pop
inc
sub
mov
lock
cmpb
mov
packuswb
xor
xor
bound
mov
pop
push
incl
lahf
xorl
cmc
xchg
daa
adc
pop
cmp
or
mov
pop
in
in
sbb
xor
repz
sub
adc
setno
in
mov
aam
sarl
xor
roll
xchg
pop
pop
add
cmpsl
jnp
xchg
scas
mov
aam
add
roll
adc
xchg
aas
push
pop
and
adc
sbb
movsl
mov
jo
shr
mov
repnz
push
mov
mov
sarl
paddusb
adc
mov
dec
fdivrp
adc
add
mov
scas
insb
into
push
adc
lds
rclb
stos
mov
outsl
js
push
xor
ss
mov
inc
pop
push
mov
xchg
xor
adcl
xor
cwtl
inc
sub
mov
out
pushf
inc
outsb
call
xor
out
dec
push
adc
add
pushf
mov
push
mov
lock
jbe
loopne
rolb
mov
arpl
stc
push
xchg
js
loop
add
pop
cs
jae
iret
call
cmpsb
lcall
sbb
pop
push
cmp
mov
pop
in
add
jns
sub
xchg
or
mull
pushf
cmp
fs
js
loop
icebp
cwtl
cs
mov
popf
mov
sarl
cmp
or
pop
jge
daa
xchg
outsl
xor
insl
movsl
pop
mov
mov
xchg
inc
lcall
xchg
int
jge
push
vpunpckhqdq
mov
cmp
lcall
push
mov
repz
cs
jae,pt
iret
xor
insl
sbb
out
addl
push
adc
in
cwtl
lret
icebp
cwtl
cli
jmp
movsb
fcmove
leave
mov
repnz
sbb
xchg
xor
push
loop
lahf
loope
out
add
jns
fs
mov
bound
dec
lret
or
cs
sarl
add
repz
lcall
sbb
ret
xchg
imul
sahf
cmp
adc
lcall
pop
es
cmp
push
hlt
out
sahf
xchg
outsb
add
int3
lcall
inc
mov
dec
dec
enter
add
mov
cmp
cwtl
enter
inc
lea
in
mov
cmp
mov
sarl
inc
clc
icebp
in
aaa
rcrb
or
xor
lcall
pop
push
sub
inc
loop
mov
loope
mov
cmpsl
ss
fdivrs
cmp
mov
daa
push
ret
xchg
xor
xchg
dec
add
dec
test
fxch
xchg
cltd
fsubr
mov
sbbb
inc
or
pop
test
clc
push
imul
scas
mov
rep
jecxz
or
stc
mov
lods
scas
pop
ret
xchg
xchg
aas
dec
mov
xor
dec
cltd
fwait
jmp
addb
inc
xchg
sarb
sbb
loop
icebp
pop
adc
lods
cli
int3
lret
or
pop
mov
jg
shrl
jno
jno
in
test
addl
aaa
xchg
das
scas
xchg
pop
pop
sarl
add
mov
inc
incl
fmuls
lahf
add
rcrl
add
cs
call
stos
sub
adc
das
mov
testl
pop
xchg
xor
stos
jbe
and
pop
je
or
push
cmc
pop
push
std
cwtl
xlat
mov
xchg
cmp
xchg
shl
or
xchg
adc
rcrl
jb
mov
push
stc
push
mov
popa
aad
iret
pushf
or
addr16
pop
or
jle
test
stos
jge
pushf
or
je,pt
or
or
push
push
adc
scas
testb
or
enter
mov
ss
jp
push
jge
into
ja
adc
dec
loop
shll
scas
add
xor
ret
dec
dec
push
adc
in
push
cli
push
or
mov
in
je
pop
sbb
cmp
cmp
push
rcrb
stos
shr
pushf
jns
mov
test
aaa
xor
add
cwtl
add
cmp
stos
or
ss
mov
or
mov
cli
bound
sbb
or
adc
dec
mov
in
sar
stos
outsb
dec
in
push
dec
add
lds
fs
popf
cmp
sarl
add
mov
adc
icebp
test
mov
cs
cmp
xor
inc
sbb
out
adc
aad
cmc
and
jnp
mov
push
orl
mov
jnp
push
in
push
sub
insl
test
dec
mov
cmc
sete
inc
adc
inc
mov
sbb
jnp
jne
ds
out
sahf
cmp
sbbl
into
pushf
mov
mov
mov
mov
pop
mov
cmp
or
xor
xchg
xchg
inc
mov
and
fisttps
xchg
lahf
or
cs
push
fs
fstps
mov
mov
push
xor
cmc
les
jae
mulb
test
std
fstpl
inc
mov
xor
push
push
cmp
mov
mov
in
cs
lock
sahf
xchg
inc
dec
in
cmc
xchg
mov
arpl
cwtl
ret
icebp
ja
push
jmp
pop
int3
pusha
sub
repnz
out
std
lods
pop
push
arpl
push
scas
js
loop
stc
mov
aas
mov
dec
int
xor
fwait
adc
sbb
cmp
xor
loope
xorb
adcl
mov
arpl
insb
inc
out
icebp
loop
and
sahf
xchg
scas
sahf
inc
inc
xor
xor
inc
lods
add
sbb
repnz
fldcw
jns
fwait
dec
mov
sbb
sbb
out
xor
jge
jns
jecxz
jl
xchg
jns
or
pushf
ds
jae
and
sbb
ss
lea
popa
lds
outsb
mov
mov
mov
adc
sarb
push
inc
push
outsb
cmpsl
inc
mov
in
or
push
das
das
jp
jmp
fwait
ds
adc
pop
jb
cmp
mov
or
loopne
cmp
stos
jmp
leave
xchg
fwait
jg
mov
aad
add
aad
repz
in
sub
jns
mov
js
inc
push
xchg
aam
call
dec
xchg
roll
dec
mov
scas
popw
orb
aad
and
or
lods
test
jae
out
and
mov
aas
cld
sbb
fcomp
sub
push
out
jmp
sub
rcrl
cmpsb
push
insb
mov
adc
outsb
cmp
mov
dec
push
out
adc
loope
sahf
push
push
adc
push
dec
pop
leave
popa
pop
xchg
pop
iret
in
or
enter
fisubrl
jns
push
mov
lret
or
jo
rcrl
add
add
fdivl
popf
shlb
ret
and
inc
xlat
or
jp
sub
cltd
add
xchg
fisttpl
adc
inc
jle
adc
test
mov
xor
ja
jg
sahf
cmp
pushf
mov
out
adc
stos
aaa
repnz
jo
inc
mov
xchg
in
jne
popf
add
adc
adc
cmp
int3
mov
in
xor
sbb
jl
in
or
inc
and
sar
inc
in
pop
xchg
fdivl
mov
std
cmp
repnz
sbb
aas
push
mov
repz
adc
sub
push
mov
test
sbb
test
aaa
test
and
incl
sub
sahf
cmp
add
cwtl
cmpsl
pop
fstp
mov
mov
and
push
add
outsb
sbb
iret
pop
mov
adc
or
mov
inc
adc
inc
inc
sbb
mov
in
mov
or
sub
cmp
sub
scas
shl
ror
xchg
outsl
jp
pushf
repnz
cltd
das
pop
mov
cmp
inc
mov
fs
arpl
int
or
shll
cwtl
mov
inc
test
lods
sub
iret
sahf
inc
jle
insb
adc
mov
cs
cmp
mov
jns
std
cld
loop
mov
sbb
cmp
xor
xor
mov
cs
cld
jecxz
into
pushf
cmp
pusha
xchg
sbb
pop
xor
je
out
lea
adc
cmp
dec
shrb
icebp
enter
cmp
pop
into
mov
and
test
movsb
push
add
int
pop
jmp
fdivrp
add
xor
mov
mov
aaa
push
adc
jmp
ret
push
cmp
mov
or
push
adc
dec
inc
mov
jmp
outsl
xlat
in
lds
hlt
stc
xor
insl
or
add
mov
xorb
rorb
in
sahf
inc
lret
lock
mov
pushf
iret
pop
cmp
loop
popf
ljmp
sbb
adc
inc
lret
cwtl
mov
daa
mov
ret
imul
scas
ss
cmp
arpl
inc
ja
into
pushf
sarb
push
mov
mov
xor
xchg
jne
inc
sub
xor
aam
pop
inc
inc
jb
mov
fnstcw
jae
jno
fldenv
sahf
sbb
addr16
sbb
jge
cwtl
and
stos
mov
pop
adc
xor
add
xchg
sub
test
inc
mov
ficoms
push
push
mov
dec
add
inc
mov
add
jp
das
test
sti
jmp
lock
stos
jbe
push
mov
pop
pop
dec
stos
aaa
fst
mov
mov
aad
xor
xor
jns
jne
adc
mov
inc
arpl
xchg
sub
push
lret
lea
mov
xor
xchg
mov
dec
mov
scas
pusha
sahf
mov
inc
sbbl
and
pop
sub
das
rolb
xchg
mov
push
adc
sub
rcrb
sbb
ds
mov
ja
clc
in
fidivs
in
test
repz
xchg
out
adc
adc
faddl
mov
gs
xchg
adc
in
into
rep
lahf
fistl
mov
addl
scas
adc
xchg
jmp
out
sub
jmp
stos
mov
fwait
cld
test
pop
add
or
mov
mov
pop
push
pusha
cmpb
jmp
jns
aas
inc
adc
cli
adc
push
mov
xchg
fcomip
cmc
es
rol
push
jmp
inc
add
es
mov
mov
arpl
pop
adc
out
shl
sbb
add
jmp
xchg
shll
adc
push
jmp
test
push
cmpsl
push
cmp
not
lods
sub
push
jge
not
pusha
adc
sub
pop
aas
mov
adc
scas
test
loope
lods
cli
push
jp
je
push
push
push
add
add
xor
movsb
ret
shlb
ja
jle
arpl
adc
fstl
push
fwait
scas
fsubrl
push
addr16
push
sub
in
or
adc
xor
repnz
mov
mov
andl
ret
xchg
mov
lcall
sbb
arpl
testb
push
sbb
push
pop
cs
sub
jo
in
pop
adc
xchg
lods
cwtl
mov
daa
mov
ret
dec
mov
jecxz
cs
popa
dec
ret
xchg
fbstp
and
or
daa
mov
ret
sbb
out
add
cli
adc
mov
mov
stos
jmp
push
rol
adc
test
rclb
inc
lock
mov
fcmovbe
push
push
jg
arpl
sti
lods
aaa
or
lea
mov
inc
mov
xor
mov
icebp
lods
mov
mov
push
mov
or
xor
mov
lea
out
xchg
or
adcb
push
adc
xchg
cmpsl
scas
aad
xor
rolb
insl
inc
shll
add
pop
xor
push
mov
mov
out
imul
pop
cmp
jne
or
sbb
test
mov
and
mov
dec
mov
jecxz
push
test
add
movsl
push
iret
popf
inc
repz
inc
xchg
movsl
sbb
dec
mov
loopne
inc
test
mov
sbb
dec
shrb
sbb
and
mov
cmp
and
mov
pushf
cmp
fs
or
ret
push
sbb
leave
jnp
mov
cmp
xchg
dec
jo
mov
or
fdivrs
mov
xlat
repz
lahf
xchg
dec
jne
orb
subb
ret
hlt
bound
test
xchg
ret
bound
es
icebp
jecxz
mov
sbb
fmuls
pop
in
mov
inc
dec
cmpsl
test
xchg
mov
or
repz
inc
mov
sbb
sbb
adcb
adc
jg
jecxz
adc
and
or
sbb
pop
outsb
sub
push
adc
mov
lods
fwait
dec
das
push
iret
xchg
inc
rclb
or
sbb
imul
cmp
and
out
mov
rcrl
and
add
ret
dec
cmpl
pusha
mov
aam
loopne
lret
adc
dec
or
push
repnz
push
adc
lods
sti
stc
push
cmp
insl
std
add
dec
icebp
lret
add
repnz
xlat
adc
test
lock
xchg
jmp
push
cltd
in
jbe
cmpsb
xorl
ds
in
jmp
adc
mov
icebp
lcall
pop
inc
in
outsl
pusha
and
pop
pop
inc
in
adc
mov
daa
jnp
jg
xor
mov
insb
dec
cmp
and
jne
mov
fcomi
pop
leave
mov
inc
iret
pop
sub
stos
scas
cmpsl
push
icebp
sahf
aas
int
mov
in
movsb
push
jecxz
add
adc
or
sahf
cmp
aam
insb
xchg
sbb
push
int3
das
mov
mov
daa
mov
push
adc
imul
cmp
push
pop
sub
lods
inc
xchg
mov
mov
jnp
xchg
push
adc
jb
lods
mov
ret
mov
loop
jne
inc
jnp
sbb
mov
inc
rorl
xchg
nop
cmp
mov
test
cltd
push
js
popf
push
std
cmpsl
cmpsb
push
adc
js
mov
mov
test
hlt
sub
int
fstpl
mov
or
mov
fcoml
fdivrs
xchg
mov
xor
stc
lcall
jp
mov
sbb
lock
push
sbb
adc
dec
xor
xchg
mov
movsl
push
jg
test
dec
popl
shll
sub
aaa
push
fisttps
xor
push
or
sub
xchg
cmpsl
int
sbb
and
xchg
xchg
movsl
xchg
push
pop
sbb
arpl
inc
popa
mov
dec
fldenv
scas
sub
lea
insb
mov
push
sbb
roll
xlat
fsubrs
or
xchg
je
inc
lahf
scas
and
ret
push
dec
rorb
jp
arpl
ljmp
nop
repz
push
mov
cli
pusha
loope
mov
push
adc
hlt
je
orb
arpl
and
add
stos
sarb
stc
movsl
or
jnp
iret
loop
jp
xchg
ja
fwait
sbb
push
mov
xor
pop
adc
xchg
adc
repnz
adc
xor
hlt
xchg
loope
dec
int3
sbb
int3
mov
push
adc
popa
ret
add
jge
adc
hlt
stos
xorps
bound
lods
mov
mov
lcall
inc
rcrb
and
push
adc
mov
int3
add
adc
popa
ret
add
xchg
fwait
scas
daa
test
mov
adc
out
pop
jg
adc
ja
out
lret
sahf
inc
jecxz
sbb
adc
sbb
fdivrs
repnz
adc
xchg
aam
xor
xchg
sbb
mov
or
sub
repz
push
xorl
pusha
mov
jno
shrb
xor
lds
and
mov
lcall
ljmp
xchg
inc
jle
pushf
mov
in
xchg
or
ljmp
xor
pushf
mov
outsb
lds
jb
ds
push
mov
and
mov
sbb
inc
loope
push
les
adc
repnz
ret
pushl
divb
dec
repz
push
jb
jae
popa
xchg
pop
sub
push
aam
imul
xor
test
xchg
fnstcw
pusha
inc
outsl
aam
mov
lret
movsl
mov
mov
xor
stos
push
mov
sahf
popf
or
jg
xchg
push
inc
aaa
cmc
fsubr
push
sbb
and
scas
add
push
and
dec
lahf
das
mov
movsb
std
flds
mov
pop
or
xchg
minps
jg
push
outsb
cltd
into
imul
out
sub
adc
push
dec
iret
add
roll
inc
sbb
rcl
cmp
clc
dec
in
scas
ret
add
inc
aaa
rcl
cmp
sarb
loop
fcomi
jo
repnz
sahf
pusha
sub
xchg
clc
aaa
mov
adc
mov
mov
andb
push
pop
jecxz
cmp
sti
push
cmpsb
aad
jnp
sar
jae
jae
push
sub
and
insb
pusha
iret
mov
dec
clc
pop
pop
jb
jno
mov
loope
in
push
iret
cmp
insl
pop
pop
mov
ss
dec
int
movsb
mov
shrb
fiadds
mov
je
inc
nop
arpl
aaa
in
test
std
nop
adc
fstpt
dec
adc
jns
add
and
push
in
js
mov
pop
push
xchg
scas
scas
mov
push
mov
in
push
imul
xchg
push
mov
sbbb
pop
cmp
scas
push
xlat
mov
inc
mov
mov
xchg
sub
mov
push
push
adc
out
dec
mov
enter
outsl
js
inc
dec
xor
mov
or
movsl
stos
inc
jl
ss
jmp
jle
pop
mov
outsb
cwtl
in
xchg
xchg
ret
mov
xor
lock
sbb
popa
fwait
fs
pusha
sbb
lock
dec
mov
clc
pop
mov
cmp
inc
in
xor
fwait
lods
and
std
xchg
ret
aas
dec
dec
scas
mov
and
or
xchg
jecxz
ja
and
jnp
ja
inc
push
mov
jnp
dec
repz
and
out
stos
jb
xor
ss
mov
out
mov
inc
push
call
xor
push
push
adc
loope
pop
dec
mov
mov
sahf
movsb
pusha
ret
xchg
out
push
adc
enter
push
xchg
popl
rcrl
imul
pop
mov
ret
mov
or
cmp
test
out
ss
or
sbb
and
shlb
cmp
stc
sub
loop
cmp
cmp
das
jecxz
push
in
repnz
xchg
cs
sub
cmc
mov
dec
lret
fs
mov
inc
mov
xor
arpl
inc
lret
xor
xor
inc
lcall
sbb
out
lea
ljmp
les
imul
cmp
loope
test
shlb
ret
or
mov
dec
fistpll
ret
nop
ja
add
bound
dec
movl
les
int3
push
mul
pop
out
dec
pop
xor
pop
cmp
out
out
xchg
push
sti
jns
xchg
or
sbb
inc
add
icebp
sbb
fwait
cmpsl
nop
push
push
sbb
out
out
add
cli
mov
mov
ljmp
in
cld
sub
sbb
and
cltd
cmp
rcrb
pusha
xchg
inc
sbb
aam
push
push
adc
and
xchg
mov
in
lret
pop
inc
notb
dec
mov
cli
pushf
jl
lds
mov
jno
pop
call
xlat
daa
loop
cmc
xchg
repz
pop
in
test
mov
cmpsl
cltd
dec
and
sbb
aam
sbb
gs
cld
mov
int
push
repnz
push
xor
call
pop
dec
lock
jnp
cli
cmp
lea
push
mov
into
push
sbb
rcl
lods
cmp
xchg
sarl
std
or
inc
lea
push
loop
fs
xor
bound
shll
sub
daa
cltd
pop
add
xor
lcall
or
fmuls
out
iret
sub
fdivrp
std
ret
mov
nop
js
xchg
fs
mov
jp
sub
aam
jne
iret
or
and
sahf
sahf
sti
cld
mull
lcall
cmp
movsl
sbb
mov
dec
shlb
pop
das
push
mov
add
dec
js
push
lret
out
push
test
mov
xchg
lret
enter
loopne
rorb
test
or
daa
mov
in
dec
aam
out
sub
bound
packssdw
or
mov
inc
stos
adc
iret
or
cmp
xchg
inc
mov
sub
lcall
pop
sbb
mov
jns
shlb
aad
sbb
pop
xchg
xchg
lret
shll
pushf
repz
push
mov
cld
xor
mov
pop
test
adc
ja
cmpsl
scas
jecxz
clc
xor
jns
add
outsb
xor
aam
dec
push
mov
mov
int
test
aaa
adc
sbb
pop
adc
nop
pop
or
dec
mov
stc
xor
in
pop
adc
mov
adc
dec
jl
adc
add
inc
cltd
and
sbb
xchg
outsl
stos
or
je
adc
and
xchg
pop
mov
aaa
loopne
or
rdtsc
and
shl
nop
ds
fcoml
int
fidivrl
xchg
mov
test
adc
loopne
std
sbb
dec
lret
hlt
lcall
inc
lock
xor
enter
adc
xchg
mov
movsb
mov
pop
dec
gs
adc
aad
mov
stc
movsb
xor
icebp
xor
aad
jecxz
or
call
pop
or
or
sbb
stos
out
loope
in
pop
adc
pop
or
fs
popa
ret
add
shl
inc
xor
hlt
pop
adc
jne
or
loop
add
pop
cld
push
xor
push
adc
sbbl
dec
mov
inc
fxtract
dec
cmpsb
xlat
repz
pop
out
xchg
fs
and
leave
mov
inc
inc
mov
lods
pop
outsl
les
mov
jae
pmaxub
cmp
sbb
push
ss
xchg
gs
ja
gs
ja
fs
mov
mov
mov
mov
jmp
aaa
je
shll
mov
dec
or
sti
cmpsl
iret
xchg
jg
xor
js
xchg
or
ss
pop
dec
jne
out
sahf
mov
in
jecxz
lret
adc
pop
mov
popa
cs
ret
pushf
sub
pop
mov
icebp
jno
adc
sub
push
hlt
dec
dec
gs
dec
add
int
xchg
lea
mov
sub
adc
ja
ljmp
adc
push
adc
sahf
dec
not
pop
xor
ret
and
jno
in
int
fistpll
in
xor
test
mov
outsb
popl
pushf
iret
addb
adc
or
inc
sbb
subb
sahf
or
inc
xchg
cmpsb
subl
repnz
sti
hlt
xchg
fwait
lea
mov
gs
sbb
mov
sub
pop
push
fwait
adc
in
stos
test
or
inc
xor
and
out
mov
or
push
add
sti
inc
xor
mov
sub
pop
add
testb
mov
jb
cwtl
mov
daa
jae
dec
sbb
mov
shl
dec
jbe
xchg
and
jmp
pop
inc
add
jl
mov
nop
pop
fldcw
sahf
push
adc
aas
outsb
jle
stos
sbb
sub
sahf
push
daa
outsb
rcrb
std
pop
stos
jecxz
out
adc
popa
or
mov
mov
mov
in
xchg
call
mov
pop
mov
xchg
ljmp
iret
jo
cmp
out
and
mov
and
arpl
add
push
enter
or
sbb
hlt
fmuls
or
cmpsl
sbb
or
nop
int3
insl
jns
push
pop
loop
sahf
or
aam
lods
mov
inc
jecxz
rcll
inc
mov
sbb
mov
mov
mulb
mov
shll
and
loopne
xor
pop
adc
mov
cli
xchg
or
aaa
sbb
test
jmp
insl
mov
push
rclb
arpl
inc
int
jno
movsl
or
test
sub
repnz
dec
and
sbb
nop
xorps
sbb
mov
dec
sbb
push
lods
sub
cmc
jecxz
adc
add
roll
gs
add
jae
push
push
adc
repz
pop
adc
sub
or
pop
adc
lods
xor
push
es
mov
jge
jp
adc
gs
ja
shl
fcomps
ja
fwait
sbb
mov
mov
and
jg
jmp
out
or
or
mov
mov
shr
cwtl
stos
fistpll
dec
mov
cmp
loop
jo
mov
fisubrl
shll
inc
and
movsb
aas
test
movaps
add
jmp
aam
xor
mov
shlb
sti
outsb
xchg
xor
dec
lods
arpl
iret
or
or
scas
cmc
xor
xchg
cmp
sub
iret
ljmp
mov
jle
cmp
xor
and
jg
in
cmp
push
jo
arpl
dec
lret
mov
outsl
cltd
and
enter
push
insb
xchg
pop
cmc
std
cwtl
push
cs
mov
pop
inc
dec
in
lea
shlb
and
sub
out
jmp
mov
fsts
lcall
xor
fld
jbe
xchg
xchg
repnz
and
sbb
shl
fcomps
jge
jno
jle
adc
aad
sti
lods
lret
or
push
jecxz
pop
mov
pop
outsb
sbb
leave
lcall
mov
loope
xchg
xchg
ja
mov
or
movl
mov
cltd
lock
dec
insl
inc
xor
adc
push
in
xchg
inc
jecxz
jp
pop
mov
ret
test
test
test
pop
xor
or
fdivrs
push
xor
and
cmpsb
cmp
mov
push
sub
jle
mov
lcall
xchg
add
adcb
push
lcall
je
and
loopne
out
push
adc
cmp
call
ret
es
jp
sahf
ret
loopne
rol
xchg
out
and
aam
push
lcall
stc
push
add
dec
sbb
out
pop
xor
imul
dec
hlt
lock
out
pop
pop
xchg
imul
push
pop
push
cltd
push
mov
push
push
adc
mov
and
lock
lcall
sub
fstps
inc
dec
and
mov
push
adc
out
push
jecxz
jb
xchg
pop
leave
loope
push
sbb
cmp
lea
enter
mov
fcoms
mov
add
jae
in
xor
cmp
sbb
jbe
insb
ds
lods
int
popf
pop
xor
add
cs
mov
push
rcrl
stos
testb
inc
or
pop
js
mov
int3
aas
mov
cmpsl
test
mov
icebp
adcl
cltd
mov
scas
mov
xchg
jb
cmp
push
adc
push
xor
push
adc
xorl
fdiv
mov
pop
pop
push
out
out
outsb
lock
push
adc
add
fadd
ljmp
clc
imul
imul
mov
pop
shll
mov
fsubs
cmp
pop
divl
sub
iret
je
cmp
arpl
cmp
out
xchg
xchg
out
jle
lcall
in
mov
inc
mov
lock
idivb
stos
out
pop
dec
out
mov
shrl
mov
enter
cli
in
ret
test
sbb
mov
sbb
pop
add
pop
out
xstore-rng
cmpsl
inc
pusha
ret
xchg
mov
xor
shrl
mov
jo
popf
cmp
lds
cltd
inc
cmp
pop
lret
lret
sahf
jbe
repz
call
inc
and
jns
cmp
xchg
js
mov
je
orl
out
loop
mov
xchg
mov
lret
xchg
xlat
hlt
jg
xchg
icebp
loop
std
jne
pop
mov
cmp
repz
cmp
and
inc
mov
push
adc
mov
mov
stc
lods
sbb
adc
add
jnp
xchg
fistpll
push
push
push
icebp
loop
pop
add
pop
push
add
lret
popa
and
mov
fldt
insb
sub
loop
xor
dec
lcall
or
xor
dec
xchg
shll
je
lcall
cmp
sbbl
mov
cmp
in
jns
out
outsl
inc
shl
or
iret
xor
cwtl
mov
js
xchg
outsl
push
add
in
aad
xor
stos
mov
mov
sahf
adc
enter
add
mov
dec
outsb
repnz
mov
aam
sbb
pop
mov
loope
xchg
cs
lock
cmp
adcl
movsb
xchg
mov
sub
ret
mov
scas
push
jecxz
popa
inc
inc
add
mov
mov
es
fisttps
jecxz
mov
out
cmpsl
xchg
icebp
sub
push
wrmsr
arpl
mov
aas
test
pop
fmuls
mov
xor
inc
xor
int
mov
mov
inc
adc
push
cmp
push
pop
mov
icebp
call
xchg
inc
fwait
xor
mov
inc
adc
mov
cmp
mov
push
sbb
jle
outsb
roll
in
add
sahf
repz
sarl
cltd
fs
mov
or
push
ss
dec
pop
lods
jne
mov
and
daa
gs
inc
loopne
sub
adc
dec
daa
push
mov
and
int
jne
jno
jmp
and
sub
popa
cmc
dec
loopne
hlt
inc
std
ret
mov
call
in
ucomiss
adc
mov
xor
ret
insl
insl
rcrl
mov
arpl
lret
insl
stos
cmp
cltd
call
lcall
ja
mov
push
adc
sub
das
clc
xor
mov
lret
or
cmpsl
int3
push
jmp
lcall
data16
jmp
add
pusha
lret
push
adc
in
pusha
mov
inc
or
dec
adc
push
adc
lcall
sbbl
bound
cmp
movsb
mov
inc
ret
out
sarl
and
adc
add
mov
jo
push
stos
out
and
daa
adcl
inc
push
aaa
pop
cmp
mov
in
sahf
call
jp
adc
loopne
xchg
adc
cld
push
fdivrs
add
sbb
hlt
xchg
or
lcall
xorb
inc
add
jge
push
mov
testb
push
aam
in
jae
inc
cld
xchg
sahf
inc
fiaddl
imul
or
notb
dec
pop
mov
or
add
adc
mov
scas
add
lds
in
cmpsb
ja
fs
sbb
jne
inc
sbb
xor
lods
icebp
mov
hlt
mul
jl
arpl
pop
dec
stos
or
xor
into
or
jp
adc
ss
mov
inc
jnp
xlat
mov
subb
and
adc
lcall
push
call
adc
push
adc
add
xchg
jne
dec
mov
sbb
imul
and
ds
dec
lods
test
mov
xor
out
out
mov
movsl
push
jmp
jge
push
or
push
adc
out
pop
add
lcall
push
hlt
push
xchg
xlat
icebp
dec
push
mov
lods
pop
sahf
cmp
add
sbb
xor
jg
pop
xchg
sbb
pop
mov
xchg
add
inc
sarb
xor
aad
lret
and
push
cmp
iret
mov
mov
cmp
push
xchg
stos
test
jmp
pop
ss
iret
xor
xor
mov
jmp
arpl
sti
fs
jl
test
adc
out
push
cmp
xor
outsb
lret
imul
push
sbb
arpl
or
sahf
cmp
add
mov
lret
xchg
cs
pushl
shlb
cmp
dec
add
xor
add
add
js
inc
xchg
into
int3
sarb
push
mov
push
xchg
divb
rcl
xor
shlb
lcall
pop
cmc
adc
js
push
adc
insb
mov
pop
loopne
push
dec
je
ret
outsl
cmp
rorl
pop
in
xchg
sbb
gs
clc
stos
sub
js
out
repz
push
jmp
pop
cmp
adc
pop
aad
aaa
sbb
jbe
and
xchg
mov
pushf
inc
sub
fs
test
daa
jb
sbbl
jp,pt
dec
outsl
and
aas
adc
nop
hlt
loop
adc
push
outsl
movsb
mov
jle
adc
xchg
icebp
sbb
icebp
push
mov
push
fisttps
popa
iret
and
addr16
movsl
sbb
leave
enter
mov
rcll
negb
mov
mov
js
repnz
or
jo
repz
in
add
nop
test
sub
add
pushf
push
test
inc
imul
push
pop
repnz
mov
mov
sbbb
loop
push
push
xchg
lret
push
sbb
mov
adc
lods
faddl
mov
push
cvtpi2ps
in
data16
loop
mov
cmpb
mov
outsl
lret
add
mov
add
pop
pop
push
push
adc
fldt
push
lock
ja
outsb
roll
outsl
xlat
xor
cmc
lcall
cwtl
cmp
push
add
pop
add
ret
add
repnz
add
xchg
mov
cmpsl
pop
mov
xchg
mov
aas
lods
dec
dec
push
cmpsl
aad
or
push
xchg
jae
test
mov
ret
mov
push
jle
jmp
sahf
nop
test
jno
pushf
subb
je
addr16
divb
shr
mov
and
mov
or
mov
pop
std
inc
mov
sahf
dec
int
xchg
jg
mov
xor
aad
push
add
xor
mov
out
popf
scas
dec
cli
mov
xchg
inc
xchg
or
xor
cmp
sahf
or
cld
pop
adc
mov
push
adc
mov
cld
xor
push
ja
hlt
test
mov
neg
icebp
mov
ret
add
inc
pop
addr16
push
jp
clc
dec
sbb
fdivrl
repz
sbb
xor
mov
ret
mov
inc
or
inc
insl
inc
sbb
lahf
pop
mov
loope
xchg
mov
pop
ret
jg
inc
repz
pop
dec
jecxz
mov
adc
push
cmp
mov
push
lret
mov
mov
repz
loopne
push
lret
xor
stos
push
mov
stc
gs
pop
mov
cmp
repz
push
sbb
adc
imul
jae,pt
iret
mov
lock
push
cmp
sbb
arpl
icebp
es
jnp
fbld
sub
repz
movsb
xor
jl
sbbl
mov
cs
adc
iret
sahf
cmp
mov
cs
mov
sti
fs
js
loop
mov
push
mov
outsb
inc
orl
cmp
iret
mov
ret
icebp
loop
stc
in
add
lea
xor
inc
ret
int
and
mov
scas
add
lcall
sbb
push
int
xor
lret
andl
push
insb
inc
fcomip
loop
and
lahf
stos
scas
int
iret
sahf
cli
fiadds
fidivs
pop
mov
outsl
push
cmp
jnp
mov
mov
popf
add
cmp
or
and
mov
sbb
inc
push
cmp
jge
mov
dec
hlt
mov
cmp
add
shll
adc
pop
cmc
sub
adcb
nop
mov
mov
xchg
xor
sti
push
outsl
xchg
sbb
scas
scas
int3
mov
lahf
inc
inc
jae
mov
pop
xor
out
int3
pop
mov
xor
jle
push
test
jge
jp
and
mov
ja
hlt
lods
xor
stc
xchg
cmp
mov
jecxz
ja
fildll
jno
cltd
xchg
popa
iret
xchg
mov
xor
or
push
das
pop
jp
cmp
ffree
out
les
cmp
jle
subb
mov
jne
inc
pop
jl
dec
mov
cs
mov
insb
mov
sahf
js
sahf
aad
or
jge
jmp
cltd
nop
or
xor
sub
daa
pushf
adc
fisttpl
inc
loop
dec
mov
stos
xor
gs
cmp
lods
xchg
pop
sub
xchg
je
dec
mov
mov
sub
out
fs
add
std
sbb
push
sbb
es
mov
push
dec
in
test
jp
shll
call
sub
pop
ja
push
push
adc
xor
mov
lcall
lock
pushf
mov
jmp
call
mov
xor
and
jbe
cwtl
leave
jnp
std
inc
sbb
pop
adc
rol
leave
rcl
aad
cli
in
sbb
movaps
add
in
insb
adc
inc
adc
roll
aas
stos
pusha
lods
test
sarb
mov
push
fstp
test
lret
addr16
jecxz
pop
test
testb
movsl
sub
fdivl
sahf
or
inc
xor
inc
loopne
setbe
xor
cwtl
mov
inc
jecxz
push
cmp
scas
sets
jbe
add
mov
cltd
or
pop
inc
fwait
pop
inc
dec
dec
cmp
mov
out
and
cli
clc
cmpsl
ret
mov
in
js
cmp
mov
movsl
inc
loop
out
or
divps
jb
test
stos
hlt
ds
lock
inc
into
and
cmp
lret
fs
push
add
inc
push
and
jle
sbb
inc
rdtsc
mov
or
pushf
lock
jg
xor
mov
es
push
dec
lret
pop
std
in
mov
xchg
dec
inc
push
icebp
sub
sahf
mov
pop
stos
push
push
adc
sarb
push
sbb
lock
ss
ret
cld
jae
call
int3
jnp
aaa
je
and
or
mov
jmp
pop
pop
xor
repz
mov
addr16
loope
mov
in
dec
test
arpl
jge
popa
inc
jecxz
sbb
in
and
mov
jo
ret
outsl
jb
lds
add
mov
loop
xchg
cs
xor
out
dec
pop
cmp
cmpsl
movl
shrl
add
mov
inc
fldcw
or
mov
or
les
ret
xchg
xlat
and
out
pop
pusha
sub
int
xchg
cmp
jle
into
pushf
cmp
lods
xor
out
xchg
popa
inc
mov
in
fcompl
cld
mov
ds
sub
aad
lds
fs
lcall
inc
pop
sub
mov
push
adc
fwait
push
popf
ret
aad
dec
mov
xlat
mov
cmpb
dec
sub
fisttpl
inc
adc
pop
mov
cs
push
out
mov
ret
out
ror
das
mov
cmp
push
xor
push
push
adc
scas
xor
jnp
or
inc
sbb
loope
sti
adc
xchg
inc
cwtl
pushf
xlat
fs
js
push
adc
mov
sub
ds
test
icebp
xchg
mov
lret
testb
movsl
aad
xor
shrl
cmp
pop
imul
pop
shl
inc
outsb
mov
mov
daa
pushf
or
jecxz
ljmp
inc
mov
inc
mov
push
xchg
call
jnp
pop
iret
in
xor
mov
jmp
and
leave
push
xorl
divb
inc
jb
mov
mov
cltd
iret
pop
push
lods
lret
pop
shl
or
dec
inc
inc
push
fmull
fcoms
xor
mov
mov
push
ret
cld
inc
fnsave
xor
filds
sbb
jne
xchg
pop
int
call
sub
jno
push
adc
aas
push
pop
jno
mov
xchg
cmc
into
cmpsl
clc
dec
push
iret
dec
cmp
js
push
adc
lcall
sti
xchg
jecxz
cmp
and
adcl
lahf
pop
leave
xchg
add
mov
aaa
xorb
and
in
mov
iret
pop
mov
cs
sbb
shrl
test
or
lcall
ja
lock
sbb
mov
js
fiaddl
mov
sub
addr16
or
fbld
sub
clc
pop
xchg
ss
xchg
inc
lcall
rcrb
ljmp
loop
push
pop
inc
inc
and
clc
aaa
sbb
mov
sbb
fstpt
ss
lahf
or
cwtl
hlt
ds
pop
aad
xor
adc
mov
xchg
mov
mov
cs
sbb
lcall
cmp
adc
hlt
mov
push
adc
jbe
jle
fimuls
and
lret
pop
add
mov
imul
movsl
jl
aam
fnstcw
stos
mov
cmp
mov
adc
mov
ljmp
inc
and
jp
hlt
add
ja
mov
push
xlat
inc
adc
add
and
scas
mov
dec
mov
aad
cltd
mov
shrb
mov
mov
cs
out
push
je
or
cmp
cld
mov
imul
mov
mov
mov
sbb
dec
leave
push
mov
inc
out
mov
lret
inc
pop
movb
sbb
int3
das
mov
cmp
pusha
int
cmp
aaa
dec
ja
sbb
adc
andl
adc
push
mov
pop
sbb
xor
mov
test
fists
mov
lret
mov
adc
pushf
pop
jno
inc
int3
popa
dec
jbe
nop
inc
mov
mov
push
mov
test
lds
in
dec
fs
cmp
inc
in
insl
out
or
jae
into
pushf
arpl
push
mov
or
outsb
std
mov
js
inc
pop
ret
ficoml
inc
push
cmc
cmp
or
pop
mov
or
xor
cmpsl
sub
mov
mov
imul
aad
mov
in
icebp
fwait
xor
in
in
push
push
adc
loope
push
loop
cmp
hlt
int
jb
in
dec
into
repz
lea
push
sbb
adc
push
sbbl
mov
jae
jge
cmp
adcl
mov
shlb
nop
jne
add
dec
mov
iret
or
xor
lods
xchg
inc
cwtl
in
pop
mov
adc
aaa
je
shll
loope
mov
out
xchg
js
dec
push
in
dec
movsb
cmp
dec
testl
rorl
lret
addr16
outsb
jmp
push
ja
dec
stc
loope
inc
and
dec
mov
int3
fcomps
fs
inc
push
sub
dec
push
in
mov
inc
adc
mov
cwtl
icebp
in
mov
jge
cmpsl
mov
cli
test
cwtl
cmpsb
lret
and
orl
mov
testb
cmp
leave
ret
ret
ja
dec
pop
add
dec
test
shll
roll
adc
cmpl
pop
jl
imul
jge
sub
or
dec
inc
jp
clc
lds
jge
clc
pop
mov
sbb
pop
mov
mov
daa
sti
pop
aam
test
jae
xchg
call
sub
add
cmp
adc
add
test
jmp
pop
fcmovne
xchg
arpl
fistpll
shrb
aam
fdivl
push
cli
dec
cmpsl
lods
aaa
push
fisttpll
lds
or
test
jb
jp
shrl
scas
gs
push
enter
cmc
and
mov
mov
aas
pop
push
sahf
popaw
enter
cmp
mov
rorb
xor
adc
sub
loopne
jno
subb
sbb
add
out
imul
scas
mov
jns
push
inc
lods
and
sbbl
test
aam
int
dec
test
or
xchg
push
cmpsl
lcall
rolb
xor
xor
adc
mov
cmpl
test
nop
sbb
lret
jae
filds
adc
lock
pop
iret
xchg
mov
test
pop
jg
int
in
adc
adc
mov
inc
push
rcr
mov
cmp
inc
cmpsl
push
lret
mov
dec
dec
arpl
mov
add
pop
add
jl
xor
shlb
mov
out
lds
mov
adc
sbb
xacquire
out
sub
ja
xchg
adc
mov
in
or
test
loopne
in
or
xor
jg
cmp
push
add
lods
scas
jge
or
cmp
dec
int
rcrl
sub
loopne
or
pop
jge
mov
stc
int3
out
push
adc
popa
ret
add
ret
shll
fidivrl
test
xchg
jl
adc
jae
iret
cmpsb
lds
jmp
xor
pop
xor
fwait
xor
cwtl
les
push
xchg
ja
arpl
std
and
xchg
gs
rorl
dec
xor
ret
adc
fwait
test
pusha
adc
dec
aam
sub
test
gs
rorl
push
xchg
aaa
ret
movsl
jl
icebp
mov
test
fs
mov
push
adc
xchg
fidivs
sbb
call
les
mov
mov
mov
push
adc
ret
cltd
mov
adc
adc
dec
push
push
lea
fs
loop
sbbb
xor
sbb
adc
mov
jo
adc
clc
jo
xchg
int
cmp
ljmp
fwait
xchg
stos
pushf
int
fs
cmp
arpl
pushf
mov
data16
mov
add
push
xchg
fnstcw
xchg
pop
lock
mov
cmp
pop
in
roll
gs
ds
push
push
adc
imul
xchg
in
xor
dec
push
adc
xor
dec
dec
test
scas
imul
jo
out
movsb
pushf
rcl
pop
cmp
in
or
jb
cmp
gs
xchg
out
in
clc
or
xor
sbb
sub
pushf
nop
cmp
ja
mov
cs
lret
popf
out
test
fsubr
push
int3
push
insl
and
test
adc
mov
cltd
dec
lahf
mov
cmp
bound
dec
sbb
int
cmpsl
int3
push
jno
cwtl
mov
mov
nop
jmp
js
loopne
mov
pop
mov
out
sbb
dec
out
push
push
mov
sbb
mov
pusha
sbb
arpl
xor
test
daa
push
xor
jge
or
add
lret
mov
adc
pop
out
andb
test
xchg
sahf
adc
repz
out
pop
outsb
cmc
inc
pushf
xchg
pusha
push
insl
in
ret
pop
lret
cwtl
xchg
hlt
ja
xchg
sbbb
xchg
out
dec
gs
or
pushf
dec
inc
test
pop
mov
cmp
pop
xchg
mov
xor
stc
and
sub
sbb
add
notb
push
mov
dec
test
rolb
outsb
ja
fidivs
jl
sub
outsb
pusha
mov
mov
pop
cmp
fildl
cltd
mov
movb
sbb
jle
dec
fwait
aam
inc
xor
sbb
shr
xchg
scas
je
loope
xor
mov
enter
mov
push
subl
xor
sub
ss
jle
inc
pop
mov
pop
mov
mov
sub
out
testb
adc
mov
mov
mov
sub
jnp
test
pop
or
repz
or
adc
jno
xchg
jmp
push
push
test
xor
dec
jge
in
dec
pop
rcll
cmp
outsl
jmp
rcll
mov
in
cltd
mov
test
rclb
sub
push
xchg
into
sti
lret
sub
xchg
call
fmull
cmpsl
fwait
dec
dec
in
jge
xchg
or
xor
push
mov
push
adcb
push
pop
clc
mov
rclb
xor
mov
addr16
jae
data16
in
mov
jo
pop
aad
movsl
ljmp
cltd
pop
in
mov
jo
repnz
sahf
movsl
fs
sub
jmp
cmp
mov
scas
xor
mov
sub
daa
jno
ret
mov
mov
sbb
cmp
pop
mov
mov
test
jl
mov
sbb
sbb
cld
cmp
cmp
sub
in
decl
idivb
stc
nop
aad
ds
or
xchg
jb
and
repnz
and
movsb
aaa
or
push
lods
shl
lret
leave
out
in
xchg
sbb
xor
fcmovbe
jmp
mov
iret
sub
or
repz
cltd
add
pop
js
mov
out
cmp
inc
test
cmp
inc
sahf
inc
insb
clc
mov
or
jl
mov
xchg
fwait
outsl
push
jmp
pop
pop
sbbl
ror
mov
jb
mov
and
jo
push
sbb
xchg
int
push
mov
fistl
iret
jl
shl
ja
mov
adc
push
mov
adc
aad
ret
pop
mov
in
shll
ja
inc
or
shrl
mov
insb
mov
std
pushf
cmp
push
dec
mov
mov
pushf
sbbb
push
adc
int
je
xchg
mov
pushw
iret
rep
and
mov
sub
cmp
and
push
push
jmp
sbb
sahf
cmp
dec
or
add
mov
cmp
or
and
push
dec
jge
out
in
xchg
in
xlat
lahf
xor
inc
es
ror
das
test
nopl
jne
adc
push
adc
xor
jns
push
enter
insb
stc
adc
pop
xor
and
xor
faddl
int3
iret
xchg
sub
mov
cmp
iret
push
inc
int
inc
xchg
outsb
jmp
arpl
pop
push
push
cmp
mov
mov
cs
pop
push
pop
pop
jo
xchg
les
ja
pop
insl
cmp
mov
bound
mov
out
and
sub
sub
fistl
and
push
mov
adc
gs
push
lods
push
sub
pusha
jae
push
jns
inc
int3
pop
out
xchg
sub
fwait
jae
push
int3
das
pop
cld
jb
scas
push
and
stos
out
fs
mov
mov
push
sbb
xchg
dec
jb
sbb
ss
mov
and
fcoml
cld
push
push
adc
cltd
adc
xchg
fiaddl
outsb
fxch
pushf
mov
sub
xor
inc
xchg
dec
sub
push
movhps
loope
mov
js
mov
dec
jo
aam
push
inc
sub
jo
xor
lea
stos
test
adc
xor
xor
ss
push
ror
outsl
xor
into
js
mov
cmpsb
loopne
pop
sar
stos
fdivrs
push
push
adc
movsb
xchg
fsubp
add
sub
out
test
mov
pop
aad
andb
fcompl
sub
shl
iret
stos
js
das
test
inc
loopne
jl
minps
imul
inc
dec
jnp
and
stc
push
cmpl
dec
sbb
cs
push
inc
push
sub
cs
xchg
add
mov
aas
pop
cwtl
iret
mov
xchg
les
adc
jbe
addr16
std
sbb
fimull
add
arpl
push
push
filds
dec
push
add
pop
jp
jbe
xchg
mov
popf
clc
lods
ds
and
dec
hlt
mov
lcall
jecxz
xchg
outsb
dec
pop
fbld
outsb
push
dec
iret
lcall
out
inc
aad
jae
dec
movb
cmp
and
repz
mov
lret
sahf
jnp
jbe
adc
clc
loope
fdivrl
daa
sti
xchg
mov
mov
mov
or
cwtl
push
ucomiss
bound
lods
add
jge
pushf
or
xchg
cs
mov
dec
push
push
adc
mov
je
cmp
mov
sub
bswap
shll
adc
outsl
xchg
pushf
mov
inc
shr
sahf
jp
sbb
stos
xor
arpl
mov
je
leave
add
lahf
mov
fwait
iret
sahf
mov
lret
pop
fisubl
xchg
cs
mov
movsb
das
or
xchg
jae
jmp
sub
test
loop
sbbb
xor
xchg
ja
adc
mov
jb
cltd
cmpsl
adc
or
dec
sub
hlt
sbb
in
movsl
sbb
andb
sbb
xchg
cmp
inc
sti
cmpsb
jae
push
push
adc
repz
mov
popa
mov
sub
sub
aaa
dec
lret
in
nop
inc
mov
aad
ja
push
fstps
add
sbb
sub
into
and
mov
jmp
orl
cmp
pop
adc
xchg
jae
mov
and
pop
inc
ret
pop
js,pt
adc
lcall
push
mov
insb
fisubl
push
jae
push
icebp
push
xor
cmp
inc
std
shr
xor
in
outsb
jmp
fldcw
ds
push
jno
mov
jmp
jns
cmp
clc
cmpsl
fistps
stos
or
out
cmp
sahf
lock
push
sub
repz
add
push
les
pop
mov
jg
push
push
adc
ds
iret
imul
pop
adc
adc
enter
vpunpckhwd
sahf
lods
adc
inc
daa
mov
div
shlb
jns
mov
pop
push
int
movsl
jmp
and
ljmp
hlt
mov
adc
sbb
or
or
fs
push
mov
lcall
filds
adcl
enter
int3
jne
int3
sub
pop
pop
push
test
fsts
fwait
mov
mov
mov
pusha
fdivr
pusha
xchg
sub
jne
sub
mov
addr16
mov
dec
cli
cmp
test
repz
mov
add
inc
loop
dec
inc
push
int
into
mov
shrl
lock
mov
loope
sub
mov
fdivp
call
adc
bound
pop
mov
repz
jg
mov
addr16
pop
imul
js
adc
sub
mov
shll
push
pop
addl
push
sbb
fisttpll
lds
imul
xor
mov
xor
clc
push
pop
leave
lods
jl
ds
sub
ds
mov
jle
mov
xlat
lds
push
jle
dec
les
mov
push
cmp
lods
stos
pop
fistl
insl
fs
push
jp
xchg
pop
or
and
mov
add
std
pop
pop
fdivs
cmc
pop
dec
dec
daa
cltd
jns
inc
add
insl
pop
push
test
mov
mov
aas
push
pop
mov
std
add
xor
repz
daa
inc
mov
inc
cmpsl
add
mov
dec
rcrb
xchg
jecxz
xlat
ja
sub
arpl
hlt
and
add
push
ficoms
insb
and
insb
ds
out
pop
xor
and
and
cmpsl
sti
scas
out
cmc
xor
inc
push
inc
inc
pop
inc
sar
aaa
fmulp
jmp
push
setbe
shrb
mov
add
inc
shlb
xlat
iret
and
mov
jmp
and
mov
repz
adc
xchg
sbb
xor
mov
outsl
incl
repnz
or
ljmp
mov
sbb
mov
out
ret
mov
push
arpl
xchg
xor
or
bound
push
jae
dec
pop
popa
sub
pusha
adc
xor
xor
sbb
out
fwait
stos
pushf
int3
adc
fs
movsb
icebp
cmp
cli
pop
stc
dec
mov
insl
cmp
mov
int3
rorb
push
sbb
scas
xchg
lcall
prefetchwt1
movsl
xchg
xchg
mov
mov
dec
popl
subl
popa
dec
into
add
jg
inc
fbld
aad
arpl
arpl
test
pushf
pop
sbbl
or
popa
xor
sbb
mov
cmp
mov
dec
inc
pop
cmpsl
sti
scas
xlat
fdivs
popa
inc
inc
push
insb
adc
or
sub
mov
dec
fsts
in
or
sub
fdivrl
test
in
xchg
stos
movsl
lcall
mov
outsb
push
push
adc
cli
dec
shlb
lock
pop
inc
jmp
cmpsb
outsl
mov
xchg
cmp
ljmp
add
ljmp
mov
mov
dec
jecxz
bound
pop
jg
mov
xor
mov
xchg
jns
xchg
aam
and
outsb
iret
lds
pop
loop
cwtl
mov
push
adc
dec
or
mov
jg
adc
and
stos
or
fwait
sbb
push
adc
mov
stos
mov
push
adc
je
lods
cmp
sahf
jle
jp
jmp
rcll
or
adc
test
movsl
ds
ret
xchg
movsb
dec
xchg
push
in
ds
jmp
cmp
push
fmul
xor
cmc
jle
lcall
je
stos
pusha
insl
scas
lods
mov
addr16
scas
out
adc
push
lods
cmp
jo
enter
mov
adc
xor
sbb
and
inc
shlb
ret
push
lahf
mov
push
fbld
and
and
ss
daa
outsl
ret
enter
push
lcall
aaa
fistps
out
cmp
pop
ficoms
mov
push
adc
mov
mov
loope
mov
push
inc
icebp
sbb
mulb
sarl
leave
shr
push
adc
push
adc
push
adc
insl
xor
std
sub
sub
cmp
int
add
jle
add
add
push
adc
call
xchg
imul
mov
sub
push
adc
into
in
test
nop
push
dec
dec
mov
push
sti
in
mov
jmp
xchg
adc
std
jbe
scas
clc
stc
push
mov
cmp
or
out
jns
adc
push
push
adc
push
paddb
shl
mov
or
add
call
sub
inc
movsb
push
rorb
fs
cmp
ja
loopne
int3
scas
aam
pop
dec
lods
xchg
push
fiaddl
push
pop
out
mov
cs
mov
xor
rol
adc
cld
jecxz
push
int
inc
outsb
add
xor
pop
in
pop
mov
loopne
sbb
in
push
ja
pushf
jae
mov
adc
lcall
les
addr16
enter
adc
xor
stos
mov
lock
dec
gs
mov
push
cmp
jnp
mov
or
adc
fidivs
ljmp
pusha
cmp
pushf
iret
cmc
or
add
mov
sti
loopne
inc
inc
lret
cld
mov
cwtl
sbb
jl
mov
cmc
mov
dec
ret
fmull
lea
and
mov
xchg
xlat
out
aad
pop
push
outsb
mov
hlt
outsb
inc
fs
xor
mov
xlat
cld
stos
xchg
int
jge
push
mov
rorb
push
shll
cmp
gs
lods
fldcw
mov
pop
mov
cwtl
ja
xchg
cwtl
cli
sub
fs
mov
in
aam
lret
adc
add
je
dec
rol
repz
push
addr16
popa
mov
in
test
dec
fucompp
daa
push
bound
call
loop
icebp
sub
xor
sbb
in
ficomps
dec
sub
or
imul
mov
dec
add
mov
or
xor
inc
mov
inc
cmp
dec
mov
push
cmp
in
jno
mov
nop
ja
inc
sub
jo
cwtl
int3
mov
xor
mov
arpl
leave
fmull
and
mov
std
cs
ror
sbb
inc
mov
pop
int3
shr
cmpsb
push
add
xor
bound
popf
cmp
xchg
dec
in
bound
int
test
lahf
jge
cli
mov
fs
sarl
cltd
cmp
dec
out
or
mov
xor
data16
fs
push
in
addb
push
enter
inc
addb
je
out
xchg
jecxz
mov
cmp
mov
adc
adcb
ret
lds
sarb
and
jg
xor
push
mov
bound
sbb
inc
push
aad
xchg
adc
jae
or
push
lock
mov
or
mov
xchg
jg
stc
pusha
mov
stos
mov
lahf
inc
cmpsl
notb
add
mov
jle
out
out
cmc
xchg
sbb
fiaddl
or
jb
bound
inc
imul
mov
push
inc
das
fcoms
mov
in
test
xchg
fists
sub
or
pop
mov
je
and
aas
lcall
xor
pop
js
add
daa
dec
andl
mov
fs
addr16
pop
lods
dec
mov
dec
lret
loope
jbe
cmp
xchg
sub
inc
dec
xorl
imul
movsl
jp
fidivs
sbb
jg
or
add
or
sub
daa
jmp
mov
lret
pop
setge
sub
pop
sub
jnp
out
aaa
std
push
mov
jl
minps
or
fcompl
vpsubd
loop
fstpl
sub
adc
ds
push
jae
push
mov
adcl
pop
push
sub
in
mov
aad
adc
xchg
mov
cli
adc
xchg
mov
jmp
xor
or
fs
dec
jle
push
jl
and
inc
movsb
fildll
or
pop
push
cltd
push
mov
jbe
jo
daa
cltd
sar
jecxz
sbb
lock
push
add
push
inc
in
call
ss
shl
stos
outsb
xchg
pusha
rolb
ja
mov
lock
stos
ret
xchg
lahf
mov
add
push
cmp
int
jg
pushf
xchg
hlt
scas
pop
mov
adc
mov
pop
xor
fsubr
push
adc
cmp
sbb
push
pop
aad
sub
cmp
shl
jecxz
lret
xchg
ja
shll
mov
ret
xchg
sbb
inc
mov
mov
fldl
xor
adc
ret
xchg
sbb
sbb
push
push
adc
mov
xchg
sarl
jnp
aaa
je
sbbb
or
es
jo
ret
add
outsb
inc
push
lcall
into
adc
xchg
sbb
sbb
ret
or
bound
and
and
mov
cs
pop
inc
fs
int
cmp
cmp
jg
and
lret
cmpsl
inc
sbb
movsb
popf
mov
xor
and
outsb
add
xor
push
sub
push
push
adc
gs
xchg
roll
lock
xchg
mov
dec
mov
shrl
jge
or
loop
cmp
loop
iret
icebp
in
push
in
repz
iret
ja
int
je
jne
push
sbb
mov
jae
fsubrs
aaa
jns
xchg
mov
xor
rcl
stc
ja
dec
cltd
and
push
cmp
or
inc
xor
rolb
mov
mov
pushw
insb
xor
xchg
aad
mov
mov
lret
dec
cwtl
add
mov
shrb
xor
xchg
or
and
movsb
ja
jecxz
lock
sub
mov
inc
adcl
push
jne
mov
sbb
sahf
cmp
in
add
pop
cmp
pop
ljmp
add
ds
push
inc
push
cmpsl
inc
mov
xchg
push
mov
jl
sbb
pop
jp
jecxz
mov
popa
fcomps
shr
xchg
mov
pop
sar
std
scas
jge
ret
cmp
dec
pop
scas
test
loope
jo
sub
mov
in
and
jmp
or
add
fs
outsl
mov
loope
mov
push
xchg
mov
imul
pop
loope
jb
fdivrs
clc
shlb
jge
xor
stos
adc
inc
jg
js
push
lret
add
rorb
cs
pop
or
adc
lret
adc
adc
xor
outsl
xor
xor
push
out
ljmpw
sbb
pusha
in
mulb
lcall
inc
lods
or
pop
add
roll
add
cs
sub
pop
nop
imul
inc
les
jle
mov
push
inc
fistpll
xor
xchg
std
push
push
std
and
fdivrs
add
dec
pop
inc
dec
das
pop
sub
insb
jl
adc
std
outsl
inc
cwtl
lock
pushf
mov
clc
add
test
ljmp
fmuls
adc
loop
mov
jae
and
iret
pop
js
lahf
stc
adcl
stos
aas
cmpb
inc
sti
lds
jnp
sub
inc
arpl
and
sub
xor
shlb
jae
mov
popa
adc
sub
shll
aam
enter
test
and
sbb
fiadds
dec
cmp
jns
les
aad
fstps
xchg
adc
ja
call
pop
mov
enter
imul
jnp
jne
jns
mov
mov
pusha
mov
sbb
rcr
mov
add
or
bound
cmp
mov
popa
pusha
repz
mov
or
into
repz
sub
mov
sahf
cmp
dec
xor
mov
inc
lock
lret
and
mov
push
sbb
outsl
iret
jmp
dec
dec
in
call
inc
fwait
mov
arpl
sti
cmpsb
or
es
mov
pusha
or
or
call
inc
and
dec
jns
mov
jb
pop
mov
push
fs
aad
cmp
push
dec
fcmovbe
subl
lds
es
lea
mov
arpl
dec
lret
int3
fidivs
insb
jl
adc
popa
into
pushf
mov
adc
pop
std
in
mov
mov
push
push
adc
les
imul
sbb
xchg
pushf
je
pop
mov
fisttps
jns
fidivl
sub
out
clc
rcrb
push
adc
call
lods
sub
lock
bound
loopne
xchg
and
js
loop
test
dec
enter
sahf
mov
in
scas
gs
into
cmp
sbb
cmp
push
adc
sbbb
push
adc
pop
rcr
sbb
jno
fwait
sbb
mov
mov
xor
jne
mov
pop
std
in
mov
ljmp
clc
push
in
xlat
clc
jg
or
shlb
rolb
pop
push
scas
mov
adc
call
jbe
push
push
adc
xor
arpl
add
xchg
loop
mov
mov
xor
jne
test
push
sbb
sbb
inc
adc
fs
adc
inc
roll
jns
jne
xchg
jns
add
mov
aas
cmc
in
mov
pop
adc
inc
mov
fisttpl
in
mov
adc
lods
jge
sbb
cmpsb
loopne
mov
test
inc
cld
je
lea
mov
repz
or
mov
fdivrp
push
sub
jno
das
inc
jne
sub
adc
mov
push
adc
cli
xor
sahf
test
dec
test
lods
jge
xchg
and
jg
scas
pop
cmovno
arpl
jne
mov
mov
out
add
lret
cmp
inc
and
add
inc
sub
sub
test
in
ficoms
mov
mov
xchg
or
stc
xchg
fstpl
mov
popf
movsl
nop
push
push
loopne
sbb
jo
adc
addb
jmp
push
and
fildl
mov
in
and
xor
mov
cld
cmp
cwtl
adc
mov
leave
pop
jae
mov
xor
leave
out
inc
sahf
mov
jecxz
adc
dec
xlat
cltd
and
aaa
mov
pop
jo
in
ljmp
fcom
cmp
testb
jnp
pand
adc
mov
loop
dec
mov
leave
adc
add
rorl
pop
dec
jno
mov
pop
je
test
aam
popa
aaa
mulb
movsb
sahf
sub
nop
mov
ds
inc
in
cmp
jnp
mov
fnsave
repz
sub
sbb
xor
mov
push
test
jl
test
and
mov
sahf
or
mov
xchg
jl
daa
or
aam
in
js
jg
add
mov
xchg
or
std
add
jmp
xor
or
jl
xor
push
pop
mov
into
gs
push
push
adc
lods
cltd
cwtl
mov
scas
xor
inc
clc
mov
test
nop
into
dec
inc
adc
sbb
movsb
arpl
inc
jecxz
sbb
mov
sbb
sti
cmp
add
pop
dec
nop
inc
jecxz
fdivrs
repz
sbb
lret
inc
popa
cmc
loop
mov
or
dec
inc
mov
jno
sub
cwtl
or
xchg
hlt
pushf
jno
pop
mov
mov
xchg
fucompp
add
popa
jo
movq
out
mov
int
sbb
xor
add
outsl
mov
jg
sbb
je
mov
cmp
lret
cmp
hlt
push
pop
mov
out
lcall
mov
jmp
out
les
pop
fcoms
jge
sbb
out
lea
mov
ljmp
loop
add
cmp
mov
mov
rorl
or
pop
inc
cli
mov
push
cmp
xchg
clc
sahf
mov
in
int3
lcall
jle
pushf
mov
push
sbb
sub
test
negb
mov
sarb
or
add
jne
xlat
mov
pushf
lret
das
pop
mov
pop
xchg
adcl
mov
mov
in
jle
dec
mov
add
outsb
imul
lret
sbb
jmp
dec
js
lock
loop
mov
cmp
int
fdivrs
push
cmp
clc
stos
lahf
stc
and
sarb
mov
sub
lock
xchg
ljmp
and
pusha
popa
push
mov
xchg
lcall
sbb
lahf
cmp
addr16
jns
arpl
pop
mov
in
push
xchg
jbe
add
mov
movsl
or
leave
push
popa
mov
sub
sahf
gs
or
pop
outsb
and
dec
mov
out
loopne
testl
pop
jl
pop
xchg
into
pop
ret
mov
push
xchg
icebp
sbb
daa
fisubrs
stc
mov
pop
pusha
add
push
jle
dec
movsl
outsl
mov
in
cmp
inc
jno
mov
fld
negb
mov
jp
dec
inc
or
mov
sbb
stos
add
hlt
add
xchg
lret
pop
pop
cmpb
in
cs
aam
out
mov
pop
adc
ja
dec
mov
in
push
cli
shll
daa
int
adc
mov
mov
push
adc
ret
xchg
mov
pop
or
adc
es
mov
fwait
fs
nop
mov
lret
loopne
inc
or
sub
inc
daa
add
cs
test
mov
push
or
xchg
mov
inc
xchg
jo
adc
fcmovu
or
pop
adc
mov
pop
pop
jbe
add
fsubs
lret
rorl
jo
adc
lods
xchg
nop
jg
mov
gs
mov
mov
xorl
push
xchg
adc
jge
adc
xchg
pop
or
loope
mov
mov
stc
out
cmp
push
pop
add
jnp
jmp
pop
fildl
mov
std
push
shr
out
sub
sbb
inc
pop
xor
sahf
in
divb
sub
shll
cmp
push
jmp
ret
cmp
mov
push
inc
pop
mov
stos
imul
cmp
mov
fcoms
xchg
clc
out
jle
or
out
jbe
pushf
xchg
cmc
jnp
cmpsl
mov
adc
cltd
repnz
pop
jnp
and
jg
scas
fcoml
mov
in
xchg
outsb
test
loop
rdtsc
adc
or
repz
inc
push
repnz
xor
es
sbb
pop
mov
cmovnp
popa
les
adc
test
fisubl
subb
daa
cmp
inc
cmp
fisubs
call
cmp
cmp
pop
or
push
adc
clc
pop
or
insb
cmp
cmpsb
int
sbb
bound
or
sub
pushl
int
jle
mov
pop
nop
mov
push
cs
scas
mov
xor
inc
add
lcall
adc
add
xchg
jne
mov
sbbl
inc
mov
xlat
sub
imul
loop
cld
insl
push
pop
mov
cmp
hlt
pop
or
lcall
push
test
stc
mov
pop
mov
cmp
cmp
pop
or
push
adc
push
out
xchg
pop
push
out
mov
cmp
ja
xchg
movsb
fsts
lea
xor
data16
lods
aaa
jecxz
adc
je
shrl
or
inc
push
xchg
lock
lret
pop
push
push
mov
xchg
mov
cmp
jp
mov
inc
das
pop
mov
arpl
or
adc
imul
sbb
sbb
loope
sub
popa
ret
xchg
jg
and
cmp
mov
lock
or
push
push
loope
popa
add
adc
xchg
jmp
sub
clc
pop
or
ja
repz
fistl
in
cmp
pop
fistl
iret
jl
sar
ja
lahf
int3
mov
cmp
cmp
sub
or
pop
or
inc
scas
and
mov
das
sub
jecxz
mov
lock
or
nop
ljmp
jecxz
lret
pop
push
cmp
int3
jmp
shl
xchg
les
andps
mov
sbb
sub
int3
jno
xor
jecxz
cwtl
cmp
es
or
out
jl
lods
mov
push
adc
lds
xor
enter
and
push
adc
add
repz
sarl
pop
popa
jg
mov
and
adc
xchg
xchg
aas
mov
cmp
adcb
xorb
adc
test
pop
push
in
xor
mov
test
lahf
sub
pop
jno
daa
dec
das
js
out
lock
pop
cmp
pop
es
sub
push
adc
fsubs
lods
shrb
lock
fisubrl
fists
shl
popf
call
mov
popa
test
mov
jb
adc
sbb
cwtl
movsb
jb
imul
fimuls
cltd
mov
adc
sbb
call
imul
test
and
jne
or
mov
add
cmc
shl
cmp
pop
mov
inc
and
adc
jle
aad
stos
aas
int
mov
inc
jmp
cltd
lret
hlt
dec
popa
mov
nop
pop
add
std
fs
add
ss
cld
lret
clc
cld
mov
sar
jge
fisttpl
int
loop
icebp
cwtl
add
mov
push
rclb
push
adc
or
adc
aad
out
aaa
xchg
and
push
or
and
cwtl
pop
insb
and
cmp
orb
xchg
add
dec
dec
and
mov
lods
add
jns
xor
scas
out
jns
pop
bound
mov
repz
xchg
pusha
jb
jge
push
stc
sub
push
cs
jae
cmpsl
cmp
mov
subl
pop
scas
ret
mov
jo
fmul
loop
mov
mov
movb
add
adc
inc
loope
jo
adc
lock
lcall
xor
sbb
mov
xchg
add
adc
push
adc
repz
shrl
popf
jg
mov
pop
xchg
sahf
js
pop
out
sbb
bound
lcall
out
pop
cld
jl
xchg
or
loop
pushf
adc
xor
popf
inc
xchg
popa
popf
sbb
js
and
mov
sub
das
call
jmp
cli
insb
inc
les
add
popa
out
addl
in
cmp
mov
gs
jb
lea
jb
shl
out
inc
insl
cmp
fwait
cs
push
cltd
scas
stc
lahf
out
xor
dec
fcompl
mov
pushf
sbb
mov
lea
xor
clc
add
dec
mov
fistpll
fcom
mov
mov
ret
fcomip
insl
push
jne
pop
jns
mov
dec
pop
dec
je
add
jle
clc
adc
fdivl
sahf
hlt
outsb
decl
out
mov
arpl
cwtl
add
cli
imull
jecxz
rolb
imul
and
adc
sub
jbe
or
je
lahf
xchg
dec
xchg
jl
or
lock
or
aam
ja
xor
mov
pop
clc
jl
test
stos
fisttps
adc
or
ret
pop
xlat
add
push
cmc
mov
repz
loope,pt
lods
scas
into
mov
xor
push
int
mov
fwait
dec
xor
cmc
and
cmp
pop
mov
ljmp
rcll
xlat
add
data16
mov
push
daa
cmp
dec
lea
xor
xor
out
out
mov
imul
iret
push
daa
inc
mov
xor
outsl
sahf
push
push
jp
dec
sbb
out
dec
jecxz
ret
add
dec
sub
xchg
rep
daa
sbbl
scas
cwtl
in
in
into
xlat
dec
pusha
pop
notb
xchg
js
sub
adc
pop
sti
xor
ret
push
mov
jp
icebp
jbe
push
mov
mov
pop
lret
xchg
push
cmp
add
dec
dec
cltd
mov
data16
hlt
out
aad
add
mov
cmp
mov
sub
dec
jb
loopne
fwait
adc
orb
mov
adc
pop
repnz
dec
cmpsb
pusha
push
lret
mov
inc
shll
and
in
not
dec
mov
callw
sbb
scas
fstpl
dec
in
jle
lea
ds
xchg
mov
aaa
dec
sbb
lds
sbb
mov
lds
mov
repnz
sub
movl
lcall
out
das
pop
fsubs
enter
pop
sub
in
xchg
fs
loope
or
mov
orb
jno
xor
mov
in
aaa
mov
cmpsl
pop
mov
pop
and
imul
int3
int3
fs
pop
jmp
push
in
das
or
cmp
fwait
xor
push
divl
js
sub
in
add
lcall
fisubl
pop
aad
ljmp
loopne
xlat
or
inc
test
push
lods
outsl
aas
sar
cmp
cmc
jnp
inc
push
aam
lock
ljmp
lods
int3
aam
inc
cmpsl
mov
add
aam
mov
arpl
adc
es
stos
insb
sub
in
xor
dec
sbb
jg
fidivrl
call
das
mov
lea
add
push
adc
in
pop
rol
jo
dec
inc
and
mov
scas
cmpsb
ljmp
outsl
pop
insl
scas
push
addr16
sahf
inc
inc
or
mov
mov
or
movl
add
popf
inc
add
mov
push
adc
outsb
daa
push
mov
xchg
dec
test
scas
iret
icebp
in
pop
rorl
inc
or
sub
sarb
nop
push
push
mov
enter
popa
out
sub
test
sbbl
cmpsl
and
pop
stc
in
ret
xchg
sbb
cmc
int
jb
or
or
ficoml
fildll
dec
cli
sub
in
leave
pop
es
shll
nop
dec
rolb
lcall
sub
push
push
inc
inc
jnp
std
jb
shll
mov
or
inc
pop
movsb
inc
mov
inc
rcrb
push
jb
mov
cmpsl
inc
ficoml
xchg
pop
lea
push
pushf
cmp
insb
lea
pop
push
arpl
mov
jle
lock
out
int
out
sbb
push
call
cmp
lret
push
push
cs
xor
adc
sbb
pop
lcall
stos
xor
sti
cmpsl
push
dec
or
pop
roll
gs
rcrb
inc
inc
sbb
mov
mov
xor
shl
mov
jo
mov
jle
dec
into
or
je
inc
push
jno
jnp
out
fcomps
mov
or
xchg
inc
jl
mov
sub
out
loope
loop
fwait
mov
mov
test
sub
aad
adc
hlt
mov
fisttpl
cwtl
sarl
cmp
add
cmpsl
inc
lea
jns
mov
lret
inc
mov
or
nopl
out
push
sbb
call
imul
mov
in
leave
lds
jmp
insl
fisttpll
and
cmp
int3
or
pop
inc
ss
mov
or
xor
cmp
stos
dec
mov
mov
inc
lret
les
rcll
push
cmp
adc
inc
ja
jmp
jge
cmp
mul
popf
add
addr16
add
loop
fsubs
fwait
or
lcall
xchg
call
sbb
cld
std
outsb
mov
or
xor
dec
stos
pop
jl
ficoms
fists
in
stos
test
add
or
movsb
cld
dec
mov
xchg
pop
ds
std
or
dec
outsb
int
in
out
fistps
stc
xor
and
or
sahf
aas
ljmp
add
mov
mov
test
push
icebp
push
pop
and
jmp
leave
jns
movsl
cmp
mov
imul
jle
mov
sbb
aad
stos
pop
mov
loope
icebp
mov
cld
mov
int3
cs
xchg
insl
sbb
inc
xchg
cld
bound
push
add
sub
sarl
aas
sbb
in
cmpsl
push
mov
sub
rolb
cmc
xchg
mov
adc
add
xchg
scas
sbbl
and
ss
xchg
pop
mov
xlat
xchg
sbb
adc
pop
inc
nop
sbb
dec
cmpsl
inc
inc
int3
aaa
sub
iret
pop
sbb
nop
pop
rorb
mov
sub
leave
inc
and
f2xm1
push
mov
imul
es
cld
xor
xchg
xacquire
mov
out
shrb
push
packsswb
addr16
orb
or
hlt
mov
lods
push
test
xor
add
xchg
sub
xor
push
and
aas
cmp
mov
dec
sbb
sub
sarl
xor
cltd
push
ds
cs
dec
xor
mov
lret
cmovns
add
mov
jne
and
test
daa
jp
out
mov
push
aaa
sbb
mov
pop
stc
je
dec
jo
loop
ret
arpl
pop
rclb
lcall
hlt
andl
lahf
mov
jmp
inc
add
and
jns,pt
cltd
or
adc
mov
pusha
outsl
repz
outsl
inc
ljmp
mov
mov
int
lcall
es
xchg
cmp
mov
add
mov
mov
fdivs
shlb
mov
aam
push
in
test
xor
cmp
mov
cmp
in
iret
lcall
insb
xor
sti
lods
aas
rorb
daa
pop
mov
clc
jle
pop
ret
in
mov
lret
mov
clc
loop
jnp
ficompl
ljmp
dec
push
sub
xchg
mov
pop
cs
mov
rclb
outsl
cmp
int
inc
rcl
ffreep
outsl
out
shrb
stc
lods
cmp
adcl
mov
out
sub
cmovns
mov
popf
mov
dec
xchg
cmp
inc
loope
imull
aad
add
push
xchg
cmp
xchg
lcall
ss
jl
in
sbb
ja
arpl
mov
dec
fcmovb
push
cs
fwait
sarb
arpl
sti
lods
aas
push
dec
cmc
mov
clc
xchg
xchg
cmpsb
cli
out
out
xchg
fistpll
outsb
mov
popa
pop
cmp
test
mov
xchg
jl
dec
ret
int3
sbb
pusha
sbb
loop
enter
or
pop
dec
shll
mov
mov
lock
inc
cli
mov
mov
inc
or
push
mov
nop
add
sbb
lods
inc
mov
pushf
mov
or
jnp
addr16
bound
sbb
sbb
les
std
xchg
lods
and
loope
subb
loop
inc
adc
shl
mov
es
or
test
hlt
out
xchg
add
mov
lods
sbb
call
ret
icebp
xchg
push
adc
fiadds
dec
rorb
popa
dec
sub
int3
pushf
lock
loope
daa
enter
scas
add
cmpsl
int
rcll
lahf
pop
loopne
mov
dec
xor
outsl
mov
sbb
or
mov
jecxz
ficoml
int3
jecxz
outsb
hlt
cld
sti
leave
push
dec
cltd
scas
push
sub
adc
sub
popa
push
nop
fs
cs
xchg
xor
lret
jo
in
cmpsl
mov
stc
xchg
scas
push
adc
movsb
add
aam
and
jne
mov
rcrb
or
imul
xor
mov
add
xor
outsl
dec
mov
add
std
out
inc
lahf
shl
sbbl
mov
xor
cwtl
add
adc
cltd
add
out
cwtl
add
or
lcall
or
add
lret
adc
cwtl
add
lret
adc
cwtl
add
insb
cltd
add
push
cltd
add
push
cltd
add
popa
cltd
add
add
add
lret
adc
cltd
add
int
add
pop
lcall
sub
add
int
add
insl
popf
add
jae
add
lods
popf
add
int
add
pop
popf
add
mov
pop
jle
push
cli
shll
mov
add
dec
add
inc
jmp
cmc
push
cmp
cmp
cld
jecxz
sub
test
lea
mov
movsb
das
outsl
mov
lds
add
push
or
xor
fistpl
mov
mov
xor
clc
jg
push
xchg
sbb
and
cmp
pushw
mov
mov
mov
xor
clc
jg
xchg
sbb
dec
js
out
in
cmovns
cmp
pop
inc
push
jmp
push
outsl
cwtl
sub
xchg
xchg
loop
xor
decb
mov
inc
rcr
and
mov
insb
fwait
xchg
xor
mov
mov
mov
in
int
dec
push
pop
inc
out
stos
sub
push
cmp
jnp
mov
adc
fcomps
popa
call
xor
push
mov
test
stc
cmpsb
aad
sahf
fs
ret
jns
in
sub
push
push
pop
push
movsl
adc
push
mov
lds
jns
or
fidivl
push
in
inc
fnstenv
lods
enter
jg
mov
clc
dec
adc
xor
push
dec
fs
mov
jo
inc
in
pop
adc
add
std
and
xchg
pop
scas
stos
gs
sahf
clc
jno
sbb
movsl
sub
jmp
mov
cmc
test
pop
xor
sti
mov
cmp
es
and
aam
mov
xchg
test
shlb
fwait
xchg
call
lds
jbe
mov
push
cmp
into
xchg
jg
xchg
fmul
pop
pop
xlat
fcomps
repnz
adc
mov
pushf
imul
mov
pop
xchg
hlt
pushf
loope
pop
mov
or
aad
into
xchg
xor
sbb
inc
push
mov
in
inc
stc
jecxz
lock
sub
xor
out
rcrl
mov
sbbl
dec
sbb
popa
sbb
add
fnstsw
fdivrs
xor
sub
testb
pop
jne
fsubs
xchg
add
inc
insl
and
add
push
fwait
pop
in
pop
cmp
popa
arpl
pop
pop
cmp
rcrl
insb
and
divb
mov
jp
mov
scas
jle
pop
xchg
or
push
pop
or
jno
mov
aad
mov
pop
lods
cld
imul
lds
inc
push
repz
arpl
cmp
inc
inc
add
xchg
cmp
lcall
mov
mov
mov
imul
jo
jg
adc
pop
pop
jo
es
shl
mov
xchg
sub
xchg
in
ljmp
dec
mov
mov
dec
test
jl
inc
es
mov
jmp
inc
dec
sbbl
lea
adc
jae
and
mov
gs
mov
loope
cmc
mov
xchg
inc
add
leave
push
xor
ret
or
lods
dec
and
mov
dec
and
gs
inc
icebp
test
clc
or
test
cltd
mov
pop
dec
aam
mov
inc
xchg
push
mov
pop
das
out
and
popf
out
push
push
leave
sub
push
repnz
push
testb
fisttpll
cmp
add
add
out
pop
aas
dec
or
mov
ret
push
pop
xchg
int3
loopne
jge
xchg
add
dec
adc
sub
dec
xchg
pop
jmp
adc
sbb
xchg
stos
outsb
es
pop
sbbb
ljmp
mov
das
test
mov
mov
xlat
mov
mov
jno
sbb
imul
xor
add
rorb
jae
iret
push
add
add
dec
cmp
mov
ret
repz
shrb
add
inc
add
addr16
daa
adc
push
out
sbb
inc
insl
rcrb
adc
mov
adc
stos
lds
imul
or
mov
xchg
push
add
ds
dec
iret
or
jmp
cmp
dec
ret
clc
fs
add
cmpl
cwtl
mov
js
xchg
je
popa
cltd
cmpsl
mov
dec
dec
in
lcall
fwait
sbb
sbb
das
sub
sub
sti
mov
imul
sbb
xlat
inc
fwait
repnz
sti
mov
hlt
std
scas
aad
cwtl
jg
iret
in
sti
add
cli
lcall
xchg
ret
xchg
lret
outsl
jecxz
lds
icebp
push
mov
ret
repz
xchg
ja
inc
xchg
scas
les
lret
movsb
pushf
mov
or
loop
mov
filds
or
test
sub
cmp
leave
xor
cwtl
cli
add
push
movsl
inc
mov
xor
cld
lea
mov
pop
int3
mov
or
loop
add
push
cmp
xchg
in
lea
mov
loope
or
dec
insb
push
clc
pop
push
scas
mov
iret
sahf
inc
inc
test
std
aas
xlat
ja
lret
cmc
and
lahf
mov
sub
test
adc
or
xor
negb
mov
mov
test
mov
sub
xchg
decb
mov
jle
push
sbb
cmp
icebp
sub
daa
arpl
sub
mov
dec
cmp
outsl
or
jb
pop
jb
xchg
inc
gs
lret
xor
cmp
xchg
ret
jge
in
aad
lea
inc
js
pushl
aad
inc
or
lret
mov
add
sbb
sbb
jmp
add
inc
mov
xchg
stc
sbb
dec
add
cmp
out
stos
pop
pop
mov
lahf
ss
lahf
jmp
cmp
test
hlt
fcomip
sbb
xor
lods
gs
fmull
into
inc
push
ljmp
dec
xor
push
rcll
adc
lret
and
and
adc
cmp
sub
ret
jecxz
scas
xor
sub
cmp
jns
inc
mov
sti
mov
jnp
jno
inc
mov
jns
test
cmpsl
mov
push
or
stos
and
pop
pop
fcmovbe
and
lods
push
push
jo
in
inc
adc
mov
loopne
push
or
cwtl
mov
mov
cmp
pop
inc
jg,pn
pop
inc
cs
or
dec
insb
ds
aad
popa
cmpsb
or
shll
fwait
mov
aad
push
jbe
cmc
in
jmp
sahf
sub
mov
int
pop
add
das
or
add
mov
inc
loopne
mov
cli
outsb
cmp
dec
jae
loop
outsl
movsb
mov
mov
jle
adc
outsb
loop
fimuls
stos
sbb
sub
rclb
stc
mov
ljmp
mov
jge
inc
scas
mov
adc
fmul
nop
scas
xchg
cwtl
xor
test
es
push
das
hlt
xchg
pop
dec
cmpsb
xchg
xchg
scas
div
xor
iret
jno
sti
lods
pop
pop
jns
add
push
js
jns
fwait
dec
xlat
jmp
pusha
test
mov
movsl
dec
js
adc
jae
shrb
dec
push
movups
filds
xlat
mov
jecxz
pop
push
fs
pop
sbb
addr16
sbb
imull
pop
fidivs
dec
push
xchg
adc
jns
adc
cs
cmp
lcall
in
or
and
shlb
jl
and
call
test
stc
lahf
fstps
dec
out
mulb
outsb
pop
jmp
stos
xchg
push
daa
mov
iret
movsb
sbb
addr16
mov
and
roll
push
xor
adc
mov
pop
xor
dec
leave
or
jno
pop
sub
mov
xchg
loop
xchg
fcmovbe
daa
push
ljmp
outsl
fucom
lds
push
adc
cltd
lret
cmp
pop
pop
dec
push
dec
popa
cmp
arpl
dec
cwtl
arpl
iret
ljmp
xchg
xlat
js
push
addr16
cmp
rcl
mov
cs
int
popf
jmp
inc
aad
push
lea
jge
mov
ja
sbb
dec
dec
out
aad
pop
pop
jnp
push
pop
mov
dec
mov
mov
mov
xchg
mov
call
out
ljmp
sbb
cmp
xor
jnp
je
pop
cmc
and
inc
dec
sbb
xor
push
cmc
push
ss
lret
xor
xor
dec
lds
in
out
pop
pop
sub
xchg
sbb
mov
dec
inc
mov
inc
fs
add
leave
insb
fists
repz
movsl
inc
pop
and
fbstp
into
testb
or
loop
mov
push
mov
cmpsb
rcl
adcl
cmp
loop
add
cmp
test
or
pusha
ret
adc
loopne
xchg
das
pop
shlb
add
lahf
pop
cmp
mov
pop
dec
inc
mov
pop
jne
dec
out
ficomps
incb
jb
stos
mov
sub
dec
adc
ja
ljmp
data16
jns
ljmp
jecxz
cmpsl
clc
inc
xchg
dec
dec
or
inc
cmp
insl
or
inc
cld
cmp
insb
ret
hlt
pop
test
hlt
fcomip
sbb
mov
in
mov
mov
popf
xchg
lods
adc
pop
sbb
fnstenv
adc
push
mov
stos
mov
sub
mov
mov
cmp
cmp
add
or
in
push
sbb
jle
pusha
loop
test
lret
movsb
repz
out
repnz
add
inc
xor
xchg
mov
shlb
sahf
mov
push
dec
mov
jcxz,pn
in
xor
mov
pop
and
jmp
lods
call
pop
push
jge
dec
negl
push
pusha
mov
shll
mov
sahf
fidivrl
imul
and
mov
loope
repz
xchg
ss
push
mov
xlat
xor
je
inc
xchg
push
inc
rcr
nop
mov
nop
mov
inc
lock
sbb
inc
in
push
xchg
sbb
nop
sub
xchg
pop
jle
pusha
jl
ret
pusha
add
adc
repnz
xorb
sahf
sahf
pop
test
shll
imul
sti
mov
sbb
mov
cwtl
cmp
mov
leave
push
or
repnz
andl
dec
sbb
mov
test
into
and
js
jg
sbb
jecxz
in
push
popf
leave
adc
jnp
jmp
and
or
pop
mov
into
ficompl
jno
mov
xor
cmp
incb
out
mov
cmp
or
mov
xor
fmuls
rcl
inc
pop
pop
int3
mov
or
pop
jne
pop
int3
push
mov
dec
pop
mov
jmp
ss
pop
insl
orb
pushf
repnz
dec
out
mov
loop
add
push
movsl
dec
mov
xor
mov
leave
adc
dec
int
xor
popl
rorb
imul
call
pop
push
push
mov
inc
inc
mov
icebp
loop
mov
xchg
jge
dec
cmc
or
push
outsb
mov
cmp
test
std
mov
xchg
jne
mov
xchg
xchg
int3
out
mov
mov
jo
rol
adc
sub
rol
adc
mov
dec
int
sets
std
sahf
repnz
sbb
pop
mov
push
jmp
les
adc
mov
sub
xchg
fidivs
push
arpl
je
pop
pop
cmp
jnp
mov
inc
mov
data16
nop
jo
adc
or
out
push
add
add
mov
push
aas
inc
mov
arpl
les
pop
push
lods
mov
sti
mov
loope
xchg
lock
and
cmpsl
or
cmp
insb
addb
mov
sub
push
dec
dec
in
aam
xor
arpl
fwait
aas
aaa
arpl
fwait
mov
shll
out
arpl
mov
int3
inc
inc
pusha
mov
repz
inc
dec
push
cmp
loope
jns
enter
ret
enter
in
xchg
and
leave
lea
xor
repz
xchg
test
icebp
cs
mov
test
adc
cld
inc
sub
dec
mov
push
inc
jg
es
sbb
cltd
dec
lret
fstps
push
adc
nop
lret
aad
and
adc
adcl
dec
cwtl
xor
jl
cwtl
fsubs
mov
mov
clc
jmp
mov
xchg
sub
hlt
stos
cmp
call
bound
adc
push
adc
fstpt
jg
out
gs
cmovb
pop
dec
sahf
dec
xchg
sub
xchg
mov
jg
add
xlat
mov
push
jle
push
mov
or
lret
mov
pusha
dec
and
cmp
outsb
xchg
stos
out
fs
not
dec
dec
inc
jmp
mov
push
dec
test
push
adc
cltd
cmp
dec
sbb
adc
mov
inc
out
jmp
cmc
push
xchg
sbb
inc
insl
mov
jg
sbb
fnsave
push
test
push
inc
addr16
shlb
nop
jo
adc
std
mov
sub
mov
fcom
inc
xchg
nop
dec
mov
pop
jge
xchg
xor
jae
xchg
dec
dec
push
cmpsl
adc
adc
ljmp
out
cmpsb
into
ret
in
mov
pop
or
dec
push
add
stc
mov
mov
cltd
mov
push
dec
sbb
sti
testb
pop
cmp
adc
in
les
rolb
sbb
rol
aas
sub
rcrl
adc
test
lds
xor
pop
cmp
mov
pop
xchg
fidivl
cmp
mov
mov
inc
popf
add
sahf
hlt
aas
and
scas
pop
insl
and
les
or
and
add
data16
add
dec
test
xor
jle
inc
scas
imulb
inc
repz
aaa
lahf
dec
fadds
out
xor
mov
adc
jae
aas
test
decl
or
mov
arpl
nop
mov
dec
adc
xor
push
dec
mov
fwait
cld
mov
into
pushf
cmp
pop
lds
sub
pop
xor
mov
pop
iret
mov
push
imul
imul
dec
cli
push
cs
inc
xor
xor
rolb
movsb
pop
mov
popa
add
shlb
add
lods
das
inc
jb
fisttpl
ret
icebp
insb
aaa
lcall
sbb
sub
xor
scas
adc
inc
push
inc
inc
jo
dec
add
mov
cmp
inc
dec
inc
push
inc
popa
mov
inc
out
xchg
dec
lret
jnp
ljmp
movsb
mov
mov
mov
push
adc
cli
cwtl
shll
lock
fs
push
stos
sbb
push
leave
pop
jnp
shll
sahf
dec
andb
pop
fs
ljmp
sbb
sbb
push
adc
ja
xor
lret
sahf
dec
enter
mov
cmpsb
mov
xchg
push
pop
mov
lret
ror
adc
sub
test
push
or
aad
push
out
adc
aad
rorl
xor
lds
lret
or
lock
jns
fisubrs
pop
mov
pop
mov
ds
es
mov
inc
inc
jp
push
pop
mov
mov
cmp
dec
insl
and
stos
sbb
sbb
gs
ja
cmpsl
mov
pop
xchg
jg
and
xchg
cmpsl
inc
lock
cmpsl
inc
jl
push
or
adc
dec
scas
push
jecxz
or
aad
push
out
cmp
aad
xor
adc
xor
mov
cmp
out
mov
icebp
mov
ret
fidivl
fs
push
sub
clc
jne
sbb
lock
mov
cmp
ljmp
enter
dec
push
sub
sbb
loopne
mov
cmp
fnsave
mov
ret
imul
leave
sahf
dec
push
cs
or
pusha
adc
mov
cltd
cmpsb
fs
jnp
icebp
xchg
js
shll
and
jo
ret
or
pop
lea
sbb
cmp
rorb
and
aad
or
dec
sti
cmp
mov
mov
js
jns
stc
movsl
into
pusha
clc
add
push
push
out
or
xchg
fwait
lahf
mov
cmpsb
scas
icebp
imul
sub
push
jnp
pusha
and
test
adc
shl
repnz
xchg
mov
aad
not
rol
cli
cmpsl
jnp
icebp
iret
stos
sub
and
mov
cltd
mov
and
outsl
push
fs
jg
into
sub
add
xchg
sahf
mov
iret
in
sub
push
pop
dec
mov
aad
movsb
dec
pushf
push
push
xchg
mov
inc
cmp
push
jbe
cld
mov
lock
arpl
push
push
adc
insb
enter
ret
push
enter
xlat
cwtl
and
dec
xchg
sub
or
mov
mov
les
mov
jbe
ret
push
lahf
jg
fldcw
push
into
adc
les
dec
mulb
pop
fnstenv
xchg
sahf
test
test
sbb
mov
xlat
adc
mov
in
mov
adc
ret
and
sahf
inc
pushf
cmp
and
push
jge
rcll
mov
test
push
jae
xor
sbb
sbb
add
fimuls
mov
int
repnz
out
xchg
cmp
xchg
test
cmpsb
sub
scas
push
daa
or
pushf
lock
and
mov
xlat
rolb
or
mul
enter
in
mov
or
sub
jns
inc
mov
jns
jecxz
dec
hlt
jb
iret
loop
mov
je
inc
push
jo
out
clc
push
es
push
inc
loope
sbb
sbb
mov
dec
mov
sbb
pop
js
clc
stc
or
daa
arpl
sub
cmp
in
inc
gs
lods
jo
loopne
sbb
jne
das
mov
push
adc
cmp
ss
sti
add
xor
sar
ja
inc
sarb
xchg
xor
rorl
pop
adc
dec
enter
ljmp
push
mov
outsl
loope
rorl
fisubrs
dec
mov
xor
push
sub
push
push
adc
in
ret
xchg
ja
popa
pushf
push
vpmulhuw
in
repnz
inc
imul
clc
stos
cmp
mov
loope
xchg
aam
and
repnz
loopne
cmp
xor
fisubl
mov
cld
sbb
pop
jge
sub
orl
mov
mov
cltd
icebp
xor
mov
roll
insb
mov
test
shlb
cs
mov
mov
or
push
popa
lret
into
jo
out
clc
push
inc
fidivrl
push
push
push
xchg
jl
popa
xchg
cmpsl
vmovss
adc
pop
mov
out
aam
loope
js
sbb
lret
rclb
ret
xchg
sub
scas
xlat
inc
outsb
mov
adc
cmp
push
adc
cmc
push
adc
and
jo
mov
push
orb
mov
pop
adc
dec
lods
and
push
adc
cld
sbb
lods
jnp
push
push
adc
call
mov
pop
xchg
dec
jl
pop
mov
pop
fstpl
mov
gs
mov
lea
dec
fsubrs
sub
rclb
test
repnz
mov
into
orb
scas
test
jne
popa
nop
mov
js
push
insl
test
lds
rcll
lahf
mov
cmp
or
ds
stos
fdivr
ret
rcrl
les
ret
jne
mull
adc
es
fnop
ss
outsl
loope
stos
mov
inc
cmp
ljmp
lcall
pop
outsb
ja
xchg
call
sbb
push
pushf
mov
daa
cwtl
mov
mov
xchg
das
leave
jno
cmpb
int3
pushf
xchg
sub
lcall
mov
daa
int
adc
cltd
push
mov
clc
test
fcomps
movsl
jno
add
push
rcrl
mov
push
sbb
fstpl
cmpsb
fsubrp
and
test
push
sbb
out
lret
push
adc
xor
in
sub
aas
lahf
pop
fildll
mov
filds
int
rcrb
cmpsl
jg
out
lea
push
cs
loop
ds
jns
mov
pop
fistl
and
std
xlat
ja
sbb
inc
xchg
or
pop
loope
xor
inc
rorb
adc
in
sub
mov
mov
dec
xor
dec
test
adc
sbb
fisttpll
mov
jecxz
out
das
arpl
adc
jbe
xchg
call
shll
les
push
mov
mov
jne
mov
clc
clc
push
xor
sub
push
sbbl
inc
cs
aam
jg
jno
scas
add
sub
lds
clc
test
push
xchg
or
je
arpl
mov
push
mov
adc
pop
adc
and
inc
xor
and
push
repnz
inc
out
pop
hlt
mov
rclb
fs
in
xchg
jae
cwtl
inc
cmp
adc
in
mov
shll
lret
add
stc
xor
fimull
repz
imul
cli
push
cwtl
xchg
xchg
cmc
and
xchg
cs
mov
sti
movsb
lret
xchg
mov
loopne
out
scas
fnsave
shlb
outsb
std
inc
int3
lcall
outsb
mov
push
dec
lds
loopne
dec
and
out
adc
cmovp
int
ret
or
mov
inc
fnop
and
cmp
pop
cmc
xchg
push
and
pushf
fsubrs
aas
gs
xchg
cs
jo
jmp
lret
add
dec
push
clc
pop
insl
scas
jmp
iret
sahf
inc
inc
push
and
loop
add
inc
push
push
adc
dec
imul
fldenv
and
arpl
xchg
punpckhwd
mov
push
mov
sub
out
mov
pushf
scas
vmovupd
lcall
popf
movsl
xchg
push
je
xor
mov
clc
repnz
push
mov
popa
dec
lret
clc
inc
insb
add
cs
mov
insl
sti
or
lds
cld
cs
push
jae
cmp
mov
in
into
lcall
mov
jo
sti
xchg
iret
mov
imul
sub
cltd
xor
adc
inc
fldcw
cs
push
adc
cmp
faddl
lock
popf
shlb
pop
adc
lods
pop
push
dec
in
sarb
arpl
pop
clc
sub
push
adc
jns
xchg
jg
inc
ljmp
test
push
mov
adcl
out
pop
mov
sub
mov
enter
daa
push
mov
adcl
pop
popa
pop
mov
sub
jecxz
out
xchg
xchg
jne
lret
sbb
and
lods
inc
stos
leave
pushf
xchg
or
fdivs
jl
fidivs
mov
fs
push
adc
mov
sub
int3
push
outsl
xorb
xor
push
or
xchg
daa
add
leave
cmpb
shrl
xor
inc
ret
testl
popf
pop
push
and
gs
push
adc
ja
test
enter
xchg
jecxz
and
or
repz
inc
out
mov
pop
outsb
aad
test
and
imul
shlb
xor
push
push
mov
std
daa
lcall
inc
push
add
sub
rcrl
sub
movsb
fwait
pop
aad
insb
add
subps
sahf
sahf
mov
sub
or
mov
cmp
mov
sbb
inc
das
fcoms
mov
ret
out
movsl
cmp
mov
mov
lcall
out
enter
mov
push
ret
roll
into
lods
xor
out
aas
dec
and
xchg
xor
popf
pop
mov
push
or
sub
or
daa
inc
pop
sub
jns
push
fidivs
nop
push
push
adc
ds
push
sarb
mov
js
repz
dec
mov
test
push
adc
iret
adc
jo
rcrb
sub
test
add
jge
sub
aad
or
mov
cltd
mov
adc
cmc
push
shll
std
xchg
mov
sbb
pop
push
scas
mov
iret
dec
cmp
mov
jno
xchg
mov
inc
jbe
scas
lods
push
fwait
jo
xchg
sahf
xchg
jo
ja
loopne
mov
jge
pop
scas
and
pop
xor
scas
dec
cmp
jg
into
ret
mov
cwtl
loope
or
mov
sti
xlat
in
inc
clc
push
enter
lahf
fisttpll
into
dec
jne
push
xchg
sub
cmp
inc
in
insb
add
cs
mov
ret
adc
js
je
cmp
xchg
lock
mov
shll
sbb
arpl
int3
js
js
push
mov
sahf
cmp
in
sub
into
ja
inc
sbb
sahf
adc
enter
add
and
or
or
push
imul
xchg
iret
or
cmp
mov
mov
imul
or
sbb
lea
popf
int
xor
add
les
xor
lods
adc
push
enter
dec
ja
in
test
mov
xchg
cmp
xchg
jg
inc
push
jo
rcrb
into
push
cli
push
loope
loop
push
adc
hlt
hlt
pusha
ret
xchg
les
inc
cli
mov
rcrb
mov
push
cs
into
adc
sahf
cmp
mov
mov
xor
push
cmp
jnp
lds
push
xchg
mov
sahf
jp
sub
into
ja
inc
and
push
cmp
dec
loope
pushf
mov
pop
mov
dec
mov
out
in
xchg
imul
cmp
std
imul
add
jns
xchg
mov
xor
push
testl
repnz
dec
jl
movsb
mov
sahf
cmp
in
int
dec
push
jo
mov
loopne
lret
mov
mov
adc
in
mov
mov
pushf
cmp
dec
lret
sar
shlb
xor
mov
cmpsb
inc
stc
sub
fstpt
jns
in
add
pop
outsl
aaa
xorl
and
push
jl
mov
aad
stos
les
dec
sbb
dec
outsb
pop
loop
jno
out
cmpsl
enter
fs
mov
popa
fldenv
sub
test
fs
in
les
adc
clc
add
mov
adc
lock
enter
pop
fidivl
xchg
and
mov
in
js
jae
popf
sbb
jecxz
movsl
jecxz
or
stc
ret
aad
mov
mov
cmp
mov
pop
aam
sahf
int3
xor
mov
add
rcl
xor
push
repnz
fdivrl
inc
stc
stos
mov
gs
shl
js
or
sub
std
inc
xor
mov
sbb
stos
movsl
aad
push
sbb
jb
xchg
pop
leave
div
enter
and
or
xor
dec
lahf
ret
jg
push
fistpll
vmovhps
xchg
ds
xchg
jmp
xchg
lret
imul
mov
loope
popf
enter
mov
repnz
mov
dec
xchg
out
inc
sbb
movsl
xchg
mov
cmpsl
insl
mov
outsl
inc
mov
sub
shrl
xchg
xchg
mov
dec
push
and
mov
in
pop
fmull
and
add
or
jmp
xchg
sti
divb
cli
sub
ljmp
fistps
in
push
insl
pop
push
iret
mov
cmp
leave
enter
jae
sbb
jo
inc
in
mov
inc
std
pop
mov
add
adc
out
pop
ds
jno
in
jle
minps
cmpsl
jmp
xchg
or
daa
jnp
ja
xor
jnp
add
imul
fcom
jmp
pop
inc
push
pop
dec
xlat
scas
stos
jnp
gs
push
lcall
ret
push
and
jle
cli
or
stos
data16
inc
jns
test
jns,pt
or
repz
stos
addb
inc
and
cmc
adc
int
mov
sahf
cmp
lret
fmul
dec
outsl
das
aad
jnp
dec
push
cmp
dec
add
pop
in
push
add
test
cwtl
xor
sub
mov
repz
pop
sub
daa
out
mov
xor
int3
add
fistps
push
iret
jb
pushf
mov
or
mov
in
cmp
in
lcall
adc
cltd
inc
ja
mov
jne
adc
sahf
cmp
jmp
fwait
mov
xor
outsl
std
scas
outsl
pop
xor
mov
repz
adc
xor
sqrtps
rcr
jns
mov
cmpsb
xchg
or
adc
mov
and
add
test
dec
jmp
xor
aas
sub
pop
sub
jo
xchg
pop
add
lret
sbb
pop
push
ljmp
ret
imul
dec
fcoml
repz
lcall
out
pop
jge
in
out
out
daa
adc
lret
clc
in
sahf
add
aaa
mov
rcl
cmp
sbb
arpl
cs
data16
push
pop
xor
add
xor
inc
dec
in
in
aad
ljmp
push
cmp
dec
loope
pushf
imull
inc
pushf
cmp
pop
xchg
jl
and
frstor
int3
mov
or
jg
out
cmp
ja
arpl
ret
insl
iret
lcall
push
iret
adc
out
push
mov
push
out
mov
aas
js
lock
xor
sub
jno
ret
push
lret
ljmp
mov
in
sbb
stos
add
adc
add
jno
dec
jb
shl
enter
outsb
and
push
mov
dec
iret
pushf
xchg
jae
inc
out
mov
test
dec
dec
loop
rorl
add
mov
lds
mov
push
iret
mov
mov
inc
cmp
mov
or
loope
and
jns
cmc
faddl
mov
xor
dec
adc
mov
push
pop
hlt
xchg
push
fimuls
push
pinsrw
ficoml
or
ret
inc
push
repnz
test
and
out
sbb
add
lret
cs
dec
mov
sbb
xchg
mov
pop
mov
cmpsb
hlt
mov
fcoml
out
scas
jb
stos
ficoms
adc
repz
sub
popf
push
push
pop
dec
sub
sub
fcoml
adc
fistpll
dec
mov
outsl
imul
ds
ficompl
imul
dec
push
fidivrl
dec
xlat
add
add
and
hlt
aam
lds
fnstenv
inc
pop
ds
clc
jmp
inc
arpl
push
rorl
xchg
mov
sarl
mov
ss
rolb
addr16
pop
sbb
mov
fisttps
out
cmp
push
fwait
push
rclb
call
mov
loop
jne
inc
jg
jnp
mov
jge
clc
jecxz
pop
pop
dec
adc
lds
mov
out
es
int3
pop
jns
lods
mov
push
xor
push
fnstcw
inc
stc
cmp
or
int
cmp
cld
mov
add
fwait
xchg
sub
iret
cmp
rcrl
mov
xor
pop
call
je
add
adc
ret
jno
mov
rolb
mov
mov
mov
cwtl
or
cmp
pop
scas
aad
push
adc
jbe
insl
push
jno
pop
inc
pop
inc
pop
ret
je
lea
cmp
clc
inc
cmp
in
pop
out
addb
popf
inc
add
addr16
daa
sarl
fwait
xor
arpl
sti
das
dec
jg
test
mov
ljmp
mov
data16
adc
jg
movsl
inc
mov
xchg
sarl
test
mov
out
aas
sahf
inc
or
mov
pop
xchg
cs
call
rol
push
cmp
mov
push
bound
lea
xor
dec
lret
xor
shr
mov
mov
or
sahf
icebp
loop
add
cmp
mov
mov
movl
mov
cmp
cmpsl
push
dec
sbb
cmp
cltd
xchg
fidivrl
push
mov
cs
or
push
pusha
adc
jmp
repz
popa
and
dec
pop
mov
popa
and
adc
and
test
ljmpw
xor
out
adc
divl
inc
jb
fistpll
je
adc
sahf
sub
repz
fnsave
push
adc
mov
bound
jl
xchg
mov
insl
rclb
push
adc
pusha
pop
push
jp
xor
ret
or
rorb
lea
lock
and
xchg
enter
movsb
popf
mov
xchg
add
mov
shr
cmpsl
popf
loop
adc
gs
xchg
out
mov
mov
cltd
sub
and
nop
dec
xchg
into
or
in
or
jge
and
cmpsb
inc
sbb
movsl
pushf
mov
in
inc
jbe
les
sub
sti
mov
jnp,pt
dec
mov
or
dec
insb
int3
adc
orl
dec
mov
push
es
xor
ret
ja
icebp
cmp
inc
popa
cs
mov
mov
xor
jecxz
sahf
daa
jle
sahf
lret
repnz
or
jno
inc
mov
add
rcrb
andb
jecxz
dec
nop
pop
icebp
test
jns
in
pop
pop
hlt
fstps
add
cmp
jo
in
xor
pop
add
push
fildll
cmp
insb
lods
lcall
push
scas
mov
sarl
lret
adc
jae
sti
fstps
decb
and
push
fisttpll
mov
jmp
adc
xchg
jecxz
or
and
adcl
repz
leave
xchg
add
outsb
addr16
sbb
pop
jp
ss
cld
sub
add
movsl
cmp
mov
pop
add
mov
sbb
outsl
loope
cmp
and
sti
push
fidivrs
xchg
dec
cmc
add
cwtl
sub
out
lea
movsl
xchg
push
cs
pusha
sti
outsb
inc
jmp
imul
pop
sub
dec
pop
into
ds
shlb
insl
hlt
fmull
fidivs
cmp
adc
test
pop
movsb
lcall
push
sbb
pop
aam
sahf
scas
cwtl
sbbb
push
push
rolb
idivl
sbb
mov
loop
mov
test
into
imul
enter
xchg
mov
pop
jae
rcl
aaa
out
mov
in
js
jmp
fisttps
pop
push
jnp
adc
in
pop
push
sbb
or
sbbb
mov
jecxz
adc
imul
cld
lret
cmp
aam
lret
dec
repnz
mov
lea
cmc
mov
jo
mov
xor
mov
jno
xor
call
xchg
icebp
xor
mov
into
pop
ds
adc
rclb
pop
pop
sub
mov
scas
lock
sub
leave
movl
cltd
mov
mov
adc
or
push
adc
or
ror
jb
into
je
lcall
je
cmp
popa
sub
sbb
xor
mov
data16
dec
imul
and
or
adc
ret
sbb
and
in
sbb
fdivs
adc
xor
movsl
iret
lds
inc
push
test
lcall
push
pusha
push
push
dec
insb
fucomp
jo
adc
out
add
cmp
pop
fs
xchg
fists
jge
mov
fiadds
push
arpl
insl
lds
dec
ret
lock
pop
jne
loop
mov
sbb
add
inc
cli
repnz
pop
xor
les
adc
out
add
mov
repz
pop
adc
pop
sub
xchg
jne
xchg
or
bound
in
mov
dec
pop
sub
and
add
pop
out
fsub
inc
insl
sub
ja
adc
sub
sbb
cli
mov
fwait
lret
xchg
in
mov
push
dec
pop
cmp
movsl
inc
jge
bound
pushf
inc
pop
mov
pusha
ret
xchg
loopne
cmpsl
sarl
and
insl
ret
xchg
dec
sub
adc
icebp
mov
lret
xchg
mov
or
into
imul
and
mov
push
xchg
xchg
adc
das
pushf
lret
outsb
clc
test
repnz
pop
sub
adc
push
push
sahf
xor
xchg
rcrb
roll
xchg
leave
mov
aad
sbb
mov
notl
adc
push
loope
insl
jl
lcall
pop
adc
stos
pop
lds
adc
cmp
lock
pop
lds
adc
xchg
pop
lds
adc
enter
lds
adc
stos
popf
sbb
clc
fldln2
xor
pop
lds
adc
cmp
test
push
xlat
pop
lds
adc
xor
and
insl
sbb
daa
push
fsubs
pop
adc
sub
arpl
mov
rcll
dec
mov
pop
lds
adc
adcb
sub
out
mov
gs
lahf
pop
lds
adc
mov
adc
pop
adc
negl
fisttpl
cltd
jecxz
dec
sbb
enter
adc
into
and
cmp
clc
jmp
inc
sarl
cmp
jae
adc
cmpsl
pop
nop
cmp
mov
dec
int3
out
cmp
cmpb
jnp
mov
pop
js
dec
rorl
push
adc
notb
call
push
adc
inc
jl
add
push
jg
test
imul
enter
push
das
push
enter
cltd
or
testb
pusha
hlt
jb
push
fcmovnbe
xchg
mov
in
lea
leave
mov
inc
in
roll
adc
ss
mov
sub
adc
jp
sahf
adc
into
pop
push
jge
adc
adc
adc
repnz
pop
mov
adc
je
adc
in
rcll
mov
adc
outsl
jp
arpl
adc
leave
mov
inc
pop
mov
test
iret
adc
jb
fdivr
pop
adc
sub
inc
test
add
call
push
adc
jnp
in
pop
mov
pop
mov
ret
xchg
insb
call
inc
and
call
or
xor
adc
xor
fwait
cmp
mov
inc
add
cmp
mov
cs
jo
adc
out
out
adc
lods
in
sub
fsub
lds
jae
data16
inc
repnz
int
popf
les
or
xor
arpl
cmc
xchg
adc
je
cs
jo
adc
int
ficoms
push
adc
push
sbb
xor
sbb
pop
adc
adc
inc
adc
nop
pop
mov
sbb
aas
lret
and
gs
dec
ret
sbb
xor
mov
push
adc
outsb
and
faddl
adc
je
or
sahf
cmp
sbb
mov
outsl
mov
mov
ret
xchg
cwtl
xchg
jbe
shrl
ret
loopne
iret
sahf
xchg
or
movl
adc
loop
je
rcrl
je
adc
jns
int
lret
sarl
xor
arpl
cmp
mov
pop
adc
les
je
adc
pop
and
enter
ljmp
mov
pop
adc
in
dec
sub
ds
out
outsb
inc
push
sbb
ss
adc
inc
mov
push
cmp
pushw
cmp
push
ds
out
cmpsb
inc
ljmp
mov
adc
icebp
lea
je
fisubs
mov
or
jle
adc
inc
popa
sti
sbb
jns
pop
mov
gs
fidivrs
movb
jno
adc
and
push
out
dec
mov
test
adc
pop
mov
dec
leave
add
jne
lret
jge
clc
inc
mov
xchg
mov
aaa
pop
ret
mov
sub
adc
jno
enter
fisubrs
mov
pop
and
test
testl
cld
mov
data16
pop
push
mov
mov
addr16
mov
cld
in
jbe
mov
imul
movsl
add
jp
sbb
in
mov
or
call
shlb
mov
xchg
orb
pop
adc
and
mov
and
dec
popa
test
jl
inc
add
sub
outsl
ret
push
mov
or
stos
jb
pop
ss
cs
fsubrl
mov
inc
push
ret
jno
pop
popf
inc
xor
cltd
pushf
dec
sub
add
es
call
mov
dec
in
clc
fucom
lahf
or
lret
into
ss
push
adc
imull
jle
gs
aam
int3
outsl
cmp
roll
test
push
cmp
dec
cmp
dec
dec
jne
and
push
adc
aam
xchg
or
roll
jl
cs
add
lods
ror
addr16
maskmovq
cmp
inc
push
xor
lahf
in
adc
dec
test
sbb
add
std
mov
push
adc
je
cld
mov
fimuls
pop
xchg
sarb
adc
push
jae
jg
xlat
push
aam
stos
aas
mov
jno
xchg
inc
ret
mov
aad
or
xchg
sbb
lret
pushf
cmp
jg
and
iret
insl
xchg
aaa
out
pop
notb
adc
ss
mov
dec
cmp
xchg
scas
scas
pop
repz
jae
adc
in
repz
xor
pushf
out
lcall
push
ja
daa
leave
fsts
dec
cmp
jo
lcall
ds
and
out
popa
inc
pop
fdivr
pop
adc
inc
mov
mov
pop
int
fimuls
push
adc
daa
mov
adc
dec
jne
jne
jae
das
or
or
movl
adc
loop
popa
sbb
push
adc
pop
or
pop
adc
xchg
lods
sub
adc
lds
das
adc
push
adc
rcll
and
in
inc
sahf
xor
inc
pop
xor
addr16
mov
nop
in
seto
add
int3
mov
dec
ret
add
mov
pop
xor
pop
xchg
je
and
ret
dec
int
nop
pop
push
adc
fcompl
xor
das
cli
or
xor
lock
inc
cmp
shll
push
mov
int
adc
xchg
int3
add
sbb
es
sub
into
sbb
sub
inc
push
or
stc
inc
mov
int
xor
sbb
jle
or
pushf
cmp
lahf
jmp
xorb
cmp
outsb
fiaddl
and
jns
aad
sbb
sbb
je
cs
jno
adc
inc
xor
out
xor
sub
sbb
pop
jbe
dec
lret
mov
dec
mov
xor
in
push
adc
jae
or
out
or
je
push
pop
mov
cwtl
jno
adc
mov
rcrb
jns
xchg
movsb
xrelease
xor
add
push
adc
mov
push
out
pushf
lret
jb
mov
cmp
pop
icebp
mov
shll
sbb
arpl
fstpt
push
jl
push
adc
ror
pushf
pusha
jl
fwait
cmc
insb
and
shlb
cwtl
in
push
adc
push
lods
rorl
out
inc
xor
in
aaa
lcall
lahf
popa
das
cmp
adc
sub
iret
fldenv
notl
aad
push
pop
mov
push
ja
rcl
idivb
mov
lcall
push
cmp
stos
xor
pop
mov
push
adc
and
adc
repnz
cmp
adc
jl
jbe
outsl
jecxz
jnp
adc
arpl
pop
insb
ljmp
pop
inc
dec
outsb
or
stos
cmp
add
jno
adc
sahf
adc
data16
fdivl
jp
mov
or
adc
mov
xor
xchg
out
int3
fimuls
add
call
jno
adc
subb
mov
inc
popa
push
sbb
mov
cmpsl
ss
dec
add
jo
adc
jae
xrelease
or
ja
sub
lcall
shl
out
sub
das
inc
out
mov
fsubp
add
cs
outsb
xchg
dec
repnz
movsb
les
inc
stc
aaa
shl
xchg
jge
movsl
sub
xchg
incb
test
mov
xor
push
aad
lcall
ret
dec
jp
addr16
ret
cmpsb
pop
popf
or
clc
faddl
mov
cmpsb
into
jbe
sub
jl
jbe
mov
inc
xchg
sbb
add
mov
pop
movsl
addl
mov
in
lds
xlat
mov
in
sub
aad
sar
add
sbbl
ret
push
jle
mov
lods
mov
fdivs
adc
pop
andl
xchg
adc
inc
xlat
sub
xchg
jo
adc
push
scas
fs
movsl
xor
icebp
mov
pop
inc
inc
dec
xlat
scas
lret
fcompl
mov
xchg
fists
jns
call
rcl
out
getsec
mov
adc
adc
pop
jae
lods
fwait
cmp
rep
stos
lahf
xor
shrl
test
repz
ds
fisubl
sahf
cmp
aas
dec
xor
rcl
les
adc
push
push
shll
jae
or
or
call
mov
movntq
lock
scas
imul
rorb
sarl
inc
das
xchg
ret
hlt
jl
push
adc
inc
leave
shlb
dec
sub
enter
cmp
mov
insb
mov
rcrb
cmp
dec
roll
subb
hlt
loop
sahf
xchg
or
ficoml
insb
rcr
shrl
cltd
mov
in
test
cs
jno
adc
xchg
or
jg
ss
mov
ljmp
jecxz
dec
inc
or
iret
ljmp
inc
rclb
mov
xchg
popfw
cmp
pop
push
call
repz
jg
mov
dec
xchg
push
pop
jge
xchg
rorb
mov
adc
adc
out
call
hlt
cmpsl
pop
icebp
ret
fcomps
add
call
mov
or
jo
adc
hlt
arpl
mov
xchg
hlt
jo
adc
adc
inc
jae
data16
lock
adc
lret
mov
mov
xlat
data16
push
sub
adc
sub
outsl
outsb
mov
jb
movsb
popf
mov
pop
sub
adc
or
leave
or
jns
pop
cmp
hlt
xchg
loope
or
in
sar
cmpsl
shlb
mov
adc
sahf
scas
outsb
lock
or
push
call
inc
fs
out
xor
lods
push
push
in
jle
jb
cmp
mov
ja
aad
ja
je
adc
add
ss
sbb
inc
mov
cs
xor
ss
test
leave
jbe
lret
add
and
sub
sub
xor
mov
mov
hlt
mov
cmpsl
leave
push
popa
repnz
scas
mov
xchg
dec
xchg
out
mov
sub
xchg
mov
in
mov
dec
dec
adc
sarl
add
in
stos
gs
jae
sub
in
mov
and
sbb
js
out
sbb
in
push
adc
out
dec
ljmp
rorl
and
jp
cmpsb
mov
or
dec
inc
clc
test
and
outsb
das
jae
test
mov
mov
mov
adc
add
or
stc
dec
in
enter
mov
dec
mov
mov
incl
call
or
cwtl
stos
dec
xchg
insl
mov
xchg
jmp
popl
push
adc
cmp
imul
ret
dec
rcll
nop
addr16
mov
in
lret
iret
in
ja
out
xchg
xor
add
xchg
mov
jb
mov
frstor
add
test
std
xchg
sub
cmpl
addr16
outsl
leave
flds
insb
sub
out
mov
jl
fistps
jmp
push
pop
pushf
mov
xor
pop
and
mov
sub
ret
iret
xchg
test
cmp
xor
rcr
jecxz
scas
loop
cmpsl
out
daa
popa
xor
xchg
xchg
jb
adc
inc
push
mov
mov
shrl
out
jbe
je
adc
xor
push
movl
pop
clc
lds
add
mov
sub
insb
inc
pop
scas
fdivrl
js
mov
inc
pop
inc
pop
add
push
xor
push
lcall
cmp
mov
lret
mov
adc
add
fldenv
and
mov
out
icebp
lret
xchg
fnstcw
imul
jo
cmp
cmp
or
cs
jno
adc
mov
push
inc
loop
mov
adc
cmpsb
jnp
sahf
pop
pushf
call
xor
add
lea
int
jae
into
sbb
jg
inc
xchg
sbb
out
stc
xor
insl
add
xor
sbb
pop
adc
pop
bound
add
mov
fstpt
mov
push
adc
inc
mov
dec
pop
or
push
cld
jo
adc
loope
adc
push
cmp
mov
push
out
addl
jo
ret
fadd
faddp
add
pop
out
fsubl
in
stos
cltd
xor
cs
jg
mov
js
mov
and
jo
mov
or
and
and
pop
push
adc
push
cmp
scas
inc
mov
xchg
lock
fs
adc
mov
out
inc
out
sbb
dec
mov
add
add
movsl
sub
jl
loope
mov
add
mov
cmp
cmp
or
pop
mov
inc
mov
xor
or
mov
adc
add
out
jbe
out
cld
xchg
push
adc
cmpsb
lcall
mov
clc
inc
add
or
fdivl
jns
adc
xor
ds
mov
shrb
adc
inc
lea
mov
or
fwait
inc
sahf
jl
inc
jecxz
iret
popf
cmp
lods
dec
outsb
mov
fcomi
adc
mov
push
mov
mov
popf
sub
adc
mov
mov
mov
mov
adc
push
cmpsl
pop
inc
mov
add
mov
dec
push
adc
rorl
push
adc
fwait
ds
sub
popf
push
or
or
fdivrs
insl
xchg
cmp
loope
cltd
mov
jae
stos
xorb
dec
xor
xlat
cltd
xchg
pusha
jl
adc
push
cwtl
jae
adc
popa
test
dec
cmp
pop
ret
mov
push
adc
dec
movl
dec
movl
lcall
add
imul
jo
cmpsl
jae
stos
push
mov
cmp
hlt
cld
insb
mov
push
sbb
testl
es
push
fldl
push
lcall
add
or
push
or
subl
lcall
xchg
push
outsl
out
inc
dec
cltd
shr
hlt
fcmovnu
int
aad
xchg
lock
push
pop
je
dec
sbb
push
adc
xor
sbb
cwtl
lcall
cli
lock
xorl
pushf
push
dec
cld
ds
push
sahf
lock
rcll
push
cmpsl
jp
inc
insl
mov
enter
arpl
sahf
cmp
inc
lea
cmp
jbe
test
jb
add
das
call
and
test
or
sbb
mov
jae
or
ljmp
push
dec
mov
or
push
mov
pop
or
push
xchg
cld
jo
adc
call
enter
add
dec
negb
icebp
pop
add
jmp
xor
push
adc
loop
call
lock
orb
pop
add
fcomps
mull
sub
je
pop
adc
xchg
dec
xchg
inc
jmp
rol
or
mov
cmp
lea
pop
mov
lcall
pop
adc
cmp
sbb
arpl
adc
test
pop
mov
clc
orl
mov
push
push
cmpb
pop
adc
sti
cli
adc
lds
jmp
xor
int
les
ja
mov
push
xchg
outsl
int3
inc
cmp
repz
fimuls
mov
faddl
adc
or
popa
jg
in
test
sbb
dec
movsb
aam
xor
mov
sub
mov
cs
je
pop
adc
or
je
pop
adc
repnz
jno
xchg
je
pop
adc
add
test
into
pushf
mov
icebp
push
pop
adc
lcall
jb
movb
fwait
das
stos
addr16
sti
loop
repnz
and
movb
push
cmpsl
movsl
imul
test
lret
mov
call
fs
sahf
cmp
in
sub
xor
fwait
and
sbb
imul
sbb
jbe
adc
scas
out
jbe
popa
adc
pop
add
lods
flds
cwtl
mov
or
mov
es
loop
lods
iret
add
cmp
or
rorl
inc
mov
pushf
push
icebp
loop
pushf
push
mov
and
repnz
out
or
addr16
pushf
popa
and
lds
adc
jo
rorl
jmp
iret
xor
push
inc
sbb
out
imul
dec
sub
sbb
dec
jl
xlat
lret
push
lds
adc
cmp
pop
xchg
xor
pop
lds
adc
mov
pop
lds
adc
and
pop
movsb
das
pusha
lds
adc
rclb
pop
outsl
sbb
jno
notl
adc
fcompl
pop
adc
lods
pusha
lds
adc
les
mov
inc
dec
and
icebp
dec
xchg
xor
pop
sbb
movsl
imul
imul
lcall
sbbl
or
imul
lods
pop
fsubs
adc
jns
mov
adc
add
out
sbb
and
cld
sahf
bound
mov
or
fisttpll
cli
sbb
jg
mov
rol
ljmp
mov
pushf
push
ret
jge
cmp
out
loope
ss
add
pop
adc
arpl
jmp
mov
insl
aas
jbe
push
ja
adc
test
jecxz
pop
or
out
scas
dec
pop
or
ljmp
dec
pop
mov
push
pop
or
inc
inc
fiaddl
jb
xchg
dec
pop
or
push
aaa
cld
jo
adc
js
or
sahf
mov
add
push
adc
inc
or
push
cmp
pop
mov
adc
cmp
jo
adc
lret
pushf
pop
sub
std
aaa
sbb
adc
fidivs
push
dec
pop
or
scas
divb
movsl
insl
add
adc
push
or
roll
movb
sub
push
cmpsl
xchg
mov
or
mov
jne
xchg
jne
ljmp
mov
sub
jle
cmpb
pop
fs
out
jne
pop
push
cmc
test
adc
nop
nop
adc
inc
and
ds
inc
loopne
into
das
mov
jl
out
or
dec
cmp
cwtl
xchg
adc
sub
cmpsb
cs
hlt
pop
mov
push
sbb
insb
or
aaa
imul
cmp
hlt
subl
cld
mov
lahf
jns
inc
or
adc
add
adc
cli
ds
icebp
mov
mov
dec
xchg
cmpsb
sahf
repz
jecxz
mov
rorl
inc
call
jmp
adcb
fidivs
mov
int3
sub
add
int
add
fiadds
push
push
xchg
inc
dec
loope
mov
sbb
push
adc
in
adc
lret
sbb
inc
cmp
sbb
sbb
add
sub
outsl
out
notl
fwait
dec
imul
pop
or
inc
mov
pop
adc
rcr
aad
js
fisttpll
pop
movsb
stos
cmp
adc
push
push
push
outsb
roll
add
xchg
push
jo
or
push
fs
xlat
pop
xchg
ja
inc
pop
cmpsl
stc
lds
test
js
add
mov
push
addr16
in
les
adc
aaa
push
mov
pop
adc
cmpsl
rorl
sbb
cs
add
sbbl
dec
shr
fstpt
js
fldenv
notl
out
pop
pop
or
xchg
ja
xor
push
pop
or
pop
push
pop
or
mov
xchg
jecxz
mov
dec
pop
or
xchg
or
out
sysenter
push
adc
mov
jno
adc
rcrb
adc
dec
xor
jecxz
in
repnz
cld
lea
jle
push
or
std
in
or
shlb
mov
jns
test
dec
aad
jae
into
pushf
mov
or
cmp
mov
push
pop
fstps
lcall
adc
push
mov
cmp
or
xchg
mov
adc
inc
movl
fisubrl
mov
jns
inc
mov
call
cwtl
fcomps
jge
aad
out
cmp
shl
adc
movsl
imul
and
fucom
dec
push
rorb
movsl
aam
xor
adc
clc
lock
push
pop
cmpsb
iret
inc
in
outsl
inc
inc
push
xchg
cmp
and
lahf
jno
icebp
sub
cmpsl
sub
arpl
lcall
stc
sub
lcall
inc
jl
sbb
inc
fsubl
push
rcrb
mov
lea
fdivs
add
jge
push
push
xor
mov
lret
push
andb
fmuls
xchg
jbe
xlat
adc
clc
add
iret
div
outsb
pop
lds
push
xchg
js
cmp
cmp
inc
dec
loopne
jmp
adc
jl
mov
fsubrp
in
inc
mov
inc
fidivl
mov
push
cmp
mov
mov
or
out
cltd
xor
je
leave
bound
sbb
add
stos
cmpsb
ss
les
and
aad
or
push
inc
mov
in
call
test
nop
pop
lods
clc
ret
popa
and
inc
xor
xchg
lret
or
cmpsb
gs
mov
orl
mov
lret
ja
jge
xor
mov
das
je
int
stos
aas
fsubrs
adc
mov
xor
cmpsl
ret
jne
call
dec
sbb
cmp
into
aad
test
xchg
xchg
stc
push
inc
iret
dec
cmp
stos
rcll
fcompl
adcl
or
pop
inc
dec
mov
inc
ljmp
movsl
shr
mov
orb
cmp
in
mov
cmc
aad
notb
aam
addb
push
xchg
add
jecxz
xchg
scas
mov
loope
dec
rcrb
pop
push
adc
sub
push
and
sbb
enter
out
pop
cmpsb
rorl
ja
mov
ja
inc
xlat
leave
jmp
and
pop
xor
movsb
iret
lods
adc
and
inc
sahf
push
mov
rol
cmp
adc
jae
dec
fcoml
jp
xor
imul
inc
xchg
cltd
jg
in
push
adc
fcomi
inc
cs
xchg
pushf
rcrl
jne
mov
inc
dec
adc
or
dec
cmp
and
sub
xor
pop
es
push
dec
lret
sub
inc
pop
gs
push
sbbl
ret
cmp
and
xor
pop
movsl
jne
pop
fcmovnu
dec
leave
cld
icebp
push
adc
into
xchg
sbb
mov
addr16
inc
js
mov
push
xor
ret
sbb
stc
out
repz
cmpsl
jne
pop
bnd
rcrb
inc
inc
sbb
xlat
mov
mov
fs
add
xchg
push
adc
adc
popa
ret
or
iret
xchg
sbb
xor
push
icebp
xchg
js
add
adc
push
adc
insl
xor
or
ret
arpl
test
roll
repz
adc
mov
mov
xor
mov
ret
xchg
xor
jge
jmp
fisttpll
mov
inc
gs
leave
into
pushf
mov
popa
in
xchg
imul
inc
mov
and
xchg
imul
jae
movsb
xchg
push
into
xor
je
mov
hlt
insl
sub
lret
xchg
movb
jae
inc
sbb
shl
adc
sbb
xchg
cmp
sahf
pop
jl
inc
and
and
xchg
shll
stc
xchg
out
dec
jp
adc
jecxz
int3
and
dec
ret
xor
mov
dec
jne
xchg
gs
lock
adc
out
jb
test
sub
mov
xchg
sbb
and
les
sti
jno
inc
mov
fcoml
dec
ljmp
jo
push
adc
pusha
and
xchg
mov
ret
call
popa
mov
push
imulb
in
dec
popl
push
jns
jne
adc
outsl
pusha
lock
adc
and
push
adc
or
daa
push
rcrb
inc
sbb
push
adc
ja
add
push
adc
push
adc
xor
pushf
fildl
xchg
sbb
mov
mov
lcall
out
push
adc
xchg
sti
mov
movsb
and
ja
shll
int3
inc
lret
mov
push
adc
dec
dec
imul
jno
inc
jb
mov
stc
arpl
adc
das
xchg
jecxz
jb
call
pusha
in
andb
fidivrl
push
adc
push
lahf
add
movsl
jae
rcrb
ror
sub
cmp
shrl
out
push
adc
fisubrl
dec
adc
sti
stc
xchg
int3
jle
or
push
adc
lret
add
push
mov
jmp
lods
mov
jb
adc
iret
cmp
test
jb
adc
push
lahf
mov
cmp
adc
push
adc
sbb
std
and
ficoml
repnz
adc
test
pop
aas
aas
xor
pop
leave
mov
test
jp
iret
call
pop
lret
popa
leave
mov
clc
out
ss
test
popa
orl
mov
imul
mov
jecxz
push
push
add
js
ljmp
sub
jo
fldcw
imul
fsubrs
pop
xchg
mov
mov
clc
mov
add
mov
cmp
vmovntps
mov
scas
fdivl
mov
add
mov
int
cmp
ljmp
fistpl
js
cmp
mov
add
enter
les
fisubs
sub
test
outsl
ss
add
xlat
inc
negb
mov
cmp
std
scas
aad
add
xchg
sbbl
jne
mov
mov
mov
push
jo
shl
lds
ljmp
dec
push
ds
sub
cli
je
dec
ret
sub
xchg
adc
sub
sbb
xchg
adc
xor
popf
lret
push
pop
xchg
inc
push
clc
ljmp
dec
rolb
sub
loope
xlat
inc
clc
and
jl
and
pop
mov
mov
movsl
xor
repz
add
pop
xchg
je
or
filds
xchg
lret
idivb
or
cmp
rcll
aad
pop
fidivl
mov
mov
mov
movsl
cmp
sbb
aad
dec
jo
adc
jae
xor
cmc
aad
add
mov
inc
out
pop
cld
pusha
push
mov
clc
test
repnz
or
ret
fidivl
push
cmp
add
mov
dec
dec
lret
mov
mov
movsl
pop
cmpb
mov
movl
mov
cmp
popf
and
pushf
push
pusha
or
movsb
push
sbb
mov
gs
dec
js
mov
mov
push
out
sbb
sub
jb
insl
sbb
inc
add
ja
xchg
dec
popa
lock
mov
pop
cmp
mov
dec
jle
fisubs
dec
cmp
push
mov
sub
mov
imul
mov
lea
mov
and
iret
xor
cmpsl
pop
cmp
jae
leave
jp
sbb
fwait
sbb
inc
imul
andl
andl
mov
or
dec
adc
push
les
sti
fs
loope
sub
jb
dec
shll
push
lahf
ret
cmp
stos
sbb
rcrb
and
sbb
push
and
xchg
jle
xchg
dec
out
sahf
add
sbb
outsl
pushf
popl
mov
pushf
mov
sbb
push
lahf
sti
lcall
filds
adc
push
mov
lret
repz
es
xchg
out
shl
stos
mov
inc
mov
hlt
push
insb
cmp
xchg
repnz
ss
xchg
movsb
and
imul
fcoms
mov
xlat
test
cmp
fimull
pop
pushf
xchg
dec
mov
imul
out
xor
or
ljmp
ficompl
aas
loopne
popa
push
xor
in
imul
rcll
cmp
sti
in
sub
xor
ss
sub
mov
mov
js
inc
push
add
jb
popf
insl
shrl
stos
ljmp
les
sub
rolb
push
add
dec
xchg
popa
std
mov
iret
out
stc
outsl
dec
sub
daa
or
push
mov
cmc
push
mov
jns
addr16
out
std
aam
xchg
push
clc
lret
adcb
loopne
scas
je
insl
push
xchg
jno
or
cmp
cmpsl
out
mov
mov
jge
xchg
dec
sbb
hlt
mov
sbb
xor
out
pusha
cmp
addr16
ret
jbe
sbb
jle
jo
sarb
outsb
test
mov
or
mov
jnp
inc
mov
jb
jecxz
cs
or
jns
inc
imul
xchg
sahf
pop
out
and
mov
insb
and
xlat
dec
fcomip
xchg
cltd
cmp
push
xchg
ret
movsb
fcomp
dec
clc
sub
xor
daa
mov
out
loop
xchg
pop
xchg
std
clc
mov
imul
push
inc
clc
jo
xchg
mov
push
addr16
xor
jle
test
out
lds
das
sub
arpl
std
test
pop
adc
dec
xchg
mov
adc
lock
cmpsl
testb
stc
add
cwtl
push
stc
add
sub
mul
int
inc
pop
movsl
test
les
arpl
push
divb
mov
lock
xchg
cmp
xchg
insl
cmp
xchg
cs
jae
mov
sub
loop
icebp
sub
inc
inc
lret
or
ss
out
fcomps
push
shl
insl
into
lcall
orl
add
xor
or
mov
gs
je
add
rcrb
shll
scas
sub
out
cmp
clc
push
inc
fidivrl
push
push
push
xchg
jl
popa
xchg
cmpsl
vmovss
adc
pop
mov
out
aam
loope
ss
sbb
lret
rclb
ret
xchg
sub
scas
xlat
inc
outsb
mov
push
imul
je
test
sub
mov
adc
inc
aas
sbb
xor
sbb
aad
andl
std
movsb
lret
xlat
out
push
mov
pop
out
add
lret
fs
sub
hlt
jnp
pop
call
jl
xchg
ja
arpl
cld
and
xor
xchg
fidivrl
fs
pop
push
adc
and
lret
and
xor
push
lahf
roll
pop
xor
scas
cli
mov
sbb
out
andb
imul
dec
int
inc
pop
jecxz
push
cwtl
cmp
in
dec
leave
dec
push
jbe
sbb
popf
add
and
int
or
fcoml
xor
inc
loope
decb
rcll
ret
mov
paddw
jecxz
movsl
sub
sbb
sahf
push
ret
loop
je
inc
push
gs
das
imul
es
xchg
andb
loopne
mov
sub
test
mov
shll
lcall
jae
in
xchg
into
adc
cld
sbb
neg
inc
mov
ror
fcomp
es
hlt
push
xchg
jge
cmpsl
pop
fiaddl
addl
sbb
and
fistpll
sbb
add
mov
xlat
mov
xlat
loop
pop
push
adc
sub
mov
inc
or
jp
dec
movsl
sub
jns
adc
push
mov
mov
xchg
imul
add
mov
pop
adc
nop
subb
push
adc
or
add
repz
js
dec
add
dec
stos
fsubs
jecxz
fimuls
adc
xorb
and
rclb
push
or
rcrl
mov
pop
add
aas
fwait
add
clc
mov
out
ds
push
iret
or
ret
data16
xor
repnz
adc
cmc
push
jle
dec
dec
adc
repz
out
dec
push
mov
es
mov
add
push
push
push
subl
loop
test
sbb
xchg
cs
pusha
mov
jns
push
ss
dec
int3
mov
pop
fdivl
jae
ret
dec
stos
hlt
xor
and
loopne
add
sbb
pusha
stos
adc
dec
sbb
into
fsubp
stos
lret
lret
adc
sub
hlt
out
loope
into
ja
test
xor
mov
rclb
mov
dec
jno
pop
xchg
mov
mov
clc
mov
mov
sti
jl
pop
pop
mov
dec
pusha
pushf
repnz
lods
imul
mov
sub
arpl
aad
pop
push
cmp
dec
xchg
mov
push
jmp
movl
cli
sub
fldenv
aaa
xchg
or
inc
cmpsl
adc
inc
fnstenv
repz
repz
loop
fcomps
fs
leave
sahf
cmp
in
push
gs
adc
add
pop
cmp
fcmovb
or
push
pop
push
add
mov
repz
push
and
mov
scas
mov
cwtl
cli
jnp
adc
add
dec
into
adc
fnstsw
sub
into
pushf
imul
dec
mov
push
mov
or
xchg
inc
xchg
cmp
add
shrl
mov
xorb
mov
or
icebp
loop
mov
fistpl
xchg
decb
mov
add
cli
ljmp
orl
mov
mov
mov
sbb
xor
and
dec
cli
xchg
je,pt
push
pop
cmp
jnp
mov
mov
sahf
cmp
int3
insb
cmp
push
rcrl
adc
mov
call
fidivrl
popa
nop
rcrb
inc
inc
fistps
js
mov
or
jg
loop
jne
sbb
mov
or
cmp
jnp
mov
insb
out
and
icebp
sub
adc
push
push
push
stc
or
adc
xchg
xchg
int3
adc
xchg
sub
mov
fmul
adc
int
pop
push
adc
sbb
pop
data16
cmp
cmpsl
and
dec
subb
jle
mov
jmp
dec
int3
jle
lret
loope
testl
adc
dec
sahf
mov
sahf
mov
pop
dec
into
loop
pop
mov
pop
arpl
out
dec
pusha
and
out
les
inc
icebp
sub
lret
adc
mov
pop
push
adc
mov
mov
xor
jp
gs
inc
out
sbb
push
mov
dec
movsb
jp
adc
movl
adc
sub
mov
dec
into
mov
mov
iret
lods
or
add
shlb
mov
push
aaa
fildll
inc
cmp
xlat
mov
ret
or
andl
in
hlt
jo
std
pop
push
adc
xchg
aas
sub
xchg
add
inc
cmp
loop
data16
jb
cmp
loopne
pop
mov
test
and
adc
cs
cs
sub
movsl
pushf
pop
iret
sbb
popl
insl
pop
mov
call
scas
inc
mov
jp
or
mov
pop
mov
mov
mov
in
fs
mov
les
pop
and
cli
outsb
adc
cmp
push
dec
push
into
testb
ja
lahf
mov
add
mov
push
adc
push
mov
cmp
push
adc
loope
loop
sbb
sti
testb
sbb
dec
lahf
mov
lret
mov
fwait
or
inc
or
mov
jne
cwtl
testb
shlb
lret
test
mov
sub
mov
inc
push
adc
add
fstps
dec
xchg
mov
rclb
cmpsl
js
lock
adc
pop
clc
pusha
pop
lcall
int
mov
imul
dec
sbb
leave
xor
rorb
or
jo
ss
sbb
rclb
sbb
iret
fidivrl
mov
iret
adc
outsb
repz
xor
push
and
jns
cli
cmpsb
lock
adc
je
adc
pop
clc
adc
adc
outsl
test
xor
push
pop
jns
clc
stc
xor
rclb
in
adcl
mov
pop
mov
dec
ret
in
jg
jnp
xchg
rcrl
stc
lock
or
adc
xor
mov
dec
ljmp
loop
pop
xchg
roll
pushf
ja
imul
sahf
dec
ret
in
push
fnstenv
ljmp
xchg
or
mov
std
lods
cmp
add
ret
inc
aam
mov
ja
push
cmp
aaa
and
add
mov
lds
in
xchg
mov
in
jecxz
mov
pushf
cmp
dec
leave
or
mov
and
data16
mov
push
dec
arpl
or
std
cmpsl
leave
loope
and
mov
cwtl
mov
adc
sbb
loop
dec
fcomip
cltd
enter
xchg
push
imul
mov
adc
push
adc
icebp
lods
and
mov
push
jnp
or
mov
cmp
inc
mov
dec
outsb
dec
sub
push
add
sbb
loope
in
ljmp
lcall
divl
adc
xchg
xor
sub
dec
or
sahf
cmp
addr16
adc
mov
lcall
sub
push
scas
movsl
out
sahf
inc
sti
cld
sbb
shrb
faddl
repz
mov
mov
adcl
jp
mov
adc
test
and
mov
gs
aam
jae
adc
test
sbb
or
outsb
jne
inc
and
xlat
inc
push
in
lret
sbb
sub
sub
adc
pop
in
rcrb
sti
ljmp
cmp
gs
outsb
iret
pop
dec
test
inc
lock
gs
jle
lahf
std
xchg
push
xor
shl
adc
cmp
and
rcll
test
sbb
iret
lcall
imul
cmp
push
ret
out
xor
lahf
or
jne
std
sbb
mov
pop
push
adc
jae
sub
fistpll
hlt
lret
jns
repz
or
xchg
mov
imul
jne
mov
mov
add
push
adc
lock
jno
add
cmp
aam
sahf
shrb
xor
sti
mov
adc
mov
pop
iret
mov
push
lods
clc
pop
mov
lock
gs
scas
push
es
lcall
push
mov
pop
mov
loopne
push
mov
cwtl
mov
dec
mov
add
pop
and
lock
adc
dec
jb
loope
ljmp
adc
mov
ret
sub
pop
xchg
pop
stos
das
cmp
ds
push
fiaddl
test
adc
lcall
outsb
mov
aad
sub
aaa
cwtl
mov
mov
adc
in
or
push
mov
xor
test
sub
jb
adc
jno
aas
rcll
or
in
movsl
add
and
jmp
sbb
mov
in
fucomi
adc
jecxz
mov
jns
popf
clc
out
call
test
mov
cmp
stc
inc
add
push
sarl
or
int
inc
or
int
in
sbb
adc
or
cwtl
movsl
icebp
popa
inc
test
mov
jl
mov
adc
ret
shll
pushf
pop
sti
cmpsl
shl
jae
add
mov
cmp
add
shl
lods
and
inc
jp
inc
mov
jo
push
adc
xor
loopne
push
lods
and
mov
adc
mov
push
add
pop
inc
mov
sub
push
adc
out
pushf
pop
dec
add
inc
jnp
or
mov
dec
lods
repz
sbb
in
dec
xor
in
test
pop
dec
xchg
out
adc
push
adc
mov
jnp
sbb
movsl
add
fdiv
lods
and
inc
js
inc
mov
hlt
xchg
push
adc
push
pop
scas
xchg
push
pop
lea
loope
pop
pop
dec
xchg
out
adc
push
adc
lret
jmp
inc
inc
movsl
add
rcrl
push
pop
fcomip
fdiv
jmp
push
adc
pop
mov
stc
out
hlt
xchg
push
adc
fidivs
adc
movsb
xor
gs
push
scas
mov
iret
sahf
dec
lret
loopne
inc
xchg
dec
push
xor
mov
push
adc
inc
in
shlb
mov
je
jb
adc
sbb
gs
push
adc
std
jnp
mov
mov
in
xor
fcompl
arpl
mov
adc
loop
mov
mov
and
in
leave
cs
xor
pop
es
mov
dec
lret
adc
mov
mov
fsubp
daa
stos
jge
xor
out
std
inc
add
xchg
addr16
push
outsb
inc
lea
mov
dec
gs
xchg
data16
cmpsb
cli
jle
data16
sbb
and
subl
es
aaa
les
out
insb
xchg
inc
xor
or
jge
popa
pop
dec
dec
mov
loop
jge
push
push
add
hlt
sahf
push
xchg
dec
and
dec
xor
dec
cmp
jge
push
and
push
adc
jge
fucomi
fidivrs
mov
jae
mov
push
into
cmc
mov
rcll
lea
imul
or
imul
js
iret
out
repz
insl
pop
mov
inc
insl
xchg
xor
dec
mov
scas
xor
or
jae
fiadds
xchg
in
pop
std
mov
push
sbb
push
adc
mov
ja
xor
push
adc
push
adc
fdivl
mov
outsl
js
out
insb
mov
gs
das
or
pop
jb
xchg
leave
imul
adc
or
lahf
or
sbb
push
mov
pop
mov
pop
adc
notb
jp
adc
push
adc
roll
movsb
loope
push
scas
lret
and
cmp
fcompl
push
cs
mov
lock
out
andl
mov
cltd
adc
and
add
dec
inc
dec
mov
xchg
sub
inc
or
outsb
add
adc
mov
adc
movsb
and
daa
loope
sbb
dec
push
cmp
fmul
xlat
jo
sub
je
in
xor
inc
and
arpl
jmp
leave
adc
jnp
inc
xlat
sub
mov
ds
or
and
adc
sub
iret
in
popf
or
out
mov
add
fucomi
cld
fmull
cmp
mov
sbb
mov
nopl
iret
and
xlat
xlat
in
xlat
inc
je
or
adc
cld
push
inc
pushf
or
add
adc
jno
pop
repnz
mov
adc
jae
scas
fmull
fs
adc
fstl
sub
adc
loop
pop
add
xor
mov
sbb
gs
fnstenv
xor
aaa
call
xchg
mov
add
add
outsb
jb
int
inc
fcmovb
mov
lahf
fs
inc
inc
push
inc
dec
dec
arpl
dec
and
iret
sahf
repz
aas
push
out
rcrb
or
push
mov
inc
lret
lock
movsb
cmp
dec
inc
mov
mov
jo
ret
or
icebp
mov
inc
add
outsb
jns
mov
addr16
sub
mov
pop
dec
mov
loopne
dec
bound
iret
ljmp
lea
insb
subl
push
cmp
xor
adc
add
sbb
xor
les
xor
add
loop
testl
add
lea
testb
and
iret
mov
pop
out
mov
xchg
idivb
cmpsl
lidtl
xor
int3
out
mov
rcr
adc
fs
mov
aam
ljmp
inc
sbb
cli
mov
push
cmp
icebp
nop
je
mov
out
sbb
inc
jmp
gs
out
xchg
pop
out
and
inc
jmp
push
xchg
jl
imul
xchg
dec
ret
rclb
mov
gs
insb
mov
mov
sbb
mov
adc
fistpll
in
fiaddl
rcl
jno
inc
and
dec
pop
out
ja
call
icebp
call
pop
add
xchg
cwtl
in
fld
and
out
scas
mov
pop
mov
push
cmp
les
fldl
ret
jecxz
lea
mov
nop
jne
inc
xchg
cmpsl
sbb
es
sarl
movsb
leave
or
pushl
pcmpeqb
test
xor
push
rol
xchg
inc
jae
mov
inc
nop
jnp
xchg
cltd
push
cmp
ja
and
nop
out
out
adc
xorb
rcll
or
dec
js
arpl
sti
lods
cmp
or
cmpsb
div
or
add
gs
shr
repnz
pushf
sahf
add
pop
sbb
call
xor
mov
mov
mov
cmp
ja
mov
cltd
cltd
xchg
xor
ss
and
and
nop
rcrl
out
add
add
inc
subl
inc
push
call
sbb
dec
es
add
loopne
cmp
lret
dec
mov
push
ljmp
lret
mov
loope
xor
cmpsb
cli
lcall
orl
aaa
loopew
inc
adc
ds
jbe
sub
movsb
add
and
imul
cmp
jmp
icebp
and
xor
adc
cwtl
mov
xchg
cmp
jl
sub
sahf
push
xor
xor
das
sbb
xchg
pop
aas
mov
cwtl
push
movsb
nop
xchg
sbb
adc
in
sub
testb
imul
mov
fsubr
push
cli
push
jno
cmp
pop
push
aaa
jmp
xor
and
inc
sub
mov
inc
inc
cwtl
xchg
aad
iret
jbe
mov
inc
pop
sbb
andb
mov
out
imul
dec
fsubs
ljmp
jne
pop
push
aad
movsb
test
pop
inc
mov
stos
mov
lret
adc
leave
ret
push
inc
out
xor
jb
push
rolb
jl
and
test
xor
lcall
outsb
mov
mov
in
stc
push
fstpt
mov
adc
mov
sbb
cmpsb
jae
pop
push
adc
repz
lret
and
dec
int
inc
mov
pop
fsubrp
test
jle
cld
jecxz
pushf
cmp
lods
xor
loop
mov
es
push
mov
adc
mov
adc
mov
dec
out
test
scas
mov
xor
fbstp
pop
lcall
sub
sbb
js
inc
ss
call
repnz
sahf
test
bswap
push
arpl
arpl
loopne
and
jo
fdiv
cmp
int3
add
mov
add
dec
out
rorb
roll
add
xor
push
xchg
mov
lret
sbb
inc
imul
and
sub
cmpsb
jbe
ficoms
rcll
cmp
jl
cmc
sahf
cmp
sbb
or
jae
dec
pusha
mov
adc
lods
fstps
sbb
jb
ret
or
nop
ja
mov
out
cmp
cmc
push
cmp
pop
mov
mov
jmp
cmp
repz
adc
jno
cmp
pop
xor
cmp
mov
inc
xchg
or
push
ret
dec
fs
pop
inc
sti
test
inc
ds
rolb
inc
xchg
mov
jmp
push
adc
mov
imul
sub
aam
mov
push
ficomps
stos
int3
test
xor
mov
xor
mov
scas
pushf
shll
cmp
mov
mov
iret
xchg
xor
jnp
cmpsl
mov
mov
or
inc
jecxz
jge
mov
repz
jo
cwtl
dec
adc
xchg
dec
lea
call
out
ret
dec
loop
cwtl
push
xor
push
adc
in
push
pop
adc
push
adc
loope
mov
jle
bound
test
mov
cmp
fs
jg
mov
and
adc
pushf
insl
mov
sti
sahf
movsb
aam
outsl
xchg
lcall
mov
cld
fldl
adc
adc
cmp
pop
pop
xchg
adc
adc
jmp
fwait
sahf
int
call
out
popf
mov
in
fistl
jle
mov
int3
adc
xor
add
adc
xchg
ja
cs
xlat
inc
pop
inc
pop
inc
aad
andb
add
or
int
mov
test
xor
cmpsb
lds
push
xor
and
xchg
lcall
mov
into
and
fs
inc
dec
lret
sbb
ret
movsb
fsts
push
mov
arpl
in
and
fidivs
jne
vphaddbq
jmp
xor
ljmp
dec
test
push
adc
mov
mov
loopne
mov
in
test
jb
loope
adc
xchg
mov
sub
lret
jecxz
cwtl
aas
jp
xchg
rclb
mov
sarl
push
jg
imul
push
mov
daa
xor
int
mov
in
inc
das
cmpl
and
into
enter
mov
addb
popa
xor
or
jp
test
adc
iret
cmpsl
sti
daa
in
sub
cmp
lret
fisubrl
and
xchg
lcall
cmp
outsb
or
lahf
xor
cmpsb
push
push
rol
enter
shrl
out
in
jno
jbe
popf
add
pushf
mov
and
xchg
lock
lret
ret
call
mov
fs
sbb
stos
lret
fchs
bound
cmp
inc
xchg
ja
dec
push
pop
pop
mov
std
mov
aad
dec
jp
adc
enter
repz
cmp
mov
sub
negb
xchg
jg
arpl
repz
sbb
fimull
mov
outsl
out
pop
aam
mov
rolb
subb
insb
lock
push
sti
adc
mov
divl
xor
movsl
test
ret
pusha
and
xchg
xor
xchg
adc
rcrb
loope
inc
push
inc
dec
dec
arpl
push
mov
adcl
mov
jo
popa
or
dec
nop
gs
inc
or
xor
mov
lods
jg
sbb
je
jnp
cmp
cmp
dec
sub
inc
sub
dec
int
xchg
jg
inc
ror
xlat
cli
jnp
test
out
xchg
jg
popa
cmpsb
cmpsl
scas
sub
iret
sahf
dec
lret
clc
inc
mov
aad
jae
into
pushf
icebp
mov
ret
rolb
cmp
jae
mov
sbb
and
adc
push
in
xor
sub
das
sub
sub
mov
scas
cmp
add
and
inc
push
testl
idiv
loop
sub
dec
mov
sbb
es
dec
outsb
nop
fmull
mov
push
loop
adc
push
adc
adc
xchg
cld
lea
shll
movsl
data16
enter
ja
pop
das
fs
sbb
push
mov
and
adc
sbb
push
imul
je
adc
cwtl
in
xor
push
adc
xchg
fadds
adc
dec
push
subb
jp
adcb
xorl
adc
fadds
adc
jl
out
push
nop
fadds
adc
add
insb
xchg
int3
ja
enter
jge
jmpw
pop
jmp
add
fadds
adc
not
fisttps
fadds
adc
stos
pushf
jno
adc
test
push
adc
mov
mov
outsl
in
fisttpl
jb
cmpl
push
int
arpl
pop
ljmp
subb
mov
icebp
push
adc
mov
xchg
nop
fildl
subb
or
xor
call
ret
data16
leave
jne
jmp
or
sbb
mov
add
adc
push
sub
daa
mov
pop
iret
in
test
mov
js
movl
xchg
push
mov
insb
test
mov
and
std
aaa
mov
mov
mov
repz
iret
or
and
push
cmpsl
or
nop
jo
adc
sub
dec
pop
mov
iret
push
shr
and
push
adc
in
rorl
mov
int3
fstpt
mov
adc
adc
sub
push
pop
pop
mov
mov
popa
jns
mov
stc
mov
pop
push
lock
sub
nop
xor
and
push
ljmp
popa
pop
adc
jle
mov
ficoml
fisttps
dec
cmp
adc
or
cld
lods
jo
lahf
inc
cmp
xchg
outsl
push
add
adc
or
xlat
fcomps
jo
adc
dec
daa
push
pop
clc
int3
sub
leave
cli
mov
xchg
daa
dec
cmp
pop
sbb
lcall
cltd
mov
mov
mov
clc
pop
mov
scas
inc
mov
mov
sub
repnz
push
or
inc
data16
push
adc
cmp
push
or
hlt
scas
or
popa
inc
inc
or
pop
mov
imul
cmp
mov
dec
mov
xor
fcoms
xlat
cmp
xchg
or
lahf
lea
hlt
loopne
push
adc
scas
sbb
iret
test
add
pushf
sbb
push
cmp
outsb
stos
insb
aaa
hlt
pop
ret
xchg
dec
sarb
mov
popa
test
gs
addr16
movsb
pushf
mov
or
push
adc
es
xchg
or
adc
fnstcw
cli
xor
cwtl
push
js,pt
cs
jmp
sbb
popa
ret
fsts
mov
pop
inc
movsl
ret
cmp
ret
xchg
popf
push
gs
mov
aaa
loop
adc
gs
xchg
jno
loop
add
add
repnz
inc
mov
mov
or
mov
pop
mov
add
loop
inc
pushf
arpl
popf
cmp
repz
jp
cltd
cs
cmp
inc
and
cli
jns
jns
shll
ljmp
mov
mov
lret
loope
xchg
or
push
adc
xchg
xor
or
mov
adc
mov
std
inc
cmpsb
fs
or
in
lahf
in
jne
jae
xor
xchg
mov
and
mov
ret
data16
and
je
mov
mov
cmovp
aad
test
push
arpl
sub
lods
out
pushw
adc
arpl
pop
icebp
push
adc
or
ds
jge
hlt
ret
sbb
test
inc
scas
or
stos
add
push
loope
adc
icebp
push
adc
inc
add
add
imul
ja
mov
cmp
push
xchg
clc
cs
outsb
dec
dec
jno
imul
out
sahf
push
push
jge
dec
call
push
xchg
push
sbb
pop
jle
aad
jbe
cld
rorb
cmp
imul
cltd
sar
nop
movaps
push
adc
adc
movsb
jb
test
mov
dec
lods
mov
mov
femms
int3
arpl
dec
adc
mov
adc
mov
jp
es
fstps
in
fs
pop
ja
jecxz
jo
adc
mov
mov
ret
adc
scas
cwtl
insb
rcr
in
xchg
sub
cli
push
push
stos
fstl
push
pusha
out
fildll
inc
mov
pop
cli
push
aas
pop
cmpsb
daa
stos
test
int3
lahf
pushf
cwtl
inc
cmp
rcll
loopne
mov
cmp
pop
adc
dec
and
outsl
xor
cwtl
or
lret
pop
fidivrl
ds
push
sub
mov
loopne
negl
cmp
loopne
iret
mov
in
sbbb
mov
aas
adcl
pop
sub
cli
test
push
adc
add
inc
and
pop
enter
loope
int3
or
mov
ljmp
sub
dec
adc
sbb
push
adc
jle
push
rclb
fadds
adc
cli
imulb
push
mov
in
addr16
inc
imul
aas
test
xchg
imul
lods
jl
insb
es
sub
pusha
jecxz
and
imul
mov
jo
adc
or
pop
das
cmp
pop
roll
mov
add
sahf
in
and
mov
test
add
add
shr
aam
mov
cld
movsb
mov
std
xchg
cs
pop
mulb
pop
adc
cmp
jo
cmp
out
into
pop
cmp
icebp
push
adc
mov
in
push
push
mov
je
jb
adc
lcall
xchg
lret
mov
sbb
notl
iret
adc
int
iret
push
adc
cmp
popf
out
push
loop
push
loopne
movsl
int
out
mov
jns
cmp
pop
pop
inc
cbtw
jb
adc
cmp
push
call
or
into
sbb
and
sbb
fcomps
loopne
sbbb
outsb
call
inc
bnd
or
iret
push
pop
jle
clc
icebp
push
adc
dec
iret
push
fidivrl
ljmp
call
jp
lods
push
inc
xor
out
or
cmp
test
or
loop
jo
add
pop
cwtl
pop
shrb
sbbl
stos
std
push
jecxz
lret
es
push
adc
out
xchg
xchg
sbb
cmp
push
gs
sbb
js
lock
pop
fimuls
dec
push
js
pop
pop
int
sbb
pusha
inc
inc
sbb
int
dec
push
pop
dec
div
xchg
pushf
mov
orl
mov
cmp
iret
or
or
mov
dec
jp
sti
aaa
int3
sub
sub
sub
icebp
mov
xchg
mov
push
pop
push
out
jmp
jne
jo
ret
roll
shl
out
jnp
popa
inc
inc
push
insb
aaa
lea
cs
out
fwait
sbb
and
int3
repnz
push
adc
popa
ret
add
repnz
adc
hlt
stos
stos
ret
bound
lods
mov
xor
fwait
cmp
adc
lahf
or
repnz
adc
and
repnz
push
adc
and
pop
loop
pop
dec
repnz
adc
imulb
lea
jns
xchg
jge
mov
testl
sub
adc
lcall
push
adc
repnz
xor
js
stc
add
sbb
mov
add
cmp
pop
dec
icebp
jns
xchg
cmp
mov
lahf
sahf
cmpl
daa
icebp
fisttpll
xchg
xchg
or
out
dec
sbb
xlat
and
push
inc
insl
int3
out
mov
lods
mov
and
adc
and
adc
jg
addb
test
sub
mov
xchg
nop
mov
push
inc
or
mov
fildll
jns
leave
sti
jbe
shr
test
fldt
pop
ja
mov
and
inc
in
enter
sub
inc
popf
sbb
push
repnz
adc
and
adc
add
fsubl
or
lds
popa
and
xor
pop
xor
dec
hlt
popa
jno
sub
mov
jmp
sti
stos
inc
leave
insb
repnz
adc
adc
in
dec
jnp
xor
jl
hlt
jns
adc
aad
push
add
pusha
hlt
test
jmp
xor
pop
push
adc
test
xchg
loop
add
jae
or
and
imul
pop
pop
out
adc
inc
sub
mov
aam
fwait
xchg
cmp
inc
aad
pusha
aaa
pop
push
jnp
sahf
sbb
pop
jg
xchg
mov
rorl
out
add
in
mov
adc
notb
pop
push
adc
dec
adc
pop
adc
push
imul
int
aad
insl
add
jp
jns
adc
movsl
mov
xor
mov
push
aad
or
popf
mov
test
pushl
ret
adc
xor
ret
push
push
mov
leave
aam
repnz
adc
pop
adc
imul
mov
cwtl
repnz
adc
adc
add
lock
gs
jl
xor
repnz
adc
mov
push
cmp
out
push
pop
pop
sub
iret
xor
test
shlb
js
push
adc
stc
lods
pop
repz
fisttpl
clc
jge
push
jo
out
into
and
pop
push
adc
or
hlt
int
adc
jmp
cs
out
pop
xor
insb
lea
push
adc
mov
jb
xchg
hlt
cmp
jae
pop
pop
cmp
mov
repz
pop
mov
repnz
adc
cs
sbb
inc
insl
shr
sbb
add
inc
lock
ret
xchg
sbb
movsl
pushf
shlb
loop
mov
roll
scas
lds
pop
fisttpl
jb
mov
mov
pop
outsb
sbb
dec
jbe
inc
mov
subl
popa
ret
fists
hlt
cmp
shll
xchg
cmp
cmc
outsl
mov
cmp
std
test
fcoms
leave
xchg
icebp
lcall
mov
bound
xchg
pop
xchg
dec
js
daa
push
fs
popa
ret
or
aas
jg
cmp
ds
movsb
aaa
or
sbb
add
ljmp
inc
ds
mov
mov
loope
xchg
shll
imul
cmp
xchg
ret
iret
rcrb
ret
xchg
cmp
int3
lret
adc
fs
push
push
movsl
mov
or
popf
cmp
sub
notl
lea
push
outsb
cmp
pop
mov
push
mov
cli
cli
mov
cmp
adc
aaa
js
jns
lods
sbbl
jge
enter
cmp
add
sbb
push
jmp
mov
movl
lock
sub
pop
std
stos
enter
lret
xchg
push
jecxz
adc
test
mov
outsb
xchg
rcll
adc
loopne
test
jo
adc
push
jbe
jns
syscall
scas
pop
sbb
out
das
mov
icebp
mov
int3
adc
lds
lea
xchg
cmp
mov
inc
add
mov
gs
jecxz
add
mov
mov
jbe
aam
dec
call
push
mov
data16
jb
adc
iret
in
and
out
pop
into
pop
push
mov
inc
lret
push
inc
lods
mov
out
inc
mov
dec
add
test
dec
mov
dec
add
shlb
adc
jno
pop
jne
test
mov
dec
sub
test
jne
sbb
clc
jmp
iret
cmp
adc
into
xor
sbb
mov
dec
stos
xor
leave
mov
in
daa
jnp
jo
and
adc
jle
jo
adc
xchg
dec
xor
call
shr
adc
xchg
and
outsl
in
fisubrs
dec
scas
mov
mov
lret
mov
jnp
adc
outsb
sub
add
push
sarl
pop
pop
inc
in
js
ljmp
sti
or
jo
adc
dec
js
repnz
adc
mov
sub
lock
cld
push
mov
ret
jns
out
inc
adc
inc
add
and
shlb
lods
add
test
aad
testl
shl
in
clc
mov
push
fdiv
push
pop
in
mov
or
mov
mov
pushf
cmp
movsb
pop
or
std
rcl
out
mov
popa
mov
adc
test
cs
clc
cmp
cmp
shlb
sub
adc
cmp
mov
out
sub
or
mov
rorb
cmp
cs
and
lcall
push
inc
fadd
pop
adc
mov
jo
adc
into
pusha
and
push
call
fadds
xchg
hlt
jge
imul
jb
mov
xchg
mov
xchg
xor
dec
or
and
adc
pop
mov
cs
xchg
pop
cmpsl
sub
or
xchg
outsb
cmc
pop
xor
push
movsl
adc
addr16
cmc
and
jne
sbb
xchg
je
or
fidivrl
sbb
bound
call
xchg
test
stos
fnsave
in
mov
xchg
int
xor
push
and
adc
add
mov
mov
test
or
and
jg
je
or
jno
push
orl
cmc
cmpsl
in
and
adc
or
iret
lods
jg
lret
xchg
mov
jno
test
enter
insb
and
push
and
adc
xor
stc
jnp
lret
jb
add
sbb
leave
inc
add
mov
jns
out
dec
and
adc
jns
lds
dec
dec
lods
dec
and
adc
mov
xlat
xchg
or
xchg
dec
and
adc
jns
xchg
cs
sbb
lds
and
adc
or
insl
cmp
mov
iret
popf
pusha
sbb
sub
clc
jecxz
lock
dec
and
adc
jle
insl
jnp
dec
and
adc
jns
pop
push
adc
out
ss
push
repz
adc
mov
cmp
cltd
es
mov
outsl
xor
sti
daa
out
xchg
push
push
loope
xchg
push
mov
xchg
repz
dec
mov
mov
adc
jl
mov
popa
cmc
test
addr16
xor
jb
add
cmp
or
dec
sbb
in
mov
lcall
mov
pop
push
add
mov
icebp
mov
pop
and
lods
decb
ljmp
pushf
push
mov
insl
mov
cmpsb
jnp
dec
jae
lea
mov
stos
dec
mov
xchg
pop
jp
pop
jecxz
xchg
and
dec
pusha
out
arpl
inc
mov
jmp
enter
cmp
aas
flds
enter
outsl
cmp
inc
mov
sub
adc
pop
inc
addr16
loope
je
push
dec
pushf
jl
mov
mov
mov
rcrb
mov
inc
sbb
mov
scas
jmp
mov
add
push
adc
push
test
cli
sbb
push
sarl
imul
lea
push
adc
not
mov
sub
adc
sbb
sub
inc
jg
or
lods
push
movsl
sub
sti
inc
mov
sub
das
inc
cmp
sub
hlt
fcomps
rcll
ss
add
pop
dec
cwtl
xchg
aaa
movsl
cmp
test
sub
adc
cwtl
and
adc
adc
loopne
mov
lods
pop
sbb
xor
push
std
mov
xor
push
adc
jbe
clc
mov
push
out
and
adc
in
lret
mov
dec
jl
sbb
mov
and
adc
inc
jne
enter
rol
andb
test
sti
mov
mov
movlps
or
int3
and
xchg
pop
inc
fs
sahf
cmp
inc
add
and
test
pop
mov
jl
adc
icebp
and
pop
xchg
push
and
adc
xchg
push
and
adc
pop
and
adc
jne
push
dec
lret
pusha
mov
sub
js
idivb
cmpsl
lidtl
xor
pop
in
or
orb
arpl
add
or
cmp
pop
ja
mov
xchg
fsubp
daa
fwait
js
int3
jg
cmp
dec
jg
out
sbb
scas
sbb
xchg
loopne
push
imul
mov
test
cmp
test
popa
ret
add
lret
xchg
cs
cs
dec
cmp
ret
hlt
adc
dec
jle
sbb
cmp
jns
mov
sbb
roll
pusha
ret
insb
clc
inc
mov
add
das
fmul
jl
int3
adc
jl
sahf
mov
pop
xor
mov
test
insl
add
bswap
push
sbb
mov
cmp
shl
scas
xor
popa
inc
inc
sub
repnz
pop
int3
jne
js
les
loopne
mov
mov
dec
dec
inc
outsl
aas
or
adc
adc
dec
jl
xor
sub
shrl
push
test
xor
lds
int3
insb
and
mov
mov
mov
outsb
pushf
and
and
icebp
mov
lret
xchg
stos
pushf
int
ret
mov
xchg
shlb
sbb
aaa
rcrl
xor
add
fs
xchg
out
clc
lds
cmp
mov
sub
sbb
mov
repz
xchg
cmpsl
sbb
cmp
imul
out
fistpl
mov
inc
ss
lahf
insb
aas
shlb
or
push
in
jl
cmp
mov
push
mov
pop
cmp
je
repz
adc
clc
and
jle
repz
adc
sbb
push
sahf
cmp
fnstsw
lock
cltd
jns
mov
mov
jle
int
adc
call
jmp
sbb
sub
imul
mov
pop
mov
xchg
inc
repz
adc
inc
mov
xchg
cmp
push
adc
cli
mov
faddl
lcall
clc
dec
test
aam
xor
xchg
and
pop
adc
push
xorl
aas
push
inc
inc
push
mov
mov
xor
jno
cmp
pop
mov
sub
pusha
orb
pusha
dec
fildl
or
xchg
mov
cmp
cmp
mov
dec
dec
cmp
outsb
pop
pushf
jae
mov
xchg
jl
inc
hlt
jns
std
dec
push
push
mov
repz
adc
pusha
mov
lock
test
or
mov
and
and
add
jns
and
adc
test
mov
push
adc
aas
push
sub
bound
adc
jecxz
and
adc
fnstcw
sets
ret
aas
cmp
pop
adc
ss
out
and
xor
stos
leave
es
mov
jne
loop
insb
test
adc
push
jmp
and
or
ja
mov
pop
ja
enter
jo
adc
js
pop
adc
push
push
scas
sbb
pop
ret
js
pop
adc
or
pop
shl
js
pop
adc
inc
subb
js
pop
adc
mov
mov
shl
lahf
sarl
cwtl
repz
adc
test
push
sbb
push
xor
fwait
or
sbb
mov
jae
xchg
pop
pop
mov
xchg
outsl
into
insb
cmp
out
or
inc
push
inc
gs
into
ja
hlt
sbb
xchg
cmp
inc
cli
ljmp
lods
xchg
mov
fisttpll
imul
pushf
sub
adc
gs
jb
adc
js
call
hlt
popa
xor
add
sarb
xor
into
pushf
cmp
loop
and
sbb
stos
int
adc
add
or
nop
pop
in
push
mov
sbb
add
daa
mov
sbb
popa
ret
vmwrite
cmc
and
sbbb
adc
out
jmp
js
adc
mov
and
add
push
outsl
pop
fcmove
pushf
cmp
sahf
jnp
es
std
cmc
shll
cmp
inc
add
addr16
daa
adc
pop
ljmp
rolb
xlat
pop
dec
lds
adc
push
jae
and
cmp
cmp
das
mov
mov
mov
pop
int
cmp
ljmp
pop
adc
xor
ret
lret
je
lock
dec
ficoms
mov
push
js
adc
popf
push
repnz
pop
cmpsl
int
mov
imul
inc
ret
insb
and
mov
add
inc
popf
or
sbb
mov
sbb
adc
push
imul
sti
movsb
iret
push
dec
cmc
mov
hlt
pop
out
push
pop
adc
xchg
jge
fs
repz
pop
cmp
sbb
adc
test
jle
mov
sub
push
xchg
ja
movsl
daa
push
sbb
addr16
shl
pop
mov
xor
cmpsb
adc
dec
cmpxchg
ds
loop
fcoms
loopne
dec
popa
iret
insb
jp
in
pusha
scas
push
cmp
cwtl
cmp
icebp
fsubrs
jecxz
push
mov
pop
in
sahf
daa
push
mov
out
shr
sbb
adc
cmp
or
dec
sub
cltd
lea
dec
lock
cmp
pop
or
imul
adc
jecxz
mov
dec
jno
push
push
insl
out
lcall
int3
lcall
loop
inc
fnstcw
jg
jge
mov
push
cmc
ret
clc
jle
ja
dec
cmp
rcl
mov
out
fs
data16
pop
add
femms
outsl
xor
jbe
sbb
movsl
sbb
repz
pop
leave
loope
in
ret
sbb
in
add
shlb
pop
iret
add
flds
nop
jne
sub
mov
imul
jae
xchg
out
shr
cmpsl
pop
inc
xor
loop
gs
mov
sub
mov
fisttps
jns
mov
or
dec
jecxz
xchg
mov
cmc
jmp
outsb
int
lds
dec
mov
pop
dec
inc
sub
loope
or
xor
adc
pop
outsl
flds
mov
sahf
push
lahf
gs
imul
inc
mov
mov
mov
fwait
idivb
or
adc
xchg
push
in
or
fdivrl
or
mov
mov
int
repz
cmp
ret
pop
mov
repz
cld
lods
loop
insl
iret
cwtl
rcl
dec
mov
jge
lahf
cld
xor
lock
mov
or
sarb
scas
xchg
jg
scas
cli
movsb
cli
mov
shrl
call
inc
xchg
inc
pushf
outsl
pop
inc
mull
in
out
inc
aas
pop
mov
hlt
lock
cmpsl
sbb
mov
mov
lods
cmp
insb
adcl
xchg
jg
arpl
loope
add
inc
rcl
cmp
jae
into
pushf
mov
or
out
cltd
je
shll
sahf
mov
in
dec
gs
sbb
xlat
cld
fwait
subl
jo
dec
inc
fdivp
mov
fisttps
xor
xchg
pop
sbb
add
fwait
cmp
pushf
fsts
fildll
sub
bound
xchg
mov
sub
mov
or
cmp
pusha
adc
out
pop
jae
or
fisttpll
test
push
sbb
xchg
inc
cmp
mov
out
adc
lods
pop
js
pop
iret
inc
test
sti
in
jo
inc
cmp
std
mov
sbb
adc
out
or
rcrl
into
pushf
and
lret
insb
int
mov
call
fdivrl
popf
sub
add
cs
mov
and
add
imul
scas
jg
adc
jnp
or
xor
enter
xchg
imul
fmul
pop
adc
dec
add
mov
lock
lret
pop
loop
inc
and
loope
or
cmp
adc
mov
or
push
imul
cmp
mov
sub
adc
xor
incb
inc
arpl
jae
adcl
out
int3
xor
int3
cmpsl
xor
pop
js
cmp
scas
js
out
lds
and
pop
lds
mov
cmp
pop
test
adc
sub
mov
lret
add
pop
sti
cmpb
pusha
sbb
inc
icebp
push
add
jno
push
repz
adc
in
sahf
mov
jmp
mov
jmp
mov
or
cmc
ja,pn
mov
lds
pop
in
xchg
cwtl
push
daa
mov
or
xor
jp
or
mov
jmp
inc
pxor
or
push
pusha
xor
mov
pop
dec
jae
mov
es
mov
mov
sub
pop
loopne
gs
in
xchg
xchg
cmp
cmpsl
leave
dec
xor
xchg
jmp
fisttpll
lock
outsl
sbb
and
ret
mov
ret
pop
pop
out
movsl
aam
or
fisubrs
pop
pop
insl
adc
dec
jne
pop
enter
pop
pop
push
out
in
sar
adc
leave
fcoml
test
adc
imulb
data16
mov
adc
imul
push
and
adc
fucom
cli
mov
pop
cltd
mov
cmc
and
inc
pop
xchg
stos
xor
stos
dec
imul
ja
js
mov
jecxz
std
imul
xor
shlb
jne
jmp
inc
adc
andb
mov
icebp
lret
dec
xor
jae
cmpsb
xchg
add
xchg
mov
lea
cmpl
jo
adc
fwait
lea
mov
pop
aad
ljmp
push
dec
out
mov
sbb
push
adc
push
leave
dec
test
popa
inc
sbb
add
in
or
pop
cmc
push
adc
lcall
pop
outsl
or
mov
in
js
add
push
jns
mov
mov
arpl
xchg
add
mov
fptan
movsl
push
or
pop
pop
lret
inc
ja
mov
stos
mov
in
enter
imul
mov
repz
cltd
adc
popa
inc
mov
xor
add
call
ds
mov
jge
popa
push
out
pop
cld
je
add
jne
les
cli
xchg
je
int3
insl
imul
sbb
mov
inc
pop
lock
int
sub
scas
dec
dec
insb
nopl
les
mov
imull
es
ret
repnz
imull
cs
cli
jb
ljmp
xor
movsl
pop
ss
movsb
ret
jmp
or
jae
mov
outsl
mov
in
jae
into
ja
sti
movsb
lret
add
sbb
int3
jmp
or
data16
lea
insb
shll
and
jo
ret
ficoml
popa
decl
push
adc
dec
scas
xchg
xor
push
mov
mov
sahf
inc
or
mov
outsl
xor
paddusw
enter
or
lret
push
out
sub
mov
pusha
incb
daa
mov
out
jge
js
addl
mov
outsl
lahf
cmp
jl
mov
xor
sub
les
cmp
or
pop
bound
push
lods
and
enter
popf
sti
cltd
and
icebp
ja
sbb
repz
adc
sahf
cmp
std
fidivs
repz
adc
mov
pop
pushf
pushf
cmp
bound
jo
daa
xlat
inc
mov
lcall
mov
and
je
mov
pop
jmp
repz
jbe
ret
xchg
pop
pop
out
fwait
out
iret
pushf
cmp
push
fxch
sbb
and
and
xchg
shlb
push
fdiv
push
adc
mov
sbb
add
push
adc
outsl
ret
pusha
icebp
outsb
rcrb
adc
mov
das
or
mov
test
fisubrl
push
nopl
mov
push
xchg
divb
fbstp
aam
sahf
or
or
adc
dec
push
out
mov
lock
clc
leave
dec
mov
mov
loop
pop
push
ljmp
add
int
pusha
subb
outsb
inc
sti
mov
dec
or
cmp
sahf
add
cmpsl
dec
mov
jg
ficoms
push
mov
pop
sbb
aaa
inc
xchg
mov
stos
ret
pop
out
pop
cmp
shl
jnp
and
jle
add
push
push
jge
xor
and
adc
nop
jb
fcmovnb
sahf
scas
pop
cltd
mov
and
pop
or
add
push
adc
repz
icebp
repnz
shll
sbb
dec
shl
test
rcrl
jmp
xor
xor
sub
lahf
mov
addr16
xchg
mov
or
cltd
sbb
enter
inc
inc
aas
nop
xlat
jle
dec
mov
testb
hlt
push
adc
bound
mov
mov
cmp
loope
cs
cmp
in
xchg
pop
call
cs
pop
movsl
pop
dec
jno
pushf
or
ds
add
jnp
or
inc
inc
xchg
pop
adc
out
adc
shlb
fnsave
mov
pushf
sub
and
push
adc
sub
insb
test
aas
and
fisttps
cmp
pop
inc
daa
in
js
je
fstpl
test
ret
es
outsb
sar
adc
sahf
mov
xchg
cld
out
xor
std
and
push
out
pushf
adc
mov
mov
xor
and
orb
cmp
fwait
mov
or
cmp
cmpsl
xor
ja
frstor
xchg
sbb
xor
fisubrl
xor
add
pop
dec
pop
push
jnp
xchg
jg
rcll
roll
pusha
ss
call
xchg
jns
jae
out
adc
outsl
in
cmp
mov
sub
jne
pop
add
cmp
stc
xchg
iret
rcrl
setl
or
mov
adc
dec
std
or
inc
cmp
inc
add
dec
insl
mov
sbb
ss
in
icebp
test
cwtl
lods
lock
xor
aas
loope
xchg
inc
fiaddl
lret
xor
inc
add
and
out
and
sti
pushf
sub
adc
cwtl
jb
adc
inc
int
cld
or
lock
adc
out
fwait
hlt
xchg
mov
les
push
xchg
inc
insl
dec
sti
add
lea
cs
loopne
aam
pop
nop
xchg
aad
std
push
cmc
adc
out
pushf
sub
adc
daa
cwtl
jb
adc
push
repnz
mov
or
inc
lods
lock
in
enter
loop
std
push
jmp
pop
dec
cmp
mov
sbb
bound
js
fwait
fs
xchg
sub
dec
sub
xchg
rcl
pop
push
push
mov
pop
mov
pop
andl
cmc
cmp
or
mov
rolb
inc
dec
cmp
pop
jnp
cmp
dec
xor
js
cmp
mov
test
mov
xchg
cs
jns
fs
arpl
fs
lret
jmp
call
fldenv
fwait
xor
jle
sub
jno
and
cmp
insl
cmp
xor
push
adc
lret
sbb
pop
mov
add
lock
jge
popa
nop
inc
jns
or
jbe
testl
xchg
sub
addr16
push
and
aas
jo
fsubrs
add
shll
popl
popa
in
mov
xchg
daa
xchg
inc
push
popa
xlat
adcb
cs
filds
cmp
adc
mov
mov
dec
cmp
adc
or
mov
outsl
ss
cmp
popf
cld
mov
xchg
push
ret
outsb
push
dec
sub
xor
repnz
xchg
and
fcmovb
xchg
imul
adc
mov
das
dec
xchg
sbb
jae
pusha
int
enter
fstpl
cmp
adc
cmp
adc
sbb
outsb
jnp
cmp
adc
cld
cli
enter
sbb
sub
loope
pushf
dec
in
call
gs
std
int3
cmp
adc
xor
aam
cwtl
icebp
inc
int3
int3
cmp
adc
enter
inc
shll
mov
inc
hlt
push
adc
stos
mov
sbb
mov
ja
repz
mov
rcrl
out
adc
js
jecxz,pt
daa
repz
sub
cmp
mov
or
aad
cli
pushaw
icebp
mov
dec
in
mov
push
mov
mov
mov
push
cmp
mov
pop
jg
xchg
xchg
push
rcrl
lock
mov
into
mov
pusha
adc
call
cwtl
scas
sub
and
icebp
gs
movsl
fwait
mov
unpckhps
or
jle
ja
and
mov
sub
sub
popa
cmp
push
xchg
es
mov
aaa
addl
insb
and
aas
dec
shr
mov
mov
sbb
imul
pop
jo
xlat
lea
repnz
jmp
mov
je
xor
lock
sbb
in
stos
add
xchg
outsl
jg
iret
inc
push
mov
or
sub
daa
cwtl
dec
jl
and
shrb
add
int3
sub
sbb
add
add
adc
sub
mov
test
out
lea
mov
bound
in
push
and
push
mov
add
inc
sbb
mov
imul
test
xchg
data16
mov
push
mov
or
std
jne
sub
sahf
out
mov
fisubrs
mov
add
adc
sub
adc
sub
adc
std
std
add
mov
push
or
xchg
jle
add
enter
out
das
or
sbb
xlat
std
std
adc
mov
push
or
xchg
jle
adc
enter
out
aas
or
xchg
xor
xchg
sub
ljmp
icebp
int3
sub
adc
sub
adc
mov
ja
lcall
inc
repz
pop
movsl
into
mov
or
enter
cmp
inc
lcall
pop
cmp
scas
shrl
add
fld
fisubl
rol
dec
sbb
pop
cmp
ret
repnz
shll
xor
insb
jne,pt
in
inc
pop
pop
sub
cmp
push
insb
or
call
sbb
popa
inc
jg
imul
sub
pop
sub
adc
out
pop
sub
sub
adc
sub
adc
mov
in
jae
mov
rolb
mov
into
pushf
in
pop
sub
sub
std
jb
sbb
xchg
lods
xlat
and
mov
add
pushf
cmp
cmpsl
cltd
loop
sub
addl
or
mov
stc
cmp
test
add
push
enter
fdivr
jmp
adcb
dec
stos
mov
adc
add
adc
add
adc
add
adc
stos
cmp
lock
fisubs
xchg
dec
dec
mov
adc
cwtl
inc
add
imul
xchg
std
xor
int3
inc
dec
fnsave
pop
pop
add
mov
out
mov
and
push
sub
add
adc
addr16
inc
adc
jp
clc
rcrl
cmpsl
mov
sbb
mov
jmp
push
mov
mov
add
rol
sub
sbb
push
adc
loopne
cld
mov
xor
mov
and
and
fisttpl
xor
andb
mov
push
xchg
mov
pop
repz
mov
addr16
and
adc
loopne
shll
cmpsb
nop
mov
push
adcl
int3
xor
das
add
ret
add
add
adc
add
cmp
xchg
aaa
xor
sbbl
pop
add
scas
dec
ret
shlb
xchg
inc
data16
in
cld
cs
es
dec
mov
cltd
shrl
out
mov
loopne
inc
stos
push
push
cmpsb
mov
add
cmp
xchg
jbe
ret
pop
cmp
mov
imul
add
repz
adc
cs
adc
cs
adc
cs
add
mov
push
or
xchg
jle
add
enter
out
das
or
sbb
xlat
std
std
adc
mov
push
or
xchg
jle
adc
enter
out
aas
or
xchg
xor
xchg
sub
ljmp
icebp
or
add
adc
das
add
adc
mov
ja
lcall
inc
repz
pop
movsl
into
mov
or
enter
cmp
inc
lcall
pop
cmp
scas
shrl
add
fld
fisubl
rol
dec
sbb
pop
cmp
ret
repnz
shll
xor
insb
jne,pt
in
inc
pop
cwtl
xor
inc
push
insb
dec
xor
pop
fs
sbb
popa
inc
jg
imul
sub
pushf
das
add
cwtl
xor
add
adc
das
add
or
dec
jb
mov
roll
mov
mov
out
cwtl
xor
pushl
pop
adc
jae
test
scas
shll
test
fbld
jg
imul
popf
out
xor
test
pop
in
add
xor
test
mov
or
pop
sarl
shl
loop
mov
je
mov
add
dec
xor
adc
adc
adc
adc
adc
adc
sbb
aad
cld
sti
inc
fdivs
push
xchg
jle
cld
pop
out
cltd
xchg
jne
rorb
dec
xchg
and
mov
and
cld
std
ljmp
or
xchg
jg
in
pop
in
mov
push
sbb
xchg
lret
jp
cwtl
xor
xor
adc
xor
adc
dec
adc
mov
lea
fadd
fidivl
dec
or
lea
xchg
jns
jns
jle
shll
icebp
scas
leave
add
push
mov
push
push
dec
and
xchg
pushf
inc
push
jmp
cs
popa
jbe
xchg
movsl
repz
hlt
push
adc
xor
mov
and
hlt
push
adc
arpl
movsl
cmp
daa
jmp
inc
fmuls
fs
or
ja
sbb
pop
repz
mov
adc
subb
adc
fmull
adc
lods
ja
mov
ret
pop
rorl
stos
out
inc
sub
add
bound
stos
lods
push
and
cmp
jmp
leave
mov
stos
lods
test
dec
mov
inc
xchg
fistl
adc
or
pop
mov
inc
sbb
add
jne
sbb
adc
and
mov
hlt
push
adc
pusha
fisttps
mov
pushf
inc
sbb
mov
hlt
push
adc
jle
mov
xchg
jb
jo
push
adc
mov
lahf
mov
pop
or
jg
pop
lret
cwtl
pop
lret
arpl
jbe
and
adc
add
lock
mov
test
in
mov
sub
jmp
fstps
dec
mov
xor
cwtl
sbbb
xlat
cmp
cmp
les
fsubrs
fwait
mov
out
sbb
fldenv
cwtl
out
popf
pop
call
cwtl
outsl
dec
xchg
inc
push
jmp
mov
test
inc
cld
mov
out
out
pushf
jns
push
out
lea
jno
into
fnstsw
and
aad
hlt
in
stos
push
push
loop
xchg
cmp
sar
ljmp
lods
cld
popf
mov
sbb
shl
lods
cmovp
aad
test
xor
ret
ja
std
inc
out
push
sbb
out
bound
xchg
inc
jbe
xchg
lods
popf
mov
iret
mov
ret
xchg
push
mov
pop
rclb
int
or
pop
adc
iret
sbb
jnp
fisttpll
insb
xor
xor
xor
push
push
arpl
jge
mov
or
cmc
in
sub
xor
xchg
pop
inc
xor
setge
sahf
std
jne
adc
mov
addl
shll
lahf
call
int3
xchg
sub
sub
or
sbb
insl
push
loope
jecxz
stos
jnp
out
pushf
dec
bound
add
ljmp
inc
lret
fxch
jg
jb
rorl
push
jg
in
ret
sti
push
push
xor
sub
int
cmp
add
cmp
cs
cmp
mov
int3
mov
inc
sub
test
dec
popa
in
xchg
out
xorb
xlat
cld
mov
push
jo
ret
pop
iret
aaa
push
hlt
jle
mov
add
sbb
xchg
movsl
adc
mov
push
mov
int3
aad
xchg
sbb
mov
arpl
shlb
pop
aas
inc
cmp
dec
add
fmull
fstpt
jecxz
xchg
mov
lret
xchg
pop
mov
ds
pushf
cmp
clc
inc
add
cmc
scas
test
or
stc
out
cld
jmp
and
cmp
cwtl
es
rolb
adc
push
lret
sub
mov
fistpll
rolb
adc
cld
call
or
inc
aas
jecxz
xchg
sub
sbb
pop
adc
dec
out
outsl
mov
sbb
out
aaa
fcmovne
pop
push
pusha
iret
xchg
sub
iret
aam
movl
repz
add
and
adc
jmp
cmp
rolb
adc
inc
rolb
adc
repnz
or
push
adc
push
rol
mov
inc
hlt
fmull
push
push
test
call
pop
adc
test
dec
xchg
inc
dec
aas
clc
mov
ret
fcomps
shrl
test
cli
imul
inc
push
out
jmp
dec
push
ja
mov
inc
mov
jge
mov
push
pushf
jg
cmp
sahf
notl
idivb
fidivs
out
es
mov
cmp
push
arpl
xor
pop
movb
nop
xchg
dec
out
pop
fcomps
shlb
insl
arpl
mov
ficoml
movsb
mov
mov
xchg
push
ds
repz
sbb
inc
mov
xor
adc
mov
iret
push
out
jmp
mov
imul
fst
xlat
mov
mov
in
push
and
mov
es
push
lret
and
mov
or
fs
cs
andb
loop
nop
mov
or
mov
pop
xchg
frstor
dec
movsb
hlt
mov
hlt
filds
mov
xchg
mov
mov
xor
and
sub
or
sub
jo
pop
icebp
sub
ret
sub
push
add
add
sub
pop
adc
in
jmp
adc
jmp
lcall
cmp
adc
adc
movsb
jge
pop
or
icebp
fsubrl
in
mov
ljmp
insl
int
dec
mov
sarl
sub
popa
ret
cli
add
adc
mov
and
pop
adc
adc
xor
adc
cmovns
mov
fidivrs
test
loope
repnz
cs
mov
add
sbb
cmpsl
mov
clc
stos
idivb
jne
les
call
cltd
xor
inc
jns
mov
lret
lahf
out
leave
enter
jae
pop
ret
sub
inc
aad
fisubs
inc
test
mov
pop
xchg
jb
into
iret
sub
stc
rorb
shll
insl
test
imul
mov
stos
hlt
add
mov
sbb
cmp
call
lock
lock
shlb
cmp
mov
xchg
loop
mov
or
add
inc
xchg
rolb
into
lea
pop
mov
sub
sbb
dec
cltd
out
sbb
call
sub
cld
mov
sti
sub
loope
dec
test
lcall
dec
lock
dec
jb
jb
aam
icebp
arpl
xchg
movsl
xchg
xor
inc
outsb
mov
pop
ja
es
sbb
jmp
data16
mov
and
push
inc
je
jo
rolb
adc
pop
xor
dec
mov
xor
or
cmp
fisubrs
adc
out
dec
rolb
adc
imul
insl
mov
or
sarl
xchg
push
push
mov
ret
mov
inc
ret
mov
pop
inc
fxch
sub
data16
or
std
sbb
shl
jmp
mov
outsl
imul
loope
sub
push
cmc
mov
shl
mov
orb
mov
test
outsl
cli
dec
cmpsb
add
cmp
mov
xchg
insb
ss
lahf
fsubl
fbstp
mov
lahf
out
mov
push
push
pusha
add
loope
pop
sbb
xchg
shlb
or
adc
bound
movsb
xchg
mov
and
jmp
mov
in
push
fists
loopne
and
fs
fmuls
lret
rclb
out
mov
pop
mov
xor
shrb
call
nop
pop
cmp
push
xchg
pop
gs
cmp
jmp
and
and
adc
outsl
cmp
sub
pop
adc
cmpsb
pop
roll
adc
mov
pusha
roll
adc
add
roll
adc
test
roll
adc
mov
roll
adc
mov
jg
dec
loopne
xchg
and
jmp
or
clc
sti
repz
shrl
cmp
push
mov
mov
into
mov
adc
mov
aaa
sub
and
jg
xchg
ret
jmp
add
movsl
cmc
jne
and
fcomip
mov
shll
push
push
test
sub
mov
xchg
jge
xchg
enter
jns
imul
rolb
adc
sbb
in
cmpb
in
xorb
cwtl
xor
pop
push
push
sub
out
cli
cmp
test
sub
call
jae
and
insl
push
das
movsl
stc
in
and
adc
dec
adc
addr16
mov
inc
ficoms
or
sbbb
pusha
xor
test
cli
ret
sbb
cmpsb
pusha
leave
pop
adc
pop
pop
aad
leave
pop
adc
sbb
pop
adc
test
dec
cmp
xchg
popa
pop
call
dec
and
in
and
adc
adc
pop
adc
sbb
cmpsl
xor
stos
sbb
jo
dec
xchg
cs
stc
pop
mov
xchg
sbb
sarl
mov
sub
lret
sbb
sub
cli
loope
lret
mov
vcvtsd2si
fdivl
xchg
or
inc
ljmp
arpl
notb
arpl
xchg
or
lea
insb
mov
leave
pop
je
shll
or
or
inc
dec
inc
shrl
fnstcw
mov
xchg
rorl
lds
loopne
xchg
scas
movsl
test
sbb
setnp
and
mov
mov
dec
jg
cmp
pop
mov
mov
lcall
sbb
sub
iret
add
loop
jl
cmpsl
mov
pusha
pushf
xor
inc
add
das
sbb
dec
cmp
jg
xor
xor
ficomps
ljmp
lcall
out
inc
fisubl
cmp
dec
loope
jae
xchg
pop
inc
mov
xor
sbb
xor
imul
pop
pop
mov
lret
fsubr
dec
js
and
or
insl
loop
ds
push
inc
add
arpl
add
sbb
pop
inc
jae
and
mov
rep
ds
sbb
sub
movsb
daa
add
loope
pushf
loope
mov
mov
pusha
repz
lcall
out
pop
outsb
sti
xchg
out
pop
sahf
cmc
mov
xchg
scas
mov
out
xor
fnstcw
shlb
fs
xchg
lods
cmpsl
les
fidivl
rcll
repz
mov
lea
dec
sti
and
add
mov
lea
xorb
push
adc
adc
mov
push
mov
nop
inc
stos
xor
lret
lcall
iret
lret
inc
ja
and
ret
mov
sahf
or
mov
dec
test
cmp
insl
test
mov
hlt
push
adc
icebp
int3
orb
aaa
push
sahf
andl
push
imul
int
cmp
stos
jns
fmull
push
jns
sub
add
xor
xor
dec
jae
pop
inc
insl
jbe
lock
mov
mov
mov
movsl
or
pop
insb
and
fstps
xorps
pop
pop
cmpsb
pusha
pop
mov
dec
testl
ror
lods
iret
pop
adc
out
fucomip
adc
mov
cld
andb
jecxz
sub
mov
adc
lds
mov
pop
and
xchg
mov
rolb
xchg
xchg
insl
pop
add
sarl
inc
mov
nop
pushf
pusha
and
test
adc
lcall
mov
rcll
push
std
mov
inc
pop
cmp
add
das
sbb
inc
sub
push
xchg
jg
jmp
dec
xchg
repz
jg
mov
cltd
mov
imul
ja
push
hlt
adc
outsb
xchg
hlt
push
jno
stos
adc
rcrb
inc
les
push
sahf
mov
pop
loop
xor
insl
sarb
mov
dec
mov
or
jnp
lods
adc
lods
jle
mov
and
test
leave
psrad
add
and
pop
mov
mov
movsb
imul
negb
xor
mov
adc
adc
mov
call
aad
icebp
and
add
in
dec
jo
mov
sbb
addr16
sbb
movhps
mov
ret
dec
insb
adc
add
or
test
aaa
jl
push
sbb
pop
mov
sbb
mov
lds
mov
xchg
icebp
cmp
scas
mov
test
subb
dec
mov
xor
fidivrl
roll
push
hlt
mov
shl
mov
test
aaa
dec
xchg
xchg
jne
inc
pop
xor
add
dec
push
and
cmp
out
push
gs
mov
inc
jbe
inc
js
mov
imul
cmpl
out
push
gs
mov
inc
mov
repz
push
addr16
jae
je
jne
or
or
pushf
leave
sub
jae
icebp
arpl
data16
fxch
clc
push
jo
out
and
loope
shl
popa
sub
pop
fs
inc
rep
cmovp
aad
test
cmc
push
jmp
sbb
jg
push
xchg
sbb
sub
test
cmpsl
rolb
xchg
js
in
sbb
sub
sub
fbstp
loop
xchg
mov
mov
jae
into
jmp
outsb
or
pop
testl
push
mov
ret
lcall
cmp
xor
rcr
push
inc
stc
subl
mov
jmp
mov
lret
les
cmp
ret
repnz
jecxz
add
xor
mov
ret
sbb
nop
leave
movsl
sbb
das
xrelease
cs
mov
adc
inc
subl
cmp
mov
test
mov
fidivl
fs
cltd
xor
xlat
sbb
mov
ret
or
jnp
xor
mov
mov
leave
mov
insl
jnp
or
ljmp
fdivrs
or
aaa
push
cmc
mul
leave
ljmp
and
cmp
outsb
xor
pushw
inc
push
sub
out
xor
cli
sahf
push
mov
push
mov
loope
mov
cmp
bound
lock
outsb
mov
movsl
adc
mov
pushf
cltd
iret
mov
cltd
test
repnz
loope
push
jb
push
fs
lret
ss
jns
pop
mov
cmp
mov
or
in
ret
jns
addr16
and
xor
vpunpcklqdq
or
repz
pop
inc
adc
insb
pop
decb
dec
in
test
iret
push
xor
int
icebp
jg
mov
mov
xchg
mov
clc
fists
rorb
fcmovnu
add
cld
sub
sbb
push
cmp
ror
sbb
enter
ds
sti
jp
insb
ja
xlat
and
cmp
sub
lds
insl
icebp
jp
iret
adc
loope
aad
cli
lcall
test
push
hlt
aas
movsb
fwait
jecxz
popl
faddp
outsl
clc
sbb
call
add
adc
loop
xor
shrb
inc
add
sub
in
sub
or
roll
neg
xchg
cmpsb
lahf
in
or
test
aam
ss
fcmovb
es
repz
sbb
sbb
repnz
mov
in
insb
lods
ja
or
imul
dec
push
mov
imul
xchg
adc
mov
push
mov
mov
add
inc
push
enter
fucomp
int3
cltd
mov
scas
fdivrl
jo
das
push
dec
cli
mov
dec
inc
sbbl
insb
es
lea
mov
xchg
xlat
or
adc
add
dec
jne
jns
or
popf
jecxz
ss
loope
loope
add
add
sti
mov
ret
mov
sbb
lcall
cltd
cmp
icebp
ja
lahf
cmp
push
pop
insl
and
xchg
adc
cmpsb
gs
xchg
movsl
or
sub
or
push
sbb
pop
xor
js
out
lea
je
xchg
dec
pop
test
push
pushf
in
mov
aaa
jecxz
cltd
fstpt
pop
adc
sti
cmpsl
xlat
push
fs
adcl
popa
lods
dec
fwait
dec
jne
jns
or
popf
jecxz
ss
sbb
sub
lock
mov
sub
and
pslld
int
mov
and
pop
stos
call
sbb
inc
pop
xlat
mov
out
push
or
jno
in
div
loopne
push
adc
ret
lds
jp
notb
cs
sbb
hlt
mov
mov
inc
ret
xchg
divb
ljmp
sbb
popa
dec
ret
in
xchg
jg
dec
cs
pop
mov
jno,pn
ret
add
adc
aad
jb
adc
sbb
adc
cmp
and
test
cli
sbb
movsl
push
pop
movsl
pop
mov
xchg
in
sahf
sub
ljmp
push
subl
mov
pop
mov
add
repz
lcall
mov
sub
js
xchg
jg
rcll
lods
ret
and
xor
repnz
ficomps
push
movl
test
mov
and
mov
add
int
push
and
mov
rol
lea
xchg
aas
jmp
pop
aaa
pop
hlt
mov
xchg
into
pop
xor
dec
lahf
clc
mov
std
cwtl
sbb
imul
xchg
cli
mov
fadds
pusha
xor
add
adc
popf
rolb
loope
movsb
fisttps
xchg
adc
jbe
shl
movsl
sub
icebp
int3
loope
sbb
mov
pushf
lock
aad
imul
aam
popf
adc
repnz
pop
xchg
pop
inc
das
ret
mov
dec
inc
out
cld
out
fsubs
cmp
repnz
mov
and
mov
pop
pop
ss
lret
and
outsl
rorb
xchg
pop
sahf
int
movsl
repnz
test
mov
push
adc
in
push
xchg
ljmp
adc
test
aam
push
adc
shlb
mov
shrb
test
add
jne
addr16
mov
adc
inc
sub
mov
js
repnz
jmp
push
xchg
out
lea
cmp
int
cmpsl
pop
cli
mov
dec
pop
sar
xchg
inc
adc
add
loope
pop
sbb
imul
push
adc
sbb
repnz
push
lods
pop
dec
push
jge
jae
push
push
mov
jnp
cmpsb
jecxz
cltd
push
jmp
insb
cwtl
sbb
dec
scas
pop
clc
add
in
xor
daa
js
in
sbb
ljmp
aaa
gs
ficomps
sahf
insl
or
push
jl
adc
and
jle
rcrb
flds
jl
mov
fwait
xchg
push
cli
sbb
negl
dec
fs
outsl
mov
lock
dec
movsb
or
push
xor
cmp
push
adc
rcrl
sub
sub
pop
mov
testl
cmp
mov
popa
inc
ror
ficomps
psllw
inc
mov
xchg
and
push
jae
into
pop
shll
inc
dec
push
sbb
and
ret
xchg
clc
sub
jecxz
adc
pushf
cmp
xchg
hlt
shlb
add
flds
ja
dec
in
es
jnp
dec
add
jo
sub
call
insl
inc
loop
xchg
mov
xlat
in
insb
xchg
aam
xor
ret
or
push
or
xor
inc
or
xor
fstpl
and
mov
mov
imul
lahf
aad
pushf
inc
cli
and
xlat
adc
andl
mov
pop
jno
rol
mov
mov
jmp
cmp
aam
mov
mov
cli
jmp
mov
xor
out
gs
push
inc
pusha
and
mov
mov
push
popf
cmp
add
pop
arpl
ljmp
movsb
lret
pop
ljmp
xchg
stos
and
mov
inc
imul
sahf
lea
xor
ret
jmp
mov
sub
dec
insb
push
mov
icebp
push
insl
scas
ljmp
pushf
repnz
mov
mov
xor
jne
imul
mov
pop
clc
push
jp
arpl
repnz
lcall
xorb
pop
cs
jecxz
xor
shrb
jae
jno
mov
push
mov
fdivs
bound
pusha
icebp
loop
incl
sub
nop
popf
lock
sti
add
xor
mov
cmpsl
sbb
mov
gs
xchg
sbb
sub
xchg
push
mov
ret
xchg
inc
jo
nop
stos
popf
int3
pop
jmp
mov
shlb
xor
repnz
pop
mov
leave
loope
aad
jge
int
jg
sbb
cltd
xchg
mov
out
cmpsb
mov
mov
movlps
enter
enter
dec
test
insb
es
mov
std
ret
shr
xor
xchg
jl
pop
push
dec
idiv
xchg
fistl
xchg
pop
bound
mulb
addr16
roll
loopne
hlt
movsb
cltd
cmp
test
mov
xor
jbe
movsl
cmp
std
in
test
sub
lods
iret
pop
adc
out
pop
and
and
gs
sbb
std
lds
mov
out
ljmp
mov
xlat
bound
outsl
stos
mov
jecxz
fs
ss
ret
jne
movsl
or
shlb
aam
xlat
fldenv
add
jp
and
pop
lds
enter
jne
pop
cli
and
aad
adc
jmp
fldt
js
iret
pop
test
sub
inc
daa
and
sbb
cmc
mov
out
jge
jp
mov
add
cli
push
dec
test
out
inc
icebp
push
es
int
xchg
in
mov
shrl
adc
in
ds
daa
push
mov
incb
mulb
cld
sar
and
imul
fsubl
adc
and
lock
mov
dec
int
inc
mov
jp
fstl
mov
mov
fimuls
icebp
jg
adc
sti
in
ss
adc
in
lret
inc
mov
add
jl
xor
enter
mov
xor
arpl
shlb
lret
ljmp
repnz
das
aaa
add
xchg
rcrl
sub
mov
xor
mov
in
pop
and
mov
pop
sub
orb
ljmp
mov
mov
xor
divb
pop
adc
sahf
cmpsl
jmp
ret
push
xchg
enter
xlat
inc
int3
pop
jle
xor
add
pop
push
xchg
negl
fs
movsb
xlat
or
nop
jg
mov
out
jno
jns
sbb
push
adc
adcb
mov
sbb
dec
gs
idivb
push
adc
sbb
jmp
xor
mov
shll
xlat
dec
mov
rclb
dec
out
jnp
lret
mov
repnz
bound
std
jp
rolb
shll
popa
ret
add
aaa
enter
jmp
xor
mov
xchg
dec
lds
roll
adc
pop
les
dec
ret
add
xor
leave
ja
sbb
repz
and
test
and
mov
aas
lret
or
lods
xchg
add
iret
cmpl
dec
cmp
jne
sarl
push
ss
test
repnz
cmc
push
mov
cs
lods
or
pop
dec
pop
lcall
jecxz
mov
push
adc
cs
jg
call
repz
mov
into
lods
into
pushf
mov
test
subb
stos
mov
mov
push
bound
xchg
int
idivb
test
les
daa
xlat
std
push
jecxz
jge
pusha
loope
jo
xchg
loop
lods
cmc
stos
mov
cmp
bound
or
sub
fwait
pop
aam
push
mov
or
ficoml
mov
ret
xchg
outsb
jo
dec
and
insl
jb
iret
push
inc
jns
mov
jp
add
mov
mov
jge
sar
rep
insb
cmp
ret
sbb
dec
pop
add
mov
out
bnd
push
adc
inc
into
cmp
xlat
mov
loope
push
fnstenv
cmc
push
stos
dec
jp
xorb
xchg
inc
sbb
jbe
push
mov
sub
mov
inc
clc
lcall
movsb
xlat
cmp
bound
push
mull
jecxz
inc
adc
push
loope
dec
test
cli
orb
inc
jmp
dec
add
dec
jle
int3
add
push
cmp
daa
jmp
xor
and
xorl
inc
xchg
sahf
pop
and
sarl
cmpsb
dec
test
je
push
adc
sti
test
fs
rorb
fdivl
iret
pop
adc
out
jno
push
loope
push
adc
mov
popf
or
jg
aaa
pop
dec
xchg
lcall
or
into
adc
xchg
je
push
ljmp
cmpsl
negl
ja
push
inc
addr16
pop
or
shl
jns
mov
imul
daa
xchg
lret
pop
xchg
aas
ds
test
sti
sbb
hlt
ljmp
rcl
mov
mov
les
movsb
xchg
mov
jecxz
data16
cmc
loop
jmp
jecxz
push
hlt
fists
jns
repz
xchg
clc
in
repz
adc
dec
mov
imul
xor
sub
in
xchg
in
cmpsl
movsb
xor
adc
push
jge
syscall
push
out
addb
fdivs
lret
cmp
xor
fsts
xchg
inc
mov
xor
fwait
sub
lods
jmp
imul
jmp
xchg
fstps
xor
lock
push
adc
dec
jbe
test
jmp
pop
clc
jmp
and
cmp
dec
xchg
dec
out
popa
addr16
sbb
sarl
add
inc
sbb
pop
mov
call
subb
jae
iret
adc
outsb
mov
xor
push
js
int
out
inc
fidivl
bound
cld
push
pop
xor
orl
into
mov
mov
inc
fidivl
adc
je
xchg
xchg
sub
aaa
sub
sbb
out
lea
out
dec
jl
stc
cmpsl
iret
insb
sbb
stos
xor
or
xchg
or
ret
fisubl
pusha
or
mov
je
aas
hlt
add
xchg
fldcw
aad
pop
mov
cmp
or
inc
stc
push
in
add
push
adc
mov
inc
insl
and
ds
mov
cmp
adc
add
cmp
mov
iret
cmovns
mov
aaa
push
out
cwtl
push
adc
faddp
add
cmp
push
mov
imul
push
adc
jae
mov
iret
pop
adc
pushf
cmpsl
sti
mov
sub
add
rcrb
push
pop
cmp
mov
shr
push
dec
insb
pushf
movsb
mov
loop
mov
adc
pop
sti
lock
sbb
add
dec
cwtl
dec
imul
hlt
adc
inc
andnps
sub
enter
xor
testl
xchg
sahf
ret
push
xchg
inc
mov
mov
out
xorl
gs
adc
ss
ret
inc
xchg
lret
or
dec
push
mov
xor
insb
or
ds
mov
mov
icebp
cli
lret
sub
adc
dec
push
pop
or
mov
xor
popa
mov
sbb
dec
iret
add
into
pop
adc
imul
jg
add
add
cmpb
cmp
addl
imul
mov
xor
pop
scas
lahf
jb
test
in
sbb
scas
aad
xor
mov
xor
mov
mov
loopnew
adc
outsl
fadd
loope
mov
clc
xchg
add
push
mov
adc
test
xchg
popl
setnp
xor
push
scas
mov
test
cmpsb
xchg
sbb
fisubs
out
cmc
inc
arpl
movsl
stos
jno
mov
mov
sbb
mov
inc
mov
daa
jns
mov
add
pop
subl
jmp
jge
outsb
fdivr
jle
or
aaa
nop
xchg
inc
inc
fs
push
out
out
stos
mov
sub
xor
shlb
push
sbb
loop
mov
pop
adc
push
daa
hlt
pop
sbb
icebp
push
dec
or
mov
iret
outsb
imul
mov
cwtl
adc
push
cld
pop
inc
outsl
mov
out
jnp
lods
and
xor
pop
adc
outsl
ss
xor
leave
or
xor
lods
test
add
fwait
xor
js
jbe
jae
push
cmpsl
pop
cmp
xor
pop
adc
addr16
cmp
in
iret
add
int3
xchg
mov
pcmpgtw
and
aam
das
push
ss
bound
ja
xchg
sbb
into
jp
push
jb
mov
pop
sub
clc
test
mov
fildll
inc
in
inc
loopne
leave
nop
add
inc
xchg
jbe
cmp
sbbl
aam
push
add
cmp
enter
cmp
call
mov
loop
xchg
pop
mov
scas
arpl
push
inc
sub
inc
mov
sti
pop
sti
push
and
jo
gs
add
rolb
fucomp
fcomi
neg
xchg
add
fs
push
shlb
sub
inc
hlt
cltd
mov
cltd
xor
cmp
addr16
loopne
and
loopne
les
add
cmp
and
pop
out
or
sub
ret
xchg
aas
mov
clc
call
mov
cmp
jns
mov
pop
test
xchg
icebp
xchg
inc
mov
mov
ficoms
data16
xor
jg
sub
mov
or
out
xchg
loopne
pop
movsb
pop
adc
popa
ret
add
inc
inc
insb
les
pop
mov
xchg
enter
cwtl
cli
sub
leave
out
mov
mov
mov
imul
cmp
jmp
sub
jl
jne
mov
xchg
mov
dec
subb
mov
xchg
adc
shll
jne
insl
pop
out
xchg
xor
fisubs
cmp
push
lock
or
xchg
push
iret
fldlg2
mov
out
popf
inc
rcl
mov
mov
xor
jge
push
mov
adc
lcall
mov
cmpsl
sbb
andl
clc
mov
cmp
test
lea
loop
test
or
aas
loopne
cs
dec
popa
fs
xor
sbbb
rcrb
lcall
out
pushf
cmp
leave
add
in
and
jne
shl
lcall
push
je
subl
aaa
or
adc
or
xchg
xchg
mov
adc
aas
dec
dec
cmp
xchg
ja
arpl
insb
dec
ret
add
outsl
jns
xor
and
fs
movsb
xchg
insl
adc
out
out
xchg
aaa
mov
movb
sub
or
dec
ret
stos
add
popf
mov
adc
push
sti
sub
cmc
and
push
in
or
lret
add
pop
or
jle
jo
int3
adc
mull
movb
sbb
pushf
addr16
adc
orl
inc
jae
xor
fsubp
into
jmp
jo
add
cli
cltd
adcb
ret
xor
xor
xlat
jae
jb
adc
js
iret
stos
pop
inc
cmp
inc
outsb
jae
adc
pop
jmp
int3
je
test
testl
cld
iret
into
push
mov
dec
adc
imul
or
add
jl
adc
filds
xchg
cs
adc
pop
fsubrs
push
mov
push
adc
dec
lahf
fwait
in
push
push
sbb
loopne
cmp
pop
xchg
fwait
cmp
fs
popf
insl
mov
incl
mov
jge
clc
push
sarb
push
ds
inc
xor
in
pusha
ficoms
insb
pop
cmpsl
lret
fidivs
aad
cmp
inc
sub
adc
test
dec
fimuls
push
in
ds
mov
jne
xor
inc
xchg
push
ret
outsb
inc
mov
iret
push
ds
jmp
add
cmp
out
push
loope
std
mov
lods
test
pop
xchg
test
mov
push
sub
pop
sar
mov
xor
fdivr
adc
sub
and
xor
and
lahf
xchg
mov
adc
mov
xchg
xchg
push
fdivrs
andb
jne
hlt
push
jo
sub
pop
xor
es
jg
inc
and
insb
or
imul
imul
mov
sub
or
inc
sub
adc
pushf
jns
filds
add
cmp
pop
scas
ret
loopne
mov
mov
orl
mov
and
call
mov
scas
scas
jb
xor
inc
sub
repnz
adc
pop
xor
out
inc
xchg
inc
arpl
int3
mov
movsl
movsb
dec
xor
test
je
cmc
xchg
pop
icebp
xor
mov
add
jbe
loopne
and
xchg
je
roll
inc
dec
xlat
test
dec
dec
lret
mov
mov
int3
rcl
ljmp
xor
jmp
pop
cmp
xchg
push
sbb
lcall
or
dec
inc
pop
xchg
mov
mov
cmp
cmp
icebp
and
cmp
xor
and
inc
fcomi
movsl
pop
loopne
fstpt
xchg
jp
jae
push
push
push
adcb
lock
ror
pop
dec
scas
adc
or
sti
repz
out
push
imul
push
dec
mov
insl
push
insl
dec
insl
daa
sub
lock
nopl
lahf
aaa
gs
mov
ja
xchg
adc
or
mov
jl
xchg
push
pop
pusha
test
gs
xlat
hlt
jg
push
arpl
push
inc
addr16
pop
dec
jne
fwait
dec
jno
repz
ja
mov
outsb
xlat
hlt
jg
xor
sub
movsb
lret
outsl
jbe
lds
aad
repz
push
dec
popa
out
xchg
lahf
js
jo
stos
ficoml
enter
sarb
cld
jb
xchg
push
popf
lahf
fld
mov
ds
mov
mov
loope
jle
xchg
mov
sub
insl
setns
push
inc
cltd
push
mov
adc
sbb
movsb
iret
adcl
test
int
lahf
test
mov
jno
mov
mov
dec
lods
dec
repnz
or
leave
testl
xor
xor
lea
mov
mov
dec
dec
mov
dec
pusha
ljmp
movsl
stc
pop
pop
jmp
lods
mov
iret
add
fsubrs
fmull
add
add
out
cmp
jmp
insl
sbb
jne
cmp
lods
jne
dec
jae
sahf
loope
fsubs
stos
iret
mov
ljmp
pop
push
test
in
mov
js
dec
push
movsl
outsl
mov
push
mov
push
dec
adc
loop
popf
xchg
push
inc
iret
adc
push
dec
xchg
push
mov
filds
pusha
dec
sbb
mov
pusha
cmc
pop
add
rcrb
lea
inc
sub
jno
and
sub
mov
jne
stc
jne
fimuls
jne
stos
push
cs
mov
sub
arpl
fisttpll
sarl
mov
lods
in
jle
xchg
inc
lods
iret
push
lret
jae
in
mov
mov
in
mov
fmuls
js
mov
sub
and
jmp
push
aam
hlt
or
mov
cld
cmp
aaa
mov
push
es
int
pop
jmp
repz
cmp
sahf
jmp
aam
movsb
push
lret
or
xchg
loopne
jmp
pushf
or
adc
or
xchg
mov
mov
clc
dec
jne
insl
mov
adc
mov
loop
ss
cwtl
xor
pop
adc
popa
imul
inc
aas
cmpxchg
clc
mov
mov
add
and
mov
jge
xchg
in
mov
adc
cmpsl
mov
ljmp
inc
and
out
movsl
or
loopew
adc
sub
mov
cmp
adc
cmp
mov
mov
mov
aas
dec
pop
pushf
xor
out
sbb
inc
pop
mov
jecxz
mov
mov
xchg
fcomps
leave
xor
loop
mov
push
iret
and
insl
adc
sbb
mov
jae
push
cmp
in
add
fsub
lcall
or
je
dec
movsb
rcl
int3
xchg
inc
mov
divl
pop
cmc
pop
jno
sar
pop
dec
fwait
jge
cmp
push
sbb
gs
ljmp
lahf
mov
cmp
lds
xchg
sbb
cmp
in
add
testb
test
mov
std
push
add
cmc
sub
test
inc
imul
cmp
loop
mov
mov
ja
pop
cmp
and
outsb
cli
lcall
jecxz
pushf
popa
mov
ret
jecxz
mov
cmp
push
adc
lcall
jecxz
pushf
popa
repz
xchg
push
ds
pop
lods
int3
leave
adc
out
mov
rcl
mov
jbe
pushf
cmp
mov
ja
pop
cmp
and
outsb
lcall
push
out
fwait
mov
and
js
xchg
int
adc
and
inc
loop
and
cmp
mov
sbb
sbb
cwtl
test
or
or
mov
loope
or
xchg
insl
jl
or
call
mov
cmpsl
mov
daa
or
inc
adc
sub
insb
and
or
repnz
pop
pop
inc
ss
cmpsl
aaa
add
inc
cli
repnz
pop
scas
inc
sbb
pusha
inc
dec
jne
imul
iret
popf
mov
nopl
subl
xor
cmovno
mov
mov
cwtl
jb
sahf
cmp
ret
pop
xor
sub
pop
inc
add
or
xchg
lock
mov
or
andb
sbb
mov
mov
in
cmpsl
cmpsb
popl
fcmovnu
and
jl
jmp
gs
xchg
or
rorb
dec
sbb
sub
dec
push
adc
and
fimuls
mov
fs
hlt
add
dec
xchg
scas
mov
mov
lahf
mov
out
mov
cmpsl
mov
outsl
addb
push
imul
jns
push
xchg
sub
icebp
inc
comiss
dec
testb
cmp
dec
pop
or
lock
add
dec
dec
sbb
jle
ud2
stos
out
shlw
fwait
jl
xchg
pop
ficoms
dec
in
test
jb
mov
push
mov
pop
iret
in
lock
testb
add
pushf
jo
adc
sbb
push
adc
cmp
jo
adc
xor
sub
adc
push
adc
js
mov
add
add
aas
pusha
cmp
incl
fcoms
cmp
ret
xlat
shl
mov
sub
ja
out
out
push
leave
pop
adc
stos
cmp
lahf
and
fstpt
adc
pop
adc
lods
lret
sbb
out
and
ljmp
out
ss
push
xchg
popl
add
in
push
ljmp
dec
icebp
in
lea
mov
xchg
ljmp
insl
aad
fcmovne
dec
jo
push
adc
scas
xchg
and
adc
popf
add
insl
jge
adc
inc
outsl
xor
or
repz
daa
test
push
adc
sti
mov
imul
mov
pop
sub
or
pushl
cmp
cmp
adc
or
enter
int
mov
adc
adc
xchg
xor
bnd
pushl
roll
pop
sub
pop
adc
ret
loop
sbb
roll
xor
roll
outsb
std
out
lcall
dec
pushf
cmp
shl
das
xchg
sysenter
and
adc
cmp
push
cmp
pop
out
movsb
xchg
rclb
ret
xchg
rclb
out
pop
pusha
cmp
sub
rcr
jge
and
popf
push
jo
ret
outsl
das
loop
mov
scas
test
add
dec
pop
jno
loop
in
jno
into
ja
dec
daa
mov
sarb
adc
dec
fsubrs
mov
or
repnz
xor
sub
adc
push
adc
fsubrs
pusha
mov
into
std
xor
out
aam
and
insb
or
dec
mov
or
adc
push
inc
je,pn
lret
pop
adc
test
mov
inc
pop
sub
inc
daa
or
xchg
movsl
inc
xchg
test
inc
mov
loop
icebp
sahf
clc
push
test
pop
adc
icebp
lea
mov
or
jo
outsb
pusha
insb
cmp
out
mov
aaa
fadds
testb
pop
adc
in
stc
mov
inc
inc
push
dec
shlb
dec
fwait
lock
xchg
jns
mov
movsl
sbb
inc
jnp
add
call
pop
adc
inc
inc
sub
int
mov
clc
mov
lret
pop
adc
add
pop
adc
dec
add
sbb
movsl
fcmovnb
xchg
lods
jae
xchg
pop
mov
sbb
add
cli
push
fwait
repz
jle
dec
mov
jge
call
les
jo
adc
mov
inc
cmp
inc
loopne
ffree
gs
sbb
jb
cmp
jecxz
pop
cmp
movl
ds
lret
out
push
out
aad
sub
in
pop
outsb
inc
outsb
sbb
adc
out
and
xchg
fnstsw
or
mov
ljmp
cmpl
shlb
repz
out
dec
mov
adc
or
addr16
jmp
mov
dec
mov
push
cmp
lret
test
aas
aam
out
int
aas
push
push
sub
jnp
scas
xchg
xor
clc
es
js
inc
xchg
aaa
or
pop
pop
outsl
fxtract
vpunpcklqdq
mov
lret
outsl
xor
pop
adc
popl
decl
adc
pop
add
adc
adc
lds
mov
fisubrl
dec
xchg
xor
out
nop
iret
inc
ss
outsl
arpl
test
pop
inc
sub
ds
addr16
xchg
popa
add
pop
push
aaa
pop
mov
daa
out
pop
js
mov
in
push
xchg
adc
inc
sub
lds
or
cmp
sbb
je
ljmp
dec
sub
loopne
stos
bound
xchg
cmp
filds
aam
movaps
addr16
dec
sbb
jecxz
lds
insl
mov
cmp
pop
push
mov
mov
pusha
adc
jnp
shll
mov
daa
sahf
in
mov
repz
mov
cld
push
mov
sub
inc
out
xchg
push
popf
es
pop
pop
add
addr16
sub
int3
mov
mov
fcoms
push
mov
pop
test
or
push
or
adc
dec
jns
pop
cmp
xchg
loope
mov
mov
and
mov
xchg
rcl
cmp
xor
imul
andb
mov
jns
push
out
mov
jecxz
fld
sbb
xchg
in
seto
mov
sbb
pop
xlat
outsb
cltd
imul
dec
push
xor
jns
insb
mov
ret
repz
push
xchg
inc
mov
lods
iret
pop
adc
jae
inc
rcrb
xchg
icebp
loop
jo
fisubl
punpcklbw
mov
push
lret
and
lcall
xchg
mov
add
sub
iret
sahf
lcall
testb
push
sbbl
sahf
pop
out
push
je
pop
shll
add
lods
iret
pop
adc
sarl
mov
dec
xchg
push
xchg
xor
xchg
stos
int
and
outsb
inc
dec
or
xor
rcll
sbb
movb
add
repnz
dec
scas
and
xor
xchg
outsl
ss
std
shll
popf
cmp
sub
sub
sub
insb
and
outsb
inc
add
xor
xchg
imul
je
iret
push
cmp
imul
mov
jnp
shl
mov
mov
pop
icebp
out
scas
jg
xor
sbb
inc
or
xchg
dec
nop
shrl
push
jae
rorb
imul
push
imul
ret
add
test
mov
out
imul
int
jae
dec
pop
sbb
and
jl
pop
insl
mov
sahf
pop
js
lea
shll
adc
or
cmp
loop
ljmp
add
lock
in
add
adc
xlat
inc
push
loopne
pop
rcll
bound
popf
enter
lea
mov
and
adc
imul
pushf
and
out
and
iret
pop
jae
jecxz
std
negb
ret
adc
mov
xor
pop
xor
xor
and
mov
pusha
or
xchg
mov
push
stc
inc
jg
and
push
addb
jp
lock
adc
mov
dec
inc
jl
and
pop
adc
push
cmpsl
dec
es
fstps
dec
sbb
stc
movb
in
mov
sbb
imul
cmp
arpl
insl
jb
loopne
test
pop
out
jp
xchg
iret
cmp
push
mov
jnp
test
pop
dec
adc
lods
gs
clc
push
sub
dec
lahf
adc
add
add
jecxz
repz
xchg
loope
lods
popf
insb
xchg
mov
ss
leave
mov
in
xorl
popf
adc
jmp
jg
sbb
lods
inc
push
sahf
fcmovnu
add
add
pop
mov
mov
sbb
fildll
mov
stos
bound
out
push
cmpsl
dec
inc
adc
mov
xor
mov
and
lods
iret
pop
adc
or
iret
add
js
fcomip
xchg
push
cmc
pusha
hlt
pop
dec
and
imul
jecxz
inc
mov
cltd
pop
loop
pop
fsubs
jle
iret
pop
adc
push
mov
shr
mov
pop
mov
mov
dec
mov
fwait
loop
mov
pop
xor
aas
adc
movsb
jle
lret
dec
sub
dec
adc
or
lods
iret
pop
adc
into
inc
imul
sahf
inc
js
adc
std
sbb
inc
fs
adc
rcll
das
mov
dec
lds
xor
sbb
nop
testb
iret
mov
cld
into
mov
jno
cmp
fadd
js
xor
cwtl
pop
call
outsb
jne
int3
std
loop
inc
cli
xchg
cmp
cmp
inc
mov
mov
xlat
js
insb
cmp
mov
mov
xor
mov
sbb
lds
mov
imul
shll
ja
fistpl
icebp
je
lea
lods
frstor
sbb
popa
ret
insl
cmp
pop
js
push
rep
orb
add
cmp
or
inc
lret
call
push
pusha
push
mov
or
sbb
xchg
lds
or
test
out
imul
mov
out
pop
jge
or
cmp
loop
mov
out
cmp
aad
inc
push
insl
dec
insb
rorl
int
insb
mov
iret
das
punpckhbw
lock
push
loop
mov
xor
pop
mov
jle
xchg
lret
sbb
add
xchg
sub
push
daa
iret
movb
pop
push
stc
cli
loope
push
cs
jl
pop
xchg
cmpsl
lds
test
mov
pop
mov
push
mov
jne
mov
cs
dec
fs
sahf
cmp
jl
gs
and
arpl
mov
mov
dec
mov
xor
xchg
insb
mov
mov
fdivl
arpl
sub
test
push
adc
cmp
out
adc
shl
lret
lds
inc
jae
sbbb
mov
cmp
ret
filds
imul
mov
out
pop
jge
or
cmp
popf
fprem1
scas
addr16
iret
sahf
lcall
aad
pop
mov
xor
mov
or
imul
and
shlb
inc
pop
inc
add
xor
outsb
loopne
cmp
pop
mov
fistl
sub
addr16
int
cmpsb
lods
iret
pop
adc
or
imul
jge
leave
adc
insb
pop
push
inc
add
and
inc
push
bnd
lods
mov
addr16
push
inc
rcll
popa
fcomp
cmc
xchg
jno
popa
sub
int3
and
sbb
jbe
ja
addb
lret
cmp
or
inc
ss
inc
pop
insl
and
or
divb
inc
mov
add
es
push
jns
and
fdivrs
dec
mov
inc
sub
adc
test
lcall
or
addb
bound
cli
mov
in
or
sub
movsl
pop
vpsubq
sbb
loopne
or
mov
lret
push
lahf
sbb
xor
shrd
pusha
cld
sub
jae
inc
mov
testb
jle
lret
sbb
lds
pop
dec
cmp
cld
movb
iret
pop
adc
dec
lret
sub
pop
mov
lock
or
inc
fwait
shr
cmc
ljmp
and
scas
ja
fisubrs
jl
mov
mov
jl
int3
pop
in
test
cmc
fidivs
jg
jecxz
pusha
hlt
push
js
pushf
comiss
sbb
pop
dec
dec
adc
data16
in
fwait
dec
testb
sub
sbb
cmp
repnz
or
iret
sub
xchg
cmc
dec
pusha
sub
enter
inc
adc
pushf
fstpt
mov
inc
mov
movsl
js
movsl
ror
inc
out
outsl
jge
adc
lret
mov
hlt
notb
xor
xchg
jns
push
sbb
or
jg
pop
pop
jo
jns
pop
inc
stc
stc
jae
jmp
imull
push
lods
inc
sha1nexte
adc
cmp
das
xlat
in
pop
gs
sbb
cmp
adc
lods
aas
repz
or
shrl
add
clc
loop
xchg
or
inc
pop
inc
ret
hlt
jnp
adc
inc
jl
outsl
xor
imul
xor
inc
push
xor
not
cs
ficoml
cmpsl
dec
pop
js
mov
iret
jle
mov
fs
mov
jg
int
jne
rolb
loope
sbb
add
jbe
sbb
fwait
push
adc
arpl
push
mov
sahf
clc
enter
xor
push
test
jp
jmp
sub
loop
inc
xor
cmpsb
fs
sbb
ret
or
das
lods
sbb
rolb
out
ret
xchg
pop
in
mov
inc
push
dec
ret
add
cli
add
and
push
out
scas
ljmp
jnp
in
and
cmpsb
push
and
icebp
pop
inc
int3
xchg
push
jle
cmp
mov
pop
dec
push
mov
movsb
stos
mov
xor
outsb
cltd
jo
gs
push
xor
inc
cli
lcall
xchg
sbb
cmpsl
jns
fdivs
loop
jp
mov
mov
scas
outsb
xchg
inc
mov
push
cs
xor
pop
scas
and
lcall
xor
cmp
dec
insb
mov
pop
cs
int
fbstp
ret
sbb
sub
movl
lds
in
xor
pop
lcall
pop
push
push
stos
pop
xor
sub
addr16
imul
and
fistl
in
stc
or
shl
enter
dec
gs
xchg
pop
leave
lret
into
bound
cwtl
incl
movsl
mov
jmp
lcall
mov
stos
rorl
jo
not
cmc
xor
jg
and
stos
cld
sub
dec
into
add
mov
imul
icebp
cmp
lret
xorl
or
mov
sub
test
push
outsl
outsb
jo
xchg
dec
add
fstpt
xlat
lahf
ret
call
jg
push
ret
or
push
adc
fwait
call
mov
adc
and
adc
cmpl
adc
dec
scas
shrb
fs
cmpsl
jne
adc
mov
int
scas
sub
or
or
insb
add
dec
add
adc
add
cmp
sub
push
mov
shrl
lods
add
sahf
fistl
adc
xchg
lret
jo
push
adc
sub
adc
inc
xor
push
and
adc
mov
cmc
lock
jo
out
dec
pushf
or
imul
js
xor
fdivrs
cmpsl
cmp
xchg
jne
pcmpgtb
adc
xchg
xchg
mov
mov
nop
enter
shrl
mov
pusha
and
adc
dec
test
pusha
and
adc
jne
and
adc
out
lds
notb
push
arpl
roll
push
dec
imulb
sub
adc
movsb
shlb
inc
pop
add
divb
outsl
enter
dec
cmp
pop
adc
in
or
aam
popa
lret
lcall
xor
adc
aaa
push
cli
and
movsl
sub
dec
sub
add
inc
dec
imul
test
cmpb
dec
repz
jg
testl
pusha
rdtsc
mov
sub
inc
loop
rdtsc
sub
dec
je
cmp
jne
ret
popa
xchg
xchg
xchg
nop
nop
mov
nop
nop
call
xchg
xchg
xchg
nop
nop
mov
nop
nop
addl
xchg
xchg
xchg
nop
nop
mov
mov
nop
nop
sub
xchg
xchg
xchg
nop
nop
mov
mov
nop
nop
addr16
xchg
xchg
xchg
nop
nop
mov
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
dec
xchg
xchg
xchg
nop
nop
mov
mov
nop
nop
jne
xchg
xchg
xchg
nop
nop
mov
nop
nop
xor
inc
aad
repz
clc
push
push
or
insb
and
adc
es
push
mov
jo
or
xor
into
jg
sub
cmp
xor
xchg
jne
je
rcrl
into
pop
adc
and
adc
mov
inc
inc
push
imul
jne
fistpl
stos
lock
lea
js
or
mov
pop
dec
or
testb
or
xchg
popa
lcall
daa
mov
and
adc
das
mov
xorb
fwait
enter
lret
sbb
and
adc
mov
inc
imul
test
cmp
int3
and
adc
add
xor
out
pop
cld
addr16
js
or
bound
test
cltd
out
call
pushf
in
ret
xchg
imul
inc
loope
stc
mov
add
enter
andb
adc
sub
popa
lcall
daa
test
or
fdivrs
je
shl
mov
je
push
adc
dec
jge
ja
cmp
xchg
sbb
jne
xlat
xchg
dec
sbb
test
aad
clc
mov
sbb
sahf
aas
fistpll
popa
mov
stos
adc
lret
lcall
subb
shlb
add
and
mov
cs
pop
mov
xchg
cmc
mov
xchg
xor
pop
mov
adcb
mov
je
push
adc
sbb
cmc
fnstsw
xor
adc
or
iret
push
sub
mov
pushf
push
xor
mov
and
aaa
aaa
fwait
jmp
mov
int
push
xchg
and
shld
popa
sub
aaa
push
std
les
adc
inc
sbb
cltd
mov
dec
out
out
mov
stos
out
adc
inc
push
and
mov
mov
negl
fsubr
lcall
xlat
xchg
or
sarl
jl
fsubr
ret
faddl
push
sbb
and
enter
mov
mov
dec
add
frstor
test
add
jb
adc
outsl
mov
popf
mov
cld
xchg
xor
dec
test
mov
pop
out
cli
test
push
adc
or
scas
inc
stos
pop
and
push
mov
push
es
jmp
pop
pop
in
push
icebp
pop
test
or
in
sub
pusha
jo
or
jg
imul
adc
iret
adc
push
out
adc
mov
test
sub
sub
sti
adc
cmp
inc
mov
pop
loop
stos
mov
idivb
daa
and
fsts
enter
mov
add
paddq
mov
adc
push
adc
push
jl
and
inc
inc
addb
call
jo
push
mov
outsb
mov
shll
mov
setle
ret
xorb
test
pusha
int
lock
insl
jns
sub
push
xor
arpl
mov
hlt
mov
sub
adc
aad
icebp
jecxz
xor
lods
cwtl
mov
mov
loope
repnz
add
cs
sahf
jae
cmp
mov
repz
jb
adc
mov
in
jnp
lds
lock
out
fmull
adc
jns
push
mov
imul
imul
pop
in
mov
push
call
mov
repz
mov
push
pushl
jmp
js
adc
add
cs
jb
adc
xor
xor
divb
mov
insb
cmpsb
sub
push
xchg
mov
adc
and
pop
adc
fiadds
lock
aam
movsl
add
xchg
std
xchg
xor
xor
mov
cwtl
rcrl
or
mov
jo
shll
adc
xchg
cwtl
stos
ds
rolb
dec
cmp
test
mov
or
cmpsl
bound
mov
push
sub
jb
into
je
fstpl
cmp
roll
or
daa
jne
sbb
pop
xor
mov
xor
lods
jmp
into
pushf
mov
rolb
cmp
sbb
je
pushf
inc
into
mov
jo
add
stc
xchg
ja
fwait
push
adc
mov
adc
into
adc
xor
sbb
push
rol
filds
inc
jo
pop
adc
cmp
rcrl
or
jp
les
cld
mov
clc
mov
pop
cmp
loope
xor
pop
add
or
pop
fsubs
lcall
pushf
lret
add
fcmovnbe
jbe
popf
ja
mov
out
mov
sbb
stos
sbb
jo
pop
adc
out
daa
aas
data16
push
dec
out
es
out
push
or
sbb
cs
dec
das
mov
jo
fsubrs
call
jns
stc
push
pop
movsb
cmp
xor
lret
jl
jge
ret
cmp
sahf
or
jae
ret
xchg
mov
push
jns
sub
into
pop
adc
mov
or
jae
lods
sub
adc
mov
int
mov
adc
repnz
or
sbb
xlat
lret
rorb
in
testb
lds
pusha
and
pop
adc
clc
push
adc
mov
sub
adc
adc
data16
jo
mov
cmpsl
adc
lods
iret
pop
adc
cli
gs
ss
les
imul
data16
lods
iret
pop
adc
adc
inc
dec
repnz
andb
adc
pop
adc
dec
xor
pop
adc
adc
lret
aaa
pop
mov
xor
fidivs
push
mov
movsb
jge
es
pcmpeqw
ficoms
xor
pop
adc
inc
ss
mov
adc
push
xor
pop
adc
jp
out
mov
lea
rcr
sarb
fadds
in
push
bound
pop
adc
pop
adc
dec
out
cmp
sub
inc
xchg
mov
sahf
js
rorb
push
iret
pop
adc
inc
jge
and
adc
mov
loop
cmp
cld
push
adc
repz
cmp
cltd
jo
xor
adc
jo
push
dec
stos
jns
inc
and
out
jle
insb
xchg
inc
mov
pop
mov
aaa
mov
sbb
jns
daa
push
aad
dec
sbb
mov
mov
mov
sbb
pop
mov
or
xchg
movb
inc
or
pop
out
fdiv
test
fnstsw
push
or
xchg
rcrl
cmp
lea
mov
fsubs
and
adc
popf
adc
sbb
dec
ret
mov
sub
fwait
push
popa
mov
pop
icebp
jne
xor
stos
pushf
loopne
out
movsb
shrb
cmp
push
loop
mov
mov
insl
mov
adc
adc
js
test
in
mov
push
pop
add
push
xchg
je
repnz
pop
add
xor
insb
fdivr
repnz
es
sub
or
xor
repz
pop
and
pop
mov
or
mov
aaa
and
xor
or
inc
jno
outsb
dec
mov
adc
popa
xchg
out
outsl
cmp
lds
cmpsb
mov
xchg
pop
into
mov
or
pop
stc
cmc
pop
dec
push
sti
repnz
jnp
cs
int
pop
sbb
dec
fisubl
roll
cmpsl
cmp
jp
add
cmp
xor
xchg
pop
icebp
push
push
lret
xchg
shrl
jmp
sub
lds
cli
jle
xchg
lods
and
popf
jo
ret
mov
es
pop
loop
jae
or
mov
sub
or
mov
icebp
adc
popa
xor
lret
xchg
xchg
lods
iret
pop
adc
pop
shrl
aad
iret
pop
adc
or
push
iret
pop
adc
cli
call
js
mov
fwait
pop
mov
mov
sbb
fs
jns
pop
ret
iret
pop
adc
in
mov
sarl
loopne
filds
iret
pop
adc
mov
lock
das
popa
xchg
ret
sbb
dec
mov
loop
js
push
pop
jl
hlt
and
xchg
jecxz
loop
test
lock
addr16
or
mov
insl
cmp
das
cmp
pushl
add
and
in
dec
mov
pop
push
cmpsb
mov
mov
and
cmp
cld
in
xor
adc
adc
pushf
push
mov
cmpsb
cmp
inc
out
or
jmp
js
les
pop
int
aam
dec
dec
push
cmp
xor
jnp
adc
outsb
push
lock
inc
and
pop
push
inc
test
inc
adc
lods
jno
inc
push
lods
cltd
jl
jle
mov
push
jbe
jp
jbe
xlat
add
daa
mov
dec
in
push
lcall
push
dec
push
test
xorl
lock
push
adc
xor
sbb
test
pop
cmp
fcoms
shl
scas
pop
xor
pop
std
cli
jl
push
xor
repz
and
mov
cmpsl
hlt
std
push
adc
in
mov
pushf
cmp
adc
mov
or
sbb
test
and
or
inc
and
clc
push
mov
clc
std
push
adc
inc
dec
push
sub
or
stos
bound
mov
in
mov
roll
mov
addb
jo
in
or
ret
test
inc
push
fistl
rolb
adc
add
les
std
nop
pop
add
rolb
adc
stos
lea
inc
inc
scas
cld
cmpsl
and
ret
push
adc
jns
rolb
adc
es
in
rolb
adc
fdiv
loop
rolb
adc
or
jno
inc
hlt
jge
adc
in
rolb
adc
pop
mov
sub
mov
push
push
mov
stos
jno
movsl
mov
ljmp
enter
rolb
adc
ja
push
inc
inc
sbb
cmp
popf
fnstsw
popf
fnstsw
xchg
in
rolb
adc
jp
shr
rolb
adc
pop
sbb
loop
push
in
rolb
adc
push
inc
icebp
xor
scas
mov
jae
into
cmp
roll
ljmp
lock
in
xor
pop
adc
int3
inc
addr16
cmp
xchg
ja
rcrl
gs
iret
fidivs
ret
repnz
jg
je
push
jg
mov
pop
jne
fimull
mov
pop
mov
jp
xor
rcrl
mov
fidivrs
popa
lret
fmul
pop
adc
and
lock
cmp
mov
imul
test
mov
lods
push
cmp
into
inc
arpl
xchg
pop
sub
iret
aaa
xchg
outsb
aaa
in
lcall
push
lock
push
xchg
out
shlb
or
mov
sbb
insb
xor
pop
mov
aam
or
and
and
adc
iret
mov
pusha
rolb
adc
mov
push
mov
or
sub
loop
mov
mov
push
adc
rolb
adc
and
arpl
push
sbb
lret
shlb
or
sahf
mov
in
pushf
lcall
repz
call
fsubs
or
mov
out
loop
mov
rcl
mov
sahf
js
sub
mov
adc
dec
out
sub
iret
test
roll
jnp
pop
mov
pop
adc
negl
mov
pop
add
xchg
jbe
lcall
xor
mov
inc
inc
add
repnz
xchg
insb
repz
mov
sbb
jmp
dec
adc
mull
cwtl
fdivrl
mov
in
rolb
adc
ss
cmovge
mov
ds
std
daa
or
pop
ficoml
mov
inc
add
cmp
add
in
rolb
adc
scas
rclb
adc
sbb
adc
dec
stos
popa
xchg
add
or
out
cmp
and
sbb
jbe
imul
js
xchg
pop
jns
or
lods
in
mov
int3
test
stos
sub
pop
aam
xchg
shr
rolb
adc
in
loop
xor
push
loopne
or
push
aad
rcll
lods
data16
pop
cwtl
jno
stc
roll
mov
xor
outsl
jge
iret
pop
adc
icebp
clc
addr16
jecxz
andb
adc
stos
mov
mov
inc
mov
imul
mov
inc
and
jae
repz
mov
fcoml
out
sbb
inc
sbb
push
fdivrp
cltd
dec
jmp
iret
pop
adc
push
push
or
inc
fstps
mov
or
jle
add
inc
mov
pop
adc
loop
mov
push
xchg
add
sbb
or
clc
inc
add
or
jo
or
cmp
sub
jmp
mov
push
adc
aam
imul
cwtl
call
in
xlat
test
dec
adc
sahf
ret
sar
mov
push
jge
adc
cld
push
adc
aas
shlb
add
pop
rcll
or
fidivl
mov
pop
adc
pop
mov
iret
pop
adc
adc
adc
js
lods
sti
sub
push
test
or
xchg
lock
adc
pop
sbb
scas
fdivl
dec
push
lret
rolb
adc
js
mov
inc
psubsb
inc
inc
or
adc
add
cwtl
popl
iret
pop
adc
cmp
out
pop
cs
int
in
rolb
adc
push
xchg
jg
and
and
scas
mov
call
enter
rolb
fs
cld
pop
insb
aaa
call
mov
jge
pop
cs
scas
mov
xor
cmpb
loopne
rolb
adc
out
pushf
add
sbb
dec
dec
or
xor
push
xor
loopne
xchg
cs
cmp
lea
xchg
push
inc
inc
mov
pop
add
push
adc
jne
xchg
xlat
popa
idivb
lds
hlt
and
xchg
ss
std
lods
cmp
inc
mov
lret
xchg
cs
cld
xchg
out
pushf
cmp
hlt
rolb
adc
cmp
lods
cmp
adc
fsubs
jge
repz
inc
inc
jbe
xchg
imul
sbbb
loopnew
mov
and
push
and
add
inc
arpl
in
push
cwtl
jge
inc
mov
sbb
inc
pushf
sbb
ljmp
insb
xchg
fstpt
sbb
dec
and
out
loop
xchg
mov
inc
data16
ret
repz
call
xchg
cwtl
jle
pop
cs
mov
insl
fcoml
int
inc
movsl
lcall
cwtl
xor
icebp
sahf
decl
adc
xor
xor
sub
pop
dec
pop
sub
adc
pop
adc
push
int
and
adc
ja
fwait
jg
test
bound
lds
repnz
ret
rclb
dec
inc
inc
gs
in
xor
mov
addr16
roll
adc
add
int
ds
rolb
adc
les
mov
xchg
pop
pop
in
rolb
adc
jo
mov
cltd
imul
xor
test
adc
inc
js
add
imul
arpl
es
mov
loop
push
pop
pop
call
scas
addr16
xor
hlt
stos
xchg
xor
stos
mov
sub
hlt
in
aaa
inc
adc
mov
sahf
xor
xchg
fistps
out
data16
xchg
fidivrl
into
mov
dec
aad
sbb
or
or
cli
jge
sub
dec
pop
adc
adc
subb
fldcw
or
insl
cmp
pop
out
or
cmc
adc
adc
fldt
roll
adc
stos
addb
inc
pop
ss
or
lahf
sbb
dec
sub
or
roll
pop
adc
or
inc
xor
or
in
imul
lods
sub
adc
into
pop
adc
jne
jo
pop
adc
or
or
pop
adc
dec
rcr
or
shl
xchg
out
push
add
adc
inc
ss
xchg
push
mov
dec
mov
pop
lods
pop
fildl
test
inc
addr16
and
push
mov
sbb
mov
xchg
popl
xchg
jle
faddl
and
and
sar
insl
cli
push
sub
mov
push
mov
jnp
mov
and
mov
sbb
push
jmp
out
les
or
fisubl
inc
insl
iret
cwtl
push
inc
sub
out
inc
cmp
icebp
pop
test
xor
push
int3
fnstenv
push
out
pushf
jns
xor
xor
incb
adc
fdivrl
xchg
mov
in
push
or
cmp
addr16
sbb
lock
sti
mov
in
movsb
mov
call
xorl
ss
jg
inc
mov
fdivs
mov
popa
movsb
inc
or
xchg
andb
pushf
cmp
push
icebp
imul
inc
mov
adc
lock
je
adc
or
cmpsb
add
add
rclb
repz
ret
xchg
dec
pop
mov
dec
repz
xchg
lods
in
jae
into
pushf
inc
jl
mov
push
sbb
mov
imul
mov
pop
dec
imul
test
and
xor
cmp
adc
shl
xor
lods
adc
add
and
inc
ss
ss
adc
jmp
xchg
mov
lcall
sti
mov
or
adc
scas
dec
shlb
mov
es
movsb
out
xor
out
pushf
aaa
in
dec
inc
int
jp
inc
incb
adc
sahf
cmp
aad
dec
imul
fs
and
sti
cmpsb
aas
push
dec
aad
add
pop
out
fdiv
push
sti
cmp
push
inc
mov
dec
mov
mov
and
xor
push
mov
and
sbb
in
mov
jae
inc
shrl
stc
imul
adc
add
xor
jns
add
shrl
lods
and
mov
pop
xchg
xchg
testl
ret
loopne
xor
mov
sbb
fildll
repnz
stc
mov
outsl
push
pop
aad
mov
jge
lcall
mov
xchg
test
notb
xor
test
mull
adc
cli
mov
or
sbb
leave
cmc
adc
lds
mov
pop
and
sub
daa
jnp
lcall
add
lret
fdiv
jnp
orb
cmp
lds
andb
imul
in
push
lock
ficomps
das
ucomiss
movaps
mov
mov
mov
ret
cmp
pop
adc
loope
mov
dec
adc
popw
push
lock
inc
ucomiss
pushf
mov
jae
stos
or
es
mov
or
mov
test
lds
adc
shl
test
decl
mov
arpl
jns
jl
imul
and
add
incb
adc
int
nop
mov
inc
ss
leave
out
gs
sub
mov
mov
add
or
sbb
cmpsl
mov
jns
mov
orl
push
dec
xchg
rorb
add
lock
dec
push
into
in
je
fs
dec
shlb
pop
pop
push
lods
xchg
je
pop
push
lahf
or
mov
gs
div
cltd
mov
test
rcrb
popa
repnz
test
sub
sbb
scas
jecxz
fdivr
data16
fsts
cmp
adc
fsubr
clc
divb
scas
mov
mov
mov
sub
jmp
testl
in
gs
movsl
sbb
dec
rcll
imul
push
mov
shrb
call
shll
xlat
pop
dec
xlat
add
aas
dec
push
rol
jb
or
pusha
stos
loop
push
out
xchg
call
es
and
pop
fldt
insb
xor
adc
sub
jbe
pop
lds
add
pop
mov
fcmovnbe
in
cmpsb
lcall
sbb
int3
movl
mov
mov
aam
sahf
lahf
sbb
loop
jp
icebp
inc
xor
in
outsl
jns
and
stc
rcrb
dec
mov
insl
sbb
dec
inc
imul
xor
ja
les
xor
xor
loop
push
jae
pop
sahf
mov
rep
and
and
aad
inc
clc
mov
loope
js
add
sub
test
inc
insl
dec
int
dec
int
ret
jg
mov
mov
mov
rcrl
sti
out
incb
xchg
rolb
xchg
cs
cmp
pushf
cmp
cmc
xchg
push
sbb
xlat
pop
jae
adc
mov
rep
sub
test
shl
jne
js
fldenv
icebp
sub
in
xchg
xchg
ja
fwait
rcl
cltd
mov
push
cmp
notb
mov
leave
loopne
aaa
nop
mov
mov
xor
inc
shrl
mov
movl
popa
cmp
mov
mov
mov
rorb
js
or
add
cs
dec
fs
into
sahf
cmp
jns
mov
shrl
mov
pop
sub
movsb
cmp
mov
adc
int
faddl
ret
add
rcrl
or
dec
lret
jnp
xchg
aam
ds
sbb
xor
add
or
mov
jl
insb
popf
cmp
mov
jno
leave
lods
ret
xor
les
and
adc
stos
push
pop
sub
mov
inc
insl
loopne
cmc
out
xor
jmp
adc
push
repz
leave
xchg
cmpsl
cs
jge
rorl
lahf
cmp
mov
and
cmpb
adc
xchg
scas
cwtl
in
xchg
iret
jo
in
add
dec
sbb
test
cmp
popl
mov
lods
adc
xchg
or
in
pop
xchg
jb
mov
dec
sahf
jg
fwait
add
roll
sub
or
arpl
rcll
addr16
sub
add
push
frstor
sub
and
jbe
mov
jmp
xchg
and
imul
push
mov
pop
nop
and
or
xchg
enter
push
xchg
push
jno
dec
inc
mov
stc
fistl
sub
mov
lods
jl
ret
data16
hlt
ret
jecxz
and
mov
adc
jns
movsl
inc
popf
data16
mov
je
in
test
andl
in
jge
into
dec
inc
or
sbb
xchg
push
in
pop
push
inc
fmull
lret
stos
push
cmpsl
fdivrs
std
mov
xor
push
mov
add
jae
ja
aam
movsb
lods
mov
jne
ja
mov
fs
pop
popa
ret
sbb
add
cmpsb
ss
test
jns
pop
pop
push
daa
jmp
in
in
and
push
mov
outsb
mov
pop
or
jno
dec
sbb
or
in
push
add
inc
loop
ja
cmp
aad
lahf
pusha
aaa
fcompl
adc
cmp
rorl
test
mov
test
sbbb
sarl
idivl
push
pop
outsb
fwait
scas
mov
jp
cmc
sbb
imul
adc
or
mov
arpl
mov
fisubrl
mov
cld
dec
mov
mov
push
test
or
jno
jb
int
and
xchg
out
inc
cmp
adc
inc
inc
popf
push
divl
jmp
jp
loop
mov
loop
push
roll
mov
fiadds
shlb
pop
iret
fwait
in
mov
or
fsubrs
xor
pop
dec
ficoml
jmp
push
push
xchg
ja
imul
ljmp
inc
xchg
jnp
in
xchg
mov
cmp
xbegin
pop
or
sub
pop
scas
mov
push
cmp
dec
in
je
shll
cmpsl
ret
rcr
das
dec
outsb
dec
out
cs
xchg
xchg
ja
pushf
mov
inc
pop
bound
adc
out
test
or
in
xchg
mov
adc
dec
jo
adc
test
sbb
lock
xor
xchg
and
jns
out
pushf
cmp
push
pusha
jb
adc
sub
sub
adc
inc
repz
out
xchg
lea
adcb
ret
xchg
mov
je
push
arpl
stc
pop
iret
push
pushf
sub
adc
jo
jb
adc
js
mov
popf
mov
sub
dec
mov
adc
ss
test
rolb
adc
addb
sbb
jne
push
out
pushf
cmp
loope
mov
lret
in
mov
sub
adc
lcall
sub
adc
testb
cs
pushf
sub
adc
pop
pushf
sub
adc
adc
sbb
cmp
adc
and
jb
adc
or
int
and
arpl
subb
adc
testb
sub
adc
cmpsl
inc
cwtl
mov
or
and
xchg
sub
adc
test
js
dec
test
or
xchg
cmp
data16
or
in
ret
sbb
dec
ss
into
mov
js
cmp
add
pop
push
mov
dec
movb
inc
jb
fdivrp
jb
xchg
ja
pop
in
clc
push
std
xlat
mov
mov
out
pusha
cmc
faddl
addr16
js
fsubr
into
sub
mov
mov
jle
adc
or
push
lret
mov
adc
mov
pop
mov
sbb
shlb
je
xchg
popa
sub
xor
push
mov
adc
sub
repnz
mov
or
call
adc
push
lock
popa
and
subl
leave
adc
jp
add
imul
aad
in
jnp
lahf
pop
cmp
imul
cli
push
in
cmpsl
imull
mov
inc
lcall
add
cmpsl
mov
cmp
jge
cmc
mov
sub
cmpl
cltd
or
and
inc
pushf
imul
xchg
iret
ret
pop
pusha
hlt
rcrl
cmc
push
cmp
arpl
mov
xor
test
arpl
aaa
daa
jnp
xor
mov
fisttpl
pop
pop
mov
aam
or
loopne
sub
shlb
rolb
push
pop
shlb
xor
clc
inc
mov
lret
shl
imul
pop
cli
jns
es
mov
dec
jnp
sti
sub
inc
mov
das
ja
cmp
cwtl
lret
push
rorl
jecxz
xor
adc
mov
push
mov
jmp
pop
jo
cs
xchg
fidivrl
push
daa
mov
sbb
out
inc
jae
adc
dec
pop
scas
pop
ljmp
fiaddl
mov
add
cmp
scas
mov
mov
enter
mov
push
adc
jo
fwait
inc
cld
mov
xor
adc
mov
test
ds
movsl
repz
pop
lret
fisubs
mov
sbb
rolb
les
repnz
mov
sub
adc
fdivl
adc
outsb
ror
mov
jge
inc
movsl
insb
ret
cwtl
sub
adc
sub
adc
call
repnz
lret
daa
subb
adc
xlat
mov
sub
adc
push
sbb
or
pop
pop
and
sub
adc
dec
cmp
movsb
into
jmp
jns
subb
adc
dec
jae
pop
xor
lcall
sbb
negb
pushf
jb
adc
xchg
sub
adc
int3
pop
lock
repnz
movsb
rorb
push
and
xchg
outsb
ja
fistpll
sbb
test
or
clc
addb
and
test
mov
or
mov
movsl
sbb
adc
fcompl
sub
sub
adc
xchg
sub
adc
roll
mov
and
test
js
jae
pushf
sub
adc
or
jb
adc
push
ret
sti
repz
sub
adc
xlat
mov
or
sub
or
adc
inc
cwtl
clc
jae
movsb
xchg
movl
ds
gs
mov
adc
mov
xor
loope
out
push
sbb
mov
jo
adc
push
dec
adc
jbe
loopne
or
pushf
sub
adc
adc
movsl
push
test
sbb
sub
adc
push
cmp
inc
pop
fs
dec
imul
orb
mov
pop
cs
mov
inc
lret
mov
xor
lcall
sbb
dec
test
loope
ja
cltd
jnp
dec
fisubs
jo
movsb
mov
pop
jge
xor
pop
add
jge
and
push
out
dec
jae
xchg
push
pop
fbld
jo
adc
mov
popf
sbb
shld
cli
test
adc
aam
mov
imul
loop
adc
shrb
gs
aaa
pop
push
xor
js
enter
cwtl
inc
xlat
scas
xchg
sarl
and
test
aas
insl
or
push
jno
lods
inc
xor
sbb
push
add
inc
into
in
pop
xchg
jmp
sbb
adc
movsl
outsb
xor
mov
mov
decb
loopne
pushf
sbb
lcall
sbb
xchg
mov
xchg
dec
clc
lret
dec
inc
loopne
and
sbb
jle
scas
add
fimull
mov
lcall
rcr
mov
pop
cmp
inc
adc
dec
insl
cmp
dec
lods
inc
jl
push
mov
xorl
cmc
fidivrs
jp
xor
jae
cmpsl
and
f2xm1
cwtl
popl
lods
les
mov
lret
adc
out
popf
sbb
xchg
adc
xchg
inc
sbb
fistpl
push
setns
imul
rolb
mov
xchg
das
inc
xor
aas
xchg
fisttpl
and
bnd
shrb
push
xchg
stos
pop
add
add
or
pop
int
fnstsw
add
xchg
xchg
repnz
aaa
and
cmpb
cmp
in
push
or
mov
enter
jne
fwait
cmp
ror
ds
cmpsb
psraw
cmp
or
ret
push
gs
xor
jecxz
xlat
xor
mov
dec
and
movsb
inc
add
and
mov
inc
cmp
hlt
into
jmp
xchg
sbb
out
dec
test
mov
flds
ljmp
jl
jo
ret
pop
mov
loopne
cli
inc
add
xchg
jge
jno
cs
cmp
and
nop
jle
adc
stos
iret
rcrb
mov
or
lret
mov
jne
jno
ret
mov
hlt
add
shrl
dec
fildl
xor
inc
fldcw
aad
sti
xchg
roll
sbb
out
sub
adcb
es
xchg
mov
push
cmp
out
pushf
mov
sbb
mov
sub
inc
mov
adc
dec
imul
dec
out
and
das
adc
cmp
pop
add
outsl
mov
xchg
sarb
notl
jbe
xor
das
subl
ljmp
xchg
fwait
movsl
adc
dec
je
mov
test
std
cltd
fldcw
xor
sbb
int3
popa
test
arpl
jo
icebp
ret
adc
inc
jo
lcall
or
ret
sbb
pop
cmpb
mov
cmovae
les
rcrb
adc
push
jno
xor
lds
jecxz
jae
dec
dec
xlat
sti
lods
lret
mov
nop
jle
lods
pop
insl
lods
lods
cwtl
dec
outsb
ret
repz
jl
je
cs
cmp
jns
or
shrb
or
xor
pop
fdivp
cmp
aas
aam
sti
mov
mov
clc
and
and
pusha
test
or
in
fmull
and
sbb
enter
jb
pop
mov
pushf
out
xor
mov
xor
jno
sbb
mov
fdivp
and
cltd
mov
xor
nop
sub
adc
scas
and
sub
mov
and
lret
pop
pop
enter
mov
addr16
bound
adc
rcll
shll
xchg
xchg
xor
sub
xlat
js
dec
pop
and
sbb
inc
pop
inc
jg
sbb
sub
adc
mov
test
repnz
repnz
adc
stos
xor
add
sub
lock
popl
movsl
jg
inc
xor
or
and
andb
adc
sub
jg
scas
cmp
outsb
imul
mov
push
jle
pushf
sbb
fdivl
push
jmp
enter
int3
and
adc
mov
push
insb
outsl
mov
sub
pusha
cmp
jmp
arpl
aaa
sbbb
incl
or
xchg
mov
mov
mov
pop
and
and
mov
dec
mov
data16
push
shlb
cli
sbb
xchg
pusha
cmp
jmp
int3
add
loope
in
mov
je
xchg
stos
pusha
hlt
adc
imul
xchg
sbb
sbb
in
loop
pop
lret
shl
les
inc
lahf
scas
jno
mov
and
scas
or
adc
jl
xchg
enter
sbb
jle
or
inc
add
call
or
fiaddl
stos
js
sbb
popf
ja
cld
or
out
dec
jbe
cmp
push
mov
sbb
xchg
movsb
jge
hlt
das
inc
push
mov
jno
and
outsb
sub
rcll
and
dec
xchg
shl
or
add
fldcw
dec
lret
clc
xchg
ds
inc
out
sub
repz
mov
mov
in
int
xchg
imul
jge
adc
dec
lret
mov
filds
outsl
sbbb
add
shll
mov
aaa
xchg
cld
fcmove
xchg
fsubrl
insb
andl
imul
lret
ret
popa
ret
xchg
movsl
adc
pop
inc
pop
cmp
dec
leave
out
mov
jo
test
mov
insl
cmp
rcrl
dec
inc
cwtl
in
rol
sti
xchg
xor
fldt
or
or
mov
cmpsl
int3
imul
adc
dec
in
sub
adc
loop
subb
adc
fcmovbe
aad
movsl
lret
sub
add
pop
jb
adc
cmpsl
inc
sub
add
fwait
push
adc
cmp
pop
adc
xor
mov
pop
out
mov
jo
pusha
aam
adc
and
mov
sub
icebp
sub
roll
adc
sahf
jae
loopne
or
xchg
mov
mov
jae
movsb
popf
rol
fld
xchg
mov
imul
add
out
in
or
fnstcw
sti
or
insb
pusha
aam
adc
pop
jne,pn
shll
push
adc
int
es
sub
push
adc
std
sbb
push
popf
inc
push
aam
cmpsl
iret
jg
iret
xchg
sbb
xor
jns
inc
mov
sub
mov
std
add
orb
out
cmp
xor
hlt
adc
mov
cmp
xor
dec
rcrl
sub
sbb
push
lock
inc
dec
push
pop
xor
mov
pusha
aam
adc
hlt
adc
hlt
sbb
dec
popf
inc
aad
sar
xchg
fmuls
mov
xor
sub
adc
dec
aad
shr
xor
nop
cmp
jp
lret
jge
movsb
pop
xor
jl
ret
mov
fsubrs
xor
sarl
xchg
mov
mov
into
or
inc
insl
jmp
ret
push
jns
bnd
pop
push
adcb
sbb
cmp
push
negb
pop
iret
pop
adc
in
cmc
push
repz
mov
out
or
or
sbb
nop
int3
data16
and
mov
xchg
adc
hlt
xchg
inc
cmp
pop
adc
ss
xchg
popf
sbb
jmp
or
cltd
loopne
or
cmp
mov
cmp
pop
adc
in
or
pop
xor
stos
insl
cmc
fistpll
and
fisttps
adc
dec
pushf
jo
adc
cmpb
hlt
jo
adc
mov
nop
xchg
jnp
incb
adc
adc
inc
fisttpll
cmp
or
in
incb
adc
adc
and
adc
enter
adc
fimull
adc
loopne
or
dec
push
jb
adc
in
or
in
jb
adc
adc
add
or
aam
cwtl
add
and
adc
aam
arpl
roll
adc
lret
mull
js
push
dec
mov
pop
jb
andb
add
roll
adc
adc
inc
cmp
aaa
out
pusha
aam
adc
jno
adc
mov
fimuls
mov
scas
fistpll
rep
jo
sbb
mov
push
adc
je
mov
mov
div
mov
mov
cmp
repz
pop
mov
movsb
out
sbb
clc
andb
jne
push
sub
loop
push
loopne
sar
adc
aas
inc
jns
mov
stos
pushf
int
fs
pusha
cmp
fnstsw
arpl
mov
repz
test
xor
and
mov
sub
iret
adc
or
aaa
jg
fadds
mov
arpl
das
mov
ja
mov
sbb
popa
ret
repz
jg
and
sbb
shll
add
call
lock
aam
in
inc
imul
cmp
jnp
or
stos
inc
mov
mov
xchg
gs
pusha
sub
adc
fisttpl
inc
lods
sub
adc
sub
adc
cmpsb
jo
or
test
adc
fwait
pop
aam
or
fwait
lock
leave
in
in
xchg
out
sub
adc
adc
nopl
jnp
fsubl
jmp
int
mov
and
clc
mov
sub
loop
add
subb
arpl
xlat
leave
mov
mov
pcmpeqw
std
pop
outsl
lock
int3
enter
jg
mov
ljmp
jns
ss
push
jo
testb
adc
insl
cmp
jae
add
dec
fs
inc
and
loope
in
push
loop
sub
adc
or
int
cmp
pop
dec
mov
mov
inc
sub
adc
rcr
lds
call
or
in
inc
outsl
icebp
out
xor
mov
xor
push
jno
ret
sub
or
dec
pop
pop
in
loopne
fdivrs
rol
movsb
inc
mov
or
dec
popa
sub
adc
pop
mov
in
dec
subb
adc
leave
arpl
sub
adc
or
daa
inc
lods
inc
xchg
subb
adc
and
adc
inc
pusha
imul
jo
mov
popa
sub
adc
mov
addl
sub
lcall
sub
adc
fs
sub
adc
cmp
push
test
loopne
push
lock
gs
push
adc
ret
lods
xchg
into
or
cmp
ss
cmp
pop
insb
out
xorl
adc
fcoms
loopne
mov
mov
adc
inc
sub
adc
lea
push
iret
in
test
inc
jae
fcomps
mov
xor
pushf
nop
iret
or
mov
lods
push
pusha
lock
add
mov
push
mov
mov
inc
cmpsb
daa
cmp
roll
adc
in
aas
push
cmpsl
aad
pop
jecxz
jmp
cmpsb
test
jb
adc
ror
or
jmp
push
std
cmc
ret
xor
lahf
fs
sub
adc
shrb
sub
adc
inc
sub
adc
jo
das
imul
cwtl
or
gs
hlt
aam
inc
cmp
popa
movsb
mov
out
push
jmp
into
vshufps
scas
andl
adc
pop
and
xchg
daa
std
repz
roll
adc
jno
xchg
daa
push
push
lods
jbe
call
inc
arpl
inc
roll
adc
popa
sub
adc
inc
cmp
dec
sbb
pop
mov
cld
ret
add
jle
sub
adc
ret
dec
sub
adc
mov
push
push
mov
roll
adc
add
jo
or
pop
push
lret
inc
sub
adc
popa
sub
adc
xlat
adc
sbb
loope
add
lds
dec
cwtl
mov
adc
xor
cs
lret
subb
mov
cmp
inc
sub
adc
dec
sub
adc
addr16
fwait
dec
sub
adc
push
xchg
jo
or
gs
xchg
fwait
in
cli
lcall
dec
and
iret
mov
repz
movsl
and
xor
sub
adc
icebp
loop
mov
incb
adc
mov
sub
push
push
shll
xor
inc
push
dec
cli
repnz
pop
in
and
adc
leave
adc
fidivs
in
and
adc
jae
xor
insb
and
ret
fs
in
and
adc
xchg
int
fs
adc
fs
dec
jg
in
and
adc
shll
adc
add
aaa
sub
adc
enter
mov
inc
sub
adc
inc
mov
inc
jno
cmpsb
push
sbb
lea
shll
jmp
clc
icebp
push
pop
mov
clc
inc
jns
mov
or
cli
mov
or
push
dec
adc
adc
lret
mov
lret
xchg
mov
jo
or
push
push
rcrl
and
jno
mov
adc
aas
xlat
rcr
rcrl
stc
pop
je
shll
subb
adc
cs
stc
cwtl
add
inc
sub
adc
std
lds
cld
ljmp
iret
shl
jp
lcall
pop
dec
rol
push
sbb
pop
jb
repnz
outsl
mov
push
lods
pusha
sarb
or
popf
dec
arpl
les
cmp
adc
test
sub
movsb
pushf
push
rcr
push
mov
adc
cli
fdivrl
add
mov
pop
mov
in
orb
fwait
adc
xchg
pop
sub
mov
cmp
xlat
sub
stos
sbb
outsl
xor
sbb
lods
xorb
mov
fstl
or
xchg
lret
mov
rcll
xchg
or
adc
pop
sub
out
jg
fwait
xchg
js
dec
subl
mov
ret
and
adc
stos
fistps
mov
inc
xchg
add
add
adc
loope
repnz
loop
enter
lock
adc
push
pop
out
movsb
repnz
add
pop
add
mov
push
adc
pop
das
or
lahf
jbe
repnz
mov
or
inc
sbb
in
cmpsb
movsl
sbb
jg
leave
dec
insb
xor
stc
push
inc
outsl
adc
lock
cs
mov
lock
ret
push
mov
xchg
mov
ja
out
mov
dec
mul
loope
mov
push
hlt
mov
or
xor
jo
adc
xchg
xor
test
and
adc
adc
and
adc
ja
mov
pop
push
push
test
push
movsb
rcrb
inc
ds
out
cmp
add
adc
pop
gs
dec
shlb
in
xor
pop
cwtl
mov
movsl
clc
and
adc
or
ret
mov
push
xor
sub
mov
scas
mov
fcmovnb
dec
inc
and
adc
mov
mov
loopne
xor
and
adc
lea
and
adc
movsb
loopne
aas
repz
adc
mov
jae
jnp
xor
mov
and
adc
xchg
pop
xor
pop
lcall
xchg
test
pop
lea
xchg
or
cmp
in
int3
lcall
mov
or
lock
xchg
pop
or
insb
jl
inc
rcl
or
data16
sti
xchg
aas
mov
in
popa
mov
adc
jno
adc
xchg
xor
add
adc
adc
mov
xchg
inc
jb
adc
push
jne
call
lock
popf
jmp
adc
fidivs
pop
popf
dec
int
and
ror
fadds
pop
adc
xchg
lock
cld
xchg
inc
inc
and
adc
or
sub
inc
imul
aaa
push
out
pop
js
push
outsl
in
mov
loopne
xlat
push
xor
ror
xor
add
adc
xor
pushf
cmp
push
adc
jae
incl
adc
mov
xor
fcmove
xor
jb
into
adc
pop
dec
lds
jo
adc
fadds
stos
sub
push
adc
dec
dec
shlb
adc
mov
les
add
fnstcw
out
stos
pop
jns
mov
es
mov
sbbl
scas
mov
out
and
push
adc
mov
imul
mov
fcomp
and
sub
jae
int
scas
jg
test
and
pop
and
push
adc
add
mov
push
adc
mov
or
imul
inc
or
loop
shll
pop
mov
cmp
or
fs
in
incb
adc
loope
inc
xor
pushf
dec
push
mov
out
xchg
mov
test
outsb
gs
cmp
dec
sbb
sbb
lret
mov
aaa
lock
or
lret
push
dec
and
adc
dec
data16
mov
sub
dec
and
adc
xor
bswap
call
movsb
add
jno
adc
jl
rol
pop
dec
and
adc
jns
jno
adc
scas
call
les
int3
fsubl
push
dec
mov
mov
fdivrl
test
ss
push
mov
pop
mov
dec
and
orb
pop
inc
cmc
jno
out
test
call
mov
js
cmp
mov
rcll
mov
push
adc
xchg
add
leave
inc
fmull
lret
jo
scas
xchg
inc
adc
movsb
xlat
jne
inc
push
icebp
idivl
out
mov
xchg
fdivl
adc
jge
or
mov
adc
outsb
dec
fidivrs
jne
ffree
or
sahf
pop
xor
outsl
mov
out
adc
jmp
sarb
insb
cmc
mov
loopne
pop
adc
test
xchg
out
or
movsl
dec
cmp
jmp
cmp
sbb
pushf
repz
icebp
push
leave
pop
mov
sbb
stc
push
sti
cmc
push
sbb
aad
mov
hlt
push
enter
jbe
jbe
bound
xchg
pushw
test
or
imul
jg
fld
imul
adc
pslld
loopne
shll
lds
cmp
push
mov
mov
stos
fnsetpm(287
pop
nop
mov
shlb
std
and
sti
push
or
pop
or
fprem
mov
scas
cmpsb
addb
rclb
cmpsl
cmpb
flds
in
cmp
xchg
mov
mov
and
add
int
dec
push
sbb
popa
dec
nop
dec
push
test
cmc
movsb
sbb
in
popf
push
mul
loop
stos
mov
cmp
repz
mov
cwtl
sub
gs
test
sbb
xor
repz
xchg
jbe
xchg
sub
rcrb
push
outsl
mov
lds
clc
pop
mov
out
or
aam
nop
push
jnp
adc
icebp
or
fwait
lock
or
xor
mov
nop
ja
inc
rcrb
dec
jl
jo
nop
or
xor
daa
lret
xor
xchg
or
xchg
imul
and
jno
ret
mov
push
pop
data16
lcall
les
scas
fadds
pop
adc
aaa
fwait
jecxz
inc
add
pop
adc
pop
icebp
cltd
fbstp
fdivrs
jo
jae
xor
adc
sub
sbb
movsb
nop
ja
inc
shr
aad
xlat
push
fwait
cmp
jge
cmc
sbb
rcll
inc
clc
xor
adc
adc
adc
pop
mov
push
enter
lods
pop
out
cmp
call
icebp
out
ret
xchg
pop
sub
stos
or
mov
ret
xchg
insl
movsl
inc
mov
pushf
fs
xchg
sub
cmp
out
pushf
mov
sbb
xchg
jnp
dec
movsl
inc
mov
push
mov
cmc
int
xlat
cld
fucomi
jo
mov
popa
dec
ret
dec
int
xor
fadds
sbb
imul
push
fs
js
jo
or
stc
cmp
jecxz
or
mov
dec
xor
lret
adc
pushf
inc
lcall
add
push
nop
je
sub
xor
pop
jae
mov
mov
jp
iret
cmpsl
inc
mov
sbb
fsubr
dec
push
jnp
int3
sahf
mov
or
rcrb
sbb
mov
or
es
fsubrp
fdivs
add
cwtl
cmp
add
orl
or
dec
mov
sub
lea
pusha
aad
in
jle
push
mov
daa
ret
inc
mov
or
adc
jge
stos
mov
jae
sti
adc
add
movsb
in
adc
lods
mov
xor
adc
cmp
dec
and
pop
adc
xor
mov
xchg
xor
dec
inc
pop
xor
push
negb
inc
test
out
or
jae
and
mov
repnz
or
repnz
mov
jg
push
lods
out
xlat
call
jg
jmp
outsb
adc
xor
and
add
mov
out
ss
pop
iret
in
loope
inc
je
mov
mov
mov
or
rorl
inc
or
insl
cmpsb
icebp
pop
pop
stos
mov
out
dec
and
jns,pt
mov
out
sub
dec
mov
sbb
pop
movsl
aad
jg
xor
adc
rolb
adc
jae
aam
jmp
push
xchg
pop
ljmp
dec
stos
pusha
hlt
pop
dec
psubsw
mov
adcb
adc
das
imul
xchg
pop
add
jnp
mov
cmp
test
lea
cmp
add
outsb
aaa
xchg
roll
sbb
xor
jae
test
mov
ret
stos
sub
sub
inc
xchg
sub
call
xchg
dec
mov
xchg
or
je
xor
jns
adc
sbb
int
imul
repnz
mov
daa
push
xlat
jne
and
inc
inc
fdivl
sub
loop
test
shll
and
add
popa
inc
pop
add
jb
sub
sbb
loop
bound
adc
pop
mov
mov
inc
sbb
add
aas
faddp
cmovno
in
lea
mov
loope
sub
sbb
mov
popa
bound
rolb
adc
mov
jle
or
into
jmp
repnz
fidivrl
jmp
das
mov
xchg
ja
mov
cmpsl
sbb
inc
into
pushf
cmp
add
cs
jg
in
mov
data16
repz
repnz
rorb
jb
enter
cli
into
xchg
mov
int
out
cmc
inc
inc
add
inc
movsl
inc
adc
pop
mov
mov
gs
cmp
dec
mov
push
cwtl
iret
je
roll
adc
dec
cmp
out
inc
cli
into
sbb
mov
roll
adc
inc
jge
insb
loopne,pt
loop
or
pop
roll
adc
popa
std
stos
jnp
mov
iret
stc
movsb
mov
clc
repz
mov
xchg
cs
cmp
mov
cmp
out
xor
inc
les
mov
ret
xchg
inc
cmp
sub
xor
cmp
inc
pop
lock
testl
sbb
popa
add
xchg
xor
jl
adc
call
dec
jnp
adc
push
add
push
sbb
popa
inc
inc
jns
xchg
cmp
pop
adc
cld
iret
insb
mov
shll
inc
mov
insl
sbb
mov
pop
mov
cmc
and
lahf
cs
mov
jge
popa
add
mov
cmp
daa
pop
jb
iret
jmp
push
or
and
cmpsb
sbb
mov
bound
xor
lds
enter
ret
pushf
lds
jge
mov
mov
bound
sbb
jno
xchg
gs
test
repz
adc
pop
insb
les
stc
scas
jne
add
jge
jmp
cmpsl
inc
popa
stc
xor
stc
aaa
popa
iret
xchg
fcompl
cltd
cmp
xchg
aad
leave
pop
dec
ja
addr16
iret
stc
sti
int3
lcall
add
inc
mov
dec
insb
popf
xor
in
add
stos
push
inc
push
cld
cli
notl
jle
add
push
jb
xchg
inc
imul
or
jnp
push
sti
scas
jns
push
dec
mov
xchg
mov
push
negb
repnz
xlat
ja
roll
cld
call
icebp
push
arpl
push
xchg
pop
mov
in
movsl
cmp
mov
int3
cwtl
xchg
les
bnd
imul
ret
mov
sub
shrl
xchg
lcall
repz
push
cmp
inc
nop
pushf
stc
stos
cmp
xlat
mov
popa
fnstcw
js
sbb
xor
fbstp
insb
sti
icebp
out
notl
stos
jbe
rclb
and
in
mov
xchg
jmp
xor
xor
and
jmp
push
sbb
inc
add
lds
jb
imul
daa
jnp
cmc
loope
inc
xchg
cwtl
push
repnz
adc
mov
out
jno
pop
test
nop
mov
jnp
outsl
xor
push
fsubrl
ljmp
ss
mov
dec
shlb
fwait
inc
out
lods
mov
mov
jge
push
cmp
push
push
es
mov
fildl
jns
sbb
add
adc
movsb
insl
inc
daa
test
mov
jo
mov
jecxz
push
arpl
cld
les
cli
mov
adc
nop
mov
mov
jmp
dec
cwtl
cmp
or
pop
push
cmpsb
lea
xor
faddl
xlat
push
mov
xor
add
clc
push
popf
cmp
xchg
push
cmc
pop
add
and
or
test
add
adc
cmpsl
add
adc
test
adc
adc
add
xor
insb
ds
inc
dec
loope
xchg
fs
rcrb
cs
ret
dec
inc
mov
and
adc
clc
stos
ljmp
dec
xchg
jnp
popa
test
push
xor
add
adc
test
pop
adc
mov
orb
push
cmp
pop
and
in
xchg
pop
out
sbb
test
push
adc
adc
inc
mov
jbe
aad
dec
sbb
out
mov
and
sahf
sti
clc
out
push
dec
xchg
sub
scas
rcrb
xchg
ds
inc
xchg
sub
sti
icebp
or
cmp
ret
loopne
mov
mov
and
push
dec
xchg
and
lea
jle
popa
mov
bound
in
pop
sub
test
xor
jae
push
into
fldenv
pop
mov
int
cmp
lods
cmc
scas
pop
mov
mov
adc
and
xchg
jo
loop
and
push
hlt
mov
shl
mov
enter
add
adc
jle
fistps
js
inc
xor
push
mov
cmp
loop
inc
xchg
insb
inc
xlat
or
mov
lea
cmp
jbe
test
or
cli
ljmp
xchg
xchg
clc
ljmp
sbb
and
push
idivl
xchg
fildl
sub
ret
jo
add
adc
jmp
bound
out
std
mov
mov
cmp
das
andb
adc
adc
or
shl
pop
adc
push
add
rolb
adc
iret
lods
add
adc
outsl
ljmp
in
dec
and
in
mov
in
fsubrs
adc
dec
jno
imul
lock
mov
push
ds
js
mov
mov
and
ljmp
hlt
jns
xor
mov
and
or
int3
mov
iret
inc
insb
sub
cmc
jns
mov
adc
and
sbb
adc
je
out
sub
fs
pop
adc
cmp
aad
dec
sbbl
rolb
adc
mov
lods
push
adc
xchg
movsl
mov
mov
fucomip
xlat
int3
xor
lret
lea
pop
adc
cld
push
sub
mov
dec
mov
cmpsl
lods
sub
xchg
sbb
mov
jge
cmp
ja
sbb
and
adc
cmpl
lods
inc
insb
into
loope
mov
mov
adc
push
bound
adc
scas
and
adc
push
or
int3
pop
or
lods
in
rolb
adc
jge
add
xor
and
test
inc
inc
rolb
adc
adc
and
jge
rolb
adc
push
ss
rolb
adc
adc
notrack
mov
rolb
adc
or
cld
insb
popf
jno
jo
adc
and
adc
and
rolb
adc
ljmp
pop
adc
mov
fdivl
shr
cli
loopne
cmpsl
test
rolb
adc
dec
shlb
push
clc
or
xchg
cmpl
arpl
jns
rolb
adc
fptan
iret
hlt
fisubrl
bound
lret
into
aas
pop
lea
cmp
pop
jbe
stc
jae
jno
jne
fnclex
jg
in
inc
mov
mov
lods
mov
push
rolb
scas
bound
shl
imul
sbb
inc
rolb
adc
rolb
pop
and
loope
addl
sbb
jge
insb
sub
rcl
sub
rolb
adc
shlb
rcl
rolb
adc
jp
call
rolb
adc
or
in
or
lahf
mov
iret
outsb
daa
push
xchg
test
mov
adc
sbb
iret
xchg
pushf
xchg
stos
mov
es
mov
cmpsl
push
push
ljmp
or
ret
pop
mov
xor
pusha
aad
imul
inc
pop
stc
nop
jecxz
aaa
and
pop
adc
fisubrl
orb
ljmp
mov
out
add
pop
nopl
adcl
sbb
jb
call
stos
xchg
xor
jnp
out
loopne
dec
mov
icebp
mov
test
mov
mov
pop
jno
or
xchg
hlt
data16
stos
pop
pushf
out
sbb
add
ret
cli
jae
adc
jns
addb
sub
lret
jmp
xchg
mov
xorb
mov
fwait
sbbl
out
imul
xor
ljmp
roll
adc
cmp
xchg
pop
adc
and
repnz
clc
mov
popf
loop
fmuls
mov
gs
push
xchg
int3
mov
mov
cmp
dec
inc
pop
sub
in
rolb
adc
inc
jns
pop
adc
push
mov
mov
repnz
ja
popa
in
rolb
adc
sub
pop
adc
rolb
adc
loopne
pop
adc
pop
ss
rolb
adc
mov
xchg
pop
scas
and
int
xchg
in
rolb
adc
add
repz
gs
movsb
or
mov
in
rolb
adc
shr
rolb
adc
adc
dec
bound
add
rolb
adc
jle
pop
lret
repnz
daa
fcom
pop
adc
ljmp
add
dec
stos
popa
int3
jmp
ficoms
test
sub
int
add
cmpsb
push
and
push
or
stos
push
or
or
push
and
aas
xchg
add
or
mov
and
frstor
dec
pop
cmp
and
icebp
mov
add
xchg
sbb
mov
sbb
mov
or
and
cmp
aam
lods
and
adc
and
adc
sbb
lret
or
inc
das
jecxz
dec
push
mov
or
enter
push
and
adc
jnp
and
scas
and
adc
jmp
test
mov
or
mov
jp
mov
sub
and
popf
comiss
int3
adcl
xchg
mov
cmp
jns
mov
jl
pop
enter
out
mov
mov
sub
rolb
adc
rolb
adc
push
add
stos
outsb
push
ja
dec
sbb
add
pushf
out
in
push
jns
lock
or
aas
cmp
jne
mov
add
cmp
xchg
repz
xchg
lock
adc
jo
aad
push
jnp
movsl
es
fs
loopne
pop
adc
pop
add
rolb
adc
les
and
mov
add
adc
pop
mov
sbb
or
cmp
lcall
cld
andb
movsl
dec
sbb
or
lea
and
adc
add
push
and
cltd
popa
cmpsb
xchg
pop
setle
in
rcl
add
adc
test
lcall
insb
xchg
xchg
sarb
cmp
xchg
mull
sbb
popa
dec
ret
call
push
lods
jno
sub
xchg
or
sahf
pusha
arpl
xor
or
out
repz
push
mov
cs
es
in
xor
inc
repz
sbb
gs
insb
cs
mov
cmp
mov
repz
mov
popa
mov
cmp
mov
sub
fmuls
pop
and
arpl
mov
and
pop
push
mov
mov
xchg
cmpsb
stos
jne
rcll
jl
sbb
jno
mov
xlat
jle
mov
mov
les
leave
in
test
sbb
cld
inc
outsl
mov
push
into
push
icebp
ss
outsl
cmp
xor
aam
icebp
inc
icebp
xor
movsl
and
pop
enter
xchg
inc
jo
rolb
xchg
fidivs
or
lret
xchg
inc
push
jnp
mov
adc
out
leave
in
repz
sub
pop
pop
popf
cmp
cmp
fsubrl
ja
push
divb
xchg
sbb
stos
mov
jle
mov
adc
lcall
pop
out
mov
ret
pop
mov
xor
pusha
xlat
fldcw
loopne
fld
jno
ret
xchg
sbbb
jbe
xchg
outsb
aas
mov
lcall
dec
xor
mov
outsl
iret
mov
mov
sub
cwtl
ret
rolb
adc
pop
adc
inc
sub
js
or
jge
nop
dec
cltd
jp
pop
sbb
cs
fstpt
pop
jl
push
dec
jb
in
cwtl
sbb
lret
xadd
enter
cmp
sub
repz
aam
dec
es
push
dec
push
mov
out
mov
ret
loopne
xchg
cmp
jmp
cmp
int3
or
xchg
pop
into
push
cmc
xchg
nop
jne
sbb
and
cmc
inc
jle
sub
mov
inc
jmp
cmpsl
rcll
mov
pusha
imulb
gs
jne
mov
dec
mov
jne
adc
fwait
inc
adc
fstps
mov
shl
mov
lods
fmuls
add
sub
adc
nop
lret
and
ret
insb
jg
mov
or
cmp
test
add
imul
mov
leave
out
lcall
cmp
cmp
loop,pt
std
lret
push
push
sbb
or
in
ss
inc
and
js
mov
push
fisubrs
ja
testl
mov
in
insb
pop
mov
xor
add
or
sub
fucomp
xchg
jo
xor
les
je
pop
adc
inc
inc
adc
lods
ljmp
subb
push
int3
cmpl
les
cmp
sbb
push
push
or
jge
fbstp
xchg
mov
aad
inc
sub
fucomip
ret
mov
mov
movsb
faddl
scas
lea
fbstp
jle
xchg
clc
jae
test
loopne
push
adc
or
imul
and
fsubrp
outsb
subb
cld
or
ret
mov
sbb
mov
push
push
roll
add
imul
mov
or
cmp
in
ret
pop
mov
int3
in
stos
inc
loope
inc
mov
xchg
adc
frstor
cmp
ret
cmp
test
fidivs
fidivrs
mov
mov
pop
movsl
popf
push
enter
addr16
or
push
cs
ret
clc
sbb
xchg
ret
je
pop
adc
cmp
mov
aas
cmc
add
lcall
mov
cmp
mov
cld
jne
pop
in
int
or
test
pop
ss
jg
lret
rclb
adcl
mov
cltd
leave
cli
push
sbbb
pusha
rcrb
and
and
cwtl
imul
adc
call
cld
cmpsl
mov
fnstenv
xchg
js
cmc
lahf
cmp
pushf
xchg
insl
insl
dec
ret
fmuls
and
sbb
jecxz
lods
mov
or
clc
adc
mov
lock
ret
xchg
int
fistps
imul
sti
lods
aas
add
xor
dec
outsb
in
iret
test
roll
movsl
sbb
cmp
xchg
fdivrs
sbb
js
pop
movsb
mov
cmp
or
insb
jg
out
pop
push
pop
push
jnp
cld
ja
xchg
sub
mov
iret
es
inc
jae
mov
mov
jb
sbb
adc
or
pop
pusha
scas
out
iret
sahf
arpl
adc
enter
cli
notb
mov
iret
scas
popa
mov
dec
popf
fstp
inc
add
mov
push
mov
fistl
push
inc
inc
add
stc
sbb
mov
mov
cmpsb
sbb
mov
cld
movsl
push
test
mov
test
rorl
or
sbb
and
test
mov
jne
fincstp
stos
pop
xor
lods
sbbb
insl
inc
mov
mov
orb
repnz
jp
cli
cmp
pop
int
enter
sub
subb
lods
fimuls
xchg
inc
cmp
lods
pop
mov
mov
push
mov
fiadds
fmull
es
inc
adc
dec
outsl
cmp
lret
stos
push
mov
mov
xchg
inc
push
pop
push
sbb
mov
insb
les
dec
xchg
andb
add
mov
inc
lret
movsb
lar
and
lcall
inc
inc
arpl
repz
pop
lock
jne
sub
push
sub
push
xchg
xchg
orl
cmp
cwtl
movsl
filds
mov
jb
in
andl
nop
dec
xorb
jnp
lcall
jg
sarb
cmp
nop
lea
jbe
mov
enter
pop
jbe
jmp
pop
jns
pop
mov
iret
push
decb
pop
call
pop
adc
call
call
fsubrp
lds
jge
aaa
or
fwait
popa
sti
data16
adc
ret
fnstsw
pop
and
mov
cmp
add
adc
adc
ss
clc
add
adc
push
hlt
jo
adc
lock
push
adc
sbb
xchg
daa
dec
mov
clc
jnp
mov
lock
sbb
fwait
mov
cwtl
and
or
fmuls
aad
jmp
cmp
pop
clc
mov
popf
xor
jns
mov
lahf
sbb
pop
cmpsl
mov
cmp
mov
out
nop
and
sub
jo
mov
rcrl
clc
sub
mov
push
push
ja
sar
test
insb
in
lcall
inc
lock
lock
mov
sub
adc
xor
sti
test
sbb
into
pushf
mov
dec
rolb
shlb
mov
push
movsl
inc
mov
inc
lahf
stc
xchg
jecxz
ret
sbb
add
mov
test
rolb
xchg
lods
cwtl
test
into
xor
inc
mov
call
xor
inc
sub
sbb
in
mov
cmpsl
and
cmp
mov
and
shrl
add
dec
icebp
clc
or
movsl
or
sub
popa
cmp
insb
pop
mov
icebp
dec
xchg
dec
out
cmc
dec
ljmp
dec
mov
insb
xchg
and
xchg
and
fistl
push
push
xor
in
jo
adc
call
xchg
add
add
mov
rolb
daa
sub
and
jo
adc
add
imull
or
xor
pop
push
shll
imul
lods
add
loop
mov
fsubs
lock
test
call
cmp
jbe
or
cs
jo
adc
add
pop
xchg
ja
inc
ljmp
arpl
xchg
lahf
dec
cs
shlb
sahf
cmp
out
mov
pop
stc
pop
call
loope
pop
ss
dec
jo
adc
fs
sahf
cmp
or
xor
jg
int
mov
pop
lock
dec
cltd
fs
arpl
inc
lea
outsb
mov
repnz
mov
jno
mov
cmc
and
pop
adc
jge
mov
test
or
divl
repz
xor
daa
or
mov
pusha
and
or
sub
jle
add
notb
ficoms
adc
lret
andb
cltd
enter
inc
shll
jmp
fcmovnb
mov
push
mov
adc
out
cmp
xlat
mov
imul
cmp
stos
ljmp
fld
hlt
lret
cmp
lods
inc
mov
lods
ljmp
inc
push
fstps
jmp
aad
sub
ret
aam
faddl
inc
out
int3
add
cltd
int
roll
xchg
or
fadds
sahf
cmpsb
inc
mov
pop
rclb
adc
je
popf
imul
inc
les
adc
mov
push
adc
fcmovu
push
js
out
call
imul
lods
movsl
inc
daa
or
prefetchnta
mov
xchg
add
cmp
mov
xor
je
xor
cmpsl
jbe
test
add
adc
int3
ret
sti
jno
fcompl
cmp
or
lock
mov
daa
or
in
xchg
push
out
negl
rcrb
shrl
jmp
dec
les
imul
stos
jmp
sub
pop
outsb
loope
rcr
iret
push
cmp
addr16
aas
xchg
in
in
push
adc
xlat
lea
cwtl
adc
add
and
aam
iret
mov
mov
pop
jns
push
inc
sarl
mov
fsubs
sub
aam
shll
xor
jl
dec
pusha
loopne
shll
dec
fs
cmpsb
popa
sub
sbb
pop
aam
and
adc
push
imul
fsubrl
mov
dec
and
test
fwait
cmp
lock
stos
fnsave
jb
movsl
or
dec
sbb
sbb
into
or
push
mov
shll
xchg
cs
arpl
cmp
jge
in
or
xor
outsb
adc
cltd
pop
inc
icebp
jl
pop
pushf
cmp
sahf
jnp
cwtl
mov
call
sbb
popa
ret
add
lret
xchg
cs
xchg
mov
ret
xchg
sahf
repz
inc
mov
icebp
and
mov
and
xchg
sbb
hlt
hlt
call
mov
mov
inc
pop
rcrb
cmp
add
inc
outsl
add
xlat
pusha
jp
lock
pop
lds
jb
lret
jl
gs
xchg
ficompl
mov
ret
xchg
pushf
fmull
scas
and
mov
aas
lret
fnstcw
rcl
pop
mov
cmp
loope
insb
add
cmp
mov
or
icebp
push
mov
mov
pushf
cmp
push
mov
movsl
sarl
or
cld
addr16
cmp
or
dec
testl
leave
sub
test
sbb
insb
add
roll
pop
adc
cmp
or
lock
cmp
push
nop
outsl
cltd
clc
popa
cmpsl
sub
rol
cmp
adc
dec
inc
push
sbb
or
pop
sbb
pop
add
pop
out
jb
dec
loop
filds
cltd
fstps
fs
rorl
dec
or
pop
mov
inc
adc
sbb
les
push
cwtl
je
jmp
cmp
push
mov
sub
out
jo
inc
repnz
fisttpl
shll
add
inc
call
sbb
mov
adc
sub
adc
fwait
add
adc
jne
adc
arpl
fstl
lock
mov
bound
clc
cwtl
shlb
jp
mov
cs
mov
sub
ret
test
xchg
sub
adc
test
lods
mov
aaa
movb
sbb
ljmp
inc
fmul
xchg
rorl
mov
test
jecxz
es
ljmp
cltd
xchg
popf
imulb
addr16
hlt
or
iret
scas
jmp
mov
add
xchg
cmp
out
xchg
sub
jmp
es
sbb
sub
mov
cltd
fwait
pop
stos
shll
push
mov
mov
mov
fisubrs
mov
push
ror
das
gs
or
push
shr
mov
dec
enter
push
xchg
fs
sti
rolb
sbb
sahf
mov
popf
sub
data16
sub
cmp
imul
call
add
scas
fstpt
cmp
cli
push
andl
or
xchg
mov
jne
int3
rcrb
and
outsl
inc
cltd
fcom
icebp
cmp
dec
mov
inc
adc
rcll
mov
inc
xchg
aam
stos
pusha
hlt
pop
inc
cs
stc
filds
popa
ja
mov
jo
vcvtsi2ss
movsb
stc
pop
sahf
sti
jg
popa
and
pop
iret
or
nop
mov
add
xchg
sub
in
mov
mov
into
shl
inc
test
ficomps
or
imul
daa
or
lock
mov
lea
movl
jne
lds
repnz
jge
adc
push
xchg
testb
test
mov
or
das
xor
jge
and
sbb
mov
add
shll
jo
fnstcw
out
sbb
and
stc
jecxz
or
cmp
in
cmp
adc
add
xchg
sbb
push
out
and
sbb
ret
xchg
push
inc
pop
dec
loope
in
testl
or
xlat
mov
cli
test
xor
inc
jp
js
loope
je
cmp
xlat
sbb
std
inc
loop
shrl
clc
loop
addb
mov
and
xor
mov
mov
into
movl
adc
jg
or
data16
pop
or
stc
sbb
pop
cmp
ret
xchg
and
lods
pushf
fwait
enter
sub
xor
jg
inc
mov
clc
ret
xchg
jg
arpl
mov
push
movl
lret
xchg
stos
pushf
int
addr16
xchg
dec
jnp
add
dec
sub
dec
dec
pop
pop
mov
cmp
out
mov
das
cmc
pop
mov
icebp
dec
lret
mov
int
or
popf
fwait
gs
xchg
adc
js
int
xor
sbb
mov
cwtl
xchg
jne
addl
adc
dec
sarb
pop
push
sub
mov
push
push
xchg
sbb
leave
inc
add
xor
repz
jo
adc
daa
mov
jo
adc
fidivs
les
sub
sub
inc
dec
in
mov
dec
mov
stc
cwtl
sbb
jns
insb
aaa
mov
shll
xor
js
sub
in
fidivrs
rorb
fidivrl
push
cmp
sbb
arpl
pusha
push
jno
sub
das
xor
lods
push
adc
cmp
sbb
aad
ret
sub
in
add
pop
adc
xlat
in
call
cmp
or
pop
xor
dec
inc
daa
or
mov
imul
por
lret
xchg
pop
add
lahf
mov
cwtl
cmp
data16
xchg
add
jo
push
stos
xor
xchg
jmp
sbb
lret
sahf
loop
sti
imul
ret
int
popf
or
sub
pop
sar
in
in
cmpsl
cld
aad
adc
adc
pop
lahf
mov
pushf
push
ret
xchg
stos
cmp
sub
mov
cmp
dec
add
popf
mov
gs
or
cmc
lock
fwait
add
ja
adcb
mov
shll
gs
je
sarl
gs
push
adc
lods
xchg
data16
jmp
ljmp
fisubrs
imull
mov
adc
push
jmp
mov
mov
pop
inc
daa
or
push
xchg
leave
imul
mov
add
push
cmp
hlt
cmp
pop
adc
add
daa
or
pop
in
insb
rorl
jo
mov
adc
pop
add
scas
mov
sub
xchg
add
dec
cwtl
mov
dec
icebp
rep
mov
fidivs
popf
rcrb
in
cmpsb
ss
xchg
xchg
andb
mov
pop
in
sbb
or
mov
shrl
mov
leave
popf
push
xlat
push
inc
loopne
mov
mov
cmp
sti
push
mov
sti
jge,pn
mov
ret
mov
rclb
cmp
jmp
pushf
int
sub
cmp
mov
sub
lods
sbb
jnp
mov
call
cmpsl
gs
mov
add
xlat
xor
out
and
int
gs
push
test
xchg
xchg
icebp
enter
cmp
call
pusha
sti
test
repz
xor
mov
push
pop
sarb
pushl
mov
cltd
adc
out
aaa
dec
movsl
out
js
je
lods
cmc
mov
fdivrs
push
sbb
lahf
mov
stos
arpl
sub
test
mov
arpl
std
test
or
push
lret
cwtl
lods
aas
mov
add
les
fcoms
sbb
sbb
pop
clc
inc
add
xchg
cmp
jae
test
stc
jg
stc
xchg
sbb
lods
les
jbe
sbb
add
push
and
fwait
jb
into
cli
add
sbb
cmp
stos
inc
mov
mov
xor
stos
pop
push
mov
sbb
pop
lret
jnp
mov
push
push
inc
mov
push
pop
xor
lret
xchg
xchg
cmp
stc
jg
sbb
cwtl
fldt
jp
push
sbb
add
push
and
jnp
out
cli
add
mov
mov
inc
mov
mov
xor
stos
pop
push
mov
jge
pushf
cmp
xchg
xchg
jnp
mov
push
xor
sbb
mov
add
xchg
mov
cmpsl
stc
add
dec
push
push
mov
inc
mov
mov
inc
push
mov
out
cmpsl
stc
add
dec
es
add
mov
call
popf
jmp
js
fsubr
mov
xor
shll
push
movsl
mov
jb
cmp
fmull
out
sbb
fsubrl
nop
jl
mov
xchg
or
fstps
shrl
pop
mov
daa
in
sti
repz
pop
xchg
and
jb
inc
pop
movsb
push
jo
xor
xchg
ljmp
pop
adc
bound
int
lds
dec
out
or
jmp
in
jns
jb
inc
inc
adc
clc
add
out
test
enter
cmp
cmpxchg
xchg
jle
push
cmp
loope
into
pop
adc
mov
xor
mov
sub
pop
mov
mov
popa
andl
pop
adc
sahf
or
cli
push
outsb
movsl
cmpl
xor
sub
add
adc
pop
mov
pop
stc
idivb
daa
or
jmp
push
inc
pop
sub
ret
scas
inc
daa
or
repnz
add
lcall
cmp
int3
cld
inc
push
add
aam
jne
in
fwait
add
mov
mov
stos
out
or
jno
adc
test
cmp
push
adc
icebp
repnz
pop
mov
jmp
dec
rcrl
fldcw
xchg
inc
data16
sarl
fidivrs
ficoml
and
pop
jae
mov
jle
mov
dec
ss
push
vandnps
orl
aam
bnd
nop
and
js
aad
adc
inc
inc
push
fucomp
xchg
jo
cmp
mov
dec
mov
js
inc
daa
or
mov
punpckhdq
cmc
push
add
orl
cmc
pop
inc
or
adc
adc
adc
imul
test
dec
enter
mov
jnp
xchg
sbb
adc
cld
cmc
xor
aad
daa
adc
mov
jae
xor
cmp
or
je
sbb
fs
ds
mov
sub
cld
in
pop
inc
daa
or
scas
aam
daa
jne
pop
xor
pop
idivl
daa
or
mov
fdivr
mov
call
aaa
dec
pop
and
dec
pushf
mov
add
xchg
mov
pop
add
adc
pop
jle
daa
or
mov
cmp
or
mov
pushf
int
mov
clc
out
movl
push
xchg
pop
jo
adc
pop
pusha
xor
outsl
insb
movl
pop
inc
daa
or
mov
cmp
sub
cld
jae
mov
daa
add
mov
cmp
insl
dec
rorl
dec
mov
inc
out
sbb
inc
daa
or
pop
cmpsl
popf
add
loop
jns
jbe
mov
int3
jns
cmp
sarl
or
fs
mov
fwait
lock
xchg
jns
cmp
adc
filds
xchg
icebp
lret
gs
jo
adc
pop
inc
mov
mov
rorl
insb
xor
test
pop
int
cmp
scas
popl
fisubs
jbe
xchg
rcrl
mov
in
dec
sarb
or
pop
inc
sbb
dec
add
sahf
cmp
cmp
daa
or
push
adc
pop
addr16
stc
and
adc
sub
pop
push
imul
rolb
lds
jo
adc
push
mov
out
mov
pop
mov
in
push
sahf
cld
jo
das
inc
sub
adc
fmul
jae
or
push
popa
mov
arpl
xor
adc
pop
adc
loop
jp
xchg
ja
inc
xchg
stos
pushf
int
sbb
ja
inc
and
mull
cld
xor
push
outsb
sbb
lcall
pop
adc
push
cmp
dec
stc
sub
pop
adc
cmp
es
adc
das
fwait
push
cwtl
lret
mov
jmp
cmpl
dec
mov
pusha
or
in
sbb
shll
mov
minps
std
lahf
adc
pop
push
mov
sub
pop
neg
mov
add
push
test
dec
fistl
mov
or
or
orb
pop
xor
sub
xchg
jo
inc
fmull
stos
ljmp
loopne,pn
sub
adc
pushf
push
mov
pop
push
inc
sub
dec
ds
sub
adc
mov
sarl
aad
and
adc
fwait
scas
push
out
jg
loopne
std
mov
shlb
xlat
jge
lret
cs
dec
sub
mov
xor
adc
mov
pop
adc
addr16
adc
dec
mov
cld
int
leave
inc
mov
dec
xor
ret
cmp
cmp
adc
inc
aad
sub
and
jne
xlat
jle
dec
fsubrl
cltd
lcall
inc
popf
ror
popf
and
mov
sub
adc
cmp
roll
aam
sub
adc
xchg
or
cmp
jl
scas
mov
lods
movsb
aad
or
mov
pop
je
xchg
mov
hlt
cmp
xchg
les
and
in
loope
rcr
mov
cmp
or
leave
pop
push
and
outsb
outsl
int
inc
daa
or
adc
xchg
push
dec
in
jl
dec
jne
addr16
dec
and
fnsave
or
xlat
xchg
imul
mov
jg
mov
hlt
sbb
lret
add
fldenv
add
roll
jo
adc
gs
xor
xchg
and
or
scas
cld
mov
pop
sbb
pop
pop
xchg
inc
out
cmp
push
mov
cmp
or
add
iret
movsb
std
cmp
or
aas
jmp
lods
jo
inc
push
mov
mov
in
jecxz
ret
jo
or
cmc
sbb
rolb
repnz
inc
jbe
std
fidivl
ja
and
jo
adc
lds
insl
sbb
xchg
sbb
jmp
into
je
push
push
cmp
cs
std
test
pop
adc
clc
cmpl
or
mov
xchg
clc
pcmpgtw
daa
or
stc
in
adc
inc
or
repnz
cmpsb
and
push
mov
pushf
cmp
mov
push
call
jb
or
add
adc
popf
test
xlat
les
add
jne
add
out
add
lret
inc
daa
or
dec
mov
sub
pop
xchg
lahf
pop
sbb
aas
mov
fs
stc
lret
out
sbb
in
test
lret
xchg
ja
cmp
xchg
fcomip
std
movsb
xor
out
jno
pop
mov
jne
repz
test
and
and
fs
add
mov
insl
inc
daa
or
xchg
je
iret
repz
jo
adc
andb
push
fs
shrb
dec
cs
pop
dec
xchg
je
or
or
xlat
mov
inc
daa
or
std
in
or
ss
les
xlat
out
rolb
pop
adc
mov
stos
sub
jnp
cli
and
sub
daa
mov
xor
enter
int
xchg
movsb
rcl
les
mov
cmp
push
inc
daa
or
in
mov
push
pop
mov
daa
or
in
orl
add
sbb
daa
movl
icebp
sbb
es
push
lcall
rcrb
or
or
mov
stos
jb
xchg
les
xchg
jle
mov
in
cmp
icebp
repnz
addr16
xchg
rcrl
mov
mov
jecxz
or
imul
ljmp
leave
je
jo
adc
mov
and
ret
mov
dec
xchg
dec
nop
xchg
inc
adc
out
xor
or
out
mov
jmp
or
pop
call
enter
loop
cmp
jp
pop
xchg
loope,pn
dec
leave
push
es
lock
ret
cs
xchg
jg
repnz
and
test
daa
or
mov
ret
jmp
daa
or
jbe
cli
mov
mov
js
push
dec
xchg
pop
lret
xchg
test
mov
cld
adc
dec
sbbb
std
pusha
sub
xchg
cwtl
ret
xlat
pop
addr16
sti
pop
add
push
inc
push
sbb
or
add
adc
lea
sbb
lock
push
and
jae
inc
xor
testb
mov
mov
adc
rcll
or
jne
lods
push
xorb
fwait
add
jge
and
sub
ficomps
and
into
cmp
xlat
daa
scas
xchg
jo
movsl
xor
cmp
and
push
shr
push
push
std
jmp
mov
je
test
or
jb
adc
cwtl
jno
pushf
mov
imul
dec
mov
xchg
add
mov
inc
push
jo
or
lahf
add
xchg
cmp
fisubs
or
lcall
jecxz
test
mov
sbbl
in
fnstcw
sub
sub
js
push
adc
fsub
shl
test
mov
call
lods
and
mov
mov
adcb
repnz
pop
or
out
imul
push
loop
aam
sbb
jmp
pop
jecxz
adc
jecxz
sub
test
sbb
aad
out
test
lret
sbb
xchg
jecxz
sbb
push
adc
or
xor
aad
out
test
lret
jg
mov
jb
adc
cwtl
mov
pushf
cltd
popa
ret
xchg
xchg
lods
mov
arpl
stc
test
or
xchg
inc
mov
lsl
xchg
stc
fst
mov
pop
jne
push
dec
repnz
roll
xchg
out
cmp
aaa
loop
or
mov
movl
movsb
stos
mov
adc
int3
insl
jnp
mov
xchg
adc
mov
arpl
jns
mov
setnp
js
cs
mov
lds
add
add
xchg
sub
out
inc
cmp
je
push
adc
repnz
clc
lcall
shl
or
mov
mov
sahf
mov
in
jno
xor
movsl
sbb
orb
xchg
cmp
cmp
icebp
sbb
and
adc
inc
pushf
sbb
mov
movsl
xchg
sbb
js
cli
cmpsb
call
je
shll
insl
or
mov
inc
mov
jns
bound
mov
pop
dec
lds
arpl
xchg
or
mov
test
mov
sbb
pushf
sti
out
adc
jae
xor
adc
ret
xchg
cwtl
loope
xchg
mov
add
or
adc
daa
stos
cmp
dec
addb
push
das
into
jno
sbb
inc
dec
movsb
xchg
jns
jecxz
andl
sbb
add
pinsrw
adc
adc
sbb
mov
xchg
jge
and
popa
add
push
adc
popa
dec
pop
push
mov
leave
fwait
xor
movl
test
cmp
mov
fdivrp
jle
push
loopne
pop
movsl
addr16
jge
add
clc
pop
push
out
lods
imul
adc
xor
xor
pop
into
into
fs
andb
popa
cs
sub
mov
mov
ret
or
or
dec
movsl
mov
fdivs
and
push
mov
in
mov
iret
shll
push
mov
cli
push
or
jmp
pop
mov
repz
sbb
adc
mov
insl
push
repz
out
and
xchg
push
in
xor
test
pop
int
adc
cmp
out
ror
sub
lods
or
lahf
sub
ds
mov
or
mov
xchg
insl
cmc
fistps
xor
jne
pop
popf
cmovs
mov
mov
int3
xor
int
push
jnp
mov
xor
push
mov
stc
push
mov
and
clc
je
js
xchg
jle
popf
mov
pusha
or
push
arpl
pop
or
cmp
sti
or
fcomps
out
rep
sub
adc
xchg
xor
or
adc
add
sub
lock
mov
cmp
sub
getsec
ss
iret
mov
xchg
xor
les
dec
mov
adc
test
add
sbb
sub
mov
or
xchg
dec
arpl
movsb
xchg
lock
lods
clc
enter
dec
push
pop
adc
mov
scas
fcompl
mov
cmc
mov
mov
or
xchg
pop
fcomps
and
sbb
popa
dec
ret
call
push
lfs
mov
idivb
fisttpl
ljmp
inc
loop
xlat
les
das
mov
into
push
xchg
sbb
or
movsb
xor
add
lret
cs
cmp
and
gs
insl
cmp
sub
repz
pop
push
add
push
sbb
inc
sub
adc
pop
in
push
pop
adc
pop
int
clc
popa
pop
imul
movsb
daa
xlat
cmp
in
testb
dec
iret
je
jno
adc
popa
push
and
hlt
xorb
mov
orl
les
adc
mov
rcrl
jo
ret
mov
call
sbb
in
xchg
mov
mov
xchg
cltd
andb
adc
cs
push
jae
cmp
add
or
sub
int3
movl
sub
cmp
outsb
inc
cmp
xor
scas
imul
movsl
dec
insb
or
and
mov
scas
pop
in
mov
sbb
mov
rol
into
pop
stc
decl
out
push
xor
out
mov
stos
stos
int3
fs
sahf
rolb
adc
mov
insl
daa
xlat
and
shlb
xchg
fs
out
jmp
jo
adc
xor
mov
or
jno
adc
cs
dec
ja
sub
xor
lds
jecxz
insb
jl
pop
js
mov
adc
paddd
dec
ja
incl
add
mov
ds
or
lock
sbb
cmpsb
sahf
mov
pause
jp
adc
add
inc
mov
jmp
mov
enter
mov
add
cmp
add
gs
jno
adc
jmp
push
clc
fsts
popa
jle
ja
mov
jge
cmp
xor
inc
cld
sarb
or
pop
jne
aam
pushf
enter
mov
and
adc
and
movsl
and
pop
addr16
ret
imul
cmp
jle
adc
out
mov
mov
loopne
xor
outsb
adc
or
xor
out
aaa
cmp
or
rolb
mov
sub
incb
out
mov
jecxz
outsb
pop
decl
and
out
shl
pusha
mov
sub
adc
or
aam
and
adc
outsb
and
sbb
jbe
gs
test
pop
lods
mov
mov
mov
in
dec
cmp
mov
pusha
mov
and
outsb
adc
movsl
mov
or
js
mov
loop
xor
push
das
xchg
test
xchg
outsl
out
int3
jmp
mov
enter
mov
xchg
dec
mov
cld
sarl
imulb
push
jbe
sub
adc
les
or
xchg
jecxz
mov
sbb
andb
and
insl
imul
cmp
leave
push
iret
jge
xor
outsb
jle
pop
push
mov
adc
mov
mov
mov
adc
jns
mov
test
mov
outsl
add
out
pop
xchg
decl
loopne
test
dec
in
aas
fisubrl
gs
test
lods
in
es
out
call
fadd
xchg
push
pop
int3
clc
xchg
ljmp
pop
arpl
into
mov
mov
call
push
les
push
cltd
lret
inc
mov
pop
fisttps
dec
pop
fs
pop
adc
or
xor
lds
add
lcall
or
xchg
mov
or
jo
shl
mov
sub
repz
loopne
jecxz
lcall
sub
loop
ljmp
sbb
inc
imul
or
or
add
cmp
xchg
pop
gs
cmpsl
pop
and
jg
pop
or
jo
mov
mov
or
mov
mov
adc
dec
scas
xlat
popa
push
in
inc
mov
sbb
ret
pop
pusha
scas
mov
iret
sahf
dec
repz
ja
or
pop
jg
emms
ffree
lret
mov
repz
xchg
ds
pushf
sbb
xor
inc
inc
cltd
or
or
pop
add
adc
fldcw
nop
pop
in
or
or
and
jb
adc
mov
pop
lcall
jmp
cltd
pusha
or
xchg
sbb
mov
jo
adc
cmp
jns
mov
or
cwtl
loop
pusha
or
inc
jg
push
stos
mov
xor
jne
or
push
pop
push
mov
dec
mov
push
loope
add
js
push
adc
nop
lods
lret
popf
mov
js
ljmp
push
mov
add
mov
dec
ret
inc
inc
cwtl
les
inc
pop
ret
ljmp
into
push
mov
and
lahf
fwait
push
push
cmp
out
xchg
mov
or
lods
jb
adc
and
xor
dec
jge
adc
inc
mov
xchg
test
push
adc
pop
lods
iret
sbb
fcmovnu
lock
outsb
lahf
and
das
pop
dec
loop
ljmp
shlb
nop
imul
cmpsb
sbb
cmp
push
adc
lds
jae
gs
bound
mov
int3
negb
jbe
in
pop
adc
inc
es
pop
dec
es
out
dec
scas
xlat
jge
jmp
mov
sub
loop
adc
jae
aaa
ret
inc
ret
jmp
xchg
or
arpl
gs
pop
dec
sahf
jmp
das
std
rol
jno
mov
and
test
movsl
or
inc
push
jno
in
mov
cli
fstl
add
mov
stos
pop
jo
or
fcom
pop
adc
pop
adc
push
cld
dec
outsb
push
icebp
repz
sub
aam
adc
adc
movsl
or
inc
jp
sbb
out
push
loopne
rcll
sbb
push
and
js
ja
sbbb
jo
out
enter
jp
pop
js
shrb
xor
test
dec
arpl
test
es
jbe
add
xchg
icebp
js
cmp
pop
jnp
sub
fsubl
jmp
jp
mov
push
lret
ja
ret
lea
jo
ja
scas
xchg
jo
pop
jno
mov
mov
xorb
not
adc
andl
call
jg
jp
leave
movsl
jge
mov
push
adc
or
out
xor
jmp
cmp
enter
and
xchg
xchg
pop
push
sahf
sub
and
bound
sub
enter
jge
add
mov
jns
cmc
pop
outsl
cmp
pop
adc
adc
push
push
mov
aam
adc
jbe
dec
sbb
push
insb
and
adc
inc
cmc
addr16
jl
mov
or
jo
or
das
push
cmp
mov
push
adc
mov
xor
ret
mov
in
pop
adc
pop
mov
push
adc
push
nop
jg
subb
push
adc
cmpsl
mov
inc
imul
pop
movsl
fwait
jmp
xor
mov
das
orl
cmp
dec
cltd
mov
lock
sub
incl
adc
or
mov
xchg
lret
sahf
jne
aam
adc
adc
sbb
push
lahf
and
bound
test
fimull
jae
in
or
or
adc
xchg
fcom
mov
rol
push
adc
mov
pop
mov
pop
adc
arpl
xor
inc
dec
cltd
jb
cmpsb
in
incb
adc
je
adc
mov
sbb
jge
aam
adc
push
lcall
les
jb
adc
in
jo
adc
outsb
jecxz
mov
pushf
cmp
repnz
icebp
loop
sub
sbb
test
daa
insb
and
adc
das
sub
dec
jo
or
sbb
push
subb
lahf
cmp
lods
fs
adc
add
hlt
jo
ret
outsl
pop
jecxz
mov
fsubrl
lock
int
imul
cmp
loope
js
adc
pop
push
push
inc
jns
mov
xor
and
cld
xchg
push
lcall
cs
dec
jb
or
or
adc
mov
lock
jge
sarb
jae
mov
push
pop
out
push
add
fdivrl
push
mov
xchg
into
popf
cmp
lods
adc
pop
xchg
push
fs
adc
loope
jae
xor
rcrl
imul
mov
call
pop
dec
sbb
jne
inc
jnp
push
adc
xchg
ret
add
das
mov
addr16
lock
imul
sub
mov
jo
jecxz
fwait
xlat
pushl
xchg
jo
adc
fucomp
ret
movsl
int3
xchg
jbe
cli
fnsave
adc
or
sbb
out
mov
lods
or
mov
mov
jbe
cli
shrl
xchg
test
jo
gs
cmp
test
or
mov
push
scas
insl
mov
into
mov
inc
pop
adc
cmp
xor
rcll
lea
gs
jne
je
push
adc
bound
lcall
push
xchg
cltd
push
and
push
or
dec
js
push
adc
pop
adc
hlt
jge
dec
jl
pop
lods
les
lea
jo
adc
jnp
jecxz
cwtl
int3
jg
std
xchg
add
popf
or
loop
xlat
lahf
add
bound
adc
enter
add
dec
mov
cmp
pop
ret
jmp
enter
jecxz
xorl
push
jle
push
int3
jecxz
inc
sub
movsb
cs
xor
inc
lahf
jbe
std
pop
inc
repz
ds
add
inc
inc
lock
xchg
shll
sbb
divl
mov
test
and
lods
mov
push
clc
lock
push
call
shr
lret
fstps
out
repnz
iret
lods
pop
js
xorb
and
adc
add
fildl
repz
daa
test
repnz
aam
mov
push
dec
or
push
sbb
mov
jno
sbb
push
ror
mov
dec
pop
push
test
sbb
jnp
rol
cmpsb
dec
cmpb
int
out
pop
add
xchg
lret
gs
xchg
leave
lret
rolb
sahf
repnz
pop
sbb
inc
fadds
jns
shl
xor
sbb
xor
mov
sarb
addr16
or
repz
popa
je
or
and
mov
sub
sub
es
scas
mov
xchg
sub
mov
or
sub
xor
mov
nop
or
in
int
hlt
outsl
jns
insb
xor
sbb
push
test
adc
xchg
popa
dec
mov
or
pop
adc
mov
mov
or
sbb
add
and
adc
movsl
xchg
test
push
adc
pushf
jo
adc
pop
dec
shll
pop
adc
hlt
hlt
jo
adc
ret
dec
insl
cmp
xor
add
or
out
jmp
js
xchg
jg
add
sub
pusha
xchg
xor
ret
cmovns
add
push
repnz
fs
push
adc
jns
mov
lcall
mov
push
in
or
xor
or
xchg
jne
dec
lret
hlt
insb
aaa
out
push
push
cwtl
imul
pop
imul
sub
adc
movsl
inc
mov
lds
in
xchg
in
cmp
cmp
jae
cmp
pop
push
xor
rorb
push
movsb
sbb
arpl
sbbl
and
xor
fsubs
lret
jle
mov
sbb
js
ja
mov
icebp
xchg
popf
cmp
and
movb
pop
sbb
add
fs
test
xor
push
cmp
cwtl
ss
aam
std
pop
mov
mov
pop
pop
xchg
insl
sub
pop
dec
cmp
hlt
dec
fidivrs
insb
aad
inc
cli
movsl
cli
enter
mov
pop
icebp
jb
adc
sub
mov
mov
je
mov
hlt
scas
fisubrs
int3
or
cmc
fnstsw
sbb
jo
popf
jp
mov
mov
and
imul
inc
and
cmp
mov
sbb
arpl
dec
sub
adc
xor
out
mov
mov
mov
push
mov
push
stc
pusha
add
lret
jb
dec
in
or
in
enter
mov
out
mov
dec
pushl
jbe
or
add
test
clc
dec
jl
ds
call
jmp
fwait
sbb
popa
cmpsb
xchg
fs
cs
or
mov
inc
insb
ds
cld
xchg
and
push
pop
jns
and
mov
lock
jno
ss
lds
je
cltd
cmpsb
xchg
mov
idivl
inc
pop
mov
nop
mov
inc
lahf
outsl
test
lahf
mov
jg
or
fidivs
mov
test
lea
xchg
fs
divb
rcrb
push
mov
test
dec
xor
ds
inc
inc
cmpsl
or
sahf
push
xor
leave
cmpsb
aam
jno
sub
call
xchg
js
xor
add
jnp
into
xchg
cmp
cmpb
stos
mov
mov
pop
inc
fdivl
outsl
sbb
xchg
in
push
or
push
xchg
cld
pop
inc
jmp
sbb
orl
jns
and
popl
fldenv
pusha
sub
cmc
mov
dec
ss
jl
sub
xchg
data16
mov
sbb
addr16
sbb
lcall
lahf
xchg
cs
dec
je
mov
ret
xchg
pop
dec
xor
rorb
push
and
xor
mov
push
sbb
pop
xor
fsubs
cmp
lcall
sbb
into
int3
push
outsl
push
mov
pop
cmc
push
pop
cs
add
pop
jae
lcall
sbb
xchg
sar
imul
shll
sub
xchg
outsl
and
into
pushf
cmp
mov
xchg
push
sbb
dec
mov
orl
xchg
xlat
jle
mov
xchg
out
mov
xor
inc
jae
xor
movsl
test
ret
jg
jae
mov
mov
cmp
icebp
imul
cmpsb
pop
mov
test
sarl
jae
mov
clc
je
pop
push
cmp
js
rcrb
cs
mov
in
jns
out
dec
and
xchg
loop
das
pop
push
cmp
js
sarb
cs
mov
in
jns
out
jns
push
xchg
divb
push
cmp
js
rcrb
dec
pop
iret
pop
subl
int
xor
push
gs
sbb
arpl
or
test
movsb
cmp
jae
iret
pop
xchg
outsb
enter
xor
jp
add
dec
sub
ja
icebp
loop
add
iret
pop
mov
lcall
sbb
arpl
or
icebp
loop
add
iret
pop
mov
mov
int
xor
pop
mov
pop
sbb
arpl
or
add
mov
cmpl
xor
jg
jb
mov
js
cmp
sub
and
lds
icebp
jns
cmp
fs
pusha
xchg
lea
xor
test
cmp
gs
inc
out
jnp
in
dec
xchg
sub
cmpsl
pop
sbb
popa
mov
jecxz
test
push
push
mov
sbb
shrl
sub
mov
xor
movl
test
jl
or
insb
xchg
ljmp
pushl
xchg
pop
sub
lahf
ret
clc
pop
lcall
push
imul
fimull
mov
aad
movsl
cmp
xor
xlat
aas
mov
jo
pop
adc
sbb
or
pop
sbb
mov
sbb
pop
adc
pop
adc
int
nop
sub
xlat
pop
aam
arpl
dec
cmp
xchg
inc
adc
pop
adc
xor
stos
dec
adc
mov
pop
adc
xor
mov
pop
adc
in
pop
roll
inc
les
pop
adc
repnz
leave
pop
adc
ja
jae
inc
adc
out
iret
mov
adc
js
or
in
out
pop
sbb
adc
or
or
clc
inc
or
lods
iret
pop
adc
mov
xor
and
mov
or
fcoms
inc
mov
pop
xor
or
rcrl
xor
or
push
adc
pop
adc
mov
add
inc
imul
cmp
fdiv
sbb
push
pop
test
fcmovb
repnz
sub
aad
jg
cltd
fidivs
inc
lods
ja
in
in
mov
divb
or
lea
daa
sahf
in
arpl
mov
push
outsb
sbb
adc
sub
arpl
stos
or
outsl
mov
rol
std
mov
jbe
sbb
cmp
in
inc
mov
es
out
in
push
or
xor
jns
sbb
cmp
jecxz
fprem
jae
jmp
test
std
xor
fistps
mov
jno
jecxz
jecxz
dec
loopne
sbb
ljmp
xor
fidivs
dec
dec
popf
add
dec
jb
loope
adc
or
inc
cwtl
cmpsb
push
xor
or
es
pop
adc
xor
or
mov
pop
adc
mov
adc
xor
xor
or
cwtl
cli
add
push
fwait
inc
stc
push
mov
adc
and
jecxz
or
call
inc
mov
stos
pop
pop
cs
pop
pop
pop
enter
or
mov
adc
outsb
inc
leave
pop
adc
loop
xchg
cmpsb
js
pop
adc
xchg
repnz
clc
xchg
ljmp
push
sbb
sub
leave
pop
adc
movl
and
pop
adc
loopne
je
pop
push
cmp
test
jmp
inc
leave
pop
adc
jno
mov
aaa
sbb
leave
pop
adc
jmp
sub
xchg
test
inc
leave
pop
adc
pop
sub
pop
adc
int3
mov
xchg
pop
jle
push
inc
leave
pop
adc
leave
xlat
dec
mov
sub
pop
adc
bound
loopne
mov
leave
pop
adc
ljmp
in
sbb
cltd
clc
ljmp
cmpsl
jp
add
leave
pop
adc
pop
pusha
mov
repz
out
mov
pop
adc
in
sbb
out
clc
mov
leave
pop
adc
iret
sahf
lcall
les
dec
dec
shlb
adc
js
or
addr16
adc
adc
pop
inc
leave
pop
adc
pop
adc
mov
mov
or
outsl
sub
int3
fwait
inc
dec
adc
loope
jmp
loopne
and
or
jo
mov
dec
fadds
push
pop
push
cmp
inc
je
or
jns
lods
cmpsb
inc
mov
lea
mul
or
daa
or
xchg
or
jl
icebp
into
pop
adc
rep
dec
cwtl
or
mov
dec
add
xchg
xor
ds
xchg
fildl
pusha
and
sub
shll
pop
jo
cs
mull
je
push
adc
in
ret
xchg
test
dec
xchg
andl
pop
xor
cmp
jl
int3
scas
lea
lcall
push
stos
pusha
add
lret
ja
dec
in
mov
push
or
and
decl
bound
pop
addb
nop
das
jne
pop
xchg
je
sbb
jns
decl
cltd
inc
xor
mov
scas
cmp
jecxz
push
inc
insb
hlt
lea
outsl
shr
ds
addr16
into
mov
push
or
add
test
push
cmp
out
fisttpl
divb
mov
jne
push
out
jmp
mov
in
andb
aaa
push
jae
sti
cmp
in
dec
nop
adc
sbb
stc
inc
cltd
mov
sub
push
int3
add
sti
cmp
dec
stos
xchg
pop
push
xchg
sbb
push
ja
ljmp
sbb
insl
dec
jl
jmp
fisubrs
scas
out
cmc
mov
pop
adc
jnp
mov
sub
or
daa
aas
inc
leave
pop
adc
sub
ret
lock
leave
pop
adc
test
and
leave
pop
adc
jno
inc
mov
push
inc
leave
pop
adc
hlt
inc
mov
mov
cltd
push
push
xchg
lret
add
inc
cmp
out
xchg
and
loopne
daa
pop
cmp
enter
dec
push
mov
ja
sub
mov
or
lods
sbb
fwait
mull
mov
test
pop
push
push
jo
nop
popf
add
inc
or
dec
inc
mov
cwtl
aas
shlb
adc
mov
mov
enter
cltd
les
or
test
xchg
fsub
das
mov
shll
pusha
dec
inc
popa
std
xchg
push
jo
pop
adc
and
cmp
int3
inc
imul
ljmp
adc
push
inc
inc
push
inc
dec
pop
sbb
add
pop
push
lea
mov
pop
test
enter
js
loopne
or
push
arpl
xchg
stc
push
int
xchg
sbb
mov
arpl
mov
xchg
jbe
in
mov
into
mov
pop
adc
popf
lds
xor
das
aam
dec
push
outsb
cld
int
or
gs
pop
daa
fninit
popf
inc
pop
inc
xchg
xchg
clc
outsb
jo
pop
adc
mov
gs
inc
pusha
clc
jno
into
popa
lcall
xchg
arpl
push
inc
popa
sub
shll
cwtl
iret
inc
insl
jg
and
jecxz
mov
cltd
pop
int3
xchg
imul
psubw
pop
mov
pop
adc
stos
inc
pushf
xchg
clc
test
pop
adc
repnz
into
xor
adc
pop
mov
pop
adc
mov
xchg
jbe
or
adc
sbb
dec
out
sbb
je
pop
adc
mov
popf
aaa
cld
mov
icebp
xchg
dec
fs
mov
sub
out
fwait
call
mov
push
cmp
into
notb
ss
cltd
enter
fldl2e
pop
push
sbb
jp
fildl
pusha
add
loope
mov
fcompl
lea
ss
add
add
stc
adc
push
pop
sahf
xor
dec
addr16
out
jl
popa
xor
adc
sbb
ret
cmc
xor
jg
mov
lock
mov
aad
pop
ret
daa
push
mov
loope
adc
addl
mov
nop
roll
xor
or
notb
loope
sub
push
inc
and
or
aam
or
shlb
xchg
imul
jmp
and
inc
inc
out
or
loop
push
enter
adc
les
or
mov
or
mov
xchg
adc
daa
enter
sbb
cmp
arpl
push
lock
mov
push
inc
imul
dec
cmpsl
ret
adc
sti
lea
leave
or
or
mov
aas
xlat
xor
idivb
aaa
pop
dec
das
sbb
cltd
andb
test
in
or
xor
jo
sbb
adc
sbb
flds
and
mov
fcoms
xor
dec
lcall
rcrl
inc
mov
lret
ljmp
enter
aam
add
cld
mov
add
or
sbb
hlt
mov
stos
xor
or
pop
dec
push
ja
mov
or
xor
mov
pop
fldl
or
repz
into
shr
rcll
scas
aas
arpl
jmp
sbb
jns
lods
xor
imul
shlb
or
jne
pusha
out
das
or
sub
popf
loopne
or
cmp
inc
xchg
mov
es
cmp
fsubl
or
inc
xor
cmp
xchg
inc
mull
ljmp
ljmp
sub
fadd
or
in
jmp
or
xor
push
mov
fsubl
or
or
and
outsb
test
or
loop
shlb
adc
loope
enter
fcoms
jns
and
fsubs
or
add
les
or
sub
or
mov
out
aas
jns
pushf
repnz
lcall
popf
mov
enter
xchg
aaa
shlb
adc
mov
xor
dec
aaa
sarl
pop
rorl
push
sbb
int3
or
ljmp
dec
dec
data16
loopne
or
loopne
loop
fistps
inc
and
je
xchg
daa
push
jae
fsubl
or
in
sub
into
sbb
mov
or
pop
add
or
stc
dec
or
or
inc
sub
fsubl
or
cmovbe
fsubs
or
sub
xor
pop
int3
or
inc
daa
push
or
dec
and
inc
xlat
icebp
sub
or
dec
mov
pop
mov
rol
inc
mov
dec
pop
popa
sub
or
rcrb
adc
or
pop
or
pcmpeqb
xchg
inc
cmovb
movsl
sub
iret
sahf
or
addr16
daa
adc
and
lock
and
loope
or
cs
int
jb
in
xchg
pop
mov
flds
in
xchg
push
sbb
loopne
or
mov
mov
sub
adc
into
mov
fsubl
or
cmc
into
arpl
shll
xchg
inc
inc
insl
cli
or
or
mov
pop
fs
or
ret
repnz
mov
es
das
pusha
in
xchg
pop
out
fsubl
or
mov
add
xor
cld
jl
add
cs
insb
pushf
xor
fldcw
mov
mov
sub
enter
mov
les
or
mov
pusha
lods
mov
loop
and
and
pop
mov
sahf
lds
or
testl
stos
mov
in
cmp
inc
bound
or
or
ret
popa
mov
cmp
or
dec
lock
mov
adc
scas
cmp
adc
iret
movsb
into
xchg
call
or
decb
rolb
lret
int3
or
enter
ret
int
bound
add
ljmp
sub
jns
int3
or
adc
or
lcall
adc
mov
sub
add
test
adc
call
mov
or
or
xchg
mov
shl
cld
push
out
mov
xlat
shlb
adc
daa
insb
fsubl
or
mov
pusha
xchg
cld
jp
mov
int3
or
aas
jmp
or
loop
push
pop
and
and
fs
loopne
mov
adc
outsb
push
lret
testl
mov
arpl
cmp
fidivrl
ret
loopne
or
push
mov
and
adc
shrb
xchg
loopne
or
pop
cli
mov
adc
add
inc
cmp
imul
setno
fsubl
or
sub
or
and
aam
or
fwait
shl
adc
adc
or
out
aam
or
mov
mov
shlb
adc
arpl
xorb
movsl
js
movsb
fldl
adc
mov
push
adc
or
cmp
push
adc
adc
mov
mov
pop
xlat
mov
cmp
aas
and
or
popa
xlat
cld
sbb
cmp
sbb
std
mov
jmp
cmpsl
sbb
sub
mov
ja
es
add
xlat
mov
dec
push
jp
shlb
adc
adc
dec
sbb
jge
ret
pop
mov
pop
int
and
outsb
inc
sub
jl
jle
lods
les
adc
push
sbb
xchg
les
or
sahf
shlb
loopne
cwtl
stos
fistpll
sbb
fiaddl
or
les
or
movsl
mov
pop
or
push
cmp
inc
sub
xor
jecxz
call
repz
jnp
dec
cld
dec
in
sbb
adc
in
add
mov
sbb
loope
icebp
or
or
es
sub
dec
rorb
fistl
or
gs
or
cwtl
cli
add
mov
xor
rcrb
push
cmp
lods
cwtl
mov
daa
mov
inc
and
and
sub
xchg
pop
dec
bound
xor
out
sahf
xor
sbb
fucomip
cmc
dec
mov
insl
cmp
cmp
or
repnz
adc
pop
mov
jecxz
out
leave
std
cmpsl
cmp
lret
mov
test
add
je
fiadds
push
adc
daa
mov
add
add
fstl
insl
test
pop
jb
adc
out
sub
data16
cmp
sub
mov
jb
adc
add
push
sub
out
or
lahf
and
adc
insl
inc
push
xchg
adc
out
insl
dec
ret
lock
ja
fwait
sbb
jmp
sub
loope
pop
fldenv
subb
xlat
dec
xor
xor
vmwrite
mov
sar
fwait
mov
fxch
and
roll
ljmp
pusha
mov
mov
xor
popa
in
pop
int3
jbe
ss
dec
jbe
or
nopl
ljmp
xor
mov
xchg
adc
ret
hlt
dec
lret
repz
pusha
popf
xor
mov
in
pop
adc
pop
iret
jl
lock
mov
mov
incl
pop
stos
or
fnstsw
movups
out
imul
ljmp
arpl
fists
and
popa
lcall
jae
mov
movsb
mov
jge
or
pusha
sbb
or
lds
sub
sbb
xor
ja
cmp
or
jle
in
or
cmp
mov
jg
call
ficomps
gs
lock
sub
push
test
cmp
sub
mov
lea
mov
jno
xor
aam
sub
icebp
inc
nop
imul
js
or
xorl
fisttps
fcoms
mov
pop
or
bound
addb
pop
push
add
adc
jo
aas
imul
call
out
fdivrs
pusha
pop
inc
je
outsb
lret
fs
mov
xor
frstor
std
jnp
xchg
inc
sub
mov
add
aam
adc
out
push
gs
pop
adc
fcom
pop
adc
pop
ja
mov
out
inc
scas
out
cmpl
aad
sbb
jnp
mov
pop
hlt
xor
movb
mov
add
and
arpl
jbe
sbb
push
lock
mov
push
push
cmp
leave
push
int3
push
adcb
pop
nop
imul
mov
daa
jne
lcall
adc
inc
xor
sbb
movsl
adc
adc
cli
ljmp
adc
adc
stos
ds
clc
lret
adc
push
adc
fucomip
mov
mov
or
mov
pop
adc
xchg
enter
jbe
cld
or
dec
rcrb
hlt
and
adc
loopne
daa
or
nop
push
jg
sbb
adc
mov
cmp
or
into
stc
add
mov
add
or
les
or
cmp
xchg
repnz
cmc
and
and
jl
pop
pusha
xchg
jns
or
or
adc
sub
dec
imul
jo
or
inc
out
mov
fsts
or
mov
ficoms
lods
out
daa
or
inc
inc
js
popa
lcall
sbb
nop
js
clc
or
mov
sbb
out
aaa
sbb
daa
or
pop
pop
mov
nop
incb
jle
xchg
ss
inc
daa
or
add
outsb
jge
lea
jnp
push
clc
stos
ret
xchg
or
lahf
movsb
pop
out
mov
and
shl
xchg
imulb
sub
js
rorb
add
mov
dec
pop
pusha
dec
lret
sbb
fs
push
adc
repnz
pushf
cmp
sbb
xchg
push
mov
fcompl
lods
iret
pop
adc
add
fnstcw
lret
jns
cmp
shll
pop
mov
adc
and
adc
push
add
iret
pushf
les
pushf
loop
mov
or
dec
and
rclb
cltd
sub
and
adc
js
mov
xchg
inc
mov
pop
adc
negb
and
insl
mov
mov
xchg
mov
rep
pop
push
out
and
loope
inc
add
gs
pop
push
mov
mov
aas
fldcw
xchg
push
movsl
pop
xor
ja
sti
movsl
out
fs
enter
sti
jecxz
js
cli
mov
cmp
or
sbb
subb
add
adc
lahf
ret
loop
adc
dec
jne
sbb
imul
pop
loop
mov
xchg
pop
ds
test
and
fnstenv
lret
daa
xchg
push
js
fldcw
sbb
out
sub
popf
mov
push
fs
or
mov
cmp
xchg
inc
dec
push
pop
rcrl
push
mov
adc
mov
les
pop
mov
shll
adc
lret
and
and
mov
mov
movl
sbbb
ja
mov
inc
add
xchg
pop
stos
jp
xchg
adc
mov
int3
or
jno
inc
sar
aas
xchg
lcall
mov
xchg
pop
and
jmp
sbb
test
xchg
notb
or
icebp
outsl
pop
mov
adc
jecxz
lahf
mov
pusha
repnz
xchg
dec
ds
mov
sbb
mov
cmp
cmp
pop
mov
adc
pop
fcom
bound
dec
sub
sub
push
and
sarl
addr16
inc
push
mov
jns
xor
sarl
sub
mov
fwait
ds
xor
jecxz
fmuls
or
loopne
pop
pusha
and
add
mov
pop
leave
xchg
call
or
int3
pop
xchg
mov
dec
adc
dec
jbe
popa
and
iret
test
mov
stos
pop
loopne
xchg
push
sub
addr16
mov
daa
sahf
insl
test
adc
jb
and
cmp
fstl
pop
sbb
mov
dec
cmp
sahf
cli
pop
push
repz
int3
pop
adc
pushf
outsb
sbb
das
pop
cld
mov
dec
mov
fdiv
fistpll
movsb
ret
xor
lcall
inc
nop
mov
ds
pop
aas
cwtl
mov
iret
pop
mov
test
cmpsb
enter
push
movsb
in
push
push
fs
dec
in
gs
inc
mov
mov
lahf
lock
ljmp
pop
les
sub
repnz
out
mov
xchg
fdiv
arpl
popf
loop
into
nop
inc
addb
mov
mov
xchg
icebp
mov
add
clc
sub
cs
lea
fmul
leave
in
pusha
bound
arpl
int
xchg
into
sbb
in
xor
xchg
rcll
ja
pop
or
popa
ret
push
pop
sarb
aas
adc
sbb
jle
adcl
or
data16
sbb
adc
push
inc
cwtl
aad
adc
call
mov
pop
and
aad
adc
inc
inc
push
xor
repz
testl
aas
fldenv
fwait
shrl
mov
mov
adc
je
movsb
stos
lret
leave
call
repz
sub
adc
js
dec
xor
mov
dec
imul
pop
adc
pop
dec
bound
push
and
insb
push
push
loop
jl
xchg
push
push
fs
sahf
cmp
inc
in
mov
inc
mov
or
xchg
xchg
test
daa
arpl
adc
roll
cmpsl
movsl
fwait
insb
outsb
xchg
xchg
or
imul
jb
cmp
dec
out
insl
mov
idivb
pushf
cmp
inc
mov
jmp
mov
pop
mov
repnz
mov
lret
shl
les
dec
dec
insl
and
pushf
mov
popf
fsts
lock
jle
in
jle
psubq
pop
mov
pop
inc
mov
mov
mov
test
icebp
mov
mov
fidivrs
jg
push
aaa
shll
pop
mov
mov
xor
inc
imul
or
daa
ret
or
push
das
lods
mov
jecxz
xchg
scas
or
sub
inc
call
mov
xchg
jle
sub
gs
addr16
lret
gs
pop
in
pop
popf
xchg
pop
sub
and
push
xchg
in
test
call
scas
adc
imul
mov
pushf
lcall
push
lock
jge
roll
inc
add
lret
cs
sub
iret
jecxz
in
mov
pop
adc
movsl
scas
or
mov
adc
loop
loopew
dec
ljmp
insl
test
or
jo
fcomip
int3
adc
adc
imul
rolb
sbb
xchg
ljmp
jge
jl
mov
inc
xchg
popf
xchg
add
jno
inc
fldt
jnp
jge
ja
jae
mov
outsl
mov
mov
jg
inc
adc
xor
lock
fwait
mov
pop
movsl
sbb
fimuls
daa
mov
jnp
les
repnz
pushf
jns
push
sub
fistl
xchg
sub
mov
pop
aam
leave
push
inc
int
adc
xor
inc
loope
rcrb
push
cmpsb
add
jle
mov
out
das
sbb
enter
jbe
jl
pop
and
cmpsb
ret
outsl
cli
lcall
nop
dec
mov
fwait
adc
mov
lock
repnz
or
mov
pop
clc
les
cmp
pop
inc
movb
mov
dec
or
mov
adc
add
jmp
mov
push
insl
push
adc
xchg
or
xchg
lret
xchg
cmp
ret
inc
pop
xchg
and
jo
insl
popf
sub
out
out
adc
push
dec
mov
js
xchg
pop
cs
iret
leave
adc
or
or
inc
rorl
push
pushf
mov
cmp
xchg
out
out
lds
fsts
dec
adc
cmpsl
sbb
mov
movsb
aas
outsl
lret
mov
pop
jge
inc
inc
insb
sub
inc
out
mov
mov
sub
lods
aas
icebp
push
aam
push
adc
cmpsb
dec
ret
hlt
insb
and
push
adc
daa
mov
mov
inc
mov
arpl
dec
pop
pop
fdivp
cltd
or
or
lods
mov
adc
inc
cmpsl
repz
jg
arpl
or
out
or
pop
adc
add
inc
clc
mov
daa
or
add
sub
incl
inc
daa
or
inc
push
lods
mov
pop
fidivs
les
sub
lock
rcl
iret
sahf
lcall
popa
push
mov
dec
fs
mov
icebp
push
pop
mov
dec
ret
in
nop
andl
mov
or
jo
lds
sar
loop
lcall
mov
mov
add
xor
add
mov
mov
repz
gs
pop
push
xor
xor
push
loope
dec
icebp
xchg
clc
pushf
enter
dec
dec
mov
xchg
addr16
rcrl
js
jo
ret
push
jnp
inc
jge
movsl
dec
or
inc
dec
hlt
xor
jmp
iret
sbb
repz
ljmp
sbb
or
mov
mov
out
xchg
cmpsl
pushf
loopne
es
dec
push
mov
inc
push
mov
and
fbstp
xbegin
js
lahf
clc
xchg
lret
negl
testl
sub
xor
jno
ror
mov
xchg
mov
out
xchg
mov
mov
push
sub
sahf
or
int3
gs
fildl
xor
sarl
xchg
jno
cmp
scas
cmp
sub
pop
inc
aad
pop
pushf
push
ret
xor
in
frstor
and
mov
push
jnp
ret
push
jns
cmc
cmc
mov
test
cwtl
jno
int
inc
push
jno
dec
pop
mov
lret
push
adc
mov
fsubl
mov
leave
fcmovnb
sahf
inc
pop
data16
jecxz
decl
mov
and
mov
mov
rolb
jb
lcall
push
scas
out
loopne
mov
nop
xchg
push
call
inc
outsl
dec
test
lock
adc
pusha
movsb
sbb
sub
fcomip
ret
and
sub
jns
mov
je
test
and
adc
xchg
cmpb
bound
cwtl
ficompl
dec
xchg
jnp
jp
dec
clc
mov
dec
pop
leave
test
ljmp
xchg
cli
sbb
add
or
mov
jnp
mov
sbb
push
mov
sub
cwtl
add
ds
sarb
jmp
adc
shrl
fwait
add
outsb
cmpsl
sub
in
jecxz
jo
adc
movb
mov
push
adc
in
std
pop
mov
les
adc
adc
jmp
or
add
lods
adc
sti
mov
pop
insl
or
rcrb
xor
xchg
or
fs
cmp
mov
sbb
test
push
push
cmp
jno
and
int
in
jle
imul
push
subl
pushl
fwait
lods
movsb
inc
cli
mov
and
imul
shll
sahf
ret
repz
ja
ret
jecxz
xlat
mov
mov
push
inc
popa
mov
leave
out
ss
lret
rcr
jge
bound
jmp
popf
jnp
lds
sbb
xor
cmp
inc
inc
ja
xchg
inc
pop
out
fwait
jmp
and
dec
sarl
out
mov
js
out
jno
sbb
pop
adc
repz
xchg
movsb
mov
stc
adc
adc
or
call
hlt
arpl
and
bound
xchg
xchg
mull
sbb
popa
dec
ret
shl
jae
push
out
xchg
movl
mov
pop
adc
sbb
out
push
cmp
inc
or
or
add
dec
insl
sbb
testb
and
pushf
repnz
push
adc
or
and
jo
adc
fs
or
or
roll
or
addr16
lock
sub
xchg
sarl
adc
add
cs
jno
adc
mov
leave
jecxz
addr16
mov
jmp
mov
dec
jo
or
xchg
jne
cli
repz
cmp
andb
adc
pushl
jmp
js
inc
add
lock
stos
lds
bound
adc
xor
push
jmp
arpl
push
js
push
adc
xor
sahf
mov
inc
lock
in
xor
push
pop
mov
lahf
mov
sbb
cmp
addl
xor
xor
aas
sbb
jbe
inc
and
popf
sub
pop
mov
inc
leave
repnz
cwtl
mov
jno
mov
popa
mov
insl
fadd
mov
daa
repnz
jne
pusha
aaa
pushf
insb
pop
test
repz
mov
cmc
or
jo
adc
push
loope
test
daa
imul
mov
mulb
inc
fimuls
mov
loopne
cmpsb
in
or
or
fsub
lock
lcall
mov
pop
in
loop
mov
mov
and
inc
mov
test
out
hlt
js
bnd
or
into
pop
movsl
std
int3
callw
dec
or
je
sub
jno
mov
shrb
stos
fs
jno
out
mov
adc
sbb
leave
data16
test
shll
daa
dec
mov
dec
fldl
mov
adc
lds
mov
cmp
in
sub
adc
iret
jae
sti
cmp
popa
andb
dec
inc
mov
push
mov
lcall
add
pop
aad
add
pusha
loope
adc
pop
adc
pop
cmp
xor
outsl
scas
fs
adc
stos
cwtl
add
or
int3
jb
adc
sbb
adc
or
out
test
xorb
jb
adc
or
adc
or
fimuls
daa
or
inc
add
inc
pusha
jle
mov
sbb
int3
jb
adc
sub
call
icebp
dec
and
int
je
inc
mov
or
jg
mov
xchg
test
push
cmp
mov
and
add
inc
add
pop
mov
pop
adc
nop
add
push
nop
xchg
arpl
push
or
pop
xor
xchg
int3
pop
sbb
shr
jecxz
xor
mov
mov
mov
adc
push
mov
insb
call
ss
outsl
les
pop
push
movw
outsl
mov
push
dec
jmp
inc
fisttpl
addr16
sbb
inc
jne
push
pushl
mov
adc
dec
stc
add
xor
movsb
adc
sahf
cmp
xchg
scas
pop
shrl
and
push
sbb
adc
jge
pop
cs
mov
sub
jns
fs
push
repnz
jb
adc
push
xchg
pop
adc
or
lods
cltd
out
xorb
lcall
adc
or
sahf
cmp
bound
or
notl
shrl
clc
inc
add
lods
movsb
mov
fdivr
xchg
and
dec
andb
adc
rep
ds
push
adc
loopne
mov
cmp
inc
mov
mov
add
mov
arpl
xchg
mull
sub
and
or
fisubrl
outsl
dec
inc
sbb
les
jecxz
arpl
mov
sahf
cmp
xchg
or
pop
jb
into
pushf
imul
mov
icebp
push
jb
adc
pop
and
mov
jne
mov
test
add
cs
jo
adc
xchg
insb
rclb
int3
rol
mov
sbb
sarl
or
add
cs
dec
jae
cmp
adc
scas
pop
adc
mov
mov
outsl
lcall
jge
lods
iret
pop
adc
or
icebp
or
push
repz
jmp
js
adc
pop
pop
aad
add
dec
mov
pop
jmp
add
dec
in
out
jecxz
xchg
xchg
mov
popf
int3
jbe
push
jmp
fcoms
and
and
pop
adc
mov
or
or
inc
jmp
sti
xchg
or
xor
cmpsl
inc
mov
mov
jae
inc
mov
clc
fldt
pop
mov
pop
dec
dec
xchg
xor
adc
call
cld
sbb
inc
sub
mov
add
imul
or
dec
jo
adcb
adc
cmp
jle
xor
jmp
je
pop
adc
jg
inc
out
xchg
call
aam
shrb
push
pop
inc
inc
mov
add
add
mov
add
gs
push
mov
cmp
arpl
xchg
xor
cmpsl
repz
sub
adc
sbb
pop
out
push
nop
bound
mov
jg
sub
enter
inc
inc
jge
or
loopne
xchg
movsl
mov
push
dec
rol
xchg
pop
xchg
push
adc
cmp
int3
lcall
outsb
les
lahf
ficoml
pushf
sbb
arpl
xchg
xchg
dec
cwtl
xchg
je
pop
adc
xchg
xor
mov
pusha
addr16
fxtract
xchg
mov
outsb
inc
adc
int
lret
loope
inc
pop
xor
inc
jne
mov
movsb
jle
lret
and
cmp
stc
dec
leave
je
pop
adc
testb
pop
pop
test
push
out
mov
subb
fwait
movsb
out
pop
inc
and
fisttpl
mov
gs
popa
mov
and
add
fwait
in
push
jne
cwtl
call
jnp
daa
scas
xchg
xchg
mov
adc
call
int
bound
push
mov
add
inc
pushf
jns
dec
or
xor
fsubrs
jo
xor
jp
add
mov
dec
sbb
pop
mov
push
lock
inc
dec
xchg
outsb
push
sbb
in
xchg
pop
insl
and
cs
mov
cmp
sub
loope
mov
movb
and
push
pop
nop
cmp
pop
into
pop
jge
push
cmp
mov
pop
roll
jno
aaa
sbb
imul
adc
dec
push
adc
dec
sbb
popa
inc
jge
gs
xor
mov
push
cmp
cmc
sub
arpl
ret
repnz
mov
testb
mov
sub
movsb
push
gs
int
cmp
or
loopne
push
test
xor
mov
sbb
cs
iret
stc
aam
cwtl
sub
repz
in
mov
jb
into
pushf
or
mov
pop
pop
xlat
pop
pop
cltd
into
xor
xchg
and
aam
and
jp
into
fs
jnp
shll
xorb
int3
xor
repnz
int3
shlb
ljmp
fs
jnp
mov
and
dec
dec
jae
iret
sahf
mov
pop
imulb
dec
test
mov
sub
fimuls
cld
ljmp
test
inc
add
jg
mov
flds
pushf
add
and
fcompl
and
jae
pmullw
push
xchg
fcmove
mov
or
cmp
dec
int
idivb
out
mov
jl
fwait
cld
lret
jecxz
pushf
cmp
loop
je
outsl
mov
mov
ret
mov
xor
jl
fwait
cld
lret
out
pushf
cmp
lock
cmp
popf
stos
dec
enter
mov
test
add
and
inc
mov
out
xor
push
sbb
adc
adc
adc
adc
push
adc
adc
adc
push
adc
push
adc
adc
adc
adc
adc
adc
push
adc
push
sbb
or
add
adc
adc
ds
jo
xchg
inc
jl
jmp
data16
sub
popf
fidivl
sbb
or
cmp
pop
hlt
or
add
jl
add
ja
inc
and
imul
jno
popf
mov
cmp
inc
adc
push
jle
sub
or
lock
cmpsb
insl
mov
fwait
int3
mov
jl
xor
adc
rclb
sub
stos
add
movsb
jecxz
int
stos
es
pop
and
ror
mov
inc
and
dec
hlt
mov
pop
inc
adc
sbb
fimuls
in
adc
cwtl
or
popf
inc
cmp
sbb
lock
mov
mov
popa
jae
adc
sbb
stc
rorb
imulb
and
inc
sub
aam
es
sub
pop
mov
gs
push
iret
add
jne
sbb
sti
in
inc
into
cli
mov
push
mov
ret
in
mov
fst
sbb
mov
pop
pop
cmpsl
mov
lahf
repnz
jle
popa
sub
in
push
add
jge
inc
scas
imul
out
fnstcw
mov
mov
mov
cmpl
cmp
loopne
add
in
sbb
fincstp
jp
fcmovb
sbb
mov
fwait
mov
jno
mov
inc
rorb
or
jl
cli
cmp
in
xor
xchg
inc
cwtl
push
aas
insl
pop
sbb
iret
ja
scas
dec
int3
cltd
mov
pop
sahf
std
fdivs
xor
loopne
push
int
push
scas
in
iret
sahf
nop
outsb
outsb
out
lcall
sbb
or
xor
ficomps
popa
inc
jecxz
sbb
lods
jmp
bound
fwait
icebp
pop
xor
mov
repz
sub
cld
lahf
pop
xor
push
xchg
ret
pop
push
xchg
icebp
adc
std
fcom
jne
insl
cmpsl
das
mov
mov
jmp
cmp
jb
iret
loopne
push
out
gs
adc
int
addl
fcoms
mov
loop
dec
out
and
test
roll
ss
mov
xor
add
outsl
pop
cmp
or
adc
jg
add
pop
jge
sub
cld
xor
sbb
mulb
dec
lret
test
jg
or
pop
jge
sub
cld
xor
out
add
xor
or
mov
movsb
int3
mov
cli
add
icebp
pop
movsb
stos
jg
adc
in
xchg
push
pop
sbb
jae
dec
cmpsl
rclb
rolb
fldenv
popa
ret
xchg
or
push
xor
gs
cmp
push
sbb
fimuls
insl
push
or
adc
push
outsl
pop
jg
push
out
into
jmp
pop
adc
sub
mulb
rolb
into
xor
sbb
adc
or
sbb
cs
or
mov
mov
push
adc
enter
inc
out
sti
lcall
jl
jbe
add
daa
aam
andb
lea
into
es
clc
lods
and
and
dec
enter
out
xor
leave
push
call
ss
add
call
test
stos
clc
push
xor
sahf
pop
cs
inc
out
ds
xchg
fcoms
push
cmc
data16
mov
fcompl
push
cmp
xlat
shrl
lds
jns
lods
or
movsb
sarl
ss
imulb
fisttpll
repnz
pop
js
jne
unpcklps
lock
mov
lods
aam
ret
pop
sbb
rorl
data16
sbb
xorl
inc
inc
out
sbb
add
pop
and
aad
cmpsb
push
ja
add
cmp
pop
or
push
imul
dec
mov
pop
sti
adc
stos
xlat
cmc
nop
add
iret
jge
xor
add
dec
cwtl
push
test
mov
repnz
push
pusha
and
sub
or
add
iret
movsl
sbb
inc
das
pop
imul
xchg
nop
dec
es
sbb
loope
sub
pop
loop
and
clc
sub
mov
je
push
or
mov
fldcw
xlat
jae
js
adcb
sahf
imul
sbb
imul
mov
shl
pop
adc
mov
fistpll
pop
push
dec
ficomps
call
or
mov
inc
in
push
cmp
mov
sahf
fidivs
decb
push
cwtl
and
cmp
or
stos
add
repz
popa
out
inc
aad
cmpsl
dec
stos
es
js
out
test
pop
add
push
xchg
jae
add
adc
rcr
pushf
out
mov
xor
xor
add
test
pop
jne
fcomip
sub
flds
lods
shrb
in
or
mov
scas
sarl
repz
inc
paddq
andl
imul
pop
gs
and
xor
push
mov
out
orb
out
xchg
jno
adc
fsubrs
jmp
js
fidivrl
jns
shll
sahf
dec
jle
or
jo
adc
jnp
xlat
push
cmp
push
cmc
push
ficoml
and
sub
leave
jne
pusha
jnp
xor
and
xor
adc
xchg
flds
lods
lods
sbb
push
out
clc
xchg
adc
ja
pop
into
std
lods
sub
int
adc
cmp
data16
pop
sbb
sub
icebp
bound
dec
sbbl
cwtl
lret
lcall
out
sbb
add
pop
stc
mov
xor
add
jg
movsl
jno
shll
fnstenv
inc
and
push
push
dec
mov
inc
data16
or
icebp
adc
mov
aaa
pop
ds
call
jbe
dec
rorb
xor
mov
ss
int3
stc
movsb
das
inc
dec
adc
je
shrl
add
loop
mov
jnp
or
ss
xlat
xor
lods
and
dec
lds
lcall
add
lods
popf
inc
and
sbb
fnstenv
icebp
sub
push
sahf
ret
add
cmpsb
ja
mov
pop
jge
jecxz
ret
ja
imul
lret
test
sbb
add
es
push
adc
dec
ret
rcr
adc
pop
enter
ret
fwait
dec
insb
lret
mov
popf
inc
dec
popa
xchg
push
fmull
sbb
test
xchg
jno
dec
xor
int
cmp
out
push
mov
inc
in
sbb
ficompl
negb
ljmp
in
fcoms
sbb
les
out
sbb
xchg
xor
imul
sbb
and
push
pop
icebp
and
xor
push
aam
outsl
xchg
sbb
push
std
mov
pushf
dec
push
and
fistpl
dec
gs
push
rclb
inc
xchg
sbb
in
gs
mov
pop
orl
rcrl
xchg
xor
lock
fnstsw
cld
sbb
mov
ror
add
sbb
enter
mov
aad
adc
push
or
inc
mov
loope
lret
nop
mov
sub
pop
adc
test
leave
data16
sub
push
inc
repnz
xchg
adc
mov
xlat
nop
cmp
adc
jp
push
mov
mov
ret
add
cmp
imulb
fstpl
std
pop
gs
mov
xor
and
outsl
mov
outsl
movsb
in
jmp
sbb
mov
data16
adc
sahf
inc
dec
pop
icebp
or
or
push
dec
mov
mov
test
mov
dec
sbbb
adc
es
sub
js
jl
testb
stc
aad
daa
or
mov
jmp
in
testb
sti
imul
jo
adc
inc
imul
mov
sbb
mov
adc
and
or
test
lods
cli
push
scas
jns
cwtl
ret
lahf
outsb
mov
insb
sub
jns
out
pushf
ffreep
popf
in
sub
sbb
or
iret
or
or
clc
mov
or
mov
lahf
sub
pop
lcall
iret
pop
ret
in
rcll
inc
xchg
mov
or
pop
rcrb
dec
mov
aas
in
xchg
or
sub
jp
inc
int3
pushf
cmp
int3
or
movsb
mov
test
cmp
adc
sbb
call
int3
push
sbb
fs
adc
add
lcall
push
jle
mov
mov
cmp
xor
loope
stos
xor
and
pop
imul
jb
out
orb
mov
add
pop
cmp
jne
icebp
into
xor
mov
sbb
out
fwait
xchg
stos
mov
cmp
lods
fisttpl
loopne
imul
test
cltd
or
dec
push
mov
movl
icebp
pop
push
je
push
adc
test
adc
stos
xor
loope
std
in
add
push
mov
inc
jae
mov
nop
ja
dec
fcmovbe
mov
fdivr
sti
test
outsl
stos
sbb
mov
outsl
inc
andnps
sahf
dec
movsl
sbb
and
xchg
outsl
jl
lds
mov
aas
in
xchg
mov
mov
mov
xchg
jecxz
sbb
adc
or
or
xor
mov
sbb
adc
ret
jp
mov
ret
xchg
ja
lret
pop
xor
rorl
cmp
add
outsl
outsl
push
lds
jo
dec
roll
lock
jge
push
outsb
lahf
xor
xchg
cmp
push
mov
sbb
stc
lods
mov
mov
sbbl
insb
ss
add
add
mov
cmp
cmc
mov
or
inc
inc
xor
adc
jmp
jns
rol
add
sub
dec
jno
test
push
adc
sub
mov
les
pop
dec
jg
mov
lret
or
iret
xchg
sub
sarb
inc
jo
or
mov
in
imull
into
dec
outsb
inc
xchg
andb
adc
mov
mov
jno
adc
mov
ljmp
dec
xor
es
clc
mov
aaa
leave
push
in
xlat
adc
sahf
xchg
test
pop
pop
and
adc
or
arpl
push
repz
inc
xlat
and
fidivs
pop
push
sub
repnz
cwtl
inc
add
adc
or
addr16
fistps
dec
stos
mov
adc
xchg
fs
mov
mov
inc
xor
jecxz
push
mov
outsb
sbb
and
adc
ret
sbb
stc
mov
std
jl
mov
mov
jg
in
andl
imul
mov
scas
jp
push
push
lds
xor
or
arpl
mov
test
push
and
int
and
adc
repz
add
bound
adc
call
adc
cmp
cmc
outsl
dec
add
or
jb
lcall
mov
aas
xchg
jecxz
cmp
insb
imul
and
cwtl
rolb
mov
mov
imul
inc
add
push
mov
fsub
jmp
mov
mov
aad
xlat
jmp
mov
test
dec
fimuls
dec
les
fdivs
or
jo
mov
scas
and
mov
add
jle
jecxz
nop
iret
xchg
sub
mov
adc
sbb
or
iret
andl
push
aam
dec
fsubrs
cmp
and
and
adc
jno
pop
mov
sub
out
cmp
subb
jle
xor
inc
js
out
cmpsb
xchg
xor
and
adc
cld
sbb
or
dec
addr16
sub
add
scas
sbb
or
jecxz
aad
clc
lcall
jnp
sub
or
dec
iret
jb
iret
ljmp
repnz
xor
pop
xor
js
inc
ret
les
add
ss
inc
shrl
aad
xor
or
or
jbe
cs
adc
or
mov
repz
cmpsb
xchg
into
pop
pop
push
dec
ficoms
ret
xchg
rorl
es
mov
pop
out
adc
or
mov
jno
xor
add
loop
mov
pop
lret
andb
xchg
jg
inc
mov
test
repnz
gs
jecxz,pn
fdiv
cwtl
pushf
cmp
xchg
xchg
into
pop
fs
push
sbb
cmp
enter
mov
out
aad
jge
dec
sahf
dec
out
jmp
add
jg
and
push
adc
into
push
pop
adc
lahf
cmp
xor
push
adc
arpl
movsb
xor
jecxz
mov
movsb
pop
scas
inc
out
into
sahf
dec
ret
add
mov
mov
cwtl
mov
and
orb
inc
daa
or
mov
fcom
les
push
mov
cmp
inc
xchg
sbb
dec
pop
or
cmp
fcoms
push
js
jae
into
pushf
dec
pushw
or
ds
loope
push
sahf
xchg
fcoms
sbb
cmp
jg
jno
mov
into
mov
jo
inc
dec
icebp
inc
stc
and
xchg
out
inc
jle
outsl
jle
int3
fwait
mov
loopne
mov
dec
pop
pusha
sub
jnp
sub
sbb
lahf
inc
pop
nop
fsub
and
add
adc
mov
jmp
roll
jbe
popa
mov
sbb
xor
jnp
push
lods
je
leave
dec
mov
stc
dec
notb
bound
inc
pushf
inc
lret
sti
fwait
les
xchg
pop
push
je
int3
lret
popf
inc
mov
pop
inc
idiv
pushf
dec
xchg
inc
cld
add
or
and
push
lret
xor
sub
cmp
xchg
jl
push
adc
dec
xchg
cmp
jecxz
movsb
fldl
cmp
arpl
cmp
inc
mov
iret
fdivrs
cmp
adcl
pop
add
add
add
inc
mov
repnz
sub
or
roll
and
cmpsb
sbb
mov
push
dec
test
aaa
mov
notl
insl
ljmp
lock
scas
in
lea
adc
rclb
push
inc
sbb
xorb
movsb
stc
inc
jnp
daa
or
xor
aaa
mov
ds
jb
es
shl
loopne
bound
fbld
aad
cmp
adc
add
push
adc
iret
push
outsb
int
mov
pusha
jo
adc
jbe
mov
sti
out
add
push
adc
add
pop
add
daa
or
pop
nop
cmpsl
and
or
sub
out
in
lock
adc
lcall
xchg
adc
mov
mov
push
and
test
jmp
clc
add
aaa
mov
dec
cli
outsb
in
inc
cmp
rcrb
je
inc
pop
jl
xor
jbe
jle
aaa
cmp
adc
cmp
adc
stos
inc
fsubs
or
jge
push
or
andl
sub
repz
aam
imul
inc
lcall
je
lock
clc
fwait
jl
push
adc
sahf
pop
pop
cmp
sub
or
dec
push
pop
dec
cmp
cmp
adc
mov
addb
pop
xchg
pop
fldt
cwtl
dec
into
adc
lcall
sub
push
hlt
mov
shl
mov
pop
adc
mov
mov
mov
cltd
push
xor
mov
push
cmp
out
rorb
pop
adc
shlb
repz
mov
mov
sbbl
push
cmp
out
enter
sbb
iret
mov
cmc
out
call
push
push
adc
mov
icebp
hlt
push
xchg
cs
or
iret
sahf
sub
loopne
call
inc
lcall
dec
jo
loop
cmp
sub
lock
sahf
cmp
loope
lret
lcall
sarl
sti
lods
xor
out
ret
mov
daa
pop
adc
adc
ds
cltd
aam
add
pop
adc
pusha
adc
out
mov
cs
pop
and
in
dec
data16
mov
cltd
aam
xor
out
daa
bound
ljmp
mov
pop
adc
das
cwtl
sub
adc
sbb
mov
out
mov
mov
shl
fsubrs
jg
mov
jmp
lea
xor
fcompl
inc
stc
int3
push
sub
adc
ret
lahf
cmp
mov
push
frstor
pop
stc
js
aaa
ja
loop
les
pop
adc
cmp
call
push
sub
adc
add
cmp
pop
adc
lds
xor
add
lcall
mov
xchg
xor
loopne
mov
pop
adc
mov
push
inc
lea
sub
adc
in
jne
jecxz
cmp
cmp
je
mov
xchg
aaa
push
adc
jne
pushf
or
mov
sub
adc
ss
cmp
push
mov
shlb
sub
into
into
lock
imul
clc
pushf
jno
jo
pop
repz
add
adcl
ret
out
std
mov
sbb
cmpsl
push
imul
test
pop
adc
jg
loop
mov
addr16
sti
repz
pop
adc
sub
xchg
sbb
adc
sbb
les
adc
fisubl
jg
xchg
sbb
jnp
clc
jbe
popa
push
imul
or
stc
mov
inc
jae
sub
adc
jp
or
push
jae
pop
leave
cmpsb
mov
pop
adc
and
addr16
iret
dec
jmp
adc
ds
jae
push
xor
sub
pop
adc
imul
shll
ficomps
mov
fs
adc
je
jo
add
out
sub
pushf
aad
xor
dec
and
jge
xchg
add
mull
cld
cli
sub
mov
pop
adc
repz
push
fcomp
cs
adc
fmuls
lret
outsl
jecxz
jg
arpl
pop
and
pop
adc
aas
gs
mov
adc
add
insl
ja
vpaddb
xor
push
mov
xchg
jp
jnp
inc
jle
sbb
adc
jp
inc
inc
sti
mov
xchg
mov
pop
sbb
inc
xor
adc
push
int
in
or
call
sbb
xor
jns
xchg
pop
dec
stc
push
ss
mov
dec
lahf
xorb
adc
sub
stc
fdivrs
cmp
pop
je
jmp
pop
adc
test
cld
xor
adc
xchg
jne
inc
or
push
xchg
cs
sbbl
rcl
repz
outsb
xor
imul
xorb
repz
jg
and
cmpsb
inc
lret
inc
xor
adc
movsl
xchg
xor
adc
jl
iret
ljmp
dec
cwtl
cs
mov
mov
or
ret
pop
adc
pusha
int
hlt
mov
lret
outsl
hlt
xor
lcall
jae
std
lods
jg
add
rorb
or
xor
adc
ds
daa
outsb
adc
mov
push
popa
adc
or
sub
cmp
sub
pop
adc
lods
inc
mov
jl
jmp
cmp
mov
pop
adc
in
jb
mov
xor
adc
push
xchg
xor
pop
adc
scas
enter
lret
fisubs
cs
in
jne
jns
xchg
ficomps
push
mov
jbe
xor
adc
mov
jecxz
stc
movsl
add
cwtl
loop
in
dec
push
repnz
mov
aam
xor
jg
arpl
cltd
dec
xlat
jge
movsl
and
pop
adc
arpl
iret
ljmp
dec
cwtl
cs
mov
mov
or
and
pusha
int
hlt
mov
iret
outsl
jp
enter
xor
adc
std
lods
iret
outsb
stc
add
mov
xor
adc
xchg
mov
mov
cmp
pop
adc
loopne
cmp
popf
stos
lds
add
mov
xchg
mul
mov
pop
adc
and
xor
repnz
xchg
or
sahf
dec
or
lcall
stos
sbb
sbb
sbbl
pop
cmp
in
sahf
js
out
xchg
fldcw
xor
rcrb
xchg
jae
push
sub
fwait
popf
loopne
out
dec
sbb
in
mov
cld
pop
xor
fwait
sub
jg
cmpsl
sbb
pop
adc
loopw
call
inc
popf
xor
loopnew
inc
xchg
ss
add
shrl
push
out
insb
mov
xchg
xor
jecxz
pusha
fmuls
ret
pop
adc
cltd
jle
or
scas
popa
mov
das
pop
adc
mov
mov
or
inc
push
out
jno
out
or
push
out
jne
or
out
loope
ljmp
int
xor
sub
sub
loopne
jecxz
inc
xlat
push
aad
add
dec
cmp
add
jp
jle
push
ja
enter
pop
scas
or
jo
mov
pop
or
mov
and
mov
hlt
dec
lret
or
adc
testl
pop
dec
pushl
cmp
cmp
mov
arpl
inc
ds
ds
lods
test
xchg
mov
dec
aaa
enter
test
pop
adc
insl
or
aaa
mov
lods
xchg
in
cmp
push
cmpl
test
push
add
shlb
mov
dec
imul
aaa
pop
adc
sbb
jb
daa
adc
fldl
ds
mov
scas
add
cmp
sbb
pop
adc
jbe
in
mov
leave
xchg
inc
jno
mov
pop
adc
inc
into
sahf
sahf
mov
mov
add
cmp
adc
out
idivl
xor
popa
ljmp
sub
popa
xor
xchg
xchg
dec
jg
pop
cs
or
in
out
jle
loopne
xchg
jns
xor
stc
mov
hlt
test
insl
push
push
xor
or
mov
cmp
adc
popf
arpl
mov
out
mov
inc
test
sub
xchg
cs
pop
dec
mov
in
ficomps
inc
push
mov
xor
movsl
insb
cmp
adc
pusha
out
in
mov
mov
lahf
xor
nop
cmp
adc
sbb
mov
fdivrl
popf
cmp
pop
mov
add
xor
arpl
sbb
push
dec
lret
sti
sub
jge
mov
inc
inc
jl
fs
push
outsb
pushf
cmp
mov
sbb
cli
mov
xor
mov
test
sub
pop
adc
pop
push
shl
and
xor
xor
arpl
mov
jnp
cmp
adc
add
mov
sub
jle
pop
inc
mov
cmp
adc
in
imul
mov
pusha
cmp
xchg
mov
out
mov
jo
pop
adc
pushf
pop
cmp
xorl
pop
cmp
pop
js
out
call
pushf
cmp
adc
fwait
pop
cmp
inc
adc
pop
lret
ror
cli
sarl
enter
mov
sbb
inc
push
cmp
sbb
mov
jmp
jae
fldenv
jl
xchg
jg
and
cmpsb
inc
mov
arpl
lock
mov
jo
pop
adc
xchg
mov
pushf
xor
movl
adc
push
cmp
dec
or
das
mov
ss
inc
icebp
call
inc
lcall
mov
cltd
jecxz
pop
push
cmp
out
int
xchg
sbb
call
icebp
nop
ja
add
jl
sub
cli
loop
jmp
mov
sbb
dec
mov
cmp
mov
lods
push
adc
ds
adc
ss
and
jns
ds
adc
add
jge
test
fwait
xor
mov
in
xor
push
ds
adc
repnz
adc
cmp
movb
loope
pusha
fsubrs
push
hlt
mov
clc
std
jge
sbb
fldcw
hlt
fisttpll
cli
push
adc
aas
je
out
jle
imul
rorl
push
jns
and
ljmp
mov
arpl
stos
dec
imul
loopne
lret
jns
repnz
fidivrs
int3
dec
aam
sarb
adc
cmp
cmp
xchg
jne
orl
pop
adc
lds
mov
adc
orb
das
or
pop
adc
lret
sbbb
cmp
mov
pusha
inc
pop
adc
xorb
jle
inc
pop
adc
aam
pop
adc
imul
shll
fmulp
mov
mov
and
ja
loop
mov
xor
add
sub
push
jmp
push
fmuls
xchg
xchg
fwait
mov
pop
cmp
hlt
xchg
mov
nop
mov
aad
mov
inc
adc
or
ret
push
cli
es
cmp
adc
xchg
cmp
in
mov
adc
pop
fadds
adc
fnsave
aas
pop
int3
mull
adc
or
cmp
xor
adc
xchg
mov
cmp
inc
pop
adc
mov
rolb
adc
into
pusha
adc
cmp
adc
push
loopne
pop
adc
xor
inc
pop
adc
roll
cmpsl
popf
int3
ja
push
pop
out
add
or
or
cmpsb
lock
adc
dec
fdiv
mov
mov
inc
pop
adc
jbe
cmp
adc
jae
shlb
pop
adc
mov
sbb
pop
movsl
mov
jnp
inc
pop
adc
cmp
adc
orb
js
push
out
popf
dec
fcompl
xor
inc
pop
adc
icebp
int3
lcall
sbb
adc
or
xchg
cmc
loop
mov
adc
dec
lret
add
loop
ss
in
int
std
lods
jnp
mov
lock
pop
adc
xchg
mov
mov
aad
xor
pop
dec
pop
sub
xchg
ja
imul
scas
mov
lret
and
pop
adc
ds
daa
loope
mov
jnp
inc
pop
adc
pop
push
rorb
insb
inc
pop
adc
arpl
push
mov
out
aas
mov
mov
test
inc
pop
adc
icebp
int3
lcall
sbb
pop
adc
cmc
les
imul
sahf
jnp
inc
pop
adc
ds
daa
push
xor
push
jnp
inc
pop
adc
add
mov
mul
mov
inc
pop
adc
and
inc
pop
adc
cli
les
adc
rolb
dec
pop
adc
mov
jl
fstps
js
rorb
adc
mov
das
jns
icebp
fisubl
into
push
pop
sub
adc
insl
pusha
lock
add
scas
xor
fimull
mov
xchg
sbb
and
dec
pop
adc
cli
les
adc
mov
cmp
mov
fwait
aam
add
adc
add
cmp
pop
adc
lds
xor
sub
dec
pop
adc
std
lods
adc
adc
mov
dec
pop
adc
jae
cmp
adcb
inc
mov
dec
pop
adc
inc
pop
cmp
adcb
or
pop
mov
adc
cld
into
cwtl
inc
fdivr
mov
jp
xor
ja
or
ds
andb
pop
adc
cmp
in
inc
mov
adc
cmpsl
inc
cs
pop
adc
inc
popa
push
fidivs
jne
popf
mov
cmp
jge
cmp
mov
out
lcall
popa
cmc
fstpl
lods
cli
test
sbb
es
das
ja
aam
cmc
xlat
fdivrp
dec
pop
adc
repz
call
jns
test
stos
cmp
mov
ret
inc
ficoml
repnz
lret
mov
lahf
call
adc
enter
pop
mov
pop
jnp
int
outsl
mov
repz
mov
test
stc
je
sbb
lods
lea
add
sub
jecxz
nop
dec
pop
adc
das
push
dec
fwait
shll
push
stc
push
cmp
jae
add
or
roll
mov
imul
lods
int
and
pop
enter
mov
dec
dec
rorb
mov
mov
ja
lods
dec
jl
add
test
cmpsl
cmpsl
orb
sbb
imul
jns
jnp
xchg
or
jae
testb
pusha
hlt
lret
into
sub
mov
addr16
div
adc
ss
inc
repnz
cmp
jnp
inc
lahf
jmp
subl
fwait
in
jnp
test
mov
and
push
pop
adc
and
xchg
fidivrs
out
cmp
cld
pop
iret
mov
stos
sbb
push
pop
adc
icebp
adc
inc
add
xchg
lock
les
imul
xor
add
icebp
test
shl
pop
leave
pop
cmpsb
pop
cmp
and
push
and
dec
push
mov
sbb
lcall
sbb
in
into
jmp
bound
cmp
pop
mov
cmp
in
cmp
inc
mov
daa
cmp
mov
dec
or
mov
mov
cmp
push
xor
rcll
mov
sbb
sbbl
xorl
in
and
out
sbb
insl
rcl
xor
or
arpl
inc
in
js
nop
negb
xchg
iret
in
mov
cmp
lahf
xor
arpl
push
cmp
xor
mov
cmpl
adc
cs
jl
iret
sahf
sub
jecxz
call
inc
lcall
shrl
push
rorb
out
test
jl
xchg
mov
mov
js
xor
mov
pop
cmp
out
or
jae
iret
mov
mov
out
call
push
pushf
out
xor
mov
or
dec
mov
cs
push
hlt
iret
sahf
sub
int
inc
jg
mov
data16
std
lods
add
sbb
mov
stos
jae
fldenv
mov
mov
lret
adc
or
hlt
loop
stc
pushf
cmp
xor
cmp
sbb
mov
inc
mov
nop
push
sub
push
out
stc
movsl
fisttpll
xchg
iret
in
mov
xor
arpl
mov
and
push
jle
cs
dec
hlt
iret
sahf
sub
push
jecxz
fnstsw
pop
adc
add
arpl
cmp
push
pop
adc
rcrl
fistpl
hlt
push
pop
adc
xchg
pop
cmp
inc
std
shll
dec
push
pop
adc
out
lcall
sbb
pop
adc
push
subl
pop
adc
scas
int3
mov
je
in
cmp
adc
hlt
inc
mov
sub
in
fists
push
pop
adc
push
xor
aas
jg
inc
or
into
xor
pop
adc
xlat
fwait
cmp
mov
into
and
add
scas
jle
xchg
jae
cmp
inc
leave
xlat
shr
and
pushf
push
pop
adc
push
out
into
fwait
and
adc
rcll
lods
cld
push
pop
adc
jl
pushf
je
mov
push
push
pop
adc
insb
aam
jle
inc
cmc
push
pushf
add
adc
in
pop
mov
nop
pop
loope
andl
push
pop
adc
push
dec
and
enter
ss
popa
hlt
inc
test
mov
cmc
ret
lcall
fstpt
dec
mov
loopne
pop
adc
inc
or
hlt
xlat
xor
hlt
pop
add
pop
adc
dec
sbb
dec
lret
sbb
cmc
mov
xor
adc
mov
sub
cmp
or
mov
adc
decb
je
cmp
lods
mov
out
mov
aam
movsb
jae
std
mov
mov
and
movsl
int
bound
daa
iret
dec
sub
mov
sbb
imul
xor
cmp
xchg
mov
sbb
mov
in
jns
pop
rclb
fdiv
dec
sbb
shlb
mov
addr16
push
gs
mov
jmp
pop
adc
add
xchg
rclb
inc
es
and
mov
push
pop
adc
mov
adc
lea
jne
adc
test
adc
mov
ret
outsb
mov
cs
xchg
andb
rcll
es
imul
hlt
mov
mov
aam
pop
adc
mov
rorl
dec
in
push
push
mov
cwtl
mov
push
pop
push
mov
sbb
xor
pop
pop
adc
stc
int3
lcall
adc
std
lods
pop
outsb
test
rorb
out
sbb
jl
xchg
jg
and
cmpsb
inc
stos
jbe
mov
sbb
enter
add
inc
mov
pop
adc
movsb
rcrb
inc
mov
daa
lock
pop
pop
adc
add
mov
xchg
pop
pop
adc
arpl
or
mov
movsb
dec
scas
mov
into
sahf
lcall
jle
mov
pop
pop
adc
lods
lock
cmp
cmp
xor
pop
adc
outsb
test
lcall
pop
pop
adc
jo
push
cs
icebp
int3
cmp
xchg
pop
lcall
sbb
call
icebp
movsl
rcrb
dec
arpl
ljmp
pop
xchg
aam
xor
pop
xor
repz
outsb
enter
arpl
jae
mov
ljmp
sbb
xchg
mov
rcr
in
js
nop
xchg
clc
icebp
lods
cmp
xchg
mov
sub
into
jne
je
cmp
andl
ljmp
mul
mov
mov
pushf
cmp
nop
ja
add
mov
lock
sub
pop
adc
push
out
push
dec
lret
jle
adc
or
or
cmp
push
mov
pusha
pop
pop
adc
add
cmp
popf
ret
xlat
pop
mov
adc
int3
lcall
sbb
or
xor
mov
mov
into
test
pop
adc
scas
lock
pop
adc
xchg
jbe
add
mov
mov
pop
or
pop
pop
adc
cmp
popa
cmp
testl
popf
cmp
lods
ficomps
or
sbb
cmp
rol
and
insl
xchg
xchg
xor
pop
pop
adc
subb
dec
sbb
test
xor
subb
loopne
fmuls
mov
push
enter
mov
or
sub
adc
popf
push
test
leave
mov
jne
rcll
movsl
fcomps
adc
mov
scas
xor
movsl
aad
outsb
js
ja
cld
pop
pop
adc
mov
lea
pop
cmp
inc
or
lret
pop
push
pop
dec
in
push
jmp
add
dec
mov
mov
shl
movsb
in
stos
test
pop
pop
adc
mov
pop
pop
adc
or
mov
add
pop
adc
shrl
inc
mov
mov
pop
adc
and
sbb
rclb
fsubrs
xchg
out
ficomps
mov
xchg
jb
push
dec
sbb
xlat
cmc
call
je
sub
ja
es
inc
jmp
pop
adc
aaa
mov
das
adc
adc
push
adc
andb
add
push
gs
repz
scas
and
sti
push
repz
sbb
loop
movsb
sub
pusha
pop
adc
adc
inc
cmp
sub
pusha
pop
adc
jae
push
jg
cmp
subb
stos
sarl
in
push
test
add
fistl
dec
adc
test
loopne
stc
push
dec
fs
pop
adc
and
xchg
out
ja
mov
adc
loopne
mov
loop
out
data16
push
mov
mov
cld
pushl
cmp
and
bound
adc
outsl
sbb
data16
xor
addr16
jns
sub
jae
mov
jns
xchg
lret
push
sbb
sbbb
ja
add
mov
pop
adc
out
fwait
xor
mov
daa
adc
mov
jnp
bound
adc
add
mov
sub
jle
pop
inc
mov
bound
adc
insl
pop
lock
cmp
ret
inc
jbe
mov
bound
adc
scas
mov
mov
sbb
jne
jae
cmp
sbbl
inc
jbe
mov
out
pop
enter
xor
sbb
arpl
inc
loop
js
nop
mov
cs
outsb
loop
in
dec
push
out
mov
shlb
adc
and
mov
ret
iret
fldcw
pop
adc
pop
pop
imul
and
fsubl
popf
or
pop
mov
add
xor
arpl
cmp
sahf
sti
add
adc
xchg
inc
inc
pushf
sbb
and
cmpsb
inc
clc
stos
ds
xchg
mov
out
mov
ftst
popa
ret
xchg
mov
arpl
adc
sbb
dec
fs
adc
mov
cwtl
fs
adc
cmp
out
out
xchg
sub
call
sub
jecxz
stc
movsl
xor
iret
adc
shl
mov
pop
xor
adc
std
xor
pop
out
pop
or
inc
repnz
or
in
shl
jnp
test
les
adc
sbb
shr
mov
enter
js
push
ret
pushf
ret
les
sarl
sarb
xchg
jle
and
movsb
inc
stc
stos
and
sbb
mov
cmp
ja
mov
sub
aaa
push
sub
nop
and
mov
push
faddl
stos
mov
lret
mul
loop
mov
adc
cmpsb
inc
cs
pop
adc
ret
rorb
out
rclb
test
inc
fldcw
sbb
adcb
ret
or
mov
sbb
cwtl
popw
adc
lods
cmp
insb
xchg
loope
sahf
dec
mov
jg
loop
nop
or
pop
adc
pop
pop
addr16
adc
and
addr16
adc
lds
sbb
jne
mov
dec
push
scas
ret
mov
mov
xor
adc
addr16
adc
push
mov
scas
adc
loop
sub
pop
or
adc
push
cmp
jne
sbb
mov
sbbl
enter
dec
decb
dec
jmp
fxch
cltd
xlat
xchg
jae
in
cwtl
xchg
lds
fcompl
imul
add
pop
adc
add
sbb
into
pop
push
xchg
int3
aam
pop
jo
std
popa
and
mov
movsl
mov
aad
jg
xor
in
pop
adc
test
test
enter
cmp
outsb
loope
lea
addb
imul
push
or
imul
cmc
sub
pop
adc
mov
sub
in
insb
int3
push
adc
xchg
pop
adc
xchg
xchg
cmp
test
cmp
pop
adc
or
fcoms
mov
aad
dec
sbb
ficomps
insb
imul
xchg
xor
pop
sbb
xor
in
mov
pop
xor
cmpsb
jmp
xchg
pop
ljmp
or
cli
mov
adc
stos
inc
mov
pop
fdivr
mov
lret
cmp
sti
jne
aas
test
jl
rorb
movsb
push
cmp
sbb
add
mov
cmc
out
sub
pushf
mov
and
ficompl
js
push
sbbb
adc
pop
adc
ror
jae
insb
pop
adc
enter
adc
lock
push
cs
jns
push
mov
jg,pt
lock
jecxz
mov
arpl
jae
jge
sub
int
add
adc
aas
xor
std
inc
cmp
mov
xor
dec
mov
jns
push
out
ljmp
mov
adc
add
cmp
imull
icebp
dec
loop
in
fldenv
pop
adc
adc
shl
push
imul
cmp
rcrl
mov
imul
jbe
outsb
pop
adc
stos
jecxz
mov
lock
fnsave
addb
push
data16
xor
cmp
loope
int3
in
outsb
pop
adc
call
add
shl
adc
adc
cmpsl
pop
cmp
inc
movsl
rcl
adc
pop
lret
add
cmp
into
lcall
push
adc
insb
mov
pop
pop
cs
jae
iret
mov
sub
jle
mov
push
dec
rcrl
sbb
cmpsb
popf
mov
int3
lahf
cmp
in
into
pushf
xor
arpl
arpl
icebp
hlt
jle
adc
or
or
cmp
xchg
mov
insl
inc
mov
inc
shll
nop
ja
add
pop
mov
cmp
cltd
xor
adc
jmp
insb
fstpt
loop
ja
sub
rcrb
xchg
mov
mov
mov
xor
je
or
jge
jecxz
cmp
inc
mov
imul
insb
shl
in
pop
adc
movsl
sbb
shll
movsb
fldt
out
sahf
ja
ja
adc
stc
push
xlat
inc
pop
and
or
adc
push
shr
out
jb
les
adc
inc
xchg
xor
subb
xchg
fmuls
mov
jp
ret
fistps
inc
or
sbb
rcrl
int
pop
sbb
xor
dec
hlt
nop
jbe
cmp
push
stc
sub
xchg
sbb
jae
idivb
lods
mulb
nop
loope
es
mov
and
cmp
jae
pop
lret
mov
pop
loopne
popa
jno
mov
aam
sti
adc
inc
in
lea
sbb
add
int3
loope
mov
mov
xor
jle
xor
dec
fwait
sarl
push
cmp
jae
jge
sbb
fs
or
imul
lods
int
adc
outsl
xorb
in
pop
adc
mov
imul
test
shlb
adc
mov
and
incb
cld
jno
adc
sbb
outsl
inc
add
rolb
pop
adc
and
jb
daa
push
sbb
stos
fldl
lret
ret
repnz
mov
jae
adc
mov
addr16
cmpsb
fwait
push
xchg
pop
adc
xchg
mov
cmp
push
aam
jae
mov
push
test
add
xchg
aam
pop
adc
sarb
cmp
cld
ror
mov
clc
je
adc
icebp
and
sub
cwtl
sbb
adc
sub
dec
and
out
inc
jne
adc
cmp
jbe
xor
fnstsw
push
shll
jne
adc
sahf
jmp
cwtl
cmp
push
push
les
lock
adc
in
cmp
inc
movsl
fcmovnbe
xor
in
jbe
adc
movsb
pop
cmp
inc
adc
pop
cmp
adc
pop
fsub
int
xchg
int
mov
inc
roll
icebp
movsl
cwtl
jbe
adc
pop
out
in
mov
in
lret
pushf
xor
arpl
arpl
out
out
mov
pop
out
out
gs
leave
cwtl
cmp
inc
int
xor
outsb
rcl
hlt
sti
push
andl
insb
dec
xlat
icebp
loop
popf
xor
pop
mov
adc
int
lcall
xchg
sbb
xchg
das
js
cmc
rolb
aad
mov
pop
adc
outsb
mov
push
adc
into
in
mov
dec
lret
inc
and
icebp
mov
aas
jns
xchg
sahf
fwait
xor
push
jae
sbb
mov
nop
mov
pop
cs
scas
mov
sarb
adc
ds
daa
fsubrs
push
dec
lret
jae
adc
cs
adc
iret
sahf
sub
aaa
test
sbb
clc
cltd
iret
lahf
jnp
movsl
adc
pop
adc
pop
out
sahf
mov
rep
fimull
loopne
and
insb
jns
adc
dec
fucom
xor
jl
iret
fsts
ficomps
imul
adc
mov
jns
mov
cmp
mov
jnp
push
loope
lcall
push
xor
jne
or
cmp
jecxz
jne
mov
out
push
xor
shll
sbb
arpl
pop
sbb
js
nop
push
mov
cs
pop
je
iret
in
dec
into
repz
mov
outsl
xlat
mov
adc
and
cmp
popf
jg
pop
mov
adc
lret
int
inc
fninit
mov
lahf
pop
xor
je
or
jno
jecxz
xchg
jp
adc
dec
leave
mov
add
push
adc
cwtl
sub
addr16
jp
adc
xor
nop
jecxz
lcall
andb
jmp
adc
push
and
popa
push
inc
mov
out
shl
cmp
test
fdivrs
mov
out
xchg
les
adc
mov
push
xchg
xor
lret
mov
in
js
jno
popf
sbb
daa
out
movsl
jmp
or
inc
mov
fsubr
mov
gs
stos
cmp
in
shl
push
jnp
adc
shrb
mov
lcall
mov
adc
adc
imul
dec
dec
jo
jg
lock
xor
or
push
fdivr
mov
jb
xchg
pop
leave
divl
mov
xchg
sbb
fwait
cli
push
xor
aas
pop
mov
add
xlat
push
add
cmp
sbb
xchg
pusha
xor
mov
fs
dec
xchg
icebp
movsb
sub
push
xor
daa
mov
stos
mov
push
inc
testb
stos
pop
pop
mov
pop
imul
mov
sbb
xchg
daa
in
cwtl
and
xor
and
lahf
xchg
jl
adc
repz
adc
orb
addr16
sub
in
pop
dec
push
inc
in
mov
rclb
fwait
or
jo
cmpsb
sub
cmp
and
movnti
cltd
leave
inc
inc
mov
test
das
addb
shll
mov
cmp
mov
inc
adc
jl
lods
cli
inc
in
lds
rorb
pushf
cmpsb
out
jle
pop
insb
jb
push
mov
arpl
cld
mov
hlt
test
mov
dec
fmul
shll
xor
ja
add
fdivrl
in
inc
sbb
mov
sub
or
ret
xor
sahf
stos
sarb
jns
mov
mov
cmp
xchg
push
fwait
xor
in
dec
mov
inc
adc
push
cmp
test
ret
mov
mov
ss
mov
mov
sbb
add
push
cmp
mov
mov
pop
mov
jb
repz
jg
and
jne
test
cmp
orl
mov
cmp
mov
out
in
imul
aas
sbb
arpl
repz
js
nop
mov
cs
jns
loope
in
dec
repnz
mov
shll
arpl
cltd
enter
nop
mov
push
cs
scas
cmp
lret
or
out
lcall
push
mul
mov
cld
das
pop
mov
cmp
orl
pop
call
in
push
lock
stc
mov
dec
inc
pushf
cmp
addl
push
mov
dec
sarl
push
sbbb
xchg
dec
sahf
cmp
in
pushf
xor
mov
daa
fisubl
sahf
adcb
sbb
pop
adc
mov
mov
arpl
icebp
hlt
in
adc
icebp
dec
xchg
cmp
push
mov
lahf
xor
cltd
mov
jle
nop
mov
pop
cs
scas
je
lret
lret
fdiv
fs
xor
nop
jle
adc
push
testl
sbb
pop
adc
mov
adc
pop
jne
bound
out
jns
pop
adc
add
repz
or
sbb
enter
outsb
outsb
sub
mov
push
les
rolb
mov
push
mov
inc
adc
pop
cmp
mov
mov
hlt
jns
xchg
jge
and
cmpsl
inc
cld
test
ja
sbbl
mov
jecxz
call
fildll
shrl
aad
mov
mov
addb
xlat
cltd
and
push
ret
rcrb
jbe
sub
mov
adc
adc
dec
mov
loope
hlt
addb
aad
gs
or
sti
mov
jmp
sbb
fstpt
pop
adc
sub
xchg
sbb
xchg
cmp
pop
pop
fdiv
insb
adc
jmp
addl
sarb
adc
sbb
je
sub
clc
adc
addl
mov
pop
adc
jg
mov
mov
xchg
mov
sbb
mov
sbbl
enter
fadd
rorb
es
xlat
mov
in
push
stos
shll
loopne
inc
push
aaa
mov
mov
int
xlat
dec
xchg
icebp
shl
pop
je
je
pop
adc
mov
and
loop
addb
push
mov
bound
and
pop
imull
push
les
cmpsb
mov
adc
inc
push
push
and
pop
adc
mov
dec
fcom
lret
lret
stos
adc
xchg
je
pop
adc
les
inc
outsb
mov
in
inc
in
push
scas
inc
fxch
addl
or
hlt
in
outsb
sbb
pop
adc
or
lcall
cmp
scas
andl
push
test
adc
mov
lock
mov
je
pop
adc
xchg
out
jle
stos
mov
out
out
lret
hlt
xor
cli
mov
adc
stos
inc
test
pop
sar
mov
lret
cmp
xchg
push
dec
sbb
lock
adc
jae
loop
dec
inc
test
adc
xchg
sub
jl
dec
xchg
jns
push
ret
ffreep
push
mov
pop
adc
push
jecxz
jmp
in
ljmp
mov
cwtl
test
adc
mov
push
lret
xor
mov
add
xor
les
push
out
fmull
psubusw
ja
icebp
out
sub
adc
add
push
and
adc
hlt
jle
adc
sbb
xchg
adc
mov
mov
insb
mov
shl
and
xchg
icebp
fisubs
ret
inc
dec
dec
mov
inc
ror
icebp
and
push
sbb
pop
int
call
or
fistl
dec
xchg
adc
mov
icebp
lds
add
or
cmp
movsb
xchg
adc
mov
mov
arpl
or
lock
sub
pop
adc
pusha
vmread
xchg
mov
mov
sbb
sub
cmp
out
or
gs
cwtl
cmp
inc
mov
rcl
xor
sbb
arpl
cli
adc
js
nop
inc
mov
cs
pop
xchg
loop
in
mov
outsb
ret
das
push
xchg
adc
jge
insb
dec
iret
icebp
loop
popf
xor
sahf
cmp
in
add
push
cmp
aaa
arpl
in
jmp
pop
mov
cmp
xchg
dec
lcall
sbb
in
cltd
enter
movsl
movsb
xchg
adc
inc
out
in
dec
lret
int
xor
shll
nop
enter
repnz
mov
add
cmp
out
jmp
push
lods
add
bound
cmc
gs
adc
sub
adc
out
mov
jnp
outsb
mov
mov
outsb
les
loop
into
or
lcall
and
loopne
mov
adc
mov
rcl
add
push
ret
shl
and
mov
adc
cmpb
dec
fadd
nop
popa
and
lea
xchg
mov
imul
adc
pop
adc
sarb
das
push
inc
cld
cwtl
sbb
adc
pop
adc
imul
mov
int3
mov
movsl
inc
daa
add
dec
scas
xor
movsl
std
inc
xchg
dec
ret
sub
lods
shll
adc
test
push
jp
ds
inc
mov
jb
scas
adc
loop
sub
pop
or
or
lahf
pop
jmp
and
pop
leave
xchg
add
fcmovu
in
pop
mov
pop
adc
cmpb
fucomp
movsl
dec
rorl
stos
xchg
ret
es
pop
adc
mov
imul
lods
clc
add
pop
adc
clc
std
pop
je
cmc
and
xchg
popl
xor
jle
mov
jecxz
adc
test
aad
daa
sti
outsb
inc
add
call
xorl
cltd
or
xchg
pop
or
cld
leave
cmpb
cltd
gs
repz
scas
and
sti
ljmp
inc
in
data16
pop
inc
sahf
add
xor
jmp
push
mov
cmp
mov
adc
mov
mov
xchg
lahf
iret
adc
dec
fisubl
shll
mov
pop
dec
dec
dec
cmp
add
imul
lods
cli
push
push
pop
shlb
in
or
in
cmpsl
out
jle
loopne
test
adc
lret
inc
lea
hlt
mov
stos
subl
ljmp
inc
fnstsw
repz
or
stc
xor
mov
adc
mov
or
add
add
cs
add
mov
cmc
out
je
pop
adc
and
mov
adc
aad
mov
push
scas
movsl
out
int
dec
lret
cld
lcall
inc
clc
stos
ds
stc
adc
dec
push
loop
cmp
push
mov
xor
int
jg
mov
mov
or
mov
movsb
dec
scas
aam
into
sahf
lcall
inc
shlb
mov
adc
dec
dec
lock
cmp
cmp
jno
mov
push
fistl
outsb
rcl
hlt
andl
pop
or
js
push
lret
push
mov
mov
jns
insb
cmp
loopne
sbb
cmp
add
cmp
jb
imul
ja
add
adc
inc
sub
popf
test
mov
add
in
ficomps
mov
daa
push
aam
push
dec
lret
sti
hlt
call
hlt
leave
sahf
jnp
mov
adc
push
or
jmp
jns
inc
arpl
adc
shlb
jp
xor
jo
sbb
lea
adc
dec
leave
jecxz
jmp
out
fstps
pop
adc
fimuls
shll
dec
mov
pop
adc
jbe
mov
sub
mov
int
mov
out
xor
cmp
out
int3
les
negl
fistl
mov
rcl
hlt
xchg
push
cmp
insb
mov
adc
sbb
rol
cmp
mov
adc
or
sbb
fcomps
movsl
sbb
pop
adc
dec
out
in
push
in
fcomps
pop
adc
cld
pop
mov
jbe
adc
inc
popl
adc
inc
push
jp
nop
jne
dec
jne
push
aas
jle
int3
sahf
mov
inc
repz
mov
mov
fdivrl
mov
shll
adc
test
cmp
into
repz
call
pop
adc
mov
pusha
fsubr
loopne
pop
adc
push
xor
jne
aas
dec
fmulp
or
insl
loope
or
pop
adc
stc
insl
lahf
or
fimull
mov
mov
adc
outsl
ret
ljmp
mov
pop
adc
js
jecxz
dec
stos
jbe
jge
test
pop
movsl
xchg
test
ja
pop
nop
pop
adc
mov
xchg
sub
test
adc
loop
sub
pop
or
adc
push
or
data16
adcl
pop
adc
in
jecxz
test
jmp
imul
fisttpll
icebp
inc
and
loopne
pop
adc
xor
jecxz
fwait
sahf
pop
rolb
cwtl
cmpsb
xchg
add
pop
adc
xchg
mov
dec
aaa
xor
pop
adc
insl
and
aaa
in
xchg
pop
adc
cmp
xchg
pop
adc
push
stos
mov
xchg
stc
inc
push
loopne
xchg
pop
adc
mov
push
mov
ja
add
xchg
pop
adc
or
add
pop
cmp
stos
jbe
enter
mov
pop
cli
div
rorl
mov
adc
xchg
xchg
pop
adc
xchg
lcall
adc
mov
jnp
sub
xchg
loopne
adc
dec
sbb
iret
or
add
add
pop
adcb
ret
lret
sbb
jge
pop
movsb
xchg
pop
adc
cmpsb
js
push
mov
mov
xchg
push
sub
fistpll
mov
push
dec
js
test
xchg
pop
adc
cmp
cmpsl
dec
sbb
pop
or
xchg
cmc
loopne
inc
jb
aaa
mov
jo
mov
pop
adc
into
mov
insl
lcall
xchg
pop
adc
shlb
test
lods
mov
jns
push
mov
xor
adc
mov
jnp
xchg
pop
adc
pop
push
shl
and
fistpl
mov
daa
lock
pop
adc
jae
cmp
rcrb
add
xchg
pop
adc
loopne
cmp
popf
stos
cmp
xor
xchg
pop
adc
lcall
xchg
or
enter
adc
push
mov
sbb
xchg
pop
adc
mov
mov
mov
xchg
pop
adc
lea
loop
cmp
fbstp
mov
push
mov
dec
lock
jnp
cmp
inc
in
mov
dec
jno
mov
add
shl
mov
pop
adc
mov
cmp
inc
in
rorl
fcoms
iret
out
call
inc
lcall
sti
jns
loop
xlat
add
pop
incb
pop
adc
pop
iret
out
call
inc
lcall
repz
loop
testl
xchg
pop
adc
cmp
out
call
inc
lcall
pop
jp
loop
pop
add
pop
lret
add
push
into
lcall
push
adc
ret
dec
repz
popf
stos
cmp
add
in
ficompl
mov
daa
mov
mov
jnp
xchg
pop
adc
add
mov
adc
mov
xor
jne
bound
and
rorb
push
fcoms
mov
pusha
hlt
out
sub
adc
xorb
addl
mov
pop
in
mov
outsb
popf
ds
mov
fnstcw
inc
mov
outsb
mov
pusha
loope
std
cmpsl
and
or
cmp
push
loop
fcmovnb
jnp
mov
aad
mull
push
jb
addr16
pop
int3
inc
jne
shll
cwtl
pop
adc
xorb
dec
fadd
nop
nop
xchg
jo
lahf
jle
bound
mov
mov
out
mov
inc
xor
mov
sbb
jmp
lock
sub
jle
sbb
fs
xchg
cmpl
sahf
xchg
mov
loopne
subb
das
push
jnp
popa
xchg
lods
xchg
cmpsb
cmp
ja
cld
cwtl
pop
adc
imulb
in
dec
cltd
pop
adc
addr16
hlt
mov
and
jae
outsb
xor
fs
inc
iret
loope
mov
mov
xor
out
jle
das
sbb
nop
cltd
pop
adc
sbb
movsb
cmp
mov
cmp
sbb
xchg
jo
mov
sub
popa
push
push
clc
mov
push
xchg
out
jp
bound
les
call
adc
mov
adc
inc
push
and
insl
xchg
mov
nop
mov
aad
mov
les
xchg
shr
ret
push
adc
pop
adc
mov
ja
sub
xchg
sbb
bnd
stos
dec
movsl
cmp
adc
fimuls
mov
daa
sbb
in
outsl
or
push
imul
ja
enter
popa
js
xor
lret
inc
adc
sub
xchg
push
lea
or
jg
sbb
xchg
movsl
popa
pusha
stc
lods
pop
mov
test
fwait
pop
adc
outsb
das
bound
or
fdivr
int3
subl
jle
fwait
pop
adc
outsb
push
sti
inc
push
fimuls
cwtl
testb
stos
or
inc
jns
or
imul
pop
adc
sahf
or
xlat
hlt
orl
daa
les
adc
popf
sub
pop
int
call
loopne
ss
fwait
push
cmp
arpl
and
pushf
pop
adc
xor
popf
pop
adc
fxch
lcall
sbb
adc
or
pop
lock
xor
pop
adc
dec
lret
cld
lock
adc
sti
adc
enter
adc
mov
push
cs
fidivrl
jns
test
pushf
inc
mov
popf
pop
adc
lods
inc
lock
cmp
push
bound
sarb
jmp
xchg
rolb
insb
subl
sub
movsl
and
xchg
icebp
lahf
ret
cmp
pop
adc
pushf
inc
mov
mov
and
jmp
icebp
mov
push
or
sbb
shl
and
mov
dec
lds
fsts
js
mov
stos
push
lea
inc
sar
cltd
push
push
jns
movsl
lods
sahf
pop
adc
xor
iret
in
mov
pop
cmpsb
fwait
xor
arpl
arpl
out
test
pop
adc
mov
jg
and
lret
lret
sbbb
jns
nop
ja
add
jge
sub
call
sti
shll
gs
enter
adc
mov
push
sub
jl
insb
mov
jns
xor
jecxz
mov
shll
cmp
imull
leave
dec
pop
push
jbe
adc
fwait
xor
mov
and
out
sub
pop
adc
and
repnz
jle
and
mov
push
clc
jne
sub
jecxz
cmp
push
pusha
fs
rcrl
mov
cmc
jl
mov
outsb
mov
out
out
into
int3
mov
mov
jns
aad
enter
push
ret
add
clc
mov
adc
jp
andb
xchg
cmp
jo
pop
adc
jl
xor
pop
mov
fadds
adc
stos
pusha
ret
pop
adc
fimuls
pop
adc
mov
popa
push
adc
pop
shl
xlat
aas
cmp
mov
ret
pop
adc
jecxz
flds
adc
aas
popa
push
adc
popa
fsubl
lret
cmp
jno
adc
sbb
pop
adc
lcall
aad
push
ja
out
flds
adc
pop
adc
mov
leave
rcr
pop
adc
lds
push
adc
mov
fwait
rcr
adc
mov
popa
push
adc
mov
cltd
scas
dec
popa
push
adc
or
and
icebp
inc
jno
adc
int3
flds
adc
pop
adc
and
mov
mov
popf
add
movsl
and
nop
xchg
adc
add
push
adc
rcr
adc
cmpsl
jae
push
adc
and
adc
aas
and
test
adc
arpl
loop
sbb
pop
aaa
leave
sub
add
std
inc
jno
adc
faddl
adc
adc
adc
xor
jecxz
jno
adc
mov
pop
adc
test
rol
pop
adc
or
hlt
fiadds
adc
cmpsl
test
les
adc
and
clc
fiadds
adc
es
pop
adc
add
stc
mov
or
inc
and
popa
push
adc
push
xchg
fstpl
ja
dec
inc
jno
adc
cld
push
or
jmp
pusha
pop
or
pop
lock
jae
outsb
bound
adc
repnz
xor
adc
mov
push
adc
mov
stos
sub
adc
loopne
aam
int3
push
jno
adc
dec
pop
or
dec
mov
in
pop
cltd
xor
push
bound
adc
cmp
mov
push
pop
les
push
adc
fimull
mov
push
sbb
hlt
pop
bound
adc
xlat
les
fmull
sahf
inc
jno
adc
add
or
jp
adc
or
cwtl
mov
bound
adc
inc
out
cmp
mov
dec
bound
push
adc
or
and
push
or
pushf
out
mov
bound
adc
ror
lcall
mov
mov
push
adc
pop
or
sub
fadds
or
inc
icebp
or
push
daa
sub
mov
popa
push
adc
cmp
das
pop
pop
dec
jo
popa
push
adc
and
in
xor
popa
push
adc
pop
cmp
int
icebp
popa
push
adc
inc
out
cmp
out
add
adc
in
inc
sub
punpckldq
adc
mov
jecxz
sub
push
adc
popa
or
inc
icebp
push
or
push
inc
movsl
xor
push
bound
adc
div
mov
mov
mov
outsb
call
int3
lcall
and
test
outsl
out
aam
mov
adc
push
add
pop
dec
int
inc
jno
adc
lock
or
sti
sbb
xchg
mov
jae
hlt
movb
in
sti
fwait
xor
lea
or
or
pop
adc
mov
add
and
adc
pop
adc
sbb
mov
and
adc
cmp
cmp
pop
adc
lods
imul
or
test
pop
jecxz
nop
bound
adc
mov
movsl
sbb
or
dec
mov
cmpsb
bound
adc
pop
add
pop
js
pop
and
adc
ja
bound
adc
inc
loop
cmp
jge
nop
jb
adc
mov
iret
andb
adc
icebp
push
adc
mov
in
in
repz
cmp
and
adc
and
adc
mov
bound
adc
ret
mov
cltd
dec
and
adc
out
bound
adc
cltd
mov
push
adc
adcl
or
mov
cmp
shlb
into
scas
mull
adc
fstps
test
cmp
ret
pop
adc
cwtl
scas
mov
add
flds
adc
adcb
ficomps
push
ret
sbb
flds
adc
lret
fndisi(8087
std
pop
inc
data16
pop
adc
mov
push
push
fwait
rcr
adc
mov
fcoms
out
les
adc
aad
aas
jae
jno
das
insb
test
mov
mov
pop
mov
pop
adc
mov
xor
push
or
daa
dec
stos
jbe
popf
mov
cltd
push
mov
andl
adc
sub
sub
cmp
jge
dec
nop
lds
adc
test
xor
sti
mov
lds
adc
mov
pusha
sahf
fnsave
lds
adc
cmpb
leave
in
pop
adc
arpl
push
jns
movb
cmp
ss
in
mov
movb
sarl
subl
and
aad
shrb
adc
jp
pop
or
sub
xor
pop
or
sub
adc
or
mov
test
jns
pop
pop
add
or
popa
jmp
mov
or
and
out
pusha
pop
or
into
adc
add
cwtl
jo
or
adc
scas
fdivrl
pop
or
stos
dec
cmpsb
addr16
sub
movl
jae
adc
pop
repnz
enter
repz
or
fistl
pop
and
adc
xlat
pop
cmp
andb
adc
cmp
mov
and
adc
icebp
push
adc
and
adc
stos
mov
or
popf
mov
js
or
outsl
mov
int3
lcall
jle
leave
shll
or
hlt
stos
ret
push
cs
add
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
call
xchg
xchg
xchg
nop
nop
mov
nop
nop
pop
xchg
xchg
xchg
nop
nop
mov
nop
nop
add
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
xor
xchg
xchg
xchg
nop
nop
mov
nop
nop
ret
xchg
xchg
xchg
nop
nop
mov
nop
nop
popl
xchg
xchg
xchg
nop
nop
mov
nop
nop
add
xchg
xchg
xchg
nop
nop
mov
nop
nop
push
xchg
xchg
xchg
nop
nop
mov
nop
nop
push
xchg
xchg
xchg
nop
nop
mov
nop
nop
push
xchg
xchg
xchg
nop
nop
mov
nop
nop
push
xchg
xchg
xchg
nop
nop
mov
nop
nop
jmp
xchg
loope
push
add
sbb
rolb
mov
nop
nop
call
xchg
xchg
xchg
nop
nop
mov
nop
nop
subl
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
and
xchg
xchg
xchg
nop
nop
mov
nop
nop
add
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
movzwl
xchg
xchg
xchg
nop
nop
mov
nop
nop
add
xchg
xchg
xchg
nop
nop
mov
nop
nop
cltd
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
div
xchg
xchg
xchg
nop
nop
mov
nop
nop
xor
xchg
xchg
xchg
nop
nop
mov
nop
nop
xor
xchg
xchg
xchg
nop
nop
mov
nop
nop
ror
xchg
xchg
xchg
nop
nop
mov
nop
nop
inc
xchg
xchg
xchg
nop
nop
mov
nop
nop
cmp
xchg
xchg
xchg
nop
nop
mov
nop
nop
jl
xchg
xchg
xchg
nop
nop
mov
nop
nop
call
xchg
xchg
xchg
nop
nop
mov
nop
nop
pop
xchg
xchg
xchg
nop
nop
mov
nop
nop
test
xchg
xchg
xchg
nop
nop
mov
nop
nop
je
xchg
xchg
xchg
nop
nop
mov
nop
nop
dec
xchg
xchg
xchg
nop
nop
mov
nop
nop
je
xchg
xchg
xchg
nop
nop
mov
nop
nop
dec
xchg
xchg
xchg
nop
nop
mov
nop
nop
je
xchg
xchg
xchg
nop
nop
mov
nop
nop
xor
xchg
xchg
xchg
nop
nop
mov
nop
nop
ror
xchg
xchg
xchg
nop
nop
mov
nop
nop
xor
xchg
xchg
xchg
nop
nop
mov
nop
nop
cmpw
xchg
xchg
xchg
nop
nop
mov
nop
nop
je
xchg
xchg
xchg
nop
nop
mov
nop
nop
sub
xchg
xchg
xchg
nop
nop
mov
nop
nop
and
xchg
xchg
xchg
nop
nop
mov
nop
nop
jmp
xchg
xchg
xchg
nop
nop
mov
nop
nop
add
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
cmpw
xchg
xchg
xchg
nop
nop
mov
nop
nop
jne
xchg
xchg
xchg
nop
nop
mov
nop
nop
and
xchg
xchg
xchg
nop
nop
mov
nop
nop
pop
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
jmp
xchg
xchg
xchg
nop
nop
mov
nop
nop
xor
xchg
xchg
xchg
nop
nop
mov
nop
nop
jmp
xchg
xchg
xchg
nop
nop
mov
nop
nop
xor
xchg
xchg
xchg
nop
nop
mov
nop
nop
jmp
rcrl
jl
cs
daa
outsb
rcr
sbb
stc
inc
push
inc
mov
pop
add
jnp
stos
ret
jbe
shl
pop
outsb
call
mov
aaa
mov
cli
insb
jp
or
in
int
dec
movntq
out
je
xchg
mov
mov
ja
push
adc
push
test
in
iret
test
ret
sub
xchg
mov
dec
mov
mov
or
int
mov
ret
sbb
mov
call
loop
or
xchg
fwait
mov
add
adc
pushf
cmp
xchg
pusha
pusha
lds
mov
pop
popa
cmp
sbb
out
leave
inc
jae
inc
ret
jle
pop
loope
xchg
sti
imul
xor
sub
pop
mov
mov
popa
xchg
push
add
mov
icebp
xor
mov
or
call
mov
sbb
push
lcall
hlt
xor
je
movsl
les
js
movsl
xchg
push
out
add
pop
push
dec
cld
call
lods
nop
cs
je
sbb
mov
dec
insl
push
insb
ja
mov
push
inc
inc
inc
jle
in
xlat
ret
gs
mov
mov
inc
jne
rcl
push
fs
loopne
push
xchg
add
mov
jmp
fistpll
xchg
cmp
les
leave
pop
jmp
mov
inc
xchg
out
mov
fldenv
in
popf
dec
movsl
and
aaa
and
pop
xor
loope
leave
mov
lock
mov
xchg
lods
cmp
dec
sub
sub
xchg
out
insl
xchg
cmp
ret
add
push
out
loope
or
loopne
outsb
dec
add
inc
jne
rcl
sbb
lret
in
inc
xchg
add
mov
jmp
fistpll
xchg
push
dec
lods
les
leave
pop
jmp
cmp
mov
xchg
inc
adc
and
jmp
xchg
xor
out
and
push
adc
test
mov
xor
xchg
loop
clc
mov
pop
mov
adc
cld
mov
push
mov
clc
mov
aad
sub
pop
cltd
mov
mov
clc
pop
repnz
add
cmp
stc
push
ja
fbld
sarl
adc
mov
clc
dec
pop
int3
bswap
shlb
mov
hlt
punpckldq
jne
pop
cmpl
mov
idivl
mov
loope
xchg
jns
xchg
mov
addr16
mov
lock
ds
jo
ret
call
pushf
lret
mov
mov
jp
test
mov
mov
loope
ret
arpl
inc
jne
pop
in
sbb
pop
cmp
jae
push
dec
in
cs
xlat
xchg
pusha
std
jge
mov
xor
outsb
cmovne
jl
cvtps2pi
lret
inc
enter
adc
dec
cmp
xchg
jmp
fsubl
pusha
xchg
iret
aam
xor
xor
test
inc
mov
pop
xor
push
and
pop
mov
cmp
repz
push
stos
push
pop
pop
bound
push
movsl
xchg
fiaddl
cmp
lods
push
out
mov
cli
pop
inc
dec
cld
ds
imul
xor
mov
cmp
adc
mov
incb
std
mov
gs
xchg
jo
xchg
mov
int
aam
mov
out
out
mov
mov
push
xor
ljmp
lret
inc
xor
scas
lock
inc
push
cld
lods
and
movsl
xchg
mov
jle
jne
loope
xchg
movsb
xchg
pop
fsts
mov
movntps
mov
arpl
xchg
xor
imul
dec
push
mov
outsl
jb
out
cmp
loope
xchg
arpl
sbb
dec
sub
faddl
hlt
in
mov
cmpsb
shlb
mov
inc
cld
jp
cmp
fiaddl
mov
push
jae
adc
xor
test
push
ja
xor
lret
xor
mov
orl
dec
pop
dec
hlt
sub
test
adc
stos
cmp
int3
jb
loopne
cmpsl
jae
mov
jns
arpl
push
and
pop
mov
sbb
pop
repz
clc
push
mov
pop
pop
bound
jbe
scas
movsl
xchg
fiaddl
ror
out
fldcw
xor
sbb
sub
xchg
jne
sub
stc
shl
testl
pop
icebp
pminub
data16
sub
sbb
cmp
sbb
or
cmp
outsb
cmpsb
or
mov
test
ret
cmpsl
xchg
shr
ljmp
sub
or
ret
mov
popa
and
lods
aam
mov
lock
xor
sbb
mov
mov
pop
mov
dec
lods
test
mov
jne
pop
ds
push
xchg
pop
bound
jbe
movsb
mov
and
mov
fcoml
adc
push
xchg
adc
cld
loopne
movsb
mov
sub
fdivs
iret
loop
sbb
push
call
sbb
xchg
xchg
adc
cs
popa
jne
ljmp
xor
mov
jae
pop
or
mov
dec
faddl
push
jae
in
cmp
mov
adc
mov
or
sbb
ret
out
aaa
mov
dec
arpl
sbb
ficoms
test
jecxz
out
add
dec
sbb
jecxz
cmp
mov
xchg
push
ss
lds
xlat
ret
and
addr16
xchg
or
xchg
mov
sbb
mov
pop
arpl
push
mov
or
dec
sub
fcoms
xor
insl
in
dec
cltd
and
lcall
les
rcll
out
mov
fcmovu
jmp
rcr
mov
or
stc
mov
and
in
out
lock
xorl
xchg
dec
pop
pop
jae
jae
dec
je
int
jmp
imul
rolb
rol
into
sbb
push
repz
mov
or
pop
imul
xlat
jl
add
ja
xchg
pop
ds
push
xchg
pop
bound
jbe
movsb
mov
and
mov
fcoml
adc
push
xchg
adc
cld
loopne
movsb
mov
dec
xor
mov
push
addl
out
cmp
dec
xor
jb
cmp
dec
movsl
mov
mov
mov
adcl
xchg
dec
xor
inc
pop
mov
movsb
mov
sbb
xor
imul
or
int
psllq
outsb
shrb
mov
leave
inc
push
or
clc
mov
test
xor
or
mov
or
push
ret
or
push
lret
ret
mov
cs
shrl
out
adc
mov
mov
iret
in
popf
gs
jae
into
popa
mov
rcl
ret
cmp
cmp
or
xchg
mov
push
xchg
clc
pop
arpl
repz
outsl
adc
cs
je
mov
or
jae
insb
ja
mov
mov
sbb
mov
out
decl
aam
mov
xchg
jl
pushf
das
lcall
inc
leave
int
cmp
adc
cmp
rclb
ja
mov
push
es
cmpsb
add
or
lods
add
mov
sti
rorb
ja
mov
push
btc
loop
pop
cmpsb
xchg
mov
push
mov
push
mov
push
out
xor
je
xchg
sub
ret
jmp
xor
imul
cmp
xchg
adc
ja
negb
out
leave
pop
lock
cld
mov
loopne
xchg
cmc
out
int3
insl
jb
sahf
mov
mov
cltd
imul
push
clc
pop
or
clc
mov
push
sarl
xor
inc
jne
adc
rorb
jecxz
out
add
xchg
mov
push
popa
je
pusha
shll
mov
js
lcall
mov
cmp
xchg
pop
sub
mov
fsubl
jp
inc
pop
jecxz
mov
fisubrl
movsb
int3
or
arpl
dec
ds
or
aas
inc
movsb
sub
pop
adc
sub
pop
cmp
insl
fisubrs
cmpsl
pop
cmp
pop
arpl
jae
sbb
xor
push
cltd
pop
lods
mov
or
call
mov
pop
xchg
push
data16
jg
lock
andl
xor
sbb
mov
mov
adc
mov
shl
pop
loopne
arpl
xor
rcl
cs
mov
mov
add
or
jno
in
xor
ds
in
popf
jle
int
add
and
cmp
ret
call
push
xchg
inc
xor
mov
push
dec
shl
pop
or
mov
les
test
out
cmp
dec
dec
push
rorl
fcomps
in
arpl
mov
xchg
sbb
cli
pushf
or
repz
movsl
xchg
rorb
cmp
add
out
lods
cmp
sub
mov
pop
ret
call
jo
iret
lds
xchg
cwtl
xchg
inc
push
notb
cmp
insb
test
pop
sar
jge
mov
in
pop
test
iret
outsb
ja
insb
movsl
xchg
add
mov
jns
cmp
push
mov
sbb
ljmp
mov
xchg
ret
rcrl
jle
lcall
or
scas
cwtl
clc
inc
dec
adc
adc
das
add
adc
xor
push
push
dec
int
aam
jmp
dec
test
sarl
mov
xchg
pop
arpl
sbb
push
cmp
das
js
mov
jmp
push
xchg
rol
call
scas
sbb
loop
test
lret
inc
repz
dec
pop
or
idiv
ficoml
mov
xchg
xchg
pop
cs
movd
push
in
xorl
sub
sti
arpl
mov
daa
fistps
mov
out
lock
out
cmp
hlt
rcrl
sarl
aaa
and
push
mov
push
test
jae
mov
pop
push
mov
cmp
mov
xchg
lds
fstpl
sbb
jl
or
inc
add
cs
cmpsl
xchg
sti
adc
jg
out
popf
dec
xor
jae
mov
outsl
pop
cmp
mov
xchg
jne
loop
xlat
mov
loop
and
sub
inc
enter
adc
ret
or
out
ret
ja
inc
jl
inc
or
hlt
iret
cvtps2pi
lret
cmpsl
enter
or
cs
call
arpl
cli
iret
in
popf
jno
int
mov
sbb
cmp
lods
inc
adc
push
movsl
xchg
push
jne
jge
mov
adc
cmp
mov
inc
jns
push
mov
ret
call
aaa
adc
pushf
lret
ficomps
out
ret
mov
pop
ret
jle
xchg
push
mov
ret
jge
ljmp
call
dec
add
out
mov
loope
xchg
jo
inc
sub
adc
mov
insb
mov
mov
dec
fld
es
rorl
mov
xchg
mov
les
xchg
inc
jbe
icebp
sbb
rorb
sti
pop
cmp
xchg
pop
sbb
lods
mov
adc
xor
mov
mov
mov
cs
xlat
adc
inc
sub
push
pcmpeqw
js
movsb
add
repz
xor
cmp
aaa
and
gs
loopne
ljmp
mov
inc
sbb
dec
insl
xor
mov
jl
mov
or
inc
insb
je
addl
lods
xchg
sahf
pushl
fmul
out
sbb
int
push
dec
out
xor
repz
fs
pop
movsl
mov
jle
mov
inc
loopne
stc
sbb
cmova
ret
xchg
pop
push
ret
roll
std
fistl
cmp
out
popf
pop
adc
jae
cmp
pop
mov
sarl
in
xchg
mov
inc
mov
loop
cli
lea
out
lock
repz
cmp
inc
movsl
in
lcall
sarl
xor
pushf
les
icebp
dec
add
sbb
push
mov
xor
xchg
sub
adc
lcall
clc
push
mov
mov
fldcw
sub
addr16
and
sbb
mulb
out
or
xchg
mov
mov
je
cmp
mov
push
out
loop
flds
js
dec
ret
in
mov
xchg
mov
xchg
inc
sub
mov
fsubl
jp
inc
pop
jecxz
mov
ficompl
pusha
jno
movsl
mov
loopne
adc
mov
ds
sbb
dec
std
sub
cs
int3
arpl
dec
fdivrs
inc
loopne
ljmp
mov
dec
sbb
or
dec
movsl
pushf
inc
cmpb
jne
ja
xchg
cwtl
repnz
insb
push
cmpsb
test
testb
int3
lock
push
popa
je
pusha
shll
xchg
jae
out
inc
xchg
sti
cs
filds
stc
stos
out
add
ljmp
call
mov
ja
cmp
cld
xchg
mov
or
rcrl
jne
jge
or
xchg
or
pop
jae
dec
add
aas
mov
or
sbb
lret
stos
test
pop
dec
mov
sub
sti
arpl
mov
cmp
movd
add
stc
xorl
outsb
idiv
arpl
movsl
fstps
pop
cs
out
in
js
out
ret
pop
ret
rol
xchg
sub
fdivl
imul
into
sbb
imul
icebp
mov
daa
rcrl
push
pop
arpl
inc
mov
fimull
jnp
sbb
inc
xchg
es
jns
bound
mov
push
mov
imul
inc
loopne
stc
sbb
int
ja
dec
lret
push
jno
pop
int3
mov
dec
fcomps
loopne
stc
sbb
out
mov
mov
stos
jecxz
push
stc
dec
fisubrs
cwtl
clc
lds
neg
xor
pop
inc
push
fnstcw
jno
in
iret
xor
xor
xor
outsb
jo
repz
push
mov
xchg
mov
xchg
xor
pushf
inc
pop
movsl
rcl
sbb
or
adc
push
mov
cmp
cmp
mov
icebp
repnz
notb
mov
inc
xchg
pop
push
xor
iret
push
mov
cmp
jnp
mov
push
mov
adc
inc
push
jno
push
movsl
mov
sti
add
xor
jo
pop
xchg
or
in
push
or
add
add
in
rcrl
rclb
addl
ret
xor
arpl
ds
mov
add
ja
sbb
out
jge
out
mov
inc
out
push
andb
roll
cmp
in
imul
jae
out
loop
xor
sbb
pop
mov
push
adc
mov
lods
cmpb
sub
mov
inc
mov
insl
jg
dec
mov
pop
ret
call
cmp
lds
xchg
cwtl
into
xchg
jae
fiaddl
negb
push
cmp
insb
loope
jns
jo
sar
jge
mov
icebp
pop
test
iret
outsb
ja
insb
movsl
xchg
add
mov
jns
std
and
mov
mov
into
gs
push
mov
push
jo
repz
out
movsl
inc
cld
xchg
idiv
lret
mov
cwtl
stc
sbb
inc
mov
test
adc
rcrl
sbb
or
xchg
imulb
js
shr
push
imul
add
icebp
call
fmul
mov
cs
stos
jns
sti
mov
jmp
lret
pop
xchg
stos
ret
js
iret
ret
out
filds
push
ja
add
inc
jne
pop
lea
xchg
sbb
out
in
fmul
ret
out
mov
lahf
pop
shr
icebp
sbb
lds
or
xchg
dec
inc
jnp
sbb
lret
out
inc
xchg
sti
cs
xlat
or
xchg
cmp
jo
call
loop
loopne
stc
sbb
pop
or
mov
push
rorl
adc
mov
repz
mov
xchg
mov
out
mov
int3
ficoms
lods
mov
jl
inc
int3
int3
arpl
jae
out
add
clc
mov
push
aad
adc
outsl
mov
dec
and
pop
les
shl
pop
je
jo
movsl
sar
arpl
ss
inc
mov
cmp
add
cmp
and
call
pop
xchg
cmp
sbb
test
mov
dec
mov
sub
repz
std
mov
mov
mov
xchg
dec
ret
sbb
push
xor
lods
xor
repnz
dec
hlt
jmp
lcall
fwait
nop
out
xor
push
into
ret
je
xchg
ljmp
sub
jg
xchg
jp
or
loope
ja
in
xor
lcall
and
lds
out
sbb
mov
clc
mov
lds
push
cli
pop
cmp
lock
push
xor
cwtl
mov
cmp
sbb
xor
pop
in
and
out
mov
shl
pop
mov
call
jno
push
add
and
xchg
jge
jb
mov
mov
lods
dec
cmp
daa
push
mov
inc
nop
into
push
loop
outsb
sbb
ja
inc
fwait
push
int
push
fldl
popf
sete
xchg
mov
jge
int
sbb
mov
cmpsl
inc
jg
xchg
xchg
adc
xchg
add
mov
sbb
insb
clc
sbb
int
subl
cmp
xchg
push
xchg
add
js
xlat
movsl
mov
fdivr
je
pop
stos
push
in
icebp
out
inc
mov
fcoms
pop
mov
lock
sbb
sbb
and
iret
cvtps2pi
lret
cmpsl
enter
adc
ret
xor
out
ret
ja
or
sub
cvtps2pi
inc
lahf
enter
test
das
fwait
ret
xor
cs
call
xor
test
jae
and
cli
pop
cmp
dec
fisubs
pop
into
push
sbb
sbb
daa
nop
mov
outsb
popa
xor
push
and
pop
mov
sbb
jp
mov
mov
sbb
jecxz
cmp
call
adc
clc
mov
lds
test
sbb
sbb
sub
lret
pop
xchg
add
out
in
fmul
ret
jne
cmp
daa
push
mov
sub
mov
fxtract
lret
out
dec
cmp
jae
push
xor
cltd
add
jg
inc
mov
je
mov
icebp
fs
pop
jno
out
mov
xchg
or
arpl
cmp
pushf
mov
in
inc
loopne
jmp
int
inc
xchg
sbb
xchg
xor
call
sbb
popa
je
cmp
jmp
stos
in
inc
iret
arpl
cs
pop
ret
call
mov
inc
pop
in
jmp
jae
out
icebp
dec
mov
stos
int3
paddusw
mov
add
je
mov
lret
aas
stos
orps
test
jp
mov
clc
ret
sub
cs
cmpsb
ret
addr16
inc
jge
pop
test
fsubrl
jl
ss
lds
test
and
sti
xor
pop
aam
xor
inc
jge
dec
test
faddl
pusha
leave
mov
or
inc
gs
push
filds
jmp
push
out
lret
leave
in
inc
or
jmp
cs
xlat
ret
add
stos
jb
jl
mov
cmp
jp
mov
addr16
mov
xor
jno
push
popf
rcll
jae
jae
inc
or
loopne
cmp
add
add
push
mov
stc
inc
ja
leave
mov
or
xchg
cmp
pop
insw
stc
movsb
loop
mov
xchg
add
js
push
sub
cli
cs
fildll
stc
stos
add
pop
cmp
or
insb
xchg
or
push
ret
and
xchg
in
push
iret
mov
fnstenv
pop
jmp
or
jmp
lods
cmove
cmp
fwait
cwtl
ljmp
lea
xchg
dec
mov
sbb
pop
ret
iret
xchg
pop
movsb
mov
add
sub
jmp
mov
negb
out
leave
out
in
xorb
sub
outsl
push
push
push
cs
je
callw
inc
jne
int
fdivr
sbb
add
cmp
dec
push
les
je
stc
jle
jnp
sbb
or
xchg
out
xchg
push
pop
insb
xchg
xor
jne
or
loop
xor
fwait
pop
out
mov
dec
sub
daa
push
mov
mov
fcmovb
jmp
rcr
mov
xchg
in
icebp
xchg
dec
or
imul
icebp
xchg
mov
mov
pushf
repz
loope
mov
out
sub
aaa
and
rcr
push
aad
shll
jae
dec
xor
jae
sarl
daa
push
ror
push
jno
mov
lds
sbb
sbb
sbb
lods
add
outsl
movsl
sub
jmp
mov
xchg
mov
add
fs
jecxz
sbb
mov
add
mov
adc
test
push
out
pop
ret
mov
push
xchg
inc
cmp
jne
mov
lea
push
in
loop
xor
xor
ficomps
lock
sbb
add
mov
fsubl
sub
cmpsl
mov
ret
xor
ret
into
loop
fdivs
hlt
fsubl
jp
inc
or
cmpsl
mov
dec
xor
pop
xchg
sti
stos
jnp
push
movsl
movsl
cmp
add
cmp
lds
movsl
inc
cmp
push
mov
loop
ja
test
shll
and
add
pop
sarl
mov
call
lds
in
xor
mov
int3
cmp
dec
lods
cwtl
cmpsl
and
mov
aam
fldenv
fistps
mov
out
ret
jae
out
dec
hlt
mov
mov
sbb
popa
cmp
mov
icebp
or
pop
add
out
mov
push
roll
mov
mov
fprem1
clc
mov
dec
inc
xor
sub
cmp
sti
fiaddl
outsl
and
adc
fisttpl
ds
or
ret
dec
ja
je
xor
mov
dec
lock
loopne
clc
sbb
lds
ret
out
pop
cmp
jp
push
push
cwtl
xor
aam
xorb
inc
jne
and
les
clc
push
cmpsb
shl
sub
add
ljmp
lret
inc
xor
xchg
jp
mov
mov
shll
push
rorl
pushf
popa
sahf
mov
sub
mov
leave
out
loop
flds
js
dec
ret
jge
mov
xchg
mov
xchg
inc
dec
pop
mov
cmp
lcall
lcall
or
cltd
or
fldcw
cmp
xchg
addl
jae
jl
inc
lock
add
dec
lods
enter
pop
xchg
jmp
outsb
fsts
lcall
and
xchg
cmp
pushf
push
mov
xchg
jmp
outsb
fsts
sbb
jae
cmp
jns
fs
pop
lods
mov
int3
arpl
inc
ss
cs
cld
popf
inc
in
mov
in
hlt
pop
lods
notb
cld
imul
mov
sbb
add
inc
xor
call
and
cmp
into
sbb
sbb
dec
or
stos
xor
sbb
dec
and
sub
or
pop
js
ret
jne
pusha
pop
fistpll
xchg
out
sbb
push
mov
xchg
fistl
mov
dec
pop
pop
cmp
fiadds
stos
aas
outsl
out
cmp
and
test
adc
mov
fbstp
into
sbb
icebp
or
add
leave
lods
jo
add
push
adc
fdivl
adc
ret
cmp
xor
adc
push
cmp
ds
dec
das
mov
js
adcb
sarl
jmp
or
add
fnstcw
mov
insb
sbb
pop
fstps
movsl
dec
push
fs
test
aaa
sbb
rcl
