inc
lods
adc
xchg
fstl
aam
lea
pop
pop
or
add
insb
addb
testb
int3
jnp
jge
stos
shl
insl
out
mov
cmpsw
sbb
inc
scas
xor
fmulp
xor
cmp
pxor
add
rclb
nop
filds
adc
or
sbbb
ss
xchg
adc
mov
lods
mov
in
push
mov
out
in
test
imul
lret
push
sti
outsb
sub
hlt
xor
xchg
ljmp
push
xor
cmp
subl
push
out
fcmovb
mov
mov
out
adc
cli
jae
push
push
mov
into
out
inc
lahf
jo
or
fs
dec
add
daa
jne
push
out
sbb
dec
movsb
xor
ret
push
rcl
lods
mov
or
aad
daa
rorb
push
inc
fnstcw
jg
lods
adc
outsb
cmc
inc
mov
xor
adc
ja
jle
pop
mov
or
push
push
xor
jns
and
pop
mov
push
shrb
subl
pop
pop
inc
mov
cmpsl
xchg
scas
dec
arpl
mov
xchg
add
mov
idivl
mulb
hlt
add
shll
jne
aaa
ror
ficoms
test
sarl
add
daa
adc
xchg
and
push
and
pusha
jns
xor
ds
insb
int
les
xchg
repnz
jnp
pop
pop
ror
xchg
inc
add
loopne
xchg
js
inc
mov
popa
shll
push
pop
adc
sbb
sbb
jge
rcrb
test
lret
jns
and
adc
repnz
xor
stos
loope
add
cwtl
mov
cmpsb
jp
pop
jg
dec
pop
sahf
cmp
push
add
push
mov
dec
rcr
xor
call
add
mov
loop
pushf
int3
inc
mov
push
nop
ret
xchg
clc
xchg
cld
ja
out
out
in
push
incb
push
cs
mov
test
cmp
push
fwait
mov
mov
pop
leave
adc
mov
les
cld
je
popa
cmc
inc
mov
fwait
aad
scas
cwtl
and
add
lahf
pushf
push
scas
sub
out
xor
bound
xacquire
or
scas
jo
add
cmp
in
cmpsl
xor
repnz
mov
mov
cmp
mov
jne
add
adc
and
out
xor
sbb
pop
xlat
or
adc
mov
imul
xchg
das
in
jmp
mov
and
mov
aaa
jae
sub
popa
addr16
fsubs
sbbb
in
ds
aam
leave
inc
mov
call
fisubrs
xor
inc
push
cmpsb
mov
sub
ficomps
push
xchg
dec
mov
cwtl
sub
add
add
adc
cs
sarl
in
push
stos
cmp
sbb
pushw
pop
inc
push
cwtl
sub
cmp
and
jo
cmp
sahf
lret
adc
inc
outsb
inc
pop
adc
repnz
addl
gs
stc
das
dec
or
and
fs
test
lock
and
shll
rcrb
out
flds
xchg
scas
jns
rorl
pop
pop
sub
dec
push
jmp
inc
pop
add
out
cs
lahf
sbb
icebp
cmp
imul
in
pusha
or
push
sbb
mov
adc
sub
push
push
jl
mov
push
xor
fstps
enter
mov
pop
mov
xchg
enter
stc
sahf
and
and
or
rcll
xchg
rorl
fwait
push
dec
into
imul
sti
js
sbb
dec
jp
ss
test
shrd
sub
scas
addr16
sbb
rorb
sbb
jbe
andl
pop
lock
out
es
gs
lods
stc
cmp
inc
pop
cmp
int3
ret
pushl
push
bound
imul
loope
addr16
loopne
mov
mov
test
jle
or
clc
in
negb
mov
int3
sub
arpl
jae
enter
inc
lods
xchg
leave
xlat
and
stos
pop
rolb
data16
dec
mull
jnp
mov
fisubl
mov
andb
inc
sti
sahf
sbb
addr16
xchg
cs
mov
or
or
aas
loop
imul
scas
cmp
add
roll
into
mov
adc
cmp
sub
sub
push
repnz
clc
fstpt
ret
dec
data16
lods
sub
ds
push
adc
jns
std
dec
xchg
jo
stos
leave
shll
subb
dec
sbb
jp
shl
mov
adc
mov
out
int
dec
mov
outsb
push
jbe
rorb
mov
fstpt
push
sbb
xchg
inc
enter
test
in
sbb
lea
add
cmpsb
popl
testb
push
mov
in
into
je
daa
xchg
sub
outsb
fsub
fiaddl
or
jne
sbb
aad
cmc
or
cltd
jmp
inc
insl
lock
push
mov
lret
in
outsb
movsl
sub
jae
jl
scas
jno
inc
imul
cmp
test
mov
and
xor
xchg
jl
shl
bnd
sbb
mov
push
push
in
ret
dec
and
pop
aaa
stc
test
adc
push
fcmovnbe
fistl
sahf
dec
out
and
mov
and
aas
xor
adc
idivl
loopne
lock
es
and
mov
daa
mov
cltd
push
dec
mov
jnp
ss
xchg
and
dec
movb
mov
fs
xor
pop
icebp
dec
fimuls
mov
xor
roll
aam
jb
push
add
jecxz
jnp
mov
scas
cmp
jp
add
cmpsl
jg
sub
in
cmp
popa
mov
dec
sahf
nop
jns
inc
mov
out
test
inc
test
sbb
rcr
inc
stos
mov
pusha
dec
out
out
addr16
std
loop
sub
xor
imul
and
loop
in
mov
adc
lods
jg
inc
pop
jo
xor
mov
xorl
gs
dec
cmpsl
test
and
xchg
loopne
xchg
jecxz
call
in
push
enter
les
push
add
xor
int
mov
and
mov
ds
cmp
es
sub
or
add
je
inc
sahf
call
cmc
addr16
cmp
add
jbe
dec
repz
xchg
je
in
dec
aam
mov
sbb
push
jae
mov
xor
icebp
sub
lea
ja
adc
mov
iret
outsl
add
repz
mov
pop
pop
in
push
or
xchg
mov
enter
xchg
into
ljmp
inc
jg
rolb
sbb
adc
outsb
ret
inc
jae
aas
aam
jns
mov
into
lret
idivl
fadds
push
push
lcall
test
push
cld
cmpb
and
stos
add
and
push
orw
jne
sti
movsb
jmp
movb
xchg
in
xchg
add
add
imul
mov
js
stos
cmpsb
and
jne
cltd
sbb
fnstenv
sub
sbb
out
push
hlt
adc
or
imul
mov
xor
imul
add
xor
sub
int
enter
dec
inc
xchg
scas
clc
cmp
shrb
jge
stos
test
sbb
adc
jge
cmp
outsl
dec
lcall
dec
cvtpi2ps
mov
or
shrb
into
adc
popa
lret
outsb
test
sub
pop
gs
cs
mov
cld
mov
test
mov
xor
loop
lret
into
inc
jle
or
xor
dec
jmp
clc
adc
scas
mov
and
xor
enter
insb
add
or
cmp
mov
or
sub
div
movsb
pop
sbb
rol
mov
xchg
in
or
leave
inc
cltd
ret
mov
imul
call
xchg
mov
sbb
pop
call
pop
lret
outsb
out
cmp
loop
sbb
xchg
or
dec
scas
lea
xor
bound
dec
jle
adc
stos
mov
mov
call
mov
inc
lods
inc
pop
lahf
and
or
clc
sbb
and
pusha
shll
pop
loopne
leave
int3
pusha
jnp
mov
pop
inc
test
mov
push
xchg
repz
xchg
dec
popa
std
loope
test
xlat
push
push
dec
push
test
rol
lcall
jmp
xchg
dec
mov
pop
movsb
jne
cld
or
jp
les
insl
cmp
mov
add
loope
push
lods
mov
add
ja
pop
fwait
ljmp
cmpsl
insl
test
add
stos
mov
adc
mov
add
jg
addl
jg
loopne
outsb
adc
jge
stc
int3
mov
jnp
fwait
pop
sbb
mov
daa
sbb
mov
push
cli
lods
cmp
xchg
sub
fdivrl
rcrl
dec
pop
mov
push
push
pop
and
xor
test
mov
push
repz
and
push
lret
decb
pusha
cmp
lcall
sub
and
pushf
or
into
jo
fidivrs
xchg
sbb
mov
nop
or
inc
push
movsl
fsubs
insb
lret
adc
lds
push
fwait
ss
dec
in
aas
mov
cmp
shll
cmp
mov
mov
inc
insb
test
cmp
or
ss
cmpsl
add
push
push
lods
out
push
or
jmp
clc
faddl
push
in
fistps
lods
or
and
stos
es
rorl
in
repnz
shr
jb
xchg
gs
ss
push
mov
stc
movsl
es
out
fwait
mov
adc
inc
stos
pop
fsubrl
push
jns
or
jns
jmp
pop
movsl
jg
testl
jne
xor
mov
mov
sub
mov
stos
cmc
dec
mov
ljmp
cli
or
lock
push
mov
xchg
fists
insb
mov
lahf
sub
ret
sbb
push
jb
andb
test
and
setno
aad
nop
pop
sbb
jmp
nop
sbb
sub
mov
push
daa
mov
dec
xchg
jb
arpl
ret
pop
dec
insb
outsl
nop
mov
mov
and
jmp
cltd
adc
push
hlt
push
outsb
push
mov
push
mul
push
les
mov
inc
nop
xchg
loopne
dec
push
inc
xchg
mov
test
mov
fmull
sbb
in
and
mov
xor
jmp
inc
mov
cmp
lock
rcrb
popa
cmp
mov
cltd
aam
push
xor
dec
in
mov
fistl
and
sub
cmpsl
test
shrb
movsl
leave
insl
pop
hlt
into
mov
add
sub
icebp
pop
std
in
lret
cmp
xchg
or
inc
js
mov
xchg
dec
inc
scas
mov
mov
xchg
loope
nop
movsb
aad
repnz
xor
xlat
mov
mov
rclb
loope
add
aam
mov
les
dec
daa
call
inc
lahf
cmp
fwait
sbb
add
divb
mov
mov
inc
ljmp
clc
lods
mov
sbb
dec
add
cmpsb
sarb
cmp
imul
and
je
stos
lret
jb
into
cmp
xchg
shrb
out
jp
xchg
outsl
push
lcall
push
inc
into
pop
push
jbe
xor
shrb
jo
sti
push
cmp
jg
lahf
xor
ret
jno
inc
hlt
mov
push
mov
std
jmp
pop
add
clc
mov
cmp
cmp
in
popa
mov
pusha
mov
or
fwait
cmpsl
cltd
loopne
or
sub
rcr
outsl
push
mov
pop
push
pusha
jmp
popa
dec
cmc
ret
sbb
pop
pop
cltd
jecxz
jmp
cmp
jp
std
fnsave
mov
js
mov
icebp
mov
popa
loope
test
xchg
in
movsb
js
push
xchg
fcom
mov
push
incb
add
lock
push
ss
push
bswap
bnd
test
cmpsb
test
int3
stc
mov
push
jnp
xchg
xor
fiadds
call
js
xlat
and
pusha
call
in
xchg
jb
call
pusha
loopne
std
icebp
adc
push
xchg
ret
mov
je
jmp
hlt
in
adc
inc
mov
popa
sub
out
jecxz
xor
sbbb
jecxz
xchg
lret
in
int
xchg
fcomps
lcall
rcrl
sub
jge
fwait
mov
ror
adc
mov
out
lds
aad
cmp
jecxz
add
sub
fists
dec
xchg
fwait
cmp
out
outsb
int
mov
mov
imul
data16
iret
into
dec
int3
std
push
dec
xor
xchg
dec
out
sbb
dec
sbb
sbb
xchg
xchg
jge
scas
stos
outsb
pop
mov
cmp
enter
hlt
add
pusha
sbb
jne
push
movb
push
inc
xchg
and
push
sbb
lock
loopne
pop
push
xor
push
pop
mov
sbb
add
dec
sarb
popf
and
pop
aaa
ds
sbb
push
add
in
mov
add
repnz
sbb
xchg
push
mov
loop
scas
ss
mov
decb
push
mov
sahf
dec
movsl
je
into
scas
dec
push
pop
mov
sub
aaa
and
dec
jp
sti
decb
add
fisttps
fsts
movsl
dec
out
pop
loopne
arpl
mov
decl
mov
jecxz
and
jmp
fxch
jnp
and
test
cmpsl
imul
xchg
cmp
test
test
or
xor
fadds
ja
push
sti
sub
leave
push
push
out
roll
aas
pushf
or
jp
mov
mov
mov
and
inc
aam
jmp
push
jne
in
or
and
mov
in
adc
lcall
fsubl
pop
lock
cmpsb
jae
movsb
cmp
leave
aas
scas
jle
loopne
cmpb
aas
bound
jg
fdiv
push
jno
xor
in
sbb
cltd
mov
clc
outsl
pop
sbb
enter
push
mov
mov
xor
sar
mov
xor
fsubs
imul
out
jo
sbb
and
scas
xchg
adc
stos
les
rcrl
pushf
and
add
cmc
push
rcll
in
inc
dec
xor
sub
in
daa
mov
and
sub
cmpsl
imul
mull
xchg
cmp
xchg
cmp
dec
and
fs
adcb
mov
xchg
mov
dec
mov
out
into
out
imul
lds
xchg
setle
inc
xchg
out
cs
cmp
stc
in
xor
inc
or
mov
push
dec
sbb
jp
jnp
jb
pinsrw
lcall
js
cld
bound
mov
enter
mov
dec
cmc
test
mov
cmpsl
movsb
jb
xchg
pop
add
das
cmp
jno
js
es
jg
lods
xor
cmpsb
mov
in
aaa
xchg
in
pop
in
leave
negl
repz
sub
mov
lea
xorl
ret
mov
adc
jl
mov
test
das
cmc
lret
fistpl
pop
add
pop
add
mov
xchg
cmpxchg8b
call
test
xchg
xlat
test
dec
add
aaa
rcll
or
negb
lea
xchg
enter
cltd
xor
inc
xchg
pushf
pop
pop
sbb
lea
inc
pop
in
mov
jp
sbb
xor
inc
enter
adc
jl
aam
test
jg
jo
mov
cs
pop
inc
cmp
cwtl
xchg
lcall
push
fnstcw
pop
xchg
ret
mov
dec
dec
mov
mov
mov
jp
mov
sub
push
les
pop
jl
cmpsl
xchg
jmp
pop
or
je
test
lock
mov
sbb
or
jle
mov
les
mov
jno
dec
orb
dec
pop
cmpsl
out
mov
stos
arpl
jge
cmp
xor
inc
sub
push
dec
popf
pushf
sbb
adc
inc
lret
leave
xchg
pop
lret
xor
pop
sbb
adc
stos
cmp
inc
cmp
or
pop
and
lods
push
aam
cltd
push
inc
mov
dec
xchg
adc
aaa
inc
test
xchg
sarb
xlat
lret
loop
mov
xchg
push
inc
test
mov
sbb
mov
inc
rol
push
push
fsubs
mov
mov
adc
shll
in
dec
push
bound
add
adc
dec
or
mov
int
std
pop
inc
ljmp
fsubs
jne
call
push
in
sahf
adc
pop
les
stos
inc
jns
xchg
fistpl
arpl
and
sub
lods
sbb
and
xchg
xor
sbb
pop
inc
repnz
add
test
pushf
or
inc
adc
xlat
call
fldcw
popa
pusha
mov
shl
out
mov
ret
loope
hlt
xor
push
sarl
test
pop
xchg
sbb
test
jge
fmul
lahf
fidivrs
loope
popa
das
in
jp
xchg
jg
stc
adc
lahf
ret
addr16
cmpsl
adc
jo
add
ds
mov
mov
call
mov
dec
jecxz
int
ficoml
and
add
daa
mov
repz
out
icebp
pop
fdivrs
xor
imul
sub
aaa
imul
push
cld
push
push
je
pop
rcll
test
ret
pop
ss
jle
gs
sbb
xorb
popa
jne
push
data16
push
sub
mov
arpl
addr16
out
mov
add
push
xor
pop
mov
jae
mov
int3
push
loope
insb
lret
push
pop
push
adc
cmp
mov
dec
out
xchg
pop
popf
imul
cmp
fcomps
add
push
lods
jmp
xor
add
out
jecxz
mov
pop
sbb
fs
xchg
daa
sbb
lds
and
or
dec
pop
dec
push
xchg
xchg
inc
cmpb
xor
test
sbb
pop
xor
jns
add
mov
mov
push
adc
ja
adc
dec
imul
rorb
push
sbbl
and
in
call
outsw
jg
jae
in
and
sub
jle
sbb
je
loope
in
sbbb
xor
fcoml
dec
mov
fwait
lock
ja
mov
sbbl
test
add
xchg
shr
shll
inc
imul
push
sbb
dec
lret
cld
cmc
push
add
gs
mov
lock
dec
xorl
nop
movsl
popl
movsb
out
push
push
es
add
xor
or
rorl
push
add
fmulp
xchg
mov
pop
and
xchg
pop
push
cld
xlat
mov
fdivrs
cmp
fcmovnu
aad
fmuls
push
cmpsb
xlat
xchg
xchg
jge
jo
enter
inc
mov
mov
je
jl
push
mov
xchg
mov
rorl
insl
mov
imul
std
arpl
test
xchg
cs
push
movsb
lods
call
int3
mov
fwait
ljmp
nop
mov
jns
ja
shll
frstor
rorb
add
push
cmp
pop
enter
jae
inc
mov
xor
clc
push
ljmp
mov
cmc
push
ja
inc
outsb
daa
push
lea
inc
and
rep
push
call
cltd
movsl
inc
push
das
dec
das
fwait
aas
mul
dec
pop
into
dec
mov
or
fdivrl
inc
imul
jge
shrl
out
ret
jle
mov
add
imul
iret
enter
dec
rorb
cld
out
xchg
das
dec
inc
outsl
and
mov
cmpsb
add
fisubl
rclb
mov
jno
dec
cs
push
push
stos
cltd
cmp
cmp
xchg
sub
in
in
mov
or
xor
xchg
out
inc
in
sub
arpl
out
mov
sti
jae
or
jnp
std
mov
inc
mov
xchg
and
add
mov
ret
clc
mov
int3
es
in
or
nop
inc
and
in
nop
aad
sub
push
push
cmp
and
mov
jg
imulb
mov
and
push
inc
pusha
int
cmp
aam
and
je
rcl
imul
and
call
into
xchg
cmp
movsl
sub
iret
mov
in
iret
decb
push
clc
adc
mov
ja
in
loope
inc
sbb
jmp
in
push
adc
xchg
lahf
pop
popf
cmp
jno
or
xor
jb
inc
insl
mov
push
idivl
sub
sbb
cmpsl
and
pop
fdivs
int3
cmp
lea
sub
sar
or
aad
or
push
dec
and
hlt
jl
mov
mov
sbb
sbbb
in
xor
jg
dec
xchg
leave
mov
fimuls
pop
jno
pop
adc
mov
in
jo
pop
es
push
mov
or
adc
and
xchg
jecxz
xor
shlb
mov
jl
push
mov
les
mov
push
push
test
cmp
sbb
inc
mov
ficomps
loopne,pn
and
xchg
cli
lret
aam
pop
loop
xchg
imul
out
popa
dec
test
mov
pop
lret
adc
xor
xchg
and
push
lahf
decb
xor
out
inc
sahf
dec
xor
add
mov
add
ret
adc
mov
xor
cli
mov
inc
jb
test
stos
inc
jge
mov
sbb
sub
loop
jnp
and
cltd
in
adc
jle
mov
xor
add
test
sti
mov
repz
ljmp
sub
movsl
mov
pop
movl
add
adc
or
mov
aaa
xchg
xchg
ja
and
xchg
test
mov
mov
je
jae
movsb
sbb
imul
dec
loope
push
fistpl
mov
fists
pushf
int
jo
xor
daa
test
fists
pop
jns
xlat
xlat
lret
js
push
out
lret
pop
cltd
rcrb
in
outsb
mov
mov
sbbl
push
sbb
ss
add
out
nop
cmp
adc
lret
sbbb
addr16
lcallw
orb
cmp
les
aas
and
rorl
jb
mov
mov
mov
xchg
push
pop
rclb
inc
frstor
and
popf
rcr
das
cmp
lods
push
sbbl
xor
stos
cmp
out
das
xchg
sti
adc
incb
aas
xor
fs
xchg
pop
insl
loopne
cmpsb
aad
cmp
add
xor
add
push
jecxz
ja
sbb
sbb
xor
in
aad
cmpsl
lock
cmpsl
hlt
lahf
xchg
xchg
xor
xchg
mov
pop
fidivl
inc
mov
clc
inc
push
stos
loopne
std
in
pusha
pusha
loopne
hlt
xchg
mov
pushf
mov
xor
adc
pop
lock
in
fiaddl
rcrl
pop
into
cld
cs
jb
pop
out
fcoms
stos
movsl
in
pop
sbb
mov
lods
mov
dec
push
or
push
sbb
cmpsb
cmp
or
fs
pop
pop
outsb
mov
add
out
pop
cwtl
add
adc
and
pop
ja
iret
jo
pop
fnstcw
push
jmp
xchg
fbld
ret
cmp
outsl
inc
push
fistps
jo
xchg
lock
nop
adc
push
cmp
sbbl
rcll
sarb
push
mov
repz
sub
in
jmp
fisubrs
sub
mov
sbb
cmp
lahf
add
hlt
inc
push
mov
rorb
inc
cltd
xor
je
cld
sub
sti
sub
cmp
jns
pop
jg
movsl
add
xchg
out
mov
mov
ss
jmp
and
mov
movsl
scas
lods
inc
sbb
xchg
in
fnstenv
mov
sti
shll
mov
enter
sbb
mov
sub
ja
or
lea
mov
push
mov
out
mul
lahf
je
out
or
push
add
add
xchg
xor
cmp
sub
dec
fimull
or
pushf
push
add
dec
test
push
dec
stc
mov
outsl
movsl
xchg
inc
inc
and
fldcw
movsl
jp
mov
sarb
stos
sarl
fsubs
mov
enter
int
push
or
sub
jb
mov
inc
push
jbe
cmp
jg
mov
sbb
scas
shll
sub
mov
add
cmp
push
pop
jp
cs
mov
ss
jnp
pop
mov
scas
and
gs
scas
mov
jmp
push
sbb
ficompl
pop
icebp
test
jbe
icebp
jns
push
inc
push
push
adc
add
pop
jge
sbb
insb
bound
inc
test
mov
cmp
xor
mov
repnz
jns
push
pop
popa
lods
adc
cli
pop
push
xlat
pusha
jnp
push
pop
hlt
cmc
cmpsb
aam
cmp
lahf
sub
mov
sub
mov
fsubs
jae
cmp
in
jmp
inc
sub
mov
sbb
jno
sahf
or
mov
add
mov
jge
jp
fldenv
mov
add
add
lahf
inc
cwtl
xchg
inc
adc
xor
insb
adc
or
jle
fadds
or
push
cmp
es
sbb
push
rcrl
lret
ja
xor
repnz
jb
je
jb
inc
adc
jmp
scas
cmp
and
xchg
mov
test
dec
insb
pop
test
and
inc
pop
dec
hlt
jns
mov
or
cmp
in
jecxz
push
js
aaa
mov
cmp
loope
sbb
mov
test
jp
stos
aaa
loop
in
aaa
addl
jo,pt
int3
fwait
jne
inc
xor
sarb
imul
or
int3
inc
cmp
sbb
fimuls
leave
pop
sbb
xchg
sub
xchg
aaa
mov
jge
in
mov
std
mov
xlat
gs
mov
jecxz
dec
inc
imull
mov
pushf
xchg
fwait
sub
mov
sti
adc
push
xchg
jmp
divl
fldl
imul
mov
pusha
jmp
push
int
int
iret
test
pop
add
dec
int
jo
sahf
clc
stos
not
push
jmp
mov
push
leave
sub
dec
xchg
or
or
iret
dec
push
cmp
push
scas
shrb
mov
cltd
sti
cli
rcrl
or
sbb
loop
test
adcb
xor
push
dec
repnz
mov
loope
dec
ret
pop
inc
mov
jmp
pop
cmpsb
add
mov
jmp
add
out
jnp
sbb
pop
data16
mov
negl
inc
push
mov
sub
sti
push
jns
lods
lods
call
pop
xlat
dec
adc
push
push
shll
test
test
mov
xor
inc
loopne
mov
xlat
sarb
mov
sub
fnstsw
mov
adc
xlat
ss
std
repz
movsl
mov
or
pop
mul
les
sbb
mov
sbb
lret
push
jbe
das
mov
push
jp
dec
push
out
gs
xor
cmp
sar
mov
and
or
cmp
in
inc
in
sti
mov
add
jl
stc
insb
mov
daa
inc
cltd
sarl
iret
mov
push
popa
cmp
je
mov
aas
mov
push
pop
mov
jns
pop
xchg
hlt
sarb
jnp
ret
sub
int
mov
fisubs
xor
xor
jo
stos
inc
adc
adc
lock
fisubrs
aaa
outsb
dec
xor
push
dec
icebp
addr16
push
test
insb
and
mov
xchg
mov
movq
lods
add
mov
daa
push
out
xor
push
js
xor
mov
out
icebp
push
lcall
xchg
int
or
xchg
rcl
out
mov
dec
cmp
iret
pop
mov
and
xchg
sub
test
movsb
or
lds
mov
push
add
lahf
add
shll
je
fisttpll
dec
mov
cmp
or
gs
jbe
aam
sub
mov
icebp
jge
or
enter
out
push
dec
fildll
adc
and
cmp
fisttpl
inc
jmp
into
outsl
xlat
leave
ret
jmp
into
lock
and
mov
push
xor
mov
adc
lret
jbe
inc
loope
mov
dec
aaa
push
decl
cld
jecxz
std
jmp
movsb
ja
test
or
cltd
test
push
ret
fcompl
and
sbbb
inc
jno
cmp
cmpsl
sub
loop
clc
clc
rcrl
sub
fwait
mov
sub
insb
lcall
cwtl
adc
dec
cmp
xchg
ds
mov
mov
loope
les
sub
mov
cwtl
loop
xor
and
sbb
and
sub
mov
xor
push
adc
cmpsb
jle
int3
in
lcall
ss
push
imulb
out
mov
adc
nop
mov
test
inc
call
sbb
shlb
mov
dec
cmpsl
shr
or
push
mov
dec
shl
fadds
dec
dec
sarl
jno
mov
and
jge
aam
pop
dec
in
fistpl
cmp
cwtl
sbbb
mov
jge
push
flds
cmpsl
out
mov
iret
int3
xchg
push
xchg
mov
push
mov
fsubp
mov
or
fbld
xchg
sahf
mov
repnz
adc
jg
decl
adc
adcl
mov
call
lods
and
push
arpl
inc
leave
pop
push
addr16
loope
pop
xchg
push
sub
jecxz
std
dec
ljmp
add
pop
mov
je
std
xorl
sti
push
jne
lods
cltd
cld
scas
mov
loopne
pop
sbb
mov
dec
repz
adc
or
pop
pusha
bound
inc
add
out
xchg
adc
lods
stc
or
pop
mov
fwait
xchg
inc
es
fadd
shrl
xchg
stc
ret
dec
outsl
pop
pop
inc
cmp
push
and
sbb
push
dec
lock
leave
imul
adc
add
mov
fdivl
enter
cmpsl
xor
ljmp
mov
adc
sub
pop
jp
mov
mov
ret
push
repz
arpl
movsl
ds
push
jbe
incb
rep
jb
and
inc
jae
mov
add
mov
inc
pop
mov
orb
or
in
outsb
imulb
fcoms
xor
push
push
pop
ret
ret
sub
sbb
pop
and
jbe
pop
xchg
xchg
mov
push
fldenv
or
push
shlb
xchg
stos
mov
out
mov
andb
mov
daa
loop
and
or
in
pop
jg
push
cltd
lcall
xchg
arpl
ss
aam
cmpl
jmp
xchg
das
ret
jge
mov
in
mov
lock
std
add
push
jns
xor
stc
insb
test
sbb
cmp
loope
test
add
hlt
inc
jp
jecxz
jg
aad
push
sub
sub
xchg
cmpsl
adc
push
inc
cmp
or
add
dec
ss
pusha
sbb
fmull
xor
xor
mov
das
push
out
jno
cltd
fistl
jmp
mov
mov
test
ss
jno
jbe
mov
cs
mov
xchg
xor
push
out
jb
loopne
push
rolb
outsl
or
inc
sub
adc
mov
sbb
sub
daa
rolb
or
cwtl
push
ja
into
gs
adc
ja
mov
movsl
shlb
dec
dec
lea
jmp
adc
sbbb
xor
aas
test
jg
jo
scas
dec
stos
popa
outsb
inc
mov
shll
add
loop
hlt
mov
mov
scas
or
movsb
inc
xchg
sti
fiaddl
ret
sub
jne
cmp
xchg
or
dec
ds
lcall
mov
insl
push
in
fildll
cmp
xchg
mov
nop
xchg
daa
mov
mov
mov
into
add
enter
fildl
xchg
sbb
and
clc
cmpsb
rclb
in
or
xchg
pop
push
cs
push
inc
mov
dec
xor
into
lret
cmp
sbb
jmp
cmc
fsts
scas
mov
sbb
aaa
lret
fcmove
push
clc
mov
mov
fdivrs
pop
xor
out
pop
lods
jo
xchg
frstpm(287
and
pop
sarl
add
mov
push
sbb
cli
int
sbb
cmp
dec
test
pop
lret
js
xor
sbb
pop
pusha
xchg
out
pop
cltd
stos
fs
rcl
pop
rorb
dec
xor
sbb
stc
inc
sub
cmc
test
inc
ljmp
push
mov
sbb
icebp
cltd
pushf
mov
pop
fldl
and
and
mov
mov
push
mov
cwtl
dec
sbb
mov
cmp
je
cli
sahf
pop
outsb
mov
jecxz
arpl
vmulps
mov
sbb
es
dec
jae
sbb
pop
punpckhbw
push
jge
scas
dec
dec
mov
in
popa
mov
and
aaa
dec
repz
jp
cmp
mov
les
js
dec
mov
sub
add
mov
iret
lods
ret
fstl
push
insl
stos
sub
dec
sub
mov
jns
inc
and
iret
mov
and
inc
in
neg
mov
push
lcall
add
pop
pusha
cmp
out
lods
sbb
xchg
cld
int3
lret
mov
scas
xchg
fs
jecxz
adc
ja
iret
sti
xor
xchg
enter
dec
dec
ljmp
add
xchg
adc
loopne
pushf
mov
cmc
lds
lods
xchg
mov
or
or
faddl
sub
idivl
cli
gs
push
pop
adc
les
pop
and
mov
stos
xchg
imul
add
push
push
adc
dec
das
sti
xchg
add
aaa
xchg
nopl
stc
ret
or
push
iret
fbstp
sbb
sbb
bound
add
repnz
push
mov
dec
pop
addr16
lret
mov
daa
mov
and
mov
fwait
js
sub
rcrb
call
shrb
xchg
push
sbb
pop
jmp
sti
dec
and
xchg
dec
into
push
lcall
inc
loopne
sub
lock
test
jmp
add
hlt
imul
dec
int
inc
mov
jo
push
push
insb
cmp
iret
lahf
cmp
shll
mov
adc
addb
scas
adc
sahf
adc
cmp
in
pop
push
sbb
add
call
mov
and
data16
jb
fcomps
int
pushf
pop
mov
mov
xorb
dec
mov
inc
je
cli
xlat
inc
sti
sarb
daa
loope
icebp
sbb
jnp
jle
insb
int3
idivb
mov
jmp
cmp
pop
icebp
repnz
lods
int
mov
iret
enter
xor
inc
test
lods
sub
movsb
shr
pop
inc
xor
lret
out
sub
push
ds
mov
jmp
aad
push
pop
xor
js
mov
insl
enter
repnz
subl
mov
jg
sbb
mov
inc
sub
or
sti
out
cltd
movsb
and
ja
popl
lods
ja
sub
jp
jns
cmp
pop
ficompl
or
out
cltd
das
cmc
push
clc
mov
cmc
or
or
pop
ds
xchg
test
dec
test
stos
mov
stc
std
jne
mul
jns
mov
lds
loopne
clc
jmp
pop
mov
sub
arpl
jg
iret
fbld
sub
adc
arpl
mov
testb
sub
cmp
aad
movsb
mov
jae
xor
cmpps
je
sbb
jge
mov
adc
mov
movsl
int3
shll
in
scas
test
xchg
ficomps
lcall
repz
ret
cmpsb
in
push
pop
loop
cltd
lcall
aaa
add
sbb
ss
fsubs
in
cld
xchg
mov
enter
pop
sub
lcall
jae
jnp
les
sub
xor
arpl
and
cmp
xor
mov
add
mov
mov
xor
pop
pop
jmp
xchg
aam
inc
xchg
ds
lret
pop
not
cmpsl
xchg
add
stos
sbb
in
add
add
call
jecxz
fwait
test
into
cltd
xchg
xor
data16
sahf
adc
adc
sub
addr16
jns
nop
dec
sti
mov
xchg
jg
adc
insl
xor
inc
repnz
sahf
mov
or
icebp
pop
xor
mov
leave
aas
daa
cmp
add
push
lds
sbb
imul
dec
dec
test
add
lcall
sbb
jmp
es
jle
mov
addb
mov
int3
popa
scas
jo
test
insl
test
arpl
jle
stc
dec
mov
and
dec
inc
scas
adc
pop
cmpsl
sub
adc
push
nop
imul
mov
or
repz
xchg
mov
jne
sub
xor
push
cmp
inc
rep
adc
fxch
and
lock
out
mov
andl
fstps
clc
lods
je
in
and
or
lock
sarl
in
xchg
sbb
lahf
ret
clc
ds
inc
mov
sub
push
pop
pop
mov
adc
jne
adc
lret
adc
add
mov
xor
add
or
adc
jl
push
pop
add
enter
jnp
lret
pop
inc
lds
das
mov
sub
enter
dec
inc
cmp
cli
rclb
mov
ljmp
pop
adc
inc
icebp
push
mov
xor
shll
les
and
fdiv
pop
jne
xchg
mov
adc
push
pop
shl
push
dec
sub
aaa
loopne
mov
push
or
scas
cmp
sbb
sub
nop
add
ret
sbb
xchg
xchg
jp
mov
adc
fwait
mov
xchg
aad
testl
sbb
jge
mov
or
repz
xor
fdivs
jl
mov
shl
pop
rolb
enter
push
push
hlt
mov
cmp
or
loop
into
inc
and
ret
mov
ror
sub
ja
dec
add
inc
jg
push
int3
stos
sub
aaa
test
pop
mov
dec
mulb
dec
je
movsl
mov
ret
cmp
rcrl
mov
dec
outsl
dec
jmp
jbe
call
pop
adc
jmp
sub
outsb
add
jp
or
mov
and
addr16
push
fistl
or
decb
fmull
dec
cmovnp
sub
add
xchg
push
rcll
sbbb
js
bound
sub
test
loopne
push
mov
enter
add
dec
sbb
inc
scas
xor
sbbb
inc
aad
adc
ret
xchg
and
daa
in
lods
rolb
push
inc
mov
xor
cmp
cmpsl
and
mov
sub
imul
jge
decl
mov
cld
insb
mov
js
xchg
mov
popf
mov
sarl
in
xchg
outsb
cmp
test
incb
nop
add
ss
sub
rolb
lret
mov
sbb
lea
insb
push
pop
arpl
inc
xchg
divb
sbb
xor
xchg
int3
outsb
daa
aam
adc
jne
jae
xor
arpl
imul
xor
mov
imul
sti
xor
cmpl
mov
call
and
mov
lret
dec
sub
jg
dec
imul
pop
xor
push
mov
adc
pause
pop
test
and
sbbl
cmp
sub
arpl
xor
lret
aas
inc
or
movsl
ror
jno
mov
and
sbb
and
sbb
add
mov
addr16
sbb
maxps
lds
test
stos
fldl
jmp
cli
lahf
fists
pop
test
dec
cmpsb
arpl
fdivrs
add
roll
mov
fadds
lcall
and
mov
xchg
shrb
aas
xchg
xchg
jnp
adc
sbb
mov
xchg
inc
cwtl
and
push
adc
popf
insl
aam
rorb
jmp
push
push
fldenv
imul
pop
test
aam
or
sub
and
push
in
std
ljmp
repnz
jecxz
mov
jae
cmc
xchg
cmpsl
push
xchg
rcr
inc
lock
xchg
pop
mov
sub
add
mov
cltd
out
sub
sub
mov
and
movsb
dec
mov
movsb
xor
inc
outsl
icebp
loopne
nop
dec
out
ljmp
jge
bound
hlt
dec
mov
mov
or
lcall
inc
stos
pop
cmpsb
cmpsb
jae
adc
sub
xor
enter
in
and
dec
sub
xor
lcall
jecxz
push
insb
imul
mov
cs
aam
lds
in
fisttpl
ret
pop
sar
xchg
mov
in
bound
push
lcall
or
sub
inc
cmpsb
adc
cs
xchg
inc
fwait
and
and
xlat
jnp
pop
jp
iret
ret
dec
out
add
dec
mov
inc
fsubrl
nop
fisubl
ljmp
mov
addl
int
imul
pusha
mov
or
push
xchg
sub
aam
inc
fcmovnb
out
sbb
add
fnstsw
and
iret
or
mov
xchg
xchg
scas
xchg
ss
xor
xchg
add
into
jmp
dec
mov
add
pop
jge
lcall
push
out
fcoml
fnsave
push
mov
and
or
jns
sti
ja
or
add
sub
inc
lea
jo
fisubl
xchg
cmp
scas
inc
ljmp
ret
fnstsw
shll
mov
cmp
loope
lcall
ffreep
dec
rclb
jg
jge
insl
loopne
mov
fiaddl
inc
and
sbb
lods
test
lahf
lods
negl
sti
pop
gs
outsl
imul
lcall
xor
pushf
scas
xlat
xchg
cltd
and
sbb
dec
fnstsw
mov
popf
outsl
xchg
insl
in
inc
sbb
add
add
xlat
mov
pop
cmpsl
rcrl
repnz
jno
or
xor
jnp
pop
insl
adc
or
repnz
or
push
neg
cltd
popa
xor
pop
cli
mov
xlat
mov
xor
ret
js
test
add
sub
dec
add
cmp
cmpsb
xchg
daa
xchg
xchg
cmc
jne
cld
lock
jno
addr16
cmp
je
aad
push
bound
les
popf
es
lods
jnp
imul
jg
and
add
fwait
stos
jns
aas
mov
jp
pushf
stos
mov
cmp
movsb
cmp
xlat
insb
stc
mov
out
aam
xchg
push
outsb
sbb
xchg
mov
loope
addr16
xchg
sqrtps
sbb
lods
add
fs
push
jb
sbb
or
mov
fmull
test
mov
cld
enter
dec
sub
test
daa
test
pop
mov
jp
push
test
cmp
popf
pop
cli
outsl
xchg
stos
pop
es
xchg
repnz
pop
aaa
add
push
jmp
leave
sub
dec
out
mov
add
adc
cmp
add
jecxz
pop
shll
unpcklps
dec
outsb
test
mov
push
pop
fiadds
jge
inc
and
aas
enter
sbb
mov
xchg
dec
sub
stos
push
mov
jecxz
ret
push
imul
les
loop
pop
and
test
lret
mov
loopne
pop
sub
ret
fidivrl
push
xadd
imul
pop
jl
arpl
jne
aad
sub
sub
cmp
dec
mov
in
mov
out
push
lcall
cmp
sub
bound
xchg
mov
fstpl
fsubs
pop
pusha
push
test
mov
mov
int
ss
jge
dec
in
dec
mov
jo
adc
and
jge
add
in
ja
cmp
int
in
cwtl
sub
lods
or
bound
bound
divl
iret
push
push
jbe
adc
setb
fdivrs
lods
popf
adc
cmp
jne
test
jg
cmc
lods
jno
fiadds
cltd
xor
pop
add
loope
xchg
repnz
pop
push
xchg
push
fcmove
stos
sub
ds
jae
mov
in
jo
add
int
dec
or
dec
ja
orb
inc
mov
aaa
mov
or
mov
pop
scas
cmpsl
loope
cltd
pop
loop
mov
xchg
std
mov
fs
mov
js
cli
mov
lret
ret
test
or
xor
adc
dec
xor
inc
testl
fs
aaa
cmpsb
fistps
insb
leave
mov
add
sub
lods
stc
and
xor
mov
and
mov
in
rorb
scas
scas
insb
lret
jmp
jo
mov
jne
cmp
ljmp
rorl
pop
mov
sub
jmp
cli
fs
and
mov
mov
sub
mov
pop
mov
nop
lret
addr16
xchg
imul
mov
sbb
lcall
dec
or
mov
roll
pop
lods
push
xor
ret
xchg
nop
cmpsl
das
adc
jecxz
or
or
mov
pop
push
sbb
inc
push
inc
dec
push
bound
add
xor
xchg
adc
adc
lods
lret
repnz
cmc
test
mov
mov
jecxz
cmp
dec
add
test
int
sarl
cs
cltd
cmpb
idivl
rorl
mov
popl
xchg
inc
jae
arpl
dec
dec
fimull
es
push
sbb
call
lods
insl
mov
fnstsw
pop
dec
xor
scas
push
sub
call
int
ja
push
sbb
out
cmp
je
cmp
and
sub
out
loopne
cmp
insb
inc
jnp
xchg
out
ljmp
aam
or
pusha
adc
cltd
jae
xor
ret
hlt
jl
dec
fisubs
and
xor
jno
push
mov
xbegin
mov
xor
add
pop
jp
and
xor
jecxz
les
sub
jno
enter
mov
pop
cmp
adc
imul
xor
sbb
in
movsl
ret
iret
sbb
sub
lahf
call
push
pop
andl
leave
in
mov
push
add
push
mov
inc
jp
mov
out
jae
xor
jae
shll
stos
test
inc
adc
fcompl
pop
orb
and
pop
es
pop
jmp
inc
loop
sub
scas
sub
cmp
lea
sub
cmc
inc
pop
jge
push
loop
adc
push
add
inc
mov
add
inc
stos
inc
sbb
cltd
xchg
sub
int3
into
sub
fnsave
xor
or
int
outsl
out
aas
inc
std
stos
xchg
incl
mov
lds
inc
jle
sub
jg
cwtl
insl
push
lods
mov
pop
or
sub
in
jmp
mov
adcl
ds
cwtl
lahf
xchg
sub
mov
jo
or
push
repz
int3
scas
mov
or
in
lcall
call
sbb
inc
adc
andb
aad
sub
dec
les
pop
pop
enter
push
jbe
add
xor
repz
push
or
mov
mov
cmp
out
testl
ret
adc
adc
pop
movsl
push
mov
loopne
mov
pusha
lods
insl
stos
xor
push
popa
rol
aas
jae
ljmp
inc
lods
pop
jb
std
push
daa
mov
insl
jb
nop
pushf
add
cmp
ficomps
mov
ljmp
sbb
xchg
push
ja
hlt
xor
lea
inc
xor
out
push
rcrl
pop
xchg
mov
dec
xor
and
adc
pop
mov
mov
pop
xor
push
jne
ja
out
dec
mov
mov
and
inc
or
mov
sub
cmp
sar
push
dec
shll
and
bound
loope
test
mov
xchg
mov
lods
or
jns
pop
enter
cld
scas
clc
and
gs
mov
jge
jbe
mov
inc
loop
je
jno
or
orl
mov
negl
cmc
and
mov
mov
test
and
addr16
int3
or
out
jmp
fdivs
jge
mov
xor
stos
mov
and
ljmp
loope
popf
jle
push
mov
test
cwtl
push
loope
jae
cli
ds
aaa
adc
inc
andb
inc
dec
aaa
adc
bnd
loop
xlat
push
adc
jnp
mov
sub
addb
push
push
cwtl
inc
cmp
fnstenv
mov
mov
push
ss
inc
xor
iret
ljmp
cmpl
push
jb
add
mov
enter
jno
cld
es
arpl
push
inc
inc
sub
mov
cmp
adc
and
jns
add
pop
mov
incl
adc
mov
into
mov
lock
sbb
dec
jmp
add
mov
cwtl
in
imul
fdivl
push
push
rcll
pop
into
pop
ds
mov
push
mov
int
xchg
inc
out
nopl
push
test
div
cmp
push
movsb
movsb
movsl
xchg
or
mov
aaa
sbb
subb
mov
into
subl
and
lods
pop
cld
add
jle
ljmp
xor
mov
xlat
call
sti
mov
sbb
sub
addl
cmp
stos
push
fidivrl
fists
cmp
movsl
and
push
xor
out
mov
insl
in
cmp
adc
test
mulb
xchg
les
int
mov
fmuls
xchg
rcrb
sub
loopne
adc
sbbl
dec
popf
xchg
inc
or
fstp
add
cmpb
movsl
daa
xchg
jo
push
cli
lret
cltd
sub
xchg
into
push
sbb
pop
push
dec
lea
mov
dec
int3
cld
xchg
add
jmp
pop
adc
inc
cmpsl
inc
or
jecxz
sbb
sbb
jle
lock
push
fcomps
jb
or
andb
dec
insb
jnp
gs
xchg
mov
dec
jnp
cwtl
xchg
cs
data16
push
imul
and
jl
ja
pop
outsl
test
fisubl
ret
lret
xor
stos
jle
adc
rorl
in
fnsave
and
jns
loopne
leave
ss
cmpsl
mov
pop
adc
jns
icebp
and
pop
mov
roll
push
xchg
xor
mov
ficoms
jecxz
les
in
adc
gs
je
aaa
jne
lcall
enter
xor
pop
jge
scas
dec
aad
adc
out
loopne
adc
xchg
mov
dec
jg
shlb
fnsave
repnz
in
mov
cwtl
or
inc
sar
aaa
inc
pushf
out
call
mov
fwait
mov
call
inc
mov
pusha
imul
push
insl
xchg
inc
xor
mov
stc
test
addr16
adc
sub
cmp
inc
je
or
add
xchg
andb
mov
xchg
mov
stos
push
mov
xor
mov
xlat
jns
cmpsl
push
int3
in
lods
pop
pop
ljmp
stc
test
push
subb
and
inc
loopne
and
pop
gs
inc
insb
dec
fistl
sub
iret
jle
fucomip
int
xor
cli
scas
mov
ret
mov
testb
std
xchg
dec
add
jbe
push
add
stos
jg
imulb
arpl
ss
in
imul
mov
push
fsts
xor
daa
scas
test
repz
sbb
sbb
mov
lds
dec
test
xor
xor
sti
in
or
test
fisttps
stos
hlt
cli
sub
icebp
shl
and
or
and
mov
xor
cmp
lea
insl
shrb
aad
ss
imul
hlt
addb
xor
xchg
shr
movsl
out
ret
sbb
or
or
stc
sbb
scas
xor
xor
cli
hlt
cmp
lret
into
jg
rep
bound
popf
or
cltd
imull
loope
xchg
mov
out
in
cli
das
lock
inc
rcl
icebp
loop
sub
cmp
mov
pop
sbb
shr
inc
subl
bound
js
lret
sbb
ja
and
dec
or
mov
pop
js
lcall
sahf
lods
dec
dec
mov
jmp
fsts
inc
push
mov
pop
mov
lods
ret
sar
nop
cwtl
stos
leave
xor
out
sbb
adc
imul
xchg
sub
adc
movsl
push
jns
cwtl
and
jb
pop
loop
mov
mov
or
add
mov
invd
idivl
jno
imul
mov
mov
push
and
dec
std
repnz
ljmp
cld
pop
inc
push
push
ss
mov
popf
jns
or
pop
int
shll
inc
and
sbb
out
icebp
xor
loopne
nop
pushf
mov
std
xchg
notb
add
sbb
aas
pop
jno
test
xor
adc
adc
mov
mov
into
test
repnz
insb
rcll
dec
adcl
xlat
ds
xor
cmp
cmpsl
xchg
sbb
into
jns
ja
stos
loop
out
popa
dec
fisttpl
cld
push
and
inc
negb
inc
cmp
mov
hlt
xlat
outsl
jecxz
mov
or
aas
sub
pop
xchg
inc
shlb
or
insl
cwtl
insl
push
cmp
mov
mov
dec
mov
outsb
xor
sbb
jmp
pop
xor
ret
out
call
ss
sbb
lcall
aad
dec
xchg
adc
inc
xchg
sub
mov
mov
scas
add
xor
jnp
fsubp
jmp
jp
cmp
mov
dec
fwait
adc
ss
lcall
ficomps
push
not
int
mov
sub
mov
push
or
push
sbb
cmp
mov
cmpsl
sub
xchg
andl
jns
xchg
mov
test
sub
inc
rorl
sbb
jge
add
sub
test
mov
or
jns
pop
les
mov
enter
sbb
in
div
or
stos
sar
outsl
scas
push
and
adc
cmp
and
adc
cmpsb
sbb
jl
mov
mov
adc
push
sub
push
and
sbb
mov
push
movsb
xor
iret
test
icebp
cltd
mov
shrb
and
popa
pushf
push
push
lahf
mov
lods
xchg
push
mov
inc
mov
xchg
dec
dec
aam
mov
sbb
leave
mov
rol
bound
add
adc
sbbb
adc
rcl
xor
adc
adc
fmull
jbe
sub
xchg
mov
mov
inc
getsec
dec
xchg
inc
mov
sbb
sub
sti
orb
stos
inc
imul
add
mov
aaa
lret
je
rcrb
gs
lods
les
mov
int
jecxz
jo
shrb
inc
cltd
adc
cwtl
dec
dec
xchg
or
shll
das
ljmp
test
dec
adc
insl
adc
popf
gs
fcmovnb
add
xor
out
xor
int3
rcrl
cmp
ljmp
sbb
cs
jae
xchg
insl
pop
sbb
dec
jmp
lahf
inc
pop
xchg
flds
inc
mov
inc
xchg
mov
mov
push
push
lock
adc
out
daa
pop
loope
inc
cmp
cmpsb
inc
xchg
call
test
or
push
mov
or
stos
xchg
add
cmp
out
mov
in
add
test
fcoml
ss
push
cmc
push
xorb
add
jmp
stc
jns
and
push
loop
or
xchg
in
jge
jno
pop
add
jmp
dec
test
call
cmp
fistpl
cmpsl
xchg
mov
leave
in
testl
fadds
mov
stc
fisubs
iret
sbb
insl
inc
int
xchg
xor
sub
mov
int3
test
jo
adc
fs
cmc
inc
mov
out
sti
dec
xor
or
cmpsb
adc
push
jb
test
movsl
xchg
jmp
and
cmp
imulb
pop
popf
fstpl
sti
inc
cmp
ffree
push
iret
push
sub
into
hlt
rclb
fisttpll
in
sbb
das
inc
into
sub
mov
insb
popf
out
xchg
push
shlb
orb
hlt
mov
add
aam
in
daa
or
pop
push
adcl
push
sbbb
adc
sub
dec
les
mov
lds
xor
movsl
shld
inc
xor
out
xchg
fisubl
push
xlat
sti
loopne
cs
arpl
sbb
test
jl
mov
sbbl
fst
aaa
filds
jp
jo
mov
cs
mov
mov
mov
movsl
jb
int
xchg
int3
aas
sub
gs
or
insl
add
aad
cmp
adc
push
inc
inc
sbb
cld
sahf
les
dec
xchg
insl
scas
mov
adc
popf
sahf
fadd
inc
cmp
aad
les
mov
xor
and
pop
ror
xchg
jae
icebp
mov
fdivrs
clc
stos
dec
int
fstpt
sti
sub
fstpt
mov
fcomp
int
push
mov
cmc
sbb
fisttps
test
orb
fstpt
je
pop
test
push
mov
inc
shrb
test
or
sahf
pop
xchg
mov
mov
push
jnp
ret
mov
jne
push
lods
shlb
jne
lods
arpl
jle
call
icebp
sub
fwait
xchg
cmp
pop
jns
loope
inc
lcall
icebp
hlt
shr
lcall
mov
mov
clc
cmp
daa
pop
sub
fwait
aas
mov
outsb
jo
cmpb
cmp
ffree
mov
filds
std
dec
call
xor
outsl
dec
stc
sbb
aam
nop
mov
out
into
mov
cltd
push
leave
sub
xor
add
mov
mov
dec
mov
or
cmpxchg
dec
and
sbb
cmpsl
out
push
mov
xor
xchg
pop
leave
sbb
imul
mov
push
ljmp
sub
inc
adc
cmp
add
mov
sbb
pop
mov
imul
sbb
loope
mov
insb
outsb
cs
lock
ror
divl
rcr
pop
popf
add
adcl
loop
fsub
cmp
push
les
scas
fnstenv
ja
push
dec
jae
mov
pop
test
cwtl
mov
jne
or
adc
adc
xchg
cmpl
dec
out
push
ljmp
lret
les
cmp
xchg
adc
xchg
cmp
and
int
outsb
mov
std
inc
mov
mov
or
lret
cmp
push
push
and
dec
cmc
shrl
loopne
inc
add
sub
addl
sub
outsl
jmp
jmp
push
pusha
or
xorb
mov
insb
pusha
daa
jb
xlat
and
xchg
jmp
mov
xor
xchg
pushf
xchg
fwait
in
shll
loope
push
push
fidivs
mov
add
xchg
das
pop
push
or
inc
dec
mov
jp
frstor
jecxz
mov
cmc
imul
push
jbe
cs
xchg
sbb
sub
fists
jmp
and
fidivl
and
int3
loope
mulb
sahf
outsb
cli
add
xor
shlb
sti
jg
xorl
imul
jl
loop
loopne
orl
jne
ret
pop
call
loopne
push
mov
mov
repnz
pop
pushf
iret
je
movsb
dec
rcr
mov
push
cmc
rclb
push
mov
dec
cmpsb
bound
xor
mov
pop
push
pushf
lock
cmp
push
mov
xchg
xchg
into
jno
test
pop
dec
loopne
lds
xchg
sub
outsb
out
call
je,pn
pop
cs
mov
push
mov
adc
call
out
xchg
inc
aad
add
sub
in
xchg
ret
and
cmpsl
sub
xchg
popa
inc
pop
mov
insb
cltd
push
mov
stos
xchg
mov
cmp
sti
rol
add
xchg
cs
add
jle
stc
cmp
test
pop
mov
out
test
les
or
cmp
outsl
push
mov
stc
xchg
pop
cmp
sbb
push
enter
cli
add
lds
inc
movsb
test
repnz
js
sti
and
aaa
outsb
adc
jp
add
fnstenv
add
mov
scas
sub
xorl
xchg
test
nop
mov
sub
pop
stos
shll
ficoms
das
lods
jnp
inc
fmull
mov
push
pop
cmc
shrl
cmp
sarb
adc
orb
out
pop
jl
sub
mov
sahf
dec
add
mov
jo
test
jo
js
inc
repnz
xchg
orl
test
lods
mov
ret
jl
dec
fnstsw
adcb
out
div
loopne
call
je
and
sbb
out
push
and
sahf
pushf
and
fwait
rcll
push
mov
xchg
or
gs
push
incl
fadds
inc
out
jo
push
jmp
mov
fmul
inc
cmp
leave
ljmp
ljmp
push
mov
aaa
push
sbb
fstl
mov
dec
xor
lret
xor
sbb
lret
jns
dec
push
sub
ret
push
cmp
rcll
insb
pop
mov
and
f2xm1
and
xchg
adc
add
xchg
mov
xlat
adc
dec
repnz
xchg
push
mov
in
fwait
outsl
pop
push
fidivrs
pusha
shrl
insb
ficomps
test
fwait
hlt
aas
jno
das
pop
mov
stos
aaa
mov
xlat
jbe
lcall
push
arpl
in
jbe
mov
idivb
scas
push
mov
addr16
sub
into
mov
lds
push
jp
mov
jge
mov
pop
jle
pop
add
cmc
retw
scas
imul
lea
test
sub
xor
mov
lods
mov
inc
fists
orb
jecxz
pop
dec
insb
push
rcll
out
mov
repz
adc
xchg
cmp
dec
scas
adc
scas
sub
pop
push
fistpll
test
mov
insl
ja
xchg
ss
sbb
imul
or
inc
fwait
adc
out
aad
dec
jo
stos
loopne
das
cmp
mov
jns
mov
xor
lods
popa
adc
jno
jmp
inc
cmp
add
mov
xor
outsl
fsubrs
call
sbb
das
lcall
mov
ret
pop
test
mov
shll
das
andl
ficomps
pop
addr16
fwait
mov
cmc
inc
mov
dec
adc
dec
pushf
adcl
cmp
mov
sub
or
xrelease
aam
mov
jle
sub
cmp
testl
into
outsl
inc
add
mov
loop
pop
fists
mov
push
mov
and
sub
add
aam
push
adc
fcomps
xlat
sbb
sbb
mov
sbb
push
inc
xchg
insb
jae
inc
inc
lods
orl
xchg
dec
cmovg
outsb
stos
js
cwtl
mov
add
ljmp
add
xchg
in
dec
shrb
lods
sbb
jecxz
jns
je
cmp
mov
dec
test
pop
sub
pop
shr
shrb
ja
daa
add
push
int
mov
sbb
add
cmp
lds
cmp
iret
stos
mov
inc
aaa
pop
fdivrs
mov
xchg
push
movsl
ficoml
push
inc
test
push
shrl
jecxz
jae,pt
movsl
fwait
mov
mov
or
push
cltd
or
jbe
cmp
fstpt
dec
in
stos
lds
mov
cli
testl
fbld
push
lock
push
lret
mov
in
xchg
stos
xchg
or
dec
xor
dec
std
jmp
into
ja
jg
sbb
push
mov
xor
inc
mov
mov
dec
dec
dec
push
rcl
enter
or
enter
mov
lahf
xchg
inc
call
adcb
mov
and
mov
push
xchg
in
sub
std
push
push
xchg
xor
jp
jns
test
sarl
lods
cli
movsl
out
cmp
lds
fs
push
mov
test
jns
add
cmp
lahf
movsl
cs
push
popf
and
leave
mov
std
test
scas
mov
add
mov
fsts
mov
subl
jae
lds
jmp
jp
out
or
push
sbb
insb
push
insl
mov
lds
mov
push
fdivrl
jmp
push
testl
jb
jns
test
cli
pop
sub
icebp
mov
js
xor
aad
add
cmp
jae
push
loop
sub
add
cmp
bound
sub
sbb
mov
dec
call
faddl
adc
pop
sbb
aas
push
lcall
test
jbe
fiaddl
push
inc
push
dec
cmc
loopne
sbb
int3
out
movsl
sbb
cmpsb
mov
test
iret
xor
mov
loop
push
push
adc
aaa
hlt
pop
jl
rcr
icebp
add
xchg
sub
pop
mov
pop
mov
pop
imul
or
sub
jne
mov
or
mov
adc
ljmp
jns
mov
fsubrs
nop
pushf
icebp
sahf
mov
in
lea
push
data16
sbb
in
mov
bound
sub
fcmovbe
pop
mov
adc
jnp
enter
repnz
cmp
mov
xchg
iret
scas
jb
ret
pop
shll
add
hlt
fildl
loope
sarb
in
movsb
push
push
adcl
nop
insl
cmp
lock
push
add
push
shlb
sbb
insl
fimull
push
lds
insl
mov
xchg
adc
adc
mov
push
adc
xchg
mov
push
mov
mov
fbstp
sbb
adcl
fwait
iret
cld
add
cwtl
rsqrtps
cmp
mov
ret
xchg
jno
imul
mov
nop
ret
push
stos
and
hlt
das
jno
xor
jp
test
mov
in
dec
push
xchg
xchg
and
mov
inc
out
pushf
stos
lret
outsl
mov
xor
into
and
push
std
or
add
inc
mov
aaa
add
shrb
gs
out
pop
mov
rorl
adc
lret
jmp
shrb
fcmovbe
inc
je
mov
hlt
rcrb
stos
popf
shlb
sbb
xchg
cwtl
stos
into
js
fisttpl
adc
in
lea
add
clc
ret
dec
inc
notl
rolb
addr16
xor
inc
aam
icebp
mov
and
mov
scas
and
jle
imulb
daa
sub
mov
jnp
pop
mov
popf
or
xchg
sub
add
and
icebp
jg
jno
push
mov
sahf
in
cmp
push
pop
sub
cmp
push
addr16
mov
add
sub
mov
int3
jecxz
outsl
adc
popl
dec
ret
das
or
orl
hlt
mov
jo
out
mov
fnsave
mov
fs
dec
pop
xchg
data16
fsubrl
test
or
imul
xor
and
hlt
inc
xor
pop
xchg
fdivrl
mov
ljmp
cwtl
sub
out
sub
xchg
or
pop
div
fwait
push
iret
ficompl
mov
shlb
arpl
pop
and
cmc
repz
bound
jg
push
sbb
inc
xchg
ret
xor
or
sub
cs
sbb
data16
in
das
cmp
testl
xor
stc
sbb
mov
roll
cmp
xor
or
lea
pushf
es
cld
dec
or
mov
fs
mov
dec
mov
xchg
mov
fstps
sub
dec
cmpsl
data16
mov
pop
jns
mov
scas
and
inc
mov
push
ficoml
out
int
icebp
sbb
cld
xor
je
ja
pop
scas
ret
lcall
js
mov
fidivl
inc
or
mov
cmp
push
xor
mov
mov
inc
mov
aas
nop
xchg
sbb
ds
jmp
sub
mov
insl
test
rcrl
ret
cmp
sub
push
sub
ds
ja
hlt
icebp
xchg
add
orb
addr16
jnp
ss
xor
mov
lret
add
jle
or
push
hlt
out
jae
imul
adc
jo
clc
call
or
fmuls
in
iret
push
je
adc
fimuls
adc
fists
loope
mov
mov
fs
int3
movsb
mov
decl
jle
daa
sub
xor
jae
rorb
push
cmpsb
pop
aam
jo
dec
push
insb
icebp
js
cmpsb
repnz
and
lret
add
sub
test
pop
hlt
cmpb
push
bswap
mov
adc
sub
inc
dec
inc
int3
repnz
inc
notb
in
lock
iret
shll
add
mov
imul
xor
jecxz
icebp
inc
int3
xlat
jmp
add
mov
push
jns
std
inc
and
add
jmp
divl
sub
cmpsl
lods
into
out
or
fbld
ja
fwait
iret
or
push
mov
mov
jecxz
and
out
mov
adc
xchg
or
sub
ss
gs
jbe
sbb
into
cmpsb
jecxz
sti
xchg
out
rcr
sahf
subl
in
cltd
loop
inc
fbstp
fstpt
js
hlt
mov
inc
call
mov
add
jecxz
pop
adc
outsl
loopne
add
dec
and
or
xor
fmulp
in
add
jnp
adc
sub
das
sti
dec
dec
cmp
inc
icebp
js
or
icebp
stos
mov
shll
jo
mov
ja
andb
jnp
dec
pusha
fstpl
mov
inc
jno
mov
mov
mov
or
mov
in
hlt
xchg
out
cmp
fld
push
add
pop
sub
aam
mov
ljmp
push
lret
and
shlb
mov
sha256msg1
roll
into
cltd
ja
add
shlb
fcompl
sbb
ja
or
stc
jmp
xor
cwtl
and
mov
push
push
push
jecxz
call
xchg
movsb
cmp
call
repnz
push
inc
pop
iret
orl
mul
cmp
mov
pop
cli
sbb
and
cltd
insl
xchg
cmp
push
loope
xorb
pop
add
mov
pop
xlat
pop
or
mov
pop
mov
stc
out
xor
mov
dec
adc
ss
jnp
pop
cmpsb
ficomps
out
mov
lock
jno
jb
ds
ret
lds
pop
loope
jecxz
lret
ret
xlat
fldl2t
jg
rcr
rorb
lcall
repz
iret
mov
pop
and
into
inc
sub
sub
lret
push
shrl
xchg
sbb
inc
addr16
movsl
push
pop
push
pop
xchg
imul
loop
sbb
mov
xchg
mov
xor
inc
inc
cmp
test
mov
jle
js
pop
in
les
xchg
lods
dec
arpl
test
scas
stc
and
fcom
dec
sbb
out
jmp
or
xchg
out
negb
jb
mov
xchg
ret
xor
lock
or
xlat
mov
adc
mov
pop
pop
mov
in
push
jl
mov
dec
iret
jae
xor
inc
inc
push
jge
sbb
mov
inc
inc
inc
lock
test
mov
stos
cwtl
scas
xchg
shr
and
cs
dec
in
cltd
in
xchg
push
insl
add
icebp
mov
mov
mov
jecxz
sbb
shlb
sbb
lds
add
mov
and
cmp
mov
adc
inc
fsubp
or
dec
jmp
shrb
ljmp
lret
push
fcoms
dec
jns
sti
ds
stc
xor
mov
jne
jle
jge
cwtl
movsb
adc
incl
ret
sbb
fmull
cmp
jl
out
mov
scas
xchg
xchg
aad
lret
dec
cmpsl
cmp
and
cmp
push
push
loop
rcrb
sub
push
int3
or
mov
clc
add
cmpsb
mov
ja
cmp
adc
ret
ss
jno
jno
mov
fsubrs
inc
icebp
xor
pop
je
in
hlt
mov
les
rol
jle
add
jge
mull
inc
xor
dec
jg
mov
enter
dec
jge
inc
sub
add
mov
mov
push
and
repz
push
adc
out
loope
lret
cwtl
adc
or
loope
dec
lds
cmp
outsl
xlat
sub
lods
addr16
sar
ret
xor
xchg
mov
mov
adc
arpl
cltd
negl
btr
adc
movsb
xchg
dec
pop
push
and
rolb
iret
push
lahf
outsl
jno
pop
push
lgs
mov
jb
repz
sarb
sub
addr16
cmc
mov
std
sbb
xor
nop
je
jno
xchg
ss
lds
mov
dec
data16
inc
push
testb
mov
or
inc
mov
sub
mov
sub
inc
push
adc
fidivrs
lea
sbb
xor
cmp
jo
push
push
pop
cmp
scas
std
sub
xchg
and
mov
push
and
sbb
imul
repnz
cs
ret
push
xor
xchg
cmp
dec
shlb
aam
xchg
add
xlat
mov
mov
cmpsb
push
shl
in
sbb
push
sti
lds
add
inc
adc
sbb
mov
and
fwait
jae
mov
dec
push
xor
adcl
dec
insl
gs
pop
or
loope
fbstp
dec
test
test
xor
ret
pushf
push
scas
jae
cltd
mov
call
in
sti
in
pop
cltd
bound
push
pop
adc
shll
out
or
xor
mov
cwtl
jecxz
pushf
mov
mov
push
mov
lds
add
ljmp
fisttpl
sbb
adc
outsb
pop
jo
and
in
push
pop
push
cmpsl
loopne
movsb
mov
lods
mov
std
sub
lock
test
push
stos
cmpsb
mov
push
lock
dec
ja
stos
xorl
jo
sbb
icebp
dec
add
xchg
ja
push
xor
push
xchg
fucom
incl
add
icebp
pop
mov
aaa
sbb
push
cli
clc
das
andb
je
or
xor
rorb
test
add
xchg
inc
push
sbb
test
push
in
imul
bound
fcomp
repnz
mov
adc
es
jne
lock
inc
sbb
orl
ds
or
or
lds
hlt
bound
das
cmp
xor
xor
adc
shlb
mov
sbbl
sahf
out
leave
sub
sbb
fisttps
sub
dec
jmp
push
in
adc
xchg
ds
xchg
xchg
sub
adc
mov
sbb
dec
adc
fidivrl
xor
mov
decb
or
in
cld
adc
adc
cltd
mov
mov
mov
push
push
inc
stos
aam
sbb
and
rorl
cmp
xchg
adc
sbb
sub
in
mov
lods
cld
stos
fsubrs
fsubrs
cmp
jge
mov
add
inc
xchg
test
test
lret
pushf
xor
jle
insb
mov
cmpsl
push
xchg
cli
repnz
mov
cmc
dec
adc
and
loope
dec
xchg
xchg
shrb
rclb
pop
int3
loopne
cwtl
xor
cmp
sub
fdivrl
das
ss
mov
repz
dec
mov
xor
test
sub
add
bound
and
sbb
mov
cmp
in
or
adc
test
pop
shl
push
dec
add
mov
or
call
lods
jg
fisubrs
sub
arpl
mov
shrb
push
ljmp
bound
test
sub
cmp
sbb
inc
rcrl
xchg
outsl
out
test
daa
and
int
dec
pop
cwtl
inc
push
push
fs
mov
inc
mov
xor
or
in
test
add
mov
and
dec
sti
mov
sbb
aam
je
arpl
jle
push
jne
test
push
scas
in
jg
mov
negl
in
test
outsb
sub
mov
je
pop
dec
xor
out
in
fcompl
and
mov
xor
scas
repnz
inc
push
pushl
cli
clc
out
filds
mulb
stc
and
std
push
sbb
or
push
xchg
sbb
pop
mov
lcall
pop
sub
aad
dec
test
out
mov
movsl
je
and
jp
mov
lock
and
and
test
jp
pop
sbb
nop
iret
sub
or
sar
cmp
in
sub
mov
ds
push
pop
dec
fs
and
nop
pop
xor
orb
outsl
adc
rcrl
test
enter
jl
inc
push
inc
hlt
xchg
pop
sbb
or
sahf
add
fdivs
ret
push
mov
popa
dec
xchg
stos
mov
lcall
ss
adc
cmp
lret
ljmp
dec
xor
and
fs
ja
out
dec
rcll
inc
add
fsubs
xchg
inc
pop
xchg
in
jmp
mov
inc
sbb
push
mov
shrl
dec
adc
mov
addr16
fistpll
jle
jne
daa
es
shll
cld
jb
pop
and
mov
imul
sub
fwait
js
dec
adc
aaa
rolb
sbb
sbb
lret
das
subl
iret
out
and
jne
xchg
adcb
imul
cmp
jmp
cs
adc
cwtl
jnp
and
mov
mov
iret
jno
cmp
jecxz
adc
mov
es
cwtl
adc
sbb
or
fnsave
pop
add
and
pop
pop
mov
loop,pt
fs
mov
mov
pop
jnp
in
pop
sbb
push
sub
lods
cmp
jno
in
lahf
inc
sub
fnsave
movsl
xor
dec
dec
lcall
and
xchg
xchg
test
insb
jmp
and
mov
and
lcall
mov
lods
inc
test
fistl
sahf
xlat
sti
jae
mov
sbb
call
and
lret
mov
jne
popa
sub
aas
add
mov
sbb
add
and
fldcw
jle
mov
loope
clc
add
movsl
aaa
inc
pop
and
pushf
sbb
icebp
mov
push
cltd
into
jb
daa
dec
sbb
fwait
loope
or
das
sbb
jmp
inc
loop
dec
and
loopne
push
testl
mov
enter
mov
pop
pop
mov
ds
sbb
adc
jo
pop
adc
pop
test
fmulp
repz
rcr
repnz
adcb
test
mov
jmp
mov
stc
mov
sbb
pop
lods
and
jl
outsb
inc
cmp
jp
push
add
jae
outsl
xor
fucomip
mov
jo
or
mov
jle
jmp
rolb
push
add
inc
sbb
push
add
fisubrl
mov
sbb
lahf
xchg
mov
outsl
scas
jae
shll
hlt
adc
push
mov
shll
pop
loope
lahf
mov
imul
push
addb
inc
xchg
cwtl
jecxz
mov
pop
xor
gs
jo
loope
push
pop
push
dec
pop
adc
push
insl
mov
mov
jle
sbb
jno
stos
inc
add
in
jge
jmp
addr16
ss
cmp
lods
outsl
adc
cmp
dec
daa
jo
das
or
sub
or
jnp
sub
cmp
inc
mov
fcmovnu
jl
pop
pop
bound
jno
sbb
sub
movsb
cmp
pop
mov
mov
pop
lcall
outsl
out
cmc
lahf
jle
mov
in
push
sbb
pop
push
xchg
xor
fcompl
push
mov
cmp
jle
call
cld
iret
addr16
lds
pop
jo
push
pop
pop
pop
push
inc
inc
in
mov
loop
test
mov
sub
popa
or
mov
popf
dec
shll
xorl
inc
inc
sbb
jbe
cs
mov
push
mov
mov
mov
mov
mov
lcall
fs
out
sbbb
xor
scas
lods
mov
inc
inc
push
in
int3
sbb
movsb
insl
out
out
xor
xchg
pop
pop
or
push
add
ss
pop
inc
test
mov
shll
cmp
push
push
mov
hlt
aas
or
dec
aaa
in
cmp
lcall
gs
ss
fnstenv
fmull
pop
push
xor
gs
dec
pop
fdivrl
pushf
xor
test
ror
mov
lea
clc
jp
add
sub
arpl
push
add
mov
mov
and
les
xchg
push
mov
out
or
push
jl
outsb
cmpsb
arpl
add
jge
mov
or
push
or
test
test
popf
xchg
sub
aam
pop
add
mov
cmp
fstps
pop
cmp
es
sbb
rcll
imul
xor
inc
pop
push
out
leave
arpl
out
and
mov
inc
int3
fwait
pop
jp
test
jg
outsb
sbb
les
push
mov
xor
insl
sub
adc
dec
cmc
sub
js
outsl
aaa
mov
mov
or
jo
jnp
push
cwtl
jle,pn
xor
mov
sti
dec
ret
fisttps
test
scas
cwtl
fmulp
mov
dec
dec
sub
fs
push
ljmp
xchg
imul
in
jp
sub
jg
hlt
mov
in
pop
push
inc
jo
mov
push
dec
mov
aas
add
insb
mov
dec
cmp
adc
fcompl
and
inc
movsl
int
sub
push
aad
mov
jle
stc
cmpsb
jl
neg
mov
pusha
cld
pop
xchg
ds
lret
dec
dec
nop
mov
jl
pusha
inc
fidivs
fldl
dec
insl
cmpsb
ja
cmp
mov
xor
add
call
xor
push
xchg
ret
mov
push
sbb
xor
adc
daa
pop
ficoml
aad
pushf
daa
movb
mov
scas
jo
ja
movb
mov
jb
or
std
push
inc
clc
dec
fucom
add
cli
or
loope
xchg
push
jecxz
inc
in
out
mov
pop
push
and
pop
mov
mov
add
sbb
dec
or
stc
addl
jge
aam
jmp
xchg
inc
xor
cmp
push
data16
sub
mov
add
mov
call
add
cwtl
jnp
mov
and
sti
cmp
movsl
xchg
aaa
lods
mov
outsl
pop
dec
scas
sub
hlt
loope
scas
jle
filds
mov
pushf
cltd
cmp
pop
push
fnstsw
bound
jb
gs
cmp
rcl
mov
mov
ret
push
mov
mov
jecxz
or
sub
nop
dec
es
out
mov
push
sub
or
hlt
mov
mov
jno
rcll
mov
xor
clc
inc
add
xlat
and
pop
inc
mov
setae
outsl
xor
jnp
inc
sub
jp
and
push
lods
clc
stos
outsb
jno
out
test
sub
or
movsl
ret
xlat
mov
mov
and
fistpll
or
xchg
movsb
es
aam
repz
push
or
ljmp
xor
rorl
lods
sub
cli
dec
jno
pusha
aam
jmp
cld
lods
cld
scas
jb
adc
cmp
shrb
sahf
push
xchg
aaa
sub
xlat
xchg
clc
nop
jg
mov
insl
add
mov
mov
pop
xchg
sbb
mov
or
or
xchg
sbb
addr16
xchg
push
aas
pop
insl
mov
sub
adc
or
sar
push
and
fwait
mov
sbb
hlt
inc
pop
jmp
adc
xor
sbb
fwait
pop
repz
xchg
cmp
inc
test
xchg
adc
daa
mov
or
outsb
cmc
sub
dec
jbe
push
ss
sbb
add
shlb
cmp
flds
aam
mov
in
push
dec
jecxz
sub
jns
fcmovnb
jne
xor
lret
imul
enter
mov
xor
enter
fisubrl
data16
js
cmp
xchg
imul
arpl
add
lods
adcl
sub
je
aaa
xchg
mov
push
fdivrp
mov
mov
add
pop
fiaddl
dec
xchg
movsb
xor
aad
fisubrl
or
imul
and
iret
jb
aam
data16
lret
aaa
stos
jl
test
mov
and
ljmp
rorb
dec
cmp
or
mov
and
pop
pop
and
jo
dec
sahf
out
adc
loop
outsb
add
adc
incb
mov
jno
imul
insl
push
mov
popl
ficoms
mov
test
push
pusha
xor
call
inc
lods
add
mov
outsb
inc
xchg
add
idivl
fwait
outsl
xor
pop
xchg
cmc
jnp
xlat
dec
fisubrs
pop
jnp
fs
mov
xchg
xor
pop
dec
xchg
icebp
out
push
mov
push
mov
jmp
mov
cmp
lea
mov
or
push
cmc
push
movsl
out
jp
mov
mov
mov
in
je
sub
mov
mov
aam
xchg
and
jp
fiadds
cwtl
and
int3
pop
push
adc
shrl
mov
dec
xlat
lret
cmpsb
xor
mov
jg
popf
dec
pop
scas
mov
cmp
lahf
cmp
cmp
sub
adc
mov
in
into
mov
mov
scas
pop
mov
push
fistpl
add
in
ret
xchg
pop
cmovs
call
inc
or
imul
jbe
add
adc
daa
pushf
mull
and
mov
fisubrs
pop
dec
clc
mov
out
into
and
push
dec
adcl
xor
test
mov
mov
cmp
xlat
imull
out
or
pop
stos
jne
xor
add
das
xchg
xchg
cmp
add
cmp
lods
rclb
std
adc
pusha
out
or
int3
sbb
mov
adc
scas
or
cmpb
test
jo
lods
mov
push
repnz
xor
addb
sarb
ja
int
lea
clc
mov
cs
sub
rcr
push
push
loope
popa
sub
push
cs
push
repz
xor
push
cmp
mov
jmp
cs
jne
out
pop
test
xlat
fmull
inc
lret
inc
pop
je
sbb
xchg
pushf
in
aas
push
xor
lret
pop
mov
xor
and
out
iret
insb
dec
lcall
movsl
push
mov
adc
nop
decl
push
adc
fsubs
aam
adc
in
dec
inc
fildl
inc
bound
clc
sbbb
mov
dec
repz
repnz
incb
jnp
je
dec
inc
call
mov
sbb
inc
xor
out
stos
loop
leave
push
and
pop
jno
add
ret
orb
movsl
cltd
pop
sbb
xchg
adc
sti
repnz
sbb
popa
scas
adc
xchg
or
dec
test
push
and
and
mov
leave
push
cmp
and
dec
hlt
add
xchg
mov
mov
aaa
pop
and
out
mov
pop
xor
mov
out
orl
push
andl
cmc
adc
or
add
sbb
dec
sub
sub
icebp
jl
sahf
sub
pushf
loopne
mov
cs
xchg
pop
imul
xchg
outsb
dec
sbb
sub
mov
inc
imul
pop
nop
mov
pop
pop
dec
dec
cwtl
les
notl
outsb
inc
push
rorb
cmc
add
xchg
ja
and
cmp
pop
xchg
cmp
test
add
sarl
jmp
dec
sbb
ds
push
in
fbstp
sub
in
outsl
test
lret
lahf
in
sbb
sub
iret
mov
scas
jle
and
xchg
cli
mov
std
in
xchg
jnp
jno
jmp
mov
cmpsl
and
and
mov
cmp
out
ja
xbegin
pop
mov
jnp
leave
sbb
jo
push
sbb
jbe
lahf
sub
adc
imul
inc
sbbb
adc
dec
test
mov
loope
pop
fwait
and
jg
inc
xchg
lret
add
orb
sbb
add
fldcw
repnz
outsl
xchg
or
xlat
and
mov
lret
pop
cmpsb
mov
outsl
fstp
push
loopne
mov
in
stos
ljmp
faddl
ja
add
popf
sbb
movsl
inc
sbb
fiadds
push
sub
in
out
fcoml
call
jo
mov
mov
sbbb
fwait
insl
nop
xchg
lret
xchg
dec
into
js
dec
lock
cld
adc
ljmp
mov
jle
ljmp
cmp
pop
addr16
or
jae
mov
xchg
rorl
movsb
push
sbb
jne
arpl
popf
fst
cmc
sarb
rcll
pop
pop
repz
test
dec
fdivs
lods
int3
jne
ret
sbb
daa
lods
stos
sbb
clc
mov
in
xchg
out
stos
adc
dec
add
sub
cltd
test
inc
xchg
das
jnp
mov
mov
repz
cs
adc
cmp
aas
daa
or
sub
sub
dec
js
jecxz
jl
adc
mov
push
or
ss
adc
fisttpl
jns
ljmp
xor
mov
mov
push
jo
xor
fstpl
cmp
rcr
push
sub
pop
dec
dec
insl
cmpsb
pop
mov
sbb
hlt
mov
cs
ds
aas
lods
fninit
bound
jmp
out
dec
clc
out
nopl
add
popf
pop
fldcw
out
sarb
int3
cmp
and
scas
cmp
das
inc
xor
in
cmpsl
pop
pop
xor
es
jg
mov
mov
mov
push
and
pop
cmp
xor
sbb
inc
je
outsb
pop
pop
imul
fcomps
out
ss
xchg
push
cmp
mov
mov
xor
xchg
push
push
fsts
arpl
call
and
mov
mov
xor
mov
arpl
and
jp
or
xor
rolb
stc
xchg
popf
xchg
ds
or
aam
popa
insb
cmpsb
inc
cwtl
ror
daa
cmp
in
pop
cmp
fdiv
test
inc
bts
dec
inc
fwait
shl
inc
test
mov
cltd
cmp
xor
add
push
scas
add
pop
rcl
or
faddl
add
in
insb
loop
das
push
fstl
test
clc
mov
or
pop
scas
cmp
xchg
shll
xchg
test
dec
xor
jnp
push
mov
cmpsb
cmc
arpl
std
cmp
rclb
add
inc
mov
int
mov
psllw
inc
imul
jae
ret
dec
mov
pop
movsb
or
into
cwtl
inc
shr
imul
dec
or
cmp
push
and
pop
mov
test
jecxz
bound
cltd
mov
mov
jmp
fdivr
cs
adc
std
xchg
mov
sbb
xor
or
out
xchg
mov
sub
mov
hlt
hlt
cwtl
jmp
scas
sbb
sub
or
sbb
mov
push
arpl
dec
int
lcall
sub
jbe
xor
pop
lods
adc
mov
dec
jb
stc
xor
cmc
clc
add
sbb
fldt
into
adc
jns
outsb
mov
push
xor
and
add
or
hlt
sub
xchg
mov
cltd
jmp
pop
pop
fistps
sbb
jp
fadd
cmp
imul
mov
push
in
fwait
add
rorb
push
and
xchg
lcall
jp
sar
rorl
aam
fists
inc
adc
xor
and
popa
cltd
lds
and
lret
jp
xchg
jecxz
xchg
hlt
decl
popf
sub
pop
lds
movsb
dec
jl
push
fs
push
daa
cmp
and
dec
pop
imul
lret
lds
mov
sahf
lea
mov
push
mov
sub
pop
mov
or
daa
inc
jbe
jmp
adc
sub
cmp
ds
and
or
test
pop
sub
lds
and
hlt
fcomip
xchg
int
or
push
int3
xor
and
cmp
jecxz
imul
loope
push
sti
cs
push
mov
rolb
test
lret
ret
pop
and
inc
xchg
aad
pop
cmp
out
sub
add
and
and
addr16
lods
xchg
or
rol
lods
cmp
vmread
adc
push
repz
cmp
rolb
int3
jmp
jmp
jns
sbb
cmpl
fwait
and
insb
pop
in
in
mov
adc
mull
push
add
scas
xchg
out
call
nop
test
out
mov
testl
fwait
aam
cmp
fisubrs
adc
test
test
inc
fsub
fbld
gs
push
pusha
or
jns
outsl
cltd
test
in
pusha
push
xchg
inc
adc
jg,pn
das
and
lock
sahf
mul
pusha
mov
test
lods
adc
ds
cmp
xchg
mov
insl
insb
inc
pop
loope
jmp
xchg
lock
mov
movsl
xorb
cld
shrl
popf
dec
icebp
ss
ljmp
mov
mov
test
and
movsl
daa
xor
sbb
es
cmp
or
sar
adc
stos
and
addl
sbb
stos
insl
or
imul
add
loope
push
push
dec
in
out
push
lods
or
repz
cld
out
sub
push
lods
popf
xor
outsl
inc
cmp
repnz
iret
add
in
sub
repz
sub
lcall
xchg
hlt
lods
jnp
mov
imul
push
sub
jo
stc
fwait
push
sub
xor
cli
adc
xchg
mov
or
stc
insl
jb
pop
and
add
shlb
out
dec
sbb
add
add
shlb
push
mov
push
add
imul
aam
loop
shl
or
je
cmp
popf
dec
jecxz
mov
adc
jl
repnz
arpl
sti
pop
push
negl
std
scas
inc
sbb
cmp
jno
sti
inc
pushf
inc
sbb
jnp
push
sbb
stos
out
jae
jno
sbb
mov
fwait
and
xchg
xor
mov
adc
xor
push
or
test
add
loop
xchg
adcl
jbe
adcl
lea
lds
xchg
aam
mov
xlat
or
test
jo
mov
jne
aad
push
sub
outsb
mov
jmp
pop
inc
stos
lock
iret
hlt
cmp
test
pop
pop
inc
fiaddl
inc
jbe
or
aam
jl
mov
bound
fwait
xor
sarb
mov
pop
adc
mov
and
add
lcall
insb
inc
xchg
test
push
mov
popa
lods
out
stos
faddp
sub
xchg
cltd
ror
hlt
movsb
push
inc
and
xchg
fdivrp
xchg
aam
sbb
pop
int
cld
pop
dec
add
js
push
test
icebp
roll
cmp
push
inc
out
testl
mov
lahf
cmp
cmp
cmp
rorb
enter
inc
jge
aam
mov
jmp
sub
scas
test
cli
pop
push
ficoml
pop
outsl
int3
jge
ret
mov
arpl
sub
dec
nop
push
jecxz
pushf
mov
loop
es
cmc
xor
daa
fwait
mov
or
out
repz
lret
jecxz
push
dec
sbb
shlb
xor
pop
cmp
in
test
jp
jge
stc
xchg
mov
lret
or
pop
push
cmpb
sub
ds
sub
mov
push
push
fmull
popf
popf
push
in
adc
cmc
in
mov
mov
mov
idivl
rclb
lahf
orl
ret
sub
sub
addl
jae
or
scas
mov
sbb
xor
mov
dec
mov
aaa
shr
outsb
adc
adc
mov
test
popf
in
aaa
loop
cld
dec
lahf
adc
cmp
push
add
sub
mov
movsl
rcrl
mov
pop
push
pop
repnz
stos
xchg
mov
in
or
scas
inc
punpckhbw
add
xor
push
negb
adc
and
cmp
loopne
sbb
shlb
mov
mov
jl
divl
mov
pop
push
stos
and
std
lret
push
decb
popa
stc
arpl
cmpsl
loop
xor
cmp
mov
add
std
or
jg
and
repz
jno
sti
inc
cwtl
push
dec
lock
sbb
and
pushf
dec
adc
movsb
xchg
pop
rcrl
test
lret
ret
shrl
shlb
xlat
sub
pop
push
das
ret
decb
incb
inc
sbb
mov
sbb
adc
add
mov
jmp
mov
pop
imul
push
sub
push
push
jmp
mov
xchg
pop
addr16
push
rcll
aam
cltd
movsl
push
sti
pop
xchg
push
rolb
adc
cmpsb
cs
mov
xor
es
cmp
lea
sub
push
movsl
mov
cmpsb
mov
and
sarb
mov
inc
adc
adc
mov
ljmp
sbb
scas
xchg
enter
ja
cmc
inc
cmpsl
mov
jecxz
mov
jl
push
inc
or
arpl
andl
xchg
mov
adc
xlat
out
pop
int3
incl
clc
mov
xchg
ja
inc
ss
out
mov
sbb
call
fmuls
sub
mov
inc
sti
or
lret
ret
out
inc
dec
lock
and
movsb
dec
outsb
xchg
pop
test
mov
xor
cltd
xor
cwtl
and
mov
inc
fstl
mov
ds
mov
sub
lcall
scas
xor
stos
push
sbb
mov
mov
lods
cltd
push
sbb
pop
movsb
mov
icebp
dec
mov
int
decl
shlb
adc
sub
xchg
ret
ds
js
mov
lock
nop
xlat
inc
push
std
jbe
push
call
or
mov
inc
sbb
fstps
rol
pop
idivb
lea
cmp
cld
cmpsl
repnz
mov
iret
mov
xchg
mov
movsl
dec
push
jbe
pop
pusha
lock
add
mov
sbb
pop
ficoms
mov
mov
dec
jbe
sti
clc
sub
cmpsl
lret
ftst
pushf
sub
shll
imul
rcll
add
std
mov
into
test
fisttps
dec
fstpl
mov
fcmovb
sub
lock
cld
inc
in
cmp
jns
lcall
lcall
dec
out
cli
in
mov
dec
js
jl
pop
fidivrs
push
adc
lea
icebp
jnp
insb
pusha
inc
push
xchg
cmp
cltd
std
inc
mov
and
pop
adc
loopne
mov
push
daa
lret
paddw
and
xchg
rcrl
jp
dec
ljmp
aas
xlat
jmp
or
xchg
xchg
adcl
dec
fadd
mov
sub
test
xchg
mov
xor
xchg
shlb
outsb
pop
dec
mov
lahf
push
das
in
mov
in
cmp
pusha
stos
dec
push
int
sub
lret
jbe
aaa
mov
jae
pop
sbb
aad
and
aaa
add
shl
into
sbb
mov
or
jb
sbb
movsb
jl
inc
adc
daa
out
std
pop
call
add
test
repz
les
xchg
xchg
dec
aam
iret
jmp
mov
iret
sbb
gs
inc
aas
jae
xor
mov
or
rol
mov
push
in
push
dec
xchg
cmp
leave
push
ljmp
cli
decl
cs
jmp
shrb
ds
orl
jnp
push
dec
out
mov
adc
fdiv
xchg
and
add
mov
mov
test
cwtl
roll
cmc
imul
nop
mov
pop
loop
xor
lret
jne
adc
push
addb
aaa
ljmp
adc
dec
int
gs
divl
inc
jns
jg
cmp
sbb
jle
addr16
ljmp
faddl
mov
mov
pushf
mov
hlt
mull
leave
insl
mov
sub
pand
and
cmp
cli
xchg
sbb
leave
sub
cmpsb
rcrl
dec
or
mov
xor
aaa
pop
push
lock
sub
jbe
pop
jp
sbb
sbb
test
cmp
insb
pop
jle
push
out
mov
mov
dec
js
jle
fnstenv
sub
cwtl
iret
cli
cmp
cld
push
xchg
mov
dec
and
mov
xor
loop
mov
adcb
ror
jge
sti
loop
jo
test
mov
repnz
lcall
test
sbb
push
push
in
arpl
sti
pop
push
cmpsl
data16
fmul
pop
jecxz
imul
scas
add
aam
in
stos
dec
dec
lret
dec
in
sub
or
sub
push
sbb
inc
pop
stc
cmp
sahf
inc
daa
ret
add
adc
outsl
push
sti
test
add
dec
jno
sub
dec
mov
jl
push
insb
or
addb
lret
jo
cmp
pop
scas
movsl
aaa
fists
cli
fcomip
lods
nop
stos
mov
nop
mov
jo
and
xor
mov
or
addr16
fbstp
dec
mov
call
add
mov
dec
ret
mov
sbb
push
pop
jae
xchg
popa
out
cmp
into
in
clc
or
adc
pop
outsb
sub
jae
iret
mov
push
xor
imul
popa
jmp
aad
loope
add
out
cltd
flds
and
jp
pop
lret
mov
pop
or
add
sbb
xchg
dec
punpckhbw
outsb
inc
fcmovnb
and
pop
das
mov
in
fisubs
mov
roll
orl
mov
dec
daa
adc
loope
mov
test
mov
mov
or
icebp
xor
ss
inc
jmp
add
mov
aaa
jmp
or
mov
pop
push
stos
mov
pusha
push
int
into
inc
ja
paddsw
adc
push
xchg
inc
add
inc
fld
inc
mov
fmul
stc
lcall
fidivrl
popf
jmp
shlb
popa
cmc
mov
mov
and
cmp
in
inc
fcompl
and
fidivl
dec
mov
xor
jnp
cmp
sub
push
dec
int3
iret
push
mov
test
jp
mov
in
imul
adc
mov
lea
into
rcrl
decb
mov
and
cwtl
xchg
mov
pusha
lret
adc
dec
imul
add
adc
push
mov
xor
dec
jp
mov
in
rcll
mov
push
jmp
xor
sbb
cmp
shlb
push
lret
or
loopne
test
xchg
testl
stos
fmuls
or
dec
loop
push
sub
inc
mov
push
push
ficoms
popa
jge
repnz
aam
jmp
sbb
imul
rcl
std
mov
ret
inc
test
lahf
lock
fs
and
fisubrs
mov
cmpsb
mov
movsb
ds
mov
mov
adc
scas
jne
pop
push
aaa
fcmovbe
fsts
negl
mov
mov
andl
fsubrl
mov
mov
test
push
jae
inc
loop
mov
mov
cmp
sub
dec
jne
push
jae
or
out
in
lock
out
orb
adcb
cmp
pop
cs
lea
out
in
into
cmc
rclb
and
divl
frstor
xlat
lret
mov
or
into
jno
inc
lahf
sbb
cli
imul
push
leave
push
dec
daa
clc
adc
fwait
loope
lea
push
mov
and
dec
and
xor
cmpsb
scas
dec
in
hlt
push
sub
cmpl
movsl
xorl
and
pop
xchg
mov
sbb
sbb
sbb
arpl
pop
xor
mov
int
pushf
adc
cmc
repz
pop
aaa
xchg
pop
scas
jecxz
mov
out
sbbb
pop
mov
xor
xchg
enter
cmc
test
xchg
push
and
mov
in
aas
pop
rol
fwait
jno
fisubrl
sti
mov
bound
jl
scas
jmp
inc
pop
shrb
xchg
aas
push
lods
hlt
jp
or
and
cmp
adc
pop
sub
cltd
cmp
inc
or
popl
cmpsl
jge
mov
jne
les
xchg
push
push
inc
int
mov
outsb
icebp
icebp
jo
ror
lds
fstps
repz
mov
je
mov
adc
fwait
and
cltd
mov
sub
movl
out
cmpb
jbe
xchg
ret
insb
add
in
mov
in
lods
incb
xchg
in
mov
push
ja
dec
loopne
dec
push
sub
imul
andl
shlb
js
inc
mov
jg
lret
or
lods
aam
test
cmc
mov
sub
inc
test
or
mov
pop
test
inc
je
push
imul
clc
out
stos
arpl
pop
jno
mov
lods
push
mov
jl
cmp
pop
dec
adc
stos
inc
adc
jg
out
sbb
aam
nop
insb
or
out
jbe
fnstenv
in
sbb
out
adc
cmp
jge
call
sbb
dec
fidivl
sub
push
xchg
mov
lods
rorl
inc
test
mov
lods
iret
cli
inc
test
mov
stc
jge
shrl
adc
inc
and
add
ss
popa
or
fadds
or
test
fdivrs
lods
aas
xchg
jb
dec
shlb
cltd
popa
jne
add
lret
jo
jge
pushf
cli
sbb
mov
xchg
inc
mov
shll
push
sbb
icebp
xchg
rcl
nop
dec
xchg
mov
mov
mov
adc
and
xchg
out
lods
pop
mov
das
or
fdivs
adc
test
jne
sti
popf
fdivp
jno
leave
fisttps
insl
in
inc
aam
mov
xchg
fs
not
adc
in
loope
nop
xchg
lods
cmp
adc
repz
shlb
shr
and
jl
xchg
clc
add
sub
adc
loopne
jp
xchg
xor
jnp
shrl
enter
mov
iret
ljmp
xor
popf
jb
cmp
jle
popl
call
int
mov
in
pop
cmp
xor
clc
leave
mov
mov
lea
ror
out
test
push
leave
adc
sbb
dec
inc
arpl
sbb
popa
inc
cmpsb
inc
and
cmp
arpl
mov
ja
push
xor
or
adc
adc
pusha
or
sub
out
adc
js
fwait
xchg
lds
cmc
enter
pushf
add
imul
and
sub
jle
and
and
push
imul
fwait
sub
jecxz
or
lahf
pushf
enter
push
inc
fwait
cs
push
lret
lea
out
les
and
xor
add
sub
aaa
stos
pop
cmc
or
sbb
jbe
add
ja
add
pop
imul
sub
daa
dec
das
scas
aam
push
bound
popf
lahf
aas
js
inc
or
xchg
push
mov
jg
int3
out
cmp
fldt
add
rcrl
popa
enter
xchg
lcall
xor
mov
cmp
aam
push
pop
mov
movsb
pop
imul
xchg
cli
popf
push
loopne
xchg
mov
aad
insl
cmp
sub
out
out
mov
and
les
pop
inc
rcl
inc
js
xor
push
cli
std
lgs
and
dec
mov
in
pop
movsb
mov
pop
xchg
daa
dec
imul
sbb
andl
pop
out
ror
loope
push
cmpl
add
clc
cmpsb
cmpsb
mov
aas
dec
rclb
or
out
popa
ret
inc
rcl
mov
lret
jg
cli
test
adc
cli
pop
dec
les
aas
arpl
push
stos
mov
daa
imul
adc
fimuls
icebp
fidivrs
loop
jmp
push
fidivl
in
push
divl
and
jg
mov
mov
fs
dec
sbb
cmp
sub
sub
cmp
lret
push
popf
dec
imul
jg
lahf
xchg
push
cld
mov
push
cltd
mov
xchg
inc
xor
cmp
test
or
jmp
cli
lods
inc
sbb
sbb
cs
mov
mov
xor
cli
pop
call
push
dec
mov
and
aam
aad
xchg
jae
push
gs
mov
mov
lods
or
push
out
shlb
or
pop
subl
push
enter
movsl
cltd
lods
jmp
xor
lods
and
outsb
mov
jecxz
or
jmp
cltd
enter
ficompl
cmp
lea
loopne
or
pop
lock
enter
hlt
push
or
test
xor
push
in
cmp
push
popa
movsb
pop
xchg
adc
dec
iret
ret
fldenv
popa
cmc
xlat
loop
and
popf
mov
mov
push
popf
xor
xor
clc
adc
das
into
test
add
mov
and
push
scas
out
push
and
lea
push
ret
lcall
push
mov
mov
sahf
clc
pop
pop
jb
jne
pop
adc
hlt
add
dec
repnz
into
lods
repnz
cmp
fcoms
ss
repnz
adc
bound
bound
adc
lds
les
mov
push
lcall
std
inc
adc
sub
and
jg
inc
movsl
xchg
int3
add
mov
jne
aaa
xor
jecxz
mov
aaa
iret
test
insl
das
mov
mov
stos
lahf
jl
lods
pop
shlb
stos
lret
testl
call
mov
mov
hlt
xchg
fildl
jne
or
xor
push
sub
flds
and
pop
enter
and
addr16
push
xchg
fucomip
push
pushf
push
mov
and
xchg
mov
xchg
call
lods
loope,pt
dec
leave
cmp
push
lods
iret
xor
leave
lahf
and
push
ret
jecxz
jle
add
js
lods
test
in
cmp
mov
clc
mov
fiaddl
jge
lret
inc
and
inc
xor
ds
in
push
sti
push
aam
pop
out
incl
xchg
add
aaa
lret
daa
xchg
cmc
jbe
xchg
pop
pop
cmp
pop
cld
xor
lret
adc
mov
cmc
dec
insl
leave
inc
xor
mov
imul
pop
sahf
inc
es
xor
jecxz
hlt
imul
ret
aad
into
ja
sub
out
or
inc
mov
push
inc
mov
pop
inc
mov
mov
movsb
scas
mov
sbb
hlt
sub
push
add
xor
dec
jle
in
ret
lods
lret
xor
lea
outsl
mov
loop
stos
in
setns
subb
mov
lcall
movb
sub
repnz
loop
mov
dec
insb
std
or
mov
sbb
xchg
xchg
cltd
notb
mov
popf
mov
mov
push
aas
lret
inc
dec
ret
add
cli
or
sahf
inc
cmp
xchg
dec
in
push
js
loop
push
xchg
cli
inc
dec
add
add
ds
addr16
jno
jb
cltd
out
mov
cmpsb
pop
popa
mov
dec
pusha
mov
decb
inc
fst
cmc
dec
movsb
aaa
pop
pop
add
add
inc
arpl
mov
mov
inc
idivb
xor
repnz
out
or
and
gs
mov
mov
rep
jno
sub
mov
sar
lds
mov
mov
sbb
ret
sahf
aam
push
add
les
inc
push
xchg
je
sahf
stos
cmp
repnz
xor
fdivs
inc
pop
sbb
pop
push
inc
and
cmp
in
push
inc
push
mov
add
mov
jp
js
xchg
movsl
push
xchg
xor
imul
jne
in
sarl
sub
cmp
ss
test
xor
and
sub
mov
mov
jns
inc
inc
aam
jns
hlt
pop
mov
xor
add
push
fadds
leave
inc
xchg
pusha
sub
std
fnstenv
addr16
sahf
and
and
ja
cmp
cmp
push
int3
jl
movsb
xorb
sbb
push
rcrl
mov
jb
dec
scas
fimull
mov
and
repz
sbb
ja
and
cmp
push
arpl
data16
popa
push
mov
cli
pop
pop
cmpl
or
test
dec
decl
stc
in
sub
sbb
mov
cmp
push
push
inc
ss
pop
xor
loop
pop
ret
fimull
and
adc
xchg
loop
fcoml
dec
xor
dec
andnps
mov
pushf
in
sbb
mov
mov
leave
decl
mov
sarb
clc
and
data16
push
mov
adc
fnsave
out
add
mov
jae
sub
push
insl
rorb
sar
or
xchg
popa
nop
dec
shll
xchg
jne
mov
out
shll
dec
mov
jo
rep
sbb
scas
rcll
or
hlt
enter
or
or
fisubl
mov
and
or
inc
ficoms
rcr
mov
int3
add
or
imul
xchg
pushf
pop
push
inc
mov
cmp
fisubrs
xchg
mov
cmpsb
mov
pop
jb
inc
xlat
push
push
cmpb
xorb
cmp
dec
mov
pop
loop
sub
fiaddl
movsl
mov
mov
mov
cmc
test
pop
ror
mov
cld
cmc
imul
int3
sbb
sbb
mov
push
hlt
dec
test
mov
mov
jmp
negl
fmuls
loope
sub
sbb
sub
inc
push
mov
insl
dec
push
push
push
jge
jl
repnz
mov
cmp
clc
adc
leave
je
fsubrl
mov
js
cli
jge
xchg
imul
jle
adc
cmpsb
call
xchg
adc
sub
inc
mov
xor
out
dec
jnp
and
cwtl
jae
or
aam
fstpl
pop
and
cli
orb
jns
leave
std
inc
xor
mov
adc
pop
add
pop
ja,pn
fcoml
ja
xor
cltd
sub
or
shll
nop
mov
or
stos
jp
std
sbb
nop
or
out
mov
popf
mov
xchg
in
sub
mov
or
pop
adc
push
movsb
xchg
cmp
sub
aam
fcoml
or
lods
mov
leave
mov
jno
mov
sahf
mov
sub
mov
mov
dec
jne
push
and
push
push
add
push
xchg
sbb
sub
mov
inc
jb
jns
ss
adc
shrb
ret
pop
scas
jecxz
imul
rorb
push
mov
jg
push
jb
scas
jno
lods
sub
fwait
cmp
cmpsb
orl
clc
push
push
movsl
std
fwait
ja
inc
cld
jo
int
add
insl
or
mov
in
and
mov
cmpsl
xchg
adc
test
mov
or
cmpsb
cmpsl
shrl
xor
xor
mov
ret
and
or
in
pop
add
sbb
jge
call
push
inc
push
adc
mov
jne
mov
loop
arpl
mov
push
shlb
dec
iret
imul
shlb
imul
pop
in
add
push
mov
and
mov
flds
mov
xchg
dec
hlt
cmovb
test
sbb
std
xlat
jae
icebp
cli
pop
and
xchg
mov
sbb
add
lea
shr
pop
outsb
xchg
pop
subl
mov
shr
hlt
int
inc
cmp
mov
pop
test
mov
fs
in
mov
mov
cmp
xchg
movsl
ljmp
sbb
jo
add
data16
imul
jp
fistpl
lret
into
outsl
clc
mov
cmp
out
mov
mov
mov
jno
fbld
xor
movl
daa
bound
ljmp
loope
dec
je
dec
mov
xchg
mov
cmp
mov
dec
push
sbb
scas
pop
mov
dec
scas
fidivrl
push
add
lret
in
loope
das
mov
mov
mov
pop
jg
inc
movsl
and
mov
outsl
adc
psubb
xor
jbe
sbb
jmp
enter
std
in
imul
cwtl
leave
sbb
rorb
das
adc
clc
test
jo
ds
rcrl
repz
adc
cmc
in
out
lods
ja
inc
push
jo
xchg
sub
or
cmpsb
push
add
pop
pushf
bound
imul
or
lds
jp
cmp
or
dec
xor
mov
cld
adc
xchg
push
dec
mov
call
xchg
in
repz
scas
loop
loope
mov
cld
mov
inc
enter
fwait
cmpsb
daa
xchg
cmpsl
mov
inc
fcoms
sbb
or
adcb
adc
push
sbb
ja
jno
pop
jb
mov
mov
in
in
sbb
mov
popf
shlb
lcall
sbb
sub
lret
sti
push
jmp
sahf
insl
fwait
gs
xchg
inc
lea
lahf
ja
loope
dec
inc
movsb
and
jae
stos
mov
inc
sbb
pop
jno
dec
rcl
imul
add
xor
and
in
addl
xlat
cmp
xor
fistpl
mov
inc
pop
push
push
xchg
std
cmp
mov
outsb
jne
rcl
push
jb
inc
stc
xchg
pop
jb
icebp
xchg
lods
jecxz
sbb
stos
testb
and
jne
inc
cli
pop
and
das
loope
jge
out
mov
test
mov
xor
sub
bound
cld
out
pushl
clc
inc
movsb
mov
sbb
pop
push
es
jmp
or
xlat
hlt
xor
icebp
loop
jle
pop
and
mov
mov
int3
cli
mov
insb
outsb
xor
sbb
adc
sbbb
sub
sbb
inc
sbb
mulb
cmp
out
stos
lret
inc
inc
popf
lock
dec
pop
push
dec
pop
lea
lahf
cmpsl
cmp
xchg
push
add
insl
loop
mov
cmc
and
mov
mov
ss
cmpsl
cmp
sbb
push
cmp
orl
pop
sbb
inc
stc
cld
push
pushf
call
xor
negb
mov
push
out
jne
leave
sub
fnstcw
es
daa
imul
mov
lds
pop
dec
cld
xchg
cmp
mov
mov
outsl
or
and
sbb
dec
jmp
call
jns
sub
scas
int3
cmpl
jl
iret
mov
mov
lcall
xor
into
test
cmp
mov
or
aad
mov
and
push
ja
adc
loopne
cmp
pop
aad
adc
cmp
or
pusha
nop
fistpl
jmp
cmc
scas
xor
rcll
adc
push
aam
jno
pop
and
cld
aam
dec
sbb
mov
mov
push
scas
xchg
cmp
cmp
sbb
inc
call
loop
xchg
cmp
and
inc
mov
loope
dec
push
les
adc
mov
std
push
mov
xchg
cmc
adc
lea
xchg
mov
add
test
mov
mov
adc
ljmp
pop
adc
push
dec
fsubrl
jno
add
jbe
gs
stos
fs
sarb
jae
cmp
scas
divb
js
inc
adc
jle
mov
cmp
push
xchg
xchg
data16
test
mov
push
ss
push
lds
inc
out
mov
xor
inc
jmp
sbb
iret
jno
mov
cmp
pop
leave
aad
ret
sub
sub
stos
sbb
shr
mov
into
aam
push
scas
fisttps
loop
pop
scas
jmp
add
gs
push
push
fucomip
xchg
cmpsb
xchg
out
out
xchg
mov
xor
jo
in
jo
sub
adc
mov
or
add
sbb
jp
dec
cmp
ljmp
sbb
lcall
xor
dec
or
push
mov
cltd
int
jg
aam
cmp
pop
popf
arpl
adcb
mov
inc
mov
or
xor
add
sub
fildll
xor
and
push
repnz
stos
lea
test
divb
sub
enter
int3
cmpsb
jbe
or
mov
sub
imull
push
xorb
xlat
push
ss
pop
popa
push
fisubs
and
cmp
mov
mov
sub
daa
push
imul
sub
loop
outsb
mov
fldcw
and
add
add
and
into
popf
push
pop
aaa
jmp
mov
pop
sti
push
call
sub
cmc
aaa
je
notb
push
ficompl
ds
sub
shl
jle
negb
or
ss
out
out
xchg
rcrb
xchg
ja
je
lcall
dec
xchg
popf
xlat
pop
rorl
xor
adc
gs
sahf
lea
cld
dec
call
push
hlt
in
fldcw
cmpsb
lcall
aam
in
mov
pusha
ss
fists
add
inc
in
mov
sbb
popf
stc
mov
adc
pop
sarl
ds
mov
movsl
cli
aad
fldt
jae
test
mov
sahf
pop
lods
pusha
data16
inc
mov
add
push
cmp
rcrb
sbb
call
out
loope
cmp
cmp
scas
xchg
popf
test
hlt
ja
loope
jp
aas
pushf
cmc
pop
mov
inc
mull
lds
mov
movsl
icebp
in
sub
je
es
cmpsl
add
cmp
xor
test
test
sahf
push
jbe
mov
jns
pop
cmp
into
test
inc
loope
sbb
dec
mov
outsb
sub
lret
pop
outsl
movsl
sub
negb
xor
sbb
xchg
scas
add
mov
ret
repnz
sarb
fs
jp
inc
pop
scas
sbb
ljmp
je
ss
mov
lds
mov
cmc
push
pop
sub
inc
bound
mov
xor
ja
xchg
mov
lds
jge
sub
inc
lods
cmp
scas
inc
pop
cltd
sub
jmp
in
dec
out
adc
add
or
adc
push
push
xor
mov
out
push
mov
sbb
sub
adc
pop
cmp
cmp
inc
loopne
cmp
dec
sub
jl
sbb
fcom
lahf
or
test
cmp
fdivl
push
sub
in
jge
jmp
je
rorl
and
push
sbb
mov
lret
popa
mov
sbb
sbb
push
shlb
sub
pop
cmp
data16
out
jl
sbb
jnp
xor
lcall
pop
mov
sub
movd
sub
rolb
push
xchg
sub
mov
addr16
and
xor
lahf
dec
imul
testl
cmpl
xchg
lea
movsb
cmp
dec
je
sbb
in
xchg
adc
inc
les
mov
lret
push
xlat
jge
or
test
out
sahf
dec
push
divb
cmp
jle
fldenv
or
cltd
imul
jns
pop
mov
lahf
daa
rorl
xorb
push
or
xchg
mov
lods
xchg
mov
cmp
adc
lret
sahf
clc
jno
mov
aad
es
clc
hlt
bound
push
mov
lcall
add
dec
sbb
add
lcall
cmp
inc
repz
push
fstps
inc
sbb
adc
test
inc
and
movsl
mov
push
imul
sbb
xorl
xor
dec
repnz
and
call
dec
push
sar
push
dec
enter
test
lret
mov
mov
popf
popf
sahf
xchg
add
shll
inc
loopne
mov
or
xchg
push
sbb
mov
inc
or
mov
lret
cmp
pop
mov
sub
test
mov
jp
sub
sbb
jns
mov
or
push
in
jne
lret
aam
scas
lods
lds
mov
jp
pop
lods
inc
sbb
mov
addr16
sbb
shrb
adc
jno
gs
and
mov
inc
leave
mov
std
fmulp
push
fadds
fsubl
push
data16
pop
inc
cltd
xchg
push
add
cld
ret
lcall
shll
fld
cmp
imul
lret
sub
mov
push
rcrb
push
or
mov
insb
ds
fiadds
dec
dec
les
movsb
mov
pop
nop
push
int
pushl
sti
flds
lods
inc
adc
pushf
mov
movsl
mov
push
scas
repz
lahf
shl
xor
jge
dec
or
orl
jp
push
jp
jb
jno
out
mov
mov
outsl
xchg
add
aaa
sub
mov
test
es
into
out
inc
mov
cs
stos
sub
xchg
in
test
sbb
inc
mov
ret
fsubrl
ljmp
pop
aaa
pop
jnp
jnp
cmp
idiv
lock
cmpsb
andl
push
ds
daa
jmp
jmp
out
jg
pop
shrb
daa
cmp
repnz
scas
js
stos
sub
adc
fisubrs
stc
sbbb
sahf
fld
movsb
pusha
fiaddl
inc
aad
repnz
xchg
cli
xchg
rolb
inc
in
sub
xor
mov
je
pushf
pop
pop
bound
outsl
cld
imul
or
stc
andl
int3
sbb
jnp
add
jno
inc
jb
test
jb
dec
pop
test
iret
test
mov
faddl
mov
out
aaa
repnz
icebp
mov
xor
cmpsb
or
sub
pop
gs
pop
ret
cmp
or
mov
jns
jbe
test
andb
stos
jbe
out
xor
xchg
or
dec
cwtl
add
mov
sti
cld
or
stos
or
mov
test
mov
adc
leave
pop
fisubl
xor
inc
hlt
dec
pop
imul
or
sub
sarb
movsb
movsb
pop
or
mov
in
mov
pop
aam
dec
xor
in
loopne
mov
jbe
mov
loop
icebp
inc
mov
cmpsl
repz
jne
scas
data16
out
outsb
dec
pop
cmc
pushf
imul
fisubrs
sub
rcrl
or
adc
push
pop
imul
std
mov
add
pop
pop
mov
or
jae
mov
sbb
popa
push
mov
mov
xor
scas
mov
push
jo
cmp
int
push
movsb
lock
xor
jno
xchg
paddusw
lock
inc
jl
int
add
mov
mov
push
jl
cmpsb
shlb
adcl
roll
dec
loop
mov
lds
cwtl
jle
mov
push
test
sbb
add
orl
pop
in
sbb
sahf
sub
mov
dec
fnstcw
mov
dec
add
andps
jns
test
ds
out
jl
inc
add
cmpsl
add
xchg
xchg
fdivp
cmc
test
movsb
out
dec
mov
ficoml
pop
or
mov
dec
pop
hlt
aad
bound
jbe
fimull
sub
add
repnz
pushf
sbb
test
les
add
or
iret
pushw
push
pop
mul
and
pop
push
or
mov
sub
xchg
outsl
cmpsl
xchg
dec
adc
xor
outsb
mov
jecxz
stos
pop
in
iret
mov
icebp
arpl
into
je
pop
sbb
sub
hlt
add
pop
pop
push
add
and
iret
icebp
adc
mov
pop
ficoml
out
fs
xor
loop
or
rol
adcl
pop
sbb
push
clc
fdivr
jae
cmpb
mov
popf
sti
ucomiss
push
test
out
jnp
mov
dec
sbb
fstp
adc
popf
adc
jg
ja
jle
and
cmpsb
insb
dec
out
jbe
jmp
sbb
das
xchg
subl
cmc
popa
jb
notb
je
adc
fs
movsb
fwait
mov
cmp
mov
mov
jle
add
sub
adc
cmp
insb
jbe
aas
jno
gs
loop
jp
sub
lret
pusha
push
inc
mov
insl
cwtl
call
dec
push
not
std
ljmp
lds
dec
fwait
mov
jmp
xor
fdivl
inc
mov
hlt
push
out
mov
sbb
mov
cmp
repz
add
adc
in
inc
stos
mov
mov
lds
or
sahf
popa
cld
add
push
add
std
jns
add
and
filds
imul
or
daa
fmull
xchg
lods
xchg
fadds
je
mov
xchg
into
inc
loopne
cmp
sub
pop
or
les
mov
adc
in
mov
outsl
push
dec
sbbl
adc
mov
or
leave
or
add
jecxz
lock
sbb
shl
fcoms
cltd
int
into
mov
push
mov
inc
push
data16
push
in
adc
add
les
mov
ljmp
jb
mov
outsl
jmp
lods
inc
ret
lods
mov
xorb
dec
push
inc
scas
insb
mov
rcll
sbb
outsl
mov
pop
mov
shll
mov
mul
lret
jne
jle
rorl
dec
lcall
in
pushf
test
shrl
in
je
cmc
pop
sub
inc
add
or
sti
sbb
stos
popa
adc
fmuls
pop
or
push
fnsave
fildll
push
icebp
in
pushf
xchg
pop
outsb
shrl
iret
das
in
inc
addr16
mov
lea
sub
fisubrs
aaa
mov
push
xchg
rolb
mov
xor
sub
fldcw
inc
sahf
pop
aam
xor
adc
loopne
lods
pushf
xor
adc
cmp
push
popf
xchg
notb
dec
mov
jne
pushf
or
adc
ret
lods
out
rcll
fistpll
inc
xor
lods
or
sub
repz
out
pop
and
inc
push
mov
ja
jge
pop
pop
mov
push
pushf
in
fcmove
dec
out
jne
and
addr16
dec
fistps
mov
push
das
movsb
lret
dec
inc
stos
push
mov
idivl
inc
add
or
jmp
pop
adc
sahf
mov
imul
xchg
movsb
mov
repz
enter
int3
adc
cmp
enter
xchg
ljmp
push
cmpsb
mov
add
jnp
mov
mov
repnz
xchg
setns
daa
rorl
enter
pop
mov
lods
pop
push
outsl
add
lock
mov
inc
repnz
pop
and
mov
and
and
fcompl
ss
fs
out
jmp
out
test
fs
imul
bound
push
mov
test
outsb
mov
rcl
jmp
cmpsb
push
mov
cs
mov
mov
xor
adc
cwtl
xor
addr16
push
aaa
rcrb
mov
inc
mov
gs
ret
pusha
lahf
dec
loop
in
insb
in
lret
out
fcomps
inc
pop
cmp
in
loopne
push
jne
in
and
inc
sti
and
cmp
pop
into
xor
cmp
popf
fdivrl
jecxz
push
push
xor
pmaxub
lahf
add
pushf
mov
mov
jo
xor
es
sbbl
xchg
pop
stos
mov
and
dec
mull
in
mov
pop
mov
stc
lahf
adc
or
xchg
cmp
mov
xchg
int
mov
leave
mov
jg
int
and
lret
inc
inc
dec
idivb
mov
sarl
sbb
in
mov
cmp
mov
pushf
hlt
orl
lods
int3
cmc
push
shr
sbb
cmp
and
sar
cmp
shrl
cs
inc
clc
js
xchg
mov
mov
movsl
xchg
adc
lret
sub
inc
rcll
test
jbe
pop
sbb
push
jo
mov
fnsaves
inc
sbb
test
movl
in
push
mull
ret
inc
ja
and
pop
pop
cmpsl
std
sub
mov
cmp
lods
loope
loopne
push
dec
jp
mov
jo
int
jp
dec
insl
and
pop
jp
jecxz
add
ret
loop
in
fimuls
add
movsbl
clc
or
mov
insb
stos
repnz
out
mov
ds
inc
std
mov
outsl
sbb
mov
in
cmp
pop
mov
sub
cmpsb
push
fdivr
dec
dec
cmp
push
roll
mov
xchg
mov
fisttpl
loop
jle
or
adc
test
adc
insb
push
call
popf
test
and
aas
jb
pop
sahf
jp
dec
shrb
nop
popa
pop
in
into
rcll
and
pop
ljmp
movsl
sub
jge
test
and
sub
movsl
pop
insb
jmp
lret
jo
mov
test
rcr
ljmp
rcr
jge
js
iret
pop
mov
push
push
mov
pop
and
sbb
mov
jnp
fstps
in
or
mul
jae
xchg
movl
scas
cmp
sub
mov
call
or
cmp
nop
mov
jae
pop
or
xchg
xchg
and
xorl
mov
in
sarb
mov
in
cmp
les
aad
sbb
clc
dec
sub
stos
data16
into
inc
and
sub
arpl
mov
push
fcoml
imul
push
pop
pop
or
push
in
leave
outsb
out
xor
cmpl
hlt
enter
add
xchg
lods
mov
or
mov
lahf
int
mov
popfw
loope
xchg
inc
pop
push
mov
dec
cmp
imul
stc
mov
or
lods
pop
mov
aas
iret
xchg
push
push
cmc
pop
mov
adcl
and
stos
in
stos
jg
xor
sub
jmp
dec
xchg
lock
js
or
in
xor
pop
sbb
dec
adc
push
cmpsb
dec
push
dec
inc
mov
aam
sub
add
dec
int3
hlt
jo
mov
lahf
test
lods
int3
sub
popf
inc
inc
mov
sti
rclb
loopne
adc
push
add
inc
pop
push
mov
inc
fists
mull
cld
popa
inc
lret
stos
jle
adc
fwait
xor
pop
dec
stc
jno
push
fsubr
ds
lods
cmp
adc
sarb
xor
ficomps
fimull
inc
adc
sub
cmp
in
and
inc
inc
out
push
pop
xor
dec
lcall
test
popw
fcoml
shlb
push
addb
lock
pop
mov
pop
sub
push
lcall
hlt
cltd
movsl
test
jne
dec
js
insl
insb
cmpsl
sbb
in
aad
sbb
adc
aad
xchg
je
fisubrl
aaa
notl
jbe
cmpb
lahf
add
xchg
test
sub
ds
xor
push
int
in
dec
or
sub
jns
dec
mov
jb
jae
and
into
jnp
pop
mov
inc
lcall
stos
inc
adc
lea
outsl
pop
ja
popf
inc
fnstenv
add
push
mov
add
dec
mov
out
lods
mov
in
mov
scas
xor
sub
jmp
sub
adc
arpl
imul
imul
jne
adc
inc
cmp
inc
pop
push
pushf
out
add
cmp
or
jne
out
xor
fmulp
or
pop
cmp
xchg
lods
push
cltd
xchg
rcr
adc
mov
addr16
inc
aam
push
hlt
movsl
addr16
enter
mov
sbb
stos
add
pop
jbe
lods
pop
sbb
sbb
xchg
jae
es
sbb
data16
pop
jno
sbb
arpl
rep
fadds
scas
scas
or
cmp
loopne
popa
insb
or
ljmp
xor
daa
les
pop
pop
mov
clc
shlb
sahf
or
sub
xor
push
js
out
stc
out
int3
lods
ret
inc
cmc
decb
rolb
cmp
fbstp
cmp
lret
mov
jmp
sub
fiaddl
mov
mov
push
or
or
inc
xor
mov
push
inc
movsb
loop
mov
test
icebp
arpl
mov
mov
pusha
inc
inc
addb
or
movsb
pop
aad
sbb
inc
add
cs
fwait
iret
in
pop
push
lahf
sub
cmp
push
mov
pop
inc
ror
pop
jo
std
sub
aaa
xchg
push
push
add
mov
sahf
jle
ret
sbb
adcb
cmp
pusha
nop
in
inc
or
mov
sahf
mov
jo
fcom
mov
cmpb
bound
ss
mov
mov
aas
cmp
jl
test
pusha
pop
inc
lret
stos
daa
repz
push
lods
push
in
pop
out
loopne
xor
out
jnp
test
aas
cld
push
scas
iret
std
cmpl
add
push
int
pop
in
push
lock
ret
test
sbb
push
out
mov
mov
push
cmc
incl
push
andb
lret
mov
faddl
cld
xchg
push
jnp
jnp
add
pop
inc
xlat
pop
loopne
push
inc
dec
std
push
arpl
into
imul
adc
cmp
int3
add
sub
scas
hlt
or
and
sub
aam
mov
add
push
movsb
gs
sbb
insb
iret
les
push
or
inc
xor
pusha
mov
rcrb
push
fwait
aas
pop
sbb
je
jnp
mov
aaa
push
mov
pop
lock
mov
inc
or
inc
lret
mov
imul
xlat
sti
xchg
lret
xchg
out
adc
rcll
lds
add
xor
jecxz
xor
mov
ret
ss
roll
inc
and
enter
fwait
adc
bound
loope
clc
jp
cmp
out
xor
push
mov
mov
mov
iret
test
movsl
rcrl
xor
and
ds
cltd
pop
xchg
push
movsl
movsb
les
loopne
out
xchg
and
stos
pop
ret
dec
pop
pop
sahf
sbb
int
fcoms
jae
mov
and
xor
rcl
push
or
cmp
sub
jno
sbb
test
pop
loope
sub
add
out
addb
pusha
std
fsubrl
movsb
cmpsl
lods
dec
xchg
inc
mov
loop
gs
jmp
push
je
cwtl
int3
mov
daa
mov
add
dec
ds
sub
adc
into
int
xchg
mov
addl
lret
and
fisubrs
in
leave
add
sbb
and
sar
lock
xchg
cwtl
sbb
insl
pusha
mov
rcr
popf
mov
mov
push
pop
or
sbb
dec
fs
das
sub
icebp
lods
clc
stc
gs
mul
subl
icebp
cmp
ja
mov
jns
aas
and
add
scas
addr16
je
movsb
sbb
int
clc
call
dec
lds
fisubrs
adc
fcomps
push
add
mov
notl
pop
fwait
push
fcmovu
jecxz
jp
and
mov
xchg
loope
add
pop
jbe
add
sbb
pop
push
test
mov
sbb
push
mov
xchg
mov
pop
xchg
cmp
insb
mov
dec
dec
mov
insb
or
jo
in
xor
movsb
mov
arpl
add
xor
scas
xchg
inc
cmp
fistps
cld
jmp
out
push
in
test
ja
pusha
mov
push
dec
xchg
and
push
popa
xchg
imul
and
dec
xlat
imul
push
mov
push
mov
xchg
test
and
lret
cmp
xchg
and
push
nop
je
test
cmp
pusha
sbb
mov
inc
pop
ror
xor
push
movsb
dec
push
pusha
std
cmp
imul
ret
add
mov
mov
cmp
mov
fistpl
cli
dec
out
xor
inc
jp
mov
jl
jb
mov
and
repnz
or
leave
sub
insb
movsl
mov
adcl
cmp
fisubrs
xchg
inc
xchg
xor
inc
push
mov
inc
mov
cvtps2pd
mov
pushf
roll
pop
dec
jp
daa
and
pop
cs
push
mov
aam
mov
mov
icebp
push
sub
out
mov
notl
cmpsb
dec
xor
jb
cwtl
cltd
outsb
pop
jmp
dec
inc
sub
push
adc
neg
jmp
rorb
fidivrl
mov
ss
mov
test
ret
mov
adc
aas
fwait
inc
fbstp
sub
out
jmp
xchg
jg
daa
and
jl
fistpll
jl
test
aam
ljmp
xor
fdivrs
into
and
lret
repnz
lds
int3
clc
push
test
xchg
add
mov
lret
mov
cld
pop
push
xchg
scas
xchg
mov
xchg
nop
mov
push
cmovo
dec
test
pop
add
or
and
mull
cmpsl
push
stos
sub
pusha
inc
mov
addl
jl
xchg
scas
mov
mov
scas
xorb
ljmp
mov
cmpl
mov
adc
jmp
mov
fcomps
mov
inc
aas
js
jnp
add
xchg
lret
insl
call
daa
cwtl
test
aaa
mov
cmp
jae
sub
ds
pop
and
sbbl
dec
aas
push
andb
pop
iret
pop
push
roll
stos
mov
jmp
mov
sub
mov
stc
push
inc
int
aaa
push
out
dec
pop
push
out
sub
in
lcall
push
sbb
or
ljmp
pop
fcmovu
test
mov
enter
mov
and
pop
xchg
shlb
pusha
sub
bound
arpl
xchg
cmp
cmp
int3
pop
into
mov
out
mov
scas
add
pop
mov
mov
test
sub
mov
add
pop
out
je
push
pushw
jb
shlb
add
iret
fcoml
jp
jl
sub
lcall
mov
sub
mov
enter
and
dec
int3
pop
ljmp
xor
adc
jecxz
cli
and
arpl
sub
arpl
lret
jp
cmp
inc
out
loope
neg
pushf
mov
and
xchg
mov
movsb
adc
sti
or
call
aad
cmp
pop
outsb
add
bound
cmpb
add
leave
xchg
call
jb
lock
imul
sub
jo
lret
pop
test
dec
ja
ja
cmp
scas
add
int3
sbb
mov
jo
add
xchg
and
je
push
mov
xchg
shlb
loope
insl
add
xchg
sub
or
cli
fwait
jo
lcall
jg
loope
iret
pop
pop
fs
push
xchg
xlat
or
pop
pop
repz
ffree
xlat
lret
sbb
pop
ret
or
jns
test
xchg
dec
orl
and
push
mov
fimuls
pop
and
cltd
stc
adc
xchg
dec
cmp
ljmp
pop
aad
jl
mov
or
cwtl
pop
push
sbbb
push
mov
mov
into
mov
gs
insb
mov
or
push
out
ret
cmp
add
cmp
inc
pop
add
push
ds
in
movsl
cli
cmp
mov
lods
jo
push
cs
lret
aad
jge
arpl
inc
cmp
mov
jns
nop
stos
sbb
adc
stos
jo
xchg
inc
add
dec
mov
dec
sbb
xchg
cmpsb
or
inc
add
xchg
pop
repz
gs
jae
jo
pop
pop
and
mov
faddp
insb
adc
jne
fidivs
test
sub
cmp
xchg
dec
repnz
xor
dec
outsl
mov
in
and
fwait
pop
rolb
and
imul
inc
xchg
movsb
pusha
loop
sti
push
movsl
ja
mov
test
jle
or
int3
loope
fnstenv
rorb
nop
call
xchg
lods
pop
sarb
pop
dec
mov
je
add
and
mov
movsb
sbb
mov
insl
inc
popa
sti
add
adc
xrelease
repz
lock
aas
inc
popa
mov
xor
xchg
pop
and
ss
and
in
pmaxsw
mov
outsb
pop
je
data16
ss
vcvttss2si
loopne
and
out
adc
push
jns
mov
sub
push
xchg
cmp
rcrb
mov
xchg
addr16
push
pushf
rcl
adc
nop
lock
int
outsb
in
jg
mov
in
cmpsb
xlat
fbld
out
xlat
cmp
mov
fcoms
cmpl
enter
into
mov
jae
push
dec
pop
sahf
popa
adc
xchg
icebp
xchg
cs
mov
aaa
mov
lods
jbe
cltd
xsavec
hlt
imul
pop
stos
push
das
adc
pop
mov
out
dec
fists
jecxz
mov
out
fcmove
mov
inc
cmp
pop
call
jle
out
sbb
dec
sbb
sbb
aad
mov
mov
sub
test
lret
inc
in
push
lds
and
mov
nop
aad
mov
dec
es
lret
jb
lret
addr16
push
jg
pop
popa
arpl
jbe
in
lea
xchg
nop
iret
pop
out
lea
add
xor
push
bound
lret
adc
das
pop
decb
pop
push
mov
dec
and
xchg
std
lea
gs
adcl
and
outsl
shl
or
push
adc
push
packuswb
and
shrb
roll
into
push
rcll
ss
loope
loop
ljmp
in
aas
clc
cmp
in
mov
or
cmpb
adcb
cmp
xchg
mov
sbb
or
je
sbb
fidivrs
lock
add
lcall
mov
repz
adc
and
ljmp
xor
and
popa
add
sub
outsb
pop
fmulp
lods
push
and
popf
mov
out
dec
aad
fwait
lret
sbb
add
cmp
inc
inc
cmp
sbb
xchg
pop
out
jne
arpl
pop
sub
jmp
adc
or
mov
bnd
pop
xchg
notl
lret
stos
adc
pop
insl
pop
dec
mov
stos
lods
orl
xchg
adc
xchg
mov
xchg
dec
push
cmp
shlb
add
imul
imul
mov
mov
ja
ja
dec
clc
sub
xlat
popa
dec
iret
shll
subl
in
shll
xchg
loope
aad
arpl
cmp
mov
mov
xchg
mov
mov
lods
xchg
repnz
mov
mov
add
popf
mov
jmp
popa
cmp
or
lods
xchg
xor
push
cmc
hlt
popa
mov
adc
decb
stos
imul
and
fs
mov
cmc
insb
mov
ffree
add
pop
daa
sub
mov
xchg
std
dec
xor
inc
and
iret
inc
inc
add
sbb
pop
xchg
xchg
sub
dec
mov
loop
mov
dec
sbb
xor
out
js
xchg
pop
jge
pushl
outsb
mov
jge
call
jl
dec
imul
sub
jl
roll
fdivrs
mov
mov
sbb
mov
insl
inc
push
popf
test
test
xor
pushf
addr16
stos
xor
push
sbb
test
inc
mov
fs
push
sub
fmuls
call
and
dec
add
xchg
mov
cmp
stc
mov
shll
movsb
fs
in
xor
jmp
pop
fcomps
cmp
or
inc
mov
shlb
xchg
cmp
and
xchg
dec
lock
cltd
idiv
aad
push
pop
jmp
cmp
mov
ss
and
orb
add
xchg
xor
mov
sar
pop
dec
ret
mov
clc
or
mov
jp
jo
mov
lret
push
jae
mov
adc
dec
adc
mov
push
and
xchg
call
out
sbb
fcoml
lds
ficoms
pop
inc
icebp
add
push
sbb
mov
lret
sub
dec
inc
jo
mov
cmp
jnp
lcall
xchg
test
test
sbb
repnz
xchg
pop
out
xor
call
mov
adc
fcomp
jb
jns
std
adc
cmp
xchg
mov
mov
sbbl
mov
add
insl
dec
out
mov
inc
dec
mov
pop
jae
mov
and
popf
and
xchg
mov
out
cltd
inc
lret
shll
in
popl
les
loop
xchg
jmp
mov
fwait
mov
adc
xor
push
cmp
ret
hlt
bound
mov
out
imul
out
enter
scas
mov
sti
je
fxch
nop
cmp
jb
push
xor
add
into
cmp
subb
pushf
push
dec
ds
pop
dec
push
ljmp
adc
movsl
mov
mov
mov
mov
test
or
mov
scas
cmp
inc
pop
sub
cmpsl
out
movsb
jnp
cmpsl
cld
insb
add
lods
mov
adc
xchg
int3
pop
das
xor
or
inc
xchg
testl
daa
sub
mov
insl
sub
inc
cld
mov
jecxz
push
xchg
mov
aaa
popa
and
fstl
lods
int3
jnp
add
daa
cmp
sbb
int
and
pop
jo
pop
out
inc
adc
jmp
data16
jae
and
mov
sbb
mov
lods
inc
pop
xchg
loope
rorl
fwait
push
out
ffree
ror
aaa
xlat
push
cmpsb
mov
fsubp
mov
in
lret
mov
sbb
sar
test
aaa
dec
pop
orb
cmpb
les
dec
mov
dec
notb
notb
mov
mov
subl
mov
pop
daa
fs
loopne
subl
mov
fcmovne
mov
cmpsb
leave
je
call
lcall
mov
leave
dec
popa
in
and
cmp
idivl
addr16
jns
mov
stc
popa
dec
mov
mov
mov
sub
push
test
inc
hlt
or
gs
pop
mov
cmp
inc
inc
mov
push
clc
mov
lods
jl
pop
adc
xlat
aas
notb
mov
xchg
dec
push
dec
pop
and
mov
rcl
dec
and
dec
sbb
mov
pop
sbb
add
jno
test
jno
aam
dec
dec
pushl
cwtl
cmp
xor
loope
out
push
daa
mov
ficoml
push
sbb
adc
pop
mov
cltd
outsl
bound
lock
icebp
adc
iret
xchg
sahf
insb
aaa
ret
pop
mov
rolb
movsl
inc
call
jmp
push
mov
sub
call
ljmp
mov
mov
test
push
orl
repnz
fstps
pop
popf
mov
sub
call
ucomiss
xchg
fisubl
hlt
movsl
sub
push
fldl
cltd
call
push
pop
mov
cltd
aam
cmp
mov
jns
gs
mov
xor
sbb
arpl
xchg
inc
mov
popa
imul
gs
iret
adc
xchg
xorl
insl
fnstsw
out
dec
loop
into
cmp
call
ljmp
mov
inc
mov
sbb
push
pop
out
shll
sbb
in
frstor
repz
mov
mov
sti
jle
aam
jb
cmp
pop
in
outsl
jle
inc
cld
lret
xorl
adc
andb
pusha
in
add
sub
aad
and
mov
adc
push
xor
outsb
dec
sbb
cmp
sbb
pop
andb
leave
cmc
out
sub
adc
in
jecxz
out
push
ret
or
cmp
pop
lcall
inc
sub
mov
xor
jecxz
movsl
jp
outsb
lock
mov
pop
loop
lahf
mov
leave
std
mov
lcall
adc
negl
rolb
stos
xor
addl
sbb
pop
adc
push
mov
jecxz
decb
sub
inc
dec
push
popf
cmc
lahf
pop
addl
push
sub
sbb
fsubl
loopne
inc
jb
or
inc
pop
dec
push
adc
sub
cltd
mov
xor
jo
out
jns
inc
repnz
add
push
clc
sbb
ret
or
outsl
daa
add
iret
and
bound
push
inc
dec
cld
xor
scas
cwtl
push
fsts
jnp
xchg
dec
pop
push
out
popa
cmp
xchg
scas
movsb
lret
xlat
mov
and
cmp
cli
lods
jno
movsl
push
ret
jbe
lret
orb
pop
inc
test
fmull
movsl
test
movsl
rcll
cltd
aas
addr16
and
stos
fwait
xlat
xchg
pop
dec
jbe
pop
psrad
ret
or
inc
lock
shr
movsb
mov
dec
push
xchg
push
xor
or
inc
cmp
fstpt
or
jo
dec
add
xor
xchg
test
push
outsl
pop
repnz
add
fistps
cmp
std
dec
stos
int3
pop
xchg
dec
lret
jo
xchg
jg
push
std
cmp
fcomps
pushl
cwtl
cmp
pop
fsub
jo
or
mov
outsl
cmp
pop
cmpsl
arpl
pop
inc
xor
fwait
pushf
push
nop
cli
pusha
in
mov
xchg
add
add
dec
shlb
push
cmp
and
inc
icebp
aas
inc
mov
out
icebp
cmp
adcb
mov
pushf
cld
out
std
movb
ds
pop
push
scas
je
pop
mov
fbstp
sub
das
mov
sbb
sbb
xor
fcmovnb
in
cmpsb
cmpsb
inc
mov
mov
inc
mov
rclb
jecxz
lock
sub
inc
push
and
add
add
jg
sbb
jmp
pop
mov
rolb
or
xchg
pusha
jb
leave
push
hlt
jbe
ljmp
mov
sub
mov
or
loop
xchg
xchg
cmpsb
lret
stos
dec
lods
popa
in
xorl
insb
mov
icebp
jge
mov
jb
popf
mov
cwtl
xchg
xor
add
clc
cmp
push
or
sbb
xor
xor
mov
out
repz
mov
aaa
insl
pop
sub
into
ss
inc
mov
xor
aas
iret
lcall
sarb
jle
mov
jae
xor
cmp
mov
push
cli
pop
stos
insl
sub
push
xor
adcl
lods
push
inc
cmp
fdivp
sub
popa
ds
bnd
mov
call
pop
rclb
fcomp
mov
sbb
aad
and
dec
mov
dec
pop
mov
mov
jno
mov
jge
leave
pop
add
pop
movsl
push
ja
mov
int3
aaa
inc
pop
push
fs
ret
push
xchg
mov
inc
fldenv
mov
dec
bound
in
fdivr
ret
or
and
pop
pop
call
push
xor
xchg
push
pop
out
cwtl
sbb
dec
aaa
inc
inc
aad
fcoml
xor
mov
and
jle
sbbl
ja
mov
andb
pop
sub
scas
jbe
test
mov
inc
stos
pop
fisubs
inc
xchg
stos
movsb
cmpsl
mov
push
test
cmc
hlt
inc
hlt
xchg
dec
aas
es
pop
movsb
add
sti
ja
and
and
mov
cmc
push
pushf
sub
push
sti
jmp
pop
arpl
add
out
add
jg
ret
sub
adc
mov
adc
lds
cwtl
sub
adc
xchg
sbb
scas
lahf
mov
clc
add
scas
aam
xchg
inc
sbb
mov
and
pop
pop
js
jb
mov
out
pushl
insl
jecxz
in
lcall
mov
and
jg
and
stos
or
dec
cmp
add
and
inc
mov
sbb
xchg
rdpmc
cmp
shr
popa
shl
add
add
ficoms
ljmp
shrl
int
cmp
das
inc
push
adc
outsb
lcall
jbe
and
lods
test
cmp
aad
push
jno
lods
push
popa
rorl
test
lds
pop
sbb
jmp
adc
shl
pop
fimull
filds
mov
js
mov
ja
xchg
test
cmp
mov
push
scas
add
or
adc
inc
std
push
push
and
leave
inc
out
xor
imul
aaa
push
test
push
mov
xchg
or
xor
out
add
jecxz
xlat
jns
mov
jmp
mov
insl
pop
aam
lds
pusha
adc
fistpll
dec
adcb
mov
jbe
pusha
sbb
insl
rep
addl
mov
shrb
cmc
pop
lea
decb
mov
push
cli
add
mov
loope
inc
rcl
xlat
xchg
pop
lods
bound
dec
mov
mov
call
sub
shrb
icebp
jmp
mov
cld
adc
adc
out
cmp
dec
cld
test
inc
shlb
and
ret
cmpb
push
jbe
pop
cmpsb
pop
pop
pop
stc
sub
imul
stos
lcall
insb
mov
stos
std
inc
cmp
mov
cmpsb
ficomps
xor
sbb
pop
jg
int
in
or
nop
push
mov
jbe
xchg
sti
mov
mov
mov
cmp
xchg
lods
movsl
sub
outsb
and
cmp
xor
fs
push
fcom
rclb
sub
jmp
in
xor
bound
jmp
xchg
push
pop
xor
orl
fprem1
adc
dec
subb
or
dec
inc
scas
sbb
inc
dec
jge
icebp
mov
imul
mov
fstpl
mov
mov
mov
sub
inc
pop
mov
ss
pop
xchg
es
add
mov
mov
add
or
lods
out
adc
sub
add
mov
mov
inc
jne
ret
ror
adc
jne
cmc
in
push
jno
mov
dec
fldenv
in
pop
pop
popa
lods
cwtl
es
ja
dec
xchg
xchg
stos
mov
sub
ficompl
push
leave
div
add
cmpsb
pop
stos
xchg
into
jne
ficoml
inc
jno
int3
adc
add
adc
scas
jp
outsl
cld
ss
push
cmpsb
pop
push
mov
andb
arpl
pushf
sbb
xchg
adc
pop
and
subb
sbb
mov
xorl
fstl
or
mov
lds
sub
nop
mov
cmpsb
cvtps2pi
mov
fstp
sbb
and
scas
jbe
dec
fiadds
push
and
mov
sub
addr16
rcl
outsb
leave
jmp
js
push
dec
mov
shrd
insl
cmp
mov
pop
mov
call
lret
loope
mov
mov
mov
mov
add
push
sti
mov
lea
xchg
fnstcw
frstor
adc
push
xchg
or
js
bound
inc
int3
mov
enter
dec
mov
dec
into
je
jo
repz
mov
jle
stos
scas
scas
mov
mov
fiaddl
mov
push
jae
push
int
filds
push
dec
rcrb
out
lds
add
push
js
aad
out
sbb
add
jne
push
pusha
fmul
orb
jno
sub
repnz
lods
jp
mov
lret
inc
xchg
push
in
jmp
xor
fwait
xor
out
cmp
sbb
add
and
adc
aaa
inc
cs
lods
xchg
xchg
xor
mov
fidivs
jp
and
add
shrb
mov
adc
jnp
ja
adc
sub
cmp
push
jecxz
mov
pop
push
xchg
out
std
mov
decl
adc
xlat
add
outsb
push
aas
pop
fbstp
push
shlb
ret
imul
ficomps
ficomps
stos
shlb
fsubrl
xor
outsl
jp
inc
push
add
xor
dec
mov
or
aas
xor
popf
ljmp
test
out
sbb
daa
sbb
data16
sub
mov
cltd
jae
std
sbb
or
cmp
xor
jecxz
outsl
push
and
cmc
add
xchg
popa
mov
dec
imul
xlat
adc
add
pop
mov
jmp
xchg
insb
xchg
adc
mov
cld
fucomi
pop
cmpsb
jb
cmp
icebp
pop
mull
xor
jge
popa
or
popf
xchg
out
call
stc
fs
adc
hlt
cs
repnz
rol
cmc
push
xor
mov
repz
fs
jnp
aaa
stos
loop
testb
fimuls
and
out
out
sub
popf
dec
mov
xor
sbb
mov
hlt
jo
nop
dec
mov
fldln2
mov
mov
test
sub
push
mov
inc
mov
repz
out
mov
aaa
lea
in
sub
repz
mov
fxch
pop
test
aam
inc
gs
lcall
xchg
pop
fmull
and
addr16
lods
jne
loope
jns
inc
cmpb
inc
dec
jl
cmpsb
xor
js
xchg
xlat
or
ds
and
pop
push
iret
mov
cs
arpl
or
int
sbb
push
insl
aad
test
xchg
and
jae
stos
adc
mov
sbb
and
or
mov
mov
dec
mov
jmp
add
push
adc
adc
ss
rolb
mov
cmp
enter
cld
sbb
and
sbb
xchg
lods
test
sub
and
inc
pushf
in
mov
sub
les
jb
jge
nop
sbb
outsb
stos
lcall
sbb
sbb
mov
lock
aad
mov
and
pop
and
jae
negb
and
xchg
mov
push
sub
aas
out
addb
loopne
iret
cltd
sub
or
cmc
mov
jp
mov
imul
out
scas
dec
out
mov
inc
xor
or
jle
mov
shl
out
and
pop
sbb
xchg
mov
lds
loop
into
outsl
mov
shr
int3
jno
int
ffreep
outsb
mov
lahf
xchg
scas
mov
test
int3
je
inc
int3
mov
pop
or
rcrb
popf
mov
pusha
mov
fnsave
push
jbe
inc
pusha
pop
and
and
sbb
aaa
jmp
es
or
insl
adc
inc
sub
xchg
push
dec
repnz
in
jle
mov
jp
in
push
pop
xchg
mov
jne
sbb
adc
xchg
xchg
and
inc
mov
inc
cmp
or
jb
pop
dec
aam
mov
enter
lock
dec
pop
and
cld
sbb
dec
in
pusha
and
jne
cld
pop
shrb
mov
inc
push
or
pop
sub
mov
fiadds
in
cli
mov
mov
data16
fnsave
and
inc
rcrb
lock
mov
dec
sbb
jmp
mov
test
out
jnp
xchg
xchg
out
ss
mov
pusha
rcrl
add
call
lods
push
and
xor
and
out
out
lret
and
mov
inc
mov
inc
fsubrp
hlt
ret
arpl
ds
ds
push
and
sbb
cmpsb
adc
lahf
jnp
lea
mov
fldenv
cmp
sbb
or
add
fsubrs
lea
xchg
iret
xor
ror
ja
lods
gs
dec
stc
push
lock
cld
inc
fwait
test
jbe
pop
mov
insl
cmp
inc
xchg
sbb
cmp
insb
lcall
or
xchg
sub
lea
add
lcall
and
mov
inc
fcom
ret
xchg
xchg
add
pop
ds
imulb
cmpsl
or
jns
cmpsl
aad
xchg
mov
add
and
gs
clc
addr16
inc
stc
mov
lahf
jb
mov
outsb
es
outsl
adcb
fidivrl
int3
imul
inc
sbb
negb
jp
and
aam
sti
leave
xchg
pusha
sub
bound
adc
sbb
mov
and
loopne
jnp
mov
dec
dec
aaa
adc
test
outsl
xchg
and
fidivl
ja
roll
aaa
jae
push
xchg
mov
insl
sti
mov
addl
lahf
sub
dec
jmp
cmp
pop
mov
lret
int
xchg
push
fcmovbe
clc
clc
sbb
in
pop
push
cmp
and
or
mov
mov
test
mov
ss
sub
cs
sbb
cmp
mov
in
push
or
mov
fisttpll
mov
and
test
addr16
pusha
fbld
loop
out
inc
cmpsb
int3
shll
inc
lret
cmp
mov
or
in
mov
adc
sbb
and
cmpl
popf
xor
andb
inc
sub
repz
bound
xor
sbb
xchg
nop
and
add
sti
adc
in
mov
dec
push
push
icebp
pop
xlat
pop
in
or
xchg
inc
aaa
mov
jge
pop
es
stos
xlat
lahf
lods
movsl
fisubrl
pop
add
loopne
scas
lds
add
xor
push
adc
orb
mov
jecxz
daa
jle
out
lcall
cs
sub
xchg
fistpll
iret
ficoms
push
mov
sub
clc
jl
pushf
enter
pop
aas
scas
pushf
sbb
mov
lds
lea
jp
jns
inc
aaa
std
aad
cltd
xor
or
mov
mov
mov
sbb
sub
ror
pop
push
inc
imul
int3
push
aam
in
shl
inc
xchg
ficoml
and
fcmovu
scas
popf
and
gs
lret
loopne
dec
mov
add
jl
or
in
and
pop
mov
add
les
sahf
sub
cmp
in
aaa
out
dec
das
dec
cmp
sub
das
dec
jmp
mov
mov
outsl
mov
push
jge
jb
mov
jns
imul
jns
fldl
and
test
test
xor
xchg
cmp
enter
sbb
lds
or
jo
push
fimull
sbb
mov
cwtl
das
cmp
das
daa
leave
lock
add
enter
xchg
fistps
sbb
imul
push
adc
ljmp
sbb
cmp
fdivp
fisttpl
xor
mov
lcall
pusha
fadds
add
rorl
jne
pop
fs
ret
mov
lock
pop
sub
push
jbe
ret
into
loope
or
push
ret
loop
inc
adc
jmp
mov
lods
gs
sub
or
loop
jecxz
js
lods
inc
adc
sub
test
pop
mov
jle
sub
cli
popa
fdivl
mov
aaa
xchg
iret
sbb
sbb
push
jno
pusha
or
inc
jnp
or
jge
pop
cmp
aad
jmp
movsl
hlt
cwtl
jnp
test
mov
das
leave
rorb
sbb
jno
sub
xor
jbe
jmp
pop
push
insl
in
mov
dec
sti
lods
mov
aad
jb
les
jp
dec
sar
int
cmp
sub
jae
call
add
xorl
mov
subb
mov
xchg
xorl
jb
sbb
cmp
jge
ds
stos
jnp
add
outsl
stos
mov
xchg
aad
adc
enter
jmp
cli
repz
rclb
fwait
rorb
insb
lcall
scas
push
and
add
add
sbbl
mov
arpl
sti
pop
mov
and
je
xchg
js
hlt
inc
sarl
or
jmp
jno
adc
lret
mov
mov
scas
adc
sub
in
dec
sub
fsubrp
xchg
sbb
dec
aad
insl
fiadds
pop
ret
out
out
push
rcll
fistl
dec
fiadds
jmp
aam
mov
adc
sub
cwtl
int
adc
xchg
bound
sahf
pop
or
pop
lret
stos
push
sarl
dec
movl
mov
jmp
cmp
scas
mov
lock
repnz
shr
loopne
ja
pop
sub
mov
or
pop
fsubrl
jmp
or
xor
cld
and
and
aam
xor
movsb
hlt
xchg
or
sub
outsl
jle
pop
shl
push
mov
jmp
popf
fidivl
sub
icebp
mov
insl
ss
adc
lret
add
sub
jae
cmp
mov
push
or
scas
dec
test
imul
cmc
xchg
pusha
or
sbb
in
sub
and
lahf
push
repz
xor
bound
mov
mov
loopne
lds
push
and
test
lret
and
outsl
loope
lahf
std
cmc
popf
adcl
mov
scas
push
or
sbb
repnz
cmp
mov
shl
pop
mov
or
mov
cmp
jmp
pop
sbb
mov
cmp
adc
jne
and
sub
mov
push
cwtl
gs
push
jns
jge
je
sbb
in
test
sbb
adc
stos
xor
sub
pop
xor
mov
mov
rorb
shl
hlt
cmpsl
mov
scas
subb
cld
mov
ds
mov
ljmp
in
call
inc
xorl
jl
test
dec
sbb
or
push
cmp
jo
aad
sbb
ja
cmp
ucomiss
mov
insb
dec
adc
testb
pusha
imul
mov
or
sbb
rorl
add
cmp
jne
adc
cmc
sbb
push
insb
xor
std
jo
mov
lods
nop
lds
stc
sub
movsl
jmp
nop
pop
fnstenv
dec
cs
add
mov
aaa
sub
into
mov
sub
lahf
adc
stos
gs
sbb
daa
fnop
call
xor
jo
std
push
insl
lret
test
fs
js
xchg
xchg
lods
fsubrp
repz
adc
mov
xchg
ljmp
movb
out
notl
notl
xchg
pusha
leave
cltd
xchg
and
jp
sub
dec
enter
inc
ds
and
stos
xorb
xor
out
lret
xlat
dec
aad
adc
and
sub
movsb
fistl
jle
mov
mov
shrl
movsl
icebp
sbb
je
fs
or
bound
out
mov
and
jb
aad
mov
push
pmaxub
push
sti
lcall
movsb
push
jb
xchg
or
ret
pop
add
adc
sub
xchg
bound
jg
fdivrs
insl
sbb
jl
sbb
rolb
push
mov
and
or
ret
das
lds
sbb
mov
or
xlat
or
mov
neg
mov
sub
test
pushf
ret
sbb
repnz
ret
aas
repz
pop
std
pop
jmp
cli
jns
push
inc
push
arpl
fmuls
sub
push
xchg
iret
imulb
sub
pop
lods
ja
addl
ficoms
jmp
cmp
rep
lcall
xadd
aaa
cmpsb
lcall
xchg
cld
add
push
pushl
sti
push
imul
je
outsb
scas
xchg
or
pop
lods
movsl
movsl
in
lds
adc
mov
gs
dec
jg
mulb
popa
lods
cs
pop
inc
into
inc
divl
insl
ret
in
insb
dec
fcompl
call
data16
adc
arpl
fldt
stc
inc
push
test
lcall
insb
cmp
ja
jbe
sbb
pop
ljmp
data16
mov
jne
out
mov
int
sub
push
popa
jbe
les
flds
xor
add
mov
adc
xchg
xor
sbb
push
inc
mov
pusha
add
push
xchg
insl
insl
add
js
lret
sbb
movsl
mov
mov
addr16
inc
in
cmp
popa
xor
adc
js
les
sbb
jbe
add
test
inc
mov
pop
cmp
fcom
out
aam
cwtl
mov
push
mov
int3
cli
nop
pusha
cmp
mov
ret
xchg
js
and
dec
jnp
pushf
int3
sbb
lock
sub
cmp
and
push
aaa
dec
adc
or
cmp
sub
lock
lods
inc
and
cmp
adc
add
aad
test
hlt
mov
loop
out
std
arpl
and
add
add
sub
mov
inc
pop
cmp
loop
popf
iret
mov
ror
seta
add
push
jmp
subb
cld
es
jecxz
mov
mov
je
xchg
stos
sub
jb
dec
aas
xor
cwtl
xor
mov
and
negb
jae
cmp
test
inc
and
cmpsb
out
jecxz
ss
inc
mov
loope
lods
scas
cmp
orl
out
sbb
mov
push
adc
out
inc
add
fwait
lods
aam
mov
add
ljmp
jns
insb
cmp
cmp
ss
push
into
outsb
jmp
mov
add
mov
repz
cmc
xor
gs
js
dec
ljmp
jle
into
inc
dec
jae
xor
js
cltd
sbb
daa
std
in
int3
lods
in
int3
cmpb
add
push
ret
jg
iret
pop
int
mov
sbb
fsubp
mov
dec
xchg
mov
data16
int
pop
popa
bound
cld
sbbl
je
jmp
sbb
data16
mov
pop
loopne
in
adc
jne
clc
sub
in
xlat
jo
push
sub
fsubp
or
ljmp
push
inc
aaa
lock
and
int3
dec
cmp
inc
add
dec
mov
mov
sbb
in
xor
mov
jp
into
in
ss
hlt
incb
dec
jne
or
ljmp
pop
aam
decb
cmp
add
mov
out
push
pop
movsl
pop
rcll
and
fwait
add
add
ja
pushf
or
cmp
cmp
dec
lds
jge
jb
call
jge
ret
dec
mov
cmp
push
adc
mov
sbb
push
pop
push
repz
jbe
cli
cs
jecxz
mov
inc
xchg
inc
scas
or
jo
movsl
xchg
sub
push
dec
outsl
or
hlt
cs
rclb
in
stos
mov
into
cmpl
adc
loop
addr16
inc
pop
mov
orb
sub
test
cmp
gs
inc
sub
dec
jg
sahf
lds
out
or
add
jo
inc
mov
daa
xchg
xchg
xchg
je
data16
aam
leave
not
dec
mov
repz
nop
daa
mov
scas
mov
pop
out
sub
sti
mov
lret
repz
lock
xor
cmpsl
daa
sub
js
shll
xchg
js
pop
rcrb
mov
push
cwtl
test
push
inc
jle
jg
dec
mov
enter
pop
inc
mov
std
push
mov
cmpsl
pop
mov
out
dec
clc
mov
or
push
inc
movsl
cld
testl
push
lods
lds
mov
pop
js
aam
das
aas
syscall
out
mov
pop
add
mull
lock
xor
loope,pn
int
pop
and
movsl
aam
xchg
data16
addr16
rcll
dec
lahf
sbb
inc
dec
dec
sub
dec
xchg
or
fidivrs
and
andl
scas
in
gs
fdiv
xchg
imul
out
cmp
sub
inc
add
stos
sbb
sahf
pop
insl
pop
jecxz
and
addr16
add
sub
rorb
or
mov
lret
mov
xchg
mov
xchg
into
ss
fldenv
push
sbb
inc
xchg
lods
popa
in
sub
test
xor
or
out
pop
call
push
push
pushf
push
data16
cmpsl
push
mov
fs
sub
xorb
loope
push
push
test
repz
test
fimull
add
or
mov
lds
lods
inc
leave
sbb
aad
push
fmul
inc
and
sbb
xlat
xor
mov
mov
jmp
loope
jno
pop
jl
rcrb
and
push
cmp
cs
dec
mov
test
int3
mov
xchg
and
mov
and
repnz
xor
xor
fnstcw
mov
je
sbb
cmp
push
adc
in
movsb
cmp
push
inc
arpl
in
int3
lret
dec
and
enter
xchg
fidivrs
xor
inc
iret
pop
fsts
mov
sti
sub
sub
mov
enter
jge
data16
push
ret
cmp
movsl
daa
mov
jne
xor
cmp
push
cmp
jle
test
fsubp
sbb
ret
inc
loop
movsb
iret
fildll
lret
fildll
push
imul
cmp
xor
arpl
push
sub
adc
mov
sbb
fmull
jecxz
outsl
lret
rol
int
cmp
xchg
xchg
xchg
scas
push
dec
jl
stos
out
das
jle
leave
cltd
push
push
or
rolb
push
adc
stc
cmp
jne
pop
dec
push
addl
ret
aad
fisubs
push
dec
dec
mov
mov
mov
sub
stc
es
outsb
leave
add
fwait
in
shlb
pop
dec
mov
imul
inc
neg
xor
movsl
jg
scas
xor
inc
leave
push
testb
loope
lock
int
je
in
cmpsl
xchg
or
jp
xchg
sub
mov
cmp
dec
divb
loop
lret
dec
je
mov
insb
imul
mov
les
arpl
pop
es
cwtl
xor
inc
xchg
das
push
add
jle
stos
in
cwtl
and
ret
movsb
pop
cmp
sbb
lock
ret
cmp
jnp
scas
addr16
loop
std
lret
movsl
adc
scas
int3
ret
xchg
inc
in
mov
cltd
out
sbb
xchg
mov
pop
cmp
pop
movsl
ret
sbb
jg
lret
ret
ret
sub
jae
neg
es
cmpsb
fildll
je
dec
lds
popf
call
rcll
es
and
push
test
in
cli
mov
or
jae
clc
inc
movsl
xchg
or
cmc
sbb
sub
and
cmp
mov
fwait
sbb
mov
rcr
pop
jbe
lret
repz
mov
or
push
mov
mov
ds
insb
xchg
xor
mov
in
rcrb
push
dec
addl
loopne
rcr
mov
mov
mov
movsb
mov
jne
js
push
or
fnstcw
add
je
lret
ljmp
movsl
shl
mov
add
xchg
xor
or
xchg
aas
out
cli
fwait
or
mov
ficomps
lret
jge
push
shr
outsb
lahf
hlt
mov
ljmp
mov
add
maskmovq
divl
jnp
testl
stos
mov
or
movsb
in
xchg
jp
neg
mov
mov
loope
outsl
and
vmwrite
push
mov
adc
inc
lcall
test
jne
sbbb
outsl
das
pop
push
inc
jae
or
outsl
dec
lea
or
popf
sub
push
push
stos
arpl
jno
fwait
dec
inc
mov
jo
xorl
aad
fmull
shll
mov
negl
xlat
dec
icebp
xor
popl
add
insb
js
aam
in
bound
in
add
test
fsts
fsubs
dec
sahf
or
in
or
xor
pushf
test
xchg
jo
pop
xor
in
mov
xchg
xchg
and
fildl
jmp
pop
xchg
js
imul
mov
xlat
dec
mov
and
or
inc
into
inc
pushf
cltd
mov
jge
out
fsubl
add
jae
add
mov
jge
sbb
push
in
lret
je
int
rcrl
clc
mov
mov
adc
mov
stos
subl
add
shll
cmp
cli
push
out
jb
dec
mov
aaa
and
and
add
lock
lods
and
daa
mov
mov
dec
test
jmp
sbb
movsl
enter
cmp
movl
ds
ljmp
mov
les
mov
add
leave
cmc
mov
data16
add
pop
and
std
push
ds
jl
popa
or
lret
aaa
xchg
xchg
mov
cmp
mov
xor
jo
inc
popa
jne
or
mov
sbb
clc
mov
pop
add
mov
popf
mov
jge
inc
or
hlt
scas
in
in
push
or
mov
dec
rclb
lods
jmp
mov
add
stos
sub
addr16
ds
push
sub
divb
push
fsubrl
sbb
cmp
adc
aaa
sbbl
mov
mov
push
stos
pop
aam
dec
dec
lret
out
or
aad
mov
int3
pop
or
xor
sub
or
or
cld
dec
ret
xor
xchg
stc
sub
addr16
inc
fsubs
mov
sub
pop
xlat
mov
test
and
int3
cmc
xchg
clc
repz
dec
cltd
sub
jb
jl
data16
lahf
sti
mov
push
jp
je
mov
enter
test
mov
stos
rcrl
cld
ret
enter
mov
sub
mov
clc
inc
std
cmp
xchg
ret
jl
int3
cld
outsl
outsl
sub
jmp
sti
sbb
js
into
cmp
call
jge
lcall
mov
outsl
jl
jle
jmp
loope
repz
push
in
add
or
mov
pop
sub
enter
cmc
jg
sub
add
adc
add
and
test
cli
insb
in
jg
adc
shll
rcrl
jbe
and
mov
loop
add
sub
inc
movsb
cli
and
fldl
aaa
add
sub
roll
xchg
iret
movsb
ss
jns
fisttpl
cmp
arpl
and
lds
shrl
lret
lret
lcall
jb
inc
fldenv
insl
add
xchg
addr16
jo
stc
aaa
sbb
mov
and
push
jbe
orl
jnp
sahf
and
int3
je
insl
xchg
in
orb
mov
xchg
mov
xchg
xchg
add
sbb
dec
scas
xchg
mov
pop
xor
jno
cmp
stos
rclb
cmp
cmc
mov
mov
cmp
add
arpl
xchg
jg
lahf
insl
mov
mov
in
mov
dec
cmp
xchg
sub
jno
movsb
dec
adc
mov
sub
xlat
das
enter
or
out
out
add
ficoms
aas
push
aaa
lret
pushf
scas
sbb
fwait
and
inc
pop
add
cmc
in
pop
dec
add
outsl
mov
push
mov
xor
test
arpl
xchg
subb
fcoml
dec
rclb
cli
pop
ljmp
push
mov
jg
fnstenv
lret
and
mov
xlat
test
fldl
shlb
mov
das
jl
loop
push
and
xorb
enter
test
inc
jle
and
ret
inc
fsts
in
int3
jmp
jmp
orl
pop
aas
lret
rclb
scas
fsubs
mov
jle
mov
mov
aaa
je
mov
lea
shrl
sbb
cmp
sbb
aas
mov
cmpsb
dec
les
push
mov
cmp
subl
jae
or
sub
mov
movaps
push
xchg
flds
lret
mov
fiaddl
inc
sub
pop
mov
nop
sti
in
push
fcoml
mov
adc
test
cmc
cmc
fisubrl
xchg
outsl
mov
or
cld
cmp
inc
mov
pop
mov
or
fldlg2
sub
out
xor
dec
mov
sub
xchg
lods
icebp
push
in
fcmovb
mov
mov
out
mov
int3
popa
cmp
push
adc
xchg
push
movsl
xchg
jno
arpl
push
xor
into
inc
scas
in
push
iret
lods
pop
popa
inc
mov
std
jb
mov
setp
cmp
dec
mov
outsb
add
cmpsb
aad
pop
fists
jmp
orl
push
jmp
bound
fildll
pop
out
push
cmpsb
cwtl
inc
and
or
adc
icebp
and
pushf
addr16
aas
mov
add
cmpsl
pop
jmp
fninit
xchg
rcll
outsl
and
fwait
popf
cmp
mov
push
and
test
out
lahf
adc
sub
sbbl
xchg
les
jle
lahf
push
fisubrs
cmp
dec
sbb
in
push
outsb
ds
mov
xchg
push
dec
pop
loop
or
and
mulb
push
movsb
add
mov
outsb
pop
jbe
rclb
xor
xor
xlat
mov
and
jmp
inc
mov
sub
movsb
filds
jmp
sbbl
xor
or
and
sub
loop
xchg
das
xor
lods
daa
stos
das
sbb
mov
bound
lret
xchg
es
or
inc
jb
push
std
inc
in
insb
and
or
pop
xchg
or
lahf
xchg
adc
scas
xchg
add
lret
inc
inc
mov
mov
xchg
aas
adc
mov
xlat
push
lahf
roll
xchg
sbb
iret
mov
fidivl
adc
and
xor
jmp
cld
mov
push
cltd
ljmp
push
xchg
xchg
or
pushf
or
cmp
cmp
xlat
jo
inc
std
arpl
rep
add
jne
nop
cltd
lock
mov
jmp
dec
imul
sub
xchg
xchg
lds
hlt
fcoms
leave
hlt
and
dec
into
pusha
nop
popa
and
out
mov
movsl
fisubs
or
cmpsb
or
add
sub
mov
es
pop
ficoml
fucomi
mov
pop
mov
bound
insl
jmp
jnp
stos
movsl
fistpl
mov
pop
push
sub
add
sub
ret
mov
push
rorl
sahf
ror
ficoml
mov
call
outsb
mov
adc
pusha
push
and
add
push
movsl
in
in
popa
roll
fstl
push
outsb
mov
imul
jns
inc
adc
pop
std
fldt
scas
dec
test
adc
lret
clc
jnp
xor
dec
xlat
pusha
popa
fsubl
pusha
sub
sbb
jmp
arpl
movsl
adc
aaa
push
inc
in
lret
cwtl
cmp
adc
sub
push
fisubs
shrb
pop
xchg
inc
mov
add
std
pop
fsts
mov
cmp
xchg
sbb
pop
add
lock
shl
rorl
xor
pop
xchg
xchg
es
rolb
cltd
loopne
into
mov
dec
lcall
mov
cmp
in
xchg
test
movsl
das
pop
and
fcomps
scas
das
xor
sub
sub
jg
xchg
sbb
add
pop
fistpll
ljmp
enter
dec
jecxz
pop
pop
iret
inc
pop
adc
mov
add
mov
mov
imul
iret
xchg
push
mov
sub
das
cli
add
pop
clc
push
push
aam
xor
mov
pop
addr16
in
lcall
sub
sti
mov
subb
shrb
sub
out
cld
and
scas
xor
mov
ret
in
inc
push
xor
mov
popf
mov
dec
cmpl
xor
cmp
mov
mov
pop
add
jmp
pop
loop
mov
out
jbe
jne
les
mov
out
xchg
jp
adc
scas
adcl
mov
dec
mov
cltd
pop
jns
xchg
dec
addw
xor
lret
cmpsl
sub
into
out
xchg
or
xchg
shr
pop
and
xor
ja
jg
sarb
testl
cmpsl
dec
fmull
sti
and
int
sub
call
nop
rolb
sub
jae
lret
xsha256
cmpsb
adc
xchg
int3
xorb
mov
lods
sbb
jle
push
mov
xlat
mov
add
fimuls
test
adc
xor
dec
imull
cwtl
add
enter
popa
daa
cmp
imull
mov
leave
lock
decb
xor
mov
xor
pop
cmp
pop
gs
cmp
into
in
xchg
sub
cs
mov
negb
mov
mov
std
xor
sbb
mov
fdivs
mov
mov
in
cs
std
cmp
xor
and
mov
mov
cmpsb
push
nop
sbb
loopne
fdivrs
cmc
add
fidivrs
lret
mov
out
add
in
cmp
repnz
xchg
xor
in
nop
cmp
mov
adc
cvtps2pi
rcrb
and
or
aad
add
scas
call
sub
popa
imull
sbb
mov
jbe
rorl
mov
lods
jg
sub
lods
and
jae
push
idivl
cli
xchg
xchg
lock
call
iret
pop
sbb
cmp
xor
and
ret
cmp
add
or
mov
lahf
test
fdivs
mov
mov
test
inc
dec
movsb
pop
hlt
or
cmp
mov
xor
mov
nop
addr16
cmp
imul
xchg
fnstenv
sub
sub
mov
sub
or
mov
imul
add
into
sbb
out
mov
jl
adc
jp
ljmp
test
mov
add
icebp
leave
mov
movsb
test
sbb
int
pop
push
push
jae
movsl
cmp
stc
and
movsl
jne
in
or
das
adc
xchg
das
pop
out
jno
and
xadd
mov
sub
sub
mov
pop
stos
jecxz
pusha
or
push
lea
loopne
jb
cwtl
cmp
xchg
lods
loope
stos
in
jge
sub
adcl
jo
or
sbb
rol
or
bound
lock
adc
out
xchg
xor
lods
in
mov
add
mov
add
dec
cld
cmpsl
fildll
xorl
icebp
lock
mov
addb
orl
loopne
mov
mov
cmpsb
xor
mov
and
or
lret
and
xchg
pop
push
jae
cmp
and
sbb
pusha
repnz
jae
push
pop
scas
pop
punpckldq
out
rolb
and
dec
sbb
cmp
xchg
cmp
pop
fiadds
in
mov
lahf
xor
outsl
pusha
xor
int
pop
mov
pop
add
insl
aas
popa
push
clc
rolb
std
stc
cmp
psubb
pop
mov
sub
stc
jno
bound
fsub
inc
pop
adc
mov
aad
popf
ss
cmp
insl
mov
jge
lods
fcoms
push
scas
sahf
or
aad
pop
outsb
xlat
je
mov
lea
addl
mov
bound
inc
nop
inc
lret
mov
sub
ret
icebp
or
in
cmp
pop
pop
out
out
lea
mov
adc
lret
insb
mov
das
testb
cmp
adc
xor
mov
aam
pop
ja
xchg
jo
cltd
sub
leave
cmovne
mov
xchg
jne
inc
xchg
mov
shlb
sar
cmpsl
mov
dec
jno
cld
xchg
mov
loop
cmovle
cmp
push
jno
fcmovb
ja
ljmp
enter
sub
out
jno
xchg
and
loope
add
mov
loopw
push
and
scas
dec
inc
std
dec
jecxz
pop
hlt
call
fmulp
scas
daa
sahf
cltd
loope
xor
std
xchg
pop
cwtl
adc
ror
jge
imul
ja
sbb
or
cwtl
xor
mov
inc
add
mov
shlb
es
loope
imul
iret
push
test
daa
mov
rclb
adc
adc
movsb
scas
repnz
jl
cmc
in
clc
pop
add
sub
jge
and
lahf
mov
xchg
lds
lcall
pop
cmpsb
test
mov
mov
hlt
repnz
push
andl
scas
xor
out
std
int3
fidivs
jmp
lret
add
rcrb
push
add
cmpsb
insb
jbe
negb
ficoms
out
inc
ss
xchg
pop
pop
sbb
push
sbb
mov
ds
fnstenv
es
bound
or
xchg
pop
add
inc
test
fs
iret
das
jnp
je
dec
and
icebp
mov
test
icebp
mov
mov
insl
sub
jne
lea
push
cld
iret
iret
mov
movsb
mov
ret
rclb
mov
stos
jmp
jmp
mov
ja
jae
nop
pop
pop
or
cmp
sub
fs
ds
push
adc
pop
in
xchg
sbb
mov
repz
mov
inc
pop
int
sub
and
imul
icebp
inc
clc
jle
cmp
add
sbb
out
add
mov
imul
and
pop
mov
xchg
enter
push
mov
jb
outsb
mov
push
pop
jmp
in
outsl
push
bound
mov
jno
jnp
into
aas
or
fcmovnu
pop
test
xchg
sbb
fistps
xchg
add
bound
pop
push
adc
mov
out
lods
leave
fs
pushf
dec
or
dec
mov
stos
adc
icebp
mov
xlat
es
mov
test
sub
sub
push
test
fnstcw
adc
push
inc
and
dec
pop
xlat
ret
je
ljmp
std
or
push
fidivrl
adc
and
repz
shll
mov
xor
lret
xor
mov
push
sti
rorl
sahf
or
sub
push
lock
pusha
mov
or
sub
and
jmp
lods
movsb
out
test
sub
jle
stos
jbe
inc
cmp
and
and
out
mov
and
lock
sub
sub
jo
mov
mov
cmpb
loope
ljmp
ret
cmp
xchg
add
and
pop
int3
jmp
stos
xchg
dec
jo
mov
scas
mov
pop
fcoms
gs
hlt
pusha
popa
xor
push
scas
sub
pop
jnp
xor
mov
fdivrl
mov
shrb
dec
test
dec
sub
push
ffree
mov
fisubl
mov
adc
cs
aam
and
jp
mov
iret
test
std
dec
cmp
test
jmp
imul
and
cmp
jne
mov
popa
dec
mov
movl
mov
das
daa
pop
mov
stos
dec
add
movsb
addb
jmp
addl
mov
sub
inc
nop
sub
dec
addr16
or
dec
pop
daa
jno
inc
ljmp
std
pop
mov
data16
test
lods
loop
xchg
adc
mov
push
js
jle
pop
push
jge
lahf
and
insl
das
bt
or
mov
outsl
std
or
in
xchg
scas
clc
stc
jo
mov
rcl
out
and
mov
or
sub
ret
cmp
call
je
sub
add
scas
and
pop
rorb
and
hlt
pop
cmp
out
cmp
jl
popa
loope
or
pop
jnp
jmp
inc
ja
and
dec
out
cmp
mov
sbb
dec
push
jge
mov
stos
xor
xchg
sbb
je
stos
in
fdivrs
scas
lea
xchg
xchg
jp
add
add
jle
cmpsl
rolb
cld
inc
in
push
or
and
inc
jb
and
lea
repz
ret
lea
cmp
lds
ss
inc
sbb
dec
mov
mov
sub
push
or
pop
pop
shlb
stos
xlat
outsb
xchg
test
test
inc
insl
out
and
ss
mov
inc
out
movsb
jnp
fisubl
ret
iret
adc
pop
push
into
push
fildll
mov
pusha
enter
dec
xor
loope
adc
popa
les
stos
lret
or
push
dec
xor
dec
insb
jge
cld
out
and
data16
jbe
shrb
iret
add
sub
pop
enter
push
xor
add
scas
push
xor
cmp
adc
rolb
or
lock
cwtl
and
loope
adc
xchg
mov
stos
mov
cmp
hlt
jp
sub
loop
imul
enter
std
bound
jle
mov
xorl
jg
or
and
out
or
gs
jmp
aad
dec
mov
jle
xchg
push
ljmp
shrl
jmp
xor
and
mov
subb
mov
cmp
xor
push
sub
sbb
into
pop
test
or
dec
xchg
jmp
push
inc
imul
pop
push
sbb
pop
test
push
mov
iret
mov
adcb
jle
cltd
or
inc
pop
add
sti
ljmp
mov
and
mov
add
jmp
mull
inc
push
insl
cmp
sarb
or
dec
cld
mov
xchg
xor
int
lret
in
hlt
outsl
adc
or
dec
idivl
or
adcl
mov
cld
dec
cmp
inc
jbe
dec
mov
into
lcall
imul
push
lods
mov
xor
lcall
lret
pop
xor
add
push
sbb
and
sub
push
int
aas
cmp
outsl
and
mov
xchg
arpl
fbstp
addr16
jno
stos
and
fwait
dec
jecxz
inc
dec
movsl
pop
add
sti
outsb
push
push
adc
sbb
push
es
jb
in
or
fwait
in
add
enter
pop
stc
iret
cltd
dec
outsb
add
adc
in
xor
sbb
out
fs
mov
aas
call
out
out
mov
jge
mov
mov
xchg
cmpsb
int
jno
sbb
sti
enter
sub
xchg
std
xor
xor
adc
loopne
adc
mov
push
movsl
and
jns
cmp
cmp
push
loopne
xchg
mov
lret
mov
in
xchg
adcb
cmp
xor
add
adc
sub
call
in
xor
mov
sbb
test
dec
and
iret
stos
push
loopne
xchg
lret
add
out
dec
insl
push
sub
jne
movsl
and
clc
sub
in
cmpsl
sbb
push
push
pop
xchg
out
adc
jno
adc
jg
xor
mov
nop
mov
mov
aad
cwtl
cs
jle
mov
fs
jl
jl
nop
mov
cmp
ret
int3
pushl
jne
call
in
inc
pop
stc
and
das
mov
inc
jbe
jns
stos
push
ret
sub
inc
pop
lret
inc
xchg
fsub
loop
jecxz
sbb
push
test
cmc
pushf
outsl
pop
fsubrp
out
push
daa
mov
lea
xchg
dec
imul
mov
mov
lcall
pop
cli
mov
imul
hlt
or
cli
test
push
push
pop
orb
push
iret
lahf
arpl
mov
outsb
ret
inc
pop
cmpsb
jae
sbb
pop
xchg
jg
cmp
or
dec
aad
or
xchg
and
mov
dec
mov
and
in
mov
sub
hlt
cmpsl
sub
lea
pop
rorl
xchg
insb
shrl
pusha
or
cld
and
lods
mov
cltd
mov
pop
lds
or
cmp
iret
xor
fistpll
dec
rclb
push
dec
xor
je
fs
pop
jne
sub
cmp
mov
mov
push
popa
inc
popf
mov
pop
into
push
mov
jno
lret
mov
rol
cmp
divl
lods
cmp
lds
push
xorb
push
hlt
mov
adc
jp
jmp
or
imul
lods
ret
sub
icebp
jle
mov
jmp
stos
nop
inc
inc
mov
jns
loope
add
mov
push
pop
mov
or
loope
mov
cs
xchg
cmp
cmpsb
rcrl
mov
push
sub
add
nop
jbe
and
inc
mov
aaa
pop
movsl
shlb
adc
rolb
jmp
xchg
mov
cmpl
add
sti
pop
aam
cmp
adc
cmp
aam
fcomp
jns
adc
in
loopne
pop
leave
mov
mov
and
cmp
mov
inc
sub
or
add
sub
cld
dec
cmp
cmp
clc
jle
mov
sbb
icebp
mov
inc
fildl
sbb
in
inc
mov
gs
rol
clc
push
and
pop
int
inc
jg
sub
orl
insb
or
inc
out
mov
cmp
inc
out
dec
call
in
and
add
aad
in
adc
in
lahf
es
movb
bound
cmp
xor
enter
xor
bound
out
and
fisttpll
push
sub
daa
pop
mov
gs
or
fsubrl
cltd
push
gs
movsb
adc
insb
add
inc
mov
mov
out
pop
mov
dec
aam
add
adc
lret
dec
cwtl
shl
jle
sarl
cmp
test
push
je
int
cmp
adc
or
xor
mov
push
loope
inc
lods
push
in
js
test
adc
pop
jecxz
mov
mov
ficoml
sbb
fidivrs
xlat
fidivrs
pop
mov
lcall
ret
mov
adc
jb
ss
fbstp
pop
clc
sbbl
mov
imul
mov
push
int
lods
push
stos
jbe
add
shr
inc
xchg
aad
inc
pop
cmpsb
insl
ret
mov
cmpsb
fstl
mov
inc
ljmp
lods
in
repz
push
adc
cmpb
addr16
jl
aad
mov
lods
sub
fs
fldl
push
and
mov
out
lret
mov
pop
ss
pop
stos
mov
rcll
pop
pop
roll
pop
cld
jno
xchg
or
mov
or
popa
mov
popa
cmp
icebp
lods
sbb
jno
push
add
mov
in
or
pop
int3
pop
ljmp
ret
cld
sub
add
inc
push
add
lods
inc
and
push
shlb
imul
jle
inc
add
xor
popf
in
scas
popf
xor
and
lcall
es
dec
fsubrp
jp
lods
or
mov
xor
mov
push
add
loop
js
jae
inc
fstps
and
popa
in
cmpsb
repz
xchg
ror
stos
imul
movl
xor
hlt
js
dec
jb
or
aaa
push
sub
fdivr
out
xchg
rcrl
mov
adc
orl
bound
cmp
push
aad
daa
ljmp
sar
push
icebp
xor
inc
cmpl
xor
inc
jmp
mov
xchg
fs
sub
push
in
movsb
lock
sbb
jae
es
dec
insb
mov
out
shll
cmp
mov
sbb
insl
outsb
ret
pop
xchg
inc
push
mov
movd
lea
or
jae
jecxz
cs
inc
xchg
in
ljmp
es
aas
loopne
cmpsb
pop
inc
and
xchg
inc
lods
loop
cwtl
inc
jb
push
add
and
lcall
sub
or
pop
xchg
dec
insl
inc
jno
pop
xchg
es
mov
test
sti
push
loope
outsb
movsb
fidivrs
sbbl
adc
cmc
cld
add
inc
xor
jno
aam
dec
sbb
cmp
mov
jnp
enter
xor
jo
fidivrs
pop
sbb
lods
lcall
repnz
enter
adc
xchg
push
pop
aad
push
rcl
js
xchg
sti
int
jns
bound
leave
and
or
pop
orl
pop
fists
add
in
and
push
jmp
and
jge
jne
dec
rorb
hlt
pop
pop
inc
outsb
in
test
mov
es
cld
es
pop
in
std
and
xlat
jbe
mov
pop
divb
inc
dec
pushf
jmp
mov
lods
pusha
xchg
or
enter
pop
test
rcl
and
jo
mov
fcoml
pop
mov
cli
pop
outsb
ss
jl
mov
pop
pop
xor
or
cmc
loop
push
aaa
jo
shll
sbbl
or
sub
fistps
pop
scas
daa
jne
fwait
and
hlt
push
out
pop
ss
xor
mov
lods
sbb
clc
imul
fists
icebp
pop
inc
cmpsl
add
out
push
inc
pop
test
sbb
sbb
cltd
popa
push
popa
mov
jecxz
cmp
ja
sbb
jno
cli
mov
cmp
cmpxchg
sbb
lods
mov
aam
outsb
mov
cmp
popf
pop
cmc
sub
in
iret
lret
xor
mov
fnsave
lods
push
sti
xchg
stos
inc
lahf
popf
rcll
add
subb
imul
add
mov
push
jnp
dec
fcompp
movsb
loope
add
mov
xchg
inc
fwait
xchg
pop
sbb
test
sahf
mov
aaa
cli
adc
push
inc
pop
fistpl
push
dec
sarl
pop
cmp
inc
cmp
push
jge
fsubp
mov
sub
or
fnstsw
in
jle
fstps
xchg
outsb
push
cmp
sbb
shll
inc
adc
fs
cmpsb
xor
cwtl
pop
cli
mov
jns
in
or
loopne
repnz
xchg
mov
faddl
push
add
dec
sbb
or
jmp
mov
scas
ja
and
jle
pop
dec
daa
push
arpl
push
icebp
jbe
mov
sbb
cmp
jo
aam
aaa
mov
fs
int3
xchg
ss
pop
cltd
xor
fwait
pop
and
push
sub
jmp
push
jae
xchg
add
jg
push
loop
jecxz
inc
lret
pop
adc
sub
pop
xor
lock
lret
jae
icebp
lret
jl
add
aas
jae
movsl
add
or
dec
aas
add
xor
and
jns
aam
aas
mov
iret
in
and
xlat
xchg
in
xchg
mov
mov
inc
adc
insb
xor
sub
sub
inc
jae
cmpsl
nop
aaa
jmp
or
test
and
out
mov
orl
sub
arpl
push
hlt
jecxz
xchg
insb
stc
mov
lods
dec
sbb
push
aaa
rorb
stos
xchg
inc
sbbl
les
adc
popw
push
cli
dec
sbb
jo
xor
sbb
mov
out
imul
jmp
sbb
jmp
cmp
test
adc
sbb
rcrb
lahf
jl
xchg
pop
fs
or
rolb
test
and
adc
loope
int3
sbb
cmpsl
mov
aas
addr16
mov
stos
jl
cmp
into
mov
scas
addl
sub
or
inc
insb
clc
inc
adc
ja
and
xor
fcmovnb
adcb
bound
adc
xor
sub
das
push
mov
pushf
xchg
mov
add
stos
and
and
inc
gs
dec
adc
and
mov
xchg
pusha
or
mov
out
jp
and
or
rcll
pcmpgtb
int
movb
jbe
lods
sub
call
stos
out
or
frstor
adc
sub
xor
daa
sub
sub
push
mov
aad
outsb
fcomps
mov
in
decl
jle
xchg
popf
adc
jnp
cmp
mov
call
adc
jno
repz
jl
je
pop
mov
les
call
sbb
dec
test
sbb
scas
cwtl
add
adc
sub
pop
dec
push
jb
imul
dec
daa
pop
lret
sahf
lea
addl
mov
pushf
subl
fisubs
cltd
pop
testl
aaa
xchg
insb
mov
inc
loope
imul
imul
xchg
popa
jbe
mov
add
mov
hlt
jg
andb
dec
insb
xor
gs
enter
sub
rcrb
mov
test
mov
decl
outsl
imul
mov
sahf
dec
mov
lds
rol
in
mov
addl
popa
jnp
int3
or
mov
cmp
or
and
xor
dec
or
test
mov
in
call
sbb
cmc
mov
xchg
pop
out
xor
es
pop
js
inc
das
dec
adc
xor
add
and
push
mov
mov
test
aaa
xor
push
loope
daa
mov
les
repz
inc
mov
jg
pop
fcmovnb
aas
or
add
fucomp
inc
adc
rcrb
sub
movsb
cmp
xor
cmp
jbe
in
pop
sub
out
add
add
loope
xlat
push
mov
out
fsts
push
or
add
and
dec
or
fcoms
add
popl
cmp
es
xchg
je
fistl
pop
jmp
movsl
cld
iret
pop
inc
or
pushf
cmc
inc
dec
mov
inc
cwtl
enter
sbbb
popa
xlat
and
lods
movsb
jl
int
andb
jno
pop
sahf
add
stc
adc
jno
imul
stos
lret
push
cmp
call
sbbb
add
ds
sub
hlt
jne
add
bnd
pop
flds
ror
outsb
cmp
pop
inc
mov
mov
jb
fiadds
or
movsl
xchg
arpl
mul
inc
cmp
push
iret
into
mov
leave
imul
pop
out
ds
adc
shll
sub
scas
pop
and
sbb
and
in
stos
cmc
or
pushl
daa
jnp
dec
fcoml
cmc
mov
adc
fidivrl
add
nop
test
outsl
adc
adc
sti
xor
clc
daa
mov
aam
push
lcall
mov
loop
dec
nop
loopne
push
adc
mov
out
sti
xor
loop
and
inc
add
outsb
jecxz
pop
sti
fsubl
pop
mov
xchg
fidivrl
cmpsl
xchg
pop
push
sub
mov
mov
mov
roll
jb
xor
shll
pop
dec
pop
cmpsb
insl
jg
mov
and
cmp
data16
andl
xor
dec
dec
fcomi
add
enter
dec
xchg
out
mov
mov
and
enter
or
mov
pop
imul
xor
test
sbb
nop
xor
jecxz
mov
movsb
repnz
inc
mov
pop
cmpsb
cmpsl
dec
cmpb
enter
inc
xchg
jbe
lahf
in
incb
push
sbb
pop
sar
call
int3
fisttpll
mov
enter
xor
and
ret
pop
dec
mov
scas
mov
les
psubb
cld
xor
pop
jne
js
std
aas
sbb
adc
xor
out
xor
aad
jno
xchg
cmp
xor
sbb
or
ljmp
add
sbb
dec
mov
cmpb
fcmovnu
xchg
xor
sti
jp
add
mov
ret
ljmp
rcll
outsb
rol
cli
jno
test
nop
mov
dec
andb
push
push
adc
in
mov
in
inc
mov
inc
imul
stos
call
sarl
cmp
cmp
mov
add
xor
cmp
pop
leave
add
ret
sub
jmp
in
dec
pushf
in
das
outsl
in
jecxz
dec
cli
aam
xchg
int3
xor
xor
mov
movsb
cli
dec
cmpsl
stos
das
loopne
cltd
push
in
hlt
sub
rcll
push
pop
je
and
cmp
push
inc
dec
addr16
leave
mov
cmpsl
sbbl
cmp
movsb
test
bound
mov
hlt
xor
fwait
and
cmp
xor
jecxz
fstp
push
add
dec
inc
jns
and
sahf
mov
xor
mov
pop
pop
int
mov
sub
das
jbe
add
fisubl
loopne
push
shll
nop
mov
int3
inc
iret
mov
adc
fbld
and
sahf
dec
xor
mov
mov
mov
aas
test
insb
push
lods
lret
das
push
xor
jbe
jl
fldcw
mov
sbbb
das
sbb
pop
loop
out
sti
mov
imul
gs
mov
je
inc
hlt
out
xchg
and
aad
cmp
in
push
or
adc
dec
sub
faddl
aas
pop
outsb
xchg
mov
mov
add
adc
es
pop
inc
mov
es
insl
ficomps
mov
ret
sbb
mov
loop
leave
test
insb
cmp
stc
sahf
popa
mov
fs
mov
sar
adc
jle
push
pop
sub
outsl
lcall
cmp
imul
jb
xlat
aam
mov
mov
push
push
cmp
or
test
divb
mov
mov
int3
cwtl
dec
stos
in
add
shll
xchg
leave
add
or
mov
sbb
repnz
add
push
push
xchg
cmp
xlat
push
mov
cld
les
lock
pop
push
sbb
outsl
aaa
mov
lret
xchg
lods
xchg
fidivrs
and
andl
shrl
xor
or
lods
mov
push
xor
lods
fistps
pop
mov
adc
dec
imul
fdivrs
mov
xor
movsb
aad
stos
push
filds
xor
inc
fnstsw
fstpl
loopne
fimuls
xchg
xor
jge
scas
loope
xorl
pop
nop
mov
pop
push
mov
xchg
ds
jmp
daa
fwait
jnp
and
sub
push
jb
jno
stos
mov
mov
push
dec
and
mov
ds
out
push
add
xchg
mov
sub
push
jge
iret
je
cmpsl
mov
leave
or
adc
call
push
pop
mov
mov
pop
dec
mov
push
xor
jg
fdivrp
ljmp
mov
es
mov
movsb
dec
xor
out
push
cmp
inc
xacquire
loope
jns
push
push
mov
scas
jae
or
and
mov
cmp
rclb
loopne
iret
cs
mov
std
clc
jl,pn
and
mov
sbb
ja
clc
out
push
mov
mov
js
sub
or
push
sub
hlt
mov
push
push
fsubrl
mov
jo
clc
adc
icebp
adc
pusha
js
sub
sub
in
dec
les
addr16
out
mov
cmp
aam
in
jecxz
clc
mov
and
pop
divl
sbb
lea
rolb
daa
adc
lods
dec
filds
mov
mov
inc
sub
and
fst
scas
rcrb
sub
fldl
or
push
inc
jns
sub
add
arpl
fcmovnb
cmpsl
mov
pop
lea
movb
and
movsb
pop
mov
dec
push
inc
out
sbb
inc
and
mov
call
inc
sub
xor
fsubs
sbb
ss
mul
dec
data16
pusha
xorl
imul
lds
enter
das
sub
enter
xorb
and
xchg
lock
mov
or
dec
xchg
test
mulb
sub
mov
adc
mov
xchg
xchg
and
adc
scas
shrb
outsb
xchg
notl
xor
pusha
sub
sbb
jl
lret
lahf
dec
inc
fwait
outsb
neg
xor
shrb
and
ret
push
dec
sahf
divl
stos
mov
inc
adc
jo
and
dec
xor
adc
push
in
or
loope
popa
jecxz
in
enter
scas
out
adc
inc
loop
mov
push
jecxz
nop
add
stos
sbbb
bound
lds
xchg
fwait
and
scas
sub
and
mov
inc
sbb
mov
xor
out
pop
and
stos
pop
rolb
fldenv
arpl
mov
mov
lods
mov
mov
lods
cmpsb
fsubp
ret
pop
sbb
je
pop
fcoms
jo
in
add
js
jp
cmp
pop
test
or
or
dec
jnp
push
lret
jle
xorb
and
sbb
xchg
pop
sbb
fld
mov
lret
test
mov
test
sbb
jp
jmp
cld
bound
lret
ss
orb
fsts
or
lds
add
xlat
and
inc
scas
inc
push
cli
sbb
scas
dec
dec
inc
mov
cmc
cmp
pusha
sub
sbb
mov
lea
lret
dec
hlt
jmp
push
mov
jle
pop
add
xor
and
rcrb
inc
xchg
mull
add
pop
fdivrs
in
lods
jecxz
xchg
xchg
cltd
and
inc
or
pop
and
jb
sti
bound
movsb
fs
fnstenv
mov
push
push
push
adc
jmp
push
jl
fidivrl
mov
mov
sahf
std
stos
adc
fcomp
pop
out
cwtl
sahf
sti
sahf
loopne
adc
jbe
icebp
xor
ss
dec
push
loopne
in
push
pushf
jb
add
loop
out
pop
adc
gs
or
lcall
push
pop
adc
popa
gs
push
mov
test
imul
mov
cmc
mov
push
xlat
clc
sbb
in
inc
mov
rclb
sub
pop
mov
jne
in
popf
scas
jmp
addr16
mov
add
fimull
mov
sub
sbb
out
push
adc
xor
push
insl
lret
push
jmp
mov
xchg
or
cli
pop
sbb
ljmp
add
jb
rol
das
std
adc
sbb
adcb
out
mov
insl
jecxz
lret
sub
pop
out
or
repz
mov
mov
icebp
inc
mov
mov
sub
shlb
popf
push
js
and
ss
jmp
rcrl
insb
push
cli
jno
jb
sub
cmp
jo
jg
repnz
push
lret
xchg
scas
dec
out
inc
icebp
sbb
insb
out
iret
out
sub
and
sahf
mov
jge,pt
sub
pusha
sbb
dec
push
adc
out
push
inc
aaa
xchg
mov
sub
mov
jb
adc
mov
fsubs
arpl
cmpsb
dec
sbb
inc
xchg
js
pop
lds
shl
push
adc
fdivrs
mov
inc
cmpsb
xchg
fcmove
mov
lret
dec
enter
ds
sub
maskmovq
mull
jl
insb
aad
pop
cld
sbb
inc
frstor
scas
jle
in
lods
sub
int
jl
mov
addb
cmpsb
mov
rorb
cmp
push
jno
sti
pusha
and
cld
inc
cmpb
inc
test
sub
mov
fcmovnb
ds
sti
jl
lcall
ljmp
bound
mov
rorl
pop
cmpsb
xchg
loopne
xchg
fsts
in
adc
mov
xor
xchg
dec
in
insl
mov
js
mov
and
in
inc
aad
push
in
idivl
adc
sbb
xor
inc
scas
mov
call
pop
mov
dec
or
adc
cmp
dec
cmp
push
aaa
and
jecxz
push
sub
push
mov
insb
aam
daa
sbb
pop
ror
testl
int3
sbb
lcall
cmc
xchg
jmp
and
js
sub
xchg
das
loop
mov
lods
lahf
mov
jo
lock
xchg
ja
test
sub
adc
xor
push
sub
movsl
call
dec
fldl
stos
jne
jp
adc
shrl
popa
mov
sub
mov
push
in
push
dec
push
enter
fcoml
ret
mov
cli
test
loopne
inc
pop
xchg
test
jae
cmpl
pushl
pop
pop
bound
sbb
cwtl
nop
popa
add
rolb
sub
lret
js
into
cmp
fisttpll
adc
fidivs
mov
lcallw
hlt
or
cltd
jne
jb
push
imul
ret
inc
dec
lods
pop
nop
out
mov
loop
and
sti
pop
out
pop
repz
ja
sub
jg
daa
cmpsl
ss
cmp
movsl
pop
push
rcl
sbb
add
xchg
fistl
stos
outsl
gs
dec
rorl
lock
mov
in
ss
sbb
lret
mov
pop
imul
sbb
xchg
inc
sub
icebp
insb
cwtl
fwait
push
or
cs
pop
xor
pop
int
outsb
ret
iret
jle
jmp
out
xor
lods
mov
lock
push
jns
pop
ret
ret
add
scas
sub
push
cmc
fstpt
out
rcrl
and
icebp
ds
jge
loopne
inc
pushf
jne
daa
imul
adc
jecxz
push
mov
and
cld
repz
xchg
xchg
jg
in
mov
mov
and
hlt
es
dec
shlb
adc
mov
dec
xorb
int
and
and
or
push
pop
pop
fstpl
sub
dec
cs
xchg
push
dec
adc
pop
jge
movlhps
pop
subb
cmp
insb
lahf
xchg
mov
mov
das
lahf
insl
out
cmpsl
stc
dec
roll
jbe
mov
inc
sub
nop
dec
mov
sub
std
cmpsb
rcr
xor
mov
inc
repz
xchg
push
add
sbb
shll
xor
xchg
sub
stos
jp
fs
mov
repz
test
dec
or
test
jp
rcrb
cmpsb
jle
ss
outsl
pop
loopne
xchg
adc
les
fs
cld
iret
pop
imull
std
and
lcall
fldenv
int3
out
enter
inc
pop
push
fsubrs
sbb
cli
adc
or
test
inc
xor
or
sbb
lahf
std
dec
cmp
pop
dec
out
test
adc
pop
ror
mov
mov
sub
inc
lock
pop
mov
xor
jne
insb
or
fmuls
and
add
in
or
arpl
roll
adc
add
xchg
push
sub
mov
loopne
js
add
adc
pop
lret
imul
or
and
push
cmp
jae
xlat
test
aad
xchg
dec
cmpsl
push
push
hlt
addr16
shll
or
mov
or
mov
add
adc
std
inc
dec
sub
mov
xchg
imul
loopne
mov
test
inc
pop
add
mov
outsb
js
cmp
adc
bound
or
push
pop
out
push
mov
jae
dec
cmpsb
mov
aad
insb
dec
cmpsl
adc
hlt
scas
jne
shll
mov
pop
xchg
add
in
dec
mov
stc
and
add
lods
int
inc
dec
sub
mov
xchg
imul
push
and
mov
sub
jmp
call
push
pop
ret
nop
nop
nop
nop
nop
mov
mov
jmp
push
lea
push
cltd
jmp
push
pop
cmp
mov
je
mov
nop
nop
nop
nop
nop
test
jne
mov
jmp
jne
mov
jmp
call
mov
xor
mov
jmp
mov
xor
mov
leave
jmp
jle
jmp
call
test
pop
jmp
mov
mov
add
jmp
mov
push
call
jmp
mov
movzwl
jmp
test
jne
mov
lea
jmp
sub
mov
jmp
mov
add
jmp
mov
mov
jmp
je
lea
push
jmp
push
call
test
jmp
and
jmp
mov
popa
jmp
nop
nop
nop
nop
nop
test
jle
mov
jmp
call
test
pop
jmp
movzwl
jmp
nop
mov
mov
test
jmp
sub
mov
jmp
jne
push
pop
cmpb
jne
jmp
nop
push
push
pop
jmp
push
push
pop
push
addl
jmp
nop
nop
jmp
nop
nop
nop
nop
push
nop
nop
nop
nop
nop
push
push
push
jmp
cmpl
jmp
lea
call
jmp
call
mov
jmp
push
shr
jmp
mov
movl
mov
xor
mov
jmp
add
jmp
subl
jmp
pushl
jmp
mov
push
pop
mov
jmp
add
shr
and
jmp
nop
nop
nop
nop
lea
jmp
nop
push
and
mov
sub
jmp
mov
mov
jmp
call
test
jmp
push
andl
lea
push
jmp
mov
andl
push
jmp
lea
mov
jne
jmp
push
subl
push
xorl
pushl
jmp
mov
movzbl
add
mov
jmp
jne
addl
push
xorl
push
addl
jmp
je
mov
mov
jmp
call
add
pusha
call
jmp
mov
ret
nop
nop
nop
nop
nop
push
pop
cmpl
je
push
push
jmp
pop
jmp
incl
incl
push
lea
jmp
call
test
jne
push
pop
cmp
jmp
mov
lea
sub
jmp
push
subl
pushl
push
call
jmp
mov
jmp
shr
test
jle
jmp
nop
nop
lea
jmp
nop
push
sub
mov
push
jmp
call
push
pop
ret
nop
nop
nop
nop
nop
call
push
pop
ret
nop
nop
nop
nop
nop
mov
xor
jmp
push
subl
call
push
pop
cmp
je
jmp
pushl
jmp
jmp
lea
mov
jmp
nop
push
add
mov
push
push
subl
jmp
pushl
call
pushl
jmp
xor
push
jmp
jne
sub
mov
pop
ret
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
push
jmp
mov
jmp
and
mov
sub
jmp
push
xorl
jmp
lea
push
mov
push
jmp
lea
mov
mov
xor
jmp
and
jmp
push
mov
jmp
nop
nop
nop
nop
nop
push
sub
mov
jmp
mov
push
jmp
push
jmp
push
add
push
pop
cmpl
jmp
mov
mov
add
jmp
add
push
call
jmp
mov
xor
mov
mov
jmp
push
jmp
nop
nop
push
and
mov
push
mov
jmp
pop
test
pop
jmp
push
mov
lea
jmp
mov
pop
leave
ret
nop
nop
nop
nop
nop
xor
test
je
call
jmp
xor
mov
jmp
mov
idiv
and
test
jmp
mov
jmp
nop
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adcb
adc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
pop
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
pop
add
jl
add
nop
pop
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
sbb
adc
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
sbb
adc
add
mov
sbb
adc
sbb
adc
sbb
adc
sbb
adc
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
add
add
add
add
jmp
push
pop
cmp
jne
and
add
jmp
sub
sub
sub
jmp
lea
push
je
call
jmp
je
jmp
je
push
pop
cmpl
nop
nop
nop
nop
nop
jne
push
pop
cmpl
je
push
pop
jmp
add
add
mov
sub
add
jmp
test
pop
je
push
xorl
jmp
jmp
mov
add
jmp
test
je
mov
mov
jmp
add
decl
jmp
jne
sub
decl
jmp
and
jmp
jne
jmp
pop
lea
push
jmp
add
push
jmp
mov
jmp
jne
add
push
pop
cmpl
jmp
jmp
mov
testb
je
jmp
jne
pop
jmp
mov
test
jle
jmp
call
sub
pop
lea
jmp
pushl
call
test
nop
nop
nop
nop
nop
je
mov
add
add
jmp
mov
push
subl
push
xorl
and
jmp
pop
push
pop
jmp
and
mov
add
add
jmp
jne
jmp
jmp
add
jmp
pushl
add
jmp
pop
leave
ret
nop
nop
nop
nop
nop
dec
jne
mov
test
jmp
mov
test
jmp
jle
and
mov
shl
jmp
je
xor
mov
sub
jmp
push
pop
cmpl
jmp
push
subl
call
jmp
shr
or
jmp
mov
jmp
jne
push
jmp
test
mov
je
lea
jmp
xor
jmp
mov
jmp
andb
jmp
pop
pop
pop
pop
jmp
push
jmp
add
dec
jne
pop
jmp
incl
jmp
jmp
pop
pop
ret
jmp
push
addl
pushl
push
call
jmp
mov
jmp
nop
nop
nop
nop
nop
pushl
mov
sub
pushl
jmp
pop
pop
leave
ret
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
push
jmp
push
push
nop
nop
nop
nop
nop
call
pushl
jmp
pop
movzbl
nop
nop
nop
nop
nop
incl
jmp
push
call
nop
nop
nop
nop
nop
push
pushl
push
jmp
or
mov
jmp
call
add
push
addl
push
subl
jmp
and
sub
add
nop
nop
nop
nop
nop
sub
add
jmp
pushl
call
push
pop
cmpl
nop
nop
nop
nop
nop
jne
push
pop
cmpl
je
jmp
shr
jmp
jmp
push
pop
cmpl
jmp
je
test
je
jmp
jne
push
pop
cmpl
jmp
mov
xor
mov
jmp
je
jmp
sub
mov
mov
jmp
mov
and
lea
add
jmp
incl
dec
jmp
push
push
xorl
jmp
jne
jmp
jmp
pushl
push
call
jmp
mov
nop
nop
nop
nop
nop
mov
push
pop
jmp
mov
test
nop
nop
nop
nop
nop
je
pushl
add
jmp
jmp
nop
nop
nop
nop
nop
call
test
jmp
pushl
push
push
call
nop
nop
nop
nop
nop
add
add
testl
lea
jmp
pop
jne
push
pop
cmp
jmp
jne
call
push
pop
jmp
jne
jmp
pop
pop
pop
jmp
lea
push
call
jmp
leave
ret
push
pop
jmp
nop
nop
nop
nop
nop
test
pop
je
mov
nop
nop
nop
nop
nop
or
mov
sub
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
mov
incl
dec
jne
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
sub
jmp
nop
nop
nop
nop
nop
sub
sub
mov
shl
nop
nop
nop
nop
nop
movzbl
add
incl
nop
nop
nop
nop
nop
add
mov
lea
push
call
nop
nop
nop
nop
nop
push
pop
cmp
pop
jb
nop
nop
nop
nop
nop
add
push
pop
cmp
jb
sub
add
nop
nop
nop
nop
nop
push
pop
cmp
jae
sub
add
sub
add
nop
nop
nop
nop
nop
test
je
mov
and
mov
nop
nop
nop
nop
nop
sub
mov
mov
nop
nop
nop
nop
nop
incl
nop
nop
nop
nop
nop
dec
jne
mov
jmp
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
mov
incl
incl
nop
nop
nop
nop
nop
mov
push
pop
cmpl
nop
nop
nop
nop
nop
je
nop
nop
nop
nop
nop
mov
pop
sub
pop
nop
nop
nop
nop
nop
pop
leave
ret
nop
nop
nop
nop
nop
add
add
add
and
add
add
add
and
add
and
add
and
add
and
add
and
add
add
add
add
outsb
and
add
add
add
add
shlb
add
dec
and
add
add
and
add
and
add
and
add
and
add
and
add
add
add
and
add
and
add
and
add
and
add
and
add
add
add
add
outsb
and
add
add
add
add
ret
outsl
popa
fs
imul
add
add
je
jb
arpl
fs
jae
add
mov
je
popa
insb
inc
jb
add
je
popa
insb
inc
insb
insb
outsl
arpl
add
add
jb
jne
insb
push
jb
je
arpl
dec
inc
push
dec
inc
dec
xor
cs
insb
add
or
inc
imul
push
imul
jae
cld
add
je
jne
jae
jb
outsl
jae
add
inc
push
outsb
jne
je
insl
add
inc
push
xor
cs
insb
add
sub
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
inc
add
test
dec
imul
inc
inc
dec
xor
cs
insb
add
xor
add
push
push
pop
add
add
add
add
add
add
fildl
add
add
add
add
add
cmp
and
or
add
add
add
idivl
loope
jno
add
add
add
add
add
inc
pop
lret
add
cli
push
add
push
add
xchg
add
add
cmp
xor
add
push
push
pop
int
in
lea
add
addr16
jnp
add
add
add
add
add
add
aaa
test
aaa
push
xor
xor
sub
xor
cmp
cmp
cmp
cmp
pop
ss
xor
xor
dec
cmp
xor
das
ss
push
xor
xor
ss
cmp
xor
xor
xor
xor
xor
aaa
js
call
aaa
pop
cmp
xor
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pusha
cmp
insb
cmp
je
xchg
cmp
cmp
cmp
cmp
cmp
or
or
adc
pop
cmp
cmp
insb
cmp
add
add
add
xor
add
push
add
aaa
xor
