jl
add
fcoms
add
imul
add
lds
add
jl
add
add
add
aaa
lcall
js
add
bound
add
add
pop
lcall
jno
add
sbb
add
sub
add
add
add
add
add
outsb
add
xchg
add
das
add
jl
add
lret
cltd
add
jl
add
jl
add
jl
add
cs
gs
jne
je
add
add
add
js
add
bound
add
add
push
sub
add
add
sbb
pushf
add
jl
add
jl
add
jl
add
inc
outsl
add
jl
add
xchg
lahf
add
xchg
add
lahf
add
jl
add
adc
add
mov
sub
add
outsl
add
je
jb
outsl
add
add
popa
add
add
add
add
imul
add
jo
add
inc
add
jb
jae
outsl
add
inc
add
add
imul
add
je
add
add
add
add
and
dec
add
ja
and
push
add
insl
add
outsb
add
add
add
outsl
add
popa
add
add
add
push
add
add
popa
add
jae
and
push
add
jb
imul
inc
add
imul
add
add
nop
hlt
inc
adc
adc
fisubrs
pop
out
rclb
cwtl
mov
pusha
add
push
mov
call
pop
pop
ret
add
add
mov
add
or
or
add
adc
push
add
add
add
test
add
add
aam
add
add
in
add
add
inc
daa
add
add
xchg
in
add
add
movsb
fldl
sbb
sbb
lea
sbb
add
inc
jo
gs
jp
je
jb
push
dec
popa
jo
mov
addr16
xchg
fs
mov
fsubrl
and
clc
mov
in
add
decl
std
push
aam
add
cld
decl
mov
add
inc
jnp
lock
clc
imul
push
in
lcall
pop
pop
mov
push
call
mov
add
pushl
pop
push
push
je
test
xchg
loope
fcmovne
push
cmp
test
add
test
std
je
jne
jne
or
add
or
mov
add
xor
test
clc
je
clc
pop
dec
sub
adc
push
push
mov
push
loopne
add
ret
pop
add
mov
add
add
les
adc
add
add
and
add
add
je
add
gs
xchg
inc
gs
gs
outsl
popa
outsl
insb
pusha
loopne
outsl
add
inc
xchg
daa
outsl
jo
loop
je
arpl
stos
add
mov
inc
xor
arpl
jge
add
mov
addr16
jno
add
add
mov
inc
inc
xor
movsl
add
add
adc
add
add
and
add
add
je
add
add
test
add
add
aam
add
add
in
add
add
xor
add
add
inc
and
xchg
cmc
popa
adc
mov
movsb
sbb
int3
pop
push
test
inc
and
push
pop
mov
pop
in
out
mov
lods
mov
fists
jns
clts
dec
push
fwait
xchg
inc
das
les
rorl
mov
inc
scas
incb
nop
inc
jb
popf
lods
lods
xor
test
shll
jecxz
sahf
inc
lock
or
das
es
mov
xor
mov
mov
fstps
push
in
jecxz
jae
mov
mov
outsb
test
push
fldl
mov
jecxz
sbb
daa
minps
test
jnp
mov
inc
jmp
aad
xchg
or
jmp
cmp
sub
or
pop
mov
test
sahf
adcb
xchg
mov
xorl
push
lret
sbb
ret
mov
in
inc
push
jb
sbb
js
je
stc
faddl
inc
in
xchg
outsb
mov
adc
test
push
xor
push
jnp
fwait
jmp
jp
xor
leave
icebp
mov
xor
imul
jmp
cmp
bound
fimuls
push
jbe
aaa
seto
xor
jp,pn
xchg
js
sub
mov
or
mov
arpl
imul
mov
call
inc
shl
test
mov
cmc
jae
push
incl
bound
mov
mov
mov
lret
std
sbb
push
daa
sub
push
mov
cmp
pop
stos
or
cmp
mov
xor
push
inc
es
shll
aaa
mov
fs
mov
aam
pop
adc
iret
mov
jae
mov
push
movsb
xor
loope
jmp
mov
aad
fcomps
or
mull
cltd
or
orl
dec
xor
addr16
push
add
fistpl
mov
test
out
ret
imul
jb
pop
cmp
xchg
sub
push
or
sbb
xlat
or
jp
out
sub
sub
cmp
sbb
movsb
jg
clc
shll
popa
mov
sti
rcll
push
mov
pop
fcompl
jmp
push
xchg
aas
jns
negl
out
lea
pop
sub
stc
fcoml
arpl
ret
cli
ja
jp
mov
test
mov
aas
out
lock
dec
dec
lret
in
dec
fs
repz
pop
shlb
mov
fistpl
mov
and
inc
and
xchg
shrl
cmpsl
and
mov
sbbl
sahf
loop
lcallw
jbe
jmp
insb
inc
mov
jnp
jp
sbb
xchg
or
aas
or
sub
fbstp
mov
push
dec
inc
inc
dec
xchg
add
out
rcrb
pop
push
std
out
andl
mov
clc
cmp
push
test
sarb
sub
or
dec
insb
sbb
test
jo
pop
jp
jnp
rcll
ds
aaa
inc
adc
add
jb
mov
lods
sub
dec
sub
mov
addr16
jnp
and
xor
or
popf
fimull
lcall
dec
mov
mov
cmpsl
ret
adc
subl
mov
sbb
sub
loop
movsl
pop
sti
aas
and
add
dec
pop
hlt
or
mov
int3
loop
mov
addr16
lea
mov
es
rcr
icebp
or
and
sub
sbb
arpl
cwtl
mov
pop
es
loopne
lock
xor
test
mov
pop
js
mov
int3
cmp
and
movsb
mov
add
adc
jecxz
or
mov
stc
fadd
loopne
repnz
fiadds
mov
inc
lods
addr16
push
mov
cmpsl
mov
xlat
cmp
sbb
sub
jne
xchg
lret
pushf
cld
mov
inc
faddl
enter
outsb
rcll
out
push
rcl
icebp
ficoml
push
fld
popa
push
pop
cs
outsb
pop
mov
bound
lea
lods
add
add
lods
aaa
dec
jge
dec
xchg
push
pop
push
into
imul
pop
mov
or
and
xlat
in
imul
inc
mov
push
lods
cmpsl
xor
imul
adc
mov
jl
push
sub
sbb
out
jo
push
movsl
ljmp
sbb
ss
loope
xchg
jp
je
add
sahf
aaa
or
adc
in
fidivrs
add
call
push
jns
test
andl
add
pop
cmp
pop
inc
pop
push
filds
lret
nop
testb
in
pop
xor
pop
add
mov
add
inc
add
in
aad
xor
pop
mov
xchg
sbb
sub
fdivrs
daa
lods
mov
xchg
shrb
std
mov
cltd
int3
cltd
sbb
xlat
xor
pop
dec
xchg
popf
or
fimull
fcmovnu
cs
pop
cwtl
inc
out
mov
pop
inc
xor
dec
pop
faddl
in
and
push
or
xchg
pop
out
call
and
push
jle
out
cmp
inc
and
push
adc
jl
mov
dec
into
rcrb
push
push
mov
leave
xlat
dec
mov
in
xchg
fcomps
jp
push
or
into
int3
adc
and
shrb
fs
adcb
xchg
fbstp
xchg
mov
dec
and
pop
hlt
mov
imulb
pushl
repz
arpl
jo
loopne
dec
dec
cltd
test
jmp
mov
pop
sub
jmp
mov
pushf
divb
pop
fnstsw
jle
dec
fdivl
cmp
pop
push
pop
out
lcall
insb
js
sub
ss
mov
pop
xor
ds
sub
enter
mov
or
xlat
neg
mov
sbb
test
mov
add
data16
mov
or
cltd
ret
std
mov
cmpsl
xor
stc
pop
inc
into
sahf
xlat
sbb
xchg
imul
adc
xchg
add
sbbb
cli
sbb
push
cltd
cwtl
xchg
pusha
stos
push
add
sbbb
jbe
cli
lods
xchg
scas
scas
mov
inc
mov
push
fdivl
dec
xor
dec
xchg
packssdw
fiaddl
mov
dec
sub
out
nop
call
jecxz
ficoml
popa
mov
loop
pop
xor
loopne
lods
or
subb
inc
data16
fiadds
hlt
enter
cmc
cltd
jb
cmp
gs
jb
popa
cmp
pop
ds
bound
lahf
in
outsb
into
jns
xor
imul
jbe
insl
push
mov
out
rolb
pop
nop/reserved
rorb
xchg
loop
in
ret
and
bound
xchg
pop
into
mov
jns
adc
shrb
jge
jecxz
inc
fwait
cs
pop
subb
mov
xor
repz
enter
cwtl
stos
sbb
xchg
push
dec
adc
subb
inc
dec
fs
mov
jp
inc
stc
fnsave
mov
inc
loop
add
sub
jge
mov
rolb
or
push
mov
push
es
mov
dec
dec
dec
nop
lea
mov
dec
cmp
int3
dec
mov
icebp
mul
daa
inc
test
shlb
fcoms
mov
lcall
ja
ret
add
fbstp
lods
loop
test
outsl
adc
sbb
jae
push
adc
popf
nop
cmp
mov
sub
mov
mov
lds
mov
sbb
adc
loop
fiaddl
push
icebp
add
ret
int
movsb
repnz
mov
dec
fdivrl
mov
adc
jo
xor
ss
pushf
lods
pop
in
scas
xchg
call
jge
fucomip
sbb
jno
push
adc
and
and
imul
jmp
insb
adc
cmpsl
in
pop
pop
push
adc
mov
pushf
mov
sahf
or
push
push
lock
movsb
dec
jo
or
adc
outsb
lahf
jle
jno
mov
mov
fistpll
ljmp
imul
add
mov
cld
aad
idiv
mull
xchg
xor
mov
xor
ja
sub
notb
data16
inc
cmc
xchg
sbb
add
pop
shlb
sbb
int
pop
outsb
cmpsb
inc
mov
jmp
loop
dec
mov
push
push
xor
test
push
je
popf
inc
into
shrb
jno
mov
outsl
add
fprem
lret
jb
adc
mov
shl
insl
rcr
lret
sbb
ljmp
sub
mov
cmpsl
cmp
lret
aas
xchg
jns
sub
shrl
and
psraw
loop
sub
sub
insb
aad
rcll
mov
in
push
scas
stos
sub
repz
push
lret
movsl
inc
sbb
in
jge
cmpb
sub
fcomi
mov
and
push
xchg
jecxz
mov
filds
repz
outsl
xor
test
mov
test
xorl
cli
adc
test
int
test
jno
or
outsb
loop
inc
cltd
pushf
pushw
pop
cmp
sub
test
stc
loopne
or
icebp
xor
into
jge
xchg
or
add
pop
test
adc
lahf
pushf
imul
test
pop
outsl
clc
repz
call
mov
popa
repz
pusha
outsl
xchg
out
mov
es
out
xchg
push
adc
arpl
loopne
xchg
test
mov
or
cld
xchg
xlat
adcb
mov
inc
push
andl
in
addl
movsb
divb
les
das
inc
pop
cltd
mulb
stos
mov
add
and
or
out
jo
in
cli
cli
sbb
out
mov
xor
imul
xor
xchg
sub
mov
in
xchg
pop
mov
xchg
or
xor
cmpsl
mov
aaa
mov
aas
cmp
cltd
verr
sahf
xchg
mov
pop
push
cmp
int
pop
push
pusha
xor
mov
daa
in
gs
jae
pop
dec
scas
aaa
inc
push
cs
leave
pop
das
loope
cmp
cmpsl
lea
jg
mov
push
adc
xor
test
out
sub
xchg
cmp
mov
mov
adcl
cmpsb
lret
jo
lret
dec
popa
les
das
jle
in
jmp
popa
mov
sti
pushaw
ss
push
cmpsl
test
int
out
enter
loope
in
repz
xchg
cmc
inc
aam
cmp
jg
cmp
add
ret
mov
cmp
add
push
add
mov
cbtw
sub
lret
je
in
inc
sti
je
adc
push
add
out
or
or
inc
sti
mov
insl
dec
push
lret
imul
outsb
and
sub
test
arpl
xor
imul
out
jb
mov
cwtl
testb
adc
pop
into
inc
sub
sahf
lahf
mov
lds
dec
mov
fdivp
hlt
push
popf
test
loopne
xchg
fisubl
ss
mov
adc
cmpsb
movsb
lea
stos
pop
sub
xchg
loop
push
jns
sbb
outsb
insl
add
xor
sub
xorl
fnstenv
pop
lea
mov
dec
stos
mov
dec
in
inc
push
dec
jae
xor
adc
aas
jo
add
inc
leave
lahf
mov
test
push
add
mov
iret
notl
mov
mov
imul
pusha
mov
loope
mov
mov
test
pop
loop
hlt
push
clc
aam
push
inc
mov
clc
sbb
and
mov
mov
or
rorb
xorl
int
rolb
ret
jp
imul
xlat
mov
pop
popl
xor
xchg
ret
adcl
stos
xchg
ss
mov
mov
sub
lret
jns
add
xor
adc
test
sbb
mov
lock
inc
gs
les
adc
mov
xchg
push
jns
xchg
or
sub
push
xor
in
repnz
and
mov
popf
mov
add
mov
lods
pop
cmp
jge
add
shlb
iret
mov
mov
out
addr16
xor
sub
aaa
mov
ret
loope
adc
pushl
push
mov
push
jp
ds
mov
push
mov
mov
pop
lods
cmp
hlt
pop
inc
inc
inc
and
push
mov
xchg
imul
aam
dec
pop
mov
outsb
sbb
aas
lcall
cmp
pop
lock
iret
js
bound
icebp
cmp
pop
or
cli
test
add
aad
dec
push
stc
fwait
dec
clc
pop
test
test
push
jp
in
sahf
mull
in
les
ss
and
rorb
insb
stc
dec
in
adc
enter
adc
mov
fisubrl
mov
xchg
and
mov
xchg
dec
std
fists
ret
mov
and
jno
shrb
test
cli
jo
push
push
call
mov
mov
push
js
bound
mov
jno
rol
lret
sub
jp
aas
lret
aaa
shlb
insb
mov
push
mov
lahf
mov
cmp
mov
arpl
push
mov
rcll
mov
fsubr
inc
arpl
dec
xchg
mov
sbb
test
mov
jg
or
mov
pop
cmp
or
mov
cmp
faddl
cwtl
push
into
insl
cwtl
loope
ret
jmp
lods
pop
sbb
push
mov
movsl
sbb
clc
inc
dec
leave
loope
pop
cmp
mov
lea
jecxz
xchg
push
mov
enter
cmpsl
shll
cs
lret
pop
in
xlat
test
xchg
jnp
push
cmp
movsb
loope
mov
out
mov
mov
fdivrl
inc
fldl
fstpl
inc
fucompp
push
insb
scas
jnp
clc
dec
inc
xor
and
push
cltd
insl
cltd
pop
es
mov
jecxz
test
stc
fcoml
or
cmc
in
xor
je
adc
mov
push
mov
mov
sbb
adc
pop
adc
push
stos
cmpsb
xchg
push
aaa
in
out
xor
test
xor
data16
out
inc
call
sbb
sarb
in
xor
jle
dec
jbe
add
mov
sub
sti
dec
inc
ds
and
sbb
jo
int
out
push
sbb
or
adc
addr16
das
fidivrs
insb
mov
adc
loope
pusha
mov
mov
jo
clc
in
cwtl
insb
iret
cwtl
ja
cmp
out
aas
in
mov
xchg
xchg
cmpsl
and
outsb
fs
popl
fwait
stos
xchg
inc
into
jle
out
inc
or
inc
jo
dec
xor
decl
leave
stc
adc
mov
std
nop
xchg
jmp
mov
pushf
cs
push
lods
lcall
xchg
mov
push
gs
sti
outsl
sub
cltd
push
mov
cmp
xor
stc
jne
call
xor
mov
pop
push
ret
xchg
mov
outsl
dec
pop
in
inc
xchg
repnz
mov
xor
in
push
xchg
scas
cs
xlat
xchg
fistpll
sbb
dec
cmpsb
mov
fimull
sub
adc
xor
inc
mov
sub
iret
sbb
sbb
cmp
cmpsl
shlb
fcoms
inc
push
scas
push
popa
add
inc
cltd
sbb
daa
iret
mov
subb
mov
scas
pop
mov
and
sub
repnz
in
roll
cmpb
test
sahf
pop
rcll
sbb
jle
test
dec
outsb
adc
jg
jmp
rol
cmpsb
jnp
or
inc
je
aas
lds
stc
pop
or
mov
shlb
xchg
adc
enter
inc
into
ja
loop
and
mov
fildl
movsb
xorl
push
pop
pushf
sub
lea
lcall
orl
push
pop
push
pop
jmp
jecxz
sub
icebp
in
cmpsl
jg
adc
xchg
adc
pop
xlat
xchg
fldcw
cmp
shlb
or
mov
aas
add
xchg
jge
cld
pusha
cmp
inc
mov
fwait
sbb
aas
jecxz
mov
adc
and
sahf
fwait
dec
add
fcoms
stos
push
inc
lcall
inc
lsl
int3
mov
out
movl
push
mov
or
mov
push
xchg
mov
ss
lods
add
mov
or
xor
rcrl
out
xor
fmuls
shl
inc
outsb
sti
cmp
daa
shlb
sub
enter
jge
push
fdivs
jb
cmp
and
sahf
lcall
es
lea
mov
push
jmp
rclb
imul
outsl
gs
lods
rcll
fiaddl
dec
mov
adc
or
push
jae
or
and
adc
mov
and
add
in
xor
mov
loop
mov
loop
cmc
stos
int
in
push
sbb
lcall
sub
lret
inc
mov
ljmp
popf
mov
jo
add
jb
loopne
stos
fs
popa
icebp
jns
sarb
sahf
pusha
sub
xor
mov
jl
or
lds
inc
popf
xlat
icebp
push
jns
dec
jmp
dec
inc
dec
pop
leave
testb
stos
sub
add
bound
in
adc
xlat
test
adc
lds
scas
mov
loop
call
arpl
adc
sub
cmp
xor
aam
fsubs
push
adc
mov
fisubl
inc
imul
pop
int
sub
mov
imul
mov
add
lret
cmp
or
adc
les
test
push
leave
sub
jmp
cmc
stos
cmpsb
hlt
mov
icebp
aas
jns
repz
aaa
loope
movsl
push
lods
in
inc
push
testb
adc
lods
pop
jbe
test
pop
repz
push
adc
pop
xor
push
or
mov
jl
dec
divb
fiadds
push
std
xor
loop
popa
int3
xorl
sub
ja
mov
addr16
dec
push
je
ja
sahf
fistpll
fcmovbe
lret
adc
sbb
loop
add
cs
cwtl
sbb
xor
and
std
jo
js
mov
xor
das
lods
xchg
pop
pop
cmp
mov
xor
sub
ficomps
sbb
scas
sub
cmp
cltd
scas
int3
test
repz
pop
push
clc
inc
push
jecxz
mov
movsl
popl
iret
test
sub
adc
push
ficomps
pop
pop
das
inc
insl
out
mov
and
icebp
adc
call
jne
jbe
movsb
decb
xchg
lds
lea
cmpsb
fldcw
jo
add
fistpl
aad
sub
push
leave
imul
inc
shr
jnp
mov
fisttps
call
adc
movsb
sub
sbb
push
ficompl
xor
stc
shlb
sbb
test
mov
sarl
mov
push
sbb
cli
in
loopne
clc
lods
in
jns
lcall
and
cmp
mov
mov
and
movsb
jg
jb
inc
fisttpl
mov
push
lahf
loopne
std
cs
aas
xor
xor
ret
nop
mov
scas
and
je
adc
xchg
adc
stos
outsb
push
movsl
mov
lea
or
imull
insb
mov
cmp
push
fmul
jle
add
bound
imul
or
push
enter
mov
push
insb
pop
push
iret
mov
lods
or
sub
cld
jge
jbe
cmp
outsb
add
inc
dec
fiaddl
cltd
imul
shlb
popa
xor
repz
out
or
adc
cmpb
mov
arpl
push
adc
sbb
js
mov
cld
lods
hlt
sub
jle
sti
jle
bound
dec
pop
iret
fnstsw
rorl
pop
daa
push
jno
int3
pop
outsl
imul
out
stos
lock
pop
adc
jae
cmpsb
insl
inc
pushl
and
mov
bound
lahf
or
cmpsl
out
cmp
inc
cmp
or
subl
xchg
scas
xor
pop
push
cs
or
mov
xchg
in
idiv
push
adc
or
daa
in
jl
sub
imul
add
xchg
ror
insb
cmp
inc
or
sbb
mov
js
sahf
mov
sub
out
and
ret
push
shrb
insb
mov
pop
adc
mov
and
loopne
lahf
jge
push
fisubs
ljmp
stc
ljmp
pop
push
and
adcl
fldt
movsb
sbb
mov
mov
arpl
inc
test
xchg
sbb
xor
enter
cmp
jbe
or
dec
xchg
ficomps
xor
push
icebp
lea
call
clc
pop
mov
and
pop
mov
mulb
mov
jo
and
cld
pop
test
mov
jmp
scas
jb
mov
cli
pop
adc
jne
int3
xchg
pop
mov
sbb
lock
pusha
repnz
iret
mov
mov
sbb
packsswb
push
orl
in
int3
mov
jge
jmp
or
cmp
aad
pop
aas
loope
pop
add
ret
iret
and
sub
and
cltd
stc
les
jmp
mov
push
cmp
out
add
jns
xlat
cltd
in
mov
pop
xlat
imul
negl
sbb
sub
psubusw
jbe
fmul
movsb
int3
mov
mov
xchg
in
cltd
pop
push
jp
out
dec
mov
jg
imul
push
push
sarl
stos
stos
sbb
ds
int
imul
bound
addb
xchg
fwait
enter
call
jecxz
in
add
and
cli
adc
push
mov
jp
xchg
mov
sub
insl
cmp
test
pop
add
loope
mov
stc
sub
xor
adcb
testb
mov
xchg
nop
je
jle
mov
mov
pop
jl
addl
sbb
icebp
cltd
fstp
shll
je
xchg
ds
inc
jle
cs
dec
add
xchg
and
leave
daa
jb
shll
inc
inc
dec
add
pop
jo
cmp
and
push
xchg
enter
lods
push
inc
clc
ret
pop
jbe
jmp
cli
mov
dec
mov
aas
mov
sbb
add
movsb
sbb
inc
popf
cmpsb
adc
addr16
mov
icebp
xchg
push
mov
or
jge
pop
rolb
lods
push
adc
mov
or
dec
adc
iret
add
or
mov
fnsave
fucomi
leave
or
xchg
subl
cmp
mov
pop
les
repz
stc
xor
ja
lea
frstor
icebp
orb
fs
and
sbb
xor
sbb
call
ljmp
jns
nop
pop
sbb
inc
loop
enter
test
cwtl
push
repz
mov
sbb
negb
push
call
mov
sti
shlb
sbb
pop
jl
gs
xchg
popf
cmpsb
jle
stos
inc
mov
stos
out
xchg
stc
loope
rorl
push
mov
mov
gs
pop
cmp
sub
sub
mov
test
cmp
leave
sbb
int3
dec
int
mov
xchg
in
enter
jg
add
popa
js
or
adc
sbb
lahf
stc
adc
hlt
jp
fbld
popa
inc
ffreep
repz
je
xchg
pop
cld
push
sbb
inc
nop
xlat
push
clc
ror
sbb
stc
xor
popa
push
sbb
pop
jmp
xor
aaa
adc
dec
pop
clc
lods
insb
cmp
jg
in
add
add
mov
add
add
test
add
add
inc
and
xchg
cmc
add
add
movsb
lds
add
add
xchg
add
add
add
add
add
push
xor
fs
mov
add
add
lds
adc
add
add
add
add
loope
add
add
mov
add
add
stos
sahf
push
add
mov
pop
clc
jg
jg
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
lea
push
push
push
pushl
call
mov
cmp
je
mov
movb
call
movl
call
cmpl
jne
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
call
pushl
call
xor
leave
ret
push
mov
sub
push
push
push
orl
mov
inc
mov
pushl
pushl
pushl
push
push
call
add
mov
cmp
jbe
andl
cmpl
jne
push
call
mov
mov
movzbl
sub
push
call
mov
mov
inc
inc
push
pushl
call
mov
push
push
push
pushl
call
mov
sub
mov
add
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
movl
mov
sub
test
je
call
jmp
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
mov
add
movzbl
sub
test
je
movl
movl
movl
andl
jmp
jmp
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
push
pushl
call
mov
pushl
call
cmpl
jb
call
mov
pop
pop
pop
leave
ret
and
add
add
add
or
add
add
jmp
add
test
scas
roll
add
add
add
add
add
add
aas
mov
add
out
lahf
add
add
lahf
roll
sbb
add
add
jg
add
add
das
push
add
test
fs
add
sahf
outsl
pop
jb
mov
add
addr16
push
movl
add
push
dec
or
movl
ret
fistpll
mov
incl
call
outsl
lea
adc
push
call
pop
int
repz
mov
in
push
std
jmp
mov
mov
and
xor
pop
mov
adc
insb
xor
push
decl
loopne
mov
decl
imul
add
popa
sar
add
call
call
incw
repz
pop
loopne
jne
adc
inc
lcall
call
outsl
adc
pop
add
pop
inc
add
add
iret
test
stc
add
add
scas
shrl
outsl
gs
imul
dec
add
gs
je
xchg
inc
add
in
mov
insl
inc
outsl
dec
push
add
jo
or
pop
add
inc
js
stos
andl
imul
out
inc
dec
insb
push
insb
pop
jns
dec
add
pop
inc
add
add
iret
mov
add
add
loope
add
add
add
add
add
add
add
aas
mov
out
xchg
add
add
lahf
roll
add
dec
push
dec
mov
int3
je
bound
push
jp
ret
xchg
sub
shlb
mov
xchg
or
jnp
movsl
sub
jbe
movsb
repnz
hlt
aam
mov
stc
aad
xchg
cmp
xlat
cmp
push
mov
arpl
jns
xchg
mov
push
rorb
pop
xchg
push
inc
sub
mov
adc
add
mov
xor
out
addr16
mov
cmp
xchg
add
lods
xchg
fs
sbb
in
cmp
sahf
xor
fs
pop
jmp
xlat
sbb
je
arpl
sbb
rcr
mov
fidivrs
and
push
mov
icebp
leave
ret
ret
fbstp
jo
leave
or
jb
notl
sbb
call
enter
jo
push
fisubs
jle
lret
pushf
fists
jecxz
pop
mov
call
and
xchg
lea
add
xor
fcmovu
xor
loope
hlt
stos
pop
adc
nop
sbb
cmp
clc
outsl
and
xor
pop
sub
insb
mov
push
add
mov
cli
cmp
sub
cs
xor
orb
jae
push
into
xchg
in
mov
mov
enter
sbb
loop
scas
mov
jb
or
ja
or
pop
add
jp
clc
push
and
fstl
dec
sub
test
add
inc
movsb
cltd
jmp
mov
xchg
lea
dec
mov
mov
imul
sbb
lods
hlt
cmpsl
movsl
imulb
mov
insl
orb
test
test
mov
shrb
jmp
xor
xchg
aam
out
mov
sub
xchg
outsl
xchg
and
jle
js
rcrl
and
shlb
stos
pop
fwait
out
sub
stos
into
daa
scas
dec
mov
sub
bound
hlt
lcall
mov
gs
addr16
loope
cmp
fdivrl
push
scas
fscale
sub
jbe
jnp
pop
lahf
push
cmpsl
in
fildl
pop
dec
cmp
sbb
sbb
mov
and
shll
xor
or
lock
int3
cli
push
hlt
xor
out
cmp
pop
push
mov
loope
rolb
cmp
nop
jg
push
add
mov
mov
dec
jle
adc
scas
cmp
outsb
ljmpw
gs
imul
xor
in
into
push
pop
cmp
inc
push
xor
push
jl
popa
insb
xchg
sub
push
scas
lahf
xor
cmp
stc
outsb
adc
in
movsb
mov
dec
popf
add
data16
jnp
xchg
sbb
xor
dec
mov
jae
stos
mov
mov
add
nop
mov
daa
andl
and
mov
inc
adc
out
js
xchg
sub
mov
dec
in
cmc
loop
shr
add
fstpl
addr16
stos
dec
leave
jmp
aas
jmp
adc
pop
rcll
cltd
lret
adc
jmp
fsubrl
xor
push
inc
push
xchg
jbe
shrb
int3
mov
outsb
jge
mov
out
fisubrs
enter
ret
adc
clc
push
and
stc
push
shlb
lods
cmp
aam
jg
sub
mov
call
gs
add
xor
loop
cmpb
jbe
push
xchg
and
lods
jae
push
aam
adc
and
iret
les
imul
add
dec
jbe
push
fdivs
mov
jle
cmp
cmpsb
push
dec
rcrl
pop
fmull
mov
sarl
dec
mov
lods
rcll
jno
jl
stc
mov
icebp
xchg
cwtl
xchg
and
cmp
xchg
test
jbe
sub
dec
add
adc
sbb
inc
movsb
xor
sub
stos
pop
nop
sbb
ret
imul
mov
sbb
or
movsb
mov
mov
mov
dec
sahf
pop
sub
ja
popf
mov
xchg
sbb
lcall
xchg
mov
and
sbb
loope
leave
dec
mov
lahf
and
jne
adcl
add
xchg
inc
push
call
adc
imulb
ficomps
ficoml
shrb
call
adc
sub
fdivs
loop
sti
imul
nop
mov
sbbl
fstl
mov
pushf
and
fwait
das
call
jmp
or
fcomps
pushf
addb
add
enter
mov
sbb
mov
mov
jno
outsl
or
adc
icebp
jno
dec
loop
pop
out
add
andl
cmp
jp
inc
lods
int3
mov
movsl
inc
popa
sbb
push
mov
sbb
stos
aaa
cmpsb
sub
stos
hlt
jns
sbb
mov
clc
subb
add
xlat
xorb
and
imull
or
loope
adc
cmc
xchg
idivb
fdivrl
pop
in
inc
inc
xor
leave
loop
jbe
jecxz
push
sub
sub
je
xchg
bound
roll
jg
mov
add
inc
sahf
ret
fsubp
out
adc
mov
out
mov
imul
shll
dec
lcall
or
dec
and
imul
into
aaa
ds
pop
out
test
and
jge
dec
lock
mov
jecxz
or
in
pushf
inc
mov
or
push
outsl
adc
shlb
push
push
fsubr
sbb
and
xlat
cltd
lock
add
or
dec
inc
push
dec
xor
lahf
adc
cmp
in
inc
cwtl
or
rcrl
cmp
add
xor
jmp
inc
ljmp
mov
jne
scas
int
mov
add
aad
ljmp
fwait
test
or
push
jmp
sub
dec
data16
or
outsb
call
mov
or
inc
daa
pop
das
icebp
or
aaa
adcl
fwait
push
xchg
lret
les
adc
sub
test
jo
popf
sbb
fs
pop
inc
icebp
movsb
mov
aam
dec
mov
sub
repnz
cmp
bound
ljmp
add
xor
xchg
and
iret
test
in
nop
test
iret
out
in
sbb
or
xor
int
outsb
mov
xchg
mov
les
in
dec
dec
dec
push
iret
out
cmp
addr16
aam
fistl
idivw
xor
mov
aam
or
and
test
icebp
inc
scas
push
sbb
add
fcmovbe
je
cltd
ret
mov
scas
dec
in
in
sub
addr16
stos
les
push
sbb
add
sub
mov
outsb
jp
inc
fiadds
cmp
cmp
lea
jge
dec
lret
pop
cli
mov
jge
mov
mov
daa
ss
or
push
sub
leave
xchg
xchg
scas
xor
add
xchg
dec
enter
or
adc
push
dec
push
sti
xor
adc
cs
dec
sub
gs
ret
movsl
movsb
clc
sahf
add
hlt
inc
imul
jecxz
and
sahf
pop
mov
out
add
lea
cld
mov
scas
pop
bound
sbbl
in
test
xchg
jns
inc
ret
repnz
xor
and
sbb
fs
test
mov
ja
xchg
cmp
push
nop
repnz
insb
rcrl
pop
fiaddl
adc
mov
je
add
xchg
or
push
push
xlat
cmp
int
stos
cmp
dec
xchg
adc
dec
jne
mov
lea
pop
xor
cltd
jg
jb
fcmovnbe
ljmp
aad
push
jne
pop
mov
int3
mov
fstl
mov
cmp
rorl
imul
xchg
or
pop
add
mov
or
sub
shlb
inc
mov
pop
ret
push
dec
iret
addb
inc
push
pop
cmpsb
lret
dec
insl
cwtl
cmp
pop
adc
xchg
int
test
and
sub
mov
inc
or
das
es
rcr
roll
sbb
stc
mov
add
ss
out
dec
icebp
mov
push
pop
pop
xor
iret
mov
xchg
mov
adc
jg
testb
dec
mov
adc
lahf
loop
cltd
adc
cmp
sbb
xor
js
rcll
cmp
xchg
aas
je
addr16
aam
jmp
daa
inc
std
push
es
rcl
arpl
pusha
fstps
pop
hlt
fwait
ja
or
inc
mull
icebp
pop
mov
mov
jle
xchg
sub
mov
loopne
hlt
xor
or
add
aam
shrl
aad
cmp
dec
mov
xor
pop
dec
jp
pop
sahf
loopne
sub
loop
int
lods
jno
out
inc
stc
test
mov
aaa
lods
js
js
jae
cmpsl
lods
adc
popf
mov
hlt
mov
xor
pop
movsl
rclb
rcrl
outsl
adc
mov
cmp
test
inc
add
adc
je
int3
jp
lea
push
fcmovnb
sub
or
fstl
arpl
add
and
ret
jg
gs
popf
in
clc
add
sbb
and
mov
lret
pop
movsb
arpl
addr16
mov
aaa
lock
mov
orl
test
dec
aaa
mov
push
jecxz
mov
sub
and
imul
scas
icebp
sbb
call
lret
icebp
pushf
in
dec
and
pop
dec
aam
push
call
inc
imul
aam
add
movsb
mov
rcrb
mov
mov
aam
and
lahf
outsb
cli
pop
flds
mov
xorl
dec
aam
and
or
clc
leave
mov
aaa
mov
ret
test
and
aas
bound
into
std
pushf
cmp
sbb
push
or
iret
sar
dec
dec
arpl
push
push
ds
push
in
loope
addr16
call
cmp
xchg
stos
sub
outsb
mov
inc
out
js
push
lea
adc
mov
aaa
mov
loop
mov
sbb
mov
sub
and
add
lods
add
in
add
push
stc
lods
dec
push
xor
sbb
aam
mov
in
in
mov
xchg
out
sub
jne
dec
lods
test
loop
ja
cmc
jae
nop
inc
je
push
ret
mov
and
nop
cmp
shr
xchg
in
cmp
or
mov
xchg
xor
mov
sub
inc
scas
imul
xor
pop
nop
adc
dec
xor
push
jmp
push
pushf
scas
data16
cmpsb
sub
pop
cli
dec
or
jge
inc
movsl
outsl
rcrl
sub
aad
xchg
scas
std
inc
mov
cmp
cmp
mov
fadd
je
dec
sbb
mov
push
pop
mov
out
jecxz
xor
inc
mov
mov
push
cwtl
mov
icebp
and
dec
mov
push
and
insb
mov
push
cmpl
jb
enter
or
into
sbb
mov
push
jg
in
push
and
cmp
jge
inc
push
pop
lahf
cmp
ljmp
sub
stos
outsl
cltd
rcrb
push
push
and
jbe
mov
lret
hlt
aas
pop
dec
rolb
mov
adc
cltd
scas
dec
popa
pop
outsb
mov
push
xor
movsb
in
or
aaa
adc
aaa
addr16
sbb
inc
leave
out
stos
push
xchg
lods
sub
cmpsl
sub
out
fidivrs
push
mov
or
in
push
pop
loopne
rorl
xchg
xchg
imul
push
and
in
mov
xchg
push
mov
mov
lcall
fcoms
ffreep
xlat
fnstcw
test
sub
jns
pop
das
in
cmc
cli
pop
arpl
cmc
mov
xchg
std
inc
push
pusha
push
mov
pop
pusha
mov
adc
push
fdivl
arpl
call
sar
mov
inc
cwtl
repnz
sub
dec
mov
mov
dec
inc
mov
in
das
xchg
sub
int3
jl
inc
and
pop
popf
sub
lcall
cs
cmpsb
shll
iret
jmp
sbb
adc
push
icebp
cld
mov
scas
pop
cs
jb
roll
push
daa
or
fcoml
add
push
mov
cmp
xchg
sbb
imul
fnsave
mov
pop
xor
mov
pop
out
adc
pop
pop
push
gs
jno
pop
fistl
push
or
aas
adc
pop
fmuls
xor
sub
cmp
fcompl
dec
test
addr16
xchg
add
mov
scas
pusha
jmp
push
dec
jae
je
sub
dec
insb
jg
das
pcmpgtd
mov
and
xchg
sbb
adc
jae
inc
loopne
xchg
cmpsb
xor
les
popa
in
inc
insl
test
ss
xchg
lret
add
push
shr
fnstenv
mov
add
pushf
sub
cs
fmull
inc
or
mov
xchg
sbb
dec
mov
fdivrl
jno
sbb
mov
or
jbe
and
jecxz
pop
and
mov
js
xchg
clc
aaa
lds
or
lret
sub
dec
or
mov
mov
call
cmp
mov
mov
ja
push
lahf
mov
mov
inc
add
add
out
mov
frstor
push
inc
popa
loope
cmpsl
cld
imul
mov
vshufps
stc
sub
cmpb
mov
sbb
add
test
fwait
sub
in
out
xor
cmp
cmpsl
hlt
and
cs
in
neg
pushf
fisttpl
dec
lds
lret
pop
sar
es
push
icebp
jl
call
aas
loopne
pop
sahf
sbb
cmp
lea
fisttps
cltd
xor
lret
scas
or
je
sbb
fldenv
xchg
and
sbb
mov
add
clc
pop
pop
push
repz
inc
or
pop
popf
shll
fsubr
jae
jbe
sub
jns
jne
mov
dec
gs
adc
mov
sbb
es
jecxz
lods
int3
and
loope
aam
or
lock
mov
or
data16
daa
xor
sub
mov
lods
fwait
out
scas
sti
lock
lock
mov
inc
push
or
lret
cmpsl
xchg
sbb
xor
jmp
sbb
mov
or
das
fdiv
in
mov
inc
lock
jmp
xor
leave
add
jmp
or
xchg
and
jnp
dec
cmp
or
dec
int3
pop
fisubrs
dec
out
dec
xchg
mov
pusha
int
test
stos
add
jecxz
adc
jnp
lcall
aaa
xor
ss
test
insl
jg
shl
pop
mov
rclb
ud1
inc
icebp
mov
outsl
lea
jge
ret
push
mov
cmp
mov
add
insl
jno
mov
pop
pop
mov
insb
or
adc
movsl
enter
inc
and
je
out
pusha
insl
ficompl
test
mov
lods
subl
daa
sbb
mov
dec
andnps
in
jno
push
repnz
mov
in
outsl
push
or
loopne
adc
int3
pop
icebp
and
das
repz
das
icebp
pop
push
int3
and
adc
and
pop
je
mov
aam
xchg
mov
imul
push
subl
int3
in
popa
dec
push
notb
pop
adcl
mov
xor
jno
add
clc
push
in
xchg
popa
inc
and
pop
mov
mov
fldcw
pop
loope
in
xchg
add
daa
mov
test
mov
leave
mov
jp
nop
dec
cli
loope
inc
jg
or
and
sbb
leave
popf
jle
inc
sbb
popa
scas
in
adc
jmp
inc
mov
mov
sbb
push
mov
mov
jge
outsl
daa
inc
sub
lea
or
rcrb
jo
aad
js
push
xchg
sahf
jne
icebp
inc
adc
mov
outsl
divb
out
jmp
shll
test
xor
and
mov
xchg
xchg
add
mov
dec
jae
test
filds
xchg
add
and
or
xchg
lea
mov
mov
xor
mov
push
pop
jb
lahf
sbb
setns
repz
sub
ror
sarl
fxch
xor
clc
dec
lahf
xor
adc
sub
and
shlb
cmpsb
cmc
mov
jecxz
add
sbb
scas
pop
push
pop
lahf
dec
lds
sbb
popf
ret
call
xchg
inc
repz
adc
sbb
xchg
sarb
lcall
data16
int
dec
dec
out
sub
pusha
dec
jne
pop
and
in
lods
mov
ljmp
insb
jae
xchg
inc
dec
mov
mov
jbe
bound
jp
ret
sub
sub
out
scas
and
adc
lret
mov
imul
in
int3
cwtl
in
pop
mov
add
data16
push
fs
aaa
mov
sub
dec
xchg
imul
or
ss
or
ficomps
push
push
and
pusha
mov
gs
int3
pusha
pop
mov
cmp
insl
sub
out
out
outsl
aad
dec
push
cs
pop
imul
push
pop
jno
push
pushf
add
and
cmp
addr16
dec
xor
mov
mov
fistps
popf
movsb
shrb
mov
sub
jae
push
pmullw
ret
lcall
inc
or
jo
nop
lds
sbb
mov
cmpsl
xor
mov
popa
outsl
mov
mul
pop
sbb
cmp
movsl
pop
ss
test
imul
adc
or
dec
push
fmuls
sbb
jne
movsl
scas
sbb
cmp
int3
sbb
adc
repnz
add
popf
adc
adc
cwtl
mov
movsb
mov
imul
jnp
imul
jg
fistps
cmpsl
cmp
add
fildll
pop
mov
xor
das
inc
jl
mov
mov
je
adcb
sti
sub
out
xchg
inc
push
sub
cmp
hlt
cmpsb
idiv
mov
push
test
mov
repz
out
inc
pop
push
scas
jnp
jecxz
inc
sbb
dec
add
cld
mov
mov
pop
test
fisubl
mov
or
xchg
sbbl
imul
xor
dec
ss
mov
xor
xchg
ret
and
mov
lret
add
adc
je
adc
add
popf
out
lcall
dec
cs
stos
mov
mov
xlat
int3
dec
add
and
jne
ret
cmc
cmp
pop
out
dec
cld
repz
inc
out
xlat
stos
cltd
shr
sub
sub
jnp
mov
and
outsb
adc
adc
rol
movsb
fs
push
push
leave
add
cmp
stos
subb
push
data16
xlat
mov
or
jge
mov
in
sbb
ja
fnstsw
outsl
lret
pop
inc
fsub
xor
mov
aad
aam
push
cs
mov
stos
cmp
in
jl
ja
add
ss
xor
xchg
repz
sub
call
mov
push
mov
jge
mov
add
push
out
adc
add
mov
sahf
cwtl
cmp
jg
xchg
ss
lret
test
sbb
dec
push
movsb
lea
mov
pop
ljmp
cmc
push
scas
jae
leave
scas
mov
popa
ds
movsl
adc
jge
roll
ja
sub
push
mov
mull
cmpsb
mov
sarl
jmp
jo
jns
and
stos
or
stos
sbb
sub
mov
dec
mov
sub
mov
test
mov
cmc
cmp
scas
es
cwtl
ja
mov
push
and
bound
imul
mov
adc
leave
cmpsl
push
fstl
xchg
scas
adc
add
sbb
jmp
pop
ret
pop
stos
and
cmp
push
clc
int3
loop
xchg
fildl
pop
imulb
dec
fs
inc
inc
das
mov
pop
dec
icebp
fistpll
sar
jge
cmpsl
bound
sbb
data16
or
jl
sahf
sbb
subb
push
mov
adc
fildl
insl
or
push
push
mov
imul
std
adc
pop
insb
outsb
or
cltd
popa
pop
sbb
cmp
push
sub
das
sti
dec
lock
add
aaa
mov
mov
push
pop
fcoms
cs
psraw
shl
out
lret
cmp
xor
adc
data16
in
cmpsb
in
fisttpl
lock
jns
fs
xchg
push
sub
pop
rcrb
dec
stos
pop
adc
popl
outsl
das
mov
stc
sub
xorb
inc
lret
mov
testl
es
or
leave
das
or
loopne
jbe
dec
xchg
sbb
enter
testb
lods
or
fs
cmp
inc
sbb
jmp
jmp
jmp
pop
mov
push
xchg
and
sub
jnp
or
insl
push
push
inc
fwait
ljmp
lea
xor
repnz
mov
mov
mov
add
push
push
scas
mov
stos
inc
xchg
push
ja
cmp
and
pop
mov
inc
sub
hlt
cmp
je
mov
loope
ja
mov
mov
xchg
mov
jecxz
dec
rclb
js
jo
iret
insb
insl
dec
syscall
les
push
ret
mov
cmp
ss
ss
sbb
ds
imul
mov
add
ret
pop
xchg
loopne
cli
xor
jmp
push
fisttpl
xchg
dec
shl
rorb
push
push
add
dec
and
cs
mov
jmp
insl
mov
sti
test
cwtl
pop
push
jne
pop
js
inc
xor
push
gs
add
sti
hlt
cli
pop
dec
cmp
cld
cld
lfs
cmp
in
mov
cmp
push
out
mov
push
cmpsb
push
por
pushf
les
dec
mov
jmp
add
aas
decb
sbb
xchg
mov
cli
sbb
mov
fs
insb
sbb
mov
or
mov
ss
imul
popa
mov
inc
xorb
pop
rcr
aas
out
fcomps
jne,pn
jbe
jns
adc
rolb
int
inc
xchg
fldcw
cmp
inc
xchg
dec
call
push
sub
xchg
fwait
lods
leave
loop
iret
sub
and
push
xchg
or
enter
fsubl
fimull
jae
xchg
les
mov
hlt
std
mov
sbb
repnz
cmp
adc
xor
aam
stos
int
in
ds
lret
xchg
insl
fmuls
sub
faddl
push
add
insb
leave
sbb
fnstenv
fs
xchg
repnz
mov
dec
roll
sbb
scas
xchg
cld
imul
mov
insl
mov
call
inc
je
mov
int3
jge
jo
nop
jle
cmc
jns
data16
iret
mov
mov
push
test
dec
mov
imul
aaa
mov
out
adc
jge
push
cmpl
hlt
jne
jge
insl
xor
outsl
and
fiaddl
push
rorl
repz
shl
cmpb
pushf
dec
pop
pop
cmp
xlat
xchg
repnz
sbb
icebp
call
js
dec
push
lock
mov
lock
inc
mov
mov
xor
hlt
jg
dec
or
pop
or
xor
in
inc
mov
adc
adc
in
mov
or
lcall
sbb
in
push
dec
dec
repz
test
das
mov
inc
xor
mov
stos
movsl
jmp
loopne
insb
pop
push
hlt
add
mov
pop
pop
sti
pop
jecxz
mov
movsl
or
sti
sub
dec
imul
scas
int3
cs
bound
jae
cwtl
lea
repz
fs
nop
dec
outsl
ret
cmpsb
subb
or
add
add
jno
add
add
mov
out
xchg
add
add
lahf
roll
add
dec
xor
add
add
add
add
das
push
add
add
filds
icebp
add
add
mov
add
adc
add
add
add
add
add
jmp
add
add
scas
roll
add
add
add
add
add
add
stos
stos
out
xchg
ja
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
pop
pushl
add
jae
and
mov
xchg
add
add
add
rolb
add
add
add
add
or
mov
fs
add
jno
lock
aad
sbb
sbb
sbb
sbb
sbb
sbb
jne
bound
inc
dec
outsb
mov
imul
dec
je
mov
cld
fnstenv
sahf
lods
arpl
mov
mov
push
je
or
or
cvtdq2ps
mov
mov
leave
mov
orb
adc
push
in
add
incl
xchg
fs
push
je
adc
cmpsl
xlat
inc
push
mov
inc
add
movl
loopne
mov
inc
mov
shr
push
pop
xor
push
incl
mov
push
ljmp
push
and
cld
push
loop
add
lea
adc
jp
lea
verr
dec
repnz
lret
mov
cmp
lea
call
adc
adc
int
adc
add
sbb
sbb
add
dec
mov
popf
imul
sbb
in
adc
push
mov
add
jno
fs
insl
outsb
inc
fisubrs
je
mov
jb
outsb
outsl
mov
push
add
add
add
insb
fs
insb
cmpsl
sub
popa
inc
je
and
jae
mov
add
inc
pop
cmpsl
gs
add
incb
add
add
add
add
test
add
add
add
add
add
add
add
add
add
mov
add
add
in
add
add
aad
add
ret
xchg
adc
cmp
cs
cmpsl
lods
inc
mov
fcoml
add
fstpl
cs
psrlq
leave
add
and
lock
in
enter
sub
jge
pop
bound
icebp
cmc
add
xchg
pop
pop
jno
xor
iret
jnp
jne
push
in
negb
sarl
mov
push
loop
leave
jge
cmp
pusha
xor
cmp
into
aas
imul
pushf
gs
fldl
xchg
lds
cmc
imul
mov
pop
fwait
jns
and
mov
insb
cs
mov
mov
aad
movsl
rclb
xchg
je
sbb
je
inc
bound
push
lods
insl
inc
sbbb
into
cs
sub
mov
pushf
jmp
movsb
je
mov
jb
mov
xor
lret
mov
sbb
fcompl
and
dec
or
xor
cs
mov
into
push
add
cs
xor
jmp
test
inc
mov
outsb
daa
pop
sbb
and
aaa
fsubrs
aam
mov
into
cmpsl
test
das
das
rolb
mov
in
out
aad
xchg
xor
aam
sti
and
pop
sbb
pusha
mov
dec
and
xor
ror
inc
sub
scas
xchg
pushf
aad
daa
inc
sti
mov
mov
sub
xchg
bound
inc
mov
xchg
movsl
bound
cmc
subl
data16
sub
movsl
sbb
or
mov
cmpsl
les
push
xchg
mov
mov
lods
leave
push
ror
mov
pop
dec
sarb
mov
pop
cmp
push
cwtl
fidivs
addr16
pop
mov
ss
add
in
dec
mov
lock
jne
adc
cwtl
xchg
cmp
mov
and
in
or
and
adc
push
shl
sbb
mov
lahf
out
jge,pn
shrl
cs
fs
icebp
xchg
std
out
or
jecxz
pop
inc
xlat
rclb
decb
push
push
sbb
jns
ret
stos
pop
aad
sub
mov
mov
xor
lahf
and
loope
rolb
mov
sub
mov
jbe
sub
clc
cmp
insb
inc
popa
add
shlb
jmp
xorl
mov
and
gs
inc
push
sub
or
inc
dec
xchg
xorb
data16
das
dec
push
testl
cli
loop
lret
inc
push
lock
xchg
aad
pop
je
or
adc
mov
out
jb
in
adc
mov
pop
sbb
dec
enter
in
mov
je
movsl
jge
int3
imul
gs
jne
inc
mov
lret
xlat
jl
mov
outsl
add
adc
dec
hlt
xorb
pop
cmp
push
arpl
in
shr
aam
push
jle
adc
scas
inc
mov
pop
lahf
ret
ret
jnp
insb
loopne
vmulsd
cmp
pop
or
aaa
test
stos
and
std
mov
rclb
push
stos
xchg
jecxz
mov
push
int3
sub
inc
arpl
cs
test
dec
mov
mov
add
pusha
inc
pop
push
pop
xchg
pushf
leave
aad
mov
lock
sub
loope
out
fmul
jle
gs
icebp
xchg
imul
cmc
das
sti
sbb
push
test
fisttpl
dec
add
add
out
clc
push
jmp
fidivrs
jae
and
sahf
mov
add
out
rorl
adc
ficoms
pop
enter
aas
dec
scas
adc
in
shll
mov
stos
aad
fwait
sahf
imul
sbbl
pop
test
sbb
xchg
and
and
gs
mov
inc
in
mov
or
gs
inc
outsl
rolb
push
or
dec
push
push
pusha
cmp
adc
add
popf
push
std
addl
jns
push
push
and
clc
das
lods
xor
pop
imul
clc
push
mov
adc
scas
push
add
pop
push
out
xchg
ja
xor
xchg
sub
std
sub
ror
inc
mov
add
jbe
mov
rcrb
aas
jmp
movsl
fprem
jno
enter
imul
aaa
lea
push
mov
loop
and
xchg
mov
push
not
stos
dec
mov
gs
stos
rclb
push
mov
jb
mov
int3
iret
pop
jecxz
xlat
add
into
cmpsb
dec
fisubrs
fst
out
and
hlt
xor
adc
scas
pop
dec
pop
rcrl
out
mov
scas
mov
lods
mov
in
push
test
dec
pop
and
mov
into
mov
iret
jmp
mov
and
dec
outsb
ljmp
call
sti
test
jge
test
sbb
or
sbb
aaa
mov
dec
jbe
sarb
mov
out
ja
inc
or
adc
cmp
sub
or
dec
pop
shr
or
aad
nop
sbb
lock
mov
test
jp
lret
scas
cmp
lods
and
adc
dec
aas
lret
enter
add
lret
orl
add
fcmovnu
movaps
ret
leave
ja
push
ljmp
pop
mov
push
sarl
push
jnp
int3
jmp
xchg
dec
xchg
cmp
sbbl
insb
xor
jecxz
adc
mov
adc
pminsw
mov
mov
add
or
repz
sub
mov
lds
int3
imul
push
aad
cs
fsubs
push
adc
fisttpl
mov
sbb
dec
jle
lock
adc
push
jae
push
lahf
adc
xchg
dec
nop
test
aas
testl
loope
inc
cli
adc
imul
movsl
pop
jg
nop
mov
loopne
mov
sbbb
stos
rcrl
out
adc
dec
mov
xor
nop
mov
sahf
or
and
pop
das
push
loop
loopne
xor
jns
jmp
mov
out
cmc
pop
xchg
dec
add
sub
jo
shrl
enter
aas
xchg
xor
push
dec
mov
into
je
or
mov
xor
lds
pop
mov
push
pushf
add
xchg
xchg
out
dec
jbe,pn
faddp
sbb
or
ret
ret
sbb
push
xchg
push
aad
int
jbe
pop
daa
adc
cmpsl
jne
cmp
daa
repnz
adc
hlt
inc
outsb
aam
or
nop
push
lock
pop
movsb
lds
cmp
mov
and
sbb
in
sbbl
mov
cmpsb
imul
jle
je
in
jno
mov
jl
lahf
mov
in
mov
sarb
mov
cmpsb
repnz
shlb
and
inc
popf
mov
cmp
in
xchg
add
scas
clc
add
jbe
in
xor
negb
or
mov
fwait
pop
and
pusha
int3
imul
cmp
jno
pop
push
ljmp
adc
inc
stos
push
stc
jg
repnz
or
insb
lahf
sub
fst
sub
mov
add
xor
imul
popf
fdivs
jns
fisttps
pop
inc
nop
push
xchg
insl
ud0
and
mov
fidivrl
movsl
mull
mov
mov
add
shll
lcall
sub
push
xchg
popa
xchg
fisubl
notb
lahf
mov
out
pop
add
call
pushf
xchg
pop
adc
adc
pop
push
jb
push
je
push
in
call
divb
xchg
cmc
pop
divl
stc
mov
outsl
shr
pop
repnz
mov
push
push
movsl
loop
adc
ljmp
fwait
push
xchg
stos
outsb
xor
pop
out
neg
loop
in
mov
aad
cmp
sbb
sbbl
pop
jecxz
and
mov
insb
lcall
and
mov
jl
xlat
sbbb
mov
mov
sub
sub
test
lods
and
add
inc
sbb
or
in
jecxz
jae
mov
dec
scas
scas
xor
xor
xlat
xchg
xor
inc
mov
ds
icebp
add
jae
inc
jecxz
or
push
cmpsl
ja
sub
sub
cmpsb
jns
lahf
pop
fmull
add
mov
inc
or
xchg
push
or
movsl
or
xlat
cwtl
shll
mov
xor
js
call
sahf
adc
fldt
cmp
fidivrs
dec
outsl
mov
dec
in
lahf
dec
mov
mov
push
in
inc
fnstcw
les
xor
aas
sbb
xor
inc
arpl
mov
add
pop
push
jno
popa
lret
jns
and
adc
negb
mov
sbb
xchg
adc
mov
mov
mov
or
jl
push
clc
and
jp
mov
fmulp
loope
push
or
sub
stos
or
jecxz
adc
scas
and
addr16
mov
add
cmp
xor
sub
cltd
mov
add
inc
add
push
popf
inc
jb
test
pop
dec
mov
mov
cmp
out
in
subl
into
cli
test
push
je
out
loope
push
xchg
sub
add
adc
pop
dec
ja
test
sub
mov
xchg
mov
cli
pop
jle
sub
lock
mov
mov
int
and
push
out
sti
cmp
add
es
or
movsl
add
adc
jecxz
jl
jb
icebp
mov
in
aaa
cmc
push
mov
push
and
or
popf
fidivrs
out
mov
and
call
nop
fs
cltd
data16
inc
xchg
pop
inc
dec
popf
add
out
pop
aaa
outsl
dec
sub
mov
xor
mov
imul
sub
jns
push
inc
push
in
rorl
push
push
pop
jg
cmpsl
addr16
sbb
mov
sub
mov
int3
mov
fistl
lods
xchg
sub
sti
and
fnstcw
mov
aas
in
pop
pop
ss
add
int
out
hlt
inc
bound
adc
mov
dec
pusha
xor
xor
add
dec
jns
rcl
mov
jmp
pop
loope
dec
jno
cwtl
and
xchg
pop
out
test
mov
mov
fimull
dec
mov
shll
test
test
push
push
or
outsl
dec
loopne
ss
cmc
xor
stos
loopne
dec
in
fdivl
stos
in
fisubs
mov
mov
sbb
into
arpl
push
in
sbb
repnz
repz
lret
lea
iret
push
and
out
aaa
cs
jb
mov
stc
sbb
xchg
mov
lods
xor
mov
iret
outsb
clc
pop
cmp
pop
std
loop
hlt
popa
mov
aaa
shrb
jnp
bound
scas
push
loope
fs
xor
cltd
ret
cmpsl
imul
mov
inc
cwtl
daa
clc
mov
iret
jecxz
lods
push
push
negl
sbb
in
sarl
push
adc
ja
clc
aas
or
pop
in
sub
pop
int
testb
mov
xor
adc
xchg
sti
aam
ljmp
pop
push
lock
jns
jbe
pop
cmp
out
lock
pop
or
mov
cwtl
int
push
inc
ret
xor
mov
pop
or
out
push
pop
in
or
jb
cltd
cld
inc
sbb
push
push
sbb
push
cvtpi2ps
fwait
call
std
aas
push
mov
addr16
push
mov
nop
sub
inc
xor
jmp
jecxz
loope
aad
xor
cmpsl
data16
cmp
scas
leave
pop
and
cmpsb
in
in
leave
fxtract
cld
ret
flds
test
sbb
inc
imul
jnp
xchg
in
cli
int
push
or
sub
ret
xchg
orb
xor
in
movsb
fbstp
hlt
pop
push
push
iret
push
add
jg
dec
xorb
aam
xor
pop
ja
inc
xor
fistpl
pop
imul
pop
push
jb
pop
movsl
mov
lock
mov
inc
cld
dec
pushf
arpl
cmp
test
shll
jp
popf
jl
mov
cmpsl
sub
mov
sbb
mov
orl
pop
xchg
push
or
imul
mov
cmpsl
cmp
xchg
xchg
loopne
jecxz
lret
les
sub
mov
jp
imul
dec
xchg
adc
sahf
xchg
push
clc
test
aaa
mov
and
fbstp
insl
rcl
pop
hlt
cwtl
cmp
fsubr
cli
out
fsubrs
leave
cmpsl
loop
jmp
mov
mov
test
push
mov
push
pusha
pop
cwtl
mov
add
jp
aas
insl
dec
jmp
jecxz
fnsave
jo
arpl
std
sbb
mov
imul
popa
fs
bound
aam
mov
sub
js
lock
sub
lret
xchg
mov
mov
mov
popa
lods
jbe
fmul
imul
mov
pop
hlt
inc
jae
hlt
mov
test
sub
jmp
xchg
ret
dec
add
cmp
out
hlt
movsl
mov
pop
mov
dec
aad
dec
xchg
jae
stc
adc
adc
pop
mov
fwait
out
div
jg
xchg
dec
dec
lods
sarb
inc
jmp
arpl
rcrb
aaa
enter
int3
jae
icebp
fdivrs
xchg
mov
or
xor
jns
xchg
pop
mov
dec
push
and
sub
jbe
push
aam
cs
cmp
or
xor
fsubrl
sub
push
xchg
enter
mov
add
mov
sub
std
or
sbb
or
and
lcall
jae
fmull
clc
sbb
mov
mov
pop
pusha
out
jb
mov
loopne
repnz
ret
adc
mov
subb
pop
xlat
js
mov
xor
dec
bound
mov
test
outsl
cmpsl
outsl
lcall
jle
jnp
add
test
je
mov
fsub
js
jg
cwtl
xchg
lods
sbb
add
mov
cltd
leave
mov
int3
divl
fbld
pop
mov
sysret
imul
test
mov
xchg
out
ret
imul
or
push
pop
adc
add
xor
stc
pop
push
lock
lret
cmp
sub
test
cmp
lock
xor
int3
loop
adc
ret
clc
or
in
mov
pop
and
nop
cmpsl
mov
sub
orb
subl
sub
ret
xchg
mov
jnp
fisttpl
cs
lds
inc
sbb
lea
fcoms
clc
mov
out
andl
out
fwait
test
push
daa
in
ret
mov
sbb
ficoms
inc
in
lret
into
xor
lahf
fcmovb
sarl
pop
push
ja
movsb
push
sbb
inc
adc
jbe
test
lcall
pop
nop
stc
movsl
inc
and
daa
mov
mov
sbb
rcll
inc
jno
push
sub
cs
fdivl
and
and
mov
xor
push
cmpsl
hlt
ret
scas
dec
rorb
dec
enter
pop
fcomps
jp
pop
stc
xchg
or
addl
mov
pop
fstpt
enter
ja
in
in
enter
js
out
xchg
call
arpl
sar
ss
and
push
adc
pop
sbb
subl
adc
push
or
pop
adc
cmp
xor
ja
sbb
and
imul
xchg
aad
inc
cmp
mov
cmpsl
mov
xchg
mov
stc
push
mov
mov
fistpll
jecxz
orl
cwtl
or
nop
pop
outsb
dec
or
sahf
xchg
sbb
fstpl
push
xchg
and
xorb
pop
or
test
andb
test
lahf
sub
mov
push
sub
aas
mov
push
cmpsb
test
mov
in
lahf
sbbb
bound
pop
or
sub
in
and
lods
sbbl
cs
jbe
mov
push
fcom
cmp
ds
jo
push
mov
out
jnp
sarb
sub
jl
pop
mov
mov
scas
and
aaa
sub
mov
rcll
sbb
movsl
scas
or
pop
or
sar
mov
pop
inc
scas
arpl
push
push
int
icebp
leave
adc
inc
jnp
adc
cmp
and
imul
xchg
fstpt
gs
pop
sub
pop
hlt
mov
xor
fcomps
movntq
out
sarl
inc
loop
lret
xchg
shll
cmp
cwtl
repz
adc
jl
ret
xchg
cltd
das
ss
mov
lods
ss
int
imul
jns
enter
inc
push
xor
cmc
rcrl
ljmp
cltd
mov
repnz
sbb
loopne
push
sbb
dec
lret
cmp
push
mov
inc
mov
or
cmp
mov
xchg
adcb
sbb
jno
inc
lret
in
inc
sbb
das
mov
mov
loope
cmpsb
aam
out
xchg
xchg
or
movsb
cmp
dec
sub
in
outsb
push
inc
mov
mov
stos
cltd
lds
xor
in
out
clc
cmpsb
mov
mov
adc
cwtl
inc
mov
mov
pop
rorl
rcl
mov
imul
pop
lock
int
push
call
jl
mov
xor
mov
mov
push
ret
shrb
fists
dec
inc
aaa
sbb
mov
add
xor
inc
cmpsl
sbb
shrl
xchg
lds
dec
and
add
aam
arpl
movsl
mov
pop
mov
dec
mov
inc
mov
mov
cs
inc
icebp
popa
xor
lock
adc
add
sbb
into
cmp
jb
xchg
dec
sub
sub
push
add
jne
arpl
sqrtps
bnd
aam
pop
adc
sbb
dec
mov
cmpsb
jno
push
mov
pop
jae
push
push
dec
push
and
cli
cmpsl
sub
cmpsl
add
rcl
push
rcl
xchg
or
in
sub
dec
xchg
xchg
or
pop
or
cmovnp
xor
aas
call
out
pop
lret
test
call
jo
stos
sub
mov
adc
adc
aas
and
in
fs
out
loop
push
je
lea
aad
loop
cwtl
adc
scas
rol
sarl
add
jg
insb
xor
push
mov
out
adc
mov
or
mov
pop
cmp
pop
add
into
aaa
fdivr
inc
xchg
std
icebp
inc
cltd
dec
cmp
or
xchg
adcl
mov
xchg
enter
inc
xor
and
and
xor
hlt
insl
mov
sub
push
jb
rcll
mov
xchg
mov
xchg
adc
push
in
jnp
add
xlat
xor
mov
loope
ficompl
fs
in
sbb
faddp
mov
aas
int3
clc
dec
ljmp
xchg
or
mov
dec
add
mov
lds
bound
icebp
loopne
dec
aas
jo
jl
inc
push
sub
pusha
adc
popf
out
insl
pop
subl
sbb
mov
sub
shll
xor
lret
lahf
addr16
shrb
sarb
inc
scas
dec
arpl
andl
cld
sbb
in
stos
into
push
adc
adc
fsubrl
lret
stos
movsb
xchg
ja
sbb
mov
es
cli
jbe
pop
scas
out
adc
repnz
adc
ret
int
pop
ds
or
sahf
sbb
mov
jle
jb
repnz
es
test
movsl
fnstsw
jo
cli
out
sbb
mov
sti
dec
lahf
lea
push
int3
ljmp
sub
xorl
cmp
inc
sub
movl
fbld
cli
movsl
out
and
dec
lret
pop
les
lea
sbb
push
inc
shrb
mov
sub
bound
sbb
mov
xorl
aas
cmpsl
in
inc
aaa
cmpsl
shl
out
adc
test
inc
add
jae
addl
push
in
or
or
xor
popf
and
jo
ljmp
cltd
xchg
adc
or
test
mov
pushf
mov
imul
sbb
test
push
mov
dec
adc
insb
push
dec
int3
incl
push
sti
movsb
sti
inc
cmp
and
dec
mov
or
push
int3
xchg
aas
push
push
lret
push
nopl
test
mov
mov
cmc
inc
sub
cmp
mov
pop
mov
mov
jnp
and
aaa
jmp
and
in
xchg
enter
mov
test
inc
jae
xchg
pop
gs
mov
mov
or
ficoms
ret
aas
mov
out
pop
mov
or
aam
xchg
std
jnp
clc
sub
jae
jae
movsb
jbe
lcall
outsl
fdivr
jge
xchg
iret
inc
inc
scas
enter
add
mov
and
push
arpl
rcrl
xchg
sbb
mov
pop
dec
orb
push
mov
push
fimuls
sub
ds
xor
inc
pop
sbb
out
inc
in
pop
cmovno
faddl
adc
out
movsb
push
cmpsb
add
leave
fstps
fildll
dec
and
mov
add
xchg
iret
aad
outsl
mov
je
push
cmpsb
addr16
cmp
fcmove
adc
xor
mov
lcall
ljmp
mov
adc
aas
push
pusha
ljmp
lahf
cmp
ss
sbb
scas
or
and
fs
stc
push
jnp
add
cmp
fxch
and
pop
dec
push
jmp
aaa
cmp
and
cmpsl
les
sbb
imul
pusha
xchg
mov
mov
jg
jne
inc
sti
out
xchg
sti
mov
gs
lcall
popa
jp
and
loope
dec
sarb
es
iret
add
pop
sbb
ret
int3
iret
ret
xchg
ror
leave
inc
aam
out
jp
push
inc
inc
mov
mov
jbe
xor
mov
sub
mov
push
cmp
and
pop
push
jmp
inc
xor
push
xchg
outsl
push
dec
ss
movsl
mov
imul
sbb
xchg
or
or
inc
dec
movsl
pop
cmc
outsl
adc
and
dec
cmpb
inc
xlat
fs
jb
loope
testl
xor
dec
sti
pop
sbb
xchg
int
addl
fxch
xlat
mov
movsb
call
xchg
addr16
dec
inc
fs
xchg
lea
in
inc
or
push
cmp
lods
dec
shlb
insl
cmp
or
and
or
mov
mov
mov
mov
repnz
sbb
lods
in
or
cmp
std
sub
dec
ret
les
out
icebp
cmc
jl
jp
sbb
and
int
push
out
lock
lds
loop
or
inc
sub
mov
inc
in
mov
mov
lods
std
dec
mov
in
std
pop
cli
scas
cmp
cld
fwait
lret
pop
mov
ss
dec
sbb
scas
pop
mov
or
and
jo
cmp
lock
leave
lods
sbb
mov
mov
push
loopne
sbbl
subl
or
ljmp
shlb
push
or
xchg
in
cmpl
xchg
in
push
stos
pushf
pop
movsl
cmc
shll
in
icebp
adc
push
je
andb
je
inc
add
in
data16
loopne
cli
push
fstpt
ljmp
rclb
push
mov
outsb
cli
dec
decl
imul
dec
stos
syscall
pop
pop
adc
pop
mov
add
iret
add
jae
stos
push
mov
out
adc
add
add
add
mov
add
add
in
add
add
aad
add
add
add
add
add
add
movsl
push
add
add
xchg
bound
add
add
xor
add
add
add
add
add
push
mov
xorl
add
add
add
shlb
add
add
mov
add
add
stos
add
ja
lcall
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
mov
orb
int3
insl
je
insl
add
add
add
mov
in
add
add
mov
add
add
and
add
add
mov
inc
add
das
into
addb
test
outsb
adc
cmp
sar
sbb
fisttps
scas
pop
popa
jae
lret
pop
imul
and
or
mov
loopne
add
add
inc
filds
mov
inc
lea
xor
mov
mov
sub
outsb
test
jmp
test
mov
addl
adc
mov
cmp
lcall
decl
lea
repz
sarb
insb
push
mov
add
add
pusha
and
adc
add
add
test
rolb
or
sub
push
push
adc
push
and
pushl
add
lea
adcl
stc
cld
clc
add
sbb
add
lock
insb
or
add
or
fidivrl
fcoms
pop
movsb
pusha
sub
clc
adc
push
xchg
dec
inc
inc
outsb
fldt
outsl
adc
dec
popa
inc
inc
inc
add
outsl
dec
clc
je
inc
popa
cmc
sbb
dec
imul
insb
cmp
lcall
gs
jne
inc
jb
xor
sub
arpl
movsl
or
add
add
add
add
inc
in
add
add
adc
add
dec
add
add
mov
add
add
test
add
add
add
add
and
add
pop
xlat
test
lcall
dec
popf
fsubrl
test
pop
jp
or
mov
out
ret
jg
sti
jno
ja
adc
sub
addr16
or
sbb
and
jnp
jl
or
adc
stc
mov
adc
lods
and
cmc
aad
or
push
sarb
add
sbb
inc
mov
inc
in
mov
jp
mov
jo
insb
aaa
mov
mov
loope
addr16
mov
repnz
cmp
xor
push
add
mov
jo
mov
pop
sub
adc
cwtl
sbb
lcall
jno
dec
push
xchg
or
lret
outsb
jb
adc
rorl
or
pop
fstl
sbb
jg
add
xlat
out
andl
jae
lahf
mov
sbb
xor
add
xor
mov
ljmp
add
adc
jbe
cli
sbb
ds
addr16
pop
push
mov
add
or
fldenv
jbe
hlt
js
mov
cmp
pop
jmp
lods
push
cld
inc
push
jmp
adc
stos
fstpt
lock
sahf
iret
iret
out
xlat
bound
xchg
cmpsb
xor
lods
cmc
or
adc
cmc
push
inc
std
mov
adc
jmp
and
je
dec
dec
and
insb
mov
daa
push
cmp
jl
dec
push
repz
std
mov
mov
or
pop
push
push
sarb
stos
lret
bound
jl
and
fildll
in
jge
mov
imulb
cltd
sub
xchg
jecxz
adc
or
jae
stc
shlb
aam
scas
cmp
fsubs
jecxz
loope
fdivr
stos
pop
sahf
test
adc
lret
add
xor
lret
rcrb
or
or
testb
xlat
into
mov
out
dec
xor
fisttps
imul
sub
xor
cmp
popf
outsl
mov
and
mov
jnp
stos
adc
mov
std
mov
dec
push
mov
and
mov
ljmp
sub
pop
jb
pop
mov
dec
sti
adc
movsl
int
push
sbb
movlps
int
jg
adcb
loop
push
adc
scas
fmul
rcl
in
cmp
cmp
and
sbb
inc
cmp
adc
adc
scas
add
add
in
mov
pop
fidivl
xchg
or
xchg
mov
lods
jl
outsl
sti
xchg
fwait
jns
mov
testl
je
cmp
xor
add
adc
jle
out
jmp
fwait
dec
mov
pop
jo
imul
jg
pop
push
rorl
lret
adc
xor
fbld
mov
pop
xchg
mov
imul
xor
inc
and
add
sti
sbb
test
ret
ljmp
fiadds
aad
pop
loop
xor
shlb
pop
or
jbe
add
mov
pop
mov
fnstcw
push
pop
scas
cmp
in
pop
pop
mov
dec
push
movsb
sbb
clc
sbb
xchg
push
mov
lret
jg
dec
adc
jne
enter
pop
gs
sbb
addr16
and
rcl
inc
mov
inc
lret
pop
outsb
mov
xor
xchg
sub
cwtl
add
loope,pt
hlt
jae
addr16
popa
jo
or
sbb
or
dec
fldcw
lret
sbb
sub
scas
mov
inc
mov
inc
int3
and
scas
fdivp
cmpsb
xchg
or
je
fisubl
in
inc
cmp
lcall
jmp
jno
out
adc
popa
cmp
subb
push
xor
sbb
dec
in
xchg
out
push
pop
repnz
test
jae
add
adcb
cmp
dec
xchg
in
xchg
repnz
adc
jl
cmp
in
ret
in
das
and
iret
mov
out
mov
xchg
pop
rorl
dec
push
inc
lcall
int3
std
insb
sbbb
ret
cmp
les
xor
mov
and
and
lret
ret
pop
js
sub
xchg
mov
sub
inc
pop
mov
mov
insb
xchg
dec
sbb
inc
push
imul
mulb
imul
hlt
dec
fcomp
push
outsl
outsb
push
jecxz
push
test
outsl
push
stos
push
push
jbe
pop
ss
add
or
popf
icebp
test
inc
leave
jecxz
push
imul
shll
shrl
dec
cmc
jae
stc
and
pop
movsb
push
aad
push
ficoml
mov
sarl
mov
dec
jmp
fdivs
inc
pop
fildll
cmpsb
jecxz
stc
test
insb
out
add
sbb
stos
push
mov
mov
out
xor
test
test
insb
sbb
xorb
pop
dec
outsl
mov
pop
jnp
lahf
dec
xchg
aaa
fadd
int3
add
sahf
jae
scas
sub
jl
pushf
daa
lock
les
iret
adc
inc
fldl
adc
xchg
xor
aad
sub
jmp
lds
dec
fbld
xchg
aam
pop
inc
jb
stos
add
call
or
mov
stos
sti
mov
popf
movsb
dec
cmp
ss
insb
add
mov
mov
xor
pop
inc
xor
adc
adc
dec
jmp
xor
arpl
adc
dec
cwtl
mov
and
push
mov
leave
daa
popa
xorb
dec
test
loope
sar
fwait
and
shr
ret
ret
mov
inc
mov
in
mov
push
sub
stos
sbb
add
loope
jl
xor
dec
roll
push
mov
and
adc
inc
mov
ljmp
lods
sub
mov
jno
mov
mov
push
cld
xlat
mov
sarl
adc
test
jb
mov
sti
lret
lea
test
cmc
xchg
mov
je
mov
mov
adc
xor
aam
dec
and
sbb
hlt
shll
aad
test
inc
shrl
mov
pop
pop
sub
xor
mov
xchg
js
xchg
or
ret
insb
inc
inc
sub
lret
dec
std
imul
fchs
cmpsl
jae
jecxz
pusha
dec
pop
int3
fwait
int
repnz
lcall
push
call
sbb
xchg
addr16
mov
rcrb
nop
xchg
adc
xorl
jmp
add
xor
inc
push
stos
fcompl
pusha
sub
hlt
pop
stos
sbb
dec
mov
test
cwtl
mov
fistl
cs
mov
or
push
push
jo
mov
mov
or
ret
orl
iret
or
jecxz
repnz
out
mov
icebp
movsl
sub
or
and
enter
rclb
sbb
test
dec
popa
insl
xchg
jno
mov
and
or
rolb
int3
test
inc
pop
insl
xchg
mov
xchg
iret
leave
pop
aas
xchg
xchg
mov
ror
add
or
int3
out
mov
icebp
dec
loop
and
shll
mov
sarb
mov
xchg
and
sti
jecxz
dec
rcrb
and
les
sub
pop
test
sub
push
sbb
xor
or
je
movsl
or
fimull
sub
sub
fcomi
std
or
jo
jmp
push
aam
inc
in
shl
js
and
jb
hlt
lret
mov
jae
iret
loop
xchg
icebp
not
xchg
sbb
mov
push
mov
sub
aaa
rclb
dec
xor
adc
jg
imul
ret
rorl
cmp
les
adc
leave
aas
sbb
and
mov
out
cwtl
jmp
inc
push
adc
test
lcall
pop
popa
jno,pn
fnstsw
add
popa
sbb
cltd
mov
push
jbe
add
fnstsw
inc
pop
mov
fimuls
insl
or
stos
test
dec
cmp
sbb
fwait
hlt
insb
repz
mov
cld
and
pshufd
arpl
sarb
je
subb
sub
mov
ss
cmp
or
cmpsb
das
and
add
dec
data16
adc
xor
sub
add
sub
sub
dec
sahf
aas
jg
enter
mov
negb
insl
xchg
mov
inc
mov
mov
push
stc
popf
sub
xchg
sti
push
lea
mov
lods
mov
mov
sbb
xchg
es
mov
test
sbb
cwtl
jmp
mov
test
pop
leave
dec
xchg
push
imul
repz
scas
and
pop
lods
push
idivb
and
sbb
sub
ret
loop
outsb
shrl
add
sbb
jge
mov
out
addr16
push
fwait
mov
clc
outsl
lods
push
cmp
mov
fidivl
mov
lret
shlb
lods
or
jo
push
cli
inc
fidivrl
or
lods
or
lret
enter
dec
mov
jb
ret
ficomps
sub
out
fildll
mov
addr16
pop
pop
movsb
jle
mov
int
mov
inc
pop
mov
and
out
dec
mov
ficompl
es
sub
jnp
mov
adc
pop
in
mov
sub
push
xchg
js
xor
xor
add
push
int
jmp
push
negb
js
out
ss
mov
popf
and
mov
dec
cmpsw
or
or
ficoml
inc
xchg
mov
and
add
scas
jo
outsl
sub
pop
mov
cmpsb
cmpsl
fcmovbe
xchg
aam
sub
faddl
js
ds
jnp
xchg
in
mov
subb
loopne
jno
push
bound
rcr
repz
mov
xor
push
movsl
cmpsb
fists
iret
sbb
xchg
cltd
pop
stos
dec
orl
test
xchg
shll
or
call
adc
jb
cmp
or
sub
mov
ljmp
out
cli
sub
jb
cld
mov
scas
fs
dec
jnp
mov
lahf
leave
pop
out
push
push
add
mov
push
stos
cltd
cmp
xor
out
stc
sub
aaa
sbb
sbb
or
mov
jo
mov
mov
xchg
cmp
scas
push
mov
inc
aaa
or
xchg
inc
jo
xor
leave
jno
jae
cltd
sahf
fucomip
out
js
in
mov
add
adc
inc
add
xchg
les
andl
shlb
xchg
test
subl
sub
sbb
hlt
xchg
push
out
imul
enter
sarb
xchg
cmc
mov
cltd
lock
ljmp
xchg
xor
sarb
mov
cmpsl
xchg
jmp
pop
dec
mov
dec
adc
ja
cmpl
outsb
mov
aaa
or
jbe
lds
cli
repnz
xchg
lods
int3
cmp
ss
mov
das
xchg
lcall
dec
and
xchg
jb
test
or
xlat
adc
ret
popf
mov
sti
lret
int3
addr16
mov
push
mov
test
cli
shl
mov
and
mov
jne
dec
scas
imul
decl
cmpsl
sub
add
shl
cmp
hlt
mov
fisubl
xchg
xor
rcrl
ds
insl
loop
hlt
jnp
xchg
mov
lods
lods
nop
push
sub
xchg
xor
xor
cld
int3
mov
push
jl
xlat
inc
mov
inc
jg
cs
mov
xor
push
ret
lds
jb
fadds
sub
jge
sahf
push
mov
inc
add
mov
scas
adc
pop
lds
stos
pop
cmp
cmp
iret
mov
xor
sbb
mov
popf
sbb
lods
sbb
mov
pop
inc
stos
enter
push
cmp
adc
dec
pop
pop
je
mov
mov
inc
jecxz
out
stos
loopne
aas
mov
and
scas
mov
add
mov
ds
xor
sbbb
repz
es
inc
fwait
mov
pusha
mov
sbb
push
ret
mov
stos
jp
mov
sbb
fnstenv
dec
lret
pop
shrl
aaa
shlb
mov
std
or
outsl
ret
loop
pop
xor
xor
or
push
inc
mov
orl
jne
loope
sbb
mov
sar
test
lea
push
loop
je
adc
push
aaa
sub
daa
cmp
sub
cmp
add
lock
cmpsl
sbb
mov
push
xor
imul
imul
cmp
cmp
xor
dec
or
add
dec
mov
daa
sbb
or
jbe
pop
ljmp
sbb
hlt
es
lret
mov
pushl
sbb
xchg
inc
subl
or
stc
stos
dec
cmp
out
out
lret
push
mov
pop
sub
xor
movsb
es
rclb
push
inc
pop
xlat
inc
int3
mov
daa
mov
sbb
cs
pusha
rcl
out
aad
push
repz
ljmp
mov
aad
out
push
pop
pop
sbb
stos
xor
xor
pop
fs
mov
xchg
shll
call
iret
mov
jl
push
jge
pop
sub
into
jno
pop
jbe
cmpsw
std
ss
mov
push
dec
push
jb
sti
imul
fwait
pop
mov
xchg
cld
ja
push
sbb
jecxz
pop
add
in
in
mov
cmc
fcmovnu
rorb
into
pusha
or
loop
test
push
cmp
cld
dec
lock
mov
rol
mov
push
fucom
es
sbb
mov
jae
or
add
xor
popf
call
push
mov
js
mov
xchg
mov
jnp
data16
and
dec
xchg
xor
out
iret
pop
mov
das
fsubs
fidivl
or
pop
hlt
std
cmp
add
mov
cmpsl
xor
mov
out
xor
jno
add
xchg
jno
and
xor
cltd
imul
pop
ds
adc
sbb
aad
lret
loop
testl
inc
dec
mov
lcall
add
cmpsl
in
adc
jae
aas
fwait
push
daa
sub
dec
out
pop
and
test
xchg
cmpsl
pop
push
call
lods
sbb
pop
sub
movsb
sub
inc
jnp
xchg
daa
mov
movsl
sbb
mov
add
test
gs
mov
adc
xchg
fstps
aam
movsl
mov
push
int3
pop
outsb
movsb
out
inc
js
lods
add
stos
jne
insb
push
jbe
mov
out
dec
mov
les
xchg
push
outsl
int3
or
mov
push
cmp
loop
sbb
mov
lods
cmpb
jne
sub
cmp
push
pop
pop
adc
xor
or
dec
shrb
iret
pop
bswap
xlat
mov
stc
jle
and
mov
mov
je
xchg
out
inc
cmc
adc
mov
cmpsl
idivb
dec
mov
cld
sub
mov
sahf
cmp
int
rclb
mov
jne
aaa
out
xchg
xor
and
add
add
jg
push
lea
mov
pop
js
mov
scas
adc
sub
ljmp
fwait
mov
and
aam
pop
and
insl
fstl
lods
xor
add
mov
push
xchg
scas
mov
xor
fwait
mov
mov
mov
jno
rcl
xor
inc
lock
cmp
push
fs
adc
push
pop
pop
rorl
pop
xor
adc
or
or
scas
add
lret
mov
fcomip
xlat
xchg
xorb
xor
sbb
ret
push
mov
lret
dec
dec
or
daa
mov
push
lret
xor
jns
ljmp
es
sar
jo
mov
imul
mov
rcr
sub
push
xchg
int
pop
sbb
sub
xor
mov
das
push
adc
mov
test
push
dec
aaa
dec
xor
inc
xchg
xchg
xchg
jno
dec
js
jmp
test
sub
pop
in
mov
inc
shlb
mov
cmpsb
fstps
push
sbb
adc
jbe
or
xlat
jne
dec
jnp
pop
lcall
sbb
pop
add
into
mov
push
and
vmovaps
mov
xlat
mov
ret
and
sbb
cwtl
xor
cld
jo
push
das
rcrl
outsl
in
mov
mov
shll
pop
les
mov
repnz
mov
xlat
lods
cmp
leave
mov
divl
inc
outsl
mov
jmp
mulb
sahf
pop
xor
cmp
cmc
imul
jl
shll
sarl
pop
imul
stos
daa
cwtl
clc
sub
add
pushf
sbb
jns
xor
shrl
lcall
stos
stc
jmp
xchg
lea
push
icebp
dec
xchg
pusha
int3
mov
fdivrp
lret
mov
in
mov
aaa
or
mov
dec
ret
mov
test
jnp
inc
cmpsl
movsb
jge
add
pop
add
inc
cwtl
jle
pushf
inc
or
int
movsb
test
and
sub
fs
clc
mov
mov
sti
jle
inc
adcb
push
jle
xor
ljmp
mov
jp
xchg
adc
insb
imul
mov
xor
sub
push
repnz
push
lret
cmp
jp
cmp
into
jo
push
push
mov
push
cmpb
std
xor
scas
inc
mov
scas
mov
movsl
jno
jae
push
push
data16
popf
loope
rorb
cmp
aaa
fwait
pop
xchg
and
sbb
jns
adc
imul
push
sbb
pop
xchg
jo
mov
jnp
sub
add
fistl
push
mov
rclb
fcmovne
push
jge
mov
inc
cmp
jne
push
out
jmp
pop
or
and
xchg
inc
xchg
push
ucomiss
ja
cwtl
hlt
pop
andl
inc
xchg
daa
jbe
push
jb
and
add
addl
rcr
jge
and
pop
dec
mov
inc
stos
imulb
insb
cli
push
incb
aam
scas
ret
mov
ret
loop
jge
popa
jns
dec
sbb
and
sub
push
sub
stc
sbb
mov
inc
shlb
das
int3
addr16
jb
mov
ret
pusha
not
mov
sub
mov
jne
jmp
mov
mov
push
stos
popf
dec
fidivrs
jge
xchg
sub
sub
push
and
pop
or
enter
xor
push
mov
hlt
into
ret
lret
inc
inc
imul
cmp
mov
icebp
add
jg
mov
add
xlat
mov
sub
imul
sbb
scas
aam
jmp
fnstcw
fsts
loop
mov
lret
rcl
and
jmp
dec
jecxz
lea
std
aaa
loopne
mov
imul
cld
sbb
and
mov
xchg
xchg
ljmp
fcompl
dec
pop
fisubrs
popf
call
push
mov
mov
cli
mov
dec
jns
mov
mov
push
aad
push
nop
mov
mov
shlb
mov
jbe
pop
mov
sub
and
vandps
pop
mov
imul
scas
xchg
and
xor
out
sahf
xor
sbb
icebp
mov
xor
fwait
push
loope
or
mov
adc
std
fistps
shrl
fistl
hlt
adc
out
xlat
cmc
addr16
into
or
fdivrl
iret
mov
push
aam
jge
movsb
mov
xor
xor
sti
ficomps
jge
mov
pop
cmp
test
push
data16
repnz
push
xchg
cmp
ret
inc
jle
dec
push
pop
movsb
imul
push
ss
xchg
lcall
lea
and
sahf
inc
mov
ficompl
cmpsl
aam
sbb
fld
mov
pusha
outsl
imulb
fcompl
or
mov
pop
add
xor
and
js
or
mov
stc
or
scas
cli
jle
es
push
push
test
aad
sub
lods
imul
cmp
jb
mov
push
adc
cmp
enter
into
cmp
popa
out
sub
repnz
push
sbb
or
push
push
enter
aaa
call
push
adc
mov
xor
sahf
xchg
iret
lret
in
aas
cltd
pop
inc
mov
and
lret
lds
push
xlat
cmp
int3
mov
daa
sbb
add
mov
data16
xchg
fdivrs
loop
in
dec
push
pop
mov
xlat
jp
out
and
mov
inc
mov
sub
inc
loope
fucomp
mov
mov
ja
insl
gs
cld
sub
xlat
adc
add
pop
xor
inc
adc
pop
cwtl
pusha
adc
pop
movb
stos
rcrl
fsubrs
int
into
fucom
cld
jge
adc
mov
and
jae
pop
cmc
xor
cmp
jnp
jb
adc
push
out
in
enter
subl
shl
test
pop
jo
push
inc
push
pop
jnp
push
xor
sub
clc
mov
jge
xchg
dec
mov
xor
in
pop
addr16
push
daa
movsw
shll
cmpsb
sbb
inc
sub
pop
inc
mov
mov
popa
mov
push
sub
mov
in
int3
into
sub
dec
mov
call
jne
shrl
push
ret
mov
mov
pop
ja
push
and
cmp
cmpsl
je
pop
lods
int3
out
in
sbb
dec
outsl
sub
rcll
cmp
inc
cmp
iret
pop
mov
hlt
push
scas
stc
or
stos
xchg
cmp
aaa
out
jne
loopne
ljmp
stc
aad
fcomip
das
cs
cmpsl
mov
movsb
pop
shrb
add
cmp
fwait
cmp
sub
mov
sbb
sahf
dec
aam
push
pop
sar
pop
and
xor
xor
pop
add
fcmove
out
mov
push
clc
jb
sub
xchg
in
sbb
faddl
mov
push
bound
out
and
adc
pop
jmp
mov
xchg
xor
enter
jb
xor
cmp
aas
xor
movsl
scas
clc
out
loop
je
mov
shr
in
mov
cs
and
arpl
shrl
push
adc
pop
hlt
add
mov
out
stos
push
adc
sub
stos
shl
fnsave
pop
dec
cmp
das
jmp
mov
loopne
lods
daa
ja
dec
mov
lods
ds
cmp
lods
pop
sub
xchg
mov
addb
cmp
inc
ret
mov
es
arpl
lret
pop
mov
aas
mov
mov
sub
xchg
ljmp
push
pushf
push
insb
add
mov
xor
push
and
cli
mov
int3
in
mov
inc
xchg
jbe
les
pusha
and
jb
jecxz
push
repnz
cli
ret
cli
loopne
xchg
xchg
aad
clc
sbb
jecxz
pop
mov
pushf
js
div
ficoms
movsb
add
ds
fcompl
cmp
mov
sub
ret
add
jl
pop
pop
arpl
dec
mov
mov
adc
arpl
add
mov
test
dec
xor
mov
mov
daa
jle
mov
jmp
test
gs
scas
xchg
outsl
push
dec
cmp
xor
dec
push
aam
and
xchg
xor
or
add
in
stos
cmp
lock
jp
lahf
stc
or
test
add
and
and
data16
cld
jge
pusha
jbe
lcall
mov
mov
outsl
push
pop
xor
and
and
mov
mov
leave
popf
inc
lret
cmp
fcomi
jmp
xor
into
shufps
jnp
dec
mov
int
sbb
std
movsl
test
cld
pusha
shlb
out
jns
push
and
jb
idivl
aad
dec
adc
cmpsl
jbe
out
dec
or
mov
add
add
test
add
add
add
add
and
add
pop
add
add
lds
add
xchg
cmp
add
add
add
add
xor
add
dec
lds
add
add
add
add
or
inc
in
add
sbb
adc
dec
mov
sub
mov
adc
add
ljmp
ja
lods
jae
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
call
movzbl
push
pop
cmp
sbb
and
add
cmpl
mov
mov
je
cmp
je
push
lea
push
push
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
push
mov
call
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
or
mov
leave
ret
push
mov
mov
mov
mov
push
add
mov
mov
add
mov
mov
mov
mov
call
mov
mov
mov
add
push
pushl
call
mov
xor
push
push
mov
push
push
mov
push
push
push
push
push
pushl
pushl
push
call
mov
mov
movzbl
movzbl
sub
je
call
call
mov
add
inc
cmp
mov
jne
movzbl
movzbl
sub
jne
pushl
pushl
call
pushl
call
push
pop
pop
pop
ret
push
push
mov
mov
push
push
push
push
push
pushl
call
pushl
mov
call
push
push
push
push
push
push
push
push
call
mov
push
push
pushl
call
push
mov
pushl
call
pushl
mov
call
push
push
push
push
push
mov
call
push
push
push
push
push
call
pushl
call
mov
call
pushl
call
push
mov
call
push
push
push
mov
call
add
push
push
call
mov
push
call
mov
push
push
push
push
call
push
push
push
push
push
pushl
call
pushl
call
push
pop
pop
pop
jmp
add
mov
shlb
mov
xor
in
ret
pusha
add
xor
add
add
add
push
add
add
testb
and
repnz
jo
add
cmpsb
add
lcall
inc
or
rolb
add
jb
push
arpl
dec
jb
fs
aam
inc
jno
jb
inc
stc
mov
shll
dec
inc
shr
mov
or
incl
mov
mov
cmc
les
dec
or
movsb
push
out
cs
ud0
pop
add
decb
push
lcall
lock
mov
pushl
push
inc
xrelease
nop
add
je
andl
mov
pushl
ret
sbb
inc
std
push
cmp
fnstenv
or
add
push
cld
adc
cld
push
xchg
loopne
rorb
and
jg
jne
sar
lahf
shl
jo
loope
push
fcoms
out
push
push
mov
and
je
mov
add
add
add
xchg
cmp
insb
add
ret
push
inc
add
fsubl
push
movsl
dec
lods
gs
inc
inc
push
add
loope
insb
inc
gs
fwait
outsl
inc
add
imul
jae
insb
inc
subb
add
gs
mov
inc
bound
xchg
inc
jb
shlb
jecxz
loopne
insb
add
add
add
add
mov
add
add
add
pusha
add
xor
add
add
add
push
add
adc
add
add
add
jo
add
add
out
fidivl
and
test
fildl
mov
adc
loopne
ja
int3
pushf
sbb
rorl
mov
jg
imul
pop
js
mov
or
test
fimull
sub
jbe
xchg
mov
test
adcb
lods
aad
insl
addr16
shrl
insl
dec
lock
jmp
sbb
push
cli
pop
and
arpl
pop
jnp
ret
mov
mov
cmp
movsb
mov
cmpsb
ror
jl
push
jecxz
sbb
jmp
hlt
pop
cmp
das
iret
or
ds
fs
push
push
mov
xor
leave
mov
cmpsb
hlt
sbb
push
ss
dec
jge
fwait
jo
not
bound
sbb
clc
call
sti
faddp
outsl
xor
jno
mov
cld
mov
push
cmc
dec
loope
fsubp
outsb
inc
xchg
lock
sbb
and
xor
fcmovnbe
jne
insl
gs
dec
push
rorb
xlat
dec
lahf
in
inc
sbb
aad
mov
or
pop
rorl
push
add
jg
test
mov
aam
mov
test
inc
xor
inc
fwait
out
pusha
daa
enter
sti
lea
xor
xor
loop
cs
fistpl
push
mov
mov
stos
adc
inc
xchg
lods
and
sbb
adc
imul
mov
int3
or
std
lds
dec
xchg
add
push
hlt
lret
ret
ret
test
and
lods
push
aas
fld1
loop
inc
push
mov
add
popa
js
test
xchg
nop
sbb
pop
and
test
pop
push
ljmp
outsl
das
rcl
insl
movq
addr16
jne
inc
sub
les
lea
xchg
xchg
dec
mov
sbb
es
jg
out
je
mov
ficomps
xchg
btc
jbe
and
out
mov
or
pop
inc
dec
fbld
dec
adc
in
sbb
stc
mov
inc
pusha
popf
mov
pop
notl
bnd
lods
jp
lock
in
xchg
and
js
mov
or
cs
jmp
push
lcall
rorb
clc
sbb
stos
jp
clc
or
int
stc
test
pop
pop
or
push
in
nop
cmpsb
push
jbe
xor
jmp
xchg
scas
mov
in
mov
and
jno
fistpll
inc
xchg
inc
shrl
pop
pop
or
fsubl
mov
sub
mov
jp
stc
in
mov
mov
addr16
mov
das
or
mov
and
xor
imull
jle
cmc
jg
xlat
pop
push
arpl
jmp
inc
cmp
mov
shlb
leave
push
pop
or
and
in
into
les
cmp
lods
imul
mov
in
mov
movsl
sbb
imul
mov
pusha
mov
ficoml
push
mov
outsl
lret
les
hlt
pop
outsb
jge
addr16
push
out
xchg
push
jae
lods
aaa
mov
movsl
adc
pop
and
aaa
inc
cmpsl
dec
mov
sub
in
ljmp
nop
in
fwait
call
xlat
daa
nop
arpl
clc
adc
mov
xchg
add
adc
cltd
and
fildll
cmp
sti
mov
push
mov
sbb
imul
mov
fsubl
in
xchg
movsl
aas
pop
sbb
test
mov
and
movb
push
nop
xchg
jb
mov
nop
aas
ret
pop
call
lret
sub
shrl
arpl
imul
ds
enter
lcall
jl
mov
push
lret
add
icebp
stos
mov
arpl
icebp
fnstcw
jbe
outsb
test
fistpll
scas
lods
xchg
fwait
lea
ficoms
adc
stos
int
jecxz
sbb
sbb
add
push
push
stc
push
mov
pop
shlb
mov
sbb
xor
insb
iret
jae
jno
insb
insl
cmovae
jae
loop
mov
inc
mov
adc
stc
int
sub
inc
pop
cmp
bound
lahf
mov
xchg
sahf
or
jg
add
js
jno
daa
inc
fisttpll
and
scas
add
sub
jb
xor
mov
loopne
test
in
and
push
xchg
sub
aad
and
or
or
sub
cld
dec
out
inc
ret
cmp
loopne
dec
outsl
cmpsl
mov
mov
xorl
jnp
xor
pop
mov
push
xor
in
je
insb
sub
gs
stos
xlat
pop
xchg
xchg
outsb
dec
outsb
mov
stc
inc
clc
in
daa
xor
xchg
push
inc
lock
ficoml
pop
cltd
sub
xchg
out
sbb
inc
je
leave
adc
push
sti
pop
leave
mov
dec
popa
jg
loope
or
inc
insb
mov
xor
sbb
lods
mov
and
repz
push
pop
xor
stos
push
and
cmp
scas
call
push
arpl
fdivrs
sub
idivb
clc
aam
jbe
jae
cmp
push
push
movsl
jo
adc
out
jb
ds
xchg
repnz
das
loope
xchg
inc
mov
cmp
sbb
lcall
dec
pop
pop
pop
shrl
out
loope
mov
ficoml
lds
test
mov
xchg
mov
push
dec
pop
jb
xor
fsts
mov
pushf
mov
rcrb
dec
ja
or
clc
arpl
adc
outsl
dec
call
and
inc
add
mov
lods
pavgw
cwtl
push
mov
jmp
call
in
idivb
ret
sbb
pop
jecxz
movsb
xlat
loopne
int
cmc
mov
push
rolb
jp
jo
jo
and
fs
sbb
rcrl
jo
xsavec
inc
inc
shlb
fs
hlt
cltd
xor
pop
cmp
dec
xchg
push
pop
lret
inc
leave
lods
outsb
or
pop
sahf
mov
arpl
das
shll
rcll
mov
mov
mov
cld
int
jb
daa
dec
dec
adc
enter
lock
outsb
add
inc
bound
xchg
fcomps
je
cmp
out
ret
sub
push
daa
repnz
jno
push
repz
shlb
xor
in
movsl
cmp
rcrb
mov
mov
cmp
xor
andb
cmp
xchg
cmp
xchg
popa
adc
xchg
rorb
daa
xor
stc
mov
clc
mov
call
xor
rcr
sub
outsb
sub
xor
popf
dec
rcr
xlat
or
xor
jge
cmpsl
lret
aad
push
cwtl
xchg
sub
dec
or
mov
xchg
stos
cltd
je
stos
xor
addr16
push
cltd
jp
aaa
outsb
fcmovnb
jnp
and
and
sub
sahf
cwtl
push
sub
mov
pop
adc
mov
jae
add
pop
xor
ljmp
sbbb
fstps
fisttps
sub
adc
stc
mov
mov
dec
ljmp
daa
cmp
les
xchg
popf
paddd
push
je
data16
iret
or
cmpsb
shrl
adc
sbb
dec
mov
repz
adc
mov
xchg
mov
push
lcall
sbb
test
and
enter
sbb
jle
cmp
mov
cmp
push
ljmp
or
mov
je
inc
inc
xor
mov
test
push
inc
stos
or
mov
mul
inc
notl
ja
insb
xchg
mov
fwait
push
sub
rorb
stos
sub
loop
sbb
ficoml
lock
les
add
popf
pop
mov
mov
xor
out
pop
add
gs
fiadds
mov
xchg
std
rcll
in
fildl
jnp
cmp
and
adc
call
add
adc
push
jno
mov
xchg
inc
test
xor
jne
test
sub
divl
push
mov
dec
xor
sub
inc
fcmovne
push
out
lret
push
rclb
hlt
sub
xor
pop
or
shlb
int
gs
cmp
cmpsb
jle
or
lcall
jge
aaa
xchg
lret
mov
aaa
nop
icebp
icebp
imul
add
jge
sbbb
pop
sbb
sub
inc
or
xor
push
stos
lds
jg
or
stos
lahf
gs
scas
cld
in
iret
jg
outsl
cmp
sub
or
mov
adc
mov
in
xchg
ret
fcoms
mov
sub
adc
or
jns
into
cmc
inc
in
ret
jle
les
add
test
xchg
fwait
repnz
dec
push
cmp
sbb
dec
repnz
fsubp
pusha
mov
pop
pop
stos
test
xor
pop
test
adc
xchg
fmuls
cmp
les
adc
adc
into
mov
and
mov
rcr
mov
pop
mull
pop
mov
adc
adc
dec
xchg
scas
gs
add
xor
aas
int3
pop
movsb
rcll
pop
cmc
dec
pop
inc
inc
fstps
into
inc
sbb
pushf
mov
and
mov
mov
les
fwait
test
or
sahf
xor
and
sbb
adc
cmc
push
shrb
ds
popf
test
xor
and
sbb
sbb
push
jb
sahf
and
push
outsb
inc
or
ds
sub
in
mov
dec
xchg
mov
or
xchg
xchg
test
inc
pop
jmp
les
jge
outsl
or
nop
daa
mulb
xchg
pop
shl
jb
je
mov
stos
jmp
insl
and
lea
fnstcw
imul
xor
gs
or
lds
mov
jge
nop
sbb
and
push
xchg
cwtl
push
imul
xor
cmpsl
ja
sub
lret
movsl
mov
and
jmp
int
clc
cltd
jbe
xor
xchg
mov
lret
loop
in
add
call
mov
mov
fbld
test
fimull
mov
mov
push
aad
push
inc
fwait
xor
into
rcr
cltd
xchg
lret
mov
pusha
rorl
mov
adc
xor
mov
in
mov
and
sbb
mov
sub
xor
addr16
repz
or
or
jno
mov
adc
jmp
and
stos
sbb
pop
movntps
das
push
mov
cs
inc
out
sub
fistpl
out
movsb
out
mov
test
sbb
fidivrl
pop
and
xchg
jno
mov
mov
aad
aad
mov
jb
jg
mov
lods
js
adc
mov
fadds
mov
sbb
cld
loope
cmpsl
and
aas
adc
loop
enter
sbb
das
or
jbe
mov
or
shl
jb
pop
xor
shrb
stos
call
push
push
outsl
xlat
push
mov
insl
mov
dec
pop
lret
fbstp
push
pop
popf
in
push
sub
das
bound
jecxz
mov
pushl
adc
sub
mulb
push
iret
pusha
sbbl
or
cmp
cld
xchg
paddsw
movsb
sahf
lcall
sbb
pushf
jmp
mov
rcrl
insl
push
repnz
push
cld
push
push
mov
jno
int3
mov
dec
cmpsb
adc
lods
cwtl
xor
xor
aad
adc
stos
xor
dec
nop
push
lds
xchg
aad
lods
int3
cmpsb
cmpl
dec
push
dec
mov
inc
icebp
pop
pop
dec
lea
xchg
mov
in
loope
int3
rcrb
ret
sub
ljmp
jmp
or
mov
mov
or
arpl
dec
push
push
xchg
dec
clc
pop
leave
add
sub
jle
push
inc
ja
mov
mull
out
jno
mov
shrl
fucom
fs
aam
pop
adc
imul
and
jbe
jo
mov
aas
mov
fs
mov
add
jmp
rep
test
ja
xchg
fldl
aam
xor
stos
cmp
mov
push
adcl
sub
mov
test
sarl
pop
insl
xor
pop
cmp
loope
or
jmp
test
jb
dec
js
mov
inc
inc
dec
pop
jmp
push
lea
arpl
outsb
ss
sub
dec
test
aaa
sti
out
push
sbb
sbb
loope
jecxz
fstpl
scas
cmp
fcoml
scas
insb
jo
xchg
push
daa
rolb
jle
xchg
xchg
fcomp
adc
jnp
mov
xchg
std
je,pn
sarl
sub
mov
mov
pusha
bound
aad
test
adc
and
into
imul
ret
push
sub
pop
jnp
in
int3
sub
inc
lret
add
or
stos
fs
insl
mov
cmpl
mov
roll
jae
cmc
or
sbb
cmp
pusha
push
ret
outsb
jne
jb
xor
daa
insb
les
clc
pop
loopne
push
imul
lods
and
xor
xor
sbb
lcall
lods
push
shlb
mov
loope
xchg
fnstsw
dec
mov
idiv
adc
aam
aam
imul
jle
dec
xchg
or
hlt
rorb
jl
fcoms
mov
pusha
jb
lds
scas
dec
dec
outsl
insb
sbb
xor
mov
sti
push
mov
jbe
insl
sub
push
pop
stos
lahf
lods
fstpl
popf
push
cwtl
mov
mov
or
cmp
iret
leave
jo
sub
outsl
jb
pop
sarb
push
dec
pop
int
movsl
pop
sbb
cmp
orb
or
sti
lret
xchg
mov
fistpl
lds
repz
testb
repnz
aam
push
nop
loopne
jmp
push
es
in
popf
movsb
push
sbb
loopne
push
xchg
ljmp
mov
sub
jmp
pushf
ds
mov
das
orl
into
stc
mov
shll
int3
sub
pop
mov
pop
cld
xor
cld
pop
sti
dec
fimuls
scas
pop
mov
outsb
roll
add
lea
push
mov
into
xchg
cmp
icebp
sub
sbb
add
cmpl
std
mov
xor
popf
inc
pop
loopne
out
loopne
lcall
sbb
and
test
mov
jne
and
add
insl
or
cmp
cmp
bound
mov
and
icebp
dec
mov
test
aam
push
ja
mov
out
push
jns
push
test
fadds
add
test
loope
xchg
loope
adc
lahf
mov
mov
aad
sbb
or
repz
or
xchg
cwtl
loopne
dec
fidivl
jl
sub
inc
lea
aam
adc
mov
xchg
push
mov
jl
mov
out
inc
pop
gs
xchg
pop
enter
dec
jge
rcrb
xor
stos
dec
mov
test
subb
call
xchg
inc
mov
adcb
cmp
add
test
jae
add
cld
mull
inc
mov
pop
lret
imul
cmp
cwtl
notl
or
xor
out
inc
mov
in
rorl
pusha
gs
stc
add
xabort
sub
push
gs
orl
in
rol
mov
fldl
ror
mov
out
inc
mov
adc
pop
mov
fucomi
fistps
mov
mov
hlt
jns
mov
shlb
sub
mov
pop
xchg
jno
inc
lods
add
fimuls
cmp
push
xchg
pop
jae
lcall
and
sbb
sbb
pop
clc
fcompl
cwtl
push
xchg
jp
lahf
push
sbb
ret
ljmp
scas
mov
scas
sti
popf
jae
stos
daa
mov
xor
mov
cmp
inc
cmpsl
mov
mov
shrb
repnz
dec
mov
int3
aas
repnz
out
fnsave
rclb
out
sahf
cmc
ja
jg
cld
ds
and
and
xchg
lock
mov
push
dec
std
js
ds
xlat
pusha
push
mov
icebp
lret
lock
sub
xchg
fisttpll
andl
dec
jbe
scas
sbb
xchg
xacquire
clc
mov
fcmovbe
lret
sbb
lods
push
out
into
pop
hlt
cli
mov
or
pop
mov
xor
hlt
incb
jno
jp
push
daa
add
add
cs
call
fcomps
cmp
fadd
pop
fbld
inc
mov
cmpsl
dec
fadd
mov
test
mov
mov
jo
mov
mov
hlt
xchg
loopne
movsb
out
sahf
icebp
pop
loope
cwtl
aaa
scas
and
into
ljmp
adc
loopne
xor
icebp
sub
out
xchg
mov
jp
cmc
mov
out
mov
jg
rclb
pop
adc
push
mov
out
mov
aas
lret
cmp
loop
jge
fisubl
sbbb
test
mov
rorb
lret
xchg
lods
cmc
or
jns
and
fstpt
imul
sbb
xchg
or
pop
or
gs
mov
mov
out
pop
jmp
pop
lahf
push
cmp
flds
mov
adc
xor
cmpsl
psubusw
mov
push
notl
fisubrl
pop
call
or
xchg
popf
or
dec
sbb
shlb
sub
out
in
jle
ror
adc
lods
push
xor
cwtl
repz
addl
jbe
popa
jbe
jmp
adc
pop
call
xchg
sbb
iret
jnp
mov
lock
fwait
loop
pop
inc
mov
in
jae
inc
sbb
cmpb
push
icebp
pop
aam
insb
repz
scas
xchg
and
push
ret
or
out
or
icebp
in
cmp
mov
and
hlt
and
repz
push
shrb
sbb
ret
ret
or
push
push
xor
push
adc
pop
fwait
fs
sub
dec
dec
aam
outsl
lock
push
xchg
cmp
int3
mov
aam
cmp
jl
sbb
xor
popa
or
mov
add
jmp
cmpsb
inc
enter
stos
test
in
sub
nop
dec
divl
leave
adc
mov
mov
jl
gs
adc
in
loope
arpl
notb
lret
jmp
aas
cmp
fistpll
xor
loopne
into
pop
jno
sbb
mov
sub
scas
xlat
test
movsl
sbb
mov
mov
ret
xor
mov
pusha
hlt
mov
psubusw
cmp
sahf
testb
es
ds
stos
pop
push
jnp
jl
jge
pop
inc
add
sbb
mov
add
mov
pop
pop
das
pop
mov
xchg
rolb
lret
arpl
inc
mov
mov
mov
stos
jp
inc
cltd
cmpb
imul
int3
inc
xchg
mov
or
add
movsb
psubd
or
inc
rorb
jns
in
cmp
test
dec
xor
mov
fwait
in
mov
lea
ret
cmpb
jbe
xchg
xor
jne
mov
or
hlt
or
mov
or
mov
out
ds
in
mov
and
add
movsl
jle
nop
inc
cmp
loope
push
rol
xchg
pop
test
call
xchg
mov
shl
cs
in
jnp
ljmp
popf
push
nop
mov
lods
or
lods
sbbl
cltd
mov
mov
xlat
mov
pusha
and
push
dec
les
sub
sbb
mov
cmc
test
jmp
jl
sbb
outsl
jmp
cmp
loopne
leave
scas
stos
ficoml
imulb
dec
lcall
xor
cltd
sar
lds
lock
pop
inc
mov
xchg
jno
pop
push
add
scas
mov
jmp
cs
sub
sub
cs
loope
arpl
call
mov
hlt
mov
imul
and
gs
pop
mov
ljmp
loopne
pop
addr16
xor
insb
jno
mov
adc
mov
dec
and
gs
ja
sbb
movsl
test
lods
jne
outsl
pop
sbb
xchg
or
mov
sbb
fnstcw
pop
pushf
popa
jmp
arpl
and
andnps
jg
jl
fdivr
decb
jbe
xchg
cmp
sti
ret
add
loopne
jp
xchg
ret
sub
fstl
nop
repnz
cmp
jl
xor
sbb
stos
mov
cmc
ljmp
ficoml
test
divb
cs
loopne
pop
mov
in
enter
mov
cli
add
adc
pop
es
nop
sub
test
out
pop
jecxz
loope
dec
mov
test
loope
and
jp
pop
aaa
sbb
sti
xorb
sbb
call
divb
orb
cmpsb
cmp
out
lahf
xorb
dec
sub
cmp
jge
adc
adcl
jle
push
scas
ret
jnp
push
jnp
xor
adc
adc
inc
leave
xlat
mov
popf
adc
shrl
movsb
aad
ljmp
mov
repnz
jmp
and
mov
jp
xchg
and
jns
das
fcoms
stos
xchg
mov
ss
cmpsb
call
sub
fstpt
mov
ds
or
mov
inc
test
pushf
test
add
inc
pop
bound
jnp
add
js
mov
shll
lods
mov
scas
mov
cwtl
cmc
jle
aaa
and
dec
cmp
mov
insb
adc
sub
adc
leave
cmpsb
lret
dec
test
andl
or
imul
mov
jmp
pop
pop
push
sarl
and
dec
ret
aas
xlat
and
andb
cmpsl
jbe
cmc
pushf
in
popf
stos
lret
pop
lods
test
fnsave
insb
out
pop
mov
push
cmp
dec
pusha
sub
dec
mov
sub
push
mov
jmp
loope
mov
jg
sti
mov
sbb
jne
sbb
rcrl
jecxz
mov
pop
jmp
push
inc
jl
xor
pop
movsl
mov
test
mov
jae
sbb
frstor
outsb
nop
test
jmp
pop
pop
push
add
mov
inc
jno
inc
pop
xchg
push
ljmp
cmpsb
out
scas
shll
adc
or
lret
pop
test
mov
mov
nop
out
inc
xchg
xchg
cltd
cmp
pop
pop
int
adc
cmpsl
sarl
ficoms
aas
pushf
out
les
push
sub
ja
xor
mov
push
insl
pop
inc
or
pop
jge
cltd
inc
lret
inc
mov
loopne
shlb
scas
in
inc
fldenv
jle
stc
lods
mov
xor
cmpsl
icebp
outsl
cmpsl
aas
xchg
hlt
pop
movsb
cld
ja
sbb
mov
leave
add
call
push
ret
mov
cmc
mov
in
push
loopne
cmp
pop
jge
lcall
add
dec
andb
push
pop
xchg
je
jae
xor
insb
mov
jl
test
sub
leave
clc
out
ficomps
lcall
mov
fisubs
mov
cmp
pop
adc
push
or
jns
in
add
adc
adc
fidivrl
insl
ja
pusha
rolb
sub
leave
cmc
repnz
xor
jo
fdivrs
cs
stc
sbb
xlat
lret
pop
mov
sbb
es
scas
repz
lret
cli
cmp
shl
test
jmp
cmp
mov
inc
cmp
pop
ljmp
mov
clc
dec
out
out
mov
xchg
cmp
sbb
sahf
mov
cmp
inc
xchg
xor
imul
scas
outsl
mov
bound
add
add
push
add
adc
add
add
add
jo
add
add
addb
adc
add
add
inc
add
loopne
add
add
add
inc
add
rolb
add
movsb
add
jb
add
add
mov
add
add
or
test
in
in
push
add
add
rolb
push
rolb
add
ja
jp
decl
js
int3
int3
int3
int3
int3
int3
int3
int3
int3
add
add
add
pusha
orl
adc
shlb
add
nop
adc
add
adc
insb
jo
add
add
add
rclb
popa
add
loopne
insb
add
add
repnz
jno
fadds
push
adc
add
add
and
add
and
push
popa
imul
outsb
pop
jae
and
pusha
xchg
add
inc
jecxz
mov
leave
lea
aad
adc
add
das
push
cld
mov
add
or
movsb
daa
incl
add
mov
push
incb
inc
dec
xchg
push
push
leave
sbb
orb
xor
push
add
adc
cmp
fcoml
in
aaa
jl
add
lcall
incb
incl
aas
out
loopne
nop
adc
add
add
and
outsb
cld
mov
and
das
rorb
inc
in
push
add
clc
mov
incl
incb
adc
decl
xor
push
mov
xchg
and
add
add
add
add
add
adc
rclb
sbb
xor
add
stos
add
inc
je
mov
outsl
outsb
imul
test
gs
jno
outsb
gs
gs
imul
and
push
jns
mov
outsl
orl
mov
add
add
mov
add
add
arpl
add
add
add
add
add
add
add
rclb
add
add
add
add
add
cmpsb
sub
in
rol
fs
popf
clc
stc
xlat
dec
push
loope
xor
pop
dec
out
add
mov
aaa
jae
pop
jge
data16
dec
fstps
pusha
imul
add
and
or
xor
xchg
sti
xchg
push
dec
mov
jmp
loopne
mov
sar
cltd
adc
fists
sti
mov
ret
insl
das
xchg
push
mov
imul
repnz
inc
out
xchg
or
out
repnz
outsb
or
scas
rcrl
jl
pop
rorb
das
hlt
sbb
lock
aaa
jno
rcrb
dec
cmc
arpl
mov
sub
xor
aam
test
scas
adc
xor
push
cmp
aas
scas
jae
pop
leave
jp
pop
mov
and
adcl
cmp
scas
fwait
push
jo
into
dec
jmp
inc
jno
sub
stos
inc
dec
stos
xchg
inc
pop
jns
in
jb
ljmp
xor
jne
lret
sub
in
fmul
pop
mov
xchg
fisubrs
aas
mov
nop
xor
sahf
fwait
xchg
cltd
cmp
testb
jnp
sbb
loop
push
movsl
mov
fcmovb
mov
mov
lock
sbb
adc
pop
mov
sbb
insl
mov
popf
pop
or
adc
mov
fwait
inc
fldcw
push
and
loop
clc
pop
stos
rcll
pop
mov
inc
jns
ret
dec
sub
lret
jp
call
xor
push
out
xchg
dec
inc
into
or
stc
mov
bound
test
leave
pop
fld
movsb
inc
scas
xlat
aaa
test
inc
lret
je
xor
lret
push
mov
ret
icebp
adc
cmc
jl
popf
insb
popa
mov
dec
mov
fnstsw
les
pop
pusha
pusha
in
ret
scas
xchg
iret
mov
inc
nop
lcall
cmp
lahf
push
stc
mov
xchg
push
pusha
xchg
pop
pusha
xlat
xchg
stos
push
push
mov
scas
dec
sarl
cmc
js
cmpsl
ret
lds
sbb
mov
pop
int3
insb
xor
adc
fwait
cmp
fwait
pop
mov
mov
pushf
sbb
sbb
push
jl
subb
pop
cmc
and
jne
sub
sbb
lret
fmull
xchg
xor
push
jne
xchg
hlt
jle
enter
scas
ss
xor
push
or
aas
ss
sbb
cwtl
sub
and
jge
pop
xchg
jmp
mov
pop
js
mov
fcomps
push
cwtl
stc
cmpsl
hlt
adcl
movsb
or
stc
sbb
dec
fidivl
clc
test
xor
xor
leave
aad
jo
aad
push
movsb
mov
fs
mov
gs
or
les
lods
dec
ret
mov
xchg
aaa
addr16
mov
movsl
adc
and
push
jne
loopne
jp
mov
xor
sbb
mov
cmp
pop
fbstp
iret
or
push
jp
xchg
enter
mov
in
aaa
push
mov
add
sahf
sbb
iret
jle
divl
push
shll
pop
mov
mov
ljmp
ret
inc
or
push
ljmp
out
mov
fimull
cmp
mov
ljmp
rcrl
xchg
lods
mov
repz
loopne
scas
fstps
mov
dec
or
pop
add
es
pusha
cmc
arpl
mov
rorl
sbb
fdivr
cmp
jp
popa
lock
add
mov
fisubrl
les
iret
inc
mov
lahf
jnp
gs
stc
mov
sbb
mov
and
sbb
mov
jo
fnstcw
add
mov
dec
and
inc
arpl
mov
jb
push
add
xor
jnp
fnstsw
stc
xchg
cmp
mov
jnp
xchg
jns
lods
xchg
mov
je
mov
out
inc
sbb
sbb
enter
shr
push
sub
mov
leave
cld
xchg
repnz
sub
push
push
lods
pop
pop
push
mov
xor
mov
or
cmp
popf
mov
testb
aaa
jae
arpl
mov
mov
add
cmp
mov
push
out
xchg
pop
loope
pop
lcall
outsb
std
shll
push
push
lds
lret
jo
mov
aaa
std
cltd
bound
jae
push
insl
lea
test
xchg
inc
adc
mov
push
jo
sbb
push
dec
dec
jae
jo
sbb
cmp
mov
out
xchg
inc
pop
dec
inc
enter
testl
sbb
add
sbb
test
fwait
xchg
cmpsl
cwtl
fstl
out
ss
push
inc
shll
popl
ficompl
test
rcll
sbb
jnp
dec
and
cltd
addb
add
insl
pop
sub
jns
inc
cwtl
lods
cmp
dec
push
bound
leave
popa
sbb
out
cmp
dec
xchg
movsl
cmpsl
and
mov
pop
imul
sub
in
inc
xor
cmc
pop
lds
xchg
fcmove
into
cwtl
cld
repnz
add
add
int3
sub
jo
xorl
adc
add
or
mul
shlb
mov
pusha
mov
sbbl
mov
out
cmp
pop
aad
out
adc
cmpsb
jg
cs
pop
scas
movsl
sbb
ss
test
dec
les
adc
jmp
mov
mull
jnp
fsubr
jno
fs
xchg
cmp
mov
pushf
loopne
dec
inc
arpl
in
rcll
mov
push
xlat
xor
pop
push
inc
movsb
into
xchg
test
lret
scas
movsb
bound
out
shll
push
mov
xchg
dec
movsl
mov
call
imulb
inc
dec
adc
adc
adc
outsl
in
out
insl
movsb
cli
xor
pop
xchg
stos
sarl
push
repnz
rep
mov
xor
mov
and
xor
cmp
std
cmp
imul
and
aad
push
imul
mov
fnstcw
dec
fistps
fmulp
jecxz
stos
sub
xchg
btr
sbb
cmp
mov
push
mov
xor
aas
cmp
loopne
jo
jl
mov
push
or
dec
jge
andb
sub
jle
cmc
push
out
mov
out
fsubp
leave
pop
jge
mov
lcall
jmp
mov
insb
mov
cli
fisubl
or
pop
sbb
sub
in
movsb
outsl
xor
xchg
mov
ds
loop
dec
sbb
nop
mov
and
cs
js
dec
jp
inc
push
adc
mov
mov
rorb
xchg
sarl
mov
pusha
dec
ficoms
sbb
ret
je
push
dec
jne
mov
add
add
lds
push
adc
ret
adc
mov
out
cli
sbb
xchg
inc
mov
adc
mov
inc
inc
push
inc
mov
mov
aad
push
push
and
pop
int
or
fists
out
lret
xor
lret
push
sub
repnz
xchg
push
pusha
mov
push
pop
push
inc
mov
popa
lret
insl
sbb
adc
in
jbe
dec
pusha
cltd
loope
cltd
xchg
mov
adc
pushf
sbb
jae
lret
dec
je
mov
nop
mov
dec
lock
and
mov
mov
xor
or
push
test
cmpsl
inc
cwtl
call
cltd
stos
pop
std
filds
pop
push
mov
mov
test
mov
ja
ss
mov
in
std
xchg
shr
adc
loope
stos
pop
cmp
dec
cs
inc
and
jb
or
jl
cmp
jge
ret
inc
cmp
les
fldenv
mov
gs
inc
and
push
mov
mov
mov
jae
push
hlt
cwtl
sub
or
jae
rcl
cmp
pop
sub
test
cwtl
nop
mov
test
add
xchg
inc
cwtl
mov
es
outsb
xchg
lea
jbe
js
js
or
and
xchg
ss
out
mov
aas
repz
inc
mov
xor
sbb
rorb
push
fstl
icebp
dec
dec
subl
scas
dec
das
or
and
popa
cltd
sti
ud0
push
inc
hlt
pcmpeqd
cmp
cltd
jmp
sbb
dec
sub
push
sbb
lods
js
and
sub
arpl
push
loop
inc
std
stc
arpl
dec
adc
sub
mov
in
sahf
leave
fucom
dec
sub
sbb
fidivl
inc
mov
cs
inc
insl
out
xor
stos
dec
xchg
lret
push
scas
jmp
pop
lock
pop
add
pmaxub
test
cmp
mov
dec
and
and
lock
shll
pop
lret
jp
test
test
jo
cmpsb
add
rclb
cmp
xlat
addl
addr16
cltd
popa
jae
cltd
jge
inc
xchg
clc
test
or
in
test
clc
sahf
push
and
out
adc
repnz
or
lods
push
jns
cmc
out
mov
mov
cld
cmp
xchg
insb
xchg
sub
inc
mov
mov
insl
pushf
push
pop
incb
movsl
mov
imulb
sbbb
and
push
jg
lea
or
cli
xlat
sbb
xor
testb
lds
mov
dec
add
mov
adc
icebp
nop
xchg
lret
stos
stos
pop
sahf
and
mov
pop
or
sarb
mov
mov
in
rorl
dec
inc
jmp
cli
inc
pop
push
mov
ja
sbb
dec
mov
or
std
sub
cltd
out
push
mul
dec
pop
das
fldt
pop
movsb
jle
mov
mov
push
mov
call
pop
test
leave
xchg
ljmp
hlt
insb
std
cs
std
out
mov
inc
sbb
fistl
and
push
imul
mov
pop
or
sbb
cmc
lret
push
fisttpl
sbb
movsb
push
inc
pop
andl
mov
shl
pop
testl
movsb
stos
jge
xchg
dec
ss
jno
sub
sahf
or
lahf
rclb
je
add
push
cmpsl
inc
les
xor
repnz
add
int3
fsubr
cmc
loope
xlat
jp
dec
mov
xor
and
push
jo
jae
pop
mov
andl
sub
and
add
pop
pop
loop
mov
les
push
cmp
sbbb
mov
repnz
jns
cmp
dec
cmp
icebp
repz
lods
sbb
pop
adc
fwait
lret
inc
adc
add
pop
or
jg
jmp
xchg
lds
aad
cli
movsb
mov
sbb
push
xchg
mov
xchg
mov
xor
sahf
inc
inc
scas
lock
inc
dec
iret
loop
mov
sub
push
and
cmp
jo
lahf
call
loope
sbb
xchg
das
push
or
pop
mov
int
scas
cmpb
js
cmp
jecxz
xchg
cltd
fadd
fcoms
xchg
loope
lods
mov
xor
int
arpl
popf
stos
add
jmp
in
pop
cmp
dec
or
cmp
fidivs
in
cli
cmc
lcall
jp
bound
test
mov
or
lret
cmc
test
cmp
in
push
ficompl
ffree
pop
cmp
lods
add
adc
push
je
sbb
add
repnz
rorl
mov
int
push
hlt
xorl
cs
xor
xor
add
or
mov
je
jle
xchg
dec
out
jns
inc
lret
out
xchg
movsb
cmp
mov
movsl
push
ds
adc
lret
jb
es
dec
mov
aam
add
out
scas
lcall
stos
and
pusha
inc
fwait
ret
mov
jo
and
std
outsb
je
sbb
imul
vaddsubpd
mov
and
jp
jae
jl
push
test
xlat
in
aad
lods
aad
fsubrs
push
data16
cld
mov
mov
dec
xor
ja
shr
lcall
sahf
mov
mov
dec
sub
fsts
cld
push
ss
cli
push
scas
jns
xor
jp
testl
cmpsl
adc
pushf
pop
outsb
jno
add
sub
adc
push
lods
push
jb
push
rorb
or
adc
cmpsb
cltd
cmp
mov
test
subb
jmp
mov
mov
xchg
lods
jno
and
fs
jge
jb
mov
mov
inc
add
mov
mov
jle
sahf
push
or
push
mov
out
jp
nop
aas
cmc
repnz
arpl
xor
and
and
mov
inc
dec
xor
lcall
or
mov
mov
mov
mov
cmp
mov
loopne
je
mov
inc
inc
pop
pop
sti
imul
lret
and
stos
xchg
cwtl
push
mov
cmp
out
cltd
div
xor
lea
jb
int3
add
outsl
mov
sub
dec
test
in
cmpsb
and
cwtl
das
sbb
popa
mov
je
ret
sbb
and
test
lcall
cmp
cmpsl
xchg
nop
jo
pop
arpl
mov
mov
push
and
ja
out
cmp
out
cli
or
sub
cmp
movb
shr
mov
outsb
fidivrs
scas
xchg
testb
and
jne
loopne
xchg
pop
pushf
mov
add
int
das
xchg
test
pop
add
inc
sbb
call
sarl
or
ds
jae
ds
push
pop
shlb
rol
or
fstp
xor
or
scas
mov
or
scas
addr16
aam
outsl
test
inc
cwtl
aaa
sub
popf
stos
test
jns
jbe
pop
push
jb
sbb
cltd
sbb
fsubrp
add
dec
mov
iret
push
and
fistps
and
push
add
ret
pop
adc
cmpsb
das
mov
in
push
imul
dec
push
in
mov
sub
mov
les
push
rcrl
outsl
pusha
or
push
sbb
es
pop
or
pushl
dec
es
bsr
xor
shlb
inc
stos
or
sbb
and
mov
inc
fdivl
inc
lcall
mov
outsb
mov
gs
adc
hlt
xchg
push
scas
inc
insb
sbb
or
sub
ret
or
push
out
mov
shll
jp
lods
fsubrl
pop
and
lock
aam
subb
mov
stos
ret
inc
dec
add
dec
into
xchg
or
jle
add
adcl
inc
adc
or
imul
adc
mov
out
inc
mov
dec
shr
push
pop
mov
adcb
addr16
test
push
rorl
and
in
or
mov
push
push
mov
or
in
xchg
xlat
out
inc
test
pop
dec
adc
and
int
stc
push
das
test
icebp
jp
xchg
jbe
adc
ret
or
jnp
or
sbb
adc
ds
push
cwtl
xchg
jno
mov
je
jnp
cs
mov
ds
into
push
cmp
cltd
or
sahf
jns
loop
jb
les
cmp
rcll
sbb
push
sbb
mov
fnstenv
xor
popa
pop
lret
popl
jge
pop
jnp
inc
in
test
add
xlat
aad
in
push
mull
pop
rcll
pop
popf
mov
ret
cmpsl
inc
xchg
repnz
dec
fsubrl
stos
lret
adc
mov
lea
adc
cwtl
and
jbe
test
mov
leave
bound
and
lcall
cmpsl
shrb
jae
scas
cmp
fstl
jg
jo
dec
jnp
les
lds
test
sbb
mov
pop
out
loope
cwtl
cwtl
mov
mov
ss
int
inc
add
loop
call
leave
jp
inc
movsl
xchg
sbb
pop
jmp
jae
push
in
rcrl
loop
leave
repz
test
mov
cli
out
jbe
sub
pop
cld
daa
lret
aaa
mov
repz
inc
rcll
icebp
sbb
fsubrs
shll
inc
pop
scas
cmp
in
sub
mov
iret
ss
enter
insl
and
mov
nop
add
adc
cmp
cltd
rclb
mov
xchg
jp
push
aas
std
les
icebp
xor
and
push
stc
inc
inc
das
sbb
and
subl
jmp
in
negl
add
aas
push
int
into
xlat
andb
sbb
in
or
stos
adc
or
loopne
jecxz
and
add
lock
dec
outsl
cmpsb
stc
cmpb
or
mov
sub
jbe
adc
cmp
and
rsqrtps
imul
fstl
insb
scas
fldenv
xor
dec
and
push
into
testb
fistpll
cmpsb
nopl
idiv
mov
mov
push
into
bswap
inc
outsl
cltd
movsl
clc
incl
jl
enter
add
mov
dec
jmp
stc
jp
cld
fwait
xor
int3
or
xor
push
rol
pop
sub
mov
dec
dec
test
fndisi(8087
rcrl
add
adc
push
icebp
fidivs
inc
outsb
loope
mov
in
js
pop
outsl
das
lea
cltd
arpl
in
jns
iret
test
push
xchg
push
ja
cmp
ret
xchg
xor
cmc
loopne
xchg
xor
push
pop
sbb
sub
mov
imul
inc
push
inc
movsl
pop
or
add
ss
or
push
mov
pop
push
inc
cmpsb
nop
mov
out
push
and
movsl
popf
movsb
inc
not
inc
fstpt
sti
in
jb
xchg
mov
jno
inc
jmp
les
cmp
mov
sub
cwtl
xor
jl
lahf
or
fmull
pop
gs
adc
shrl
push
mov
inc
dec
or
pop
je
int
push
lds
dec
mov
and
mov
push
cmpsb
lcall
lock
inc
fmuls
xlat
pop
jne
loope
inc
mov
add
pop
lret
sub
pop
daa
mov
notl
jne
add
or
mov
and
aam
push
xor
leave
dec
and
jle
or
js
outsb
outsb
xor
cmpsb
jns
mov
addr16
inc
inc
sub
add
push
aam
pop
shlb
push
mov
fldcw
push
test
pop
lods
sti
and
addr16
mov
ret
xchg
gs
adc
test
jno
inc
ljmp
fsubrl
adc
int3
test
cs
outsb
mov
lock
jmp
nop
das
movb
jmp
xchg
xchg
pusha
push
sub
into
hlt
xchg
lret
jno
lret
popa
shlb
dec
je
jne
inc
not
clc
cmp
xchg
jo
stos
cmp
xor
xchg
les
cmp
enter
fstps
adc
adc
sub
rcrl
mov
inc
mov
pusha
dec
in
cli
adc
jbe
sub
out
mov
lea
fstpt
sbb
scas
and
pop
inc
and
iret
pop
sub
pop
dec
mov
test
into
in
test
xchg
sub
jne
jb
int
mov
sbb
cmp
and
sti
mov
outsl
push
cmp
mov
jl
add
and
or
fisttpl
mov
jno
inc
adc
xor
cmp
jne
ret
loop
push
popa
aaa
xchg
cmpsl
and
jecxz
inc
xchg
jne
sti
and
movsb
sub
pop
mov
pmaxsw
mov
cmp
ficoms
imul
mov
mov
mov
and
push
mov
jle
inc
cld
stos
mov
gs
dec
dec
push
addl
and
xor
je
mov
mov
and
pop
cmp
jl
stos
xchg
rcl
xor
push
enter
sbb
out
ror
lcall
dec
cltd
movsl
icebp
sub
rcll
cmpsl
sbbb
push
js
mov
inc
mov
lods
sarl
jmp
jo
jmp
xor
je
call
call
adc
fwait
pmulhuw
bound
daa
rclb
push
movsb
out
ja
hlt
pusha
mov
stc
fimull
ljmp
es
xlat
xlat
jl
stos
rcrb
cmp
mov
cmc
mov
mov
sbb
cmp
in
fucomip
fdivp
cltd
sub
push
pushf
shlb
and
pop
mov
popa
or
std
jle
outsb
xchg
add
mov
mov
xchg
mov
dec
mov
sub
addb
outsb
sub
xchg
dec
lret
jmp
mov
jae
mov
in
mov
idivl
xchg
lret
repz
xchg
push
das
icebp
inc
adc
div
loop
test
into
clc
xor
xchg
sub
inc
sbb
sbb
fcmovne
inc
addl
jp
cmpsb
ljmp
scas
dec
into
outsl
jns
fists
add
pop
add
jmp
fcomps
cmp
cmp
insl
add
mov
fstpt
xlat
fdivrl
push
lds
dec
mov
xor
dec
xor
addr16
and
ja
incl
lcall
mov
mov
sub
inc
cmp
testl
pusha
dec
les
div
roll
jns
loopne
or
pop
aas
stc
mov
jp
inc
ja
mov
mov
divl
mov
pop
add
xlat
or
movb
sahf
add
pop
ficoml
push
pop
jle
lods
sbb
jns
dec
mov
test
cmp
sbb
clc
lods
lock
mov
sub
bound
add
lds
add
sbb
mov
decb
loope
xchg
fnsave
jae
xchg
cmpl
addr16
out
push
popf
movsl
pop
lcall
inc
stos
mov
jecxz
mulb
gs
add
sbb
add
jmp
cmpsb
mov
jns
mov
jle
hlt
inc
imul
xchg
hlt
insl
cmpsl
xchg
lock
pushf
loop
loope
jno
sub
xor
enter
ss
jne
adcb
pop
mov
pop
shlb
xchg
cmp
es
push
cltd
rcrb
jl
xchg
sbb
jmp
add
jp
push
lret
xchg
push
cltd
lahf
jl
sbb
data16
cli
fimull
lds
call
imul
out
test
sub
push
pop
fsub
sbbb
ss
push
jbe
mov
xchg
aam
jg
sbb
orb
adc
jle
pushf
mov
inc
stos
in
sub
mov
arpl
les
or
ss
mov
or
xchg
push
jb
inc
in
dec
and
into
repnz
in
lcall
xor
jmp
aad
rol
stc
push
cs
jg
pop
xchg
xchg
test
cli
cmp
lods
clc
mov
jnp
or
pop
sub
aad
xchg
mov
push
sbb
out
push
dec
and
sbb
test
add
les
push
jo
and
fcmove
aas
cli
leave
jbe
outsl
ljmp
pop
and
and
outsb
imul
out
testb
inc
mov
push
adc
mov
leave
or
movsb
aam
dec
mov
lods
mov
push
test
xchg
adcl
jnp
mov
sbb
push
mov
dec
xor
jle
pop
sub
addr16
testb
adc
add
bound
jnp
popf
or
pushf
fwait
stc
sub
mov
fildll
out
loope
add
negl
mov
jo
subb
xor
mov
and
inc
dec
cwtl
es
mov
jcxz,pt
dec
cmp
xorb
mov
filds
mov
push
shrl
outsb
mov
jl
je
outsb
lret
mov
jo
add
add
add
rclb
add
add
add
add
add
add
add
add
adc
and
add
add
jae
add
add
add
add
add
add
add
xor
add
add
xchg
add
add
nop
add
add
call
add
roll
add
adc
mov
shrb
je
mov
decl
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
add
addl
sbb
jb
outsb
sbb
add
add
mov
add
inc
inc
add
add
xchg
add
add
pop
add
add
jg
add
add
scas
add
add
add
add
popa
add
add
aas
mov
add
add
add
add
pop
adc
and
and
add
fwait
add
outsb
add
in
add
sbb
mov
or
popa
sbb
ljmp
add
push
mov
mov
push
pop
clc
add
std
adc
scas
rolb
push
iret
in
cld
push
adc
jne
mov
mov
mov
pop
ficoms
rclb
loope
push
add
adc
add
add
addl
testb
adc
xor
mov
xor
cld
loopne
pop
std
pop
add
xorb
push
call
cld
jge
add
incl
into
pusha
push
std
test
jb
mov
movsb
xor
lret
add
inc
push
adc
mov
add
lea
xor
addb
das
addl
roll
add
add
add
add
mov
add
inc
add
add
cltd
shrb
shrl
enter
jb
xchg
add
ret
imul
insl
add
dec
daa
gs
gs
add
or
je
push
insb
add
and
outsb
nop
sbb
jg
je
je
imul
loope
add
add
add
inc
add
add
fists
pop
add
add
jg
add
add
scas
add
add
add
add
popa
add
add
sar
stos
mov
mov
or
scas
pop
adc
dec
inc
pop
xchg
daa
sbb
cmp
popf
rcll
inc
mov
jecxz
sub
pop
shll
sbb
mov
adc
inc
lcall
jp
xlat
mov
movsl
mov
xchg
mov
mov
cmp
xor
clc
ret
cs
leave
xchg
das
sahf
aad
fmuls
cwtl
push
xchg
mov
jg
fcom
xchg
or
xor
sti
jnp
shlb
add
out
out
mov
fisubs
movsb
xor
dec
dec
jle
sbb
inc
sub
or
mov
jno
movsb
addb
cld
je
mov
and
or
adc
mov
sbb
jne
fwait
or
mov
xor
jp
adcb
add
and
aas
lahf
mov
pop
jle
loope
orb
mov
sbb
inc
jecxz
add
loope
add
inc
scas
pop
stos
dec
jbe
aas
nop
aaa
push
jb
cmp
xor
ljmp
rcr
xchg
dec
lret
cmp
inc
and
add
nop
les
add
cmc
mov
lock
stos
xchg
push
mov
loopne
sbb
xor
jbe
sbb
cmp
push
movsl
mov
push
mov
xchg
or
jns
mov
notl
jge
pop
jns
mov
notl
lahf
scas
pop
cmp
cmpsb
jp
jecxz
cmp
rcr
push
fidivl
sub
jnp
shlb
mov
mov
pop
push
fwait
addl
dec
ss
push
push
fwait
ret
pop
in
jb
arpl
dec
inc
gs
fdivrl
mov
mov
subb
jecxz
cmp
roll
fnstsw
cmp
jp
and
mov
xchg
insl
push
pop
push
das
leave
push
sbb
rclb
mov
inc
sbb
jno
sub
lods
mov
push
jbe
cmp
cs
movsb
adcl
jne
fs
out
mov
fs
lods
adc
mov
mov
adc
faddl
sbb
test
adc
outsl
repnz
or
std
idivl
sub
xchg
inc
jne
call
ret
pop
in
or
sub
pusha
test
and
push
adc
mov
jecxz
push
sbb
outsl
out
inc
cmpsb
in
mov
inc
and
xor
cmp
fwait
lods
xor
fdivs
std
pop
hlt
pop
ret
clc
cmp
pop
jecxz
adc
xchg
les
push
dec
jno
push
and
insb
repnz
and
pop
jmp
add
fildll
mov
mov
int3
jmp
mov
xlat
jmp
push
in
insl
mov
sbb
sbb
mov
jmp
mov
fadds
add
dec
aad
adc
into
clc
and
mov
aad
lock
xchg
jb
mov
adc
add
jb
xchg
mov
out
sbb
stos
test
stos
cld
mov
pop
bound
and
sbb
jno
sbb
pop
pop
cmp
div
icebp
jp
fcomi
dec
mov
icebp
push
adc
mov
adc
dec
adc
jne
andb
cmp
daa
adc
adc
xor
jnp
aam
mov
ret
dec
frstor
popf
aaa
mov
or
adc
ljmp
mov
inc
mov
sarl
mov
addr16
push
std
mov
cmp
cltd
dec
fistl
loopne
fs
push
cmp
adc
ss
cmp
xor
xchg
mov
rclb
mov
scas
jb
loope
sub
cs
add
insl
shrl
pop
jnp
fisttpl
test
push
push
inc
in
hlt
ret
dec
mov
inc
cmpsb
je
dec
mov
jecxz
addr16
push
ss
daa
xchg
cmp
mov
push
jb
mov
add
fsub
mov
jns
pushf
lret
and
outsl
loopne
push
pop
sub
repnz
ficompl
inc
in
xor
adc
jmp
addl
push
stos
dec
es
push
mov
ja
push
or
out
scas
ss
jae
fistpl
scas
test
sbb
cwtl
insl
adc
aas
aas
sub
jle
jl
pop
xor
orb
add
fs
mov
jbe
mov
pop
nop
insb
shrb
lods
xor
out
jbe
pop
lds
in
cwtl
leave
lds
clc
pop
aad
mov
stc
jb
cs
jnp
jo
pop
xchg
insb
pop
cli
mov
dec
dec
fsubl
adc
and
push
in
pop
cmp
cmpsl
sbb
or
mov
jge
dec
cltd
lret
jb
add
sub
popa
in
inc
or
pop
sub
int3
mov
sahf
lret
push
and
adc
loope
pushl
jnp
mov
jg
fldl
lret
cmp
fwait
cmp
jge
add
fisttpl
mov
xor
cmp
enter
pop
cmp
out
imul
out
mov
fsubl
push
std
ret
sahf
pop
cld
pushf
idivb
jb
adc
int3
enter
repz
pop
and
xchg
stc
lock
outsl
xor
loope
and
push
jp
cmp
ret
fwait
cltd
pop
jecxz
pop
int3
cs
test
ret
es
jmp
pusha
scas
xchg
jae
out
pop
sarb
or
daa
incl
xchg
mov
xchg
pop
inc
decl
add
loope
and
mov
int3
add
cs
pop
fidivrs
or
aas
es
insl
push
repnz
mov
insb
idivb
inc
mov
mov
jecxz
pop
fidivl
out
dec
and
or
jg
es
add
jge
popa
js
jnp
sahf
into
cltd
push
fnsave
dec
sub
cs
pop
je
sbb
mov
cwtl
dec
xor
dec
push
cmp
scas
cltd
inc
xchg
pop
sti
adc
shlb
aaa
jns
sbb
and
and
je
push
scas
int
adcl
mov
mov
out
add
jg
iret
testl
pop
mov
in
aas
lret
push
mov
imul
test
and
inc
xor
mov
inc
aaa
daa
in
xchg
out
xor
add
mov
dec
push
mov
in
and
cld
xchg
and
scas
stos
adc
mov
ret
movsl
mov
repz
lret
ret
movsb
adc
jmp
jo
xlat
in
push
jecxz
push
jo
jo
jg
lods
push
dec
leave
bound
inc
pop
sahf
nop
mov
xchg
pop
fidivl
jmp
sub
icebp
sbb
push
cmp
dec
inc
and
xchg
or
mov
add
cmp
fstpt
sti
dec
sbb
cwtl
ja
arpl
pop
cltd
aas
dec
cmp
mov
cmp
adc
fcompl
inc
jg
cltd
shlb
jo
or
leave
movsl
les
push
pop
inc
push
roll
push
lahf
mov
jno
fwait
push
push
adc
mov
in
push
push
jp
mov
in
sbbb
inc
js
xlat
mov
stos
mov
outsl
test
call
adc
and
sub
adc
stos
cs
add
int
dec
mov
jno
inc
jmp
js
ffreep
push
mov
mov
test
rcrl
or
sub
mov
in
mov
xor
cmp
push
fbld
xor
fucomip
sbb
in
pop
pop
mov
inc
fldcw
stos
and
cmp
into
xchg
or
testb
cmp
adc
mov
push
push
subl
dec
daa
bound
testb
fwait
mov
mov
push
mov
push
into
bound
pop
or
and
in
push
add
addps
jle
ja
adc
adc
mov
dec
sub
movsl
sbb
inc
inc
cld
xchg
and
xchg
lods
mov
add
lret
xchg
aas
adc
stc
pop
pop
imulb
jle
out
lcall
adc
add
jle
rcrl
out
push
das
jmp
scas
insl
mov
xchg
inc
pop
outsb
push
xchg
and
aaa
pop
push
cs
or
mov
dec
jae
mov
mov
push
mov
sbb
fcoms
inc
movsb
mov
sahf
adc
pop
popf
and
mov
sbb
dec
mov
fwait
inc
loope
repz
jle
in
lds
int
outsb
arpl
push
sbb
imul
fstpt
push
push
and
jge
test
push
lea
fsubs
xchg
dec
rorb
add
pop
sbb
xchg
ja
pop
inc
dec
cmp
cltd
adc
mov
imul
adc
mov
bnd
sarl
test
dec
aas
and
mov
push
out
lock
and
pop
leave
xor
inc
jge
add
jle
negl
stos
jmp
mov
mov
inc
pop
aad
mov
das
push
test
pop
mov
jp
mov
adc
lds
jmp
aad
jecxz
call
and
scas
not
fidivrl
xchg
rorl
mov
test
testl
aas
repnz
lret
int3
push
jmp
mov
outsb
mov
fs
stos
movsl
pop
ja
fld
mov
lea
dec
lds
lods
les
adc
dec
fsubrl
ja
and
xlat
sbbl
or
dec
int
scas
pop
xchg
pop
and
out
jo
push
xchg
mov
das
movsb
ror
xchg
cmp
push
scas
push
test
and
xchg
add
lds
stos
movsl
pushf
xchg
aam
clc
mov
iret
mov
jae
add
dec
add
sub
and
ja
pushl
xchg
and
xchg
pop
aas
outsb
adc
mov
ljmp
mov
inc
push
popa
or
or
sbb
mov
sti
mov
xchg
pop
rol
std
xchg
jno
mov
mov
sbb
xor
arpl
movsl
dec
mov
xlat
sbb
stos
aas
pusha
jo
sub
dec
pop
int3
iret
inc
or
cwtl
into
loop
jge
mov
pusha
push
mov
das
xchg
sbb
push
data16
aad
jmp
sub
idivl
jp
stos
iret
repz
inc
cmpsl
fstpt
xchg
inc
pushf
push
push
daa
test
insl
or
pop
cmc
mov
in
scas
ja
fnstcw
jecxz
loope
sbb
cmpsl
mov
fs
jnp
aaa
test
jae
pop
arpl
adc
stc
cmp
hlt
xlat
inc
jmp
test
xchg
xorl
addr16
cmp
jge
fldt
inc
xlat
push
das
jp
and
dec
mov
xchg
mov
imul
jno
test
repz
imul
sahf
aas
pop
push
arpl
daa
push
adc
adc
orb
or
lret
fcoml
cmp
sti
int
cs
stos
xchg
outsl
mov
add
xchg
xchg
add
sub
mov
test
sbb
mov
or
int3
xchg
dec
cmp
push
mov
mov
loop
and
push
mov
mov
sbb
into
pop
inc
popf
repz
call
inc
call
xchg
mov
cli
insl
mov
sub
mov
bound
lret
loope
mov
xchg
lcall
test
xor
or
stos
jo
pusha
imul
adcb
mov
pusha
push
xlat
jbe
mov
jo
mov
cmc
pushf
int3
xchg
orb
leave
mov
loopne
int3
out
sarl
pop
pop
test
testl
xchg
pusha
pop
lret
stc
inc
xchg
cmpsb
cmp
out
cli
xchg
icebp
nop
leave
adc
lods
jno
xlat
iret
sahf
notl
and
pop
cltd
lret
jo
popf
loope
fisubs
leave
call
mov
jge
cmp
adc
adc
call
in
scas
ficoml
fcmovne
lds
push
xlat
fldt
in
mov
mul
adc
je
nop
push
arpl
ljmp
movsl
fxch
and
cmp
mov
adc
ret
pop
add
mov
stc
mov
push
jnp
cmpsb
dec
add
add
xchg
or
test
cltd
jge
in
xchg
xor
cmp
sahf
xchg
or
fildl
in
mov
sbb
iret
dec
and
inc
insb
mov
push
scas
pop
dec
decl
insl
cwtl
pop
mov
loop
repz
mov
je
std
xchg
sub
hlt
jb
test
imulb
dec
mov
insl
mov
inc
jmp
add
dec
mov
push
jl
jb
jle
inc
push
mov
aaa
cmp
push
data16
decb
pop
dec
xchg
jmp
ffreep
in
test
push
aad
inc
sbb
pop
push
bound
scas
or
sbb
xor
mov
jno
pop
add
test
adc
dec
mov
fsts
lea
adc
inc
inc
add
dec
mov
in
sti
cmpsb
orb
mov
les
shl
aas
aam
aas
cmp
imul
jl
push
mov
or
xor
jb
inc
push
cmp
push
arpl
xor
mov
das
push
cmp
das
xchg
xor
push
jnp
dec
in
lock
lret
and
es
enter
addr16
push
hlt
xorb
add
nop
and
popf
push
testl
jmp
jno
mov
sbb
ret
mov
jnp
lahf
xor
mov
imul
lods
leave
hlt
xorb
mov
scas
fsubs
xchg
cmp
pushf
inc
or
sar
notl
out
popf
std
jle
add
andb
or
sbb
cmp
jne
mov
and
outsl
sub
or
mov
sub
std
in
cmp
cltd
fists
movsl
mov
ja
pop
or
jecxz
xchg
push
jge
adc
push
ljmp
rclb
insb
jo
push
imull
mov
fisttpll
cs
andl
cmp
out
loop
sbb
push
aam
mov
gs
mov
cmp
ja
ret
or
cmp
and
mov
sub
lds
xchg
jle
add
sub
add
mov
mov
xchg
pop
jb
or
out
loop
iret
les
adc
cmp
dec
mov
mov
das
cmp
cs
sub
xchg
lods
cmpsl
in
mov
pop
lret
push
out
imul
in
xchg
stos
adcb
int
sbb
gs
inc
dec
std
loopne
cmp
xor
jno
scas
popf
mov
int3
clc
lock
or
push
sub
cmpl
adcb
lods
jo
int
or
add
jno
lods
cmp
mov
xorl
fiadds
fisttpl
mov
sbb
adc
movsl
call
inc
mov
in
loope
mov
xor
out
push
adc
jbe
clc
lret
sbb
xor
xchg
repnz
loope
rol
jnp
test
add
mov
xchg
cmc
idiv
xchg
xchg
scas
push
scas
sub
int
sbb
inc
scas
add
pop
es
fnstcw
outsl
and
addr16
addr16
popf
jns
dec
cld
inc
xchg
subb
adc
sbb
push
and
mov
adc
xchg
and
repz
fwait
pushf
adc
inc
mov
mov
mov
roll
into
sub
xchg
pop
sbb
rorl
lcall
inc
rcrb
dec
push
jp
add
fwait
adc
mov
mov
icebp
jl
push
int
rolb
movb
pop
imul
jl
sbb
ficompl
movsl
mov
xchg
lret
dec
or
adc
xchg
aad
pop
pop
mov
loop
cmp
xchg
sub
fisttpl
or
lds
out
aam
mov
or
push
jbe
push
dec
mov
xor
enter
mov
mov
add
xor
mov
dec
pop
repz
std
inc
sub
ret
adc
xchg
bnd
jno
outsl
frstor
movsb
fs
push
lods
sahf
popf
and
push
insl
fcmovb
push
push
push
mov
add
add
leave
sbb
cmp
scas
pop
dec
test
adc
sbb
lods
pop
cmpsl
outsl
sti
mov
mov
rcl
adc
into
jp
xor
outsb
mov
nop
insl
or
icebp
mov
sub
dec
mov
sbb
addr16
cmp
push
mov
daa
das
dec
mov
ja
mov
pop
mov
cmp
insb
fstpt
xchg
adc
add
inc
cmp
rcl
in
mov
in
adc
mov
push
cmpsb
inc
or
pop
call
cld
add
in
jl
lods
pop
mov
jl
ljmp
sbb
mov
mov
xchg
mov
mov
xor
adc
pop
aam
mov
inc
jb
xor
clc
jg
aaa
loopne
jae
adc
push
jecxz
jl
fdivs
cld
and
pop
ffreep
pop
ds
lds
jle
or
lcall
in
mov
xlat
and
sub
and
fcomp
stc
mov
lds
adc
jns
jno
enter
inc
inc
xor
stos
push
ljmp
jb
loopne
jmp
incl
xor
int3
sbb
rcr
fcos
jnp
mov
pop
ljmp
ret
pusha
mov
push
lds
and
ds
push
mov
gs
scas
xor
addl
inc
mov
fldcw
cmpsb
test
jmp
shrb
add
gs
out
jge
jnp
push
lods
jbe
or
jmp
faddl
mov
mov
inc
and
jnp
push
jecxz
or
and
fidivl
sub
fstpl
iret
fcomp
jg
push
icebp
mov
xchg
and
jle
xchg
push
negl
mov
pop
inc
pop
mov
inc
inc
mov
or
dec
not
inc
or
mov
push
push
sti
scas
push
dec
add
push
sarl
dec
std
xchg
cs
rorl
call
pop
jg
add
loope
pop
repnz
in
add
movsl
int3
clc
push
movsl
pushf
push
mov
imull
call
scas
cmp
js
lds
rep
sbb
loope
movl
or
inc
pop
lcall
insb
jp
mov
scas
pop
scas
cli
push
jae
or
and
cs
and
loope
and
mov
adc
sbb
shrl
xchg
lods
mov
outsl
fisubs
mov
push
lods
push
inc
mov
pop
jp
dec
jp
sub
leave
xor
ret
add
add
js
cmp
cmp
jne
ja
popf
push
imul
pop
addr16
or
push
loope
push
ja
xor
adc
jno
mov
movsb
add
inc
aas
icebp
out
lods
sbb
cwtl
push
stos
or
sub
popf
or
xor
pop
cltd
dec
stos
pushf
das
push
mulb
adc
mov
out
imul
mov
in
adc
int3
imul
pop
adc
cmpsb
dec
aas
cltd
test
push
movsl
fistpll
imul
jno
hlt
mov
cmpsb
test
bnd
jne
or
mov
loopne
mov
rolb
lret
popa
mov
pavgb
add
cmp
mov
add
mov
and
sti
push
cmp
shlb
mov
or
push
mov
jno
push
add
popf
push
and
int
lds
cmpb
cmp
js
jmp
movsb
rclb
mov
xor
pop
jbe
push
cmp
cmp
std
xchg
add
gs
push
or
shll
xchg
xchg
test
mov
jecxz
in
lds
and
jae
repnz
repz
sahf
ds
gs
imul
cs
into
or
lock
jno
mov
and
mov
or
std
mov
cmc
pop
sahf
dec
in
mov
cmpsb
adc
fldenv
jo
scas
and
or
fcomip
mov
push
je
cltd
addr16
fisubrs
dec
dec
jl
jo
pop
dec
sub
or
adc
dec
cmpsl
dec
mov
sub
inc
mov
or
insb
fcmove
pop
xchg
cmp
out
sti
jb
inc
mov
arpl
jno
and
mov
lods
cli
push
and
add
adc
out
shlb
inc
ljmp
pop
jb
dec
mov
popf
loopw
add
shrb
neg
dec
cwtl
paddusw
pop
jns
push
push
jns
jge
iret
ljmp
push
sbb
pop
ret
push
setno
xchg
xor
mov
scas
rcll
lret
fldt
stos
sbb
inc
adc
mov
in
push
mov
popa
push
dec
sahf
ja
fs
xchg
cld
add
leave
packuswb
cltd
sub
or
je
xchg
pop
pop
shrb
addr16
push
hlt
lret
or
es
adc
test
idiv
sar
negb
sub
test
cmp
out
bound
sahf
pop
xor
jb
push
mov
into
subl
icebp
sub
call
adc
push
addb
daa
dec
mov
add
ja
fstpl
dec
jmp
test
repnz
pop
pusha
mov
or
jmp
roll
add
mulb
mov
stos
gs
lea
clc
mov
pop
cmp
or
ret
mov
and
dec
fstl
cmc
jg
dec
cwtl
inc
stos
out
jg
pop
int3
sub
add
out
dec
dec
mulb
lahf
fstl
test
jl
jne
jp
sub
xchg
inc
mov
in
outsb
rolb
push
fisubrs
cld
mov
add
lea
int3
pop
adc
cmp
out
adc
sub
push
pop
mov
cli
dec
fdivs
in
push
and
cmp
pop
mov
pop
testl
pop
xor
icebp
push
inc
je
mov
shlb
jmp
lret
pop
sbb
loope
mov
ljmp
jl
sbbl
ljmp
xchg
ret
xlat
in
dec
or
lock
aas
jns
test
pop
inc
cmp
ret
shl
nop
cmp
pop
stos
into
in
and
jle
inc
pop
or
dec
push
ss
movsb
mov
negb
xchg
push
push
and
out
adc
lea
ficompl
mov
inc
xor
mov
pop
adc
push
outsb
or
call
push
icebp
xchg
xchg
out
mov
push
ficomps
outsb
arpl
pop
adc
dec
inc
fadd
testb
mov
add
sub
inc
fcomps
leave
addl
cmp
mov
push
push
mov
shll
xchg
addr16
sti
mov
jb
repnz
fadds
or
mov
mov
adcl
push
in
stos
mov
fsubrl
mov
gs
notl
cld
ljmp
inc
mov
scas
mov
outsb
mov
add
gs
les
orl
sbb
jno
movsb
pusha
cmp
fiaddl
sahf
pop
sbb
mov
stos
and
bnd
and
jne
dec
shlb
add
xorl
imul
popf
fcomi
cmp
popf
lcall
jno
outsb
jno
std
xchg
fistps
sub
shl
cmp
aaa
scas
jns
push
sti
sub
pop
push
push
popa
pop
adc
hlt
les
xor
xor
pop
nop
inc
imul
repnz
inc
lret
cmp
sbb
mov
fsubl
inc
mov
jg
push
hlt
ss
imul
inc
push
js
lcall
jecxz
xchg
xchg
in
dec
aaa
adc
movzbl
add
mov
jg
add
add
scas
add
add
add
add
popa
add
add
aas
mov
add
add
add
add
pop
adc
add
add
add
jno
add
add
add
addb
push
push
add
add
dec
popa
add
add
mov
add
inc
add
add
fists
pop
add
add
push
addb
add
stos
stos
add
call
jo
adc
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
andl
andl
push
push
movl
movl
movl
movl
mov
call
push
push
mov
call
mov
mov
push
movl
movl
mov
movl
call
ret
push
mov
sub
push
pushl
call
mov
pushl
xor
movl
pushl
mov
mov
mov
movl
movl
movl
movl
movl
movl
movl
call
add
test
jne
push
pop
jmp
push
push
push
pushl
call
mov
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
push
lea
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
jo
add
pushf
loop
add
loop
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
aas
jecxz
add
add
and
add
sbb
add
adc
add
or
add
add
add
cld
loop
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pop
jecxz
add
add
insb
jecxz
add
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
clc
jecxz
add
in
add
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xchg
in
add
add
lods
in
add
add
in
add
in
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
lock
add
in
add
in
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
push
out
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
out
add
add
add
add
cld
out
add
out
add
out
add
out
add
out
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
inc
out
add
add
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
fsub
add
clc
out
add
call
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
je
add
jl
add
test
add
mov
add
xchg
call
add
movsb
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
shr
add
fsubr
add
call
call
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
jae
jb
jae
outsb
add
inc
add
pushl
call
push
push
push
call
add
int3
mov
xor
push
push
call
push
push
push
push
push
mov
call
pushl
mov
pushl
pushl
push
pushl
call
push
push
call
pushl
call
pop
push
pushl
push
push
pushl
call
push
push
pushl
call
pop
push
pushl
push
call
push
push
call
xor
add
mov
outsb
incb
mov
add
pusha
add
pop
adc
push
add
mov
add
add
add
out
add
add
push
popa
add
add
sub
add
add
add
add
add
fiadds
add
add
push
add
pusha
gs
arpl
pop
and
outsl
ja
dec
add
dec
push
shll
and
cmp
xor
addl
xchg
sub
fcmovb
push
mov
xor
adc
lea
adc
loope
lcall
dec
mov
mov
popa
in
mov
mov
movsb
ret
add
push
add
inc
mov
jecxz
int3
lea
mov
adc
sub
and
add
adc
idiv
add
call
mov
std
dec
call
call
out
add
jne
push
call
add
push
sahf
clc
pop
mov
mov
test
add
push
clc
mov
mov
push
add
jne
shll
add
incb
add
add
add
roll
incb
add
add
add
popa
add
pop
add
push
inc
je
inc
jns
inc
dec
incl
xchg
je
mov
dec
jo
pop
outsl
push
jne
je
dec
inc
sub
je
pop
insb
repnz
je
dec
arpl
test
jb
gs
dec
add
xlat
inc
cs
gs
inc
cld
add
roll
incb
add
add
add
popa
add
pop
add
push
add
mov
add
add
add
out
add
and
add
add
adc
add
add
add
add
xchg
cmc
je
mov
mov
inc
shlb
hlt
lcall
cmp
xchg
xchg
mov
mov
pop
adc
cmpsb
jns
loop
jmp
outsl
mov
rcll
dec
stc
call
shrb
xor
mov
xor
in
call
or
imul
adc
xchg
test
add
and
dec
lahf
repnz
mov
pop
scas
repnz
shrb
sbb
push
cli
lods
scas
pushf
lods
pop
lahf
in
or
aaa
sarl
sub
xchg
adc
jle
lcall
mov
jg
push
pop
rcrb
cmp
push
add
call
fcomps
sbb
ljmp
aaa
dec
rcrl
push
and
mov
and
lea
mov
sahf
mov
xchg
mov
ret
jns
xchg
mov
mov
push
dec
mov
jl
call
filds
inc
rclb
mov
adc
test
mov
int
aas
cmp
push
sub
mov
adc
out
cmp
xchg
fcompl
xor
mov
pop
dec
sbb
dec
pop
imul
xor
adc
adc
pop
add
xchg
xor
insl
cmp
sub
sbb
add
cvttps2pi
lods
inc
int3
pop
lock
ds
nop
push
cmpsl
or
sub
xchg
testb
dec
cs
cli
clc
fcoms
mov
xor
push
rol
ss
mov
mov
and
fwait
outsb
jno
xor
js
out
nop
mov
daa
xchg
outsb
inc
stos
test
xor
inc
mov
shll
pop
pop
jge
jmp
roll
movsb
cmp
imul
rorl
mov
bound
stos
lret
add
je
call
sbb
arpl
data16
inc
mov
sar
dec
and
insl
sub
sti
push
pop
sbbl
jecxz
les
fs
xchg
adc
and
popa
in
xchg
mov
sarb
add
stos
dec
addr16
xchg
mov
aaa
insb
dec
cltd
fsubl
mov
mov
arpl
jb
call
pop
push
lds
inc
jle
ret
jmp
or
movaps
lods
test
clc
or
pop
cltd
mov
pop
and
sbb
adc
aas
jno
cmpsb
iret
fs
jge
adc
int3
xchg
int
fstl
cmp
xchg
cmpsl
stos
sub
add
in
xchg
or
dec
fadds
stc
pop
mov
data16
mov
stc
roll
or
das
aad
test
mov
mov
call
pusha
cwtl
or
test
mov
ficomps
mov
dec
mulb
lcall
mov
js
or
rcrb
test
adc
loop
dec
inc
loope
cwtl
arpl
std
inc
stc
or
enter
inc
jns
frstor
popa
push
imul
jg
mov
ret
inc
roll
divb
cmp
outsb
mov
pop
lea
jno
lods
hlt
mov
imul
jge
andb
dec
aaa
ret
dec
orb
into
outsl
js
jl
push
iret
es
data16
dec
inc
mov
sub
ret
mov
and
pusha
cs
in
cmpsl
shlb
push
ds
jp
sbb
jl
mov
pop
inc
repz
inc
mov
mov
in
push
fdivs
and
lahf
pusha
ret
inc
mov
push
call
adc
fstpt
stos
insl
xor
add
sub
xchg
cltd
out
pop
jmp
aas
sub
push
lea
lods
jle
dec
pop
lahf
dec
mov
inc
aas
xchg
jg
xchg
jle
fdivrs
fcmovb
pop
sub
sbb
cli
mov
icebp
fildl
cmp
stc
jg
pop
insl
fbld
pop
push
mov
sub
outsl
xchg
dec
out
lock
mov
jns
fbstp
movsl
add
cld
out
rcrl
cltd
jae
fiadds
mov
cld
adc
mov
xor
inc
mov
sub
or
xor
push
lret
jno
jl
add
inc
mov
mov
ret
or
push
fiaddl
jp
add
pop
pusha
adc
jle
sub
lea
lcall
adc
jbe
mov
lods
push
aaa
negl
xchg
jns
inc
cmp
loopne
lret
lret
leave
mov
dec
imull
test
repz
cmpl
fimull
or
jns
fs
lahf
test
jns
jo
lcall
push
lret
ret
loopne
xchg
pop
es
sbb
fidivrs
sbb
loopne
add
sahf
and
inc
push
inc
jne
push
rcrl
rorb
xchg
jae
testl
jecxz
pop
in
mov
in
leave
outsl
sub
stos
les
fs
and
or
sub
pop
insl
out
push
div
jl
pop
xchg
inc
stc
pop
jp
int3
push
shlb
add
push
mov
push
push
inc
fisubrs
repnz
inc
pop
lds
outsb
notb
mov
pop
xchg
icebp
ds
daa
stos
hlt
jo
adc
mov
pop
or
adc
jo
nop
dec
jp
aas
xchg
rolb
outsl
sbb
ds
sarb
scas
pop
dec
stos
push
mov
mov
imul
cmp
sub
mov
cwtl
or
and
mov
test
scas
mov
pop
or
adc
aad
adc
addr16
idivl
dec
shrl
popf
jmp
insb
or
dec
mov
divl
pop
fucom
mov
xchg
pop
push
dec
stos
inc
sarl
enter
cmovp
outsl
mov
xor
jb
cmp
into
decl
in
stos
sbb
sbb
jno
mov
push
xchg
in
insl
dec
out
scas
popa
pop
call
lcall
daa
inc
test
push
mov
mov
xchg
jbe
xor
lds
push
add
outsl
scas
aad
flds
mov
std
mov
shll
jg
out
cwtl
xchg
enter
or
sub
cltd
cmpsb
lcall
jp
aas
jnp
adc
or
adc
ljmp
sbb
add
out
aam
mov
xor
test
jns
sahf
jmp
movsb
lods
adc
xchg
imul
jmp
je
jns
cmpsl
bound
ljmp
sub
jp
icebp
cli
mov
je
inc
cmpsb
mov
scas
mov
mov
movw
cmc
pop
xor
push
push
stos
lods
imul
rcll
arpl
and
adc
push
clc
xchg
andl
das
ja
jge
xchg
mov
in
jmp
mov
mov
adc
aad
popa
daa
pop
lock
mov
lret
roll
sti
add
je
and
call
xor
insl
cmpsl
add
movsb
icebp
cmp
xor
dec
cwtl
sarl
pop
pop
leave
shrb
inc
sbb
ljmp
mov
insb
jg
xor
add
imull
adc
cmp
mov
sub
movsb
push
insl
add
scas
sahf
mov
jl
sbb
mov
pop
dec
sub
ds
pop
out
xchg
mov
repnz
std
push
dec
icebp
popf
into
cmp
mov
push
adc
jp
adc
sahf
push
pop
pushf
pop
ss
cwtl
add
sarb
out
data16
dec
jmp
jae
jmp
cmp
push
jns
rorb
cmp
mov
cmp
and
jae
jle
fidivl
or
sub
mov
inc
jne
sbb
mov
fwait
xchg
ficoms
dec
dec
inc
mov
mov
in
inc
ja
push
js
mov
mov
push
fisubrs
lds
add
dec
mov
jbe
cld
jle
xchg
sahf
and
dec
inc
sub
xchg
dec
inc
pop
lea
xor
daa
shl
adc
sbb
lods
and
jg
inc
sub
sbb
icebp
inc
pushf
fildl
das
sarl
lret
cmpsb
cmp
sub
jno
push
and
mov
mov
jne
leave
clc
or
push
mov
ss
es
mov
xchg
lret
std
push
mov
idivl
ss
cmp
fcompp
pop
daa
ja
xchg
outsl
push
shlb
movsl
es
add
ret
stc
roll
dec
int3
sti
bound
mov
mov
enter
jae
call
loopne
xchg
js
adc
addl
adc
xchg
adc
cmp
hlt
xchg
xor
sbb
lret
dec
pop
mov
or
mov
jp
fwait
xchg
cmp
dec
push
mov
rcll
xchg
adc
add
lahf
ret
jne
pop
cmp
enter
pushf
pop
mov
enter
int3
std
sti
icebp
and
rcl
fcompl
jb
jbe
pop
cltd
fs
jne
imul
inc
pop
aam
dec
mov
add
mov
sub
sbb
dec
mov
loope
jmp
inc
lret
xchg
pushf
add
inc
jmp
mov
dec
cwtl
iret
xchg
or
xor
negb
mov
aam
inc
adc
stos
iret
xchg
mov
pop
xorl
inc
jp
jl
pushf
lahf
lcall
mov
or
repz
dec
insl
loope
mov
pop
jg
sub
loope
xchg
cmp
arpl
arpl
mov
jle
out
jo
sub
iret
xchg
gs
enter
xlat
into
jecxz
and
sti
jb
shrl
add
fucomip
sub
pop
je
cmp
xlat
push
lods
rol
in
jle
add
sub
inc
push
into
bound
loopne
sbbl
adc
dec
or
xor
dec
int
dec
xchg
and
pushf
sarb
xor
push
or
push
pop
in
mov
loop
outsl
add
push
movsb
mov
aam
cmp
inc
je
mov
inc
jns
push
test
popf
and
xchg
fidivrl
cmp
rorb
push
lock
mov
jl
mov
pop
rcll
push
inc
stos
xchg
xchg
adc
cmp
lret
pop
mov
mov
mov
rorl
dec
xor
out
arpl
out
add
jbe
jl
xor
sub
insb
call
inc
addl
repnz
leave
fadd
push
rclb
mov
push
mov
sub
je
repnz
xchg
mov
cmpsl
loopne
jmp
ret
or
mov
mov
jmp
imul
xchg
xchg
add
cmp
cmp
mov
dec
add
cli
into
add
add
rorl
fidivrs
bound
cltd
lods
call
pop
cld
dec
int
lock
jl
les
mov
pop
dec
ljmp
out
in
add
ret
mov
xchg
sarl
jmp
and
or
add
call
lea
loop
xchg
out
in
add
jle
cltd
xor
add
mov
inc
inc
mov
fisubs
leave
xchg
adc
mov
jmp
add
sbb
out
xchg
or
inc
dec
in
aaa
jp
out
mov
dec
mov
pop
xchg
ljmp
or
movsb
repnz
out
mov
test
fimull
pusha
dec
xor
xchg
cs
push
lret
cmc
push
xor
aaa
sub
jmp
xor
push
inc
les
mov
or
mov
jg
out
jbe
adc
movsl
push
jnp
in
aad
add
ret
push
testl
xor
pop
lea
xchg
mov
dec
sbb
lret
hlt
jnp
push
inc
shlb
movsb
shlb
mov
in
and
xchg
les
dec
stos
sbb
out
push
cltd
xor
vphsubdq
mov
or
aad
xchg
test
xchg
fnstsw
xchg
fwait
testl
addr16
loope
fwait
xchg
jge
pop
scas
xor
mov
pop
cld
mov
mov
cmpsb
xor
sti
jbe
cmp
mov
push
inc
mov
negl
loope
adc
jae
jl
mov
mov
xchg
xchg
pop
and
cwtl
ficoms
add
mov
mov
fmuls
push
or
das
insb
dec
lods
xchg
push
xchg
mov
test
mov
in
sbb
xor
mov
out
or
mov
in
mov
cmp
or
xor
dec
and
icebp
adcb
mov
stos
mov
sar
add
insb
cmpl
mov
adc
xor
and
dec
and
mov
jns
mov
add
sub
push
dec
les
inc
loope
out
push
in
mov
adc
dec
jno
sarl
xchg
mov
add
push
mov
test
sub
pop
mov
stos
adc
mov
mov
jg
push
icebp
push
xchg
mov
lret
divb
lret
and
mov
or
dec
xor
mov
lods
cmpsl
jae
and
pusha
xchg
push
and
or
sub
dec
xchg
and
lock
xchg
xor
aas
rorb
lock
xchg
adc
loope
mov
popf
roll
gs
notl
cmp
mov
lret
mov
popa
add
and
mov
cmp
push
out
adc
repnz
jecxz
jmp
xor
popa
jne
enter
out
mov
dec
and
sti
and
ljmp
js
enter
cmp
imul
pop
xor
cltd
mov
mov
or
icebp
mov
aas
insl
movsb
popa
imul
invd
jne
sbb
or
ja
mov
mov
and
bnd
and
jg
mov
dec
fisttpll
fucomi
fidivrl
cmp
adc
jns
jbe
mov
dec
sub
fwait
cmp
pushf
inc
mov
std
adc
insl
mov
jae
imulb
fimull
out
jnp
add
xchg
rsm
test
pop
jno
rcrl
movsl
or
ljmp
data16
add
jp
cmp
pop
push
leave
movl
loop
mov
test
adc
cmp
cmp
leave
les
repz
icebp
test
pushf
ret
xor
dec
xor
pop
fbstp
push
mov
stc
cltd
mov
xchg
sub
push
push
sarb
gs
jae
mov
push
jbe
fwait
aam
and
testl
dec
sbb
add
pushf
sub
pop
or
loop
inc
jl
es
cld
inc
xchg
pop
and
shl
popf
and
in
jno
mov
xor
sub
xor
std
xlat
xchg
aas
lcall
pop
sbb
or
add
or
shll
mov
subl
jo
fbld
xor
aad
cwtl
call
inc
daa
outsl
and
call
in
add
sahf
sbb
stc
pop
out
dec
adc
imul
add
inc
xor
xchg
repnz
out
dec
aad
popf
sub
mov
test
jo
repnz
xchg
test
pop
shll
mov
xchg
stos
cmc
xchg
scas
lcall
mov
mov
mov
sub
and
ja
cmc
jp
cltd
jg
aad
fsubl
idiv
adc
cli
mov
cmp
cmpsl
jnp
sbb
push
int
jle,pt
or
repnz
dec
adc
jnp
in
outsb
bound
ret
and
xchg
xchg
inc
loope
ss
mov
adc
jbe
cmp
daa
sbb
mov
push
mov
sub
push
mov
insb
jno
leave
sub
testl
andb
ds
mov
xchg
fcmovu
adc
es
jns
lods
adc
insl
and
in
adc
or
das
test
aam
inc
outsb
adc
movb
mov
cmp
sub
jle
cld
push
inc
cmpsl
mov
dec
ret
mov
push
cld
in
mov
imul
mov
sbb
jbe
movsb
sbb
adc
xchg
mov
dec
mov
jecxz
test
insb
jne
mov
mov
lret
xchg
cltd
inc
ret
or
inc
mov
lret
pop
mov
mov
aam
test
out
jnp
fsubl
jno
in
pop
mov
dec
cmpsb
mov
and
or
rol
sti
dec
sbb
mov
aas
fcmovbe
mov
test
xchg
add
push
sbbl
ds
imul
nop
adc
xchg
xlat
mov
lret
cmpsb
or
pop
dec
adc
sahf
mov
test
dec
push
aas
ficoms
mov
sarl
movsl
or
xlat
xchg
ds
cs
and
push
adc
nop
inc
push
ja
outsb
clc
xor
mov
mov
into
cmp
xlat
insl
fsubr
cmc
inc
leave
mov
and
call
lods
mov
push
das
addl
shlb
lahf
into
popa
dec
cli
adc
mov
mov
test
push
imul
lret
out
sub
inc
jns
mov
in
in
sbb
aas
or
jae
jae
ljmp
mov
fptan
icebp
jl
cmp
add
sub
sub
cwtl
cmpsb
sub
mov
stos
sub
popa
test
and
stos
push
sbb
pop
loop
push
in
scas
in
jle
push
push
jmp
loop
mov
jle
pushf
mov
imul
or
pop
sub
mov
movaps
iret
and
jl
out
push
cmp
pandn
cmp
push
sahf
push
push
gs
test
repz
xor
mov
or
mov
jge
icebp
popf
je
cmp
mov
test
and
jl
addb
jb
or
add
xor
and
cli
jp
mov
popa
adc
sahf
stos
pop
in
std
negb
or
pusha
cmpsb
cs
stos
gs
mov
pop
arpl
sbb
dec
fistpl
int
pop
rorl
negl
out
aad
fwait
mov
pop
stos
out
pop
fistpl
push
or
xor
dec
inc
dec
xlat
divb
subl
xchg
dec
add
xchg
push
mov
int
inc
mov
pop
sbb
pop
sti
hlt
cmp
lods
movsb
stos
sub
aad
in
mov
lcall
xlat
jo
xchg
popa
les
dec
xchg
push
xor
pop
pop
sub
call
fcomp
mul
cmp
icebp
push
add
cli
sub
mov
and
shlb
stos
lods
lods
mov
jns
pop
data16
jns
cmpb
sub
and
insb
add
jb
insl
lock
jl
sbb
lret
leave
mov
aaa
in
bound
fldcw
shl
nop
arpl
push
cmp
push
inc
mov
in
jae
js
and
or
test
lds
jae
sbb
jecxz
mov
hlt
cmp
aad
mov
test
xor
in
fs
fsub
dec
in
push
shrb
xlat
push
fnstcw
insb
ja
jge
add
pop
insb
adc
bound
add
jb
data16
faddl
into
lret
fildll
aaa
aad
loope
mov
or
xor
push
mov
outsl
js
xor
fcoml
negl
leave
and
rolb
cmpsl
push
or
aaa
dec
leave
cmpl
rclb
sti
add
pop
pop
imul
fstpt
dec
sbb
cmc
mov
ror
mov
mov
xor
xchg
pop
fwait
imul
dec
sti
lret
mov
loop
cs
jmp
mov
sbb
testb
fadds
bound
push
xchg
out
shr
or
cmpsl
in
rorl
leave
lods
xor
call
out
popa
loop
mov
and
and
push
and
and
mov
sbb
jne
jl
or
call
out
sub
mov
add
fdivr
sbb
mov
in
pop
mov
xor
xor
arpl
mov
xor
sbbb
fisubs
push
shll
andl
mov
dec
mov
testb
outsb
xor
sub
sbb
add
xor
jno
sbb
test
mov
dec
loope
loop
insb
mov
cmc
jg
cmp
aad
in
mov
jo
in
xchg
filds
mov
pushf
not
sub
jnp
mov
push
fimull
mov
inc
in
dec
xor
xor
xchg
lock
jecxz
pop
fldenv
push
stc
sub
dec
xchg
aas
rcrl
xor
xor
insb
cltd
dec
stos
cmpsb
xchg
push
std
inc
test
dec
out
cmc
fs
dec
xchg
and
jl
fidivs
push
pop
sub
test
scas
ds
dec
sub
pop
push
lahf
add
stc
cli
mov
add
mov
xchg
pushf
mov
leave
mov
pop
mov
dec
add
hlt
mov
stos
jne
repz
mov
adc
test
sub
add
jbe
dec
outsl
adc
fmul
test
pop
and
jno
cmp
es
dec
shlb
cwtl
push
test
sbb
outsl
out
out
negb
mov
sub
mov
or
aam
jne
xchg
dec
dec
addr16
push
mov
lock
cmc
cmp
mov
aas
fistps
or
popa
cmp
xchg
sub
add
push
mov
in
movsb
pop
add
cmp
lret
js
mov
mov
aad
imul
cld
pop
jo
nop
test
jns
jnp
fsts
cs
jge
jle
push
and
pop
ret
xchg
outsl
test
stc
pop
cld
pop
dec
and
mov
xchg
nop
add
cmp
lcall
pop
sub
mov
test
adc
xor
int
push
ja
dec
fisubs
fidivs
push
xlat
pop
loop
pop
mov
imul
mov
add
imul
inc
je
jbe
and
sbb
movsl
xchg
leave
inc
dec
in
mov
push
mov
xchg
dec
cmpsl
loopne
shll
fimuls
mov
and
add
test
ss
pop
xchg
jl
je
cld
cwtl
push
inc
hlt
pop
push
dec
inc
mov
and
mov
rcrb
jb
mov
push
or
or
insl
sbb
jns
gs
mov
mov
adc
popa
and
ljmp
bound
andb
pop
push
ret
push
lods
sub
cwtl
outsl
and
scas
sbb
push
in
bound
fsubl
testb
jb
insl
enter
mov
fdivrs
cwtl
enter
xor
mov
sbb
mov
inc
push
insl
pop
stc
iret
adc
push
jle
sbb
clc
jl
cmpsl
or
call
testb
mov
fs
movsl
das
jno
jb
cltd
lods
leave
ljmp
mov
dec
js
mov
adc
and
mov
mov
movsb
xor
lock
sub
sub
cmpxchg
sbb
mov
sbb
stc
dec
out
stos
ret
scas
je
mov
sbbb
xchg
adc
jl
out
mov
mul
lret
ljmp
arpl
mov
test
cmp
in
leave
xchg
fisubrl
adc
data16
push
sbb
in
inc
in
xor
adc
inc
jle
std
inc
dec
mov
stos
push
out
data16
loopne
inc
add
imul
sub
push
add
cmp
imul
adc
cmc
xchg
dec
out
loop
cmp
xor
mov
ja
cld
or
mov
arpl
sub
jl
push
ss
add
add
add
add
and
add
add
adc
add
add
add
add
add
add
fiadds
add
add
push
add
add
add
add
jno
add
add
add
add
add
incb
add
add
add
popa
add
pop
add
push
add
mov
add
add
add
out
add
and
add
mov
mov
int3
int3
int3
int3
int3
int3
int3
int3
int3
