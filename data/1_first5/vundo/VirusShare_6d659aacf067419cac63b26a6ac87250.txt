pop
or
add
mov
add
or
mov
add
add
add
or
add
add
add
iret
add
add
or
lock
mov
add
addb
pop
push
add
or
add
or
fs
add
or
mov
repnz
add
inc
add
or
jbe
and
or
add
loopne
cmp
adc
or
add
fadds
jo
mov
rolb
or
add
rolb
add
add
add
add
pop
rolb
push
and
scas
or
add
inc
add
add
add
push
adc
xchg
add
add
lock
push
and
push
push
and
xor
inc
add
add
addb
add
or
add
pop
loopne
sub
push
rolb
pop
addb
or
or
add
add
add
add
pop
jo
or
rolb
orl
add
or
rolb
pop
inc
add
nop
add
add
add
repz
add
pop
loopne
in
or
add
add
and
xchg
add
add
jo
push
add
add
pop
mov
add
or
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
gs
rolb
int3
push
nop
add
add
add
rolb
push
addb
add
add
addb
or
inc
add
or
add
jo
mov
or
add
push
lock
or
lock
add
adc
sub
rolb
push
add
add
or
add
add
add
add
add
or
add
add
add
movups
pusha
or
lock
mov
add
add
rolb
add
add
mov
push
popl
sbbb
addl
subb
xor
push
popl
addl
call
movl
test
jne
subl
push
popl
ret
push
popl
push
popl
push
orw
push
addl
push
popl
mov
andw
pusha
subb
call
push
popl
mov
addb
push
push
popl
addl
orw
andl
addl
addw
movb
push
movb
call
orb
cmpl
jne
movw
xorw
call
push
popl
subl
push
orl
addl
orl
movl
addl
push
popl
subw
push
push
popl
andl
call
movb
subw
cmpl
jne
xorb
call
push
popl
push
popl
ret
addb
jmp
push
popl
orw
xor
andl
mov
push
popl
addb
shl
push
popl
push
popl
mov
push
popl
shl
push
popl
push
popl
mov
subw
push
popl
cmp
jne
push
popl
push
popl
call
push
popl
popa
orw
call
push
popl
push
push
popl
addl
push
popl
addl
push
popl
subl
push
movl
xorb
call
orl
movb
push
push
push
not
not
lea
lea
mov
xor
pop
push
popl
mov
push
popl
addl
shl
push
popl
push
popl
push
xorb
xor
subl
push
movb
push
popl
call
xorl
orl
push
push
popl
xorl
mov
push
popl
addw
push
push
popl
push
popl
jmp
subl
pop
addw
mov
andl
push
push
popl
addw
push
push
popl
push
popl
push
push
popl
mov
subw
mov
push
popl
rep
orl
pop
andl
movl
pop
push
not
mov
add
xchg
push
dec
lea
add
mov
sub
xchg
andl
subl
xor
push
popl
movl
jmp
sbbw
orl
sub
push
popl
mov
orw
sub
andl
push
popl
sub
addw
addw
mov
xorb
sub
subl
subl
or
jne
push
popl
xorl
add
xorb
push
popl
jmp
xorl
orb
mov
sbbl
push
popl
shr
push
popl
sbbw
shl
orw
mov
push
popl
jmp
movw
subb
sub
xorw
xorl
mov
push
popl
cmp
jne
sbbl
mov
push
popl
add
andl
xorb
cmpw
jne
orb
andl
ret
movb
push
push
popl
xor
addw
pushl
subb
andw
pop
push
popl
lea
subw
or
sbbl
xorl
mov
andl
mov
orl
orb
lods
subl
andw
mov
xorw
pop
addb
ret
movw
push
subl
movb
mov
addw
orl
add
push
popl
push
xorl
push
popl
push
push
popl
push
orl
push
push
popl
push
subw
push
popl
mov
push
popl
mov
push
popl
xorl
add
push
popl
push
popl
pushl
subl
mov
push
popl
add
movb
push
popl
add
push
popl
mov
push
popl
add
push
popl
xor
orw
push
popl
lea
sbbw
movw
mov
orl
push
popl
add
push
popl
mov
xorw
andl
xor
push
popl
addl
rol
push
popl
push
popl
xor
push
popl
inc
subb
cmpb
jne
andl
push
popl
cmp
je
push
popl
inc
push
popl
subw
cmp
jb
push
popl
orb
mov
push
popl
andl
add
push
popl
movzwl
orl
mov
orl
xorw
add
orl
subl
mov
andb
add
push
popl
subl
pop
sbbw
movl
cmp
jbe
orb
cmp
jae
andl
movw
pushl
push
popl
pushl
orb
push
push
popl
push
popl
addl
xorb
push
popl
addl
addl
sbbl
pushl
addb
call
movl
andw
call
orb
pop
push
popl
pop
subb
subw
pop
push
popl
pop
push
popl
pop
push
popl
movl
leave
andl
subw
ret
push
popl
call
xlat
pop
jo
cvtps2pd
pop
pop
fistl
mov
out
ljmp
cmp
inc
fcoms
repnz
inc
or
dec
fldenv
cmp
jno
cli
ljmp
das
mov
shr
jns
insl
xchg
push
dec
sti
xlat
mov
cltd
pop
jns
mov
imul
mov
sbb
push
and
jle
sarl
cwtl
pusha
popa
outsb
mov
popl
jmp
js
out
jle
inc
jl
push
jp
sbb
lret
mov
out
xor
push
rcrl
pop
jp
sub
insl
jle
pop
xchg
xchg
rcl
aam
mov
outsb
cmpsl
sub
and
xor
loope
xchg
pop
push
sti
pop
mov
sbb
insl
and
into
jp
loop
jle
rcll
inc
dec
aaa
out
or
xor
pop
test
mov
psraw
aad
lods
push
shrb
mov
shlb
lahf
ljmp
mov
jge
sbb
mov
mov
push
data16
pop
shrl
adcl
pusha
pop
ds
ljmp
jle
rol
out
sub
lea
std
popl
jno
leave
mov
or
es
flds
jmp
xchg
movsb
and
adc
dec
xchg
push
inc
sti
sub
xchg
mov
orb
mov
cmp
xchg
dec
sar
in
adc
cmp
mov
test
and
popa
int3
cmpsl
sub
add
xchg
dec
popa
sti
push
popf
mov
pop
andb
mov
lds
mov
nop
mov
push
shll
xchg
mov
fdivrs
subl
push
jg
push
rcrb
test
repnz
aam
test
sub
outsl
vmwrite
jge
rcr
pop
jns
and
jne
add
inc
insl
push
sti
or
dec
fiaddl
iret
imul
shl
inc
mov
rep
repz
lcall
sar
data16
mov
xchg
sti
shrb
xor
jge
roll
dec
adc
repz
sar
pop
push
aad
call
push
rorb
gs
xchg
xchg
push
mov
fsubs
loop
popa
and
add
aas
push
rcl
inc
xchg
js
rolb
jo
loopne
fmuls
push
fisttpll
pop
sbb
cwtl
mov
jge
sbb
aam
imul
in
pop
xlat
cmp
dec
into
outsl
insl
neg
inc
fdivrs
xor
dec
xor
jecxz
faddl
jge
test
shlb
not
gs
sbb
ja
add
cmp
les
popf
jnp
fbld
push
in
cmc
dec
xchg
xchg
int
pop
dec
pop
mov
pop
push
fdecstp
dec
sub
ja
xchg
inc
lock
into
rolb
decl
test
inc
stc
jns
addr16
cs
push
out
pop
xlat
aaa
push
push
addr16
mov
inc
insb
adc
adc
mov
out
dec
nop
mov
dec
ss
fldcw
mov
test
cli
add
mov
outsl
and
ds
fs
sub
mov
outsb
sarl
mov
jns
inc
aaa
test
sbb
push
add
hlt
jle
mov
push
test
pushf
dec
and
orb
shl
out
pop
imul
pusha
test
sbb
mov
int
inc
shlb
stc
sbb
shlb
sbb
lar
jns
out
test
mov
pushf
and
mulb
scas
fdivl
pusha
dec
xchg
scas
xor
scas
jb
push
outsb
cmpsl
push
jl
and
push
push
rolb
int3
cmp
call
pop
pop
mov
sub
push
mov
addr16
dec
and
outsb
inc
popa
repz
stos
rorl
jno
push
inc
insl
jnp
push
mov
dec
push
mov
ret
popa
outsb
push
mov
test
shlb
adcl
arpl
jns
push
jecxz
mov
dec
inc
mov
add
fisubs
pushf
or
fcmovnu
loopne
dec
insb
mov
rorl
sahf
cli
in
dec
xchg
jge
outsl
sbb
inc
push
lahf
fs
mov
jp
fs
jb
sub
push
rolb
inc
cmc
out
repz
push
inc
sub
mov
push
jo
add
lods
or
int3
aam
test
sbbl
sarb
mov
cmp
insl
inc
popl
mov
xchg
pop
scas
cmp
inc
gs
fcmovnb
jnp
cld
in
dec
lea
outsl
sub
call
out
out
nop
sbb
jle
insl
lds
xlat
inc
mov
sbb
cs
push
push
movsl
dec
fsts
nop
jno
pop
adc
cmp
stos
sbb
icebp
jns
push
xor
fsubrs
fldl
jl
push
int3
icebp
jb
jae
ret
pop
outsb
xor
inc
iret
loopne
cmp
imul
jg
push
outsb
and
mov
sbbb
mov
jmp
int
adc
mov
jne
rolb
pop
cmp
adcb
aad
xchg
sbbl
scas
sarl
out
adc
in
jns
cltd
dec
push
inc
out
sahf
int3
xor
sbb
insb
lods
mull
xchg
jne
mov
lret
mov
mov
inc
insb
rorb
push
xchg
dec
pop
outsb
arpl
pop
or
jae
xchg
mov
mov
sti
pop
aaa
or
jns
push
xchg
fs
jae
push
sbb
push
fisttpll
stos
aad
outsb
cmp
push
outsb
push
mov
pop
addr16
dec
rcll
xor
pop
add
push
fisubs
shlb
mov
mov
inc
mov
aam
push
dec
cmp
fsubp
dec
xchg
imul
mov
xor
mov
mov
jns
mov
push
mov
sbb
pop
mov
sarb
inc
dec
cmp
pop
cmp
sub
dec
dec
int3
imul
pop
fidivs
ja
push
adc
mov
mov
outsl
mov
push
outsb
jmp
mov
outsb
rclb
pop
pusha
mov
cmp
inc
mov
add
cmp
sub
out
aam
pop
mov
jne
popf
stos
sub
repz
push
ljmp
pop
xchg
mov
pop
gs
testl
stc
inc
sub
stos
movsl
enter
into
inc
lret
sub
fcoml
lods
xorl
sub
mov
pop
push
outsb
cmp
sub
loop
insl
nop
mov
scas
inc
pop
jo
adc
xchg
mov
lret
inc
cmp
cli
in
inc
or
loope
push
stc
push
dec
fs
nop
fnstenv
sbb
lds
aad
mov
xor
fsubl
movsl
dec
fxch
push
out
push
notb
hlt
xchg
jb
push
movsl
xor
xchg
imul
mov
push
outsb
push
out
insb
rorb
out
adc
std
and
pop
push
and
in
pop
mov
sub
push
out
sbbl
js
sar
in
arpl
fnstenv
flds
es
outsl
mov
lret
nop
dec
mov
inc
mov
cmp
popf
jecxz
pop
dec
mov
xchg
jg
and
nop
jecxz
adc
in
push
ret
push
cli
int
cmp
ds
fsubrs
loop
ljmp
out
andb
cmp
adc
mov
rorb
roll
and
in
leave
scas
into
cmpsb
cmpsl
mov
out
loopne
mov
int3
add
pop
jb
sub
jmp
lret
push
notb
cltd
push
dec
nop
xlat
mov
xor
push
jns
mov
imul
cmp
or
rcrl
repz
inc
das
push
lods
cs
sar
sbb
nop
push
jl
in
mov
outsb
addr16
ds
sti
mov
xor
lds
mov
xor
pop
outsb
push
rcrb
scas
call
fs
mov
out
add
orl
bound
mov
and
adc
rcll
xchg
stos
sub
sub
jae
daa
cmp
adc
dec
xchg
push
aas
sti
and
and
mov
jae
xor
shrb
les
in
jns
xchg
in
xchg
iret
xlat
xchg
inc
repnz
sbb
sub
ja
imul
push
mov
dec
push
not
test
shlb
jmp
outsb
push
rolb
xorb
cmp
inc
pop
outsb
push
rcl
aam
int3
jo
out
xchg
inc
gs
pop
mov
cmp
jae
call
outsb
daa
aaa
inc
sub
ds
shr
pop
xlat
push
xchg
push
jl
mov
jno
insl
neg
inc
jge
addr16
xchg
xor
loop
xchg
push
sti
sub
push
mov
clc
popf
mov
jp
leave
pop
aam
pop
rolb
sbb
addr16
dec
jg
jae
xlat
leave
jp
in
dec
stos
mov
push
dec
enter
push
shlb
add
scas
jb
add
dec
pop
xchg
xchg
mov
jle
pop
xchg
cmp
arpl
mov
sub
adc
in
pop
xlat
dec
sbb
adc
neg
inc
aam
addr16
push
xchg
push
in
pop
xlat
aas
push
push
dec
lea
neg
inc
add
iret
aad
outsb
xor
ja
rolb
pop
push
insb
sti
aam
pop
insl
aad
mov
jge
sarb
mov
out
inc
enter
xor
insl
js
sahf
dec
lea
in
fwait
ret
cmp
mov
shl
sbb
insb
repnz
push
lret
shlb
mov
loopne
dec
xor
outsl
mov
and
mov
sarl
xor
lds
xor
jge
pop
test
sub
cmp
stos
and
ds
pop
or
mov
imul
xor
insb
cli
rorl
jb
push
inc
lock
mov
adc
test
inc
fdivl
in
loope
xchg
push
xchg
mov
aam
int3
sbb
call
adc
inc
hlt
movsb
pusha
sub
xchg
pop
push
out
pop
lret
sub
or
shr
pop
xlat
pop
pop
push
addr16
mov
neg
dec
std
and
andl
push
cmp
push
aad
call
ljmp
addl
repz
inc
int3
in
adc
cwtl
pusha
popa
ss
cmp
mov
pop
pushf
cmpsb
es
inc
jo
mov
dec
fdivrl
lret
aaa
fbld
idivb
mov
sub
inc
int
push
jno
rcl
inc
cmp
jge
push
mov
leave
jnp
cmp
scas
sub
push
ret
cmpsb
mov
dec
sub
or
mov
shrl
cmp
mov
mov
hlt
call
dec
outsl
in
dec
popa
xor
cli
pop
push
outsb
mov
out
shll
pop
insl
out
lods
xorl
imul
dec
pop
mov
mov
outsb
pop
push
inc
pop
mov
mov
mov
rorb
ret
rcll
xor
insb
icebp
push
out
inc
aam
fnstcw
out
jl
fwait
cmp
xchg
push
lahf
xchg
add
js
mov
leave
shll
sub
xor
out
clc
insl
sub
testb
add
inc
jge
adc
and
cmpsb
arpl
sbb
mov
mov
pop
rcll
xor
push
add
push
cwtl
cmp
rolb
lea
fnstcw
and
hlt
call
sub
and
xchg
stos
sub
push
rcr
outsl
popa
pusha
mov
mov
xchg
int3
cltd
stos
pop
mov
inc
rorb
ret
or
lds
pop
sbb
sti
pop
push
fldt
clc
push
out
inc
data16
fnstsw
add
das
sbb
int
jl
fcoms
add
jae
imul
cmp
xor
sbb
outsl
out
push
negb
dec
aaa
pop
dec
mov
sbb
push
shl
sub
scas
mov
shll
lea
add
test
xchg
xchg
test
leave
scas
les
xlat
ss
push
inc
pop
jns
clc
outsl
push
neg
inc
lds
push
and
movsb
or
out
in
push
movsb
rcrb
subl
pop
push
ds
sbb
frstor
lods
hlt
call
inc
mov
and
aad
addr16
enter
in
pop
xlat
aaa
test
sbb
test
outsl
pop
neg
inc
xlat
sub
and
xlat
movsb
or
push
loope
mov
out
xchg
nop
mov
dec
xor
insl
pop
aaa
lock
aas
hlt
push
aaa
fyl2xp1
test
cmp
jle
daa
loop
rcrl
filds
xor
mov
cmp
outsb
cmpsl
push
addr16
jns
push
jecxz
mov
push
stos
mov
mov
out
jl
mov
test
gs
fbstp
mov
pop
gs
cwtl
mov
out
stc
pusha
push
lods
gs
sar
repnz
push
test
fistl
incl
and
shlb
xchg
dec
cmp
sub
cmp
fcmovbe
jnp
cltd
das
push
mov
adc
ja
mov
sub
icebp
push
fucomi
pop
xlat
insb
pop
push
outsl
dec
pop
scas
repnz
test
fisttps
and
les
pop
push
outsb
mov
mov
loop
repnz
mov
mov
daa
adc
scas
insb
or
fwait
scas
mov
add
mov
lret
mov
xchg
inc
leave
loop
xor
fsubrl
xorb
fistps
cmp
cmpsb
jae
arpl
outsb
push
outsb
insb
add
or
mov
mov
cs
mov
sub
inc
or
call
jge
mov
roll
pop
addb
outsb
insl
std
bound
add
and
xor
outsl
icebp
cs
jb
je,pt
aam
cmc
popf
inc
cmp
or
sbb
dec
xchg
xlat
outsb
out
inc
arpl
adc
or
pop
push
addr16
push
sub
mov
xchg
dec
add
aam
pop
pusha
mov
cmp
leave
inc
or
inc
dec
mov
add
jl
xchg
mov
push
arpl
js
bound
pusha
fs
inc
or
hlt
dec
xchg
add
push
movsl
out
outsb
aas
pop
leave
faddl
ja
pop
insl
lds
push
mov
xor
add
pop
popf
and
push
push
movsl
dec
fld1
arpl
mov
dec
mov
test
bound
fidivl
xchg
sub
movsb
aam
xor
or
cmc
inc
and
repz
inc
xor
loope
xchg
pusha
fs
leave
and
jge
add
nop
pop
sub
test
int
shll
jbe
or
sarl
pop
mov
fsubrl
imul
mov
and
stos
dec
mov
lret
jmp
leave
jae
and
and
xlat
push
mov
insl
in
imul
cmc
out
or
hlt
dec
pop
pop
pop
lcall
dec
sub
cltd
push
bound
jl
mov
addr16
lods
dec
or
jle
lsl
mov
rcl
mov
lret
mov
inc
cli
addr16
dec
lret
jmp
shlb
out
add
orl
xchg
push
out
xor
std
and
loopne
mov
mov
in
shlb
pop
stos
jne
loopne
inc
fs
sti
mov
outsb
push
rcrb
idivl
stos
push
aam
pop
mov
lock
iret
aam
dec
std
xchg
ret
jb
and
das
mov
lods
mov
mov
jno
bswap
jecxz
std
and
pop
push
push
jmp
mov
mov
iret
sbb
mov
cmp
cmp
test
xchg
scas
das
adc
data16
jb
dec
jns
stos
xor
pop
aas
js
dec
movsl
mov
out
imul
outsl
or
popf
gs
push
jno
inc
mov
xor
mov
push
sar
pop
aam
in
mov
bound
js
inc
jge
push
push
loop
in
shl
adc
stc
or
push
outsb
cmp
sub
cmp
inc
xor
and
xlat
jl
loopne
cmp
andb
jae
rcl
pop
push
aad
pop
jge
inc
in
push
std
negb
lods
idivb
hlt
jnp
clc
daa
push
jp
into
test
and
pop
insb
add
or
mov
data16
clc
mov
sbb
cli
add
dec
mov
jne
ja
dec
xchg
call
loop
and
pop
cmp
lret
and
jbe
aad
sahf
mov
out
adc
dec
inc
push
xchg
out
inc
scas
add
add
repz
call
movsb
mov
popl
insb
lahf
insl
int3
mov
mov
sub
flds
inc
xor
sarb
push
outsb
jno
adc
sti
mov
xchg
stc
outsb
fcmovnb
xor
or
xchg
fs
pop
cld
jae
jg
mov
push
stc
inc
dec
addr16
mov
lock
xchg
das
add
outsb
pusha
and
in
shlb
bound
imul
push
aad
mov
xlat
cmpb
inc
pop
jecxz
jne
fprem
out
xor
aas
ret
push
mov
inc
iret
loop
outsb
fsubrs
mov
mov
hlt
jle
imul
in
pop
jno
xor
dec
xlat
inc
xor
icebp
int3
out
roll
adcl
rcr
es
push
or
cmp
loope
xchg
test
lret
cmp
mov
jns
mov
dec
insl
in
mov
jo
rcl
insl
jbe
pop
sub
mov
or
sub
add
jo
popa
add
shll
fidivl
add
bound
outsb
push
push
insb
sti
xlat
dec
sbb
pop
stos
add
jnp
pop
mov
mov
xlat
dec
push
cmp
ds
sbb
add
mov
call
dec
xchg
pop
outsl
pusha
sub
test
rcl
outsl
pop
pusha
mov
cld
test
push
test
jp
xchg
icebp
ds
orl
out
clc
mov
xor
pop
cwtl
inc
sbb
fstpl
jne
or
hlt
dec
cli
or
push
xchg
clc
scas
mov
mov
int
aam
pop
xchg
or
jo
push
test
inc
or
dec
mov
ficoms
or
push
leave
shll
out
in
out
jbe
movl
mov
mulb
adc
mov
sbb
shlb
hlt
mov
adc
add
push
fisubs
sahf
push
rcl
cmp
lea
inc
inc
jge
jb
xchg
push
pushf
mov
cmp
test
mov
insl
mov
and
imul
sarl
fcmovnbe
add
outsb
movsb
and
stc
loope
xchg
pop
ret
sti
cmp
sbb
orb
mov
lods
mov
or
push
outsb
sbb
inc
aad
add
push
mov
insb
repz
ret
call
ljmp
fisubl
sub
lcall
dec
aad
xchg
and
lods
jbe
in
pop
mov
add
jp
push
outsb
sbb
ret
and
cmp
or
outsl
fisttpll
adc
sub
xchg
out
stos
repz
repz
icebp
cwtl
pop
or
jp
out
inc
imul
inc
or
mov
mov
push
push
inc
inc
fsubrs
inc
push
fucomi
nop
icebp
jecxz
dec
lahf
jo
in
xlat
into
icebp
inc
gs
mov
jle
xor
push
and
pusha
pop
aaa
mov
mov
gs
mov
lods
scas
or
cmp
xchg
in
jns
push
out
push
rcl
insl
jns
insb
out
mov
leave
mov
mov
cld
adc
stc
lds
fimull
push
into
fsubs
push
mov
insl
lds
add
xor
mov
fmul
popf
lods
lods
push
push
movsl
dec
flds
jge
shl
ja
push
push
xlat
mov
add
insb
fidivl
lret
jg
adc
ljmp
movl
dec
addr16
pop
loope
add
loop
mov
sti
mov
int
jne
cmp
cld
sbb
sub
mov
sub
in
xor
loope
xchg
dec
imul
mov
dec
adc
je
into
sarl
pop
or
jns
push
pop
adc
das
cmp
scas
cmp
add
orb
inc
xor
adc
add
sbb
cmp
in
cli
fnstcw
fadds
insb
cmp
data16
mov
scas
jge
sbb
ss
dec
adc
aam
lods
jns
loop
sti
jb
adc
pcmpgtw
inc
bound
xor
addr16
xor
mov
sbb
cmp
std
in
dec
add
sahf
inc
or
hlt
dec
pushf
dec
imul
jne
test
andb
cmp
sahf
lret
mov
lret
jmp
and
ret
add
pushf
loopne
dec
push
sub
dec
pusha
gs
lock
ficompl
mov
mov
inc
push
jecxz
mov
mov
daa
in
aad
lods
push
mov
lret
jmp
jo
and
mov
sub
mov
dec
xchg
pusha
push
cmp
nop
pop
fdiv
test
je
pop
rcl
ja
mov
es
push
lods
in
pop
xlat
adc
mull
in
push
neg
inc
lret
scas
xchg
insl
sbb
mov
outsb
push
xchg
cwtl
mov
push
call
sbb
ljmp
sub
adc
hlt
add
and
out
xor
jmp
jecxz
dec
cltd
add
mov
cmp
fcoms
dec
mov
push
push
insl
sub
roll
lahf
sbb
jecxz
adcb
dec
push
and
stc
cmp
aad
xlat
mov
xor
jno
rolb
pop
push
xlat
xchg
dec
std
pop
pop
pop
push
mov
test
movsb
movsb
lods
shll
push
iret
in
pop
xlat
push
rcll
push
and
gs
inc
inc
mov
push
push
inc
cld
xlat
mov
fistps
stos
dec
mov
int3
in
in
loope
imul
ds
ljmp
aad
shll
xor
mov
pop
mov
sub
ja
nop
fdivl
clc
lret
adc
addl
mov
push
jg
sub
jecxz
dec
lahf
cmc
stos
dec
mov
jb
jl
repnz
cmp
cld
fildl
in
push
sub
mov
mov
test
pusha
bound
loope
jno
js
pop
fiadds
pop
lods
add
mov
push
fldl
outsb
push
shlb
pop
gs
jo
push
lds
jl
sbb
mov
out
dec
idivl
cld
inc
pop
outsb
push
shlb
pop
clc
mov
xor
aam
mov
sub
mov
ss
clc
enter
ja
imul
shl
mov
xchg
and
sti
test
add
mov
mov
cs
fincstp
pop
jo
divl
sbb
xlat
dec
push
popl
xchg
cmc
cmp
and
pop
cli
jge
das
ror
jecxz
shlb
ret
xorl
xchg
inc
outsb
push
arpl
sub
popf
adc
mov
inc
cld
std
repz
outsb
push
aad
ds
inc
push
jecxz
mov
fcomp
scas
dec
adc
hlt
dec
sahf
outsb
mov
into
icebp
gs
fsub
and
out
rorl
lret
jecxz
shlb
ljmp
std
adc
mov
inc
add
dec
jecxz
cmpsb
or
push
addb
mov
pop
mov
push
icebp
sub
jp
or
lods
arpl
cli
mov
mov
out
inc
push
paddusw
add
shl
adc
aam
pop
push
outsb
out
fisttps
scas
leave
cmpsb
pop
pop
xor
jecxz
jne
aad
jns
jne
push
push
test
cwtl
mov
movsl
xor
sarb
jl
jae
rolb
test
sbb
test
sbbb
repz
lcall
in
mov
addr16
xor
sub
jg
pop
push
jg
sub
test
in
addb
add
fsubrs
mov
mov
mov
in
inc
fs
bnd
push
add
jmp
sub
fs
sahf
lea
rcll
mov
cld
mov
inc
jb
pop
cwtl
stos
pop
mov
int3
jmp
jp
sti
bound
ljmp
js
inc
lcall
aam
sub
addr16
xchg
mov
rorb
jno
pusha
push
outsb
mov
scas
fistl
rolb
mov
insb
call
dec
sbb
mov
jb
loop
je
aad
mov
inc
jo
mov
pusha
mov
add
cmp
add
stos
xor
xor
xchg
mov
int3
insb
or
adc
inc
dec
into
mov
in
orl
loop
sbb
sbb
stos
or
xor
xchg
jo
push
mulb
loope
xchg
jb
push
movsl
xor
xchg
dec
push
rolb
xchg
jbe
jecxz
rcll
cltd
add
xchg
cmp
das
jp
test
cmp
push
dec
or
xchg
sar
xor
fwait
addr16
ds
scas
dec
sbb
outsl
insl
loop
mov
pop
push
shll
push
movb
dec
aam
adc
mov
jp
push
mov
rolb
mov
xchg
dec
gs
adc
jg
sbb
pop
mov
pop
push
sbb
jns
push
stc
cmpsb
insl
jbe
cmpsl
ljmp
mov
cmp
sarb
aam
adc
sbb
mov
fmuls
push
lods
mov
inc
outsb
push
rorb
mov
sbb
push
dec
xlat
jmp
adcl
arpl
js
inc
cmc
arpl
inc
jge
sbb
int3
sbb
mov
cmp
lock
xchg
stos
sub
imul
xlat
enter
push
cmpsb
stos
insl
insl
lret
add
popf
adc
mov
pop
cld
std
bndldx
leave
inc
in
jns
xchg
jge
cs
adc
and
xchg
dec
shlb
ret
or
jmp
out
xchg
pop
push
mov
fsubrs
cmp
aad
cld
or
enter
xchg
sbb
sbb
adc
push
aas
and
scas
jo
xchg
dec
dec
mov
adc
xchg
cmp
scas
and
adc
out
inc
imul
popa
loope
cmp
jnp
cltd
cs
mov
adc
call
andb
std
sarb
pop
mov
fcoml
mov
sub
add
ret
in
pop
xlat
xor
push
outsl
daa
inc
pusha
repnz
test
fisttps
arpl
sbb
dec
mov
ljmp
dec
push
add
bound
aaa
jle
add
jno
aam
xor
cwtl
xchg
add
fists
mov
out
lahf
cmpsb
inc
lret
in
sarl
inc
sbb
adc
insb
and
mov
movsl
xor
mov
mov
cmc
mov
in
pop
xlat
gs
pop
cmp
mul
dec
jns
jno
adc
push
lock
push
shll
push
into
or
cmp
rcrl
xor
subl
mov
lret
or
movsb
popa
pusha
jbe
shll
pop
jb
sub
insl
pop
pop
adc
adc
push
cmpsl
xchg
into
nop
jno
pusha
push
outsb
mov
xlat
clc
push
pop
rolb
in
cmp
jle
mov
icebp
fs
sub
ja
stos
insl
out
dec
inc
jmp
dec
dec
sbb
shlb
jb
and
jbe
cmp
xchg
insl
cmp
inc
iret
jl
jae
fisttpll
cmp
mov
pop
push
addr16
dec
sub
cmp
adc
mov
shr
aam
xchg
cmp
test
mov
test
jnp
jb
and
into
push
sbb
addr16
mov
push
xchg
cmp
pop
and
mov
sub
arpl
outsl
jnp
test
jmp
xor
inc
jge
adc
cmp
dec
insl
sub
adc
adc
jmp
jmp
mov
adc
es
pushf
lret
mov
stc
popl
sbbl
stc
cwtl
add
dec
push
lods
jne
cmp
insl
int3
mov
xor
jno
loopne
cmp
mulb
mov
cmp
inc
cmp
mov
and
pop
int3
dec
sub
and
push
nop
pop
xor
outsb
mov
adc
add
fdivp
adc
jp
idivb
mov
push
call
nop
mov
stos
stos
push
js
jge
lret
icebp
nop
gs
add
data16
pop
out
stc
mov
cmp
jnp
mov
lahf
cs
mov
je
adc
addl
shl
call
pop
and
popa
inc
xchg
scas
das
sarl
push
imul
push
dec
sbb
rorb
pop
push
hlt
add
jl
sbb
scas
insl
icebp
cmp
divb
sbb
andb
cs
nop
mov
push
sub
gs
pop
jle
cwtl
xor
mov
push
jp
cld
mov
sbb
mov
xor
outsb
push
cmp
mov
test
mov
les
inc
xchg
inc
sub
in
inc
push
push
movsl
dec
fadds
outsl
push
rcr
jne
mov
sub
iret
push
mov
and
cmp
fimuls
dec
sbb
push
not
aas
sti
push
rorl
jns
push
dec
rclb
fadds
xor
jle
pop
and
fsubr
out
push
xorb
add
cmpsb
neg
xor
fldl
and
scas
inc
mov
dec
sub
cmp
sti
mov
fisttpl
cmc
bound
push
mov
aam
pusha
push
outsb
aam
test
push
sbb
adc
inc
mov
decb
sbbl
jo
mov
xchg
mov
insb
or
pop
push
xchg
loop
sar
out
pushf
in
into
adc
rolb
decb
cwtl
mov
or
hlt
inc
popa
push
repz
stc
aas
push
cmp
jge
push
test
pop
lcall
int
push
inc
add
mov
in
jns
mov
lock
adc
mov
push
sbb
xchg
dec
mov
rep
repz
rcl
pushf
dec
xchg
pusha
jcxz
sbb
pop
addr16
dec
mov
xchg
push
sub
inc
in
lret
inc
pop
cmp
or
pushl
mov
fwait
add
ljmp
and
sbb
sar
in
sbb
std
dec
mov
int3
mov
nop
dec
or
testl
inc
or
xchg
outsb
push
sarb
pop
pop
call
cmc
inc
mov
xor
pop
sbb
in
mov
mov
xor
sti
pop
or
icebp
jns
push
into
cmpl
icebp
sbb
insb
hlt
std
cwtl
adc
jge
sub
popa
mov
aam
jb
repz
mov
pop
push
loope
dec
es
cmp
cmp
shll
cltd
xor
add
pop
stc
leave
fdivrl
push
fcoms
mov
out
push
add
or
dec
xchg
mov
pop
test
rcrb
pop
insl
aam
pop
pop
rcl
out
fisubs
shll
add
inc
int3
loope
xor
in
push
nop
push
jbe
xor
mov
pop
rcrl
sub
icebp
popf
jne
pop
sti
and
jp
dec
pop
jge
or
jle
cli
lahf
sbb
addr16
test
cmp
gs
les
pop
stos
ljmp
imul
movsb
inc
add
in
inc
mov
arpl
and
jle
pop
xchg
xchg
rcl
insl
jbe
lret
scas
xlat
mov
pop
sub
inc
gs
mov
dec
sbb
sub
in
pop
mov
sub
mov
aam
pop
push
outsb
sub
addr16
or
fsubrl
fcomps
xor
pop
jno
cmp
andb
mov
dec
lea
sti
pop
addr16
jns
push
aam
pushf
sub
mov
aam
xchg
jg
les
inc
adc
pop
mov
and
mov
dec
xchg
jns
sti
dec
push
outsb
pop
mov
lock
mov
insl
and
mov
movsl
test
gs
cmp
das
push
mov
test
int
adc
ljmp
outsb
jae
pop
and
mov
std
and
pop
push
mov
xor
adc
aad
mov
outsb
mov
push
push
aas
xor
scas
imul
push
mov
imul
stos
push
test
xor
dec
xlat
movsb
push
jge
faddp
jnp
pop
rolb
pop
pop
or
dec
pop
jmp
xchg
xchg
andb
jmp
mov
movsl
xor
mov
lret
dec
and
xor
adc
xor
sub
jle
dec
lea
pop
movb
pop
push
push
fnstenv
stc
dec
sub
cmp
shrl
add
xor
and
mov
bound
and
sub
xchg
pop
lock
push
add
push
in
clc
popf
mov
ja
mov
dec
push
rolb
xchg
popl
sub
lret
out
sub
push
iret
pop
jae
fcomp
fcoml
mov
popa
adc
pop
and
mov
mov
in
sub
imul
inc
jge
push
sub
and
push
test
xchg
stos
push
test
push
jp
xor
sub
scas
mov
mov
mov
dec
sbb
push
insl
fldlg2
movsl
pop
sti
lret
rcl
movsl
xor
lret
lcall
dec
xor
lret
cmp
cmp
mov
dec
sbb
jns
jae
movsb
push
jns
push
sarb
push
pop
rolb
pop
je
scas
xlat
xchg
mov
test
iret
insb
cltd
xor
mov
out
aad
rcl
inc
add
mov
sub
std
aad
adc
sti
lds
add
mov
call
jecxz
outsl
ret
in
test
push
movsb
test
roll
lea
mov
mov
nop
cli
fidivrs
pop
andb
popa
dec
xor
andb
mov
push
jge
sahf
mov
sub
test
in
mov
adc
insb
out
std
xor
inc
movsl
pop
mov
or
mov
out
dec
nop
fnsave
lods
fidivs
mov
mov
pop
xchg
fdivr
in
push
sub
out
out
inc
gs
fnstcw
out
pop
pop
addr16
in
mov
jns
xchg
push
insl
xchg
ljmp
jmp
subl
mov
insl
inc
push
mov
inc
lret
adc
lds
aad
pop
push
outsb
arpl
test
xchg
mov
sub
in
lock
xchg
mov
andb
pop
pop
push
in
pop
mov
jge
int
rorl
jbe
jmp
cmpsl
jecxz
pop
mov
fdivl
imul
xor
inc
in
sbb
adc
in
mov
jne
push
dec
mov
xchg
and
outsl
out
and
stos
xchg
sub
gs
and
out
inc
lret
pusha
and
mov
movsb
mov
pop
rcll
xor
out
imul
xorb
cmp
rdtsc
or
dec
xchg
inc
es
inc
int3
push
je
orb
mov
sub
shlb
mov
cld
je
movsb
mov
addr16
shl
sbb
fcomps
int3
pop
fdivr
push
out
aam
fidivrl
dec
cwtl
pusha
pop
pushl
dec
pop
sar
mov
adc
insl
negb
sbb
outsb
mov
add
mov
fadds
je
call
fildll
std
and
push
shlb
jns
jns
addr16
ror
mov
jae
rolb
mov
or
cwtl
sbb
add
cmpsb
cmp
call
xlat
aam
ja
outsb
mov
xchg
mov
imul
dec
bound
outsb
push
mov
jo
pop
fcoms
bound
in
dec
test
lock
sti
xchg
xlat
dec
pop
clc
enter
ds
and
inc
inc
jge
je
xchg
xor
cmp
stos
xchg
mov
into
ljmp
dec
pop
mov
mov
outsb
imul
idiv
rorl
lds
add
stos
pop
mov
repnz
push
mov
andl
add
jge
nop
cmp
mov
daa
or
repz
add
xor
xor
fsubrl
xor
push
sti
jl
mov
xchg
ds
inc
push
outsb
push
shl
les
data16
sub
bound
jle
call
pop
and
repz
cwtl
mov
fsubl
in
dec
lret
mov
adc
push
popl
xchg
mov
push
dec
xchg
cmp
std
jnp
loop
insb
aam
repz
pop
sbb
push
lds
aas
mov
shlb
pop
mov
mov
add
adc
fiaddl
xchg
psubsw
dec
sbb
xchg
lds
jae
aaa
and
pop
sti
lret
fmull
ja
in
lds
je
subb
icebp
negl
jns
aad
push
mov
jmp
and
repnz
mov
and
dec
and
or
testb
sti
xlat
stos
shl
add
pop
loopne
mov
sbb
aad
cmpb
shl
repnz
jo
les
adc
mov
gs
jo
xchg
sbb
lret
mov
lret
repz
sub
cmp
inc
xor
pop
fcomip
fisubl
add
mov
jg
push
rcl
insl
pop
pusha
push
outsb
push
inc
push
push
leave
fidivl
mov
cs
inc
ret
or
cld
ja
les
xor
out
insl
push
arpl
xor
cmp
push
push
ret
fidivl
cli
push
or
dec
fdivs
insb
adc
lret
pop
adc
jns
sub
push
rcrl
add
enter
lcall
lret
call
fiaddl
mov
decl
adc
mov
shrl
pusha
mov
cmc
mov
jecxz
dec
cwtl
push
mov
jbe
add
xlat
xchg
push
xor
frndint
loopne
push
cli
add
dec
ret
mov
mov
inc
mov
enter
or
cmp
add
push
ret
fdivrl
mov
adc
add
xchg
call
fst
aam
xchg
mov
fnstsw
icebp
dec
imul
pop
fmuls
test
xchg
sbb
andb
iret
inc
enter
pop
hlt
jl
push
mov
jns
mov
int3
mov
sbb
lret
repz
xchg
cmp
ljmp
pop
pop
jecxz
or
inc
or
int3
rcrb
mov
sti
stc
testl
jle
jle
cmpb
dec
inc
mov
sub
xchg
push
jecxz
pop
xlat
insb
and
and
push
outsl
test
fisttps
fs
ret
mov
adc
push
push
rolb
subl
outsl
jecxz
xchg
adc
and
repnz
ljmp
and
xchg
xchg
cmp
sub
shlb
push
cld
dec
sub
cmp
sbb
inc
jbe
icebp
adc
insb
icebp
rol
out
mov
push
sbb
sar
mov
jl
movsb
outsl
pusha
jbe
in
sarb
pop
mov
repnz
sub
outsb
push
shlb
in
std
inc
stos
cmp
loopne
cmpl
xor
push
addb
cmp
sub
jp
testb
inc
mov
inc
aad
call
xor
adc
dec
xor
dec
fdivp
inc
xchg
add
in
rcl
popa
ficoms
mov
cli
call
rcrl
xor
jns
data16
xor
negb
lea
clc
pop
xchg
jecxz
dec
lahf
mov
and
mov
movsl
xchg
inc
xor
lret
push
dec
xchg
pusha
pusha
add
shl
dec
and
push
pusha
inc
xor
ljmp
shl
adc
jb
aam
pop
push
outsb
or
je
pop
xor
xchg
pop
icebp
pop
xlat
insb
cmc
popa
mov
jno
jns
je
sbb
aad
iret
mov
cmc
sbb
cltd
add
pop
stos
jne
loopne
add
push
jb
push
rcll
xor
out
out
inc
iret
rcll
inc
shl
fisubrl
and
push
mov
xchg
inc
pusha
sti
pop
pop
jg
scas
addb
mov
fsubrs
int3
outsl
loope
stos
shrb
in
mov
jne
cmpsl
mov
addr16
xor
sub
orb
test
add
popa
hlt
cmpb
mov
jo
xor
fisubrs
aam
mov
repz
and
ja
cmp
addr16
gs
mov
das
jbe
jmp
mov
rolb
icebp
popf
jne
pop
sti
push
test
mov
and
stc
mov
mul
dec
xchg
push
and
and
add
cmp
mov
movsb
in
jns
xchg
insl
popf
loop
aas
bound
outsb
push
xor
rorl
pushf
aad
add
jnp
sbb
xchg
jmp
mov
inc
ds
inc
push
outsb
push
shl
push
gs
leave
pop
inc
xchg
in
xor
dec
aaa
xchg
sti
push
icebp
loope
mov
ljmp
adc
cli
into
or
imul
in
jle
mov
out
subb
adc
pop
cld
shlb
push
pusha
jbe
fnsave
imul
loopne
cmp
push
outsb
jno
add
icebp
sbb
js
jp
push
scas
pusha
push
test
out
dec
add
pusha
dec
sbb
sarb
ja
mov
cltd
cmpsb
mov
adc
mov
rcll
fildll
bound
insb
mov
xor
rcl
cmp
dec
inc
jge
inc
iret
xchg
addr16
imul
stos
push
dec
icebp
cld
push
es
roll
push
inc
ret
xlat
lods
mov
sti
ds
lds
fisttpll
nop
fdivs
dec
or
out
fwait
mov
movsb
lret
mov
pop
daa
pop
add
popl
sub
scas
mov
push
mov
outsb
push
and
fwait
add
push
lds
xor
bound
fidivl
push
pop
outsb
imul
icebp
jne
shrb
cmp
adc
xchg
pop
cli
add
int3
pop
leave
out
push
popa
scas
adc
movsb
sti
int
mov
inc
xchg
in
dec
push
rolb
jecxz
mov
movsb
mov
cmp
shrb
icebp
jle
xor
insb
or
fs
lret
jns
xor
ret
arpl
pusha
pop
mov
jg
pop
dec
bound
xchg
pop
nop
dec
std
push
sub
add
outsb
push
shrb
jp
push
mov
sbb
je
rolb
pop
sub
mov
or
push
and
test
mov
lds
dec
mov
push
incb
int3
std
clc
in
lds
movsl
dec
fstps
push
outsb
push
shrb
jp
push
icebp
dec
aad
jno
pop
push
outsb
test
jl
inc
push
pop
rolb
out
xchg
jg
gs
pop
push
inc
fnstenv
jecxz
jbe
fimull
je
dec
sarb
xor
push
outsb
push
mov
insb
les
enter
rcll
xor
test
mov
mov
rclb
dec
fsub
push
jne
push
shr
jns
shlb
rolb
outsb
push
shl
inc
gs
js
xor
push
xchg
icebp
jecxz
dec
popf
dec
lahf
and
es
sbb
add
mov
lret
mov
inc
fs
mov
clc
push
jl
jbe
mov
out
out
mov
test
lret
dec
push
rolb
xchg
mov
inc
push
cmp
and
sbb
inc
xchg
icebp
and
fildll
xchg
sbb
inc
repz
inc
stos
je
dec
popa
pop
aad
es
xorl
xor
ficompl
daa
mov
mov
ficoms
and
out
ror
jnp
ss
pop
xorb
jmp
addr16
icebp
leave
loopne
push
add
pop
push
outsb
pusha
mov
fmuls
inc
lock
push
or
scas
xor
cmp
in
aas
and
scas
bound
pop
aad
cmp
jnp
cmp
test
sbb
hlt
call
pop
aaa
jno
xchg
pusha
dec
xchg
scas
xor
jns
cltd
push
push
inc
aaa
fsubrs
pop
into
out
pusha
jbe
mov
cwtl
imul
nop
add
fidivrs
add
dec
cli
iret
das
add
mov
sar
fcompl
out
in
in
addr16
mov
mov
xchg
scas
daa
rcrl
js
scas
add
call
jg
jae
insb
pop
inc
daa
fcoms
inc
cli
aad
adc
and
insb
loope
sub
cmp
fcoms
lahf
je
mov
fwait
sti
sarb
stos
loopne
sub
fxch
scas
data16
push
lods
in
pop
xlat
pop
mov
insl
iret
jne
jo
neg
inc
shlb
andb
out
pop
rolb
scas
push
cmpsb
cmp
mov
out
cld
pop
sbb
pop
sbbl
fcompl
lea
addr16
dec
mov
cmc
stos
xor
cmp
stc
mov
ljmp
cmpsl
dec
shlb
out
enter
movsb
mov
add
inc
rorl
inc
pop
cmp
push
stc
inc
jae
subl
fs
dec
insb
adc
sbb
ret
adc
pop
inc
fs
pushf
sti
add
sahf
fisubrs
pushf
xchg
pop
inc
loopne
dec
insb
roll
xor
loopne
cli
in
dec
mov
xchg
push
xchg
lahf
inc
int3
mov
mov
scas
sub
insl
jns
xor
mov
mov
xlat
cmpb
jae
int3
xor
jecxz
jo
aad
add
jne
adc
cmpl
and
jns
push
dec
inc
ljmp
push
mov
jae
or
pop
test
pop
insl
inc
iret
sbb
xchg
and
stc
out
push
icebp
outsl
mov
popa
inc
xchg
scas
das
add
jbe
imul
dec
dec
sbb
shlb
ja
pop
or
xor
xchg
adc
lods
jo
push
mov
inc
lret
mov
cltd
and
fsubs
pop
or
dec
aad
call
jbe
inc
pop
ret
add
imul
pop
pop
fsqrt
or
inc
cmpsb
rep
mov
mov
nop
pop
jge
test
aam
popa
mov
shrl
pusha
push
outsb
push
inc
sbb
popf
bound
cs
ret
cmp
stos
pop
mov
and
mov
stos
in
call
scas
imul
jle
mov
sub
mov
test
subl
jnp
icebp
popf
mov
shlb
xor
add
in
test
test
mov
push
rcll
xor
add
lcall
inc
shr
push
mov
dec
xor
insl
idivb
out
test
shlb
imull
mov
fs
push
jge
sbb
push
pop
rolb
xlat
cmp
jnp
cltd
xor
mov
cld
int3
rcrb
out
dec
icebp
push
pop
push
dec
sbb
fildl
and
pop
push
rcll
repnz
mov
pop
test
pop
jge
inc
xchg
call
sbb
jno
rolb
pop
pop
ds
and
add
inc
out
bound
aad
pusha
push
outsb
push
and
std
and
hlt
call
adc
scas
or
popa
sbb
mov
rcl
je
orl
into
mov
add
ficoms
insb
repz
mov
cmp
sti
inc
push
outsb
push
shl
lds
xor
pop
lret
xchg
adc
dec
loope
ljmp
mov
jnp
mov
jmp
inc
pop
test
outsb
mov
cmp
jmp
cmp
loopne
cld
mov
jnp
dec
and
push
push
rolb
int3
cmp
xchg
and
into
imul
lods
lock
cmp
add
mov
loop
jns,pn
adc
jmp
dec
mov
mov
outsb
fs
sbb
aam
adc
mov
sub
sbb
test
dec
sub
aaa
movl
push
fucomi
call
inc
inc
mov
pop
push
cld
dec
js
call
mov
in
hlt
inc
mov
sub
pop
div
cld
dec
sbb
push
not
insl
je
cmp
pop
inc
fidivs
mov
out
xor
jnp
mov
push
pop
push
lock
scas
subb
adc
push
pop
rolb
dec
lods
and
jae
sub
std
and
arpl
stc
leave
mov
nop
or
pusha
mov
dec
fs
jnp
or
xlat
insb
push
into
xchg
cmp
cmp
test
pop
pop
popf
mov
dec
lret
outsl
fdivrl
and
sub
outsl
ds
fsubr
inc
sbb
shlb
fadds
push
add
jnp
pop
sub
fildl
mov
ffreep
mov
add
dec
movsb
jae
stos
jne
loopne
fldcw
sub
sbb
pop
lds
or
xchg
in
outsb
in
push
pop
pop
lock
xor
cmpsb
inc
pop
lret
stos
aad
fidivs
lret
shll
pop
outsb
addr16
mov
mov
repz
fdivs
and
out
mov
loopne
sbb
mov
xchg
xorl
pop
insl
inc
mov
sti
clc
ret
mov
mov
jns
inc
jge
fwait
xlat
fwait
dec
jp,pt
push
pop
in
ja
push
enter
cmpsb
and
cmc
rcrl
aas
xchg
mov
test
mov
movsb
dec
repz
inc
shlb
push
rolb
adc
dec
pop
push
sti
add
bound
add
dec
insb
jnp
test
adc
sar
pop
push
mov
lods
hlt
dec
arpl
xor
mov
and
cld
jg
xor
mov
cmp
mov
xor
adc
aam
adc
out
inc
insb
pop
loopne
lods
nop
fmul
sti
fcomps
dec
push
or
cmp
shlb
mov
cmp
sti
ja
sub
push
hlt
jp
xchg
lods
xlat
lcall
add
cmp
cltd
push
shlb
dec
les
pusha
pop
lcall
dec
jmp
call
jecxz
mov
and
insb
out
dec
out
adc
push
sarb
pop
ja
mov
mov
jo
rorb
dec
sbb
mov
mov
mov
icebp
xor
divb
subl
bound
inc
dec
pop
fisttpl
js
call
jo
push
rclb
cmp
nop
pop
add
jl
dec
out
lcall
mov
fwait
push
movsb
jg
jbe
cld
add
mov
pop
mov
jb
xchg
dec
push
rolb
fwait
push
arpl
popf
test
push
int3
inc
add
ret
pop
filds
loope
pop
pop
pop
std
inc
xor
inc
mov
in
inc
cs
jg
loop
push
repz
push
dec
divl
outsb
das
inc
fmuls
xchg
mov
fs
push
insb
sbb
dec
sbb
mov
mov
icebp
and
sahf
stos
icebp
fldenv
add
cmpsb
sahf
mov
lret
mov
std
xlat
and
pusha
pop
test
sub
ss
mov
sbb
inc
int3
push
int
vpavgb
imul
push
outsb
inc
xchg
lods
out
loop
in
arpl
insb
repnz
sub
mov
push
dec
hlt
fs
in
into
push
mov
insl
out
dec
push
jns
adc
sbb
pop
ds
pop
pop
bound
insb
icebp
pop
into
cltd
xchg
jl
sbb
cmp
or
xchg
lock
dec
inc
cmp
sub
les
add
in
pop
mov
xlat
je
mov
fsubrp
mov
movsl
xor
xchg
bound
fisubrl
imul
scas
shrb
xchg
in
insb
push
dec
daa
inc
data16
roll
add
int3
push
cwtl
stc
adc
insl
bound
fistpl
jne
imul
in
pop
xlat
cmp
push
jl
pop
ret
insl
neg
inc
movsl
push
mov
aas
int
jle
and
push
out
adc
roll
mov
sub
adc
ror
mov
scas
movsl
jae
rolb
jnp
mov
sbb
sbb
das
xor
xchg
cmp
xor
scas
pop
aas
xchg
aas
add
and
imul
stos
pop
cld
into
loopne
outsb
push
rolb
xor
in
mov
ja
ds
xchg
in
outsl
sbb
and
mov
inc
loopne
dec
gs
test
xchg
test
mov
push
nop
push
insb
push
cmpsl
xchg
lret
push
lods
mov
iret
mov
and
push
pusha
jbe
or
inc
pop
inc
adc
lcall
insl
icebp
cmp
divb
gs
cmpsl
rcrl
and
pop
mov
int3
out
jmp
test
rcll
xchg
icebp
mov
inc
push
add
mov
out
shrl
fadds
in
out
inc
push
divl
ljmp
movsl
es
das
cltd
pop
dec
dec
shll
push
pusha
jbe
in
loop
leave
jmp
stos
jne
loopne
iret
mov
jg
mov
fistpl
out
pop
lcall
aaa
imul
ret
rorb
scas
sub
shlb
inc
test
xchg
or
nop
dec
pushf
inc
dec
jp
jne
icebp
gs
lods
lods
or
sahf
repz
mov
sbb
mov
add
jmp
ret
jp
jbe
inc
dec
cmp
xor
scas
arpl
scas
inc
dec
daa
mov
stos
cmp
inc
clc
loope
fcom
mov
int3
mov
add
test
fildl
fimull
mov
ss
std
and
pop
insb
rorb
stos
std
and
shlb
mov
insl
mov
fs
outsb
push
mov
jne
xchg
add
lahf
sbb
xchg
push
lret
shrl
cmp
push
ret
mov
dec
inc
add
push
fldcw
test
test
or
hlt
sti
lret
push
out
pop
je
xchg
sbb
lret
rorl
ljmp
xchg
mov
mov
sub
fxch
xchg
icebp
jecxz
mov
pop
leave
loop
add
icebp
jecxz
dec
mov
aas
jns
test
and
mov
xchg
dec
sbb
fdiv
lods
pop
mov
ja
fldcw
loop
enter
pop
inc
notl
dec
imul
fdivrs
sti
mov
push
lcall
cltd
nop
xchg
mov
es
add
add
sbb
xchg
cmc
fadds
ss
stc
and
xchg
gs
flds
mov
push
push
inc
int3
xlat
pushf
sahf
ljmp
jbe
xor
jg
xchg
adc
in
hlt
or
loop
mov
lret
mov
and
cmp
ret
nop
pop
jo
xor
test
mov
ds
sbb
call
sbb
push
popa
and
jge
push
outsb
push
sarb
shl
cld
outsb
leave
insb
sbb
jp
jmp
mov
cmp
ret
ja
push
fcoms
std
pop
popa
fyl2xp1
jo
cli
fidivl
fldcw
loop
jl
dec
cmp
mov
je
test
daa
cmp
mov
subl
sub
xor
adc
inc
sti
je,pt
sub
subb
mov
or
jns
xor
in
dec
xor
sbb
cmp
jae
repz
repz
shll
cli
in
dec
cmp
add
xor
mov
push
dec
cltd
inc
sti
pop
inc
fst
bound
jns
push
movsl
cmp
subb
lret
mov
fsubrl
aam
jmp
mov
idiv
js
inc
test
cmp
sub
xor
std
popa
mov
scas
add
jge
sbb
shrb
jns
inc
push
data16
jns
aas
aaa
gs
sbb
gs
call
mov
xchg
sub
mov
pop
fdivr
push
lods
jmp
dec
lretw
out
into
pop
out
push
frstors
dec
and
outsl
notl
pop
push
inc
push
imul
pop
mov
add
push
inc
icebp
fs
push
dec
mov
aaa
pop
stc
leave
fisubl
mov
mov
add
rclb
xorb
outsl
arpl
repz
sub
mov
imul
andps
push
outsb
push
scas
pop
ljmp
xchg
inc
gs
cmp
add
orb
pop
shll
mov
sub
cmp
hlt
xchg
dec
add
dec
mov
mov
pop
scas
push
dec
pop
les
cli
xlat
pushf
int3
test
es
cltd
pusha
gs
mov
inc
cltd
jnp
pop
icebp
lahf
dec
int3
mov
int
and
sahf
dec
cmp
push
ror
jp
cs
andl
jg
xor
test
add
jg
sbb
xchg
shll
iret
ljmp
lret
mov
subl
mov
mov
jbe
flds
push
mov
push
mov
pop
xlat
pusha
inc
push
jae
jge
jl
gs
inc
shlb
push
loopne
pop
xlat
cmp
push
je
jp
push
outsl
insl
neg
inc
add
ror
enter
jb
rolb
enter
aaa
or
mov
enter
fs
out
insl
xor
or
xorb
mov
push
outsb
push
adc
pop
fiadds
jg
mov
sbb
mov
std
mov
pop
idiv
insb
add
mov
dec
dec
mov
mov
cmpsl
lods
std
roll
sbb
xlat
stos
je
out
fistpl
dec
mov
lods
xorl
addl
mov
call
cmp
scas
shlb
xchg
mov
or
xchg
sbb
fnsave
addr16
call
push
xchg
repnz
int3
xchg
lret
rorl
icebp
dec
repz
repnz
pop
push
divb
andb
out
inc
fs
push
fstpt
push
pop
ja
pop
sbb
fidivrs
pop
lahf
mov
jns
out
scas
jae
xlat
scas
sbbb
out
test
nop
jno
pusha
push
outsb
nop
mov
push
rolb
xchg
addr16
rcrb
cmp
fs
ljmp
enter
cld
lret
stos
xlat
call
in
inc
mov
pusha
lret
jbe
negl
dec
fs
mov
push
jnp
fnsave
sub
jp
jp
mov
inc
hlt
fs
fsubr
addr16
rcl
cmp
sub
scas
cmp
xchg
push
sub
mov
stos
cltd
ret
pop
push
outsb
fsubl
mov
pop
mov
call
dec
jmp
mov
test
dec
sbb
popa
dec
dec
cmp
cmp
sub
imul
fcoms
inc
sti
gs
sub
mov
dec
xchg
pusha
data16
pop
and
aas
inc
xchg
sub
imul
sbb
add
inc
test
or
ja
in
cs
and
loope
mov
in
lock
push
shll
arpl
sub
dec
xor
dec
imul
jns
dec
std
aas
pop
mull
pop
mov
cmp
mov
in
dec
popf
xchg
out
popf
and
add
mov
stc
loop
adcb
sbb
clc
pop
in
out
inc
data16
incl
cli
sub
push
sub
sub
stos
aam
out
int3
inc
loope
sbb
test
jne
test
aam
pop
adc
bound
inc
sbbl
inc
inc
mov
inc
cmp
mov
ds
cltd
ficoms
shl
inc
into
gs
orl
mov
cld
pop
test
nop
push
enter
add
jo
test
cwtl
ja
adc
xchg
jns
adc
xorl
push
rolb
push
js
insb
add
dec
sbb
adc
sbb
jge
cmp
popa
inc
add
roll
pop
jge
pusha
iret
outsb
push
inc
pop
adcl
out
pop
jmp
dec
pop
push
add
in
mov
pop
xchg
fdiv
cmpsb
or
std
in
inc
and
addr16
int
xor
and
xor
xor
loope
xchg
inc
cli
cli
and
clc
cmp
mov
shrl
adc
mov
pop
xor
cmp
jl
push
adc
insb
hlt
insb
bound
jmp
mov
hlt
add
lahf
push
dec
mov
jae
shl
add
jnp
in
mov
dec
xor
cmp
je
roll
sbb
add
inc
das
jne
mov
ja
sbb
and
fmull
jb
imul
jne
cwtl
addl
mov
jns
cmpsb
mov
cmp
mov
jno
push
push
add
orb
jmp
mov
push
dec
pop
sbb
orl
mov
shr
xor
and
pop
pop
sbb
je
insb
xchg
push
aaa
jecxz
and
movsb
out
out
int
loopne
popa
mov
loop
jge
outsb
push
cmp
data16
xor
notb
mov
addb
bound
inc
icebp
push
subl
mov
dec
dec
addr16
aad
dec
inc
jle
pushaw
psubusw
cmc
push
fistpl
add
addr16
clc
mov
lret
out
cmpsb
popf
outsb
jno
mov
dec
mov
mov
sub
or
cmp
sti
push
jns
in
aas
pop
pop
fisttpll
cmpb
repz
inc
stc
or
jmp
jnp
mov
lahf
dec
int3
mov
mov
out
lret
cmp
sub
imul
lock
fsubs
or
icebp
adc
insb
icebp
iret
and
fcmovnbe
fcompl
outsb
xlat
xchg
nop
jo
imul
in
jns
push
jecxz
mov
js
sbb
mov
out
jns
mov
mov
xchg
lds
and
push
aad
loop
push
or
xchg
pop
sbb
stos
adc
call
and
rolb
outsb
push
shl
arpl
in
mov
xor
es
or
das
push
mov
cmp
dec
xchg
mov
cld
arpl
sbb
jle
insl
dec
int3
imul
cmpsb
mov
and
and
pop
and
in
shlb
push
pusha
jbe
shll
pop
stos
jne
loopne
adc
adc
cmp
push
loop
xchg
jno
sti
aas
gs
fs
mov
repz
add
fcoms
ja
sti
pop
loope
sarl
imul
cmpsb
mov
cmp
mov
and
pop
pop
pop
jge
mov
mov
dec
int3
mov
jecxz
mov
adcl
std
fldcw
lahf
dec
out
aas
mov
mov
inc
mov
jp
inc
xor
xor
mov
out
fnstcw
fistl
outsb
pop
popf
mov
ljmp
mov
jo
sahf
mov
xchg
test
jns
push
pop
xor
or
inc
out
fs
mov
inc
mulb
rorb
and
scas
xchg
insl
and
push
outsb
push
mov
xchg
pop
sub
sub
cmc
outsl
cmp
jno
xor
repz
roll
rcl
cmp
pop
cmpsl
jbe
rolb
mov
bound
or
xchg
xchg
orb
in
pop
mov
paddsw
mov
stos
and
inc
in
mov
adc
in
mov
jne
jl
aam
ja
nop
pusha
sarb
cmp
aam
sbb
int
add
jle
sbb
dec
vminsd
shrb
pusha
push
outsb
push
inc
push
fsubs
cmp
inc
aaa
adc
push
je
add
mov
in
or
arpl
sub
adc
lds
lahf
insl
int3
mov
outsl
push
insb
rolb
mov
dec
pop
mov
mov
inc
out
jbe
test
shlb
add
jns
out
dec
fisttps
outsb
push
sarb
loope
pop
imul
hlt
ret
rorl
xor
add
call
negl
fnstenv
dec
and
out
cmc
sub
cmp
sub
stos
mov
push
scas
rcll
jb
cmp
je
inc
shr
pop
test
inc
mov
jmp
xor
stc
add
push
movsl
dec
xlat
ljmp
push
aad
pop
addb
cmp
jl
rcr
push
leave
jae
ljmp
popa
in
leave
in
mov
repz
in
addb
out
inc
bound
sub
sar
or
ret
cli
call
sbb
jno
and
nop
jo
pusha
push
outsb
xchg
nop
jo
gs
outsb
mov
inc
fists
rolb
enter
outsl
cmp
add
add
daa
push
mov
ja
dec
push
mov
sub
add
jbe
roll
out
inc
aam
in
into
ret
lret
jecxz
mov
mov
addr16
fimuls
clc
sarl
les
jp
inc
loope
fs
mov
sar
xchg
or
hlt
dec
mov
int
js
subl
sub
in
jns
mov
cmp
sbb
addr16
and
movl
mov
mov
jns
jle
mov
lahf
insl
int3
mov
bound
stos
sbb
outsb
cmpsl
push
jl
scas
sub
ds
cmp
gs
pop
push
and
lret
push
pop
pop
sahf
dec
inc
mov
cmpsl
push
mov
push
outsb
ficompl
jge
pop
fs
outsb
cmpsb
daa
ds
aam
jmp
dec
xchg
pop
sub
and
dec
popf
sbbb
mov
sub
push
and
in
cld
push
sbb
push
sub
mov
sub
scas
in
pop
xlat
cmp
leave
inc
gs
gs
inc
pop
lods
add
rcl
and
je
rolb
pop
fs
mov
pop
add
cmp
shlb
mov
stos
mov
lods
add
adc
mov
out
jae
lea
mov
aad
mov
xchg
and
andb
lahf
xor
pop
in
cmp
mov
dec
out
inc
push
pop
ret
jbe
push
add
jno
outsl
lcall
dec
addr16
dec
rcll
xor
flds
mov
jns
cmpsl
push
fisubs
jbe
push
fs
jns
push
jecxz
mov
pop
mov
in
sbb
insl
mov
push
stos
ja
ret
icebp
inc
gs
sbb
inc
mov
cwtl
sarb
fldcw
loop
sub
inc
mov
sub
hlt
inc
inc
cmp
fdivl
dec
mov
inc
sti
inc
push
outsb
push
shl
insl
mov
loop
xor
mov
cmp
cmpsl
movsb
xchg
xchg
mov
fucomip
das
inc
mov
cmpsb
sbb
out
in
popl
stos
into
inc
daa
mov
inc
nop
dec
cwtl
push
daa
dec
mov
push
es
jns
insl
out
push
mov
xchg
sbb
shl
xlat
mov
add
jnp
sbb
stos
mov
in
popa
mov
subl
xor
aas
adc
rcr
lret
add
lahf
and
xchg
mov
shrb
arpl
shrl
out
sub
in
jns
add
jg
in
dec
sub
cmp
ljmp
fisubrl
cmpsb
cwtl
push
jmp
inc
in
pop
mov
sarb
cmp
scas
imul
aas
loope
xchg
jnp
cmp
stos
loope
idivb
inc
push
mov
gs
das
cld
in
xorl
je
sbb
fistps
movsl
addr16
mov
sar
out
jle
xor
aad
in
sahf
stc
gs
shl
add
int3
mov
stc
inc
dec
arpl
push
jbe
in
cmp
sub
xchg
sahf
push
jno
xchg
adc
inc
cmpl
pop
enter
xor
data16
int3
mov
pop
inc
pop
or
inc
outsl
popl
rclb
mov
and
inc
mov
scas
je
dec
jns
add
ror
and
push
rolb
or
mov
fmuls
leave
jl
ds
std
jl
xchg
mov
jnp
adc
fadds
roll
pop
jg
dec
xor
loope
lahf
push
dec
fwait
cwtd
xchg
mov
gs
add
addr16
mov
stc
dec
sub
mov
mov
add
push
nop
push
xchg
movsb
sti
scas
sbb
rolb
outsb
push
loope
xor
push
les
inc
mov
loop
cmpsl
nop
mov
leave
rcl
rcll
ret
jmp
inc
jbe
pop
mov
ficoms
cmp
loope
aas
cmp
push
addr16
lret
and
ret
sub
pop
push
jae
rclb
outsb
xchg
and
out
add
mov
fildl
ds
push
xlat
nop
mov
cmpsl
ret
jne
fdivs
push
jl
test
arpl
pop
xchg
outsb
push
rclb
outsb
xchg
adc
insl
js
sub
mov
pop
pop
pop
cld
je
scas
ret
dec
sub
cmp
stc
pop
cmp
add
orl
jno
outsl
lcall
inc
push
jecxz
mov
addr16
lods
push
lahf
stos
push
mov
int3
cmc
ss
xchg
repz
inc
test
sbb
pop
pop
xor
fldcw
loop
sahf
mov
dec
mov
adc
jle
dec
add
and
movsb
pop
sub
pop
int
loopne
mov
in
jge
outsb
fmull
inc
int
cmp
and
add
and
inc
pop
cmpsb
pusha
xor
js
push
ror
xchg
push
or
subl
mov
mov
add
orb
inc
fldenv
pop
mov
fsubrs
fcompl
dec
out
mov
jne
cltd
loope
xchg
adc
loop
mov
xlat
arpl
jecxz
ror
fcoms
sub
pop
lcall
push
outsb
push
sub
stos
in
out
ret
adcl
in
lods
xorl
insl
js
dec
imul
jne
adc
and
and
movsl
inc
aad
push
insl
xchg
ret
data16
push
push
inc
push
test
pop
fcomps
jo
cltd
mov
sbb
jo
inc
out
xchg
or
pop
sub
xchg
fmulp
mov
push
pusha
sub
mov
in
shll
and
in
hlt
inc
fcoms
mov
sub
mov
xor
loope
xchg
pop
mov
push
or
popf
mov
call
inc
rolb
leave
stos
mov
push
push
jbe
sub
dec
sub
cmp
enter
dec
ljmp
add
orb
push
mov
jne
mov
and
pop
rolb
loopne
mov
and
xlat
subl
loop
jns
outsl
cltd
adc
dec
inc
int
push
shlb
mov
call
adc
pusha
xor
jns
addr16
sbb
xlat
test
xor
xor
sbb
jno
mov
push
mov
mov
outsb
cmpsl
movsb
popl
int
xchg
out
ss
div
and
lret
dec
xchg
pusha
pop
inc
dec
ss
hlt
ja
mov
sbb
push
stos
add
inc
sarb
mov
add
cmpsl
lahf
inc
dec
in
lcall
lock
fdivp
mov
pop
loopne
dec
xor
mov
mov
aaa
test
cld
mov
ret
xchg
sti
iret
xchg
out
cmc
rolb
or
push
jp
and
add
xor
loope
xchg
imul
xchg
xor
mov
mov
mov
push
pop
rolb
jo
and
lea
fs
add
mov
lret
adc
adc
or
mov
cmp
jbe
or
mov
push
push
mov
xorb
cltd
or
push
jbe
and
dec
mov
xchg
jno
sti
aaa
xor
popf
mov
scas
xchg
xlat
insl
ja
pop
adc
mov
lahf
adc
dec
sub
cmp
sub
call
gs
jge
inc
cmc
jmp
mov
mov
out
in
add
and
xchg
jb
jns
mov
jge
mov
in
call
push
mov
xor
les
shl
dec
ret
add
aas
sbb
fsubrs
loop
cld
mov
and
push
sahf
cltd
ja
std
and
rcl
sub
ja
rolb
arpl
dec
pop
in
xchg
mov
andb
icebp
inc
pop
test
xchg
dec
mov
in
jns
add
mov
cltd
xor
andb
and
mov
xor
loop
xchg
inc
loope
das
xorl
xor
mov
les
loope
dec
xchg
fs
jno
and
jnp
orb
mov
inc
bound
mov
mov
add
jmp
mov
pop
clc
dec
das
xor
inc
popa
lods
imul
push
out
inc
imul
enter
cmpsb
jmp
shr
jae
test
inc
mov
loop
xchg
push
push
or
subb
mov
add
aad
imul
js
subb
test
aam
adc
in
lods
in
inc
shlb
jge
push
rcl
andl
dec
rcrb
or
pop
sti
or
icebp
or
mov
pop
lock
cwtl
out
int3
sbb
rcr
and
cli
cli
in
inc
lods
aad
pop
inc
bound
inc
push
das
mov
jmp
out
cmpsl
add
fcmovne
jbe
xorb
or
adc
aad
jne
ret
add
in
loopne
dec
push
jns
mov
gs
ljmp
hlt
dec
xor
jge
imul
inc
dec
pusha
pop
dec
sbb
dec
jae
out
push
nop
fmuls
jg
sbb
add
pop
movsb
or
lret
push
out
movsl
ja
jg
addr16
jge
or
pop
rolb
cmp
push
pop
gs
pop
pop
in
push
pop
mov
push
inc
cmc
bound
push
mov
sub
out
jns
xchg
and
shrl
out
jno
sub
xor
mov
icebp
arpl
xchg
xchg
mov
imul
sti
pop
jg
mov
repnz
adc
lods
test
or
leave
scas
into
xchg
movsb
dec
pusha
jbe
stc
dec
xchg
mov
cld
in
jb
sub
out
dec
mov
daa
lcall
addr16
inc
jbe
push
in
outsl
pop
neg
inc
add
shlb
movb
out
jp
aad
test
mov
jl
imul
adc
outsb
push
shlb
sahf
cmp
jle
pop
pushl
popa
mov
daa
jp
fwait
cmp
subb
imul
iret
mov
xchg
pop
mov
or
shll
pop
mov
mov
jge,pn
loop
in
jns
imul
mov
fprem
sbb
frstor
xchg
mov
and
icebp
ss
movsl
push
sub
dec
mov
mov
ret
push
cli
iret
sub
sub
dec
xchg
pusha
pop
mov
ljmp
jno
pop
pop
insb
dec
mov
xchg
pop
shlb
dec
pusha
jbe
adc
shlb
pop
mov
mov
adc
dec
mov
cmp
add
sti
pop
lret
sub
gs
jg
dec
cmp
mov
std
or
mov
jns
arpl
inc
xlat
mov
and
jg
aaa
jecxz
dec
jge
outsl
test
jp
push
ret
test
cmp
push
push
loope
test
jns
pop
adcb
imul
stos
cmp
cli
sar
pop
push
out
inc
imul
xchg
or
inc
and
rcl
lcall
jns
mov
and
add
dec
xchg
dec
xchg
inc
or
test
insl
in
cli
arpl
sbb
dec
mov
mov
cmp
out
and
shlb
mov
add
popf
mov
div
into
mov
jecxz
movsb
pop
pusha
jbe
sti
lcall
pop
lcall
adc
bound
dec
inc
ret
add
mov
jecxz
dec
lahf
push
lret
jnp
ljmp
push
dec
xor
fs
cmc
cmp
push
push
push
cmpsl
fisubs
out
dec
xchg
pusha
pusha
jl
xorl
xor
imul
out
cmpsl
push
addr16
jns
push
jecxz
mov
inc
and
shlb
cmp
mov
nop
icebp
aam
jg
xchg
mull
aas
iret
xor
movsb
shlb
push
push
inc
pop
cmc
clc
lods
jns
or
xor
dec
lock
push
fisttps
mov
fnstsw
cmp
add
cmp
outsl
push
out
inc
aam
fdivs
.byte
