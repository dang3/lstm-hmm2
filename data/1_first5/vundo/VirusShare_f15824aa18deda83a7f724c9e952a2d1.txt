add
add
push
add
outsb
add
add
jae
and
push
add
add
add
jb
add
add
add
js
je
jb
popa
add
add
add
add
sub
add
add
push
add
outsb
add
add
jae
and
push
add
add
add
jb
add
add
add
add
add
sub
dec
add
and
push
add
jb
imul
add
inc
add
outsb
add
add
insb
add
add
popa
add
add
add
add
imul
add
jo
pop
add
imul
outsl
add
dec
add
je
jb
imul
add
push
add
add
add
add
arpl
outsl
add
and
push
add
jp
add
add
push
add
add
insl
add
insb
add
add
arpl
outsl
add
and
push
add
jp
add
add
add
jne
inc
add
jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
add
sti
cmpsb
fsubrl
stc
jge
jmp
cmpb
or
add
pop
add
push
add
add
add
sub
dec
add
add
add
add
add
add
add
add
add
dec
add
add
dec
add
mov
dec
add
add
add
add
add
add
add
mov
addb
add
add
add
add
add
add
push
add
ljmp
add
add
add
mov
add
dec
add
xchg
add
add
add
add
fildl
mov
add
add
xchg
add
pushf
add
add
add
daa
add
or
add
add
add
add
add
xchg
add
add
add
add
add
add
str
mov
add
add
call
add
add
mov
add
add
add
add
add
dec
add
add
add
add
add
dec
add
add
cltd
add
scas
add
add
dec
add
add
push
dec
add
add
add
ret
add
add
add
add
or
sub
add
add
add
add
cltd
add
add
add
add
sub
mov
ret
add
add
mov
add
add
das
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
xchg
add
pushf
add
clc
add
add
add
add
add
add
add
aas
add
add
add
mov
clc
add
add
xchg
add
add
add
fiadds
mov
addl
add
add
xchg
add
int
and
add
add
dec
add
add
add
mov
push
add
add
add
add
add
insb
add
aas
add
add
add
add
add
aas
add
dec
add
scas
add
add
add
mov
jb
sub
int3
add
mov
stos
add
add
or
push
add
add
or
add
push
add
add
add
add
add
or
pop
add
fiadds
hlt
add
add
add
add
add
add
adc
add
add
add
add
push
add
add
add
add
add
add
or
test
lea
sldt
add
add
loop
jnp
hlt
add
add
add
add
add
pushf
add
add
add
sub
ret
add
add
add
add
add
add
lods
add
sub
mov
dec
add
int3
add
inc
add
add
dec
add
add
add
add
sub
sub
mov
dec
add
popl
add
xor
mov
add
add
add
mov
add
add
cmp
sub
int3
add
mov
push
add
add
add
rolb
xchg
add
add
add
add
dec
add
add
add
addl
add
add
add
add
add
add
add
roll
push
add
add
add
add
add
add
icebp
add
add
add
pop
cmpsb
je
mov
pusha
jle
cmp
fiaddl
or
std
jbe
out
in
aas
sbb
iret
or
inc
sub
xor
fcmovb
pop
add
pushf
hlt
or
xchg
pop
xchg
inc
xor
mov
jb
or
push
mov
stos
in
repz
dec
aad
aas
push
insb
jne
add
sbb
pop
lahf
rcrb
mov
mov
mov
clc
lods
xor
jb
rcl
decb
rcr
or
xchg
inc
bound
das
xchg
cli
dec
jbe
jl
lock
addl
mov
sub
adc
xor
xor
jne
sub
mov
adc
faddp
jge
in
add
into
sbb
push
adc
push
xor
adc
adc
and
mov
loopne
test
insb
mov
pop
dec
into
push
icebp
sbb
sbb
pop
std
aas
aaa
mov
les
loopne
cmpsb
push
xchg
mov
sub
and
push
and
repnz
fs
iret
cmp
pop
or
jns
insl
shlb
mov
and
dec
jle
imul
das
push
in
cmpsl
imul
lahf
xchg
fwait
xchg
pop
nop
pop
mov
scas
jg
cmp
mov
push
xor
fsubr
dec
jnp
jmp
or
repz
fstps
push
outsl
cmpb
dec
int
jmp
leave
xor
xor
inc
dec
enter
aas
mov
pushf
jbe
cmp
push
xor
cmp
enter
inc
jne
jge
out
sub
inc
ja
mov
ret
pop
cmp
idivb
loope
fmulp
imul
test
pop
stos
leave
adc
loope
inc
ret
lods
mov
test
repnz
mov
xor
pop
push
adc
fistps
shrl
mov
out
outsb
xchg
inc
or
fstl
pusha
xchg
add
das
mov
jle
outsb
inc
stos
and
mov
jmp
out
jmp
dec
mov
xor
sub
pop
mov
xchg
pop
mov
jo
and
dec
add
inc
jb
test
push
pop
fwait
jae
loope
or
inc
mov
test
xlat
jecxz
pop
or
push
cmp
mov
lds
sbb
sbb
dec
and
mov
push
push
imul
fsubrs
jne
xchg
mov
pop
adc
iret
jl
enter
xchg
mov
pop
cmp
push
sarl
fidivl
jecxz
inc
cmc
push
es
mov
add
add
add
rolb
add
add
push
mov
push
push
push
call
mov
movb
mov
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
pushl
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
ret
jo
inc
repnz
ss
pop
rorb
adc
push
cld
shlb
add
xor
loop
repnz
andb
xor
loop
lock
loopne
rolb
ret
and
xorb
fstpt
jo
pop
ljmp
sbb
lret
or
add
jge
jle
gs
stos
pusha
mov
fcmovnbe
iret
xchg
jmp
les
jnp
les
xchg
dec
adc
cmp
dec
lods
test
xchg
into
daa
mov
cwtl
pusha
jnp
sahf
rorb
and
notl
pop
mov
inc
jbe
xor
je
cld
adc
jl
push
add
xor
sub
pusha
jge
xchg
lock
pop
mov
leave
mov
xorps
lea
std
repz
or
cli
xchg
pop
pop
xchg
outsl
mov
mov
out
push
inc
adc
xchg
lock
adc
sub
nop
movsl
inc
or
rcll
mov
in
aad
rolb
lds
jg
orb
lret
loopw
repnz
xchg
and
or
dec
call
sbb
xor
scas
add
xchg
jbe
pop
out
insb
mov
inc
mov
mov
xchg
push
mov
push
sbbb
sbb
push
out
push
xchg
add
cltd
aaa
xchg
bound
fists
cmc
cmpsl
and
and
mov
loopne
lock
shlb
mov
xor
loop
repnz
andb
xor
loopne
lock
shlb
mov
xor
pop
popa
addl
mov
adc
mov
dec
bnd
dec
nop
aad
xchg
fdecstp
aad
cmpsl
push
mov
inc
or
fucom
loopne
jnp
sarl
jbe
push
dec
xor
lahf
sbb
cmp
xchg
es
jb
mov
adc
or
ljmp
das
rclb
inc
shl
bound
popf
es
inc
jp
xchg
cmp
test
je
sti
shlb
pop
and
dec
cmp
movsl
cmp
leave
add
fwait
ss
cmp
add
push
sub
lea
cmp
add
outsl
loope
push
push
gs
xchg
mov
int3
clc
cmp
fimuls
or
dec
stos
cmc
cmpsl
add
fs
add
int3
jb
sub
insb
sbb
dec
cmp
pop
out
cmpsb
fnstcw
loope
ja
popf
xor
aaa
pusha
lret
fdivs
jl
xor
test
mov
in
pop
push
popf
cli
jp
xor
test
rolb
add
imul
push
insb
repnz
call
push
fidivl
lret
mov
scas
xchg
cltd
out
dec
inc
dec
test
aas
cmp
mov
jno
adc
test
or
push
pushf
fcmovnbe
push
xlat
outsl
das
xchg
movsl
sub
lock
adc
dec
or
jns
nop
movsb
test
fneni(8087
pop
dec
sahf
hlt
loop
cmp
add
inc
push
mov
mov
lret
test
jno
cwtl
dec
jbe
sbb
pop
push
sub
pop
cmp
sub
mov
inc
imul
shl
mov
pop
aam
push
nop
push
jl
or
dec
popf
outsb
icebp
sbb
push
push
lret
divl
push
pop
iret
aam
adcl
push
cli
xlat
and
mov
rcll
mov
pushl
out
dec
divl
push
stc
jmp
aam
test
mov
pop
jnp
push
xchg
imul
dec
sub
xchg
sbb
lock
add
inc
or
in
mov
bound
cltd
inc
or
push
pop
lret
shr
push
rolb
loopne
je
jnp
ret
pop
cmpsb
aaa
xchg
scas
out
mov
popf
mov
insb
hlt
pop
jle
out
jle
daa
clc
aas
xchg
scas
sbb
xor
cmp
push
jl
loop
push
cmp
xor
fisubrl
sti
inc
scas
lods
or
test
loopne
les
or
cltd
nop
cmpsl
add
cs
sbb
out
xor
adc
dec
arpl
adc
mov
in
add
mov
shll
fcomps
sbb
dec
adc
shl
add
dec
stc
pop
inc
outsb
mov
inc
push
mov
pop
xor
out
dec
loop
xor
insl
jp
add
add
in
lods
ja
jne
cmp
mov
xchg
rorl
out
inc
rorb
jecxz
arpl
hlt
dec
popf
sub
jne
adc
add
gs
mov
outsl
loope
add
or
adc
mov
stos
insb
das
and
mov
and
stos
inc
out
pop
icebp
mov
enter
or
push
pop
adc
bnd
mov
pop
in
dec
or
pusha
pop
and
dec
push
jl
sar
out
lret
mov
add
sbb
into
sub
sbb
in
outsb
or
cmp
xor
sub
sbb
or
xchg
push
xchg
sti
je
mov
sarl
addb
sti
push
push
adc
dec
movsl
das
std
xlat
test
push
scas
lea
push
add
add
mov
sbb
push
mov
notl
cmp
fstpt
shrl
and
mov
lods
sub
mov
in
out
sbb
js
aas
and
inc
xchg
mov
jo
jecxz
mov
cltd
daa
push
das
pop
jne
adc
adc
arpl
arpl
pop
sbb
stc
sbb
hlt
imul
sub
xlat
push
jns
imul
loopne
inc
cmp
mov
cwtl
dec
cmp
imul
cmpb
xchg
push
push
add
pop
sahf
stc
push
push
outsl
in
and
insl
pop
xchg
and
aas
mov
nop
dec
dec
adc
cmp
pop
mov
es
xor
scas
aaa
insl
mov
mov
lahf
jne
mov
lret
sarl
insb
jbe
andb
rolb
mov
dec
dec
das
jae
test
or
jl
test
lret
xor
scas
fsubp
bound
cmp
aam
push
and
test
imull
test
cltd
mov
sbb
daa
andl
xor
and
imul
pop
cld
mov
std
jge
fdivrs
cs
add
aam
xor
int
addr16
jnp
in
iret
mov
adc
std
mov
pop
push
mov
inc
mov
or
jns
mov
icebp
xor
xchg
cmp
out
mov
sbb
out
mov
push
sub
bound
popf
pop
sbb
add
imul
js
xchg
dec
mov
or
adc
cmp
out
cmc
nop
mov
int3
data16
sub
pop
mov
cmp
pop
ja
mov
daa
daa
sbb
out
sahf
test
and
cmpsl
cld
loopne
mov
scas
lahf
lea
cmp
pop
pop
xlat
mov
lcall
or
or
mov
cmp
aad
inc
pop
jns
dec
movsl
sahf
in
xchg
add
mov
sbb
pop
inc
outsb
fs
int
cmpsb
fidivl
aad
in
into
popf
aaa
inc
lods
mov
loop
push
hlt
sub
add
in
mov
sub
dec
loopne
sahf
or
lea
popf
inc
test
push
xor
cmpsb
fsubp
cmp
pop
clc
sub
sub
stos
lret
rcl
movb
repnz
inc
rol
es
sbb
pushf
call
xor
fwait
or
movsl
pop
dec
iret
in
fadd
mov
push
sub
rcll
cwtl
std
mov
cld
add
xchg
cmp
fcoml
iret
mov
xor
dec
ja
pop
push
push
sub
sahf
and
and
imul
and
and
fwait
sub
imull
mov
jmp
push
fs
cltd
imul
pop
xor
cmp
loop
adc
dec
cmpsb
fistpl
aam
add
inc
shrw
stc
je
shlb
iret
jae
cmp
iret
pop
sti
pusha
or
sbb
push
test
dec
test
push
mov
shrb
jnp
int3
pop
lret
dec
pop
in
pop
rcll
xor
seto
mov
aaa
stos
inc
sbb
les
xor
gs
jb
rol
adc
and
loope
push
push
ja
mov
out
cwtl
fisttpl
out
pop
push
aam
dec
mov
inc
lahf
pushf
mov
mov
push
sbb
hlt
jb
sbb
jns
fisubrl
push
push
cmpsl
xchg
pop
aad
xchg
mov
scas
iret
lods
je
mov
shlb
or
inc
sub
gs
pop
rcrl
pextrw
scas
iret
mov
pop
and
in
ret
inc
movsb
lock
jecxz
push
push
pop
dec
cmp
mov
xorb
data16
xor
xchg
lea
lods
lock
dec
adc
rcll
and
stos
and
daa
inc
pop
divl
out
repnz
enter
shlb
inc
or
add
jp
fnstcw
adc
dec
dec
outsb
inc
jge
stos
sahf
js
movl
fistps
imul
jns
rcrl
xor
je
push
or
lret
jnp
mov
js
jle
popf
xor
aas
outsb
mov
adc
mov
pushf
ds
push
shrl
xchg
repnz
test
std
sub
push
fmul
and
add
lahf
out
fcoms
inc
mov
jmp
or
xchg
cmpsb
das
push
fisubs
xchg
pop
lret
fidivl
mov
lret
or
ffree
inc
int
push
fs
outsb
iret
ds
inc
mov
mov
sbb
jne
outsl
mov
fcoml
fwait
sbb
in
hlt
sbb
aaa
das
ljmp
scas
mov
popa
xchg
mov
cmpl
pop
shl
insl
scas
cmc
fbld
jae
bound
bound
adc
mov
and
fs
stc
into
and
cmp
addr16
push
xchg
fisttpll
mov
jo
loope
jno
xchg
lds
iret
cmc
dec
stc
lods
mov
jo
mov
aas
xor
push
mov
insb
push
pop
add
out
mov
imul
jno
xlat
cs
std
icebp
sbb
xchg
shrb
sahf
push
xchg
mov
pusha
mov
insl
pop
add
jnp
dec
sbb
xor
mov
ss
and
pop
fnstsw
inc
sbb
idivl
jecxz
push
inc
inc
sahf
test
mov
sbb
push
jns
cltd
and
and
xchg
jo
sar
adc
mov
lcall
xchg
data16
xor
cld
and
xor
fisubrs
dec
test
xchg
xchg
mov
xchg
stos
mov
outsl
iret
cmp
sahf
test
push
lock
hlt
in
insb
rclb
lret
mov
das
inc
push
xchg
mov
xchg
mov
mov
loope
jl
jmp
add
stc
xchg
sbb
inc
sahf
jo
cwtl
rcrl
add
js
addr16
into
mov
gs
pop
sbb
pop
mov
mov
punpckldq
idiv
jne
xlat
cmc
xor
dec
or
fstpl
push
dec
jmp
cmp
daa
cwtl
dec
pop
sti
add
daa
mov
xchg
dec
jge
cmp
aas
jnp
push
sub
jbe
dec
out
add
xor
icebp
inc
and
inc
xor
xor
test
cmpsb
or
inc
out
fildl
ljmp
xor
add
movsl
pop
gs
mov
shrl
mov
push
rcrb
inc
mov
cltd
jb
imull
clc
or
inc
pop
adc
and
xchg
adc
in
mov
lret
inc
add
cli
test
icebp
push
pop
lret
scas
or
mov
mov
mov
sti
out
and
orb
cmp
int3
or
or
or
jno
xchg
lcall
cwtl
or
fwait
scas
sbb
xchg
add
leave
and
cs
popf
mov
and
jb
test
pop
push
xchg
sbb
repz
cmp
mov
aaa
jo
pop
pop
mov
adc
xchg
xchg
mov
dec
stos
sbb
and
add
pop
lds
addl
into
int
ss
add
lret
jnp
pop
push
dec
dec
xchg
sbb
incl
daa
mov
int3
ret
inc
cltd
sub
dec
add
dec
enter
cmc
vrsqrtps
gs
stc
shl
or
jg
jge
sbbl
push
jns
xchg
jnp
mov
test
stos
pop
aam
push
cmp
fcoml
jmp
xlat
jp
scas
sbb
lea
mov
push
mov
push
jns
out
cmp
jo
in
loope
loopne
pop
clc
imul
cmp
and
data16
xchg
out
ret
loope
push
out
jns
in
and
ret
mov
mov
inc
xchg
loope
and
loop
push
push
cmpsl
push
shl
jmp
arpl
iret
shlb
adc
xchg
das
inc
add
rorb
cmp
incl
divl
scas
mov
lods
add
mov
dec
dec
pusha
loope
fwait
cmp
pop
call
or
dec
jmp
or
gs
in
inc
mov
add
fsubl
inc
cmpsl
inc
dec
push
mov
or
cmp
cmp
or
push
xchg
sbb
cmp
ja
sbb
jno
adc
push
mov
mov
inc
mov
mov
sbb
adc
lods
imul
cltd
es
mov
out
movsl
bound
clc
xor
jno
aaa
jl,pn
or
push
xor
jle
mov
mov
dec
aas
stos
add
not
cmp
ja
jne
add
lock
data16
out
dec
add
cltd
xchg
popa
imul
push
add
sarb
imul
fadd
je
push
jp
mov
cmpsb
sahf
xor
leave
subl
fsts
push
inc
inc
loope
icebp
xor
mov
sbb
pushf
adc
xchg
clc
psrld
loope
mov
adc
jmp
cs
or
cmp
adc
stos
popf
mov
mov
pop
xorl
pop
mov
fnstsw
mov
cli
and
arpl
mov
iret
cltd
push
dec
push
jle
shr
out
cwtl
test
mov
pushf
outsb
mov
or
movsb
xlat
push
pop
fbld
js
sbb
dec
add
fsubrl
into
sub
and
xchg
iret
pusha
insb
mov
cmc
mov
sub
jg
push
mov
fld
mov
stc
jne,pn
aam
dec
js
mov
lcall
test
cmp
mov
xor
sub
jae
jge
ss
leave
jg
mov
stos
les
adc
popf
sbb
dec
mov
test
push
xchg
test
fadd
mov
jns
fildll
jmp
lea
repz
sub
repnz
insl
inc
std
sar
push
lret
cmp
add
push
outsl
je
xor
mov
add
sub
out
icebp
add
fwait
inc
icebp
cmp
add
mov
movsb
arpl
aad
mov
sbb
mov
xor
xchg
ret
loope
sub
push
jnp
jbe
dec
testb
sbb
add
idivl
sbb
pop
pusha
into
xchg
clc
mov
push
repnz
frndint
negb
push
adc
lock
or
insl
jae
repz
cltd
lock
imul
sub
mov
repnz
cmp
add
mulps
ss
leave
pusha
popa
and
xor
loope
xchg
jne
push
adc
sub
pop
mov
int3
lret
cmpsl
loope
adc
int3
adc
and
enter
or
mov
movsl
jae
jle
stos
fwait
outsb
sbb
aam
adc
push
sbbl
lret
imul
sub
int3
jmp
stos
pop
mov
pop
xchg
test
aad
xor
inc
jbe
mov
fistps
pop
das
jmp
xchg
lcall
jo
insl
clc
test
push
xor
ljmp
int
movsb
add
push
fisubrl
jl
cwtl
cwtl
out
leave
push
cmp
rcr
mov
adc
inc
lcall
cmp
dec
fildl
test
test
call
pop
popf
adc
fsubs
push
mov
push
call
and
pop
dec
jbe
or
mov
or
or
lea
xor
testl
mov
scas
pop
imul
mov
sub
adc
inc
aaa
mov
fstpt
jo
mov
mov
and
and
les
xor
dec
in
mov
sahf
add
pop
loope
push
cmp
push
fdivrl
lds
bound
inc
push
dec
or
dec
ja
stos
jp
cmp
shl
mov
lock
call
movsb
int
je
das
jae
mov
xor
adc
repnz
mov
mov
push
lahf
xor
in
es
pop
data16
cmp
inc
xchg
jne
stc
push
out
sbb
inc
or
mov
push
loop
inc
ret
imul
pop
scas
mov
in
popf
xor
gs
das
mov
fistl
mov
mov
jmp
jae
fdivl
imul
outsl
cmp
sti
lea
nop
push
cmp
push
pop
ds
test
pusha
cli
pop
jne
and
sarb
dec
ss
inc
sbb
ret
jnp
scas
mov
jg
sarb
mov
mov
fwait
mov
mov
lea
push
test
pop
add
shll
jnp
and
stos
inc
shrl
ret
outsl
jle
pshufw
outsb
dec
cwtl
mov
iret
xor
imul
dec
xchg
xor
call
pop
aam
push
jg
mov
lea
push
mov
les
fsubs
test
jnp
sub
inc
sbb
mov
mov
in
add
loope
popf
pop
insl
push
in
fneni(8087
es
push
aas
pop
pop
xlat
or
sbb
sti
cs
shlb
xor
int
jge
xchg
scas
out
rcl
mov
push
jo
ja
lds
hlt
inc
jae
add
mov
mov
sbb
stc
push
loopne
outsl
dec
sbbl
outsb
test
lods
fcomi
into
cmpsb
mov
lahf
nop
pop
aas
pop
loope
test
imul
xor
sub
roll
push
sub
sub
les
xchg
xor
outsl
fdiv
out
inc
shlb
out
inc
lds
lret
lret
nop
push
pop
mov
inc
jmp
xchg
daa
push
sahf
int
push
cli
imul
jl
pop
adc
rclb
fistpll
or
jmp
xor
or
mov
hlt
jmp
sbb
fnstenv
mov
lods
and
mov
ljmp
sbb
out
mov
mov
es
mov
sbb
push
mov
sub
lret
xor
inc
arpl
xor
add
push
cmp
repnz
std
inc
pushl
std
mov
test
fidivl
outsb
jl
imul
xchg
xlat
push
jmp
sub
pop
push
ss
decb
shlb
test
jl
outsl
insl
adc
sbb
imul
mov
or
enter
push
jno
iret
adc
jmp
jb
stos
shlb
lds
push
xchg
inc
fsts
or
outsb
scas
sti
mov
push
in
dec
lcall
dec
movsl
inc
in
sub
and
xor
jmp
jmp
pop
loope
outsb
hlt
pop
loop
nop
insl
cmp
jb
and
fcomps
inc
xor
mov
mov
xchg
xor
mov
xor
mov
push
push
lret
in
and
stos
and
outsl
mov
sbb
fucomp
jmp
xchg
or
idivl
cli
stos
mov
rol
jge
xlat
inc
out
mov
ljmp
pop
add
sub
aad
jp
pop
push
push
movsb
dec
push
aam
inc
xchg
shlb
jnp
push
or
daa
loop
call
std
mov
add
mov
lock
js
xor
jbe
xor
addl
mov
xor
clc
movsl
cwtl
jmp
aam
out
push
push
xchg
icebp
mov
jmp
mov
repz
in
and
aaa
xor
cli
mov
push
test
push
mov
int
dec
arpl
wrmsr
int
cli
dec
jno
leave
sub
or
xchg
xchg
jmp
mov
fimull
mov
push
mov
jl
push
aas
imul
es
inc
or
and
scas
enter
clc
dec
mov
pop
sub
cltd
jle
aas
add
push
testl
sbb
sbb
push
inc
fdivrp
sub
aam
mov
mov
mov
ret
adc
sarl
setbe
sub
test
in
xor
mov
cmp
js
pushf
or
mov
and
call
fcoms
cmp
rcll
jns
and
pop
aad
cs
add
pop
xchg
lock
jno
and
mov
or
mov
pop
sub
dec
push
cmpsl
and
mov
aas
or
inc
xchg
xchg
cmpsl
pushf
mov
jbe
push
repnz
sbb
mov
mov
fdivrl
xchg
xchg
xchg
inc
adc
fmul
jge
dec
xchg
cmp
int
xchg
mov
aad
les
icebp
rol
mov
mov
ljmp
icebp
sbb
int
test
jae
stos
cmp
push
lret
mov
rcll
mov
pop
sbb
add
addl
les
icebp
mov
iret
outsl
fnsave
nop
and
jmp
lock
test
dec
xchg
add
push
and
sub
jmp
fsubrl
int3
testl
lods
jle
mov
adcl
fs
cmp
sti
adc
scas
repz
push
scas
repnz
andb
xor
loopne
lock
shlb
mov
xor
loop
repnz
andb
xor
loopne
lock
shlb
mov
xor
loop
repnz
andb
xor
loopne
lock
shlb
mov
xor
jecxz
repnz
andb
xor
add
adc
shlb
sub
outsl
fbstp
call
inc
xchg
incl
fidivrl
pop
pop
dec
dec
in
jg
outsl
pop
mov
cmpsb
aas
xchg
xchg
ja
call
inc
lahf
aaa
daa
mov
testl
pop
rorb
cmpsl
aas
xchg
das
xchg
ja
call
inc
lahf
aaa
daa
mov
testl
ja
insb
sti
jno
inc
lock
cmp
pop
mov
enter
add
mov
xchg
ds
shlb
ja
ja
cmp
or
test
sub
shl
cmpsl
sbb
ds
rcl
daa
addr16
cmpsl
aaa
test
sarl
ret
les
and
cmp
sbb
dec
lcall
adc
pop
out
or
repnz
loope
addr16
aas
loop
xchg
mov
cwtl
xchg
test
dec
and
test
mov
or
xchg
in
mov
cmp
divl
jmp
dec
lods
inc
popf
and
maskmovq
mull
cmp
cmpsb
push
idivl
xchg
inc
js
ja
call
inc
lahf
aaa
daa
mov
testl
pop
mov
cmpsl
aas
xchg
das
rcrl
mov
repz
push
fidivl
jae
xchg
sbb
add
jnp
jnp
fcompl
mov
and
je
bound
xchg
dec
xchg
ds
xchg
jp
pop
xor
das
shll
xor
aas
lahf
add
scas
pop
pop
testl
pop
mov
cmpsl
aas
xchg
das
xchg
ja
call
inc
lahf
aaa
daa
mov
testl
pop
mov
cmpsl
aas
xchg
das
xchg
ja
dec
inc
cmp
addb
movsb
push
inc
mov
ss
pop
pop
inc
add
popa
mov
lret
dec
ds
insb
into
ja
jbe
in
sub
test
xlat
rcrb
xchg
mov
jb
ja
psubusb
scas
cmp
or
push
inc
adc
jo
out
or
adc
movsl
sbb
out
xchg
sbb
inc
fisttps
jle
mov
pop
inc
es
jle
xchg
rcrb
mov
dec
ss
sti
lret
mov
fisubrl
rcl
push
cmc
mov
adcb
in
mov
scas
lea
ss
cs
sub
inc
repnz
loopne
push
mov
mov
enter
dec
mov
or
jl
test
pop
sbb
lods
aad
div
mov
outsl
sub
dec
es
xchg
dec
mov
shll
jno
rolb
popf
add
mov
push
adc
fstpl
mov
jae
je
or
add
into
mov
es
push
dec
imull
mov
test
mulb
outsb
popf
mov
lods
into
mov
sub
outsl
push
lock
hlt
pop
into
jl
mov
orl
pop
testl
cmpsb
push
jno
repnz
cmc
jmp
lods
mov
push
xchg
in
sbb
push
add
sub
lcall
cmp
add
data16
pushf
roll
fldcw
lret
cmp
mov
mov
mov
loop
jne
adc
mov
lahf
mov
xchg
aad
mov
add
shrb
gs
push
jmp
inc
add
mov
in
icebp
adc
dec
dec
xchg
add
mov
xor
inc
into
and
pop
lock
sti
push
dec
imul
push
jno
xor
push
pop
aas
jl
cmp
sub
and
sub
dec
jnp
rcrb
sub
mov
int
add
mov
cltd
mov
movsb
imul
adc
cmp
push
stos
sbb
test
mov
cmp
pop
das
cltd
outsl
xor
or
test
insb
andl
lahf
inc
orb
fdivl
dec
cmp
sub
mov
mov
popa
mov
mov
jo
icebp
int
das
out
sub
lea
push
mov
push
dec
rorb
jae
add
loopne
sar
repnz
cwtl
inc
shrb
pop
cmpsb
and
mov
repnz
mov
push
or
imulb
stc
daa
fwait
popa
dec
and
sarl
mov
lea
mov
add
test
lock
push
inc
sbb
lahf
dec
lods
cmp
sahf
mov
xchg
cld
inc
je
dec
push
lds
xchg
test
and
cmpsl
frstor
jne
inc
cmp
fs
iret
ljmp
pop
fwait
inc
scas
pop
xchg
inc
pop
xadd
aaa
test
jno
fwait
and
dec
inc
add
xchg
and
inc
es
inc
mov
outsl
lcall
sbb
das
into
notl
xchg
testb
clc
mov
push
fldl
shrl
andb
pop
test
xor
sbb
push
sbb
movsb
pop
push
mov
dec
mov
imulb
or
insb
push
into
fmull
fnstsw
daa
dec
add
lods
xchg
and
adc
mov
ror
cmp
popa
cmp
scas
andb
or
jp
movsb
rdtsc
adc
cmpsb
movsl
adc
sub
push
jb
popl
sub
cmp
jb
arpl
sbb
xchg
dec
cltd
cli
rcrb
sarl
pop
test
mov
lods
out
lret
push
sub
nop
inc
or
mov
mov
into
mov
jl
test
cmpl
sbbb
stos
adc
and
ret
jne
push
inc
sahf
inc
mov
lahf
pop
pop
adc
add
cwtl
out
pop
xchg
mov
es
or
orl
outsl
adc
xchg
mov
jno
jns
imul
ficoml
loope
sub
outsb
sbb
pop
xor
mov
inc
xchg
pusha
mov
jnp
jo
or
push
lock
cmp
sbb
fwait
inc
jae
enter
enter
mov
dec
mov
jnp
pushf
icebp
out
cmp
cmc
fmuls
xchg
inc
or
mov
lea
out
mov
jnp
cmc
add
add
adc
sbb
std
fnstenv
push
fst
stos
or
jl
sbb
cmp
outsb
and
xor
mov
push
ret
jl
fisubs
adc
out
fistps
xorl
mov
jp
push
push
dec
pusha
jns
sarb
mov
mov
in
shl
add
jecxz
ja
sahf
into
fdivr
xchg
fnstsw
aam
insl
cmc
pop
std
nop
inc
pop
adc
pop
add
mov
add
jbe
fucomp
insb
xor
cmpb
push
fmull
movl
mov
int3
jge
inc
int
sub
pop
rcrl
ret
dec
outsl
mov
out
fldt
jo
subl
call
dec
adc
xchg
adcl
lcall
inc
sbb
test
jae
fsubl
push
aad
inc
lock
lock
nop
repnz
int
mov
pop
xor
mov
pop
fiaddl
lar
enter
or
add
mov
aaa
out
mov
mov
xchg
inc
lcall
adc
jl
xchg
push
pand
add
dec
cwtl
push
jl
stos
add
sbb
out
cmp
pop
ret
pusha
jno
mov
shlb
lods
loope
add
sbb
int
push
repz
rorb
pop
xchg
push
jnp
dec
jge
fcoms
inc
mov
jg
idivb
push
icebp
jno
cmp
movsb
jecxz
nop
cmp
xchg
xlat
aad
popf
lahf
mov
push
mov
mov
jno
pop
inc
pop
dec
loopne
inc
mov
popf
int
push
or
ss
push
push
inc
cli
mov
mov
pop
fists
adc
je
jae
loop
je
push
sbb
adc
add
xchg
rcl
stos
sarl
push
inc
cmpb
mov
mov
fisttpl
pop
lods
push
into
push
fisubrs
jae
push
push
sbb
mov
in
movsb
ja
into
cmp
stos
mov
enter
fildl
and
rolb
incb
in
scas
rcll
into
mov
clc
xchg
push
nop
outsb
je
push
dec
lcall
jecxz
lret
mov
addr16
clc
or
pop
push
in
loopne
pop
dec
cmpsb
mov
or
jns
jns
adc
fstpl
mov
sbb
cmp
push
aam
sub
push
pop
cmpsl
arpl
inc
fldl
aad
sbb
adc
in
jno
or
pop
out
addr16
es
int
inc
dec
mov
mov
xchg
xchg
std
hlt
inc
push
sbb
jne
mov
cs
push
sti
cmpsb
xchg
and
fldcw
and
andl
in
mov
and
les
rcr
cmp
jbe
mov
add
add
arpl
jae
xchg
mov
inc
hlt
dec
mov
xor
lret
xor
scas
push
pop
mov
aas
push
xlat
test
into
mov
cwtl
xchg
pop
cmpsb
cmc
cmpsb
loopne
fnstenv
lea
jne
cs
mov
shll
outsl
mov
cmp
mov
add
sub
pop
push
xchg
roll
or
mov
sbb
stos
inc
es
mov
jp
cli
xlat
pop
pushf
mov
xor
push
ljmp
xchg
fstpt
pop
xorb
dec
mov
or
loope
lahf
jbe
loopne
mov
xchg
push
test
dec
movsl
cmp
jne
xchg
repnz
pop
mov
imul
aam
sbb
mov
lret
int3
xchg
cmpsb
add
call
mov
mov
pop
jnp
loopne
paddusw
xchg
mov
pusha
push
popa
out
mov
or
in
subb
and
loop
sahf
aam
in
sbb
mov
popf
repz
dec
hlt
sbb
mov
xor
push
shrb
pop
inc
leave
call
out
mov
jae
js
sbb
inc
ret
jns
testb
mov
scas
cmpb
aad
mov
sbb
ret
xor
call
push
loop
xchg
mov
push
dec
outsb
ja
pop
into
ds
int3
xor
cmp
sahf
ljmp
aaa
inc
adc
aam
xlat
sbbb
or
mov
ficoml
jno
mov
xor
jg
or
sbb
flds
xchg
mov
loopne
push
adc
pop
xor
pop
adc
mov
ds
and
jg
imul
mov
sub
mov
pop
xchg
push
jne
loope
mov
lods
leave
mov
xor
cli
je
sub
std
scas
pop
aad
pop
or
xor
movsl
daa
scas
mov
adcl
and
lods
and
mov
pop
mov
int
push
jns
ss
adc
add
fbstp
mov
fs
cmc
or
sbb
loopne
jp
notl
cmp
es
dec
test
dec
mov
sbb
icebp
pop
fs
int3
scas
jmp
dec
jnp
jge
fnstcw
and
jno
dec
mov
int
leave
into
mov
rcll
inc
mov
pop
cmp
jmp
jl
ds
push
in
mov
pop
mov
and
aaa
sahf
hlt
push
repz
push
mov
sbb
scas
dec
sbb
nop
stos
cli
icebp
mov
sbb
je
mov
mov
testb
xchg
test
xchg
jmp
cmpsb
push
cmp
or
std
popf
cmc
stos
adc
add
out
pop
sub
mov
dec
inc
stos
cmp
xor
lea
adc
cmp
mov
push
ret
loopew
arpl
test
js
stos
xchg
pop
and
mov
push
push
dec
mov
cmc
mov
ljmp
add
cltd
jg
push
loopne
repnz
fcmove
sbb
cmp
or
std
cltd
std
mov
cli
daa
mov
test
sbb
pop
and
lods
xor
xchg
cmc
ret
aaa
cmp
mov
add
push
repz
movsl
stos
movsl
mov
sbb
inc
mov
pop
stos
data16
iret
fwait
movsl
inc
test
insb
scas
xor
aad
shll
into
pop
inc
nop
leave
cli
and
dec
cmp
jns
outsb
divl
jmp
jbe
and
xchg
repnz
jno
ljmp
and
push
dec
sahf
mov
jns
pop
stos
or
stc
loopne
rcrl
test
xor
ficoml
sub
rep
mov
add
aaa
cmc
clc
roll
lret
or
dec
cmovle
jbe
xor
sub
push
addr16
push
cmp
imul
push
loop
inc
sbb
or
movb
add
inc
imul
pusha
test
fldenv
xchg
into
aas
jns
stos
or
pushl
sbb
or
or
lcall
xor
ss
shlb
cmpsb
pop
sbb
pushf
lock
sub
clc
push
xchg
stos
nop
mov
mov
pop
cmp
inc
nop
mov
das
cmpb
add
jbe
xchg
cmovnp
ss
mov
aad
sarb
jne
in
push
pop
js
adcl
add
push
rcll
inc
pop
mov
pop
cmp
or
sti
adc
iret
sbb
and
dec
xor
in
mov
mov
sahf
fcmovnbe
aaa
test
je
xor
inc
je
jb
pop
sub
dec
xchg
or
sub
movsb
testb
sub
mov
addr16
loope
dec
pop
pop
popf
outsl
fwait
nop
subl
das
aaa
mov
cmp
jno
pop
loopne
fidivl
aaa
sub
out
push
inc
or
jecxz
or
hlt
outsl
in
mov
aas
push
pop
dec
in
test
inc
rcrl
test
das
ljmp
dec
lods
cmp
js
xor
orb
mov
insb
push
out
jle
decl
xchg
and
push
jo
jo
in
inc
cmp
xlat
xchg
push
aaa
push
mov
mov
add
and
cs
inc
repz
xchg
aaa
outsb
ss
sub
call
test
mov
xor
cmp
cli
push
xchg
jecxz
add
sti
insl
iret
nop
fdivs
xor
cmp
pusha
mov
inc
out
dec
rorl
loop
cmp
fidivrl
adcb
and
std
mov
pop
jmp
filds
add
lcall
daa
xor
jg
sub
cmp
loopne
sbb
test
xchg
pop
and
mov
insl
pop
and
ja
not
pop
sahf
mov
in
add
or
js
sbb
mov
stc
addl
xchg
mov
mov
lods
sbb
jg
dec
shll
lcall
inc
sahf
aad
or
xlat
dec
xor
pusha
shll
inc
aas
lahf
xchg
jmp
adc
fwait
or
test
sbb
dec
or
push
or
out
sub
in
daa
not
lret
push
lea
inc
in
and
pop
mov
addr16
movsl
xor
das
jl
arpl
in
mov
pop
scas
testb
inc
into
push
and
mov
incb
add
decb
in
mov
sub
std
xchg
inc
stos
sbbl
xor
adc
in
icebp
mov
negl
sbb
inc
lods
sarb
ret
inc
cmpsb
dec
aam
mov
xor
xor
daa
sbb
int3
cmp
stos
orb
arpl
inc
or
mov
or
cmc
nop
and
and
sbb
xor
std
imull
or
or
je
dec
inc
loopne
sub
ss
inc
inc
jg
outsl
add
jmp
pop
jg
xlat
xlat
dec
xor
in
pop
jnp
dec
divl
or
pusha
and
pop
mov
cmpsl
add
jns
lock
pop
aaa
in
adc
shr
pop
loop
iretw
sub
sub
push
sti
sub
scas
dec
fnstsw
leave
push
shl
cmp
notl
es
or
adc
aaa
mov
xchg
sbb
jmp
int3
nop
mov
xor
mov
pop
mov
pop
pop
in
gs
test
inc
loope
loop
jno
mov
mov
jecxz
pop
pop
pop
scas
imul
sbb
jmp
or
adc
into
jg
jb
dec
sub
popa
ss
adc
fsubrs
mov
enter
sub
add
cmc
dec
mov
xchg
lret
sub
scas
lods
jmp
mov
mov
sbb
ret
sarb
fs
ljmp
sub
dec
pop
js
shlb
fldcw
pop
dec
cltd
adc
add
jno
lcall
jns
adc
pop
in
mov
or
cmpsb
sub
cmp
sbb
shl
fs
push
out
out
mov
cmp
int3
scas
pushf
sahf
lods
jne
ds
pusha
mov
in
iret
movsl
adc
or
pop
clc
pop
push
sbb
ja
xlat
pushl
dec
mov
jno
mov
sbb
cmp
decb
push
fildll
jge
int
out
cli
mov
out
and
cmp
cwtl
ss
jg
pushf
cmpsl
add
les
in
mov
jecxz
cmp
les
sbb
dec
push
and
sub
adc
test
imul
enter
imul
loopne
cmpsb
mov
and
bound
push
mov
je
mov
shr
mov
sbb
into
shr
cmpl
inc
pop
or
cmpsl
dec
pop
cmp
fisubs
mov
int3
rcrl
cmp
test
mov
push
mov
jb
ds
xchg
jo
fmuls
and
mov
jo
and
and
push
stos
stos
data16
sbb
movsl
aam
or
cmp
stos
clc
mov
pop
mov
int3
ja
mov
jg
push
add
jmp
add
int
push
enter
insb
orb
jbe
loopne
mov
push
sarl
repz
xchg
cltd
sub
jl
test
pop
adc
add
subl
jl
cmpb
push
mov
add
outsl
mov
jno
fwait
cld
imul
into
pop
dec
xor
sbb
fwait
mov
dec
ret
or
ss
adc
loop
loope
cmp
dec
mov
adc
pop
js
push
arpl
adc
mov
pop
fidivs
add
ret
cld
shl
adc
dec
and
mov
or
cli
jbe
jb
or
inc
jle
adc
leave
xchg
call
xchg
pop
jbe
lahf
bound
sub
mov
repz
adc
or
inc
mov
mov
and
or
push
push
imul
cmp
inc
jl
stc
adc
xchg
push
jecxz
mov
jb
mov
popa
scas
mov
mov
mov
cld
out
inc
insl
adc
mov
xchg
repz
jl
repnz
and
stos
cli
stos
adc
int3
mov
xor
jle
cmp
mov
cmp
imul
stos
lods
lret
mov
sub
add
fdivl
dec
pusha
shll
lahf
scas
sahf
std
xchg
hlt
push
xor
lea
xorl
push
ja
sub
add
cmp
scas
lods
add
xchg
mov
push
add
or
cmp
sbb
add
mov
addr16
xorl
imul
adc
cmp
dec
dec
test
pop
lock
enter
add
jno
jle
andb
and
cmpsl
lret
push
loope
jecxz
rcll
ret
cmp
addr16
xchg
dec
out
int
or
mov
xlat
mov
enter
test
xlat
xor
in
loope
or
in
addr16
rorb
imul
mov
out
inc
imul
ret
loop
mov
pop
in
sub
les
cmp
lcall
push
jnp
inc
mov
cs
sahf
sbb
push
mov
imul
sbb
xlat
cmp
sbb
ret
and
cmp
rorl
int3
es
sbb
dec
cwtl
or
adc
outsb
je
out
or
iret
jle
jb
jge
inc
push
nop
fmuls
xor
push
pop
xchg
add
rcl
sbb
loopne
lcall
cmp
out
sbb
lret
xor
int
push
jl
mov
gs
fistl
jno
push
sahf
sbb
andb
lods
in
dec
and
fistpll
jnp
xchg
pop
xchg
fiadds
insb
mov
and
test
dec
imul
call
push
jge
push
enter
lret
ficoms
mov
mov
leave
dec
test
stos
or
xlat
imul
push
jmp
adc
lret
inc
fcomip
and
push
push
outsl
and
jmp
dec
inc
ss
or
pop
or
in
jmp
mov
mov
lcall
jp
addr16
dec
in
mov
cld
mov
pop
cs
test
movsb
roll
add
add
xchg
sub
xor
outsb
jo
mov
fs
insl
cmp
cld
arpl
xor
daa
fbstp
pusha
add
pop
dec
add
fcompl
ljmp
push
or
cmpsl
aaa
and
pop
add
sub
and
shlb
dec
and
shlb
orb
sahf
adc
out
mov
jg
inc
mov
mov
out
ja
xor
hlt
in
repz
fwait
xor
std
int3
jae
adc
inc
out
sbb
out
jmp
imul
out
dec
imul
sbb
sbb
jns
xchg
in
xor
pop
fistpl
ret
mov
aaa
mov
push
outsl
mov
sbb
icebp
shlb
scas
dec
out
scas
mov
andl
xor
andl
cmpxchg
push
cwtl
cli
mov
lahf
loopne
das
stos
repz
push
mov
push
out
inc
lahf
aaa
daa
mov
testl
pop
mov
cmpsl
aas
xchg
das
xchg
ja
call
inc
lahf
aaa
daa
mov
testl
pop
mov
cmpsl
aas
xchg
das
xchg
ja
call
inc
lahf
aaa
daa
mov
testl
pop
mov
cmpsl
aas
xchg
das
xchg
ja
call
inc
lahf
aaa
daa
mov
testl
push
push
in
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
mov
mov
lea
push
movl
movb
movl
movb
movb
movb
movl
call
leave
ret
sub
sbb
in
je
out
pop
aaa
mov
sbb
imul
pop
dec
lods
cmp
in
jp
dec
int3
pop
repnz
sub
cmp
add
sbb
inc
cli
jl
dec
ficompl
enter
ret
fcompl
mov
pop
out
into
sub
pop
loop
ljmp
aas
mov
sahf
xchg
inc
call
jae
outsb
jecxz
add
in
cmpsl
mov
aad
pop
imull
mov
pop
scas
jg
clc
lahf
arpl
ja
xor
and
rorb
dec
adc
and
in
aad
insb
mov
cmp
xchg
sub
lcall
cwtl
out
imulb
pushf
xchg
clc
jp
mov
pop
push
stos
test
fs
lret
mov
and
jp
inc
sub
arpl
or
cmp
in
fucomip
scas
push
cli
imul
push
cmpsl
inc
or
in
xchg
mov
outsl
fstpl
fisubrl
addr16
cmp
mov
insb
pushf
or
sbb
int3
cld
dec
insb
sub
xchg
cld
push
stos
and
push
fisubrl
lods
dec
sarl
lock
mov
jmp
jg
sub
addr16
add
pxor
dec
call
sub
and
das
inc
fists
imul
lock
pop
fsubrl
or
sbb
insb
cli
jl
dec
ficompl
cmp
in
jp
dec
int3
pop
fsubrl
or
sbb
insb
cli
jl
dec
ficompl
pushf
ljmp
xchg
cmc
and
clc
jecxz
arpl
jb
iret
test
xchg
pushf
xlat
add
push
notl
add
loopne
cmpsb
mov
pop
jp
pop
push
les
cmc
mov
cmp
ret
jge
int
jno
pop
xchg
daa
pop
xchg
loopne
xchg
sbb
js
push
jnp
shrl
inc
iret
dec
and
call
mov
imul
jnp
fldcw
or
pop
sbb
or
xor
xchg
add
ret
ss
neg
test
repz
lds
pop
fidivrs
pop
mov
mov
jecxz
cmp
scas
mov
pop
sub
aas
test
lcall
testb
cli
fnstsw
sub
out
stc
shlb
and
out
js
sbb
fcompl
lods
dec
adc
and
rcrb
repz
jb
call
aas
adc
je
dec
mov
out
clc
aas
mov
nop
idivl
or
negb
lcall
xor
and
btc
push
xchg
inc
test
inc
push
lret
dec
push
or
mul
lock
pusha
hlt
int3
pop
push
das
or
test
mov
test
xchg
dec
sbb
test
jp
in
clc
enter
or
mov
out
mov
push
divb
mov
gs
stos
repz
pop
and
in
popa
stc
ljmp
adc
outsl
jmp
sbb
sti
xor
insl
popl
mov
int3
mov
in
in
movsb
push
fs
pushl
in
imul
jno
sarl
idivl
das
mulb
iret
test
es
daa
pop
test
scas
jg
shlb
push
mov
mov
sbb
sarl
test
adc
mov
inc
adc
lret
popf
mov
std
pop
scas
aad
cwtl
jno
or
mov
call
shrb
gs
icebp
call
cmp
sahf
sbb
jo
mov
cmpsl
and
fnstenv
cmp
insb
filds
add
push
cmpsl
push
xchg
daa
jg
jbe
mov
repnz
push
arpl
imul
pop
pop
test
pop
test
and
jo
std
xor
ja
int3
fdivs
lahf
pop
xor
cmp
repnz
add
push
cwtl
mov
lahf
lret
mov
xor
cli
pushf
orl
adc
jno
and
pop
inc
inc
mov
pop
movsb
cwtl
push
jbe
sahf
mov
loope
push
push
and
sbb
push
lods
mov
cmpsl
movl
sbb
xchg
pop
sub
pop
mov
cmpsl
imulb
imul
or
push
cmpsl
sub
fwait
jge
cmpsb
fisubs
pusha
or
aaa
push
xchg
cld
dec
mov
xor
lret
jge
lahf
sbb
inc
in
test
push
cmp
or
arpl
leave
dec
loop
insl
int3
cmp
loop
jg
repnz
inc
jge
in
jle
pushf
or
push
cs
lods
xchg
jge
jl
cli
mov
nop
out
rcrb
cmp
loop
and
mov
icebp
pop
sbb
push
jae
out
cmp
out
out
test
mov
and
cmp
jns
xor
stos
xor
inc
pop
cwtl
scas
xor
test
lods
sub
adc
cmp
ret
dec
ljmp
lret
out
xchg
mov
dec
xchg
aaa
rclb
add
push
push
mov
cmp
adc
push
imul
mov
test
es
push
adc
dec
dec
test
mov
pop
pushf
push
inc
aad
mov
sub
cmp
call
inc
enter
or
pop
into
xchg
inc
cmp
push
cmp
lds
add
in
std
xchg
fsts
in
add
dec
shl
dec
pop
ficomps
sti
add
imull
push
fldenv
inc
and
xchg
xchg
mov
lret
cltd
aas
inc
ljmp
jo
test
stos
test
ret
push
mov
mov
inc
lahf
jmp
dec
gs
xchg
mov
and
hlt
ret
mov
jl
ljmp
lahf
outsl
pushl
out
jne
push
loope
repz
mov
adc
scas
xchg
mov
cmpsl
mov
mov
push
orl
mov
adc
sbb
imul
inc
popa
iret
leave
mov
cmpsb
lahf
sarl
call
adc
lret
lret
sub
mov
add
push
rep
cld
daa
lock
cmp
imul
sub
mov
dec
mov
xchg
mov
cmp
cmpsl
filds
shrb
arpl
cli
jp
sub
rol
xchg
in
cltd
test
lods
inc
cmpsb
xchg
mov
jns
outsb
jl
orl
iret
mov
call
adc
push
outsb
fwait
ret
xor
sbb
in
outsb
sub
inc
lea
ja
adc
xor
pop
idivl
mov
sub
gs
sub
fistps
mov
inc
out
inc
loope
mov
sub
push
cli
dec
das
faddl
mov
lock
mov
sbb
mov
inc
dec
jecxz
pop
or
xor
mov
into
cmp
ss
ds
dec
mov
out
mov
mov
pop
add
push
loop
jbe
popa
sub
repnz
movsl
push
mov
imul
and
mov
and
aad
pop
mov
outsl
xor
push
aas
ss
loopne
mov
push
imul
aas
mov
sbb
sbb
incb
js
les
mov
stos
cmp
mov
les
icebp
pop
jbe
jae
add
rorl
jnp
mov
or
jge
cli
data16
and
push
shlb
inc
fcmovu
fwait
dec
in
ret
xor
sbb
mov
adc
ret
ds
aam
adc
cld
mov
enter
rcr
xchg
negb
scas
fs
or
repnz
mov
stc
xchg
xchg
dec
dec
push
outsb
and
or
adc
shrl
andb
cmc
int
sti
or
or
inc
rcrl
jecxz
das
add
cmp
pop
lcall
sbb
push
mov
jo
mov
xor
dec
test
or
mov
xchg
out
lret
sti
xchg
aaa
mov
mov
push
lods
pop
xchg
ret
das
insb
dec
jae
push
xor
xchg
into
loop
ja
ja
push
hlt
repnz
adc
xlat
pop
jb
mov
insl
daa
fldt
addl
out
push
pop
dec
movsb
aas
sub
ret
movsl
jle
or
bound
test
leave
push
jmp
sbb
sbb
data16
pop
or
push
sub
jg
jnp
fiaddl
cmp
sbbb
stc
scas
sub
sahf
mov
dec
fdivrs
or
in
sub
stc
ret
cmp
sub
and
shlb
xor
lea
mov
gs
nop
cmp
pop
ljmp
mov
dec
mov
imul
mov
arpl
jo
and
and
movsl
idivb
mov
shll
aam
ret
in
into
sbb
mov
leave
movsl
out
loopne
cmp
push
mov
push
or
cmp
ret
add
scas
int
test
cmp
outsb
aam
fimuls
inc
cmp
and
ds
sub
mov
mov
arpl
sub
fsub
into
into
mov
js
pushf
jecxz
aad
lock
sbb
lcall
add
push
push
inc
orl
push
pop
icebp
and
test
das
sub
fsubl
shlb
add
std
mov
push
adc
bound
jo
cmpsl
and
cs
mov
rorb
shrb
xor
or
call
pop
pushl
pop
cltd
mov
mov
lea
shrl
test
add
popa
stos
rorb
xor
jmp
lahf
lods
out
and
dec
inc
sub
pusha
xchg
xchg
subb
push
cmp
outsl
aad
enter
sbb
sbb
js
sbb
mov
mov
inc
pop
cltd
nop
enter
int3
outsb
jno
das
lds
cmp
loop
in
loopne,pt
push
jle
inc
sbb
mov
dec
sahf
add
push
jo
rorb
fiadds
sbb
mov
mov
jo
outsb
sti
cmp
sub
cli
mov
divl
xchg
fsubrs
xor
and
adc
ds
imul
test
daa
cwtl
or
pusha
movsl
ljmp
adcl
pop
lods
int3
in
sbb
out
mov
push
insl
mov
mov
sub
and
pop
out
data16
rcrb
push
pop
ss
push
dec
jb
stc
or
les
cld
add
sarb
inc
xor
inc
cmp
jl
push
xor
fsubs
lret
in
cmpsb
das
inc
ffree
pop
dec
mov
adc
mov
pop
stos
dec
fs
add
add
jmp
inc
pusha
add
fisubrl
pop
mov
stos
push
subl
mov
ret
sti
dec
outsl
xchg
lahf
hlt
mov
cli
mov
cmp
sub
repnz
js
push
mov
clc
push
mov
fsubrs
jp
or
out
xchg
aam
aad
sbb
sbb
imul
mov
jp
mov
cmc
xchg
scas
inc
int3
pop
sbb
xor
hlt
rcrl
jecxz
pusha
push
lods
or
or
xor
into
xchg
mov
ja
jmp
aad
data16
sub
ror
fiadds
add
decl
and
pop
pop
movsb
in
inc
mov
fwait
icebp
lcall
xor
cltd
xlat
les
arpl
push
pop
imul
das
xor
loop
pushf
mov
xorl
add
cmpb
cmc
movsb
push
negl
add
or
mov
pop
cmp
iret
fsubr
xchg
lock
mov
addl
enter
daa
mov
outsl
iret
mov
mov
push
ret
add
addr16
dec
sbb
and
jae
sub
jbe
jb
push
xchg
xor
jne
inc
inc
lds
xor
scas
xchg
jle
cs
cmp
adc
mov
dec
loope
add
imul
adc
jne
jne
fld
popf
add
push
fiaddl
push
xchg
cmpsb
es
jecxz
add
imul
jae
mov
xlat
xchg
aas
mov
mov
loope
dec
and
cmpsl
loope,pt
rcl
and
shlb
or
cmp
push
fstpt
cmpps
nop
dec
bound
jge
hlt
xchg
jae
cltd
cs
dec
std
xchg
js
sub
roll
pushf
adc
in
dec
in
in
add
cmp
mov
sahf
jnp
movsl
leave
xor
cmp
add
ret
add
mov
push
es
daa
cmpsb
inc
jg
xchg
aaa
imul
jo
mov
push
pop
add
sub
mov
aad
orl
ret
jge
or
movsb
mov
and
pop
pop
cs
xchg
popa
mov
push
cmp
sub
scas
imul
push
sbb
lods
adc
pop
scas
pop
xchg
jl
mov
xchg
xchg
xor
loop
sbbb
add
mov
push
decb
or
sub
imul
jle
jns
shr
cmpsb
loope
xorl
inc
cwtl
xor
jns
ss
jnp
testl
cmpsb
das
bound
adc
inc
stos
mov
leave
push
rcrl
pop
nop
push
scas
push
push
movsw
mov
pop
int
adc
lods
mov
mov
lock
xor
pop
inc
repnz
out
pop
stos
jge
addr16
data16
pop
xchg
aas
inc
adc
push
jge
pop
negb
cli
jmp
es
dec
dec
mov
leave
dec
sbb
add
cmp
in
adc
pushf
adc
jnp
in
push
jnp
addr16
sbb
int3
adc
sbb
mov
out
jbe
push
sub
add
notb
popa
dec
insb
test
cmp
push
push
lahf
cmp
out
jle
mov
dec
out
adc
cmp
jmp
push
enter
xchg
pop
repnz
or
inc
and
push
addr16
and
cmp
mov
mov
arpl
cmc
cmp
jno
std
pop
gs
xchg
add
lret
sbb
add
mov
xor
push
jbe
sbb
xor
out
test
aam
stc
push
sbbl
mov
pop
hlt
dec
mov
mov
adc
fdivrl
xchg
xchg
xor
xor
adc
pop
mov
arpl
fiadds
aas
and
cmp
cld
jno
idivl
sub
ds
sti
cmp
pop
das
or
mov
popf
pushf
pop
push
sbb
dec
loopne
jl
shlb
outsb
push
fbld
mov
jns
test
xchg
xlat
cld
ja
mov
cmp
aad
dec
mov
movsb
iret
test
pop
or
repz
clc
xor
jb
mov
data16
xor
mov
push
lret
ja
push
enter
inc
pop
jg
inc
imull
das
push
dec
mov
roll
fs
in
pusha
inc
fxch
cltd
cmp
nop
mov
into
inc
rcl
adc
cmpsl
xchg
mov
pop
and
in
or
cmpb
mov
mov
jno
fwait
push
add
mull
sahf
out
cmp
inc
stos
sbb
sub
jne
hlt
std
and
call
mov
jle
xor
or
xchg
jmp
daa
cmp
rolb
or
addr16
rolb
jae
push
stc
stos
in
and
and
aaa
lds
dec
dec
sti
and
push
sti
ret
loopne
shlb
decb
shlb
loope
movsl
pop
adc
cmpsb
push
add
aaa
movsb
in
lret
hlt
mov
xor
adc
scas
jb
sbb
push
popa
mov
std
cmp
push
jl
mov
push
dec
jne
pop
mov
aas
mov
jns
lods
jecxz
and
mov
lret
out
loopne
push
dec
fsubrs
or
mov
popa
xor
push
or
mov
loop
cmp
pop
mov
je
adcb
stos
or
pop
sbb
cli
push
dec
xchg
sbbb
sub
sahf
pop
fimuls
pop
sub
div
cmpsl
ljmp
sub
mov
pusha
jecxz
sbb
and
xor
sbb
pop
stos
jnp
mov
outsb
adc
jle
push
lea
mov
xor
and
popf
xlat
movsb
subb
mov
or
cmpb
leave
cs
lods
pop
rorb
cltd
out
push
cmp
pop
mov
or
sub
fimull
pop
dec
push
xor
movsb
mov
mov
fcom
xchg
xchg
or
ret
and
mov
pushf
inc
loope
cs
enter
into
sbb
dec
stc
inc
lods
jbe
xchg
ds
jmp
and
arpl
insb
test
sbb
and
add
fwait
out
loop
scas
out
mov
add
dec
mov
mov
push
mov
xchg
push
test
jg
sbb
in
adc
ret
inc
es
je
movsb
out
and
stc
fsts
mov
pop
adc
repz
lret
rolb
xor
scas
sbb
jl
arpl
dec
ficoms
lea
pop
fsubs
arpl
dec
imul
clc
cmp
mov
call
sbb
pop
inc
rcl
cmp
aam
or
int
push
xor
test
push
cmp
sahf
mov
mov
push
jp
sbb
sbb
subl
jle
dec
adc
push
fdiv
ja
fldcw
cmp
mov
loope
jne
jecxz
lret
lock
mov
mov
loopne
bound
pusha
mov
pushf
dec
sbb
mov
mov
stos
clc
push
cmc
sbb
jb
jnp
mov
bound
cld
test
push
xor
cltd
aad
fmul
fldcw
popf
or
push
adc
push
xchg
pusha
cmp
dec
sti
cmp
or
std
icebp
movsl
dec
daa
xchg
jbe
jnp
xor
adc
xor
ljmp
mov
adc
ret
jmp
pop
add
mov
mov
jnp
cmp
adc
mov
or
dec
jae
lahf
dec
loop
iret
ljmp
xchg
or
add
jle
andl
push
xor
mov
sahf
repz
lock
in
mov
push
sub
f2xm1
fsubrl
mov
jo
hlt
mov
popl
and
out
add
adc
call
xor
in
or
stos
and
data16
push
cmp
pop
out
push
aas
sti
stc
test
mov
mull
push
cmpb
jle
data16
mov
lret
shll
scas
dec
jl
sbbb
gs
nop
out
lock
xchg
int
sbb
adc
fwait
je
sbb
cli
es
fdiv
popf
imul
and
jl
sbbb
inc
or
cli
mov
icebp
or
inc
pushf
std
popf
into
aam
adc
ror
cmc
lahf
jg
das
cs
fdivrp
data16
pusha
jnp
popa
insl
push
inc
leave
shrl
pop
pop
fidivrl
mov
jo
xchg
sti
pushf
scas
inc
pop
dec
xorb
pop
leave
nop
je
mov
adc
movsb
test
push
jecxz
adc
std
mov
in
adc
sub
out
adc
add
mov
test
mov
adc
add
mov
fcoms
int3
fadd
test
mov
xchg
mov
xchg
mov
out
jno
mov
xor
jbe
jae
call
xor
xchg
or
jmp
xorb
cltd
loopne
xor
cmp
xchg
jne
xor
inc
lock
sub
cs
scas
or
cli
sub
dec
stos
or
sub
in
cmc
aad
cmp
pop
pushf
sub
push
rolb
int3
icebp
cwtl
pusha
scas
add
push
jg
cs
test
lcall
pop
lea
mov
inc
inc
lock
imul
cld
ficomps
sub
jl
daa
xor
ret
or
shufps
and
inc
aam
js
lea
cmp
data16
cmc
punpckhdq
jmp
push
test
pop
pop
cmpsb
mov
aaa
sbb
loopne
cmp
roll
mov
jne
dec
mov
sub
gs
int3
lods
sahf
push
popf
sub
cmp
int
incb
mov
jmp
scas
stos
hlt
mov
pop
xchg
jle
push
cld
inc
movsb
insl
push
mov
aaa
cmp
ds
ds
mov
xchg
loopne
pop
popa
stc
dec
add
pop
shlb
pop
out
ret
lahf
es
stos
lock
test
jns
sub
daa
dec
out
imul
mov
loope
daa
stos
lock
lcall
sbb
push
int3
xchg
push
sub
in
int
pop
xor
ljmp
mov
push
testl
insl
push
sbb
pop
adc
cmp
shrl
mov
punpckhwd
aaa
out
stc
mov
sarl
sbb
js
inc
mov
gs
mov
jne
lea
je
mov
scas
adc
mov
sub
push
aad
std
movsb
jl
pop
pop
add
dec
jecxz
lods
test
dec
mov
out
stos
test
push
adc
jecxz
cs
push
test
lahf
xchg
orb
jo
jo
xor
js
in
scas
sbb
popa
or
loope
jmp
cli
xor
insb
leave
shl
and
xchg
mov
in
imul
clc
icebp
enter
les
aaa
pop
cmp
adc
lcall
add
xor
jnp
int
fstpl
in
lret
mov
xchg
lea
pop
aaa
cmp
rorb
int3
pop
push
data16
cmc
cmpsl
dec
mov
fwait
cmc
cmpsb
hlt
jb
mov
xchg
mov
icebp
jne
mov
push
add
repnz
sub
dec
popa
or
fldcw
cmp
and
je
inc
sti
cmpsb
stos
dec
inc
roll
dec
mov
sub
pop
jne
aam
repz
inc
cmpsb
sbb
mov
imul
testl
or
dec
dec
cmp
inc
push
loope
sub
push
xor
sti
add
sbb
aas
outsb
ds
xchg
xlat
inc
sub
int
adc
push
lahf
insb
mov
push
jp
dec
int3
pop
fsubrl
or
sbb
insb
cli
jl
dec
ficompl
cmp
in
jp
dec
int3
pop
fsubrl
or
sbb
insb
cli
jl
dec
ficompl
or
cli
in
jp
dec
enter
sub
lcall
inc
xor
push
push
push
dec
dec
ficompl
roll
and
imul
and
adc
and
xor
inc
in
aas
subb
mov
push
sbb
or
in
add
adc
and
xor
pusha
mov
subb
mov
sub
sbb
repz
and
xor
pusha
popf
jo
sub
les
mov
test
imul
movsb
popa
mov
push
mov
mov
xchg
cwtl
xchg
cmc
cmpsb
xor
adc
add
nop
fiaddl
iret
jge
push
scas
push
inc
xor
mov
jge
divb
ljmp
int
orl
pusha
mov
vmovdqa
mov
int
sub
inc
xor
out
mov
pop
pop
push
loopne
stos
jns
pop
pop
jecxz
sbb
adc
iret
ljmp
repz
xchg
dec
pop
dec
jo
shrb
sub
pop
bnd
xchg
ljmp
xor
mov
nop
movsl
mov
mov
aad
pop
cli
hlt
or
cmp
ljmp
inc
mov
lcall
nop
inc
mov
xor
sbb
adc
mov
sub
push
cwtl
cs
push
in
in
enter
mov
outsl
mov
add
adc
or
xor
pop
iret
jo
clc
push
pop
sarl
pop
mov
or
mov
inc
stos
push
lcall
nop
pop
mov
sub
sbb
or
cli
add
adc
and
xor
pusha
mov
subb
mov
sub
sbb
or
cli
add
pop
adcl
in
and
bound
inc
and
or
aaa
pusha
sbb
pop
rcrb
movsl
sbb
pop
cmpsb
psubq
jle
ja
test
jecxz
push
lock
pop
popf
xchg
popa
scas
addr16
movsb
idivl
imul
mov
pop
std
fsubrp
jns
mov
stos
out
xor
enter
ret
pop
jecxz
jle
and
mov
push
jne
out
gs
pushf
push
fdivl
push
dec
decl
divb
push
push
subl
xor
sarb
inc
mov
and
stos
inc
lret
inc
out
aaa
ret
ss
roll
mov
mov
cs
stos
aam
repnz
test
mov
sbb
cmp
arpl
sub
jb
stos
rclb
lock
mov
push
mov
push
iret
bound
mov
push
adc
pop
jae
ja
clc
or
xor
push
inc
arpl
cltd
jge
ret
je
mov
jl
ror
sbb
daa
cmc
idivb
enter
cmp
rclb
mov
xchg
fistpll
dec
ret
xor
cmp
mov
pop
inc
inc
mov
xchg
sub
jge
movsl
dec
fstl
xchg
mov
stos
push
or
pusha
mov
push
mov
in
jl
xor
int3
fdivrp
mov
jb
jge
push
bound
loopne
fdivrl
mov
ficoms
fstps
cmp
out
pcmpgtd
sahf
adc
jmp
and
bound
imul
xlat
and
sub
lods
les
xor
mov
sub
enter
rol
std
add
xchg
subb
mov
test
mov
or
jo
cmp
adc
xchg
int
pop
xchg
fs
mov
aam
daa
scas
lret
ljmp
rcrl
jb
push
mov
dec
pop
pop
mov
stos
mov
inc
gs
ja
cs
ds
or
fiadds
mov
ja
addr16
xchg
sub
mov
mov
sub
ja
enter
jp
inc
jmp
push
sbbb
rcrb
incb
xor
sar
out
pop
or
test
sbb
or
jae
out
pop
sub
pop
xchg
mov
jl
sub
and
ja
cmp
pop
mov
or
mov
int
int
fdivl
push
mov
push
and
lea
or
movsb
pop
repz
movsl
pop
jp
mov
mov
loopew
jno
loopne
adc
cmp
out
fldcw
mov
imul
sti
pop
mov
cwtl
pop
popa
ret
je
mov
dec
loopne
mov
mov
jae
pop
data16
lcall
loopne
aam
out
mov
xchg
jae
xchg
negl
gs
stos
lods
mov
or
mov
aam
aaa
xor
repz
das
jo
fst
lcall
scas
mull
hlt
and
cmp
mov
inc
mov
stos
fstpl
faddp
loopne
scas
push
and
lahf
imul
fidivl
dec
stc
xchg
sbb
repnz
daa
clc
sub
ds
and
adc
loop
lea
divb
adc
enter
inc
jo
idivb
out
out
std
sub
rcrl
jp
inc
push
pop
fistpll
loop
idivb
aad
adc
pop
subl
popa
leave
js
rcrl
sbb
jg
xor
sbb
mov
cwtl
aaa
jb
repz
dec
mov
test
inc
mov
out
jbe
dec
jnp
mov
or
sbb
call
ret
and
pop
add
sbb
add
lods
out
test
push
mov
xchg
fmul
stos
adc
test
out
inc
xor
outsb
xchg
negl
imul
or
int3
lahf
inc
xchg
ljmp
push
jne
dec
sub
mov
sti
push
lahf
hlt
ret
in
sub
lds
lahf
imul
adc
adc
mov
cmp
sarb
cmp
fcompl
push
and
sbbl
or
adcl
sti
scas
aas
shrl
fucomip
cmp
mov
push
pop
push
cmpsl
inc
lcall
nop
leave
xchg
jl
js
stc
adc
inc
push
scas
push
push
in
inc
inc
jb
aam
enter
out
es
push
and
repnz
pop
xchg
add
dec
sbb
sbb
add
popf
sub
movsb
mov
dec
mov
push
adc
cmpsb
mov
inc
scas
pushf
adc
push
jo
inc
sub
mov
lds
xor
popf
fadd
pop
push
jg
mov
jge
inc
fidivrl
addr16
pop
faddl
int3
pusha
lret
in
sub
add
int
cmp
je
pop
dec
lcall
add
sbb
imul
gs
dec
fisttpll
xor
xchg
adc
cli
jge
aas
leave
scas
pop
insb
mov
loopne
clc
jae
xor
add
inc
sub
inc
lret
jecxz
sub
stos
or
inc
dec
js
outsb
shrb
xor
fwait
mov
rcl
mov
ret
out
add
mov
jmp
sbb
sbb
je
addr16
ret
bound
psrlw
dec
or
adcl
xchg
hlt
dec
js
fldz
mov
push
cltd
cwtl
hlt
cltd
aam
mov
jb
sahf
cmp
popa
std
cmp
sbb
sub
js
pop
mov
xchg
or
inc
out
shl
inc
add
lcall
lds
xlat
fists
and
inc
or
iret
call
cmp
push
push
cmp
dec
ljmp
sahf
sbb
pop
mov
sar
pop
xchg
ret
outsb
int3
mov
popa
push
fiaddl
outsb
movsl
mov
lret
ret
mov
aas
scas
imul
mov
lods
popf
fldenv
ss
push
add
dec
sti
loopne
out
or
rclb
fmulp
aaa
test
mov
cs
or
fstpl
jb
push
popa
mov
mov
pop
inc
ja
lret
negl
push
scas
xlat
pop
hlt
pop
push
pop
cltd
sbb
sbb
mov
insl
and
lods
or
sbb
mov
jle
dec
pusha
test
mov
rcll
xlat
inc
push
movsl
or
jae
rep
and
shl
cmp
xchg
lret
fs
mov
scas
arpl
pop
rcll
push
test
scas
xchg
and
and
mov
outsl
leave
adc
mov
stos
inc
xor
add
mull
mov
cmp
cmpl
sub
jne
adc
pop
out
stos
mov
loope
push
sub
fisubs
das
test
in
testl
push
mov
mov
inc
ja
xlat
imul
das
nop
enter
dec
mov
sub
inc
mov
lcall
push
lea
inc
loopne
rorb
xchg
and
mov
pushf
aad
mov
insb
stos
movsl
mov
push
jle
xchg
jmp
decb
xor
shrb
outsl
fwait
in
xchg
pop
jne
bound
loop
subb
xchg
jb
aas
daa
movsb
sti
repnz
and
stos
test
sub
ja
cltd
xchg
rcrb
loope
dec
fisubl
inc
sub
push
jg
aam
mov
jnp
shlb
pop
xchg
shrl
pop
push
icebp
adcb
iret
pop
and
xchg
push
xor
mov
loopne
or
xchg
mov
jae
mov
aad
lret
xor
int
imul
repnz
jmp
mov
loopne
out
dec
repz
xor
inc
test
push
out
xchg
mov
sbb
xchg
add
cwtl
sbb
popf
add
test
ja
adc
les
jne
cltd
ja
sbb
xchg
loop
stos
mov
sub
aam
pushf
test
fwait
mov
xchg
hlt
popf
xor
into
jle
push
aas
cmpsb
int
test
push
shlb
lret
cmp
cwtl
iret
or
and
fisttpll
pop
imul
sbb
and
rcll
dec
dec
outsb
idivb
or
lods
inc
movl
ljmp
rorb
mov
mov
xchg
fstpt
int3
adc
sub
popa
mov
imul
fdivrp
inc
daa
or
push
xchg
stc
and
addb
fnstcw
sbb
mov
mov
mov
iret
gs
sub
loop
mov
icebp
jb
fistpl
mov
icebp
sahf
and
not
and
sub
mov
les
cmp
aam
fsubl
inc
rorl
mov
cmpsb
gs
sub
xchg
test
mov
xchg
mov
iret
pop
cmp
jle
dec
pop
das
ficoml
xchg
movsb
cli
test
dec
leave
imul
rcrb
jg
jmp
in
sub
loopne
mov
jmp
lods
leave
cmp
scas
xlat
and
fsubrl
movsl
loop
fwait
and
cmp
sbb
pop
mov
into
orl
mov
in
push
bound
loope
mov
pop
cmpsl
push
jmp
test
xor
pop
ss
aaa
sub
push
stc
sub
adc
xchg
jbe
add
jb
fidivrs
out
mov
pop
js
jo
xor
mov
arpl
pop
rclb
jnp
cli
sub
mov
mov
dec
cmp
or
aaa
xchg
sub
test
push
cmc
lods
cltd
hlt
hlt
push
leave
scas
cmp
xchg
or
nop
mov
cltd
addb
pextrw
jns
orb
dec
fwait
xlat
push
insl
dec
repz
shl
lods
adc
and
inc
dec
rcrl
mov
xchg
sbb
sbb
sub
in
mov
lret
or
fildl
cmc
ret
push
adc
in
and
push
test
inc
in
sub
icebp
insb
mov
int3
sub
lahf
cmp
fmul
pop
jnp
outsl
shufps
cmp
mov
in
and
jae
pop
fucomi
sbb
repnz
cmpsb
mov
sbb
ret
xor
sub
inc
ljmp
adc
adc
insl
mov
aas
fisubrl
sbb
iret
push
out
sub
dec
ret
leave
test
or
xchg
scas
adc
popf
movsb
jmp
out
rcrl
xlat
fisubrl
fldenv
lods
xorb
aam
or
mov
xchg
mov
div
add
roll
pop
hlt
fcom
aam
movb
and
xor
add
mov
add
mov
stc
mov
mov
je
pop
jns
xlat
imul
push
test
in
adc
enter
fisubrs
call
pop
dec
mov
das
iret
cmp
jne
das
xor
lcall
push
out
dec
dec
dec
test
adc
push
xor
xor
aad
sahf
fwait
cmp
xor
pop
rcrb
pop
push
fs
ret
push
nop
mov
sbb
mov
out
pop
lods
mov
add
fmull
jo
lret
dec
rorb
lock
sbb
fneni(8087
fs
clc
in
fmull
mulb
call
adcb
or
push
and
cmpsb
xor
dec
js
leave
mov
xlat
pop
xchg
jo
push
sub
mov
test
push
stc
push
out
mov
adc
movb
sub
icebp
pop
movsl
stos
mov
dec
fidivl
ljmp
gs
cltd
inc
pop
fbld
cmp
adc
jno
inc
arpl
aas
in
mov
mov
sub
jo
cmp
jp
sbbl
mov
sub
das
repnz
pop
xor
test
jns
add
fs
mov
xchg
subl
dec
fs
xchg
xlat
out
xchg
mov
jmp
xchg
mov
dec
scas
xchg
dec
sbb
sbb
jp
int
lahf
out
fdivp
dec
sbb
xchg
mov
in
jae
test
or
cmp
sub
dec
push
out
mov
xchg
cwtl
jmp
scas
stc
xchg
aaa
mov
outsb
and
mov
pop
or
mov
sub
mov
insl
and
push
hlt
insb
jnp
sub
movl
pop
xlat
xor
jmp
pop
and
xlat
push
add
rol
cmp
dec
jne
into
sub
or
insl
sub
rcr
cmp
xor
add
xchg
rolb
pushf
stos
aaa
stc
fidivrs
inc
xlat
loopne
dec
xchg
xchg
ljmp
imul
mov
or
or
scas
cmpsb
inc
gs
test
cwtl
stc
into
pop
mov
inc
and
fcoms
mov
bound
inc
call
fs
fwait
jecxz
imul
push
iret
sbb
lcall
arpl
or
adc
adc
aad
and
mov
and
cmp
add
and
out
scas
icebp
xchg
push
subb
lock
sbb
mul
insb
push
loop,pt
ja
jne
mov
into
mov
addr16
hlt
dec
push
inc
sub
mov
adc
shll
pop
fdivrs
inc
lods
adcb
pop
imul
push
mov
xchg
aam
lods
jle
sahf
mov
fisttpll
inc
xlat
xor
add
sbb
das
movsl
cmc
inc
dec
imul
push
dec
sub
cmp
pop
jae
inc
cli
push
aad
ret
push
and
push
inc
push
jp
inc
jecxz
push
jl
pop
aas
sbbl
in
out
sbb
or
pop
dec
or
idiv
movsl
testb
fiadds
mov
shlb
cmp
push
mov
clc
xorb
jo
in
dec
gs
int3
imul
js
push
aad
fisttpl
mov
mov
fldenv
dec
mov
push
jge
leave
call
ficompl
mov
fildl
sub
adc
mov
lahf
notl
in
testl
fldenv
push
xor
jb
out
push
test
sarb
pop
xor
jmp
clc
mov
cmp
movsb
inc
out
push
daa
rol
cmp
test
jp
lods
and
scas
leave
icebp
inc
rcr
es
push
or
cld
mov
out
stos
jne
pop
or
push
xchg
lods
popw
movsl
lahf
cwtl
dec
jmp
fs
mov
xchg
cs
cld
inc
mov
gs
mov
push
inc
mov
aam
xor
inc
adc
shrl
cmp
sub
sub
test
pop
in
ds
int
sub
push
shll
call
or
les
pop
aam
cmp
jno
inc
inc
into
xchg
push
das
inc
adc
movsl
jge
lret
mov
adc
popa
js
sub
shlb
or
rep
shll
sbb
outsl
leave
adcl
scas
add
sub
mov
inc
xchg
xchg
in
scas
bound
jne
loopne
xchg
sbb
dec
ss
movl
add
dec
pop
and
jmp
cmpsl
out
mov
mov
add
nop
stos
mov
dec
rorl
repz
xchg
lock
mov
daa
mov
jne
pop
movsl
inc
notb
dec
cmpsl
xor
sbb
aad
rcr
jle
stos
xor
fisubl
stos
mov
and
jns
push
dec
cmc
mulb
loope
add
add
xchg
sub
daa
stos
movsl
mov
lea
dec
lret
and
js
pop
mov
push
push
jnp
pop
or
xchg
inc
pop
stos
aaa
popf
ret
fidivs
sbb
shlb
jae
lds
xlat
cmp
lret
cwtl
inc
lds
add
pop
data16
and
sub
xor
dec
mov
sbb
fcmovnu
xlat
inc
dec
call
push
fxch
shlb
loopne
jp
inc
xchg
jb,pn
cmp
inc
pop
mov
imul
int3
andb
or
std
ds
xlat
lret
adc
frstor
jle
xchg
add
mov
repz
xor
das
fnstsw
lret
push
jbe
rcr
arpl
mov
arpl
sub
pushf
cmp
cs
pop
jae
fcomi
ja
or
call
lret
push
dec
adcb
add
push
dec
mov
pop
int
pop
push
fcompl
test
mov
sub
orl
xchg
xor
mov
enter
aam
mov
and
or
rcr
xor
xchg
sti
cli
dec
dec
jo
xor
adc
sarl
jg
fcmovnu
roll
filds
xchg
xchg
xlat
aad
jge
test
je
mov
out
mov
mov
dec
cs
std
cmp
mov
xor
add
dec
shlb
roll
nop
daa
push
add
mov
adc
jne
inc
lret
mov
push
push
lea
and
aas
daa
roll
gs
fsubrs
mov
push
shll
pop
enter
mov
cmp
test
add
or
pop
mov
in
xchg
adc
push
imul
popa
pop
mov
es
pop
dec
adc
pop
push
testl
cmp
in
add
push
jecxz
sub
out
xchg
adc
in
je
jle
out
add
pop
icebp
dec
cli
push
loopne
add
shr
cmp
xor
cld
aad
or
dec
dec
mov
inc
pusha
ret
pop
or
inc
cmp
cli
and
cmpsl
std
cltd
into
sub
mov
or
sbb
cmp
lret
int3
sub
movsb
xor
outsl
lock
sbb
ficoms
mov
ret
add
mov
xchg
imul
pop
stos
xchg
and
sub
xor
xchg
popl
adc
sbb
sahf
and
xchg
imul
lock
or
idivl
inc
cli
adc
in
aas
mov
lods
mov
mov
cmp
and
jle
sub
and
fcoms
inc
rol
xchg
lret
cltd
mov
mov
out
lea
mov
mov
imul
cltd
xchg
repz
pusha
lahf
inc
push
mov
icebp
shrb
sti
mov
sub
mov
sub
outsb
ret
pushf
testl
mov
pop
xor
lahf
das
dec
cmp
cmpsb
mov
orb
mov
stos
cmpsl
call
movsb
sub
inc
pop
test
pop
shrb
sub
add
fbld
stos
pop
jg
push
rolb
xchg
add
xor
cmp
fcmovne
enter
adc
sub
cli
pushf
adc
rcrb
xor
pusha
cmp
enter
pop
movsl
xor
jnp
call
fildll
aad
hlt
push
dec
add
nop
push
test
out
push
fwait
in
push
out
dec
scas
adc
test
add
adc
mov
mov
popl
ret
fmull
mov
dec
movl
push
mov
push
fs
rcll
das
mov
sub
int3
jo
popa
pop
and
fneni(8087
outsb
jns
stos
jno
sub
dec
fdiv
jnp
ret
je
push
dec
jge
inc
test
xor
pop
xor
pop
lret
fisubrl
pop
shll
jns
or
fwait
cmp
pop
push
or
mov
call
mov
or
data16
loop
push
or
pushf
pop
inc
ljmp
ret
or
jge
cmc
lret
cwtl
sbb
xchg
mul
lea
jge
jge
mov
out
rep
pop
jno
mov
repnz
cs
pop
add
sbb
cmp
and
fistpl
add
je
sbb
sbb
sub
rorl
out
push
xchg
dec
sbb
das
cs
adc
mov
xchg
mov
icebp
push
sub
or
mov
mov
or
dec
mov
dec
xor
sti
imul
int
lea
dec
sub
inc
dec
inc
jnp
mov
icebp
push
scas
xchg
inc
inc
push
es
lcall
cmc
lock
xor
sbb
aad
icebp
jmp
jp
popa
outsl
push
sbb
sbb
movsl
or
sbb
scas
outsl
jb
push
lcall
mov
sub
cmpb
in
xchg
ds
adc
pop
mov
stos
add
xor
push
add
and
rcrl
pushl
sbb
or
pop
push
scas
pushf
out
std
or
adc
and
xor
pusha
mov
subb
mov
sub
sbb
or
cli
add
adc
and
xor
pusha
mov
subb
mov
sub
sbb
or
cli
add
nop
fisubl
stos
rcrb
add
pop
mov
rcrb
loopne
lock
add
adc
and
xor
pusha
or
adcb
dec
dec
mov
andnps
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
jp
push
pop
test
pop
mov
cli
inc
jmp
fisubrl
lret
cmp
imul
mov
sbb
or
fisubrl
lret
and
mov
mov
pop
test
sub
sbb
or
cli
or
cmp
sbb
in
and
shll
repz
bnd
ljmp
decb
dec
lret
loop
es
loope
push
cmc
mov
pop
in
div
pop
jge
out
cmp
pop
inc
dec
stos
nop
int
pop
sub
mov
pop
ret
aas
mov
xchg
sbb
pop
mov
imul
in
mov
jp
push
xor
aas
fcomps
imulb
and
mov
cmpsl
sbb
js
std
mov
mov
inc
sub
orl
idivb
jmp
imul
stc
clc
enter
loope
mov
and
dec
daa
or
imul
cltd
pop
test
sub
sbb
or
cli
or
sbb
sub
cmp
imul
mov
jle
or
fimull
mov
adc
aaa
pop
in
paddb
int3
es
bound
mov
pop
mov
aas
call
pop
int
shll
out
fstps
jmp
ljmp
dec
stos
pop
lcall
cltd
pop
test
sub
sbb
or
cli
or
sbb
sub
cmp
imul
jnp
mov
std
mov
push
xchg
mov
pushf
inc
hlt
test
inc
incb
test
loopne
lcall
xchg
push
call
xchg
mov
aad
sbbl
loope
mov
jmp
xchg
xorl
xchg
ja
fldenv
cwtl
pop
lahf
out
jo,pn
jecxz
cltd
or
subl
push
stc
mov
xchg
xor
pop
ss
repz
lret
or
jno
insl
faddp
cltd
xchg
nop
or
jbe
sbb
sbb
mov
mov
sub
daa
cmp
aas
outsl
shl
ret
mov
ljmp
push
ja
xorb
mov
pop
inc
jno
sbb
sbb
adc
cmp
xchg
js
int
xor
fcompl
cli
cmc
imul
jns
lea
and
sbb
push
repz
std
jmp
mov
jle
cli
or
push
dec
pop
jo
mov
sub
xorb
push
fistl
inc
leave
fs
mov
fsubrp
fwait
std
xchg
sub
rorb
jnp
mov
insl
mov
enter
aaa
cs
add
and
in
mov
imul
mov
cs
mov
mov
add
and
shl
mov
xor
les
mov
sbb
or
movsl
lcall
adc
or
out
sub
cmp
aaa
push
stos
dec
clc
dec
lret
loope
add
sbb
into
pop
fisubs
cmpsb
leave
rcll
jp
out
dec
mov
sub
nop
ljmp
repz
ds
icebp
rcll
mov
sbb
sub
lret
adc
test
inc
sub
push
iret
inc
repnz
mov
sbb
xor
cwtl
push
ja
inc
in
call
out
adc
rcrl
inc
fimuls
dec
mov
dec
rorl
repnz
lret
jne
push
cmpsb
pop
inc
mov
mov
pop
imul
or
inc
stc
push
orb
pop
stos
push
test
mov
in
nop
popa
repz
sub
aaa
cwtl
sub
rcll
stos
xchg
frstor
xor
ret
cld
xchg
inc
fsubp
mov
pop
test
mov
aaa
jo
test
sbb
ja
dec
lods
ret
mov
mov
imull
sub
dec
aam
xor
repz
sbb
mov
rcr
shr
arpl
ljmp
pop
loop
inc
jo
xchg
sbb
fwait
inc
addr16
sbb
scas
addr16
outsb
cmpl
cmpsb
shlb
test
add
clc
test
pop
xor
mov
mov
enterw
and
test
popf
cmpsb
mov
xor
pop
or
gs
into
mov
inc
mov
adc
pusha
and
add
loopne
lret
adc
push
pop
cmp
fistl
push
sbb
sti
jg
pop
inc
stos
inc
and
loope
lret
lods
jp
sahf
xchg
imulb
scas
pop
add
ljmp
ret
ret
add
movsb
testb
inc
into
adc
or
cmp
les
mov
ja
es
shrl
fisubrs
int
std
adc
in
adc
bound
lcall
xor
iret
lock
orl
ret
data16
mov
sub
loopne
lods
insl
fidivs
movsb
sbb
cmc
pop
jle
cmc
aam
mov
mov
jmp
mov
lock
or
outsl
jle
out
cmp
add
pusha
ret
jg
mov
cld
pop
mov
xchg
pop
addr16
mov
adc
lds
mov
out
cmp
add
push
mov
test
pop
and
xor
mov
inc
loope
aam
mov
adc
mov
dec
dec
faddl
dec
jp
insb
and
fistpl
sbb
add
jecxz
addr16
push
mov
cmp
insl
jp
mov
call
test
xchg
loop
aaa
lock
sbb
xchg
cs
push
sti
std
lahf
jl
and
adc
ljmp
mov
lock
xor
pop
das
cmp
cmpsb
sub
mov
fwait
repnz
push
adc
or
mov
mov
pop
add
mov
cwtl
cmp
xor
dec
pusha
mov
push
bound
fisttps
cmp
movsb
mov
jge
add
dec
sub
sub
cmp
jae
sub
mov
xchg
push
cmc
push
pop
mov
ds
mov
lea
dec
ret
sbb
sbb
ss
mov
jp
adc
or
sub
cmp
sarb
jl
cwtl
inc
inc
inc
into
add
enter
mov
jbe
mov
cmc
sub
test
pop
cld
pop
rcl
sub
sar
add
xchg
cli
pop
or
arpl
mov
and
inc
icebp
cmc
cmpl
dec
cltd
add
out
jae
sbb
pop
inc
mov
mov
cmp
dec
out
imul
repnz
push
lock
sbb
adc
and
or
jle
or
leave
scas
aad
sub
movsb
jge
mov
xor
push
xor
ffreep
enter
imulb
add
in
jns
jb
stos
push
jo
in
cmp
shlb
xor
shll
adc
inc
js
dec
jnp
subl
std
in
ret
jp
push
cmpsl
inc
inc
or
sub
stc
out
xlat
sbb
ja
cs
leave
cli
cmc
addl
push
cmpsb
push
and
sbb
fchs
lcall
xchg
lods
push
fsub
pop
mov
dec
shll
and
push
lret
mov
dec
cli
push
jns
dec
test
adc
shll
outsl
sahf
sub
push
and
dec
jge
mov
inc
ja
js
lret
insb
mov
pop
rcrb
jecxz
add
mov
call
fdivs
push
push
sbb
and
sbb
or
rclb
cmovbe
je
inc
or
cmpl
vcvttps2dq
sahf
cltd
mov
add
jp
ret
clc
rcl
bound
mov
popf
mov
fildl
cmp
sahf
out
stos
outsl
int
cmp
mov
xlat
push
xchg
push
mov
and
dec
push
mov
sarl
data16
dec
aaa
mov
mov
arpl
in
jmp
push
test
enter
push
inc
icebp
lret
jae
jne
rclb
in
sbb
js
pop
aam
mov
mov
sbb
adc
push
dec
shlb
xabort
mov
and
stc
jp
outsb
sbb
repz
inc
leave
push
xchg
enter
xchg
lcall
mov
xchg
es
jl
xchg
pop
nop
aad
add
inc
mov
dec
mov
sub
sub
cmp
xchg
addr16
cs
cld
cs
or
stos
into
sbb
sahf
mov
dec
out
or
fstpl
sub
add
aaa
scas
sbb
xchg
sti
inc
cli
sbb
stos
inc
movsl
cmp
icebp
push
movsl
int3
xchg
inc
mov
test
sub
aaa
test
shrb
loop
dec
jns
int
fdiv
fbstp
jo
fsubl
push
sub
and
dec
xor
int
jmp
enter
and
aaa
jae
or
int
mov
daa
js
dec
pop
jbe
popa
add
xchg
mov
sub
sbb
cmp
out
js
sub
sbb
les
insl
adc
shlb
push
mov
aas
insl
test
inc
push
fsts
test
pusha
fsub
or
push
addb
inc
fwait
decb
jne
cmp
push
test
dec
std
jp
fs
inc
and
nop
pushf
lret
mov
scas
cmp
ficompl
les
sub
add
xor
add
aad
dec
or
inc
notb
lea
adc
mov
cld
imull
shr
mov
or
out
lea
or
js
cmc
inc
add
rcrl
mov
ret
imul
push
lds
cmpl
cld
dec
and
xor
imul
jp
leave
add
mov
xchg
cli
cld
jb
jae
mov
cmp
scas
sbb
mov
push
sarl
movsl
or
std
sbb
orb
test
mov
xchg
push
xor
fmuls
lcall
inc
or
arpl
lock
dec
add
add
repnz
daa
rcll
pop
jl
cmp
sbb
inc
and
roll
iret
jmp
in
jmp
dec
syscall
cmp
inc
adc
lods
mov
push
lea
pop
jl
adc
jge
test
call
push
fcmovnu
dec
out
inc
mov
ficoms
lods
loop
lret
ficomps
loopew
leave
dec
loopne
inc
fdivs
pushf
jmp
add
repz
mov
dec
pop
in
mov
call
sti
mov
fcmovnu
jae
adc
jmp
fsubr
ja
pop
mov
mov
pop
mov
push
jge
in
mov
in
jb
fstpl
cltd
or
jnp
pushf
mov
movsb
lods
movsb
filds
sub
jns
push
sub
push
jo
mov
or
fwait
call
call
mov
sti
add
daa
or
cmp
or
clc
shrb
lcall
leave
inc
sbb
int3
pop
shrb
inc
test
xor
and
inc
pop
adc
cmpsb
testl
pop
shl
aad
in
inc
ljmp
lret
xchg
pop
popa
aam
stos
adc
cltd
fisubs
sbb
movsb
and
insl
es
add
sahf
movsb
lcall
mov
add
shlb
cmp
sub
sub
movsb
andb
iret
cs
test
les
or
jmp
sbb
xor
cmp
mov
int3
cltd
and
mov
xchg
jo
xor
imul
xchg
ss
mov
inc
data16
je
xchg
and
aas
stc
or
aaa
aaa
bound
lcall
andl
or
pushf
jmp
ret
fnsave
ret
cld
xchg
mov
out
mov
in
cmp
sub
std
jmp
xchg
pop
popf
fs
dec
mov
mov
jae
cmp
jae
repz
hlt
bound
push
into
inc
dec
jle
sub
pop
lods
adc
jle
fisubrs
mov
sbb
add
clc
loopne
movsb
ss
dec
xchg
das
adc
mov
lds
lock
lock
add
ret
inc
or
push
data16
jno
leave
jmp
pop
dec
shr
sbb
mov
mov
mov
xchg
jne
mov
add
xchg
cmp
stos
xor
bound
fdivrp
daa
imul
into
enter
testb
inc
sub
out
mov
ljmp
cwtl
xchg
and
adc
push
out
sbb
sub
int3
jne
repnz
jns
iret
cmp
and
or
popa
dec
jae
fucom
dec
xchg
outsl
push
inc
cld
mov
test
out
pop
lods
out
cli
xlat
and
mov
jns
cmp
sub
inc
add
scas
mov
add
push
lahf
sbbb
or
or
sbb
inc
fsubs
andl
sbbl
xor
fs
int3
pusha
pushf
in
js
popf
popf
dec
cwtl
xchg
sbb
loopne
dec
and
les
xor
loop
mov
pop
xchg
mov
fmull
xchg
shll
dec
leave
jnp
push
testl
xlat
sbb
push
and
push
jg
mov
mov
inc
pop
push
pop
cmp
mov
sbb
xchg
mov
cmp
aaa
mov
stos
aam
inc
scas
dec
jbe
mov
pop
int3
sahf
dec
movsl
xchg
xor
cwtl
rolb
je
cmpsb
or
insl
ds
cmc
inc
lods
cmp
scas
mov
add
enter
jge
lock
mov
ljmp
ja
sarl
xchg
sub
scas
cs
cld
jg
jmp
pop
jmp
test
test
add
lods
lahf
mov
enter
add
inc
aad
mov
loopne
cmpsl
jae
enter
mov
or
and
sub
ja
mov
mov
pop
xchg
xor
adc
push
loop
cs
mov
je
stos
pop
add
or
xchg
shlb
or
lahf
adc
or
clc
xchg
or
sbb
mov
mov
pop
mov
jns
lahf
cs
jo
in
push
jne
lahf
mov
sbb
jne
dec
outsl
lret
mov
pop
mov
popa
repnz
repz
and
ret
sti
and
scas
xchg
jge
or
cmp
push
insb
int
scas
or
lods
in
sbb
pusha
ljmp
lock
into
push
leave
mov
xor
ljmp
subb
cli
clc
push
mov
imul
or
outsb
mov
shlb
cmpsb
cmp
mov
mov
shl
push
sbb
mov
mov
pop
push
ss
stos
dec
insl
iret
out
sub
lcall
mov
mov
inc
or
push
scas
push
pop
data16
adc
push
call
sbb
pop
push
mov
mov
test
lds
test
out
in
adc
outsb
sub
mov
sub
mov
inc
sbb
mov
sbb
push
hlt
clc
jns
xchg
fs
stos
add
dec
imul
shll
pop
pop
xlat
xor
sub
lock
cltd
mov
dec
pushf
sarb
push
lock
mov
mov
cmp
in
rolb
pop
dec
shlb
xchg
lods
jae
leave
loop
and
and
scas
push
insl
jmp
mov
pop
leave
add
push
or
es
or
rorb
inc
or
xor
out
jbe
add
lods
inc
mov
adc
insl
imul
push
fbstp
xchg
push
jecxz
icebp
aaa
imul
push
push
in
push
add
fdivrp
push
mov
out
jle
xchg
out
mov
enter
push
sbb
movsl
test
cltd
jns
sbb
cmc
int3
mov
movsl
xor
out
mov
lahf
xchg
jmp
sub
jg
ret
daa
jge
icebp
adc
or
out
adc
cmp
fidivrs
mov
jo
or
repz
dec
mov
xor
jbe
mov
add
sbb
xchg
in
call
sti
arpl
repnz
in
jmp
lock
mov
stos
mov
pop
leave
or
lcall
in
pop
jno
cmp
ljmp
sub
cmp
cmp
dec
and
sbb
negb
xor
je
lods
test
in
adc
subb
adc
mov
popf
out
hlt
rol
add
clc
iret
leave
stc
repnz
push
push
mov
cmpsl
test
adc
or
or
repnz
or
fsubs
inc
lds
xchg
fldenv
idivb
shr
ds
loope
mov
sbb
pop
rcrb
mov
andl
or
mov
flds
clc
nop
lock
sbbl
adc
cld
outsb
int3
xor
or
outsb
and
mov
stos
jbe
dec
daa
fidivrs
xchg
pop
push
test
pop
mov
lock
adc
repnz
sub
dec
addl
rclb
jo
arpl
adc
insb
adc
test
sbb
fiadds
nop
aad
ret
pop
jbe
push
mov
dec
notb
repnz
fiadds
jmp
pop
push
into
in
movsb
hlt
in
or
std
subb
inc
sbb
push
jnp
xchg
push
add
xchg
js
adc
leave
or
roll
push
sbb
or
faddp
xor
mov
repz
push
loope
xchg
mov
dec
xchg
insb
inc
sub
das
fisubrl
add
das
xor
cmc
mov
pop
out
xor
dec
pusha
cwtl
sub
jb
shll
addl
test
test
fsts
loop
mov
outsb
mov
xor
stos
jbe
enter
cs
iret
inc
push
call
inc
cwtl
push
sbb
sahf
sub
shll
inc
movsb
inc
enter
jnp
les
adc
rorb
fcmove
jo
imul
inc
loop
sbb
pop
ss
stos
cld
stos
cmp
inc
adc
imul
mov
pop
outsb
lret
add
jns
rcl
outsl
dec
subb
dec
fs
bound
adc
pop
sub
or
ffree
xchg
dec
or
jnp
push
cwtl
push
xchg
mov
dec
loopne
inc
sbb
out
lds
insl
les
xlat
sbbl
dec
bound
dec
cmp
cmpsb
jbe
les
dec
mov
push
stos
or
in
in
push
dec
pop
std
inc
les
rcll
mov
outsb
sub
xchg
imul
dec
std
xor
add
insl
push
mov
fwait
sub
ljmp
xor
cld
add
arpl
inc
repz
xor
lcall
cmpsl
push
stos
enter
mov
icebp
shrb
out
addl
out
daa
adc
mov
inc
adc
inc
pushf
test
xchg
lcall
pushf
aaa
or
cwtl
popa
cmp
sub
xor
and
sub
jbe
sub
addr16
inc
lret
repz
mov
test
repnz
movsb
hlt
out
cmp
adc
jns
enter
fwait
sub
cmp
addl
adc
jp
imul
aas
and
inc
aas
xor
dec
rcl
jnp
in
pop
jae
ret
into
mov
fcompl
sub
adc
xchg
vcvtdq2pd
dec
lds
int
mov
in
sub
sahf
in
stc
jg
dec
xor
push
or
stos
lret
dec
stos
scas
arpl
push
lods
pop
imul
dec
fisttps
sub
jns
push
mov
add
loop
sti
jne
mov
mov
shrl
out
shl
cmp
pop
cli
test
testb
adc
aam
test
stos
add
xchg
lock
xchg
dec
out
add
and
cmp
inc
inc
shl
std
pop
push
aaa
cltd
imul
mov
mov
cwtl
mov
pop
cmc
and
and
stos
imul
nop
jo
push
and
insb
andl
pop
pop
or
pop
dec
dec
test
test
out
in
and
clc
cmpsl
rol
pop
es
sti
xor
mov
shll
in
cmc
insl
fnstsw
cmp
ret
pop
lds
icebp
xlat
dec
dec
insl
dec
stc
fstpt
cld
mov
dec
mov
aad
jbe
fwait
pop
clc
push
std
scas
cmp
lcall
mov
into
or
cmp
movsb
dec
ret
dec
clc
xchg
xor
mov
outsb
cmpl
cwtl
mov
repz
or
sti
pop
outsb
jp
fs
pop
push
stc
mov
lds
mov
add
or
insl
shll
movsb
daa
insb
inc
clc
shlb
xor
xchg
in
rolb
mov
inc
dec
pop
movsl
jle
lock
or
xchg
pushf
push
dec
pushf
in
pop
push
outsb
ja
sahf
mov
and
repz
xor
dec
jge
mov
pop
mov
push
mov
pop
stos
outsb
xlat
pushf
jmp
mov
addr16
xchg
js
test
std
jns
jg
sbb
cwtl
into
dec
test
dec
pusha
mov
rep
sbb
adcb
jg
or
arpl
add
jbe
push
in
xor
mov
lahf
dec
cmp
push
cmpb
fldt
jg
adc
lahf
jns
and
pop
cmp
std
imul
lods
enter
xchg
call
add
fldt
lea
call
or
jecxz
stc
xlat
dec
shr
std
js
sub
mov
xchg
mov
dec
fistpll
stc
out
cmp
dec
mov
cmp
push
lahf
subb
mov
movsl
lret
clc
sub
inc
ficompl
repz
sbb
inc
in
xchg
mov
mov
dec
loopne
pop
cmp
dec
or
lds
xchg
and
push
in
push
jbe
insb
and
mov
jne
mov
int
xor
aas
and
sbb
jp
mov
jge
mov
outsl
adc
mov
addr16
int
xor
ljmp
into
sub
call
outsb
cltd
pop
test
sub
sbb
or
cli
or
sbb
sub
cmp
imul
mov
sbb
or
cli
or
sbb
sub
cmp
imul
mov
sbb
mov
cli
or
sbb
sub
cmp
imul
mov
sbb
or
cli
or
mov
sub
dec
lret
cmpsb
ljmp
push
push
lea
push
mov
push
call
cmpl
je
cmpl
je
call
mov
movzwl
mov
mov
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
not
mov
pop
mov
or
mov
leave
ret
je
xchg
movsl
sbb
add
xor
mov
fsts
inc
xor
or
pop
aad
mov
xor
mov
fsts
test
xchg
and
jne
mov
mov
dec
call
or
and
lret
pop
loopne
shl
ret
pop
leave
dec
sbb
xchg
xlat
add
mov
xor
iret
cmpb
hlt
xchg
sbb
int
cmp
jge
adc
pop
push
inc
enter
mov
icebp
cmpsb
sbb
sub
mov
ja
push
push
fs
push
mov
test
cmc
xchg
lea
dec
cmp
jbe
je
jmp
int3
mov
aam
out
leave
add
fldl
lds
stc
xor
or
jmp
mov
out
lods
mov
fcoml
push
dec
cwtl
ljmp
pushf
push
fld
or
gs
jns
sub
inc
dec
mov
jecxz
add
negl
dec
out
movsl
pop
stos
pop
sbbl
fdivs
pusha
leave
popa
call
adc
lock
mov
xor
push
call
bound
xor
cs
jecxz
loop
lds
cmp
imul
mov
adc
jmp
inc
cmp
or
pop
aad
lds
adc
jmp
inc
cmp
push
test
cmp
sbb
rcrb
imul
xchg
or
push
push
adc
mov
inc
cmp
ficompl
and
rcrb
sub
movsb
fnstcw
test
fcmovnb
push
mov
xchg
inc
repz
add
mov
lahf
mov
cmp
mov
movb
fstps
test
in
rorb
pop
in
mov
fstpt
inc
inc
sbb
insb
mov
fistps
imull
es
movsl
cli
sub
sub
mov
sub
mov
add
jo
ror
or
lahf
inc
sahf
imul
mov
mul
push
pop
or
lret
ja
nop
movsb
dec
jbe
outsl
insb
in
jno
test
mov
push
call
mov
and
mov
rolb
xlat
or
xchg
adc
call
or
cmp
add
lcall
xchg
sub
ficoml
and
into
pop
out
rol
scas
insb
jp
or
fsubs
cmp
lret
mov
jmp
and
cmpsb
pusha
mov
shr
pop
xchg
or
mov
lret
stos
dec
clc
inc
sbb
push
inc
push
push
sahf
xor
shl
jae
outsl
into
insl
shll
add
jle
cmp
fwait
xor
cmp
cmp
mov
fimuls
nop
xor
dec
xor
in
popw
scas
popf
jno
add
hlt
and
fnstsw
push
or
arpl
ret
sub
les
sbb
inc
push
xchg
pusha
ret
std
mov
nop
lcall
adc
cwtl
mov
enter
push
adc
js
pop
cld
pop
mov
leave
jle
fidivrl
lret
pusha
ljmp
mov
xchg
out
or
mov
insb
add
fldpi
pop
xchg
jae
xchg
bound
xchg
enter
pushf
lds
mov
in
push
ret
xchg
daa
xlat
dec
pop
mov
sbb
movsb
movsb
pop
xchg
scas
cld
pop
and
sbb
test
sub
xor
les
adc
in
popf
and
stc
fnstenv
cmp
incb
fmuls
aaa
out
pop
dec
int
xchg
push
scas
adc
inc
xor
jae
test
sbb
or
sub
cmp
sub
push
mov
aam
mov
add
mov
and
fs
mov
out
pop
xchg
out
loope
lcall
das
shll
push
jecxz
gs
pop
xor
mov
and
mov
mov
push
inc
enter
lods
das
or
jle
inc
cli
sbb
jge
insl
loope
je
lock
mov
ss
xchg
js
andl
hlt
inc
mov
rcrl
mov
sbb
mov
scas
and
gs
jle
sbb
push
mov
roll
mov
jns
pop
xchg
ja
jmp
pop
aaa
test
out
dec
jmp
jns
push
dec
jno
push
ret
inc
aas
cmpsl
push
lds
mov
movsl
push
or
jmp
xchg
inc
inc
andb
imul
mov
mov
xchg
xchg
bound
daa
inc
jg
bound
ds
adc
enter
daa
xor
cmpb
and
ds
jge
inc
mov
out
in
xchg
ds
xor
cmpsb
sbb
sahf
jb
xchg
enter
mov
and
adc
aam
iret
add
inc
mov
sbb
insl
dec
in
outsl
and
dec
adcb
jbe
into
faddl
mov
sti
jecxz
lods
mov
sbb
in
inc
jbe
movsb
mov
pop
insl
add
mov
pop
adc
loop
ret
sbb
inc
pop
xchg
xor
mov
fcomps
dec
int3
jo
stc
ds
fldcw
push
out
sub
scas
sub
and
dec
mov
roll
xlat
cltd
hlt
cmp
gs
stos
and
into
and
mov
push
mull
pop
fyl2xp1
insb
sbb
push
xlat
xchg
mov
jle
cmp
xor
push
adc
sbbl
fimuls
sub
jne
adc
pop
inc
mov
fstpt
sti
cmp
aaa
shll
ja
fsubl
mov
testb
or
cwtl
in
mov
out
popf
adc
add
shl
repnz
and
rcrb
sbb
pop
sbb
pop
jecxz
gs
cmp
inc
loope
aad
sbb
xchg
fistps
mov
jno
lods
jle
mov
push
aad
daa
lods
push
pop
push
lea
pop
or
cmp
mov
sbb
js
sub
rorb
fisubs
pop
shll
xor
shll
fbstp
stos
jg
dec
xor
aad
jne
out
imul
fidivrl
adcl
push
dec
imul
aaa
mov
pop
es
mov
lcall
pop
pushf
aam
or
lret
xchg
add
and
mov
xor
cmp
dec
lods
or
xchg
pop
ds
sub
push
movsb
andb
adc
xorb
xchg
lods
scas
push
hlt
stos
jb
mov
rclb
push
jmp
xchg
insb
xor
mov
addl
mov
lds
lahf
insl
test
hlt
pushl
mov
sbb
pop
lods
adc
mov
mov
in
push
mov
mov
clc
fadd
popf
push
sub
iret
repz
fldenv
jo
add
sbb
jo
sbb
and
enter
push
hlt
jb
or
jmp
xor
or
mov
xchg
sbb
inc
jge
push
push
or
in
xchg
loop
lcall
scas
push
fld
sub
out
in
ret
sub
ret
mov
xor
test
inc
xchg
cmpsl
xchg
divl
loope
rcrb
std
or
jmp
add
pop
les
push
cmp
pop
and
insl
pop
lock
repz
das
bsf
clc
mov
shlb
cmp
mov
xchg
imull
jl
loopne
dec
aad
xor
pushf
or
and
inc
imul
dec
and
data16
jmp
cld
pusha
push
pusha
and
and
into
mov
push
out
enter
mov
insb
ja
lahf
cmc
in
jp
cmp
scas
or
lds
sub
sti
lcall
dec
out
popf
dec
sbb
lock
lods
add
jae
dec
sub
test
addr16
push
into
adc
add
pop
adc
lods
or
jo
add
lret
sti
push
rolb
mov
fisttpl
mov
xor
dec
add
orl
daa
jnp
mov
pop
pop
push
clc
jnp
push
test
sbb
in
daa
inc
rcrl
xorl
enter
lea
stos
push
scas
outsl
sub
and
lods
push
lret
stos
pop
xchg
push
andl
fcmovnu
mov
mov
arpl
and
push
lock
lret
push
fwait
mov
add
dec
pop
sub
sti
xchg
ret
es
mov
push
jo
and
xorb
inc
mov
push
mov
push
test
repnz
lock
das
leave
sbb
div
or
inc
push
inc
movsb
pop
adc
movsl
pop
push
call
jns
mov
aaa
aas
aaa
rol
push
loop
inc
stc
cmpsl
sbb
repz
cmpsl
popf
hlt
roll
in
aam
mov
sub
jno
pop
fisubs
into
and
mov
in
cmpb
test
ss
out
pop
es
add
lahf
fisttpll
das
jo
sub
adc
fildll
jmp
add
dec
xor
mov
cmp
push
ret
aas
daa
dec
mov
mov
and
mov
mov
push
push
mov
dec
pop
xchg
repz
or
and
mov
or
inc
pop
pushf
aam
clc
dec
or
jne
rol
xor
ret
push
cmp
pop
push
stos
sbb
lods
push
test
std
stos
dec
mov
push
or
call
cld
les
adc
and
or
mov
ret
sbb
js
cld
adc
mov
das
xor
in
sbb
vsqrtps
mov
and
xchg
mul
jo
rcrl
xchg
popw
repz
test
aaa
mov
jl
pop
sbb
in
aad
dec
setbe
sbb
push
push
pusha
addb
sar
mov
cmc
out
dec
push
and
mov
jle
cmpsb
bound
in
sub
idivb
or
fmulp
mov
mov
arpl
repnz
jo
or
mov
add
push
sub
jbe
notb
int3
pop
and
xchg
lea
jecxz
mov
fwait
loop
scas
bound
stos
je
pop
adc
push
das
jp
and
addl
inc
hlt
push
shrl
aas
aam
cwtl
xor
fisubrs
pusha
inc
pop
jbe
addl
sub
xor
hlt
cli
xchg
add
fwait
movsl
mov
imul
xor
outsb
divl
fsubl
mov
jecxz
fidivrs
jno
adc
fistpl
push
outsl
sbb
repz
daa
lea
fsts
xor
or
and
nop
ret
pop
bound
mov
mov
push
std
and
xchg
xchg
xchg
outsl
jb
mov
scas
xor
mov
dec
xchg
sub
rclb
cli
in
mov
ret
addr16
jns
cltd
jp
jne
sarb
bound
push
cli
push
nop
and
aas
stos
dec
ret
dec
fucomi
cmp
aad
mov
jp
incl
pop
int3
dec
push
adc
inc
push
push
xchg
ror
add
nop
pop
xchg
mov
pop
push
cld
jg
nop
dec
cmc
in
pushf
xor
pusha
lmsw
divl
inc
inc
call
sbb
mov
lods
sbb
sbb
cmpsl
adc
fwait
dec
sbb
push
mov
adc
mov
sti
nop
scas
push
inc
or
push
cmpsl
mov
aad
gs
mov
clc
daa
push
jne
or
or
jo
sbb
mov
mov
sti
sbb
sbb
les
shll
adc
sub
out
loop
stos
cwtl
adc
xor
xchg
push
shrb
je
js
popa
pusha
inc
lcall
sbb
testb
shlb
daa
lods
sbb
dec
mov
fsubrs
xor
cld
mov
cmc
iret
adc
aad
aas
das
mov
int3
jo
sub
mov
xchg
mov
fcompl
sub
cmpsb
xchg
jle
js
push
adcl
repz
mov
movsb
push
cs
mov
loopne
inc
icebp
pop
ret
dec
dec
xchg
dec
cli
cmp
repz
divb
add
add
jle
popa
and
mov
lahf
mov
or
xchg
xchg
inc
or
mov
ljmp
popf
pop
pop
lods
fistpl
mov
adc
xchg
xchg
push
fiadds
dec
iret
and
add
bound
out
xchg
fisubrs
in
outsb
sti
push
jp
or
mov
dec
lods
add
ja
ficompl
xor
inc
mov
push
and
pop
loopne
and
jmp
pop
mov
call
push
lock
push
add
imul
lock
push
sub
int3
pushl
xchg
gs
push
jae
mov
or
in
sbb
es
dec
add
jmp
mov
scas
sti
cmc
ret
repnz
pusha
jno
insl
ljmp
and
dec
sbb
dec
subb
xor
int3
sahf
mov
dec
mov
aad
jge
mov
mov
fsubrl
mov
jg
or
inc
cli
je
out
inc
mov
testl
arpl
inc
jge
fmul
dec
leave
notb
pusha
std
and
iret
pushl
in
sbb
shlb
mov
inc
dec
mov
push
loope
mov
ss
cmp
adc
frstor
int
test
aaa
test
mov
movsl
dec
sbb
cs
xchg
inc
push
and
pop
mov
jecxz
sti
cmp
dec
in
mov
popa
lret
cld
cmc
xchg
out
add
mov
stos
iret
pop
add
push
lcall
fs
iret
mov
pop
mov
cltd
rolb
loopne
cmp
or
dec
mov
pop
dec
stc
xchg
xchg
movsl
xrelease
adc
cld
repnz
or
xchg
jp
cmp
hlt
add
xchg
lock
pusha
push
subl
adc
call
sar
dec
pop
cmpsl
out
subb
mov
or
dec
push
mov
mov
push
or
vorps
test
xchg
testl
jp
testb
and
pop
lret
adc
xchg
repnz
cmpsb
ret
out
cmpl
push
enter
sub
jb
lock
push
insb
nop
es
cmpsl
jb
sbb
mov
mov
std
stc
iret
loop
push
jp
cmp
jmp
push
dec
test
ss
call
add
aas
stc
call
movsb
add
xorl
mov
pop
sub
cmpsb
push
push
mov
pop
pop
jl
in
xor
jae
push
fimull
pushl
or
insl
jo
sbb
stos
inc
xor
lds
enter
fiaddl
ficoml
xchg
xor
jg
mov
sbb
dec
push
outsb
aad
rcll
imul
sbb
jne
mov
in
out
scas
adc
sub
push
pop
jno
lods
imul
sbb
das
cwtl
lea
ja
or
xchg
out
pop
lahf
mov
outsb
inc
pop
js
fisttps
mov
lds
xor
pop
mov
je
aas
cs
sbb
xor
adc
daa
cmp
cmp
shlb
movsb
arpl
adc
dec
dec
push
add
aas
lret
cmpsl
aad
insb
lods
or
jle
mov
push
iret
arpl
and
insl
test
and
cmp
fwait
loope
fisubrs
pop
mov
inc
fistps
test
cmp
jb
inc
xor
sub
repnz
popa
push
jb
adc
pushf
sub
scas
or
aam
into
lret
inc
lock
inc
dec
adc
jmp
test
ja
mov
push
xor
lods
dec
and
cwtl
decb
adc
mov
push
mov
xchg
sbb
insb
cmp
lret
mov
adcw
sub
ret
adc
shl
dec
push
xchg
adc
or
rorl
xchg
cmp
lds
or
loope
pop
sbb
dec
in
lock
add
push
in
cmp
xor
jno
int3
and
pusha
scas
in
stos
inc
inc
fwait
inc
cmp
cmp
mov
pop
test
lret
pop
mov
xor
out
jmp
fnclex
adc
jg
pop
pop
jb
in
xchg
sti
cwtl
das
inc
mov
push
mov
jae
xchg
adc
jno
stos
push
int
add
jno
movl
cmc
std
sti
shlb
and
mov
mov
mov
movl
dec
bound
sbb
pop
jae
movsl
icebp
repnz
pop
nop
lods
scas
add
loop
mov
cmp
fstpt
push
ror
xor
or
add
xchg
add
ss
mov
cmp
jae
fucom
jecxz
xor
jno
jae
adc
add
adc
ljmp
xchg
leave
or
add
out
pop
sbb
cmpsl
int3
setne
aad
adc
xchg
rcr
jb
roll
fcomps
push
call
xlat
mov
fsubrl
sbb
sub
push
loope
pop
in
dec
inc
xchg
test
enter
vmovq
ret
xchg
cmp
adc
sbb
and
mov
xchg
mov
add
and
stos
add
jle
pop
inc
mov
dec
mov
mov
sbb
aam
add
xchg
pop
movsb
fucom
ss
pop
jo
fcom
test
mov
mov
imul
pop
xor
mov
jg
xchg
lods
or
shrb
in
xor
test
nop
dec
mov
in
mov
jecxz
push
and
or
iret
mov
sarl
xor
test
sub
jno
imul
nop
arpl
lret
adc
cmp
pop
pop
aas
pop
inc
cli
pop
and
pop
inc
add
aam
dec
mov
xchg
out
insb
testl
inc
mov
arpl
push
out
shl
repz
cld
lret
mov
mov
mov
cmpsl
jnp
scas
rcll
jne
rorb
and
scas
iret
inc
cmc
stos
hlt
adc
enter
js
adc
xlat
pop
or
aad
adc
mov
sar
mov
insb
ret
sarl
xchg
fdivr
or
addl
adc
sti
lret
lods
lods
outsl
push
stos
inc
or
sbb
xor
daa
fadds
lods
lea
imul
pop
stc
movsl
mov
int3
and
inc
cwtl
cs
push
cld
ljmp
loopne
iret
mov
enter
stos
mov
cmp
mov
inc
rolb
loopne
adc
jnp
pop
into
das
inc
mov
or
jmp
stos
daa
cmp
mov
leave
dec
je
or
lea
jle
mov
lds
xor
sbb
jbe
bound
xchg
add
cmp
in
clc
push
js
sub
cmp
gs
adc
dec
les
aas
push
test
je
mov
std
nop
ja
mov
mov
test
lods
test
cmp
andb
movsl
test
sub
add
xchg
test
filds
in
xchg
dec
int
or
cmpsb
adc
cmp
in
inc
test
or
mov
test
shlb
push
mov
push
rcl
loopne
ficompl
les
cli
rorl
mov
pushf
sarb
insl
into
repz
insl
jbe
pop
scas
pop
cltd
mov
and
fs
rcll
in
roll
adcl
outsb
iret
dec
imul
pop
jecxz
sahf
cmpsl
les
xor
push
cmp
push
pop
cmp
inc
mov
shlb
dec
outsb
cli
icebp
xor
add
popf
stc
add
mov
pop
stos
nop
js
cmp
and
cmp
pop
dec
dec
cmp
repz
sub
in
clc
xchg
icebp
mov
mov
jne
and
nop
out
and
and
stc
sub
cmp
push
sub
mov
fstl
jmp
mov
lret
add
je
dec
cmpl
mov
imul
fnstcw
jmp
jne
or
clc
jo
sarb
cmpb
aas
shl
movsb
popf
rorl
adc
mov
shrl
inc
push
cld
pop
pop
mov
cmp
lock
inc
mov
ror
ljmp
bt
nop
mov
adc
xchg
call
push
hlt
fisubrl
and
sub
dec
jmp
dec
push
or
push
mov
cmp
pop
pusha
mov
sbb
test
pop
bnd
mov
sub
jo
loope
cmp
fdivs
and
mov
dec
mov
pop
push
in
sbb
call
or
dec
mov
push
into
pop
cmpsl
in
pop
jge
xor
cwtl
pop
pop
jne
add
lea
aas
and
enter
mov
lods
inc
mov
xorl
int
fadds
movsb
jg
push
test
aam
add
xchg
cltd
xor
and
xchg
cmp
push
xor
rol
popf
mov
fimuls
insl
popf
cmp
mov
xorl
std
stc
add
push
shll
call
je
icebp
xchg
dec
push
lahf
dec
pop
divb
mov
dec
jno
adc
push
shlb
inc
scas
popa
pusha
dec
sbb
loope
cmp
sbb
ljmp
andb
aam
push
fnstsw
push
add
pop
loop
je
aas
test
test
push
add
stos
inc
bound
mov
mov
inc
mov
push
xchg
hlt
pop
jg
xchg
push
sbb
fisubl
xlat
fcmovbe
xor
xchg
mov
nop
js
movsl
sar
adc
in
aad
lds
adc
jmp
inc
cmp
or
pop
aad
lds
adc
jmp
inc
cmp
or
pop
aad
lds
adc
lock
inc
and
and
push
leave
lds
adc
popa
lcall
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
pushl
call
call
mov
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
push
call
xor
leave
ret
ds
fistps
iret
push
mov
enter
orb
insl
scas
pop
sahf
dec
mov
das
scas
pop
fimuls
into
ds
fistps
iret
push
mov
pop
dec
jg
outsl
scas
pop
sahf
dec
mov
cs
pop
fimuls
into
ds
fistps
iret
push
mov
pop
dec
jg
dec
repnz
out
sub
pop
mov
mov
jp
loop
mov
add
mov
inc
sti
push
sahf
dec
fnstenv
push
dec
pop
adc
adc
rdmsr
icebp
mov
push
addr16
ret
add
into
mov
ds
gs
ficomps
add
test
mov
xchg
sub
push
pop
ror
sarl
dec
fwait
lret
movsb
fstpl
enter
enter
push
jle
mov
push
loop
mov
lods
das
mov
lods
mov
xor
inc
jle
xchg
arpl
scas
shlb
mov
loopne
setle
mov
xor
mov
insl
cmp
sub
fildl
jl
fmul
or
fistps
iret
push
mov
pop
dec
jg
outsl
scas
pop
sahf
dec
mov
das
out
pop
fimuls
mov
pop
mov
adc
das
lock
psrld
sub
or
mov
pop
jg
mov
fs
sbb
inc
fidivl
lret
sti
or
and
dec
loop
xchg
dec
xorl
out
pop
cltd
push
jp
adc
dec
jg
outsl
scas
pop
sahf
dec
mov
das
out
pop
fimuls
into
ds
fistps
iret
push
mov
pop
dec
jg
outsl
scas
pop
sahf
dec
mov
das
out
pop
fimuls
into
mov
inc
in
mov
outsl
mov
adc
int3
cmpsl
mov
es
jmp
pop
xlat
jle
cmp
pushf
sub
xor
sub
adc
gs
mov
inc
pop
ja
jmp
ret
adc
inc
mov
je
and
jnp
movsl
mov
mov
push
and
test
stc
cmp
xchg
mov
jl
push
mov
or
mov
cmp
out
dec
xor
pushf
mov
popa
cmp
loope
and
rcrb
call
xchg
mov
jg
jne
fcmovnbe
pop
pop
xor
enter
and
ficoms
sarb
sub
loope
insl
insl
add
xchg
in
add
cld
cmp
xchg
in
in
jg
sbb
ds
shrd
sub
mov
shll
arpl
mov
shll
push
inc
cmc
or
mov
aaa
loope
xchg
jmp
mov
clc
testb
cmp
lcall
std
rorb
add
lret
jo
flds
push
xor
imul
aam
leave
sbb
jbe
pop
jns
imul
sbb
out
adc
mov
dec
sti
xor
jmp
nop
inc
lods
jne
lcall
dec
add
mov
popf
test
xor
stos
outsl
cld
adc
or
lcall
or
adc
aam
sbb
sbb
movsl
out
push
push
repz
inc
mov
dec
add
and
adc
push
fldt
jae
decb
xchg
mov
mov
das
loopne
mov
add
or
jo
jp
add
sbb
add
add
aas
inc
xchg
imul
xchg
movsl
ret
pop
inc
sub
xchg
insb
cmpsl
pusha
mov
cmp
popa
fdivp
jo
mov
inc
lds
or
jmp
test
emms
mov
mov
pop
push
mov
add
les
lret
fs
lods
pop
dec
popf
in
inc
clc
inc
add
xor
cltd
arpl
loop
xchg
xor
pusha
scas
cmp
cltd
push
imul
in
mov
push
and
add
jl
mov
movsb
cmpsl
cmp
scas
mov
cltd
jnp
dec
mov
sahf
push
jl
dec
rcrl
mov
fmull
lcall
lcall
orb
jmp
inc
pop
bound
insb
arpl
movsl
in
xor
pop
xchg
call
hlt
xor
add
mov
mov
rolb
cmp
add
xlat
pop
stc
dec
adc
pushf
jmp
inc
outsb
cmpb
test
and
lcall
test
rolb
inc
cmp
icebp
pusha
inc
js
mov
es
xor
mov
rcrb
fldenv
daa
xchg
out
fcomps
test
ficoml
ljmp
lods
and
lahf
sub
jle
jge
out
cmc
fiaddl
dec
aad
mov
enter
repz
fwait
popf
lcall
out
sbb
jae
pop
shr
test
cmp
mov
aam
sbb
inc
mov
jo
jbe
dec
xchg
push
sahf
sbbl
call
pop
jo
xchg
sarl
jecxz
leave
push
scas
xor
adcb
or
cmpsl
imul
sbb
pop
and
pop
int3
add
jae
addr16
push
lahf
push
mov
incl
leave
fidivl
lea
mov
sahf
imulb
dec
cmc
xchg
adc
shrb
hlt
mov
or
sbb
mov
data16
arpl
mov
addr16
repnz
repnz
les
sbb
mov
jne
repnz
f2xm1
cmpsl
es
fcoml
mov
dec
xor
mov
inc
fst
pop
dec
push
pop
out
arpl
loope
inc
mov
mov
sub
out
mov
push
test
mov
xor
cli
rclb
lock
push
sbb
loopne
loop
out
jl
inc
adc
mov
jle
ja
call
cmp
stos
mov
in
in
aam
nop
add
aas
test
or
mov
sub
test
in
add
pop
mov
push
mov
sbb
xor
pop
jmp
jmp
xlat
jne
idiv
cmpsb
rclb
jl
mov
test
dec
pop
inc
aas
aam
mov
call
xchg
fldl
pushf
sar
mov
fcoml
fcomip
into
push
scas
fwait
mov
xchg
mov
jg
arpl
pop
dec
xchg
in
ret
js
push
mov
mov
das
mov
xorb
jl
sar
xchg
adc
ja
xor
or
dec
popa
frstor
or
mov
stos
xor
loope
int3
enter
add
adc
dec
arpl
mov
outsb
or
out
add
pop
push
and
and
dec
call
in
mov
cmp
add
xlat
or
xor
inc
mov
ret
int
push
add
xchg
mov
outsb
jnp
pop
lea
xor
sbb
stos
xchg
vphaddbq
imul
jge
insl
clc
push
out
call
add
int
and
mov
push
inc
daa
nopl
and
xor
push
cltd
ret
mov
adcl
mov
es
inc
sbb
push
mov
mov
les
jp
dec
push
nopl
add
push
fwait
aad
pop
and
loop
or
pop
xchg
push
jae
sahf
dec
fisubrs
xchg
out
nop
dec
cmp
push
mov
xlat
jp
ja
shrb
push
aas
int3
out
mov
xor
cmpsb
mov
xchg
out
push
aas
push
or
andl
push
jmp
incl
jo
xor
iret
and
ret
fstps
mov
ss
dec
or
sahf
imul
mov
ret
xor
push
mov
inc
xlat
inc
pushf
adc
add
repnz
or
clc
adc
out
roll
sub
mov
and
add
sub
xlat
insb
push
js
dec
xlat
jle
mov
inc
in
dec
jg
pushf
shl
inc
ficoms
lahf
inc
jle
add
cli
sub
or
fs
ret
enter
push
in
fld
inc
mov
data16
loopne
push
imul
inc
pop
aas
fiaddl
fdivrl
mov
xchg
loopne
out
fidivs
es
push
sub
pop
fsubrl
lods
lret
dec
add
icebp
cmpsl
inc
xchg
push
subl
icebp
cmpsb
popf
test
bound
inc
les
pop
mov
ss
ja
pop
movsl
inc
mov
fstps
jne
adc
xor
lods
dec
cmpsl
push
cmc
mov
sar
into
inc
decl
lret
mov
push
scas
jmp
pop
push
mov
or
scas
fisubl
gs
icebp
icebp
loope
inc
sbb
jno
ss
pop
sub
into
fidivl
scas
addr16
dec
sahf
adc
out
jp
pop
jle
mov
add
add
add
xchg
inc
mov
pushf
icebp
jne
xor
scas
pop
inc
push
js
dec
adc
pop
and
sbb
jo
cmpsl
mov
rcll
call
sahf
cmc
in
push
mov
pop
add
pusha
inc
fdiv
push
jmp
in
inc
push
mov
fimull
push
inc
lea
push
or
cmpsl
out
jge
lret
lret
xchg
arpl
stos
call
jnp
or
scas
aaa
iret
dec
cs
jns
jae
sub
loopne
pop
inc
lods
mov
lock
jge
dec
push
cmpsl
adcb
loop
or
rcll
xchg
pop
fstps
jle
std
pop
push
clc
adc
xchg
in
and
cmpsb
cwtl
ljmp
test
pusha
push
loopne
pop
into
in
jbe
sbb
mov
jno
jns
test
add
insb
sarb
mov
jbe
pop
aas
adc
lcall
adc
andb
ss
icebp
mov
and
xchg
jle
add
adc
push
shll
mov
ljmp
inc
xchg
clc
lock
jno
fbstp
mov
jbe
in
and
jo
in
loopne
mov
xchg
mov
aaa
push
sub
xchg
push
or
sub
shlb
and
insl
movsb
cmpsb
sbb
arpl
jle
fdivr
movb
mov
out
orl
jb
test
fldcw
notb
push
in
push
inc
push
add
lods
mov
stos
push
mov
and
ret
dec
jnp
or
jge
mov
inc
ljmp
rol
push
jae
add
cmpsl
sbb
and
fcoml
ficoml
mov
adc
sub
cmpsb
ror
in
xor
adc
outsb
cmp
mov
addb
popa
cmp
fsub
and
mov
ljmp
push
cmp
mov
repz
hlt
mov
fs
dec
lcall
inc
mov
sbb
and
aam
stc
cmp
pop
movsb
mov
fiadds
xchg
sbb
lret
push
ret
jne
cmpsl
sbb
mov
sbb
popa
and
jecxz
mov
insb
test
cmp
mov
xchg
dec
push
mov
fldenv
sbb
popf
mov
push
xchg
stc
adc
adc
out
or
lea
icebp
mov
cwtl
dec
add
cmp
jns
sbb
mov
push
outsl
xchg
mov
and
aaa
push
popa
popf
inc
mov
lcall
std
shll
mov
out
push
stos
or
push
xchg
push
push
imul
call
mov
adc
or
cmp
arpl
jg
mov
push
out
xchg
pushf
xor
sbb
incl
pop
negb
jns
lods
mov
shll
ret
push
scas
movsb
mov
mov
inc
sbb
sbb
mov
lock
dec
jecxz
sub
jecxz
or
pop
mov
push
and
mov
aaa
arpl
and
cli
rcrl
and
shrb
arpl
jae
add
insb
sahf
mov
sbb
add
cli
fst
adc
cli
and
outsl
add
sbb
lret
cmp
fwait
pop
mov
lret
aad
test
cltd
fs
add
test
iret
stos
lods
icebp
cmp
adc
fsubrl
pop
dec
dec
or
sub
js
push
loopne
cltd
shlb
inc
mov
sub
sub
add
push
scas
add
outsb
sahf
jbe
lea
dec
cmp
pop
iret
adc
lods
or
sbb
into
mov
loopne
mov
adcb
sub
xor
inc
add
movsbl
lcall
rcl
popa
scas
adc
test
adc
outsl
aam
imul
mov
popf
mov
fwait
sub
rolb
js
push
sahf
jb
fdivrl
jbe
dec
jecxz
xchg
adc
adc
lcall
aas
in
loope
adcl
lret
aaa
pop
pop
cmp
fadds
shlb
mov
sbb
fdiv
test
pop
push
cs
daa
push
xchg
lods
sbb
adc
push
inc
call
outsl
jle
mov
add
pop
dec
ror
sbb
cmp
mov
mov
lock
sbb
aas
push
imul
pushf
sbb
lret
inc
pop
push
push
cmpsl
je
cmp
or
adc
pop
fstps
shrl
lahf
sub
mov
sbb
cmpsl
fisttps
inc
dec
fwait
jl
imul
cs
insl
cwtl
jmp
sbb
cld
and
add
xchg
dec
outsb
lods
mov
cmp
hlt
call
mov
outsb
and
add
and
xor
pop
xor
and
xchg
dec
sbb
enter
icebp
out
inc
clc
out
push
sub
cltd
nop
inc
adc
push
ret
mov
scas
pusha
dec
ret
aaa
push
inc
repz
out
add
push
sti
xchg
or
imul
mov
push
inc
and
add
stc
movsl
mov
mov
xchg
inc
jo
and
sub
push
cmp
pop
test
jecxz
sub
mov
rorb
sbb
aas
cmp
leave
ss
lret
dec
push
or
movsl
outsb
ror
mov
dec
iret
orl
pusha
in
push
scas
ficoms
movsl
js
jmp
cwtl
lods
repz
pop
divb
jb
bound
in
mov
or
cmp
push
sub
xchg
pop
and
jge
cwtl
lods
loop
lret
dec
repz
iret
jp
movsl
inc
decb
inc
ret
clc
inc
mov
lret
loope
lret
sub
dec
lahf
lcall
jl
xchg
or
push
andl
or
jnp
notb
orl
insb
cmpsb
or
and
adc
lret
mov
test
mov
roll
xchg
xor
imul
mov
addb
mov
xor
leave
movsl
mov
negl
push
mov
cs
orb
and
arpl
stos
jne
paddw
sbb
and
and
gs
mov
cs
loop
inc
dec
shl
scas
cmp
xchg
gs
in
lret
movsl
es
xor
pop
inc
js
in
shr
add
rcrl
daa
pop
int3
ljmp
push
das
addr16
out
mov
lret
insb
test
add
xor
jmp
push
lds
push
test
add
cmpsb
fdivs
sahf
cwtl
lret
clc
dec
add
adcb
xor
and
sbb
popa
lret
pop
jp
sahf
in
cmp
push
int3
xor
rol
push
xor
aaa
pop
loope
adc
pop
xor
mov
dec
loope
or
enter
jmp
inc
push
outsl
in
dec
das
mov
stos
out
ret
xchg
mov
mov
push
xchg
nop
lods
ret
das
sub
inc
jmp
rcrb
out
add
dec
mov
addr16
jge
or
sbb
and
push
jno
loopne
xor
mov
xchg
mov
imull
mov
mov
add
cwtl
js
mov
inc
push
push
sub
lods
dec
popa
roll
repnz
xchg
or
jecxz
dec
or
int3
adc
aas
rolb
jne
out
xchg
mov
and
jle
in
adc
mov
into
je
loop
fimuls
push
jns
xor
mov
adc
paddsw
dec
push
or
movsb
iret
mov
fistpl
fdivrl
mov
ret
in
loopne
iret
repz
stos
imul
cltd
into
pop
adc
pop
add
icebp
cmp
cmpsb
rcrb
sbb
dec
pop
jg
adc
mov
std
jo
out
jmp
test
out
out
sbb
jmp
or
push
mov
jl
cmpsl
and
inc
xor
mov
movl
lcall
adc
cmp
ret
icebp
stos
pop
fsubs
or
or
fsubrl
inc
std
imul
movsb
pop
or
cmc
jnp
lret
add
jns
sub
pop
add
mov
dec
push
ljmp
mov
mov
test
cld
cmp
mov
repz
push
daa
loopne
ss
test
mov
pushaw
lds
xor
add
minps
loop
es
or
and
int3
xlat
fnstenv
into
insl
shrb
xchg
jl
mov
imul
pop
mov
jns
cmp
in
adc
jnp
test
dec
jb
js
dec
add
dec
leave
push
mov
mov
or
shrb
mov
icebp
iret
sub
sbb
mov
xchg
lods
cmp
in
pop
dec
dec
lcall
mov
push
fs
test
fwait
lcall
push
lods
jnp
lret
xor
lods
ret
sbb
add
mov
push
dec
push
shll
cmc
sub
and
cs
clc
push
xchg
fisubl
loopne
inc
xor
mov
or
cmp
cmc
add
jl
test
sub
inc
inc
andl
or
sbb
pop
aaa
mov
push
ljmp
sahf
aas
leave
fdiv
xor
leave
push
sub
mov
cs
push
scas
push
mov
adc
sbb
cmc
fwait
jg
pop
mov
rolb
push
and
mov
sbb
getsec
adc
jo
pop
add
or
cmpsl
cli
in
lods
dec
cmc
pop
push
js
out
inc
addb
fs
mov
addr16
loop
jecxz
mov
out
inc
jb
ja
push
jne
mov
xor
or
ljmp
scas
nop
dec
bound
sarb
loopne
xor
mov
or
clc
xchg
lods
ficompl
pushf
inc
int
fildl
jmp
lods
xacquire
ds
es
clc
iret
pop
cmc
in
dec
sub
les
and
push
cmpsl
dec
mov
mov
roll
jae
cmp
push
cmp
sub
insb
mov
sbb
loopne
into
mov
dec
inc
push
je
std
sbb
push
inc
mov
dec
mov
or
sbb
test
or
test
adc
fnstenv
call
in
aas
test
int
leave
mov
push
loop
pop
shll
jle
mov
adc
lahf
fldenv
inc
mov
sahf
loopnew
aaa
mul
das
mov
imul
jne
adc
outsl
lods
nop
je
cmpsl
int3
lcall
cs
hlt
inc
test
rorl
and
mov
rorl
dec
cmpsl
icebp
ss
jbe
mov
aam
mov
mov
scas
ret
sub
int3
cld
shll
xchg
lahf
add
cmpsl
aam
les
sbb
xchg
xchg
mov
mov
subl
xorb
xlat
push
sbb
fldt
loope
nop
test
roll
js
fucomi
mov
aas
and
gs
in
lds
js
stc
test
sbb
jae
dec
push
adc
dec
hlt
out
mov
push
ja
cmp
mov
std
aad
sbb
xor
adc
mov
jae
inc
andb
stos
xchg
dec
cs
pop
or
pop
adc
xlat
ja
add
sahf
pop
ljmp
js
lods
sbb
push
shll
or
or
add
testb
xor
fists
int3
ret
xchg
lcall
incb
lcall
test
mov
sahf
stc
shrb
sbb
adc
cmc
je
cwtl
out
icebp
push
pop
popf
xchg
jb
push
mov
push
ficompl
dec
mov
sub
jno
xchg
pop
imull
xchg
bound
lret
dec
jae
cmp
sbb
adc
stos
xorb
add
cltd
jne
push
push
add
push
mov
insl
stos
iret
aas
pop
enter
movsb
jno
inc
xchg
pop
leave
mov
out
mov
push
mov
mov
adc
mov
pop
lcall
loop
jno
test
dec
lahf
fmuls
or
sub
jbe
dec
lret
sbb
mov
cmp
cwtl
cmpsl
cltd
hlt
adc
jg
popf
cmc
in
and
push
pusha
and
inc
cld
adc
push
lods
cli
xchg
in
xor
aad
inc
js
jp
mov
jecxz
ds
mov
test
dec
shr
push
dec
negb
and
mov
pop
ljmp
mov
and
cltd
lahf
es
les
fimull
fmull
movsl
out
sti
and
sub
js
es
repnz
roll
and
mov
xlat
jnp
stos
xor
enter
or
cmp
mov
les
cltd
aaa
gs
and
addr16
xor
fldcw
dec
out
xor
mov
std
ds
sbb
jne
mov
and
or
sbb
test
imul
push
sbb
lock
shlb
xor
sarl
pop
xor
push
addl
sbb
test
dec
xchg
es
dec
popa
movsl
je
daa
insl
inc
adcb
in
pop
push
ss
test
push
pop
in
xor
mov
insb
xor
negb
and
mov
cmpsb
fwait
std
int
sbb
mov
or
and
and
push
push
xchg
cmp
imul
fs
mov
mov
cmp
in
test
cwtl
add
push
andb
or
mov
inc
pop
jge
and
rolb
pop
mov
inc
mov
lret
add
dec
testl
loopne
iret
push
mov
pop
dec
jg
outsl
scas
pop
sahf
dec
mov
das
out
pop
fimuls
into
ds
fistps
iret
push
mov
pop
dec
jg
outsl
scas
pop
sahf
dec
mov
das
out
pop
fimuls
into
cmp
fistps
iret
movswl
outsb
lahf
pop
dec
jle
outsl
scas
pop
sahf
dec
mov
ljmp
out
push
fimuls
into
ds
fistps
iret
or
fimuls
mov
inc
nop
add
sahf
dec
stc
dec
jbe
adc
and
xor
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
xor
mov
test
xchg
rcrb
aam
cmpsb
jmp
xchg
and
xor
add
and
push
add
loop
repnz
xchg
shl
mov
aam
and
xor
gs
adc
fs
je
inc
add
sti
mov
test
xchg
lret
hlt
stos
les
xor
cmp
pop
insl
sbb
jge
scas
mov
enter
outsl
push
jae
popa
out
movsl
mov
inc
push
push
std
fildll
loop
js
lret
aad
in
sti
inc
dec
jge
insl
push
popf
lret
mov
cltd
lods
cltd
inc
mov
lods
ljmp
cmc
loopne
jle
dec
mov
iret
and
fs
sub
lods
fiaddl
adc
mov
js
in
fsubs
xor
repnz
push
daa
mov
std
pop
add
dec
or
or
cld
mov
sahf
inc
lea
jmp
and
rcll
pop
sbb
adc
sub
cmp
adc
fisttpl
loop
jno
cltd
lods
adc
je
inc
add
sti
cmc
mov
test
xchg
shl
mov
aam
and
xor
add
adc
cmp
sbb
loop
sub
fidivl
sub
testl
aaa
adc
xor
insl
and
mov
fwait
lock
mov
imulb
jl
jno
das
push
pop
xor
lcall
xchg
hlt
mov
adc
and
xor
add
adc
and
add
loop
repnz
xchg
shl
mov
aam
and
xor
add
adc
and
add
loop
loope
inc
rclb
dec
and
add
imul
and
movsl
cwtl
sub
mov
push
aas
shll
xor
loopne
arpl
test
mov
mov
mov
nop
sub
das
loop
pop
xor
dec
shrl
test
lahf
jnp
pop
lcall
fmull
fidivrl
xlat
loopne
xchg
sbb
or
push
jle
jge
fld
pop
adc
add
mov
outsl
add
mov
test
shrb
pushf
aaa
test
or
jl
jl
fsubrl
add
jbe
push
fdivrs
ja
pop
xlat
and
mov
je
ss
push
vmaskmovdqu
jmp
aaa
pop
fucomip
addr16
rolb
int
imul
jle
in
sub
or
and
insb
arpl
jl
push
ficompl
into
mov
out
into
jbe
jecxz
repnz
lret
test
mov
arpl
mov
movsb
lea
loop
cmp
push
xor
push
iret
inc
and
push
dec
insl
and
scas
int
sub
or
xor
ret
imul
cmp
clc
lea
leave
ja
mov
dec
and
sahf
push
add
push
es
ljmp
das
adcl
mov
or
jge
sbb
inc
cmp
xchg
pop
or
fsubl
push
mov
int3
frstor
ret
inc
lahf
pop
iret
cld
popf
fs
or
filds
adc
jg
lea
xor
stos
loop
sbb
sbb
and
and
enter
nop
ljmp
add
adc
dec
sbb
fnsave
mov
pop
jg
add
sbbb
movsl
das
cmp
push
pusha
mov
lods
inc
test
js
add
xor
pop
jle
das
push
mov
arpl
sarl
dec
jb
adc
cltd
mov
mov
lea
xor
stos
pushf
test
cltd
les
cld
popf
add
pop
add
jge
dec
xchg
popa
cmp
pop
mov
pop
inc
jbe
aad
add
xlat
shrl
sarl
cmp
add
push
mov
inc
push
pop
cwtl
push
mov
pop
cmc
rclb
aaa
sbb
fbld
sbb
pop
call
inc
mov
jle
sub
cwtl
mov
push
sbb
les
and
sbb
pop
inc
stc
cli
mov
push
aam
imul
pop
cltd
xor
lock
xchg
dec
inc
inc
cmpsb
dec
icebp
xchg
jl
in
iret
shlb
cmp
popf
jle
scas
jle
jmp
jo
movsl
subl
jo
adc
stos
negb
add
test
sbb
mov
mov
test
pop
pop
jbe
jmp
stos
jae
xchg
push
xchg
out
aad
sbb
inc
mov
mov
in
sti
xor
xchg
pop
filds
das
push
lret
cmc
int
or
stos
push
pop
fstpt
jo
and
leave
mov
xchg
rorl
jo
inc
mov
enter
les
lcall
inc
jae
adc
popf
inc
loop
lret
lods
cmp
test
popl
xor
inc
mov
dec
sbb
add
dec
gs
add
adc
scas
aaa
lds
das
pop
in
or
add
push
xchg
mov
push
out
sbb
mov
and
inc
and
xchg
lock
dec
aad
lret
out
fidivs
mov
add
setns
dec
lret
sbb
inc
mulb
jb
pop
and
ds
sbb
mov
xor
lret
dec
fwait
les
mov
dec
nop
jmp
cmpsl
mov
rcr
roll
psadbw
xor
jg
popf
iret
mov
pop
jmp
fldt
xchg
cmp
push
or
jmp
pop
call
xchg
or
lods
dec
and
xchg
in
jne
sub
fcoml
dec
add
jle
mov
xchg
ja
xchg
ret
sub
aam
xchg
incb
insb
xchg
xlat
mov
mulb
outsl
mov
cmp
xchg
push
leave
push
test
or
push
pop
cmc
jbe
sub
cmpsl
xchg
sub
xor
sub
pop
adc
dec
adc
loopne
stos
adc
xchg
sti
imul
and
aam
popl
popa
cmp
or
ljmp
lds
mov
sub
sub
push
and
inc
ljmp
bound
push
mov
lods
mov
mov
xchg
push
xchg
or
mov
adc
sub
fmull
clc
shl
fidivrl
das
ss
jns
orb
out
push
xchg
cmpsb
in
push
outsb
lea
pop
or
add
sub
mov
aas
ret
lods
imul
sbb
mov
movsb
frstor
orb
scas
andb
and
or
mov
xor
mov
outsb
fsts
dec
push
into
sub
sbb
mov
inc
or
push
pop
subb
mov
inc
repnz
mov
inc
loopne
push
int
inc
in
cmp
aaa
xchg
mov
jmp
outsb
push
aaa
js
incb
inc
inc
rclb
cmc
ret
jns
xchg
sub
inc
es
cli
pop
test
push
xor
lock
insl
insl
rcl
mov
push
xchg
subl
xor
push
out
push
iret
and
cmpsl
dec
cmp
or
jg
les
push
add
mov
lcall
loopne
mov
notl
lock
fcmovb
roll
cmp
ja
mov
inc
inc
clc
sti
add
es
pop
xlat
jge
jo
call
xor
mov
sbb
xor
xchg
sub
jge
jb
add
out
sub
adc
inc
cmc
mov
pop
mov
mov
lahf
mov
push
scas
dec
arpl
mov
test
jl
repz
sub
mov
cld
cwtl
jecxz
scas
add
jge
arpl
xchg
sbb
pushf
lcall
sub
mov
inc
rolb
xchg
shl
repz
sbb
dec
lahf
cmp
nop
add
cmpsl
push
in
push
stos
jno
cmp
mov
call
sub
movl
loopne
dec
cld
mov
xchg
xchg
fs
inc
inc
cli
dec
mov
inc
or
pop
in
fcoml
push
scas
fwait
jne
dec
mov
outsl
or
in
push
push
or
sbbb
dec
inc
xchg
aam
or
adc
stc
shlb
push
scas
pop
mov
xor
mov
sub
push
ret
jle
cmp
popa
in
mov
mov
mov
jmp
or
scas
pop
test
and
cmp
ret
add
insb
sti
pop
dec
adcl
cltd
jle
pop
pop
dec
pop
nop
pusha
dec
hlt
icebp
fistps
sahf
adc
test
pop
into
jge
hlt
xchg
bound
add
add
cmp
sub
scas
cmp
ljmp
jge
aas
repnz
cmp
mov
lods
les
xor
ret
push
inc
sbb
leave
xor
mov
xchg
add
inc
push
clc
je
das
rolb
mov
dec
cli
repnz
scas
xchg
cmp
xor
inc
mov
dec
stc
ss
sub
loope
xor
push
fcmovbe
test
and
insl
daa
xor
dec
daa
jmp
ljmp
push
inc
sbb
sub
cmc
sarl
add
adc
aas
dec
nop
mov
nop
jne
inc
test
jno
scas
xor
fsubrl
xor
and
sbb
push
ljmp
rol
adc
lcall
jnp
jg
insb
je
cltd
inc
loopne
in
jmp
sbb
xchg
pop
and
out
idivb
fucomi
test
insb
mov
ss
iret
lret
push
cmpsl
clc
inc
data16
gs
test
add
fnstenv
sub
mov
dec
insb
imul
add
jge
out
xchg
jne
mov
js
add
adc
or
or
mov
pusha
loop
pop
sbb
inc
and
inc
pop
shlb
out
shlb
mov
sub
add
sbb
pop
ret
xchg
bound
repnz
icebp
mov
stos
lods
jl
cmc
push
jns
xchg
sub
in
dec
cmp
cli
mov
adc
aaa
add
insl
sbb
testl
orb
add
shr
ret
and
imul
sti
push
jno
orl
lret
mov
pop
dec
add
dec
stos
adc
out
ret
insl
nop
mov
nop
jno
sub
stos
add
inc
dec
rclb
mov
imul
pop
daa
jle
dec
dec
or
pop
cmp
pop
je
mov
stc
ret
sbb
jns
mov
sub
dec
cld
mov
movsl
mov
subb
push
jmp
fcoms
pop
stos
lahf
mov
add
pop
fsubs
mov
fcoml
je
mov
dec
and
gs
mov
or
jo
fmul
xchg
and
push
or
sahf
das
inc
jb
xor
cmp
cmp
cmp
sub
insb
cmp
cwtl
andl
das
rcl
and
std
push
test
pop
les
out
aad
or
lds
fistpl
outsl
cmpsb
out
jge
push
sub
add
or
xchg
inc
pop
jo
fcompl
jno
pusha
sub
sarb
pop
xchg
add
ret
inc
pop
in
fwait
in
je
pushf
addr16
fiadds
mov
push
cmp
dec
adc
xchg
sub
mov
xchg
adc
fcmovnb
adc
push
sahf
pop
shl
xchg
pop
add
arpl
call
std
test
add
dec
mov
push
out
lods
jno
test
scas
into
or
jae
loop
cmp
sbb
je
mov
sbb
subl
jae
xlat
lea
inc
cwtl
bound
mov
inc
mov
test
adc
xchg
mov
repnz
xor
jmp
inc
push
push
ja
or
int
push
std
mov
movsb
mov
mov
adc
add
mov
push
jo
es
pop
orb
loop
pop
mov
pop
int
and
test
mov
movb
push
cmpsb
and
cmc
scas
and
or
mov
jg
adc
sbb
cmp
cmp
cmovg
xchg
inc
es
in
mov
xchg
lds
insl
push
les
daa
les
mov
xchg
and
xchg
jl
clc
test
push
sbb
sub
inc
aas
cld
bound
xor
iret
xchg
xor
mov
inc
int
add
out
mov
jg
inc
repnz
rcll
mov
jo
int
sbb
inc
xchg
push
daa
cwtl
fisubl
pop
out
and
pusha
lock
pop
jle
out
adc
fists
pop
inc
cmp
outsb
xor
stc
and
mov
push
aas
inc
add
or
std
dec
adc
add
aam
jge
push
mov
stos
mov
outsl
cmp
jns
pop
fdivs
out
sbb
or
or
scas
mov
jno
jnp
adc
mov
shll
mov
mov
and
cmp
add
test
mov
mov
mov
jmp
dec
fnsave
cltd
movsb
insl
lods
cli
inc
push
dec
int
das
in
popf
push
pop
inc
sbb
fwait
nop
fidivrs
iret
test
add
leave
lahf
shl
add
aad
mov
push
pop
decl
adc
mov
push
gs
xor
inc
and
imul
je
sub
in
pusha
loop
push
push
in
xchg
push
sub
cmpl
addr16
js
lds
ret
in
xchg
cmpsl
add
movsl
pop
xlat
pop
movsl
ret
xchg
sahf
sub
outsl
mov
icebp
push
leave
icebp
push
mov
or
mov
icebp
sub
out
sbb
sbb
mov
mov
and
mov
pop
hlt
mov
pop
sbb
xchg
pusha
addr16
mov
mov
fisubrl
outsb
sub
inc
cltd
addr16
mov
call
sbb
push
xchg
fxch
pop
jmp
add
mov
and
dec
or
xor
icebp
and
mov
insl
fildll
insl
mov
push
mov
scas
aad
inc
sbb
bound
aam
vmread
jne
sahf
cmp
lret
pop
jmp
leave
mov
scas
addr16
xor
fwait
sahf
or
roll
subb
adc
push
sub
push
mov
dec
movsb
add
jne
xor
mov
xor
test
shlb
shlb
cmp
cmp
in
inc
fildll
mov
pop
pop
and
test
repz
rolb
push
int3
and
cmc
push
push
xor
xchg
jge
in
stos
sub
cli
xchg
lret
cmp
jecxz
inc
cwtl
mov
mov
jae
insb
dec
mov
or
dec
jno
adc
popf
pop
mov
lock
outsb
xchg
jg
push
shr
decb
sbb
lds
in
xor
test
loop
movsb
hlt
out
cltd
or
cs
rcl
sbb
adc
stc
test
push
outsb
mov
sbb
cmpsl
inc
xor
push
and
xchg
sbb
frstor
gs
mov
in
adc
xor
cmp
test
test
sbb
pop
push
ja
addr16
fldl
test
fadd
fsubl
into
dec
or
les
loop
das
pop
and
ja
loopne
or
jmp
lds
sbb
add
in
mov
mov
sbb
mov
je
cmpsl
mov
mov
add
leave
adc
test
xchg
jbe
mov
mov
ja
and
fcmovne
addb
lret
loopne
push
scas
pop
js
movsb
xlat
xor
pop
daa
xchg
xchg
inc
adc
mov
xor
sti
lret
cmp
vmulpd
addr16
repz
xchg
clc
adc
daa
lahf
cmp
stos
mov
jae
stos
add
idiv
cmp
cmp
inc
push
dec
jmp
or
lods
icebp
push
inc
mov
sub
push
addr16
adc
jb
adc
out
dec
ret
add
add
insl
insb
jle
cli
xchg
pop
out
cmp
cld
adc
sub
mov
sub
xchg
aam
cmp
mov
inc
ret
movsl
pop
mov
inc
aas
adc
arpl
push
test
jae
pop
movsl
jno
fcomip
dec
xchg
adc
jl
pop
ljmp
aaa
xchg
push
ret
pop
shl
push
jmp
or
xor
pop
dec
mov
jecxz
lock
ficoms
fbstp
nop
lcall
in
scas
sub
pushf
or
in
mov
movsb
adc
mov
fwait
insb
and
lods
xlat
lret
jp
mov
lea
push
lds
add
cmc
add
sbb
in
lods
jno
or
lods
pop
notl
in
push
test
loopne
ret
xor
xchg
fcomp
sahf
dec
mov
nop
or
int3
inc
pop
push
sub
cld
inc
and
imul
sub
add
fidivl
rcll
rolb
dec
shrb
mov
sbb
sbb
push
pop
xchg
xchg
mov
xor
push
fsub
sub
insl
jnp
movd
cli
or
jnp
push
mulb
sbb
cld
int
daa
add
das
add
mov
pop
cmp
pop
lcall
cmp
cltd
sbb
out
rclb
test
lcall
push
push
adc
mov
int
and
jge,pt
out
mov
cmp
andb
push
mov
lahf
aam
mov
es
mov
jle
je
cs
into
add
in
stos
cmp
lcall
inc
and
jp
movsl
fimull
xchg
mov
mov
mov
xchg
mov
cmpsb
imul
fmulp
mov
jnp
dec
or
ret
cmp
sbb
inc
test
in
push
sub
xchg
out
imul
dec
cmp
push
push
loopne
inc
cmpsl
aas
adc
subb
out
sbb
fcompl
and
mov
push
sbb
mov
mov
out
jns
jnp
cmp
mov
push
inc
mov
add
insb
add
mov
into
or
pop
aam
cmpb
in
jmp
add
nop
mov
sub
cmp
jno
loope
jmp
loop
out
cmp
push
lret
gs
lretw
stos
mov
stos
faddl
lret
and
idiv
jle
cmpsl
adc
stos
jp
ljmp
xor
sbb
xchg
mov
add
sbb
mov
cld
add
nop
das
xchg
jmp
fwait
addr16
rorb
cmpl
or
add
aaa
mov
stos
in
jo
pusha
jg
lcall
bound
stos
mov
imul
cmp
andl
jne
movsl
sahf
movb
lock
ss
sub
jo
jg
mov
repz
movsb
ljmp
xchg
rcrl
test
in
pop
rolb
add
nop
std
and
xlat
lret
lds
add
pop
xchg
enter
stc
rcl
fisubl
in
leave
inc
clc
sub
sar
sarb
outsl
push
mov
inc
push
out
inc
inc
scas
les
mov
or
adc
jno
stos
pop
enter
loopne
lret
jmp
mov
in
pop
sti
mov
mov
dec
movsl
repnz
add
mov
mov
jno
pop
testb
loopne
push
mov
test
sbb
xor
clc
out
in
test
fiadds
cmpsl
movsb
popa
pusha
dec
add
jnp
add
lret
xchg
mov
fisubrl
stc
ror
test
pop
mov
mov
mov
lcall
mov
mov
sbb
jb
push
mov
ss
xchg
les
pop
xchg
adc
mov
cmp
outsl
mov
dec
movsl
push
xchg
cmp
std
ljmp
pushf
cmpsb
pop
mov
es
and
aaa
iret
pop
insl
test
aad
or
bound
cltd
movsb
jae
cli
std
mov
xchg
cmp
push
add
or
or
out
mov
xlat
inc
adc
aam
sti
pop
add
cltd
xchg
cmp
rclb
ja
ret
sti
aas
in
and
jl
dec
jae,pn
rcrb
or
pop
fcmovbe
aad
fcmovnb
das
shl
in
arpl
pop
xor
fwait
je
push
mov
jno
and
divl
add
cmp
imul
push
push
ret
and
popl
lret
bound
out
test
push
hlt
mov
jge
dec
mov
and
rcrb
xchg
dec
int
add
jb
jno
xchg
repz
add
pop
popa
dec
xchg
add
xchg
fdivl
xchg
or
cmpsl
ja
insl
cmp
dec
sbb
dec
mov
out
cwtl
mov
cmc
inc
pop
icebp
leave
iret
fcoml
hlt
mov
sbb
mov
rcl
rcrb
aam
xchg
jmp
sarb
xchg
cmp
cs
andb
push
cmpsl
lret
mov
insl
ja
ror
sbb
jmp
pop
outsl
mov
cltd
stos
xor
cmp
es
jne
mov
add
pop
xor
sub
sbb
cs
pop
loopne
scas
mov
dec
and
mov
jo
push
shlb
xor
xchg
sbb
add
mov
shl
add
in
das
dec
push
sbb
sub
mov
fdivl
push
push
enter
outsb
mov
in
pop
dec
pop
and
jns
cmp
dec
data16
dec
mov
adc
and
iret
out
inc
in
pop
add
imul
sbb
ds
fsubl
shrb
leave
icebp
adc
jecxz
inc
jne
lock
xchg
int
imul
les
js
xor
xor
lods
or
outsb
jl
inc
sti
repz
cli
ret
mov
aas
push
jg
out
jae
sbb
mov
mov
push
dec
nop
mov
fisttpl
add
in
add
scas
loop
mov
push
fdivrl
and
adcb
aam
pop
push
jle
jo
lret
xchg
enterw
repz
insl
cld
xor
insb
mov
ret
in
hlt
mov
adc
and
xor
add
adc
and
add
loop
repnz
xchg
shl
mov
aam
and
xor
add
adc
and
add
loop
repnz
xchg
shl
mov
aam
and
xor
add
adc
and
push
push
push
movsl
out
testb
hlt
mov
adc
and
xor
scas
inc
adc
adc
stos
insl
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
push
hlt
add
jl
add
mov
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
cmc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
in
add
fdiv
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
inc
cmc
add
dec
cmc
add
pusha
cmc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
fdiv
add
clc
cmc
add
and
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
je
add
jl
add
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
shl
add
fdiv
add
call
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
nop
testl
add
testl
push
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
clc
add
dec
clc
add
inc
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
js
add
cmp
add
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
sbb
add
cmp
add
pusha
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
mov
stc
add
int3
stc
add
aam
add
fdivr
add
in
add
idiv
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
adc
add
sbb
add
sub
add
cmp
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
