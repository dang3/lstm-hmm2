jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
xor
or
cwtl
mov
insl
cmpsb
out
add
add
push
or
pop
add
add
push
xor
je
jae
xor
testb
add
add
add
add
add
pop
add
add
push
xor
or
loope
in
insb
add
add
add
popa
add
add
add
xor
cmp
outsb
add
sub
pop
add
add
add
add
xor
sub
inc
add
add
add
inc
add
nop
add
add
outsb
add
add
mov
imul
add
inc
add
add
add
add
add
add
add
add
xor
mov
bound
das
add
add
add
add
add
xor
xor
sbb
mov
testb
add
add
add
bound
xor
out
pop
add
add
add
cmp
mov
add
add
add
roll
add
add
or
xor
mov
push
add
add
add
add
jbe
inc
add
add
add
add
add
add
add
loope
add
inc
add
add
add
add
add
add
add
add
fldl
add
add
add
dec
add
bound
fldl
xor
outsb
add
sbb
sbb
and
xor
sbb
popa
add
add
xor
jge
ljmp
add
add
add
add
add
add
add
add
add
addl
inc
add
or
stc
add
add
movsb
add
jbe
mov
sbb
and
sub
repz
adc
add
add
add
add
aaa
add
add
int
dec
add
add
fldl
add
loop
mov
jns
push
add
sub
inc
add
add
add
add
add
fwait
add
push
add
add
push
add
add
add
add
add
add
xor
adc
adc
mov
add
sbb
mov
add
add
add
xor
add
bound
fiaddl
arpl
push
add
add
add
add
rolb
and
inc
add
add
add
add
cmp
mov
add
add
adc
push
lcall
add
add
add
lldt
add
xor
leave
add
add
pop
add
add
movl
lds
xor
outsb
add
add
add
and
sub
xchg
add
cmp
mov
outsb
add
add
loope
jle
inc
add
add
outsb
add
add
add
add
loope
inc
add
add
nop
add
add
outsb
add
add
add
add
add
add
add
and
or
dec
add
add
add
add
add
or
sub
roll
add
push
add
inc
add
add
add
add
add
add
push
add
add
add
add
add
add
outsb
add
add
je
jns
jmp
jge
pop
add
add
cmp
add
add
xor
mov
sub
jnp
stos
add
add
pop
add
add
xor
add
add
add
and
xor
push
add
add
xor
out
adc
add
inc
add
jae
xor
xor
and
pop
add
add
add
add
add
nop
add
add
add
add
add
xor
xlat
add
add
xor
mov
adc
add
xor
inc
add
add
add
add
add
add
daa
add
add
add
add
jle
cmp
xchg
add
add
add
add
popl
sub
mov
mov
add
add
add
int
stc
aaa
lds
add
lahf
ljmp
aas
mov
inc
in
ja
push
adc
mov
call
mov
outsl
imull
jae
sbb
push
mov
sahf
mov
rclb
push
adc
mov
dec
ret
mov
das
push
dec
lret
cltd
imul
cmp
scas
mov
jb
mov
out
xchg
adc
pop
in
int3
mov
sub
adc
fldt
inc
out
iret
movsl
repnz
ficoms
arpl
out
repz
add
push
mov
enter
mov
sub
stc
inc
cmp
cmp
mov
movsl
pop
sub
test
adc
mov
aam
in
loope
sub
leave
fsts
incb
pop
cltd
ror
mov
rorl
push
hlt
xchg
orb
lcall
les
cmp
scas
pop
out
push
mov
xchg
mov
scas
sub
xchg
cmpsb
cmpl
mov
testb
add
enter
add
scas
cmp
and
push
stos
mov
sub
lret
sub
inc
push
push
repz
enter
out
ret
popa
mov
je
xor
mov
pop
mov
and
std
fsubrl
in
mov
adcb
sub
idiv
inc
adc
aad
popf
adc
fists
sub
out
shl
or
cmp
push
shrl
adc
insl
dec
fbstp
jecxz
mov
xchg
fidivrs
psllq
ljmp
jae
movsl
or
xor
stos
push
push
aam
xor
push
xorl
or
mov
mov
roll
xchg
out
sti
outsb
popa
fs
jl
cmp
lcall
dec
inc
jb
cmp
inc
jecxz
cltd
lcall
pop
mov
movsb
xchg
rcrb
mov
idivb
sbb
cmp
mov
mov
inc
dec
subb
jge
mov
or
aad
movl
pop
push
dec
nop
adc
push
aad
jae
xor
xchg
testl
push
out
stc
xor
sbb
bswap
jb
out
push
fisubrs
loope
std
gs
fmuls
test
mov
jmp
cmp
inc
jae
dec
and
sbb
cmpsl
sbb
out
add
rorl
dec
lea
cmpsl
dec
mov
add
and
mov
repnz
or
push
jbe
fsubs
jge
add
sub
out
mov
mov
ljmp
stc
cmp
jmp
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
jl
cltd
cltd
adc
or
cmp
sbb
dec
loope
shrl
jns
mov
cltd
adc
popa
leave
push
jmp
mov
cmp
cmp
jns
nop
mov
mov
jge
mov
cmp
push
loopne
roll
mov
push
jo
add
push
int3
jbe
cli
add
push
or
adc
push
sahf
sub
movsb
rclb
jbe
sub
sahf
sub
lds
xor
jns
je
jo
push
cltd
dec
andl
and
and
or
outsb
inc
jg
push
in
insb
loopne
imul
ljmp
inc
jl
jmp
jle
jl
jecxz
les
fsubl
push
ror
or
lods
adc
cmc
icebp
out
roll
dec
cmpl
and
out
push
movsb
xor
inc
cltd
jl
call
pop
jae
add
xchg
imul
add
insl
mov
push
jmp
xor
dec
xor
inc
shll
js
mov
push
int3
outsl
fcompl
lret
adc
inc
test
pushf
shlb
sbb
sub
pop
movsl
push
xchg
push
fcmove
sbb
add
mov
jl
dec
in
cmp
push
orb
int
cld
xor
popa
fsts
inc
stc
mov
mov
cmp
dec
loope
shrl
jns
mov
cltd
adc
popa
fsts
inc
stc
mov
mov
cmp
dec
loope
shrl
jns
mov
mov
inc
add
insb
pop
cmp
pusha
inc
repnz
cmp
stc
add
fidivrs
push
jb
cmpsb
mov
loopne
push
insb
xchg
stos
cmp
int3
fstpt
clc
sub
mov
out
jg
rcrb
je
stos
jmp
inc
dec
push
test
fisubrs
loop
mov
push
mov
hlt
and
ljmp
sub
jg
outsl
addr16
loope
cmp
jns
ja
push
loope
cwtl
and
js
pop
mov
sahf
andl
sbb
fcompl
js
daa
add
lcall
jl
xlat
mov
mov
dec
test
mov
inc
fadds
push
nop
rolb
jno
sub
fstpt
scas
rcll
call
outsb
xor
pop
shrl
addr16
xchg
and
mov
inc
lahf
nopl
xchg
out
orl
rcll
jns
popa
cld
filds
or
push
and
cmpsb
int3
jp
sbb
clc
lret
pop
sub
daa
xchg
pop
dec
adc
orl
xor
mov
test
xor
std
push
and
pop
xchg
xchg
lods
push
mov
xchg
mov
insl
jg
sbb
xchg
dec
dec
mov
jno
or
std
sahf
shr
test
shlb
aas
mov
dec
imul
jno
push
stc
sar
cmp
shll
aaa
fcmovbe
cmp
adc
jle
or
fs
pop
addb
in
and
mov
imul
shr
sub
jp
ja
ja
aam
sbb
addr16
xchg
aam
int
mov
data16
push
ret
sub
sub
cwtl
or
jle
xchg
popf
js
adc
fnstsw
mov
loope
je
rolb
mov
pop
test
xor
dec
dec
rcrb
dec
in
fcmovb
fdivl
out
lahf
mov
adc
daa
inc
dec
jecxz
pusha
aas
lret
xchg
inc
out
and
push
push
or
push
in
dec
cmp
adc
mov
icebp
cmp
dec
scas
or
imul
stc
leave
les
mov
cwtl
lds
popa
and
cmp
js
adc
popf
dec
jb
push
sub
jo
jbe
lock
mov
inc
fdivrl
adc
cmc
enter
gs
sbb
decl
test
insb
daa
stc
sahf
dec
lods
xchg
sbb
mov
cltd
loop
jle
dec
push
push
inc
mov
clc
cmp
pop
inc
loopne
pop
sbb
lcall
and
mov
mov
jp
dec
bound
subl
outsl
mov
repz
outsl
imul
mov
jb
xor
push
rclb
test
icebp
gs
aam
adc
in
push
xchg
fsubrs
and
mov
and
jge
cmp
stos
add
dec
jne
fs
or
insb
lods
in
insb
rcl
or
or
xor
repz
pop
adc
push
xorb
movsl
push
and
lahf
sbb
fnstcw
and
cld
lods
and
mov
aaa
xor
cmp
and
xchg
jno
sbb
clc
and
fcmovu
scas
and
xor
cwtl
pop
pop
ds
daa
sub
decb
push
and
and
fcoms
in
jbe
and
and
push
into
lods
mov
xor
mov
and
pop
ror
pop
je
xchg
dec
insl
lcall
incl
nop
sub
rcrb
bound
sbbb
insl
xchg
xchg
sbb
out
sbb
fdivl
mov
push
xchg
call
mov
adc
or
ds
mov
das
or
loope
int
mull
sbb
and
jae
mov
mov
mov
mov
movb
fildl
xchg
les
test
or
pop
cmp
sarb
idivb
ljmp
pusha
daa
ss
loope
cmp
xchg
mov
xchg
movsl
cmp
outsl
stos
push
cmp
stc
hlt
cwtl
fisttpl
mov
or
loop
adc
jbe
aam
pop
dec
je
push
inc
cli
mov
and
push
jo
fidivl
mov
jne
test
xchg
mov
jmp
xor
add
or
insb
call
iret
jmp
lods
jmp
test
mov
xchg
cli
pop
lea
hlt
xor
imul
aad
scas
cmp
ficomps
jl
fadds
lcall
sti
mov
out
in
mov
and
fidivl
shlb
jmp
push
sub
jp
xchg
push
push
jnp
addr16
cmp
dec
xchg
insb
cmp
nop
push
jo
lds
xor
jge
cld
je
rcll
mov
je
pop
daa
cmpsb
mov
arpl
and
cltd
arpl
inc
gs
cmp
call
out
decb
xchg
dec
mov
loop
pop
xor
mov
dec
sarl
enter
jl,pt
icebp
push
mov
sahf
ljmp
inc
jno
mov
gs
mov
shll
test
pop
js
or
cmc
sub
push
mov
inc
push
fnstsw
mov
ret
pop
pop
dec
mov
hlt
adc
cltd
dec
and
add
add
mov
int3
or
lds
daa
inc
les
ret
cmp
mov
addb
mov
cwtl
js
adc
inc
mov
std
fwait
push
jbe
scas
imul
lds
xchg
loop
shrb
or
jno
mov
sbb
out
in
mov
jbe
nop
mov
mov
pop
rorl
mov
mov
mov
notb
pop
sub
cltd
inc
ss
jmp
nop
and
icebp
scas
xlat
pop
daa
lret
lret
movsl
sbb
adc
aaa
into
jae
adc
es
pop
idivl
inc
mov
add
and
add
mov
pop
lret
std
iret
out
pop
loop
into
stos
mov
ljmp
mov
dec
sbb
sahf
outsl
shrl
add
mulb
lret
out
mov
dec
xor
outsl
jo
sub
les
xchg
repz
add
xchg
icebp
aad
push
adc
imul
popf
das
push
fs
pop
mov
aaa
mov
push
frstor
fistl
sub
ja
aas
movsb
mov
xor
ljmp
sbb
int
mov
shl
pop
jg
mov
inc
sbb
push
cmp
push
jmp
sbb
push
mov
mov
sbb
fidivl
mov
pop
and
roll
fisubrl
sub
icebp
mov
push
mov
lods
xchg
mov
lock
xchg
call
mov
sbb
push
cmpsl
call
iret
lock
in
adcl
and
lods
or
jne
clc
sarb
lret
sub
sbb
cmp
pushf
push
add
fsubs
ss
stc
sub
cltd
add
ficomps
fwait
outsb
into
jae
mov
repz
loopne
repz
sub
and
xchg
clc
mov
pop
scas
int
and
insl
push
ss
push
fcmovbe
std
pop
test
push
dec
mov
pop
pop
inc
mov
jae
or
push
sub
xor
fistps
mov
testb
dec
dec
jle
orb
imul
testl
movsl
lock
sbb
insb
gs
push
inc
inc
clc
xor
scas
xchg
push
mov
jl
jmp
sbb
lds
sbb
in
sub
pop
mov
jbe
pop
xor
sub
fcomps
les
out
gs
mov
fcmovnbe
fprem
shrb
inc
sahf
jno
into
pop
rorl
decb
mov
pop
jmp
daa
or
jno
loop
xchg
ss
cli
pop
loop
in
icebp
fadds
mov
adc
add
jle
cld
adc
adc
jbe
push
mov
xor
fucomip
rorb
adc
push
pop
mov
cmp
mov
in
mov
dec
movsl
push
xlat
fmul
xor
mov
loopne
or
mov
sbb
insl
xchg
jno
adcl
adc
pop
xchg
pop
incl
inc
in
aad
cmp
xor
ret
adc
xchg
stos
int3
mov
sub
xlat
fidivs
mov
mov
clc
push
sbb
movsb
cltd
and
add
dec
ret
rcll
pop
enter
mov
cmp
or
pop
test
add
or
pushf
inc
lahf
pushf
dec
jmp
sbb
push
inc
out
addb
sbb
hlt
mov
daa
add
jnp
fildl
stos
cmpsb
addb
xor
addr16
sahf
pop
leave
stos
pop
data16
movl
dec
xlat
mov
stc
lea
push
cmpsl
mov
outsb
js
shrb
sbb
imul
arpl
stos
aaa
loope
aad
pop
lea
jmp
sbb
je
xchg
ljmp
cmpsl
pop
cmc
jae
sub
dec
clc
in
scas
pop
jbe
aas
repnz
mov
cld
sub
jg
push
cmp
ret
div
and
lahf
or
dec
xchg
xor
sub
push
sbb
push
rcr
jno
out
push
inc
cmp
movsl
lods
cltd
push
subl
dec
xor
cmp
jae
add
or
push
xchg
sub
mov
add
and
adc
mov
inc
adc
scas
out
add
sbb
sahf
cmp
es
and
sub
jl
mov
mov
push
mov
mov
repz
pop
fisubs
call
call
iret
out
sti
jp
lods
pop
sub
and
jle
xchg
mov
pop
mov
iret
mov
enter
sub
sub
sbb
aaa
xchg
mov
mov
xchg
aam
and
addr16
sub
dec
fcmovu
das
iret
sub
imul
mulb
fadds
sub
enter
dec
daa
sarl
push
jge
stos
fildl
les
stos
fs
mov
dec
orl
jns
jmp
lahf
mov
and
sub
xor
or
int3
inc
ficoml
or
mov
mov
out
and
push
imul
test
adc
jmp
jo
sub
sub
repz
orb
cmp
xor
inc
xchg
xchg
sti
arpl
xor
mov
cmp
repz
jmp
int3
xchg
cmp
and
int3
cmpsl
jno
mov
add
or
pop
jno
jno
insl
lods
enter
adcl
push
mov
mov
cmpsl
in
sub
mov
punpcklbw
cmp
outsb
stc
nop
push
xor
add
insl
pushf
sub
or
add
int3
outsb
outsb
cmp
jo
adc
ljmp
jl
gs
hlt
push
sub
inc
fdivrs
and
addr16
pop
sarb
jmp
and
inc
mov
add
jge
je
cmp
dec
lcall
testb
cmp
iret
add
dec
push
jg
sbbb
es
mov
lea
xor
fstps
scas
out
adc
test
loopne
ficoms
das
xchg
push
mov
into
sahf
cltd
xchg
rcl
dec
jae
sahf
leave
and
jnp
ljmp
jle
xchg
sbb
jecxz
pop
call
add
psraw
and
cmc
xor
inc
lret
imul
pop
mov
mov
insl
inc
cwtl
hlt
jl
in
stos
sarl
das
dec
call
pop
data16
mov
lds
lods
lret
enter
xchg
cmpb
and
sbb
mov
dec
or
cmp
sbb
mov
arpl
push
or
dec
and
stos
adc
mov
xchg
in
arpl
iret
xor
sahf
add
int
cmpsb
pop
jmp
jbe
les
add
int
dec
mov
je
cs
mov
and
loope
loope
cli
jnp
or
xor
aad
loopne
insl
cmp
cmp
stc
dec
sahf
loope
test
push
push
mov
mov
repnz
push
pushl
xlat
and
cmp
mulb
push
fdivs
inc
add
jnp
imul
and
add
sub
and
out
xor
iret
movsb
jg
fdivl
daa
push
inc
lcall
xor
lock
adc
mov
push
sub
sub
loopne
jne
adc
jnp
pop
sbb
mov
add
sarb
loope
scas
aam
scas
dec
cmpsl
inc
push
dec
mov
mulb
movsl
pop
fadds
pushf
mov
lret
loop
jns
push
mov
jnp
fdivrs
test
shlb
sub
jp
or
sub
test
and
dec
fwait
inc
ficompl
cwtl
scas
scas
adc
fcoml
jbe
or
push
mov
fstl
sbb
push
mov
stc
in
pop
into
arpl
jecxz
jge
stos
mov
push
or
jg
or
sbb
inc
pop
jmp
dec
fiaddl
mov
sub
mull
lcall
add
xchg
jb
push
mov
sbb
cmc
dec
je
sbb
in
in
sbb
cmp
es
pop
jecxz
inc
mov
fs
jo
les
mov
add
inc
pop
movsl
into
jp
cmc
leave
jge
loop
cs
les
shll
insl
outsb
dec
xor
and
mov
aas
xor
testb
repz
in
test
lret
xchg
sub
addb
xchg
cmpsl
jnp
out
cmp
sahf
inc
mov
and
push
cltd
cltd
movb
and
add
and
push
xor
inc
mov
inc
rclb
jmp
dec
pop
and
mov
jge
sbb
inc
fiaddl
push
scas
out
pushf
movsb
sub
shrb
mov
mov
cmpb
bnd
sbb
and
das
or
jmp
test
mov
movsb
mov
scas
shl
push
xchg
jg
jge
aam
aas
dec
sarl
cmpsl
and
ja
out
andb
xor
les
ret
push
test
das
xchg
test
dec
or
aaa
lahf
leave
lcall
bound
add
push
lcall
inc
outsl
dec
inc
inc
icebp
pop
stos
adc
xchg
es
xchg
cmc
adc
cld
pop
lds
dec
jecxz
std
lods
pop
lret
jae
fsts
stc
sti
xchg
ds
push
mov
xor
sarl
add
mov
js
cmp
sbb
sbb
push
mov
test
pop
iret
ds
cmp
mov
sahf
pop
inc
and
cmpsl
inc
mov
insb
arpl
xor
xchg
stc
xchg
adc
or
mov
push
mov
fdivrs
aaa
mov
jl
out
adc
ja
rolb
out
insl
sub
pop
push
imul
jp
jns
gs
hlt
jmp
inc
mov
cmc
inc
dec
fwait
cwtl
lock
xor
scas
mov
cmp
loopne
and
pusha
sbb
lods
scas
inc
or
fnstenv
push
mov
loop
sbb
xchg
inc
out
loope
pushf
xchg
add
int
pop
int
pushf
cwtl
jbe
test
icebp
jno
sbb
mov
xchg
shlb
jnp
xchg
out
fcomi
iret
mov
dec
cli
xlat
test
push
xor
mov
lds
ds
push
push
mov
sub
mov
insl
inc
in
mov
mov
adcb
outsb
lret
int3
popa
popf
imul
cwtl
aad
js
adc
adc
aad
add
mov
pop
loope
gs
inc
data16
ds
into
je
push
hlt
bound
jp
mov
xchg
out
icebp
mov
adc
js
out
or
push
insb
inc
hlt
jb
inc
mov
bound
sub
mov
pop
jle
cs
pop
popf
idiv
hlt
push
lcall
mov
test
xor
js
dec
push
sbb
xchg
cmpsb
jmp
sbb
out
jge
adc
inc
out
inc
arpl
pop
cli
enter
sahf
or
repz
adc
xchg
aas
lds
push
cli
ljmp
sub
xchg
adc
in
xorb
cmp
movsb
cmpsb
shrl
fsubrl
inc
sub
loop
stc
or
sarl
push
pop
sub
mov
inc
inc
cmp
push
inc
idivl
adc
jg
negl
sbbb
dec
fldt
sarb
adc
xlat
paddw
and
rorl
inc
dec
fisubl
mov
cli
inc
lods
push
pushf
mov
ja
xchg
fsubrs
cmp
pop
mov
xchg
dec
adc
sub
and
mov
mov
pop
mov
std
jp
out
adc
or
in
jl
jo
xchg
gs
and
pop
sbb
xor
pop
data16
mov
cmp
jbe
stos
dec
movd
sbb
adcb
push
aad
int3
and
nopl
out
mov
insb
mov
movsb
mov
sarl
pusha
aaa
push
imul
inc
add
imul
imul
mov
sarl
outsb
movsl
dec
add
inc
mov
call
pop
xor
pop
loope
mov
outsb
fisubrl
xor
or
mov
xchg
or
inc
in
sbb
call
and
out
jl
add
mov
jb
adc
pop
mov
test
xchg
les
icebp
sub
lea
mov
hlt
stos
cltd
ror
sub
dec
cli
lods
imulb
pop
imul
mov
out
push
les
sub
int3
roll
cmc
popf
dec
scas
mov
cmpsl
fnsave
pop
fstp
jno
xor
and
je
out
mov
mov
dec
xchg
fxtract
add
in
pop
jo
sbb
jo
jae
pop
dec
or
xchg
test
movsb
nop
in
int
inc
rcrb
jno
sbb
in
inc
add
aaa
testb
arpl
cmc
pop
push
push
ret
repz
stos
repz
hlt
std
push
add
cwtl
sbb
push
ror
xor
jle
loope
mov
jge
dec
loop
jecxz
pop
and
mov
pop
inc
shrb
fnstcw
pop
mov
cmpsl
addl
movsb
push
or
iret
inc
repz
jb
xchg
mov
nop
in
xchg
sbb
out
sahf
pop
sub
rorb
inc
icebp
push
out
mov
push
mov
lods
push
fimuls
lds
loopne
and
jle
mov
shrl
leave
cs
cmpsb
mov
cmpsl
add
in
fwait
icebp
fnstsw
pop
xor
lret
movsl
pop
mov
into
mov
inc
dec
sub
popa
in
pop
sub
jae
push
dec
daa
dec
add
jmp
sub
pop
xor
jmp
push
lret
dec
std
jno
lret
sbb
inc
fsub
inc
xlat
rcrl
leave
insb
inc
hlt
loopne
sbb
jno
sarl
lcall
jle
aam
jb
sahf
js
cmp
adc
repnz
fsubrp
in
pop
jnp
mov
pop
xchg
dec
lahf
and
fsubrp
push
push
inc
push
inc
in
in
or
gs
push
add
jecxz
xor
sti
jns
mov
in
andl
dec
or
jl
andl
dec
sti
inc
mov
bound
cmc
push
aam
and
lock
jbe
ficompl
das
jb
cmp
aad
jno
lods
xadd
loopne
pop
push
add
cwtl
outsb
lahf
pop
push
adc
jecxz
fdivrl
sti
fsubl
cmc
or
pop
mov
stc
sbb
jecxz
stos
shll
and
fsub
xor
out
inc
xchg
insl
test
lods
push
hlt
imul
daa
push
pop
dec
fidivl
int
mov
iret
int
shrl
inc
jne
jmp
insl
testb
test
rcr
jne
and
movsb
test
pop
out
pop
push
in
mov
push
pop
fxch
stos
notl
pusha
in
jl
jnp
hlt
sub
mov
mov
push
outsl
pop
lahf
aad
xor
inc
xlat
cwtl
sub
ror
sub
mov
xor
ficoms
cmpsb
pop
js
imul
mov
icebp
enter
sahf
pop
or
inc
int3
jmp
cmp
outsb
pop
gs
das
dec
lds
fidivs
sub
xor
xchg
nop
push
cmp
mov
push
mov
loopne
daa
fbstp
shl
xor
mov
rolb
sbb
cltd
push
sbb
fsts
inc
stc
mov
mov
cmp
dec
loope
shrl
jns
mov
cltd
adc
popa
fsts
inc
stc
mov
mov
cmp
dec
loope
shrl
jns
mov
cltd
add
fsts
inc
stc
mov
mov
cmp
aad
icebp
jge
lea
mov
push
jmp
pop
mov
sub
es
ds
mov
inc
rcll
push
push
mov
test
testb
and
adc
repz
rcll
es
addl
outsb
imul
xchg
and
xor
cli
ljmpw
push
mov
push
test
arpl
js
das
mov
mov
bnd
jo
jp
xchg
adc
mov
xor
add
mov
cmpsb
or
jle
ret
sbb
shll
mov
push
pop
sbb
xchg
mov
mov
cmpsb
fs
xchg
jnp
sub
push
in
cs
xchg
cmc
mov
mov
jnp
lahf
lods
xchg
mov
mov
add
xor
jecxz
and
add
insb
xchg
call
inc
inc
cmpsb
cmpsb
pusha
dec
inc
mov
xchg
add
or
lcall
mov
imul
mov
mov
xor
add
repz
mov
push
push
daa
cmp
arpl
mov
movsl
mov
cmpsb
and
jecxz
adc
ret
inc
les
es
push
jp
imul
dec
cmp
or
nop
bound
push
movl
inc
pop
lahf
jae
xor
push
shll
jbe
jecxz
repz
dec
fnstsw
outsl
jb
lods
jae
push
xchg
es
enter
rclb
stc
mov
sarl
xor
xor
or
push
arpl
jae
inc
push
and
adc
ret
inc
rcll
es
addl
push
arpl
jae
inc
push
and
adc
lcall
inc
inc
cmp
sub
js
adc
andb
fldt
mov
push
lods
loop
ss
jg
jne
loopne
push
mov
outsb
in
pop
cmp
mov
ret
jbe
cli
mull
push
mov
push
popa
mov
shl
cmpsl
rcll
inc
bound
jmp
stc
jb
dec
je
out
jo
xchg
fcmovnbe
mov
pop
jp
mov
js
sbbl
xor
lret
arpl
daa
jno
mov
jae
jg
fdivr
xlat
sahf
in
lcall
dec
iret
or
mov
mov
or
imul
mov
lcall
mov
fdivrl
mov
and
adcl
lods
cli
loop
adc
pop
aam
jae
js
and
adc
mov
punpckhbw
and
sub
mov
xor
jmp
aam
test
jmp
mov
rorb
lods
mov
std
cli
out
mov
push
mov
sbb
adc
pop
xor
push
loope
es
lahf
cmp
push
es
sub
or
mov
aaa
sbb
adc
mov
pusha
aas
andl
fistpll
jnp
push
daa
les
aad
adc
insb
jne
cmp
aam
inc
fdivrs
xchg
inc
cmpsl
mov
pop
add
cmc
jns
pop
xchg
testl
or
pop
fsubrl
mov
scas
add
sub
into
xor
popf
popf
rclb
sub
mov
jl
push
das
inc
or
aam
in
pop
cmp
ret
mov
and
stc
inc
js
xor
out
or
mov
out
mov
push
mov
scas
insb
cmp
add
mov
fcoml
cld
mov
pop
fs
push
jecxz
mov
sbb
ficoml
and
fcomp
push
imul
inc
cmovo
pop
mov
pushf
mov
ljmp
push
dec
xchg
jecxz
jno
push
jle
sub
jno
adc
scas
loop
rcll
push
xchg
mov
in
es
mov
xchg
sub
xchg
cmp
push
mov
les
mov
fcompl
mov
pop
fsub
lds
xchg
out
pop
mov
sti
insl
imul
xlat
js
in
imul
int3
out
cld
in
inc
outsb
cmp
cmp
inc
fwait
lret
pop
sbb
hlt
push
addr16
or
pop
call
fs
cmp
imul
mov
loope
pop
pop
cs
cmpsl
mov
enter
push
js
sbbb
mov
or
dec
aam
add
out
sub
fwait
imul
insb
les
dec
in
out
ja
testb
jge
bound
mov
add
ljmp
jmp
lea
cltd
in
xchg
mov
jno
jg
adc
insb
dec
lahf
fistps
inc
cmpsb
test
adc
icebp
push
stos
imul
sti
and
fptan
inc
out
add
fldt
mov
dec
js
or
ljmp
sub
scas
imul
rcll
inc
mov
and
or
sbb
js
or
ds
jmp
push
ss
in
cmpsb
cmp
movsb
stos
int
sub
leave
or
int
jb
jbe
shl
ffreep
je
xlat
mov
lret
mov
cmp
ficompl
int3
out
outsl
pop
pop
jmp
fcmovne
imul
and
shll
sbb
sub
imul
mov
pusha
fistl
add
aaa
int
or
dec
jae
aas
cmp
subl
fimull
mov
or
add
arpl
aaa
js
adc
adcb
subb
mov
movsl
cmpsl
adc
cmp
outsl
inc
aaa
push
dec
out
jnp
shrb
shlb
or
int
cmp
pop
cmp
out
xlat
sbb
into
inc
push
mov
push
mov
push
stos
fcmovnb
mov
dec
sbb
in
fcmovnbe
jnp
add
sbb
xor
pop
out
inc
sbb
add
std
testb
stos
lcall
pusha
and
std
lods
in
insl
ret
cld
adc
dec
cmp
push
xor
mov
aas
pop
mov
pop
inc
enter
cmp
inc
outsl
xchg
dec
sbb
fs
push
outsl
int3
sub
add
iret
and
pop
mov
imul
leave
cmp
mov
adc
gs
rclb
movsb
incl
nop
jo
fs
sbb
imul
pop
fcompl
fxch
add
fs
mov
aas
test
cltd
xchg
decb
rcll
fadd
repz
sbb
pop
xchg
adc
xorb
lcall
sub
xchg
jle
test
sub
mov
repnz
das
xor
mov
pop
int
mov
test
out
dec
mov
pop
fsubl
lret
xor
cld
jnp
lea
inc
ss
dec
out
push
jno
bound
add
and
mov
daa
mov
iret
jns
push
ret
in
adc
cwtl
test
leave
cmp
movsb
mov
popf
inc
push
cmp
mov
dec
popa
mov
je
rcrl
mov
lds
xor
cli
xchg
push
or
sbb
adc
cmp
xchg
push
jmp
rcrl
outsb
inc
push
fidivrl
test
xchg
or
and
outsl
and
repnz
clc
add
pop
pop
orb
mov
ror
sub
xor
lahf
xchg
imul
fidivs
movsl
je
mov
xchg
arpl
stos
xor
into
mov
aam
test
jmp
pop
mov
into
popa
loopne
sub
lret
pop
and
mov
rcrb
sahf
lods
push
shlb
test
imul
insl
orl
lds
dec
or
inc
jo
add
movsl
mov
xor
xchg
add
insl
insb
push
pop
sbb
jecxz
mov
dec
test
stos
jmp
popf
sub
sub
rcr
mov
xorl
mov
stos
mov
and
test
mulb
mov
adcb
pop
out
in
sub
cmp
xchg
mov
imul
cmp
into
adc
or
dec
cli
mov
sub
and
jnp
pop
stc
jb
aas
andl
sub
in
loop
sbb
into
push
xchg
lods
orb
sti
int3
push
hlt
pusha
jae
xchg
popa
popf
mov
enter
push
add
in
xchg
cmp
fsub
nop
cmc
adc
icebp
in
sbb
prefetch
sub
xchg
dec
clc
sbb
aam
gs
push
mov
mov
jg
adc
sti
push
sub
inc
iret
push
xchg
cli
jne
mov
leave
ret
adc
mov
mov
sbb
daa
mov
and
dec
scas
jge
sub
aas
ret
add
test
inc
xor
fwait
adc
test
add
mul
fs
xor
pop
dec
enter
test
sbb
jae
and
sbb
stc
and
inc
mov
or
cmp
push
loope
and
dec
ja
mov
inc
outsl
or
outsb
inc
pusha
nop
cltd
add
adc
push
dec
xchg
add
bound
leave
jb
cmp
push
xor
lods
mov
orb
push
jb
nop
pop
dec
xlat
mov
into
mov
jle
push
sbb
sub
cld
fistps
xlat
hlt
scas
mulb
incb
mov
add
cwtl
arpl
mov
out
stos
sbb
xlat
fldcw
int3
ljmp
mov
sub
cld
push
push
shrb
inc
push
lea
adc
inc
xor
jecxz
fbstp
push
incl
scas
and
pop
push
loope
lods
xchg
push
loopne
mov
shl
pop
movsl
mov
adc
sbb
aas
xchg
jg
xchg
pop
mov
clc
daa
pop
adc
push
negb
sbb
push
movsl
xor
mov
add
and
xor
push
lcall
outsl
sbb
or
repnz
js
xorl
cmp
fnstcw
ret
daa
or
jg
filds
lods
mov
outsl
pop
stc
pop
mov
cmpl
movsl
movsb
sbb
jne
push
sub
ljmp
imul
xchg
incl
sbb
push
push
call
leave
fldl
lret
mov
and
insb
ds
sub
cmc
adc
stos
lcall
stos
mov
stc
pop
lret
jg
sti
fmull
xchg
jl
push
inc
jbe
mov
mov
mov
dec
in
imulb
imul
jp
repz
and
filds
loopne
adcb
out
mov
lret
xchg
es
aad
and
addb
lahf
mov
fisttpll
mov
sahf
lret
cli
mov
cmp
addr16
lcall
or
xchg
sti
das
mov
hlt
insb
leave
lahf
ss
daa
clc
push
arpl
mov
ror
outsl
ss
pop
stos
out
ret
repz
pusha
cmp
mov
pusha
dec
cs
das
and
ret
cmp
xchg
fwait
dec
jno
xorl
and
mov
dec
flds
lahf
popf
mov
imul
ret
sub
xor
in
stc
dec
in
in
jecxz
pop
stc
dec
sti
inc
sbb
lds
jo
ja
push
frstor
and
stos
xor
push
xchg
jp
add
adc
sub
xchg
pop
push
scas
sub
lock
jg
xor
addr16
repz
adc
sbb
ljmp
outsb
in
orl
ret
leave
xchg
je
std
mov
jle
scas
xchg
mov
outsl
adc
dec
flds
pop
fisubrl
lret
enter
or
jnp
jo
xchg
leave
jne
mov
popf
jl
dec
xor
add
xchg
addr16
sbb
aad
mov
xchg
mov
add
xchg
jns
fldt
orl
dec
lods
lock
xchg
loopne
adc
jecxz
test
cwtl
cltd
mov
mov
xor
dec
clc
mov
xor
pop
push
xor
or
out
fwait
jl
sub
sbb
sub
and
and
ds
cwtl
xchg
sti
xchg
push
mov
xor
into
imul
sahf
test
outsb
dec
mov
stc
mov
aaa
and
adc
dec
insb
shrb
cmc
mov
xor
ljmp
aad
jmp
loop
cmp
adc
shll
xchg
addb
mov
data16
shll
aas
fldl
xchg
sub
mov
call
mov
mov
push
fwait
mov
into
pop
jl
ja
je
roll
in
fiaddl
arpl
sub
pop
test
and
outsb
cs
dec
cmc
adc
adc
add
cli
rorb
fucomip
mov
mov
out
fstpt
roll
mov
loop
mov
in
jb
lcall
xchg
mov
jl
mov
ret
fwait
jmp
push
xor
das
gs
mov
mov
and
lds
xor
jl
outsl
rcll
stos
sub
mov
leave
adc
push
sti
fbld
call
shll
xchg
pop
lock
cmp
pushf
xchg
js
aad
cmp
imul
push
push
mov
out
jg
gs
ret
in
out
jne
push
ret
fimuls
ret
int3
fcoms
es
cmpsb
add
mov
and
push
popa
in
orl
xlat
mov
movsb
push
jle
mov
fidivl
lock
ficompl
push
movsb
fs
rcll
sub
pop
mov
sub
lock
xchg
mov
pop
add
cmp
cmp
adc
imul
fldt
das
add
mov
je
pop
pop
cs
cmp
in
rolb
mov
mov
enter
std
insb
jb
jnp
inc
loop
or
es
hlt
xchg
dec
sub
les
xor
jo
sub
enter
or
sbb
push
out
hlt
jae
inc
jp
ss
pusha
cmp
repnz
lds
filds
cmp
sub
xchg
or
out
test
outsl
out
sbb
add
mov
mov
lret
and
push
inc
push
mov
in
jg
xchg
sbb
arpl
lret
clc
push
jge
sub
sub
hlt
pop
lahf
bswap
out
roll
inc
cmp
sub
icebp
mov
aas
lds
test
mov
push
outsl
pop
stc
sub
jmp
push
fcomps
jl
dec
mov
add
push
sti
outsb
rcl
cmp
or
stos
loop
push
or
sub
iret
add
xchg
sub
je
sub
pop
icebp
lds
out
cli
bound
cmp
movsl
in
push
xor
outsl
shrl
iret
sbb
out
lds
int
cmp
sub
pop
push
fwait
push
jge
js
xor
mov
icebp
mov
push
into
shlb
fists
pop
scas
psubb
push
jnp
jae
je
ror
cmp
movsb
leave
ljmp
sahf
gs
cmp
daa
fs
lea
and
cmp
jmp
data16
sub
xchg
push
mov
dec
test
rcr
xchg
xor
loop
movl
sub
add
outsb
out
mov
push
gs
sub
cld
push
dec
mov
nop
jae
sbb
jae
icebp
hlt
sbb
les
add
sbb
test
fs
movb
mov
into
vmulss
push
fxch
and
int3
mov
mov
inc
adc
xchg
scas
mov
push
jo
push
mov
and
cmc
push
push
lds
inc
sbb
dec
add
push
jp
xadd
or
repnz
sub
ss
insb
mov
or
fdivs
enter
gs
inc
sbb
adc
rclb
mov
testl
test
add
mov
adcb
movsl
push
mov
xor
aam
pop
mov
inc
pusha
in
fwait
aaa
add
sahf
jae
lret
mov
push
je
mov
and
jl
pop
xorb
std
jle
pushf
and
xchg
mov
mov
in
cmp
add
test
add
mov
push
pop
fcomp
jp
sub
not
dec
mov
aas
fcmove
pop
daa
data16
idivl
shr
stos
hlt
lret
push
leave
stos
mov
jno
pop
scas
hlt
push
cmpsl
repz
push
es
test
popa
imul
loopne
push
pusha
lods
mov
dec
sub
mov
ret
loopne
xchg
addb
lret
dec
pop
fstpl
jecxz
xchg
push
js
mov
sbbb
xor
addl
mov
repnz
and
mov
fwait
in
pop
push
enter
pop
add
pop
pop
sub
fildl
and
sub
jp
inc
sbb
adc
sub
loopne
sbb
or
testb
bnd
and
sbb
xchg
fldcw
imul
imulb
leave
imul
mov
js
jl
xchg
adc
xchg
add
in
jns
cmp
test
lods
pop
cmp
mov
inc
sti
pop
loopnew
adc
mov
mov
sbb
call
ficompl
adc
inc
cli
pop
sub
push
rorb
sahf
jns
cmpsl
mov
pop
stc
mov
pop
mov
sub
jecxz
pop
sahf
mov
outsl
xor
sbb
pop
jle
xchg
adc
mov
mov
outsb
popf
pop
test
cwtl
fstps
or
and
sub
push
push
dec
jo
and
sub
sbb
add
mov
testl
imul
xor
lahf
popa
push
adc
mull
fnsave
in
in
push
cmp
cmp
lcall
enter
and
pop
rcll
stc
push
jp
sub
aas
mov
mov
pushf
in
jb
aad
cmc
setge
lcall
movsl
orl
mov
test
pop
movsb
and
cwtl
or
sbb
loop
xor
adc
jnp
push
mov
cwtl
test
or
xor
jbe,pn
sub
out
xor
push
mov
pushf
push
imul
jmp
dec
roll
adc
sti
jne
pop
icebp
jnp
daa
nop
cld
aam
cmp
mov
rolb
mov
push
repz
sbb
or
cmpsl
adc
test
pop
imul
inc
ss
sahf
cmpsl
xchg
dec
aas
or
sahf
xchg
pop
mov
je
ds
in
jae
lret
cwtl
popf
aam
rclb
pushf
xchg
or
dec
push
adcb
or
xchg
stos
lret
jge
out
pop
xchg
icebp
push
adc
int3
adc
mov
mov
mov
rcrb
fdivl
out
lret
inc
xchg
out
mov
lahf
mull
pop
push
movsb
and
push
mov
or
cmpsl
mov
out
hlt
sti
imul
aaa
stos
test
sub
inc
mov
pop
test
ja
fidivrl
sub
and
loopne
inc
dec
out
in
inc
and
add
push
adc
mov
das
iret
inc
andl
cmpsl
xchg
dec
inc
imul
out
sti
and
ljmp
sbbb
pop
js
insb
repz
je
test
stos
dec
mov
cmpb
testb
mov
loop
xchg
cmp
push
jnp
out
inc
ficoms
ja
push
mov
insl
adc
aaa
in
out
mov
pop
and
pop
mov
popf
dec
xchg
nop
dec
inc
insl
lahf
imul
mulb
inc
shrl
adc
sub
dec
inc
insb
cmpsl
cltd
les
lcall
mov
pusha
or
adc
mov
add
aas
xchg
in
mov
sbb
nop
mov
dec
mov
push
movsl
adc
xchg
xor
rep
insb
push
and
add
fisttps
in
cs
xabort
jl
js
or
or
fisubs
aas
and
das
fstpl
out
inc
pop
push
aam
cmpsb
dec
aas
add
mov
je
or
mov
aad
loopne
lock
sahf
push
fcoms
lret
cmp
rcl
cwtl
mov
pop
or
and
pusha
aad
fstps
mov
fwait
mov
incl
aas
inc
add
sbb
mov
call
push
add
xor
cmpsl
jmp
sub
add
aas
adc
loop
mov
cld
in
adc
sbb
cmpsb
pop
loop
dec
cmp
push
mov
mov
stc
hlt
mov
xorb
push
aas
mov
pop
xchg
inc
sub
cmp
lahf
inc
mov
pop
jae
xor
inc
fidivl
aaa
sub
push
or
jle
fdivs
pop
in
jg
sbb
xchg
int3
outsl
fdivrp
popa
push
or
mov
mov
or
mov
lods
clc
xor
xor
daa
pop
lock
add
xor
and
divl
cmp
ljmp
das
jle
sbb
add
mov
push
aad
mov
rclb
cmp
mov
add
lds
push
outsb
rcrb
add
or
scas
repz
inc
imul
cmp
lret
push
movsb
dec
test
mov
ficoml
sub
mov
push
pop
or
lahf
jmp
jge
fcompl
dec
mov
cltd
loopne
jp
adc
mov
dec
xor
mov
testb
or
lds
mov
jecxz
lcall
sbb
push
or
imul
add
jb
mov
bnd
add
pop
inc
leave
lods
mov
sar
cmp
adc
scas
and
inc
cmp
or
mov
fwait
ds
frstor
jle
mov
jb
je
test
shlb
dec
cltd
ret
mov
adc
mov
popa
arpl
push
insb
jl
rolb
dec
rclb
jp
mov
cld
gs
inc
sahf
shl
loopne
insb
rcrb
jns
push
push
mov
insb
sub
outsb
xchg
into
fiaddl
lods
inc
ja
jbe
inc
rcll
es
addl
push
arpl
jae
inc
push
and
adc
ret
inc
rcll
es
addl
push
arpl
jae
inc
push
and
adc
ret
inc
rcll
es
addl
push
arpl
jae
inc
push
and
and
cmc
inc
rcll
es
add
adc
pushf
out
pop
jmp
cs
imul
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
dec
push
pop
mov
add
outsb
fwait
dec
mov
into
sub
cmp
or
sbb
dec
mov
mov
push
ljmp
into
sub
sbb
add
mov
mov
push
push
cs
ret
ficomps
push
shrb
cmp
rcrb
stos
pop
aam
decl
dec
fstpl
jno
lds
or
add
es
xchg
mov
and
incb
shl
es
lcall
push
bound
jno
mov
mov
aad
cmpsb
nop
divb
insb
rclb
cmpsl
mov
adc
pop
jp
mov
or
stos
sbb
push
xchg
shlb
push
and
arpl
fsub
jo
testb
mov
inc
pop
mov
adc
fcmovu
jns
sub
int
sbb
cmp
mov
popw
sub
fistpll
mov
push
push
cmc
mov
test
stos
pop
dec
outsb
push
jle
push
ljmp
into
lods
fdivrp
out
sbb
push
mov
subb
aaa
mov
bound
jg
insb
fidivrl
jle
jae
add
ljmp
jmp
mov
movsb
ds
dec
fsubrl
mov
fsubrl
mov
std
pop
fidivrl
push
mov
cli
cs
into
sub
cmp
or
sbb
dec
mov
mov
push
ljmp
into
sub
cmp
or
sbb
dec
mov
insl
aad
pop
mov
jae
jmp
sub
xlat
lahf
inc
pop
cltd
or
pop
sub
or
pop
sbb
xchg
jo
xchg
or
mov
out
adc
ljmp
sub
push
addl
std
push
out
ret
adc
pop
jmp
fmul
popf
push
cmp
ljmp
sahf
push
pop
dec
mov
jo
sub
xchg
dec
inc
loopne
cs
mov
cltd
pop
add
shlb
popa
cmpsl
aam
incb
dec
xchg
dec
add
int3
lds
xchg
mov
in
push
sar
and
shl
or
repnz
dec
xchg
ja
push
shll
inc
xlat
rcrl
push
mov
loopne
adc
orb
dec
or
repz
xchg
rcrl
pop
mov
sub
sarb
dec
jp
jg
jecxz
xchg
sti
mov
cmpsb
add
fmul
jle
sub
sub
add
xor
pop
imul
adcl
outsl
sbb
arpl
test
rorl
call
shlb
cwtl
mov
cmp
mov
mov
push
mov
push
pusha
out
stos
inc
test
insl
fs
mov
add
inc
or
mov
repz
mov
jl
pop
clc
cmc
push
xor
cmp
outsl
xchg
fcomip
pop
push
rclb
push
sbb
ja
stos
or
xlat
jecxz
daa
or
out
xlat
sbb
imulb
jg
inc
in
pop
inc
jno
dec
faddl
dec
sbbb
stc
mov
scas
fwait
sbb
test
adc
add
inc
das
rol
xchg
xorl
cmpsb
xor
mov
fwait
adc
sub
jne
mov
pop
sub
scas
cmpsl
adc
aad
cmpsb
cmp
test
push
loopne
rclb
dec
jle
xor
lods
sti
lds
es
cmpb
mov
shl
jge
xchg
std
xor
adc
pusha
pop
inc
movsl
sbb
xchg
jmp
xorb
push
outsl
in
shl
pop
mov
clc
pop
je
bound
imul
stos
imul
fwait
pop
sbb
ss
dec
into
add
mov
sbb
or
inc
sbb
push
mov
test
pause
inc
sbb
push
pop
addr16
sbb
xor
mov
xor
scas
jns
sahf
test
sbb
mov
xchg
pop
xor
mov
mov
rcrl
sub
inc
cmp
jo
nop
jl
jle
popa
gs
add
pusha
mov
stc
and
or
in
callw
xchg
clc
sub
pop
inc
push
call
xor
mov
sub
outsl
push
sub
repnz
mov
inc
cwtl
movb
pop
aas
inc
in
mov
adc
popa
cmpsl
aaa
cmp
repz
jge
dec
in
xchg
jnp
fucom
cld
testl
imul
inc
inc
icebp
push
aad
ficoml
sbb
hlt
ljmp
sbb
inc
cmp
ret
adc
dec
bswap
xor
xchg
mov
scas
lock
aaa
sub
pop
idivb
cmc
jns
fcmovne
jg
dec
push
sbb
ja
xor
cmp
mov
pusha
gs
pop
or
push
pop
adc
sub
dec
gs
popf
xor
outsb
sahf
cmp
add
arpl
sahf
in
or
int
icebp
mov
jl
or
jnp
xor
and
enter
xchg
xor
jl
mov
push
jge
jae
sbb
mov
push
xor
xchg
mov
test
repnz
out
scas
xchg
movsl
iret
dec
jbe
lods
xchg
mov
movsl
fstpl
mov
adc
movsl
mov
or
hlt
mov
arpl
add
add
xchg
jle
es
out
repnz
mov
mov
dec
lcall
and
sbb
gs
sarb
lcall
mov
xor
lock
cmp
in
arpl
dec
mov
mov
mov
icebp
aad
je
dec
mov
xchg
add
js
adcl
mov
sub
add
xor
sbb
fstpt
cmpsb
jle
dec
test
outsl
or
adc
and
or
dec
test
xor
test
movsl
int
les
and
sub
stos
xorl
dec
dec
lcall
or
addl
in
push
in
push
mov
jbe
andl
stos
xchg
jge
and
out
cmpsb
lret
ja
scas
out
roll
xor
jl
cld
leave
sti
jg
mov
data16
ljmp
push
mov
lods
pop
lock
mov
add
mov
push
push
lds
je
adc
mov
push
insb
mov
xchg
in
pop
jge
fnsave
jle
ficoml
push
xchg
fisubl
rcl
test
popa
mov
loope
xchg
insb
pop
xchg
pop
addr16
cmp
icebp
ljmp
je
xor
mov
dec
adc
lcall
mov
cmpsb
xchg
and
cmpsb
add
lcall
sbb
sub
stc
daa
pop
lods
pop
mov
jl
dec
mov
aad
lret
dec
fldcw
and
pop
in
and
pop
bound
jl
xor
out
cmp
pop
xor
jo
xchg
and
jo
or
int
cmpb
inc
bnd
clc
dec
or
inc
call
ret
in
int3
sub
xchg
xchg
sub
adc
imul
xchg
icebp
nop
in
fnsave
push
bound
or
mov
in
adc
out
mov
aad
jl
or
pop
fdivl
push
mov
or
int
fildl
ds
mov
je
rcr
sub
mov
jl
sbb
leave
mov
ficoml
stos
mov
inc
inc
pop
mov
in
add
inc
or
jge
mov
aam
das
push
dec
xchg
or
lock
fnstsw
pop
jae
pop
push
out
or
dec
lods
sahf
and
in
pop
ja
xor
aad
push
or
adc
pop
rcll
xchg
sbb
add
cld
cmpsl
mov
jno
pop
or
xchg
into
xor
mov
test
adc
stc
aam
mov
jbe
into
push
jnp
cmp
daa
test
pop
sbb
pop
loop
int
jmp
in
dec
dec
in
lahf
adc
sub
mov
xchg
jno
sub
daa
xor
cs
jp
mov
pop
rorl
sarl
ret
fs
rorb
pop
das
sub
scas
xchg
dec
xchg
jg
pop
lock
daa
mov
hlt
enter
adc
cs
les
mov
or
cmp
dec
push
fldcw
mov
add
mov
test
imul
movsb
mov
dec
rorl
push
ss
inc
jnp
xor
mov
dec
repnz
xor
sub
mov
lods
inc
ja
add
mov
xor
dec
pop
pop
mov
xchg
pop
sbb
cli
clc
mov
pop
iret
sbb
adc
data16
je
clc
push
mov
push
cmp
push
std
loope
popa
sar
push
testb
aam
mov
roll
sbb
pop
mov
fiadds
imul
or
test
lret
aam
adc
nop
inc
in
sub
fucomi
outsb
and
pop
ret
push
cli
mov
test
or
call
int
cmp
repnz
inc
mov
push
jae
xlat
stos
pop
sbb
mov
mov
stos
or
sbb
inc
fsubrl
jp
sbbl
cmp
pop
xor
fidivrl
cmpsb
dec
loopne
cmp
adc
and
push
mov
sbb
idivl
mov
jb
inc
adc
pop
addr16
mov
mov
push
mov
xchg
jmp
push
stos
pop
mov
sub
int
sub
fcompl
jle
in
or
sub
push
nop
cmp
push
rcrb
rcrb
or
and
inc
into
lcall
movl
sbb
fcoml
xchg
xchg
add
dec
inc
out
cmc
mov
andb
insb
or
sub
and
insw
aaa
data16
add
outsl
xor
aad
dec
pop
add
sub
mov
sub
mov
jp
mov
or
adc
xchg
adc
ds
les
fisttpl
cmp
loop
sub
or
outsb
push
jne
pop
aaa
clc
pop
fwait
in
jns
dec
or
cmp
push
outsl
addb
mov
aas
mov
mov
mulb
stc
paddusb
sub
xor
int3
xchg
stos
repnz
pop
mov
repnz
ss
enter
sub
cld
cs
mov
out
pop
or
cwtl
or
mov
mov
lret
xorl
xor
fwait
sbb
xor
cld
pop
cmp
aaa
pushf
xor
mov
ret
or
das
adc
jg
inc
jno
movsb
push
aam
clc
rcl
sbb
and
jb
stos
mov
mov
push
jecxz
cmpsl
lea
xchg
jno
test
out
aaa
cmp
daa
loopne
outsb
idivl
cmp
mov
lods
faddl
jmpw
or
jnp
push
cmp
xchg
and
xchg
fisubrl
dec
call
in
dec
push
test
xchg
pop
jb
pop
in
dec
or
aam
daa
es
pop
mov
or
mov
out
popf
adc
mov
ljmp
fsubrl
adc
ret
xchg
pop
repz
in
or
inc
dec
inc
jmp
clc
pop
and
sub
sub
fmul
mov
push
and
test
iret
or
shll
ljmp
loop
dec
ror
cwtl
out
xor
xchg
shrb
mov
loope
push
jp
inc
cmp
rcll
dec
sbb
xchg
popa
pop
pop
and
push
pop
sub
shl
int
inc
mov
push
imul
push
ret
pop
cs
mov
jne
in
movsl
call
xchg
or
cmp
dec
scas
loop
loop
pop
inc
xor
pop
dec
in
shl
arpl
test
stc
fwait
test
loopne
push
movsb
sbb
and
out
cmp
mov
pop
sbb
out
rorl
dec
jecxz
xor
out
fwait
daa
je
mov
aad
stos
pushf
fsubr
inc
mov
sahf
mov
inc
mov
pop
or
movsb
sub
jo
fidivs
movb
insb
imul
aaa
stos
mov
push
sub
lods
xor
mov
repz
lods
lds
sahf
inc
sbb
pop
sbb
daa
dec
dec
jne
dec
mov
or
loope
fwait
mov
adc
and
sbb
clc
jmp
push
lds
popa
xchg
stc
insl
js
movsl
or
cmpb
mov
xchg
call
fcmovnb
inc
push
sub
jns
or
shl
in
dec
cmpsl
push
mov
xchg
xchg
shll
inc
mov
fcom
gs
inc
test
and
fwait
xor
adc
mov
insl
sub
outsl
arpl
push
in
inc
cmp
fcmovnbe
xchg
rol
loop
idiv
push
cmp
xchg
subb
arpl
push
mov
scas
cmpsl
mov
dec
jmp
into
push
sub
xchg
aam
stc
push
test
sarl
test
and
and
and
xchg
xchg
jno
cltd
push
mov
clc
sub
adc
push
nop
xchg
ja
jl
pop
mov
ret
inc
dec
scas
pushl
sub
loopne
pcmpeqw
inc
and
rcl
fdivl
mov
push
xchg
push
enter
ds
xor
mov
dec
jo
test
popa
jno
loope
pop
pusha
xor
int3
loop
fnstcw
xor
mov
push
les
rolb
mov
adc
in
fadd
dec
cs
jl
insl
push
lcall
adc
sbb
xchg
test
push
in
dec
sarl
push
das
push
mov
ss
mov
sub
movsb
xchg
jle
scas
push
mov
sbb
lret
lds
je
lods
inc
jno
mov
sahf
lea
mov
jne
ss
push
inc
iret
or
insl
mov
mov
fsubrl
clc
scas
add
idivb
mov
fistl
rol
mov
jns
fbld
adc
push
mov
mov
adc
insl
nop
inc
int
mov
stos
push
enter
inc
mov
xlat
mov
ret
xchg
fmull
lods
jmp
push
push
pop
fadd
and
std
loope
adc
leave
stos
mov
adc
jl
addr16
dec
cltd
push
test
inc
sbb
push
jns
lcall
shr
outsb
xor
push
test
mov
lods
dec
cmp
jmp
inc
and
lret
sbb
xchg
mov
dec
mov
cmp
sarl
mov
outsl
mov
xchg
call
test
ljmp
ds
pop
lret
leave
or
pusha
mov
pop
and
rcrb
loopne
imul
cmp
push
xchg
add
sub
into
stos
decl
lcall
out
ljmp
dec
or
xor
insb
pop
int3
rcll
fldl
std
outsb
or
mov
or
push
in
arpl
out
mov
and
pop
sti
daa
scas
mov
sbb
insl
arpl
pop
or
jne
pop
inc
push
pop
enter
lock
lea
gs
adc
fsubl
lahf
nop
adc
push
push
std
int
push
cmpsl
lods
clc
testw
cmp
push
jne
or
in
push
sub
jnp
enter
lods
push
cmpsl
cmp
jbe
pop
out
cli
insl
call
adc
gs
or
and
push
js
jmp
outsb
in
gs
mov
sbb
lcall
int3
xchg
test
cmp
lret
pop
fisubl
std
push
push
xchg
mov
sbb
mov
xchg
outsl
shrb
ss
xor
stos
les
jbe
pusha
test
pusha
mov
scas
jnp
cmp
dec
jl
in
cld
sub
push
insl
rcrb
mov
add
arpl
int3
lcall
jo
rolb
sub
mov
push
jb
xchg
rcrl
neg
mov
fsubl
call
and
scas
cld
dec
aaa
ja
arpl
xor
icebp
jb
xchg
adc
rdmsr
add
outsl
pop
cwtl
ret
jl
fcoms
in
xchg
add
lds
mov
or
dec
aad
fisubs
ret
movsl
lret
scas
adc
jmp
aas
mov
ss
fnstsw
push
fadd
aad
je
sub
cmc
add
mov
mov
push
outsl
mov
xor
rol
aas
fwait
mov
leave
jp
clc
mov
aas
lods
aaa
dec
in
fdiv
ja
inc
in
inc
jbe
dec
xchg
repz
adc
sbb
sub
jnp
inc
dec
dec
test
mov
ret
jp
das
int
ds
loop
out
xchg
adc
gs
pop
pop
arpl
sub
arpl
outsl
pushf
ja
lds
mov
dec
ss
cmp
out
mulb
lcall
sub
sbb
mov
repz
jg
imul
test
outsl
inc
les
or
in
and
insl
lcall
daa
test
inc
and
or
movsb
push
cld
push
or
push
or
aam
cmp
mov
adc
or
push
push
scas
push
and
mov
pop
pop
les
mov
add
aam
cmp
push
xchg
je
cs
inc
rclb
test
lahf
sub
imul
outsl
cmp
mov
push
lds
pop
ret
xor
lret
ss
add
pushf
lahf
lahf
in
fdivrs
fsubr
outsb
fnsave
stc
lock
shll
mov
add
les
or
mov
inc
lods
inc
int3
push
and
sub
ss
fimuls
ds
cmp
jp
xchg
xorb
ja
scas
cmp
lret
rcrb
inc
xchg
pop
mov
or
aas
icebp
dec
aaa
push
stc
imul
inc
mov
sub
adc
cs
pusha
aas
jge
xchg
and
stc
add
adc
pop
loopne
stc
xor
inc
mov
ret
repnz
sahf
cmp
xor
or
mov
dec
enter
mov
push
push
cmp
pop
lahf
scas
mov
lods
je
pop
pop
inc
cmp
test
fcomps
scas
test
push
dec
xchg
div
fidivs
test
xor
and
mov
out
dec
cwtl
add
ds
cmp
add
xchg
or
fcmovnb
lret
in
aam
cmpsb
xchg
dec
pop
je
popa
sbb
in
out
bound
test
icebp
inc
inc
dec
cmp
sbb
push
ss
pop
fndisi(8087
aad
or
jbe
leave
cmp
xlat
mov
test
jp,pt
xchg
adcl
in
dec
add
in
pop
addr16
pop
stos
cmpl
xchg
jmp
jmp
jnp
mov
pop
aaa
pop
inc
ljmp
mov
pop
mov
sahf
test
xor
movsb
pop
arpl
sbb
aas
mov
or
xor
mov
or
shrl
daa
scas
insb
adc
outsb
mov
xchg
out
and
mov
sahf
mov
mov
aas
push
test
out
mov
mov
leave
lods
stos
es
jg
enter
pop
xchg
stos
and
hlt
or
inc
pop
in
dec
or
shll
push
inc
dec
insl
dec
push
int3
cs
stos
adc
dec
dec
aaa
push
or
and
shll
mov
push
jecxz
gs
pop
lea
jns
pusha
pusha
lods
push
scas
nop
inc
lret
xchg
dec
xor
inc
lea
mov
addr16
pop
jae
call
inc
mov
rcrl
jo
xor
sbb
negb
int
cltd
pop
in
ds
add
ret
jbe
out
push
stc
jne
imul
sbb
dec
aaa
jno
pusha
pop
sbb
icebp
jg
in
jecxz
popa
xchg
cmp
inc
iret
stc
test
jmp
vmovshdup
mov
push
sbb
sbb
shrl
xor
imul
dec
cmp
pop
stos
lret
push
inc
adc
xor
pop
mov
js
inc
jb
sbb
mov
faddp
popf
mov
dec
inc
pop
push
sub
xor
push
adc
ret
push
sub
cmpsb
mov
int
mov
dec
test
jp
das
aad
out
dec
out
inc
cmp
inc
les
xchg
adc
daa
xchg
sub
jnp
cmp
sbb
in
movsb
sahf
add
nop
fstpl
sbb
cmp
clc
inc
lds
mov
int3
and
shrl
arpl
rol
sbb
jl
xchg
push
call
sbb
andb
push
mov
add
pop
mov
sbb
adc
push
popf
inc
fidivs
adc
nop
xchg
add
cmc
mov
push
daa
subb
lea
dec
pusha
clc
push
mov
test
out
ja
imul
es
stos
xchg
inc
sbb
movsl
push
in
inc
int3
jle
mov
and
inc
in
sbb
int3
sbb
cmp
popa
icebp
popa
push
pop
or
xchg
std
pushf
mov
mov
icebp
mov
lcall
or
or
sub
shrl
lret
push
repnz
push
shll
sti
sbb
add
outsl
and
test
cmp
cmp
stc
pop
add
xor
push
jl
std
mov
xor
aas
xchg
cltd
sub
pop
dec
push
adc
rorb
jl
out
xor
jmp
lds
fdivrl
inc
shlb
ljmp
push
cltd
pop
rep
and
mov
mov
xor
lahf
roll
icebp
mov
mov
and
imul
into
xchg
and
pop
and
add
jnp
decl
xchg
mov
xor
iret
xchg
push
adc
mov
sub
or
push
fldcw
sub
xor
add
dec
loop
cwtl
mov
rol
adc
mov
mov
adcb
and
or
fisubl
popaw
mov
xchg
push
mov
imul
int3
jno
push
mov
or
mov
inc
das
push
pushf
clc
pop
push
add
mov
cmpsl
cmp
sub
into
xor
loop
pushf
leave
push
jne
je
loopne
add
icebp
cs
sub
lcall
ds
sub
cmp
or
sbb
dec
mov
mov
push
ljmp
into
sub
cmp
or
sbb
dec
mov
repnz
bnd
push
ljmp
into
repnz
out
or
sbb
push
pop
dec
stos
pop
mov
push
ljmp
into
aad
nop
inc
or
insl
stc
loop
test
inc
movsl
sbb
sub
pop
mov
aam
lds
push
jbe
pop
stos
pop
fisubrl
lret
sbb
sbb
or
push
lret
pop
stos
dec
mov
lcall
pop
lcall
sbb
shl
ret
inc
mov
mov
decb
iret
pop
mov
mov
sbb
xchg
cmp
dec
arpl
loope
icebp
in
daa
or
ror
imul
inc
divb
scas
es
lret
add
adc
xchg
aas
pop
push
pop
and
or
jge
xchg
cmp
xchg
cld
or
int3
out
mov
lret
cmp
hlt
sbb
mov
ljmp
push
fwait
cmp
movsl
and
sub
in
pop
sbb
xor
ret
fwait
mov
pxor
inc
lret
or
in
in
sbb
lret
movsl
nop
mov
pop
test
pop
pop
dec
push
jns
dec
cli
cmc
jmp
in
cmp
sub
mov
xchg
int3
sbbl
int3
push
lcall
or
jle
js
dec
lret
push
out
negl
pop
iret
xor
xchg
or
cli
dec
mov
das
mov
adc
sbb
pop
movsl
push
xchg
stos
jg
stos
data16
pop
stos
jns
or
dec
mov
lcall
pop
fisubrl
lret
or
sbb
ljmp
pop
stos
dec
mov
lcall
pop
fisubrl
lret
or
sbb
ljmp
xchg
xchg
es
cmp
add
fsin
add
sub
xor
movsl
iret
movsl
insb
xor
inc
mov
movsb
push
mov
in
data16
cmp
pxor
hlt
scas
sub
test
ja
push
mov
add
enter
sbb
divl
es
scas
or
cmp
pop
fcmovu
lods
insl
lds
jmp
mov
mov
adc
jecxz
pop
fstpl
mov
pop
int3
jmp
push
pusha
popf
xchg
mov
mov
mov
sbbb
mov
outsl
movsl
call
test
outsb
jl
enter
mov
hlt
test
mov
push
xlat
call
aam
stos
sbb
mov
cmp
les
fsts
in
shl
scas
add
shl
fldenv
inc
das
mov
imul
popa
into
mulb
inc
xchg
int
dec
out
stos
test
lcall
mov
xchg
pop
and
inc
sbb
xchg
mov
sub
sbb
push
push
addr16
add
jne
and
dec
jmp
push
pop
lods
testl
les
pusha
push
mov
movsl
in
mov
and
fcompl
insl
xchg
xchg
scas
outsb
pop
cmc
pop
adc
sbb
int
ja
or
cmp
inc
cli
xchg
jbe
mov
dec
stc
icebp
push
fisubrs
fadds
cltd
xchg
mov
stos
nop
sbb
xor
dec
xchg
pop
add
jae
sbb
push
ds
ds
popf
mov
les
lea
add
pop
pop
popf
stc
and
outsb
jns
fnsave
jg
pop
mov
add
aad
inc
push
mov
or
mov
or
fwait
adc
lods
mov
pop
xchg
mov
and
add
jbe
mov
mov
dec
jle
push
das
popf
ficoml
or
pop
or
adc
fists
inc
das
mov
adc
xchg
pushl
and
or
bound
jle
xor
inc
mov
mov
dec
adc
jnp
mov
sbbl
mov
fstps
outsl
fsubl
push
icebp
mov
cmpsb
cmp
cwtl
mov
ds
add
fcmovne
iret
nop
xchg
inc
inc
ljmp
or
stos
stos
mov
inc
mov
je
cmpsl
add
xchg
lea
cmpsl
or
imul
push
add
and
les
inc
or
jno
addr16
add
push
mov
push
xor
insb
push
add
stc
sub
in
push
xchg
fisubrl
in
shll
arpl
ljmp
fdivrs
xor
adc
sbb
pop
loop
inc
stc
push
add
mov
adcl
mov
ljmp
clc
mov
mov
fs
cmp
aad
cld
sub
adc
sbb
xchg
cs
mov
xchg
mov
mov
fs
add
or
xor
xor
inc
aad
cmp
and
dec
movsb
fndisi(8087
insb
xchg
mov
enter
shl
mov
and
cmpsb
pop
jg
xor
gs
fimuls
cmpsl
ds
fidivl
jge
xor
movsb
sbb
xchg
mov
adc
pop
icebp
jbe
pop
mov
mov
sub
and
jbe
lcall
jg
pop
xchg
mov
js
sub
shll
jle
adc
jnp
mov
filds
jns
dec
cmp
cltd
sbb
aas
loop
sub
ud1
scas
les
outsl
xchg
scas
mov
inc
aam
xchg
stos
lock
fcmovnu
cmp
and
subb
sub
addr16
popa
cmp
jae
mov
jno
lret
dec
jnp
divl
pop
sahf
cwtl
jns
cmpsl
push
test
mov
inc
mov
dec
pushf
imul
cmp
ljmp
xor
mov
int3
sbb
in
repz
sbb
ss
test
inc
jno
add
or
mov
pop
enter
decb
cmp
sbb
leave
inc
imul
dec
inc
ss
cltd
notl
mov
addb
and
mov
dec
mov
xlat
sub
jl
jns
pusha
cmp
aas
inc
loop
dec
or
xor
stc
outsb
inc
dec
fcomip
scas
or
aaa
outsb
add
imul
jmp
jp
clc
jne
movsl
or
subl
mov
xor
sub
stos
cld
jnp
mov
jae
pusha
mov
xchg
hlt
push
jmp
mov
pop
outsb
sub
js
and
mov
cmp
add
pop
or
gs
jb
or
outsl
pop
loop
cld
std
pop
into
movsb
lret
lock
movsl
mov
cmp
jge
sbb
ss
mov
push
notl
or
les
int3
xchg
repnz
scas
mov
outsb
cwtl
cli
addr16
add
cmpl
dec
push
jne
in
ret
fmul
rorb
push
test
ret
loopne
cltd
jmp
movsl
lret
shll
pushf
in
sub
outsb
mov
mov
adc
pushf
es
out
mov
ret
lods
lea
test
add
fcmovnb
insl
mov
scas
test
pop
xor
imul
jp
adc
enter
cmpsb
orb
lahf
add
cmpsl
xor
mov
xchg
and
popa
mov
stos
icebp
in
xor
out
jmp
enter
fisubrs
jg
adc
adc
imul
xor
mov
cli
loopne
push
xchg
cld
push
scas
shl
fiaddl
mov
sub
xchg
rcrb
hlt
out
fisubs
out
sbb
cwtl
cld
dec
and
mov
dec
and
push
lret
xchg
jne
cld
push
mov
ss
jno
add
xlat
and
sbb
sbb
js
or
or
pop
add
or
pop
mov
jp
pop
pop
add
insl
xor
shrl
xlat
mov
cmp
xchg
addr16
lret
jno
jae
push
adc
popf
test
lods
xchg
dec
aas
or
or
repnz
sub
jmp
nop
into
mul
cmp
push
mov
insl
cmp
jmp
adc
mov
add
mov
xchg
inc
pop
shl
lds
lods
push
ja
or
jl
add
sub
push
psubusb
xor
pop
bound
imul
push
les
add
repz
mov
fildl
push
mov
phaddsw
push
dec
adc
dec
gs
rcl
push
lret
xor
sahf
xorb
xor
nop
ss
cmpsb
in
stos
fwait
add
hlt
movsl
xor
outsl
aas
push
sub
pop
mov
insb
decb
fdivp
cmp
js
pusha
add
sbbb
pusha
adc
add
sub
into
sbbb
cwtl
sbb
jbe
lods
pop
imul
out
cmpxchg
iret
sub
xchg
mov
and
jnp
mov
sub
mov
insb
lret
stos
sahf
in
popa
cld
divl
xorb
cmp
stos
cld
dec
dec
mov
test
loopne
sub
aam
aam
lret
call
jmp
or
sbb
movsl
fwait
xchg
cmp
xchg
jmp
enter
sub
mov
push
insl
inc
scas
roll
push
shll
jle
inc
mov
jne
lods
or
arpl
repz
push
mov
jge
in
cltd
lcall
mov
push
jle
pop
mov
fidivrs
pop
clc
cmp
xor
daa
in
nop
lret
movsl
jnp
out
add
dec
cmpsb
std
pusha
jge
lret
mov
jne
jp
mov
stc
inc
cwtl
jbe
xor
push
outsl
mov
repnz
push
add
adc
test
call
xchg
cmpsb
stos
add
inc
pushf
sub
ret
push
mov
mov
mov
icebp
fstl
std
sbb
insb
pop
clc
cltd
cmp
cmp
addb
aaa
shll
sbb
js
pop
adc
leave
mov
ljmp
insb
loopne
enter
ret
icebp
jnp
mov
les
ret
jge
cmp
mov
sub
sub
movsl
jo
jp
xchg
lea
cmp
add
cltd
int3
daa
testb
lea
lahf
jno
loope
stc
push
cmpsl
por
mov
aas
sbb
add
adc
je
ds
mov
into
gs
xchg
xor
mov
sbb
dec
les
fmul
xchg
adc
sti
fcoms
popf
js
mov
test
sub
sub
sub
repz
jno
jl
dec
or
cli
mov
sbb
mov
add
xchg
loope
sub
rcl
cmpsl
ja
je
lds
pop
xchg
and
insl
lock
push
xchg
pop
cwtl
pop
inc
push
mov
data16
out
and
push
cwtl
lret
lret
jg
dec
cmpb
out
arpl
dec
push
notl
in
push
pop
lret
pop
clc
pop
fstps
mov
and
xor
jnp
push
dec
and
jle
adc
jb
jno
inc
mov
sbb
add
movsl
and
rclb
mov
sub
out
mov
arpl
jp
jecxz
cmc
dec
sbb
cwtl
sti
and
js
das
cmc
push
outsl
xor
push
dec
call
aaa
cmp
in
inc
outsl
or
pop
inc
pop
fdivrl
lods
addr16
push
pop
outsb
pushf
pop
jge
iret
push
ljmp
push
xor
nop
mov
cmp
pop
push
mov
int
and
sub
aas
mov
and
fcmovne
mov
mov
mov
adc
stos
mov
and
lods
aaa
sti
icebp
lcall
pop
sbb
mov
addr16
ficoms
xchg
cmp
pop
aam
pop
cltd
push
stos
adc
ja
out
outsb
cmc
xlat
xchg
and
out
dec
es
lcall
mov
push
mov
cmpsl
out
imul
out
fs
in
dec
aas
mov
in
gs
mov
add
mov
mov
mov
out
xlat
clc
lods
cltd
pop
adc
cmp
fnstenv
jbe
push
jmp
mov
lods
stc
xor
mov
and
out
movsl
push
ljmp
pop
fmul
mov
sti
fwait
shlb
data16
rcl
decb
ljmp
sub
scas
out
cli
inc
les
sti
out
flds
fsubr
outsl
jo
jnp
inc
xor
push
stos
test
sub
fld
pop
ror
push
xchg
daa
iret
inc
mov
add
add
cmpsb
and
ret
cmp
negb
sbb
sub
push
repz
adc
js
push
das
cmp
lea
fisubrs
outsb
jg
imul
pusha
inc
and
dec
sbb
adc
jae
and
addl
shll
cmp
sbb
and
mov
cmp
mov
test
pop
or
test
cs
and
xchg
mov
sbb
ja
bound
hlt
inc
fsts
add
movsl
insb
notl
cmp
and
loop
add
inc
mov
sbb
fcomps
shll
jno
cld
inc
test
or
jbe
aaa
andnps
inc
shll
lods
testl
push
inc
mov
jecxz
std
fdivrl
rcr
xchg
jnp
xor
pop
dec
pusha
push
cmp
aam
lds
xor
roll
jo
call
mov
dec
fidivrl
push
sbb
xor
pop
inc
mov
cld
pop
fistpll
fstps
rorl
jle
fdivrs
xor
repnz
lahf
adc
mov
iret
iret
fs
push
bswap
pop
int3
inc
xchg
dec
popa
mov
mov
out
mov
stos
or
ljmp
mov
ret
dec
fwait
dec
inc
ss
cmp
xchg
daa
adc
lret
out
sub
jmp
cli
jnp,pt
nop
and
jns
sbb
mov
scas
add
adc
pop
xor
and
or
icebp
mov
aam
xchg
jnp
sub
mov
jbe
imul
mov
je
inc
data16
aaa
xor
xor
mov
out
push
and
std
mov
inc
in
out
fbld
push
outsb
data16
dec
and
dec
cmp
in
repz
iret
dec
adc
test
cmp
sbbl
pop
es
mov
mov
rcrl
outsb
negb
repnz
mov
mov
mov
push
fstpl
ss
xchg
in
pop
or
dec
aam
int3
push
adc
loopne
fisttpl
out
mov
push
dec
fadd
data16
je
jmp
jge
enter
jmp
and
arpl
movsl
out
mov
mov
inc
enter
xor
cmpsl
in
add
jbe
inc
add
test
xchg
push
test
je
int
mov
sets
ljmp
pop
add
hlt
fs
sbb
sub
jl
shlb
cli
ud0
je
test
mov
jmp
push
jne
or
xchg
shl
push
insl
jb
xchg
push
mov
into
lea
loop
cmp
pop
pop
mov
ss
mov
repz
push
jno
sub
mov
imul
cmp
pop
jae
inc
mov
loope
jmp
jle
mov
repz
imul
sub
movsl
sub
xchg
pop
adc
and
mov
ret
jo
mov
dec
lret
movl
int3
jae
mov
in
and
mov
sbb
pop
stc
jmp
dec
popf
pop
jne
pop
cmpsl
or
imul
mov
and
cmpsl
sbb
aas
out
test
cmpsb
je
in
loop
xor
xor
std
dec
loop
out
pop
push
call
cld
xor
test
daa
sub
in
imul
rcrb
sub
jnp
int3
mov
pop
fstp
sub
imul
clc
pop
push
icebp
movsl
jbe
mov
mov
push
jg
fwait
jg
push
pop
mov
fnsave
jecxz
in
ret
add
lcall
nop
out
jbe
std
and
int
xchg
adc
orl
jns
xchg
jmp
pop
fistpl
insb
jg
jg
aaa
aam
mov
out
cmp
pop
and
cmpsl
out
fs
in
ret
xchg
imul
lods
in
add
jge
test
rcll
pop
mov
enter
jb
add
mov
push
cmp
inc
inc
test
mov
cmp
jne
adc
repnz
lsl
adc
jne
adc
add
adc
es
fsubs
fnsave
jb
mov
neg
bound
icebp
mov
cmp
test
pop
sbb
mov
cmp
gs
dec
xor
cmp
add
pop
fidivrs
sarl
outsb
cmpsl
movsb
popf
push
ja
adc
icebp
out
stc
mov
inc
jne
push
ja
repnz
jae
aaa
inc
jle
xor
fisttpl
jg
cmp
cld
test
rcll
popf
es
test
lds
lcall
xor
rolw
xor
mov
std
dec
or
xchg
push
xor
sti
pop
pop
insl
jp
std
xor
rcl
mov
sar
flds
pop
xchg
lea
or
call
jp
sti
test
mov
ds
mov
sbb
lods
mov
fs
dec
cmp
scas
cmp
stos
in
inc
jecxz
sub
scas
in
lahf
sti
lock
mov
loopne
pop
shll
test
movsl
cli
daa
jecxz
jmp
fs
das
pop
mov
iret
rorb
or
cmovp
mov
inc
aas
cltd
push
dec
lods
inc
sbb
xlat
dec
dec
mov
cs
xchg
das
ss
jp
sbb
fnstenv
movsl
inc
pop
int
lods
add
pop
sub
outsb
mov
imul
push
sbb
pop
out
jno
jnp
fmul
scas
incb
ret
push
xor
and
cmc
fnstenv
or
cmp
add
movsl
stos
jecxz
aam
xchg
inc
pop
push
mov
scas
mov
cmc
xchg
fs
inc
push
lock
js
in
add
cmp
daa
fdivrs
push
dec
mov
icebp
or
or
sub
mov
inc
and
add
mov
icebp
rol
pop
sti
inc
insb
test
and
cltd
pop
shrl
je
movl
xchg
nop
xorl
push
xchg
jecxz
shr
inc
stc
fstpl
pop
sarb
enter
xchg
lahf
jmp
cmp
mov
xchg
out
mov
push
cmp
icebp
std
mov
adc
sbb
mov
adc
lret
pusha
jno
push
push
aad
movsl
inc
rcrb
nop
ds
push
lahf
xor
call
mov
cmp
loop
movsb
mov
int3
out
xchg
add
sub
hlt
shrl
in
dec
imul
pop
nop
add
add
test
out
in
lock
fcomps
cmp
add
aaa
test
sbbl
jmp
clc
iret
mov
jle
leave
fisttpl
and
cmp
cmp
push
xor
push
or
pop
out
call
xor
movsl
fdivrs
inc
dec
xor
addr16
cmp
lret
ja
push
loop
push
outsb
cmc
and
mov
jo
sub
jl
shrl
cld
dec
pop
shrl
mov
iret
in
dec
or
lods
jmp
adc
or
add
adc
imul
mov
jnp
push
pop
cmp
ds
mov
fldz
lds
loop
ds
mov
test
xor
fsts
ljmp
mov
movsl
lret
jmp
inc
sar
repnz
mov
push
dec
push
andb
xchg
jb
loopne
mov
int
insb
inc
sub
xor
xchg
or
add
add
pop
xor
add
in
mov
movsb
std
and
cmp
mov
adc
push
xor
ds
das
jg
xchg
pop
push
adc
jp
push
loope
data16
mov
in
xor
scas
iret
mov
lret
lret
insl
repnz
es
mov
mov
mov
test
jbe
dec
cld
insl
mov
mov
scas
adc
cmp
imul
and
fwait
push
or
and
jne
ds
hlt
cmpsl
and
test
pop
inc
ret
clc
xor
aaa
out
outsl
cmp
popl
dec
repz
jns
mov
mov
into
sbb
sbb
pop
mov
ljmp
or
sbb
mov
fwait
call
lcall
dec
cmc
das
mov
add
pop
xor
xchg
mov
push
lds
dec
or
jae
dec
jb
ret
subl
xor
jp
sbb
test
mul
pop
push
fmul
jne
test
xchg
enter
stc
mov
pop
hlt
daa
aaa
stos
lds
inc
xor
fstpl
push
cmpsb
lahf
lds
lret
push
das
cmpsb
out
xacquire
insb
aaa
mov
xor
dec
arpl
out
leave
push
xchg
addr16
das
loop
and
xor
sbb
pop
out
data16
scas
mov
fisttps
push
lea
std
xor
and
js
out
js
stos
movsl
or
add
jecxz
fldcw
mov
stos
xchg
scas
popa
insl
aam
test
scas
sar
pop
push
cmc
lea
je
mov
push
je
push
scas
mov
stos
test
cli
cltd
fcompl
ljmp
aaa
push
pusha
inc
xchg
cmpsb
pop
aam
loop
cmpl
aas
push
cmp
aaa
mov
pop
xlat
jle
xlat
xchg
testb
push
inc
or
repnz
fisubs
and
sbb
int3
mov
ret
jp
js
leave
iret
adc
insb
jbe
cmpsl
imul
inc
jp
aam
xchg
je
mov
aas
fistps
fildll
sahf
sbb
ret
pop
sbb
jb
mov
xlat
pop
rcl
dec
test
loope
data16
iret
popa
dec
mov
dec
dec
jo
lea
or
sar
popf
int3
pop
sub
add
jg
leave
daa
mov
fistps
adcb
out
sahf
push
fsubrp
ds
push
xor
testl
mov
mov
popf
je
mov
push
in
rolb
fwait
xor
gs
inc
insl
scas
mov
jecxz
push
mov
add
std
stc
icebp
sub
iret
sbb
cmovs
enter
iret
mov
rol
xor
xor
and
fldcw
mov
jne
nop
sahf
add
cli
jle
test
jp
jmp
dec
push
mov
xchg
ret
daa
out
mov
sbb
and
mov
mov
outsl
xchg
aam
out
xchg
jge
sub
pop
stos
dec
mov
lcall
pop
fisubrl
lret
or
sbb
ljmp
pop
stos
dec
mov
lcall
pop
fisubrl
lret
or
sbb
ljmp
lret
mov
lcall
pop
fisubrl
fidivrl
cli
or
sbb
ljmp
pop
stos
pop
mov
lcall
sub
add
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
cwtl
adc
cmp
or
sbb
mov
mov
test
cmc
clc
in
adc
cmp
push
xchg
cwtl
test
mov
movsl
enter
call
adc
cmp
push
stos
cwtl
fxch
stos
xchg
in
adc
push
test
mov
repnz
rorb
jle
sub
sbb
jns
dec
lods
push
mov
std
sub
icebp
mov
movsb
xor
cmc
add
lea
sbb
daa
ret
dec
add
into
jecxz
or
jnp
mov
gs
sbb
imul
in
ljmp
dec
push
je
mov
nop
test
xchg
cmc
mov
stc
jnp
sub
mov
loopne
in
test
dec
mov
subb
mov
nop
sbb
mov
sahf
nop
inc
nop
mov
dec
xchg
fnsave
fdivs
jmp
adc
cmp
push
xchg
cwtl
test
aad
clc
mov
inc
jae
arpl
cmp
adc
fcmovnu
lret
mov
ja
adcb
dec
pop
xor
cmp
push
shl
jmp
cmpl
mov
ss
inc
sbb
cmp
push
xchg
cwtl
test
aad
clc
in
adc
cmp
push
xchg
cwtl
test
aad
clc
in
adc
push
cmp
xchg
movsb
xor
call
fldcw
imul
jge
movsl
das
adc
mov
lret
sahf
push
test
fs
inc
sarl
je
imul
or
insl
outsl
cmpsb
outsl
mov
sub
cbtw
ds
js
pop
rcrl
mov
xchg
enter
adc
cmp
stos
ret
out
xchg
mov
sub
popa
imul
in
or
rcrl
xchg
in
mov
adc
cmp
push
cmc
add
or
cmp
fcmovu
xchg
push
loopne
add
int
sub
movsb
into
push
pop
and
shll
pop
adc
dec
repnz
sbb
enter
mov
outsl
cmp
or
mov
or
fistl
repz
ret
or
clc
iret
nop
cmpsl
jbe
lock
loopne
xor
rol
out
jmp
dec
fidivrl
dec
sbb
sbb
dec
cld
ss
jle
loope
sbb
xchg
adc
cmp
jp
fidivrl
ja
jecxz
or
out
sbb
cmp
adc
jle
xchg
into
mov
pop
negl
fidivrs
repz
xor
xchg
sub
jg
mov
addr16
and
cltd
xor
in
add
or
frstor
push
cmp
adc
daa
adc
xchg
nop
stc
xor
andl
pushf
aam
test
fisttpl
push
sub
movsl
jnp
enter
pop
jg
jno
scas
jbe
cmp
scas
je
jnp
fisubs
or
or
lock
mov
mov
jge
in
fildl
sbbb
shlb
pop
mov
pusha
jmp
xchg
ljmp
push
inc
xchg
pop
pop
pop
or
adc
cmc
jecxz
mov
test
fidivrs
dec
rorb
fimull
push
pusha
mov
add
andl
sub
adc
push
scas
jp
cmp
xchg
popf
jg
inc
lret
lea
pushl
xchg
jo
popf
imul
nop
pushf
mov
movsl
jae
push
inc
cli
xor
mov
jmp
or
mov
les
aaa
mov
and
or
jns
adc
imul
sbb
dec
lock
inc
jge
loopne
stos
shll
hlt
jmp
in
rolb
repz
mov
sti
mov
daa
mov
adc
mov
cwtl
cmpsb
and
jns
dec
adc
das
mov
or
mov
test
fstps
dec
out
push
leave
add
or
js
pop
lret
add
mov
adc
pusha
es
jne
add
mov
jbe
xlat
cltd
add
in
jmp
cmpsb
movsb
mov
mov
jbe
cmpsl
pushf
test
add
loope
dec
mov
or
cmpl
or
fcoml
rolb
mov
jnp
mov
adc
mov
push
dec
pop
es
dec
pop
adc
sti
and
xchg
or
hlt
in
test
adc
rcrl
sub
and
pop
jge
fwait
dec
adc
jbe
insb
pop
pusha
stos
cltd
ljmp
aam
jbe
aad
or
out
aad
lret
pop
mov
jle
push
mov
aad
rcrl
in
xor
mov
std
push
lods
daa
mov
dec
lods
mov
lock
cmc
and
rorl
and
aam
in
outsb
add
out
cmp
call
lret
jp
outsb
add
xchg
fisubl
adc
xor
mov
loop
loopne
scas
push
pop
push
rorb
das
shrb
inc
inc
and
cli
sbb
ljmp
xchg
sbb
cld
xor
pop
mov
ret
jae
nop
test
xorl
adc
lods
lods
sub
paddb
sub
shrb
mov
mov
fwait
xchg
and
icebp
xchg
fs
popf
or
mov
xchg
xlat
std
jmp
push
xchg
add
std
sbbb
lea
cli
mov
and
gs
jbe
in
fwait
adc
sbb
push
inc
cmp
outsl
jmp
push
sub
mov
rolb
je
lret
mov
movb
pop
add
sbb
adc
or
shll
ret
dec
inc
dec
pushf
jle
shlb
dec
movsb
jl
xor
push
jecxz
cltd
dec
out
inc
pop
inc
fisttps
pop
xchg
outsl
aaa
imul
hlt
add
test
rcll
xchg
mov
insl
add
pusha
or
pop
icebp
call
test
add
mov
rcll
and
imul
and
cld
xor
sub
retw
mov
mov
sbb
in
mov
out
aas
frstor
push
scas
mov
inc
sub
lret
sti
insl
int3
or
mov
inc
pop
inc
pop
test
dec
push
jl
xchg
rclb
sub
int3
push
sbb
mov
mov
pop
inc
loope
mov
adc
ljmp
xor
sub
sbb
sub
arpl
ja
or
mov
ljmp
aas
jae
or
into
cmp
sbb
inc
ret
dec
movsb
xlat
andl
add
pop
arpl
mov
pop
xor
jecxz
test
adc
and
mov
jmp
addr16
js
std
insb
mov
leave
hlt
sub
mov
mov
xchg
jae
gs
push
lds
push
inc
lods
cmp
outsb
inc
iret
into
inc
loop
adcb
or
pop
into
sahf
mov
mov
jle
dec
jb
push
dec
inc
aaa
adc
shl
xchg
hlt
ja
addr16
adc
add
lahf
in
fildll
push
rcll
add
call
mov
je
icebp
dec
movsl
xchg
jne
pop
and
loopne
sbb
int3
pop
insb
addr16
xorb
sub
leave
push
lahf
sub
inc
loope
push
jp
insl
or
jbe
hlt
inc
sahf
mov
jnp
add
mov
or
add
sahf
int3
addr16
mov
or
adc
lret
mov
jmp
mov
aam
arpl
or
std
les
in
push
mov
cmpsl
or
xor
push
push
xadd
lods
pop
mov
mov
sbb
scas
add
xor
adc
inc
jl
mov
and
sbb
out
jg
and
jno
je
cmpsl
imull
fimull
push
jae
inc
mov
in
mov
bound
push
mov
loopne
push
add
frstor
es
push
bound
lret
jnp
popf
jnp
out
pusha
sbb
mov
cld
inc
sbb
fldenv
mov
data16
clc
push
ret
and
mov
int
addr16
aaa
pushf
mov
mov
stos
mov
xchg
jg
imul
mul
add
mov
pushf
iret
cltd
lahf
out
loopne
cmpsb
lahf
pop
push
out
arpl
adc
mov
sahf
xchg
cmp
jecxz
iret
pop
scas
cwtl
fwait
stos
add
pop
dec
sub
sub
jno
movsb
pop
je
mov
xchg
add
rol
cli
test
mov
sbb
lea
cmp
adc
mov
cld
std
adc
inc
jae
movsb
or
push
push
arpl
test
adc
push
jnp
mov
and
sub
dec
ljmp
xor
sub
lcall
pop
int3
scas
sbb
icebp
jnp
cmp
out
pop
cs
lods
bnd
jno
stos
stc
orb
imul
or
bound
dec
or
mov
mov
adc
lret
push
popa
idivl
and
xchg
and
sub
fcmovne
in
idivb
repz
int3
iret
xchg
inc
pop
shlb
jo
xlat
ss
stc
out
lcall
adc
rep
dec
or
pusha
xchg
leave
aas
push
mov
push
cmp
mov
fnsave
or
fadds
ret
loope
add
push
jo
dec
testb
notb
mov
xorb
adc
cs
xchg
ret
pop
loope
push
cmp
out
lods
inc
mov
data16
cmp
jmp
mov
aas
mov
stos
popf
add
hlt
or
mov
fwait
xchg
in
xchg
into
cs
mov
or
in
fwait
push
adc
mov
mov
ret
mov
sbbb
inc
sarl
push
or
test
add
jl
jge
lret
and
mov
je
mov
fucomp
cwtl
inc
in
mov
dec
fists
mov
lods
cmpsb
jb
enter
xor
lahf
dec
dec
imul
je
shr
fucom
pusha
in
loope
and
movsb
and
rcll
xor
ss
mov
mov
ret
jg
inc
push
sahf
clc
adc
xor
cmpsl
sbb
dec
push
jge
inc
or
sti
bnd
add
and
into
ja
mov
dec
xchg
cmp
inc
sahf
xchg
pushl
mov
rorb
sbb
hlt
divl
outsl
lock
loop
pushf
dec
jg
cmp
push
adc
scas
stc
out
sar
insl
dec
add
rcl
dec
xor
nop
icebp
mov
push
lods
mov
xor
adc
inc
mov
xchg
test
xchg
in
loopne
pop
mov
and
push
imul
repz
daa
cmp
sub
daa
dec
data16
int
mov
lcall
test
jae
cmp
cld
dec
mov
popa
sub
aam
jle
filds
jg
sbb
push
ja
insb
jge
mov
or
testb
cld
xchg
xchg
inc
loopne
fwait
pop
adc
test
and
ret
cltd
enter
inc
xchg
mov
andl
or
arpl
popa
inc
jl
sub
lock
lods
std
and
out
cmp
iret
mov
loop
sub
xor
ljmp
mov
pop
dec
stc
cltd
int
insb
fwait
mov
sbb
fmul
daa
bound
insb
sbbl
jl
xor
pop
cli
mov
nop
add
movb
sub
xchg
ljmp
fwait
add
mov
jl
adc
adc
xchg
pop
je
hlt
add
shll
pop
sbb
out
jne
cs
lcall
xchg
inc
inc
stc
sub
dec
ja
cmp
cmpl
pop
dec
out
enter
inc
addr16
push
lahf
shr
scas
ss
andb
int3
mov
mov
mov
cmpsb
adc
cmp
popa
sbb
cmp
push
push
pushf
lods
lret
dec
adc
test
leave
and
lret
dec
xchg
pop
jne
sub
fstl
lds
dec
je
sti
add
cmp
fs
lret
xor
mov
mov
icebp
dec
lock
aam
jne
test
dec
cmp
leave
stos
aaa
lret
imul
add
push
mov
fildll
cmp
cli
clc
bound
stc
mov
outsl
mov
fcompl
ss
call
cmpsb
sbb
mov
mov
ljmp
inc
in
stc
ret
jae
fwait
or
aas
mov
notl
dec
push
or
outsb
mov
insb
dec
sbb
ret
scas
and
xor
push
mov
jmp
dec
and
xchg
shrb
cmp
and
add
mov
and
cmp
cmp
pusha
mov
push
fs
push
sbb
jle
jge
cmp
inc
dec
add
dec
and
lods
jge
repnz
mov
arpl
push
out
mov
cmp
sub
mov
test
pop
pop
push
shlb
mov
fisubs
aas
sbb
sti
jne
daa
aas
and
inc
xchg
sahf
subb
xor
jae
sbb
aaa
mov
cmp
sbb
jns
push
loopne
sub
push
lret
repz
fidivl
popf
jmp
stos
je
xor
jmp
rclb
inc
xor
fistpl
les
sub
dec
pusha
in
int
pusha
or
test
and
push
nop
out
mov
inc
xchg
mov
sub
pop
adc
adc
pop
and
idiv
out
pushw
pushf
stos
andb
jnp
mov
cmp
cmp
mov
push
adcl
xor
cmp
imul
in
loopne
push
aad
cmc
jecxz
std
sbb
xlat
jbe
push
mov
adc
adc
inc
out
das
test
fxch
ss
cld
inc
xchg
loope
pop
push
push
cmp
mov
ret
pushf
stos
sub
loopne
pop
out
jle
lds
loope
ljmp
lahf
clc
mov
lret
aas
cmpsl
dec
sbbl
dec
rcrl
mov
xchg
sub
addl
mov
mov
and
cmp
frstor
dec
push
sub
bound
or
pop
jae
adc
stos
adc
adc
push
push
mov
add
in
mov
jbe
mov
loop
adcb
and
les
jb
pop
mov
imul
inc
stos
nop
notl
repnz
sub
add
or
pop
or
cwtl
into
sub
adc
aad
sub
cmp
sub
fistps
mov
mov
pop
je
push
ss
cltd
jns
cmpb
ret
or
sbb
or
arpl
jo
and
push
cmp
jecxz
outsb
stos
inc
cltd
push
rcll
xor
cmpsl
in
mov
inc
or
es
dec
mov
cltd
lret
cmp
mov
andl
xlat
and
aam
and
inc
sub
mov
cld
ret
sub
stc
sahf
pop
cmpsb
iret
loopne
aaa
cltd
sbb
pop
inc
pop
mov
pop
js
aam
dec
in
das
xchg
mov
pop
cmp
sub
push
jmp
mov
push
adc
jnp
cmp
jg
jmp
sahf
jo
xlat
mov
imul
jb
inc
nop
or
je
add
mov
mov
pop
add
and
mov
push
aaa
outsl
xchg
mov
xor
fs
push
cli
test
scas
pop
loope
push
das
cmp
cs
pop
lods
xchg
xchg
xchg
and
hlt
rcl
push
inc
rorl
lods
push
jno
cmp
arpl
jb
test
gs
mov
mov
mov
pop
xor
fwait
out
jne
addl
and
ljmp
outsl
shll
loope
adc
jb
cltd
stos
add
sub
adc
jne
mov
in
cs
cmp
outsl
ja
mov
jl
mov
cmp
movsl
fildll
sbbl
or
out
pusha
pusha
adc
icebp
lcall
adc
cmpsb
jo
jo
adc
cmp
lret
sbb
add
insb
shll
ds
arpl
cmc
and
jmp
cmpsl
mov
imul
pop
test
rcrb
push
dec
jns
repz
xor
lret
int
daa
mov
sub
pop
jmp
adc
jp
inc
pop
movsb
pop
adc
pop
lcall
aad
popf
inc
dec
pop
les
xchg
popf
push
fld
and
call
fidivrs
adcb
sahf
adc
jnp
lret
jns
add
push
out
push
inc
xchg
stos
pop
out
lcall
adcl
push
aad
cmp
mov
xchg
aad
inc
or
nop
jmp
mov
inc
push
imul
cmp
dec
ficoml
test
pop
mov
out
repz
jns
aas
int
imul
dec
sbb
stos
mov
dec
dec
sarl
and
jg
outsl
or
inc
mov
xor
xchg
fnstcw
out
gs
push
push
pop
in
and
dec
push
fnstenv
sbb
cmp
aaa
mov
xchg
rcrl
stos
out
popa
mov
test
ljmp
mov
jno
mov
aam
orb
pop
add
jg
jns,pt
jge
jbe
les
mov
xor
mov
arpl
pop
stos
dec
mov
cmp
mov
movsb
adc
sbb
and
add
and
out
push
stc
or
or
adc
push
sbb
inc
dec
jae
je
cmp
aaa
or
scas
sbb
pushl
and
mov
lret
les
call
dec
enter
push
adc
cmp
pop
repnz
jg
jp
jns
push
sbb
inc
mov
cmpsl
mov
ds
bound
lcall
xlat
xchg
xor
addr16
adc
pop
loope
jle
mov
xchg
push
in
push
bound
add
jae
sarl
outsb
lcall
repnz
icebp
and
arpl
or
mov
push
mov
subl
lods
mov
cli
jo
add
hlt
les
fdivrs
and
rcrl
lcall
mov
push
sbb
push
pop
ret
addl
push
add
dec
inc
ja
into
sahf
sbb
lret
lock
push
sbb
mov
dec
inc
mov
data16
mov
dec
adc
sbb
aas
mov
lcall
inc
pop
mov
push
and
insl
lcall
push
pop
inc
div
popf
fistpl
pop
cld
loopne
xlat
and
repnz
xor
pushf
lcall
jge
mov
mov
movsb
std
cwtl
fstl
enter
cmc
mov
arpl
jo
cmp
loopne
sbb
mov
fdiv
adcb
xor
lret
pop
scas
divl
icebp
test
fucomip
aam
dec
jge
xor
xchg
repnz
out
cmpsb
call
stos
sbb
and
mov
enter
test
outsl
inc
shlb
and
clc
xor
xor
xchg
cmpsl
or
arpl
out
mov
lea
mov
lods
sub
adcb
mov
movsl
push
xchg
out
ds
mov
dec
add
inc
pop
xor
mov
sahf
jecxz
inc
push
jno
std
adc
dec
test
sub
and
pop
pop
dec
out
cli
test
fisubs
sti
pop
test
stc
outsb
mov
stos
mov
push
sbb
xchg
lods
pop
std
or
lahf
xor
ficomps
rorl
xor
stc
inc
in
push
pop
popf
jbe
aam
mov
mov
sbb
roll
aad
fistps
push
std
ss
jle
daa
sbbb
and
sbb
outsl
mov
xor
fucomp
les
pop
mov
movsb
mov
js
pop
fisubrs
add
cwtl
test
out
scas
test
in
push
add
push
xchg
fs
adc
lods
push
lea
insl
iret
stc
incl
mov
lcall
adc
jg
add
cmpsb
shlb
push
fstpt
and
pop
add
lahf
iret
add
daa
xchg
inc
scas
pop
movsb
sbb
out
jge
rcr
sti
mov
and
cld
cmc
daa
adc
imul
and
shlb
fwait
jae
pop
dec
pop
imul
jno
adc
or
shlb
addl
in
iret
inc
push
pusha
rcrb
push
addr16
adc
push
and
cmpsb
sbb
cld
out
push
pop
or
xchg
subb
mov
mov
pushf
out
cld
imul
mov
sub
dec
sarb
jbe
cmpl
cmpxchg
mov
or
mov
xor
enter
sub
push
lahf
pop
mov
jno
jb
xchg
or
jmp
jnp
xchg
fnstcw
dec
popf
cmpsb
repnz
imulb
push
mov
jp
nop
and
sarl
mov
mov
add
fldt
sahf
stc
mov
xchg
and
daa
jg
dec
movsl
mov
sub
rcr
sbb
xchg
mov
cmp
fs
xchg
faddp
ret
or
or
xchg
mov
das
das
mov
adcl
inc
sub
loop
es
jne
shrb
fnstenv
xchg
mov
lods
daa
sub
mov
mov
sub
sbb
in
jge
imul
daa
xor
sub
jns
shlb
pusha
inc
data16
inc
add
testl
popf
jl
sub
push
mov
int
daa
xchg
inc
pop
cs
popf
sbb
and
filds
iret
repz
adc
push
adcl
xchg
mov
jge
sub
nop
dec
test
push
hlt
dec
cmc
fsubrs
push
cld
in
mov
jmp
je
dec
mov
int3
out
cmpsl
and
mov
imul
mov
insl
lea
sbb
lahf
mov
lret
cmp
stc
imul
cmp
and
popl
or
dec
lods
fwait
dec
fists
lahf
into
sub
popf
sbb
xor
dec
repz
dec
test
movsl
hlt
push
popa
add
jno
arpl
and
push
xchg
cwtl
test
aad
clc
in
adc
cmp
push
xchg
cwtl
test
aad
clc
in
adc
add
dec
push
pop
inc
push
xchg
cwtl
test
aam
stc
in
adc
cmp
dec
push
pop
lds
js
mov
das
add
push
cmp
or
sbb
in
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
subb
mov
inc
mov
sbb
ljmp
inc
stos
push
aas
pusha
mov
subb
mov
sub
cmp
or
sbb
ljmp
subb
lcall
mov
shrb
cmp
or
sbb
inc
xor
dec
scas
xor
inc
out
aas
aad
clc
push
lcall
fmull
or
pop
fldpi
rorb
push
popa
je
repnz
insl
adc
pop
enter
cld
sub
movsl
aas
test
or
add
mov
lret
shlb
cwtl
push
dec
cmpsl
movsl
jmp
dec
scas
testb
inc
add
adc
jo
cmpb
lret
pop
out
lds
gs
in
xor
mov
jne
pop
jg
jo
inc
iret
dec
movsl
cltd
sub
das
arpl
mov
call
xor
scas
inc
xor
pop
jge
outsl
test
cmp
insl
jg
cli
push
lahf
loopne
sbb
adc
lock
dec
push
jp
dec
mov
shrb
cmp
or
sbb
ljmp
inc
stos
push
mov
roll
xor
inc
mov
dec
add
dec
pushf
inc
lret
push
leave
add
cmc
js
dec
fsubrl
shlb
cwtl
jge
sbb
inc
and
rorl
add
sub
and
aas
mov
sarb
loopne
lock
ljmp
inc
stos
push
mov
subb
mov
sub
cmp
or
sbb
ljmp
inc
stos
push
mov
subb
cmp
out
sarb
mov
mov
add
sub
xor
repz
cmp
mov
xor
xchg
ja
test
xchg
push
mov
push
les
loopne
repz
aad
fiaddl
sbb
dec
pop
adc
ss
pop
or
lcall
cltd
fnstsw
push
pop
fcmovne
rclb
in
repnz
add
xor
sub
ficompl
outsb
jg
xor
xchg
cwtl
mov
mov
movsb
idivl
aad
into
xor
repz
in
movntq
mov
cmp
imul
subb
mov
test
call
xchg
inc
aas
or
mov
cwtl
stc
mov
jb
pop
fwait
out
fs
xor
imul
push
lds
xor
cmp
shrd
inc
enter
sbb
ss
mov
or
mov
mov
cmp
lcall
hlt
sbb
add
push
mov
int3
xorb
das
setb
dec
dec
sub
leave
aaa
sub
add
jge
sbb
imul
idiv
push
inc
sbb
icebp
outsl
pop
in
cli
mov
sbbl
mov
or
mov
or
add
mov
sbb
xor
xchg
add
aam
xchg
inc
dec
scas
cmp
ljmp
and
cmpsl
sarl
fxam
lcall
inc
insb
int3
paddw
hlt
dec
mov
adc
lahf
ret
mov
repz
jno
fsubs
xchg
inc
pop
cld
dec
decb
in
dec
mov
inc
shll
cmp
ret
rorb
push
mov
fists
cmp
daa
push
dec
jae
xor
xor
sbb
fsubrs
push
adc
in
jb
aam
rorb
cmc
cmpsl
sti
add
clc
pusha
push
xchg
mov
pop
xchg
icebp
fwait
jp
loope
psadbw
jnp
jne
inc
xor
pop
sahf
jl
cmp
sub
sahf
jl
mov
nop
in
mov
mov
popf
mov
sbb
pop
je
cmp
or
lahf
jbe
loopne
pop
out
aad
cmp
dec
jl
cmp
mov
je
cmp
mov
outsl
sub
shrl
inc
out
dec
fs
xor
inc
adc
inc
aaa
ds
adc
mov
jb
icebp
jp
push
mov
into
jge
xchg
add
xchg
add
jmp
testl
rorl
ret
test
and
enter
stos
stc
out
fstl
jecxz
jmp
dec
mov
aaa
imul
ret
lds
jnp
in
push
or
imul
mov
cmp
cli
push
fists
sbb
inc
push
jns
push
mov
ja
dec
mov
rclb
jmp
int
setle
in
fistpl
sub
out
loop,pt
adc
sub
cmp
out
adc
mov
stos
std
int
popf
xchg
sbb
mov
push
mov
das
add
pop
jle
movb
in
fildl
mov
sub
push
mov
adcb
and
mov
dec
shlb
scas
adc
jmp
imul
push
negl
in
ret
mov
pushf
sub
iret
outsb
xor
mov
jno
push
andl
hlt
daa
lock
mov
sub
dec
add
xchg
mov
push
jge
sbb
movsl
xchg
mov
push
icebp
lret
sahf
jb
lock
pusha
adc
dec
cmp
push
loopne
cmp
mov
mov
jne
es
sti
cmpsl
add
loop
or
gs
adc
pop
pushf
ret
dec
cmpsl
stos
and
loop
into
mov
and
sbb
xlat
cmp
jae
scas
dec
orb
shlb
outsl
jae
and
push
cmp
in
lret
pop
pop
or
into
neg
inc
adc
pop
lret
testb
into
or
add
jnp
stos
jnp
lock
insl
rclb
adc
mov
or
xor
dec
jmp
cmpsb
adc
xor
jo
cmovo
mov
dec
mov
arpl
mov
lea
mov
or
jecxz
xlat
xlat
cmp
pop
jnp
dec
mov
ret
mov
and
pop
sbb
out
call
cmp
inc
pop
clc
jle
fisubl
inc
push
cmp
push
adc
add
jns
xor
dec
jg
xor
jp
aam
in
in
and
cmpsb
jl
xlat
push
jmp
pop
inc
popa
dec
mov
fdivl
data16
or
movsb
pop
test
jmp
or
inc
mov
stos
out
sbb
mov
cmpsl
ja
mov
push
aad
out
rcrl
movsl
cmpsl
rcll
xchg
push
push
jb
es
sbb
pop
sbb
int
xchg
loope
jnp
add
xor
imul
cmp
dec
xchg
adc
cmp
pop
xchg
lds
jmp
pop
adc
mov
jae
mov
inc
lret
sub
pop
pop
mov
fcom
int
test
mov
cs
push
add
loop
cmc
pushl
rcll
push
fildl
imul
jp
out
add
in
adc
xor
cmpsl
jae
mov
dec
pop
out
fidivl
iret
push
dec
lret
test
mov
lcall
sbb
xlat
std
mov
sbb
add
cltd
mov
dec
inc
inc
fcompl
or
and
insb
pop
cld
addr16
sbb
inc
fsubl
pop
jns
andb
test
pop
sbb
and
and
jle
scas
sub
push
lock
pop
int3
xor
sub
mov
mov
es
push
inc
ss
push
ss
push
jp
sbb
jl
clc
sbb
popl
mov
xor
shl
sub
cmc
and
sbb
leave
scas
inc
and
push
xor
out
shll
jle
cmp
xchg
mov
or
sub
inc
sbb
ss
sbb
jge
jb,pt
call
xor
push
dec
mov
jno
jmp
mov
mov
xchg
mov
mov
cmpsb
aad
jno
lcall
scas
inc
mov
sbb
jmp
cli
popf
pop
jmp
iret
xchg
cmp
hlt
push
mov
mov
pop
pushf
inc
pop
pushf
fistpll
mov
adc
jo
jb
gs
out
sub
jge
add
ja
push
adc
mov
adc
in
daa
xchg
out
sbb
adc
in
or
pop
sbb
popl
test
mov
mov
lods
fsts
dec
popf
adc
in
inc
mov
add
iret
sub
scas
out
mov
pushf
sahf
repz
loope
and
sbb
cld
call
inc
xor
pop
pop
addb
sub
daa
xor
sbb
push
sbb
mov
clc
sbb
xchg
lcall
sbb
arpl
push
mov
call
inc
shlb
sub
stos
mov
add
ss
cwtl
jmp
loope
movsl
pop
iret
jnp
scas
dec
fidivl
aad
pop
lods
mov
mov
pop
cmp
dec
adc
xchg
fsubr
scas
sub
mov
mov
subb
push
test
cbtw
int3
rcrb
pop
jae
imul
ficoml
das
hlt
push
iret
andl
rcl
jmp
popf
cmpsb
outsb
sub
push
lea
shll
mov
pop
jb
gs
inc
sahf
xchg
rol
fnsave
pop
or
inc
arpl
jp
xchg
mov
push
sub
jmp
cmp
fldt
sbb
or
sti
and
test
aaa
or
pop
decl
push
sbb
sbb
bound
xchg
scas
mov
dec
insl
mov
les
cltd
lahf
dec
pop
das
jo
je
mov
xor
popf
pop
cmp
cmp
pushf
jle
sarl
rcll
add
add
xchg
sti
lahf
lea
cld
xchg
dec
popl
fwait
mov
mov
ds
jbe
jecxz
aaa
sub
rclb
pop
popf
lds
add
sar
loop
mov
jb
cwtl
cli
mov
jns
popa
xlat
push
mov
gs
in
pop
mov
jmp
ljmp
scas
mov
adc
cmp
sti
hlt
add
push
fildl
imul
icebp
ds
pop
add
push
lret
push
mov
pop
xchg
or
movsl
cwtl
jbe
sub
sbb
mov
pop
mov
mov
test
mov
rcl
push
and
mov
testl
or
sbb
movsb
leave
xor
ljmp
shlb
cmp
inc
jl
pop
mov
data16
jecxz
sub
push
pop
dec
dec
jecxz
mov
inc
cmpsb
jg
add
adcl
lea
lods
cmp
daa
testb
iret
jecxz
jae
cli
into
xchg
pop
jns
addr16
adc
and
push
fsubs
lret
mov
sbb
shll
sbb
mov
xchg
out
stc
mov
mov
addr16
sahf
or
fs
mov
add
xchg
xor
bswap
sbb
outsl
lcall
mov
scas
mov
cwtl
push
mov
out
fnstsw
push
popf
mov
maskmovq
imull
jmp
int
xor
insb
jns
dec
mov
add
sahf
xchg
mov
dec
xchg
fwait
rcll
xor
add
jo
dec
das
jbe
push
and
loopne
add
jge
outsb
pop
sub
mov
cmp
aaa
mov
mov
mov
pusha
or
stos
xchg
pushf
shrb
mov
cmpsl
shrl
fisttpl
dec
cmpsl
shlb
dec
adc
rorb
pop
loopne
andb
adc
push
out
scas
jge
sbb
jns
and
inc
dec
or
jae
ja
movsb
movsl
scas
xchg
rolb
and
les
cwtl
xor
push
xor
fdivrs
pop
ds
test
pop
sbb
int
cmp
mov
jle
pop
sub
sbb
outsb
in
pop
add
fnstsw
adcb
inc
pop
adc
mov
loopne
mov
cmp
loopne
jo
dec
mov
sahf
inc
lds
mov
add
shll
cmp
repnz
cltd
imul
fdivl
test
xchg
or
test
xor
and
outsl
mov
sbbl
in
xor
and
fistl
gs
js
xor
mov
push
jno
sbb
pop
mov
push
sub
rolb
insb
xor
ficoml
push
jge
sub
cwtl
pop
int
pop
inc
push
negl
mov
cmp
ljmp
push
and
xlat
aad
je
aas
outsl
lods
ffree
push
push
into
jnp
dec
xchg
test
mov
fs
addr16
cmp
into
int
fidivl
pop
dec
es
jp
pop
adc
std
mov
fcoml
scas
mov
and
sahf
mov
jle
mov
xor
mov
mov
lea
lods
inc
cltd
loope
inc
pop
xchg
dec
scas
pop
std
dec
inc
cmpsb
rorb
mov
jmp
insl
dec
cs
repnz
push
loopne
sbb
sbb
inc
mov
loopne
add
sub
lock
mov
test
aaa
sbb
into
push
leave
jl
dec
ss
xor
daa
pop
sahf
insl
iret
or
dec
or
sub
scas
or
subl
sub
test
mov
jns
lock
call
adcb
mov
je
test
jge
sub
xor
fdivrs
or
out
dec
pop
aam
jmp
and
frstor
daa
cmp
xchg
jp
outsb
sub
movsl
and
push
mov
dec
add
jo
push
lret
mov
ss
out
xchg
xorb
cmp
call
push
mov
ljmp
sub
xorl
xor
mov
or
pop
or
div
dec
add
mov
sub
pop
push
mov
inc
cmc
sub
pop
pop
bound
iret
sub
xor
addr16
mov
xchg
adc
sub
mov
mov
mov
data16
popa
xchg
sub
popa
pop
ja
popf
xchg
mov
mov
cli
cmp
insb
popl
enter
and
pop
arpl
push
movsl
jnp
in
jno
sarl
in
xchg
and
mov
cmc
testl
pop
mov
sbb
mov
bound
es
and
pop
cmp
inc
scas
jae
inc
sbb
dec
aad
mov
cmpsb
inc
cmp
addr16
xchg
add
adc
fistl
in
xor
push
and
mov
ja
das
inc
push
icebp
aas
inc
loopne
daa
pop
inc
mov
dec
push
stos
inc
in
sti
pop
adc
push
lret
ret
mov
jns
push
aaa
push
sbbl
pop
insl
cmpsl
dec
fcmovb
or
dec
repnz
dec
arpl
push
xchg
mov
xor
cmp
mov
roll
adc
addr16
dec
mov
jmp
or
mov
jmp
xlat
mov
rolb
xor
pop
cmpsb
dec
dec
push
sbb
gs
inc
outsb
push
and
xchg
rcl
mov
int3
repz
or
jg
inc
jo
and
jecxz
imul
enter
dec
pop
pop
popf
shlb
loop
loopne
arpl
push
fstpl
movsl
incl
das
mov
mov
movsb
fdivs
call
imulb
jb
cmc
mov
insl
mov
lods
push
jnp
outsb
jb
sbb
push
addr16
mov
dec
xor
adc
insl
imul
mov
movsl
daa
lock
push
xor
push
xor
sbb
test
fisttpll
dec
pop
imul
xor
fnstenv
mov
xchg
fcoml
push
pop
and
xor
mov
push
mov
fisubrl
sbb
das
scas
sbb
daa
push
jae
fstl
out
lahf
mov
repnz
xlat
cmpsl
jp
push
jle
pop
jmp
xlat
cmp
lds
pusha
dec
cmp
pop
aas
pusha
push
pop
inc
pop
inc
push
xacquire
mov
shll
lds
xor
loopne
aas
dec
sbbl
outsb
lret
push
jo
mov
mov
xchg
imul
cmp
xlat
jmpw
xchg
jle
aaa
mov
dec
jg
stos
ret
ljmp
mov
dec
cmp
push
jns
es
dec
or
out
pushf
pushf
pop
jae
mov
mov
jb
cmp
popa
cwtl
lahf
stos
je
jb
cltd
inc
sub
daa
xchg
or
lock
push
mov
jg
pop
push
aad
push
fdivr
imul
mov
push
cwtl
cmc
pushl
mov
xchg
jmp
jl
andl
leave
pop
and
imul
test
js
cltd
jnp
es
fistps
add
xchg
gs
js
mov
rclb
adc
jge
cmp
loop
cmp
pop
paddb
outsb
lahf
test
xor
mov
push
decl
movsb
dec
popf
mov
inc
inc
daa
pusha
add
xchg
mov
jnp
pop
xchg
test
fwait
add
in
push
mov
xor
fstpl
shr
xchg
sbb
jl
popf
repz
lods
test
and
es
xor
lock
mov
add
in
xchg
xor
mov
push
sub
sbb
pop
ds
mov
inc
insb
in
cmpsl
jne
aaa
push
inc
stos
lods
ja
inc
sub
in
clc
dec
inc
mov
jnp
outsb
cmp
jmp
inc
xchg
fisttpll
in
sarb
cmp
sub
rclb
add
test
push
or
outsl
hlt
pop
inc
dec
insb
test
leave
jns
jl,pt
xor
outsl
adc
rcl
mov
xor
sbb
jns
sub
lahf
aad
insl
out
sub
stc
xor
lcall
jecxz
mov
cmpb
arpl
das
sub
pop
cmp
pop
mov
and
rol
fstpl
fdivrp
fldl
in
pop
xchg
push
fwait
or
xor
sbb
cli
inc
inc
push
cmpsl
xchg
rol
and
sub
lock
cmp
test
mov
jg
ja
iret
popl
add
pop
sub
cmp
dec
mov
out
push
jp
sub
inc
jp
jns
mov
out
lock
mov
mov
ret
fmull
or
test
pop
push
and
out
adc
add
outsl
inc
xlat
out
xchg
repz
pop
les
aaa
push
cmp
sub
stc
sub
cmpsl
mov
subl
popw
sbb
pop
sbb
inc
daa
lret
in
cmp
loopne
repz
jne
xchg
fisubrl
inc
mov
aaa
bound
sti
mov
jae
inc
xor
jge
ret
mov
popa
mov
sub
jae
das
das
push
pop
stos
notb
cmpsb
xor
stos
jbe
insl
jbe
mov
and
add
jg
ljmp
fsubl
es
clc
jmp
cmp
sbb
jecxz
cltd
mov
mov
jns
in
xchg
mov
stc
aam
add
jecxz
out
and
xor
pop
jmp
pushf
and
add
data16
or
cmp
movsb
add
xlat
ja
jns
pusha
dec
mov
cld
jg
sbb
add
ret
sbb
dec
repz
test
xchg
popa
rorb
mov
aas
pop
adc
mov
std
outsb
sub
call
test
inc
sub
dec
insb
push
push
stos
movsb
dec
jnp
lret
add
rorb
jnp
inc
imul
vpunpckhqdq
shll
pop
ret
jnp
mov
mov
into
xchg
loope
int3
adc
cmp
adc
sub
mov
xchg
xchg
cmp
arpl
mov
int
sub
and
clc
pop
cmp
nop
dec
sbb
cmp
test
fstl
fxch
sbb
cmp
test
adc
pop
gs
or
movl
jns
fnstcw
mov
cmp
cmpb
sbb
fldt
mov
aas
cmpl
jle
cmp
loop
mov
lods
enter
lds
jg
mov
popf
movsl
jle
pop
test
push
sbbb
pop
adc
mov
mov
lods
push
ficoms
ja
std
xorps
negb
cmp
push
pushf
ds
pop
add
dec
out
inc
inc
shll
int
incl
or
mov
push
lcall
xchg
mov
lahf
invd
enter
leave
sub
xor
sahf
mov
mov
mov
lret
dec
and
xchg
push
xor
hlt
jmp
mov
xchg
inc
ret
or
call
add
cltd
jp
sbb
sub
loope
xor
mov
xor
mov
stos
mov
incb
jo
pusha
xor
pop
push
testl
fnsave
sub
pusha
lods
inc
test
inc
mov
jg
mov
push
mov
add
xchg
mov
xchg
adc
pushf
mov
inc
or
loopne
jb
pop
add
lods
cmp
stos
ljmp
adc
mov
sub
fwait
sti
test
xor
cmp
pushf
movsl
inc
fcmovne
std
push
jge
dec
popa
das
mov
push
fwait
js
js
and
mov
cmc
cltd
jecxz
sbb
cli
push
ss
xchg
popl
sahf
push
ret
lods
loope
js
cmpb
push
movsb
negl
jl
mov
lret
jne
ljmp
scas
xor
jns
lock
imul
xor
inc
syscall
leave
movsl
pop
add
adc
jmp
sub
xchg
rcll
jecxz
lock
sbb
ficoml
mov
nop
call
arpl
das
xchg
fldl
int
test
push
or
jns
sub
adc
pop
mov
mov
insl
js
adc
std
dec
inc
add
mov
pop
test
xor
inc
js
cmp
imul
mov
and
out
and
adc
mov
std
enter
js
ds
daa
mov
in
jmp
mov
stos
rcll
adc
in
cli
insb
shr
sarb
pop
pop
mov
jb
push
or
sbb
shll
test
mov
dec
lods
dec
push
and
jno
push
bound
xchg
rolb
dec
dec
mov
jne
fs
stos
or
outsb
or
fimull
dec
xchg
ret
jmp
pop
shrb
cmp
or
sbb
ljmp
inc
stos
push
mov
subb
mov
sub
cmp
or
sbb
ljmp
inc
stos
push
mov
subb
and
mov
inc
sub
mov
add
cli
and
xor
inc
stos
push
mov
subb
mov
sub
cmp
or
sbb
ljmp
xor
and
jne
gs
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
mov
jb
cmc
adc
and
insb
cs
loop
xchg
insb
sbbl
mov
jb
cld
adc
add
xor
inc
cmp
sub
sbb
or
jl
insl
sbbb
mov
jb
cld
adc
add
xor
and
psraw
mov
ficomps
xlat
and
xor
mov
daa
hlt
push
pop
ds
test
out
mov
or
push
push
push
arpl
jno
cld
add
and
mov
imull
subb
sbb
xor
lds
push
jmp
cmp
or
mov
fistpll
dec
outsb
mov
mov
xchg
adc
add
mov
addr16
insb
bound
sub
add
inc
and
or
in
xchg
mov
or
int3
jae
xlat
pop
mov
fsubrl
in
xchg
cwtl
cmpl
fwait
mov
pop
jg
lods
inc
pushf
jb
cld
adc
add
xor
and
sub
sbb
or
jl
insb
sbbb
fsts
cmp
xor
and
push
dec
push
dec
mov
dec
xchg
cli
out
lds
sarb
fsubrs
cmp
add
mov
mov
mov
xchg
or
mov
or
adc
mov
xor
and
sub
sbb
or
jl
insb
sbbb
mov
jb
cld
adc
add
xor
and
sub
sbb
or
jl
insb
sbbb
mov
sbb
in
lods
ret
push
pop
sbb
sbb
adc
mov
mov
mov
push
sub
ds
fsubrl
jmp
ret
push
or
add
imul
lods
inc
shll
and
lock
gs
inc
mov
push
mov
mov
add
dec
dec
adc
pop
xchg
mov
decb
adc
arpl
push
fstpl
dec
sbb
jge
xor
xchg
xchg
inc
es
jae
xor
push
xchg
mov
push
dec
loope
orb
insb
push
mov
lcall
icebp
nop
mov
js
jecxz
mov
pop
push
push
inc
call
mov
fistps
cmp
movsl
dec
or
movb
mov
bound
roll
xchg
add
gs
mov
lds
pop
dec
push
dec
fcmovnbe
pop
mov
fwait
sub
sbb
mov
inc
lods
pop
ss
out
pop
mov
cld
shlb
dec
jle
add
jp
jmp
stc
call
inc
in
nop
push
dec
and
je
inc
inc
arpl
jnp
jns
and
add
pop
xchg
push
or
and
jne
push
fnstcw
jmp
or
aaa
popa
add
aaa
cmpsl
add
pop
ret
icebp
push
mov
aaa
subb
adc
fwait
cwtl
arpl
loope
imul
movsl
aad
cltd
rcl
dec
test
std
mov
and
movsl
out
sub
repnz
lret
mov
cmp
cmc
idivb
sub
mov
sbbb
enter
fisubs
lret
addr16
pop
imul
stos
fimuls
nop
scas
and
xor
xor
lods
icebp
cmp
jo
js
push
push
inc
mov
xchg
imul
cmpb
or
xchg
outsb
mov
and
xlat
arpl
es
dec
sbb
sub
xor
jno
insl
add
movsb
sahf
inc
push
mov
xchg
dec
aaa
rcll
iret
mov
mov
lods
pop
stos
scas
sub
loop
mov
stos
xchg
ret
shl
mov
fwait
pop
es
in
mov
mov
stos
sub
dec
fstl
fdivl
mov
shr
cmp
cmp
mov
sbb
cmp
insl
in
jb
les
lret
lret
hlt
dec
jl
ret
xchg
and
test
xor
add
sbbb
push
jno
frstor
fisubrs
and
xchg
sub
add
rcll
adcl
shld
or
sub
cmp
and
mov
mov
pusha
cmp
aaa
cmp
jecxz
arpl
out
ficompl
push
and
jo
ja
mov
je
cwtl
stc
andb
mov
sub
dec
xor
scas
and
sbb
outsb
sbb
fsubs
in
stc
aad
adc
mov
or
inc
adc
mov
dec
or
pushf
push
iret
cmp
adc
jmp
movsb
cwtl
mov
push
das
aam
push
jl
frstor
xchg
aad
call
mov
fimull
mov
clc
push
cmc
cmp
mov
jo
xor
std
insb
cmp
jmp
xchg
clc
enter
mov
cwtl
mov
lock
push
std
push
adc
lods
in
scas
mov
mov
loopne
je
xor
cli
shrb
scas
inc
and
into
push
std
test
add
mov
jbe
mov
mov
hlt
sbbl
enter
and
ret
adc
jo
js
movsl
jmp
out
dec
sbb
dec
in
mov
dec
call
xchg
xor
mov
sbb
dec
imul
ljmp
sahf
xor
adc
adc
lods
and
cmp
stc
lods
inc
aam
cmp
adc
mov
jns
insb
xchg
jae
arpl
lret
dec
lcall
sub
sub
loopne
xchg
movb
jnp
sahf
movsb
jle
xor
push
or
inc
jbe
push
xchg
scas
lcall
decb
rcrb
lock
out
repz
out
lds
push
sub
dec
push
arpl
negb
fdivl
negl
inc
cmc
loopne
xchg
xor
imull
cltd
inc
cmp
int3
popa
add
mov
inc
lahf
push
lahf
lcall
xchg
xor
jae
out
cmp
mov
popa
mov
xchg
ds
aas
xor
in
mov
loope
scas
push
mov
push
cld
mov
cs
rcrl
shrl
lea
jge
insl
stos
cmp
mov
inc
in
and
inc
scas
mov
daa
mov
nop
push
fldenv
movsb
inc
pop
insl
adc
gs
mov
mov
scas
pop
pop
lods
and
mov
insl
iret
pop
js
shl
int
or
add
dec
ja
shr
stc
int
aas
jmp
cmp
imul
std
xor
jnp
sbb
loope
pop
mov
int
inc
adcb
dec
adc
aam
in
loope
pushf
mov
sbb
mov
sub
out
jnp
lret
lds
inc
sbb
jbe
fdivr
inc
adc
add
push
cmp
mov
in
inc
cmc
or
mov
cmpsb
adc
mov
or
push
dec
sarl
add
adc
popa
sub
add
add
mov
int3
push
fildl
out
sub
mov
jbe
inc
mov
sub
pop
add
stos
xchg
pop
stos
push
jecxz
mov
popa
mov
dec
insb
xchg
mov
sti
fs
js
mov
dec
sub
arpl
mov
jecxz
inc
push
test
rcll
movsl
fs
movsb
pop
push
adc
insb
call
mov
mov
sub
pop
repnz
add
cmp
cld
movsl
xchg
pop
mov
rcll
add
out
incb
insl
je
jge
push
and
cmpb
aaa
fucom
loop
or
xor
adc
pop
sub
push
add
xorl
cmc
shrl
mov
mov
inc
sbb
cltd
cmp
scas
jbe
scas
and
data16
push
subb
fdivl
fiadds
mov
jbe
jb
test
sub
adc
popa
jl
xchg
mov
insb
test
cli
pusha
sub
shll
shrb
roll
jno
or
cmp
out
lods
int3
fisttpl
leave
ror
sbb
mov
xchg
jle
jnp
ret
jge
sarb
ss
push
je
inc
pushf
mov
in
mov
inc
insl
mov
add
mov
fdivrs
lret
test
push
jnp
dec
in
jae
enter
leave
int3
mov
inc
aaa
roll
pop
pop
adcl
cwtl
in
inc
loop
fcoml
adc
cli
loope
xchg
sub
test
sub
pop
xchg
test
adc
xlat
xchg
mov
aas
push
pop
out
pushf
sub
in
cmpsl
lock
mov
ret
fistpl
cs
fcmovne
test
icebp
hlt
fnsave
cmp
mov
ficoms
ret
pushf
testl
mov
fcomps
push
jnp
jo
push
mov
jecxz
nop
sarb
mov
nop
fsts
mov
sub
fidivrs
test
jmp
mov
mov
lock
xchg
mov
mov
cwtl
add
ds
sti
add
sub
jle
push
push
subl
ljmp
push
dec
pop
iret
dec
outsb
and
stc
pop
xor
push
out
sub
adc
mov
cmp
mov
stos
adc
sbb
mov
inc
sbb
int
stos
cmp
push
insb
cwtl
fsub
cli
sbb
xor
xor
add
dec
push
rcr
lea
mov
shll
stc
xlat
cmp
jle
pusha
loope
add
mov
mov
cmp
dec
mov
sbb
push
pop
out
mov
pop
mov
repz
jae
nop
mov
jle
mov
push
data16
cmp
dec
adc
mov
in
fsubl
inc
pop
sahf
andb
and
imul
pop
mov
subb
mov
push
out
dec
arpl
fcomps
subb
rcll
inc
neg
mov
daa
sbb
sub
cmpsl
pop
jle
and
loopne
mov
adc
popa
call
add
popa
fsubs
sahf
sbb
cltd
push
dec
adc
mov
lds
mov
and
hlt
xor
or
test
ss
cmp
test
adc
jl
inc
scas
in
roll
mov
mov
popf
mov
push
loope
lahf
movsl
push
lcall
mov
xor
icebp
mov
mov
jae
loopne
mov
cmp
xchg
xor
xor
jle
dec
repnz
movsb
divb
test
sbb
out
mov
xlat
icebp
and
push
mov
pushf
xchg
in
mov
mov
rol
jle
aam
mov
sbb
int3
fbld
jp
ljmp
pop
stos
insb
clc
daa
sbb
adc
into
cmp
adc
scas
arpl
add
mov
mov
pop
nop
inc
jmp
add
repnz
int
arpl
cmp
adcl
in
hlt
fiaddl
push
int
and
add
into
dec
les
xchg
lods
push
mov
sbb
cmp
mov
in
sbb
loop
add
cmpb
imul
jae
ljmp
push
xor
ja
xchg
xchg
arpl
aad
cmp
hlt
mov
pop
in
enter
iret
shlb
jp
pop
int3
stc
pushf
add
addr16
xlat
mov
dec
sbb
sub
adc
add
mov
mov
cs
cmpsl
mov
shlb
out
dec
pop
or
mov
dec
mov
loop
jo
and
jecxz
cwtl
scas
or
xchg
lock
insb
xchg
dec
insb
or
test
jmp
popa
jne
mov
adc
aas
jae
pop
es
jmp
data16
sub
pop
fwait
xchg
mov
jmp
pop
ss
mov
lret
xchg
or
cmp
mov
xlat
inc
xcrypt-ofb
cmpsl
das
xor
daa
sbb
mov
and
pop
or
push
loop
outsl
pop
lods
xchg
test
dec
lret
int3
nop
mov
mov
in
hlt
loope
outsb
in
sarl
rorb
cmpsb
fs
jge
test
fnstcw
mov
int
cs
mov
loope
jnp
add
movsl
xchg
in
and
adcb
outsb
fnstcw
movsl
int
mov
loope
inc
adc
fidivrl
cwtl
lret
push
dec
les
dec
das
je
mov
fnsave
sbb
and
aam
mov
inc
mov
xchg
mov
fwait
cltd
mov
lods
cmp
stos
mov
mov
sbb
jbe
cmc
cmp
bnd
add
mov
stc
cmp
add
push
push
mov
dec
add
sbb
sub
xor
int
aad
scas
xchg
cmp
xchg
xchg
mov
daa
mov
mov
repz
addl
jmp
mov
mov
pop
sbb
mov
lret
ja
fs
jmp
test
cmp
xchg
test
fld1
mov
pop
outsb
sub
in
mov
rep
inc
fiadds
add
leave
jle
add
outsb
mov
mov
fs
add
push
dec
cmpsb
adc
pop
cs
jo
insl
call
cmp
iret
gs
int3
aad
lret
push
lcall
cmp
jecxz
outsl
sysenter
sub
xchg
cltd
cmp
mov
sub
or
add
mov
xor
rolb
push
jo
inc
pop
dec
andl
lret
or
test
jmp
paddb
jp
xor
cmp
push
pop
mov
jmp
daa
adc
and
mov
rol
dec
cli
jle
outsb
mov
repz
cmp
vmovaps
shl
cmpsb
xchg
nop
adc
push
jmp
and
imul
xchg
sbb
lock
sbb
aam
or
mov
adc
or
loope
ljmp
pop
xchg
push
in
call
push
and
sbb
xor
xor
xchg
sub
and
repz
xchg
pop
jns
sbb
int
popf
ficomps
adc
out
call
mov
call
mov
sub
mov
fildll
shrl
addr16
fsubrs
or
push
mov
mov
out
xor
and
rol
lea
sbb
push
aaa
xor
inc
sbb
cmp
int
scas
repz
daa
mov
fiaddl
mov
push
mov
lcall
mov
subl
mov
mov
adc
mov
scas
jnp
je
int
adc
iret
sbb
inc
insl
sahf
inc
and
ljmp
sbb
sbb
mov
mov
jge
or
test
xor
loopne
fcompl
addr16
dec
cmc
scas
mov
jbe
js
dec
push
movsb
dec
or
sahf
es
mov
sbb
sbb
sti
gs
sarb
lock
cmp
cmp
and
ja
xchg
ret
vshufps
dec
xchg
inc
sbb
cwtl
int3
clc
dec
stos
cmpsl
jo
iret
cmpb
xchg
loop,pt
jecxz
jae
mov
xor
cld
and
popa
adc
and
jns
push
movsb
stos
pop
bound
fs
push
out
sahf
inc
lds
xchg
pop
xor
pop
pop
and
push
mov
leave
cltd
cmp
push
scas
stos
and
stos
xchg
push
and
notl
and
pop
cmc
mov
push
nop
aas
cmp
scas
lcall
cmp
pop
dec
hlt
jb
sub
cmp
je
pop
lret
aas
popa
test
adc
push
mov
mov
call
sbb
adc
ja
fwait
stc
mov
fldt
repnz
pop
jae
lds
mov
mov
mov
push
gs
popf
sahf
lea
xor
mov
popa
movsl
fldt
push
stc
mov
jno
push
in
addb
cli
or
xchg
sbb
add
clc
xchg
mov
inc
mov
mov
or
dec
jmp
movsl
addr16
les
insb
mov
imul
mov
bound
mov
cltd
test
rcrl
jl
and
sahf
mov
inc
inc
or
or
ja
pop
add
jle
enter
add
sarl
mov
push
ds
pop
mov
nop
mov
cli
arpl
lea
push
insl
enter
sub
in
jl
adc
stos
out
repz
ror
pop
sahf
imul
jmp
test
adc
repnz
mov
adc
push
data16
sbb
push
es
shld
pushl
dec
in
push
pop
mov
xchg
lahf
mov
ja
test
ficompl
inc
cld
add
leave
and
adc
jecxz
jne
fildll
push
mov
sbb
cmp
movb
insb
cld
mov
jns
shl
daa
jl
pop
pop
enter
rorb
outsb
in
data16
push
add
mov
in
inc
xchg
and
mull
dec
mov
sub
or
push
mov
loop
dec
lods
outsb
or
fldcw
fwait
push
fiaddl
push
and
pop
xchg
scas
mov
lahf
mov
inc
mov
in
call
popa
push
lods
test
andb
nop
cltd
fsubrl
add
dec
pop
pop
sarb
mov
ja
fwait
dec
sbb
sub
mov
sahf
mov
mov
xchg
xor
movsb
jbe
and
sbb
loope
loope
jecxz
and
sbb
jle
fwait
push
and
xchg
out
pop
insl
and
fnstcw
sbb
pop
movsl
and
mov
xchg
adc
xor
add
jg
jg
scas
movsb
jne
mov
jg
dec
sbb
divl
jmp
fdivrs
or
nop
mov
fdivrs
std
push
sub
test
gs
jbe
clc
subb
push
movsl
inc
cmpsb
je
or
xlat
les
shl
mov
ja
xchg
xchg
test
ds
push
jle
ficomps
outsl
pop
cmp
jne
push
cmpsb
gs
mov
mov
xchg
sub
mov
or
or
popa
mov
add
jo
test
sub
rcr
leave
dec
mov
call
xchg
xchg
and
xchg
mov
sar
inc
lock
jecxz
adc
cmp
bnd
add
adc
call
pop
gs
pusha
mov
mov
jmp
inc
sbb
sbb
mov
das
repnz
stos
loopne
not
inc
shl
movsb
sarb
mov
cmp
popf
inc
pop
les
inc
fstpt
sub
cmpsb
jmp
mov
pop
inc
sub
mov
xchg
pop
rorb
cmpsl
inc
or
in
xchg
jne
add
inc
fiaddl
or
push
mov
dec
lods
xchg
xor
mov
xlat
stos
sub
data16
std
push
push
mov
out
test
mov
dec
jmp
sbb
sbb
cld
add
mov
lods
movsl
sub
push
mov
pop
in
xchg
pushf
pusha
shlb
mov
mov
inc
dec
sbb
and
bound
dec
int3
testl
xchg
dec
insb
adc
mov
push
clc
js
mov
aad
xchg
test
out
mov
out
enter
adc
sti
enter
shrl
dec
loope
cld
xchg
enter
lods
into
jne
je
jl
stos
stc
jo
test
adc
sub
inc
jo
xchg
sahf
ret
pop
ffree
inc
rorb
cmp
sub
sbb
in
test
fsubp
jmp
mov
ficomps
lret
pop
mov
lds
cmp
rcll
mov
fistps
xchg
cltd
xchg
xchg
jle
push
and
sbb
lcall
leave
in
jns
push
xor
rsm
bound
stos
bound
adc
push
movsb
fidivl
and
cmp
in
ret
and
loopne
fldcw
xchg
jmp
int
mov
jb
add
jbe
jnp
imul
xchg
repz
mov
sti
sub
ljmp
add
ret
js
fs
popf
mov
cwtl
jecxz
imul
xor
insl
sub
xchg
jbe
or
inc
jns
es
or
dec
xor
in
jle
jl
fisttpl
and
lods
clc
inc
nop
mov
ja
ljmp
das
and
popf
sub
mov
mov
and
pop
jmp
outsl
or
mov
sbb
les
push
test
mov
movsb
fabs
push
sarb
push
dec
push
and
jg
pop
xor
fiaddl
mov
inc
cmpsl
jns
and
clc
lret
aam
addr16
cmp
outsl
ss
xchg
pop
cmp
jmp
pop
movsl
lcall
data16
push
push
lods
xlat
scas
testl
dec
jmp
fstps
stos
pusha
pop
sub
loop
stos
add
jl
fmull
stos
outsl
jns
mov
lahf
pop
scas
jo
fistpll
sub
pop
add
xor
lods
mov
std
sub
jne
shlb
repz
lahf
jp
div
cltd
xor
cmp
pop
mov
das
test
xchg
mov
push
cmp
dec
adc
dec
and
out
cmp
and
dec
jb
je
shl
sub
cwtl
mov
jg
rcll
or
cmp
sahf
loopne
mov
or
and
int
jl
call
mov
pushf
fiaddl
pop
add
orb
lds
add
scas
xchg
fisubrs
icebp
or
mov
dec
dec
std
pop
sbb
ds
inc
sbb
and
int
loope
mov
fimull
repnz
cltd
adc
and
pushf
xor
sub
rcll
ljmp
jne
ret
push
push
movsb
sub
daa
aam
sbb
rcrb
push
test
inc
fidivs
clc
pop
pop
sahf
loopne
je
arpl
xchg
or
mov
push
aaa
sub
xor
or
pushf
addl
add
jl
clc
sub
jl
loopne
and
daa
push
addl
mov
shlb
mov
in
ret
out
sbb
ret
in
dec
movsl
add
rcl
mov
pop
ljmp
outsl
cmp
cmc
cmp
jb
cld
adc
add
xor
and
sub
sbb
or
jl
insb
sbbb
mov
jb
cld
adc
add
xor
and
sub
sbb
or
jl
insb
sbbb
mov
jb
cld
adc
add
xor
and
repnz
sbbb
mov
pushf
jb
cld
adc
add
loop
rcl
push
or
in
movsb
dec
mov
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
popf
inc
lea
mov
and
adc
cmp
test
insl
mov
lea
popa
lods
jno
add
adc
and
pop
or
jmp
jge
jge
insl
mov
out
xchg
movsl
sti
mov
les
aad
in
in
add
repnz
and
and
cmp
hlt
add
fistl
push
int
cmp
sub
fwait
dec
imulb
mov
jne
push
pop
dec
popf
movsl
pop
pop
cli
sbb
jb
lds
int
js
js
cwtl
ds
rcrl
mov
jge
xchg
cld
bound
jno
dec
cmp
sbbl
shrl
roll
mov
jge
insl
jbe
inc
popf
push
je
mov
adc
in
mov
or
shl
mov
pop
insl
int
xchg
add
xor
adc
loop
xchg
fldl
movsl
jmp
test
mov
push
mov
push
push
in
loop
addb
jmp
insl
fistl
jno
adc
fstl
std
and
mov
and
mov
insl
xor
call
sbb
mov
in
jbe
andb
inc
dec
xchg
pop
sub
pmullw
fdiv
pop
in
pop
rclb
fstpl
std
dec
mov
movsb
cmp
into
es
or
or
clc
xor
mov
or
int
std
and
xor
loope
icebp
pop
orl
popf
inc
lea
popa
lods
jno
add
adc
and
xor
loope
icebp
pop
orl
popf
inc
mov
lahf
mov
leave
xchg
fisubrs
pop
sub
ja
popf
movsb
mov
xor
jg
mov
subb
out
dec
inc
inc
aaa
notb
in
fistl
iret
sbb
push
int3
cld
pop
test
icebp
outsl
sub
dec
sarb
bound
int3
rolb
push
imul
outsl
mov
push
pop
mov
repz
iret
int3
cmp
pusha
xchg
outsb
test
jnp
leave
repnz
cli
pop
mov
insl
in
dec
mov
out
inc
push
addl
mov
jae
cmp
repz
js
jae
inc
jns
adc
cmp
mov
mov
lods
sbb
movsb
xchg
add
repnz
push
sbb
pop
add
cmp
int3
lods
pop
sarb
push
push
pop
test
lret
into
dec
mov
xlat
mov
fimuls
outsl
cmp
sar
orb
add
mov
inc
push
xchg
test
lea
stc
adc
pop
nop
inc
xchg
scas
subb
fisttpll
jle
ret
inc
stos
pushf
inc
cltd
jg
bnd
repz
scas
hlt
out
mov
pop
andl
pop
pop
or
loope
pop
xchg
fildll
jmp
rclb
or
sub
and
mov
push
or
ljmp
imul
fiadds
and
and
mov
lahf
cli
cmp
sbb
mov
test
mov
loope
ljmp
xchg
lods
arpl
xor
imul
stos
push
mov
loope
xchg
imul
cld
ret
adc
loop
jne
mov
arpl
xor
push
xchg
push
outsb
jns
jns
or
adc
add
cmp
and
addr16
lea
sub
cmpsb
popa
mov
stos
mov
jg
lock
xchg
jg
push
das
fwait
or
dec
stos
mov
ja
sub
push
ret
push
add
pop
sbb
xor
lods
int3
out
out
jne
sbb
mov
pop
and
fs
mov
fmull
lods
shrb
pop
mov
pop
lods
jecxz
add
cmp
adcl
int3
aas
stos
fisttpl
out
pop
dec
cmp
je
sub
xchg
pop
hlt
pop
cmpsb
cmpsb
lcall
aam
lahf
insb
scas
imul
les
insl
fadd
mov
subl
xor
sti
push
jo
adcl
dec
mov
dec
xchg
or
mov
xor
addb
hlt
sbb
in
push
fadds
push
cmp
push
add
add
mov
outsb
pushf
popf
jae
xchg
std
jnp
test
cmc
sbb
sbb
cld
in
xchg
xchg
or
mov
mov
loope
pop
xorb
ror
out
mov
xchg
faddl
jb
xchg
lock
adcl
xor
and
in
enter
bound
push
xchg
xchg
xor
cwtl
out
pop
aaa
ficompl
test
mov
mov
sbb
leave
stos
addb
iret
mov
dec
icebp
push
popf
push
mov
and
fs
mov
push
pop
dec
in
xchg
jle
fildl
out
repnz
sbb
adcl
idivl
das
mov
stos
xchg
test
dec
inc
xchg
jnp
xor
loop
imul
ds
dec
push
popa
ljmp
jo
cs
and
mov
mov
mov
push
lea
push
int3
movsl
orl
push
pusha
ds
jge
imul
push
ss
hlt
rcll
mov
test
lcall
je
mov
xlat
inc
aad
dec
fcmovnbe
mov
insb
xchg
push
mov
icebp
lcall
inc
fstps
lahf
cli
add
setp
pusha
fs
mov
inc
mov
jno
mov
pusha
out
add
pusha
mov
mov
scas
lods
jmp
test
or
xchg
jne
imul
fs
fimuls
mov
rcrl
adc
cli
test
pop
rcll
mov
enter
cmp
jb
outsb
or
test
mov
xor
fs
addb
leave
fwait
push
dec
xor
and
das
shll
push
inc
add
or
xlat
pop
push
mov
cmp
data16
mull
adc
adc
dec
dec
push
jne
ja
cltd
lcall
imul
pop
icebp
sbb
push
mulb
icebp
outsb
xor
mov
sahf
mov
scas
test
loopne
inc
sbb
das
sahf
xchg
dec
loop
and
loopne
out
cmp
push
data16
jmp
iret
dec
mov
sub
xor
outsb
sarb
or
sete
aaa
cmp
pop
repz
je
popa
popa
out
stos
inc
push
ret
aaa
hlt
ret
adc
lds
xchg
das
jg
loope
push
mov
xor
mov
and
test
jns
push
data16
inc
iret
jns
cmc
jae
mov
cwtl
fwait
push
mov
xorl
int
outsb
in
lods
ret
xchg
nop
or
push
dec
jne
arpl
test
icebp
ss
cwtl
sub
sub
bound
lods
jae
sub
fcmovnbe
arpl
es
fldcw
hlt
repnz
push
das
sub
lahf
pushf
push
dec
and
cwtl
push
orb
out
outsl
js
je
push
adcl
lahf
sbb
hlt
daa
lahf
jge
mov
xchg
idivl
outsb
clc
fisttpl
andb
movsb
lahf
adc
jae
mov
sbb
addr16
test
outsb
cmp
cwtl
adc
stos
push
cmp
and
out
dec
pop
sbb
adc
fcompl
mov
inc
xchg
das
cltd
test
push
int
nop
mov
mov
adc
add
xor
sbb
out
xor
xorl
out
js
in
or
insl
mov
stc
mov
sub
sahf
int
fwait
clc
mov
mov
cli
or
clc
mov
icebp
dec
jb
lcall
mov
inc
and
in
ds
xor
mov
sbb
jns
popf
cltd
pop
rorb
pop
rclb
add
sub
iret
orl
mov
add
add
xlat
cmpsb
out
and
pop
imul
nop
cmp
stos
in
cmovnp
jecxz
mov
adc
sub
ljmp
aam
xlat
xchg
repnz
std
fisttpll
and
add
mov
jmp
pop
sub
mov
test
xchg
fisubrs
mov
adc
jp
outsl
and
mov
inc
or
adc
jle
in
sahf
ds
xchg
jge
xchg
mov
cmpsl
push
cwtl
mull
push
xor
push
pop
nop
sbbl
mov
and
xor
jl
lods
test
xchg
lret
repnz
pop
dec
sub
dec
test
dec
jno
fldcw
pop
nop
cs
sub
nop
pop
call
jl
std
popl
rcr
adc
call
jo
xor
fwait
dec
add
sbb
push
aaa
push
es
fcoml
push
push
aas
fisubl
pop
mov
xchg
scas
std
pop
or
jp
insb
lcall
sbb
sub
pavgb
and
add
stos
sub
push
roll
rorb
xor
mov
add
mov
ret
fldl
add
sbb
adc
xor
rcrb
push
in
adc
adc
or
inc
in
stos
mov
mov
mov
daa
push
sub
mov
cltd
or
inc
fcmovne
mov
xchg
dec
loope
lcall
shll
or
and
test
mov
jmp
lods
mov
xchg
cmp
outsl
fwait
lock
aas
shl
pushf
cmc
cmp
adc
xchg
insb
mov
and
mov
inc
sbb
add
cli
xchg
push
push
and
rclb
xchg
lahf
push
dec
or
cmp
pop
cmp
jo
xchg
add
movsl
xchg
or
pop
or
addr16
push
jno
clc
dec
dec
insb
lcall
dec
in
scas
vmread
pop
scas
stc
jge
out
test
aaa
addr16
rcll
push
arpl
mov
sbb
negl
dec
in
and
jp
inc
cmpsb
aad
fnstcw
xchg
ja
dec
adc
bound
cmpsl
ljmp
sahf
daa
inc
xchg
mov
jb
mov
sub
jae
ljmp
add
inc
int
cmp
or
fidivl
add
int
loopne
adc
xor
xchg
jo
dec
push
or
cmp
in
pop
pop
adc
popa
jbe
adc
mov
mov
inc
push
adc
imul
ljmp
xlat
pop
xchg
xchg
inc
and
push
in
negb
xor
pop
lods
xchg
mov
jne,pn
fwait
jo
icebp
in
sub
aad
push
xchg
repnz
sub
sbb
icebp
inc
call
inc
jae
jno
out
jb
repnz
sbb
addr16
dec
frstor
mov
xchg
frndint
cltd
jle
test
cmp
push
inc
fcoml
add
add
scas
mov
cmp
stc
xlat
sbb
cli
cmp
or
cmp
pop
and
data16
jae
add
dec
adc
pop
sbb
shr
push
fistpll
sub
out
fildl
inc
jg
xor
add
xlat
sarb
pop
xchg
inc
dec
lods
mov
xchg
in
dec
mov
xor
pop
mov
mov
ret
sar
adc
push
insl
jge
into
xchg
sbb
sub
push
dec
inc
mov
in
jo
int3
ds
or
call
push
push
imul
xchg
and
dec
movsb
push
in
mov
out
popf
add
pop
ret
ljmp
dec
push
push
push
pop
es
xor
fistpl
push
lret
push
xchg
jg
pop
out
das
or
lea
pop
mov
movsb
xor
test
pop
stos
inc
jmp
jae
sbb
mov
ss
mov
jns
ja
outsb
pop
mov
pop
imul
mov
mov
jle
xor
xchg
aad
imul
out
aas
cmp
pop
push
aaa
dec
and
js
pushf
push
loop
fldl
sbb
cmpsb
mov
cmpsl
cltd
or
xchg
or
dec
jno
add
sub
xchg
cmp
dec
adc
mov
add
ds
lds
add
fldt
xor
jne
jnp
sub
mov
xor
mov
mov
notb
in
xor
test
fildl
adc
mov
pop
int3
xchg
lock
xadd
outsl
mov
jmp
and
or
shrl
dec
fisubrl
mov
add
and
repnz
sub
sub
out
and
mov
lock
adcb
xor
rcrb
sbb
mov
pop
int
scas
xchg
dec
mov
lret
fidivs
xchg
lret
or
ds
sahf
mov
cmp
in
push
repz
xchg
xor
pop
enter
insl
mov
xor
cmp
adc
cmc
mov
mov
in
iret
rep
push
and
add
shlb
jns
fcomps
mov
ret
jns
xor
test
call
lock
sbb
dec
adc
xchg
loopne
inc
push
into
xchg
jge
in
dec
pop
dec
xchg
rol
xchg
pop
test
insb
in
sub
scas
xchg
dec
shl
faddl
jb
xor
jbe
out
call
add
inc
addr16
or
aas
mov
push
scas
pop
adc
ss
sub
adc
jo
outsl
add
pop
mov
mov
leave
fs
xchg
jbe
scas
out
cmp
push
aad
mov
out
add
fidivl
sarl
dec
ja
add
icebp
add
and
in
lock
sti
mov
mov
test
outsb
bound
daa
add
fmul
lret
mov
es
mov
pusha
mov
mov
inc
mov
cltd
inc
lods
and
insb
popa
push
xor
push
jmp
popf
mov
push
xchg
mov
outsl
jecxz
sub
jmp
pop
aad
inc
dec
pop
add
gs
lcall
int
pushf
jns
test
fmull
sar
out
adc
mov
int3
and
jmp
jg
aad
pop
mov
inc
das
xchg
cltd
cmp
negl
les
mov
mov
mov
dec
cld
rcrl
sub
inc
mov
mov
ss
jns
stos
sahf
xchg
push
ret
pop
test
lcall
movsb
mov
mov
xor
stos
mov
push
fiaddl
and
mov
ror
mov
jnp
scas
and
adc
mov
xchg
mov
movsb
sbb
ljmp
mov
inc
adc
or
ljmp
jne
inc
cld
fstps
shlb
jmp
ds
sbb
cs
pusha
jecxz
sbb
cmpsl
pop
shll
jne
push
aam
clc
pop
inc
pop
adc
mov
add
rclb
mov
mov
cmp
outsl
std
push
adc
jne
jae
sub
sbb
mov
mov
inc
add
into
or
stos
lods
xchg
rep
add
fldcw
dec
push
imul
out
insb
or
mov
outsb
les
mov
xchg
push
push
int
loopne
repnz
mov
fs
mov
int3
dec
and
adc
xchg
sub
popa
rolb
jnp
bound
dec
inc
loop
inc
push
dec
fisttps
jecxz
xor
rcrl
adc
and
cmpsl
mov
std
pop
adc
cmp
clc
int
add
ss
ror
lds
dec
popa
stos
add
sub
clc
loopne
lds
cs
int3
pusha
lea
bswap
shlb
sbb
and
in
mov
mov
xor
shr
into
sub
adc
lret
inc
loop
push
and
shr
cmp
subb
sbb
mov
xlat
mov
mov
loop
jp
mov
fiadds
adc
jmp
sbb
and
addr16
out
notb
push
lret
inc
lods
xchg
xchg
pop
jle
add
mov
in
div
les
fdivrs
dec
mov
pop
icebp
andl
pushf
adc
jl
popa
mov
shrl
xchg
lea
nop
mov
mov
inc
nop
cs
stos
push
dec
push
cmp
push
cli
xchg
inc
cmp
in
dec
les
jo
int3
aam
mov
push
mov
cmp
lods
cmp
or
push
sub
nop
push
xchg
fcmove
cld
push
cmp
adc
adc
push
scas
and
and
inc
sub
xor
sub
xchg
inc
push
daa
pop
xor
loope
sub
and
es
shrb
adcl
cmp
sarl
inc
pop
inc
inc
in
mov
mov
push
insl
pop
sub
aaa
xchg
popa
sbb
pusha
or
pop
jnp
fstps
mov
cmp
mov
xor
mov
stc
or
ret
movsl
mov
sub
test
pop
mov
sub
orb
loop
jge
enter
jle
pushf
add
loopne
add
fcoms
out
mov
movsl
jns
aas
movsl
lret
pop
ss
lret
fucomi
es
or
dec
cmp
insl
jg
inc
repnz
insb
mov
xchg
and
int3
inc
sub
pop
lahf
cli
push
add
fidivrl
pop
jg
cmp
mov
pop
imul
dec
jle
test
cmpsl
lods
adc
cmp
pop
mov
mov
in
xor
int3
repz
aam
jnp
push
sbb
cmp
and
fistpll
mov
push
mov
or
mov
mov
add
or
mull
or
mov
imul
je
cli
pop
mov
mov
sbb
fwait
pop
int3
jns
or
lods
faddl
fcomps
push
jge
push
sbbl
loope
fwait
repnz
das
movsb
mov
adc
mov
leave
int3
and
test
test
pushf
jp
jge
or
inc
add
xor
mov
fnsave
push
pop
shlb
sub
je
sub
cmpsb
fisubrs
xor
int
pop
push
and
cmp
popa
ds
cld
in
dec
lods
test
mov
sub
adcl
add
call
dec
outsl
mov
and
pop
into
fwait
adc
add
add
add
xchg
xchg
push
mov
xlat
sbb
test
push
and
into
cli
adc
lret
repz
dec
arpl
lods
add
or
xchg
and
btr
sbb
insl
mov
fnstenv
xchg
push
cli
rep
sti
std
xchg
sbb
std
std
sub
and
pop
push
xor
enter
data16
mov
inc
or
push
imul
jg
loop
imul
dec
inc
sbb
insl
fs
sbb
dec
stc
jns
fcompl
dec
inc
loope
mov
fldcw
sti
jne
ret
mov
fsubrl
and
rorb
pop
xchg
fnstenv
and
daa
lock
jmp
cld
shll
stos
int3
adc
mov
stc
adc
push
jge
inc
jo
adcb
and
sbb
stc
xchg
mov
jge
mov
mov
scas
adc
lea
inc
ss
mov
dec
sub
loope
pop
push
xchg
int3
popf
xchg
sub
test
xchg
push
adc
adc
cmpsb
inc
clc
mov
stc
imul
jnp
shl
xor
cltd
push
lahf
cmp
clc
mov
mov
fcmovnb
fcompl
movsl
mov
fs
fld
cld
es
hlt
inc
xor
sub
mov
jp
mov
lret
sub
push
fsts
jno
push
xchg
dec
and
inc
sarb
mov
dec
imul
ja
clc
movsb
mov
jl
nop
bound
mov
adc
push
popa
or
loope
mov
push
pop
aaa
or
mov
sub
divb
loope
sbb
sbb
aam
sub
insb
jmp
arpl
push
mov
cmp
in
sub
push
fnsave
insl
daa
into
sti
cwtl
xor
cmp
and
stos
cltd
add
fcomps
add
shr
add
mov
sub
sbb
pop
xor
cmc
xchg
or
daa
mov
inc
xorb
push
popa
imul
scas
aas
or
adc
cmpsb
adc
xchg
jp
push
out
and
sti
lea
int3
pop
add
add
ret
xchg
sbb
mov
in
aaa
in
test
lods
mov
imul
ficoms
mov
popa
dec
xchg
add
divps
std
xor
in
jle
or
push
sub
arpl
xlat
lret
out
mov
scas
and
cmc
mov
pop
imul
and
cmpl
data16
xchg
xor
aaa
cmpsb
sahf
out
cmp
lcall
xor
dec
dec
xorb
rorb
sbb
mov
cld
sbb
cmp
sub
jo
inc
jb
jmp
jmp
mov
popf
decl
xchg
mov
pop
push
movsl
test
lahf
xor
test
cmp
imul
jmp
cmp
jecxz
inc
js
fucomi
rcrl
mov
imul
lea
popa
int3
iret
mov
imul
dec
mov
xchg
pop
sub
nop
sbb
xor
nop
adc
ret
mov
movsb
mov
cmpb
ss
pop
js
arpl
ss
popa
push
inc
mov
adcl
rep
mov
jns
sub
xor
shl
sahf
test
cmp
stos
add
das
xor
test
arpl
scas
adc
daa
jo
cmc
cmp
jecxz
mov
and
dec
stc
outsl
repz
shl
lret
js
xor
jbe
or
shrb
cs
dec
aam
or
xorb
and
js
add
mov
fisttpl
jbe
mov
imull
jo
sbb
xlat
lds
loope
and
rcrl
pop
xor
xchg
xchg
gs
xor
xchg
aam
testb
or
push
add
loop
adc
add
push
xor
inc
add
xchg
loopne
cmp
add
xlat
rcl
dec
and
je
mov
inc
movsl
sahf
and
arpl
addr16
cmpsl
rol
cmp
bound
fs
jl
or
mov
adc
sub
decl
loope
pop
shl
mov
in
pusha
dec
stc
lea
cmp
js
xchg
pop
es
cmc
mov
cmpsl
jno
adc
sbb
mov
jno
add
adc
and
xor
loope
icebp
pop
orl
popf
inc
lea
popa
lods
jno
add
adc
and
xor
loope
icebp
pop
orl
popf
inc
lea
jns
jne
add
jp
and
or
clc
pop
test
test
push
popf
movsl
mov
test
adc
insl
icebp
loop
bnd
loope
xchg
stc
fsts
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
