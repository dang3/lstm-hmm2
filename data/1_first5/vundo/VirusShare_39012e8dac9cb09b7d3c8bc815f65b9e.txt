inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
inc
add
jb
add
jb
add
add
inc
add
je
imul
inc
add
jb
add
jb
add
add
push
add
je
insb
add
push
add
js
je
add
push
add
outsb
add
add
push
add
js
je
add
add
dec
add
outsb
add
push
add
js
je
add
add
push
add
outsb
add
add
inc
add
popa
add
add
add
imul
outsl
add
add
add
dec
add
outsb
add
add
add
dec
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
je
imul
push
add
je
insb
add
add
inc
add
arpl
imul
add
outsl
add
outsb
add
add
add
arpl
add
jb
jl
cmp
test
imul
or
add
add
push
pop
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
push
add
add
add
add
add
movb
add
add
add
add
add
rolb
add
add
add
add
add
add
add
add
add
push
add
add
add
add
mov
xor
xchg
add
rolb
add
add
xor
lret
add
add
add
add
add
rolb
add
add
add
add
add
add
add
add
hlt
add
add
add
rolb
mov
mov
add
add
add
add
add
mov
addl
add
testb
add
add
jne
xor
xor
mov
adc
adc
jb
xor
add
or
mov
add
add
pop
add
xchg
add
add
add
mov
add
add
add
add
add
add
add
and
xor
add
add
adc
sub
xor
cmp
sbb
mov
add
mov
cmp
data16
xor
add
add
add
add
add
add
rolb
add
xchg
add
add
add
add
outsb
add
scas
push
in
inc
add
add
add
add
add
add
add
and
flds
and
add
add
sub
jl
in
outsl
add
add
add
add
add
add
add
add
add
addb
add
add
leave
add
add
xchg
add
add
in
dec
add
add
push
add
add
add
add
add
lock
rolb
add
add
add
add
lock
add
add
add
add
xchg
add
push
add
mov
mov
mov
stc
add
add
add
add
add
add
test
fiadds
adc
add
add
add
push
add
add
add
add
add
add
add
add
add
out
add
add
add
add
push
add
add
add
add
add
rolb
add
add
and
scas
push
rolb
add
add
add
addl
add
push
rolb
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
movsb
add
add
addl
add
add
add
add
push
add
add
add
add
jno
and
add
xchg
add
add
add
add
add
pop
cs
adc
shlb
jno
cmp
pusha
mov
jl
data16
test
lahf
sbb
test
pop
ret
add
push
fadd
and
push
xchg
mov
inc
push
imul
fisubrs
push
xchg
sub
sub
loop
mov
dec
or
push
dec
jg
mov
mov
adc
aad
rcll
sub
mov
sti
data16
add
stos
lahf
dec
test
cmp
aam
add
mov
push
xorl
sti
das
or
and
ja
ds
dec
sbb
cmp
push
arpl
subb
pop
pop
adc
mov
pop
outsb
and
cmp
test
sbb
ds
dec
push
jl
jno
pushf
jo
ret
jl
xchg
sbb
jl
xlat
scas
xchg
xchg
pop
lods
push
dec
cmp
or
jp
cmpsb
je
xchg
iret
ficompl
mov
movzbl
push
xchg
sbb
rcl
push
leave
lock
cwtl
push
add
repz
int3
sbb
xchg
les
popf
push
add
repnz
cmp
nop
and
and
jg
subl
pop
scas
sbb
adc
incb
dec
scas
jo
fsubs
out
std
lret
lcall
sarb
dec
idivl
and
mov
jecxz
and
out
inc
test
int3
lahf
inc
push
sti
pop
xor
push
fnstsw
mov
or
nop
lcall
add
lret
jecxz
xchg
inc
ret
in
push
xchg
sti
mov
mov
mov
jmp
mov
dec
mov
push
ret
mov
push
mov
dec
pop
das
rcr
cmp
sub
cli
ja
cmp
movsl
or
jnp
jmp
xchg
pop
mov
mov
sysret
addr16
and
aam
cltd
test
and
jnp
jae
lahf
dec
adc
cmc
cmc
xlat
push
push
push
and
push
jg
pop
mov
jno
lds
xchg
sbb
adc
jno
test
aas
pop
xor
pop
fdivrl
js
addr16
addr16
pop
lds
or
dec
mov
int
sub
daa
push
inc
adc
imull
in
rorl
mov
mov
sub
push
mov
mov
sub
data16
xchg
cmp
aad
mov
mov
je
sub
ljmp
cwtl
or
gs
or
sti
test
ret
ret
aaa
sbb
sbb
xchg
adcb
out
flds
pop
pop
shlb
aad
mov
mov
out
cld
movsb
mov
lds
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
push
call
mov
movb
mov
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
call
call
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
cmp
sub
sbb
or
sub
inc
dec
mov
fwait
mov
leave
fcmovne
lret
cmp
sub
sbb
or
jns
imul
test
fwait
xchg
fstps
xor
add
jno
inc
mov
push
mov
icebp
clc
stc
lods
xchg
push
cmp
sbb
pop
sub
cwtl
inc
mov
adc
lret
icebp
pop
call
xchg
mov
inc
mov
push
jp
xchg
fcompl
fmull
cmp
cmp
repz
test
fidivl
inc
cmp
cs
push
sar
mov
out
ss
mov
fistl
fstpt
sti
cmp
rorb
sub
add
inc
test
lods
scas
jbe
push
cli
jmp
cwtl
imul
jmp
cs
mov
mov
add
fnstenv
sti
leave
xchg
pop
or
xor
sbb
inc
mov
fsts
leave
dec
lock
fistpl
lahf
or
outsb
jnp
imul
lret
mov
mov
adc
fcmovne
movsl
push
imul
adc
dec
cs
out
in
loop
xchg
mov
push
jle
push
jp
cs
xor
int3
std
cltd
dec
in
stc
stos
andb
insl
inc
insb
jne
popa
push
pop
pop
dec
dec
mov
fwait
mov
leave
lret
cmp
sub
sbb
or
jns
imul
mov
mov
leave
lret
cmp
push
cld
cmpsb
mov
sbb
xchg
jno
or
addb
add
ret
rcr
mov
inc
jl
hlt
dec
xchg
jge
rcrb
fstpt
pop
adc
aaa
xor
push
inc
inc
int3
jns
pop
add
mov
inc
add
das
adc
test
xor
dec
push
in
pop
int3
dec
comiss
sahf
scas
jmp
psrlq
sbb
cs
testb
movsb
imul
pop
aam
xor
cmp
ss
mov
xor
pop
loope
push
lcall
fiadds
pop
scas
and
mov
shll
jp
mov
sub
pop
jbe
push
or
mov
or
or
js
shrl
cli
or
daa
add
int3
xchg
mov
js
xor
mov
push
sbb
sbb
sbb
and
xlat
imul
mov
cmp
push
test
jae
movsb
stc
sbbl
fwait
aam
outsl
add
jp
nop
mov
mov
or
mov
popf
sub
shr
pop
jge
mov
push
pop
xor
cmc
pop
xlat
push
cmpsl
pop
adc
push
lds
iret
mov
in
or
inc
stc
xchg
cmp
mov
filds
xor
push
pop
rcl
xor
je
dec
loop
scas
lods
outsb
dec
mov
xchg
mov
pop
sbb
ret
dec
fidivl
pop
or
jle
add
fldl
jns
push
mov
jb
arpl
pop
imul
pop
sub
pop
jo
sub
cmp
sub
repnz
xchg
scas
mov
sbb
inc
pop
cmp
jmp
inc
adc
lods
jg
dec
daa
aas
fisubrl
xchg
test
cmp
pop
xchg
fldt
icebp
fs
jl
mov
jo
or
repz
bound
xor
gs
inc
add
or
and
popf
ljmp
mov
or
scas
jmp
outsb
mov
js
dec
fwait
popf
jo
loopne
faddl
out
and
mov
pop
add
pop
cmp
add
ds
adc
popa
scas
movsb
mov
mov
inc
sbb
int3
cmc
popl
daa
sub
mov
jae
lea
ljmp
pop
negl
cmp
mov
push
add
mov
jnp
jae
mov
out
leave
cmp
dec
jle
testl
dec
cmp
dec
add
and
lret
xor
or
mov
mov
int
xchg
lds
testb
cmp
inc
add
stc
cmpsb
inc
imul
sti
std
cmp
sub
ret
add
cltd
push
mov
popf
push
and
push
lret
in
push
mov
push
or
sbb
popf
in
lret
std
jmp
icebp
fisubrs
andb
rol
shrb
cmp
sub
sbb
ss
sub
out
in
pop
or
inc
popf
dec
sub
or
sarb
sbb
dec
mov
das
mov
subl
mov
mov
sbb
mov
aad
mov
mov
cmpsb
iret
xor
push
rcll
pop
and
insl
adc
lea
inc
add
ljmp
dec
cmpb
fildll
and
lock
js
test
pop
jle
nop
mov
pop
test
cmp
add
je
lcall
rorl
in
clc
pop
orb
sti
add
xor
jns
or
into
xor
lcall
jg
jecxz
xchg
push
les
mov
insl
pop
dec
push
adc
ret
jecxz
shlb
shrb
cld
ret
push
mov
push
add
insb
addr16
ja
dec
cli
aam
popa
push
dec
ret
in
push
pushf
jne
imul
loop
addr16
lock
sub
iret
movsl
sbb
mov
sti
fidivrl
movsl
insl
mov
or
sti
jl
mov
pushl
jbe
pop
test
xchg
ljmp
push
iret
jne
and
mov
repz
imul
andb
sbb
mov
popa
mov
inc
movsl
cmp
int
js
lods
push
jno
cmpb
sub
or
in
popa
arpl
inc
fistl
js
inc
push
ja
add
or
sub
out
dec
mov
aad
pop
jp
mov
xchg
and
xchg
sbb
hlt
dec
mov
fsubs
add
pop
inc
inc
dec
lcall
bound
shll
jecxz
loope
adc
je
aam
cmp
into
movsb
dec
dec
mov
or
outsb
imul
gs
std
add
cmp
fldcw
jo
and
mov
push
in
imulb
mov
enter
test
inc
mov
shr
movsl
stos
mov
hlt
adc
jmp
add
out
inc
jbe
mov
test
jne
inc
and
in
cmpsb
cmp
sub
inc
adc
or
mov
scas
test
ret
arpl
jbe
mov
lret
daa
dec
jne
cmp
js
or
and
dec
fidivs
push
mov
aam
in
mov
movsl
fidivs
push
cs
ffree
mov
pusha
inc
pop
out
add
or
ljmp
mov
push
pop
pop
cld
or
gs
adc
xor
outsb
pop
push
cmp
lods
sub
repz
mov
pop
rcrl
pop
cld
push
add
xchg
jmp
dec
add
and
mov
add
mov
adcl
fldenv
test
inc
cmpsb
addr16
sbb
movsb
leave
xchg
hlt
out
and
sti
xlat
push
imul
clc
sbb
add
lret
adc
add
arpl
fstpl
mov
jle
addl
movsb
insb
jle
pop
frstor
je
stos
mov
xchg
push
fwait
leave
mov
popf
xchg
and
push
or
mov
inc
imul
pop
mov
and
ret
cmp
out
lods
push
pop
xor
ss
cmp
js
add
or
push
fidivs
test
and
in
cli
or
mov
rolb
and
and
scas
mov
adc
out
xchg
and
dec
mov
mov
jnp
sbb
and
int
xlat
movsl
mov
test
xchg
adc
push
movsb
mov
loope
movsl
xor
stc
or
mov
je
fnsave
orb
insl
pop
shlb
notl
and
into
and
pop
clc
add
repnz
xchg
clc
push
cmp
mov
cltd
mov
in
cmp
mov
and
mov
cmc
push
or
xchg
fs
jbe
int
mov
out
sahf
pop
roll
bound
jg
jle
push
cmp
faddl
and
mov
and
sub
enter
adc
mov
imul
insb
data16
and
fwait
inc
xchg
loope
int
roll
fisttpll
mov
or
inc
test
hlt
dec
cmpsb
stc
push
scas
popf
dec
or
mov
sub
and
addr16
inc
int3
sbb
inc
inc
scas
dec
xor
out
or
aam
sbb
cmpsl
adc
shll
pop
out
jp
adc
xchg
xchg
jmp
lcall
fadd
xchg
mov
mov
dec
in
inc
and
cs
inc
or
adc
ss
lahf
cmp
inc
jmp
cs
mov
mov
lea
roll
scas
cmp
jbe
cmc
lahf
orb
sahf
jbe
stos
cmpsb
cmp
daa
hlt
icebp
out
aas
or
and
jl
sub
xorb
push
in
je
push
push
je
adc
cmp
add
jb
in
and
aaa
add
shl
adc
imul
sbb
cmp
xchg
pop
incl
pop
notl
sub
pushf
mov
cwtl
jbe
dec
sti
fcomps
sbb
xchg
push
mov
add
and
inc
add
les
add
push
dec
cmp
popa
mov
stc
cs
es
fistpl
dec
cmp
leave
xchg
scas
andl
in
int3
cmpsb
seta
push
sarl
imul
inc
add
xchg
movsb
int3
xchg
cmp
push
push
cmc
loop
jecxz
scas
mov
in
fcmove
or
mov
bound
mov
fstl
jne
stc
mov
nop
int3
dec
fcmovnbe
lods
and
mov
mov
fwait
mov
mov
cmc
jns
sbb
push
pushf
mov
icebp
dec
insb
jl
sti
pusha
rol
enter
icebp
movsb
sbb
mov
push
lcall
pushw
fisubs
aad
pop
mov
push
push
incb
aaa
mov
cmc
cwtl
je
fs
adc
adc
add
lods
xor
in
outsb
sub
xlat
sub
std
movsl
xor
dec
les
push
xchg
test
aam
xchg
inc
inc
xchg
fs
mov
jg
add
stos
lds
ja
mov
mov
test
cmp
xchg
pmullw
inc
mov
inc
lods
xor
fildll
xchg
jnp
pushf
dec
enter
aam
jle
stos
clc
xchg
mov
or
mov
add
mov
mov
sti
movsl
scas
mov
push
iret
pop
adc
xor
jno
out
mov
mov
and
dec
fsts
pushf
dec
std
and
jp
repnz
lahf
adcl
xchg
scas
out
adc
idivb
pop
cmpsb
daa
sahf
out
sahf
add
pop
mov
inc
cmc
and
int3
rcrb
pop
out
add
inc
fdivp
jmp
xor
aam
lea
jp
cs
sbb
addr16
mov
sarl
add
cmp
xor
xchg
sbb
ret
mov
in
mov
or
stos
mov
xor
test
pop
mov
jo
pop
sbb
hlt
cltd
adc
leave
orl
xchg
fadds
mov
lahf
lea
in
xlat
sbb
jb
dec
test
fstl
jbe
loopne
jle
ror
dec
sbb
addb
cmc
rcl
jo
xor
rcr
mov
sub
loop
pop
jge
fistl
xchg
xor
enter
jmp
mov
add
mov
jns
or
cli
aad
leave
xchg
pop
mov
jmp
scas
add
xor
mov
fs
shll
cmp
imulb
xor
fidivl
jp
inc
xchg
ret
test
xchg
flds
repz
mov
sbb
call
xor
xchg
cwtd
cmp
decb
mov
xchg
popa
xchg
loope
or
xor
inc
sbb
sbb
shll
adc
lods
data16
inc
adc
stos
jbe
pop
stos
dec
cli
and
fs
aas
pmovmskb
dec
movsb
nop
sbb
stos
icebp
xlat
xchg
enter
leave
aam
stos
das
pop
adcb
pop
pop
push
dec
add
clc
lcall
pusha
dec
movsb
sbb
add
ret
outsb
inc
or
push
cmp
ja
xchg
shlb
cmp
jnp
and
pop
dec
popa
lock
or
or
bound
xchg
pop
call
cmp
jno
inc
sbb
and
pop
insb
cmpsb
inc
mov
loope
or
aaa
push
ror
jae
sarb
rol
jne
in
cld
je
mov
pop
aaa
out
loop
dec
jmp
add
push
xor
push
outsl
pop
add
inc
push
cmp
pop
jnp
lret
mov
test
testl
push
lea
or
dec
push
out
xor
fdivrs
fcompl
insl
aas
aas
add
aad
es
movsl
jle
lock
mov
push
popl
and
lahf
aaa
xor
add
test
jmp
jmp
inc
cmpsb
and
push
in
add
ljmp
mov
fldenv
rdtsc
enter
inc
ret
inc
or
sbb
sysret
popf
out
push
repz
std
pop
popf
add
sub
pop
arpl
insl
mov
fs
pushf
out
out
mov
aad
cs
xorl
xor
icebp
sti
ret
cli
lret
sbb
shll
fstps
outsb
shlb
loopne
xchg
jp
dec
popa
daa
jmp
push
fdivrl
sub
aaa
add
ret
daa
fwait
pop
sbb
adc
mov
pop
int
push
cmc
mov
div
add
pop
push
rolb
in
add
les
mov
mov
scas
sbb
and
mov
jl
je
pop
adc
jp
cmp
inc
popf
add
fwait
out
lea
jecxz
into
add
fimull
or
movl
arpl
lcall
mov
mov
mov
dec
mov
movsl
lahf
lea
inc
cmc
pop
fdivrs
sbb
scas
mov
fistpl
push
push
inc
xlat
fstl
sub
call
in
popa
imul
clc
push
adc
int
fldcw
ret
push
add
daa
test
and
outsl
push
xor
dec
enter
outsb
andl
mov
or
ss
repnz
mov
and
jge
lods
mov
push
ret
aad
add
push
add
cmp
sbbb
and
clc
orb
or
sub
adc
xchg
push
sub
loopne
in
adc
and
pop
stos
mov
cmp
into
imul
aaa
xor
bound
in
push
push
mov
or
scas
mov
sbb
sti
fwait
sbb
cmp
push
pop
cmp
xchg
shl
mov
mov
jecxz
push
inc
jl
push
sbb
add
xlat
repz
inc
push
mov
stc
sub
xchg
dec
xlat
rep
enter
ret
dec
stos
add
cmp
das
push
or
push
into
push
hlt
pop
test
pusha
push
int3
addr16
xor
ja
rorl
imul
daa
dec
sbb
pop
pushf
push
adc
cmp
dec
insl
pop
cmp
xor
es
into
sbb
jecxz
jno
sbb
out
int
cld
cmp
mov
sbb
cmp
ja
add
fistps
imul
and
ror
add
in
or
push
movsb
ja
repz
mov
and
sbb
sarl
or
lret
jbe
mov
xchg
into
out
xchg
lret
ret
popf
mov
je
pop
test
jno
lret
inc
stos
loope
int
hlt
orl
mov
fsubl
call
movsl
lcall
movsb
dec
mov
out
cld
in
mov
inc
lret
xor
adc
push
fldenv
pop
dec
test
dec
movsl
lahf
nop
inc
add
test
xlat
xor
cmp
in
jo
sbb
out
or
mov
push
es
jmp
ret
mov
and
jno
or
popf
out
clc
repnz
cli
xchg
push
xor
sbb
clc
adc
sbb
or
xor
out
addb
cmp
cmp
gs
int3
push
test
xchg
adc
loop,pn
in
pop
scas
andb
rcll
push
add
dec
xchg
mov
clc
inc
xchg
add
jo
cmp
aaa
outsb
leave
and
inc
fdivrl
sbb
pop
fwait
pop
push
hlt
push
ljmp
in
push
mov
test
imul
jp
sti
xchg
aaa
inc
sub
clc
adc
lea
imul
sub
jne
daa
fstpt
and
cld
mov
adc
dec
sub
push
sahf
test
push
xchg
fs
jne
xchg
or
dec
inc
out
and
aas
in
adc
pop
std
mov
xchg
sub
idivl
adc
jl
add
xchg
pop
cld
add
dec
clc
add
rcrl
dec
pop
jg
push
jp
cld
repz
push
enter
or
and
inc
mov
or
daa
sub
fnstenv
sub
stos
adc
insb
lods
xchg
aad
push
imul
rol
mov
dec
or
int
fsubl
data16
adc
sbb
mov
push
push
das
cmp
mov
inc
lods
mov
jmp
lcall
loop
xchg
das
std
out
inc
cmc
pop
jno
fwait
loope
adcb
sbbl
lock
jmp
sub
cmp
in
mov
call
adc
pop
sarl
ficomps
pop
xor
loopne
inc
repnz
imulb
cmp
fimull
xchg
mov
test
popa
mov
stc
dec
push
aam
stos
or
cmpsl
in
stos
mov
in
repnz
mov
cmpsl
dec
cmpsb
aas
daa
dec
shlb
arpl
mov
push
roll
sarl
pop
fistps
pop
pop
out
push
adc
orb
mov
xchg
mov
shlb
in
cmp
mov
mov
dec
mov
in
mov
test
pop
jle
and
pushf
imul
sar
data16
imul
call
jecxz
icebp
pop
push
xor
ljmp
jle
imul
jnp
jmp
adc
add
add
dec
ret
adc
dec
icebp
cmp
or
daa
and
mov
sbb
xchg
add
push
xchg
ss
arpl
aad
sbb
mov
or
in
jbe
mov
imul
add
popa
aad
cli
std
cwtl
dec
push
xchg
jge
stos
gs
jno
pop
into
sbb
adc
sahf
lea
aas
pop
insl
adc
dec
mov
jl
inc
xchg
in
inc
push
rclb
pop
cli
mov
jnp
aaa
sbb
xchg
js
std
call
out
mov
sbb
rcrb
mov
jmp
lods
shll
not
push
outsb
jns
cmp
mov
sbb
push
fnstenv
jb
shl
insl
shlb
mov
cmp
cwtl
pop
mov
adcb
dec
cmp
pop
out
xor
mov
ja
sbb
lret
int3
mov
pop
cmc
ljmp
xor
int3
into
add
sub
cmpsb
repz
xchg
in
jbe
orb
pop
sahf
out
push
sub
movsb
enter
push
sub
pop
adc
adc
imul
cmpsl
sbb
mov
repz
sti
and
mov
loope
sbb
mov
push
fistps
packuswb
test
in
mov
addb
mov
xchg
int
fstpl
xor
stos
adc
pop
out
inc
dec
jno
push
out
sbb
dec
push
sbb
repz
pop
out
daa
adc
int3
mov
js
adc
adc
adc
into
cmp
cmpsl
jmp
xlat
shlb
cmp
les
in
adc
loopne
ljmp
cmp
or
pop
sub
jl
mov
je
in
jnp
pop
xchg
push
dec
sbbb
ds
or
cmpsb
rcrb
or
jge
or
xchg
pop
mov
pop
or
adc
imul
shl
push
mov
xlat
fwait
xchg
mov
in
push
fimuls
cmpsb
push
fucomip
mov
pop
or
pop
fiadds
addb
adc
aad
dec
jp
mov
cmp
or
in
clc
fwait
ds
cmp
jo
inc
xor
ret
mov
cmovne
and
repnz
mov
inc
in
dec
fistpl
mov
add
call
jae
imul
les
mov
outsl
mov
scas
loop
mov
mov
outsl
fnstenv
mov
sub
sbb
or
pop
lods
mov
pop
xor
add
cmpsl
cltd
aad
jle
inc
movsb
lret
mov
or
hlt
and
jmp
fsubrs
and
xchg
arpl
lret
jecxz,pn
mov
lahf
lea
in
lds
cmp
std
adc
jcxz
cmp
cltd
and
jg
std
imul
ljmp
xor
xchg
and
adc
mov
jmp
test
sub
dec
cmp
icebp
add
jno
jo
cmp
sbb
mov
pop
push
rcl
sub
mov
push
in
in
pop
and
leave
cmp
outsl
stos
jecxz
push
xor
xchg
adc
dec
stos
or
movsb
dec
dec
jno
mulb
int3
notl
lahf
clc
cltd
push
pop
leave
and
arpl
sub
fstps
pop
and
stc
push
add
imul
leave
in
fidivrl
mov
jo
fucomp
dec
jp
icebp
push
nop
clc
insb
pop
aad
sahf
jbe
xchg
aaa
pop
xchg
es
mov
jnp
hlt
insl
push
and
sbb
inc
mov
outsl
stc
cmpsb
cs
fstpt
pop
or
pop
add
pop
add
pop
cwtl
xchg
clc
imul
push
rorl
data16
xchg
int3
xchg
xchg
sub
ja
or
imul
mov
mov
leave
lret
cmp
sub
sbb
or
jns
imul
mov
mov
leave
lret
cmp
sub
arpl
or
imul
mov
fwait
mov
fsincos
lret
lret
cmp
sub
sbb
or
jnp
imul
inc
push
add
fwait
mov
mov
adc
and
xor
int
cltd
lahf
jmp
iret
clc
mov
lea
push
push
pop
vmwrite
outsb
hlt
dec
sub
mov
jmp
out
cltd
fildll
das
pop
jle
vmwrite
outsl
sbb
dec
cmp
jae
mov
iret
mov
dec
das
jp
or
sbb
push
jg
pop
and
lea
pushf
je
iret
pusha
and
cld
js
ret
adc
pop
xchg
jae
sti
adc
ljmp
push
pushf
loopne
push
push
mov
movsl
inc
xchg
subb
sbb
inc
push
mov
scas
adcb
gs
push
pop
mov
dec
dec
push
scas
in
std
or
js
scas
fnstcw
popf
ret
test
das
int3
jmp
js
sbb
xchg
dec
inc
inc
inc
pop
push
and
adc
push
pop
mov
iret
inc
push
push
push
dec
mov
mov
pop
or
jp
mov
ss
es
daa
push
mov
push
adcb
popa
outsl
pop
pop
lds
loopne
scas
stc
lahf
popf
stc
decl
iret
sub
dec
das
icebp
pop
imul
jg
outsl
negl
dec
or
leave
jmp
repz
xchg
mov
fsubrl
sub
imul
dec
and
pop
cmp
in
lahf
jmp
xchg
lcall
mov
inc
sub
cmp
xor
sbb
cmovl
leave
mov
scas
xchg
mov
test
das
pop
pop
imul
sbb
dec
cmp
jmp
out
cltd
fildll
das
pop
pop
imul
sbb
dec
cmp
xchg
fstl
mov
fwait
jp
imul
mov
jno
popf
cmpsb
clc
pop
je
mov
mov
xor
das
cmpsb
int3
rorl
sub
addb
adc
and
loop
push
dec
addr16
sub
outsl
movb
xlat
push
fprem1
bound
jne,pn
push
mov
out
and
fsubrs
sub
into
cmp
addr16
lds
adc
testl
insb
movsl
xor
hlt
fisttps
sub
add
pop
inc
dec
push
imul
lret
addr16
xor
mov
mov
dec
js
mov
stos
inc
ss
icebp
dec
int
addr16
xchg
lahf
data16
mov
and
mov
hlt
push
fnsave
sub
mov
cmp
mov
out
sbb
add
mov
or
or
fildll
je
imul
jns
movsl
aas
into
xchg
lret
pop
fwait
sbb
xor
xchg
xor
arpl
test
pop
pop
pop
movsl
add
mov
iret
jmp
sub
enter
loope
mov
sahf
pop
mov
out
pusha
cmova
jo
stos
sub
test
jns
subb
sbb
cmp
mov
push
push
out
jmp
cli
pop
js
and
or
fisubrs
std
mov
cli
test
mov
xchg
imul
jge
adc
dec
add
in
out
aaa
mov
ds
ret
fisubrl
dec
jb
jp
sub
sahf
fsubr
push
out
inc
or
rcl
pop
nop
xchg
cmp
and
nop
js
mov
cmp
cli
rclb
xchg
or
rclb
sbb
xchg
mov
pop
jno
jnp
out
sbbb
and
lahf
loope
jl
mov
sub
aam
adc
cwtl
cmpsl
cmp
jecxz,pn
das
sub
ss
movsl
mov
mov
sub
push
lahf
inc
mov
jl
call
cmpsb
fsubl
and
mov
das
xor
mov
cltd
xor
call
jbe
incl
adc
movl
jle,pn
ja
repz
inc
cmp
pusha
pop
jbe
push
hlt
pop
outsl
ret
cmp
jmp
sahf
pop
cmp
jmp
jb
sti
iret
push
in
mov
imul
daa
fcmovb
cs
sub
sbb
dec
jns
xchg
mov
cld
add
repnz
sub
dec
jl
les
xor
add
cmp
lea
in
out
vmaxpd
cmpsl
es
fidivrs
out
dec
outsb
movsl
cltd
jno
jle
sbb
push
pop
filds
push
adc
cmpsb
jo
addr16
cld
rcrb
xor
gs
mov
out
pop
inc
lret
imul
inc
dec
cmpb
dec
pop
sbb
push
xlat
mov
dec
decl
repnz
push
mov
andb
push
adc
cmp
mov
dec
add
lds
push
cmp
xor
cmp
into
xchg
fisubs
je
cmpsb
lds
icebp
fs
pusha
dec
adc
ficoms
in
mov
and
insl
or
mov
cs
bound
sbb
push
iret
inc
scas
cmpsl
lods
mov
mov
dec
or
push
and
jmp
xlat
mov
push
ds
call
or
cs
pop
add
cs
mov
or
fnsave
and
popa
cltd
nop
jp
imul
dec
addr16
shrl
mov
and
in
mov
stos
pop
sub
cmp
add
loopne
or
add
and
into
imul
into
cld
fs
imulb
mov
xchg
mov
sbb
and
stos
inc
fldt
ja
sbb
mov
pop
jl
dec
scas
cmp
pop
ret
mov
clc
dec
inc
or
mov
insb
outsb
scas
mov
rorb
out
pop
fwait
lds
fistpl
pop
insl
and
imul
adc
sbb
push
stos
test
push
inc
fisttpll
minps
popl
ljmp
daa
mov
cli
outsb
fisubs
lods
mov
cmpsb
push
fistps
fsincos
jg
xchg
push
ss
in
insl
jge
xchg
fincstp
loop
jg
shrl
pop
sbb
mov
into
bound
add
and
mov
mov
fcoml
movsb
or
push
shl
mov
xchg
fwait
inc
add
cli
and
imul
pop
fmul
cld
rcrb
jno
lahf
jge
les
sub
fwait
add
lods
hlt
or
jecxz
and
xchg
test
and
xlat
call
pop
sub
js,pn
clc
pop
dec
cmpl
cmpl
xchg
jae
stos
add
aas
push
xor
addr16
lock
jo
pusha
mov
aad
insb
test
lds
nop
pop
jne
push
int3
jne
sub
dec
lods
xchg
pop
inc
dec
pop
jp
in
or
jo
sbb
fsubrs
ja
dec
out
push
xor
lahf
in
push
test
sti
dec
add
outsl
sbb
jp
out
jbe
fiaddl
leave
inc
in
data16
popf
popa
mov
inc
add
mov
push
ret
fstps
test
inc
int
cmpsb
mov
in
mov
insb
mov
loopne
insb
int
lret
push
enter
pop
loope
sub
test
mov
loop
das
testb
cli
iret
in
stc
cwtl
in
movsb
hlt
xor
in
insl
idivl
and
cmp
mov
into
insb
andl
insb
sub
outsl
push
rcrl
jge
movsb
cld
repnz
adc
add
stos
push
xchg
jno
in
push
cwtl
ss
mov
push
aas
push
xchg
sbb
jnp
out
fs
sub
mov
or
push
fcoms
fdivrs
mov
lcall
vmptrst
sbb
sub
mov
out
call
push
lea
pop
push
inc
sbb
lret
stc
lret
cmp
sbb
jne
cmpsb
test
int
sub
xchg
mov
dec
xchg
xchg
sub
and
popw
xchg
xor
int3
inc
xlat
rolb
loope
jno
push
sub
dec
loop
jmp
mov
pop
pop
pop
test
pop
adcl
dec
inc
mov
ret
sbb
in
fisttps
sbb
pop
cmp
mov
xchg
ljmp
xor
lods
and
mov
add
adc
adcb
push
xor
xor
xchg
addl
cli
lods
loop
in
lods
int3
arpl
lods
cld
test
xchg
bound
es
lock
mov
and
push
shl
sbb
shll
push
push
jns
jle,pn
mov
mov
jle
pop
pop
and
sbb
pop
je
popf
lret
fnstcw
popf
jno
push
mov
pop
fs
ljmp
fwait
sbb
mov
popa
pop
loope
or
int
push
test
sti
xchg
adc
xchg
in
popf
xchg
negl
insl
push
inc
pop
mov
out
fst
dec
cmpsl
jae
rol
mov
mov
or
lret
xor
dec
inc
jg
sbb
sub
bound
fnsave
adc
or
out
jmp
sub
sahf
adc
mov
xor
imul
pop
gs
ljmp
fistl
mov
cmp
rorb
test
sub
roll
inc
clc
cmc
pop
add
adc
xlat
mov
dec
xchg
xor
pusha
cmp
into
xor
add
sbbb
sti
aam
and
dec
in
je
in
cmp
mov
and
or
add
rcrb
fstps
adc
xchg
mulb
scas
jae
dec
sub
pushf
sbb
xchg
jg
js
sub
int
xlat
or
ljmp
testb
int3
or
out
cltd
pop
pop
mov
pop
enter
cmp
ljmp
and
jle
sbb
repnz
or
pop
sbb
xor
mov
sbb
mov
je
ja
test
dec
add
ljmp
popf
fcoms
xchg
rep
xor
jns
jecxz
xchg
or
fistpll
repz
addr16
pop
popf
xor
mov
sbb
push
test
cmp
jecxz
lods
repnz
jle
push
cltd
out
add
stos
lea
cs
popf
hlt
shlb
jae
jecxz
ret
pop
sbb
arpl
and
push
push
mov
lds
dec
adc
loopne
stc
sbb
outsb
sbb
mov
lods
sub
add
repz
pop
sub
pop
jae
out
jecxz
ja
push
orl
daa
inc
ljmp
aam
icebp
imul
sahf
ljmp
add
mov
xchg
jl
and
dec
in
fadds
mov
add
enter
lds
daa
out
xchg
inc
pop
cmp
sub
pop
jne
sar
in
add
pop
jnp
push
ljmp
test
jg
bound
fstpt
stos
mov
jo
xchg
negb
pop
mov
addr16
mov
popa
adc
jge
sub
jo
xor
loopne
cwtl
ja
sub
rorl
stc
mov
mov
fsub
das
dec
xchg
mov
sub
jne
mov
sbb
jns
cmpsl
fmull
stos
ljmp
mov
mov
xor
push
xchg
lcall
push
sbb
lock
cld
push
mov
mov
cmp
fdivrl
out
stos
sbb
das
pop
lods
sub
orl
insl
adc
stos
adc
adc
arpl
xor
sti
adc
cld
jo
sub
push
jmp
mov
inc
add
adc
imul
sbb
mov
lea
jecxz
xchg
and
mov
sar
jno
enter
iret
mov
out
rol
inc
dec
out
out
mov
jp
adc
cs
out
or
jl
sub
icebp
js
dec
xchg
push
mov
add
mov
aad
dec
mov
rcrb
aam
outsb
mov
test
jecxz
ret
loop
fimuls
stc
mov
mov
sbb
daa
mov
shrb
out
inc
jo
mov
jle
mov
dec
addb
aad
lret
push
cmp
mov
pop
mov
dec
dec
dec
or
ds
mov
stos
decl
push
lock
inc
dec
imul
mov
je
ficompl
sbb
cltd
sub
mov
dec
repz
cs
loop
rolb
iret
and
xchg
cmpsb
jb
xchg
or
mov
in
mov
ret
cld
push
mov
xlat
pop
mov
nop
mov
mov
and
xor
data16
adc
movsb
and
push
fnstenv
iret
jns
mov
mov
dec
cs
insl
in
ljmp
jl
add
push
add
add
or
sti
mov
push
inc
aaa
mov
sub
jmp
adc
inc
mov
enter
sub
xchg
xor
sub
mov
loope
cltd
test
shrl
inc
mov
adc
sti
add
test
sbb
or
xchg
test
mov
adc
mov
in
popa
jbe
push
fcom
out
ret
jp
pop
xor
icebp
jno
lret
push
sysenter
or
cmp
push
fistps
mov
lods
fmul
jne
pop
lret
leave
ret
mov
int3
into
popl
out
jl
aam
push
cli
outsl
inc
and
sub
pop
cmc
xor
adc
cmpsb
mov
xchg
cli
mov
add
xchg
je
mov
mulb
neg
pop
cmp
mov
iret
sbb
in
sahf
mov
cltd
cmpsl
mov
adc
loop
xor
sub
ficoms
mov
lcall
mov
leave
or
stos
push
mov
es
sub
pushf
jecxz
xor
insb
lcall
cmp
push
in
or
hlt
in
lds
outsb
xchg
repz
lldt
cmpsb
dec
adc
ja
neg
cmp
adc
data16
out
or
andb
sub
call
stos
je
stos
mov
ja
pop
xor
into
and
ret
das
mov
pop
jle
lods
pushf
sub
push
repnz
add
cld
mov
cmp
push
aaa
push
or
fsubrp
sub
jmp
iret
adc
dec
and
jmp
addb
mov
adcl
or
sbb
lock
push
and
or
push
sahf
xor
repnz
out
push
mov
ret
out
xchg
loope
fadd
mov
das
cs
ret
vaddsd
jg
inc
lea
mov
push
adc
pusha
xor
insb
leave
pop
bound
sub
scas
jnp
sbb
adc
lods
cmp
test
add
divb
xor
hlt
dec
shll
stos
int3
jbe
int
xorl
jae
dec
rclb
sub
push
xchg
repz
repnz
cmc
movl
dec
xchg
inc
lret
cs
or
pop
push
jp
fiaddl
call
sbb
imul
clc
int3
sub
mov
xchg
aad
sbb
pusha
xor
es
pop
fldt
int3
shll
loopne
inc
jo
scas
xor
test
loope
imul
inc
xchg
cmp
jbe
daa
jl
dec
lods
jnp
lret
icebp
jb
outsb
stos
in
sub
cmp
call
pop
xchg
pop
int3
movsb
mov
lock
aad
int3
inc
addb
sbb
nop
in
out
sbb
arpl
fadd
inc
or
lcall
loope
cs
andb
ljmp
stos
fldcw
jl
sub
pushf
jae
movsl
mov
sub
inc
jle
add
and
adc
cmp
fs
call
sbb
mov
sahf
ss
popa
sbb
test
in
mov
out
test
or
ret
push
jno
pushf
notb
sub
fs
hlt
push
pop
push
fwait
test
roll
push
pop
pop
dec
inc
and
xor
mov
mov
mov
scas
out
fidivl
mov
dec
inc
shrl
lret
testb
ljmp
pop
cs
outsl
and
jecxz
stc
data16
xor
add
inc
mov
fdivs
roll
clc
add
in
outsb
cmp
scas
pop
jmp
scas
dec
loop
adc
inc
out
mov
ret
pop
out
rcr
sbb
les
stc
xor
in
inc
out
pop
dec
inc
lahf
sbb
sti
lret
mov
inc
inc
mov
add
in
pop
fcmovnbe
inc
add
xor
repz
movsl
into
sbb
aam
mov
jle
fldenv
shlb
sbb
cmc
sub
sub
fildll
mov
sub
jmp
push
mov
test
cmp
pop
jmp
add
dec
imulb
xlat
fsts
outsl
lds
in
and
and
push
repz
mov
fisubl
test
xchg
out
and
scas
fisubrl
xchg
or
int3
mov
dec
js
aas
out
ljmp
out
sub
xchg
testb
fidivrl
lds
cld
movsb
sub
testb
mov
scas
sub
sbb
sub
out
mov
adc
and
jge
mov
jl
mov
ds
jle
sbb
pushf
mov
lea
aas
dec
jae
push
outsl
in
pop
mov
pcmpeqb
es
aad
xchg
fmuls
pop
gs
gs
xor
mov
mov
inc
iret
test
out
xlat
push
push
mov
dec
sub
idivb
sbb
test
mov
xchg
loope
push
sbb
call
jmp
test
or
cmp
or
repnz
jo
inc
or
push
push
in
sbbl
fwait
mov
sub
in
popf
or
dec
js
mov
sbb
xchg
cmp
in
stc
pop
or
test
sbb
popf
pop
daa
insb
inc
jne
mov
pusha
jg
mov
js
mov
inc
push
mov
xchg
shrb
lcall
inc
cmpsl
add
pushf
mov
mov
fcompl
mov
inc
arpl
ret
inc
cltd
jo
mov
inc
add
fs
jo
adc
add
cmp
xlat
and
dec
popf
sarl
mov
pushf
clc
out
or
popa
aaa
test
jle
and
cli
aam
cmp
lds
mov
mov
movsb
mov
nop
add
xchg
andb
push
mov
jle
dec
xchg
and
mov
shl
cltd
cwtl
ret
mov
mov
imul
inc
std
pop
es
loope,pt
das
dec
mov
sbb
xchg
mov
inc
enter
test
ljmp
fs
xor
add
dec
mov
cmc
popa
and
outsl
pop
sub
fbstp
push
loop
repz
in
out
push
xor
mov
dec
js
repz
fwait
push
mov
jecxz
cmp
enter
in
mov
add
rolb
sbb
cmp
roll
int
nop
inc
add
mov
std
adc
jne
test
mov
mov
inc
lods
cmpsl
jmp
xor
icebp
xchg
popf
test
test
or
adc
jne
add
lahf
xlat
outsl
push
pusha
and
divb
add
lock
mov
pop
cmp
mov
pop
cwtl
dec
jmp
inc
cli
mov
test
out
mov
popa
divb
pop
mov
adc
inc
jge
pop
cs
scas
jecxz
lock
cli
or
mov
mov
cmp
cmp
fistpl
push
pusha
cmpsl
dec
shl
js
inc
mov
mov
xchg
jle
sbb
ret
mov
xor
jne
add
cmp
push
dec
addr16
sbbb
sbb
dec
mov
jmp
xor
scas
sub
pop
icebp
repz
int
popf
insl
hlt
jnp
rcrb
xchg
add
jo
sub
aas
fcomps
or
push
cmp
imul
xchg
inc
jbe
addr16
int
or
mov
dec
mov
out
dec
sbbb
bound
mov
idivb
leave
in
mov
or
xchg
stos
popf
mov
je
insl
xor
inc
mov
mov
stos
sarl
mov
repnz
or
fwait
lods
mov
mov
jmp
test
in
in
dec
jns
fsubr
sub
bound
jmp
pop
sub
scas
dec
out
rcrl
mov
xchg
adc
dec
inc
imul
sbb
aam
call
sar
mov
mov
daa
jae
mov
clc
xchg
jl
or
imul
sub
and
sbb
and
lods
xchg
push
test
rorl
add
dec
pop
sbb
push
mov
xchg
ljmp
pop
scas
lods
cmp
pushf
xchg
dec
ja
mov
sub
sub
cmp
adc
sbb
fcmovnb
das
cmpsb
or
pop
notl
cltd
lahf
in
add
mov
iret
ljmp
pop
sbb
xchg
jecxz
leave
mov
add
pusha
clc
daa
jl
shr
test
and
push
and
xchg
ljmp
fwait
push
mov
pop
call
xor
mov
aam
mov
lret
ret
and
push
push
sahf
inc
shll
sti
jb
mov
mov
jp
mov
cli
in
mov
imul
sahf
fdivp
fdivr
pop
or
push
incb
adc
fmulp
in
subb
push
lea
and
mov
movsl
sub
cmc
in
lock
mov
ljmp
xchg
cmp
or
pop
jp
sbb
cli
pushl
xchg
lods
or
in
scas
and
mov
and
xor
and
rcl
imul
dec
fdivrs
or
or
pop
mov
add
out
nop
andl
lods
mov
or
xchg
jno
aaa
loope
jg
icebp
das
xor
adc
pop
ffreep
test
stos
adc
inc
inc
pop
inc
mov
hlt
inc
mov
sbb
mov
mov
cmp
in
insl
jbe
cmp
dec
in
push
scas
mov
xor
adc
cmp
dec
lahf
adc
sti
sub
push
cli
pop
and
into
cmpsl
lds
sub
lock
pop
test
mov
xchg
testb
cmp
adc
lret
cmpsb
push
jo
jg
cmp
sar
js
xchg
sub
iret
push
pop
lcall
dec
xchg
sbbl
mov
mov
out
stos
or
jge
test
stc
decl
iret
mov
pop
imul
sbb
dec
cmp
jmp
out
cltd
fildll
das
pop
pop
imul
sbb
dec
cmp
icebp
std
decl
iret
mov
pop
imul
sbb
dec
fnstsw
or
out
cltd
fildll
iret
jns
mov
repz
femms
or
popa
mov
mov
sub
push
push
mov
push
push
push
push
movl
movl
movb
call
mov
andl
push
movl
pushl
movb
call
andl
push
push
mov
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
pop
pop
leave
ret
jg
outsl
add
dec
and
jb
sub
call
iret
mov
lahf
jecxz
jecxz
adc
pop
xor
aas
push
das
inc
pop
jae
arpl
xchg
out
subl
scas
adc
or
pop
sub
aas
dec
das
pop
pop
imul
pushl
mov
xlat
xchg
int3
lods
shll
outsl
push
inc
cmp
lcall
xor
cmc
xor
mov
mov
stos
mov
stos
mov
or
shrl
dec
mov
sahf
repz
xchg
in
xchg
insb
movl
pop
loope
call
test
shld
pop
ret
es
cli
or
outsb
add
xor
adc
jae
and
addr16
inc
jl
push
jmp
cmp
jns
mov
int3
ja
test
mov
out
push
adc
xor
lcall
xor
mov
scas
xchg
test
addl
repz
outsl
adc
and
aas
push
das
inc
pop
push
jp
mov
fildll
scas
aam
repz
cmp
sub
push
add
dec
push
mov
out
int3
fidivrl
fisttpl
cmovae
es
inc
jno
pop
setp
in
loop
mov
fisubl
popl
ss
dec
push
aas
aas
das
inc
pop
jae
arpl
xchg
out
sbb
iret
mov
lahf
repz
jecxz
adc
pop
xor
aas
push
das
inc
pop
jae
arpl
xchg
out
sbb
iret
mov
lahf
repz
jecxz
adc
test
adc
in
mov
and
bswap
mov
divl
sub
sbb
mov
fldenv
int
sbb
loop
outsl
imul
and
jns
jle
js
ret
pushf
mov
sahf
fadds
adc
test
xor
je
add
lock
dec
roll
out
aas
fisubs
dec
push
outsb
jl
addr16
inc
ss
aas
mov
cltd
mov
mov
int3
jmp
cmp
push
loop
mov
xchg
stos
fisubrs
notl
push
roll
test
pop
mov
and
or
jne
aas
fcomip
imul
add
rorl
stc
scas
mov
cmp
popf
daa
or
xchg
shlb
push
add
pop
cmpsb
insl
or
adc
cs
cmc
mov
and
cmp
dec
push
test
mov
xchg
pop
scas
add
mov
push
andb
notb
pop
adc
and
push
and
add
pop
push
adc
xchg
xchg
sbb
stos
sbb
mov
test
int3
mov
mov
das
pop
les
js
mov
push
cmpsb
cltd
pushf
mov
pop
out
pop
add
aam
loope
lock
dec
lods
mov
repz
cmp
stc
jecxz
xlat
daa
jg
xchg
por
popf
popf
loopne
ds
push
fnstsw
gs
bound
add
in
mov
sbb
popa
sbb
fldt
les
mov
dec
xor
jmp
cmp
pushf
fisubs
jg
cmp
insl
jb
cmp
leave
adc
push
divl
cmpl
mov
aad
xchg
insl
aad
aaa
xor
jl
leave
pop
cld
cmpsl
mov
mov
sbbb
jmp
pusha
fmulp
enter
mov
fmul
push
push
rclb
mov
xchg
bnd
add
pop
pushf
lods
mov
stos
in
enter
mov
xorb
pop
or
mov
push
cmpsl
ffreep
xor
ljmp
or
push
aaa
pop
pop
pop
xchg
inc
test
add
int
or
rclb
push
or
addb
mov
adc
jl
mov
xchg
mov
lcall
jge
push
in
in
fwait
je
add
ljmp
push
ljmp
or
mov
pop
fcmovnb
jne
daa
out
icebp
mov
lea
jo
mov
sbb
sbb
dec
ds
outsb
xchg
icebp
push
arpl
fildl
into
adc
pop
mov
sbb
je
cmp
mov
out
shrl
sbb
add
ffreep
leave
mov
loopne
orb
pop
fcmovne
jp
cli
testl
negl
test
inc
xchg
add
cltd
push
sar
pop
or
push
cmp
idivb
or
add
jno
pop
enter
out
xor
aad
adc
xchg
mov
and
lods
stos
cld
push
sbb
cld
mov
cmp
clc
stos
test
mov
testb
mov
loopne
in
sbb
jne
adc
mov
stos
xtest
pop
scas
lcall
sbb
arpl
cmpl
xchg
dec
xchg
or
inc
cli
rcrb
pop
fsub
push
outsb
sbb
sti
push
jno
inc
add
mov
xlat
mul
ss
push
add
and
pop
arpl
sti
mov
push
mov
push
push
sbb
and
mov
dec
fwait
adc
es
lahf
push
push
test
dec
subl
sbb
adc
rclb
pusha
pushf
fwait
cs
popa
enter
mov
test
or
stos
pop
mov
push
and
lret
cmpsb
inc
testb
inc
xchg
dec
ljmp
mov
push
dec
mov
stos
xorb
push
cmpb
mov
jns
nop
loope
xchg
iret
fbld
sub
in
movsl
dec
dec
std
push
cmp
mov
xor
lcall
xchg
jge
push
sbb
imul
inc
and
push
xchg
mov
std
mov
fs
inc
nop
jge
mov
cli
lret
mov
pop
push
xor
faddl
in
aad
mov
ss
fsub
pop
mov
add
mov
and
test
xor
pop
cmpsl
jl
rcll
push
mov
add
inc
into
rcr
jecxz
push
movsb
jmp
nop
or
add
push
and
or
decb
dec
mov
jnp
sub
jnp
jno
out
sbb
loopne
idivl
icebp
pop
mov
test
aaa
fwait
dec
mov
cwtl
cmp
adcb
neg
or
cmp
cmp
inc
ljmp
sbb
jae
sahf
bnd
pop
push
or
mov
js
jb
push
jmp
test
cmp
movb
std
mov
mov
cmp
cmp
mov
cmp
push
int3
mov
xor
mov
inc
fimull
shrd
imul
gs
movsb
frstor
sbb
fimuls
imul
shl
xchg
jne
out
je
mov
das
fimuls
adc
pushf
lods
aam
imul
xor
fucomi
sub
jge
mov
xor
ja
sub
pop
jp
lea
push
hlt
in
in
frstor
mov
mov
iret
cmpsl
stos
push
adc
sbb
pushl
test
imul
mov
sub
lahf
sbb
call
dec
lahf
orl
dec
rcrl
dec
std
rcl
mov
cmp
jae
roll
xchg
or
cmp
mov
cmpsb
mov
sbb
sub
and
iret
int3
inc
xor
ficoml
pop
ljmp
xchg
inc
mov
dec
or
adc
xor
cmpsb
iret
pop
jmp
dec
jnp
and
lret
push
jecxz
and
lret
xchg
fwait
repnz
jns
ja
enter
or
mov
repz
push
xor
test
add
cld
sub
xchg
es
cmpb
push
andb
or
push
stc
addl
jmp
mov
xor
sub
jo
std
xchg
push
clc
jns
dec
int
sarb
test
dec
adc
sbb
mov
jle
stos
cmpsl
pop
movsl
inc
lret
cmp
pop
out
mov
pop
ja
xor
mov
xor
xor
pop
xor
sarl
inc
les
mov
loop
notl
je
or
shrb
je
fwait
adc
or
mov
pop
andb
cmpsb
mov
test
pop
dec
sbb
jge
pushf
push
sub
fcmovbe
mov
jne
push
addr16
cli
fwait
adc
fld
jo
loope
adc
popa
cmc
inc
adc
mov
adc
xor
adc
mov
mov
or
fiadds
pop
cltd
fadd
repz
stos
jge
xor
pop
inc
pushf
js
call
fcomip
jl
cld
dec
cmpsl
push
pop
pop
outsl
adcb
test
inc
test
ficoml
subb
jmp
xchg
div
iret
cmp
sub
push
repnz
jno
cmp
insb
stos
sahf
xchg
fcoml
xor
mov
iret
shlb
sub
mov
mov
add
aam
adc
xchg
push
fists
pop
cmp
sbb
int3
dec
int
xor
jmp
call
orb
jb
scas
cmp
xor
dec
jno
out
push
fwait
cmp
jno
ret
mov
inc
mov
and
test
cmc
cmp
loop
imull
push
or
pop
lret
stos
jo
enter
cmp
hlt
fstl
jne
aad
idivb
push
lahf
dec
int3
mov
adc
out
sub
stos
jo
inc
sub
jmp
gs
push
mov
mov
or
dec
out
inc
mov
mov
cmp
xlat
adc
inc
cld
add
mov
imull
mov
mov
scas
mov
int
out
mov
inc
cmpsl
dec
fst
fistl
xchg
or
xchg
sbb
fldcw
and
ficoml
pop
push
or
push
lea
dec
test
jl
xchg
inc
inc
pop
pop
xchg
or
or
xorps
cmpl
jns
insb
cmp
inc
fwait
scas
and
imul
ds
and
iret
inc
mov
jno
inc
popa
or
cmp
or
cmpsb
push
jmp
out
cmpb
enter
adc
jno
push
js
inc
xchg
jno
sbb
scas
leave
cltd
and
into
imul
cmpsl
sub
aaa
push
out
pop
stos
or
movhps
dec
xor
and
dec
xor
dec
jp
jle
lds
mov
out
nop
shr
push
cs
xchg
add
or
cmp
mov
stos
sbb
std
sbb
xor
jbe
loop
rclb
pop
mov
divb
pop
mov
mov
adc
inc
cld
adc
mov
xchg
stc
idiv
nop
xchg
jp
roll
ret
and
lret
adc
std
and
inc
ja
pop
dec
std
cmp
inc
out
sbb
addr16
aam
daa
mov
fadds
mov
xor
jbe
inc
cmc
cmpl
fwait
mov
cltd
xchg
imul
add
inc
clc
shll
scas
mov
and
stos
inc
es
and
dec
sbb
push
out
mov
mov
in
inc
dec
xor
mov
xchg
aad
jb
jb
daa
xchg
or
push
in
mov
insb
pop
scas
imul
fwait
mov
sahf
in
inc
insb
or
and
xchg
push
pop
int3
arpl
je
bound
int3
xchg
lods
shlb
push
test
cmp
popa
adc
mov
xchg
enter
xchg
sub
mov
ficoms
aam
sbb
popa
stc
loope
sub
jo
push
jecxz
mov
jge
pop
sub
jp
enter
in
test
mov
dec
jb
push
adcb
insb
jg
ret
ficomps
push
aaa
inc
mov
ret
xor
jbe
or
jns
mov
ja
loop
sbb
lret
mov
enter
xor
xchg
inc
cmp
int
add
cmpsb
lods
xchg
mov
jge
mov
and
fidivrl
xor
pop
jae
popl
fwait
jmp
loopne
adc
iret
push
fisttpl
scas
imul
cmp
out
sub
sbb
xchg
pop
aad
cmp
sbb
mov
ja
movsl
stos
loop
sub
test
mov
dec
fcomps
pushf
xor
fimuls
cltd
cld
cmpsb
mov
mov
int
xchg
mov
add
push
pop
insb
clc
add
push
nop
or
mov
dec
repnz
sub
mov
ss
mov
outsl
sbb
mov
int
jg
inc
aaa
cmp
mov
fdivl
scas
sbb
pop
sbb
sbb
or
scas
add
xor
fisubl
or
lock
pop
or
outsl
lods
jbe
dec
cmp
jecxz
push
pop
lods
push
jge
mov
out
mov
add
jae
mov
ret
jge
xchg
stc
test
cmc
das
cmp
cs
push
sub
pop
pop
pop
les
gs
xor
adc
mov
mov
jp
cli
insl
adc
iret
lock
iret
mov
mov
jb
xor
movb
sub
loop
test
push
mov
mov
iret
inc
dec
flds
shll
push
jns
imul
sbb
jecxz
leave
cmpsb
int3
xchg
and
mov
and
sub
cmc
and
outsb
movsl
out
out
icebp
pop
pop
xor
repz
xchg
and
xchg
arpl
inc
int3
xchg
insb
add
lret
dec
push
fsubl
sbb
push
mov
call
je
jge
pop
pop
mov
aas
sbb
xor
jae
cmp
push
mov
xor
data16
enter
mov
fldcw
push
aam
or
adc
cld
or
jae
push
jmp
push
mov
push
push
fdivrs
orl
jp
aad
dec
fnstsw
sti
fs
cld
adc
call
mov
sbb
adc
mov
aas
sbb
mov
add
stos
jge
ds
jns
jo
arpl
sbb
das
cmp
and
jo
push
pushf
test
xchg
dec
jg
or
adc
shrl
pop
cmp
enter
fmuls
ret
es
mov
imul
inc
adc
popa
dec
test
addr16
test
cmp
daa
push
xor
cmc
adc
push
inc
pop
repnz
adc
lods
jns
xchg
dec
inc
xchg
push
sub
iret
ret
xor
xor
arpl
lods
lret
push
sub
mov
mov
pop
in
rclb
lret
addb
in
pop
xchg
into
fisubl
xchg
ds
cwtl
mov
aas
stc
icebp
xor
fdecstp
idiv
scas
ret
imul
cmpsb
orb
fcmovbe
imul
sbb
stos
xchg
sti
ret
pop
data16
aas
scas
cmpsl
xchg
into
mov
xchg
xchg
jns
cmp
mov
sbb
xlat
mov
push
ljmp
mov
and
out
addr16
dec
js
or
add
repz
dec
lahf
out
add
fwait
inc
fimull
fildll
xor
adc
repz
mov
outsl
mov
ret
jae
movsb
lds
mov
adc
mov
loopne
ds
cmp
push
scas
iret
sbb
cli
adc
stos
lods
push
sub
sti
inc
inc
pop
push
pop
sbb
push
incb
sbb
mov
pop
aaa
mov
shlb
adc
adc
cmp
sbb
lea
ret
loop
nop
mov
and
nop
lds
sbb
sbb
xchg
adc
sub
xor
cmp
outsl
sub
xor
and
loope
or
stos
sbb
pop
push
xlat
pop
mov
adc
push
rorb
mov
add
ret
mov
test
call
ja
sub
data16
in
fbstp
pushf
lea
ljmp
inc
lahf
ret
repnz
mov
mov
or
stc
inc
add
dec
imul
cmp
stos
lret
sti
popf
pop
movsb
cmc
jle
push
xchg
aam
add
mov
push
cmpsb
cmpsb
inc
out
shl
imul
inc
lock
sbb
enter
into
loope
push
rorl
sbb
mov
cld
add
adc
sub
xchg
int3
mov
xchg
xchg
jo
push
adc
into
lods
ret
sti
loop
push
cmpsb
xchg
insl
pop
cli
lea
add
pop
aaa
add
fdivrl
hlt
sbb
sahf
rcrl
and
xchg
pop
psrld
stos
xchg
xchg
sbb
leavew
ljmp
jle
xor
xor
popf
xor
add
ljmp
fsubp
fwait
push
sub
add
or
outsb
insl
jge
mov
cld
inc
and
cld
cmpsb
out
xchg
jecxz
sub
es
fistpl
xchg
mov
test
lret
add
scas
pop
sti
xchg
push
fiadds
icebp
sub
sub
dec
xchg
lods
xor
ljmp
xchg
push
int
fs
inc
je
jg
cmpsb
cli
ss
mov
sbb
jp
jge
shll
popf
mov
les
loop
popa
mov
add
cmp
cmpsl
ja
add
sub
push
jge
cwtl
rcr
mov
movsl
pushf
movsb
rolb
and
test
aas
test
fisttpll
sub
mov
inc
ret
in
sub
sbb
and
cmp
sub
stos
inc
cmp
cmp
fmuls
mov
insb
mov
dec
out
pop
mov
out
out
and
das
xchg
or
mov
push
push
mov
and
gs
pusha
cmp
adc
jge
inc
sbb
sub
xor
iret
roll
push
push
jg
repz
imul
or
insl
int
or
ss
mov
lock
push
mov
cmpxchg
mov
push
push
and
sub
mov
sub
repnz
ja
fs
aas
add
sti
scas
pop
mov
incb
ds
mov
inc
fsubrl
jle
cli
jecxz
je
dec
mov
cltd
insb
inc
lahf
inc
cmpsb
ret
test
fsubp
pop
sbb
lret
incl
pop
add
popf
call
shl
lcall
xor
inc
daa
in
mov
xor
or
sbb
sbb
mov
lea
lret
mov
pop
mov
dec
mov
or
sbb
daa
aad
cmp
sbb
mov
mov
cmp
shr
cmp
sub
jo
leave
bound
nop
sahf
pop
dec
vmovlps
and
mov
or
push
repnz
xor
test
jns
lret
repz
inc
les
test
mov
int3
test
arpl
imul
sbb
inc
loop
xor
fcmovb
inc
test
loopne
inc
push
add
xor
dec
mov
into
repnz
pop
push
mov
or
insl
xor
cmp
ljmp
std
adc
test
movsb
mov
xor
and
jl
pop
mov
mov
test
gs
lret
test
std
xacquire
jge
add
pop
popf
add
enter
lahf
lcall
gs
or
sub
shl
arpl
push
cmp
leave
sbb
xchg
leave
push
mov
arpl
arpl
clc
ljmp
stc
sub
or
jnp
dec
jns
mov
arpl
cltd
loop
xchg
pop
ror
jmp
loope
jae
xchg
out
mov
insl
xchg
add
xchg
scas
call
cli
xor
in
xor
cld
pop
je
fldcw
xor
cmp
mov
iret
add
xor
and
xor
mov
sbb
and
inc
push
mov
subl
and
cmovs
xchg
jg
or
jecxz
mov
pop
fsubl
mov
jmp
shll
xlat
mov
cld
imul
jle
mov
popa
frstor
adc
sub
sub
pop
shr
and
out
mov
cli
and
mov
xor
je
stos
adc
cmp
push
sub
mov
pop
adc
cmp
mov
fisubs
imul
sub
divb
push
jne
js
and
jno
push
pop
sbb
or
fcomp
xchg
cmp
out
or
xchg
adc
inc
pop
adc
jnp
nop
stos
dec
xor
and
inc
iret
dec
sub
in
mov
ljmp
xchg
rolb
pop
ret
testl
test
stos
cmpsb
sbb
fdivrp
inc
adc
mov
xchg
loop
jno
push
dec
out
in
and
les
inc
iret
fdivl
outsl
dec
fs
paddw
cmpsl
jns
xor
js
mov
lea
add
std
aam
push
out
mov
push
xor
mov
mov
imul
pushf
int
mov
call
pop
repnz
sub
fsubrl
push
dec
and
int
dec
xor
in
inc
xchg
or
jp
jle
jecxz
fdivs
out
mov
pop
scas
divb
in
ja
inc
jp
adcb
ds
outsl
push
xchg
push
stos
dec
xchg
sub
addr16
jmp
xchg
cli
movsl
test
xchg
push
sub
mov
divl
shlb
xor
xchg
fwait
add
stc
xor
sahf
push
inc
pop
and
outsl
stc
test
leave
cmp
popf
cmp
or
sub
rcrl
cmpsl
jge
cmc
inc
andb
and
or
sbb
cmpb
mov
add
daa
cld
inc
dec
mov
xlat
aaa
adc
pop
rcr
push
mov
lds
jge
testb
cwtl
push
mov
inc
cli
mov
loop
pop
or
movsl
cmc
jo
add
stos
inc
out
adc
add
xchg
and
fwait
push
repz
sbb
jp
push
icebp
aaa
lods
push
mov
xor
pop
inc
call
mov
lock
pop
lods
stos
bound
push
inc
cmp
or
iret
movsb
and
or
dec
and
push
das
inc
pop
jae
arpl
xchg
out
sbb
iret
mov
lahf
repz
jecxz
adc
pop
xor
aas
push
das
inc
pop
jae
arpl
xchg
out
sbb
iret
mov
lahf
repz
jecxz
adc
pop
xor
aas
push
das
inc
pop
jae
arpl
xchg
out
sbb
iret
mov
lahf
repnz
jecxz
adc
pop
xor
aas
push
das
inc
pop
jae
arpl
xchg
out
sub
iret
aam
pop
daa
cmp
or
sbb
xor
add
sbb
inc
es
mov
gs
inc
rclb
movsl
xor
add
jb
lds
inc
and
xchg
adc
loop
nop
push
ret
mov
test
xchg
add
jb
lds
inc
and
divb
gs
lea
mov
aam
test
push
ljmp
inc
in
sub
stos
adc
call
ficoml
add
dec
mov
in
cmc
popf
cmp
cltd
pop
mov
rdmsr
xchg
adc
fbstp
out
in
outsb
mov
daa
mov
adc
pop
adc
repz
and
sub
xchg
mov
lea
bound
mov
shlb
sub
xor
add
aad
cmp
shll
cmc
mov
inc
xor
sub
dec
fnstsw
pop
jle
popa
daa
lds
cmc
cmpb
out
and
data16
add
jb
lds
inc
and
xchg
adc
loop
rclb
rcrb
ret
jnp
imul
push
adc
push
jbe
push
xchg
and
and
and
adc
jo
cmp
inc
push
lret
js
adc
mov
aas
xchg
ret
jno
jp
addr16
lds
inc
and
xchg
adc
loop
rclb
movsl
xor
add
jb
lds
inc
and
xchg
adc
loop
rclb
movsl
xor
imul
ljmp
push
imul
imul
pushf
popa
scas
das
push
mov
or
shll
leave
adc
dec
xor
or
xchg
orl
hlt
jo
lods
xchg
in
or
sub
rdpmc
mov
iret
fistl
ret
int3
inc
and
lock
lds
testb
pop
push
fcmovnu
rorl
mov
lods
mov
add
sti
fsts
mov
sbb
sti
out
push
sub
add
and
js
dec
mov
xor
leave
inc
daa
fildl
aas
adc
rorl
sbb
stos
or
mov
jmp
push
push
sub
mov
ljmp
jns
stc
dec
fwait
and
mov
mov
repnz
je
mov
xor
and
jmp
dec
pop
sbb
cmp
adc
sbb
and
pop
gs
cmp
pop
pop
add
push
cmp
aaa
dec
jbe
imul
cld
gs
adc
mov
rcll
cmp
mov
pop
mov
lret
outsl
jl
and
sti
sti
lods
into
stc
jae
aaa
cmp
push
cmp
ret
cld
push
xchg
nop
shr
sbb
adc
mov
bound
xchg
fs
iret
pop
mov
cmp
fidivl
mov
stc
sbb
xor
mov
in
xchg
outsl
shrb
fadds
cmp
int
or
jae
push
insb
in
pop
frstor
mov
fnstcw
negl
ret
int
js
sub
mov
clc
xchg
out
es
bound
enter
add
stc
cmp
lods
scas
xchg
ss
insb
ficompl
sub
pop
lret
push
out
jno
cli
xor
xchg
or
out
cmpsl
bound
ljmp
mov
mov
pop
cmp
cmp
sbb
mov
sub
pop
adc
push
dec
pop
test
pop
fsubl
xchg
pop
push
rcll
sub
repz
add
cmc
adc
or
insl
enter
fucomip
aam
xchg
push
lods
xchg
mov
sti
pop
cmp
imul
xchg
jmp
mov
mov
imul
push
xchg
in
xor
lea
or
cmp
pop
clc
mov
pop
adc
dec
aad
es
inc
jb
dec
outsl
cs
mov
sub
aam
dec
pop
mov
and
imul
lahf
sub
mov
loopne
mov
push
outsb
or
sbb
lret
xchg
ret
dec
cld
mov
cld
les
cmp
mov
subl
jmp
movsb
mov
sti
shrb
xchg
mov
mov
aaa
add
sub
dec
in
mov
dec
pushf
je
out
fsub
mov
icebp
fsubrs
gs
sub
dec
gs
and
aad
hlt
add
in
xchg
test
adc
arpl
adc
push
or
aad
icebp
cmc
lds
sbb
mov
jno
testl
popf
mov
sub
pop
xor
or
lret
dec
jo
push
in
inc
or
mov
inc
lea
rorb
sub
push
dec
bound
add
mov
cli
add
or
jae
push
in
std
fdivr
ja
xchg
gs
push
push
xor
push
mov
movsl
fsubs
xor
or
pop
stos
sbbl
lods
jecxz
ss
icebp
std
arpl
lock
and
out
roll
jno
inc
out
and
loope
mov
and
push
sub
stos
icebp
xchg
mov
sub
jae
mov
add
cmp
mov
int
jge
sub
leave
inc
cmp
mov
dec
jae
inc
mov
inc
ret
mov
dec
mov
ret
add
jo
xchg
jbe
les
push
xor
push
jae
pop
jmp
sti
jae
pop
shll
cwtl
cmp
les
sar
dec
or
add
pusha
fmul
pop
cli
call
cli
jecxz
hlt
inc
cld
mov
gs
or
loope
out
pusha
fisubl
xrelease
xor
adc
push
mov
out
push
or
imul
push
enter
jmp
mov
push
push
cmp
mov
adc
push
jp
sub
push
mov
out
into
mov
lea
adc
sti
push
cwtl
xor
fwait
in
das
sbb
mov
mov
jle
vpunpckhqdq
jb
dec
stc
or
add
aad
inc
cltd
sahf
lcall
in
adc
outsl
cmp
pop
aas
or
in
inc
fwait
les
xchg
or
incb
outsb
push
int3
cmp
daa
out
dec
add
push
cmp
xor
rcpps
jno
sbb
pop
sub
mov
cmp
jo
ds
or
jmp
mov
sbb
xor
fs
dec
push
movsl
cmovl
in
mov
mov
xor
mov
push
mov
lret
data16
mov
push
push
inc
or
sbb
int
and
inc
push
pop
es
iret
out
cmp
and
push
push
ficoms
sub
add
jge
aam
fwait
xor
das
iret
mov
insb
insl
or
test
lods
push
jmp
cmp
hlt
xor
sub
mov
push
mov
cmpl
sahf
js
test
movsl
into
add
in
mov
jmp
cmp
push
movl
out
lea
adc
fnstcw
or
push
fwait
je
shrd
jmp
jecxz
sub
int3
xlat
lahf
shll
pcmpeqw
mov
cmp
sbb
out
aam
jne
lret
mov
mov
adc
jmp
in
mov
or
adc
cmp
scas
push
loope
repz
mov
mov
dec
mov
out
mov
add
xor
inc
pop
and
jp
fisubrs
pop
jg
push
push
pop
sbbb
fdivl
nop
xor
ja
mov
out
lods
sbb
mov
add
test
or
xchg
dec
lea
rcll
lcall
in
jno
adc
ds
pop
out
push
iret
test
loope
loopne
cld
mov
inc
cwtl
jp,pn
mov
mov
inc
movsb
sbb
cmpsb
insb
mov
testl
mov
in
mov
sub
imul
mov
mov
adc
fsts
jp
imul
xchg
push
gs
mov
and
add
ret
ja
out
mov
xrelease
aaa
push
jne
cmpsl
or
into
jmp
inc
mov
mov
add
jb
xchg
imul
dec
out
xchg
jg
xchg
fsubr
addr16
fistpll
jmp
inc
fwait
mov
and
jne
call
lods
adc
out
jle
jns
in
cmpsl
std
shll
jecxz
nop
ret
mov
es
sub
ljmp
leave
fwait
xchg
adc
and
cli
dec
push
mov
sbb
pop
packuswb
push
aad
jns
add
les
push
cli
push
pop
push
push
and
in
inc
and
ds
adcl
sub
pop
jecxz
sbbl
add
jns
loope
fldenv
sub
xor
or
ja
orl
ljmp
lds
xor
jnp
test
call
mov
jmp
les
ret
jne
das
adc
das
insl
sub
stos
sti
fmuls
sti
icebp
out
mov
adc
dec
sahf
cmp
jb
ss
sbb
cmc
add
lods
cwtl
lods
loop
repnz
mov
shrl
mov
mov
cmpsb
cld
in
imul
and
in
je
push
lahf
jmp
sbb
js
add
cltd
dec
outsl
stc
push
cmp
cld
cmp
icebp
or
inc
dec
cmpsb
out
push
xor
inc
sub
push
jmp
stc
ret
xor
adcl
mov
jge
cmc
ret
mov
mov
cmp
inc
cmpl
in
in
roll
inc
je
adcl
ds
rcl
lcall
lret
addr16
scas
lods
or
xor
sbb
test
inc
sub
jno
enter
negl
insl
lods
stos
mov
jmp
mov
cmovne
outsb
das
lret
cmpsb
shrl
int3
mov
jmp
jle
mov
daa
adc
leave
sub
xor
rol
sub
jg
cmp
scas
pop
sub
subb
jp
mov
jb
scas
int
mov
push
repz
adc
bound
scas
out
mov
repnz
xor
jb
shrb
push
shrl
xor
aad
pop
jno
xchg
sbb
jo
mov
leave
mov
mov
in
pop
dec
mov
sbb
mov
mov
cmp
sbb
or
clc
xchg
xchg
inc
fwait
fwait
adcb
fucomi
aad
in
adc
lahf
pop
sub
das
notb
mov
fildl
pop
stos
and
jnp
xchg
jns
mov
xchg
mov
pop
aad
mov
pop
lea
pop
ja
in
pop
inc
and
out
iret
jnp
mov
dec
sbb
lds
inc
or
clc
mov
lock
loop
int
add
fsubr
dec
aad
movsl
fucomi
repnz
fstl
pop
pop
out
or
popf
jns
test
repnz
js
inc
xchg
add
dec
or
shl
adc
mov
xchg
mov
inc
mov
stos
enter
outsl
insb
je
out
push
inc
arpl
and
rorl
out
or
aad
sbb
and
cmpsb
add
sub
sbbl
idivl
dec
xchg
xchg
jnp
sbb
fbld
jmp
push
xchg
push
rcrb
xchg
test
add
xor
das
test
dec
jae
push
adc
mov
mov
movsb
movsl
outsl
sbbb
repnz
das
sub
scas
push
ret
pop
push
das
pop
daa
dec
ret
xor
adc
dec
and
xchg
add
adcb
cltd
add
and
mov
std
ljmp
dec
test
lea
pop
sbb
mov
std
stc
xor
jbe
pop
push
jecxz
cmp
jp
add
push
mov
jo
dec
fwait
pop
popa
cmc
inc
pusha
xor
aaa
mov
mov
std
les
sbb
jge
inc
inc
outsb
or
mov
daa
mov
dec
jge
cmp
xchg
add
imul
push
xchg
push
sti
inc
push
xchg
cmp
and
fiadds
pop
mov
rclb
in
addl
idivb
pop
das
push
and
enter
aaa
push
inc
jno
inc
jns
shlb
fstpt
lret
and
xchg
or
lods
sub
lods
pop
out
pushf
jo
sbb
xchg
mov
push
imul
sub
sub
mov
xor
sub
and
in
xlat
mov
int
enter
jno
fsub
xlat
shrb
sahf
int3
loop
lea
sub
and
fwait
cmpsb
jne
mov
call
mov
ret
sub
stos
push
inc
xor
mov
dec
jno
daa
and
or
dec
mov
pop
mov
ds
push
ror
in
rorl
add
mov
imul
mov
cwtl
ja
fs
int
or
jmp
je
inc
push
and
push
sub
mov
fxch
not
xchg
cmpb
add
mov
jp
mov
sti
sarl
jmp
popa
ds
push
jp
lods
jmp
dec
out
lahf
push
fstpl
into
enter
sahf
les
xchg
pop
inc
jnp
out
lods
xor
test
lcall
jo
cmp
dec
pop
mov
pop
sbb
dec
rorb
xchg
jo
out
nop
fnstcw
lret
movsb
inc
mov
cmpsl
add
adc
sub
dec
aaa
dec
pusha
icebp
out
scas
iret
addr16
add
dec
mov
dec
adc
adc
jo
cltd
divl
dec
dec
test
std
sbb
sar
fcmovnb
shl
mov
js
scas
fsubs
fs
push
loopne
sti
mov
mov
and
ret
or
loopne
ror
adc
arpl
mov
adc
and
lock
xchg
es
fisttpll
xchg
xor
lahf
push
xor
std
fbstp
xchg
subl
test
sub
aam
cmp
jns
jecxz
jg
orl
into
and
ret
jb
popa
push
orl
fmuls
arpl
jp
lret
cltd
imulb
mov
rcrl
sub
icebp
inc
jne
cwtl
push
shr
ror
daa
mov
mov
loop
sub
fnstsw
es
data16
cmp
inc
cmpb
add
out
adc
out
xor
push
shrl
or
fildll
mov
xchg
push
inc
ljmp
mov
ret
push
ficompl
iret
jae
sahf
stc
cmp
or
enter
pusha
xor
or
daa
sbb
mov
xchg
mov
sbb
push
xor
aam
mov
push
dec
jle
js
xchg
outsl
popf
aad
sub
cmpsb
add
test
aam
test
mov
cs
dec
sti
mov
daa
pop
push
dec
shrl
push
xor
iret
xor
lcall
dec
sub
pusha
jno
push
lds
pop
imul
xor
int3
mov
xor
pop
das
jge
ja
pop
add
or
push
mov
push
cmp
cmp
icebp
or
in
ja
fistpll
jg
add
add
mov
mov
jns
mov
ret
in
mov
jnp
sahf
into
and
cmp
int3
repnz
scas
mov
inc
sub
mov
and
lods
mov
rolb
jp
pop
fidivrs
mov
mov
pop
jns
rorb
cmc
lcall
add
mov
repnz
xchg
mov
add
mov
call
in
lock
xor
lahf
repnz
lret
outsb
enter
iret
xor
test
in
mov
inc
and
jl
lds
cmpsb
sarb
das
push
fwait
mov
mov
mov
les
mov
dec
cmc
xchg
pop
je
mov
and
sbb
xchg
fildl
ljmp
aad
sbb
push
cmpl
or
aad
addr16
jne,pt
push
and
pop
aas
jo
testb
idiv
bswap
andl
inc
mov
xlat
inc
add
cmpsl
jns
js
stos
fildll
cmp
and
jmp
icebp
dec
out
in
mov
lret
mov
dec
lods
or
jecxz
lahf
fidivl
dec
dec
or
pop
dec
mov
push
xor
lret
mov
mov
push
popa
out
jae
roll
and
lcall
dec
push
jle
push
out
pop
xor
and
pop
inc
xchg
outsb
in
push
stos
inc
dec
aas
mov
das
insb
rcrl
cmpsb
push
mov
inc
mov
and
dec
in
mov
mov
xchg
mov
ljmp
mov
ljmp
adc
movsb
repnz
fnsave
leave
cs
out
mov
in
and
xor
test
or
sti
sub
push
add
fistps
cld
lret
sbb
fucomp
sbb
jo
mov
mov
cmp
ds
repz
clc
nop
mov
xor
fimuls
and
addr16
stos
or
popa
push
dec
in
out
test
test
test
outsb
push
out
lock
push
data16
gs
loope
xor
dec
pop
pop
mov
pop
mov
mov
and
daa
push
and
or
jnp
or
pop
xor
jmp
stos
mov
arpl
adc
xor
pop
mov
outsb
sub
jb
sub
arpl
into
pop
std
sub
sarl
jge
sahf
xchg
data16
mov
or
add
dec
add
cmp
inc
cmpl
xchg
shll
xor
mov
push
sbb
mov
push
xchg
ss
adc
cmp
mov
lock
popa
shlb
and
mov
in
insb
imul
mov
out
les
lods
out
push
xchg
in
cmp
int3
and
test
or
sbb
xlat
pusha
xchg
mov
adc
popf
aad
mov
adc
pop
inc
leave
stc
in
mov
repnz
inc
sbb
test
into
mov
mov
mov
jns
jno
je
push
gs
pop
adcb
inc
dec
in
mov
jp
cmpsb
jb
xchg
xor
ja
lods
in
sbb
sbb
ds
dec
inc
negl
outsb
addl
popf
cmp
mov
push
mov
and
ljmp
ljmp
push
fwait
adc
cmp
repnz
inc
pop
rcl
out
clc
arpl
in
rorl
xchg
lahf
ljmp
cs
mov
cltd
mov
pop
in
push
dec
push
dec
pop
mov
sbb
pusha
lret
dec
lcall
jg
mov
test
gs
xchg
cmp
call
incb
int3
mov
ds
pop
andb
dec
sbb
out
mov
sub
rclb
ljmp
cmp
push
gs
mov
add
ja
push
pop
jne
mov
sbb
sub
sbbl
sbb
in
mov
pop
inc
int3
pop
lcall
mov
pushf
jo
into
jl
loop
loop
push
repz
mov
mov
xor
sbb
ljmp
push
pop
sti
adc
into
push
fucomip
sub
sbb
lcall
loop
movsl
inc
xchg
mov
cmp
ja
mov
gs
call
hlt
xchg
mov
adc
cmp
out
and
out
jo
and
rcrb
clc
fbstp
testb
in
icebp
ret
lods
and
call
sar
sahf
or
cmpsb
fwait
push
push
sbb
sub
loopne
and
jne
push
fdivs
inc
pop
pop
loope
or
sub
aas
inc
and
push
or
std
out
xor
xchg
sarl
sub
popa
mov
cltd
rcr
int3
iret
je
adc
lea
cld
inc
sub
sbb
and
fadd
clc
pop
add
adc
in
mov
inc
sbb
lret
insl
xchg
adcl
outsb
jp
mov
dec
pushf
mov
adcl
push
lret
popa
outsb
lahf
pop
rcr
lret
or
jle
adcl
and
outsb
push
jno
mov
sub
insl
xor
or
movsb
mov
xchg
cmc
repnz
mov
aas
shll
mov
mov
ja
dec
add
inc
push
cltd
mov
pop
inc
sbb
pop
push
out
inc
dec
lds
mov
jnp
roll
pop
testl
mov
add
xor
out
adc
roll
sbb
lcall
adc
mov
jmp
repnz
mov
bound
lock
sub
je
push
mov
jo
insl
inc
imul
mov
mov
xor
loop
sbb
sub
in
js
fisubrs
pusha
inc
sbb
and
sahf
call
ret
jle
push
cmp
or
adc
xor
pop
xor
lods
push
jne
pop
xor
int
outsb
je
ror
xlat
sbbb
scas
mov
and
out
lahf
xchg
add
pop
adc
int3
lret
pop
pusha
ds
ja
popf
test
push
addb
dec
cmpsl
out
lds
xchg
or
pop
dec
adc
das
sbb
loope
test
les
add
push
lods
xor
fwait
adc
cmc
add
and
cli
mov
loop
xchg
and
xor
cmpsb
mov
add
add
jmp
pop
mov
shlb
stos
arpl
aaa
subl
test
insl
mov
jno
mov
in
xor
cwtl
repz
dec
ret
mov
cmp
mov
aas
or
pop
push
mov
fsubrl
mov
jne
call
int3
cmp
callw
movsb
jae
icebp
or
inc
cld
lds
xchg
dec
je
lods
out
xor
xor
mov
or
dec
pop
incb
test
cmp
jno
mov
push
out
inc
add
dec
fisubl
sbb
push
pop
icebp
loopne
jne
scas
pusha
pop
inc
mov
testb
fwait
testl
push
cmp
mov
shr
push
in
pop
cmp
mov
mov
mov
xchg
jbe
lret
jg
loop
mov
xor
shll
sub
out
mov
mov
dec
jns
pop
push
and
jb
lds
inc
and
xchg
adc
loop
rclb
movsl
xor
add
jb
lds
inc
and
xchg
adc
loop
rclb
movsl
xor
add
jb
loop
push
aad
and
xor
andb
loop
rclb
movsl
xor
add
jb
bound
push
inc
fidivl
adc
sbb
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
sub
arpl
push
push
inc
push
sub
push
adc
sbb
jecxz
rorl
jecxz
xchg
into
sbb
arpl
arpl
inc
push
xor
jle
dec
add
scas
jecxz
mov
add
xchg
into
sbb
jp,pn
dec
push
pop
push
sub
jle
dec
adc
pause
call
sahf
pushf
mov
ljmp
push
repnz
cli
mov
sbb
pop
es
inc
mov
jae
out
jle
pop
push
loope
xchg
faddl
cmp
sbb
sub
into
lahf
ucomiss
jne
into
push
and
cmp
sbb
xorl
dec
sbb
icebp
outsb
sbb
orl
int
xor
shll
mov
enter
outsb
sti
cmpsl
add
popf
mov
ss
push
xchg
mov
ret
aaa
jecxz
outsb
jecxz
add
sbb
jb
lods
sbb
mov
mov
bswap
imul
sub
or
sbb
sub
ret
adc
fidivs
push
push
push
and
jle
dec
sbb
scas
sti
mov
stos
out
mov
cwtl
add
in
ss
daa
pop
push
add
adc
outsb
cs
jecxz
mov
add
testb
outsl
arpl
inc
dec
inc
or
jg
inc
pop
icebp
jmp
rclb
adc
mov
jle
dec
ss
push
add
jle
dec
add
scas
jecxz
rorl
mov
fidivs
arpl
push
push
inc
push
xor
jle
dec
add
scas
jecxz
rorl
mov
fidivs
mov
iret
sbb
aas
adcb
mov
cltd
push
xor
pop
jb
push
adc
adc
jne
jp
dec
jnp
push
pop
data16
es
mov
lds
aas
cmpsb
xlat
gs
and
push
xchg
push
mov
jl
cli
nop
popf
adc
jl
adc
sbb
test
cmp
inc
push
fdivrs
gs
cmc
call
aad
mov
ss
add
outsb
shll
cs
fmull
and
dec
ljmp
push
aaa
sub
ret
scas
pushf
cld
clc
test
sbb
xchg
inc
and
sar
aas
lods
es
push
push
dec
and
aas
xchg
std
xor
and
shrb
xorl
mov
fwait
ljmp
mov
adc
lods
pop
mov
jae
pop
lods
sbb
and
push
mov
out
cmc
xor
lahf
pop
daa
mov
lock
lds
arpl
mov
leave
test
pusha
dec
in
cmp
pop
rcr
std
xor
in
iret
pusha
xor
mov
xchg
xor
jae
jb
loope,pn
inc
push
mov
and
sub
jge
bound
lock
mov
repz
pushl
loop
jnp
push
jle
cltd
je
mov
jle
js
mov
pop
mov
jg
mov
sbb
pop
mov
repnz
push
mov
repz
daa
loop
dec
aad
sbbb
cmpb
adc
lret
std
jns
jbe
sbb
pop
push
inc
xchg
testb
sbb
cmp
adc
or
sahf
adc
mov
inc
loop
and
sbb
pop
cmc
mov
inc
or
std
push
jb
ret
addr16
movsl
fmull
dec
sub
sub
sbb
fimuls
fucomi
sbb
inc
jg
out
mov
mov
frstor
inc
or
dec
mov
mov
in
in
cmp
dec
das
shrl
aam
icebp
and
adc
mov
in
aaa
dec
jns
push
and
test
cltd
out
xchg
xor
imul
je
xor
iret
sbb
inc
movsb
dec
inc
cmp
xchg
lcall
test
leave
insb
xchg
dec
dec
int
xchg
aad
push
ds
pop
pop
pop
xchg
lods
popa
out
xchg
add
sbb
jae
mov
pop
pop
pop
ss
mov
movb
adc
pop
add
hlt
imul
xchg
or
test
xchg
addl
push
mov
stos
leave
mov
dec
sti
dec
or
daa
fcomip
adc
pop
fdivrl
iret
pop
out
dec
int
dec
cld
push
imul
lea
jne
sbb
rorl
mov
mov
dec
jbe
imul
xlat
popa
cs
sbb
subl
xchg
fistl
push
add
xchg
cmp
ja
xor
mov
xchg
mov
dec
popl
call
imul
ds
dec
stc
mov
out
std
aas
push
in
test
outsl
and
ljmp
movsb
fildll
loopne
push
inc
fildll
ret
mov
je
inc
mov
add
cwtl
mov
mov
and
out
sbb
cmp
xor
out
movsb
add
cs
jne
mov
adc
lock
movsl
mov
adc
mov
cli
test
push
rclb
cmpb
push
scas
das
add
jl
mov
xor
rclb
enter
pop
adc
adcb
jmp
push
and
xor
gs
fnstcw
enter
jge
in
insb
addb
push
xor
pop
fimull
pop
out
es
jecxz
pop
repnz
lock
data16
mov
in
mov
loopne
fsub
fs
out
lret
sub
jb
test
jne
popf
lea
sbb
fs
mov
lds
mov
sti
cmc
or
loope
popa
daa
xor
lods
rclb
push
lods
push
jnp
aaa
daa
js
pop
loope
jle
or
mov
popf
test
lods
loope
push
push
icebp
loopne
js
int
cmp
mov
repnz
incb
add
je
xor
aaa
les
xchg
mov
aas
push
stc
call
test
sarl
sub
xchg
xchg
out
cltd
cwtl
scas
repz
nop
adc
ret
cmc
addl
xor
xchg
ucomiss
sub
cmp
out
das
movsb
es
mov
loop
sbb
test
jae
imul
pop
pop
dec
inc
mov
pop
sub
cmp
jecxz
xor
mov
mov
pop
push
fnstsw
aad
test
jle
sub
scas
dec
jb,pt
movsb
rorl
sub
bound
aam
lret
sahf
into
aas
stc
sahf
gs
repz
sahf
push
push
jo
cmpsb
dec
aam
sbb
jae
mov
das
es
push
jmp
cmp
pop
ja
dec
mov
xor
movsl
or
dec
mov
pop
inc
pop
inc
shll
add
mov
mov
sahf
cmpsl
movsl
in
cmp
call
mov
cld
xchg
iret
push
ret
aad
xlat
push
adc
add
sbb
fldenv
repnz
jns
push
fstpl
mov
lods
out
or
xchg
lret
mov
lahf
adc
imul
inc
jbe
lret
movsb
outsl
imul
imul
aam
add
and
sbb
insl
jo
mov
lahf
lahf
mov
cld
mov
jno
loope
mov
and
or
mov
mov
xchg
jle
insl
sbb
add
and
jg
push
push
and
adc
mov
sbb
jmp
jo
jns
lock
inc
dec
stos
add
jns
cwtl
push
mov
scas
imulb
test
mov
mov
mov
or
adc
in
imulb
mov
fildl
mov
push
inc
scas
pop
jno
add
stos
adcb
mov
inc
and
push
cwtl
sub
mov
outsl
mov
jge
test
repnz
pop
and
movsb
icebp
fisttpl
adc
daa
push
push
xor
jne
pop
mov
jle
ret
xchg
or
testl
enter
adc
push
push
hlt
adc
sub
xchg
pop
scas
js
pop
xchg
xchg
fs
sub
sub
aaa
xchg
fwait
xchg
pop
mov
mov
adc
and
adc
pop
scas
dec
ljmp
dec
sbb
in
sqrtps
add
adc
mov
push
sub
add
cmpl
jae
xor
adc
adc
ja
jmp
inc
jns
aas
repz
jns
jb
int3
testl
jge
insl
mov
cli
lahf
push
dec
sbb
outsb
mov
jbe
ret
ret
ret
das
mov
pop
aam
popf
loopne
dec
xchg
or
xchg
push
push
repnz
xchg
xchg
fcomi
popf
arpl
cmpb
sub
cltd
loope
xchg
dec
sbb
loopne
dec
outsl
orl
test
sti
bound
inc
lods
data16
mov
push
and
mov
add
push
adc
dec
xor
mov
dec
dec
popf
adc
or
sarb
mov
xlat
adc
xchg
fucomp
ss
es
es
loope
sub
je
ds
pop
mov
cmp
mov
sub
out
int3
and
sahf
nop
cs
mov
mov
lock
xchg
mov
sbb
cs
faddl
jmp
dec
por
xchg
enter
and
push
jnp
mov
loope
jns
dec
xchg
lret
iret
pop
bnd
push
cli
push
push
cmpl
push
repz
lahf
pop
push
or
xchg
push
popf
scas
inc
out
dec
int3
js
orb
leave
lods
jnp
sbb
shr
popf
and
lods
fadds
and
lods
sub
lock
jg
mov
les
mov
jae
scas
and
mov
push
push
out
daa
mov
push
pop
and
insl
fucomip
int
mov
push
dec
pop
mov
das
push
adc
or
fldl
int3
enter
inc
push
and
push
push
sbb
jmp
xchg
mov
addr16
inc
add
mov
push
mov
jge
dec
push
cmp
movsl
es
mov
mov
cmc
rorl
inc
ja
or
mov
mov
leave
push
testl
int
jge
rolb
jnp
xchg
sbb
sub
rcll
jecxz
loope
sub
push
std
mov
push
aaa
mov
dec
repz
push
test
xchg
data16
lock
nop
aas
xor
or
rep
call
rorl
out
xchg
stc
fdivrs
mov
mov
pop
cmp
lods
cmc
out
popa
cltd
movsl
ds
movsb
es
icebp
lock
out
jecxz
push
xor
mov
pop
inc
jo
lret
jle
jecxz
outsl
das
stos
jns
mov
cltd
jo
jno
jbe
push
or
gs
clc
mov
sbb
jb
push
js
mov
xor
test
movsl
mov
add
mov
sub
push
mov
aam
push
adc
fistl
les
iret
decl
test
repnz
sbb
pop
mov
push
adc
or
or
lret
jno
xchg
dec
cmc
lret
or
sbb
or
cmp
cmp
insl
mov
test
mov
out
test
pop
jecxz
cmp
sub
jge
cmp
dec
out
add
push
subb
sub
push
sbb
mov
dec
cmp
das
in
sbb
dec
filds
xorb
xchg
aad
xorb
or
dec
jmp
add
xor
loopne
pop
scas
aas
mov
add
es
outsb
imul
cmp
dec
cs
dec
inc
out
hlt
and
and
sub
mov
loopne
dec
sbb
in
jbe
std
test
jecxz
pop
daa
movsl
dec
mov
xor
enter
dec
sbb
push
jnp
cmp
aas
icebp
mov
xor
addr16
jmp
jmp
leave
lahf
js
inc
aaa
ljmp
sbb
dec
jle
mov
mov
lock
sub
mov
jb
paddusw
inc
and
mov
cmpsb
mov
mov
pop
push
dec
rcrb
repnz
cmp
test
lea
cmc
sbb
test
test
sub
mov
push
pop
lahf
cltd
or
adc
call
mov
mov
jne
fsubs
fmul
adcb
out
cld
andb
xchg
xor
cwtl
push
xchg
and
into
pushf
sbb
push
cmc
add
out
enter
mov
xor
out
mov
nop
adc
push
enter
pop
push
popf
sbb
sti
arpl
sbb
mov
push
pusha
push
adc
push
xchg
dec
in
sub
movmskps
cld
xor
test
cmpsb
mov
push
arpl
mov
push
push
dec
mov
lret
push
jl
cmp
mov
mov
fsubrl
imul
js
div
negb
inc
dec
leave
or
sbb
cs
imul
lea
push
loop
icebp
out
sbb
arpl
daa
inc
nop
ret
mov
dec
in
sarl
out
sub
into
dec
dec
or
rcrl
fs
les
daa
cmp
pop
sbb
sbb
xchg
pusha
in
addr16
ljmp
dec
cli
scas
lds
or
push
adc
lret
mov
mov
push
jb
pop
inc
testb
dec
dec
les
xor
xchg
sub
xchg
bswap
iret
ja
sub
and
mov
lahf
fadds
or
cmp
stos
loop
dec
nop
test
lock
sbb
insb
jecxz
mov
popa
jae
and
nop
xor
mov
iret
or
sub
int3
cmp
fisubs
adc
fists
sub
add
mov
lds
repz
in
lock
push
enter
fwait
outsb
roll
mov
add
test
adc
punpckhwd
mov
or
xchg
dec
cltd
mov
xor
xchg
adc
std
mov
pop
cmp
rcr
sbb
popf
sub
test
test
rclb
out
scas
fnstsw
lret
dec
mov
test
ja
sub
pminub
lahf
aaa
push
mov
push
nop
dec
cld
jb
mov
outsl
pushf
mov
aaa
jg
mov
jae
pop
pop
add
ror
ds
sub
and
out
mov
ret
repnz
wbinvd
jnp
pop
jmp
ficompl
inc
or
test
popf
out
mov
sub
repz
inc
fistl
cld
sbb
outsl
neg
jno
es
aas
mov
mov
adc
aas
je
fdivrs
sbb
cmpsb
je
xchg
pop
int3
jge
outsb
stc
and
cmp
int3
jle
clc
jne
lock
xor
jmp
fisubs
fsubl
ljmp
push
scas
add
aaa
sub
push
pop
test
inc
push
pop
xchg
xor
add
sbb
xor
pop
repnz
sub
orl
daa
mov
fiaddl
mov
std
sub
xor
test
scas
xchg
das
mov
push
xor
inc
repz
lahf
pop
pop
xchg
loope
cwtl
scas
jmp
stc
ja
test
push
in
sbb
imul
fnstenv
jecxz
sub
xchg
sbb
and
dec
loope
xor
jae
sub
int3
push
nop
mov
inc
ret
mov
add
or
or
fadds
in
outsl
jecxz
lds
lds
inc
call
imul
xor
inc
mov
xor
outsb
sub
es
sbb
clc
arpl
mov
cmp
cmp
pop
add
data16
sti
pop
fdivr
lds
jl
sarl
adc
jno
add
scas
mov
mull
call
outsl
xor
sbb
cmp
scas
daa
push
mov
jmp
int3
sub
andl
mov
push
aas
inc
and
ror
cmpsb
shll
cwtl
leave
mov
xor
xor
inc
test
pop
cltd
jne
loopne
fwait
pop
outsl
movsb
test
cltd
pop
and
sbbl
insl
adc
in
and
shlb
scas
jl
xchg
dec
and
cwtl
ljmp
cmp
ret
push
xor
dec
jbe
pusha
mov
incb
mov
and
fldenv
pop
mov
ds
sub
pop
sbb
pushf
popf
inc
xchg
fstl
hlt
stos
add
mov
or
jle
rclb
cmp
mov
xor
inc
je
shlb
std
int3
and
mov
inc
cld
cmpsb
add
sub
xchg
call
jge
les
adc
aas
xchg
push
lds
push
mov
inc
icebp
movsb
push
jae
in
dec
mov
cmp
cmc
and
addr16
scas
sub
int
push
in
rclb
lock
mov
adc
repnz
push
fisttps
into
cltd
xchg
mov
xchg
or
outsl
xor
insb
pop
inc
cmp
jmp
mov
test
lcall
call
jae
sub
inc
rcrl
leave
pusha
lock
cmp
mov
or
ret
dec
pop
and
cmp
mov
cmp
iret
adc
mov
ds
xchg
jno
and
push
xchg
lods
jno
fstpt
shr
push
dec
sbbl
sbb
inc
loop
and
sti
cmp
sti
xorb
add
pop
in
enter
fs
lods
cs
push
out
in
mov
jbe
mov
outsl
and
mov
dec
pop
scas
pmaxsw
pop
pusha
cwtl
iret
sub
popa
insb
mull
ja
sub
aad
ret
out
jg
mov
xchg
jo
lods
cmpsl
mov
xor
pop
loope
mov
sbb
pop
enter
and
xor
mov
sahf
jmp
xor
leave
push
jae
js
adc
movsb
mov
hlt
pop
mov
mov
fisubrl
das
fsubr
pop
mov
cld
call
ret
ja
leave
mov
mov
mov
fstpl
fildl
pop
shll
dec
cmp
xchg
fstps
cmp
mov
mov
xchg
adc
out
xchg
or
push
lret
inc
fwait
dec
ret
or
ret
pushf
lret
inc
xor
cmp
and
pop
and
xchg
data16
test
mov
xchg
insb
xor
mov
ds
mov
notl
mov
adc
mov
add
fdivl
mov
jl
lahf
cltd
in
movsl
inc
cmp
mov
fdivrl
or
sti
outsb
and
or
cli
lods
dec
push
adc
bound
mov
xor
push
adc
mov
ss
out
cld
test
push
das
aaa
add
pop
fbld
mov
stc
mov
mov
lret
clc
outsl
repz
insl
lcall
xor
pushf
icebp
ret
call
cmp
bound
mov
xor
sbb
adc
popf
in
mulb
mov
push
loopne
cmp
cmp
adc
shl
test
sarb
outsl
xor
pop
dec
sti
stos
lds
mov
mov
nop
scas
dec
cli
cmovb
and
fidivs
mov
xchg
mov
mov
aas
mov
mov
sarb
mov
pop
xchg
pop
loope
dec
pop
xor
mov
gs
mov
inc
ret
call
mov
sub
loope
mov
jmp
fs
push
cmpsl
add
mov
jp
jns
lds
adc
shl
mov
cmpsl
push
lock
lods
and
incb
sbb
mov
movd
leave
push
mov
in
idivl
sahf
add
jno
push
xor
add
jmp
dec
xor
sub
fimull
lds
scas
xlat
cmpsl
sbbl
popf
aas
arpl
imul
loopne
test
add
fcmovne
scas
or
sbb
lock
mov
mov
es
inc
pop
push
xchg
mov
adc
jno
and
mov
cmp
sbb
leave
sub
mov
pop
test
jnp
and
push
jecxz
inc
lahf
int
int3
es
cmpsl
jmp
pop
jb
arpl
mov
movsl
mov
das
inc
mov
push
xor
sub
hlt
mov
outsb
aas
fs
pop
jne
ret
rcrl
insb
repz
jle
and
dec
xlat
jae
cwtl
in
addr16
add
jo
out
xchg
mov
cmp
lds
daa
push
dec
and
adc
xchg
add
in
roll
imul
movsl
dec
fnstsw
xlat
pop
or
mov
into
fcompl
shll
sahf
and
mov
icebp
ds
rcrb
rorb
mov
inc
cmp
jo
xlat
xchg
add
ret
sub
int
jbe
xor
add
add
inc
adcb
movsl
mov
cmp
push
inc
inc
movsl
mov
push
dec
jmp
popa
pminub
lock
pop
mov
cmc
dec
jp
push
rcr
mull
fildl
mulb
aas
aaa
cmc
rorb
or
and
mov
fwait
mov
inc
push
add
adcl
adc
repz
cwtl
rorl
popf
imul
inc
dec
xchg
in
pusha
push
popa
lods
xchg
mov
hlt
cwtl
mov
jne
ret
hlt
sub
ljmp
cmp
xor
addr16
std
mov
out
push
pop
pop
sti
jns
scas
fidivl
or
xor
mov
inc
aad
pop
add
xor
adc
sub
popa
scas
pop
xlat
jae
fmull
fdivrl
outsb
push
jge
out
or
mov
and
or
cmp
push
js
inc
pop
inc
hlt
mov
mov
leave
pop
add
or
stos
pop
icebp
lret
dec
adc
jp
out
pop
movsl
mov
lret
jnp
mov
mov
out
xor
mov
cmpsl
in
movsl
jo
or
stos
outsb
cltd
int3
xchg
fdivrl
sub
std
mov
fistps
or
push
sbb
inc
sbb
arpl
out
outsb
xor
pop
jmp
xor
imul
int3
pop
xchg
and
lsl
scas
inc
mov
gs
xchg
mov
gs
mov
adc
sbb
push
loope
mov
les
mov
jle
daa
and
sbb
in
sub
out
test
dec
repnz
push
sub
jecxz
hlt
and
test
mov
outsb
sbb
cmp
int
insb
jno
ja,pt
inc
push
xor
jle
dec
add
scas
jecxz
rorl
mov
fidivs
arpl
push
push
inc
push
xor
jle
dec
add
scas
jecxz
rorl
mov
fidivs
arpl
push
push
inc
pop
xor
jle
dec
add
scas
jecxz
xlat
mov
sahf
mov
cmpsl
xchg
into
mov
inc
cs
ds
inc
sbb
outsb
and
xchg
into
andl
mov
jmp
insb
xor
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
andb
xchg
psrad
roll
popf
adc
and
xor
inc
bound
bound
push
andb
xchg
ret
repz
repnz
and
xor
add
adc
inc
jb
andb
xchg
ret
repz
repnz
and
adc
xor
and
sbb
fucomp
test
rcr
testb
pop
sbb
rorb
arpl
repz
push
ljmp
lret
mov
cmp
dec
mulps
xor
push
mov
sti
incl
shlb
push
dec
scas
cmpsl
cmp
add
inc
xor
add
das
dec
pop
into
jb
subb
cmpsb
enter
in
repz
repnz
lds
mov
ss
push
jge
jb
inc
jl
sahf
fwait
push
mov
ljmp
adc
xor
mov
cli
insl
movsl
popa
cmp
and
dec
repnz
push
and
aaa
fnsave
in
adc
and
inc
repnz
dec
mov
mov
ret
repz
repnz
and
xor
add
adc
push
jae
inc
jb
ret
mov
fcmovnbe
ret
xchg
push
ja
and
arpl
push
xor
xor
out
neg
lret
fdivp
ret
mov
xchg
mov
inc
and
inc
push
cmp
push
es
pop
out
xchg
loopne
out
jmp
rcl
repz
repnz
and
xor
add
adc
push
jae
inc
jb
andb
xchg
ret
repz
repnz
and
xor
add
adc
push
jae
inc
jb
andb
push
cmp
mov
push
push
push
cmp
mov
ret
jecxz
or
push
in
and
aas
arpl
mov
pop
inc
sahf
pop
shlb
xlat
xchg
add
ds
and
add
data16
adc
mov
shll
and
int3
sbb
xor
mov
mov
add
jl
mov
movsl
pusha
iret
movsb
pop
mov
mov
add
inc
xchg
fsubs
sub
dec
lods
insl
out
test
mov
adc
in
adc
push
pop
out
jl
test
std
inc
pop
or
jge
sbb
pop
add
pop
icebp
mov
arpl
lret
enter
stos
jecxz
inc
jge
movsl
stos
xor
or
push
mov
fistpll
leave
loopne
movsb
les
es
es
fwait
mov
sub
inc
cli
mov
nop
jmp
add
inc
adc
es
xchg
or
xor
sbb
cwtl
cmc
outsl
xchg
stc
push
fdivrs
psrlw
movsl
push
sahf
lahf
jb
and
imul
jbe
mov
mov
mov
loop
test
mov
scas
lahf
jg
fcmovnbe
xchg
push
scas
mov
in
cmp
jge
sbb
and
jecxz
je
cltd
les
out
daa
sub
test
lea
ds
and
cld
lret
outsl
out
mov
push
xor
mov
sahf
lods
lock
enter
ret
js
add
popf
add
sub
nop
and
jno
sbbb
cmpsl
jb
sahf
gs
mul
lods
iret
outsl
inc
and
push
dec
mov
jns
lods
push
lahf
repz
and
repz
sti
jl
jg
out
imul
mov
mov
push
lret
mov
aad
push
dec
in
xchg
inc
mov
out
jle
shl
and
sbb
jg
inc
lds
inc
lods
jmp
rol
mov
xchg
push
xor
pop
loope
int
sbbl
jmp
inc
mov
pop
dec
clc
push
das
test
cwtl
mov
cmp
sub
sub
imul
jno
mov
ss
sub
dec
fistl
push
fnop
xchg
and
mov
xlat
imul
mov
xor
fnsave
imul
movsl
sub
mov
mov
jecxz
dec
and
or
ficomps
lods
adc
das
lret
cs
not
dec
push
arpl
mov
mov
nop
cli
mov
outsl
and
aad
ret
mov
sub
stos
xor
jns
sarb
xor
inc
out
rcl
lock
scas
jmp
sahf
xchg
imul
mov
inc
out
adc
mov
jne
push
je
push
fimuls
inc
je
cwtl
xchg
lahf
xchg
push
sub
push
mov
xchg
js
push
fadds
mov
clc
ds
sub
lods
mov
call
outsb
clc
fcomi
fiaddl
mov
cmpsl
or
inc
fidivrl
xlat
cld
fs
push
test
out
fdivl
insl
out
and
pop
jnp
mov
add
loop
sbbb
mov
fs
lods
inc
fs
mov
arpl
or
and
mov
clc
xchg
mov
inc
int
rcrb
out
push
cmp
orl
mov
push
scas
xchg
sbb
lods
and
mov
xor
ljmp
orl
lds
pop
mov
push
mov
pushl
inc
ljmp
fists
push
ja
popf
pop
sbb
jmp
ret
leave
aad
sub
xor
xchg
adc
push
push
jge
test
xor
push
pushl
test
popf
xor
cwtl
hlt
nop
xchg
repnz
inc
mov
sbb
cli
repnz
inc
jns
jl
in
lods
inc
jl
mov
add
mov
lahf
stos
lahf
jae
lods
sub
sti
sbb
rorb
jecxz
iret
sbbb
mov
push
out
rorb
ss
fs
xor
xchg
and
in
or
insl
ja
sti
lret
and
out
pop
enter
dec
jp
cmp
es
scas
add
pop
pop
sbb
cmc
fmuls
xor
sbb
mov
push
popf
enter
cmp
movsl
inc
fiaddl
dec
cld
jne
aad
stos
dec
mov
nop
adc
jbe
xor
call
cmp
fldcw
ja
fisubl
aad
outsl
ss
jne
out
adc
cmpl
mov
push
cmp
stos
mov
pop
mov
xor
jg
xchg
xchg
xchg
pop
aad
cmc
testb
jle
adc
push
push
sbbb
xchg
dec
divb
sar
dec
out
repnz
lods
fmul
mov
outsb
syscall
ret
push
clc
add
paddsw
pop
push
push
xchg
lret
test
mov
mov
shlb
and
iret
jle
and
lcall
pop
lock
enter
popa
pop
adc
mov
aaa
jo
cmp
cltd
add
xchg
ret
icebp
jo
lods
cmpsb
xor
mov
mov
jnp
lahf
in
cmp
xchg
and
mov
adc
inc
push
cmpsl
jbe
and
fidivrs
jp
mov
adc
adc
and
or
test
fbld
mov
rorb
inc
pop
cmp
out
dec
fmull
xchg
mov
ret
adc
inc
cmp
addb
cmovl
sar
into
mov
jecxz
or
movsb
adc
inc
sub
dec
lahf
movsb
repz
ret
imul
in
push
loopne
popf
subb
lret
mov
pusha
mov
addr16
mov
xchg
iret
dec
mov
and
enter
jmp
mov
fxch
mov
cwtl
out
push
push
jle
push
fdivrl
loopne
aam
pop
fmul
sti
pusha
add
inc
shll
ret
cmp
movsl
cmp
aam
out
in
mov
inc
dec
pop
outsl
adcb
mov
xchg
mov
cmp
loop
sbb
jne
ljmp
jnp
popaw
bound
lods
cmpsl
fildl
sub
xchg
aad
jo
test
sub
adc
dec
xchg
sbb
call
aad
loopne
shrl
outsl
icebp
rolb
mov
adc
fadds
sar
mov
outsl
adc
xchg
jno
inc
fildl
and
stc
int
xor
adcl
pop
pushf
and
mov
scas
lods
movsl
movsl
jg
sti
test
sbb
fnsave
cltd
mov
iret
mov
mov
bound
fs
imul
sub
sub
mov
xor
or
pusha
orb
jne
cmp
jne
lret
data16
adc
and
rorb
inc
pop
xchg
jae
test
jno
cmpsb
xchg
pop
cmpsb
xor
daa
and
xor
orl
lds
ss
xor
ret
sub
in
test
filds
pop
subl
jns
divb
mov
dec
idiv
rcll
jno
dec
xor
pop
aad
xor
lds
xlat
xchg
xor
out
inc
mov
or
add
outsl
repz
xlat
icebp
mov
xchg
test
or
cltd
sarb
insl
adc
dec
push
popa
push
cmpsl
adc
jl
and
pop
in
pop
xchg
mov
dec
and
repz
cmp
es
jge
js
enter
pusha
insb
sbb
gs
xor
mov
sar
mov
and
fiaddl
jmp
test
cmp
jnp
xchg
dec
addr16
rorb
leave
mov
mov
lds
sti
test
sub
das
sbb
jbe
push
cmc
mov
pop
add
leavew
cmp
jae
loopne
mov
adcl
mov
or
movsl
fwait
xlat
mov
js
add
adc
idivb
cmpsl
xor
in
or
test
test
arpl
popf
iret
and
pushf
xlat
push
cltd
push
cld
es
iret
aam
mov
adc
dec
addr16
lret
jnp
inc
js
mov
fcoml
push
sbb
jns
adc
mov
sbb
push
mov
cmp
inc
sub
dec
and
shl
movsl
out
add
lahf
sub
scas
cwtl
mov
xlat
ja
shlb
leave
fldcw
inc
mov
ret
pop
imul
test
les
fldenv
sbb
mov
aad
pushf
cmp
leave
movsl
dec
jmp
xchg
xor
enter
and
push
xchg
cmp
push
rclb
pop
and
ds
stos
lods
cmp
adc
mov
nop
sbb
push
insl
fsts
add
mov
cmp
ficomps
pop
push
incb
mov
adc
mov
bound
inc
aas
jmp
mov
cmp
dec
add
fsubrs
les
push
test
push
mov
xlat
xor
cmp
xor
fcomip
xchg
shrl
mov
dec
adc
push
xchg
sbb
cmp
sarb
and
ret
cmp
xchg
aaa
or
loopne
icebp
cwtl
sbb
sub
fcoml
or
rorb
fstp
mov
inc
scas
sbbl
mov
aaa
lds
cmp
out
jnp
xchg
mov
jmp
lret
fs
inc
bound
inc
imul
lea
xchg
xorl
fsubr
sbb
mov
popa
or
sub
sti
cmp
loop
cmpsb
jne
lea
fwait
lock
sbb
add
in
jp
int
push
inc
xchg
outsb
push
inc
movsb
adc
int3
into
adc
cmp
push
jp
mov
out
cmpsb
mov
sbb
xor
scas
mov
repnz
test
adc
stos
mov
or
mov
adc
sbb
daa
mov
push
in
imul
nop
fsubrs
daa
mov
jl
jg
leave
xchg
mov
and
cs
adc
dec
adc
shll
sbb
or
add
pushf
push
cmpsb
mov
test
movsb
popf
js
or
es
jmp
loop
push
data16
js
test
aaa
test
inc
adc
jb
nop
cmc
and
loop
pushf
neg
jbe
mov
movntq
out
test
sub
push
mov
adc
adc
push
inc
jo
jge
add
ds
xor
mov
cmpsl
rcrl
pop
stos
mov
sahf
mov
push
js
fdivrl
decl
insb
inc
mov
mov
mov
sti
jge
push
fnstcw
cld
jns
xor
je
sub
or
adc
shrb
cs
cmp
sub
push
fistps
xor
fwait
xchg
loop
js
jl
or
imul
push
xor
dec
inc
adc
test
push
pop
mov
pusha
in
pop
xchg
mov
arpl
cmp
adc
ljmp
outsl
data16
or
xchg
sbb
call
mov
ret
call
xor
jl
lds
pop
dec
mov
ret
dec
nop
movsb
add
mov
sbb
jecxz
jle
test
mov
in
cwtl
push
sbb
mov
push
push
jae
rcll
adc
push
sbb
pusha
ret
je
lahf
push
push
in
fucom
mov
pop
cmp
popa
iret
int
or
lods
outsl
push
stc
cmpsl
xchg
das
pop
push
cmp
cs
push
inc
jnp
mov
jp
data16
pop
inc
xchg
rorb
lods
fdivl
and
lcall
cld
mov
dec
or
addr16
cmpsl
arpl
add
ja
add
adc
fisttpl
inc
dec
pop
cld
in
push
xor
mov
dec
cmpsl
lcall
jo
pop
rcrl
mov
int3
repz
xor
push
or
xchg
iret
adc
call
cmp
insb
lods
jle
xor
cmc
shlb
shll
outsl
addb
or
jp
or
mov
and
loopne
loop
xor
mov
popf
pop
and
adc
pop
mov
xchg
fistpl
sbb
jl
xor
mov
insb
xor
add
sbb
mov
cli
lods
xchg
mov
cmp
cmp
mov
xchg
inc
pop
das
and
dec
inc
mov
fiaddl
adc
jmp
mov
cwtl
mov
jne
loop
in
jbe
sbb
push
es
adc
in
xor
mov
imul
sub
mov
lods
ds
mov
jg
push
pop
pushw
mov
fiadds
xchg
mov
mov
popf
cltd
sbb
xchg
or
sbb
decl
scas
lret
fiaddl
out
lock
sbbl
test
xorl
fs
jecxz
mov
dec
imul
nop
outsl
xorb
jns
jne
fdivl
mov
cmpsb
mov
jae
lret
jb
in
sub
leave
push
adc
lods
jbe
push
mov
xchg
fs
jne
mov
add
clc
sahf
xor
cmp
rcr
dec
jae
dec
add
jg
cmp
pusha
pushf
mov
inc
test
lds
fldcw
pop
cltd
mov
es
cmc
leave
shlb
dec
repz
es
and
mov
pop
fistpl
add
repnz
push
outsl
jns
dec
jns
fildll
xor
xchg
mov
pusha
cmp
sub
pop
into
add
arpl
movsl
xchg
fisubrs
cmp
jb
mov
mov
imul
push
movsl
and
pop
xchg
popf
mov
adc
ss
gs
test
or
pop
ja
cmp
pop
dec
inc
jne
push
repz
pop
xor
call
lea
push
test
test
push
out
mov
loop
mov
cmp
cs
hlt
mov
fdivrp
iret
sub
mov
shrl
or
xchg
fdivrs
jle
outsl
pushf
testb
push
xor
push
jno
mov
adc
xchg
sbb
and
fs
sbb
js
inc
lea
push
aad
pop
ret
sti
enter
dec
xchg
pushf
loopne
bound
aam
mov
mov
sti
and
mov
jecxz
cmp
and
adcl
in
jg
mov
cmp
repz
lret
dec
xor
adc
mov
pushf
dec
cs
imul
mov
sbb
pop
ss
or
pop
insl
cmp
bound
sbb
mov
stos
cmpsb
push
or
icebp
adc
pop
sbb
sbb
sbb
pop
pop
add
xorl
loopne
push
in
inc
and
insl
pop
fsts
cmpsl
mov
aaa
sub
sub
adc
aad
mov
imul
es
cmp
add
mov
push
lea
inc
xchg
mov
call
dec
sahf
imul
xchg
push
in
mov
sub
inc
inc
aaa
mov
adc
clc
adc
cmp
mov
sub
std
xor
jl
pop
repnz
xchg
lcall
adc
sti
icebp
into
mov
mov
scas
push
cmp
add
dec
test
nop
shll
scas
mul
lods
add
mov
sub
or
mov
ds
je
mov
int
ljmp
add
pop
loop
push
enter
leave
movsb
jb
loopne
sub
sbb
stos
or
pop
dec
daa
shll
lret
mov
neg
jp
loope
orl
add
push
aas
subb
mulb
mov
shrb
enter
addr16
int3
pop
mov
cmc
shll
mov
leave
imul
xchg
xor
outsl
cli
add
adc
and
jnp
popf
or
cmp
ret
xor
cmp
data16
ret
push
mov
pop
std
pop
ljmp
fdivrl
push
jle
stc
pop
jbe
push
mov
inc
sub
movsl
sub
pop
cld
out
dec
fdiv
js
mov
in
mov
fisubrs
inc
add
daa
imul
les
sbb
pop
mov
and
push
adc
push
out
dec
aad
jmp
je
jo
movsl
sub
cmp
pop
xchg
push
mov
cwtl
addr16
or
jno
divb
fucom
stc
jmp
mov
test
icebp
cltd
loop
xorl
xor
repnz
clc
push
sub
sbb
out
push
xor
insb
sub
push
mov
xchg
inc
mov
mov
test
insl
push
mov
xchg
mov
clc
cwtl
into
xchg
add
xor
dec
pop
push
das
lods
xchg
inc
pop
in
xor
dec
mov
cmp
jp
dec
es
jb
mov
inc
jbe
mov
bound
test
dec
xchg
js
inc
push
sub
jecxz
push
in
add
lret
jecxz
lret
mov
dec
sub
add
push
inc
popf
or
cmp
stos
lret
sub
cmc
subl
xchg
jns
xchg
dec
pop
rcrl
enter
mov
mov
sbbb
mov
das
adc
and
iret
and
sbb
adc
xor
aad
into
pop
mov
xor
out
aad
add
mov
mov
xchg
sub
cmpsb
dec
sub
daa
inc
inc
pop
cmpsb
insl
add
xor
movsl
out
ret
clc
push
inc
pop
lret
adc
loopne
cmp
sub
mov
mov
out
jbe
aad
sub
jb
outsl
jle
aaa
pusha
pop
sahf
inc
lds
mov
inc
pop
aas
repz
sti
jo
xlat
loopne
sub
test
sub
loopne
inc
mov
hlt
scas
mov
pop
cmp
lods
sub
add
mov
mov
lock
push
outsl
movsl
push
sbb
jmp
decb
and
xor
mov
packuswb
addl
add
add
sbb
and
push
leave
adc
dec
aam
jl
fldenv
repnz
mov
outsl
imul
mov
mov
push
dec
hlt
inc
cs
sub
add
imul
xor
jmp
jmp
add
mov
int
sbb
testl
or
sarl
pop
xor
js
pop
mov
aam
jne
in
loop
sub
jae
fucomp
stc
mov
cmp
dec
push
dec
inc
jecxz
and
pop
shll
push
nop
stos
sbb
dec
xchg
sarl
mov
xchg
loopne
push
call
sub
jo
in
fcmove
leave
lcall
sub
jns
mov
sub
cmpsl
rolb
lcall
insb
out
mov
mov
xchg
int
bound
push
inc
push
scas
lahf
fbstp
sahf
sub
repnz
inc
cmc
push
pop
mov
andl
aaa
push
sub
sbb
adc
mov
test
pop
cwtl
fs
mov
insl
or
fwait
in
cs
out
mov
rcl
ljmp
jmp
xchg
or
add
mov
outsl
sub
stos
ret
leave
rorb
sub
lahf
push
out
int
add
cmp
cmovge
sub
stos
mov
push
icebp
lret
inc
jns
repnz
stc
pop
mov
pop
sbb
mov
push
inc
dec
cwtl
pushf
jmp
adcl
stos
test
mov
adc
cmp
mov
out
call
push
dec
and
stos
lods
lods
fdivr
add
dec
frstpm(287
call
xchg
cmp
pop
cltd
sahf
pop
ret
sub
xor
inc
xor
lret
cmp
sbb
inc
repz
push
sub
lods
sub
out
stos
mov
mov
push
xchg
add
pop
add
adc
and
call
cwtl
ror
mov
xor
xchg
inc
dec
pop
push
mov
in
lock
cmp
stos
nop
cmpb
into
xor
sbb
ss
sub
mov
repnz
repz
jno
pop
icebp
push
add
dec
and
lds
fmul
dec
mov
and
push
scas
call
ljmp
cmp
imul
loope
es
pop
mov
orb
cmp
loop
lds
test
aad
xchg
pop
xchg
dec
fldl
push
jmp
aaa
testb
icebp
lcall
pop
je
dec
jb
shrl
pop
cmp
pop
jbe
jmp
fwait
xor
mov
mov
and
hlt
mov
pop
out
mov
ficoms
mov
jecxz
repz
repnz
and
xor
add
adc
push
jae
inc
jb
andb
xchg
ret
repz
repnz
and
xor
add
adc
push
jae
inc
jb
andb
xchg
inc
jecxz
repz
jb
add
adc
and
xor
inc
arpl
bound
push
andb
xchg
ret
repz
repnz
and
cltd
mov
xor
and
mov
mov
dec
dec
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
push
mov
call
xor
pop
ret
push
pop
inc
dec
je
fs
push
jbe
adc
or
cwtl
xchg
and
hlt
cli
in
xchg
lcall
xor
dec
sbb
push
sbb
xor
and
aam
lret
in
aam
test
in
pop
mov
out
mov
or
cmp
mov
out
pushf
mov
fucom
aam
fnstcw
sub
add
push
cmp
out
mov
mov
stos
xor
rcr
test
mov
es
cmp
test
and
sbb
mov
pop
sti
stos
pop
add
adc
fstl
inc
mov
pop
jg
mov
inc
loope
in
test
cwtl
adc
push
mov
lret
push
and
aad
les
imul
stos
stos
cs
sbb
out
xchg
mov
hlt
and
mov
mov
push
stos
jne
lcall
xor
outsl
out
rcrb
lcall
cvtps2pd
dec
je
fs
sbb
cmp
lret
aam
fcompl
movsb
ret
cmp
jp
push
jg
arpl
and
aam
xchg
lret
xchg
lahf
sbbl
sbb
and
push
pop
add
inc
rcll
mov
xchg
mov
test
jmp
fucomp
in
cmp
sub
adc
xor
or
and
aam
lret
in
xchg
lcall
push
pop
inc
dec
je
fs
sbb
xor
and
aam
lret
in
xchg
lcall
push
pop
loop
mov
movsb
test
outsb
jnp
int3
ret
repz
mov
stc
jno
pushf
sbb
push
negb
jne
pop
or
icebp
je
dec
inc
imul
mov
lea
cmp
mov
mov
cmp
addr16
arpl
pop
mov
sbb
cwtl
add
push
xor
fcomip
leave
movsb
shll
inc
xor
cld
dec
pop
pop
ftst
add
aam
add
loope
jne
xlat
lds
cmp
or
pop
push
and
sbb
sti
sub
and
adc
fsub
cmpsl
lock
jl
ds
mov
stos
push
inc
pushf
jns
stc
push
jnp
pop
mov
repnz
dec
push
fildl
push
hlt
mov
std
sub
adc
pusha
pop
fptan
nop
xor
pop
out
fdiv
movsb
adc
outsb
fmuls
mov
mov
cmp
adc
push
xor
fwait
in
dec
xchg
sbb
sbb
das
push
dec
movsl
pop
mov
jl
sbb
lea
sub
je
fdivrs
and
sbb
cli
mov
popa
xor
mov
xchg
ret
dec
pop
imul
es
jbe
inc
mov
sbb
lret
mov
stc
xchg
fwait
lret
inc
sbb
fstpl
test
mov
and
pop
cmpsl
clc
xor
mov
roll
and
repz
lahf
in
shll
je
and
jne
imul
stc
lock
push
xor
test
subb
xor
rclb
fsubs
pusha
xchg
mov
or
add
mov
sbb
push
sbb
push
mov
dec
mov
xchg
pusha
mov
aam
push
push
lods
in
cmpsb
jl
lcall
rorl
inc
jl
loopne
divl
inc
xor
xorb
lcall
pop
jb
cmp
xlat
xchg
pop
adc
sbb
add
in
sbb
inc
popa
add
xor
les
fld
sub
xchg
pusha
ret
loopne
jle,pt
jl
mov
xchg
mov
aam
mov
sahf
dec
popf
inc
xchg
cmp
data16
lret
das
push
imul
push
sub
mov
mov
xor
shl
mov
push
outsb
mov
outsb
ret
aas
add
xchg
sbb
insb
int3
in
sbb
pop
hlt
pop
dec
mov
pop
xor
std
fbld
imul
stos
cmpsl
cmpsb
inc
or
adc
dec
inc
in
dec
adc
outsl
adc
into
pop
xchg
push
inc
les
xor
int
lods
inc
push
sub
mov
in
es
jge
mov
dec
mov
pusha
mov
mov
outsb
scas
pusha
test
imul
sub
xor
jmp
les
ficoms
dec
bound
xor
out
lods
push
jb
loopne
das
fstl
ds
and
mov
loop
lock
pop
jge
dec
lea
and
mov
sbb
cmpsl
sarb
je
aaa
jns
popf
cmpsb
enter
xchg
add
mov
ret
das
dec
dec
cld
imul
jmp
pop
inc
adc
in
outsl
pop
jo
mov
sub
pop
stc
mov
fistl
adc
out
psubusw
mov
jbe
ds
std
cmp
cltd
sub
jl
dec
push
push
jl
sbb
mov
sbb
sub
ficomps
daa
insb
out
div
xor
popf
arpl
hlt
sbb
pop
mov
int3
add
inc
jle
xchg
cmpsl
add
pop
mov
and
je
adc
dec
shlb
imul
cmp
sar
push
pop
cmp
sbb
sbb
push
scas
std
fwait
lret
adc
popf
xchg
sub
jp
je
daa
jns
out
bound
mov
dec
sub
pop
inc
stos
test
or
cmpsb
fadd
stc
jbe
sbb
jne
push
pop
cwtl
lret
sbb
fsts
dec
or
lock
or
dec
mov
and
stos
dec
imull
push
arpl
dec
loope
or
mov
nop
pop
or
mov
and
pushf
rcrl
mov
dec
outsl
mov
aas
in
aad
push
mov
rclb
xchg
sti
lock
out
loopne
xchg
xlat
sub
mov
mov
push
mov
jl
xor
into
inc
pop
fcomps
sbb
stc
movsl
in
dec
or
pop
bound
add
cltd
into
jnp
iret
sub
xchg
andl
xor
iret
in
scas
add
mov
push
sub
loop
cli
jno
push
clc
sbb
cwtl
jo
enter
jp
push
and
arpl
stos
clc
lret
inc
dec
cmp
and
mov
lods
int3
aas
cli
pusha
data16
jns
pop
jge
cmpsl
nop
loope
cmp
int3
fistps
iret
faddl
mov
xor
jae
cmc
fisubl
std
mov
xchg
xor
pop
xor
icebp
push
mov
jne
ja
jecxz
push
jnp
aaa
xor
and
mov
add
das
push
cmp
clc
ret
lock
xor
scas
adc
sbbb
imul
adc
mov
dec
cltd
mov
jnp
jae
lock
out
inc
sub
repnz
mov
adc
push
into
int3
es
paddusw
cli
and
mov
push
inc
adc
pop
ret
xor
jnp
pop
adc
mov
push
fsubrl
arpl
inc
and
ss
jmp
mov
leave
push
mov
jmp
iret
addb
jle
jl
js
lret
jle
xor
sbb
sbb
sub
imul
push
aam
rclb
push
pop
pop
mov
mov
xchg
clc
rcrl
setns
jne
scas
out
jp
negl
aaa
pop
and
jno
adc
and
add
packuswb
sar
mov
jmp
lods
push
adc
jge
adc
sahf
add
adc
mov
enter
mov
jb
ja
fldl
mov
out
es
xchg
xchg
mov
mov
outsl
or
mov
dec
inc
push
loop
int
cli
lret
xchg
pop
fwait
mov
sbb
ja
das
xorl
hlt
cld
xor
inc
lea
bound
cmp
arpl
sti
in
jmp
jbe
push
into
andl
pop
sbb
and
mov
arpl
repnz
add
or
jge
cmpsl
mov
popf
das
bound
aad
inc
push
jg
mov
addr16
movsl
xor
mov
push
icebp
or
and
popa
fmull
cmp
in
mov
lahf
das
xchg
or
in
xchg
hlt
cmc
movsb
and
sbb
sarl
mull
lahf
xor
lret
pop
cmpsl
iret
or
cmp
xchg
jmp
insl
mov
rclb
je
lods
and
jmp
mov
cmp
sar
sbb
push
mov
xchg
and
jae
insl
out
popa
int
test
test
or
insb
cmp
ds
or
repnz
mov
mov
cs
imul
sub
jnp
or
pop
int
rclb
sti
or
bound
cmp
mov
jg
add
mov
dec
jl
fcomps
add
mov
fwait
ja
aas
push
fidivrl
jg
xor
sarl
xlat
jle
into
and
lret
or
pop
in
inc
in
mov
lods
mov
es
push
push
push
out
xchg
aas
gs
pushf
lret
jns
popa
adc
pop
hlt
clc
dec
fidivs
ja
call
repnz
mov
xchg
lods
leave
jg
lret
xor
ficomps
cmp
xchg
pop
mov
sub
fcmovne
sub
mov
push
jl
cmp
lret
adc
sarb
add
or
jb
add
cmp
inc
or
int
les
sub
test
lret
pop
cmp
and
and
icebp
out
and
add
cltd
jb
stos
data16
xor
data16
mov
mov
mov
out
call
and
xchg
fsubl
test
daa
dec
loop
js
add
aad
mov
into
scas
push
pop
movb
push
add
dec
bound
andb
cmpsl
loope
int
rcll
mov
loope
xchg
xchg
repz
out
or
repz
andb
mov
or
fwait
popf
sub
test
inc
xor
xor
cmc
pop
cmp
outsb
inc
les
mov
daa
nop
and
xchg
jb
test
inc
xchg
and
mov
roll
push
fidivrl
clc
fptan
and
pop
xchg
inc
lock
push
xor
xor
xor
in
jae
jecxz
cwtl
js
mov
lods
mov
mov
push
xorl
ss
xor
dec
aaa
cwtl
pop
dec
cmp
cli
push
sub
adc
dec
mov
fs
adc
std
xor
mov
in
mov
je
add
rcrb
xchg
push
lods
adc
gs
cmpsb
mov
stos
mov
ss
out
mov
fadds
sbb
cld
in
ss
jg
in
pop
cmp
in
push
aaa
sbb
dec
hlt
loope
mov
outsl
sbb
popf
sub
fwait
rolb
inc
outsl
loope
stos
addl
negl
adc
ds
cltd
js
outsl
aas
cmpl
xchg
or
jecxz
aad
and
jl
or
jnp
testb
xchg
adc
dec
pop
mov
push
gs
push
gs
ja
inc
mov
adc
stc
movsb
cmp
jbe
and
push
pop
pop
insb
and
pop
popf
jle
in
pop
mov
mov
int
roll
or
push
pop
fsubl
cmp
cmp
adc
add
mov
push
push
faddl
inc
in
sub
repnz
cwtl
movsb
jnp
dec
shrl
icebp
es
mov
push
mov
addr16
or
mov
test
xchg
loopne
jne
lea
push
pop
shrb
pop
roll
cmpsb
sbb
push
mov
xor
loope
es
or
inc
shll
adc
and
sbb
xor
ret
lret
cmp
jl
xorb
push
shlb
xchg
ljmp
cmpl
insb
mov
lea
cs
mov
outsb
sbb
hlt
jmp
cltd
xor
pop
inc
pop
push
fdivrs
ss
aas
sbb
jl
cltd
jbe
jle
out
pop
aad
xorl
cmc
jo
fmull
sub
aad
aas
int
jge
adc
dec
cmpsl
pop
xchg
or
mov
mov
loopne
push
data16
icebp
call
or
jecxz
and
xlat
pop
out
call
pop
imul
fstps
iret
push
notl
divb
aad
xor
mov
bound
sub
and
cmp
in
push
pop
adc
xchg
dec
js
cmc
idivl
fmul
scas
and
dec
mov
stc
sbb
pop
lods
sbb
push
jecxz
sbb
and
xchg
enter
scas
pusha
fistpl
pusha
mov
dec
loop
fildl
js
and
arpl
aas
scas
add
jne
sbb
and
add
lea
pop
adc
adc
mov
mov
cmp
sub
fsubr
mov
mov
jmp
jne
push
out
movsb
popl
sbb
xchg
add
sub
pop
test
xor
adc
inc
mov
rcrl
push
xchg
rorb
in
in
sub
or
mov
cmp
dec
test
inc
inc
inc
mov
movsl
les
repz
out
fbld
sahf
xchg
adc
fmuls
popf
adc
lock
es
ljmp
xor
fimuls
pop
and
popf
rcrb
outsb
xor
and
cmp
cmpsb
test
mov
dec
out
lcall
fisubl
lods
cmp
push
sbb
insb
inc
and
scas
rorb
daa
nop
add
mov
lds
or
xchg
aas
call
in
pushf
inc
mov
sbb
xchg
add
pusha
lahf
shlb
sbb
fistl
add
rcll
add
mov
inc
daa
mov
fs
xor
orl
and
dec
adc
mov
movsb
rcll
xchg
outsb
dec
sub
and
xchg
inc
jb
mov
inc
ds
movsb
or
mov
sbb
rorl
cmpsl
aad
xchg
add
lea
popf
ljmp
es
lcall
bound
pop
ss
inc
adc
inc
mov
add
sbb
mov
mov
sti
stc
mov
in
aad
test
int3
xchg
adc
mov
sub
add
mov
jp
inc
movsb
loop
inc
mov
and
hlt
adc
adc
inc
aad
lea
mov
inc
mov
xchg
mov
rclb
loope
pop
rcll
dec
xor
loopne
shlb
jecxz
inc
xchg
leave
cwtl
stos
xor
cmp
jp
mov
lods
dec
xchg
adc
stos
lock
mov
xor
test
mov
popa
push
xor
fwait
pop
mov
sub
jne
ja
into
push
in
mov
xchg
mov
idivl
pop
push
arpl
test
and
das
sarl
adc
dec
lds
in
ret
movl
add
es
lods
mov
pop
lock
out
icebp
fsubs
daa
call
sub
push
orb
sbb
imul
lret
adcl
sbb
or
xchg
xchg
cltd
cmpsl
pop
scas
mov
sahf
jb
cmp
push
sub
xchg
xchg
orb
scas
sahf
xor
cmpsl
sbb
cmpsb
mov
xchg
mov
scas
call
ds
inc
dec
cld
pop
fsts
lret
enter
lock
and
or
cld
scas
add
xchg
test
inc
ret
xchg
cmpsl
shl
imul
xor
mov
addr16
dec
js
test
nop
sub
push
and
push
test
fcomps
cli
dec
xor
cwtl
rclb
rorl
popa
mov
inc
jne
insb
adc
repz
push
dec
sub
ljmp
fwait
mov
sbb
mov
jmp
rolb
jne
xor
leave
jne
adc
or
test
mov
inc
sbb
and
das
pop
push
mov
xchg
je
inc
in
pop
cwtl
mov
inc
lcall
ljmp
jns
sub
lahf
jae
clc
sbbl
int
pop
icebp
push
loopne
mov
cmp
loopne
mov
push
dec
inc
arpl
xchg
jbe
mov
imul
sbb
jno
jmp
xchg
ret
fiaddl
imul
xchg
fnsave
push
stc
imul
push
inc
cmp
loope
or
mov
push
rcll
and
mov
push
add
jmp
inc
mov
cmp
mov
popa
mov
add
loope
sub
sub
mov
sub
das
xchg
mov
outsb
mov
daa
shrl
push
mov
jae,pn
cmpsb
push
loop
jle
mov
fldcw
out
adcl
aad
push
ficompl
les
lahf
lods
imul
insl
and
in
call
out
gs
ficoms
xor
repz
ret
ret
cmp
adc
xsha256
cmpsb
push
xchg
xchg
xchg
vminps
lds
sbb
pop
popf
and
jns
clc
std
test
cmp
xchg
pop
or
pusha
imul
addr16
cmp
loopne
lret
das
andb
andl
mov
or
adc
dec
mov
cmpsl
sahf
pop
aad
sbb
shlb
ret
and
rorb
push
add
lods
inc
xlat
adc
adc
nop
out
adc
mov
dec
pop
aas
sti
mov
push
aam
ret
push
and
pusha
mov
stos
fsubl
gs
push
out
mov
xchg
ret
xor
pop
push
pop
addl
jnp
popf
insl
fistps
jge
add
inc
pop
pop
dec
fsub
je
xchg
clc
cmp
js
aas
shll
sbb
sbb
and
add
das
imul
mov
xchg
test
add
or
xor
clc
adcl
mov
mov
pop
loope
sub
mov
xchg
mov
out
cmp
fs
jo
out
jne
mov
imul
xor
add
je
ja
mov
push
mov
dec
and
xor
stos
enter
pop
mov
sbb
adcb
cwtl
sahf
ds
push
inc
fwait
xchg
dec
lret
pop
loopne
sbb
and
test
mov
inc
adc
imul
dec
add
sbb
jle
pop
js
jb
dec
movups
or
sub
inc
out
jmp
jmp
mov
pop
rclb
push
push
add
cmc
sub
stc
push
xor
add
jae
lea
mov
stos
pop
cmpsl
adc
cmp
xchg
push
fimuls
adc
fsub
push
inc
and
rorl
mov
ret
push
div
dec
jmp
aad
inc
bound
sub
es
cmpsb
and
mov
push
in
clc
mov
dec
jb
pusha
jg
add
jo
je
xchg
xor
push
mov
sub
mov
hlt
lret
mov
aas
dec
adc
jge
and
xor
enter
or
mov
push
or
enter
fdivl
dec
fnsave
mov
aad
gs
insb
cld
inc
cltd
push
sbb
add
mov
jne
fcoml
cmpsb
add
add
mov
out
pop
pop
add
shrl
cmp
or
ja
inc
or
mov
shlb
jns
pop
roll
in
daa
loop
lock
bound
pusha
mov
jmp
imul
xor
int3
cmc
cmp
fcoml
daa
sub
stc
lret
push
rclb
push
fcmovnbe
stos
sbb
fs
enter
xchg
test
nop
enter
inc
arpl
hlt
out
mov
lret
daa
stc
sarl
add
xlat
mov
clc
sti
push
pop
mov
mov
repnz
sbb
sbb
in
adc
xchg
push
notb
jnp,pn
push
mov
pop
seta
imul
jne,pn
shll
push
cmc
std
popf
push
add
push
lds
jne
or
xor
adc
pop
rol
mov
mov
mov
addr16
jns
dec
mov
ljmp
shll
aas
sub
shrl
mov
pop
ds
rorl
icebp
xchg
shll
mov
dec
add
arpl
sub
test
xchg
ret
nop
icebp
flds
rorb
xchg
jle
lret
ja
push
mov
sbb
gs
add
loope
or
repnz
push
adc
dec
mov
ds
scas
imul
xchg
fdivrl
lods
out
loop
jns
mov
xchg
aad
sarb
add
insl
pop
xchg
push
mov
xchg
mov
mov
xlat
into
les
jg
dec
mov
out
cmp
test
cmp
cmp
nop
pop
imull
mov
shr
mov
in
test
sub
and
mov
mov
dec
rorl
icebp
rolb
rolb
scas
pop
sub
push
push
jecxz
jle
jb
push
jecxz
adc
cmp
movsl
pop
mov
gs
jp
push
xcrypt-cfb
cmpsl
jecxz
shll
mov
addr16
sti
mov
aaa
jns
scas
dec
lea
movl
fs
outsb
xchg
mov
pop
inc
push
ret
push
jne
call
sbb
cwtl
add
mov
aaa
lock
movsl
lods
in
add
dec
add
push
xlat
dec
mov
or
aad
addr16
push
jbe
repnz
jle
jne,pn
xlat
and
insl
test
and
nop
ds
out
xor
clc
and
int3
aad
sub
adc
addb
jo
in
jmp
mov
rcl
push
sub
pop
or
aam
sbb
sbb
pop
xor
insb
mov
scas
mul
cli
mov
mov
mov
mov
inc
add
int3
es
mov
and
xor
in
in
ror
mov
jne
cmp
adc
push
lods
lret
loop
adc
in
mov
hlt
xchg
add
aaa
test
pushf
push
pop
aaa
leave
push
rclb
add
int
sbb
stc
add
or
lcall
in
sbb
inc
cmp
scas
jnp
cmp
test
daa
test
or
das
sub
fistpll
out
xor
push
sbb
xor
and
aam
lret
in
xchg
lcall
push
pop
inc
dec
je
fs
sbb
xor
and
aam
lret
in
xchg
lcall
push
pop
je
adc
fs
sbb
xor
in
aam
lret
in
xchg
lcall
inc
pop
sbb
jp
push
sbb
xor
movsb
sub
fidivrl
pusha
pop
cli
in
jecxz
or
dec
inc
pop
push
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
lea
jb
inc
lock
mov
fstl
adc
push
repz
jo
add
xorb
enter
loopne
lock
andb
and
out
push
repnz
ret
add
je
and
push
imul
dec
nop
cmp
sub
cmp
push
mov
dec
push
lock
std
subl
xchg
movsb
loope
std
jae
push
mov
fistpl
cmp
add
int3
bound
add
push
outsl
rorl
lods
or
xchg
fwait
sub
mov
inc
sbb
jno
or
aam
mov
loop
repnz
test
sub
roll
test
popf
mov
outsl
and
add
or
cmp
adc
xor
out
lea
mov
adc
or
jp
push
add
repz
inc
pop
inc
popf
rolb
pop
mov
push
inc
mov
cmp
adc
andb
repz
loopne
pushf
push
andb
xor
loop
ljmp
push
stos
and
cmpsb
add
in
mov
shll
lea
repnz
adc
push
in
ja
rorb
sbb
and
jl
jbe
and
adc
jae
jne
push
in
out
jb
es
lds
nop
xor
loop
repnz
ret
add
xor
loopne
lock
andb
xor
loop
repnz
ret
add
xor
dec
lds
icebp
test
sub
es
jmp
mov
xchg
dec
jbe
dec
push
pop
cld
mov
sbb
mov
lods
jno
popf
idivb
sbb
pop
push
fcoml
dec
xchg
sub
mulb
mov
sbb
movsl
stc
ds
and
fldl2e
cltd
sub
mov
and
pop
sub
es
movsl
ja
int
mov
addl
pop
jmp
mov
insb
aaa
sub
inc
xor
inc
pop
jbe
and
loop
add
sbb
imul
jl
out
fisubrl
enter
shlb
imul
daa
test
int3
inc
pop
xchg
xchg
lods
fcomi
mov
stos
stc
adc
test
jge
pusha
xchg
and
sub
adc
mov
imul
sbb
xor
nop
ss
aam
push
mov
and
and
push
cmp
outsb
popf
fwait
sub
push
add
mov
aaa
jle
imul
xchg
rorb
sahf
lret
pop
sbb
cld
inc
jmp
cmpsl
sbbl
jecxz
hlt
insb
add
shrb
lcall
mov
test
das
sbb
test
lahf
pop
cmp
popf
cs
iret
push
rcrl
cmp
out
pusha
push
mov
bound
or
xor
add
popf
cmpsb
lock
mov
fsub
xchg
inc
cmp
lock
mov
pop
out
mov
push
stos
inc
cmpsl
xchg
mov
mov
je
jecxz
adc
adc
cmpsl
in
cmp
les
jge
inc
stos
jle
dec
aam
sbb
fstl
insl
mov
stos
xor
push
mov
out
or
mov
sub
cmpsl
adc
sub
test
inc
cmp
pushf
shrb
push
inc
mov
pop
mov
in
stos
out
push
mov
xchg
push
cmp
cli
sub
jnp
adc
jmp
aad
outsl
cmp
arpl
mov
lock
push
pop
and
test
pushf
lock
push
mov
sbb
scas
mov
adc
dec
lahf
shrb
loop
aam
lock
icebp
jnp
adc
push
jmp
pop
scas
mov
pop
dec
adc
inc
pop
push
call
pusha
dec
push
mov
std
outsl
cmp
sub
rclb
dec
dec
call
pusha
loope
mov
jbe
fwait
sarb
dec
orb
in
movsl
jp
adc
sahf
pop
mov
out
cmpsb
jecxz
and
dec
aaa
sbb
jmp
jecxz
not
mov
pop
popf
das
jg
stos
aam
push
shrl
cld
test
ljmp
fidivl
data16
push
adc
push
sahf
ret
sbb
shr
lods
ret
jne
loopne
out
cmp
aaa
jle
or
or
add
sahf
jo
negl
mov
pop
mov
movl
lock
jl
mov
in
add
or
test
pop
add
jl
and
xchg
xchg
imul
int3
icebp
inc
cmpsl
ret
movsb
test
clc
out
xchg
in
les
in
pop
fidivrl
inc
loop
addr16
xchg
cmp
inc
test
mov
adc
mov
call
cmp
adcl
dec
sbb
out
xchg
int3
adc
mov
insb
jb
add
push
imul
es
push
aam
mov
dec
pop
and
or
roll
fs
push
ds
mov
xor
pop
mov
dec
subl
repnz
adcl
push
loop
mov
mov
pop
sbb
push
mov
jmp
inc
mov
xchg
mov
mov
xchg
lret
sub
push
sbb
iret
lds
sub
cmp
fnstsw
push
push
jae
pop
lods
mov
xor
testl
pop
loope
lods
ffree
test
mov
pop
xor
enter
int3
xor
mov
out
fmull
hlt
xchg
lods
push
sar
adc
cmc
xor
xor
jp
xchg
inc
bound
icebp
xor
lcall
adc
or
cmp
outsb
inc
mov
push
mov
mov
in
js
in
sbb
iret
sarb
jmp
xchg
jmp
aad
stc
dec
pop
sub
pop
xchg
rcrl
jle
cmp
daa
nop
prefetch
or
in
xchg
push
mov
decl
sub
pmaxsw
pop
mov
xchg
insb
imul
mov
adc
xorb
aas
lea
sbb
lods
sub
pusha
insl
sub
fidivrl
or
xchg
shlb
cltd
out
mov
pop
leave
add
jo
add
or
sub
adc
dec
adc
mov
adc
bnd
mov
inc
dec
inc
notl
sbb
lods
mov
sub
maxps
ret
call
and
fistpl
inc
outsl
xor
and
fldt
movsb
xorl
push
inc
sub
mov
aad
pop
pop
aaa
ds
jecxz
and
jecxz
mov
mov
mov
repz
daa
jecxz
pop
mov
dec
lock
outsb
xor
cwtl
cltd
mov
push
xor
jne
notl
outsb
into
stos
loopne
insb
xchg
scas
les
push
pop
or
leave
imul
push
in
jae
cwtl
cld
ss
jnp
pop
nop
aas
movsl
call
jp
jg
in
cmpsl
inc
mov
cld
orb
xor
jl,pt
mov
pop
push
pop
sub
add
or
cmp
and
stos
xchg
clc
repnz
inc
sub
lcall
xor
movsl
jnp
lds
mov
mov
inc
push
or
mov
sbb
dec
xlat
cwtl
insl
clc
fsubr
outsb
dec
mov
sbb
pop
cmp
test
jb
daa
mov
orb
jno
push
dec
add
mull
mov
mov
or
rcrl
sbb
subl
orb
mov
sbb
pop
scas
ret
sbbb
andb
pop
mov
adc
mov
into
adc
and
stos
add
mov
xor
sub
mov
cmp
sti
inc
sub
leave
pop
jl
inc
mov
adc
and
loope
mov
lock
add
pop
xlat
or
out
add
xlat
jo
and
push
jmp
out
xor
aaa
cmpsb
xor
cmp
insl
and
push
push
inc
or
push
add
inc
in
int
xlat
stos
out
pop
popa
in
jge
or
out
adc
pop
daa
std
andl
mov
int
lea
dec
aad
leave
nop
insl
in
add
in
stos
rcl
lods
xchg
syscall
lahf
lcall
dec
inc
loope
call
push
xchg
cmp
push
ret
jb
xchg
loop
adc
xchg
daa
gs
inc
imul
ljmp
push
xor
mov
sbb
ljmp
adc
sub
test
cmp
fimuls
dec
push
sub
xor
fdivl
xchg
hlt
int
add
xor
sub
mov
out
cmpsl
movlps
jo
aam
cmp
pop
jnp,pn
test
sbb
inc
mov
mov
rcrl
movsl
add
cmp
ljmp
jecxz
sub
sub
push
hlt
pusha
xchg
rcll
inc
shl
mov
dec
je
push
jns
clc
cmp
cli
stos
ljmp
cltd
in
stc
jle
push
call
fimuls
pop
mov
aam
push
lret
dec
inc
test
lea
rorb
add
jp
jl
or
mov
adc
pop
push
nop
or
adc
arpl
ret
adc
loope
shrb
pop
or
shl
pop
add
test
icebp
sub
lret
ss
ret
cli
dec
sti
adc
sbb
mov
in
xchg
inc
movl
insb
cmp
movsl
pushf
dec
sbb
test
inc
or
dec
lods
dec
in
dec
dec
movsb
add
imull
xor
mov
outsl
jmp
pusha
shll
adc
js
f2xm1
mov
cld
aaa
ret
lock
aaa
int
call
or
adc
push
mov
test
inc
idivl
push
cmp
adc
sbb
outsb
repz
add
pop
mov
mov
adc
stos
test
add
arpl
cli
out
push
fbstp
mov
scas
inc
ja
inc
pop
mov
push
sub
ficoml
mov
inc
xchg
in
jmp
or
sti
adc
movsl
adc
mov
sti
xchg
and
lds
out
sbb
in
cmp
sub
cltd
pushf
adc
pop
lret
icebp
js
sbbb
xchg
or
cmp
and
out
addl
jns
cmpsl
xchg
sbb
test
stos
fcompl
cmp
mov
shrl
mov
movl
push
jne
pop
outsb
std
mov
sbbl
jg
mov
mov
mov
jno
cmp
in
repz
leave
inc
lret
mov
test
mov
sub
cmp
inc
loopne
movsl
cmc
jg
inc
or
dec
in
cmp
cli
sub
lods
xor
push
adc
mov
fidivs
imul
incb
je
or
xlat
dec
push
adc
in
mov
sub
sbb
inc
pop
lock
fcoml
sti
fldenv
aaa
adc
mov
lods
push
jns
jae
or
inc
sbb
cmp
test
je
mov
lods
xchg
into
ror
mov
stos
xchg
push
ljmp
lcall
jns
scas
and
outsl
bound
imul
cmpsb
jno
pop
vrcpss
inc
test
enter
out
lahf
flds
ret
inc
dec
inc
dec
and
or
sbb
mov
in
cmp
mov
cli
xchg
push
out
and
push
rol
cmp
test
cmp
push
loopne
int3
cmp
push
in
sub
test
cmp
sub
test
scas
pushf
rcl
mov
dec
call
push
dec
sahf
out
and
xchg
xchg
mov
xchg
fdivrl
dec
sbb
aaa
push
mov
stos
pop
adc
ss
cmp
mov
push
orl
inc
mov
mov
xorl
in
pop
xlat
push
es
stos
cmc
fdivl
decb
mov
mov
gs
nop
push
pop
xchg
push
dec
push
pop
in
mov
stc
out
inc
xor
cmpb
push
cmpb
mov
mov
inc
mov
lods
mov
lds
outsb
jmp
hlt
aad
push
icebp
mov
push
add
out
daa
mov
xchg
xchg
sbb
dec
ret
xor
sbb
cli
enter
jp
shl
lret
dec
ret
cmp
cmp
and
rcll
mov
imul
pusha
cmp
cli
dec
add
sarl
into
push
mov
jnp
loope
sbb
call
outsb
and
fisubrl
sbb
xchg
in
incb
mov
pushf
int
sbb
pop
stos
xorl
pop
movsb
mov
idivb
sub
jmp
aas
xor
lds
dec
ret
mov
nop
or
imul
xor
dec
out
out
into
int3
mov
cltd
xor
inc
mov
mov
dec
rorb
nop
sbb
hlt
pop
jo
mov
inc
pop
mov
pop
mov
fildll
cmpsb
jge
mov
les
and
jbe
fdivr
aaa
mov
or
xor
mov
cmpl
mov
mov
add
sbb
add
in
jne
xchg
jl
xchg
push
add
cmp
xor
icebp
jns
movsb
cmp
into
xor
pop
push
sbb
jecxz
cwtl
push
idivl
pop
ret
xor
sub
jne
cmpsl
pop
test
outsl
xchg
jne
lret
sti
ficoms
jl
mov
stos
mov
cmp
mov
add
stos
xchg
dec
movsb
lcall
inc
stos
mov
cmpsb
adc
imul
ds
cmp
mov
pop
out
sub
in
xchg
jbe
test
xor
icebp
fnsave
mov
fs
pop
arpl
enter
or
dec
push
mov
fwait
cs
mov
mov
mov
in
fsub
leave
adc
fcomi
lret
cs
jbe
inc
mov
xchg
loope
mov
aad
out
cwtl
mov
cmpsl
rclb
hlt
xchg
pop
dec
pop
push
jno
jecxz
dec
test
movsl
in
mov
jg
lahf
fsubrl
mov
aam
mov
aas
mov
mov
lahf
sarl
inc
into
fs
and
or
sub
push
fwait
mov
or
aad
stc
jg
xchg
lods
lods
pop
push
leave
pop
clc
nop
int3
fdivrl
call
pushf
out
or
cs
or
pop
imul
cmp
mov
adcb
cmp
mov
clc
pop
xchg
das
shrl
jns
test
loop
sbb
push
sbb
stos
bswap
data16
jno
cltd
xchg
cmp
pop
imul
mov
add
dec
sub
lret
pop
ss
jo
movb
pop
inc
mov
push
rolb
arpl
cwtl
pushf
sub
sbb
jmp
fwait
loopne
movsl
test
mov
clc
xchg
xchg
xorl
push
sbbl
lods
sbb
out
jbe
cmpsl
and
and
push
mov
fimull
lods
sbb
repnz
jp
leave
add
and
jnp
insb
addr16
adc
sahf
xor
add
xor
add
jle
in
ret
adc
xor
mov
sub
adc
inc
aad
call
add
mov
in
xchg
sub
jb
inc
cmp
jl
mov
loopne
loopne
and
dec
fistps
fdiv
pushf
cmp
iret
and
je
das
adc
pop
push
les
push
mov
jns
icebp
hlt
jbe
lahf
adc
imul
and
mov
mov
push
jno
dec
mov
aam
jecxz
push
xor
shll
ljmp
loope
popf
jno
fbld
out
imul
movsl
lods
es
sub
lahf
stos
push
ret
sahf
cltd
push
shll
pop
inc
add
mov
pop
adc
iret
cli
sahf
cmp
mov
movsl
cmp
jmp
enter
ret
or
rcll
icebp
mov
inc
stos
icebp
enter
scas
push
add
rolb
stos
jmp
mov
xor
pop
dec
or
std
dec
xorl
repnz
iret
je
outsl
insl
dec
dec
xor
xchg
mov
loopne
test
dec
test
sti
pop
pslld
dec
bnd
ret
lds
add
jp
leave
cmp
dec
lock
and
lock
cld
mov
xchg
adc
push
mov
fsubrl
mov
call
xor
test
lds
cmp
loope
jae
mov
insb
dec
ss
inc
xor
jl
jl
xor
sbb
out
pop
add
xor
rcrl
int
mov
mov
and
jle
and
repz
lret
inc
or
insl
lahf
xchg
jno
insl
push
xchg
or
and
xchg
push
mov
pusha
mov
roll
jb
cld
pop
jo
insb
mov
add
or
push
cmp
xchg
ret
dec
mov
jno
jmp
mov
in
inc
lds
icebp
scas
cmp
mov
or
sbb
ja
or
test
cmp
sete
and
jle
adc
cmp
pop
push
jmp
fcmovu
pop
frstor
insb
addl
xlat
fisubs
inc
jne
and
xchg
sub
push
inc
push
dec
cmc
repz
cwtl
test
gs
aam
mov
dec
into
jno
jno
cbtw
int
or
pop
js
setge
fwait
sub
and
adc
mov
dec
je
stc
test
daa
cltd
dec
int3
insl
dec
pop
jmp
lcall
in
cmp
cmp
sahf
bnd
aaa
push
std
mov
inc
pushf
bound
jge
insb
pop
mov
test
pop
mov
in
pop
ret
fstpl
call
push
adc
dec
adc
add
dec
sarb
mov
pop
orb
arpl
icebp
cmp
rol
dec
imul
les
sarb
or
cmpl
mov
adc
mov
sbb
fs
bound
andl
push
push
lods
mov
test
push
mov
test
add
cmpsb
jle
test
mov
pop
or
mov
in
int3
xchg
popf
jmp
jl
xchg
fsubp
in
pop
mov
lods
mov
mov
std
test
ljmp
cmp
rorb
mov
dec
popf
cmp
dec
sbb
lods
jl
xchg
int
movsl
addr16
repz
mov
sub
inc
jle
daa
fisubrs
ret
pop
scas
cmp
std
add
sbb
addb
imul
shr
mov
sbb
add
js
mov
mov
mov
pushl
or
int
lods
cmpsb
out
dec
iret
and
mov
mov
lods
adc
loop
jae
dec
xchg
mov
or
add
sti
xor
cltd
stc
ret
js
loop
ljmp
push
mov
sbb
mov
rcrl
fisttps
adc
add
stos
shl
adc
lret
sub
adcl
sbb
js
test
cmp
outsb
cs
incb
test
lods
pop
mov
jge
sbb
sahf
jnp
pop
mov
mov
and
sbb
push
sahf
and
xlat
dec
cmpsl
dec
add
or
mov
dec
push
add
hlt
pop
jns
lcall
das
lods
clc
sbb
mov
cmp
ret
push
add
sub
popf
int
pusha
push
movsl
adc
sbbb
and
sub
push
xchg
fisttps
iret
arpl
test
int
push
mov
jns
cmp
out
push
lods
test
loopne
pop
xchg
je
test
cmp
jmp
mov
stc
cmpsl
pop
movsb
loopne
xchg
ret
lret
xor
fmull
xchg
test
or
fadd
in
in
sub
ret
push
aaa
daa
and
dec
xchg
icebp
pop
push
inc
lock
movaps
mov
cld
pmaxsw
icebp
mov
dec
inc
icebp
sub
popa
iret
int3
cmc
repz
sub
movsw
or
sti
outsl
outsl
fsubrs
lds
stos
xchg
loopne
cltd
loop
sub
pop
add
xor
dec
aas
cli
test
xchg
shlb
cmp
icebp
rcr
add
test
cltd
stc
mul
mov
ror
lds
or
pusha
add
imulb
pop
mov
cmp
or
adc
cmp
push
into
call
dec
inc
insl
jb
in
mov
stc
cmp
mov
cltd
ljmp
cmpb
stos
mov
pop
enter
int3
pop
sbb
jmp
fildll
movsb
clc
adc
xchg
or
push
mov
and
inc
jnp
xchg
pop
cmpl
jg
loop
push
adc
insl
dec
test
cmp
sub
mov
fsubl
push
fadds
adc
push
jmp
mov
js
mov
je
jle
cmp
sub
mov
push
xlat
in
fnstcw
sub
in
mov
fstpt
add
mov
and
mov
push
sub
lock
leave
adc
dec
sub
adcl
ljmp
pop
call
adcb
or
and
mov
out
sbb
test
dec
sbb
enter
ror
repz
arpl
movsl
and
mov
pop
stc
call
fwait
xchg
xchg
cmp
pop
lahf
xchg
inc
mov
test
dec
pushf
out
or
imul
jnp
arpl
leave
lcall
push
xor
pusha
pusha
out
sbb
outsb
mov
sbb
out
loopne
adc
mov
mov
lods
outsb
xchg
insb
call
or
xor
fisttps
mov
repz
testl
pop
cmpsl
mov
dec
pop
sahf
jo
jmp
xchg
sub
sbb
bswap
mov
xor
cli
inc
shr
aad
bound
add
scas
xor
movhps
jle
push
mov
imul
mov
in
inc
mov
popa
shlb
and
inc
cmp
inc
nop
and
inc
xchg
enter
jl
in
push
andb
xor
loop
repnz
ret
add
xor
loopne
lock
andb
xor
loop
repnz
ret
add
xor
lock
lock
andl
mov
inc
loop
repnz
or
fsubs
jbe
inc
fcoms
and
rolb
scas
pop
lret
movsl
ja
cwtl
int
std
iret
in
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
push
hlt
add
jl
add
mov
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
cmc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
in
add
fdiv
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
inc
cmc
add
dec
cmc
add
pusha
cmc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
fdiv
add
clc
cmc
add
and
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
je
add
jl
add
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
shl
add
fdiv
add
call
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
add
fdiv
add
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jg
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
inc
clc
add
cmp
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
clc
add
mov
clc
add
sar
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cmp
add
pop
stc
add
cmp
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
aam
add
fdivr
add
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
pop
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
add
cmp
add
dec
cli
add
pop
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
