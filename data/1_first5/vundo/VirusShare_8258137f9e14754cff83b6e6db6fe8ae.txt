add
lea
jle
lea
mov
xor
cmp
jle
mov
mov
mov
cmp
jne
cmp
jge
mov
mov
cmp
jle
mov
mov
inc
cmp
jl
incl
mov
addl
cmp
jl
cmp
jge
xor
jmp
mov
sub
sub
inc
xor
dec
test
jle
lea
lea
lea
mov
mov
mov
sub
inc
add
add
dec
cmp
jl
sub
xor
inc
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
push
pushl
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
call
pushl
mov
call
push
push
pushl
call
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
xor
test
jle
push
lea
push
mov
cmp
je
inc
add
cmp
jl
pop
pop
cmp
jl
xor
jmp
test
jle
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
inc
xor
test
mov
jle
lea
mov
inc
add
cmp
jl
pop
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
pushl
pushl
jne
push
push
mov
sub
lea
push
mov
push
call
cmpl
je
cmpl
je
push
call
mov
xor
xor
call
mov
xor
call
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
test
jne
mov
not
mov
or
mov
lea
push
call
mov
pop
leave
ret
push
imul
jb
je
arpl
mov
sub
push
push
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
push
pushl
call
mov
mov
add
push
pushl
call
mov
movzbl
movzbl
sub
je
addl
movl
call
call
push
pushl
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
pushl
call
mov
push
push
call
xor
mov
push
push
push
call
lea
push
push
push
call
add
push
push
push
push
push
pushl
call
pushl
call
push
push
pushl
pushl
pushl
call
push
push
push
push
push
call
pushl
pushl
pushl
call
mov
add
push
push
pushl
call
push
mov
pushl
call
mov
jmp
lea
push
pushl
call
xor
mov
push
push
push
push
pushl
call
pushl
mov
pushl
pushl
push
push
call
push
pushl
pushl
push
call
lea
push
call
pop
push
lea
push
push
push
push
call
push
lea
push
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
pop
pop
leave
ret
push
push
push
mov
mov
mov
mov
push
add
pop
mov
mov
add
mov
mov
cmpb
je
movzbl
sub
push
call
add
cmp
jg
mov
mov
mov
movzbl
sub
inc
test
jne
jmp
mov
mov
call
dec
movzbl
sub
je
inc
call
jmp
call
mov
xor
mov
mov
push
push
andb
push
push
mov
push
push
push
push
push
pushl
pushl
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
push
xor
push
push
movl
movl
movl
mov
movl
mov
mov
call
mov
mov
mov
push
push
movl
movl
mov
movl
call
push
push
mov
call
push
mov
call
pop
pop
ret
push
mov
sub
pushl
call
pushl
movl
movl
movl
pushl
movl
movl
movl
movl
movl
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
push
lea
push
push
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
jmp
push
push
push
pushl
call
pushl
call
mov
push
pop
pop
ret
nop
add
add
add
add
and
mov
add
add
add
add
test
add
add
and
add
add
add
nop
add
add
add
add
add
add
add
add
imul
add
pop
dec
outsl
fcoml
and
sbbl
xchg
mov
mov
push
push
lea
add
jne
jne
lcall
lea
push
push
clc
push
test
adc
mull
add
mov
mov
in
add
push
pop
push
sar
mov
incl
jnp
add
add
sub
loopne
add
adc
ljmp
push
call
decl
std
loopne
dec
test
adc
push
decl
push
adc
test
decl
mov
stc
sbb
enter
loopne
jne
add
lea
je
insb
movl
add
add
add
add
mov
add
add
outsl
inc
and
imul
gs
push
gs
outsl
clc
fs
je
dec
jae
add
add
add
jb
dec
fs
add
insl
jne
popa
outsl
dec
xchg
jae
push
gs
push
jbe
cs
arpl
gs
add
pusha
jl
add
add
in
add
add
inc
pop
add
add
xor
inc
jae
lahf
sbb
push
xchg
mov
add
jecxz
arpl
pop
pop
add
lods
mov
js
rol
mov
jmp
outsb
inc
add
jno
inc
inc
fisubs
xchg
inc
aas
rcrb
call
cmp
cmpsb
test
fs
movsb
inc
lahf
cltd
aam
xchg
lret
mov
add
lahf
jp
cmp
fs
pop
roll
loope
mov
push
icebp
push
in
sbb
shlb
pop
cmp
popf
mov
dec
xor
and
xchg
inc
xchg
les
loope
aad
clc
cmpsb
push
fld
jg
jns
xchg
and
cli
inc
and
mov
and
and
outsl
mov
dec
fidivrl
push
cmp
jb
push
pop
mov
cli
clc
jp
sub
cmp
push
notb
add
inc
cli
cmp
nop
js
jb
adc
push
xor
push
rorl
or
push
mov
pop
add
cmpsb
dec
loopne
jmp
incb
mov
ljmp
dec
sub
stc
pusha
das
arpl
aam
dec
je
xor
mov
adc
inc
addr16
adc
ja
jns
lods
fcmovne
add
xor
inc
scas
mov
adc
push
into
mov
lea
cmp
or
mov
btc
imul
jo
pop
xchg
ret
xchg
ss
sbb
jnp
test
in
inc
rclb
sbb
jp
or
inc
ds
lock
lods
lds
xor
daa
jbe
push
shll
mov
pop
rcll
dec
cmpl
inc
rclb
mov
push
sahf
jmp
out
dec
push
adc
pop
test
lcall
lahf
sub
mov
bound
adc
std
mov
xor
pop
bound
popa
jmp
lods
sbb
sti
fidivs
pop
xor
adc
fiaddl
mov
pop
jbe
test
mov
xor
jo
lret
test
adc
mov
shlb
dec
fwait
jecxz
cld
inc
sbb
add
sahf
nop
leave
stos
pop
ss
andl
sbb
push
imulb
stc
adc
xchg
mov
mov
les
sbbl
pusha
test
push
xchg
dec
jne
or
xchg
js
mov
enter
scas
repnz
pop
clc
int
icebp
and
cmp
jge
dec
xchg
add
ds
adc
pop
mov
ja
xchg
popa
scas
daa
xchg
inc
das
add
rclb
mov
in
ds
mov
loope
test
adc
repnz
adc
enter
ja
mov
fcomip
fmull
adc
dec
gs
inc
sub
test
in
jl
mov
xchg
pop
cmc
inc
mov
xchg
rclb
push
push
sbb
xchg
adc
dec
stos
aas
mov
jle
mov
inc
aad
xchg
lods
adc
inc
add
mov
fistps
pop
mov
xchg
addr16
or
push
mov
push
les
xor
in
jmp
cmp
ljmp
dec
or
shll
or
pusha
fimull
pop
cltd
negl
loopne
adc
sub
bound
mov
int3
adc
sbb
imul
int
inc
mov
dec
icebp
loope
cmpsl
fisubs
cltd
sub
jecxz
push
sbb
outsb
lods
movsl
cmc
sub
pop
mov
lcall
fnstenv
daa
add
hlt
jo
xor
and
movsl
jae
push
scas
aam
fcmovnu
aaa
sub
adc
push
or
mov
inc
push
sbb
mov
pop
fldcw
mov
add
rorb
add
test
mov
push
sbb
pusha
pop
jmp
mov
lods
cmp
mov
nop
xchg
adc
pop
add
rorb
ds
leave
fildl
push
push
pop
ja
adc
repz
adc
xchg
xchg
mov
push
cmp
jne
and
and
xor
pop
loopne
dec
xor
mov
and
cs
mov
xor
jmp
lods
mov
scas
jnp
imul
jno
push
xchg
xor
arpl
dec
data16
xor
dec
mov
and
cld
pop
dec
aaa
clc
test
inc
cmp
mov
faddl
rcrl
stos
dec
sbb
imul
xor
dec
xor
and
orb
fstpl
adc
cltd
and
jmp
dec
cmp
lcall
mov
in
mov
lret
popf
negl
dec
cmp
and
dec
cmpsl
sbb
push
inc
test
mov
mov
lret
stos
ja
ljmp
cmpsl
push
ret
dec
cmc
cmp
jne
dec
mov
negb
dec
dec
push
cmp
mov
icebp
rclb
stos
xor
or
pop
icebp
push
stc
push
insl
mov
aam
das
imul
mov
xchg
lds
jnp
push
sub
movsb
lret
gs
push
enter
popl
mov
test
jne
mov
sub
in
push
mov
pushf
inc
imull
inc
or
ds
mov
mov
sub
fcmovnbe
pop
ret
loopne
push
cmp
mov
nop
adcb
pop
and
inc
mov
push
loopne
outsb
addb
leave
inc
jl
fnstsw
adc
fbstp
push
int3
pop
and
dec
or
in
mov
jne
add
rcr
fsubrl
sbb
call
enter
and
lea
in
mov
jl
lcall
push
cmp
push
push
mov
shll
adcb
sbb
or
adc
sbb
xor
fld
je
push
mov
push
incb
cwtl
mov
inc
bound
cwtl
psubw
cmc
xor
cltd
lods
cltd
sahf
inc
aad
add
in
lods
xor
inc
stos
cmp
ret
or
sar
mov
xchg
lret
add
cmp
gs
aad
fsts
cmc
pop
sbb
dec
loopne
sub
sbb
push
outsl
mov
out
cmpsl
outsl
ljmp
add
out
adc
push
add
mov
or
movsl
movsb
mov
jae
adc
inc
inc
in
shl
cmp
sub
ffree
call
inc
shrl
lods
add
in
xchg
xor
sub
popa
dec
pop
cwtl
sbb
es
jae
ds
test
inc
inc
lret
andb
popf
adc
dec
movsb
xor
push
pushf
pushf
or
imul
outsb
mov
mov
xlat
adc
xchg
push
adc
mov
es
sub
jbe
mulb
mov
xchg
add
loop
pop
rcrb
xor
adc
push
in
fucomp
stos
push
repnz
cmpsl
pop
jle
sbb
outsl
mov
adc
cmpsl
cld
pusha
out
loope
xchg
pop
lret
cmp
sbb
pop
push
mov
mov
or
mov
sub
pop
add
adc
daa
sbb
jbe
jmp
push
and
add
jo
out
in
inc
repz
aam
mov
mov
mov
sub
shl
fcoms
into
jns
shrl
cmp
aaa
push
div
and
in
xor
imul
mov
lods
enter
ret
mov
cmpsb
outsb
das
sti
adc
call
inc
jg
push
jl
xchg
add
loop
stos
xchg
jge
lret
out
or
pop
xchg
push
mov
pop
lock
sbb
xor
xor
jbe
and
inc
sub
loope
mov
lret
es
sbb
push
xor
call
les
push
dec
adcl
push
xchg
repnz
mov
dec
mov
jnp
andl
lods
push
cmp
push
mov
adcb
sub
repnz
hlt
xor
adc
fcoml
pop
data16
pop
pop
fwait
pop
in
push
sbb
cli
jecxz
lret
fisubs
adc
inc
mov
inc
mov
mov
popa
inc
subb
xchg
fidivrs
xor
int
jae
cmpsl
clc
inc
cmpsl
popf
inc
mov
xor
mov
and
fldl
add
in
std
fists
jle
mov
jmp
hlt
add
aas
xchg
cmp
popa
cmpsb
outsl
xor
jae
fsubs
lods
call
mov
push
xchg
in
loope
jae
outsb
xchg
clc
cmpsl
pusha
inc
sahf
out
xchg
push
dec
ret
sub
iret
pop
mov
mov
pop
into
add
mov
mov
out
push
lahf
arpl
scas
jmp
mov
push
push
xchg
jg
lea
gs
fists
cmp
shl
inc
cmp
jbe
pop
pop
pop
add
xor
cmp
cmp
into
sbb
inc
and
fmulp
push
stos
pop
and
lahf
aad
outsl
movsl
jne
add
mov
lcall
push
loopne
lods
sbb
mov
fidivrs
lea
cmpsl
jge
xor
push
cli
hlt
lret
ror
and
daa
cmpsl
sbb
mov
push
test
mov
jp
cmpsb
lods
out
adc
push
cmp
fs
in
in
addr16
cmp
push
sub
aad
jl
in
sbb
xor
lods
sbb
add
repnz
sti
xchg
call
sbb
daa
fiadds
push
xchg
push
inc
xchg
lds
fdivs
lock
jae
cmp
cwtl
jb
icebp
out
inc
es
inc
lcall
dec
imulb
clc
cmp
sbb
cwtl
adcb
inc
xchg
je
and
cmp
test
add
lods
xchg
outsb
jb
xorb
lea
fistl
adc
mov
mov
test
inc
stos
mov
pop
jne
int3
pop
sahf
bound
aam
cmp
adc
xor
jge
push
hlt
hlt
je
insl
aam
pop
sti
inc
fdivrs
xchg
push
shr
pop
int3
sbb
jnp
inc
inc
adc
push
or
mov
movsb
mov
fwait
mov
push
sti
dec
testl
dec
aas
sbb
mov
mov
mov
gs
shrl
cmpsl
jb
dec
cs
cmp
and
out
jge
sbb
insb
mov
cmp
mov
data16
jae
dec
aam
movsb
pop
pop
daa
xchg
xor
stos
sbb
sbb
popf
test
popf
pop
arpl
in
push
dec
mov
jge
int
mov
sbb
cmp
sbb
sub
jae
dec
mov
sbb
fadds
xor
push
test
mov
ret
mov
jg
stos
aam
cld
in
push
fsub
xor
adc
call
popf
mov
mov
lods
jge
or
sahf
scas
cltd
jbe
and
mov
bound
stos
dec
gs
in
sahf
pop
rclb
cmpsl
movsl
outsb
fcoms
aaa
or
inc
pop
push
xlat
js
mov
sub
jae
jns
js
es
repnz
sbb
fdivs
or
imul
lcall
xchg
dec
rcrl
pop
push
inc
xor
pop
ds
aam
hlt
xchg
mov
and
orb
xor
loopne
repz
adc
mov
push
iret
mov
aad
dec
aaa
inc
jg
pusha
rclb
fisubrl
push
jecxz
add
sahf
jmp
inc
jno
xchg
dec
mov
inc
test
stc
mov
leave
in
pusha
jmp
cmp
sub
mov
lds
pop
mov
cs
jecxz
sub
lea
repnz
jo
lea
sbb
inc
xchg
lret
jecxz
aaa
push
dec
xchg
xchg
popa
shlb
fsubp
pushf
push
bound
js
mov
movsl
mov
and
adc
add
jle
sub
repz
push
sub
ja
jmp
pop
dec
xlat
cs
ljmp
inc
xchg
shrl
jo
adc
mov
test
push
mov
daa
sub
sahf
lcall
xchg
cwtl
in
imul
imul
push
or
xor
mov
shlb
imul
cmpsl
out
jns
adc
ret
cmpsb
push
pop
or
inc
stos
adc
adcb
js
in
lods
mov
sub
aas
bound
mov
or
cli
and
sbb
mov
into
and
shl
sbb
and
cwtl
or
jg
push
sbb
mov
cmp
idiv
cmp
stc
dec
jne
jb
fdivl
pop
and
inc
jb
xor
lods
rorb
outsl
cmp
out
hlt
adc
jmp
add
shrb
mov
sti
mov
pushf
jne
pop
mov
jl
je
adc
outsl
xlat
xor
jne
dec
divl
in
les
mov
int
xor
test
jge
mov
fnstenv
lea
jmp
xor
pop
fimull
xlat
pop
femms
lret
rorl
testb
xor
scas
fdecstp
mov
mov
sbb
mov
daa
psubsb
outsb
fs
dec
pop
int3
sub
out
inc
adcl
leave
dec
lahf
mov
sbb
stos
xchg
test
mov
mov
repz
xor
scas
jl
and
fidivrl
test
push
popl
sbb
andb
int
enter
cmp
xor
scas
ret
or
ja
jbe
in
adc
fimuls
fsubrp
dec
push
loop
mov
or
adc
sbbb
cli
pop
pushf
repnz
mov
inc
decb
jns
push
faddl
or
or
std
add
lods
pop
stc
or
dec
sbb
gs
push
orb
dec
int
ds
lret
ss
mov
mov
filds
js
test
jg
test
inc
sbbb
jge
cmp
fcoml
out
push
insl
ljmp
stos
sbb
or
mov
roll
test
cwtl
ficoml
jae
pop
ja
or
pop
fisubl
sub
outsb
imul
mov
inc
cmpsl
pop
fistpl
cmp
sti
sti
roll
xor
testl
push
aam
xlat
cld
jae
gs
add
testl
fcomip
call
mov
pop
jle
xor
fnstsw
aaa
fwait
scas
jnp
pop
call
orb
rorb
cmp
fldenv
mov
xchg
insb
daa
xchg
lods
xchg
arpl
dec
inc
pop
adc
add
mov
add
sub
cmp
aaa
xchg
xchg
insl
jno
mov
je
cmpsl
dec
jmp
popf
imul
or
mov
sub
xor
shrb
andl
push
xchg
jle
lahf
lods
stos
or
out
pop
cmc
cmc
ret
mov
xchg
sub
sub
into
cs
lahf
cmpsb
imul
loop
sub
ret
xlat
jmp
rcll
fwait
mov
xchg
sarb
adc
stc
jns
int
sbb
or
roll
movsl
cli
inc
lea
mov
fstpt
cmp
call
jbe
push
addr16
mov
push
mov
aas
loopne
jecxz
mov
jecxz
pop
lds
xor
and
add
outsl
xchg
xor
hlt
aas
cmp
or
push
jle
mov
pop
xchg
cs
cs
and
in
xor
mov
gs
imul
call
dec
pop
adc
stos
test
xchg
mov
shll
jbe
xchg
push
cmp
enter
pop
xchg
mov
xchg
add
inc
jmp
or
sub
sbb
dec
addb
xor
jbe
pusha
sbb
in
fwait
adc
aam
sbb
jns
scas
xchg
sub
enter
adc
mov
lods
adc
xor
andl
jbe
or
xchg
dec
push
add
imul
and
add
dec
lods
lahf
ss
aaa
push
push
or
mov
inc
pusha
dec
cmp
notb
push
jg
insb
mov
cmp
loope
push
out
fldcw
sbb
lret
jge
mov
dec
mov
divb
subb
arpl
int
test
xchg
jbe
sbb
add
in
aad
pop
pop
sub
push
outsb
pop
dec
cwtl
xchg
jae
add
mov
gs
or
out
ds
push
hlt
loopne
jmp
jl
ret
jae
lahf
scas
xchg
out
into
pop
mov
out
jecxz
push
xchg
mov
sbb
lahf
fbld
imul
pusha
daa
imul
fildll
mov
rorb
cmp
cmp
cwtl
sub
js,pn
xchg
add
pop
mov
cmc
in
sbb
push
jne
sbb
ja
daa
ret
sub
jmp
loop
mov
outsb
addl
adcl
pop
pop
pop
loopne
repz
insl
int3
in
jne
in
push
or
pop
jecxz
ret
pop
callw
loope
mov
imul
xchg
fistpll
scas
decl
clc
mov
sbb
pop
mov
cmp
jne
jb
insl
push
and
aad
add
mov
pop
mul
pop
outsb
fs
es
push
push
addb
add
fdivrl
fdivp
dec
add
sub
push
and
lods
cmp
mov
cmp
pop
sub
xchg
aaa
lahf
xor
and
and
xor
out
sahf
jge
fcoms
rol
aaa
shl
dec
add
cld
ljmp
xlat
mov
ret
loope
mov
push
stos
mov
push
in
push
nop
jle,pt
scas
nop
roll
add
imul
push
sbb
pop
push
xor
sub
dec
jge
jge
pop
pop
push
push
push
je
movsb
jl,pt
repz
inc
mov
js
fsub
jae
add
scas
imul
fbstp
fldl
fildll
mov
xor
sbb
punpckhbw
cmp
and
icebp
pop
pop
loope
add
inc
dec
mov
lret
imul
insb
mov
test
outsl
lock
inc
in
imul
pushl
rolb
aam
stos
push
fisubrl
iret
nop
lods
repz
js
js
inc
inc
shlb
int
push
add
scas
cmpsb
pop
jo
mov
xor
xchg
pusha
fmull
push
xchg
jle
leave
ret
test
add
add
add
add
mov
add
add
add
add
add
rolb
add
add
addb
add
add
in
addb
add
addb
pop
add
add
xor
add
add
add
add
or
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
add
add
add
add
add
and
loopne
add
adc
jns
add
insb
add
js
inc
lea
popa
add
add
add
add
add
mov
add
add
add
push
add
add
and
enter
jb
push
outsb
pop
jae
jae
dec
add
repnz
and
add
inc
jecxz
jne
leave
lea
inc
int
add
add
in
push
cld
mov
add
or
je
incl
add
and
push
incb
inc
or
leave
or
or
xor
lret
push
add
adc
cmp
faddl
in
push
jmp
add
add
add
incl
add
add
add
pushl
and
mov
and
orl
jbe
push
add
clc
add
incl
incb
andl
adc
mov
hlt
adc
std
add
adc
add
add
in
js
add
lcall
add
add
add
pop
je
jb
je
js
outsl
outsb
imul
add
gs
inc
outsb
imul
mov
gs
add
gs
cmc
imul
add
aad
jns
outsl
add
inc
outsl
insb
inc
insb
dec
popa
jb
xchg
push
add
add
int
add
add
add
in
add
add
ret
adc
imul
stos
xchg
push
loope
mov
out
xchg
cmp
add
adc
dec
fcomps
cmp
pusha
inc
out
or
movl
mov
lods
xchg
pushw
inc
movsl
roll
xor
pop
add
xchg
ror
pop
push
in
push
sti
push
fsubrl
int3
jp
jle
sarl
xor
push
movsl
loope
pop
fs
dec
dec
jge
out
or
inc
xchg
add
push
xchg
add
leave
and
bound
ss
sarb
cmpsl
xlat
adc
outsb
adc
mov
push
jl
sub
xchg
lcall
dec
mov
sub
xchg
jne
push
sbb
repnz
mov
xchg
fwait
cmpsl
rcr
dec
push
repnz
test
push
mov
xorl
xor
inc
lret
push
iret
sub
fs
or
imul
mov
pop
into
in
jge
enter
inc
xlat
cmpsl
fidivl
cmpl
das
dec
mov
out
jp
das
aas
jg
cmp
ds
mulb
sbb
out
cmp
cmpl
sarl
andl
xchg
or
in
push
pop
xor
scas
test
leave
mov
or
in
adc
outsb
pop
fisubs
mov
cmp
adc
sbb
cwtl
stos
out
roll
jmp
movsb
jl
jg
mov
ret
jae
or
mov
xchg
push
push
and
bound
add
sub
outsb
jge
clc
xchg
add
and
out
mov
in
add
sbb
dec
sahf
jecxz
push
insb
xor
xor
loope
lods
fistps
stc
enter
pop
pop
jecxz
and
add
mov
aam
xlat
sbb
sbb
push
push
jne
nop
insl
xor
or
imul
jae
cmp
push
mov
aam
lea
mulb
scas
mov
or
aaa
xor
jl
xor
or
push
pop
mov
pop
in
sub
xchg
notl
ja
mov
fs
pop
cmp
lea
sbb
out
push
test
xchg
inc
jne
adc
adc
sbbl
fimull
cmc
cmp
sub
sti
cltd
adcl
movl
in
pop
outsl
repnz
fisttpll
stc
lahf
pusha
sti
push
fstl
mov
pop
cld
xchg
xor
movsb
push
imul
mov
stos
push
sbb
addps
into
movsb
test
mov
dec
dec
into
loopne
mov
adc
jno
jle
lret
in
xchg
push
xchg
mov
cmp
lret
andb
or
or
lock
or
dec
inc
lock
mov
mov
aaa
movsl
fdivrs
repz
in
cltd
mov
cmpsl
adc
xchg
lds
test
int
add
adc
aas
add
and
enter
jns
les
movsb
push
call
arpl
out
mov
imul
xchg
adc
adc
scas
add
pop
jp
ret
xor
xchg
or
or
faddl
mov
mov
lds
mov
and
or
xchg
in
inc
push
sub
jne
xchg
cwtl
cltd
pop
push
push
bound
sbb
les
or
pop
divb
cwtl
lcall
jecxz
inc
jbe
adc
xor
outsl
dec
loop
pop
cmpsb
mov
mov
aaa
dec
in
mov
or
inc
imulb
mov
jg
popa
dec
ror
repnz
popf
mov
in
cmc
xchg
sbb
imul
cmp
push
fcomp
lea
addr16
mov
ret
sub
cmp
mov
jae
lock
paddd
nop
repnz
sub
jo
adc
lea
mov
dec
dec
insl
mov
xor
inc
mov
into
fsubs
stc
insl
sahf
cmpsl
add
stos
mov
mov
stc
pop
mov
jge
call
test
jmp
or
in
test
test
aad
mov
cmp
aas
xchg
adc
stos
sub
fidivs
jno
fwait
lcall
add
adc
xchg
pop
mov
cmp
sbb
mov
fdivrl
inc
faddp
call
cli
out
out
aas
mov
enter
jmp
in
and
jbe
or
xlat
inc
and
inc
cld
aam
jbe
adc
adc
cmp
popl
jnp
dec
aas
addl
xor
orl
test
movsl
cmp
mov
loop
shll
inc
mov
sbb
les
mov
and
mov
pushf
jl
shld
push
in
jecxz
lret
xrelease
addr16
jo
adc
out
and
push
jae
jmp
aaa
cwtl
imulb
add
iret
add
dec
sbb
imul
sbb
mov
jo
mov
clc
andl
xor
mov
push
clc
push
jo
add
dec
adc
call
sub
add
push
inc
push
and
adc
jns
inc
inc
fwait
out
mov
stc
pop
dec
in
jl
and
mov
stc
push
and
test
mov
push
lods
and
xchg
xor
adc
mov
mov
loope
lahf
or
mov
lcall
test
mov
pop
push
mov
add
jns
sub
ljmp
push
or
jb
out
cs
jle
cmpsb
inc
dec
jle
stos
mov
jnp
pop
sti
jnp
xchg
out
push
cmpsb
addr16
mov
and
jg
pop
xor
fsubrl
add
cs
or
addr16
mov
cwtl
add
outsb
jp
jnp
jne
mov
iret
cli
cli
sub
xor
push
jmp
clc
mov
and
iret
ret
aam
mov
in
in
push
repz
pop
pop
subl
pusha
scas
pusha
inc
jle
in
push
ja
cmpsb
and
jns
cmp
hlt
mov
call
lods
outsb
lock
sub
mov
inc
xchg
or
pop
fwait
leave
hlt
rcrb
aas
popa
mov
lods
imul
aaa
and
cmp
and
stc
jl
xlat
decl
shlb
addr16
pop
mov
jae
daa
adc
mov
push
adc
mov
mov
jns
add
push
iret
or
ret
add
pop
pop
shl
inc
jge,pt
rcl
ret
popf
lret
sub
nop
pop
test
xchg
aas
inc
es
daa
adc
cmc
test
xchg
sahf
iret
xchg
out
mov
xor
xchg
mov
mov
les
adc
cmp
or
daa
pop
je
lock
cmp
adc
sub
mov
out
out
and
push
sub
lock
cmpsl
pop
out
test
jp
clc
punpckhdq
or
jmp
jb
pop
xchg
pop
xchg
aad
std
scas
das
out
sub
in
bnd
pushf
or
xchg
adc
jg
add
jmp
pop
mov
lds
jg
loopne
lret
jno
orb
jp
sbb
sbb
cmc
cs
cmp
mov
inc
inc
adcb
push
fists
fdivl
push
jl
orb
fwait
inc
jl
dec
inc
push
adc
addr16
mov
mov
adc
in
sub
dec
loopne
inc
imul
sub
push
loopne
sub
adc
lcall
jb,pn
aam
push
fwait
daa
iret
test
xchg
out
insb
lds
add
mov
pusha
mov
jle
mov
adc
shrl
fdivl
test
shlb
in
sbb
test
lock
adc
leave
push
sub
sub
sbb
outsb
ret
cld
jl
ja
shll
lods
sub
les
repnz
add
cmp
das
cmpsl
addb
adc
adc
test
rcll
cmovle
xor
jbe
jge
adc
xor
fldenv
mov
mov
mov
rol
push
orl
movsb
popa
push
or
push
jecxz
insl
aas
push
push
inc
loop,pt
pop
int
hlt
xchg
movsl
push
inc
mov
pop
mov
ret
loopne
inc
lret
sub
sbb
xchg
inc
push
jo
jo
mov
fnstsw
gs
and
pop
and
push
dec
fldcw
push
pop
or
pop
lea
sbb
sbb
popf
push
mov
mov
jp
arpl
fimull
loop
ret
jnp
adc
shlb
mov
pop
iret
js
dec
or
es
push
js
mov
and
mov
enter
ret
adc
xchg
cld
ret
sub
pop
jp
outsl
rol
scas
stc
js
clc
mov
pop
sbb
lret
push
pop
push
cwtl
sub
mov
enter
xchg
xor
nop
std
loop
xor
inc
ss
das
hlt
or
aaa
push
xchg
cmp
mov
sti
fnstcw
push
cmpsl
push
mov
mov
push
dec
les
lock
mov
inc
and
hlt
sarl
and
pop
pushf
sbb
mov
inc
dec
push
pop
loop
adc
scas
sub
out
ljmp
xor
outsl
mov
cmp
bound
sti
jp
ljmp
hlt
loopne
mov
fbstp
lds
xchg
and
fisttps
sbb
pop
popf
pop
mov
xchg
test
push
sti
jl
mov
js
daa
ret
aam
pop
xchg
sbb
jle
cmp
pop
push
das
movsl
fsubr
mov
pop
decb
and
or
test
dec
loope
adc
nop
pop
and
adc
mull
ja
push
push
repz
inc
mov
fwait
push
mov
ret
into
dec
xor
ret
int
movsb
cmp
aaa
sub
or
lods
std
jmp
or
adc
inc
mov
pushf
pop
fdivrp
cs
negb
jo
cmp
loop
dec
push
cli
or
push
int3
adc
mov
test
xchg
into
jmp
add
or
fwait
inc
fists
adc
mov
scas
sbb
cltd
and
imul
mov
stos
mov
loope
rorl
mov
mov
sub
dec
mov
imul
clc
add
or
andb
inc
popf
adc
mov
lea
inc
push
cs
jns
stos
cs
mov
adc
pop
fstpl
stc
ja
in
dec
std
arpl
cmpsb
ja
mov
pop
sbb
sub
cli
aad
sbb
or
lods
into
sets
call
dec
iret
cwtl
mov
xchg
pop
stos
inc
xor
pop
hlt
jp
or
push
xchg
loop
shl
xlat
sbb
rol
mov
shrb
jl
mov
call
mov
jp
and
icebp
jge
xchg
adc
dec
push
scas
pushf
sbb
daa
dec
pushf
jle
cmp
mov
xlat
cmpsb
ret
cld
adc
jns
cmp
lret
pop
lcall
stos
pop
pushf
repz
shlb
into
inc
jnp
int
das
loope
test
jno
lock
ja
faddl
out
mov
or
divl
test
iret
and
mov
and
int3
pop
mov
pop
sahf
and
icebp
add
sub
cmpsb
xchg
pop
mov
xor
push
jl
cwtl
int
push
cs
push
or
sub
xlat
dec
imul
push
testb
dec
adcb
cld
fcomps
mov
mov
sbb
push
daa
aad
inc
and
out
decl
in
cli
rolb
jp
je
xor
pop
dec
call
idiv
ja
inc
movsl
sub
pop
mov
data16
daa
sub
and
inc
addr16
add
leave
test
mov
mov
sbb
mov
shl
cmpsl
ds
jl
sub
rcl
sbb
xchg
cmpsb
call
adc
sub
loope
pusha
dec
xchg
xchg
test
aaa
or
inc
xchg
lret
inc
mov
idivl
in
outsl
test
std
aas
pop
stos
xchg
fstp
lea
jecxz
rclb
scas
push
repnz
jbe
nop
mov
imul
add
dec
mov
and
xchg
lods
inc
mov
cli
dec
mov
fisttps
sub
xlat
nop
dec
add
xchg
mov
mov
das
add
leave
jmp
mov
xchg
outsb
das
stos
fwait
mov
sbb
sbb
mov
cmpl
dec
cmpsl
mov
imul
gs
pop
in
add
stc
or
add
sarl
mov
pop
or
pop
xchg
push
pop
mov
dec
fists
aam
dec
decl
dec
fldenv
fs
jb
loopne
and
dec
mov
pop
pop
xchg
test
push
mov
and
aad
push
push
or
leave
sbbl
fnstsw
pop
pusha
lret
push
stos
mov
jnp
or
xlat
mov
mov
mov
xor
adc
mov
adc
mov
pop
imul
mov
mov
xchg
mov
das
int
in
inc
rol
aaa
movsb
pop
fs
jbe
cmpsl
sbb
ret
cmp
add
mov
lret
mov
jp
loop
adc
lret
dec
and
jmp
dec
loope
xor
adc
addr16
into
adc
insl
xor
mov
mov
orb
aas
sub
jno
sub
cmp
mov
inc
mov
out
mov
adc
push
xchg
mov
sti
cmpsb
mov
sub
cmp
ljmp
or
sbb
cld
add
daa
insb
jae
mov
inc
sub
push
scas
iret
adc
shll
lods
push
sub
dec
nop
sub
or
loop
aas
movsb
xchg
fs
imul
push
incb
push
movsb
aad
and
negl
dec
shll
and
inc
leave
rcrl
repnz
repnz
mov
lret
std
mov
dec
cmp
in
pop
lahf
pop
push
mov
pop
add
mov
fisttpl
pop
cmp
or
daa
jg
in
sbbb
pop
loopne
sub
mov
mov
push
sub
clc
xor
fwait
es
jle
dec
push
popa
adc
lds
mov
cmp
sbb
dec
int3
mov
or
inc
xchg
xchg
iret
or
sbb
mov
pop
in
enter
call
out
aam
cmpsl
js
fsubr
nop
jp
pop
and
cmp
mov
data16
nop
lds
cwtl
stc
add
push
aaa
inc
inc
mov
mov
pop
xorb
outsl
cmc
repz
sub
mov
push
inc
mov
into
cmp
push
xor
sbb
nop
jae
test
lods
mov
push
scas
inc
mov
dec
hlt
popf
lock
sbb
iret
or
loopne
sbb
push
fwait
in
bound
imul
popa
sub
out
push
outsl
lret
xchg
jnp
mov
fsubp
shl
xor
pop
dec
iret
and
xchg
adc
xchg
mov
add
cmp
sub
mov
leave
cmpsl
mov
add
pop
xchg
sbb
lds
loop
insl
mov
pop
mov
mov
pop
dec
or
pop
mov
hlt
out
cld
decb
icebp
jg
mov
lds
jo
int3
ficoml
aam
enter
and
sub
xchg
cmp
add
mov
push
inc
les
out
xchg
cmp
mov
ljmp
clc
jg
mov
pop
movsb
mov
cmpsb
cltd
push
repnz
mov
loopne
dec
cwtl
jne
stos
lret
push
insb
fwait
popf
xchg
and
out
stos
inc
or
add
out
call
or
fmull
stos
mov
test
add
gs
fadd
jg
xlat
test
daa
and
cld
imulb
mov
sbb
jne
mov
mov
subl
fidivrs
xchg
lahf
xchg
in
dec
inc
call
fisubl
loope
pop
adc
jne
push
jne
jne
sti
lods
test
leave
pop
and
add
adc
push
idivl
xor
outsb
pushf
push
push
lock
xchg
pop
repnz
lahf
pop
lea
pop
jnp
test
pop
xor
sub
test
cli
xchg
mov
sbb
outsb
pop
aas
inc
stc
lods
cld
pop
mov
fidivs
cmc
pop
jne
addr16
popa
lret
shrb
mov
and
push
js
les
adc
add
stc
je
mov
dec
jl
mov
iret
jg
xchg
addr16
mov
cmp
loope
out
push
mov
add
in
inc
aam
movsb
je
aad
jbe
xor
ljmp
ret
out
cltd
es
out
fpatan
test
jg
xor
sbb
ja
push
xchg
fcom
out
pop
daa
jecxz
mov
fadds
push
xchg
out
mov
movsl
cld
mov
gs
mov
cmp
push
jbe
addr16
shlb
aas
cmpsl
jb
lock
shl
or
out
xchg
sahf
inc
lea
sbb
popf
or
out
loop
sbb
sbb
mov
enter
push
pop
push
mov
and
fisttpll
adc
loop
es
jl
jecxz
neg
test
adc
push
mov
mov
movsb
jecxz
adc
popf
in
ljmp
push
mov
shl
cmp
adc
in
in
sahf
cltd
lock
inc
jno
and
pop
pop
fiadds
ficompl
jb
pop
movsl
das
lock
dec
cmp
aas
lahf
leave
cmpsl
inc
jle
icebp
insb
xlat
sub
pop
pop
push
ficoml
mov
ficoms
cmc
mov
adc
mov
clc
cli
xor
sahf
pop
ja
inc
popf
aaa
cmp
or
push
lods
scas
fs
repz
or
fcompl
lret
add
sub
call
add
pusha
jle
fnstenv
jecxz
sti
shl
rcrb
inc
cmpsl
or
mov
fdivrp
testb
dec
lock
outsb
dec
sbb
ss
ret
cmp
mov
aad
xchg
mov
call
push
xor
int3
cmp
mov
fwait
adc
push
ja
in
push
es
pushf
js
je
or
iret
insl
or
test
jp
add
add
repnz
add
add
add
add
add
add
add
nop
add
xchg
jge
rolb
add
add
add
add
add
add
and
add
and
add
adc
add
xorb
add
ja
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
add
add
sub
int
popa
gs
add
add
add
add
add
add
add
add
add
and
add
outsl
fisttpll
add
add
xchg
add
add
add
filds
arpl
jae,pn
push
arpl
je
sub
add
jne
push
inc
aaa
add
dec
pop
fidivrl
mov
adc
mov
lea
inc
testb
cs
and
test
incl
adc
clc
add
lds
adc
jge
out
mov
lea
decl
mov
gs
inc
rolb
jbe
cmpl
add
adc
xor
push
push
call
cmp
add
jl
adc
adc
mov
lea
add
adc
mov
clc
inc
roll
add
and
incl
cmp
add
add
push
lock
add
add
fiaddl
addb
add
add
mov
clc
add
add
push
imul
and
dec
outsl
imul
arpl
outsl
mov
inc
inc
push
popa
add
inc
push
popa
gs
insl
aad
insb
gs
gs
addr16
push
dec
jb
std
inc
imul
arpl
add
add
add
lea
add
add
add
add
ficompl
mov
sbb
mov
lret
ret
inc
lea
movsb
int3
add
mov
xchg
fnstenv
jbe
arpl
sub
mov
lcall
sub
mov
pop
jno
xchg
iret
aad
dec
mov
arpl
xchg
ret
jl
sbb
fldt
dec
mov
add
in
inc
sub
orb
repz
fisubl
cmpsl
push
mov
push
dec
xor
jge
cmp
int3
mov
push
jb
loop
jo
adc
adc
sar
stos
xchg
dec
jecxz
in
jno
push
xor
sbbb
cmc
xchg
xlat
cld
pop
and
subb
jae
or
or
mov
cmpb
cmp
push
clc
jge
movsb
icebp
cld
sbb
xor
dec
adc
lods
xchg
mov
rcrl
mov
daa
addl
out
pop
mov
notl
push
jmp
pop
adc
sbb
xor
dec
xchg
fstps
mov
inc
jl
das
test
inc
add
scas
lock
xor
outsb
int3
mov
int
ja
scas
loope
mov
sti
mov
and
or
or
adc
insb
inc
stos
jae
imul
mov
enter
dec
lods
xor
and
cmp
lret
push
xchg
scas
mov
lahf
dec
popf
cld
push
sub
xchg
call
outsl
movsl
push
aas
sti
pop
inc
movsb
cs
push
mov
insl
addr16
popl
xor
fstps
inc
sbb
sbb
dec
jno
out
jae
outsb
jle
xor
mov
or
imul
shr
outsb
es
cmpsb
lods
mov
mov
push
cmpsl
or
not
lds
pop
icebp
inc
sub
lcall
mov
mov
out
jp
mov
xor
outsb
xchg
cmc
xchg
xorb
popf
cmp
cmp
aaa
out
mov
shlb
cmp
lret
test
mov
mov
popa
notl
adc
flds
outsb
jp
cltd
jne
dec
loopne
insb
out
pop
imul
cmpsb
stc
inc
arpl
jmp
call
stos
inc
xchg
dec
mov
jmp
pop
jecxz
loopne
and
lock
jne
cmc
call
in
stos
mov
gs
in
mov
cli
stc
neg
adc
imul
xlat
cwtl
or
cmp
mov
and
adc
cmc
jge
test
test
inc
push
or
dec
bound
fmul
rclb
scas
sbb
xchg
mov
pavgb
fs
fwait
jns
add
bound
ss
sub
xchg
mov
inc
test
jp
sub
jno
pop
ljmp
cld
and
or
jmp
and
test
movsb
pop
push
pop
or
mov
daa
test
cmp
xchg
pop
repnz
lcall
mov
cs
xchg
push
adc
mov
rcr
movl
leave
mov
dec
ss
loop
xor
push
lea
call
inc
fiaddl
mull
mov
mov
mov
xchg
mov
fildll
sub
pop
cltd
mov
jae
sbb
inc
cmp
ljmp
jnp
xchg
pop
adc
fdivl
je
sbb
xchg
lds
stos
mov
jl
aad
fdivrs
out
in
dec
xchg
lock
cmp
insb
push
je
push
mov
outsl
push
inc
push
cmp
pop
fdiv
rcrb
js
sub
fs
addr16
dec
push
into
inc
mov
or
jg
out
push
shl
push
add
in
out
ljmp
test
mov
or
leave
stc
adc
lcall
fsubl
in
pop
cmpsl
cltd
fdivl
in
xchg
fistps
cmpsb
lahf
mov
sub
cs
mov
push
or
mov
jae
or
adc
sbb
xchg
fs
enter
jl
push
adc
mov
inc
out
stos
adc
dec
fsubr
jns
loope
sub
adc
loop
inc
cs
cmp
cmp
enter
mov
mov
cli
in
and
lahf
hlt
sbb
sti
ret
lock
popf
int3
mov
pushf
lds
and
popf
adc
mov
rolb
push
test
xorb
ds
pop
inc
cwtl
sbb
clc
leave
daa
mov
testb
fwait
inc
fucomp
lret
pop
shll
inc
mov
push
and
in
jns
fbstp
scas
mov
pop
and
jmp
movsl
jmp
mov
fwait
clc
push
inc
mov
jbe
sub
add
std
addl
add
aaa
or
cmp
cmp
aam
xchg
mov
xlat
adc
mov
mov
cmpsb
cmp
pop
ljmp
mov
lea
add
lods
add
pop
or
mov
adc
dec
pop
bndstx
lds
dec
cmp
xchg
add
lcall
sub
jno
imul
shr
xchg
shlw
cs
inc
arpl
dec
pop
or
ljmp
and
test
xchg
or
jns
add
cmp
pop
call
out
xchg
int
cmp
mov
or
jno
lcall
jo
fnstsw
fwait
xchg
jle
push
shrb
xchg
inc
sbbl
bound
aad
orb
mov
inc
add
pop
pop
das
and
push
sbbb
or
inc
insl
xor
scas
hlt
pushf
mov
push
xor
push
shlb
adc
out
push
jo
gs
sbb
cmp
inc
add
sbb
fidivs
push
xor
adc
jle
xchg
sub
loope
jne
test
dec
test
mov
test
xor
mov
scas
loope
iret
test
sarl
cmp
nop
mov
outsb
mov
popa
ljmp
enter
out
cwtl
mov
mov
ret
xchg
inc
inc
push
mov
mov
scas
pop
test
inc
add
pop
rcll
jbe
jmp
push
xchg
xchg
xlat
imul
jns
and
inc
push
mov
push
mul
movsb
push
jb
mov
sbb
les
es
arpl
jne
fs
dec
fcomps
dec
fcoms
aaa
cmp
inc
test
test
mov
out
mov
mov
les
cmpsl
cld
sbb
popf
outsb
inc
xor
adc
movsb
jg
xchg
push
dec
in
sti
mov
cwtl
in
jb
mov
aad
stos
leave
inc
sbb
xor
pop
daa
addr16
add
enter
mov
xchg
cltd
jp
mov
cmpsb
cmp
xlat
xchg
xor
dec
movsl
inc
and
add
fsubr
dec
mov
cmpsb
xchg
shrl
movsl
cmc
shl
cmpsl
add
daa
sbbl
hlt
sti
and
mov
mov
and
mov
inc
push
aaa
fdivr
sbb
push
nop
cltd
scas
bound
xchg
sbb
clc
xchg
push
add
mov
jbe
jl
push
sbb
xor
das
jae
sub
aaa
shlb
xor
pop
aas
sahf
clc
or
and
jecxz
lock
jl
fwait
cmp
sub
push
cmp
xchg
push
adc
loope
dec
lcall
sahf
sub
xlat
es
es
test
jno
fwait
arpl
sbb
cli
sbb
sub
xor
loop
addr16
lock
mov
loope
push
push
out
pop
insl
aad
cmp
jno
movsl
fldl
push
cmp
jecxz
jp
mov
mov
rcrl
and
jbe
add
or
xchg
dec
cmpsb
mov
adcb
mov
sarl
jnp
mov
daa
jbe
mov
mov
scas
jns
movsb
rorl
adc
push
repz
adc
cmc
mov
pop
or
pop
sub
lods
xor
jp,pt
cmpb
xchg
jbe
xor
aad
inc
addr16
mov
inc
sbb
addr16
push
sub
and
mov
cmp
adc
dec
xor
idivl
insl
xor
add
scas
and
xlat
shrb
pop
or
pop
fidivl
mov
pop
insl
cmp
cmp
fsubp
insl
pop
xor
xor
cmp
mov
outsl
addr16
iret
jne
inc
or
fnstcw
nop
ret
or
lcall
sar
cmc
out
fwait
xchg
mov
scas
and
or
pop
dec
cs
loopne
ljmp
xor
in
jb
sub
inc
cmp
dec
xchg
and
adc
add
cmp
xor
in
sub
ret
mov
push
scas
movsb
add
xchg
push
pusha
dec
inc
sbb
inc
cltd
jecxz
enter
les
and
dec
adc
repnz
and
mov
or
out
jb
test
dec
lds
sbb
or
das
dec
mov
jbe
mov
adc
adc
mov
ret
int3
xor
inc
inc
aas
jecxz
mov
sahf
mov
cs
mov
jo
sub
cmp
jo
or
jo
inc
sub
add
pop
pop
push
and
and
movsl
scas
and
mov
stc
push
aad
dec
cmp
xchg
loopne
stos
pop
lret
inc
mov
mov
inc
adc
fistpl
ja
add
cli
jle
test
push
inc
jge
enter
add
xlat
testb
mov
scas
xchg
sbb
in
mov
xor
arpl
popl
mov
loop
jp
xor
and
sbb
enter
in
scas
mov
dec
nop
jg
jbe
arpl
aad
ljmp
pop
daa
push
rolb
mov
hlt
pop
sbb
jne
xchg
imul
les
and
adcl
outsb
test
fs
jl
jne
xchg
mov
imul
mov
sub
jae
call
mov
iret
pop
dec
testl
sbb
cmpsb
or
scas
jne
cs
push
lcall
decl
jg
cmpsl
scas
mov
cmp
fsubs
ss
mov
pop
cld
dec
fidivl
fidivrl
mov
ret
inc
lcall
ljmp
mov
xor
outsl
imul
xor
mov
xchg
sub
jbe
hlt
loopne
cld
xor
mov
inc
orl
lds
dec
mov
inc
push
mov
sbb
sub
xchg
pop
sbb
xchg
inc
lods
fisubrl
and
aaa
pop
push
out
mov
xchg
jb
jae
push
push
pop
pop
or
xor
fisttpl
pop
fwait
mov
in
push
sbbl
cmp
dec
jl
push
imulb
mov
movd
push
popf
push
lahf
ljmp
mov
jg
mov
into
imul
lret
lea
imul
inc
jl
push
xchg
movsb
inc
inc
pop
fwait
pop
push
adc
xor
pop
addr16
aas
movsl
inc
sub
fwait
hlt
xchg
jge
sbb
xchg
xchg
xor
jecxz
push
rorl
arpl
lock
fdivrp
aas
push
mov
fs
add
inc
inc
fistl
and
mov
jg
lea
sub
jecxz
mov
fabs
inc
xchg
xchg
sbb
push
jmp
xor
in
or
andl
pop
xor
insb
inc
pop
sub
das
sub
cwtd
sub
dec
test
sarl
cmp
mov
pop
test
or
sbb
imul
cmp
leave
arpl
cmp
in
inc
cmp
xchg
xor
lret
dec
or
sahf
fdivs
sbb
sbb
stos
or
inc
mov
inc
into
sbb
jg
ds
gs
cmp
jg
loopne
add
push
adc
mov
sbb
mov
sti
addr16
nop
push
popa
push
addr16
addr16
sahf
lods
dec
repnz
cli
lea
lahf
testl
mov
mov
dec
xchg
fdivs
fwait
mov
jae
inc
jb
xchg
insl
hlt
lahf
push
xchg
sub
outsb
xor
push
loop
stos
je
clc
fs
ljmp
sub
or
out
mov
pop
pop
sbb
push
jno
mov
aam
xor
loopne
push
mov
fs
and
xchg
inc
movsl
pop
mov
les
ret
push
arpl
lods
sbb
xor
out
xor
ss
xor
xchg
push
sub
mov
mov
stc
insl
xor
movsbl
dec
ss
push
lock
neg
loope
ds
inc
lock
fs
addr16
mul
push
adc
je
mov
movsl
mov
pop
and
or
ffreep
mul
push
and
outsb
mov
test
cwtl
xchg
xchg
dec
and
ds
mov
mov
cmc
or
fisttpll
lret
icebp
imul
lods
sub
leave
lea
sub
fldl
insl
pop
test
rcll
in
bnd
negb
adc
scas
test
add
dec
cmp
scas
pop
dec
and
cmp
aaa
insl
xchg
mov
jle
jnp
outsb
jb
in
xor
lcall
fisttps
sub
xchg
scas
mov
mov
int
sub
repz
cld
lret
std
sti
flds
daa
stos
jns
mov
leave
pusha
imul
xor
xchg
inc
pop
dec
jno
adcl
pop
cs
inc
adc
rclb
lods
push
fucomi
mov
sub
cmp
add
into
aam
ret
jp
imul
sbb
adc
and
sahf
jnp
xchg
sub
pop
sbb
cwtl
orps
arpl
lods
inc
mov
subb
dec
shr
dec
pusha
in
sti
dec
push
jo
loopne
adc
xorl
lcall
cmp
push
inc
test
nop
add
adc
cmc
subl
movsl
inc
and
stos
pop
inc
inc
mov
mov
sbbl
insb
cwtl
movl
or
push
sub
mov
lahf
lahf
out
xchg
lahf
jmp
je
iret
jmp
mov
and
sub
das
add
xchg
enter
fwait
outsb
push
out
add
in
sbb
sahf
nop
mov
call
lcall
xchg
inc
pop
adc
add
push
push
in
adc
aad
push
dec
jmp
mov
xchg
mov
jo
add
pop
jle
mov
stos
fisttpll
icebp
sub
jbe
test
loope
aas
lock
inc
dec
add
mov
jecxz
sbb
lock
mov
sub
iret
inc
sbb
popl
andl
xor
ljmp
cmc
or
sbb
dec
push
jo
cmp
mov
movsl
repz
outsl
sti
dec
bound
aad
enter
into
push
adc
out
scas
push
cs
arpl
push
xor
mov
jge
lock
js
dec
mov
jge
adc
ffree
cmpsb
test
nop
inc
sub
cmc
lods
bound
xchg
loopne
insb
add
adc
jmp
sub
and
push
xchg
mov
xchg
mov
pushl
mov
xchg
jne
mov
xchg
xchg
add
mov
adc
jmp
out
jae
xor
pushf
sub
fiaddl
aaa
fldcw
sub
negb
jo
or
mov
lret
arpl
mov
cs
xchg
roll
mov
call
adc
or
xchg
xchg
insb
push
sbb
push
sub
sub
mov
and
fcoml
jae
push
loopne
mov
arpl
imul
and
es
popa
iret
or
movsl
mov
mov
and
loop
push
mov
mov
sbb
sbb
mov
add
data16
adc
lea
jae
xor
lea
lock
lea
popa
jmp
push
stos
inc
int3
jl
mov
sbb
mov
add
dec
aaa
aaa
pop
xor
dec
cli
cld
mov
xor
imul
daa
rclb
dec
add
testb
cmc
test
push
push
ss
xchg
int
mov
push
or
fsubrs
mov
bound
stc
test
xchg
outsb
movsl
xor
or
push
aad
mov
jae
push
pop
adc
mov
adc
jo
or
rcrb
push
xchg
mov
ljmp
sub
pop
loop
push
pop
sub
lock
cmpb
jp
and
xor
mov
cs
mov
ss
enter
es
and
outsb
popa
insb
insb
bnd
outsb
xchg
sahf
push
iret
jae
into
into
lods
cmpsl
aas
and
cmpsb
push
idivl
insl
in
arpl
xchg
das
test
cwtl
sahf
lods
pop
push
sahf
ficomps
out
push
add
push
inc
inc
inc
shrb
fstps
lahf
std
mov
xorl
push
daa
push
ret
pop
sahf
and
incb
cmpsb
movsb
movsl
mov
call
mulb
or
arpl
call
rclb
push
ret
scas
push
jge
jl
cmp
lahf
idivl
push
xchg
pop
sti
imul
add
push
gs
nop
iret
or
push
add
lea
idivb
cmp
push
inc
mov
ja
imul
xchg
fcompl
fbstp
in
or
sub
int
xchg
push
imul
cmpsl
clc
ffree
dec
jae
repnz
and
push
movsb
jl
enter
push
dec
imul
push
dec
cmc
push
sbb
mov
ret
cmpsl
inc
jg
not
movsl
jmp
call
int
out
dec
push
cld
sbbb
mov
mov
imul
addr16
mov
test
mov
rolb
lods
stos
dec
loope
in
cmp
sub
in
and
movsl
and
jb
mov
xchg
cmovl
lcall
mov
out
insb
add
add
add
insl
mov
std
sub
add
add
add
add
add
test
add
add
fadds
add
add
add
and
add
add
add
add
add
addb
add
add
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
jae
jb
jo
add
aas
add
add
add
and
jne
or
mov
add
add
add
lea
add
add
add
add
cmp
add
add
add
add
lods
jbe
dec
add
or
xor
add
and
gs
push
jae
inc
jb
fs
popa
inc
add
setp
jmp
mov
enter
or
jmp
fmuls
sub
inc
pushl
add
add
cld
call
adc
push
dec
bound
jb
pop
dec
lock
in
sar
lret
pop
mov
lcall
adc
movl
add
or
pushl
pop
rolb
lock
add
add
push
test
test
std
jmp
xor
push
rorl
loopne
lock
push
adc
cmp
clc
cmp
shrb
dec
mov
pop
jo
dec
inc
push
inc
push
lock
push
in
push
inc
in
outsl
push
mov
and
je
xchg
sbb
add
cmp
cmp
out
add
add
gs
outsl
inc
ja
insb
movsl
outsl
insl
outsl
jne
inc
jo
gs
movsl
inc
call
gs
imul
in
insb
sub
inc
imul
jge
add
stos
dec
gs
gs
addr16
loopne
insb
gs
inc
dec
int
add
add
add
add
in
add
mov
add
popf
add
popf
jge
out
shlb
sbb
cmp
int3
cmp
cmp
lods
ret
pusha
cmp
les
jnp
adc
stos
inc
dec
shl
pushf
cmp
stos
scas
mov
jg
loopne
xchg
dec
movsb
and
shll
cmp
and
shlb
outsb
std
lea
jae
inc
mov
adc
test
pusha
pop
jmp
xor
inc
in
jle
clc
fldenv
aad
mov
mov
es
and
out
jbe
rorl
push
dec
call
mov
jecxz
imul
call
adc
push
jae
push
jo
lods
insb
scas
mov
or
pop
test
ret
movsl
or
repz
xchg
add
push
inc
dec
pop
aas
pushf
outsl
scas
xchg
cmp
pop
mov
aam
adc
cmp
and
stos
xchg
jge
dec
inc
pushf
jnp
pop
cli
nop
xor
dec
sbb
jg
dec
pusha
loope
scas
js
pusha
scas
cmp
push
or
cld
xor
cld
lods
mov
mov
add
fldcw
scas
or
lods
inc
test
jle
pop
adc
pop
mov
fdivrp
out
push
lcall
push
icebp
sbb
cwtl
pop
int3
popl
mov
xor
xchg
js
cld
and
arpl
sbb
push
add
int3
and
or
mov
or
cmp
shr
pop
jp
adc
mov
dec
jecxz
mov
mov
add
stos
pop
into
bound
hlt
sub
jmp
lds
sub
movsb
test
jns
cmp
xor
cmc
push
dec
push
ficoml
cmp
shlb
ret
xchg
daa
ss
pop
push
pop
add
sar
pop
inc
mov
dec
pop
xchg
ds
arpl
pop
hlt
in
fistl
mov
test
xchg
stos
testl
dec
mov
fimuls
fnstenv
adc
push
ficompl
push
ds
loopne
push
lahf
lods
xchg
scas
lcall
add
lea
lods
mov
pop
xchg
and
fldenv
cmpsl
xchg
cmp
lds
adc
adc
xchg
inc
xor
shrl
not
xor
xor
sub
lahf
adc
stos
lods
mov
rol
mov
adc
add
test
popf
mov
push
adc
adc
notb
ss
stc
jg
dec
inc
inc
xchg
dec
incb
pop
nop
adc
std
std
pop
mov
mov
pop
cmp
lret
lret
add
dec
scas
ss
pusha
add
loopne
lock
inc
jae
dec
fcmovb
dec
fcomip
push
shrl
cmpsb
dec
test
jno
lcall
xchg
push
fnstcw
ss
aas
js
mov
imul
testb
mov
dec
out
cmp
mov
fldcw
lret
mov
fcompl
lock
pop
dec
add
into
xchg
pop
cmpsb
and
repz
sahf
aam
cwtl
loope
or
jmp
rcl
in
cmp
pusha
pop
std
and
mov
pop
inc
sub
mov
or
fsub
scas
jmp
pop
adc
pop
push
shll
pop
nop
rcr
in
lods
mov
xchg
fistl
repz
jae
mov
pop
pop
add
push
nop
push
mov
das
addl
ror
sub
push
stos
cmp
fmull
ret
jp
xor
jle
pop
cld
xchg
rolb
pop
dec
lcall
push
mov
les
dec
idivl
stos
mov
test
and
add
rorl
fimuls
movsl
cs
add
add
pop
cmpsl
xor
rorb
sti
lds
fimuls
pop
mov
pop
in
insb
out
adc
push
iret
push
adcb
cltd
les
lods
dec
cmp
es
cmp
outsb
add
add
push
fdivrs
stos
cmp
add
mov
mov
rclb
imul
jl
jo
dec
stc
jns
popf
adc
cmpsl
jno
cmp
pop
ret
stc
inc
jo
bound
pop
push
jmp
mov
inc
orl
push
mov
jae
mov
push
es
inc
sub
mov
cmp
mov
add
jbe
mov
leave
jns
dec
psubsw
push
add
insl
push
fwait
rcr
mov
sahf
mov
xor
daa
xchg
adc
sub
bound
int
in
mov
dec
dec
add
jp
mov
es
out
out
pop
inc
scas
in
icebp
fdivrs
pop
test
mov
and
pop
loopne
loopne
mov
jnp
fists
mov
dec
sub
hlt
enter
pusha
fwait
call
jp
movsl
cld
mov
lcall
movb
mov
pushl
adcl
shr
popf
lock
pop
movhps
popl
ljmp
adc
into
cmc
xor
ja
je
lgs
pop
das
movsl
pop
xlat
scas
jo
lds
mov
or
jae
jae
inc
test
dec
stc
aam
pop
movsb
loopne
lds
int3
es
and
add
and
dec
add
cmpsb
arpl
or
in
dec
cmp
mov
dec
shl
or
call
xlat
test
out
rcrl
push
adc
jns
adc
xlat
imul
div
pop
repz
fnsave
and
add
insl
or
sahf
sbb
adc
jne
adc
and
mov
popf
dec
jo
repnz
xchg
faddp
cmpsl
lahf
je
cmpsb
ret
xchg
aam
dec
lds
out
mov
loope
nop
inc
inc
sbb
test
dec
iret
push
mov
fstpt
sub
cmp
mov
inc
lds
aad
adc
add
ljmp
mov
sbb
sub
and
aad
push
fwait
aam
or
insb
and
sub
cmp
cli
sbb
outsb
sti
sub
jb
cmp
pushf
adc
cltd
push
jb
outsl
hlt
sub
and
pop
lds
inc
outsb
scas
stos
push
and
jmp
push
xchg
sub
mov
rcrl
push
cmp
jbe
mov
pop
jnp
xchg
dec
popf
jp
add
aad
or
jp
frstor
js
inc
lcall
sahf
adc
xor
mov
mov
dec
lret
aam
outsb
fnstsw
or
hlt
xor
sbb
or
std
xchg
xchg
push
xor
sub
sub
fmulp
push
and
hlt
dec
jmp
bound
std
cmpsb
inc
in
or
jns
ret
test
jmp
xlat
lret
loop
jg
test
adcl
shrb
outsb
std
jo
mov
and
addl
aas
sbb
fisubrl
mov
inc
mov
in
mov
int3
cs
xlat
xchg
leave
icebp
or
pop
lret
xchg
mov
jge
lock
inc
sub
mov
into
in
ffree
hlt
popf
rorl
aas
nop
cmp
shrb
adc
mov
fsts
cmc
out
nop
lcall
bound
sahf
ficompl
jmp
jg
jo
sahf
xchg
mov
sbb
pop
dec
mov
jno
ret
ss
and
jg
sbb
leave
jnp
xor
cmp
cmpsl
sbb
out
pop
out
xchg
test
icebp
push
inc
lret
mov
pop
dec
add
jns
aaa
flds
inc
and
sub
push
cmpsl
and
sbb
jl
out
ret
negl
scas
xchg
shll
fwait
pop
aaa
sbb
jp
xor
mov
xlat
inc
insl
jae
mov
call
push
shrb
xchg
and
mov
jl
sub
add
ds
xor
xchg
xor
mov
dec
jbe
cmpsb
and
aad
push
icebp
shrl
push
inc
dec
clc
lea
in
cltd
outsb
in
cmp
in
xchg
push
jg
dec
imul
adc
sti
mov
daa
dec
mov
in
ret
sbb
push
mov
xor
in
sbb
es
cmp
lds
fdivl
dec
adc
xchg
mov
dec
aad
inc
ljmp
testl
mov
sub
mov
and
mov
daa
jge
out
push
mov
test
xchg
inc
jecxz
jmp
fadds
mov
push
pop
mov
xchg
fimull
test
rcll
pop
mov
leave
xchg
cmp
scas
call
popf
xchg
aas
sbb
nop
mov
sbb
dec
dec
mov
scas
fcmovnbe
aam
mov
mov
xor
xor
mov
adc
or
jne
xchg
mov
xchg
int
hlt
arpl
insl
les
stos
cmp
push
pop
sahf
jle
fisubl
push
mov
in
xor
sbb
or
popf
loop
enter
out
insb
xchg
aas
jecxz,pn
and
repnz
jno
aam
pop
push
mov
dec
std
movsb
xor
lds
inc
inc
cwtl
xchg
shlb
sbb
lcall
pusha
fisubl
fwait
inc
inc
loop
fwait
add
dec
addr16
xchg
sti
fildl
or
mov
ss
arpl
rorb
insl
rcll
hlt
loopne
mov
pop
icebp
mov
mov
mov
or
push
roll
mov
jne
aad
mov
cmp
push
fnstsw
push
popf
mov
sub
hlt
cmc
out
pusha
lods
push
add
dec
jne
adc
inc
in
push
and
jle
shr
addr16
adc
in
jecxz
mov
push
jmp
in
push
jae
int3
cmpsl
imul
aas
mov
loop
scas
sbb
mov
mov
in
in
btc
icebp
jb
repnz
or
adc
xchg
inc
or
sti
mov
int
enter
dec
pop
cwtl
fimuls
xor
stos
push
test
mov
jg
cmc
fldcw
out
xlat
xor
inc
iret
mov
or
cmpsl
push
dec
add
int
jns
test
add
xchg
scas
and
imul
inc
jo
lret
sub
cmp
mov
mov
jbe
dec
add
int
xchg
mov
adc
repz
ret
xorb
das
add
insl
jmp
pusha
push
loop
jns
add
xchg
pusha
jb
mov
arpl
xor
dec
lods
sbb
add
pop
clc
or
xorb
jno
mov
dec
push
jns
mov
jge
mov
shlb
sbb
dec
xor
mov
or
push
insb
jno
lahf
inc
out
inc
and
data16
subl
cli
add
pushf
mov
aad
push
mov
call
sti
ljmp
or
sub
mov
adc
cmp
and
aad
ja
and
mov
push
adc
cmp
shll
pop
lret
xor
pop
xor
dec
pop
imul
in
mov
jmp
sbb
daa
pop
movsl
adc
popa
adc
mov
jae
rcl
adc
aaa
cmp
mov
mov
xchg
add
mov
adc
xlat
lret
fwait
dec
dec
fiaddl
add
lds
ljmp
adc
xlat
mov
xor
push
sar
enter
jg
sbb
add
je
lds
mov
incl
mov
xlat
out
inc
mov
aad
xor
cmp
jle
subb
xchg
ja
sub
cmp
pop
push
cmp
in
jl
loop
push
sarl
mov
adcl
adc
ja
inc
add
mov
comiss
sbb
lods
cmpsb
movsl
gs
push
fsub
push
dec
aaa
mov
shr
adc
jae
adc
fadds
fsubs
stos
push
std
and
imul
rcrl
mov
cmp
xor
outsl
xor
pop
dec
pushf
lret
jg
adc
sti
lcall
jmp
xchg
iret
mov
xchg
fs
xchg
adc
test
xchg
arpl
pop
loopne
pop
jl
adc
push
cmpsb
mov
mov
outsb
jnp
vpextrw
lds
fmuls
dec
mov
mov
movsl
lock
cmpsb
insl
add
push
ss
imul
jo
in
mov
loope
icebp
sub
call
pop
adc
inc
sbb
out
imul
push
es
test
xchg
add
jp
fisttps
push
mov
cmpsb
sbb
mov
insl
imul
bound
dec
js
adc
push
iret
stos
push
mov
jecxz
inc
outsl
inc
sbbl
fisubrl
adc
in
sub
mov
into
dec
ret
stc
xchg
fwait
aam
push
loope
jae
out
out
mov
pop
mov
fcmovne
shl
and
hlt
ret
sbb
cmp
mov
dec
dec
push
or
rcr
fwait
pop
rcr
sub
movsl
out
movb
jo
xchg
mov
fdivs
bound
xor
ja
out
mov
out
fucom
dec
daa
lret
shll
into
inc
or
push
sub
jae
xor
out
outsl
sbb
loope
jno
xchg
iret
sbb
clc
mov
leave
loope
adc
sti
or
iret
xor
sbb
pushf
adc
mov
outsb
aaa
dec
xchg
adc
pop
mov
push
addb
iret
xchg
mov
fwait
test
mov
stos
xchg
jns
ret
pop
mov
mov
outsl
inc
jno
sub
adc
test
pop
stc
addr16
pop
jb
iret
mov
sahf
push
fucom
or
pop
lods
dec
pusha
ficoml
cli
cmc
call
dec
mull
lea
and
cmp
roll
push
cli
test
jmp
adc
subl
outsb
jp
sti
push
pop
out
pop
jbe
add
dec
in
sub
push
jmp
mov
mov
pop
scas
cvtps2pd
ret
lret
or
fucomip
mov
pop
push
fidivl
mov
shll
sbb
cmp
out
ds
lods
lcall
xor
pop
mov
cltd
cmp
int3
cmp
xchg
cmp
jns
aad
jl
in
push
inc
pop
xchg
ja
pop
mov
mov
add
ret
popl
xor
sub
xor
pushf
nop
push
ret
lods
lret
sbb
std
sub
icebp
mov
pop
adc
int
js
add
mov
fsts
icebp
int
lahf
sbb
mov
arpl
mov
inc
fisubs
movsb
fidivrl
dec
jne
jnp
mov
leave
stos
pop
imull
fucom
es
lods
and
push
daa
push
mov
lret
icebp
xchg
fcoml
xchg
shrl
sarb
pop
sub
cltd
push
and
js
sub
adc
inc
push
xchg
out
jge
cltd
dec
movsl
aaa
popl
jge
mov
stos
lret
cmp
aam
sbb
jmp
setle
or
dec
jnp
into
xlat
loope
iret
pop
dec
stos
push
pop
xor
sub
cmpsl
inc
fsubl
mov
fdivl
lds
sub
cmpl
cmp
adc
cpuid
lret
pop
ficoms
jle
push
jecxz
lahf
xor
or
xchg
jmp
add
sub
jle
xlat
jno
mov
xchg
add
lcall
fs
fmul
sub
jno
inc
mov
jp
mov
fmull
push
les
das
xchg
xchg
push
mov
mov
pop
mov
cld
jle
mov
fs
cmp
sbb
in
aam
fidivrl
sbb
xlat
inc
out
inc
sub
jb
movsl
mov
adc
fs
xor
sub
sub
xlat
mov
loope
dec
lods
ja
inc
adc
js
mov
lahf
cli
sti
mov
add
sti
rcrb
fimull
pop
test
std
cltd
jns
cmpb
into
inc
rcr
adc
jecxz
mov
xchg
cmp
psrad
je
inc
btc
xor
mov
cmp
or
outsl
sub
add
sbb
loopne
test
xor
jns
mov
nop
cld
testl
dec
in
into
in
xor
dec
xor
cmp
add
xchg
and
adc
cld
lret
mov
dec
pop
jnp
lods
xchg
jno
cmc
rcll
xchg
adc
test
and
xlat
imul
inc
mov
es
setno
leave
mov
push
xorl
lea
int3
mov
or
dec
jp
jle
dec
mov
inc
jle
lret
mov
xchg
in
rcrl
mov
or
mov
dec
add
jge
scas
cmp
xor
cli
and
gs
cmp
fldenv
stos
mov
mov
fmull
dec
mov
add
adc
push
aad
pop
sbb
out
lret
loope
mov
aad
vpmacssdql
or
and
pop
jle
mov
add
je
shr
cld
pop
mov
mov
and
sarl
mov
push
mov
sti
movsl
or
into
hlt
fwait
xor
daa
pop
les
rcl
push
cli
inc
enter
aas
mov
jbe
mov
and
push
cmp
add
and
ss
fisubrs
out
pop
push
jle
pop
xor
rcr
pop
scas
sbb
jns
sub
movsl
sbb
pop
ficomps
jbe
add
add
outsb
pusha
push
inc
mov
andl
sti
arpl
fsubl
stos
sub
mov
and
outsb
inc
enter
adc
stc
and
test
mov
ss
mov
xor
cmp
xorb
sbb
je
or
and
add
mov
sahf
outsl
jo
pop
mov
ja
push
repnz
decl
xchg
pop
sar
shll
pusha
jnp
and
lret
pop
push
and
incl
xor
rcr
mov
dec
xor
daa
cmp
ret
sbb
pop
in
mov
addl
idiv
into
push
aaa
fdivl
sti
inc
sub
jns
mov
inc
and
je
add
add
add
pop
add
jmp
add
add
pop
add
jge
add
add
push
add
add
add
imul
in
add
mov
add
add
add
or
in
in
iret
add
add
add
add
push
stos
stos
fwait
add
js
js
js
js
int3
int3
int3
int3
int3
int3
int3
int3
pop
add
lods
add
add
pop
add
and
add
add
mov
and
add
inc
add
adc
add
add
add
add
mov
add
add
add
or
add
add
add
add
add
add
add
add
add
add
sbb
pop
add
add
and
outsb
das
inc
dec
pop
cmpb
ja
dec
add
push
outsb
or
lcall
pop
in
dec
je
cld
jne
decl
les
mov
adc
lock
mov
adc
decl
pop
in
mov
add
jp
ret
dec
add
adc
sbb
add
incl
push
push
pop
repz
incl
stos
int3
rorb
mov
std
adc
loopne
cld
push
test
jne
add
sar
pop
pushl
mov
out
arpl
call
stos
push
add
lea
lods
loopne
add
dec
mov
mov
insb
cmp
add
jne
inc
adc
push
loopne
add
rolb
lods
add
pop
add
add
add
add
add
add
add
add
add
add
inc
jae
gs
inc
inc
int
inc
insl
je
gs
je
jo
sbb
outsb
jo
or
jb
add
gs
add
inc
sub
add
jb
addr16
gs
cmpl
push
imul
js
xor
add
add
adc
add
add
add
add
sub
push
insb
testl
xchg
mov
fdiv
mov
sub
fistpll
lcall
stc
xchg
mov
insb
fnstenv
out
pushf
psrad
add
and
sti
cld
xchg
xorb
xor
cmpsb
ja
pop
out
daa
jb
sbb
ljmp
inc
out
lods
inc
jp
jne
lahf
test
js
repnz
and
cmp
scas
jo
outsl
dec
scas
or
jo
arpl
or
fdivrs
push
dec
addb
xor
pop
xor
lret
std
push
xor
ljmp
es
mov
jne
ljmp
or
xchg
pop
push
int3
ljmp
loopne
idiv
push
sub
repnz
int
sbb
ret
mov
fisubl
lahf
sub
push
stos
mov
aaa
mov
dec
xor
shrl
sub
push
mov
inc
mov
mov
bound
pop
and
push
xor
int3
inc
stos
rcll
push
xchg
xchg
dec
xor
subb
push
sub
sahf
shrb
into
adc
pop
mov
add
or
inc
ljmp
adc
mov
scas
in
xor
push
sbbl
add
popf
int3
ja
sub
sub
enter
str
fs
xchg
mov
lahf
inc
iret
cmp
push
pop
cmp
scas
push
out
faddl
cmp
bound
cwtl
es
js
push
mov
add
jmp
idivl
addr16
adc
leave
or
jbe
inc
mov
cmpsb
pop
pop
jbe
aaa
mov
and
inc
or
icebp
fnstenv
gs
lds
xor
jo
clc
jmp
dec
jbe
jb
daa
push
cmp
das
xchg
pop
clc
je
mov
fidivrs
adc
movsb
mov
rorl
mov
mov
or
dec
adc
jae
push
sti
shll
ljmp
xchg
and
fsubr
sti
sub
insb
inc
pop
inc
enter
mov
xor
aad
cmc
repz
into
mov
mov
lock
lret
jo
loope
cmpsl
and
push
fcomps
push
in
sub
xchg
mov
mov
icebp
xchg
fists
fnstsw
or
cwtl
lret
push
lds
hlt
int
mov
test
and
inc
stc
sti
gs
leave
aaa
mov
in
enter
fmuls
add
loope
jl
adcb
popl
mov
or
jg
dec
lock
adc
out
out
ror
and
dec
les
inc
pop
ret
outsl
stos
inc
push
cmpsb
xchg
and
sahf
repnz
enter
in
sbb
and
xchg
and
add
test
loop
dec
sarb
cltd
xor
repz
in
shll
shrl
mov
xchg
push
jb
and
cmp
popf
or
into
adc
fldl
and
ss
jae
mov
jge
jl
aad
adc
shrb
aad
mov
add
lret
dec
mov
push
push
fisubs
xchg
ret
mov
sub
sbb
shl
push
sbb
add
repnz
add
adc
xchg
cld
data16
jb
lret
les
cli
inc
gs
cli
or
jmp
pop
mov
je
adc
dec
ret
test
repnz
jb
xchg
mov
push
adc
inc
sub
lds
lods
jb
xchg
push
pop
mov
xor
xchg
outsl
mov
gs
sub
mov
shll
pop
xorl
fisubrs
imul
inc
push
ljmp
hlt
mov
loopne
adc
jno
cmc
fdivr
sub
loopne
loopne
mov
pop
pop
jle
and
cltd
out
out
sub
push
sbb
ret
pop
lcall
es
or
mov
rcl
and
shrl
fadds
add
sti
or
in
inc
dec
xchg
fs
dec
enter
outsl
fwait
xchg
jnp
xchg
mov
mov
xor
mov
leave
dec
pop
xor
aas
shl
lret
insb
cmp
imul
mov
xchg
inc
scas
push
adc
dec
cwtl
inc
fwait
sbb
cmovne
sbb
cmp
add
xchg
sahf
jae
aas
mov
pop
xchg
test
lret
dec
lret
mov
lret
loopne
out
std
mov
fwait
dec
pop
mov
sub
mov
cmp
inc
push
lods
bound
loope
mov
dec
aad
or
insl
push
stc
mov
aaa
in
mov
dec
adc
or
imul
add
out
hlt
aas
das
fs
xor
xor
aam
dec
cmpsb
arpl
aad
test
inc
pop
gs
pop
mov
jg
sub
cmpsl
push
jle
ss
fisttps
adc
add
pop
dec
push
or
cmp
insb
push
cltd
fstpt
outsb
pop
or
adc
and
mov
scas
fistl
inc
jmp
add
cmpsb
sub
sub
mov
sti
or
mov
shrb
cmp
hlt
xorl
and
add
fdivrs
repnz
dec
pop
inc
repnz
xor
xor
in
add
out
jbe
pop
mov
out
sbbb
jne
aaa
mov
pop
mov
jecxz
xchg
xchg
cmpsl
inc
mov
ds
pop
dec
mov
or
inc
jns
xor
popf
in
inc
xchg
dec
mov
mov
sbbb
inc
lcall
nop
in
addl
and
imul
cmp
sbb
inc
jl
dec
xor
jne
lcall
inc
in
and
popf
mov
fdivrl
xchg
xlat
shrl
inc
rorb
push
xor
loop
jnp
or
std
test
adc
rol
out
adc
outsl
out
repz
xchg
inc
in
bound
dec
das
leave
xor
sarb
ficompl
inc
pop
lret
cmp
adcb
inc
xchg
negl
push
mov
out
int3
jl
xor
jb
repz
inc
clc
xor
or
stos
ds
rcl
pop
push
int
test
push
dec
imul
mov
cltd
lock
jne
es
das
sub
push
xchg
cmp
test
lock
dec
cmpsl
push
xor
pop
xor
cmpsl
in
ds
lock
scas
iret
fsubrl
mov
push
notb
sub
or
xchg
or
inc
adc
push
cmp
jge
addl
add
mov
mov
subb
xor
jge
mov
shll
or
mov
adc
ds
sahf
mov
sbb
popf
jg
xchg
cmp
daa
mov
aaa
cli
test
rcr
aam
inc
lea
es
cwtl
shll
addr16
xchg
add
pusha
pop
insl
mov
lods
out
test
int3
cs
lret
daa
into
loope
cmp
xorb
jbe
fsqrt
out
imul
popf
mov
pop
cmpsb
andl
in
jne
sub
xchg
cli
jnp
adc
adcl
rolb
les
sub
popf
and
xor
js
rcl
ss
mov
cld
fwait
xlat
cmp
mov
mov
mov
mov
cmc
add
push
sbb
xorb
mulb
outsl
push
outsb
mov
mov
fneni(8087
cmp
ret
aas
pusha
insb
inc
aas
aaa
jmp
aam
addl
ja
sub
iret
and
cld
rorb
rorb
mov
jmp
test
xorl
int3
les
gs
xor
les
movsl
dec
dec
inc
push
mov
in
xor
adc
push
sub
into
or
xlat
sbb
pop
loopne
push
shrl
adc
nop
add
jb
push
je
push
mov
test
mov
dec
lods
ds
push
aaa
stos
push
repnz
mov
arpl
imul
subl
imul
mov
pop
cwtl
cmp
pop
sub
add
or
mov
insb
jo
and
icebp
cmp
xchg
in
out
loope
dec
inc
imul
call
mov
push
repz
add
inc
mov
sbb
jno
cmpsl
mov
dec
lods
loop
jmp
ffreep
inc
and
pop
jl
adc
rcrb
insl
or
movsl
fsubp
in
std
ja
loop
add
xor
xorb
insb
imul
test
out
xor
lcall
mov
adc
xchg
add
or
push
cmc
imul
adc
out
cmc
sub
stc
jo
pop
fwait
fs
cmc
sbb
hlt
pushf
std
and
jns
sarl
xor
mov
stos
js
hlt
lods
or
or
xchg
jae
icebp
int3
popf
push
loopne
xchg
stos
rcll
push
or
lcall
jae
push
arpl
push
pop
jle
cld
repz
mov
rcrl
xor
adc
mov
out
fwait
insl
pop
xor
jns
sub
pusha
or
loop
push
xor
add
inc
cmpsb
scas
fiadds
rorb
aam
sar
addr16
pop
add
fnstcw
iret
sub
add
bound
xor
xlat
repz
das
add
sub
int3
xlat
adc
stc
fnsave
sub
xchg
ljmp
mov
in
jns
add
push
jb
lret
aas
or
inc
outsl
cmp
out
push
sbbb
pop
jb
mov
sbb
mov
in
pop
push
orl
add
fsts
int3
mov
sub
jmp
js
loopne
stos
cmp
outsb
pusha
testl
or
les
mul
push
jmp
mov
ds
jmp
icebp
mov
cmc
mov
loope
icebp
xchg
mov
jp
pop
test
xchg
mov
push
cmp
pop
icebp
push
pop
fidivrl
lock
inc
in
fcomps
fbstp
sti
fdivs
xor
imul
fidivl
lods
inc
push
mov
add
xchg
xor
and
int
dec
adc
sbb
pop
test
js
movsl
repz
sbb
pop
aad
cmp
arpl
lahf
mov
aas
dec
mov
sti
lods
mov
sbb
lods
xor
add
xchg
scas
lret
or
movsl
cmp
lret
cltd
inc
push
or
lock
adc
add
or
xlat
mov
enter
xor
fidivrl
aas
arpl
push
xor
inc
or
cld
pop
mov
pop
and
cmp
dec
dec
jge
mov
out
push
xor
in
fwait
mov
shlb
push
pusha
shl
xchg
lods
mov
mov
or
in
fildll
test
into
jmp
jg
pop
inc
adc
mov
loop
inc
cli
test
je
mov
negl
stc
movsl
out
loop
inc
cld
push
and
mov
pop
jbe
xor
sub
xchg
fdivrs
in
push
mov
insl
jns
and
popa
mov
scas
push
mov
repz
enter
enter
divb
mov
stos
inc
je
das
sbb
mov
fnstcw
sub
pop
daa
stos
cvtps2pd
inc
mov
jg
inc
xor
out
bound
sbb
inc
and
mov
scas
sbb
mov
xchg
inc
dec
mov
dec
pop
jnp
nop
sbb
sar
je
and
or
rcrb
aas
cmp
mov
lods
sbb
clc
roll
lods
dec
sbb
dec
cmpl
out
leave
mov
je
jp
stos
dec
push
sub
pop
aaa
ljmp
shlb
or
or
or
aad
rorb
scas
je
dec
fnsave
xchg
daa
sub
mov
dec
mov
jecxz
sub
push
push
and
add
sub
imul
jp
fwait
or
dec
cmp
jge
je
ss
iret
xor
lahf
adc
mov
ss
stc
and
insb
scas
add
push
xor
lods
clc
lds
scas
ret
clc
pop
mov
add
add
mov
out
popa
xorl
dec
cmp
orb
cmp
out
sub
jne
xchg
insb
pop
jnp
and
imul
jmp
xor
mov
cmpsl
test
mov
sbb
jno
mov
gs
dec
or
mov
sbb
repnz
pop
inc
sbb
daa
icebp
xor
out
movsl
mov
jno
pop
lcall
addb
dec
cmp
mov
iret
cmpsl
pusha
jnp
pop
aam
push
lock
scas
stc
int
add
mov
mov
or
cmpsl
dec
jl
inc
sub
aaa
push
shrb
xchg
lods
xor
sbb
mov
loope
inc
mov
scas
sbb
xor
mov
hlt
mov
rcrb
sbb
push
stos
int3
mulb
ret
int
js
cmp
loope
int
or
cli
ljmp
sub
xor
lds
arpl
idiv
enter
rcrl
les
jecxz
mov
enter
out
adc
lods
test
push
sahf
xchg
lods
mov
mov
and
std
push
push
ret
dec
mov
ss
scas
jp
outsb
or
popf
and
gs
xor
fwait
push
nop
pop
jb
push
inc
pop
shrb
fldt
adc
cmp
dec
jno
js
ret
test
xchg
sarl
popf
into
imul
inc
pushf
push
xor
xor
leave
inc
insl
sbb
lods
call
outsl
sbb
sbb
xchg
xor
pop
mov
mov
sbb
mov
fcompl
test
cs
imul
decl
dec
ds
cwtl
lret
ss
das
push
mov
cli
out
ror
out
and
pushf
out
fcmovnb
pop
dec
mov
stos
xorb
xchg
mov
popf
insb
out
mov
lock
and
inc
ja
out
sbb
movsb
dec
sti
lahf
repnz
mov
rorb
dec
sti
lds
fwait
sahf
cs
leave
push
testb
ljmp
out
sbb
lcall
mov
pop
out
pop
pop
test
adc
scas
push
stc
popa
ja
loop
mov
loope
xchg
aam
mov
iret
mov
inc
mov
push
mov
dec
enter
testb
insl
xchg
pop
cs
push
cmp
movsb
pop
icebp
mov
add
stc
push
inc
outsb
loope
iret
sub
pop
imul
aaa
mov
sbb
jmp
stos
xlat
mov
das
frstor
mov
cmp
mov
lds
push
jp
lret
test
scas
mov
insb
lods
mov
adcl
clc
rorb
and
inc
roll
and
push
pop
dec
pushl
enter
pop
xor
xor
repnz
outsb
loopne
jno
fsts
mov
lds
mov
and
iret
dec
add
in
outsl
enter
dec
or
mov
int
pop
aaa
sbb
and
xor
mov
fcoms
cmc
mov
stos
or
xor
jne
scas
lea
repnz
mov
xchg
notl
and
and
dec
pop
outsb
lahf
pop
pushf
movb
xor
jmp
ds
pusha
adc
sub
jne
lcall
into
cmpl
clc
or
mov
or
test
cmp
insb
fcompl
and
clc
repz
lret
sub
insb
xchg
iret
std
or
mov
xlat
lret
add
daa
lods
push
and
jbe
fdiv
adc
pop
cmp
movsl
lcall
and
cmpsb
mov
pop
hlt
mov
iret
cmp
mov
enter
outsb
jp
sub
sub
adc
mov
xchg
out
inc
or
into
xor
js
insl
rcll
push
add
ja
add
inc
lret
lcall
stos
repnz
imul
leave
out
insl
ret
cltd
pushf
adc
xchg
mov
pop
sub
push
sbb
xchg
movsl
mov
jecxz
out
xchg
pop
clc
pop
test
xchg
ret
xlat
pop
mov
mov
xacquire
data16
inc
xor
aad
bound
jb
test
xchg
mov
rorl
jle
loopne
inc
aad
mov
ds
outsb
lods
sub
mov
xor
sub
and
or
sub
push
popl
leave
loope
mov
nop
nop
dec
push
jne
mov
out
int
push
inc
mov
push
sbb
xorb
fnstenv
dec
jmp
rorb
nop
or
push
ss
sub
popl
ja
push
popf
sub
mov
adc
out
enter
iret
xchg
lahf
mov
pop
inc
sub
fmuls
shr
dec
add
mov
call
out
ja
mov
xor
hlt
iret
jl
stc
jge
movsb
arpl
mov
jno
push
jge
xor
add
mov
mov
test
fsubl
scas
xor
jnp
mov
stc
ficomps
nop
adc
insb
xchg
sahf
les
fsubl
data16
arpl
jle
push
sub
pop
fs
push
daa
mov
pop
jmp
lahf
mov
aaa
orb
scas
pop
jae
lcall
ret
inc
imul
pop
mov
add
jg
out
xor
imul
repnz
jne
imul
jge
clc
xchg
jge
aad
or
aaa
mov
add
mov
jae
ja
push
cmp
int
mov
push
mov
pop
repz
sbb
sub
nop
in
shrl
and
push
jb
clc
aaa
pop
add
scas
je
cli
fiadds
fisubl
inc
rclb
lcall
push
fs
or
aad
dec
stos
imul
adcl
adc
xchg
and
mov
ficomps
stc
and
mov
add
sub
scas
add
add
add
inc
in
repz
arpl
adc
add
add
add
add
add
xor
xor
xor
add
add
add
add
stos
stos
add
dec
int3
int3
int3
int3
int3
int3
int3
int3
add
add
add
add
lods
and
outsb
dec
or
add
or
adc
add
add
add
adc
add
add
add
add
add
add
shlb
add
roll
add
add
add
add
add
add
add
add
mov
jne
mov
inc
outsl
outsb
jne
outsb
add
push
imul
lods
mov
or
iret
mov
add
push
inc
jmp
out
push
cld
add
dec
pop
mov
mov
cld
decl
std
mov
addb
push
test
push
push
add
xchg
pop
jne
mov
add
pop
push
rolb
rolb
incb
add
push
add
push
add
daa
and
decl
inc
push
call
incl
cmp
loope
call
pop
and
cld
adcl
call
inc
jge
push
stos
decl
std
ud0
ret
lret
ret
mov
cmp
lea
lock
adc
lea
sbb
add
add
add
popa
add
add
sbb
imul
add
add
add
add
icebp
pop
add
add
je
imul
jb
and
imul
add
push
arpl
xchg
insl
gs
add
insb
add
js
push
insb
les
popa
add
add
outsl
insb
insb
jne
gs
xor
popa
insb
jne
add
addl
add
add
adc
add
add
add
add
add
add
add
repnz
and
adc
cmp
int
sub
fcmove
mov
cwtl
pushf
fdivrs
pushf
xchg
test
sub
test
mov
test
jmp
mov
popa
test
aas
mov
push
fs
dec
dec
lods
pop
out
add
jge
sbb
testb
jmp
jb
test
sub
dec
cld
fsubrs
fidivl
sar
enter
mov
mov
sub
test
mov
cli
lds
stos
addr16
lret
mov
jb
mov
mov
rclb
and
inc
push
in
xorb
cmpsb
fstpl
lcall
js
or
push
pop
xor
and
inc
in
mov
testb
test
ljmp
insb
sarb
in
orb
xchg
or
scas
out
cwtl
jp
mov
xor
in
arpl
cmpsl
test
js
mov
sbb
popf
test
cld
dec
cmp
pop
test
cmp
mov
inc
sub
filds
pushf
mov
push
cltd
dec
in
cmp
cmpsb
movsb
lahf
loopne
cmp
inc
jb
xchg
int
inc
lods
aas
mov
rorb
xchg
inc
add
dec
clc
push
gs
dec
lret
push
push
sub
fsubl
pop
jle
stos
out
add
cltd
push
or
stc
pushf
pushf
rcr
lods
jo
out
inc
xor
inc
add
jne
imul
shrl
sub
aas
jmp
test
sbb
incl
xlat
loope
rcr
in
adc
add
sub
xchg
lock
insb
arpl
mov
mov
xor
xchg
jns
and
cmp
xchg
cmp
clc
es
sub
clc
mov
sbb
mov
add
push
test
adc
daa
jle
push
jb
jl
rorb
insl
inc
stc
js
shlb
cmp
push
adc
les
stc
sbb
lds
lahf
cmpsl
mov
xchg
cmp
sbb
int
mov
jne
mov
out
adc
call
adc
rol
pop
test
or
movsl
pop
scas
pop
cli
xor
xchg
js
fstp
dec
lds
test
cmp
aas
push
sub
xchg
pop
lcall
popa
stos
fwait
sub
cwtl
dec
jge
mov
jns,pn
sub
ds
out
lods
push
and
push
jnp
out
adcb
or
jo
movsb
dec
cmp
xor
movsb
int3
addr16
loopne
inc
call
jae
mov
sbb
aam
inc
in
cmpsb
lock
lods
cld
mov
sbb
addr16
icebp
mov
fsubs
mov
daa
or
orl
sbb
out
push
jae
mov
inc
lcall
xchg
sti
leave
cmp
mov
int
xorl
ss
fs
loop
pop
sbb
sbb
lcall
xor
xor
aad
out
movsl
imul
pop
push
mov
push
jne
xor
dec
mov
popa
out
out
xchg
nop
das
xchg
cmp
cld
dec
add
dec
dec
stos
push
dec
cmpsb
push
dec
pop
push
shl
adc
fistpll
xchg
loope
mov
push
ds
fwait
lods
mov
scas
incb
movsb
lods
dec
jl
imul
lock
xchg
je
mov
dec
and
out
jmp
inc
loope
mov
popf
roll
fbstp
cwtl
leave
adc
pusha
jp
aas
out
lcall
out
test
mov
shr
or
push
add
cltd
cmpsl
xchg
cmpsb
xchg
lock
sub
jg
cmpsb
call
mov
mov
xor
repz
stos
test
jge
sub
dec
scas
movsl
test
popa
jmp
jb
mov
loop
icebp
adc
push
pop
data16
ja
addl
mov
clc
add
shl
xlat
fistpl
mov
ss
icebp
je
in
mov
inc
mov
arpl
sub
add
ret
sti
add
adc
test
mov
jnp
fwait
mov
lcall
sbb
push
gs
xor
test
dec
push
pop
ds
pop
scas
insb
adc
ret
push
xchg
add
lea
mov
test
scas
sbb
xchg
mov
xchg
sbb
bound
and
lret
sbb
repnz
dec
sub
lods
mov
xorl
jmp
jecxz
add
sub
stos
jg
jno
mov
test
lahf
popf
jo
xor
xchg
icebp
mov
and
mov
loopne
xor
and
or
in
es
sub
and
jbe
test
xchg
and
out
xchg
movsl
rclb
ficompl
and
into
sbb
popf
jae
mov
or
adc
jne
pop
xor
iret
pushf
fmuls
xor
push
arpl
sbb
cltd
in
mov
stc
push
mov
in
push
jns
fstpl
aas
shrl
lret
call
mov
xlat
insl
test
andl
xchg
sub
sub
mov
sahf
or
sahf
fdivrl
cmp
cwtl
push
test
ljmp
lahf
ret
test
rorl
subb
shlb
ljmp
or
add
shr
mov
adc
mov
shlb
xchg
mov
daa
test
mov
lods
mov
sarl
xor
jge
test
rcll
iret
cli
sbb
in
xor
adc
rcrl
ja
stc
jbe
mov
sti
jae
jo
inc
jge
jmp
loope
xchg
mov
mov
xchg
inc
xchg
sbb
xchg
xor
nop
loop
sbb
jns
lea
sub
clc
call
rcrl
orl
add
dec
in
fcoml
sarb
jmp
adcl
lar
negb
outsl
sub
outsb
shlb
push
push
mov
mov
jo
shll
cmp
out
sbb
pushf
xchg
adc
xchg
rcl
scas
xor
jmp
sbb
xchg
mov
cmp
mov
adc
movmskps
mov
in
xchg
cmp
xchg
comiss
lds
sti
lods
loope
sub
or
push
bound
lock
inc
jne,pt
xor
popa
jmp
test
adc
lcall
mov
xor
addr16
jnp
cmp
jno
pop
cwtl
jmp
les
pop
fiaddl
xor
in
shl
or
mov
add
jge
push
fisubl
mov
cltd
incb
arpl
adc
lret
fs
fs
adc
push
popa
in
fsts
cmp
std
mov
push
mov
es
jmp
ficompl
cli
mov
adc
scas
sbb
xor
add
adc
dec
lret
icebp
jp
jle
in
push
daa
xor
or
mov
rorb
into
test
and
repnz
sub
dec
mov
dec
adc
cmp
lods
push
and
insb
push
push
arpl
out
adc
or
inc
fdivrl
mov
jno
xor
scas
mov
aas
idiv
push
and
test
dec
push
stos
sbb
pushf
bound
icebp
addr16
dec
sti
sub
inc
pop
jno
jmp
loopne
adc
cs
bnd
sbb
mov
cmpsb
dec
mov
std
cmp
xlat
scas
mov
hlt
std
adc
into
int3
notl
insl
scas
movsl
push
cmpsl
aaa
sub
dec
and
test
scas
xlat
mov
sbb
inc
mov
ss
jge
iret
arpl
fisubrs
mov
mov
pusha
pop
roll
lret
pop
stc
sub
pushf
sbb
nop
sbb
mov
cmc
and
mov
in
decl
aaa
fwait
out
xchg
jnp
addr16
ds
xchg
cmpsb
mov
cmp
in
ss
pmaxsw
frstor
jmp
or
mov
cli
subb
and
int
arpl
mov
and
test
cmc
add
add
mov
jne
cmp
adc
cmc
pushf
imul
add
add
xor
mov
ljmp
cld
add
adc
or
push
les
jbe,pt
cmp
xchg
leave
xor
mov
mov
daa
and
in
jnp
mov
mov
imul
aad
movsl
jnp
dec
pusha
rol
imul
adc
push
data16
cltd
xchg
addr16
dec
jge
add
adc
add
mov
lcall
lods
cmpl
cmp
movsl
shll
add
hlt
fists
lods
mov
sub
in
lods
das
dec
movsl
jg
stc
popa
add
xlat
mov
dec
shr
repz
pop
cltd
push
rclb
and
out
movsb
xchg
jae
sbb
int
xchg
and
mov
test
mov
cmp
jo
cmp
pop
pop
rolb
push
loop
sbb
jo
xchg
ds
sub
lret
pop
dec
lods
nop
stos
shl
pop
and
loop
out
push
lahf
dec
ret
and
cltd
pop
mov
sbb
lahf
lcall
fcomi
inc
popa
mov
aaa
sub
sti
jae
and
and
dec
lods
aas
das
push
lods
jae
mov
lret
insl
hlt
es
dec
das
and
pop
es
inc
jp
dec
xchg
into
push
outsb
test
push
insl
jb
pushf
mov
adc
push
fmull
jo
sub
in
jno
icebp
mov
push
adc
push
or
rcll
sbb
pop
jnp
add
not
out
dec
mov
inc
and
inc
ret
out
adc
inc
hlt
jno
push
ss
addr16
push
xchg
fdivrs
jne
out
jo
dec
mov
jae
add
outsb
sar
rclb
sub
adc
push
ret
and
push
and
cmp
adc
or
cmp
dec
es
out
push
mov
fists
xchg
fucomip
adc
add
enter
mov
inc
dec
add
xchg
mov
mov
jl
lahf
mov
inc
shl
stc
test
imul
inc
inc
aam
subb
and
movsl
jmp
or
inc
push
or
jle
xchg
mov
lret
scas
push
stos
je
jg
jns
pop
add
mov
lods
pusha
adc
dec
dec
adc
mov
lahf
or
dec
jns
stos
clc
pop
enter
outsl
pop
imul
push
pop
add
jo
decl
scas
inc
xlat
pop
push
or
sbb
sub
and
or
mov
adc
xchg
movsl
sub
mov
adc
test
jge
mov
gs
inc
in
jge
in
pop
es
test
rol
cs
cli
cmp
add
add
jle
inc
ljmp
ret
mov
or
inc
outsl
mull
lock
int
int3
loopne
mov
fldl
add
xchg
cltd
push
mov
mov
ja
jno
add
imul
mov
xchg
jnp
cld
jo
add
mov
sub
mov
inc
movd
jo
and
add
mov
dec
jl
shll
cmpsl
je
sarl
xor
or
mov
push
xor
pop
and
or
js
das
sahf
push
fimull
adc
adc
lret
and
fs
and
xor
adc
in
and
cmp
jnp
out
bound
popf
ja
jno
je
dec
pop
hlt
inc
or
dec
leave
lret
pop
cmc
mov
cmp
test
scas
adc
xchg
cmp
jno
loope
mov
stos
fcmovb
sub
rcll
jg
push
cmpsb
sub
leave
sbbb
pushf
insl
clc
lahf
sub
sbb
repz
push
pop
loopne
adcl
insl
or
mov
decl
adc
fs
dec
xor
xchg
or
jle
es
scas
loopne
push
lret
jne
inc
out
arpl
xlat
arpl
pop
push
jnp
in
sbb
mov
xchg
xor
fcoml
out
insl
mov
jecxz
xchg
sub
xchg
sti
adc
push
outsl
add
movsl
push
pop
xchg
dec
out
dec
fisubs
lret
lahf
loopne
pushf
or
out
xchg
dec
movsl
cwtl
inc
data16
add
add
jns
popa
aas
fcmovu
adc
push
stc
push
mov
xor
mov
pop
icebp
push
mov
fwait
pop
mov
jns
or
imul
scas
outsl
nop
outsl
popf
cltd
jb
adc
add
inc
mov
ficoml
aaa
cmp
ds
dec
into
mov
gs
cmpsb
ljmp
mov
sbb
mov
mov
or
mov
jae
and
int3
repnz
or
stos
jnp
push
sbb
ss
fisubrl
mov
mov
jle
cmpsb
cld
inc
popa
cmp
push
loop
add
pop
js
pushf
repnz
popa
enter
add
mov
mov
aam
fcos
and
push
mov
pop
pop
mov
mov
into
dec
dec
fnstcw
popf
xor
jb
xchg
inc
cmp
add
ret
shl
sahf
movsb
notb
and
gs
xor
jmp
xor
jp
cli
inc
and
or
or
xor
jg
xlat
or
xor
and
mov
stc
int3
xchg
jnp
stos
sub
test
xor
sub
cs
push
xchg
loopne
adc
mov
mov
les
mov
dec
cmpsl
lds
and
inc
adc
arpl
clc
loopne
imul
sub
imul
mov
int
popa
dec
pop
mov
jmp
cmp
cmpsb
mov
pop
sbb
add
xor
mov
fsubrl
jbe
push
hlt
push
je
adc
out
xor
pop
lods
jp
gs
aam
es
sub
test
or
outsb
mov
in
lds
rcrb
mov
es
jbe
sbb
sar
rorl
es
movsl
jp
mov
pop
out
mov
pop
xchg
out
fwait
inc
and
stos
mov
addr16
fcomps
push
jno
test
mov
xchg
dec
cmpsl
nop
adc
or
testb
rolb
cmc
adc
insl
aam
scas
mov
cmp
orl
addr16
outsl
cmc
push
xchg
testb
pop
xlat
inc
xor
popf
xchg
lock
jno
jno
fimuls
inc
inc
mov
mov
xor
and
push
push
sbb
dec
xchg
test
cli
pop
xor
out
sti
add
jecxz
sub
inc
sarb
pop
dec
mov
xchg
jge,pn
inc
xor
pushf
mov
jbe
cmp
mov
in
fs
pop
mov
dec
into
mov
and
cmpsb
int3
imul
and
sarl
mov
pop
call
in
jp
gs
xlat
mov
pushf
sbb
push
loopne
setno
mov
sub
cmp
lods
cmp
ljmp
clc
pushf
scas
fidivs
mov
cli
jge
mov
iret
dec
ja
add
mov
xchg
test
lds
push
dec
mov
push
xchg
pop
imul
sub
mov
test
xor
dec
cmp
xchg
mov
rolb
sub
cli
mov
mov
push
adc
sub
sub
insb
mov
or
out
xor
lods
repnz
ret
cmp
pop
mov
push
sbb
mov
les
jnp
xor
cltd
jle
mov
data16
mov
or
mov
cmp
add
pop
ficoms
and
bnd
bound
adc
or
and
andl
xor
out
inc
sub
clc
test
popa
pusha
aam
shrb
std
xlat
test
hlt
sub
lcall
fcoms
dec
scas
push
mov
cmpsl
in
sbb
leave
andl
sbb
jb
hlt
add
fwait
pop
orl
sub
cs
xor
ret
rcll
push
xchg
aad
sub
shufps
mov
insb
cmp
cltd
add
cwtl
add
imul
movsl
ja
icebp
xchg
int
fnstsw
jne
lods
int3
loope
insb
push
push
dec
repz
mov
adc
push
imul
adcl
fmuls
mov
in
ret
mov
mov
fisubl
cmpsb
pop
scas
xchg
inc
jg
push
gs
repz
das
push
insl
add
push
lahf
cmpsb
jp
mov
imul
arpl
dec
jo
clc
enter
cmp
in
mov
sbb
inc
dec
sub
jne
imul
inc
xor
iret
sbb
xchg
out
jae
jl
add
cmp
mov
cmpl
add
mov
in
fmul
mov
icebp
rcll
test
add
out
jecxz
cltd
testb
repnz
and
xor
aas
cmc
add
imulb
xor
test
or
or
jb
cs
sbb
cmp
pop
rclb
dec
stc
hlt
sbb
dec
sbb
push
dec
das
adc
xchg
mov
out
mov
xor
fcmovb
scas
xor
xor
or
xchg
fs
pop
sub
mov
and
shll
xor
push
addr16
jno
pop
cmpsb
push
mov
inc
rorl
fs
jmp
in
jae
lods
out
jmp
cmp
movsl
hlt
push
push
popf
stc
cmp
jmp
lds
iret
mov
inc
nop
or
out
mov
les
iret
jecxz
sub
pop
dec
jp
sbb
add
jl
rolb
jp
test
xlat
sub
jae
mov
in
sahf
aas
fiadds
add
add
mov
add
mov
add
add
add
add
inc
add
addl
add
add
add
add
addb
add
add
bound
add
add
add
add
add
add
repnz
jno
add
add
add
add
mov
mov
jo
int3
int3
int3
int3
int3
int3
int3
int3
int3
add
add
add
test
outsb
jb
or
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
jmp
pop
pop
jo
add
push
outsl
fs
gs
add
inc
outsl
je
fs
push
movb
roll
jecxz
sbb
orl
mov
leave
orl
mov
incl
mov
xlat
cmc
push
rclb
add
cld
call
inc
insb
sbb
mov
sar
cmp
mov
add
add
add
adc
leave
add
incl
add
push
int
push
mov
add
call
push
mov
imul
incl
sbb
dec
push
push
sbb
lock
enter
add
push
call
add
jne
lret
add
repz
or
inc
loopne
add
push
hlt
add
sbb
add
test
add
add
add
add
add
add
add
sbb
sbb
add
insl
shll
je
jae
scas
push
dec
add
insb
insb
imul
gs
es
outsl
inc
popa
dec
outsl
add
insb
add
add
xor
inc
gs
add
insb
add
outsl
jbe
outsb
cld
adc
je
je
je
insb
or
mov
add
hlt
add
das
adc
mov
xlat
gs
xor
ja
in
pop
shlb
cmc
icebp
dec
add
push
xchg
jp
fildl
test
daa
scas
hlt
std
cmpsb
jne
jg
aad
jmp
loopne
insl
xchg
lret
aas
inc
ljmp
jl
sbb
ljmp
ret
or
sbb
stos
lods
mov
push
adc
mov
adc
push
mov
outsb
lds
fchs
outsb
out
dec
andb
cmp
push
sbb
mov
add
outsl
repnz
jecxz
sub
sarb
inc
lea
and
pop
xor
xchg
pop
jne
or
jne
adcb
mov
adc
mov
das
add
lret
outsl
and
lods
into
in
pop
das
movsb
das
push
push
mov
jns
push
imul
rcrb
mov
push
dec
xchg
cli
xor
out
outsb
addr16
filds
add
jo
imul
mov
stc
add
xor
push
xor
test
dec
sbbl
jnp
jle
in
lods
lds
xchg
icebp
jb
pop
xor
xchg
cmpsl
pop
out
and
daa
or
push
mov
pusha
lock
fsubr
dec
xor
mov
testb
enter
inc
hlt
jae
xor
mov
jae
shr
or
jnp
outsl
jne
rorl
andb
adc
frstor
sarl
push
int3
cmpb
mov
push
in
fiadds
sub
inc
enter
xor
mov
adc
push
sub
pop
loope
cltd
xchg
mov
sahf
cmc
dec
rclb
jge
aad
jp
dec
bound
cmp
jbe
mov
flds
xchg
xor
fildl
mov
pop
push
adc
push
pop
xor
push
cmp
jnp
and
mov
dec
fnstcw
cs
cmpsl
popaw
xchg
aam
call
loopne
xor
daa
stos
int3
sbb
add
ret
push
sub
cmc
cmpsl
leave
jl
add
enter
mov
pop
ror
cmp
sub
and
mov
xor
pop
std
cltd
and
or
jne
inc
xchg
in
int3
mov
movnti
and
shll
xor
scas
lods
int3
xor
xchg
inc
ror
lea
test
pop
leave
pusha
fsubs
add
mov
mov
cwtl
in
adc
dec
sub
lods
arpl
adc
push
mov
inc
sti
shlb
push
push
fwait
in
or
mov
or
sahf
es
aas
or
xchg
push
mov
cmp
inc
mov
and
iret
inc
ja
mov
add
mov
xchg
mov
mov
xchg
ficoms
jge
cli
ds
push
adc
ficoml
or
mov
mov
fs
shlb
xor
mov
bound
fistl
and
mov
adc
push
cwtl
adc
jge
adc
dec
dec
fwait
stos
mov
repz
mov
push
call
test
mov
sbb
mov
pop
cmpsb
or
stc
adc
cmpsb
push
jmp
icebp
mov
xchg
fs
loopne
pop
mov
lret
pop
adc
ds
insl
iret
es
test
sbb
test
cmp
xchg
cmc
sti
sarl
inc
aam
adc
movl
mov
arpl
push
cld
fdivr
lret
in
inc
push
jo
mov
shl
jbe
rorl
cmpb
lods
adc
loope
ret
jp
push
and
xchg
lock
nop
or
and
test
pop
ljmp
ds
adc
cmpsb
jge
cli
test
shlb
xor
inc
jge
xor
mov
cwtl
aam
es
mov
cmp
push
cmp
out
mov
lret
lods
push
or
sbb
and
mov
mov
inc
cmpl
jmp
pushf
lcall
js
push
shrl
sbb
scas
cmp
cltd
adc
xchg
dec
inc
pop
inc
cmp
insl
cmc
cmpsl
cmpsl
rolb
imul
out
popf
adc
xchg
push
jp
mov
je
in
lea
or
popa
jle
bound
push
sbb
test
lahf
mov
add
popf
push
cs
dec
cmp
jne
nop
mov
stc
xor
scas
pop
mov
inc
mov
fsubrl
xor
push
jbe
inc
add
jmp
xorb
sub
arpl
and
jmp
xor
or
incb
sahf
and
inc
fwait
sbb
xchg
jmp
adc
dec
xorb
pop
adc
lret
icebp
or
loop
mov
loopne
cmp
out
popa
scas
xchg
rclb
jl
shrb
push
push
inc
or
mov
jo
sbb
ss
icebp
add
in
inc
out
pop
mov
sbb
movb
shrl
ja
fnsave
sub
mov
lea
sbb
inc
leave
iret
sbb
sub
xorb
cwtl
lea
mov
je
es
mov
imul
jge
imul
clc
out
push
sbb
push
mov
movsl
das
jg
xchg
ret
push
movsl
xchg
xor
in
jbe
adc
push
dec
mov
out
fcmove
js
pop
dec
and
loope
int3
repnz
inc
inc
xchg
stos
jns
sub
sub
xchg
push
xor
pop
stc
xchg
mov
scas
dec
sub
cltd
imul
mov
xor
dec
push
xcrypt-cfb
cmpsl
jecxz
arpl
jne
jno
xor
pop
sub
xor
xchg
cmpsb
inc
fucomi
or
mov
dec
jmpw
jb
pop
ret
jbe
dec
fdivp
pusha
cmpsb
aas
push
lahf
fdivp
jbe
add
loope
notl
dec
and
pop
lahf
dec
sub
call
xchg
inc
pop
mov
aad
fdivrs
ror
push
sti
cli
jne
test
mov
dec
pusha
fs
fadds
ds
mov
les
and
das
mov
jp
sub
je
dec
and
aam
inc
movsb
xchg
fs
arpl
sbb
pusha
nop
pop
enter
sarb
bound
js
jge
push
mov
cmpsb
scas
jmp
jmp
scas
mov
xor
sub
das
or
jmp
sbb
enter
rcl
push
dec
incb
cmc
xchg
dec
sbb
out
lcall
pop
xor
mov
insb
adc
outsb
jb
testl
mov
popf
jbe
inc
and
dec
mov
push
pop
js
movsb
push
add
pop
mov
std
xor
pop
repz
xchg
addr16
into
pop
jmp
jns
ret
mov
cmp
jns
test
inc
call
mov
movsb
mov
adc
in
cmp
adc
xchg
xor
push
xor
mov
inc
iret
xchg
mov
out
or
pop
sti
inc
push
jmp
push
mov
je
xchg
lret
sub
sahf
fdivs
popa
jmp
sbb
fsubs
cmp
std
jb
mov
xor
cmp
repz
imul
scas
xor
or
inc
mov
pop
pop
call
pop
test
cmp
clc
pop
ret
stos
mov
pop
mov
sarl
call
mov
in
sbb
icebp
cmpsb
push
dec
int3
push
out
jle
push
int3
dec
jmp
in
xchg
jecxz
stos
sti
jo
cmp
test
xchg
outsb
fwait
add
shr
push
mov
sub
int
fbstp
jne
lret
push
cmpsb
sub
jl
ficoms
mov
xchg
push
leave
mov
push
fs
mov
dec
mov
es
dec
push
cmc
mov
mov
mov
cmp
xchg
inc
sarb
scas
mov
push
hlt
popf
jmp
mov
pushf
pop
xchg
add
jmp
test
jo
lea
loop
jno
loop
pop
mov
push
leave
mov
iret
lds
fnsave
add
sbb
jae
mov
jbe
mov
or
outsb
jge
call
pcmpgtw
pop
cmp
xorb
pop
mov
push
pop
bound
sub
and
push
outsb
xchg
mov
pop
jno
std
adc
cmp
pop
bound
jbe
jae
stc
inc
das
iret
jnp
pop
fisubrl
rorb
add
loop
cmp
lcall
xlat
pop
mov
loopne
pusha
test
lea
sbb
jg
xchg
xchg
push
mov
xchg
xor
xchg
mov
data16
jmp
sub
fidivs
xor
movsl
mov
mov
sbb
ret
dec
mov
dec
std
fwait
cmpsb
mov
sbb
sub
add
aas
sti
rcl
xor
jg
movsl
out
cmp
mov
jns
int3
sarl
fwait
sub
and
jp
inc
insb
sbb
push
xor
mov
xchg
pop
stos
cli
dec
stos
dec
dec
movsb
and
mov
stos
jg
sbb
loope
in
mov
test
out
int
mull
sub
xchg
shll
into
enter
rolb
in
dec
adc
mov
test
push
mov
js
aad
lret
jmp
jp
mov
jg
lock
imul
in
push
jmp
repnz
rcr
mov
mov
cwtl
clc
jmp
out
test
and
dec
dec
je
sub
imul
or
pushf
cmp
sub
in
repz
or
testl
lea
add
daa
popa
mov
xchg
movsb
mov
int3
push
popl
lret
push
push
mov
int
xlat
inc
push
lcall
sbb
test
inc
stc
jnp
cmpsb
mul
dec
mov
clc
sub
outsl
pop
test
in
mov
cli
das
sbb
stos
adc
es
xchg
inc
sub
adc
sti
pop
pop
jne
out
inc
std
pop
out
push
adc
movsb
ljmp
test
cli
push
adc
daa
mov
mov
adc
sbb
push
popa
pop
xchg
lods
cltd
or
add
pop
data16
jae
add
dec
adc
pop
lds
or
mov
imul
adc
push
add
sub
mov
aaa
xor
arpl
gs
cmpsl
jle
push
ret
sbb
push
rcrl
jb
icebp
xlat
or
cltd
inc
decl
sub
nop
jle
cmpsb
push
into
add
aaa
cs
addr16
test
jbe
fcompl
pop
packssdw
sub
jns
pop
inc
mov
lea
call
arpl
inc
mov
add
gs
adc
fidivs
adc
add
addr16
in
test
adc
adcb
jle
pop
push
pop
nop
jge
inc
sarb
adc
adc
jne
repnz
std
inc
mov
add
push
xchg
lods
and
imul
loope
xchg
jno
movsl
jns
xchg
insb
testb
daa
pop
sbb
or
out
pop
out
hlt
and
cmpsb
jno
or
jmp
sub
pop
mov
lds
cwtl
jae
insl
adc
lods
fldcw
aam
cmpxchg
push
cmp
in
dec
cmp
ret
mov
jns
jmp
ljmp
fidivrl
or
clc
ljmpw
cmovl
push
icebp
dec
outsl
push
insb
fcomi
adc
imull
sbb
cmp
adc
movsl
mov
fld
jb
test
inc
push
aas
inc
dec
stos
ret
push
mov
cmp
jne
int
or
mov
pop
cmp
sub
xchg
sub
loope
push
add
cmpsb
jg
aam
cltd
jae
outsb
xchg
mov
pop
push
ret
loope
sub
push
lahf
das
xor
out
adc
popa
popa
mov
mov
push
loop
out
pop
mov
aad
push
enter
loop
dec
and
pop
rcll
popf
addr16
ror
inc
lock
shlb
arpl
xchg
push
loop
cmp
xchg
idiv
out
mov
loop
dec
popf
mov
and
fildll
loop
and
pop
stos
in
lea
stos
xchg
mov
arpl
rol
bound
mov
or
inc
mov
scas
pop
jns
lcall
xchg
aam
push
inc
hlt
xchg
push
sahf
inc
xchg
jbe
movsb
jb
xchg
sti
jecxz,pt
pop
push
inc
popf
cmpsl
sbb
push
push
inc
sub
mov
push
xor
xor
mov
aam
shlb
mov
or
lock
push
sub
xchg
es
lea
or
data16
add
jns
xor
and
fwait
adc
sub
mov
pop
cltd
xchg
xor
scas
dec
sub
pop
call
jae
mov
stc
jecxz
cld
lock
pop
add
cld
sbb
mov
push
jno
mov
or
pop
xchg
or
push
sbb
addr16
insb
out
or
ja
xor
popf
outsl
sub
push
xor
pop
les
push
cltd
cmp
push
xchg
addl
icebp
pop
mov
pusha
testb
shll
push
dec
out
adc
lcall
dec
aam
add
sub
imull
pop
inc
sarb
iret
daa
aaa
cmp
loope
xorl
not
mov
mov
xchg
ret
movsl
and
pop
lods
pop
jge
test
xor
mov
push
ja
or
sub
lods
dec
insl
lods
jnp
add
test
clc
jbe
or
mov
lds
nop
stos
push
mov
ja
test
or
inc
pushf
negl
push
sub
mov
fwait
pushf
adc
je
xchg
repnz
jnp
ss
sub
adc
mov
xchg
mov
sbb
hlt
sbb
mov
jmp
hlt
cmp
jle
sarb
insb
insl
pop
fwait
nop
pop
and
xchg
lea
cmc
out
outsl
jbe
sti
inc
or
rcl
cltd
ds
mov
fidivs
test
lods
aaa
jge
mov
lahf
mov
inc
data16
test
push
mov
jecxz
jns
lret
pop
and
xchg
rorb
dec
push
mov
mov
xchg
jmp
orl
enter
test
int
and
mov
sub
aas
out
mov
repz
jl
and
shl
push
fs
mov
bound
push
jl
lret
pop
out
or
stos
cmpsl
or
pop
aaa
xor
les
and
adc
xchg
sbb
mov
out
inc
test
movsb
or
pop
adc
rorb
push
sub
inc
sbb
bnd
xor
addr16
mov
sub
cs
push
test
jecxz
sbb
push
mov
repz
dec
stc
leave
idivl
adc
adc
push
data16
insl
adc
jb
mov
outsl
xlat
push
lods
sbb
xchg
sbb
inc
rorl
jge
loope
test
push
pop
and
mov
shll
outsb
push
mov
fisttpl
shll
repnz
adc
mov
mov
xchg
and
mov
clc
sub
sub
ss
cmp
stos
shr
mov
arpl
ja
lcall
lahf
or
dec
popf
aaa
xchg
adc
movsb
jp
scas
into
sub
or
vminsd
sbb
push
cltd
cmp
cs
jns
add
push
xor
jmp
leave
rorb
xchg
mov
aad
lcall
insb
jb
sahf
adc
mov
adc
mov
jmp
stos
cmp
push
mov
popa
mov
pop
xor
xor
cli
sub
subl
aam
push
call
xchg
jmp
fdiv
xchg
lea
adc
cmp
test
adcb
stos
push
cltd
cmp
mov
lret
int
mov
cli
adc
mov
add
mov
in
cmp
jge
push
mov
test
jg
and
fcoms
aad
sbb
push
aas
jns
or
jne
hlt
aam
test
pop
pop
xchg
in
push
shll
pop
mov
push
data16
in
call
aam
popl
push
pop
pop
jb
add
data16
jae
int
mov
sbb
jg
sub
dec
ret
dec
add
ds
pop
mov
dec
ja
pop
sub
cli
mov
aam
jle
pop
push
adc
xchg
pushf
fdivs
and
enter
and
fisubs
mov
call
inc
jl
aad
jo
cs
test
lds
pop
xchg
xor
mov
adc
das
push
mov
xor
jae
hlt
sti
insl
sub
daa
mov
add
mov
mov
rolb
dec
dec
loope
inc
and
sub
decb
fidivs
dec
sub
pop
lcall
negb
fidivrl
xchg
cmp
mov
mov
ljmp
push
mov
je
icebp
xchg
pusha
jecxz
adc
xchg
jmp
and
xor
xchg
addr16
mov
lea
movsl
call
cltd
sbb
push
xor
dec
imul
bound
out
or
nop
pop
outsl
stos
cltd
jne
cmp
adc
das
push
mov
cmp
xor
sbb
add
xor
add
add
mov
sbb
leave
dec
movsb
mov
add
sbb
addr16
xchg
imul
mov
shrl
mov
or
cmpsb
test
jb
and
or
pushl
in
pusha
inc
adc
es
sub
int3
push
push
xchg
or
in
adc
rorl
xor
fstps
lea
icebp
jbe
xchg
xchg
std
dec
push
and
mov
mov
repz
mov
rcrl
add
pop
imul
push
adc
and
mov
stc
xor
jg
mov
call
sub
mov
test
icebp
jne
cmpsb
pop
mov
push
or
adc
mov
push
lock
test
divl
sarl
cwtl
adc
adc
mov
jmp
dec
ret
cmp
shl
pop
and
sub
mov
xor
fiaddl
test
popf
jp
dec
inc
cltd
out
mov
cwtl
mov
push
sbb
cmpsl
out
jge
sub
hlt
jbe
test
push
cmp
cmp
sbb
mov
sbbb
add
arpl
mov
push
push
imul
add
add
add
add
add
add
xor
add
add
add
aam
add
add
add
add
add
add
add
add
add
hlt
add
add
add
add
add
add
add
add
add
addb
ljmp
ja
shrl
dec
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
push
push
push
pushl
call
mov
sub
mov
add
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
call
call
jmp
push
call
mov
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
push
call
mov
add
mov
jmp
jmp
push
pushl
call
mov
pushl
pushl
pushl
push
push
call
add
pushl
call
cmpl
jb
mov
leave
ret
dec
add
add
mov
insl
add
add
add
adc
sub
add
add
adc
add
into
push
or
add
add
add
jb
add
add
add
sbbb
sbb
sbb
sbb
sub
clc
sbb
add
data16
jne
dec
pop
je
jb
outsl
inc
dec
and
ja
mov
inc
roll
out
xor
add
add
jns
clc
inc
mov
xor
add
cmp
mov
cli
push
sub
test
test
std
call
incl
lock
clc
push
pushf
adc
xor
sub
add
add
push
jmp
xor
inc
pop
js
jge
push
push
add
call
add
push
stos
push
adc
decl
adc
test
inc
je
rolb
sar
inc
xchg
add
push
push
jne
test
add
push
jo
mov
movsl
test
stc
push
clc
push
add
fisubs
add
inc
add
push
xor
add
add
insb
add
add
sbb
add
sbb
push
sbb
add
jbe
inc
outsb
outsb
add
adc
popa
outsl
inc
add
popa
imul
insb
fwait
mov
lret
outsl
imul
jae
cmp
gs
add
add
inc
je
add
add
mov
inc
xor
add
add
jp
add
add
mov
add
add
add
add
add
les
test
pop
add
movsb
pushf
mov
mov
push
pop
sub
pop
push
in
pop
sti
sarl
sbb
mov
cmpsl
daa
mov
push
and
jmp
adc
icebp
push
cmp
movb
mov
mov
fists
enter
out
orl
lods
ss
dec
and
push
int3
je
loop
ret
inc
sbb
xchg
sahf
mov
orl
cmp
jo
sub
stos
fdivs
xchg
call
inc
in
fisubl
lret
movsb
sbb
jmp
jb
mov
jns
mov
jbe
push
push
adc
push
lret
sub
mov
leave
mov
sub
jbe
ljmp
mov
mov
rcl
ret
rorl
fadds
sbb
rorb
mov
lahf
xor
mov
or
inc
mov
and
and
ret
scas
lret
cld
adc
cmp
inc
jecxz
test
lods
sbb
popf
jns
pop
jno
inc
jg
daa
aam
xchg
pop
adc
cltd
add
jmp
or
inc
inc
sub
dec
inc
mov
or
pop
push
stos
lods
cmp
sbb
cmp
xor
add
icebp
mov
push
cmpsb
jae
pusha
je
xchg
mov
pop
jge
fisubrs
dec
sbb
rorb
jecxz
pop
fmul
sbb
fidivrs
add
negl
pop
gs
sbb
aas
int
mov
inc
xchg
fwait
popa
add
int3
js
insl
push
sub
sbb
adc
stc
orl
mov
sub
in
mov
mov
sub
mov
out
cli
cmc
sbb
jno
cmpsl
xchg
aad
dec
xor
div
test
sub
cmp
adc
lret
psubb
adc
in
xlat
fs
or
ss
inc
cltd
inc
mov
cwtl
mov
cmpsl
add
fstl
inc
dec
aad
xchg
add
adc
add
xlat
xlat
sbb
rcrl
add
cmpsb
mov
xchg
mov
mov
int3
mov
ljmp
sbb
int3
js
ja
jecxz
xor
outsb
in
aas
out
inc
and
xchg
sub
dec
xchg
inc
mov
pop
aas
push
add
ret
fs
xchg
xchg
mov
decl
cwtl
inc
rcrl
jae
xor
lret
and
mov
mov
aas
cmp
sub
ss
rol
xchg
mov
cmpsb
cli
xlat
and
cmp
cld
out
mov
mov
hlt
stos
pop
mov
pop
xchg
xor
sbb
jle
insb
das
lds
mov
loopne
cmc
cli
lcall
jnp
push
rol
fwait
sub
dec
xor
mov
cmovae
dec
mov
bnd
popf
mov
ss
add
mov
popa
daa
insl
and
xor
sub
sbb
insl
xchg
pop
jle
mov
pusha
cmp
dec
divps
rorl
adc
pop
loopne
sahf
jge
and
mov
jecxz
daa
loope
xor
add
movsb
jp
scas
sarb
pop
bound
lods
cmpsl
push
dec
jmp
jp
xchg
pushf
subb
push
arpl
mov
push
sarl
push
jmp
cmp
bound
push
mov
xchg
cmp
roll
jae
jmp
jp
aas
rorl
fdivr
cmpsb
xchg
ds
and
mov
sarb
add
add
and
std
inc
jno
sbb
push
pop
mov
aad
push
lds
adc
sbbl
pop
in
mov
lods
fidivl
out
movsl
stos
mov
inc
clc
scas
iret
mov
lods
mov
cld
jg
in
adc
dec
inc
fwait
mov
fnstenv
jae
ret
sar
lock
push
push
aam
lcall
inc
xor
ret
xlat
rclb
push
mov
sub
jnp
idivb
cmc
dec
outsb
adc
rolb
lods
sbb
mov
xchg
jno
cwtl
inc
or
les
out
movsb
cmc
mov
icebp
gs
xor
xor
bswap
insl
and
or
push
test
in
xor
call
gs
call
ret
int3
jo
stos
ret
test
test
or
nop
cld
mov
mov
stc
lods
adc
push
add
add
cltd
gs
sbb
pop
lea
push
push
mov
in
cmp
shrb
iret
lock
inc
adc
xor
mov
inc
mov
push
jno
inc
leave
test
sub
outsl
push
xor
mov
popa
insb
xchg
roll
push
or
push
pop
stos
jne
cld
decb
mov
xor
mov
inc
mov
outsb
leave
mov
sub
and
pop
test
adc
aas
ret
insb
int
push
int3
arpl
push
mov
sbb
incb
nop
mov
sbb
mov
testl
es
sbb
out
dec
cwtl
popf
test
push
loope
daa
push
xchg
adc
mov
push
shlb
inc
dec
inc
xor
les
xchg
bound
inc
pop
inc
jo
push
fcmovu
jge
les
add
cmp
lret
sahf
aaa
test
push
and
xchg
pcmpgtw
loop
adcl
neg
or
xor
push
mov
mov
xchg
popf
test
sahf
fildl
test
rcrb
fs
aaa
xlat
jae
pushf
jp
inc
out
and
icebp
push
data16
xchg
adc
or
push
xchg
cltd
sbb
shll
addr16
negb
push
les
loop
iret
cmp
xchg
fwait
rcll
int
cmp
wrmsr
std
cmp
repz
adc
lds
pop
mov
addr16
mov
loopne
cmpsl
or
sbb
rcrl
dec
stc
add
pop
ret
push
out
push
int3
in
xchg
loope
inc
mov
sbb
dec
pop
imul
xor
lcall
dec
enter
loopne
cmp
iret
lods
cli
or
cld
aad
addr16
xor
stos
push
pop
sbb
pop
gs
xchg
pop
aaa
faddl
xchg
add
pop
cmc
push
xor
sbb
idiv
mov
stos
xor
pop
inc
vmulss
jmp
cmp
scas
movsl
imul
and
fcoms
mov
sbb
and
cmp
out
insb
adc
cmp
cmp
push
pop
cmp
add
gs
out
shl
out
adc
or
addr16
cmc
lods
jecxz
pop
std
lret
into
hlt
in
out
clc
push
sbbl
daa
inc
jnp
aaa
lea
inc
jle
out
subb
pop
stos
cmp
xchg
jp
inc
test
dec
subl
mov
mov
jo
or
shr
in
mov
sti
dec
or
xor
sti
push
and
mov
mov
add
and
cwtl
cwtl
cmp
inc
fwait
push
rolb
sub
fsubp
jbe
sbb
sbb
scas
xor
pop
jno
dec
push
mov
dec
out
inc
pop
inc
imul
mov
bnd
sti
dec
dec
leave
das
pop
push
push
in
push
push
xchg
popf
add
pop
fs
lret
pop
sub
pusha
inc
repnz
sub
imul
jo
sti
inc
lcall
push
loopne
in
sub
ficomps
push
mov
pop
dec
jns
pop
insb
in
prefetch
jb
les
pop
mov
jbe
sti
inc
pop
into
or
orl
fistpll
in
cltd
aaa
rorl
add
insb
or
cmc
cli
xchg
insl
sub
sbb
loope
sbb
sub
xchg
test
add
lds
lock
cmp
loope
dec
cmp
daa
fimuls
addr16
ret
fidivl
push
pop
jle
repnz
ror
sbb
mov
cmp
mov
rorb
in
jo
xorl
dec
xchg
pop
cmp
add
mov
jae
inc
cmp
and
gs
xor
add
ss
data16
negl
lock
adc
shl
negb
cmpsb
dec
stc
cmp
fwait
or
mov
outsl
or
int3
dec
das
cmp
test
push
rclb
push
in
fnstenv
loop
loop
mov
xchg
sahf
or
cwtl
mov
jle
mov
repnz
das
sahf
fidivrl
jl
mov
push
loope
fidivl
test
bound
aam
clc
or
mov
sbb
push
inc
pop
push
mov
in
sub
in
cwtl
out
push
jp
jmp
aam
cmp
dec
sub
out
add
mov
test
into
or
sub
lock
mov
inc
cmc
out
repnz
loopne
loop
xchg
cmc
pop
xchg
sbb
push
or
leave
jns
xlat
pshufw
mov
inc
pop
bound
xchg
fwait
and
insb
test
int3
cld
sbb
enter
sub
sarl
das
jecxz
mov
pop
sub
cmp
leave
mov
jno
inc
jl
xor
jbe
adc
test
cmpl
in
lret
sahf
js
in
pop
push
inc
mov
push
nop
ljmp
out
xchg
bound
dec
iret
inc
mov
dec
imull
popf
xor
icebp
and
mov
ret
sbb
cmp
sub
roll
push
mov
push
mov
ss
std
scas
pushfw
js
lret
cmp
cmp
insl
inc
cmp
ficomps
out
xchg
subl
mov
or
xchg
nop
cli
addr16
mov
pushf
ds
lock
mov
out
jbe
jae
mov
js
je
pxor
xchg
fdivl
mov
incb
inc
xchg
xchg
lret
movsl
cmpsb
shll
dec
imul
enter
mov
pushl
negb
aaa
push
or
xchg
push
sub
test
into
and
out
mov
mov
lods
ljmp
push
imul
push
imul
out
into
sbb
xlat
movq
mov
jg
push
jo
movsl
mov
xlat
and
in
imul
mov
xlat
mov
test
cmp
popa
sbb
xor
scas
cmp
sahf
jg
xor
aam
hlt
jb
jl
jo
mov
jb
fs
stos
ficompl
or
aas
outsb
sahf
xor
ss
cld
pop
lods
aam
sbb
fldt
insb
mov
pop
sub
add
jmp
stos
in
pop
adc
push
stc
pop
xor
stos
lcall
xchg
cltd
inc
fwait
sub
cs
mov
in
pop
or
jns
cli
in
mov
popf
sbb
dec
sub
loope,pn
push
leave
adc
dec
cmpsl
movsl
in
xor
mov
cmpsl
cmp
xor
xchg
stos
pop
and
add
je
loop
mov
repz
icebp
mov
and
sbb
rorb
orb
push
jae
mov
adc
pop
mov
pop
movsb
popf
cmpsl
lret
aas
inc
xor
push
mov
enter
icebp
jae
shl
lock
jbe
add
sub
jl
mov
xor
outsl
inc
dec
loope
jno
out
insb
adc
mov
fmul
stos
push
loopne
iret
out
jbe
aas
push
lock
mov
push
aam
mov
dec
test
lock
inc
mov
sarl
fimuls
mov
push
js
xor
inc
add
jns
mov
loopne
sub
out
in
mov
pop
xchg
aad
pop
adc
mov
and
push
adcl
ficompl
movsl
sbb
insl
jbe
push
mov
lcall
jp
ret
inc
and
jecxz
xchg
xor
shll
repnz
in
stc
jne
mov
mov
sub
pop
adc
imul
sbb
jge
lret
or
pop
cli
adc
fldl
addr16
lahf
mov
sbb
cmp
call
insl
aam
jle
sub
inc
cmp
xchg
je
dec
scas
insl
sahf
cmp
es
mov
fdivr
popa
add
orl
mov
sub
xor
sub
xlat
cmpsb
adc
adc
jnp
mov
ljmp
sbb
cmpsb
sbb
ljmp
aam
pushf
and
pop
xchg
data16
lret
xor
jge
sub
std
jne
stos
test
rcr
and
push
pop
fstpt
cld
in
mov
fdiv
pop
sahf
sub
ljmp
xor
xor
adc
in
ds
inc
in
pop
dec
fs
test
pop
add
xchg
pop
fsubl
inc
adc
test
data16
mov
test
adc
lods
jne
pop
addr16
add
or
rclb
and
push
push
orl
std
mov
cmp
outsl
add
xchg
cli
or
dec
cmp
jecxz
mov
aam
movsb
ljmp
add
bound
leave
mov
sti
xchg
pop
sub
nop
aam
adcl
mov
mov
or
mov
jp
jne
jg
mov
push
push
sub
js
loope
cltd
filds
insl
outsl
push
push
jnp
shr
jl
aam
inc
rcrl
add
mov
movsl
push
js
mov
stos
repnz
cli
and
rcll
jb
pop
bound
xor
adc
icebp
rcrl
into
into
push
imul
lret
into
clc
aad
lret
orl
imul
call
cmp
lea
add
xchg
push
fldl2t
mov
mov
and
in
jmp
or
sbb
addr16
pop
hlt
jmp
sti
dec
rol
pusha
cmc
jg
mov
setae
scas
aam
pop
in
roll
sub
mov
cmp
sbb
mov
inc
or
clc
jb
or
daa
int
fsubl
in
into
mov
and
mov
data16
pop
sbb
das
test
jle
in
mov
cwtl
hlt
adc
xchg
cmp
jp
adc
dec
inc
les
dec
push
dec
push
aad
lock
test
fsts
adc
iret
inc
mov
leave
dec
out
xlat
fcmovbe
push
add
sub
int
adc
xlat
mov
push
jno
push
addr16
fnstcw
pop
ret
loopne
jp
dec
push
clc
dec
scas
bound
push
mov
imul
pop
mov
stos
in
scas
mov
out
push
dec
sahf
xlat
jo
lods
xchg
cmpsl
std
por
push
mov
daa
in
mov
pushf
sub
jbe
aam
push
mov
or
mov
movsb
es
shll
pop
jmp
dec
and
pop
cwtl
sub
cmp
movsl
adc
shr
ffree
lods
xlat
jnp
xor
bound
mov
lock
add
sbb
xchg
xchg
push
cmp
movsb
cltd
or
push
sub
repz
lods
hlt
and
in
pop
dec
testl
daa
dec
popf
mov
fwait
out
fsubl
loopne
aad
fldenv
stos
fwait
and
push
subl
push
or
jns
ret
cltd
out
shlb
nop
xor
nop
sbb
lea
mov
lods
adc
sbb
subb
rclb
jge
out
das
mov
jl
fnsave
clc
add
test
mov
cmp
movsl
or
mov
cmpsl
call
push
imul
daa
testb
push
arpl
arpl
out
cli
mov
out
sbb
fcmovnu
jge
jae
cli
or
inc
ja
scas
rolb
mov
fiaddl
sub
jge
sub
xor
int3
loopne
repz
jo
les
jmp
and
cli
xchg
mov
and
lcall
xchg
test
mov
shl
fisttpl
mov
nop
mov
insb
jle
mov
mull
sbb
and
test
add
bsf
mov
imul
cmc
adc
stos
mov
mov
cmp
xchg
cs
pop
sbb
add
jns
sti
bound
push
mov
stc
insb
or
les
lock
pop
out
and
into
fwait
out
mov
movsb
je
dec
mov
jns
dec
mov
out
cmp
lea
add
push
inc
mov
or
sti
jb
lcall
inc
dec
cmp
or
andb
movsb
push
push
dec
cwtl
fsubr
push
mov
pushf
je
jbe
mov
xlat
lcall
jno
je
sbb
mov
xchg
shl
xchg
sar
pop
mov
jne
sbb
sbb
sub
mov
pop
adc
sahf
xchg
incb
mov
call
sbb
icebp
pop
out
pop
lahf
and
mov
and
adc
cld
rcrb
idivb
xchg
adc
push
cld
push
adc
sbb
dec
push
sarl
xor
add
repz
in
fisttps
js
aad
icebp
add
aas
lretw
adcb
xchg
scas
frstor
loopne
push
pop
or
xor
out
imul
add
insb
add
fwait
loopne
int
dec
shll
add
mov
je
ljmp
test
adc
aaa
jno
into
dec
negb
push
cmpsb
outsb
das
jne
push
popa
notl
push
push
xor
dec
jo
cmp
bound
call
loopne
call
out
and
fildll
mov
repnz
mov
cmp
test
mov
cs
or
icebp
movsl
stos
and
jns
dec
mov
test
iret
sarl
sub
or
ljmp
dec
cmpsl
insl
sti
mov
popf
cld
cwtl
mov
jle
or
in
cmc
lret
xchg
sar
inc
loopne
push
push
xchg
xor
ss
stc
scas
pop
inc
lea
rorb
cmp
pop
gs
repnz
or
jns
lea
mov
push
or
dec
jge
mov
dec
inc
mov
xchg
iret
sub
cmpsb
jmp
cmp
out
and
xchg
lock
std
sbb
dec
mov
or
shlb
clc
jne
movsb
rcrl
sub
mov
xchg
outsl
push
int
mov
out
mov
rcrb
add
add
pop
jne
test
xchg
cmc
cmpb
cmc
sub
mov
stc
pop
sbb
adc
xchg
pushf
lea
sbb
out
add
add
add
or
add
add
add
jp
add
add
add
add
mov
add
add
add
add
or
add
add
push
sbb
xor
add
add
add
add
add
add
stos
add
add
stos
stos
add
ja
mov
inc
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
leave
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
lret
sbb
add
adc
add
or
add
add
add
cld
leave
add
hlt
leave
add
in
leave
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
lret
push
lret
pop
lret
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
lret
add
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
lret
add
pushf
lret
add
movsb
lret
add
lods
lret
add
mov
add
lret
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
lret
add
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
int
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
int
add
int
add
int
add
int
add
int
add
add
lods
int
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
iret
add
dec
iret
add
push
iret
add
pop
iret
add
fs
add
insb
iret
add
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
iret
add
mov
iret
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
