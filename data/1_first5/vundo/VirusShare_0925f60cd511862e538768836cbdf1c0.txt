add
or
add
add
add
jne
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
call
pushl
mov
call
push
push
pushl
call
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
xor
test
jle
push
lea
push
mov
cmp
je
inc
add
cmp
jl
pop
pop
cmp
jl
xor
jmp
test
jle
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
inc
xor
test
mov
jle
lea
mov
inc
add
cmp
jl
pop
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
pushl
pushl
jne
push
pushl
call
jmp
dec
push
call
pop
ret
int3
int3
int3
int3
int3
call
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
pushl
mov
pushl
mov
push
call
mov
mov
movzwl
movl
mov
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
push
push
mov
mov
push
call
mov
push
push
push
pushl
call
mov
push
call
mov
push
mov
call
neg
sbb
inc
push
push
push
sub
lea
push
mov
push
call
cmpl
je
cmpl
je
push
call
mov
xor
xor
call
mov
xor
call
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
test
jne
mov
not
mov
or
mov
lea
push
call
mov
pop
leave
ret
push
imul
jb
je
arpl
lock
add
xor
call
push
mov
pushl
call
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
push
pushl
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
mov
push
push
call
mov
call
push
push
pushl
mov
call
push
mov
pushl
call
mov
jmp
push
push
lea
push
push
pushl
call
xor
mov
push
push
push
push
pushl
call
pushl
mov
pushl
pushl
push
push
call
mov
push
pushl
call
push
pushl
pushl
push
call
lea
push
call
pop
push
lea
push
push
push
push
call
push
lea
push
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
pop
pop
jmp
call
push
mov
call
xor
leave
ret
push
mov
mov
mov
push
push
mov
mov
push
mov
mov
mov
mov
mov
add
xor
mov
movl
mov
add
mov
mov
cmp
je
movzbl
sub
push
call
add
cmpl
jg
mov
mov
mov
movzbl
sub
incl
test
jne
jmp
mov
mov
mov
call
decl
movzbl
sub
je
incl
call
jmp
call
mov
push
push
mov
push
push
mov
push
push
push
push
push
pushl
pushl
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
andl
andl
push
mov
push
push
movl
movl
movl
movl
mov
call
mov
mov
push
push
movl
movl
mov
movl
call
andl
push
mov
call
pop
ret
push
mov
sub
push
pushl
call
pushl
mov
xor
movl
pushl
mov
movl
movl
movl
movl
movl
movl
movl
call
add
test
jne
push
pop
jmp
push
push
push
pushl
call
mov
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
push
lea
push
push
call
add
leave
ret
push
mov
sub
push
push
push
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
pushl
call
mov
mov
add
push
pushl
call
mov
mov
movzbl
mov
movzbl
sub
test
je
mov
add
mov
push
push
push
pushl
call
mov
sub
mov
add
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
call
call
jmp
push
call
mov
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
push
call
mov
add
mov
jmp
jmp
push
pushl
call
mov
pushl
pushl
pushl
push
push
call
add
pushl
call
cmpl
jb
mov
pop
pop
pop
leave
ret
dec
mov
add
and
dec
insl
std
push
add
or
adc
add
adc
add
lea
add
add
sbb
add
mov
mov
mov
sbb
sbb
sub
clc
sbb
jecxz
cmp
popa
cmp
ja
jae
inc
add
imul
and
add
add
xor
pop
push
fucomi
inc
popa
inc
cld
xor
pop
push
inc
cmp
sub
mov
jmp
test
lea
push
call
xchg
pop
andb
add
cmp
inc
mov
sar
incb
repz
add
js
jge
push
xor
and
rolb
add
lock
push
call
int
decl
mov
push
cmp
pop
jmp
cmp
push
dec
add
lea
cmp
add
and
jne
test
add
incl
lock
lea
clc
cmp
cmp
clc
add
adc
adc
add
xchg
adc
xor
add
add
insb
sbb
add
add
mov
sbb
sbb
sbb
push
pop
test
fs
jbe
inc
add
outsb
push
jne
adc
popa
imul
imul
insl
gs
add
lret
add
insb
fs
cmp
popa
gs
jle
jb
outsl
jne
inc
gs
xor
popa
inc
jne
mov
aad
add
add
add
add
in
mov
add
add
add
xchg
cmp
nop
inc
std
fnstsw
pushf
pop
cmp
sub
insb
jg
popa
cmp
cmp
popf
movsb
push
imul
mov
mov
stos
scas
dec
cltd
lods
pop
in
in
nop
divb
stos
pop
js
fsubs
sarb
cmp
xor
mov
das
inc
rclb
or
je
aad
lods
daa
push
mov
cli
push
test
pushf
icebp
loope
rorl
pop
shlb
add
jbe
and
or
ja
cmp
add
cmp
adc
int3
jecxz
and
jmp
daa
jno
mov
fiaddl
nop
out
iret
shlb
xor
mov
dec
nop
cld
sub
mov
fcomps
movsb
leave
aaa
mov
xchg
add
loop,pt
sub
mov
inc
call
gs
sti
divb
mov
adc
jno
sbb
sub
popl
pop
ret
dec
sbb
mov
subb
xchg
loopne
out
push
mov
dec
stos
notl
call
and
mov
xorb
ds
lods
push
mov
fndisi(8087
add
ss
clc
or
mov
jne
push
xor
fs
xchg
fs
fisubrl
out
jb
add
push
xchg
xorb
sbb
out
mov
jbe
pop
inc
fldpi
dec
stos
testl
imul
into
xor
out
inc
pop
add
push
repnz
lds
cmp
sbb
jmp
adc
test
popa
cmc
pop
out
xor
stos
mov
inc
popl
xchg
inc
rorl
mov
jmp
lods
ss
fs
das
and
sti
and
pop
gs
push
rcl
jg
rcrb
push
jle
ret
pop
adc
sbb
and
subb
dec
mov
xchg
jno
aam
pop
js
pop
pop
or
imul
push
pusha
sti
push
lahf
mov
movsb
daa
add
mov
xlat
dec
int3
sbb
sbb
inc
aas
stc
mov
inc
mov
stos
test
daa
iret
or
in
pusha
pushf
mov
stc
outsb
rol
gs
insb
lea
test
fbstp
jle
mov
je
cmp
daa
stos
sbb
push
mov
sub
and
inc
mov
jge
and
push
xchg
rorb
cwtl
lock
fst
iret
dec
inc
out
divb
cmp
loopne
movsb
add
dec
push
scas
icebp
fdivrl
mov
jo
cwtl
inc
pop
push
stc
in
cltd
mov
mov
sub
scas
mov
xor
xchg
fstpl
hlt
es
pop
test
jl
pop
je
pop
add
add
dec
in
xchg
xlat
scas
mov
iret
mov
inc
jecxz
add
sbb
inc
and
stos
movsl
inc
icebp
xchg
add
shl
out
adc
ret
push
aaa
stos
fwait
mov
mov
out
pop
aam
in
sub
sub
mov
pop
mov
loopne
mov
mov
push
arpl
mov
cmc
push
xchg
shrb
shlb
xchg
pop
out
add
jg
xchg
fwait
push
lcall
lods
ret
mov
sub
mov
xchg
inc
or
jp
and
arpl
inc
jbe
fsubrl
nop
pop
or
jp
les
and
xor
mov
pop
push
inc
ja
push
lods
and
jo
imul
fldt
adc
adc
mov
test
pop
fidivrl
negl
incl
cmp
loop
inc
or
call
pushf
fnop
stc
jmp
add
sti
xchg
popf
and
or
sub
mov
push
mov
fucomi
outsb
cmc
mov
sar
scas
mul
int
in
outsl
push
sbb
xchg
jmp
inc
push
mov
bound
sub
adc
jnp
jmp
cmp
add
mov
mov
or
cmp
dec
jae
cld
lcall
dec
mov
adc
sub
mov
addr16
notl
mov
jle
lahf
sub
fsubrs
push
xchg
loope
push
add
pop
mov
hlt
ss
xor
jae
mov
cmp
or
and
imul
lret
fiaddl
mov
push
lret
jge
insb
inc
mov
insb
push
push
sarl
sbb
mov
xchg
sarb
jmp
pusha
add
add
les
test
daa
dec
or
xchg
out
push
fstl
lods
pop
fiadds
filds
inc
adc
cs
sbbb
out
dec
into
mov
xchg
mov
lods
add
out
push
sahf
rorb
inc
inc
pusha
or
cld
iret
mov
es
add
aad
dec
xor
stos
push
scas
or
push
cmp
lahf
cmpsl
cs
cltd
dec
xchg
pop
into
pop
mull
mov
lock
stos
add
or
xor
incb
sti
in
xchg
insl
outsl
cld
xor
jge
or
sub
push
cmp
mov
push
sub
loopne
xorl
loope
push
cmc
iret
outsl
addr16
sbb
sbb
pop
scas
das
push
popa
int
push
iret
rolb
add
fs
sub
cmpsl
out
sti
mov
shrb
xlat
adc
scas
mov
jo
mov
cmp
ds
mov
lret
lds
shlb
les
fdivr
xchg
sbb
popf
xor
jns
dec
mov
mov
lds
xorl
cmp
mov
repz
push
pusha
loop
insb
sbb
inc
jae
mov
sub
je
les
aas
sub
je
and
stc
pusha
inc
xchg
aad
xchg
sbb
je
mov
lret
shl
je
sbb
dec
stos
xlat
stos
push
in
inc
dec
xchg
mov
and
or
int3
adc
into
cli
leave
or
mov
mov
pop
and
and
push
push
clc
push
mov
xchg
cmp
gs
push
popw
cmp
movsl
dec
mov
addl
jnp
pushf
mov
jl
push
sbb
rolb
or
or
call
jmp
jg
leave
stos
loopne
pop
mov
jp
cli
inc
mov
pushf
movsb
addr16
jle
xor
test
and
push
out
ljmp
xchg
loop
lahf
sub
ja
fdecstp
mov
pop
fisubrs
or
xor
cmpl
ss
cs
aam
xchg
popf
cs
in
imul
test
and
aam
jo
dec
add
nop
out
imul
pushf
std
mov
lds
jge
cmpsb
or
adc
pop
int3
mov
std
or
sbb
imul
jge
ja
pop
cmc
shll
jge
test
shlb
mov
jg,pn
fwait
xor
inc
lret
paddusb
xchg
xchg
dec
jne
imul
xchg
inc
aam
in
xor
dec
imul
outsb
cli
pop
pop
pushf
inc
in
dec
scas
inc
mov
call
and
xchg
xchg
add
les
mov
lret
das
clc
jne
loop
ficompl
aad
mov
lret
cmp
cmp
les
test
ds
insl
fstpt
ds
add
fst
cmpsl
cmp
call
pushf
push
rolb
push
es
sub
shlb
pop
adc
push
inc
cld
js
fcoms
push
dec
mov
add
add
jmp
and
jno
cli
xchg
adc
call
nop
jbe
jp
int
xchg
or
jmp
pop
lods
push
dec
leave
or
push
fldl
jle
pusha
pop
cltd
jno
scas
loop
repnz
mov
and
pop
outsb
cwtl
pop
push
pusha
and
push
data16
dec
insl
aas
or
mov
enter
dec
adcb
jo
mov
repz
mov
mov
insb
xchg
bswap
adc
daa
mov
arpl
pop
xchg
gs
inc
or
push
fs
movsb
andl
jle
test
xor
adc
fmul
out
das
push
mov
pop
aaa
sarl
or
dec
ds
adc
cmp
or
icebp
out
sub
adc
out
and
ds
fmuls
xchg
mov
bound
pop
jl
jae
sub
clc
jns
or
fs
out
dec
rcrl
leave
imul
mov
repnz
dec
ss
adc
popa
dec
pop
xlat
inc
out
loope
cs
fdivr
adc
fidivl
sbbb
pop
fdivrl
fsub
mov
repz
popf
xor
pop
cwtl
out
mov
daa
ds
das
adc
rcrb
xor
jns
xchg
xchg
lcall
pop
test
dec
jp
out
fiadds
push
fnsave
shl
dec
push
sbb
jns
bound
movsb
fwait
or
arpl
shr
icebp
mov
mov
push
lret
mov
or
dec
fstpt
pop
inc
rcll
pushf
and
fisubrl
add
rcrl
test
leave
inc
jge
orl
mov
das
cmp
pop
mov
movsb
pop
ds
inc
cmpsl
ret
pop
sub
mov
inc
sub
sahf
add
jnp
loopne
pop
mov
xor
out
jle
inc
jmp
cld
aad
sub
movsb
imul
pop
xorb
push
ret
mov
in
jbe
cwtl
lods
testb
and
cmp
jo
mov
insl
orl
iret
push
mov
mov
test
orl
data16
js
jne
push
js
jbe
cmp
cld
push
jl
rcr
loopne
repz
pop
jp
cmp
loopne
pand
dec
stos
or
mov
pop
inc
je
or
lret
and
cld
mov
mov
add
xor
fcomps
adc
stos
xchg
ja
add
dec
test
xchg
js
ret
mov
imul
aaa
mov
xor
push
jne
mov
insl
test
lds
leave
jg
jmp
testb
clc
jmp
cmpsb
mov
sub
mull
aam
push
mov
addr16
inc
adc
add
mov
ss
xor
pop
aam
fsubl
jb
pop
mov
push
loopne
mov
xor
sub
mov
les
inc
sbb
lahf
mov
shll
mov
inc
inc
sub
jae
pop
popa
mov
das
jmp
out
ja
enter
aaa
aad
outsl
fildl
icebp
sub
repz
mov
call
dec
out
xchg
xor
jae
js
outsb
lcall
mov
inc
mov
cmpsl
in
xchg
adc
cs
enter
out
pop
cmpsl
inc
and
scas
inc
jg
xchg
dec
mov
ret
cmc
push
push
sbb
xlat
out
inc
push
mov
mov
sbbl
les
fiaddl
idivl
mov
mov
sbb
in
pop
pop
cltd
and
cmp
data16
addr16
rclb
cmpsl
and
mov
sbb
rcll
sbb
add
out
aas
jp
leave
jp
aam
cltd
add
ds
jb
xchg
jmp
inc
and
rcll
int
les
add
cltd
scas
pop
popa
out
cmp
inc
lock
pop
dec
cmp
je
cmpsb
lcall
ljmp
mov
mov
or
add
add
mov
mov
pop
mov
in
cmp
push
dec
repz
jl
push
addr16
lea
inc
movsl
mov
clc
ljmp
xor
pop
cmp
insl
pop
cmp
pop
lds
mov
mov
inc
push
sub
or
jge
jl
cld
mov
inc
aad
cmp
lcall
sub
push
inc
inc
mov
inc
aaa
sti
pop
in
stc
mov
daa
cmp
stos
pop
jp
xor
mov
cwtl
sbb
pop
repz
jae
filds
mov
es
loop
cltd
mov
jmp
jge
cwtl
or
add
xchg
arpl
mov
sbb
sbb
arpl
or
cmpsb
dec
xchg
cli
repnz
sub
mov
mov
pop
push
pop
out
pop
cwtl
lret
push
xchg
sbb
mov
aad
or
jo
repnz
lret
dec
lret
mov
or
mov
lds
or
out
push
aam
stos
dec
gs
adc
out
dec
loope
mov
popa
insl
sbb
add
fmuls
ja
out
mov
or
mov
out
insl
dec
insl
jle
roll
pop
sahf
mov
mov
ret
loopne
dec
stos
push
mov
xchg
push
orb
push
pushl
ret
icebp
call
xchg
pop
push
push
mov
gs
mov
mov
repz
das
cmp
jb
or
mov
xorb
xor
mov
fdivrp
cli
rorl
mov
lret
jbe
or
jg
or
fwait
xchg
sbb
xor
mov
pop
imul
inc
lds
jecxz
jae
testb
jmp
mov
add
bound
nop
data16
push
mov
cli
inc
mov
sbb
cmp
pusha
sbb
stc
gs
pop
imul
inc
dec
sbb
lretw
lods
cmp
cmp
sar
inc
mov
mov
pop
test
mov
xchg
mov
jnp
add
jae
test
lods
clc
popf
ret
mov
sahf
loopne
rcrb
cmp
pop
cld
push
mov
inc
cwtl
fisttpl
sbb
mov
das
pop
push
jne
inc
fcmovbe
jl
push
inc
loopne
xor
ficoms
leave
lods
js
inc
jnp
test
sub
pop
rclb
pop
or
xchg
mov
cmp
and
mov
pushf
ja
dec
jle
in
aaa
iret
int3
xchg
les
adc
mov
xchg
repnz
clc
inc
or
dec
push
loop
jle
int3
sbbb
and
jl
mov
pop
cmpsb
ret
inc
mov
jg
xchg
or
and
lods
out
outsb
cwtl
inc
jno
and
imul
jp
lahf
mov
xor
mov
adc
popf
into
jecxz
dec
sub
push
sub
test
push
cmp
ret
xor
aaa
push
lret
xchg
sub
mov
icebp
notb
jnp
add
push
lahf
xchg
jne
shlb
xchg
fwait
scas
adc
outsl
aad
cmp
pop
push
cmp
dec
ret
mulb
or
jns
inc
push
inc
lea
xor
or
sub
mov
ljmp
sbb
xor
scas
inc
test
aam
dec
mov
ljmp
push
adc
inc
or
daa
data16
mov
dec
test
fsubs
xor
call
xchg
dec
xchg
pushf
mov
push
inc
sub
das
leave
jge
loopne
push
ljmp
jp
je
cmpsl
xchg
and
aam
add
scas
and
subl
adc
push
mov
decb
ret
int3
jle
push
add
lret
out
out
fnsave
mov
sahf
inc
inc
repnz
stos
add
int
mov
dec
lds
and
adc
or
in
aaa
aad
outsb
data16
mov
xchg
mov
xchg
xchg
daa
ror
mov
jg
xchg
mov
mov
out
inc
pop
js
and
aad
xor
aas
call
bound
in
mov
xor
push
lahf
xchg
dec
or
dec
xchg
sub
mov
jae
mov
stc
xor
pop
mov
jo
fisttpl
ret
sbb
jecxz
in
mov
lahf
mov
out
fs
ror
inc
ja
testl
pop
aas
jmp
sub
orb
push
mov
xor
mov
pop
pop
jo,pn
inc
repz
leave
cmp
mov
mov
cs
and
push
add
sahf
xchg
cmp
int3
sub
sub
ljmp
lret
mov
insl
ja
rclb
mov
lret
mov
lock
insl
hlt
iret
rcrl
mov
inc
or
mov
cmp
cmp
dec
fbld
push
pop
into
lcall
xchg
cltd
mov
mov
cmp
sub
mov
loop
xchg
movsl
xor
pop
push
ret
xor
xchg
mov
shl
mov
aad
sub
cmp
dec
add
ret
dec
inc
xchg
bound
aam
and
or
xor
sub
sbb
cltd
stos
mov
into
mov
mov
mov
xchg
call
cmpsl
paddb
xorl
rclb
xor
cmp
push
cmp
cmp
out
adc
cmp
dec
inc
clc
outsb
jge
push
lret
imul
mov
rorl
mov
sub
mov
data16
insb
mov
jno
outsl
sarb
sti
adc
nop
pop
aam
mov
aaa
mov
lods
mov
jno
andb
addb
lods
popf
call
push
lods
dec
iret
mov
jns
cmc
and
mov
test
loop
and
mov
pop
iret
sbb
pop
push
outsl
ret
xchg
repnz
mov
jmp
les
sub
lret
push
mov
insb
pop
cmpsb
sub
into
ret
adc
roll
ret
testl
xor
ja
iret
arpl
pop
cmpsl
mov
rol
sbb
fbstp
lds
inc
mov
pop
push
loope
cmp
adc
out
ret
ret
lcall
or
test
mov
ja
sub
imul
pushf
mov
scas
mov
test
xchg
jae
sbb
lret
dec
mov
lds
mov
pop
pop
std
mov
sti
fwait
divb
add
stos
mov
push
inc
xchg
lret
in
mov
out
cmp
sbb
mov
mov
pop
scas
push
sub
rolb
jnp
mov
cmp
in
repz
xor
test
popl
inc
insl
push
or
fstpl
xchg
pop
pop
fimull
outsl
lock
inc
add
jnp
sbb
add
cmc
add
add
cmp
inc
add
add
int
add
add
add
add
pop
add
add
add
add
adc
add
and
add
add
add
add
add
or
add
add
lods
add
xor
add
mov
sub
add
adc
add
or
add
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
add
add
add
jb
and
dec
add
add
add
and
add
add
add
add
add
add
rolb
mov
add
je
add
add
add
add
inc
add
mov
test
add
cmp
cmp
sbb
sbb
arpl
xor
push
jb
push
je
bound
dec
outsb
add
push
mov
sbb
fadds
xor
inc
cld
xor
add
add
in
mov
xchg
sbbb
add
inc
mulb
cld
adc
add
add
incb
inc
add
leave
push
inc
cmp
cmpsb
xor
adc
jb
add
sarb
rcrb
add
stos
sti
add
add
add
xor
add
add
or
test
and
inc
mov
mov
and
adc
movl
clc
adc
call
mov
incl
cmp
xor
push
push
sbb
add
test
push
lock
add
in
js
add
xor
jbe
xor
sub
clc
xor
add
push
jb
je
js
outsl
cmpsb
outsb
outsl
je
add
inc
daa
inc
gs
imul
gs
dec
inc
gs
mov
popa
and
cmc
pushf
push
insb
addr16
push
add
addr16
outsl
dec
imul
inc
popa
push
push
arpl
add
add
add
add
xor
add
add
add
add
add
add
test
add
add
add
add
adc
add
cmpsb
xlat
ret
mov
cltd
adc
imul
jle
xchg
sbb
mov
mov
jmp
adc
pop
ljmp
inc
loopne
std
cmp
repz
enter
out
adc
push
dec
pcmpeqw
fsts
imul
ljmp
sarb
push
lds
stos
rolb
push
iret
inc
add
jmp
inc
xchg
ret
popf
fldt
mov
es
xchg
std
inc
jecxz
pop
inc
push
mov
je
pop
stos
dec
jo
movsb
inc
ljmp
pop
lods
and
push
insl
xlat
adc
push
push
jg
jns
mov
dec
int3
pop
or
cmpsl
loop
mov
add
xchg
cmp
or
fldl2e
sub
xchg
imulb
das
pop
jge
loop
dec
pusha
dec
mov
aad
and
cmp
test
clc
pop
je
inc
cmc
roll
fwait
and
push
or
mov
cmc
add
repz
push
popa
xchg
jmp
cs
mov
add
pop
dec
jnp
sbb
es
push
add
scas
test
jne
icebp
shrb
jge
and
xor
pop
hlt
inc
jmp
ds
cmp
sub
cmpb
mov
icebp
push
jg
jle
push
pusha
push
mov
add
mov
in
or
mov
or
and
inc
push
cwtl
lret
ret
arpl
pop
add
or
xchg
test
pushf
pop
add
shl
xor
das
push
push
cmp
into
jb
in
scas
loop
sub
arpl
and
sbb
and
push
mov
ss
xor
jmp
cltd
out
cmp
push
and
rcll
and
mov
std
arpl
mov
mov
cwtl
or
call
call
and
jno
push
pop
cli
mull
mov
mov
idiv
add
mov
and
sarl
xchg
mov
ja
sub
cmp
cmp
sub
xor
notl
mov
jns
jne
fdivrp
or
lcall
leave
sahf
rclb
or
js
xacquire
sub
inc
pop
cmp
int3
ljmp
push
mov
mov
repz
push
mov
lahf
or
add
fs
repz
xor
push
sub
xor
jae
in
pop
xor
push
xor
mov
call
daa
dec
mov
add
dec
jne,pn
sbb
pushl
int
lock
lret
aaa
movsb
repnz
data16
scas
and
sarl
inc
addl
scas
xor
imul
dec
data16
push
leave
out
pop
inc
sub
ja
imul
dec
movsl
ja
and
stos
jne
stos
cld
popa
or
jecxz
mov
ds
into
ljmp
imul
fcomps
sti
xor
pushl
mov
jp
pusha
insb
xchg
cs
rcrl
test
sub
sbb
and
xchg
cltd
and
stos
push
cmp
push
ret
divl
ret
loop
inc
loope
enter
sub
mov
out
int
xchg
jnp
popf
stc
scas
shrb
inc
inc
mov
and
mov
out
and
jecxz
je
add
mov
addr16
daa
cld
xor
add
scas
mov
pusha
and
mov
arpl
clc
and
mov
fdivrp
adc
cmp
outsw
sub
fwait
cmp
sbb
ss
cmp
jbe
jne
pop
jge
cld
adc
dec
lcall
mov
out
xor
jmp
shll
in
cvttps2pi
push
add
mov
ja
daa
dec
adc
mov
and
push
popf
scas
pop
test
adc
xor
push
mov
ja
push
lret
sub
mov
lock
sbb
out
cmpsb
or
jb
sbb
xchg
cmc
push
or
xor
hlt
adc
lcall
cmpb
mov
sar
cmpsb
cmp
jle
push
lock
lods
push
and
jle
pop
dec
fisttpl
outsl
xchg
lock
xchg
popa
dec
push
mov
scas
addr16
inc
rorb
fldl
stos
adc
push
js
lahf
push
sub
mov
jge
or
dec
jae
gs
xlat
addr16
push
pinsrw
lahf
fistpll
leave
sbb
clc
leave
out
out
mov
les
or
test
and
sub
or
push
jge
scas
pusha
dec
jl
lret
jl
mov
imul
sbb
call
inc
lods
adc
adc
aaa
xchg
sbb
adc
sbb
push
mov
andb
fnsave
js
shll
push
sbb
jl
push
jb
cmpsl
dec
dec
sbb
push
add
frstors
mov
popf
adc
jmp
or
or
mov
push
leave
divb
ficompl
fcomi
xchg
out
or
mov
cmpsl
cmp
or
mov
mov
sarb
pusha
call
sub
pop
leave
sti
test
sbb
xor
pop
inc
lea
fs
hlt
cld
fsubl
xchg
inc
jg
insb
cmp
rsm
clc
scas
popa
xchg
cmp
out
and
mov
dec
iret
pop
ret
aas
popa
cmp
or
icebp
stos
je
arpl
call
dec
push
xlat
mov
insb
fwait
lret
inc
push
adc
add
sbb
into
test
push
call
lods
lock
ss
jo
ret
push
rcll
dec
fs
adc
rcll
jbe
mov
aam
into
xchg
rorb
rclb
ljmpw
inc
add
fiaddl
pop
xchg
adc
dec
xor
aas
movsl
jmp
inc
adc
flds
sub
cmp
mov
outsl
mov
out
test
rorb
mov
jmp
mov
aaa
rcl
xor
push
pusha
stos
and
cli
or
xchg
pop
push
mov
in
orb
addr16
mov
mov
or
fucomip
mov
fadds
push
mov
sbb
lret
psubsw
push
or
repz
shrl
icebp
rorb
inc
test
mov
sbb
in
pop
dec
icebp
mov
aas
xchg
popa
aam
pop
jnp
adc
cwtl
iret
dec
inc
mov
xchg
mov
lds
push
test
mov
lcall
in
sbb
mov
cld
xchg
faddl
popa
inc
lahf
js
icebp
mov
loopne
pushf
add
imul
in
push
aad
xor
aas
ror
int
addr16
mov
int3
ja
aad
nop
jecxz
cmp
lahf
push
jl
loopne
xchg
les
shlb
mov
lahf
inc
cli
mov
cmp
ret
loopne
js
sbb
cs
add
pusha
pop
test
fdivrl
mov
push
repnz
sar
pop
test
mov
sbb
shlb
fidivl
add
xlat
jns
stc
xchg
sahf
sarl
fisttps
add
xchg
inc
inc
hlt
hlt
mov
pop
sub
cmp
ds
jecxz
inc
pop
adcl
mov
push
push
fbld
pop
xlat
dec
dec
not
ss
push
pop
mov
jge
mov
pusha
push
jae
mov
sub
cmp
xlat
mov
add
xor
in
sbb
imul
out
mov
dec
adc
repnz
cmp
xchg
mov
jecxz
loope
sarb
dec
mov
lods
enter
lods
jmp
stos
sbb
mov
icebp
xchg
cmpsl
inc
jle
enter
lods
cmova
fnsave
sbb
mov
and
and
and
pusha
out
cli
adc
pop
testl
inc
fcmovu
and
push
outsl
mov
and
cmpsb
dec
inc
sbb
rdmsr
lods
je
gs
sbb
out
add
decl
rcrb
lea
loope
fisttpll
lret
inc
sarb
adc
xchg
ret
xchg
add
lock
jecxz
pop
mov
push
popa
daa
scas
and
adc
hlt
pop
stos
icebp
jge
push
push
fnsave
mov
adcl
sarb
sbbb
jnp
cmpsl
push
test
inc
orl
sub
add
mov
sbb
dec
xchg
add
jns
sub
movsb
jl
jl
push
lea
pusha
or
shl
out
sbb
mov
xchg
sti
rorl
nop
call
xor
adc
jb
loopne
xchg
popa
rorb
jno
scas
and
cs
dec
cmp
mov
movsl
xchg
and
sbb
mov
jne
or
sub
add
popa
push
xor
inc
xchg
mov
repnz
ja
fwait
inc
cmp
xchg
mov
mov
and
and
add
cmp
lahf
shlb
xor
lcall
cltd
int3
shll
insb
mov
stos
in
dec
ret
mov
jne
mov
sub
and
push
out
cmp
xor
lcall
push
cwtl
inc
fs
out
fs
cs
das
lea
fsubl
in
adc
out
nop
lret
mov
je
or
dec
push
dec
aad
xchg
ss
loopne
fdivr
jne
call
jmp
mov
push
arpl
ds
idivb
sbbl
dec
test
add
fdivrs
adc
xchg
pop
jnp
mov
mov
inc
bound
mov
xlat
mov
push
call
and
inc
push
fsubl
pop
add
movsl
stos
sub
jbe
and
adc
insl
xor
ss
sub
mov
les
jne
pop
push
adc
mov
sti
or
jg
fs
cmp
movl
stos
test
pushf
ret
lret
sbb
adc
into
xor
lret
mov
repz
call
dec
jge
adc
xchg
sbbb
das
push
xor
adc
push
cmpl
fwait
xchg
outsb
ja
ja
cmp
cli
sub
out
insb
push
lcall
and
lea
in
int
push
insl
cmp
xchg
icebp
and
sbb
das
sahf
xorb
out
inc
sub
fcmove
scas
push
inc
cmc
lea
cmp
addr16
imul
not
mov
test
imul
out
aaa
push
xor
mov
xchg
or
xor
mov
sbb
and
loope
fsts
mov
mov
insb
adc
cwtl
mov
pop
mov
push
popf
push
stos
and
add
scas
loopne
sarb
inc
pushf
cmp
sti
pop
out
inc
mov
cwtl
jno
sbb
pop
inc
add
subb
dec
test
icebp
sbb
std
mov
test
jns
out
jne
test
sub
fdivrs
adcb
cli
inc
cbtw
aad
test
in
popf
fsubl
ret
hlt
jecxz
xchg
and
stos
sub
xor
jo
jmp
cmp
dec
jecxz
sbb
call
inc
inc
lock
shl
ljmp
push
xchg
ss
sahf
and
call
push
push
js
xor
shrb
xor
or
mov
inc
inc
and
lock
mov
xchg
push
xchg
stc
clc
and
stos
mov
push
mov
mov
mov
xchg
or
add
pop
fildl
ljmp
cmp
mov
sysexit
adc
aam
add
xchg
push
addl
add
adc
arpl
imul
mov
inc
pop
add
xchg
adc
sub
cmp
cmp
outsb
popf
adc
aad
inc
rorl
sbb
sub
rcll
dec
call
rolb
push
shrl
std
lock
xchg
jp
test
cmpsb
sahf
rclb
adc
lods
push
jge
ret
popa
cmp
mov
aaa
adc
loopne
jae
add
lret
out
mov
fs
movsb
ja
inc
movsb
xchg
ss
loopne
jns
pop
sub
rorb
mov
stos
cmp
inc
dec
push
sahf
add
jae
xlat
xor
xor
sbb
lods
js
out
inc
cmp
pop
add
jno
sbb
and
xor
roll
jae
mov
xchg
ds
push
sub
xchg
sbb
addr16
mov
sub
xlat
mov
leave
in
nop
call
and
pop
jg
pop
das
mov
pop
add
sbb
or
sbbl
stos
fs
jbe
push
fs
sbb
or
push
loopne
in
dec
mov
fwait
insl
adc
enter
addr16
mov
das
mov
pop
sbb
push
into
adc
loope
and
fcoms
dec
jae
out
stos
test
mov
mulb
mov
mov
lcall
fisttps
in
and
or
aaa
cmpsb
outsl
xchg
fnstsw
jl
cmp
jb
pop
cltd
jge
xchg
test
jge
xchg
jle
pop
push
popa
repz
cwtl
gs
call
add
or
xorl
xchg
test
pushf
insl
cmp
lods
xor
fldt
pop
ja
cli
pop
adc
fs
pop
mov
es
xlat
loopne
imul
cmpb
mov
cmpsb
sub
daa
lods
scas
dec
hlt
fistl
mov
shlb
fdivl
pushl
push
arpl
jl
xchg
adc
shrb
fistpll
nop
nop
stos
out
jno
ja
hlt
icebp
dec
cld
insb
and
mov
mov
fsubl
icebp
or
xchg
pop
jb
mov
xlat
loopne
push
insl
es
add
ss
lahf
pop
mov
js
dec
popf
and
jne
mov
jne
xchg
sub
adc
mov
mov
out
shl
mov
fstpl
ret
cltd
and
in
jl
cltd
filds
fdivr
jp
ss
nop
cmp
sbb
cmc
or
jae
xchg
faddl
mov
and
test
movsb
add
repz
call
int
lret
aam
fildl
dec
stos
xchg
or
jecxz
stos
mov
inc
push
xor
sahf
into
in
paddq
dec
dec
bound
lea
and
pop
in
add
fildll
cmp
shrb
int3
mov
dec
fldln2
cmp
push
sub
fwait
call
clc
pop
fistps
fdiv
insl
das
into
mov
dec
arpl
or
lods
int
je
dec
imul
stos
call
es
lods
fs
stos
mov
faddp
pop
aad
pop
out
lea
adc
cmpsl
inc
call
je
cwtl
movsb
add
gs
push
push
test
add
roll
loope
out
loop
pop
and
cmp
add
push
sbb
inc
pop
mov
pop
js
jp
mov
aaa
mov
fs
hlt
mov
sub
jle
pusha
pop
mov
adcb
in
add
xchg
in
pop
jmp
lcall
add
std
mov
pop
sub
enter
into
in
cli
push
cmp
out
or
lahf
xchg
cli
mov
icebp
pop
data16
and
mov
push
push
hlt
test
int
out
fistps
pop
xor
call
mov
mov
add
or
fimull
jo
adc
jmp
push
xchg
cmp
lds
dec
jb
mov
ss
adc
cmp
mov
xor
sti
jg
or
sub
daa
jmp
fiaddl
or
inc
adc
inc
xchg
dec
jns
inc
push
jg
ret
cmpsb
jnp
xor
in
push
mov
pop
repz
popf
mov
pop
xchg
push
sub
jne
ret
in
aaa
cmpsl
orb
adc
test
ficompl
adc
popa
hlt
scas
mov
sti
and
icebp
iret
mov
xchg
cmpsl
cmc
inc
and
or
les
shrb
imul
pop
jg
xor
inc
dec
cmp
inc
mov
adc
cmp
xchg
sub
sahf
xchg
xor
lea
sbb
pop
loopne
and
int
stos
dec
cmp
loope
xor
and
test
lret
test
mov
jge
dec
sub
lret
cmp
out
fnsave
sub
dec
movsl
jbe
fsubr
and
outsl
incb
mov
push
add
jl
outsl
shrb
stc
dec
and
mov
shrl
ret
sbb
icebp
add
arpl
fwait
add
std
ds
movsb
out
adc
popl
test
mov
push
adc
inc
inc
inc
mov
clc
je
xchg
leave
dec
xchg
inc
bound
adc
mov
fcompl
jl
xchg
inc
xchg
movsl
sbb
lods
and
mov
xor
ret
gs
push
push
std
ss
outsl
out
repz
mov
iret
xchg
mov
cltd
jl
mov
push
push
bound
xor
or
xchg
je
sbb
push
stc
pusha
sub
add
cmpsl
daa
das
outsb
fcoml
sbb
mov
fisubrl
pcmpgtd
in
lcall
add
inc
pop
in
std
cmpsl
jecxz
sbb
jb
mov
lcall
andb
dec
jmp
mov
mov
das
gs
xchg
xchg
mov
mov
mov
or
mov
jg
and
outsl
bnd
insl
scas
out
adc
mov
adc
scas
lds
lds
mov
push
int3
lock
pusha
stos
push
push
test
jae
shll
jo
pop
add
mov
xor
sets
or
ficoms
testb
dec
sub
jns
aaa
rclb
es
clc
rcll
dec
jg
dec
sbb
pop
mov
sub
aam
or
je
insl
test
mov
jmp
sub
das
leave
push
inc
sbb
popa
es
in
icebp
into
lods
xchg
cltd
dec
cmp
jmp
add
cmp
je
jne
push
aam
cmp
dec
jno
ljmp
mov
xchg
fiaddl
je
adc
xchg
repz
xorl
mov
lea
es
jl
jnp
jne
or
mov
sbb
jp
int3
sbb
int3
cmp
push
add
add
add
repnz
add
add
add
push
bound
add
add
add
add
add
add
xor
add
add
add
xor
pusha
js
add
add
add
fadds
add
xor
add
add
add
and
add
pop
add
and
add
ljmp
ja
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
nop
cmp
inc
add
add
mov
and
les
movsb
add
add
add
add
add
add
add
add
jno
add
popa
or
popl
add
add
add
add
add
dec
add
or
xor
add
and
popa
gs
push
imul
dec
push
xchg
mov
and
sti
fdivl
roll
push
jmp
fcoms
push
add
incl
adc
jne
jne
cld
pop
decl
pop
sbb
add
pop
popa
lock
mov
mov
hlt
pop
add
push
adc
mov
aam
add
add
add
lldt
xor
rolb
adc
call
lea
decl
jl
std
cmp
call
roll
push
loopne
lock
push
adc
clc
incl
decl
dec
enter
dec
call
push
jne
lea
push
add
mov
and
je
add
add
add
add
pop
add
add
cmp
out
add
add
je
inc
outsl
insb
jae
insb
inc
movsl
gs
inc
jne
inc
sbb
jo
movsl
fs
je
dec
outsl
insl
je
imul
dec
insb
gs
js
push
popa
insl
jne
push
xor
jae
push
gs
jae
jae
loopne
insb
loope
inc
dec
add
add
add
add
add
add
iret
add
mov
add
mov
add
add
add
adc
add
add
add
out
jae
lahf
sbb
cmp
xchg
mov
jg
jecxz
arpl
lret
cmp
dec
pop
iret
jp
mov
in
push
xchg
insb
ret
mov
ljmp
subl
out
jne
mov
jns
xchg
sub
sub
gs
mov
jp
daa
addr16
cmp
jg
xchg
pop
add
xchg
or
mov
jp
fucompp
inc
cmc
clc
sahf
rcl
pop
test
xor
aaa
fisubs
lahf
xchg
je
add
loop
jo
inc
mov
ret
or
push
push
stos
sbb
outsb
cmp
imul
sub
ljmp
adc
pop
pop
int
je
mov
xchg
faddl
pop
mov
push
cmp
in
jb
lret
mov
mov
cmp
mov
cwtl
inc
out
jg
xchg
movsl
in
xchg
data16
or
inc
sbb
arpl
jnp
out
mov
testl
jmp
add
jb
sahf
sub
cld
pop
cmc
dec
push
ja
xor
push
ds
icebp
imul
mov
adc
cld
into
je
add
sbb
notl
out
inc
and
hlt
push
lods
dec
cmpsb
loop
add
jle
ljmp
pop
loop
cmc
call
add
xor
or
mov
cmc
sti
inc
cmp
push
adc
push
cmova
sbbb
jge
mov
lahf
and
call
mov
imul
nop
pop
add
dec
xor
mov
pop
subl
adc
jne
cli
pop
hlt
pop
outsl
sub
notl
xchg
repnz
inc
fiadds
ljmp
mov
shlb
mov
hlt
fidivrs
mov
mov
popf
sub
or
pop
adc
inc
mov
push
pusha
mov
into
jecxz
aaa
xchg
rclb
iret
leave
bound
lret
mov
loop
lds
cli
imul
jns
pop
push
insb
dec
push
rorl
sbb
xchg
xor
neg
push
fidivs
cmpsl
xor
adc
movsl
lret
xchg
xchg
jmp
inc
inc
repnz
push
movsb
negb
sbb
fsubl
cli
icebp
jp
je
and
daa
popf
or
xchg
push
test
mov
outsl
aam
jmp
sarl
mov
arpl
leave
or
xchg
xlat
lret
jg
lea
test
mov
fidivrl
jg
and
xchg
and
xlat
or
mov
jmp
enter
cmp
ljmp
dec
fdivrp
ret
xchg
aas
lcall
adc
pop
lret
mov
enter
pop
or
repnz
cli
mov
adc
push
das
pop
xor
test
lea
daa
xor
inc
xchg
xchg
loop
fiadds
cmpsl
sub
inc
mov
push
inc
aaa
mov
add
cmc
push
inc
hlt
shll
in
ret
xor
scas
mov
pop
jp
loop
mov
pop
pop
loope
xlat
faddl
out
fs
daa
cli
fldl
or
nop
rorb
jle
jmp
jecxz
adc
clc
dec
sbb
js
push
movsl
in
sub
inc
outsb
leave
dec
pushf
mov
pop
cs
push
idiv
xchg
inc
mov
scas
dec
push
pop
call
out
mov
fwait
dec
jl
outsb
pop
popa
mov
scas
or
inc
cs
subl
or
stc
jmp
ficompl
fmulp
movsb
adc
repz
pushf
loope
aad
ficoms
enter
pop
mov
add
aas
pop
xchg
cmp
divb
rcrl
hlt
xchg
in
out
mov
inc
mov
test
loope
mov
out
jecxz
push
clc
stos
pop
popa
xchg
lret
push
mov
cmpsl
mov
repz
inc
inc
inc
cmpl
in
pop
call
adc
mov
mov
jnp
sub
lds
arpl
movsb
test
loop
repz
xorb
nop
or
mov
shrl
in
aam
in
cmp
imull
cld
movb
xor
jne
jle
jp
fs
xor
xor
sti
rclb
pop
xor
cld
or
imul
dec
mov
mov
jmp
dec
jecxz
fstpl
mov
push
xor
lods
ss
sbb
or
pop
mov
pop
dec
arpl
sbb
add
cmp
in
popf
repnz
negb
iret
sub
insb
out
mov
inc
add
mov
dec
mov
xlat
fiaddl
pop
xchg
push
xchg
pop
fwait
lds
scas
popa
pushf
pop
rcl
or
dec
pop
in
out
jge
xchg
enter
enter
mov
push
xlat
mov
fwait
dec
outsl
popf
xor
add
pop
jno
fmull
insl
and
adc
or
pop
imul
jo
pop
and
sbb
sti
xor
adc
sub
adc
adc
push
outsl
cltd
lock
loop
in
push
sub
mov
xor
fisttps
imul
mov
or
daa
lea
aas
add
mov
mov
andb
xchg
mov
stos
jp
mov
cmpl
gs
out
cld
and
push
and
pop
testb
lcallw
cmp
push
mov
xchg
rcll
lods
xor
dec
xchg
xorl
add
outsl
test
fsub
push
cmp
push
arpl
jg
ret
bound
dec
mov
mov
inc
jno
xchg
and
jo
push
pushf
ds
pop
cs
dec
iret
pop
js
inc
in
push
clc
in
lods
mov
mov
mov
movsb
fimull
aad
jae
jae
mov
sub
aaa
cmpsl
outsl
push
int3
lcall
sbb
mov
test
inc
arpl
shrl
fwait
movsl
testb
dec
pop
movsb
out
aaa
or
rcll
jl
and
int3
jae
lret
mov
std
cli
adc
or
rcrl
push
xchg
cltd
push
mov
ljmp
cltd
test
leave
jb
lds
dec
jb
movsb
push
and
inc
add
mov
out
lea
mov
or
jnp
arpl
push
and
int3
es
loopne
leave
outsl
mov
xor
data16
lods
ss
cmpsb
mov
inc
mov
fisubl
cmp
sub
call
xchg
and
jmp
push
call
mov
push
dec
rcl
xchg
pusha
fisubs
pop
fcomi
insl
stc
scas
cmpsb
and
jmp
sahf
mov
dec
mov
inc
test
movsl
arpl
fldcw
imul
sar
stos
dec
shrl
in
add
outsl
lods
dec
and
sub
push
and
incl
and
inc
icebp
clc
push
negl
jge
scas
jns
push
adc
jmp
rcrl
clc
jle
mov
pop
stos
bound
cltd
push
adc
and
or
inc
iret
cld
cli
aad
ret
loopne
loope
jb
addr16
jp
clc
sti
pop
out
fidivs
stc
mov
jne
int
sub
rorb
aas
jo
ret
push
pop
mov
jbe
cs
lods
dec
shrd
xor
rcrl
stos
pop
daa
and
jle
daa
mov
out
cmovne
push
cmp
jo
cmp
outsb
cld
fwait
in
gs
dec
pop
push
outsl
jbe
xchg
xchg
adc
and
jne
push
sbb
scas
or
push
mov
pushf
out
mov
loopne
inc
scas
push
push
popa
jmp
cmp
incb
insb
adc
hlt
jp
js
enter
jp
add
shr
imul
mov
jb
pushf
push
std
ds
movsl
push
in
dec
lock
int3
les
sub
jp
inc
mov
pop
mov
mov
jb
lds
pop
stos
adc
and
add
shl
add
out
mov
outsb
sbb
xor
add
aas
pop
movsl
cmp
out
xor
mov
std
lods
mov
lods
outsb
mov
bound
les
fistl
ljmp
push
jno
jle
popf
push
stos
shrb
mov
inc
pop
push
adc
stc
stos
mov
imul
xchg
ret
pop
xchg
sbb
lock
cmpb
mov
test
fldl
lcall
mov
jle
jae
and
aad
cmp
lea
push
lods
enter
mov
test
jmp
xchg
jbe
shll
xor
add
shrb
mov
stos
lcall
iret
fnstcw
pop
pop
inc
out
mov
enter
je
mov
lea
jno
xchg
mov
fsubl
stos
pop
inc
jmp
mov
movsb
and
push
loopne
add
pop
jno
shl
int
sbb
mov
jge
fwait
jmp
js
and
lds
negl
sbb
mov
pmulhuw
popa
pop
leave
loope
jp
add
sbb
xorb
push
bnd
mov
fcompl
lcall
mov
fldl
dec
xor
imul
xchg
cli
or
lret
hlt
or
ficompl
mov
ss
mov
rclb
or
enter
stos
mov
rcll
lret
das
insb
stc
dec
loopne
lods
insl
fstps
stos
push
pop
aas
jmp
fistl
jge
cmc
daa
iret
das
mov
sub
mov
push
mov
pusha
mov
in
jno
push
in
jo
push
sub
cld
mov
mov
out
int
jge
lea
jno
pusha
into
lea
sbb
xor
enter
fcmovne
lods
jns
popa
cmp
xor
add
test
sbb
xor
mov
imul
mov
mull
mov
hlt
pop
sub
mov
testl
dec
or
mov
xchg
xchg
outsl
test
jnp
inc
inc
pop
push
add
mov
repnz
popa
xchg
xchg
pop
je
jbe
je
jne
sti
sbb
mov
adc
cli
sub
mov
adc
jp
into
mov
mov
xor
in
xchg
cmpsl
jne
add
dec
and
jle
mov
jle
jo
out
test
sti
adc
adc
adc
leave
sti
loop
test
and
and
or
dec
imul
ficompl
dec
outsb
pop
xchg
movsl
xlat
cmpsl
inc
cltd
cwtl
les
adcl
adc
insl
test
inc
push
mov
pop
cmpsb
xchg
dec
push
fmul
sbb
iret
and
jp
stos
mov
fs
cli
jns
adc
push
aaa
bnd
in
or
lods
mov
inc
and
das
imul
cmpsl
rorl
loopne
push
sub
mov
mov
push
movsl
pop
loopne
push
sbb
and
dec
repnz
mov
out
jmp
inc
jae
pop
sub
hlt
dec
hlt
mov
push
pop
xchg
jp
mov
sub
pop
lds
daa
ja
pop
sbb
pop
std
xor
mov
and
xchg
inc
cmc
pop
movsl
aam
pop
scas
fstps
arpl
cltd
stos
inc
insl
call
pusha
mov
sub
adc
ror
cmp
negb
popf
out
mov
movsl
jmp
lock
inc
lcall
bnd
outsb
xor
sub
and
ja
push
dec
lds
loope
jae
addl
pop
sbb
out
jo
inc
pop
jp
rcrl
and
jg
jge
and
js
fs
cmp
inc
loop
packssdw
rolb
mov
mov
pop
dec
in
jge
push
addb
mov
xchg
in
push
xor
push
mov
push
rclb
add
or
adc
loop
stos
mov
std
sahf
call
pop
jbe
in
pop
pop
sub
sub
out
pop
xchg
cld
xchg
pop
out
fcom
insb
sub
loope
testl
mov
xchg
jmp
dec
aas
movsl
cmp
xlat
icebp
fisttpl
in
push
push
out
inc
mov
adc
nop
out
push
ret
push
and
cmp
ss
lret
imul
and
cwtl
dec
rolb
mov
imul
ficompl
or
lods
cmc
leave
and
xor
xor
jo
xchg
add
adc
out
xor
fcmovnu
mov
mov
mov
lock
push
sbb
xchg
testb
dec
insl
fiaddl
mov
aad
divl
outsb
cmpsb
adc
inc
repnz
pop
and
rcrl
pushf
xchg
mov
ret
or
nop
cmpsb
dec
imul
sub
xor
cmc
jmp
fwait
sbb
insb
adc
push
sbb
pop
and
fs
fimull
subl
scas
nop
jle
jbe
sub
mov
fwait
insb
incb
dec
loopne
push
js
push
stc
sbb
sbb
mov
mov
imul
adc
jbe
ja
and
rcrl
loopne
lds
xor
xorb
aas
push
cmp
les
or
scas
ret
jl
push
clc
jmp
mov
xchg
lret
enter
iret
je
cmp
mov
cmp
or
push
or
sarb
fiadds
nop
sbbb
mov
sub
pusha
insb
pop
sub
lods
cmpb
mov
mov
out
adc
xor
cmp
iret
cmp
lock
cmc
outsl
inc
add
cmp
sbb
pushf
ds
add
mov
ljmp
or
inc
xor
dec
lods
jae
movsb
inc
mov
int
les
inc
mov
mov
sub
inc
add
lods
out
inc
imul
addr16
cmp
pop
xor
sub
cmc
movsl
mov
shll
movb
std
add
psrlw
and
pop
adc
or
adc
sbb
xor
xor
fwait
int3
xchg
mov
push
cmpl
mov
stos
les
imul
test
test
dec
pop
xchg
lods
mov
cmpsb
and
mov
hlt
sahf
mov
outsb
or
aas
bound
mov
add
inc
push
sub
dec
and
pop
or
mov
std
daa
enter
lret
mov
sti
lcall
inc
mov
sahf
cmp
fbld
imul
sbbl
sbb
into
pop
jne
lret
popf
push
test
jnp
sub
mov
ja
jp
cs
aas
push
ja
fneni(8087
js
hlt
mov
dec
int3
pop
dec
roll
pop
mov
jle
jnp
mov
scas
popf
cmp
jmp
out
pop
lock
jecxz
xchg
mov
clc
sbb
fnsetpm(287
test
mov
hlt
pushf
jmp
and
out
daa
or
jo
lret
jae
int
jne
fistps
mov
jno
cmp
andb
xor
imul
pop
adc
shlb
popa
arpl
dec
lret
test
stos
lea
sbb
mov
xchg
lods
imul
cmp
dec
loope
mov
pop
lock
fwait
jp
pop
nop
xorb
and
ret
xor
mov
mov
std
je
es
lahf
dec
in
add
pop
push
leave
mov
icebp
dec
cmpsl
mov
jmp
ret
pop
mov
add
adc
loope
jb
test
fisubrl
push
lcall
pop
sub
cmp
aam
ds
scas
xor
test
loop
cmpsb
es
test
icebp
push
mov
sub
xor
icebp
stos
adc
mov
jb
lods
pop
cmp
cli
push
lahf
out
or
xlat
and
shll
mov
mov
loopne
cmc
jae
xchg
movsb
shrl
unpckhps
cmp
push
cltd
adc
mov
mov
xchg
std
movsl
mov
add
add
or
jge
cmp
std
int
adc
data16
adc
or
pop
mov
leave
int3
ljmp
insb
sbb
dec
xor
mov
jge
cltd
push
or
stos
mov
lods
sbb
mov
mov
inc
jle
hlt
fs
leave
xorl
pop
decl
repnz
adc
ja
jg
sbb
sahf
mov
add
cmp
icebp
push
mov
test
cmpsb
pop
dec
subb
dec
jg
fwait
jnp
mov
imul
pop
sbb
sahf
fwait
cltd
inc
out
adc
ret
sub
sbb
jp
fiadds
fstpt
aas
icebp
or
xor
outsl
iret
fs
or
adc
push
pop
jle
andl
cld
rcl
outsb
clc
fmul
and
mov
xorb
jbe
push
xlat
cmpsl
pop
sti
sub
xor
mov
pop
jns
pop
adc
dec
arpl
and
push
lcall
out
insl
dec
and
test
je
insb
mov
sub
and
lods
ljmp
sub
insl
sbb
loopne
lret
addr16
out
fistpll
loope
mov
arpl
int3
loopne
mov
leave
mov
fdivrs
jmp
lret
pop
or
scas
mov
push
xor
ret
arpl
mov
out
aam
aas
icebp
sub
mov
pop
xchg
add
ffreep
sti
push
jp
ja
push
rclb
scas
sub
push
cmp
cmp
adcb
push
out
dec
mov
ret
loop
xchg
mov
outsb
mov
sub
mov
popa
cmp
jmp
cmp
addr16
pop
gs
insl
nop
stos
aas
push
lods
mov
repnz
ficoms
and
mov
cmp
inc
push
test
dec
popa
xchg
stos
inc
test
fcomip
lret
cmpsl
out
movsb
add
inc
or
ljmp
xchg
jp
mov
push
outsl
pushf
lret
repz
mov
xor
icebp
pop
sbb
push
enter
adc
cmpb
mov
jmp
filds
fs
mov
pop
jne
mov
mov
adc
mov
xchg
add
mov
sahf
jge
mov
sub
mov
adc
repnz
cmpsb
dec
mov
jp
adc
je
push
pop
mov
add
jae
cmp
cmp
lods
icebp
lea
xchg
add
push
add
add
add
out
add
roll
add
add
pop
add
xor
add
add
add
add
push
add
add
add
add
mov
add
add
add
or
in
in
lret
add
add
add
add
addb
stos
lahf
add
js
js
js
js
int3
int3
int3
int3
int3
int3
int3
int3
jae
jb
jo
add
add
add
add
add
or
add
add
add
add
test
add
add
add
popf
add
add
add
mov
add
add
pusha
add
xor
push
inc
add
sbb
sbb
sbb
sbb
sbb
sahf
add
test
add
js
add
outsl
outsl
pop
jb
add
outsl
jbe
push
movl
add
sahf
test
mov
test
movl
ret
incl
sub
xchg
mov
cld
add
in
add
push
call
cld
adc
testl
mov
in
push
std
jmp
cmp
std
add
ret
incl
mov
adc
and
incl
add
jno
add
mov
add
ljmp
push
decl
loopne
decl
int3
sbb
outsb
cld
push
add
lock
add
call
data16
stc
pushl
repz
or
pushl
add
adc
inc
adc
add
sbb
add
fiadds
pop
add
add
add
add
or
sbb
add
add
add
imul
imul
add
gs
je
inc
fs
add
jae
add
outsl
add
outsl
add
insb
dec
add
int
inc
js
jne
popa
inc
outsl
add
imul
fs
mov
push
insb
push
add
add
add
add
jle
add
add
add
add
add
std
add
add
add
pop
add
lea
dec
mov
int3
xlat
sbb
xor
mov
mov
cmc
cmp
mov
mov
inc
xchg
push
add
fsts
call
and
mov
cwtl
or
aas
bnd
push
movsb
enter
enter
push
add
dec
mov
fldenv
jb
scas
adc
cs
sbb
loope,pt
cmp
movsl
inc
into
in
push
mov
dec
aam
stc
mov
lahf
flds
inc
ss
pop
dec
jle
mov
mov
xlat
cli
into
cmp
add
or
mov
rolb
imul
sahf
test
mov
int3
jns
rcrl
sbb
xor
xor
add
idivl
aas
or
xchg
sbb
jecxz
ret
sub
mov
mov
adc
loopne
lock
mov
adcl
mov
push
adc
mov
out
mov
movsl
xchg
or
add
inc
shll
xor
lods
pop
add
add
add
cmc
outsl
jne,pt
enter
loop
or
jge
in
jo
repnz
cltd
jae
sub
push
add
push
stos
in
in
sub
sub
xlat
aam
data16
mov
jo
mov
mov
in
pop
stc
xchg
and
popf
cltd
jmp
xor
mov
hlt
rep
sti
imul
rol
xor
add
mov
call
loope
sub
mov
pop
xchg
cmc
push
arpl
lret
dec
pop
rorb
push
scas
repz
adc
and
jge
sbb
cmpl
es
enter
xor
dec
test
xchg
sub
sub
popa
scas
test
js
hlt
jg
jecxz
xchg
js
aaa
cmp
out
test
iret
in
adc
add
ljmp
jo
adc
js
fstps
and
sbb
and
jb
cmpsl
shr
cltd
and
mov
iret
scas
mov
mov
test
test
dec
push
jl
iret
int3
mov
inc
or
xor
aas
pop
int
add
negl
cltd
lret
inc
push
xchg
nop
cmpsl
cmovge
stos
dec
add
mov
lods
inc
xor
pop
and
jge
insb
fnstcw
repnz
lahf
sub
testl
ret
sti
int
subb
sar
jp
jecxz
mov
out
xor
add
rclb
lret
lahf
jb
mov
sti
sub
shlb
sub
mov
stc
sub
das
push
and
or
pop
fs
add
xchg
stos
sub
pop
cs
adc
orb
push
clc
ret
shrl
mov
ljmp
sbb
jno
inc
xchg
fcoml
es
lret
mov
lock
inc
popa
imul
call
movsl
pop
lcall
cmp
jnp
clc
inc
add
jp
ds
leave
xchg
mov
rorb
or
lret
mov
popa
or
add
dec
call
lods
cmp
mov
ss
out
push
cmp
mov
repnz
enter
fucom
pop
outsb
push
inc
lret
leave
sub
dec
rcrl
nop
fbstp
cld
and
popf
mov
mov
les
push
inc
cld
mov
dec
lods
mov
adc
cmpb
test
jbe
imul
pop
fbstp
les
in
mov
jbe
mov
sbb
or
sbb
pop
inc
pushf
inc
ret
xor
inc
inc
xchg
sub
cmpsl
mov
xor
mov
adc
imul
in
stos
aam
push
xlat
ss
jge
jno
mov
insl
call
sub
imul
inc
stc
out
decb
and
pop
and
push
cmp
jmp
scas
shrl
lcall
jnp
ljmp
lods
cmc
out
test
call
cmc
cmpb
push
xor
js
ljmp
push
xchg
hlt
mov
add
push
clc
pop
insb
and
mov
or
mov
dec
inc
dec
xchg
mov
repnz
dec
pop
fwait
dec
out
jo
nopl
addl
mov
mov
xor
pop
dec
push
and
dec
cld
jmp
mov
mov
test
mov
or
movsb
cs
jne
xlat
arpl
jbe
and
add
xchg
lods
cltd
in
and
inc
push
das
cmp
fidivrl
iret
ret
scas
pminsw
shlb
jle
xchg
rorb
or
adc
subl
jb
mov
addr16
out
jne
lret
inc
mov
outsl
pop
sahf
mov
std
xchg
aaa
std
mov
xchg
fists
subl
ss
test
loop
mov
stos
and
adc
xor
mov
xor
xor
insl
fs
pop
cmp
and
xchg
mov
out
fsts
mov
outsl
lahf
pop
sbb
xchg
cmp
adc
jne
cmp
mov
sbb
or
push
clc
sbb
mov
std
adc
in
mov
ja
stos
idivl
stc
mov
popf
dec
jne
ja
out
sbb
push
jnp
sub
xorb
push
std
or
testb
xchg
xor
insl
stos
popf
iret
movsl
and
mov
cld
or
jecxz
or
mov
mov
push
jno
inc
pop
add
mov
cmp
push
inc
mov
push
lods
push
push
push
dec
and
pop
leave
sub
mov
xchg
cmp
cmp
pop
push
push
cmp
dec
test
enter
ret
fwait
scas
decl
cmp
iret
sarl
push
xchg
cmp
dec
data16
std
sub
aaa
lods
loopne
divb
call
mov
popf
imul
pop
lods
imul
cmp
aam
jmp
mov
cmp
dec
mov
out
clc
cmpsl
jae
mov
inc
cmp
in
lret
cmpsb
lret
orb
pusha
ret
or
out
jno
sti
xchg
shl
stos
fcomp
or
xchg
outsl
cmc
daa
mov
in
fnstenv
jle
aaa
xor
mov
into
cmp
ds
fsts
dec
push
push
cmp
out
outsl
mov
bound
in
jmp
imulb
nop
cmp
and
push
popa
mov
outsb
adc
sbb
jo
xchg
or
sbbb
xor
sub
jno
fdivrs
dec
cmp
mov
xchg
add
int3
test
mov
hlt
stc
ds
dec
stos
mov
jno
mov
roll
push
or
sub
jbe
add
inc
in
adc
fiaddl
pop
mov
and
xchg
out
test
ljmp
push
jae
or
and
pop
mov
push
testl
mov
int
loopne
pop
jmp
jns
and
push
dec
xchg
mov
mov
cs
outsb
cs
hlt
jo
adc
mov
test
mov
int
ret
cli
dec
xor
add
xor
insb
cmpb
fcompl
cmc
push
and
mov
cmc
adc
inc
mov
adc
movsl
dec
mov
mov
scas
ficoml
test
aas
xchg
jno,pn
xchg
loop
icebp
mov
xor
pushf
ss
sub
adc
movsl
jl
dec
sbb
inc
mov
pop
pop
imul
bound
add
add
push
addl
push
dec
adc
pop
int3
add
xchg
ret
cmp
loop
jns
in
repnz
jg
stos
movsl
jne
sub
and
movsb
lea
imul
test
mov
gs
sti
addl
repnz
test
sub
es
pop
xchg
push
xchg
test
shlb
mov
stos
xor
fistps
xchg
dec
mov
mov
aaa
fstpt
xchg
movl
xchg
bound
ret
pop
sub
dec
rcrl
stos
ret
lods
adc
mov
sub
lahf
dec
scas
jno
add
sub
aas
or
cmp
sarl
and
ljmp
xchg
jge
and
fsubrs
mov
cld
mov
cmp
sbb
lahf
or
mov
mov
popa
ret
es
pop
pop
jne
hlt
push
and
sub
push
inc
mov
mulb
dec
mov
adc
or
into
lods
adc
and
aam
into
push
mov
dec
sbb
stc
mov
mov
sbb
loopne
cmp
xlat
cmp
jle
mov
mov
jbe
add
or
cmp
xor
lods
and
shlb
push
jecxz
cmp
aas
pop
push
inc
adc
cwtl
inc
mov
fildll
dec
push
sbb
fwait
adc
lods
lock
in
hlt
xor
and
movsb
inc
fsub
rolb
mov
pop
xorl
jae
fisubrl
mov
in
add
out
or
cmp
stos
lret
adc
sahf
cmp
js
jo
cmpl
nop
cmpsb
nop
push
inc
mov
leave
pop
push
popf
test
dec
mov
add
jecxz
and
orb
aas
jge
push
rcll
and
int
add
cmpb
adc
bound
lds
dec
int3
fs
daa
cltd
mov
mov
fdivrs
flds
insl
sbb
xor
mov
pop
movsl
cwtl
dec
insl
stc
pop
ret
add
adc
dec
lahf
cltd
mov
push
xor
enter
push
aaa
ror
test
jmp
call
int3
mov
daa
add
cmp
jns
ret
xchg
lods
das
mov
mov
scas
or
repz
pop
test
and
dec
mov
iret
pop
cmp
ret
jns
sbb
or
test
or
dec
mov
lods
icebp
pop
cmp
sub
lret
or
repnz
mov
inc
and
adc
lea
es
pop
push
aam
lds
xor
mov
roll
ds
arpl
in
enter
jl
aas
jo
xor
mov
pop
aaa
jo
jae
add
setae
jno
lret
enter
dec
dec
xor
mov
shll
pop
push
je
mov
fstp
das
pop
lcall
or
addr16
cmpsl
cmp
cmp
mov
push
outsl
test
pop
add
fwait
pop
sub
in
lret
jbe
sbb
addr16
outsl
push
xchg
mov
inc
out
jnp
cmp
xor
cltd
mov
into
hlt
sub
nop
aam
imul
jge
js
daa
cmp
xor
out
ds
in
xor
add
add
adc
add
aam
loop
cmp
mov
mov
fnstsw
repnz
or
scas
mov
and
lea
dec
mov
lea
imul
imul
ror
mov
mov
shrl
and
jns
imul
lcall
out
je
push
test
subl
jl
xchg
or
or
xor
cmp
fstpl
nop
and
js
sarb
cld
jmp
icebp
dec
pop
mov
mov
stos
inc
push
xor
fistl
add
fisubl
mov
lods
mov
mov
je
xchg
fwait
dec
dec
sbb
jae
call
ljmp
test
icebp
xor
push
xchg
ret
mov
dec
dec
cmp
sbb
or
cwtl
xor
push
lods
je
jo
jmp
jg
pop
aam
in
test
and
aas
jns
sar
lods
call
insl
repnz
sbb
jge
stos
ficoml
daa
jecxz
loop
adc
sar
popl
sahf
lods
ds
push
pop
xchg
test
xor
or
dec
imul
jmp
mov
inc
fwait
hlt
call
mov
adc
add
arpl
push
xor
std
fcomip
mov
sarl
mov
int3
or
add
aaa
popf
lock
mov
jl
or
mov
loopne
dec
sub
fisubrl
push
or
sub
mov
pushf
mov
cwtl
lcall
and
push
sub
jp
mov
inc
sti
add
lea
bound
push
push
lahf
inc
jp
sti
cmpsb
fisttpll
or
or
pushf
and
ds
movl
add
adc
mov
cli
or
xchg
mov
pop
jnp
inc
daa
pop
sub
aad
aad
aaa
arpl
xchg
add
aad
sub
add
rcrl
shrl
fldt
fdivs
mov
pushf
jge
jae
insb
imul
mov
adcl
fsubrl
xchg
pop
pop
repnz
sti
iret
cmp
inc
rol
mov
jno
jge
cmp
push
add
test
mov
and
push
es
ss
jae
arpl
adc
cs
mov
fildll
mov
pushf
mov
insl
cmp
shlb
and
loop,pn
mov
lds
sub
cmp
fwait
xchg
andl
mov
stc
gs
arpl
clc
hlt
lret
decb
sbb
and
sbb
dec
push
out
scas
xor
out
jl
in
loope
adc
mov
push
outsb
cmp
pushf
push
mov
or
sbb
fidivs
mov
sti
aas
lods
lret
fnstsw
add
shll
mov
add
or
lods
cwtl
movsb
mov
adc
dec
inc
das
pshufw
inc
mov
aad
test
mov
lret
xchg
imul
arpl
popa
mov
aas
add
pusha
aas
mov
sbb
jmp
enter
adc
lcall
outsl
inc
push
lcall
pop
sbbb
cmpsb
push
outsl
or
scas
push
daa
movsb
das
pop
fs
mov
lock
rcrl
add
jno
mov
or
mov
dec
sub
cld
and
shl
jnp
lcall
xchg
rol
sbb
add
push
lods
push
or
adc
adc
fbstp
ss
outsl
and
mov
jo
inc
data16
lods
lods
inc
pop
lock
lods
fnstsw
shll
jnp
cmp
mov
xchg
jmp
pop
jae
pop
xor
ja
movsl
ficompl
inc
insl
or
and
sub
and
adc
sti
fwait
ja
cmp
and
mov
pop
and
or
pop
jmp
loopne
adc
fisttpll
lock
imul
loopne
xchg
clc
sub
mov
pop
cwtl
clc
push
mov
pushf
cli
cmc
push
mov
push
mov
dec
dec
es
std
or
and
aaa
test
inc
iret
ja
fildll
mov
push
call
add
add
xor
cmp
push
lds
ljmp
lahf
inc
xor
mov
dec
scas
mov
movsb
popf
sbb
or
pop
pop
out
shlb
pop
ud2
fwait
and
pop
mov
sahf
sarb
repz
dec
push
add
jae
std
out
mov
lods
repz
push
dec
sub
fcomps
stos
sub
xor
outsb
es
fnsave
pushf
mov
rol
loop
adc
fsubrl
inc
jmp
outsl
cmp
or
mov
pop
fdiv
loop
inc
aaa
sub
stos
leave
in
push
inc
push
insb
and
outsl
nop/reserved
enter
sub
mov
mov
mov
daa
dec
xor
test
stos
cmp
xor
rcll
dec
int
insb
mov
dec
jecxz
pop
mov
and
fwait
xchg
push
pop
outsl
mov
in
and
xlat
cmp
jmp
out
in
adc
or
add
sbb
scas
inc
mov
aaa
hlt
das
cmp
lea
call
test
pop
inc
and
test
addr16
pop
iret
adc
mov
bound
cmp
dec
jge
push
das
pop
mov
test
loop
pop
nop
aam
dec
xor
mov
jae
lret
aaa
popa
pop
cld
xchg
dec
movsl
mov
outsl
xchg
mov
adc
xlat
cmp
movsl
mov
mov
out
add
sarl
jl
mov
jp
gs
fcmove
jne
cli
popf
insb
sub
dec
data16
inc
mov
cmc
arpl
and
repz
test
push
adc
fs
into
or
xchg
push
mov
arpl
or
stc
filds
lahf
outsl
inc
sbb
je
xlat
xchg
repz
fstpl
fstpt
add
mov
ds
mov
ljmp
mov
in
push
pusha
shrl
add
mov
jmp
or
and
mov
insl
xor
xchg
and
or
lret
jl
xchg
popf
lret
push
adc
lahf
mov
fstpl
jle
repnz
fiadds
or
pop
fwait
out
pop
mov
in
mov
int3
cld
xor
mov
pop
mov
push
push
adc
jae
pusha
daa
xchg
sub
add
xchg
jmp
cmp
xchg
andl
cmp
push
mov
notb
jns
addr16
pop
lods
ss
and
or
arpl
fisubl
or
push
loope
loop
add
ljmp
lods
dec
jne
cmp
stc
cs
lret
das
and
xor
xchg
push
cmp
jg
mov
decl
out
inc
cltd
jg
sub
lcall
lret
in
cmp
inc
jae
xchg
push
ret
imul
inc
mov
cmpsb
repnz
dec
lds
adc
scas
jecxz
icebp
xlat
pop
push
getsec
mov
int
xchg
scas
es
push
setp
ja
mov
gs
orb
es
sub
daa
dec
cltd
stos
js
adc
add
add
mov
add
sahf
add
dec
add
add
add
out
add
fldl
add
add
add
add
add
add
or
add
add
add
add
pop
add
add
add
add
add
lea
add
add
add
addb
add
mov
add
ja
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
test
imul
add
adc
adc
add
popl
cmp
adc
fiadds
or
add
add
add
jb
add
add
add
ret
add
add
add
add
add
add
add
movsb
add
imul
je
jb
outsl
pop
dec
push
jo
lahf
insb
addr16
enter
jecxz
out
popa
fcmove
dec
or
clc
inc
mov
add
dec
add
push
ljmp
std
incl
lcall
pusha
add
clc
push
pushf
or
xor
mov
pop
pop
add
push
add
push
call
jge
mov
pop
add
push
add
add
test
ljmp
cmp
test
test
xor
pop
rolb
orl
push
test
call
push
push
add
xbegin
repnz
lea
add
push
mov
loopne
add
adc
sbb
add
mov
add
sbb
add
sbb
sbb
sbb
sbb
sbb
and
add
je
imul
popa
and
add
add
add
add
add
xchg
insb
gs
imul
inc
dec
js
push
xor
je
das
add
add
jo
add
je
add
outsl
sahf
insb
inc
dec
xor
add
adc
add
add
in
add
add
add
add
and
add
mov
movsb
scas
lods
int
sub
fidivrl
push
cwtl
push
fsubrs
pop
or
or
pop
std
dec
punpckhbw
jge
jns
sahf
testl
sbb
inc
ret
scas
test
xor
enter
cli
shll
jle
iret
es
add
clc
xchg
stc
sahf
pop
mov
mov
adc
inc
add
pop
notl
add
std
shl
mov
dec
je
in
push
xor
mov
sbb
std
pop
jno
test
or
jbe
sub
pop
cmp
add
jae
cmpsb
xchg
or
push
std
jae
mov
pop
sbb
sub
jae
negl
inc
lcall
jno
xchg
jg
nop
add
jns
dec
adc
dec
notl
out
cmpsb
sbb
ret
mov
push
aam
push
cltd
jg
dec
sbb
xor
icebp
or
sub
cmp
roll
and
xchg
adc
xchg
jg
push
loopne
cwtl
xlat
pop
inc
inc
mov
pop
test
je
inc
add
push
in
fcompl
outsb
pop
jge
adc
push
rclb
rol
mov
xor
dec
xchg
mov
xchg
mov
sub
push
jae
mov
mov
add
bound
and
lahf
repz
xchg
arpl
bound
out
dec
mov
mov
and
jns
lock
xor
dec
dec
xchg
repz
popa
enter
mov
mov
inc
je
jae
fcmove
cmp
adc
aas
jge
cwtl
outsb
outsl
push
aas
cmc
mov
sub
xlat
test
outsb
ljmp
ja
es
inc
mov
sub
sub
jae
stos
or
mov
cs
inc
fmuls
inc
adc
fs
push
mov
sbb
pop
in
hlt
pop
jbe
popa
xchg
stos
jg
sbb
pushf
arpl
or
insl
daa
leave
pop
sbb
add
sbb
xor
std
cwtl
icebp
push
stos
inc
mov
imul
aas
pusha
fnsave
cmp
adc
and
jl
or
fldl
jbe
ds
push
pop
int
fdivr
ljmp
int3
mov
and
clc
dec
xor
cmc
repz
loop
ljmp
adc
icebp
adc
pop
sub
lcall
aas
adc
pop
mov
in
mov
testb
or
inc
int
in
in
adc
jg
aaa
mov
fdivrp
add
jecxz
das
or
notl
subl
pop
mov
sub
and
fstps
cltd
arpl
sub
mov
test
sub
add
test
push
lret
fs
lds
mov
repz
push
mov
add
mov
lcall
stos
nop
jns
sbbb
ljmp
or
popf
popa
and
test
sbb
adc
and
pop
iret
test
pop
mov
subl
add
out
mov
or
inc
imul
pop
add
lds
push
xor
outsl
imul
mov
inc
push
push
adc
imul
push
mov
pop
mov
insl
js
add
ret
mov
mov
mov
lds
cwtl
or
inc
fildll
test
jb
xchg
and
dec
dec
lds
and
xchg
shrb
inc
or
push
movsl
xchg
test
stc
and
inc
pop
inc
adc
inc
jb
push
mov
ds
dec
pusha
mov
cli
imul
cmc
or
rcll
or
or
aaa
scas
fwait
dec
ja
test
es
jge
xchg
pop
dec
pop
jle
in
test
adc
int3
mov
and
mov
and
jl
sbb
and
cmpsb
xchg
add
xor
xchg
adc
out
outsb
popa
sbb
jecxz
jp
and
or
sub
in
lcall
jge
sub
lret
test
stos
test
or
mov
jp
inc
or
and
or
and
mov
adc
lock
lods
adc
mov
mov
int
adc
dec
out
es
inc
ja
push
xchg
rolb
ret
mov
sbb
insb
sbb
inc
and
mov
loop
repz
ja
mov
lcall
in
xchg
rorl
gs
cld
daa
rolb
and
movsl
jge
mov
pop
xlat
adc
add
and
xor
sbbb
iret
inc
xchg
mov
cmp
sarl
sub
adc
leave
xchg
cmp
lahf
addb
cmpsb
adc
enter
jbe
mov
push
xor
cmp
push
insb
lods
insl
cmp
inc
or
mov
xor
adc
inc
bound
push
movsl
mov
cwtl
push
fxch
adc
push
dec
adc
rcl
adc
cmp
loope
dec
inc
repnz
fdivrp
jp
test
fwait
test
jne
movl
mov
adc
push
es
jnp
orb
sub
pop
push
mov
test
outsl
sub
mov
lea
out
outsb
sub
pop
or
test
scas
sbb
jecxz
ret
test
insb
ficomps
pop
lahf
lret
cmp
repnz
and
mov
sti
jns
xor
xchg
sub
scas
sbb
leave
add
cld
push
push
or
popa
mov
out
int
xor
cmp
out
sarl
fiaddl
inc
cmp
addl
inc
enter
stos
inc
push
add
dec
mov
or
fwait
adc
rcr
push
popa
and
les
out
jbe
cltd
cs
aaa
lds
pop
push
bound
fdivl
data16
mov
sbb
xchg
mov
or
mov
sbb
pop
call
pusha
aad
in
in
test
cs
mov
dec
scas
movsb
scas
push
fidivrs
xchg
pop
jno
push
and
push
fsubl
pop
pop
sbb
or
xor
mov
sub
jbe
repnz
into
cltd
adc
jg
lods
pop
cld
sbb
jl
mov
les
std
shlb
sub
addl
cmpb
gs
cmp
cmp
daa
push
xor
mov
inc
cltd
or
sub
cmp
pop
sbb
or
add
ljmp
insb
mov
in
dec
or
aas
jl
lock
pop
fisubs
sarl
addr16
ret
push
outsb
mov
pop
jg
adc
or
xlat
mov
push
sbb
mov
loopne
lds
pop
movsb
ret
js
test
cwtl
mov
xor
xchg
cmp
fs
lahf
pop
jecxz
adc
fwait
pop
fld
pop
push
push
pushf
inc
jns
sub
xchg
shl
xlat
sti
fs
jb
outsl
jg
rclb
xchg
rcrb
rcrl
jge
lods
fbld
in
dec
outsl
loope
push
rolb
sbb
fcomip
mov
lods
pop
nop
cmc
jecxz
fnstenv
arpl
or
mov
rcrl
cmp
xor
and
popf
adc
pop
add
in
add
xor
pop
les
cmp
imul
mov
test
out
in
test
call
mov
aad
in
push
and
stos
mov
pop
call
inc
sbb
or
aaa
xchg
mov
push
mov
inc
popl
int
stc
fmull
inc
push
cmp
lcall
inc
inc
inc
adc
mov
xor
gs
popa
inc
adc
mov
test
mov
xor
inc
dec
jb
fwait
jne
push
sbb
insl
xchg
or
and
mov
aam
int3
sub
xchg
inc
pop
movsl
add
loopne
adc
add
cmp
stos
add
ja
push
xchg
sbb
popa
test
sub
adc
sub
andl
bnd
enter
loop
test
icebp
out
inc
cmc
xor
jge
push
shl
mov
jmp
cltd
mov
stos
sbb
mov
pop
lods
flds
int
xor
adc
or
sub
jg
xorb
push
test
mov
out
jb
sbbb
xor
dec
xchg
outsl
and
lcall
adc
addr16
test
or
xor
pop
jo
mov
out
pop
fld1
inc
call
mov
in
dec
push
push
rorb
sarb
mov
cltd
push
scas
add
cmpsb
dec
mov
and
or
adc
pop
stc
xchg
mov
fmuls
sahf
mov
adc
cwtl
fstpt
xchg
inc
adc
cmp
movsl
outsb
bound
sbb
xor
in
es
inc
xchg
fstp
cmpsl
cmp
lret
mov
outsl
stos
mov
jbe
jecxz
xchg
mov
jo
ljmp
dec
and
cmp
adc
sbb
or
data16
movsl
dec
mov
mov
fisttpl
std
mov
dec
push
insb
dec
add
icebp
addb
jns
call
cmp
and
in
mov
lods
mov
push
push
jbe
stc
xlat
pop
push
jmp
pop
sbb
daa
shll
in
cs
jno
cmp
jmp
inc
out
cmp
addr16
aam
cmp
mov
lock
inc
inc
xchg
fwait
push
and
xchg
and
xor
daa
jns
mov
cmp
sub
loop
cmp
das
pushl
sub
pop
stc
int
adc
jmp
add
in
xor
nop
mov
mov
ja
pop
leave
mov
ret
xor
cmpsl
paddsb
fildl
jo
or
shrl
js
push
out
addr16
loop
aad
insl
mov
push
jg
jb
popa
pop
jg
in
dec
push
ds
lods
mov
cmp
test
or
fisubrl
add
add
mov
xchg
dec
aas
add
push
jbe
call
lods
push
jne
and
sbb
insb
test
xchg
jle
repnz
pop
inc
sbb
push
mov
or
movsb
out
and
or
aaa
leave
in
insl
daa
adc
cmp
cmpsl
in
in
insl
xor
mov
in
es
cltd
out
ds
addr16
inc
jle
push
xchg
cmc
dec
push
cmp
fcmove
lods
push
pop
cmp
shll
adc
jp
mov
mov
fcompl
je
mov
sub
mov
out
mov
ret
cltd
mov
enter
test
and
jg
jg
add
and
pop
adc
insb
and
pop
call
mov
pop
push
mov
inc
out
bswap
testl
pop
sbb
xor
xorb
push
jno
ljmp
shl
xor
cltd
push
lcall
loopne
jne
inc
push
stos
fnsave
sbb
xchg
decl
dec
push
aam
and
bound
aaa
call
cld
mov
jecxz
les
xchg
dec
aaa
adc
jnp
jne
sbb
jg
lret
sub
push
outsb
sub
mov
and
inc
repnz
iret
and
lods
sub
imul
push
loop
lea
movsl
and
xor
push
xor
mov
or
iret
mov
mov
lods
ror
sahf
imul
movb
cli
ja
nop
fwait
and
outsb
lock
sbb
ficoms
mov
test
jge
push
push
sub
repz
push
xchg
movsl
mov
or
pushf
push
inc
orl
pop
mov
into
xlat
mov
mov
cmp
lret
test
jbe
out
das
add
repnz
or
cli
cmpsl
pop
test
add
inc
daa
pop
ja
scas
inc
jbe
and
das
xchg
pop
mov
or
shll
sbb
mov
roll
jp
test
sub
xor
jge
push
mov
cmpb
mov
jbe
aas
mov
xor
cli
and
and
icebp
pop
add
lcall
pop
xor
shr
jecxz
sbb
popf
mov
mov
lcall
mov
xor
pop
and
dec
pop
fs
inc
stos
pop
loope
jge
std
mov
lea
insl
add
dec
arpl
lret
leave
cmp
test
push
cmp
lds
mov
dec
test
dec
movb
xchg
adc
adc
sahf
cmc
int3
test
stos
movsb
pop
inc
fwait
or
jl
push
push
push
cwtl
enter
iret
jne
sbb
test
movsl
enter
mov
xchg
xchg
jae
test
inc
mov
movsb
add
push
lock
sbb
test
nop
and
xlat
jp
shlb
inc
add
jg
int
dec
and
clts
orl
push
je
fcmovbe
repz
push
sbb
popl
push
adc
adc
jmp
dec
cmp
xchg
push
cltd
int3
xchg
and
jne
lods
adcb
add
pop
popa
push
xor
sbb
adc
andl
ds
jae
jbe
pusha
mov
or
popa
ret
lods
test
mov
mov
jg
xor
data16
inc
ljmp
cmp
xchg
loope
dec
xchg
fiaddl
jmp
adcl
mov
sub
outsl
sub
daa
jns
and
jne
bound
push
aas
mov
sbb
iret
mulb
and
sub
fldt
inc
popa
inc
cli
mov
jne
jle
inc
and
jmp
push
jecxz
loop
and
lods
ljmp
mov
pop
dec
std
push
test
mov
addr16
int3
xchg
outsl
scas
sub
push
xchg
hlt
sub
cli
fidivs
inc
jg
jae
mov
inc
call
xchg
mov
add
add
mov
xor
push
mov
ja
push
jle
add
jne
pop
jle
push
int
js
push
mov
dec
icebp
cmp
rcrl
mov
xchg
sarl
rcl
in
pop
xlat
shrl
in
adc
ret
movsb
pop
lret
fimuls
dec
mov
adc
mov
xchg
daa
mov
bound
adc
int3
and
or
dec
mov
sbb
stos
pop
fsubl
mov
cld
jle
in
lcall
cmp
or
rolb
aaa
cwtl
arpl
xchg
out
fstpl
clc
xlat
or
xchg
dec
inc
adc
dec
push
sbb
mov
add
xchg
cmp
jl
scas
lahf
pop
stc
out
jmp
loope
das
std
arpl
push
xchg
fsts
sbb
mov
xor
cmp
loop
add
add
stc
in
scas
xchg
cld
icebp
out
lds
scas
hlt
push
and
mov
in
fildll
mov
shlb
sbb
mov
lret
lret
xor
pop
mov
pop
dec
mov
add
cwtl
mov
movsb
jnp
repnz
int
xchg
mov
mov
insb
mov
repnz
insb
inc
scas
add
lods
subb
je
fsubs
into
jl
or
push
jbe
mov
xor
push
lret
add
cwtl
add
inc
mov
mov
xchg
arpl
cmp
daa
outsb
adc
cmc
je
test
sub
inc
jmp
mov
shll
cs
loope
or
out
adc
mov
popf
sub
ja
adc
jno
xlat
xor
lods
int
cwtl
call
sub
xor
int
dec
mov
sti
cli
cmpsl
iret
push
xchg
inc
dec
cwtl
jp
sahf
loope
fdivrs
and
pop
ljmp
test
adc
lahf
divb
pop
ss
cmp
xchg
test
xchg
mov
xchg
dec
pop
bound
xchg
nop
and
mov
push
mov
pop
mov
loop
pushf
xor
and
inc
mov
adc
dec
clc
loop
fsts
repz
cwtl
int
imul
shr
mov
movsl
scas
pop
xchg
push
push
addr16
test
pop
push
aam
fisubs
das
mov
inc
and
and
fdecstp
lods
int
sbb
cmpsl
loop
aas
and
sub
jmp
push
fsubp
pop
push
inc
add
shll
mov
js
mov
adc
popf
xor
mov
sub
cmp
mov
sbb
add
sbb
lods
sahf
mov
insl
fdivrs
ss
push
iret
jne
rclb
aam
pop
fwait
jl
inc
add
mov
repnz
xor
pop
sub
xlat
repz
shll
and
sbb
or
cmpsl
and
sti
mov
fdivl
cmc
test
push
mov
lock
stc
push
loop
cmp
and
in
lods
xchg
mov
and
test
and
gs
loopne
mov
loope
lods
mov
clc
dec
idivb
xlat
aas
mov
inc
rol
mull
cli
xlat
ret
cld
imul
pop
or
dec
add
xlat
sbb
in
sarb
out
dec
lds
daa
int
xchg
or
iret
push
or
jecxz
sbb
arpl
cmp
aam
push
pusha
cmp
mov
cmpsb
mov
rclb
loop
and
xor
test
aad
sub
fiaddl
inc
aad
rol
int3
or
or
jne
adc
pop
out
mov
test
out
add
imulb
cmc
mov
xlat
lods
jle
pop
testb
push
fcomps
jo
inc
outsl
out
out
push
gs
repz
sti
shll
mov
jmp
mov
jnp
push
sub
pop
add
adc
insl
xchg
sub
std
out
inc
mov
rorl
insb
pop
aam
cmp
loopne
xor
dec
mov
test
scas
ja
aam
push
sbb
dec
inc
pop
add
mov
fbld
jp
and
adc
daa
jb
icebp
push
out
shlb
test
cwtl
mov
mov
add
sbb
cs
sbb
lcall
inc
dec
scas
jno
adc
xchg
into
xchg
jg
pop
or
mov
sbb
lods
call
jno,pt
cmc
mov
lods
das
aas
bound
mov
xchg
dec
test
addl
cmp
js
aam
lcall
mov
jge
fimull
add
sub
insl
add
xchg
sbb
lea
adc
xchg
dec
push
sbb
jle
shrl
inc
jmp
dec
pop
sbb
fimull
lcall
movsb
add
dec
add
xor
add
add
test
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
mov
add
jo
jo
mov
jo
int3
int3
int3
int3
int3
int3
int3
int3
int3
add
add
add
jne
or
or
and
add
add
add
adc
add
add
add
add
add
add
add
testb
add
and
add
add
add
add
add
add
add
and
jo
outsb
xchg
inc
jae
inc
add
je
popa
jo
push
imul
add
cld
or
dec
lea
inc
in
test
adc
push
lea
adc
cld
mov
mov
call
push
mov
push
push
dec
push
dec
ror
lret
ret
mov
push
test
add
mov
lea
int3
add
pop
push
push
or
loopne
cld
jmp
sbb
clc
jne
add
test
test
std
or
cld
mov
add
decl
adc
push
push
push
adc
push
clc
push
cmp
mov
inc
add
add
jne
jmp
adc
movl
add
add
add
add
add
add
add
and
inc
add
cmc
gs
outsl
je
test
sbb
xor
gs
gs
je
arpl
arpl
dec
xchg
inc
push
inc
jb,pn
addr16
add
gs
imul
add
gs
xor
add
add
hlt
mov
add
add
add
add
add
add
add
add
adc
add
add
popa
sub
cmc
xor
mov
cmp
sbb
punpcklbw
push
jmp
outsl
dec
filds
stc
aas
jmp
lret
call
cmp
xor
lea
sbb
in
push
or
dec
mov
daa
nop
pop
pop
mov
andb
inc
dec
cmp
cmp
lahf
mov
cmpsb
push
xor
jno
lods
dec
stos
inc
outsb
pop
fiaddl
inc
out
imul
aam
push
or
push
jnp
push
cmp
pop
mov
out
out
mov
scas
and
mov
push
adc
movsl
cmpsb
adc
sub
adc
sbb
jno
jne
mov
lds
imul
xor
mov
addl
lods
push
je
cltd
loope
dec
data16
leave
movsb
insl
fisttpll
fadds
push
jle
into
fs
xor
fsubr
dec
xor
xor
sub
lcall
inc
sub
mov
push
out
in
nop
dec
test
add
sub
push
pop
sub
add
sbb
mov
frstor
aad
mov
adc
add
jge
divl
jp
push
mov
fs
movsl
inc
rcll
popf
mov
out
push
int3
fistpl
xchg
mov
ds
mov
mov
xor
pop
fisttps
inc
test
jne
adc
out
out
aaa
loopne
xor
int
and
into
pop
nop
inc
shrl
sub
int
sbb
test
std
inc
or
fscale
leave
pop
jb
mov
pop
fsubrl
shlb
lock
mov
mov
jns
cmp
gs
dec
bnd
jbe
fwait
sahf
sub
insb
gs
addl
or
icebp
xchg
mov
cmp
or
jmp
in
ja
jno
mov
sbb
aaa
loope
mov
inc
jmp
nop
push
sbb
ret
roll
jle
fs
add
push
fcmovbe
cmp
jo
lock
adc
fnstcw
push
dec
pop
inc
fcompl
pop
xchg
lret
gs
xor
notl
lods
add
jle
test
mov
hlt
adc
inc
mov
dec
mov
dec
scas
mov
cmp
pop
cmp
je
xchg
xchg
dec
aaa
ja
add
into
inc
add
lcall
popa
call
pop
in
sbb
out
xchg
xchg
mov
test
fistps
sahf
xchg
jo
shlb
fstps
sub
sbb
lods
aam
push
stc
fxch
ret
hlt
mov
push
test
push
mov
aaa
lds
inc
dec
jg,pn
mov
pop
pop
pop
xchg
sub
ret
dec
add
ja
ret
sub
int
mov
mov
sbb
push
iret
incb
push
pop
add
inc
mov
std
das
jne
xchg
cmp
mov
and
mov
mov
or
sub
pop
dec
jo
sub
lods
test
lds
mov
movl
inc
sbb
enter
in
sarl
mov
outsb
cmp
je
in
cmp
pop
ds
in
loop
jge
ret
lret
inc
cmp
imul
loop
jecxz
scas
lods
fnstcw
or
test
add
rol
mov
add
js
add
icebp
inc
inc
xchg
inc
dec
icebp
fstpt
pop
mov
fs
cmp
cwtl
adc
lret
inc
out
das
push
lea
or
mov
pushf
hlt
insl
add
ss
mov
testb
movsb
lahf
inc
test
push
xchg
inc
loopne
or
out
mov
cli
mov
lcall
jmp
add
xchg
jge
aas
mov
popa
dec
inc
mov
cli
in
add
js
mov
or
imul
pushf
push
or
jmp
popa
sub
pop
xchg
pusha
pop
cmpsb
mov
or
mov
sbb
outsl
call
pop
iret
dec
fimull
push
push
scas
imul
stos
repnz
adc
fsts
adc
jmp
lds
xchg
rcl
aaa
sbb
pushf
add
adc
lock
pop
stos
int
jge
insl
jo
movsb
cmp
stos
sbb
bound
aam
mov
push
lcall
xchg
inc
cmp
mov
in
push
add
pop
mov
aad
or
call
mov
movsb
cs
scas
xor
mov
mov
jg
and
cwtl
sbb
loopne
lret
adc
test
mov
cmpsl
and
les
loop
push
lret
jnp
or
or
xor
xor
mov
mov
xor
xchg
sbb
or
lret
das
xor
inc
mov
sarl
and
mov
rorb
jo
mov
xor
add
xchg
add
dec
popa
push
dec
rorb
adc
shrb
xor
shr
mov
pop
adc
int3
sub
mov
stc
inc
pusha
mov
cmc
cli
sahf
xor
mov
mov
outsl
or
mov
and
push
mov
adc
scas
subl
cwtl
xchg
in
jge
jmp
rcrl
incb
push
ja
lods
dec
lods
int
jbe
mov
fcoms
push
insl
cld
leave
jmp
jns
daa
lcall
xchg
xor
or
clc
pop
inc
dec
jo
iret
pop
push
mov
sti
push
dec
push
jno
lret
cmp
or
int3
call
hlt
das
cmpsl
loop
sub
adc
dec
in
mov
outsl
rclb
lret
dec
out
cli
sbb
and
and
jb
movsl
cmpsb
jmp
sbb
daa
adc
xor
pop
lds
push
jns
ds
mov
push
dec
xchg
sbb
test
shrb
pop
lret
lcall
fbld
add
jge
and
sbb
xchg
cs
xor
scas
mov
or
xlat
mov
sbb
add
stos
jne
xchg
loopne
sub
es
adcl
lods
repnz
ret
fwait
cmp
adc
fstl
divb
and
test
cli
fstps
xchg
push
push
cmp
xchg
lock
int3
mov
sub
loop
lret
leave
mov
lods
adc
push
xchg
sub
je
imul
and
bound
lret
lock
test
dec
and
sarl
cmp
inc
pop
dec
out
arpl
fwait
clc
call
mov
jae
inc
lcall
imul
or
mov
cmp
mov
pop
adc
lcall
lea
aad
adc
aas
push
lods
das
lret
sub
cmp
jl
jl
sub
mov
xor
pop
dec
sbb
adc
sub
hlt
dec
xorb
and
push
jae
incb
mov
xchg
mov
pushf
fistpll
rorl
lcall
pop
mov
inc
mov
jp
jge
mov
les
pop
dec
addl
inc
dec
jns
insl
fcom
mov
mov
jae
sub
into
xor
or
lret
pop
push
sub
shl
imul
or
sub
cmp
enter
inc
adc
imul
mov
pop
pushf
mov
call
pusha
stos
cmc
xchg
in
das
or
mov
sub
fldl
pop
lock
mov
mov
loope
inc
mov
stos
stos
lcall
inc
imul
pop
call
fcompl
fninit
jne
pusha
jb
std
add
insl
xchg
mov
insb
in
mov
dec
pushf
mov
jmp
or
mov
inc
mov
add
test
push
push
adcb
sarl
mov
enter
fstpl
cmc
mov
pop
mov
loopne
xor
rcrb
mov
daa
xchg
add
mov
mov
inc
nop
imul
cmp
sbb
or
cmpsl
adc
inc
in
loopne
xchg
adc
sbb
inc
pop
push
mov
test
inc
out
cmpsb
imul
jg
out
out
jne
mov
mov
lds
fstps
stos
insl
pop
inc
mov
test
push
scas
aaa
lds
repnz
and
add
imul
lds
test
cmp
cmp
pop
loope
cld
roll
movsl
imul
fcmove
das
movsb
or
sbbb
pop
cld
hlt
test
adcb
cli
sub
jmp
sbb
rolb
pop
or
push
fisttps
in
sbb
dec
iret
lock
shrb
nop
mov
repnz
cld
add
lods
repz
jno
test
sub
mov
repz
addr16
lock
mov
aas
sub
xchg
xchg
into
add
pop
clc
xlat
stos
cmp
add
repz
hlt
addb
push
leave
enter
inc
mov
xchg
in
mov
out
jne
bnd
cwtl
fucomi
cmc
lods
adc
push
rclb
mov
pop
stc
cltd
add
lret
mov
imull
lret
test
popf
dec
dec
daa
in
jle
fs
iret
adcb
clc
push
idiv
cmp
xor
inc
das
imul
loope
pop
pop
jg
add
push
fistpl
adc
add
fmuls
inc
inc
fists
xchg
mov
jnp
pushf
daa
outsl
sti
call
mov
push
and
jnp
dec
push
pop
jns
clc
push
mov
push
lea
fidivrl
clc
xor
adc
mov
lock
jnp
and
nop
and
lock
rclb
sbb
mov
imul
lret
mov
jmp
mov
cmp
xor
xor
stos
pushf
inc
pop
js
cmp
dec
lock
pop
pop
data16
out
pop
and
pop
push
mov
mov
fdiv
lock
rolb
or
xchg
or
pop
fwait
ss
test
out
xor
repz
adc
mov
sbb
sub
jno
cmp
clc
pop
test
outsl
jnp
jmp
xchg
pop
or
aam
sub
jbe
inc
mov
xor
cwtl
outsl
arpl
mov
mov
jecxz
jecxz
jo
or
sub
das
mov
jns
aad
cmp
jle
mov
sub
int
in
pop
aad
ss
movsb
pop
ret
adc
jbe
or
dec
cmp
fucomi
sahf
cmpb
roll
jle
sbb
xor
jl
test
or
inc
or
cmpsl
cmp
dec
shll
fldcw
pop
int
dec
fdivl
pop
xchg
push
int
mov
imul
loop
cmp
hlt
push
movb
xchg
and
mov
shr
lahf
mov
and
mov
xor
add
in
adc
sbb
lds
and
popa
dec
mov
ret
sbb
test
lods
push
lock
dec
int
lods
rcrb
cmpsb
sub
ret
sbbb
push
aad
outsl
mov
in
outsb
cmp
lret
add
sti
cwtl
into
aas
movsl
imul
in
sbb
ljmp
fildll
add
ret
cmp
sbb
mov
out
repnz
jle
push
jb
and
fimuls
jae
sbb
mov
sbb
xchg
mov
pop
call
dec
sbb
rcrl
and
pop
lret
stos
jns
ja
roll
outsl
scas
mov
jno
in
outsb
loop
out
cmc
test
dec
inc
xchg
popf
xor
inc
or
jl
add
cs
xor
ss
or
mov
xchg
data16
jmp
test
mov
inc
mov
in
dec
push
iret
aaa
cmpsl
imul
jno
mov
dec
pusha
dec
ja
stc
shll
mov
bswap
aas
push
dec
add
or
fisubs
scas
or
shrl
and
scas
insb
mov
cmpsb
mov
sub
cltd
sub
cmpsl
mov
add
push
fs
mov
bound
adc
xor
loop
and
sbb
push
loope
dec
push
loop
mov
imul
jmp
xchg
mov
and
lods
fucomip
mov
pop
or
out
testl
shl
addr16
shlb
das
int3
pop
mov
nop
jo
cmp
rcrb
cmpl
das
mov
daa
mov
push
scas
hlt
xor
dec
dec
int3
movsl
lret
push
xlat
dec
dec
add
into
lahf
jle
out
mov
std
dec
add
pop
cmpsl
mov
mov
insl
xor
xchg
sub
xchg
pusha
mov
clc
arpl
push
dec
pushl
jle
bound
pop
shrl
sub
subb
clc
fsts
xchg
rolb
lcall
out
sbb
xchg
dec
cmp
fwait
xchg
inc
jecxz
pushf
test
sbbb
push
inc
push
adc
pop
popw
shl
inc
mov
pop
xor
add
inc
mov
stc
stos
gs
push
xlat
inc
aaa
sbb
inc
push
dec
add
fsub
mov
outsb
lds
add
add
jge
push
push
es
xor
cmp
adc
inc
pop
fiaddl
cli
cs
mov
inc
adc
stos
jnp
xchg
cmp
mov
inc
add
jae
jno
int
lcall
fidivrl
lahf
das
inc
cmpsl
cltd
jne
sahf
sub
testb
xchg
mov
xor
pop
loope
inc
jp
outsl
aas
mov
or
in
add
fdivp
ret
scas
leave
movsb
mov
adc
mov
in
pop
and
or
mov
push
pop
push
dec
push
jae
and
xor
push
outsb
lock
sbb
and
leave
ss
daa
dec
ljmp
inc
icebp
clc
leave
int3
nop
or
and
ja
lods
sbb
mov
stos
add
pop
invd
out
push
cmp
dec
push
lahf
inc
dec
xor
leave
ss
add
insl
loop
push
mov
addl
pushf
sti
jo
adc
or
mov
push
jl
cmp
movsb
xor
outsb
pop
mov
push
adc
inc
xor
icebp
test
arpl
pop
test
mov
fldt
cmp
fcomps
xchg
roll
and
cmp
push
jne
jle
out
jb
pop
cmp
mov
push
xchg
xchg
xchg
cmp
pop
xor
test
ja
sub
loope
loop
cmpsl
dec
jb
lret
push
rclb
icebp
mov
xchg
push
loope
aas
cltd
jge
aad
inc
add
dec
int
dec
or
or
mov
aaa
enter
xchg
or
mov
insb
mov
loope
inc
loope
adc
orl
add
fdivrp
sub
out
inc
pushf
sub
scas
shrl
pop
pop
cs
cli
scas
lods
cmp
jg
movsl
dec
mov
cmc
loopew
mov
xchg
push
mov
call
insl
js
je
fisubrs
mov
repnz
ficoms
loope
clc
movsb
scas
rcrb
cmpb
into
xchg
jg
mov
adc
loop
sbbl
subb
adc
clc
cwtl
or
push
mov
mov
mov
sbb
mov
repz
inc
inc
push
shl
loopne
add
test
add
adc
movsl
pop
movsb
in
ror
adc
cmpsb
dec
cli
add
and
and
lods
xor
rorb
adc
imul
push
sbb
addr16
lahf
out
out
mov
dec
popa
mov
pushw
ficompl
mov
mov
push
in
lret
scas
push
mov
pop
mov
push
dec
je
enter
mov
sbb
hlt
lock
inc
stc
pop
sti
js
daa
idivb
sub
int
hlt
insb
and
in
xchg
mov
jmp
xor
dec
addr16
push
sub
xor
fs
inc
sub
mov
and
xchg
movb
jae
xor
xor
fcmove
pop
shr
inc
mov
leave
ljmp
insl
pop
in
repnz
jb
lods
repz
leave
cld
jp
mov
out
mov
je
or
xor
sahf
push
ss
imul
insl
mov
jge
mov
imul
add
outsl
lods
and
push
push
xchg
movsl
mov
out
imul
pop
mov
xchg
mov
xchg
ss
xor
ds
in
out
dec
orl
icebp
mov
repnz
mov
js
jp
imul
sub
jns
mov
adc
aad
xchg
int
mov
out
lcall
mov
and
push
js
jge
enter
mov
jne
mov
int
mov
mov
fistpll
sub
jnp
xchg
xor
lret
out
pop
jnp
fnsave
adc
std
lods
adc
in
sbb
add
in
push
or
loope
movsl
test
test
push
mov
add
cmp
icebp
fldenv
out
and
es
pop
leave
out
scas
or
adc
loope
aam
pop
popf
jns
je
test
repz
imul
lea
xchg
in
cmp
push
jns
push
pop
movsl
sub
outsb
lock
lods
pop
test
cli
outsb
dec
iret
repz
pop
fstpl
sbb
incb
arpl
mov
jle
pop
fbld
idiv
imul
aad
cmp
addr16
fcoml
sahf
dec
sbb
testb
xor
mov
lods
es
pop
mov
cmc
pop
fisttpl
lods
test
xorl
mov
imul
pop
scas
mov
lock
adc
mov
and
and
jbe
dec
stos
movsb
dec
xchg
xor
aad
xor
aad
out
push
sub
out
sub
cmc
cs
out
jp
jle
fisttpl
and
rep
sbb
adcb
cmp
xchg
repz
mov
mov
mov
jl
gs
mov
pusha
int
mov
xor
pop
scas
xchg
pusha
xor
push
push
aam
jns
pop
js
fdivs
mov
enter
lahf
ljmp
sub
add
add
add
xchg
add
add
add
add
push
add
add
hlt
mov
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
stos
stos
add
inc
ja
mov
clc
clc
dec
int3
int3
int3
int3
int3
int3
int3
int3
add
add
arpl
add
gs
add
add
add
add
add
imul
add
add
je
add
add
xchg
add
dec
add
and
add
add
add
add
arpl
fldl
dec
stos
add
jb
inc
movb
mov
sti
jecxz
sbb
outsb
enter
mov
adc
lea
out
inc
cmc
lcall
or
or
mov
test
inc
adc
cld
clc
adc
sti
insb
pop
mov
out
addl
add
mov
inc
add
add
jbe
adcl
and
add
adc
push
push
jp
popf
je
push
cmp
mov
pushl
push
adc
add
cld
mov
enter
add
inc
inc
add
jne
lret
roll
lret
mov
clc
cmovne
cmp
add
add
add
arpl
add
add
repz
imul
add
add
insl
imul
outsl
outsl
dec
mov
inc
insb
add
arpl
outsb
gs
cli
jns
leave
push
add
dec
push
add
inc
gs
and
add
inc
insb
outsl
push
outsl
jb
mov
imul
add
add
add
add
ret
add
cmp
add
add
add
jecxz
add
add
movsl
adc
fisubrl
cs
mov
lock
push
stos
icebp
lret
push
sti
push
push
ljmp
lods
pop
adc
jmp
mov
loopne
lods
cmp
outsl
inc
shlb
pushf
fistpl
cmc
daa
ret
daa
decl
bound
mov
push
in
shlb
inc
test
shlb
test
outsb
jp
mov
loopne
inc
inc
xchg
stos
xchg
loop
and
pop
aaa
mov
jb
test
and
mov
sub
outsb
dec
sub
dec
xchg
fwait
or
loopne
outsb
stos
loopne
dec
jno
pop
sub
xor
mov
rolb
jmp
fcmovnb
subb
pusha
cmp
rcrb
shrb
xorb
mov
movsl
addl
and
stc
ja
sbb
pop
pop
or
clc
xchg
push
aas
mov
adc
pop
shlb
mov
sub
orb
xor
mov
add
xchg
lock
stos
push
cmp
mov
mov
les
lds
repnz
scas
call
sbb
rolb
dec
jl
scas
dec
imul
cld
neg
mov
sbb
cmp
push
xor
movsb
in
sbb
aaa
mov
add
mov
cmp
xchg
das
push
jmp
into
addr16
pop
push
mov
call
push
lret
outsl
mov
xchg
push
loopne
fsubrl
leave
imul
int3
fsubrl
mov
test
xor
cld
out
jae
sbb
jne
dec
adc
call
scas
imul
sbb
pop
push
push
sub
movsl
loope
int
jp
dec
cli
or
push
sbb
push
mov
cmp
jns
int3
pop
adc
adcb
daa
and
lock
inc
push
jbe
mov
inc
xchg
pop
and
fldl
addr16
movsb
decb
cmp
adc
movsl
inc
or
or
add
adc
xor
sub
xor
shlb
gs
dec
xchg
lahf
mov
mov
pop
adc
xchg
jno
push
jb
mov
jp
mov
mov
dec
xor
leave
lcall
loop
dec
sarl
and
add
daa
push
dec
xchg
hlt
mov
jbe
sub
mov
movsb
jg
repnz
stc
xchg
push
and
jle
jb
cmp
jmp
sbb
jb
cmp
shr
hlt
xchg
clc
imul
in
popa
fadds
jo
and
mov
mov
sub
inc
ret
es
push
mov
cmp
adc
sti
loopne
sti
sbb
xor
idiv
lock
in
cwtl
in
xor
jmp
call
or
sbb
mov
cs
jmp
mov
mov
imul
test
mov
mov
mov
inc
xchg
mov
icebp
cmc
sahf
lcall
lcall
and
arpl
push
jg
sub
xorl
cmpb
sub
inc
cmp
leave
inc
out
lret
fisubrl
out
push
xorb
gs
out
jnp
jl
shll
xchg
push
cmpsl
dec
stos
data16
sub
hlt
shlb
cmove
int3
cmc
add
lods
in
mov
ss
mov
mov
outsl
lea
jb
inc
mov
fists
mov
xor
cld
test
jo
or
mov
sbb
sub
nop
jmp
int
je
adc
repnz
imul
fnstenv
data16
movsl
xchg
jb
fisttps
sbb
call
sub
sbb
xor
ds
mov
jecxz
pop
push
xor
lcall
jecxz
les
movsl
mov
mov
xor
ret
dec
lea
iret
ja
movsl
imul
sub
cmpsl
lahf
xchg
cwtl
fmuls
sub
das
arpl
sbb
fidivrl
fimuls
sbb
xor
inc
inc
sahf
cwtl
lahf
movsb
orb
cli
int3
mov
push
adc
mov
sub
mov
sahf
and
ljmp
fidivs
insb
out
mov
pop
push
xorb
dec
push
push
push
ret
adc
sbb
sbb
aam
sub
mov
bound
iret
imul
pop
mov
add
mov
iret
cmpsb
dec
jnp
sti
fsts
fcompl
lcall
mov
outsb
xchg
mov
mov
mov
lcall
jb
jp
movsb
sub
jmp
or
cmpsb
sub
mov
and
add
call
or
inc
mov
ja
pop
lds
bound
xchg
mov
xor
or
pushf
cs
dec
stos
cmpsb
out
pop
sub
sub
test
sub
lock
pushl
fisttps
adc
add
mov
push
dec
inc
loopne
scas
xchg
xor
cmpl
dec
push
faddl
sbb
rorb
cmp
sub
mov
fnstenv
cmp
push
sbb
aaa
subb
add
jmp
ss
and
cmp
xor
das
or
dec
mov
arpl
sbb
popa
cmpsl
and
std
jae
inc
xor
mov
jle
mov
cmc
add
mov
cltd
or
cmp
cmp
xchg
add
jl
xlat
cmp
mov
cltd
gs
xor
aam
xchg
in
ficompl
mov
in
lods
stos
jne
jb
sti
pop
jge,pt
sahf
stos
mov
mov
lcall
loope
sbb
mov
adc
lahf
test
popf
lds
pop
cltd
pop
sub
cmp
les
sub
cmc
mov
mov
push
out
dec
ss
sbb
sbbl
stos
add
test
jo
xlat
pop
addr16
sub
jo
pop
and
inc
adc
clc
adc
movsb
jmp
cmpsb
jbe
jle
xchg
movsl
xor
cmp
sbb
xor
lret
cld
popa
ret
xchg
rcrl
push
lods
subb
pushf
ljmp
dec
mov
xor
out
and
fs
imulb
test
lods
pop
sub
dec
daa
jl
xchg
dec
mov
mov
lock
jge
rcll
popa
in
jg
das
lahf
cmp
popf
pop
fistl
or
jecxz
xor
pop
dec
ret
sbb
lahf
xchg
push
repnz
sub
call
mov
stos
pop
sbb
lcall
mov
call
lods
sbb
push
jle
pop
push
mov
sub
les
mov
push
aad
sbb
mov
jb
sbb
rcr
push
dec
cmp
mov
das
jbe
lea
push
add
ret
add
push
jae
out
repz
mov
fimull
adc
pop
mov
pop
sbb
sbb
add
sti
dec
jns
cli
add
jmp
lea
and
push
data16
das
mov
cmp
mov
or
test
rcll
cli
adc
movsl
loope
nop
mov
repz
in
add
outsb
xor
mov
aam
lahf
aas
push
jb
or
fbld
daa
outsl
mov
lcall
or
xchg
jns
xor
adc
adc
pop
fcomps
popf
in
push
jo
in
jecxz
adc
mov
mov
mov
xlat
sub
enter
mov
mov
xchg
sahf
inc
scas
add
sahf
mov
push
in
scas
cmp
mov
adc
pop
push
or
in
cmpl
or
stos
dec
pop
mov
int3
cmpsl
shll
repnz
push
shlb
into
fadd
test
es
sub
and
xchg
inc
push
push
pop
dec
dec
and
add
loopne
rol
sbb
xor
pop
push
cmp
fisubl
mov
push
or
jnp
mov
mov
movsb
xchg
and
int3
mov
out
and
mov
xchg
movb
aam
jg
jle
jnp
mov
push
lods
bound
sub
pop
mov
into
int
movsb
test
mov
ret
inc
xor
lds
dec
test
fwait
daa
lods
sub
clc
aaa
pop
or
or
xor
cld
push
testb
mov
loop
add
sub
jge
push
add
adc
xchg
mov
lds
fadds
xchg
jo
enter
in
xor
mov
cmc
call
mov
out
dec
iret
orps
mov
add
inc
clc
leave
sub
or
stc
int3
pop
inc
xchg
push
sbb
fisubl
pop
jge
mov
mov
mov
rorb
pop
mov
cmp
xchg
shrb
jge
push
pop
idivb
mov
mov
pop
data16
daa
jge
test
lret
fnop
mov
outsl
adc
imul
mov
iret
hlt
std
cmp
push
jecxz
loopne
mov
push
jb
dec
jo
cli
lret
push
arpl
cmp
fistl
mov
xor
movl
inc
ret
fcompl
jns
xchg
jecxz
sbb
push
or
vpmadcswd
mov
inc
addr16
fiaddl
sbb
cmp
adc
ja
mov
cmp
adc
aas
ljmp
mov
xchg
lods
out
cmp
mov
pop
or
push
das
inc
fidivrl
subb
sbb
adc
bound
dec
pop
lock
inc
xchg
push
subb
xor
insb
pop
cld
sub
pop
ffreep
mov
add
push
inc
xor
sahf
dec
xor
movzwl
inc
loope
jp
popa
pop
fwait
pop
sbb
test
mov
pop
jns
add
cmp
pop
int
sub
or
cmp
xor
cmpsb
xchg
mov
jle
push
aam
cli
jmp
mov
sbb
xor
xor
divb
add
popa
sbb
enter
mov
sbb
hlt
test
mov
decl
sub
popa
fcmovu
repz
js
dec
int
lret
xchg
mov
stos
cmp
add
push
pop
fstps
pop
sub
test
jbe
add
fnsave
push
mov
test
xorl
inc
dec
push
inc
pop
cmp
mov
sub
adc
repnz
mov
jne
mov
sub
pushf
add
mov
cmpl
push
sahf
mov
popa
inc
xchg
stos
mov
and
ret
mov
lcall
lcall
xor
fcomip
mov
adc
sub
push
es
jg
pushf
bndstx
aas
mov
lock
lret
mov
adc
call
or
cmpsb
outsl
add
rorl
cltd
pop
cmc
lahf
pop
sbb
jno
adc
jno
push
sti
addr16
lcall
jecxz
adc
xchg
cmp
xchg
out
add
pop
fstps
push
scas
cmp
insb
iret
xor
int
dec
xchg
negb
in
sbb
das
push
jl
jg
mov
sub
adc
notb
fimuls
fucom
mov
xor
ret
filds
test
dec
clc
push
out
jne
push
jnp
repnz
hlt
pop
flds
xchg
push
data16
cmp
loop
push
pop
outsl
cmp
jno
mov
outsb
dec
in
mov
les
push
add
cmp
xor
mov
jb
fldenv
mov
jl
fsubr
ss
add
xchg
lahf
mov
rclb
cmc
pop
xor
inc
cli
pop
pushf
mov
add
in
inc
push
cmpsb
mov
mov
add
lret
std
inc
movsb
cmp
idivl
lds
adc
outsl
adc
clc
xor
inc
mov
cs
push
cmp
cs
dec
xchg
pusha
mov
sbb
adc
xor
rclb
and
sarl
sbb
mov
sahf
sub
and
outsl
out
sahf
ds
push
dec
test
insl
xor
bound
push
add
arpl
push
out
out
adc
push
lret
jp
frstor
das
in
ja
mov
loope
cs
outsl
clc
or
mov
aas
popf
or
idivl
add
inc
sub
pop
mov
mov
lret
and
lods
pop
jbe
lret
dec
repnz
and
cmp
shrb
cmp
loop
js
xchg
scas
mov
sbb
out
idivb
cld
jle
aam
or
xlat
push
jl
mov
test
pop
ret
cld
xor
insl
mov
pop
lret
ficoml
adc
jns
js
aad
jne
shrl
inc
scas
in
decl
push
sbb
push
ret
push
sub
and
or
or
out
pop
push
je
push
int
cli
subl
mov
and
xor
jge
push
pop
repnz
adc
cmp
pusha
js
adc
pusha
stos
outsl
outsb
push
nop
sti
inc
sbb
pushf
clc
bound
sbb
dec
bound
cs
mov
cltd
insb
pusha
mov
ljmp
pop
xchg
adc
add
mov
repnz
push
xchg
xor
mov
std
jno
mull
xchg
movsb
js
rclb
inc
popa
sub
jmp
adc
fcmovne
or
pop
jecxz
dec
push
jno
dec
xlat
sbb
jnp
adc
pusha
out
jge
inc
scas
xor
ss
and
adc
sub
pop
iret
dec
pop
add
push
popa
stos
cmp
jbe
push
mov
das
stc
je
das
notl
imul
sbb
jne
rcrl
push
pop
dec
inc
in
stos
imul
loop
fsubrl
push
data16
push
sub
pop
inc
fsubrs
pop
pop
adc
sbb
repz
and
jo
jbe
fnstcw
mov
cli
pusha
jmp
push
ficoms
push
cmp
jge
mov
adc
cmp
in
mov
jns
cmp
repz
mov
add
cltd
shrl
addr16
mov
pop
push
out
sbb
imul
xorl
fwait
mov
scas
inc
int3
in
sub
dec
xor
sbb
addr16
push
xor
lret
aas
repz
push
xchg
aam
and
adc
push
mov
mov
jbe
push
xchg
and
cwtl
sub
mov
xchg
xchg
or
test
jle
mov
jmp
rcrb
mov
jle
inc
jo
faddl
pop
lea
jbe
rorl
dec
jl
inc
add
insl
xor
cmp
addl
sub
or
sub
mov
fwait
lds
lds
cmp
sub
mov
jnp
pop
outsl
add
pop
test
jb
jecxz
sbb
sbb
xlat
xchg
test
sub
jecxz
fucomi
das
and
dec
jp
pop
cld
pushf
lds
scas
mov
out
add
mov
xchg
dec
push
adc
movsb
sub
shl
out
xchg
sti
jne
jg
mov
lds
add
cs
and
repnz
lds
andb
push
les
call
xchg
push
xchg
mov
add
sub
push
hlt
sub
xlat
inc
or
or
inc
mov
adc
test
into
sub
jmp
fwait
mov
fnstcw
add
mov
pop
dec
inc
pop
mov
imul
mov
imul
xchg
cmp
jg
inc
adc
hlt
mov
add
jno
pop
clc
ror
push
rcrl
js
clc
bound
clc
out
popa
lcall
stos
inc
mov
and
pop
shll
xchg
add
negb
or
std
scas
xchg
sbb
xor
and
in
push
stos
and
pop
pushf
cmp
test
jg
mov
jp
xor
fnsave
cld
adc
sub
xchg
rorb
mov
pop
xor
push
pop
in
pop
hlt
jmp
ret
into
or
das
loopne
xchg
inc
mov
outsl
fcompl
sub
xor
mov
add
leave
loope
inc
fiaddl
add
data16
je
adc
subb
push
jecxz
sahf
idivl
rclb
push
pop
dec
test
sar
jne
mov
sbb
mov
sahf
in
mov
sub
enter
lock
and
mov
lds
lret
adc
dec
adc
or
adc
inc
cmp
bound
popa
jecxz
mov
insl
ret
jg
mov
orl
jne
fdiv
popa
stos
push
mov
daa
push
xlat
hlt
dec
rorb
or
and
sahf
jns
jne
stos
push
fcomi
idivb
fucomp
arpl
pop
inc
rcr
fsubs
pop
js
arpl
push
addr16
adc
add
xor
sti
movsb
out
add
and
add
mov
scas
jae
aas
aas
scas
dec
inc
daa
push
mov
movsb
or
adc
push
jae
cld
dec
js
xlat
int3
jae
adc
mov
pop
loope
lods
sub
insl
repz
mull
notb
addl
sub
rcrl
push
int
cmpsl
insl
lret
aam
fdiv
add
gs
shl
mov
push
outsl
pop
pop
mov
jl
jbe
lods
mov
and
pusha
or
addr16
sti
adc
pop
or
sub
add
mov
mov
iret
inc
xlat
das
mov
xchg
test
mov
push
push
cwtl
in
push
leave
fnstcw
stos
icebp
dec
dec
das
mov
jb
imul
fildll
ret
out
jb
mov
sub
scas
lods
cmp
xchg
jmp
mov
pop
sub
cmp
push
sbb
add
mov
sub
mov
cmpsb
out
gs
movsl
cwtl
or
xchg
into
insb
imul
adc
adc
test
sub
out
sbb
jecxz
jns
mov
pop
daa
movsb
xchg
mov
jge
lods
mov
aas
mov
xchg
sbb
xor
inc
cmp
dec
stc
sub
xchg
mov
mov
pop
and
enter
in
aad
mov
mov
dec
in
dec
push
push
arpl
in
cmp
jle
xor
mov
push
xchg
stos
or
mov
add
add
add
add
and
add
add
mov
add
add
ret
add
cmp
add
add
mov
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
hlt
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
pop
add
add
add
dec
jae
and
add
add
incb
and
add
inc
add
add
rcll
add
add
add
add
add
add
js
mov
stos
add
add
sbb
sbb
sbb
sbb
sbb
adc
add
add
and
popa
das
push
dec
push
iret
outsb
imul
push
cld
add
sti
jecxz
jne
leave
in
js
movsb
cld
adc
mov
pop
pop
push
lea
movl
leave
or
je
call
push
leave
in
rorl
xor
or
adcb
sbb
push
decl
call
mov
loopne
mov
mov
add
xor
push
loopne
add
incb
jmp
push
pop
push
je
push
mov
mov
adc
or
decl
add
lea
push
loopne
add
mov
or
inc
and
call
clc
add
loopne
add
add
pop
add
add
add
inc
sbb
sbb
sbb
in
sbb
sbb
sbb
add
sbb
add
add
imul
fadds
add
outsb
je
inc
fs
dec
add
push
gs
je
bound
inc
add
jns
shlb
outsb
jae
int3
push
add
inc
xor
jb
je
add
add
sub
add
add
add
add
pop
add
jno
add
add
add
add
roll
add
ret
push
das
je
adc
shll
pop
in
enter
pop
out
xchg
mov
jno
lret
pop
cltd
xchg
loope
gs
mov
xor
push
push
push
stos
or
mov
xchg
cmp
dec
and
push
test
popf
dec
shrl
loope
xor
or
aas
test
xchg
hlt
push
scas
and
jle
dec
mov
and
add
xchg
inc
fdivrl
push
push
insb
hlt
or
jnp
lods
sbb
cli
jp
in
dec
js
es
pop
addb
in
mov
insl
repnz
mov
jns
cmp
mov
stc
addl
cli
ljmp
mov
inc
movl
dec
in
jmp
lahf
pop
lods
ret
inc
out
int
inc
push
add
xchg
fnclex
bound
ljmp
arpl
jecxz
popa
xlat
inc
and
sbb
cmp
and
repz
pop
ret
adc
add
and
sbb
push
xlat
push
pop
aas
xchg
lahf
loope
ds
jnp
arpl
int
and
aad
std
in
cmp
sbb
out
mov
dec
loop
out
xor
pushl
stos
pop
xor
mov
shll
jbe
jo
push
mov
or
push
push
inc
mov
shlb
sarl
in
xor
into
aaa
xchg
popa
iret
ss
jle
movsb
subb
ret
lods
jmp
push
in
mov
adc
test
movsb
test
xchg
fcmovnbe
sahf
cld
popf
sahf
sbb
push
stos
adc
cmp
dec
cwtl
mov
pop
adc
aam
lea
inc
arpl
sbb
cltd
fsubr
jl
sub
mov
ljmp
push
mov
out
cmp
std
adc
loopne
movsb
cwtl
mov
neg
cmpl
scas
stos
mov
xor
lods
rcrb
mov
in
data16
xchg
popa
dec
in
mov
cmpsl
and
inc
and
xor
mov
cld
jae
mov
mov
mov
pop
add
arpl
cmp
add
push
mov
out
push
out
push
les
test
push
jp
xor
stos
mov
mov
mov
pop
je
and
mov
gs
add
or
outsl
stos
es
faddp
add
mov
inc
pop
adc
add
xlat
mov
sub
mov
xchg
stos
leave
imulb
cmp
push
jno
push
jmp
fldl
push
stos
xchg
das
mov
out
pusha
fldenv
fwait
mov
ss
adc
sahf
and
inc
pushf
sbb
ret
test
dec
jp
sub
nop
fcmovnb
clc
stos
addl
ss
mov
xor
push
add
add
push
dec
movsl
inc
adc
fsts
mov
aaa
std
cs
ss
jb
lret
or
pop
inc
jecxz
mov
xlat
aam
sbb
jp
sarb
aam
fsts
xchg
das
push
adc
lock
in
push
in
xor
push
lcall
dec
inc
pusha
push
jnp
dec
or
sbb
imul
test
cmp
mov
imull
fldcw
ja
or
pop
add
int
pop
or
inc
je
sub
dec
sub
jle
loop
or
add
sahf
mov
lret
mov
mov
mov
jnp
fnsave
mov
inc
adc
add
iret
and
sbb
int
outsl
pop
call
mov
xlat
or
shlb
dec
fdiv
xchg
push
in
dec
data16
or
stos
movsb
jg
int3
ds
jo
shl
pushf
adc
mov
sti
xchg
decb
lcall
add
push
cs
movb
in
fisubs
stos
mov
mov
sub
cs
pop
icebp
int
push
hlt
xchg
in
jg
test
fyl2xp1
lret
rorb
rcl
dec
pusha
loope
arpl
push
xor
xchg
mov
or
fwait
lods
xchg
lea
ss
bound
mov
pop
inc
loopne
mov
ret
sahf
mov
popf
fucom
inc
xchg
loop
xchg
rcr
sub
out
outsl
push
cmp
xor
cld
inc
push
adcl
inc
addb
movsb
mov
jbe
xchg
add
cmpsb
iret
mov
cli
push
js
in
call
fcmovb
jno
sbb
mov
dec
loope
jno
decl
xchg
sub
fdivl
fistpl
add
pop
and
cmp
jmp
mov
xor
jns
push
or
or
jne
cmpsb
lods
ljmp
pop
and
dec
iret
pop
fwait
cmpsl
pop
hlt
fisttpl
out
and
push
and
fcmovnbe
adc
mov
mov
cmp
movsl
push
pop
testl
sub
idivb
loopne
cli
mov
cmpsl
pop
jmp
ret
imull
enter
nop
pop
jae
outsl
sti
mov
sti
adc
sub
mov
add
gs
xchg
inc
cltd
or
jno
outsl
adc
jb
inc
jns
outsb
mov
jbe
dec
ljmp
repz
jle
std
loope
popf
pusha
cmp
nop
arpl
jo
xlat
insl
xor
mov
mov
and
jecxz
das
aad
ja
mov
imull
pop
sub
cmp
adcb
push
subb
jge
out
or
out
out
and
das
jg
out
dec
mov
sub
jno
pop
lea
das
pushf
or
leave
xor
sub
cwtl
dec
loopne
xchg
xlat
mov
test
aad
add
jl
inc
stos
xor
cmpsl
arpl
inc
xchg
ror
mov
push
imul
and
cmp
es
xchg
pushf
push
fiadds
das
adc
int
sub
mov
inc
js
mov
lret
xchg
aam
push
ret
add
sbb
dec
orl
push
sub
mov
lret
dec
je
pop
mov
jl
ret
adc
push
sahf
xchg
push
push
push
jnp
jo
test
xchg
ret
and
adc
ds
adc
pop
das
call
sarl
pop
push
stos
and
pop
mov
xchg
test
adc
ja
nop
fbstp
rol
cmp
add
out
pop
iret
jb
and
call
dec
bound
mov
dec
sub
arpl
test
mov
or
jecxz
test
jno
jae
in
mov
push
mov
jo
inc
add
xchg
repnz
shll
stc
dec
add
jnp
pushl
push
mov
mov
xor
inc
lods
fdivrs
fidivrs
adc
sbb
ja
mov
in
jmp
or
mov
sbb
aaa
in
mov
bound
les
inc
sbb
pusha
inc
cwtl
pop
or
subl
pop
push
dec
fs
adcb
mov
adc
mov
loope
jb
push
loop
dec
dec
out
imul
sub
jecxz
jnp
mov
cwtl
cld
inc
pop
sbbb
adc
lock
xor
cltd
xchg
inc
nop
or
jge
aas
and
xor
ljmp
ss
or
and
in
and
adc
enter
mov
test
in
call
dec
sti
cld
mov
xchg
jns
into
jo
mov
inc
int
pop
aas
fidivrl
pop
andps
outsl
hlt
addl
ds
pop
cmp
sub
test
pop
js
arpl
pop
cld
test
jb
jp
idivb
cmpsb
push
sub
repz
pop
xchg
xor
adc
jo
lret
int3
mov
xor
sbb
ret
mov
pop
pop
push
mov
push
fs
inc
or
jbe
lcall
add
sub
test
pop
stos
out
jnp
frstor
jmp
mov
divb
xchg
jl
aad
dec
jmp
or
jno
lock
pop
xor
shlb
bound
int3
fbstp
aaa
mov
clc
push
lret
fcmove
dec
mov
addb
lahf
icebp
add
pop
in
mov
inc
pop
imul
aaa
and
rolb
lock
scas
mov
pop
mov
les
loop
pop
jl
jnp
and
mov
cmpsl
mov
repz
lret
mov
push
jecxz
pushf
lea
and
shlb
ljmp
jmp
jecxz
nop
mov
sbb
mov
stc
dec
xorl
arpl
sbb
aad
lcall
sub
xchg
jne
std
adc
ss
testl
repz
cmp
in
cmp
sbbl
lahf
pop
ret
add
call
iret
bound
cmpsb
test
cmc
cli
adc
pusha
rolb
clc
xor
nop
cpuid
push
sbb
mov
sbb
mov
outsb
enter
and
outsl
fnstcw
popa
stc
inc
pop
iret
stc
mov
add
inc
sbb
aam
push
mov
push
push
ja
mov
cmc
popa
cltd
fnstsw
jp
adc
sub
dec
ja
pop
sub
xchg
sbbb
pop
inc
arpl
clc
add
ss
mov
outsl
sbbb
cmp
lds
cmpsl
lods
xor
cmpsl
hlt
movsb
inc
aas
lret
add
xchg
dec
mov
ret
push
push
mov
xor
nop
pop
and
or
adcb
push
shl
mov
add
ja
cmp
and
jo
test
pop
aas
push
mov
mov
mov
gs
fisubrl
sbb
adc
mov
sub
pop
je
jl
je
rol
int
fstps
loop,pn
testl
fcom
jmp
aaa
push
mov
scas
aad
ret
pop
push
loop
shl
pop
pusha
and
fwait
pop
xchg
adc
mov
sbb
inc
std
xorb
jg
dec
ljmp
pop
in
leave
icebp
nop
arpl
dec
loope
out
mov
sub
jb
push
movl
mov
jbe
push
icebp
adc
repnz
adc
je
pop
mov
out
pop
repz
daa
cmp
roll
dec
cwtl
jle
pop
jmp
hlt
es
mov
xchg
leave
stos
push
push
push
push
rcl
loop
mov
mov
std
cmp
xor
insb
pop
lea
mov
jb
xor
fwait
stos
xlat
pop
xorb
je
jns
add
leave
inc
or
arpl
dec
mov
xor
aas
pop
out
ret
je
je
and
arpl
ja
sub
xor
mul
xchg
sbb
mov
mov
jbe
jg
dec
cmp
jb
outsb
sahf
xor
mov
stc
pop
or
or
jl
dec
sbb
mov
outsb
clc
aas
arpl
dec
fisubl
movb
or
fwait
jb
mov
ljmp
out
push
mov
mov
subl
mov
sub
stos
fcompl
daa
jg
mov
pop
fiaddl
movsb
mov
mov
push
xlat
jb
jl
jp
push
sbb
pop
pop
inc
outsb
push
lods
dec
adcb
cli
add
movl
in
ja
push
add
test
sub
and
mov
pop
mov
dec
mov
xchg
jns
mov
clc
cmp
or
push
das
je
mov
imul
imul
mov
jns
pop
sbb
inc
outsb
sub
mov
lcall
out
add
lcall
xor
push
xchg
je
iret
jns
daa
scas
push
call
dec
jecxz
jo
sti
and
sbb
mov
insl
jecxz
outsl
shll
fiadds
push
outsb
mov
mov
insl
adc
fcmovbe
mov
test
pop
mov
sub
and
inc
mov
pop
ror
push
push
xor
xchg
loop
mov
push
or
movsb
mov
dec
pop
dec
adcb
leave
cmp
lds
stos
out
inc
loopne
insl
jge
in
mov
shrb
push
dec
adc
mov
add
call
in
fcomps
xchg
inc
hlt
xor
mov
call
push
adc
sbb
mov
clc
dec
stos
ljmp
cmp
push
popa
stos
inc
xchg
inc
les
mov
xor
lret
je
and
into
xchg
cmp
sub
jge
mov
les
dec
mov
repnz
mov
inc
push
cs
adc
xchg
inc
insl
xor
jp
scas
gs
mov
test
movsl
rcll
in
jg
cmp
ret
mov
clc
lock
push
clc
ljmp
andb
test
sahf
xchg
pop
jnp
rorb
in
push
loop
stos
int3
arpl
inc
outsb
jno
movsl
or
dec
mov
and
movsb
in
lock
jg
repz
pop
cmpsb
pop
cmp
adc
jmp
xorb
mov
add
pop
popa
in
cld
push
pop
pop
sbb
pop
inc
push
push
pop
add
or
mov
retw
sub
aaa
jecxz
sbb
mov
pusha
arpl
int3
mov
push
mov
jge
mov
aas
mov
mov
or
sbb
xchg
fists
add
cmp
xor
jecxz
sub
mov
decb
jnp
jge
mov
lret
mov
mov
hlt
jmp
mov
sub
xchg
and
inc
dec
sub
fcom
push
stos
push
dec
pop
roll
sub
sbb
inc
repnz
out
dec
pop
inc
ficompl
movsb
jle
ja
add
ss
clc
push
es
inc
sbb
outsl
dec
or
dec
sub
cmp
push
pop
push
loop
mov
addr16
or
cmp
cmp
push
jp
or
into
subl
mov
insl
mov
push
scas
popa
adc
sub
std
popa
cwtl
mov
jno
inc
cmp
push
int3
fiadds
movsl
aaa
mov
mov
mov
sub
bound
add
jb
adc
stc
daa
cmpb
pop
daa
push
leave
add
xchg
xchg
xchg
dec
test
dec
mov
das
idiv
rcll
mov
mov
out
add
cmp
jne
mov
mov
mov
pop
movsl
fdivrs
fwait
int3
mov
adc
mov
test
in
shll
mov
inc
inc
push
lods
shlb
pop
movsl
repnz
mov
pushf
stos
test
jb
jae
xchg
inc
mulb
dec
and
lret
cmpsl
sub
mov
imul
loope
rcll
jp
lcall
push
xlat
xor
insl
jbe
and
dec
in
sahf
ja
mov
inc
or
jae
lods
add
inc
repz
aaa
call
cli
xor
jns
pop
mov
cmc
push
jmp
push
inc
jmp
jae
iret
xchg
lret
es
ljmp
je
addr16
push
xor
and
sti
push
dec
add
lahf
xlat
xchg
fstpl
dec
pop
or
add
push
mov
sub
fisttpl
xchg
pushf
or
xchg
lock
xor
js
rorl
aaa
mov
add
loopne
pop
out
repnz
jno
or
iret
pop
ret
xchg
daa
scas
insl
aad
cmpsb
inc
ret
rol
add
fs
mov
loope
pop
mov
xchg
jmp
arpl
les
movsb
add
pop
nop
mov
jecxz
add
dec
enter
inc
stc
mov
add
test
xchg
jnp
sub
and
mov
es
dec
xchg
repnz
dec
lock
mov
adc
pop
lret
iret
jg
mov
mov
fnstcw
outsl
gs
push
cli
je
je
dec
inc
cmp
jle
bound
mov
pop
lcall
addr16
loop
cmp
cmp
add
push
cs
int
push
xor
mov
mov
js
fwait
add
je
dec
nop
fists
dec
push
shr
sbb
inc
push
inc
sahf
mov
jnp
sub
add
mov
iret
push
ds
incb
jno
into
mov
cmp
mov
pop
jo
jns
clc
ljmp
and
test
mov
sbb
ret
xor
ret
jecxz
push
and
outsl
test
mov
mov
sbb
push
push
jb
adc
and
sahf
inc
pop
mov
cmpsb
mov
mov
and
sti
mov
mov
cmp
adc
jae
pop
jae
and
aaa
in
xchg
test
xor
out
mov
mov
dec
lods
outsl
adc
sbbl
mov
dec
movsb
iret
and
shlb
shll
dec
xchg
jo
in
xchg
int
dec
lret
addr16
mov
xchg
loop
push
mov
adc
mov
mov
push
sub
xchg
mov
outsb
jge
ret
mov
les
cs
pop
push
or
ds
mov
push
xchg
adc
mov
jle
sbb
je
jp
lods
cmp
push
dec
adc
sti
push
in
les
add
popf
push
sbb
mov
dec
mov
push
mov
xchg
jne
inc
js
mov
pop
adc
xchg
jmp
mov
daa
and
add
or
or
mov
dec
pusha
xchg
out
ret
sbb
pop
jmp
xor
loope
adc
ficoms
jb
int
sbb
and
ljmp
inc
and
mul
je
cmp
popf
lds
aas
push
fwait
movsb
dec
fstps
mov
lret
cmpsl
nop
jne
enter
mov
pop
pop
pusha
jmp
pop
loop
pusha
popf
sbb
divl
inc
rcrb
add
out
add
cmp
sbb
gs
cld
sub
popf
inc
lock
pop
inc
add
xchg
out
out
mov
stos
push
daa
rcr
inc
mov
push
pop
or
or
mov
fs
jmp
je
scas
data16
aaa
fldt
mov
add
dec
jp
add
shl
mov
xchg
test
aaa
mov
cli
pop
movsl
lahf
aas
push
ret
lret
scas
scas
inc
fmuls
inc
test
aaa
sbb
mov
mull
dec
add
int3
xchg
mov
xor
add
add
add
add
add
mov
add
add
add
adc
add
add
add
add
add
add
add
pop
add
jno
add
add
add
add
add
add
add
add
xor
xor
xor
dec
add
add
add
add
add
stos
stos
add
ja
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
rcl
add
cld
aam
add
aad
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
lahf
aad
add
add
jl
add
je
add
insb
aad
add
add
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
aad
add
aad
add
aad
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pop
add
js
add
mov
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
hlt
add
cld
add
add
add
or
add
adc
add
sbb
add
and
add
aaa
xlat
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
xlat
add
pop
xlat
add
push
xlat
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
nop
fadds
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
flds
add
add
add
add
xor
add
sub
add
and
add
sbb
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
js
add
sbb
add
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
sbb
add
cmp
add
pusha
fiaddl
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
mov
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
adc
add
sbb
add
sub
add
cmp
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
