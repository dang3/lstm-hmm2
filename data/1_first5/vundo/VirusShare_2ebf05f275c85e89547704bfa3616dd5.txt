mov
sub
mov
andl
andl
test
push
push
push
lea
jle
lea
mov
xor
cmp
jle
mov
mov
mov
cmp
jne
cmp
jge
mov
mov
cmp
jle
mov
mov
inc
cmp
jl
incl
mov
addl
cmp
jl
cmp
jge
xor
jmp
mov
sub
sub
inc
xor
dec
test
jle
lea
lea
lea
mov
mov
mov
sub
inc
add
add
dec
cmp
jl
sub
xor
inc
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
push
pushl
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
call
pushl
mov
call
push
push
pushl
call
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
xor
test
jle
push
lea
push
mov
cmp
je
inc
add
cmp
jl
pop
pop
cmp
jl
xor
jmp
test
jle
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
inc
xor
test
mov
jle
lea
mov
inc
add
cmp
jl
pop
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
pushl
pushl
jne
push
pushl
call
jmp
dec
push
call
pop
ret
int3
int3
int3
int3
int3
call
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
pushl
mov
pushl
mov
push
call
mov
mov
lldt
in
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
push
call
mov
mov
movzbl
sub
je
incl
call
call
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
ret
adc
mov
jno
sbbl
mov
rcrl
loope
icebp
xchg
lahf
adc
inc
out
popa
incl
add
cmp
outsl
mov
pop
adc
mov
fistpll
insl
ret
popl
imul
pop
ret
add
into
add
fs
jbe
jge
test
and
icebp
xchg
cmp
dec
scas
orl
lea
and
mov
mov
out
loopne
jl
add
pop
inc
adc
cli
dec
or
adc
sub
cmp
loope
rcrl
out
shlb
ljmp
lcall
aas
xchg
rorb
pop
jp,pn
andb
jb
mov
gs
adc
imul
mov
xchg
pop
sarb
lock
or
lahf
lods
push
xor
or
daa
shrb
push
testl
pop
cs
outsl
jne
add
cmp
inc
fwait
push
out
mov
lea
mov
stc
das
in
inc
sub
sbb
jmp
rcrl
mov
or
aam
aad
fsubs
scas
xor
popl
call
cs
sbb
dec
les
cmp
cmp
std
push
lods
push
fbstp
push
mov
pushl
sbbl
mov
rcrl
loope
icebp
popl
lahf
adc
inc
fists
popa
pushl
sbbl
mov
rcrl
loope
icebp
popl
pop
movb
loopne
sbb
inc
and
cmpsl
std
and
in
mov
mov
push
adc
arpl
cmp
scas
mov
lea
add
cmpsb
and
dec
mov
out
jp
lds
add
adc
or
pop
insb
sbb
push
add
shrl
js
dec
dec
mov
fwait
fs
sarb
and
orb
mov
int
xchg
aam
jmp
pop
inc
and
ret
cld
test
fimull
push
adc
sub
mov
scas
push
rorb
lahf
jno
add
aad
das
mov
enter
dec
lods
inc
data16
push
shrl
cmp
lock
sub
cmp
lea
outsl
mov
xlat
or
lahf
fistps
aas
jp
pusha
push
stc
mov
cli
loopne
out
inc
fsts
out
push
sahf
sti
loop
pop
int3
inc
lret
jne
add
or
out
fisttpll
pop
adc
pop
ficomps
pop
nop
jg
in
pop
sti
lds
mov
fdivrs
pop
and
mov
fidivrs
xchg
mov
mov
pop
jl
shll
xchg
xor
lret
mov
adc
jl
test
xor
iret
addr16
out
fildl
cmpl
cmp
out
xor
addr16
sarl
or
mov
ds
aad
pop
mov
mov
pop
adc
scas
loopne
loopne
cwtl
movsl
call
rcll
pop
ja
nop
jmp
pop
shl
stos
mov
mov
and
cmp
std
add
js
add
jle
jecxz
pushf
push
out
icebp
enter
int3
aam
leave
xor
dec
sbb
hlt
xchg
das
add
std
ljmp
and
movsb
push
and
dec
push
push
dec
pop
sti
or
xor
les
data16
xor
push
adc
add
sub
and
or
pop
xor
dec
pop
mov
in
mov
fldenv
daa
push
movsl
xchg
repnz
or
mov
stos
rcr
add
imul
ds
fdivrs
sbb
pop
ret
xchg
adc
or
fwait
movsl
movsl
mov
xor
insl
adc
sti
in
pop
inc
repz
test
add
push
mov
xchg
cmp
dec
jecxz
xor
add
adc
test
sahf
lods
inc
jne
push
stc
dec
popa
shlb
mov
push
and
mov
mov
fs
leave
cmp
rorl
nop
mov
addl
mov
or
mov
insb
and
lea
xchg
inc
mov
pop
inc
shll
adc
sbb
mov
lock
push
stos
ljmp
scas
jbe
sub
sbb
sub
cmp
pop
pop
pop
cmpsl
mov
xlat
loope
sub
mov
jns
aas
or
cmp
mov
mov
roll
fisubl
push
in
incl
cmp
iret
sub
fildll
in
mov
out
push
xlat
sbb
mov
add
ds
sub
iret
insl
xor
or
cmp
bnd
sbb
dec
cmp
xchg
dec
jge
xor
shrl
outsl
into
dec
test
loopne
dec
pop
cld
adc
in
in
dec
shrl
cmc
fidivs
adcb
scas
cmp
xchg
mov
xor
sbb
sub
lock
mov
mov
daa
dec
mov
fists
inc
dec
je
dec
xchg
dec
test
mov
das
jp
ret
mov
sbb
inc
jp
pop
sbb
jb
add
stos
adc
js
lret
cmp
add
add
xlat
ja
or
aad
xor
mov
stos
sahf
sbb
int3
loope
cs
pop
pop
pop
or
iret
lods
stos
pop
loop
cwtl
add
ret
test
aaa
mov
dec
add
inc
mov
lcall
or
dec
cmp
fstpt
clc
sub
mov
cmp
mov
les
fisubs
stos
dec
lahf
daa
int
xchg
xchg
mov
jmp
xchg
ds
adc
inc
mov
fstl
lret
into
jnp
inc
dec
fstp
out
xchg
aaa
sub
movsl
mov
negb
push
push
and
test
pop
repz
xchg
aaa
sub
leave
mov
jl
cmp
scas
gs
stos
pushf
cmc
divb
addr16
mov
pop
mov
and
mov
push
add
adc
and
dec
jo
mov
mov
or
ljmp
inc
cli
adc
fstps
inc
push
in
adc
enter
je
leave
test
adc
cli
jb
mov
leave
or
repz
xacquire
mov
std
jnp
mov
push
hlt
fdivrl
int
mov
into
into
lea
sub
jl
repz
out
pop
roll
fbstp
push
sbb
mov
scas
lea
mov
xchg
cmp
fldt
xchg
pushf
or
inc
pop
call
out
pop
test
cmc
cmp
out
sarb
ljmp
orl
jbe
adc
lret
xor
or
jns
mov
das
and
inc
mov
daa
lock
push
lcall
or
pop
pushf
adcb
das
and
mov
adc
or
cltd
rcrl
popa
out
clc
jae
shll
push
scas
pop
test
pop
fs
mov
bound
insl
fdivr
rcll
shr
dec
repz
and
add
jns
fsubp
and
xor
jo
jns
dec
and
or
iret
push
test
dec
sbb
fwait
adc
sahf
xchg
out
jne
imul
pop
lods
pop
cmp
add
dec
inc
pushf
jb
ss
mov
in
je
stos
adc
aam
ficoml
cmpl
dec
arpl
aad
push
sub
and
mov
mov
or
sbb
push
pop
and
jecxz
int
xchg
sbb
lods
scas
jg
into
mov
adc
inc
int3
loop
dec
lahf
dec
adcl
xor
js
insl
or
test
loopne
push
mov
les
js
pop
stos
imul
add
loop
sub
in
cs
ljmp
movsl
mov
lcall
sarl
xor
out
call
cmp
xor
sub
xor
pop
push
sahf
in
testl
inc
push
adc
cmp
imul
add
adc
addr16
lret
daa
dec
bound
mov
imul
push
and
cmp
mov
jb
xchg
outsb
setb
pop
pusha
pop
mov
or
ljmp
mov
dec
pop
mov
cmp
pop
clc
in
cmp
cmp
aam
fsubr
mov
movsb
cmp
push
mov
push
adc
into
enter
sbb
ja
fidivl
stos
sbb
sbb
cmpsb
adc
xor
repz
not
cmpsl
ret
out
lea
mov
out
xchg
fsubs
cmp
inc
and
lret
mov
xchg
cmc
hlt
imul
xor
aad
adc
rolb
in
cmp
or
or
pop
mov
xchg
mov
repz
xchg
push
inc
ficompl
inc
aam
cmpsb
inc
cmc
shlb
xor
push
cmp
cmp
stos
test
mov
pop
sbb
xor
pop
cmp
cmpl
outsb
cmp
push
xor
pop
lods
orb
call
push
gs
arpl
gs
test
mov
loop
cmp
mov
icebp
in
mov
js
gs
or
into
dec
add
push
adc
sub
dec
test
sub
push
mov
sub
mov
ret
adc
sub
jge
inc
mov
rcl
out
mov
jle
or
dec
dec
daa
leave
rcr
cmpsl
cmc
jne
dec
adc
aam
jno
xor
cmpsb
push
jne
cmpsl
jo
mov
xchg
mov
mov
pop
adc
in
adc
pop
sub
sbb
imul
sbbb
and
mov
and
push
stos
outsl
inc
xor
in
mov
movsb
fdivrl
push
sbb
pop
push
ret
or
jae
push
xor
cmp
xchg
xor
pop
loopne
mov
sbb
pop
mov
scas
add
mov
aas
mov
aaa
xor
xchg
adc
add
outsl
jecxz
sbb
xlat
mov
dec
lahf
dec
xor
outsl
sti
push
mov
sbb
adc
fs
or
stc
ret
addr16
jo
jecxz
push
scas
stos
sbbl
in
shlb
lahf
daa
push
pop
ror
adc
add
test
sub
dec
addr16
push
xchg
in
inc
add
and
pop
fcmove
dec
jno
and
aad
addr16
stc
inc
inc
jp
add
lock
andl
pop
mov
mov
push
addr16
mov
inc
add
dec
add
mov
mov
pop
pop
into
sbb
jne
mov
adc
push
xchg
push
sarl
aad
icebp
dec
lret
hlt
scas
jl
adc
mov
jnp
das
lea
mov
mov
repnz
pop
xchg
mov
and
scas
stos
bound
dec
push
adc
out
dec
adc
xor
cmp
dec
cmp
inc
sbbb
xor
cmp
call
xchg
icebp
fidivl
sbb
mov
sbb
cmp
fwait
ds
sub
jb
loop
jle
add
sbbl
inc
mull
sub
mov
das
ss
mov
rolb
les
cmp
or
cmp
ljmp
cltd
inc
fdivrl
or
sahf
cmp
mov
push
xchg
pop
sub
adc
mov
js
daa
pop
sub
rolb
hlt
int3
push
lret
adc
mov
stc
jae
sbb
mov
aam
adc
cs
jecxz
push
inc
imul
push
icebp
mov
repnz
and
scas
push
pop
sub
sbb
sar
or
xor
cmp
scas
cmc
test
loop
push
xor
push
sbb
push
pop
jno
lahf
sbbl
inc
xor
cmc
push
lods
daa
mov
es
loop
xchg
push
cld
pusha
fadds
xchg
xchg
sbb
mov
xchg
cmp
pop
shl
clc
hlt
push
mov
dec
cmpsb
and
pop
aad
cli
fyl2x
and
insb
push
nop
loopne
testb
push
dec
push
cwtl
sbb
jmp
je
adc
pop
lea
lds
mov
fadds
scas
test
lret
dec
stc
popa
cmc
and
adc
inc
push
loope
add
mov
mov
push
arpl
jecxz
add
or
sub
mov
dec
outsl
inc
or
sub
cld
mov
pop
mov
jg
lahf
fildll
and
outsb
lods
pop
sbb
scas
lods
sbb
mov
sub
push
popa
jmp
xchg
cwtl
mov
sbb
jl
leave
fs
out
das
aaa
insl
add
testl
adc
xor
lcall
cmp
das
mov
lret
sbb
mov
inc
inc
aam
hlt
pop
movsl
das
cltd
jnp
mov
movb
pop
addb
inc
push
stos
ficoml
enter
sbb
lods
es
sbb
or
and
pop
cmp
or
mov
dec
mov
or
add
loope
fstpt
xchg
pop
jle
push
mov
xor
mov
lea
insb
jecxz
xchg
mov
xor
adc
mov
add
inc
or
jmp
orb
xlat
mov
adc
lahf
jl
loop
repnz
jnp
loopne
xchg
mov
enter
mov
cs
popf
xor
insb
mov
xchg
xchg
mov
xor
xor
rorl
aaa
ja
ljmp
add
cmp
lods
add
push
jmp
lds
aas
loop
je
in
jge
out
test
out
orl
sbb
or
ficompl
lret
mov
pop
mov
inc
imul
mov
mov
iret
cwtl
sbb
aaa
mov
push
int3
jge
les
pop
lret
aas
dec
pushf
adc
pusha
jo
gs
js
aam
ret
es
sbb
mov
xor
dec
gs
push
sub
sti
rcrb
ss
aad
cmp
fistpl
inc
cwtl
test
mov
push
cmpsb
stos
jb
mov
pop
pushf
out
bound
xchg
jecxz
gs
rorl
and
fsubr
cli
xorl
ret
imul
xchg
sbb
das
leave
out
mov
mov
pop
jne
and
xlat
in
push
pop
les
call
push
inc
es
mov
sub
cmp
xlat
fldcw
lret
sbb
and
fs
or
or
outsb
loop
fildl
dec
cmp
lds
ja
dec
or
pusha
repz
lds
add
mov
sub
enter
sarb
out
and
push
mov
flds
xchg
movsl
rcrl
mov
mov
out
pushl
notb
stos
in
orb
shll
inc
cmp
into
jne
adc
sahf
jbe
gs
sub
aad
in
xchg
dec
push
xlat
mov
jl
add
and
mov
mov
mov
inc
out
cli
fsts
sahf
sbb
mov
dec
jecxz
pushf
cmc
adc
aaa
sbb
pop
jl
clc
lds
mov
repnz
xor
call
lcall
sahf
filds
jp
jno
cmpsb
and
js
push
shlb
pop
cmpsb
jbe
cmp
sbb
adc
or
xchg
mov
addl
addl
xor
int3
push
popa
mov
fcoml
adc
ret
inc
xchg
add
push
add
out
sub
loope
cld
mov
mov
mov
lods
sub
addr16
icebp
xor
out
jmp
push
xor
adc
add
jge
movsb
or
adc
mov
and
mov
in
adc
push
call
xor
dec
loopne
jbe
sub
aad
data16
push
dec
inc
loopne
js
mov
ffreep
or
xchg
cmp
nop
test
fst
sbb
cmpsl
out
aad
cmp
cmp
imull
loope
adc
fs
pushf
and
cld
fistpll
mov
sub
add
stc
push
call
jae
jle
mov
test
mov
pop
sbb
out
jo
or
adc
repz
je
fsubrs
sti
sub
push
mov
in
xchg
push
cmp
mov
and
int3
xor
xor
in
fisubl
imul
aas
loop
push
xor
mov
sbb
mov
xor
int
cmp
test
movsb
movsb
sbbb
push
lahf
out
push
sahf
imul
nop
mov
sbb
popa
cmp
or
sarb
and
popa
jae
fistpll
inc
cmpsl
jno
int3
mov
sbb
lret
mov
fcmove
jbe
std
dec
xchg
inc
add
add
ja
into
cltd
xor
push
out
iret
add
mov
movsb
lea
movsl
pop
out
lods
out
adc
xchg
inc
insb
fldcw
lods
insl
je
or
dec
mov
jne
leave
add
fwait
addr16
lods
lea
adc
push
cmpsb
or
and
sbb
sub
dec
sub
push
xchg
into
daa
jns
cs
adc
pop
test
data16
in
out
aaa
jp
mov
pop
add
adc
sti
xlat
loope
jo
repnz
push
jns
jmp
cltd
sbb
cmpb
rorb
cld
sbb
xchg
jnp
inc
sbb
mov
in
bound
jmp
idiv
or
inc
fcmovnb
imul
adc
rcll
arpl
push
xlat
xchg
and
xorb
xlat
and
adc
pop
or
dec
sbb
pop
test
lock
sbb
mov
into
cmp
sub
push
int3
out
es
mov
pop
push
xchg
mov
mov
and
sbb
popf
ret
sub
mov
pop
ret
ljmp
aaa
out
xchg
jg
daa
xchg
push
fisubrl
add
add
daa
lcall
add
psubw
inc
inc
gs
in
dec
adc
mov
scas
lret
cs
xchg
movsb
outsb
push
enter
sar
test
sub
aad
or
xor
dec
movsb
call
ds
int
cmc
mov
mov
push
sub
test
mov
xchg
mov
lods
cmc
jmp
jne
shrb
xor
mov
mov
cwtl
inc
push
daa
fcompl
pop
xchg
je
repz
lea
std
test
mov
jno
mov
mov
xchg
jmp
cmp
mov
cmp
or
pusha
mov
dec
aas
test
nop
arpl
pushf
jbe
mov
add
ficoms
call
cwtl
lds
jp
ret
mov
mov
jecxz
sub
and
pushf
cvtdq2ps
into
lds
mov
cmp
mov
outsl
in
mov
idivb
fucomi
dec
jmp
push
pop
in
cltd
inc
leave
aad
out
and
pop
sub
inc
push
adc
stos
add
cmc
and
rcrl
das
add
clc
adc
in
xchg
popl
jmp
clc
out
test
cmp
xchg
jg
jp
xor
mov
das
adc
jle
push
cmpsl
aad
adc
mov
cmp
idivb
das
ret
pop
sbb
jae
negl
jo
sub
fwait
rcr
sbb
jbe
inc
sub
andl
sbb
shl
cli
mov
test
pop
rorb
pop
sbb
jmp
in
sbb
push
int3
add
mov
xchg
pop
push
sub
lock
pop
pop
cltd
inc
mov
fistl
push
cmpsb
pop
push
sub
les
push
mov
fsubl
dec
aad
fildl
adc
jle
cmp
sbb
call
fdivs
popa
clc
test
adc
fwait
adc
mov
add
xor
cli
cltd
ljmp
dec
mov
cld
push
js
jb
cmpsb
es
gs
pop
repz
shlb
cltd
jecxz
loope
insb
and
mov
hlt
mov
push
xor
or
mov
jne
sarb
push
pusha
shrb
jle
mov
inc
adc
mov
dec
scas
aad
ja
les
scas
sub
xchg
fists
test
xor
pushl
pop
xchg
and
jno
inc
shll
mov
mov
nop
decb
in
js
push
test
pusha
cmp
cld
stos
stos
in
dec
ja
xchg
push
sbb
insl
leave
imul
inc
pop
mov
in
addr16
push
hlt
lea
dec
cmp
je
or
or
out
sbb
jge
cltd
leave
inc
enter
js
xor
orb
in
testl
cwtl
aas
fsubrs
mov
and
xor
lret
test
sub
js
je
xor
mov
loope
int3
arpl
into
cmp
adc
stc
lret
mov
jmp
stc
adc
mov
es
nop
lcall
lock
fistl
lret
arpl
jae
push
cmp
out
leave
mov
and
or
xchg
adc
push
pop
jo
add
mov
aad
or
ss
cmpsl
enter
sub
pop
into
idiv
pop
dec
les
fwait
inc
fistl
mov
cmp
out
adc
cmp
cmp
mov
fcomps
rorl
loopne
push
es
aas
out
jbe
mov
push
inc
icebp
mov
aas
mov
mov
mov
insb
xlat
adc
add
dec
nop
daa
pushf
sti
shll
push
cmp
sbb
mov
js
jg
fxch
mov
mov
xor
sub
or
mov
xchg
jmp
xor
clc
pop
pop
or
mov
scas
cmp
cmp
inc
rcr
mov
xchg
xchg
stos
pop
fs
sub
aas
std
or
loopne
movsl
lods
aas
dec
arpl
test
mov
fistps
inc
mov
adc
mov
xchg
jae
push
das
jl
aas
xchg
mov
pop
je
fcoml
lcall
push
aas
push
repz
imul
push
xchg
cs
cwtl
pop
jbe
push
dec
arpl
ds
jbe
addr16
jecxz
cmpsb
jecxz
test
mov
push
xor
sub
neg
dec
lods
jecxz
jl
lods
lds
pop
in
inc
cs
mov
pop
inc
mov
js
ljmp
into
addl
sbbb
sbb
ficomps
fcmove
hlt
push
fwait
movsl
scas
sub
ljmp
or
mov
pop
inc
lods
pusha
rorl
pop
xor
int3
lret
add
sarb
aad
les
sub
testb
add
cli
aam
cmp
inc
movsb
je
sbb
pop
out
xchg
fadd
repnz
push
out
test
and
xchg
xchg
lock
jno
inc
xchg
enter
mov
int
in
mov
cmp
mov
mov
inc
jg
add
das
lds
stos
push
xor
mov
aam
outsl
cmpsb
jp
jle
cmc
into
mov
xor
sub
ljmp
and
or
xchg
loope
pop
andl
outsl
xchg
mov
addb
js
in
jmp
fcomp
out
cltd
imulb
push
imul
adc
sub
cltd
ror
mov
movsl
mov
fisttpll
iret
or
jns
daa
sbb
addr16
lret
and
popa
or
inc
push
pop
mov
mov
add
xchg
ror
inc
dec
int3
ret
pop
fwait
sbb
xchg
ja
dec
adc
icebp
xlat
ds
lods
or
dec
ds
fsts
dec
popf
imul
ficompl
sbb
rcrl
cmp
test
cmc
insl
inc
notb
lock
dec
pop
mov
pop
cwtl
jae
dec
lret
sbb
in
shlb
sub
mov
xchg
bnd
and
addr16
loopne
adc
dec
mov
push
out
popa
pushl
sbbl
mov
rcrl
loope
icebp
popl
lahf
adc
inc
fists
popa
pushl
sbbl
mov
rcrl
loope
icebp
popl
pushf
pop
mov
inc
out
popa
jno
pop
pop
xchg
mov
inc
shrl
dec
icebp
xchg
add
xor
inc
iret
push
out
loope
jno
jle
cmp
dec
xlat
cs
push
orb
int3
int3
int3
int3
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
xchg
mov
mov
xchg
int
fsts
add
xor
and
push
dec
inc
mov
insl
fs
lea
aam
in
in
adc
add
inc
and
inc
pop
je
fs
sub
aam
les
adc
add
inc
dec
or
push
daa
cmp
pop
or
test
fcoms
pop
cmp
xchg
loop
outsl
ja
fists
and
pop
mov
pop
inc
fldcw
inc
fadds
call
adc
loop
sub
mov
pop
push
add
lcall
hlt
sub
mov
aad
mov
outsb
or
hlt
mov
movsb
mov
ret
mov
or
adc
mov
pop
sub
je
add
lock
ficoms
inc
outsl
dec
fdiv
sub
add
clc
dec
and
lods
int
daa
inc
dec
xchg
jno,pt
imul
repz
addb
inc
pop
outsb
dec
int3
sti
popa
push
push
orl
mov
movsb
mov
hlt
in
in
adc
add
xor
and
push
jno
mov
jne
dec
rorb
rcl
push
movsl
mov
push
mov
xor
sub
adc
lret
neg
in
rcl
lahf
test
hlt
test
into
jno
push
push
xor
adc
or
loopne
ffree
movsl
rcl
add
std
adc
add
xor
and
push
dec
inc
pop
je
fs
lea
aam
in
in
adc
add
xor
and
push
dec
inc
pop
je
fs
lea
lret
adcb
cmp
mov
lahf
es
cwtl
jmp
cs
jl
add
sub
idivl
rcrl
addr16
cmp
jne
cmp
cmp
stos
in
mov
test
sub
mov
adc
or
into
cltd
in
repz
cltd
push
mov
cld
or
push
cmpsb
jns
mov
inc
rclb
call
mov
lret
lds
out
xchg
dec
mov
jmp
int
leave
or
pop
pop
int3
and
add
fisubrl
mov
sbb
daa
xor
test
add
cli
mov
jecxz
rcrl
loopne
rep
cltd
jmp
fisttps
arpl
jle
dec
dec
pop
ror
mov
outsb
cmp
xchg
iret
mov
xchg
das
jbe
xor
inc
add
fimull
jnp
fadds
pop
or
icebp
sbb
mov
pop
inc
and
sbb
das
stos
jp
mov
lock
icebp
fs
push
repz
inc
inc
push
dec
inc
ret
int3
test
pop
xchg
out
pop
ja
addr16
mov
ja
pop
inc
mov
mov
xor
es
push
pop
movsb
or
mov
call
adc
mov
mov
pop
push
fwait
enter
jp
adc
jge
mov
fisttpll
pop
out
or
jae
insl
push
or
call
mov
adc
or
mov
push
test
mov
push
pop
mov
inc
pushf
adc
mov
mov
clc
adc
ds
mov
jbe
dec
push
jne
mov
push
outsl
jle
add
pop
inc
rolb
int
mov
pop
xchg
pop
pop
aad
out
in
and
test
stc
push
test
mov
sub
ljmp
mov
adc
rcll
xor
and
sbb
cmp
or
xchg
lea
icebp
jecxz
push
sub
stos
jnp
fs
xor
mov
fwait
mov
xor
adc
inc
adc
dec
or
jnp
xchg
test
jecxz
lahf
mov
push
jb
pop
pusha
std
and
and
inc
pushf
xchg
insl
ret
add
mov
addr16
lock
or
jne
add
lea
mov
scas
push
mov
pushf
mov
xchg
fucomip
aaa
fldenv
lcall
pop
xor
sbb
aad
ljmp
pusha
andb
jmp
jl
outsb
dec
mov
mov
xchg
sub
xor
xchg
push
out
inc
jo
cmp
sbb
jbe
aaa
scas
lds
push
je
arpl
paddw
stos
sahf
daa
add
xchg
add
test
decl
cwtl
lods
or
pop
and
ret
and
idivl
and
hlt
xchg
out
inc
lcall
orl
insl
sub
xor
ss
imul
aaa
decl
pop
jb
pop
pop
xchg
dec
ret
leave
dec
mov
mov
popf
pop
jp
loop
repnz
popa
lods
out
lock
mov
dec
ret
inc
mov
in
lods
inc
xchg
movsb
mov
js
lds
pop
adc
je
xchg
xor
push
test
fidivs
inc
enter
push
es
add
pusha
add
mov
aam
mov
pop
cli
lods
test
fidivl
jne
lock
sarl
add
les
push
push
mov
mov
jmp
lret
fisubl
xchg
mov
sub
dec
push
pop
sub
push
inc
pop
dec
jbe
and
add
push
scas
xchg
pop
add
repnz
in
divl
jle
xchg
ss
repz
ror
fstpl
aad
xchg
add
sub
and
div
aad
mov
fdivrl
lods
fsubrs
scas
jne
mov
jae
cmpsl
in
push
ljmp
pop
sbb
mov
xor
lret
mov
iret
xor
sub
in
sbb
mov
push
cwtl
les
outsl
cmp
push
idiv
pop
sbb
out
test
in
pop
cwtl
pop
mov
cltd
mov
xchg
mov
jb
popf
outsb
in
pop
sub
pavgb
sbb
or
pop
xor
cmp
aad
fcoms
jecxz
fbld
lea
sbbl
cltd
outsl
fcmovne
test
jg
loop
adc
xchg
mov
out
mov
dec
mov
dec
mov
cli
xor
lods
push
mov
cmp
sete
ror
mov
jmp
scas
lock
arpl
lcall
js
sbb
cmpsl
pop
jl
sbb
fidivrl
and
je
xor
dec
adc
xor
cmp
mov
mov
jns
test
lds
or
inc
dec
dec
imul
mov
insl
mov
xor
es
adc
dec
fistpl
test
dec
cld
mov
xor
nop
iret
jb
dec
js
pop
push
inc
pop
popa
dec
xchg
sbb
cltd
push
repz
fmuls
out
mov
insl
xor
adc
dec
loope
pop
or
adc
mov
cli
dec
daa
loopne
push
sub
and
loopne
lahf
add
xlat
rorb
cmp
push
out
insb
jnp
mov
adc
mov
fwait
dec
ds
aas
dec
pop
push
into
mov
and
adc
sbb
sub
mov
addr16
insl
adc
aas
mov
icebp
xchg
push
out
sub
inc
sub
repnz
add
les
pusha
pop
dec
cmp
ss
fdivrs
stc
movhps
test
popf
or
mov
jmp
or
fisubs
hlt
test
and
sbb
lcall
inc
sub
pop
lock
cmpsb
dec
push
cmp
add
cmc
inc
mov
pop
shlb
in
imul
fdivs
inc
int
lea
dec
push
add
push
daa
cmp
in
test
inc
pop
cmp
loop
les
and
sbb
jno
pushf
xlat
out
repnz
mov
aad
mov
mov
sbb
and
pop
out
fstpt
and
push
lods
jbe
and
pop
imul
xchg
inc
out
leave
insb
cmpb
add
sub
mov
out
and
jo
shr
pop
icebp
cs
inc
cs
test
and
ljmp
fadds
and
scas
repz
add
pop
fsubl
mov
sti
call
stos
outsl
bound
xchg
mov
aaa
dec
mov
mov
inc
mov
adc
sub
dec
fcoml
jmp
testl
fnstsw
push
jle,pt
cmc
jp
shll
lret
cmp
cmc
pop
sarb
out
or
mov
mov
jns
mov
jo
test
mov
fwait
mov
andb
push
divb
or
mov
mov
loopne
lods
lea
scas
and
loopne
popf
adc
xchg
loop
jp
sub
inc
fwait
or
mov
push
cli
pop
xlat
xchg
cld
data16
adc
pop
pushf
sub
pop
adc
sbb
test
sub
popf
mov
add
aad
aas
jmp
xchg
mov
cmp
sub
dec
lods
mov
int
dec
push
imul
inc
mov
je
adc
mov
and
jmp
sbb
sub
insb
push
ds
cmc
push
out
cmp
push
mov
mov
cmp
in
adc
sub
push
mov
mov
lds
sahf
sub
push
js
fisubrs
mov
dec
nop
mov
rcl
push
push
je
pop
dec
mov
movl
imul
ret
pop
loope
xor
fdivrs
mov
mov
mov
add
cld
popa
aam
imul
cmp
ss
je
test
movsl
push
mov
popf
and
xor
int3
lods
jnp
sbb
std
jb
shll
mov
dec
sub
sbb
lods
xchg
sub
std
and
out
fists
into
jle
jecxz
mov
loopne
cmp
jae
shrb
lret
stos
stc
mulb
mov
scas
out
mov
imul
mov
clc
or
bound
lods
mov
add
in
ret
aad
xchg
sub
add
jns
movsb
popa
pop
cmp
idivb
jp
add
and
stos
push
daa
sbb
xchg
fidivrs
or
pop
pop
je
mov
push
add
xchg
push
pop
and
or
ljmp
mov
or
xchg
adc
aad
lods
cmp
loope
rolb
push
shr
cmp
mov
sub
or
pop
int3
ljmp
pop
roll
pop
out
pop
mov
pop
or
inc
aad
scas
pop
sub
lods
stos
sbb
pop
addr16
sub
xchg
pop
add
daa
jnp
mov
inc
fwait
imul
pop
or
sbb
jns
push
sbb
shll
or
addl
lods
repz
test
mov
mov
mov
mov
ror
test
adc
test
jecxz
sbb
call
lods
pop
mov
test
ja
jg
out
adc
pushf
scas
test
jbe
cs
int3
mov
add
loope
icebp
sbb
aaa
lcall
jmp
in
mov
in
xor
lcall
jmp
jge
add
jl
mov
and
fs
fldl
sbbb
bound
dec
push
adc
cmp
sub
mov
jne
cmp
lods
sbb
in
imul
imul
pop
xchg
jl
mov
adc
adcb
push
add
pop
xor
mov
rclb
stos
leave
icebp
jmp
pop
test
mov
enter
sbb
std
inc
pop
cmp
inc
xorb
lcall
mov
addr16
leave
es
std
in
mov
dec
mov
pop
and
mov
pop
sbb
inc
xchg
cmpsb
push
bound
loopne
or
adc
or
loope
ss
mov
pop
jo
dec
cli
jb
sub
lods
rcll
xchg
push
cmp
mov
cs
ja
pop
and
add
push
enter
sub
mov
dec
test
xchg
dec
aas
add
sub
icebp
push
lret
xchg
mov
xchg
mov
mov
das
js
lods
mov
pop
push
mov
sub
push
jo,pn
outsb
lds
test
lock
dec
mov
cltd
xlat
adc
jno
jnp
ja
adc
pop
imul
fdivrs
fnsave
and
sbb
add
sbb
cmp
add
xchg
lret
push
cmp
mov
inc
jl
aas
cld
jo
arpl
outsb
cmp
push
mov
sub
cmp
push
pop
in
cmpsb
lahf
fildll
rcrb
popf
mov
out
mov
push
inc
inc
sar
jmp
ret
incl
pushw
in
adc
ljmp
sub
jae
test
jge
jbe
aam
loopne
fwait
push
loopne
mov
mov
xor
sub
clc
mov
cmc
cwtl
enter
inc
outsb
push
mov
add
sbb
xlat
mov
sti
std
sahf
and
cmpsb
mov
mov
inc
fmull
es
xor
xchg
mov
add
and
call
mov
jg
fs
lods
fs
sbb
push
xchg
ret
cmc
in
clc
adc
push
ja
mov
out
repz
repz
mov
xchg
cmpsl
fwait
jecxz
pushf
sbb
mov
cli
mov
pop
dec
addr16
ret
mov
pushf
rol
lret
aad
js
or
dec
adc
pop
divl
mov
push
addb
push
clc
mov
les
rcrb
rol
clc
and
jle
or
xor
mov
xchg
jne
mov
push
mov
fs
mov
shll
adc
sbbl
fxch
mov
add
loop
dec
mov
scas
loop
jns
sbb
test
push
sub
add
imul
sub
fcmovb
fs
mov
fnstenv
inc
sub
push
mov
ret
jns
rcrl
mov
js
out
imul
push
pop
jbe
jle
mov
cmp
loopne
mov
fstps
adc
mov
leave
mov
mov
sub
repnz
ja
or
adcb
xchg
sahf
pop
xchg
aam
je
or
int3
cmp
test
cmc
scas
scas
sbb
sti
xchg
cltd
push
jmp
fldl
icebp
pop
mov
inc
cmpsl
insl
sub
cmc
cmp
push
and
sbb
lods
into
out
fsubs
repnz
stos
lock
out
pop
sahf
xor
sub
jle
pushf
loope
stos
mov
fs
mov
inc
daa
push
xchg
cs
mov
enter
push
insl
mov
arpl
jmp
fiaddl
or
jne
aaa
popf
xchg
fsubr
inc
fstl
andb
cmp
pop
loope
shl
xor
push
scas
int
cld
mov
cmp
and
repnz
jbe
out
and
mov
wrmsr
mov
mov
mov
add
test
cld
repnz
stos
in
sub
mov
mov
rolb
push
fiaddl
push
fucomip
xchg
js
ds
out
mov
hlt
pop
sbb
mov
adc
add
out
sub
roll
jae
test
std
xchg
xor
sub
sarb
les
mov
mov
inc
test
mov
repz
push
xchg
mov
push
inc
pop
mov
mov
mov
sub
push
xchg
lcall
fisubrs
jle
lahf
cmpsb
mov
lcall
stos
rcrl
or
fisttpl
xorb
xchg
push
dec
mov
xchg
mov
and
cmp
adc
xchg
ret
cltd
imulb
std
xchg
lock
out
pop
xchg
rol
xor
xchg
pop
mov
ja
cli
icebp
cltd
or
mov
jmp
daa
push
andb
rcll
icebp
jbe
pop
or
xor
scas
sub
int3
xor
sbb
mov
aad
ret
mov
pop
stc
nop
cld
mov
push
test
ret
inc
and
int3
cmovp
dec
sub
repnz
loope
int3
mov
xchg
rcrl
mov
dec
push
mov
mov
subb
leave
clc
mov
mov
sbb
cmpsl
pop
jle
xchg
cltd
es
and
imul
pop
out
or
lcall
lea
enter
dec
cwtl
xor
stc
pop
lret
xchg
sbb
inc
xchg
aaa
dec
adc
xchg
in
aas
adc
insb
out
and
icebp
pop
xor
push
movsb
test
jo,pt
add
mov
mov
dec
and
or
mov
insb
stos
fisubrs
lods
xlat
sbbl
or
mov
mov
cmp
pusha
divb
mov
mov
or
mov
leave
xchg
and
fstpt
mov
pushf
mov
cmp
out
jp
xchg
or
adc
cmp
mov
dec
mov
inc
adcl
mov
shlb
dec
lret
out
daa
xor
cmp
lock
ja
or
inc
and
int3
cmpsl
stos
mov
cmp
movsl
dec
or
xor
and
cld
imul
call
jne
mov
inc
gs
and
pop
movsl
mov
shrl
addr16
dec
in
mov
lock
pop
es
sbb
push
cmp
pushl
mov
aad
cmp
xchg
movsl
dec
andl
mov
aad
outsb
xchg
pop
test
xchg
aam
in
sub
adc
lret
es
repnz
jecxz
xor
lahf
dec
xor
leave
mov
inc
dec
fnsave
dec
ret
scas
inc
mov
and
or
adc
pop
dec
jmp
mov
addb
cmp
outsl
int3
sub
adc
dec
sub
out
out
mov
sahf
into
pop
pop
xchg
mov
aam
pop
in
lahf
push
fisttpll
pop
jae
inc
ret
outsl
mov
sbb
pop
imul
jno
stos
mov
mov
push
stos
lea
movsl
xlat
xor
sbb
xchg
fsub
jg
mov
sete
pusha
adc
mov
mov
push
pop
inc
sti
push
and
andb
cmpsl
xchg
push
push
sbb
sbb
add
imul
call
test
sbb
dec
mov
mov
mov
iret
jo
in
jne
les
xchg
aad
or
in
push
ficomps
inc
mov
insl
div
pop
enter
push
and
shl
add
lock
movsb
std
loop
cmpsl
outsb
cld
push
jns
repnz
ljmp
xor
cli
sub
hlt
mov
je
xor
inc
js
fsubs
or
adc
xor
std
mov
mov
pop
xchg
fistl
mov
and
add
xchg
inc
mov
test
jo
jns
jp
jecxz
pop
push
push
xlat
pushf
push
push
pop
int
scas
sub
or
repz
lods
and
int
xchg
adcl
repnz
das
sahf
lock
int3
outsl
outsl
pop
out
insl
mov
jno
dec
mov
dec
push
mov
mov
add
gs
jge
jg
jbe
mov
nop
or
pushf
mov
fs
mov
dec
ja
dec
mov
adc
add
cli
jge
lahf
jl
in
adc
incl
fadd
icebp
push
xor
repz
iret
jecxz
jnp
ja
fwait
std
rclb
jb
mov
fidivl
js
mov
ret
push
sub
popa
sub
fcomps
sbb
jne
inc
mov
sbb
test
in
sbb
cli
push
or
xchg
daa
xor
daa
lcall
xchg
test
sbb
and
and
mov
sbb
shlb
movsl
xor
in
jecxz
and
pop
loopne
mov
lea
add
mov
pusha
mov
stc
pop
call
cli
into
jne
add
outsl
xlat
push
icebp
sbb
xchg
jb
jb
push
xchg
ja
rcrb
pop
add
pop
js
test
nop
jge
movsb
xchg
push
dec
subb
inc
fcmovnbe
mov
mov
sbbl
orl
inc
arpl
add
cmc
faddl
cld
mov
xchg
lret
jo
sbb
stos
fldpi
lock
sti
xchg
adc
pushf
fstp
mov
das
cltd
or
roll
jge
or
pop
add
mov
loop
in
push
inc
std
mov
fsubr
insl
xchg
outsb
pop
and
lret
sub
lds
and
test
and
push
xor
mov
call
xor
in
push
inc
in
ljmp
cmp
sbb
movsl
fadd
faddl
mov
mov
jge
mov
out
and
jnp
fcoml
repnz
shrb
fimull
xor
inc
andl
xchg
add
sbb
fucomp
mov
cwtl
iret
cmpb
sbb
filds
sbb
dec
xchg
add
data16
addl
push
leave
adc
xor
das
aas
repnz
mov
sarl
cmc
cmp
in
or
add
pop
xor
dec
sarb
mov
cltd
lcall
pop
xchg
xchg
out
inc
out
pop
mov
xchg
or
add
fldt
inc
or
mov
sbb
aas
jnp
or
sub
std
repz
popa
cmc
and
pushf
jnp
sbb
or
mov
push
movsl
mov
mov
ds
adc
stc
cltd
sub
and
gs
dec
add
jg
hlt
out
insb
sti
cmp
cwtl
mov
cmc
sti
out
imul
inc
xor
push
rsm
mov
mov
sbb
push
pusha
lret
cmp
js
test
mov
mov
arpl
jmp
gs
daa
push
inc
mov
cli
sub
arpl
add
jp
sbb
mov
xlat
mov
sub
dec
jp
aaa
jp
aas
repz
mov
xor
loop
imulb
mov
pop
dec
inc
xor
pop
push
out
cmp
or
jmp
push
outsb
cmp
sbbl
cwtl
orl
mov
ja
push
addr16
adc
inc
cmp
cmpl
jmp
jecxz
pusha
mov
out
imul
scas
push
dec
pop
lret
xchg
dec
mov
iret
shl
mov
pop
inc
jno
int
js
xor
xrelease
pop
addr16
add
and
push
frstor
push
xchg
xor
dec
fcom
xchg
pushf
mov
jecxz
rcrb
test
and
pop
ljmp
outsl
jbe
imul
pop
roll
movb
jge
sub
dec
cld
mov
push
int3
loopne
pop
or
cltd
insb
call
lods
xchg
test
pop
mov
push
mov
mov
fsubl
mov
jns
push
pop
mov
gs
push
push
inc
push
adc
or
adc
and
and
xchg
test
xor
push
aas
fwait
sub
sub
mov
mov
es
mov
cld
cmp
out
pop
clc
cmp
ss
jp
xchg
mov
aam
ret
movsb
iret
push
movsb
mov
mov
push
mov
je
mov
pop
jbe
and
lcall
mov
adc
cmpsb
mov
repnz
lahf
sub
xchg
icebp
push
dec
or
xchg
sub
pop
xor
inc
sub
les
push
push
push
inc
pop
jecxz
add
lret
data16
jnp
jp,pt
in
dec
hlt
shll
dec
mov
in
leave
push
lds
mov
or
or
enter
xor
loope
xchg
fwait
sbb
push
ja
ffree
sbb
jb
test
in
cmpsb
mov
sbb
nop
loop
cwtl
mov
aam
mov
dec
das
push
pop
adc
mov
jl
cmp
test
loope
lock
lcall
push
push
push
jmp
pop
nop
sub
sbb
cmp
popf
mov
movsb
mov
hlt
in
in
adc
add
xor
and
push
dec
inc
pop
je
fs
lea
aam
in
in
adc
add
xor
and
push
dec
inc
pop
je
fs
mov
aam
les
adc
add
xor
and
push
dec
inc
pop
je
fs
xchg
imul
hlt
insl
in
adc
add
sahf
sub
int3
and
int3
int3
int3
int3
int3
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
test
lods
andb
xchg
shr
sub
jge
dec
cmp
pop
dec
ret
aas
jl
insb
enter
iret
mov
fdivrl
adc
sbb
dec
aas
jl
insb
movb
mov
lds
negb
inc
das
adc
pop
xor
inc
cmp
add
flds
or
movsb
mov
mov
subl
movsb
repz
aaa
andl
fistps
cld
pop
lods
jo
dec
add
xchg
jecxz
repnz
cmp
adc
mov
out
sub
out
iret
mov
pop
sbb
or
push
nop
shl
stc
dec
cmc
xchg
jl
sub
ret
pop
inc
fs
mov
mov
bnd
xor
jg
jl
sbb
jae
inc
fmul
sbb
mov
push
loopne
repz
outsl
xchg
mov
push
pop
mov
xlat
jmp
mov
bound
and
imul
mov
add
rcr
je
lods
fistpll
push
mov
pushf
jmp
xchg
int3
mov
sbb
adc
and
pop
push
aas
ss
lods
pushf
stos
lcall
lods
mov
jae
or
cmp
dec
jae
imul
dec
add
cmc
iret
in
iret
in
ret
jmp
loope
rorl
dec
imul
sub
dec
dec
sbb
sbb
fsubr
jmp
mov
sbb
or
cmp
sub
pop
cmovl
jl
insb
fistps
lods
lahf
fmull
in
pop
sbb
or
cmp
sub
pop
cmovl
jl
insb
fistps
scas
mov
sbb
js
mov
nop
sarb
adc
idivl
and
bound
lret
pop
fidivs
loopne
jne
jle
sbb
lcall
fistps
popa
xor
inc
hlt
das
mov
pop
sahf
mov
into
je
cli
rorl
aam
dec
int3
pop
inc
jl
paddsw
mov
lods
prefetch
mov
and
sbb
and
insb
xor
int3
mov
cmp
or
or
xor
arpl
dec
mull
push
sub
repz
adc
mov
lahf
out
fmuls
mov
les
and
aaa
cmp
repnz
mov
mov
cmpl
aaa
cmp
divl
xchg
sbb
fldenv
in
aam
es
rclb
sub
xchg
adc
dec
xchg
shrl
mov
and
aaa
mov
leave
pop
xor
push
addr16
daa
fwait
xchg
pop
imul
xor
lock
xchg
ja
dec
xor
cmp
fmul
es
jb
repz
xchg
arpl
push
push
xor
jle
sub
lods
push
in
cmpsl
xor
cmp
ret
lret
fidivrl
cwtl
xor
cmp
rorl
ret
out
add
jns
jp
mov
xlat
cmpb
imul
in
arpl
sti
mov
lret
xchg
add
fldl
adc
cmp
jmp
ficompl
sub
or
xchg
clc
popf
lods
nop
stos
mov
and
pop
lret
xlat
adc
jno
push
and
and
icebp
mov
call
mov
into
inc
xor
cmp
lret
jo
cmp
loop
mov
adc
in
pop
jb
jmp
and
adc
test
push
xchg
jno
movsl
sub
cmpsb
mov
xor
scas
inc
xchg
xchg
aaa
push
pop
cmp
mov
lret
int
or
movsl
xchg
and
mov
fidivs
cmp
mov
das
ds
inc
jb
adc
sarb
outsl
mov
stc
sub
push
lret
and
jl
sahf
mov
scas
lahf
mov
jb
sbb
rcrb
out
testb
aaa
sub
sbb
mov
mov
lock
xchg
adc
es
jge
mulb
scas
and
pop
enter
jbe
jle
test
enter
lret
iret
es
incl
lock
in
in
dec
add
ret
ret
cli
loopne
push
shl
dec
pop
test
xor
cmp
add
xchg
adcb
pop
mov
cs
sub
icebp
fmul
fwait
sbb
push
xor
sub
mov
xor
repz
test
daa
pop
mov
movsb
mov
dec
addl
mov
mov
enter
dec
jl
insl
pop
std
out
call
leave
leave
mov
jb
xchg
fwait
add
sbb
icebp
sub
xchg
ret
adc
fbstp
sub
sahf
push
or
mov
out
cs
sti
sahf
fdiv
push
jge
loop
push
jb
dec
lret
sub
test
cmpsb
xchg
push
mov
adc
mov
hlt
mov
pop
or
das
cmp
jmp
inc
cld
pop
mov
dec
es
mov
xor
pop
xchg
add
hlt
inc
or
fadds
pushf
xchg
adc
push
insb
mov
xlat
testl
push
aam
push
lret
pop
add
mov
add
jae
ds
xor
out
and
or
out
loope
jne
into
inc
ret
push
gs
inc
inc
sub
push
fsubr
push
jbe
cltd
pop
testb
div
push
insb
aad
mov
jmp
inc
fs
xchg
sbb
sahf
mov
cltd
jae
ficoms
imul
loope
les
pop
movsb
or
push
jae
jecxz
sub
push
adc
test
repz
dec
sub
mov
insb
push
loope
fiadds
lcall
xchg
test
shll
ljmp
js
dec
mov
jb
popa
xchg
sub
dec
jecxz
xchg
aaa
xchg
loopne
rorl
lods
lcall
pusha
ljmp
nop
das
push
add
mov
adc
xlat
dec
mov
dec
sbb
imul
aad
lret
jl
enter
adc
and
test
nop
jmp
cwtl
jno
push
push
inc
or
xchg
or
fchs
ret
test
mov
outsl
add
out
jo
insb
sahf
push
jne
cs
or
aad
push
adc
xchg
inc
adc
dec
cltd
mov
lods
insl
pop
push
pop
fldl
xchg
cwtl
aam
movsl
out
mov
pop
or
dec
fisubl
cli
jnp
dec
mov
pop
lret
mov
sub
mov
cmpsb
out
cmp
js
orb
fidivl
test
imul
scas
das
dec
bnd
ss
push
mov
mov
test
mov
fwait
or
fidivl
pop
jae,pt
and
pop
movsl
xchg
xor
in
bound
dec
subb
sbb
lret
in
mov
or
mov
test
loopne
cltd
pushf
jnp
dec
jnp
dec
xor
push
cwtl
pop
push
arpl
xchg
popf
cmp
fisubs
sbb
inc
sub
mov
je
xchg
cli
popf
test
sbb
adc
mov
sub
xlat
mov
test
mov
xchg
outsl
clc
mov
andl
pop
out
xor
xchg
lret
outsl
lds
xchg
scas
add
sub
xchg
sub
pop
lret
cmp
adc
cmpsb
sbb
sar
pop
repnz
adc
int
mov
sbb
pop
stc
insb
jmp
shrl
bound
fwait
pop
movsb
das
sub
push
scas
clc
or
mov
lret
add
je
cmpl
add
inc
xchg
and
mov
scas
outsl
fwait
cmp
xchg
fmull
cli
and
or
or
lea
mov
sbb
into
imulb
addps
bound
adc
push
outsb
jnp
cmp
insb
or
jae
lea
jnp
test
je
insl
mov
pop
mov
aaa
sbb
mov
and
ret
mov
mov
mov
iret
in
and
push
mov
js
xor
insb
stc
mov
fmuls
xor
xchg
jg
and
sbb
or
nop
inc
repz
inc
stos
pop
jle
or
sub
jno
jmp
iret
add
adc
movsb
xchg
inc
mov
das
hlt
jl
or
cmc
nop
gs
fsts
gs
sub
mov
mov
sub
mov
out
xchg
xor
pop
and
sub
mov
stos
mov
inc
je
sub
unpcklps
cmp
aad
icebp
adc
addb
mov
push
jne
gs
in
test
lods
push
mov
ret
or
mov
outsb
orl
xchg
inc
scas
mov
adcb
call
clc
in
gs
and
and
cwtl
dec
repnz
xor
xchg
inc
mov
jns
repz
scas
sahf
push
jnp
cmp
mov
ds
jne
inc
in
inc
xor
lods
out
sub
pusha
cltd
inc
jo
insl
scas
outsl
das
jp
adc
xchg
repz
mov
or
loop
loope
addr16
mov
lcall
cmpb
adcb
jnp
call
test
gs
jb
outsl
pop
in
int
aaa
ja
pushf
lods
js
popf
test
nop
adc
xor
ljmp
cmp
cld
adc
in
or
push
xor
or
popa
jae
dec
pushw
dec
pushf
popa
add
or
xor
mov
aam
stos
inc
nop
jmp
add
xchg
rclb
push
sub
sub
cmpsb
jbe
das
daa
ljmp
push
mov
cmp
jge
dec
pop
xor
cmp
jmp
cmp
and
or
mov
xchg
dec
or
jg
xchg
adc
ret
insb
movsl
pop
pop
add
clc
das
sbb
adc
das
mov
xchg
push
mov
cli
push
jecxz,pt
push
push
inc
dec
mov
daa
pop
pop
lock
test
mov
sub
sbb
das
shll
pop
mov
xchg
imul
inc
loopne
fsubl
push
sbb
orl
in
jle
out
add
cmp
jo
inc
xchg
push
dec
inc
jmp
popf
lcall
inc
push
mov
insl
orb
jl
and
mov
mov
sub
mov
aas
mov
mov
push
das
popa
jle
jl
sub
xor
mov
sarl
inc
sahf
shrb
mov
shl
pop
test
push
add
cmpsl
inc
cmp
and
push
jmp
xor
xorl
xchg
sbb
pushf
jge
jns
push
loope
mov
inc
fstpt
aaa
inc
push
mov
addb
cld
sbb
push
sub
xor
test
mov
adc
arpl
xlat
inc
fmull
fstps
subl
inc
lods
jp
sub
fucomip
ss
inc
adc
dec
outsb
mov
or
scas
in
cltd
and
notb
addr16
and
xchg
js
mov
test
xor
hlt
xchg
testb
adc
icebp
dec
popf
xchg
lret
sub
sub
lret
dec
inc
and
push
sarl
xchg
sub
shll
incl
dec
int
fsubrp
mov
ret
mov
je
mov
mov
fcmovu
insl
enter
pop
xchg
jp
out
cmc
or
cmc
test
pop
inc
xor
dec
fwait
dec
mov
repnz
pusha
add
into
lock
subb
cwtl
sub
sbb
cmp
cwtl
fisubrs
mov
aam
jno
popf
jmp
mov
dec
push
rcll
int
sbb
xchg
dec
sahf
mov
and
sti
sub
push
cmp
push
push
mov
mov
or
daa
cmp
xchg
shl
inc
xchg
rorl
outsb
sbb
je
das
mov
jg
ficompl
mov
push
cld
pop
xchg
fldt
or
leave
mov
lea
inc
add
scas
mov
enter
loope
rcll
adc
aam
mov
pushf
loope
cmpl
or
insb
pop
inc
fistpll
push
jmp
rorb
jg
jb
adc
mov
nop
scas
loop
jge
enter
cli
push
mov
lret
jae
outsl
loope
push
cmp
repz
adc
dec
push
lret
pop
sub
stos
jno
ret
int
push
dec
std
push
sub
xor
jp
and
out
test
push
fidivrs
xchg
push
and
arpl
pop
fs
sbb
aam
hlt
in
ljmp
xchg
leave
push
insb
popf
cwtl
or
mov
in
ss
iret
lret
sub
scas
mov
xor
mov
xorb
out
mov
xor
push
sub
test
out
mov
mov
test
dec
mov
push
rcr
into
jnp
adc
insb
idivl
mov
mov
adc
in
pop
repz
enter
xchg
pushf
and
popf
loopne
xchg
xorb
xlat
xchg
sar
movb
orl
push
push
loop
es
dec
push
imul
pop
jmp
and
popa
or
push
mov
pop
adc
popf
flds
cmp
addr16
pop
cmp
pusha
lahf
ror
mov
mov
fs
sbbb
dec
out
and
fwait
les
in
lock
jge
int3
addr16
testl
or
xchg
lock
jge
arpl
or
xor
ret
div
dec
or
jecxz
cmp
stos
pop
aaa
out
fdivrs
enter
inc
ja
ret
push
push
daa
ljmp
negb
inc
inc
mov
cmpsb
repnz
xchg
mov
jb
popf
dec
movbe
add
or
pop
mov
add
xchg
add
cmp
mov
addr16
cld
adc
pop
or
mov
sub
mov
es
test
mov
xchg
mov
insl
outsb
and
pop
dec
jo
jecxz
test
mov
push
aam
sub
mov
sbb
nop
incb
sbb
fisubl
pop
dec
pop
mov
andl
add
jg
mov
icebp
stc
mov
and
xor
jns
dec
mov
ds
loop
mov
cmc
jge
dec
loope
or
aad
shld
sub
fsubs
es
push
mov
xchg
mov
lds
inc
arpl
cmp
test
sar
add
jle
enter
popf
dec
sub
inc
daa
mov
divl
cmpb
mov
or
and
call
leave
dec
dec
lea
iret
jle
shll
or
daa
cmpsb
cli
and
cmp
mov
push
lahf
popa
popa
mov
icebp
das
fistpll
les
jnp
lcall
inc
rcl
sbb
lods
and
aad
xchg
adc
mov
push
cs
hlt
lahf
fs
mov
das
push
pusha
das
pop
lahf
or
int
mov
in
xchg
jmp
ret
aam
nop
push
fsts
or
int3
call
and
mov
rol
ja
jns
iret
test
mov
aad
mov
xchg
cwtl
pop
dec
idiv
inc
scas
add
loope
pop
mov
scas
das
mov
rcrl
in
dec
ja
loop
jns
insl
ja
test
and
iret
jne
lahf
rcll
loopne
pop
ret
push
insl
xchg
cwtl
clc
ret
fsubs
pusha
es
std
fnsave
lock
jnp
pop
or
lock
jge
cmp
jle
sbbl
ret
insb
sarb
in
movsb
lea
pop
or
and
jnp
ret
leave
int3
out
test
fnstsw
stos
mov
and
cmp
shr
mov
sub
add
outsl
mov
xor
add
call
adc
jge
lods
mov
push
in
test
mov
pushf
lret
mov
setl
gs
fiadds
xchg
hlt
nop
stos
and
out
push
outsl
cmpsb
outsb
push
push
sbb
and
lret
push
cmp
rclb
loop
cmp
fidivs
pop
in
ja
cli
xchg
jp
ret
push
out
loopne
fcmovnbe
xchg
aaa
pop
or
pop
scas
inc
mov
int
cli
xor
movsl
push
xor
inc
out
mov
pushf
hlt
xchg
scas
xchg
inc
sbb
xchg
xchg
daa
adc
xchg
pop
pop
or
xor
popa
mov
aam
mov
xchg
mov
sbb
test
cwtl
xor
shll
jne
pop
inc
xchg
fucom
test
and
iret
es
jno
out
pop
and
cld
xchg
adc
idivl
aas
mov
pop
cmp
jb
icebp
sub
adc
gs
xchg
gs
xchg
jne
gs
insb
sub
sbb
mull
fstl
test
xor
int
inc
inc
adc
add
sbb
imul
test
scas
mov
mov
inc
dec
out
cltd
sbb
xchg
mov
stos
lret
popf
lahf
jns
ror
push
sub
rolb
cmp
call
stos
das
iret
and
lcall
js
notl
ja,pn
inc
cmpsb
cmp
int3
mov
mov
push
mov
adc
push
add
add
or
lock
add
fucomi
in
cltd
ljmp
jb
sbb
jne
ret
gs
in
outsb
shrb
cmp
cmpb
aas
ds
cld
int3
movsb
mov
mov
leave
xor
int3
insb
pushf
loope,pt
enter
jl
dec
mov
cld
fisubs
inc
aad
mov
notb
insb
ficoms
mov
decl
inc
popf
add
xor
or
xor
js
dec
mov
mov
fists
or
test
mov
sahf
cmp
mov
xchg
repz
ljmp
popa
pushf
add
or
mov
cmp
xorb
jns
je
in
sub
fcomi
addr16
jg
xlat
movl
bound
sar
jp
cli
add
adc
fsubrl
aam
and
add
push
stc
mov
push
sbb
es
insb
push
js
cmp
pop
jle
sahf
ret
pop
add
mov
push
dec
pusha
xor
fsubrl
xlat
cmp
shrl
cld
hlt
jp
fistps
jle
dec
int3
add
xchg
xor
jmp
adc
out
jnp
mov
jl
bound
xchg
xor
push
and
cs
inc
std
dec
stos
imull
sbb
and
in
mov
sbb
xchg
mov
leave
sub
push
jecxz
in
add
sub
arpl
lret
out
test
pop
test
enter
dec
pop
fisttps
sbb
out
dec
xchg
sbb
pop
pop
or
shll
es
int
mov
pop
pop
sub
or
data16
inc
adc
xchg
sub
cwtl
fldenv
fmuls
jmp
pop
push
inc
aaa
call
cmp
xchg
xor
pop
push
popf
pop
leave
pop
jnp
push
lods
jno
cmp
and
and
jno
jbe
rcrl
or
rol
adc
and
mov
les
pop
jbe
mov
fisttpl
mov
scas
enter
andl
xchg
adc
nop
fildll
sbb
pop
pcmpeqd
mov
adc
jnp
xchg
mov
fwait
pop
ucomiss
fwait
mov
mov
popf
pusha
mov
cmp
xor
xchg
es
pop
notl
jecxz
into
cmpsb
jno
es
fs
dec
mov
xchg
mov
dec
cmp
fisubs
pushf
orb
stos
ret
pop
icebp
fiadds
aas
adc
lea
leave
into
lea
addr16
sar
push
mov
cmp
or
and
cmc
ret
rcll
addr16
adc
loope
cli
mov
sub
rorb
jae
jle
pop
xchg
popf
jnp
xor
mov
inc
sar
sub
test
les
push
cmp
ljmp
stos
int
push
mov
xor
lock
inc
aaa
lods
sub
aad
xor
push
jns
popa
jle
sti
scas
or
push
sub
xorl
jns
fcompl
fcomip
pop
fiaddl
fcompl
mov
lahf
xor
repz
lret
cmp
cs
sub
sbb
push
decb
lret
mov
in
pop
sub
dec
pop
xor
dec
mov
sub
iret
outsl
jmp
sbb
pop
push
sbb
jb
push
loope
out
test
jp
outsl
mov
test
adc
data16
subl
int
pop
outsl
ljmp
les
test
js
negl
into
mov
sbb
dec
jg
xor
imul
in
adc
fstpl
cmc
or
std
adc
lods
sti
sbb
shlb
xlat
shlb
sbb
push
cld
mov
mov
xlat
adc
jns
orb
in
iret
xchg
cwtl
enter
cli
jle
cmp
aam
add
fnstcw
dec
scas
bound
in
add
cli
dec
ss
pop
dec
movsl
xchg
cmp
gs
cmp
jecxz
adc
add
add
add
add
aaa
dec
pop
mov
cltd
push
cmp
fbstp
ja
jnp
cmp
out
cld
sbb
mov
neg
push
mov
push
push
shlb
shrl
sahf
loop
sub
jmp
insb
pusha
negl
jo
mov
loop
enter
or
gs
rcrb
div
cmp
jle
lods
sub
aas
rcrb
icebp
dec
xchg
rcll
fwait
and
stos
pusha
outsb
out
pop
notl
dec
fildl
clc
cmp
push
popa
aas
mov
or
stos
jbe
repnz
test
stc
scas
iret
jg
test
cmp
xchg
ss
mov
jno
pusha
inc
inc
pushf
push
and
xchg
rcll
gs
jns
mov
fists
mov
jle
in
or
out
dec
inc
shll
mov
out
out
gs
pop
xor
xchg
mov
lret
je
aam
xor
pop
int
fisttps
xor
mov
sbbl
in
enter
inc
dec
pop
xchg
fisttpl
inc
adc
divb
sahf
cld
pop
cltd
ds
pop
ficoml
and
stos
jg
ss
and
out
adc
mov
in
stos
repz
adc
addr16
les
dec
inc
aad
xchg
ss
andl
imul
jg
dec
dec
cld
mov
jecxz
mov
std
xor
outsb
es
lahf
mov
pop
mov
add
or
enter
rcrl
das
mov
mov
int3
aad
mov
es
test
xlat
loopne
stos
add
mov
sbb
popa
pop
test
clc
mov
cmp
pop
mov
push
dec
fwait
daa
xor
icebp
push
cmp
pop
iret
mov
xor
lods
xor
sbb
addr16
add
das
repnz
and
sbb
sub
ljmp
test
pop
adc
aaa
mov
lret
dec
mov
add
mov
jmp
in
inc
push
sbb
cltd
or
fisttpl
sub
imul
mov
push
pop
jo
push
lcall
xchg
cmp
dec
stos
push
cmp
adc
hlt
shlb
hlt
mov
mov
je
cmpl
test
push
dec
les
adc
and
push
std
fildll
ljmp
stos
aad
mov
inc
movsb
mov
stos
xchg
cmp
pop
aaa
mov
xchg
push
popf
enter
ljmp
adc
shlb
imul
fcomps
pop
and
loopne
xchg
mov
fldenv
and
inc
or
hlt
jp
jne
xchg
stos
outsb
hlt
leave
fsub
das
mov
fwait
sarb
xlat
or
mov
out
push
mov
xchg
and
shlb
ja
xchg
dec
sub
out
jnp
xchg
leave
lods
and
call
add
xchg
cmp
clc
or
push
daa
inc
js,pn
lcall
xchg
inc
sbb
out
lods
lahf
fmull
in
pop
sbb
or
cmp
sub
pop
cmovl
jl
insb
fistps
lods
lahf
fmull
in
pop
sbb
or
cmp
sub
pop
cmovl
jl
insb
fistps
lods
lahf
fmull
in
pop
sbb
or
cmp
sub
pop
or
push
push
leave
mov
int3
aas
cld
das
sub
sbb
cmpsb
aad
outsl
pop
push
add
adc
int3
int3
int3
int3
or
sbb
sub
cmp
push
adc
cmp
push
jp
les
mov
fsubrp
fdivrp
or
sbb
sub
cmp
jle
dec
push
add
stos
nop
mov
into
ljmp
push
sub
cmp
pop
push
push
jp
mov
fucomi
sahf
xchg
lea
jns
push
push
inc
push
pop
loope
icebp
sub
out
pop
arpl
ret
dec
push
popa
out
movsl
scas
pop
rcll
dec
jle
lret
lret
jo
xchg
gs
pusha
fidivrs
ljmp
std
inc
pop
cmp
inc
cli
fcmovb
cltd
sahf
das
stc
faddl
mov
adc
out
filds
fcmove
outsl
fiadds
dec
cs
jg
mov
pop
test
cs
pop
adc
and
loopne
sti
jle
mov
cmpl
xchg
ret
add
scas
pop
scas
jne
push
outsb
mov
xor
into
add
ficoms
xchg
dec
jl
mov
fwait
xor
repz
into
scas
stos
lret
into
ljmp
push
sub
cmp
outsb
pop
dec
push
jp
mov
mov
aam
ficoms
imul
cmp
sub
cs
repz
out
mov
mov
outsl
pop
jg
dec
outsb
cmp
es
dec
add
jecxz
stc
out
movsb
xchg
fstpt
dec
push
push
bound
pop
es
dec
push
jp
mov
mov
into
ljmp
push
sub
cmp
jle
dec
push
jp
mov
mov
into
ljmp
mov
insl
clc
add
jp
insl
push
addb
les
out
sub
stos
decl
lea
mov
std
sub
or
xor
adc
mov
xchg
lahf
dec
aaa
push
dec
pop
mov
push
add
xchg
pop
mov
jno
adc
cmp
xor
enter
sbbl
sbb
popa
popa
cmpl
aaa
mov
mov
or
cli
add
push
push
push
leave
adc
push
pushf
jecxz
mov
aad
test
cmpsb
outsb
fwait
icebp
mov
jo
pop
sub
fstpt
lds
test
push
pmaxsw
fprem
mov
inc
jle
add
stc
xorb
pop
xor
ret
mov
lds
je
dec
pop
xchg
inc
add
fmulp
push
pop
leave
and
out
jmp
divb
lea
mov
fmuls
leave
test
add
in
cmp
fs
int
cmp
rclb
cmpsb
loop
xor
loope
sub
jae
jg
sti
pusha
push
gs
repz
add
fildll
or
popa
imulb
inc
andl
and
les
test
cld
mov
jno
push
dec
inc
cmp
jg
ja
aas
or
xor
clc
push
mov
std
and
mov
adc
push
mov
push
rorb
mov
aaa
mov
adc
outsb
xor
inc
cmp
pop
push
jp
repz
lock
sub
pop
mov
xchg
jp
mov
adc
and
cmpsb
ret
mov
jo
insb
test
cmp
lds
scas
add
jns
sbb
cmc
int3
movsl
roll
cmpsb
scas
xor
or
cmp
inc
sbb
mov
jns
adc
dec
push
andl
pop
jmp
cmpsl
add
or
push
push
movsl
nop
rorl
inc
clc
popf
imul
hlt
outsb
fisubrs
pop
mov
sbb
push
mov
and
push
int3
mov
sub
adc
mov
mov
psrad
pop
sub
pop
lods
repnz
nop
or
lahf
jnp
test
lret
jg
sahf
mov
push
sbb
scas
lea
sbbl
and
mov
sbb
je
les
ret
xchg
mov
sbb
add
lea
mov
jne
ljmp
xlat
imul
mov
rorb
repnz
xor
sub
cmpsl
xchg
xor
fdivp
arpl
push
loopne
int
bound
adc
fwait
cltd
pop
lods
or
adc
xchg
adc
fdivl
and
sbb
insb
jl
iret
adc
inc
add
sbb
pop
int3
mov
mov
mov
cmp
adc
push
jae
jecxz
das
mov
push
pop
mov
mov
xor
cmc
adc
sbb
test
sarb
mov
insb
fs
xor
hlt
adc
ds
adc
push
loope
sub
mov
in
fiaddl
mov
rol
jle
outsb
cmp
fstpl
jle
sbb
iret
fwait
ja
inc
sahf
sbb
dec
mov
push
and
jb
cmp
dec
pushf
inc
xchg
or
cmp
scas
cmpsb
mov
sbb
pushw
ljmp
aam
out
mov
jmp
popl
and
sti
fadds
or
gs
ret
push
dec
pop
dec
mov
pop
mov
mov
and
out
cwtl
aas
push
cmp
sbb
dec
test
nop
or
loopne
jns
mov
lea
stos
add
in
push
push
shll
mov
out
sub
aaa
cmpsb
lret
and
in
push
adc
repnz
push
add
in
jno
jo
push
in
jae
dec
imul
cmpb
fs
rorb
xor
cld
inc
mov
sbb
cwtl
out
addl
jnp
pop
es
and
nop
and
pusha
pop
pop
push
cmpsb
fldl
xor
cs
es
lcall
pop
dec
sub
daa
push
shrb
fidivrs
fnstsw
mov
inc
repnz
in
scas
popa
mov
into
jl
ljmp
xlat
push
mov
test
inc
xchg
xchg
roll
mov
nop
dec
cmp
pusha
sub
mov
dec
jns
add
out
cwtl
fsubp
sbb
or
sbb
loopne
cwtl
push
notl
pop
push
cmp
mov
push
xchg
sbb
cld
repz
xor
js
add
push
push
sbb
lds
pop
sahf
mov
aam
add
iret
xor
cs
adc
ja
cmc
mov
stc
mov
add
imul
xor
mov
lea
push
in
outsl
mov
cmp
mov
je
aaa
cmp
cmpsb
push
outsb
popa
out
mov
add
inc
sub
lahf
jbe
insl
mov
ja
lods
inc
xchg
iret
stos
cmp
es
loopne
addr16
xchg
fisubs
or
cmp
fs
cli
cmp
decl
mov
push
fs
ficomps
mov
inc
ljmp
dec
addr16
xor
loope
ja
hlt
iret
call
add
or
xchg
cs
nop
fldl
in
lds
out
adc
jb
fnstcw
jno
fs
push
and
sub
dec
aaa
and
lret
leave
idivl
or
mov
add
lods
dec
cmp
sub
jb
pushf
lcall
xchg
inc
pop
das
xor
jg
cltd
fistpll
sub
int
or
or
data16
jae
iret
fcmovnu
or
cs
push
dec
sti
sbb
dec
cmpsb
jns
jne
lret
pop
out
or
out
test
sub
sti
stc
shr
bnd
rolb
dec
jp
movlps
negb
push
aas
imulb
loopne
call
sbb
dec
out
xor
mov
subb
icebp
cs
or
sub
ror
jg
je
imul
cmp
scas
xchg
inc
fcoms
mov
sti
xorl
insb
mov
shlb
cmpsl
dec
pop
fildll
sub
mov
call
jl
pop
adc
divb
in
inc
test
divl
mov
stc
mov
movsl
sbb
pushf
mov
out
rolb
xor
mov
in
add
adc
add
shrb
pcmpeqd
fimull
push
push
push
arpl
jb
xchg
lds
test
insb
imul
sub
enter
pop
ljmp
stos
aam
xchg
call
mov
test
push
inc
xchg
or
push
ror
mov
iret
sub
js
pusha
ljmp
mov
fwait
outsb
push
jle
sbb
cwtl
test
rorl
sbb
test
sub
dec
and
cli
xchg
sbb
adc
lea
fstl
test
cmc
lods
leave
add
inc
mov
fistps
xchg
and
or
and
add
std
loop
push
lcall
cwtl
pop
sbb
pop
loope
out
or
dec
scas
imul
xchg
sbb
push
jecxz
in
pop
icebp
outsb
popf
jb
add
and
jle
or
js
mov
or
mov
into
or
and
cmpsb
cmp
dec
push
jle
pop
scas
mov
repz
jae
dec
arpl
aaa
dec
push
inc
insl
outsl
aaa
adc
push
xor
out
pop
mov
or
cwtl
rcrl
or
cmpsl
out
fnstsw
popf
pop
in
push
xchg
call
iret
ljmp
jb
sahf
dec
movsb
mov
outsl
push
repz
lock
ss
sti
mov
and
pushl
inc
sbb
xchg
pop
faddl
pushf
outsl
in
addl
lcall
ljmp
test
andl
pop
mov
aad
ds
cmp
sub
aad
shrl
fidivs
ja
lods
add
mov
loop
aad
sahf
and
imul
push
push
inc
iret
stc
orl
mov
jmp
loope
mov
push
addb
mov
inc
jg
sub
add
addr16
xor
add
sub
loop,pn
mov
and
rcrb
ds
rorb
add
jl
mov
xlat
call
fbstp
xchg
into
inc
ret
movsb
cmp
pushf
sbb
insl
mov
hlt
cmp
rcll
mov
push
cli
outsw
fidivl
lcall
test
iret
push
imul
jno,pt
inc
test
les
gs
popa
out
fcmovnb
pop
clc
push
scas
arpl
add
sar
inc
incl
out
push
sub
mov
repz
jno
test
sbb
ret
stc
mov
push
pushf
or
sti
int
lret
shl
xchg
mov
push
ljmp
movsl
mov
adc
lcall
xchg
add
push
xchg
lcall
bound
xor
daa
ds
bound
adc
inc
mov
add
add
lods
xchg
dec
repnz
mov
push
lods
stos
ja
xchg
xchg
in
jnp
mov
inc
ss
push
inc
sub
std
leave
push
inc
shlb
cltd
mov
or
adc
jge
or
pop
mov
sub
mov
lock
jmp
nop
je
pop
push
out
aas
into
sbb
shll
add
mov
fildl
insl
sub
dec
jle
xchg
daa
test
xor
dec
pop
jecxz
sbb
mov
movsb
mov
mov
popf
push
jno
adc
xor
xchg
movsb
inc
xor
aad
mov
outsl
dec
test
int3
mov
popf
daa
push
sub
rcll
dec
mov
adc
sahf
sub
cmc
outsb
cmp
jb
xchg
sbb
adc
or
pop
push
xchg
mov
xor
mov
pop
cmp
mov
testb
loopne
je
mov
xorb
cmp
movsb
insb
loope
jns
ds
lods
add
call
cmp
not
sbb
jecxz
popf
in
mov
lret
jns
orb
scas
test
popf
out
xor
adc
out
out
inc
xchg
aas
adc
mov
shl
mov
int
push
lret
push
test
mov
test
dec
out
aam
xchg
inc
inc
loope
adcb
add
pusha
data16
lret
push
pop
push
mov
pushf
adc
sub
jp
jp
arpl
call
and
jg
mov
test
dec
ja
xchg
fstps
movsl
adc
popa
or
mov
rcr
or
jecxz
loop
out
add
shrd
arpl
insl
dec
lret
int
imul
icebp
js
lea
movsb
dec
or
test
rorl
or
mov
jp
gs
inc
lods
insb
rol
fisttps
mov
dec
cmpsb
cli
icebp
sub
mov
adc
jnp
cmpsl
int
adc
ss
roll
and
call
mov
sbb
clc
dec
std
inc
xchg
aaa
cld
push
inc
inc
mov
mov
dec
pusha
add
ret
stc
push
aaa
sahf
pop
lcall
jmp
and
popa
xchg
xchg
in
dec
xor
xchg
adc
cmc
pop
pop
inc
addr16
icebp
in
stc
imul
jmp
adc
in
xchg
fninit
sub
mov
out
nop
ret
jae
mov
das
cli
cs
dec
xor
dec
dec
push
push
ud2
lret
fistl
inc
repnz
lock
in
xor
int
fidivrs
aas
shll
push
nop
sub
xor
fistl
jmp
push
jne
pop
rorb
rclb
jne
mov
arpl
enter
mov
shrl
xchg
dec
into
xchg
loope
mov
scas
arpl
popf
inc
hlt
jnp
es
ret
mov
nop
testb
mov
lahf
scas
xchg
and
fstp
std
imul
and
addl
popa
in
testb
fcompl
fldcw
xor
aad
push
cmp
adc
cwtl
ret
mov
and
dec
xorl
dec
scas
dec
dec
cmp
lret
push
loope
mov
stc
jmp
shr
fisubl
fadds
bound
jle
push
fildll
inc
dec
push
loope
mov
mov
mov
scas
shrb
adc
adc
aaa
xor
mov
jns
mov
dec
push
sub
aam
push
lret
mov
cltd
sub
mov
sbb
mov
mov
pop
std
lret
sti
or
fldt
jle
data16
xor
pop
call
mov
lods
cmpsb
or
mov
push
mov
push
xchg
or
mov
sbb
dec
pop
sbb
jl
ret
and
sahf
icebp
inc
sbbb
push
jge
jmp
rcll
xor
je
xor
ss
mov
in
cld
push
adc
arpl
mov
out
mov
lcall
fisubrs
jl
push
cmpsb
dec
mov
add
pop
push
sbb
sbbl
aad
in
mov
mov
jae
pop
in
fwait
ljmp
jae
das
mov
les
mov
out
test
sub
inc
jb
dec
fidivrs
sbb
loopne
insl
out
pusha
push
outsl
lock
mov
mov
repz
sbb
mov
inc
ja
cmpsl
loope
nop
mov
mov
roll
inc
pop
bound
negl
push
pop
jbe
xor
cltd
js
jmp
and
std
sbb
shrb
mov
ss
rcll
lds
xchg
sahf
insl
inc
jl
out
int3
mov
xchg
jle
enter
pushf
pop
data16
loop
push
mov
decb
das
jns
add
ljmp
mov
push
sbb
sub
push
cmp
sub
loopne
stos
les
lods
jmp
shll
lock
push
insl
ret
fst
lock
icebp
pop
cmp
lret
mov
lods
mov
dec
inc
scas
mov
xlat
or
jmp
int3
sub
pop
xchg
sbbl
lods
aas
inc
dec
int
cltd
cmc
adc
mov
sti
pop
push
sbb
or
push
mov
xchg
inc
push
or
cld
imulb
xchg
or
xchg
dec
pop
popa
fdivs
jp
mov
xchg
aaa
lods
psrld
ret
test
inc
dec
insb
movsb
dec
cmpsb
sbb
popf
jg
lret
adc
mov
cmp
outsb
mov
dec
jae
mov
push
mov
fstl
jbe
movsl
sbb
jmp
pop
pop
sbb
jge
mov
ja
cmp
fdiv
pop
outsl
dec
sbb
lods
pop
js
dec
and
jg
mov
ret
shlb
pop
ror
dec
out
sbb
cmp
xchg
pushf
mov
stc
jp
xchg
inc
jns
fwait
ss
adc
push
adc
sub
popf
cmp
mov
inc
xchg
xchg
lahf
scas
lcall
sub
das
push
fwait
repz
adc
movsb
lea
jp
mov
je
cmp
push
mov
out
adc
test
push
stos
cld
daa
mov
jg
lods
iret
fwait
mov
mov
ret
hlt
sahf
icebp
xor
cwtl
inc
das
push
push
xchg
mov
inc
xchg
mov
mov
or
sub
pop
loop
jle
out
popf
loope
xor
insb
ret
xor
adc
mov
outsb
js
xchg
inc
fisubrs
call
sbb
mulb
stc
outsl
lcall
test
test
clc
lock
sti
cmpxchg
pop
or
or
flds
push
idivb
and
xchg
sub
fisubrs
inc
jno
jl
sbb
xchg
sarb
inc
inc
xor
imul
hlt
inc
cwtl
jnp
xchg
push
mov
test
cmpsb
mov
push
loope
push
icebp
mov
cld
js
shlb
or
push
jno
cmp
jge
dec
push
movsl
xor
das
jbe
lods
loop
lds
xor
idivl
or
orb
ret
cmp
xor
xor
mov
cmc
pop
jmp
mov
pop
jge
dec
shrl
push
sahf
cmpsl
imul
pop
push
popf
push
sbb
outsb
adc
loop
pop
cmp
pop
movsb
popa
lret
cmp
je
mov
push
insb
mov
xor
fwait
stos
pop
sbb
lods
pop
mov
out
adc
stos
jecxz
es
iret
rcpps
cmp
pop
sbb
and
inc
inc
arpl
rcr
test
mov
call
stc
push
adc
mov
pusha
pop
fwait
sub
pop
icebp
sbb
insb
daa
sub
xor
adc
add
jno
or
mov
jbe
popl
xchg
out
add
sub
mov
das
pop
ljmp
fcoms
sub
fbstp
out
incl
pop
cmpsl
xorb
setnp
cmp
cltd
lods
jmp
rorb
out
stos
rcr
mov
pop
xchg
stos
sub
daa
inc
cld
or
mov
pop
ret
xor
and
shll
inc
loope
lods
out
icebp
movsl
push
cmp
mov
cmp
xor
adc
mov
xor
inc
or
and
stc
xor
int3
lret
push
test
popa
or
sarl
cmc
imul
mov
popa
xchg
or
es
push
mov
std
cli
jbe
orl
sbb
inc
mov
into
mov
scas
loopne
push
mov
and
sub
xchg
mov
inc
neg
jb
jbe
jns
pop
mov
repz
cmpl
pop
movsl
ja
inc
lret
outsl
hlt
lret
das
push
inc
sahf
pusha
sub
inc
and
jge
push
dec
or
cltd
dec
mov
mov
aas
mov
insl
leave
popa
push
jmp
es
pop
pop
add
rclb
enter
jno
insb
in
and
xchg
mov
adc
es
xor
inc
inc
lock
inc
jl
shl
sbb
lods
cmp
addr16
cmp
jae
and
out
daa
arpl
cmp
mov
out
cmp
out
mov
add
mov
mov
xchg
jne
add
xor
adc
cmc
repnz
stc
mov
leave
mov
add
dec
inc
mov
lahf
sbb
or
gs
and
dec
cmp
and
inc
jp
pop
and
jno
or
std
push
arpl
lock
adc
fbld
data16
repnz
mov
inc
jp
loop
xor
jl
cli
or
adc
pop
inc
cmp
cmp
cltd
addr16
jle
popf
mov
push
and
fcomp
cmpb
cli
insl
cmp
jbe
pop
cwtl
aam
adc
adc
push
sbb
mov
std
stos
adc
add
push
call
idivl
mov
push
push
test
in
das
mov
adc
movsl
cli
mov
cmp
test
cmp
out
jge
adc
mov
cmp
int3
outsl
push
aas
xor
xor
call
ljmp
loop
fs
mov
mov
pop
aam
lea
mov
and
xorb
sub
aam
out
jl
mov
fisubrs
shl
mov
inc
push
sbb
loop
lock
inc
aam
and
mov
movsl
add
lods
add
dec
mov
ret
dec
scas
ja
ss
cmp
dec
out
xchg
xor
sub
adc
cmp
ljmp
pushw
push
mov
mov
push
scas
jmp
adc
jo
iret
and
in
jecxz
xor
fists
adc
jne
xor
mov
or
out
stc
mov
cli
int
shl
out
push
std
jmp
mov
stos
adc
bound
push
xor
sbb
jle
cmp
add
hlt
adc
test
xchg
and
add
aad
pop
andb
xchg
dec
mov
enter
js
mov
data16
or
jae
lods
dec
sub
lods
lcall
jmp
mov
sahf
testl
mov
mov
xchg
add
jge
stos
xchg
outsl
pushf
xor
push
cli
xchg
loop
dec
pop
icebp
lea
and
in
repnz
dec
cmp
loope
jmp
xlat
cmp
fucomi
or
lcall
aaa
scas
lock
sub
jmp
subb
mov
xchg
dec
sbb
or
out
dec
in
mov
ds
das
cmp
mov
xchg
test
mov
stos
repz
inc
mov
pusha
jle
add
mov
jg
movsl
sub
inc
and
pushf
aad
rolb
pop
scas
mov
ljmp
lods
mov
sbb
and
loop
pop
push
adc
mov
mov
sub
inc
sub
lock
mov
or
mov
dec
mov
clc
out
mov
and
xchg
ja
div
and
sub
in
fisubrs
add
nop
ja
inc
movsl
and
add
mov
inc
shll
out
push
jecxz
dec
cwtl
mov
std
int
je
xchg
iret
test
icebp
data16
sbb
dec
test
xor
iret
movsl
push
inc
sarb
push
pop
fs
mov
fnstsw
ficoms
in
pushf
pushf
add
pop
push
cltd
inc
and
loope
mov
inc
addr16
pop
mov
pop
lret
outsl
fsubrs
out
movsb
mov
in
rorb
mov
dec
in
push
in
ja
jo
pop
jmp
jbe
mov
xchg
xor
in
sbb
mov
shrb
dec
sbb
sbb
or
adc
jge
push
xor
adc
mov
adc
xchg
lods
xchg
dec
jge
mov
xlat
inc
xchg
leave
stos
or
movsl
outsb
rorl
mov
adc
iret
and
mov
ror
test
push
fwait
push
stos
dec
jecxz
jo
xor
add
outsl
adc
pop
add
mov
jns
xchg
push
in
sub
sub
adc
sub
ficoms
adcb
xchg
das
sub
push
clc
xchg
cmp
xchg
fwait
ret
scas
pusha
jmp
add
cmp
xchg
mov
inc
dec
gs
mov
or
lds
stos
xchg
mov
enter
and
call
cmp
dec
popa
mov
popf
test
das
je
pop
jnp
or
fdivr
cmp
jne
add
inc
cwtl
add
sub
enter
mov
loopne
push
call
sbb
push
cmp
jle
dec
push
jp
mov
mov
into
ljmp
push
sub
cmp
jle
dec
push
jp
mov
mov
into
ljmp
push
sub
cmp
jle
dec
push
jp
mov
mov
into
ljmp
cvtpi2ps
cmp
pop
into
push
jp
mov
and
sahf
int
inc
jbe
xor
int3
int3
int3
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
fldl
out
dec
sahf
push
cld
inc
sahf
push
orb
ljmp
int
mov
ds
mov
pop
out
dec
sahf
aas
mov
mov
std
dec
out
pop
ljmp
pop
fmull
dec
ds
cs
data16
insb
inc
ss
andb
aaa
mov
sbb
aad
stos
or
jne
jl
push
jb
mov
addb
sub
mulb
into
sbb
and
jecxz
pop
push
push
xchg
cmp
aam
and
jle,pn
imul
xchg
and
sti
iret
xchg
iret
loope
push
cli
ds
rol
and
clc
sub
iret
das
mov
popf
jecxz
jp
das
imul
push
scas
dec
scas
mulb
popl
das
cmpsb
outsl
sbb
jg
pop
mov
inc
inc
scas
lock
scas
dec
adc
aas
nop
xor
in
push
push
aas
adc
ret
mov
mov
push
shll
jb
out
jle
sub
pop
xlat
push
and
lahf
and
jo
lcall
test
addr16
inc
and
dec
sti
test
pop
fidivrl
pusha
sub
js
dec
out
push
jp
imulb
mov
out
testl
cmpsl
add
or
cs
sbb
icebp
imul
bound
sbb
mov
push
lahf
dec
loop
pop
stos
outsl
mov
jmp
dec
jnp
arpl
xchg
jle
push
mov
popa
rclb
ljmp
mov
das
mov
decl
jle
outsb
iret
push
mov
cs
fidivrs
outsl
pop
out
dec
sahf
aas
mov
mov
decl
jle
outsb
iret
push
mov
cs
fidivrs
call
push
add
cmpsl
aaa
push
cmp
mov
jle
roll
lret
addb
repz
icebp
jle
clc
pop
int
dec
testl
ja
jmp
divl
add
push
repz
or
xor
push
cmp
stos
repnz
lcall
insb
sub
std
pop
popf
dec
sbb
xchg
cmp
dec
lods
push
pushw
cmp
jns
inc
push
pop
rorl
addr16
not
cmp
outsl
jp
in
xor
fdivrl
repz
mov
jno
jmp
sub
sbb
jl
int
lret
sbb
test
jb
les
lods
gs
movsb
fildl
sub
sub
sbb
ds
jl
inc
jg
enter
push
scas
or
incl
fdivr
fwait
pop
and
pop
insl
jae
sti
mov
or
int
jb
stc
mov
xor
xchg
xor
in
sub
jb
mov
out
fistpl
xchg
ret
jne
cmp
push
add
xchg
dec
lods
xor
jl
sbb
adc
xorl
inc
cmpb
int3
rcrb
jmp
jge
lahf
add
dec
dec
mov
pop
cmp
int
mov
and
test
jb
cld
push
test
bnd
adc
enter
test
and
sub
mov
aaa
pop
loope
cmc
arpl
or
pop
das
hlt
push
jb
dec
sbb
mov
xor
or
loopne
inc
mov
aas
add
jl
jbe
insb
mov
scas
cld
std
sar
jecxz
dec
pop
sahf
dec
mov
push
stc
movsl
cmpsl
push
mov
fisubrl
jnp
pusha
sub
andl
push
in
pop
idivb
and
fwait
sbb
enter
xchg
iret
fsubrs
xor
adc
movl
and
ds
push
vxorps
inc
push
pop
push
fcomps
addr16
std
mov
rcrb
xor
and
and
push
jne
mov
lcall
in
sbb
mov
pop
jge
jg
ret
lahf
lea
pop
push
inc
pop
xor
dec
mov
jno
movsl
into
test
dec
ret
and
pushf
imul
clc
and
pop
dec
xor
jle
sub
adc
xchg
mov
inc
into
push
sub
xchg
xor
shl
xchg
dec
and
pop
enter
imul
lret
rolb
insb
iret
or
xchg
nop
push
popa
jno
jb
les
add
and
or
inc
mov
in
and
lret
jg
rcll
aaa
push
nop
push
pop
pop
stos
adc
rolb
sub
fs
cmp
icebp
adc
ds
jb
mov
ret
imul
mov
inc
jns
shlb
mov
je
int
dec
scas
push
and
addl
testb
mov
sbb
push
ret
jbe
jg
sbb
sbb
xchg
cmpl
fwait
xchg
imul
xchg
js
mov
and
xchg
les
sub
out
mov
not
loop
subl
cmp
fdivrs
pop
dec
inc
mov
push
and
cmp
mov
decb
hlt
cltd
test
cmp
sbb
aam
cwtl
jno
adc
cli
or
add
in
lea
sarl
lret
leave
jne
xchg
sub
jns
adc
xor
pop
xchg
or
pushl
mov
sub
push
fcoml
xchg
stc
test
cltd
adc
mov
movsl
push
into
out
fidivrs
out
in
mov
pop
pop
dec
loopne
fidivrl
sbb
fwait
push
jp
push
movsl
push
aad
clc
stc
jge
mov
xor
jp
loopne
pushf
insl
push
mov
jae
out
cmpsb
fbld
push
cmpsl
dec
nop
mov
cmp
ljmp
lret
popa
mov
cmp
sahf
pushf
pop
jl
add
inc
psubusw
imul
lret
cmp
xor
lds
xor
das
popa
adc
popa
add
test
pop
or
dec
dec
cs
add
insl
and
jbe
hlt
pop
mov
sub
int
scas
scas
rcll
jmp
pop
bound
mov
sbb
outsl
mov
or
add
xor
leave
cwtl
mov
xchg
sub
fadds
push
sbb
fists
jle
and
lret
jp
lret
inc
mov
or
mov
sti
pop
jno
inc
ds
int
rcll
sub
and
xchg
inc
loope
lahf
out
iret
dec
mov
insl
lock
push
faddp
mov
out
into
adc
pop
icebp
dec
gs
jge
cmp
inc
push
dec
aad
adcl
mov
repnz
sarl
arpl
pop
and
sbb
pop
mov
pushf
adc
in
mov
rcr
clc
cli
dec
mov
pop
xor
push
inc
xchg
jbe
inc
arpl
adc
divl
movsl
ljmp
xor
xor
jg
cmc
js
adc
and
and
push
add
stos
dec
rcrb
mov
aaa
fwait
gs
orl
jle
dec
mov
fcomp
rclb
pop
jle
mov
adc
push
mov
lods
dec
pop
mov
sbb
add
mov
mov
and
inc
popf
lds
lods
sbb
push
dec
lret
ds
pop
scas
out
xor
ret
mov
add
outsb
add
mov
hlt
bnd
fisttpl
rcr
mov
dec
adc
mov
adc
or
or
adc
in
mov
add
inc
add
rcll
pop
cmp
stc
push
mov
stos
outsl
das
pop
addb
xchg
arpl
push
cmpsb
mov
stos
pop
nop
fistpll
cmp
add
mov
dec
xor
or
lods
dec
dec
jbe
rorb
in
inc
dec
xchg
jae
fstps
and
out
jmp
ret
xchg
jno
push
mov
or
rcr
nop
add
js
mov
push
mov
add
insl
repz
inc
sbb
mov
xchg
sbb
sub
fwait
push
inc
push
in
jg
adc
in
cmc
dec
push
das
xlat
shlb
or
fcoml
cmp
orb
icebp
fmull
mov
mov
cwtl
mov
inc
cmp
icebp
sub
add
pop
mov
and
jg
pushf
mov
mov
xor
js
xor
dec
sub
pop
shrb
daa
sub
xor
cwtl
aam
icebp
and
sbb
inc
dec
test
push
dec
jl
rep
cmp
jge
cld
sti
notl
lods
sti
shrl
addr16
popa
sbb
mov
mov
addb
enter
mov
cwtl
insb
in
mov
jo
jl
lods
stos
daa
fcmove
add
scas
cmpsb
andl
pushf
scas
adc
xlat
push
dec
popl
repz
in
or
icebp
cmp
out
cmp
jnp
ret
fdivrs
rcll
lcall
popf
test
pop
aaa
push
icebp
sbb
xchg
rorb
mov
mov
pop
std
nop
mov
mov
sbb
push
nop
and
mov
sbbl
inc
and
aam
fisubrl
and
push
psubsb
add
jmp
icebp
adc
jns
mov
xchg
ja
filds
das
xor
lahf
pop
aad
shll
xchg
pop
ror
bound
setp
ljmp
xchg
inc
mov
and
sarb
std
mov
or
aad
or
rcrl
xchg
pop
mov
push
sub
outsl
test
leave
jmp
pushl
es
out
mov
mov
rcll
adcl
iret
rcrl
popf
fbld
arpl
stc
mov
add
sbb
daa
popa
mov
cli
aas
cmpsl
int
jns
push
mov
and
sti
jns
xchg
loop
hlt
or
mov
mov
ja
cmp
pop
gs
rcrl
add
xchg
dec
mov
or
data16
sub
call
std
shrl
fisubl
xchg
push
call
xlat
add
rol
add
xchg
rcll
mov
push
adc
add
lret
insl
or
repz
lcall
push
inc
loopne
push
xor
std
lea
je
xor
jl
jbe
std
mov
scas
outsb
xor
xchg
das
jecxz
cmp
int
mov
ficoms
mov
push
ficoms
int3
test
inc
lea
or
and
sbb
inc
daa
aaa
adc
je
clc
dec
cmpsl
int3
out
fbld
sbb
addb
pusha
aas
or
rorl
lcall
gs
sbb
pop
cld
cmp
xlat
xchg
mov
xlat
cmpsb
fsts
shll
lea
sub
cmp
ret
or
cmpsb
xlat
xchg
lahf
adc
mov
and
fdivl
sbb
cmc
je
loope
addb
das
fsubrp
inc
jno
rcrb
add
test
int3
fmull
dec
xor
sti
xchg
mov
cmp
cmp
jo
xlat
sbb
hlt
test
xchg
jno
push
out
push
mov
dec
mov
repz
jb
pop
punpckldq
sbb
jns
call
sbb
mov
in
sbb
sbb
lds
sub
xor
xchg
lea
das
dec
push
lret
stc
test
push
add
jmp
fmulp
add
xor
std
sahf
and
stc
lret
and
pop
clc
add
pop
push
cmp
clc
pop
mov
shrl
out
jmp
lret
bound
lahf
xor
stc
adc
outsb
fists
jo
xor
cmp
cwtl
push
sbb
mov
mov
in
mov
pop
in
mov
mov
jecxz
or
not
jmp
out
and
movsl
repnz
jmp
call
xchg
into
in
push
or
mov
loope
idivl
pop
xchg
rolb
push
push
cmp
out
cs
rorl
or
or
stos
jmp
xchg
mov
aaa
inc
sbb
fldln2
repz
or
ss
cwtl
les
out
fdiv
ss
mov
mov
imul
dec
in
aam
andb
test
mov
sub
inc
and
or
popf
dec
cmp
push
loopne
stc
repnz
sahf
and
mov
sbb
test
cmp
jbe
cmp
fcoml
jmp
pusha
ja
sbb
mov
test
test
enter
or
push
in
adc
pop
lret
cli
sub
in
sub
pop
push
pop
xchg
mov
xor
sub
es
daa
lcall
fwait
js
push
test
lret
mov
push
cltd
add
imul
jge
dec
push
push
je
adc
aas
cld
sbbl
imul
call
pop
movsb
leave
and
xchg
lock
lcall
adc
xor
out
push
adc
jle
fdivrl
pusha
or
repz
movsl
mov
in
pop
jle
push
mov
cmpb
mov
xchg
cld
nop
mov
stos
enter
rclb
sub
sbb
xchg
jmp
add
inc
ljmp
jmp
incb
ds
clc
cmc
sub
aad
cmpsl
xchg
test
cmp
sub
lret
or
push
mov
adc
and
mov
insb
push
sub
ds
jbe
scas
lahf
xor
xlat
sahf
mov
jo
rcl
push
stos
pop
mov
sub
mov
shr
xor
sbb
jns
cmpb
mov
adc
ljmp
sub
imul
out
decb
loop
pop
cmpsb
je
jae
clc
cld
faddl
cmp
cmp
mov
push
lcall
pop
data16
xchg
in
push
sub
sub
add
in
mov
mov
int
jge
mov
sbb
mov
dec
mov
mov
cli
lea
push
ljmp
cmp
push
and
adc
mov
cmp
ficoml
fstpt
jle
and
jnp,pt
out
sti
add
sbb
push
hlt
and
xchg
out
jg
jp
filds
adc
adc
jp
add
jo
loope
stos
push
inc
in
mov
test
dec
push
insl
push
inc
sbb
jge
fstl
inc
testb
lret
hlt
jmp
les
xor
adc
js
es
andb
mov
test
inc
mov
imul
sbbb
sub
enter
mov
xor
and
divl
mov
arpl
enter
std
mov
mov
rcll
xchg
mov
incl
cli
mov
js
inc
aas
scas
popa
xlat
push
testl
pop
or
pushf
in
jo
adc
mov
and
shll
jbe
inc
icebp
jbe
pop
mov
fwait
nop
push
mov
push
xchg
add
cwtl
pop
sub
outsl
inc
mov
push
pop
or
repz
in
out
push
andb
mov
adc
dec
outsl
or
fistpll
push
dec
push
jb
xchg
enter
xor
inc
mov
js
es
inc
enter
mov
dec
mov
mov
cmpsb
and
jecxz
mov
icebp
aas
aas
mov
xchg
jb
decb
testl
push
mov
arpl
cld
mov
mov
ljmp
cmp
loop
nop
lea
inc
cmp
dec
add
jno
add
arpl
mov
mov
test
fbld
mov
in
mov
ret
sarl
sbb
mov
xor
xor
sbb
pusha
pop
push
dec
sbb
xor
xchg
jo
push
push
adc
jmp
cld
insb
mov
frndint
jg
sub
subb
into
std
cs
mov
imul
popa
mov
xor
jno
test
clc
out
inc
mov
mov
ret
jns
mov
movsb
push
movsl
sub
add
lcall
push
outsb
lds
test
ss
mov
leave
jae
movsb
daa
out
sub
sbb
sub
mov
sub
idiv
lods
ja
int3
pop
mov
xor
mov
in
xorl
sub
pop
scas
rolb
or
xor
cmp
push
or
inc
cli
fcos
lock
decb
and
repz
xlat
mov
mov
stc
sub
cmp
sbb
lock
push
dec
cmp
and
push
in
test
ss
dec
mov
scas
dec
jnp
call
mov
popf
out
inc
fildll
adc
out
mov
add
aad
outsl
mov
cld
not
push
pop
adc
or
ret
mov
xchg
jg
adc
stc
pop
sbb
test
scas
fwait
mov
and
cmc
push
cmc
xor
insb
add
loop
inc
xchg
inc
scas
mov
push
dec
cmp
shr
adc
popf
jns
dec
push
inc
pop
mov
or
sub
xchg
add
sub
adc
cld
add
adcl
mov
cmpps
test
push
icebp
mov
scas
push
scas
aad
loop
dec
int
test
repz
lods
sti
loopne
std
mov
cltd
and
in
xor
aad
xor
addr16
daa
hlt
adc
jno
inc
mov
sete
sub
xchg
push
hlt
push
xor
out
push
or
push
ficomps
jecxz
daa
mov
fucomi
ljmp
pcmpeqd
std
out
xchg
xchg
sub
cmpsb
cs
aas
xchg
push
sub
sub
mov
push
dec
movsl
inc
outsb
mov
mov
push
xor
add
aaa
jecxz
ret
cs
incb
xchg
pop
fiaddl
divb
insl
pop
mov
add
mov
int3
insl
int
adc
jns
gs
ror
push
xor
mov
imul
xor
std
sti
or
cs
test
push
jmp
cmp
outsb
mov
xchg
add
xchg
test
adc
out
jge
mov
xchg
mov
pusha
sub
xchg
lds
std
enter
mov
aaa
repnz
push
pop
xor
out
cmpsb
dec
push
push
xchg
int
fiadds
mov
sub
xchg
cmpsb
out
mov
stc
scas
imul
push
cmc
sub
fs
and
jl
xor
cmp
dec
fs
popa
xchg
test
inc
pop
aaa
xlat
enter
mov
outsl
xchg
movl
push
cmp
mov
ss
in
lods
sbb
mov
rol
sub
sbb
imul
push
and
cwtl
push
mov
add
sbb
mov
dec
jb
xor
pushf
xlat
mov
push
cmp
mov
out
push
sub
stos
mov
aas
push
movsl
adc
lahf
xchg
mov
in
adc
and
cmp
cmp
idiv
pop
outsb
and
inc
or
xchg
add
fistpll
pop
pop
je
and
push
sbb
mov
adc
cmc
sbb
test
fidivs
out
daa
subl
js
orl
loopne
fwait
mov
mov
aas
fildll
sub
dec
xchg
shll
mov
loop
subl
nop
xchg
xchg
jo
mov
popa
shrl
mov
inc
pop
push
jg
sahf
jne
popf
clc
pop
push
and
push
lods
loop
cmp
mov
add
dec
mov
pop
push
sbb
fwait
shlb
mov
int3
push
inc
test
loope
jo
mov
push
pop
push
das
pop
arpl
test
cmpsb
loope
scas
in
test
and
add
jle
mov
cmp
loop
mov
xchg
jne
cmp
out
into
xor
cld
mov
out
int3
ds
mov
aas
arpl
loope
add
cmpsb
pop
or
in
xor
push
int3
or
xor
and
mov
cmp
jg
popa
and
adc
xlat
xor
xchg
and
cmp
adc
push
inc
mov
add
jns
inc
or
pop
adc
sbb
xorl
inc
les
into
fnstsw
in
cli
mov
mov
mov
mov
xor
ss
test
ja
mov
mov
push
in
sahf
jbe
and
sub
xchg
pop
lcall
dec
outsl
xchg
push
dec
pop
jnp
psubq
push
lret
cmpsb
push
pop
subl
shrb
cmp
xchg
aaa
add
cmc
xchg
aas
call
lock
inc
iret
add
mov
shll
xor
sbb
cmp
xlat
adc
cmp
shlb
mov
sub
pop
addr16
ret
pushl
aaa
aam
dec
jns
cmp
lock
enter
data16
ret
stos
or
movsb
dec
test
lret
ficomps
nop
push
frstor
xchg
addr16
xchg
roll
inc
jnp
pop
sub
mov
sub
scas
scas
test
pushf
stos
jne
mov
out
jge
sub
fwait
leave
add
adc
cmpsl
mov
cwtl
or
or
pop
or
xor
mov
enter
pop
popa
movsl
pop
lret
call
dec
rcrl
xorb
mov
imul
dec
lahf
icebp
std
in
out
cmp
and
test
imul
push
lds
or
mov
push
or
and
mov
xchg
subl
loopne
xchg
movq
loopne
test
aas
fdecstp
xchg
hlt
xor
push
push
push
fidivrl
stos
out
inc
test
stos
sub
xchg
jg
js
push
add
nop
jle
cs
bound
cwtl
sbb
fcmovne
jne
jns
jbe
xor
xchg
arpl
xor
and
dec
aas
out
fsubl
pop
popa
addb
push
pop
mov
int
cwtl
xor
out
push
fwait
adc
shrl
fistps
fs
xchg
and
daa
lcall
mov
pop
inc
push
call
dec
repz
sub
icebp
je
dec
pop
mov
mov
sar
mov
push
mov
outsb
pop
push
pop
inc
xchg
ror
lea
cmpsb
mov
int
jmp
xor
es
jo
cmpsl
repnz
inc
orl
jne
mov
fidivs
out
add
and
sub
outsb
aaa
xor
popa
ficompl
cmp
adc
mulb
cmp
xchg
jbe
aad
in
cli
and
cmp
mov
dec
aaa
sbb
jecxz
fistl
les
mov
inc
jne
lcall
pop
pop
roll
subb
mov
inc
cmc
pop
xchg
pop
sbb
cwtl
ss
xchg
mov
andb
cmpsb
sub
cmp
mov
dec
jnp
pop
push
and
push
icebp
pop
rorb
mov
push
stc
clc
leave
hlt
mov
and
or
pop
cwtl
cmp
sub
loop
ret
insl
call
xlat
loope
push
sahf
xor
lock
mov
movsb
pop
iret
hlt
jp
fidivl
push
adc
pop
add
push
loope
movsl
push
mov
jp
cmp
ficoms
mov
pop
pushf
pop
ret
dec
repz
fsts
add
or
pushf
icebp
lea
out
cmp
cli
addl
lods
das
jne
sub
loop
add
mov
fcmovu
aaa
sbb
jl
jae
mov
inc
mov
mov
insb
scas
jge
add
out
xlat
testl
adc
adc
inc
mov
and
stos
sub
scas
sbb
lahf
push
sahf
pop
xchg
loop,pn
lock
xor
add
jne
loopne
fisubrs
sbbb
mov
lods
xlat
jle
xchg
sbb
cmpsb
in
daa
mov
pop
dec
xchg
inc
mov
js
jo
or
pop
out
sub
mov
jmp
lret
mov
dec
popf
into
and
mov
loop
in
data16
fdivp
cwtl
filds
data16
cmpl
pop
fisubs
dec
add
enter
sub
jno
mov
mov
mov
outsb
fistl
mov
dec
pop
sub
cmp
lretw
pop
adc
lods
shlb
sbb
pop
ret
sbb
ds
andb
xchg
jge
xchg
dec
add
lods
pop
inc
inc
and
jle
test
popa
and
loop
add
and
outsl
mov
aas
mov
mov
decl
jle
outsb
iret
push
mov
cs
fidivrs
outsl
pop
out
dec
sahf
aas
mov
mov
decl
jle
outsb
iret
push
mov
cs
fidivrs
outsl
sahf
pop
out
dec
push
aas
mov
mov
decl
mov
outsb
into
push
mov
outsl
movsb
pop
into
dec
sahf
aas
sahf
das
mov
pushl
mov
shll
int3
int3
int3
int3
int3
xchg
and
mulb
enter
inc
adc
data16
push
push
push
es
xchg
and
mulb
cmpsb
repnz
inc
adc
data16
push
push
inc
xor
xchg
and
mulb
cmpsb
repnz
inc
mov
jbe
push
pop
jns
push
add
cltd
xchg
mov
out
lcall
sub
daa
mov
cmpsl
inc
xchg
push
leave
ja
xor
mov
push
xchg
cmp
mov
xor
scas
jno
mov
nop
loope
or
pop
jecxz
sub
out
add
data16
push
push
imul
xchg
add
add
jge
sbb
cwtl
int
jb
cmp
movsl
lea
out
cmp
jge
aaa
or
rcll
popa
scas
out
add
int
loop
inc
jmp
out
cmp
jge
aam
pop
inc
cmpsl
fs
sub
cmpsb
add
inc
fwait
test
mov
or
mulb
cmpsb
repnz
inc
adc
data16
push
push
push
inc
es
or
fistpl
ret
mov
inc
ja
jbe
pop
push
fs
xor
xor
jo
mov
mov
rolb
test
loop
push
ja
push
jbe
pop
xor
dec
pop
inc
xor
ficompl
ret
mov
inc
adc
data16
push
push
push
inc
es
xchg
and
mulb
cmpsb
repnz
inc
adc
data16
push
push
push
inc
es
xchg
repz
jnp
fxam
js
xor
clc
jl
adc
inc
lahf
mov
mov
pop
test
lods
cld
pop
movsl
sarb
push
adc
test
xchg
mov
inc
mov
idivb
cmc
xor
cmp
inc
dec
js
mov
ss
stos
aaa
push
js
orb
inc
icebp
stos
jno
jno
push
out
repz
cwtl
aad
inc
dec
xchg
adc
mov
xchg
fdivp
sub
mov
test
add
cmpsl
jne
out
sub
sub
mov
and
insl
popf
push
add
add
mov
sbb
mov
test
dec
call
ljmp
sub
jge
jmp
or
xor
daa
repnz
or
xchg
ja
adc
aaa
inc
out
mov
xchg
imul
movsb
fistpl
add
pop
fnop
ret
xchg
mov
pop
shl
cmp
out
mov
ljmp
test
fcomps
push
repz
mov
lock
icebp
ljmp
int
adc
hlt
mov
mov
jl
mov
sbb
fdivrl
or
dec
dec
cmp
push
loopne
call
push
cs
mov
adc
pop
dec
nop
add
mov
in
incb
addr16
movsl
ret
cmpsl
lret
call
test
loope
xchg
jns
dec
and
cmc
lods
sub
addr16
iret
clc
add
push
cltd
sbb
lahf
mov
xchg
repnz
inc
std
jne
or
cmp
add
int3
mov
mov
lret
aaa
cltd
subb
scas
cmp
andl
jbe
scas
jmp
adc
fwait
mov
jge
mov
clc
mov
mov
push
xchg
jl
mov
sbb
xchg
push
imul
daa
inc
pop
lret
scas
xchg
jmp
sub
jecxz
in
sbbb
mov
es
fdivs
jmp
xchg
or
stos
cmpl
mov
sbb
push
add
lcall
lock
pop
adc
push
mov
push
adc
cli
add
stos
jmp
jns
push
mov
in
xor
adc
in
outsl
mov
les
div
fstpt
scas
inc
shr
push
push
test
clc
inc
movsb
arpl
js
or
jp
or
xor
or
push
aas
movsb
mov
dec
ljmp
add
shrb
lods
inc
add
push
inc
test
aas
pop
repnz
imul
iret
pop
sub
insb
sub
cwtl
cltd
mov
ss
sar
hlt
cmp
sbb
jle
aad
aam
jae
jbe
int
cmp
pusha
xchg
pop
cmpsb
and
jnp
iret
sub
in
xchg
ss
and
aas
mov
push
inc
test
sbb
out
daa
jb
jmp
xor
lds
loope
repz
push
rcll
sahf
jno
cwtl
xchg
sub
and
sub
xor
lahf
aaa
adc
insb
jle
sbbb
mov
mov
call
sbb
dec
xor
iret
mov
dec
mov
sbb
mov
cmp
iret
add
and
jp
sub
gs
xor
mov
xor
mov
icebp
pop
ret
xchg
dec
movsl
jp
sbb
lret
jo
in
add
lret
jno
add
imul
push
js
inc
jo
mov
mov
add
call
add
aad
mov
jo
add
arpl
and
xor
jne
stos
add
push
pusha
incl
adc
mov
sbb
mov
fistpl
xchg
mov
jnp
cmp
mov
inc
js
into
sbb
push
jp
xor
popf
push
inc
inc
scas
add
cs
jae
xlat
lods
sbb
mov
scas
es
daa
inc
or
repnz
adc
fisttpll
out
call
xchg
sub
in
out
es
in
mov
jg
mov
js
mov
mov
ja
jno
xchg
xchg
pop
repz
dec
rclb
mov
jg
pusha
loop
outsl
daa
mov
jge
into
cmp
cmp
fisttps
push
lods
xlat
aad
hlt
mov
fs
repnz
push
lea
xchg
movsb
cltd
sub
mov
xor
xchg
inc
add
lcall
lds
dec
sbb
call
pop
sub
push
mov
adc
push
xchg
dec
lea
in
enter
adc
sti
ficoml
rcrl
cmp
notb
sub
add
sbb
push
in
add
lods
push
mov
lods
pop
dec
je
cmc
dec
cmpsl
testl
jne
mov
mov
xor
add
sbb
rclb
cmp
aas
loop
jp
xchg
sahf
lock
stos
xchg
inc
push
mov
mov
mov
push
out
xor
enter
pop
or
icebp
fisubrl
xor
cli
add
xor
pop
inc
and
push
leave
out
inc
cmp
jge
add
adc
pop
and
imul
dec
push
push
lret
add
or
into
ffree
outsb
bnd
repnz
xchg
jne
adcb
sbb
jl
cli
das
setl
hlt
arpl
inc
mov
xor
dec
pop
jge
and
fcmovnu
jp
adc
xor
mulb
cli
imul
sub
xor
mov
mov
mov
sbb
sbb
xlat
scas
or
arpl
sub
imul
dec
sbb
push
out
jl
pushf
aad
xor
dec
sti
cli
cli
fcoms
rorl
and
stc
pop
mov
pop
std
movsl
inc
or
inc
cltd
fisubl
sub
enter
xor
int3
lods
mov
cmc
pusha
push
jp
aad
cwtl
fimuls
dec
cmp
adc
fstpl
fsubs
shll
into
int
std
bound
pop
or
fsub
mov
mov
sub
or
repnz
outsl
or
mov
out
sub
fsubrl
popa
xor
movsl
inc
shlb
xchg
sub
cli
fisubs
lock
jmp
adc
jg
movsl
inc
sbb
mov
push
fimuls
leave
mov
pop
into
pusha
xor
repz
push
push
cli
inc
mov
enter
inc
jmp
cwtl
popa
mov
push
js
lea
addr16
outsb
call
xor
loope
das
xor
jg
int3
nop
push
scas
ret
js
add
dec
lds
data16
sbb
inc
sbb
sub
addl
inc
lock
loope
pop
sub
mov
sbb
pushf
fisubl
xor
mov
addr16
ret
rolb
sub
and
cwtl
js
rclb
mov
or
push
nop
imulb
inc
aas
add
xor
sbb
adcl
jmp
sbb
ljmp
add
stc
xor
xchg
inc
lret
mov
fwait
inc
stos
rol
cwtl
inc
jp
ret
iret
icebp
lret
movsb
packuswb
movb
in
int3
fwait
orb
xor
cli
add
out
xchg
push
sub
xchg
mov
cmp
test
add
lcall
stc
in
stos
pop
in
test
mov
js
js
sub
and
jg
pop
adc
cmp
or
xchg
xchg
test
filds
fldcw
subl
fld
aaa
scas
mov
int
ds
rcrb
lea
push
sub
pusha
into
pop
addr16
test
test
fcmovnu
cs
dec
call
fsin
xor
out
xor
xor
mov
enter
or
mov
mov
jb
out
jmp
stc
or
sar
xchg
lret
popa
cmp
mov
push
cmp
xchg
or
je
xchg
mov
ds
int3
jne
out
sbb
sub
in
xchg
cmpsl
push
dec
je
outsl
outsl
sbb
mov
loope
jg
insb
or
into
jle
jmp
pop
test
xor
scas
pop
or
ret
pushf
mov
test
inc
cs
cmp
out
sahf
mov
push
cmp
scas
pop
or
xchg
xor
xchg
or
stc
sbb
mov
leave
cmp
mov
and
pop
cmp
cmpsl
jmp
jl
arpl
mov
cmp
ret
jns
test
insl
lcall
push
inc
or
clc
out
lds
lods
adc
cmp
add
movsl
push
scas
adc
or
ret
xor
and
pop
add
add
jno
dec
dec
xor
les
lahf
and
and
inc
test
push
add
jno
sub
push
sbb
mov
jg
rcrb
xchg
xchg
add
pop
cmc
pushf
decb
inc
insb
cmp
movsb
xor
insb
push
sub
or
fistps
sbb
clc
shl
fldcw
xlat
inc
add
insl
dec
push
leave
cmpsl
xor
xor
loope
push
iret
or
enter
xor
loope
cmp
or
dec
xchg
incb
in
icebp
stc
das
cmpsl
out
mov
jno
pop
outsb
mov
xchg
loopne
adc
in
push
and
adcl
jns
lods
sbb
xchg
or
mov
test
xchg
dec
sbb
inc
mov
jmp
xor
push
out
gs
lahf
push
inc
dec
into
and
inc
sbb
or
xchg
data16
cmpsb
ret
test
int
add
push
jp
std
sbb
fistl
movsb
fwait
pushf
xchg
andl
fs
xor
dec
lds
lea
pop
stos
or
add
dec
cmp
fsubs
iret
mov
sbbl
out
imul
cmp
push
in
sub
roll
push
jbe
inc
cmpl
jbe
fistpl
inc
sar
mov
mov
jns
or
mov
pop
cmp
xor
sub
lret
inc
cwtl
int3
inc
jl
in
lods
outsl
ss
jecxz
divl
and
mov
js
rcr
hlt
mov
hlt
mov
push
cmpsl
aaa
and
lcall
xchg
mov
mov
sub
add
pop
sti
outsl
sub
psubsb
xchg
in
xchg
decl
jl
adc
test
lret
sub
dec
notl
inc
jl
sbb
movsb
lea
xchg
out
lods
ret
scas
mov
cmp
cmpsl
out
mov
and
push
repz
sub
iret
pop
push
jmp
sub
aam
negl
mov
xor
js
test
cmp
sub
les
push
aaa
pop
jmp
mov
js
mov
xor
pop
add
insb
cmc
adc
jg
test
ret
out
rorb
das
sbb
sub
mov
ret
mov
push
sub
iret
out
stos
push
lock
mov
cmp
out
cmp
jne,pn
dec
aaa
mov
xor
repz
iret
movaps
xlat
jmp
outsb
dec
lcall
mov
sub
ljmp
addr16
ret
lods
pop
mov
mov
out
mov
imul
lods
fimull
xor
mov
adc
and
dec
pop
test
jns
mov
bound
dec
aad
pusha
mov
insb
adc
ret
mov
mov
sbb
xor
add
movsl
into
and
ja
mov
jecxz
adc
insb
mov
sub
into
xchg
js
add
pusha
mov
push
mov
in
cmpsb
xchg
fnstenv
data16
mov
dec
cmp
mov
pop
testl
out
ss
adc
xchg
mov
jb
iret
mov
in
jno
xchg
loope
inc
lods
in
push
cmp
sbb
cwtl
aad
and
cwtl
int3
imul
lds
mull
setl
push
cmp
cmpsb
rolb
push
and
mov
fcoms
and
mov
xchg
cmp
sbb
jecxz
daa
sbb
xorb
sti
shrb
sub
cmp
adc
movsl
mov
lret
call
xor
stos
bound
sbb
push
lcall
pop
jns
sysexit
xor
test
xor
push
dec
inc
inc
add
int
and
cmp
mov
test
or
xchg
test
pushf
daa
jge
popf
adc
push
xchg
push
outsb
cmp
ret
cld
or
nop
lcall
mov
or
sti
jmp
inc
data16
mov
cmp
sti
and
or
push
xchg
jge
std
and
inc
pushf
stos
gs
dec
xchg
xor
xor
and
inc
cmc
sar
dec
and
and
pop
jno
ja
stos
xchg
repz
push
mov
cmp
adc
mov
cmc
push
fsubl
or
pop
jmp
inc
ret
aas
push
in
popa
push
adc
dec
notb
sub
addr16
test
std
pop
dec
or
idiv
ret
jns
out
fucomp
das
imul
xchg
pop
sub
shl
repz
mov
dec
push
adc
add
xchg
arpl
out
cmp
cli
js
js
xor
gs
in
mov
push
sub
xor
lods
jge
aas
dec
repz
jo
mov
mov
call
fdivrs
mov
or
stos
cmp
lods
jo
aam
pushf
lock
sub
test
call
insl
jg
sbb
xchg
add
dec
jae
pop
clc
mov
xorb
or
xor
cmpb
xchg
sbb
out
leave
pop
xchg
inc
out
cld
and
sbb
insb
inc
ret
adc
mov
jge
imul
or
mov
in
jg
xchg
inc
mov
cs
jnp
push
into
ljmp
mov
es
stos
outsb
into
popf
mov
pop
movsb
hlt
scas
and
push
or
aaa
pop
push
sub
mov
dec
push
loope
cmp
lret
adc
or
fwait
insb
inc
rcll
mov
add
sub
daa
xor
push
ficoms
xchg
mov
cld
test
int
cltd
xchg
mov
add
mov
in
imul
adc
rorl
sarb
cltd
sub
or
incl
les
rolb
fwait
mov
mov
sbb
in
jle
add
add
loopne
hlt
pushf
jns
jns
or
pop
dec
mov
mov
or
jno
fs
sub
fidivs
cmp
rorl
pop
out
pop
popf
aam
cltd
std
sub
and
push
mov
sub
xor
hlt
inc
adc
in
dec
call
cmc
fscale
xchg
jp
mov
mov
sbb
bound
xchg
adc
je
int
hlt
or
push
xchg
leave
sub
test
mov
outsb
mov
adcb
lret
dec
xchg
push
inc
movsl
pop
icebp
add
or
aas
or
xchg
dec
mov
push
sub
push
ljmp
cmp
sub
jecxz
sbb
test
std
sbb
mov
jl
mov
nop
or
xor
js
xchg
roll
sbb
sub
pop
int
ljmp
push
inc
scas
pop
out
push
mov
jle
mov
adc
outsl
pop
and
into
push
mov
bswap
push
inc
push
sbb
divl
xor
icebp
filds
nop
mov
push
rcrl
pusha
mov
lods
int3
jno
jo
mov
popa
out
xchg
lcall
mov
arpl
cmpsb
popf
mov
push
scas
out
ds
in
adc
or
shll
jg
cmp
mov
adc
test
movsb
jns
adc
pop
add
inc
dec
cmp
push
or
or
pop
ds
or
xor
xchg
pop
stos
inc
add
movsl
cltd
gs
les
xchg
jecxz
inc
call
outsl
cld
add
push
xchg
shll
adc
add
mov
mov
test
cmp
flds
cli
movsb
push
insl
pop
lods
pusha
dec
test
or
and
sub
mov
rolb
push
xchg
rcrl
xchg
inc
es
mov
cmp
repz
leave
movsl
insb
and
sbb
lea
cmp
fcoml
mov
leave
pop
xor
sbb
dec
cmp
fstp
mull
nop
sahf
andb
repnz
push
jb
mov
pusha
stc
inc
imul
fdivs
aaa
push
aas
dec
pop
xchg
cmp
cmovg
lcall
dec
mov
or
ret
mov
sub
push
lahf
push
xor
test
sbbl
add
rol
or
xorl
inc
inc
xchg
rep
push
cltd
mov
xchg
mov
je
mov
push
cli
mov
mov
aas
pop
push
addr16
mov
in
cmp
ja
fsubrp
shlb
adc
out
mov
out
es
test
shrl
xchg
imul
hlt
sbb
push
mov
sti
sub
cmp
in
sbb
sub
stos
xchg
add
pop
movsb
inc
xchg
addr16
leave
inc
cmpsb
xchg
xor
mov
jmp
push
mov
shlb
fisttpll
adc
cwtl
pop
jne
popf
lods
aad
jle
sub
in
lods
dec
pop
rclb
leave
jg,pt
fidivrl
fbstp
test
scas
repnz
bound
stc
cmp
dec
inc
xchg
adc
mov
mulb
xor
sub
pop
test
out
push
loopne
jecxz
jne
inc
leave
js
mov
mov
xacquire
lcall
ljmp
jle
aaa
dec
mov
iret
repnz
adc
mov
jne
negb
outsl
dec
sub
in
fwait
loop
scas
sbb
mov
mov
mov
mov
inc
cmpsb
xor
sahf
push
jns
mov
frstor
xchg
jbe
cmc
push
add
lds
outsl
pop
mov
pop
je
fcompl
adc
mov
pop
pop
pop
mov
int
jb
mov
popf
mov
pop
lods
arpl
jne
addb
pop
push
ret
int3
str
je
sarl
mov
dec
rclb
jge
adc
aas
lcall
mov
ds
testb
or
mov
ds
pop
sbb
pop
cmpsb
icebp
daa
mov
sub
in
pop
iret
xor
and
nop
adc
popf
loopne
shll
or
pop
and
inc
addr16
mov
jecxz
push
add
xor
imul
sub
pop
sarb
lret
mov
inc
pop
shl
ret
cld
jg
pop
and
lea
stos
sbb
add
fsubrp
mov
pop
sahf
pop
out
dec
push
jns
adc
push
in
rol
xchg
bound
and
rolb
fs
xchg
push
inc
jo
adc
and
jecxz
in
mov
popf
movsb
sub
insb
std
jle
popf
insb
inc
test
dec
mov
dec
out
pop
and
mov
sub
fimull
call
inc
pop
jae
sbb
mov
pop
inc
mov
rol
shlb
lea
jae
popl
popa
xchg
xor
jl
inc
inc
push
dec
ljmp
push
aaa
daa
fnstsw
stos
mov
sub
pop
xchg
popa
mov
add
jno
mov
fsubs
loope
jne
jnp
out
aaa
xor
jle
insb
inc
shll
sub
test
xchg
cmp
add
cld
and
cli
sbb
mov
pop
add
lea
push
add
push
cmc
sahf
pop
daa
int
call
gs
sub
ja
xchg
sbb
int3
push
fistl
fadds
cmpb
das
dec
mov
jae
push
xchg
jmp
insl
inc
jb
or
aas
test
ret
hlt
mov
cld
dec
addr16
inc
xor
addr16
gs
cmc
lea
or
dec
cmpsl
pop
out
lock
sbb
dec
sub
cmc
mov
cmp
xor
imul
mov
popf
inc
cmp
ud1
shll
adc
xchg
outsb
cmp
stos
adc
icebp
test
xor
sub
mov
dec
clc
cmp
divl
jbe
popa
mov
push
js
xor
or
jbe
pop
imul
inc
jp
imul
cmp
pop
mov
jo
or
repz
dec
lods
mov
adc
ss
mov
sbb
cltd
inc
jmp
sbb
xchg
aam
jb
inc
movsb
xchg
mov
arpl
cmpsb
adc
pop
sbb
and
aam
cmp
iret
clc
leave
and
mov
adcl
sbb
popf
or
mov
or
pop
sub
pop
xorb
in
pop
mov
dec
xchg
orb
dec
lea
or
dec
cmc
out
shll
and
lret
push
in
ds
les
or
push
ja
je
jmp
imul
jbe
jbe
int3
leave
push
and
jb
int3
jno
cmpl
push
add
dec
lahf
adc
mov
jle
and
lea
jo
movsl
in
out
or
cli
shl
js
jne
fwait
out
ljmp
aad
adc
shl
icebp
test
push
add
sub
dec
inc
dec
add
sub
mov
inc
mov
and
fldt
mov
pop
push
outsl
or
sub
loope
aad
insb
aas
cmpsl
pushf
cmc
jmp
rcrl
scas
int
imul
mov
mov
inc
std
xchg
mov
jno
cli
cmp
in
int3
shlb
pop
addr16
sti
jo
fstpl
in
int3
insl
add
aaa
sub
pop
mov
test
popa
in
sbb
mov
gs
cwtl
jle
insl
pop
mov
dec
aad
rol
xor
xchg
dec
lcall
fdiv
adc
dec
ret
xlat
or
cmp
je
loop
mov
xor
dec
inc
xchg
mov
add
push
mov
arpl
and
push
pop
test
imul
jnp
aaa
ss
jge
lock
xor
flds
cmc
pushf
fadds
bound
js
push
xchg
out
in
and
daa
jle
mov
sbb
ret
movsl
test
or
mov
aas
iret
inc
clc
fistps
lcall
lea
jg,pt
popf
cmp
sarb
pop
cli
pop
xlat
lea
mov
cmpsb
push
add
sub
mov
cmpsb
repnz
inc
adc
data16
push
push
push
inc
es
xchg
and
mulb
cmpsb
repnz
inc
adc
data16
push
push
push
inc
es
xchg
push
add
mulb
cmpsb
repnz
xchg
push
add
jbe
push
push
push
inc
es
xchg
and
mulb
cmpsb
repnz
inc
adc
int3
xor
jbe
mov
inc
popf
int3
int3
int3
int3
int3
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
mov
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
call
push
mov
call
xor
leave
ret
hlt
sub
cmp
or
sbb
sbb
mov
xor
and
adc
add
hlt
sub
cmp
or
sbb
test
test
mov
xor
and
fdiv
sub
cmp
or
sbb
test
xchg
inc
in
clc
and
push
lods
insl
fadds
insb
lods
hlt
mov
dec
btc
inc
iret
mov
inc
inc
adc
and
js
sbb
out
nop
movsb
xchg
insb
push
enter
stos
mov
jae
enter
cmp
lea
jbe
pop
dec
fcmovnu
lret
inc
inc
rcrl
scas
lret
xchg
aaa
add
hlt
xlat
ret
cmp
or
or
imul
test
mov
test
ss
stc
cmpsl
mov
les
cmp
dec
push
femms
jne
insb
mov
and
enter
out
or
insl
lahf
mov
xchg
fnsave
push
and
rclb
ja
rcr
push
fdivs
sub
cmp
or
sbb
test
test
mov
xor
and
adc
add
xchg
inc
xchg
xchg
dec
sbbb
lret
cmp
sub
add
daa
out
divb
dec
je
subb
mov
test
or
rcrl
add
sub
inc
hlt
ret
xchg
jge
outsb
mov
js
dec
xchg
jl
insb
icebp
add
js
dec
test
test
mov
xor
and
adc
add
hlt
sub
cmp
or
sbb
test
test
mov
xor
and
adc
add
hlt
sub
leave
lods
movsl
mov
shll
cltd
pop
insl
push
enter
icebp
mov
pushf
jmp
xor
mov
imul
lret
stc
and
pop
in
pop
sbbl
add
sar
xor
ret
mov
cmp
jae
fnstsw
cwtl
sbb
fsubl
jb
or
data16
push
mov
push
inc
repz
ret
cltd
cmp
push
ret
pop
dec
fidivs
testl
inc
xchg
push
inc
xor
xchg
cmc
rol
idivl
jbe
dec
jle
popa
lods
push
xor
sti
stc
je
inc
pop
inc
and
mov
rcll
popa
adc
lret
dec
dec
pop
into
jbe
dec
shrl
sub
xchg
add
mov
sub
mov
pop
test
into
jnp
ret
dec
mov
lock
and
into
ficoml
cmp
pushf
movsb
mov
and
dec
or
nop
jae
jnp
sahf
movsb
or
mov
add
cwtl
add
dec
das
xor
sub
aas
rolb
dec
cmpsb
inc
in
adc
inc
push
jg
cmc
je
push
shl
jl
hlt
lahf
aam
pusha
jns
pop
decb
push
push
fldl
and
cs
or
pop
ds
pop
outsl
pop
and
jmp
repnz
stc
jno
lret
pop
daa
test
mov
mov
mov
xchg
clc
jge
test
mov
adc
scas
addr16
xchg
push
or
mov
or
push
xlat
ljmp
cld
mov
lcall
popa
std
mov
popa
test
nopl
ffreep
rcr
fwait
xchg
jmp
icebp
mov
push
test
dec
mov
pop
jge
shlb
inc
mov
cmpsl
inc
pop
sub
sub
push
dec
fistpl
jns
cmp
push
movsl
fisubs
inc
and
xor
jmp
xor
cli
iret
mov
jl
sbb
push
mov
jo
dec
dec
call
fidivrl
imul
addr16
into
es
sti
daa
xchg
stos
out
in
pop
and
and
adc
and
push
jae
sub
jns
aas
rep
pop
lret
loopne
mov
das
mov
popa
mov
add
xchg
pop
adc
arpl
es
jno
dec
mov
pusha
insl
in
mov
jns
mov
xchg
aaa
cmp
scas
inc
mov
mov
push
sub
mov
fdivrl
icebp
cltd
cmp
sub
jnp
and
add
icebp
pop
andl
push
xor
out
cmpsl
arpl
jp
jnp
sbb
push
sub
cwtl
pushf
jl
mov
mov
dec
mov
sbb
pop
push
add
xchg
jecxz
cmp
inc
cmpsl
jg
inc
jns
mov
lcall
inc
pop
bound
and
inc
mov
pusha
mov
mov
xchg
loopne
loope
fmuls
mov
cmp
aas
mov
jo
shll
repz
mov
into
xlat
push
jns
cwtl
rcl
call
mov
push
out
sbb
sub
mov
fistl
adc
outsb
mov
push
ss
lock
sbb
push
push
mov
pop
xor
cmp
add
jecxz
lods
pop
fpatan
fmul
push
cli
inc
ljmp
dec
jecxz
pop
xchg
add
cmpb
lods
ret
xor
out
outsb
mov
adc
or
jmp
lret
and
les
mov
cmpsb
mov
mov
ror
rclb
dec
mov
in
rclb
mov
loopne
xor
or
mov
in
in
sbb
push
hlt
add
adc
outsl
mov
loopne
pop
enter
addr16
sub
mov
and
pushf
mov
testl
out
dec
fdivrp
movsb
cmp
ljmp
sti
in
mov
aad
xabort
pop
adc
ror
scas
clc
xchg
leave
lods
push
inc
jg
jb
sti
rcrb
repz
into
int3
repz
adc
shrb
das
or
stc
stc
cs
pop
pop
lahf
fcoml
lock
adc
sub
mov
jmp
cld
shrl
insl
dec
ljmp
pop
or
jmp
lds
xor
bound
inc
daa
gs
push
sub
push
and
jae
jae
dec
lcall
sbb
in
xchg
jge
add
cmp
test
mov
xor
and
imul
inc
lret
pop
in
dec
jecxz
jo
fidivl
push
ljmp
cltd
jl
sbb
cld
sub
sbb
mov
inc
test
imul
movsb
push
xchg
fsubp
mov
fstp
mov
dec
loopne
push
and
in
push
adc
xchg
xlat
fisubrs
out
xor
mov
ljmp
cmpsl
inc
mov
pop
xchg
ds
stos
outsb
push
out
and
call
cwtl
ss
dec
pop
push
clc
cmc
sarb
andl
js
and
leave
addr16
sbb
movsb
pop
jo
inc
repnz
add
sarb
sub
xchg
insl
xchg
in
xor
lea
mov
incl
dec
enter
cld
xchg
cli
out
cwtl
in
and
lock
jecxz
xchg
shll
mov
cli
fdivrl
loop
or
ret
mov
enter
and
and
jns
rorb
jge
adc
mov
lcall
in
add
lahf
scas
xor
mov
mov
xchg
pop
movsb
or
sbbb
xchg
push
dec
jns,pt
rcr
int3
ret
loope
or
jmp
data16
popa
adc
outsl
test
data16
jmp
xor
imul
cltd
dec
cmp
sub
in
sub
cld
or
insl
and
sarb
sub
std
mov
cmp
and
xor
push
stc
pop
das
adc
lea
clc
insb
mov
mov
dec
jno
mov
push
adc
clc
rcr
enter
ljmp
std
and
jg
mov
jnp
xchg
dec
divl
es
int3
aad
fcompl
aaa
dec
das
push
iret
mov
jne
sbb
push
aad
fisttpl
push
fdivl
pop
lret
pop
negl
cmp
mov
lods
movb
mov
ljmp
in
jl
dec
lret
out
je
jb
scas
dec
pop
and
cmpsl
xchg
loopne
pop
sbb
xor
xor
mov
add
pop
stc
movsl
jbe
adc
ficoml
subb
pop
loop
mov
in
push
js
sub
inc
jmp
mov
sti
dec
je
popf
pop
out
mov
add
jnp
or
push
adc
mov
andb
xchg
or
lods
push
fisubrs
mov
cs
xchg
push
cltd
pop
mov
jg
adc
cmp
ljmp
gs
mov
or
pop
rorb
inc
out
pushl
pop
icebp
jbe
and
cmp
pop
xor
xlat
inc
cmp
mov
jbe
insb
adc
cmp
jle
movsl
cmp
jnp
outsl
clc
jb
xor
movsl
sub
loope
aas
sub
push
mov
in
dec
fucomip
sub
daa
sub
adc
mov
fs
pop
xor
in
xchg
jmp
dec
or
ret
xchg
mov
push
lock
cmp
mov
je
dec
mov
or
fisttps
out
mov
pop
xchg
inc
movb
adcl
jge
aad
sbb
jbe
outsb
jg
in
and
mov
shl
mov
jmp
mov
arpl
or
call
jmp
xorl
clc
cmp
adc
xchg
jecxz
dec
push
outsl
es
std
in
cmp
movsl
lods
mov
pop
xchg
nop
out
add
jb
inc
sub
mov
cwtl
stos
add
scas
add
add
imul
and
push
mov
dec
push
ret
nop
mov
nop
jb
push
cs
add
cwtl
nop
jo
add
sahf
mov
scas
fadd
xor
push
push
and
push
mov
mov
fisttpll
inc
lahf
sbb
in
sbb
push
imul
sub
sbb
movsb
out
rol
jecxz
ret
or
inc
loope
into
sbb
xchg
or
sbb
push
mov
or
mov
enter
js
in
pop
aas
jb
mov
lds
xchg
test
adc
dec
movsl
inc
add
sti
dec
cmp
repnz
fidivl
je
adc
loopne
mov
movsb
lcall
pushl
stc
addr16
mov
jbe
xchg
arpl
test
jp
or
mov
adc
inc
cmc
lods
push
into
add
imul
gs
inc
sbb
popf
jle
mov
mov
cmp
push
fiadds
push
comiss
mov
in
jecxz
adc
or
out
pop
add
into
cmp
outsb
inc
dec
mov
push
lret
scas
pop
sub
or
add
sub
fidivrl
fisubl
fldcw
fsubr
add
insl
jl
add
xor
cmp
cltd
xchg
mov
fwait
movsb
mov
sbb
in
jecxz
or
sub
aas
and
pop
dec
mov
mov
jg
mov
mov
leave
shl
mov
xor
in
push
lret
cmp
xlat
sub
mov
cwtl
aad
shll
popa
test
mov
jne
iret
adc
push
cld
adc
mov
out
mov
sub
or
xor
subb
adc
pop
loope
daa
data16
fdivl
add
and
push
jb
lds
dec
sub
cld
data16
mov
iret
inc
cmc
mov
out
jmp
jns
sub
out
mov
dec
fs
loop
dec
mov
pop
cwtl
stc
push
cli
mov
cmpsb
jno
push
sub
aam
adc
lret
icebp
sbb
in
imul
and
sahf
mov
mov
xlat
icebp
mov
jl,pt
mov
inc
mov
and
je
fs
andb
cmp
sti
decl
xor
movb
lret
sub
lds
add
enter
mov
inc
clc
mov
data16
xchg
xor
scas
int
push
mov
cmpsl
fldcw
mov
adc
addr16
daa
test
xchg
xchg
inc
dec
mov
divb
dec
popw
ja
ret
inc
jmp
push
push
lock
outsl
repnz
dec
outsb
jg
xor
ret
mov
stc
mov
pop
push
mov
lcall
pop
test
push
rcl
loop
cmp
adc
popa
insb
dec
in
or
sbb
fyl2x
mov
out
lahf
lds
test
xchg
je
lock
and
roll
gs
jle
aaa
cs
xlat
scas
stc
xor
mov
imul
sbbl
xchg
add
fs
inc
and
mov
int
cs
sbb
stos
sarb
push
lcall
out
cmc
std
mov
loope
enter
mov
pop
aam
pop
subl
mov
ds
push
add
fucomip
adc
push
mov
cltd
xlat
xchg
addr16
ss
mov
jae
aaa
inc
dec
pop
scas
pop
dec
mov
gs
filds
insb
adcb
push
mov
jl
pop
sub
shrb
into
sbb
js
or
add
jno
out
insb
mov
jae
xlat
movsl
and
and
lahf
cltd
shl
jae
jp
dec
repnz
inc
stc
aam
xchg
les
ljmp
adc
jne
jno
cmp
mov
pop
inc
stos
outsb
sub
add
dec
imul
shr
rol
cmpsb
stc
cmp
mov
test
lahf
and
mov
sub
mov
or
movsb
xchg
and
insb
int
fimuls
xchg
pop
out
and
cld
dec
in
movsl
cli
in
mov
int3
jb
mov
and
repz
stc
xchg
dec
sub
shr
pop
popf
mov
jl
fcoml
int3
pop
inc
mov
mov
lea
push
sub
shlb
sbb
pop
iret
sbb
adc
js
mov
fstps
scas
xchg
or
pmulhuw
dec
aam
sti
add
ficoms
pop
popa
lcall
ds
adc
pop
mov
mov
xlat
pop
loop
mov
stc
adc
mov
jne
outsl
inc
and
sbb
test
adc
push
inc
mov
push
lret
sub
mov
jmp
dec
std
insb
and
sahf
stos
orl
xchg
cmp
inc
fdivp
notb
out
mov
stos
das
pop
sbb
jg
dec
push
pop
push
add
or
sbb
sub
addl
push
lds
mov
bound
lret
dec
in
push
jl
and
cld
cli
fwait
pop
pop
cs
iret
repnz
fwait
jne,pn
mov
cmp
xchg
stos
hlt
cld
aam
push
xchg
cmp
movsl
jp
jge
mov
in
push
leave
lahf
loop
cld
popa
shrb
dec
dec
jp
stc
and
pop
ja
rclb
xchg
jge
iret
jge
test
enter
in
lahf
fisubrs
adc
loop
push
pop
or
je
add
push
inc
jne
bound
mov
inc
repz
jge
cmp
xchg
je
fnsave
mov
sub
test
mov
fnstenv
aam
add
push
mov
jl
add
ffreep
adc
pop
js
and
mov
cli
nop
or
inc
xchg
inc
push
iret
retw
add
jae
xor
repnz
sti
out
lds
into
pop
js
insb
in
jb
adc
mov
out
fiadds
cmc
jne
cmc
scas
insb
adc
mov
and
int3
popa
es
cmp
daa
dec
adc
xlat
hlt
stos
and
fdivrs
fsubrs
int
cwtl
roll
xchg
setge
push
imul
pop
aas
out
icebp
mov
mov
pop
push
test
loopne
fnstenv
movsl
sub
int3
push
jmp
sub
mov
sub
add
cmpsl
push
sbb
sbb
xchg
addl
cltd
icebp
mov
and
mov
mov
cmp
add
cmp
push
mov
xor
xchg
inc
dec
xchg
cmp
and
add
mov
mov
shr
mov
sahf
sub
shrb
sbbl
pop
loopne
pop
rcr
lock
pop
out
test
adc
jmp
test
push
pusha
into
pop
mov
push
jbe
mov
mov
push
test
fs
int
cmp
or
movsl
mov
fsubrl
shr
cmp
mov
lds
stc
xchg
lods
mov
insb
jns
jbe
jmp
repz
dec
dec
cmp
push
cmpl
jo
mov
mov
sarl
rorl
add
cmp
stc
sti
adcl
imull
cmpsb
mov
dec
xor
ret
int3
jecxz
aad
push
jbe
xor
fistl
iret
push
cld
mov
adc
dec
inc
jge
adc
dec
xchg
mov
xlat
mov
out
int3
js
cmp
es
dec
xchg
outsb
data16
test
sub
lea
in
lahf
dec
dec
into
or
loopne
stos
mov
push
roll
shrb
inc
movsl
test
std
mov
push
dec
inc
sub
mov
jne
sbb
int3
dec
int3
mov
ja
and
test
pop
stos
addr16
adc
sti
insb
or
sbb
les
adc
fnsave
popa
inc
dec
mov
mov
das
and
cld
fdivrl
psrlq
ror
and
and
lcall
dec
sbb
leave
fistpl
pop
testl
pop
das
sub
lods
and
and
cwtl
mov
cld
lret
jecxz
jle
js
lret
out
dec
stos
addr16
dec
xor
mov
test
enter
scas
sub
cmp
sbb
inc
fnstsw
pop
js
jnp
add
in
add
pop
aad
mov
scas
lahf
leave
jl
cmp
xlat
inc
push
inc
xor
and
dec
pop
in
mov
outsb
adc
dec
sbbl
popa
xor
xchg
les
or
scas
xor
xchg
push
mov
pusha
rcll
xchg
leave
fld1
cmpsb
push
add
sub
rorl
flds
sbb
outsb
fisttps
and
int3
es
jns
icebp
xchg
stos
mov
mov
enter
or
test
push
or
into
rcl
pop
stos
fcomip
inc
out
cmpsl
dec
inc
jl
mov
xchg
cli
sqrtps
cld
pop
in
cmpb
and
sarl
jle
adc
inc
pop
fsubs
xchg
fs
pop
popa
out
mov
xchg
ror
std
jne
fsubr
mov
cmc
in
idivb
movsb
insb
xor
pop
mov
pushf
stos
and
insb
xchg
push
cmpl
shl
test
push
xorl
adc
xchg
jno
pop
mov
faddl
mov
sub
xor
dec
or
push
dec
add
jecxz
mov
arpl
aad
adc
mov
mov
lcall
mov
cli
mov
leave
xchg
xchg
clc
movsb
sub
jle
movd
push
or
mov
rcrl
hlt
lcall
jne
dec
into
push
push
jmp
xchg
push
mov
xchg
cmpsb
aaa
nop
fs
xchg
push
mov
scas
mov
add
mov
fisttpll
icebp
push
rcl
dec
lret
sbb
adc
out
pushf
inc
fwait
dec
movzbl
adc
add
movsb
aaa
xlat
pop
pop
rcr
fidivrl
sbb
inc
stc
dec
jae
out
mov
or
fwait
sbb
cltd
inc
movsl
pop
jmp
jae
pop
dec
sub
mov
and
sub
or
iret
in
mov
loopne
inc
sar
iret
cmpsb
add
sub
push
mov
ret
add
xor
call
lret
lahf
sub
pop
leave
rorl
in
ja
loope
mov
repz
pcmpgtw
leave
int
sbb
xorb
lret
ja
fsubrs
movb
testl
push
push
jbe
out
dec
rol
push
and
jp
lahf
pop
mov
pop
mov
sbbb
dec
mov
dec
xor
xchg
sbb
mov
aas
or
je
outsb
add
adc
inc
lods
addr16
mov
inc
mov
sarl
xchg
inc
cld
cli
and
pop
arpl
mov
lret
inc
clc
mov
in
or
jg
inc
scas
je
fstpl
js
push
lock
ss
fildl
sub
ja
lods
mov
push
mov
test
push
es
imul
insb
or
add
lock
pop
psubd
lds
mov
mov
lea
mov
and
rcr
dec
xchg
pop
mov
and
shll
fs
mov
in
fstpt
ljmp
cmp
mov
popa
pop
ret
adc
out
mov
adc
lods
mov
out
cwtl
and
pop
mov
sbb
pop
push
scas
pop
scas
cli
xor
stos
mov
pop
adc
mov
test
mov
mov
add
mov
inc
notl
arpl
int3
cwtl
dec
cmp
imul
xchg
int
nop
push
test
or
shl
xor
cmp
shl
ret
xchg
push
test
mov
push
enter
sbb
aas
jle
es
sub
in
inc
xchg
xor
xchg
cld
xor
ljmp
push
jmp
mov
dec
lods
sbb
sahf
stos
push
jge
mov
sub
out
mov
mov
cmp
je
ss
dec
jge
aam
mov
ja
fwait
sar
jle
or
imul
sbb
cmp
jmp
int3
lock
pushf
je
inc
mov
negl
add
hlt
mov
sbb
mov
xchg
xchg
add
or
sub
pop
sbb
pop
mov
nop
pop
and
jb,pt
imull
je
cmp
and
loop
insb
push
subb
mov
jo
xchg
sub
xor
mov
jle
add
dec
inc
sahf
mov
sbb
fstps
loopne
inc
subb
ret
adc
scas
add
jge
std
mov
dec
xchg
pop
test
jge
dec
adc
cmp
neg
add
push
out
int
inc
inc
jge
shll
inc
push
popl
jge
mov
and
ss
push
xchg
dec
and
jns
adc
ret
arpl
cld
bound
mov
sbb
flds
adc
add
leave
add
in
lock
rcr
subb
clc
mov
pop
icebp
jnp
sub
ljmp
xchg
pop
ljmp
fidivl
jb
pushf
cmp
scas
xor
dec
xor
sar
sbb
dec
push
jbe
roll
add
repz
sub
das
push
out
fwait
cmp
daa
adc
sub
mov
orb
adc
xchg
pop
cmp
outsb
fidivl
dec
scas
loop
inc
ja
mov
jb
or
data16
xchg
push
push
fstl
sub
dec
mov
lahf
icebp
xchg
movsl
inc
loope
stos
repnz
mov
or
and
iret
pop
pop
adc
inc
ret
push
jge
in
cmpsl
sub
jnp
and
xchg
xchg
mov
pop
sbb
push
sahf
jmp
push
leave
movsb
mov
fldenv
push
insb
sti
loopne
nop
popf
and
pop
dec
roll
adc
loopne
addl
cmp
adc
xchg
jp
add
scas
adc
jecxz
daa
rcll
sbb
popa
mov
mov
aaa
mov
sbb
dec
jge
insb
add
idivl
lret
and
mov
dec
dec
and
nop
mov
pop
and
shlb
ds
mull
sbb
insb
imul
cmp
jg
inc
je
icebp
inc
lahf
adc
push
fmuls
jecxz,pt
xchg
call
sbb
ficoms
fmul
jl
pop
icebp
testb
mov
ss
neg
mov
dec
loopne
ljmp
sar
xor
push
and
push
fdivr
cld
test
addl
arpl
fwait
leave
jno
mov
add
mov
lret
cwtl
lods
je
dec
add
scas
out
xor
or
sbb
test
test
mov
xor
and
adc
add
hlt
sub
cmp
or
sbb
test
test
mov
xor
and
adc
add
hlt
sub
cmp
or
sbb
test
test
mov
xor
and
adc
sub
cmp
or
sbb
push
add
mov
adc
mov
pusha
lods
pop
in
aaa
cld
daa
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
call
push
push
pushl
push
push
call
call
mov
leave
ret
xor
ja
inc
xchg
push
pop
rclb
mov
pop
xor
add
adc
arpl
push
xchg
mov
inc
xchg
push
loop
repnz
ret
jb
out
mull
adc
jb
inc
xchg
mov
inc
xchg
push
loop
repnz
ret
pop
and
xor
arpl
sbb
sub
xor
rcr
cmp
adc
pushf
inc
pushf
outsb
cs
adc
addr16
imull
rcr
jecxz
std
mov
push
test
ret
in
dec
aas
stos
daa
ja
mov
xchg
pause
out
js
dec
fsubl
notb
sub
pop
mov
rorl
pop
gs
loop
fidivs
and
shl
xor
hlt
or
add
push
xorb
xchg
pop
cmpsl
dec
mov
mov
cli
fadd
push
rclb
dec
sbb
push
cmp
xlat
xor
sbb
pop
ds
or
pop
pop
add
mov
fucom
in
ja
lahf
sub
mov
out
xchg
std
addr16
addb
loop
repnz
ret
pop
and
xor
add
adc
bound
push
rcl
testb
push
mov
bound
out
insl
xchg
jbe
push
sarl
lock
cmc
es
or
sbb
pminub
fs
jb
push
stos
cmp
pop
test
ja
sub
add
adc
dec
ret
aam
pushf
and
and
aaa
ret
pop
and
xor
add
adc
bound
push
xchg
mov
inc
xchg
push
loop
repnz
ret
pop
and
xor
add
adc
bound
push
xchg
mov
sub
nop
xchg
rcl
cwtl
cmp
push
lods
std
test
outsb
movsb
mov
repz
mov
sti
in
xor
ds
popf
popf
inc
inc
adc
sbb
nop
mov
movsl
outsl
movsb
jecxz
and
sub
pop
test
fs
cmp
and
jp
mov
cmp
fsubr
daa
xchg
pop
sub
pop
ds
xchg
loop
adc
inc
popf
add
push
dec
add
adc
xchg
sti
lds
shlb
imul
imul
mov
push
xchg
clc
out
ficompl
mov
inc
mov
jge
in
jle
push
fimull
popa
aad
or
fldenv
inc
dec
lds
lea
cs
lcall
dec
xchg
cmp
andl
push
ja
pushf
stos
mov
in
dec
cmp
fcompl
push
and
and
xchg
or
jns
adcl
divb
lcall
jl
or
mov
inc
fiadds
outsb
mov
and
xorl
or
jne
repz
cmp
cwtl
sbb
xchg
call
push
mov
jmp
cwtl
dec
cmp
lret
sbb
jg
inc
je
mov
stc
ficoms
mov
popa
mov
mov
cli
cltd
pop
outsl
lahf
add
mov
mov
shlb
push
and
push
or
fldenv
inc
stos
cltd
and
std
stc
aas
push
push
push
mov
out
test
fucomp
mov
sub
movsb
cmp
pop
cmp
push
stc
adc
jbe
pop
movntps
jecxz
gs
jg
mov
cltd
std
dec
mov
cs
mov
or
push
addr16
insl
mov
int3
sub
inc
fwait
cld
hlt
pop
mov
push
push
inc
aaa
rcrb
jecxz
cwtl
popl
loop
in
push
pushf
mov
xor
les
std
push
cmp
mov
fsubr
mov
lahf
ss
ficoms
fsubrl
add
jb
insb
fwait
or
leave
stos
cmp
lock
or
add
xchg
cmp
daa
test
popf
push
ja
call
orl
inc
pop
inc
and
mov
idiv
xchg
jg
sub
and
jno
mov
das
adc
xchg
lret
data16
sub
sti
add
test
cltd
or
cld
cli
in
fimull
cmp
stos
xor
sti
mov
enter
scas
or
inc
inc
fisubl
jp
fstl
call
dec
dec
xchg
das
mov
jb
js
pop
mov
inc
nop
testl
jp
pop
mov
insl
out
js
shrl
out
outsl
and
mov
add
mov
ja
pop
daa
dec
imul
jmp
inc
adc
pop
jp
xsha1
cmpsb
dec
mov
leave
cmp
cltd
and
movsb
repnz
lahf
addb
push
add
scas
jns
xor
jle
fs
lret
es
cmpsb
fistl
testl
xchg
add
sub
pop
out
movb
aad
daa
fldcw
sbb
push
add
xor
insb
jo
cmp
push
push
jmp
xor
and
insb
movsl
push
sub
int3
xchg
add
push
scas
es
in
mov
cmp
sub
xor
negl
sbb
sub
or
add
push
mov
sti
and
jbe
popf
les
pop
push
stc
xor
insl
push
ds
es
int
cmp
adc
mov
or
sti
dec
fistl
rcr
or
xchg
inc
xchg
cli
pop
dec
aam
jno
pop
mov
mov
adc
aas
lret
mov
test
push
xor
mov
ljmp
or
in
xor
cmc
sarb
mov
pop
nop
out
pushf
ljmp
fdivs
ficoml
jns
xor
out
xchg
mov
cmp
add
sbb
or
shrl
mov
cli
call
xor
bound
lods
jns
dec
mov
dec
push
loopne
movsl
es
cltd
cwtl
es
adc
fistpl
lods
mov
out
mov
inc
sbb
push
ss
lods
scas
push
loopne
mov
test
in
dec
jl
fcmovne
mov
push
sbb
xchg
sbb
inc
push
jmp
mov
je
adc
or
mov
xor
movsb
std
cmpb
xor
xor
or
xchg
pop
sub
fistl
lock
cltd
mov
cmpsb
loopne
inc
out
fidivs
mov
jo
imul
jnp
pop
adc
cmp
sbb
sub
lds
mov
xlat
ret
adc
sbb
xchg
nop
jns
in
sub
pop
cli
fstpt
jb
addb
or
imul
fidivrs
decb
insb
xchg
inc
add
nop
cmpb
pop
into
cmp
dec
adc
mov
fnstenv
iret
int
ja
dec
test
test
loop
jg
or
outsl
adc
mov
hlt
addb
cs
mov
add
aas
mov
pop
fidivl
inc
mov
adc
lcall
lret
fs
shrl
mov
stc
push
fsts
testb
ds
inc
mov
stos
enter
flds
mov
daa
leave
xchg
out
out
mov
cmpsb
pop
push
inc
lcall
cltd
retw
dec
test
xchg
bswap
mull
lea
adc
ja
cli
or
sub
lahf
bound
or
lret
adc
subb
imul
xchg
fiaddl
sub
mov
gs
imul
mov
lea
jecxz
add
dec
das
push
inc
push
into
dec
push
mov
rolb
xor
leave
lods
xchg
lods
add
and
jno
push
push
in
adc
notb
mov
mov
ja
mov
mov
lret
adc
mov
sub
add
insl
mov
loopne
pop
rcrl
ret
lods
out
gs
cld
mov
mov
push
push
rclb
dec
and
mov
jp
jl
adc
cwtl
fisubs
loopne
push
cmpsl
in
ja
mov
xlat
adc
jg
adc
int3
pop
push
rorl
lock
xchg
daa
loope
mov
das
jne
push
xor
and
movsb
inc
mov
add
mov
fistps
loopne
sbb
cld
cmc
ret
mov
push
aaa
and
mov
jo
mov
xchg
pop
sub
idiv
mov
pop
aaa
pop
push
cmp
jae
stc
adc
push
movl
in
jo
cs
push
push
arpl
into
add
jbe
lods
inc
jmp
jno
sbb
lcallw
mov
lds
ljmp
daa
jmp
scas
lret
push
test
push
jb
aam
xchg
jo
daa
fs
jmp
call
mov
cmc
xchg
push
or
cmp
pop
popa
mov
mov
mov
popl
add
and
cmpsl
stos
and
mov
lret
in
ja
and
jecxz
pusha
hlt
lock
mov
cmp
clc
mov
lods
arpl
js
jl
dec
mov
cmpsl
mov
jmp
sbb
lcall
adc
jecxz
cs
pusha
sti
jo
fdiv
dec
push
les
jbe
push
js
sub
dec
fcompl
ds
mov
ja
insb
cli
ljmp
sbbl
fidivl
jmp
out
mov
ds
sbb
or
outsl
sbb
scas
mov
or
bound
adc
pop
outsb
insb
mov
repnz
lock
push
sbb
out
xchg
mov
add
ret
cmp
cld
sub
jae
stos
push
fsub
repz
arpl
out
push
stos
shl
fisubs
adc
and
mov
repnz
test
cmp
nop
cs
jge
sub
jae
pop
mov
jg
jmp
lods
fdivl
sahf
lahf
negl
xchg
pusha
xor
sbb
les
push
ror
mov
or
xchg
loop
mov
dec
out
and
inc
inc
nop
jo
sbbl
sahf
pop
dec
mov
lea
dec
mov
into
sub
mov
dec
je
es
outsb
xor
inc
fmul
popa
cld
ror
add
lods
dec
sub
cmp
pop
inc
clc
aaa
jmp
xor
aaa
or
fiaddl
cli
pop
jle
fbstp
aad
mov
jbe
xchg
inc
fsubrs
roll
in
mov
mov
push
cmc
stos
push
in
xor
jns
fnstsw
or
jg
dec
pop
scas
mov
mov
or
xchg
in
and
aas
sub
adc
cmp
mov
push
cmp
jmp
jle
jae
adc
scas
sbb
xor
xor
cld
xchg
aad
shll
les
insb
pop
push
dec
sti
sbb
rorl
sbb
fsub
push
xor
dec
outsb
dec
aaa
mov
adc
mov
sub
jo
mov
not
jp
inc
test
or
mov
mov
mov
movsl
adc
or
test
sub
jecxz
lods
mul
movb
sbb
xor
jp
jae
cmp
test
rep
hlt
push
out
cmpsl
pop
adc
sbb
cmp
sarl
rcrl
push
mov
pop
mov
into
cmpsb
lds
stos
popa
in
xchg
inc
and
mov
xor
addl
ljmp
and
or
adc
add
cs
cltd
push
lcall
fs
or
clc
aad
imul
lret
jge
gs
movsb
and
sub
jmp
pop
mov
jle
outsb
imulb
inc
inc
sarb
in
jae
loop
imul
jg
inc
jnp
pop
inc
dec
add
jg
int3
push
gs
inc
cltd
aam
movsl
sub
cs
mov
mov
xchg
das
dec
lods
mov
test
sub
lahf
or
leave
xchg
inc
push
ret
inc
mov
sub
push
dec
jle
jg
add
dec
mov
pop
ljmp
subl
cmp
popf
inc
pop
mov
dec
loope
push
cmc
insb
mov
jg
lods
enter
cmpsl
jecxz
pusha
push
adc
aad
mov
ljmp
inc
loope
movzbl
dec
push
in
stc
cmp
lret
mul
mov
sub
or
cmp
pop
ja
pusha
fcompl
xchg
cmpsb
ja
jns
sub
jg
pop
nop
insl
movsl
sbb
adc
lcall
or
imul
notb
xchg
adc
add
push
xor
cld
mov
mov
pop
cmpsb
and
jo
mov
or
and
mov
and
lcall
aas
xor
out
jle
lods
and
cs
test
mov
xor
inc
mov
mov
in
adc
dec
por
cs
push
pop
mov
and
fs
push
mov
in
sub
notl
xchg
shl
sbb
ja
and
xchg
and
xchg
fsubrl
add
jp
push
dec
push
popa
ja
lods
xchg
std
xchg
jmp
inc
cs
lcall
test
arpl
loope
mov
cwtl
jae
lea
cld
loop
add
insl
and
fidivrl
jle
loopne
je
cmpsb
push
addr16
dec
lret
inc
dec
mov
xchg
and
push
sbb
leave
shrl
filds
or
in
cmp
imul
push
push
or
sbb
cmc
or
rorb
fadd
cli
nop
push
in
shr
cmp
mov
and
push
stos
pop
xchg
movsb
pop
inc
aad
sub
inc
pop
insb
std
cmp
sahf
xor
cmc
sbb
add
les
pop
insb
inc
imul
pushf
cmpl
int
cld
test
out
aad
or
roll
xchg
mov
imul
jle
test
fs
lock
scas
frstor
pop
dec
jbe
push
out
in
test
lods
push
pop
dec
repz
test
or
enter
jmp
lahf
out
cmp
out
ror
rorb
pop
cld
ss
push
mov
mov
sub
out
cmpsl
xchg
out
xchg
sar
stos
add
call
add
xor
push
xchg
notb
lds
stc
or
sarb
inc
popa
push
cltd
mov
fisttpll
jae
sbb
add
ja
sbb
outsb
mov
push
mov
inc
outsb
incl
pop
movsb
mov
mov
addr16
cld
cmp
ds
cmp
sub
push
popf
es
dec
push
rcr
mov
cmp
push
adc
mov
fnstsw
sub
mov
or
adc
fs
add
scas
ds
xchg
adc
in
stos
pusha
jb
scas
or
cmpb
add
cmp
mov
and
inc
cmp
xor
add
pop
lret
call
repz
lahf
dec
mov
lret
xlat
pushf
cmp
in
mov
out
jbe
dec
lret
sbb
in
xchg
lret
lcall
xlat
dec
in
dec
aas
mov
cmp
test
and
xchg
pop
lcall
test
movsl
mov
icebp
sub
ficoml
cmp
in
mov
jne
jne
lahf
lods
jp
add
ss
mov
nop
cmp
out
sbb
insl
jge
int
ss
jge
sbb
imul
lcall
inc
xor
nop
mov
gs
add
jnp
adc
cmp
std
or
cmp
shl
mov
shll
sbb
sti
fsubs
test
dec
xchg
je
pop
lcall
cmp
xor
xchg
dec
mov
in
inc
jecxz
jbe
adc
testl
mov
rcll
inc
xchg
mov
xchg
fdiv
adc
mov
imul
bound
aas
repnz
pop
mov
jae
push
mul
aad
push
mov
and
jae
xchg
int3
inc
dec
mov
mov
mov
aad
sahf
ret
mov
insb
sti
loop
dec
scas
xchg
fcompl
mov
cltd
aad
popf
ljmp
out
into
jg
adc
mov
adc
daa
jbe
jo
movsb
in
bound
test
insb
sub
xlat
pop
or
pop
inc
fwait
and
data16
sbb
ret
xchg
out
xchg
lods
ds
xchg
pop
jbe
push
cmp
sbb
push
cwtl
mov
xchg
jge
repz
lods
xor
movsb
jmp
xchg
push
fwait
pop
das
push
cmp
jg
test
sbb
or
pop
aad
cld
push
lods
or
mov
inc
xor
lds
add
insl
lahf
idiv
es
lods
mov
inc
adc
mov
ljmp
mov
pushf
push
test
mov
cmpsl
and
ljmp
inc
popf
cmc
jbe
mov
ret
dec
lcall
mov
shrb
dec
aas
sti
and
ljmp
dec
repnz
xor
dec
xchg
shlb
arpl
or
nop
xchg
test
mov
add
mov
xor
and
add
cwtl
dec
aam
adc
clc
add
add
outsl
sub
mov
xor
mov
mov
pop
test
inc
sar
jp
cmp
push
cmp
mov
or
or
jmp
cmp
xchg
or
cli
mov
loope
dec
fldt
cmp
xchg
aad
andb
lcall
scas
adc
sub
loopne
aam
or
jb
fs
dec
lock
jbe
sbb
mov
lds
jae
jo
cmpsl
push
jae
daa
xor
aam
cmp
add
shl
cmp
jl
cmpsl
popf
rcrb
addr16
jle
jno
out
or
aam
dec
add
sbb
dec
jge
dec
popf
jns
add
insl
xchg
jl
stc
repnz
sub
sarl
adc
add
ja
jbe
lcall
mov
and
inc
sbbb
lret
add
adc
mov
aam
mov
pop
adc
data16
xchg
cmpsl
js
jns
aad
std
aas
mov
aam
xchg
mov
or
and
rcrb
mov
mov
xor
push
or
inc
dec
mov
mov
lret
push
xor
test
andl
push
mov
pop
into
jecxz
inc
jg
cli
sbb
and
pushf
int3
sbb
inc
movsb
divb
int3
pop
fldenv
pop
popf
pop
xor
pop
outsb
xor
inc
das
ljmp
pop
sub
das
sbb
xor
xor
add
ret
dec
add
mov
les
jl
push
in
jno
sbb
sti
into
or
lcall
mov
das
aam
nop
or
dec
xor
dec
mov
cmc
sub
inc
jns
popa
out
aam
bound
dec
mov
lea
push
ss
pop
mov
cld
nop
std
sbb
outsl
pushf
jb
push
adc
arpl
inc
stc
push
lock
mov
fdivr
loopne
or
push
push
xor
in
pop
movsb
xchg
mov
pop
aad
pop
pop
inc
push
rcrb
cmp
test
lock
jnp
fst
icebp
repz
aas
into
imulb
movsl
fnsave
fisubs
jae
rcll
xchg
jge
aam
fimull
loop
sbbl
loopne
shll
out
push
mov
aad
pop
stos
push
icebp
bound
mov
and
fsubrl
add
xchg
and
cmpsb
fldt
mov
scas
mov
das
add
mov
loope
test
ret
imul
scas
lds
pusha
out
shl
loop
jp
adc
movsb
pop
dec
das
fnstsw
out
sbb
push
mov
sbb
adc
xor
ret
loop
sbb
scas
pop
in
mov
cltd
inc
add
stc
int
ficoml
adcl
push
adc
sbb
lods
add
shlb
mov
aad
mov
mov
aad
test
test
pushf
out
lahf
mov
out
dec
sbb
xor
in
out
fidivrs
xchg
cmp
movsl
pop
mov
mov
fnstcw
les
mov
movsl
jecxz
pop
mov
jp
repnz
pop
int
xchg
push
stos
cmp
inc
out
pusha
push
nop
sbb
in
cltd
into
inc
mov
rorb
les
sahf
fstpt
scas
iret
push
cmp
sar
push
bound
xchg
dec
push
movsb
mull
push
int
lods
xchg
loope
stos
pusha
jl
mov
mov
cmc
inc
pusha
ret
mov
movb
mov
jl
jmp
and
pop
sub
lods
push
fwait
push
jecxz
sbb
rcll
loopne
xor
out
out
add
inc
bound
ret
daa
inc
push
adc
jge
outsb
imul
push
mov
imul
cwtl
xor
inc
lea
mov
dec
xor
loop
mulps
lock
in
dec
mov
xchg
cmc
push
push
xchg
call
jmp
add
inc
sbb
jnp
push
cmp
fists
mov
pop
clc
fadds
dec
dec
out
fimuls
sub
sub
xor
and
mov
or
sub
in
outsl
jne
or
fidivrs
sbb
fstl
shlb
mov
popa
aas
pop
stc
or
call
pop
gs
and
mov
scas
cld
icebp
pop
cmpsl
mov
cmp
cmc
mov
out
rcrl
loopne
mov
dec
jb
call
inc
div
loope
shlb
ret
mov
mov
inc
sarl
sbbl
test
call
jmp
adc
inc
pop
mov
mov
push
and
insl
jmp
push
xor
sub
gs
cmp
jnp
inc
dec
push
fs
fisttpll
add
into
outsb
add
dec
mov
pop
lcall
lods
sarl
scas
lea
mov
cmp
cwtl
pop
ss
dec
push
jge
ljmp
loope
mov
aad
je
pop
push
popf
lahf
push
cmc
int3
roll
xchg
insl
test
js
pop
inc
clc
sbb
mov
lcall
mov
mov
jno
xchg
cmp
lret
push
cld
stc
dec
xor
push
jnp
cmp
shrb
lret
xorb
leave
lock
xor
sbb
add
jl
mov
dec
nop
xchg
sub
stos
jne
lahf
pop
aam
mov
div
shrb
or
inc
dec
dec
sub
inc
adc
xchg
inc
enter
cli
lret
scas
loop
test
sti
sbbb
mov
fistps
sbb
push
push
lods
test
in
sub
push
loope
mov
hlt
jle
lret
rcr
jl
jle
inc
data16
stc
rorb
sbb
push
cwtl
xchg
insb
rol
push
aaa
fistps
not
movsl
sahf
push
lahf
dec
mov
int3
jb
aaa
pop
fstpl
add
add
lahf
lds
inc
shl
ds
push
mov
jg
movsl
adc
movl
movsb
fsub
pop
rolb
int3
and
inc
bound
in
out
xchg
adc
inc
aaa
and
sub
out
mov
or
int
ss
adc
mov
addb
orb
sti
stc
cmp
push
lret
outsl
fisubrl
push
divl
rorl
arpl
stos
dec
jle
dec
fists
mov
bound
adcb
lcall
test
jo
data16
mov
jbe
sti
jae
lock
cld
dec
push
mov
sbb
xchg
inc
and
add
mov
pop
or
shl
ficoml
icebp
aam
mov
cltd
loop
enter
adc
push
push
mov
adc
ja
jle
in
xor
rcr
jb
xchg
add
ja
inc
xchg
push
loop
repnz
ret
pop
and
xor
add
adc
bound
push
xchg
mov
inc
xchg
push
loop
repnz
ret
pop
and
xor
add
adc
bound
push
xchg
mov
inc
xchg
push
loop
repnz
ret
pop
and
xor
add
adc
bound
push
xchg
mov
inc
xchg
push
loop
repnz
ret
xlat
and
xor
adc
mov
int3
int3
int3
int3
fisubs
roll
es
add
or
add
add
add
add
mov
add
add
add
gs
add
add
add
jne
and
jno
jl
out
add
mov
push
add
jl
sbb
mov
or
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
push
add
add
into
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
push
add
add
add
add
add
xchg
add
add
xor
arpl
dec
add
add
fiadds
sub
sbb
sub
pusha
add
mov
add
mov
add
sub
add
fadds
jl
sbb
add
jae
jl
test
movb
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
sub
adc
or
cmpsb
add
add
add
roll
add
add
add
add
add
add
add
mov
add
add
aas
add
mov
inc
add
pop
add
add
add
add
and
inc
add
fadds
stos
add
or
add
add
add
mov
add
pop
add
add
add
add
dec
add
mov
add
aaa
add
add
add
push
add
add
dec
add
add
add
cmpsb
add
add
add
add
adc
add
add
out
add
add
mov
mov
cltd
add
add
pop
add
add
add
or
testl
sub
add
push
add
add
push
add
add
add
add
pop
add
add
add
add
add
add
mov
cmp
aaa
add
add
add
add
addb
add
add
add
add
add
add
add
cmp
dec
add
jne
add
add
add
or
add
add
add
out
add
add
test
mov
mov
add
add
add
add
add
add
and
mov
add
inc
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
inc
add
pop
add
add
add
leave
add
add
add
mov
add
dec
add
add
mov
add
add
add
add
add
add
pop
add
add
call
add
push
add
add
jl
insl
add
add
add
push
add
add
add
dec
add
add
sbb
rolb
push
add
add
add
add
add
add
add
add
push
dec
pop
xor
addl
push
mov
or
mov
inc
loop
xchg
push
sub
je
push
les
divl
lds
stos
out
cmp
aad
inc
cmp
sbb
mov
lcall
daa
int
loop
pop
cmp
or
cmpsb
fsubrs
xchg
bound
cmpsl
in
sbb
mov
cltd
loopne
push
xchg
stos
mov
in
in
call
ljmp
xchg
jecxz,pt
iret
jne
ja
bound
cwtl
inc
push
out
xor
hlt
push
enter
insb
fs
daa
sbb
in
out
jl
js
nop
xor
sub
loopew
out
sbb
adc
fdiv
jae
cmp
scas
sbb
cli
aad
mov
movq
sbb
xorb
or
mov
subb
ret
lods
jae
scas
add
sahf
pop
mov
fs
jl
jmp
int
sub
push
arpl
repnz
xchg
inc
aaa
xor
mov
sbb
daa
nop
sbb
and
sbb
iret
lahf
imul
stos
adc
inc
push
push
scas
mov
aas
rcll
mov
loopne
inc
mov
clc
mov
xchg
sbb
js
mov
lock
pop
mov
mov
mov
cmpsb
jo
lret
iret
in
insl
cld
pop
add
mov
or
jns
std
jg
inc
lret
or
pop
cltd
js
dec
in
cmc
push
fisubs
cmpsb
cmp
sbb
fistpll
sbb
jg
aad
je
ffreep
mov
imul
add
cmpl
fcmovbe
es
mov
call
rol
stc
sub
push
mov
xlat
mov
jl
pop
imul
mov
adc
pushf
mov
je
mulb
xor
hlt
orb
rcrb
dec
pop
in
arpl
mov
mov
out
mov
jge
cmp
andb
xchg
dec
imul
orl
js
sbb
lods
aam
and
sarb
lret
in
pop
mov
repz
lock
adc
jnp
add
cmp
push
loopne
mov
nop
iret
push
lahf
and
add
mov
inc
negb
jnp
push
mov
jno
or
ret
xchg
jbe
adc
push
sbb
and
into
aam
in
and
jbe
and
pop
inc
and
enter
andl
dec
mov
pop
add
mov
sbb
into
push
inc
sbb
push
or
fwait
jl
or
adc
add
add
add
add
loop
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
push
add
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
add
add
add
add
add
cld
add
add
add
add
add
add
add
add
add
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
inc
add
add
add
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
fadds
add
clc
add
add
add
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
je
add
jl
add
test
add
add
pushf
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
rolb
add
add
add
add
add
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
daa
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
daa
add
fsubl
add
aam
add
int3
daa
add
les
add
mov
daa
add
lods
daa
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
sub
add
add
add
add
add
add
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
sub
add
sub
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
