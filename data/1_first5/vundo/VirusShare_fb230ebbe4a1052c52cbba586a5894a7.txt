push
mov
sub
mov
andl
andl
test
push
push
push
lea
jle
lea
mov
xor
cmp
jle
mov
mov
mov
cmp
jne
cmp
jge
mov
mov
cmp
jle
mov
mov
inc
cmp
jl
incl
mov
addl
cmp
jl
cmp
jge
xor
jmp
mov
sub
sub
inc
xor
dec
test
jle
lea
lea
lea
mov
mov
mov
sub
inc
add
add
dec
cmp
jl
sub
xor
inc
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
push
pushl
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
call
pushl
mov
call
push
push
pushl
call
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
xor
test
jle
push
lea
push
mov
cmp
je
inc
add
cmp
jl
pop
pop
cmp
jl
xor
jmp
test
jle
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
inc
xor
test
mov
jle
lea
mov
inc
add
cmp
jl
pop
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
pushl
pushl
jne
push
pushl
call
jmp
dec
push
call
pop
ret
int3
int3
int3
int3
int3
call
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
pushl
mov
pushl
mov
push
call
mov
mov
add
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
call
mov
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
dec
cltd
pop
mov
jns
mov
xchg
xor
enter
jmp
pop
fwait
dec
mov
cltd
pop
mov
jns
or
sbb
sub
cmp
cmp
sub
jns
imul
popa
test
xor
cmp
rcrb
cli
sub
pop
notb
and
ss
imul
sbb
call
lcall
adc
mov
adc
lds
leave
sbb
lods
arpl
notb
dec
mov
test
mov
outsb
lret
pop
mov
sbb
or
aas
je
mov
mov
pushf
mov
fcomps
leave
icebp
cmp
inc
in
neg
incl
lods
jbe
cltd
test
sbb
jbe
inc
cltd
movsb
notb
es
jmp
call
or
mov
pop
xchg
fidivl
pusha
sbb
dec
test
sbb
cltd
inc
mov
jns
push
leave
sub
and
rcrb
rorl
cmp
sub
jns
das
and
clc
or
mov
leave
imul
push
fisttpl
aam
es
cmp
push
icebp
or
gs
mov
jmp
cmp
sbb
cmp
add
jmp
leave
sub
cmp
leave
sbb
or
cmp
sub
jns
imul
jns
or
sbb
sub
cmp
leave
sbb
or
cmp
sub
jns
imul
or
sub
data16
out
std
nop
mov
addr16
and
sub
push
mov
xchg
xor
loopne
push
ja
fsub
adc
in
jne
movsl
inc
addr16
pop
mov
or
in
dec
insb
mov
aas
dec
test
mov
inc
lret
xorl
cmp
inc
inc
cmc
xor
mov
popf
cmp
and
or
mov
push
stos
lret
or
cmp
mov
call
pop
rolb
ja
dec
mov
jns
popf
in
pop
mov
inc
mov
jns
jns
aad
aas
or
sub
lock
sub
sarb
int
push
pop
fdivrp
pop
xchg
fsubrl
sub
push
xchg
xlat
and
pop
in
sbb
cs
xchg
cmp
adc
push
orb
inc
sbb
add
ror
ds
test
and
outsl
dec
insb
imul
xchg
out
imul
test
clc
das
clc
sub
push
in
sub
inc
cmp
clc
inc
notl
dec
add
xchg
idivl
ret
repnz
out
jnp
pop
lock
mov
jecxz
xor
dec
push
cmp
popl
aas
cs
xchg
dec
lock
test
or
aad
jns
loope
dec
mov
pop
adc
fstpl
add
xchg
and
insb
cmp
jg
loop
or
mov
xor
rclb
divb
sub
repnz
test
orl
jg
adc
push
mov
and
pop
mov
cmpsl
push
jae
loopne
data16
mov
mov
lea
lods
dec
arpl
xor
cmp
fs
in
inc
adc
int
add
in
daa
sbb
insl
imul
sbb
pop
sarb
inc
stos
in
adc
mov
lods
out
pop
in
bound
pop
inc
jno
sahf
push
sti
insl
push
in
rcrb
stos
inc
xor
push
int
xchg
popa
jg
rcrb
sbb
adc
cltd
out
repnz
mov
ds
xor
lds
dec
adc
mov
insl
sbb
mov
mov
mov
sbb
adc
int
cli
jl
and
orb
test
adc
and
test
push
jnp
cltd
push
es
jmp
sarb
in
pop
imul
shl
je
or
jmp
xchg
test
ret
movsl
int3
dec
movsb
or
arpl
adc
sbb
add
lea
jl
insl
adc
mov
adc
pop
es
in
mov
clc
and
icebp
dec
iret
mov
decl
cwtl
movsb
sbb
test
jb
lock
xor
xchg
mov
outsb
sarb
mov
int3
jne
ljmp
jb
dec
mov
jno
pop
push
divl
inc
mov
pop
popf
push
dec
inc
wrmsr
and
jmp
das
add
imulb
sub
insb
and
mov
movsb
arpl
pop
imul
dec
cmpl
test
mov
mov
or
lea
ret
stc
rolb
lock
ret
sub
mov
xchg
adc
loop
cltd
call
add
rcrb
xchg
arpl
insl
ret
cmc
mov
xor
roll
mov
aam
js
shrb
loope
or
dec
push
cmpsb
xor
pop
mov
ret
movsb
pop
fwait
lds
jno
cmpsl
jge
aam
or
xor
mov
aas
mov
fbstp
xchg
testl
push
cwtl
fimuls
mov
pushw
aas
aas
andb
int
outsl
lret
xor
aas
gs
iret
cmp
mov
dec
nop
or
rolb
aam
or
iret
jmp
icebp
fcomip
inc
sbb
addl
addb
ret
repnz
imul
push
addl
mov
aas
cmpsb
iret
push
fwait
and
mov
or
or
xchg
cmp
or
xchg
jecxz
jno
adc
mov
pop
fisubrs
mov
inc
xor
mov
lds
pop
pop
inc
test
or
xchg
mov
mov
in
popa
xchg
xor
sub
push
imul
nop
pop
mov
mov
push
insb
or
jecxz
sbb
add
cmp
test
cltd
pop
out
add
faddl
movsl
push
sub
jno
add
jmp
ja
push
adc
test
call
ror
int3
pop
shr
adc
inc
dec
dec
cmp
and
rcll
mov
jbe
dec
aaa
xchg
not
mov
movsl
adc
aaa
push
mov
mov
iret
dec
inc
mov
cld
nop
xchg
lcall
inc
shlb
xchg
cld
or
cld
jb
xor
cmpsb
cmp
test
adc
lods
or
xor
push
daa
sti
sbb
push
pop
gs
inc
lock
out
pop
xor
pop
addr16
out
push
or
cld
xchg
cmp
and
fcomps
lea
sbb
mov
scas
mov
push
loope
int
pop
call
out
aaa
idivb
adc
jmp
mov
jnp
out
mov
push
pop
xchg
int
mov
outsb
push
add
pop
repz
negb
fucomi
pop
and
jl
jge
test
data16
loop
xchg
xor
xchg
psrlq
sbb
loop
enter
ss
xchg
in
sub
out
mov
rorb
sbb
sti
sar
jnp
std
dec
enter
lea
xor
paddusb
mov
out
pusha
add
push
jmp
jo
push
stc
xor
adc
scas
mov
push
dec
loop
adc
clc
dec
adc
es
rol
adc
mov
jae
out
mov
xchg
movl
and
add
push
inc
fidivs
push
or
ret
mov
repz
lock
lods
orl
jbe
adc
dec
and
push
fsubs
sbb
clc
mov
dec
sub
in
icebp
cli
dec
in
cwtl
int3
lods
and
mov
lds
test
pop
mov
cmp
das
enter
outsb
imul
arpl
aad
pop
mov
and
jmp
adc
sti
add
add
aas
or
push
mov
and
inc
loop
call
mulb
pop
and
test
mov
ret
adc
roll
pop
mov
fistpll
imul
in
sub
int
nopl
repnz
in
jb
lods
popa
sti
and
push
pop
cmp
dec
xor
std
outsl
js
adc
ret
out
lcall
divl
outsl
daa
in
push
std
insl
sub
jb
sbb
lds
or
je,pt
xchg
or
dec
cld
les
dec
mov
insb
mov
cmp
flds
lods
xchg
dec
loope
xchg
fimull
in
sbb
mov
ret
mov
inc
adc
lret
mov
dec
stos
mov
ret
mov
insb
lret
loope
ret
add
dec
test
aam
push
icebp
xchg
loopne
dec
fcmovu
int3
add
ret
xchg
shll
test
jge
fbstp
jne
mov
push
mov
and
imul
pop
lods
decb
dec
ret
pushf
xchg
rcll
xchg
jb
and
loopne
push
aas
pushf
xor
ljmp
pop
shl
xchg
fcmovbe
xchg
ds
insb
sub
fmull
stos
inc
xchg
push
inc
lock
add
adc
jmp
call
enter
or
out
mov
sbb
les
dec
sub
ja
add
aam
test
xor
sbb
mov
fdivrl
cmp
dec
add
cltd
ljmp
push
mov
clc
or
xchg
sub
fwait
jae
mov
jg
mov
fmulp
in
xchg
inc
scas
xchg
into
orb
adc
mov
insl
popf
mov
pop
jecxz
test
inc
lods
mov
fstl
pushf
push
or
push
jo
in
adc
dec
or
lods
adc
xor
daa
lret
xchg
xchg
dec
aaa
outsl
pop
dec
mov
push
cmp
add
out
shl
mov
icebp
repz
inc
mov
shll
hlt
jb
and
sub
inc
popa
push
subb
in
and
dec
rcrl
mov
add
stos
ljmp
or
in
cli
daa
sbb
cmp
sbb
leave
divl
out
jb
addr16
test
push
test
cmpsb
xlat
xchg
xorl
mov
popf
addr16
xor
cmp
scas
into
stos
jne
inc
adc
aas
and
jno
dec
mov
cmpsb
or
adc
sub
mov
das
int3
es
cmp
or
stos
pop
sbb
test
lods
in
mov
dec
cmpb
inc
mov
and
push
xchg
mov
cmp
inc
adc
adc
rorb
mov
xchg
scas
dec
mov
push
cmp
push
nop
jns
in
inc
test
mov
mov
out
std
adc
xor
mov
shl
cmpsb
add
cmp
sbb
out
lods
add
outsl
int3
cwtl
lret
repz
in
shll
test
or
mov
pop
nop
dec
sarl
and
pushf
pop
cli
sbb
lcall
std
loope
fdivrs
sahf
sbb
xchg
mov
xchg
popf
sbb
jp
sbb
xchg
bnd
subb
pushf
in
pop
xor
inc
push
pop
and
mov
mov
mov
and
mov
xchg
jmp
inc
ret
mov
into
xchg
in
adc
cmp
dec
fcoms
mov
mov
daa
mov
sti
lods
xor
mov
or
mov
jno
jmp
aas
popf
add
sub
adcl
cs
daa
cmp
aam
rcl
imul
inc
inc
lock
mov
mov
ljmp
pop
imul
mov
xor
pushf
pop
mov
mov
outsl
in
arpl
jle
push
push
push
mov
adc
fimull
xchg
scas
sub
shrl
fisttps
loopne
sahf
mov
repz
movsl
arpl
add
mov
add
push
mov
mov
ret
inc
push
jae
mov
jl
jns
or
imul
mov
rcr
inc
int3
xchg
stos
lea
jmp
sbb
mov
pop
add
jns
xchg
movb
cmp
sub
xchg
adc
dec
jno
or
insl
std
inc
add
jl
dec
call
fisubrs
adc
cld
in
inc
mov
mov
stc
cmpsl
and
fstl
aas
stos
movsl
mov
jle
jae
sti
inc
cmp
test
mov
sub
mov
mov
dec
in
int
sub
pop
ja
mov
fsub
pop
imul
mov
mov
pop
cmp
pop
imul
pop
jge
mov
sar
jle
int
ficoml
push
imull
and
movb
add
mov
xlat
fcmovu
popf
lea
mov
sar
arpl
push
jbe
xor
insb
and
shl
js
mov
mov
sub
pushf
push
cmp
add
xchg
popa
pop
test
mov
cmp
lods
stos
or
jmp
les
shll
xchg
and
lea
and
cmp
lods
pushf
sbbl
ds
add
pop
cmp
mov
in
push
xchg
lret
pop
mov
mov
popf
cltd
inc
inc
adc
jmp
leave
pop
inc
clc
adc
out
lock
inc
aas
push
or
mov
push
xlat
adc
sahf
xchg
lcall
mov
shll
into
sbb
jae
sbb
sub
pop
ficomps
test
rcll
inc
sub
inc
mov
jp
movsl
stos
ss
mov
pop
push
mov
nop
xchg
data16
jnp
shll
cltd
or
scas
push
js
add
in
stos
inc
jecxz
and
xchg
test
fs
adc
mov
dec
aaa
dec
outsb
push
or
lcall
sti
push
sub
cmc
cmp
push
pop
lods
pusha
cwtl
fwait
push
or
popa
leave
shlb
daa
out
and
inc
push
js
or
ret
hlt
dec
pushf
jle
repz
out
xchg
or
mov
push
push
xchg
xchg
flds
dec
cltd
fstp
std
cs
sub
sti
aam
sti
xlat
cltd
dec
leave
aam
dec
add
dec
xchg
sub
sub
cltd
stos
imul
sbb
or
or
add
dec
push
and
push
jle
jne
cmp
or
orl
cmp
scas
rorb
mov
sbb
push
out
jns
es
mov
pop
in
or
in
andl
mov
iret
adc
pop
and
stc
pop
bound
xchg
push
sbb
negb
xchg
xchg
cmp
popa
sub
pop
mov
fcomps
push
add
sbb
pop
add
testl
fbstp
icebp
inc
mov
mov
addl
xchg
fisubrs
andl
daa
iret
ret
or
pop
mov
cli
dec
pop
or
repz
pop
pushf
lods
jae
xor
psrlq
sbb
lret
subl
cmp
insl
add
int
push
xchg
jbe
fwait
addb
ljmp
push
mov
pop
xchg
xchg
das
or
pop
repz
sbb
jmp
add
and
stos
dec
es
and
jl
lods
push
jecxz
adc
insb
jmp
xor
push
insl
lahf
in
pop
scas
int
dec
mov
adc
rol
xchg
xor
xchg
insb
orb
mov
sub
stc
jge
cmp
cmp
sbb
xchg
orl
inc
pop
xor
mov
lahf
mov
lret
and
xor
stc
ds
inc
in
and
test
fidivrs
ret
and
push
xchg
inc
mov
add
rorb
mov
std
and
fcoms
push
daa
jmp
or
jp
mov
imul
dec
cmp
fcoms
in
into
hlt
mov
rorl
cmp
lock
pop
cltd
inc
inc
jmp
shr
xor
fisubrs
sbb
and
xchg
adc
ror
mov
jge
rclb
xchg
cmp
cmp
mov
jle
add
push
lret
dec
std
add
mov
cmpsl
inc
loopne
jge
stos
sbb
pushf
mov
inc
push
or
jbe
adc
cmc
pusha
cmp
inc
hlt
stos
dec
pop
adc
bound
xchg
fiaddl
mov
lcall
sub
outsl
sbbl
pusha
xchg
inc
push
enter
repz
lret
orb
xchg
jb
mov
xlat
sub
mov
and
outsl
loop
movb
pop
cmp
lret
mov
mov
arpl
inc
dec
push
jle
loop
inc
push
out
ret
add
cmp
adc
movsb
jecxz
popf
outsb
sbb
xlat
xor
cld
ret
sub
push
mov
cmp
pop
sbb
push
or
dec
mov
xchg
and
in
xchg
daa
packssdw
enter
outsl
cltd
mov
add
adc
inc
dec
cmp
lea
arpl
sti
jge
mov
in
and
inc
dec
clc
fldl
add
pop
xchg
daa
push
sarb
and
lahf
and
int3
xor
push
lock
lods
js
mov
dec
inc
xchg
and
inc
in
mov
movsb
jbe
idivl
cwtl
jge
sub
jns
cmpsl
jb
cltd
and
and
addl
in
jmp
ja
into
arpl
lcall
loope,pn
out
das
sub
std
dec
push
rclb
pop
push
sbb
clc
loope
jbe
mov
imul
sbb
jmp
adc
jno
and
leave
bound
rolb
mov
add
mov
lret
or
lret
fsubp
cmc
jecxz
jnp
push
mov
mov
lods
aam
out
shll
in
jne
cmp
jp
pushf
jns
popf
cs
add
mov
into
cmpsb
jp
and
mov
dec
xchg
and
jns
mov
cmp
imul
mov
arpl
pop
scas
fcmovnu
jge
jle
jl
testl
testb
das
mov
sub
out
xor
arpl
data16
mov
xchg
sbb
jp
loop
jmp
adc
in
ds
loop
mov
adc
shlb
cmpsb
mov
shrb
arpl
movsb
dec
in
loopne
dec
and
dec
fidivl
mov
mov
push
push
and
lods
add
and
mov
mov
mov
push
lcall
pushf
std
aaa
out
hlt
xchg
sbb
mov
mov
out
inc
xchg
or
aas
sub
mov
enter
leave
mov
lods
inc
sub
test
pop
mov
jecxz
cmp
jp
aas
xor
roll
inc
add
pushf
jge
ficomps
push
pushf
ljmp
xchg
mov
pop
add
imul
mov
lods
inc
into
loopne
dec
dec
lods
iret
jecxz
cmp
xor
lahf
test
ja
add
pop
in
and
cmpsb
mov
cld
lods
fstpt
inc
push
add
dec
sub
pop
mov
mov
je
out
inc
decl
inc
out
pop
sahf
push
mov
test
cmp
nop
mov
loop
cmp
lcall
int
jae
dec
xor
call
cmp
js
push
lock
negl
cwtl
call
outsb
ret
les
xorb
dec
sub
jb
mov
cmp
sub
pop
dec
xchg
pop
sub
jl
lods
aaa
nop
scas
xlat
ret
adc
mov
pop
test
jg
pusha
or
xchg
mov
xchg
cli
mov
test
inc
pop
add
pop
push
dec
ja
jnp
stc
popf
cmpsl
xor
push
push
enter
lret
aam
pusha
mov
push
rcrl
test
mov
dec
mov
dec
ror
sbb
movsb
jl
fnstenv
movsl
mov
or
jae
pushf
mov
stc
push
mov
push
ss
in
aas
cmp
shrb
jo
shl
mov
outsl
in
mov
xchg
decb
or
test
shrb
or
enter
xor
data16
mov
cmp
mov
rol
sar
fsubrs
xor
sbb
pop
lcall
xor
xor
or
dec
popa
cli
jbe
insb
enter
push
mov
outsb
inc
or
mov
lret
les
mov
movsl
cmp
and
mov
negl
sbb
rol
addr16
jecxz
xchg
sub
in
stos
fcoml
push
fistps
nop
cmc
dec
dec
pop
int3
fwait
xchg
or
ljmp
js
cmp
mov
mov
ficoms
pop
add
mov
bound
pop
imul
loope
jbe
je
inc
mov
ffreep
bound
cmp
xor
scas
enter
sahf
hlt
mov
xor
nop
add
jnp
mov
push
mov
stos
subl
pusha
xchg
daa
stos
inc
enter
push
andb
jge
mov
mov
mov
xor
mov
mov
iret
xor
xchg
and
push
ljmp
cwtl
mov
out
scas
dec
inc
and
pusha
mov
insb
pusha
std
fidivrs
fstps
out
in
jg
mov
insl
jno
push
jecxz
or
dec
xchg
pusha
icebp
addr16
inc
lds
sbb
push
cmpsl
adc
imul
mov
xchg
xchg
shrl
ret
jnp
addr16
adc
ret
pop
inc
mov
test
cld
mov
and
or
mov
lahf
fimuls
jbe
adc
mov
mov
cwtl
sahf
mov
outsb
mov
push
inc
dec
and
stos
adc
jbe
out
mov
mov
xchg
sbb
cmp
jbe
inc
push
dec
loopne
mov
enter
mov
push
cmp
mov
sbb
ja
outsl
test
inc
lock
aas
test
mov
arpl
cmp
fnstsw
lret
fldl2t
xchg
sbbb
aaa
mov
pop
stos
sub
ret
cmc
jle
fsubrl
cmpsb
dec
fnsave
pop
xchg
mov
mov
jns
or
sbb
sub
cmp
leave
sbb
or
cmp
sub
jns
imul
jns
or
sbb
sub
cmp
leave
sbb
or
cmp
sub
jns
imul
jns
or
sbb
sub
cmp
leave
sbb
or
cmp
sub
jns
imul
jns
or
sbb
test
sbb
mov
rcll
mov
xchg
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
xor
push
adc
ja
push
adc
je
aaa
mov
mov
div
xchg
xlat
shll
and
add
pop
arpl
push
daa
inc
aaa
mov
mov
div
xchg
xchg
shll
and
add
pop
arpl
push
daa
inc
aaa
mov
mov
negl
ret
jp
and
pusha
add
xor
arpl
fsubs
aam
fstpt
pop
out
mov
pop
sub
jle
dec
lahf
pop
out
mov
pop
sub
mov
out
testb
sbb
cmpsl
cmp
sbb
push
jb
and
sub
aaa
push
xchg
mov
add
data16
jae
lods
into
sub
hlt
mov
push
sbb
rcrl
xchg
int3
ficoml
jns
cmp
push
fadds
mov
sbb
les
loope
xor
sbb
mov
mov
mov
cmp
imul
test
mov
mov
inc
and
add
pop
arpl
push
daa
inc
aaa
mov
mov
div
xchg
xchg
shll
dec
test
xor
push
add
stos
cmpsl
mov
xchg
ljmp
xor
push
sbb
xor
dec
inc
aaa
andb
xchg
call
ret
fstps
inc
and
add
jae
arpl
push
daa
inc
aaa
mov
mov
div
xchg
xchg
shll
and
add
pop
arpl
push
daa
inc
aaa
mov
mov
div
xchg
xchg
shll
xchg
xchg
daa
cmpsb
test
mov
cmp
mov
push
xchg
xor
fcoml
psrlw
aas
pop
push
int3
add
jg
imul
cmp
outsl
mov
xor
lods
push
xchg
enter
and
icebp
and
push
mov
mov
ds
arpl
jge
inc
cwtl
push
and
or
xchg
inc
mov
aad
xchg
dec
mov
cmp
pop
push
vphaddbq
sbb
push
leave
add
packsswb
hlt
mov
sub
lock
mov
out
aam
mov
xor
stos
and
sbb
aaa
adc
int
pavgb
xchg
push
cmp
aad
div
fildll
shll
stos
push
ficoml
movsl
out
jne
cltd
cld
mov
les
adcl
adc
sub
or
push
xchg
xchg
pcmpeqw
imul
ja
mov
mov
and
push
dec
pop
inc
push
cmpl
imul
js
test
js
ja
inc
lahf
and
mov
mov
jl
or
inc
mov
pusha
fs
outsb
jno
out
mov
push
mov
popf
jbe
sbbb
mov
mov
test
push
insl
insl
jae
mov
mov
shlb
clc
jge
frstor
shrb
inc
inc
inc
pop
out
div
es
call
xchg
dec
add
xchg
pop
jl
sub
pop
push
jge
mov
fistpl
cli
cmp
lods
xchg
out
rorb
push
add
dec
push
and
pop
push
jo
hlt
inc
sahf
sbb
mov
xor
mov
xchg
add
mov
sbb
std
sbb
popa
lods
arpl
aam
mov
mov
pop
jbe
sub
inc
cmp
inc
idivl
fucomip
adc
js
enterw
or
test
and
xor
and
sti
jno
push
movsl
jbe
mov
dec
jge
xor
gs
cli
inc
adc
dec
xor
pop
mov
xchg
fdivs
adc
aad
sbb
lret
imul
cmp
fistps
adc
or
fisttpll
sbb
jne
in
or
mov
divb
xor
or
push
enter
xrelease
je
and
pop
dec
pusha
imul
cmp
mov
shr
imul
and
push
fadds
or
mov
sti
stos
or
repnz
mov
lret
loopne
mov
test
push
fisubrs
dec
inc
mov
rcr
cwtl
jns
cmp
dec
adcl
mov
adc
pop
scas
hlt
cld
push
pop
cmp
out
test
dec
out
jge
out
and
pusha
test
bound
mov
dec
fstpl
in
popf
lods
xchg
adc
cmc
fadds
out
push
nop
push
pop
sti
mov
jae
inc
rclb
iret
lret
xchg
push
out
fs
js
sub
push
xchg
and
pop
jecxz
inc
lcall
dec
adc
cmp
fdivs
push
dec
push
ret
rolb
mov
mov
mov
addr16
jp
movsb
popf
sbb
divb
push
sub
out
adc
cwtl
adc
sbb
es
push
fisttpll
daa
test
cwtl
dec
jecxz
or
sub
mov
sub
mov
outsl
arpl
sub
nop
in
out
and
pop
clc
sub
cmp
adc
push
sub
mov
addr16
mov
add
outsb
push
sbb
fwait
push
mov
adc
leave
inc
cmp
in
adc
imul
test
pop
xchg
shlb
into
fidivs
mov
xor
shll
daa
lcall
call
outsb
sub
mov
loop
daa
inc
push
adc
push
push
fnstsw
sub
pop
pop
inc
mov
inc
and
xchg
lret
jg
popa
movl
cwtl
cmp
andb
mov
mov
cmpsb
sbb
sbb
push
jb
aam
or
pop
lret
pop
ret
dec
aaa
jbe
out
pusha
inc
adc
cltd
cmpsl
sub
rorl
jo
sbb
lret
sbb
pop
cmp
xor
xchg
adc
push
and
in
sub
jnp
pop
push
rcrb
lock
jno
and
dec
push
pop
adc
pop
mov
push
aam
movl
cmpsb
call
clc
out
movsl
or
pop
mov
sbb
test
mov
rorl
les
push
rcr
aaa
mov
sbb
add
mov
mov
test
xchg
lret
adc
dec
mull
sub
enter
and
jne
sbb
das
sub
inc
cwtl
into
shlb
or
fbstp
popa
jl
and
aam
jl
inc
pop
decb
shlb
fstl
out
call
ljmp
cmp
out
inc
mov
in
gs
cltd
rorb
and
push
int
out
aas
out
out
bound
pusha
mov
movsb
inc
pop
add
mov
sbb
xchg
aam
out
movsl
cmp
xor
push
cmp
dec
faddp
xchg
and
std
test
iret
mov
iret
xor
jb
cmpsl
aam
lahf
sub
xchg
push
pop
icebp
outsb
sbbb
lock
or
push
in
testl
jno
adc
jae
cmpsb
mov
and
inc
rorb
mov
outsl
xchg
xchg
push
xchg
stc
scas
push
xchg
dec
lret
pop
jp
imul
outsl
jp
mov
jno
in
loopne
xchg
imul
in
sub
sarl
fwait
cmp
stos
or
push
mov
or
aaa
pop
gs
add
push
pushf
shll
add
stc
lods
cld
or
adc
ret
aad
xchg
cmpsl
jmp
ret
jge
call
pop
rclb
sub
movq
cmp
mov
jbe
pop
dec
jnp
cmp
sahf
out
push
imul
push
repnz
lret
imul
pushf
out
fisubs
lods
int3
push
cmp
dec
xlat
test
and
pop
dec
aaa
add
jno
movl
fisttps
lock
and
jae,pt
pushf
imull
mov
cs
or
test
mov
es
stos
inc
leave
repnz
mov
mov
sarl
cmp
call
jl
cmp
cmpsl
repnz
sub
negb
lret
js
fldl
clc
push
adc
pop
daa
pop
sahf
imul
pop
adc
pushl
ficoml
xlat
je
xor
xchg
sbb
mov
es
or
sbb
add
scas
cmc
xorb
leave
lahf
and
dec
cmp
outsb
mov
xchg
es
mov
xchg
pop
push
pop
es
les
xor
mov
sti
hlt
daa
push
xchg
shr
sbb
push
sbb
dec
cwtl
lret
sbb
jne
adc
lds
xlat
rorl
add
jnp
inc
rorl
adc
xor
push
inc
test
mov
or
adc
sbb
sbb
xchg
testl
insl
scas
lds
push
mov
jg
sub
inc
mov
dec
shlb
mov
mov
dec
jae
cmpsb
sbb
cwtl
loope
xchg
rcr
sbb
fsubl
fists
cwtl
dec
mov
push
mov
pop
pop
mov
and
test
cld
rol
cwtl
repz
sub
jp
add
dec
dec
xchg
xchg
cmp
fisubl
arpl
or
xor
pop
add
push
mov
outsb
cmp
mov
mov
in
jle
push
jne
jg
push
sub
cld
sub
pop
loop
adc
mov
in
sahf
repnz
in
scas
xchg
outsl
popf
sub
notb
rcrl
frstor
stos
sbb
fwait
cs
je
mov
call
adc
sbb
int
fdiv
test
add
jge
push
adc
pop
push
aad
in
xor
dec
mov
sbb
stos
ljmp
mov
dec
icebp
xchg
insl
not
lahf
pushf
jo
fnstsw
leave
jo
and
fnstenv
push
leave
sub
fucomip
dec
shll
or
sbb
jge
out
daa
sbb
mov
xlat
sbb
pop
sarl
adc
mov
ret
in
scas
or
and
cmp
xchg
mov
xchg
out
in
subb
fld
pop
jae
addb
arpl
ds
shrl
iret
icebp
ja
and
popf
test
data16
sbb
dec
cmp
into
pop
outsl
lock
stos
cmp
mul
test
xor
js
aam
mov
inc
addr16
dec
mov
sub
fnstsw
inc
push
jo
and
jg
jg
cmp
pop
ret
lahf
idivb
push
sub
inc
popf
sbb
outsb
adc
pop
bound
dec
call
pop
aaa
xchg
push
int3
cmp
pushl
mov
fimull
and
repz
jns
mov
inc
scas
xchg
mov
push
mov
sbb
jg
mov
jnp
lock
add
jmp
js
sub
int3
xor
outsl
out
sub
addl
lahf
pop
je
adcb
sahf
mov
lods
cwtl
mov
pop
cli
xchg
mov
lret
daa
jecxz
cmp
in
sub
and
fiadds
pop
cltd
xlat
rorl
mov
fcomps
jno
test
movsl
add
and
pop
cmp
mov
sub
xchg
add
jno
push
enter
cmp
dec
pop
stos
ss
sub
mov
dec
add
stos
clc
aad
jae
add
add
and
rclb
lods
addr16
fiaddl
cmp
mov
xor
in
stc
aas
scas
fwait
add
inc
mov
and
and
popa
push
or
mov
xchg
mov
jb
in
sbb
jo
jne
mov
sub
movsb
lock
mov
add
mov
cmp
decb
mov
cmpsb
mov
pop
sbb
inc
fiadds
push
testl
mov
jmp
int
hlt
pop
dec
testb
xor
addl
fildll
jl
popa
fsubrl
enter
mov
add
dec
cmp
pop
xchg
mov
cmp
pop
xchg
xchg
ror
test
dec
outsl
cmpb
pop
call
dec
xchg
in
shlb
mov
fadd
cmp
cmp
add
dec
sub
push
aas
cli
mov
xor
mov
rorb
xchg
sbb
lods
xchg
repnz
inc
cltd
daa
mov
xchg
insl
push
inc
dec
xchg
ja
fwait
sbb
in
das
clc
push
xchg
test
ds
js
adc
rcr
mov
mov
pop
ds
rcrb
mov
and
sub
pusha
inc
adc
xchg
mov
inc
in
mov
loopne
nop
in
mov
hlt
bound
push
push
shll
mov
call
ljmp
pushw
xchg
mov
mov
mov
stc
push
jecxz
lret
mov
bnd
mov
xchg
jae
inc
popa
push
jo
push
jp
or
adc
or
mov
mov
cli
sarl
cltd
js
ret
loop
jl
outsl
pop
into
mul
imul
iret
cld
inc
push
mov
adc
ret
push
jno
xor
pop
sbb
xor
ret
pop
shld
inc
mov
sbb
mov
cmp
inc
sub
add
insl
sub
ss
mov
jp
mov
xchg
push
dec
adc
loop
add
adc
xchg
sbb
iret
ljmp
mov
cwtl
inc
test
push
push
sar
pop
and
stos
std
push
pop
ljmp
imul
lcall
roll
test
test
mov
jno
and
sub
adc
jns
or
jle
subl
sbb
xchg
or
push
out
out
das
xchg
jns
xor
xchg
dec
adc
sarl
shll
mov
lock
pop
scas
test
lods
loopne
sub
push
push
add
jnp
or
imul
enter
xchg
cmpsl
mov
jp
cld
mov
push
sub
xor
lret
fdivr
hlt
push
jnp
dec
xor
aam
clc
jno
fnsave
or
stos
mov
inc
jne
lock
movsl
jno
mov
insb
lock
xchg
int3
cmp
mov
mov
xchg
jecxz
shll
test
push
popa
and
notb
xor
call
dec
stc
xchg
jae
imul
push
push
nop
and
push
cs
or
jns
mov
xlat
sbb
aad
jp
jmp
pop
dec
sahf
cmp
std
xlat
inc
mov
stos
jns
jmp
dec
test
les
mov
lret
pop
sub
adcl
mov
sysret
jge
fisttps
jns
jge
jno
iret
jno
iret
sub
adc
xchg
shlb
mov
mov
fbld
xchg
sbb
xlat
and
dec
push
cmp
clc
rcr
ret
loopne
sub
jl
out
mov
arpl
fdivrl
dec
jbe
push
fmul
sub
movsl
pop
mov
inc
outsb
xorl
addl
fcoms
test
sbb
cwtl
dec
mov
mov
and
leave
pop
add
subb
or
mov
scas
test
adcb
mov
ds
test
fiadds
or
cs
ret
xor
xor
mov
insb
push
lahf
pushf
lea
mov
iret
mov
insl
in
cmpb
imul
adc
dec
jg
jb
xchg
cltd
add
clc
inc
fwait
pushf
mov
pop
xlat
mov
xchg
add
jno
fiaddl
arpl
in
movb
jecxz
xchg
cwtl
movsl
test
stos
lahf
std
repnz
test
pusha
rclb
pop
dec
push
push
push
push
mov
cltd
xor
pop
cwtl
cmp
imul
inc
xchg
int3
cmp
insw
and
std
push
faddl
sub
aas
lahf
fdivrp
pop
cmpsl
and
andl
push
pop
sub
nop
inc
pop
testl
mov
xchg
xchg
xchg
pusha
sub
adc
xchg
jo
and
sbb
loope
mov
xor
scas
leave
mov
or
cmp
aam
shlb
jg
roll
andl
jmp
imul
add
lret
add
leave
xor
movsl
xor
mov
outsl
dec
push
out
cmp
push
outsl
arpl
xchg
es
xchg
add
adc
cmp
cmpl
ja
fs
sahf
inc
or
sahf
sbb
ds
xchg
inc
dec
xchg
push
dec
add
jmp
leave
pop
into
imul
in
adc
imul
xor
xchg
or
fmul
mov
arpl
mov
or
mov
icebp
test
or
loope
into
and
dec
or
test
jnp
dec
les
xor
in
adc
jnp
jle
jg
mov
cmp
mov
jl
mov
rol
or
enter
inc
xor
ds
jp
shll
dec
lret
shlb
mov
scas
xor
outsb
sub
popf
inc
fadds
add
push
pop
add
dec
xchg
adc
cli
mov
lret
xor
or
data16
rcrb
mov
sub
out
test
push
jbe
sti
insb
test
ja
sub
repnz
fisttpll
ret
ret
mov
adc
into
ja
daa
mov
daa
ds
rorb
mov
sub
cwtl
in
pop
jle
into
mov
sti
adc
xor
xor
ss
frstor
xor
out
mov
dec
and
cld
aad
loopne
aad
or
add
test
inc
jno
dec
adc
stc
push
xor
daa
ja
ljmp
xchg
mov
push
addr16
sbb
mov
dec
push
fisubrs
leave
fsubrp
scas
rclb
xorb
je
hlt
int
sub
flds
pop
insl
imul
mov
aaa
into
adc
sub
dec
aaa
mov
xchg
outsb
jo
add
bound
sbb
push
imul
stc
fidivrs
cmpl
mov
enter
hlt
adc
pop
cwtl
aad
subb
lcall
jae
mov
cmp
mov
xchg
jl
jl
inc
int3
or
sub
cltd
int3
andb
out
pop
mov
cld
xchg
sbb
push
pop
stos
mov
sbb
shlb
out
mov
cmp
mov
or
xchg
sub
mov
mov
cmp
into
ret
adc
xchg
jmp
outsb
or
add
inc
jg
push
insl
in
xor
movsl
mov
sub
call
sub
lret
aaa
insb
cmpsl
loope
sbb
sbb
sub
cmp
mov
push
cli
insl
sub
cmpsb
bnd
adc
adc
fstl
cmpsb
fnstenv
int3
pop
hlt
pop
notb
inc
pop
insl
and
inc
lret
xlat
push
ja
in
scas
movsl
dec
fdivrs
xor
add
fcmovu
insb
xor
jne
dec
fistl
mov
mov
fdivrl
fsubp
lret
pop
pushf
leave
mov
addb
js
es
clc
lcall
jl
add
in
adc
jne
add
jge
mov
in
test
lahf
jle
lds
test
dec
insb
pop
mov
pusha
mov
jns
sub
decb
imul
mov
imul
adc
lret
xor
imul
jb
fisttps
subb
lds
mov
loop
dec
jne
aas
xchg
adc
aam
stos
mov
jns
mov
outsb
dec
sti
ror
clc
inc
jp
int
mov
icebp
cmpsl
pop
mov
add
loope
dec
fnstenv
movsb
adc
lea
jno
pop
mov
ds
inc
int
push
nop
mov
jbe
pop
ss
jle
jno
dec
movb
sub
mov
xchg
pop
mov
add
into
jmp
fisttpl
adc
lret
xchg
sahf
or
lahf
outsl
lds
adc
sbb
inc
lahf
push
inc
adc
shlb
jb
xor
sbbl
not
clc
dec
push
fmuls
les
mov
dec
inc
mov
mov
and
xor
cli
cmp
dec
nop
jg
sahf
jl
bt
andnps
mov
adc
sub
or
popa
mov
popa
pop
mov
shr
imul
dec
and
cmpsb
imul
iret
cltd
sub
ss
gs
and
sub
pop
hlt
pop
mov
add
pop
shll
cmp
in
das
sub
ret
inc
inc
push
pushf
mov
gs
loope
xchg
imul
inc
rclb
clc
dec
cmp
notb
adc
sub
sbb
push
push
fiadds
arpl
outsb
bound
jb
dec
inc
popa
fimull
mov
adc
aad
std
std
push
or
jae
xorb
imul
add
popf
in
jae
and
ficompl
mov
jmp
inc
loope
iret
in
push
xor
popa
sbb
jno
and
push
xchg
imul
fsubp
push
sub
jo
fisubrs
and
inc
je
shll
mov
scas
in
pop
sahf
dec
and
pop
sub
add
or
in
mov
rorl
push
mov
scas
lods
jo
add
test
mov
ret
aad
mov
xlat
popa
cmpb
cli
cld
and
or
loop
xchg
pop
and
js
pop
scas
jg
push
pop
loope
xchg
sbb
imul
cmpsl
or
mov
icebp
dec
ja
xchg
stc
rorb
outsb
or
scas
icebp
rcrb
pop
pusha
in
ss
in
xchg
adc
lgs
push
leave
push
fcompl
add
pop
xlat
mov
push
push
lret
cmc
sahf
pop
pop
inc
dec
sub
pop
or
imul
or
adc
jl
ljmp
mov
dec
std
xchg
sub
add
pop
arpl
push
daa
inc
aaa
mov
mov
div
xchg
xchg
shll
and
add
pop
arpl
push
daa
inc
aaa
mov
mov
div
xchg
xchg
shll
and
add
pop
arpl
push
es
aaa
mov
mov
div
xchg
xchg
shll
and
add
pop
arpl
mov
mov
addb
dec
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
dec
adc
imul
imul
push
pop
pusha
test
stc
mov
test
adc
add
push
sbb
jo
pusha
leave
nop
fchs
mov
cltd
shrb
stos
add
xor
inc
aaa
jo
pusha
lods
cmp
addb
jmp
std
and
daa
adc
jno
xchg
sbb
mov
ljmp
pop
cltd
dec
lods
clc
mov
sub
cld
fbld
rcrl
and
js
jg
mov
sub
test
dec
sbb
sbb
outsl
dec
rcr
xchg
and
or
jo
pop
cltd
rcr
add
test
add
xchg
and
push
sbb
cmp
insl
dec
pop
lock
cltd
aas
test
mov
decl
in
cmc
push
xchg
push
mov
insb
pop
xlat
jmp
rcrb
mov
ljmp
xchg
mulb
or
cli
in
andb
mov
test
adc
add
jns
in
push
popa
inc
sub
pusha
seto
lahf
mov
mov
fwait
lock
add
cmp
inc
pop
cmp
leave
cmc
mov
mov
pushf
out
mov
mov
repnz
sbb
sbb
sbb
pop
insb
pusha
scas
call
or
rclb
push
or
inc
pop
push
sbb
jo
pusha
leave
nop
flds
mov
cltd
shrb
pop
add
jns
or
inc
sub
pusha
leave
nop
flds
mov
cltd
shrb
decl
cmpb
mov
mov
xchg
stos
push
cmpsl
shrl
mov
std
int
xchg
inc
push
fcomp
push
jns
adc
jo
xchg
std
fs
shl
mov
sbb
adc
out
mov
mov
inc
bound
flds
pop
shl
loopne
setbe
mov
cmpsl
or
pop
mov
sub
pop
dec
popa
lods
pushf
das
sbb
aas
into
data16
loop
into
orb
loop
out
sub
imul
push
mov
cmp
nop
mov
scas
push
stos
loopne
push
test
addl
mov
ficoml
fdivl
pop
in
ret
leave
out
jae
in
scas
ss
mov
push
and
inc
lock
adc
leave
aad
imul
add
jae
inc
jl
lcall
cmpsl
jl
adc
andb
leave
ljmp
pop
jmp
in
xor
add
lahf
xchg
jne
lods
xchg
js
xchg
cld
popf
outsb
add
adc
das
mov
jb
daa
pushf
inc
mov
std
hlt
ror
fisubrs
or
call
insl
jmp
mov
cmp
fcmovnb
jl
setg
sub
cmpsl
pop
fdivr
mov
aas
xlat
lods
lahf
or
mov
je
daa
out
data16
outsb
push
imul
mov
xor
rcl
pop
in
mov
leave
dec
ds
push
cmpsl
dec
push
ja
outsl
repz
push
sahf
aad
push
jmp
out
outsb
pop
aaa
mov
out
pusha
out
fs
sub
push
inc
push
push
xchg
test
inc
mov
sbb
adcb
pushf
inc
iret
shrb
jmp
jg
sarb
cmp
arpl
ret
stos
cmp
ret
out
mov
xor
sti
inc
outsb
pop
jno
stos
cmp
daa
lahf
add
mov
mov
cmp
dec
movsl
inc
cwtl
out
scas
pop
movsl
xor
outsl
mov
xchg
data16
push
jae
je
sub
push
in
push
enter
fldt
dec
sbb
mov
imul
push
dec
aaa
fistpll
pop
das
test
loopne
out
sahf
test
aaa
xchg
int3
pop
add
mov
jmp
and
lret
fs
js
jg
sub
rclb
dec
xchg
scas
lea
dec
xchg
cmp
xchg
daa
dec
dec
lahf
pop
push
mov
sbb
or
push
jmp
cmp
inc
pop
pop
in
fiadds
or
jl
dec
adc
daa
inc
jne
xchg
push
outsb
sti
push
out
mov
add
daa
jg
adc
insb
lods
sbbb
sarb
sub
or
dec
pop
cmpl
pop
adc
insl
inc
enter
jmp
pop
sub
dec
push
mov
ficoms
data16
xchg
js
rorb
es
jne
dec
mov
imul
mov
ret
add
ret
mov
push
jg
aad
jne
daa
xor
nop
pop
stc
inc
outsb
push
xchg
mov
xor
stos
insb
mov
fucomi
in
fsub
sub
xchg
in
dec
mov
jbe
or
xlat
insl
int3
leave
ffree
push
and
sahf
cmc
push
push
insl
adcl
movsb
and
pop
push
pop
ret
cmp
les
and
push
rcrb
push
in
sub
cwtl
dec
lods
bnd
call
push
shl
inc
mov
add
aaa
cmp
jl
fbstp
sar
lods
sub
gs
pop
and
jp
inc
or
scas
jbe
lods
inc
ret
test
lds
enter
mov
shr
inc
add
test
aas
call
pop
sub
cmc
inc
mov
lods
inc
pop
or
shll
sbb
cmp
push
xchg
in
mov
adcb
mov
mov
pop
push
push
hlt
mov
dec
movsb
out
fidivrs
jnp
loop
add
cld
xchg
mov
mov
popa
cmp
sbb
xchg
pop
and
aaa
in
add
out
sub
outsl
imul
shll
cmp
aam
fistps
xchg
push
cvtpi2ps
pop
cli
ds
rcrl
dec
mov
fcmovu
es
fcmovu
inc
hlt
mov
mov
cmp
mov
adc
xor
out
push
enter
xchg
fwait
dec
stc
shll
mov
jo
jg
xlat
pop
sbbl
bound
and
mov
cli
cli
arpl
xchg
lds
lcall
xchg
outsb
adc
popf
cmp
dec
mulb
ja
in
stos
add
add
bound
add
jne
loop
sbb
or
cwtl
test
rol
and
cmp
push
flds
test
rorb
fwait
aad
pusha
jecxz
cmp
adc
js
push
shrl
mov
cli
sbb
ret
inc
push
jb
sbb
js
or
outsb
push
mov
jge
adc
lods
and
mov
nop
loope
push
pop
or
mov
ret
or
mov
pushf
and
add
and
xor
arpl
icebp
xchg
mov
sub
test
xchg
cmc
pop
leave
leave
lods
jge
loopne
sub
pop
sbb
ss
in
xchg
call
outsb
mov
movsb
pop
imull
fistpll
hlt
je
or
inc
movb
imul
in
fsubl
sbb
add
mov
xor
xchg
jmp
hlt
out
sub
push
testb
orl
pop
inc
or
outsl
sahf
xchg
loop
fdivs
mov
shl
imul
jge
rcll
mov
adc
push
aam
test
popf
sahf
out
in
push
fisubrl
mov
push
xor
sub
sbb
mov
pop
mov
pop
movsb
xor
mov
or
pusha
scas
imul
cld
aam
into
xchg
addr16
xor
jns
mov
std
or
cwtl
jle
js
ljmp
mov
repnz
je
or
bound
dec
aaa
pop
xchg
mov
fdivrl
ljmp
icebp
xlat
or
xor
sbb
cmp
daa
ds
jl
shlb
xchg
mov
arpl
das
cwtl
ret
xorl
sbb
add
lret
ret
or
xor
popf
rorw
push
int3
cld
scas
mov
daa
testb
and
jno
es
loope
sbb
xchg
call
cli
inc
adc
mov
int3
cmp
xchg
pop
adc
jns
mov
lock
dec
inc
rep
testb
jmp
inc
ret
fucom
out
pusha
mov
lahf
jl
js
paddsb
mov
push
filds
jae
pushf
inc
movsl
cmp
jno
leave
repz
cmp
mov
xlat
shrb
leave
cmp
ljmp
fcmovbe
inc
push
cltd
nop
repz
jecxz
xchg
inc
push
dec
jmp
aad
fistps
daa
inc
repnz
cmpsb
cld
arpl
mov
add
ds
mov
xchg
scas
jno
fbld
adc
cli
cmp
lds
lods
pop
stos
mov
add
inc
jne
sub
jne
xor
cmc
inc
jp
mov
xchg
push
cmp
mov
push
jne
xchg
mov
popa
dec
jmp
pop
add
into
mov
fstpl
into
mov
or
adc
push
mul
stos
jecxz
sahf
es
mov
inc
hlt
cwtl
test
jo
dec
fs
pusha
adc
rcrb
xor
inc
aaa
jmp
push
cli
jno,pn
lds
jge
mov
lods
sti
enter
mov
in
jg
mov
les
or
and
sbb
mov
out
daa
neg
pop
mov
push
idivb
and
das
loope
fidivs
je
pop
call
pop
push
mov
jle
std
pop
inc
xchg
sub
outsb
push
mov
and
cmp
outsb
icebp
mov
out
sub
scas
subb
out
test
lahf
aaa
cmp
ror
outsb
pop
pop
cmpl
dec
xchg
xor
xchg
push
mov
xor
aas
mov
sub
jmp
push
mov
push
dec
in
out
test
popa
sub
sbb
mov
test
imul
xchg
aad
ret
jne
sub
adc
pop
sbb
add
xchg
into
xchg
and
mov
adc
enter
jne
outsb
fucomi
add
lods
sub
stc
inc
int
mov
stos
mov
mov
sahf
lcall
lret
cmp
sub
xor
jno
les
lock
loope
imul
ss
ficoms
rolb
or
imul
nop
adc
adc
sahf
inc
add
loopne
in
ss
pop
mov
push
jecxz
aas
in
stos
fstpl
loope
jmp
mov
add
xlat
pop
dec
enter
sub
test
shrb
pop
mov
imul
inc
adc
sbbb
mov
enter
pop
clc
cmc
mov
lcall
xchg
enter
jp
xchg
lock
mov
movsl
out
jp
addr16
test
mov
xchg
fists
clc
push
cmpsl
mov
jne
in
adc
or
insl
adc
xor
lret
hlt
sti
push
rorb
push
xchg
jb
shrb
std
arpl
pop
jl
push
mov
loopne
xchg
ds
xchg
outsl
addr16
stos
arpl
clc
cmp
or
negb
mov
rclb
mov
add
pop
lcall
ret
adc
pop
cmp
xlat
aam
or
ret
inc
xchg
call
mov
xor
addr16
daa
cmc
sbb
xchg
stc
inc
mov
sti
cmc
lds
cmp
int3
mov
xchg
mov
add
xor
mov
mov
cwtl
loope
xchg
mov
sbb
cmp
in
pop
add
mov
and
xlat
add
scas
jns
in
in
sbb
push
cmpsl
add
iret
adc
pop
mov
dec
push
xchg
cmp
loope
add
or
mov
scas
ret
aas
roll
and
push
inc
dec
mov
pop
mov
pop
push
adc
or
adc
test
mov
addr16
push
add
sub
ss
pop
repz
arpl
clc
movsb
test
xor
and
inc
loop
aas
jno
sub
out
xchg
push
xchg
sub
mov
lods
xor
dec
int3
lret
push
sbb
ret
add
jno
in
cmpsb
dec
out
sbb
mov
les
sbb
lods
pop
popf
or
adcb
in
fstps
das
int3
popl
push
cli
popf
jns
inc
lods
dec
negb
push
scas
in
iret
lret
insb
xchg
xor
ret
rcr
xorw
inc
push
inc
dec
dec
mov
sti
in
divl
movsl
cltd
lret
jge
popf
dec
pop
out
xchg
out
pop
push
es
arpl
push
push
xchg
add
and
cmp
jnp
add
add
cli
out
or
inc
sub
pop
ljmp
add
fisttpll
pop
es
stos
cmc
sbb
test
push
in
sub
lods
push
aam
push
sbb
dec
inc
test
or
mov
cmc
out
js,pt
popl
dec
ljmp
xchg
push
mov
dec
dec
or
and
push
jp
gs
je
test
adc
pushf
rcrb
mov
or
pop
add
scas
das
repnz
pop
arpl
mov
adc
dec
cltd
rorb
push
out
xor
adc
int
in
jle
cmpsb
push
pop
das
addr16
pop
jp,pn
pop
sti
mov
mov
xchg
push
xor
xchg
lea
jge
insb
or
mov
je
andb
popa
and
xor
pop
xchg
idivb
xchg
dec
in
pop
stos
or
lods
mov
jne
xor
mov
jg
inc
mov
lods
or
xor
outsb
xchg
ja
mov
frstor
xchg
fists
popa
xchg
push
add
mov
push
cmc
cmpb
cmp
scas
pop
mov
mov
xor
fcmovnu
fidivs
mov
sahf
loop
mov
cwtl
and
xchg
jecxz
sub
xor
das
inc
mov
inc
adc
into
inc
je
movsl
je
iret
jmp
int3
rolb
xchg
jno
mov
movsb
test
call
je
jno
jl
cmc
adc
ss
std
out
call
dec
dec
into
add
lea
pop
insl
lret
aad
rcrl
shl
scas
push
push
test
leave
hlt
test
inc
mov
dec
fdivrl
rorl
jne
loope
mov
rclb
cmp
pushf
sbb
jmp
jp
mov
sahf
sub
aas
repnz
add
jl
mov
or
adc
mov
mov
xor
jge
lahf
les
jg
mov
pop
addr16
add
adc
test
repnz
fmull
pop
pop
dec
and
xor
cmp
cmpb
add
and
xor
pop
sub
ja
mov
add
mov
pushf
pop
nop
xor
pusha
out
rcrb
mov
xor
leave
cld
xor
daa
add
jno
sahf
pop
leave
in
adc
and
btc
push
roll
out
test
imul
fnstsw
sub
movsl
sub
mov
xchg
lret
ds
outsb
xlat
sti
shld
test
out
mov
insb
mov
and
test
call
or
int3
ds
insb
shl
pop
cwtl
add
test
stos
movsl
fiadds
lea
sti
mov
movsb
cmpsb
mov
jne
xor
outsb
faddl
sahf
in
adc
and
loop
mov
add
pop
ret
xchg
sub
dec
aam
stos
jecxz
outsb
jns
cmp
and
cmp
mov
leave
dec
xchg
js
xchg
test
mov
rolb
sbb
add
addr16
ljmp
sub
jb
loopne
addr16
inc
adc
sub
inc
pop
mov
dec
sbb
lret
mov
jge
sub
int3
into
test
jge
sub
in
pop
pushf
adc
or
push
push
leave
add
dec
iret
pop
add
stos
rclb
push
test
dec
jbe
pop
aad
outsl
jge
aas
in
out
pop
mov
mov
add
mov
mov
sub
sub
adc
pop
cmc
cs
dec
shl
add
test
inc
imul
xor
cmp
ja
ds
dec
pusha
stos
movsb
sub
aas
and
jbe
subb
sub
rcrl
cmp
dec
dec
lret
xchg
sub
aaa
push
mov
jno
inc
lds
inc
mov
loope
pop
jns
add
and
and
sbb
sub
popf
fwait
lahf
les
jb
and
movsl
jecxz
mov
fs
bound
sub
ret
dec
mov
loopne
roll
imul
hlt
mov
outsl
jbe
in
fsubl
adc
xchg
jmp
jno
popa
dec
push
out
xor
xchg
subl
sbb
xorb
ret
sahf
push
add
insl
std
sarb
or
imul
pop
loopne
inc
cwtl
nop
push
sbb
clc
mov
subl
lret
sti
mov
pop
stc
ret
mov
loope
mov
and
dec
ficoml
pop
fbld
mov
rorb
imul
mov
xchg
cmp
dec
addr16
lds
repnz
or
cmc
loope
nop
xlat
inc
loope
ja
stos
pusha
out
mov
filds
fdivr
sahf
loope
sub
or
sbb
dec
call
movb
fs
mov
push
shll
inc
fcoml
or
mov
dec
iret
insb
stos
jnp
shl
fsubrl
ja
enter
pop
int3
movsb
push
sbb
mov
jp
jp
repnz
imul
test
inc
add
das
call
rcrb
imul
daa
in
inc
in
fisubl
pop
mov
cmp
dec
and
sbb
jle
ss
pop
xor
add
cs
faddl
cmp
loope
xchg
push
insb
testl
popf
leave
mov
incl
push
sbb
aas
shll
cmp
push
aad
into
nop
dec
cmp
jno
xlat
popf
ja
cwtl
sbb
mov
loop
int
ss
push
dec
mov
int3
mov
sub
xchg
mov
sub
push
add
cltd
gs
adc
jg
jg
or
jg
dec
push
push
scas
mov
rorl
push
pop
test
adc
ficomps
adc
cmp
sbb
test
xchg
cmp
dec
xor
xlat
dec
xchg
test
xchg
aam
lea
loop
jmp
adc
jp
pushf
xor
cmp
jbe
lods
xchg
loopne
push
mov
add
adc
out
es
adc
mov
or
push
jg
cmp
lcall
or
out
sub
in
mov
push
aad
pop
adc
push
jae
push
adc
jecxz
std
aam
adc
jbe
rcrb
addr16
inc
enter
dec
inc
ds
sbb
mov
push
cmp
bound
and
mov
les
nop
mov
or
mov
xchg
cmp
mov
aad
pop
popa
lret
push
ds
jmp
xchg
xchg
ss
pop
jmp
rcl
pop
ret
lods
cltd
inc
std
sub
xchg
idivb
xchg
jmp
cmpsb
lods
subb
mov
jecxz
xlat
int
sbb
aam
push
pop
in
and
dec
enter
insb
dec
push
fisttpl
add
lods
cmp
test
ja
lods
mov
xorb
push
jb
push
test
fmull
push
pop
sub
movsl
xchg
or
aam
inc
xchg
xor
out
std
shll
or
mov
pop
pop
nop
inc
mov
out
dec
sub
jno
aas
push
fbld
inc
xchg
mov
xor
push
fsubr
fwait
xor
ljmp
fnstenv
pop
ja
das
nop
add
mov
push
inc
addr16
mov
enter
jae
cmp
lea
or
ljmp
inc
aam
pop
lret
fisttps
xchg
xchg
xchg
sbb
ds
ds
adcb
adc
loop
dec
movl
dec
fs
jne
mov
fwait
jmp
std
in
into
xchg
inc
sub
fsubs
xchg
ds
aad
jp
and
bound
mov
mov
jge
jmp
dec
ss
ret
lcall
sbb
jp
movsb
test
stos
rcrl
inc
adc
xchg
cmp
in
icebp
in
mov
inc
sbb
mov
shrb
shrl
mov
mov
sbb
pop
mov
push
ret
inc
pop
cmp
inc
fwait
dec
stos
push
cmp
lea
out
push
xor
pop
imul
jle
psrlq
popa
adc
push
std
int3
popf
cmp
xor
stos
das
out
jo
sub
imul
jb
cltd
loopne
mov
sbbl
daa
push
cmpsl
mov
xor
lret
outsl
adc
jb
scas
es
je
mov
push
test
push
xor
cmp
sbb
notb
ds
scas
imul
push
mov
or
imul
jg
or
into
jo
pop
push
pop
sti
dec
or
fstpt
pop
ljmp
lahf
xchg
push
into
jmp
js
ret
mov
sub
vmaxsd
adc
mov
imul
xchg
jne
lret
adc
mov
push
dec
cmp
cmp
push
sbb
jge
push
xorb
adc
pop
mov
mov
stos
out
jo
outsb
cmp
and
stos
pop
popl
bound
int3
inc
xchg
test
xchg
cld
adc
lahf
push
test
inc
fmuls
jg
mov
pop
mov
shll
orb
mov
lret
sub
jb
push
mov
dec
mov
jecxz
jmp
scas
pop
mov
nop
das
xchg
adc
xchg
out
pop
ret
add
jo
popf
movsb
push
iret
push
mov
mov
int
pop
or
sbb
rorb
popf
jo
mov
push
xchg
repz
cli
mov
jae
mov
jns
or
xor
in
test
mov
ficoml
pop
sahf
mov
stos
push
bound
mov
out
dec
lahf
cli
cltd
sub
adc
clc
and
stc
jmp
adcl
stc
popa
fstpt
or
and
xlat
ficoml
imul
mov
sub
out
jno
pusha
shr
adc
push
push
aad
cmpsl
lea
add
xor
or
inc
sub
pusha
leave
nop
flds
mov
cltd
shrb
pop
add
jns
or
inc
sub
pusha
leave
nop
flds
mov
cltd
shrb
imul
sub
pusha
leave
adc
sbbb
stc
mov
test
adc
and
push
or
jo
pusha
leave
nop
sub
stc
xlat
pop
adc
push
cmovbe
ror
and
adc
add
loop
into
push
mov
lods
pusha
xorl
and
xor
shlb
and
adc
add
push
mov
inc
mov
mov
rclb
rol
shlb
loopne
lock
dec
mov
inc
push
jae
or
jo
add
pop
rcrl
pushf
mov
sbb
and
lahf
sub
xchg
mov
inc
sbb
jno
xor
mov
mov
cli
nop
lahf
pop
fisttpl
mov
orl
mov
dec
test
daa
in
sub
add
pusha
sub
insl
loope
das
xor
shlb
mov
lock
or
pop
sahf
jno
jle
mov
add
rolb
psraw
push
nop
popf
and
cmc
inc
test
push
mov
push
cltd
out
insb
jo
xor
cmp
adc
inc
dec
bound
pop
mov
mov
test
push
mov
mov
or
shlb
loopne
lock
dec
mov
inc
test
jo
add
adc
and
xor
mov
cltd
add
cmp
xor
out
add
lods
movsl
dec
mov
test
add
add
push
fdivs
add
in
ret
jle
dec
mov
rolb
pushf
je
sbb
mov
inc
mov
mov
add
adc
and
xor
shlb
and
adc
add
push
mov
inc
mov
mov
add
adc
and
xor
shlb
cmpsb
jge
fists
jle
xor
ds
mov
stc
lods
mov
stos
xor
iret
scas
dec
cltd
cmp
stos
push
jg
repz
push
mov
inc
iret
inc
jbe
add
call
mulb
dec
xor
cld
loope
out
mov
inc
adcb
test
mov
adc
popa
adc
add
aas
sarb
cs
jp
or
xchg
shlb
popa
or
and
mov
imul
pop
mov
leave
pop
ret
dec
adc
fs
jecxz
stc
inc
mov
popf
cmp
roll
les
fistpl
xchg
sbb
movsl
xor
lret
arpl
push
pop
mov
cs
pop
aam
fs
clc
xchg
ja
xor
dec
push
imul
xchg
mov
sub
dec
mov
outsb
es
mov
add
mov
cmp
push
cmp
test
dec
pop
test
out
mov
pop
push
xor
inc
jge
loopne
or
mov
xchg
dec
jmp
loop
scas
mov
movsb
pop
dec
repz
aad
jl
mov
mov
jmp
adc
into
ja
les
lds
adc
cmp
insl
pop
cmp
inc
pop
jnp
mov
sahf
push
daa
mov
cmpb
dec
dec
ja
dec
std
clc
xchg
add
cmp
stos
loope
jb
repnz
rcrl
adc
cs
push
lahf
xchg
imul
mov
sub
inc
in
jle
cmp
lods
xor
fwait
cmp
ja
in
pop
insl
inc
and
xchg
cmpsl
pop
xorb
insb
leave
inc
call
xchg
jecxz
sub
pop
xchg
push
add
adc
btr
pushl
pop
or
inc
ret
xor
inc
xchg
sbbb
out
adc
fistpl
push
cld
fldt
sub
cmp
pop
lea
outsl
pop
xor
inc
sub
or
insl
hlt
adc
sub
fisttps
xchg
and
add
enter
xor
cmc
in
inc
div
pop
add
imul
push
jns
jmp
sbb
hlt
scas
lods
xor
cs
ret
sub
nop
clc
xchg
xchg
and
std
dec
movsb
xchg
xor
stc
mov
cld
in
mov
incb
loopne
call
rclb
push
or
cmp
inc
ret
push
jne
adc
sub
pop
jg
jecxz
add
insl
adc
lods
adc
adc
leave
mov
in
std
inc
dec
iret
push
push
sahf
xchg
into
out
mov
push
je
push
dec
adc
loop
fdivrl
mov
jae
xor
or
insl
xchg
stos
mov
fcmovb
add
mov
sbb
pop
jmp
test
mov
push
test
sub
push
arpl
dec
fdivrl
cmpsb
adc
scas
lds
add
pop
xor
clc
mov
sub
push
push
out
cmpsb
cs
pop
aaa
imul
aaa
test
dec
jae
stc
popf
mov
sub
mov
xchg
sub
aas
push
and
stc
jae
jl
bound
inc
repnz
jae
stos
leave
test
mov
lods
xor
inc
or
mov
cld
pusha
popf
setbe
nop
mov
fwait
das
sub
mov
sub
mov
push
sub
push
fistpll
inc
xchg
sbb
ss
arpl
dec
push
adc
xchg
sub
lods
cmp
pop
or
xor
les
aam
push
cmpsb
or
jb
in
sub
idiv
std
imul
mov
cmpsb
mov
inc
adc
mov
or
sub
mov
movsl
aaa
push
aam
jecxz
push
fiaddl
fs
cld
sub
mov
into
test
rorl
imul
popa
data16
adcb
mov
cld
fldcw
out
leave
mov
pop
sub
sbb
popa
pusha
sub
add
or
addb
lcall
mov
lods
sub
repnz
lds
lcall
sbb
in
xchg
xchg
xorb
cmc
cs
push
or
jns
jle
jle
fildll
out
adc
mov
lock
xor
imul
loopne
sahf
sarl
push
scas
mov
jge
pcmpeqb
add
cmp
jno
addr16
sub
pop
movsl
montmul
cmpsb
xchg
sub
jle
sub
rol
out
loop
xchg
cmp
sub
insb
mov
iret
into
lds
push
cld
or
sub
mov
imul
inc
sub
fisttpll
mov
jns
fcoms
ret
sub
nop
nop
mov
add
inc
and
mov
ret
js
dec
pop
pop
outsb
or
sti
push
xor
bound
mov
jb
mov
mov
lock
mov
paddq
bound
mov
cmc
mov
mov
xor
xchg
fisubrl
shll
daa
xor
pop
in
or
adc
inc
cmpsl
aam
sub
xor
jns
add
in
sbb
push
imul
es
mov
fs
sub
insb
mov
adc
push
in
mov
mov
mov
jno
push
dec
fnstenv
xchg
pusha
sbb
cwtl
enter
cmp
das
and
js
cs
movl
or
mov
mov
sbb
leave
xchg
in
rcrb
dec
fisubl
ss
std
popa
push
inc
xchg
shr
mov
cmpsl
sbb
nop
mulb
xchg
dec
push
add
cmpsl
shlb
into
outsl
and
imul
call
adc
imul
pop
xchg
xchg
push
scas
std
sbb
jp
jl
sub
fisttpll
push
mov
out
push
cmp
jne
xchg
ret
pop
xchg
push
stos
xchg
mov
cmpsl
sub
aad
das
inc
and
jmp
push
mov
sbb
inc
pushf
es
and
sub
rcrb
mov
je
nop
or
fdivrl
sbb
dec
or
jg
adc
es
or
jge
cli
pushf
mov
mov
ds
and
lcall
xchg
out
jno
dec
inc
xchg
fisttpll
mov
imul
mov
sub
jno
getsec
addb
jg
in
pop
js
mov
int3
inc
jnp
arpl
insl
pop
fmull
or
dec
jecxz
and
hlt
push
mov
inc
std
fwait
popa
inc
fsubrl
cmpsl
sti
dec
cs
mov
out
pop
xor
mov
xor
scas
pop
call
pop
cmp
dec
xlat
cmp
mov
mov
dec
ror
cmpsb
fdivrl
pop
xor
pop
aam
pop
add
dec
or
daa
xor
push
dec
sub
aam
out
and
and
fcoms
in
out
jbe
push
mov
pop
dec
popf
mov
std
or
lahf
add
imul
lods
loopne
bound
cmp
sbb
and
inc
cmpsl
loope
scas
mov
in
push
das
std
arpl
cltd
push
aaa
imul
mov
test
mov
pushf
dec
test
cltd
aam
outsl
xchg
in
pop
insl
and
sub
popa
xor
stos
or
mov
jp
fwait
aam
fwait
insl
push
mov
inc
sbb
pushl
and
push
jl
in
aam
ret
xchg
out
int
fs
mov
jbe
shlb
push
cmp
scas
js
ret
out
iret
jo
adc
mov
mov
pop
ret
cmpsb
fidivs
mov
add
dec
loope
mov
rolb
aad
nop
inc
xor
add
test
jae
sbb
ljmp
out
mov
mov
pop
fstp
jmp
lock
jno
lods
roll
aas
xchg
push
je
test
xchg
sub
cmpsb
rolb
adc
les
fs
dec
ret
addr16
sub
xchg
xor
mov
jp
adc
or
mov
enter
pop
jnp
adc
xchg
or
cld
mov
adc
push
dec
clc
das
mov
pop
mov
sbb
sbb
jne
or
cmp
adc
lds
cs
fists
mov
pop
mov
imul
out
xor
sti
and
sub
sbb
push
xchg
ret
inc
inc
movsl
adc
pop
jbe
mov
cmp
push
add
es
adc
mov
lods
jge
gs
push
ficoml
mov
mov
dec
sub
mov
stc
jo
mov
xor
jno
inc
in
and
fisubs
add
push
xchg
arpl
into
mov
jae
enter
mov
test
push
or
cmp
into
leave
adc
push
out
fnstsw
adc
stos
dec
lods
add
into
sahf
jbe
fdiv
mov
pop
aas
insb
add
pop
mov
pop
cmp
mov
ljmp
dec
scas
dec
aas
push
or
test
je
pop
mov
aad
das
xlat
shll
jge
subl
mov
sbb
push
shrl
test
mov
xchg
jmp
arpl
sbb
cmpsb
and
jne
xchg
mov
pushf
mov
bound
xorl
insl
cld
es
repnz
mov
xchg
ffree
or
cmp
sbb
jl
popf
add
dec
push
sub
jle
mov
stos
push
xchg
mov
add
out
lds
stos
in
jle
jae
xchg
jne
stos
jle
icebp
mov
mov
push
aas
xchg
xchg
xchg
je
xor
int3
std
mov
dec
dec
pop
nop
cmp
into
xor
sbb
push
sbb
out
cmc
rorb
jnp
cmp
out
popf
out
icebp
push
ret
fnclex
sar
cwtl
or
jnp
adc
fiaddl
inc
das
push
in
jae
mov
xchg
inc
jg
call
push
popf
insb
addr16
fwait
mov
ret
mov
mov
push
and
dec
jo,pt
xor
addr16
xor
std
aad
pop
cmp
fstpl
mov
inc
xor
xor
fwait
inc
test
sub
cmp
fcomps
mov
dec
icebp
xchg
orb
jno,pt
ljmp
fdiv
mov
or
dec
mov
jmp
stos
cmp
jbe
enter
add
jecxz
rorl
cmp
mov
jns
push
and
dec
mov
jns
mov
idivb
cmp
out
or
outsb
push
cld
lds
jmp
mov
mov
imul
jl
mov
fidivrs
outsb
push
das
cmp
das
push
mov
jb
push
xor
and
roll
jg
out
pop
mov
mov
into
test
nop
xchg
out
push
ficomps
roll
outsb
push
clc
mov
pushf
dec
pop
jl
mov
or
mov
push
shrl
loop
sbb
daa
mov
mov
roll
xchg
jge
loopne
repz
add
pusha
repz
xchg
cwtl
pusha
pusha
jl
adcl
rcrb
daa
push
or
mov
cmpsl
lret
push
mov
fcomp
cmp
xchg
push
out
popf
mov
xor
lock
leave
push
divb
add
mov
mull
mov
in
sahf
xor
add
push
test
cmp
mov
mov
shl
outsb
or
lods
mov
xchg
bound
pop
sub
and
in
push
leave
jmp
imul
movsl
xor
pushf
mov
jo
cmpsl
testl
fs
mov
xor
addl
imul
test
jl
decb
imul
xor
adcb
movsb
jmp
xchg
lods
sbb
dec
out
fs
scas
idivl
mov
mov
pushw
pusha
cmp
pop
pop
je
pop
mov
aaa
sub
pop
xchg
lret
mov
mov
add
add
xchg
jne
dec
pop
mov
jae
push
cwtl
push
ja
imulb
sub
mov
sahf
xor
imulb
xchg
loope
cmp
aad
outsb
push
xchg
fstl
pop
xchg
adc
into
mov
inc
mov
cmp
sub
pop
clc
clc
in
test
xchg
mov
lock
xchg
aad
cmpsb
inc
pop
mov
insl
push
sub
sbb
inc
shrb
sub
out
mov
cs
decb
sub
mov
pop
or
out
sub
xchg
xchg
dec
xor
ficompl
mov
loop
add
mov
sti
addr16
xchg
int
int3
test
mov
mov
aam
invd
xlat
fsts
divb
pop
xchg
leave
mov
icebp
cmp
jbe
test
cltd
dec
leave
cmpsl
cmp
jnp
mov
aad
xor
push
negl
fstpt
ljmp
sbb
push
jmp
cmp
adc
sub
push
xor
sahf
cli
rclb
xor
and
outsl
sti
pushf
arpl
insl
inc
dec
aaa
mov
push
xor
insl
loope
aad
shl
scas
inc
data16
ret
out
das
mov
and
jmp
pop
ss
xlat
or
negb
inc
cs
hlt
push
xor
or
insl
fsubs
add
jnp
xchg
pop
popf
out
es
mov
xchg
push
add
movsb
mov
pop
mov
mov
mov
push
outsl
inc
int
inc
add
insl
stc
outsl
jnp
pop
jno
loope
je
mov
repz
jg
mov
jg
aaa
fwait
pop
mov
dec
dec
cwtl
or
xchg
and
aam
pusha
test
pushf
shlb
cmp
ss
mov
dec
or
int3
sub
pushf
cmp
pushf
in
arpl
ja
out
shrb
xchg
sarb
mov
push
xor
jo
jmp
in
jno
push
mov
mov
push
sarb
jmp
xchg
mov
dec
adc
inc
sbb
outsb
movsb
or
xchg
test
cltd
mov
adc
out
lret
lret
popa
into
cmp
xchg
stc
lcall
push
xor
inc
mov
insb
clc
adc
add
mov
es
jb
outsb
notb
dec
and
rcrb
cli
loop
mov
mov
dec
inc
repz
xchg
fists
inc
cwtl
das
popf
call
inc
or
xchg
or
lret
xchg
lcall
in
dec
es
mov
arpl
push
nop
movsl
je
adc
mov
fildl
mov
xchg
mov
icebp
cmp
leave
mov
sbb
push
daa
pop
xchg
cmp
imul
mov
mov
cmpsb
scas
clc
aaa
sub
cmp
jg
push
hlt
inc
mov
inc
out
mov
movsb
sub
loopne
inc
or
xchg
sbb
mov
shll
ror
in
mov
repz
insb
cmpsl
pop
and
xor
daa
dec
sbb
xor
cmp
test
test
adc
movsl
pop
lret
push
cmc
add
dec
movl
out
mov
jl
mov
sahf
xchg
sbb
lcall
mov
mov
daa
push
cmp
out
loop
xchg
sub
pop
add
pusha
repz
xor
dec
jmp
adc
pop
and
pop
adc
pop
jmp
cmpsl
add
mov
mov
mov
mov
mov
push
test
jl
mov
pop
xchg
xchg
xchg
mov
push
and
pminsw
nop
push
insl
mov
pop
loop
aam
pop
scas
sbb
xchg
fs
les
test
mov
std
xchg
or
mov
add
pop
movb
push
or
negl
fnsave
sub
or
enter
scas
fidivs
pop
sbb
aaa
scas
into
mov
jmp
popa
jmp
jp
int3
xor
arpl
mov
mov
inc
mov
push
incb
xchg
jne
lods
jno
and
or
push
dec
sub
repz
pop
sbb
mov
fs
push
sahf
jmp
daa
inc
ss
add
arpl
jbe
add
aas
test
pushl
fsubrl
jmp
mov
mov
bnd
xchg
add
mov
or
xor
pop
jbe
std
dec
lods
out
or
xchg
fwait
cmp
mov
mov
movb
std
pusha
cmp
sbb
inc
mov
xchg
daa
imull
fwait
cmp
in
jl
jo
mov
mov
ret
sbb
pop
movsb
dec
inc
xchg
imul
mov
les
mov
xchg
xlat
ljmp
cli
mov
sbb
xorl
jg
das
pop
ja
jle
pop
clc
mov
push
shlb
stc
loopne,pt
mov
lea
out
sub
and
adc
push
lahf
shlb
or
stos
rorl
pop
cli
cld
jge
loop
pop
xchg
divl
and
sbb
or
js
jge
mull
jbe
ja
in
loopne
xor
mov
push
jbe
rorl
or
xor
pop
inc
mov
pop
in
jb
or
leave
mov
fsubrp
or
aam
in
push
test
xor
sub
cli
jl
test
add
xlat
push
cmp
rcll
inc
add
mov
fwait
mov
jbe
stos
sub
xchg
xor
dec
inc
shlb
lcall
in
xchg
mov
mov
lret
enter
adc
lods
test
std
sbb
cmp
negb
out
inc
inc
arpl
mov
rcll
shlb
sub
jno
xor
jmp
mov
cmp
into
ret
std
mov
pushf
inc
das
insl
arpl
mov
cmpsl
jae
dec
cmp
adc
fdivp
xchg
cmpsb
mov
push
shl
jnp
decb
jne
fists
mov
enter
test
xchg
mov
push
stos
push
fidivrs
sbb
xor
xchg
jne
loop
and
and
xchg
pop
cmp
sbb
jmp
lods
ret
sbb
loop
ret
xor
mov
push
and
mov
lock
mov
push
or
sbb
mov
mov
fstpl
mov
inc
cmc
call
popf
in
pop
pop
mov
sbb
adc
xchg
scas
push
ljmp
sub
dec
mov
pusha
scas
mov
and
jbe
push
in
cmc
out
cmpsl
clc
jno
ret
dec
jae
out
inc
imul
stos
mov
jno
jmp
adc
stos
jnp
mov
leave
movsl
scas
fistpl
mov
push
ficoms
movb
cs
sbb
ficoms
push
sbb
lret
xchg
lods
in
push
inc
sub
jp
movsl
dec
adc
mov
xchg
int
cmpsl
out
dec
xor
mov
push
cmp
into
mov
repnz
push
xchg
cwtl
dec
pop
outsl
mov
mov
cmp
outsl
sti
xchg
add
inc
push
inc
cltd
cmp
fstl
cmp
or
out
ret
push
arpl
pop
jecxz
and
idivb
mov
inc
repnz
fs
ficoml
dec
cmp
and
scas
or
loop
mov
call
dec
mov
movsb
icebp
inc
out
mov
inc
fcmove
jb
stos
cltd
into
in
bound
or
stos
fwait
iret
mov
inc
xlat
pop
fldl
push
arpl
orl
or
pop
in
jle
pop
int3
lock
sbb
fisttpll
xor
mov
daa
or
mov
fdivrs
roll
arpl
popl
jecxz
into
or
and
mov
jecxz
imul
ljmp
ret
xchg
mov
out
repnz
push
cmpsl
fstps
mov
ficoms
xchg
push
sub
mov
lcall
scas
xor
fdivrl
call
xor
in
sarl
mov
in
jnp
add
xchg
mov
aam
scas
fidivrl
shll
sbbb
fisttpll
adc
das
xlat
sub
cmp
pop
xchg
pop
jle
aaa
jae
mov
mov
fsts
pop
int3
or
mov
push
stos
cwtl
xchg
in
decb
push
jne
into
pop
push
movsb
fs
vucomiss
and
out
imul
push
cmp
rorl
stos
ret
flds
inc
jmp
pushf
xchg
xor
fnstsw
xor
add
mov
outsb
pop
clc
sti
daa
hlt
pop
xor
mov
rcr
pop
lret
dec
xchg
push
daa
and
or
adc
sbb
and
inc
mov
aad
mov
leave
out
or
shlb
fisubrs
mov
sti
je
add
or
cmpb
outsb
and
lock
push
mov
inc
mov
mov
add
adc
and
xor
shlb
and
adc
add
push
mov
inc
mov
mov
add
adc
and
xor
shlb
and
lock
jno
popa
mov
mov
mov
add
adc
and
xor
shlb
and
adc
add
push
mov
inc
mov
or
xchg
jo
jo
pusha
push
push
cs
ds
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
lods
jnp
xchg
movsb
xor
or
mov
mov
data16
and
xor
inc
push
push
fs
je
test
xchg
out
mov
les
cmpb
xor
xor
sub
push
push
and
je
push
call
clc
mov
in
jbe
insl
ja
jnp
inc
sbb
imul
test
cli
lcall
pop
movsl
clc
jg
lea
sahf
scas
lahf
out
je
mov
or
testb
test
or
pop
sub
dec
mov
and
and
inc
jno
cli
gs
jnp
out
lahf
mov
cmpsl
in
test
jg
mov
mov
mov
inc
testb
mov
jle
xchg
inc
sti
push
inc
push
adc
enter
stos
push
mov
daa
push
xchg
sbb
mov
out
xchg
xchg
xchg
hlt
jle
cltd
add
jecxz
xor
pop
daa
push
fwait
jne
mov
inc
out
cltd
mov
mov
subl
mov
jl
fildl
testb
mulb
ss
fs
and
mov
xchg
ds
je
cmpb
xor
jl
push
pop
sbb
out
lcall
jmp
add
push
and
sub
sub
jae
arpl
mov
les
cli
mov
cwtl
je
inc
adc
push
push
adc
sbb
push
pop
lahf
rcl
shll
mov
xchg
jbe
data16
and
xor
inc
es
push
fs
je
test
xchg
movsb
mov
les
hlt
jbe
data16
and
xor
inc
es
push
fs
je
test
cwtl
cltd
pop
xor
push
adc
jns
emms
lret
pushf
pop
push
hlt
add
dec
pop
jl
jns
add
mov
mov
jmp
repz
cwtl
arpl
hlt
xchg
loopne
mov
subl
adc
mov
pop
addr16
outsb
adc
popa
test
dec
or
cltd
mov
mov
cs
push
mov
cmpsl
orb
xor
fdivrl
sub
pop
das
sub
mov
mov
movsb
sbb
jae
fs
out
mov
ja
in
or
or
int
jmp
ret
cmp
aas
imul
add
shl
pop
xor
movsl
dec
pusha
je
loope
aas
dec
loopne
sub
jnp
dec
mov
xor
leave
sbb
cltd
movsl
push
sbb
imul
in
xor
hlt
jle
aas
popa
fnstsw
or
imul
stos
jns
adcl
arpl
inc
push
cs
fs
xlat
push
mov
inc
push
add
push
sub
jp
add
add
fstp
and
adc
inc
mov
imul
mov
in
pop
inc
push
rcrl
cmpsb
jnp
cld
iret
push
lcall
shlb
leave
das
sbb
ret
mov
cmp
mov
lock
jmp
pop
hlt
filds
xlat
adc
xor
fmulp
stos
scas
push
and
and
xchg
fldl
or
adc
sub
test
add
cmpsb
pop
ljmp
mov
cli
adc
aad
push
test
incl
es
rcll
aad
jnp
mov
or
int
addr16
pop
pusha
frstor
fcmovnu
lds
ljmp
into
xchg
adc
lods
jg
enter
test
iret
mov
loope
dec
nop
out
xor
in
mov
dec
add
es
out
movsb
out
lret
dec
xor
pop
pop
aad
xor
movl
add
jbe
mov
test
xchg
mov
mov
mov
sti
sub
push
es
jbe
and
push
repz
or
push
test
icebp
xchg
mov
ja
clc
sbb
pop
movsl
and
sbb
iret
push
mov
mov
out
cmc
mov
loop
xchg
daa
pop
pop
add
jle
xor
jp
loope
jb
pop
aad
lods
or
mov
or
and
in
dec
insb
add
adc
pop
jmp
cmp
push
dec
mov
xchg
scas
mov
pusha
push
int
stos
mov
scas
fsts
int
insl
jnp
aam
xchg
into
cmp
pop
jg
test
jo
cmpsb
dec
fimuls
into
sar
xchg
mov
xor
int
jl
xchg
xchg
mov
mov
in
xchg
outsb
push
leave
jae
jle
and
lods
lods
sti
adcb
mov
pop
jg
or
arpl
jo
pushf
test
pusha
ja
cmp
clc
lahf
bound
push
cmp
outsb
push
dec
adc
jmp
leave
test
pop
cmc
enter
or
sbb
xor
es
aam
and
int3
adc
shll
pop
std
insb
xor
pop
mov
push
push
xchg
mov
or
into
std
shlb
inc
mov
imul
sarl
xchg
and
lods
jp
dec
push
jo
movsl
fstpt
inc
sbb
lods
ss
add
or
in
hlt
fldl
in
pop
inc
push
fs
lret
lods
jge
scas
cmp
loope
cmc
shl
mov
mov
xchg
mov
js
int3
inc
xor
filds
mov
push
pop
mov
sti
sub
ja
mov
mov
and
or
xor
pushf
test
fistpll
sub
push
mov
outsl
mov
inc
xor
push
mov
shll
add
push
and
lods
stos
xchg
iret
mov
fwait
sbb
jg
sbb
pop
jae
sbb
inc
and
inc
jno
jecxz
shr
movsl
mov
mov
icebp
sub
or
sub
inc
dec
lods
xchg
jecxz
add
sub
nop
and
movsl
fcmovu
push
arpl
stc
push
add
pop
inc
adc
mov
loopne
xchg
lret
ds
fmull
test
movsl
hlt
xchg
pop
mov
lret
iret
xor
stc
mulb
pop
mov
movsb
or
cltd
popf
out
movb
in
mov
in
inc
or
jg
xchg
shl
jb
arpl
stos
mov
xor
push
dec
ret
push
in
jne
ss
inc
xchg
fcomp
sub
dec
aam
xor
jle
mov
and
out
pop
scas
add
inc
shl
and
ss
push
or
clc
mov
inc
pusha
xor
movsl
sub
jle
out
fs
or
out
nop
xchg
sub
scas
test
mov
fisubrs
or
dec
xor
sbb
pusha
mov
mov
cmp
xchg
xchg
dec
jno
add
cmp
or
filds
adc
sti
or
dec
adc
xor
icebp
iret
xchg
in
call
mov
cwtl
adc
fs
int3
les
dec
mov
jg
sbb
ds
sbb
adc
mov
sbb
clc
out
dec
inc
stos
je
lcall
ret
sahf
push
rcrl
or
loope
push
push
ret
lods
mov
and
push
shlb
cs
sbb
out
xor
into
std
push
test
shlb
lock
ret
sub
aas
rclb
inc
pushf
jbe
add
push
mov
ret
fdiv
adc
mov
xor
subb
arpl
jecxz
movsl
adc
pop
jbe
cmc
xchg
mov
xchg
inc
out
adc
dec
push
sbb
jg
out
scas
inc
push
dec
fsubl
cmpsb
out
lock
aas
jb
fiadds
in
je
jp
lds
sub
sub
fidivl
fs
arpl
jecxz
mov
stc
mov
mov
fstpt
mov
cld
shrb
mov
jns
cmpsl
mov
xorb
inc
jecxz
add
loopne
aaa
pop
daa
pop
lahf
and
cmp
outsl
inc
or
andb
ljmp
cltd
cli
popf
call
shll
push
xchg
out
or
xor
outsl
or
mul
pop
hlt
and
loope
sub
mov
adc
inc
shlb
clc
nop
pusha
ret
or
mov
lret
lea
cmp
outsl
push
adc
inc
cmp
imul
pop
ret
loopne
nop
dec
loop
out
jbe
lock
in
push
push
sbb
jno
cwtl
cmpsl
arpl
inc
decb
ret
mov
ret
sbb
lret
inc
lret
add
inc
test
add
or
fistpl
out
dec
cmpsl
loopne
mov
test
xchg
hlt
or
xchg
mov
loop
mov
or
fcoms
icebp
sub
and
or
sahf
jge
stos
mov
bnd
clc
movsl
repnz
or
cmp
icebp
sbb
sbb
jge
xchg
int
lcall
pop
add
dec
pusha
add
sbb
in
push
sub
loopne
jns
pop
add
scas
jecxz
popa
sbb
pop
and
mov
jp
or
stos
xchg
mov
pop
gs
ud2
jle
into
cmpsl
jo
sbb
cmp
cmp
jmp
mov
iret
adc
sub
xchg
pop
inc
inc
test
in
dec
adc
pop
std
imul
pop
xor
icebp
mov
ja
pop
pop
int3
inc
xchg
xor
mov
stos
div
mov
pop
xor
pop
adc
mov
push
iret
ficompl
rcll
dec
push
ret
inc
popa
jns
shlb
outsb
fnstsw
adc
or
pusha
stos
add
and
std
outsl
push
adc
add
pop
fstpt
xor
push
xchg
addr16
idivb
aas
test
cs
sub
repz
adc
insl
frstor
nop
xor
aam
gs
enter
dec
icebp
sub
mov
adc
jge
lcall
mov
shlb
xchg
mov
add
ret
mov
imul
add
and
jmp
sub
mov
loope
insl
jno
enter
jnp
sahf
push
and
flds
ljmp
enterw
add
and
mov
ret
into
cmp
bound
mov
sbb
jp
into
jae
push
dec
push
in
mov
mov
notb
jb
inc
iret
in
pop
pop
inc
pop
cli
vmovd
int3
dec
or
mov
push
out
cmpsl
rcrl
mov
mov
test
lahf
es
shlb
jne
stos
dec
out
mov
mov
cmp
je
pop
and
leave
pop
lds
subl
dec
fsts
call
or
aas
js
add
in
ss
popf
push
inc
dec
mov
pop
inc
add
cmp
or
imul
into
push
push
rcr
cltd
rcll
push
cmp
xor
fucomip
xchg
sub
popa
fstps
jo
cmp
scas
lcall
outsl
add
add
fdivrs
arpl
xlat
mov
aad
cwtl
and
cmp
outsb
pushf
push
pop
lret
and
mov
ret
adc
or
icebp
xchg
push
in
test
out
adc
xchg
jle
pop
mov
or
and
add
adc
jge
arpl
std
mov
fwait
icebp
add
das
mov
cmp
scas
or
xor
cmp
push
pushaw
xchg
cmp
test
nop
outsl
mov
inc
mov
lock
nop
pushf
sbb
sub
xorl
adc
jae
xchg
je
out
popf
xor
gs
and
lea
cltd
arpl
ljmp
sub
mov
sarb
cmp
pop
aam
push
loopne
sti
pop
out
loope
lret
aad
jnp
call
push
enter
xchg
inc
ret
sbbb
stos
popf
sarl
stc
jns
test
push
inc
mov
stc
add
and
stos
and
test
into
jae
jae
lods
mov
js
scas
sti
fs
fisttpl
lahf
mov
inc
or
test
cwtl
cmp
leave
test
push
and
dec
test
lock
movsl
mov
jnp
add
mov
repnz
out
inc
jo
pop
xchg
push
ret
in
jnp
xchg
xor
cmpsl
dec
mov
mov
arpl
xchg
push
sbb
cltd
ret
iret
mov
imul
add
addb
imul
rcrl
dec
out
lods
mov
adc
in
sbb
test
mov
out
inc
stos
dec
pop
fistpll
lods
imul
inc
adc
insb
pop
cmp
stc
push
and
and
jb
loop
mov
aad
out
mov
wbinvd
out
cmp
loop
mov
push
pusha
inc
xchg
dec
push
ret
cmpsb
arpl
cwtl
and
dec
movsb
sbb
jae
xchg
jge
push
imul
nop
ficoml
popf
and
lock
jg
sub
push
inc
adc
and
fwait
push
jno
outsl
cmpl
sub
add
les
sti
and
or
aam
outsb
movsl
pop
or
out
pop
arpl
dec
jge
loope
sub
jbe
cli
or
aam
int3
arpl
out
out
push
add
popa
ja
mov
push
xchg
cmp
in
test
cld
or
clc
ljmp
loope
fnstsw
xchg
test
cmp
pop
sbb
pop
decb
push
repnz
push
scas
dec
lea
pop
dec
xor
out
jne
clc
cmc
push
adc
push
es
inc
jp
inc
xchg
outsl
imul
cs
mov
push
adc
inc
cmpsl
ss
mov
data16
int3
cmp
or
sub
inc
mov
xor
dec
or
jo
outsl
insl
adc
sahf
stc
addb
shll
lds
flds
sarl
out
pop
test
mov
imul
imul
daa
mov
in
repz
or
pop
clc
mov
and
cmp
jge
jbe
dec
xchg
push
fimuls
pop
leave
mov
pop
jo
movsb
ret
add
stc
mov
outsl
and
fcoml
lret
cmpsl
push
jns
adc
js
adc
xchg
in
xor
fldenv
push
sub
cmp
aam
outsb
xchg
cmp
mov
inc
test
test
imul
cmp
sub
data16
and
mov
mov
dec
xchg
pop
int3
add
jnp
les
sbb
mov
jbe
aaa
dec
sahf
and
mov
and
fsubl
sbb
test
dec
cmp
ret
imul
sbb
sbb
mov
ret
enter
scas
cmc
pop
pop
push
test
mov
mov
repnz
iret
inc
aas
fisubl
insl
movb
mov
sbb
fwait
jl
loop,pn
mov
pop
push
xchg
in
das
add
jmp
ss
aam
mov
dec
loop
aam
cmp
xor
cmpsb
nop
inc
xchg
testb
sbb
stc
pop
fnsetpm(287
cmpsb
test
shr
inc
inc
sub
mov
jae
imul
and
sar
sub
aaa
inc
push
jo
jmp
push
jecxz
aaa
je
and
cmp
push
imul
ljmp
mov
xchg
sbb
out
pop
adc
das
mov
xchg
sbb
add
das
mov
adc
jo
hlt
jnp
dec
inc
sub
js
aad
or
and
xlat
ss
in
stos
inc
ja
pop
jg
cmp
mov
mov
jnp
out
test
sti
sub
faddl
xchg
jb
mov
call
mov
mov
cmc
lcall
clc
setle
jecxz
js
fs
out
mov
push
insl
mov
or
cwtl
leave
push
adc
imul
das
insl
int
nop
fisubs
ja
mov
pop
stc
icebp
pop
loope
pushf
and
arpl
mov
pop
stc
and
cmp
loope
or
pushf
pop
dec
pop
adc
inc
and
xor
sub
xchg
mov
push
or
subb
pop
popw
add
jle
stc
mov
push
cmpl
aad
mov
nop
subb
xchg
testl
rol
scas
or
cmp
pusha
sub
mov
inc
ficoml
shlb
je
sahf
inc
filds
sub
pop
xor
add
dec
jp
and
faddl
xchg
mov
adc
sub
clc
inc
and
jae
mov
push
inc
mov
adc
inc
mov
pop
or
lock
lds
jmp
mov
in
test
jb
adc
sub
ss
sub
xor
adc
pop
pop
daa
xchg
xchg
lcall
pop
cmpsb
xchg
test
cs
push
inc
mov
xor
inc
or
push
sub
jb
xor
and
jmp
xorb
and
mov
inc
inc
pop
mov
lds
push
lds
call
out
xchg
outsl
clc
in
mov
xor
mov
jge
divl
clc
and
inc
in
test
lea
add
movsl
cwtl
imul
push
cmpsb
jb
fldl
int
imul
inc
sbb
sbbl
test
jl
dec
and
lods
add
mov
push
push
insb
mov
cs
jns
fildll
data16
push
rcrl
and
jno
xor
or
adc
sbb
mov
and
push
insl
call
xor
scas
je
sbb
out
mov
xchg
mov
cmp
test
jb
xor
cmpsb
int3
add
nop
cmc
mov
outsb
or
and
popf
lret
mov
dec
sub
fidivrl
aad
adc
stos
push
jmpw
mov
push
ret
sarb
loope
push
adc
xor
rclb
lods
idivl
push
inc
mov
mov
cmpsb
pop
das
ljmp
test
outsl
or
or
shr
dec
mov
inc
adc
std
ja
sub
add
mov
sbb
stc
mov
test
dec
in
gs
js
test
out
stos
mov
scas
jns
and
push
rcl
mov
les
jp
div
inc
or
ret
cld
mov
push
adc
xorb
push
mov
lahf
out
jg
mov
push
fildl
push
mov
lsl
jmp
jmp
in
xor
mov
and
xorb
pop
out
sbbl
adc
sub
xchg
jmp
pop
aam
xlat
mov
jge
sbb
lcall
lods
test
adc
ljmp
or
in
xchg
cli
or
add
bound
mov
enter
mov
sub
int
push
subb
pop
mov
add
out
xor
sbb
push
mov
mov
cmp
in
cltd
decb
test
pushf
jne
xchg
inc
cmpsl
push
leave
outsb
sbb
pop
and
inc
sbbb
lahf
in
xchg
mov
sub
mov
xchg
mov
repnz
xor
sbb
insb
mov
cs
test
mov
sbb
xor
ret
js
adc
add
xchg
pop
mov
pop
icebp
mov
leave
sbb
in
cmc
std
scas
pop
xchg
adc
or
cs
mov
cmp
out
sbb
mov
mov
sub
movsl
lret
std
adc
adc
sbb
mov
pop
add
dec
inc
sub
xchg
iret
lcall
sbb
loope
movsl
lret
jb
cvtdq2ps
ljmp
mov
pop
ret
mov
or
test
dec
mov
mov
mov
psubsw
lea
in
in
push
and
push
adc
lock
adc
pop
fcoms
mov
xor
adc
inc
jecxz
xchg
lahf
cs
push
clc
cs
mov
or
dec
mov
roll
jge
pusha
ja
or
adc
push
dec
cmp
mov
pop
jg
ret
mov
pop
xchg
ss
jae
lahf
cltd
clc
icebp
add
adc
xchg
test
xor
or
xor
adc
in
or
fstpt
push
xor
cld
xchg
shl
mov
out
pop
mov
xor
bswap
xor
enter
mov
je
cli
outsb
rcrl
mov
push
mov
inc
iret
rcll
xchg
push
loop
pop
mov
dec
imul
add
pop
fldt
push
add
sbb
sub
enter
mov
aam
loopne
jns
xor
lcall
pusha
add
adc
cmpsl
mov
mov
jno
mov
sbb
ljmp
shl
push
das
mov
into
jmp
jbe
out
jp
fisubs
mov
cmp
and
test
ja
or
lcall
adc
xchg
loop
fidivrs
stos
mov
das
mov
enter
push
lcall
aaa
loope
xor
testb
add
sub
or
inc
mov
inc
xchg
das
mov
dec
adc
es
pop
mov
mov
std
aam
icebp
sub
jno
or
scas
jne
mov
xchg
es
enter
jle
mov
stos
rcll
xchg
xchg
mov
adc
ja
sbb
push
jmp
fnstcw
and
int3
fldenv
jo
jo
dec
push
cmp
cmp
mov
arpl
inc
and
bound
sub
push
lods
push
mov
jecxz
insb
sub
mov
orl
mov
mov
xchg
pop
jge
inc
push
cmp
mov
xchg
iret
js
mov
sbb
adc
mov
sbb
jmp
sub
mov
sub
jl
and
mov
jno
out
cs
push
repnz
shrb
jno
je
mov
dec
pop
cmp
imul
sub
xorl
mov
pop
or
push
loop
sub
jecxz
push
cmp
or
insb
inc
sbb
andl
and
cli
popf
shl
and
lods
ljmp
sbb
sti
cmp
mov
pop
jecxz
jb
sub
popa
out
jp
out
lcall
xchg
ds
or
xchg
jmp
ds
das
fisubrl
or
test
sub
push
and
insb
scas
insb
sbb
mov
repnz
jecxz
jne
lret
call
inc
ret
sti
mov
jmp
decl
scas
inc
xchg
dec
enter
les
hlt
jbe
data16
and
xor
inc
es
push
fs
je
test
xchg
movsb
mov
les
hlt
jbe
data16
and
xor
inc
es
push
fs
je
test
fadd
mov
les
hlt
jbe
data16
and
xor
inc
and
aaa
je
test
xchg
loopne
mov
les
hlt
mov
cltd
mov
inc
int3
scas
stos
jmp
imul
pop
jae
or
cmp
std
mov
cli
test
push
fimull
sub
dec
or
sub
dec
xor
lds
mov
cmp
sub
jp
push
pop
pop
dec
das
mov
lods
out
scas
cli
cltd
fistpl
sub
sbb
arpl
jne
cmp
fdivl
addl
ja
popa
mov
jb
outsb
aad
in
mull
cmpsb
repnz
add
lea
push
fwait
rol
add
inc
lods
das
sarl
add
mov
and
pop
popa
inc
pop
pop
lret
insl
or
pop
adc
xchg
or
dec
push
jne
stos
mov
inc
loope
mov
mull
cmpsb
int3
shl
into
mov
sub
and
xchg
rolb
push
pop
sbb
mov
loopne
push
lds
idiv
loope
pop
sbb
or
sub
dec
mov
iret
mov
cli
xchg
ljmp
insl
dec
adc
xor
mov
pop
lret
jmp
ljmp
dec
sub
jns
dec
xor
jg
outsl
pop
fs
mov
mov
lahf
mov
or
call
sub
aas
popa
push
pop
or
stos
std
lcall
mov
cmp
jge
dec
or
sub
dec
sbb
lcall
mov
cmp
sub
dec
imul
aad
sub
cmp
cmpsl
dec
mov
xchg
arpl
mov
add
movsb
shlb
sbb
xchg
in
ja
call
add
jecxz
adc
xchg
enter
pushf
sbb
mov
pusha
xchg
inc
pusha
cltd
lret
sub
test
stos
sbb
setbe
je
push
sahf
sub
push
mov
xor
cmp
dec
and
push
and
xchg
push
sbb
hlt
pop
add
in
inc
fdivp
inc
test
cld
data16
in
push
sbb
ret
in
iret
mov
mov
sbb
dec
pop
push
aad
push
inc
pushf
pop
outsl
xchg
mov
adc
mov
xchg
movsl
test
mov
mov
push
add
pop
mov
mov
arpl
icebp
sub
dec
xor
or
mov
lahf
adc
repnz
sahf
jg
adc
dec
outsl
iret
ja
out
cmpsb
repz
aad
dec
repnz
lret
mov
jnp
out
sub
lds
ljmp
xchg
cwtl
out
push
out
inc
jbe
insl
mov
in
aaa
sbb
mov
jnp
jmp
mov
lock
inc
push
mov
dec
dec
mov
mov
jns
ret
xchg
setae
nop
fidivs
sbb
fcmovbe
cmp
cmp
push
inc
pop
mov
leave
jbe
inc
out
ret
adc
push
rcrb
out
sbb
or
cmpsl
lock
push
or
aad
sbb
pop
imul
jne
jno
xor
loop
movsl
mov
inc
cmp
fwait
sub
ljmp
push
mov
cmpsb
pop
jb
fcoml
mov
aaa
inc
xchg
xchg
xorl
sub
inc
adc
or
fcompl
and
repnz
dec
pop
stos
pop
pop
push
push
scas
pusha
movsl
stos
add
ss
mov
mov
cwtl
inc
lods
icebp
mov
inc
mov
or
hlt
sbbb
add
pushf
decb
inc
mov
or
inc
popa
inc
push
pop
xchg
mov
xlat
cmp
cmp
ficoms
inc
sub
push
movsl
jbe
ficoml
adc
inc
sub
xchg
push
cmc
movl
mov
aas
fmull
fcompl
pop
push
inc
das
adcb
fmull
xchg
inc
jb
or
aaa
shl
push
push
mov
add
sub
mov
shlb
inc
gs
or
cmp
mov
push
xrelease
push
negb
add
xchg
mov
push
aad
sbb
lahf
mov
push
daa
mov
sub
push
imul
xor
lret
inc
in
xchg
es
fs
repz
dec
sbb
xchg
xchg
dec
mov
or
jo
xchg
add
clc
pop
jb
mov
xchg
fwait
or
cli
pop
mov
jo
sub
dec
aas
xchg
mov
je
inc
pop
mov
rcl
cmpsb
dec
dec
dec
out
sbb
xlat
popf
fimull
jp
in
fisttpll
pop
cmpl
clc
je
xchg
sbb
ds
aad
mov
lock
xor
mov
data16
adc
sub
dec
sbb
jnp
mov
jle
dec
mov
lods
movsl
dec
add
movsl
bound
scas
sbb
or
jbe
pushl
xchg
mov
lea
fs
xor
inc
sub
dec
push
sti
test
les
insb
lahf
je
data16
or
scas
ja
repz
dec
pop
std
or
cmpb
hlt
shl
test
addl
inc
mov
jle
ret
mov
addl
inc
daa
sub
scas
adc
mov
pop
cld
inc
fsts
push
ror
sub
pushf
je
inc
lcall
addr16
jo
les
imul
mov
fwait
roll
lea
addr16
ja
mov
push
mov
aad
push
rorb
je
xchg
adcl
gs
mov
cli
sub
out
cmp
sbb
mov
push
pop
sbb
xchg
mov
stos
mov
xchg
sti
mull
mov
stc
push
lea
cmp
mov
popf
xchg
adc
push
mov
into
cltd
stos
jno
hlt
ret
dec
xlat
rorb
pop
nop
ds
mov
cli
xor
dec
dec
fwait
mov
mov
sbb
fdivrp
xchg
mov
jecxz
fdivs
out
xchg
adc
clc
mov
popl
xor
andl
inc
cs
jb
mov
mov
fcomip
cmp
mov
bound
xor
jmp
mov
ss
stc
push
xlat
in
lds
cmp
mov
mov
pop
cmpsl
jo
outsl
sub
dec
lock
push
or
clc
or
mov
aam
mov
pop
mov
lds
rcr
sub
adc
mov
pushf
pop
sahf
push
emms
in
mov
int3
mov
shll
cmp
and
test
and
in
push
add
lea
jp
xchg
lds
mov
out
mov
js
lahf
push
mov
pushl
insb
push
out
ret
jae
mov
jne
inc
xchg
mov
add
xchg
dec
dec
lret
cmp
mov
adc
cmp
lcall
xchg
scas
xor
jp
xorl
xor
xchg
std
js
sarl
ljmp
test
jg
ret
mov
sbb
jno
fildl
ret
adcl
pusha
stc
ds
loopne
outsb
test
ss
and
popa
ds
gs
dec
stc
mov
daa
lcall
xchg
xlat
repz
jl
xor
dec
iret
imul
loope
mov
roll
jge
jne
jns
data16
orb
stc
xchg
icebp
test
jns
loop
test
je
and
xchg
jmp
mov
mov
add
sbb
dec
xchg
xchg
mov
sub
je
dec
out
or
cmpsb
and
cltd
je
mov
fwait
push
xor
adc
mov
cmc
aam
ja
mov
fdivr
enter
and
lods
loop
in
js
dec
inc
inc
jns
adc
sbb
mov
mov
cmp
cmp
daa
xchg
dec
add
inc
jb
scas
les
add
add
in
aaa
sub
test
popa
iret
aad
out
aam
call
lea
add
loope
pop
adc
adc
xor
std
sbb
mov
movsb
outsb
bound
mov
outsl
or
mov
adcb
push
and
js
test
mov
test
pop
and
into
iret
lods
sub
dec
mov
hlt
add
cld
pop
pop
cwtl
sub
push
mov
rcl
mov
mov
dec
push
std
arpl
push
aas
sarb
insb
add
cwtl
xlat
lock
jo
ljmp
das
xor
xor
enter
les
js
sub
xchg
ret
pop
or
fbstp
in
inc
or
pushf
mov
jp
xchg
jne
mov
ja
cs
stc
jp
movsb
pop
dec
xchg
insb
pop
daa
inc
xorb
int3
dec
rorl
mov
jp
dec
cld
jno
mov
add
ds
repnz
out
mov
aaa
jge
pop
jno
in
loope
mov
pusha
dec
hlt
push
xchg
leave
adc
jns
jg
xchg
jns
push
addb
aas
xchg
popw
jmp
jl
mov
pop
fbstp
fwait
data16
stos
mov
je
ljmp
mov
jne
sub
fcompl
loopne
pop
divl
sub
sub
sbb
lods
mov
addr16
adc
daa
rorb
or
test
cmp
movq
lcall
fwait
and
xor
cmp
mov
xchg
jns
movsb
xchg
xor
popa
inc
jp
inc
or
movsl
jo
cld
xchg
or
push
cs
and
mov
leave
adcb
add
dec
cmc
in
in
mov
sub
mov
xchg
in
xchg
sbb
stos
js
and
into
cmp
xchg
cmp
pushf
ss
lahf
cs
psubusw
sub
mov
lcall
test
cmp
out
sub
repz
loope
clts
or
and
xor
fildll
lret
int3
mov
jbe
mov
cmpsl
jnp
mov
sub
jae
mov
pop
addr16
mov
out
insl
hlt
imul
pop
ja
sub
mov
rcrb
mov
lea
xor
sub
repz
inc
test
fisttpll
sbbb
jns
fcompl
lret
lcall
and
add
lds
das
jb
mov
xchg
ret
ret
aam
xchg
push
cmp
jl
dec
xor
dec
or
xor
pop
aad
sub
data16
add
andl
xchg
add
insb
add
subb
jo
negl
pop
aaa
sub
jne
pop
jne
mov
sbb
mov
xlat
mov
leave
sahf
push
pop
ret
jg
dec
mov
subb
push
add
or
pop
xor
cmp
jnp
hlt
xor
xchg
int3
lods
push
mov
into
add
ja
ret
push
ss
mov
cltd
or
add
sub
add
addl
jle
inc
and
or
pop
roll
jg
jne
scas
mov
in
sub
lods
xor
sub
pushf
pop
imul
leave
cltd
ds
rcrl
call
sub
hlt
lods
popa
cmpsl
jle
insb
and
js
mov
sub
scas
nop
out
push
rorl
add
jb
sub
sub
cli
fistl
das
out
or
and
int
jb
rcl
repnz
or
xor
push
xchg
xchg
xchg
in
rcll
inc
icebp
test
mov
add
icebp
outsb
cli
and
cmp
cmp
jl
lods
enter
dec
inc
js
xor
xor
hlt
pop
fcmovnbe
pop
pop
mov
jecxz
sbb
roll
push
out
sub
xor
mov
xchg
inc
std
test
cli
bound
mov
sub
rcr
outsl
push
shl
lret
shl
mov
je
fimull
inc
outsb
scas
mov
jb
out
inc
sti
sub
mov
sahf
xor
int
scas
outsl
jne
scas
rcrb
dec
inc
mov
aam
sub
rorl
cmp
enter
sarl
mov
push
lods
or
inc
xchg
xor
xor
test
dec
and
xlat
xchg
mov
xor
jno
pop
push
cs
or
mov
lret
mov
test
adc
scas
xchg
cmp
push
push
es
mov
mov
xor
ret
loope
mov
sti
aas
or
cmp
popa
add
mov
rorl
into
push
int
sbb
adc
mov
inc
inc
pop
jmp
and
inc
and
push
mov
lahf
pop
xchg
mov
mov
enter
xor
mov
adc
bound
jae
or
sbb
sbb
sbb
and
popf
adc
filds
lea
negl
jg
rcl
leave
mul
lods
dec
ljmp
push
and
cmp
and
stos
mov
roll
push
mov
sub
cmp
xor
mov
xchg
out
cmpsb
sti
mov
rcll
jne
push
mov
stos
xor
dec
imulb
call
ret
cmp
loopne
push
xchg
cwtl
pop
pop
mov
jno
mov
sbbb
add
pop
pop
scas
mov
mov
mov
lret
or
mov
lock
call
add
pop
aas
inc
cmp
fcoml
fildll
add
repnz
popf
cli
mov
xchg
ja
cmp
in
fstp
or
push
dec
neg
or
inc
pop
sbb
outsb
xchg
pusha
sub
clc
fmul
push
push
mov
cmp
and
ret
in
dec
js
push
dec
mov
decb
icebp
push
cmp
cmpb
test
mov
or
nop
hlt
dec
add
cmp
dec
pushl
cmp
mov
outsb
fld
aas
pushf
add
fmuls
add
push
xchg
or
lret
in
mov
push
lods
js
mov
call
loopne
xor
and
sub
pop
mov
cmp
xchg
or
pop
aad
add
and
mov
sbb
repnz
cmp
adc
sarl
sti
mov
pop
xchg
outsb
jbe
jmp
mov
les
adc
pop
sbb
les
pop
lret
mov
loope
lcall
pop
inc
mov
adc
adc
adc
fwait
cli
in
sbb
pop
dec
cmp
sub
cmp
mov
jo
lcall
jno
pop
int3
sbb
test
insl
rep
jnp
int3
test
push
es
js
inc
xorb
cmp
insl
call
test
fldenv
cmp
hlt
cli
pusha
nop
ja
int
mov
mov
xchg
outsl
dec
cmp
ja
movsb
int
mov
in
out
popa
addr16
call
fwait
or
sti
lahf
sbb
movsb
cld
int
sti
loop
stc
iret
sub
or
lods
subl
lea
cmpsb
mov
and
inc
inc
imul
nop
add
mov
mov
sbb
repz
loopne
out
movsb
adc
push
xchg
xchg
jge
push
rcl
xlat
push
fcmovb
push
fdivr
je
xor
push
sub
popa
dec
outsb
fistps
not
sti
mov
inc
scas
dec
cmpb
cwtl
mov
cmp
or
push
mov
cmpsl
ljmp
xchg
xor
stc
pop
adc
sbbl
mov
dec
inc
pop
add
lock
pmaxsw
mov
lcall
stos
sti
jmp
loopne
fwait
xchg
ret
sub
jae
enter
sub
andl
jecxz
sarb
jno
add
pop
pop
divb
lea
call
sbb
int3
mov
stos
mov
ljmp
mov
mov
jo
test
pop
adc
cwtl
insl
mov
out
xchg
stos
iret
inc
cmc
xchg
push
les
xor
dec
or
rcll
cmpsb
xor
adc
hlt
cmp
lods
mov
in
and
insl
inc
pop
fsubp
mov
xchg
nop
cmc
pop
test
lods
movsb
xor
inc
sbb
addr16
stc
add
mov
and
jmp
adc
rclb
js
pop
lods
xor
pop
rclb
xchg
pop
loop
sahf
mov
daa
pop
mov
movsl
outsl
std
ret
mov
mov
mov
sbbb
pop
xor
jb
pop
es
or
mov
daa
daa
fistl
out
test
xchg
or
cmpsb
and
inc
fbstp
push
stos
enter
pop
dec
dec
enter
pop
iret
jg
cs
scas
add
push
jb
dec
bound
out
xchg
lea
jmp
outsl
fstl
cmp
lcall
pop
inc
push
xchg
out
add
and
push
jo
fidivs
out
cmpsl
mov
push
lret
dec
sahf
xor
imul
sahf
pop
std
xchg
fs
cmp
add
cs
lret
loope
cmc
add
mov
fsin
lods
adc
cltd
jge
outsb
mov
imul
int
adc
into
xchg
cli
sub
mov
repz
movsb
add
dec
dec
ficompl
dec
lret
pop
and
pushf
jbe
pop
icebp
jecxz
popa
leave
push
dec
mov
sahf
dec
aaa
add
xchg
cmp
add
es
outsb
xchg
cmp
dec
mov
loopne
ds
sbb
push
sbb
stc
rcl
add
jg
repz
aad
insb
mov
sub
sbb
insl
ss
ja
lahf
outsl
shl
push
aam
sbb
cmc
stos
push
lods
or
sti
xor
inc
xchg
mov
mov
sbb
add
push
and
cmp
pop
jge
mov
mov
loopne
and
xchg
xchg
movlps
fldenv
fs
sbb
out
test
dec
insb
popa
xor
jne
mov
jns
xor
mov
inc
sarb
push
aaa
fucomi
adc
mov
pop
dec
pop
mov
pop
int3
inc
mov
pop
sub
rclb
ljmp
adc
sbb
rcr
test
push
movl
fsubl
xor
lods
mov
idivl
fwait
jmp
mov
xor
push
jmp
jb
xlat
adc
insl
lea
sbb
lock
push
pop
jae
dec
mov
add
aam
jecxz
arpl
imul
jb
jle
ss
sbb
push
imul
inc
ds
fnstcw
hlt
sbb
cld
sbb
sbb
std
in
jnp
bnd
insl
mov
lcall
lods
aam
aas
repz
xchg
cltd
xchg
add
jnp
xchg
mov
xchg
pop
arpl
push
xor
mov
iret
sub
mov
hlt
sub
pop
fdivr
add
dec
jnp
pop
mov
fildll
sub
lods
int3
adc
repnz
jle
fs
mov
pop
adc
sbb
mov
lret
jbe
cmp
jl
sar
movsb
loope
jno
cs
into
cmpsb
or
mov
fldenv
add
hlt
sbb
cmp
je
ljmp
in
inc
shrb
mov
and
subl
insb
pop
cwtl
pop
test
psubd
addb
cltd
ja
push
and
mov
xor
lret
rol
cli
int3
push
dec
addr16
mov
fdivrs
jae
int
aam
cwtl
jae
int
cmp
cmpsl
push
stos
adcb
pop
jmp
push
pop
push
pop
dec
sarb
mov
jle
inc
je
in
iret
mov
mov
scas
mov
cltd
aaa
into
xchg
sub
cmpsl
mov
add
and
cmc
addl
gs
jb
dec
pop
lds
mov
hlt
ljmp
sahf
mov
in
popa
mov
pop
sub
xchg
shlb
jb
es
pop
pop
insl
push
out
jae
add
test
hlt
in
push
jns
sbb
test
cmpsb
add
scas
sub
mov
movsb
mov
stos
cmpsl
mov
mov
repnz
mov
popa
adc
notl
int
push
ret
push
xorl
fisttpll
lret
mov
pop
dec
inc
or
imul
adc
ljmp
dec
sbb
cmpsl
movsb
mov
pop
ret
push
dec
pop
jmp
insl
add
and
insl
dec
xchg
test
stc
lret
adcl
mov
push
pop
iret
mov
sti
in
mov
cmp
inc
lock
jnp
mov
stos
fistl
xchg
fwait
test
mov
or
aam
out
dec
into
jge
hlt
mov
jmp
faddl
xlat
pop
push
pop
xchg
jns
sti
push
nop
lods
es
push
pop
or
ja
xchg
lea
mov
xchg
in
pop
push
or
xchg
inc
mov
mov
arpl
xor
sub
aad
mov
dec
call
mov
imul
mov
addr16
or
and
cmp
mov
cmp
sub
sub
lods
inc
mov
movsb
iret
in
cmp
adc
pushf
ss
pop
push
jae
push
jle
into
inc
and
dec
sbb
jae
lea
mov
or
shlb
or
inc
leave
ret
rclb
mov
cltd
loopne
outsl
pusha
mov
sarl
sbb
push
mov
mov
lea
add
adc
push
xchg
xlat
jmp
int3
cmpb
aam
stc
cmp
sub
mull
sti
or
sti
jl
mov
in
xlat
insb
je
push
sub
or
aam
fucomip
and
nop
cmp
mov
mov
ret
push
lds
pop
in
aas
gs
inc
pop
mov
call
xor
test
insl
mov
jnp
inc
sub
and
jecxz,pt
adc
fld
pop
xchg
fmuls
inc
dec
mov
inc
pop
insl
mov
dec
imul
nop
je
cmpsl
cmp
aas
addl
stos
xor
or
adc
loopne
pop
cmp
pop
xlat
das
sbb
inc
insl
adc
pop
fidivrs
push
pop
fdivrs
imul
stos
mov
repnz
lcall
add
inc
loop
sti
outsb
outsl
call
push
mov
scas
cmp
shrl
sub
push
mov
jnp
jnp
stos
sub
fs
aas
clc
mov
jge
dec
or
sub
dec
sbb
lcall
mov
cmp
jge
dec
or
sub
dec
sbb
lcall
mov
cmp
jae
push
or
sub
dec
sbb
lcall
mov
cmp
or
fimull
push
push
xor
mov
and
xor
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
mov
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
call
push
mov
call
xor
leave
ret
aaa
lea
mov
movsl
test
sbb
cmp
sub
push
insl
push
jge
lea
mov
in
xlat
mov
add
sbb
addr16
ja
inc
insl
push
jge
xchg
mov
xchg
test
daa
or
jb
add
push
sub
cmp
xlat
shll
insb
add
in
cmpsb
xlat
xor
or
inc
imul
add
lea
pop
repnz
in
out
clc
cs
adc
jecxz
jge
ret
mov
dec
popf
scas
test
adc
loop
inc
jge
dec
fisubs
sbb
fld1
mov
les
cmp
mov
cmpsl
push
jnp
out
fcmovne
daa
cltd
xlat
js
in
icebp
jecxz
sar
mov
jno
fcoms
pop
insl
pop
or
aam
or
or
xlat
xchg
dec
icebp
inc
loop
aad
test
pop
dec
ret
clc
pop
jb
jmp
pop
inc
aas
js
in
adc
jb
lcall
outsl
push
jnp
lcall
out
neg
in
xlat
in
or
pop
and
push
ja
inc
ja
jl
repz
jmp
movsb
iret
xchg
mov
dec
bound
pop
adc
cmp
add
adc
in
hlt
repz
rolb
cltd
scas
iret
jne
pop
js
dec
jb
sub
add
pop
or
rorl
mov
cmpsb
neg
in
xlat
std
daa
or
pop
cmp
inc
insl
push
jge
lea
mov
in
xlat
std
daa
or
pop
cmp
inc
insl
push
jge
lea
mov
and
cmp
pop
xor
lahf
aas
ret
repz
ss
add
push
sub
push
and
loopne
jmp
mov
mov
sbb
mov
jns
jge
lds
stos
cmpsb
fdiv
les
insb
mov
mov
in
xchg
cmp
or
loopne
push
fwait
cmp
test
pop
mov
int3
stc
add
mov
push
and
adc
push
mov
dec
jnp
in
sub
mov
call
jae
and
es
pop
cmpsl
xorb
stos
jmp
in
ror
jnp
or
adc
in
negb
int3
fwait
lahf
es
pop
or
mov
and
rcrb
in
rcrb
pop
push
cmc
jecxz
es
shlb
jns
gs
fistps
loope
ljmp
pop
xor
scas
sbb
push
icebp
sbb
pop
pop
sti
adc
dec
cmpsb
push
repnz
sbb
mov
fnstcw
fsubl
adc
out
sahf
mov
lret
iret
xor
sub
pop
fnstsw
addr16
dec
bound
cld
cs
shr
fnstcw
ret
lret
orl
sbb
lds
mov
imul
and
adcb
cmpsb
sarb
cs
imul
hlt
xchg
cmp
aad
push
lods
sub
adcb
sbb
mov
jo
adc
call
out
jge
and
jb
or
mov
push
ret
sbb
xlat
adc
out
add
jmp
adc
sar
mov
inc
mov
mov
or
cmp
loop
sbb
aad
cwtl
test
sub
fiadds
shl
jle
jno
js
jne
jns
nop
lods
add
cmp
xchg
enter
aas
repz
out
sub
inc
les
mov
mov
insl
fs
mov
lcall
push
inc
adc
mov
sarb
fnstenv
dec
daa
push
push
sub
clc
dec
loopne
jg
xchg
xchg
dec
and
ja
div
popf
and
mov
jmp
add
fimull
push
mov
test
lcall
out
xor
out
xor
scas
das
out
mov
fidivrl
lods
mov
scas
and
add
push
fwait
jp,pt
pop
adc
ficompl
cmp
loopne
pushf
xor
sub
sub
or
call
mov
ret
push
jae
add
adc
pop
cmp
cs
xor
ret
jbe
mov
shll
filds
out
xchg
test
popf
jnp
jae
mov
add
pop
sub
inc
push
call
je
notl
andb
pop
rolb
mov
js
sar
enter
sbb
push
int
xor
sub
in
hlt
stos
arpl
dec
and
cmpsl
clc
mov
stc
and
push
and
popf
je
adc
aaa
das
adc
inc
out
iret
mov
xchg
cmp
dec
push
mov
imul
pop
xchg
xor
dec
or
dec
lock
or
aas
ljmp
shl
aad
sbbl
fnstcw
adc
mov
fmul
mov
and
lods
mov
sbb
sbb
dec
iret
cmc
mov
xor
or
xor
les
sbb
mov
mov
idiv
xchg
dec
sub
stos
je
pop
xor
or
std
rcrb
dec
std
in
and
fldl
jl
xchg
sarb
sarb
adc
icebp
or
jb
pop
out
dec
xor
rorb
or
jne
addb
mov
xor
ret
cmc
add
mov
into
push
cmp
inc
test
das
and
mov
out
jp
pop
xchg
movsl
push
ljmp
sarl
inc
mov
lcall
mov
jecxz
mov
lds
movss
cltd
cs
je
lfs
push
push
gs
lds
cli
jle
dec
or
inc
xor
push
sub
mov
lret
insb
dec
xlat
inc
fwait
sbb
test
jp
in
subb
jl
clc
pop
and
pop
pop
mov
fmul
fsubrl
mov
shl
xor
pop
inc
imul
xchg
ja
loope
sub
hlt
push
pop
iret
xor
fwait
cmp
movsl
push
inc
jg
clc
xor
js
mov
pop
out
repnz
xor
mov
stc
mul
pop
fwait
mov
mov
adc
addr16
out
repnz
lret
iret
add
add
lahf
sbb
push
ficompl
jo
roll
stc
inc
repnz
or
push
outsl
pusha
push
cmp
ds
dec
aad
adc
pusha
inc
mov
addr16
add
adc
mov
mov
xchg
sub
dec
mov
test
in
lds
mov
fwait
nop
shll
into
jo
pusha
je
test
adc
jno
dec
dec
mov
in
pop
jne
imul
xor
test
and
sbb
adc
fs
push
add
ja
push
mov
mov
xor
mov
dec
push
sub
aaa
lock
inc
dec
inc
xlat
pop
sub
movsl
call
adc
adc
insl
push
ud0
fwait
pop
inc
insl
xchg
cmp
adc
push
iret
jno
fcompl
mov
rcrl
push
xor
fnstsw
push
shll
dec
outsl
add
loop
lcall
cmp
popa
xchg
outsb
mov
scas
das
cmp
adc
push
in
adc
push
xchg
pop
aad
jmp
lahf
call
in
mov
scas
sbb
addl
adc
cltd
add
xchg
adc
push
xor
mov
jno
mov
jbe
push
and
sbb
lahf
push
cmp
popf
mov
or
xchg
es
int
and
lods
jl
iret
aas
jnp
mov
dec
rcll
adc
sbb
fiadds
rclb
mov
fs
in
pop
in
inc
or
mov
sub
rcrl
xorl
pop
cld
adc
fdivrl
call
push
cmp
sub
aam
mov
jge
push
imul
fidivrl
insl
inc
mov
or
loopne
cwtl
fadds
roll
rol
pop
push
popa
cmpl
insb
movsl
ss
xchg
hlt
leave
in
mov
sub
mov
fs
mov
cli
out
movsb
push
sub
arpl
movsl
xchg
cs
lods
cmp
cmp
dec
jge
cmp
div
js
lret
fiadds
mov
sbb
xchg
movsl
jno
mov
enter
aaa
pop
cmpsb
pop
lret
sysenter
mov
push
in
test
cmpsl
dec
fs
inc
leave
movsl
ds
pop
cmpsl
incl
mov
into
xchg
sub
lds
rolb
mov
add
loop
outsl
add
and
lds
add
add
in
push
xchg
dec
or
push
push
push
in
movb
mov
or
imul
adc
rcr
in
cltd
pop
mov
and
push
sbb
push
lock
outsb
les
mov
or
pop
sahf
notl
aad
cmpb
sbb
mov
jnp
sahf
mov
cmpsb
ss
push
cmp
inc
or
pusha
test
sub
pusha
push
mov
shrl
stos
sub
jmp
xchg
pusha
fisttpll
jge
mov
push
dec
jno
loope
jnp
add
push
iret
scas
cmp
mov
fcompl
sbb
shr
aam
mov
cmpsl
lods
fisubrs
and
pop
sub
mov
push
pushf
out
aaa
adc
and
aaa
hlt
add
cmp
insb
sub
jno
xchg
je
popl
inc
or
lcall
lret
mov
incb
mov
test
icebp
out
mov
aas
sbb
std
dec
idiv
xchg
jmp
or
enter
es
or
jbe
jae
sub
jb
pop
adc
std
mov
fiadds
rcrb
sbbl
clc
mov
jmp
inc
call
push
adc
ds
mov
imul
lock
dec
lcall
ss
adc
sub
sub
xchg
jl
mov
call
pop
movsl
dec
inc
and
stos
add
sbb
mov
push
subl
mov
or
out
ljmp
out
lret
mov
call
xchg
jo
dec
adc
mov
shl
cld
aam
cmp
js
sarl
sub
and
clc
icebp
jae
pusha
push
loopne
cmpb
pop
mov
jns
mov
in
rolb
mov
add
jb
inc
mul
push
daa
adc
pop
sub
inc
mov
rcll
aas
jae
scas
repz
repz
int
leave
sub
add
jae
push
icebp
pop
pop
aas
lcall
mov
pop
sti
and
xor
add
dec
cmc
sub
jnp
sub
repnz
jle
adc
sbb
jae
ljmp
loope
loop
dec
pusha
sti
ja
gs
inc
in
shll
add
push
fdivs
cmp
inc
push
mov
sarl
jecxz
shrb
fs
xchg
push
std
nop
popa
out
bound
mov
hlt
xchg
insl
sbb
pop
xor
lock
dec
inc
push
or
out
jae
lahf
sbb
cs
mov
aam
cmp
add
lahf
jnp
and
inc
out
dec
adc
xor
jns
xlat
push
imul
mov
lds
adc
fwait
pop
pusha
mov
fwait
sbb
xor
and
das
int3
lods
jmp
dec
xlat
cmc
jb
cmc
out
adcb
adc
lea
aas
fdivr
inc
sub
dec
inc
mov
js
cld
aas
and
call
negb
lods
dec
lods
rcrb
push
jmp
or
aad
sbb
sbb
pop
subl
add
test
or
adc
inc
daa
cld
pop
inc
xor
or
jmp
lea
repnz
sahf
sbb
pop
or
cmp
mov
loope
mov
das
dec
mov
mov
jg
or
ret
inc
dec
sbb
mov
orb
add
adc
iret
enter
push
movsl
frstor
stos
loope
xchg
add
inc
mov
and
arpl
jge
fstpl
int3
out
fldenv
gs
cwtl
outsb
mov
mov
cwtl
inc
pop
enter
inc
lea
sbb
jnp
xor
jnp
inc
inc
cld
xchg
jg
js
sub
xchg
int
mov
xor
outsl
lods
xlat
js
mov
xchg
push
push
test
mov
jmp
loop
cmp
pop
addl
and
out
or
mov
mov
sbb
xchg
xlat
out
mov
pusha
push
cmp
push
pop
dec
jl
sbb
aam
jmp
mov
jge
out
inc
xlat
out
out
stos
imul
xchg
aam
fsub
pop
stos
and
outsl
adc
inc
xchg
fidivrl
movsb
mov
xchg
mov
call
inc
xchg
lret
xchg
push
jb
sti
cmpsb
cmp
rolb
add
outsl
into
icebp
push
nop
aad
pop
pusha
sbb
mov
mov
bound
out
popf
cltd
push
xor
icebp
popf
ja
repz
xchg
xchg
leave
test
in
lock
cmp
nop
mov
adc
cwtl
sbb
dec
rcrl
xchg
hlt
cwtl
fists
add
inc
dec
mov
sbb
ljmp
mov
sub
lods
pop
xor
adc
in
aaa
and
add
push
sahf
loope
push
add
lcall
js
repz
add
jns
dec
push
movb
sahf
xor
lds
mov
dec
push
popf
mov
scas
ds
imul
xor
jmp
pop
pop
jne
mov
ja
out
push
sub
xor
lods
imul
les
jp
xchg
add
ja
jg
paddsw
out
std
jg
sti
leave
stos
popf
fwait
sub
mov
jne
int3
ret
jmp
cmp
leave
lock
pop
shrb
cwtl
or
pop
push
push
fists
sbb
jmp
pop
and
pop
decl
or
dec
mov
xor
pop
push
xchg
aaa
ficoml
repnz
hlt
push
das
mov
movsl
mov
mov
clc
sbb
aaa
iret
push
arpl
inc
and
push
shlb
imul
inc
mov
xor
stos
lahf
jns
xor
push
xor
xchg
inc
and
in
push
xchg
adc
shll
bound
addr16
addr16
adc
inc
jnp
jb
ficoms
int
and
push
sub
enter
lret
popa
and
inc
in
inc
into
cmpb
xchg
sti
push
aaa
shrb
std
xor
sub
popa
sub
out
jecxz
add
ss
cld
cmp
sbb
inc
push
xchg
dec
inc
outsl
rclb
mov
push
andnps
mov
loop
xchg
clc
mov
cmpsb
clc
and
pop
sbb
mov
ds
in
mov
lahf
js
mov
stos
mov
jecxz
decb
mov
adc
scas
stc
cmpsl
repnz
xor
sub
add
shll
and
aam
push
jno
les
add
mov
lret
jecxz
pop
rorl
iret
and
notl
cmpsl
mov
and
dec
adc
cmp
fucomi
sub
scas
das
mov
and
js
into
jo
stos
jnp
xor
sbb
aaa
in
imul
inc
mov
out
cmpsl
and
stc
je
jl
mov
aad
jg
xchg
or
and
inc
out
push
adc
push
imul
mov
mov
mull
xchg
sbb
arpl
and
jle
xchg
xorl
les
stos
push
xlat
mov
in
outsb
mov
loop
cmp
ud1
xchg
lods
adc
orl
or
or
and
les
out
inc
lcall
cmp
insl
adc
pop
mov
jns
mov
add
stc
data16
sahf
dec
inc
mov
mov
pop
cmp
xchg
pop
das
xchg
sahf
testl
mov
ret
pop
jb
mov
sahf
jae
aam
loope
inc
or
ja
cwtl
mov
sub
mov
nop
mov
addr16
push
sub
cmc
daa
push
mov
adc
xchg
inc
add
outsb
fwait
push
stc
addr16
dec
jns
pop
pushf
xchg
lock
xchg
inc
jge
xchg
sbb
scas
or
pop
mov
cmp
mov
add
mov
mov
mov
inc
stos
pop
mov
subl
cmc
mov
sub
fcmovbe
pushw
dec
push
mov
push
adc
lods
sbb
inc
mov
repnz
jmp
adc
in
xchg
insb
cld
scas
fdivrs
jp
sbb
push
sahf
sbb
addr16
dec
push
in
std
roll
sbb
pshufw
scas
insb
es
insb
add
lret
push
mov
cld
cli
aam
push
pop
es
icebp
lcall
ja
xchg
in
mov
cmc
cmc
inc
dec
inc
mov
jl
aam
xchg
push
adc
or
and
test
fists
dec
iret
inc
push
push
imul
out
pop
popa
aam
iret
push
data16
pop
pushf
pop
fwait
daa
or
mov
in
mov
pop
fs
arpl
sti
scas
je
xor
mov
repz
jbe
jmp
xchg
dec
jecxz
mov
dec
int
ja
in
lcall
int
lods
movsb
leave
fsts
out
or
xor
cmp
xor
mov
mov
adc
and
mov
xorb
jne
xchg
leave
arpl
clc
out
inc
xchg
sbb
mov
in
data16
pop
jge
dec
mov
cmp
shr
lret
cmp
xchg
add
addl
sbb
adc
xor
pop
int3
and
jo
imul
xor
adc
or
imul
call
ud0
mov
int3
xchg
cwtl
popf
fisttpll
in
mov
dec
jge
xor
test
xchg
ljmp
mov
mov
jge
outsb
cmpsb
in
dec
cltd
shll
fwait
inc
jbe
adc
cwtl
add
shr
xchg
adc
test
les
xor
dec
jnp
mov
lock
hlt
jns
stos
sbb
mov
or
aas
jo
outsl
jp
fdivs
adc
dec
mov
adc
rclb
outsl
pop
xor
sbb
jp
mov
jae
add
cmp
sub
mov
jb
loop
pop
sbb
sbb
rclb
push
loopne
lea
pop
stos
and
nop
sbb
es
loop
xchg
cmp
mull
pop
mov
or
push
sub
movsb
ja
sub
hlt
shr
lods
cli
jbe
mov
aad
xlat
cmp
testb
and
xor
dec
or
dec
push
ret
cmpsb
pop
push
inc
ss
pop
jmp
int3
cmpl
jmp
aam
dec
inc
int3
subb
push
or
jg
scas
jecxz
sahf
add
xor
daa
add
inc
fprem
mov
xchg
out
or
xchg
and
jecxz
or
push
pusha
enter
lods
adc
xchg
or
jmp
fists
add
add
or
cmpsb
lock
mov
adc
inc
add
push
test
pusha
sub
cmp
out
push
jmp
xchg
sbb
dec
sar
faddl
dec
mull
lods
or
jg
stos
jne
mov
or
repnz
in
mov
stos
js
shrb
stos
xor
paddd
sub
hlt
push
lods
fistpl
aam
imul
les
dec
movsl
inc
scas
fsubrs
jge
cwtl
add
test
hlt
ljmp
cmp
test
mov
push
inc
add
inc
fdivl
in
test
xchg
mov
cli
inc
dec
test
cmp
mov
repz
stos
xor
callw
rclb
rcl
mov
dec
add
jl
addl
sbb
sub
jge
add
das
ss
lahf
dec
pop
jno
pandn
jnp
fsubrl
cmp
push
inc
adc
cwtl
out
add
lret
ss
pop
dec
xchg
hlt
mov
arpl
in
sub
add
testb
lret
movsl
scas
jno
lea
mov
cmp
cmpl
mov
aaa
addr16
cs
cmp
shl
lods
outsl
mov
inc
mov
mov
dec
jecxz
cmpl
iret
xchg
loop
outsl
push
stos
mov
leave
sbb
subb
cmp
dec
mulb
xchg
sub
add
pop
gs
xchg
mov
call
mov
arpl
dec
push
jns
sbb
pushf
movl
adc
cmp
sub
div
stos
lcall
sahf
adc
push
sub
mov
or
icebp
mov
and
clc
jne
sub
pop
sub
mov
lahf
jecxz
movsl
es
int
xor
jnp
dec
addr16
pop
ss
jmp
andb
inc
jo
sub
jle
mov
out
cmp
inc
inc
adcl
icebp
es
pop
mov
sub
scas
xchg
int3
in
sub
ds
cmp
inc
pop
sbb
cs
addr16
sarl
pop
jl
scas
pop
into
inc
mov
insl
push
jl
popa
loope
enter
jle
adc
fdivs
jb
push
and
or
mov
cmp
and
fcoml
lods
scas
scas
mov
xchg
repnz
dec
mov
fcoms
sbb
or
ljmp
pop
mov
ja
adc
adc
pop
popa
mov
xchg
fldenv
outsl
lcall
jg
jmp
cmpsl
outsl
cmc
mov
movsl
push
sub
mov
jne
jae
scas
push
mov
shlb
cmp
xchg
lret
cmpsb
inc
mov
jno
pop
push
and
jo
xor
mov
or
pushl
cltd
cmp
xor
mov
pause
loop
adc
mov
mov
out
fstpt
out
cmp
das
outsb
xchg
push
stos
enter
sahf
in
cltd
movsl
loop
adc
push
movsb
pop
or
cmpsl
cmp
inc
mov
jmp
popf
mov
xchg
mov
in
xlat
std
daa
or
pop
cmp
inc
insl
push
jge
lea
mov
in
xlat
std
daa
or
pop
cmp
inc
insl
push
jge
lea
mov
in
xlat
std
daa
or
pop
cmp
ja
inc
imul
xchg
neg
in
xlat
cmp
lods
sub
jmp
mov
roll
loope
icebp
movsb
int
repnz
jp
dec
popa
pop
jno
add
adc
and
xor
sar
lret
icebp
stos
cmpl
push
fs
pop
jno
insl
pop
adc
and
xor
sarl
loope
icebp
mov
mov
push
jb
adc
adc
push
inc
jge
imul
mov
xchg
mov
cltd
cmp
jns
inc
test
or
inc
jg
dec
stos
sub
xchg
lods
pop
repnz
inc
adc
test
xchg
scas
add
pusha
mov
mov
and
mov
fdivl
adc
adc
movsb
inc
mov
leave
cmpsb
stos
and
mov
cwtl
dec
jg
sub
cmpsl
add
out
pop
sub
xor
pop
xorl
lret
rclb
mov
pop
jne
push
cmp
pop
and
outsl
inc
cli
pop
xor
addb
test
addb
cltd
pop
fs
add
inc
dec
and
and
sar
lret
icebp
stos
cmp
mov
inc
call
jno
add
or
jle
cwtl
lds
in
clc
cltd
out
in
cmp
push
sbb
add
jle
pop
jg
movsb
jb
lea
fucom
enter
or
sub
xor
adc
outsl
pop
adc
pop
pop
cwtl
test
cltd
mov
scas
mov
mov
inc
jp
dec
popa
pop
jno
add
adc
and
xor
sar
lret
icebp
stos
cmpl
push
dec
popa
pop
jno
add
adc
and
xor
sarl
bound
loop
fwait
orl
push
cmp
aas
mov
ds
mov
aad
mov
dec
sub
clc
dec
and
jns
mov
lret
sti
imul
cltd
test
push
cld
cmpsl
mov
sti
sbb
mov
jbe
dec
dec
loope,pt
lds
sub
test
insb
out
filds
sti
mov
call
out
and
mov
lods
subb
pop
stos
push
fwait
mov
lcall
jmp
and
mov
adc
adc
xorb
pop
loopne
mov
jl
mov
push
push
xchg
mov
movl
dec
into
das
popf
cmpsb
pop
inc
dec
enter
dec
dec
out
inc
jle
stc
and
sbb
nop
stos
xchg
pop
push
push
cli
jmp
xor
jmp
sarl
and
loop
jmp
outsl
mov
pop
push
daa
inc
je
xchg
jne
mov
add
nop
xchg
inc
mov
jecxz
mov
js
arpl
daa
rorb
cli
mov
pop
jmp
cld
jle
push
dec
leave
ret
jmp
sbb
hlt
les
adc
aam
outsb
mov
push
jl
bound
in
xchg
cmp
pushf
imul
mov
rcrl
dec
das
loope
mov
sub
xchg
outsb
mov
scas
cmpb
push
cmp
in
inc
bound
bound
test
xor
cld
cmp
test
dec
inc
int
dec
aaa
call
lods
pop
mov
enter
cmpsl
push
push
cli
xor
pusha
dec
leave
pop
dec
in
adc
mov
insb
xor
sub
repnz
arpl
rcrb
dec
sub
and
mov
shlb
xor
add
in
repz
lret
mov
mov
js
ficomps
sbb
add
out
add
push
jb
lds
lods
push
xor
imul
fildll
popa
adc
jb
lock
addb
aas
sbb
push
bound
mov
mov
ja
mov
fstpl
cmpsl
in
orl
add
adc
outsl
xor
jae
ret
scas
xor
das
inc
xchg
add
xchg
pop
lds
or
movsb
push
emms
and
cwtl
and
fbld
ficoms
movsl
mov
leave
movsl
js
sbb
outsb
jecxz
incl
sub
inc
xor
leave
loop
adc
lahf
push
lock
inc
push
ljmp
or
inc
lcall
daa
push
mulb
push
mov
lret
xor
add
jno
aas
orl
push
xchg
jb
call
push
fidivs
aad
push
jbe
mov
bound
cmpsb
and
idivb
sub
mov
loop
mov
xchg
sub
pop
or
je
rcr
movsb
pop
cli
dec
bnd
lret
leave
mov
test
jbe
insl
loopne
gs
xor
or
ret
pop
cmp
push
lcall
mov
in
adc
mov
loop
mov
xor
add
sub
divl
jl
cmpsb
pop
into
xchg
xchg
arpl
dec
mov
mov
int
rcrb
inc
in
cld
mov
jb
in
mull
loope
inc
pop
mov
sahf
jb
and
sbb
aas
add
insl
pop
sarw
sahf
mov
fisubl
nop
outsl
mov
or
mov
sbb
addl
roll
xchg
lds
clc
jbe
mov
repnz
xchg
mov
ret
mov
mov
push
or
jp
pop
jmp
pushf
aas
adc
ret
mov
cmc
lahf
xorb
jo
ljmp
xchg
cmp
in
jo
cmpb
xor
sbb
iret
xor
xchg
outsb
movsl
lds
inc
push
adc
jo
fimuls
icebp
ficomps
sub
or
inc
or
mov
adc
sub
pop
and
inc
fcomip
adc
mov
cli
fcoms
pop
adc
fistl
inc
fcoml
pop
ret
push
lds
pop
cmp
das
movsl
jbe
mov
jecxz
int
push
js
push
arpl
mov
imul
lock
jl
fldt
mov
leave
out
stos
mov
ret
cmp
mov
pop
es
icebp
icebp
aaa
inc
dec
lret
cmpsb
and
jae
adc
in
jne
or
xchg
inc
lar
add
inc
sbb
push
cmpsb
test
test
fs
xlat
cmp
jns
clc
cmpsl
jno
addb
es
repnz
test
add
jge
aaa
iret
xor
pop
jmp
adc
jo
or
mov
inc
dec
ljmp
aam
out
mov
push
test
lahf
mov
subl
sbb
mov
out
jmp
dec
jnp
inc
repnz
jb
nop
sbb
jo
and
or
shr
mov
sbb
inc
lea
add
xor
or
inc
adcl
adc
pop
int3
mov
and
scas
jo
cmp
xchg
arpl
test
mov
pop
push
xchg
mov
or
xor
xor
sub
popa
movsl
push
push
ret
lcall
mov
pop
mov
sbb
sbb
fldl
stos
lds
push
popf
mov
jp
inc
or
int3
jns
or
out
adc
out
pop
aam
xchg
lods
setnp
out
out
mov
dec
outsl
and
aad
jno
xchg
xor
jbe
jne
cmc
jb
cmc
ror
adc
mov
popf
out
btsl
inc
xor
cmp
pop
xchg
nop
xchg
aas
outsb
shrb
xor
xchg
jle
mov
les
inc
adc
stos
test
sbb
sbb
jl
adc
sub
pusha
mov
insl
leave
es
and
stc
push
push
xorl
int
lds
in
mov
mov
ds
clc
inc
push
push
mov
adcl
mov
call
xchg
andl
jb
popa
leave
fildll
sarb
sbb
ljmp
stc
dec
nop
popa
fs
xor
inc
mov
scas
adc
or
outsl
xor
jno
mov
ficoms
sbb
add
xlat
shrl
data16
xchg
icebp
fimuls
maskmovq
testl
testl
shlb
rclb
and
push
rcl
push
int3
adcl
aad
das
push
imul
outsb
jnp
pop
mov
fimuls
pop
push
int3
sarb
xchg
push
in
dec
rcr
pop
add
and
hlt
lcall
push
mov
ds
sbb
cmc
out
hlt
loope
cmp
fsubs
rorb
subl
xchg
popf
insl
enter
aas
and
sbb
in
sbb
pop
sbb
outsb
push
mov
mov
xchg
je
jg
inc
cmp
mov
stos
jmp
and
out
sub
sar
xchg
pop
and
mov
lea
and
int
inc
out
push
mov
pop
cld
xorl
push
fucomip
ror
sub
stos
and
xor
ret
test
xor
ds
loop
fs
sub
fldl
lret
mov
imul
nop
cltd
pop
lock
pop
jecxz
outsb
fcmove
cwtl
scas
insb
imul
loope
in
enter
cli
je
mov
mov
cld
cmp
pop
push
jl
dec
push
cs
test
mov
ds
jnp
jbe
in
dec
daa
scas
f2xm1
add
jnp
mov
push
pushf
lds
sbb
push
push
dec
mov
dec
inc
mov
enter
movsb
cs
aad
inc
adc
cmp
aaa
adc
mov
dec
repz
jmp
dec
sbb
orb
push
inc
cmp
stc
xchg
dec
xchg
daa
push
adc
cli
fsts
push
shrl
aam
xchg
xlat
shlb
and
test
cmpsl
mov
loopne
stos
idivb
mov
popf
in
mov
mov
xchg
mov
cli
pop
xchg
jmp
mov
test
ljmp
js
mov
sarl
mov
sub
adc
jne
xchg
push
ja
adc
sub
add
subl
inc
data16
ret
stos
loopne
sub
scas
imul
mov
out
push
pushl
inc
jae
lret
lret
dec
outsl
dec
bound
xchg
mov
jno
aaa
stos
int3
xchg
mov
jge
push
and
mov
fists
dec
lret
test
or
stc
subl
sbb
mov
setp
mov
insb
ja
sub
lods
lahf
leave
xchg
mov
lret
stos
pop
cmp
mov
addr16
lods
mov
scas
mov
andl
inc
pop
jae
into
inc
xor
int
push
mov
stos
out
pop
add
je
mov
adc
insb
lea
rdmsr
cmp
ret
test
negl
inc
icebp
xor
ret
or
nop
loopne
insb
jmp
sarl
xor
lock
movsb
adcb
mov
push
pop
jno
mov
and
inc
jo
push
pop
adc
cmc
xlat
xchg
push
cmp
sub
xor
xlat
repnz
xor
dec
rcll
mov
into
xchg
sbb
adc
repnz
ljmp
mov
mov
and
and
insl
pushf
fldl
clc
test
add
xchg
mov
jae
lret
jl
iret
outsl
repnz
xchg
aam
or
xchg
sbb
push
daa
adc
or
out
out
push
mov
rol
repnz
and
hlt
xor
jbe
mov
in
push
cmp
push
ja
lcall
inc
dec
ss
andb
stc
rolb
push
mov
dec
add
aam
pop
push
jb
mov
jno
fstl
sub
sbb
imul
add
andb
fs
add
loop
pop
fldcw
nop
and
int3
in
push
cwtl
imul
mov
imul
or
push
sbb
push
je
adc
xchg
xlat
es
mov
and
enter
outsl
jmp
xchg
mov
sbbb
pop
push
loop
in
pop
std
sbb
nop
insb
adc
mov
or
mov
xchg
insb
ret
add
pop
cltd
enter
stos
jecxz
stc
cmpsl
lock
push
and
inc
pop
into
push
xchg
xchg
add
adc
lahf
jne
cmpsb
cmp
popf
fisubl
out
pop
inc
outsb
insl
ret
js
outsl
xchg
fidivs
mov
pop
ret
xlat
out
and
sahf
adc
decb
mov
or
or
fs
push
imul
adc
push
movsl
cs
and
rcll
adc
repz
push
aam
cs
or
inc
and
addl
mov
shlb
test
cltd
int3
sub
call
sub
xor
add
inc
hlt
push
or
loop
mov
inc
je
je
mov
push
xchg
les
inc
jp
xor
pop
sahf
xor
or
adc
jne
sub
out
mov
sbb
push
mov
lahf
or
or
stos
pushf
push
and
outsl
xchg
push
test
test
xorb
cmpsb
jp
dec
add
insb
insl
and
pop
push
imul
mov
lahf
cltd
push
testb
daa
and
dec
jl
rcrb
int3
pop
mov
lds
outsb
or
lods
pop
push
lret
xor
dec
arpl
pusha
and
into
int3
adc
add
jns
mov
or
push
push
push
divb
xchg
movsl
lcall
ret
ss
jmp
sbb
jp
outsb
pusha
mov
call
mov
sub
sub
jg
inc
leave
or
or
stc
lret
inc
imul
xor
pop
cltd
arpl
pop
fs
xor
pop
sti
jb,pn
test
inc
xchg
push
cmp
jecxz
ja
sub
inc
loop
pop
sub
fisttpll
xchg
mov
dec
mov
xchg
scas
aas
int3
scas
pushf
repz
outsl
cmpsl
sub
mov
dec
imull
cmpsl
mov
addb
cs
in
cmpsb
mov
push
in
jae
pusha
mov
scas
push
sub
mov
adc
dec
fsts
xor
lods
cmp
movsb
xlat
adc
loopne
jns
pop
add
inc
push
pop
sbb
out
outsl
in
cmpsl
mov
push
rcll
test
pusha
cmp
xor
pop
clc
repz
mov
mulb
pop
or
fucomi
cmp
push
call
xor
es
add
adc
call
frstor
or
js
xchg
add
sub
cmp
out
fstpl
pop
mov
push
push
dec
sbb
mov
adc
lcall
stc
push
stc
or
movsl
call
std
push
decb
mov
pop
mov
testb
mov
pop
xchg
rcrb
jg
into
sub
icebp
push
push
ret
or
lods
add
subl
push
sub
lds
stos
pusha
lcall
popa
pusha
inc
add
push
ret
and
mov
fdivr
lods
sub
and
push
push
mov
inc
mov
popa
xor
jb
and
rcll
and
outsl
insl
ret
test
mov
push
jl
jg
sub
mov
cwtl
xor
icebp
aam
mov
cmovs
mov
jae
scas
sub
mov
fstp
insl
rolb
out
mov
pushl
or
pop
mov
jae
push
stc
jge
bound
or
loopne
aas
mov
inc
add
add
mov
fiaddl
cltd
inc
sbb
xchg
adc
push
faddl
out
js
test
aaa
xchg
insl
sbb
lcall
mov
daa
cmp
pop
inc
adc
mov
cmp
shlb
in
and
nop
push
jb
test
jo
inc
xchg
pop
or
add
inc
push
mov
out
fwait
mov
lds
imul
jns
in
loope
out
std
dec
clc
push
lods
leave
jle
adc
jo
lea
lods
adc
xchg
and
mov
dec
mov
test
push
or
cmp
xchg
sub
fs
es
ja
arpl
loope
pusha
adc
jno
es
dec
ror
adc
or
iret
xchg
int
adc
or
cli
cmpsl
in
sbb
xchg
mov
pop
rcrb
scas
jne
push
pushf
adc
mov
add
imul
xor
add
pop
cld
out
mov
pop
add
inc
imul
dec
lock
cmp
call
jmp
out
add
jecxz
push
cmp
out
nop
scas
xchg
jge
lahf
fistpl
push
popa
test
in
cmp
into
jmp
outsb
ficoml
out
jmp
inc
out
repnz
fistpl
es
in
std
adc
je
mov
popf
ss
or
repnz
fmuls
int
lods
pop
pushf
pop
dec
ror
pop
jno
dec
xchg
inc
jp
mov
repnz
call
adc
mov
jns
testb
pop
push
mov
das
subb
stos
pop
xchg
inc
or
popf
int3
inc
sbb
popf
or
jnp
mov
fbld
mov
lods
sbb
insl
js
out
aam
insb
stos
dec
jo
cmp
lret
jp
daa
jbe
push
add
jnp
gs
xchg
mov
cmp
aam
xor
cmp
pop
lret
lock
or
and
frstor
sbb
into
movsl
push
cmp
lcall
aaa
mov
insb
movsl
lahf
leave
out
mov
mov
jns
xor
das
fwait
xchg
sahf
fwait
into
test
repnz
jo
xor
je
xchg
inc
cmpsl
clc
pop
jecxz
add
jb
rcll
mov
xchg
arpl
outsl
hlt
sarl
pop
fiaddl
jns
xor
jmp
fists
mov
sub
push
sbbb
loope
cmp
lods
das
mov
pop
xlat
mov
pop
out
dec
mov
in
jo
mov
push
push
out
cmp
xor
js
pop
sub
jbe
cld
pop
xor
cmp
add
sub
enter
imul
icebp
xor
sbb
lret
out
addb
mov
xor
sub
out
andb
lea
outsb
mov
loopne
cld
pop
or
cmp
pop
mov
mov
cmc
jnp
imul
mov
cltd
fistpll
fmul
stos
aad
mov
mov
lret
or
xor
jmp
push
push
mov
mov
adc
outsl
test
lahf
sbbl
js
in
scas
add
std
and
ja
push
popa
pop
std
mov
pop
ret
lea
lock
scas
xor
sti
popa
bound
mov
xchg
int3
sbb
outsl
xchg
pop
mov
cmp
jge
aam
insb
scas
mov
xorl
sbb
inc
outsl
in
ret
in
mov
xor
inc
cmp
xor
mov
mov
push
addr16
push
rolb
mov
xchg
and
aad
dec
imul
jbe
and
not
shl
push
in
push
or
xor
xor
sub
add
ds
mov
in
push
cli
or
mov
add
dec
cmp
bound
lock
or
cs
adc
shll
cmpsb
pop
fs
int
addl
cld
and
push
mov
push
das
cs
mov
sbbb
ret
dec
jg
stos
pop
ljmp
ror
jmp
daa
cli
sub
sub
fisttpl
sbb
add
push
fdivrs
cwtl
pop
aad
pop
or
loopne
in
adc
push
into
sub
sub
and
call
sbb
mov
and
jbe
or
sub
mov
into
aam
test
or
nop
std
xor
out
mov
add
xchg
orb
adc
fistpl
dec
lds
adc
cmp
adc
xchg
imul
in
push
or
sbb
pop
fs
nop
xchg
mov
xlat
mov
gs
mov
pop
sahf
push
sbb
jmp
sbb
sub
push
xor
inc
js
pop
fs
nop
mov
add
loope
daa
mov
mov
mov
mov
incl
pop
mov
loope
in
pop
fisubs
sbb
scas
lea
cmp
pop
loopne
shll
mov
fs
cmp
jae
and
cld
cmpsb
inc
jbe
aad
mov
cmp
aam
repz
push
ja
and
add
data16
pop
ljmp
mov
or
adc
dec
rclb
dec
shlb
sub
into
mov
shl
sub
and
je
cmp
icebp
movsb
add
push
lret
cmpsl
mov
adc
adc
cs
fsubrl
inc
test
loopne
xlat
cmp
enter
rcll
in
addr16
mov
xchg
cmpsl
mov
adc
int
scas
dec
cli
push
mov
mov
and
cmpsb
mov
les
inc
popa
mov
or
xchg
dec
sbb
gs
xchg
push
insb
repnz
fmull
mov
cmp
or
ljmp
mov
ror
es
loope
pop
les
sti
xor
aas
sbb
xor
inc
mov
adc
mov
rorb
inc
aas
rep
sti
ret
ret
mov
push
scas
ljmp
adc
fnstcw
adc
popa
add
movsb
xor
and
pop
js
push
sbb
je
jo
fbstp
iret
shlb
shrl
or
mov
leave
daa
push
notb
jbe
into
inc
sub
xor
iret
sahf
daa
shrl
int
cmpsl
fcomps
inc
xchg
xchg
push
jmp
stos
or
fsts
mov
scas
push
lcall
xchg
aaa
inc
fs
dec
lret
negb
inc
leave
mov
shll
pop
and
sbb
js
movsl
push
hlt
and
push
stos
cmp
cmpsb
and
lea
sbb
nop
or
or
arpl
popf
jno
mov
pop
fldt
mov
mov
and
cmp
cmpl
push
dec
popa
pop
jno
add
adc
and
xor
sar
lret
icebp
stos
cmpl
push
dec
popa
pop
jno
add
adc
and
xor
sar
stos
cmpl
push
inc
popa
pop
jno
add
adc
and
xor
rcl
inc
loope
icebp
stos
subl
sti
loopne
pop
push
pop
mov
into
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
call
push
push
pushl
push
push
call
call
mov
leave
ret
ljmp
test
pop
or
push
add
pop
add
add
add
flds
out
add
flds
mov
add
dec
add
add
add
add
cmp
add
add
add
jp
mov
mov
add
nop
add
dec
add
add
cmp
push
add
popa
add
add
jl
push
add
add
add
add
je
flds
mov
add
add
add
mov
xor
dec
add
aas
add
add
add
mov
jae
push
add
add
movb
add
add
add
filds
imul
imul
add
add
xchg
add
jl
test
flds
inc
add
jns
adc
filds
mov
jl
push
add
add
xor
add
add
add
add
jb
inc
add
push
add
int3
add
add
add
add
mov
pop
add
add
insb
add
fldl
inc
add
add
inc
add
add
pop
add
pop
add
pop
add
inc
add
repz
add
push
add
add
add
cwtl
add
add
add
add
add
add
add
add
iret
add
dec
add
add
add
dec
add
dec
add
add
add
add
jp
xor
rolb
lret
add
add
add
add
imul
cmp
push
add
add
add
add
add
jmp
mov
add
add
dec
add
add
add
add
imul
test
dec
add
add
or
jmp
cmp
insb
add
pusha
add
add
add
add
add
add
sub
add
fiaddl
dec
add
add
lret
add
add
add
add
add
add
add
jge
flds
and
insl
add
mov
add
jp
icebp
add
add
add
loope
faddl
add
out
add
dec
add
add
add
add
add
add
dec
add
add
arpl
dec
add
add
add
add
add
add
add
adc
dec
add
add
jge
popa
add
dec
add
add
add
push
add
add
add
add
or
add
add
js
mov
push
add
add
add
add
add
add
add
add
jmp
pop
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
incb
imul
mov
mov
jmp
add
add
add
add
add
jmp
add
add
imul
add
add
add
mov
add
add
imul
add
add
add
fldl
cltd
add
add
add
cmp
add
add
add
add
xchg
add
push
add
add
add
add
imul
add
mov
loope
cmp
add
add
or
add
add
add
add
sbb
mov
add
scas
add
add
add
add
add
add
add
add
stos
add
add
add
jge
mov
sub
iret
dec
mov
pop
adc
mov
push
insb
insb
pop
mov
ret
lods
movups
imul
push
jb
stos
and
rorb
fs
gs
dec
xor
out
sbb
jp
pushf
popa
cmp
out
nop
pop
mov
push
test
and
adc
adc
xor
pop
mov
jb
lock
ja
push
in
lret
add
ds
dec
in
repnz
add
mov
sbb
lcall
mov
mov
mov
push
outsl
out
xchg
push
cmpsb
dec
in
cwtl
sbb
cmp
jno
mov
cwtl
shrl
mov
mov
jbe
and
iret
mov
jbe
lods
xchg
pusha
sbb
aad
push
and
sbb
sbb
adc
xchg
dec
jmp
push
pop
loopne
add
cmp
imul
cmp
sub
mov
cmp
jne
or
dec
adc
mov
cmp
shrb
mov
push
inc
orl
mov
je
xor
xor
or
cmp
outsb
add
in
jmp
sbb
pusha
mov
out
pusha
mov
rcrl
push
fidivrs
cltd
inc
pop
sub
pop
sub
jb
adc
cli
mov
mov
jg
iret
outsl
fnstsw
and
mov
mov
add
mov
mov
std
dec
testb
xchg
jl
cmp
insb
lahf
mov
mov
jo
mov
imul
and
mov
fcomps
xor
into
cmp
inc
xchg
add
cmp
add
push
dec
adc
enter
sbb
sub
or
jnp
cli
push
adc
mov
cmp
cmp
mov
add
cmp
dec
mov
ds
adc
cmc
push
icebp
and
pop
mov
inc
movsb
cmp
dec
scas
inc
bound
mov
xorl
push
jecxz
cli
dec
add
xchg
ss
push
jns
test
sbb
js
inc
aam
ljmp
sub
pop
and
fcompl
push
daa
fwait
xchg
or
mov
loop
movsb
dec
jns
aas
bound
mov
ss
pop
leave
out
mov
inc
xchg
lret
xchg
xchg
scas
mov
inc
push
mov
or
pop
mov
in
dec
or
shrb
iret
mov
icebp
lea
add
jl
adc
inc
shll
bound
mov
fucomip
jne
adc
jo
lods
mov
call
cmp
ret
xchg
push
cld
mov
jmp
movsb
les
add
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
cmp
add
pusha
repnz
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
fcomip
add
int3
repnz
repnz
mov
repnz
lods
repnz
movsb
repnz
pushf
repnz
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
repnz
add
add
or
add
and
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cwtl
repz
mov
repz
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xor
add
cmp
add
inc
hlt
add
dec
hlt
add
push
hlt
add
pop
hlt
add
fs
add
ja
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
hlt
add
cwtl
hlt
add
test
add
mov
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
loopne
add
or
add
xor
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
scas
pop
add
pushf
pop
add
xchg
pop
add
mov
add
test
add
jl
add
je
add
insb
pop
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
rclb
add
fcoml
add
lock
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
push
sbb
add
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
inc
sbb
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pusha
sbb
add
add
js
add
mov
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
