jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
xor
xlat
add
dec
out
bound
mov
or
add
or
pop
add
add
test
add
and
add
add
add
or
push
add
or
push
add
popf
add
ljmp
add
or
jle
popa
add
add
add
add
int3
add
mov
add
add
aad
sahf
add
popa
add
jge
sub
dec
add
add
sub
or
repz
add
das
add
mov
add
add
pushf
add
jno
mov
add
or
popa
add
add
add
add
or
jle
pop
add
mov
add
outsb
add
add
das
add
mov
add
les
add
roll
add
add
add
add
inc
add
add
add
add
mov
add
add
add
push
add
add
add
add
popf
add
or
popa
add
add
add
lea
or
xchg
add
add
or
das
add
add
add
add
lret
add
or
pop
add
sub
jb
popa
add
add
mov
add
add
add
add
add
inc
add
add
add
add
aad
stos
add
add
add
mov
adc
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
xchg
add
int
or
popf
add
add
stos
add
or
movsb
add
add
aas
add
add
add
mov
add
add
add
add
das
add
or
jno
or
push
add
add
jp
stos
add
pop
add
add
add
imul
dec
add
lea
xchg
add
ljmp
add
add
add
add
add
dec
add
or
movl
pushf
add
aad
add
popa
add
mov
jnp
jne
xchg
add
jnp
test
add
add
add
add
add
dec
add
in
add
mov
add
add
or
mov
iret
add
add
sub
push
add
add
mov
add
add
lock
add
mov
add
add
add
in
add
add
add
add
add
add
lret
add
and
inc
add
add
add
aad
stos
add
add
stos
add
dec
add
add
add
push
add
or
add
or
or
jp
mov
add
add
or
popa
add
add
add
add
or
and
aad
or
xchg
add
or
xor
aad
outsb
add
add
add
add
or
test
add
xor
jno
or
add
add
sub
add
add
lea
or
add
mov
or
adc
mov
add
mov
add
add
add
add
fiaddl
adc
add
push
jmp
daa
push
jmp
ret
mov
repnz
mov
and
xor
test
outsl
dec
mov
xor
push
pop
jecxz
mov
dec
insl
jb
arpl
mov
mov
cld
mov
mov
das
cvtdq2ps
rcr
data16
popa
mov
nop
dec
out
mov
xor
cmpsb
imul
jl
or
add
movsb
inc
add
push
adc
add
repz
fildll
adc
stc
out
pop
mov
pop
int
adc
ror
incl
lods
push
fimuls
push
inc
inc
adc
jge
add
daa
bound
or
cmp
cmp
and
fdivrs
cmp
cli
mov
stos
notb
cmp
pop
fistpll
insl
fiadds
push
ja
push
xor
sbb
call
mov
ficomps
xchg
jg
sarb
push
mov
pushf
nop
xchg
mov
out
lahf
mov
sbb
fcomps
sub
and
mov
lcall
pushf
or
jl,pn
mov
loop
dec
mov
loope
xlat
fiaddl
dec
gs
push
fsubrl
in
xchg
sahf
shll
int
adc
mov
pop
xchg
mov
jge
shll
in
outsb
vpmacssdqh
sti
lods
xlat
ret
dec
mov
dec
lret
push
roll
cmp
ja
cli
stc
jmp
rcl
jmp
sbbl
daa
mov
dec
lcall
cmp
ljmp
orl
sub
lock
push
inc
add
in
dec
pop
out
push
mov
xchg
bound
dec
std
xchg
mov
add
clc
pop
out
sarl
mov
mov
fucomi
sarb
cmp
mov
sub
out
xchg
ret
mov
xchg
jge
xchg
es
je
lods
rol
out
cs
xor
rorl
mov
push
pushf
stos
jp
in
daa
pop
cmp
fisubs
sti
shl
cmpsb
and
or
jmp
jg
cmc
push
stc
mov
and
push
jle
xchg
repnz
dec
sub
sub
mov
adc
stos
repz
mov
data16
push
push
sahf
add
test
outsb
jg
leave
dec
ficomps
enter
mov
bound
sbb
sti
iret
pushf
push
ljmp
add
stos
sub
cmpl
repnz
ret
mov
xchg
pop
test
ret
or
rolb
lret
cmp
mov
rcrl
aaa
imull
lea
outsb
mov
dec
cmpsb
xchg
or
jae
pop
mov
push
cmpl
mov
and
arpl
pop
mov
sbb
add
add
add
add
add
add
add
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
aam
les
lcall
mov
mov
fs
adc
add
xor
and
aam
div
in
xchg
cmpsl
test
push
addr16
ja
dec
fs
adc
add
xor
and
aam
les
hlt
pop
in
xchg
xchg
test
mov
movsb
movsl
push
addr16
push
pop
es
and
jp
dec
jae
mov
xchg
mov
test
dec
aas
add
push
xchg
in
sahf
mov
adc
mov
in
xor
mov
sub
js
push
stc
mov
adc
mov
pop
sub
dec
scas
cmp
insb
daa
lret
dec
leave
ja
int3
push
mov
test
push
shl
rclb
ret
xlat
xchg
mov
xchg
int3
sbb
xchg
stc
mov
insb
mov
sub
mov
sahf
cmp
sub
xchg
mov
inc
movsl
imul
cmpsl
in
cmpsl
cltd
dec
push
and
push
xor
mov
add
insb
call
das
xchg
add
cs
mov
add
jge
imul
hlt
mov
xlat
xchg
cmpsl
test
push
addr16
fbstp
imul
fnstenv
and
xchg
out
cwtl
xchg
stos
cmpl
adc
loop
xor
pusha
insl
pop
jo
jo
xlat
mov
cmpl
xor
inc
add
push
and
mov
stos
in
xchg
jmp
mov
xchg
je
fs
adc
add
xor
and
aam
div
in
xchg
cmpsl
test
push
addr16
ja
inc
fs
adc
add
xor
and
aam
popa
mov
dec
rcrb
inc
xchg
movsb
out
push
iret
add
out
jne
popa
or
mov
push
pop
cmp
sbb
rorb
cmpsl
add
xor
jp
adc
or
inc
das
adc
mov
dec
push
jge
out
inc
push
mov
lock
xchg
dec
xchg
pop
gs
mov
inc
js
inc
and
push
push
nop
inc
push
sub
loopne
stos
sub
gs
fldenv
jp
dec
cmp
cmp
inc
and
xor
dec
loopne
mov
jbe
and
scas
xor
and
or
xor
mov
mov
ret
repnz
lcall
sti
shll
enter
test
lret
jo
adc
xchg
cltd
clc
popa
or
ret
and
push
xor
sub
pop
push
inc
and
mov
pop
dec
jns
cmp
shrl
sahf
push
loopne
sbbb
fildl
aam
lods
notb
imul
xchg
inc
xor
imul
arpl
jmp
pop
fcom
sub
and
xor
sub
jbe
stos
fbstp
imull
jns
ljmp
jb
sbb
ljmp
sbb
sub
push
mov
lods
sbb
addr16
xchg
add
mov
cwtl
mov
test
pushf
testb
mov
dec
ljmp
dec
add
jae
frstor
fsubl
sub
pop
loopne
into
or
xchg
xchg
cltd
sbb
inc
insl
sbb
adc
or
sbb
sub
and
cmp
sub
mov
subb
insl
loop
jge
mov
cmc
cmpl
idivl
repnz
mov
mov
sub
jne
js
scas
mov
movsl
loope
es
push
xor
nop
sbb
push
and
lahf
movsb
and
jl
or
out
sub
loope
jbe
add
cmp
jae
lods
dec
insl
loop
ret
mov
nop
mov
xor
mov
adc
mov
repnz
int3
pop
inc
xchg
inc
mov
popa
nop
jb
mov
jg
sahf
cwtl
and
sbb
adc
sahf
testl
dec
mov
add
shlb
mov
mov
ja
mov
aaa
add
dec
sbb
daa
cmp
cltd
mov
mov
mov
sbb
mov
rsm
push
aaa
in
fs
fsubs
pop
cmpsl
xchg
sub
pop
iret
add
push
lock
cli
pop
nop
pop
leave
adcb
out
popa
and
push
pop
call
iret
xchg
sub
push
std
cmp
mov
jg
in
fmuls
dec
cmp
cmp
aas
and
nop
out
inc
lds
aam
mov
sti
ds
scas
mov
xchg
push
mov
fistpl
popa
mov
cld
bnd
add
jae
leave
dec
daa
mov
aad
fdivrs
in
xchg
ror
mov
movsl
mov
subb
sbb
jbe
cs
popl
shrl
popf
sarl
adc
push
mov
jge
mov
inc
mov
orb
enter
xchg
jne
xchg
pop
mov
es
sub
fs
roll
icebp
into
dec
out
fidivrs
xchg
js
sub
or
mov
inc
xor
pushf
pop
adc
jl
popl
out
fnstsw
inc
push
or
jns
rclb
stos
lret
sahf
mov
mov
cmc
fwait
ja
push
testb
cld
test
fmul
shl
imul
sub
int
testb
mov
xchg
mov
les
inc
popf
cmc
and
mov
mov
dec
pop
cmp
ss
dec
ljmp
pop
subb
jecxz
repnz
add
mov
in
shrl
bound
xlat
sub
or
lahf
or
stos
test
xchg
jle
out
push
inc
pop
ficomps
stos
jo
xchg
add
outsl
filds
pop
or
mov
scas
add
lahf
cltd
push
dec
scas
mov
jne
mov
imul
xor
movsb
test
icebp
ret
xor
jge
mov
cltd
jae
inc
jp
hlt
sti
inc
clc
sbb
minps
jmp
cltd
fidivl
mov
and
dec
push
je
sbb
fcoms
or
out
call
icebp
add
or
adc
mov
dec
pusha
xchg
and
js
enter
orl
sbb
test
mov
or
imul
aad
jne
imul
jb
jne
sbb
inc
xchg
in
popa
and
data16
jae
cmpsb
ss
out
mov
xchg
jae
out
pop
insl
lea
pop
or
lahf
inc
bound
jg
repz
xor
xchg
adc
mov
jp
push
mov
mov
rcll
lret
ja
lret
test
mov
xor
lods
jae
jge
int
sub
or
xor
pop
xor
ljmp
mov
push
in
clc
mov
add
mov
in
out
fidivrl
test
imul
jno
je
dec
mov
sbb
ret
or
inc
popf
nop
mov
pop
lods
jg
xchg
pop
dec
push
jl
dec
add
cmpsb
mov
and
lret
imul
sub
add
and
notl
push
mov
dec
push
xchg
jnp
test
inc
or
pop
cs
push
mov
add
mov
enter
and
and
xor
push
xchg
pop
add
bound
rcr
xor
or
test
fstpl
adc
push
cmp
sbb
sbb
jg
decb
push
ljmp
movsb
lods
repz
and
aam
ret
out
adc
sbb
pop
mov
push
xchg
sbb
sub
lcall
loop
addr16
add
mov
adc
in
dec
rcll
sbb
and
sarb
push
add
pop
sbb
add
ret
in
inc
jb
mov
xchg
js
cs
jg
popa
and
jnp
insb
push
mov
sahf
mov
rep
aam
add
jbe
std
outsl
push
fs
imull
flds
lret
je
lea
cwtl
lock
das
cwtl
je
push
jl
es
mov
lcall
cmp
adc
jns
cmp
add
pop
mov
or
mov
mov
ljmp
adc
sub
push
mov
xor
mov
pop
loope
push
mov
mov
push
mov
mov
movsb
sbb
popf
daa
cmpsl
movsb
push
xchg
in
sbb
js
insl
int
sub
dec
sbb
cld
adc
cmc
push
data16
sub
clc
loopne
ret
jmp
jl
mov
and
mov
test
mov
ss
sub
sub
or
jp
icebp
roll
mov
pop
rol
add
push
loope
pop
xchg
insb
xchg
gs
or
mov
ja
lds
adc
in
jno
sbb
adc
mov
fisttpll
push
mov
scas
out
repnz
loop
sbbb
fs
dec
int3
jl
mov
loopne
test
push
xchg
cltd
leave
xchg
inc
shlb
pop
pop
jge
or
mov
dec
mov
aaa
cwtl
push
add
cmp
push
out
cmp
mov
fwait
jecxz
test
addr16
scas
xchg
loopne
xor
cmp
jnp
fmull
pop
cltd
std
and
mov
out
jg
fsubrl
mov
nop
adc
popa
sbb
scas
lods
pop
jl
aad
dec
lds
sub
in
in
jmp
scas
popf
cld
inc
clc
daa
je,pt
jae
incb
mov
push
inc
dec
lods
cmp
xchg
stc
shll
pop
mov
repnz
push
dec
xor
sub
ja
dec
jae
cwtl
adc
lcall
inc
push
cmpsl
xchg
pop
pusha
mov
loop
aaa
push
rcr
add
repnz
sub
push
xlat
lea
out
fidivrs
mov
mov
fcomps
add
mov
sahf
xor
mov
lea
push
cwtl
lret
push
push
lret
mov
sub
dec
mov
cli
add
dec
rcll
mov
lods
ljmp
inc
iret
jbe
outsl
out
loop
inc
repnz
mov
rdmsr
ds
mov
repnz
pop
dec
dec
je
push
scas
ffreep
loop
inc
jae
sti
test
aas
or
or
aad
mov
outsl
inc
gs
shl
pop
sbb
call
cmp
mov
cmp
std
xlat
mov
push
scas
mov
sbb
call
adc
inc
cld
aad
test
add
pop
sbb
inc
push
xchg
mov
jbe
or
data16
xor
sub
scas
int
add
mov
idivl
icebp
push
aas
je
inc
xor
mov
ljmp
sahf
mov
xor
lahf
cld
xor
push
mov
cmp
filds
mov
js
call
fbld
aaa
xor
mull
mov
dec
jnp
push
push
int3
sbb
mov
fildl
pushf
imul
std
adc
cmp
jbe
mov
cmp
mov
sbb
pop
sub
arpl
icebp
test
mov
aas
js
data16
dec
gs
mov
lret
dec
and
xorl
mov
dec
icebp
jecxz
aad
push
lret
jne
jl
js
pop
push
into
or
out
xor
scas
lahf
push
push
mov
loopne
dec
out
jo
and
mov
lods
xchg
xor
divb
notl
dec
sbb
add
mov
pop
and
movsl
lea
sbb
es
fstpl
stos
add
aad
cmp
call
add
data16
pop
mov
adc
xchg
or
call
pop
shl
mov
xor
imul
rol
xchg
popa
push
insb
addb
shlb
rorl
jnp
mov
outsb
mov
scas
cmp
daa
xchg
int3
or
jb
leave
aas
std
push
pop
cmp
sub
xlat
mov
jnp
xchg
out
lcall
mov
ds
movsl
jmp
dec
popa
aaa
sbb
pop
xchg
repz
mov
scas
into
and
jle
adc
addr16
jno
lret
fisttpl
jge
rolb
lods
cltd
rorb
pop
jno
jbe
push
out
enter
enter
mov
addr16
lds
or
xchg
pushf
cld
jae
data16
in
jo
fcmovnu
jo
cmp
sub
adc
mov
pop
leave
jo
shr
testl
lods
or
js
out
int3
push
sub
arpl
cmpsl
in
pusha
dec
xor
imul
fidivrl
inc
in
clc
cld
test
sub
into
les
fsts
movsb
pop
push
mov
add
push
mov
push
add
bound
push
out
fsts
rorl
je
mov
adc
dec
rcll
lods
xor
xor
in
test
jo
jns
xor
jl
in
js
adc
xorb
ljmp
pop
ror
aad
push
repz
add
mov
dec
notl
pop
fwait
add
cltd
mov
in
or
test
push
repnz
adc
jne
jecxz
fnstenv
iret
xlat
mov
cltd
sub
mov
xchg
push
fstps
inc
in
test
cmc
imul
ret
push
or
cmpsb
popa
dec
ror
dec
cmp
mov
mov
aas
adc
inc
rcl
cmp
lods
or
mov
inc
push
xchg
rcrl
adc
add
xor
fcmovnbe
jge
jge
dec
cmp
call
jnp
xchg
jo
mov
ljmp
pusha
or
mov
or
hlt
mov
shrl
push
divl
fst
mov
xlat
outsb
int3
faddp
push
xor
mov
cmp
jg
cmpsl
sub
jg
add
cmp
cmpl
cld
std
cwtl
dec
pop
lods
fs
lahf
shrl
sbb
loope
addr16
adc
outsl
sbb
lea
mov
dec
pop
dec
loopne
lret
pop
inc
jl
lahf
cmp
mov
ss
mov
movsb
aas
popa
data16
adc
mov
movsb
push
mov
fimuls
pop
mov
cmp
dec
push
cld
xchg
mov
clc
and
enter
mov
mov
and
pop
sub
dec
ret
and
cmp
cmp
das
iret
ds
rcrb
mov
xor
push
lret
push
and
pop
dec
out
sub
fsubs
arpl
jae
imul
movsl
movsl
cmpsl
push
pop
inc
cmp
shl
add
sub
clc
js
jb
ja
mov
cmp
jle
cmp
cmc
scas
gs
daa
pop
arpl
mov
jnp
hlt
dec
adc
out
dec
lds
repz
adc
lods
pop
pop
sub
xor
cmp
js
ja
gs
fwait
inc
test
sub
loope
in
fdivr
dec
jmp
shrl
sbb
inc
pop
in
push
xor
ljmp
add
pop
jne
sub
push
and
dec
adc
test
lret
or
xlat
pop
push
or
sti
gs
lds
xchg
and
sub
nop
fsubs
mov
ss
mov
pop
and
add
into
stos
mov
cltd
jbe
jp
xchg
xchg
mov
jnp
sub
daa
cmovns
nop
jge
dec
sti
repnz
mov
inc
cmp
outsb
mov
or
mov
outsl
sub
fldcw
gs
sbb
or
sti
out
outsb
repnz
daa
in
mov
fnstenv
in
cwtl
cmp
inc
fstpt
adcl
add
pop
gs
out
out
jo
push
or
leave
pop
push
mov
mov
aam
pop
push
mov
es
sahf
in
les
jp
cmpsb
in
ret
push
ret
dec
cmpsl
movsl
andl
loop
or
cmp
lcall
mov
pop
add
dec
mov
movsb
cmpsb
in
rorb
das
sbb
out
insb
or
cmp
jl
pop
and
pusha
shll
lahf
into
fisubrl
arpl
scas
xlat
jnp
int3
mov
add
mov
movsl
push
cmp
cld
hlt
test
pop
icebp
cli
xor
iret
xchg
mov
dec
add
and
cmp
movsl
fisttpl
xor
adc
rcrl
enter
rcrb
fiaddl
jbe
outsb
and
push
loope
das
add
sub
in
push
xor
ja
out
or
movb
jo
loop
rcl
add
jne
stos
inc
sub
repz
jnp
adc
repz
cmp
inc
fiadds
cmp
adc
xlat
jp
xor
sub
hlt
xlat
jecxz
sub
jo
mov
add
push
popf
jle
popaw
xor
shll
mov
mov
jg
inc
ret
je
cmpsl
mov
stos
stc
jecxz
ret
into
lret
push
mov
mov
push
push
xchg
inc
xlat
movsl
lret
sbb
push
inc
pushf
stc
xlat
fisubl
ret
cmp
inc
test
push
or
or
jns
mov
xchg
jno
mov
mov
xor
out
call
data16
pop
ja
xchg
int3
maskmovq
mov
int3
cmpsb
aaa
jno
idiv
icebp
ret
mov
lret
repz
and
test
cmp
mov
inc
mov
and
jg
mov
push
mov
pushf
mov
test
xchg
inc
cmpsb
es
inc
sbb
inc
mov
lahf
sub
icebp
or
mov
dec
lret
stos
inc
mov
mov
dec
in
or
mov
addl
add
jecxz
jge
mov
cmp
cmc
xchg
xchg
jns
hlt
jns
add
mov
into
xchg
punpcklbw
xor
js
imul
mov
out
or
pop
pushl
lods
mov
sub
dec
out
lds
into
sub
and
dec
pop
add
ja
mov
push
adc
pusha
and
pushf
test
xchg
ss
push
push
popa
or
or
sub
sbb
pop
cltd
jecxz
xorb
dec
ror
mov
push
bound
arpl
push
xchg
mov
inc
mov
aad
mov
xlat
mov
dec
xchg
mov
adc
gs
je
cmp
les
hlt
leave
sbb
push
mov
testb
xor
cli
push
xor
sub
je
dec
mov
negb
out
mov
pop
xchg
stos
loope
gs
sbb
add
out
cs
insl
xlat
movsb
sub
jnp
loope
cmp
pusha
adc
scas
push
pop
nop
sti
and
cs
lahf
ret
leave
add
mov
subl
xchg
dec
in
fisubl
mov
push
daa
cmp
ja
or
aaa
inc
sti
jl
inc
rclb
insl
add
insl
mov
adc
mov
dec
jne
jno
cs
pop
movsl
adc
out
mov
cmc
mov
arpl
mov
dec
sbb
jbe
repnz
hlt
rcll
pop
jle
les
mov
jb
mov
add
insl
out
jge
cmpsl
cltd
gs
mov
ss
cmp
fbld
jge
out
adc
arpl
sbb
sbb
aad
addr16
mov
cmc
imul
mov
inc
movsb
jae
aaa
push
fidivs
xor
mov
xor
or
cmp
leave
push
pop
dec
pop
mov
scas
jbe
jae
xor
cs
push
movsb
sbb
pop
ficoms
mov
add
pop
or
repnz
push
aad
xor
cmpsb
shrb
or
mov
notb
xor
jnp
les
and
jno
xor
daa
inc
jbe
dec
outsl
test
inc
repnz
notb
lea
cli
lock
stos
push
out
jmp
and
std
xchg
xor
cltd
sub
je
adc
push
fmull
leave
add
xchg
mov
pop
test
lret
push
outsb
sub
ja
mov
jle
test
je
cmp
mov
xchg
sti
push
in
shr
dec
and
xchg
stos
sbb
and
inc
out
stos
das
jg
lret
std
cmpsb
inc
rcr
lods
sbb
sahf
lahf
inc
in
in
xchg
sub
aam
push
cmp
shll
xorl
idivl
fdivrs
shl
sbb
call
notl
jno
mov
jp
or
mov
mov
cli
pop
mov
cmp
icebp
mov
aam
aad
lods
lcall
and
pop
pop
mov
bound
idivl
fstps
sub
gs
rcll
xor
in
or
push
add
cmc
lret
aaa
enter
cmpb
fistps
movsl
jge
and
xor
mov
push
mov
ljmp
out
cmp
in
jmp
cld
mov
in
sub
in
jno
pusha
lds
cmp
out
sub
mov
push
mov
subl
dec
cmpb
outsl
push
mov
cmpsl
pop
adc
inc
dec
stos
test
sbb
bound
xchg
in
xchg
in
xchg
dec
lret
or
mov
sub
inc
sbb
lods
popa
jno
insb
dec
test
in
fwait
xlat
clc
jns
jnp
inc
jecxz
mov
popa
int
lret
loope
cs
push
decb
icebp
dec
cmp
cmpsb
dec
ljmp
jg
aaa
arpl
xchg
scas
jge
out
mov
mov
xchg
sti
fimuls
repz
pop
scas
cltd
jbe
cmc
out
pop
sbb
mov
inc
inc
mov
or
xor
sahf
adc
mov
ljmp
push
call
aas
outsl
xchg
dec
idivb
lock
fcompl
jle
aad
or
fistpll
lods
cmpsb
call
out
cmp
out
cmc
adc
dec
loopne
mov
inc
mov
stc
movsb
mov
lret
lret
mov
cwtl
mov
push
and
sbbb
stos
mov
xor
jecxz
aad
adc
add
xchg
insb
ljmp
push
push
pop
pop
and
jmp
jo
add
adc
testl
test
push
jno
mov
push
dec
sub
data16
or
push
aaa
mov
pop
mov
ss
inc
in
inc
nop
test
jmp
jae
jno
shlb
in
xchg
cmpsl
test
push
addr16
ja
inc
fs
adc
add
xor
and
aam
div
in
xchg
cmpsl
test
push
addr16
ja
inc
fs
adc
add
xor
and
aam
stc
hlt
rcll
movsb
xchg
push
inc
jae
inc
fs
adc
add
xor
and
aam
les
hlt
and
xchg
xchg
cmpsl
test
push
cwtl
inc
fstp
inc
and
mov
jg
outsl
jae
arpl
sbb
or
xor
jl
dec
repnz
rcrl
in
sbb
int3
jae
arpl
sbb
or
jl
insb
adc
jecxz
jecxz
rcrl
in
xchg
faddl
sub
sbb
or
jl
insb
or
ljmp
in
mov
int3
mov
sbb
gs
je
or
pop
and
xlat
jne
sbb
pop
push
fwait
hlt
mov
push
mov
repnz
pushf
movsb
sub
mov
jl
jmp
jbe
lret
mov
and
mov
and
je
in
cwtl
scas
ret
sbb
dec
fdivl
pop
xorl
or
fbld
insl
in
add
out
cmp
dec
cld
mov
int
dec
out
jl
dec
mov
in
ss
repz
and
mov
mov
xor
or
dec
int3
jge
movsb
loopne
or
or
outsb
ljmp
cld
lock
mov
sbb
or
jl
insb
adc
ljmp
mov
faddl
insl
ss
or
sbb
pop
sbb
sbb
lds
clc
mov
mov
movsl
out
sbbb
dec
cmp
xor
adc
and
xor
xchg
ror
sub
xchg
enter
out
push
js
fs
outsb
sub
push
and
add
jecxz
rcrl
in
xchg
faddl
sub
sbb
or
jl
insb
adc
repz
ret
mov
faddl
inc
in
icebp
xor
pop
or
jno
cmp
cmp
mov
call
pop
lcall
mov
and
lods
mov
mov
fmulp
lea
in
mov
adc
stos
in
fstpl
mov
jge
popf
cmc
das
inc
xor
out
lock
mov
test
jns
jbe
xchg
jmp
cli
inc
lods
xor
inc
sbb
sub
scas
inc
out
ret
push
xchg
leave
rorb
mov
xchg
pop
sbb
rcrl
je
push
xchg
es
cli
jbe
add
cmc
and
ficompl
roll
pop
mov
iret
dec
movsb
cmovle
add
sub
jnp
cld
adc
mov
jg
jbe
fdivl
cmp
movsl
sbb
lock
leave
cmp
dec
lock
jl
add
outsb
dec
test
mov
out
repnz
rorl
or
adc
jb
mov
std
jno
mov
ret
rcrl
scas
jnp
arpl
aaa
pop
jge
mov
add
call
pushf
in
jp
repnz
idivb
lods
out
scas
sub
and
fisttps
rcl
cli
adc
mov
push
pop
pop
pop
loopne
leave
stos
aam
push
xchg
pop
dec
loop
dec
pop
fimuls
mov
imul
mov
fwait
imul
insl
es
xchg
push
dec
pop
pop
mov
test
xor
repz
jno
mov
sbbl
pop
jmp
sbb
out
xor
add
cmpb
andb
cmp
push
xchg
xchg
jns
loopne
inc
mov
orb
testb
or
sbb
add
xchg
mov
cmp
stc
scas
adc
cwtl
in
inc
mov
pop
add
leave
leave
adc
push
push
icebp
aam
lret
popa
mov
stos
mov
sub
aad
scas
jbe
out
and
dec
fdivrs
mov
jmp
aam
jmp
xlat
cmpb
jp
adc
mov
rcrl
mov
push
cmpsb
xchg
pop
mov
inc
add
rolb
and
sbb
add
pop
jp
cmpsb
jne
pop
mov
lret
mov
lods
rcr
int3
adcl
sbb
mov
adc
sbb
test
push
lock
or
mov
sub
rorb
jle
inc
aas
cltd
iret
push
jmp
dec
xchg
push
fnstsw
insl
pop
test
pop
pop
pop
mov
sbb
jo
mov
test
push
adc
push
repnz
stos
test
hlt
cwtl
fisubl
repz
ja
je
aad
pushf
int3
cld
cs
movsb
or
mov
push
and
out
push
clc
gs
or
mov
outsb
dec
test
and
stos
sbb
movsl
fucompp
arpl
insl
push
adc
repnz
fsubr
mov
cmc
mov
dec
or
adc
out
call
push
int3
je
std
fs
inc
sbbl
repz
out
orl
inc
mov
test
pop
in
jl
mov
sbb
xor
ja
out
jmp
dec
rolb
xor
dec
inc
mov
mov
mov
lds
aad
push
dec
inc
dec
inc
xor
shlb
jae
push
jns
cld
lahf
cltd
push
jmp
add
and
mov
ss
add
jnp
xchg
adc
rorl
sub
pop
or
cmp
daa
mov
and
popa
mov
or
leave
nop
loop
xchg
push
pop
xor
movsl
out
nop
inc
outsb
or
jno
movsb
and
shl
adc
add
jg
cmp
push
out
mov
adc
mov
cmp
jo
fwait
cmp
icebp
pcmpeqw
daa
jne
sbb
mov
in
mov
push
xchg
je
rclb
inc
push
sbb
aad
in
inc
jnp
idivl
add
push
fmul
sbb
imul
incl
dec
push
xor
sbb
push
mov
pop
cli
daa
push
dec
aaa
add
add
xor
inc
loopne
push
scas
xor
mov
mov
in
mov
int
pop
inc
movsb
lret
out
pop
mov
cs
insb
out
cmp
ljmp
mov
cmc
dec
xchg
loopne
or
cmpsb
int3
cmpsl
psllw
xlat
outsl
push
cmp
mov
xchg
push
fsts
outsl
push
mov
stos
aad
hlt
rcrb
mov
sub
dec
gs
fs
pushf
add
stos
dec
mov
xchg
and
and
add
cmp
xor
push
ret
cvtpi2ps
mov
xchg
popf
cmp
in
ror
fdivrl
test
mov
inc
and
andb
cmp
and
add
outsb
jge
outsb
xor
push
inc
lock
adc
mov
lret
cmp
sub
xchg
fnstsw
jae
mov
push
adc
fdivr
mov
dec
sbb
cmpsl
les
in
inc
xchg
sub
pop
mov
sbb
arpl
mov
mov
xchg
mov
ss
push
movsb
jno
jp
out
mov
aad
rclb
or
pop
pop
imul
and
add
roll
adc
xchg
mov
dec
aaa
xor
xor
mov
xchg
sbb
sbb
stos
push
popf
sub
cld
mov
lret
pop
xchg
or
jb
cld
mov
pop
hlt
and
cs
outsl
jnp
insb
in
f2xm1
repz
jnp
or
in
xchg
jnp
adc
lcall
dec
push
add
sti
jae
adc
mov
mov
mov
gs
or
push
in
lock
pop
sahf
mov
in
xchg
mov
aam
cmp
jbe
pushf
pop
and
add
ret
aas
es
in
sub
mov
and
sub
pop
mov
lea
aam
jbe
lret
xor
cmp
andb
push
lods
into
inc
iret
jbe
arpl
xor
ja
pop
popa
call
test
cmpsl
dec
sbb
lretw
cmpsb
sbb
call
and
test
mov
or
lcall
loope
dec
and
mov
mov
ret
imul
sarl
inc
sahf
pushf
cmp
scas
popa
dec
inc
scas
outsl
lret
xchg
push
fwait
push
shl
xchg
imul
in
ret
mov
iret
mov
inc
lret
mov
jbe
hlt
lods
mov
cli
hlt
mov
pop
insb
add
es
into
clc
addr16
dec
out
jp
push
lds
ja
fsts
in
fildll
sarb
jmp
roll
lret
dec
ret
outsb
jl
sbb
cmp
push
jmp
adc
enter
cli
mov
jp
ja
mov
in
jns
cmp
into
add
pusha
stc
jecxz
ror
popa
aas
dec
mov
test
pop
push
imul
pop
mov
sbb
hlt
add
dec
pop
sbbl
push
inc
imulb
imul
jecxz
jbe
js
mov
mov
outsb
push
into
mov
jno
lods
mov
popf
cmp
push
inc
aas
jne
push
jbe
lds
jp
xchg
adc
loop
ret
and
shll
inc
and
repz
dec
cli
adc
xchg
mov
mov
and
fists
arpl
inc
nop
and
mov
xchg
mov
mov
je
inc
xor
pop
sbb
jb
dec
xor
mov
inc
jl
movsb
fadds
xor
repz
inc
bound
fcompl
stos
imul
rolb
sbb
dec
sub
loope
ja
jge
bnd
jmp
jns
sbb
or
dec
lea
std
cmp
xor
fldl
jno
mov
mov
in
add
test
lds
dec
mov
mov
or
mov
mov
lcall
dec
mov
shl
jbe
jmp
xor
lds
add
enter
cmp
aad
arpl
pop
jne
rclb
faddl
pop
cld
mov
icebp
icebp
dec
jnp
and
aad
clc
mov
notb
mov
test
xor
daa
jnp
outsb
jmp
cltd
xchg
ja
xor
scas
dec
repnz
addr16
iret
fcom
xlat
jns
dec
lods
test
xor
push
loope
stos
jns
sub
shr
push
rcll
repnz
xchg
jns
clc
icebp
adc
ret
or
sub
pop
in
cmp
in
mov
ljmp
add
pop
lcall
push
pop
dec
pop
mov
pop
test
ficoms
mov
or
rcrl
stos
das
test
xchg
mov
push
test
cmp
mov
std
or
jmp
xorl
into
out
pop
shlb
xchg
pusha
call
pop
jle
in
aad
pop
mov
xchg
and
into
in
lods
data16
dec
shr
mov
test
mov
data16
out
out
les
test
push
push
lods
mov
xchg
or
arpl
xor
sub
outsl
mov
outsl
dec
popa
sbb
popa
stc
xor
loope
xchg
hlt
adc
mov
and
mov
repnz
mov
push
and
mov
mov
stos
add
gs
jb
inc
push
scas
mov
hlt
in
adc
and
pop
cmp
pop
jno
push
pop
pop
push
sbbb
and
int3
repnz
and
fmull
sti
fdivl
dec
dec
and
add
rcl
jmp
and
pop
ss
push
pop
into
bound
fstps
pop
scas
out
ds
mov
xlat
nop
jl
hlt
adc
add
pop
push
cmc
pop
add
fmuls
scas
mov
shll
mov
add
mov
clc
inc
sub
icebp
loopne
push
push
pop
mov
jns
rcrb
loop
mov
xor
leave
add
mov
cmc
add
scas
xor
in
arpl
pop
mov
xchg
outsb
pop
scas
cmp
xor
sub
jb
mov
mov
out
mov
xor
adc
out
pusha
jbe
clc
insb
mov
lahf
jmp
in
cmp
inc
mov
in
movsb
push
inc
xchg
inc
dec
jb
loopne
mov
scas
out
and
push
cwtl
xor
je
js,pn
cmpl
aas
sub
add
sbb
fadd
sbb
stc
ds
cmp
xor
sarl
popf
out
nop
out
cwtl
outsl
scas
add
and
xchg
jbe
insb
or
adc
outsb
popf
ds
rorl
repz
dec
rcll
std
push
pop
jnp
lea
mov
xchg
clc
in
fnstenv
lcall
cmpsb
repz
adc
or
pop
sub
mov
inc
cmpsl
xlat
fldt
testl
jg
inc
lret
sbb
testl
adc
sub
inc
pop
dec
push
xchg
les
scas
and
mov
out
fidivrs
lods
cmp
cmp
pop
inc
dec
pop
sbb
fimull
dec
cmpsl
push
aas
push
fistl
les
jne
les
in
xor
jle
or
nop
pop
add
sbb
xor
ror
loop
dec
scas
cmc
mov
popa
mov
pop
pop
addr16
push
add
fidivrl
xor
ljmp
push
leave
mov
lock
imul
push
cli
or
mov
sub
pop
jge
xchg
push
mov
inc
mov
mov
std
xchg
mov
add
add
adc
mov
mov
ljmp
push
mov
std
push
pop
push
add
mov
test
mov
jecxz
xor
and
sahf
mov
fnstenv
add
push
xor
cli
pop
jle
xor
xchg
fldl
loopne
bnd
fcmovnbe
jnp
and
pop
loopne
push
mov
jecxz
mov
jne
add
mov
inc
dec
aam
cwtl
outsb
jp
fdivr
or
pop
cmc
pop
in
stc
data16
push
lock
jb
or
loop
arpl
fsubl
mov
add
ret
shl
cmpsl
inc
pushf
fists
hlt
outsb
or
xchg
js
aas
sbb
rcll
icebp
stos
lret
pop
repnz
decb
fsubr
mov
negb
mov
xchg
jl
mov
cli
enter
mov
adc
lods
lock
stos
push
jns
jae
xchg
jns
repz
int3
flds
sub
in
jp
inc
and
stc
pop
out
cld
xchg
add
jbe
shlb
mov
lcall
xor
fcoms
lcall
sbb
jb
mov
push
sbb
hlt
mov
mov
scas
cltd
lds
inc
mov
sarb
std
inc
fs
ja
sti
jo
scas
pop
in
adc
jb
sqrtps
iret
imul
or
or
mov
popf
out
xor
mov
push
adc
mov
jb
jne
out
fcom
cmp
cmpsl
test
mov
cli
xor
and
jne
cmp
ficoms
mov
jno
cltd
ja
lea
cltd
push
mov
xchg
divb
ds
lock
jg
inc
jns
repz
fcmovbe
jbe
and
clc
mov
gs
fstps
mov
sub
std
cltd
movsl
and
mov
dec
xchg
xor
nop
gs
pusha
in
nop
push
std
icebp
jle
je
jno
rorb
aas
jecxz
loopne
push
or
and
lods
push
mov
push
insb
jbe
test
dec
cmc
jnp
jge
push
out
test
xchg
pop
leave
divb
lahf
dec
scas
mov
in
repnz
sub
mov
mov
sbb
inc
imul
and
sbb
adc
mov
aad
push
xor
push
or
arpl
push
rcll
cld
mov
add
mov
xor
cmpsl
pusha
sbb
int
fnstsw
jno
dec
addr16
mov
loop
fcomps
pop
ds
inc
dec
fcomi
mov
pop
cmpsb
out
aaa
push
scas
in
xor
mov
mov
in
mov
push
cld
pop
xchg
xor
pop
mov
out
arpl
pop
cmp
out
and
or
dec
xchg
mov
mov
mov
push
inc
gs
or
inc
popf
hlt
test
add
jo
mov
sub
loopne
cld
xchg
push
loopne
and
icebp
cmp
sub
mov
in
cmpsb
in
cltd
lret
sbb
sbb
popa
test
cwtl
mov
xchg
pusha
cwtl
cwtl
fidivrs
push
fnsave
fadds
rolb
jl
ret
cmp
ret
jmp
std
sub
dec
push
or
rorl
test
nop
leave
cwtl
test
arpl
cmp
adc
loope
mov
dec
jle
pop
sub
mov
sub
cmc
mov
sti
lcall
test
aaa
jo
inc
mov
adc
or
push
sub
mov
cmp
xor
push
dec
dec
clc
and
sbb
cltd
ljmp
mov
jge
xchg
xor
mov
sbb
cs
rcrb
jle
jl
push
movsb
repz
mov
xchg
add
jb
ret
aas
je
push
pop
dec
outsl
sub
ss
fidivrs
xor
push
inc
xchg
xchg
adc
int
mov
jo
leave
push
fmul
data16
sbb
mov
les
mov
sbb
push
lea
scas
adc
movsb
cmpsb
push
ficompl
fwait
hlt
push
ds
bound
pop
sub
push
inc
sbb
sbb
lret
sub
std
and
adc
cwtl
das
les
mov
sub
stos
mov
xchg
pop
sbb
ret
jp
bound
outsb
adc
clc
into
pop
pop
push
adc
xor
stos
inc
cmpsb
dec
lea
push
rcr
mov
mov
dec
sbb
add
aam
mov
xchg
dec
arpl
adc
or
xor
rol
insb
mov
xchg
cmpsl
sti
mov
sbb
movb
into
sti
cmc
ss
loop
bt
add
imul
movsb
mov
dec
mov
pop
repnz
mov
imulb
mov
inc
pop
popf
add
out
scas
xchg
cmp
jmp
mov
fwait
and
inc
mov
push
adc
sarb
lea
fdiv
ljmp
adc
movnti
mov
mov
push
out
pop
dec
addl
clc
aad
loop
mov
cmpsb
insb
sbb
cmp
je
rorb
jecxz
sti
pop
adc
test
adc
xchg
stos
fidivrs
mov
pop
push
popa
pop
das
xchg
dec
cwtl
out
divb
in
jb
xchg
mov
pop
outsb
jp
jnp
scas
jno
lds
stos
test
iret
push
addr16
fistpl
fnsave
mov
mov
dec
mov
push
pmaddwd
pop
insb
pop
jg
jp
out
add
add
in
fs
in
pop
sbb
jecxz
arpl
js
pop
loope
sbb
popf
fcompl
out
jne
cmp
mov
sbb
mov
in
sub
jo
jno
lds
and
lahf
sub
pop
mulb
xchg
pop
cmp
jmp
or
mov
sub
cmpsb
dec
add
inc
subl
ficoms
mov
xor
cmpb
push
rorl
popa
or
es
xchg
out
leave
mov
aas
xlat
imul
fstp
cwtl
mov
sub
dec
ss
sub
sub
cmp
push
in
dec
dec
xor
aam
xchg
out
out
jno
arpl
jnp
mov
icebp
and
pop
and
pop
cmp
adc
cmp
mov
cmp
fisttpl
push
sbb
inc
scas
dec
push
aas
push
pop
in
cmp
in
cld
ljmp
rclb
lcall
lret
sub
ljmp
scas
inc
dec
inc
mov
mov
leave
mov
cmp
inc
loopne
and
cmc
and
add
inc
pop
lods
jno
bnd
cmp
push
ljmp
bnd
add
imul
mov
sub
out
mov
fcoms
ficoms
inc
jns
rcl
mov
sbb
push
xchg
fdivrl
mov
or
adc
nop
sub
js
adc
xchg
cmpsl
rcr
dec
insb
jno
aad
nop
imul
mov
ret
arpl
jns
mov
fdivrs
lds
nop
loope
call
fwait
dec
jnp
mov
ds
mov
xlat
dec
sub
mov
imul
fs
and
out
sub
pop
fnstcw
imul
movsb
push
mov
stos
add
scas
pop
mov
out
inc
dec
movsb
pop
mov
xchg
xchg
scas
scas
sbb
mov
xorb
and
jmp
cmp
pop
cmp
mov
cmpl
push
and
mov
push
mov
mov
testl
out
jecxz
xchg
je
xchg
xchg
std
push
out
aas
and
stos
or
movsb
add
dec
insb
push
push
or
push
adcl
cld
negl
cmpsb
mov
and
or
and
shll
jl
mov
push
mov
sbb
mov
or
push
dec
mov
cmp
inc
push
xchg
dec
inc
mov
dec
dec
cmp
cltd
sub
or
lret
adcb
pop
inc
rclb
or
pusha
psubusb
test
lods
mov
and
and
cwtl
scas
lods
insl
cmp
jmp
push
push
and
repz
cmpxchg
mov
lock
jns
adc
add
popf
jb
xchg
push
movsb
sub
pop
mov
pusha
repz
lcall
sub
adc
lcall
bound
loop,pn
mov
or
cltd
add
jge
adc
push
orb
mov
loop
dec
les
repz
fucomi
mov
ss
dec
sar
jae
imulb
pop
xor
jnp
lcall
bound
test
rcrb
les
pusha
out
pop
pushf
push
rolb
movsb
dec
and
cld
fwait
jge
out
xchg
or
outsb
std
mov
fs
lock
push
adc
dec
arpl
loopne
adc
inc
out
sub
imul
xchg
ljmp
push
fwait
test
inc
or
jl
insb
adc
repz
ret
mov
faddl
sub
sbb
or
jl
insb
adc
repz
ret
mov
faddl
sub
sbb
or
jl
insb
adc
repz
ret
mov
faddl
sub
sbb
or
jl
insb
xchg
pop
orl
push
jns
ret
sti
les
insb
and
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
dec
insb
pop
subl
and
push
imul
jmp
cli
and
jae
arpl
pop
subl
mov
sub
cmp
jmp
sti
and
fwait
inc
stos
xor
subl
mov
sub
clc
pusha
xchg
mov
sub
pop
aad
adc
aas
in
imul
test
nop
dec
and
ret
cmp
icebp
cmp
scas
fmulp
cli
ss
xchg
aaa
jmp
sbb
aad
mov
adc
add
je
lcall
xchg
push
xchg
lea
push
gs
jmp
cmp
into
mov
jae
push
pop
xchg
add
push
stos
scas
or
sbb
in
pop
push
adc
push
fstpt
xchg
es
negl
xchg
inc
lea
outsb
hlt
xchg
fadds
fs
sti
bound
ds
lock
leave
xchg
jmp
pop
pushf
adc
imul
cmp
push
push
mov
xchg
jnp
or
sbb
sub
cmp
xchg
fcmovnb
jmp
sti
imul
mov
addl
adc
dec
lcall
jmp
orl
fwait
aaa
enter
cs
ds
pop
xchg
mov
imul
mov
cmc
adc
or
lds
add
pop
rolb
ret
sub
cmp
lret
adc
add
xor
and
jae
arpl
pop
subl
mov
sub
cmp
lret
adc
add
xor
and
jae
arpl
jle
notb
push
cmc
dec
imul
je
iret
inc
lds
or
or
or
add
addr16
shlb
mov
xor
cmpsl
sbb
arpl
and
lahf
bound
ss
pop
addb
and
inc
jmp
shrl
and
dec
sbb
pop
mov
adcl
cmpsl
mov
outsl
clc
pop
sbb
pushf
inc
xor
es
int3
test
test
and
add
daa
hlt
push
inc
jb
xacquire
xor
xchg
sahf
andb
mov
pop
int3
lods
roll
inc
mov
cmp
pop
std
outsb
in
cmpxchg
jge
std
cli
lcall
cmp
jb
adcb
jle
mov
fnstcw
push
mov
push
fwait
aad
in
mov
sbb
sbb
cmp
in
int
lds
mov
cmc
loopne
movsb
xchg
in
iret
aas
mov
and
aam
inc
popw
insl
rcll
out
insl
mov
sub
jae
dec
cli
movsb
jns
cmpsb
pop
jge
nop
fwait
xchg
lods
push
mov
jecxz
mov
cltd
in
shrb
lock
xchg
lds
jns
insl
outsl
jbe
inc
lods
jb
lahf
std
xor
xchg
jo
sub
test
pop
inc
mov
sub
mov
dec
add
roll
sub
outsl
push
xor
aaa
xchg
imul
out
pusha
in
jbe
push
mov
cmp
push
ret
adcb
clc
jo
add
jb
test
mov
popa
daa
scas
les
mov
outsl
push
popf
push
aas
fdivrs
ret
lock
xor
ret
lcall
ljmp
add
ret
jge
incl
bnd
mov
test
stc
pop
std
dec
call
pop
pop
bound
dec
mov
dec
cltd
inc
pop
add
cmpsl
mov
mov
xchg
fldt
in
aam
xchg
cmp
push
xchg
mov
ret
dec
pushf
ds
into
test
imul
cmp
pushf
das
imul
movsbl
pusha
pop
es
xchg
addb
and
xchg
popa
pop
popa
lods
xor
stos
xchg
gs
fs
adc
jns
cmp
push
loopne
jae
pop
mov
hlt
dec
faddl
aas
mov
dec
mov
shrb
xorb
xor
jg
mov
or
fsubrl
movsl
sarl
mov
sub
mov
inc
add
inc
or
dec
pushf
cmc
ds
jne
jge
push
jecxz
repnz
ljmp
das
loope
lcall
lcall
mov
arpl
mov
imul
jecxz
push
xor
xlat
movsb
loop
add
or
cmp
sti
dec
sbb
add
cmp
in
pop
scas
xor
pusha
pop
pop
popa
sub
dec
or
xchg
mov
out
adc
imul
call
cld
sbb
mov
rorl
mov
adc
cli
or
imul
dec
cmp
jmp
fidivrl
fistps
cwtl
cltd
cmp
mov
push
addr16
inc
int3
mov
shrl
xchg
jb
daa
les
jl
lock
cmp
xchg
mov
movsb
sbb
jecxz
pop
sub
scas
sub
sahf
mov
mov
add
pop
cmc
call
inc
inc
rcrl
sub
aas
push
jmp
pop
in
adc
jbe
push
jo
cli
pop
add
into
js
adc
in
sub
in
in
jmp
mov
ja
scas
push
jbe
cmp
stos
mov
push
rcll
jmp
sbb
cmp
mov
int
fcoms
cwtl
push
pop
xor
push
stos
lcall
add
mov
xlat
adc
ds
cltd
test
call
rcr
add
xchg
and
popf
mov
fdivr
lret
push
sarb
out
pop
mov
adc
or
mov
push
dec
stos
int3
jmp
data16
mov
mov
inc
sbb
iret
jmp
int3
ljmp
push
mov
test
xor
mov
sahf
outsl
popa
sahf
jmp
mov
pop
scas
jae
test
out
ret
xchg
pop
lods
push
fs
int
jo
mov
aas
fimull
xchg
jmp
sub
inc
shll
popf
jno
dec
daa
sub
pop
and
or
and
xchg
pop
xor
es
sbb
or
mov
cmpsb
xor
jae
jne
rcll
cmp
lds
and
pop
mov
test
fs
mov
push
xorl
adcl
rclb
mov
xor
jno
aad
mov
lods
pop
inc
cmp
or
cmp
int3
in
sbb
aas
decb
data16
int3
ljmp
cmp
mov
push
fnstcw
fdivrp
or
xchg
inc
out
clc
je
cld
jge
fildll
fnstenv
jo
fadd
jbe
lods
sbb
xchg
pop
add
and
jp
xor
aaa
push
jmp
cwtl
stos
sub
jno
cmpsl
xchg
push
and
mov
sub
dec
xor
rorl
pop
add
jne
cmc
gs
out
daa
fiadds
jge
pop
das
cltd
fwait
les
aaa
orb
int
adc
sub
jp
incl
mov
cmp
pop
inc
xor
mov
popf
and
dec
or
rolb
xor
test
andb
rcr
movsl
xlat
adc
icebp
push
jp
xor
mov
movsl
sti
shr
rolb
ret
movsl
xor
rol
mov
cbtw
imul
bound
jns
xchg
dec
xlat
outsb
scas
sub
jbe
push
popa
cwtl
loopne
sti
add
hlt
mov
or
jle
iret
aam
out
inc
clc
adc
pushf
mov
or
ja
in
ss
jns
ja
in
lret
ret
pshufw
lea
jo
fwait
xchg
dec
sbb
outsl
pop
jns
sub
sahf
sub
jmp
ret
lds
fwait
pop
or
jmp
movsb
lcall
xor
jns
rcl
iret
push
mov
add
int
inc
call
mov
dec
push
bound
cmp
data16
mov
or
call
in
loope
test
push
sub
xchg
fmull
ja
sub
and
pusha
inc
pop
sahf
xor
or
xor
mov
or
iret
or
lret
pop
imul
push
adc
jmp
stc
or
lods
xor
call
push
inc
xor
cmp
xchg
mov
sub
push
hlt
xchg
inc
sub
pop
or
pop
mov
cmp
lea
outsb
add
orb
jmp
lds
stos
xchg
cwtl
idiv
mov
push
sub
mov
cwtl
test
pop
dec
test
aas
push
pop
test
mov
dec
jecxz
mov
dec
repz
push
in
push
mov
idiv
ret
arpl
mov
pop
icebp
add
push
adc
pop
xchg
inc
dec
jecxz
call
inc
pop
sub
add
sti
insl
popf
jmp
push
cld
xor
aad
or
dec
xor
jmp
xor
repz
pop
fiadds
clc
lods
sbb
push
int3
mov
pop
cli
pop
inc
push
cmpsb
cmp
pandn
lret
imul
inc
pop
lahf
ja
xchg
iret
and
insb
bound
dec
dec
aas
dec
in
xor
mov
stos
mov
sub
dec
push
cmp
mov
mov
mov
lods
fsubr
nop
lock
cmp
shlb
das
sub
adc
mov
inc
dec
cwtl
cmp
fbld
push
rcrb
cwtl
fisubrs
pushf
mov
jbe
stc
pop
pop
stc
pop
pushf
or
sub
sub
jb
fstpt
movsl
outsb
insl
ret
add
add
nop
dec
jae
sub
jge
idivb
test
shll
sub
and
int
xchg
mov
callw
pop
sbb
adc
add
pop
popf
test
in
xor
mov
pop
jmp
xchg
inc
pinsrw
insb
addl
mov
mov
dec
push
lock
sub
test
cltd
lcall
je
mov
into
or
mov
push
dec
inc
dec
mov
dec
jb
mov
js
adc
push
add
in
jo
int
and
lcall
mov
dec
jmp
dec
adc
fs
icebp
mov
mov
inc
mov
fwait
adc
mov
mov
ss
or
loope
xchg
fbstp
mov
xor
std
push
push
inc
mov
push
mov
call
jmp
aad
repnz
fwait
pop
or
dec
les
push
sub
cmp
das
pop
sub
mov
cmc
push
xchg
inc
and
cmpsl
jbe
mov
frstor
test
sahf
mov
mov
ficompl
repz
fisttpll
imul
and
jae
cmc
xor
sbb
mov
dec
sub
inc
cmpsb
loop
xor
inc
or
dec
cld
dec
mov
popa
inc
adc
popa
clc
jbe
jb
lret
cmp
jmp
ret
or
adc
aas
loopne
adc
adc
or
adc
mov
out
adc
or
stc
cmp
ret
stos
loopne
xchg
cmp
cmp
mov
aad
lds
loope
es
dec
jo
sbb
inc
mov
ucomiss
jno
xchg
bound
mov
dec
iret
push
sar
or
push
jne
add
stos
loop
cmpsl
sbb
sub
dec
ret
cmc
jl
fisttps
mov
dec
pop
imul
adc
mov
jb
mov
mov
and
sbb
scas
int
repnz
jbe
pushf
jae
addr16
pop
xor
and
aad
cmp
xchg
or
xor
sub
add
jl
xchg
pop
testb
xlat
add
in
out
jns
and
xchg
hlt
adc
dec
out
js
mov
mov
cmp
push
sbb
popf
gs
dec
les
mov
jg
scas
jp
jge
repz
jns
fcmovnb
pop
fwait
cld
testl
in
xlat
or
jmp
sarl
lock
adc
jecxz
push
iret
adc
int3
adc
js
mov
test
mov
mov
push
xlat
movb
or
cwtl
mov
sub
jle
gs
es
pop
out
lret
or
mov
add
adc
pop
xchg
add
and
jo
dec
sub
push
cmpl
fwait
and
ja
mov
in
cmp
pop
mov
fisubrl
mov
clc
es
call
add
sti
xchg
dec
into
adc
jne
cmp
je
push
push
sbb
xchg
cltd
in
sbb
inc
xchg
dec
ds
sti
inc
jnp
or
jae
das
stos
les
mov
mov
mov
lods
movsl
int3
sti
sbb
mov
pop
pop
and
aad
sub
fcmovne
psllq
sub
jg
xchg
sub
add
into
inc
pop
push
cld
ja
pop
cmp
pop
jo
incb
sbb
push
sahf
stos
xchg
push
mov
in
dec
or
je
fwait
jnp
inc
pop
sti
jno
push
cmpps
insb
lcall
mov
mov
mov
and
inc
subl
outsl
loop
push
sbb
mov
imul
jp
fimull
imul
imul
cmp
push
cwtl
inc
or
shll
xchg
fcoml
push
jnp
in
mov
sub
adc
ret
lret
mov
ret
ret
rcrl
jmp
adc
jl
aad
js
loopne
neg
mov
mov
push
ljmp
jae
fstps
xchg
leave
lods
std
sbbl
sbb
and
sbb
repnz
je
xor
add
cwtl
aas
test
js
int
pop
adc
ret
nop
push
sbb
in
mov
add
xchg
dec
cmp
aam
xchg
gs
fildl
and
and
std
xchg
push
mov
adc
sbb
pop
dec
adc
mov
xchg
mov
xchg
pop
xchg
inc
or
mov
mov
sub
mulb
fstl
adc
mov
hlt
ffree
lods
stc
cwtl
fadd
jl
sbb
jne
jecxz
loopne
mov
pop
xchg
mov
adc
icebp
xor
outsb
addr16
adc
fisubrl
mov
or
ret
cli
add
out
fs
jne
mov
shl
cltd
jns
mov
movsb
out
push
jmp
sub
scas
inc
or
xchg
scas
shlb
cli
pop
cmp
aad
ljmp
ds
adc
stc
mov
mov
ficomps
call
push
jno
pop
fwait
repnz
gs
in
push
jnp
jbe
adc
mov
mov
xchg
lahf
jle
roll
mov
push
adc
pop
addr16
or
push
inc
stc
mov
xor
lods
cld
xorl
inc
mov
cs
cmp
movsb
sbb
jns
ds
rclb
jle
cmpl
xor
fldenv
mov
repnz
mov
loope
scas
inc
jb
sub
inc
or
xor
adc
jo
or
js
sarb
sarb
fwait
decl
sbb
mov
lahf
xchg
pop
iret
ret
pushf
dec
out
jecxz
lds
cmpsb
pop
mov
addr16
lock
in
pop
pusha
fistpll
sub
or
andl
nop
jg
int
jae
notb
mov
inc
jmp
sub
outsl
mov
inc
rolb
jns
pop
push
push
mov
inc
mov
mov
stc
cmp
fidivl
add
inc
add
andl
data16
jb
push
lcall
sub
icebp
loopne
roll
test
pop
sbb
out
add
adc
mov
bound
add
push
lret
mov
cmp
dec
or
pop
mov
test
push
mov
cmc
jnp
les
xor
inc
jge
popa
pop
shl
xlat
shrl
lods
or
mov
stos
cmp
loop
fld
push
push
mov
addr16
out
cmc
inc
jnp
dec
add
push
push
aad
jno
movsl
dec
sub
pop
arpl
lods
sub
int
sbb
adcl
call
mov
scas
lock
loopne
mov
popf
fcomps
add
cwtl
cmp
nop
ljmp
cmp
adc
dec
lahf
movl
rorl
mov
cwtl
pop
xchg
mov
jle
sub
shll
scas
xor
repz
test
sub
add
adc
call
inc
xchg
push
push
xor
hlt
arpl
gs
sbb
lock
in
cmp
pop
mov
lds
inc
in
mov
test
dec
decl
out
jle
adc
cmp
inc
mov
decl
mov
sub
push
loope
or
xor
test
cmp
mov
call
push
push
sbb
mov
push
aam
lods
insb
mov
ljmp
aaa
incl
cmp
dec
or
inc
shll
fcmovb
push
call
lock
outsl
sbb
fiaddl
xchg
repnz
sbbl
rep
pop
fnstenv
push
lea
rorl
dec
ret
mov
pop
xchg
sbb
push
sub
stos
jecxz
mov
sbb
inc
jge
ret
mov
xlat
dec
jae
dec
cmp
xchg
mov
addr16
rol
lods
andl
pop
cmp
das
lahf
sub
les
mov
in
sub
shlb
jbe
imul
icebp
xor
bound
jae
sti
sbb
mov
sbb
nop
pop
sahf
push
cmp
clc
mov
mov
mov
sub
inc
nop
imul
mov
mov
addb
cmp
les
in
icebp
sbb
mov
pop
popa
lcall
imul
fwait
rclb
jno
xor
add
mov
adc
jns
shrb
mov
cmp
cmp
sbb
sbb
fsts
js
mov
mov
dec
lock
add
addr16
and
mov
popf
fsub
pop
pop
push
cmp
mov
cmp
loope
push
js
push
int3
loop
fimull
mov
out
cli
repnz
je
pop
adc
push
mov
js
xchg
push
pop
mov
cltd
out
js
pusha
popa
addr16
outsl
pop
inc
add
stos
xor
xchg
test
loopne
repz
sub
mov
imul
jae
mov
push
ljmp
clc
cmp
mov
xchg
add
cmpsl
jnp
pop
inc
xor
push
cld
int3
adc
imul
orb
mov
or
ljmp
or
lret
fimull
lods
gs
xor
ffreep
xchg
outsb
sahf
test
cmpsb
xchg
mov
stc
test
xor
inc
sbb
repnz
push
jnp
out
cwtl
fisubs
adc
push
inc
or
scas
mov
cmp
out
test
mov
inc
ffree
sbb
mov
adc
clc
jge
adc
sub
push
mov
in
xchg
addr16
sti
mov
inc
add
adc
mov
sti
stos
cmc
int3
test
add
xchg
adc
fwait
andl
xor
or
int3
lcall
mov
iret
sbb
sbb
push
fbstp
dec
shll
mov
cmp
jp
mov
jnp
and
push
push
enter
jo
into
aad
jne
popa
fst
mov
sbb
fs
shlb
fdivs
jnp
testb
js
sub
mov
fnsave
je
pop
xchg
call
jbe
fcmove
xchg
into
push
dec
lods
xor
xor
mov
loop
mov
pushf
jmp
inc
call
shlb
out
movsl
out
dec
aad
jmp
fnstsw
imul
flds
adc
push
mov
or
setl
cwtl
sbb
pop
push
cmpsb
push
xchg
enter
in
sub
sub
cmp
inc
ss
lods
mov
xchg
xlat
mov
outsl
adc
call
jp
cld
add
inc
adc
and
mov
inc
adc
inc
or
rcrb
mov
xor
test
fwait
cltd
aam
cwtl
jns
and
pushf
jmp
dec
mov
pop
sbb
sbb
cltd
enter
iret
icebp
mov
mov
sbb
cs
std
mov
inc
fimuls
ljmp
fstp
bound
bnd
mov
test
movsl
cmp
push
test
inc
mov
lds
inc
movsl
clc
mov
mov
aas
push
pop
jge
mov
push
add
mov
cmpsl
xor
movsb
jb
push
add
loop
add
jb
insl
fldenv
movsl
popf
into
and
mov
pop
idivl
out
or
add
movsl
xchg
out
add
sbb
shlb
push
mov
pushf
jnp
jmp
jnp
clc
loopne
or
add
pop
fwait
adc
cmp
outsb
stc
loopne
loope
push
inc
je
xor
leave
mov
mov
and
cmc
ret
and
pop
shlb
out
gs
fisubs
or
sbb
mov
and
ja
jmp
mov
pop
fisubs
cmpsl
cmp
gs
pop
jno
test
jl
scas
add
mov
ljmp
imul
push
mov
mov
jns
addr16
test
leave
loopne
sbb
adc
push
cli
pop
cs
jge
adc
cli
xchg
and
or
arpl
inc
adc
adc
sbb
popa
mov
stos
seta
pop
xchg
xchg
data16
mov
iret
mov
aas
push
mov
mov
cmpsl
fdiv
adc
add
not
xchg
outsl
xor
cmpsb
outsl
jns
adc
pop
add
mov
jg
cmp
fwait
call
jecxz
cmpsl
lods
fldcw
lcall
aas
mov
fidivrl
push
xor
sub
mov
mov
mov
xlat
dec
dec
cmp
sahf
lods
cltd
cmp
cld
enter
jno
add
sub
cmc
adc
mov
mov
in
adc
mov
lock
mov
xchg
hlt
imul
insl
or
sbb
adc
rorb
dec
in
test
les
out
loope
or
mov
add
ljmp
sbb
xor
lcall
cmpsb
insb
outsb
inc
pop
rorl
adc
xor
imul
rcrl
ret
sub
cmp
lret
adc
add
xor
and
jae
arpl
pop
subl
mov
sub
cmp
lret
adc
add
xor
and
jae
arpl
fcmovne
jmp
jnp
mov
sbb
repz
add
xor
and
push
mov
subl
mov
sub
jecxz
in
fldt
sti
fucomi
mov
lods
or
pushf
ret
fwait
int3
mov
jb
outsb
or
sbb
insb
xor
add
repnz
ret
cld
mov
sub
cmp
or
sbb
insb
push
jge
dec
adc
jmp
loop
lret
in
stos
cld
mov
sub
pop
pop
jl
jns
insb
jae
dec
cmove
mov
stos
jnp
or
inc
in
pop
jmp
loope
negl
movsb
out
sbb
scas
inc
mov
in
cmp
pop
xor
xor
nop
repnz
repnz
jecxz
cmp
or
gs
aad
mov
out
outsb
xchg
imull
mov
insl
and
and
in
pop
add
fwait
repnz
fdivrl
and
mov
mov
xlat
push
or
fcompl
ret
sub
pop
xchg
inc
cmp
cld
scas
mov
pop
std
nop
std
inc
add
mov
push
jae
jbe
inc
jbe
mov
push
mov
pop
adc
mov
fsubr
mov
mov
sub
cmp
or
sbb
insb
sub
adc
xchg
lret
ret
mov
xchg
int3
mov
sbb
jg
pop
sub
sub
sub
fimull
ffree
mov
mov
mov
cltd
out
pop
or
jno
sbb
fwait
inc
sbb
jle
addr16
mov
xchg
mov
mov
fdivrp
mov
sub
cmp
or
sbb
insb
xor
adc
repnz
ret
cld
mov
sub
cmp
or
sbb
insb
xor
adc
repnz
repz
cmp
rcll
hlt
jmp
cs
in
scas
push
pop
sbb
mov
mov
sub
cmp
sar
jb
sub
loop
jmp
ss
cmp
sub
mov
lret
clc
mov
mov
inc
in
dec
mov
test
cmp
adc
xor
add
mov
sbb
mov
pop
call
hlt
jl
dec
scas
fbld
xchg
gs
lcall
mov
xchg
sub
sbb
jl
js
cltd
mov
int
mov
cmp
clc
cmp
loop
pop
add
adc
mov
or
push
cld
data16
mov
mov
mov
push
add
pop
jle
push
fdivrl
cs
std
clc
xchg
data16
jp
lahf
push
mov
inc
mov
or
mov
cmp
loope
popa
mov
jns
outsl
jns,pt
push
mov
xor
dec
sub
and
leave
jbe
jno
add
mov
jl
dec
clc
fcmovb
cld
mov
loop
enter
lock
gs
mov
ror
push
xchg
int3
inc
out
inc
psllw
add
xlat
insb
cmp
out
jl
or
imul
xor
and
sub
mov
sub
bound
lahf
je
jmp
scas
popf
lock
iret
aam
sbb
ds
insb
jl
arpl
cmpsb
xchg
jl
cmp
or
pop
insl
xor
push
mov
cmp
cmp
lcall
repz
xor
adc
xlat
fninit
cltd
mov
sbb
xchg
bound
cmp
jmp
mov
push
popf
sub
stc
add
fstpl
out
bound
iret
lea
jae
outsl
jns
fsts
cltd
aaa
sti
sub
cld
dec
shrl
iret
ds
pusha
add
push
outsl
sub
out
rcrb
lods
shl
cli
mov
cmp
js
aad
adc
add
lret
adc
in
jecxz
push
enter
mov
je
add
call
add
arpl
dec
stc
and
pop
jb
push
pop
sti
gs
sub
adc
sarb
xor
adc
les
cmp
jmp
add
inc
and
clc
ror
push
loop
stos
jmp
ret
push
xor
mov
and
jge
or
lret
jb
lcall
dec
cmp
xchg
into
push
das
cmp
xchg
enter
out
out
mov
mov
xor
mov
mov
push
movsb
xchg
xor
loop
bound
xchg
cmp
lock
mov
xlat
fsubl
int3
adc
adc
jne
out
repnz
dec
mov
scas
fwait
push
test
and
mov
ficoml
rcr
pop
cmp
xchg
test
xlat
jo
mov
jp
cmp
in
xchg
popa
in
or
stos
es
arpl
fisubrl
addl
nop
fstpl
and
jg
add
addb
sub
mov
lock
xchg
jge
mov
loope
repnz
int3
add
cmp
or
add
xchg
xchg
mov
imul
jne
pusha
nop
sub
jns
addr16
jo
jbe
mov
mov
sti
repz
dec
out
mov
push
ja
pop
sub
das
test
mov
or
mov
into
mov
add
dec
ljmp
and
xchg
inc
xchg
fsubp
sub
int3
test
xchg
leave
sti
jno
push
add
hlt
out
lret
out
mov
fcompp
cmpsb
sub
test
push
pop
add
imul
mov
stc
pop
mov
pop
scas
xchg
adc
add
sahf
jns
stos
inc
jmp
jl
leave
xchg
pop
rolb
ja
mov
dec
inc
popa
mull
sub
fildl
faddl
sub
sbb
xchg
clc
sub
iret
cld
jnp
push
sub
insl
pop
sub
out
into
aad
add
mov
and
iret
ret
xchg
add
sbb
sub
add
aas
adc
cmp
in
popf
stc
subl
sbb
or
iret
mov
jp
test
inc
push
enter
xchg
xor
ljmp
jbe
push
cld
ror
and
fsub
cltd
sub
ficompl
adc
mov
test
push
or
loopne
push
pop
scas
and
daa
xor
popa
addr16
ret
pop
mov
mov
push
cmc
xchg
loope
or
or
cmp
dec
adc
inc
add
mov
test
in
in
dec
mov
adcl
repnz
ja
insb
in
lea
xor
xor
neg
or
jmp
cld
mov
adc
inc
js
dec
aad
aaa
or
fnstenv
or
test
pop
dec
mov
fmull
faddp
pop
sbb
or
dec
repz
repnz
aam
dec
sbb
ret
rol
and
mov
out
insb
inc
sbb
sub
js
stos
stos
insb
and
and
push
inc
cmp
shll
test
jne
addl
enter
push
push
idivl
mov
loopne
cli
sbb
add
sbb
les
push
push
mov
out
and
mov
imul
test
daa
subl
arpl
notb
sub
jp
jl
imul
xchg
pushf
inc
cmp
cmpsb
mov
sbb
inc
test
pusha
cmp
pop
xchg
test
rcrb
and
add
push
xor
jne
push
pop
add
clc
jno
je
scas
push
fstpl
cmp
mov
pop
sahf
je
test
dec
sub
iret
mov
ret
dec
add
mov
pop
fwait
sbb
stc
adc
movsb
icebp
pop
sti
push
outsl
ja
xchg
and
inc
fs
mov
mov
std
in
fldl
fdivl
sbb
popf
es
mov
sub
adc
fdivrs
mov
pushf
mov
jp
enter
sti
cmp
pop
lea
xorb
dec
lahf
or
or
xor
jmp
les
xchg
popa
xchg
jmp
dec
loop
incb
loop
push
sbb
ret
ds
pop
pop
and
repnz
mov
ja
or
icebp
addr16
adc
mov
mov
lock
push
jmp
lds
nop
sub
xchg
pop
roll
sti
fildll
jne
and
lock
addr16
scas
adc
or
xchg
shr
data16
fucomip
xor
out
test
shrl
jns
loope
scas
pop
es
xor
pop
add
or
jne
cli
cmpl
and
mov
push
dec
cld
xchg
xor
xchg
add
mov
inc
xlat
loop
mov
cwtl
or
leave
ficoms
inc
add
roll
loop
or
sti
stos
in
in
sbb
or
pushf
out
xchg
cmp
pop
dec
inc
xchg
pop
insb
push
cmp
mull
in
aam
sarl
popa
lret
scas
stc
mov
dec
insb
push
and
sarb
inc
cwtl
add
xor
loop
cmp
mov
inc
mov
push
xor
push
jo
inc
xor
cmp
jo
pop
xchg
push
push
jmp
push
negl
enter
cmc
dec
inc
lods
sub
xchg
in
mov
es
mov
scas
or
movsl
loop
push
ffreep
scas
and
or
in
add
cwtl
fsubl
dec
xlat
call
test
jne
xchg
lock
leave
xchg
loop
mov
push
addr16
xchg
in
bound
pop
shll
push
movb
mov
fcmovbe
or
addb
out
xchg
in
shll
flds
push
into
ret
cs
iret
fisubrl
loop
sbb
push
adc
xchg
inc
add
iret
iret
push
mov
int3
in
daa
cwtl
pushf
xchg
and
cltd
test
je
shl
das
sarb
mov
fisubrl
leave
les
cmp
push
movsb
push
imul
dec
sub
outsl
mov
sbb
jae
mov
xor
or
jmp
cmpsl
dec
loopne
sub
mov
jne
xchg
pop
mov
fwait
inc
lock
add
negl
lods
insl
or
mov
clc
data16
loop
sbb
shl
movsb
pop
mov
repnz
dec
cmp
sbb
enter
cmc
sbb
jae
int3
rcrb
sub
sbb
adc
je
xchg
or
inc
clc
repz
inc
fidivrs
jg
cmpsb
dec
push
sbb
and
and
mov
insb
add
lcall
cs
mov
sbb
pop
testl
jo
sbb
push
insl
jge
and
movsl
aad
daa
and
pushf
or
xor
jmp
cmc
mov
int
xchg
das
xchg
jo
jns
repz
pop
mov
lcall
stc
scas
pop
or
mov
loop
add
xchg
out
push
mov
cltd
add
popf
cmpsl
setg
scas
loope
out
pop
pop
push
inc
xchg
aam
sti
in
inc
mov
fildl
movsl
popa
add
loope
dec
push
scas
adc
or
mov
cmp
insb
and
add
jmp
scas
fistpll
xchg
sub
adc
icebp
cmpsb
jae
xor
pop
fdivrp
sub
jecxz
cmpsb
mov
and
push
repz
xlat
push
jg
into
pop
mov
jne
and
dec
mov
incl
rorb
stos
shrb
add
inc
push
or
mov
mov
in
cmpsl
out
jo
bound
repz
or
pop
neg
insl
jp
inc
jmp
out
mov
popl
lcall
test
mov
int
movsb
mov
aas
sti
rcll
inc
fwait
adc
jmp
gs
scas
cmp
xchg
test
dec
push
sbb
in
cmp
sbb
push
out
insb
jns
lret
lock
adc
inc
mov
sahf
inc
pop
mov
in
sti
adc
out
push
mov
mov
call
adc
outsb
scas
aas
mov
xor
push
jge
lea
and
cs
inc
movsb
decl
test
or
in
rorb
push
movsl
into
add
addr16
and
and
cmpsb
and
fisttpll
sbb
mov
jle
aam
pop
inc
sbbl
dec
mov
jmp
fimull
lret
dec
aaa
leave
pop
cmpsb
data16
jbe
sub
outsl
mov
pop
in
jmp
adc
lea
cs
pushl
mov
negb
and
and
hlt
mov
push
sahf
sbb
adc
cmc
mov
rcl
add
xchg
insb
loopne
mov
jbe
mov
repz
les
clc
xchg
push
jns
lock
push
aad
pop
inc
scas
xor
pop
test
dec
push
out
mov
jg
js
add
scas
das
push
mov
inc
pushf
pusha
push
ja
cmpl
sub
hlt
inc
mov
ds
in
out
ss
shr
fistpll
pop
jmp
pusha
and
push
dec
stos
add
sub
mov
sarb
pop
cmp
mov
xchg
pusha
jnp
ret
lods
adc
mov
incb
inc
or
add
iret
xor
pop
stos
push
dec
hlt
push
mov
out
push
repnz
jns
sbb
push
and
jl
shrb
clc
cld
popf
aaa
popa
js
pop
ss
outsl
jg
push
jae
sub
scas
or
rdpmc
les
adc
mov
je
aam
cmp
jne
mov
cmp
aaa
andb
mov
lods
dec
adc
pushf
xor
xchg
add
and
dec
cmp
sub
imul
scas
xlat
xchg
lds
xor
xchg
add
lret
sarl
in
cmp
mov
outsl
inc
sub
repz
jno
fcmovb
xchg
push
add
in
scas
js
rorl
cmp
mov
jb
and
lahf
xchg
sbb
and
test
push
cli
push
lret
mov
mov
lahf
mov
mov
out
pop
and
outsl
arpl
roll
out
rcrb
in
mov
jb
stc
or
movsb
inc
sbb
add
cltd
lods
aas
imul
ja
jmp
leave
mov
xor
je
in
cmpsb
popf
cltd
jns
add
int3
push
push
add
lahf
dec
xor
je
mov
or
adc
pop
and
lods
and
sbb
adcl
mov
dec
and
sub
in
inc
push
push
scas
outsb
cvttps2pi
not
pop
jle
fimuls
sbb
stos
loope
popa
in
ret
repnz
push
jecxz
mov
sub
cmpsl
dec
dec
xchg
xchg
or
scas
sbb
and
sbb
mov
xchg
iret
mov
add
flds
dec
imul
xchg
mov
int3
dec
mov
pop
push
lret
jb
aam
cmp
adc
inc
adc
cmpsb
adc
outsb
xlat
loop
adcl
mov
js
jb
std
jl
and
aam
or
pop
out
jle
sub
loop
aad
andb
sub
push
xchg
lcall
push
sbb
dec
lret
in
enter
mov
jge
and
mov
sbb
cmc
mov
xchg
bound
push
jmp
sarb
fs
sub
fistpll
sahf
rcll
sub
popf
pop
jl
dec
pop
push
stos
push
out
jge
cld
clc
jno
movsl
jns
test
cli
push
and
dec
mov
sub
sub
cmp
xor
sbb
dec
into
arpl
andb
rorb
imulb
fsubr
pop
cs
adc
repnz
push
lods
aas
xor
fsubr
ret
jno
or
jmp
or
jge
xor
pushf
dec
mov
push
jns
sbb
xchg
sbb
ret
mov
mov
aam
cmpsb
sbb
sbb
and
fbld
pop
repnz
pop
mov
sbb
popa
fwait
cli
mov
cmpsl
repz
push
xor
add
xor
adc
jne
addb
sbb
and
js
jmp
pop
add
xor
mov
out
sbb
stos
or
negb
jnp
adc
shl
jmp
clc
sbb
arpl
ffree
das
sbb
js
repz
jno
dec
movb
xor
aam
add
pusha
adc
adc
lds
test
mov
mov
mov
repnz
dec
movsl
pushf
inc
sbb
test
mov
xchg
lret
mov
cmp
xchg
inc
dec
and
jecxz
pop
ret
xor
ja
jne
cmp
inc
add
popf
and
stos
mov
lcall
rcrb
fstp
inc
xchg
mov
imul
adc
pop
dec
xchg
mov
into
fwait
jge
jmp
popa
gs
dec
xchg
aaa
pop
cld
pusha
mov
and
daa
inc
mov
mov
outsb
mov
xchg
insl
and
mov
clc
xor
jae
ffreep
jecxz
add
pop
ds
stc
popf
bound
mov
sbb
dec
ja
jo
sub
rolb
cmpsb
testb
test
mov
or
or
push
add
test
lock
int3
stc
jae
jbe
icebp
stc
add
arpl
and
mov
inc
jns
pop
fwait
pop
pop
mov
jnp
mov
call
push
sbb
cmp
sbb
outsl
ljmp
add
sbb
pop
fcoml
andb
enter
dec
xchg
sbb
loope
sub
dec
add
mov
adc
fisttpl
imul
inc
cmp
sbb
cmpsb
cmp
mov
mov
lock
addb
in
out
sbb
push
and
fnstcw
xchg
int3
pop
dec
daa
iret
mov
cmpsb
pop
jns
rorb
in
jnp
outsb
data16
jae
xchg
test
test
cmp
push
fwait
mov
stc
xchg
lcall
cmpsb
addr16
add
jno
or
insb
or
js
or
stos
cli
loop
aas
pop
popa
aad
lret
sbb
faddl
inc
mov
jp
adc
outsb
cld
outsb
int
fnstcw
divl
subl
cmpsb
repnz
push
sub
inc
out
cmp
sub
xchg
sbb
inc
mov
push
sbb
mov
mov
and
out
or
jg
ret
mov
ja
adc
lahf
scas
or
lea
pusha
sti
cmpsl
sysret
cmpsb
add
mov
aad
scas
push
jbe
testb
xchg
rcl
adc
lods
dec
jecxz
pusha
rcr
rcrl
stos
cmpsb
mov
loopne
inc
lock
pop
xchg
divps
imul
and
dec
mov
mov
and
lods
cltd
jmp
loop
cmp
mov
shl
insb
in
testb
inc
out
data16
push
cmc
out
jecxz
inc
cmp
das
mov
pop
popa
into
push
fs
leave
loopne
fcompl
mov
xlat
dec
pop
jg
mov
jnp
std
jnp
imul
shrl
jp
lods
dec
pop
lcall
adc
and
xor
push
iret
cmpsl
sbb
mov
enter
mov
popa
xchg
fstps
mov
out
push
sbb
lret
cmp
add
popf
les
popf
push
push
ret
lea
addr16
in
add
cmpsl
fisubl
mov
sahf
cltd
xchg
dec
mov
addr16
ret
call
mov
imul
das
pop
push
insl
dec
in
xchg
adc
loopne
inc
mov
ror
addr16
xchg
loop
out
and
dec
mov
mov
jl
jno
sub
push
sub
xor
stos
push
mov
cltd
call
mov
adc
cmp
or
or
subl
jp
sub
addr16
or
cmp
ret
out
in
pop
ficoms
dec
xchg
test
mulb
mov
lods
insb
insl
stc
sub
or
add
loopne
ds
shlb
mov
stos
enter
pop
xor
jecxz
sbb
mov
scas
stos
mov
or
mov
in
in
jnp
mov
leave
jb
lods
mov
in
test
jg
sbb
inc
or
sub
push
lds
mov
jno
push
rclb
add
loopne
lahf
mov
mov
rorl
gs
lret
lods
pop
pushf
push
push
adc
mov
mov
mov
leave
idivb
out
jae
xlat
jp
das
out
add
mov
xor
push
lds
leave
adc
shl
inc
notb
pushf
out
and
rolb
test
jno
movsl
xchg
mov
ficompl
test
movsl
adc
and
dec
iret
repz
dec
mov
ss
pop
or
cmc
sbb
xchg
pushf
aaa
and
insb
movsl
ficoml
mov
aad
pop
shr
mov
lock
ror
lret
push
jno
or
pop
insl
xchg
aaa
data16
je
sbb
repnz
mov
int
loopne
loopne
add
adc
inc
fdiv
jnp
push
cmpsb
sarl
xor
sub
pop
iret
add
out
jno
arpl
dec
cmp
xor
cmpsb
arpl
xchg
cmp
imulb
xor
das
stc
xchg
pop
add
cld
push
repnz
jmp
xchg
push
inc
pushl
lahf
or
test
arpl
test
jae
push
inc
fstpt
test
push
pop
xor
movsl
push
nop
jl
psrlw
sub
addr16
dec
mov
nop
insb
xchg
ja
fyl2x
sbbl
xor
iret
cltd
push
inc
push
and
mov
or
subb
pusha
ss
jbe
out
mov
out
jp
sbb
mov
repnz
in
lcall
mov
js
repz
xor
add
pop
lods
cwtd
sub
push
test
push
dec
jae
or
outsl
xchg
sbb
mov
sbb
mov
sbb
lret
mov
or
mov
xor
cli
ret
mov
xchg
mov
mov
inc
ljmp
or
lret
popa
popf
xor
add
lea
xchg
sub
pop
cs
pop
push
mov
ret
mov
push
jmp
and
lods
mov
leave
push
dec
rolb
in
movsb
pop
lahf
mov
xor
jge
movsb
frstor
lcall
cmp
data16
sbb
dec
mov
xchg
ss
sbb
sub
sbb
icebp
push
test
dec
lods
test
mov
pushf
ret
cld
mov
sub
cmp
or
sbb
insb
xor
adc
repnz
ret
cld
mov
sub
cmp
or
sbb
insb
xor
adc
repnz
ret
std
mov
sub
push
sbb
and
pop
add
pushf
ret
cld
mov
shll
enter
xor
mov
movsb
std
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
mov
mov
movsl
rcl
pop
in
fwait
aas
in
stos
mov
and
sub
sbb
dec
cmc
pop
subb
fwait
and
lret
jne
sub
sbb
dec
cmc
pop
in
adc
decb
adc
adc
cmp
inc
out
shl
pop
sub
xchg
mov
outsb
out
outsl
xor
mov
jle
pop
sub
je
sarl
fiadds
push
xor
inc
add
ret
int
xor
test
inc
add
jp
outsl
cwtl
icebp
or
cs
adc
ficoml
cmp
clc
sahf
test
sub
push
lds
jmp
jae
or
movsl
fildl
shll
push
les
dec
push
test
pop
jae
dec
movsb
pop
in
ljmp
mov
sbb
cmp
mov
popf
insb
push
adc
push
ficompl
jne
lcall
sbb
dec
cmc
pop
in
adc
fwait
and
lret
jne
and
jg
addr16
push
in
xchg
push
mov
nop
ds
ret
or
callw
and
add
jmp
push
xchg
pop
orb
lret
stc
jo
ja
push
ja
xor
xor
adc
out
lds
pop
in
adc
fwait
and
lret
jne
sub
sbb
dec
cmc
pop
in
adc
fwait
and
lret
jne
sub
dec
bound
and
or
push
mov
mov
test
int3
enter
sbb
adc
jne
mov
out
rcrb
imul
pop
lret
or
xchg
leave
mov
push
inc
sub
loopne
les
xchg
fisubs
in
repz
mov
test
in
scas
sti
into
jne
movsl
rcll
mov
mov
cli
xchg
sbb
fnsave
data16
jle
jl
xor
shrb
aas
xor
sub
mov
sub
adcb
cmpl
sbb
ljmp
push
subl
pop
fiadds
mov
mov
pop
sub
iret
seto
fisttps
imul
inc
shll
fs
sahf
jecxz
cmpsb
mov
fwait
ljmp
mov
push
jne
or
xor
inc
xchg
fdivl
and
mov
and
dec
pushf
loopne
movsl
incb
or
std
sub
and
aam
jbe
push
mov
sub
inc
xchg
test
test
arpl
jle
pop
mov
outsl
or
mov
mov
add
mov
and
loop
fs
jmp
add
mov
lods
scas
jmp
bound
xchg
das
mov
es
std
sbb
cmp
fs
jl
mov
inc
xor
adc
xchg
pop
adc
inc
mov
jns
and
icebp
dec
scas
fcmovnb
call
loopne
mov
cltd
adc
aaa
push
push
or
lea
cwtl
data16
jns
popf
jne
mov
xchg
mov
aaa
out
pop
mov
aad
fidivrs
es
sub
adc
stos
push
xchg
jb
and
loop
xlat
mov
nop
xor
adcb
or
dec
cmpsb
les
jbe
dec
push
adc
fcoms
inc
or
mov
icebp
out
or
sti
and
js
sbb
loope
in
sahf
fwait
mov
pop
mov
ds
jle
sbb
pop
mov
out
lea
jb
and
lds
mov
xor
jne
add
stos
jo
add
cld
xchg
test
xchg
out
mov
mov
in
pop
and
dec
and
ljmp
cli
test
testl
push
xor
mov
fwait
jno
mov
jno
mov
rcll
or
push
push
cmp
aam
mov
push
bound
andl
pop
out
dec
or
pop
xor
ja
fcomi
mov
mov
mov
es
popa
and
sarb
aas
fsubrl
or
mov
cld
jno
adc
mov
inc
inc
pop
adc
addl
mov
clc
xchg
sbb
mov
mov
gs
sbb
fxch
shl
mov
and
in
sbb
mov
add
shll
mov
xor
sbb
mov
xchg
dec
cltd
rcrb
sar
fsubrs
jb
push
daa
aas
xor
shll
insl
xor
ret
stos
inc
mov
js
sub
adc
in
int
bound
test
sub
pop
xor
sbb
btcl
adc
pop
shlb
cmp
les
cmp
aad
jmp
sbb
cmp
jns
jle
in
push
inc
sub
inc
pop
adc
push
cmp
in
test
mov
ret
scas
imul
into
stos
bound
int3
inc
and
mov
mov
inc
rcr
lahf
cmpb
lods
rolb
sbb
insl
cmp
lods
fwait
sub
repz
pop
mov
mov
sbb
shrl
jne
cmp
aaa
aas
push
mov
cli
push
inc
and
mov
sbb
clc
mov
sbb
mov
repnz
int3
or
lahf
add
adc
xchg
and
push
mov
fnstenv
das
and
outsb
jmp
adc
cwtl
inc
cmc
cmp
pop
mov
addr16
loop
push
shl
sub
cmp
loop
pushf
out
cmp
test
int
movsb
stos
jmp
movsl
dec
sarl
mov
sbb
mov
inc
cmp
mov
cli
popf
and
push
ljmp
fidivl
mov
ficoms
cwtl
cmpsl
pusha
cwtl
cmp
xchg
in
movl
jno
das
in
or
jo
clc
add
cmp
test
push
inc
lods
xchg
fldl
imull
lock
or
jne
cld
and
leave
sub
jbe
xor
mov
push
cli
push
adc
repz
lret
pop
lock
rclb
dec
mov
adc
mov
jne
sub
jle
sbb
test
cmp
mov
inc
push
in
push
mov
adc
mov
or
pop
and
and
shrb
push
and
add
cmp
jns
lahf
pop
outsl
pop
loopne
jno
mov
lcall
arpl
mov
jns
mov
jl
mov
mov
popf
mov
jmp
mov
add
xor
mov
in
adc
xchg
int
and
push
testw
shlb
adc
imul
mov
fistpll
add
lgs
mov
cmp
jp
mov
insb
iret
mov
jmp
jge
pop
pop
inc
decl
leave
sbb
cwtl
dec
mov
push
aaa
sbb
cmp
mov
mov
lods
adc
in
iret
xchg
movsl
adc
outsb
mov
jl
arpl
xchg
clc
fistl
cmp
xchg
inc
ds
jecxz
cld
and
rolb
cmpsl
andb
pop
insl
push
fsubp
testl
pop
pop
push
push
dec
inc
sub
lock
dec
push
push
std
iret
lret
movsb
mov
push
mov
je
sub
mov
je
fsubl
mov
lahf
inc
mov
add
outsb
jle
sub
arpl
popf
ror
lret
sbb
sbb
push
inc
add
pop
dec
mov
shrb
aad
fsubs
repnz
int3
cmp
adc
cmp
outsl
dec
out
fbld
andb
scas
mov
fisubs
movsl
cli
shrl
out
cmp
cltd
js
int3
mov
push
in
arpl
imul
stos
push
enter
mov
mov
repz
mov
negb
sub
repz
mov
popa
and
enter
and
lret
mov
fidivrl
gs
jne
cmp
in
mov
jl
in
clc
push
pop
xchg
sub
jne
xchg
push
push
out
nop
lods
dec
cmc
outsb
push
cltd
shl
inc
iret
xchg
or
xchg
daa
pop
repnz
movsl
push
mov
xchg
mov
mov
xchg
sbb
sahf
lock
dec
fcompl
imul
lods
mov
fs
jns
add
add
or
in
insl
cltd
dec
cmp
pop
mov
repz
dec
loop
and
jl
xor
in
mov
jecxz
jns
add
shrb
enter
pusha
cmpl
xchg
push
xchg
dec
hlt
xor
push
add
das
add
mov
dec
mov
sub
pop
jmp
jle
sbb
addl
cmc
add
call
je
push
add
scas
out
fwait
and
jbe
xchg
out
xchg
jp
pushf
adc
push
jae
cmp
push
cmp
clc
movl
push
mov
leave
shl
lock
inc
in
lods
mov
mov
lahf
pop
subb
lds
les
inc
or
mov
negl
xlat
mov
and
pop
pusha
jns
mov
mov
fsubl
push
inc
cmp
in
pop
push
dec
xchg
mov
mov
sbb
pop
call
sbb
mov
jl
and
cs
cmpsb
xor
pop
pop
xor
outsl
mov
movsl
fwait
daa
inc
xchg
call
dec
sbb
subl
call
testl
in
icebp
jne
jne
pop
stos
loope
ret
cltd
adc
sub
xorb
xor
push
fistpl
mov
pop
cmp
or
xchg
add
enter
jge
or
lahf
je
scas
dec
imul
jns
pop
mov
dec
rcr
popa
iret
loope
out
push
fstp
lock
das
mov
loop
jno
es
mov
pushf
sub
push
bound
test
jp
jns
repz
mov
hlt
out
in
xchg
inc
inc
pop
lcall
cwtl
lea
cmp
rcl
stc
clc
loop
adc
filds
imul
dec
aas
pop
mov
xlat
inc
adc
xchg
dec
inc
jae
or
pop
popa
pop
jge
jmp
and
sbb
js
jnp
stos
mov
xor
mov
data16
repz
sub
mov
pop
outsl
pop
push
sbb
and
jns
cld
push
movsl
clc
std
js
insb
xor
in
sub
inc
xchg
sar
ds
cmp
mov
hlt
sub
shll
and
mov
les
aas
into
dec
cwtl
test
mov
add
dec
xchg
movsb
push
xorl
mov
fidivs
push
leave
ret
fldl2t
pop
push
ja
dec
jno
push
pop
pushf
and
xor
mov
addr16
sbb
pusha
jnp
in
into
cltd
mov
enter
pop
test
les
stos
lock
sbb
pusha
into
pop
push
mov
jo
pop
repnz
xchg
xor
adc
mov
or
ffree
imul
ret
rorb
jns
mov
jle
mov
cmpl
cmp
sbb
stos
mov
leave
mov
jecxz
call
dec
imul
sbb
and
lea
lds
mov
xor
sub
cmp
in
inc
jmp
sub
mov
pop
arpl
jge
gs
into
rolb
push
hlt
mov
loop
aad
in
and
mov
cli
lds
jl
aas
pop
hlt
sbb
stc
stc
mov
jo
adc
out
aam
mov
out
pop
mov
mov
in
sbb
je
jl
insb
loop
call
sbb
jns
mov
adc
je,pn
arpl
stos
jb
cwtl
adc
push
jg
cs
cmpsb
cwtl
imul
sahf
jbe
aaa
or
xorl
or
out
negb
cmc
sti
fprem
xor
dec
xchg
mov
int
xor
push
inc
test
xchg
add
mov
sub
sti
jg
cmp
in
xchg
cld
in
std
ds
cmp
mov
stos
lret
fldl
insl
xchg
inc
scas
jmp
cmp
aas
loope
icebp
push
add
xor
mov
mov
add
jo
xor
int
pop
xor
jns
loopne
lods
rep
sbb
je
jae
or
leave
push
xchg
leave
in
aas
push
cld
mov
mov
jbe
fisubrl
mov
std
mov
push
mov
jp
push
loope
insl
adc
stc
mov
test
cmpsb
pop
js
xchg
adc
inc
jge
call
bound
iret
mov
jg
mov
repnz
jbe
pushf
sbb
mov
xchg
mov
bound
je
cmpsb
xor
push
jae
jbe
scas
jbe
or
adc
sub
push
mov
mov
or
jle
add
divb
cmp
adc
lods
xchg
adc
pop
aaa
lcall
stos
shll
jg
add
cmp
pop
jns
jns
jmp
aad
jne
cltd
or
or
push
push
sbb
adc
and
lret
push
insb
in
xorl
and
dec
jb
in
jae
sub
add
pushf
std
xchg
push
fmuls
adc
pop
in
scas
adc
jp
dec
sub
pop
sbb
and
jecxz
xor
and
icebp
stos
cmpsb
shlb
sub
inc
pop
decb
sub
mov
xor
das
xor
add
sbb
pop
icebp
add
sahf
in
push
rcrb
mov
or
outsl
cmp
lret
lahf
imul
clc
sbb
enter
xor
shll
inc
mov
jecxz
cld
aam
lds
push
aaa
shr
mov
jg
jecxz
leave
sahf
repz
pushf
mov
jno
fcomps
aad
jl
mov
popf
gs
cmpxchg
mov
frstor
mov
ja
and
adc
scas
pop
movsl
cwtl
sub
leave
shlb
aad
sbb
lea
fs
push
mov
add
rcll
cmpb
cs
in
out
mov
xor
sub
into
into
mov
mov
or
jecxz
mov
ja
sbb
out
out
scas
sbb
pop
int3
jge
dec
js
mov
xchg
cmp
xchg
pop
sbb
mov
lahf
jecxz
mov
mov
adc
dec
push
jns
lret
frstor
cmp
push
xor
and
out
cltd
insl
orl
lret
rcll
sub
adc
out
out
adc
popf
jle
xchg
sti
stos
faddl
xor
leave
lcall
scas
push
inc
imul
out
mov
or
and
fs
sub
mov
stc
xchg
and
push
and
mov
out
enter
mov
and
adc
adc
sbb
xchg
or
lock
cmp
and
push
lods
and
mov
call
jno
xor
mov
mov
and
sub
daa
fildll
fbld
push
fdivp
jae
lock
xchg
mov
xchg
fwait
or
sub
in
or
adc
inc
push
push
loope
xor
push
dec
aaa
lods
mov
cs
je
add
repnz
test
and
stos
jne
cld
pminub
jb
out
sahf
pop
lods
push
lret
pop
stc
add
icebp
lods
and
mov
mov
fwait
shl
mov
jge
xorb
dec
pop
cmpsb
dec
in
ret
mov
add
push
sub
clc
les
inc
mov
pop
mov
xorb
in
scas
xor
push
lea
push
xchg
and
cmpsl
out
push
fcomps
mov
sbbb
out
xchg
sub
insb
xlat
stos
sub
mov
subl
inc
mov
shll
cs
lock
or
push
push
jnp
inc
sarb
mov
insl
shlb
arpl
data16
add
lahf
and
mov
dec
insl
lret
movsl
loope
cmp
dec
addb
jo
cwtl
sbb
cmp
sub
shrb
mov
stc
pop
lret
xchg
jmp
mov
lcall
sahf
inc
sub
and
sbb
sahf
into
jae
xor
dec
push
scas
or
mov
pop
aaa
xrelease
inc
mov
mov
cmp
pop
ds
popf
rol
in
mov
icebp
es
adc
mov
mov
icebp
jp
movsb
cmp
in
loope
dec
add
and
dec
jno
lock
sahf
imul
xchg
je
je
dec
xchg
xor
pop
inc
stc
jns
in
jns
pop
stc
mov
or
sub
add
repz
mov
dec
fdivrs
mov
pop
addl
inc
add
inc
cmpsl
dec
jbe
fisttpll
insb
pusha
out
xchg
push
push
test
jp
cltd
in
ret
in
sahf
lock
out
adc
loope
std
cli
in
jmp
adc
mov
mov
loop
lea
adc
or
stos
lret
movsl
inc
jne
xchg
xchg
mov
xorl
imul
dec
xor
jp
mov
lea
fidivs
movsl
pop
call
out
loop
mov
insb
cwtl
mov
jae
cmp
sub
shll
lret
pop
gs
jecxz
jnp
daa
clc
popa
pop
fadds
xlat
pop
sti
adc
addb
xchg
xlat
ficompl
mov
pop
repz
xor
push
jg
xchg
sub
inc
in
adc
rcrl
stc
sbbb
push
cmp
cmp
fdivs
lea
and
adc
adc
cltd
cwtd
out
xor
andl
cltd
or
fucom
xor
test
jbe
dec
dec
mov
into
pusha
fwait
out
add
pop
imul
fstpl
fucomi
fadds
dec
ljmp
aam
dec
sbb
jl
push
mov
aad
add
and
xor
mov
adc
mov
push
insb
lods
stos
imul
addr16
outsl
sub
enter
mov
cmp
xchg
jns
clc
inc
mov
cmp
inc
inc
jecxz
mov
jp
stos
decl
pop
lcall
add
sbb
adc
and
pop
rclb
lds
sub
imul
sub
mov
fwait
lahf
out
flds
add
xor
cmp
and
sub
dec
arpl
fisubrs
movsl
pop
in
push
in
push
pop
jb
sub
imul
mov
mov
ficomps
pop
or
rcrl
jg
jnp
js
gs
ffreep
jae
mov
pusha
lret
lods
test
inc
pop
repz
mov
out
cmp
ret
popf
add
out
push
xchg
enter
stos
pop
mov
sbb
adcb
stos
mov
test
call
jae
xchg
rcl
lahf
mov
pop
mov
mov
adc
int3
sahf
dec
dec
fwait
addps
jmp
sbb
imul
repnz
fidivl
mov
pop
xor
std
or
clc
push
loope
les
sbb
inc
sbb
out
mov
mov
sub
shll
and
xchg
test
mov
inc
outsl
into
enter
mov
mov
sbb
inc
test
jp
or
cltd
push
aam
int3
popa
cs
adc
pop
stos
and
fs
dec
and
mov
dec
push
and
test
push
adc
subl
arpl
lcall
dec
leave
test
iret
int
addl
sbb
xchg
xchg
dec
mov
fcompl
mov
lret
push
sti
mov
xchg
add
pop
lcall
mov
pop
in
mov
es
call
faddl
xchg
cmp
push
xor
jp
push
and
loop
mov
mov
int
dec
cs
xchg
maxps
out
xchg
popa
dec
xor
ljmp
je
jns
cmp
xchg
push
xor
lret
aas
lret
jg
aas
gs
movsl
test
xchg
jmp
mov
mov
push
or
jle
xchg
roll
inc
push
fnstenv
push
inc
fsubl
lcall
or
sub
iret
pushf
push
test
test
nop
shll
rclb
pushf
in
cmp
outsl
dec
and
xchg
cmpsl
xchg
cmp
flds
or
and
out
xchg
mov
mov
loop
xlat
inc
test
dec
lret
fisubrl
add
call
push
sti
and
jp
and
test
pop
rcl
hlt
jmp
test
fistl
pop
leave
mov
in
into
ret
aam
adc
push
insl
fisttps
into
ror
fwait
sti
mov
add
push
mov
inc
sbb
pushf
mov
push
jno
inc
out
jge
mov
jecxz
inc
lret
fwait
pop
mov
jae
mov
mov
jp
adc
and
les
insl
dec
and
dec
out
sbb
mov
test
and
sbb
and
repz
mov
out
fildll
inc
int
and
ret
nop
jae
sub
sbb
je
add
loope
mov
adc
xor
addl
popf
enter
lret
popf
and
aas
cld
cmp
pop
add
dec
testb
or
inc
xchg
mov
add
add
test
dec
int
popa
ret
add
cmp
inc
and
mov
bound
mov
lods
rcrb
xorl
lods
jle
out
cmp
pop
out
xor
inc
dec
cmc
jmp
mov
jno
jne
mov
cmc
ret
push
sti
je
in
xchg
add
pop
ja
jp
push
leave
mov
sbb
sarb
push
divb
sti
in
div
or
mov
mov
lcall
jb
stos
aam
xlat
test
jecxz
scas
mov
mov
cmp
rcl
movsb
lar
xor
mov
mov
xor
adc
vpmacsdd
pop
cmp
in
mov
data16
sahf
rolb
insl
das
mov
das
sub
push
bound
add
jge
insb
jns
mull
and
jg
add
add
and
or
fdivl
daa
mov
inc
inc
lret
fistps
jl
mov
out
insb
cmc
mov
xor
jg
out
testl
xchg
push
out
or
xchg
mov
rcll
jns
xor
jnp
dec
cmc
pop
in
adc
fwait
and
lret
jne
sub
sbb
dec
cmc
pop
in
adc
fwait
and
lret
jne
sub
sbb
dec
cmc
pop
in
adc
fwait
and
lret
jne
sub
sbb
dec
cmc
pop
and
and
jae
xor
and
push
pop
mov
cmp
sub
push
adc
cmp
xchg
mov
leave
xchg
stc
out
notl
pop
or
cmp
sub
pop
inc
dec
push
jns
imul
cmpsl
test
xlat
stc
out
test
daa
out
aaa
dec
inc
add
addr16
ja
mov
enter
xchg
mov
sbbb
jge
pop
fcmovnbe
orl
stos
fwait
mov
mov
and
add
mov
mov
divps
mov
test
imul
sbb
cmpsl
inc
mov
pop
pop
pop
js
or
sbb
cmp
test
fmull
inc
jbe
inc
mov
inc
in
sbb
push
inc
es
pop
inc
mov
js
imul
mov
subb
lret
xchg
sbb
pushf
lcall
cmpsb
inc
lret
cwtl
and
pop
ret
inc
pop
stos
test
bswap
xchg
test
orb
mov
mov
repnz
js
xchg
cmp
and
or
cmp
inc
aaa
pop
inc
or
ja
xchg
xchg
popa
cmpsl
mov
mov
out
mov
push
les
inc
jno
sub
push
or
clc
jmp
jmp
stos
cmpsl
scas
lea
xchg
sbb
pop
jle
loop
xor
sub
or
ja
ret
fdiv
test
mov
imul
dec
push
push
push
jns
imul
cmpsl
test
xlat
stc
out
negl
pop
or
cmp
sub
pop
inc
dec
push
jns
imul
cmpsl
test
xlat
stc
out
negl
pop
int
xchg
aad
out
subb
or
repz
lcall
out
out
sbb
into
xchg
mov
jl
push
or
out
cmp
imul
loope
sbbl
pop
popa
cld
and
lret
pop
int3
sub
stc
popa
clc
dec
xlat
mov
xchg
ret
xchg
lock
jl
outsl
cmpsl
mov
cli
fs
mov
fnsave
leave
jp
or
mov
xchg
dec
sub
jg
insl
xor
data16
push
dec
ja,pn
mov
jne
mov
push
lcall
movsl
lahf
icebp
out
xor
hlt
test
fcmovb
cmp
loop
lcall
or
sbbl
jbe
add
dec
mov
aas
loop
out
add
inc
mov
mov
int
jae
jmp
dec
cmpsl
enter
pushf
add
jge
aaa
mov
sbb
and
movsb
aad
bound
aad
je
mov
scas
jecxz
mov
aam
xor
stos
add
mov
test
lods
jnp
sbb
mov
jp
adc
cmp
inc
xchg
out
jle
std
xor
xchg
pop
sbb
int3
nop
repnz
pop
dec
lods
ret
xor
fwait
mov
cld
outsl
mov
insl
dec
or
ljmp
inc
and
push
stos
cmp
sbb
shl
roll
mov
sbb
xchg
testl
xor
ss
jl
leave
mov
jb
std
add
adc
cmp
xchg
sub
repnz
shlb
sbb
inc
sub
fstp
sbb
pop
cmpsb
repz
popa
pop
mov
mov
mov
cmp
movnti
outsl
dec
sub
ss
in
test
pop
adc
push
mov
dec
sub
mov
push
jl
mov
insl
or
mov
mov
mov
mov
popf
add
dec
sti
or
jo
addr16
addr16
xor
sbbb
xchg
pop
jge
test
scas
cmpsb
stos
xchg
stos
dec
ret
into
popf
shrl
push
jmp
pop
dec
mov
xor
cmpsb
push
pop
xchg
int
sub
add
mov
pop
inc
or
fistl
iret
popf
mov
mov
dec
mov
jg
jns
pop
fptan
and
mov
jmp
xor
scas
inc
out
push
sub
mov
xchg
add
insl
ss
popl
xchg
mov
shll
cltd
mov
xor
test
xlat
mov
and
fisubs
or
mov
jb
cltd
shrl
cmp
or
push
faddl
int
mov
in
je
inc
insb
daa
cltd
jnp
adc
pop
add
inc
xchg
pop
sbb
popf
inc
iret
test
fdivrl
lret
or
pop
ret
xor
mov
insb
cmp
mov
cmp
mulb
int
inc
and
push
mov
out
insb
sub
jno
mov
mov
pop
bound
aas
mov
test
loop
sahf
inc
mov
push
or
call
sub
xchg
mov
or
cmpl
int
aam
xchg
clc
and
cmp
rcrl
imul
repz
dec
mov
mov
xchg
sbb
pop
and
jmp
pop
cmp
mov
pop
or
and
mov
fwait
iret
subb
xchg
jmp
js
ret
int3
enter
dec
bound
iret
push
jge
sub
aas
dec
sbb
push
js
xor
jmp
mov
mov
push
xchg
sub
jbe
les
xor
push
cld
scas
in
loopne
jle
adcl
in
cmp
jae
dec
out
cmp
fadds
aaa
into
lahf
pop
aaa
in
add
pop
test
pusha
mov
sarb
leave
shrb
rcrb
outsb
cmp
add
and
cmpsl
and
push
shrl
adc
mov
xchg
stos
int3
mov
lcall
fdivr
ja
push
jae
inc
push
mov
xchg
outsb
pop
mov
dec
mov
xor
repnz
xchg
push
sbb
xor
decb
repnz
inc
int
or
xchg
and
lea
leave
stos
push
aam
and
repz
fldl
mov
cmp
lret
das
xor
dec
std
ja
fistl
and
mov
and
ret
xor
sar
or
sbb
pop
int
popf
mov
adc
jo
daa
subb
push
out
xchg
xchg
dec
pop
repz
jmp
scas
pop
enter
push
movsb
cmpsb
lods
cld
daa
pop
push
add
idiv
and
jecxz
and
jb
mov
or
sub
mov
mulb
push
in
insl
pop
sahf
push
mov
in
xlat
aad
sub
jmp
fiadds
addr16
aaa
out
mov
jnp
scas
cmp
mov
lods
push
pcmpeqw
outsl
andl
add
cs
mov
dec
and
fnstcw
pop
addb
fadds
or
hlt
arpl
sub
pop
pusha
jmp
xchg
jae
arpl
lret
hlt
xchg
xchg
ljmp
cmpsl
mov
loope
add
lods
push
or
mov
adc
test
push
adc
aas
sbb
sbb
cmp
int3
test
test
or
mov
jbe
push
inc
jmp
mov
lock
loop
pop
sbb
sub
test
ret
mov
addr16
nop
adc
mov
sbb
out
sbbl
dec
adc
mov
push
dec
insl
xor
fsubr
and
add
adc
shll
aam
je
leave
mov
imul
scas
orl
outsl
push
and
xor
mov
add
mulb
dec
pushl
clc
mov
lret
add
rcr
scas
mov
loope
xchg
jne
xchg
dec
push
leave
mov
cmp
inc
sub
sarl
sti
push
aad
sbb
popa
sub
cmp
fimuls
cmp
xchg
loop
xlat
pop
and
out
jl
jns
sbb
sarl
shll
loop
dec
mov
popf
mov
push
mov
aas
inc
fidivrs
lcall
pop
out
cmp
push
movsb
and
aad
in
loope
mov
pop
push
dec
mov
fmul
push
and
movsl
push
lods
or
mulb
mov
inc
data16
jo
sbb
ret
sbb
ja
mov
cmp
push
add
xchg
out
movsb
mov
xchg
imul
and
pop
xorl
jg
cld
idivb
mov
xor
jnp
adc
sbb
jb
mov
mov
sub
dec
cmp
xor
lock
sub
jb
pop
or
push
or
xor
lds
cmpb
mov
pop
inc
fcomps
jbe
ret
rol
movb
js
stc
dec
adc
lret
mov
pop
std
shl
imul
lcall
lret
fs
je
in
sahf
mov
notl
jg
mov
in
int
mov
mov
mov
push
mov
sbb
and
mov
js
push
inc
or
dec
mov
ret
lock
and
in
or
push
and
test
lds
rol
pop
mov
inc
out
mov
jno
in
std
xlat
adc
or
mov
fstps
xchg
loopne
jo
pusha
cmp
out
cltd
lods
pcmpgtw
mov
lods
mov
in
sub
xor
popf
insl
dec
je
punpcklbw
pushf
mov
scas
repz
pop
int3
adc
mov
rcl
imul
mov
loope
fwait
ss
push
test
rcr
push
test
mov
and
addr16
or
xor
or
xchg
dec
stos
and
push
jne
pushf
gs
add
inc
push
in
lock
mov
test
xchg
push
mov
jge
sub
and
les
mov
cmp
enter
sbb
call
inc
lods
xchg
jo
add
wrmsr
xor
and
popf
dec
push
stos
sub
popa
cmpsb
das
out
mov
or
mov
push
adc
mov
clc
push
xchg
cmp
cmpsl
pop
dec
scas
rcrb
pop
xchg
sarb
shll
das
xchg
cmc
dec
les
push
pop
dec
pop
popf
stos
xchg
in
inc
inc
jg
mov
jmp
sbb
nop
xor
fists
xlat
jb
sbb
xchg
jg
mov
pop
jns
cmp
and
icebp
adc
aaa
push
cwtl
push
fwait
add
int3
insl
push
add
push
mov
mov
imull
iret
pop
pop
add
add
xor
imul
leave
movsl
push
jmp
mov
out
push
hlt
xchg
push
icebp
sbb
xor
dec
add
mov
dec
aas
xor
dec
jne
inc
fstpt
imul
adc
and
inc
add
pop
adc
cmpsb
jbe
in
mov
or
mov
inc
adc
shl
inc
das
or
js
add
cmpsl
insb
adc
fisubl
leave
fucomi
addl
movsb
mov
jmp
negb
xchg
dec
fisubrs
dec
cmpsl
lock
inc
testb
shll
stc
jle
es
jmp
pop
out
pop
or
ss
mov
pop
dec
sbb
mov
xor
adc
shll
jbe
call
jne
divl
or
cmc
idiv
fnstenv
mov
movsb
sbb
and
add
lcall
jno
adc
mov
enter
inc
mov
xchg
lds
sub
rclb
sub
adc
in
fistps
pop
roll
movsl
repnz
mov
test
and
subl
xlat
mov
iret
push
jnp
push
js
js
loopne
movsl
roll
pop
nop
pop
es
fsubrl
xchg
std
cli
enter
stos
icebp
fdiv
push
mov
inc
pop
mov
into
cmc
cmp
mov
loopne
push
mov
cltd
inc
popf
mov
mov
push
lea
in
sbb
mov
xlat
popf
jae
ds
cmp
and
ja
or
sub
pusha
mov
repz
xchg
or
cltd
xor
push
jns
inc
xor
aad
sbb
ljmp
pop
push
int
xor
xor
lcall
push
dec
in
xchg
repz
rorl
lahf
pop
pusha
fcomip
cs
neg
gs
popa
push
add
xchg
and
scas
fsubrl
fldenv
iret
outsl
mov
push
pop
push
int
mov
xchg
jne
loopne
push
mov
inc
stos
mov
add
adc
push
mov
sbb
push
repz
xchg
imul
clc
sub
dec
ljmp
out
push
xlat
loop
shrl
mov
shrl
adc
test
inc
add
jge
xchg
movsl
outsb
fstl
jo
dec
movsb
imul
push
add
shll
or
or
js
nop
sub
pop
sbb
shll
pusha
jmp
mov
dec
inc
scas
xchg
call
jbe
sub
das
mov
and
data16
lret
fisubs
push
mov
dec
dec
loop
sub
mov
ds
rcr
mov
addr16
pusha
lahf
pop
and
mov
das
shl
adc
dec
and
mov
dec
les
push
cmc
les
repnz
imul
and
xchg
leave
vmovntps
adc
xor
popf
or
cmp
push
out
loopne
mov
jmp
adc
rorb
stos
mov
aas
rcll
hlt
adc
loopne
arpl
or
push
cmp
cmpsl
mov
out
mov
movsb
push
xchg
push
insl
xchg
adc
inc
scas
sub
pop
lods
push
add
mov
and
popa
sub
and
dec
loop
and
andl
lret
pop
push
add
inc
popf
and
mov
imul
lds
jmp
sar
xchg
fdivs
inc
out
xchg
je
out
inc
or
scas
jg
push
arpl
inc
inc
mov
test
xor
xor
sub
imul
lods
shrb
out
jp
les
push
fwait
or
inc
ljmp
fsubl
imul
aaa
cmpsb
jle
call
ds
or
mov
call
pop
nop
mov
or
aad
cmp
xor
sub
mov
sub
xor
repz
or
jnp
call
inc
ret
mov
xchg
pop
push
adc
lods
in
xor
popa
scas
cmp
lret
sbb
pop
or
faddl
cmc
jg
enter
add
xchg
mov
loopne
pop
fists
mov
mov
popa
xchg
xorl
lods
dec
mov
jmp
add
je
cmc
xor
sbb
fnstsw
sub
mov
je
push
iret
sbb
and
fisubl
mov
jle
loope
add
sub
ror
pop
mov
dec
bound
loopne
jecxz
adc
ret
jecxz
jns
or
adc
out
icebp
push
xor
fists
test
sub
dec
dec
aad
push
mov
dec
dec
lfs
xchg
hlt
aas
lds
add
dec
aam
divl
aad
jecxz
xchg
mov
scas
adc
out
imul
enter
xchg
sbb
incb
pop
push
in
scas
xor
xor
pop
nop
pop
and
cmpsl
inc
mov
lods
xchg
js
leave
icebp
leave
je
fldt
cmc
xchg
sbb
fmull
bound
cli
xchg
pop
mov
pop
imul
push
mov
mov
dec
imul
push
dec
sbb
enter
aas
inc
sub
add
or
test
and
imul
sbb
push
scas
or
jle
mov
dec
mov
mov
sbb
push
adc
add
mov
imul
xor
int3
idivl
pop
sub
xchg
loope
lods
cmp
pop
sbb
nop
pushf
icebp
lret
enter
or
cmp
or
jp
pusha
push
aaa
repz
add
inc
or
mov
cmpsb
xchg
adc
mov
hlt
stc
ret
cltd
daa
pop
inc
pop
aad
imulb
sbb
jbe
int
mov
in
sbb
fsubl
pop
sbb
sarl
incb
pop
dec
popf
shrl
xchg
xorb
push
leave
pop
rcrl
hlt
gs
push
jmp
sub
or
pushf
sub
add
rcrl
sbb
nop
popa
ss
out
sub
xor
ss
adc
add
mov
jle
mov
jno
push
xchg
add
daa
add
sbb
mov
xor
ljmp
mov
sub
sub
shrl
sbb
sbb
mov
loop
xor
pop
adc
mov
or
adc
sbb
out
mov
jg
outsl
xchg
pop
popf
mov
cmpsb
sbb
fsts
mov
pop
test
test
jmp
jg
jb
cmpsl
sbb
pop
xchg
mov
pusha
ss
das
adc
mov
in
sbb
add
xchg
sbb
sti
shlb
mov
mov
in
push
dec
mov
aad
stos
loop
icebp
out
lret
pop
pusha
adc
sbb
sbb
push
iret
fimuls
inc
packssdw
ss
ficomps
in
mov
cs
adc
mov
std
stos
ljmp
cld
inc
insb
std
jo
aad
mov
int
outsb
push
dec
loopne
xor
lock
dec
add
lahf
fcoml
mov
add
push
shl
hlt
loope
mov
xchg
mov
adc
mov
gs
sub
enter
sbb
lret
lock
cmpl
push
push
fidivs
int3
mov
or
or
sarb
pop
push
into
ja
fwait
aas
dec
xchg
fchs
int3
movsb
jno
outsb
jecxz
jns
cmp
mov
adc
in
jno
sbb
ret
push
jge
mov
into
push
adc
shll
mov
add
adc
jb
rcrb
push
out
je
sbb
and
xchg
mov
sbb
mov
mov
mov
lret
pop
jp
lret
adc
ja
push
sub
arpl
mov
or
pop
scas
test
or
nop
imul
jecxz
out
bound
aam
out
stos
sbb
inc
cmc
in
adc
jae
mov
mov
xchg
push
and
sbb
out
sbb
or
dec
xorb
loopne
lcall
mov
adc
mov
fs
aad
je
sub
mov
inc
stc
mov
nop
out
lahf
clc
mov
ljmp
adc
call
js
push
lret
push
sub
mov
mov
rcrl
dec
daa
jl
mov
sbb
cli
adc
xor
sahf
iret
add
lret
popa
and
sub
xchg
cmp
dec
xor
xchg
xor
dec
sub
aas
mov
and
out
inc
pushf
stc
push
and
mov
or
pop
xor
enter
mov
pop
dec
fidivrs
test
adcb
lods
sub
das
test
adcl
popf
lods
mov
mov
js
and
jo
push
dec
js
mov
xchg
sub
into
sti
pop
fsub
ljmp
inc
cwtl
sbb
movsb
push
rcrl
push
shrl
sbb
int
pop
cmp
imul
cmp
insl
push
mov
adc
aad
lods
stc
mov
push
pop
pop
inc
mov
inc
stos
xor
xor
cmp
out
cmpsb
xor
and
mov
ds
sub
sub
adc
aaa
nop
in
mov
jns
mov
push
mov
shlb
cli
shrb
enter
and
sbb
imul
ret
repnz
sbb
imul
test
or
stos
xor
test
jno,pn
jb
ret
popf
in
loop
xor
repz
mov
mov
ret
aad
pop
xchg
or
jbe
dec
scas
jecxz
arpl
popa
stc
jl
test
push
test
add
add
dec
mov
xor
dec
insb
lods
pop
xchg
xchg
sub
rolb
push
test
out
add
je
cmpsl
loopne
mov
lds
inc
and
push
sbb
lods
imul
jns
stos
stos
push
mov
movsb
push
rolb
mov
mov
cmp
loop
lds
and
add
add
cmp
lcall
andb
lock
pop
bound
lds
subl
sbb
test
leave
in
xchg
aad
jecxz
or
jno
mov
adc
pop
test
testb
outsb
out
mov
sbb
push
pop
das
sub
inc
lods
push
leave
loope
adc
daa
stos
push
out
adc
jge
cmpsl
xlat
arpl
adc
inc
test
fldcw
sub
pushf
lods
dec
inc
xlat
sbb
add
hlt
push
mov
mov
lds
rorl
sti
cltd
out
lcall
out
ds
lcall
inc
out
adc
popf
data16
inc
add
shll
dec
jno
jmp
popa
leave
pop
pop
icebp
jle
mov
sbb
call
inc
xor
push
pop
xor
jb
jp
sub
xor
mov
cpuid
mov
pop
sahf
push
inc
decb
push
dec
mov
jbe
pop
iret
outsb
lock
enter
and
pmuludq
mov
scas
fisubl
jg
das
and
and
pop
movsb
sub
xchg
push
out
or
dec
xor
jns
adc
xchg
cwtl
aam
push
xchg
rorb
or
leave
mov
shrl
fstl
lcall
xor
orb
mov
sarl
adcb
adc
dec
pop
sub
jg
push
adc
clc
lcall
mov
ficomps
mov
movsl
mov
push
or
pop
sub
add
mov
shl
and
sbb
xchg
push
add
les
and
jp
sbb
jbe
js
push
push
pop
shll
mov
aaa
scas
aam
adc
adc
fwait
cmp
add
cmp
add
jmp
movsb
inc
pop
in
sahf
mov
enter
aad
dec
aad
sub
negb
cwtl
sub
dec
in
lea
or
jns,pn
adc
xlat
push
icebp
and
push
add
cmp
inc
jae
xchg
cmpsl
fistps
sub
pop
pop
mov
xor
push
jns
imul
cmpsl
test
xlat
stc
out
negl
pop
or
cmp
sub
pop
inc
dec
push
jns
imul
cmpsl
test
xlat
stc
out
negl
add
pop
sub
sub
pop
inc
dec
push
jns
push
xchg
mov
lods
mov
rcl
std
out
testl
daa
add
pop
inc
pop
xlat
jns
jmp
cmp
scas
dec
inc
sub
sbb
or
in
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
add
pop
stos
daa
lcall
inc
cli
pop
lret
ja
cmpsl
sbb
out
out
out
arpl
aaa
mov
push
ljmp
xchg
dec
sbb
push
sbb
dec
mov
lcall
jns
ja
jecxz
mov
iret
jle
or
stos
dec
imul
push
or
movsb
movsb
and
dec
cmp
jecxz
repz
in
jmp
cmpsl
cld
mov
imul
mov
jecxz
and
dec
xchg
jnp
sbb
loop
mov
mov
cmp
inc
es
xchg
aad
fidivl
stos
das
movsl
lret
ret
fldt
fisttpl
cwtl
push
ja
xchg
xchg
inc
and
dec
pop
cmp
xlat
xchg
out
test
pop
pop
stos
jne
sti
in
iret
cld
dec
cmpsl
adc
cmpsl
in
lret
xlat
xchg
pop
movsl
sti
xbegin
cld
leave
jae
mov
sub
inc
or
test
pop
mov
aaa
mov
fcmovbe
lret
or
or
pop
mull
outsb
aad
stos
push
repz
jecxz
xchg
cmp
adc
pop
ret
dec
mov
mov
or
jb
push
lcall
xchg
lods
and
loopne
lds
jnp
gs
aas
mov
imul
stc
inc
repnz
adc
push
ljmp
xchg
sub
jp
push
pop
testl
lcall
fidivl
xchg
xchg
sub
jp
push
pop
testl
sub
int
sub
lahf
fbld
and
fisttpl
fimuls
insb
scas
lods
dec
dec
add
and
icebp
dec
jge
mov
jecxz
xor
sbb
sub
xor
inc
std
enter
aas
mov
push
xlat
mov
mov
scas
dec
imul
adc
jne
jp
mov
fmuls
mov
or
jecxz
aad
loop
pmaddwd
mov
adc
adc
mov
cs
xchg
sub
and
mov
mov
stc
mov
call
outsb
dec
inc
imul
into
push
jne
fidivl
add
lahf
mov
mov
sbb
xchg
pop
scas
or
lahf
pop
mov
lcall
idiv
jp
inc
addb
adc
pop
xor
xchg
or
mov
arpl
pop
or
loope
inc
fcompl
pop
add
insb
sbb
mov
repnz
push
dec
icebp
cli
push
add
xchg
and
xor
pop
xlat
mov
lret
cmp
enter
dec
decl
push
test
xor
ja
sbb
movntps
xchg
imul
cmp
ret
pop
insl
or
lahf
negl
idivb
into
nop
jns
pop
sbb
arpl
cmp
jg
mov
fdivs
dec
mov
call
push
or
inc
repz
mov
inc
sub
dec
inc
mov
es
lock
insl
out
pop
inc
stos
sbb
and
stos
xor
jg
dec
xor
adc
rcl
xor
xchg
shll
shll
jns
dec
gs
stos
jb
pop
add
cmc
jl
sub
rorl
inc
xchg
cs
xchg
ret
mov
fsubrs
out
xchg
fcoms
and
in
mov
jnp
add
js
jle
das
cld
mov
decl
out
sub
adc
cmp
jge
frstor
cmp
mov
outsb
mov
inc
clc
shll
fs
aad
icebp
ja
jnp
pusha
inc
lods
cltd
push
jbe
mov
mov
js
sbb
test
sahf
inc
shll
mov
mov
addb
add
inc
cmpsl
dec
subl
inc
and
xor
add
sbb
xchg
aaa
add
rorl
aam
imul
cmpsb
pop
adc
jecxz
data16
sub
add
inc
jb
lret
insb
hlt
test
loop
add
lock
cltd
push
push
xor
ja
or
test
bound
inc
loop
pop
inc
pop
xor
lods
fadds
mov
clc
pop
mov
inc
add
adcl
sti
sti
inc
adc
sti
outsl
push
bound
fcom
scas
mov
inc
std
dec
mov
and
in
jg
mov
imul
cmp
or
mov
enter
lret
pop
sbb
push
sub
outsl
mov
lret
push
xor
inc
es
bound
inc
jp
dec
and
adc
mov
sbb
mov
or
jne
test
ss
inc
lret
cmp
lock
gs
imul
mov
dec
xor
lret
es
lea
push
jb
xchg
stos
psubw
xor
out
sub
loop
mov
adc
les
ljmp
jl
lods
push
mov
inc
push
pop
or
xlat
jp
sbb
xchg
xchg
sbb
or
mov
jns
arpl
xchg
into
jl
imul
push
sub
dec
and
test
mov
mov
cmpsb
ss
popa
xorb
jg
out
sbb
into
lret
adc
daa
orb
arpl
xchg
stos
xor
rolb
aad
ja
sub
pop
sahf
enter
adc
dec
jbe
push
lret
adc
in
push
cmp
fcoml
out
add
push
mov
icebp
or
les
mov
dec
sbb
and
cmp
or
sub
iret
js
icebp
loop
lret
mov
add
push
inc
jmp
and
clc
rcrb
xor
pop
mov
shll
mov
pop
shll
lahf
inc
jae
pop
gs
mov
cmp
loope
shl
sbb
mov
adc
fidivl
adc
jmp
inc
or
fldenv
pop
imul
add
js
fnstcw
mov
cmp
frstor
adc
loopew
mov
mov
lock
inc
leave
stos
fcmovnbe
jo
int3
cmp
dec
fsts
jno
push
sub
cmp
push
movsb
pop
jb
fstps
ss
rorb
mov
imul
loope
sub
pop
cmpsl
mov
adc
lock
jmp
les
inc
pop
and
dec
push
out
mov
cli
test
je
adc
pushf
dec
shlb
daa
mov
fadds
xchg
cld
scas
xor
cli
cmpb
and
fucomip
fidivrs
test
stc
ja
add
je
lock
lods
jae
hlt
and
jb
add
mov
out
test
hlt
mov
push
arpl
pusha
xchg
into
inc
rcr
xchg
cmp
out
popa
es
shl
movsb
push
xor
call
fcmovnu
jl
mov
and
and
and
push
lds
imul
xchg
cmp
pushf
int3
notb
cmp
enter
sub
cmpb
xorl
dec
push
mov
sahf
imul
cmpl
addb
imul
popa
aas
scas
adc
pop
push
cmp
add
mov
sub
les
fwait
subb
dec
in
movsl
sub
pop
lock
mov
jnp
into
sub
enter
and
xlat
mov
dec
clc
insb
xor
jg
cli
sbb
mov
nop
sbb
xchg
test
ja
sbb
xchg
popf
sub
dec
pushf
or
aaa
xor
dec
pop
sub
cmp
into
adc
xor
adc
fcmovb
int3
or
in
sbb
jo
and
pop
cmp
mov
mov
aas
iret
in
mov
popf
ljmp
int3
es
adc
sub
mov
inc
push
mov
mov
dec
mov
pusha
lock
shlb
jl
cli
pushf
popl
das
add
call
dec
jae
dec
push
mov
das
es
or
addb
hlt
xor
add
pop
add
loope
into
loop
leave
loop
stos
pop
jbe
pop
call
adc
test
fsubrl
add
es
pop
fs
loope
shr
js
add
repnz
cmpsb
and
popa
cmp
mov
xchg
lret
sbb
mov
test
pushl
imul
push
movsl
add
and
sbb
mov
xor
fdivs
xchg
stc
jne
sbb
lcall
pusha
xor
int
xchg
fdivr
std
inc
sbb
in
pusha
rorl
repnz
adc
inc
inc
xchg
icebp
mov
clc
adc
scas
add
loopne
lods
in
sub
repz
add
jbe
pop
mov
cmpl
addl
ss
mov
push
int3
jb
mov
scas
xchg
fsubrl
jnp
daa
or
cmpsl
aas
jno
sbb
or
test
mov
call
ds
dec
or
xor
jecxz
insb
clc
fisubrl
ljmp
in
or
push
add
lret
nop
mov
ss
lahf
mov
cmp
dec
mov
mov
aaa
js
lock
or
in
inc
lahf
cld
jb
nop
faddl
jne
pop
shr
fistl
dec
pusha
xor
arpl
inc
testb
out
push
mov
test
or
negb
pop
sbb
xor
into
mov
aam
and
push
push
mov
mov
int3
cmp
mov
xor
jne
cmpb
pop
jb
jl
dec
mov
xor
mov
jp
std
lret
iret
pop
lods
jl
adc
addb
add
cmp
push
inc
lods
adc
cmpsl
push
leave
push
jp
sti
pusha
cmp
aaa
pop
mov
shl
mov
test
lret
add
or
fsubl
jns
or
cwtl
cmp
xlat
sarb
lock
cmpsb
test
repnz
xchg
pop
and
mov
ja
test
pusha
xor
and
fwait
andl
fcomi
cli
xchg
jecxz
xchg
insl
adc
cs
push
push
push
and
lods
mov
std
andb
add
add
add
jns
lret
and
loopne
add
sbb
cmp
popfw
mov
cld
andb
xorl
nop
sbb
bound
loope
push
int
push
sti
xor
out
fildl
sub
sti
dec
mov
mov
mov
jp
inc
aas
push
test
ficoml
loopne
das
mov
test
test
ljmp
inc
pop
insb
jp
idivl
shrb
or
jg
xor
mov
jo
xlat
dec
sbb
push
imul
sbb
aam
inc
and
mov
cmp
cmp
cmp
inc
and
mov
mov
iret
cmpsl
sbb
mov
push
fs
repnz
outsb
and
jns
arpl
rcrl
nop
das
adcl
mov
cmp
dec
inc
sub
out
icebp
inc
fnsave
negl
or
movsb
ss
add
ss
mov
lcall
repz
mov
mov
and
cmpb
mov
inc
xor
push
push
add
push
push
stos
cs
adc
inc
movl
dec
outsb
mov
or
jns
cmp
jnp
loope
dec
lock
into
lds
sbb
cmp
dec
add
lods
jne
int3
jmp
xchg
and
jmp
xor
and
in
pop
push
test
sub
cmp
mov
int3
es
fcom
xchg
and
js
jecxz
int3
out
add
cmpsl
out
xor
and
shrb
xchg
lret
test
pop
cs
in
stos
repz
fdivl
cmp
test
in
cmp
inc
or
scas
mov
and
insl
xorb
inc
ss
cld
adc
xchg
push
js
dec
icebp
mov
lahf
jg
jno
out
cmc
xlat
mov
mov
or
and
push
ret
push
add
popa
int3
jle
jae
jmp
mov
dec
pop
sbb
or
lahf
sbb
adc
cmp
fmull
add
es
frstor
dec
mov
mov
call
dec
push
out
loop
mov
loopne
jecxz
shlb
je
pop
cmpsb
test
add
pop
fwait
sub
cmp
popf
mov
jmp
in
subb
daa
push
cmpsb
loop
rorb
out
jge
push
ret
ss
xchg
mov
nop
int
pushf
movsl
mov
jbe
pop
mov
mov
and
pop
xor
inc
into
mov
dec
out
inc
fs
addb
adc
int
adc
and
leave
fmuls
cmp
jno
mul
in
mov
sahf
jo
les
xchg
xchg
nop
dec
mov
cmp
fmul
xchg
xor
or
lea
dec
mov
mov
sub
dec
ss
mov
push
jle
mov
mov
cmpsl
cmp
and
jnp
dec
mull
jns,pt
cmp
scas
mov
add
repnz
pop
imul
xchg
fdivrp
in
push
jmp
rorb
std
iret
jns
jae
xchg
jp
aad
pop
and
mov
subb
mov
fwait
xor
jne
inc
dec
mov
push
add
add
rcll
add
imul
inc
inc
lret
add
and
scas
shrb
cmp
lods
lret
xlat
mov
cmpsl
cmp
shll
lock
mov
cs
jnp
es
insb
sbb
stos
mov
dec
popf
or
xchg
xor
xor
sub
fcmove
jg
sbb
test
sub
add
adc
outsb
imul
xchg
push
pusha
stos
mov
lock
hlt
fwait
test
jmp
xchg
adc
sub
loope
pop
jg
scas
aad
dec
icebp
fstpt
sti
stc
cmpsl
or
sbb
arpl
sbb
ret
mov
xchg
xor
incb
fwait
lahf
repnz
mov
jne
into
popf
cmp
sbb
sub
rolb
jae
repnz
lock
je
jge
mov
push
fadds
dec
inc
lahf
popa
test
mov
scas
dec
pop
mov
sbb
xor
inc
jns
xchg
xor
loope
gs
int
cmp
in
test
xor
mov
sbb
out
loop
and
cmp
dec
and
sbb
lock
mov
ret
paddd
xchg
mov
xor
les
sub
cltd
fcmovnb
and
dec
bound
rcrb
setge
cwtl
jbe
test
shrl
sub
sbb
mov
jge
fistpl
sub
mov
push
mov
mov
push
sbbb
aas
addr16
cmp
add
jmp
in
mov
or
add
nop
and
rorb
xor
jl
jge
jge
jge
cmc
mov
loopne
ret
mov
ss
iret
cmpl
sub
pop
push
lcall
aam
mov
and
push
ds
xchg
jb
jae
cltd
outsl
loop
xchg
xor
decb
cs
pusha
adc
sub
in
mov
xchg
inc
shl
jg
dec
std
mov
cmp
cmp
das
dec
pop
mov
mov
aam
insl
pop
or
movsl
movsb
scas
cmp
sub
jge
mov
pop
inc
nop
pop
bound
and
scas
pusha
iret
mov
push
jmp
xchg
jae
pop
mov
pop
dec
push
decl
add
dec
sub
sub
call
out
std
xchg
scas
jno
inc
pop
repz
push
jmp
subl
mov
arpl
add
in
mov
ja
scas
rorl
aam
sbbl
cmpsl
add
cmc
fcmovbe
dec
and
sub
mov
lods
add
aaa
adc
aam
mul
xchg
cmc
xor
inc
or
ret
cmc
outsl
mov
rolb
jb
loopne
inc
jle
incl
or
add
insb
add
or
or
ja
adc
cmc
pop
enter
xor
push
cli
xlat
mov
fwait
sub
push
adc
test
mov
or
mov
lcall
ljmp
adc
dec
cs
rorl
jbe
fwait
pop
mov
add
sbb
mov
dec
add
lods
popf
pop
in
rcll
je
dec
arpl
pop
xor
lds
es
cmp
push
das
add
jmp
xlat
out
dec
dec
pop
sub
cmp
cwtl
jge
js
data16
push
xchg
cmp
mov
bound
popa
xchg
mov
mov
jge
out
or
js
mov
xchg
jge
add
mov
lds
mov
cltd
adc
mov
push
cmp
mov
push
mov
loop
fisttpll
xchg
mov
scas
add
sub
icebp
push
mov
cmp
les
sbb
sbb
mov
inc
push
push
xchg
sub
je
and
xor
pop
out
and
mov
inc
mov
add
pop
sbb
push
int3
fsubr
lret
pop
in
fndisi(8087
push
adc
mov
lahf
outsb
add
mov
divb
js
movsb
inc
mov
cmp
or
adc
cli
sbb
mov
xor
push
mov
add
mov
add
cmp
push
dec
aad
pop
pop
and
call
mov
cmp
mov
cmp
out
pop
hlt
pop
cltd
imul
arpl
and
ja
int3
jmp
dec
push
fldl
loop
push
mov
push
clc
scas
lret
vphsubwd
mov
cmpsl
sbb
adc
ljmp
nop
repz
sbbb
push
lret
xchg
outsb
or
xchg
mov
repnz
cmp
movsb
or
fnstsw
sbb
in
mov
cmp
pop
ret
push
push
or
rcl
and
xor
cmp
in
outsb
outsb
pop
repz
xchg
sbb
mov
mov
and
push
fadd
stc
sbb
rcl
repz
sub
xchg
cltd
jns
inc
and
adc
dec
sbb
scas
xor
xchg
cltd
lret
subl
popf
dec
push
shrb
xor
or
and
and
subb
jp
pop
cmp
shr
scas
cmpsb
inc
out
movsb
rorl
pop
lcall
dec
sahf
xor
mov
xlat
jmp
xlat
mov
dec
push
shll
and
xchg
push
cld
dec
xchg
and
in
sbb
dec
cs
clc
jae
xchg
mov
dec
jb
fstp
mov
insb
test
sub
and
push
xor
mov
jmp
fwait
fwait
mov
cmp
xlat
cmp
in
mov
push
xchg
mov
outsl
mov
inc
jbe
push
out
pop
and
repnz
mov
je
add
gs
ret
out
add
jno
ljmp
int
cmc
dec
xor
inc
out
mov
mov
dec
and
or
je
xchg
mov
in
sub
cmp
out
aad
jbe
clc
dec
dec
add
test
je
lea
mov
dec
popa
jb
cli
andl
cmp
loope
dec
and
jmp
out
int3
negb
and
daa
push
test
loop
repz
pusha
fisubl
mov
dec
dec
aaa
push
xor
jle
lahf
movsb
je
mov
cmc
daa
inc
add
shl
inc
pop
cld
adc
popa
lret
cmpsb
inc
fldcw
pop
hlt
ja
jae
in
pop
ljmp
insl
mov
lret
outsb
pop
inc
movsb
adc
ret
pop
adc
mov
mov
loopne
rcr
loope
add
icebp
push
jnp
outsb
shl
push
mov
mov
adc
fnsave
push
jb
mov
int3
jl
shlb
mov
ss
xchg
out
sub
mov
jae
test
push
jno
rcll
inc
push
push
fsubs
add
int
mov
fistpll
jecxz
adc
test
push
mov
jbe
adc
in
sub
add
clc
es
cmp
pop
cs
movsb
mov
test
inc
in
inc
addr16
stc
mov
rcr
add
dec
mov
or
aaa
pop
xor
cmp
jge
pop
fadds
pop
adc
aam
push
xlat
shlb
jns
jmp
or
add
dec
jae
dec
cmp
pop
xchg
pop
aaa
outsb
adc
jno
repz
cmp
ss
add
fsubp
fwait
hlt
arpl
lcall
pop
aaa
cwtl
sbb
aas
les
dec
dec
popa
clc
cmp
out
sub
xor
lahf
cmp
xchg
xchg
testl
int
xchg
bound
inc
jo
sbb
rcrb
cmp
stos
ret
jbe
lcall
adc
or
daa
cmp
pop
sti
dec
inc
pop
jo
out
fldl
mul
insl
or
int
or
add
mov
fnstcw
push
sbb
inc
test
arpl
jecxz
or
sbb
dec
sub
movsl
rep
adc
out
imull
inc
into
leave
jno
mov
jge
jl
xorl
sbb
jle
test
sub
cmp
outsb
lea
jne,pn
xchg
xor
jb
jno
in
das
sbb
push
push
sbb
push
in
lcall
cwtl
int3
ret
hlt
cmpsl
jae
mov
jg
imul
in
es
mov
addr16
sub
mov
push
xor
pop
ds
xor
sub
inc
jns
inc
cli
adc
inc
outsl
mov
sub
lock
ss
jmp
outsb
dec
sbb
shll
push
sbbb
pushf
ja
mov
dec
cmp
push
xor
mov
push
scas
pop
shlb
test
and
lcall
popf
sahf
andb
push
jns
cwtl
xchg
and
mov
int3
xchg
and
pop
in
inc
mov
aam
inc
jne
rcl
add
in
or
adc
loop
adc
inc
and
dec
or
xchg
inc
xor
inc
cli
push
ljmp
xchg
sub
jp
push
pop
testl
lcall
fidivl
xchg
xchg
sub
jp
push
pop
testl
sbb
mov
cli
push
push
fidivl
sub
mov
jp
push
pop
pop
dec
adc
pop
mov
inc
ljmp
push
jge
repnz
xchg
sbb
in
sub
movl
movl
movl
movl
cmpl
jne
pushl
call
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
outsl
imul
push
push
push
jne
sub
lock
lret
cmc
stos
movsl
xor
mov
fwait
and
jnp
dec
add
sub
inc
outsl
mov
lret
inc
fcomi
ftst
mov
sub
cmp
or
xor
adc
mov
scas
fdivr
mov
scas
test
cmpsb
stc
lods
hlt
inc
daa
and
cmp
jecxz
cli
callw
dec
xor
pop
iret
imul
fnsave
xor
inc
adc
enter
in
adc
add
dec
lret
mov
cmp
arpl
js
add
mov
pop
inc
mov
pop
sti
lds
mov
fsubp
xor
mov
push
sub
mov
or
add
jo
mov
xchg
je
mov
out
fiaddl
jmp
dec
inc
add
mov
xor
stos
pop
fdivrs
cvtps2pd
out
sahf
mov
outsb
dec
dec
sbbl
xor
and
xor
xor
jl
imul
jg
push
or
jmp
jecxz
rcrb
aad
fcompl
jo
popa
adc
or
sub
test
mov
mov
mov
adc
pop
xor
sub
jne
jg
sub
scas
lock
in
vsubsd
jnp
das
add
cmp
inc
sbb
lret
test
cmc
stos
in
aad
lds
adc
sub
push
or
mov
movsl
sti
xchg
lret
test
cmc
stos
in
aad
lds
dec
int3
insl
pop
pop
mov
imul
mov
divl
jns
inc
je
pushf
xchg
fwait
ds
pop
pop
imul
mov
mov
cmp
add
rclb
mov
lahf
inc
dec
mov
jne
jnp
mov
xchg
or
pop
cmp
push
cmp
jl
in
test
push
xor
scas
or
dec
jae
dec
in
push
push
dec
or
cld
mov
repz
and
inc
xor
and
cmp
enter
aad
ljmp
int
inc
add
add
xor
mov
mov
sub
cmp
fistpll
scas
sub
ljmp
cwtl
pusha
mov
lahf
aad
mov
or
jg
ffree
cld
sbb
mov
sub
push
outsb
adc
icebp
jp
xorb
push
inc
mov
pop
jno
jbe
in
push
mov
or
mov
in
cmp
xchg
test
cltd
cmpsl
or
lds
mov
out
gs
aaa
test
add
leave
push
mov
leave
movsl
jmp
add
add
ljmp
push
sub
out
out
iret
fdivs
addr16
out
or
subl
push
lret
pop
jb
int
mov
gs
scas
inc
cmp
xor
adc
addr16
lahf
jb
push
idivl
mov
pop
imul
fsubs
imul
mov
pop
mov
adc
aad
dec
pushf
sub
mov
jns
imul
dec
popa
dec
inc
adc
fidivs
cli
jge
mov
inc
sub
jmp
bound
fsubrl
lods
jmp
and
lcall
jno
cmp
ljmp
and
shll
mov
cs
sub
push
popfw
cld
inc
movb
and
movsb
push
xor
pop
arpl
js
js
sbb
xor
mov
add
mov
push
xchg
sbb
lods
mov
stos
or
cmp
mov
mov
pop
or
ljmp
pop
into
jne
cmc
ss
pop
adc
cli
nop
inc
mov
push
out
fsubs
dec
adc
jnp
aas
outsb
daa
inc
xchg
scas
adcb
sub
divl
cwtl
xchg
out
jecxz
pop
ret
cmp
and
outsb
and
lcall
mov
scas
pop
sbb
add
mov
out
rcll
inc
inc
jmp
push
mov
cli
lret
jle
lds
pop
adcb
xchg
cmp
popf
or
mov
xchg
cld
cmc
fistl
pop
jp
xor
shr
or
cmpsb
dec
je
add
inc
aam
mov
mov
xorb
adc
bound
inc
insl
pushf
rcrl
fiaddl
movsb
rcrl
test
ret
iret
cmp
adc
mov
daa
aam
cmp
mov
mov
xlat
and
sub
iret
imul
jno
dec
movsl
les
jb
mov
mov
cmp
jmp
inc
ss
xchg
stos
cmp
fnstsw
aas
adc
arpl
sar
push
das
push
sbbb
fistpll
andl
sbb
and
sub
popf
jle
in
dec
scas
or
or
sbbb
test
pop
addr16
cmp
shrd
adc
rorb
ss
popa
inc
in
sbb
jne
dec
divb
aas
psadbw
ret
and
iret
cwtl
fisttpll
shll
movsb
pop
cmp
iret
aad
clc
sti
jns,pn
cmpsb
pop
adc
ja
jg
addb
cmp
mov
sub
sub
out
cmpsb
jb
fnstenv
mov
xchg
and
sbb
aam
jg
jle
repnz
out
xchg
loope
fidivrl
sbb
ss
jle
sub
lahf
cmp
xchg
cmc
test
add
test
mov
ss
lods
inc
loope
xor
pop
repz
pop
xchg
es
loopne
inc
cmp
and
inc
add
jae
inc
jnp
add
dec
cmp
shr
test
xor
es
fcmovne
add
roll
mov
imul
mov
mov
in
mov
test
or
push
and
pushf
ja
inc
ljmp
movsl
movnti
fsubl
cmpsb
es
arpl
push
in
mov
cwtl
sub
fs
lds
stc
push
ss
or
xchg
cmp
cmp
hlt
insl
loope
mov
in
jecxz,pt
cs
add
push
aad
repz
mov
fldln2
xchg
jge
popa
test
sar
cwtl
push
repz
xchg
add
push
mov
mov
std
or
ds
ja
pop
lods
int
subl
clc
aas
incl
outsl
jne
adc
loope
and
in
imul
mov
sti
xor
faddl
sub
push
jae
cmpsb
adc
push
repz
mov
mov
lds
jno
pop
in
pop
mov
add
scas
clc
sahf
add
dec
test
stc
jno
inc
mov
repz
push
xorb
cmp
out
push
push
sub
jb
mov
and
mov
push
gs
addb
inc
mov
mov
dec
mov
xor
mov
mov
add
shlb
jne
je
mov
aas
xchg
es
mov
push
sbbl
xchg
clc
or
int
fbld
aam
mov
dec
fisubrl
sbb
adc
jb
add
mov
cmc
or
sbb
or
mov
sbb
popa
repz
ss
mov
pop
fldl
aaa
popa
xchg
out
mov
cs
adc
lret
in
call
inc
push
fsubs
add
pop
loope
sbb
ret
dec
iret
stos
outsb
fcmovnb
sub
shrl
out
and
and
int3
lret
fnstcw
sub
stc
add
pusha
bound
and
pop
push
jl
arpl
cwtl
cld
jno
push
cmp
push
dec
scas
sbb
lret
bound
jg
das
fdivl
xchg
sub
jg
or
pop
test
sub
jns
lret
sub
ds
pop
movsb
xchg
mov
push
mov
in
loop
dec
cmpsl
lea
loope
out
adc
sbb
mov
int
das
pop
clc
cmpl
push
fstpt
ds
jbe
stos
xor
cwtl
arpl
and
adc
cwtl
loope
sbb
addr16
int3
aad
cmp
jmp
push
cs
or
gs
bound
lahf
mov
out
push
adc
sbbl
mov
dec
and
repz
in
pop
dec
pop
mov
iret
dec
or
push
subl
push
andl
pop
cltd
lret
xchg
jno
cmp
pusha
rcr
mov
insl
sub
lea
fldenv
orb
dec
das
dec
test
push
mov
jecxz
pop
dec
push
roll
std
stos
gs
icebp
outsl
cmpsb
scas
lcall
cmpsl
repz
dec
fistl
stos
jge
cwtl
cmc
flds
jl
push
xchg
in
cli
mov
arpl
mov
arpl
lods
lods
mov
push
mov
cmc
mov
outsb
adc
sbb
pusha
outsl
fiadds
stc
mov
hlt
jle
loope
mov
or
mov
sub
int3
fnstcw
addr16
or
call
xchg
pop
je
aam
mov
push
mov
aas
rcr
loope
inc
jle
mov
xchg
add
cmpsl
mov
dec
loop
aas
dec
cmp
xor
ja
sbb
mov
data16
int3
rcrl
test
lds
orl
dec
cltd
push
xor
cmpb
sub
sti
addr16
retw
push
ja
or
out
cltd
std
frstor
loopne
sbb
xor
out
js
pop
aas
cmp
mov
outsb
jmp
repnz
in
cld
gs
daa
je
mov
dec
cmp
jne
out
cmp
lods
aas
inc
fisubl
imulb
ror
loop
sbb
stc
pushf
mov
testl
xor
sub
and
pop
call
sbb
jo
cmp
pop
rolb
pop
mov
cltd
lcall
cmp
fcomps
mov
push
movsl
sbb
jbe
mov
pushf
mov
sub
cs
cli
jo
mov
loop
lods
and
sahf
xor
sub
loop
hlt
add
dec
dec
xor
mov
and
lods
sti
fucom
inc
movsb
sbb
push
test
cmc
mov
adc
sarl
pusha
frstor
loop
test
ret
enter
ret
rcrl
push
inc
dec
outsb
fcoms
scas
dec
or
aam
lock
sahf
push
mov
sub
fwait
sbb
imul
add
insb
mov
mov
cmc
es
mov
bound
adc
cli
mov
mov
adc
movsb
cmp
inc
shlb
xor
lcall
data16
div
push
es
pop
push
pop
aad
lods
jmp
addr16
dec
movsb
sub
bound
insb
mov
fdivl
xchg
ljmp
cmc
inc
sbb
dec
pusha
test
int3
rcrb
loope
jns
sub
out
push
pop
mov
sub
inc
test
roll
cmp
push
xchg
push
pop
icebp
repz
add
dec
sti
out
inc
arpl
mov
cmp
aas
sbb
add
lret
push
push
fsubl
loope
jecxz
test
add
push
xor
int
adc
xor
pop
ficompl
into
stos
mov
aas
shrb
sbb
aas
repnz
mov
addl
out
sub
pusha
stc
mov
or
xchg
cmp
mov
cmc
stos
sub
stc
call
int3
push
or
mov
and
lret
mov
xor
jbe
jecxz
stc
cmp
pop
add
mov
push
jmp
inc
aas
add
adc
imul
jp
cld
scas
and
pop
jmp
lret
iret
lds
das
xchg
mov
and
push
cmpb
sti
pop
push
adc
mov
cmp
sub
push
or
jl
cmpl
jge
pusha
pop
pop
aas
into
dec
mov
ret
cmpsb
stos
mov
js
mov
xor
fsub
pop
sti
sarl
insl
add
jbe
stos
or
mov
cmp
fwait
dec
jg
mov
add
loope
xchg
sbb
imul
cmp
jne
push
clc
xor
inc
dec
adc
dec
push
lahf
xchg
lret
lds
lcall
aas
inc
adc
fistpll
adc
pop
jl
dec
outsb
es
imul
insb
pop
dec
outsl
xchg
in
cltd
pop
mov
daa
je
mov
mov
movsl
pop
mov
adc
cmp
mov
sbb
mov
or
popf
aad
jecxz
pushf
lock
sbbl
cmp
fdivr
push
or
out
out
sbb
jp
adc
add
shll
pop
in
inc
inc
and
or
xchg
sub
rcrb
lea
loopne
pop
jne
cli
xor
push
dec
pop
loope
imulb
stc
jns
out
mov
in
imul
pop
xchg
std
cmp
scas
xlat
jmp
cmp
push
push
dec
lcall
notb
ss
dec
cmp
pop
icebp
mov
mov
xor
addr16
pusha
adc
pop
push
fnstcw
jmp
movl
sti
push
push
sti
adc
mov
loopne
mov
mov
push
fsub
pop
bound
xor
pop
mov
push
hlt
add
push
and
stc
push
pop
cmp
inc
je
cli
cmpsb
addr16
dec
test
pushf
cltd
pop
sti
scas
leave
ret
fmull
outsb
xchg
fimull
fwait
inc
outsb
popf
xchg
addr16
sub
and
or
hlt
and
xor
nop
popa
sub
pop
push
sbb
mov
adc
ds
cmp
pop
addr16
iret
sbb
push
pushf
and
repz
repnz
mov
xor
and
dec
sub
jg
jns
jb
pop
xchg
add
gs
push
push
xchg
mov
fistpl
pop
cmpsl
push
xor
andb
jns
adc
jns
cmp
sbb
mov
in
popf
push
popw
fistpl
int
push
xchg
iret
insb
fldt
sub
das
jp
pop
jg
push
mov
dec
xor
xchg
xchg
movsl
xchg
xor
sbb
mov
push
jl
leave
insl
jnp
adc
ret
push
xor
lret
push
dec
add
fldenv
aad
cmp
rclb
push
or
adc
mov
jl
sub
xchg
inc
dec
adc
sahf
jmp
or
push
cmp
mov
xchg
push
mov
and
movsl
lock
push
dec
aas
pop
aaa
out
push
jl
int
movsb
mov
lcall
jb
clc
lods
dec
cmp
lret
lods
push
dec
int
jbe
dec
arpl
out
repnz
xchg
or
lcall
adc
insb
mov
cmp
lret
dec
push
or
inc
dec
xor
int
punpcklbw
cmp
test
adc
subl
ss
mov
mov
pop
and
sbb
inc
in
ret
cli
imul
jae
frstor
into
into
adc
xor
outsl
mov
fstl
add
pop
jl
xchg
and
pop
dec
pop
push
leave
pop
push
adc
ds
mov
test
and
filds
shll
stos
aas
jl
jge
popa
or
pop
mov
pop
popa
pushf
incb
sti
out
pop
cs
xchg
insl
adc
gs
pop
inc
out
inc
mov
das
loope
add
mov
push
jne
xchg
or
or
xlat
mov
scas
pop
jns
out
inc
and
pop
or
out
pop
test
jmp
inc
mov
dec
push
jl
or
inc
into
rcrl
xor
mov
cld
sub
pop
imul
jnp
sti
and
mov
inc
test
xorl
dec
jnp
jl
jnp
xor
pop
cmp
clc
lods
push
sbb
cwtl
xor
jbe
fs
notl
push
xor
or
dec
dec
or
cmp
fsubs
cmc
sub
sti
jnp
push
je
mov
xor
and
push
in
add
jmp
jns
mov
sbb
out
enter
scas
out
bound
lea
mov
pop
mov
jge
xor
or
lods
sub
xor
movsb
or
and
pop
sbb
icebp
sbb
xor
mov
xchg
push
add
cs
jns
adc
mov
xchg
aad
ja
pop
lahf
sub
jmp
inc
movsl
mov
xor
jo
lret
in
pop
add
pop
adcb
xorl
fs
mov
lahf
jo
adc
jno
ret
shll
push
mov
push
sbb
pop
das
lock
mov
nop
dec
xchg
xchg
cli
lock
inc
inc
stos
dec
jno
mov
mov
hlt
insb
stos
inc
je
xor
je
pop
cmp
shlb
sub
pop
xchg
std
ds
mov
xchg
int
add
push
das
shrb
inc
ds
cli
inc
loope
mov
cwtl
std
pop
ficompl
pop
xchg
pushf
and
sub
pop
test
sub
mov
jmp
xor
xlat
mov
add
push
rolb
dec
arpl
fnsave
push
mov
int3
adc
stos
mov
xchg
lcall
xchg
aaa
add
cmpsl
in
or
stos
insb
mov
sti
xor
xlat
popl
aaa
sub
faddl
adc
outsb
sbb
repz
out
pushf
fimuls
icebp
push
and
ret
mov
dec
pop
xlat
sbb
push
lret
inc
xchg
and
mov
lret
xchg
es
imulb
add
shrl
inc
or
pushl
fs
jnp
mov
arpl
mov
pop
sarb
in
movsb
mov
sub
or
mov
je
cli
xor
sub
loope
cmp
in
or
mov
jno
jl
dec
jne
inc
push
mov
out
pop
or
insb
xchg
sbb
insl
jg
fs
dec
xor
lret
imul
cmp
xchg
jns
fdivl
xchg
cs
dec
cmp
push
pop
or
outsb
xchg
ret
addl
loop
fcoms
mov
add
jecxz
in
outsb
cli
negl
dec
fstps
mov
enter
aas
mov
mov
pusha
xchg
sub
xor
andl
sahf
int
ss
and
scas
cmp
outsl
mov
inc
shlb
incl
xor
into
inc
repnz
mov
and
ja
cmp
mov
xor
and
lahf
push
or
jp
mov
dec
loopne
push
shlb
mov
daa
call
or
or
sub
fidivrl
leave
mov
repz
sbb
pushf
jbe
push
xchg
and
sarl
cmpsl
mov
repz
push
jno
dec
test
dec
sarl
sahf
mov
imul
pop
or
inc
mov
aam
repz
or
xchg
clc
lahf
pop
mov
sbb
dec
xchg
add
aad
or
daa
call
lds
pushf
cmp
cltd
xor
or
push
pop
movsb
push
pop
xlat
out
in
mov
loop
adc
adc
imul
mov
shlb
mov
repz
inc
imul
sub
sub
sbb
xorl
loopne
rolb
and
dec
test
push
xchg
xchg
push
jns
inc
test
mov
jp
sub
dec
and
out
out
push
lea
dec
mov
push
jo
repz
das
ljmp
sbb
sbb
mov
xchg
mov
cmp
dec
fwait
call
shl
pop
xchg
out
jl
sarl
lret
jecxz
sbb
add
mov
jl
mov
mov
jp
aam
inc
sub
lret
inc
pop
pop
inc
out
outsl
fisttpll
insl
inc
sub
das
loopne
mov
mov
js
xlat
out
or
jl
dec
paddsb
sub
mov
dec
mov
cltd
fldenv
mov
repnz
xor
jno
sbb
subl
jmp
loope
ljmp
xchg
addr16
shlb
fdivl
data16
adc
jecxz
lcall
ljmp
cmp
popf
repnz
lock
or
fcomi
cmp
dec
aaa
jae
sub
daa
movsb
testb
sub
out
xor
or
xor
pusha
hlt
leave
inc
popf
test
inc
aas
fcmovnbe
adc
xor
sbb
push
sti
or
out
push
ret
pop
push
adc
jp
insb
imul
outsl
scas
inc
sub
or
pop
bound
pop
cwtl
dec
xlat
adc
lea
cld
sbb
push
mov
sub
mov
int
enter
push
into
loop
push
xchg
bound
stc
insl
add
aas
movsl
mov
adc
arpl
and
loopne
inc
or
xchg
imul
xlat
mov
cld
push
add
out
jmp
in
xor
sbb
aaa
out
mov
fucomp
test
jle
push
mov
dec
out
jp
adc
jle
addr16
cmp
mov
rep
push
add
push
xlat
mov
cld
dec
dec
insb
sub
mov
imul
in
jnp
int3
cmp
jmp
clc
cmc
sub
int3
push
push
hlt
fiadds
sbb
sbb
in
fwait
iret
jno
xchg
dec
mov
test
js
cmp
lahf
pop
mov
testb
enter
pop
lahf
xchg
mov
inc
mov
cmp
pop
jmp
nop
iret
mov
mov
test
cltd
xlat
fisubl
adcl
ja
sbb
cld
sub
dec
inc
js
lds
and
out
stos
push
ja
or
or
out
or
push
int3
sbb
ds
dec
std
jnp
repz
in
rcll
mov
jb
cwtl
cmp
xor
je
rorl
imul
shlb
dec
daa
scas
xor
clc
adc
ds
lods
jnp
xlat
mov
add
adc
xor
mov
xorl
dec
sbbl
mov
mull
pop
push
aam
adcl
enter
mov
xchg
int3
and
dec
cmpsb
jle
rolb
lods
mov
dec
add
cmp
inc
sbb
lret
test
cmc
stos
in
aad
lds
adc
sub
push
or
mov
movsl
sti
xchg
lret
test
cmc
stos
in
aad
lds
adc
sub
push
or
mov
movsl
sti
xchg
lret
test
cmc
stos
loope
aad
hlt
lahf
add
jg
dec
add
cmp
or
fisttpl
pop
push
aas
lret
test
hlt
cmp
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
cld
repz
and
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
lahf
hlt
add
mov
add
test
add
jl
add
je
add
insb
hlt
add
fs
add
pop
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
hlt
add
int3
hlt
add
loopne
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pop
cmc
add
js
add
mov
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
hlt
cmc
add
cld
cmc
add
add
add
or
add
adc
add
sbb
add
and
add
aaa
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
testb
pop
testb
push
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
cmp
add
pusha
testl
push
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
fcomip
add
int3
testl
add
add
lods
testl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
testl
add
add
and
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cwtl
clc
add
mov
clc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xor
add
cmp
add
inc
stc
add
dec
stc
add
push
stc
add
pop
stc
add
fs
add
ja
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
stc
add
cwtl
stc
add
test
add
mov
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
