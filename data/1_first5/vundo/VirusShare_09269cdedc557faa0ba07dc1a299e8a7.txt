jp
or
cmpsl
rcr
mov
in
ja
adcb
popa
xchg
pop
out
aas
push
icebp
mov
cltd
adc
out
gs
mov
pop
adc
cwtl
cmp
ret
push
jmp
jo
fcmove
daa
out
inc
push
ja
sub
test
jecxz
inc
int
insl
out
in
fs
pop
dec
add
add
sahf
or
movl
mov
push
cltd
cmp
testl
xor
imul
inc
pushf
das
imul
sarl
cmp
xchg
mov
andb
lret
sarl
xor
je
gs
xchg
mov
mov
inc
hlt
xor
dec
imull
mov
fldt
push
and
ror
push
pop
leave
xchg
outsl
testl
mov
addr16
adc
imul
subb
push
mov
daa
mov
imulb
test
pop
leave
in
insl
inc
jmp
mov
out
mov
popf
ljmp
fwait
sbb
mov
fstps
xor
into
es
call
mov
push
adcl
inc
fcomip
lods
pop
fcomps
into
xchg
cmc
push
and
pop
or
lahf
xchg
ret
sub
and
aaa
and
mov
loopne
add
int
mov
lods
dec
dec
and
mov
sub
pop
mov
dec
jg
cmp
and
sti
fcoml
mov
and
in
add
ljmpw
sahf
xchg
jg
fldl
repnz
ret
test
out
std
test
xor
hlt
pop
cmpsl
pop
xchg
icebp
add
and
cmp
cmp
pop
mov
mov
fisttpll
sbb
or
jmp
cmp
popa
cwtl
jns
push
and
outsl
mov
out
xor
xchg
xor
imul
out
insb
mov
jne
js
pop
int
mov
shll
sub
inc
jae
xchg
lcall
mov
cmpsl
cmp
popa
dec
mov
fsubl
mov
ss
cmc
cmpsl
daa
repz
mov
nop
or
cmpsb
add
sbb
and
xor
add
or
int
ret
xor
dec
and
test
loop
cli
mov
jge
popf
rcl
or
pushf
add
lret
ljmp
pop
pop
pop
adc
pop
out
leave
call
jmp
push
inc
pop
cmc
dec
jmp
mov
inc
jg
inc
sub
xchg
sub
fwait
out
jns
out
pop
std
sub
dec
sbb
in
push
les
pxor
pusha
hlt
cmp
xor
iret
out
je
inc
push
mov
sbb
sub
jecxz
repz
jge
fs
faddl
loop
pop
ja
imul
lret
inc
outsb
sti
pop
adcb
test
mov
pop
in
xor
pop
orb
pushl
ret
mov
pop
inc
mov
nop
add
adc
fiadds
or
aaa
in
mov
sti
aad
cmp
hlt
jge
sbbl
cmp
jmp
enter
inc
cmpsb
jnp
stos
imul
lock
inc
jle
rcl
pminsw
movsl
inc
rclb
int3
roll
inc
and
mov
movsb
sub
mov
mov
add
or
orl
sub
orb
int
fmull
sbbl
xchg
ret
mov
dec
fwait
mov
iret
scas
cld
mov
lret
xchg
cmc
and
lret
add
ss
xchg
pushf
fcmove
mov
repnz
xacquire
inc
and
stos
xchg
gs
fisttpl
cld
imul
lods
push
push
or
jmp
nop
pop
pop
pop
jge
incl
pushf
pop
xlat
xchg
mov
aaa
inc
fwait
cs
mov
pushf
mov
enter
cmp
jae
fcmovb
push
or
mov
addr16
in
cmp
scas
stos
add
and
inc
jp
fcmove
cmpsl
aad
pop
popl
adc
adc
mov
or
pushf
xor
mov
popa
ja
fsubl
icebp
stos
xor
hlt
xchg
lret
dec
dec
sbb
xchg
das
mov
loopne
inc
mov
roll
xchg
dec
mov
test
sbb
roll
jno
cli
enter
jl
stos
push
and
fnstenv
gs
or
lods
push
xchg
adc
mov
fsubl
cmp
fldt
lahf
inc
lods
shlb
sbb
adc
push
dec
push
push
pop
adc
mov
shrb
scas
dec
push
and
mov
and
inc
cs
push
mov
fidivs
jno
mov
xor
fbstp
jo
in
movsb
loope
ss
shl
sbb
adc
mov
dec
pop
shlb
lea
jae
push
dec
sub
lcall
fcom
jecxz
lock
popa
hlt
cmp
fcmovb
mov
cmc
inc
cli
mov
sti
push
negl
fstpt
and
push
fwait
xchg
ja
test
shufps
add
xor
stos
sar
adc
insb
mov
dec
cmpsb
clc
inc
inc
jae
dec
loope
xchg
jge
aad
aam
mov
xor
inc
divb
aam
push
pop
mov
add
xchg
fidivs
add
clc
xchg
sbb
lahf
pushf
aaa
push
adc
rorb
inc
mov
mov
xchg
rcrl
movsl
mov
inc
jp
ret
cmp
loopne
pop
sahf
sbb
lea
or
mov
cmpb
mov
cmpsb
push
loop
lret
inc
lahf
mov
xchg
adc
les
jno
push
psubw
ret
insb
xchg
pop
aaa
lret
dec
push
pop
bound
ret
outsl
and
mov
jnp
cs
in
insb
push
jns
xchg
or
sbb
mov
fdivrl
aas
mov
jno
adc
sbb
dec
std
mov
push
or
adc
sbb
mov
jmp
insb
xchg
outsb
inc
jl
popf
ror
jp
mov
inc
ficoms
pop
jp
inc
xlat
lret
movb
int3
xchg
pop
sub
cli
mov
int3
jb
xor
sbb
fadd
push
mov
mov
imul
cmp
mov
mov
mov
or
aaa
mov
xor
fdivp
out
sbb
mov
in
sbb
push
rorl
mov
shll
pop
pop
jae
pop
dec
jns
sahf
add
inc
jg
pop
test
pop
fldz
adc
inc
xchg
gs
das
jo
rcll
mov
adc
and
push
addr16
cmp
sbb
jle
inc
mov
or
test
jle
shrb
xor
fdivr
sub
aam
and
xlat
pop
jnp
xchg
push
mov
and
adc
icebp
rclb
loop
sbb
sbb
icebp
adc
lock
add
or
push
jecxz
and
es
dec
add
popf
push
mov
lahf
mov
repz
pop
jbe
movsl
sti
sbbb
mov
mov
jp
pop
out
addr16
jge
mov
xchg
lcall
es
rol
mov
sti
cmpl
push
leave
dec
jb
mov
outsl
xchg
xor
jmp
push
cltd
fbld
stc
adc
cmp
mov
and
pop
push
push
lock
testl
mov
pop
xchg
sbb
sarl
daa
adc
push
mov
cmc
sub
mov
inc
mov
sub
cmp
jmp
test
addb
rolb
sub
aas
sub
jle
cmp
jbe
jae
jg
cld
lds
rcr
sub
fisubrs
cld
addr16
sub
sub
imul
sub
cwtl
and
cltd
pusha
xor
shrl
pop
je
imul
or
xor
add
fadds
dec
icebp
mov
xor
dec
sar
inc
adc
stc
mov
stos
inc
notl
divl
and
cmpsl
add
inc
sub
xor
sbb
in
mov
cmp
push
shrb
mov
jle
dec
ja
push
pop
push
push
stc
sahf
pop
mov
les
aaa
popf
enter
sti
cmp
inc
mov
cmpsb
test
jno
cld
add
add
je
push
stos
mov
sbb
or
adc
push
cmp
or
xrelease
shl
xor
aaa
mov
dec
in
les
fstpt
scas
add
jne
pop
inc
lahf
xchg
and
dec
mov
ja
mov
cmpl
sub
rclb
mov
pop
sub
and
mov
sbb
dec
iret
pop
lock
mov
cmpsb
icebp
push
mov
cmp
nop
addr16
out
loopne
fstps
xchg
mov
sub
jae
lcall
adc
jg
xchg
inc
fs
jl
sbb
maxps
pop
mov
cmp
adc
lahf
push
jnp
sbb
pop
and
dec
mov
dec
sub
adc
sbb
popf
out
dec
movsl
test
xor
ftst
sub
push
popa
xchg
mov
iret
jno
mov
jge
loope
stc
mov
add
add
xor
push
mov
sub
ja
inc
mov
fisttps
adc
xchg
les
mov
jno
mov
cltd
mov
lea
and
mov
cmc
out
dec
adc
push
out
xchg
mov
stos
push
push
into
adc
jno
push
add
outsl
pushf
fldl
mov
adc
stos
mov
ror
fst
dec
loope
adc
arpl
outsl
cmpl
fiaddl
sbb
and
negl
leave
in
std
dec
adc
icebp
inc
enter
push
pop
test
jmp
scas
cltd
data16
mov
jno
test
xchg
addr16
fistpl
mov
mov
adc
mov
inc
adc
jp
adc
sbb
inc
cld
fisttps
addr16
mov
out
ret
loopne
outsb
movsb
inc
lret
out
hlt
lcall
imul
ds
loopne
pop
xor
add
pop
mov
mov
test
fsubr
mov
insb
cld
inc
and
xor
mov
inc
jo
and
xchg
and
mov
outsl
mov
je
in
and
arpl
les
mov
jge
jg
and
cltd
aaa
or
and
cmp
movsb
loope
mov
incl
xor
movsl
add
pop
adc
cli
mov
inc
jmp
std
push
fstpl
sub
fstl
dec
pop
shl
dec
test
aaa
pop
xor
das
js
fldl
mov
xchg
or
jno
mov
aas
jg
test
ds
jns
aas
xchg
and
inc
push
mov
push
cmpl
daa
jb
inc
mov
push
fstp
sbb
mov
mov
sub
sbb
adc
inc
loop
mov
inc
mov
mov
dec
test
or
mov
sbb
pop
fcmovnbe
inc
push
iret
and
into
dec
or
outsb
push
xchg
mov
push
jmp
insb
dec
fistpl
jge
inc
dec
and
xor
pop
sub
stc
lods
out
or
pop
sub
dec
fisttpll
call
mov
xchg
fwait
dec
mov
push
mov
mov
xlat
in
test
sbb
addr16
aam
xlat
mov
popa
cmp
es
push
push
out
cs
pop
movsl
inc
out
pop
leave
mov
pushf
daa
rorl
or
push
in
push
add
imull
add
loop
imul
dec
sub
pushf
pop
mov
and
das
push
push
mov
dec
mov
push
push
mov
mov
push
ss
fwait
mov
or
cmp
dec
and
fwait
scas
dec
ffree
push
jmp
lret
ret
inc
fsubr
lcall
shrb
push
jae
push
pushf
ret
adc
add
jmp
jo
mov
adc
pop
popa
xchg
mov
bound
inc
arpl
mov
fldl
fucom
and
mov
add
cmpsb
add
enter
cmpb
shlb
cmp
mov
pop
lahf
xchg
pop
xchg
or
test
xchg
daa
add
cmp
in
lahf
or
loop
rol
fists
xor
imul
mov
sub
cmp
and
sub
cmp
loope
xor
adc
lods
orl
shrl
out
fidivrl
inc
into
push
cmp
xor
mov
pop
pop
push
sahf
lret
stc
and
lahf
mov
jmp
or
add
movsl
xor
stc
jne
pop
bound
pop
cmpsl
int
out
jbe
outsb
iret
clc
stc
es
mov
mov
lret
sbb
sub
sub
push
lahf
pop
push
das
xor
or
lret
jb
lds
push
addr16
adc
mov
roll
stos
pop
dec
xor
jl
cmp
test
mov
test
add
pusha
imul
dec
pop
andps
jg
push
mov
inc
add
mov
out
cmp
or
mov
sub
push
mov
or
or
mov
xor
in
pop
inc
int
cmp
sub
imul
loop
insl
cltd
out
pop
jl
xchg
cmp
push
add
ja
mov
in
adc
loopne
and
loope
rol
ficoms
push
sahf
adc
icebp
push
add
lret
int3
add
push
push
xlat
loop
mov
cmp
mov
sarb
pop
or
ljmp
jmp
or
addr16
inc
add
mov
mov
cmpsl
push
adc
mov
std
popa
or
fisttpll
inc
xchg
xchg
jno
sub
mov
push
cmpl
dec
xor
insl
and
out
in
mov
mov
imul
or
out
nop
fidivrl
inc
lea
subl
lcall
mov
les
jle
rorl
faddp
pop
cmp
mov
and
sbb
out
movsl
pop
jno
movsb
je
loop
dec
push
adcb
dec
addr16
sarl
xchg
fxtract
movsb
incl
push
inc
xor
or
test
push
mov
xchg
pop
jno
rcl
dec
pop
dec
mov
or
out
test
jmp
stos
cmp
xlat
cld
jns
xchg
daa
cmpsl
mov
mov
insl
popf
push
test
mov
mov
lahf
sbb
int3
out
add
inc
cmp
loopne
dec
sbb
pushf
in
nop
jb
xor
inc
inc
inc
mov
ljmp
std
sahf
cli
daa
mov
xchg
jle
pop
inc
mov
and
mov
imul
test
cwtl
js
idivb
popf
sbb
or
lahf
es
das
cmp
lods
push
mov
in
test
or
sbb
mov
ljmp
shl
sbb
test
dec
push
cmp
nop
les
sbb
sub
out
xchg
pop
jg
cmp
sti
and
fistpl
pop
sub
dec
add
xor
data16
xor
add
popl
loop
dec
es
jp
push
jb
rcrl
sub
ficompl
lahf
mov
xchg
push
stc
jg
lret
fwait
cld
pop
and
xchg
fsubl
jmp
mov
insb
inc
daa
adc
fisttpll
pop
test
sarb
negb
test
xlat
lcall
or
icebp
push
mov
hlt
mov
add
add
addb
jge
lcall
mov
ljmp
fwait
or
inc
je
mov
sbb
bound
aad
aam
lea
jg
sub
inc
data16
push
xor
adc
cmp
lds
push
outsl
jo
pop
push
sub
adc
mov
lods
adc
sub
sub
ja
xchg
jae
jp
cmp
mov
add
xlat
add
jecxz
sbb
mov
outsb
mov
jno
add
push
icebp
xchg
cmp
mov
fstl
and
cmp
je
xchg
push
mov
pop
and
insl
fnstenv
xchg
pop
sarb
ss
xor
sbb
cmp
in
and
outsb
fdivrl
pop
lahf
outsl
dec
cmp
mov
test
mov
and
cmp
jns
push
pop
sbb
in
stos
vmptrst
xor
inc
ds
adc
lock
bound
scas
and
int3
sbb
pop
sahf
outsb
pusha
fucomi
int3
fstp
mov
in
popa
cwtl
jecxz
mov
mov
mov
or
imul
inc
ljmp
dec
popl
jecxz
push
aas
jmp
pop
adc
nop
adc
daa
push
push
and
mov
lcall
xchg
sarb
or
aad
je
iret
movsb
in
shll
lcall
push
cmpsl
cmp
shll
xchg
cmpsb
xchg
cmp
push
repnz
mov
jg
in
pop
pop
rorl
loopne
jp
adc
xchg
pop
ss
rclb
adc
xchg
push
sbb
mov
jo
enter
lea
dec
in
js
jbe
xchg
mov
push
xor
dec
xchg
mov
pop
fstpl
inc
js
inc
and
call
push
push
or
sub
in
mov
xor
in
cmp
jg
sbb
aaa
je
roll
pop
test
xchg
dec
out
pop
mov
xchg
bnd
test
or
sub
pop
dec
mov
sahf
bound
jb
push
dec
and
aaa
add
mov
push
movsl
je
outsb
inc
jns
sub
jp
mov
hlt
sahf
lea
dec
mov
ret
rcll
xchg
shl
mov
jg
cmpsb
push
aam
divb
and
cmp
js
aam
jne
fsubrp
pop
push
sub
mov
or
cmp
jo
lret
mov
xchg
push
add
mov
in
cmc
fs
mov
stc
and
popl
push
push
out
push
sahf
sbb
jnp
pop
movsl
pop
into
cmc
push
add
fucom
rolb
cmc
push
sahf
pop
dec
repnz
pusha
and
es
stos
xchg
and
into
movb
out
mov
push
lret
push
nop
dec
lcall
push
or
adc
mov
mov
shrb
loopne
sbb
and
lods
scas
je
cmp
mov
mov
test
js
stos
outsl
dec
add
nop
ljmp
jecxz
aas
xlat
paddb
sub
push
sbb
jmp
or
mov
popf
xchg
dec
push
lret
test
rcrb
sub
pushf
pop
pop
in
xchg
test
adc
lods
cwtl
sub
shl
cmpsb
pop
xor
jge
inc
xchg
jp
loope
jno
or
mov
jns
add
push
subb
and
pop
jo
lcall
xchg
jecxz,pt
and
imul
loopnew
je
xchg
xor
cwtl
pop
mov
mov
jp
aaa
adc
aam
sbb
pop
mov
shll
lret
lock
mov
hlt
pop
mov
jge
sub
pop
incb
adc
fsub
xchg
xchg
xchg
int
jmp
cmp
out
out
leave
mov
scas
sar
ret
ret
jae
es
lods
adc
loop
cs
xor
mov
push
mov
loope
fcoml
rclb
lods
imul
jp
cmp
push
es
shl
andl
cld
insb
mov
pop
mov
lret
sub
or
pusha
jns
sub
gs
test
imul
mov
mov
fisubrs
adc
lcall
cltd
mov
lods
push
fiadds
mov
dec
shll
jo
stos
dec
out
jmp
test
outsl
cmp
mov
pop
in
dec
test
ss
rcll
mov
icebp
ret
jl
mov
mov
roll
test
sub
add
add
jno
sub
sub
pop
jp
insb
lds
addb
cld
mov
inc
bound
out
repz
lahf
lods
cmp
fadds
insb
int3
adc
inc
test
add
mov
fidivrl
cmp
cmp
add
pop
dec
mov
das
or
sub
int
jmp
push
lea
dec
cmp
stos
test
xchg
ljmp
sbb
pop
pop
aad
das
mov
sbb
je
pop
in
jp
arpl
aam
testl
xchg
nop
std
xchg
inc
imul
add
jg
dec
std
jb
ret
sbb
pusha
jnp
in
lret
je
jl
mov
mov
jae
scas
lret
cmp
mov
push
orl
cmp
mov
in
lea
cmp
adc
and
nop
and
stos
loopne
dec
daa
negb
xor
mov
jno
inc
imul
xor
push
cmp
jl
es
aad
mov
sarb
and
pushf
jbe
mov
das
pop
and
push
pop
lahf
jg
cmpl
inc
and
sub
cmpsl
daa
push
mov
loope
std
push
fsubl
mov
and
push
shlb
jb
mov
add
or
mov
push
and
cmpb
xor
popa
mov
mov
adc
mov
and
popf
adc
movsl
out
test
dec
jecxz
mov
leave
out
pop
lods
jmp
xchg
and
push
and
hlt
cmp
push
mov
rol
mov
mov
lret
sub
push
and
rclb
daa
inc
pop
aam
movsl
xchg
pop
push
out
shll
sub
fdivrl
jb
bound
mov
aad
ljmp
push
xlat
adc
jmp
lods
aam
push
cmp
lds
int
shrd
xor
xor
cltd
mov
inc
mov
fsubs
loopne
jno
in
mov
mov
in
rorl
mov
push
daa
daa
sub
out
call
sub
mov
push
pusha
stc
add
pshufw
dec
dec
lea
pusha
inc
xor
lret
cmpsl
addr16
je
fcompl
push
cwtl
and
mov
setb
xor
fwait
cmpsb
sahf
scas
push
mov
aaa
pop
rcrl
lea
dec
jne
das
and
loopne
push
push
ja
stc
jne
cmpsb
xor
in
stc
dec
or
xchg
out
fptan
clc
mov
icebp
andl
out
jo
dec
mov
sub
jne
daa
mov
xchg
nop
fs
jb
adc
push
stos
mov
hlt
jne
mov
add
dec
sub
mov
lcall
xchg
mov
sub
inc
iret
xorl
aas
js
inc
jle
fidivs
mov
icebp
test
jnp
sbb
dec
es
xchg
dec
lret
popf
inc
push
push
add
cs
mov
lds
imul
mov
pop
into
sbb
adc
push
sub
add
mov
add
int
fists
xchg
fmuls
das
test
sbb
and
push
mov
push
cmp
movsl
cmc
cmp
stos
mov
and
rolb
out
or
outsl
xor
sbb
in
xor
aam
inc
ja
test
into
mov
stos
in
les
and
movl
xchg
rcll
or
dec
test
out
std
adc
jae
xchg
sbb
inc
fmuls
dec
xor
and
popa
fistpl
in
shl
mov
test
inc
adc
stos
pop
flds
stos
sbb
loope
fistl
cmpsb
jg
xor
pop
and
repz
add
and
adc
lret
sub
lret
or
mov
add
push
pop
sub
insl
mov
test
aad
pop
inc
lock
or
pop
push
sbb
movsb
pop
jl
rcl
movl
in
mov
push
into
rorl
psubsw
fnstenv
dec
aas
xchg
mov
stos
push
pop
loope
mov
mov
cs
mov
xor
ret
loopne
pop
push
xchg
mov
pushf
lcall
repz
arpl
test
mov
inc
dec
push
je
inc
mov
push
jns
mov
cmp
fbstp
sbb
inc
nop
inc
jo
loope
mov
repz
loope
int3
or
les
mov
fscale
mov
push
and
cmc
push
and
ret
fsub
sahf
mov
xor
mov
out
xchg
mov
out
pop
andl
adc
cmp
leave
sub
sbb
cmpsl
mov
dec
dec
les
test
arpl
mov
dec
adc
outsb
sub
js
cmp
mov
in
fs
loope
sarb
lea
in
pop
pop
sbb
inc
push
lret
addl
insb
jp
sub
add
jae
aam
cmovae
mov
roll
mov
loop
rcll
xchg
addr16
js
push
xor
sbb
test
mov
movsb
and
ret
push
jecxz
xchg
pop
mov
ds
mov
fildl
lds
xchg
fimull
push
movsl
mov
cmp
enter
fidivrl
and
std
push
ds
or
or
push
popa
fucompp
js
movsl
rcr
test
mov
out
adc
cltd
jecxz
mov
movsl
cli
je
cltd
arpl
jne
lock
nop
xlat
sti
aad
cltd
jecxz
dec
out
hlt
mov
sub
xchg
dec
aas
xchg
int
rorl
aas
cmp
pop
dec
sub
push
mov
xchg
pop
imul
icebp
cmpsl
mov
and
mov
and
xchg
pushf
cmp
mov
cltd
inc
mov
push
lock
daa
mov
add
fdivrs
divl
in
mov
fstpt
mov
pushf
cltd
xchg
lcall
inc
dec
fildll
fbstp
jbe
mov
cwtl
scas
int
out
mov
inc
and
lret
xor
pop
lret
mov
fidivrl
jle,pt
fs
les
es
addl
or
add
je
inc
cmp
loopne
sahf
insl
aaa
mov
adc
call
cmpsl
xchg
cmp
or
cmc
cmp
xchg
aaa
sbb
xchg
jb
dec
scas
jmp
xchg
dec
mov
es
jg
jmp
roll
insl
loope
aad
jne
push
lret
dec
jnp
jge
pop
xchg
shr
loope
dec
push
push
repz
aam
cmp
inc
xor
shl
pop
jne
enter
adc
mov
jecxz
jae
push
adc
jno
les
int
mov
inc
cmp
pop
lcall
scas
inc
into
push
and
mov
popa
out
xorb
mov
shlb
clc
cmp
aam
xchg
cli
xor
adc
cs
xor
inc
push
loopne
out
mov
jecxz
es
out
xchg
pop
test
sbb
mov
dec
loopne
jmp
ljmp
fidivl
leave
call
sbb
jns
cli
ja
xchg
sub
mov
xchg
and
push
fnstsw
adc
stos
rorb
repnz
jg
mov
iret
pop
jle
push
sbb
xor
jb
mov
cmc
fildll
lret
mov
subps
stos
cltd
add
jne
push
jecxz
daa
lret
std
mov
xor
push
sub
dec
dec
adc
xor
jle
sub
and
loop
inc
dec
add
lock
mov
icebp
sub
jne
pushl
flds
orb
mov
push
hlt
out
push
adc
frstor
jbe
push
jbe
pop
out
sbb
sbb
push
fbld
aaa
pop
pop
mov
sarb
int
rcrb
test
les
or
in
in
pop
cmp
push
mov
imul
test
mov
out
push
stos
rclb
add
pop
mov
and
fistps
in
pop
jp
cmpsl
push
dec
dec
movsb
cmpsb
sub
lret
in
mov
mov
mov
ss
and
adc
es
push
call
xlat
jge
inc
sbb
testl
movsl
jns
dec
inc
jmp
jmp
push
push
cwtl
mov
lret
sub
adc
cmp
jecxz
push
imul
repnz
fs
add
repnz
and
psubusw
js
mov
inc
inc
add
aas
mov
and
fstp
dec
mov
sbb
inc
popf
loope
inc
js
pop
arpl
sti
mov
or
es
jmp
stos
imul
repz
adc
hlt
popf
add
scas
stc
lock
xchg
or
inc
or
loope
add
pop
jnp
pusha
and
add
test
aad
pushl
jmp
test
cmp
push
lcall
shrb
lock
mov
add
repz
pop
and
pop
fiaddl
in
sti
test
shrl
xchg
test
cs
xchg
popf
or
imul
es
adc
mov
clc
fldt
test
testl
jmp
inc
lock
rclb
ds
fcoms
or
cmp
xorl
xor
ja
lock
fidivs
mov
mov
gs
cs
inc
lods
mov
aas
rol
push
scas
jge
mov
sbb
inc
jno
lahf
dec
xchg
cltd
xchg
cs
orb
push
lcall
ja
loope
pop
adc
xor
sahf
or
and
fidivl
lahf
dec
add
cli
mov
pop
jp
cmpsb
jns
mov
add
jae
xor
cmc
out
les
jle
mov
cmc
cmpsb
mov
idivb
pop
dec
les
inc
xchg
outsb
lods
push
push
jecxz
scas
sub
xor
fmulp
or
adc
stc
and
jae
stos
mov
xchg
mov
pop
nop
pop
cmpl
imul
inc
add
mov
mov
jge
ficompl
pop
xor
in
jmp
ljmp
mov
pop
bound
daa
in
idivl
adc
mov
cmpsl
mov
mov
enter
xchg
sub
xchg
push
movsl
xor
mov
bound
outsb
mov
cwtl
adc
cmp
mov
dec
aad
cmpb
popf
xlat
insl
std
dec
push
xchg
fisttpl
adc
add
sbb
outsb
add
xchg
pop
push
pop
push
xchg
insl
mov
jb
push
lods
int3
adc
jmp
daa
or
nop
cmp
or
aas
dec
pop
mov
jno
out
push
dec
loop
dec
fcomip
jbe
mov
fisttpll
or
gs
jbe
mov
cmp
icebp
imul
dec
rolb
stc
push
cmp
adc
cmpsl
int
lods
jecxz
xor
push
mov
push
cmp
loope
mov
pusha
fcmovnu
in
mov
movsb
arpl
movsl
scas
sub
fstpl
fadds
pop
fwait
inc
xchg
hlt
mov
sub
sti
loop
and
orl
mov
ljmp
mov
fwait
arpl
aad
mov
xorb
xor
insl
xor
orb
fs
inc
insl
in
xchg
pop
fwait
imulb
scas
nop
pushf
inc
addl
push
cmp
xchg
dec
negb
cmpsb
mov
rorl
sbb
adc
jns
bound
aaa
mov
lahf
push
xchg
fldt
push
jl
inc
aaa
cs
in
test
daa
add
test
outsl
ljmp
adc
mov
pop
fsubrl
popf
in
loope
cmp
mov
int3
sub
jne
pop
sahf
mov
subb
push
cli
add
rorb
or
scas
xchg
jne
cmc
cmp
test
stos
inc
std
jmp
mov
mov
cmp
mov
aad
mov
ss
aas
lods
fst
sar
pusha
or
fsubl
fs
cmpsb
ljmp
repz
mov
adc
out
add
mov
cmp
lret
jb
and
sub
xor
cmpsb
push
roll
sti
mov
jo
mov
fsub
rorb
out
inc
jmp
jge
out
dec
add
push
add
push
inc
ret
andl
sahf
push
inc
dec
fstps
rorb
test
daa
xor
mov
fmuls
aad
cld
movsb
inc
out
aaa
push
arpl
adc
std
fimuls
pop
lea
or
pop
je
and
jge
cltd
ss
lret
xchg
enter
inc
mov
stos
dec
dec
mov
popf
xlat
scas
lret
lock
stc
xchg
lods
sbb
sbb
aas
pop
xorl
loopne
notl
sbb
sbb
dec
daa
aam
insb
imul
push
cmp
adc
mov
roll
lcall
mov
imul
mov
dec
pop
jo
adc
fimuls
in
push
aas
int
hlt
aad
leave
push
enter
push
test
sahf
mov
lods
jl
or
repnz
scas
mov
ret
movsl
xor
and
bnd
outsl
mov
inc
fsubrl
dec
xchg
test
gs
out
add
mov
pop
mov
pop
xchg
mov
dec
push
and
or
fiadds
add
fimuls
scas
rcrl
pop
imulb
dec
lcall
es
test
and
cmp
mov
call
cmp
popf
ret
adc
sbb
das
xor
mov
sbb
scas
cltd
cld
popf
jno
cmp
jmp
or
sbb
stc
clc
fisttpl
dec
gs
dec
jle
data16
addl
cli
scas
lods
je
into
pop
jle
out
mov
inc
jecxz
stos
dec
loop
sbb
sbb
pop
sub
mov
mov
das
ds
push
loop
inc
mov
call
adc
xorb
and
jno
arpl
or
lahf
mov
dec
gs
pop
push
in
outsl
lods
cmp
adc
pop
and
sub
andl
lret
pop
ljmp
rolb
add
in
xchg
js
and
lret
adc
pop
mov
pop
inc
mov
int
jbe
mov
hlt
fnstcw
shll
rcl
loop
js
and
adc
icebp
out
ret
mov
and
sub
dec
cmp
xorl
adcl
pop
lods
jbe
mov
into
fstpt
mov
and
dec
xor
int
movsl
test
das
and
jmp
arpl
std
sbb
jecxz
jmp
inc
test
and
cmc
push
out
inc
ret
dec
cmp
arpl
jns
add
lret
scas
mov
sbb
mov
xchg
and
fst
outsl
in
test
cmpb
jl
sahf
enter
jg
xchg
ja
pop
rorl
hlt
push
jns
add
sub
imull
js
cmp
cmpsb
mov
xchg
lahf
or
sbb
data16
sbb
popl
dec
loop
mov
xlat
std
mov
sub
ror
leave
scas
add
and
std
negl
icebp
call
dec
call
adc
sub
lcall
push
cmp
xlat
push
shl
mov
fsubrp
jno
roll
xlat
dec
mov
sbb
lods
inc
dec
cld
mov
in
lea
inc
jno
xchg
insb
jno
mov
mov
cwtl
loope
dec
jno
add
cli
cwtl
mov
and
jnp
lret
test
daa
sub
imul
xor
lds
cmp
or
in
leave
xorl
sti
and
les
out
jne
dec
fucomi
add
pop
jns
jecxz
icebp
push
fiadds
cs
ja
in
dec
idivl
stos
and
insl
lret
add
loop
loop
pop
scas
add
jno
cmp
mov
push
aam
cwtl
add
test
aas
clc
mov
adc
shrb
lods
mov
xchg
push
in
fdivrl
mov
mov
gs
stc
mov
jae
sub
ja
in
cmp
mov
fildll
test
fcoms
je
or
sbb
inc
in
cltd
jne
pushf
test
movsb
mov
mov
add
mov
stc
push
sub
leave
cmc
sbb
iret
int3
lds
push
xchg
hlt
jae
addb
inc
inc
ss
and
jmp
jns
mov
sub
push
push
dec
inc
shrl
test
or
pop
push
es
push
adc
daa
lods
mov
mov
cmpsl
cmp
mov
test
lcall
inc
pop
in
rcrl
and
shr
mov
cmc
stc
in
loop
leave
adc
push
iret
jmp
mov
xor
mov
arpl
ret
push
pop
nop
add
xchg
and
imul
push
stos
out
inc
roll
mov
sub
push
adc
adc
sub
mov
cmpsl
xlat
testl
mov
shr
add
sarl
test
shll
and
ljmp
sub
leave
das
mov
add
push
adc
push
shrl
lods
jne
inc
or
jo
and
and
nop
add
dec
mov
fs
adc
aaa
decl
push
dec
and
mov
es
add
mov
hlt
dec
pop
sub
lods
mov
inc
push
cmpsl
je
mov
test
aam
shr
dec
mov
rcl
test
ficoms
aam
or
ljmp
add
leave
dec
pop
popf
add
and
adcl
xor
repz
and
inc
fsts
mov
inc
.byte
push
jmp
lea
movl
push
movl
jmp
orb
xor
jmp
inc
dec
jne
jmp
sub
add
cmpl
jmp
je
push
jmp
call
jmp
pop
jne
mov
jmp
jmp
pushl
call
add
jmp
cmpl
je
xor
jmp
test
jne
pop
ret
nop
nop
nop
nop
nop
sub
shr
test
jle
jmp
push
jmp
mov
jmp
push
call
push
push
jmp
mov
xor
mov
jmp
jne
jmp
jne
mov
mov
mov
jmp
mov
and
cmp
jmp
je
jmp
leave
ret
nop
nop
nop
nop
nop
jle
jmp
call
test
pop
jmp
xor
jmp
push
call
cmp
pop
jmp
add
lea
jmp
je
jmp
nop
nop
nop
mov
jmp
push
xor
push
jmp
call
mov
mov
mov
jmp
push
jmp
nop
push
push
pop
pushl
jmp
mov
mov
ret
nop
nop
nop
nop
nop
mov
add
jmp
nop
nop
call
push
nop
nop
nop
nop
nop
call
test
pop
je
jmp
lea
call
jmp
mov
push
jmp
pushl
call
test
jmp
test
jmp
nop
nop
nop
nop
nop
nop
push
mov
sub
jmp
mov
mov
jmp
movb
movb
movb
mov
jmp
je
jmp
jne
mov
jmp
je
jmp
nop
mov
mov
mov
jmp
nop
mov
jmp
push
push
jmp
mov
mov
sub
jmp
push
jmp
nop
push
mov
jmp
push
mov
xor
push
jmp
push
push
jmp
push
mov
mov
mov
jmp
mov
test
jmp
mov
test
jmp
push
call
jmp
push
shr
push
jmp
mov
call
push
jmp
dec
jmp
nop
push
push
jmp
pushl
pushl
pushl
jmp
pop
pop
jmp
mov
add
push
jmp
pop
ret
nop
nop
nop
nop
nop
cmpl
jne
jmp
add
lea
jmp
mov
mov
jmp
mov
mov
xor
jmp
push
cltd
pop
mov
jmp
xor
mov
jmp
nop
nop
nop
nop
nop
nop
push
mov
test
jbe
jmp
lea
jmp
nop
nop
nop
nop
push
mov
jmp
push
andl
lea
jmp
xor
push
mov
jmp
push
push
push
pushl
jmp
mov
lea
push
jmp
mov
jmp
movsbl
mov
xor
inc
jmp
movzbl
inc
mov
mov
jmp
cmpl
mov
jle
mov
jmp
cmp
jmp
mov
xor
mov
mov
jmp
and
incl
incl
jmp
movl
mov
mov
add
jmp
pop
ret
nop
nop
nop
nop
nop
cmp
jmp
pusha
call
mov
xor
jmp
nop
nop
nop
nop
nop
nop
push
mov
jmp
push
push
push
jmp
pop
jmp
pop
jmp
push
call
jmp
cmpb
jne
pushl
jmp
mov
lea
jmp
push
push
pushl
jmp
xor
mov
jmp
cmpl
sete
test
jmp
nop
push
mov
push
jmp
call
pushl
jmp
sub
mov
andl
jmp
lea
jmp
push
push
jmp
pushl
call
jmp
cmp
je
mov
jmp
test
jle
mov
mov
jmp
mov
jmp
je
mov
test
jmp
push
jmp
nop
push
mov
push
mov
jmp
mov
andl
mov
mov
jmp
mov
shr
shl
or
jmp
call
jmp
mov
add
add
jmp
shr
and
mov
ret
nop
nop
nop
nop
nop
mov
movzwl
jmp
test
jmp
test
jmp
lea
push
jmp
mov
call
jmp
nop
push
mov
jmp
cmpl
je
jmp
xor
jmp
push
mov
mov
jmp
push
push
push
call
jmp
mov
jmp
add
cmpl
je
jmp
je
lea
push
jmp
lea
jmp
nop
nop
nop
push
mov
jmp
mov
mov
movb
movb
jmp
mov
add
add
mov
jmp
mov
jmp
test
pop
je
jmp
mov
add
mov
jmp
lea
call
ret
nop
nop
nop
nop
nop
idiv
xor
jmp
ret
nop
nop
nop
nop
nop
nop
add
add
xor
leave
jmp
mov
test
jmp
add
jmp
jne
jmp
push
push
mov
jmp
call
call
mov
jmp
mov
sub
jmp
je
jmp
and
add
add
jmp
call
push
push
mov
jmp
xor
mov
mov
jmp
sub
dec
mov
jmp
lea
push
jmp
incl
addl
mov
cmp
jmp
je
test
je
jmp
jl
jmp
movzwl
jmp
push
jmp
add
jmp
call
jmp
add
jmp
jne
sub
decl
jne
jmp
call
test
pop
jmp
xor
jmp
jmp
jmp
pushl
push
call
mov
jmp
mov
jmp
push
jmp
mov
jmp
mov
test
jle
jmp
lea
jmp
jmp
mov
jmp
mov
add
jmp
test
jmp
inc
inc
decl
jmp
popa
jmp
push
call
nop
nop
nop
nop
nop
mov
add
add
jmp
push
je
call
test
jmp
mov
jmp
add
push
push
call
jmp
je
lea
push
push
jmp
jne
add
jmp
mov
jmp
pop
je
push
jmp
movzwl
jmp
test
jmp
pushl
push
call
jmp
cmpl
jne
jmp
call
add
mov
mov
jmp
jne
mov
test
jmp
xor
pop
lea
jmp
jle
mov
jmp
push
call
dec
pop
jmp
mov
add
pop
pop
jmp
je
mov
jmp
pushl
jmp
pop
pop
push
jmp
pop
pop
pop
jmp
pop
leave
ret
nop
nop
nop
nop
nop
add
add
jmp
add
jmp
mov
sub
pushl
push
jmp
pop
pop
leave
ret
nop
nop
nop
nop
nop
leave
ret
nop
nop
nop
nop
nop
shl
shr
or
xor
jmp
lea
jne
jmp
jmp
xor
jmp
jmp
add
dec
jmp
mov
test
jmp
push
pop
pop
jmp
call
push
push
jmp
jne
jmp
je
mov
sub
mov
jmp
pop
pop
jmp
mov
jmp
andb
jmp
pop
pop
pop
ret
nop
nop
nop
nop
nop
call
push
push
push
nop
nop
nop
nop
nop
call
jmp
pop
leave
ret
nop
nop
nop
nop
nop
incl
jmp
mov
push
nop
nop
nop
nop
nop
pop
movzbl
jmp
add
push
nop
nop
nop
nop
nop
push
push
jmp
incl
jmp
call
xor
jmp
mov
and
inc
jmp
jmp
jmp
inc
shr
jmp
add
lea
push
jmp
je
test
je
mov
jmp
push
pushl
jmp
mov
sub
mov
jmp
push
call
jmp
mov
jmp
mov
cmp
je
jmp
incl
dec
jne
nop
nop
nop
nop
nop
jmp
mov
mov
push
jmp
pushl
add
pushl
jmp
pop
jmp
jmp
push
push
call
add
jmp
call
test
pop
jmp
add
cmp
jmp
jne
jmp
jne
nop
nop
nop
nop
nop
call
push
pop
jmp
cmp
nop
nop
nop
nop
nop
jne
lea
jmp
pop
pop
pop
nop
nop
nop
nop
nop
leave
ret
xor
jmp
nop
nop
nop
nop
nop
push
nop
nop
nop
nop
nop
call
test
pop
nop
nop
nop
nop
nop
je
mov
mov
nop
nop
nop
nop
nop
sub
mov
mov
incl
nop
nop
nop
nop
nop
dec
jne
jmp
sub
nop
nop
nop
nop
nop
jmp
dec
dec
mov
nop
nop
nop
nop
nop
shl
nop
nop
nop
nop
nop
movzbl
nop
nop
nop
nop
nop
add
incl
nop
nop
nop
nop
nop
mov
lea
push
call
nop
nop
nop
nop
nop
cmp
pop
nop
nop
nop
nop
nop
jb
inc
cmp
jb
nop
nop
nop
nop
nop
inc
cmp
jae
nop
nop
nop
nop
nop
inc
inc
test
je
nop
nop
nop
nop
nop
mov
mov
nop
nop
nop
nop
nop
sub
mov
nop
nop
nop
nop
nop
mov
incl
dec
jne
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
mov
mov
mov
nop
nop
nop
nop
nop
incl
incl
nop
nop
nop
nop
nop
xor
nop
nop
nop
nop
nop
cmpl
je
mov
pop
nop
nop
nop
nop
nop
sub
pop
pop
leave
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
add
add
and
add
add
add
inc
push
add
push
push
add
pusha
push
add
outsb
push
add
orb
add
add
add
push
add
xor
add
mov
push
add
test
add
test
add
and
add
add
add
inc
push
add
push
push
add
pusha
push
add
outsb
push
add
orb
add
add
add
inc
js
je
jb
arpl
jae
dec
inc
push
dec
inc
dec
xor
cs
insb
add
incl
inc
gs
gs
je
jo
imul
mov
push
popa
imul
inc
imul
add
xchg
add
jo
je
push
popa
addr16
add
addb
jb
outsb
jae
popa
je
dec
gs
popa
add
xchg
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
inc
push
xor
cs
insb
add
enter
pop
mov
jne
add
adc
adc
add
push
add
add
add
cld
fiaddl
add
add
add
add
inc
add
add
add
add
add
stos
leave
mov
lock
add
add
add
rolb
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
sbb
inc
xchg
xor
add
add
add
lock
add
add
add
add
jmp
sbb
xor
add
add
add
dec
or
test
push
jne
add
add
test
and
add
push
jne
outsb
or
dec
rolb
nop
add
add
jg
xchg
xor
xor
xor
xor
cmp
cmp
cmp
xor
aaa
sbb
movsl
xor
pop
cmp
push
int3
aaa
xlat
aaa
fwait
cmp
cmp
cmp
cmp
ds
cmp
cmp
cmp
cmp
mov
ss
lret
cmp
cmp
cmp
cmp
push
ss
in
xor
xor
xor
mov
xor
xor
add
add
bound
xor
add
add
and
dec
js
jb
insb
aaa
xor
or
or
pop
and
push
dec
jnp
jne
outsl
cmp
bound
mov
cmp
cld
add
mov
.byte
