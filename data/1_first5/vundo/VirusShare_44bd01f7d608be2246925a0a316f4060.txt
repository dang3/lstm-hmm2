add
add
jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
mov
cmpsb
flds
jmp
lods
cmpsl
mov
or
pop
add
add
push
add
cmp
xor
movb
add
mov
daa
add
xor
lods
add
lea
jg
movb
add
add
je
mov
ljmp
add
add
inc
add
sub
adc
stos
add
add
add
add
add
jg
or
add
outsb
add
add
add
add
imul
inc
add
add
add
add
lods
add
add
add
add
add
add
add
movb
add
add
add
add
xor
and
add
lods
add
cmp
fldl
movb
add
fldl
movb
add
add
push
add
lods
add
add
add
add
add
add
add
movb
add
add
add
add
ja
cmp
movb
add
add
add
add
add
cmpsb
add
add
lods
add
movb
push
iret
add
add
and
movb
add
add
movb
add
js
outsb
add
add
add
add
and
mov
add
add
add
pop
add
flds
outsb
add
add
mov
add
dec
add
add
add
add
inc
add
add
add
add
mov
add
add
out
add
add
add
add
outsb
add
add
outsb
add
sub
pop
add
add
add
add
add
add
mov
push
add
add
add
add
add
add
das
add
add
add
add
xor
fildl
popa
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
cmpsl
add
loopne
lea
push
add
add
push
pop
add
add
add
add
add
add
add
add
sbb
pop
add
add
push
add
add
add
add
add
outsb
add
inc
add
add
add
add
and
add
add
add
add
add
imul
add
add
add
add
push
add
outsb
add
jmp
lods
add
add
outsb
add
add
add
add
sub
loope
push
add
add
scas
add
add
add
add
add
outsb
add
add
add
add
sub
xor
add
pop
add
add
dec
add
add
add
xchg
add
lret
add
add
add
add
add
add
cmp
xchg
movb
add
add
sbb
add
add
add
add
add
add
add
std
add
add
add
add
lods
add
mov
add
add
std
add
add
add
add
inc
add
cmp
movb
add
xchg
add
add
movb
add
dec
add
add
add
add
add
add
add
add
add
add
std
add
add
incb
ltr
add
add
add
and
jle
mov
add
add
add
add
add
add
add
add
outsb
add
sahf
adc
dec
fwait
add
jae
mov
xchg
cmpsb
scas
loopne
cmpsb
in
sub
pusha
mov
icebp
test
pop
std
fisubrs
insb
adc
cmp
fwait
xchg
mov
mov
in
xor
orl
std
sbb
xchg
dec
mov
jno
aas
movsb
or
mov
mov
cmp
sub
xchg
movsl
cmp
aad
mov
adc
subl
ss
push
les
sti
mov
push
insb
adc
xchg
das
xchg
pop
jmp
stos
push
and
xchg
cmp
insl
mov
jbe
lods
pop
dec
xchg
sti
scas
dec
lahf
sub
js
lods
mov
fistl
loopne
setnp
mov
add
mov
push
jge
push
cs
imul
mov
push
cmpl
and
lock
rcll
mov
sbb
dec
jmp
xor
test
pop
hlt
mov
mov
rorl
or
pop
cmp
icebp
cwtl
addr16
les
push
cmp
sub
or
lahf
sbb
popf
jae
out
sbb
test
or
jle
jmp
jg
stos
jo
and
cmp
xor
es
in
xchg
mov
push
cwtl
mov
xchg
push
sub
dec
dec
arpl
or
xchg
pop
outsl
mov
test
push
and
and
arpl
test
jne
xchg
cmp
sahf
xor
jb
jbe,pt
push
nop
inc
xlat
and
fdiv
jns
pop
lret
insb
and
jo
imul
jbe
in
cmpsb
rcl
pop
mov
imul
push
rcrb
jb
inc
xorl
inc
jle
fwait
push
aaa
lcall
mov
icebp
mov
neg
lret
orl
push
out
cmp
add
shll
xchg
data16
or
push
mov
xor
loop
xchg
jns
pop
rcrb
jmp
cltd
lret
bound
sub
jge
scas
imul
imull
int3
pop
pop
cmp
sbb
push
xchg
shlb
push
sbbl
dec
imul
sbb
jbe
xlat
loope
and
adc
pop
std
mov
pop
jne
mov
add
pop
ja
cld
mov
push
mov
enter
stos
push
push
data16
out
and
jle
imull
and
insl
pop
mov
and
add
je
fidivrs
pop
pop
sub
or
pop
lcall
popf
cmp
push
dec
inc
mov
cmp
and
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
repnz
pop
lahf
cs
ds
outsl
xchg
stos
dec
mov
xchg
pop
sahf
movsbl
outsl
xor
dec
mov
scas
push
lahf
cs
decl
pop
fildll
push
outsl
mov
sahf
xor
or
pop
out
dec
gs
fcomps
mov
dec
out
jle
push
repz
dec
aas
mov
jns
outsb
int3
pop
popf
xor
decb
pop
fstpt
pop
je
stos
cmpsl
fucomi
int3
mov
adc
test
push
sub
sbb
jle
mov
clc
frstor
pop
adc
hlt
xchg
dec
cmpl
sbb
mov
ja
into
ja
sahf
cmpsl
stos
sahf
mull
loopne
icebp
inc
cmpb
cmp
push
xlat
push
loop
fidivrl
pop
adc
scas
int
sub
jl
sqrtps
mov
dec
adc
jecxz
rorl
add
pop
fwait
scas
xchg
loopne
or
mov
jae
icebp
scas
loope
pop
sub
jb
pop
lods
pop
push
ss
fst
into
push
js
aam
cmpsb
outsl
fwait
sbb
pop
xchg
mov
jecxz
decl
pop
fildll
in
int
mov
sbbb
jno
pop
imulb
int3
int
fnstenv
inc
loope
xchg
jmp
xor
sbb
out
dec
or
push
mov
mov
lcall
fcomps
push
xchg
sbb
or
pop
mov
jmp
cld
arpl
sub
pushf
out
inc
into
push
mov
outsb
iret
jle
mov
sahf
pop
scas
movsbl
outsl
ficomps
dec
mov
cs
decl
pop
fildll
jle
mov
sahf
pop
scas
movsbl
outsl
ficomps
dec
mov
push
rcl
mov
int3
mov
xchg
cmp
sub
sub
and
push
mov
and
icebp
jecxz
cmp
out
test
xor
inc
xorb
dec
movsl
fisttps
inc
jae
out
orb
xchg
outsb
lahf
jno
pop
mov
xchg
out
and
aad
sbb
pop
movsl
adc
fdecstp
or
inc
js
or
sub
jns
cltd
call
mov
and
adc
adc
xchg
pop
sbb
fwait
loopne
inc
cwtl
add
mov
out
shlb
dec
mov
push
pushw
addr16
sahf
push
sbbl
sub
int
add
icebp
lahf
jmp
sbb
rorb
sbb
hlt
mov
inc
lcall
dec
leave
mov
xlat
xor
xchg
pop
movsl
rcll
leave
stos
adc
push
mov
inc
cmp
test
sub
push
jg
les
movsb
out
xlat
loopne
or
vmovddup
mov
filds
jno
test
mov
in
and
test
push
jo
les
and
jne
mov
add
cltd
adc
mov
movsl
inc
mov
rclb
test
ret
inc
push
mov
mov
add
nop
lahf
out
xor
sahf
je
jnp
sbb
dec
in
adc
inc
dec
sbb
xchg
mov
jecxz
negb
vmread
sbb
inc
mov
pop
xor
lret
fnsave
add
dec
int
popf
sbbl
adc
mov
aas
fucomp
inc
and
xor
jmp
push
jg
fidivrl
mov
or
mov
in
pop
in
add
aas
sahf
xor
adc
pop
jae
ficoml
mov
not
push
pop
vpshlw
sbb
sbb
and
fwait
in
inc
enter
lods
xchg
push
push
aam
movsb
call
sahf
movsb
jnp
xchg
mov
jmp
push
repz
out
lret
int3
fdivs
sub
icebp
and
or
data16
pop
xchg
outsl
rcll
push
arpl
pop
sbb
subb
divb
jo
sub
sub
leave
cmp
rclb
push
mov
out
rcrb
xor
add
sbb
push
loopne
add
test
sbb
or
push
lahf
idiv
mov
call
into
pop
push
stos
fwait
inc
xor
imul
int
pop
mov
xor
xchg
and
cmpsl
cltd
push
mov
mov
mov
stos
add
ret
orb
imul
sbb
dec
adc
xchg
cld
or
fsub
jno
or
std
gs
popa
jl
scas
sub
data16
xchg
shl
mov
mov
and
or
jo
int3
in
or
push
data16
inc
movsb
jb
mov
mov
mov
jle
incb
mov
mov
int3
cld
outsb
shll
imul
cltd
mov
sbb
sti
and
mov
lret
jg
inc
insb
add
fcomi
push
shll
push
xor
fisubrl
pop
push
lods
or
mov
fbld
aad
sbb
push
in
in
fs
aaa
jmp
fstenv
addl
in
push
ljmp
pushf
mov
cmp
sub
mov
cmp
adc
daa
int3
sti
dec
imul
fisttps
mov
scas
lret
sub
pop
cli
xchg
and
pop
mov
nop
filds
sbb
scas
loope
mov
add
fdiv
pusha
mov
lods
sub
cs
enter
arpl
inc
mov
les
int
push
push
ret
fmuls
push
jp
sti
push
xlat
dec
jnp
adc
pusha
les
inc
push
cmp
or
jecxz
cmpsl
pop
inc
mov
xchg
fcomps
fwait
jae
pushf
xchg
pop
lahf
or
scas
sbb
faddl
mov
int3
cmc
lock
and
mov
jbe
aam
mov
inc
dec
pusha
mov
nop
mov
and
aaa
cmp
movsb
push
xchg
xchg
push
dec
xchg
push
js
xor
aad
mov
pop
dec
fstpt
pushf
cmpsl
xor
fsubrs
and
fbld
test
cltd
jns
mov
pushf
and
push
xchg
aam
and
lcall
scas
mov
into
enter
xchg
pop
or
xchg
loope
add
sbb
add
repnz
repnz
push
jbe
mov
push
sti
and
inc
mov
or
push
scas
out
es
jb
mov
dec
jmp
push
outsl
pop
push
andb
jle
jmp
ss
or
mov
movsb
aaa
jbe
mov
pop
xchg
stc
ja
rolb
mov
clc
ret
push
frstor
cmpsl
jae
loope
pop
insb
pop
ret
dec
sub
inc
sub
stos
rolb
mov
jmp
dec
xchg
fidivrl
lods
add
insb
push
in
jns
inc
dec
jno
mov
cmpsb
ret
lcall
mov
test
lock
sub
jmp
or
mov
push
dec
dec
bound
in
mov
movsb
push
repnz
pop
sub
xlat
ficoml
pop
loope
cmpsl
and
sub
ljmp
into
aad
jno
rcll
iret
and
inc
int
ss
sar
pop
push
and
jecxz
mov
dec
pusha
mov
dec
sti
dec
cmp
cmp
pop
mov
inc
xor
jmp
push
outsl
leave
and
outsl
inc
mov
mov
pop
mov
xor
pop
xchg
mov
jbe
push
xlat
or
xor
mov
call
cmc
sub
pop
icebp
xor
and
push
call
add
into
pop
inc
add
cltd
pop
push
adc
push
mov
xchg
scas
pop
dec
or
jmp
mov
or
mov
movsb
cltd
push
jbe
adc
push
sbb
and
in
in
je
jg
sub
lds
das
push
insl
int
shlb
push
mov
xlat
push
cltd
dec
jb
push
aam
es
scas
jg
sub
cmp
cwtl
or
jo
notb
inc
jnp
sar
sbb
cmpsl
xlat
aas
dec
mov
and
inc
or
or
dec
lods
mov
jb
xor
and
mov
cltd
cmp
mov
mov
xor
cld
ja
fs
sub
push
fmull
jmp
pop
inc
jo
xchg
movsl
call
test
sbb
mov
jbe
sub
dec
repnz
adc
ss
popf
jmp
mov
mov
mov
ret
insb
jb
aas
mov
add
sbb
pop
and
sbb
mov
xor
shl
add
pop
test
pop
sub
lret
pusha
or
ror
nop
aam
cmp
outsl
jns
bound
outsl
mov
fsubl
orb
fisttpl
adc
data16
jns
pop
orb
jb
sti
or
cwtl
sub
icebp
sub
cmp
xchg
mov
adc
test
xor
js
mov
and
idivb
push
mov
test
mov
push
in
fcomi
push
push
and
aas
mov
push
cwtl
out
daa
push
sbb
aam
adc
dec
sub
lret
or
in
jne
mov
frstor
or
and
jmp
mov
mov
gs
imul
sub
xchg
enter
xchg
xchg
in
xor
rorl
mov
rorb
xchg
xchg
aad
pop
and
iret
clc
pmaxsw
in
addb
aaa
push
test
xlat
pop
cld
mov
inc
lahf
inc
jge
cs
leave
xchg
cmp
sbb
or
sbb
mov
jp
and
insb
jne
sbb
and
adc
lock
fwait
ret
xor
fisttpll
sub
imul
jge
jge
int3
sahf
loopne
adc
stos
lods
or
mov
inc
xchg
and
subl
insl
int
data16
mov
test
andl
out
fwait
iret
mov
cs
inc
add
outsb
ss
or
shrl
cmp
jno
inc
xchg
mov
fdivp
fbstp
insl
ds
dec
cltd
icebp
and
loop
aad
fdiv
pop
add
icebp
mov
push
sub
cmc
ds
mov
xchg
shll
int3
test
dec
insl
or
decl
rcrl
dec
mov
sub
scas
lods
bound
sub
pop
sub
jg
orl
ror
repnz
add
mov
push
mov
xchg
test
pushf
push
movsl
das
or
mov
sub
mov
push
shr
nop
stos
jno
je
or
xor
push
es
popa
fadd
xchg
inc
push
pushf
icebp
cli
jmp
gs
add
loop
mov
in
fmull
xor
ja
sub
jbe
mov
fisttpll
inc
es
test
cli
scas
mov
mov
mov
cltd
ds
std
in
out
in
dec
xchg
push
loope
jmp
insl
popf
jl
push
out
ret
xchg
mov
fnstcw
ljmp
sub
jmp
pop
arpl
jns
fs
pop
adc
add
shrb
insb
into
bound
ret
inc
pop
xchg
fwait
jecxz
addl
adc
inc
cmp
shlb
ljmp
cmc
cwtl
std
and
xchg
and
push
push
sbb
jmp
push
push
mov
lods
out
mov
sub
mov
dec
loopne
and
mov
or
sbb
inc
inc
cmp
pop
mov
lds
jg
adc
push
std
cltd
push
add
mov
pop
jle
xor
xchg
pop
inc
inc
sbb
outsb
and
arpl
cmp
repnz
lea
leave
loop
ret
rorl
shrb
jecxz
and
int
cmp
xor
dec
negl
cmp
leave
mov
insl
insl
pusha
add
adc
jg
lahf
stos
and
stc
cmp
pop
in
clc
xor
mov
cmp
sahf
and
in
inc
cmc
or
jp
inc
sbb
bound
xor
adc
add
cwtl
jo
int3
cmp
iret
jp
mov
xlat
sahf
and
pop
mov
call
rcr
jo
adc
repnz
rorl
mov
pushf
test
lods
xor
rol
mov
popa
or
mov
inc
pop
inc
pop
mov
mov
stos
aaa
push
dec
mulb
fbld
and
cwtl
push
scas
popf
sbb
adc
insb
std
loope
idiv
sbb
scas
push
fs
mov
test
test
lock
mov
or
adc
pop
cld
movsb
pop
loopne
js
inc
into
insl
dec
pop
add
cltd
mov
roll
outsb
enter
sahf
mov
cmp
shl
dec
add
cmp
xor
jge
pop
pop
jne
leave
sbb
in
mov
dec
sahf
pop
cltd
dec
rol
cmp
or
addr16
mov
cwtl
dec
out
nop
shll
inc
lret
add
mov
sub
sub
mov
cmp
dec
dec
cli
lcall
mov
scas
loop
push
pop
fadd
push
push
sahf
jge
xchg
sbb
push
lock
int3
xor
jo
iret
iret
xor
mov
es
cld
je
sub
and
pop
and
test
inc
movsb
ret
mov
movsb
xlat
and
jecxz
push
push
inc
cmp
fsin
push
jmp
leave
mov
adc
jg
repz
dec
clc
fcompl
clc
fiadds
and
repnz
mov
push
movsb
in
sub
push
int
imul
out
adc
xlat
test
adc
nop
ljmp
cwtl
and
mov
mov
pop
xor
outsb
mov
ds
movsb
notl
iret
leave
add
cltd
sub
popf
jmp
cmp
cltd
mov
inc
mov
pop
xchg
and
iret
inc
xchg
rcll
arpl
mov
movsl
sbb
faddl
addb
or
jne
imul
stos
fs
add
jbe
pusha
and
das
cmp
std
mov
in
mov
jecxz
mov
adc
test
push
sbb
lds
and
inc
sub
les
je
adc
enter
js
add
mov
inc
scas
dec
adc
pop
dec
cmp
les
add
nop
dec
jbe
or
sti
out
nop
push
jl
xchg
cs
dec
add
cld
jmp
les
cmpsl
gs
cwtl
push
sub
xor
clc
adc
push
mov
stos
sbb
mov
bnd
add
push
out
out
xchg
pop
adc
pop
add
popf
jns
or
mov
call
inc
pop
mov
nop
jo
dec
xor
fidivl
iret
mov
ds
pop
cmp
add
and
inc
outsl
mov
aam
loope
ret
mov
shll
lock
stos
mov
cmpsl
mov
inc
xor
xchg
pop
sti
or
lcall
sarl
mov
jbe
das
aas
dec
inc
xor
jle
call
imul
xorl
sbb
cmp
ffreep
notl
mov
or
cld
fildl
sbb
les
outsb
mov
cmp
xchg
sub
mov
adc
stc
insl
or
lds
fld
dec
push
bound
lea
pminub
pop
xorl
cmp
sbb
pusha
daa
xchg
dec
push
sarl
loopne
rorb
adc
out
fsincos
ds
cmp
push
gs
push
call
popa
test
pop
mov
insl
fisubrl
ja
aaa
and
addl
xorb
fsts
add
dec
sbb
mov
inc
mov
push
jb
icebp
lret
sub
dec
out
arpl
add
adc
std
lahf
cmc
mov
mov
rolb
xchg
es
inc
sti
out
inc
sub
adc
insl
mov
pop
lret
mov
imull
mov
mov
cs
mov
mov
jp
imul
xorb
and
iret
loopne
mov
dec
xchg
lods
mov
pop
mov
push
adc
fucomip
inc
xor
icebp
jl
mov
aas
rclb
lods
push
add
jle
jns
mov
mov
mov
movsb
mov
mov
push
sub
pop
xor
negl
xor
dec
add
sbb
sbb
mov
test
int3
lret
popf
push
pop
imul
sub
inc
pop
add
test
mov
imul
mov
clc
pop
xor
sbb
xor
orl
jo
shl
mov
cmc
int
cmp
ljmp
ja
push
in
mov
xchg
sbb
or
or
aaa
data16
int3
dec
push
mov
pop
add
push
and
jne
cmp
scas
jno
lea
xor
rcrl
sub
mov
inc
pop
aas
cs
xchg
mov
lahf
xor
dec
jecxz
jns
repnz
mov
mov
lods
clc
sub
push
clc
push
movsb
mov
mov
cld
pusha
std
or
loop
adc
loop
sbb
dec
mov
lret
ss
add
adc
scas
push
lods
mov
adc
or
aaa
pop
pop
adc
cmp
fcompl
lea
mov
movsl
arpl
or
repz
frstor
adc
mov
retw
outsb
pop
push
data16
sti
popa
inc
stos
xlat
int3
outsl
sbb
cmp
mov
mov
xor
fisubl
jbe
insl
sub
mov
mov
and
and
les
dec
into
cmp
mov
orb
inc
or
cmpsb
movsl
jnp
mov
shrb
sub
jg
leave
lods
repnz
out
jae
cli
lods
aas
xchg
adc
insl
mov
adc
in
imul
icebp
mov
ljmp
in
or
mov
jbe
mov
xor
jno
mov
rolb
mov
adc
xor
test
xchg
pop
mov
xorl
pop
fistl
mov
gs
imul
xchg
adc
in
sub
cltd
fwait
lds
je
insl
jp
xchg
add
mov
xchg
inc
xchg
and
pop
mov
xchg
mov
adc
mov
lahf
lds
cli
sbb
insb
jp
sbb
lret
daa
stc
xchg
int
ret
xchg
cmpsl
jb
iret
aaa
mov
mov
jnp
lret
cltd
les
mov
jo
cmp
mov
or
jge
fwait
pop
addr16
adc
aaa
lds
xor
xor
jo
and
mov
stos
pop
test
xlat
cmpsl
xchg
bound
and
lahf
push
cld
outsb
aaa
jge
cwtl
jo
sub
mov
push
shl
sbb
cli
jne
stos
popa
call
mov
mov
insb
ret
xchg
add
sbb
jno
lock
arpl
mov
mov
bnd
lds
out
nop
jbe
mov
add
filds
loop
push
cli
lahf
mov
mov
les
sub
out
xor
pop
jecxz
jl
pushf
fidivrl
add
fcmovnu
stos
add
js
imull
je
sub
daa
jecxz
sub
pop
sub
shlb
fildll
xchg
and
lds
xor
ss
pushf
pop
jae
xlat
lret
inc
cld
aam
js
dec
sbb
mov
aam
cmp
cli
bound
cli
xor
push
sub
scas
lcall
insb
outsb
jae
rcll
dec
shlb
lods
inc
pop
mov
and
push
sbb
lcall
je
dec
scas
mov
or
scas
push
cmp
mov
mov
loope
stos
dec
cmp
popa
pop
pop
ljmp
xor
imul
jb
push
lods
pop
sbb
fcmovbe
aaa
or
sub
inc
repz
gs
pop
cmp
aaa
pop
mov
jno
sahf
shl
add
daa
jge
test
cmp
jbe
push
push
jmp
in
and
lret
push
and
mov
in
mov
xor
inc
push
mov
es
loope
mov
movsb
mov
push
std
sbb
xor
arpl
in
mov
testb
jns
sti
dec
jae
dec
loopne
fstpl
rolb
mov
xor
or
sub
dec
icebp
scas
jae
mov
push
push
dec
fs
jae
lret
and
xchg
or
sub
inc
repz
jbe
insl
dec
mov
fcomp
and
mov
xor
mov
pop
adc
cmpsb
xchg
xchg
scas
push
sbb
mov
std
inc
mov
mov
jae
inc
xchg
test
add
inc
inc
jecxz
out
jl
ds
stc
xor
sbb
xor
mov
out
add
rol
sub
xor
jns
mov
popl
xlat
vmwrite
rclb
mov
into
mov
lcall
arpl
jg
ds
rorl
xor
popa
lret
stos
loope
cwtl
push
dec
nop
cltd
orl
sti
adc
jno
in
inc
movsb
cltd
imul
jo
insl
insl
mov
sub
movsl
and
lea
js
int
sbb
mov
xor
mov
or
xchg
sub
ret
addb
ss
dec
test
or
insl
xchg
ds
fidivrl
call
jae
pop
cmp
or
out
test
xchg
push
mov
xchg
mov
ss
shll
mov
clc
ss
pop
or
xor
pusha
clc
shlb
push
mov
fcomp
cwtl
xchg
cmp
and
xor
mov
mov
pop
sahf
add
xchg
sarl
sub
cmpsb
inc
rcrl
and
push
add
adc
leave
and
add
ss
jnp
jmp
sub
mov
add
lock
cwtl
sbb
ljmp
test
xchg
and
or
sub
loope
mov
imul
and
js
or
scas
lods
addr16
inc
jns
or
ss
push
imul
mov
xchg
addr16
or
and
rcr
ret
sti
lret
add
xlat
or
mov
cmpsl
cwtl
sahf
movsl
fwait
add
adc
scas
out
ret
cmp
stc
shrl
inc
mov
cmp
or
push
push
add
js
adc
inc
sub
inc
sbb
xchg
imul
andb
mov
mov
jp
xor
rcll
lods
pop
dec
add
dec
add
sbb
adc
mov
push
arpl
lock
cmp
not
sbb
push
add
outsl
mov
decl
pop
fildll
jle
mov
sahf
pop
scas
movsbl
outsl
ficomps
dec
mov
cs
decl
pop
fildll
jle
mov
sahf
pop
scas
movsbl
outsl
ficomps
dec
mov
ss
cmp
dec
jmp
fildll
jle
das
lcall
jbe
pop
out
sbb
lret
decl
pop
fucomip
dec
mov
mov
bswap
or
mov
mov
cltd
xchg
mov
pushf
leave
mov
fmulp
and
adc
arpl
push
mov
cltd
xchg
mov
stc
repz
xor
xor
add
sbb
imul
stos
test
cli
stc
jmp
fcmovnu
ror
cmp
adc
pop
jl
arpl
sbb
pop
cmp
ds
flds
inc
repz
add
adc
movsl
mov
dec
inc
imul
sbb
cmpsb
bound
sti
repz
add
jmp
inc
inc
cmpsb
sub
jmp
in
sbb
imul
pop
test
aad
and
or
sub
pop
sahf
mulb
push
inc
aam
test
mov
jmp
test
xor
ss
mov
push
dec
repz
push
push
data16
sbb
jmp
mov
cmc
cmp
out
or
xor
dec
loopne
mov
sbb
icebp
bound
push
fildl
cmp
mulb
push
push
mov
mov
xchg
mov
stc
jecxz
ret
fxch
leave
cmp
sub
sbb
or
jnp
imul
push
bswap
mov
out
nop
mov
sarl
jo
ja
arpl
ds
aad
jecxz
mov
and
pop
push
pop
add
pop
arpl
pushl
clc
out
cld
sti
icebp
stos
lret
repz
and
xor
add
adc
arpl
imul
mov
sbbl
jmp
and
xor
add
adc
arpl
imul
pushf
cmpl
xchg
mov
xchg
xchg
jb
pop
add
dec
loopne
in
push
dec
adc
fstps
jbe
mov
add
xchg
cmp
ja
jg
adcb
cli
cli
jge
sahf
sti
pusha
pop
ret
outsl
arpl
jp
aaa
loopne
fcmovnu
arpl
scas
xchg
imul
addr16
incb
out
dec
ret
cmp
dec
xchg
fcomi
icebp
stc
xchg
mov
out
repnz
popf
test
sarb
lods
btc
andl
mov
cmp
xor
ss
pusha
push
test
or
jg
in
inc
pop
jl
sub
cmpl
jbe
jge
cmp
push
loop
lcall
push
popa
das
pop
jp
sub
jecxz
push
jbe
jecxz
ds
sti
mov
shll
aas
rep
adc
cmp
shld
cmpsb
pop
inc
enter
inc
push
and
sbb
xchg
add
and
add
xor
outsb
adc
or
fucom
cwtl
inc
cwtl
pop
jecxz
lds
in
out
xchg
je
xchg
pop
or
lea
and
jge
push
xor
stos
insl
adc
pop
cmpsl
push
ret
dec
jae
mov
shrb
clc
jg
fwait
push
inc
or
outsb
sarl
aas
fdivrp
mov
sbb
adc
adc
jle
sahf
sbb
js
je
cmp
fs
jo
cwtl
shlb
and
sub
cli
or
adc
scas
push
out
dec
sbb
in
xor
jge
adc
pop
das
dec
jge
dec
cli
out
fnstenv
push
test
movsl
scas
leave
push
add
xor
dec
lret
pop
ljmp
mov
insl
shll
sub
mov
test
les
mov
rcll
pushf
dec
fdivrp
std
or
dec
ret
in
cmp
enter
mov
fisttps
mov
out
adc
lods
push
add
inc
insl
dec
xchg
insb
lea
push
loope
jns
ficomps
jg
push
aas
and
xor
clc
shl
dec
jle
mov
repnz
test
call
jns
mov
ds
xchg
insl
cwtl
mov
jno
mov
mov
lock
ja
fdivrl
in
bound
jl
sbb
ret
mov
add
dec
sarb
test
adc
add
pop
xor
sub
push
stos
inc
int3
push
jg
jge
push
or
mov
and
add
xchg
push
std
or
jecxz
cmp
sub
ret
lret
or
movsl
jecxz
mov
movzwl
aam
jl
jno
lods
and
xchg
push
add
rcrl
or
inc
jmp
mov
cld
mov
lcall
add
xor
dec
into
push
testl
add
sub
add
xor
ds
mov
mov
jl
mov
mov
iret
test
gs
xchg
xchg
in
movsb
mov
and
jge
mov
inc
cld
jecxz
cmp
call
std
or
jo
add
out
arpl
xchg
mov
mov
cmp
fdivs
pop
scas
adc
ss
mov
inc
sub
pop
fsubl
cli
xchg
cwtl
cld
incl
lret
fsubl
popf
insb
pop
pop
mov
mov
insl
or
xor
decb
in
and
ror
enter
mov
push
sub
stc
push
out
sbb
addb
repnz
sub
test
mov
imul
jns
ja
push
pop
inc
outsl
sbb
in
enter
and
ficoms
call
add
or
push
jp
sub
test
aas
adc
lds
out
cltd
leave
mov
mov
sub
repz
mov
and
jle
out
jnp
mov
and
es
pop
pop
jecxz
push
dec
stc
je
idivb
or
adc
imul
sub
dec
cmp
inc
fisttps
jne
adcl
jecxz
into
rolb
push
out
adc
andl
mov
pop
in
rorb
push
dec
loope
enter
test
shlb
jns
add
mov
or
add
sub
xchg
aam
xor
mov
stc
cmc
insl
xchg
fidivrl
push
leave
in
mov
inc
inc
mov
mov
cmp
dec
push
mov
ds
movsl
icebp
insb
and
cmp
pop
cmpsl
pop
in
sub
out
and
stos
sub
ljmp
sub
cmpsl
clc
nop
lret
ficompl
pop
sub
sarb
inc
jmp
iret
rol
test
inc
inc
insl
scas
sub
sbb
lcall
jno
stos
xchg
adc
mov
pop
stos
add
pop
sbb
addb
int3
push
push
add
addr16
sub
sub
xchg
lods
sbb
scas
xchg
pop
fcomi
fsubs
daa
in
mov
cwtl
mov
adc
ficomps
cmp
jbe
shr
sub
xor
jo
aad
call
dec
outsb
adc
mov
arpl
sub
fsubrl
xchg
and
adc
mov
call
mov
insl
jbe
sbb
mov
inc
dec
and
or
fnclex
inc
push
scas
stos
mov
pop
int
pop
xor
mov
xchg
push
int
inc
push
sar
enter
dec
stos
xchg
mov
ds
mov
test
pop
pop
les
add
xchg
pop
add
pushf
mov
fildll
push
mov
rcl
orl
dec
sbbl
mov
mov
iret
shll
jmp
mov
out
pop
and
cmpsl
cmp
pop
ljmp
popa
testb
xlat
jb
leave
and
loopne
push
fistpll
jns
ljmp
enter
call
std
pushf
out
push
into
cld
cmp
outsl
lods
enter
clc
push
ss
xor
mov
xchg
jne
inc
lret
mov
test
dec
loopne
in
mov
mov
mov
sub
push
int3
or
loope
pop
mov
arpl
clc
and
lods
pop
add
push
push
negb
pop
test
dec
lods
fs
mov
hlt
add
cs
fxch
addr16
jle
lcall
fisubrs
mov
pop
pop
pusha
xchg
scas
push
lret
sbb
sbb
adc
dec
fistps
gs
adc
add
push
mov
pop
jle
inc
cmp
imul
ror
mov
dec
or
loop
add
lea
cld
add
movntq
or
mov
mov
and
pop
mov
mov
sbb
sub
or
int
mov
daa
sub
stos
in
dec
push
xchg
jbe
repz
pop
scas
mov
outsl
ljmp
mov
je
jge
mov
mov
jl
cmpsl
xor
jns
mov
push
cmp
or
xchg
ret
daa
sbb
rolb
push
and
shl
test
dec
leave
cmc
jno
gs
cld
bound
out
in
jle
std
inc
stos
std
mov
mov
xchg
cmp
cmp
sbb
pop
in
addr16
insl
cmp
and
cmp
imul
lock
mov
or
inc
movsb
sbbl
pop
push
push
or
cmp
xor
dec
lods
loopne
add
jne
jo
popf
pop
cmp
ret
jnp
adc
decb
stc
adc
aaa
mov
sbbb
shrb
pop
jne
jo
mov
mov
scas
cmpsl
loopne
test
xchg
jmp
roll
jmp
or
dec
xchg
adc
insb
in
mov
pop
fidivl
xor
cmpb
aaa
mov
bound
add
outsb
xor
popa
insl
inc
outsb
stos
pop
cli
and
movsl
mov
add
test
xchg
shlb
adc
jbe
dec
hlt
push
faddl
or
outsl
push
dec
push
jmp
inc
and
ficoml
pop
push
adc
pop
std
ljmp
in
adc
jb
daa
fldenv
add
popf
arpl
xorl
popf
sub
lcall
dec
pop
imul
out
fwait
pop
inc
in
imul
les
in
negb
push
out
das
add
adc
cmp
and
mov
test
xchg
lds
ror
in
lcall
punpckhwd
jno
push
jle
lea
jp
jp
sbb
mov
and
mov
mov
jb
movsl
and
lret
mov
cld
dec
or
outsb
idivb
fadds
xchg
add
push
mov
and
addb
inc
stos
inc
loope
aam
inc
ret
sub
out
mov
ljmp
jle
vhaddps
test
add
fistpll
push
addr16
sbb
xchg
sub
cli
pop
cmpsb
xor
aad
test
inc
mov
lock
jecxz
sub
mov
pop
aaa
test
bndstx
push
movsl
add
mov
mov
pop
gs
insb
mov
rcll
mov
pop
and
push
mov
or
add
inc
adc
addr16
mov
in
pop
add
mov
repz
xor
in
xor
push
fimuls
mov
in
lods
cltd
int3
addr16
xchg
fcoml
bound
out
xchg
not
icebp
mov
mov
or
mov
mov
push
adc
out
push
pop
push
popf
lock
loope
push
pop
lds
aaa
int
xlat
mov
insb
dec
arpl
push
pop
mov
ljmp
mov
pop
std
fcompl
fidivl
dec
mov
movsl
outsb
rol
add
inc
pop
jmp
dec
fmul
int
cmpsl
pushl
imul
adc
je
or
pop
scas
xlat
jecxz
push
pop
sbb
divl
movsb
inc
jae
shrl
mov
test
lods
inc
xchg
cmp
out
add
sub
out
cmpsb
jmp
jg
sub
lret
xchg
rcr
or
movsb
test
out
mov
mov
ret
lods
fwait
push
lret
add
pop
jo
lods
dec
xchg
mov
fs
arpl
cmp
sub
xchg
xchg
jo
sub
dec
mov
and
mov
mov
and
out
or
stos
push
std
sub
out
lea
sahf
cltd
lods
mov
pop
in
dec
shll
cli
cmp
sbb
sbb
in
les
popf
pop
ja
push
pusha
insl
mov
aam
mov
dec
mov
inc
mov
imul
jle
or
fsubp
mov
lea
scas
pop
push
add
xor
shll
lret
jno
push
mov
xchg
add
push
popf
out
scas
mov
cmp
movsl
mov
iret
jne
cli
movsb
push
scas
sahf
or
bt
xlat
out
jne
idiv
jg
mov
cmp
rorb
out
test
mov
mov
ficompl
and
ret
scas
lods
pop
jge
imul
or
cwtl
rcrl
add
mov
mov
inc
jae
xor
fwait
jp
fs
lods
mov
shl
lret
mov
cltd
cld
or
insb
add
es
push
xor
xor
mov
sbbb
inc
sub
and
insl
xor
shll
dec
testb
xchg
inc
dec
and
xchg
sbb
adc
in
out
cmp
icebp
repnz
in
mull
popf
sub
andl
mov
data16
andb
push
rcrl
cwtl
sub
dec
and
pop
xor
cmp
mov
out
dec
jo
jns
cmp
mov
jns
push
jnp
loopne
mov
pop
clc
push
popf
xchg
push
mov
inc
adc
push
xchg
inc
jae
push
mov
xor
dec
push
stc
out
adc
lcall
xor
negl
test
mov
push
repz
scas
mov
jle
orb
rcrl
mov
jb
out
mov
cmpb
sub
mov
rcrb
and
add
test
xchg
jo
sbb
and
mov
outsl
push
xchg
push
fildll
lcall
pop
dec
push
addb
rcl
sub
mov
fimull
int3
incw
push
add
cmpsl
xchg
lret
aad
xchg
mov
sub
js
es
xchg
pop
cli
fwait
and
push
sub
outsb
repnz
movsl
hlt
cmpl
lret
mov
lds
mov
sbb
mov
mov
stos
loopne
pop
popf
sub
fadd
and
je
mov
jb
aad
pop
hlt
cmp
roll
in
pop
sbb
push
inc
dec
push
xchg
and
hlt
mov
lcall
cltd
outsb
dec
dec
ror
fistps
imul
insb
jnp
inc
fmull
mov
jecxz
test
or
test
mov
movsb
fs
shrl
stc
xchg
popf
sub
add
push
test
loope
int
push
mov
inc
xchg
popa
das
popf
adc
jecxz
dec
sub
dec
shrb
lss
add
push
test
push
lods
or
in
jo
mov
pop
out
mov
cmp
sbb
push
iret
adcb
jle
push
add
dec
add
jle
xor
fistpll
dec
vmulps
rcrb
sbb
loopne
xchg
sbb
cmpb
or
mov
imul
adc
mov
pop
pop
push
ljmp
popa
popf
push
sti
jl
daa
cld
mov
icebp
cmp
insl
sub
push
inc
xlat
in
loop
mov
jg
imul
in
mov
adc
in
jnp
inc
xchg
aaa
xchg
or
dec
sub
call
add
ror
push
jbe
sub
jp
rcll
add
cld
jle
jl
sbbb
mov
leave
xchg
cmc
sbb
flds
jno
mov
popa
mov
sub
les
dec
mov
inc
add
xchg
sbb
mov
les
and
cs
lock
pop
daa
adc
int3
mov
cmp
mov
cwtl
push
add
inc
es
data16
imul
cltd
inc
pop
sar
aas
lds
xchg
pop
cli
sahf
inc
aas
test
lods
push
lods
mov
adc
jecxz
sub
hlt
xchg
dec
test
pop
inc
jle
aas
pop
sbb
push
outsl
imulb
mov
dec
push
mov
fs
mov
xchg
xor
or
aad
sub
fldt
add
add
fisubl
mov
jne
loop
loopne
mov
xor
mov
add
aas
icebp
mov
inc
loopne
fisubs
push
movsb
rcrl
and
lds
rcrl
mov
hlt
ret
dec
pcmpgtb
cmpsb
sbb
pop
pop
cmc
and
popf
stc
sahf
inc
out
call
mov
lea
xchg
xor
pop
mov
and
outsb
or
mov
aaa
and
and
mov
xor
lret
mov
mov
and
adc
adc
out
add
int3
scas
mov
stc
lods
add
push
xchg
jle
push
jl
xchg
lcall
or
mov
pop
dec
out
dec
mov
popf
shr
je
mov
cld
mov
push
sbb
cmpb
inc
in
sub
push
adc
divb
sbb
mov
jmp
fldl
lods
leave
cld
sbb
dec
sbb
fdiv
lock
fs
add
push
lods
out
mov
rorb
jp
into
int3
sub
fimull
pop
cli
out
cmpsl
push
push
xor
mov
test
cmpl
xor
inc
cmc
jo
in
stos
enter
negb
hlt
outsb
push
icebp
mov
arpl
and
xchg
pop
push
test
mov
pop
sub
popa
and
and
mov
cli
shrl
lretw
insb
jp
jle
mov
sub
ja
adc
leave
call
cmp
and
data16
es
add
popa
pop
xor
scas
sbb
mov
dec
ss
ljmp
imul
xchg
and
xchg
cmc
inc
scas
mov
pop
mov
or
cld
int3
sbb
mov
push
aas
fisttpl
mov
sub
cli
mov
pop
imul
mov
dec
inc
ljmp
lret
scas
adc
ja
mov
adc
enter
jl
lods
lods
xor
xchg
mov
lea
or
std
imul
out
das
insl
xchg
mov
xor
sub
mov
jno
mov
out
sub
jp
adc
push
mov
cs
mov
fwait
mov
outsl
dec
sbb
push
std
xchg
fstps
jecxz
ja
popf
aaa
daa
inc
insb
rol
lahf
cld
jae
or
popf
xor
pop
js
fstpl
rorb
xor
mov
cmpsl
mov
mov
fdivs
dec
rcr
aad
stos
data16
sbb
ljmp
adc
jae
dec
pop
lret
cmp
cld
ljmp
inc
mov
dec
out
addb
es
cmc
repz
enter
lds
jle
lds
xchg
xchg
push
inc
mov
push
dec
mov
xchg
add
and
cmp
stos
lock
jbe
fwait
xchg
jnp
loop
cli
movsb
cltd
lea
and
movsb
cmp
inc
mov
iret
jo
push
inc
push
jecxz
xor
int
pop
out
filds
sbbl
jmp
nop
add
inc
push
mov
mov
shr
lahf
sub
roll
adc
lea
gs
inc
insl
roll
sarl
jae
jecxz
adc
pop
inc
push
loopne
mov
sti
pop
push
push
sbb
push
fiaddl
das
insl
rcrb
sbb
mov
in
ds
mov
mov
cs
adc
xchg
adc
sub
sahf
orb
mov
pop
icebp
arpl
pop
enter
inc
and
imul
push
pusha
mov
jge
adc
pop
popf
push
xchg
mov
je
pop
jbe
mov
aaa
pop
mov
or
xor
xlat
pop
cmp
mov
stc
mov
shlb
pushf
jle
scas
repz
fsqrt
mov
das
scas
jns
mov
mov
movsl
shll
fsubs
mov
test
loop
mov
adc
lret
stc
push
loope
add
mov
xchg
pop
lea
jmp
or
imul
loop
push
ficomps
imul
inc
xchg
aam
dec
imul
stos
cmc
aas
cmpsb
inc
jne
fistpll
pop
push
add
mov
xchg
test
popf
or
ljmp
dec
hlt
jl
out
or
push
mov
repz
sub
lret
sub
inc
pop
lock
movsl
cwtl
call
sub
ret
and
loop
sbb
push
push
lahf
cld
push
jge
cld
jo
lcall
dec
aaa
pop
insb
imul
sub
push
in
xchg
adc
ret
popf
in
das
sub
add
inc
xchg
bound
lret
lret
insb
mov
sub
iret
cmp
roll
gs
in
jnp
std
sub
and
push
push
mov
xlat
jo
outsl
sbb
inc
out
loopne
mov
fnstsw
mov
out
imul
aad
divb
cmp
add
icebp
in
inc
dec
mov
loop
sub
imul
bndstx
arpl
repnz
mov
fiaddl
mov
inc
jae
setnp
hlt
cmp
pop
mov
mov
js
push
int3
repnz
mov
jns
dec
or
mov
stos
rep
push
cmp
adc
dec
mov
add
push
rorb
scas
adc
xchg
push
scas
mov
pmullw
adc
cld
fistl
and
subb
jns
pushw
imul
push
dec
hlt
and
movsl
aad
or
push
mov
sarl
cs
outsb
jns
je
aad
xor
imul
flds
outsb
jl
inc
leave
sbb
mov
mov
xchg
jle
mov
insl
or
lds
addl
jns
subb
cmp
out
xor
ret
outsl
mov
popa
icebp
imul
cli
into
sub
jns
sbb
or
or
out
dec
or
enter
mov
push
mov
sub
push
lret
dec
outsl
push
pop
pop
je
lret
imul
mov
pop
xor
push
pop
jne
lods
das
stc
or
cmp
or
std
sub
jbe
lahf
in
stos
sbbl
add
push
adc
push
ficoml
mov
push
sbb
xchg
sbb
test
jecxz
repz
and
xor
add
adc
arpl
imul
mov
sbbl
jmp
and
xor
add
adc
arpl
imul
mov
sbbl
jmp
and
xor
add
adc
arpl
imul
mov
sbbb
jmp
fdivrl
int3
subl
sti
xchg
mov
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
push
cmpsb
pop
mov
xchg
stos
outsl
xchg
or
push
mov
ss
push
fcoml
mov
jbe
inc
mov
mov
xchg
out
imulb
cmp
fdivl
mov
ds
mov
popf
jbe
inc
mov
mov
xchg
out
divb
sub
int3
xlat
adc
mov
sub
and
and
adc
pop
dec
lds
lds
and
and
movsb
int
or
ds
fisubrl
out
jae
into
cmc
faddl
adc
jb
lretw
mov
shll
nop
inc
out
sbb
or
and
jae
fnstenv
ret
jnp
pushf
jecxz
xchg
mov
or
les
leave
in
andb
in
dec
push
push
lods
shlb
sbb
jg
lods
sub
fldenv
jp
stc
cld
adc
xor
inc
test
and
xchg
icebp
mov
xchg
ds
into
pop
xchg
xor
and
std
add
and
mov
imul
and
ss
push
in
xchg
data16
inc
movsl
aas
aas
mov
sbb
adcb
pop
fdivl
sahf
arpl
adc
aas
fstps
dec
ret
pop
rorl
jecxz
xchg
js
jb
inc
scas
jns
into
insl
fmull
push
mov
or
ja
adc
or
jl
je
sbb
sub
cmp
int3
fdivl
in
push
cld
push
mov
jbe
inc
mov
mov
xchg
out
imulb
cmp
int3
fdivl
in
push
cld
push
mov
jbe
inc
mov
fidivs
xchg
add
aas
adc
outsb
gs
jb
sub
in
cltd
xor
imul
mov
mov
xchg
jns
shl
in
dec
add
mov
mov
mov
sub
pushf
sbb
cmp
in
cmp
psubsb
mov
adc
nop
xchg
add
gs
fsubrs
pop
pusha
pop
enter
dec
mov
or
xchg
jl
push
jecxz
xchg
push
sbbl
inc
mov
and
sbb
fsubr
pop
in
mov
dec
test
lods
sbb
fs
xchg
outsb
mov
jmp
insb
jns
xchg
mov
xchg
xchg
xor
push
mov
dec
jge
mov
in
cmpsl
adc
cld
data16
stos
clc
xor
out
lock
mov
jns
gs
popf
imul
mov
push
daa
sahf
xchg
jnp
popl
jns
push
jge
xor
add
sub
push
cmpsb
cmp
mov
mov
leave
imul
icebp
mov
negb
mov
xchg
cwtl
aad
push
cmpb
movsl
sarl
mov
jg
dec
sti
je
push
sbb
aas
cs
jecxz
cli
or
cmp
jmp
xor
cmp
cwtl
cs
add
arpl
xchg
sbb
push
iret
sub
lods
cmp
mov
pop
stos
jns
xchg
int3
mov
inc
test
dec
jnp
fwait
into
xchg
sti
ljmp
mov
adc
popf
aaa
fdivr
aas
adc
mov
scas
xchg
ret
jb
mov
ret
sbb
jbe
orb
repnz
sub
cmc
idivb
stos
lret
data16
popf
icebp
xchg
fdivr
sub
hlt
andb
aam
add
sbb
test
jns
lret
subb
cld
mov
inc
fistl
lcall
push
xchg
add
pop
mov
loop
cltd
jnp
pop
cmp
push
push
pop
inc
jmp
out
fcompl
sahf
sbb
out
loope
into
mov
sbb
mov
pop
add
mov
cmp
gs
ja
push
jnp
or
int3
nop
mov
cmp
sarb
in
aad
imul
cmc
mov
arpl
in
das
push
shl
jmp
rorl
loopne
insb
inc
ljmp
push
fsubr
cs
adcl
in
add
flds
aad
mul
inc
pop
ja
cltd
enter
lods
aas
fidivrl
add
pushl
repnz
sub
je
add
xor
adc
cmpb
pop
sarl
cmp
inc
or
sbb
lods
dec
add
jg
pop
gs
insl
cmp
xor
sti
fstl
scas
mov
cmpsl
adc
mul
push
int
mov
pop
cmp
mov
inc
fcoms
pusha
jecxz
inc
subb
pop
out
std
in
xor
stc
xor
push
lahf
mov
pop
loope
clc
js
or
stc
adc
mov
xchg
loopne
push
scas
xchg
int3
repz
ficompl
inc
jbe
imul
stos
dec
jnp
xchg
push
popf
out
push
stos
data16
cmp
ljmp
or
jno
mov
fldl2e
add
lock
es
ret
inc
xlat
pusha
out
loope
dec
mov
mov
or
xchg
seta
or
adc
add
push
out
adc
data16
enter
cli
xor
push
push
mov
adc
xchg
inc
push
mov
mov
adc
push
push
sub
repnz
dec
mov
popf
loopne
pop
imul
jns
inc
mov
nop
into
fistpll
insb
cmpsb
roll
pop
lahf
push
ljmp
popf
out
add
ss
leave
sahf
jmp
mov
pushf
ss
mov
dec
xchg
mov
and
movsl
sbb
dec
fwait
aad
int
xchg
les
bound
xchg
jbe
cs
je
ficoms
xchg
add
jae
xor
cmp
hlt
bound
dec
xchg
aaa
stos
sub
adc
push
pinsrw
ss
cltd
jnp
and
hlt
inc
adc
dec
test
or
jns
sar
outsb
fnstcw
lods
je
mov
addb
cli
lcall
out
mov
and
fucomi
dec
sbb
pop
and
lret
inc
mov
adc
or
in
fistl
push
mov
nop
stc
dec
mov
xchg
inc
outsl
cmp
sbb
nop
ret
shlb
xchg
dec
movsb
pop
push
dec
mov
insl
jo
int
xor
jl
jge
mov
shrl
cmpsb
adc
adc
in
push
pop
ds
dec
push
pop
fcoml
gs
xor
into
inc
adc
mov
jns
imul
add
mov
jno
add
ficoml
popa
fcoml
mov
into
mov
xchg
pop
ret
out
arpl
jl
cmpsl
sbb
sbb
xchg
in
xchg
testl
into
fwait
sbb
xchg
mov
and
fcoml
push
ds
ficoml
gs
mov
aaa
dec
add
ja
jp
dec
scas
push
cltd
scas
aam
subl
sub
nop
jge
loopne
fldl
mov
cmp
pop
mov
subl
dec
dec
repz
sbb
dec
push
and
imul
arpl
addr16
jle
cmp
subb
fwait
movsl
dec
loope
outsb
dec
pushl
mov
add
xchg
mov
lret
dec
test
shrb
lods
sbb
in
gs
movsl
push
cmp
pop
insb
lods
xor
adc
rclb
push
mov
out
lock
pop
lret
jnp
mov
mov
inc
xchg
xchg
leave
outsb
int
into
popa
pop
imul
idiv
inc
sbb
punpcklbw
cwtl
mov
cwtl
int
pop
repz
sub
mov
daa
or
call
or
ljmp
jne
jno
or
jl
js
mov
xchg
addr16
push
imul
sub
pop
fs
lods
popa
dec
push
gs
stc
or
jp
js
mov
pop
cli
arpl
fidivl
and
sub
je
sub
ror
cwtl
jle
jbe
test
shlb
and
xor
xlat
jmp
mov
and
lods
dec
cmp
test
imul
or
xchg
stc
pop
lods
aaa
adc
jle
cs
mov
jmp
and
fwait
jmp
out
mov
test
xchg
ret
xor
shrl
test
jns
popl
xchg
cld
neg
fsts
test
aad
test
xchg
icebp
mov
dec
mov
mov
adc
cmp
mov
test
mov
mov
pop
cmpsl
sbb
leave
bound
loope
ret
push
aas
add
loopne
aad
in
xchg
pushf
lcall
push
dec
into
add
es
mov
scas
jmp
lods
mov
cmp
icebp
fmuls
enter
and
jne
fsubr
dec
inc
insl
in
cmp
or
pop
jmp
adc
out
mov
cmp
iret
inc
imul
adc
mov
dec
mov
stos
loop
lea
popa
cmp
jecxz
lret
add
bswap
cmpsb
jmp
xor
fldl
adc
cmp
adc
and
lock
inc
mov
sti
jl
enter
xor
enter
push
lret
pop
add
incb
dec
mov
jl
lods
dec
jno
mov
and
mov
les
repnz
out
xchg
mov
cmp
push
inc
data16
jg
stc
jo
ret
push
xchg
cmpsl
push
push
stc
sbb
repnz
inc
ret
xlat
sbb
sahf
push
test
add
stc
xlat
adc
sub
hlt
fcoms
stos
ja
mov
call
xor
insb
test
enter
add
inc
mov
clc
pop
aas
sahf
dec
mov
inc
or
cs
int3
jns
sub
dec
xchg
cmpsb
fnsave
scas
mov
xchg
and
ret
mov
popa
outsb
push
iretw
push
add
sbb
test
adc
mov
bound
inc
pop
push
push
arpl
pusha
dec
cmp
sbb
and
negl
push
clc
in
cld
lea
mov
aaa
lret
mov
or
mov
aaa
adc
xchg
mov
cld
push
jg
bound
rcll
pop
aad
pop
inc
mov
cmp
sub
add
jp
sti
add
in
out
int
mov
xchg
push
int3
jle
ficompl
scas
pop
jg
mov
mov
and
xchg
sbb
aas
or
pop
dec
out
jno
add
sti
xor
cmpsl
sarl
mov
pop
aad
xchg
jae
mov
sahf
test
mov
jo
xchg
mov
fwait
imul
out
lahf
mov
clc
jnp
shll
mov
je
aas
jno
inc
lea
pop
sbb
lock
dec
xchg
and
aad
inc
pop
fwait
add
outsb
and
cmp
add
mov
sbb
aas
dec
lcall
data16
jg
jnp
mov
daa
adc
xchg
sub
js
sub
call
xchg
imul
cmp
loop
add
in
jge
lods
in
jno
pop
pushf
or
pop
insb
mov
lcall
pop
loope
jno
inc
int
push
lods
daa
popf
fdivs
sahf
mov
bound
and
dec
in
mov
sbb
popf
repz
jecxz
sbbb
stc
lret
xor
push
sbb
cs
mov
sub
xchg
mov
mov
icebp
xchg
mov
cmp
mov
fimuls
lcall
dec
bound
or
outsb
cld
mov
and
mov
pop
enter
addr16
nop
xlat
sub
pop
jmp
scas
ret
test
push
cld
mov
fwait
jmp
clc
mov
push
mov
cmp
rolb
push
add
sbb
cltd
rcl
fs
test
pop
iret
push
fdiv
or
sbb
inc
push
outsl
data16
loop
and
enter
pop
sub
out
jle
es
push
cmc
push
call
push
sbb
push
adc
rolb
add
inc
xchg
mov
dec
push
stos
mov
mov
jns
xchg
jbe
dec
push
std
in
cmp
adc
aam
cli
cmp
adc
push
pushf
adc
push
sub
jne
push
imul
sahf
outsb
xchg
insb
in
pop
scas
xchg
add
mov
adc
rcrl
iret
dec
out
jnp
push
fsubr
out
add
sbb
dec
and
ds
hlt
and
add
movsl
aas
cld
lods
push
je
icebp
fcoms
shll
mov
inc
stc
jl
or
or
ljmp
push
iret
add
mov
cmp
push
jge
xlat
mov
jno
mov
mull
fs
out
popf
mov
out
in
push
jo
mov
or
mov
fiaddl
pop
jp
out
push
out
fists
out
dec
out
js
dec
call
pusha
mov
aam
cmpb
sahf
mov
test
cmc
call
push
jne
incb
xor
cld
std
dec
pop
lret
add
push
push
mov
es
out
jb
divl
out
adc
or
loope
out
jne
jns
mov
shr
lock
cli
xchg
cmc
out
leave
movsl
push
popf
movsb
cmp
dec
std
jle
clc
pop
rcll
data16
adc
call
sub
orl
jae
xor
scas
or
add
push
jns
enter
dec
xor
mov
scas
cmpsb
out
vandps
adc
lahf
xchg
das
daa
cmp
and
push
mov
movsl
xor
pop
mov
int
push
dec
lcall
lods
push
mov
or
orb
lea
pop
cmp
enter
mov
ret
iret
dec
call
sbb
ss
cli
mov
loop
in
and
movsl
push
shll
lret
out
nop
pop
dec
xor
and
dec
popf
mov
mov
dec
dec
cmp
adc
lock
out
ret
loop
loopne
roll
loop
jbe
cmc
push
lock
adc
jg
xor
andl
scas
inc
xor
loopne
outsl
addr16
jns
sub
mov
mov
insb
mov
add
inc
lcall
out
int
pop
pop
push
arpl
xor
in
mov
xchg
mov
or
jb
mov
test
outsb
push
and
cmp
sub
push
adc
mov
mov
push
and
bound
cltd
lods
jle
in
push
test
mov
dec
lahf
mov
jo
push
roll
ds
jg
mov
pop
or
xor
test
adc
leave
or
in
lahf
xchg
mov
push
push
outsl
dec
jne
rorb
xlat
adc
pop
push
sub
add
adcl
mov
jg
inc
out
or
dec
ljmp
out
push
push
mov
les
inc
mov
loopne
pop
jne
sbb
or
or
nop
sarb
out
or
jbe
push
leave
mov
fsts
into
shll
push
addr16
jp
add
xor
xor
pop
loopne
push
lahf
sub
insb
repz
lods
mov
xchg
scas
insb
mov
mov
xchg
cli
mov
ljmp
add
and
ljmp
cs
jmp
fldt
push
incb
std
push
push
adc
push
and
fwait
mov
bswap
cmpl
test
mov
dec
jge
add
mov
iret
outsl
dec
inc
push
sahf
cltd
outsl
pop
add
mov
mov
into
std
mov
jl
imul
sbb
sbbl
xor
sahf
outsb
xor
bound
cmp
xchg
and
aaa
aad
xchg
mov
daa
add
and
int3
add
dec
and
out
repnz
jp
out
push
xchg
xor
cmpxchg
sbb
mov
jmp
xor
js
imul
das
xchg
popa
sahf
loop
ja
inc
sbb
iret
xlat
inc
inc
incb
test
xor
scas
popa
je
pop
fisttpll
xchg
mov
out
insl
out
insb
cmp
test
test
pusha
int3
push
xor
gs
mov
leave
sbb
and
test
ret
imul
cld
add
push
shrl
jbe
xor
adc
jecxz
inc
jecxz
sbb
aaa
fdiv
fdivs
sbb
cmp
iret
push
xchg
lret
inc
adc
sarl
pop
jno
inc
aas
jbe
ljmp
mov
mov
or
ljmp
in
in
xor
ss
nop
fst
fists
and
xor
lea
dec
inc
fimull
sahf
out
enter
fdivp
add
pop
xchg
mov
cmp
xchg
mov
add
adc
pushf
xchg
jo
sub
das
ds
dec
or
test
lret
test
inc
or
mov
sbb
cltd
sbb
mov
add
outsl
subb
outsl
push
mov
or
dec
mov
sarl
jge
repz
inc
push
xchg
inc
adc
mov
sti
push
into
test
fildl
aas
or
inc
inc
fdiv
rorb
push
add
test
mov
push
es
fsubs
mov
aad
mov
dec
mov
xor
shll
nop
enter
daa
pop
lea
add
out
mov
test
mov
fwait
and
push
js
mov
push
inc
lahf
mov
sub
mov
js
scas
in
ret
xor
sub
sub
xchg
and
xlat
cld
lds
mov
inc
mov
call
mov
pop
inc
ds
or
and
les
xorb
cmp
jp
xchg
popa
faddl
add
imul
mov
cli
shlb
stos
outsl
shlb
sahf
out
imul
sbb
mov
shlb
dec
fcompl
fldt
cmp
adc
jle
nop
inc
mov
xchg
add
xchg
xor
decl
popa
cmpsb
mov
jb
xor
fldenv
ss
pop
push
fadds
push
fstp
pop
dec
pop
mov
xchg
add
mov
jle
jmp
cmp
cmp
mov
xor
jo
arpl
mov
outsb
enter
cld
xchg
cld
movsb
je
push
pop
sti
in
or
out
jnp
pusha
ljmp
sub
pop
into
cmp
adc
insl
sub
add
lret
mov
std
fstl
stc
cld
out
mov
dec
cmp
stos
pop
sti
xchg
or
and
pop
mov
aaa
je
pop
push
loope
pop
std
jmp
cmp
adc
ficoml
jecxz
cmpl
xchg
or
jno
rorb
xchg
xor
scas
xchg
mov
pop
pop
mov
add
adc
lcall
cltd
jns
jnp
jbe
mov
in
mov
jle
mov
xchg
pushf
cmpsb
adc
push
pusha
mov
sti
es
lcall
sub
in
pop
mov
sbb
push
mov
lret
mov
das
repnz
jno
movsl
lret
or
mov
inc
adc
in
pushf
imul
in
mov
imul
and
push
xchg
add
popa
cmpsb
jg
out
enter
mov
push
xor
jne
addr16
lds
stc
inc
inc
sarl
test
aas
add
test
movsl
or
xor
out
push
gs
outsl
shll
cmp
stos
xchg
adc
sub
xchg
insl
adcb
imul
imul
pop
xchg
mov
outsl
mov
mov
je
mov
das
push
jmp
mov
push
out
or
cmp
lds
leave
pop
cmp
add
loope
rolb
aam
jne
dec
xor
loop
add
dec
adc
int
cs
outsl
sahf
outsb
fs
rcr
mov
jl
imul
pusha
test
jno
insl
push
stc
sbb
insb
inc
dec
cli
rol
stos
pop
icebp
add
inc
out
in
repz
mov
fs
pop
lods
in
sahf
rorl
pop
jecxz
ja
pushf
add
dec
cltd
ficompl
lds
add
psubb
xchg
lock
jnp
inc
fs
cli
cltd
clc
xchg
fs
mov
arpl
mov
sub
jge
rorb
add
cmp
stc
test
mov
arpl
jmp
mov
sub
lds
cmpsb
and
loopne
hlt
jg
scas
xor
fwait
xchg
or
sbb
mov
lret
dec
inc
add
dec
int3
fwait
shlb
mov
xchg
push
sub
outsb
add
fs
jo
stos
sbb
loope
ljmp
mov
and
cld
enter
or
pop
cs
cmp
rolb
mov
add
lret
mov
mov
mov
xchg
pop
jbe
mov
jns
sbb
int
pop
pop
xchg
lcall
fstl
sub
hlt
test
fwait
out
lret
sbb
ss
mov
mov
fnstcw
aam
xlat
cld
inc
enter
push
jmp
rclb
scas
sbb
pop
mov
test
jne
cs
push
das
xor
xchg
icebp
xlat
jmp
add
mov
mov
push
js
cltd
pop
mov
sbb
adc
lods
or
imul
push
rolb
mov
dec
cs
push
incb
push
and
std
sarl
push
and
push
out
push
out
push
pop
insb
push
movsb
add
and
aad
xor
add
jbe
mov
sbb
dec
cwtl
add
and
mov
ret
xchg
rclb
cwtl
sahf
lcall
mov
or
ss
mov
mov
ljmp
out
push
xor
jp
mov
shr
int
push
mov
push
mov
fdivrs
mov
adc
jae
pop
xlat
and
mov
xchg
out
imulb
cmp
int3
fdivl
in
push
cld
push
mov
jbe
inc
mov
mov
xchg
out
imulb
cmp
int3
fdivl
in
push
cld
push
mov
jbe
inc
mov
mov
xchg
out
imulb
cmp
int3
fdivl
call
cbtw
jbe
inc
lea
cmpsb
push
xchg
or
sbb
lods
mov
pushf
inc
push
cld
popa
sti
out
adc
push
mov
sarl
mov
negb
inc
sub
popa
or
add
jns
dec
xor
stos
sarl
sub
mov
inc
sub
popa
or
add
jnp
or
pop
sarl
mov
adc
mov
inc
hlt
jb
adc
add
adc
pop
pop
mov
mov
loope
cwtl
into
mov
jo
xlat
cmp
mov
jp
imul
pop
mov
jbe
sub
rorl
sub
pop
cltd
std
push
fsubrl
arpl
mov
ds
mov
mov
mov
out
push
jmp
hlt
xchg
add
jnp
mov
dec
shrl
and
outsb
xchg
clc
xor
imul
adc
mov
or
jle
mov
pop
ret
cmp
inc
js
sub
int3
cli
sbb
xchg
jp
pop
xor
lcall
add
sub
xchg
hlt
sbb
in
inc
test
dec
xor
add
icebp
xchg
sub
mov
inc
lods
push
std
popa
sbb
add
andl
xor
cmpsl
enter
lahf
xchg
into
mov
xor
adc
jb
add
cmove
inc
cmp
ljmp
in
hlt
mov
dec
ss
sbb
jno
idivb
je
dec
sub
cmpsb
std
sar
cmpsl
fistl
mov
sub
popa
or
add
jnp
dec
xor
stos
sarl
sub
mov
inc
sub
popa
or
add
jnp
dec
xor
stos
mov
jl
mov
inc
mov
cltd
js
push
and
inc
ret
out
stc
mov
jae
outsl
sbb
and
mov
mov
nop
out
or
out
aad
fdivl
daa
dec
repz
in
sub
dec
jmp
es
or
mov
adc
in
mov
jl
les
pop
rcrl
jo
in
insb
jmp
js
push
push
jl
sarl
inc
nop
pop
mov
xchg
shr
fmull
mov
sbb
repnz
insl
jmp
daa
cmc
fcmovb
push
push
sbb
sub
or
cmp
shr
dec
cmpsl
xchg
or
or
cltd
push
loop
sbb
mov
loopne
jne
cs
js
pop
mov
inc
lods
icebp
stc
adc
sub
mov
push
inc
mov
mov
xchg
mov
xchg
xchg
inc
fwait
dec
inc
mov
aaa
cmp
inc
leave
dec
sarb
xchg
and
xchg
dec
sub
mov
out
adc
mov
xchg
loope
cld
outsl
cwtl
imul
sahf
jge
repz
lods
mov
xchg
shlb
loop
test
test
lret
ss
cmpb
imul
sbb
jl
imul
cmp
inc
fidivrl
packssdw
dec
mov
push
cmp
ror
das
aas
rol
mov
pusha
lock
xlat
imulb
xor
pop
mov
rcrl
ficompl
in
sub
jle
xchg
pop
fnstcw
in
nop
mov
lds
int3
and
lods
pop
in
pop
cmp
mov
cltd
cli
sar
subl
imul
xlat
outsl
push
jecxz
mov
or
push
pop
ds
sbb
cmp
adc
lret
ljmp
and
stos
aad
out
lahf
inc
push
pop
imul
add
daa
negb
sar
adc
jecxz
daa
stos
in
and
dec
ja
cltd
jbe
pop
pop
pop
mov
inc
inc
call
rorb
cmpsb
pusha
xor
test
movsl
jp
inc
sbb
cpuid
lea
push
inc
loope
rcll
aam
jp
dec
sbb
push
sub
mov
ds
sbb
jno
lret
pop
push
jl
hlt
mov
jge
cmpsb
test
clc
movsb
imul
push
cld
mov
xchg
iret
aaa
adc
xor
sbb
inc
ljmp
push
dec
fwait
cmp
dec
data16
mov
or
pop
outsb
pop
adc
gs
test
push
ds
adc
push
lahf
sub
and
mov
in
sti
les
cltd
leave
inc
inc
sub
cmpl
adc
mov
cmc
jg
insl
fcomps
add
fwait
movsl
cmpsb
sub
xchg
insb
in
outsb
test
cmpsl
enter
shrl
incb
jmp
std
xchg
adc
test
mov
push
dec
inc
mov
repnz
or
lahf
sub
mov
popf
adc
int3
jbe
xor
into
loop
arpl
pop
jp
jb
xor
or
cmp
fstpt
mov
adc
nop
jae
sbb
push
mov
nop
jne
jno
addb
xchg
aaa
lods
pop
imul
adc
push
mov
pushf
push
dec
arpl
fdivrl
shll
das
mov
test
or
jl
arpl
movsb
sbb
imul
jecxz
roll
test
rclb
dec
fistpll
push
mov
stos
test
outsb
xor
pop
push
pushf
mov
ret
push
cmc
xlat
xchg
iret
outsb
mov
sbb
mov
adc
and
lea
mov
sahf
loop
adc
sub
nop
in
mov
pop
pusha
pop
lds
push
dec
cli
lods
mov
je,pt
inc
test
push
test
fbstp
ret
jb
cmp
mov
sub
es
mov
imul
lds
jge
or
mov
dec
not
sbb
outsl
dec
mov
clc
fadd
pop
inc
fistps
xchg
mov
das
or
push
bound
movsb
mov
std
xchg
pop
ja
in
mov
sbbb
sbb
nop
insb
in
fbld
lahf
add
pop
mov
sbb
mov
enter
je
mov
inc
xchg
lods
inc
js
inc
xchg
add
push
test
pop
fldt
movsb
std
xor
cmp
mov
scas
les
je,pn
xchg
sbb
xchg
jnp
rclb
movsb
ss
ret
imul
rclb
imul
sbb
ret
jl
and
outsl
or
xor
aaa
bound
shl
mov
sahf
sub
or
mov
sub
dec
dec
fimull
cmpl
sub
inc
stos
into
movsb
pop
and
out
jo
dec
pop
out
pop
movsl
clc
fnstcw
push
outsl
add
dec
shl
sbb
shl
jp
inc
cld
pop
and
out
and
in
imul
call
pop
dec
adc
push
jle
pop
jns
mov
incb
cld
or
cld
loop
add
cltd
mov
add
dec
rol
outsl
lods
iret
repnz
int3
jnp
inc
inc
cmp
ret
arpl
lock
mov
inc
icebp
fiadds
or
rorb
ret
ja
mov
xor
mov
sti
and
mov
fs
pop
popa
jnp
repz
dec
push
xlat
cmpsl
mov
nop
inc
popf
in
std
sub
jnp
mov
fstl
pop
jbe
adc
push
mov
push
loope
aad
xchg
lods
movsl
mov
mov
int
mov
jo
cmp
mov
lock
cmp
xchg
xor
xor
aas
sarb
jge
fcomip
les
and
lahf
jmp
fs
jle
xor
push
icebp
xchg
inc
mov
mov
loopne
mov
mov
mov
mov
fxch
scas
idivl
pop
aam
aaa
inc
out
hlt
mov
cmc
test
aad
cs
mov
mov
lret
dec
js
adc
int3
mov
sub
rclb
int
ret
pop
cmp
inc
addr16
xor
push
xor
fdivrl
addr16
add
xchg
jns
loope
xchg
mov
mov
loope
pop
inc
inc
jbe
outsl
xchg
xchg
out
jns
jp
fwait
pop
xor
ja
test
fistps
add
push
stos
movsl
pop
out
cmp
loope
and
int3
inc
imul
push
pop
scas
sub
lods
jmp
lods
or
mov
das
popf
nop
std
mov
les
mov
cmp
sub
sub
and
pop
cmp
mov
mov
sub
xor
cmp
pop
movb
or
nop
mov
in
js
ror
pop
arpl
push
xor
cltd
cltd
mov
and
push
js
cwtl
xchg
xor
rclb
cs
fldt
inc
adc
hlt
out
scas
fsubs
jmp
xor
cld
cmp
cmp
xchg
mov
shl
adc
out
push
popf
pop
test
lret
sub
mov
sbb
or
sbb
rorl
and
aaa
or
mov
dec
sbb
xchg
call
outsl
jnp
cmp
pop
test
mov
mov
lds
pusha
or
mov
andb
mov
mov
push
insl
cmp
loop
mov
jne
cmp
pop
fistl
mov
movsl
push
call
subb
push
mov
xchg
adc
xchg
dec
xor
insb
bound
jmp
cmp
lahf
jl
pop
add
fwait
sub
mov
aam
std
leave
or
hlt
movsb
xor
mov
sub
fs
dec
push
jmp
testb
loop
dec
inc
adc
stc
mulb
mov
pop
push
jb
stos
les
inc
aad
sti
insb
sbb
cmc
mov
cltd
insb
es
lcall
aas
sub
sub
repnz
adc
push
add
clc
sub
in
ror
dec
cmp
xlat
add
jns
int3
jnp
call
scas
insb
sbb
mov
xchg
inc
sub
lock
cwtl
sbbb
mov
xchg
ret
pop
mov
aas
cltd
out
or
adc
jmp
cmp
pop
push
jns
mov
in
out
inc
inc
mov
leave
in
inc
push
jg
in
adc
ljmp
fisubrs
pop
arpl
rorb
aad
push
or
xchg
jg
mov
sahf
dec
mov
xor
int
andnps
xor
dec
lods
and
or
lds
call
xchg
dec
add
repnz
jns
mov
or
popf
or
lcall
push
and
inc
cmpsb
mov
mov
mov
or
pop
push
movsl
sub
dec
data16
jle
int
or
pop
push
push
into
lds
mov
xor
jmp
out
fwait
xchg
mov
xor
lret
pop
daa
mov
ffree
fnstsw
fiaddl
std
jmp
xchg
sub
stos
in
mov
dec
in
ret
leave
sbb
push
and
adc
aad
xor
bound
jae
sbb
cli
fucomp
popa
mov
fs
mov
jbe
mov
push
sub
shl
imul
xlat
lahf
and
sub
sbb
cmpsl
aas
icebp
fcomi
pop
loopne
inc
adc
cli
pop
pcmpeqw
mov
ret
xchg
sti
cmc
idiv
jp
cmp
dec
add
adc
push
ret
add
lea
hlt
xor
clc
xchg
xor
stos
inc
xor
add
xchg
mov
push
lcall
rcrb
test
cmp
sbb
push
jb
push
bswap
out
add
out
in
lret
mov
sub
xor
decb
scas
xchg
gs
sbb
ss
mov
lods
clc
cmp
pop
leave
mov
cmpsb
sub
fadds
xchg
faddl
arpl
sbb
pop
adc
lock
add
mul
push
test
rorl
mov
add
ss
out
orb
pop
sub
or
rorb
adc
push
mov
orb
add
mov
jl
loope
lods
loope
jo
mov
mov
loope
add
mov
pop
jnp
pop
sbb
ss
bound
mov
and
xchg
add
in
push
aas
sarl
pop
xorl
pop
int
push
stc
iret
scas
hlt
movl
popf
xchg
xor
mov
sbb
and
pop
cmc
clc
mov
add
cmpsl
mov
mov
adc
pop
orl
in
xchg
jge
jmp
pop
add
lahf
fsubl
inc
leave
icebp
sbb
mov
dec
adc
popl
mov
cld
xor
imul
mov
cmc
bound
inc
lock
xor
sbb
rcrl
in
pop
fstl
sub
cmp
cld
leave
cmpsl
hlt
add
sub
lret
leave
loop
addr16
das
xor
push
mov
mov
outsl
mov
fstcw
pusha
xchg
xor
lahf
cld
fwait
dec
in
testl
imull
orl
pop
or
mov
iret
inc
mov
adc
mov
test
mov
adc
pop
and
stos
adcb
cmp
pop
js
lods
push
faddl
push
addr16
popf
jmp
jbe
sub
in
nop
adc
ret
dec
repnz
ljmp
dec
xor
cmp
lahf
out
adc
pop
and
fsubrl
loopne
push
lret
xor
fdivs
or
cs
js
lahf
popa
push
stos
dec
scas
into
in
inc
sbb
aaa
je
sub
into
or
push
or
mov
imul
push
and
mov
xchg
mov
btr
cmc
jge
nop
jg
repnz
push
xchg
pop
cmp
jg
pop
jbe
or
sub
xchg
sbb
sub
adc
xchg
dec
pop
mov
movsl
cmp
mov
mov
adc
push
jns
dec
pop
nop
xor
idivb
jb,pt
push
lea
xchg
inc
adc
and
call
hlt
loopne
push
fisubs
pop
lret
xor
stos
sbb
and
test
mov
cmp
sbb
ficompl
fdivrp
sub
hlt
movsb
push
jmp
dec
mov
mov
pop
outsl
or
fs
cli
andb
inc
cwtl
mov
dec
scas
call
notl
popw
stos
je
scas
jb
xor
test
push
xor
scas
cmp
xchg
jb
add
mov
dec
je
fimuls
mov
xor
xor
pop
push
jae
cli
nop
add
jns
call
fsubr
sahf
loop
xchg
icebp
cmpsb
cmpsl
mov
pop
std
mov
scas
out
fnstsw
lret
rcrl
lea
sti
sqrtps
adcl
repz
and
movsl
shll
test
test
sbb
push
mov
addr16
call
push
xor
cld
in
cmp
mov
jl
mov
xchg
gs
add
fisubrl
xor
loop
cmp
push
jne
lods
loope
pop
jne
in
push
lret
xor
xor
idivb
lcall
dec
int3
addr16
jg
ja
add
xchg
adc
cmc
fadd
xchg
mov
sbb
addr16
push
test
xchg
push
push
mov
dec
add
aaa
pop
xchg
inc
rcr
stos
fs
push
dec
add
adc
dec
aam
pop
mov
jnp
fimull
ds
inc
adc
pop
xor
dec
pop
push
sbb
call
xchg
ret
jae
lds
data16
lea
sub
and
fucom
inc
mov
ds
inc
ds
testl
jl
or
and
fildl
jo
stos
adcb
dec
adc
stos
in
popf
aas
add
mov
test
mov
insb
push
lret
inc
fimuls
int3
add
inc
in
adcb
divl
push
pop
pop
pop
push
xchg
pushl
fstps
ljmp
adc
stc
mov
dec
clc
mov
std
sub
in
fwait
push
xor
std
sub
jg
xchg
xor
bswap
push
lds
adcb
bnd
lods
jle
lds
mov
inc
mov
out
insl
mov
fistpll
dec
sub
das
mov
sub
jo
sbb
and
pop
xlat
mov
sbb
int3
aad
test
sub
inc
jbe
shll
hlt
sahf
inc
clc
das
fwait
push
push
dec
mov
ja
sbb
ficomps
and
pop
nop
mov
imul
xchg
test
lea
sti
mov
cmp
cmc
ficoms
xchg
mov
xchg
test
pop
mov
shrl
aam
inc
negl
out
fcmovnbe
add
pop
and
call
bound
fmul
and
dec
push
pop
es
loop
jle
add
adc
ror
push
fmulp
cmc
fcmovbe
push
sbb
dec
scas
adc
shll
ret
ror
cld
clc
mov
add
xchg
insl
pusha
lcall
fidivl
add
dec
jnp
xor
add
pop
jmp
push
lock
mov
stos
sub
xlat
fdivp
push
cmp
lcall
sub
mov
xchg
pop
sub
mov
sbb
fidivrs
fdivp
jp
mov
push
push
push
mov
out
mov
mov
mov
shlb
aaa
ljmp
outsb
mov
fiadds
inc
mov
add
xor
cmc
imul
cs
mov
push
mov
pop
mov
mov
dec
into
mov
sbb
pop
push
or
lds
and
and
ret
xor
add
cmp
lods
xchg
dec
fistl
mov
stc
push
push
cmp
nop
call
les
rcrb
jnp
lahf
lock
shr
adc
mov
cmpsl
fadds
xor
mov
mov
jge
daa
push
xor
jge
dec
mov
xchg
testl
mov
xchg
popf
mull
cmp
repz
fldcw
pop
lahf
mov
sub
stc
rorl
jmp
inc
js
enter
adc
xchg
mov
pop
sbb
push
pop
mov
cltd
sahf
mov
pop
les
repnz
cmc
mov
mov
aaa
nop
xchg
fidivs
fisttpl
aaa
cwtl
in
into
je
shll
adc
xor
mov
nop
sbb
xchg
pop
or
dec
mov
inc
sbb
add
sub
mov
lods
popf
fstpt
xor
sbb
mov
test
add
std
in
xchg
js
fnstenv
cs
lcall
and
jg
xor
xor
and
rcrb
lods
jns
fdivrp
adc
adc
xchg
sub
into
pop
outsl
std
lds
sahf
push
inc
dec
into
arpl
scas
rcrl
fwait
icebp
jo
stos
icebp
sbb
int
pop
mov
dec
lcall
pop
dec
xor
pop
test
jecxz
movsb
sub
out
test
jo
pop
push
fs
cs
xchg
movsb
sbb
and
stc
jmp
jo
adcb
fwait
aas
cli
xor
shll
fadd
xchg
repz
lods
mov
push
arpl
push
xchg
cmp
inc
je
xchg
pop
test
out
or
cmc
stc
xor
out
xchg
sbb
adc
movhps
ss
icebp
mov
cmp
aaa
mov
in
loop
inc
sub
mov
cmova
sbb
mov
mov
xchg
iret
xchg
and
arpl
cmpl
test
and
jmp
scas
aas
arpl
xchg
fnstenv
add
jl
add
push
xchg
adc
inc
aam
sbb
and
fcoms
add
or
push
adc
dec
xor
pusha
test
cs
and
jle
mov
sub
call
mov
and
xchg
das
arpl
movsl
cmpsl
rolb
adc
mov
cmp
push
ljmp
cmovg
pushf
xor
das
pop
mov
push
adc
mov
int
xchg
pop
mov
shll
pop
cmp
mov
int
add
cmp
push
push
int3
mov
es
push
pop
enter
neg
clc
out
jae
mov
pop
pop
pop
dec
test
or
cltd
in
jb
cmp
push
and
sbbb
in
push
inc
pop
and
cmpsl
lcall
data16
adc
iret
nop
scas
xor
and
jmp
mov
lret
cmp
jnp
gs
jo
push
jp
hlt
sahf
fdivl
adc
sub
pop
and
jp
dec
sbbl
lcall
icebp
loopne
ret
push
push
neg
fld
dec
mov
jl
pop
mov
cmp
or
fs
subl
mov
xor
sbb
jno
out
cmpsb
rorb
aaa
test
shr
dec
mov
test
sbb
push
out
jmp
jg
addr16
mov
xchg
roll
lret
sysenter
mov
out
fwait
push
add
das
or
insl
mov
mov
mov
mov
cmpsb
push
lret
xchg
loope
push
jne
xor
adc
xor
pop
fistl
cmpsb
push
push
sbb
ret
and
xor
pop
xor
push
testl
mov
rorl
mov
rolb
test
aaa
adc
movsb
call
jne
jo
cmp
notb
mov
inc
mov
enter
scas
cmpsb
stc
jo
cmp
rol
jg
jo
in
inc
movsl
or
data16
jo
lret
aaa
pop
pushf
inc
pop
jb
aaa
outsl
cmpsl
xchg
lcall
jns
out
getsec
add
ja
jbe
xchg
cmp
leave
jmp
jb
cmpsl
imul
inc
inc
fsub
shl
ret
std
mov
cmpsl
pop
adc
dec
xchg
pop
addr16
fldenv
stos
sbb
adcl
lret
and
mov
adc
dec
mov
clc
push
out
mov
lods
sub
lret
outsl
sbb
dec
les
arpl
sub
xchg
xchg
gs
ficoms
push
mov
jl
fwait
dec
jo
xchg
cmp
fs
adc
out
cs
aaa
in
out
jmp
in
lods
gs
jne
fiadds
mov
jecxz
es
xchg
pushf
jo
scas
lahf
or
dec
arpl
push
filds
or
aaa
dec
sarl
stos
mov
mov
fwait
shl
loopne
arpl
ret
int
cmpb
movsb
dec
fidivl
jnp
cmc
pop
sarb
jmp
sti
mov
sub
popa
or
add
jnp
dec
xor
stos
sarl
sub
mov
inc
sub
popa
or
add
jnp
dec
xor
stos
shl
loope
icebp
fwait
sub
mov
inc
repz
cmp
jo
add
jnp
imul
shrl
lcall
xor
mov
or
jbe
cltd
test
mov
movsb
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
ficomps
into
or
cmp
sub
cld
rcrb
imul
outsl
test
ds
cs
cmp
sub
jns
imul
outsb
test
ds
into
or
cmp
sub
jns
imul
outsb
test
dec
mov
sbbl
cmpb
add
insl
aas
pop
addl
outsl
icebp
sub
xchg
dec
inc
mov
fimull
sub
mov
imul
fwait
inc
adc
cmp
test
sbb
jns
push
dec
fdivs
pop
push
cs
fimuls
mov
fwait
dec
cmp
scas
xchg
roll
in
inc
add
loope
dec
ss
stc
negb
mov
mov
jmp
mov
sbb
sti
inc
adc
leave
icebp
xor
and
rcrb
les
or
mov
in
mov
test
int3
orl
in
scas
call
cmp
sub
jns
imul
outsb
test
ds
sbbb
xchg
xor
lods
cmp
sub
jle
push
out
pop
mov
push
or
adc
sub
cmp
pop
cld
jl
outsb
pop
mov
pop
mov
xchg
push
orb
dec
mov
cltd
dec
mov
outsb
test
ds
cs
cmp
sub
jns
imul
outsb
test
ds
cs
arpl
cld
mov
loope
pop
xchg
in
jge
iret
out
adc
insl
cmpsl
out
rsqrtps
lret
push
test
outsl
bound
pop
rcrb
mov
jge
sti
xchg
bound
sub
popa
subl
cmpsl
push
dec
scas
ficoml
add
adc
or
mov
sub
push
cwtl
jae
jb
repnz
push
push
mov
pop
lahf
mov
ja
push
jmp
jbe
mov
insb
add
jle
xor
dec
aas
xor
std
inc
lahf
sarb
ror
notb
popf
lcall
mov
xchg
scas
repz
push
rcr
push
mov
push
jns
lahf
adc
mov
mov
mov
sub
mov
sbb
inc
mov
outsl
and
bound
jb
mov
aaa
mov
mov
lds
push
pop
cmpsb
enter
cmc
jno
ljmp
call
nop
js
repz
scas
repnz
mov
adc
bound
dec
aam
sub
clc
jno
test
shl
push
sbb
mov
roll
ljmp
sbb
pop
dec
bound
xchg
std
iret
push
jnp
stos
mov
inc
xchg
xor
pop
inc
jge
mov
cwtl
adc
cli
nop
xchg
adc
push
mov
mov
adc
sbb
sti
pop
js
xchg
and
es
insb
push
clc
push
lret
mull
jne
add
sbb
xchg
mov
mov
and
xchg
xlat
roll
push
movsb
and
in
ret
fisttps
repz
mov
inc
or
xor
clc
lcall
jb
sahf
aas
daa
out
stc
lret
jb
add
movsb
xor
pop
or
les
xchg
roll
iret
imul
mov
push
cmp
xchg
mov
dec
inc
insb
or
test
mov
outsb
pop
add
lret
ror
lcall
push
inc
jge
or
jnp
adc
call
push
sahf
enter
push
pop
cwtl
pop
jmp
sbb
cmpsb
mov
into
daa
jns
push
in
xchg
mov
outsb
push
xchg
test
rorl
outsl
cmp
push
jae
leave
and
sbb
sub
dec
sbb
jno
std
dec
push
pop
mov
lods
fimuls
sbb
sub
dec
pop
xchg
mov
and
push
jne
cmp
nop
loopne
cmp
mov
idivb
mov
push
pop
enter
mov
je
mov
cmpsb
adc
popa
test
mov
pop
mov
testl
cmp
mov
mov
cltd
cmpl
cmpb
stc
cmpsb
gs
imul
cli
push
inc
add
mov
cmp
and
push
fidivs
mov
imul
dec
insl
bnd
mov
or
jbe
mov
jae
andb
leave
fiaddl
jl
push
mov
inc
jl
or
loop
pop
pop
and
cs
mov
ds
and
add
cmpsb
dec
mov
subb
lret
cmp
lcall
lahf
sbb
add
mov
add
mov
xor
inc
into
mov
push
ja
adc
mov
add
jp
stos
sbb
sahf
mov
mov
notb
push
adc
jge
popa
leave
dec
pop
pop
adc
xor
push
cmpsb
mov
mov
popf
push
stos
add
fs
das
xchg
push
jecxz
inc
in
cmpb
ror
cmp
or
and
lret
sbb
and
pop
xchg
fcomps
cs
add
ficoms
inc
dec
stos
xor
cmp
mov
in
adc
repz
dec
sbb
xchg
or
je
or
aaa
adc
mov
inc
push
inc
sub
fistpll
or
pop
adc
rorb
fildl
cmpsb
aaa
sahf
mov
inc
inc
rorb
loope
push
cltd
sbb
add
sub
popa
inc
fnclex
or
fdivrs
inc
les
mov
sbb
push
mov
cs
jb
jae
scas
sbbl
mov
aad
mov
icebp
dec
jbe
lods
stc
inc
inc
mov
loop
and
cmpsl
push
inc
loope
xor
cmp
mov
push
and
testl
xor
mov
adc
arpl
inc
out
and
les
idivl
jecxz
cmp
push
shrb
test
or
out
rep
add
sbb
and
inc
pop
lods
push
iret
mov
cmpsb
push
cmp
and
jbe
adc
call
xchg
inc
xor
jg
adc
jl
push
xor
fs
aad
lds
push
dec
call
cltd
and
test
ret
xchg
daa
in
int3
pop
mov
fwait
aas
rcl
xchg
push
pop
insl
sub
aas
jno
ret
faddl
jno
adc
aad
ret
add
mov
cli
insl
cmpsb
bound
or
sub
jns
ds
pop
cmp
insb
xor
cld
and
mov
aas
cmp
xor
in
xchg
mov
stos
subb
int3
int
adc
xorb
and
adc
fnop
pop
lea
in
faddl
clc
mov
sub
lods
adcb
mov
jae
mov
sbb
jne
pop
push
sbb
add
mov
cld
or
jecxz
ja
push
cmp
dec
shr
or
xor
jecxz
push
out
mov
in
sub
xor
push
jnp
and
cmp
sub
dec
dec
sbb
push
arpl
add
in
adc
mov
fistpll
sbb
xchg
jmp
inc
xor
ret
dec
mov
jb
sub
cmp
pop
mov
cmp
mov
jecxz
test
jmp
test
cmp
or
mull
inc
icebp
cmp
inc
jns
fists
out
or
dec
test
mov
xor
notb
and
out
fldt
in
xchg
imul
adc
dec
jae
xchg
mov
mul
and
daa
test
fistps
cmpsb
push
jbe
pop
sbb
sub
loop
jecxz
sbb
mov
push
insl
ja
out
sbb
add
test
mov
or
inc
dec
call
add
cmp
sarb
nop
xchg
push
mov
ss
sub
fstp
dec
pop
gs
addr16
cmpb
or
dec
xchg
adc
xchg
in
and
loopne
jne
stc
lret
in
xlat
adc
mov
ror
adc
icebp
fsubr
mov
cmp
sahf
shl
or
aad
out
lds
cltd
jg
clc
xchg
cwtl
jns
lea
bound
pusha
aaa
push
ljmp
mull
push
mov
jge
mov
lock
mov
bound
pop
adc
test
mov
xchg
jmp
ja
enter
and
pop
jmp
sub
in
push
dec
mov
dec
add
popf
adc
cltd
div
nop
dec
fmul
push
sti
ss
loope
pop
sarb
dec
loop
jbe
rorl
repz
fidivl
jg
ljmp
xchg
xor
fnsave
sub
add
and
nop
mov
jae
sbb
add
xchg
in
mov
lret
shr
jne
stos
cmpsb
ret
into
movsb
cmc
or
sub
or
push
insb
test
ja
lahf
mov
push
mov
fdecstp
cmpsb
sub
fiaddl
jecxz
add
int
wbinvd
ror
or
lcall
mov
adc
push
sbb
xor
leave
stos
sarl
mov
jmp
andl
mov
stos
icebp
into
shrl
aam
xor
push
lcall
in
jbe
lret
sarl
movl
aaa
and
jmp
enter
cs
loope
or
les
cli
lahf
pop
adc
dec
std
les
call
in
mov
inc
inc
push
or
mov
jns
insl
sbb
mov
cmp
mov
add
and
sti
and
jnp
add
popf
incl
add
push
das
pop
aam
mov
and
push
xor
cmp
jns
int
loope
xor
sub
in
xchg
in
sbb
jb
and
arpl
mov
loopne
aad
pop
mov
clc
enter
inc
xchg
arpl
jmp
mov
lea
mov
xor
mov
mov
mov
movsl
mov
dec
lret
ret
mov
mov
adc
dec
int3
sub
addl
repnz
flds
or
ljmp
or
shll
shll
sub
imul
adc
mov
jb
cmovns
mov
popf
fcmovb
sti
loope
imul
addl
push
cmc
sahf
add
fdivrl
sti
stos
xor
adc
bound
in
mov
add
mov
push
pop
stos
gs
xorb
push
aad
push
pop
cmp
mov
ficoms
cld
sahf
scas
sbb
rorb
jle
adc
lea
outsl
dec
lahf
mov
fimull
pushf
inc
push
cmp
scas
filds
xchg
lock
aam
andl
jnp
aaa
sti
lea
test
dec
mov
and
enter
add
sub
and
in
cmp
mov
in
dec
sub
and
and
cwtl
js
stos
cmovs
mov
data16
dec
lahf
clc
push
mov
test
testl
push
jne
mov
jge
shll
addb
in
dec
aam
sahf
gs
jle
jecxz
mov
inc
lods
mov
outsb
in
sbb
aad
push
jmp
and
mov
outsb
adc
fsubs
jb
push
cmp
shrl
add
loope
push
jp
repz
fidivrl
sar
xchg
sti
pusha
push
aam
sub
pop
cld
jnp
jle
sbb
mov
or
mov
popa
insl
jp
sbb
in
sbb
stos
dec
fwait
sbb
xor
sbb
lret
pop
add
jns
pop
sbb
sub
enter
data16
inc
imul
stos
in
jmp
cmpsb
bound
and
lea
adc
mov
adcb
jnp
mov
dec
fldl
cld
icebp
mov
popa
fldenv
call
gs
xor
movsl
adc
stos
mov
hlt
pop
jecxz
sub
stc
mov
cmp
popa
sub
or
cmp
lcall
push
sbb
gs
lcall
ljmp
pop
xchg
shll
fidivs
mov
inc
sti
mov
stos
aam
jecxz
into
jmp
xchg
subl
and
xor
or
stos
or
sbb
aaa
clc
cmp
addr16
mov
mov
scas
cwtl
subb
sub
mov
xor
or
aas
fistps
mov
rcr
ja
out
jg
push
sti
scas
stos
lret
stc
cmp
pusha
mov
data16
push
jle
xor
jge
dec
pop
mov
incl
dec
leave
dec
ficomps
andb
lea
inc
push
pop
mov
bound
cmpsl
subl
sub
shlb
insl
dec
das
in
pop
mov
rcl
adc
ret
stc
mov
mov
repnz
imul
andl
mov
adc
lea
test
cmc
dec
outsb
pusha
sub
imul
or
pop
call
fcomps
xchg
jl
or
sbb
notb
addb
mov
out
negb
cmp
fdivrl
pop
in
jbe
jae
add
fiaddl
ud2
out
psllq
in
lret
repnz
sbb
or
and
mov
sbb
arpl
mov
jae
jae
imul
add
mov
cmpsl
add
inc
iret
scas
push
insl
mov
pop
mov
aad
and
daa
fwait
push
or
mov
das
mov
jo
push
inc
adc
mov
cmp
repnz
lcall
scas
data16
or
cli
fdivs
ficomps
outsl
dec
mov
in
iret
repnz
data16
and
rclb
jge
jo
inc
mov
xor
xor
stos
jle
pushf
stc
subl
cmp
mov
sbb
push
sbb
sub
push
mov
cmpsb
outsb
incl
arpl
insb
insl
lods
mov
fcomps
adc
mov
add
xor
shr
add
mov
nop
pop
mov
inc
or
pop
rorl
jo
in
ljmp
aad
out
jnp
mov
push
sbb
xlat
loope
iret
add
adc
inc
fstps
sbb
lcall
adc
inc
jns
push
movsb
cli
enter
aas
xchg
outsb
xor
cltd
int
push
fs
pop
mov
pop
imul
mov
push
fisubs
jb
sbb
push
dec
xchg
hlt
inc
pop
jge
xor
xchg
test
out
lahf
add
lret
mov
cmc
and
xchg
ret
pop
stos
sub
push
inc
fs
jnp
pop
and
jmp
test
stos
mov
das
or
and
adc
shll
inc
loope
mov
pop
xor
sbb
ds
pop
test
mov
sub
push
es
xchg
pop
xchg
cmp
xchg
mov
xchg
sbb
mov
vpmulhuw
adc
add
push
or
sbb
aaa
ds
fbld
enter
sarb
add
test
inc
rcrb
movsl
mov
fimuls
test
cmp
mov
idivl
ds
add
orb
aad
movsl
mov
jmp
fisubrl
cmc
pop
mov
inc
push
ficompl
inc
lahf
cmpsb
out
mov
xor
dec
cs
push
popf
insl
or
outsb
out
jb
and
or
push
dec
test
cmp
xor
adc
xlat
les
ret
movsb
jmp
insb
cli
inc
mov
adc
lods
sub
fisttpl
in
xor
or
sub
test
pusha
fimull
push
movsb
mov
mov
jae
pop
sub
ds
add
pop
adc
pop
hlt
nop
xchg
mov
aaa
in
add
pop
push
mov
add
xlat
sub
sbb
lds
test
fistpl
add
adc
arpl
iret
out
push
aad
pop
test
fwait
test
cmp
adc
jb
lahf
sahf
call
cmc
loop
test
mov
sub
negb
call
jg
call
jle
test
lds
ret
lds
addr16
mov
shlb
sbb
in
xchg
add
mov
shl
xchg
jle
lods
xchg
pop
inc
cmp
loop
sbb
imul
jl
jge
shr
sbb
adc
iret
test
aad
inc
sub
sbb
dec
jno
xchg
lds
clc
mov
inc
mov
dec
aam
pop
xchg
mov
in
cmpb
loopne
fwait
mov
outsl
jle
daa
iret
dec
mov
push
dec
dec
push
push
cli
clc
inc
mov
rcrb
cmp
fstpt
popa
stos
leave
xchg
daa
sbb
hlt
xlat
fimuls
jno
dec
push
adc
inc
fistpl
or
iret
pop
jnp
mov
add
insb
dec
in
in
or
mov
mov
cltd
jp
fcomps
or
out
and
sarl
cmp
fwait
dec
dec
lods
add
mov
out
sbb
jo
imul
pushf
scas
out
js
dec
mov
in
movsl
aam
mov
in
shl
inc
inc
into
mov
rclb
imulb
bswap
das
sarb
fisttps
sbb
shrl
push
pop
sbb
outsb
and
xor
push
test
sti
cmp
push
out
arpl
in
out
in
movsb
mov
jo
je
sbb
cmp
icebp
icebp
fstp
rorl
in
out
fstpl
je
inc
mov
fpatan
lret
xchg
pop
loope
push
dec
lahf
jne
leave
push
lds
pusha
lea
adc
xor
adc
mov
sub
lea
gs
lods
mov
push
bound
loope
mov
into
sub
ret
xor
dec
adc
pop
adc
cmp
adcb
test
shll
xor
cmp
movsb
ds
jg
adc
fstpl
xchg
push
jno
into
int3
mov
or
sahf
add
stc
push
out
mov
adc
inc
ret
push
stos
or
dec
cmp
mov
push
mov
into
ret
jne
push
xchg
or
sub
push
mov
xlat
stos
mov
or
or
jg
test
cmp
mov
mov
ret
fsubr
neg
pop
or
jae
test
and
and
pop
pop
cwtl
add
adc
and
xchg
and
les
ljmp
fisubs
and
mov
fcmovbe
cmpsb
dec
jns
cmp
roll
gs
mov
imul
or
ljmp
lcall
rcll
add
inc
push
xor
mov
pop
mov
lods
enter
xor
loop
and
data16
das
sub
shlb
or
inc
fadd
and
std
mov
dec
sbb
xchg
icebp
loope
and
fadds
xor
ss
inc
sub
inc
and
and
jp
xchg
subl
stc
inc
adc
sbb
add
sub
xchg
mov
add
sub
push
or
push
xlat
sub
pop
push
loope
add
push
fisttps
enter
cltd
daa
ficompl
sti
mov
pop
aam
popf
add
les
test
movsl
jns
inc
xchg
mov
push
push
shl
cmc
jl
out
dec
xchg
and
sub
sub
pop
push
popf
push
xchg
aaa
cmp
lcall
sbb
out
loopne
add
adcb
dec
sbb
mov
sbb
push
push
xor
cs
lret
int
lret
iret
repnz
ffreep
jmp
xorl
inc
dec
xor
push
jb
cmp
push
sbb
xchg
push
jbe
jns
mov
xor
mov
cmp
add
movsl
xor
cmp
mov
iret
js
lds
push
sub
mov
gs
mov
inc
push
test
rcrl
test
cltd
clc
mov
rcr
adc
mov
inc
push
cmp
push
mov
leave
dec
imul
mov
enter
add
lea
inc
cmp
mov
jg
enter
cmp
push
repz
mov
push
in
aam
pop
imul
xchg
mov
cmpb
sbb
notl
data16
shl
xlat
mov
push
insb
test
movl
mov
clc
in
mov
push
cmp
mov
js
jl
sti
cmp
idivl
add
or
jecxz
std
iret
lock
popf
fs
mov
lret
movsb
inc
sbb
sahf
or
out
sti
dec
cmp
shlb
int
lcall
xchg
lock
sbb
and
inc
mov
dec
es
sub
xchg
ds
mov
aaa
repz
hlt
mov
adc
std
add
and
add
sbb
scas
nop
stos
aad
and
aam
cmp
xor
pop
inc
loope
jmp
mov
xchg
or
lcall
mov
jge
idivb
fs
add
mov
inc
inc
mov
rcll
jmp
adc
jmp
stos
and
xchg
out
jbe
sub
sbb
adc
and
cmp
shll
jb
inc
pop
push
out
push
push
mov
loopne
test
pop
sbb
std
sahf
fidivs
inc
mov
mov
mov
inc
ljmp
aam
dec
inc
lret
lods
pop
mov
fstpl
or
insl
lock
add
ja
cmpsb
lcall
mov
std
mov
push
insb
inc
lret
inc
aas
add
cmpsb
fimuls
dec
mov
push
pop
adc
ficoms
cs
or
jne
lds
mov
mov
dec
loop
jbe
fnstcw
or
xor
xchg
fwait
mov
leave
fcompl
orb
hlt
inc
xor
sbb
gs
pop
das
lods
lods
mov
arpl
pop
cmpsb
out
and
std
mov
out
sub
jns
imul
outsb
test
ds
cs
cmp
sub
jns
imul
outsb
test
ds
cs
jle
out
sub
pop
mov
mov
sbb
jle
outsb
test
ds
cs
cmp
sub
jns
imul
outsb
fisubrs
jle
dec
push
pop
push
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
xchg
xor
add
daa
mov
xchg
add
mov
push
repz
mov
xchg
xor
add
jae
arpl
push
loop
adc
and
jb
xchg
xor
add
jae
arpl
push
loop
adc
or
cmp
or
adcb
shr
xchg
mov
mov
shrb
jno
fxtract
push
cmp
pop
and
sbb
arpl
das
cld
clc
mov
stc
pop
adc
in
sub
mov
xor
jae
pushf
aas
push
or
jp
sub
and
call
adc
pop
int
dec
inc
repnz
rclb
sub
ret
andl
adc
pop
shlb
jae
mov
adc
lods
mov
pusha
loop
scas
neg
fadd
lcall
lods
jecxz
add
mov
fistpll
inc
cmpsb
xchg
shlb
insl
mov
fcomi
adc
sub
imul
lret
subl
pop
jb
or
int3
xor
add
jae
arpl
push
loop
adc
and
jb
bound
xlat
push
movl
mov
lret
dec
in
aaa
sahf
sub
xchg
jb
imul
push
scas
dec
repnz
inc
ja
add
jae
addr16
aaa
pushf
push
mov
cmpsb
bound
ja
pop
ret
push
loop
adc
and
jb
xchg
xor
add
jae
arpl
push
loop
adc
and
jb
xchg
xor
ss
xchg
or
rol
ljmp
js
jbe
xor
cmpsl
pop
sub
mov
mov
mov
jns
xchg
dec
out
dec
shl
cmpsl
and
inc
mov
xor
push
xchg
insb
clc
lret
mov
or
pop
adc
mov
shlb
or
enter
cmp
pop
ljmp
jns
sarl
sahf
push
ss
jmp
adc
mov
movsb
inc
ds
call
add
dec
adc
test
loop
out
int3
pop
outsl
pop
in
enter
mov
in
adc
rolb
lods
sbb
pushl
insl
add
out
add
jle
inc
fisttpll
stos
scas
cltd
jo
xchg
int
out
test
mov
outsl
lock
insl
aad
cli
iret
mov
test
inc
loope
jle
ds
cld
and
sub
out
cmpsb
xlat
jo
sbb
outsb
int
xor
push
mov
mov
shl
lods
pop
push
loope
stos
shrl
out
mov
jp
adc
xlat
outsl
aaa
bound
pop
daa
adc
lea
pop
mov
add
cli
pushf
mov
mov
arpl
pop
pop
mov
push
shll
frstor
mov
sub
cmp
xlat
mov
mov
or
lcall
sahf
arpl
or
int
xorl
pop
push
daa
in
ret
fwait
inc
fs
loopne
dec
jp
mov
push
fincstp
xlat
ds
inc
lds
xor
outsl
cwtl
popf
icebp
mov
test
imul
in
ret
in
mov
mov
sub
jg
sarb
add
stos
pop
test
sarb
data16
push
rcll
adc
xlat
cmp
test
ds
push
xchg
sbb
jg
fcompl
pop
ljmp
sbb
or
jp
pop
adc
push
dec
inc
es
inc
xchg
mov
aam
or
lret
dec
sahf
test
ret
mov
out
xor
ret
mov
sbb
enter
int
bound
dec
movl
fnstenv
or
mov
xor
repz
cmp
add
lret
inc
lret
bound
sbb
xchg
jle
mov
pop
or
mov
popf
imul
inc
inc
popa
push
data16
decb
sub
jmp
dec
adc
jnp
inc
test
adc
out
sub
mov
xor
fisubrl
push
add
and
incl
push
iret
cmc
sub
mov
stc
pop
je
xlat
rcrb
loope
loope
cmc
xor
repz
into
cmpb
adc
dec
scas
mov
push
push
cltd
fldl
jge
jmp
rcr
gs
or
push
push
out
imul
orl
pop
pusha
dec
push
sub
mov
add
jne
lock
lcall
enter
push
das
fcmovb
imul
jae
stos
cmp
es
jmp
push
aas
cvtdq2ps
sahf
rcrl
imul
mov
stos
and
inc
or
push
ror
sub
cmpl
fnstsw
sub
icebp
or
push
fstpl
adc
mov
mov
imull
jmp
adc
xor
mov
push
xlat
jge
inc
mov
xchg
mov
filds
adc
ret
mov
xchg
cli
cli
lods
test
gs
lods
jo
sub
xor
test
int
xor
jno
jmp
or
sarl
dec
sub
cli
pop
pop
fdiv
bound
dec
sbb
fdivl
cld
in
xchg
imul
daa
stos
scas
leave
movsb
mov
lea
jne
incb
push
repz
xchg
stc
push
or
dec
xor
xchg
mov
add
xor
jns
repnz
mov
jmp
pop
adc
rorl
sub
xchg
adc
sbb
fwait
scas
mov
xchg
push
imul
mov
push
xor
insb
sub
mov
ret
xor
cld
adc
cmpsl
and
cwtl
loop
pop
in
fsubrl
or
xor
aaa
movsb
xlat
sub
popf
xorl
push
jmp
cltd
mov
mull
or
cmp
cmp
ds
fistl
loop
rorb
fstps
jbe
and
faddl
adc
push
ljmp
mov
shl
push
mov
add
push
out
mov
fiaddl
mov
stos
xchg
jo
mov
inc
mov
out
cmp
jg
mov
mov
movl
or
popa
enter
dec
push
out
sub
nop
popf
mov
sub
cld
dec
mov
cmp
mov
lret
jne
sti
stc
mov
sub
xlat
out
mov
orl
cmp
popf
lret
xchg
sub
mov
jge
push
jg
inc
int3
adc
mov
and
push
addr16
mov
pop
es
xchg
notl
xchg
mov
cwtl
inc
mov
pop
push
pop
jnp
sbb
or
mov
shlb
pop
in
call
pop
into
pop
xor
mov
cmp
add
fdiv
xor
lcall
das
mov
mov
adc
inc
ja
rcl
mov
mov
jp
out
cmp
mov
enter
fistl
dec
fmuls
push
sub
addb
nop
lock
enter
dec
inc
xchg
bound
xchg
iret
out
mov
loopne
ret
int
dec
and
jns
jnp
fcmovb
adc
out
inc
movsb
xor
sub
out
jnp
add
scas
dec
repz
sti
and
in
cmpsb
int
cmp
cltd
jp
xchg
mov
iret
mov
and
scas
xor
movsl
and
inc
jo
scas
lock
test
adc
mov
shrl
jne
in
pop
cmp
push
test
mov
aaa
decl
mov
ret
push
outsb
xchg
jmp
sarb
ror
dec
push
sti
ljmp
in
aam
adc
xchg
fists
daa
fidivs
pusha
jmp
cld
imul
stos
jp
push
frstor
cli
stos
fistps
imul
pop
iret
lcall
and
incb
pop
jg
dec
bound
add
mov
mov
add
dec
pop
dec
or
and
sub
pushf
inc
push
cli
sarl
xchg
mov
sbb
cmc
pop
jp
movsl
ret
mov
pop
es
push
xchg
jne
cmp
xchg
pop
dec
inc
inc
xlat
or
cmp
lods
cld
stos
dec
pop
xor
es
aaa
cvtps2pi
movsb
or
sub
lods
push
dec
inc
lock
pop
and
pushf
xchg
push
sbb
mov
data16
rolb
lods
xchg
arpl
ja
jbe
push
int
ljmp
aaa
mov
sahf
cmp
repnz
or
data16
xorb
xlat
mov
repz
inc
jp
adc
xchg
jp
hlt
pop
push
dec
jle
mov
jp
jle
push
mov
stos
and
pop
shrb
repz
mov
inc
cmp
mov
or
aad
and
ds
mov
mov
fdivs
push
jns
fnstenv
sub
inc
test
hlt
fdivr
xchg
popa
xchg
fs
arpl
leave
inc
mov
push
into
scas
cli
lds
mov
lods
aas
sub
inc
dec
dec
fcmovbe
pop
sbb
push
out
mov
es
mov
add
repnz
fcmove
push
leave
lods
push
stc
sub
dec
xchg
cmpsb
xchg
mov
xchg
push
xchg
ret
sub
add
xchg
fidivl
dec
jl
pusha
mov
mov
push
jle
dec
aam
and
push
sbb
cmp
out
push
loopne
or
lock
outsb
ljmp
loop
jb
mov
inc
in
sbb
sbb
pop
sbb
movsl
push
scas
aaa
mov
sbb
pop
add
xor
mov
xchg
push
mov
inc
cmpsl
mov
inc
ret
fcoms
sub
inc
in
aaa
mov
or
fdivs
inc
push
xchg
enter
mov
mov
cmp
sub
pop
outsl
int3
pop
ret
xor
hlt
push
insl
outsl
sbb
std
repnz
addr16
xchg
add
aad
inc
xchg
mov
idiv
mov
les
inc
cbtw
popf
push
inc
pop
push
xor
mov
cmp
loope
mov
aas
xchg
fwait
pop
int3
pop
cmpsl
push
das
push
insb
push
pop
test
insb
popa
jne
adc
adc
repz
jne
pop
mov
fnstsw
xchg
jmp
aas
lods
stc
cmpsl
push
jle
jbe
aam
leave
or
mov
jg
stc
push
jl
fcompl
fimuls
dec
push
lret
push
cmp
cmpsl
cmp
jecxz
inc
jb
imul
rcrl
add
xlat
lods
xor
or
inc
inc
test
insl
mov
inc
popf
cld
lea
inc
xlat
enter
or
mov
lods
mov
inc
loope
das
les
pop
lods
sub
cltd
xchg
jne
cld
xchg
xor
push
out
dec
sarb
icebp
sub
jp
rcrl
fstp
out
mov
cmc
adc
daa
jmp
orl
lods
push
and
in
inc
jp
lods
cmp
push
in
inc
cld
inc
lcall
fildll
or
mov
inc
ss
lods
jo
mov
cmp
cmp
xlat
and
pusha
xchg
daa
stos
push
pop
add
cli
jge
loop
shll
idivl
ficompl
ret
adc
sbb
pop
loop
xor
and
and
lret
cmp
pop
mov
outsl
jl
cmpsl
push
xor
add
rolb
out
aam
negl
je
insl
ds
mov
jmp
sub
xchg
out
dec
adc
inc
xchg
xor
loope,pn
insb
decb
lea
add
mov
jp
mov
inc
cld
mov
adc
icebp
lds
cmp
movsb
pop
xorl
imull
add
les
jmp
mov
mov
repnz
mov
pushf
aas
out
insl
cmp
push
outsb
ret
repz
out
into
or
idivb
test
inc
cmpb
lock
shrl
lahf
lahf
add
lock
mov
or
pop
in
mov
mov
pop
pop
sar
stos
mov
insb
out
mov
insb
ljmp
mov
xor
mov
dec
sbb
mov
aad
pop
hlt
mov
enter
adc
push
flds
sbbl
push
lahf
stos
pop
jbe
inc
cmovge
adc
cwtl
add
push
in
dec
xchg
insl
mov
out
dec
cld
sub
dec
fcoml
std
cmp
arpl
and
addr16
sahf
das
jne
cmp
jnp
stos
dec
es
sbb
inc
lods
sub
or
jecxz
mov
mov
movsb
insl
stos
push
xor
lods
into
gs
and
ljmp
stc
mov
jae
dec
pop
out
inc
jle
popf
or
inc
loop
rolb
aad
push
add
jecxz,pn
out
mov
fdivp
cs
push
cs
in
xor
mov
and
pop
and
lret
mov
dec
adc
js
sbb
sub
jno
mov
sbb
rcl
sbb
loope
pop
int3
les
pop
pop
dec
push
dec
adc
lcall
nop
mov
rclb
fistpl
ret
sub
aaa
sbb
add
pop
mov
push
inc
leave
xchg
add
xor
aad
aam
dec
cltd
sub
mov
jnp
test
jo
fists
jns
flds
in
cmp
int
in
mov
frstor
aas
xor
add
pop
cmp
mov
popf
scas
lds
jae
loop
int
imul
push
fdiv
shr
mov
call
add
xchg
dec
insl
les
mov
popf
lods
sub
adc
lds
pop
xor
dec
jb
sbb
or
pop
jo
sbbb
insb
jno
mov
divl
xor
sub
mov
push
cmpsb
xchg
jno
outsl
pop
dec
add
lret
je
lcall
lock
leave
xchg
xchg
pop
icebp
xor
fwait
cmp
mov
ljmp
jne
cmpsl
ret
adc
cmpsl
sub
mov
and
popf
pop
dec
sub
scas
push
enter
xor
dec
cmp
sub
cmp
and
dec
sub
iret
xor
or
les
loop
loop
jae
into
xchg
sbb
mov
aaa
int
cmp
mov
pop
shr
cmp
loopne
lods
cmc
mov
lcall
mov
pop
stos
xor
sub
inc
xchg
aaa
inc
mov
inc
or
xchg
push
push
sub
pushf
out
std
pop
or
jno
xorl
pop
cmpsb
fsubs
sub
shrb
and
xchg
fcoml
shlb
jae
testb
incl
cmp
add
mov
ficoml
stc
xlat
xchg
fwait
leave
and
fs
dec
gs
add
mov
rolb
push
jo
adc
je
xlat
les
xor
mov
sarb
push
andl
cmp
movsb
jnp
sbb
pop
popw
inc
loop
pop
iret
fwait
sbb
cmpsl
and
test
pop
xchg
cmc
movsl
into
adc
adc
loope
sbb
adc
out
cmp
clc
dec
xchg
lahf
pop
mov
mov
xchg
cltd
lret
dec
lret
mov
or
aam
add
cmp
and
orb
lret
cs
cmc
sar
repnz
adc
les
lds
sub
ja
pop
lods
inc
and
aam
or
out
sti
outsb
adc
pusha
pop
xor
cs
and
es
or
movsl
jle
addb
clc
jg
lods
into
push
cmpsl
and
push
inc
nop
iret
cmc
ret
sub
add
xchg
adc
faddl
sbb
pop
fimuls
xor
out
loope
jecxz
ret
jg
add
cmpsl
fbld
insb
lods
sti
pop
test
xchg
inc
sti
xchg
lods
loope
mov
in
add
sbb
hlt
ds
pusha
test
mov
sub
repnz
mov
fdivs
xchg
and
cmp
pusha
xor
scas
das
dec
popf
inc
jns
mov
test
leave
mov
xchg
cmpl
xchg
push
aad
dec
leave
je
mov
xchg
xchg
dec
gs
sahf
cmp
add
xor
jbe
push
cmc
lock
or
sbb
adc
test
ret
sub
or
jge
cmpl
mov
pop
dec
enter
lret
pop
out
sahf
mull
mov
push
test
cmp
or
cld
mov
cmp
cmc
xor
movsl
sbb
and
lahf
mov
mov
aad
adc
xchg
les
sarl
cmp
inc
cs
dec
jp
adc
pop
scas
push
hlt
dec
jmp
cmp
jg
or
divl
scas
lea
xchg
std
lock
or
lds
shlb
or
sti
loope
hlt
xchg
sahf
outsb
xor
aas
cltd
call
mov
in
lcall
cltd
lret
sub
sbb
cli
jo
mov
test
gs
mov
loop
fisubrl
arpl
daa
orl
push
ja
add
xchg
mov
mov
int
push
jecxz
add
mov
rol
dec
not
or
addr16
add
pushf
add
ds
push
mov
lcall
inc
sbb
mov
xchg
jo
sub
add
push
outsb
sti
push
or
lea
aad
adc
push
aam
aam
xchg
ja
lea
adc
lea
sub
cmpsl
iret
out
std
outsb
seto
ljmp
add
xor
and
adc
aad
push
lds
push
xor
adc
adc
andb
xlat
pop
ret
sbb
scas
fxam
fst
std
adc
aam
lahf
sbb
out
sbb
xor
cmp
cmp
les
les
mov
les
mov
cmp
sbb
pop
int
iret
push
loopne
orb
adc
push
das
mov
jne
out
rorl
lret
out
fidivrs
adc
mov
xchg
in
addr16
xor
adc
pop
pop
and
test
mov
stc
or
movsb
outsl
mov
outsb
sub
or
fistpl
push
nop
xor
jo
dec
imul
loope
mov
xlat
xchg
rorb
ret
mov
sub
xorl
cmp
daa
add
push
mov
pop
test
scas
stos
cltd
inc
loopne
xchg
mov
pop
scas
jno
aam
jg
shlb
testb
cmp
test
add
inc
fwait
outsb
pop
adc
ja
pop
and
dec
fisubs
inc
addl
aas
lcall
or
cmc
popa
jnp
add
sbb
push
test
lcall
inc
fs
mov
mov
cmp
std
jl
or
jle
pop
test
loop
mov
insb
xlat
fcoml
inc
call
lea
aas
scas
mov
ljmp
test
cli
dec
add
data16
outsb
adc
xor
xor
mov
add
jns
or
in
or
sub
cmp
xchg
cmp
push
fbld
or
lods
push
push
lahf
sub
bound
sub
xchg
jle
jp
das
mov
pop
add
int3
je
xor
add
fwait
pusha
popa
es
iret
mov
lds
xchg
cmp
lods
sbb
and
sub
and
shrd
scas
jb
ja
xchg
lods
and
hlt
jae
and
cmpsb
ret
pop
iret
movsl
mov
insb
lahf
gs
cmpsl
mov
lods
movsl
xchg
or
adc
cmp
dec
call
xchg
jo
rclb
push
lcall
or
mov
mov
loope
xchg
sub
lret
cmp
mov
cwtl
mov
cmp
add
push
test
shrb
sub
sbb
dec
jmp
inc
xor
mov
pop
mov
jb
clc
dec
inc
dec
mov
fldcw
jnp
arpl
or
outsb
xchg
hlt
pop
xchg
dec
sbb
mov
mov
repnz
out
sub
sub
sbb
or
roll
cmp
add
adc
mov
pop
shrl
loope
iret
fdivs
mov
pop
fisttpl
mov
dec
pop
fisubrs
ror
fwait
pushf
enter
mulb
shll
out
mov
lret
es
push
push
fnstenv
and
and
inc
lcall
aaa
mov
xor
or
cwtl
cmp
daa
mov
lock
push
lods
lock
cs
pop
call
insl
jmp
sarb
mov
pop
push
aad
xchg
mov
jnp
mov
fidivrl
mov
loopne
out
mov
std
pop
pop
loopne
add
and
cmp
pusha
lcall
sbb
push
adc
js
jge
xchg
or
sarl
fidivrs
push
int3
repz
dec
lcall
sbbl
scas
mov
mov
fs
adc
mov
mov
and
xchg
inc
push
or
mov
shlb
xchg
mov
nop
sbb
dec
ja
int
in
jb
lret
repnz
pusha
call
or
cmp
test
mov
clc
adc
adc
jg
pusha
push
aas
in
mov
mov
pop
or
mov
jns
mov
mov
test
jge
mov
rorb
out
aaa
xchg
sbb
sub
dec
roll
jno
lret
adc
sbb
cmpsb
aam
add
adc
inc
int
xchg
push
inc
push
dec
pop
repz
or
jecxz
fs
and
push
dec
iret
inc
sub
dec
mov
rorl
jle
mov
mov
in
das
or
dec
and
aas
fbld
popf
mov
push
shl
sarl
inc
cltd
fmuls
and
or
sub
repz
mov
mov
arpl
sbb
ret
cwtl
push
fildl
mov
bound
mov
test
cwtl
pop
dec
enter
fwait
push
loopne
cli
fs
out
push
bound
stc
pop
ds
sbb
push
in
aaa
cltd
xorb
xor
mov
fldt
fwait
jge
push
mov
shll
test
daa
pop
mov
rorl
int3
rorb
mov
sti
movsl
ss
imul
xchg
and
iret
test
ret
mov
shll
and
test
popf
add
cmp
dec
jge
icebp
add
lea
int
les
test
or
cmc
inc
add
cwtl
in
sbb
mov
mov
arpl
push
loop
adc
and
jb
xchg
xor
add
jae
arpl
push
loop
adc
and
jb
xchg
aaa
andb
adc
arpl
push
loop
adc
and
jb
xchg
xor
pop
shlb
jecxz
shl
mov
cwtl
xchg
and
and
sub
cmp
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
xchg
dec
test
aad
mov
aad
lret
lds
in
xor
jne
gs
jne
icebp
mov
movsl
fsts
vpmaddwd
in
adc
xor
inc
mov
push
gs
sub
lea
lret
in
movsl
std
jmp
in
jno
es
pop
pusha
inc
add
and
cmp
mov
int3
mov
int3
push
rcrl
lds
dec
into
add
mov
test
adc
popa
push
jns
jns
xor
jle
sbb
push
int
add
sbb
jne
lcall
lret
sbb
test
std
mov
add
addb
gs
in
movsl
push
xchg
dec
mov
aad
and
adc
add
cli
stos
es
lcall
mov
cmp
aad
sbb
outsb
les
push
pusha
add
lea
mov
mov
pop
dec
sub
sub
or
rorb
xor
xor
push
adc
push
into
mov
mov
test
in
int3
inc
sub
adc
jb
push
gs
shl
movsl
rcll
cmpl
inc
push
sbb
ss
add
fmul
loopne
in
cmpb
test
xor
pop
sub
sbb
and
stc
hlt
jmp
lock
in
adc
adc
inc
gs
gs
xchg
mov
movsl
mov
movsl
test
cmc
vpmaddwd
in
adc
adc
inc
gs
gs
xchg
mov
and
gs
sbb
mov
scas
mov
jb
dec
aas
jnp
jmp
and
add
and
or
aad
fs
lret
out
sub
fst
jg
cli
mov
mov
xchg
test
push
insl
xchg
jo
ds
mov
sahf
dec
insb
fistl
in
mov
pop
rorl
out
pushf
ja
mov
cwtl
out
mov
stos
and
data16
dec
jno
push
mov
add
inc
sbb
mov
out
test
ret
xchg
ja
popf
lret
mov
adc
das
inc
mov
dec
mov
es
fwait
hlt
les
or
movsb
xor
jp
jae
das
xor
adc
ret
push
add
imul
dec
xchg
dec
xchg
push
add
loope
mov
insb
lahf
mov
cmc
and
mov
xchg
je
sbb
stos
jno
hlt
int
stos
and
jp
ret
mov
jo
mov
xchg
cmc
and
jp
das
push
push
fstpl
les
mov
jle
mov
pop
gs
repz
xorb
jb
rcll
ficompl
scas
sub
rol
cmp
mov
shld
aam
mov
pop
add
jge
lret
shlb
sbb
sarl
sub
clc
xchg
mov
clc
xor
pop
jmp
in
lods
loope
add
rcrl
loopne
sahf
data16
xor
mov
fcompl
pop
pop
imul
rcr
lcall
pusha
lds
testl
mov
push
xchg
ja
push
dec
mov
rcrb
jae
inc
mov
cltd
dec
cmpl
int
xchg
fcmovu
xlat
nop
fcompl
sbb
mov
jnp
or
bound
nop
sub
cmp
rcll
ss
adc
outsb
mov
mov
mov
and
out
jbe
insb
xor
pushf
idivb
movsb
push
sbb
lret
aam
mov
add
mov
pop
cmpsb
sub
mov
notb
xchg
mov
xor
insl
jle
addr16
test
dec
ficoms
stos
mov
cmpsl
pop
sub
xor
enter
adc
xor
out
fisttps
out
and
fidivrl
fldenv
inc
cmp
lret
rclb
and
cmc
fldcw
lods
outsb
push
call
std
mov
lret
je
repz
lea
cmp
mov
dec
jns
imul
inc
or
sub
push
jns
or
fs
and
shll
dec
jg
mulb
popf
pushf
cmpsb
in
jo
testl
cmc
inc
mov
add
cmp
and
out
xchg
sub
sub
sti
mov
out
rcll
add
fcomip
jb
mov
out
mov
add
jmp
mov
add
inc
xchg
loopne
imull
shrb
in
push
aam
push
iret
jl
pusha
mov
js
cmp
cmpsl
nop
jb
lahf
pop
and
jle
add
inc
ss
fsubr
int
push
mov
fadd
fcmovbe
filds
and
push
ret
xchg
pushf
lcall
pop
or
test
sub
pop
push
push
xchg
add
cli
pop
sub
mul
rclb
add
and
xor
into
mov
insb
jg
imul
mov
jns
sti
ror
icebp
adc
movsl
outsb
xor
lret
sub
jno
fsubp
arpl
push
push
out
mov
stc
jp
stc
push
int3
add
movsl
pop
xchg
lds
cmpsl
or
mov
cld
mov
jb
mov
push
push
loope
xchg
or
in
push
dec
push
and
cmc
outsl
out
roll
inc
mov
in
fwait
dec
push
vcvtdq2ps
in
cmpb
stc
xchg
outsl
aaa
dec
cmpsw
mov
ret
jg
sub
sar
jecxz
mov
test
std
mov
lods
jbe
inc
mov
push
pop
inc
and
xchg
lret
sbb
push
negb
test
in
lods
push
xor
in
nop
and
movsl
or
fwait
test
fbld
shlb
pop
testl
fimull
inc
push
push
mov
mov
or
daa
add
sbb
sub
sub
scas
std
in
adcb
push
adc
jne
insl
or
xchg
daa
xchg
or
cmp
out
sbb
mov
mov
inc
ficompl
daa
sbb
sbb
mov
adc
daa
inc
dec
sub
push
sbb
mov
inc
inc
xchg
cmp
das
outsl
inc
icebp
xor
pop
insl
mov
lock
push
pop
cmp
mov
popf
popf
mov
shrb
mov
sar
push
ficoms
ljmp
sbb
add
stos
daa
das
or
dec
cmp
arpl
test
cmc
fstps
push
mov
xchg
pop
xchg
cmp
mov
sti
xchg
arpl
xor
gs
imul
cmp
pop
mov
ret
shl
mov
xlat
push
sti
je
insl
std
cs
aam
pusha
stos
lret
aaa
adc
mov
fcmovne
insb
mov
andl
les
aaa
or
fs
pusha
andb
add
fisubl
inc
xchg
aam
xor
mov
outsb
push
out
mov
enter
sub
les
add
fxch
push
insl
nop
xor
jecxz
je
mov
ja
test
sub
mov
int
in
push
and
pop
das
push
cs
sbb
rorl
fdivrl
mov
jns
dec
bnd
mov
pop
add
shlb
mov
adc
cmp
push
push
mov
negl
lea
scas
push
jmp
inc
adc
out
mov
jae
mov
insb
call
pop
inc
call
push
mov
add
xlat
jle
dec
mov
mov
and
hlt
xbegin
movsl
jo
ret
loopne
xor
lahf
ret
sub
int3
mov
imul
repz
mov
in
mov
into
scas
jge
inc
in
mov
xorb
push
fmull
aad
in
xor
mov
fptan
jg
jmp
cwtl
rorl
filds
sub
clc
sbb
sbb
ret
std
fcmovnb
or
ds
std
out
and
sti
push
int3
out
inc
jo
mov
testb
mov
add
test
sbb
jo
inc
pusha
pop
jae
sbb
push
inc
adc
arpl
push
test
loopne
lock
sub
or
ljmp
and
aad
xchg
or
aaa
jmp
notb
mov
pop
add
shll
cmp
in
cmpsb
cmp
lretw
mov
das
jnp
js
push
popaw
test
cmp
jnp
imull
mov
jno
mov
sbb
subl
sbb
cmp
pop
jle
popa
int3
xlat
rolb
sub
push
sub
daa
shrl
sub
out
inc
scas
lret
leave
push
stc
subl
cmp
lret
icebp
dec
nop
rcrl
dec
add
jo
push
sub
pop
movsb
inc
jns
shll
fwait
out
lcall
pop
and
fdivrl
js
dec
cli
mov
xor
shr
jg
and
mov
in
jnp
mov
xor
xor
jle
pop
or
cmc
xchg
adc
jmp
cltd
ja
jno
mov
sbb
lcall
insl
and
scas
inc
cltd
mov
sbb
fdivr
mov
repnz
push
outsb
sbb
mov
mov
xchg
jmp
xor
lds
adc
sahf
addr16
shll
jmp
test
outsb
fisttpl
sub
inc
faddl
xchg
cli
cmp
xchg
push
icebp
push
push
add
xor
out
mov
wbinvd
cld
in
rclb
jmp
das
rcll
out
aam
jne
dec
or
pop
push
push
sbb
pop
mov
mov
xor
mov
and
push
jno
push
jae
in
outsl
pop
lea
lcall
lods
lds
or
idivb
mov
xchg
clc
inc
fs
pop
outsl
andl
sbb
test
stc
sbb
xor
jo
aas
stos
mov
adcl
sbb
stos
xor
jno
jecxz
add
inc
xor
sti
xchg
je
xor
nop
dec
jne
mov
inc
mov
fidivs
call
cwtl
arpl
dec
fisubrl
jp
xor
push
inc
add
scas
jb
clc
adc
pop
and
addb
fadd
mov
lds
hlt
pop
sbb
lcall
int
test
and
or
add
mov
clc
loop
stos
mov
fcmovnb
cs
pavgw
pushw
jl
sub
dec
add
out
fwait
out
repz
das
jg
divb
mov
lock
test
adc
filds
mov
mov
arpl
xlat
mov
inc
add
push
mov
or
adc
pop
or
mov
jmp
inc
adc
sbb
lods
pushf
fimull
adc
push
outsl
test
push
bound
cli
push
pusha
xchg
int
insb
adc
test
cmc
cmp
mov
out
addb
into
lods
push
adc
insb
cmp
int
dec
stos
jae
in
add
icebp
aas
dec
sub
sub
sbb
xor
testl
filds
fs
pushf
jbe
push
hlt
jl
and
shrb
fcoms
mov
sbb
insl
outsb
sbb
and
mov
dec
adc
insl
lcall
dec
es
cmpsb
mov
mov
mov
dec
scas
outsb
cld
cmpsb
mov
pusha
inc
push
push
fdivr
clc
push
dec
std
add
cs
outsl
insl
insb
dec
sbb
sahf
mov
cli
insl
clc
inc
mov
mov
inc
hlt
js
xor
adc
lahf
fidivl
sub
mov
clc
out
sti
cmpsl
sub
push
push
inc
sarb
pop
arpl
jae
add
in
jmp
lcall
sarl
stc
out
rep
jo
cmpsb
out
enter
xchg
dec
push
stos
test
es
mov
test
data16
test
pop
mov
mov
scas
dec
aam
xchg
xchg
stos
xchg
xchg
jno
xchg
in
std
pop
arpl
andb
mov
mov
andps
jecxz
addb
jb
sub
xchg
and
stos
pushf
push
icebp
and
jae
jb
xor
sub
daa
ja
dec
nop
mov
mov
sti
push
mov
and
cmp
fisttps
std
adc
jecxz
popf
cmp
cmpb
aad
mov
cltd
in
xchg
adc
mov
je
jns
das
divb
out
and
jge
sub
jo
sbb
or
push
fmulp
pushf
flds
adc
testl
rcrl
sub
and
dec
pop
in
cld
xchg
pop
mov
inc
pop
aas
pop
leave
mov
lret
fistpll
mov
in
adc
pop
das
pop
fwait
rorl
addl
gs
mov
xchg
sarl
inc
lcall
out
pop
adcl
pop
jno
sti
mov
out
fsubs
dec
fsubs
into
mov
cmp
mov
push
dec
lahf
fsts
cmpl
mov
andb
scas
fwait
push
popa
jg
sbb
inc
pop
dec
lods
ja
sbb
pop
xchg
xchg
adc
shlb
and
mov
popa
push
push
stos
add
mov
les
int
js
in
push
mov
cli
jecxz
ja
scas
mov
dec
jl
add
push
mov
movsl
xor
cld
insl
lock
into
int
out
pushf
jae
push
or
ds
gs
dec
cli
mov
fisubrl
pop
repnz
xchg
sahf
or
rcl
sub
scas
xor
cmpsl
sbb
cmc
and
sbb
in
push
scas
sahf
jge
xchg
les
in
and
mov
out
sti
call
inc
dec
cmp
mov
adc
popa
cmp
and
and
sub
mov
cmc
mov
pusha
pusha
push
sahf
scas
rcll
add
insl
nop
jl
adcb
dec
int
and
enter
mov
adc
mov
and
dec
les
xor
adc
shl
push
fsubs
cmp
push
xor
xchg
sub
sti
mov
adc
or
data16
xchg
fdivr
insl
decl
sbb
cmp
cmp
sub
outsl
scas
or
fwait
and
xchg
lods
loope
lahf
add
jp
daa
lods
pop
inc
addr16
das
sbb
fcmovb
push
and
or
mov
push
cmp
inc
mov
jbe
push
mull
addr16
scas
fiadds
inc
jmp
lods
sub
popa
hlt
and
nop
add
pop
in
xchg
cmp
cmpsl
or
insl
call
inc
xchg
push
loopne
jmp
out
push
mov
jbe
or
xchg
out
jp
mov
out
mov
sar
add
lcall
adc
xchg
xlat
aad
gs
push
loope
xchg
lcall
dec
movsb
rcrb
test
cmpsl
jbe
aaa
test
mov
cmpl
sub
inc
pushf
lret
sub
dec
arpl
xchg
imul
sub
fdivrs
js
xchg
mov
out
aaa
std
clc
adc
mov
ja
int3
test
das
nop
aaa
cmp
bound
sbb
xor
inc
fs
mov
adc
or
lds
dec
xor
pop
test
insb
rcrb
push
mov
insb
es
imul
subb
dec
jle
lods
adc
mov
push
adc
bswap
xor
cmp
xorl
das
fwait
out
sarb
jp
inc
jnp
shlb
into
fisubrs
les
inc
cwtl
jae
adc
sub
gs
push
enter
add
cli
mov
jmp
push
subb
mov
lods
dec
ret
jmp
sti
lods
inc
hlt
mov
inc
pop
xlat
or
jecxz
js
pop
adcl
mov
jge
movsb
add
add
mov
xchg
inc
adc
cltd
jbe
sahf
jp
dec
push
mov
ljmp
sbb
or
mov
movsl
movsl
xlat
insl
cmovne
std
sahf
loop
push
mov
pop
xor
mov
enter
mov
ret
jp
test
test
mov
fpatan
js
jp
stos
cmc
cli
les
cld
cli
adc
jbe
jne
cmc
inc
mov
or
and
test
lock
xor
aad
mov
cltd
frstor
mov
cmpsl
push
mov
inc
mov
pop
jp
lahf
clc
xor
xchg
and
sbb
inc
mov
mov
test
mov
cltd
inc
stos
filds
cmpb
arpl
dec
mov
sub
popl
fisubs
or
inc
add
pop
lret
push
cltd
or
adc
xchg
fisubs
sbb
dec
pop
ret
sub
int3
inc
xlat
mov
sti
addb
je
sbb
sub
adc
cmc
jb
adc
stos
hlt
sbb
cmpsb
inc
push
out
jge
jnp
xchg
sub
ds
ficoml
lcall
popf
add
lahf
test
push
in
sbb
cltd
shll
xor
add
add
add
imul
stc
js
dec
jle
cmp
jne
loopne
subl
push
push
sub
in
sbb
push
xchg
bound
decb
leave
in
scas
ficoml
inc
addr16
out
add
fsubrs
pop
cmp
add
pop
test
test
push
cmpl
xlat
pop
sbb
hlt
sti
in
cld
mov
pop
int
aad
push
sbbb
test
cltd
jae
addl
ret
jae
shr
dec
fidivl
fldenv
xchg
mov
add
lret
push
cmp
repz
xor
inc
imul
ljmp
inc
push
lock
sbb
jge
xchg
push
inc
mulb
rcll
xor
or
clc
inc
inc
mov
bound
lea
jns
and
xor
mov
or
mov
pop
mov
dec
mov
fwait
fxch
mov
or
repnz
ja
push
stos
insb
cmp
cwtl
mov
add
cmp
hlt
jae
pop
bound
adc
jns
imul
adc
mov
lahf
mov
adc
xchg
icebp
mov
jmp
mov
aas
fimuls
ja
orb
push
jge
mov
testb
fstps
add
push
pop
pop
fimull
lods
pop
pop
mov
inc
cmp
out
pop
pop
mov
imulb
push
aam
aam
mov
push
rolb
jno
and
mov
repz
sub
add
subb
xor
jns
sub
jmp
mov
fisttpl
xor
fcmovnb
inc
mov
cmc
and
std
xchg
xchg
or
testb
mov
or
out
inc
jmp
xchg
xor
popf
idivl
pop
scas
cmp
insb
dec
xchg
cmp
xor
out
loopne
adc
adc
nop
out
pop
rcrl
or
and
mov
and
scas
jmp
popf
cmpsl
mov
add
jmp
jnp
fsts
mov
pop
push
mov
das
cmp
popf
or
ds
mov
xor
fwait
adc
xchg
mov
fldenv
gs
js
push
js
jg
pop
imul
add
je
and
lea
test
shll
add
ljmp
xor
pop
test
pop
and
jl
push
xlat
inc
out
pushf
inc
sbb
lcall
into
mov
les
jbe
sbb
arpl
cmp
cmpsb
call
or
dec
rcll
sahf
pop
xchg
mov
jmp
xlat
into
lret
shrl
test
mov
sbb
mov
pop
add
xlat
add
sbb
mov
adc
in
push
mov
mov
jns
out
rolb
push
push
pusha
mov
cmpsb
aaa
inc
xchg
cmp
lods
addl
add
jecxz
in
inc
mov
sub
stc
cwtl
or
test
out
cmp
dec
jo
inc
icebp
or
add
mov
mov
jmp
xchg
loopne
inc
cmc
pop
inc
cwtl
pusha
repnz
cmpsb
mov
cltd
or
shlb
sbb
out
popf
ret
xchg
cmp
imul
es
sti
push
sub
adcl
push
test
mov
pushf
dec
dec
cltd
pop
and
mov
lock
xchg
fs
aad
jle
fmuls
mov
sbbb
mov
sbb
mov
sub
rorl
push
xchg
xchg
mov
stc
fstpl
dec
out
cs
push
push
sahf
repz
out
enter
and
ficompl
jmp
sbb
push
cs
sbb
add
push
rorb
xchg
jecxz
sub
cmp
aaa
pushw
xor
mov
mov
lods
mov
das
dec
mov
add
xor
pop
fdivrl
cli
and
iret
xor
lock
rcrb
inc
and
test
mov
fsubrl
xlat
pop
out
pop
mov
arpl
lahf
xchg
dec
out
fcomi
je
and
cmp
jle
lock
mov
inc
mov
idivb
sbb
sbb
mov
xor
fs
cld
jne
cmpb
adc
fidivs
cs
jle
ljmp
sti
mov
nop
int
stos
in
mov
cmp
scas
inc
dec
pop
xchg
shld
out
aad
jnp
dec
jnp
into
negl
and
stos
xchg
testb
test
das
imul
mov
lock
lods
push
cmp
sub
cmc
mov
icebp
inc
mov
mov
fstpl
dec
shll
xchg
push
roll
fcoms
sbb
pop
inc
adc
pushf
fwait
ss
push
adc
into
shlb
push
cmp
fucomp
das
in
mov
xor
call
jae
aas
jmp
fistpll
int
pop
rolb
daa
sbb
cmp
filds
fisubrl
out
push
fldenv
pop
fdivl
cmc
xor
repz
lcall
jae
pop
adc
lret
sub
sbb
movsl
bnd
test
cmc
vpmaddwd
in
adc
adc
inc
gs
gs
xchg
mov
movsl
mov
movsl
test
cmc
vpmaddwd
in
adc
adc
inc
gs
gs
xchg
mov
movsl
aad
movsl
test
vpmaddwd
and
and
push
jne
gs
lea
mov
movsl
out
xchg
test
cmc
aad
lds
adc
int
mov
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
loop
push
ret
mov
add
jo
xchg
repnz
loop
rcll
inc
mov
mov
adc
push
ret
xor
add
repnz
loop
mov
ret
push
mov
adc
jmp
fiaddl
xor
add
mov
cmpsl
daa
shrl
inc
mov
in
jge
scas
bound
mov
popa
xor
mov
xchg
push
mov
std
or
loop
js
lret
add
cwtl
jge
insl
xchg
dec
lods
dec
inc
pop
insb
lcall
cltd
pop
icebp
and
cltd
mov
iret
repnz
lods
or
bound
mov
bound
xor
add
loop
and
sarl
icebp
mov
std
mov
addr16
or
fisubl
adc
xchg
lea
and
and
push
jge
mov
pop
shrb
ljmp
or
cmpsl
mov
mov
adc
cmc
push
fildl
xor
add
rcrb
dec
mov
mov
adc
loop
cmpb
or
jno
inc
rcll
negl
jb
inc
cmpsb
aaa
movb
ljmp
jle
mov
fwait
es
mov
adc
jp
mov
daa
cmpsl
push
stc
push
shll
ret
data16
dec
repnz
and
repnz
jb
inc
ret
and
adc
push
ret
xor
add
rolb
push
mov
mov
adc
loopew
inc
adc
inc
sub
stos
gs
adc
mov
ljmp
lock
int3
pop
mov
jne
cmc
cmp
clc
cwtl
dec
or
movsl
dec
mov
or
icebp
sub
mov
ret
divb
gs
insl
or
and
dec
push
cmpsb
daa
push
adc
or
mov
dec
and
push
js
daa
and
dec
mov
js
push
aaa
push
data16
and
xorb
and
arpl
mov
sub
push
das
or
stos
jns
and
xchg
add
in
movsl
xor
add
add
lock
lods
out
xchg
int3
and
jnp
imul
aas
xchg
cmp
stos
xchg
mov
push
enter
pop
cmpsb
mov
sub
test
or
insb
pusha
sub
jle
push
adc
add
sbb
ds
lahf
jo
mov
test
dec
jno
cld
sahf
pop
andb
sbb
push
dec
lea
loopne
cmp
jae
and
cmp
imul
cmpb
sub
inc
adc
insl
mov
sbb
lahf
lock
sub
inc
fldenv
mov
or
lods
dec
cmp
in
fstl
jecxz
push
out
out
clc
mov
enter
inc
add
out
ja
dec
out
dec
sbbb
add
xchg
pop
mov
pop
stos
push
insb
inc
aam
mov
or
adc
arpl
xchg
aas
dec
outsl
mov
test
lock
mov
cmp
xchg
mov
repz
and
and
push
lret
push
sub
jp
cli
fdivl
push
push
fs
jbe
lcall
jecxz
data16
mov
push
inc
aas
les
xchg
push
mov
add
ja
loop
cwtl
nop
ret
adc
data16
test
in
pusha
outsl
imul
jge
cmpsb
or
test
or
mov
xor
jg
hlt
adcb
add
inc
xorb
test
in
pop
shrl
out
sub
push
xor
inc
aas
cltd
mov
movb
mov
bound
mov
pop
je
adc
mov
mov
insl
mov
popa
movsb
loop
lret
in
std
sub
outsb
mov
adc
enter
loop
cmp
inc
add
or
sbb
xchg
sbb
cmp
sbb
jmp
add
in
shl
movsb
out
push
pusha
aas
push
inc
pop
sbb
cltd
insl
fsubs
outsl
sub
mov
xor
mov
fsubrl
sbb
jle
adc
pop
mov
pop
sbb
add
andl
adc
cmp
dec
jbe
and
pop
out
adc
add
or
js
iret
push
das
lods
mov
fidivs
add
es
popa
rcl
xor
inc
les
push
dec
sub
xlat
jae
xchg
cmp
popa
push
incb
stos
and
sbb
movsb
mov
mov
notl
push
fdivs
pop
ss
push
test
repz
xor
dec
cmpsl
jns
mov
and
mov
loope
mov
jg
dec
fstl
subb
push
cmp
xchg
push
adc
fs
das
es
test
cmp
outsb
lods
mov
les
jl
loop
adc
in
cmp
int
adc
push
jns
cmp
mov
mov
sub
mov
lds
add
cmpsb
sub
dec
sbb
inc
cmp
stc
les
popa
lret
inc
dec
addr16
push
or
pop
cmpsb
iret
filds
loop
hlt
or
xlat
lret
xor
popf
fisubl
sti
insl
hlt
mov
aas
adc
pop
inc
jae
dec
xchg
dec
xor
ds
stos
stos
and
jo
call
jecxz
mov
lods
add
cmp
ds
or
pop
into
sbb
pop
jbe
pushf
jle
fnstsw
sbb
mov
outsb
scas
push
in
pushw
jecxz
sbb
pop
es
shl
imul
xchg
xchg
cmp
subl
out
dec
pop
and
lds
sub
sbb
insl
or
bound
mov
leave
or
das
cmpsb
int3
jge
cmp
sbb
xchg
clc
mov
inc
or
repz
pushf
push
push
ret
arpl
sbb
fcmovne
dec
dec
xchg
jnp
add
jmp
jne
decl
cwtl
mov
rcrb
pusha
cs
sub
movsb
cli
jne
and
hlt
push
xor
push
insl
push
pop
fsubl
scas
xchg
shll
dec
mov
cmp
pop
sti
imul
mov
or
aas
rdmsr
inc
pop
hlt
enter
xor
push
stc
imul
cmp
or
xchg
push
mov
scas
pop
sbb
pop
push
jb
ljmp
ljmp
sbb
mov
insl
dec
int3
out
jmp
jb
pop
xor
jecxz
adc
xchg
fs
sbb
inc
and
fwait
jge
push
in
test
mov
sub
jo
stc
gs
inc
ret
pop
lret
inc
jmp
fidivrs
sti
xor
inc
dec
insl
jg
cmp
mov
mov
sbb
leave
sbb
fucomp
adc
rclb
jns
js
mov
jb
push
imul
bound
sbb
int
add
mov
fiadds
dec
sub
sbb
in
pop
out
adc
jbe
sarl
ss
leave
xchg
add
lahf
mov
xchg
int
in
and
jp
add
xlat
imul
mov
push
cmp
arpl
and
lea
or
pop
andl
shrl
xchg
and
dec
movsl
push
dec
adc
push
shrb
pop
js
push
sbb
jae
iret
inc
sahf
mov
fnsave
mov
sbb
movsb
insb
out
add
cltd
call
jmp
fisubl
sub
pop
in
cmp
test
fsubs
or
pop
repz
outsb
adc
sub
mov
jg
cmp
popa
idivl
xchg
cmpb
lea
cmpb
lret
lcall
fcoml
jno
test
mov
arpl
or
mov
pop
mov
xor
or
js
xchg
hlt
in
shr
xor
out
push
scas
repz
mov
dec
sbb
sbb
gs
adc
into
cs
cmp
inc
inc
adc
jnp
and
pop
repnz
ds
jge
mov
inc
mov
ss
loop
adc
xchg
jo
xchg
push
cmp
jl
xor
adc
xchg
pop
pop
adc
insb
mov
mov
out
push
addr16
or
cs
fisubrs
sbb
mov
into
jno
pop
mov
repnz
sti
aad
std
loopne
in
into
xchg
lock
jge
imul
gs
ficoml
sbb
dec
ljmp
pushf
cmp
test
les
mov
cmpl
out
mov
pop
mov
hlt
inc
das
movd
or
enter
movsl
into
xchg
call
sub
arpl
pop
repnz
sbb
and
inc
inc
out
mov
repz
mov
lret
mov
push
and
cmc
pop
ret
sbb
mov
loop
mov
xlat
gs
hlt
lahf
int3
mov
scas
dec
xor
or
sbb
lcall
fcmovu
aad
xchg
xchg
stos
xchg
aam
iret
sub
je
orl
loop
push
sahf
mov
fidivrl
push
jge
daa
pushf
cmpsl
aam
sub
sahf
inc
jecxz
mov
mov
dec
loopne
cmp
or
icebp
repz
stc
sub
mov
xor
mov
and
pop
adc
push
pop
push
ljmp
ds
repz
scas
movsb
rolb
vshufps
in
pop
xchg
test
subb
pop
out
sub
push
or
shll
add
sub
pop
hlt
loope
lock
popf
out
idivl
mov
addr16
xchg
or
xlat
rorb
not
ds
mov
pushf
add
fistpll
daa
inc
lods
loopne
jmp
or
adcl
xor
daa
add
add
add
cmp
or
inc
mov
or
clc
xchg
xchg
lock
es
xchg
jo
mov
sbb
push
sahf
jns
imul
test
and
or
ret
push
cwtl
pop
cmp
sbb
roll
inc
inc
or
dec
push
and
or
dec
add
decl
sti
iret
das
mov
jp
xor
mov
mov
sub
je
movsl
mov
in
sbb
mov
mov
sbb
aas
cmp
mov
xchg
into
or
int3
lcall
jo
nop
stc
in
hlt
cmp
aam
mov
jl
sbb
pop
adc
jg
in
mov
mov
dec
xor
mov
xchg
cwtl
iret
push
ss
push
xchg
and
mov
and
leave
ds
fnstsw
aam
cmp
call
xchg
adc
sub
movsl
adc
jae
sub
mov
dec
enter
test
xchg
pushf
xor
rcrl
cmp
inc
dec
fisttpll
hlt
xchg
arpl
jnp
inc
lea
dec
jnp
sub
ret
mov
out
dec
cmp
sub
out
sub
sbb
sbb
ds
and
fisubrs
inc
mov
and
cmp
clc
jg
ret
mov
frstor
jecxz
stos
push
xchg
nop
popf
dec
imul
push
inc
pop
jo
nop
sahf
add
int3
fwait
popf
mov
xchg
andb
nop
fidivrl
jae
adcb
lea
xchg
ret
mov
cwtl
mov
adc
icebp
das
fimuls
mov
push
mov
jmp
mov
data16
mov
cs
clc
orb
in
sbb
mov
pop
push
and
fisubs
gs
shl
dec
inc
xlat
mov
cmp
cltd
jmp
stos
cltd
cwtl
cli
xchg
stc
push
add
int
mov
cld
rorl
add
fmulp
dec
mov
add
mov
lods
roll
movsb
sbb
cltd
cmpsl
xchg
aas
pop
sarb
adc
and
rorb
test
cltd
loopne
repz
ljmp
js
or
xchg
sbb
add
adc
test
xorl
pop
stos
mov
shl
sbb
sbbb
data16
sar
in
fwait
cli
jbe
int
dec
jnp
push
jl
icebp
inc
dec
out
jge
std
test
into
jmp
int
inc
xor
cmp
sar
fstl
push
aam
icebp
adc
pushf
sbb
bound
into
xchg
imull
add
repz
js
xor
aas
mov
frstor
or
cwtl
cld
es
inc
stos
sub
in
push
sbb
mov
out
es
adc
lret
pop
mov
push
push
insb
std
xlat
inc
mov
lock
xor
mov
fstl
pop
incb
mov
mov
popf
push
hlt
ljmp
shll
push
lret
sti
push
je
xor
adc
sarl
lock
push
adc
subb
inc
cmpsl
shll
jae
fstpt
stos
cmc
aad
bound
jge
enter
xor
adc
xor
cmpl
mov
mov
cld
lods
xchg
lret
popf
lea
pop
leave
or
sahf
dec
add
xchg
pop
insb
sbb
outsl
jne
lret
shlb
repnz
pop
jnp
out
cmp
outsb
push
and
mov
dec
pop
xor
test
lea
in
mov
push
aam
incl
mov
loopne
adc
dec
sbb
int
mov
repnz
sbb
mov
xor
mov
xchg
adc
xchg
xor
test
dec
movsb
in
pop
xor
xor
inc
insb
mov
xchg
je
callw
dec
push
push
int
jbe
dec
sarb
adc
cwtl
inc
ss
push
xchg
dec
mov
lods
push
cmp
xchg
insb
mov
fwait
dec
pop
sbb
pushf
nop
cmp
leave
mov
xchg
test
aam
sbb
sbb
mov
hlt
sbb
lea
int3
aad
pop
das
shlb
jecxz
inc
push
loope
out
in
hlt
js,pt
ret
test
das
xchg
rol
out
xchg
sub
insb
clc
sub
orl
test
mov
daa
jno
cwtl
mov
pop
out
cmpsb
fisubs
test
fisubrl
repnz
sti
xchg
dec
xor
mov
xor
mov
inc
rolb
xor
fwait
cli
addb
imul
hlt
aam
cmp
push
mov
mov
lret
xor
hlt
mov
xchg
mov
sti
push
sar
out
insb
xor
jne
test
testl
pop
cld
push
out
loope
jb
mov
stos
in
mov
inc
add
adc
cmp
imul
add
fcom
out
adc
sbb
inc
or
inc
pop
inc
sbb
into
inc
addb
mov
call
mov
mov
out
xchg
sub
xchg
ss
in
or
jb
dec
xorl
xchg
pop
or
and
sbb
cmp
mov
jo
xor
cwtl
test
jg
dec
push
adc
sbb
rclb
imul
stos
sbb
je
aas
jns
test
in
mov
sti
sub
mov
inc
and
in
dec
mov
xchg
lea
dec
mov
pop
pop
shl
dec
ja
outsl
cmp
out
mov
mov
add
mov
outsl
loope
lret
jg
addl
jg
movsl
add
mov
jle
push
mov
pop
cmc
xor
push
cmp
fcmovnb
gs
mov
enter
mov
out
mov
mov
movsl
xchg
inc
mov
sahf
pop
fstps
clc
lahf
push
movsb
rcll
jns
sub
imul
push
iret
stos
jmp
outsl
and
mov
hlt
adc
jecxz
cmp
mov
clc
lahf
rcl
xor
xor
jmp
xchg
xchg
aam
lods
imul
and
and
mov
mov
mov
cld
dec
and
adc
add
sbb
fcoms
push
and
adc
jl
imul
pop
push
fnstsw
add
jg
enter
push
stos
xchg
mov
test
cmpsl
cmpsl
push
jbe
sbb
je
cmp
lahf
push
pop
cmpb
sti
pop
idivl
cmp
inc
jb
xchg
cld
bound
nop
mov
in
enter
in
inc
mov
mov
je
adc
popa
or
adc
pop
fmull
insb
sub
mov
xchg
xlat
push
lahf
movsl
xchg
mov
inc
sub
xchg
mov
loope
sub
lcall
stos
repnz
hlt
mov
in
sbb
lret
inc
mov
std
sar
sti
mov
cltd
or
insl
sbb
repz
outsl
aam
add
mov
push
jl
jge
lahf
and
test
int
sub
ret
icebp
stos
pop
push
lahf
pusha
mov
in
inc
test
int3
aas
test
xor
rolb
pop
call
aam
push
xor
clc
fsubs
iret
inc
xchg
sbb
lea
mov
out
cltd
push
add
js
xchg
fnstsw
add
mov
adc
aas
push
clc
pushf
xchg
fstpl
test
cmc
call
enter
xor
fidivl
cwtl
xchg
cmp
enter
aaa
dec
lods
pop
inc
dec
mov
lds
jmp
mov
rep
push
inc
sub
xchg
dec
scas
sbb
jo
add
mov
mov
cwtl
mov
out
sub
inc
cmpsl
or
scas
out
sub
cld
js
shll
cmp
xchg
mov
fisttpll
cmp
sbb
test
lahf
push
es
in
addr16
fdivrl
ja
lods
mov
daa
adc
pop
popa
dec
mov
pop
imul
in
cmp
ds
jno
mov
movsl
and
jecxz
leave
mov
insl
push
std
jge
mov
cld
mov
call
out
bswap
mov
ja
imull
ja
add
sbb
jo
cmp
stc
fs
and
int3
std
inc
push
xor
aam
sbbl
hlt
icebp
int3
outsb
inc
iret
aad
cmpsb
outsb
lahf
or
inc
and
and
adcb
push
int
add
jle
ljmp
popa
leave
mov
adc
push
add
dec
in
sub
in
stos
xor
inc
inc
cmp
xchg
mov
and
cmp
xchg
aad
imul
push
enter
mov
jno
xorl
ljmp
test
arpl
mov
adc
imulb
clc
pop
sbb
mov
jb
outsl
xchg
data16
mov
insl
mov
mov
jnp
ljmp
dec
xchg
mov
in
sahf
pop
xor
jnp
sahf
push
es
mov
jmp
lcall
xchg
out
lods
rorl
mov
mov
andb
mov
test
mov
movntq
sub
push
aam
mov
neg
jecxz
addl
cmpsl
adc
xchg
and
xchg
inc
pop
rcrb
add
sub
mov
sbb
adc
mov
xchg
roll
in
movsl
pop
roll
lret
sbb
mov
xchg
jg
cmp
jmp
inc
cld
insb
sti
fimull
outsb
ds
mov
inc
scas
sbb
aad
outsl
push
mov
push
jmp
cmpsl
mov
dec
sub
pop
aad
call
popw
xchg
sub
stc
je
mov
int3
and
inc
addl
sub
call
int
mov
rorb
int3
cmp
pusha
cmp
jb
xchg
in
xchg
testl
adc
push
jmp
mov
mov
inc
xor
js
fwait
test
popa
js
xchg
push
clc
jecxz
mov
repnz
fwait
movsb
movsl
fmuls
shll
and
inc
punpcklbw
sbb
call
add
in
sub
stos
pop
insl
push
stos
jb
xorb
mov
rcll
jnp
xchg
dec
adc
lea
xor
xchg
outsb
and
xchg
adc
inc
xlat
dec
jge
out
sub
stos
daa
mov
dec
or
gs
pushf
sub
andb
jp
cs
sahf
sbb
mov
push
add
or
mov
divl
xchg
loop
jecxz
rclb
inc
mov
dec
mov
adc
arpl
popa
pop
lods
jne
mov
fcoms
xchg
into
push
iret
sti
dec
sbb
jne
pushf
xor
inc
mov
dec
scas
xor
test
jp
or
mov
inc
daa
hlt
test
jg
fdivs
push
test
jmp
inc
cmove
clc
inc
cmovno
sub
lea
dec
pop
inc
cwtl
outsl
inc
jo
shlb
inc
lret
jne
test
inc
int
loop
push
jecxz
std
sbb
loopne
je
push
ja
adc
xchg
jp
loope
out
ss
mov
lea
popa
roll
mov
mov
jmp
in
jno
and
push
dec
ja
cld
push
mov
je
or
cmpsb
mov
sbbb
sub
mov
cwtl
lcall
dec
xchg
push
fsubrl
and
loop
sbb
sti
dec
or
jmp
stos
or
test
sbbl
and
dec
imul
dec
lock
orl
mov
outsb
hlt
and
jo
push
cmp
loop
or
push
std
std
nop
cmp
repz
xchg
divl
jmp
fistpl
iret
mov
sub
ds
jnp
insb
jo
cmpb
mov
lea
movsl
stos
adc
cli
push
cmp
cld
lds
push
addr16
push
mov
into
shll
shrb
push
cmp
insl
cmc
mov
sbb
dec
cmp
faddl
pusha
enter
inc
push
div
jb
cltd
and
lcall
popf
xchg
lods
mov
or
leave
ljmp
int
fisttpl
loop
lret
nopl
dec
sbb
test
aad
pop
adc
sub
or
inc
enter
ficomps
or
std
aam
clc
mov
cmpsb
scas
rcrl
add
dec
iret
sub
cli
loope
adc
iret
push
xchg
xor
lahf
xor
daa
sbb
push
arpl
fwait
cmp
daa
orl
lret
jae
mov
sub
jne
xchg
mov
jb
out
xor
fisubl
pop
fldl
adc
sub
push
pusha
repnz
sub
xchg
xor
jg
jo
pop
pop
ror
repnz
inc
shlb
mov
add
rolb
push
mov
mov
adc
push
ret
xor
add
rolb
push
mov
mov
adc
push
ret
xor
add
rolb
push
mov
mov
push
jae
arpl
push
movb
mov
add
fdivrs
ret
stos
sub
jge
insl
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
