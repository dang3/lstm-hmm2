aad
add
jp
add
add
add
add
pop
add
pusha
add
jp
add
add
pop
or
adc
jmp
mov
add
add
pusha
imull
add
adc
add
cmp
dec
loopne
andl
add
cs
jle
rol
test
push
sub
cs
and
leave
mov
lods
sbb
shr
add
add
shlb
or
je
call
lods
std
stos
add
jae
adc
test
mov
xlat
iret
movsb
push
stc
pop
outsb
adc
gs
fcomp
jmp
insl
xor
adc
pop
loope
outsb
inc
push
mov
out
hlt
sub
xor
lods
mov
xchg
dec
pop
test
pusha
and
std
sbb
arpl
faddp
pop
popl
mov
mov
lods
mov
pop
ret
jmp
mov
es
mov
ljmp
daa
js
lods
test
mov
add
push
push
push
push
push
add
add
popl
mov
jle
push
mov
movl
movb
pop
mov
mov
add
pushl
mov
add
add
andl
jnp
call
lcall
dec
test
arpl
roll
data16
ret
cmpsl
int3
jmp
push
xor
pop
ret
bnd
xchg
inc
mov
rclb
stc
jmp
push
xchg
jge
fisubl
mov
je
dec
fnstcw
mov
mov
push
pop
xchg
sub
inc
pop
add
mov
add
pushl
popl
jbe
call
xor
aaa
lock
add
sarb
cmp
cmp
stc
sbb
icebp
and
sub
xchg
stos
into
icebp
mov
mov
fidivrl
flds
in
repz
cmp
into
and
and
mov
pop
sahf
jl
fs
mov
aas
add
stos
les
mov
lret
adc
or
xor
sbb
in
dec
sbb
adc
testb
rorl
rol
jmp
dec
pop
jb
add
and
inc
push
and
dec
sub
or
add
cmp
jne
cmp
je
inc
xorl
cmp
jb
mov
add
movzwl
mov
add
mov
jmp
pop
lods
xchg
jecxz
push
sbb
es
lods
addr16
adc
mov
insb
outsl
in
mov
out
mov
mov
mov
mov
jne
repnz
loopne
xor
xor
in
out
dec
repnz
out
push
leave
jae
inc
insb
out
repnz
data16
mov
cltd
jmp
sub
cmp
fdivr
std
pop
in
inc
ret
mov
add
pop
cmp
jbe
cmp
jae
pushl
pushl
push
not
inc
lea
xor
mov
xor
xchg
addl
pushl
popl
jb
call
push
adc
cmp
pop
clc
aam
clc
test
inc
shll
imul
movsb
pop
jle
or
mov
js
adc
clc
fwait
push
hlt
jb
das
pop
and
cmp
scas
enter
mov
dec
scas
orb
inc
out
inc
mov
push
out
popf
add
in
jae
test
jge
clc
xor
cmp
adc
jne
call
pushl
popl
jo
call
mov
xor
mov
xor
cmpsb
in
iret
cmp
cmp
mov
insb
sub
pop
and
mov
and
icebp
mov
jne
jo
pop
jle
add
pushf
outsb
xchg
lods
iret
push
dec
mov
movsl
ret
jp
movsl
push
mov
in
and
std
dec
inc
pusha
and
sbbb
popl
call
pop
pop
pop
pop
leave
ret
push
popl
call
test
jne
ret
push
jmp
mov
testb
ljmp
inc
push
adc
push
inc
bound
clc
out
mov
pop
push
jns
imul
sub
add
add
push
cmp
arpl
fisttpl
xchg
daa
or
into
pop
ret
push
stc
jmp
cld
in
daa
test
icebp
ficompl
xor
add
fsubr
cmpsb
jns
mov
repz
xlat
ss
xor
pop
rolb
fnstenv
cmp
fsubr
push
sti
call
push
mov
sub
xchg
addl
push
call
subw
push
push
inc
inc
mov
mov
mov
sub
xchg
mov
pusha
call
mov
push
push
dec
mov
xor
pop
addl
push
call
cmpl
jne
jmp
jmp
add
jno
push
mov
subw
pop
popa
pusha
call
mov
push
push
add
xor
shl
shr
mov
mov
mov
xor
pop
addl
push
call
sub
mov
mov
xor
xor
push
or
or
popl
mov
rol
inc
dec
jne
cmp
je
cmp
jne
popa
shl
push
jmp
mov
mov
scas
add
sbb
mov
lahf
lcall
mov
rcrl
data16
jae
sti
cs
cmp
add
ret
xor
bnd
inc
stos
inc
pop
rolb
lea
jb
xchg
lahf
mov
xchg
push
mov
stos
xchg
outsl
mov
aas
pop
stos
fmuls
xor
cmp
leave
push
call
int3
jmp
popa
shl
push
popl
push
xor
push
call
push
mov
push
popl
jge
call
out
out
jno
pop
fcompl
and
xor
stos
lea
mov
mov
in
fiaddl
jo
je
add
int
cwtl
mov
and
or
fsts
push
test
repnz
xor
xchg
repnz
mov
popl
push
jmp
pop
mov
push
push
push
jmp
fwait
aaa
jg
cmp
incb
dec
jnp
ja
setle
outsb
sbb
cmc
add
inc
out
push
xchg
jo
dec
and
dec
je
imul
and
loop
stos
int3
sbb
push
jmp
mov
sarl
icebp
lods
es
pushf
xchg
sub
mov
cmpsb
cmp
xor
pusha
mov
mov
add
lods
mov
das
jne
daa
mov
mov
rep
pop
pop
push
add
rol
add
mov
xor
xchg
push
add
add
lea
add
mov
add
xchg
push
xor
add
popl
mov
xor
jmp
sub
mov
add
sub
mov
add
andw
jno
call
popf
push
cmp
adc
cmp
push
aad
loopne
shl
cltd
mov
insl
sbb
mov
xchg
popa
repz
mov
test
inc
clc
mov
sub
aaa
js,pn
movsb
lahf
lret
and
cmpsb
ret
add
jbe
lds
adc
rorl
cld
adc
pop
sbb
lods
pop
or
aas
loopne
lds
sbb
fcoms
sub
adc
inc
mov
popl
or
jne
add
jmp
mov
jmp
daa
adc
and
jge
or
jb
movsb
mov
inc
pop
push
mov
pop
inc
aad
insb
out
dec
push
xor
lret
xor
pop
xchg
add
mov
stc
bound
adc
mov
shlb
in
sub
xchg
and
jns
fidivl
fsubr
ja
enter
inc
movq
sub
test
sbb
sub
repnz
cmp
inc
imul
pop
xor
ret
xor
dec
lret
pop
push
aaa
cmp
cmp
movsl
cmp
shr
shl
mov
jmp
sub
mov
cmp
jne
mov
add
cmpw
jne
ret
call
pop
dec
pop
mov
fists
sahf
movsl
enter
out
pop
push
xchg
jge
mov
ja
lods
int3
fidivs
add
aas
push
clc
lahf
dec
cmp
mov
sti
mov
xchg
lahf
mov
mov
dec
xchg
pushf
loope
jae
dec
jl
jl
and
inc
mov
mov
sbb
insl
push
xor
fdivrl
jmp
gs
mov
sub
dec
popf
jbe
and
cmpsl
jae
xchg
insl
lods
cmpsl
jae
add
lock
ret
shll
es
push
lock
jae
pop
mov
mov
adc
sub
jae
movsb
orb
jg
adc
cmp
xchg
std
aam
adc
fmuls
inc
lods
cmpsb
xor
xchg
in
sub
fnsave
test
pop
mov
nop
jmp
cwtl
ljmp
push
in
pop
fisubl
das
sbb
jp
insb
imul
enter
fisubs
pop
imul
and
mov
cmpsl
push
lahf
mov
mov
pop
inc
lods
pop
and
repnz
xor
hlt
dec
dec
popa
ljmp
outsl
and
sbb
mov
data16
inc
xchg
add
mov
xor
idivb
pop
mov
jno
pop
mov
jno
addl
clc
stos
and
rcl
or
mov
je
and
fcoms
in
xor
pop
xor
jbe
outsl
mov
dec
cltd
xchg
das
insl
bound
xchg
mov
imul
mov
rcrl
aaa
mov
adc
repz
mov
add
and
jbe
mov
sub
mov
jno
pop
mov
lds
mov
mov
inc
sub
cmp
icebp
hlt
add
movsl
dec
stos
movsb
jne
dec
fisubs
xchg
test
mov
sub
into
mov
test
pop
sub
nop
cmp
mov
jne
imul
imul
jge
lea
mov
imul
jno
mov
cmp
jmp
push
ds
cwtl
push
imulb
ljmp
sbb
stc
loope
hlt
xor
or
aad
dec
or
cld
pop
mov
test
aam
js
mov
ret
shlb
stos
sbb
dec
inc
cmpsl
jae
pop
inc
sbb
dec
insb
push
mov
fldt
lret
cmp
inc
jp
push
in
popa
js
inc
hlt
popa
cmpsl
xchg
or
mov
pusha
fsubs
popf
lcall
sub
or
dec
jnp
popa
push
scas
lods
scas
xchg
xchg
or
fstl
xchg
test
xchg
ja
and
hlt
dec
fwait
pop
or
inc
ja
cmpsl
lret
pop
dec
pop
mov
or
jecxz
test
xchg
loop
adc
xchg
stos
mov
dec
repnz
out
xor
pop
mov
mov
pusha
push
mov
xor
popa
arpl
dec
inc
cmpsl
jae
dec
pop
inc
pop
stos
xchg
gs
push
mov
xchg
xchg
pop
jmp
pusha
inc
mov
xor
popa
cmpsl
std
cmc
icebp
add
mov
or
pop
repz
pop
fs
sbb
lds
fbld
or
add
mov
sar
out
xor
pop
mov
pop
je
xor
std
jae
sbbb
pop
xor
repnz
add
add
test
insb
in
das
loop
mov
add
cmpsl
stos
xchg
imul
ret
jae
pop
push
or
les
sub
mov
mov
mov
cmp
push
xchg
mov
dec
pop
cmpsl
jae
daa
push
in
mov
std
in
sbb
mov
lahf
or
fsub
cltd
or
jge
dec
les
mull
shll
mov
mov
scas
dec
mov
inc
inc
add
dec
mov
imul
inc
mov
sbb
aas
cmpsb
enter
movsb
out
jo
jge
repnz
ret
jp
call
test
mov
imul
insl
cmp
pop
rcrb
popa
mov
in
popa
cmpsl
jo
into
shrl
adc
insb
ss
clc
idivb
mov
movsb
pop
sbb
sub
xchg
mov
das
mov
rcrb
fistpll
imul
movsb
pop
pop
mov
or
stos
shl
and
fidivs
add
movsb
insl
insb
pop
push
xchg
ja
fidivl
cmp
dec
mov
addb
lods
out
jge
or
cvtdq2ps
sbb
outsb
popa
adc
push
leave
sub
push
mov
jg
sub
sti
inc
aad
insb
xor
mov
lock
xor
popa
cmpsl
xor
pop
mov
iret
jbe
aam
pop
cmp
int3
pop
pop
pushl
lock
dec
lods
xchg
testl
fst
into
into
add
and
jle
mov
aad
xchg
mov
add
movsb
das
dec
test
pop
out
add
sub
jae
popa
bsr
pop
pusha
sub
ds
pop
dec
ss
fdivl
push
mov
scas
or
fs
push
es
jmp
test
push
pop
cld
cltd
aaa
adc
adc
mov
and
mov
xor
xchg
jno
sti
enter
mov
push
or
jmp
xor
jbe
sbb
push
mov
lock
lret
in
sbb
mov
add
cs
sub
push
xchg
pop
lcall
rclb
cmp
sub
cmp
mov
popf
out
adc
pop
or
sub
or
cmpsl
fnop
mov
jae
pop
in
aaa
dec
out
push
lcall
iret
add
cwtl
xor
mov
aam
mov
add
mov
repnz
jnp
add
mov
aad
push
add
xorb
mov
or
pop
push
mov
push
les
imul
cwtl
push
fcoms
push
ja
pop
cwtl
and
call
mov
testl
in
test
in
das
fstl
fildl
adc
jo
popa
cmpsl
insl
insb
jno
pop
cmp
sub
leave
pop
cmp
popa
jno
mov
dec
push
data16
dec
mov
sub
jbe
or
mov
mov
dec
mov
adc
icebp
stos
mov
popa
es
sbb
gs
jge
sarl
shlb
adc
mov
shrb
sbb
cli
xchg
pop
mov
testl
jmp
rol
popa
dec
cmc
fcmovu
adc
or
pop
jmp
jae
xchg
in
pop
adc
push
push
ss
lcall
pop
dec
xchg
es
push
pop
in
push
lcall
lret
sub
andb
push
test
xchg
mov
add
inc
mov
addr16
cmp
mov
pop
mov
ja
fbstp
mov
and
shl
inc
mov
mov
in
mov
aas
add
fstps
imul
loope
jo
cmp
out
mov
cmp
adc
andl
dec
cmpsl
jae
cmp
lar
les
mov
pop
and
test
and
add
mov
mov
pop
push
int
push
dec
call
mov
xor
xor
repnz
stos
lcall
gs
and
jge
push
in
sbb
sti
ss
cmp
pop
mov
aam
gs
lahf
mov
loopne
repnz
shl
cmp
inc
popf
xor
in
adc
pop
mov
mov
mov
mov
jae
jno
xchg
cmpsl
jae
out
cli
adc
je
adc
pop
jbe
jmpw
sarb
stc
mov
xorl
mov
test
xor
push
mov
mov
mov
loope
data16
xchg
jmp
mov
or
xor
and
inc
jp
fisttpl
adc
dec
fstps
pushf
and
mov
les
jl
sbb
lods
mov
test
pop
or
xor
add
adc
inc
add
add
addr16
nop
xchg
jno
pop
je
addr16
mov
adcl
dec
shlb
dec
pushf
add
das
jae
sbb
pop
test
pop
mov
outsb
adc
out
dec
mov
mov
scas
inc
lret
push
xor
dec
add
ficoml
xchg
rcll
adc
outsb
xchg
js
imul
push
mov
arpl
pop
mov
ret
xchg
jns
mov
sti
push
pop
mov
push
rcll
pop
cwtl
pop
mov
sbb
cld
gs
movsb
mov
ss
cmpsl
hlt
add
cwtl
fnsave
cli
out
lahf
dec
xlat
pop
mov
sarb
call
xlat
fucom
add
jno
pop
out
dec
pop
cmpsl
jae
sahf
loope
and
stc
in
cmc
pushf
arpl
cmp
jl
inc
lea
les
out
mov
fwait
add
js
add
pop
ss
pusha
pop
xchg
xchg
adcb
test
call
testl
arpl
jb
test
clc
mov
sti
lret
mov
cmp
cmp
int
or
fsubrl
pop
repz
insl
push
push
jmp
stos
add
cmp
sub
clc
loop
les
xchg
push
leave
lcall
sub
jne
cmpb
adc
mov
aaa
fisubrs
insl
pop
pop
jno
push
jp
arpl
xchg
aam
sbb
rclb
xchg
inc
cmpsb
adc
ret
cmc
out
sbb
fs
xor
or
mov
mov
shl
cmp
repnz
andl
pop
mov
push
lds
mov
mov
cmp
jno
pop
mov
lods
ret
cmp
xor
jge
icebp
sbb
jno
pop
add
or
or
test
in
or
out
add
outsl
rorb
sbb
mov
and
or
pop
loope
push
daa
mov
or
pop
mov
jno
ss
push
pop
aaa
fwait
mov
lret
jo
fucomi
jp
jle
push
xor
aam
insb
xchg
xor
nop
dec
pop
mov
hlt
xchg
dec
mov
jno
mov
jae
cwtl
cmp
pop
and
enter
fsts
out
xlat
rolb
adc
and
bound
mov
and
mov
jns
xor
rol
mov
in
adc
jae
cmovp
popf
pop
xchg
adc
jbe
push
jnp
mov
movsb
mov
mov
push
repz
mov
sbb
out
outsb
dec
int3
shrl
add
pushf
jb
mov
out
out
pop
pusha
jecxz
pop
outsl
jnp
popa
and
insl
mov
sbb
and
hlt
fnsave
xchg
movsb
jle
cmp
ljmp
add
and
mov
outsl
inc
mov
push
fadd
fcmovbe
pop
ss
xchg
daa
jmp
pushl
adc
mov
mov
adc
add
stc
lret
data16
pop
inc
fcomp
push
shr
and
enter
movsb
mov
jnp
into
mov
daa
add
mov
movsb
dec
adc
lock
idivl
jg
cmp
adc
imul
popl
xor
cmp
out
stos
fwait
jbe
mov
icebp
sub
cmpsb
repnz
push
addr16
outsb
pop
mov
mov
pusha
pushf
xchg
pop
xchg
out
hlt
xorl
cltd
pop
test
lahf
leave
fsub
cs
cmpsb
jmp
jno
cmpsl
pop
mov
add
sub
mov
sub
or
ljmp
dec
adc
jb
xchg
and
mov
fs
loop
mov
stos
out
adcl
test
insb
xchg
fcomps
cld
or
mov
mov
fwait
sub
xor
pop
and
enter
jae
ja
andl
pop
pop
mov
insb
rcr
jns
xor
mov
loopne
dec
icebp
loop
and
fst
or
mov
jmp
push
cmp
push
movsb
push
dec
addr16
loope
rcrl
ljmp
dec
int
movsb
daa
out
cmc
mov
imul
shrl
cmpsl
mov
rorl
mov
pop
stos
aam
mov
ja
js
pop
lret
aas
fdiv
cmp
lods
sbb
mov
mov
filds
movsb
adc
add
mov
popa
cmpsl
jmp
mov
or
loop
sub
push
jo
ljmp
dec
pop
cmpsl
jae
movsb
cld
inc
inc
imul
out
je
mov
lods
lock
pushf
pop
jecxz
fs
pop
jo
shlb
je
push
gs
fsubr
pop
test
nop
mov
mov
or
mov
adc
push
inc
pushl
sbb
adc
sbbl
mov
imul
xchg
mov
sbb
cmpsb
mov
outsb
dec
movl
scas
adc
cmpsl
stos
sub
adc
jo
pushf
dec
jb
dec
pop
sti
adc
cmpsb
ja
push
ljmp
jne
adc
clc
loopne
ret
or
pop
adc
das
cmpsl
enter
jl
adc
cmp
movb
inc
out
xchg
data16
cld
lds
fcmovu
shl
iret
xchg
or
jns
xchg
lods
aaa
dec
jo
pop
xchg
pop
pop
mov
push
sub
or
jns
cltd
xchg
or
xlat
dec
imul
jle
out
jmp
pushl
cmpsl
rclb
sub
jmp
mov
pop
push
mov
and
pop
xor
jge
arpl
xor
inc
scas
and
ds
out
notl
push
pop
mov
sarl
jmp
sub
pcmpeqw
jno
lds
adc
sbb
or
punpckldq
sub
dec
cmp
fs
pop
add
push
mov
or
into
xchg
sub
pop
mov
jnp
lds
into
mov
or
test
dec
faddl
shrl
ja
xorb
add
shll
jns
and
and
pop
popf
push
enter
jae
push
out
iret
outsl
cmc
jne
push
iret
fs
jmp
popa
testb
sahf
mov
sbb
insb
adc
inc
push
mov
jo
dec
lock
xor
out
test
dec
outsb
in
or
jge
dec
subl
inc
sahf
movsl
fists
rcrb
iret
mov
movsb
mov
pop
fidivl
push
inc
cmpsb
and
imul
cld
jg
xor
test
mov
mov
scas
insb
fwait
xchg
pushl
dec
mov
stos
addr16
pop
mov
je
popa
std
pop
mov
pop
movsb
pop
pop
mov
inc
aaa
lret
push
jno
add
jp
cmpsl
sub
cmp
mov
stos
clc
jne
ffree
or
mov
into
ja
mov
bound
inc
nop
out
daa
dec
loopne
xchg
aaa
loopne
ss
jg
push
jge
jecxz
idivb
lret
mov
fs
mov
stc
das
cmp
ljmp
jp
pop
adc
bound
jno
pop
test
fiadds
rorb
ficomps
xchg
movsl
pop
and
std
cmp
int3
mov
adc
sti
adc
ss
fs
dec
outsl
stos
inc
fists
mov
or
mov
jl
pushf
cmp
in
stos
jae
push
and
idivb
sbbl
pop
hlt
mov
adcb
mov
rolb
scas
mov
mov
jp
lcall
iret
fnstsw
icebp
shll
mov
xorl
mov
dec
mov
push
pop
ret
jae
lret
push
cs
cmp
lcall
sahf
div
dec
ret
je,pt
sbb
fmull
or
lret
and
cs
xlat
mov
sub
dec
dec
cmpsl
jae
push
cmp
mov
add
and
ficomps
lods
sub
cli
jne
sbb
add
cmpsb
and
aaa
je
loope
icebp
ds
icebp
xor
daa
cwtl
jge
rcrb
je
inc
inc
push
mov
mov
xchg
sub
pop
pop
cmp
xor
adc
leave
mov
rorb
stos
lret
into
adc
sub
movsb
pop
xchg
popa
out
sub
pcmpeqw
pop
adc
popa
psrlw
pop
mov
std
mov
pop
shl
cwtl
in
xor
stc
sub
cmpsb
xchg
mov
adc
or
stos
push
mov
lods
sbb
dec
xchg
mov
mov
mov
jae
out
adc
dec
and
frstor
xor
xor
lret
testb
xor
pop
mov
jno
adc
pop
xor
pop
ljmp
daa
cmpsl
jae
es
popa
cmpsl
cmpsb
xor
mov
in
and
inc
push
aas
xor
inc
clc
sbb
fisubl
dec
sbb
push
cmp
add
jae
or
mov
jne
pop
icebp
cmpsb
and
mov
sahf
mov
mov
adc
mov
mov
aad
out
sbb
adc
ret
push
scas
mov
test
adc
cmpb
inc
into
jo
xor
sbb
sbb
jbe
dec
int3
sbb
xchg
es
xchg
outsb
clc
lret
cmc
pop
xor
into
xchg
ja
adc
push
addr16
inc
pop
mov
cmpsl
jae
cmpsb
in
mov
push
ret
sub
stos
test
mov
xor
mov
aas
push
in
mov
mov
jne
inc
fsubs
cmpsl
daa
leave
xor
sub
push
loope
jo
mov
mov
ds
adc
lods
adc
mov
imul
sub
or
pop
mov
icebp
loopne
sbb
push
jmp
jmp
mov
pushf
mov
lret
adcl
mov
popf
xchg
cmpsl
and
aas
int
dec
or
pop
fbld
push
outsb
add
sub
setp
fcomip
cld
jecxz
fisubl
add
xor
add
mov
out
es
push
js
cmp
das
hlt
lret
jns
jno
lcall
test
push
mov
loope
jno
or
dec
sbb
jg
push
sbb
in
divb
pop
xor
sbb
mov
push
mov
inc
roll
add
mov
sbb
push
shll
cmpsb
sbb
fnsave
bound
sar
ret
mov
pushf
sbb
inc
fcmovnu
jl
dec
sub
mov
push
out
cmpsb
jb
pop
mov
mov
lcall
push
adc
xor
jbe
inc
aas
je
or
xchg
xor
mov
or
cli
push
dec
loop
stos
xorps
test
push
mov
cmp
push
xor
mov
fwait
cwtl
fdivl
adc
pmulhw
stos
xchg
js
sbb
fidivs
xchg
enter
jge
test
cmpsb
int
hlt
mov
cmp
incl
mov
fdivrl
push
lahf
or
or
in
add
icebp
enter
popa
sub
jne
mov
outsb
jo
dec
shlb
cmpsl
in
mov
popf
mov
int
xor
lods
xlat
sub
sub
hlt
fnsave
mov
nop
mov
pop
pop
movsb
sbbb
test
push
push
bound
inc
jo
outsb
jne
bnd
lods
mov
sarb
push
jno
pmullw
pop
dec
stos
dec
adc
pop
mov
rolb
rclb
push
pop
mov
insl
scas
not
inc
sub
add
faddl
mov
iret
loopne
lds
xor
das
jg
aaa
pop
in
xchg
gs
jg
lea
int3
jns
push
shll
leave
repnz
movsb
jb
test
mov
sbb
push
mov
js
pcmpeqw
mov
pop
mov
cmp
test
push
sbb
loop
xor
jne
jmp
sub
scas
cmp
pop
sbb
pop
and
cmp
js
pop
daa
incb
cmp
lea
jb
cmpsl
jae
dec
pop
aad
dec
arpl
insl
xchg
cli
out
lea
pusha
pushf
scas
jb
loope
fisubl
cmpsl
jle
jecxz
mov
xchg
xchg
pop
mov
and
xchg
iret
and
dec
divl
sub
in
adc
and
push
sbb
pop
adcb
mov
stos
stos
call
dec
push
inc
dec
xor
mov
pop
mov
push
aad
jmp
loopne
insb
mov
in
loop
stos
mov
fs
sub
sub
jno
sbb
mov
adc
jae
pop
or
into
shll
cs
pop
mov
imul
fwait
shrb
dec
mov
subl
jmp
jae
jg
adc
cmpsl
xchg
dec
imul
inc
fistpll
ja
dec
out
sub
jmp
imul
sub
hlt
add
pop
les
stc
jp
stos
xchg
imul
sub
jno,pn
sbb
clc
sbb
jmp
dec
pusha
jl
push
fimull
aam
xorb
jbe
minps
pop
popa
mov
notl
fmull
movsl
mov
pop
push
decb
out
std
cmc
int3
cmp
mov
shrl
mov
test
xor
popa
lds
pop
rolb
pop
test
pop
mov
lds
pop
in
pop
stc
mulb
xchg
mov
inc
popa
cmpsl
xor
mov
mov
jnp
push
mov
and
pop
test
lds
dec
mov
mov
aas
ljmp
cs
hlt
outsl
and
jp
pop
es
xchg
in
xor
hlt
arpl
ret
stos
push
inc
mov
add
jl
jge
sarl
rorb
jae
cmp
test
and
cmp
insb
fistpll
aas
ljmp
shl
popa
cs
ja
popf
ret
xchg
jbe
test
adc
cmp
jge
loopne
push
mov
xchg
ljmp
lea
insl
jmp
pop
ja
js
pop
bound
pop
cmp
sbb
popa
dec
imul
ljmp
push
adc
shll
pop
dec
adc
mov
jno
pop
or
mov
js
mov
adc
pusha
cmp
cmc
push
and
insl
cmc
orb
ficoms
push
jle
pop
mov
fdiv
jle
jne
adc
pop
lods
out
adc
xchg
adc
jp
pop
mov
enter
mov
cltd
adc
fidivl
pop
pop
adc
mov
mov
ljmp
in
mov
int3
pop
cmp
push
push
jle
cld
add
jae
jns
les
enter
push
pusha
arpl
mov
notl
mov
jle
xchg
mov
fwait
pop
rcll
cltd
fldl
mov
jp
inc
adc
mov
in
sub
fwait
and
pop
xor
mov
cmpb
enter
lret
mov
dec
pushl
std
pop
jo
mov
pop
lahf
stos
aam
das
loopne
inc
xchg
xor
sub
inc
mov
add
sbb
sub
shl
cli
xor
ds
lock
shll
andb
out
into
out
cmp
jge
bound
add
sub
add
movsl
jg
or
pop
movsl
movsl
push
loopne
mov
ds
inc
pop
mov
pop
xchg
aam
push
cltd
pusha
in
push
fstpt
int3
shll
xchg
pop
icebp
in
mov
loope
dec
push
jnp
lock
adc
in
test
xor
loopne
pusha
cmpsl
iret
shlb
mov
leave
test
sub
or
pop
mov
dec
pop
jne
dec
cli
dec
pop
fidivs
orl
push
rcrl
sub
dec
jne
iret
mov
mov
std
cmp
push
push
insl
inc
loop
cmpsl
in
movsl
inc
ret
jecxz
mov
mov
cmp
mov
leave
adc
adc
dec
adc
adc
add
movsl
lret
sarb
pop
jns
push
icebp
dec
xchg
mov
mov
and
sbb
lret
lahf
add
mov
add
or
ds
hlt
in
insl
fcmovnbe
pop
aas
loopne
daa
ret
cmp
mov
jo
ja
sub
jmp
cmp
ljmp
xor
mov
pop
loope
mov
jno
inc
sbb
das
test
xchg
pop
add
xlat
mov
jge
repz
notb
sub
push
stos
pop
pop
or
mov
xor
inc
pop
mov
insl
inc
xchg
insl
loope
or
xor
dec
movsl
xor
mov
xor
and
fcompl
rcrl
lret
mov
jge
jb
bound
add
xor
ds
mov
mov
cmpsl
jae
mov
inc
roll
sbb
test
push
dec
mov
push
pop
mov
mov
in
lcall
insl
mov
mov
cmp
xor
jbe
dec
sbb
pop
jge
or
sbb
add
mov
outsl
out
mov
cs
or
les
mov
mov
rolb
test
jmp
lcall
rolb
and
popa
jnp
pusha
hlt
fistpl
dec
ss
in
pop
arpl
xor
pop
xchg
sub
dec
cmp
sub
mov
mov
pop
lret
xor
outsb
out
jg
adc
sub
pcmpeqw
xchg
pop
mov
inc
insb
test
fisubs
shr
or
cmpsl
xor
cmpsl
jae
aaa
insl
cmp
cmpsl
jae
fildll
and
cmpsl
jae
es
popa
cmpsl
pop
test
pop
mov
xor
rcrb
sbb
scas
pop
pop
cwtl
add
inc
in
push
mov
fwait
mov
insb
and
repnz
sbb
clc
test
mov
sub
sahf
ss
pop
cmp
stos
jae
pop
loope
gs
test
jno
pop
mov
pop
das
pop
mov
xchg
mov
pop
mov
xchg
sbb
add
mov
mov
jno
inc
push
mov
push
inc
pop
lea
adc
jns
pop
or
sub
jns
inc
testb
and
cmpsb
jg
jbe
add
sbb
cmp
mov
sahf
pop
pop
mov
ja
jle
mov
and
sbb
push
leave
stos
mov
cmp
cld
pop
or
outsl
jecxz
cs
pop
mov
jno
push
mov
jno
sbb
nop
pop
pop
mov
xorb
callw
test
mov
adc
outsl
cmpsl
jae
pcmpgtw
out
cmpsl
jae
shll
popa
sub
add
mov
sar
add
adc
jns
push
xor
das
dec
pushl
fs
pop
and
mov
jle
jbe
out
sub
pop
xchg
pop
mov
and
mov
icebp
xlat
dec
push
sbb
add
mov
xor
pop
mov
clc
xchg
sub
dec
int
xor
mov
pop
mov
insl
int3
test
in
ja
movq
mov
jno
out
rcrl
lods
test
pop
mov
dec
adc
jae
pop
push
add
shlb
mov
hlt
out
aad
or
fcomps
push
pop
pop
adc
shlb
push
cmp
pop
in
into
mov
rclb
sbb
ja
xchg
push
insb
cmp
rorl
lea
addr16
push
mov
jmp
xor
pop
addr16
mov
cmpsl
imul
sbb
cmc
mov
pop
cld
xchg
stos
or
adc
bound
add
jp
je
inc
xchg
add
xchg
mov
adc
jnp
js
pop
sub
sbb
aas
jg
in
addr16
stos
lea
sub
andl
add
popa
cmpsl
lock
les
push
inc
cmp
jno
cmp
dec
inc
sbb
and
inc
sub
insl
add
popa
es
pop
stc
sub
push
ret
xchg
adcb
shrb
or
pop
sbb
outsl
cmpb
fsubs
xchg
pop
scas
dec
sbb
cmp
mov
test
cmpsl
je
cmp
icebp
xchg
aas
xchg
xor
lret
sub
pcmpeqw
adcb
inc
pop
adc
jae
pop
fadds
dec
shl
mov
lret
cmpb
xor
xchg
fdivrs
mov
jecxz
xor
mov
jecxz
jp
enter
push
jno
push
in
ret
pop
ds
jnp
call
js
push
jb
icebp
xor
sub
test
pop
pslld
push
mov
push
and
mov
jecxz
lods
ds
inc
shlb
ret
push
cmp
das
scas
mov
pusha
fisubrs
pop
fdivl
cmp
std
mov
clc
xchg
cmpl
dec
pop
and
popf
pop
jmp
pop
mov
mov
pop
mov
add
aad
mov
in
dec
shll
std
rcrl
jg
enter
pop
xor
pop
mov
jno
cmpsl
frndint
push
cmp
leave
cltd
mov
and
adc
xor
mov
in
out
jmp
jae
fcmovnu
fstpl
aam
mov
or
and
cmp
xchg
clc
nop
inc
arpl
jp
jp
jg
inc
mov
push
movsb
lahf
stos
adc
xlat
pop
arpl
push
loope
fldl
jae
sbb
dec
je
or
mov
test
dec
dec
jne
mov
push
inc
mov
lret
in
cmp
mov
dec
cs
add
jbe
add
enter
frstor
cmpsl
cmc
xor
outsb
mov
hlt
add
gs
nop
mov
xor
mov
outsb
arpl
mov
fcoml
push
testl
cmc
mov
fldl
dec
cli
jo
std
jecxz
and
sbb
and
out
scas
and
pop
sbb
and
and
jbe
xchg
fisubrs
xor
les
dec
dec
cmpsl
jae
mov
shl
and
cmp
push
pop
outsb
mov
out
mov
adc
fs
mov
pop
xchg
imulb
add
mov
movsl
xorl
and
mov
adc
call
dec
hlt
mov
jae
add
mov
les
add
pop
pop
cmpsl
iret
pushf
lock
adc
dec
imul
gs
pop
outsl
dec
out
stc
mov
jns
fs
add
cmc
xchg
call
stc
fistpll
or
ret
test
and
xchg
jl
in
cmp
mov
mov
cmpsl
jae
ds
loopne
flds
xor
jg
push
aam
fwait
cltd
ficomps
add
rcl
jnp
psubsb
loop
mov
mov
subb
xchg
cmpsl
daa
adc
jae
pop
pusha
or
test
scas
push
fstpl
push
enter
sar
fidivrl
mov
adc
jbe
inc
push
lds
pop
mov
pusha
sbb
cmpsl
cltd
jns
scas
pop
popf
daa
test
jne
or
icebp
mov
xor
lea
test
sub
cmpsb
imul
rcll
mov
cs
fstps
aas
and
mov
push
sbb
or
aaa
fiadds
mov
adcl
jmp
xchg
stos
mov
bound
jns
pop
mov
lcall
mov
cmp
movsb
inc
nop
sbb
dec
or
mov
stos
sbb
sub
pop
mov
xor
jne
mov
mov
mov
mov
into
push
mov
fidivl
cmpsl
decb
inc
mov
dec
add
std
cld
ds
mov
pop
sbb
cld
in
lahf
mov
ja
addb
and
fdivrl
js
sbb
pop
mov
andl
dec
loop
sub
adc
movsb
aam
xor
xor
sub
call
mov
lods
daa
jle
es
mov
dec
xor
push
sbbb
jl
mov
and
dec
lret
pop
dec
cmp
jae
jmp
call
xrelease
jge
push
jle
sub
mov
dec
jle
xchg
jno
pop
jbe
fstpl
data16
and
int3
aad
mov
mov
xor
dec
pop
and
negl
pusha
mov
lds
xorl
movsb
fisubrs
pushf
dec
bound
xchg
dec
into
shrl
cwtl
mov
mov
lods
jmp
dec
lcall
shlb
lds
movsb
in
ret
lea
pop
inc
xchg
add
jne
pop
enter
jae
lcall
jns
pop
mov
jno
pop
mov
loop
pop
pop
mov
int3
mov
lods
out
or
test
aas
push
jecxz
pop
pop
insl
adcl
add
sub
scas
pusha
pushf
mov
jno,pn
sbb
imul
sahf
mov
aam
stc
das
xchg
push
loopne
je
cmp
xchg
cs
mov
inc
xchg
mov
push
cmp
push
mov
scas
mov
test
cmp
shr
pop
andps
pop
dec
fisubs
cmpsl
sbb
shll
cmc
push
mov
xor
sub
jae
push
mov
sbb
mov
xchg
ljmp
mov
xchg
or
adc
mov
push
scas
adc
fdivs
and
aad
adc
dec
out
loop
sub
les
pop
or
enter
mov
jo
pop
adc
test
mov
push
pop
and
push
pop
aad
xchg
xor
jl
scas
into
pusha
dec
movsl
push
add
aad
outsb
ret
stc
sbb
fisubs
shll
xor
outsb
mov
lcall
les
xchg
test
les
inc
shll
push
aad
outsb
mov
dec
cwtl
push
enter
push
std
xchg
in
ss
lcall
lods
xor
std
fisubl
mov
fidivs
in
mov
inc
fsubl
cmpsl
sub
cld
roll
mov
ss
jo
inc
cmp
cmpsl
dec
insl
mov
and
cwtl
mov
cmp
push
pop
mov
lret
jbe
lahf
push
mov
adc
dec
jne
and
fiaddl
lock
enter
mov
jg
ss
dec
out
repz
jo
push
pop
ficomps
xchg
sub
dec
fcoms
inc
es
pop
mov
sub
cmc
lea
daa
push
pop
mov
pop
cmpsl
jae
sub
pop
loopne
fwait
mov
and
push
adc
or
fisttps
cltd
pop
mov
jb
scas
xor
mov
dec
inc
dec
mov
mov
jg
xlat
insl
cmp
pop
xor
popa
sarl
adc
pop
scas
push
jnp
pop
pop
outsb
ficoms
call
dec
int3
ret
add
jne
int
clc
ljmp
mov
into
imul
inc
bound
ja
in
call
mov
xor
inc
shlb
jb
addb
cli
or
jno
aam
decb
lods
pusha
jmp
test
out
mov
andl
popf
ljmp
decl
cmpsl
jae
and
push
sub
add
pusha
movsl
lcall
fwait
ja
mov
insl
aaa
pop
add
mov
movsl
xchg
pop
cmpsl
stc
xor
jecxz
pusha
cmpsl
pushl
add
sarl
cmc
pop
jle
fdivp
jne
fcmovu
xor
int
ss
push
mov
mov
negl
inc
enter
repz
inc
add
hlt
pop
jb
jae
pop
roll
jns
cmp
push
test
xchg
pop
pop
mov
out
cwtl
imul
jecxz
imul
bound
pop
xorb
loopne
enter
movsl
dec
adc
push
adc
xchg
mov
insb
adc
aad
and
stos
addr16
and
mov
loope
pop
gs
xlat
mov
subb
bound
mov
cmpsl
jae
mov
stos
fdivrl
popa
sub
jne
subb
out
sarl
or
mov
push
pop
mov
pushf
cmpsl
jae
cld
dec
lock
or
inc
iret
int
arpl
xchg
inc
mov
mov
imul
and
cwtl
cwtl
imul
xor
scas
push
xor
dec
jmp
in
lods
jae
add
outsb
mov
outsb
pop
addr16
lds
sub
in
nop
lcall
xchg
js
pop
xor
fs
xchg
jge
lahf
enter
inc
jo
lret
xor
inc
xchg
and
adc
mov
push
sbb
dec
cmpsl
movsb
jae
popf
push
enter
jae
andl
jno
shlb
and
push
inc
pop
sahf
or
in
je
push
ja
add
sbb
in
mov
clc
loop
dec
add
pop
sbb
xchg
pop
add
test
add
ja
das
mov
xchg
lds
insb
mov
jne
mov
add
into
xchg
jnp
adc
xchg
pop
outsb
sub
xor
pop
mov
jno
fdivr
je
shlb
out
and
movsb
mull
scas
call
mov
add
inc
cs
rcl
dec
into
cld
sub
add
and
jge
adc
outsb
cmp
cmpsl
jae
push
pop
mov
cmp
push
popa
jae
in
mov
je
cmpl
pop
pop
dec
pop
shr
mov
sti
popf
jns
scas
push
xor
sub
pop
push
icebp
ljmp
daa
sti
fdivl
inc
int3
popa
cmpsl
inc
dec
bound
test
out
adc
jb
cmp
jns
call
int3
jno
pop
mov
jl
iret
or
jb
adc
pop
sbb
scas
add
arpl
lock
or
mov
push
call
shr
insl
outsb
mov
popf
jae
add
inc
mov
jae
jo
leave
sub
adc
mov
push
xchg
jno
pop
aam
adc
jne
bound
sbb
sub
and
sbb
bound
les
inc
cmpsb
adc
movsb
dec
dec
aad
scas
push
mov
insl
xchg
pop
xor
outsl
cmp
dec
stc
cmp
out
aas
int
movsb
lods
adc
sub
pop
push
fists
icebp
nop
push
sbb
push
pop
arpl
repnz
cmp
sub
push
ljmp
mov
mov
in
mov
addr16
test
add
mov
mov
icebp
mov
cmpsl
jae
mov
repz
mov
xor
sub
mov
jo
sub
sbb
cmp
stc
mov
mov
popa
stos
addr16
popa
mov
pop
xor
ds
jae
stc
lcall
lea
cli
or
push
push
negl
mov
adcb
test
adc
insb
out
mov
notb
out
adc
stos
pop
movsl
jne
subb
adc
add
jmp
xchg
hlt
cmp
movsl
fs
into
or
xlat
or
sbb
iret
test
pop
pop
mov
cli
fs
mov
pop
jnp
mov
xchg
repnz
adc
scas
jmp
fs
mov
testb
jae
punpcklwd
out
test
jno
jp
sti
mov
mov
outsb
jecxz
out
arpl
pop
imul
rcrl
mov
es
mov
jno
pop
jle
cli
jp
mov
mov
and
dec
xchg
fwait
adc
mov
fnsave
xchg
pop
mov
and
popa
shlb
test
pop
test
mov
pop
xor
popa
pushf
xchg
lock
mov
ljmp
test
insb
sub
mov
sub
les
cmp
inc
lret
cmpsl
mov
push
pop
mov
xor
cmp
cli
jmp
or
mov
fstps
loop
push
notb
sar
test
xchg
push
xchg
mov
pusha
es
and
pop
pop
cmp
nop
xchg
pop
push
mov
out
dec
cmp
xchg
stos
mov
into
nop
xchg
jno
pop
mov
push
jmp
aad
xchg
out
pop
and
imul
ss
pop
lock
pop
xor
pop
mov
std
mov
mov
sti
insl
roll
mov
push
and
pusha
insb
xchg
add
bound
pop
lahf
xchg
lret
push
movsb
into
movsl
lods
cmpsb
ja
subl
test
leave
fcomps
outsl
or
mov
sbb
and
adc
gs
mov
mov
sub
xchg
pop
mov
jno
inc
shlb
cmpsl
push
mov
int3
add
xorb
jp
push
lds
add
iret
imul
inc
hlt
call
stos
push
sbb
sbb
loop
test
jno
insl
cmp
cmpsl
jae
cwtl
pop
cmp
cmpsl
xor
pop
mov
lret
enter
jl
mov
dec
mov
mov
fdivrs
jno
pop
jge
fcoml
xchg
into
add
xor
fs
lods
pop
cld
fs
in
mov
fs
xor
jnp
repz
dec
test
sbb
cmp
push
roll
stc
lods
cwtl
xlat
xchg
and
incb
bswap
jae
pop
jge
push
jo
cmp
scas
xchg
dec
cmp
jno
adc
ret
insb
or
negl
mov
jne
std
or
insl
cmp
cli
mov
push
insl
nop
add
pop
mov
pop
sub
clc
xorl
and
repnz
add
pop
sub
iret
popa
xor
std
enter
or
insl
fcmovnb
dec
pushl
mov
jb
pop
dec
loop
cmpsl
sahf
and
sbb
stos
rol
jp
pop
lods
in
or
mov
mov
aas
sbb
int3
jo
dec
movsb
addb
push
jmp
and
xchg
pop
jmp
push
ret
xchg
shll
sub
fimuls
jne
daa
fisubrl
xchg
pop
mov
jo
ljmp
pop
push
mov
out
sahf
nop
or
ret
repz
cmpsb
fsubp
mov
dec
in
cs
jge
jo
mov
cmpsl
jae
push
adc
and
imul
pop
fisubs
mov
xchg
sbb
shr
decb
xor
pop
mov
sarl
fisubl
dec
cmpsl
jae
pop
sarl
in
into
fwait
aas
xchg
lahf
fidivl
push
push
jb
inc
sbb
dec
dec
push
movsb
mov
add
std
ds
outsb
pop
mov
bound
out
shlb
lds
or
rclb
xlat
inc
aam
cmpsl
sbb
sbb
inc
cmp
xor
fnstcw
rcrb
pop
jo
ret
inc
mov
pop
pop
add
or
add
push
jge
cmp
pop
lods
or
xchg
push
bound
hlt
inc
xchg
xlat
repnz
lea
int
xchg
mov
lret
fsubs
dec
or
mov
jge
push
inc
roll
xor
add
sub
shlb
clc
xorb
adc
or
pop
mov
cmp
xor
xor
add
sbb
cld
outsb
out
stos
test
in
jmp
lds
xor
xchg
je
mov
mov
pop
fs
aas
inc
repnz
popa
in
dec
xor
xchg
mov
jno
sbb
stos
mov
stos
and
or
cld
push
retw
and
pop
mov
jge
clc
lods
xor
pop
sbb
xchg
jo
dec
jge
lahf
fistl
int
push
dec
call
stc
test
pushf
jb
stos
jg
fs
sub
adc
cmp
mov
mov
pop
add
lret
popa
dec
mov
xor
ret
dec
dec
aas
sub
fnsave
jnp
push
xchg
dec
pop
jmp
jae
adc
mov
mov
mov
enter
fisubrs
add
pop
add
in
mov
dec
jo
ljmp
pcmpeqb
mov
mov
cmpb
jnp
mov
mov
hlt
pop
jp
push
sbb
or
jmp
sbb
fmull
dec
jnp
inc
mov
fistpl
jl
sti
mov
cmp
lock
shrl
sbb
sub
inc
lods
in
aaa
popa
mov
push
cmpsl
jae
jno
cmc
lea
jbe
sahf
cmpsl
jmp
inc
ds
pop
out
jo
imul
in
jecxz
rcrl
lret
pop
sub
out
cmp
addl
mov
aad
pop
outsl
loopne
push
repnz
pop
or
sub
and
test
scas
into
cmp
dec
mov
outsb
cmp
push
mov
jg
adc
and
inc
xlat
mov
in
and
addr16
sbb
clc
bound
pop
mov
pop
lock
out
divb
repnz
cmp
arpl
sbb
aaa
jmp
mov
sti
adc
out
jp
mov
mov
loopne
jno
xchg
inc
cs
mov
jae
pop
movsb
repz
mov
rcll
mov
inc
add
mov
stos
add
push
push
push
mov
mov
xor
mov
or
das
push
push
jecxz
cmp
jle
or
cs
lea
adc
addb
inc
sub
lea
and
dec
std
sub
shll
pop
cmovb
cld
pop
jp
and
pop
mov
and
int
pop
dec
adc
ret
pop
cmp
scas
ds
jns
popa
push
imull
push
mov
pop
cmp
in
outsb
mov
cld
ljmp
pop
sahf
jno
insb
and
stos
sbb
and
xchg
adc
push
aad
cmp
lahf
mov
imul
in
insb
dec
cmp
rorl
and
jnp
mov
mov
mov
cwtl
fisubrl
cs
fstps
cmpsl
pop
mov
pop
mov
pop
mov
jge
sub
pushf
std
jmp
ja
repz
iret
add
popa
es
adc
out
fs
enter
movsb
or
xchg
jb
mov
xor
cmpsb
stos
clc
es
mov
jle
sub
imul
jp
das
repz
ret
sub
lcall
daa
movsb
pushf
fisubs
fs
inc
add
push
ljmp
in
aaa
leave
test
je
stos
dec
icebp
pop
testl
lods
inc
cmc
fisubrl
pop
popa
mov
and
lret
pop
popf
outsb
dec
adc
data16
xor
pop
mov
